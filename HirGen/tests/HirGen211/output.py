import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_68 = relay.var("var_68", dtype = "uint64", shape = (1, 16, 1))#candidate|68|(1, 16, 1)|var|uint64
var_69 = relay.var("var_69", dtype = "uint64", shape = (9, 16, 14))#candidate|69|(9, 16, 14)|var|uint64
bop_70 = relay.multiply(var_68.astype('uint64'), var_69.astype('uint64')) # shape=(9, 16, 14)
bop_82 = relay.logical_and(var_69.astype('bool'), var_68.astype('bool')) # shape=(9, 16, 14)
output = relay.Tuple([bop_70,bop_82,])
output2 = relay.Tuple([bop_70,bop_82,])
func_85 = relay.Function([var_68,var_69,], output)
mod['func_85'] = func_85
mod = relay.transform.InferType()(mod)
mutated_mod['func_85'] = func_85
mutated_mod = relay.transform.InferType()(mutated_mod)
func_85_call = mutated_mod.get_global_var('func_85')
var_87 = relay.var("var_87", dtype = "uint64", shape = (1, 16, 1))#candidate|87|(1, 16, 1)|var|uint64
var_88 = relay.var("var_88", dtype = "uint64", shape = (9, 16, 14))#candidate|88|(9, 16, 14)|var|uint64
call_86 = func_85_call(var_87,var_88,)
output = call_86
func_89 = relay.Function([var_87,var_88,], output)
mutated_mod['func_89'] = func_89
mutated_mod = relay.transform.InferType()(mutated_mod)
const_143 = relay.const([[[-7.190403,5.699248,7.812038,4.582170,6.416571,-9.035030],[0.918551,7.202887,5.456795,9.312063,8.768270,8.491220],[-7.549087,2.660836,3.077488,0.227231,-7.696950,3.881381]]], dtype = "float32")#candidate|143|(1, 3, 6)|const|float32
var_144 = relay.var("var_144", dtype = "float32", shape = (10, 3, 6))#candidate|144|(10, 3, 6)|var|float32
bop_145 = relay.greater(const_143.astype('bool'), var_144.astype('bool')) # shape=(10, 3, 6)
output = relay.Tuple([bop_145,])
output2 = relay.Tuple([bop_145,])
func_162 = relay.Function([var_144,], output)
mod['func_162'] = func_162
mod = relay.transform.InferType()(mod)
var_163 = relay.var("var_163", dtype = "float32", shape = (10, 3, 6))#candidate|163|(10, 3, 6)|var|float32
output = func_162(var_163)
func_164 = relay.Function([var_163], output)
mutated_mod['func_164'] = func_164
mutated_mod = relay.transform.InferType()(mutated_mod)
var_299 = relay.var("var_299", dtype = "int16", shape = (14, 8, 2))#candidate|299|(14, 8, 2)|var|int16
var_300 = relay.var("var_300", dtype = "int16", shape = (14, 8, 2))#candidate|300|(14, 8, 2)|var|int16
bop_301 = relay.bitwise_xor(var_299.astype('int16'), relay.reshape(var_300.astype('int16'), relay.shape_of(var_299))) # shape=(14, 8, 2)
uop_304 = relay.atan(var_300.astype('float64')) # shape=(14, 8, 2)
output = relay.Tuple([bop_301,uop_304,])
output2 = relay.Tuple([bop_301,uop_304,])
func_310 = relay.Function([var_299,var_300,], output)
mod['func_310'] = func_310
mod = relay.transform.InferType()(mod)
var_311 = relay.var("var_311", dtype = "int16", shape = (14, 8, 2))#candidate|311|(14, 8, 2)|var|int16
var_312 = relay.var("var_312", dtype = "int16", shape = (14, 8, 2))#candidate|312|(14, 8, 2)|var|int16
output = func_310(var_311,var_312,)
func_313 = relay.Function([var_311,var_312,], output)
mutated_mod['func_313'] = func_313
mutated_mod = relay.transform.InferType()(mutated_mod)
var_337 = relay.var("var_337", dtype = "float32", shape = (13, 10, 9))#candidate|337|(13, 10, 9)|var|float32
uop_338 = relay.asin(var_337.astype('float32')) # shape=(13, 10, 9)
var_351 = relay.var("var_351", dtype = "float32", shape = (13, 10, 9))#candidate|351|(13, 10, 9)|var|float32
bop_352 = relay.greater_equal(var_337.astype('bool'), relay.reshape(var_351.astype('bool'), relay.shape_of(var_337))) # shape=(13, 10, 9)
func_162_call = mod.get_global_var('func_162')
func_164_call = mutated_mod.get_global_var('func_164')
const_357 = relay.const([5.779214,-5.583941,6.497916,-0.873316,7.067951,-7.867104,5.098136,2.734156,-0.359541,3.456604,8.496052,-7.758969,8.752299,-8.398857,0.110672,5.247586,2.367151,2.863478,3.936949,-1.187469,9.351527,8.782852,-6.619963,4.265077,-6.540508,-3.135381,-1.129736,3.366678,8.723242,-2.659549,-3.977505,5.739288,5.387253,-4.664722,-7.224273,-3.760312,5.048560,-6.020422,-7.058586,-3.279515,-7.798520,-8.105665,-4.236211,5.869382,4.321070,-9.428637,0.194179,-9.422775,-6.829419,3.625869,2.364024,-9.985106,-0.082374,-5.758483,5.099732,5.255909,9.614551,-1.602112,6.211295,-9.105227,-7.916537,-5.652249,-9.926668,-2.859556,3.405494,-3.283271,3.435555,7.505756,6.191513,9.234452,-2.421191,8.090749,-1.514263,8.780497,1.388250,8.841051,-1.454870,5.294359,-0.091165,7.250035,9.925702,-8.991194,5.420380,-4.267062,3.981348,2.392092,-4.823445,1.913979,-9.468672,-8.135865,-0.268483,9.405584,2.356396,-7.558710,3.583007,9.369686,2.676940,0.148341,7.190502,6.679889,4.793710,1.322849,0.547372,6.794311,3.730008,9.731139,4.777899,5.621698,9.681192,-9.481386,9.279610,-1.116123,5.623664,1.713737,9.407896,4.124207,3.511937,2.152276,5.418154,3.811914,-4.076393,9.765906,7.855887,3.761288,-8.966699,5.043522,3.676463,-8.936495,-2.740256,-1.931887,-8.949550,-1.155426,-5.602810,2.073536,-4.011085,-7.281275,7.054359,-8.656426,-4.190551,-2.947529,1.379216,1.459717,1.677201,9.247399,6.462132,6.700293,9.866499,-0.627382,8.199847,-1.850863,-0.221342,4.521163,-7.613282,-0.881909,2.349576,3.621281,7.792149,0.909700,-7.127421,-1.459346,-7.774551,6.906142,7.990731,6.932858,2.567264,2.586232,1.748115,-8.310016,-6.212388,-0.349267,5.788122,8.239762,-4.975898,6.885547,8.737592,1.611632,6.527421,-7.995026,-7.040883,-9.701886], dtype = "float32")#candidate|357|(180,)|const|float32
call_356 = relay.TupleGetItem(func_162_call(relay.reshape(const_357.astype('float32'), [10, 3, 6])), 0)
call_358 = relay.TupleGetItem(func_164_call(relay.reshape(const_357.astype('float32'), [10, 3, 6])), 0)
func_162_call = mod.get_global_var('func_162')
func_164_call = mutated_mod.get_global_var('func_164')
call_367 = relay.TupleGetItem(func_162_call(relay.reshape(const_357.astype('float32'), [10, 3, 6])), 0)
call_368 = relay.TupleGetItem(func_164_call(relay.reshape(const_357.astype('float32'), [10, 3, 6])), 0)
var_369 = relay.var("var_369", dtype = "float32", shape = (13, 10, 9))#candidate|369|(13, 10, 9)|var|float32
bop_370 = relay.equal(uop_338.astype('bool'), relay.reshape(var_369.astype('bool'), relay.shape_of(uop_338))) # shape=(13, 10, 9)
func_310_call = mod.get_global_var('func_310')
func_313_call = mutated_mod.get_global_var('func_313')
const_382 = relay.const([7,-6,7,4,1,8,2,3,3,7,1,2,6,6,-1,1,-1,10,6,-1,-7,2,-8,1,4,1,3,-7,-7,4,-5,8,3,-5,4,-9,-3,-10,-5,4,9,5,9,9,-6,-4,10,-7,9,-4,-6,-4,4,-3,3,10,-3,3,8,7,-7,-5,10,9,-3,-4,8,1,-10,-4,-4,-6,-9,8,-3,9,4,4,-7,-7,10,3,-7,-1,-1,-3,-9,-1,-10,-4,-1,-2,1,1,10,10,9,-7,10,-7,-3,7,1,-8,8,-5,-7,6,-2,-5,6,2,1,-2,-9,5,9,-4,1,-3,-6,-7,-3,2,-9,8,4,-1,-3,-7,1,-2,3,3,8,10,2,8,10,1,-6,-7,2,3,-2,-6,2,5,6,9,2,1,-9,-9,6,10,-2,-2,8,10,8,3,7,-5,-6,10,-4,-1,-9,-1,2,-9,-2,-9,-6,8,-6,-4,-1,-8,1,-4,-9,7,-7,3,4,4,-2,-6,-3,-2,7,3,-3,4,1,9,5,7,6,3,-1,6,1,2,6,6,10,-1,2,-6,-7,4,3,-6,-1,-9,-6,-6,6,-5,-1,-6], dtype = "int16")#candidate|382|(224,)|const|int16
call_381 = relay.TupleGetItem(func_310_call(relay.reshape(const_382.astype('int16'), [14, 8, 2]), relay.reshape(const_382.astype('int16'), [14, 8, 2]), ), 1)
call_383 = relay.TupleGetItem(func_313_call(relay.reshape(const_382.astype('int16'), [14, 8, 2]), relay.reshape(const_382.astype('int16'), [14, 8, 2]), ), 1)
bop_390 = relay.minimum(uop_338.astype('uint8'), relay.reshape(var_369.astype('uint8'), relay.shape_of(uop_338))) # shape=(13, 10, 9)
bop_400 = relay.bitwise_and(var_351.astype('uint64'), relay.reshape(var_337.astype('uint64'), relay.shape_of(var_351))) # shape=(13, 10, 9)
func_162_call = mod.get_global_var('func_162')
func_164_call = mutated_mod.get_global_var('func_164')
call_431 = relay.TupleGetItem(func_162_call(relay.reshape(call_356.astype('float32'), [10, 3, 6])), 0)
call_432 = relay.TupleGetItem(func_164_call(relay.reshape(call_356.astype('float32'), [10, 3, 6])), 0)
func_162_call = mod.get_global_var('func_162')
func_164_call = mutated_mod.get_global_var('func_164')
call_439 = relay.TupleGetItem(func_162_call(relay.reshape(const_357.astype('float32'), [10, 3, 6])), 0)
call_440 = relay.TupleGetItem(func_164_call(relay.reshape(const_357.astype('float32'), [10, 3, 6])), 0)
output = relay.Tuple([bop_352,call_356,const_357,call_367,bop_370,call_381,const_382,bop_390,bop_400,call_431,call_439,])
output2 = relay.Tuple([bop_352,call_358,const_357,call_368,bop_370,call_383,const_382,bop_390,bop_400,call_432,call_440,])
func_441 = relay.Function([var_337,var_351,var_369,], output)
mod['func_441'] = func_441
mod = relay.transform.InferType()(mod)
var_442 = relay.var("var_442", dtype = "float32", shape = (13, 10, 9))#candidate|442|(13, 10, 9)|var|float32
var_443 = relay.var("var_443", dtype = "float32", shape = (13, 10, 9))#candidate|443|(13, 10, 9)|var|float32
var_444 = relay.var("var_444", dtype = "float32", shape = (13, 10, 9))#candidate|444|(13, 10, 9)|var|float32
output = func_441(var_442,var_443,var_444,)
func_445 = relay.Function([var_442,var_443,var_444,], output)
mutated_mod['func_445'] = func_445
mutated_mod = relay.transform.InferType()(mutated_mod)
var_492 = relay.var("var_492", dtype = "int8", shape = (15, 2, 13))#candidate|492|(15, 2, 13)|var|int8
var_493 = relay.var("var_493", dtype = "int8", shape = (15, 2, 13))#candidate|493|(15, 2, 13)|var|int8
bop_494 = relay.bitwise_and(var_492.astype('int8'), relay.reshape(var_493.astype('int8'), relay.shape_of(var_492))) # shape=(15, 2, 13)
bop_502 = relay.divide(var_493.astype('float32'), relay.reshape(var_492.astype('float32'), relay.shape_of(var_493))) # shape=(15, 2, 13)
bop_506 = relay.not_equal(var_493.astype('bool'), relay.reshape(var_492.astype('bool'), relay.shape_of(var_493))) # shape=(15, 2, 13)
bop_516 = relay.maximum(bop_494.astype('uint64'), relay.reshape(bop_506.astype('uint64'), relay.shape_of(bop_494))) # shape=(15, 2, 13)
output = relay.Tuple([bop_502,bop_516,])
output2 = relay.Tuple([bop_502,bop_516,])
func_528 = relay.Function([var_492,var_493,], output)
mod['func_528'] = func_528
mod = relay.transform.InferType()(mod)
mutated_mod['func_528'] = func_528
mutated_mod = relay.transform.InferType()(mutated_mod)
func_528_call = mutated_mod.get_global_var('func_528')
var_530 = relay.var("var_530", dtype = "int8", shape = (15, 2, 13))#candidate|530|(15, 2, 13)|var|int8
var_531 = relay.var("var_531", dtype = "int8", shape = (15, 2, 13))#candidate|531|(15, 2, 13)|var|int8
call_529 = func_528_call(var_530,var_531,)
output = call_529
func_532 = relay.Function([var_530,var_531,], output)
mutated_mod['func_532'] = func_532
mutated_mod = relay.transform.InferType()(mutated_mod)
var_655 = relay.var("var_655", dtype = "float32", shape = (9, 13, 8))#candidate|655|(9, 13, 8)|var|float32
uop_656 = relay.rsqrt(var_655.astype('float32')) # shape=(9, 13, 8)
output = uop_656
output2 = uop_656
func_658 = relay.Function([var_655,], output)
mod['func_658'] = func_658
mod = relay.transform.InferType()(mod)
var_659 = relay.var("var_659", dtype = "float32", shape = (9, 13, 8))#candidate|659|(9, 13, 8)|var|float32
output = func_658(var_659)
func_660 = relay.Function([var_659], output)
mutated_mod['func_660'] = func_660
mutated_mod = relay.transform.InferType()(mutated_mod)
var_798 = relay.var("var_798", dtype = "int64", shape = (12, 10, 3))#candidate|798|(12, 10, 3)|var|int64
var_799 = relay.var("var_799", dtype = "int64", shape = (12, 10, 3))#candidate|799|(12, 10, 3)|var|int64
bop_800 = relay.greater_equal(var_798.astype('bool'), relay.reshape(var_799.astype('bool'), relay.shape_of(var_798))) # shape=(12, 10, 3)
output = bop_800
output2 = bop_800
func_805 = relay.Function([var_798,var_799,], output)
mod['func_805'] = func_805
mod = relay.transform.InferType()(mod)
var_806 = relay.var("var_806", dtype = "int64", shape = (12, 10, 3))#candidate|806|(12, 10, 3)|var|int64
var_807 = relay.var("var_807", dtype = "int64", shape = (12, 10, 3))#candidate|807|(12, 10, 3)|var|int64
output = func_805(var_806,var_807,)
func_808 = relay.Function([var_806,var_807,], output)
mutated_mod['func_808'] = func_808
mutated_mod = relay.transform.InferType()(mutated_mod)
var_810 = relay.var("var_810", dtype = "float32", shape = (7, 16, 16))#candidate|810|(7, 16, 16)|var|float32
uop_811 = relay.cosh(var_810.astype('float32')) # shape=(7, 16, 16)
output = relay.Tuple([uop_811,])
output2 = relay.Tuple([uop_811,])
func_814 = relay.Function([var_810,], output)
mod['func_814'] = func_814
mod = relay.transform.InferType()(mod)
mutated_mod['func_814'] = func_814
mutated_mod = relay.transform.InferType()(mutated_mod)
var_815 = relay.var("var_815", dtype = "float32", shape = (7, 16, 16))#candidate|815|(7, 16, 16)|var|float32
func_814_call = mutated_mod.get_global_var('func_814')
call_816 = func_814_call(var_815)
output = call_816
func_817 = relay.Function([var_815], output)
mutated_mod['func_817'] = func_817
mutated_mod = relay.transform.InferType()(mutated_mod)
var_979 = relay.var("var_979", dtype = "float32", shape = (12, 1, 6))#candidate|979|(12, 1, 6)|var|float32
uop_980 = relay.acosh(var_979.astype('float32')) # shape=(12, 1, 6)
func_441_call = mod.get_global_var('func_441')
func_445_call = mutated_mod.get_global_var('func_445')
var_986 = relay.var("var_986", dtype = "float32", shape = (1170,))#candidate|986|(1170,)|var|float32
call_985 = relay.TupleGetItem(func_441_call(relay.reshape(var_986.astype('float32'), [13, 10, 9]), relay.reshape(var_986.astype('float32'), [13, 10, 9]), relay.reshape(var_986.astype('float32'), [13, 10, 9]), ), 7)
call_987 = relay.TupleGetItem(func_445_call(relay.reshape(var_986.astype('float32'), [13, 10, 9]), relay.reshape(var_986.astype('float32'), [13, 10, 9]), relay.reshape(var_986.astype('float32'), [13, 10, 9]), ), 7)
output = relay.Tuple([uop_980,call_985,var_986,])
output2 = relay.Tuple([uop_980,call_987,var_986,])
func_993 = relay.Function([var_979,var_986,], output)
mod['func_993'] = func_993
mod = relay.transform.InferType()(mod)
var_994 = relay.var("var_994", dtype = "float32", shape = (12, 1, 6))#candidate|994|(12, 1, 6)|var|float32
var_995 = relay.var("var_995", dtype = "float32", shape = (1170,))#candidate|995|(1170,)|var|float32
output = func_993(var_994,var_995,)
func_996 = relay.Function([var_994,var_995,], output)
mutated_mod['func_996'] = func_996
mutated_mod = relay.transform.InferType()(mutated_mod)
const_998 = relay.const([[[2.140825],[4.317572],[-6.510924],[1.241257],[-2.792432],[-8.128098],[9.783969],[-9.526048],[-0.701511],[8.822163],[-5.603629],[-9.305400],[3.149016],[9.273607]],[[1.897358],[4.473445],[-0.632763],[-4.060467],[3.294609],[-8.602330],[0.572166],[5.981943],[8.369290],[6.311299],[8.149173],[-0.945383],[-8.876165],[-3.666639]],[[1.753506],[-9.468198],[-0.475272],[4.310640],[-6.133904],[-9.825538],[-8.923161],[6.735892],[7.599804],[-3.308799],[-2.857005],[-3.805382],[7.030019],[8.515544]],[[-9.116830],[0.500700],[9.588229],[-0.160344],[9.134422],[-7.598547],[-4.976690],[5.197179],[-2.371157],[-5.821682],[0.952161],[-5.255910],[-6.179852],[-4.224653]],[[3.902291],[3.480563],[0.245367],[-0.658713],[-4.819551],[-4.727398],[-9.006202],[9.275138],[4.998263],[6.406340],[-1.006526],[-3.399216],[1.728958],[6.458758]],[[6.441958],[2.190250],[-3.135799],[-9.223385],[2.761232],[-2.341184],[-4.046442],[3.382171],[-2.191670],[1.649356],[5.770483],[7.747826],[-1.093944],[-5.064230]],[[-9.100332],[-5.646327],[5.998660],[-1.070682],[-2.773334],[7.115783],[3.697662],[-5.259401],[-5.877584],[7.029875],[-2.607219],[7.367988],[7.772793],[7.882592]],[[-2.393281],[2.377237],[-8.244311],[-4.735013],[4.055519],[6.864976],[-6.886925],[9.558333],[-1.855456],[3.473335],[9.239458],[7.930351],[7.573384],[-3.155145]],[[8.336339],[-7.130741],[5.478838],[-0.073451],[7.080276],[3.653726],[-6.895248],[3.841519],[8.550651],[-5.574755],[-0.043817],[-4.062806],[-7.727052],[8.406333]],[[-1.020632],[6.105025],[-5.411743],[3.933875],[1.872454],[1.373204],[7.439519],[-2.574696],[4.197493],[-2.553042],[-4.719796],[-9.649510],[-3.742815],[8.862354]],[[1.018549],[-9.519643],[-3.087836],[1.269385],[3.670978],[-2.934203],[0.653796],[-5.262315],[-6.239600],[-9.266733],[-4.549697],[-4.842303],[5.444044],[6.514367]],[[5.202726],[0.794123],[0.321900],[7.408226],[4.338563],[-4.691807],[4.029077],[7.950703],[-5.983005],[1.090005],[-1.869198],[-2.266437],[-3.477962],[-8.196434]],[[-1.791463],[9.274035],[-2.827874],[-0.602666],[-0.325234],[9.921174],[-1.290689],[7.770230],[-1.028780],[-8.388697],[-9.923023],[6.849213],[5.230247],[0.399433]],[[-6.485749],[-7.807762],[2.727270],[-6.603236],[-3.228456],[5.917777],[-0.738752],[-7.047779],[3.414398],[8.397542],[-5.066764],[-0.352582],[9.757322],[-0.634850]],[[-4.331537],[2.199702],[2.168022],[5.085270],[2.147482],[-6.679932],[-8.590265],[0.895190],[-3.021022],[4.086615],[3.669181],[5.582673],[8.835480],[-2.888631]]], dtype = "float32")#candidate|998|(15, 14, 1)|const|float32
const_999 = relay.const([[[-2.513530,-4.308350,-5.403674,-5.142432,9.969776],[3.025638,-3.435307,5.584780,-0.516336,-8.292167],[3.989825,-4.625151,-2.893351,1.264226,2.486598],[9.825204,4.394911,9.165880,7.468898,-9.321910],[-7.288281,-6.157725,-8.075672,6.303485,-6.869255],[-1.850806,5.380612,-7.660007,3.556893,3.931411],[6.895405,-5.024653,-3.736280,-6.209419,8.179568],[-9.083718,9.619034,-1.376430,-6.215630,-9.131327],[-5.321021,-8.849134,2.620088,6.945269,0.828791],[0.996196,7.110206,5.190744,4.129944,2.831056],[-1.463122,-5.820912,-4.553758,1.979703,-8.708777],[4.888047,-3.423290,-4.105510,5.547719,-2.826677],[-1.803599,2.688981,3.590820,1.478262,-8.342985],[7.554938,0.602343,-2.017031,7.263156,-0.732078]],[[-4.594585,-9.152526,-5.583753,-3.146564,-3.482801],[-7.523578,0.946591,-6.519477,-9.558571,6.281856],[-9.599731,-8.001639,5.699871,9.899457,-4.386993],[-6.172723,5.524179,-4.510232,-0.001265,2.972262],[6.247093,1.608693,0.625641,-2.113585,-7.981678],[9.071817,-0.688394,-1.142611,-0.206147,-0.065178],[2.866942,5.878202,9.087634,-7.587953,4.772766],[-5.303099,8.113371,3.023595,2.329664,9.710724],[4.262666,-8.889758,-4.566324,1.674642,-4.802432],[5.799302,0.668938,3.810382,-1.270553,-7.839311],[3.128727,5.130160,-7.769944,-5.298758,-0.877970],[4.073745,-1.973718,0.228438,-5.088425,6.524226],[5.742544,2.492389,-3.871399,9.218164,-7.234307],[-4.986570,8.117639,7.137135,-0.599267,9.976651]],[[7.090045,-6.868340,5.732048,-7.256475,7.415425],[-2.309601,-9.062415,4.683040,-0.201169,-4.865870],[-3.970691,5.843992,-6.490712,3.548031,-8.616236],[8.161954,-0.359412,3.854318,4.960885,9.513842],[0.802899,5.120382,3.500199,-7.687784,-6.519963],[3.233825,4.118941,-2.870271,8.826929,-6.462799],[-2.077186,4.600524,-4.962383,-2.543558,-1.178129],[-6.509601,-8.866494,3.419703,-4.706854,9.400508],[-0.801501,9.797150,0.064609,1.850661,0.177587],[-6.697816,7.608603,-8.905790,-9.314633,-6.608338],[7.715917,6.393929,-2.501566,6.316727,-8.085040],[3.712785,2.951295,1.911592,-7.870142,9.093812],[-3.682179,-1.405633,4.825424,8.859337,7.812583],[-2.756021,-3.282212,-3.356433,8.178275,1.047878]],[[9.141805,-8.383262,3.973835,2.568505,5.469969],[-4.016725,1.983265,5.647649,7.476526,-4.286775],[-7.704053,9.889651,-5.609257,-8.931610,-1.530172],[-0.196386,-8.707001,-9.295622,-3.844517,-6.442937],[7.886683,9.865472,5.331228,7.219047,-5.925759],[6.697233,9.794145,7.818591,4.541845,0.888936],[-4.599661,9.870120,-5.265801,-8.900295,9.487723],[-4.956360,5.558972,9.400536,5.035614,-3.489609],[1.592471,-5.041218,-4.561035,-2.722745,6.026272],[0.166036,5.378335,8.398834,4.080890,-7.684598],[-5.574493,3.056917,8.482930,-0.279563,4.168668],[-2.654065,-6.759079,5.176470,-2.730098,-9.670006],[1.855561,8.444185,-9.415789,0.228223,1.666623],[5.920707,-7.539474,6.630705,7.159107,-4.608264]],[[-7.809959,4.286108,-5.347391,-2.533225,6.636479],[-1.125847,-2.806905,9.941588,-8.562037,-9.347909],[9.372411,3.395379,-3.498479,1.354504,-9.569322],[7.092501,-0.639487,-5.148288,5.792757,7.233454],[3.390607,-7.857931,-1.633764,7.579016,-6.232485],[-9.650315,7.325435,8.434277,-3.064730,0.977995],[2.389068,-6.877032,-9.515589,-1.508345,8.384082],[-5.226465,6.827135,-1.100540,-4.715432,0.340293],[-0.673189,-1.051581,4.882635,4.661707,-2.611242],[0.182660,1.547475,5.220105,-2.929591,-8.833349],[-1.501325,-8.848921,5.710377,1.747480,-0.728833],[-8.047016,-4.801455,-9.288602,-7.804902,2.998626],[8.642732,-7.476103,-7.325370,-3.369854,1.422458],[-9.953227,6.752741,-8.758550,-3.159265,-6.237507]],[[-3.990985,6.569466,-0.007992,-7.277927,9.610810],[5.109383,-8.070468,-5.319503,-1.698239,6.032878],[6.604763,5.320440,3.780978,3.859768,6.318754],[-2.785187,-3.466743,-2.446576,-9.429094,0.706561],[-0.913878,-3.457039,4.136944,-3.394674,9.186576],[4.300011,8.687541,2.430881,-1.777267,-0.944865],[-6.090962,9.958399,-6.108638,5.268292,0.355205],[1.021433,-2.211280,-8.265432,-5.471858,0.689725],[4.365645,-4.994152,3.282189,3.927149,-1.524141],[9.134311,-9.677633,6.115210,-4.443083,5.415638],[1.605960,2.885018,-8.082167,8.052361,-6.412658],[-2.027856,-5.187910,2.912409,-8.243136,5.123236],[-1.121883,-8.270591,-0.931317,-6.065446,-6.487348],[-9.882404,-5.977706,0.319124,5.480583,6.100268]],[[9.076958,2.209027,-7.779089,7.587751,7.925054],[1.583251,8.561007,2.998397,8.618127,-0.062931],[7.951933,5.804381,5.182585,2.885893,-9.953387],[-4.531660,-3.168050,7.645207,-8.515291,-2.021358],[3.778064,-0.098019,4.217001,-7.522358,7.322038],[-0.958374,7.725093,-7.434086,4.015368,-3.872613],[-3.493761,1.306462,-2.091446,4.443138,-8.986004],[1.643905,1.754846,-3.793484,6.169341,1.124259],[-6.509122,5.553648,2.270244,-8.356375,0.646804],[-4.917537,6.555392,8.355862,-6.894212,7.881324],[-9.312128,0.181053,-5.964886,-6.714328,-3.209453],[-6.609140,1.964128,3.866436,8.309002,1.925458],[-5.891233,-9.276989,-5.955153,8.459715,-5.384427],[9.905690,6.576100,-2.225256,-4.716165,3.244194]],[[-5.632346,1.054968,-0.591916,-9.764474,-7.454171],[-6.940314,-5.456846,6.434382,-0.442999,5.078476],[3.918235,4.496210,1.616355,-6.202654,-8.280779],[5.912172,5.350717,0.384068,9.052553,4.529795],[9.421026,-7.009562,-8.864972,-7.185027,-4.128423],[3.261830,-5.845406,0.610980,-1.272714,-7.594386],[2.782376,0.549078,-8.270546,-8.654859,-6.894790],[-1.788713,-7.835711,7.981209,-8.948107,3.560241],[-0.585054,-2.136413,-7.647498,-5.711437,6.352354],[4.269704,-6.023921,6.449728,5.136206,-4.283556],[9.743419,-5.215394,1.180774,-1.508572,5.378135],[4.012659,-8.942298,0.583378,7.553513,1.062635],[-8.180415,5.769360,1.552873,8.180519,5.692431],[-3.147898,-1.803573,-1.794440,5.346256,9.772340]],[[-7.938328,-0.532815,-2.121038,9.973816,1.425302],[-4.844908,-0.908248,2.990003,-8.166608,-7.816355],[-2.438389,-2.827158,2.447613,6.724536,1.371626],[-7.400175,2.779695,-4.675972,-6.136579,6.774954],[-4.295715,8.451709,4.782113,-3.911034,1.713364],[7.389471,-9.204900,2.092745,-1.671131,-5.465487],[4.588473,-8.228963,7.600204,5.019952,-9.707973],[3.393153,-6.368930,2.278663,2.551101,-2.480650],[2.468041,6.394613,4.840617,5.239776,1.377886],[-7.100023,-0.937169,7.688436,9.517814,0.069592],[6.774002,4.828083,8.563579,0.261380,-1.981518],[-4.857232,-4.565778,2.306983,-6.016373,2.218142],[-8.437029,-1.205429,-1.082470,-4.123729,-6.877628],[-0.465941,1.643167,-1.246887,-4.819685,3.943980]],[[4.562188,-2.601383,4.543346,4.588669,0.373429],[2.475915,-7.460153,-0.377651,2.235021,8.365310],[0.922577,3.351878,2.478970,7.646798,-4.115367],[-9.293049,-8.841092,3.839341,5.780383,0.987893],[3.093264,-0.178370,7.646293,9.073165,-3.091899],[-8.369278,-8.791328,-3.799519,2.066062,3.843230],[-4.375284,6.620109,3.313082,3.768197,-1.958107],[5.530476,9.971847,8.331880,-4.080079,-7.210485],[4.846384,-7.042323,-3.163320,0.119216,2.039171],[4.071982,9.669996,-0.512076,6.926361,8.780414],[8.330588,-6.174483,-7.737015,4.837350,-5.039854],[2.912381,-0.132935,5.338697,-9.314562,4.518993],[6.125340,-4.252284,4.148327,8.156878,-4.735983],[-5.432605,8.455667,-1.712428,8.955762,4.817829]],[[8.853517,2.045630,-9.529869,4.767383,-4.169279],[-4.803938,5.969244,-2.015736,-3.360864,-0.606515],[-0.496386,-2.493687,6.209246,0.916463,-3.958316],[-5.545371,-9.174821,9.868157,-4.864794,3.178521],[3.140357,-3.115174,-2.008251,-7.344265,9.887030],[6.444486,8.923853,6.855363,7.355159,7.735015],[3.869896,5.156415,-3.074887,3.407760,2.316299],[6.789842,-6.781803,-8.848859,-5.325527,6.488303],[6.287968,7.635118,-2.617391,7.344651,9.300546],[1.573000,-9.780351,-5.883091,-6.281597,8.996501],[8.634268,-9.357735,-7.804535,-9.799616,5.506698],[-9.405693,3.693761,-8.606491,2.046803,4.747866],[-1.631227,6.138128,0.883912,0.788459,9.059152],[-8.260668,5.927869,5.737765,2.145262,-4.430691]],[[5.618393,1.237351,-5.808085,8.264752,0.372327],[0.131742,4.299457,-6.058116,-0.080067,-1.770647],[-4.757393,-8.752571,-3.196787,0.472555,-8.226742],[-9.045513,4.131820,-6.274428,9.891734,9.052171],[-3.385844,7.880689,6.973374,-5.553405,1.288513],[-3.605070,5.576333,-2.478757,-8.317409,1.110991],[5.665213,-2.622329,0.800772,3.248712,-2.728018],[0.202087,9.770036,8.289922,-3.976907,-0.552155],[-6.588165,6.168086,-8.766010,7.173072,-8.447347],[8.054049,2.681170,-9.637282,-9.327441,8.020400],[-6.600963,7.395711,8.230719,-6.776962,-6.615490],[-9.241945,5.878175,0.436913,7.415846,-0.537583],[1.105412,2.532940,-7.972973,-8.758212,6.291838],[3.985052,-8.820548,7.362716,5.573397,-0.108156]],[[2.191155,4.549917,-7.370762,-8.766347,6.560663],[6.287651,-8.779885,4.032532,-7.259721,9.387449],[-4.243356,4.830378,9.637923,-3.919169,9.796444],[-0.249377,2.431793,7.212387,-7.717197,5.721101],[8.557216,5.377058,-2.150360,-8.464752,-2.647380],[-5.036722,-2.958795,9.935783,1.776789,3.427473],[-4.413779,4.190337,5.130807,-2.180819,-3.704260],[5.797857,-4.739865,2.641609,-8.131813,-4.061523],[7.500076,0.601278,-8.433328,6.225610,-1.536201],[-9.794329,-7.177380,3.642954,2.344241,-5.765185],[3.871575,4.114115,-7.806211,-6.972714,-1.277282],[9.142987,-0.135052,9.445943,4.607604,-6.060805],[2.309482,2.278784,-9.746913,2.185425,-2.104534],[3.587723,-1.970555,6.953121,8.226582,8.582893]],[[-7.563190,7.832665,6.966160,-1.687902,0.265114],[-4.269574,4.223526,-1.068688,-4.688730,5.003754],[8.185925,9.232057,2.284492,-2.010788,-8.157400],[-7.406199,-4.584075,4.377592,3.628115,8.109691],[-3.775543,0.069751,2.183362,6.672370,-7.939954],[-3.019021,7.994571,4.470299,-6.031128,2.785150],[0.328900,-8.598732,8.718574,6.606200,8.008383],[4.580310,-7.949457,0.941022,8.046200,-1.538230],[-6.208801,3.217486,-4.268610,-8.853241,1.799710],[6.820059,-4.635593,-3.096481,-2.743095,-1.723019],[-5.292982,3.606536,-8.036985,-6.829609,-5.758258],[8.420134,5.489323,-1.652673,8.849473,3.134811],[1.725222,4.125691,-2.732507,3.137222,4.309120],[-5.562578,-1.033924,8.638246,-3.966346,-9.712515]],[[-3.398107,3.383731,-1.743949,6.296051,3.302008],[-2.233803,6.241186,-0.731240,-3.403749,-1.115562],[5.267808,2.119397,3.119094,-9.076806,6.003319],[-6.073042,2.207936,2.203685,3.507840,5.095117],[6.942791,4.738582,-5.223184,-0.257002,-5.703785],[-2.695112,1.074491,2.301082,-7.609727,7.024618],[-9.070947,5.496607,2.797090,7.803305,1.479119],[1.096407,4.189314,-1.656840,-9.449092,-8.798126],[2.647679,-7.360348,-0.993980,7.750294,-9.532967],[-9.501162,-5.657820,-5.642730,6.814994,2.346456],[-2.391534,8.445174,3.892203,9.810388,5.625186],[-1.957911,0.636965,8.228683,-5.186262,-9.246163],[1.426492,9.283476,3.537892,-7.866154,-3.241535],[8.704061,-6.357059,-9.755850,-2.396129,-2.525473]]], dtype = "float32")#candidate|999|(15, 14, 5)|const|float32
bop_1000 = relay.mod(const_998.astype('float32'), const_999.astype('float32')) # shape=(15, 14, 5)
const_1003 = relay.const([[[6.087603,-0.746260,5.842211,2.605784,-2.796094,3.567575,7.945632,-1.381535],[3.496801,0.310737,2.878168,-1.905819,0.091841,0.031288,9.255159,6.641798],[-3.200759,-9.420523,5.569704,-5.814656,6.106800,4.373826,9.534411,4.751489],[2.636610,8.252561,-6.073296,7.792831,1.852943,1.408000,6.600387,7.201759],[-0.270538,0.053161,3.171462,-7.581929,-0.374165,-2.035673,5.299320,-4.031350],[-6.486532,8.244537,4.271696,-5.642833,-2.329523,5.273662,-1.160922,0.602325],[-5.265862,3.238210,-5.785586,-4.328009,1.623516,-5.942866,-0.598437,7.837425],[5.277119,-0.801842,3.051203,8.156736,-7.440762,-9.021726,3.586499,-7.809913],[-7.193616,-1.805899,6.293668,9.674797,5.643054,3.808294,-3.678562,-6.959959],[-0.118494,3.639339,-7.896680,5.793537,2.808459,9.053463,9.572700,3.510248],[6.577762,2.666980,-8.802177,0.496168,-0.349895,-5.590392,5.518149,-9.978464],[8.298753,-3.210898,-2.550477,-5.118109,5.084098,7.666235,6.182584,-4.282790],[-2.653402,2.112463,6.557203,-6.920984,-6.751895,-8.462843,8.628400,5.155379],[-5.123003,-6.893616,4.117550,1.677810,6.065214,7.810358,7.481911,0.143787]],[[5.415561,-5.975344,-7.724374,6.199588,8.474750,-3.117699,-6.296552,5.670470],[2.228421,-0.138164,3.748473,1.307245,-7.783952,7.171861,7.755936,9.889251],[-0.274717,7.102201,-4.795432,4.168231,-0.505870,-1.087371,3.550575,-2.497411],[-8.561304,5.405289,-1.492020,-0.535471,4.421133,-6.190955,-4.585090,-7.460980],[5.669175,2.131854,-2.398862,-8.547142,9.049570,0.490619,-4.410085,5.590025],[-8.039384,-0.881192,-5.761330,1.169190,5.199892,-3.497800,6.269702,-0.567724],[-4.231122,-9.919026,-2.607671,6.467145,-5.616057,-5.759648,-4.884953,0.887225],[-8.697802,3.430207,-4.298710,-0.812044,-0.657556,9.360512,5.129633,2.964543],[-2.179750,-6.194402,-1.389344,-5.682184,5.438913,1.520309,-8.226030,-2.682365],[7.704166,9.646176,3.675266,2.543102,-8.801860,6.981491,-1.865037,5.657992],[7.699255,8.133353,-5.665399,-7.852899,-9.201294,1.909021,-8.603805,9.504667],[-0.564956,0.001616,-4.968605,8.013970,6.071567,4.667741,3.430093,-2.255136],[-6.341868,-5.053587,4.375709,-5.027583,1.582389,3.978932,-9.776217,9.174667],[6.888134,-9.358880,9.715743,5.793726,-3.185530,-4.157452,8.526705,-4.026374]],[[-7.061439,-7.574727,5.491485,2.997447,8.996187,-7.477070,5.746723,-1.027026],[-7.800130,-3.561348,-5.183073,3.895022,-4.641584,8.060320,-3.290473,-9.037795],[-5.643548,6.122809,7.383781,-6.229631,4.466478,-0.984086,-5.536807,1.223484],[3.145612,-0.510144,2.432418,4.395406,7.027827,-6.926161,-3.805844,-5.490339],[8.064798,1.838300,-9.068938,3.480989,-3.306731,-5.416398,-5.740258,-4.041674],[-5.678276,-6.241792,-1.711296,1.082728,-2.915530,4.772633,-1.855533,1.828714],[9.861354,3.053398,7.005834,7.527965,-7.641516,-6.118093,-4.430792,4.766085],[-9.213377,-0.939567,1.009035,-4.347143,6.249782,-1.080823,-0.590443,-6.871398],[-4.711956,2.947265,-4.854134,-7.687589,1.096054,-8.731580,7.062999,-8.482143],[9.010457,-6.424418,-0.244697,-8.141544,-4.517697,-3.630236,-0.591468,3.752287],[-2.175849,-3.977832,6.849517,0.319663,-5.542672,-4.089348,6.966121,9.738311],[-1.140721,0.455908,-5.247019,-5.669009,3.675611,8.768189,5.911155,-3.017766],[-0.787614,0.321118,1.001703,-8.315420,-2.866060,4.884808,8.461287,-4.173135],[-9.556693,-1.801996,9.465373,-9.234476,7.853270,-5.195047,-8.685158,-9.126371]],[[-9.698586,-7.531678,1.771960,9.871807,-9.281955,4.282049,4.228146,1.308703],[-1.067556,-0.013465,-7.643336,-7.188743,2.610904,6.751569,2.680989,-0.241548],[1.815209,-2.269798,0.495511,-5.501321,-4.534608,5.076820,8.865882,-8.668042],[-9.336850,1.958230,0.228636,9.117534,-7.129278,-7.573302,-3.319384,8.415431],[1.869821,-6.010857,7.862249,-8.167990,9.782045,6.429036,-0.487578,-3.315096],[1.203868,-5.218974,0.536393,8.317559,-4.892039,7.631236,-7.495810,-1.853150],[-0.356969,-5.177636,2.351906,-8.667386,-3.017502,7.742839,8.181448,7.218259],[9.491438,7.527216,0.848931,-9.100870,-3.001524,5.586333,0.260897,-8.735365],[-9.370279,7.002744,-4.647125,-9.844731,-5.519935,0.632218,6.099046,-0.101682],[-3.080224,8.693444,-7.016695,0.870091,-3.839832,9.958714,-3.817922,7.450750],[-2.827231,-6.231764,-0.803218,9.151536,-5.625163,-9.821503,4.126657,-8.390394],[-1.911095,-4.832299,-3.084961,2.628996,-2.317675,-6.850297,6.008445,2.291321],[-2.017945,-2.085999,7.665551,2.548672,-5.846421,0.006552,-8.364815,-0.662588],[-2.964243,3.842258,-1.486446,6.883386,1.414534,-9.034105,7.283233,-7.988720]],[[5.149564,0.790283,-3.433283,0.686877,-8.726620,9.693524,-1.007327,-5.326223],[-8.345956,5.197344,-1.405014,0.330188,-9.821920,-4.828185,9.180213,-7.846701],[7.616347,3.575288,-9.951451,4.661886,-6.210190,-7.266749,-2.775430,7.252120],[-3.062666,7.963465,8.785356,6.135971,-9.413137,1.027095,-0.763443,9.206554],[6.749634,-9.686367,3.573537,8.997565,-8.599844,-2.366072,-5.310218,5.778270],[1.322759,6.504094,3.170060,-1.248414,9.253055,2.692297,5.879295,9.999422],[-1.506186,6.479567,9.734887,6.349095,-0.538041,-6.574556,2.577037,4.361412],[9.741380,1.745410,9.772529,-0.852241,4.708672,3.173766,-2.270593,-6.798397],[-2.818475,-2.296327,-2.780538,7.810309,-4.255867,6.952444,0.138333,-6.371886],[9.598225,1.563923,4.334825,3.734912,1.949445,-5.697734,-0.264701,-5.433696],[-9.706411,-4.999324,-5.430108,6.846373,-2.676191,-5.745862,7.384575,-9.475318],[-5.967553,-9.925407,4.761772,9.365123,-5.192629,2.377195,-4.314288,9.879501],[-8.743143,0.355647,4.627351,9.341024,4.629774,0.760352,-5.405765,6.871689],[2.031742,7.549310,-5.347153,5.611433,-8.632620,3.279775,5.694727,6.363374]],[[-1.233411,-4.455836,3.913713,1.367312,-9.233050,3.355065,-5.270889,4.837934],[-1.492643,3.671056,7.153619,7.156792,9.442371,-9.712777,9.828230,-1.285919],[-9.260325,6.522365,3.757200,-2.043117,0.798090,-1.700842,5.867110,4.259886],[-9.581164,-0.849619,-0.922579,4.209105,-2.026883,-9.700766,3.036256,8.965829],[3.779412,7.350226,-7.544990,-9.494935,-5.213534,8.312436,5.393849,1.953567],[9.218471,3.656444,-9.458111,5.231779,7.159743,-3.756307,1.879810,-6.071824],[8.703786,6.340361,-3.090133,6.230450,-7.519125,-0.564892,-5.051049,-8.787270],[1.667925,9.152437,-9.423448,-9.135670,-7.436137,1.232015,-0.950327,-6.892800],[5.582554,0.446571,-8.838014,-4.454027,-9.907210,-1.071456,3.779530,-4.967077],[-6.460433,-2.513628,5.949283,-6.206709,8.092279,8.881053,-7.329020,4.426736],[9.774765,9.875193,-2.938068,-7.145958,-7.308901,8.481185,7.804000,-5.714407],[7.013607,1.023573,9.158284,-5.412649,9.030922,-9.619348,9.481884,7.448346],[1.083902,-7.853263,2.315712,-6.036161,9.820524,8.737854,4.054725,1.944219],[-7.139939,2.308098,-6.363523,-8.108361,9.103160,6.624490,9.701173,8.855274]],[[1.077559,-3.866937,9.614094,-7.118067,-5.199148,3.566381,3.643996,-5.751520],[4.661189,3.776152,7.689648,1.137483,3.843877,9.813280,-2.619280,2.813399],[8.133754,-9.184629,-5.529337,4.393650,-3.544420,-0.483132,6.211629,0.340461],[2.176865,9.942726,-1.151465,6.693938,6.927280,-8.553362,-5.122618,-0.025794],[0.422800,-0.025311,3.466174,-3.618917,-4.323091,-5.992108,0.282269,7.023715],[-3.461572,5.843571,8.980231,-1.671129,-4.743693,-4.958769,-3.112688,-4.522091],[7.668948,7.567620,-4.211332,-3.005818,6.698213,1.312713,-2.953500,9.323178],[7.048690,-9.583539,7.034386,7.320249,8.121075,-3.862665,-7.166032,-2.720648],[4.421710,2.591010,7.957313,0.658879,-9.527814,-1.699808,2.927785,2.372891],[-3.444354,8.201892,9.051713,6.818961,7.224529,-9.393058,-0.856854,4.835175],[9.676493,-9.626635,0.548496,5.625656,-7.516179,-3.361142,1.406038,-2.809659],[0.542173,8.343514,-4.474103,-9.729877,6.776532,-1.869019,8.268844,7.621815],[-9.664805,7.757423,1.462469,5.907693,-2.856899,0.750470,9.693425,-1.892397],[-7.680588,5.211060,-1.949623,-5.073984,7.203441,-8.488875,-8.249080,6.610504]],[[2.722163,-2.128015,3.798792,-5.005566,-6.557507,6.523585,2.582527,-1.064931],[3.959468,-1.722974,8.532114,7.062718,8.802017,4.551384,-5.424020,-0.331751],[-1.513084,-9.284915,-5.075189,6.487055,3.339022,3.198111,-1.587530,-6.108592],[4.990150,-9.107900,5.186203,6.276729,9.935708,-6.927300,5.421532,3.229783],[-2.236075,4.045826,-5.360333,4.483573,3.608173,-3.405998,-1.157680,-8.575238],[7.039434,1.654534,-1.479926,-1.693107,2.753965,6.896636,0.880955,-8.635372],[4.377769,0.605352,2.157952,9.934064,0.841483,-9.327777,-8.821721,7.254939],[3.700380,-7.511512,-3.241605,0.880279,3.903365,-9.726239,3.591506,-1.853128],[2.976771,-7.199423,-6.575497,7.334564,4.423535,-5.554012,-6.441588,-2.512772],[-7.370159,-0.543697,5.384245,-6.976436,-4.571645,7.676389,-5.541246,-1.077651],[6.759776,-3.810945,-0.052804,0.916854,3.821951,4.141853,-7.660077,-0.954395],[-4.463480,8.088390,-4.278868,1.094997,-9.058193,8.185864,-2.929823,-4.544809],[-2.606910,-5.111598,3.479349,0.429150,1.481469,-2.666536,-1.666550,-0.101501],[5.708476,-6.930109,1.029759,1.518789,-4.577329,-6.725406,-6.497483,5.374036]],[[9.764024,-3.805859,0.801809,-3.105338,-7.865506,-6.275592,0.059566,-2.572864],[-7.166171,-6.769244,-7.858458,-7.529443,-2.213254,4.462768,3.150142,-8.886486],[-1.987383,0.102882,-0.491730,-3.455253,9.055502,8.566744,1.687941,4.940594],[-9.024361,-1.977774,8.285803,9.332314,7.092229,1.548977,6.604194,-7.873618],[-9.716774,-1.036389,8.087999,5.941960,5.425229,4.647288,-1.505928,4.638495],[-2.540276,4.352288,-7.327254,-9.029863,-4.318796,-2.344786,2.435970,0.429686],[6.266440,-6.190616,8.397386,7.074305,-5.621140,3.470380,7.898074,0.813964],[-9.540430,-2.506644,8.109115,1.017740,-3.973912,-2.545968,-2.914183,2.700032],[5.911983,-2.479216,0.292184,5.575115,-8.073146,4.232823,3.879939,2.758948],[0.044254,-9.131184,-4.838843,-1.728859,-3.315462,-9.104703,9.610321,-9.595070],[1.871317,9.143303,-0.814074,-4.718289,2.558519,-2.621213,-1.794849,2.949593],[5.709541,4.473335,4.655307,-6.989145,-2.061219,-3.529849,-6.758551,-7.302494],[5.845632,9.330374,-1.022731,-2.388782,3.142761,8.790398,-2.906471,1.898127],[-9.156005,-8.467728,1.466264,6.084047,3.150726,3.387466,-7.909078,-7.471224]],[[2.975084,6.328858,0.785112,8.022568,1.132927,2.891074,8.180774,0.365145],[1.849155,5.197122,0.996389,-8.154740,-4.508774,-4.192221,7.086024,-8.293309],[-2.282540,-6.591368,9.226936,-4.047023,-0.102273,0.706081,4.541896,-7.077713],[-2.863100,5.155925,-7.305588,-9.208640,5.508245,-2.846111,5.629993,5.660627],[-4.681766,-1.552346,0.120088,-3.792177,-6.030399,-1.690486,5.790984,-0.917645],[-1.570305,7.258862,9.608707,-7.263809,-6.767322,5.543258,9.873849,-4.727064],[-7.836695,-2.518340,1.005907,-1.404077,-2.091621,2.415549,9.210143,0.458845],[5.423112,-9.079502,-9.429161,2.548871,6.179137,1.544362,3.024250,9.146768],[-8.653007,-9.866033,-8.816932,3.984388,6.009128,-4.004119,-3.660543,-8.497279],[-4.479342,-9.330600,6.047025,-4.773861,-7.346999,-5.793474,4.377278,3.013499],[2.883629,7.779072,-9.115700,-1.147201,-2.778829,-9.908171,-0.786684,-6.281169],[-2.459110,3.177247,2.649452,-7.396097,7.005187,4.077933,-0.512417,-9.926605],[-3.524625,-4.193339,-8.197247,-9.685877,3.985789,5.843810,-1.803989,3.591470],[-2.530860,-7.441297,-9.420113,4.519198,4.813103,-8.960717,-7.785948,6.642550]],[[-9.613169,9.116430,-2.234042,8.335819,3.031060,5.785525,4.472848,-0.205600],[-2.965925,9.713332,6.562185,-7.231178,8.983537,4.010601,-4.031779,6.645429],[-3.276953,2.841100,-3.657856,-5.400699,-1.285422,5.920506,-6.591895,4.277017],[8.069453,9.434833,-7.020270,4.554739,-4.991979,9.150028,-3.902395,-2.308885],[3.103616,6.089401,-6.766419,4.245465,-3.195446,-1.421617,-5.080326,9.690033],[-3.343317,4.164678,-5.338212,1.682717,0.016402,8.704757,1.450147,-6.680503],[-6.235551,-7.250317,2.558678,4.921122,3.698888,3.503250,0.497000,4.251638],[2.963524,-8.050451,4.859028,4.101668,-1.222781,-5.983340,-0.773990,1.245155],[0.747479,3.143831,4.619089,-6.509954,1.501609,2.940429,-1.839352,-9.619179],[4.590826,4.161374,-8.352099,4.716124,-8.266367,-9.223815,-4.223520,7.760011],[-4.515631,-7.867977,2.370023,-6.987503,-1.369979,1.317705,-5.365847,0.557273],[7.132306,-3.149634,9.399740,-8.927683,-8.627975,-3.402023,-9.225844,-4.917356],[-9.310291,1.464337,5.408779,-1.819879,3.473034,-2.313898,-8.465959,5.152883],[-3.353416,9.300750,5.845616,5.642869,6.093126,-6.699773,9.019929,-1.495324]],[[5.927672,4.765937,5.270528,7.044149,-0.803352,-3.121131,5.173443,-3.740498],[5.761249,3.908085,1.968783,-3.815602,-5.365139,2.985440,6.226664,1.721525],[1.894383,5.689762,2.866031,8.769699,-3.927289,-6.858584,6.625910,-7.729703],[-3.678525,5.929904,-4.564565,-5.243219,-5.213874,9.867778,6.331868,-3.706111],[6.565192,2.240658,-1.857550,-4.639630,-8.137634,-2.651421,1.731798,9.882665],[-3.704477,-1.362038,-5.577760,1.721721,-5.587646,5.413297,-2.796708,-6.444857],[3.914952,-6.096389,-8.179624,4.396302,2.003042,-2.838624,-5.295599,-5.574794],[-3.932001,4.043156,-5.031902,0.346369,9.005689,-8.251019,-4.485894,-3.167273],[3.663062,-8.690461,6.833637,-4.980526,1.634028,-0.341500,-8.611189,2.020225],[7.414822,-5.521114,4.005128,-7.758276,-1.943836,-0.288264,0.007119,-4.483710],[9.306141,-1.222936,-7.183027,8.498326,5.470231,0.584875,8.180880,-8.145660],[-7.133290,-7.891319,-6.400905,-4.258105,2.027813,3.978450,3.840212,3.100215],[-5.622531,-2.256050,3.691185,6.082080,0.599464,-0.484146,3.285902,1.405006],[1.956510,5.817966,-5.612588,-1.929845,2.245089,-3.366193,-7.102563,3.858821]],[[7.785198,0.569628,-3.427989,2.228728,-3.528715,-6.634273,-3.024869,7.352457],[9.218326,5.064468,-1.995241,7.467231,8.541190,9.611549,-7.403668,5.840783],[-8.535170,-9.732438,6.550288,-1.977676,8.718445,6.900023,-1.346176,-1.926544],[4.831171,8.221681,0.420470,0.585466,-8.010785,-9.738152,-0.400040,-5.820984],[7.661784,9.581859,-6.861052,-6.045842,-1.253866,3.445457,-2.106424,-5.282171],[6.022675,0.658678,-2.674276,4.107640,3.999340,8.476732,8.937806,-6.137029],[-6.699372,4.473679,9.531931,9.169665,9.033406,-9.894239,-2.108505,-2.829141],[-0.270775,-4.318679,-8.445354,8.502336,-6.639247,9.855408,-1.900604,-0.799165],[2.310352,6.290612,5.603731,-0.463588,7.619088,-4.940555,7.329912,4.336924],[-5.948429,3.539389,-6.931025,9.715070,5.405604,-5.857004,-7.718760,3.384694],[7.864769,3.764984,1.270582,3.151622,-3.082922,-0.666027,-6.943537,-8.014112],[9.560110,-2.797184,-2.348979,-3.764195,-7.967377,-0.844655,2.432964,1.533421],[-1.040713,0.485003,-7.799889,1.790584,-2.229071,1.852644,8.800246,-6.550228],[4.106692,-4.335437,-6.685954,3.561758,-4.979849,6.326838,7.592048,-6.740090]],[[6.287833,9.268898,-8.386387,9.022121,-1.139769,-6.904376,-4.954532,0.620831],[4.341487,2.378123,-7.902536,-2.050979,-0.954434,9.902196,-8.461247,-3.823074],[4.089517,-0.617310,-2.559268,3.385378,-5.992941,-7.971498,-2.479958,-8.935407],[-0.532351,5.528114,-2.491943,1.498245,2.201742,9.446967,-2.933848,-7.965852],[9.208249,2.181522,-9.453411,4.983285,-2.778147,0.893274,5.548407,-7.158032],[3.580513,-3.860212,-0.639336,6.035871,-4.467377,6.637964,-4.441537,9.810116],[-8.031469,4.252367,3.244852,1.934200,-1.608812,-5.512687,-4.673072,5.232017],[-2.447276,-4.637508,0.425198,-6.182154,-3.101750,-2.384069,5.194848,-0.912956],[1.209407,-9.323025,-4.545949,-4.340204,-5.723853,-0.157883,-5.977553,5.412916],[-9.893055,7.109343,3.129138,9.942894,1.852627,-9.516341,0.787381,2.323736],[-7.150336,3.819823,1.549700,1.872944,-3.557329,7.960223,-0.951632,2.009652],[-5.876052,-3.233531,7.728484,0.910617,-5.524708,2.308428,-0.178179,-2.037882],[8.727383,-9.949167,2.384564,-2.714246,1.542599,-3.679572,-4.268687,-5.030370],[-6.568542,-5.888443,0.776321,2.497488,5.340969,2.725697,6.239987,-9.259459]],[[-3.933382,1.737734,5.705160,6.854457,5.461633,-6.329615,-0.861195,-5.570424],[9.065347,-4.616787,-1.269283,-5.850340,-3.388019,-8.233609,7.612569,-0.414442],[4.338887,-5.188220,-0.168443,4.209242,5.949723,9.580516,0.258873,7.996736],[6.141798,7.580178,9.706701,4.178329,6.210687,4.964343,2.626358,-8.513011],[5.711161,6.412028,5.480888,-3.731425,-0.132640,-7.872205,0.932587,-2.152038],[9.950561,8.333596,-6.914402,-6.092273,-9.476912,-0.356194,-0.848219,-2.870597],[5.933639,2.324965,-2.900861,-9.032139,4.834235,-3.751110,-1.087063,7.378639],[-4.122365,-2.610515,-7.443316,5.679480,-3.837217,-6.571145,-4.266185,-3.109772],[-4.657855,-2.951849,3.605281,1.300344,9.078825,-0.211506,-4.668623,8.775912],[-5.750319,3.798944,5.053160,5.018330,3.304058,-9.985029,-6.910906,6.219971],[-1.595608,1.523230,-1.756043,-0.896472,3.753743,8.231673,4.695554,-9.401509],[-0.980671,-8.666118,-2.118282,4.564297,3.662726,-2.664164,4.770606,-8.169033],[7.109980,5.694129,-8.089400,-4.875056,-1.812985,9.044151,-4.893353,8.685676],[-6.032742,-8.790071,1.922095,-9.307293,3.317204,-0.810402,-4.537607,-2.184861]]], dtype = "float32")#candidate|1003|(15, 14, 8)|const|float32
bop_1004 = relay.floor_mod(const_998.astype('float64'), const_1003.astype('float64')) # shape=(15, 14, 8)
output = relay.Tuple([bop_1000,bop_1004,])
output2 = relay.Tuple([bop_1000,bop_1004,])
func_1022 = relay.Function([], output)
mod['func_1022'] = func_1022
mod = relay.transform.InferType()(mod)
mutated_mod['func_1022'] = func_1022
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1022_call = mutated_mod.get_global_var('func_1022')
call_1023 = func_1022_call()
output = call_1023
func_1024 = relay.Function([], output)
mutated_mod['func_1024'] = func_1024
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1022_call = mod.get_global_var('func_1022')
func_1024_call = mutated_mod.get_global_var('func_1024')
call_1048 = relay.TupleGetItem(func_1022_call(), 0)
call_1049 = relay.TupleGetItem(func_1024_call(), 0)
output = relay.Tuple([call_1048,])
output2 = relay.Tuple([call_1049,])
func_1059 = relay.Function([], output)
mod['func_1059'] = func_1059
mod = relay.transform.InferType()(mod)
mutated_mod['func_1059'] = func_1059
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1059_call = mutated_mod.get_global_var('func_1059')
call_1060 = func_1059_call()
output = call_1060
func_1061 = relay.Function([], output)
mutated_mod['func_1061'] = func_1061
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1059_call = mod.get_global_var('func_1059')
func_1061_call = mutated_mod.get_global_var('func_1061')
call_1107 = relay.TupleGetItem(func_1059_call(), 0)
call_1108 = relay.TupleGetItem(func_1061_call(), 0)
func_1059_call = mod.get_global_var('func_1059')
func_1061_call = mutated_mod.get_global_var('func_1061')
call_1109 = relay.TupleGetItem(func_1059_call(), 0)
call_1110 = relay.TupleGetItem(func_1061_call(), 0)
output = relay.Tuple([call_1107,call_1109,])
output2 = relay.Tuple([call_1108,call_1110,])
func_1111 = relay.Function([], output)
mod['func_1111'] = func_1111
mod = relay.transform.InferType()(mod)
mutated_mod['func_1111'] = func_1111
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1111_call = mutated_mod.get_global_var('func_1111')
call_1112 = func_1111_call()
output = call_1112
func_1113 = relay.Function([], output)
mutated_mod['func_1113'] = func_1113
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1131 = relay.var("var_1131", dtype = "float32", shape = (3, 13))#candidate|1131|(3, 13)|var|float32
const_1132 = relay.const([[4.099343,8.469597,-7.579348,2.327596,-1.092878,-1.074387,3.048400,5.156994,-9.638216,8.073130,6.838527,2.450809,0.929174],[8.593413,4.833605,7.711284,-7.965491,3.202781,-8.228641,7.412805,8.411031,4.161667,0.085135,2.027203,-8.889915,-5.579546],[9.601555,-4.486195,6.844909,7.150957,-6.276201,3.415220,6.174372,7.432776,1.619629,-8.356439,-0.018858,-6.847791,4.400923]], dtype = "float32")#candidate|1132|(3, 13)|const|float32
bop_1133 = relay.divide(var_1131.astype('float32'), relay.reshape(const_1132.astype('float32'), relay.shape_of(var_1131))) # shape=(3, 13)
output = relay.Tuple([bop_1133,])
output2 = relay.Tuple([bop_1133,])
func_1150 = relay.Function([var_1131,], output)
mod['func_1150'] = func_1150
mod = relay.transform.InferType()(mod)
var_1151 = relay.var("var_1151", dtype = "float32", shape = (3, 13))#candidate|1151|(3, 13)|var|float32
output = func_1150(var_1151)
func_1152 = relay.Function([var_1151], output)
mutated_mod['func_1152'] = func_1152
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1059_call = mod.get_global_var('func_1059')
func_1061_call = mutated_mod.get_global_var('func_1061')
call_1154 = relay.TupleGetItem(func_1059_call(), 0)
call_1155 = relay.TupleGetItem(func_1061_call(), 0)
output = relay.Tuple([call_1154,])
output2 = relay.Tuple([call_1155,])
func_1158 = relay.Function([], output)
mod['func_1158'] = func_1158
mod = relay.transform.InferType()(mod)
mutated_mod['func_1158'] = func_1158
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1158_call = mutated_mod.get_global_var('func_1158')
call_1159 = func_1158_call()
output = call_1159
func_1160 = relay.Function([], output)
mutated_mod['func_1160'] = func_1160
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1158_call = mod.get_global_var('func_1158')
func_1160_call = mutated_mod.get_global_var('func_1160')
call_1172 = relay.TupleGetItem(func_1158_call(), 0)
call_1173 = relay.TupleGetItem(func_1160_call(), 0)
func_441_call = mod.get_global_var('func_441')
func_445_call = mutated_mod.get_global_var('func_445')
const_1189 = relay.const([7.268317,-4.502849,-3.057611,1.965431,-7.593808,-0.153422,-0.480852,-9.039526,8.440103,-1.260088,-1.942428,-0.890405,0.898972,-1.600007,3.517601,-4.422911,0.928981,1.560851,-2.101701,3.338586,9.092596,5.100493,-2.548589,9.893553,6.215913,-6.580317,-6.825958,5.372404,-5.080665,-8.058999,-8.081985,-4.344311,-4.403135,9.441131,-5.375213,8.611729,-7.557680,-5.218617,-3.697643,-5.996813,6.698043,1.952282,9.597010,5.859711,9.195984,-3.838882,-0.796924,1.355305,-6.119314,-0.591325,4.761903,-7.270175,-0.998484,3.669809,7.925344,0.740108,-9.514149,-2.599086,9.140249,0.160824,8.263511,-2.107052,0.816283,-6.891440,-8.848569,-1.561533,-8.633216,-7.140988,7.476601,2.992432,0.885609,4.253695,-9.348781,-8.693404,-7.604311,-2.214582,0.665764,9.930228,-9.384846,-1.377880,-1.250122,-6.429417,4.323951,-8.974114,-1.284652,2.749547,-9.628924,-3.232654,-2.764290,-2.644805,-1.737040,8.847333,0.587701,-7.792671,-9.395938,-0.788081,-5.969579,-7.754765,7.118041,-6.486647,-9.607842,-8.080109,4.952749,3.833531,6.985789,-2.258623,-9.967477,9.749752,-0.301859,0.356732,-4.253833,-9.224748,6.799887,-3.443730,1.912929,-9.945633,9.438770,-5.241064,8.988330,-9.917585,5.611890,6.503005,-4.822792,3.770760,-8.808204,-4.592614,-6.192349,8.590022,6.748609,5.694373,9.641708,-9.636748,-0.877961,6.954029,3.515132,-1.159037,-1.620426,-2.612370,-5.194362,4.553425,9.973384,9.370386,-1.573843,7.092671,-9.796903,-4.842839,-5.771042,-2.560812,9.779534,2.196743,-9.199665,1.521583,3.887548,2.268929,7.359232,-2.471055,-3.971053,8.928619,8.454124,-7.124581,2.868727,1.080969,-9.892343,-6.144860,0.115164,-9.978520,2.521801,-8.536913,9.077375,-4.917749,-6.052907,2.687636,-5.440906,-1.298554,3.185520,1.612830,0.431748,2.700173,6.335176,-6.637101,8.930540,-1.363336,-0.645020,0.605989,-5.047705,2.799212,-2.425530,-3.470065,0.847205,-5.263683,8.138637,6.671145,-5.572226,-5.360108,-3.490717,-5.353423,6.977123,-5.859646,0.924554,-1.319939,2.049168,8.046253,-2.286549,-9.075401,-5.807461,8.516041,-1.701081,-5.015795,6.664983,-4.099403,1.323127,3.191021,6.753759,9.178930,8.460234,5.000057,3.951175,-5.688113,-0.978573,2.914562,-6.468228,-5.998538,2.657246,9.553966,-5.991725,-0.841332,7.769278,-2.977392,4.322846,4.870832,1.270488,4.415965,0.288870,1.545946,-1.134231,-4.805012,7.127176,7.229987,-8.935059,3.781130,0.089688,-1.126037,4.363167,3.803391,-1.284923,4.282181,7.908578,-1.414264,-9.588045,-1.417487,-7.353136,1.300767,-1.545346,-0.272725,-5.983990,7.184686,4.359797,-2.927373,-9.336551,2.620486,-4.280407,9.771257,5.960631,0.674076,0.949343,-5.212650,-0.242650,7.882589,0.127982,2.750328,4.476617,9.565367,3.038248,1.172991,3.069716,-1.468711,2.626035,-3.908000,-0.125650,-5.361621,1.958785,3.822870,7.752135,-6.107585,1.508184,-5.079301,-1.445896,7.695477,4.782280,-6.730102,-9.743648,-3.824949,-2.489954,-9.581772,-3.027849,-5.911939,-5.778221,-4.271288,-2.822142,-2.729346,-7.422224,-5.369165,-2.503041,-7.324336,-2.588893,-5.440589,-5.273715,-5.048978,8.499006,2.679159,2.398257,-8.423457,4.678669,5.572918,1.148846,0.023822,-3.587322,0.816670,-7.749658,-5.128816,-9.228041,2.470965,-9.177835,1.582687,-3.962176,1.958579,-3.111293,9.188530,-2.111076,0.438215,-4.000378,-0.402174,-1.118394,3.919979,8.675430,5.657326,7.523934,-9.247227,-9.669729,1.292093,-7.227342,-7.652555,-4.517927,3.432223,8.451102,2.567726,5.912414,-1.193612,8.697763,-4.794353,-4.410977,-4.740207,-1.431358,3.686168,-6.209323,-3.012782,6.160219,8.269716,-8.161313,3.521404,1.951952,-9.114963,-3.968162,-7.698263,-0.456419,-4.679756,-2.968092,-7.269572,-1.305701,9.542190,8.259894,8.739108,-2.174079,-3.970401,2.499484,-9.211231,-7.948552,-6.546456,-2.125031,-4.199454,6.780452,9.385412,1.350706,2.466462,9.120119,-1.099450,-4.765494,2.481427,-7.445715,1.111115,1.639700,-8.708401,-7.891787,-4.343946,7.417453,-5.391188,-2.552678,-1.677468,3.716174,0.024851,-7.043654,4.621096,7.352181,-9.890574,8.501329,-0.522109,5.670307,-1.407518,2.724589,-2.298938,-6.738807,2.394800,-8.391105,-1.193838,0.459258,-9.099973,-7.065479,-5.001288,4.080457,2.869320,9.389564,6.455090,6.597164,-6.725344,7.074824,8.387082,8.685142,-7.943938,2.083892,-8.828861,-5.416002,-2.683803,-2.817634,-6.389893,1.864054,-2.699824,3.607333,-6.817796,-2.836252,3.634627,2.927672,6.058608,-5.027907,4.921093,-9.853990,-8.761863,-3.121309,1.278181,-5.504914,-0.085173,-2.825695,-6.956607,6.115027,-9.835876,2.831513,2.469152,-8.175175,-1.012027,-5.343381,-4.459143,9.733090,5.725937,-2.448094,-2.496675,-8.766449,-2.625439,-6.409825,0.880563,5.322249,0.638055,3.103935,-1.817137,7.021057,-1.313976,-2.533512,-1.595589,-3.340223,4.899563,4.545689,7.046954,0.678872,-2.592648,-9.605338,2.151128,7.846109,-2.554282,2.722391,-7.108988,5.553434,-6.824792,-8.299215,7.174615,-0.341956,5.288750,2.093338,9.346188,-3.605230,-2.353168,7.998222,9.437191,-1.462808,-8.612491,-4.050707,-2.225266,9.351403,4.333186,4.319912,-5.421362,9.467183,7.331891,-6.650758,7.103741,-1.718733,3.099354,4.366287,-5.222238,7.171205,4.374777,-8.490262,7.340046,-4.003336,1.119759,-1.050034,3.907628,9.135492,-8.580703,-6.899229,-5.803935,1.213850,-5.070456,-6.801979,-0.391349,9.935213,1.451859,4.237125,-2.294902,3.127899,1.762145,1.909002,-9.886751,-5.347384,6.504162,-7.232767,5.539704,8.835135,0.891420,2.509569,1.354105,0.808079,-8.279533,-8.341859,0.099237,-9.107756,0.440331,2.323009,-3.916150,-6.196514,-0.114482,5.612013,-4.723343,-7.315329,1.090863,2.670904,-3.919685,6.590071,0.038447,0.170206,-3.236902,0.365198,-0.620894,7.385130,-7.530123,-8.311754,-0.919193,3.820964,-7.226806,-9.900292,0.273691,1.122847,4.162023,-6.048323,-0.676558,2.660232,4.496330,-2.176725,5.817819,-3.634924,7.969455,0.729903,-8.710647,-8.297790,-6.740834,-5.835656,-4.447245,1.832074,0.997755,-5.970612,-6.127274,-2.527908,-7.293375,4.184443,-7.197311,-7.826030,-6.495756,4.236431,-5.151078,2.750796,4.983588,-0.505263,6.625485,0.474551,3.077262,-0.606473,9.292503,8.511650,8.303951,0.316573,-8.304296,6.329611,5.712090,7.244785,-9.228584,-5.148845,6.218001,1.631562,0.630189,7.637329,-0.434011,-2.064841,-7.009823,-0.045142,-5.543754,1.730434,1.931448,6.196157,0.614372,-9.520461,6.763897,6.352160,7.775562,-2.174940,5.204739,9.878951,0.204876,7.926553,2.037899,-7.671783,-6.251971,-9.524424,-4.678140,-7.157204,-4.249454,-0.056227,-5.657469,-2.935048,-8.099330,-5.740127,-1.047148,-7.440971,6.314584,4.021937,1.995902,-4.781768,6.235418,4.211138,-8.153119,-6.851845,-0.299638,-7.975611,-8.779464,-2.005798,5.397558,0.887558,-8.358945,-7.952557,7.576688,-8.715656,8.993167,-5.969472,5.016650,-2.649558,-8.849459,-7.468143,1.220007,0.842092,-3.345306,0.393088,-6.265998,0.309681,-2.881190,-0.122194,-3.719615,-2.341213,9.998611,-1.876670,-3.803453,-1.710017,1.664485,7.168629,3.793743,1.230938,-5.536548,-3.378214,7.573878,8.785457,4.927660,3.717836,-9.014044,4.466286,4.253596,-0.920606,-4.452306,-5.247759,8.276159,1.782101,-3.802665,-5.434827,6.917594,8.838186,3.571756,-3.774477,-1.915936,-4.773412,6.959867,-7.452769,6.940652,-8.081879,9.516400,-5.924021,-2.198940,6.488910,-5.251159,9.285999,-1.337496,-9.142081,4.332248,-8.043760,-1.342649,-0.737693,-5.550307,-8.738685,9.020657,-7.695672,6.909659,9.622324,-4.227937,-4.039256,6.556889,-5.641839,-3.814560,1.335627,8.649536,0.595112,-1.358087,8.222550,-3.805068,-9.462894,-4.929758,-3.149431,0.321870,1.761290,0.692784,-5.923088,3.268541,-0.056042,3.639398,4.053829,-2.524931,6.975554,-9.190386,1.649798,-0.183584,-2.854765,-0.678936,8.812455,-2.032715,8.714395,-3.356741,-4.758918,-9.569460,-2.698187,-6.993477,-4.213860,-7.970764,4.816818,-5.274822,-0.656916,4.886599,9.607447,1.753983,1.575921,7.794725,0.555519,2.792386,8.964993,7.478612,5.114364,2.716305,-5.369115,9.143131,-1.574151,-2.180422,1.562272,5.733954,-2.291888,7.921985,7.192334,-0.197497,-3.620257,-8.920476,-4.519207,6.867403,-5.701059,1.645287,0.217047,-4.652387,8.736661,-3.830821,-7.766223,4.288124,-1.031055,4.111672,-7.370904,5.365444,3.228176,-6.303193,8.765182,0.716604,3.422701,-2.643347,-1.011369,-9.225223,2.998451,-9.175333,0.389633,-9.409455,-3.947133,7.849698,-0.765846,9.997063,-2.708089,8.720548,-5.436455,9.987094,5.033806,-7.059912,1.864721,6.082232,8.767341,-9.719832,-1.085517,-1.298347,-1.096613,1.207856,-3.632062,-1.424738,-0.803748,-8.043965,3.818209,-8.262712,5.152086,-0.699188,-3.620838,-4.488289,5.102783,-4.357763,1.212815,-8.288876,-2.507491,-7.416891,-1.523893,0.267560,-8.447719,7.095095,-0.417208,5.222923,-0.099282,-4.060347,4.381827,-9.723810,9.898615,-1.768939,-4.625804,5.251716,-8.785568,8.004165,-5.493356,-0.064344,4.114384,-8.505442,0.592850,6.935591,3.090544,-8.223745,-7.001611,9.552856,3.804737,3.150316,-8.502311,-5.319070,-5.975848,-0.869650,7.926318,-7.349734,-8.230704,-8.984281,-3.126980,-5.019768,5.761319,-0.939048,0.691002,1.026553,-3.605032,-8.398313,8.632792,2.158251,2.530104,0.977670,-9.526117,0.731655,-5.721593,4.120279,6.782889,5.100600,-5.506532,9.268522,4.835015,6.819211,0.524455,3.370389,-1.702886,-9.568418,-4.099272,-9.259993,5.890364,0.848928,1.172188,-1.889201,-7.628432,7.233511,-7.116134,0.552209,-8.683426,3.940503,-3.397725,-4.514361,5.095496,-7.288181,-1.892337,3.113629,-5.551898,-8.703558,7.126717,9.612384,-5.541405,-9.783195,7.192661,-2.643251,-1.178617,4.858586,-3.033751,-5.011423,-2.305529,5.779416,4.066040,9.966913,-0.540597,-0.813614,-5.065486,9.143664,-7.380622,7.138508,1.115301,6.004497,3.158393,8.071100,5.446652,-0.988402,-5.090638,-9.079809,-7.249655,-8.129822,5.659410,-3.260013,-7.541393,-8.131189,2.212973,-3.108648,-2.457719,8.111853,-7.074705,5.786335,-2.094020,3.162093,-9.715380,-3.219512,3.850713,8.757778,3.976725,0.274287,0.088183,9.934131,4.746129,-6.082690,6.100301,-6.928037,-1.031316,4.839931,4.145354,6.140603,3.635250,-1.093559,-9.743886,1.620754,1.176630,2.539365,4.685082,8.062964,-9.303001,-2.511351,3.689043,1.390027,-9.599343,-1.914365,-1.169289,5.734915,-0.861833,-4.557784,1.443357,-4.233734,-8.976108,-7.727689,-8.069007,4.863135,9.616847,6.228323,-3.521494,-3.922020,2.486052,-1.746876,-9.598391,1.361171,8.754018,-5.066042,-9.573246,8.834808,-2.862150,-6.055471,1.071660,-7.395962,9.648517,-2.675367,-0.821097,-3.620489,0.298048,6.378320,9.114156,-1.767163,6.903593,8.826753,-1.383958,-2.500627,-7.102493,5.461844,-8.749676,-3.683193,7.293166,1.220968,8.357827,-1.023681,-3.849657,4.260170,-5.990730,-4.313396,-9.099652,1.215886,-7.922408,1.752554,-6.557259,3.705204,-2.467097,-1.889572,-7.940544,-7.387959,-7.902370,-2.896071,-1.130128,-2.769740,-1.207319,-6.223235,-6.673838,8.523730,-5.514390,-2.545766,1.044233,5.613314,5.979258,-3.646382,-4.497671,-6.734467,0.408509,9.104963,-3.345379,-2.002723,0.139605,6.464510,8.104486,-8.391879,0.901545,-6.092510,-2.220690,9.109882,-3.681089,8.840224,-0.906836,1.756459,4.926271,5.401306,-1.812599,-1.121004,1.667520,7.519555,-2.173622,-1.459774,-1.363429,-4.694769,-3.062681,6.351923,5.244943,0.625391,-0.470578,0.530392,-3.648155,9.747124,6.451892,-8.301621,6.072495,4.578031,8.993991,7.571387,-0.338070,1.757159,1.556224,6.622850,8.382715,-5.390138,6.767886,2.593853,8.073314,-3.718009,-6.148833,9.791426,6.496447,9.019650,-5.416639,-1.301651,7.560836,9.613120,-5.138030,1.712760,-4.885820,9.221058,-3.008349,6.502185,8.585604,-2.946469,-6.524543,7.739409,-1.072930,-3.891480], dtype = "float32")#candidate|1189|(1170,)|const|float32
call_1188 = relay.TupleGetItem(func_441_call(relay.reshape(const_1189.astype('float32'), [13, 10, 9]), relay.reshape(const_1189.astype('float32'), [13, 10, 9]), relay.reshape(const_1189.astype('float32'), [13, 10, 9]), ), 4)
call_1190 = relay.TupleGetItem(func_445_call(relay.reshape(const_1189.astype('float32'), [13, 10, 9]), relay.reshape(const_1189.astype('float32'), [13, 10, 9]), relay.reshape(const_1189.astype('float32'), [13, 10, 9]), ), 4)
func_814_call = mod.get_global_var('func_814')
func_817_call = mutated_mod.get_global_var('func_817')
const_1192 = relay.const([[1.538211,-9.427499,-2.465289,4.295610],[-1.198429,-5.311765,7.412488,0.542354],[1.812753,1.755320,4.279535,3.693162],[-7.638083,-0.082844,6.704203,7.016100],[-2.032508,-3.072086,-3.858541,7.839058],[-2.445377,7.181391,8.301221,8.587601],[7.087619,-0.107295,5.598496,-2.616558],[-7.277832,-2.516328,-0.312410,3.522531],[8.933474,0.451011,3.856933,-3.191214],[-7.646270,5.348209,-8.593968,-6.817975],[-5.502098,-6.473805,-8.660655,5.211410],[-0.908650,9.069037,5.711507,7.826984],[-2.191814,-1.531260,-5.347728,3.634581],[-5.866685,-1.882850,-7.624630,-3.063602],[4.797573,-3.650638,-4.685820,9.809116],[4.762085,1.234243,1.378723,3.648733],[5.209845,5.418390,-2.254715,-8.222453],[0.189490,2.084724,2.315735,-8.131304],[-8.270705,0.746449,-4.742899,9.262341],[4.315367,-2.456524,-9.275616,-0.688705],[6.750996,4.150764,-4.121928,-2.680885],[-8.123423,0.897490,-5.624280,-4.954266],[-6.278030,0.439661,-9.752791,-0.532233],[1.758030,-2.379724,-3.543103,9.699546],[-4.883127,4.667578,-5.195902,8.871804],[8.286287,-8.317832,-1.396976,5.334212],[-2.919405,-2.106794,4.842429,-6.364297],[0.988434,-6.000079,5.438067,-3.151664],[-3.238213,0.007170,2.136082,9.048903],[6.200931,-6.047064,0.416116,4.008384],[-1.837325,-8.225383,-7.029933,-3.888191],[-4.579504,-1.876718,-8.334255,1.970012],[-5.914409,0.268385,9.008209,1.985107],[6.606360,3.108890,3.671223,-1.343165],[-2.303660,0.174749,-7.778507,-4.813401],[6.782251,-9.730157,4.038895,-2.627261],[-5.527807,-1.661227,9.504026,2.271615],[2.383693,2.124556,5.456643,0.319643],[-8.035990,-5.926538,-6.343252,0.130220],[3.946995,-7.499083,-7.132539,5.392244],[-9.589195,-0.315728,2.986724,-2.107437],[-6.183811,5.105139,-6.802910,4.945413],[8.581863,2.720379,6.534076,6.119493],[-9.655845,9.659881,1.972816,-5.240699],[-6.854693,0.140395,-7.010758,1.617691],[2.845666,-0.860991,0.937504,-6.080423],[4.778265,-1.312290,1.909955,-2.050828],[4.599407,-2.469190,-6.036441,7.481790],[4.881247,-0.438450,-0.399039,9.597960],[-8.093087,0.021412,3.825386,-2.653224],[6.515637,8.796448,0.950825,8.592022],[-7.868768,5.120243,-3.100787,8.488040],[2.892135,7.842784,5.568445,9.239144],[-8.063015,9.957415,-6.225056,-2.976474],[0.804188,-7.837347,2.897482,8.261645],[7.522421,-1.376971,4.526801,-3.838614],[1.849579,0.660202,-7.062152,-6.382726],[1.960755,-0.382362,-7.428187,-9.173924],[4.059890,-7.792415,-8.438008,-8.436885],[-8.202281,8.582218,-9.768257,-0.620768],[7.669903,9.808711,-4.886061,-5.289624],[6.875957,9.414267,6.865775,6.730823],[3.979510,-6.243350,-1.405593,0.999193],[3.557676,-6.497818,-7.069485,-6.593141],[-2.852263,6.631498,6.254075,8.385415],[6.960886,-1.633331,-0.482050,0.335449],[3.000182,4.825929,-2.217355,-9.538158],[2.596416,5.841206,4.880228,5.922833],[9.443396,-4.094538,-1.763472,-0.897772],[5.733456,-0.085662,-6.403968,5.474907],[0.391717,3.058677,8.133852,-9.438453],[7.087275,9.283264,8.336680,-0.798607],[6.501108,7.731161,-8.097511,5.923898],[1.910201,9.163012,8.120939,5.262533],[3.418043,-0.305504,5.795008,2.868471],[9.595700,6.467083,3.810397,3.172293],[1.844563,-4.351205,-2.564585,6.368947],[-0.590549,-7.302179,8.806832,-3.618898],[-0.532795,0.818644,6.329239,-7.752871],[7.003035,4.200238,-4.373696,-5.052472],[-4.986806,0.873647,-6.211399,-9.014890],[-8.503385,2.553031,-5.737595,-1.566035],[-3.048492,-6.385356,6.748373,-3.072686],[0.148678,1.148857,8.409195,9.150092],[8.919971,-3.273844,7.409012,-5.566323],[2.560993,5.598066,7.102068,9.732049],[5.013554,-6.004180,-0.270711,-2.006627],[-5.376371,7.028080,1.033466,3.899392],[-0.293502,-3.643480,-5.331306,4.311422],[-2.707537,-1.525899,-2.811242,-1.534429],[2.022079,-1.039630,5.509612,7.999867],[1.407065,1.066555,8.848823,1.260459],[2.980519,3.135055,-6.307511,8.684807],[1.596502,-1.842590,4.242572,-3.397934],[2.338375,0.503503,0.955484,5.976935],[9.790837,3.466327,6.627483,-5.317156],[-2.449398,6.831955,-5.762611,-7.205176],[-7.851392,-4.173754,1.509459,-6.217942],[3.392769,5.464428,5.108376,3.349052],[-6.572506,2.147557,3.886823,-0.801775],[-0.008685,-3.248766,-9.958561,-7.409581],[-5.728454,2.733701,2.497593,-3.344993],[2.330916,5.334715,-2.280358,0.262125],[4.260206,9.778243,1.324587,4.704597],[4.066232,-4.573983,-1.347833,-5.433940],[1.397349,-2.310796,6.791504,-4.254453],[-1.030924,0.015122,-2.093930,8.832655],[-2.214894,9.865056,-5.243773,1.755939],[-3.695263,-2.400477,-0.915662,2.398802],[-9.962868,5.015583,3.408864,-4.523701],[8.124241,-0.638145,-8.274843,-0.503716],[-9.471970,-7.017115,-9.989382,-6.433199],[-8.883439,8.561885,6.344281,-1.762186],[-1.651463,-2.855532,2.424692,2.518216],[-9.146228,3.082327,-2.994584,5.152252],[2.303427,3.484855,3.986416,-7.850833],[-2.539668,1.290477,4.304954,5.667364],[0.629784,4.914258,-9.326891,8.496793],[-0.811655,-1.744389,-1.760235,-6.735196],[1.090949,2.144898,1.452360,-0.985856],[6.740137,-5.870307,-4.840016,-8.319034],[8.030405,-3.842598,3.184519,-2.029911],[-6.937708,-2.926178,7.248304,-2.163059],[-8.907122,1.334230,-4.022059,-3.950454],[5.243840,-8.541748,-9.881376,2.038827],[-8.880113,-2.671636,-1.142425,2.225490],[5.348704,8.069358,-0.753169,0.567211],[-2.528382,4.587085,1.089961,-0.543487],[-1.596238,-5.878588,-1.118548,-0.447260],[9.238910,-9.921718,9.088987,0.102172],[2.244350,6.084326,-3.328700,-3.563624],[-6.100293,7.739382,9.190473,-8.853984],[-3.588175,6.606871,3.847754,6.573980],[-8.419705,-2.893355,-4.967584,-9.828836],[-3.313954,8.860188,-9.603961,9.324654],[7.940753,-5.545696,4.110900,-3.704679],[6.078126,-0.561439,5.580247,-5.197873],[8.575051,-6.197235,-2.258349,5.009036],[-2.528245,7.957850,-6.562362,9.178478],[-2.253502,7.455242,7.727604,0.585458],[9.566771,8.286204,-3.518446,-1.017810],[-0.509944,4.471379,4.798169,2.343877],[8.880834,-1.890229,-9.907879,-9.587184],[-5.591691,-2.965742,3.409768,-0.004442],[2.132862,-8.529132,7.386072,5.687681],[2.653968,-6.779758,7.640645,-4.132608],[4.416830,-6.967650,2.523163,-8.084829],[-9.462563,2.752853,-1.273369,-8.016067],[0.191531,1.400427,0.203254,-6.396738],[3.996852,9.217601,-9.293033,-6.089967],[9.710558,1.221046,7.722481,-7.036734],[-6.531748,4.503834,3.191645,-7.009366],[-0.716928,-4.683989,-3.497427,-9.362428],[4.166196,-4.266899,-5.875256,8.446424],[-3.023228,-2.110087,-1.533919,5.995924],[-4.748150,-3.338127,8.454125,-7.372831],[-6.384579,6.844252,5.792128,2.082620],[-8.735756,-1.239746,-3.325688,-6.711921],[7.166689,-5.316472,2.235895,-3.413434],[-9.034613,5.283419,-8.165818,-7.904158],[-7.751016,0.483731,9.642174,9.842777],[5.702118,-7.836515,9.729239,-4.093812],[5.282663,5.661652,-6.202589,-8.746507],[-7.062281,-4.705832,6.235302,1.722853],[3.814051,9.434676,5.367475,-0.546771],[8.584961,-7.428111,7.300433,6.880961],[8.924846,2.373135,-9.101373,5.201154],[0.604054,1.798880,-6.200282,9.412020],[-5.975919,-1.457717,3.687550,-7.310422],[-1.979055,6.158086,8.329782,-5.309716],[3.391201,-5.656591,-0.725393,-3.384302],[-0.636848,-0.261613,5.059386,-0.700937],[9.006713,4.382557,1.350397,1.194270],[5.471376,7.660249,3.535642,4.540826],[8.682009,-4.478525,7.960702,9.130376],[5.842190,-3.062957,1.652091,-8.418603],[-4.790762,4.293786,7.946439,8.661572],[-3.298562,4.042396,-5.021245,-6.581122],[-6.226802,5.813100,-5.330967,4.126971],[3.656183,-0.385817,-5.113999,4.583318],[-4.754090,-4.871654,5.260846,-0.905036],[-5.696418,3.705935,7.382213,-6.884569],[-2.927281,0.705129,9.569842,-7.428559],[1.717475,7.457602,4.739492,-8.946021],[-7.432616,6.163654,-4.107333,8.908243],[4.693513,4.241315,-7.963174,2.306854],[-5.665484,6.858203,6.496762,-7.659626],[-8.612184,1.235568,-5.811530,-2.506953],[-5.409718,-6.530418,2.375558,-1.779510],[-3.814304,5.232768,6.052386,0.691563],[-1.829989,0.118691,9.163908,-8.690185],[-7.885417,4.458042,9.714708,4.670574],[-6.872586,-1.246225,3.663046,-8.799598],[-2.421217,-3.630436,-4.654329,4.332146],[0.682877,2.325129,-3.504210,-6.162481],[6.862877,1.803440,5.291858,-2.846417],[-3.303050,-3.554085,2.803178,3.221953],[-2.906003,-6.617917,-9.339500,6.711599],[-2.877794,-2.463816,-4.803083,2.060157],[-0.721680,-4.921817,6.021586,9.252585],[5.440013,5.554211,7.193555,3.068800],[8.732960,-3.220546,8.826609,9.079438],[-8.244498,6.278668,-5.446047,-7.466537],[1.687137,7.838882,-0.593624,9.802720],[-6.141019,-2.533110,9.110793,3.848791],[8.361086,-0.594863,-3.666819,6.915502],[5.124630,1.653348,8.960248,8.374466],[7.920560,-2.348779,9.918025,6.760724],[-6.298760,9.552750,8.161004,-3.389122],[5.432406,-1.356398,-9.443318,-2.217733],[-7.304291,-8.707914,-7.362107,-6.073744],[-2.060519,3.797548,-2.520461,3.752331],[-2.028706,4.923054,2.221034,6.170559],[-4.807136,-1.449538,3.910525,1.401106],[1.839622,1.500548,3.780777,7.982063],[-0.507064,5.041165,9.042496,-3.497678],[-1.361346,-2.905807,8.043531,-3.004009],[0.892649,1.975844,3.685446,-8.973976],[-8.385156,-9.704546,1.272586,0.384598],[-4.953165,9.238452,4.024994,-2.837682],[8.831612,7.796699,-5.884488,-6.823905],[6.331547,-6.528076,-0.151288,7.352238],[-7.562128,-5.652613,7.654450,-5.307056],[7.744901,9.323884,6.743169,-6.023974],[-2.101320,5.656378,2.292777,-0.848980],[1.624477,4.233762,9.350569,-3.467091],[9.669541,-8.385651,-3.760102,-4.090744],[-3.029094,-2.922292,9.451045,-1.220602],[1.938718,-8.649000,3.965200,9.016462],[2.147958,6.963730,4.135152,0.272165],[-2.645506,3.956218,-2.494078,-1.574403],[4.739563,-2.389977,3.341822,2.434951],[-0.362692,8.325787,-5.124055,1.402882],[-8.804962,0.777113,-7.490197,-2.612216],[-4.566862,-4.178746,4.922666,8.579519],[4.335250,-2.777515,-6.300734,6.917196],[9.945999,-6.677173,6.713447,-5.749836],[-2.943301,1.221242,-4.649679,-4.927777],[3.848417,3.493295,2.505461,-4.595273],[-4.264233,-9.417358,-7.400434,1.738978],[-9.078425,8.914677,2.269767,8.454914],[6.685991,2.528943,-6.984389,-4.944245],[-6.630576,8.544834,-8.313716,-6.352331],[-3.118935,5.557463,4.474249,-5.650293],[2.268064,3.406856,1.409385,-7.711979],[-4.704123,-3.612697,2.495118,-1.547294],[-7.346784,-1.836347,5.814200,9.263776],[7.906642,-6.284385,-8.954124,-5.320500],[3.676824,-5.525212,5.843467,3.921425],[-9.154592,-1.323372,8.946762,1.788065],[-1.385476,-9.099230,2.325030,7.585711],[6.588028,8.330349,6.412293,3.940233],[5.377021,4.577592,-1.421771,-3.628548],[6.504198,5.359446,-6.010427,-2.064111],[-2.520763,-0.873527,2.196705,-9.276934],[-4.001557,-6.783992,6.475430,-3.758889],[0.441268,2.608938,-9.977692,6.522832],[2.655217,-7.599214,2.441608,-5.475597],[-2.673872,9.680453,4.276471,-0.452217],[6.791460,9.151023,-6.129676,-3.329957],[3.293543,8.945266,5.181642,7.336832],[0.294157,-8.552711,5.593294,-7.221356],[-4.895970,5.187827,1.595259,8.377681],[-6.896688,-9.910819,-9.102702,-2.334515],[-5.128019,8.752969,-2.324988,-0.117072],[0.705807,2.253763,-5.535994,-7.529954],[6.181497,-7.427350,4.376906,-0.188510],[-9.502221,-7.016136,9.230049,-5.818952],[-1.090492,9.225705,3.033023,5.670620],[6.411109,2.756682,-5.653335,-5.584914],[3.177661,6.363922,-1.705132,-9.851915],[-3.409639,5.730590,4.943624,5.374902],[6.267094,0.092307,7.202216,7.072245],[2.413157,-6.694979,-1.484437,3.927187],[8.679725,-2.307882,-9.413631,-7.427857],[3.098262,-1.145297,9.824960,0.561233],[3.585412,8.206394,7.449348,3.891657],[5.423549,-2.728085,-0.418486,6.508112],[-7.643141,5.826147,-2.059832,1.253681],[4.211619,2.385846,-9.613315,4.830985],[6.476106,-1.459999,-5.938451,5.633239],[8.540873,0.076685,4.064963,2.800839],[8.356011,9.850086,-5.175862,2.351071],[-7.083271,-0.071418,0.149374,-5.839983],[7.656400,7.292490,-1.933212,7.833055],[5.201504,0.406798,-2.964176,-2.014708],[4.357313,5.741478,2.738405,6.954082],[5.234152,-6.060463,-1.953259,7.691168],[4.232401,7.568958,1.463159,7.511323],[4.121528,-2.501959,2.077731,1.774858],[-5.964514,-1.334022,-1.410745,8.789267],[3.671753,-8.960925,6.073001,8.084343],[8.343285,-3.097810,-7.949392,2.492306],[4.152428,9.133114,-3.666805,0.364835],[3.970260,-1.451416,-7.869980,-9.948220],[0.180701,4.905203,-9.454764,0.035144],[6.409655,6.385083,0.246727,3.464342],[-6.779044,5.675676,-1.400837,1.084561],[-6.713563,9.285485,9.940709,6.813052],[-6.781268,8.204551,2.473909,-1.605937],[7.375471,-7.681959,-4.980417,6.707924],[-2.306968,-5.581519,7.736036,2.679125],[4.012364,-4.286078,-4.417663,-7.513375],[-6.777103,2.935818,-0.479139,-7.393410],[7.394606,0.756462,1.202914,-3.759181],[8.260462,-8.171507,-8.736558,1.009372],[-1.092511,7.918713,9.040104,8.576177],[3.898081,3.356896,1.644743,9.929818],[7.434619,-9.083356,8.851764,-7.031525],[0.912339,-9.640607,-9.127706,-0.632475],[6.142228,4.067429,7.105125,0.018404],[-9.495217,-6.326454,-4.481998,-0.712790],[-0.667199,-8.317056,-2.249606,9.730442],[7.936274,7.089291,6.731687,-9.550147],[4.326230,2.897814,1.941611,-5.740227],[4.690883,4.238082,-0.659558,4.079607],[-8.529963,9.218375,6.334982,4.879580],[-0.698347,-6.045187,-5.451669,-4.555521],[9.609469,-8.397809,-1.427571,-7.930827],[5.799550,-2.207429,0.711751,5.863523],[9.573220,-4.151938,2.279542,-0.104537],[2.845919,2.458149,8.778166,5.581408],[6.557561,4.715133,-3.943727,1.091328],[2.130098,-6.646159,-5.116464,1.224987],[-9.696233,-6.498612,9.294272,2.113096],[9.079751,-1.073789,-2.247891,2.384530],[6.342837,-6.291512,-4.111958,8.102702],[1.829975,6.703570,0.600571,1.084167],[-7.040994,9.121007,-0.343847,-3.255673],[7.626975,2.731370,4.326793,5.844199],[9.080409,-4.072688,-0.813728,-6.538944],[4.871679,1.274497,-5.631094,-9.377793],[-1.606499,-2.688430,-4.719881,-0.220423],[2.695618,-0.730044,8.123672,3.056746],[7.433188,-2.912665,8.573010,3.293432],[-0.732139,-4.382293,4.819327,-6.107453],[-9.548423,2.469473,1.858035,6.830439],[6.630884,6.187092,9.129181,0.458965],[6.210979,-5.628278,-5.594403,8.116993],[-1.493624,0.872633,4.082382,5.480139],[-8.685208,-0.788370,9.079424,-1.817941],[2.411850,7.367084,-4.907977,8.768909],[-7.832745,7.455200,7.129329,-4.371356],[-5.561007,-7.214650,1.898972,7.296097],[-5.471668,3.564661,7.246395,-1.588440],[-1.556007,-4.120823,-5.923692,-3.516245],[8.543799,-2.629308,-4.171636,1.232597],[-0.517161,-4.984197,9.296752,-4.547588],[-7.509360,9.870910,4.895720,-4.835686],[9.950834,5.841599,5.331524,0.305014],[1.946869,0.685847,-3.497850,-7.219731],[-8.118502,-7.331437,-2.989421,4.618790],[-2.923472,0.530437,-1.274982,2.741952],[-6.315980,-2.441994,-5.506271,-8.764302],[6.160092,-7.205611,-5.393183,-2.931035],[8.758646,7.138465,2.557134,-2.454736],[5.947661,-4.618150,-1.065192,-2.828329],[-5.647650,-3.023748,-6.046707,-5.690104],[-9.139113,8.112454,0.404578,-4.944965],[-3.574364,-8.199279,-5.325530,4.588619],[-2.299552,-9.573894,-1.071064,0.224949],[3.156977,7.066883,9.798601,3.483630],[-4.146883,-6.066034,-8.742488,6.809247],[-3.369581,2.455326,-1.872149,2.336188],[-4.706869,2.520629,-4.679710,3.185976],[-1.393344,2.977280,-5.155597,-6.179345],[8.671610,-3.900397,8.249759,-6.845081],[1.886161,-5.960652,-0.634508,6.694685],[0.405367,8.312731,7.110327,1.829644],[-4.159612,5.615239,1.240481,2.148330],[4.443104,8.607187,7.007427,-8.905642],[2.990683,4.859846,-0.283586,-0.683040],[7.299613,6.693601,-1.702803,8.185345],[9.292946,8.301606,-4.926988,1.203705],[-6.918638,-7.020713,-6.788561,-0.270435],[1.858910,-8.827730,-5.322827,-8.207169],[-2.801328,8.976611,-7.226161,6.220068],[8.412253,9.374384,-9.536361,8.286101],[1.216911,-6.729965,3.211944,9.298118],[-9.971317,-5.734316,-0.826646,0.516907],[9.954669,1.099221,6.226757,2.580105],[6.108269,-3.000979,-2.100251,-0.010751],[4.411344,1.208520,9.625054,9.817654],[-3.341553,9.705295,-8.167648,-6.772717],[9.186776,-8.046442,-2.895295,6.541161],[-2.670664,2.981192,-9.906895,-2.566828],[5.583505,-9.444187,-3.901338,-4.860943],[4.328688,9.805554,-8.240349,3.622172],[7.993295,-5.134273,-9.012065,0.492094],[7.922064,3.914498,-4.368499,7.722444],[0.554587,-5.304301,-7.146466,5.381709],[-3.929572,0.393499,-5.827382,-3.371266],[-8.059070,0.803581,5.160424,1.236911],[-3.270860,-5.464452,-8.013295,-2.124030],[0.248471,9.495257,2.796162,5.838721],[1.835701,8.171698,-1.452862,1.069642],[-5.773403,8.264025,5.365018,9.908029],[6.456690,-7.480120,7.622667,7.858968],[-0.317355,-1.286782,7.526985,7.648936],[5.176948,-5.053229,8.896740,-4.333541],[6.257275,7.001836,1.797383,-9.113508],[-2.360702,-2.325380,0.433935,-9.957356],[2.437071,2.666102,-1.206449,0.373700],[6.767097,2.211856,-0.665724,7.423082],[9.737976,-8.338697,7.464053,9.432431],[-2.245742,2.814984,-1.584759,0.834580],[9.636578,-8.460525,0.331491,7.872907],[-3.324252,6.347041,-8.378630,-9.387226],[3.621908,-6.420885,5.278524,-8.735462],[-9.481723,6.289684,8.491231,-0.480127],[4.862925,5.093441,-5.320964,-0.774157],[8.036526,0.109304,-7.321593,-2.803935],[3.450945,-2.695403,-7.856720,-4.811341],[-6.760195,5.636833,-6.489194,-4.749379],[9.456644,-2.262388,-2.264617,-0.648167],[4.978353,-5.541686,9.518748,8.525403],[2.905419,2.704131,8.631734,-5.116059],[8.290378,4.256160,4.038546,9.048218],[3.453525,3.154435,-3.502347,-6.647381],[4.417977,6.184863,4.401493,7.579274],[-6.294287,-2.899132,-8.103448,-8.703901],[0.929863,8.706837,4.169855,7.562006],[3.143860,8.328123,-7.183574,5.777572],[-8.041936,-4.154063,1.145668,-9.376546],[-4.895581,0.037714,-7.114843,-4.701837],[-0.395098,-4.447632,-6.384885,-4.333713],[-2.599479,-5.144932,1.039217,0.561694],[-0.861288,3.200472,3.715172,-4.904610],[6.505920,8.324944,0.797970,9.360140],[4.594205,3.032376,6.648989,8.112504],[0.371148,-6.152342,1.066327,-1.870881],[5.189119,-1.000374,-2.136252,-2.929768],[-3.740241,7.234752,0.534152,1.180735],[-4.021775,-5.705645,3.469926,-6.549413],[5.375704,2.155602,-0.090671,0.276976],[-8.187141,-4.448483,-1.945127,-8.343100],[-9.939052,-7.033174,-5.895521,8.504660],[-2.739684,-9.982326,1.784412,3.763823],[2.752477,-7.754917,-8.315574,3.392849],[7.330767,6.887862,-7.124273,-1.671254],[8.742770,-1.973003,5.918942,7.843830],[4.154151,2.240926,-6.879243,-7.452662],[2.013663,3.509912,-8.742839,-4.782969],[-4.868342,9.244033,1.982898,-1.962227],[-5.752336,-1.952800,-4.273006,4.016785],[9.273800,-7.752689,1.726825,1.520446],[7.374682,7.732810,6.152820,3.172241],[5.786306,-4.783581,2.791486,-9.312615]], dtype = "float32")#candidate|1192|(448, 4)|const|float32
call_1191 = relay.TupleGetItem(func_814_call(relay.reshape(const_1192.astype('float32'), [7, 16, 16])), 0)
call_1193 = relay.TupleGetItem(func_817_call(relay.reshape(const_1192.astype('float32'), [7, 16, 16])), 0)
uop_1224 = relay.sigmoid(const_1192.astype('float64')) # shape=(448, 4)
uop_1228 = relay.log(uop_1224.astype('float64')) # shape=(448, 4)
output = relay.Tuple([call_1172,call_1188,const_1189,call_1191,uop_1228,])
output2 = relay.Tuple([call_1173,call_1190,const_1189,call_1193,uop_1228,])
func_1235 = relay.Function([], output)
mod['func_1235'] = func_1235
mod = relay.transform.InferType()(mod)
mutated_mod['func_1235'] = func_1235
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1235_call = mutated_mod.get_global_var('func_1235')
call_1236 = func_1235_call()
output = call_1236
func_1237 = relay.Function([], output)
mutated_mod['func_1237'] = func_1237
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1250 = relay.const([[[-0.813313,-5.846132,-0.480622,-2.215592,0.303742,-7.661794,-0.300371,0.471876],[4.814458,8.514143,-5.560495,2.830345,-4.899633,5.583908,-0.940672,1.275258],[-6.317759,-6.918941,3.751384,-1.343764,-4.589992,2.821865,-7.467298,-1.441445],[-6.595538,7.368800,3.983296,-1.760209,0.931218,-7.136525,-6.836956,-4.597784],[-6.461860,0.558712,-3.477460,-3.792142,3.769142,8.161373,-0.385357,4.318472],[7.325536,6.922888,7.639811,2.259319,-1.326115,-6.148186,8.049496,0.382037],[-2.830646,-4.331836,-0.710527,9.706996,-8.008391,8.262115,-5.231842,8.904698],[0.178284,-9.507301,-2.317054,1.147957,-2.116973,-1.108762,0.929345,0.146249],[-1.245447,-3.568328,-9.632023,-7.284499,-3.106038,2.701490,0.951832,-4.080441],[-5.336957,7.300467,-8.306520,5.758203,1.117748,2.411183,3.078658,-5.591475],[-8.844151,-9.500649,-8.156541,7.687034,-1.794126,0.861518,4.964527,6.995677],[-0.841327,3.087718,6.924078,9.858979,-4.720619,0.255652,4.946352,1.934074],[-1.571187,-2.288254,5.697574,6.488986,5.646224,6.262277,3.012769,-9.092611],[8.964740,-5.299938,-7.972471,5.707861,-3.999276,-4.098742,-0.813404,8.410248],[7.839561,2.118590,8.974375,-0.917436,1.571599,-7.261038,-4.463599,7.549696]],[[-8.700382,5.504152,4.127248,6.818428,7.602953,-0.558031,3.976757,9.783882],[8.149156,0.406152,0.586172,9.481513,4.582968,9.271736,-5.909716,-8.526239],[0.458788,9.459018,-1.734473,-9.565908,-0.717311,-9.278473,4.530693,-2.799657],[-1.377636,8.424975,-5.709982,0.933102,-6.253155,2.982074,3.564031,6.551433],[7.192486,7.989754,5.966509,-8.397995,-9.785828,-9.979544,-2.173272,3.816002],[-9.597820,-0.892715,1.862823,3.054941,0.545304,0.803706,-4.140155,6.273116],[3.642275,8.454328,-0.397538,4.710524,-1.818798,-4.220342,-6.228771,-4.629183],[8.037805,5.286636,-3.896282,-3.027888,-3.196614,-8.163482,4.202898,-1.080456],[-0.920214,4.168264,9.037531,-5.683063,-4.344509,-0.010267,-1.966610,-2.824532],[-9.811794,-8.254365,-9.857506,-1.400400,-1.698651,2.656708,-2.631507,3.283290],[4.051880,6.109024,4.549389,1.817019,9.070242,-0.846931,-2.180832,4.038567],[7.150861,4.158064,-1.611905,-5.431387,-2.363796,-7.056234,0.288822,3.670725],[5.264051,-9.649606,-6.135024,-4.507527,7.594512,1.931956,6.586061,-0.855660],[6.888501,-4.727356,4.398974,-2.045534,-4.257359,-7.476767,-5.020538,9.928238],[0.912030,-4.467027,5.953817,7.679527,-0.703365,-9.228634,5.485273,-8.870990]]], dtype = "float64")#candidate|1250|(2, 15, 8)|const|float64
uop_1251 = relay.exp(const_1250.astype('float64')) # shape=(2, 15, 8)
uop_1275 = relay.log(uop_1251.astype('float32')) # shape=(2, 15, 8)
output = uop_1275
output2 = uop_1275
func_1277 = relay.Function([], output)
mod['func_1277'] = func_1277
mod = relay.transform.InferType()(mod)
mutated_mod['func_1277'] = func_1277
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1277_call = mutated_mod.get_global_var('func_1277')
call_1278 = func_1277_call()
output = call_1278
func_1279 = relay.Function([], output)
mutated_mod['func_1279'] = func_1279
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1235_call = mod.get_global_var('func_1235')
func_1237_call = mutated_mod.get_global_var('func_1237')
call_1333 = relay.TupleGetItem(func_1235_call(), 2)
call_1334 = relay.TupleGetItem(func_1237_call(), 2)
output = call_1333
output2 = call_1334
func_1344 = relay.Function([], output)
mod['func_1344'] = func_1344
mod = relay.transform.InferType()(mod)
output = func_1344()
func_1345 = relay.Function([], output)
mutated_mod['func_1345'] = func_1345
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1344_call = mod.get_global_var('func_1344')
func_1345_call = mutated_mod.get_global_var('func_1345')
call_1351 = func_1344_call()
call_1352 = func_1344_call()
func_805_call = mod.get_global_var('func_805')
func_808_call = mutated_mod.get_global_var('func_808')
var_1362 = relay.var("var_1362", dtype = "int64", shape = (360,))#candidate|1362|(360,)|var|int64
call_1361 = func_805_call(relay.reshape(var_1362.astype('int64'), [12, 10, 3]), relay.reshape(var_1362.astype('int64'), [12, 10, 3]), )
call_1363 = func_805_call(relay.reshape(var_1362.astype('int64'), [12, 10, 3]), relay.reshape(var_1362.astype('int64'), [12, 10, 3]), )
output = relay.Tuple([call_1351,call_1361,var_1362,])
output2 = relay.Tuple([call_1352,call_1363,var_1362,])
func_1377 = relay.Function([var_1362,], output)
mod['func_1377'] = func_1377
mod = relay.transform.InferType()(mod)
mutated_mod['func_1377'] = func_1377
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1378 = relay.var("var_1378", dtype = "int64", shape = (360,))#candidate|1378|(360,)|var|int64
func_1377_call = mutated_mod.get_global_var('func_1377')
call_1379 = func_1377_call(var_1378)
output = call_1379
func_1380 = relay.Function([var_1378], output)
mutated_mod['func_1380'] = func_1380
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1158_call = mod.get_global_var('func_1158')
func_1160_call = mutated_mod.get_global_var('func_1160')
call_1421 = relay.TupleGetItem(func_1158_call(), 0)
call_1422 = relay.TupleGetItem(func_1160_call(), 0)
output = relay.Tuple([call_1421,])
output2 = relay.Tuple([call_1422,])
func_1431 = relay.Function([], output)
mod['func_1431'] = func_1431
mod = relay.transform.InferType()(mod)
mutated_mod['func_1431'] = func_1431
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1431_call = mutated_mod.get_global_var('func_1431')
call_1432 = func_1431_call()
output = call_1432
func_1433 = relay.Function([], output)
mutated_mod['func_1433'] = func_1433
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1439 = relay.const([[[-2.297834,0.134600],[-0.059607,6.795409],[1.846969,2.272482],[-6.939888,-7.459931],[8.325555,-7.821977],[-4.327866,6.264169],[-9.596011,-8.770068]],[[-9.530443,8.796829],[-7.715291,7.184133],[9.605133,-4.247986],[-7.284649,-2.992367],[-2.381262,0.732688],[9.812488,8.314881],[-5.881654,-8.989138]],[[1.507058,7.328166],[1.484359,9.687578],[2.033685,-3.436328],[6.910763,1.740096],[-2.090522,-2.309797],[-6.117775,-7.758034],[9.324768,-5.562041]],[[-6.967738,-2.248833],[2.412334,5.098296],[-2.872355,-1.143735],[-2.813319,-2.541520],[9.290358,2.515466],[7.526072,-9.083166],[7.729018,8.749521]]], dtype = "float32")#candidate|1439|(4, 7, 2)|const|float32
const_1440 = relay.const([[[-5.832778,9.414753],[8.469619,-3.221736],[9.852363,8.862977],[-9.762470,-9.722121],[-3.738773,4.662560],[3.667125,9.184824],[-3.481064,-7.586979]],[[-4.928300,7.399320],[6.013191,2.913998],[9.810540,2.013305],[9.952112,-5.308475],[-9.916137,-6.905194],[6.973070,-3.949032],[4.025139,-9.656126]],[[-3.171003,6.647694],[-5.554568,7.416587],[3.661511,2.718258],[-5.355022,5.005567],[6.440794,-1.723537],[-6.378894,-2.025676],[-5.526242,-6.088052]],[[4.964523,1.033813],[0.785641,-6.503891],[-5.272962,1.725286],[-4.928671,-6.432328],[-6.722519,-8.961191],[-1.255125,1.112023],[-8.332559,-5.105517]]], dtype = "float32")#candidate|1440|(4, 7, 2)|const|float32
bop_1441 = relay.mod(const_1439.astype('float32'), relay.reshape(const_1440.astype('float32'), relay.shape_of(const_1439))) # shape=(4, 7, 2)
const_1455 = relay.const([[[-3.373688,8.316426],[-4.240167,-9.293583],[9.507650,-8.375231],[8.765433,3.697407],[-9.756633,8.908405],[-8.427826,-5.450528],[-6.346178,6.514855]],[[5.529270,-2.689592],[-7.710191,-0.030315],[-4.714169,-7.741119],[-5.493954,-5.135245],[9.594441,5.766190],[5.534098,9.615847],[-5.334093,4.921413]],[[5.109290,-0.282012],[1.644350,-3.229809],[-5.339004,-6.621426],[8.364937,-1.563514],[-1.021115,7.319938],[6.390945,7.588898],[7.884966,-5.293626]],[[-8.891338,5.461351],[4.814446,1.198092],[-8.112438,-6.202959],[-8.705356,3.647701],[5.548029,9.762351],[-8.686316,-5.989740],[1.491193,-2.700815]]], dtype = "float32")#candidate|1455|(4, 7, 2)|const|float32
bop_1456 = relay.add(const_1439.astype('uint8'), relay.reshape(const_1455.astype('uint8'), relay.shape_of(const_1439))) # shape=(4, 7, 2)
func_993_call = mod.get_global_var('func_993')
func_996_call = mutated_mod.get_global_var('func_996')
var_1472 = relay.var("var_1472", dtype = "float32", shape = (72,))#candidate|1472|(72,)|var|float32
const_1473 = relay.const([[-4.522881,-8.046583,8.364151],[5.209830,-0.476456,5.929436],[-8.642574,-5.920837,-0.175985],[-3.058683,-2.225873,-7.040250],[-0.912553,-2.420197,-2.996902],[1.388851,2.606253,-5.250475],[-0.549484,-2.043259,9.640677],[-5.209391,-5.651709,4.256590],[0.037729,-5.920956,-0.075052],[5.268150,-4.086320,-8.089987],[7.555120,3.461962,1.421705],[7.790981,0.710994,-3.176712],[0.849335,8.592670,-6.135298],[-1.931743,-9.569015,6.788239],[-3.241189,0.060955,-3.849063],[0.267135,5.892678,-7.649874],[2.954378,3.498341,2.330552],[8.482782,-9.985051,-7.372276],[1.881757,-2.903139,5.862782],[4.204814,-7.823105,9.242649],[-9.116018,-5.031883,4.809833],[-2.954309,-5.315034,-6.009868],[-7.442385,-9.334470,-9.931097],[7.837765,-5.948470,0.120835],[9.417817,6.632604,-4.993208],[-0.409000,5.792296,-6.034159],[3.551517,8.257230,-8.125227],[7.156217,4.568175,8.165256],[-7.797586,-5.736057,-0.792647],[-1.108218,-9.592570,1.982974],[-0.816866,7.799784,-0.944705],[8.338214,-1.555705,4.819078],[-7.346494,8.975531,3.903117],[5.731403,0.350052,-0.399638],[5.006765,5.209626,-9.663369],[-2.015221,-9.846200,-2.494302],[-6.988328,-6.766852,2.235776],[9.963552,-6.650540,6.841563],[-0.931327,0.673829,-2.257456],[1.957245,0.513235,5.116728],[-7.388187,-4.875463,2.385431],[3.227606,-7.285011,9.932581],[-3.749931,1.272303,1.126173],[-5.257715,8.237114,-1.791923],[1.872353,-9.225996,-9.473488],[-7.957365,0.671826,-8.741589],[3.597729,-0.440724,4.213553],[7.416293,9.008025,8.277856],[-7.530403,-9.485310,4.078151],[1.297852,-7.351484,0.106143],[-0.482671,6.904349,1.590618],[-9.475299,-0.894961,-0.598241],[-1.343398,7.067381,5.412989],[1.602099,-0.605353,9.752322],[-9.630113,-2.360877,-3.998271],[1.410109,2.623155,5.653511],[-5.593939,1.629265,-2.288838],[3.988345,-4.746841,-5.664678],[7.386545,5.051626,2.854514],[3.457661,7.119496,1.775065],[-1.739900,-5.457383,2.556108],[-4.957935,-2.443894,-3.155292],[1.256039,1.392740,-9.008257],[2.012598,0.056998,9.031890],[-9.735895,-5.474153,-8.364716],[1.567057,6.944018,-5.366338],[7.565521,-7.461683,0.477262],[7.498150,-7.653243,-0.450789],[-0.095126,-6.756920,-4.511019],[3.238396,1.975706,-7.500751],[3.196061,-6.008788,-9.982227],[5.831161,3.975422,2.034164],[7.167102,4.497347,4.962298],[-2.644852,-6.588697,-2.805222],[3.263085,6.035185,7.772041],[-4.131253,7.870706,3.116333],[-0.299199,-2.102741,9.451270],[-0.957338,-1.225029,-9.085805],[5.653095,7.539777,-5.226284],[-8.378617,3.841114,-7.329384],[9.779971,4.840188,0.285390],[-2.774713,-2.545958,1.662811],[-8.298120,-3.287050,9.925375],[4.315327,5.087629,-6.800063],[-7.829130,5.905513,-2.160600],[-2.020070,3.897378,7.321199],[7.487256,-2.792404,-9.062257],[2.978987,8.600502,0.405266],[-2.476711,0.247442,1.131896],[0.483826,-6.036583,-9.754365],[-5.382510,-1.730307,-3.628372],[-8.385702,-6.626904,5.505713],[-0.650279,2.077400,-0.819143],[8.126714,1.807662,4.506903],[-7.852974,-6.435419,4.158907],[-6.859405,-9.517240,3.511957],[-8.362202,-0.130422,-2.087098],[9.530258,-5.125964,-8.868773],[8.425507,5.110707,-8.005475],[6.554854,-7.374817,6.891868],[-9.392232,9.308366,9.148177],[-8.977464,8.192936,-9.350839],[-8.781023,-3.370776,-5.204873],[-0.680083,-9.311583,2.567224],[-1.443744,-9.530512,-8.278109],[-1.114663,6.273830,2.050052],[2.765940,-7.325167,-9.083229],[-5.546289,-5.159613,1.213749],[-0.788777,-4.512732,-1.396135],[7.481543,-9.019603,8.451939],[-6.464080,-2.843098,7.438602],[-2.116422,5.440087,4.255141],[7.923824,-7.964959,8.715810],[-4.998215,6.373599,-7.171988],[-5.923149,-7.185037,3.927412],[-8.374659,-2.457324,4.445958],[-7.454803,-2.857784,-2.006096],[-7.673865,8.934987,3.681539],[-5.855173,-7.329914,-3.844894],[4.193995,9.335707,-5.002384],[6.456429,-1.065151,1.978778],[-8.227598,3.753157,1.703566],[-2.517204,1.302969,-7.531206],[-1.625433,-6.390670,1.344786],[-8.084881,-8.518413,-2.241056],[-4.726706,5.067845,5.385250],[4.309010,-9.694115,-9.685413],[-6.026624,2.508251,2.680631],[9.165905,0.678702,-8.335261],[-7.299275,9.553301,-7.594087],[3.315470,-3.822681,5.909782],[2.056047,3.376724,3.098215],[5.180986,-5.691305,9.150162],[4.721362,-6.036652,8.296496],[3.583989,6.807172,-1.516037],[-3.461857,-6.760479,-9.444367],[0.307283,-5.265745,6.606851],[-3.493975,-0.099765,-9.003575],[-9.672520,-1.374374,-4.305478],[-1.190151,4.555903,-9.488330],[5.317392,-1.300229,8.564520],[-6.587388,-5.042394,3.882854],[-0.079093,9.211733,6.805850],[7.163452,5.975849,-2.948483],[2.446653,7.230612,-5.305446],[-2.190446,-0.913987,2.948765],[5.107149,-9.753324,7.598903],[0.559995,-8.371877,-6.402028],[-7.457233,6.340560,0.327539],[2.756091,-4.587445,1.524153],[6.172424,4.964985,-8.708274],[2.314942,-5.721774,-2.221125],[-2.006970,1.825738,-5.726818],[-0.895213,4.089052,-4.826270],[0.727249,8.871358,-8.723960],[-4.668907,-2.672339,2.256529],[-9.018543,-6.809745,5.728460],[-6.457369,1.767886,-7.658530],[8.333130,-5.114395,-6.891207],[5.247108,2.787160,-2.799524],[-2.341004,5.427988,-2.456822],[5.140679,8.844088,3.370575],[-4.011174,-8.703355,7.909529],[8.887853,9.600783,-0.731812],[-0.856159,6.541061,-9.060865],[1.294827,-9.777298,-4.002999],[-2.435382,-0.735852,3.016725],[-4.556227,3.216225,8.696015],[3.771591,-0.932489,8.553267],[-1.685120,-5.450146,3.580038],[7.477764,8.548217,5.612480],[-0.961357,-3.324110,8.024285],[-6.335046,0.672608,9.798240],[8.987436,-5.241599,0.598784],[-3.611314,5.910199,-9.068414],[9.091225,-7.330616,4.611202],[-8.561978,5.974936,-3.746988],[4.531073,-6.516087,5.372324],[9.322364,-4.739544,-2.443178],[9.911439,3.350466,3.666771],[8.196001,-0.645163,-5.168616],[4.361789,4.982371,5.212649],[-2.444833,2.233867,6.843193],[-1.936475,9.433719,-0.663966],[-0.489022,-3.256029,3.274888],[6.386311,-1.749249,-0.628871],[-2.697227,-1.510913,-2.559974],[4.116566,-7.558651,5.295303],[6.788994,-1.111931,-3.141098],[-2.259672,8.325335,-3.132690],[5.828841,1.135006,7.885443],[-4.424272,-5.851932,-3.114650],[-1.227985,9.905402,-0.681666],[-7.108669,-8.682761,-2.624065],[-4.167615,0.929690,6.118616],[-5.560093,-0.476136,-0.327464],[7.384159,4.563907,2.035429],[-5.355823,0.115559,-5.140864],[-2.346700,-7.851476,-5.485962],[3.165273,7.777265,-3.361941],[-7.264456,7.061121,-2.941176],[5.971538,-5.930871,1.508754],[-7.387634,8.483647,7.624225],[0.924752,9.620261,-9.378306],[-3.707775,-9.610038,0.460171],[-1.128927,4.412960,-8.145663],[5.552250,5.646602,-1.293719],[-5.152825,-1.451782,-5.885272],[3.676255,3.077691,3.613705],[-0.977744,9.328453,-9.710721],[0.328645,-0.484745,-9.180151],[1.943262,-6.924022,-8.498357],[9.442414,7.969071,-0.947778],[-6.957465,8.478838,-4.169408],[2.283408,-2.493068,4.564004],[2.952374,1.850145,5.895711],[-9.522548,-5.893402,6.780507],[1.355407,0.914284,-2.443114],[4.939933,9.552744,-0.655159],[0.274873,9.873811,-4.367240],[-5.566074,7.567969,-8.135709],[-3.880118,0.083908,6.938472],[0.862418,-6.753797,-0.505957],[-9.904749,2.109410,-4.847464],[-9.711698,2.496999,-4.122654],[-8.961604,-0.351154,-3.297884],[8.417220,6.785302,0.243717],[7.764725,-7.849605,8.818894],[1.920444,-0.284442,-5.253637],[-9.551466,-9.338702,-1.036224],[-0.114752,-9.626158,-8.838474],[7.114548,5.112614,6.772675],[4.168840,3.378573,-3.339237],[-4.372059,-9.333672,-3.900672],[-4.143804,1.061001,-2.015882],[8.072038,6.608091,8.172928],[-4.370967,8.555617,-8.034538],[1.635869,7.371044,2.398238],[0.061826,4.833577,-2.903540],[-8.793410,4.117747,2.151656],[9.144197,-4.560731,-9.964965],[9.464961,-4.057054,-6.256397],[5.476099,-7.932315,-6.612896],[-0.526304,-7.625368,-1.306823],[2.255098,7.081641,-0.680518],[-0.885684,6.125936,-5.488612],[0.655098,-0.441973,-0.939123],[-2.887539,-7.099530,4.599780],[-7.305833,8.899175,2.844916],[9.195137,-3.348664,7.627018],[1.456994,5.186338,-2.405916],[2.678235,5.890856,5.011659],[-6.265184,7.890830,4.042582],[-5.871096,-8.731913,-1.190199],[5.338723,-4.899955,-8.704160],[-7.105558,3.105666,-0.933897],[-5.180313,3.186388,2.147951],[4.827390,-9.243128,8.262832],[2.478291,1.752850,8.712695],[-4.898739,0.833954,-4.575595],[-7.891624,-0.225713,-4.436799],[-3.218593,-6.848575,-5.823191],[-3.306858,3.651966,-7.398883],[-4.999664,-0.146506,7.074417],[2.174023,-4.002075,-3.410070],[-1.195475,-5.661172,4.851339],[4.153989,9.170965,5.852136],[-0.437201,0.708708,3.798007],[-0.941068,-2.508340,5.990790],[-9.225366,6.619474,-1.862023],[2.782201,-8.782730,7.838442],[6.179019,7.467254,-9.276946],[-4.776066,8.184027,-9.835651],[-0.926055,-3.058431,-6.419408],[-3.426644,0.691384,5.545870],[-5.966670,-7.632167,-3.345817],[-1.658074,8.292009,-7.810001],[-5.675664,-6.298760,4.325280],[-7.758889,6.048363,-5.323364],[1.140974,-4.967485,-4.775167],[-4.223852,-6.767999,4.627532],[-7.436164,-7.521890,-6.462358],[1.868587,-2.369569,-7.835947],[-6.174548,1.076830,3.919628],[0.550396,-8.297334,9.136514],[-1.103507,9.343370,8.700706],[5.995437,-0.731776,3.065073],[1.429943,-4.512596,-9.813809],[4.431766,2.253134,-3.316353],[-1.186875,6.455982,9.145098],[0.133229,-3.833975,-0.538183],[0.089592,0.329726,-6.742257],[-6.481663,1.592515,5.480697],[2.726189,6.578575,9.419113],[-8.721150,4.563095,-6.709104],[-1.232444,-3.304068,4.249288],[-6.704772,1.102033,-1.723721],[-9.333524,7.184616,9.772217],[6.885263,4.633790,-3.634736],[-0.076941,-3.274572,-3.237740],[-5.650430,-1.648022,-6.872119],[-9.376333,-8.389663,-0.629803],[7.829131,-0.151247,1.325231],[4.051703,-7.380447,0.779953],[4.415184,1.837856,1.328041],[-5.047494,2.892046,9.167172],[-0.888273,-7.096105,5.761617],[-2.637586,-5.192426,6.153026],[-4.844214,-2.249447,0.169190],[5.056265,-1.010667,-0.063728],[8.878118,3.210872,0.784631],[-5.729566,-0.826097,-0.413241],[5.688563,-3.263707,6.206784],[5.588311,-9.055606,7.584610],[2.618568,-7.906404,3.577500],[-8.371201,-9.111238,9.364365],[-9.317967,8.985190,4.791706],[-7.130539,-5.854222,-8.570198],[-4.983559,-6.138840,4.302347],[-3.684133,-9.994166,-5.678036],[9.328090,-3.868503,7.284702],[3.345965,2.155898,-6.981646],[-2.351671,-6.716980,-6.066927],[1.400138,-2.815101,3.946126],[9.912852,8.984160,0.294076],[8.004642,-7.566208,-5.764324],[-9.497185,7.736962,-7.624282],[-2.441872,-5.024462,-5.909947],[3.425515,5.102108,8.164518],[4.932336,-0.188162,-4.367374],[1.638847,-0.008679,-3.522653],[2.875328,-6.397215,-9.072787],[-1.657258,2.212210,2.671747],[3.028178,6.960517,9.529778],[-4.076237,0.079180,1.683590],[-0.088492,-7.363728,-8.348835],[4.096143,2.451205,-5.493447],[-4.840812,-5.856696,7.469138],[4.247778,-5.045800,1.610585],[9.359127,-5.707405,-5.068548],[8.240505,-2.594346,7.212618],[-4.023741,-5.066543,-6.261088],[6.230980,-5.708875,-4.300478],[-8.841592,-6.192046,1.090363],[-2.347925,1.028883,1.830136],[-1.734725,-6.819267,-2.647659],[9.003566,-3.141131,-4.725802],[-9.379731,-2.901877,1.003342],[-1.886164,-4.295687,-6.805596],[-3.281159,5.774085,-8.844628],[6.430328,6.611832,3.370825],[1.495527,-7.786140,7.997367],[-2.681208,-4.896393,-1.184354],[5.857958,1.796944,4.668649],[7.341195,-1.149131,-3.822156],[-0.579565,2.981308,5.381742],[6.518601,8.946139,9.516784],[6.565786,-4.192140,-4.561382],[8.281048,3.706113,8.234377],[8.375858,-8.929654,2.839631],[-6.622884,-8.840885,5.776548],[-2.695385,-2.023951,-3.809214],[-6.575142,2.212998,-3.090371],[4.670211,-3.291588,-9.351410],[-4.225740,-3.522751,-9.821223],[4.534616,4.097796,-3.466059],[9.762022,-1.701680,2.038210],[9.884458,-2.343510,-9.227230],[-6.479225,-0.622379,2.250069],[3.879905,-4.622744,-4.928725],[2.277299,0.199835,-2.525345],[-7.649740,2.835132,4.510845],[5.172048,-9.488421,-5.200484],[-0.110840,4.732220,6.550910],[-4.022916,-6.433338,-7.880232],[6.578732,-3.137374,8.792924],[-0.872260,-8.529717,-1.786054],[-0.202721,2.875966,9.348650],[-5.727841,-0.303674,-0.691938],[-4.787694,-4.855551,-9.771447],[5.844202,4.850299,-3.947381],[-2.007459,-8.132956,-0.154792],[0.431931,-9.990142,-7.827756],[-8.539227,-1.462625,-9.571374],[-7.829823,0.529292,8.419829],[0.239770,7.382424,-1.709240],[4.588276,-5.718851,2.639376],[-7.252186,-2.501937,7.565515],[-7.965538,4.589100,1.211694],[-5.510823,-5.181059,-3.537966]], dtype = "float32")#candidate|1473|(390, 3)|const|float32
call_1471 = relay.TupleGetItem(func_993_call(relay.reshape(var_1472.astype('float32'), [12, 1, 6]), relay.reshape(const_1473.astype('float32'), [1170,]), ), 2)
call_1474 = relay.TupleGetItem(func_996_call(relay.reshape(var_1472.astype('float32'), [12, 1, 6]), relay.reshape(const_1473.astype('float32'), [1170,]), ), 2)
output = relay.Tuple([bop_1441,bop_1456,call_1471,var_1472,const_1473,])
output2 = relay.Tuple([bop_1441,bop_1456,call_1474,var_1472,const_1473,])
func_1486 = relay.Function([var_1472,], output)
mod['func_1486'] = func_1486
mod = relay.transform.InferType()(mod)
mutated_mod['func_1486'] = func_1486
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1487 = relay.var("var_1487", dtype = "float32", shape = (72,))#candidate|1487|(72,)|var|float32
func_1486_call = mutated_mod.get_global_var('func_1486')
call_1488 = func_1486_call(var_1487)
output = call_1488
func_1489 = relay.Function([var_1487], output)
mutated_mod['func_1489'] = func_1489
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1059_call = mod.get_global_var('func_1059')
func_1061_call = mutated_mod.get_global_var('func_1061')
call_1491 = relay.TupleGetItem(func_1059_call(), 0)
call_1492 = relay.TupleGetItem(func_1061_call(), 0)
func_814_call = mod.get_global_var('func_814')
func_817_call = mutated_mod.get_global_var('func_817')
var_1495 = relay.var("var_1495", dtype = "float32", shape = (8, 224))#candidate|1495|(8, 224)|var|float32
call_1494 = relay.TupleGetItem(func_814_call(relay.reshape(var_1495.astype('float32'), [7, 16, 16])), 0)
call_1496 = relay.TupleGetItem(func_817_call(relay.reshape(var_1495.astype('float32'), [7, 16, 16])), 0)
func_441_call = mod.get_global_var('func_441')
func_445_call = mutated_mod.get_global_var('func_445')
var_1502 = relay.var("var_1502", dtype = "float32", shape = (1170,))#candidate|1502|(1170,)|var|float32
call_1501 = relay.TupleGetItem(func_441_call(relay.reshape(var_1502.astype('float32'), [13, 10, 9]), relay.reshape(var_1502.astype('float32'), [13, 10, 9]), relay.reshape(var_1502.astype('float32'), [13, 10, 9]), ), 4)
call_1503 = relay.TupleGetItem(func_445_call(relay.reshape(var_1502.astype('float32'), [13, 10, 9]), relay.reshape(var_1502.astype('float32'), [13, 10, 9]), relay.reshape(var_1502.astype('float32'), [13, 10, 9]), ), 4)
uop_1506 = relay.log10(var_1495.astype('float32')) # shape=(8, 224)
func_441_call = mod.get_global_var('func_441')
func_445_call = mutated_mod.get_global_var('func_445')
call_1508 = relay.TupleGetItem(func_441_call(relay.reshape(call_1501.astype('float32'), [13, 10, 9]), relay.reshape(var_1502.astype('float32'), [13, 10, 9]), relay.reshape(var_1502.astype('float32'), [13, 10, 9]), ), 2)
call_1509 = relay.TupleGetItem(func_445_call(relay.reshape(call_1501.astype('float32'), [13, 10, 9]), relay.reshape(var_1502.astype('float32'), [13, 10, 9]), relay.reshape(var_1502.astype('float32'), [13, 10, 9]), ), 2)
uop_1511 = relay.cosh(uop_1506.astype('float32')) # shape=(8, 224)
uop_1519 = relay.sigmoid(uop_1506.astype('float32')) # shape=(8, 224)
output = relay.Tuple([call_1491,call_1494,call_1501,var_1502,call_1508,uop_1511,uop_1519,])
output2 = relay.Tuple([call_1492,call_1496,call_1503,var_1502,call_1509,uop_1511,uop_1519,])
func_1523 = relay.Function([var_1495,var_1502,], output)
mod['func_1523'] = func_1523
mod = relay.transform.InferType()(mod)
var_1524 = relay.var("var_1524", dtype = "float32", shape = (8, 224))#candidate|1524|(8, 224)|var|float32
var_1525 = relay.var("var_1525", dtype = "float32", shape = (1170,))#candidate|1525|(1170,)|var|float32
output = func_1523(var_1524,var_1525,)
func_1526 = relay.Function([var_1524,var_1525,], output)
mutated_mod['func_1526'] = func_1526
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1431_call = mod.get_global_var('func_1431')
func_1433_call = mutated_mod.get_global_var('func_1433')
call_1531 = relay.TupleGetItem(func_1431_call(), 0)
call_1532 = relay.TupleGetItem(func_1433_call(), 0)
func_1059_call = mod.get_global_var('func_1059')
func_1061_call = mutated_mod.get_global_var('func_1061')
call_1547 = relay.TupleGetItem(func_1059_call(), 0)
call_1548 = relay.TupleGetItem(func_1061_call(), 0)
output = relay.Tuple([call_1531,call_1547,])
output2 = relay.Tuple([call_1532,call_1548,])
func_1568 = relay.Function([], output)
mod['func_1568'] = func_1568
mod = relay.transform.InferType()(mod)
mutated_mod['func_1568'] = func_1568
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1568_call = mutated_mod.get_global_var('func_1568')
call_1569 = func_1568_call()
output = call_1569
func_1570 = relay.Function([], output)
mutated_mod['func_1570'] = func_1570
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1059_call = mod.get_global_var('func_1059')
func_1061_call = mutated_mod.get_global_var('func_1061')
call_1586 = relay.TupleGetItem(func_1059_call(), 0)
call_1587 = relay.TupleGetItem(func_1061_call(), 0)
output = call_1586
output2 = call_1587
func_1591 = relay.Function([], output)
mod['func_1591'] = func_1591
mod = relay.transform.InferType()(mod)
mutated_mod['func_1591'] = func_1591
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1591_call = mutated_mod.get_global_var('func_1591')
call_1592 = func_1591_call()
output = call_1592
func_1593 = relay.Function([], output)
mutated_mod['func_1593'] = func_1593
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1591_call = mod.get_global_var('func_1591')
func_1593_call = mutated_mod.get_global_var('func_1593')
call_1610 = func_1591_call()
call_1611 = func_1591_call()
func_441_call = mod.get_global_var('func_441')
func_445_call = mutated_mod.get_global_var('func_445')
var_1631 = relay.var("var_1631", dtype = "float32", shape = (5, 234))#candidate|1631|(5, 234)|var|float32
call_1630 = relay.TupleGetItem(func_441_call(relay.reshape(var_1631.astype('float32'), [13, 10, 9]), relay.reshape(var_1631.astype('float32'), [13, 10, 9]), relay.reshape(var_1631.astype('float32'), [13, 10, 9]), ), 7)
call_1632 = relay.TupleGetItem(func_445_call(relay.reshape(var_1631.astype('float32'), [13, 10, 9]), relay.reshape(var_1631.astype('float32'), [13, 10, 9]), relay.reshape(var_1631.astype('float32'), [13, 10, 9]), ), 7)
uop_1633 = relay.erf(call_1630.astype('float64')) # shape=(13, 10, 9)
uop_1635 = relay.erf(call_1632.astype('float64')) # shape=(13, 10, 9)
uop_1644 = relay.atanh(uop_1633.astype('float32')) # shape=(13, 10, 9)
uop_1646 = relay.atanh(uop_1635.astype('float32')) # shape=(13, 10, 9)
output = relay.Tuple([call_1610,var_1631,uop_1644,])
output2 = relay.Tuple([call_1611,var_1631,uop_1646,])
func_1648 = relay.Function([var_1631,], output)
mod['func_1648'] = func_1648
mod = relay.transform.InferType()(mod)
mutated_mod['func_1648'] = func_1648
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1649 = relay.var("var_1649", dtype = "float32", shape = (5, 234))#candidate|1649|(5, 234)|var|float32
func_1648_call = mutated_mod.get_global_var('func_1648')
call_1650 = func_1648_call(var_1649)
output = call_1650
func_1651 = relay.Function([var_1649], output)
mutated_mod['func_1651'] = func_1651
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1344_call = mod.get_global_var('func_1344')
func_1345_call = mutated_mod.get_global_var('func_1345')
call_1655 = func_1344_call()
call_1656 = func_1344_call()
const_1657 = relay.const([-5.877219,4.441863,7.839289,5.594605,1.396472,0.925498,9.061563,-4.870232,3.874650,-4.374984,-9.255020,1.311844,2.338792,2.663741,7.881534,1.894767,5.473904,-4.978007,5.564104,1.469718,5.235992,-7.141961,4.236756,-3.470593,-5.864679,-3.265614,-9.503528,-5.939139,-0.539362,5.395087,-4.452707,2.032421,6.620710,8.600766,6.363331,0.558806,5.437161,-2.943208,-5.249247,7.895119,2.147809,8.751809,4.271517,3.202399,5.716590,4.791080,3.393826,-2.975738,-1.105969,2.619399,-5.672316,-0.379137,-4.015310,-4.772639,4.466267,-1.938860,4.222713,9.294331,4.735472,-1.490908,3.254859,0.484497,-4.647754,-5.007047,8.733137,5.859790,-4.475882,3.347407,-8.893277,-2.527744,-0.252297,-8.283072,-3.669407,-6.595041,-6.547450,0.242598,6.187182,-0.339487,-4.506705,-6.788067,-9.857709,6.068944,-5.279037,-4.971323,-6.111445,-4.003500,9.687099,0.947919,-4.416662,7.950240,-8.131745,6.287394,5.067576,-2.312713,-8.131064,5.545129,-4.636493,6.612173,-6.963267,6.131736,-7.590129,2.800849,-1.558564,-8.296657,-4.410743,5.350852,-3.069120,-0.448715,-5.442633,1.896327,-0.151814,7.165544,3.785116,8.271877,-5.323338,-2.175949,-3.722977,-2.290185,-9.135298,-3.431751,2.933815,-8.568414,-5.474002,3.994169,7.918361,3.199085,-6.645423,-9.041380,8.084863,3.733478,-6.464779,6.010113,5.614513,6.555058,-2.780404,-5.660677,0.352928,5.554529,-8.962238,-8.891159,9.571167,7.086336,-9.067386,0.358054,4.126962,-3.020102,-6.858180,-1.780409,5.249958,-8.365997,1.164050,2.892020,4.172842,-7.092383,-5.416321,7.236485,-1.484704,7.542365,-5.678495,0.431572,2.543442,4.333238,1.519620,1.956705,7.968362,-6.787671,-2.309429,8.883309,-4.332318,7.431477,-5.711044,-3.679412,8.569938,7.571670,-5.657672,5.644168,-4.414872,2.817826,1.009476,1.444763,-4.999885,4.878682,4.798027,-2.641155,8.838695,-8.331724,-0.883248,-3.890201,-0.541873,5.126624,-5.754595,-1.295399,4.653864,-2.218033,-6.750336,1.529657,0.837791,-2.526769,9.335010,-4.754943,-4.938158,-0.983220,1.838429,0.261078,7.985514,-9.666374,4.663181,-6.531453,6.951772,6.042877,-5.648158,-1.378426,-4.871928,0.010137,-4.566176,-6.842548,-5.262611,1.799137,6.534099,-5.503847,-9.740249,1.082523,6.100228,-9.438194,-7.352036,1.735339,0.033746,2.479174,-1.769923,0.247292,-6.979150,5.074301,4.091010,5.184615,8.730418,6.638774,-6.857966,-0.824453,-4.071439,-0.056082,-1.756040,-4.378826,-2.617535,1.349281,-7.045062,2.895055,-8.014537,2.579811,3.691152,5.090498,-4.408815,-8.725561,9.796184,5.098990,-6.761011,-2.283881,4.965894,-4.803085,-3.336439,-0.905848,-9.590432,-0.148741,-5.782626,-1.838823,-3.247010,5.838053,-5.103526,2.143279,-0.255099,-1.940851,9.586903,7.736274,6.298110,-4.914652,-9.324166,-3.321739,-9.478755,8.697268,-5.152279,-8.564214,8.282296,-1.935169,-5.139085,9.875092,-0.402355,0.255801,3.059590,-1.101499,-8.780619,-7.064357,1.705102,0.950350,2.908925,-4.055692,6.815570,-2.486724,-0.830551,-0.288282,7.869826,5.361289,5.877185,1.798944,-6.577122,9.013839,-8.609404,1.454804,-2.355656,3.314788,0.030729,-2.077007,-5.068532,-6.803464,2.892080,6.189064,-0.056556,-3.804814,8.134732,-9.182694,3.217760,-7.339817,-4.742024,2.570507,0.135959,-8.766743,-0.411936,0.667911,-7.910739,-8.771119,-9.679391,-7.554816,-9.238172,8.199021,-2.868716,0.297809,9.608784,6.155564,2.148520,7.542166,8.198773,-3.697656,-3.600279,-8.357235,6.762669,-5.312341,5.460315,-4.593780,1.262350,6.771014,-4.638470,7.195295,6.201706,6.047933,4.326593,1.142039,-4.566720,-6.244460,5.113821,5.640299,3.795757,-4.314790,-3.061250,7.220264,-5.142780,3.793326,5.091061,5.095392,6.930394,-4.424167,8.036420,1.487648,0.987751,-6.641440,3.735011,3.956923,4.064913,7.323292,-3.581290,4.096442,6.525621,8.068486,7.366506,8.235078,8.648031,5.603078,5.306943,0.637503,-2.873265,0.151275,0.641971,0.584837,2.789139,7.660310,1.084583,-3.424376,5.625975,5.496355,-7.015637,-6.165733,-3.865892,-5.293682,-6.321708,-1.693797,9.379008,-8.040570,-2.277926,7.695932,-6.965088,-2.698591,3.309945,6.769383,-5.388049,1.719502,7.327899,4.409249,6.798402,-2.552202,6.461953,5.265562,-2.401216,4.580932,4.599036,-9.264688,5.199032,6.983199,-4.832480,-7.957793,7.464814,0.422597,1.580863,1.169268,8.647492,-8.398742,-0.276256,4.263891,-7.196703,-4.699088,-1.646620,8.848539,2.626386,-4.354577,0.532717,-8.657474,3.025807,-7.080957,-0.550025,2.781012,1.732978,-2.378729,1.760038,-4.546753,3.186480,6.683057,-4.275994,6.606010,5.621547,2.717762,-9.240186,-4.917111,9.717558,-5.889255,-7.246549,6.854084,-0.590249,1.405884,-4.780878,0.678097,-6.067020,7.421922,2.556573,-8.473935,-4.743767,-3.053359,-7.349785,-7.242096,6.258466,2.394754,5.959040,6.517913,3.220348,7.052594,-6.763072,4.357773,-3.040948,9.742689,7.427086,-7.816058,5.221346,2.581355,6.638113,-2.382630,-0.897569,-1.294306,-6.792970,0.296230,1.133631,2.116590,4.735506,-3.733363,6.019324,-6.465409,-2.437591,3.436903,5.883919,5.261331,-3.271741,8.687619,2.561114,-7.265668,9.238049,3.831195,0.953513,-2.895511,5.601304,-9.032498,4.028422,-5.926291,5.683369,2.038846,-5.636286,-7.594484,-8.808215,4.214425,0.840148,-1.443318,-9.103697,1.790079,-2.516783,-9.893699,4.012973,6.113705,8.219390,-4.089595,0.427821,9.582453,-0.035675,-4.605663,7.755967,-9.685294,-1.588827,1.130326,9.685935,-3.513189,4.500736,5.138783,6.502333,3.272093,-3.893664,1.297845,8.988591,7.279660,-2.970437,4.558311,-8.404094,4.270581,-8.886392,9.556202,7.642075,2.442219,-2.044975,5.050889,5.250302,2.260061,-0.366955,4.481663,1.505679,2.251629,3.991293,-2.219009,7.320095,-8.583734,-3.743592,7.927427,9.695182,-4.539932,8.935589,3.357860,-0.788045,4.784082,4.974916,1.123705,1.237383,4.438690,1.672727,-5.543161,1.213092,-3.600021,-4.485626,5.898976,-3.063620,-9.619958,-2.245855,3.068388,-3.856073,9.752685,7.658615,-7.909546,-9.395193,4.155699,0.790217,-4.900719,-7.787808,8.669192,-8.655000,-6.883466,-4.275718,-8.655369,-5.562620,-9.157816,-5.231391,4.736365,-4.880431,3.561134,5.244140,-7.282473,-0.584329,1.279611,9.855336,-0.019215,5.296125,-3.094558,4.625126,-0.253328,-5.851175,-6.511299,7.195726,8.375661,4.858549,-9.275531,6.389964,-9.271714,8.291242,6.166670,-4.137728,-6.848588,-8.749726,8.351602,0.002285,-1.061176,-6.919659,7.532341,-9.420013,9.862536,6.310523,-0.915429,-5.213323,-6.832992,-5.238407,-8.930296,2.663180,-7.204370,-9.673261,2.825301,-8.643693,7.736765,-9.751290,-3.692451,2.699760,7.838569,5.823489,-8.551288,-6.097507,4.386412,-4.635926,0.956640,-7.644542,4.021928,0.914509,-7.648275,-7.866668,6.634633,-7.771447,6.422106,1.494519,-8.278860,-7.473002,9.862801,-6.812438,7.790608,-6.854118,-6.259563,7.143193,0.148433,1.214522,-8.745119,-0.443060,-2.389342,8.912356,-5.875187,-9.108945,6.770776,6.442575,0.755894,4.568051,-3.417523,5.527875,-1.156359,9.381485,-6.091587,9.226076,-6.877480,-2.511634,7.217833,8.430500,-6.793438,-6.405730,-0.026040,-8.003233,1.886723,3.273061,-0.201190,2.160415,7.103462,-3.267903,5.645718,-9.269610,3.052157,-8.783458,-9.746459,3.763692,-0.448632,-6.548944,2.335689,-1.138766,-7.379150,0.110196,3.760533,8.039481,5.674095,-6.629756,8.596549,-1.459648,2.773719,5.844275,-5.586682,-1.936170,1.097378,-3.269380,-1.402408,1.036480,-0.253229,0.640210,1.135080,-4.154358,-3.901214,6.108384,0.515728,8.089355,8.399048,-3.585983,5.249725,-9.437286,9.367777,2.737839,2.390018,-8.976531,1.483684,5.890010,-9.386923,1.630503,-9.134239,-3.088347,3.566734,-2.031086,7.712818,-3.515649,-6.861106,6.831707,5.373990,5.518134,5.353792,-9.983499,2.679268,-2.734997,2.794714,-4.066816,-2.692986,9.987084,-0.444609,-5.146659,-8.898212,-9.464577,5.840197,-4.042587,9.322613,-8.604914,1.177763,1.087919,-6.298498,-8.072660,-2.068041,-4.378907,-9.196039,-3.427059,6.894027,-5.713923,1.811704,-0.246551,-2.258514,-4.101184,-4.794959,-1.835584,6.780370,-1.551520,3.118639,-5.186515,-0.676704,9.774127,-8.154956,2.896122,-9.604634,-0.211032,1.806334,1.406668,0.617710,9.130221,-5.689752,-1.281946,6.739298,4.672075,3.918386,-8.494249,-7.894227,-8.068461,9.407839,5.871954,9.817596,-6.677575,-0.023945,-2.171202,5.949769,-6.320395,-0.644508,6.894687,9.521769,-2.293584,-5.198162,-2.613297,-1.425251,-7.191287,9.921324,-5.333729,5.562773,3.832147,-8.073258,1.398674,4.044004,2.320767,-2.366656,5.506099,9.086226,8.685747,1.753793,8.927156,-0.479360,7.852819,2.406085,1.105792,-6.878857,-6.932499,-2.613070,-7.644497,3.096768,3.040875,3.140460,-4.788067,6.459580,-8.581941,4.477528,-5.758641,0.038620,0.884158,0.628369,5.043464,6.869149,-7.907515,-4.258727,6.310178,-9.646816,1.318626,-8.597485,7.153817,8.392524,-6.156261,5.170887,5.641273,-3.736678,7.532324,7.113938,-7.667413,-0.713505,-4.914669,3.934535,0.704044,7.946407,0.010180,-8.073891,4.414491,8.959921,-6.538023,-6.495776,7.694615,9.257723,8.965252,-1.718297,8.097737,-5.994463,3.474400,-6.778138,-9.486784,2.150776,0.754497,-1.745108,-9.866161,-3.463752,-5.208784,-4.510572,6.469503,-4.673909,-2.942723,-9.801446,9.100537,6.344039,6.367639,3.529804,3.552814,9.122734,-9.195515,5.807537,5.368269,-6.952702,6.917586,-9.401225,-5.731171,3.736691,1.145912,-5.926093,-9.657423,9.530178,2.288672,9.536012,1.253170,0.431481,-7.484610,-5.938884,-3.267189,2.940323,7.333225,0.917119,-2.888091,-5.999177,-7.932874,8.897903,0.925636,-3.794532,1.107222,2.477446,9.360687,9.740842,-6.377469,5.927504,-7.974203,-5.135752,-9.918710,0.393891,-1.805404,-6.663099,-4.298983,5.200518,-6.393526,1.728345,-0.045674,6.560354,0.168040,5.312654,-6.928693,2.137617,-4.497844,3.129811,2.501488,0.401304,-1.201755,-3.137528,3.748379,-5.774090,-4.115150,-5.438330,3.048947,-1.514207,-7.217323,-6.153975,-1.363268,8.385465,7.132609,-1.040766,1.856193,-5.378027,7.469580,-8.471124,-3.833838,9.192247,-7.641971,2.219287,7.489459,2.539090,-0.883794,-8.848415,3.692515,6.263835,-5.783003,5.961359,0.142624,-0.335724,-2.704731,-3.240353,7.430029,3.602990,7.685936,8.506881,-5.943153,-6.973396,-0.302610,-7.687445,-4.379630,-0.562934,6.597031,-4.564103,6.148609,3.009939,9.868974,2.872912,5.067070,5.671742,4.905869,4.277949,1.424958,-7.083969,7.453329,6.539059,-9.481148,-9.079236,5.419787,3.707822,9.460981,-1.017923,-6.816021,-0.232473,1.391795,-7.413670,-3.844240,-3.474868,4.636230,-8.946274,3.249710,-9.278459,3.020553,9.164174,6.405054,-3.212241,-3.892870,7.588608,-3.097980,-5.875127,7.512441,-6.512976,8.969215,4.272336,-5.218298,4.866830,1.036836,6.858816,-5.184310,7.819508,7.021297,4.385047,9.048834,-5.771540,-7.965864,7.082287,1.968394,6.145058,-2.576544,3.943958,-4.257855,7.535262,-1.894404,4.380019,0.082110,-7.195772,-4.182558,-1.656426,6.885373,7.340296,-3.962056,6.770111,-9.157648,-0.476179,-5.656424,5.948849,-0.957899,-6.976899,-4.077475,4.698890,0.552329,-9.263915,6.020069,5.532845,-2.002651,-7.869982,7.321760,-3.451125,8.380362,-8.791963,6.791115,-5.022703,-8.861848,-1.645247,-5.624100,7.671097,-3.216490,4.257561,-2.165036,-8.719545,5.323183,3.066007,-4.278134,0.601682,-9.787568,5.964541,7.956425,6.650799,7.915884,-4.541609,-2.774701,6.026889,-3.269787,-7.520712,5.645964,8.170264,-2.667766,2.399799,-3.835638,-8.507193,-1.681046,-3.960972,2.355790,-0.817554,-6.122285,2.773359,-8.265309,5.764794,3.755677,7.408379,-3.565698,-1.134371,-4.752965,9.325451,-2.227832,0.445485,-3.413858,-7.478659,-8.334375,-6.932073,-8.483569,0.992356,-1.121564,9.769929,-8.886018,-7.746544,2.342689,3.263404], dtype = "float32")#candidate|1657|(1170,)|const|float32
bop_1658 = relay.power(call_1655.astype('float64'), relay.reshape(const_1657.astype('float64'), relay.shape_of(call_1655))) # shape=(1170,)
bop_1661 = relay.power(call_1656.astype('float64'), relay.reshape(const_1657.astype('float64'), relay.shape_of(call_1656))) # shape=(1170,)
func_441_call = mod.get_global_var('func_441')
func_445_call = mutated_mod.get_global_var('func_445')
call_1669 = relay.TupleGetItem(func_441_call(relay.reshape(bop_1658.astype('float32'), [13, 10, 9]), relay.reshape(const_1657.astype('float32'), [13, 10, 9]), relay.reshape(call_1655.astype('float32'), [13, 10, 9]), ), 0)
call_1670 = relay.TupleGetItem(func_445_call(relay.reshape(bop_1658.astype('float32'), [13, 10, 9]), relay.reshape(const_1657.astype('float32'), [13, 10, 9]), relay.reshape(call_1655.astype('float32'), [13, 10, 9]), ), 0)
func_993_call = mod.get_global_var('func_993')
func_996_call = mutated_mod.get_global_var('func_996')
const_1677 = relay.const([-4.081149,-7.111398,0.831676,4.800651,4.439230,1.483819,-6.415323,-5.376221,-5.221332,6.096980,-8.423382,9.166717,-7.286326,-7.006927,7.802515,-0.803717,-3.645999,4.950059,7.870927,-1.774261,6.155889,-8.837645,-5.145241,-2.140896,8.036121,-3.053431,-5.574482,-4.343223,-8.188603,-5.509834,9.271721,6.665181,-8.316566,6.239163,3.980481,-5.650460,8.099664,-0.727478,1.498393,2.387044,3.560262,-9.794481,3.518142,-1.480272,6.179039,4.337723,4.104097,-1.134071,3.549381,-7.701032,-6.292662,-5.493008,6.891697,3.212597,8.328336,3.957406,-2.154448,-6.310919,-6.357380,-0.787611,4.268851,-2.597808,-6.306195,-9.468605,3.226974,5.973409,2.910645,0.525191,-6.147917,0.214316,6.110420,-2.295988], dtype = "float32")#candidate|1677|(72,)|const|float32
call_1676 = relay.TupleGetItem(func_993_call(relay.reshape(const_1677.astype('float32'), [12, 1, 6]), relay.reshape(const_1657.astype('float32'), [1170,]), ), 2)
call_1678 = relay.TupleGetItem(func_996_call(relay.reshape(const_1677.astype('float32'), [12, 1, 6]), relay.reshape(const_1657.astype('float32'), [1170,]), ), 2)
output = relay.Tuple([bop_1658,call_1669,call_1676,const_1677,])
output2 = relay.Tuple([bop_1661,call_1670,call_1678,const_1677,])
func_1682 = relay.Function([], output)
mod['func_1682'] = func_1682
mod = relay.transform.InferType()(mod)
output = func_1682()
func_1683 = relay.Function([], output)
mutated_mod['func_1683'] = func_1683
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1431_call = mod.get_global_var('func_1431')
func_1433_call = mutated_mod.get_global_var('func_1433')
call_1725 = relay.TupleGetItem(func_1431_call(), 0)
call_1726 = relay.TupleGetItem(func_1433_call(), 0)
func_1158_call = mod.get_global_var('func_1158')
func_1160_call = mutated_mod.get_global_var('func_1160')
call_1740 = relay.TupleGetItem(func_1158_call(), 0)
call_1741 = relay.TupleGetItem(func_1160_call(), 0)
func_1377_call = mod.get_global_var('func_1377')
func_1380_call = mutated_mod.get_global_var('func_1380')
var_1743 = relay.var("var_1743", dtype = "int64", shape = (360,))#candidate|1743|(360,)|var|int64
call_1742 = relay.TupleGetItem(func_1377_call(relay.reshape(var_1743.astype('int64'), [360,])), 1)
call_1744 = relay.TupleGetItem(func_1380_call(relay.reshape(var_1743.astype('int64'), [360,])), 1)
func_162_call = mod.get_global_var('func_162')
func_164_call = mutated_mod.get_global_var('func_164')
var_1754 = relay.var("var_1754", dtype = "float32", shape = (180, 1))#candidate|1754|(180, 1)|var|float32
call_1753 = relay.TupleGetItem(func_162_call(relay.reshape(var_1754.astype('float32'), [10, 3, 6])), 0)
call_1755 = relay.TupleGetItem(func_164_call(relay.reshape(var_1754.astype('float32'), [10, 3, 6])), 0)
func_1648_call = mod.get_global_var('func_1648')
func_1651_call = mutated_mod.get_global_var('func_1651')
var_1759 = relay.var("var_1759", dtype = "float32", shape = (1170,))#candidate|1759|(1170,)|var|float32
call_1758 = relay.TupleGetItem(func_1648_call(relay.reshape(var_1759.astype('float32'), [5, 234])), 0)
call_1760 = relay.TupleGetItem(func_1651_call(relay.reshape(var_1759.astype('float32'), [5, 234])), 0)
uop_1762 = relay.erf(call_1740.astype('float64')) # shape=(15, 14, 5)
uop_1764 = relay.erf(call_1741.astype('float64')) # shape=(15, 14, 5)
uop_1776 = relay.sigmoid(uop_1762.astype('float64')) # shape=(15, 14, 5)
uop_1778 = relay.sigmoid(uop_1764.astype('float64')) # shape=(15, 14, 5)
output = relay.Tuple([call_1725,call_1742,var_1743,call_1753,var_1754,call_1758,var_1759,uop_1776,])
output2 = relay.Tuple([call_1726,call_1744,var_1743,call_1755,var_1754,call_1760,var_1759,uop_1778,])
func_1786 = relay.Function([var_1743,var_1754,var_1759,], output)
mod['func_1786'] = func_1786
mod = relay.transform.InferType()(mod)
var_1787 = relay.var("var_1787", dtype = "int64", shape = (360,))#candidate|1787|(360,)|var|int64
var_1788 = relay.var("var_1788", dtype = "float32", shape = (180, 1))#candidate|1788|(180, 1)|var|float32
var_1789 = relay.var("var_1789", dtype = "float32", shape = (1170,))#candidate|1789|(1170,)|var|float32
output = func_1786(var_1787,var_1788,var_1789,)
func_1790 = relay.Function([var_1787,var_1788,var_1789,], output)
mutated_mod['func_1790'] = func_1790
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1022_call = mod.get_global_var('func_1022')
func_1024_call = mutated_mod.get_global_var('func_1024')
call_1806 = relay.TupleGetItem(func_1022_call(), 1)
call_1807 = relay.TupleGetItem(func_1024_call(), 1)
output = relay.Tuple([call_1806,])
output2 = relay.Tuple([call_1807,])
func_1821 = relay.Function([], output)
mod['func_1821'] = func_1821
mod = relay.transform.InferType()(mod)
output = func_1821()
func_1822 = relay.Function([], output)
mutated_mod['func_1822'] = func_1822
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1059_call = mod.get_global_var('func_1059')
func_1061_call = mutated_mod.get_global_var('func_1061')
call_1838 = relay.TupleGetItem(func_1059_call(), 0)
call_1839 = relay.TupleGetItem(func_1061_call(), 0)
func_1591_call = mod.get_global_var('func_1591')
func_1593_call = mutated_mod.get_global_var('func_1593')
call_1844 = func_1591_call()
call_1845 = func_1591_call()
output = relay.Tuple([call_1838,call_1844,])
output2 = relay.Tuple([call_1839,call_1845,])
func_1850 = relay.Function([], output)
mod['func_1850'] = func_1850
mod = relay.transform.InferType()(mod)
mutated_mod['func_1850'] = func_1850
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1850_call = mutated_mod.get_global_var('func_1850')
call_1851 = func_1850_call()
output = call_1851
func_1852 = relay.Function([], output)
mutated_mod['func_1852'] = func_1852
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1022_call = mod.get_global_var('func_1022')
func_1024_call = mutated_mod.get_global_var('func_1024')
call_1877 = relay.TupleGetItem(func_1022_call(), 0)
call_1878 = relay.TupleGetItem(func_1024_call(), 0)
func_1821_call = mod.get_global_var('func_1821')
func_1822_call = mutated_mod.get_global_var('func_1822')
call_1883 = relay.TupleGetItem(func_1821_call(), 0)
call_1884 = relay.TupleGetItem(func_1822_call(), 0)
output = relay.Tuple([call_1877,call_1883,])
output2 = relay.Tuple([call_1878,call_1884,])
func_1887 = relay.Function([], output)
mod['func_1887'] = func_1887
mod = relay.transform.InferType()(mod)
mutated_mod['func_1887'] = func_1887
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1887_call = mutated_mod.get_global_var('func_1887')
call_1888 = func_1887_call()
output = call_1888
func_1889 = relay.Function([], output)
mutated_mod['func_1889'] = func_1889
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1277_call = mod.get_global_var('func_1277')
func_1279_call = mutated_mod.get_global_var('func_1279')
call_1982 = func_1277_call()
call_1983 = func_1277_call()
output = call_1982
output2 = call_1983
func_1986 = relay.Function([], output)
mod['func_1986'] = func_1986
mod = relay.transform.InferType()(mod)
mutated_mod['func_1986'] = func_1986
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1986_call = mutated_mod.get_global_var('func_1986')
call_1987 = func_1986_call()
output = call_1987
func_1988 = relay.Function([], output)
mutated_mod['func_1988'] = func_1988
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1591_call = mod.get_global_var('func_1591')
func_1593_call = mutated_mod.get_global_var('func_1593')
call_2016 = func_1591_call()
call_2017 = func_1591_call()
func_658_call = mod.get_global_var('func_658')
func_660_call = mutated_mod.get_global_var('func_660')
const_2021 = relay.const([-1.728312,-8.926208,3.393306,-6.373643,5.896666,1.889146,5.658969,-1.061869,2.094198,-0.841293,-7.787221,4.962405,4.147791,8.014198,-3.046082,-6.951624,8.706442,-0.598578,4.746863,-7.601043,-1.301149,-5.744835,-0.357607,1.087758,0.405516,6.062216,0.846622,-3.527237,-0.800823,0.477819,8.477060,-0.476394,-7.049862,6.857250,2.574798,4.085787,-9.538568,-8.862085,-9.859982,-5.334461,4.650361,-0.890245,-0.713195,3.305803,-6.015993,5.823532,-8.125169,-3.797630,-3.701280,-1.055722,-0.979529,9.859859,-9.039969,6.648477,5.980918,-2.419766,8.416146,1.143347,9.745907,-3.427430,8.771302,8.863850,3.622956,0.481182,-1.818140,-2.929974,6.531795,1.198905,2.027989,-7.254134,-2.636960,8.492316,0.168080,5.007693,7.996964,1.412053,0.819001,3.165006,-8.075673,-4.153735,-4.584057,4.530772,9.420245,3.396961,3.211830,8.333076,6.312590,2.836256,-6.977710,3.933794,6.757784,-6.124119,-1.928075,7.428364,-6.086688,5.696010,-6.583916,-7.834559,4.824628,-1.439320,-9.057607,-1.066749,-2.299248,-1.504085,-3.456707,0.476194,-0.498603,-0.881360,8.228196,-2.193048,3.893381,-5.780282,-2.656593,6.169584,9.993340,6.900783,-6.078984,6.732192,8.410656,2.809602,7.275469,8.248414,-2.897235,-3.060425,-5.492189,-8.808269,-2.712748,3.976473,1.906470,-4.039426,6.133529,-3.443807,5.761871,-3.008616,-5.492938,-1.576919,-9.719557,1.161688,7.447052,-9.920115,-3.796035,-5.851082,-9.831943,-2.053918,-5.189410,-8.267136,-2.620998,9.353690,-2.055492,-7.131194,8.619022,-0.465939,4.271340,0.866888,-0.140177,-2.229211,-5.436134,7.063483,-3.503469,-7.715735,3.132942,-6.520614,-8.054216,0.257981,-0.062723,3.499797,8.497005,6.905531,1.051216,8.767556,8.226795,9.422863,-7.623414,-9.463451,-5.367191,-3.681736,8.169940,7.630007,-0.058943,-1.505222,-2.341504,7.341656,5.598104,-3.765986,5.431166,-3.424702,0.452900,-1.582599,7.405115,9.320442,1.418137,4.420456,-2.574686,-6.560643,0.503054,0.127439,-3.557037,6.422767,-7.215296,1.209941,-5.335726,-2.352141,6.818292,2.580005,4.829046,-1.199256,-3.218191,0.799158,-7.240215,-0.713616,-9.336264,2.458006,-1.535444,-7.912889,0.460712,-1.236059,-8.301314,0.338477,9.511438,-7.748749,9.864693,0.074957,-0.848494,7.399393,7.188999,-7.696191,5.878102,-3.041043,1.748850,-9.689686,-7.201640,-9.622138,7.038072,-9.542616,-1.983546,9.803874,2.513672,-1.518880,2.309146,-6.489122,7.851310,-5.606802,8.019912,-1.283631,-0.874702,8.912047,6.162643,3.923350,4.319366,1.816960,-7.657828,-6.348906,5.514702,7.329816,-0.895740,4.735912,-3.348448,-8.149496,8.071790,-3.197891,-3.641430,-2.615351,4.280620,-1.647450,-8.871590,9.408486,9.530852,-4.486351,-7.478256,5.225112,-4.426923,-2.519717,6.591369,-9.724525,3.081743,-3.829046,-9.202054,7.287893,-3.013339,-6.652367,5.594397,7.518069,1.982880,9.346040,6.476494,-0.283151,-8.896383,-1.134681,-0.526263,-9.663696,-0.263674,2.823776,6.838723,-6.000887,-8.540279,-2.141832,-3.582562,-2.171080,-8.042252,5.871649,8.080837,2.372541,-9.222402,4.862200,-2.897599,-1.385407,-7.909500,7.941356,-5.324615,5.991012,-8.403569,-4.098414,8.863848,1.946477,2.807704,7.932982,-6.556291,-6.870336,-8.947660,3.168429,5.304189,2.355476,7.601339,6.510144,9.461670,3.215387,8.020866,-6.938710,-1.138880,-7.932460,4.527113,-9.688710,-0.260894,-1.165724,-6.874174,0.263306,-0.081234,2.687080,2.584061,0.150158,6.023599,-8.852333,2.771260,2.590875,-6.410429,9.671184,0.037931,-0.660992,-5.250074,2.013123,-2.232210,-5.360259,1.316192,3.122752,-2.573226,7.117417,1.253960,-8.919149,9.079360,-2.475274,6.613427,4.549145,-1.792892,-4.721902,-2.355919,1.659100,-7.274782,7.177579,-4.454443,-3.235530,-6.621409,-4.819874,-4.204688,-7.676747,4.794329,9.719821,-0.996026,0.516713,-2.128357,5.112848,1.125855,-0.360805,-7.382351,-6.216502,-5.785633,0.975535,-9.284260,-3.895007,4.464012,-6.827954,3.416596,0.207642,-9.373729,-6.632938,6.451664,-3.314609,6.446480,-6.046740,-9.848138,-9.979088,-1.393540,7.438783,0.204319,5.048315,-2.053688,2.130180,7.302145,4.052295,-9.921627,0.614024,2.349148,-0.315796,-0.342024,-0.172481,2.865926,3.745393,7.911360,1.281635,-5.622854,3.020075,-7.485245,-5.669482,0.960515,-2.161765,-5.446428,4.812888,3.148244,-5.285475,5.204610,-9.063366,7.589925,-7.645939,0.185185,8.281922,-1.901149,-9.480803,-3.683479,-4.909335,5.347382,4.590654,-2.295109,5.524103,-7.586272,5.691020,7.216576,4.283100,7.376528,7.900168,7.149910,-1.055211,7.866061,-7.430610,-3.359503,2.741357,5.726745,4.983945,-0.715585,4.004422,-3.469043,-6.579387,7.279999,-3.298075,1.223688,7.643288,-1.234483,-6.209071,-4.291637,0.562331,6.486503,-9.703986,1.621700,9.010403,2.574098,4.065854,3.006784,9.778695,3.530986,-1.818468,8.043175,2.925339,5.356083,2.262540,-7.247791,-1.341835,7.526795,8.944191,-2.247080,-7.550975,7.882727,1.497491,4.571470,9.022208,-5.556047,0.182445,3.328355,-0.291870,-2.325875,7.492435,-1.731026,3.558939,-2.262409,0.961047,9.808091,-0.493615,2.008042,5.827016,-3.995461,8.015364,-7.320767,-9.958952,6.002819,2.827029,-6.973693,-6.644689,-7.427659,4.372747,-5.026155,-7.765026,-8.339978,1.185724,-2.023205,6.524512,8.827726,-7.807392,3.484686,-6.486997,1.149242,8.160697,-8.108196,-0.557153,8.254537,3.684980,-7.131606,7.685161,8.824570,-5.145052,4.566414,-9.121627,-7.935650,6.690761,-8.579095,-1.293099,9.927998,8.059065,-4.719324,-7.540776,9.956186,8.658645,9.113631,9.947339,0.941711,8.231991,5.996882,-6.823279,-3.929940,6.120177,3.996254,-6.713431,5.843203,-5.038523,9.746998,8.125107,-5.304964,2.355609,2.268662,-2.648547,-4.475320,-8.759419,-9.185466,-4.001977,-4.927591,8.035726,0.205873,-7.570898,9.399292,-4.001485,6.940922,-8.962681,9.146478,-5.326319,-5.967979,1.928490,-8.588208,-9.313976,-1.247916,2.401398,-7.448520,-1.800913,-3.536356,0.315971,3.189620,-4.078053,6.858945,1.446566,-8.670728,-2.772561,-1.453593,-8.977397,5.150698,9.417722,7.476898,-1.572869,3.490704,2.704776,2.294450,-0.780669,0.967074,0.479337,5.366461,2.406193,-7.055889,-0.632318,5.955779,6.791940,2.704006,0.873688,0.434857,-5.998765,-6.594346,-0.032363,-6.454925,6.003659,-2.586140,4.543994,4.410994,8.247822,-2.922476,-7.653966,-2.040666,-1.926760,4.428355,-6.231645,7.497809,2.910084,4.084429,5.099000,-3.875971,6.460050,2.571870,-6.927643,8.832011,1.617932,2.434248,4.522549,5.248253,5.725615,1.071725,-8.684705,5.486553,0.798782,4.888372,-4.450897,0.302484,-3.997254,-7.233881,7.859651,7.333895,1.293741,-7.438886,-0.884036,-0.557656,-5.963182,-2.256480,-9.430852,1.545769,-3.105381,-5.195480,-6.846179,-2.191003,0.895199,-9.895107,-1.536477,5.091170,-4.916953,-9.978059,8.267441,0.995313,0.643011,-8.366261,4.330506,5.541768,1.303692,-6.304724,6.461964,-0.169260,-1.388255,1.740781,-6.961644,-3.912913,-7.417203,-0.132389,-7.382761,-9.723388,9.679566,5.993813,-8.405569,-6.430300,3.354152,6.737566,9.871316,2.295527,-1.963230,-1.225345,8.742869,-9.432350,9.900372,7.449144,-6.240380,7.939056,6.712841,-4.916329,8.087708,6.504300,6.220726,4.690110,-8.647686,-8.370520,6.280143,-8.750489,-2.227078,3.038249,2.449489,5.529004,-6.591668,9.964862,2.820245,6.281308,-0.266942,8.195905,0.662600,-5.938233,1.247432,9.959537,2.253443,5.709922,-1.384359,1.609571,-9.025248,4.807771,-2.832747,-8.163427,-1.707828,-1.358120,-2.172777,-3.144789,7.271337,7.332466,-0.460704,0.384267,-7.918688,4.373517,5.955011,-6.219166,0.604504,-0.634960,-1.316526,9.350759,-5.996881,6.146823,-0.380924,1.247170,-9.041190,-0.479755,0.289697,-3.312253,0.063186,-3.081537,9.679877,-7.395158,-2.662010,-1.896278,7.734207,1.217998,7.229251,-1.970417,-6.898161,2.270934,-6.035882,4.404250,-4.543309,-4.052519,1.960113,-4.088068,8.682293,7.525157,-0.935151,7.624223,-2.926233,2.338024,8.343812,9.286360,3.865687,5.472307,-5.726376,3.428086,-3.009834,-1.894313,-5.009657,-6.520152,5.539181,7.549725,3.326991,7.568739,7.129228,-4.000597,-3.154613,0.058522,-0.599451,-3.938687,5.872425,7.500508,3.078658,-3.755534,8.127549,9.325020,-8.413253,-1.735870,2.734057,8.292640,-3.061665,-0.577213,1.044384,2.873563,-5.977542,1.359501,6.380763,7.863002,-2.052962,6.770943,5.054739,6.600612,6.538910,4.754496,8.601078,-7.172298,-6.451058,0.845409,-7.970778,-4.360569,-2.074676,-8.597373,-0.740276,-8.921291,5.092509,-8.736781,-3.719094,8.866181,6.451717,8.976443,2.220585,3.877294,-4.436876,-5.962143,1.569197,8.151192,-7.874026,0.671159,9.378793,8.891878,9.799169,4.561503,3.346932,-3.522787,-6.223283,-2.025963,6.387139,2.596932,-9.161482,-0.959627,-0.699043,6.134766,4.432002,-0.662474,-2.621169,-7.093850,5.544023,7.633765,-1.179103,-2.238821,0.479274,-6.272617,-6.259196,-7.192350,2.962674,-1.358655,-1.460947,-5.484404,-4.581343,5.806420,1.949966,4.930912,5.310652,0.861755,-9.140364,-5.445214,-2.480259,-6.425646,6.051374,7.718378,4.859619,-7.685708,8.752166,7.072229,5.996128,-1.872286,-3.125176,-3.020440,8.746151,0.238738,4.388530,7.647548,0.153350,-3.374465,1.058765,6.848414,2.730473,-9.573463,9.636970,-6.372782,-0.242910,3.886111,-4.080452,7.711282,7.110199,0.200122,-6.027612,9.588370,-6.023006,-4.087256,9.482807,-7.266930,-2.799854,-5.602070,8.850338,-7.797003,0.574814], dtype = "float32")#candidate|2021|(936,)|const|float32
call_2020 = func_658_call(relay.reshape(const_2021.astype('float32'), [9, 13, 8]))
call_2022 = func_658_call(relay.reshape(const_2021.astype('float32'), [9, 13, 8]))
output = relay.Tuple([call_2016,call_2020,const_2021,])
output2 = relay.Tuple([call_2017,call_2022,const_2021,])
func_2023 = relay.Function([], output)
mod['func_2023'] = func_2023
mod = relay.transform.InferType()(mod)
mutated_mod['func_2023'] = func_2023
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2023_call = mutated_mod.get_global_var('func_2023')
call_2024 = func_2023_call()
output = call_2024
func_2025 = relay.Function([], output)
mutated_mod['func_2025'] = func_2025
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1591_call = mod.get_global_var('func_1591')
func_1593_call = mutated_mod.get_global_var('func_1593')
call_2061 = func_1591_call()
call_2062 = func_1591_call()
func_1377_call = mod.get_global_var('func_1377')
func_1380_call = mutated_mod.get_global_var('func_1380')
var_2077 = relay.var("var_2077", dtype = "int64", shape = (360,))#candidate|2077|(360,)|var|int64
call_2076 = relay.TupleGetItem(func_1377_call(relay.reshape(var_2077.astype('int64'), [360,])), 0)
call_2078 = relay.TupleGetItem(func_1380_call(relay.reshape(var_2077.astype('int64'), [360,])), 0)
output = relay.Tuple([call_2061,call_2076,var_2077,])
output2 = relay.Tuple([call_2062,call_2078,var_2077,])
func_2086 = relay.Function([var_2077,], output)
mod['func_2086'] = func_2086
mod = relay.transform.InferType()(mod)
var_2087 = relay.var("var_2087", dtype = "int64", shape = (360,))#candidate|2087|(360,)|var|int64
output = func_2086(var_2087)
func_2088 = relay.Function([var_2087], output)
mutated_mod['func_2088'] = func_2088
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2153 = relay.var("var_2153", dtype = "float32", shape = (6, 9, 10))#candidate|2153|(6, 9, 10)|var|float32
uop_2154 = relay.cos(var_2153.astype('float32')) # shape=(6, 9, 10)
output = uop_2154
output2 = uop_2154
func_2157 = relay.Function([var_2153,], output)
mod['func_2157'] = func_2157
mod = relay.transform.InferType()(mod)
mutated_mod['func_2157'] = func_2157
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2158 = relay.var("var_2158", dtype = "float32", shape = (6, 9, 10))#candidate|2158|(6, 9, 10)|var|float32
func_2157_call = mutated_mod.get_global_var('func_2157')
call_2159 = func_2157_call(var_2158)
output = call_2159
func_2160 = relay.Function([var_2158], output)
mutated_mod['func_2160'] = func_2160
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1431_call = mod.get_global_var('func_1431')
func_1433_call = mutated_mod.get_global_var('func_1433')
call_2195 = relay.TupleGetItem(func_1431_call(), 0)
call_2196 = relay.TupleGetItem(func_1433_call(), 0)
func_805_call = mod.get_global_var('func_805')
func_808_call = mutated_mod.get_global_var('func_808')
const_2214 = relay.const([1,-8,-1,-8,9,10,3,5,4,-8,-7,-1,-8,-4,-9,5,-10,-9,-1,8,9,5,5,-3,-9,8,-4,10,-9,-7,9,10,-4,-2,8,-7,2,-2,-6,-4,7,-3,-10,-3,7,-7,3,-8,8,3,10,4,2,8,10,2,-3,-6,-10,-4,-10,-5,-10,-9,-5,-6,-10,8,6,-1,8,-4,10,6,1,-7,10,-2,-7,9,-3,8,7,7,-9,-10,2,10,5,2,-3,-9,-2,-3,1,-2,9,8,-5,-9,-1,-1,-6,5,-6,-9,5,-4,-8,8,3,6,10,-9,-8,9,-9,4,-3,9,5,10,6,9,-1,5,-8,7,6,-5,4,4,4,9,7,9,-7,-4,-1,9,1,-7,7,-9,9,7,-7,7,9,1,3,7,-6,-3,5,2,-7,7,2,7,1,5,5,1,7,9,1,1,9,8,-7,-10,-9,10,-4,-5,1,2,1,9,5,-9,5,6,4,-8,4,5,6,7,2,-2,1,10,-7,-1,8,9,-9,-5,-10,-4,-10,10,-6,-5,-8,-3,3,2,-2,-2,-2,-2,-9,4,2,6,8,-10,-4,3,6,-10,9,8,-6,2,5,-10,2,4,5,10,7,-8,-6,2,8,10,-5,-9,-1,8,6,10,4,-4,5,2,3,-4,4,-1,-7,10,-9,10,3,-8,8,6,2,-2,-5,1,-6,-9,9,3,-2,6,3,3,-6,4,9,-7,-4,-7,3,9,1,10,-1,-5,-7,4,7,-5,-10,-6,-10,7,-9,-3,4,-4,3,4,8,-6,-2,-4,-10,1,-1,-7,9,-5,2,-3,-3,9,10,9,-5,-4,5,-6,-8,-5,4,-9,7,1,3,4,-10,1,8,-9,-5,2,10,5,6,8,1,5,3,-5,-10,4,4,2,-7,7,-4,4,-10,4,8,-8,-9,-6,8,1,-10,10], dtype = "int64")#candidate|2214|(360,)|const|int64
call_2213 = func_805_call(relay.reshape(const_2214.astype('int64'), [12, 10, 3]), relay.reshape(const_2214.astype('int64'), [12, 10, 3]), )
call_2215 = func_805_call(relay.reshape(const_2214.astype('int64'), [12, 10, 3]), relay.reshape(const_2214.astype('int64'), [12, 10, 3]), )
output = relay.Tuple([call_2195,call_2213,const_2214,])
output2 = relay.Tuple([call_2196,call_2215,const_2214,])
func_2217 = relay.Function([], output)
mod['func_2217'] = func_2217
mod = relay.transform.InferType()(mod)
mutated_mod['func_2217'] = func_2217
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2217_call = mutated_mod.get_global_var('func_2217')
call_2218 = func_2217_call()
output = call_2218
func_2219 = relay.Function([], output)
mutated_mod['func_2219'] = func_2219
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1821_call = mod.get_global_var('func_1821')
func_1822_call = mutated_mod.get_global_var('func_1822')
call_2220 = relay.TupleGetItem(func_1821_call(), 0)
call_2221 = relay.TupleGetItem(func_1822_call(), 0)
output = relay.Tuple([call_2220,])
output2 = relay.Tuple([call_2221,])
func_2248 = relay.Function([], output)
mod['func_2248'] = func_2248
mod = relay.transform.InferType()(mod)
output = func_2248()
func_2249 = relay.Function([], output)
mutated_mod['func_2249'] = func_2249
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2248_call = mod.get_global_var('func_2248')
func_2249_call = mutated_mod.get_global_var('func_2249')
call_2258 = relay.TupleGetItem(func_2248_call(), 0)
call_2259 = relay.TupleGetItem(func_2249_call(), 0)
output = call_2258
output2 = call_2259
func_2260 = relay.Function([], output)
mod['func_2260'] = func_2260
mod = relay.transform.InferType()(mod)
output = func_2260()
func_2261 = relay.Function([], output)
mutated_mod['func_2261'] = func_2261
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2285 = relay.var("var_2285", dtype = "float32", shape = (9, 10, 2))#candidate|2285|(9, 10, 2)|var|float32
uop_2286 = relay.rsqrt(var_2285.astype('float32')) # shape=(9, 10, 2)
func_2086_call = mod.get_global_var('func_2086')
func_2088_call = mutated_mod.get_global_var('func_2088')
const_2294 = relay.const([[-9,-8,-6,-8,-5,-5,5,8,-6,-1,6,9,-6,8,9,2,-8,-10,-7,7,7,6,-10,9,1,-8,7,-10,4,-2],[-1,10,-5,8,-3,3,9,-1,6,-4,-1,-6,10,3,4,-7,-8,-6,9,6,-9,1,10,6,3,-3,-2,5,6,8],[-3,-5,-3,-7,-3,4,4,9,-9,-8,-6,-1,1,-2,3,-7,4,9,-10,-10,7,-6,-3,-5,-1,9,3,8,5,2],[-10,4,10,-1,-8,-5,9,8,-8,6,-5,9,-4,-3,-8,7,-4,2,-4,6,8,-1,-5,-10,-3,2,-3,7,1,4],[-6,7,-2,8,6,10,-5,2,1,3,-8,1,10,-9,-9,-10,2,9,-8,9,-8,9,-1,5,3,-5,5,-4,-7,3],[4,3,1,-1,8,5,1,3,-5,4,-6,-10,-9,5,-7,-2,-4,-8,-6,5,1,3,-6,-5,-3,-10,10,-10,-4,2],[5,-2,-8,5,-1,1,-2,7,-9,10,1,-10,10,9,7,5,5,3,2,-9,-8,-7,5,2,-4,5,-4,8,9,10],[-9,9,6,1,-8,1,1,8,-1,9,5,-5,-10,-5,-10,-6,3,7,5,-7,8,-1,-7,-4,-1,6,-8,-7,3,9],[6,-4,-9,8,9,-9,5,-4,10,1,-3,-9,9,1,-5,-7,6,-2,2,-10,-7,-8,10,-5,1,4,-4,-9,9,4],[10,7,-3,-2,-10,8,5,4,-7,8,4,4,-6,-2,2,-9,9,2,-6,9,-9,7,-10,-1,-9,-4,2,-2,2,-1],[2,-9,-7,-1,5,1,6,8,-9,4,8,3,-8,6,1,-4,-1,-1,2,-1,3,-1,-2,-6,7,-10,-8,7,-8,-5],[4,1,10,2,-6,-9,9,-10,10,-5,-6,4,-8,9,5,6,-3,3,-8,7,1,3,-7,-2,-8,4,2,7,10,-7]], dtype = "int64")#candidate|2294|(12, 30)|const|int64
call_2293 = relay.TupleGetItem(func_2086_call(relay.reshape(const_2294.astype('int64'), [360,])), 2)
call_2295 = relay.TupleGetItem(func_2088_call(relay.reshape(const_2294.astype('int64'), [360,])), 2)
output = relay.Tuple([uop_2286,call_2293,const_2294,])
output2 = relay.Tuple([uop_2286,call_2295,const_2294,])
func_2296 = relay.Function([var_2285,], output)
mod['func_2296'] = func_2296
mod = relay.transform.InferType()(mod)
var_2297 = relay.var("var_2297", dtype = "float32", shape = (9, 10, 2))#candidate|2297|(9, 10, 2)|var|float32
output = func_2296(var_2297)
func_2298 = relay.Function([var_2297], output)
mutated_mod['func_2298'] = func_2298
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1235_call = mod.get_global_var('func_1235')
func_1237_call = mutated_mod.get_global_var('func_1237')
call_2303 = relay.TupleGetItem(func_1235_call(), 2)
call_2304 = relay.TupleGetItem(func_1237_call(), 2)
uop_2305 = relay.cos(call_2303.astype('float32')) # shape=(1170,)
uop_2307 = relay.cos(call_2304.astype('float32')) # shape=(1170,)
uop_2309 = relay.sqrt(uop_2305.astype('float64')) # shape=(1170,)
uop_2311 = relay.sqrt(uop_2307.astype('float64')) # shape=(1170,)
var_2313 = relay.var("var_2313", dtype = "float64", shape = (1170,))#candidate|2313|(1170,)|var|float64
bop_2314 = relay.floor_mod(uop_2309.astype('float64'), relay.reshape(var_2313.astype('float64'), relay.shape_of(uop_2309))) # shape=(1170,)
bop_2317 = relay.floor_mod(uop_2311.astype('float64'), relay.reshape(var_2313.astype('float64'), relay.shape_of(uop_2311))) # shape=(1170,)
func_1431_call = mod.get_global_var('func_1431')
func_1433_call = mutated_mod.get_global_var('func_1433')
call_2319 = relay.TupleGetItem(func_1431_call(), 0)
call_2320 = relay.TupleGetItem(func_1433_call(), 0)
func_658_call = mod.get_global_var('func_658')
func_660_call = mutated_mod.get_global_var('func_660')
var_2324 = relay.var("var_2324", dtype = "float32", shape = (12, 78))#candidate|2324|(12, 78)|var|float32
call_2323 = func_658_call(relay.reshape(var_2324.astype('float32'), [9, 13, 8]))
call_2325 = func_658_call(relay.reshape(var_2324.astype('float32'), [9, 13, 8]))
uop_2328 = relay.exp(uop_2305.astype('float64')) # shape=(1170,)
uop_2330 = relay.exp(uop_2307.astype('float64')) # shape=(1170,)
output = relay.Tuple([bop_2314,call_2319,call_2323,var_2324,uop_2328,])
output2 = relay.Tuple([bop_2317,call_2320,call_2325,var_2324,uop_2330,])
func_2337 = relay.Function([var_2313,var_2324,], output)
mod['func_2337'] = func_2337
mod = relay.transform.InferType()(mod)
var_2338 = relay.var("var_2338", dtype = "float64", shape = (1170,))#candidate|2338|(1170,)|var|float64
var_2339 = relay.var("var_2339", dtype = "float32", shape = (12, 78))#candidate|2339|(12, 78)|var|float32
output = func_2337(var_2338,var_2339,)
func_2340 = relay.Function([var_2338,var_2339,], output)
mutated_mod['func_2340'] = func_2340
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2248_call = mod.get_global_var('func_2248')
func_2249_call = mutated_mod.get_global_var('func_2249')
call_2374 = relay.TupleGetItem(func_2248_call(), 0)
call_2375 = relay.TupleGetItem(func_2249_call(), 0)
func_2086_call = mod.get_global_var('func_2086')
func_2088_call = mutated_mod.get_global_var('func_2088')
var_2382 = relay.var("var_2382", dtype = "int64", shape = (360,))#candidate|2382|(360,)|var|int64
call_2381 = relay.TupleGetItem(func_2086_call(relay.reshape(var_2382.astype('int64'), [360,])), 0)
call_2383 = relay.TupleGetItem(func_2088_call(relay.reshape(var_2382.astype('int64'), [360,])), 0)
func_85_call = mod.get_global_var('func_85')
func_89_call = mutated_mod.get_global_var('func_89')
var_2386 = relay.var("var_2386", dtype = "uint64", shape = (4, 4))#candidate|2386|(4, 4)|var|uint64
const_2387 = relay.const([-8,-6,5,5,4,-9,-1,5,-3,8,5,-9,-9,-1,9,-10,2,-4,-7,-9,4,-9,2,3,-10,-1,-2,-7,3,-2,5,9,-9,4,-3,-6,-1,-4,-10,8,9,4,-4,-4,8,-7,-7,8,-1,-3,-7,3,-5,-1,-3,-4,2,4,8,1,4,-7,-8,9,9,-6,-3,4,-4,-3,-4,9,-5,-2,-3,-7,2,-7,10,10,10,-6,4,10,-3,-5,2,-4,1,1,8,-8,-3,1,-3,-3,-8,5,-6,-10,-10,7,10,-10,-9,4,1,10,-9,5,3,-6,-6,-2,5,-1,-6,-8,4,-9,1,10,5,5,-10,-7,-10,-5,3,-9,7,7,2,2,-7,7,-4,1,-9,-7,-9,-4,-9,-5,6,3,4,9,-7,-2,-3,4,7,1,10,-7,-2,7,-9,4,-6,9,8,8,8,-2,8,-10,-9,-3,7,-9,-10,-10,9,-4,-2,-7,-10,10,2,1,-7,-6,-2,-9,-8,9,5,7,-3,2,-4,8,3,-4,-9,6,-7,-4,1,9,-2,-7,6,-4,7,-8,3,6,3,3,-8,2,1,-4,1,-2,-10,1,-5,8,-1,4,10,1,4,9,-1,5,7,6,3,-1,9,8,7,7,-10,-3,4,8,-6,-10,-8,-10,-6,-2,-4,-1,-5,8,-5,-1,9,9,-7,-3,-4,3,10,6,10,5,1,7,-5,9,4,-6,5,6,4,9,2,9,-5,-8,-5,7,8,-1,2,4,-1,9,-8,1,4,-10,-2,-10,8,-10,-4,-6,-4,7,8,-10,-4,8,-3,3,-1,-8,6,9,-10,6,7,-6,10,7,-5,-10,5,10,-6,-9,-8,9,-5,-7,-9,-6,-6,7,6,-5,-10,-9,-2,5,3,-7,9,4,-6,8,3,-2,-8,4,-1,-8,-3,-6,-7,-3,4,-9,5,8,4,7,-2,8,-5,8,5,-9,-3,3,7,-10,7,-6,5,-6,-10,10,-1,3,-3,6,-7,6,1,9,9,-10,1,1,-8,4,-1,9,3,9,-3,5,9,9,3,9,9,8,-5,-5,7,10,-6,-9,-1,6,-3,-3,10,-2,9,-5,-1,8,2,-9,-3,-5,8,-7,-4,4,-3,8,8,-8,-1,7,6,8,-9,6,-5,-10,-7,-1,-1,6,1,-7,6,-8,-8,3,-10,-1,7,10,8,-5,10,-6,1,5,8,1,-7,4,-3,9,-9,10,-8,8,-4,-1,-10,-5,10,5,2,-5,6,-6,8,10,-8,3,-5,-1,5,3,-10,-10,-6,8,2,7,-3,-5,-8,6,7,1,-10,1,6,-3,-2,-7,-10,6,-8,-10,-8,2,3,-4,-9,4,-9,9,9,-4,-6,1,5,8,2,4,4,-6,8,-7,6,8,-6,-3,-10,-8,-7,2,6,-5,7,-8,7,-10,-5,4,8,-7,9,-1,-6,-5,8,2,5,-4,-7,7,-8,9,-4,3,4,-8,9,-4,-10,7,-6,4,6,-6,-2,-9,10,2,-2,9,6,-1,-9,-9,3,9,-4,-1,-2,-7,1,-3,-3,-6,1,-1,5,1,8,-6,-7,-10,-7,3,-7,-4,-6,1,1,6,-5,10,-10,7,-2,-7,-8,-1,-8,-6,5,-5,-6,-2,-4,-10,5,2,-10,1,1,-2,7,-6,10,-9,-2,7,1,-3,-8,-5,-3,-8,5,7,-9,5,-4,10,10,8,6,-8,-5,-5,5,7,6,-3,7,6,-10,-4,9,10,-7,-3,-4,-1,3,-3,5,-8,-7,3,2,-2,10,1,-1,-3,9,-1,-5,3,10,8,-8,-8,9,9,-3,-8,-6,-6,-7,-5,-3,9,-1,-7,10,8,-6,-5,10,-8,4,9,2,6,4,-6,-10,-6,7,5,1,-9,2,1,7,-6,-5,2,-10,-9,-4,1,9,-6,-1,8,-4,10,-9,5,-2,1,-8,7,3,-2,10,-10,1,7,-5,-7,-10,-3,9,6,-3,-1,10,-8,-3,-10,4,-1,-6,-10,-1,-9,3,1,4,-5,4,7,-3,7,-3,-10,4,5,-10,-2,3,4,-5,-10,-2,-7,1,8,-9,2,9,1,3,-5,3,4,9,4,2,-7,6,-9,-10,-3,-2,-10,-6,8,9,2,3,9,-5,9,6,-2,-2,1,9,-10,8,-6,3,2,1,5,10,-7,-9,-2,4,9,-6,7,-4,-10,7,7,-2,-1,2,7,3,9,-10,-7,7,-2,8,-10,-8,-5,4,4,-2,9,2,8,-9,7,7,6,2,7,-9,2,-5,2,-10,7,3,8,3,-1,2,-4,4,5,9,-3,8,8,2,-7,8,4,2,-9,7,-7,-9,-10,-10,8,4,10,7,-7,7,3,8,9,9,-4,1,5,-2,-5,-9,-2,6,-7,9,4,-6,3,4,3,-1,2,-8,-2,-4,-3,-9,6,-8,-10,4,2,1,-5,7,-10,7,-10,9,-7,8,3,-4,5,-1,6,-9,7,-4,-6,-4,-9,8,-8,-1,9,-3,-7,1,-9,-6,-10,-5,-6,-3,2,-7,-8,2,2,-1,3,3,-4,-3,-9,-10,-6,5,-8,2,-6,2,-4,2,-10,-6,10,2,-4,-7,-5,-1,5,-1,-6,2,-4,8,1,-3,-2,1,-8,7,9,6,-2,5,5,-8,-10,3,-7,1,10,6,-3,-5,3,5,-6,7,8,-7,9,3,8,-3,-6,2,8,-7,6,-6,-4,2,-1,-9,-3,1,-4,3,-10,-6,1,-10,3,-4,1,-9,-10,-4,9,10,-2,4,-5,5,-3,2,8,-5,-1,-1,8,7,10,-6,7,-1,-9,4,-1,-9,-1,-10,-5,9,5,-10,1,-8,-9,9,2,-6,6,5,2,-6,7,1,3,9,3,9,-5,4,-3,1,-5,-6,-8,10,5,2,-2,-3,4,-2,-9,10,10,-9,6,-10,-6,4,7,5,-2,3,9,-10,6,-9,-5,-1,2,-9,10,3,-6,-2,-3,-5,4,-10,2,8,-1,6,-8,10,7,-10,1,-4,2,-9,3,-3,-10,9,-2,3,-4,9,6,-1,1,1,-7,-6,-1,6,-7,-8,-2,10,-4,7,-1,-7,6,-1,9,6,5,7,-8,-7,-3,-3,-3,-9,7,-2,-2,5,-9,6,6,-6,-5,8,-7,8,1,-5,6,1,1,2,-6,-3,3,5,-1,-4,-5,10,7,-3,1,5,3,-1,-3,10,-9,-4,-2,6,1,2,10,9,-1,-8,-2,10,-10,2,3,3,-6,-6,6,-4,2,3,7,1,-6,-10,3,6,2,-7,1,-9,-6,7,-9,-9,6,-2,7,1,-4,2,1,-9,5,10,-5,-4,3,3,2,-2,-7,1,10,5,-3,9,4,-8,5,4,-4,1,10,9,7,10,6,5,-3,9,-9,1,8,2,-7,5,7,-1,1,10,-1,-9,-4,-4,7,3,2,9,3,-5,-8,-2,-8,1,-2,5,-1,-2,-1,2,-8,3,-10,9,-2,6,7,-4,-10,4,5,-7,6,-3,-6,4,-1,5,7,-7,-10,-10,2,4,10,5,-1,-4,-4,5,-2,-5,6,-4,-5,2,7,-4,8,2,8,-3,-2,6,-4,7,10,8,-3,8,7,-5,4,1,7,-9,-1,-4,9,-10,-2,10,-10,-7,3,2,5,-4,7,10,1,1,-10,-6,6,6,4,2,-6,-6,4,1,-7,8,-2,-10,-6,6,5,-8,9,-2,10,4,3,-5,10,-6,-10,-1,-3,-5,1,8,3,-8,10,3,4,-5,9,-1,5,8,-2,-10,-1,5,-6,7,-8,4,-6,7,-6,6,4,8,7,-7,-4,-5,1,6,-2,9,-9,8,-1,7,9,5,-3,5,7,-10,-8,-8,6,6,-7,9,-9,-5,-6,-6,-6,-10,-3,10,6,3,-6,1,-4,-1,6,-9,1,-3,-6,1,1,-2,6,-6,-1,-6,-1,10,-6,8,-3,6,3,-10,-8,3,-4,-6,9,5,-3,7,-8,1,8,-5,-6,-6,10,-10,-10,-2,9,7,1,8,-10,10,-3,-3,8,-5,-1,-3,-8,-1,-5,-5,10,2,3,-5,-8,3,4,6,4,-8,2,-7,-4,3,9,6,7,1,10,4,-1,-1,3,-8,-9,-3,6,5,8,1,-3,7,5,-1,3,4,2,-10,-3,3,3,-4,6,10,5,-1,10,-10,7,-1,9,-8,-3,10,-5,9,-1,-6,2,2,9,8,3,-4,3,5,-3,7,-9,3,9,1,-6,-6,-5,8,4,-5,7,-7,7,4,-5,9,7,-8,-5,-6,-8,-1,-3,-8,6,3,-5,4,4,-5,9,1,-5,2,-7,-2,1,9,4,-2,-1,6,5,9,7,6,-7,2,7,-3,-2,-1,-10,-8,8,-7,-3,6,-2,-7,8,-5,-2,6,-10,-4,-5,5,5,-10,-3,1,-9,-6,-1,-7,6,-3,-2,-6,7,-5,6,8,7,-4,6,-8,4,3,7,-4,6,9,-4,10,-8,-4,9,8,1,-6,-9,1,8,-9,-7,-8,-8,-3,-4,6,10,-6,3,4,-8,-2,-5,-10,-10,-8,2,4,-2,4,9,-8,1,9,10,9,-4,-4,-5,-9,-5,-4,2,-9,-4,-8,5,2,-2,10,-4,7,-2,-4,7,-6,2,-1,9,-9,-5,5,-3,-5,-10,6,-6,2,5,-8,3,7,3,10,-2,-4,5,6,-6,4,8,10,4,3,-9,-4,-5,8,10,2,6,-8,5,1,-7,-9,-7,-8,-2,10,1,4,6,-6,9,-8,-5,-9,2,-2,-7,1,-2,4,-9,-5,-10,-10,10,-5,-5,-7,-1,1,-6,-10,5,-6,-10,3,5,-4,7,-3,2,-10,-1,7,1,3,2,10,-5,-6,-5,6,9,8,2,4,1,2,9,4,-9,9,2,-1,-4,-4,8,-2,8,2,1,-5,-10,-6,6,10,9,-7,9,-2,6,3,-3,-10,4,2,-10,10,4,10,6,-3,9,9,-9,10,-4,1,9,8,-5,-1,-7,-6,6,1,6,-8,6,-5,-6,-10,2,-10,5,4,-8,7,-7,6,-9,-7,1,-3,3,-3,5,-1,-7,7,9,-1,8,4,-3,1,7,10,-1,4,3,5,3,6,-9,1,6,-6,-2,-2,-1,8,8,6,10,-5,9,10,10,-1,9,-8,4,9,-6,-10,3,5,-3,-3,2,6,10,3,-2,-8,6,5,-1,3,-7,-4,-8,-2,-9,6,2,5,7,-1,-2,-7,-8,6,9,7,-2,-4,10,-3,-8,-2,-10,4,5,-4,6,-7,6,-6,-5,-8,-3,-9,-8,-4,1,9,-3,7,-8,-6,4,1,-9], dtype = "uint64")#candidate|2387|(2016,)|const|uint64
call_2385 = relay.TupleGetItem(func_85_call(relay.reshape(var_2386.astype('uint64'), [1, 16, 1]), relay.reshape(const_2387.astype('uint64'), [9, 16, 14]), ), 1)
call_2388 = relay.TupleGetItem(func_89_call(relay.reshape(var_2386.astype('uint64'), [1, 16, 1]), relay.reshape(const_2387.astype('uint64'), [9, 16, 14]), ), 1)
output = relay.Tuple([call_2374,call_2381,var_2382,call_2385,var_2386,const_2387,])
output2 = relay.Tuple([call_2375,call_2383,var_2382,call_2388,var_2386,const_2387,])
func_2394 = relay.Function([var_2382,var_2386,], output)
mod['func_2394'] = func_2394
mod = relay.transform.InferType()(mod)
var_2395 = relay.var("var_2395", dtype = "int64", shape = (360,))#candidate|2395|(360,)|var|int64
var_2396 = relay.var("var_2396", dtype = "uint64", shape = (4, 4))#candidate|2396|(4, 4)|var|uint64
output = func_2394(var_2395,var_2396,)
func_2397 = relay.Function([var_2395,var_2396,], output)
mutated_mod['func_2397'] = func_2397
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2023_call = mod.get_global_var('func_2023')
func_2025_call = mutated_mod.get_global_var('func_2025')
call_2461 = relay.TupleGetItem(func_2023_call(), 2)
call_2462 = relay.TupleGetItem(func_2025_call(), 2)
output = relay.Tuple([call_2461,])
output2 = relay.Tuple([call_2462,])
func_2466 = relay.Function([], output)
mod['func_2466'] = func_2466
mod = relay.transform.InferType()(mod)
mutated_mod['func_2466'] = func_2466
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2466_call = mutated_mod.get_global_var('func_2466')
call_2467 = func_2466_call()
output = call_2467
func_2468 = relay.Function([], output)
mutated_mod['func_2468'] = func_2468
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1591_call = mod.get_global_var('func_1591')
func_1593_call = mutated_mod.get_global_var('func_1593')
call_2476 = func_1591_call()
call_2477 = func_1591_call()
output = call_2476
output2 = call_2477
func_2480 = relay.Function([], output)
mod['func_2480'] = func_2480
mod = relay.transform.InferType()(mod)
mutated_mod['func_2480'] = func_2480
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2480_call = mutated_mod.get_global_var('func_2480')
call_2481 = func_2480_call()
output = call_2481
func_2482 = relay.Function([], output)
mutated_mod['func_2482'] = func_2482
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1682_call = mod.get_global_var('func_1682')
func_1683_call = mutated_mod.get_global_var('func_1683')
call_2507 = relay.TupleGetItem(func_1682_call(), 2)
call_2508 = relay.TupleGetItem(func_1683_call(), 2)
func_1887_call = mod.get_global_var('func_1887')
func_1889_call = mutated_mod.get_global_var('func_1889')
call_2523 = relay.TupleGetItem(func_1887_call(), 1)
call_2524 = relay.TupleGetItem(func_1889_call(), 1)
output = relay.Tuple([call_2507,call_2523,])
output2 = relay.Tuple([call_2508,call_2524,])
func_2543 = relay.Function([], output)
mod['func_2543'] = func_2543
mod = relay.transform.InferType()(mod)
mutated_mod['func_2543'] = func_2543
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2543_call = mutated_mod.get_global_var('func_2543')
call_2544 = func_2543_call()
output = call_2544
func_2545 = relay.Function([], output)
mutated_mod['func_2545'] = func_2545
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1277_call = mod.get_global_var('func_1277')
func_1279_call = mutated_mod.get_global_var('func_1279')
call_2581 = func_1277_call()
call_2582 = func_1277_call()
var_2585 = relay.var("var_2585", dtype = "float32", shape = (2, 15, 8))#candidate|2585|(2, 15, 8)|var|float32
bop_2586 = relay.multiply(call_2581.astype('int8'), relay.reshape(var_2585.astype('int8'), relay.shape_of(call_2581))) # shape=(2, 15, 8)
bop_2589 = relay.multiply(call_2582.astype('int8'), relay.reshape(var_2585.astype('int8'), relay.shape_of(call_2582))) # shape=(2, 15, 8)
func_1523_call = mod.get_global_var('func_1523')
func_1526_call = mutated_mod.get_global_var('func_1526')
var_2594 = relay.var("var_2594", dtype = "float32", shape = (1792,))#candidate|2594|(1792,)|var|float32
const_2595 = relay.const([-6.526637,-8.566304,-3.048162,5.316686,-6.220126,4.342628,4.799456,-4.950716,-3.041368,-7.186294,2.406409,-0.901153,-6.236125,-5.643829,-5.272642,5.470037,-1.910686,-7.133256,5.420782,-7.597864,7.374610,-0.358358,6.936329,5.943512,-7.205358,9.208698,-2.081264,1.488662,4.302741,5.179015,-0.676867,-9.995490,-8.076616,3.210884,-8.025968,-1.353673,1.780048,6.343201,9.938099,-9.542144,-0.788354,3.850162,5.079299,7.584382,-3.163132,1.909220,2.313711,-0.821768,-5.871659,9.852243,8.228051,-1.628473,7.530050,0.790293,-9.270786,-3.799712,-4.986928,-8.023037,-2.326549,-5.109690,-2.084671,6.843343,8.494087,7.229787,8.017809,7.000756,-2.748469,7.865702,6.229489,8.505514,-8.845360,-2.609101,7.773728,-4.931050,2.409926,5.934095,-7.073329,9.618383,-4.841041,9.507281,-4.330239,-7.602783,4.641257,-6.712467,-2.368894,-7.395072,1.825042,8.556129,8.581983,-3.678343,-5.911331,-8.799839,-9.674428,4.546102,7.455289,-7.702872,9.456204,-1.531714,-8.184128,5.427619,-5.255601,7.116702,-1.998862,8.329195,-3.078733,-6.677011,6.245514,-4.816100,0.184180,-3.349662,-2.957310,-9.877366,3.040766,-1.982214,2.782462,-3.304858,-9.229808,0.940603,2.971133,-5.216174,-8.976317,-4.505458,-6.196440,2.859348,-2.480572,-8.403058,-1.087961,-1.766511,8.346697,3.842550,-0.689687,8.074745,2.091810,-5.486807,1.002441,-0.292353,4.601149,9.655873,0.270586,7.583117,-0.214037,5.547668,-1.468121,-0.300641,-1.254788,-2.667598,5.068695,2.849760,-7.650381,8.867069,7.813694,0.957254,7.180140,-1.175016,8.029007,-3.493865,1.066870,-8.204573,-0.965120,6.422583,-4.551934,5.337340,9.392773,-5.621043,-0.288609,3.032555,-3.831407,0.663804,0.132682,-3.970121,9.042006,-5.461017,-4.283264,2.116666,5.321225,-6.239114,-1.870916,-5.924348,-9.443657,-2.670441,-4.345653,-2.117175,-2.788870,-4.755703,3.310978,3.557052,-7.131025,1.168766,-1.093647,2.288192,-3.813694,-3.391378,7.983260,-8.554130,4.598362,7.232766,0.304003,-3.347444,4.340975,0.260129,-0.301268,7.417061,7.209269,9.296925,0.199503,7.094049,-4.183618,6.739762,-6.572618,-3.719255,-1.942805,-5.161318,7.611384,3.318721,1.244267,-6.321145,6.676752,-0.923197,-3.174589,3.709562,-4.744848,1.134081,-9.476871,0.589466,8.089269,-1.186596,4.651743,9.902639,-8.030616,8.928557,3.681356,7.182206,0.241808,5.092031,7.529225,-3.478352,-0.124592,1.820483,-0.734404,1.381369,-0.194908,7.591707,-0.231369,-9.333921,0.119708,4.232579,4.560533,-7.555662,-9.654870,3.357235,-7.237264,-9.049591,5.372629,6.987762,-9.943273,8.229571,-3.994669,-4.090964,9.997755,2.025593,-6.174856,-3.466617,4.763231,-6.317748,-7.803289,-3.244669,9.985640,0.797659,-3.489806,-4.610124,-2.533386,4.373114,-3.843090,9.683388,-0.384981,8.451222,2.494816,6.008272,-9.732134,2.972055,0.959918,8.344091,-0.689704,5.047846,8.705589,6.120444,-8.715965,-1.761511,-6.030084,-4.625264,2.341305,5.521309,5.229720,1.806517,-9.949054,1.060622,-5.268747,2.109829,7.093127,5.943235,-0.658615,-4.550356,9.794807,-6.806242,4.853416,4.374055,-7.037680,4.055166,1.856759,9.235365,1.231791,4.886353,8.471751,-9.628084,5.616987,3.630184,-9.582552,-0.896597,-8.678091,0.319289,-9.847993,-8.515336,7.556098,-7.405116,1.930438,9.857465,-4.397462,-4.486079,9.398783,7.388210,0.229212,-9.678695,-5.314550,0.894750,6.122582,-3.572460,1.749410,-9.377139,0.712624,1.530879,-6.989088,9.620371,4.714468,-7.049423,2.479162,-4.541355,-7.574389,-9.921093,7.846938,-1.991975,5.270423,-5.899606,3.840220,5.333916,-8.903871,5.563519,8.596866,2.482552,6.887676,1.752152,4.807427,1.737730,3.208982,6.290028,9.320286,6.180307,-8.631223,-9.041711,7.174059,-4.391341,-9.984757,-5.499312,2.673641,8.752779,-8.840301,2.676597,-5.611915,8.490310,-7.296430,-3.905329,-2.734745,-4.413154,-3.536260,2.163495,5.338399,3.734617,0.502326,6.134660,9.333594,6.685447,-1.221022,-2.122849,6.484547,-4.708915,-9.008811,-6.847465,-8.021863,2.832183,4.347881,-8.590860,1.689262,-2.101865,-4.599748,9.624398,-2.886366,6.169119,6.300812,2.692616,2.096976,-0.652426,6.764120,1.930043,-7.277564,-0.261349,1.210608,-8.479017,-9.269559,4.045973,-1.837594,-3.395863,-0.654682,6.730364,4.331445,-8.418970,-9.135718,-3.270210,0.690673,-5.983151,0.181683,1.754112,2.238151,5.644131,2.487512,-1.966304,8.760236,-9.358461,-9.483069,4.311690,2.266965,1.693381,-6.735374,6.851632,3.551564,6.150755,-3.631891,3.766226,-7.067036,8.996718,7.260751,-1.457046,-0.341970,-9.354268,-0.176148,5.423103,-4.864613,-4.148670,-9.963011,-5.164354,5.026423,-5.129280,5.442952,5.492184,-2.713016,4.961471,4.095480,-5.690689,-8.315609,-3.172560,-0.032189,-2.141549,-7.686973,-9.988286,-2.556056,-6.327243,-6.836277,1.697371,-5.049312,-4.737417,0.498791,1.104272,4.777527,3.639846,-6.602898,-9.701015,6.323222,3.152090,0.345353,-6.802188,7.821508,4.835230,-4.065905,8.456161,-6.277179,2.493894,6.086809,-1.788272,9.372080,-2.422948,7.833061,-4.596362,-2.192868,4.426052,2.105849,0.721625,-2.088621,2.491333,-5.447094,-0.238939,-8.329564,-3.547971,-0.937599,-9.569591,-5.671371,0.833103,0.434594,-5.821274,-2.454994,-8.823779,-0.789733,-2.376196,-9.196389,1.249927,-3.685870,5.651516,2.243910,-7.392189,-7.587592,9.181537,6.275784,9.514688,2.762632,-8.181276,4.568108,3.012474,9.661928,-6.673490,9.889191,-9.920906,5.563805,-0.537037,1.968600,-4.043315,8.370890,3.798644,7.546209,-8.598593,-0.637430,-7.665589,8.105812,9.191156,1.808109,-4.212985,3.778747,-5.493651,7.646463,-3.589891,0.600756,-6.999142,-2.388187,4.361914,-8.941969,-7.175025,7.543411,-5.570408,4.744326,6.365723,-9.396276,2.280396,-2.404474,-2.320027,0.418691,-0.050685,-2.850876,4.714356,-5.936949,-2.474714,-9.257831,-7.954160,4.233890,-9.917966,-6.211563,4.015314,-4.698251,3.182916,-6.541323,-5.420601,-4.732960,-6.204644,5.362009,9.524052,-4.688185,6.121731,3.693730,-6.153800,-4.440328,7.769534,-1.335243,2.380856,9.354842,7.008869,5.449366,8.067849,3.250536,-9.977812,-3.552215,-2.700647,5.517345,8.763919,7.327404,7.918328,0.283975,5.705020,2.101773,-7.903268,9.017715,-9.653217,4.243848,-8.166098,9.800807,3.547156,-5.911539,-0.715458,5.317230,-0.475700,-7.576793,1.193359,-9.629453,8.305837,2.575424,6.618507,-5.014983,3.109039,1.392173,-5.206443,-3.845010,-7.719128,3.267026,-0.040674,5.673236,-5.839715,-2.341363,8.214623,-9.891388,-6.197276,-4.630860,-1.051473,8.103052,-7.980432,0.211500,3.379648,-0.847638,-6.542918,8.071316,0.140566,-1.191519,-3.879910,5.038905,3.071741,-9.200041,4.554985,3.863527,2.210458,-6.447316,-7.722784,-8.417781,2.807217,4.690823,5.874653,7.416287,3.400525,-2.393880,-3.195376,0.113815,3.662126,-5.042903,-0.969486,-2.660063,-4.743771,7.100753,-0.212561,8.255481,8.345107,1.926246,8.370651,6.041599,-6.062936,-5.843617,0.896517,6.437933,9.271014,4.396422,7.932534,-1.339555,-2.942870,-4.800556,2.699501,4.768101,5.064507,1.863878,8.315159,3.169456,-2.281011,-4.602850,-8.220295,-1.548084,4.425581,0.364133,3.391579,0.483343,-3.653096,-7.670593,8.744035,-0.128027,9.054953,4.820127,-8.848646,-5.790989,-9.449925,-2.418918,-8.824742,-7.264436,-3.352893,3.213211,2.395644,-5.661338,-2.899309,-8.406131,-5.336871,-4.490018,-8.321161,-2.125496,9.429574,-7.812959,8.996347,-5.938445,8.529145,-2.423708,-6.118182,-5.934935,-1.817546,0.069124,5.782702,-7.040191,-8.625127,3.039131,-1.093533,6.482552,8.135704,1.025778,-5.039742,-3.151537,-4.238136,-3.298185,-5.056134,4.657352,0.869498,-4.757792,-8.394518,-3.587468,5.055236,9.528952,2.651734,6.109993,-6.078860,5.528803,-8.503990,1.986752,-1.406291,-2.326564,-5.126282,0.655747,-2.711480,-0.659296,-1.247302,-2.464903,2.897318,6.784938,-3.258667,9.187742,2.025305,-2.652173,-6.049192,3.697170,7.668963,-1.999476,4.897038,9.877503,3.762598,-2.234742,-8.681622,7.005265,-7.363490,-8.844190,-7.358998,-7.403301,-2.136046,9.095138,-9.011250,-5.127719,-3.739141,3.712160,-2.515921,-4.285419,-9.514209,-1.521229,6.560801,-8.338755,-1.010450,-7.196409,-8.843884,1.232067,6.612012,-2.636204,2.610502,1.407472,3.119257,0.085993,4.514301,1.484684,-4.353672,-2.372947,3.493333,2.503953,9.941520,-6.966434,-0.876347,7.461688,0.433683,2.513626,-9.090942,-9.546923,6.801753,7.061459,4.476837,3.597432,-8.366365,4.336181,-2.893404,-3.481564,3.073795,-0.857864,-5.808850,4.339880,8.207888,-4.964715,-0.554713,0.031929,-9.273794,-7.471338,7.951516,9.036080,-1.416330,6.111114,4.881137,-3.981530,1.941292,0.214805,-4.092647,5.910737,0.964233,2.073883,-1.826432,-8.467683,-4.265837,8.642210,-6.691305,2.810814,8.777987,0.358688,-4.645871,4.994227,-2.477896,7.601795,-8.345473,-3.823519,-3.206526,4.853598,-1.255566,2.037405,-6.534327,-9.391650,9.466653,4.857671,4.041517,-8.046170,8.758145,3.656868,-3.353157,-7.574576,2.118310,-9.035901,2.463025,-1.953601,1.034220,-4.786946,-7.534203,-7.075496,-1.661204,5.159097,2.466255,-1.674943,1.245838,-4.356285,-6.304638,-4.029369,-7.114939,-8.765546,-5.756468,1.134078,-6.450965,-9.143861,1.922268,5.787148,-0.790991,2.650675,-3.250825,-6.885652,5.271463,6.164427,-0.287713,9.535760,-4.086759,-4.052610,-6.855131,4.704567,0.405719,-7.110915,-6.729540,-9.403242,-9.974898,-2.084903,0.593196,-9.145074,-7.060484,2.067746,-1.663397,4.088870,-4.081608,0.116828,2.292666,7.860747,-2.142430,0.384834,7.384055,-6.338722,1.731562,-8.303042,0.210587,3.880024,-3.758631,-5.882161,9.147051,-7.847847,5.968749,7.096216,-3.841668,3.847287,-6.080161,9.757101,8.190121,1.101119,7.849374,3.010917,-6.133179,-7.118637,2.865002,8.238901,-5.644561,-3.850924,-7.290632,-5.400334,2.472178,5.669284,2.864705,4.665291,-1.955451,4.987324,5.997463,9.473306,-4.334996,-9.272400,-9.786041,-3.417173,5.965019,0.297941,-8.779454,-8.520951,5.066229,1.207534,1.623174,0.108607,4.264014,6.565649,-4.706937,2.702581,-9.215752,-8.930858,9.860389,8.900137,-4.367496,-2.613595,-2.612971,-0.851728,8.153319,-3.943091,-9.666118,-5.361752,9.009716,-9.744913,-9.502828,-2.992883,-8.310752,-5.852663,3.192255,-6.569677,-1.111597,6.632326,-3.457442,-2.408773,2.331288,-9.015318,9.422922,-2.229434,-2.241669,-9.467069,-5.459378,0.223471,9.981139,-3.479297,8.792476,-4.880970,-6.749036,-3.079943,4.873913,-6.362664,-1.975593,9.979201,7.375956,-3.665745,-2.870289,4.901967,2.751553,3.733069,-1.058087,0.803664,5.623531,7.917976,4.648782,-0.659758,-8.030149,-8.323087,2.778049,-3.263520,3.075110,-2.247456,0.628464,-9.786398,-9.644828,-0.580947,5.553511,-1.463784,6.401254,-7.085274,5.705121,-7.175446,3.672093,-2.306658,-1.937500,-2.790671,0.353001,0.470262,-8.183620,5.055566,-4.459149,0.434722,-7.756422,-8.940330,9.118584,-1.252977,5.188606,-3.523214,4.014030,1.748371,-8.338037,5.954056,-3.808977,-3.422689,-7.210321,3.553664,4.142648,7.093174,-4.300475,-4.166928,-0.817649,-9.556983,0.102715,0.771912,-8.380395,-2.855909,-2.450909,-6.085876,-2.693910,3.099834,0.939956,1.264833,4.482356,-0.198273,-3.396528,1.894150,9.595587,-7.649418,-9.163592,-6.406010,-7.102272,9.515470,-1.675967,1.516269,1.031123,-9.315709,3.126045,7.521766,-7.623656,-8.300716,-5.655233,2.753111,-7.517912,-3.438649,0.657810,7.788144,2.157405,-8.324995,-5.262653,5.942148,-5.665065,-8.141440,0.830596,-9.578907,7.616458,0.187164,-2.064824,-7.265016,-4.419516,-3.933246,8.108677,-4.079108,-8.589146,-2.520552,-2.958473,-1.879669,5.298302,0.136828,8.667318,-6.429841,-1.806923,-4.508128,6.630924,0.448462,-7.595330,7.268224,5.672993,-1.821563,4.795718,6.735359,-6.049353,-7.877044,-3.312810,5.653192,-1.209153,9.732330,5.177618], dtype = "float32")#candidate|2595|(1170,)|const|float32
call_2593 = relay.TupleGetItem(func_1523_call(relay.reshape(var_2594.astype('float32'), [8, 224]), relay.reshape(const_2595.astype('float32'), [1170,]), ), 1)
call_2596 = relay.TupleGetItem(func_1526_call(relay.reshape(var_2594.astype('float32'), [8, 224]), relay.reshape(const_2595.astype('float32'), [1170,]), ), 1)
output = relay.Tuple([bop_2586,call_2593,var_2594,const_2595,])
output2 = relay.Tuple([bop_2589,call_2596,var_2594,const_2595,])
func_2630 = relay.Function([var_2585,var_2594,], output)
mod['func_2630'] = func_2630
mod = relay.transform.InferType()(mod)
mutated_mod['func_2630'] = func_2630
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2630_call = mutated_mod.get_global_var('func_2630')
var_2632 = relay.var("var_2632", dtype = "float32", shape = (2, 15, 8))#candidate|2632|(2, 15, 8)|var|float32
var_2633 = relay.var("var_2633", dtype = "float32", shape = (1792,))#candidate|2633|(1792,)|var|float32
call_2631 = func_2630_call(var_2632,var_2633,)
output = call_2631
func_2634 = relay.Function([var_2632,var_2633,], output)
mutated_mod['func_2634'] = func_2634
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2023_call = mod.get_global_var('func_2023')
func_2025_call = mutated_mod.get_global_var('func_2025')
call_2688 = relay.TupleGetItem(func_2023_call(), 0)
call_2689 = relay.TupleGetItem(func_2025_call(), 0)
func_1235_call = mod.get_global_var('func_1235')
func_1237_call = mutated_mod.get_global_var('func_1237')
call_2729 = relay.TupleGetItem(func_1235_call(), 4)
call_2730 = relay.TupleGetItem(func_1237_call(), 4)
var_2749 = relay.var("var_2749", dtype = "float64", shape = (448, 4))#candidate|2749|(448, 4)|var|float64
bop_2750 = relay.logical_or(call_2729.astype('bool'), relay.reshape(var_2749.astype('bool'), relay.shape_of(call_2729))) # shape=(448, 4)
bop_2753 = relay.logical_or(call_2730.astype('bool'), relay.reshape(var_2749.astype('bool'), relay.shape_of(call_2730))) # shape=(448, 4)
uop_2754 = relay.log10(bop_2750.astype('float64')) # shape=(448, 4)
uop_2756 = relay.log10(bop_2753.astype('float64')) # shape=(448, 4)
output = relay.Tuple([call_2688,uop_2754,])
output2 = relay.Tuple([call_2689,uop_2756,])
func_2764 = relay.Function([var_2749,], output)
mod['func_2764'] = func_2764
mod = relay.transform.InferType()(mod)
var_2765 = relay.var("var_2765", dtype = "float64", shape = (448, 4))#candidate|2765|(448, 4)|var|float64
output = func_2764(var_2765)
func_2766 = relay.Function([var_2765], output)
mutated_mod['func_2766'] = func_2766
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2770 = relay.var("var_2770", dtype = "float32", shape = (9, 1, 9))#candidate|2770|(9, 1, 9)|var|float32
var_2771 = relay.var("var_2771", dtype = "float32", shape = (9, 16, 9))#candidate|2771|(9, 16, 9)|var|float32
bop_2772 = relay.mod(var_2770.astype('float32'), var_2771.astype('float32')) # shape=(9, 16, 9)
output = relay.Tuple([bop_2772,])
output2 = relay.Tuple([bop_2772,])
func_2775 = relay.Function([var_2770,var_2771,], output)
mod['func_2775'] = func_2775
mod = relay.transform.InferType()(mod)
var_2776 = relay.var("var_2776", dtype = "float32", shape = (9, 1, 9))#candidate|2776|(9, 1, 9)|var|float32
var_2777 = relay.var("var_2777", dtype = "float32", shape = (9, 16, 9))#candidate|2777|(9, 16, 9)|var|float32
output = func_2775(var_2776,var_2777,)
func_2778 = relay.Function([var_2776,var_2777,], output)
mutated_mod['func_2778'] = func_2778
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2248_call = mod.get_global_var('func_2248')
func_2249_call = mutated_mod.get_global_var('func_2249')
call_2787 = relay.TupleGetItem(func_2248_call(), 0)
call_2788 = relay.TupleGetItem(func_2249_call(), 0)
func_2480_call = mod.get_global_var('func_2480')
func_2482_call = mutated_mod.get_global_var('func_2482')
call_2805 = func_2480_call()
call_2806 = func_2480_call()
output = relay.Tuple([call_2787,call_2805,])
output2 = relay.Tuple([call_2788,call_2806,])
func_2830 = relay.Function([], output)
mod['func_2830'] = func_2830
mod = relay.transform.InferType()(mod)
output = func_2830()
func_2831 = relay.Function([], output)
mutated_mod['func_2831'] = func_2831
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1111_call = mod.get_global_var('func_1111')
func_1113_call = mutated_mod.get_global_var('func_1113')
call_2845 = relay.TupleGetItem(func_1111_call(), 1)
call_2846 = relay.TupleGetItem(func_1113_call(), 1)
output = call_2845
output2 = call_2846
func_2863 = relay.Function([], output)
mod['func_2863'] = func_2863
mod = relay.transform.InferType()(mod)
output = func_2863()
func_2864 = relay.Function([], output)
mutated_mod['func_2864'] = func_2864
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2023_call = mod.get_global_var('func_2023')
func_2025_call = mutated_mod.get_global_var('func_2025')
call_2868 = relay.TupleGetItem(func_2023_call(), 1)
call_2869 = relay.TupleGetItem(func_2025_call(), 1)
func_2863_call = mod.get_global_var('func_2863')
func_2864_call = mutated_mod.get_global_var('func_2864')
call_2872 = func_2863_call()
call_2873 = func_2863_call()
output = relay.Tuple([call_2868,call_2872,])
output2 = relay.Tuple([call_2869,call_2873,])
func_2882 = relay.Function([], output)
mod['func_2882'] = func_2882
mod = relay.transform.InferType()(mod)
mutated_mod['func_2882'] = func_2882
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2882_call = mutated_mod.get_global_var('func_2882')
call_2883 = func_2882_call()
output = call_2883
func_2884 = relay.Function([], output)
mutated_mod['func_2884'] = func_2884
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1235_call = mod.get_global_var('func_1235')
func_1237_call = mutated_mod.get_global_var('func_1237')
call_2918 = relay.TupleGetItem(func_1235_call(), 0)
call_2919 = relay.TupleGetItem(func_1237_call(), 0)
output = relay.Tuple([call_2918,])
output2 = relay.Tuple([call_2919,])
func_2937 = relay.Function([], output)
mod['func_2937'] = func_2937
mod = relay.transform.InferType()(mod)
mutated_mod['func_2937'] = func_2937
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2937_call = mutated_mod.get_global_var('func_2937')
call_2938 = func_2937_call()
output = call_2938
func_2939 = relay.Function([], output)
mutated_mod['func_2939'] = func_2939
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1887_call = mod.get_global_var('func_1887')
func_1889_call = mutated_mod.get_global_var('func_1889')
call_2947 = relay.TupleGetItem(func_1887_call(), 0)
call_2948 = relay.TupleGetItem(func_1889_call(), 0)
output = call_2947
output2 = call_2948
func_2956 = relay.Function([], output)
mod['func_2956'] = func_2956
mod = relay.transform.InferType()(mod)
mutated_mod['func_2956'] = func_2956
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2956_call = mutated_mod.get_global_var('func_2956')
call_2957 = func_2956_call()
output = call_2957
func_2958 = relay.Function([], output)
mutated_mod['func_2958'] = func_2958
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1022_call = mod.get_global_var('func_1022')
func_1024_call = mutated_mod.get_global_var('func_1024')
call_3069 = relay.TupleGetItem(func_1022_call(), 0)
call_3070 = relay.TupleGetItem(func_1024_call(), 0)
output = relay.Tuple([call_3069,])
output2 = relay.Tuple([call_3070,])
func_3071 = relay.Function([], output)
mod['func_3071'] = func_3071
mod = relay.transform.InferType()(mod)
mutated_mod['func_3071'] = func_3071
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3071_call = mutated_mod.get_global_var('func_3071')
call_3072 = func_3071_call()
output = call_3072
func_3073 = relay.Function([], output)
mutated_mod['func_3073'] = func_3073
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2217_call = mod.get_global_var('func_2217')
func_2219_call = mutated_mod.get_global_var('func_2219')
call_3111 = relay.TupleGetItem(func_2217_call(), 0)
call_3112 = relay.TupleGetItem(func_2219_call(), 0)
output = relay.Tuple([call_3111,])
output2 = relay.Tuple([call_3112,])
func_3115 = relay.Function([], output)
mod['func_3115'] = func_3115
mod = relay.transform.InferType()(mod)
output = func_3115()
func_3116 = relay.Function([], output)
mutated_mod['func_3116'] = func_3116
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3071_call = mod.get_global_var('func_3071')
func_3073_call = mutated_mod.get_global_var('func_3073')
call_3164 = relay.TupleGetItem(func_3071_call(), 0)
call_3165 = relay.TupleGetItem(func_3073_call(), 0)
output = call_3164
output2 = call_3165
func_3170 = relay.Function([], output)
mod['func_3170'] = func_3170
mod = relay.transform.InferType()(mod)
output = func_3170()
func_3171 = relay.Function([], output)
mutated_mod['func_3171'] = func_3171
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2863_call = mod.get_global_var('func_2863')
func_2864_call = mutated_mod.get_global_var('func_2864')
call_3210 = func_2863_call()
call_3211 = func_2863_call()
func_2023_call = mod.get_global_var('func_2023')
func_2025_call = mutated_mod.get_global_var('func_2025')
call_3228 = relay.TupleGetItem(func_2023_call(), 1)
call_3229 = relay.TupleGetItem(func_2025_call(), 1)
var_3232 = relay.var("var_3232", dtype = "float32", shape = (15, 14, 5))#candidate|3232|(15, 14, 5)|var|float32
bop_3233 = relay.bitwise_xor(call_3210.astype('int64'), relay.reshape(var_3232.astype('int64'), relay.shape_of(call_3210))) # shape=(15, 14, 5)
bop_3236 = relay.bitwise_xor(call_3211.astype('int64'), relay.reshape(var_3232.astype('int64'), relay.shape_of(call_3211))) # shape=(15, 14, 5)
output = relay.Tuple([call_3228,bop_3233,])
output2 = relay.Tuple([call_3229,bop_3236,])
func_3239 = relay.Function([var_3232,], output)
mod['func_3239'] = func_3239
mod = relay.transform.InferType()(mod)
mutated_mod['func_3239'] = func_3239
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3240 = relay.var("var_3240", dtype = "float32", shape = (15, 14, 5))#candidate|3240|(15, 14, 5)|var|float32
func_3239_call = mutated_mod.get_global_var('func_3239')
call_3241 = func_3239_call(var_3240)
output = call_3241
func_3242 = relay.Function([var_3240], output)
mutated_mod['func_3242'] = func_3242
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1059_call = mod.get_global_var('func_1059')
func_1061_call = mutated_mod.get_global_var('func_1061')
call_3248 = relay.TupleGetItem(func_1059_call(), 0)
call_3249 = relay.TupleGetItem(func_1061_call(), 0)
func_1786_call = mod.get_global_var('func_1786')
func_1790_call = mutated_mod.get_global_var('func_1790')
var_3259 = relay.var("var_3259", dtype = "int64", shape = (360,))#candidate|3259|(360,)|var|int64
var_3260 = relay.var("var_3260", dtype = "float32", shape = (1, 180))#candidate|3260|(1, 180)|var|float32
var_3261 = relay.var("var_3261", dtype = "float32", shape = (10, 117))#candidate|3261|(10, 117)|var|float32
call_3258 = relay.TupleGetItem(func_1786_call(relay.reshape(var_3259.astype('int64'), [360,]), relay.reshape(var_3260.astype('float32'), [180, 1]), relay.reshape(var_3261.astype('float32'), [1170,]), ), 2)
call_3262 = relay.TupleGetItem(func_1790_call(relay.reshape(var_3259.astype('int64'), [360,]), relay.reshape(var_3260.astype('float32'), [180, 1]), relay.reshape(var_3261.astype('float32'), [1170,]), ), 2)
output = relay.Tuple([call_3248,call_3258,var_3259,var_3260,var_3261,])
output2 = relay.Tuple([call_3249,call_3262,var_3259,var_3260,var_3261,])
func_3275 = relay.Function([var_3259,var_3260,var_3261,], output)
mod['func_3275'] = func_3275
mod = relay.transform.InferType()(mod)
var_3276 = relay.var("var_3276", dtype = "int64", shape = (360,))#candidate|3276|(360,)|var|int64
var_3277 = relay.var("var_3277", dtype = "float32", shape = (1, 180))#candidate|3277|(1, 180)|var|float32
var_3278 = relay.var("var_3278", dtype = "float32", shape = (10, 117))#candidate|3278|(10, 117)|var|float32
output = func_3275(var_3276,var_3277,var_3278,)
func_3279 = relay.Function([var_3276,var_3277,var_3278,], output)
mutated_mod['func_3279'] = func_3279
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3281 = relay.var("var_3281", dtype = "float32", shape = (8, 4, 8))#candidate|3281|(8, 4, 8)|var|float32
uop_3282 = relay.cos(var_3281.astype('float32')) # shape=(8, 4, 8)
uop_3290 = relay.asin(uop_3282.astype('float64')) # shape=(8, 4, 8)
var_3293 = relay.var("var_3293", dtype = "float64", shape = (8, 4, 8))#candidate|3293|(8, 4, 8)|var|float64
bop_3294 = relay.greater_equal(uop_3290.astype('bool'), relay.reshape(var_3293.astype('bool'), relay.shape_of(uop_3290))) # shape=(8, 4, 8)
output = relay.Tuple([bop_3294,])
output2 = relay.Tuple([bop_3294,])
func_3297 = relay.Function([var_3281,var_3293,], output)
mod['func_3297'] = func_3297
mod = relay.transform.InferType()(mod)
mutated_mod['func_3297'] = func_3297
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3297_call = mutated_mod.get_global_var('func_3297')
var_3299 = relay.var("var_3299", dtype = "float32", shape = (8, 4, 8))#candidate|3299|(8, 4, 8)|var|float32
var_3300 = relay.var("var_3300", dtype = "float64", shape = (8, 4, 8))#candidate|3300|(8, 4, 8)|var|float64
call_3298 = func_3297_call(var_3299,var_3300,)
output = call_3298
func_3301 = relay.Function([var_3299,var_3300,], output)
mutated_mod['func_3301'] = func_3301
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2830_call = mod.get_global_var('func_2830')
func_2831_call = mutated_mod.get_global_var('func_2831')
call_3303 = relay.TupleGetItem(func_2830_call(), 1)
call_3304 = relay.TupleGetItem(func_2831_call(), 1)
var_3308 = relay.var("var_3308", dtype = "float32", shape = (15, 14, 5))#candidate|3308|(15, 14, 5)|var|float32
bop_3309 = relay.less_equal(call_3303.astype('bool'), relay.reshape(var_3308.astype('bool'), relay.shape_of(call_3303))) # shape=(15, 14, 5)
bop_3312 = relay.less_equal(call_3304.astype('bool'), relay.reshape(var_3308.astype('bool'), relay.shape_of(call_3304))) # shape=(15, 14, 5)
func_3071_call = mod.get_global_var('func_3071')
func_3073_call = mutated_mod.get_global_var('func_3073')
call_3313 = relay.TupleGetItem(func_3071_call(), 0)
call_3314 = relay.TupleGetItem(func_3073_call(), 0)
var_3323 = relay.var("var_3323", dtype = "float32", shape = (15, 14, 5))#candidate|3323|(15, 14, 5)|var|float32
bop_3324 = relay.right_shift(call_3303.astype('int32'), relay.reshape(var_3323.astype('int32'), relay.shape_of(call_3303))) # shape=(15, 14, 5)
bop_3327 = relay.right_shift(call_3304.astype('int32'), relay.reshape(var_3323.astype('int32'), relay.shape_of(call_3304))) # shape=(15, 14, 5)
uop_3330 = relay.atan(call_3313.astype('float32')) # shape=(15, 14, 5)
uop_3332 = relay.atan(call_3314.astype('float32')) # shape=(15, 14, 5)
func_2863_call = mod.get_global_var('func_2863')
func_2864_call = mutated_mod.get_global_var('func_2864')
call_3333 = func_2863_call()
call_3334 = func_2863_call()
func_1591_call = mod.get_global_var('func_1591')
func_1593_call = mutated_mod.get_global_var('func_1593')
call_3340 = func_1591_call()
call_3341 = func_1591_call()
output = relay.Tuple([bop_3309,bop_3324,uop_3330,call_3333,call_3340,])
output2 = relay.Tuple([bop_3312,bop_3327,uop_3332,call_3334,call_3341,])
func_3357 = relay.Function([var_3308,var_3323,], output)
mod['func_3357'] = func_3357
mod = relay.transform.InferType()(mod)
var_3358 = relay.var("var_3358", dtype = "float32", shape = (15, 14, 5))#candidate|3358|(15, 14, 5)|var|float32
var_3359 = relay.var("var_3359", dtype = "float32", shape = (15, 14, 5))#candidate|3359|(15, 14, 5)|var|float32
output = func_3357(var_3358,var_3359,)
func_3360 = relay.Function([var_3358,var_3359,], output)
mutated_mod['func_3360'] = func_3360
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1059_call = mod.get_global_var('func_1059')
func_1061_call = mutated_mod.get_global_var('func_1061')
call_3373 = relay.TupleGetItem(func_1059_call(), 0)
call_3374 = relay.TupleGetItem(func_1061_call(), 0)
output = relay.Tuple([call_3373,])
output2 = relay.Tuple([call_3374,])
func_3390 = relay.Function([], output)
mod['func_3390'] = func_3390
mod = relay.transform.InferType()(mod)
output = func_3390()
func_3391 = relay.Function([], output)
mutated_mod['func_3391'] = func_3391
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3463 = relay.var("var_3463", dtype = "bool", shape = (5, 15, 10))#candidate|3463|(5, 15, 10)|var|bool
var_3464 = relay.var("var_3464", dtype = "bool", shape = (5, 15, 10))#candidate|3464|(5, 15, 10)|var|bool
bop_3465 = relay.logical_and(var_3463.astype('bool'), relay.reshape(var_3464.astype('bool'), relay.shape_of(var_3463))) # shape=(5, 15, 10)
uop_3470 = relay.erf(bop_3465.astype('float32')) # shape=(5, 15, 10)
output = uop_3470
output2 = uop_3470
func_3477 = relay.Function([var_3463,var_3464,], output)
mod['func_3477'] = func_3477
mod = relay.transform.InferType()(mod)
mutated_mod['func_3477'] = func_3477
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3477_call = mutated_mod.get_global_var('func_3477')
var_3479 = relay.var("var_3479", dtype = "bool", shape = (5, 15, 10))#candidate|3479|(5, 15, 10)|var|bool
var_3480 = relay.var("var_3480", dtype = "bool", shape = (5, 15, 10))#candidate|3480|(5, 15, 10)|var|bool
call_3478 = func_3477_call(var_3479,var_3480,)
output = call_3478
func_3481 = relay.Function([var_3479,var_3480,], output)
mutated_mod['func_3481'] = func_3481
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2217_call = mod.get_global_var('func_2217')
func_2219_call = mutated_mod.get_global_var('func_2219')
call_3499 = relay.TupleGetItem(func_2217_call(), 0)
call_3500 = relay.TupleGetItem(func_2219_call(), 0)
output = call_3499
output2 = call_3500
func_3548 = relay.Function([], output)
mod['func_3548'] = func_3548
mod = relay.transform.InferType()(mod)
mutated_mod['func_3548'] = func_3548
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3548_call = mutated_mod.get_global_var('func_3548')
call_3549 = func_3548_call()
output = call_3549
func_3550 = relay.Function([], output)
mutated_mod['func_3550'] = func_3550
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3170_call = mod.get_global_var('func_3170')
func_3171_call = mutated_mod.get_global_var('func_3171')
call_3554 = func_3170_call()
call_3555 = func_3170_call()
func_3548_call = mod.get_global_var('func_3548')
func_3550_call = mutated_mod.get_global_var('func_3550')
call_3557 = func_3548_call()
call_3558 = func_3548_call()
func_2630_call = mod.get_global_var('func_2630')
func_2634_call = mutated_mod.get_global_var('func_2634')
var_3567 = relay.var("var_3567", dtype = "float32", shape = (240,))#candidate|3567|(240,)|var|float32
var_3568 = relay.var("var_3568", dtype = "float32", shape = (1792,))#candidate|3568|(1792,)|var|float32
call_3566 = relay.TupleGetItem(func_2630_call(relay.reshape(var_3567.astype('float32'), [2, 15, 8]), relay.reshape(var_3568.astype('float32'), [1792,]), ), 1)
call_3569 = relay.TupleGetItem(func_2634_call(relay.reshape(var_3567.astype('float32'), [2, 15, 8]), relay.reshape(var_3568.astype('float32'), [1792,]), ), 1)
func_1150_call = mod.get_global_var('func_1150')
func_1152_call = mutated_mod.get_global_var('func_1152')
const_3581 = relay.const([2.023319,-3.714503,-1.018558,1.636388,-8.666480,0.035122,-8.474509,6.698071,5.503452,9.515409,-2.594016,3.639183,-3.903115,7.513939,4.298410,-4.583195,-9.013181,-2.284396,3.791456,0.879064,4.639613,-5.472458,-9.667766,-8.923660,-3.421494,7.293686,-0.066463,-0.862144,-0.379123,-4.043934,-7.474345,-1.111082,7.946193,-8.832232,-8.594673,-6.606593,-5.500930,1.301631,-1.731463], dtype = "float32")#candidate|3581|(39,)|const|float32
call_3580 = relay.TupleGetItem(func_1150_call(relay.reshape(const_3581.astype('float32'), [3, 13])), 0)
call_3582 = relay.TupleGetItem(func_1152_call(relay.reshape(const_3581.astype('float32'), [3, 13])), 0)
output = relay.Tuple([call_3554,call_3557,call_3566,var_3567,var_3568,call_3580,const_3581,])
output2 = relay.Tuple([call_3555,call_3558,call_3569,var_3567,var_3568,call_3582,const_3581,])
func_3595 = relay.Function([var_3567,var_3568,], output)
mod['func_3595'] = func_3595
mod = relay.transform.InferType()(mod)
var_3596 = relay.var("var_3596", dtype = "float32", shape = (240,))#candidate|3596|(240,)|var|float32
var_3597 = relay.var("var_3597", dtype = "float32", shape = (1792,))#candidate|3597|(1792,)|var|float32
output = func_3595(var_3596,var_3597,)
func_3598 = relay.Function([var_3596,var_3597,], output)
mutated_mod['func_3598'] = func_3598
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1568_call = mod.get_global_var('func_1568')
func_1570_call = mutated_mod.get_global_var('func_1570')
call_3662 = relay.TupleGetItem(func_1568_call(), 0)
call_3663 = relay.TupleGetItem(func_1570_call(), 0)
func_441_call = mod.get_global_var('func_441')
func_445_call = mutated_mod.get_global_var('func_445')
var_3672 = relay.var("var_3672", dtype = "float32", shape = (1170,))#candidate|3672|(1170,)|var|float32
call_3671 = relay.TupleGetItem(func_441_call(relay.reshape(var_3672.astype('float32'), [13, 10, 9]), relay.reshape(var_3672.astype('float32'), [13, 10, 9]), relay.reshape(var_3672.astype('float32'), [13, 10, 9]), ), 8)
call_3673 = relay.TupleGetItem(func_445_call(relay.reshape(var_3672.astype('float32'), [13, 10, 9]), relay.reshape(var_3672.astype('float32'), [13, 10, 9]), relay.reshape(var_3672.astype('float32'), [13, 10, 9]), ), 8)
output = relay.Tuple([call_3662,call_3671,var_3672,])
output2 = relay.Tuple([call_3663,call_3673,var_3672,])
func_3676 = relay.Function([var_3672,], output)
mod['func_3676'] = func_3676
mod = relay.transform.InferType()(mod)
mutated_mod['func_3676'] = func_3676
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3677 = relay.var("var_3677", dtype = "float32", shape = (1170,))#candidate|3677|(1170,)|var|float32
func_3676_call = mutated_mod.get_global_var('func_3676')
call_3678 = func_3676_call(var_3677)
output = call_3678
func_3679 = relay.Function([var_3677], output)
mutated_mod['func_3679'] = func_3679
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1344_call = mod.get_global_var('func_1344')
func_1345_call = mutated_mod.get_global_var('func_1345')
call_3683 = func_1344_call()
call_3684 = func_1344_call()
output = relay.Tuple([call_3683,])
output2 = relay.Tuple([call_3684,])
func_3691 = relay.Function([], output)
mod['func_3691'] = func_3691
mod = relay.transform.InferType()(mod)
mutated_mod['func_3691'] = func_3691
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3691_call = mutated_mod.get_global_var('func_3691')
call_3692 = func_3691_call()
output = call_3692
func_3693 = relay.Function([], output)
mutated_mod['func_3693'] = func_3693
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3698 = relay.const([[[-6.214688,-0.446234,4.418882,4.024322,5.850420,4.351240,-3.617106,6.099606,7.018488,-1.350055,-8.118126,-8.014317,7.825767,-3.715617],[2.477140,6.942982,-9.451658,2.610613,-6.077809,-6.779944,-0.966844,-1.887379,6.034774,6.427897,-4.703540,8.513874,1.985704,7.012393],[1.844791,-7.651379,6.042818,5.408288,0.625982,-7.596155,1.364309,2.988837,-0.950761,-9.643118,5.964018,-5.110549,0.202371,6.539445],[8.081837,5.143626,-0.636037,2.755682,-6.843764,0.479181,7.274803,1.288784,-5.122540,2.658058,-7.593003,-9.721062,3.293065,-0.168508],[-2.320949,0.369322,-2.036526,0.693978,5.753787,1.093783,5.947451,8.659820,-6.743005,0.241491,-1.900447,4.757286,-4.371915,-1.480010],[9.380576,-9.469039,-5.540123,0.394952,5.280801,6.181295,-7.102949,-7.667046,4.912787,-5.927725,-7.017965,-1.547616,-8.003118,-1.216043],[5.480786,1.028495,6.497510,5.871359,1.536689,-2.648327,3.753028,6.048498,-4.519553,9.278332,-6.347346,3.738922,8.206369,8.273886]],[[-5.954006,-1.533537,-9.788420,-3.040710,6.107519,-8.093867,-4.232660,1.722442,-1.394896,6.195834,-7.867036,4.577806,5.998444,-7.210604],[-5.545118,-1.699427,4.275582,3.972446,-6.451825,4.555361,4.872588,4.172178,-5.633682,9.265665,9.486300,-8.143502,8.223192,-0.680819],[-4.444745,2.839846,-5.902107,1.477922,-6.802823,-7.647196,-9.145241,-5.689064,2.772635,-8.938057,6.214036,-7.914051,-9.628739,-1.642619],[-3.513402,-0.082570,5.491658,-4.097779,-7.313391,7.648046,-0.061328,2.343087,1.908525,-6.909585,6.791055,8.195715,-8.743979,-2.975883],[-4.502357,-1.668214,8.235976,8.067969,-0.273275,0.444038,-7.453436,3.048641,-6.655228,1.298135,-7.157917,-3.819471,-1.110703,-3.695193],[9.298285,-9.409644,-2.891834,6.128199,3.031588,-8.746183,-9.957218,-4.401517,7.293317,9.042069,1.180201,3.135308,-1.390003,3.845641],[6.291075,9.613608,-3.692315,-8.705558,-7.731619,8.410209,3.302702,6.812318,6.048667,-9.868766,2.920423,-1.403732,-4.689510,-4.270086]],[[3.349992,-6.702762,-3.002132,4.009962,8.388207,6.577731,1.761349,8.506432,-8.141485,-0.933152,3.024818,-1.560629,-5.987215,6.032242],[4.401308,1.047813,9.195815,2.591816,2.339980,2.207418,5.821770,-9.246234,0.668685,6.565420,-5.054235,2.562792,-2.947936,-0.617890],[-6.771048,0.693602,-7.134296,-6.751072,-5.501714,9.283649,-6.175201,-5.649106,7.812794,7.547229,1.201895,-1.133827,-3.694670,7.776451],[-8.947141,-2.113385,9.686749,-0.329674,-6.313981,6.012874,-3.704440,2.305223,8.650302,-7.886729,-2.351797,2.591250,-2.634075,-6.615843],[1.067255,8.448582,8.691417,-1.153817,-3.631776,-0.609620,9.899946,0.277831,-3.417191,1.156437,8.543501,-7.172304,8.505624,4.496556],[-7.381367,-5.836268,4.672233,8.078090,9.241788,1.313117,-6.330356,8.938625,0.635385,5.295710,2.785988,-4.272837,7.617113,-2.265150],[-7.282027,-7.092864,9.794931,9.278770,9.331451,-4.172346,-9.616107,-2.416716,5.997515,7.520118,-6.464494,9.253967,4.706786,-2.712106]],[[-9.468097,8.552477,-5.757130,1.720735,-3.364783,-5.158657,3.331716,2.848638,-9.838133,-0.285094,7.151845,6.172872,8.587392,1.378619],[-5.665239,2.719033,-9.701161,9.652857,-0.146991,5.618359,1.066105,-9.646022,-2.465128,1.541721,9.044264,-7.650709,6.659063,2.676164],[-4.778260,7.234676,-7.453585,-4.054853,3.659862,-7.912261,-7.567742,-8.525230,9.699975,1.861787,-7.417014,6.248138,-1.255816,-7.860598],[0.939810,-6.148995,-8.575572,-9.896062,-5.816419,-8.773696,-7.342005,-9.762511,-8.564738,9.373089,5.758839,5.070821,9.713304,-4.314566],[-0.011400,9.454531,-2.147786,-4.624208,5.888822,3.373665,3.285468,2.404363,-3.155062,-7.603349,-7.226744,8.146036,-8.688208,-1.336453],[7.884872,-6.097927,2.106593,1.307680,5.947551,2.157675,-9.658310,3.525194,-1.845044,4.609197,-7.518696,1.500394,8.685552,-2.299987],[0.941542,0.243131,8.230642,-9.574664,2.873739,-2.943643,3.775388,7.182553,6.706082,6.072845,4.020353,-5.864626,7.012892,3.306112]]], dtype = "float64")#candidate|3698|(4, 7, 14)|const|float64
uop_3699 = relay.asinh(const_3698.astype('float64')) # shape=(4, 7, 14)
func_1431_call = mod.get_global_var('func_1431')
func_1433_call = mutated_mod.get_global_var('func_1433')
call_3709 = relay.TupleGetItem(func_1431_call(), 0)
call_3710 = relay.TupleGetItem(func_1433_call(), 0)
uop_3713 = relay.acos(uop_3699.astype('float32')) # shape=(4, 7, 14)
func_1887_call = mod.get_global_var('func_1887')
func_1889_call = mutated_mod.get_global_var('func_1889')
call_3726 = relay.TupleGetItem(func_1887_call(), 0)
call_3727 = relay.TupleGetItem(func_1889_call(), 0)
output = relay.Tuple([call_3709,uop_3713,call_3726,])
output2 = relay.Tuple([call_3710,uop_3713,call_3727,])
func_3731 = relay.Function([], output)
mod['func_3731'] = func_3731
mod = relay.transform.InferType()(mod)
mutated_mod['func_3731'] = func_3731
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3731_call = mutated_mod.get_global_var('func_3731')
call_3732 = func_3731_call()
output = call_3732
func_3733 = relay.Function([], output)
mutated_mod['func_3733'] = func_3733
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2937_call = mod.get_global_var('func_2937')
func_2939_call = mutated_mod.get_global_var('func_2939')
call_3743 = relay.TupleGetItem(func_2937_call(), 0)
call_3744 = relay.TupleGetItem(func_2939_call(), 0)
output = call_3743
output2 = call_3744
func_3746 = relay.Function([], output)
mod['func_3746'] = func_3746
mod = relay.transform.InferType()(mod)
mutated_mod['func_3746'] = func_3746
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3746_call = mutated_mod.get_global_var('func_3746')
call_3747 = func_3746_call()
output = call_3747
func_3748 = relay.Function([], output)
mutated_mod['func_3748'] = func_3748
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3755 = relay.var("var_3755", dtype = "float64", shape = (6, 15, 2))#candidate|3755|(6, 15, 2)|var|float64
uop_3756 = relay.asin(var_3755.astype('float64')) # shape=(6, 15, 2)
output = uop_3756
output2 = uop_3756
func_3763 = relay.Function([var_3755,], output)
mod['func_3763'] = func_3763
mod = relay.transform.InferType()(mod)
var_3764 = relay.var("var_3764", dtype = "float64", shape = (6, 15, 2))#candidate|3764|(6, 15, 2)|var|float64
output = func_3763(var_3764)
func_3765 = relay.Function([var_3764], output)
mutated_mod['func_3765'] = func_3765
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3170_call = mod.get_global_var('func_3170')
func_3171_call = mutated_mod.get_global_var('func_3171')
call_3781 = func_3170_call()
call_3782 = func_3170_call()
func_310_call = mod.get_global_var('func_310')
func_313_call = mutated_mod.get_global_var('func_313')
const_3796 = relay.const([[-5],[7],[-4],[10],[8],[8],[-10],[-8],[4],[2],[-8],[-5],[1],[-2],[5],[1],[4],[-7],[7],[-4],[7],[-6],[-5],[-5],[-8],[5],[3],[6],[-9],[3],[6],[-5],[6],[-1],[-7],[7],[-1],[3],[9],[-4],[-7],[1],[-8],[-4],[-7],[2],[-4],[6],[-7],[2],[-5],[10],[-2],[-9],[2],[-10],[-4],[-9],[-7],[-9],[1],[-10],[8],[-3],[-4],[-9],[-4],[5],[1],[-8],[9],[2],[-8],[6],[-3],[2],[8],[-6],[-9],[-9],[6],[3],[6],[-5],[-2],[-2],[1],[-4],[4],[-6],[7],[-2],[9],[1],[-9],[-2],[10],[-4],[-1],[-5],[-3],[4],[2],[3],[-10],[-4],[7],[1],[-6],[-4],[3],[-1],[-9],[-9],[-3],[5],[-3],[2],[-9],[-3],[3],[5],[7],[-6],[10],[-9],[7],[-6],[-4],[-9],[3],[-5],[-5],[4],[-1],[2],[-8],[6],[4],[-6],[3],[7],[-5],[6],[-2],[-8],[-1],[3],[-9],[9],[-6],[4],[1],[-9],[3],[9],[-3],[5],[3],[-7],[8],[-2],[-8],[4],[-4],[7],[-7],[3],[-2],[-3],[10],[-10],[2],[10],[9],[-2],[5],[-8],[9],[-2],[7],[2],[-2],[-2],[-9],[-1],[8],[-3],[7],[6],[3],[4],[2],[-10],[-6],[-5],[-2],[8],[5],[-10],[6],[-5],[-3],[5],[-4],[-7],[-10],[2],[7],[-4],[-4],[7],[-9],[-10],[7],[-1],[1],[9],[6],[5],[4],[-4],[5],[8]], dtype = "int16")#candidate|3796|(224, 1)|const|int16
call_3795 = relay.TupleGetItem(func_310_call(relay.reshape(const_3796.astype('int16'), [14, 8, 2]), relay.reshape(const_3796.astype('int16'), [14, 8, 2]), ), 1)
call_3797 = relay.TupleGetItem(func_313_call(relay.reshape(const_3796.astype('int16'), [14, 8, 2]), relay.reshape(const_3796.astype('int16'), [14, 8, 2]), ), 1)
func_2830_call = mod.get_global_var('func_2830')
func_2831_call = mutated_mod.get_global_var('func_2831')
call_3807 = relay.TupleGetItem(func_2830_call(), 0)
call_3808 = relay.TupleGetItem(func_2831_call(), 0)
func_1111_call = mod.get_global_var('func_1111')
func_1113_call = mutated_mod.get_global_var('func_1113')
call_3825 = relay.TupleGetItem(func_1111_call(), 1)
call_3826 = relay.TupleGetItem(func_1113_call(), 1)
output = relay.Tuple([call_3781,call_3795,const_3796,call_3807,call_3825,])
output2 = relay.Tuple([call_3782,call_3797,const_3796,call_3808,call_3826,])
func_3827 = relay.Function([], output)
mod['func_3827'] = func_3827
mod = relay.transform.InferType()(mod)
mutated_mod['func_3827'] = func_3827
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3827_call = mutated_mod.get_global_var('func_3827')
call_3828 = func_3827_call()
output = call_3828
func_3829 = relay.Function([], output)
mutated_mod['func_3829'] = func_3829
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3830 = relay.var("var_3830", dtype = "float64", shape = (6, 16, 6))#candidate|3830|(6, 16, 6)|var|float64
uop_3831 = relay.log2(var_3830.astype('float64')) # shape=(6, 16, 6)
func_2630_call = mod.get_global_var('func_2630')
func_2634_call = mutated_mod.get_global_var('func_2634')
const_3860 = relay.const([[5.390619,-7.722743,7.495505,-7.858636,1.788312,-6.880150,-8.571447,6.935606,-0.019101,8.008548,-6.164843,3.919953,3.076798,6.533100,-8.363353,-9.400984,1.650367,-9.771922,-2.301085,6.605851,-3.026064,2.499482,-4.842088,6.577561,1.243297,-2.249335,-9.050370,6.270072,-0.453443,-3.180973,4.570320,-4.674942,5.621280,1.835676,0.022105,5.625499,8.239966,-4.439172,7.596819,-7.222013,-0.512715,4.257015,-6.745520,-5.089347,4.607205,-1.215826,5.299314,1.379483,3.287944,1.421883,1.528277,-1.415222,1.579800,-2.756413,-5.772976,-7.477010,9.518370,3.027175,-2.225175,-4.098599,-1.831626,-7.826077,5.005949,-5.148294,-2.988673,3.106169,6.783585,-3.657459,0.356626,4.314884,3.346039,-0.253639,2.680025,7.872680,-4.533783,8.208042,-0.106726,-0.365383,-4.921893,-1.618323,-6.674204,-9.798133,3.015446,3.295098,-8.136004,-7.936185,-7.207431,-4.320963,-3.571524,1.798118,-0.265549,-0.900994,-3.137173,-0.216748,3.494642,5.595986,1.226158,1.625207,7.223956,9.490265,-2.271394,6.841707,-2.425469,-5.530209,1.442083,2.255312,5.907155,-1.203621,5.709396,-1.631911,9.808950,-2.323860,7.007134,9.010697,-3.903517,-3.169301,-8.047498,4.760115,-7.544544,-9.306689,3.384095,5.335720,2.149161,-6.316699,-6.364176,2.874368,6.482880,-5.406763,-1.838268,7.941461,-1.034892,7.422141,7.877020,-5.700572,-1.165853,-2.001985,-4.155520,-5.637110,4.830121,-6.647680,5.145239,-2.925473,-5.120715,-7.817127,-8.913413,6.799548,9.415304,-9.746298,-3.331176,-9.622313,8.957498,-5.056130,-3.714637,6.747795,-7.488130,-9.555758,3.201889,-1.942058,5.925625,-9.739984,-0.495220,9.727983,-7.318174,-5.870840,-4.631379,-6.788175,4.130594,1.230280,9.302896,-7.323742,0.646536,-0.142904,8.157261,-5.984899,1.636633,-4.001681,-8.073190,8.006264,8.028134,4.996906,4.413234,2.336941,5.531934,-8.842598,7.272561,-4.069681,3.249972,-9.111104,4.728143,-7.934285,1.249989,-4.049323,-5.666567,9.198705,1.672945,1.200663,-5.895215,-0.092036,0.243755,-4.923155,9.562715,2.518275,1.267181,9.662192,-9.113969,4.570985,-6.807150,-9.714031,-1.577585,2.872761,-0.383699,-7.066811,2.097144,-2.998443,7.719838,-6.753275,6.593442,-4.597829,4.936098,0.903341,5.299685,2.426480,-6.857188,-2.370333,9.067767,4.744576,-2.136579,-9.367426,-0.373451,-4.443089,-8.991301,-6.087160,5.742329,-5.419938,-1.350684,-4.558681,0.589465,2.513181,9.755701,-8.058881]], dtype = "float32")#candidate|3860|(1, 240)|const|float32
const_3861 = relay.const([4.104791,-9.779670,-9.543680,0.609775,4.051278,1.746591,-5.592808,5.645234,3.036436,-5.033677,1.008866,1.027913,7.257660,-8.347955,4.495654,-9.540932,5.491946,-5.946802,-8.430052,-0.030057,7.014320,-2.921871,-2.762789,-4.478653,1.511602,-6.920101,-1.128650,-2.377128,0.662080,3.908399,-6.868354,6.449654,-2.721830,6.562651,1.271386,-1.972218,0.839385,6.032582,-4.872063,-3.624507,-5.968475,-3.555978,-8.596536,2.563903,0.551540,-4.022149,-8.764681,-8.456255,9.104616,8.121051,5.689761,6.431848,-4.627095,-6.076768,-7.123036,6.555551,0.099901,1.464372,-7.697579,5.233829,3.127317,8.875884,7.842016,-6.992195,9.795381,-1.385391,1.501420,-8.458815,-7.706994,-5.799465,5.005031,3.535774,-8.482853,-7.287109,2.026799,-8.683697,0.655139,6.154000,1.340677,4.085342,6.018307,-8.378922,4.917477,5.650544,8.127075,-1.229989,2.073141,-1.940954,-7.987688,-2.727196,-9.952390,2.544800,-2.118186,1.954109,-8.202113,-4.912076,-6.587575,9.542858,5.116811,7.910611,-9.695369,2.356342,2.917231,8.539960,-0.515247,-5.815776,3.832665,-4.961151,-7.063088,6.328997,-1.935667,-6.508544,-9.676442,-9.186121,-6.825718,3.532643,9.994622,-1.345164,-2.889264,2.634316,1.670675,3.149546,3.741916,-1.825732,6.774594,-1.438741,-2.381770,-0.892741,-3.975098,-1.091603,-5.681111,-7.071687,9.981119,5.298926,-4.673503,-2.687783,-6.311945,-5.280717,-5.139518,6.339363,3.302830,5.830160,-9.820636,-8.956841,9.684171,-1.853876,-2.474582,6.530775,6.298060,2.835454,2.850147,-3.435887,-9.558568,1.613045,4.781246,-3.369658,3.893904,-3.929800,-1.967716,-9.638445,-4.172620,5.600647,5.177597,-8.567093,9.990170,8.632275,1.928419,-7.966202,-0.383815,-3.757573,-2.053441,-6.646518,4.406450,-9.333251,-9.262060,5.240203,6.839072,0.798069,4.229798,1.369229,-1.266555,-5.958859,-7.472476,0.355141,-9.984397,1.284074,-4.656930,-5.568391,-6.796720,2.249090,-5.059402,5.716785,-9.416776,-8.801527,-9.566278,-1.967272,-4.237491,6.858663,-3.916049,-1.565461,-8.143949,3.239272,4.345911,-4.867050,-2.914961,-0.133678,-7.835124,-7.772809,4.187513,3.489516,9.626973,-9.167528,-0.135443,-9.047561,-2.584686,9.024177,-3.345302,6.759702,5.181854,-7.192885,-7.269829,-9.499814,-4.885456,6.199582,4.879036,-5.011713,-4.860629,9.532856,-2.623025,4.244705,-3.522542,5.973250,-3.135983,-6.981494,3.092568,2.436376,-9.969583,-7.787334,2.611331,-2.616325,-7.140175,1.604073,1.795550,9.578493,-1.116561,-6.215097,-7.362723,-7.063830,-3.145059,-6.024134,7.860121,8.525030,1.083858,-6.604671,4.171608,4.961914,0.645450,7.376121,4.953060,-3.468187,9.498143,-2.819765,9.309609,-7.276346,-4.846912,2.285192,7.804538,3.309900,-8.882511,2.977447,-2.042115,-9.090971,5.233895,-4.833894,-2.452305,-8.729580,8.697011,7.303096,4.715905,-9.899423,-7.470257,4.839617,2.735704,-5.247360,0.703832,6.351369,1.755049,8.434303,3.614670,6.806846,6.981281,-0.933601,6.722538,1.188196,0.837033,-5.630000,4.033430,4.567749,-4.098910,-2.982280,7.685995,6.839288,7.402971,3.725598,-7.212277,6.763497,6.425294,-6.517269,9.298708,3.150995,4.574447,9.687047,-9.155948,0.573972,-4.194999,-5.170936,-8.896625,-2.401336,-6.386319,-1.203124,2.465067,-7.856570,9.130186,4.219264,-7.470122,-9.921444,-2.045264,-4.153525,-3.895891,0.996212,-0.954932,6.949440,8.249726,-1.454364,5.092716,-2.158685,-5.568146,7.597603,4.252168,0.202080,-0.890793,6.042779,8.865124,7.625080,-8.143318,-5.389944,-5.844898,3.369918,-8.789265,8.632843,-4.954170,-6.897772,3.455529,0.537551,-1.218562,-1.756858,-1.037963,9.870777,-0.991809,6.098579,0.818575,3.239126,9.710327,4.185469,-4.195106,-7.077319,-8.786179,-0.737062,-0.299548,-3.983896,-2.878374,3.222149,-0.979451,-7.125355,9.112397,7.317666,0.212199,-1.669884,8.504121,-5.346605,4.471106,0.842330,3.094690,0.198693,6.852048,-4.010656,-1.676453,-1.750216,-0.753306,8.943792,-2.117577,-4.886417,4.685600,4.761844,-5.435184,8.114230,-9.063841,7.277457,-8.129637,7.080100,-5.876066,5.693020,-9.664778,-1.097824,-7.360407,-5.557532,-2.809999,-0.379658,-0.860579,4.840099,-3.000718,-5.119272,4.290600,-5.043536,-8.379184,7.398679,-2.068282,0.755784,-2.823175,1.644650,-1.694259,1.247674,4.436168,-3.179142,5.493855,-8.069261,-8.459483,-5.470829,4.238760,3.667355,1.555863,-8.711312,2.816410,-0.779717,6.981183,-4.489582,3.662161,5.535734,-8.573059,-4.802531,2.068821,0.576698,8.035681,3.517260,-8.431768,-4.982374,7.608805,7.411710,9.102040,-9.544050,-7.026987,-8.424978,-9.428564,-5.952610,1.636284,4.001930,3.326696,5.072025,-3.352403,1.431421,0.757952,-0.944858,9.898921,-2.154580,0.144801,6.766478,6.335773,-8.958278,9.015423,-8.382288,2.967275,3.401768,-9.832644,-9.669781,1.789812,-0.748429,8.249963,6.822994,-1.223576,1.698690,-8.100858,8.839056,-8.440451,-4.882800,-8.784307,5.651974,-7.500671,3.877853,1.352367,7.319999,4.663906,8.368306,0.464065,9.164449,-7.097848,7.383047,-9.942844,4.954286,-8.628549,-2.327426,-6.840712,9.020102,5.379929,-1.923615,-8.448945,6.410912,0.735734,-1.074121,-5.251139,-1.095490,3.238730,3.661794,3.046261,-4.578426,-9.217533,-6.954360,-9.300946,1.462299,-5.120632,-7.881782,-9.694766,0.640657,5.362106,-2.075897,1.493027,-6.031946,-9.731222,-9.691915,-7.756145,-7.734776,-4.038849,-2.909280,-4.454640,-6.471164,9.811801,6.596752,-7.874616,5.427388,-4.018352,0.391997,-5.279677,-1.035643,-6.364339,-9.514894,-3.993319,2.975618,-8.402998,3.363034,-7.110712,6.564682,4.510512,4.281042,8.591334,6.254733,-8.488590,-3.137219,-7.315286,7.213450,4.558219,-2.537406,-8.074004,-5.406337,2.450898,5.080895,9.632891,6.664287,7.813999,5.543437,6.109718,9.002117,5.445866,-5.003557,-7.142810,-7.268679,-8.228161,6.852275,1.168008,4.306612,-7.012840,-4.094358,7.667309,-5.906550,-4.969125,-3.664178,-5.591968,1.003288,9.790372,0.623128,8.445619,0.359201,-7.869499,2.379208,3.250631,-6.343519,3.319865,0.879310,-1.152044,-6.513139,3.577352,-3.937771,-0.703858,-0.638806,-0.384529,1.425597,8.201946,7.338296,-5.965373,4.101994,2.003582,3.905423,-9.712619,0.594869,-0.667202,0.423098,-7.459276,6.625772,8.397549,-2.397324,3.009202,-7.481621,5.697586,5.787131,-1.036094,5.813874,-9.076845,-6.888460,3.396305,-7.130496,7.639773,-1.315750,7.916686,-0.368967,3.059188,-4.222990,2.494796,0.547058,-0.370159,-4.964386,-6.775659,-6.813085,-5.618577,3.067566,3.875922,7.017634,-5.527337,-9.466314,0.894199,-6.169656,-4.172448,3.621223,1.886845,-6.986498,5.235349,-5.973902,-6.089392,8.238977,-0.020359,-7.412312,-2.829802,-4.701736,2.130673,-6.839133,-4.898197,1.828982,-1.416831,-1.595429,-4.893077,9.336421,5.504176,4.269936,5.510177,-1.161729,3.613183,8.934388,-3.900937,-3.995787,-4.603074,-2.410568,-3.529343,1.005302,-1.628716,-4.530494,-8.253225,1.996924,-4.571635,4.357260,8.875643,5.572601,7.510739,-6.731767,-6.012539,8.692081,4.662492,6.540716,-0.209254,-3.732795,-9.082121,2.461987,7.495649,-2.263020,1.822872,2.054765,5.458103,8.854117,4.355961,-3.265421,2.622228,-8.254459,0.711912,-7.101286,4.384335,8.829794,9.933900,-5.224389,9.434156,-7.299890,9.344391,5.505861,-6.137041,3.129785,-0.723628,-7.155267,8.774627,-6.736636,-1.117716,-3.340877,-4.519663,-6.577174,-0.138869,-7.826244,4.667057,-1.991101,-5.599622,-5.709260,8.486635,-0.660173,5.276157,5.996653,7.031105,-2.107354,-1.378538,4.917484,-1.912540,-0.361924,2.253933,-7.337942,-1.724279,6.910233,-9.516930,5.089365,8.086876,4.950750,-4.489387,6.617837,-0.801131,-0.692314,0.368202,5.655125,4.527763,-7.517518,-2.698474,0.315999,-1.860449,3.876428,-9.977317,-1.068470,-4.819967,0.558359,-2.904570,8.523574,-1.994371,6.314476,4.787915,5.946021,-8.534928,1.601686,-7.836874,8.583080,8.179139,2.425380,-9.350108,4.564101,9.280687,5.846964,-3.757762,-6.561348,-2.715387,-4.851662,1.856943,-7.858505,6.858077,-0.658641,2.061039,-4.074800,8.625436,-4.199636,9.995637,-8.677870,-4.979081,-5.578845,-3.574510,1.305112,-2.894059,0.278233,3.893589,-4.040000,6.475717,-5.076076,-2.034436,-4.899255,-7.525691,8.850385,-0.500797,-2.279217,-7.041300,5.524964,-6.455490,5.035355,-3.048819,-2.424432,6.284246,1.280804,1.144647,1.468871,-5.579135,6.568998,-6.948952,9.070021,3.520344,-3.530924,-4.924096,-5.021649,-6.677085,-8.521804,-8.726213,9.849542,8.079682,8.828851,-7.699307,-4.484285,-4.521238,-7.911344,6.290409,8.879224,9.151129,-0.871905,-2.806485,-9.909682,-8.477543,6.302196,7.931862,-2.737283,3.084814,-8.989376,-6.653069,3.301305,-6.424581,-0.913307,2.174853,-8.267375,5.129346,-3.508514,-9.235406,-8.423453,0.664269,3.207851,-4.635906,7.887949,8.460301,-5.851967,3.963920,-7.863596,8.523201,0.172516,6.109182,0.071879,-1.310219,-9.402631,8.173702,9.655579,-7.693185,5.419233,6.744135,3.175797,-4.887950,-4.603890,5.554356,-1.776096,7.396330,6.931810,1.281987,7.527947,-0.973260,-0.906736,2.251766,5.440377,8.681618,-1.427554,4.532534,1.107774,9.109833,3.297573,0.608954,0.726396,6.284947,7.137254,-5.835634,-8.999519,-4.955994,-4.781514,3.939083,7.010586,-2.473514,1.921542,3.225232,-0.611747,-2.165786,0.806691,1.708259,7.722633,8.811784,9.858949,0.987905,3.327394,3.115170,2.080637,4.809360,8.750397,2.604802,3.860153,1.336876,5.498435,-8.696611,4.276443,-8.148838,-3.068266,7.232750,9.090321,-6.667950,-1.222828,-7.865784,-6.236726,8.676364,0.338041,-0.007959,6.473431,-4.138649,2.184876,-4.626141,-6.331244,6.013745,-6.614434,6.058186,-1.109123,-3.402218,3.863493,-3.843644,-0.611669,9.818912,-1.706344,3.255034,0.089365,0.460971,-5.976181,-2.848897,-9.560218,0.029772,-5.763584,-9.047545,-4.733779,-0.383756,6.378762,6.483826,-3.752344,3.534797,-4.467345,-3.552974,0.226702,3.659347,7.075355,-6.938239,5.544715,3.547751,-5.910594,-1.435338,-4.733643,-6.796308,-3.584076,-0.635232,-9.014845,9.699363,-4.792462,0.771882,4.146140,3.968328,-2.684665,-6.072557,5.622702,7.173605,4.586519,9.102114,-2.167623,4.905093,1.428133,1.746261,-0.149912,8.316835,5.723441,-2.680808,5.950839,8.842664,5.478211,9.658263,0.374614,8.926275,1.109592,2.647711,-5.096932,-2.625390,-4.555021,-1.703241,-6.132626,4.579193,-3.915747,6.397522,4.213435,1.540244,-1.921579,0.342091,6.321188,2.086812,3.858621,7.113788,3.679203,-9.568058,1.579597,-3.797765,-3.720080,3.040390,4.714749,-6.187604,-0.685372,-3.326102,-3.690334,-4.653876,-3.605576,-7.633253,-4.143602,5.848620,2.365419,2.996804,-5.152912,0.614460,6.535431,6.882341,8.578207,2.298615,1.017104,-2.302900,-3.882768,-3.754796,-1.462066,-6.251780,-9.940851,8.095573,1.290132,-4.108275,-2.950321,-6.963697,5.387929,2.804281,5.758664,-9.194501,-2.509550,5.313079,4.554544,2.929685,-3.963503,9.867366,3.476052,7.380419,3.374480,3.261914,9.279994,-0.242420,7.999484,8.570988,-8.109736,-7.745744,-0.971676,8.976594,6.313964,-6.592941,6.106494,-4.785586,-4.064591,2.878279,4.055551,5.702575,5.339312,9.322662,6.294516,5.938188,-5.750417,-7.696940,7.056155,4.693245,-1.219120,2.961898,6.225387,3.406867,2.834253,1.165794,3.852934,6.805579,-3.760024,4.698637,8.896011,-6.219473,-1.107433,-4.946761,-6.183290,-0.591715,9.647261,-3.612931,6.791799,-0.687699,1.118783,-3.731961,2.003800,9.633459,-8.141590,0.633302,6.658403,-7.952965,1.122514,-9.923935,-7.806664,-2.194508,-9.557495,-1.103425,-9.520338,-2.731833,-5.568905,-8.759786,-4.867977,-1.550869,3.594606,-8.759505,2.106047,-4.105459,0.037036,-3.648329,-8.609896,-7.608268,-1.194614,-2.496858,8.828902,-2.516742,4.979765,0.770099,-3.114136,0.729603,-5.950501,-0.512734,-0.100394,-1.849700,9.143173,4.133830,3.454322,-7.582271,-6.960393,1.702400,7.773738,3.799882,-7.295405,-5.395428,-2.319559,-2.148977,7.522392,-1.873921,-0.266090,-6.557973,-7.053012,1.852786,1.950639,6.702804,-7.281629,0.811622,-8.328116,9.423888,-1.300441,2.847135,2.282471,8.724629,-9.446737,-2.798662,-1.033937,9.766835,-5.493370,-1.134990,-0.767676,3.499574,-0.801632,6.033603,4.813729,-5.547174,-5.575633,0.422688,3.714127,3.510986,-8.106450,-8.178766,-6.263398,3.831929,-3.728747,-5.272040,9.657285,-8.765448,-4.766597,-3.092260,-3.389037,0.553635,-5.592874,-3.865093,4.933212,-5.983627,9.116610,-4.462149,-1.860505,-0.233745,-0.331457,6.490645,-5.746697,9.767896,9.568373,-3.158154,-5.078217,5.537218,-1.070410,3.819963,7.212638,-1.697630,-4.655929,-9.455142,-2.065482,-2.173396,5.264876,1.013137,2.753258,-7.996033,-2.979831,-1.085388,5.239181,-6.391997,7.919002,0.744864,6.704703,0.246555,6.869917,-5.573035,-5.655274,-4.528043,-5.120353,9.117804,-3.566579,3.909963,-3.181541,-0.143943,3.559098,-3.293840,-7.852138,9.250665,8.744574,6.045019,-7.222149,-1.985882,-1.855728,-2.646127,-8.439910,-9.319234,7.216471,-6.107460,0.892802,6.094880,6.465685,0.587490,-8.034821,0.528212,5.721183,-3.137194,-5.040049,-8.579160,6.233263,1.906651,-5.855110,-9.841963,8.607319,-0.588080,8.878635,8.996251,3.280025,-1.545808,9.678102,4.089555,0.966680,-9.358910,-3.489603,-1.615312,3.931048,-9.790165,-3.340671,-6.861108,3.484214,-9.710696,-6.730229,2.105898,0.491229,8.647459,9.811826,3.446262,-6.784117,-6.410732,6.238549,-6.602325,-8.761405,-9.747065,-9.336720,4.792795,5.253082,-1.337329,5.880208,7.733954,-4.601576,-4.878455,9.976580,-3.814631,6.603605,7.761776,2.171015,-8.953861,-2.247465,-8.359311,7.718071,-0.531594,-5.085099,-0.546364,-6.724066,-8.774133,2.821682,-8.131127,-6.285392,-7.893990,7.753828,-3.908117,-9.857323,-2.748141,-2.476817,9.407100,-8.182559,-6.569893,-2.029872,0.434758,9.837901,5.870862,-5.495788,7.627461,-3.068453,-2.339958,3.383110,6.662922,7.461144,-5.264251,-7.665939,4.902095,5.142647,6.075792,0.810275,-0.731011,-0.891143,4.879841,8.417228,-7.403454,-4.486295,6.414216,6.407336,6.629916,1.060940,-9.408436,2.009665,-5.510203,-0.525414,0.925807,-2.400175,-4.218961,9.836510,7.535611,-6.911229,0.885193,5.518071,9.017960,2.428424,8.649333,-5.281903,-3.233324,-8.663037,2.936652,9.029717,-6.254393,-9.057409,-8.941058,-0.751033,0.307152,3.803362,7.209567,3.673814,-1.145613,-7.017233,3.604175,2.180565,-0.833592,9.077856,-3.306197,-4.989379,-1.061986,5.742908,0.469177,5.602346,0.793893,9.132090,1.379077,3.706641,6.055931,4.500884,-6.917129,-3.761447,-8.265093,-6.285778,-8.515810,6.061007,-9.640940,-4.012274,-6.240983,-9.396703,-0.871708,0.522753,-6.097528,2.514258,-3.506558,0.659495,-4.679209,6.596295,0.086872,6.791326,1.746035,-3.431118,-6.611948,9.867061,-9.963376,-3.795622,2.168568,-1.868260,-7.788653,3.969436,2.433906,5.011003,-0.774380,-8.891536,7.023689,-0.984833,4.882851,-8.920834,3.784230,-4.049493,7.760242,-7.769561,-7.127779,-9.941465,1.081744,2.390471,-2.245606,-7.738865,-1.058188,-2.854049,-9.307325,-1.380293,-3.548100,4.570196,-6.746896,6.311237,-0.997773,-6.802889,4.403656,9.173873,-6.306210,6.079687,-3.223135,3.270795,-8.688719,-4.111504,-0.684410,-0.613975,2.203243,-5.265872,-2.951176,7.086477,-4.977153,7.004727,-3.016201,-4.046884,-0.004971,-4.937903,2.835072,4.409453,3.703598,-8.193420,-4.995189,-6.039563,1.899761,7.035062,0.802607,-3.332425,-6.139234,2.433689,2.095818,5.378683,7.400268,-9.828979,9.795545,-1.272465,8.251671,7.572972,-4.934035,2.462687,-9.482889,0.095630,9.411035,6.275084,3.663012,-8.965263,-3.543426,-4.588922,0.033525,-9.396255,-8.191612,-0.908584,-7.036425,2.206218,5.372082,-6.613199,3.982285,6.073681,6.834434,-2.543161,3.472466,6.722846,-5.729241,1.706792,-6.047792,6.876711,4.765246,-3.820700,0.729941,-3.301741,-9.038364,-0.701829,-6.246170,-8.564996,2.359179,-7.952062,-0.342803,-2.092279,-3.876990,-0.853102,-2.530774,6.352286,2.129284,5.868802,-9.643514,-6.674754,-6.308184,-0.360876,-2.524823,-5.922084,-0.923504,7.481226,4.500692,0.734006,1.978956,-2.913383,3.177653,5.834980,-3.946056,6.825552,-6.779851,2.786073,1.056818,9.908861,5.864497,1.612148,0.988486,-2.994885,-5.457055,-3.096685,4.053152,2.777177,-9.717212,-4.619501,9.149163,0.448770,8.102091,-7.731709,9.272176,-2.712362,-4.281564,-1.103450,-0.139821,-1.322917,-4.851199,0.079434,9.559303,0.453123,8.419743,-8.135619,7.156525,7.643568,6.115160,1.618371,6.242288,8.633975,8.606842,6.423519,-8.603540,9.343108,-0.065535,-1.488830,9.005824,-7.912324,4.160224,-4.654219,-5.537441,3.229954,3.373553,-5.202701,7.365083,-7.756584,3.237115,-9.016811,9.064249,7.729783,-9.345822,-5.093001,4.228245,4.190358,4.868549,2.888768,3.687026,7.255361,-7.663983,5.155161,6.018721,-5.256849,-2.873790,-0.289596,-2.644887,1.316522,-6.903770,2.991074,-4.266317,-0.031521,-8.197436,-8.628501,2.612269,-6.888672,6.166812,1.533315,-8.196085,-0.871454,-9.106948,-1.126952,-6.782821,-1.564199,9.199369,-2.464495,-3.243350,-3.102703,-2.778198,-4.329345,-7.814135,5.179920,-2.085147,0.504766,9.406484,3.198629,-9.145904,-2.458400,-4.707009,9.887245,-4.353841,0.059830,6.363311,8.601399,-7.162458,4.955339,4.110802,2.422334,5.899716,-2.627218,-1.660166,-1.508740,7.771926,6.333532,1.541589,-2.127045,-4.014624,-4.470272,2.521849,7.718622,0.465818,-0.770683,-4.483322,1.730227,-2.649798,-8.762283,8.700046,-3.326912,7.602650,-8.978134,-6.877444,7.446394,5.630996,-6.562083,6.465648,-6.336550,-4.792747,2.791400,-3.689638,-6.231883,-3.164439,9.880979,-8.788319,1.228998,9.271818,-9.012900,-4.052924,-2.277337,-2.456638,-9.819045,0.567311,-9.744905,7.791231,-6.715121,-7.159324,7.710562,2.413123,5.093433,-3.371922,3.590434,-9.950304,0.497082,7.784458,-7.156512,7.476724,-0.374054,-9.492733,-7.531197,-7.548309,6.510130,-6.348322,-5.526215,-1.901480,4.850800,-1.058918,-6.249802,-4.590145,7.984116,-2.602752,7.117312,-0.377158,-2.821719,9.345483,-9.625134,3.823363,-1.487034,-8.267827,8.742835,-1.799978,9.331441,5.509859,-3.353676,-1.713774,-1.759824], dtype = "float32")#candidate|3861|(1792,)|const|float32
call_3859 = relay.TupleGetItem(func_2630_call(relay.reshape(const_3860.astype('float32'), [2, 15, 8]), relay.reshape(const_3861.astype('float32'), [1792,]), ), 3)
call_3862 = relay.TupleGetItem(func_2634_call(relay.reshape(const_3860.astype('float32'), [2, 15, 8]), relay.reshape(const_3861.astype('float32'), [1792,]), ), 3)
output = relay.Tuple([uop_3831,call_3859,const_3860,const_3861,])
output2 = relay.Tuple([uop_3831,call_3862,const_3860,const_3861,])
func_3865 = relay.Function([var_3830,], output)
mod['func_3865'] = func_3865
mod = relay.transform.InferType()(mod)
var_3866 = relay.var("var_3866", dtype = "float64", shape = (6, 16, 6))#candidate|3866|(6, 16, 6)|var|float64
output = func_3865(var_3866)
func_3867 = relay.Function([var_3866], output)
mutated_mod['func_3867'] = func_3867
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3827_call = mod.get_global_var('func_3827')
func_3829_call = mutated_mod.get_global_var('func_3829')
call_3869 = relay.TupleGetItem(func_3827_call(), 0)
call_3870 = relay.TupleGetItem(func_3829_call(), 0)
func_2337_call = mod.get_global_var('func_2337')
func_2340_call = mutated_mod.get_global_var('func_2340')
var_3878 = relay.var("var_3878", dtype = "float64", shape = (1170,))#candidate|3878|(1170,)|var|float64
var_3879 = relay.var("var_3879", dtype = "float32", shape = (936,))#candidate|3879|(936,)|var|float32
call_3877 = relay.TupleGetItem(func_2337_call(relay.reshape(var_3878.astype('float64'), [1170,]), relay.reshape(var_3879.astype('float32'), [12, 78]), ), 3)
call_3880 = relay.TupleGetItem(func_2340_call(relay.reshape(var_3878.astype('float64'), [1170,]), relay.reshape(var_3879.astype('float32'), [12, 78]), ), 3)
output = relay.Tuple([call_3869,call_3877,var_3878,var_3879,])
output2 = relay.Tuple([call_3870,call_3880,var_3878,var_3879,])
func_3881 = relay.Function([var_3878,var_3879,], output)
mod['func_3881'] = func_3881
mod = relay.transform.InferType()(mod)
var_3882 = relay.var("var_3882", dtype = "float64", shape = (1170,))#candidate|3882|(1170,)|var|float64
var_3883 = relay.var("var_3883", dtype = "float32", shape = (936,))#candidate|3883|(936,)|var|float32
output = func_3881(var_3882,var_3883,)
func_3884 = relay.Function([var_3882,var_3883,], output)
mutated_mod['func_3884'] = func_3884
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1022_call = mod.get_global_var('func_1022')
func_1024_call = mutated_mod.get_global_var('func_1024')
call_3969 = relay.TupleGetItem(func_1022_call(), 0)
call_3970 = relay.TupleGetItem(func_1024_call(), 0)
func_1022_call = mod.get_global_var('func_1022')
func_1024_call = mutated_mod.get_global_var('func_1024')
call_3978 = relay.TupleGetItem(func_1022_call(), 1)
call_3979 = relay.TupleGetItem(func_1024_call(), 1)
func_3865_call = mod.get_global_var('func_3865')
func_3867_call = mutated_mod.get_global_var('func_3867')
const_4014 = relay.const([-6.159355,-0.527674,-1.898323,-7.071487,-9.579215,-8.825115,-2.520598,2.370633,-0.008199,4.016075,-3.996077,7.807336,0.765582,5.487574,-3.319479,9.601326,-6.923558,-5.027140,-6.647045,6.912210,-0.058963,7.136376,4.246002,-4.242010,-1.285561,-8.765416,-1.213871,-9.642072,1.227901,0.046437,1.739176,9.964566,-8.553166,-9.014140,-1.695201,4.710407,-2.136790,-0.419382,0.331936,0.398045,-0.316383,-3.846809,4.262640,-7.691228,1.212551,0.933627,1.012926,-9.805004,-8.232197,-2.470233,-1.680647,-1.062557,-7.755033,-4.292122,4.786647,3.492261,-3.652099,-6.520456,-6.714512,-4.007103,-0.151328,-2.441335,-7.741056,3.721000,3.615510,-8.869481,-2.871931,-5.331941,4.420839,-2.267058,-3.058794,-2.468242,-5.232904,7.575666,-4.862198,-2.845374,4.665900,-6.407927,7.041147,-4.330876,4.157741,-0.954326,3.613851,-3.898545,4.463350,6.093961,-4.846169,-2.899667,8.945533,5.215110,-8.621837,-3.046710,-1.371158,4.067096,9.606512,-7.767952,-8.505230,-4.796006,-2.566732,-4.865685,1.545681,1.186344,-9.933489,-7.389355,2.640311,0.241817,9.373215,5.644673,-3.044932,7.481530,2.275841,-7.830849,-9.382976,1.918419,4.418609,3.190463,-5.628544,-8.126497,-7.672043,-1.068899,-9.020142,0.131985,2.035531,7.710307,-4.303447,6.493194,-5.112450,9.596685,-3.398789,3.370252,1.289295,3.269115,-7.317015,-6.076821,-7.650580,-7.733580,-8.008893,6.704259,7.269047,4.677027,4.624145,8.540447,-7.408209,1.548281,2.124324,-7.828272,7.187731,-5.171269,4.442602,-6.025251,2.246136,-9.508422,3.749082,-0.113935,-0.401665,-2.706546,-4.971938,5.710976,-1.064828,-6.161879,-3.896508,-8.370558,-1.108229,8.266554,2.502534,3.268448,-1.564603,-1.859016,0.927097,-3.369002,-8.430003,-2.226317,-0.754743,7.247979,-3.397351,8.095219,-9.093595,-0.240903,-4.267929,-8.472080,6.996425,9.403567,8.782937,5.176948,-6.459722,-4.154926,-7.678777,6.120945,3.774339,-3.422074,-3.393473,-8.575470,7.066763,4.506695,-9.095367,-0.287471,-8.887859,7.949793,0.155974,-3.314982,2.905313,4.945756,4.721231,-2.154817,8.359208,-1.180639,-2.843958,5.463487,2.663126,-4.415158,-0.626632,-4.583281,-7.475026,6.570122,-7.826854,0.267780,-2.435248,-0.697970,2.112378,-0.179081,3.060726,4.495206,9.511273,9.620265,2.344910,-7.715688,-4.838690,-2.325962,7.173786,4.485163,-0.848475,6.166482,5.834629,-9.929743,-1.969593,2.128460,-9.599161,-9.737953,8.308921,-2.782830,1.180582,4.106594,4.140383,-0.550120,1.687547,6.630467,-7.109217,-2.420792,-8.020315,-5.934820,-7.048854,-1.462034,-2.710921,-3.557457,-5.677330,6.635926,-7.515924,-4.525894,-3.085263,-9.366517,-7.201461,8.842903,-4.226641,-9.168313,4.859488,0.410786,-6.422638,-1.688050,-0.266500,8.746800,5.725974,-9.947163,1.951020,-9.050956,0.302680,9.745879,-9.451195,-5.892904,-5.581107,9.979998,-4.668354,4.567848,-8.518698,8.321746,0.358655,0.452220,5.632020,-3.988481,-3.951376,7.520135,9.482969,1.161171,8.699741,-2.219258,-0.551335,2.886948,-0.663376,-4.034589,-2.688642,-8.296224,-0.412462,9.631579,1.508872,-7.659626,-9.615951,-1.509383,-4.932085,5.307431,2.848391,4.877979,7.952036,-8.218676,-4.514715,-0.093474,8.231048,-9.861214,-3.752363,1.894598,3.892652,-5.687956,7.645573,9.167161,-8.776580,-7.314422,-5.309905,-4.515082,-0.579790,8.013091,5.457329,-6.143214,-3.431245,-6.845572,-1.458074,8.861596,2.415467,4.461246,-0.786176,-9.361212,7.053789,-7.705261,-9.420888,1.450862,-6.295145,7.679818,-3.732247,-1.313788,-9.718724,7.484786,-9.186695,-6.963678,-9.666742,3.912724,-6.294455,-4.166856,-0.067390,9.362818,1.407150,3.353935,-0.951665,8.287820,-1.040681,1.948940,-9.158126,7.630610,8.412885,-1.211874,2.709984,-7.238875,4.681643,4.030107,-8.970977,-8.875696,5.946411,1.580810,2.961095,-5.924399,-8.588562,-7.216925,6.640136,6.897342,-1.792911,-1.283734,0.645816,9.767111,4.938015,-3.029371,-5.846883,6.139619,7.905455,5.151068,2.708752,-4.097309,2.392497,-1.288507,6.554064,-0.235417,4.013964,9.442444,2.556629,6.014537,-0.001464,-1.042155,0.863239,-1.053656,-6.104876,5.942422,-0.022761,8.689548,-0.984138,-8.674354,-7.834854,8.032214,3.839659,-4.691489,-9.516391,-1.608802,-7.441216,2.571881,-7.716207,-8.669663,8.808047,8.415462,5.601148,7.230107,-7.758866,6.702213,-7.258534,6.297043,-7.061235,5.855785,3.052451,0.635272,-5.557785,5.922334,-1.901161,-8.229263,1.943900,8.864138,-5.358065,2.848804,-7.517570,1.533363,6.702807,5.894094,4.420018,-0.291890,-8.684645,-9.738822,-8.062588,7.078329,2.647858,-9.173092,9.458150,2.405431,1.125301,6.686325,-3.619011,-7.243015,4.734323,5.228345,-0.398816,1.768385,4.627429,-6.548483,-2.220927,-2.630445,7.961623,-6.193319,7.903570,-3.628610,-8.381465,-4.623233,4.713762,6.974411,-1.812094,0.888169,-2.060815,2.277633,-4.067220,-4.186460,-8.571565,-8.595688,3.014657,-5.528145,-5.420394,7.211778,-5.476443,2.303284,1.354450,-8.398594,0.556316,-8.983914,8.032704,5.896403,6.929660,-7.052855,9.713368,4.623351,7.548417,7.535334,2.255108,0.071793,-8.505565,2.333452,2.717848,-9.929891,9.910204,-5.820089,-5.423805,-4.752100,6.374002,2.295800,1.712153,-1.888381,6.222359,-6.037869,-8.096717,-1.370158,0.104926,-7.868707,-2.892008,3.807849,-2.156948,-2.441854,-6.026876,-3.169056,9.598560,-5.759802,8.731512,1.439828,-2.659369,9.902518,1.065960,2.230162,0.484678,2.960862,-3.591222,3.626893,8.066110,-9.476871,-0.905245,7.961173,-7.261423,-7.169674,-2.309338,-5.804650,0.260833,-6.190500,-8.654518,7.679538,4.556643,5.822494,-3.278949,-5.694198,-0.462419,3.299336,-4.988301,-9.469974,-3.493597,-2.505082,-4.155027,8.976867,-5.488581,9.460073,3.489680,-7.633244,9.837906,5.604714,-0.028279,4.614405,-2.457205,2.049400,-7.366296,7.547277,-3.617036,1.033441], dtype = "float64")#candidate|4014|(576,)|const|float64
call_4013 = relay.TupleGetItem(func_3865_call(relay.reshape(const_4014.astype('float64'), [6, 16, 6])), 3)
call_4015 = relay.TupleGetItem(func_3867_call(relay.reshape(const_4014.astype('float64'), [6, 16, 6])), 3)
output = relay.Tuple([call_3969,call_3978,call_4013,const_4014,])
output2 = relay.Tuple([call_3970,call_3979,call_4015,const_4014,])
func_4020 = relay.Function([], output)
mod['func_4020'] = func_4020
mod = relay.transform.InferType()(mod)
mutated_mod['func_4020'] = func_4020
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4020_call = mutated_mod.get_global_var('func_4020')
call_4021 = func_4020_call()
output = call_4021
func_4022 = relay.Function([], output)
mutated_mod['func_4022'] = func_4022
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4034 = relay.var("var_4034", dtype = "float32", shape = (2, 11, 1))#candidate|4034|(2, 11, 1)|var|float32
uop_4035 = relay.atanh(var_4034.astype('float32')) # shape=(2, 11, 1)
func_2830_call = mod.get_global_var('func_2830')
func_2831_call = mutated_mod.get_global_var('func_2831')
call_4037 = relay.TupleGetItem(func_2830_call(), 0)
call_4038 = relay.TupleGetItem(func_2831_call(), 0)
uop_4039 = relay.rsqrt(var_4034.astype('float32')) # shape=(2, 11, 1)
func_85_call = mod.get_global_var('func_85')
func_89_call = mutated_mod.get_global_var('func_89')
const_4044 = relay.const([-4,7,-9,1,3,-8,7,-2,7,-1,8,-9,-2,-10,-10,7], dtype = "uint64")#candidate|4044|(16,)|const|uint64
const_4045 = relay.const([-1,-8,-6,8,-9,-4,-3,7,-10,-5,7,7,-2,-2,1,4,6,4,4,8,8,-6,-4,4,10,-6,-7,-4,-10,-8,8,2,-6,5,-10,-3,8,-7,4,8,-1,3,-9,-6,5,-1,8,6,10,5,-8,-6,10,9,-7,8,-3,-5,-9,-3,-7,-7,8,10,-7,-9,3,-1,1,5,-7,5,7,4,10,-10,4,1,-3,1,6,-6,5,10,-7,3,1,6,7,3,9,-6,3,4,-10,7,-3,5,-10,2,-3,1,-3,1,7,9,5,9,-5,-5,8,-3,7,-8,4,-4,7,10,-4,-1,-2,9,8,-7,-4,9,4,-2,-1,-8,10,-1,-9,6,9,6,-8,1,6,-10,-2,-2,-3,7,-5,-7,7,4,9,3,7,-1,6,-2,2,5,-1,10,1,7,2,-3,-4,-7,6,10,9,2,-5,-10,-8,-3,-1,-4,10,-10,-7,-3,9,3,10,-3,-7,6,1,1,2,8,-6,-10,2,-1,3,10,-2,9,8,-2,-9,7,6,-7,1,-6,6,5,3,8,8,10,-3,-5,-3,6,-5,1,-10,-4,2,9,-5,9,-10,6,7,9,6,-8,1,2,6,1,-10,8,4,-3,2,7,-8,-8,-8,4,-3,5,-8,-1,-10,2,-7,3,8,8,-9,1,-7,-4,-8,-1,3,-6,-2,-9,1,-2,4,10,3,-3,5,10,3,-9,4,-3,-5,-10,-5,-9,2,5,-9,7,4,-4,4,-3,8,9,3,9,-10,-6,9,1,7,5,-10,-7,6,5,5,-8,-1,5,8,1,4,-3,3,4,10,7,4,4,5,-2,9,-3,7,-6,1,-5,7,10,1,-1,3,-3,-1,-9,-8,7,10,-10,8,-6,-5,8,10,-1,1,-4,-9,-5,3,9,6,-1,-5,-7,-8,4,5,-3,-9,8,8,6,10,-10,-7,6,-4,-2,-9,4,2,-9,1,2,8,-1,1,-6,1,5,4,1,-8,8,10,5,1,8,7,3,-7,2,4,-10,5,-4,7,-8,8,4,-10,-9,2,7,5,-5,-6,4,-6,-8,-2,-9,-6,3,4,2,-6,-9,10,10,-5,10,3,-3,10,1,4,10,8,5,-1,-8,-10,9,-2,-5,-3,10,3,-6,-7,-5,-6,10,-8,-6,2,10,-10,3,-6,-8,-5,7,-4,-3,10,9,-2,-2,5,-3,-1,-10,2,2,4,-8,-10,9,8,4,-9,-7,-3,-5,-4,-7,3,-5,-3,-2,-9,-5,5,-3,-7,4,10,-9,10,-1,-4,9,-8,-2,-3,5,7,1,8,-9,-10,1,4,-3,5,9,4,9,-6,10,-7,3,9,-10,-7,9,3,7,1,-4,-6,8,-2,-2,9,-10,-9,2,7,2,-2,1,-3,5,-2,10,1,-10,4,3,-3,10,4,-9,-6,4,4,-5,8,8,-6,-10,6,-2,-3,2,8,8,-5,-4,8,1,5,-8,6,5,-6,-1,-6,-1,-5,-4,8,-6,9,-6,-8,-10,4,8,-3,2,-1,-10,-5,7,-7,-3,-5,7,-9,-2,9,9,-9,3,-3,9,-9,10,-3,4,-8,-4,7,6,6,2,9,9,2,9,-9,7,9,-2,4,4,-4,-2,2,9,-5,3,4,-3,-6,-2,-1,2,8,-4,-1,-2,-9,-8,-4,10,7,5,-7,-10,9,7,10,-1,5,-9,-4,-1,-7,5,-5,-3,10,6,6,-10,5,-6,9,3,1,-10,7,9,10,7,8,-8,8,6,9,9,-5,10,10,-8,7,7,9,2,-9,7,-9,-4,8,-2,-5,-10,6,4,3,-1,10,-8,6,-10,-9,2,1,-6,7,-7,-1,-5,-7,4,-1,-2,-5,-1,10,-5,10,6,3,-2,2,-3,6,-9,-4,-3,-10,-7,-7,5,4,6,-7,-7,6,9,1,-2,-9,-10,-6,10,-1,-2,-9,-6,8,5,4,-4,-3,10,-6,-1,-1,-9,-7,4,8,-6,2,-8,-2,6,6,8,-4,3,9,4,-6,-9,-2,1,-9,-6,9,-3,-8,-8,-10,6,-5,3,-3,-3,10,4,-5,3,-1,8,3,-10,-2,-7,-7,6,4,-3,8,7,-10,-3,5,-10,5,6,-9,2,7,4,4,5,3,4,5,-1,-10,9,-10,-2,9,4,-4,-1,-6,6,-7,8,10,1,-1,8,9,-9,-8,-4,8,-5,4,7,1,10,4,-9,-9,-10,5,4,-5,2,5,-10,-6,9,-1,2,10,1,1,10,10,-2,8,-10,-10,-8,-10,10,-3,8,3,-7,5,9,-8,7,7,-7,-5,9,9,8,6,-7,-7,5,6,-5,2,6,10,-9,3,3,-3,1,10,1,-9,4,-3,8,-3,-10,-4,6,-2,-3,1,2,8,5,-5,3,3,2,10,-5,10,9,-4,9,10,-2,10,6,-7,8,-7,8,10,-6,-7,-3,-6,2,-5,-7,-3,-7,-3,10,6,-4,9,-3,-1,7,-9,6,3,9,-8,-5,5,5,9,-10,3,5,5,3,6,3,-2,-3,8,5,8,9,3,3,-9,-6,6,-8,-1,6,-1,-5,9,-8,-9,5,2,-3,9,-9,-9,-5,-8,6,2,-7,1,5,-9,9,3,-7,1,10,-8,-10,-3,3,-8,1,3,4,-1,5,10,-9,-1,10,8,4,8,-6,1,-4,-10,-8,6,-8,10,6,9,-5,-4,4,4,10,2,-4,-5,9,-7,10,-10,10,-2,-10,-4,3,9,-9,-3,-8,3,7,2,5,6,3,-2,4,9,-6,10,-10,7,5,-6,-7,2,-9,2,6,-9,-4,1,-6,-3,-5,4,-3,5,-2,-8,2,-3,-6,6,4,10,10,-5,6,-1,-10,-8,-5,-10,6,6,-8,10,7,-8,5,9,3,-2,-4,10,7,9,-1,-2,7,-6,8,-10,3,-8,-10,-4,2,10,8,-2,-9,10,9,6,10,2,-9,-5,-4,3,-1,-5,-2,1,-8,-6,5,7,-5,-2,7,5,6,-8,-4,-4,-7,-9,7,-8,2,-2,-7,-1,-3,9,6,-8,5,-5,-7,3,-10,-3,-2,-2,3,3,2,-6,8,-7,-9,-9,10,-3,-4,3,9,-1,-4,-9,-8,9,-8,-8,-10,3,9,6,-5,-8,-5,3,4,-9,8,7,10,-9,-1,-5,2,-2,9,10,-9,10,-9,10,-8,2,-6,-3,7,3,9,-10,-7,1,2,-9,-2,-7,-2,4,5,-6,-7,5,1,1,-9,10,-5,1,4,2,-9,-7,-5,2,7,1,7,7,8,-9,-10,5,9,7,-6,-1,6,-5,-9,3,5,1,3,-1,5,-10,-10,-2,-8,4,8,8,-3,8,-10,-9,4,8,-7,8,10,9,-2,-8,-2,4,-8,-5,-5,-3,4,3,-2,-5,1,-1,3,2,-10,6,5,-1,4,3,1,-6,8,2,10,8,-3,4,-8,-5,-9,2,3,-4,-1,6,-5,-6,-2,4,6,-5,1,-8,8,-9,4,-8,7,2,10,-2,10,9,-4,6,-7,8,-10,8,10,4,1,9,-5,9,-10,-2,7,-2,6,-3,-9,-2,-7,-9,-10,-9,5,2,-10,5,10,-10,-1,-1,2,-10,5,2,-4,1,1,8,1,-8,-1,-10,-2,-1,5,-10,6,-8,1,4,-8,-1,8,-7,-9,7,9,10,-10,-2,3,-1,-1,-9,-6,10,-2,5,2,7,10,-1,5,-8,-2,-9,-4,3,7,10,7,-9,2,-8,-9,-6,-3,6,8,-3,8,-5,-10,8,10,-3,9,-7,10,-7,-4,-8,10,5,9,10,9,10,4,9,5,5,5,-6,1,2,6,2,-3,6,6,1,-1,-5,6,-1,5,8,-9,-5,-8,4,8,-2,5,-4,3,-8,-6,-1,6,-7,9,-3,8,7,-6,1,-8,-6,10,8,5,10,-9,-6,-5,8,-6,10,-10,3,-9,9,-7,4,4,3,-6,-3,-5,9,-1,4,9,-3,-3,4,-9,1,7,5,7,-1,2,9,-2,-9,-9,-10,7,7,8,-9,-4,4,8,-3,1,2,-7,-3,3,-1,5,1,5,-9,1,9,-10,9,6,5,-5,1,7,-2,-5,3,4,-9,1,-1,8,2,-7,-6,-2,-8,-9,10,4,6,-6,-9,-2,9,-8,10,2,-4,10,2,4,-10,1,-8,-1,-2,5,7,-4,3,-9,-10,2,2,5,-5,-3,1,-4,-7,-3,-3,-4,6,-9,10,1,-10,3,4,-5,-8,-1,-10,-7,-1,8,9,-4,-8,5,2,-5,6,6,7,-8,-8,1,5,7,-8,-9,6,3,8,-1,3,-5,-5,10,2,4,-10,-10,-5,-2,9,-2,-5,-9,5,3,8,-7,-9,-3,-9,-3,-4,-4,7,3,-7,2,-2,-7,1,-4,-10,-1,10,-1,3,-7,-4,-7,9,8,-3,-10,-1,1,-8,10,8,8,5,8,-3,6,-8,-10,-1,2,9,10,-8,-2,7,-6,-5,-4,6,-8,-9,-8,-5,1,-9,9,-5,-1,-9,-1,7,3,4,10,-1,8,-5,8,-9,6,-4,-9,6,-1,-3,3,-4,9,4,-7,-2,-9,-3,6,8,1,7,-8,-8,-9,-5,-8,-7,-4,-10,9,8,-8,-5,-5,6,-4,4,7,-2,2,7,6,-10,-6,-1,-2,-5,2,-5,-4,10,4,-9,-5,-5,8,-8,-7,-5,9,-10,-7,-1,4,3,-7,-3,9,1,-2,-3,-8,5,9,10,7,9,2,2,-8,-3,10,-7,7,2,-4,-2,-4,-10,8,-1,10,9,-1,-8,-6,3,7,4,8,5,-9,-8,3,-7,10,6,-9,-9,-5,-9,-8,-8,4,8,6,-8,8,1,4,4,8,-3,4,7,-1,-2,-1,-3,-10,9,-2,-4,-10,4,5,-9,8,9,-6,-1,5,7,4,10,-8,-2,3,3,-3,9,-4,10,-4,2,-7,8,-6,7,2,-4,4,3,5,1,2,5,-2,-6,6,-6,-2,-7,9,8,1,4,-9,-5,2,2,7,9,-4,6,4,-5,8,7,-5,-3,-9,4,-5,-4,-4,-2,-4,2,8,8,-4,10,-4,-3,4,-5,-4,-2,-7,-9,-1,-6,4,4,10,5,2,5,-2,5,6,-8,-1,1,-5,1,-1,-4,6,6,8,7,-7,-8,-3,-5,-2,-9,-3,3,9,5,-10,5,-5,-2,-2,-4,3,6,-4,-7,3,-9,6,-6,5,-7,10,-3,-2,-1,3,-3,-7,2,-9,-8,-5,-3,-1,8,-10,-3,8,9,-10,-6,6,-7,8,4,10,-4,-1,6,5,7,10,8,-7], dtype = "uint64")#candidate|4045|(2016,)|const|uint64
call_4043 = relay.TupleGetItem(func_85_call(relay.reshape(const_4044.astype('uint64'), [1, 16, 1]), relay.reshape(const_4045.astype('uint64'), [9, 16, 14]), ), 0)
call_4046 = relay.TupleGetItem(func_89_call(relay.reshape(const_4044.astype('uint64'), [1, 16, 1]), relay.reshape(const_4045.astype('uint64'), [9, 16, 14]), ), 0)
output = relay.Tuple([uop_4035,call_4037,uop_4039,call_4043,const_4044,const_4045,])
output2 = relay.Tuple([uop_4035,call_4038,uop_4039,call_4046,const_4044,const_4045,])
func_4047 = relay.Function([var_4034,], output)
mod['func_4047'] = func_4047
mod = relay.transform.InferType()(mod)
var_4048 = relay.var("var_4048", dtype = "float32", shape = (2, 11, 1))#candidate|4048|(2, 11, 1)|var|float32
output = func_4047(var_4048)
func_4049 = relay.Function([var_4048], output)
mutated_mod['func_4049'] = func_4049
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2217_call = mod.get_global_var('func_2217')
func_2219_call = mutated_mod.get_global_var('func_2219')
call_4056 = relay.TupleGetItem(func_2217_call(), 0)
call_4057 = relay.TupleGetItem(func_2219_call(), 0)
func_1377_call = mod.get_global_var('func_1377')
func_1380_call = mutated_mod.get_global_var('func_1380')
var_4062 = relay.var("var_4062", dtype = "int64", shape = (360,))#candidate|4062|(360,)|var|int64
call_4061 = relay.TupleGetItem(func_1377_call(relay.reshape(var_4062.astype('int64'), [360,])), 1)
call_4063 = relay.TupleGetItem(func_1380_call(relay.reshape(var_4062.astype('int64'), [360,])), 1)
output = relay.Tuple([call_4056,call_4061,var_4062,])
output2 = relay.Tuple([call_4057,call_4063,var_4062,])
func_4064 = relay.Function([var_4062,], output)
mod['func_4064'] = func_4064
mod = relay.transform.InferType()(mod)
var_4065 = relay.var("var_4065", dtype = "int64", shape = (360,))#candidate|4065|(360,)|var|int64
output = func_4064(var_4065)
func_4066 = relay.Function([var_4065], output)
mutated_mod['func_4066'] = func_4066
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1059_call = mod.get_global_var('func_1059')
func_1061_call = mutated_mod.get_global_var('func_1061')
call_4081 = relay.TupleGetItem(func_1059_call(), 0)
call_4082 = relay.TupleGetItem(func_1061_call(), 0)
output = call_4081
output2 = call_4082
func_4086 = relay.Function([], output)
mod['func_4086'] = func_4086
mod = relay.transform.InferType()(mod)
output = func_4086()
func_4087 = relay.Function([], output)
mutated_mod['func_4087'] = func_4087
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1235_call = mod.get_global_var('func_1235')
func_1237_call = mutated_mod.get_global_var('func_1237')
call_4090 = relay.TupleGetItem(func_1235_call(), 4)
call_4091 = relay.TupleGetItem(func_1237_call(), 4)
output = call_4090
output2 = call_4091
func_4095 = relay.Function([], output)
mod['func_4095'] = func_4095
mod = relay.transform.InferType()(mod)
output = func_4095()
func_4096 = relay.Function([], output)
mutated_mod['func_4096'] = func_4096
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1059_call = mod.get_global_var('func_1059')
func_1061_call = mutated_mod.get_global_var('func_1061')
call_4106 = relay.TupleGetItem(func_1059_call(), 0)
call_4107 = relay.TupleGetItem(func_1061_call(), 0)
func_1486_call = mod.get_global_var('func_1486')
func_1489_call = mutated_mod.get_global_var('func_1489')
var_4113 = relay.var("var_4113", dtype = "float32", shape = (72,))#candidate|4113|(72,)|var|float32
call_4112 = relay.TupleGetItem(func_1486_call(relay.reshape(var_4113.astype('float32'), [72,])), 0)
call_4114 = relay.TupleGetItem(func_1489_call(relay.reshape(var_4113.astype('float32'), [72,])), 0)
func_1682_call = mod.get_global_var('func_1682')
func_1683_call = mutated_mod.get_global_var('func_1683')
call_4148 = relay.TupleGetItem(func_1682_call(), 1)
call_4149 = relay.TupleGetItem(func_1683_call(), 1)
func_2248_call = mod.get_global_var('func_2248')
func_2249_call = mutated_mod.get_global_var('func_2249')
call_4154 = relay.TupleGetItem(func_2248_call(), 0)
call_4155 = relay.TupleGetItem(func_2249_call(), 0)
uop_4158 = relay.tan(call_4112.astype('float64')) # shape=(4, 7, 2)
uop_4160 = relay.tan(call_4114.astype('float64')) # shape=(4, 7, 2)
func_1523_call = mod.get_global_var('func_1523')
func_1526_call = mutated_mod.get_global_var('func_1526')
const_4162 = relay.const([-9.476948,-0.480615,1.793598,6.198039,-6.558627,6.180110,3.711358,-9.968526,9.124342,0.210328,-6.892551,6.549419,2.770929,8.289566,7.779527,9.916071,0.098513,-1.209227,-5.287155,3.310591,8.382243,-8.057645,2.741180,-6.112668,8.817420,-2.488786,-6.763824,-7.939248,1.564677,-2.605491,-7.850259,-5.848593,-8.622810,9.144886,4.985003,6.575608,2.670033,9.899854,1.466047,7.035460,4.181912,-6.592142,8.377553,8.442861,6.385101,-0.648693,-3.658816,9.076431,0.949254,0.188223,8.589878,6.062912,-8.505678,-5.159996,-8.971208,7.823547,2.073760,8.764750,-8.020248,3.526909,1.888192,6.416257,-9.135070,-5.446248,9.626017,-9.742174,-4.737657,4.772218,3.990360,-1.415065,-3.300295,2.699379,-9.599392,-0.042569,-2.750830,-7.511356,0.281193,8.799030,-3.830316,0.992152,7.638864,6.608107,-6.295096,4.472352,-6.349422,2.402524,5.911634,-2.924590,-6.094386,-1.155282,-0.086174,-9.821938,-3.359464,4.870249,7.250342,7.209496,2.283668,-0.783956,6.342058,5.485601,-9.692416,-3.582078,4.123956,0.737859,-0.431934,-3.910699,-0.118697,-3.688544,-9.833179,3.812645,4.798729,1.840174,1.105467,-6.429177,2.812620,-8.944695,-6.153186,0.357645,5.663723,5.342961,-3.741130,-6.787176,-0.052137,7.795291,0.591811,-9.548685,8.470738,4.554265,-4.284317,-1.952429,6.829523,6.553006,9.034612,5.527741,6.256435,-5.880574,9.375555,-5.662292,-6.025379,-1.479379,-1.062836,-2.642881,-5.425975,1.790950,4.418206,-1.445122,-7.408850,-7.728485,-3.769699,9.373832,3.249927,3.885411,-5.336083,-3.005975,-8.195026,-8.223038,-2.480499,-3.480451,-4.233843,5.568527,5.454516,-2.449130,6.002554,-0.624251,1.732489,9.109621,7.940120,0.040989,-0.309936,-4.884025,-9.262663,6.448080,6.251017,-3.461248,7.323342,0.425140,2.486119,5.981335,3.956979,2.490349,9.607265,1.791381,1.229020,-3.239472,-3.865793,-6.483036,-2.801495,5.779030,-6.613921,1.302192,1.857671,-7.006945,4.685095,0.642975,5.079253,0.127029,2.825733,-7.948967,6.111366,-7.850127,6.970759,-6.146767,2.310893,-3.062839,4.022378,9.720344,-4.664775,-9.451318,2.677182,-8.181281,-4.964108,2.296418,-0.496040,-0.645789,1.321720,-1.691770,-5.434328,-1.159029,-1.365545,4.179625,-3.953556,4.562047,-2.402052,-6.194972,4.093116,2.179598,-8.152157,-8.229447,-9.569335,-3.003699,6.444158,-3.152223,-3.479448,5.103033,0.730824,-2.483770,-3.097127,6.419450,9.859192,-4.265609,-2.097236,-9.145887,5.221894,-4.469446,-6.149698,3.829361,8.733754,2.078616,-8.813598,-1.156892,4.184873,9.653958,-6.487042,-7.355446,3.119437,1.266295,-0.660971,-3.089620,-3.018852,1.571957,-5.563713,-1.687127,0.921739,3.879661,1.101035,6.501518,-0.079149,-6.915416,8.899439,4.214121,8.359700,1.683059,-4.252143,0.077549,-0.776312,2.089670,6.490437,-1.265541,4.563180,-8.025113,0.458464,9.338706,5.713737,6.285764,3.038852,0.359897,4.063138,-1.197168,-3.812690,-8.832248,6.300335,6.977487,6.338503,0.048316,7.803131,4.719816,5.814579,8.122702,-5.981450,-3.920471,0.357915,8.478614,-1.474476,-4.055545,7.390032,8.021361,3.640962,-0.905959,-3.610560,2.223620,1.461329,-5.221637,-5.107023,0.311027,-0.678349,-7.426392,0.810454,-0.781615,3.051415,2.257732,7.163154,2.491177,1.211834,-6.832351,3.308393,-8.674102,-5.050396,-5.762034,-1.076827,-4.871002,2.440229,-4.685844,-7.669597,-1.868095,0.978609,-3.840337,-2.937434,0.934520,9.807518,4.321860,-9.725487,-2.478698,-4.265350,8.685274,-6.035343,-2.622811,-2.539468,7.825374,8.084942,-0.430967,7.935688,-0.853591,9.635910,5.223285,6.176069,0.856171,-6.029542,-3.121686,-8.959889,5.279338,2.899451,-8.497237,-7.643921,-0.192503,3.285459,4.168454,-9.529439,-5.590465,8.040963,-1.731775,-3.154840,-3.977528,2.161521,-0.734459,-5.172895,9.664940,5.812729,1.154354,2.146361,6.081193,6.285117,3.328452,-4.081788,8.674210,3.415738,-2.008013,7.318107,5.218601,-8.851299,5.860636,9.773379,-7.813536,-1.126438,5.594654,-6.849001,1.044892,6.426205,1.952427,-3.344340,0.716255,-4.576129,-0.313730,4.941028,1.961688,1.267036,-0.813062,7.978076,4.541596,3.675943,2.345778,9.541159,5.837319,6.644397,7.270875,6.742764,0.641452,-9.320495,9.327451,0.701913,9.760585,0.989403,-7.204810,4.226469,3.922067,-8.954751,-2.314418,4.002852,-2.896652,-9.294631,-5.649322,-8.005314,3.458027,1.131110,-2.102601,0.774110,1.105874,-5.001225,4.543706,9.332743,-0.123387,3.331208,-2.304845,-7.449112,4.816608,-5.700164,-1.381039,-2.059065,0.890401,-0.302519,-2.762684,-7.884652,7.114555,6.873454,-3.214432,8.696307,-2.147967,8.121547,8.776897,1.618868,-9.220343,-0.468971,0.148022,-0.650266,7.290413,-1.688166,8.244066,4.204039,0.531116,3.548303,-9.556495,-6.051276,-6.202954,4.675424,3.010500,-7.662053,-5.998059,-6.070114,1.809901,-4.970268,-5.122228,3.515067,5.508391,-4.660514,0.485620,-9.050812,-7.937518,5.331835,-6.127454,-1.704745,7.727594,0.342925,0.907809,2.296146,9.961072,9.181355,2.855400,2.717390,-6.666435,3.367310,9.403956,8.021300,6.403687,-1.494214,4.526240,1.566466,-8.590207,-9.239183,5.948771,-3.668802,1.795115,-8.536534,-3.055222,-6.690392,0.203947,2.294179,1.409629,-7.641931,9.081100,4.382391,4.515397,1.723283,3.716409,1.735693,-6.260218,5.820746,-5.128037,-9.105200,0.386243,9.203129,-8.487484,-2.973723,5.523132,-3.824811,4.258410,9.009469,6.837994,-1.031690,-0.304948,2.323183,-2.101709,-3.066811,-6.486686,0.805921,2.278645,-0.324401,0.457624,-6.051449,0.302514,5.379023,-6.237930,3.970378,-1.533593,-3.505957,3.792575,7.182517,7.521192,-2.894579,-5.142540,2.751263,-5.327426,2.933049,-0.068285,-6.054443,3.462023,4.123826,-6.837985,9.051393,-2.968740,5.632231,5.343459,6.565609,5.228649,-7.055961,-1.106341,1.663208,2.775176,-4.547642,-8.648501,7.797921,0.118528,4.125670,5.023730,-7.617647,3.115521,4.131611,-4.443355,2.259434,0.001656,9.805432,0.732582,-1.763899,1.217944,9.942531,-0.241429,4.139795,1.257510,9.700730,4.617204,-9.973473,-3.335387,1.095747,4.155065,-0.604687,-2.406051,-0.774500,-9.909717,-5.777839,6.040356,-6.447526,-3.592437,1.010802,-8.548670,-2.812070,-7.485021,-7.478024,9.041446,4.801585,-3.673085,5.750891,4.667110,9.802030,-0.841866,-0.185020,7.565676,3.738121,-5.755110,0.837684,-1.674243,9.926621,-1.614710,2.704378,8.721003,-9.510541,-1.073835,2.740105,8.687376,5.057800,-9.589665,-0.014007,-3.439561,-3.784847,-9.864778,-0.793681,7.328380,-2.358144,4.870628,3.503628,-5.799580,3.465609,1.113350,8.401458,0.909684,1.245021,-4.025205,1.106484,1.554486,3.331886,3.892535,-2.811683,2.441398,-9.294684,-3.539457,-8.654297,-4.312188,3.817880,-2.303050,-2.879500,-4.321729,5.286414,6.093660,2.921275,-9.179251,2.175771,-2.286848,4.841994,-6.719303,3.052585,8.996624,5.048843,7.437494,-5.387763,6.193979,3.993366,-8.381167,-1.964191,0.225176,-6.236271,3.848493,4.016723,-9.797313,7.750866,-6.532454,1.523707,-6.464375,3.538481,-8.972854,2.528734,4.082389,4.087597,-3.678150,0.114055,4.374283,5.912586,1.287944,3.658269,0.613937,-9.210692,8.896537,-3.508922,3.885589,0.168772,0.091786,1.352262,6.201157,-5.518284,5.100183,7.184491,6.685205,6.699691,5.216104,-1.807982,7.223447,-2.156785,6.490508,4.461048,1.497963,-8.459739,1.013074,9.626666,-5.886924,-9.184880,0.683073,-8.847145,0.842447,-3.660920,-3.962119,3.260768,4.860966,-8.678926,-8.696225,2.757162,-0.179639,-3.993677,-5.362851,-1.491280,5.459908,-7.725238,-6.247781,-5.725210,-1.308871,-3.568339,6.986456,-0.612353,-7.521566,0.029609,-2.904626,-5.906226,-7.217678,4.072546,-9.379050,5.138087,-7.907802,-0.147914,1.040250,-0.667589,2.708075,-8.905306,2.186518,-8.548947,-8.183025,-5.116320,-5.864182,9.238632,-2.621430,0.816753,2.547394,-3.165638,-8.853754,-1.899593,7.165257,7.608955,-0.210054,-1.249624,8.642445,5.740410,-9.874412,-7.484478,-4.840608,-6.353892,-2.578287,5.806029,-3.946059,-0.690883,-9.717454,-0.764202,5.281670,4.602756,-4.834521,2.743465,-7.072133,0.261325,0.026071,6.744159,6.750433,-9.095197,-8.061941,6.255011,9.083703,1.538824,3.041971,-4.280001,-7.955638,-8.091914,1.368194,-7.241918,-2.506829,-4.036146,4.028794,9.944047,4.942260,5.750214,9.508246,2.813224,-9.036455,-1.466175,-5.720199,-2.164749,-9.794533,9.355129,7.784585,5.760716,9.532159,4.211236,-4.524923,-8.619585,-4.303198,7.172141,-0.317606,-5.227063,3.121934,-7.611580,1.779263,-6.342706,7.136416,1.588233,6.672126,-8.921251,2.408197,-1.023824,-2.487433,4.693187,-4.732730,-7.387501,5.286535,1.317534,-3.163297,1.887966,-6.026392,8.658797,1.596534,-8.361322,-3.485066,-1.190775,-8.214524,0.525793,3.640482,9.065408,7.446831,-9.238792,2.438700,3.685143,-2.810011,6.258814,8.234392,-4.300133,-0.171684,5.954140,-7.600442,-8.272451,-3.413929,5.076391,-4.011846,6.344839,0.855521,9.361210,7.429311,-4.527570,1.637744,8.112493,-9.452029,2.692559,-5.538409,8.562690,-0.224069,-3.159372,5.035364,-5.832627,-6.049398,9.967340,-2.114955,-2.386986,-6.532256,3.027524,4.741022,-1.924905,-3.836891,-6.633559,-3.265429,9.204445,9.794526,-9.519064,-7.401251,-8.573809,-9.097312,-5.627983,-5.764397,8.390430,7.946693,-9.592021,6.202812,-1.942390,4.972983,-6.271836,7.051025,-5.484377,2.154468,2.440612,-6.806120,5.708942,-7.171972,5.900045,-6.483641,8.697405,7.820453,-4.825985,-8.104281,-9.368172,4.078027,6.089458,1.691778,1.893997,-6.420692,-3.145690,2.555539,-0.667675,8.980444,-5.571376,-2.821449,3.563297,-9.853626,-2.261772,-4.245065,-4.588437,3.613440,-4.755568,8.602434,-9.536046,8.765170,-6.753820,-4.801939,-5.696610,-3.294133,0.574663,-3.170575,-6.946966,4.783684,9.342949,-9.779852,0.742490,2.198864,-4.094068,-4.766340,8.446795,8.090354,-1.345048,-9.018768,7.836427,5.920592,5.217632,6.487167,-6.953720,-7.790859,-0.694590,5.615926,-5.532347,-7.387036,-4.477671,6.696350,-5.932275,6.736387,-7.501965,7.658045,9.764300,5.861247,-5.402282,-2.572971,3.682529,-7.879907,9.134209,3.634916,-1.323061,-7.786163,-3.975036,-6.515116,-7.839617,1.932517,8.487850,-1.147672,-8.640257,7.788382,-3.786359,7.741616,-6.860385,-7.448526,-5.147600,-0.538454,9.109174,4.953877,-6.602728,-8.968106,4.548299,-7.331113,-9.149587,0.081610,-2.318551,6.654487,1.975000,-3.355679,-8.258664,0.049835,-1.191657,6.847398,1.299388,-1.408492,0.541231,-7.538307,-3.317316,6.450344,-7.921486,9.985587,-3.932771,5.540582,-9.908546,0.084396,-5.794154,6.740589,-4.389784,-5.296297,2.828198,-2.182399,4.628261,4.219984,3.390308,-7.727050,-4.704761,-3.720049,-8.357920,-3.831677,3.350937,7.117600,-0.368969,-7.869841,-7.455801,-8.174918,9.016917,-0.169963,-6.532867,7.925771,-3.581839,9.491668,4.103994,3.482134,6.651204,-8.369719,-7.707674,7.646368,-0.860037,9.313484,-1.438295,-5.809836,-6.037305,4.885597,5.800722,-1.114292,-0.139158,-5.449817,1.949401,-4.257387,7.938971,5.554024,-2.510358,-2.812924,8.528257,9.841069,-5.292242,5.046576,-0.429272,1.098871,7.108590,-8.100118,1.199286,-6.864542,-4.014189,8.211225,0.689044,1.209074,5.671646,2.767034,-3.692943,6.396588,-6.089106,1.771284,7.748700,-1.971106,8.708225,-0.448239,3.390608,2.841267,1.588740,2.642472,-1.422627,8.437550,7.620920,-5.199701,2.925481,-4.166783,-5.334966,8.827203,-8.508477,1.632774,-4.517354,-1.737852,-7.762832,6.137814,-0.675780,-8.915962,-3.386089,9.878710,-7.040033,7.996335,1.203326,-5.939149,4.704760,7.291003,3.646032,1.874547,-1.253932,-5.219078,-1.033749,4.538096,-4.290937,3.609348,8.410828,-6.432381,-9.821604,9.545458,8.951144,9.686809,7.676676,-4.260571,1.171541,-8.763117,4.010634,-7.692102,8.789439,7.903262,-9.780165,-2.584686,9.520146,8.704747,-9.859907,0.529058,-3.902366,-9.987896,7.443125,9.957589,3.375279,-3.668221,-6.760729,-8.350416,-4.969487,2.174358,-6.193948,-4.621553,2.317041,1.730516,3.094967,6.830798,8.357128,4.268409,3.217242,-4.686413,4.704812,4.430272,8.412546,5.916266,1.607777,-6.374300,-1.957696,6.626030,2.820907,1.848972,1.568502,-6.769230,-9.097152,7.793050,-6.757838,-0.318311,8.653355,3.723479,8.496421,-1.265894,-0.142912,-2.389902,-5.373565,-0.585047,-4.801449,-9.175953,-1.771178,0.753041,-5.940277,-1.482428,-0.950701,-1.472566,8.623099,-2.473847,-2.398707,5.503135,-5.354034,7.154878,-3.941677,-7.801638,4.329309,-8.933949,5.687656,1.606483,8.254070,1.101510,-5.389285,3.868436,8.922345,4.509099,-1.299989,-2.353111,-9.679324,9.679661,1.109872,-0.123776,-4.463523,4.507463,-5.448344,-5.899085,-2.832623,5.773417,5.803090,-4.711988,-2.265767,7.272534,9.537347,3.725808,6.838894,-0.245925,-3.580666,-6.193729,5.942786,2.011026,-2.515325,4.918411,2.039975,3.693475,7.640366,1.953102,2.681178,3.254030,4.090108,7.708894,5.617393,0.619642,-6.907251,4.349308,5.030283,1.317174,-3.963655,3.305952,9.242026,-3.796855,-2.033958,-0.795832,-7.388285,-7.422701,5.329875,7.662375,7.240845,-3.312397,-1.747796,-4.966740,-3.808742,5.081040,-2.373392,-5.836505,1.142122,6.683873,5.213347,-7.067400,8.944064,7.733112,-8.935895,6.664512,0.459958,5.464341,2.144368,-0.056312,4.408053,-6.838869,-5.240536,3.194679,-7.476202,7.040359,-0.441070,1.583011,5.237697,-6.524226,8.553816,4.713628,-9.896255,-0.655457,-9.682160,5.709489,-8.306787,-2.289611,1.438528,5.423730,-0.006852,9.468136,-5.112936,-0.987093,0.512488,0.079598,-8.899380,7.235509,6.615579,4.984110,-7.099295,3.572033,-9.111933,0.718749,8.007998,8.416181,-6.811185,-2.726387,-8.887459,-3.569936,-6.689584,-9.259801,-1.568874,7.442860,-1.183007,-8.714429,3.314680,6.187436,4.507763,2.418921,2.376165,-5.730252,8.687024,-0.999210,8.569079,6.648750,-6.321906,-6.983705,-7.744108,-3.288545,-1.974625,8.941585,-7.036549,-9.758829,-5.601468,-9.782703,-6.646313,0.118620,-7.636974,1.117099,-9.913392,5.314196,0.852674,3.009245,3.427700,-5.872081,-9.862740,7.155929,-5.810323,-2.929952,-4.854826,4.315571,8.071627,-9.059892,-9.335613,1.261964,1.431818,-6.170709,2.714962,-3.951388,6.959262,-0.222067,-2.215010,3.825036,4.366542,1.421298,-0.419712,2.123154,9.764856,7.876976,8.779622,-3.437364,1.496025,0.200560,6.105090,6.550156,-6.390041,-1.026073,-3.492711,-8.339303,-9.189095,7.415072,-8.578502,-1.988504,-1.379962,8.515679,2.337886,-4.365235,-9.675598,8.488831,0.760479,1.887270,-6.867742,3.247608,0.559208,0.098515,8.548079,-2.796663,7.851916,-4.571603,9.661584,1.043682,9.445706,9.421612,-0.431914,3.272794,-4.674299,2.185304,2.652777,5.501562,-1.729258,-8.749031,6.877470,9.524679,5.068570,-8.277093,-9.361528,7.427125,-2.804882,1.004788,1.483289,-3.292145,7.851582,7.948232,-0.983871,9.159405,6.201742,9.489719,0.275765,9.466551,-6.552398,2.906565,6.103914,-5.122875,8.067778,-6.499100,1.657415,-2.412392,8.975565,7.259050,-6.415081,-3.882038,-7.041368,-8.693817,1.032170,-7.421390,-7.107040,-3.669321,6.264428,9.482825,-5.233788,3.714525,-3.641337,5.239733,2.562936,-1.118991,9.004282,9.214669,-2.285145,9.945383,2.572505,7.748094,2.208115,-5.373869,-9.671723,-4.800377,4.446532,-3.263717,3.824987,4.569860,-6.291005,2.796066,5.715115,6.517183,-2.810469,5.471695,4.347122,8.163805,-7.197699,5.037113,2.495945,1.679389,1.777730,1.142433,0.339701,-9.425087,-7.041221,-4.257084,-2.685843,9.112953,-8.797935,8.967650,8.410838,3.515554,-6.723030,-9.133386,-0.237348,-0.638468,-8.624125,-8.769919,3.088916,0.986290,-2.662445,4.511424,-1.399684,-4.541631,6.378408,-2.258361,-9.016884,-5.652135,-1.351184,4.623709,-6.933557,-5.712262,2.783527,7.733240,6.711864,-1.565420,-4.162846,0.694793,-0.946413,6.657959,3.405521,-2.949007,8.485043,-1.920538,3.196358,-0.638945,9.307495,-2.516196,-3.453852,8.776115,9.335037,1.506348,0.619629,-5.341989,-0.155448,6.065608,6.795328,-3.774605,-2.535412,-4.271826,-9.354907,-5.123360,3.181318,-8.738296,-0.440136,-3.944571,8.945830,8.828817,-8.288349,-2.037724,1.811624,-2.423559,0.584069,-0.618548,3.092409,9.914128,2.600087,6.385179,9.504706,-0.525606,-9.189255,6.634319,8.576662,-5.649959,-7.078392,-4.115283,9.114375,-0.324636,4.344058,-1.273862,8.996662,-3.132300,8.968996,1.175246,3.588638,-0.561389,-4.407366,6.629270,-7.037259,4.192173,-3.632950,2.170757,-3.703317,-9.569423,-7.779806,-6.704931,6.772924,-5.214281,6.764433,4.360101,-8.305932,-6.256597,7.640310,-3.915534,7.894373,-3.746251,6.520693,8.611401,8.660080,-3.443690,0.203033,6.381518,7.744652,6.692574,9.581738,-9.312822,8.187594,8.363490,-0.421976,-8.944364,1.417998,-4.438277,-8.802346,7.167177,3.549358,7.900211,-4.833113,3.591447,7.634377,-6.563017,4.381925,-1.403677,6.413573,8.378924,1.710399,-7.278582,-5.061120,7.047606,-4.639333,-5.191412,-3.950136,-4.336249,-4.183646,2.504323,7.700831,0.416627,-4.621806,2.387067,4.206560,0.686417,-1.697608,5.849167,-6.469299,-3.176716,4.250025,0.589902,-0.517808,3.418243,8.859664,-7.260593,-5.793851,-8.661203,1.188980,7.922340,-0.194976,1.508599,-3.880781,-6.472868,-8.162408,1.261301,3.531923,8.719080,4.487594,7.523376,7.372200,3.566351,9.292904,-2.707810,1.061260,2.356824,8.599190,-5.532392,3.804623,-6.888165,4.114534,-9.021873,-2.295332,0.581197,-7.755687,7.308528,-2.469661,6.080437,-9.570538,7.350447,6.722935,3.168824,0.633391,-8.126423,-8.972942,-2.252042,7.442758,7.297044,9.938984,1.707934,7.849820,3.455223,3.454395,3.563429,4.489715,4.044835,2.728085,6.537336,-6.707456,1.436332,-6.744139,8.320355,-7.850767,-5.816378,4.833371,6.166951,-2.598530,-5.725053,-6.812870,4.920175,-9.343536,-8.730122,5.454239,4.369452,-4.207625,6.918069,-9.922424,-0.342894,9.385237,-9.707476,-3.812641,3.499716,8.722878,-8.428312,8.319366,3.771614,-8.054702,5.638354,7.861296,3.616204,8.361497,-1.253825,3.616824,0.294916,7.522064,3.569173,7.769103,-1.723030,7.968562,-7.550975,-4.999081,-7.396427,-9.479347,0.328613], dtype = "float32")#candidate|4162|(1792,)|const|float32
call_4161 = relay.TupleGetItem(func_1523_call(relay.reshape(const_4162.astype('float32'), [8, 224]), relay.reshape(call_4148.astype('float32'), [1170,]), ), 1)
call_4163 = relay.TupleGetItem(func_1526_call(relay.reshape(const_4162.astype('float32'), [8, 224]), relay.reshape(call_4148.astype('float32'), [1170,]), ), 1)
output = relay.Tuple([call_4106,var_4113,call_4148,call_4154,uop_4158,call_4161,const_4162,])
output2 = relay.Tuple([call_4107,var_4113,call_4149,call_4155,uop_4160,call_4163,const_4162,])
func_4164 = relay.Function([var_4113,], output)
mod['func_4164'] = func_4164
mod = relay.transform.InferType()(mod)
mutated_mod['func_4164'] = func_4164
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4165 = relay.var("var_4165", dtype = "float32", shape = (72,))#candidate|4165|(72,)|var|float32
func_4164_call = mutated_mod.get_global_var('func_4164')
call_4166 = func_4164_call(var_4165)
output = call_4166
func_4167 = relay.Function([var_4165], output)
mutated_mod['func_4167'] = func_4167
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4172 = relay.var("var_4172", dtype = "float64", shape = (15, 1))#candidate|4172|(15, 1)|var|float64
uop_4173 = relay.atanh(var_4172.astype('float64')) # shape=(15, 1)
output = uop_4173
output2 = uop_4173
func_4175 = relay.Function([var_4172,], output)
mod['func_4175'] = func_4175
mod = relay.transform.InferType()(mod)
var_4176 = relay.var("var_4176", dtype = "float64", shape = (15, 1))#candidate|4176|(15, 1)|var|float64
output = func_4175(var_4176)
func_4177 = relay.Function([var_4176], output)
mutated_mod['func_4177'] = func_4177
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4217 = relay.var("var_4217", dtype = "uint64", shape = (15, 16, 10))#candidate|4217|(15, 16, 10)|var|uint64
var_4218 = relay.var("var_4218", dtype = "uint64", shape = (15, 16, 10))#candidate|4218|(15, 16, 10)|var|uint64
bop_4219 = relay.bitwise_xor(var_4217.astype('uint64'), relay.reshape(var_4218.astype('uint64'), relay.shape_of(var_4217))) # shape=(15, 16, 10)
bop_4222 = relay.maximum(var_4218.astype('int8'), relay.reshape(bop_4219.astype('int8'), relay.shape_of(var_4218))) # shape=(15, 16, 10)
uop_4237 = relay.sigmoid(var_4218.astype('float32')) # shape=(15, 16, 10)
func_3477_call = mod.get_global_var('func_3477')
func_3481_call = mutated_mod.get_global_var('func_3481')
var_4243 = relay.var("var_4243", dtype = "bool", shape = (50, 15))#candidate|4243|(50, 15)|var|bool
call_4242 = func_3477_call(relay.reshape(var_4243.astype('bool'), [5, 15, 10]), relay.reshape(var_4243.astype('bool'), [5, 15, 10]), )
call_4244 = func_3477_call(relay.reshape(var_4243.astype('bool'), [5, 15, 10]), relay.reshape(var_4243.astype('bool'), [5, 15, 10]), )
bop_4251 = relay.minimum(call_4242.astype('uint64'), relay.reshape(var_4243.astype('uint64'), relay.shape_of(call_4242))) # shape=(5, 15, 10)
bop_4254 = relay.minimum(call_4244.astype('uint64'), relay.reshape(var_4243.astype('uint64'), relay.shape_of(call_4244))) # shape=(5, 15, 10)
output = relay.Tuple([bop_4222,uop_4237,bop_4251,])
output2 = relay.Tuple([bop_4222,uop_4237,bop_4254,])
func_4258 = relay.Function([var_4217,var_4218,var_4243,], output)
mod['func_4258'] = func_4258
mod = relay.transform.InferType()(mod)
mutated_mod['func_4258'] = func_4258
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4258_call = mutated_mod.get_global_var('func_4258')
var_4260 = relay.var("var_4260", dtype = "uint64", shape = (15, 16, 10))#candidate|4260|(15, 16, 10)|var|uint64
var_4261 = relay.var("var_4261", dtype = "uint64", shape = (15, 16, 10))#candidate|4261|(15, 16, 10)|var|uint64
var_4262 = relay.var("var_4262", dtype = "bool", shape = (50, 15))#candidate|4262|(50, 15)|var|bool
call_4259 = func_4258_call(var_4260,var_4261,var_4262,)
output = call_4259
func_4263 = relay.Function([var_4260,var_4261,var_4262,], output)
mutated_mod['func_4263'] = func_4263
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1344_call = mod.get_global_var('func_1344')
func_1345_call = mutated_mod.get_global_var('func_1345')
call_4277 = func_1344_call()
call_4278 = func_1344_call()
var_4308 = relay.var("var_4308", dtype = "float32", shape = (1170,))#candidate|4308|(1170,)|var|float32
bop_4309 = relay.divide(call_4277.astype('float64'), relay.reshape(var_4308.astype('float64'), relay.shape_of(call_4277))) # shape=(1170,)
bop_4312 = relay.divide(call_4278.astype('float64'), relay.reshape(var_4308.astype('float64'), relay.shape_of(call_4278))) # shape=(1170,)
func_1568_call = mod.get_global_var('func_1568')
func_1570_call = mutated_mod.get_global_var('func_1570')
call_4318 = relay.TupleGetItem(func_1568_call(), 0)
call_4319 = relay.TupleGetItem(func_1570_call(), 0)
output = relay.Tuple([bop_4309,call_4318,])
output2 = relay.Tuple([bop_4312,call_4319,])
func_4332 = relay.Function([var_4308,], output)
mod['func_4332'] = func_4332
mod = relay.transform.InferType()(mod)
mutated_mod['func_4332'] = func_4332
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4333 = relay.var("var_4333", dtype = "float32", shape = (1170,))#candidate|4333|(1170,)|var|float32
func_4332_call = mutated_mod.get_global_var('func_4332')
call_4334 = func_4332_call(var_4333)
output = call_4334
func_4335 = relay.Function([var_4333], output)
mutated_mod['func_4335'] = func_4335
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1344_call = mod.get_global_var('func_1344')
func_1345_call = mutated_mod.get_global_var('func_1345')
call_4350 = func_1344_call()
call_4351 = func_1344_call()
func_3115_call = mod.get_global_var('func_3115')
func_3116_call = mutated_mod.get_global_var('func_3116')
call_4358 = relay.TupleGetItem(func_3115_call(), 0)
call_4359 = relay.TupleGetItem(func_3116_call(), 0)
func_1682_call = mod.get_global_var('func_1682')
func_1683_call = mutated_mod.get_global_var('func_1683')
call_4374 = relay.TupleGetItem(func_1682_call(), 2)
call_4375 = relay.TupleGetItem(func_1683_call(), 2)
output = relay.Tuple([call_4350,call_4358,call_4374,])
output2 = relay.Tuple([call_4351,call_4359,call_4375,])
func_4383 = relay.Function([], output)
mod['func_4383'] = func_4383
mod = relay.transform.InferType()(mod)
mutated_mod['func_4383'] = func_4383
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4383_call = mutated_mod.get_global_var('func_4383')
call_4384 = func_4383_call()
output = call_4384
func_4385 = relay.Function([], output)
mutated_mod['func_4385'] = func_4385
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1431_call = mod.get_global_var('func_1431')
func_1433_call = mutated_mod.get_global_var('func_1433')
call_4518 = relay.TupleGetItem(func_1431_call(), 0)
call_4519 = relay.TupleGetItem(func_1433_call(), 0)
func_1235_call = mod.get_global_var('func_1235')
func_1237_call = mutated_mod.get_global_var('func_1237')
call_4548 = relay.TupleGetItem(func_1235_call(), 4)
call_4549 = relay.TupleGetItem(func_1237_call(), 4)
func_4020_call = mod.get_global_var('func_4020')
func_4022_call = mutated_mod.get_global_var('func_4022')
call_4563 = relay.TupleGetItem(func_4020_call(), 1)
call_4564 = relay.TupleGetItem(func_4022_call(), 1)
output = relay.Tuple([call_4518,call_4548,call_4563,])
output2 = relay.Tuple([call_4519,call_4549,call_4564,])
func_4567 = relay.Function([], output)
mod['func_4567'] = func_4567
mod = relay.transform.InferType()(mod)
mutated_mod['func_4567'] = func_4567
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4567_call = mutated_mod.get_global_var('func_4567')
call_4568 = func_4567_call()
output = call_4568
func_4569 = relay.Function([], output)
mutated_mod['func_4569'] = func_4569
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3548_call = mod.get_global_var('func_3548')
func_3550_call = mutated_mod.get_global_var('func_3550')
call_4585 = func_3548_call()
call_4586 = func_3548_call()
output = relay.Tuple([call_4585,])
output2 = relay.Tuple([call_4586,])
func_4600 = relay.Function([], output)
mod['func_4600'] = func_4600
mod = relay.transform.InferType()(mod)
output = func_4600()
func_4601 = relay.Function([], output)
mutated_mod['func_4601'] = func_4601
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3115_call = mod.get_global_var('func_3115')
func_3116_call = mutated_mod.get_global_var('func_3116')
call_4658 = relay.TupleGetItem(func_3115_call(), 0)
call_4659 = relay.TupleGetItem(func_3116_call(), 0)
output = relay.Tuple([call_4658,])
output2 = relay.Tuple([call_4659,])
func_4663 = relay.Function([], output)
mod['func_4663'] = func_4663
mod = relay.transform.InferType()(mod)
mutated_mod['func_4663'] = func_4663
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4663_call = mutated_mod.get_global_var('func_4663')
call_4664 = func_4663_call()
output = call_4664
func_4665 = relay.Function([], output)
mutated_mod['func_4665'] = func_4665
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4663_call = mod.get_global_var('func_4663')
func_4665_call = mutated_mod.get_global_var('func_4665')
call_4701 = relay.TupleGetItem(func_4663_call(), 0)
call_4702 = relay.TupleGetItem(func_4665_call(), 0)
func_1786_call = mod.get_global_var('func_1786')
func_1790_call = mutated_mod.get_global_var('func_1790')
const_4725 = relay.const([[4,-3,1,9,5,4,1,-9,4,4,-4,4,3,6,4,8,-5,6,-10,-2,6,9,10,6,9,-9,3,2,-1,-6,8,3,-5,-9,-8,2,-7,-9,-10,-4,7,1,-7,5,-1,5,5,5,10,6,5,2,-8,2,8,-8,-1,2,-2,-10,-8,-2,-4,6,1,2,2,1,-4,10,10,4,7,-1,-5,-1,5,-7,-10,-3,-6,8,-8,8,1,4,3,3,6,-8,7,5,3,-9,6,6,6,8,3,5,-3,5,9,-6,6,-7,3,2,-5,-3,-4,4,4,-3,-9,3,9,8,8,2,-7,-6,2,-8,-1,-9,9,5,5,-10,-8,4,1,-3,5,-4,4,-3,-7,3,-2,-1,6,-2,-5,5,5,1,3,-6,1,9,9,-4,-2,2,-1,-3,-10,10,-1,-9,6,4,-3,-6,-2,2,8,8,2,4,-5,-10,5,-8,-5,-3,-8,8,9,8,10,3,-3,-8,2,-8,-8,-10,10,-9,9,-4,9,8,8,9,3,4,4,-3,-3,-1,-1,3,-3,6,4,-8,-4,1,10,7,-4,1,4,-4,5,7,-8,-7,3,-4,-3,-10,-7,-6,4,10,6,-6,5,7,-5,6,-5,6,-6,4,1,6,-8,-4,-8,8,8,-6,4,-3,-8,-4,-5,8,3,3,-8,3,-3,-6,-3,-7,-2,6,-8,7,-1,6,5,7,8,3,9,1,3,5,6,1,-6,-4,-7,8,-3,-3,-10,8,2,-3,-5,5,4,6,-1,-7,-3,3,3,-9,8,7,-4,-6,-4,9,5,-9,-3,8,1,3,6,7,7,-8,-10,5,-9,10,1,-5,3,-5,1,10,-9,-8,-9,6,3,-3,8,6,-8,-3,8,-5,-3,7,2,-6,2,-7,10,-9,7,5,1,-5,10,9,-9,8,5,-4,5,-9,5,-8,-1,-8]], dtype = "int64")#candidate|4725|(1, 360)|const|int64
var_4726 = relay.var("var_4726", dtype = "float32", shape = (180,))#candidate|4726|(180,)|var|float32
var_4727 = relay.var("var_4727", dtype = "float32", shape = (1170,))#candidate|4727|(1170,)|var|float32
call_4724 = relay.TupleGetItem(func_1786_call(relay.reshape(const_4725.astype('int64'), [360,]), relay.reshape(var_4726.astype('float32'), [180, 1]), relay.reshape(var_4727.astype('float32'), [1170,]), ), 0)
call_4728 = relay.TupleGetItem(func_1790_call(relay.reshape(const_4725.astype('int64'), [360,]), relay.reshape(var_4726.astype('float32'), [180, 1]), relay.reshape(var_4727.astype('float32'), [1170,]), ), 0)
output = relay.Tuple([call_4701,call_4724,const_4725,var_4726,var_4727,])
output2 = relay.Tuple([call_4702,call_4728,const_4725,var_4726,var_4727,])
func_4729 = relay.Function([var_4726,var_4727,], output)
mod['func_4729'] = func_4729
mod = relay.transform.InferType()(mod)
var_4730 = relay.var("var_4730", dtype = "float32", shape = (180,))#candidate|4730|(180,)|var|float32
var_4731 = relay.var("var_4731", dtype = "float32", shape = (1170,))#candidate|4731|(1170,)|var|float32
output = func_4729(var_4730,var_4731,)
func_4732 = relay.Function([var_4730,var_4731,], output)
mutated_mod['func_4732'] = func_4732
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1344_call = mod.get_global_var('func_1344')
func_1345_call = mutated_mod.get_global_var('func_1345')
call_4757 = func_1344_call()
call_4758 = func_1344_call()
func_441_call = mod.get_global_var('func_441')
func_445_call = mutated_mod.get_global_var('func_445')
call_4771 = relay.TupleGetItem(func_441_call(relay.reshape(call_4757.astype('float32'), [13, 10, 9]), relay.reshape(call_4757.astype('float32'), [13, 10, 9]), relay.reshape(call_4757.astype('float32'), [13, 10, 9]), ), 3)
call_4772 = relay.TupleGetItem(func_445_call(relay.reshape(call_4757.astype('float32'), [13, 10, 9]), relay.reshape(call_4757.astype('float32'), [13, 10, 9]), relay.reshape(call_4757.astype('float32'), [13, 10, 9]), ), 3)
func_3115_call = mod.get_global_var('func_3115')
func_3116_call = mutated_mod.get_global_var('func_3116')
call_4789 = relay.TupleGetItem(func_3115_call(), 0)
call_4790 = relay.TupleGetItem(func_3116_call(), 0)
func_3239_call = mod.get_global_var('func_3239')
func_3242_call = mutated_mod.get_global_var('func_3242')
call_4791 = relay.TupleGetItem(func_3239_call(relay.reshape(call_4789.astype('float32'), [15, 14, 5])), 1)
call_4792 = relay.TupleGetItem(func_3242_call(relay.reshape(call_4789.astype('float32'), [15, 14, 5])), 1)
var_4798 = relay.var("var_4798", dtype = "bool", shape = (10, 3, 6))#candidate|4798|(10, 3, 6)|var|bool
bop_4799 = relay.power(call_4771.astype('float64'), relay.reshape(var_4798.astype('float64'), relay.shape_of(call_4771))) # shape=(10, 3, 6)
bop_4802 = relay.power(call_4772.astype('float64'), relay.reshape(var_4798.astype('float64'), relay.shape_of(call_4772))) # shape=(10, 3, 6)
func_1682_call = mod.get_global_var('func_1682')
func_1683_call = mutated_mod.get_global_var('func_1683')
call_4805 = relay.TupleGetItem(func_1682_call(), 2)
call_4806 = relay.TupleGetItem(func_1683_call(), 2)
output = relay.Tuple([call_4757,call_4789,call_4791,bop_4799,call_4805,])
output2 = relay.Tuple([call_4758,call_4790,call_4792,bop_4802,call_4806,])
func_4816 = relay.Function([var_4798,], output)
mod['func_4816'] = func_4816
mod = relay.transform.InferType()(mod)
mutated_mod['func_4816'] = func_4816
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4817 = relay.var("var_4817", dtype = "bool", shape = (10, 3, 6))#candidate|4817|(10, 3, 6)|var|bool
func_4816_call = mutated_mod.get_global_var('func_4816')
call_4818 = func_4816_call(var_4817)
output = call_4818
func_4819 = relay.Function([var_4817], output)
mutated_mod['func_4819'] = func_4819
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4832 = relay.var("var_4832", dtype = "float32", shape = (15, 12, 5))#candidate|4832|(15, 12, 5)|var|float32
uop_4833 = relay.erf(var_4832.astype('float32')) # shape=(15, 12, 5)
output = uop_4833
output2 = uop_4833
func_4835 = relay.Function([var_4832,], output)
mod['func_4835'] = func_4835
mod = relay.transform.InferType()(mod)
mutated_mod['func_4835'] = func_4835
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4836 = relay.var("var_4836", dtype = "float32", shape = (15, 12, 5))#candidate|4836|(15, 12, 5)|var|float32
func_4835_call = mutated_mod.get_global_var('func_4835')
call_4837 = func_4835_call(var_4836)
output = call_4837
func_4838 = relay.Function([var_4836], output)
mutated_mod['func_4838'] = func_4838
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1431_call = mod.get_global_var('func_1431')
func_1433_call = mutated_mod.get_global_var('func_1433')
call_4863 = relay.TupleGetItem(func_1431_call(), 0)
call_4864 = relay.TupleGetItem(func_1433_call(), 0)
func_3676_call = mod.get_global_var('func_3676')
func_3679_call = mutated_mod.get_global_var('func_3679')
const_4875 = relay.const([8.821300,2.222300,3.631039,-1.240902,7.663989,7.116352,-4.870549,4.583753,-8.709877,-5.355450,-2.520838,7.778707,-9.597544,9.331687,-9.563879,-7.889766,1.440206,9.927165,-7.797358,-6.351130,9.865699,-8.010679,3.823511,3.042659,-7.175411,-2.211143,-8.162193,1.438315,-9.558623,-1.185023,0.814353,-3.637083,-4.160362,5.251675,5.873606,-0.417966,-2.144037,-6.517384,-1.235359,1.371807,-2.294074,7.519811,9.585909,0.101548,-4.578604,-4.873962,5.819000,-1.299712,3.350260,-8.622359,6.720142,4.084085,5.390804,4.952064,-0.442053,-7.521250,-6.461805,7.826464,6.319675,6.361683,3.865515,0.788458,-6.957998,-0.646794,-2.971897,8.590154,-8.302593,7.559880,-7.834533,3.724704,6.110392,1.449413,-7.998925,-5.618036,-8.759130,9.291160,4.530361,-3.646705,-5.543118,3.992943,7.736343,-0.801395,-3.996443,3.584122,-3.586907,4.554495,-6.610845,-3.035986,1.915332,-8.361499,-5.195644,5.236571,6.372777,-1.111189,1.023247,-8.455305,-0.933229,-4.969544,-4.771729,8.018451,-3.968470,-3.687706,-1.715047,0.883057,1.957236,0.330539,5.231531,-1.638092,-4.422113,-3.615337,-7.103317,-4.835554,3.827157,9.049486,-3.490449,0.023700,6.199685,5.277785,-9.139632,-2.485726,9.065680,1.844787,-2.398232,8.930977,-0.207006,-1.252828,-7.254756,9.987080,9.800476,7.389604,-4.386850,9.097784,-5.519507,0.114020,6.733671,7.878104,2.067269,-9.574119,-8.294713,-1.122785,6.880420,1.525997,4.239197,-1.573954,-4.304425,-3.167755,-7.368990,-1.577154,-7.976348,1.812655,7.642157,-8.606131,4.777044,8.822284,-3.942548,6.356453,-8.061890,4.167938,7.970638,5.938948,8.759679,-2.496434,1.814890,5.083031,-6.746679,8.048713,6.049277,-8.015177,-9.580149,-4.366917,4.575842,9.211144,-5.088530,4.056797,-6.722134,5.477162,-0.558724,3.537731,2.905861,-8.607786,0.554806,2.833676,0.519141,2.481496,3.505182,9.147200,5.111317,7.893840,4.364324,-9.562376,0.737790,-9.298354,9.122004,3.384354,-4.192212,1.006601,1.910447,-9.564330,-6.075678,3.582692,9.603559,1.772790,1.628734,-6.961802,4.831885,-6.372142,5.402831,6.138904,-8.191843,6.429648,-4.711099,-9.614715,6.638922,-6.369355,-4.638645,-2.196844,-3.300045,1.457625,-3.629209,9.632104,-3.363956,-4.792571,-7.081713,-1.506732,-2.737394,9.862926,-3.670031,-9.312542,-1.071737,-3.794160,-7.125585,-7.647643,-3.661337,-1.143357,5.027282,-2.417678,9.124768,3.485151,-7.409968,-8.933222,0.744756,1.985358,8.994303,-0.669341,5.120633,7.659748,4.598395,-5.882762,0.380991,-1.247042,-3.719795,-6.827960,5.399796,0.096757,8.010859,-7.772561,3.598983,5.730149,1.192856,-5.928621,-0.016449,3.892611,6.245737,2.901096,-5.335723,-9.963544,-2.181773,3.129562,-2.115275,-4.387036,-0.706085,6.592208,-5.157255,5.898017,-6.371714,-4.294766,9.229594,-4.224992,-6.464075,7.709692,2.689780,0.099783,-7.464570,6.046439,-7.959218,-7.892961,-1.508058,-8.898003,-6.671812,-9.782885,-1.329611,6.267635,-7.994714,-0.722850,8.137224,-2.419799,5.362216,8.953022,-9.364718,2.940017,-6.458029,8.567514,8.294632,4.028944,6.475597,-2.156524,6.144456,7.946332,5.839891,-0.981284,4.054296,5.359547,-1.756024,-8.478574,0.562714,5.866995,-4.359262,-1.116665,8.467740,9.969095,7.028491,-0.964180,-4.311689,0.940303,2.707356,-0.659554,-8.287185,-4.502955,-9.657949,5.211303,-1.779401,1.060858,8.840029,-2.520634,-9.590369,-5.066656,8.209656,-7.188646,-1.240371,8.183140,1.401126,1.621541,4.912404,-6.008564,-5.267820,0.240222,0.322274,0.180780,-2.014872,2.415553,-4.425103,-5.284234,-5.871155,6.431654,-5.072842,-4.236083,-8.029921,1.147998,7.682570,-5.936045,4.608933,-3.587827,-3.725089,-3.627068,8.271648,1.135499,8.763824,7.576066,-1.976229,-0.836744,1.885139,-3.860945,-1.746365,2.736354,-5.271551,-1.409093,4.288857,-3.453997,-5.146650,-1.930314,-2.653270,9.112599,-6.220662,6.015458,0.640439,1.118357,-1.062734,4.271217,-6.972029,0.723734,-2.838918,-0.614328,-8.104750,9.762362,7.578761,0.986103,-5.885448,1.002899,0.197812,8.170806,1.448694,-6.897193,4.084877,-0.485567,-3.009796,-2.399635,1.742701,1.790326,3.074672,0.679592,-1.675047,-8.763953,0.001001,0.698724,-0.978911,-1.910722,-4.104157,2.529629,-8.608020,9.705949,1.644451,0.370007,-5.360822,5.277921,2.315356,3.896785,8.209720,-2.341671,7.260496,9.410834,5.738556,6.091210,-9.633204,3.722175,6.793318,-7.140954,-2.942442,8.002652,-0.631614,-8.725552,3.934442,2.127843,0.138551,-7.930157,-1.871316,-8.631567,6.805857,6.650037,-1.381807,-9.342075,2.343468,5.057261,-8.816876,-3.703896,1.298382,-3.530778,-0.291567,1.301882,-1.252451,3.069160,7.052840,-9.358274,7.175586,7.495002,-4.609306,6.503251,-7.416621,6.215716,-1.000401,7.195638,-4.701493,-5.203150,8.640814,-5.131389,4.484565,-9.804568,9.248048,8.871496,-8.501359,-8.231393,-5.522360,-4.232263,-0.855980,5.960318,-5.624834,-3.202895,1.649892,4.272947,-5.104198,-1.833761,6.497344,6.190789,1.431884,-8.740209,2.469444,-1.198431,-9.273224,-8.598198,-4.383934,4.058685,-0.508297,5.909151,5.544922,-6.588253,-6.998228,5.657184,-3.924105,-8.719749,-2.873131,4.589657,0.501265,8.217338,1.080316,9.853677,-4.608962,-2.513942,-7.326308,-3.676500,-0.984869,-3.935869,5.075600,7.225923,-7.283453,3.833687,-8.885463,-4.571322,-1.639209,6.381431,4.025624,0.387919,-1.211585,-2.325783,3.337166,-8.757220,0.986280,-9.560520,-4.312144,-0.097104,3.573056,2.041625,8.462720,1.912286,-1.744003,9.473662,7.887349,9.150637,-3.430943,0.243297,-4.264716,5.410602,-3.465781,-6.696422,8.062219,2.414537,-3.311331,-7.346415,-0.522645,3.104789,5.532599,-2.069206,1.923945,-6.722405,2.615271,0.745986,4.282769,0.139683,-6.319584,-1.837480,1.818892,-9.272711,1.002669,6.584449,-8.750583,-8.670777,1.090559,4.022558,-7.376568,-1.981204,6.513108,7.990179,-3.993109,-6.970157,-6.316146,1.987377,-0.812624,9.324538,-4.583245,9.274942,4.038614,-1.330089,-1.014961,6.358771,2.593362,-7.614908,0.261757,5.763798,-0.664837,-3.244194,3.203394,-3.634716,6.635227,5.713561,-4.521745,-0.874807,-7.772877,-7.737683,-1.097940,5.266332,1.119443,-8.372881,1.337705,9.625977,3.797154,-3.728156,1.146643,-2.420630,-8.989861,-4.510811,-3.482966,-5.317107,-4.275126,6.400336,-9.964077,-9.989537,-9.843703,-8.477117,2.152855,-6.645717,4.670911,6.319646,3.002374,1.868252,3.026606,6.363946,-3.415027,-8.812563,-2.520355,-3.587605,-9.571850,3.974678,4.090506,-0.517663,5.957446,-6.962850,0.206688,2.734614,6.659011,-8.268777,-7.239887,5.709876,1.920140,7.406564,0.604079,-8.225246,2.195148,7.206745,8.466184,1.694815,-1.109482,1.635400,6.153602,-7.593595,7.903383,7.067590,-6.797928,-3.913028,-1.215820,-0.174778,9.156218,0.155622,-0.831429,-4.739355,-3.753031,-5.331922,4.857754,-4.344556,-2.281589,1.856849,9.259865,3.643958,2.715979,0.096984,-6.037370,-4.531935,-3.667837,-9.194980,-3.406954,-5.553021,-6.706977,4.857089,-5.137211,-0.332743,-1.261009,-4.708624,-6.635370,-1.947359,5.702807,0.364306,8.931636,-8.714757,0.228930,-4.110375,7.749132,-6.843416,8.206425,9.050844,7.010468,-8.019891,5.962800,6.702835,-4.211885,-3.411252,1.419122,7.762606,1.720405,-8.589134,-9.337925,-2.838006,2.132280,2.108806,-3.461527,-2.420049,-8.107221,3.608310,2.773317,9.225982,-4.129876,6.546623,8.415421,-1.797575,-1.318996,9.623420,4.691013,-2.887317,-9.247451,0.489615,-5.955006,-8.816448,-9.420989,9.031161,-3.267018,-2.365729,-2.969502,-8.791966,-8.957473,-2.141899,2.941278,-3.684666,7.686366,4.422711,-1.241796,-2.407928,-3.356392,-3.743245,-8.428368,-4.747948,-4.621769,-4.853228,8.189694,9.371070,3.347250,-2.987458,0.966193,-4.278256,-5.994586,9.884928,-3.248758,4.346643,-4.519531,-7.026707,8.811468,-6.159437,5.189097,-5.222713,3.244990,-3.736625,3.268091,-0.331150,4.488945,7.831442,-0.792526,1.786217,-9.612905,-3.401371,-6.612045,-6.976189,7.866337,5.251302,7.144733,1.976697,9.982240,0.080080,2.597850,-5.488276,-7.343518,-7.901609,-7.264975,-5.771767,-1.424529,9.248667,0.600401,7.488287,-9.252720,4.844812,-6.624811,4.124355,-8.741537,6.463494,-7.536987,3.050512,2.976019,0.535619,1.818606,4.747483,-2.879421,-8.546547,-6.084177,8.158462,-5.260897,-3.383998,1.420635,4.329027,-1.720563,7.286879,-7.545452,-6.043032,-5.293479,1.632349,6.145934,-8.244742,2.971526,7.142966,-3.021977,9.923142,4.631746,1.517697,9.472466,-0.530433,9.429195,-0.360080,-7.659587,-7.474309,-3.195117,-1.657563,-3.198153,-0.520144,9.701394,2.756119,-6.396080,4.837681,-5.993775,-8.027882,7.834125,7.970443,1.316801,-8.166383,-8.579441,-0.462786,-5.580088,-0.200932,0.927164,-3.512528,-2.301919,-9.968516,-1.883235,-8.996373,2.348387,-0.426395,-2.162617,5.721500,6.909491,9.555920,-9.679121,1.160751,1.615145,4.068437,-8.770383,9.041653,5.529773,1.490741,0.697126,-5.211836,-8.514211,2.183771,7.442713,-0.946053,-0.603508,-9.693693,-2.344333,4.600272,-5.492181,-2.992206,6.244506,0.063560,-1.493362,-6.262587,3.142218,-9.837262,-7.927662,-8.485188,-3.958586,-1.226412,-3.324160,-9.229205,-2.119462,-2.819935,-4.334474,5.524855,3.431150,2.582789,1.296501,6.899924,-8.004393,4.533643,-1.794961,-7.194493,-6.308199,1.369553,-3.785626,3.173222,-0.492689,0.115930,8.867413,-7.530287,8.144869,-6.989862,3.587420,5.897218,0.145149,-6.406119,-9.021374,-3.740022,-5.660128,-8.212770,6.889371,1.344345,8.334424,0.568001,-2.325059,2.669328,6.105292,-0.914705,-5.330334,-1.511441,-6.794454,6.522850,-1.270964,-3.924355,4.059563,0.388887,-8.451725,-3.468083,5.213783,-8.449690,3.493984,4.139222,8.469018,-0.288472,-7.133003,2.280468,9.409483,9.320323,4.451152,-5.479203,-2.907631,1.029318,0.235192,3.139606,7.616003,-6.111132,3.079989,7.043916,1.898950,-7.660621,2.532881,0.960251,-7.256488,-8.629257,-9.098828,0.888721,-1.470946,1.413934,-6.692764,-5.955702,8.978540,7.445395,-7.695994,8.622361,-9.585508,5.241893,-3.875796,-8.512734,-0.863949,-7.760620,-1.548300,4.574107,-8.445905,-5.660115,2.353104,9.838020,1.142134,-4.370072,2.939278,9.774647,4.862865,9.532662,6.848524,6.779817,-3.273900,-4.553705,6.311462,5.411058,6.803090,-7.158894,-4.216276,8.615854,-9.983330,-6.156861,8.804452,7.581756,-1.128537,-9.596180,9.983676,0.212395,3.966981,-0.857155,-3.450951,3.291794,7.200938,-3.910280,6.088609,4.690564,3.964487,3.395536,0.772438,-8.084328,-4.732403,-3.883702,-5.689523,3.382556,1.947939,-2.290287,-0.992855,9.392976,9.516287,6.337217,0.436018,4.626717,-8.853738,-7.657996,8.101972,-8.839827,0.005755,1.577469,-2.395297,-0.401474,-3.288672,5.764528,-4.990826,-9.472210,7.178863,-8.808614,-7.307894,1.627668,-9.754978,3.735128,-0.932212,2.775623,-8.080832,1.276518,-9.202565,-9.908053,-1.317475,9.701495,8.525559,0.611653,0.040753,7.418567,5.105501,4.117152,-4.770291,9.445574,-0.904714,4.819391,-4.913893,4.341078,-6.068892,2.657528,-0.024857,1.203797,2.076204,-5.679577,-5.629559,-9.266349,-9.883996,0.686752,-1.372260,-7.916076,-0.154940,9.077666,-0.463670,8.623080,4.198303,-9.688755,0.701001,2.745260,-3.473640,9.454176,8.079117,-5.472938,5.483336,5.735157,-1.370058,-6.587700,6.069603,3.807225,1.212075,-7.349005,-2.804766,-1.710838,-2.946820,-4.989765,9.961511,0.635466,0.357331,-6.435548,5.667523,0.467906,0.757422,-9.666057,5.120335,7.359211,-3.251671,2.707529,-8.595926,-3.171942,2.493333,2.545857,5.513983,-6.318137,-4.554589,2.768560,-5.047451,3.220317,5.743805,-5.904645,-2.245072,5.296925,7.482719,6.554011,-3.406949,-5.320161,-4.550085,-4.694446,-6.393098,-7.017264,3.814178,-0.716881,-6.963334,-3.964928,-4.496872,2.349242,-1.632505,5.839608,2.506514,9.694849,2.779747,-5.185982,8.959135,2.422733], dtype = "float32")#candidate|4875|(1170,)|const|float32
call_4874 = relay.TupleGetItem(func_3676_call(relay.reshape(const_4875.astype('float32'), [1170,])), 1)
call_4876 = relay.TupleGetItem(func_3679_call(relay.reshape(const_4875.astype('float32'), [1170,])), 1)
output = relay.Tuple([call_4863,call_4874,const_4875,])
output2 = relay.Tuple([call_4864,call_4876,const_4875,])
func_4890 = relay.Function([], output)
mod['func_4890'] = func_4890
mod = relay.transform.InferType()(mod)
output = func_4890()
func_4891 = relay.Function([], output)
mutated_mod['func_4891'] = func_4891
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2956_call = mod.get_global_var('func_2956')
func_2958_call = mutated_mod.get_global_var('func_2958')
call_4907 = func_2956_call()
call_4908 = func_2956_call()
output = relay.Tuple([call_4907,])
output2 = relay.Tuple([call_4908,])
func_4915 = relay.Function([], output)
mod['func_4915'] = func_4915
mod = relay.transform.InferType()(mod)
mutated_mod['func_4915'] = func_4915
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4915_call = mutated_mod.get_global_var('func_4915')
call_4916 = func_4915_call()
output = call_4916
func_4917 = relay.Function([], output)
mutated_mod['func_4917'] = func_4917
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1277_call = mod.get_global_var('func_1277')
func_1279_call = mutated_mod.get_global_var('func_1279')
call_4930 = func_1277_call()
call_4931 = func_1277_call()
output = relay.Tuple([call_4930,])
output2 = relay.Tuple([call_4931,])
func_4934 = relay.Function([], output)
mod['func_4934'] = func_4934
mod = relay.transform.InferType()(mod)
output = func_4934()
func_4935 = relay.Function([], output)
mutated_mod['func_4935'] = func_4935
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1986_call = mod.get_global_var('func_1986')
func_1988_call = mutated_mod.get_global_var('func_1988')
call_4938 = func_1986_call()
call_4939 = func_1986_call()
uop_4943 = relay.asinh(call_4938.astype('float32')) # shape=(2, 15, 8)
uop_4945 = relay.asinh(call_4939.astype('float32')) # shape=(2, 15, 8)
uop_4951 = relay.sigmoid(call_4938.astype('float32')) # shape=(2, 15, 8)
uop_4953 = relay.sigmoid(call_4939.astype('float32')) # shape=(2, 15, 8)
output = relay.Tuple([uop_4943,uop_4951,])
output2 = relay.Tuple([uop_4945,uop_4953,])
func_4957 = relay.Function([], output)
mod['func_4957'] = func_4957
mod = relay.transform.InferType()(mod)
output = func_4957()
func_4958 = relay.Function([], output)
mutated_mod['func_4958'] = func_4958
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1235_call = mod.get_global_var('func_1235')
func_1237_call = mutated_mod.get_global_var('func_1237')
call_4978 = relay.TupleGetItem(func_1235_call(), 3)
call_4979 = relay.TupleGetItem(func_1237_call(), 3)
func_3239_call = mod.get_global_var('func_3239')
func_3242_call = mutated_mod.get_global_var('func_3242')
const_4992 = relay.const([-5.646858,-9.788700,-8.600668,7.511538,1.529513,-6.757204,0.772731,-7.185952,-8.998297,-4.408908,3.507771,-7.403376,-6.608275,-8.564915,-2.325509,-4.784968,7.744484,-5.884827,-6.592295,-0.486215,6.653114,9.180456,-4.529263,-0.094753,-2.833497,-9.003980,-7.195891,-7.125996,0.177300,-9.334048,5.080483,1.261899,9.518879,6.080664,4.541731,6.734974,-7.049646,-9.264627,7.907015,-0.812498,3.588519,6.297340,0.450082,6.949464,-5.647186,-4.834346,-5.371253,-6.238959,4.013307,5.104552,4.824639,5.888239,-0.766071,-3.314739,-9.790707,1.683604,3.444939,-8.753855,-5.580544,-1.951650,5.330619,-6.544340,-8.276688,-9.174685,-7.583946,-2.497614,-1.657615,-4.113650,8.845396,-6.226288,5.318461,-3.901944,-1.026949,9.979489,-3.252307,2.577610,-5.749947,9.960397,-6.933601,-9.441119,8.235892,-9.961968,9.416053,-0.966575,1.292701,-9.812694,-6.979591,-5.916975,3.179959,5.923879,9.246750,-8.133406,2.210260,-1.264868,0.851802,-8.090155,1.322730,-7.799638,7.745489,-0.156329,-1.661466,8.933534,9.594362,9.376579,1.776268,-0.778294,-9.973932,-8.145164,-9.420278,9.519635,-5.713040,-3.482031,0.433913,-1.388794,-9.619534,0.071620,3.759797,5.309622,-0.802176,-4.660040,-4.283580,-0.089461,9.460626,-5.242440,3.880606,7.359828,4.537952,-9.083466,-9.578993,-3.517000,2.451777,6.543343,-8.917405,4.931001,-0.373609,1.504828,-3.706425,6.045663,-7.152252,8.825428,0.885096,0.303260,-7.737044,4.477500,-9.246880,6.328864,-5.094797,4.908828,-6.398041,4.009734,-5.943969,7.576833,4.590139,-6.077458,-5.615979,0.721016,-6.793837,-6.257310,-8.683958,8.939215,7.460620,-1.521326,-9.531160,9.035415,-4.098629,4.457702,7.279780,8.727940,4.674604,-8.817652,5.691180,7.734777,7.863748,6.077964,-7.088546,-5.485036,0.538053,3.288588,-6.186142,-5.439568,9.305741,9.892481,-8.584216,9.024648,-9.133034,7.125691,-4.227304,8.993701,8.109525,4.327633,-9.753809,5.865965,6.885657,7.061666,5.766477,-7.902652,7.664090,5.595741,1.199778,5.955963,9.624750,0.104502,4.879695,6.362309,1.331416,-1.429385,-4.932474,-8.012931,-3.658304,-4.759426,8.005208,8.775462,-6.138435,2.563257,1.199533,-5.335714,8.659625,-6.269245,-1.774976,0.964735,5.705689,5.525083,-7.886819,9.946951,1.433492,-7.546910,-0.543270,1.590270,5.247633,-1.029263,7.694934,9.653349,5.482678,-6.626041,8.354213,6.705620,1.403875,-4.132835,-5.682004,8.115523,0.476844,5.350369,9.548562,6.053672,1.746667,8.037149,-5.609407,9.868243,9.630757,4.051954,-9.280459,0.208425,-9.502339,5.886914,9.164225,-3.624763,-3.006502,-7.421112,2.932945,-4.467448,-0.100054,6.244766,-0.907519,-5.202708,-0.902173,-0.536194,-5.367164,9.480404,-8.180906,-3.404406,8.795899,-9.046844,-2.262259,3.627526,-4.096082,-4.038419,5.805720,2.855092,-7.545205,4.003349,-4.864870,4.475894,6.572062,3.002266,9.725234,6.921123,-2.657870,3.924189,3.552252,-5.926145,-9.428421,-3.845829,4.545154,-4.747052,5.628216,-2.400734,4.340982,-9.947329,-6.879500,-0.903823,0.853336,-4.120228,-0.812050,-2.608985,-9.233729,9.094838,1.871392,4.024186,-4.384617,1.200359,1.215751,3.068839,4.935815,-1.012721,0.650800,-0.262675,-6.029166,-4.954351,-1.714764,-8.890299,-9.297051,6.626094,9.179219,-9.337685,-5.446845,8.094112,3.699148,1.390800,6.981192,3.424587,-4.038900,1.795684,-3.634493,5.825938,3.705595,-4.545871,-0.445570,7.683467,-4.655023,2.198557,5.732074,-4.461305,5.549652,-2.823840,8.900509,2.236335,2.614947,9.758213,-6.835281,-4.064489,-6.154358,1.367992,-3.749339,1.790872,-2.503766,-6.238536,0.798920,4.915764,-5.534071,9.987493,6.904463,5.174811,-3.701533,-5.719505,-2.832057,-8.082275,7.767809,5.088091,-3.785737,-1.944301,0.778020,6.550028,-9.937326,2.615104,-1.200115,-4.133658,4.344604,-3.372772,-8.154811,-1.313862,4.691748,-3.522294,0.687295,-6.688695,-8.433047,-6.805068,7.376074,-3.091310,-9.544937,-4.782200,3.666313,-3.158907,3.996165,-9.168135,-6.004801,-0.368750,1.189685,-0.612357,-1.269208,-5.643602,-6.540192,-9.443829,-8.045527,4.003689,-3.065644,8.851666,-7.582702,-3.543207,-1.191916,-4.798708,3.361787,-3.928607,5.090182,8.340079,-8.355474,-8.085099,9.541557,-3.573238,7.574443,-7.101578,-9.514381,6.252974,-7.251582,-9.180394,-3.213312,5.172972,9.892350,-9.127934,-4.065841,-1.914743,-6.628194,0.635947,0.233033,3.592542,8.959922,-5.949356,-9.742832,4.991062,0.840525,3.635245,-3.617177,0.045251,8.809926,-3.594614,-0.229505,-8.804163,3.620944,-1.837297,6.746396,8.960750,2.262036,-8.924014,-1.249028,-7.484372,7.821016,5.267981,-8.365456,2.312121,7.963917,-8.104548,-9.819239,-2.518776,-2.334058,-1.604839,-4.534129,7.467718,8.015781,2.728743,9.908522,3.576308,-1.008514,-1.432998,-1.675034,-2.482691,9.519044,9.490670,7.559483,0.587125,-5.860745,0.029488,4.060375,-5.028211,0.968083,-7.151595,-1.139456,5.304828,3.692102,7.619942,-6.322721,5.644305,-8.093720,7.410785,-5.841600,-1.632251,2.609534,7.359267,-9.149784,4.611583,-1.637287,-5.833491,-1.476130,3.657641,8.351901,8.603716,-5.638865,7.792995,5.455092,-2.039568,9.798849,-5.869428,-8.375156,2.234107,2.113330,-5.348106,7.662163,-5.468304,5.181746,5.651934,3.651414,-7.790284,0.472127,-3.867846,-3.407343,-4.807153,8.314776,-6.717156,-1.636382,-9.392383,2.401700,0.804341,6.312232,-5.709686,4.172566,0.822445,-5.217759,-1.599633,5.122413,-5.965237,1.467941,2.061538,6.050995,8.438924,-8.988153,3.824933,-5.153718,-9.865457,3.500374,-1.347805,-1.010817,3.942659,1.201014,-1.306210,-3.283615,1.155219,1.784392,0.568146,-4.667096,-3.026559,-1.750004,-6.053520,1.625328,6.645851,8.979285,4.875137,3.206157,-9.025362,7.418710,-0.943107,5.346111,3.300038,-2.965951,9.677343,1.729777,1.970667,-2.693724,3.113440,-0.674582,-4.539851,-3.283226,0.207401,-9.958190,9.039919,-6.213492,1.893327,8.627640,-8.985067,6.346665,-5.357475,-8.284709,5.861207,-8.338290,-0.086152,8.308957,-7.233988,-8.894412,7.471805,-0.933328,-3.562154,-5.037628,-2.810167,7.803561,-0.362663,1.878935,2.797856,-7.411937,-3.435434,9.598849,-3.802335,6.910356,9.202299,-0.150481,-0.399533,8.706972,-7.113211,-5.388378,4.251838,8.427292,2.385418,-0.633075,-7.629814,0.231930,2.756261,8.244681,5.169813,6.748467,4.156101,8.798545,-6.580313,-0.211528,2.741682,4.695902,-4.092831,-2.152582,6.704929,5.877278,0.334334,-6.272229,1.080524,-1.917100,-2.017469,8.952875,-3.756566,6.037839,4.214757,3.160886,6.211632,1.578388,7.122004,9.810532,5.087939,6.613877,3.438246,5.045249,1.842816,9.235140,1.972410,8.841022,4.668331,-8.813957,5.092325,3.699587,8.970276,-7.639983,-4.750305,7.159945,-7.472332,3.740188,1.457802,7.232522,-6.002685,-8.457743,5.621943,6.895210,4.158297,-7.203659,8.980079,8.360491,-3.812039,-1.879739,6.561413,-9.337848,-0.468196,0.153159,7.403709,-5.174114,9.163439,0.712703,0.559870,5.627288,6.206043,6.995031,-9.742983,2.423657,-8.881514,7.932899,8.571564,-7.318725,1.587996,6.889697,-2.596482,3.256666,9.016693,-3.021761,0.806758,8.989401,0.601824,-5.610212,2.624404,4.538549,4.917588,8.180764,-3.624901,-8.989961,8.314115,-6.395126,6.284133,4.748690,6.075932,6.412214,7.758043,2.435104,9.903439,-5.401226,4.573957,5.840085,0.867708,4.635326,-1.692877,6.055960,-0.253864,5.878083,9.737827,-3.960354,-6.294921,-0.374913,-2.819377,2.151653,8.176275,-5.379087,4.640100,4.522715,-4.377347,-6.278876,-8.854568,-7.653025,-9.991985,-6.417339,-9.739533,-1.345657,8.493807,-5.102413,-9.149726,6.779047,-9.897482,-5.181094,1.694130,-2.603943,-9.944225,-1.865954,-6.439529,5.224437,-0.161226,0.905682,-0.930872,-3.794486,-8.390427,7.450024,-0.931217,-1.030458,-7.981558,-0.802150,-5.801661,6.113155,4.086989,7.256671,-3.854171,-4.614859,-8.164182,6.404378,1.541287,-3.801653,6.075538,-0.210411,9.309453,-2.653875,2.054376,9.684809,4.977562,1.727754,8.838867,-6.634757,0.603767,-9.914779,-1.865426,6.169296,7.989389,0.019845,4.189218,-5.464713,-6.088328,9.263537,2.074513,2.373805,3.561665,-9.397949,3.860658,9.865155,6.914248,5.152672,3.498808,-5.552056,-7.363096,3.554941,0.092456,-9.976599,-8.942322,-5.860575,5.896874,-5.533657,-2.097909,0.552046,-5.875144,-8.664765,-6.115009,1.637581,-6.678612,0.452205,-9.394337,7.532780,-2.042244,4.887995,7.319543,2.586224,-9.156335,1.735389,-2.983889,-5.486672,6.064756,-4.948157,-1.930006,-5.726827,6.245715,-6.217540,-0.087845,-0.322667,1.684839,-8.370341,7.482554,0.340481,8.784851,-7.343013,7.523895,-0.424045,3.633531,9.736356,0.489683,1.617025,4.181965,-1.263442,2.040130,-3.803505,-3.501298,0.460180,-9.197430,5.387817,8.224078,2.587167,0.195160,-1.235605,2.242606,-3.339613,8.402835,9.291975,1.990377,-1.988016,-7.471032,-1.698717,7.530011,-6.701584,-7.033448,-7.759834,0.369055,4.318418,7.115847,-1.995395,5.360914,9.867078,-1.444793,0.050643,-1.792479,-6.464400,-0.310974,-2.738514,-4.231360,-3.372886,-5.790056,-9.332767,-2.685558,-0.434318,0.003237,-5.498575,-1.646732,9.889804,0.066332,-3.348379,0.393829,-6.200352,4.517908,3.583689,-0.958845,3.120349,-7.785435,-0.940249,0.280887,9.648369,8.916385,2.677447,8.142103,-1.945946,2.079186,1.156993,1.534155,-1.254626,-7.847953,-6.775240,2.831468,5.929533,-6.885280,7.414653,8.077248,-4.055881,-2.437853,-1.071389,1.447410,-2.988505,4.424256,5.096528,-0.425895,-6.863560,2.643803,9.261399,-0.175261,8.379348,-1.770695,-4.525874,0.227571,3.521516,-8.687504,4.807200,-5.966992,-3.196383,7.008481,9.705752,3.024318,-5.509826,-1.712489,-4.585959,1.969444,4.523884,-8.776738,8.373789,9.272494,6.408912,-3.491655,9.022388,4.335439,-8.077769,9.120173,-8.087541,3.516091,0.154449,-4.138659,-2.244162,3.433478,0.518161,2.940140,2.715595,7.443960,-8.373149,-0.496453,9.352225,5.075287,-0.535562,6.799007,-7.462689,-3.197593,-1.675836,9.652133,-4.137228,0.435675,-0.884160,-6.228448,8.689092,-6.546149,5.204775,5.335317,-8.616076,-0.940234,4.725097,1.575396,1.147293,0.836747,-8.972808,-7.940590,-3.747236,4.456982,3.467930,-1.222271,2.486124,-3.337263,9.331987,0.778422,7.633326,8.628536,9.515448,-8.868649,-0.939486,6.265304,-3.476809,5.642532,8.481799,4.381737,-8.766068,0.127924,-9.562291,-3.451120,8.847754,-6.386800,5.186152,2.232890,-7.806729,7.603315,9.237982,-6.297156,5.760837,-2.080405,-2.474557,7.416920,-1.360842,-9.563796,-2.524240,-6.316843,5.831114,-9.474679,-6.804581,7.041270,0.429772,4.904346,6.306181,-7.209040], dtype = "float32")#candidate|4992|(1050,)|const|float32
call_4991 = relay.TupleGetItem(func_3239_call(relay.reshape(const_4992.astype('float32'), [15, 14, 5])), 1)
call_4993 = relay.TupleGetItem(func_3242_call(relay.reshape(const_4992.astype('float32'), [15, 14, 5])), 1)
output = relay.Tuple([call_4978,call_4991,const_4992,])
output2 = relay.Tuple([call_4979,call_4993,const_4992,])
func_5001 = relay.Function([], output)
mod['func_5001'] = func_5001
mod = relay.transform.InferType()(mod)
mutated_mod['func_5001'] = func_5001
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5001_call = mutated_mod.get_global_var('func_5001')
call_5002 = func_5001_call()
output = call_5002
func_5003 = relay.Function([], output)
mutated_mod['func_5003'] = func_5003
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2480_call = mod.get_global_var('func_2480')
func_2482_call = mutated_mod.get_global_var('func_2482')
call_5017 = func_2480_call()
call_5018 = func_2480_call()
output = relay.Tuple([call_5017,])
output2 = relay.Tuple([call_5018,])
func_5020 = relay.Function([], output)
mod['func_5020'] = func_5020
mod = relay.transform.InferType()(mod)
output = func_5020()
func_5021 = relay.Function([], output)
mutated_mod['func_5021'] = func_5021
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4086_call = mod.get_global_var('func_4086')
func_4087_call = mutated_mod.get_global_var('func_4087')
call_5082 = func_4086_call()
call_5083 = func_4086_call()
func_4175_call = mod.get_global_var('func_4175')
func_4177_call = mutated_mod.get_global_var('func_4177')
const_5090 = relay.const([1.864305,6.757099,6.362880,-0.438097,-9.985795,0.288843,6.597821,1.103466,-4.937099,-0.244995,-8.079994,3.989528,-8.865034,0.812468,-6.922385], dtype = "float64")#candidate|5090|(15,)|const|float64
call_5089 = func_4175_call(relay.reshape(const_5090.astype('float64'), [15, 1]))
call_5091 = func_4175_call(relay.reshape(const_5090.astype('float64'), [15, 1]))
bop_5123 = relay.right_shift(call_5089.astype('uint16'), relay.reshape(const_5090.astype('uint16'), relay.shape_of(call_5089))) # shape=(15, 1)
bop_5126 = relay.right_shift(call_5091.astype('uint16'), relay.reshape(const_5090.astype('uint16'), relay.shape_of(call_5091))) # shape=(15, 1)
output = relay.Tuple([call_5082,bop_5123,])
output2 = relay.Tuple([call_5083,bop_5126,])
func_5137 = relay.Function([], output)
mod['func_5137'] = func_5137
mod = relay.transform.InferType()(mod)
mutated_mod['func_5137'] = func_5137
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5137_call = mutated_mod.get_global_var('func_5137')
call_5138 = func_5137_call()
output = call_5138
func_5139 = relay.Function([], output)
mutated_mod['func_5139'] = func_5139
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2248_call = mod.get_global_var('func_2248')
func_2249_call = mutated_mod.get_global_var('func_2249')
call_5152 = relay.TupleGetItem(func_2248_call(), 0)
call_5153 = relay.TupleGetItem(func_2249_call(), 0)
output = relay.Tuple([call_5152,])
output2 = relay.Tuple([call_5153,])
func_5198 = relay.Function([], output)
mod['func_5198'] = func_5198
mod = relay.transform.InferType()(mod)
output = func_5198()
func_5199 = relay.Function([], output)
mutated_mod['func_5199'] = func_5199
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1235_call = mod.get_global_var('func_1235')
func_1237_call = mutated_mod.get_global_var('func_1237')
call_5203 = relay.TupleGetItem(func_1235_call(), 1)
call_5204 = relay.TupleGetItem(func_1237_call(), 1)
func_1591_call = mod.get_global_var('func_1591')
func_1593_call = mutated_mod.get_global_var('func_1593')
call_5219 = func_1591_call()
call_5220 = func_1591_call()
output = relay.Tuple([call_5203,call_5219,])
output2 = relay.Tuple([call_5204,call_5220,])
func_5222 = relay.Function([], output)
mod['func_5222'] = func_5222
mod = relay.transform.InferType()(mod)
mutated_mod['func_5222'] = func_5222
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5222_call = mutated_mod.get_global_var('func_5222')
call_5223 = func_5222_call()
output = call_5223
func_5224 = relay.Function([], output)
mutated_mod['func_5224'] = func_5224
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2248_call = mod.get_global_var('func_2248')
func_2249_call = mutated_mod.get_global_var('func_2249')
call_5262 = relay.TupleGetItem(func_2248_call(), 0)
call_5263 = relay.TupleGetItem(func_2249_call(), 0)
output = call_5262
output2 = call_5263
func_5280 = relay.Function([], output)
mod['func_5280'] = func_5280
mod = relay.transform.InferType()(mod)
mutated_mod['func_5280'] = func_5280
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5280_call = mutated_mod.get_global_var('func_5280')
call_5281 = func_5280_call()
output = call_5281
func_5282 = relay.Function([], output)
mutated_mod['func_5282'] = func_5282
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4095_call = mod.get_global_var('func_4095')
func_4096_call = mutated_mod.get_global_var('func_4096')
call_5283 = func_4095_call()
call_5284 = func_4095_call()
output = relay.Tuple([call_5283,])
output2 = relay.Tuple([call_5284,])
func_5319 = relay.Function([], output)
mod['func_5319'] = func_5319
mod = relay.transform.InferType()(mod)
mutated_mod['func_5319'] = func_5319
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5319_call = mutated_mod.get_global_var('func_5319')
call_5320 = func_5319_call()
output = call_5320
func_5321 = relay.Function([], output)
mutated_mod['func_5321'] = func_5321
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2260_call = mod.get_global_var('func_2260')
func_2261_call = mutated_mod.get_global_var('func_2261')
call_5325 = func_2260_call()
call_5326 = func_2260_call()
output = relay.Tuple([call_5325,])
output2 = relay.Tuple([call_5326,])
func_5338 = relay.Function([], output)
mod['func_5338'] = func_5338
mod = relay.transform.InferType()(mod)
mutated_mod['func_5338'] = func_5338
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5338_call = mutated_mod.get_global_var('func_5338')
call_5339 = func_5338_call()
output = call_5339
func_5340 = relay.Function([], output)
mutated_mod['func_5340'] = func_5340
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2830_call = mod.get_global_var('func_2830')
func_2831_call = mutated_mod.get_global_var('func_2831')
call_5344 = relay.TupleGetItem(func_2830_call(), 1)
call_5345 = relay.TupleGetItem(func_2831_call(), 1)
output = relay.Tuple([call_5344,])
output2 = relay.Tuple([call_5345,])
func_5357 = relay.Function([], output)
mod['func_5357'] = func_5357
mod = relay.transform.InferType()(mod)
mutated_mod['func_5357'] = func_5357
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5357_call = mutated_mod.get_global_var('func_5357')
call_5358 = func_5357_call()
output = call_5358
func_5359 = relay.Function([], output)
mutated_mod['func_5359'] = func_5359
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5368 = relay.const([[[-6.887701,2.162810,-3.544361,-8.934969,-3.815038,-9.781025,2.265229,5.236541],[4.720396,0.405170,8.166657,-4.215425,5.063243,-2.679101,6.956936,7.791863],[-5.729734,6.823877,7.606402,4.961267,1.985811,-1.942640,2.914620,-7.942357],[3.719885,-7.281404,5.863754,-5.668690,-1.577481,-0.595749,-8.561137,5.197734],[6.475748,6.254290,-8.210091,-4.351921,-0.107834,-7.949307,-3.190655,-2.950598],[-3.152303,1.693708,1.479069,4.318685,-8.186776,6.362997,4.721341,0.326329]],[[-9.840259,2.588935,7.300845,-1.620739,-7.826083,9.717308,4.624998,8.917643],[1.735201,1.959941,-7.824910,-0.428936,7.719471,-0.998870,-3.812796,5.410911],[-4.436984,5.057369,-3.178376,-4.976099,-4.562910,-6.625737,2.563636,6.647456],[-1.943725,-9.507274,1.727523,9.405694,-7.895583,7.006264,8.248447,9.671467],[9.841170,8.211270,4.485205,8.595811,-5.155535,8.267947,5.751179,-6.026620],[-5.190570,-0.400957,2.177356,-3.066292,3.899586,-0.414699,-1.799699,8.913532]],[[-4.016114,6.586099,-1.864594,4.844401,-1.473862,-6.667261,2.868299,6.342947],[8.251782,-4.281751,3.814774,3.871123,-1.762490,5.169495,4.488315,2.693235],[-9.969821,1.251930,9.584558,8.847998,-8.097113,4.158286,-8.517624,6.265657],[-1.187683,-8.075822,-5.115900,1.535233,9.058240,5.097944,8.332523,-2.054763],[6.475714,-5.761517,-0.517396,9.672338,2.137847,-1.726532,9.188178,-0.895279],[1.079981,-7.975423,-7.144083,3.348381,-1.416112,-5.964918,7.219274,0.058261]],[[2.642777,1.577782,9.065738,-3.008954,7.717308,-0.519683,-2.868963,-2.077510],[5.569822,6.706811,-0.034067,2.559079,0.177186,-4.958092,-7.382882,0.118021],[5.528034,3.244325,8.734639,-1.862529,8.432357,-9.068104,0.600774,1.256263],[0.554052,-3.104697,9.394654,-4.379040,2.678146,0.754875,5.296385,4.257965],[6.191381,9.738131,-2.313700,6.145622,5.021326,9.868799,4.918820,2.992020],[3.556775,-5.376728,-1.194979,2.481552,-2.277704,3.132337,-5.286124,-6.941763]],[[-7.712892,-8.217909,2.623920,-4.215999,5.559512,2.893951,-5.852965,7.382005],[-2.531931,4.318605,4.773051,5.347462,7.042174,4.874804,3.361319,-9.640895],[5.226935,2.860690,-6.312571,0.673316,3.228408,-6.321471,-4.914648,-5.185001],[-8.315766,2.462260,-5.993949,1.845078,5.578567,9.542800,-4.368593,-3.522717],[9.566895,4.880305,3.402049,1.100624,9.562986,1.414854,-7.593085,2.573972],[3.124906,-8.749335,8.704055,5.867561,-7.538903,4.629619,-1.354039,-1.735562]],[[7.469212,-7.810941,1.675919,-1.261998,5.776134,-6.246757,6.810557,-3.005525],[-4.017674,-0.217677,-6.589490,-7.781288,8.874137,-3.819798,-5.449363,5.599476],[-9.746954,-4.880082,4.279707,-4.870790,-0.917915,-9.167918,-0.786475,-1.399019],[3.504739,-9.844741,9.372530,-2.069037,6.494079,-5.671797,-4.531922,7.439491],[4.424413,-4.825964,-5.348689,-1.687844,1.670651,-8.674285,5.203003,-2.513066],[-8.342018,4.557125,6.482344,-5.980369,-4.712727,-3.239929,-1.650397,9.088089]],[[-7.239712,-7.801610,-8.220645,3.090185,-4.407223,-4.755122,1.253449,-0.383825],[7.889210,3.488281,-5.696262,2.967894,-2.506096,8.885622,-5.140689,8.647398],[-5.734586,0.854774,-6.057257,-3.726596,8.287259,-6.400858,5.866077,-6.540886],[-2.521765,9.290971,3.681303,2.010564,8.776706,-2.721325,5.716143,-6.772938],[9.128357,4.698919,-6.891492,-4.514101,-5.128922,-5.465309,-6.703998,-9.120634],[-4.816209,8.959540,6.558356,-3.887615,5.781345,-2.851865,-1.990066,-7.730515]],[[-3.429488,3.986898,2.923741,-9.470698,-2.522153,8.197983,4.104491,-0.722258],[4.404211,6.068343,-5.167930,2.138939,-0.326130,5.230672,-7.723699,3.930220],[5.777116,-0.302830,-9.753648,-4.104163,5.796319,4.770150,1.203355,8.730584],[4.660060,4.663595,-2.160371,7.504822,-6.695040,4.570774,-0.054872,-3.929266],[8.042531,-1.838084,9.444240,-3.038990,-9.893083,-2.085253,9.199087,3.032322],[-8.276070,4.507338,3.702994,-4.248126,9.543639,4.035160,-3.770184,1.807929]],[[-8.474470,5.253417,-5.575776,-4.271112,-6.466475,-6.071773,-6.275279,-9.586481],[9.650583,3.837597,3.766045,-6.534919,8.302384,-0.977541,9.984529,7.688371],[-1.392805,-4.573794,2.956403,5.813534,4.851826,6.148292,9.453653,-5.082665],[2.548071,-5.428554,8.672805,1.719245,-3.469042,-6.208991,5.095579,4.473241],[8.828481,-9.743205,-6.411463,-9.034081,-3.944052,-0.081096,5.220506,-8.093423],[-8.832953,5.804450,3.868160,4.505944,9.270631,-7.734593,3.979288,-7.260918]],[[3.203044,6.373340,-1.071336,4.988592,-7.953965,2.996402,-8.090880,-8.875112],[-8.178643,5.160411,1.503644,0.446424,-3.867906,3.680461,7.567252,-6.268086],[3.221055,-5.674552,5.122272,-8.632929,1.503573,-5.641724,3.752968,9.321610],[-8.863283,7.904026,6.475505,-7.052412,-9.264131,0.627808,9.951841,-8.999283],[-4.156346,9.249755,-4.435452,5.136434,7.966301,-3.395976,-9.041951,-9.689890],[-9.095066,-9.621640,-9.329629,7.948108,5.934708,-7.283045,7.891590,5.750264]]], dtype = "float32")#candidate|5368|(10, 6, 8)|const|float32
const_5369 = relay.const([[[1.448212,-6.813073,-1.613166,-5.037137,-2.188544,-7.798308,-7.409459,-8.084684],[-5.787595,8.500343,-7.227909,-4.990124,-4.881351,8.643918,3.132839,-7.500637],[3.511746,4.020081,-5.871995,-6.694552,9.060495,2.752606,7.702918,-2.815773],[-4.486672,9.468864,-8.344697,7.429869,0.570425,-4.909265,2.719959,-5.943585],[9.256406,-0.012543,1.650185,-7.935540,4.808437,-3.422309,-1.373682,-2.511009],[3.136469,9.721838,-2.827619,-4.441878,8.829003,-6.777955,5.329096,9.514453]],[[1.039150,-1.495599,-4.322994,4.801411,-0.275196,-9.318981,-2.259340,3.502789],[0.088075,-6.317989,3.025200,6.790412,7.938749,1.916735,-5.762685,-0.758204],[2.124307,6.051764,9.565303,4.979418,-6.449447,-6.417174,2.387901,-3.247600],[-5.949369,-5.301783,1.401386,9.262920,0.330080,9.946595,7.277673,8.855292],[-8.323036,3.125758,5.301827,6.406327,-7.135758,8.862926,3.336296,-9.982219],[-6.868590,4.602517,4.221091,-5.442550,-1.509542,-9.462287,0.948242,-4.218677]],[[-0.223402,-2.066713,-3.693715,-9.120869,5.202754,-9.931103,1.278153,8.565708],[9.213340,-0.929206,6.682969,-2.028355,-5.635254,8.679771,-1.081755,-0.811853],[6.425815,9.487685,-1.220959,9.717561,0.983908,9.915816,-9.642518,-0.771315],[9.906536,-9.544215,5.935734,-2.254151,-3.523625,-9.827553,1.414064,6.958819],[2.882804,6.084986,-8.491110,9.773303,-8.367974,7.365792,6.288964,7.675668],[-5.166311,8.541220,-3.713989,2.552329,-6.803967,5.966525,-8.977712,-4.682119]],[[3.316892,-9.718441,-8.652065,7.416939,-4.675978,-1.183435,-7.812512,-3.157976],[2.790735,5.886318,-2.501071,-2.547187,-8.188224,-8.543150,9.711190,-8.751987],[-8.022801,-1.221150,-1.434753,-4.328253,-8.872600,2.921004,-4.933939,7.922667],[4.370686,3.645854,-5.492950,-9.322643,6.607840,1.335094,-6.507242,-7.228498],[-9.549117,9.846566,-1.840089,3.739933,-6.316160,-0.049133,4.618733,5.086369],[-5.193012,-3.633031,-8.980739,7.708749,8.912644,-4.312513,-7.765640,4.188555]],[[-5.370761,0.478524,-7.621328,6.775039,0.318938,6.114495,-8.506557,-8.629276],[4.903957,6.461378,7.026882,3.244849,1.395238,-1.475062,-6.240021,2.761287],[6.240624,-6.745778,7.866435,-0.806895,1.645738,4.773899,-8.124947,-5.027126],[-2.423521,-2.980007,-6.706187,4.711507,0.878794,4.308442,8.364046,-2.291818],[0.989304,-7.075394,6.592539,-3.124909,-5.027307,-2.732343,0.445683,-1.236220],[-7.348875,4.427987,-9.899735,-8.038041,6.172536,-5.237254,-7.547177,3.039546]],[[7.536661,9.069913,-2.242011,1.028191,2.080277,-8.210494,-1.545534,7.877113],[2.915384,1.257744,9.438361,7.628386,7.453059,8.968297,8.431535,1.651687],[-3.614830,6.519391,-0.807973,3.906345,-2.466522,-3.720782,-9.513376,6.710474],[5.766558,3.923490,-2.667925,0.064936,-3.540363,-8.716238,2.070593,-7.833910],[-0.416548,-1.457120,-9.546977,-4.599097,3.287900,4.538305,-9.703358,7.141241],[6.494358,-6.111154,-2.960177,8.678909,-7.797097,-4.682837,-3.392132,6.699278]],[[-9.242185,3.284687,1.099720,1.415869,1.231657,-9.176776,2.042728,2.555354],[0.590219,-2.756018,6.132520,-7.739718,6.692904,5.273831,-7.186329,-2.843738],[-5.901796,7.276786,-3.473240,3.808748,-7.876224,8.018535,4.117123,-7.716969],[5.948148,-9.197565,4.841571,-2.564883,6.112130,-3.083395,4.935758,-5.639708],[-9.779701,7.682301,-7.035601,-9.635085,4.834734,-6.296493,-7.448269,3.340224],[-2.519842,-5.093513,-4.474210,-9.862915,-6.541986,7.163756,-1.336522,-1.529306]],[[-2.644873,9.629914,-1.070233,8.435070,3.554828,-9.089947,-8.667137,0.271588],[-7.823834,-9.731624,5.450717,-0.212703,0.742962,6.178195,-6.826403,9.884478],[0.191381,3.728370,-4.716152,4.714696,7.549688,-5.209596,3.650299,-6.425451],[9.951774,8.621895,6.949827,9.932260,4.446994,-1.754778,-7.040775,-3.464244],[-1.390144,0.922849,-2.197815,5.538428,-4.343320,-5.497796,8.613096,6.675948],[4.188407,6.062591,5.220477,-5.600206,2.277210,-6.394107,-3.038155,-2.876479]],[[-5.153508,9.937103,-7.136543,-8.673514,-0.643875,4.629043,4.464842,7.182212],[3.282293,-7.061979,5.517181,3.727932,0.572260,-3.172591,5.023421,5.132306],[-3.505864,-4.820722,3.058112,2.839658,2.856898,5.907008,-9.093848,-1.411405],[-0.619333,-8.656006,9.992942,-4.782836,3.693941,-8.399683,2.310153,-2.044553],[-1.167813,1.514325,-2.944429,-2.896588,0.760520,-6.079158,-4.323382,3.368117],[5.938196,-6.216693,6.725320,-4.489786,2.548415,3.754623,-6.278540,-0.692013]],[[8.683680,-6.583662,-8.916872,7.633879,-9.948838,0.299017,-9.859773,1.482260],[-8.589816,-7.067198,5.703575,-0.940691,1.197815,6.671863,-0.080311,7.999934],[9.799412,5.778957,-8.729534,9.174274,-1.475704,8.000136,5.281936,7.343634],[-6.679144,-9.776309,-3.079999,-7.313736,-6.376482,2.858812,6.098649,-4.756428],[-0.453164,-0.539349,2.134132,6.268410,3.067529,-0.951042,-7.816645,-3.757289],[-8.558713,-6.146618,-2.140304,-0.466007,-3.437721,0.739236,-5.244932,6.671078]]], dtype = "float32")#candidate|5369|(10, 6, 8)|const|float32
bop_5370 = relay.greater(const_5368.astype('bool'), relay.reshape(const_5369.astype('bool'), relay.shape_of(const_5368))) # shape=(10, 6, 8)
func_4258_call = mod.get_global_var('func_4258')
func_4263_call = mutated_mod.get_global_var('func_4263')
const_5387 = relay.const([10,-8,-1,4,-8,2,7,2,-2,-10,2,-5,-10,-7,1,-3,-4,-7,-7,-10,-7,-8,8,6,4,-7,3,-9,-4,10,-2,6,1,2,-4,4,7,-6,3,-8,-6,-5,-9,-4,3,-8,-4,-1,-8,6,7,3,-3,10,-9,-4,5,5,-6,-9,-2,3,3,-4,7,3,9,8,3,9,6,10,-5,-7,6,1,5,8,8,-9,2,-8,7,5,4,3,-7,3,-8,6,-10,-3,-1,-3,1,-3,-5,3,7,-10,-2,-2,6,3,-10,9,6,-5,1,7,1,6,-2,-5,-7,-9,2,9,9,-3,3,-6,-1,7,10,-7,-3,-8,2,-4,-2,1,4,-1,2,-1,3,-3,10,-8,3,3,8,2,7,-10,-9,-1,1,-8,-6,-9,6,-3,3,7,9,-5,-1,9,-3,9,10,-4,1,-5,1,-6,-7,1,2,-7,8,-8,-8,-9,5,-2,-7,7,10,-7,-7,6,-3,7,5,-8,7,3,2,6,-1,4,5,-8,-5,-4,1,10,6,-9,1,-3,-3,2,8,5,-6,-9,-10,6,3,2,1,-6,-7,-8,-4,5,-9,3,6,-9,6,-5,-3,4,2,-10,7,-10,4,-3,10,6,-6,7,6,6,1,8,10,-4,9,-5,-1,-1,4,-3,-1,-4,-7,-10,-8,-7,-6,5,-9,10,2,-4,-2,-9,-8,-3,-3,-7,9,-5,2,5,7,3,10,5,9,-8,6,-7,2,-3,-6,-5,-6,1,-4,-5,10,-8,1,6,-5,-1,2,3,-6,6,9,-9,4,4,-10,-9,-8,3,-2,-9,3,-6,-8,8,-9,7,8,4,10,9,8,-10,-7,-8,-4,-6,9,-4,4,2,-8,1,7,-1,-5,6,-10,-2,1,-8,6,-4,5,-3,-1,2,4,-9,-1,5,-1,-7,-9,-10,8,-7,-1,1,-10,6,-7,-5,2,-1,4,-8,9,8,4,-8,5,9,6,-3,-4,10,-5,-4,10,-1,1,1,-5,-8,8,-5,9,8,-6,4,10,-3,10,6,-5,6,6,-6,6,-4,-9,-9,3,-8,8,8,7,-5,-1,10,-7,1,-2,6,2,4,9,4,1,-10,3,9,9,10,4,-7,-6,6,-9,8,2,-5,-7,4,10,-1,2,-4,5,-3,5,1,10,9,-10,1,1,5,-6,8,-3,-10,8,-5,9,3,10,5,-1,-9,1,5,9,-10,10,-2,4,7,-7,4,-4,10,-10,6,-9,-10,-7,10,6,-3,-5,-9,-5,10,1,-8,10,-9,-4,2,1,4,9,-4,-4,-9,-1,2,5,10,8,2,-7,-10,7,-4,4,-6,4,7,-8,8,5,7,-2,7,-4,-9,4,-2,1,-1,6,9,-1,7,-1,1,7,-7,5,-10,-6,8,10,3,7,-8,3,-10,-2,-6,-4,-10,-6,-9,-10,10,9,6,-7,1,-2,7,-4,2,6,2,8,8,-8,5,-7,6,2,-3,10,4,-3,-1,-10,7,-4,5,-1,-6,-1,9,-7,-1,-8,1,-10,-1,-8,10,-7,5,5,3,-2,-5,1,10,-10,8,-9,5,4,2,10,3,10,1,7,-1,5,3,-1,-4,7,-8,-1,-6,1,-10,-4,10,-8,-9,-7,3,8,7,-10,-2,-3,3,-3,10,1,-5,-2,8,8,-4,-10,6,-4,7,6,-2,8,-4,6,-5,3,-1,6,4,9,-8,8,4,9,-7,-3,-5,-6,-3,2,-1,-7,1,-4,-7,6,9,-1,5,6,-6,-2,-9,-9,-1,10,9,4,3,6,10,-5,-5,4,8,-3,1,7,-2,-4,-1,-4,-4,-10,-8,-4,10,7,-8,7,-3,10,6,5,6,-2,6,7,4,-6,6,1,1,-1,-1,3,-1,-1,4,6,5,-9,3,10,3,-2,-6,-5,2,-6,-6,-10,-3,5,-5,9,8,1,-4,-1,-5,-6,-5,-7,-6,-10,1,-1,-9,4,-7,5,3,-9,5,3,-10,-2,-9,1,-4,-10,-1,1,-7,-3,2,-2,-4,-1,10,2,1,6,-4,5,-8,-5,8,-6,-3,-1,-8,9,5,-2,3,6,9,6,-9,-1,8,3,-2,-8,1,-1,4,3,-1,2,-1,8,10,-1,-4,5,10,5,8,-10,-5,-8,-2,-6,-5,7,-9,-4,-8,10,-1,2,-3,-3,4,-10,4,-8,6,-1,6,-7,-2,6,7,-2,10,-8,-2,-4,6,-5,-1,-9,9,-7,8,10,4,2,9,-10,7,-2,10,-5,-1,7,3,10,-7,-7,-3,-7,-10,-8,10,-9,-7,5,-8,-6,-1,2,10,-6,-1,2,-7,-10,-7,-9,8,3,1,-5,-8,-10,5,-3,-6,-1,-1,10,3,8,-10,-6,-4,-8,-7,-6,5,6,-1,-4,-1,5,-8,-1,-7,-1,-5,-9,-6,-6,9,9,-7,3,-7,5,2,9,7,10,-10,-2,8,6,8,8,-3,3,-4,-7,3,-1,4,-4,-2,4,7,-1,-7,10,8,-5,5,-2,-4,3,3,-10,-4,7,-1,1,8,7,-8,3,5,8,5,10,-1,5,-7,-2,-3,10,-1,-4,-3,-6,-7,9,-6,3,-9,1,8,-3,-4,7,-5,1,-9,6,-7,-3,1,6,8,-9,4,6,-7,-8,-5,8,3,-5,4,4,-4,-6,8,-10,-3,1,10,-9,8,8,2,3,-5,8,2,1,-9,-10,-10,3,-1,3,4,8,1,5,-4,-1,-7,-8,-10,-4,5,8,-6,1,7,-1,-5,-5,7,-10,-6,-9,9,-3,-4,10,3,-7,2,6,-9,2,-8,-10,7,-5,8,-8,-1,6,10,-7,7,-1,9,8,-6,3,7,8,-5,9,-9,10,7,-5,5,7,-5,1,-8,3,-1,-8,4,-4,-1,2,-7,-1,-10,1,-8,9,9,-7,-9,10,1,-8,-4,-1,5,-6,-6,9,3,3,-8,-5,2,-5,4,-3,-3,-9,-5,-5,-2,3,10,-5,-9,4,-1,-6,3,-6,-7,2,-1,-1,9,-5,9,-10,9,1,4,-7,6,-9,-7,6,5,-7,6,1,4,-10,-3,9,6,1,-7,8,-4,-2,4,-8,-5,5,3,-9,-3,9,9,-9,-9,-6,9,-10,3,-7,-10,-5,-9,6,-10,8,-4,-9,-4,8,9,10,10,-4,-1,-9,5,6,6,-6,7,-10,-1,-3,-9,8,7,-9,-5,-9,3,7,-1,4,5,6,5,4,-6,1,-8,-5,-5,1,9,-8,7,2,10,-7,-7,-8,10,-8,-9,-4,-8,-3,5,-4,-5,9,-10,1,-9,5,-5,8,-7,2,3,-2,-4,3,10,-6,-2,8,-5,1,1,-10,9,2,4,1,-1,-10,9,-6,3,-3,-6,6,-1,-7,-3,9,-7,-9,6,-10,-2,-1,6,-9,7,5,-6,-5,7,9,9,3,10,6,-9,-2,7,-3,1,1,7,-3,6,-10,-2,-5,9,-8,8,-7,-10,-10,-4,-1,9,7,9,-9,-10,10,-7,4,2,5,5,7,-2,-6,1,3,1,-4,-2,9,-1,5,-5,4,-2,-5,4,4,-8,4,10,-9,-7,-5,-7,2,-3,-8,7,-6,-2,6,3,-1,2,2,3,5,6,1,-4,3,-2,-6,2,8,2,-9,-5,8,8,-3,5,2,-8,7,8,9,-1,-8,6,-7,9,-3,-10,6,-5,10,-7,-3,7,-8,10,-4,-2,-5,8,9,10,4,5,10,8,-1,-2,1,6,4,-7,-8,3,-9,5,-10,10,-5,-3,6,-2,-6,3,4,7,5,8,-2,5,2,1,-5,6,-7,-4,2,-2,-2,8,-2,6,8,1,7,-5,-7,10,7,-1,-7,-5,-1,-9,-2,1,-3,-1,2,-3,9,-7,4,8,5,4,-2,-5,8,8,-3,3,-5,-7,10,6,-9,6,2,3,-1,1,7,-8,10,-2,4,-10,-4,8,10,1,-8,-1,1,8,-2,-7,7,-4,1,1,-3,-8,2,1,1,9,1,10,7,-5,-10,-8,8,-5,7,-8,-9,-7,2,2,10,-5,-3,-4,-6,7,-3,-3,6,2,6,-4,-8,-7,-1,-6,-10,3,-5,-2,-7,-6,-6,1,-7,-5,-5,-9,2,-5,-4,-5,9,8,6,-6,-10,1,-1,8,-7,2,-2,9,6,-6,-3,5,-8,10,2,4,6,10,2,-5,10,5,8,-7,-5,5,3,-4,2,4,-9,7,-8,5,4,-8,-7,8,4,2,-10,1,-6,6,-8,3,1,-5,7,-8,9,-7,9,-4,3,-4,2,8,-10,-7,5,6,-1,6,10,-9,9,5,-3,3,-6,9,-4,-7,1,3,-5,-5,-9,-4,-4,7,-1,3,3,8,-5,-7,-5,-5,8,6,6,-10,2,-5,-9,2,-5,3,-3,9,-9,-10,1,-5,-1,2,2,-4,10,-3,-2,-10,-1,8,4,-5,2,-1,1,3,9,-1,9,-7,7,-7,-6,9,-10,3,-2,10,6,-8,9,8,9,7,9,7,4,6,-3,-7,-1,8,1,-1,1,-3,-3,6,-2,-7,9,-8,2,-4,10,9,-4,-7,6,3,7,8,8,-1,-9,1,4,10,5,10,-5,-7,5,5,1,-9,-3,10,8,-2,-10,4,4,2,10,-3,9,6,-5,5,9,4,-8,-1,-6,5,6,1,-5,-9,5,10,3,9,-8,-4,8,-9,4,7,5,-7,-1,-2,3,1,-3,-1,-8,-6,7,-3,10,3,4,-8,-2,-9,-5,-9,-2,6,3,4,10,-8,-2,1,-5,-7,-6,9,10,-1,8,-7,2,6,3,-7,-1,-1,9,6,6,-4,-8,10,-10,-7,3,-9,-7,2,-6,-4,-5,-2,7,-10,-1,7,7,9,10,-8,-10,-10,3,-7,-3,5,-6,-4,-5,7,-9,5,-2,7,-10,5,-1,7,6,-10,4,9,-4,-4,7,7,8,4,-4,-1,6,-4,-10,-9,-4,-7,8,-2,-9,3,10,2,2,7,6,2,-4,7,9,2,6,-6,7,9,6,10,4,3,9,-1,10,7,2,-9,3,-4,5,5,8,6,8,10,-9,5,7,-2,-1,-2,-6,-4,6,-8,-10,1,-9,-1,-4,-6,-8,-2,8,3,-5,-2,5,10,4,2,-2,-1,1,-7,-7,-9,-7,9,7,7,-6,-4,5,-4,-5,2,-9,-10,4,-7,-2,5,7,7,7,-7,2,-8,5,-5,-6,8,9,8,-5,6,1,-9,7,-2,9,-9,-1,8,-9,-8,10,-2,6,-2,-5,10,-10,-4,-4,-3,-8,-6,1,6,-8,7,-10,7,-9,9,-7,-7,10,4,-10,9,-1,-6,10,2,-4,-4,-8,-10,-9,-10,-8,1,-10,1,4,-7,-6,5,3,-2,6,3,8,-8,4,3,-7,-1,-1,-7,4,-8,-5,6,2,-6,7,-2,-5,-2,-10,-3,9,-4,-6,-5,-4,-3,-8,8,-1,8,-6,-3,-1,-1,9,-8,6,1,2,4,-9,-5,-8,-6,-1,-6,-5,9,-3,-8,4,3,7,-4,9,5,7,-4,-6,3,-5,4,8,-7,-6,7,1,10,3,-7,1,2,-3,-4,-7,6,-8,3,6,8,6,-1,-5,-7,4,5,-7,5,1,10,-6,9,9,-9,3,8,-5,8,-10,10,-8,-9,-10,-6,-2,9,3,4,-4,-8,2,-8,-6,7,-1,8,-10,6,-1,-2,-9,3,-3,-5,-1,3,10,10,-8,-2,4,10,-8,5,-1,2,-10,-3,3,-7,2,10,1,-9,-7,-10,2,-4,-8,-10,5,-8,-9,5,8,10,4,-1,-10,-6,1,5,-7,6,7,4,-7,7,3,2,8,9,-2,8,1,8,-3,-5,-3,6,6,1,2,3,-4,5,7,-5,-4,-10,9,7,10,-2,5,-2,-8,6,5,-5,4,-2,-8,1,-1,7,8,2,7,2,2,3,-1,1,-8,-6,10,5,-6,-10,-5,7,-2,-3,2,1,1,7,-2,-9,-7,-5,2,5,-4,3,3,-5,8,3,7,-6,-9,2,1,4,-4,-7,10,-4,-6,-6,-8,3,2,6,2,-8,6,4,9,7,8,-2,7,-3,-5,-3,1,-7,-4,10,8,6,-8,-3,-10,-2,8,7,10,-8,8,-5,9,-9,8,8,-7,-2,-7,-2,9,5,8,3,-1,-2,-4,7,-3,-6,-8,-9,-1,2,9,-6,9,-6,-5,-6,3,5,-7,3,-1,-10,-5,5,-1,-5,2,9,-3,10,-7,4,4,-9,6,-10,-1,7,9,-4,-1,-3,10,-6,-8,-3,-5,-4,8,10,5,2,-10,4,3,2,-6,-8,-6,9,3,8,1,-6,5,-5], dtype = "uint64")#candidate|5387|(2400,)|const|uint64
var_5388 = relay.var("var_5388", dtype = "bool", shape = (750,))#candidate|5388|(750,)|var|bool
call_5386 = relay.TupleGetItem(func_4258_call(relay.reshape(const_5387.astype('uint64'), [15, 16, 10]), relay.reshape(const_5387.astype('uint64'), [15, 16, 10]), relay.reshape(var_5388.astype('bool'), [50, 15]), ), 0)
call_5389 = relay.TupleGetItem(func_4263_call(relay.reshape(const_5387.astype('uint64'), [15, 16, 10]), relay.reshape(const_5387.astype('uint64'), [15, 16, 10]), relay.reshape(var_5388.astype('bool'), [50, 15]), ), 0)
func_3297_call = mod.get_global_var('func_3297')
func_3301_call = mutated_mod.get_global_var('func_3301')
const_5397 = relay.const([[9.699568,1.110825,-7.013064,0.374721,-3.808325,1.100241,-3.084554,-3.970656,-4.564214,-5.346250,-8.749228,7.878068,5.254348,-3.756381,-3.235493,-5.243848,5.200867,9.123294,0.349545,-5.797381,6.478596,-5.980601,-8.163558,8.416298,8.611661,3.327901,-0.255730,-8.155443,7.456561,6.820330,-4.423689,-8.279579,6.111203,0.570676,-9.211725,3.695906,6.002787,6.358680,-5.204892,-3.425547,-3.597062,-8.767569,-1.558147,-4.160075,1.587350,-1.953463,-8.826419,7.608961,-5.934500,-3.553864,3.976705,-5.147351,2.539368,-2.482934,-6.197915,5.319962,1.137107,-8.124213,7.072276,8.996328,-9.735379,-0.321294,-1.508220,7.195705,-3.233552,3.710001,5.436281,-5.352351,-9.553652,-5.810167,-0.600889,4.922230,2.597700,4.097669,9.671897,8.150559,-2.844544,-7.867985,-1.522455,7.710535,5.590051,-5.699920,-4.480037,3.068547,1.281511,-2.218477,1.465796,2.251221,7.957935,2.179949,-5.331205,-8.104779,-9.033798,8.364571,-0.892496,9.544086,-0.058652,-8.896340,6.135427,7.363520,-4.247498,-8.350133,8.432392,-7.494768,-4.949241,8.947613,6.547993,-4.820197,-1.121520,-0.649437,-4.708013,-9.818441,6.015986,-7.094689,-5.747258,9.694769,0.446802,6.982581,-9.444285,9.877228,6.520820,3.039117,-8.888846,4.021749,0.611920,-2.369208,4.089588,-8.607248,2.850638,4.019065,-1.690886,-4.213936,-1.805857,6.243413,-7.666404,-6.710458,0.527361,-2.120254,2.343141,2.402257,1.691696,-3.617162,-8.401214,9.075428,7.377580,-0.169355,3.921908,2.640690,-4.719532,-7.639887,0.480526,-0.777158,-2.488402,6.909858,-5.577981,6.059929,-5.464092,1.163704,-8.582987,-9.630976,9.755581,-0.266067,-8.984426,4.491802,-4.378575,7.359989,-7.492508,-7.714594,-6.563682,-2.849051,-1.584016,-8.231552,8.392571,-2.214031,-0.875461,-0.226603,8.513779,-1.468063,-6.050113,-3.764889,-1.252954,8.561011,4.579498,4.989190,2.339552,9.038862,9.421419,-3.451092,0.809310,7.536776,6.662383,8.470841,-9.621854,-5.729228,8.092718,4.290361,-9.125995,-8.010785,-0.327490,0.024701,0.664482,-0.906473,-5.386857,-4.152278,4.303339,2.218738,4.578931,3.013719,1.702421,-0.059340,-1.490198,-9.903121,-5.269688,-2.038566,-9.314414,-8.714462,-4.487042,8.951107,6.969358,-2.499328,2.281010,-9.767500,8.073137,-6.316260,1.385852,6.834298,-7.704813,4.471386,2.074022,3.105975,0.248672,8.574155,-2.158750,3.638573,-1.036591,-4.417538,6.783302,-8.338286,-9.813752,4.907597,-8.086228,1.190501,-4.554669,3.048500,7.889312,-1.850649,5.653094,-3.510808,-0.311804,1.500444,-0.647948,-5.952921,-8.888611,-6.457612,7.755832,4.373088]], dtype = "float32")#candidate|5397|(1, 256)|const|float32
call_5396 = relay.TupleGetItem(func_3297_call(relay.reshape(const_5397.astype('float32'), [8, 4, 8]), relay.reshape(const_5397.astype('float64'), [8, 4, 8]), ), 0)
call_5398 = relay.TupleGetItem(func_3301_call(relay.reshape(const_5397.astype('float32'), [8, 4, 8]), relay.reshape(const_5397.astype('float64'), [8, 4, 8]), ), 0)
uop_5399 = relay.cos(const_5369.astype('float64')) # shape=(10, 6, 8)
uop_5406 = relay.sin(const_5387.astype('float32')) # shape=(2400,)
func_2023_call = mod.get_global_var('func_2023')
func_2025_call = mutated_mod.get_global_var('func_2025')
call_5418 = relay.TupleGetItem(func_2023_call(), 2)
call_5419 = relay.TupleGetItem(func_2025_call(), 2)
bop_5425 = relay.greater_equal(uop_5406.astype('bool'), relay.reshape(call_5386.astype('bool'), relay.shape_of(uop_5406))) # shape=(2400,)
bop_5428 = relay.greater_equal(uop_5406.astype('bool'), relay.reshape(call_5389.astype('bool'), relay.shape_of(uop_5406))) # shape=(2400,)
output = relay.Tuple([bop_5370,var_5388,call_5396,const_5397,uop_5399,call_5418,bop_5425,])
output2 = relay.Tuple([bop_5370,var_5388,call_5398,const_5397,uop_5399,call_5419,bop_5428,])
func_5429 = relay.Function([var_5388,], output)
mod['func_5429'] = func_5429
mod = relay.transform.InferType()(mod)
mutated_mod['func_5429'] = func_5429
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5430 = relay.var("var_5430", dtype = "bool", shape = (750,))#candidate|5430|(750,)|var|bool
func_5429_call = mutated_mod.get_global_var('func_5429')
call_5431 = func_5429_call(var_5430)
output = call_5431
func_5432 = relay.Function([var_5430], output)
mutated_mod['func_5432'] = func_5432
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5438 = relay.var("var_5438", dtype = "float64", shape = (14, 14, 4))#candidate|5438|(14, 14, 4)|var|float64
uop_5439 = relay.asinh(var_5438.astype('float64')) # shape=(14, 14, 4)
output = uop_5439
output2 = uop_5439
func_5446 = relay.Function([var_5438,], output)
mod['func_5446'] = func_5446
mod = relay.transform.InferType()(mod)
mutated_mod['func_5446'] = func_5446
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5447 = relay.var("var_5447", dtype = "float64", shape = (14, 14, 4))#candidate|5447|(14, 14, 4)|var|float64
func_5446_call = mutated_mod.get_global_var('func_5446')
call_5448 = func_5446_call(var_5447)
output = call_5448
func_5449 = relay.Function([var_5447], output)
mutated_mod['func_5449'] = func_5449
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1235_call = mod.get_global_var('func_1235')
func_1237_call = mutated_mod.get_global_var('func_1237')
call_5535 = relay.TupleGetItem(func_1235_call(), 4)
call_5536 = relay.TupleGetItem(func_1237_call(), 4)
output = relay.Tuple([call_5535,])
output2 = relay.Tuple([call_5536,])
func_5538 = relay.Function([], output)
mod['func_5538'] = func_5538
mod = relay.transform.InferType()(mod)
output = func_5538()
func_5539 = relay.Function([], output)
mutated_mod['func_5539'] = func_5539
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5198_call = mod.get_global_var('func_5198')
func_5199_call = mutated_mod.get_global_var('func_5199')
call_5560 = relay.TupleGetItem(func_5198_call(), 0)
call_5561 = relay.TupleGetItem(func_5199_call(), 0)
output = call_5560
output2 = call_5561
func_5566 = relay.Function([], output)
mod['func_5566'] = func_5566
mod = relay.transform.InferType()(mod)
mutated_mod['func_5566'] = func_5566
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5566_call = mutated_mod.get_global_var('func_5566')
call_5567 = func_5566_call()
output = call_5567
func_5568 = relay.Function([], output)
mutated_mod['func_5568'] = func_5568
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1887_call = mod.get_global_var('func_1887')
func_1889_call = mutated_mod.get_global_var('func_1889')
call_5569 = relay.TupleGetItem(func_1887_call(), 1)
call_5570 = relay.TupleGetItem(func_1889_call(), 1)
output = relay.Tuple([call_5569,])
output2 = relay.Tuple([call_5570,])
func_5600 = relay.Function([], output)
mod['func_5600'] = func_5600
mod = relay.transform.InferType()(mod)
mutated_mod['func_5600'] = func_5600
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5600_call = mutated_mod.get_global_var('func_5600')
call_5601 = func_5600_call()
output = call_5601
func_5602 = relay.Function([], output)
mutated_mod['func_5602'] = func_5602
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5631 = relay.var("var_5631", dtype = "float64", shape = (4, 12, 13))#candidate|5631|(4, 12, 13)|var|float64
uop_5632 = relay.rsqrt(var_5631.astype('float64')) # shape=(4, 12, 13)
output = uop_5632
output2 = uop_5632
func_5640 = relay.Function([var_5631,], output)
mod['func_5640'] = func_5640
mod = relay.transform.InferType()(mod)
mutated_mod['func_5640'] = func_5640
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5641 = relay.var("var_5641", dtype = "float64", shape = (4, 12, 13))#candidate|5641|(4, 12, 13)|var|float64
func_5640_call = mutated_mod.get_global_var('func_5640')
call_5642 = func_5640_call(var_5641)
output = call_5642
func_5643 = relay.Function([var_5641], output)
mutated_mod['func_5643'] = func_5643
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3548_call = mod.get_global_var('func_3548')
func_3550_call = mutated_mod.get_global_var('func_3550')
call_5656 = func_3548_call()
call_5657 = func_3548_call()
output = relay.Tuple([call_5656,])
output2 = relay.Tuple([call_5657,])
func_5664 = relay.Function([], output)
mod['func_5664'] = func_5664
mod = relay.transform.InferType()(mod)
mutated_mod['func_5664'] = func_5664
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5664_call = mutated_mod.get_global_var('func_5664')
call_5665 = func_5664_call()
output = call_5665
func_5666 = relay.Function([], output)
mutated_mod['func_5666'] = func_5666
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2480_call = mod.get_global_var('func_2480')
func_2482_call = mutated_mod.get_global_var('func_2482')
call_5756 = func_2480_call()
call_5757 = func_2480_call()
uop_5758 = relay.sin(call_5756.astype('float64')) # shape=(15, 14, 5)
uop_5760 = relay.sin(call_5757.astype('float64')) # shape=(15, 14, 5)
output = relay.Tuple([uop_5758,])
output2 = relay.Tuple([uop_5760,])
func_5801 = relay.Function([], output)
mod['func_5801'] = func_5801
mod = relay.transform.InferType()(mod)
mutated_mod['func_5801'] = func_5801
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5801_call = mutated_mod.get_global_var('func_5801')
call_5802 = func_5801_call()
output = call_5802
func_5803 = relay.Function([], output)
mutated_mod['func_5803'] = func_5803
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4095_call = mod.get_global_var('func_4095')
func_4096_call = mutated_mod.get_global_var('func_4096')
call_5831 = func_4095_call()
call_5832 = func_4095_call()
func_3390_call = mod.get_global_var('func_3390')
func_3391_call = mutated_mod.get_global_var('func_3391')
call_5833 = relay.TupleGetItem(func_3390_call(), 0)
call_5834 = relay.TupleGetItem(func_3391_call(), 0)
output = relay.Tuple([call_5831,call_5833,])
output2 = relay.Tuple([call_5832,call_5834,])
func_5839 = relay.Function([], output)
mod['func_5839'] = func_5839
mod = relay.transform.InferType()(mod)
output = func_5839()
func_5840 = relay.Function([], output)
mutated_mod['func_5840'] = func_5840
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5848 = relay.const([[[-8.577424,7.293666,-4.764333,3.954457,-1.995262,-9.109078],[9.504739,9.877857,-8.716002,-3.825877,-1.085767,-8.567062],[-1.232639,-6.894175,8.323053,-2.923967,-1.350197,0.544848],[9.764315,-1.455816,-6.739584,-8.354371,-6.265249,-0.487395],[5.944867,-2.910226,8.172889,-0.151367,1.034815,7.967044],[6.389502,-1.805734,6.792487,-2.914184,-2.489203,-8.524886]],[[7.349910,3.516509,-9.457977,9.359382,-4.295215,9.381904],[-2.803867,-1.662591,9.018243,1.499289,4.044043,-0.789014],[3.796717,6.017539,-0.457948,-3.689097,-9.911281,8.242084],[4.677921,6.373560,-2.953404,4.464728,-3.072276,-3.921575],[0.695091,-6.022201,-5.906945,-4.382105,-7.092716,1.497646],[7.094510,-3.326664,0.850672,2.221502,-3.614227,9.341791]],[[4.906634,-2.600634,-9.761726,2.203200,-8.954664,-4.182996],[8.506386,-8.239309,1.892505,-1.762846,3.704978,-2.830278],[-4.181611,9.159331,-7.966905,4.097385,8.349281,-9.019024],[-8.630732,-5.423391,4.545463,8.886720,0.602815,-4.971198],[-0.460041,2.184795,-3.357283,-8.984654,6.815644,1.143539],[-5.844238,-3.673738,-6.608186,5.463512,-7.626060,8.989076]],[[9.434588,-0.268704,-9.040957,8.777151,7.775221,-5.791639],[-7.895546,-2.100922,-8.364670,-1.535383,-9.173403,1.415721],[8.573637,-2.252808,-5.581644,2.378155,-5.824169,-3.576876],[7.840234,7.583886,-6.645689,-3.304315,4.974503,1.301899],[-0.426512,-0.701109,-3.224824,-5.577996,5.034953,6.353287],[-3.813870,3.810480,2.733966,-3.320953,7.250760,2.628773]]], dtype = "float64")#candidate|5848|(4, 6, 6)|const|float64
uop_5849 = relay.sin(const_5848.astype('float64')) # shape=(4, 6, 6)
bop_5858 = relay.multiply(uop_5849.astype('int8'), relay.reshape(const_5848.astype('int8'), relay.shape_of(uop_5849))) # shape=(4, 6, 6)
const_5862 = relay.const([[[8.891453,5.824980,-0.799464,2.986518,-0.754096,-6.926186],[2.561287,-7.739928,8.881299,5.826303,1.015663,1.625292],[5.248679,-4.870615,2.629305,8.540432,-7.983089,-5.877373],[7.700746,-5.330416,-2.653976,-6.499854,-2.033561,8.062546],[-7.981319,0.176145,7.726955,-1.218730,0.278964,-5.409985],[1.492443,-6.986582,-5.640145,-5.449021,-1.830536,-7.844924]],[[9.821422,-0.133900,4.195056,-2.947104,-9.659198,9.790134],[-8.259578,4.704670,-9.345084,-7.864169,9.592586,0.273796],[6.721076,3.281774,-8.378390,-1.670570,-7.131706,-1.530486],[0.979973,0.582851,-6.767700,5.470262,2.386451,-1.165116],[1.456232,3.452725,2.525942,-2.917833,-5.225523,0.382753],[9.010087,7.233787,-7.009473,5.011646,-5.272394,-6.576987]],[[3.689163,2.155399,-9.660345,4.722535,-3.690920,-5.664966],[0.735493,6.199415,-3.482061,1.315728,-4.803716,-1.139516],[-5.595518,-4.915875,-7.552880,9.873860,7.476292,-3.499756],[-4.842031,0.352957,-9.552526,0.060089,-1.263589,-5.359550],[6.937929,2.598908,-1.870532,-0.625596,6.877252,5.014893],[8.413074,-7.213599,1.756996,-1.941344,-6.105995,-7.044968]],[[7.380481,-3.105919,-1.932213,6.493115,-2.453371,-7.510220],[-3.916062,2.468351,0.273746,7.620555,1.437549,4.312020],[4.183878,5.778583,5.658273,-3.955416,9.718653,2.533257],[2.801060,1.939050,7.954684,-1.683410,-9.036857,6.794962],[-8.368409,0.660735,-1.504436,-0.090889,-4.417481,3.750611],[-0.172124,9.634577,9.890602,5.102488,4.151077,-9.941500]]], dtype = "float64")#candidate|5862|(4, 6, 6)|const|float64
bop_5863 = relay.equal(uop_5849.astype('bool'), relay.reshape(const_5862.astype('bool'), relay.shape_of(uop_5849))) # shape=(4, 6, 6)
uop_5881 = relay.asinh(bop_5863.astype('float32')) # shape=(4, 6, 6)
output = relay.Tuple([bop_5858,uop_5881,])
output2 = relay.Tuple([bop_5858,uop_5881,])
func_5900 = relay.Function([], output)
mod['func_5900'] = func_5900
mod = relay.transform.InferType()(mod)
output = func_5900()
func_5901 = relay.Function([], output)
mutated_mod['func_5901'] = func_5901
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5198_call = mod.get_global_var('func_5198')
func_5199_call = mutated_mod.get_global_var('func_5199')
call_5909 = relay.TupleGetItem(func_5198_call(), 0)
call_5910 = relay.TupleGetItem(func_5199_call(), 0)
output = relay.Tuple([call_5909,])
output2 = relay.Tuple([call_5910,])
func_5911 = relay.Function([], output)
mod['func_5911'] = func_5911
mod = relay.transform.InferType()(mod)
output = func_5911()
func_5912 = relay.Function([], output)
mutated_mod['func_5912'] = func_5912
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1986_call = mod.get_global_var('func_1986')
func_1988_call = mutated_mod.get_global_var('func_1988')
call_5947 = func_1986_call()
call_5948 = func_1986_call()
output = relay.Tuple([call_5947,])
output2 = relay.Tuple([call_5948,])
func_5951 = relay.Function([], output)
mod['func_5951'] = func_5951
mod = relay.transform.InferType()(mod)
output = func_5951()
func_5952 = relay.Function([], output)
mutated_mod['func_5952'] = func_5952
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6003 = relay.var("var_6003", dtype = "uint64", shape = (5, 15, 1))#candidate|6003|(5, 15, 1)|var|uint64
var_6004 = relay.var("var_6004", dtype = "uint64", shape = (5, 15, 1))#candidate|6004|(5, 15, 1)|var|uint64
bop_6005 = relay.minimum(var_6003.astype('uint64'), relay.reshape(var_6004.astype('uint64'), relay.shape_of(var_6003))) # shape=(5, 15, 1)
output = bop_6005
output2 = bop_6005
func_6011 = relay.Function([var_6003,var_6004,], output)
mod['func_6011'] = func_6011
mod = relay.transform.InferType()(mod)
mutated_mod['func_6011'] = func_6011
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6011_call = mutated_mod.get_global_var('func_6011')
var_6013 = relay.var("var_6013", dtype = "uint64", shape = (5, 15, 1))#candidate|6013|(5, 15, 1)|var|uint64
var_6014 = relay.var("var_6014", dtype = "uint64", shape = (5, 15, 1))#candidate|6014|(5, 15, 1)|var|uint64
call_6012 = func_6011_call(var_6013,var_6014,)
output = call_6012
func_6015 = relay.Function([var_6013,var_6014,], output)
mutated_mod['func_6015'] = func_6015
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6085 = relay.var("var_6085", dtype = "float64", shape = (6, 8, 15))#candidate|6085|(6, 8, 15)|var|float64
uop_6086 = relay.sigmoid(var_6085.astype('float64')) # shape=(6, 8, 15)
uop_6091 = relay.asinh(var_6085.astype('float64')) # shape=(6, 8, 15)
output = relay.Tuple([uop_6086,uop_6091,])
output2 = relay.Tuple([uop_6086,uop_6091,])
func_6094 = relay.Function([var_6085,], output)
mod['func_6094'] = func_6094
mod = relay.transform.InferType()(mod)
var_6095 = relay.var("var_6095", dtype = "float64", shape = (6, 8, 15))#candidate|6095|(6, 8, 15)|var|float64
output = func_6094(var_6095)
func_6096 = relay.Function([var_6095], output)
mutated_mod['func_6096'] = func_6096
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1850_call = mod.get_global_var('func_1850')
func_1852_call = mutated_mod.get_global_var('func_1852')
call_6108 = relay.TupleGetItem(func_1850_call(), 0)
call_6109 = relay.TupleGetItem(func_1852_call(), 0)
output = relay.Tuple([call_6108,])
output2 = relay.Tuple([call_6109,])
func_6118 = relay.Function([], output)
mod['func_6118'] = func_6118
mod = relay.transform.InferType()(mod)
output = func_6118()
func_6119 = relay.Function([], output)
mutated_mod['func_6119'] = func_6119
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1821_call = mod.get_global_var('func_1821')
func_1822_call = mutated_mod.get_global_var('func_1822')
call_6122 = relay.TupleGetItem(func_1821_call(), 0)
call_6123 = relay.TupleGetItem(func_1822_call(), 0)
func_1059_call = mod.get_global_var('func_1059')
func_1061_call = mutated_mod.get_global_var('func_1061')
call_6129 = relay.TupleGetItem(func_1059_call(), 0)
call_6130 = relay.TupleGetItem(func_1061_call(), 0)
output = relay.Tuple([call_6122,call_6129,])
output2 = relay.Tuple([call_6123,call_6130,])
func_6137 = relay.Function([], output)
mod['func_6137'] = func_6137
mod = relay.transform.InferType()(mod)
output = func_6137()
func_6138 = relay.Function([], output)
mutated_mod['func_6138'] = func_6138
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4890_call = mod.get_global_var('func_4890')
func_4891_call = mutated_mod.get_global_var('func_4891')
call_6180 = relay.TupleGetItem(func_4890_call(), 1)
call_6181 = relay.TupleGetItem(func_4891_call(), 1)
const_6184 = relay.const([[[6,3,-8,4,8,3,-7,-8,7],[6,6,5,-1,9,-2,7,10,-10],[3,-4,4,-1,-4,-2,4,-3,1],[8,8,-3,10,-8,8,-3,-2,3],[2,8,6,-9,5,-3,-7,-8,8],[-5,1,-1,3,-3,-8,-2,-2,-8],[-8,1,8,-2,2,-2,-3,-1,10],[5,-5,-8,-7,-5,1,-9,2,-4],[1,5,-8,-6,-4,7,-8,-9,3],[5,-8,-10,4,7,9,-6,7,-6]],[[10,8,-8,10,-7,8,-6,1,3],[-2,1,5,-9,2,4,-3,-7,-8],[5,-10,7,-4,1,7,-7,3,6],[-1,8,-3,1,-7,-6,-5,3,3],[3,10,-5,10,-4,3,10,9,7],[-10,-9,-7,2,-5,-9,-4,10,-8],[1,-6,-8,8,-2,6,8,-6,-3],[-3,-6,1,-9,-8,8,-3,-4,5],[9,-10,10,-10,3,7,-2,-2,-9],[4,5,8,-9,-2,1,3,-1,-2]],[[-10,-1,-10,-9,-7,1,-2,-5,-10],[-10,-5,10,-2,-7,-7,-5,-1,7],[5,6,-7,-9,5,-7,8,-1,-2],[8,-3,10,-5,-8,1,10,3,1],[4,-8,5,-3,5,-5,-5,4,9],[-2,8,1,-5,-7,-8,8,-8,2],[-4,-8,8,-7,-8,3,-4,4,-2],[1,-7,-6,7,-8,10,10,-4,4],[-2,5,3,-9,-2,7,7,3,-6],[-10,5,-10,7,-1,-10,3,8,-4]],[[-5,-8,-8,-4,4,-1,-8,-7,-9],[10,-9,-7,5,-3,-7,6,1,-10],[10,4,-3,8,7,6,2,-4,-6],[2,-2,-6,3,2,7,-3,-7,-3],[-5,4,6,-10,6,1,-8,5,9],[10,5,-8,-5,1,1,6,5,-7],[-2,9,-4,1,-5,-5,-10,-6,8],[-7,-6,-9,-2,-2,5,-10,-10,-6],[-9,-8,5,-9,-8,-10,-1,-1,7],[2,3,8,3,8,7,8,2,10]],[[-1,2,6,-6,-3,3,-7,1,1],[1,-7,9,-2,10,5,3,1,-7],[-1,3,2,-4,-3,10,-4,7,-9],[-3,-3,6,5,6,-9,4,-8,4],[2,-8,2,-8,8,-8,-2,-9,-6],[-5,-6,-8,5,-5,-8,10,6,7],[-7,-6,10,1,5,-7,5,-3,-4],[-8,-2,10,1,-1,2,-6,-3,-4],[-4,-5,7,1,5,-4,4,7,-4],[-5,-1,-1,2,-1,-8,8,-2,-5]],[[6,-2,10,1,8,8,-7,7,9],[10,-5,-6,6,9,8,8,7,-6],[-5,-1,-5,7,3,-7,-3,-4,7],[-5,6,4,5,-10,9,-1,5,7],[4,1,9,-10,6,-3,3,-10,10],[-5,-4,-1,-2,-9,-6,-8,-2,8],[8,4,-1,9,-2,5,10,9,4],[9,2,-5,-6,-1,-2,8,6,-4],[-8,2,-1,-2,-4,5,2,-8,-3],[5,7,-8,4,1,-9,-8,9,6]],[[5,-10,-10,-1,-10,7,3,5,-9],[-1,10,-4,6,-5,-9,4,9,-5],[1,-1,4,-6,-3,4,-3,-6,6],[1,1,-8,5,6,-8,-4,6,9],[5,-4,-8,2,-5,6,8,5,1],[2,7,-1,9,-3,-1,5,-2,6],[-9,-3,7,-8,-7,6,6,8,-6],[-10,4,-1,8,3,-7,9,-9,2],[4,-3,-3,-10,7,-6,-7,-9,10],[6,-6,-7,7,-8,-10,4,-10,-6]],[[-6,-4,4,-7,6,2,5,-3,6],[-3,8,1,2,4,2,7,-6,-4],[-10,-3,-8,2,2,6,5,-3,1],[-5,-1,6,-8,-5,3,7,10,-10],[5,-2,7,-7,7,7,7,-2,-10],[-4,-1,-5,8,-10,3,5,-1,-7],[4,1,5,7,2,2,10,-4,-5],[-7,-2,9,6,5,2,-8,-5,6],[-8,4,4,6,2,-5,1,-1,-9],[-2,6,-4,9,-3,-10,-6,3,2]],[[6,9,10,-6,-6,-5,7,9,5],[2,-5,8,-5,4,4,3,-4,7],[-8,4,-10,-6,6,-10,1,5,-8],[-9,-9,1,9,-3,-8,-6,3,-8],[-10,-10,2,-9,2,6,9,5,10],[-9,-1,3,-3,6,8,-1,-10,7],[10,6,-10,-4,-10,4,6,-1,6],[-6,3,-8,-6,1,9,2,2,3],[-2,8,7,-4,-5,-8,8,-3,6],[2,-8,1,-1,-7,1,-6,7,5]],[[-7,-7,-1,-5,-10,10,8,9,-6],[-5,3,3,-4,-5,2,6,-6,-2],[-7,5,-3,-3,-8,-9,3,3,-8],[10,-3,2,4,5,-1,8,-3,-7],[-10,9,5,4,2,5,-4,-1,-1],[-4,-10,-4,7,-1,9,-9,10,-8],[-6,6,10,9,8,2,-2,4,-5],[-5,2,-3,3,9,9,-10,-8,6],[-8,1,-6,3,9,-2,-6,9,2],[-9,5,8,-5,-3,-5,-2,-6,8]],[[8,-10,1,-3,8,6,-5,4,-7],[6,-3,7,-7,-2,6,3,-3,10],[6,2,-7,-1,-7,10,7,6,-4],[9,-5,-2,-3,4,-1,-2,10,-8],[-6,9,4,-7,-7,5,7,-3,-7],[3,2,-9,-4,10,7,-2,7,-6],[1,5,4,7,6,-4,-5,-6,-4],[9,-6,-1,7,5,5,6,-3,-1],[-1,-10,8,-1,-1,-9,-9,-3,9],[9,-9,1,-6,-7,-8,-7,7,-7]],[[1,8,-4,-9,9,-10,-9,-6,5],[-2,4,9,-10,-2,-6,-1,-8,3],[8,-9,-5,5,9,-2,-9,-5,-4],[5,-3,-10,-8,7,10,10,-1,4],[9,10,3,10,4,4,-10,-3,-8],[3,4,3,-2,-3,-3,1,-10,-10],[2,-4,-5,-6,9,-1,2,2,6],[1,8,2,-5,-3,-3,8,3,2],[2,5,7,8,-2,9,-6,5,-6],[-5,-8,-6,9,4,7,10,-4,-3]],[[-2,2,1,-1,4,1,1,-1,-2],[9,4,-5,-1,-2,-1,8,8,-9],[-3,-6,-6,-5,10,-7,-6,6,-4],[-2,-6,-10,3,-2,7,-10,4,5],[10,9,9,-4,4,6,-1,-1,-5],[5,6,-7,-1,-1,-2,4,-8,1],[9,-2,-7,1,7,4,4,7,9],[2,2,4,2,5,-1,5,4,-4],[-4,-9,-8,2,-4,-1,7,-10,9],[-3,2,-10,6,6,5,-1,9,-1]]], dtype = "uint64")#candidate|6184|(13, 10, 9)|const|uint64
bop_6185 = relay.logical_and(call_6180.astype('bool'), relay.reshape(const_6184.astype('bool'), relay.shape_of(call_6180))) # shape=(13, 10, 9)
bop_6188 = relay.logical_and(call_6181.astype('bool'), relay.reshape(const_6184.astype('bool'), relay.shape_of(call_6181))) # shape=(13, 10, 9)
func_4047_call = mod.get_global_var('func_4047')
func_4049_call = mutated_mod.get_global_var('func_4049')
const_6190 = relay.const([3.177422,4.288424,9.894045,7.110387,9.662298,4.576067,0.091620,4.271098,-4.528010,-8.808848,2.998400,-3.351883,8.061136,6.886902,-7.476920,-9.941686,3.735033,-1.198201,0.700937,9.638980,4.168337,7.005842], dtype = "float32")#candidate|6190|(22,)|const|float32
call_6189 = relay.TupleGetItem(func_4047_call(relay.reshape(const_6190.astype('float32'), [2, 11, 1])), 1)
call_6191 = relay.TupleGetItem(func_4049_call(relay.reshape(const_6190.astype('float32'), [2, 11, 1])), 1)
output = relay.Tuple([bop_6185,call_6189,const_6190,])
output2 = relay.Tuple([bop_6188,call_6191,const_6190,])
func_6209 = relay.Function([], output)
mod['func_6209'] = func_6209
mod = relay.transform.InferType()(mod)
output = func_6209()
func_6210 = relay.Function([], output)
mutated_mod['func_6210'] = func_6210
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2830_call = mod.get_global_var('func_2830')
func_2831_call = mutated_mod.get_global_var('func_2831')
call_6271 = relay.TupleGetItem(func_2830_call(), 0)
call_6272 = relay.TupleGetItem(func_2831_call(), 0)
func_2023_call = mod.get_global_var('func_2023')
func_2025_call = mutated_mod.get_global_var('func_2025')
call_6275 = relay.TupleGetItem(func_2023_call(), 2)
call_6276 = relay.TupleGetItem(func_2025_call(), 2)
output = relay.Tuple([call_6271,call_6275,])
output2 = relay.Tuple([call_6272,call_6276,])
func_6303 = relay.Function([], output)
mod['func_6303'] = func_6303
mod = relay.transform.InferType()(mod)
output = func_6303()
func_6304 = relay.Function([], output)
mutated_mod['func_6304'] = func_6304
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2937_call = mod.get_global_var('func_2937')
func_2939_call = mutated_mod.get_global_var('func_2939')
call_6310 = relay.TupleGetItem(func_2937_call(), 0)
call_6311 = relay.TupleGetItem(func_2939_call(), 0)
func_2863_call = mod.get_global_var('func_2863')
func_2864_call = mutated_mod.get_global_var('func_2864')
call_6312 = func_2863_call()
call_6313 = func_2863_call()
func_2217_call = mod.get_global_var('func_2217')
func_2219_call = mutated_mod.get_global_var('func_2219')
call_6321 = relay.TupleGetItem(func_2217_call(), 0)
call_6322 = relay.TupleGetItem(func_2219_call(), 0)
output = relay.Tuple([call_6310,call_6312,call_6321,])
output2 = relay.Tuple([call_6311,call_6313,call_6322,])
func_6328 = relay.Function([], output)
mod['func_6328'] = func_6328
mod = relay.transform.InferType()(mod)
output = func_6328()
func_6329 = relay.Function([], output)
mutated_mod['func_6329'] = func_6329
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6330 = relay.const(-8, dtype = "int32")#candidate|6330|()|const|int32
var_6331 = relay.var("var_6331", dtype = "int32", shape = (16, 1))#candidate|6331|(16, 1)|var|int32
bop_6332 = relay.greater_equal(const_6330.astype('bool'), var_6331.astype('bool')) # shape=(16, 1)
func_4915_call = mod.get_global_var('func_4915')
func_4917_call = mutated_mod.get_global_var('func_4917')
call_6336 = relay.TupleGetItem(func_4915_call(), 0)
call_6337 = relay.TupleGetItem(func_4917_call(), 0)
output = relay.Tuple([bop_6332,call_6336,])
output2 = relay.Tuple([bop_6332,call_6337,])
func_6341 = relay.Function([var_6331,], output)
mod['func_6341'] = func_6341
mod = relay.transform.InferType()(mod)
var_6342 = relay.var("var_6342", dtype = "int32", shape = (16, 1))#candidate|6342|(16, 1)|var|int32
output = func_6341(var_6342)
func_6343 = relay.Function([var_6342], output)
mutated_mod['func_6343'] = func_6343
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4383_call = mod.get_global_var('func_4383')
func_4385_call = mutated_mod.get_global_var('func_4385')
call_6368 = relay.TupleGetItem(func_4383_call(), 1)
call_6369 = relay.TupleGetItem(func_4385_call(), 1)
output = relay.Tuple([call_6368,])
output2 = relay.Tuple([call_6369,])
func_6370 = relay.Function([], output)
mod['func_6370'] = func_6370
mod = relay.transform.InferType()(mod)
mutated_mod['func_6370'] = func_6370
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6370_call = mutated_mod.get_global_var('func_6370')
call_6371 = func_6370_call()
output = call_6371
func_6372 = relay.Function([], output)
mutated_mod['func_6372'] = func_6372
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5566_call = mod.get_global_var('func_5566')
func_5568_call = mutated_mod.get_global_var('func_5568')
call_6394 = func_5566_call()
call_6395 = func_5566_call()
output = call_6394
output2 = call_6395
func_6403 = relay.Function([], output)
mod['func_6403'] = func_6403
mod = relay.transform.InferType()(mod)
mutated_mod['func_6403'] = func_6403
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6403_call = mutated_mod.get_global_var('func_6403')
call_6404 = func_6403_call()
output = call_6404
func_6405 = relay.Function([], output)
mutated_mod['func_6405'] = func_6405
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5951_call = mod.get_global_var('func_5951')
func_5952_call = mutated_mod.get_global_var('func_5952')
call_6540 = relay.TupleGetItem(func_5951_call(), 0)
call_6541 = relay.TupleGetItem(func_5952_call(), 0)
output = relay.Tuple([call_6540,])
output2 = relay.Tuple([call_6541,])
func_6545 = relay.Function([], output)
mod['func_6545'] = func_6545
mod = relay.transform.InferType()(mod)
mutated_mod['func_6545'] = func_6545
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6545_call = mutated_mod.get_global_var('func_6545')
call_6546 = func_6545_call()
output = call_6546
func_6547 = relay.Function([], output)
mutated_mod['func_6547'] = func_6547
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1277_call = mod.get_global_var('func_1277')
func_1279_call = mutated_mod.get_global_var('func_1279')
call_6551 = func_1277_call()
call_6552 = func_1277_call()
output = relay.Tuple([call_6551,])
output2 = relay.Tuple([call_6552,])
func_6566 = relay.Function([], output)
mod['func_6566'] = func_6566
mod = relay.transform.InferType()(mod)
output = func_6566()
func_6567 = relay.Function([], output)
mutated_mod['func_6567'] = func_6567
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2830_call = mod.get_global_var('func_2830')
func_2831_call = mutated_mod.get_global_var('func_2831')
call_6595 = relay.TupleGetItem(func_2830_call(), 1)
call_6596 = relay.TupleGetItem(func_2831_call(), 1)
func_6209_call = mod.get_global_var('func_6209')
func_6210_call = mutated_mod.get_global_var('func_6210')
call_6639 = relay.TupleGetItem(func_6209_call(), 2)
call_6640 = relay.TupleGetItem(func_6210_call(), 2)
func_5319_call = mod.get_global_var('func_5319')
func_5321_call = mutated_mod.get_global_var('func_5321')
call_6643 = relay.TupleGetItem(func_5319_call(), 0)
call_6644 = relay.TupleGetItem(func_5321_call(), 0)
output = relay.Tuple([call_6595,call_6639,call_6643,])
output2 = relay.Tuple([call_6596,call_6640,call_6644,])
func_6645 = relay.Function([], output)
mod['func_6645'] = func_6645
mod = relay.transform.InferType()(mod)
mutated_mod['func_6645'] = func_6645
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6645_call = mutated_mod.get_global_var('func_6645')
call_6646 = func_6645_call()
output = call_6646
func_6647 = relay.Function([], output)
mutated_mod['func_6647'] = func_6647
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1111_call = mod.get_global_var('func_1111')
func_1113_call = mutated_mod.get_global_var('func_1113')
call_6662 = relay.TupleGetItem(func_1111_call(), 1)
call_6663 = relay.TupleGetItem(func_1113_call(), 1)
output = relay.Tuple([call_6662,])
output2 = relay.Tuple([call_6663,])
func_6685 = relay.Function([], output)
mod['func_6685'] = func_6685
mod = relay.transform.InferType()(mod)
output = func_6685()
func_6686 = relay.Function([], output)
mutated_mod['func_6686'] = func_6686
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4020_call = mod.get_global_var('func_4020')
func_4022_call = mutated_mod.get_global_var('func_4022')
call_6708 = relay.TupleGetItem(func_4020_call(), 0)
call_6709 = relay.TupleGetItem(func_4022_call(), 0)
func_4835_call = mod.get_global_var('func_4835')
func_4838_call = mutated_mod.get_global_var('func_4838')
var_6750 = relay.var("var_6750", dtype = "float32", shape = (900,))#candidate|6750|(900,)|var|float32
call_6749 = func_4835_call(relay.reshape(var_6750.astype('float32'), [15, 12, 5]))
call_6751 = func_4835_call(relay.reshape(var_6750.astype('float32'), [15, 12, 5]))
output = relay.Tuple([call_6708,call_6749,var_6750,])
output2 = relay.Tuple([call_6709,call_6751,var_6750,])
func_6752 = relay.Function([var_6750,], output)
mod['func_6752'] = func_6752
mod = relay.transform.InferType()(mod)
var_6753 = relay.var("var_6753", dtype = "float32", shape = (900,))#candidate|6753|(900,)|var|float32
output = func_6752(var_6753)
func_6754 = relay.Function([var_6753], output)
mutated_mod['func_6754'] = func_6754
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3746_call = mod.get_global_var('func_3746')
func_3748_call = mutated_mod.get_global_var('func_3748')
call_6759 = func_3746_call()
call_6760 = func_3746_call()
output = relay.Tuple([call_6759,])
output2 = relay.Tuple([call_6760,])
func_6763 = relay.Function([], output)
mod['func_6763'] = func_6763
mod = relay.transform.InferType()(mod)
output = func_6763()
func_6764 = relay.Function([], output)
mutated_mod['func_6764'] = func_6764
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6118_call = mod.get_global_var('func_6118')
func_6119_call = mutated_mod.get_global_var('func_6119')
call_6778 = relay.TupleGetItem(func_6118_call(), 0)
call_6779 = relay.TupleGetItem(func_6119_call(), 0)
func_5198_call = mod.get_global_var('func_5198')
func_5199_call = mutated_mod.get_global_var('func_5199')
call_6786 = relay.TupleGetItem(func_5198_call(), 0)
call_6787 = relay.TupleGetItem(func_5199_call(), 0)
output = relay.Tuple([call_6778,call_6786,])
output2 = relay.Tuple([call_6779,call_6787,])
func_6828 = relay.Function([], output)
mod['func_6828'] = func_6828
mod = relay.transform.InferType()(mod)
mutated_mod['func_6828'] = func_6828
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6828_call = mutated_mod.get_global_var('func_6828')
call_6829 = func_6828_call()
output = call_6829
func_6830 = relay.Function([], output)
mutated_mod['func_6830'] = func_6830
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5600_call = mod.get_global_var('func_5600')
func_5602_call = mutated_mod.get_global_var('func_5602')
call_6838 = relay.TupleGetItem(func_5600_call(), 0)
call_6839 = relay.TupleGetItem(func_5602_call(), 0)
func_4816_call = mod.get_global_var('func_4816')
func_4819_call = mutated_mod.get_global_var('func_4819')
const_6860 = relay.const([False,False,True,True,True,False,False,False,False,False,True,True,False,False,True,False,False,True,True,True,False,False,True,True,True,False,False,False,False,False,True,False,False,True,False,True,True,False,True,False,False,True,True,False,True,False,True,True,True,False,False,False,False,True,True,True,True,True,True,True,True,True,False,False,False,False,True,True,False,True,True,True,False,False,True,True,True,False,False,False,True,True,False,True,False,True,True,False,False,False,True,False,True,True,False,True,True,True,True,False,False,False,True,False,True,False,True,False,True,False,False,False,True,True,True,True,False,False,True,True,True,True,True,False,False,True,False,False,False,True,False,True,True,True,True,False,True,True,False,False,True,True,False,False,False,False,True,False,False,True,True,True,False,False,False,False,True,False,False,False,True,False,True,False,True,False,True,True,True,True,True,False,False,False,False,False,False,False,True,False], dtype = "bool")#candidate|6860|(180,)|const|bool
call_6859 = relay.TupleGetItem(func_4816_call(relay.reshape(const_6860.astype('bool'), [10, 3, 6])), 0)
call_6861 = relay.TupleGetItem(func_4819_call(relay.reshape(const_6860.astype('bool'), [10, 3, 6])), 0)
func_3071_call = mod.get_global_var('func_3071')
func_3073_call = mutated_mod.get_global_var('func_3073')
call_6866 = relay.TupleGetItem(func_3071_call(), 0)
call_6867 = relay.TupleGetItem(func_3073_call(), 0)
func_4258_call = mod.get_global_var('func_4258')
func_4263_call = mutated_mod.get_global_var('func_4263')
var_6880 = relay.var("var_6880", dtype = "uint64", shape = (2400,))#candidate|6880|(2400,)|var|uint64
const_6881 = relay.const([[False,False,False,True,False,False,False,True,True,True,True,False,True,True,False,True,False,False,False,False,False,False,True,False,True,True,True,True,True,False,True,True,False,True,True,False,True,True,False,False,False,True,True,True,False,True,False,True,True,False,True,True,True,True,False,False,False,True,True,True,True,True,True,False,False,False,False,False,True,False,False,True,False,True,False],[False,False,True,True,False,True,True,True,False,False,True,False,False,False,False,True,False,True,False,False,True,False,False,True,True,True,False,False,True,True,True,True,False,False,True,False,True,False,True,False,False,True,False,False,True,False,True,True,True,False,True,True,False,False,False,False,True,False,False,False,False,True,True,False,True,False,False,True,False,True,True,False,False,True,False],[False,False,False,True,True,False,True,False,False,True,True,False,False,True,True,False,True,False,True,True,False,False,True,True,False,True,False,True,True,True,True,True,True,True,True,True,True,False,True,False,True,False,False,True,False,True,True,True,False,False,True,False,False,False,True,True,True,True,False,True,False,True,False,False,True,True,True,False,True,False,False,False,True,True,True],[True,False,False,False,False,True,True,False,True,False,True,False,True,False,False,False,True,False,True,True,True,False,False,True,False,False,False,False,True,True,False,False,True,False,True,False,True,False,False,True,False,False,True,False,False,False,False,True,False,True,False,True,False,False,False,False,True,False,False,False,True,False,True,True,True,False,True,False,False,True,True,True,True,True,True],[False,True,True,True,True,True,False,False,True,False,False,True,True,True,True,False,False,False,True,True,True,True,False,True,True,False,True,False,True,False,True,True,True,True,True,False,False,True,False,True,True,False,False,True,True,True,True,False,True,False,True,False,True,False,False,False,False,True,True,True,True,False,True,False,True,False,False,True,True,False,False,False,False,False,True],[False,False,False,False,True,False,True,False,True,True,False,False,True,True,True,True,False,True,False,False,True,False,False,False,True,False,True,True,False,True,True,False,True,True,False,True,False,False,True,True,True,True,True,True,False,False,False,False,False,False,False,True,False,False,True,True,False,False,False,False,False,True,True,True,True,True,False,True,True,True,False,True,False,False,False],[False,False,False,False,False,False,False,True,False,False,True,True,False,True,True,True,True,True,False,True,False,True,True,True,True,True,True,False,True,True,False,False,False,False,False,False,False,True,False,False,True,True,True,False,False,False,True,False,True,True,True,True,False,False,False,True,True,False,True,True,True,True,True,True,True,True,False,True,False,False,True,False,True,False,False],[True,True,True,True,False,False,False,False,False,True,False,False,False,False,True,True,False,True,False,True,False,False,True,False,False,True,True,False,False,False,False,False,True,True,True,True,True,False,True,False,True,False,False,True,False,True,True,False,False,True,False,True,True,True,True,False,True,False,False,True,False,True,True,True,False,True,True,False,True,False,False,False,False,False,True],[True,True,False,True,False,False,True,True,True,True,False,True,False,False,False,True,True,True,True,False,True,False,True,True,True,False,True,True,False,True,False,True,True,True,True,True,True,False,False,False,True,False,False,True,False,False,True,True,True,False,False,False,False,True,False,True,True,True,False,False,True,False,True,False,True,False,True,False,True,True,True,False,True,True,False],[True,True,True,True,False,True,True,False,True,False,False,False,False,False,False,False,True,False,True,True,False,False,False,False,True,True,True,True,False,False,True,True,True,False,False,True,True,True,False,False,False,False,False,False,False,False,False,True,True,True,False,True,True,False,True,False,True,True,False,True,True,True,True,True,False,True,False,True,True,False,False,True,True,False,True]], dtype = "bool")#candidate|6881|(10, 75)|const|bool
call_6879 = relay.TupleGetItem(func_4258_call(relay.reshape(var_6880.astype('uint64'), [15, 16, 10]), relay.reshape(var_6880.astype('uint64'), [15, 16, 10]), relay.reshape(const_6881.astype('bool'), [50, 15]), ), 0)
call_6882 = relay.TupleGetItem(func_4263_call(relay.reshape(var_6880.astype('uint64'), [15, 16, 10]), relay.reshape(var_6880.astype('uint64'), [15, 16, 10]), relay.reshape(const_6881.astype('bool'), [50, 15]), ), 0)
func_4934_call = mod.get_global_var('func_4934')
func_4935_call = mutated_mod.get_global_var('func_4935')
call_6887 = relay.TupleGetItem(func_4934_call(), 0)
call_6888 = relay.TupleGetItem(func_4935_call(), 0)
uop_6899 = relay.cos(var_6880.astype('float32')) # shape=(2400,)
uop_6911 = relay.asin(uop_6899.astype('float32')) # shape=(2400,)
bop_6918 = relay.logical_or(uop_6911.astype('bool'), relay.reshape(uop_6899.astype('bool'), relay.shape_of(uop_6911))) # shape=(2400,)
uop_6932 = relay.exp(uop_6911.astype('float32')) # shape=(2400,)
bop_6934 = relay.minimum(uop_6932.astype('float64'), relay.reshape(uop_6899.astype('float64'), relay.shape_of(uop_6932))) # shape=(2400,)
output = relay.Tuple([call_6838,call_6859,const_6860,call_6866,call_6879,const_6881,call_6887,bop_6918,bop_6934,])
output2 = relay.Tuple([call_6839,call_6861,const_6860,call_6867,call_6882,const_6881,call_6888,bop_6918,bop_6934,])
func_6944 = relay.Function([var_6880,], output)
mod['func_6944'] = func_6944
mod = relay.transform.InferType()(mod)
mutated_mod['func_6944'] = func_6944
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6945 = relay.var("var_6945", dtype = "uint64", shape = (2400,))#candidate|6945|(2400,)|var|uint64
func_6944_call = mutated_mod.get_global_var('func_6944')
call_6946 = func_6944_call(var_6945)
output = call_6946
func_6947 = relay.Function([var_6945], output)
mutated_mod['func_6947'] = func_6947
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5911_call = mod.get_global_var('func_5911')
func_5912_call = mutated_mod.get_global_var('func_5912')
call_6958 = relay.TupleGetItem(func_5911_call(), 0)
call_6959 = relay.TupleGetItem(func_5912_call(), 0)
func_4164_call = mod.get_global_var('func_4164')
func_4167_call = mutated_mod.get_global_var('func_4167')
const_6977 = relay.const([0.480616,8.954471,-9.806514,-0.771760,-6.126580,0.205233,4.121022,-7.626604,7.867343,-0.715907,4.875987,9.012004,2.439680,3.880586,4.012998,-6.230804,-4.864682,-0.399210,1.970471,1.052016,4.417052,-9.438778,1.435107,1.925916,4.065963,5.040106,-1.751877,5.345249,-2.833613,-0.781963,-0.106794,-5.967576,-8.554916,8.224916,9.094185,-6.768821,-2.521684,-4.030883,6.040009,-4.764546,8.112010,5.933042,-3.352333,-3.623207,-7.275892,0.686725,2.722905,0.892604,-0.429673,0.385628,6.177027,4.023665,-6.144654,-3.679920,5.747092,-5.887216,-2.722560,-4.495946,1.816913,8.943654,-1.679587,-2.533575,-7.980326,1.752096,-7.047461,0.741389,-3.547374,4.108148,-1.693566,6.992053,3.527921,-3.855899], dtype = "float32")#candidate|6977|(72,)|const|float32
call_6976 = relay.TupleGetItem(func_4164_call(relay.reshape(const_6977.astype('float32'), [72,])), 6)
call_6978 = relay.TupleGetItem(func_4167_call(relay.reshape(const_6977.astype('float32'), [72,])), 6)
func_5338_call = mod.get_global_var('func_5338')
func_5340_call = mutated_mod.get_global_var('func_5340')
call_6985 = relay.TupleGetItem(func_5338_call(), 0)
call_6986 = relay.TupleGetItem(func_5340_call(), 0)
func_2937_call = mod.get_global_var('func_2937')
func_2939_call = mutated_mod.get_global_var('func_2939')
call_6988 = relay.TupleGetItem(func_2937_call(), 0)
call_6989 = relay.TupleGetItem(func_2939_call(), 0)
func_4600_call = mod.get_global_var('func_4600')
func_4601_call = mutated_mod.get_global_var('func_4601')
call_6990 = relay.TupleGetItem(func_4600_call(), 0)
call_6991 = relay.TupleGetItem(func_4601_call(), 0)
func_4020_call = mod.get_global_var('func_4020')
func_4022_call = mutated_mod.get_global_var('func_4022')
call_7000 = relay.TupleGetItem(func_4020_call(), 3)
call_7001 = relay.TupleGetItem(func_4022_call(), 3)
output = relay.Tuple([call_6958,call_6976,const_6977,call_6985,call_6988,call_6990,call_7000,])
output2 = relay.Tuple([call_6959,call_6978,const_6977,call_6986,call_6989,call_6991,call_7001,])
func_7017 = relay.Function([], output)
mod['func_7017'] = func_7017
mod = relay.transform.InferType()(mod)
output = func_7017()
func_7018 = relay.Function([], output)
mutated_mod['func_7018'] = func_7018
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2248_call = mod.get_global_var('func_2248')
func_2249_call = mutated_mod.get_global_var('func_2249')
call_7058 = relay.TupleGetItem(func_2248_call(), 0)
call_7059 = relay.TupleGetItem(func_2249_call(), 0)
output = relay.Tuple([call_7058,])
output2 = relay.Tuple([call_7059,])
func_7064 = relay.Function([], output)
mod['func_7064'] = func_7064
mod = relay.transform.InferType()(mod)
mutated_mod['func_7064'] = func_7064
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7064_call = mutated_mod.get_global_var('func_7064')
call_7065 = func_7064_call()
output = call_7065
func_7066 = relay.Function([], output)
mutated_mod['func_7066'] = func_7066
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1986_call = mod.get_global_var('func_1986')
func_1988_call = mutated_mod.get_global_var('func_1988')
call_7101 = func_1986_call()
call_7102 = func_1986_call()
func_1158_call = mod.get_global_var('func_1158')
func_1160_call = mutated_mod.get_global_var('func_1160')
call_7127 = relay.TupleGetItem(func_1158_call(), 0)
call_7128 = relay.TupleGetItem(func_1160_call(), 0)
output = relay.Tuple([call_7101,call_7127,])
output2 = relay.Tuple([call_7102,call_7128,])
func_7138 = relay.Function([], output)
mod['func_7138'] = func_7138
mod = relay.transform.InferType()(mod)
mutated_mod['func_7138'] = func_7138
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7138_call = mutated_mod.get_global_var('func_7138')
call_7139 = func_7138_call()
output = call_7139
func_7140 = relay.Function([], output)
mutated_mod['func_7140'] = func_7140
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5911_call = mod.get_global_var('func_5911')
func_5912_call = mutated_mod.get_global_var('func_5912')
call_7156 = relay.TupleGetItem(func_5911_call(), 0)
call_7157 = relay.TupleGetItem(func_5912_call(), 0)
output = relay.Tuple([call_7156,])
output2 = relay.Tuple([call_7157,])
func_7177 = relay.Function([], output)
mod['func_7177'] = func_7177
mod = relay.transform.InferType()(mod)
mutated_mod['func_7177'] = func_7177
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7177_call = mutated_mod.get_global_var('func_7177')
call_7178 = func_7177_call()
output = call_7178
func_7179 = relay.Function([], output)
mutated_mod['func_7179'] = func_7179
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6545_call = mod.get_global_var('func_6545')
func_6547_call = mutated_mod.get_global_var('func_6547')
call_7200 = relay.TupleGetItem(func_6545_call(), 0)
call_7201 = relay.TupleGetItem(func_6547_call(), 0)
uop_7209 = relay.log10(call_7200.astype('float64')) # shape=(2, 15, 8)
uop_7211 = relay.log10(call_7201.astype('float64')) # shape=(2, 15, 8)
output = uop_7209
output2 = uop_7211
func_7221 = relay.Function([], output)
mod['func_7221'] = func_7221
mod = relay.transform.InferType()(mod)
mutated_mod['func_7221'] = func_7221
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7221_call = mutated_mod.get_global_var('func_7221')
call_7222 = func_7221_call()
output = call_7222
func_7223 = relay.Function([], output)
mutated_mod['func_7223'] = func_7223
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1111_call = mod.get_global_var('func_1111')
func_1113_call = mutated_mod.get_global_var('func_1113')
call_7290 = relay.TupleGetItem(func_1111_call(), 1)
call_7291 = relay.TupleGetItem(func_1113_call(), 1)
func_3548_call = mod.get_global_var('func_3548')
func_3550_call = mutated_mod.get_global_var('func_3550')
call_7311 = func_3548_call()
call_7312 = func_3548_call()
bop_7320 = relay.floor_mod(call_7311.astype('float32'), relay.reshape(call_7290.astype('float32'), relay.shape_of(call_7311))) # shape=(15, 14, 5)
bop_7323 = relay.floor_mod(call_7312.astype('float32'), relay.reshape(call_7291.astype('float32'), relay.shape_of(call_7312))) # shape=(15, 14, 5)
func_814_call = mod.get_global_var('func_814')
func_817_call = mutated_mod.get_global_var('func_817')
const_7332 = relay.const([-5.953527,-6.420000,-9.630521,-2.740895,1.927737,3.498950,-2.717974,-3.995812,-4.861394,6.756717,-7.748569,-5.533915,6.366322,7.235905,6.311957,1.441292,0.698074,5.013117,-8.695138,2.487034,4.341464,1.081531,7.282670,8.000448,1.186490,2.866623,-5.579086,8.525761,8.070651,-3.573962,-0.665914,-1.194128,7.486073,6.130538,6.499276,5.322135,0.615251,7.534541,-6.985132,3.439771,5.199011,9.420845,-5.824265,6.233491,2.582340,-2.306931,0.195759,4.408296,5.245052,-9.705117,9.294452,5.262621,5.209131,-3.551356,4.082959,8.030560,-3.334124,2.762155,-8.816261,-9.436544,-8.621042,8.974786,-0.968551,6.806389,-2.494638,-2.307632,3.134600,-3.706369,-9.888622,0.636117,-7.905590,-2.540564,8.291184,8.706312,7.934060,-8.951827,2.640210,3.417186,-4.263045,4.367231,5.921291,8.180642,1.924518,9.141773,-0.390088,-9.050875,0.641196,6.738724,-8.906743,-2.427590,-5.761064,7.333558,7.075494,1.799975,1.092147,-8.239941,2.907765,-3.955279,7.918824,-4.836254,-0.259160,2.781342,-7.585323,-3.740528,5.921327,-2.220571,7.512880,6.111812,-2.972400,0.396266,8.821315,-8.127981,9.554678,-8.753592,-8.243743,-5.263799,7.490485,8.203913,-2.440081,-4.531307,-9.914765,3.865054,-8.774870,-8.251122,-8.221339,1.422624,4.074234,-9.142209,-0.350238,-1.921098,4.142862,6.146237,-2.466393,-4.579187,-9.892927,-4.548362,8.917243,4.116527,7.294242,3.523391,0.853192,6.865909,-2.435153,2.651109,-4.726389,-6.027152,-9.546838,-0.300058,-8.718700,5.367429,7.569356,4.536081,9.584285,0.240744,5.382183,-0.415139,4.160974,2.358154,2.733709,-7.923424,-8.695586,-5.481799,-6.513805,1.042149,9.831384,1.962324,8.387220,-4.147756,1.243717,4.978278,-2.393990,0.997807,4.676488,9.235279,0.604231,0.344456,-2.887718,-9.036727,-3.350153,4.732145,-6.271309,5.425743,-2.911356,5.973502,6.004511,-7.806705,-7.425927,5.856959,-9.350498,6.048757,-3.263748,-2.456362,-2.388884,9.274074,-7.838586,-0.156812,0.450095,-7.460658,4.859382,-0.830539,-1.244578,-9.996666,-2.928150,0.010997,9.792745,4.750292,1.799184,-2.988135,-9.647959,-8.448670,2.898420,-7.071808,-5.038667,-1.832124,-1.961340,-3.037362,3.253562,5.235158,-5.510008,-4.003629,7.582956,0.808077,6.267389,-6.730904,3.993172,8.534532,-7.220699,-5.659471,-4.521904,-5.396691,0.951187,-9.618616,-0.250938,-4.439449,-0.008950,-5.870402,-4.459746,-8.870518,6.943485,-0.611062,6.754656,5.086638,9.815118,6.314692,-6.294563,-0.688886,-0.851944,-6.258065,-7.305679,-4.192673,-6.149033,2.422941,-9.017774,-1.008661,-6.229571,9.001358,-1.448407,0.039997,-2.721635,-3.528378,3.677481,-4.254966,8.539039,-4.282872,6.836461,-1.240984,1.439572,1.849300,8.245173,0.680453,-6.033220,4.973184,-8.521348,-0.050970,4.705426,9.021217,5.407294,0.305688,6.248407,-9.350479,-2.924643,-5.657077,-4.168021,6.384514,0.094474,-3.410837,9.823679,9.871475,-8.952200,-9.935917,-4.599837,-1.459710,4.058720,-8.464121,7.736605,-5.832888,7.756365,7.820500,-0.831881,2.700274,-9.895961,5.040489,5.676051,5.536720,-4.058695,-3.666619,2.473533,-0.323425,-5.544856,5.078577,7.147783,6.834364,-4.011272,4.270737,2.865149,2.555823,-4.318915,-5.898469,8.072097,5.148998,0.586152,-0.037049,6.782580,-4.671014,1.883468,6.862254,9.437920,6.245823,-2.146195,-0.507575,7.757758,9.672432,-3.933918,7.706269,6.372341,2.488397,-6.914184,5.507959,-6.805954,6.380637,-4.664309,-8.502787,7.285016,1.247640,-5.864144,-1.930153,0.723922,0.705129,3.897619,0.552007,-9.838606,3.474922,-8.594063,-3.877969,-5.173604,-5.462315,-9.463268,-8.577428,-5.813984,4.612282,8.704656,-7.931881,2.273869,-7.478470,0.605231,4.673615,-5.385885,-5.221207,-4.852267,3.366900,0.024903,0.010489,0.569538,0.404712,2.878426,-6.461430,-0.022026,-8.699183,7.894263,-6.111437,-1.103703,-6.762363,8.170821,-3.667401,7.721782,-2.288098,1.341217,-1.150550,-2.959679,5.839595,8.397775,-9.252695,-3.767874,5.714570,-5.316451,-8.541848,-8.229169,0.251668,-4.040405,8.901796,-2.436443,-4.502660,8.622027,-4.356169,-4.975000,1.501031,0.495215,-2.604439,-2.914892,7.748611,5.126246,-9.291615,-1.201201,7.043139,7.769514,-1.818561,4.510214,4.800141,-2.765290,-6.813556,4.761365,-3.424636,3.887447,6.314632,-9.711818,-8.865726,-8.895075,3.763157,6.397680,7.645565,5.016475,-2.589409,-4.688353,5.912548,6.442563,-4.606008,-5.912792,6.003380,8.701279,4.691595,-3.287656,1.825257,-1.579627,9.153878,-4.555449,-6.836605,8.951467,-4.299750,3.484797,-3.197764,0.919220,7.601412,6.053836,3.536954,3.493432,-2.893143,2.445111,1.659036,3.866715,4.857924,8.434032,4.893499,-6.105548,0.269149,-5.535289,-1.783039,-9.531899,4.281839,-3.309082,-4.015037,8.607804,2.840516,-0.042249,1.698613,-1.437054,5.010512,-1.602178,-0.652176,-5.547301,-8.253140,7.213503,-1.448370,7.461107,7.310720,0.136208,6.030967,-2.352939,9.194702,4.473855,-3.996991,3.016153,-6.882595,4.675531,-4.419220,-7.372816,-1.679669,9.696533,4.546824,-9.823665,-7.554840,-5.943887,-6.226640,5.850115,3.640087,-7.761250,-6.567884,-9.668068,-8.932410,8.949153,1.634454,3.573817,3.943250,4.081370,0.271080,1.612737,2.098701,-8.522127,-7.360373,5.661854,-7.477371,-6.328078,5.863644,2.718080,-9.726644,-6.593073,-3.819349,2.106719,-1.963022,-9.488224,-8.456733,6.973396,2.703230,5.170720,0.999516,-6.605104,7.023480,-0.252082,0.535040,-2.006275,-2.476493,5.864108,-9.853136,-9.825130,5.806368,9.928259,-1.276963,3.881442,-2.118947,-0.629656,8.145294,1.614718,0.140907,3.181544,-8.050493,-3.081793,-1.331570,6.769857,-8.257420,0.090017,2.102440,1.380245,-1.307517,5.637047,5.148584,-8.937402,-9.368512,5.953062,-4.360099,-5.063903,-6.527003,3.682893,4.113139,-3.651302,7.905102,2.285518,-7.234804,-8.298679,-4.423574,1.283376,1.739343,-1.454173,5.392251,6.793479,4.276242,-7.267062,-0.552003,-7.672330,0.205779,2.244219,2.865223,4.046525,6.517486,-9.612293,9.510578,-4.229424,8.186967,3.042416,-9.175519,-1.369297,-8.821787,-3.452078,8.131189,-5.120179,7.847555,8.564750,1.465374,-3.787831,-3.450989,-8.676907,-8.805007,2.400495,5.706430,-9.869838,9.858103,0.003854,-9.501347,1.707037,1.315510,-0.370665,4.591417,7.169837,-3.825319,-2.978424,-5.783270,-9.833615,3.109839,-1.291731,-6.634801,-8.700302,-8.076410,-3.706444,0.264775,-6.888363,9.654764,0.261182,-1.254832,3.687636,-3.367245,2.756853,-4.407693,4.977763,5.365304,7.579641,3.812829,-7.736361,2.645041,-5.099525,-8.581090,1.475861,3.901891,-3.186626,9.327016,-7.198357,9.263339,-4.472166,1.577622,6.742516,-9.430639,4.671743,5.493918,0.802256,-3.826095,9.096240,-5.406436,-0.125522,-2.148340,3.956735,9.892178,3.555446,9.836650,-3.935266,-7.633245,-9.161205,-7.667845,-6.392194,0.241051,5.770288,1.427574,-8.579638,0.097976,3.933202,2.005123,-8.299911,-7.305506,-7.997505,0.386607,-3.882323,-6.435072,-9.785875,-8.040929,-2.008261,-8.658231,2.745749,9.959017,3.163599,2.614581,-5.393575,1.389170,5.777148,-1.805861,-6.007739,-5.150500,6.127808,4.923847,-4.788050,-1.706863,3.944656,-8.774961,-0.979842,-4.851982,-1.293193,-8.434979,-4.256663,8.326001,4.649593,9.433507,-5.126051,4.835719,6.122760,6.830152,-1.300182,-0.974798,5.531608,8.300355,-4.237879,6.119526,0.823942,9.667903,-3.919733,5.270903,1.851857,9.439055,-0.471593,7.047866,8.030566,3.692820,3.138544,8.222376,-8.002342,-8.541134,-9.668414,-1.610359,-2.503828,1.010238,-1.132870,-4.061776,-9.724579,7.859277,-4.632292,-6.123988,-8.507305,-3.904882,9.923275,-1.332874,-6.757217,6.793640,-6.846912,-8.832105,0.177228,3.407547,-4.175657,1.546645,2.314652,8.132421,-5.287184,2.487805,-4.225218,-7.132505,3.457274,0.217269,9.278397,-6.205027,-3.925877,-3.672192,1.423882,-3.222618,-0.987002,-3.768549,-9.975471,2.883731,2.142535,4.927864,-5.294302,8.652450,-8.895695,6.017583,9.381221,-4.854073,-5.677924,-9.815155,-8.336822,6.059671,-1.218782,9.124903,-9.089883,2.283786,1.791168,6.068414,-9.742717,-6.673572,2.356618,1.627986,1.452432,9.402399,-3.972039,4.845666,-0.554838,5.194168,-9.370008,4.633077,-7.570412,-1.408984,-9.491697,0.658422,9.254757,8.179474,-5.328085,9.177086,-9.657727,5.410469,-4.275544,-6.443518,-6.707968,-4.466698,-6.192596,4.020326,-7.572156,-2.462053,7.475137,-6.075300,3.732101,6.863827,-0.351084,-3.446417,0.706609,6.055633,-4.766393,-5.109377,-7.172227,-8.737526,5.339905,2.303401,5.546855,-0.593480,4.526055,8.679719,-9.727598,-8.591125,-8.022365,-1.506212,0.794427,3.904528,1.555974,-7.612285,-9.152295,-8.457086,-9.355713,-9.373282,0.084043,-9.945900,9.925155,-2.177008,-0.420804,-9.597221,9.619820,7.012855,-8.114503,-8.456566,-6.835518,1.110167,9.143216,-6.958753,7.008997,-1.360248,6.431519,-2.941463,-3.404946,4.102913,6.132204,6.328616,-6.218779,2.976439,-4.563734,-2.183648,-1.145796,7.168101,6.658349,3.356240,-7.738582,7.335269,-8.558756,-2.935499,-5.511911,-7.052269,3.687822,-7.008232,-8.409763,5.147781,-4.062863,3.000888,5.929832,-9.592542,9.874546,-4.223285,8.276118,7.648714,9.042759,8.480539,3.520331,2.937234,2.776102,-9.586985,-7.322467,-6.231589,1.081638,1.141091,9.789080,1.017976,-9.260609,-5.906610,-6.448756,0.385006,-3.087448,1.199987,-0.424460,-9.061779,2.853315,8.776719,-9.509032,-4.478271,-5.295291,5.788612,6.229453,-6.946336,-7.958106,-3.000807,-0.867650,-1.799908,-1.917552,2.116373,-0.866844,-7.794475,-0.260378,0.012260,-6.306900,7.299073,-0.742680,-5.603910,3.957733,7.592689,3.506778,-3.854283,1.169720,-4.746987,1.400777,8.711451,-0.291569,5.218244,5.482725,9.399783,-4.416317,-0.954941,1.338686,-3.151805,1.977768,-3.988150,4.326753,1.453476,1.409406,-0.990477,5.894448,9.725881,-8.128881,-3.913240,5.600826,0.285479,-5.364342,-9.262747,-7.954591,2.909010,-3.032465,-6.661797,-5.151532,1.774829,-9.408374,-8.360841,3.737790,4.084934,-6.596676,2.077568,1.503765,9.399945,6.785834,-5.657647,2.447501,8.660931,8.719104,4.513616,6.347655,-5.234519,5.220417,5.319036,-4.484136,-9.497087,5.852717,-8.275395,-2.629251,-5.332907,-3.750798,4.244407,-5.945652,8.638223,-4.796076,-7.853527,8.938155,5.876590,7.779890,4.499403,0.377526,0.794691,-1.344220,-4.628697,1.553191,-7.894765,7.833846,3.752429,-3.913855,7.998990,-8.071601,5.885759,-9.524047,-7.392692,6.895814,1.331338,2.387169,6.392777,0.247829,-1.096812,6.277707,-8.988743,-0.881158,-3.613681,-5.943697,0.812335,1.538705,7.776694,-1.572468,-7.802556,9.991907,-7.735140,-7.250375,-5.067831,8.765511,-9.041360,9.501633,5.311859,2.438999,2.018976,-0.463224,-3.202083,2.571936,4.520635,9.037766,6.866549,-9.849536,2.122946,-9.332870,-3.982804,-8.087341,-5.490349,6.956452,2.269543,1.813508,-1.536135,5.732470,-9.928186,-7.900080,-2.660551,4.046387,3.600447,-7.156464,-9.779304,-1.547444,-2.372230,1.020357,5.120088,4.845723,8.196215,9.667799,-8.678873,-4.271477,8.614784,-9.675745,-5.946367,3.476717,0.148630,-1.914377,-0.433717,-3.199248,2.849907,0.652929,-8.325406,3.142048,-6.916924,-6.463770,-2.361741,5.369209,7.480576,3.625197,8.359153,5.172828,-8.731002,-1.554624,2.548473,-8.798540,-1.066904,2.087346,-5.497732,3.438485,1.913253,7.224447,-6.116713,4.851739,-6.339290,-7.645015,6.515207,9.065739,5.341317,7.218914,-4.349133,-9.664974,2.641231,-9.582993,-7.575752,-2.711848,0.567759,0.635547,-1.108371,7.883195,-9.640351,-3.599456,-2.751950,1.681068,3.495835,-4.338904,-7.329365,6.486697,-7.665227,8.440988,1.135440,-3.324521,6.818131,-8.343065,-7.808776,5.681133,9.946554,-4.701208,3.008293,-1.930230,-0.172615,-6.969766,3.583222,4.288193,2.281773,-0.084589,-0.577915,4.407020,5.635949,-4.571404,-5.916333,-3.863172,7.206655,6.520319,-1.598956,-3.652571,-3.999722,-3.681247,-1.076341,9.102159,-1.839648,-4.647655,-4.376360,2.541714,0.308945,7.512118,0.767257,-3.040432,-7.830475,1.395661,2.409334,-2.441987,-6.420544,4.852749,-8.152974,5.205989,-9.951900,2.180974,8.303830,-6.817802,-5.261568,-4.615215,4.119760,4.734045,-8.729833,1.223940,-2.588010,8.862758,-6.263321,4.823183,7.179337,3.082258,-9.320151,-5.507885,3.627931,-2.024415,-1.041006,8.501001,4.793246,-2.876886,8.747077,5.212288,2.140457,7.632396,6.439453,-0.572636,4.072814,6.946039,-6.811657,9.196522,-2.781353,-2.645135,4.924413,1.387422,-3.349705,-8.387111,0.331200,0.935049,1.395023,-2.328256,3.022033,8.326093,-1.138555,-6.793718,4.805524,3.230250,3.840584,-0.170242,7.596414,-4.442715,7.014280,-0.894081,-8.176395,7.995203,-6.868333,1.835749,-9.964797,-9.134210,7.335153,-1.026776,-3.500567,-2.931200,9.383918,-9.590140,-7.807518,-0.655308,-1.618688,-7.152683,-8.557018,-7.397179,9.917477,-9.696090,-6.044889,9.222491,2.000266,-1.313869,8.060979,7.104724,-9.943841,1.336161,-0.110932,-8.588836,-5.625185,-0.060232,6.092201,2.641967,-4.358157,-1.986901,-3.148394,-9.765935,5.631561,-3.649947,9.131203,8.025098,5.757634,1.886801,-6.528205,-0.509692,-6.720112,9.517576,9.213663,9.875687,-6.557469,9.492159,0.775121,-8.033755,-6.775532,8.932323,5.529335,7.293421,4.661003,-3.252750,3.228642,1.778915,9.488992,4.309004,2.774167,-1.762294,-3.195433,8.221409,0.907646,5.261662,-5.516938,-0.405481,0.260267,-1.829859,-0.701264,5.892223,-7.421897,7.388317,1.746880,-1.090879,9.941061,1.990568,-5.099914,2.884733,-7.736482,-8.860276,4.975290,-9.490447,-0.017074,-9.057398,-7.723520,-3.728848,-9.818485,-2.716493,-0.725867,-8.592682,-1.215841,-9.030293,-0.187595,-3.617842,-7.095343,0.859785,0.166555,-7.560192,8.397484,-8.933700,-1.187966,-0.407498,4.490385,5.498137,5.893653,9.687664,5.743932,3.258889,-7.478611,-7.695789,-2.664957,-4.280489,-6.077283,8.520114,0.675201,4.407670,2.123651,-6.843587,-2.402977,-8.568854,-0.855619,6.864339,7.062541,9.258267,5.711700,-8.836848,-5.485934,0.285292,-5.455290,-7.408917,9.950826,3.943773,8.955448,3.819162,2.986875,8.710517,3.225154,5.058640,3.138874,-7.158838,2.526117,-5.793156,-2.894180,-3.488513,3.047122,-8.828593,-9.325553,0.294685,-4.916995,7.304255,-0.068484,3.197648,-0.347865,3.044011,7.549758,-7.233487,-7.178609,-9.050407,-1.519199,9.598648,9.609822,-9.250150,-2.547210,5.158533,-8.840027,-7.493936,-2.138219,8.937884,8.388920,-3.188460,-5.372181,2.355990,-4.219518,8.500886,-4.571083,-3.049973,4.534040,4.607912,-9.137335,-1.492720,5.341748,6.315863,-3.726154,-8.368171,0.494277,-0.251159,5.285140,5.400025,-7.089337,3.211584,9.345874,-9.526465,-6.009703,-2.155824,1.419179,-3.151901,-4.315656,-4.499161,-9.352824,-6.414962,3.523870,5.358331,-4.385627,-7.073597,-3.152869,2.508425,1.477008,-0.827684,5.022492,-9.643684,3.420451,2.886494,2.296889,-9.634373,5.698408,6.651409,6.139221,4.126875,8.959071,-6.304087,5.459960,-0.125638,-9.105747,9.704372,0.222377,-7.309207,-3.397593,-2.022449,7.354598,0.760615,3.801059,2.397547,1.051663,-7.971434,7.763682,-2.873751,-3.691142,9.426637,0.980256,-0.642751,6.013196,5.808496,8.619549,8.122333,-3.843095,1.450038,5.358597,9.832011,3.438247,-2.559148,-0.030996,-2.371976,3.694889,1.254822,-8.092736,3.046647,-0.493705,3.116381,1.185416,-5.931263,2.325495,5.200908,7.900095,4.693606,4.697298,5.716704,3.477127,-6.060024,8.368571,7.987341,-8.647707,6.631273,-5.984407,-7.875561,9.469817,5.057604,-4.236655,-6.482318,9.904778,-4.617347,3.673666,4.128268,2.681541,9.529843,0.162425,-2.177831,7.384789,6.526063,-3.454697,2.448089,-7.677173,-2.670803,-6.169581,-2.885002,4.707282,-9.127498,-0.784318,6.398507,0.946086,7.885994,3.747462,-8.288042,5.843925,-2.380571,1.121395,-0.332342,7.622208,-9.269699,8.489697,1.230654,-4.396785,8.272528,4.052251,-0.946336,4.874471,-5.503973,-4.097693,9.515438,-4.947578,8.850453,-0.922119,4.803614,3.491259,0.429777,9.699419,6.706001,-3.128521,-3.857771,1.100332,-2.650647,-9.934099,2.112427,-3.965747,7.622694,3.281211,-3.292760,-3.432080,7.068127,-2.053957,-3.152302,1.662857,0.112518,-7.583143,-4.842309,-6.568949,-1.624871,0.204203,1.239058,-0.749613,-6.823111,-3.007599,6.712676,-8.566126,-8.196548,3.621079,-8.945843,-3.953426,-7.993861,-2.446338,-9.343341,-4.124108,5.767370,-8.393218,4.154445,3.320704,-8.170244,-1.860896,-0.143738,-2.734713,4.731905,8.948707,8.377822,7.893216,-9.918946,-4.992835,9.313794,5.994432,-7.201411,6.030798,2.693823,2.932370,-7.205277,9.276298,-5.630887,2.615283,-3.039234,-5.509715,-3.767837,2.175589,8.254547,1.506237,-0.778653,3.209267,7.604642,-6.586767,-0.073446,-9.614638,-8.212312,6.004179,-0.244281,-3.934602,-3.906491,-1.803185,7.561316,2.932423,4.411002,5.702254,-0.221192,-0.638413,1.627230,-8.905519,-9.312293,9.436655,-2.329591,9.344009,9.946794,7.700471,-7.607313,6.697276,-3.411244,-3.650993,8.938449,6.812623,9.111760,2.185458,4.329404,-1.602421,8.272548,-9.754166,-2.488258,-0.299899,6.903196,7.644495,2.236474,9.471745,-6.842968,7.103583,8.102418,8.887089,-4.444021,-2.415562,-8.122726,7.747123,-8.792022,1.694351,4.857468,-4.487199,-4.562544,4.630126,-9.147648,7.701382,-8.957885,0.165591,0.984015,-6.885341,5.590100,2.737821,5.275170,7.199290,-4.981494,8.990525,-1.648787,7.622206,0.300836,-4.278814,5.862298,-7.089055,-1.466329,-3.725056,-4.667396,0.732951,4.361924,7.187298,2.314448,-3.959708,-0.432695,-5.031905,7.701422,2.604981,-1.547969,2.916373,3.581449,2.985678,1.100007,4.480923,8.153581,0.832837,-6.102052,5.425033,-7.836413,4.091960,7.171440,4.738377,1.109936,-1.057057,7.196788,-6.734983,2.638888,-6.717994,6.900550,8.827542,9.398425,1.467354,8.882266,5.499670,-7.581775,-7.687953,-1.761658,-2.356107,-5.166669,4.008463,-3.303685,-0.563665,-4.531309,-1.638739,6.392019,-1.502229,8.002845,-2.618604,-9.811895,-5.528873,-3.704633,3.927936,-0.023239,2.900690,-8.573390,-5.123834,-2.840579,-9.923315,-8.223282,-8.305227,-5.465226,-1.923590,-5.914926,1.342128], dtype = "float32")#candidate|7332|(1792,)|const|float32
call_7331 = relay.TupleGetItem(func_814_call(relay.reshape(const_7332.astype('float32'), [7, 16, 16])), 0)
call_7333 = relay.TupleGetItem(func_817_call(relay.reshape(const_7332.astype('float32'), [7, 16, 16])), 0)
output = relay.Tuple([bop_7320,call_7331,const_7332,])
output2 = relay.Tuple([bop_7323,call_7333,const_7332,])
func_7341 = relay.Function([], output)
mod['func_7341'] = func_7341
mod = relay.transform.InferType()(mod)
output = func_7341()
func_7342 = relay.Function([], output)
mutated_mod['func_7342'] = func_7342
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4600_call = mod.get_global_var('func_4600')
func_4601_call = mutated_mod.get_global_var('func_4601')
call_7384 = relay.TupleGetItem(func_4600_call(), 0)
call_7385 = relay.TupleGetItem(func_4601_call(), 0)
output = call_7384
output2 = call_7385
func_7388 = relay.Function([], output)
mod['func_7388'] = func_7388
mod = relay.transform.InferType()(mod)
output = func_7388()
func_7389 = relay.Function([], output)
mutated_mod['func_7389'] = func_7389
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7417 = relay.var("var_7417", dtype = "float64", shape = (16, 2, 13))#candidate|7417|(16, 2, 13)|var|float64
uop_7418 = relay.acos(var_7417.astype('float64')) # shape=(16, 2, 13)
func_3763_call = mod.get_global_var('func_3763')
func_3765_call = mutated_mod.get_global_var('func_3765')
const_7422 = relay.const([[-9.522007,0.484136,-8.249632,-7.936376,-5.081487,-4.481338,-6.185605,2.177825,-7.185282,7.116715,4.859513,4.108348,3.290220,-9.964706,-4.260345,-5.755852,3.929040,2.397615,-8.286174,9.990079,-6.728296,-0.831325,-6.221561,-6.374345,-6.502432,1.226178,3.853981,-8.238247,2.194130,4.388787,-4.549384,-8.438932,2.871569,1.868890,5.323926,-9.594104,5.737967,6.814309,-3.694345,-7.677824,1.988588,4.959846,-6.458769,1.229512,-1.911469,-1.996725,-0.244540,-2.119169,-9.693629,9.659432,-2.559656,1.625054,1.086152,0.349135,-9.477968,-5.884364,5.487937,1.032119,2.276852,7.328367,3.271429,1.153401,-1.885198,2.751305,1.775872,9.202649,3.239880,7.581896,4.236941,-1.645732,-9.570431,1.445407,-6.512864,-9.689439,6.200075,-1.133572,9.335503,-2.298811,0.341105,-1.741573,-7.084913,9.408446,7.132211,-4.331885,9.584710,-2.688231,0.352116,-8.530061,-0.368694,-3.579310,-4.780675,-4.992744,-3.007990,-9.957954,7.243558,-9.098106,-1.803814,5.403464,2.566511,-0.966789,-4.132468,-8.083864,-6.447115,-9.107135,4.805158,-0.481185,8.451624,4.275237,8.722859,7.746842,0.593798,-9.324776,1.920077,1.109660,-4.938125,-5.734782,-3.252855,-3.245111,6.953348,-9.151595,5.120511,-9.516304,0.390931,-8.107520,3.614664,0.401026,-3.799206,-4.805218,5.053942,-8.716569,2.368775,1.767516,1.622450,-6.188492,-1.883275,-4.551384,7.276615,-5.537310,-3.144594,4.526041,-8.338066,-5.588578,7.054997,6.353931,-1.512194,-7.904118,-6.929988,-2.278742,9.910758,-3.021255,7.062197,-9.891907,8.896536,6.286789,8.767393,-6.009352,-4.713349,-8.770322,6.829740,-7.204846,4.707641,-5.627137,-1.610207,-7.931024,1.243211,9.941520,7.753296,-3.025638,-7.919690,-8.253647,-2.498676,-0.089912,-7.942386,-8.984736,-8.917062,8.515817,1.347803,7.925662,-0.132879,-9.689239]], dtype = "float64")#candidate|7422|(1, 180)|const|float64
call_7421 = func_3763_call(relay.reshape(const_7422.astype('float64'), [6, 15, 2]))
call_7423 = func_3763_call(relay.reshape(const_7422.astype('float64'), [6, 15, 2]))
func_7341_call = mod.get_global_var('func_7341')
func_7342_call = mutated_mod.get_global_var('func_7342')
call_7435 = relay.TupleGetItem(func_7341_call(), 1)
call_7436 = relay.TupleGetItem(func_7342_call(), 1)
bop_7449 = relay.greater(uop_7418.astype('bool'), relay.reshape(var_7417.astype('bool'), relay.shape_of(uop_7418))) # shape=(16, 2, 13)
output = relay.Tuple([call_7421,const_7422,call_7435,bop_7449,])
output2 = relay.Tuple([call_7423,const_7422,call_7436,bop_7449,])
func_7456 = relay.Function([var_7417,], output)
mod['func_7456'] = func_7456
mod = relay.transform.InferType()(mod)
var_7457 = relay.var("var_7457", dtype = "float64", shape = (16, 2, 13))#candidate|7457|(16, 2, 13)|var|float64
output = func_7456(var_7457)
func_7458 = relay.Function([var_7457], output)
mutated_mod['func_7458'] = func_7458
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5020_call = mod.get_global_var('func_5020')
func_5021_call = mutated_mod.get_global_var('func_5021')
call_7467 = relay.TupleGetItem(func_5020_call(), 0)
call_7468 = relay.TupleGetItem(func_5021_call(), 0)
output = call_7467
output2 = call_7468
func_7477 = relay.Function([], output)
mod['func_7477'] = func_7477
mod = relay.transform.InferType()(mod)
mutated_mod['func_7477'] = func_7477
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7477_call = mutated_mod.get_global_var('func_7477')
call_7478 = func_7477_call()
output = call_7478
func_7479 = relay.Function([], output)
mutated_mod['func_7479'] = func_7479
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3115_call = mod.get_global_var('func_3115')
func_3116_call = mutated_mod.get_global_var('func_3116')
call_7517 = relay.TupleGetItem(func_3115_call(), 0)
call_7518 = relay.TupleGetItem(func_3116_call(), 0)
output = call_7517
output2 = call_7518
func_7530 = relay.Function([], output)
mod['func_7530'] = func_7530
mod = relay.transform.InferType()(mod)
output = func_7530()
func_7531 = relay.Function([], output)
mutated_mod['func_7531'] = func_7531
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7530_call = mod.get_global_var('func_7530')
func_7531_call = mutated_mod.get_global_var('func_7531')
call_7547 = func_7530_call()
call_7548 = func_7530_call()
func_4957_call = mod.get_global_var('func_4957')
func_4958_call = mutated_mod.get_global_var('func_4958')
call_7552 = relay.TupleGetItem(func_4957_call(), 1)
call_7553 = relay.TupleGetItem(func_4958_call(), 1)
func_1523_call = mod.get_global_var('func_1523')
func_1526_call = mutated_mod.get_global_var('func_1526')
const_7555 = relay.const([[-6.920345,-3.648951],[-4.232180,3.713783],[7.530563,2.333926],[8.597669,-7.698110],[7.335741,-0.774231],[1.245313,0.323602],[-2.058564,-6.670698],[7.807733,-6.816425],[-6.685133,-4.675390],[6.237297,-7.235491],[3.259240,-1.425185],[-3.111706,-4.389694],[4.497261,2.119096],[-1.639886,3.981387],[-9.492399,4.056268],[-8.605517,2.983848],[-5.382675,9.996959],[-8.160552,-6.676811],[3.291336,-6.807285],[-0.307832,-2.697920],[1.117348,-9.256385],[-0.374119,-2.227966],[6.549346,4.308692],[9.546103,-8.832372],[-4.193280,0.331648],[-9.859884,-0.926144],[-0.795059,5.230555],[0.190205,1.636216],[-1.794066,-4.725154],[7.396329,7.844199],[-7.822330,-3.209723],[3.012980,5.141712],[5.094513,-2.767655],[9.464237,0.395177],[0.234658,-4.153758],[-7.176377,-2.838630],[9.211237,-9.403259],[3.075563,3.812355],[-4.355544,-4.352428],[-7.062973,8.878939],[-2.194134,2.129884],[-8.272051,-8.550589],[-4.621681,5.018814],[-2.596194,3.807787],[-2.764004,-1.665710],[8.243698,-8.713894],[-5.216456,0.818533],[-3.027438,-0.656738],[2.951843,-9.658371],[-4.293590,8.631318],[3.873664,-1.514682],[-5.512595,6.731496],[9.792033,6.454626],[9.026602,-7.634121],[-4.568482,5.535368],[-1.126421,3.077415],[1.720990,5.182381],[-7.655575,-3.480503],[1.865580,6.636991],[-7.980364,6.070517],[2.407305,-1.564165],[-3.491860,-4.378936],[1.511052,9.564497],[8.019070,9.909580],[2.856288,-9.394262],[5.986885,8.681649],[1.553879,7.950571],[-6.020796,7.417660],[5.172762,-5.167309],[-3.177791,-9.424622],[-3.041413,1.506843],[-5.690505,7.743684],[-1.789172,-6.313854],[-4.648987,-2.363407],[-3.333597,-0.007629],[-6.969613,-0.893127],[2.231228,9.971359],[4.004025,1.219533],[-8.089457,8.463350],[3.146198,-5.149707],[4.662946,-0.228371],[-4.090467,7.450355],[-0.132054,4.869902],[-5.699622,-1.623741],[1.654837,6.708141],[0.578519,-9.209322],[-4.869511,-1.727007],[-4.753234,5.862587],[5.415479,-5.123945],[-1.230055,1.475294],[3.755783,-2.598590],[-5.660554,6.999440],[-3.513409,0.324393],[-3.181265,8.380742],[5.648831,-3.969386],[-3.298801,9.764721],[3.545143,-2.015441],[-5.614287,-8.102487],[-4.697506,4.777419],[9.146114,-0.162056],[6.216771,4.343547],[-8.274009,-0.064859],[6.537703,0.006080],[-6.275843,3.222244],[-8.859102,-9.337185],[4.900972,-5.185161],[9.160121,8.012696],[9.635945,-2.415913],[8.824385,-6.450984],[5.664431,0.633272],[6.961329,-5.303621],[-5.023325,-5.406504],[6.562503,1.153599],[1.712271,0.498767],[4.137552,-8.002325],[-0.237313,0.671669],[-4.722730,2.998285],[5.861384,-6.442874],[-0.759186,-9.398980],[4.363793,4.370998],[2.344713,0.045543],[0.862881,2.041567],[9.270691,3.059294],[4.346612,7.817127],[-5.352208,4.581360],[-6.403922,-1.574925],[-0.764067,7.153968],[7.580483,6.865047],[3.398302,-4.829257],[4.145485,4.263844],[7.518553,-2.441540],[7.070129,-1.818393],[4.058885,8.984139],[-4.840715,-6.467831],[5.933730,-0.713365],[-5.068008,8.597200],[-6.591602,-3.715238],[-6.459910,2.703358],[-4.407910,-3.469415],[3.476743,8.438836],[-1.437634,-9.224983],[5.079335,6.175598],[-1.436636,3.787483],[0.092560,-9.651543],[-6.759262,9.957312],[-6.144655,-1.300413],[6.597517,3.263822],[-3.880505,4.124457],[3.180180,8.986644],[-1.501667,0.116009],[-7.484648,9.128957],[-1.137218,3.103037],[6.006704,7.989690],[7.042658,-9.513748],[-6.227316,-2.362882],[5.251808,4.403450],[5.244326,8.331130],[5.822620,3.778137],[9.371358,-7.118375],[-2.407617,3.890780],[-5.242898,-8.255792],[-8.811893,-7.100549],[-6.378206,3.999878],[-5.380397,-6.719105],[5.993061,9.790655],[6.745160,-0.013000],[-3.470098,-6.893412],[3.622382,-0.198021],[-3.955076,4.197578],[2.607340,8.114591],[-0.214157,9.491563],[9.476038,1.496857],[1.035387,4.671589],[2.851607,-6.726695],[-2.823602,-1.102631],[-2.152425,-5.987040],[3.817935,4.928299],[7.891967,-6.693380],[-7.258796,8.885130],[-6.103004,-9.154787],[0.741348,-1.639375],[-9.247795,-4.612098],[2.308235,-6.593838],[5.685492,-4.052825],[-9.183040,-5.180162],[-6.950069,-2.992851],[-0.306642,-2.631188],[-4.571826,9.017805],[-5.394600,-2.329301],[-9.364870,-4.698777],[5.034881,7.699317],[2.764500,-4.842723],[1.113092,8.164864],[7.524514,-3.576567],[9.680426,-7.508652],[-4.439728,-7.199023],[4.129762,7.518068],[8.722346,7.125847],[-3.976558,-1.792244],[-9.600328,8.428422],[9.720415,2.474088],[-9.415244,-0.799523],[-0.197499,0.744060],[-7.912729,-5.379988],[-3.366652,1.446324],[9.759929,5.791234],[5.563205,4.991759],[-4.059801,-7.559581],[6.530078,-5.107870],[8.435156,-3.703982],[-9.890239,-9.581926],[7.368934,-6.234982],[-9.200823,0.978312],[7.592915,1.262448],[-1.044001,-2.855275],[-7.832848,-0.731318],[2.720183,4.392839],[-4.607602,-2.110037],[-0.029626,5.825770],[2.096571,1.292012],[-4.636471,4.523415],[7.959623,-4.609211],[8.484370,-6.681519],[2.584886,-8.230062],[-8.210297,-2.356128],[2.613525,4.665241],[9.455440,6.859049],[-8.266022,1.113781],[1.216027,-3.277336],[2.237234,3.478512],[-8.666755,-2.116828],[-8.200356,-8.617655],[1.514690,2.320112],[8.922094,-4.480634],[-8.011532,-8.388593],[-4.439636,7.501496],[-8.838308,1.421639],[-9.461141,9.586295],[-3.263575,1.170176],[-5.489424,9.055206],[-6.304798,-9.828699],[6.487262,-3.656879],[-0.046214,1.563702],[-1.916416,-6.274128],[-0.084866,5.210298],[-5.242499,5.030316],[-6.769126,-0.291885],[-0.108058,-8.581343],[-2.847002,0.135723],[3.369772,4.003861],[-2.021186,3.729130],[2.541262,8.031582],[9.587868,9.854461],[8.151514,-0.189081],[8.960569,-5.698669],[3.463611,-0.711395],[5.697863,7.144762],[5.004003,-8.934904],[4.193296,9.863285],[-7.182274,1.519281],[9.516369,1.740437],[2.877130,-1.593916],[-9.632063,2.622269],[-1.095286,-9.755378],[2.041308,-6.185548],[-7.862914,-1.670767],[-7.602018,0.127622],[-1.433239,-5.677043],[0.003473,4.394509],[-1.964211,2.883571],[-9.856520,-7.753067],[-8.503927,6.451100],[-1.445528,-9.746252],[-1.471231,8.007545],[-6.087401,1.166886],[8.929019,-9.726582],[-6.727414,4.981479],[-8.399239,8.543787],[4.639954,4.084396],[-6.400743,7.687175],[-8.100301,-0.859350],[-1.619038,-9.336486],[-4.845317,-3.285617],[2.053554,-2.743492],[-7.366569,-3.523022],[-4.458480,1.512558],[8.354357,5.549489],[9.514627,4.515801],[-5.518736,8.359945],[8.873349,-3.963040],[3.140712,7.876867],[2.511103,-1.065718],[3.771976,-4.864359],[8.923407,-4.254163],[-8.758371,-6.088779],[-9.140701,-2.081671],[0.521252,-4.981136],[2.920701,-2.929240],[6.005117,4.627520],[9.555460,-2.936288],[0.667731,-9.733769],[-1.972711,5.044573],[-4.256775,1.437998],[2.771723,-8.207844],[5.933177,8.765565],[0.555290,7.521939],[7.608670,3.364222],[1.439512,-6.314843],[2.115218,8.573005],[4.862087,-5.162119],[-6.707375,-9.152638],[5.176563,3.578161],[1.782722,9.153852],[-5.080402,0.212473],[-4.931581,0.301518],[-2.583261,-8.763647],[-6.751705,-2.808621],[-3.830069,-5.379107],[-4.170821,8.571858],[7.764575,-5.653405],[7.055585,5.887250],[-6.933703,-6.131603],[5.101654,-6.885716],[6.275978,4.831529],[-7.868821,2.950398],[4.454907,-0.898189],[-1.054080,2.057017],[-7.852806,3.086500],[-2.113893,4.727415],[7.262610,8.864172],[7.776112,3.382946],[-6.059791,8.094953],[-0.909543,4.800457],[-1.180956,1.201337],[0.265310,-8.252631],[-9.014597,-5.930166],[-6.491908,8.060507],[3.525035,-7.812898],[1.372158,3.542558],[3.359866,-0.024589],[6.480741,5.720015],[3.270936,-6.603563],[9.265365,-2.168405],[-2.450028,-1.948022],[7.508050,8.752036],[-5.381066,2.143263],[7.591809,9.978091],[1.435752,-6.287345],[-7.002823,-5.751905],[-9.898688,-4.700251],[0.547233,8.941144],[4.815206,-8.745653],[1.987854,3.782231],[-3.823252,9.077977],[5.179834,-0.051368],[7.610351,7.889300],[-2.831200,4.270753],[6.472579,-9.066210],[6.868519,-0.662619],[-6.116043,7.207942],[-4.979947,0.319721],[0.564180,-7.442062],[-7.802788,-2.172590],[7.802626,8.788715],[6.373446,-5.388571],[-5.078425,-1.190891],[-6.500101,5.297909],[3.188103,7.791492],[0.016602,-1.976197],[1.430577,-9.513815],[6.118677,6.654006],[-2.928634,-5.914788],[-5.015042,-8.401754],[-7.119263,-5.447272],[-6.247721,5.845095],[-5.067246,8.179087],[7.187466,-0.281342],[5.182314,-4.072657],[9.908286,5.706834],[-9.088529,-3.520799],[2.524959,-8.256685],[3.007282,-3.294213],[-6.325628,6.561508],[-8.134443,-7.832154],[8.748849,7.655093],[2.260431,8.898338],[0.570842,8.939194],[6.219696,-4.674760],[-0.057516,-0.591493],[7.328574,1.835128],[-3.582850,-2.997613],[-0.503701,-1.099962],[-0.934643,-8.196093],[-4.584483,-8.404952],[-9.872577,9.673201],[9.326902,-4.474702],[-2.429496,2.142141],[-5.336291,1.266040],[-1.254963,2.651723],[9.303644,-7.361256],[2.333820,0.940863],[-4.634579,-8.248894],[3.107432,-4.549307],[3.063135,2.649015],[9.797742,-3.301987],[7.727113,-1.837269],[9.084325,-0.608658],[-3.196912,-4.508874],[4.192598,0.744955],[-3.073403,9.131965],[8.190318,-5.434387],[-3.266150,2.540445],[1.417092,4.264824],[0.340201,-1.289225],[-7.536538,5.022660],[6.191472,-9.697303],[-3.733567,-8.507676],[6.129325,-6.842673],[-4.357746,-3.825249],[-9.378217,-9.716776],[6.152866,5.854763],[-8.348895,6.956928],[-1.351035,5.546387],[3.090099,5.734356],[4.826761,-9.912555],[9.929469,1.877174],[5.006859,-5.546895],[4.354879,6.413470],[2.199676,-3.952553],[-3.780886,-0.913624],[-1.742791,-9.784651],[8.028022,8.615716],[-7.469808,-8.090869],[7.331174,3.551982],[1.877572,-6.118370],[-4.919527,5.754816],[-3.962442,8.476693],[3.595496,-8.467852],[6.727235,4.963772],[-3.220280,2.582626],[-9.730095,-8.344421],[-1.353409,9.234400],[8.640426,-3.151498],[5.409232,0.440140],[7.969961,6.818550],[-7.328175,4.287797],[-5.465521,4.313860],[1.504049,5.149539],[-5.520051,4.615512],[8.250238,-5.006190],[8.484639,1.943029],[-1.223759,-0.473700],[1.071940,-6.264516],[3.948937,-5.015375],[4.425864,-9.481357],[-8.921417,-3.263760],[9.928517,2.562891],[-0.747869,-6.575704],[5.468503,2.545905],[-4.167003,4.526548],[5.905934,-1.125917],[3.231144,-6.033178],[-5.630205,-3.009909],[9.351031,0.788034],[-9.015686,0.435584],[-3.607121,-5.145201],[6.201319,0.885646],[-1.721899,-5.410467],[-6.693744,-2.005132],[2.321885,-6.963655],[-3.949719,-6.183513],[-4.277053,-0.505151],[3.500652,3.814747],[5.038519,9.978502],[9.537810,7.719905],[6.831510,3.819954],[-9.858147,-7.189648],[1.103551,2.164528],[8.667112,1.548374],[5.582096,-0.466713],[2.958515,-7.516528],[-3.988996,-8.287362],[-6.301001,0.465472],[0.567765,3.113837],[-5.204588,7.460632],[7.357056,0.765005],[-7.801980,-3.574355],[5.477038,-1.515956],[-6.993281,4.638306],[-4.583925,3.546060],[3.893614,9.771278],[1.785340,-0.092417],[-2.267163,0.867205],[-9.814908,-5.433182],[3.895477,-4.925784],[4.670919,-6.031877],[9.940206,-6.260543],[5.233124,-1.927263],[-3.656038,6.631499],[6.640775,-6.194743],[5.335129,2.259218],[-1.139712,-5.581915],[-2.214054,-9.526683],[-2.029283,2.505910],[8.862740,8.458091],[4.606129,7.938983],[4.063272,-7.403223],[6.646457,-6.908851],[-7.890950,-3.534688],[2.855776,0.364882],[-7.092068,-7.772372],[-6.206605,-4.746424],[8.392763,-0.526193],[-1.493184,6.014300],[-0.641824,-9.015620],[-6.459789,-0.749870],[-0.185093,6.452403],[0.711898,0.429145],[3.324292,-7.667758],[6.571071,6.869949],[4.498934,-1.264743],[1.749737,2.361609],[7.416406,4.278843],[4.535457,-9.250941],[2.724941,7.088103],[-6.020681,-3.504136],[-1.900559,9.425016],[0.801159,7.955045],[-1.288528,-1.328947],[3.341200,3.844704],[7.463673,-6.467358],[-4.892085,-2.403796],[-2.154594,7.348140],[-1.772228,-4.806612],[-3.013399,5.893155],[-0.445688,-9.142985],[-2.664368,5.757895],[2.218060,-2.278759],[3.777350,3.159890],[3.834294,4.802580],[3.652414,3.685841],[-9.709205,3.799363],[3.056425,3.271747],[8.452602,2.200539],[-2.337587,6.307937],[0.232234,4.318181],[-5.065754,5.435060],[-3.824870,5.244513],[6.518459,-7.355771],[1.214000,-6.033710],[-9.457470,-0.803718],[-6.157098,0.102874],[-7.845954,-4.977938],[-5.341052,8.785336],[-4.404016,-7.512239],[4.489098,-4.647969],[-6.695972,7.392145],[-2.043613,0.619658],[3.624236,-0.338448],[3.829709,-7.448576],[-1.057968,2.644597],[-5.378970,0.213025],[2.458132,-2.094763],[-9.732817,9.418372],[0.804169,-5.003682],[3.887212,-3.089099],[9.089241,-6.542870],[-3.220323,8.003943],[9.101803,1.353162],[2.947527,-8.327482],[-0.150912,5.648160],[4.707059,-7.137132],[3.071003,1.872708],[-3.976592,5.853198],[-3.722891,-4.430397],[3.183938,-9.153452],[-1.199029,-2.324662],[-4.796013,0.867075],[5.471746,7.470846],[6.131321,0.733176],[-7.508345,5.069833],[-3.465104,4.887246],[-6.757991,2.459413],[8.067984,-6.381445],[7.488473,0.662020],[3.138270,5.083527],[8.367482,-4.872210],[-2.487409,-6.429028],[-8.518247,0.790688],[-8.267675,1.063768],[-8.171222,-5.745917],[-8.762288,0.447556],[-8.697366,-1.606316],[4.065029,-5.602362],[-8.004368,-2.382097],[9.665279,-9.705795],[-3.536872,-8.023607],[-5.898789,-3.992990],[7.027988,-7.562963],[7.163973,4.048139],[-1.752702,-1.040843],[5.519883,-2.053997],[1.119963,-4.642929],[3.566351,-3.776491],[-8.685606,3.638318],[-3.462013,7.058132],[-1.916464,-3.541501],[-3.306959,6.223539],[3.230648,-3.933612],[3.302174,-1.000795],[8.520267,9.433357],[0.404471,8.361239],[-5.295371,-6.500971],[-0.688577,-0.688308],[5.980967,-4.195439],[0.630852,-9.253151],[1.448569,6.932137],[-7.462528,8.184713],[9.433945,-7.853982],[-1.792190,-2.419745],[-0.249325,-1.467540],[3.492630,-2.189692],[8.311992,-8.517257],[-8.306959,9.255431],[6.692593,-9.612144],[-1.031064,-2.325729],[-4.493824,7.254407],[-2.651833,-0.442755],[-0.834302,4.095069],[3.754307,9.138582],[-8.100926,7.553047],[-2.357163,9.917785],[-0.057617,3.832031],[2.737033,-7.620714],[2.893273,9.256835],[4.766529,-7.673034],[-3.469672,3.074146],[8.667785,-7.679032],[-4.945468,4.627625],[-8.119562,8.891661],[-4.942568,1.837093],[-7.990377,-6.193238],[2.105499,6.659949],[0.225486,1.696172],[7.818499,1.554616],[4.487756,-3.943911],[-2.114451,-2.643649],[-2.932069,2.777798],[0.156855,5.207926],[-5.779163,3.760549],[5.474054,-3.627577],[-8.353817,-7.953215],[4.373860,6.715568],[8.220312,-6.766984],[8.728061,-0.594005],[-4.722291,-8.947740],[-9.043613,6.080641],[6.999230,9.137181],[2.291357,3.715007],[9.394399,0.537733],[-0.375821,2.732211],[7.253911,9.500215],[-3.305401,-5.120995],[1.935874,-7.553308],[-9.212736,-2.780711],[-0.550704,-6.557675],[6.371608,-1.043941],[0.822619,7.342479],[-1.048071,5.412268],[7.193029,-6.863423],[-6.459736,-4.429927],[9.911192,-5.298337],[4.602427,-3.573269],[-6.520729,9.833286],[-6.352193,-4.135451],[-5.443833,9.859523],[-7.621201,-4.946369],[3.523821,4.850104],[0.220956,5.901820],[2.073915,9.836434],[-8.126017,-1.677096],[-0.158297,1.698549],[4.472470,5.437634],[2.300941,-3.208704],[6.285437,5.975717],[8.416452,9.480084],[6.191731,-1.668313],[-5.550001,9.860435],[8.559478,1.270129],[1.765101,-2.939877],[-1.865018,-7.567846],[7.079370,9.427520],[0.613576,7.081222],[2.308443,-7.636710],[-3.530229,0.021488],[-6.294778,9.076751],[6.713222,2.430913],[0.647503,6.058575],[0.163759,-9.140853],[2.468471,-0.233556],[-7.308144,1.780996],[-5.040405,-6.911958],[-5.131069,2.881057],[-5.725511,-7.470673],[6.581919,7.280575],[-9.681964,-2.199246],[-0.978008,-2.457532],[-4.778173,4.717792],[-3.426109,-9.159397],[-1.796276,7.031347],[6.343596,7.153111],[-6.305531,4.275677],[6.452296,-6.738425],[7.806824,-7.355929],[6.504400,0.018454],[2.743268,1.182623],[-7.799566,-0.062442],[-5.668987,8.464752],[-0.919838,-1.645344],[3.076417,-2.733465],[-0.367789,-2.335538],[7.209039,0.117573],[0.062672,-1.447503],[3.145667,-8.970395],[2.668525,-8.724623],[8.835806,9.061967],[-9.878705,-5.421546],[7.762455,3.438754],[4.201582,-9.746378],[-8.862799,-6.608819],[-1.567046,-7.212836],[-1.180903,7.063492],[3.487721,3.946277],[-6.377768,-1.947440],[-9.026257,-0.847658],[8.992169,4.118740],[2.737292,8.077564],[-7.099870,0.928064],[-8.523812,-0.352484],[-8.544258,-5.517367],[-3.365990,-2.401250],[7.509296,2.687481],[0.554221,6.587282],[9.277974,-6.891084],[-9.807728,-2.521561],[9.537278,-9.423988],[2.559500,-7.361602],[-5.686563,3.032372],[-2.877418,7.032804],[-6.412575,-3.533829],[-5.394866,-0.239123],[-1.091810,-8.843174],[-0.569783,1.469856],[-6.098715,6.102360],[1.962416,-4.545215],[1.864171,-1.233909],[7.514572,0.180742],[-9.466825,-6.743645],[8.992077,2.563127],[5.285054,9.023111],[-7.964653,7.241771],[-7.030199,5.430374],[-4.600702,6.602174],[8.528404,5.084477],[-2.972310,5.853709],[-6.861528,1.533067],[-2.096761,-4.881716],[3.039470,-2.413833],[-7.886960,-6.232735],[-8.636076,-0.005512],[7.453515,-1.482726],[7.323252,-6.978013],[-9.525351,3.290954],[9.309343,2.738713],[1.048392,8.917893],[7.819498,-7.655457],[1.260499,-0.631016],[-7.322189,-3.444846],[-8.648253,5.114862],[-8.326461,0.517825],[8.080050,-5.243835],[-0.148105,-2.076588],[1.356421,-2.802471],[4.540099,-5.742218],[0.239312,1.310462],[-8.300658,-3.221689],[-6.519397,-0.148738],[7.273274,-1.043333],[-1.805308,5.194442],[-2.864417,-4.513280],[2.011789,-9.317910],[-0.456057,4.482069],[3.722520,7.701637],[-7.528070,-8.919781],[5.538156,6.634064],[1.122082,3.675565],[-1.505231,-2.579196],[4.053265,-8.380407],[7.737573,4.712398],[-5.001264,4.323087],[1.330477,0.114996],[-7.276023,9.197058],[-2.704704,-2.985143],[-2.571939,-6.301396],[-9.866295,4.663033],[6.912206,-7.438063],[-7.954174,-4.225416],[-8.031994,-2.130663],[6.709339,9.510875],[0.486457,9.193006],[-7.616688,3.923976],[-9.379914,9.788753],[-3.181116,-2.531758],[2.408238,-1.365631],[-1.282836,-9.727686],[7.638948,9.895732],[-0.518711,-1.118453],[4.102234,8.462162],[-4.253391,-1.327790],[-5.575872,4.958748],[-3.419798,9.643071],[7.623261,3.445386],[-9.085210,-7.819012],[-8.008361,-9.590363],[6.707305,-3.391282],[2.394859,-5.611186],[0.049713,-3.007077],[-4.495989,-3.471082],[3.904152,-4.658173],[-7.917847,-1.575651],[2.708301,-5.262031],[-6.419341,-3.827103],[0.543568,-2.077669],[8.887095,-5.113993],[9.435920,-0.352992],[5.956467,-3.251371],[-6.826592,1.155662],[-4.586799,-6.467199],[-2.597605,6.794876],[1.655721,-1.222920],[5.597828,3.149763],[8.082042,7.162402],[-8.665838,1.312484],[-3.417056,-4.175265],[-7.269832,6.020766],[-7.539628,4.534314],[-7.303279,7.307006],[-1.040460,3.882847],[0.888069,-6.796279],[-5.582856,0.630208],[-6.675131,-0.807170],[5.643154,7.598236],[-0.091856,-9.867149],[-4.283608,-2.113869],[1.660659,4.457323],[4.355079,6.027990],[8.613653,-3.293460],[0.969131,4.859409],[-8.961626,-7.152783],[-9.960013,9.222462],[4.571943,8.676248],[9.425922,-0.981309],[-6.913755,0.411593],[-1.556607,-8.798794],[-6.778622,-0.651165],[-7.460676,1.662235],[6.045782,-7.588538],[-7.025111,7.168709],[-5.375675,9.206242],[-4.627593,-4.295871],[3.481306,-4.874494],[-5.406805,-1.001423],[6.163487,-9.068829],[-2.840648,-0.098775],[1.636809,8.776111],[8.633397,9.236128],[-1.094164,6.555325],[4.624110,1.151675],[9.100791,-3.613734],[-4.653028,2.678934],[5.150748,3.289516],[5.046837,-3.524963],[7.391849,-3.410562],[-6.204879,-9.695997],[8.917873,1.055172],[3.068396,7.246034],[-0.383606,-7.640346],[-6.829077,7.403925],[4.830361,9.104848],[-2.272780,5.222791],[-4.608816,-4.247691],[-1.770457,8.541349],[0.356146,-8.227187],[0.962072,8.933048],[0.401682,-5.913124],[0.426891,-0.366986]], dtype = "float32")#candidate|7555|(896, 2)|const|float32
var_7556 = relay.var("var_7556", dtype = "float32", shape = (1, 1170))#candidate|7556|(1, 1170)|var|float32
call_7554 = relay.TupleGetItem(func_1523_call(relay.reshape(const_7555.astype('float32'), [8, 224]), relay.reshape(var_7556.astype('float32'), [1170,]), ), 6)
call_7557 = relay.TupleGetItem(func_1526_call(relay.reshape(const_7555.astype('float32'), [8, 224]), relay.reshape(var_7556.astype('float32'), [1170,]), ), 6)
func_2086_call = mod.get_global_var('func_2086')
func_2088_call = mutated_mod.get_global_var('func_2088')
var_7570 = relay.var("var_7570", dtype = "int64", shape = (360,))#candidate|7570|(360,)|var|int64
call_7569 = relay.TupleGetItem(func_2086_call(relay.reshape(var_7570.astype('int64'), [360,])), 1)
call_7571 = relay.TupleGetItem(func_2088_call(relay.reshape(var_7570.astype('int64'), [360,])), 1)
func_6685_call = mod.get_global_var('func_6685')
func_6686_call = mutated_mod.get_global_var('func_6686')
call_7576 = relay.TupleGetItem(func_6685_call(), 0)
call_7577 = relay.TupleGetItem(func_6686_call(), 0)
func_6752_call = mod.get_global_var('func_6752')
func_6754_call = mutated_mod.get_global_var('func_6754')
var_7583 = relay.var("var_7583", dtype = "float32", shape = (900,))#candidate|7583|(900,)|var|float32
call_7582 = relay.TupleGetItem(func_6752_call(relay.reshape(var_7583.astype('float32'), [900,])), 2)
call_7584 = relay.TupleGetItem(func_6754_call(relay.reshape(var_7583.astype('float32'), [900,])), 2)
output = relay.Tuple([call_7547,call_7552,call_7554,const_7555,var_7556,call_7569,var_7570,call_7576,call_7582,var_7583,])
output2 = relay.Tuple([call_7548,call_7553,call_7557,const_7555,var_7556,call_7571,var_7570,call_7577,call_7584,var_7583,])
func_7594 = relay.Function([var_7556,var_7570,var_7583,], output)
mod['func_7594'] = func_7594
mod = relay.transform.InferType()(mod)
mutated_mod['func_7594'] = func_7594
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7594_call = mutated_mod.get_global_var('func_7594')
var_7596 = relay.var("var_7596", dtype = "float32", shape = (1, 1170))#candidate|7596|(1, 1170)|var|float32
var_7597 = relay.var("var_7597", dtype = "int64", shape = (360,))#candidate|7597|(360,)|var|int64
var_7598 = relay.var("var_7598", dtype = "float32", shape = (900,))#candidate|7598|(900,)|var|float32
call_7595 = func_7594_call(var_7596,var_7597,var_7598,)
output = call_7595
func_7599 = relay.Function([var_7596,var_7597,var_7598,], output)
mutated_mod['func_7599'] = func_7599
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1821_call = mod.get_global_var('func_1821')
func_1822_call = mutated_mod.get_global_var('func_1822')
call_7654 = relay.TupleGetItem(func_1821_call(), 0)
call_7655 = relay.TupleGetItem(func_1822_call(), 0)
const_7656 = relay.const([[[8.630214,9.686810,0.363093,9.652780,-0.586597,-8.722742,3.768577,6.148769],[5.574491,-6.230594,-1.983765,-2.403648,-0.212662,5.353628,-0.262748,-7.417181],[-4.706600,6.597943,-7.512118,-6.132120,-0.394003,9.075353,-1.421285,-1.813974],[0.046918,6.780325,0.193662,-5.067106,-6.627399,9.252326,-8.625414,-7.503447],[9.874575,3.267895,1.163559,-8.023122,-6.242982,0.052885,9.867142,-2.554956],[-5.467527,-8.629931,-6.352615,-1.497057,-2.855432,2.542025,7.538879,6.403509],[1.794439,-6.670383,-6.482700,-0.690600,0.082968,-5.636369,-9.757767,7.992739],[-7.275133,-0.902692,-7.546034,0.235717,-3.215707,6.518292,3.591372,-7.615000],[1.360722,2.025981,-1.938566,4.858791,3.168051,-9.532822,-3.425993,-4.836541],[7.913257,6.757480,7.306560,-3.372589,6.751130,3.800258,-3.016258,7.442935],[3.342247,6.936325,9.128045,1.300011,-4.206431,-0.997892,8.424119,-6.296393],[6.958043,-9.106105,-4.113090,-4.567461,-6.120999,-8.531551,8.828505,0.048101],[-8.694136,-7.149687,0.729863,-3.847601,9.836751,-4.542468,-1.669330,8.877253],[0.159938,-7.223040,-3.274322,9.617095,1.007607,8.710564,-8.879337,1.792203]],[[-0.428366,-2.046999,4.997936,9.953775,5.244402,5.858302,-1.463553,6.679681],[-0.089623,-7.715914,-5.720692,2.158867,3.337604,-4.513223,0.198457,0.193814],[-7.206101,3.537301,-8.259976,-8.553910,4.431544,0.294302,7.925690,1.021760],[7.990617,-7.201511,5.712343,5.081041,9.449864,-5.689843,4.488186,-2.729956],[5.272771,0.783888,-0.170715,8.659123,1.657936,-4.785867,4.991813,-7.182112],[8.614773,-1.464219,-7.507988,8.163126,-8.686927,8.657816,4.609380,4.918415],[2.092456,1.854943,-6.684245,2.932206,2.125933,-5.103125,3.021185,7.713852],[-0.029826,-7.150909,6.075299,-1.038470,1.262278,6.684259,7.876072,-7.041486],[2.806028,-0.061968,-1.342379,9.518561,6.507014,0.881173,-4.087055,0.696065],[-9.879770,-8.451025,-4.886970,9.186087,-5.324332,-4.396569,3.932134,-0.176026],[-2.612134,5.702429,7.663488,6.401097,-8.908480,7.552970,8.799729,5.775971],[-3.814185,-7.644970,-3.155176,2.381032,-1.577738,-4.571144,-7.645354,3.612933],[-7.568270,2.982400,6.216997,-6.427016,6.319299,5.138913,4.881293,3.672714],[-8.082145,-5.005333,0.523369,5.133640,7.621070,-6.790517,-0.242110,0.126176]],[[-3.694217,-8.731078,5.148130,2.783075,8.404731,6.444566,-5.971741,-1.437800],[-2.519945,7.910140,-2.088913,-2.063393,2.415425,3.041032,-3.769881,-0.469740],[-5.453570,-0.920632,4.031349,-2.490930,-7.469586,0.247077,-4.385437,4.173152],[-0.084569,1.193458,2.452701,9.519049,-1.964179,2.104618,0.418230,3.400333],[-4.486467,4.214319,3.916197,-2.797415,9.049663,-5.937038,-6.064056,6.909527],[2.791940,9.254183,-7.125083,8.627678,-0.060149,8.002328,-5.336589,8.299786],[-0.405430,-8.383282,-9.846552,-7.844041,1.060821,-9.641159,-7.057659,-8.652010],[-8.145062,1.529407,-5.896281,9.362974,2.068069,-8.779725,7.378104,-3.366429],[-1.604902,0.984465,-4.334314,1.614649,1.104127,0.487162,6.222936,1.285429],[1.722173,-1.282278,9.323914,-2.220692,-3.296913,-3.215900,-1.652098,7.891188],[7.007419,-3.220488,-4.607783,4.095203,3.746902,-5.924360,6.505305,-7.428707],[-1.565954,-3.600597,-0.575517,-3.970122,-0.728448,-6.586646,9.784232,9.702792],[-3.612960,-9.182269,7.719412,-0.515147,-0.945700,8.682269,-7.976560,4.233381],[-7.266622,-9.127751,-0.773546,2.684378,1.875203,-9.090940,-9.924974,-7.592193]],[[4.084736,3.408059,-5.938042,5.827257,-5.161941,-0.643116,-9.028189,6.103186],[-5.970042,2.201342,-7.175376,2.687562,-3.493771,1.355746,4.152436,5.152258],[-3.807955,-7.655920,2.793332,-3.971493,-6.987032,-7.702255,-4.559576,-5.294415],[-4.186519,5.135574,-5.350859,-0.747102,-7.566564,5.556378,8.354987,-2.727981],[-6.512576,5.653378,-7.900757,5.577778,-9.893261,7.702879,-7.751871,4.170520],[4.163818,1.266310,0.531144,-9.587738,4.544525,-3.854521,9.937672,1.350717],[9.954319,8.656412,-7.762264,-4.097321,-0.322648,5.548299,1.179310,1.750351],[8.566148,3.253854,6.565760,9.841798,1.286717,9.651405,-1.196777,-0.709865],[3.138352,-5.844800,2.514675,7.688677,-5.479011,-7.732733,0.012199,4.051120],[-1.488410,-7.135739,-7.410144,2.367739,7.659783,-4.252877,3.192134,5.446604],[-3.342619,-9.421374,-4.696998,-3.485351,-7.355078,5.911437,-5.249640,-7.182191],[5.491457,-4.711032,-3.265498,3.747592,6.135801,-6.032488,2.754391,9.476375],[9.746560,7.743235,7.144661,-8.421977,-3.716521,-6.491630,-5.826785,2.435063],[7.959337,-3.878514,9.281340,4.645688,2.399851,5.694959,5.610736,2.915201]],[[-4.145341,-3.404193,-6.506561,3.741024,-3.440791,3.876337,3.445934,-2.648878],[8.480696,-6.904162,2.296685,4.012234,3.716551,8.858720,1.474811,2.989318],[4.946558,-3.313473,3.075064,-7.103328,7.452660,-0.201366,-2.676629,1.341988],[7.523626,3.366182,4.826319,-7.040149,7.903240,4.346641,-1.837862,5.152977],[-5.803006,3.476904,1.581182,-0.812425,2.847577,1.198978,4.406228,9.569518],[8.919623,1.501574,9.503550,6.206386,6.816538,-1.144405,-4.096309,9.770807],[4.469298,-0.970075,-9.331031,9.746205,2.081005,-1.660697,6.873918,-7.321943],[-1.580892,6.384410,1.323078,-0.375943,2.285761,-4.749621,-0.004872,-6.424513],[-8.433530,3.724768,7.506206,-0.786577,6.751911,-6.452280,3.908642,1.386582],[-7.177102,1.206325,-8.970532,8.140285,-5.762629,3.819320,3.921174,-1.123969],[-0.969066,9.324845,-3.450756,-5.444566,-4.505640,-8.791723,5.181502,2.673473],[-7.968693,8.436720,-4.281117,-0.928499,-2.883926,-1.083806,-5.567093,2.300900],[-9.804957,-1.504493,9.949621,-4.949236,6.445083,6.308385,6.799773,2.767701],[9.287093,-0.915189,9.127782,5.375969,-9.711948,7.856060,-7.619249,1.435576]],[[2.123411,-8.401314,-5.474092,-4.924836,9.485657,3.380296,-5.116330,6.437968],[1.823573,-8.691035,-1.187317,3.792303,8.850393,1.325781,5.578357,-0.154366],[6.282452,8.883309,3.279369,8.916235,5.986396,7.040015,3.311007,-9.463850],[-7.367546,2.032070,-8.431334,5.446376,-1.293323,7.773731,3.924851,-4.905482],[-6.616273,6.734236,-8.759112,0.228081,6.339300,9.419309,7.661884,3.923593],[-2.976247,-3.957607,0.528239,-6.969889,1.978242,-2.746526,0.389968,5.120096],[-0.076907,-3.048188,3.883506,5.199425,-7.505775,-9.509264,-2.805017,-8.693908],[-9.662231,6.883624,-7.392104,8.317074,0.064582,9.385229,5.585974,1.658837],[4.603294,-0.064501,1.362560,9.789997,-9.049533,1.894896,7.984913,-7.571932],[-4.071747,-2.425835,0.647670,-8.474891,2.253817,-5.550901,-4.625173,-7.522464],[9.110668,6.979867,-4.425271,-1.343019,-0.238946,8.402865,3.586239,3.797056],[3.718933,0.899324,-8.782709,-3.511853,6.838927,-4.935197,-4.988280,6.500289],[8.981851,-6.778205,8.715303,-1.409158,-6.454386,9.595366,9.977370,0.386202],[-6.440429,-7.657398,1.426244,-4.228346,2.778691,-3.218043,-3.499655,4.553053]],[[-3.566144,1.228876,-0.565505,5.038041,-5.023280,0.288999,-3.467683,-3.867193],[0.611058,2.746939,7.744771,3.559255,-3.907806,-5.536486,4.262384,-8.816194],[3.276255,7.074277,7.249622,-8.366165,9.349697,-7.860147,5.668282,0.173421],[4.083634,1.487150,-3.223777,4.134522,-2.546899,2.658455,7.915825,-7.500777],[-7.491712,-0.408649,-4.210033,3.952978,-8.999741,5.900531,-3.594247,-0.618200],[1.281017,9.819454,-9.106056,-1.410076,-0.903293,-3.288343,4.112905,6.706941],[-5.525145,-2.440242,-5.412258,5.438689,4.208766,-1.986462,3.172563,8.999439],[-5.051349,-2.623281,8.815398,-1.385424,6.055576,3.912917,1.281868,-4.515851],[-4.875331,-7.245020,-4.103552,-3.968087,0.139774,6.761106,0.047088,2.674018],[7.143841,5.749164,4.292367,7.737571,-8.703747,6.088278,6.341648,-6.255032],[-6.939007,-9.987832,-2.480296,-6.674148,-1.040635,-1.821168,-0.748893,4.014884],[9.078360,-4.234231,-3.642395,8.224149,-6.386156,-0.045585,-4.621780,-5.702947],[-8.629292,3.663771,8.872087,-8.622044,-9.907384,5.001130,-6.146835,-6.200988],[3.709068,-8.471597,-7.448273,4.813369,3.471724,-1.998202,-8.655538,-0.558114]],[[-0.204767,0.968690,-4.160976,5.859955,-4.991722,2.295152,5.272604,-5.051424],[7.368330,5.351330,9.079013,-8.244974,-1.860573,-0.330308,2.337338,4.188405],[9.256482,4.750152,-7.243372,-6.333332,-8.459995,-9.472190,8.121395,-2.771349],[8.487624,9.408699,-5.159724,3.573487,-4.374554,7.258053,9.277597,1.882441],[0.621113,-5.153129,2.637855,-7.654929,-2.506647,-7.152236,-0.803084,-2.558747],[-1.032622,-5.440503,-8.775179,7.654099,8.750078,-9.588330,-6.302984,8.378557],[6.062329,4.421225,-9.988683,-8.440945,-6.704967,3.771984,4.232746,4.537367],[3.031978,1.490912,1.654209,-3.263650,9.537924,6.690693,9.035485,-3.518212],[-8.625160,2.129233,3.925465,-4.823587,-4.925655,-8.954766,8.186302,4.111778],[3.198835,-9.418859,-5.775269,-2.064023,-3.502739,7.687841,-2.282242,-4.512973],[6.315643,-8.740639,5.987886,0.515826,-7.021123,4.080162,9.033082,-8.116572],[9.263865,2.004357,4.241723,-2.630814,-7.653476,0.374248,0.676374,1.050417],[-0.554883,9.990412,-1.055035,9.036654,2.113226,2.854575,-3.954701,8.474079],[-7.882699,0.816866,-8.575616,1.632855,5.876829,-3.287568,-3.779082,4.093485]],[[5.660001,-0.574676,8.444457,-1.408342,3.094795,9.235925,1.310560,3.355735],[-2.289949,1.678252,-1.970311,2.140083,-7.351465,-5.177547,1.090981,1.752815],[5.554492,8.724645,1.208288,2.510352,7.355857,-4.532236,9.441424,-3.197629],[-9.199531,3.159173,9.777504,-4.949788,-9.714568,-9.721688,9.346808,-7.549121],[-9.538148,7.742694,0.593989,-5.771325,-0.758464,6.859329,-2.024333,6.000276],[4.442725,-1.137351,9.968157,-6.335648,9.405320,7.004391,-6.928934,6.003746],[3.058119,5.764808,0.636578,3.382249,-8.240838,-7.734973,0.947602,-5.686688],[-9.248783,8.786996,5.407832,7.591051,-8.123831,0.402009,-3.378940,6.825614],[-8.570531,-8.447197,-7.482573,8.673552,-3.548919,-1.537625,6.346281,-5.538356],[2.462395,8.769562,-3.163032,4.623649,5.419291,6.206863,-4.262425,-1.147703],[0.765250,-3.212473,-8.746668,1.105080,9.251465,-1.847898,-7.505261,-2.144256],[-8.255801,-8.662008,-4.638854,-9.469869,0.667235,9.435171,-5.364023,-5.351930],[-0.004874,-8.954568,-5.574270,5.865280,2.128547,-1.441566,7.155446,7.658939],[-1.299513,-9.599315,0.222437,-4.547839,-9.778282,-3.024213,8.496524,3.392375]],[[-6.510248,2.724541,7.841323,-8.342208,-2.776196,-1.394458,-3.146652,-7.417641],[5.322943,9.187982,8.664306,1.881084,-2.816154,-6.230717,-4.717793,8.102973],[9.077341,6.230709,-9.446642,2.537974,-9.461438,-1.762856,5.882190,7.515796],[9.073105,-2.071765,5.788783,-3.496669,7.612449,3.688750,-8.037977,-6.304346],[6.278222,-6.922381,-4.711587,1.494173,7.984922,1.589648,-1.217984,-4.188500],[8.228161,-1.307987,-4.977803,-7.561395,7.966166,-4.479449,4.698485,-1.663464],[-5.053778,-3.833222,-3.525406,-4.886796,3.821042,7.341240,-3.796058,2.202197],[-5.989620,-8.803362,-1.471856,-5.086679,9.132418,-0.089087,-1.381659,0.785907],[8.578505,2.119921,5.144155,-0.771140,3.577472,-2.219245,8.410558,9.236654],[1.842770,-6.558953,8.760479,-7.431797,1.315461,8.760773,1.784427,9.221290],[-3.300268,-7.630845,-6.444645,-3.484684,-7.604172,5.514468,-1.246597,5.563726],[1.963160,6.249316,8.694987,6.189104,-1.151233,-1.115583,8.038542,5.013923],[-2.361112,-8.573560,-7.856530,-6.581089,5.319172,-1.616030,-8.939742,-8.987901],[8.358627,-7.272928,2.244773,-7.095946,-4.911294,5.987982,-3.749014,6.065234]],[[-8.338180,6.888694,-5.576115,-1.031322,0.754774,4.490722,-9.070041,2.371380],[-3.000509,-1.103919,3.691933,1.397206,0.263349,-3.674113,5.037396,-2.848355],[7.273763,-0.231374,1.672437,1.101172,5.129294,7.323043,-1.497552,-6.930539],[-5.301555,-8.451439,7.330004,-0.689224,-8.491617,-6.288351,-5.393146,-9.179815],[-9.448063,-2.062145,0.555347,-9.577410,-5.739430,-3.141117,9.580106,6.980644],[-7.067915,0.962047,-9.338809,-4.700016,-6.779408,-5.950277,-6.122230,-1.906641],[-7.952545,-2.125872,8.185907,-5.382336,-0.858161,-1.462400,7.569265,-1.725273],[-9.570183,1.196290,6.144875,9.095815,-2.595623,-2.333833,-9.976892,4.938181],[6.744847,-1.805255,6.127034,1.434054,-4.319759,1.785910,2.499215,9.738935],[0.267656,-4.976206,-9.231123,1.359544,-6.814904,0.974565,-7.581757,3.059446],[2.396143,-4.613148,-9.304047,-3.776847,-4.255712,6.250587,1.518978,7.907968],[8.848858,9.628742,0.125960,8.302967,3.563986,6.548814,6.024192,2.491448],[-3.176958,5.782367,7.149324,0.867669,5.143757,-6.715376,9.726763,-0.631221],[9.749800,7.950854,-2.194316,-8.459527,4.350522,4.873004,-8.558952,5.056910]],[[6.443399,-5.980517,8.141272,-0.310526,-9.124119,7.204174,-5.229813,-7.267446],[-2.901497,-8.202687,-7.050273,-8.434320,-6.484970,2.299695,-8.839098,-3.132986],[9.234256,4.626795,-2.387461,-3.727076,-8.221308,9.656962,8.103409,-2.063694],[6.924793,-6.776297,-6.172124,4.310625,-7.103826,2.378358,-6.908979,-1.616415],[-1.445111,-3.144662,1.279496,3.537580,-6.905625,-2.283602,9.035507,3.278192],[-6.754167,-8.978224,-9.555600,5.237112,-8.748264,-0.089111,-5.966579,1.690287],[-1.500637,-7.179030,-4.944469,0.425328,-5.903772,-3.329558,-6.501777,-2.656209],[2.804812,8.182798,-3.691054,-8.687504,-4.687216,5.368422,-7.559568,9.780628],[-7.764575,-7.017187,-4.834264,-7.121465,-6.513334,-8.210872,-1.562148,4.792062],[9.974782,-4.417431,2.616027,4.626221,8.935305,8.918425,0.311203,-6.380959],[-0.595812,-2.363685,-0.828473,2.425262,0.428670,7.669063,-8.751423,3.981940],[-8.664268,3.928514,-6.630623,8.601448,-3.249558,5.630107,5.161834,6.862333],[6.728614,-4.259203,-1.165875,-0.126528,6.751380,-3.609909,-5.372244,-4.802707],[3.513142,-9.651951,-3.882979,1.216041,-7.986659,-9.472899,-4.292405,3.782991]],[[0.405686,2.670423,7.468635,7.477175,3.900284,-0.921829,1.490764,-3.390145],[7.139283,-1.070150,-1.047554,-3.152620,6.826698,5.941263,-6.899741,1.050105],[-8.623339,-8.670047,-3.931318,4.600089,4.719989,6.591709,-3.767782,9.495424],[-5.979371,9.907876,2.400887,-8.530804,-8.364063,-2.783888,-4.494013,-9.732519],[-4.430492,5.647338,-0.958169,-7.633078,-8.260227,-0.878300,-1.433858,-1.385996],[5.172657,4.820073,4.489908,5.674633,9.172058,6.171990,7.009341,4.421714],[-7.407638,-5.040768,2.527252,-9.329034,-4.496214,-0.739773,-7.300000,-1.750470],[-8.395030,-5.552373,3.921450,5.257878,2.918852,-2.482260,-4.979072,-8.592439],[-5.056969,0.494713,3.909793,-3.082739,-7.231467,-9.345839,1.872879,-3.998879],[8.069627,-0.627946,3.164137,6.047611,-3.957963,0.418473,0.181955,6.752085],[6.584922,2.601748,-0.717608,-1.543557,-0.146457,1.398120,8.346060,8.884464],[-2.104049,0.154024,4.000979,-5.122651,4.320660,-9.251553,9.030274,-6.797367],[-7.129950,7.968552,6.698875,4.782081,8.708713,-8.301418,8.068647,3.097731],[9.271264,8.007565,7.169985,-3.126030,5.278950,-7.539737,-7.364768,4.947485]],[[-5.833531,9.221888,5.681950,-6.377452,5.977770,2.528571,-4.682497,-9.509662],[-0.715311,2.997722,4.691546,-4.065383,-8.043608,5.697583,7.682501,-3.673970],[0.646657,-2.983433,-1.019478,1.999516,0.854749,-5.308971,2.501493,2.305198],[-6.822652,-2.661658,-2.124056,7.427093,6.363893,0.766095,8.864873,-8.613402],[4.899738,1.760929,9.552446,8.304473,-5.567362,0.007893,-6.593372,0.860036],[8.004754,-9.270943,-5.363560,-1.420981,-0.927540,-5.871484,9.479471,-6.295783],[0.721203,1.141500,7.068725,0.102872,-4.150608,8.772159,6.787989,-4.480042],[-8.534764,-3.671876,-4.190917,-9.361666,-2.666848,-3.980272,-0.600348,-2.706833],[0.814410,-4.408655,-9.768176,-6.510016,-4.581053,7.365080,-7.464829,-6.260852],[-4.786929,9.554459,-1.538185,1.917393,-9.624829,-4.896510,3.965335,4.425016],[-0.210014,9.554717,0.743476,-7.837716,4.696104,-6.849724,4.846698,8.775436],[2.361960,-1.300681,-5.885041,0.992515,3.291226,6.247470,-1.483311,8.979557],[5.044427,-2.333395,-1.412973,-5.913347,-4.107087,2.530940,-9.221743,-5.678696],[4.681821,1.760125,-9.089080,0.424816,-2.306246,-6.971803,9.023214,-5.978342]],[[-0.430992,9.648908,0.640127,4.914224,-4.351805,1.169746,0.314687,6.627799],[-3.345982,-8.723260,5.623878,-8.293172,2.849287,-1.935579,0.387475,6.693350],[8.337021,-9.814774,-9.479073,6.752413,8.309315,1.196255,-6.616873,4.874587],[1.761679,4.413182,5.439854,6.156680,1.202368,9.334615,-6.793972,-0.520416],[-1.724173,-4.458167,-6.561617,3.033798,-9.974591,-4.155435,8.253075,5.332846],[-8.508856,4.013603,-4.173763,-8.167800,5.154736,-1.435429,-9.071026,5.439156],[-1.426230,2.988542,5.185202,-4.319292,-6.911811,-7.045482,-2.759289,-7.339302],[2.797668,8.479522,-8.230218,0.709453,8.386709,2.482751,-5.333814,-3.797470],[-6.103799,-8.980174,0.874816,8.862283,6.466643,2.584333,8.291840,-1.293937],[-5.121164,0.956043,8.453943,-6.457245,-9.322245,-3.167230,-1.883454,3.441085],[9.429918,9.859103,-4.223302,-6.334350,-0.701414,-8.790614,6.799729,-0.272843],[-4.148562,7.073790,-7.122322,-5.133371,3.070783,-7.363418,-8.666830,7.157247],[8.440591,-4.040511,5.693042,0.012971,-6.455247,-7.144793,2.862711,5.507272],[-6.487460,5.616911,-6.812635,9.336037,8.599871,-4.775923,-0.314909,2.747993]]], dtype = "float64")#candidate|7656|(15, 14, 8)|const|float64
bop_7657 = relay.floor_divide(call_7654.astype('float64'), relay.reshape(const_7656.astype('float64'), relay.shape_of(call_7654))) # shape=(15, 14, 8)
bop_7660 = relay.floor_divide(call_7655.astype('float64'), relay.reshape(const_7656.astype('float64'), relay.shape_of(call_7655))) # shape=(15, 14, 8)
output = relay.Tuple([bop_7657,])
output2 = relay.Tuple([bop_7660,])
func_7661 = relay.Function([], output)
mod['func_7661'] = func_7661
mod = relay.transform.InferType()(mod)
mutated_mod['func_7661'] = func_7661
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7661_call = mutated_mod.get_global_var('func_7661')
call_7662 = func_7661_call()
output = call_7662
func_7663 = relay.Function([], output)
mutated_mod['func_7663'] = func_7663
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2023_call = mod.get_global_var('func_2023')
func_2025_call = mutated_mod.get_global_var('func_2025')
call_7731 = relay.TupleGetItem(func_2023_call(), 0)
call_7732 = relay.TupleGetItem(func_2025_call(), 0)
output = relay.Tuple([call_7731,])
output2 = relay.Tuple([call_7732,])
func_7733 = relay.Function([], output)
mod['func_7733'] = func_7733
mod = relay.transform.InferType()(mod)
output = func_7733()
func_7734 = relay.Function([], output)
mutated_mod['func_7734'] = func_7734
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7739 = relay.var("var_7739", dtype = "bool", shape = (9, 7, 14))#candidate|7739|(9, 7, 14)|var|bool
var_7740 = relay.var("var_7740", dtype = "bool", shape = (9, 7, 14))#candidate|7740|(9, 7, 14)|var|bool
bop_7741 = relay.logical_or(var_7739.astype('bool'), relay.reshape(var_7740.astype('bool'), relay.shape_of(var_7739))) # shape=(9, 7, 14)
output = bop_7741
output2 = bop_7741
func_7745 = relay.Function([var_7739,var_7740,], output)
mod['func_7745'] = func_7745
mod = relay.transform.InferType()(mod)
mutated_mod['func_7745'] = func_7745
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7745_call = mutated_mod.get_global_var('func_7745')
var_7747 = relay.var("var_7747", dtype = "bool", shape = (9, 7, 14))#candidate|7747|(9, 7, 14)|var|bool
var_7748 = relay.var("var_7748", dtype = "bool", shape = (9, 7, 14))#candidate|7748|(9, 7, 14)|var|bool
call_7746 = func_7745_call(var_7747,var_7748,)
output = call_7746
func_7749 = relay.Function([var_7747,var_7748,], output)
mutated_mod['func_7749'] = func_7749
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7733_call = mod.get_global_var('func_7733')
func_7734_call = mutated_mod.get_global_var('func_7734')
call_7784 = relay.TupleGetItem(func_7733_call(), 0)
call_7785 = relay.TupleGetItem(func_7734_call(), 0)
output = call_7784
output2 = call_7785
func_7787 = relay.Function([], output)
mod['func_7787'] = func_7787
mod = relay.transform.InferType()(mod)
mutated_mod['func_7787'] = func_7787
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7787_call = mutated_mod.get_global_var('func_7787')
call_7788 = func_7787_call()
output = call_7788
func_7789 = relay.Function([], output)
mutated_mod['func_7789'] = func_7789
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2543_call = mod.get_global_var('func_2543')
func_2545_call = mutated_mod.get_global_var('func_2545')
call_7792 = relay.TupleGetItem(func_2543_call(), 1)
call_7793 = relay.TupleGetItem(func_2545_call(), 1)
output = call_7792
output2 = call_7793
func_7803 = relay.Function([], output)
mod['func_7803'] = func_7803
mod = relay.transform.InferType()(mod)
output = func_7803()
func_7804 = relay.Function([], output)
mutated_mod['func_7804'] = func_7804
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7177_call = mod.get_global_var('func_7177')
func_7179_call = mutated_mod.get_global_var('func_7179')
call_7811 = relay.TupleGetItem(func_7177_call(), 0)
call_7812 = relay.TupleGetItem(func_7179_call(), 0)
output = relay.Tuple([call_7811,])
output2 = relay.Tuple([call_7812,])
func_7833 = relay.Function([], output)
mod['func_7833'] = func_7833
mod = relay.transform.InferType()(mod)
mutated_mod['func_7833'] = func_7833
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7833_call = mutated_mod.get_global_var('func_7833')
call_7834 = func_7833_call()
output = call_7834
func_7835 = relay.Function([], output)
mutated_mod['func_7835'] = func_7835
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5566_call = mod.get_global_var('func_5566')
func_5568_call = mutated_mod.get_global_var('func_5568')
call_7843 = func_5566_call()
call_7844 = func_5566_call()
output = call_7843
output2 = call_7844
func_7846 = relay.Function([], output)
mod['func_7846'] = func_7846
mod = relay.transform.InferType()(mod)
output = func_7846()
func_7847 = relay.Function([], output)
mutated_mod['func_7847'] = func_7847
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7848 = relay.var("var_7848", dtype = "float32", shape = (5, 15, 1))#candidate|7848|(5, 15, 1)|var|float32
uop_7849 = relay.acosh(var_7848.astype('float32')) # shape=(5, 15, 1)
output = relay.Tuple([uop_7849,])
output2 = relay.Tuple([uop_7849,])
F = relay.Function([var_7848,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_7848,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
	relay.transform.ToBasicBlockNormalForm(),
	relay.transform.FuseOps(3),
	relay.transform.DefuseOps(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

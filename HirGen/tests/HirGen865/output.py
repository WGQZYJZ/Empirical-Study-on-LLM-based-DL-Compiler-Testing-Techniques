import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_532 = relay.var("var_532", dtype = "uint32", shape = ())#candidate|532|()|var|uint32
const_533 = relay.const([[[-8,-3,4,7,-9],[8,-9,-1,7,-2],[-10,3,-10,6,-8],[-8,-7,-1,-1,9],[-1,9,5,3,-4],[6,-3,-1,-5,3],[-7,10,-9,4,-9],[9,-1,10,-8,7],[7,-9,4,5,8],[-5,-6,10,-3,-5],[-7,-4,5,-4,8],[7,7,-8,-6,2],[-1,-3,-9,-2,7],[-7,-4,-3,-5,-3],[10,-8,6,8,1]],[[9,7,6,-3,8],[-8,4,-6,-10,-6],[3,3,-5,-1,2],[-4,-1,1,7,-8],[5,2,9,-8,10],[-3,2,-8,4,1],[-1,-7,6,-2,3],[9,-7,7,10,4],[-9,-5,-5,-7,2],[5,3,-6,1,1],[9,3,-1,-1,-6],[-1,3,8,-10,-7],[3,8,5,6,-3],[1,8,-7,4,10],[-6,-7,-10,7,7]],[[2,9,9,-3,1],[3,9,7,10,5],[-3,4,10,-2,4],[4,-3,-6,-8,-7],[-7,2,-2,2,-2],[4,10,5,4,8],[9,3,-6,4,10],[-2,4,2,4,-9],[-1,-4,-5,-10,6],[-4,-3,-7,-6,10],[2,4,7,-3,-8],[-9,-9,1,-2,10],[2,-3,1,-3,-10],[-6,6,-10,3,-5],[-10,-3,9,-3,-6]],[[1,7,2,-5,-8],[7,-7,1,7,-3],[-7,1,1,6,3],[7,2,7,3,-1],[6,4,-3,5,2],[-6,-10,-9,-7,5],[8,3,5,6,-3],[-10,6,-6,-10,1],[-8,1,4,-9,6],[2,-5,2,6,-9],[-4,9,2,9,4],[-3,8,10,-5,-4],[4,-3,-10,10,-4],[4,7,-7,9,-8],[7,5,7,-9,6]],[[-1,1,1,10,5],[10,3,-3,6,-8],[6,8,-3,9,-7],[-9,-7,-2,-10,-10],[8,6,-9,2,2],[-2,5,2,-6,4],[-5,-10,1,-1,-6],[-10,2,4,7,-1],[-5,-9,-2,10,1],[-9,-7,9,3,-1],[-10,5,-8,-7,6],[8,-8,2,8,-10],[-8,-5,10,-6,-1],[-5,-9,5,9,2],[10,5,-7,-10,2]],[[5,-10,8,-4,4],[1,-10,-10,-8,7],[-4,-2,-4,9,5],[5,3,2,-7,4],[-6,3,-7,-9,3],[7,-4,8,7,4],[-9,1,8,3,-2],[9,6,-1,6,-8],[-7,-8,-3,1,-6],[-1,7,8,5,-1],[2,4,1,-1,-7],[-7,3,5,2,5],[2,4,7,-3,5],[1,3,5,1,2],[-4,-2,6,6,-5]],[[5,-6,7,1,8],[-3,3,-4,-1,-2],[-5,-5,7,6,9],[-4,-1,3,4,7],[2,-10,-7,1,1],[4,-4,-5,-8,4],[-4,-2,-9,-10,-1],[-4,6,-5,-6,2],[2,5,3,-6,-1],[-6,1,10,5,2],[7,-8,-9,8,1],[-5,4,-10,-8,-7],[9,5,-3,1,-7],[3,-10,-8,6,-4],[-6,4,9,-10,-2]],[[-9,2,10,-9,5],[-5,-9,-1,-2,5],[-8,7,2,5,4],[-10,-8,-4,-10,-1],[-8,-5,-9,-4,-5],[-9,9,-6,1,-4],[1,-5,-6,9,-4],[1,5,7,-2,7],[9,2,-1,10,2],[-4,-9,1,-9,-1],[9,5,10,9,4],[-1,3,2,2,3],[-7,4,-7,-1,-5],[9,8,9,-5,-10],[-8,1,-4,3,-6]],[[-7,-3,-9,6,-9],[6,-5,4,-2,6],[-10,-3,-4,-6,3],[3,-3,3,-1,3],[9,7,-6,2,10],[2,-2,2,3,3],[8,-6,-6,-4,-7],[6,8,4,4,4],[3,5,10,-1,5],[-9,-4,3,-5,9],[-6,9,-10,-2,10],[2,1,-1,7,5],[10,5,2,-7,7],[-8,3,-10,4,-9],[7,10,-1,10,4]],[[9,1,9,-4,-10],[-2,-7,-8,10,-9],[8,10,-6,8,-10],[1,-10,5,-6,8],[1,4,7,-5,6],[5,3,-2,8,-5],[6,-8,-10,6,2],[-2,3,3,10,6],[3,1,-7,-5,5],[-3,-7,7,-6,5],[-6,2,-3,-1,4],[-10,-9,3,6,-2],[9,1,-8,5,-1],[1,7,1,8,-4],[1,9,7,-9,1]],[[3,9,-10,-2,9],[7,-5,3,4,-9],[-6,-6,-4,9,7],[7,2,4,2,-8],[1,3,8,3,-9],[-4,-7,-8,-5,-6],[-6,2,10,-1,4],[-3,5,-3,2,-8],[-2,-4,3,2,10],[10,-5,-8,-10,7],[-10,-1,6,7,1],[1,-8,-4,8,10],[-8,-7,-5,-5,-6],[9,5,-1,3,1],[3,-9,6,3,3]],[[-5,4,-1,-7,-3],[3,8,-1,8,-7],[10,-8,5,4,9],[1,-8,6,-3,-10],[-7,-6,10,4,-1],[-5,-2,-2,1,5],[5,4,1,7,-4],[-10,-9,-3,-6,-4],[-9,10,6,-10,-9],[-6,3,10,-1,-9],[3,5,-8,10,7],[-10,5,-8,3,-7],[-3,9,-7,9,7],[3,5,-1,-6,6],[-6,-10,8,3,3]],[[6,-5,1,5,9],[8,-1,10,8,4],[1,-10,-1,8,2],[6,-9,-2,-2,-10],[6,-5,-3,-8,4],[2,-1,6,-3,-8],[6,-2,4,5,8],[8,-5,10,7,8],[-9,7,-5,4,9],[-4,5,-2,-9,-6],[4,10,5,9,9],[5,8,-9,-7,10],[4,-3,-9,9,-3],[2,7,9,3,7],[-3,-9,6,-3,-1]],[[-1,6,-4,-10,-10],[8,-10,-7,8,-9],[1,9,3,8,-10],[-1,-3,-6,10,2],[9,-6,-6,10,-3],[10,10,-6,5,-1],[4,-10,8,6,4],[-2,9,-3,-10,-10],[3,9,-9,8,-8],[3,-2,-8,10,10],[3,8,9,10,6],[2,-10,-5,-5,-5],[4,4,-2,8,-8],[6,10,7,5,9],[-7,-5,4,-8,-2]],[[4,2,4,2,-5],[-2,-4,-5,4,-8],[5,3,-4,7,6],[4,7,-7,9,-7],[-2,7,3,-8,-4],[-9,-4,9,9,-10],[7,-6,10,-9,5],[-5,-5,4,4,5],[10,5,6,2,9],[-2,-5,-3,2,-6],[-8,-5,-3,2,-2],[-5,1,-8,5,-2],[-3,-3,3,-3,-9],[-5,10,-1,10,10],[10,-4,-7,-8,2]],[[7,6,-2,-7,7],[4,5,3,-8,-9],[3,-4,-2,9,3],[4,7,-9,1,5],[-2,-2,-4,-2,6],[-1,-5,-7,-7,-9],[-10,-10,4,-5,5],[-5,-3,-5,9,-1],[1,5,-8,2,-1],[-8,5,7,5,-4],[-3,9,-3,-3,2],[-9,-8,8,9,3],[-3,2,-7,7,10],[-4,8,9,6,4],[-7,-10,9,1,7]]], dtype = "uint32")#candidate|533|(16, 15, 5)|const|uint32
bop_534 = relay.bitwise_or(var_532.astype('uint32'), const_533.astype('uint32')) # shape=(16, 15, 5)
uop_541 = relay.sqrt(const_533.astype('float32')) # shape=(16, 15, 5)
uop_547 = relay.acos(uop_541.astype('float32')) # shape=(16, 15, 5)
uop_549 = relay.log10(uop_541.astype('float32')) # shape=(16, 15, 5)
output = relay.Tuple([bop_534,uop_547,uop_549,])
output2 = relay.Tuple([bop_534,uop_547,uop_549,])
func_551 = relay.Function([var_532,], output)
mod['func_551'] = func_551
mod = relay.transform.InferType()(mod)
mutated_mod['func_551'] = func_551
mutated_mod = relay.transform.InferType()(mutated_mod)
var_552 = relay.var("var_552", dtype = "uint32", shape = ())#candidate|552|()|var|uint32
func_551_call = mutated_mod.get_global_var('func_551')
call_553 = func_551_call(var_552)
output = call_553
func_554 = relay.Function([var_552], output)
mutated_mod['func_554'] = func_554
mutated_mod = relay.transform.InferType()(mutated_mod)
var_630 = relay.var("var_630", dtype = "float32", shape = (9, 5, 6))#candidate|630|(9, 5, 6)|var|float32
uop_631 = relay.asin(var_630.astype('float32')) # shape=(9, 5, 6)
uop_641 = relay.sqrt(uop_631.astype('float64')) # shape=(9, 5, 6)
output = relay.Tuple([uop_641,])
output2 = relay.Tuple([uop_641,])
func_652 = relay.Function([var_630,], output)
mod['func_652'] = func_652
mod = relay.transform.InferType()(mod)
var_653 = relay.var("var_653", dtype = "float32", shape = (9, 5, 6))#candidate|653|(9, 5, 6)|var|float32
output = func_652(var_653)
func_654 = relay.Function([var_653], output)
mutated_mod['func_654'] = func_654
mutated_mod = relay.transform.InferType()(mutated_mod)
const_668 = relay.const([[[8,7,-9,-5,-2,7,-7,-10,7,-9],[-1,6,-2,8,6,9,7,3,10,-8],[-8,-10,-3,5,-10,3,-7,3,-3,-7],[10,-2,-3,-2,-4,-7,5,-5,-8,2],[-9,7,4,-7,10,6,1,8,-5,-7],[1,9,-3,-8,-7,9,5,-3,-8,8],[4,10,1,9,10,-3,4,-1,-8,-6],[-9,-2,2,5,-8,8,6,9,-9,1],[6,2,-8,7,-10,-3,-9,-5,-4,1],[-5,6,-10,-7,5,8,-6,3,1,-1],[2,-2,-9,-4,-9,-5,-5,-4,-7,-3],[2,6,-2,-1,-9,-6,4,-4,6,8],[-4,-2,3,3,8,2,7,-8,-5,2],[1,6,7,-10,9,-8,10,-9,5,-3],[-8,-5,-1,4,1,-9,-3,8,7,2]],[[-4,7,10,7,10,10,-2,-2,7,-8],[-1,9,-6,-3,4,6,-6,2,-1,-3],[8,8,10,5,-8,-8,-4,5,5,-10],[3,-7,-1,7,9,-2,5,8,-1,-7],[-8,10,-3,9,-4,6,-6,-8,-3,8],[7,10,-1,-1,3,-3,-2,-10,-1,2],[-7,5,-1,-10,-10,-8,-8,8,1,2],[-7,5,-10,-4,-4,-6,-3,6,-4,10],[-3,-10,9,8,9,-3,7,-6,3,-5],[6,-7,2,5,-10,-9,-3,3,7,1],[-1,2,2,-4,8,9,-3,-5,2,1],[2,4,-9,5,-8,1,1,-7,1,-8],[-3,5,5,-10,-9,-10,1,6,9,-5],[10,-6,9,-3,-7,3,8,-7,-9,2],[10,-9,-6,-2,-6,1,2,6,3,6]],[[-10,1,7,3,-6,6,-8,6,9,8],[4,-3,7,10,9,-9,4,-9,7,-9],[-6,7,-9,8,3,-5,-5,7,-8,-1],[4,-5,9,9,5,-7,2,-7,-10,-1],[2,4,-4,9,-8,8,10,10,7,-5],[9,5,7,4,-6,-4,1,-4,-9,-9],[-5,10,-4,5,2,-6,-2,-2,-1,-10],[-9,3,-10,-9,2,-7,8,-4,-10,4],[9,-10,-8,-1,9,6,-4,2,-8,7],[10,8,-3,-10,1,4,-3,10,9,2],[5,-5,-7,-4,-9,-6,7,7,-6,1],[-3,7,9,9,3,5,-9,6,9,-2],[3,7,10,7,3,3,-5,3,-10,-2],[-4,-8,9,-1,-3,7,9,-5,-10,-6],[10,-10,-2,9,-7,-6,1,-6,-7,9]],[[9,8,-1,-10,-5,3,-8,2,-6,-1],[-5,-4,10,-5,8,-10,1,7,-3,3],[3,-5,9,-8,-10,9,-7,-10,-4,7],[2,-9,9,6,-2,2,-5,6,-6,-10],[-5,-2,2,3,-10,8,-8,-6,2,9],[-9,9,9,7,-2,-2,5,-1,-7,-3],[-5,-10,5,-9,5,10,10,9,7,-5],[-4,7,-2,-4,-3,9,-7,10,-2,-8],[-9,-5,2,-10,-2,9,3,-5,4,-5],[8,4,2,5,7,3,4,6,-3,-6],[-1,-9,10,-1,-5,1,10,-7,1,8],[-7,-5,10,8,8,-6,-8,-5,-1,3],[3,-7,1,-7,6,-2,6,-6,9,-8],[8,7,-3,6,-9,1,-5,4,2,10],[-7,-3,-2,-9,-2,1,5,8,2,-3]],[[3,2,-2,-5,10,-4,-2,9,-7,6],[-7,9,-4,-9,1,9,4,3,10,2],[-7,-8,-5,-2,7,-2,-2,-6,8,-5],[7,-2,-5,-7,-4,8,5,-8,-5,5],[-8,-8,-7,-9,2,-3,-9,-10,-9,1],[7,-5,-7,7,5,6,8,-4,-2,2],[-8,-3,-8,-1,-3,2,-4,-4,-2,-3],[-2,10,4,-7,-6,10,-3,-3,9,10],[8,2,1,-5,9,-9,8,3,3,10],[-8,-5,5,-2,2,6,5,4,-6,-8],[8,7,7,1,9,-7,-4,-8,10,3],[3,2,5,-4,6,7,-9,3,2,4],[-7,-10,5,10,-9,7,-10,2,8,8],[7,-9,8,2,8,-3,9,6,1,-1],[-6,-4,9,4,3,-1,-7,-9,-4,9]],[[7,7,-5,-1,-8,9,-3,10,1,9],[-6,-6,-3,-2,-4,-1,2,8,-2,4],[-3,1,7,8,-7,-4,9,10,7,-1],[2,3,-1,-9,-9,-10,-7,-8,6,6],[3,8,2,-4,-7,-9,6,-3,2,-9],[-7,5,3,10,-9,3,-6,4,7,6],[-2,5,8,4,-9,3,3,2,3,-5],[8,-6,7,4,-7,-9,7,6,1,-7],[6,-6,10,-7,10,9,10,-2,-5,-10],[-9,3,5,3,-3,6,-2,8,-2,9],[7,-10,3,-3,-10,-3,5,7,7,-6],[2,-10,6,-8,-3,8,3,6,-10,6],[-3,1,7,6,9,6,5,8,4,-10],[3,6,8,3,2,-9,8,-10,5,-1],[-1,-8,3,-8,1,5,-9,-1,-4,6]],[[2,10,3,-7,8,-5,-4,-5,-8,-3],[4,3,8,10,-8,7,-10,-2,-7,-5],[6,5,-2,5,5,9,8,3,-5,8],[-9,-5,-2,-6,-5,-3,1,-9,8,5],[3,-5,5,7,-4,5,-9,-6,7,-9],[1,1,2,6,-7,-5,4,-1,1,1],[4,1,-8,6,7,8,-9,-1,-1,1],[8,8,10,-1,1,8,-1,1,-4,-5],[-4,10,-1,4,-7,-10,5,-7,1,-7],[1,10,-4,1,9,10,6,7,-10,1],[-10,-4,-1,9,10,-6,3,7,6,7],[4,9,7,9,-10,7,-1,4,-6,6],[1,1,8,1,-5,-9,6,-1,7,8],[-10,5,10,5,-2,-1,5,-7,9,-8],[8,3,9,-5,-4,2,-2,7,-6,-5]],[[7,3,10,-6,-2,3,-4,-2,-10,9],[-3,-10,-8,4,-3,-4,9,-2,-9,-9],[-5,-1,-1,-1,-1,7,-1,-9,-5,-5],[-4,-7,-8,1,9,10,-4,-2,5,6],[-4,-2,-9,4,-3,-2,-7,9,10,-5],[-2,1,-8,-1,-6,1,-9,5,-5,1],[7,5,4,1,6,1,3,-5,6,-5],[10,-4,-10,-6,7,3,3,-10,-1,-9],[7,6,5,-2,-7,5,7,-6,-8,2],[-2,-1,-4,-9,2,-4,1,10,3,-7],[10,-8,3,4,10,9,4,6,1,-2],[7,-1,-8,-4,-2,1,-5,1,-7,-9],[4,9,-8,-3,-4,3,1,-8,6,1],[-3,1,3,5,-8,9,10,7,4,-8],[-7,10,6,8,-1,9,-3,-3,-2,-8]],[[-3,-2,4,-3,-1,9,-4,7,-8,-4],[-6,-5,3,7,8,-8,2,-4,-9,-7],[9,-2,4,5,-6,2,-1,-1,9,-2],[3,6,9,-2,-8,-3,-4,10,-2,-3],[-5,2,-4,-2,1,9,-3,-9,-6,3],[9,-9,-10,-2,-5,3,-10,3,8,-8],[-1,-4,2,9,6,2,-9,-10,-1,1],[7,-3,9,-2,5,-5,-7,-1,2,-8],[5,4,2,-2,8,8,-9,4,-1,4],[-8,-10,-8,3,4,-10,3,2,-10,8],[-10,-1,9,7,-4,6,10,5,1,-9],[3,-2,3,-2,8,9,6,7,7,-7],[-6,3,3,5,-7,-6,4,-7,-2,10],[-6,-8,-2,2,-10,2,-4,-6,-2,8],[7,-2,-4,8,5,-5,-8,7,-7,-1]],[[10,5,-6,-10,1,-10,3,-1,-10,-2],[8,9,-2,8,-5,-8,-2,-8,5,-9],[-7,-7,4,9,7,-10,-1,-3,-5,-4],[-1,9,7,-4,-7,-1,5,-5,5,2],[5,1,10,9,-6,-10,-5,-2,6,7],[8,-6,-7,1,-4,8,-4,-7,2,2],[9,6,-10,-10,-4,-8,6,-7,-6,9],[-1,1,-5,-10,4,-6,3,-9,-10,-9],[-8,9,2,1,6,10,-6,-3,-9,1],[-6,-6,-8,-1,-8,7,7,1,3,7],[-1,-5,8,-9,10,10,-6,-6,-5,-7],[9,-8,9,8,-9,-1,4,9,-3,-8],[-10,-10,7,3,3,3,-5,8,10,5],[-3,-2,-2,6,9,10,-4,-8,-8,-3],[2,-5,-6,-2,-9,6,3,8,8,1]],[[-9,9,-5,4,-9,-6,-2,-9,-4,-7],[-5,-4,2,6,-5,9,9,-7,4,-10],[10,-3,5,-3,2,1,-4,8,6,-7],[-10,-6,2,-5,-7,-9,-1,9,6,-2],[-3,-6,9,-4,9,-9,-6,9,-10,-6],[9,4,-10,5,-7,4,1,7,-5,6],[-2,2,10,10,6,-5,-1,-5,1,5],[-9,8,-9,2,7,10,3,-1,-3,-10],[-5,6,-5,-7,2,-6,2,-1,-8,7],[-10,-7,8,3,9,10,2,9,8,-8],[7,1,8,10,-4,-5,3,7,-2,-1],[-8,2,-9,-1,-9,7,-3,-7,10,-8],[6,1,7,-9,10,7,-4,-10,-4,-10],[-8,-8,5,3,-5,-10,-6,8,-10,-2],[10,-8,10,7,-7,-6,-4,-7,2,-4]],[[2,-5,6,-10,2,-7,-1,7,3,7],[1,-8,-2,5,4,10,-5,4,10,-8],[-8,-7,1,4,7,5,-7,-4,7,-2],[1,9,-6,-7,-9,-3,1,-7,1,6],[3,6,4,8,1,2,-1,-8,-4,-5],[4,-9,7,7,5,6,7,-9,-5,-10],[-4,-8,3,-4,-5,-7,7,3,-2,-2],[6,-7,1,3,3,-2,-6,-4,10,-6],[-6,-1,-9,-9,-5,-9,10,-5,4,-8],[-1,-5,-3,-8,8,-6,-6,-9,1,7],[-10,10,-4,2,-3,6,1,3,-10,-4],[2,5,7,5,4,8,8,-4,3,10],[-6,-9,8,10,-2,8,-4,-4,-7,-3],[-10,-4,8,-1,-6,6,7,-9,-1,5],[-3,9,-6,-2,-3,1,-7,2,-3,-6]],[[-3,-10,-2,-5,10,-6,3,-2,-10,9],[1,-7,-6,-4,1,9,6,4,8,1],[-9,3,-4,-10,-1,-8,-10,-1,-5,7],[-6,-7,6,10,-3,4,-10,6,1,-8],[7,-5,2,-5,-8,10,1,-6,-1,10],[7,-7,-8,9,-9,10,-5,-4,10,4],[6,-3,5,1,-4,-1,-5,-8,-1,2],[5,7,8,7,-3,-5,-8,5,6,9],[-8,-2,9,6,6,10,-10,1,10,-6],[-10,-3,9,-2,-5,6,-1,4,8,-2],[8,4,-10,-5,-3,-5,-4,-3,-8,10],[6,-7,-6,-9,-3,-7,-4,8,-7,6],[8,5,10,4,3,-3,2,5,3,10],[-6,6,9,-6,10,8,-1,-7,1,3],[7,-2,-6,-7,-3,-6,6,-1,-7,-3]],[[6,5,4,-2,-7,-10,9,-3,9,5],[-7,-2,-2,-1,-7,7,6,3,-8,-9],[-8,-9,-1,5,2,-3,-10,3,-6,-4],[-9,-6,-5,-8,-4,7,-6,-2,-9,-6],[-8,10,-1,-1,-7,10,5,2,-7,-2],[7,-4,6,-9,-2,3,-3,-7,6,-1],[-2,-1,-9,7,-3,-6,8,3,-5,-10],[5,-8,-6,5,4,7,9,2,-10,3],[-8,4,-10,-4,9,-3,-7,5,9,-7],[5,8,3,1,1,-7,-4,8,9,-8],[-6,-3,5,6,7,6,9,-6,-8,-4],[-3,-7,-5,3,-7,-2,-4,-5,2,-3],[-5,1,-5,-4,5,9,2,-7,4,-1],[-8,5,-8,1,10,-1,2,-8,-10,-9],[4,-3,5,3,7,-10,7,-9,6,8]],[[-3,-2,2,4,-6,-5,1,5,7,5],[2,-8,-3,-3,-6,-6,10,6,9,4],[-2,-6,-8,-9,8,6,3,8,-3,-6],[4,8,9,-7,-3,-6,1,-8,-10,1],[-4,10,5,5,1,-4,3,-10,-7,5],[-8,-7,-10,8,-5,-9,-8,-6,1,10],[5,8,8,-4,-6,9,7,-3,-2,-8],[9,-7,10,-1,-7,2,7,-9,7,3],[2,7,7,-6,-2,7,-4,10,8,-3],[-4,-6,-3,9,-10,-5,-2,10,4,-2],[2,8,4,10,-1,10,7,10,2,-2],[-2,3,-1,5,10,-10,7,-8,7,-6],[10,8,1,-9,-7,-3,8,-5,8,-4],[7,3,-3,-8,9,-3,-9,8,8,3],[6,6,-2,7,-1,2,-5,2,6,-2]]], dtype = "uint16")#candidate|668|(15, 15, 10)|const|uint16
var_669 = relay.var("var_669", dtype = "uint16", shape = (15, 15, 10))#candidate|669|(15, 15, 10)|var|uint16
bop_670 = relay.maximum(const_668.astype('uint16'), relay.reshape(var_669.astype('uint16'), relay.shape_of(const_668))) # shape=(15, 15, 10)
output = relay.Tuple([bop_670,])
output2 = relay.Tuple([bop_670,])
func_673 = relay.Function([var_669,], output)
mod['func_673'] = func_673
mod = relay.transform.InferType()(mod)
mutated_mod['func_673'] = func_673
mutated_mod = relay.transform.InferType()(mutated_mod)
var_674 = relay.var("var_674", dtype = "uint16", shape = (15, 15, 10))#candidate|674|(15, 15, 10)|var|uint16
func_673_call = mutated_mod.get_global_var('func_673')
call_675 = func_673_call(var_674)
output = call_675
func_676 = relay.Function([var_674], output)
mutated_mod['func_676'] = func_676
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1042 = relay.var("var_1042", dtype = "float32", shape = (15, 10, 15))#candidate|1042|(15, 10, 15)|var|float32
uop_1043 = relay.exp(var_1042.astype('float32')) # shape=(15, 10, 15)
func_652_call = mod.get_global_var('func_652')
func_654_call = mutated_mod.get_global_var('func_654')
var_1050 = relay.var("var_1050", dtype = "float32", shape = (30, 9))#candidate|1050|(30, 9)|var|float32
call_1049 = relay.TupleGetItem(func_652_call(relay.reshape(var_1050.astype('float32'), [9, 5, 6])), 0)
call_1051 = relay.TupleGetItem(func_654_call(relay.reshape(var_1050.astype('float32'), [9, 5, 6])), 0)
func_652_call = mod.get_global_var('func_652')
func_654_call = mutated_mod.get_global_var('func_654')
call_1056 = relay.TupleGetItem(func_652_call(relay.reshape(call_1049.astype('float32'), [9, 5, 6])), 0)
call_1057 = relay.TupleGetItem(func_654_call(relay.reshape(call_1049.astype('float32'), [9, 5, 6])), 0)
output = relay.Tuple([uop_1043,call_1049,var_1050,call_1056,])
output2 = relay.Tuple([uop_1043,call_1051,var_1050,call_1057,])
func_1061 = relay.Function([var_1042,var_1050,], output)
mod['func_1061'] = func_1061
mod = relay.transform.InferType()(mod)
mutated_mod['func_1061'] = func_1061
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1061_call = mutated_mod.get_global_var('func_1061')
var_1063 = relay.var("var_1063", dtype = "float32", shape = (15, 10, 15))#candidate|1063|(15, 10, 15)|var|float32
var_1064 = relay.var("var_1064", dtype = "float32", shape = (30, 9))#candidate|1064|(30, 9)|var|float32
call_1062 = func_1061_call(var_1063,var_1064,)
output = call_1062
func_1065 = relay.Function([var_1063,var_1064,], output)
mutated_mod['func_1065'] = func_1065
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1443 = relay.var("var_1443", dtype = "int64", shape = (7, 4, 8))#candidate|1443|(7, 4, 8)|var|int64
var_1444 = relay.var("var_1444", dtype = "int64", shape = (7, 4, 8))#candidate|1444|(7, 4, 8)|var|int64
bop_1445 = relay.right_shift(var_1443.astype('int64'), relay.reshape(var_1444.astype('int64'), relay.shape_of(var_1443))) # shape=(7, 4, 8)
func_551_call = mod.get_global_var('func_551')
func_554_call = mutated_mod.get_global_var('func_554')
var_1460 = relay.var("var_1460", dtype = "uint32", shape = ())#candidate|1460|()|var|uint32
call_1459 = relay.TupleGetItem(func_551_call(relay.reshape(var_1460.astype('uint32'), [])), 0)
call_1461 = relay.TupleGetItem(func_554_call(relay.reshape(var_1460.astype('uint32'), [])), 0)
func_551_call = mod.get_global_var('func_551')
func_554_call = mutated_mod.get_global_var('func_554')
call_1480 = relay.TupleGetItem(func_551_call(relay.reshape(var_1460.astype('uint32'), [])), 1)
call_1481 = relay.TupleGetItem(func_554_call(relay.reshape(var_1460.astype('uint32'), [])), 1)
func_551_call = mod.get_global_var('func_551')
func_554_call = mutated_mod.get_global_var('func_554')
call_1482 = relay.TupleGetItem(func_551_call(relay.reshape(var_1460.astype('uint32'), [])), 1)
call_1483 = relay.TupleGetItem(func_554_call(relay.reshape(var_1460.astype('uint32'), [])), 1)
output = relay.Tuple([bop_1445,call_1459,var_1460,call_1480,call_1482,])
output2 = relay.Tuple([bop_1445,call_1461,var_1460,call_1481,call_1483,])
func_1485 = relay.Function([var_1443,var_1444,var_1460,], output)
mod['func_1485'] = func_1485
mod = relay.transform.InferType()(mod)
mutated_mod['func_1485'] = func_1485
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1485_call = mutated_mod.get_global_var('func_1485')
var_1487 = relay.var("var_1487", dtype = "int64", shape = (7, 4, 8))#candidate|1487|(7, 4, 8)|var|int64
var_1488 = relay.var("var_1488", dtype = "int64", shape = (7, 4, 8))#candidate|1488|(7, 4, 8)|var|int64
var_1489 = relay.var("var_1489", dtype = "uint32", shape = ())#candidate|1489|()|var|uint32
call_1486 = func_1485_call(var_1487,var_1488,var_1489,)
output = call_1486
func_1490 = relay.Function([var_1487,var_1488,var_1489,], output)
mutated_mod['func_1490'] = func_1490
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2091 = relay.var("var_2091", dtype = "uint64", shape = ())#candidate|2091|()|var|uint64
var_2092 = relay.var("var_2092", dtype = "uint64", shape = (7, 4, 16))#candidate|2092|(7, 4, 16)|var|uint64
bop_2093 = relay.equal(var_2091.astype('bool'), var_2092.astype('bool')) # shape=(7, 4, 16)
output = bop_2093
output2 = bop_2093
func_2096 = relay.Function([var_2091,var_2092,], output)
mod['func_2096'] = func_2096
mod = relay.transform.InferType()(mod)
var_2097 = relay.var("var_2097", dtype = "uint64", shape = ())#candidate|2097|()|var|uint64
var_2098 = relay.var("var_2098", dtype = "uint64", shape = (7, 4, 16))#candidate|2098|(7, 4, 16)|var|uint64
output = func_2096(var_2097,var_2098,)
func_2099 = relay.Function([var_2097,var_2098,], output)
mutated_mod['func_2099'] = func_2099
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2530 = relay.var("var_2530", dtype = "float64", shape = (14, 15, 14))#candidate|2530|(14, 15, 14)|var|float64
uop_2531 = relay.log(var_2530.astype('float64')) # shape=(14, 15, 14)
output = uop_2531
output2 = uop_2531
func_2534 = relay.Function([var_2530,], output)
mod['func_2534'] = func_2534
mod = relay.transform.InferType()(mod)
var_2535 = relay.var("var_2535", dtype = "float64", shape = (14, 15, 14))#candidate|2535|(14, 15, 14)|var|float64
output = func_2534(var_2535)
func_2536 = relay.Function([var_2535], output)
mutated_mod['func_2536'] = func_2536
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2584 = relay.var("var_2584", dtype = "float32", shape = (11, 15, 14))#candidate|2584|(11, 15, 14)|var|float32
var_2585 = relay.var("var_2585", dtype = "float32", shape = (11, 15, 14))#candidate|2585|(11, 15, 14)|var|float32
bop_2586 = relay.mod(var_2584.astype('float32'), relay.reshape(var_2585.astype('float32'), relay.shape_of(var_2584))) # shape=(11, 15, 14)
func_652_call = mod.get_global_var('func_652')
func_654_call = mutated_mod.get_global_var('func_654')
var_2597 = relay.var("var_2597", dtype = "float32", shape = (30, 9))#candidate|2597|(30, 9)|var|float32
call_2596 = relay.TupleGetItem(func_652_call(relay.reshape(var_2597.astype('float32'), [9, 5, 6])), 0)
call_2598 = relay.TupleGetItem(func_654_call(relay.reshape(var_2597.astype('float32'), [9, 5, 6])), 0)
func_1061_call = mod.get_global_var('func_1061')
func_1065_call = mutated_mod.get_global_var('func_1065')
var_2604 = relay.var("var_2604", dtype = "float32", shape = (2250,))#candidate|2604|(2250,)|var|float32
call_2603 = relay.TupleGetItem(func_1061_call(relay.reshape(var_2604.astype('float32'), [15, 10, 15]), relay.reshape(call_2596.astype('float32'), [30, 9]), ), 2)
call_2605 = relay.TupleGetItem(func_1065_call(relay.reshape(var_2604.astype('float32'), [15, 10, 15]), relay.reshape(call_2596.astype('float32'), [30, 9]), ), 2)
func_1485_call = mod.get_global_var('func_1485')
func_1490_call = mutated_mod.get_global_var('func_1490')
const_2633 = relay.const([5,5,-4,-1,-2,3,1,-10,4,5,8,4,5,10,7,-4,-1,-2,-10,2,-10,-2,9,-10,-9,7,-1,5,8,10,3,8,2,8,4,2,7,5,-7,-10,-9,6,-10,6,10,-5,-9,-8,-4,-3,-8,-4,-10,-2,-1,-5,-9,-2,6,9,5,9,-9,-7,3,3,6,4,-4,4,9,8,4,1,8,-6,-5,7,1,-9,5,-4,9,6,6,-1,-1,5,8,5,-5,9,5,-4,-1,1,-4,6,4,-9,5,-7,10,2,-9,4,-10,-6,8,-1,2,6,6,-1,7,3,1,-8,2,-9,-9,-7,-5,-3,-2,3,-4,-9,-10,-3,10,8,-5,-2,-6,-10,-3,3,-9,-2,-9,-4,-3,-5,3,9,3,-5,-2,5,-8,-3,1,1,-2,-10,6,-6,-7,2,-1,5,10,2,9,-2,-2,9,10,-5,3,-5,-9,9,-4,-8,-6,8,-5,8,8,10,-4,5,-1,8,6,-4,-6,5,-6,4,-7,7,-1,-5,-4,10,6,-4,6,10,7,10,-8,3,9,-7,-8,-8,9,9,-8,1,-4,10,9,5,5,9,-2,9,-8,8], dtype = "int64")#candidate|2633|(224,)|const|int64
const_2634 = relay.const(4, dtype = "uint32")#candidate|2634|()|const|uint32
call_2632 = relay.TupleGetItem(func_1485_call(relay.reshape(const_2633.astype('int64'), [7, 4, 8]), relay.reshape(const_2633.astype('int64'), [7, 4, 8]), relay.reshape(const_2634.astype('uint32'), []), ), 3)
call_2635 = relay.TupleGetItem(func_1490_call(relay.reshape(const_2633.astype('int64'), [7, 4, 8]), relay.reshape(const_2633.astype('int64'), [7, 4, 8]), relay.reshape(const_2634.astype('uint32'), []), ), 3)
output = relay.Tuple([bop_2586,call_2596,var_2597,call_2603,var_2604,call_2632,const_2633,const_2634,])
output2 = relay.Tuple([bop_2586,call_2598,var_2597,call_2605,var_2604,call_2635,const_2633,const_2634,])
func_2639 = relay.Function([var_2584,var_2585,var_2597,var_2604,], output)
mod['func_2639'] = func_2639
mod = relay.transform.InferType()(mod)
var_2640 = relay.var("var_2640", dtype = "float32", shape = (11, 15, 14))#candidate|2640|(11, 15, 14)|var|float32
var_2641 = relay.var("var_2641", dtype = "float32", shape = (11, 15, 14))#candidate|2641|(11, 15, 14)|var|float32
var_2642 = relay.var("var_2642", dtype = "float32", shape = (30, 9))#candidate|2642|(30, 9)|var|float32
var_2643 = relay.var("var_2643", dtype = "float32", shape = (2250,))#candidate|2643|(2250,)|var|float32
output = func_2639(var_2640,var_2641,var_2642,var_2643,)
func_2644 = relay.Function([var_2640,var_2641,var_2642,var_2643,], output)
mutated_mod['func_2644'] = func_2644
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2872 = relay.var("var_2872", dtype = "uint16", shape = ())#candidate|2872|()|var|uint16
var_2873 = relay.var("var_2873", dtype = "uint16", shape = (5, 11, 3))#candidate|2873|(5, 11, 3)|var|uint16
bop_2874 = relay.not_equal(var_2872.astype('bool'), var_2873.astype('bool')) # shape=(5, 11, 3)
func_652_call = mod.get_global_var('func_652')
func_654_call = mutated_mod.get_global_var('func_654')
const_2881 = relay.const([2.168578,-3.432517,-9.087544,-6.139611,1.822913,-3.783551,-1.783099,1.957780,-7.328418,-6.345223,1.764358,5.825489,-3.041494,5.221029,-1.393663,-4.699643,-5.333084,5.495270,-7.354698,9.457683,-7.768913,-8.549425,6.252676,-9.439074,6.768362,4.273081,-7.814083,-8.124408,-0.389196,6.058021,2.406528,-9.099354,-7.992414,-3.268350,-3.773561,-5.271802,4.319220,7.407825,3.878112,3.581127,-3.702341,7.569539,9.408377,-7.347466,4.519572,5.266213,1.395631,-3.805106,7.528617,-9.036987,-9.005365,-8.666137,6.892403,-1.666520,7.531084,-1.216184,-7.399678,5.091415,7.735638,-2.260114,1.905353,0.332754,3.944122,-9.267590,8.770161,-1.042648,-1.608506,3.439608,-0.386003,-3.248621,8.489183,-8.836499,-6.900983,-0.637354,3.806154,3.560995,-6.108936,3.194135,-5.504955,-6.098288,-8.599660,-0.790982,5.318659,-6.055143,3.244894,5.481036,1.305519,7.650550,0.121262,-7.919029,-8.966046,6.839895,-1.752053,-5.938339,1.779119,-9.281956,-5.050421,-9.638763,6.412049,4.982920,2.572490,6.035187,-4.013493,-4.953868,-3.561762,-1.008258,-4.940044,6.054905,-1.726309,-4.041344,-9.595474,2.714130,0.251944,-5.424598,8.940281,6.817855,9.470109,3.883831,6.398212,1.750739,-6.583930,-1.412748,-5.399519,-4.060383,-0.724282,-5.844426,5.826173,9.683074,8.459783,5.095379,4.142934,8.502095,-9.372912,4.792675,-8.445434,1.453103,-1.903150,-2.236468,-9.333823,-0.732785,8.085406,6.468951,-9.052875,3.324828,6.562889,-0.642502,6.113648,8.598276,8.811070,-4.729799,4.725535,-9.752521,3.171016,-5.728753,2.999580,-2.515249,7.288318,-6.155828,-5.501373,0.498886,-2.982376,1.090596,2.936112,9.057958,6.447170,3.829911,-7.666050,-7.882169,-8.965958,7.788692,0.776401,-9.505653,2.696474,2.719118,-4.540456,0.083679,-1.328418,-3.433862,4.239117,-7.186610,6.979518,-6.117405,-0.211894,-6.985933,1.488801,-0.022551,8.660717,-8.064253,5.038155,2.605187,-1.327472,8.875900,5.327998,4.592630,2.358727,7.966290,3.158127,-9.668317,-3.433668,-0.865134,-4.605377,6.415724,7.173293,6.818012,1.202394,-3.303122,5.736620,-4.671385,2.708451,-0.672159,-0.168845,-0.024477,7.444374,8.117166,4.521060,0.056728,-2.750577,4.847703,-3.862978,4.277524,5.544854,-5.804753,1.782337,1.306496,-5.679260,5.252689,5.899816,-3.196665,5.468452,0.552408,6.510583,-2.529333,7.778726,8.052578,-7.249635,5.183663,-5.538166,0.495732,-0.022103,-9.131194,-0.570770,5.143923,1.538893,-4.529414,7.604899,0.565137,-9.502158,6.658577,-4.092389,-3.600265,8.658894,-9.109125,6.559054,4.657618,2.161671,-8.193380,7.387128,4.074847,4.599943,9.887047,8.648160,0.259977,8.312688,8.733224,4.219217,-9.452721,9.386630,-5.670846,-9.067036,1.129775], dtype = "float32")#candidate|2881|(270,)|const|float32
call_2880 = relay.TupleGetItem(func_652_call(relay.reshape(const_2881.astype('float32'), [9, 5, 6])), 0)
call_2882 = relay.TupleGetItem(func_654_call(relay.reshape(const_2881.astype('float32'), [9, 5, 6])), 0)
func_2534_call = mod.get_global_var('func_2534')
func_2536_call = mutated_mod.get_global_var('func_2536')
const_2886 = relay.const([[-3.065615],[-9.983301],[4.640740],[-4.781966],[3.448641],[-7.898705],[-7.058885],[3.645525],[-5.062303],[-8.621905],[-4.824260],[3.335167],[8.085245],[-5.996991],[9.415541],[3.646138],[-9.389306],[4.975567],[-8.586318],[-7.764753],[-0.362931],[-5.427834],[9.875021],[1.663989],[-3.182788],[7.757884],[-8.467666],[-5.852317],[7.041034],[9.111337],[-3.744598],[-5.777203],[1.514857],[2.390364],[2.894200],[6.263998],[-8.359171],[-1.522804],[3.890391],[0.654113],[8.843601],[-4.723856],[1.669458],[0.329729],[7.551127],[7.660995],[4.474514],[7.621947],[-9.028698],[0.972388],[-3.307679],[3.411766],[-3.858313],[-1.951909],[-8.191629],[8.750215],[-9.146820],[7.297041],[6.112012],[-1.511444],[-8.604997],[-0.710629],[0.939138],[-5.601047],[-2.845840],[6.333951],[-0.395253],[3.168989],[-9.759818],[-0.655630],[-4.869760],[-5.791300],[4.874227],[-9.814819],[-9.160529],[-4.736226],[7.086389],[-2.562542],[-7.794226],[-9.288207],[-8.488873],[2.682174],[-4.842734],[0.053332],[-8.115315],[5.673788],[-0.944082],[3.542131],[-8.017903],[-5.811673],[-5.912360],[2.985914],[3.827853],[-1.080902],[-8.834643],[7.424629],[-0.545902],[0.260118],[9.573261],[9.459450],[-4.441016],[-6.366288],[-0.657925],[-3.818925],[-6.631794],[1.781657],[3.385497],[-0.670440],[-6.623600],[-3.212978],[1.399625],[-4.782441],[-1.430055],[-9.197636],[-0.968985],[3.026131],[0.708974],[6.454450],[3.331534],[-9.790159],[-2.366545],[-9.082984],[-1.420531],[7.249478],[6.821373],[9.276766],[4.165484],[-4.395078],[5.515308],[2.842106],[-0.735335],[-5.790733],[8.961639],[1.825959],[2.121250],[-4.346141],[1.487037],[-0.960840],[8.001219],[3.852302],[7.806741],[5.584350],[-0.511982],[9.045316],[-0.021881],[7.300723],[2.423144],[-3.836747],[-1.098085],[-7.647091],[2.542882],[9.324423],[5.037007],[-9.925439],[0.449627],[-0.601622],[-4.247899],[7.840949],[8.629026],[-8.649471],[-5.135929],[5.481602],[9.005559],[-7.612971],[0.571137],[-4.050602],[0.062371],[-6.112678],[4.508761],[5.935594],[-1.953207],[4.038374],[5.760942],[6.622939],[0.262280],[-6.326419],[6.444970],[-4.115006],[-4.082436],[-9.166434],[5.429207],[-1.293613],[5.121777],[6.200336],[-7.649795],[1.242740],[-7.514153],[7.785851],[-9.400603],[4.902566],[7.360860],[0.786431],[6.681266],[0.369947],[-7.324260],[4.442835],[-1.694661],[-3.846354],[-0.794067],[-0.270544],[-6.385747],[7.940065],[3.123238],[-2.296197],[2.953868],[1.617092],[7.609364],[-5.899792],[-1.495026],[-2.490699],[8.700826],[-7.550028],[-5.103771],[4.427223],[7.222323],[1.582385],[-4.659134],[-6.657069],[9.032372],[5.657916],[-0.826596],[8.418390],[7.066378],[-9.355671],[-2.504856],[-4.055826],[9.274935],[1.481448],[4.940514],[-7.714806],[6.515855],[-1.433246],[1.323996],[6.443718],[4.659098],[9.113692],[0.741509],[1.055043],[-9.242135],[6.825941],[4.032185],[4.284115],[-8.330294],[-5.564243],[8.768534],[-1.001678],[-4.101620],[-0.326251],[-5.633094],[-0.447598],[-5.917964],[2.504394],[4.145821],[-1.053651],[4.190253],[-7.264147],[5.575991],[5.890825],[-9.999844],[0.458159],[-1.178277],[-5.106923],[-7.145729],[-8.046488],[-2.386189],[-9.663552],[4.042043],[6.311246],[9.522745],[-6.071901],[3.208411],[2.530915],[-2.431752],[-6.246537],[-9.117788],[7.454889],[-2.997553],[4.637808],[-3.590649],[1.649079],[-6.707002],[-9.046226],[9.151404],[-1.012807],[2.205175],[4.837391],[3.105490],[-9.086776],[0.215593],[0.116548],[-9.191549],[2.610252],[-1.730207],[-9.112544],[-0.146240],[-4.501108],[4.462051],[-1.597225],[-4.485171],[9.765790],[-4.322099],[-9.379538],[7.871061],[1.485735],[8.568317],[-2.909359],[2.633095],[-2.199844],[-5.693061],[2.482083],[-3.211753],[-6.445020],[-3.632050],[9.432032],[3.257205],[-9.685954],[2.083280],[-2.311337],[9.307397],[-9.233023],[-5.455396],[3.392190],[-1.507951],[2.696603],[-6.851898],[4.618946],[-6.247943],[-2.604739],[5.429865],[4.365390],[5.352449],[-3.725821],[-9.322188],[0.748251],[-6.579863],[9.547934],[0.078852],[2.859058],[-9.308309],[-2.374832],[8.969244],[-1.712089],[0.081310],[-7.938635],[-0.150335],[-4.919148],[2.717207],[-0.419901],[9.812970],[-3.273387],[1.361845],[-2.748564],[-2.263753],[-2.060035],[-4.943442],[4.211070],[4.557842],[-4.615029],[-0.597584],[5.773756],[-2.108802],[-5.104437],[-7.460377],[-7.179327],[0.536015],[6.412846],[-6.005584],[0.566466],[7.418882],[9.904150],[-7.791587],[9.247941],[-1.561029],[1.270425],[-4.081177],[2.467957],[-1.834637],[5.560481],[7.425654],[-5.908735],[-5.106076],[2.811151],[5.122677],[0.012299],[5.611528],[-3.177910],[7.623919],[6.790258],[7.528459],[-6.621470],[0.255631],[6.700257],[-4.224002],[-9.380653],[-1.424750],[-6.585325],[-6.497507],[1.897860],[-9.520285],[8.445544],[2.520097],[8.595487],[5.947733],[1.155353],[9.914958],[0.728316],[8.835106],[-5.979114],[6.079278],[9.372183],[0.117880],[-2.536520],[-1.132435],[3.538847],[-2.542329],[-8.383463],[9.668009],[-9.535752],[-2.837592],[3.974939],[5.513537],[-4.781979],[8.731823],[-2.996118],[7.156241],[-7.590802],[0.378510],[-2.564356],[-5.591601],[-1.878693],[-0.673250],[1.183906],[6.077186],[8.422790],[8.696638],[7.355409],[3.565099],[2.510043],[9.480404],[5.800120],[-9.847888],[9.929470],[-0.165172],[0.101606],[-4.956907],[1.330813],[-6.988466],[-9.149328],[-1.245907],[0.018680],[-0.594099],[-3.066332],[-0.747948],[3.400113],[-1.774098],[-1.149858],[-4.020060],[-1.203628],[4.213858],[-7.629267],[-5.933031],[8.899287],[-3.161515],[-6.572290],[0.975875],[-3.562853],[-6.241725],[6.580066],[-2.632462],[-8.565511],[9.629527],[0.060854],[2.005232],[-8.364567],[0.582408],[-7.941889],[-6.423088],[-3.800604],[0.213038],[6.109537],[-0.947370],[-7.199190],[-0.630895],[9.095693],[-2.386685],[2.674543],[-5.951314],[-3.450416],[8.493158],[0.912355],[3.603623],[-9.474905],[8.681387],[-0.412511],[0.591735],[1.013366],[7.121526],[-1.687392],[1.031591],[-3.155972],[-9.895077],[7.298811],[4.312603],[-9.559159],[-5.532025],[9.863548],[5.559324],[9.528893],[5.421998],[3.470791],[9.386436],[-9.293909],[-6.037004],[-7.946501],[2.456135],[-2.801134],[2.553524],[-8.274824],[5.763063],[7.037648],[-6.207105],[6.999342],[-5.727985],[-7.090116],[-1.879820],[-1.043843],[-3.541843],[-9.631531],[4.122315],[-8.392828],[3.915833],[-0.517216],[-4.208549],[6.341808],[8.723699],[6.730668],[-4.689359],[0.119458],[0.214343],[-9.546468],[7.442979],[9.480200],[7.438646],[2.690498],[3.230394],[2.682891],[-8.870652],[3.152432],[2.391810],[-3.430363],[3.990567],[-9.689114],[-1.846961],[-6.576330],[-8.400031],[7.325014],[0.023012],[2.108002],[-4.199758],[1.709150],[5.547520],[-1.305322],[8.315654],[-7.540965],[5.841713],[7.648891],[7.697844],[-4.104970],[-9.339234],[9.735583],[3.139547],[-4.600527],[-5.450464],[4.238671],[-9.960481],[-1.449860],[-5.321446],[2.754589],[-8.079206],[-7.629758],[-5.661050],[-8.551774],[5.971961],[4.076774],[0.918570],[-2.155434],[5.407179],[4.865709],[1.707715],[-6.233147],[1.925870],[9.459669],[-0.614958],[9.079125],[-7.354643],[-9.161793],[-5.577329],[-1.165873],[9.658211],[5.662434],[8.475947],[6.300200],[-4.672102],[-1.342943],[1.779533],[-2.032316],[5.881691],[-9.509741],[-5.155915],[-6.269674],[8.540377],[-8.820913],[2.213358],[-1.186125],[-4.958334],[3.815165],[5.244811],[5.426618],[2.852703],[7.990065],[-2.752342],[5.413201],[1.770430],[4.049289],[-6.796091],[7.578390],[-7.694545],[3.542478],[-6.956449],[-6.014268],[8.210302],[-1.971026],[-9.387088],[-9.674590],[5.131798],[0.194300],[3.433285],[0.706494],[-7.107326],[1.171209],[-0.804381],[5.957959],[-5.462288],[-1.977813],[-5.614718],[4.574292],[-6.421074],[-8.614441],[5.391718],[-9.420759],[9.175075],[4.489298],[5.895752],[0.426151],[0.641405],[-0.570509],[7.183315],[2.679102],[-5.530420],[4.946434],[-8.788722],[-6.849126],[-3.368296],[-9.539002],[5.669217],[1.553285],[-9.112797],[-0.003124],[2.743470],[7.018483],[-9.900262],[3.904426],[6.528437],[8.352744],[-8.931353],[-4.064030],[3.738231],[-5.258222],[-6.794251],[-2.979521],[7.085912],[-9.283217],[-0.636212],[5.366460],[-4.933447],[-0.972192],[-3.455175],[0.982473],[-9.448873],[1.100859],[0.725557],[-3.922307],[-6.273463],[-3.342555],[3.185404],[6.017052],[-5.780122],[-0.232976],[-8.084463],[7.185218],[-2.003114],[1.677969],[3.089568],[5.171482],[7.999329],[-0.092865],[-9.829063],[7.382478],[2.584144],[3.246524],[-1.055656],[-2.881985],[-8.900569],[8.340762],[-4.688516],[-7.375027],[1.170002],[-4.499142],[-6.562919],[-6.497372],[-0.805028],[-7.373392],[6.179581],[-8.387455],[5.296229],[1.983837],[-7.111997],[2.055836],[-9.256018],[2.239272],[5.622108],[-3.293464],[2.860352],[1.667730],[-0.462211],[7.160042],[-0.285250],[9.707142],[4.138960],[0.154544],[-5.033830],[2.679036],[-9.271213],[2.505494],[4.455127],[3.544901],[-6.029585],[6.643744],[-3.808650],[9.182389],[5.658574],[-8.872059],[-5.653706],[7.779892],[9.041092],[4.084910],[-5.124009],[-5.919902],[9.240682],[0.179301],[-3.155006],[2.443019],[-8.663414],[-5.909837],[1.987595],[0.879990],[-1.173565],[-2.347491],[-1.539229],[-5.850382],[-3.874852],[8.691170],[-4.561836],[5.716694],[0.503962],[0.163134],[-6.681840],[3.484935],[8.324893],[5.611212],[5.184494],[7.781838],[-6.150484],[8.932076],[-6.526871],[-3.762469],[2.944681],[3.403628],[3.357853],[5.417674],[2.087522],[-1.489279],[9.272640],[1.591883],[6.950823],[4.055294],[2.203901],[-5.307770],[-3.749929],[-5.354383],[-1.920977],[-5.354224],[-2.593548],[4.698175],[-5.786378],[0.959109],[1.543545],[7.339654],[6.974122],[-4.374285],[-8.303696],[9.694397],[-0.448132],[9.208229],[5.812356],[4.219330],[9.215112],[9.238833],[9.232711],[4.934142],[6.515651],[-1.831390],[5.837952],[3.049159],[-0.328344],[1.351093],[5.641733],[-3.815017],[7.661420],[1.139701],[-1.503310],[-1.923127],[-9.874774],[2.745088],[-2.287573],[1.517374],[4.584757],[4.088905],[-4.373294],[2.265584],[-0.716234],[4.594195],[-2.067615],[9.537025],[3.080587],[-6.443404],[-5.308000],[8.173349],[6.691634],[-2.620530],[-7.107574],[6.543082],[4.603934],[-2.060553],[-4.781710],[-0.596969],[-5.084788],[-7.450730],[-5.035249],[-6.151677],[-1.360269],[1.007013],[2.540971],[2.943618],[7.696255],[9.441074],[-6.673740],[-7.347017],[7.705421],[6.771995],[-7.817272],[-2.737840],[7.114212],[3.080487],[-1.357044],[2.609710],[7.490495],[4.048241],[-1.606046],[6.072185],[9.080751],[6.204745],[5.835332],[3.846414],[-2.898644],[-6.247302],[6.459036],[1.999870],[-1.977040],[-9.037127],[5.195142],[4.037454],[-3.547777],[9.244371],[-5.923463],[-3.370650],[3.422424],[7.800718],[8.445757],[4.119129],[1.646503],[3.113348],[-7.461201],[9.512784],[3.400946],[-3.913892],[3.883012],[1.391835],[-5.320071],[-0.107109],[8.150246],[-4.484278],[-2.227303],[-9.289495],[4.652247],[3.257023],[9.498133],[4.876349],[-8.360221],[-2.666970],[-8.984934],[-2.318448],[2.903613],[9.189894],[-7.177088],[-6.553499],[-5.204204],[6.938145],[-8.287778],[0.647191],[3.681197],[-7.260541],[1.516207],[5.657308],[-2.916590],[7.347451],[-8.566073],[-7.181713],[-0.078430],[5.391285],[-9.353222],[-5.017068],[4.722890],[7.112876],[8.020487],[2.465822],[-8.403932],[-6.841085],[4.891257],[6.831728],[4.766875],[-0.694720],[-3.122478],[1.013009],[-7.925347],[7.163445],[-3.742734],[1.722016],[2.902136],[6.942165],[1.284060],[-6.624696],[-6.848620],[0.656454],[-9.277405],[4.650445],[-3.024934],[0.040751],[5.449182],[6.114568],[3.236123],[-5.935067],[-4.456498],[1.084960],[-7.630930],[6.549674],[2.642647],[4.230840],[-0.266090],[0.167892],[6.480654],[-0.544425],[-8.207618],[-4.815325],[4.418060],[4.983105],[6.486410],[-2.982088],[-1.365900],[0.436260],[6.424279],[-6.814582],[-2.419426],[-0.833804],[3.247985],[1.869833],[9.414652],[-4.045801],[1.406210],[5.819290],[-9.385837],[-2.003751],[-5.493231],[0.394569],[-5.439035],[2.224100],[0.954889],[0.266945],[-5.519746],[-6.317118],[4.389621],[-7.167753],[-5.332214],[8.857030],[-0.874728],[-6.545222],[6.858215],[-1.192509],[9.975989],[-4.345110],[-5.619167],[0.856045],[-6.964993],[-8.209338],[9.007913],[-4.609372],[-2.545365],[3.890762],[0.170819],[1.529760],[6.714915],[-2.974273],[-5.801821],[-3.843938],[-5.849362],[8.354593],[-3.219380],[1.841226],[5.358322],[2.442146],[-2.587629],[-0.491359],[1.690922],[2.480189],[-0.173390],[-4.866491],[-0.426627],[-5.475831],[4.966836],[1.290137],[-8.844623],[-1.619026],[0.817827],[0.540942],[4.589997],[2.131568],[-2.167007],[0.068373],[1.361177],[-1.550275],[9.675851],[0.930620],[9.046646],[-6.322758],[-8.791905],[-4.161963],[-3.675109],[-0.799900],[-8.097450],[6.718608],[-4.969754],[-6.580122],[-9.307620],[-6.792946],[-0.721153],[8.832603],[7.942690],[-1.498698],[-5.330571],[7.689064],[-4.542505],[9.976622],[2.760092],[-8.282602],[7.148913],[7.636438],[0.817949],[-1.746414],[2.935503],[0.226441],[7.359936],[2.024226],[-5.174751],[0.751014],[-2.925852],[2.706120],[7.734452],[-1.433393],[-1.611379],[-3.780311],[-8.508303],[-9.177640],[0.578483],[8.693269],[5.333137],[4.702142],[0.910685],[-0.022918],[-7.441914],[-5.500991],[-0.534034],[5.595579],[0.418832],[-6.123147],[-5.322167],[7.746625],[0.900824],[-3.441508],[8.297069],[3.994450],[4.222922],[5.201077],[-4.331997],[-4.420353],[-6.005578],[7.805105],[-6.096995],[-8.582604],[-3.921579],[-3.260981],[8.309556],[8.156186],[3.155643],[-4.738607],[2.133400],[7.531057],[-4.603072],[0.471479],[-2.480976],[3.732824],[8.977054],[-9.820409],[0.399879],[6.434062],[9.038221],[-1.789492],[4.806028],[1.238485],[-2.325852],[7.738119],[-2.244851],[-0.973347],[-8.311504],[7.472180],[4.384470],[5.126246],[1.365934],[-0.703162],[-6.923533],[0.644709],[1.307934],[-3.540228],[4.338436],[2.138853],[5.090749],[-9.176890],[-2.581057],[-6.763026],[-9.067532],[4.951972],[-7.378369],[-0.281797],[-1.094163],[-4.211816],[-0.642230],[2.583668],[-9.196999],[8.769893],[6.560131],[7.444466],[1.735475],[-5.109279],[-4.817837],[-3.108607],[-8.517597],[-6.641374],[-8.232274],[3.668136],[8.122777],[7.927771],[7.243870],[-5.586562],[2.906942],[2.120199],[-9.891608],[6.817260],[-6.828589],[4.213467],[4.285121],[-4.402618],[-4.036336],[-5.851228],[6.645119],[1.413935],[-9.383752],[5.313582],[7.633378],[8.226138],[1.288929],[-7.776367],[5.750607],[0.027987],[3.402115],[-6.657147],[1.784194],[2.892302],[0.754519],[-6.426970],[6.751501],[2.714355],[5.323134],[1.443883],[-2.392998],[0.097273],[0.332394],[-3.424986],[6.007183],[1.782491],[-7.965900],[7.745665],[-9.627640],[8.738674],[6.603305],[-9.773010],[-8.202140],[-7.403461],[-9.406287],[-5.960358],[-3.289178],[-8.562749],[1.283055],[-4.329982],[2.393643],[-7.473853],[3.429760],[4.611209],[-2.488517],[8.185250],[-1.771964],[-4.865590],[2.388955],[-7.281511],[-4.555483],[7.600564],[-7.258095],[-8.986917],[-5.496212],[6.899186],[-7.643410],[5.346068],[0.713936],[0.746250],[-0.324646],[9.816946],[0.710034],[2.226226],[-0.245616],[-4.182867],[-7.020164],[2.468856],[-0.803352],[5.868175],[-9.634317],[-5.678925],[-8.897152],[-2.966250],[-2.809786],[0.364779],[-8.847398],[1.590645],[-8.584464],[1.072169],[6.451924],[4.956700],[0.249153],[-7.176921],[-5.930590],[-3.897678],[-1.409553],[-4.735063],[-8.010916],[9.823655],[-4.149822],[1.685820],[9.699530],[-7.314125],[1.465275],[7.835988],[-2.437975],[6.828484],[8.874611],[6.143442],[8.748025],[5.028298],[-6.158495],[-6.713645],[-2.585151],[5.292382],[-9.487023],[-8.563737],[9.487837],[1.054122],[-8.585015],[2.079523],[4.680779],[-9.723446],[9.861755],[-9.396776],[8.262702],[-2.191716],[4.286196],[-7.482443],[-2.670543],[1.019400],[6.974313],[5.784814],[-2.718046],[7.402917],[6.725242],[6.454700],[3.453122],[1.477084],[7.556661],[1.315767],[7.973627],[-2.570744],[-8.212447],[8.211664],[-2.753935],[8.412844],[-4.612847],[0.581878],[2.089513],[0.695402],[0.924161],[3.351095],[-0.355799],[1.008509],[3.834959],[-3.517103],[7.422282],[1.184697],[7.164605],[-1.639676],[6.023294],[1.948983],[-9.770542],[1.811504],[-3.160626],[-0.456469],[9.669382],[-1.615430],[1.247657],[-1.625773],[0.184186],[2.506658],[0.655700],[-3.608300],[0.063433],[2.519370],[8.940722],[-6.406962],[8.175268],[4.114941],[-4.744867],[0.308353],[-4.715816],[0.611228],[-6.147000],[-0.929225],[-4.672473],[-1.870546],[-3.697728],[9.309348],[7.000887],[3.645412],[4.511483],[4.952456],[5.101385],[-0.581735],[-9.900479],[9.697356],[-8.537198],[-6.918114],[-1.127225],[-8.304218],[6.163098],[1.869715],[7.871110],[7.668389],[7.534094],[4.410843],[3.957076],[6.283227],[-7.430262],[-5.070601],[2.513844],[1.511614],[0.302778],[-8.552215],[-4.153665],[-9.136708],[9.656228],[5.350572],[-3.301914],[-5.974473],[6.040500],[4.415589],[-5.374458],[1.360976],[-7.969968],[9.420731],[-0.927802],[1.999084],[8.412734],[2.219094],[-5.901221],[3.655026],[3.251736],[8.541641],[9.407388],[9.553653],[6.140420],[8.192047],[0.729856],[-2.131857],[8.812066],[-4.596941],[-7.852886],[8.333804],[6.506696],[0.805689],[-2.229625],[-7.136175],[-9.082801],[-7.194542],[9.616262],[-2.663964],[-2.908330],[-8.253221],[1.823452],[7.783070],[-7.996369],[-7.621298],[-0.361982],[-7.463068],[-1.036949],[2.786131],[-7.662930],[4.304466],[1.241457],[5.820108],[0.114676],[-5.839775],[8.228660],[-7.348791],[6.457782],[2.802466],[0.378224],[9.752008],[4.239467],[8.070784],[4.481817],[0.703729],[-4.445781],[-9.988812],[-9.646846],[-1.860428],[-0.882664],[2.349278],[8.702930],[-7.333139],[1.448594],[3.485200],[1.817173],[-8.811786],[-6.624258],[-3.600553],[3.019925],[-7.578549],[-6.547585],[3.144250],[-3.075391],[5.630726],[-3.832576],[-9.018838],[-7.952153],[2.656785],[0.483514],[-6.597687],[2.753214],[3.112178],[-1.624236],[2.170567],[9.530127],[-4.888853],[3.118836],[-6.275432],[4.619885],[-1.647568],[-9.945181],[-6.469142],[8.790438],[9.970392],[-4.629303],[4.491116],[-9.105638],[2.799542],[-0.532672],[-0.328514],[-6.895558],[-9.653223],[3.606958],[0.349962],[-3.671569],[-7.117339],[5.130693],[0.176070],[-9.916900],[5.377946],[-6.359305],[-9.262358],[2.756733],[0.507013],[8.196309],[-3.344112],[-3.975748],[6.375470],[0.059902],[2.827774],[-8.291366],[8.746053],[-3.510837],[-7.872744],[3.136220],[0.196985],[-2.058883],[-1.772344],[7.041751],[0.587241],[-3.403093],[1.838827],[-0.598959],[-2.537132],[1.246500],[5.590356],[2.306891],[3.243172],[4.767561],[2.853608],[4.210717],[-0.357006],[-3.310444],[-5.497929],[6.263268],[-8.213095],[6.293860],[-8.762706],[-9.157663],[6.874243],[-5.092648],[6.298724],[0.742025],[5.035617],[-6.579519],[2.617682],[0.680084],[6.548959],[3.613015],[-5.236188],[-8.658464],[-6.025025],[-1.404493],[2.340513],[2.442525],[-9.062681],[-7.337188],[0.027135],[9.379038],[-1.082904],[7.625629],[2.080465],[-9.189423],[9.531627],[-1.504008],[-5.551460],[-0.326338],[-8.713978],[5.561883],[-5.176769],[7.861918],[2.995483],[-6.097953],[1.212034],[8.254230],[-6.846810],[-1.646982],[-0.152940],[-9.878827],[-1.442267],[6.731005],[3.323144],[1.538530],[-1.311037],[-7.487299],[5.006574],[4.719694],[1.391073],[5.592330],[5.302847],[-4.040453],[-4.497931],[-0.306175],[9.629362],[-4.474603],[2.576369],[-7.813432],[1.946285],[9.677098],[5.652173],[-2.822945],[9.029759],[4.905914],[-6.323410],[6.801451],[0.749574],[0.039406],[-8.762718],[-1.469955],[-3.148827],[9.355537],[-1.807934],[5.403993],[7.339378],[3.655857],[-6.008262],[3.183186],[-8.765931],[-9.439870],[-4.711798],[-5.549394],[1.380688],[4.870529],[6.064614],[-0.933253],[-5.135575],[-8.139671],[7.789963],[-5.865209],[-5.203140],[5.787409],[-2.473365],[-0.145723],[4.151218],[3.698418],[-9.460875],[-9.201404],[8.675878],[-2.973667],[2.043444],[-7.832515],[-0.829300],[7.170465],[-1.351937],[9.587095],[0.824374],[5.843707],[7.185892],[-3.248061],[-0.857936],[-2.649874],[-1.048980],[1.979547],[-1.561458],[-1.770633],[-1.631572],[4.250916],[4.692496],[-5.337589],[1.199589],[-2.209001],[0.946523],[-5.366379],[1.024979],[5.424258],[-7.125362],[3.873272],[-7.739331],[-5.428458],[-7.779091],[8.329669],[9.690631],[0.465863],[9.707723],[3.535682],[1.364196],[9.478657],[8.233309],[-4.781418],[4.974223],[4.396021],[8.898889],[-3.984130],[3.438929],[7.240173],[0.626632],[-4.621569],[9.935713],[-2.345303],[0.588220],[0.237541],[1.071795],[9.044993],[-3.803817],[-3.645969],[-8.250585],[2.983984],[-2.220258],[0.932754],[-7.191730],[6.551825],[2.498156],[1.434708],[2.427107],[0.206297],[1.818999],[-1.045890],[-2.850450],[8.528920],[9.251171],[-8.585259],[2.032481],[7.910483],[6.831836],[8.025616],[8.760868],[3.865320],[-5.931104],[-2.472675],[-6.541042],[2.063068],[-9.853836],[3.969796],[4.062762],[-0.767599],[-5.600136],[-4.615203],[-2.238234],[3.603213],[5.461793],[-5.891494],[4.872306],[5.994955],[-9.104912],[1.808870],[-6.878244],[-4.902700],[-5.441575],[3.303319],[-7.023304],[-1.355574],[-4.590683],[0.653704],[5.811982],[-2.329297],[5.526180],[5.681506],[-0.047027],[1.404733],[-5.510991],[-0.856414],[3.611401],[-6.575336],[-3.007101],[2.321029],[4.617818],[5.149817],[7.698623],[-9.569081],[4.972017],[0.896522],[9.248032],[2.031188],[4.624997],[-0.319381],[3.426302],[-2.523984],[6.667471],[1.518142],[-2.411248],[8.697129],[-2.998042],[1.155136],[7.234615],[-4.136856],[-7.507409],[0.339101],[8.471655],[-9.399032],[3.537282],[-4.788477],[7.397807],[3.741474],[4.971796],[-6.992215],[-3.883482],[8.220243],[-6.839150],[-5.394805],[5.776357],[-6.368549],[-6.336421],[0.638086],[-6.688711],[-2.628092],[2.099253],[-9.298379],[-9.365488],[4.392697],[-7.760307],[8.291954],[4.224368],[-4.996374],[-3.623981],[2.492457],[3.408730],[6.026623],[-6.648438],[0.052151],[-6.172097],[-3.851873],[3.031366],[-5.129430],[7.354464],[5.085997],[0.678689],[-4.943503],[-1.407098],[-3.587905],[9.769509],[-2.568245],[6.306075],[-1.761614],[-8.685027],[-5.982538],[6.947150],[-9.662343],[-2.932458],[-2.845262],[3.314490],[7.419767],[8.761038],[3.315534],[-0.557779],[-7.475523],[-0.606889],[8.802948],[-9.623183],[8.685434],[9.297339],[-0.288860],[-6.966388],[5.530348],[7.647547],[-7.900905],[-8.395009],[-3.914865],[7.764267],[5.366411],[5.557801],[5.593630],[-6.166710],[-3.829853],[-2.806121],[3.259995],[9.528094],[9.650543],[3.309167],[-4.404947],[-5.330745],[8.448514],[7.541817],[-8.048712],[8.141918],[-5.042830],[7.678419],[-0.726271],[-6.704317],[2.498366],[-8.698724],[4.753198],[-2.886126],[-7.596806],[7.804889],[-5.105848],[0.503877],[-3.932936],[7.010752],[-3.610123],[-9.649025],[-9.964323],[-6.987783],[9.530377],[6.307377],[-0.112190],[-8.013653],[9.774084],[-0.052679],[-0.264256],[9.452509],[9.469321],[-7.342008],[0.745635],[0.615064],[-6.309137],[-2.139281],[1.427371],[-1.133563],[-8.005543],[9.170405],[6.525068],[-2.284252],[-3.067808],[-8.654044],[-7.146028],[-6.762775],[0.878172],[-7.538399],[-1.679200],[-1.047730],[2.990565],[6.191910],[7.101238],[-2.980083],[6.355320],[-0.082785],[2.104558],[-6.874494],[9.721779],[-5.807278],[-8.923111],[-1.551361],[6.276242],[-4.698948],[-4.736364],[-9.548435],[5.086406],[-5.800383],[7.888378],[-9.791731],[3.249610],[-6.186545],[7.935455],[-9.382607],[4.905292],[6.543129],[1.575796],[8.453463],[-4.369867],[3.165227],[-1.841099],[-7.279737],[2.619614],[9.140421],[9.928424],[-9.980845],[-5.194100],[8.213234],[6.212474],[0.272865],[-0.453951],[-0.861828],[-6.318646],[-9.266467],[2.868021],[8.142573],[-8.843276],[2.723095],[-5.917835],[-9.289375],[4.646598],[-1.902743],[3.604977],[7.932626],[-7.122255],[-8.004397],[8.879707],[-4.753752],[-0.462489],[-9.463968],[-9.452263],[-8.098172],[-4.818945],[4.938704],[-5.048158],[-8.588409],[-8.598008],[9.174596],[5.973331],[-3.378866],[7.965038],[-1.674348],[3.072068],[-0.402870],[-8.649848],[3.943796],[-9.872210],[5.277457],[3.774694],[-2.391086],[-6.444508],[8.898538],[7.744354],[3.945283],[-2.156378],[-8.409681],[-9.471947],[-9.118128],[-2.988606],[8.858052],[-6.299648],[9.038331],[-3.090546],[1.391818],[9.870266],[2.161126],[-8.997860],[-5.639216],[-6.906862],[-0.007682],[1.904103],[-0.964232],[-9.175065],[6.238558],[-6.413290],[8.719919],[0.906949],[4.611082],[1.077093],[-1.099855],[-3.745263],[-6.569010],[-1.565560],[2.230179],[-0.620555],[0.898174],[-4.327214],[3.554180],[8.901825],[3.022767],[-1.823676],[-4.256873],[-2.899113],[5.263649],[-7.220865],[-4.276190],[-5.533706],[5.000689],[-4.850869],[3.955753],[3.103618],[-5.598123],[-9.770689],[-8.621141],[9.424885],[0.214558],[-3.535681],[9.521719],[-6.470740],[-1.696577],[-2.013176],[2.142657],[2.645538],[-1.009943],[8.747739],[7.325307],[-3.488750],[3.236798],[3.839314],[-4.363408],[1.332261],[-5.600285],[7.429770],[-6.090098],[1.057273],[-8.102238],[-2.942807],[-3.625302],[4.789000],[1.454872],[-5.320160],[2.869966],[-1.090350],[4.436112],[-9.773650],[-7.455770],[-7.346937],[0.887101],[5.057587],[1.723606],[-0.048387],[-6.063090],[1.651524],[-6.425061],[4.520445],[-6.277689],[-6.458304],[6.228289],[-4.812840],[8.786976],[-2.766689],[-8.735384],[-4.534878],[3.513193],[-3.754743],[-7.114838],[-4.114860],[5.421938],[4.689458],[-5.078888],[0.026434],[-1.985842],[-6.020063],[-8.875217],[2.872533],[5.963724],[-5.143179],[-3.641556],[7.709427],[-3.988929],[-7.665658],[-5.154213],[8.465242],[-5.536556],[-7.206711],[-5.862891],[9.602714],[8.796620],[-7.205721],[-6.522163],[1.591448],[6.210789],[-1.464074],[1.318108],[6.896044],[5.401726],[-6.005307],[9.211289],[2.630318],[2.378715],[-6.003037],[3.197751],[-5.976244],[-1.192480],[-3.613512],[-8.720066],[-0.916977],[7.592842],[9.866427],[1.006720],[-6.736939],[-5.499688],[-9.757506],[6.367669],[-5.047288],[6.796100],[-5.958879],[-4.691193],[-0.186613],[6.402995],[-6.704285],[-1.319568],[3.949030],[1.873737],[-0.869336],[-8.619196],[5.913582],[-8.693426],[-9.120045],[6.887749],[-3.875815],[0.100547],[6.559936],[5.077317],[-6.750653],[-8.303087],[6.152475],[-9.340646],[7.126584],[5.299936],[-4.774934],[-8.048050],[2.250425],[8.743655],[-5.250447],[-1.472910],[-7.427734],[5.956813],[2.158714],[7.273381],[4.853622],[-9.647999],[-2.005698],[-0.064976],[-9.429412],[-5.260488],[1.256404],[-6.744130],[2.706533],[-0.930786],[-2.398793],[-7.485911],[-5.362548],[-4.975508],[-3.830993],[-1.460711],[-9.164974],[-7.669454],[6.385067],[-7.588827],[9.916124],[-5.804522],[4.801851],[7.621027],[-2.149169],[9.130696],[-8.442649],[1.162953],[6.016758],[-5.993112],[7.173569],[-0.028641],[-5.967751],[2.310785],[7.499962],[1.606883],[-8.078194],[5.182777],[2.611082],[-9.373109],[-0.173076],[-1.991218],[5.961396],[7.081312],[-3.561596],[-5.868049],[-0.449549],[8.462001],[-5.370716],[-0.299696],[-2.178375],[-4.587536],[1.137643],[-7.701649],[-6.348559],[7.322867],[-2.491248],[5.096061],[2.891768],[0.848883],[-5.390669],[-4.591698],[-5.636962],[7.514268],[-5.267937],[-2.427854],[-7.943679],[7.434095],[-8.428780],[-5.596669],[-3.225084],[4.934061],[1.327992],[-7.453699],[8.593107],[-9.306015],[6.799955],[3.067781],[-3.084642],[-4.175912],[-2.725027],[0.754781],[7.669627],[6.584706],[8.287779],[-1.138301],[1.421627],[-3.524376],[-0.158264],[6.273789],[-4.740929],[-0.692064],[-9.943030],[6.272998],[-8.002253],[2.929493],[-3.431989],[1.957298],[7.540332],[8.320115],[-8.027820],[-6.658057],[4.028018],[9.462901],[1.172864],[-6.856301],[-3.765231],[-1.825147],[-3.612119],[-5.456799],[8.867882],[2.109211],[-6.356469],[-2.287955],[4.318686],[-3.352894],[9.192520],[0.018769],[-7.465885],[7.217875],[-0.198248],[3.629634],[-1.014876],[0.233308],[-6.972620],[3.872280],[-8.271733],[1.035521],[-6.310137],[-4.238321],[-9.223546],[2.674971],[-9.567537],[-3.605767],[0.097863],[-0.102353],[5.277676],[6.400247],[0.044576],[-0.166106],[-1.187668],[-2.957945],[5.986444],[6.144926],[3.786461],[5.852045],[0.560624],[3.420634],[-8.898839],[-8.553979],[7.637589],[0.682415],[-4.162047],[-0.526266],[5.593889],[5.641587],[6.696236],[-2.448375],[-9.083344],[-6.728966],[-4.109573],[9.704534],[-6.010615],[7.771045],[-9.576925],[6.704190],[-6.679104],[7.346886],[9.807996],[8.345985],[-9.261321],[-2.152630],[-8.736995],[-3.584088],[-4.895691],[-3.044886],[3.211825],[-5.737013],[-3.994795],[-7.987649],[7.892661],[7.623387],[-5.432434],[4.710203],[-8.891656],[-1.169626],[0.698628],[-7.475410],[-9.106268],[-3.934445],[5.415146],[8.607694],[-1.568427],[9.482812],[1.672972],[-7.644163],[9.697128],[-2.961785],[-8.009593],[4.794169],[-8.913445],[5.676707],[-3.870128],[6.834381],[7.564642],[8.611835],[-6.288071],[9.393985],[3.718800],[-3.199689],[-0.269890],[0.879421],[-2.924461],[8.998822],[9.617954],[4.451691],[-7.785062],[-4.772770],[8.567419],[5.028995],[2.885164],[5.039105],[0.354273],[2.844853],[5.025651],[4.867705],[-7.225139],[0.271642],[3.529265],[1.472579],[9.381756],[-0.685954],[6.092694],[-0.496736],[9.315796],[7.934115],[0.136820],[-1.972241],[4.963773],[3.305319],[9.889166],[-0.743916],[8.764787],[-6.435155],[-8.436268],[-0.120846],[6.267607],[-4.191819],[9.902545],[0.305170],[-6.737302],[7.478436],[7.873439],[4.601328],[5.126450],[-9.517623],[0.002975],[-6.020287],[-1.870285],[9.589521],[-6.132759],[2.137859],[3.682869],[1.593264],[-4.194089],[5.321327],[6.543022],[-1.135420],[-2.594192],[-2.580460],[-4.802282],[5.807351],[8.709685],[4.833168],[-3.782298],[8.513599],[-7.822096],[-9.124048],[-4.560811],[-2.728954],[-6.405170],[9.112494],[-8.547084],[6.255015],[3.995224],[0.581904],[-7.420996],[-4.576552],[-7.072210],[8.980525],[-4.394986],[-6.992873],[8.460185],[-0.461823],[-5.530305],[6.275221],[-4.026836],[-2.201115],[-7.583078],[-5.952698],[5.863383],[-2.995487],[-5.350172],[-7.232598],[-0.079800],[9.071307],[-8.015513],[3.272085],[6.540064],[6.341981],[-8.548463],[-3.706053],[4.552973],[6.780539],[-2.962945],[-1.655742],[7.229302],[2.347237],[6.512939],[9.454440],[-3.108231],[-6.699681],[-0.227683],[-1.670666],[-8.376490],[3.282208],[-2.538725],[3.780564],[-9.579736],[-0.632316],[-1.145833],[8.323461],[5.509682],[9.111080],[-5.837453],[-3.679951],[-9.363240],[8.834789],[-5.515410],[-4.714733],[9.051097],[0.269748],[1.224887],[4.898856],[5.580015],[2.152579],[-8.810517],[-9.237799],[6.943043],[-1.454858],[-3.908377],[-4.842304],[-1.648742],[5.590258],[-1.923623],[4.136398],[3.074887],[1.794046],[5.293149],[-9.514906],[-1.889445],[3.796979],[-7.611449],[-2.867160],[6.020887],[9.561020],[9.644379],[-5.670949],[5.433462],[-7.130032],[4.845350],[6.127893],[-4.739509],[-0.066384],[-2.709649],[2.679121],[-8.384563],[9.876225],[-1.294455],[-6.161667],[5.114546],[7.408924],[-3.146636],[-0.292669],[8.179909],[3.105845],[-2.654170],[2.036026],[3.734936],[-6.607462],[-3.700438],[5.951327],[-9.461567],[-4.024456],[-5.369796],[5.715006],[-8.481583],[3.494883],[-8.738019],[2.020785],[-2.295675],[2.129578],[1.323418],[-3.619340],[-6.440792],[-4.883156],[-4.106659],[8.255735],[3.517481],[0.877914],[-5.468627],[9.360088],[9.879050],[6.103027],[-8.547373],[8.126929],[2.744619],[6.228334],[6.749694],[-7.902594],[-7.126103],[-7.706365],[-8.570713],[-7.678372],[6.011511],[1.571812],[-0.679034],[7.650190],[7.152999],[0.538795],[5.976429],[6.303678],[0.426667],[2.217604],[-6.325679],[-5.270358],[6.384419],[1.507088],[-5.983266],[6.856888],[6.173018],[-0.329692],[1.616905],[3.305229],[-7.082648],[-5.020725],[9.291815],[6.349440],[-9.447857],[8.013730],[-6.188040],[4.912248],[-8.845520],[7.000162],[-2.428818],[7.188624],[6.573821],[6.340704],[7.213869],[-9.870123],[-9.303995],[5.690208],[-9.514441],[-3.837120],[9.113140],[2.103029],[-7.873038],[6.198508],[3.163815],[1.668378],[1.539234],[6.103660],[-0.501952],[6.270849],[7.679747],[-1.401039],[-2.513678],[8.688996],[-5.945030],[1.063727],[4.923199],[3.101740],[-6.286341],[-6.407896],[3.491659],[2.776740],[-0.922457],[4.990570],[-5.974193],[-8.090705],[-6.096398],[5.466745],[-7.834525],[4.556050],[-9.056511],[3.943504],[2.993387],[0.001130],[1.922452],[8.293191],[-1.701401],[-7.431833],[8.510290],[1.252666],[-9.062215],[2.684340],[-7.041726],[-8.615358],[5.589024],[6.934437],[-8.731357],[1.535533],[6.162260],[3.622895],[8.467573],[7.977206],[-1.233410],[-2.237748],[-2.307595],[4.701482],[-9.178793],[6.941312],[4.605309],[4.563824],[-9.804704],[-6.817767],[2.062862],[-5.155889],[0.001285],[-4.900086],[6.940373],[-8.322670],[6.142735],[9.918594],[-5.737680],[-4.171300],[-9.562447],[-3.351023],[4.493934],[-4.229675],[-8.280485],[4.395780],[6.131784],[9.557516],[4.402786],[2.264153],[0.316590],[-4.775242],[-2.545735],[-3.056294],[-7.413502],[6.113041],[2.015427],[-4.109511],[-0.056780],[-9.929694],[-4.224805],[-8.484296],[4.893984],[-1.864829],[3.203517],[6.943600],[1.450266],[4.954973],[-4.309933],[-4.600011],[0.832682],[7.959564],[1.846224],[2.860832],[-7.742353],[9.631299],[0.223418],[-4.191807],[8.495361],[-4.329495],[-4.419391],[6.271656],[9.208221],[-9.975487],[1.331807],[0.411977],[-0.542106],[1.457555],[-6.117311],[2.717164],[-2.837269],[9.359808],[5.950822],[-9.822067],[-0.550637],[0.950265],[6.956294],[-3.366272],[-0.369558],[-2.601874],[-6.169294],[-2.999312],[-0.878610],[-4.152180],[-5.419196],[7.360206],[-8.904785],[7.149049],[3.182142],[-9.942896],[-3.807163],[-0.738927],[8.500971],[-3.444793],[6.608257],[7.515916],[-9.292298],[0.967776],[3.803292],[-0.769376],[0.569793],[-8.242849],[-6.582369],[1.246475],[6.140129],[-4.535477],[-1.196827],[7.975243],[5.550980],[4.043719],[-8.207948],[-1.768914],[-4.312180],[0.180050],[-3.483230],[7.456479],[-5.144909],[7.037167],[2.555803],[-7.699620],[0.885783],[-6.248381],[8.235786],[8.374588],[-0.801837],[-9.395530],[5.969877],[1.720293],[-3.714851],[1.683246],[-1.724230],[-1.876321],[-0.582353],[-3.742616],[2.563648],[-7.033997],[2.464318],[-1.109595],[7.190914],[6.675738],[-0.100772],[-2.617731],[5.731908],[6.523149],[4.570327],[-5.793088],[9.373828],[-1.348660],[-0.163066],[-6.319399],[8.771420],[-0.716986],[8.151907],[5.549890],[-1.883301],[-1.534117],[-5.657948],[-9.798990],[9.502354],[3.773350],[-0.769084],[-1.526360],[1.682732],[5.765441],[7.082188],[2.867909],[5.467091],[2.573092],[-4.295910],[2.036630],[-8.651927],[9.965184],[-8.394715],[-6.759481],[7.905749],[-8.273171],[4.189188],[2.559153],[6.003483],[-6.310783],[-7.566919],[2.164103],[-8.575155],[1.793469],[-0.031014],[1.633065],[-8.215271],[2.554089],[6.434667],[-6.866444],[-2.099157],[-4.066036],[-1.509913],[-9.022593],[9.668018],[-6.895025],[-8.473986],[5.816005],[5.564679],[4.643357],[7.489469],[-6.913693],[5.267850],[-3.284707],[0.850046],[7.741877],[-9.332980],[4.605284],[6.429357],[-7.103365],[-7.609585],[2.791403],[0.391006],[7.998798]], dtype = "float64")#candidate|2886|(2940, 1)|const|float64
call_2885 = func_2534_call(relay.reshape(const_2886.astype('float64'), [14, 15, 14]))
call_2887 = func_2534_call(relay.reshape(const_2886.astype('float64'), [14, 15, 14]))
output = relay.Tuple([bop_2874,call_2880,const_2881,call_2885,const_2886,])
output2 = relay.Tuple([bop_2874,call_2882,const_2881,call_2887,const_2886,])
func_2890 = relay.Function([var_2872,var_2873,], output)
mod['func_2890'] = func_2890
mod = relay.transform.InferType()(mod)
var_2891 = relay.var("var_2891", dtype = "uint16", shape = ())#candidate|2891|()|var|uint16
var_2892 = relay.var("var_2892", dtype = "uint16", shape = (5, 11, 3))#candidate|2892|(5, 11, 3)|var|uint16
output = func_2890(var_2891,var_2892,)
func_2893 = relay.Function([var_2891,var_2892,], output)
mutated_mod['func_2893'] = func_2893
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3437 = relay.var("var_3437", dtype = "float64", shape = (9, 7, 10))#candidate|3437|(9, 7, 10)|var|float64
uop_3438 = relay.acos(var_3437.astype('float64')) # shape=(9, 7, 10)
output = relay.Tuple([uop_3438,])
output2 = relay.Tuple([uop_3438,])
func_3445 = relay.Function([var_3437,], output)
mod['func_3445'] = func_3445
mod = relay.transform.InferType()(mod)
mutated_mod['func_3445'] = func_3445
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3446 = relay.var("var_3446", dtype = "float64", shape = (9, 7, 10))#candidate|3446|(9, 7, 10)|var|float64
func_3445_call = mutated_mod.get_global_var('func_3445')
call_3447 = func_3445_call(var_3446)
output = call_3447
func_3448 = relay.Function([var_3446], output)
mutated_mod['func_3448'] = func_3448
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3933 = relay.var("var_3933", dtype = "int32", shape = ())#candidate|3933|()|var|int32
const_3934 = relay.const([[[7,-4,-10,10,3,-2,-6,10,3,2,-6,-6]],[[4,10,6,-3,3,6,10,-7,-6,1,3,5]],[[1,-3,4,9,-5,-3,4,4,3,9,7,-10]],[[6,-7,3,6,9,-2,-1,10,-2,7,-1,1]],[[2,-9,7,-6,-3,1,4,1,-1,6,-3,-7]],[[1,9,6,8,-10,-1,-8,-10,-9,-6,-10,-6]]], dtype = "int32")#candidate|3934|(6, 1, 12)|const|int32
bop_3935 = relay.bitwise_and(var_3933.astype('int32'), const_3934.astype('int32')) # shape=(6, 1, 12)
bop_3944 = relay.add(const_3934.astype('uint8'), var_3933.astype('uint8')) # shape=(6, 1, 12)
output = relay.Tuple([bop_3935,bop_3944,])
output2 = relay.Tuple([bop_3935,bop_3944,])
func_3958 = relay.Function([var_3933,], output)
mod['func_3958'] = func_3958
mod = relay.transform.InferType()(mod)
var_3959 = relay.var("var_3959", dtype = "int32", shape = ())#candidate|3959|()|var|int32
output = func_3958(var_3959)
func_3960 = relay.Function([var_3959], output)
mutated_mod['func_3960'] = func_3960
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4250 = relay.var("var_4250", dtype = "bool", shape = (7, 13, 6))#candidate|4250|(7, 13, 6)|var|bool
var_4251 = relay.var("var_4251", dtype = "bool", shape = (7, 13, 6))#candidate|4251|(7, 13, 6)|var|bool
bop_4252 = relay.logical_and(var_4250.astype('bool'), relay.reshape(var_4251.astype('bool'), relay.shape_of(var_4250))) # shape=(7, 13, 6)
bop_4261 = relay.bitwise_and(var_4250.astype('uint64'), relay.reshape(bop_4252.astype('uint64'), relay.shape_of(var_4250))) # shape=(7, 13, 6)
output = relay.Tuple([bop_4261,])
output2 = relay.Tuple([bop_4261,])
func_4270 = relay.Function([var_4250,var_4251,], output)
mod['func_4270'] = func_4270
mod = relay.transform.InferType()(mod)
var_4271 = relay.var("var_4271", dtype = "bool", shape = (7, 13, 6))#candidate|4271|(7, 13, 6)|var|bool
var_4272 = relay.var("var_4272", dtype = "bool", shape = (7, 13, 6))#candidate|4272|(7, 13, 6)|var|bool
output = func_4270(var_4271,var_4272,)
func_4273 = relay.Function([var_4271,var_4272,], output)
mutated_mod['func_4273'] = func_4273
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4304 = relay.var("var_4304", dtype = "int64", shape = ())#candidate|4304|()|var|int64
var_4305 = relay.var("var_4305", dtype = "int64", shape = (8, 1, 5))#candidate|4305|(8, 1, 5)|var|int64
bop_4306 = relay.minimum(var_4304.astype('int64'), var_4305.astype('int64')) # shape=(8, 1, 5)
func_4270_call = mod.get_global_var('func_4270')
func_4273_call = mutated_mod.get_global_var('func_4273')
const_4317 = relay.const([False,False,False,False,False,False,True,True,True,False,True,False,True,True,False,False,True,True,True,True,False,True,False,False,False,False,False,True,False,False,False,False,False,False,False,True,False,False,False,False,False,True,False,False,True,False,False,False,False,True,False,False,False,False,False,True,False,True,False,False,True,True,True,False,True,True,True,False,True,True,False,False,False,False,False,True,True,False,False,True,False,False,True,False,False,True,True,False,False,False,True,False,True,False,False,False,True,True,False,True,False,False,True,False,True,True,False,False,True,False,True,True,False,False,False,False,True,True,False,False,True,True,False,False,True,False,True,True,True,True,False,True,False,True,True,True,False,True,True,True,True,False,True,True,False,True,True,True,False,False,True,False,True,True,False,True,True,True,False,False,True,False,True,True,True,True,False,True,False,True,False,False,True,True,True,True,False,True,False,True,True,False,True,False,True,True,True,True,True,True,True,False,True,True,True,False,False,True,True,False,False,False,False,True,True,False,False,False,True,False,True,False,False,False,False,False,True,False,True,False,True,False,False,True,True,True,True,True,False,True,False,False,True,False,True,False,False,True,False,True,False,True,True,False,True,False,False,True,False,True,True,True,False,False,False,True,True,False,True,False,True,True,False,False,True,False,False,False,True,True,True,True,False,True,False,False,True,False,True,True,False,False,False,False,False,True,True,False,True,False,False,False,True,False,False,True,False,False,True,False,True,False,True,False,True,True,False,False,False,True,True,False,True,False,False,False,True,True,False,False,False,False,False,True,False,False,False,True,False,True,True,False,False,False,False,True,False,False,False,False,True,True,False,False,True,False,False,False,True,False,False,True,False,False,True,True,False,True,False,True,True,True,True,True,True,True,False,True,True,False,True,False,False,True,False,True,True,True,False,True,True,False,False,False,True,True,True,True,True,True,False,False,False,True,True,True,False,True,True,True,False,False,True,False,False,False,True,True,True,True,False,False,False,True,False,True,False,True,False,True,False,True,True,False,False,False,False,True,False,True,False,False,True,False,False,True,False,True,True,True,True,True,True,True,False,False,False,True,True,False,False,False,True,False,False,False,False,False,True,False,True,True,False,True,True,False,False,True,False,True,False,True,True,False,False,True,False,False,False,True,False,True,True,False,True,False,False,True,False,True,False,False,False,False,True,False,True,True,True,True,True,False,False,False,False,False,True,False,False,False,True,False,True,True,False,False,True,False,True,True,True,True,True,False,False,False,False,True,False,True,False,True,True,False,True,True,False,False,True,False,False,True,False,True,False,True], dtype = "bool")#candidate|4317|(546,)|const|bool
call_4316 = relay.TupleGetItem(func_4270_call(relay.reshape(const_4317.astype('bool'), [7, 13, 6]), relay.reshape(const_4317.astype('bool'), [7, 13, 6]), ), 0)
call_4318 = relay.TupleGetItem(func_4273_call(relay.reshape(const_4317.astype('bool'), [7, 13, 6]), relay.reshape(const_4317.astype('bool'), [7, 13, 6]), ), 0)
output = relay.Tuple([bop_4306,call_4316,const_4317,])
output2 = relay.Tuple([bop_4306,call_4318,const_4317,])
func_4319 = relay.Function([var_4304,var_4305,], output)
mod['func_4319'] = func_4319
mod = relay.transform.InferType()(mod)
var_4320 = relay.var("var_4320", dtype = "int64", shape = ())#candidate|4320|()|var|int64
var_4321 = relay.var("var_4321", dtype = "int64", shape = (8, 1, 5))#candidate|4321|(8, 1, 5)|var|int64
output = func_4319(var_4320,var_4321,)
func_4322 = relay.Function([var_4320,var_4321,], output)
mutated_mod['func_4322'] = func_4322
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4410 = relay.var("var_4410", dtype = "float64", shape = (2, 1, 4))#candidate|4410|(2, 1, 4)|var|float64
uop_4411 = relay.atan(var_4410.astype('float64')) # shape=(2, 1, 4)
func_2096_call = mod.get_global_var('func_2096')
func_2099_call = mutated_mod.get_global_var('func_2099')
var_4419 = relay.var("var_4419", dtype = "uint64", shape = ())#candidate|4419|()|var|uint64
var_4420 = relay.var("var_4420", dtype = "uint64", shape = (448,))#candidate|4420|(448,)|var|uint64
call_4418 = func_2096_call(relay.reshape(var_4419.astype('uint64'), []), relay.reshape(var_4420.astype('uint64'), [7, 4, 16]), )
call_4421 = func_2096_call(relay.reshape(var_4419.astype('uint64'), []), relay.reshape(var_4420.astype('uint64'), [7, 4, 16]), )
output = relay.Tuple([uop_4411,call_4418,var_4419,var_4420,])
output2 = relay.Tuple([uop_4411,call_4421,var_4419,var_4420,])
func_4427 = relay.Function([var_4410,var_4419,var_4420,], output)
mod['func_4427'] = func_4427
mod = relay.transform.InferType()(mod)
var_4428 = relay.var("var_4428", dtype = "float64", shape = (2, 1, 4))#candidate|4428|(2, 1, 4)|var|float64
var_4429 = relay.var("var_4429", dtype = "uint64", shape = ())#candidate|4429|()|var|uint64
var_4430 = relay.var("var_4430", dtype = "uint64", shape = (448,))#candidate|4430|(448,)|var|uint64
output = func_4427(var_4428,var_4429,var_4430,)
func_4431 = relay.Function([var_4428,var_4429,var_4430,], output)
mutated_mod['func_4431'] = func_4431
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4896 = relay.var("var_4896", dtype = "int8", shape = (2, 9, 10))#candidate|4896|(2, 9, 10)|var|int8
var_4897 = relay.var("var_4897", dtype = "int8", shape = (2, 9, 10))#candidate|4897|(2, 9, 10)|var|int8
bop_4898 = relay.bitwise_xor(var_4896.astype('int8'), relay.reshape(var_4897.astype('int8'), relay.shape_of(var_4896))) # shape=(2, 9, 10)
output = relay.Tuple([bop_4898,])
output2 = relay.Tuple([bop_4898,])
func_4904 = relay.Function([var_4896,var_4897,], output)
mod['func_4904'] = func_4904
mod = relay.transform.InferType()(mod)
mutated_mod['func_4904'] = func_4904
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4904_call = mutated_mod.get_global_var('func_4904')
var_4906 = relay.var("var_4906", dtype = "int8", shape = (2, 9, 10))#candidate|4906|(2, 9, 10)|var|int8
var_4907 = relay.var("var_4907", dtype = "int8", shape = (2, 9, 10))#candidate|4907|(2, 9, 10)|var|int8
call_4905 = func_4904_call(var_4906,var_4907,)
output = call_4905
func_4908 = relay.Function([var_4906,var_4907,], output)
mutated_mod['func_4908'] = func_4908
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5702 = relay.const(10, dtype = "uint16")#candidate|5702|()|const|uint16
var_5703 = relay.var("var_5703", dtype = "uint16", shape = (1, 1, 11))#candidate|5703|(1, 1, 11)|var|uint16
bop_5704 = relay.bitwise_or(const_5702.astype('uint16'), var_5703.astype('uint16')) # shape=(1, 1, 11)
uop_5715 = relay.atan(bop_5704.astype('float32')) # shape=(1, 1, 11)
func_3958_call = mod.get_global_var('func_3958')
func_3960_call = mutated_mod.get_global_var('func_3960')
call_5717 = relay.TupleGetItem(func_3958_call(relay.reshape(const_5702.astype('int32'), [])), 1)
call_5718 = relay.TupleGetItem(func_3960_call(relay.reshape(const_5702.astype('int32'), [])), 1)
uop_5719 = relay.exp(uop_5715.astype('float32')) # shape=(1, 1, 11)
output = relay.Tuple([call_5717,uop_5719,])
output2 = relay.Tuple([call_5718,uop_5719,])
func_5723 = relay.Function([var_5703,], output)
mod['func_5723'] = func_5723
mod = relay.transform.InferType()(mod)
var_5724 = relay.var("var_5724", dtype = "uint16", shape = (1, 1, 11))#candidate|5724|(1, 1, 11)|var|uint16
output = func_5723(var_5724)
func_5725 = relay.Function([var_5724], output)
mutated_mod['func_5725'] = func_5725
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6075 = relay.var("var_6075", dtype = "float32", shape = (7, 3, 15))#candidate|6075|(7, 3, 15)|var|float32
uop_6076 = relay.tan(var_6075.astype('float32')) # shape=(7, 3, 15)
output = uop_6076
output2 = uop_6076
func_6097 = relay.Function([var_6075,], output)
mod['func_6097'] = func_6097
mod = relay.transform.InferType()(mod)
var_6098 = relay.var("var_6098", dtype = "float32", shape = (7, 3, 15))#candidate|6098|(7, 3, 15)|var|float32
output = func_6097(var_6098)
func_6099 = relay.Function([var_6098], output)
mutated_mod['func_6099'] = func_6099
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6489 = relay.const([[[-8,-10,2,9,8,5,2,-4,-9,4,5,5,-3],[8,7,2,2,-10,-9,-2,-2,-4,-4,-3,-5,-6],[-5,6,10,-4,7,4,-9,4,5,7,-10,10,-9],[-8,-1,5,-5,-8,6,2,1,3,-10,7,10,3]],[[-9,7,-7,2,-9,-8,9,9,-1,1,9,-9,8],[6,-4,-9,1,10,-10,8,1,-4,-3,8,-8,-3],[10,7,9,-7,4,7,1,-3,-10,-10,8,-3,-9],[-2,-9,-5,6,6,-7,2,8,-7,7,-10,3,-9]],[[-4,-10,1,-3,7,-9,1,-2,-8,-10,-2,-5,-8],[-7,5,-2,6,5,5,8,-3,9,-2,-2,3,-1],[10,-5,3,1,-6,8,-8,9,-8,-7,4,6,-5],[10,-2,-5,7,3,2,7,-9,-9,-5,-2,5,-5]]], dtype = "int32")#candidate|6489|(3, 4, 13)|const|int32
const_6490 = relay.const([[[10,1,-8,-3,-4,-4,-10,-5,10,4,-4,1,-3],[9,10,10,-7,-10,-1,-3,-7,-10,-1,-1,1,-6],[-8,-6,-1,-5,-4,-1,-5,-8,-3,1,-10,-8,-10],[-4,6,3,-9,7,5,1,8,-10,4,-1,-1,-10]],[[5,-3,-8,-3,9,10,-6,7,2,1,-3,-7,1],[5,-8,4,-4,-8,4,-9,-7,8,-10,7,7,4],[-8,-7,8,-2,9,-2,1,-5,9,-7,-5,-4,-1],[8,6,8,-4,-5,-6,-1,-1,8,-10,8,-7,8]],[[1,8,2,10,10,3,4,8,-3,7,-9,9,-7],[9,-3,7,-10,5,-5,-9,4,10,-8,-8,-7,-8],[-9,8,-5,10,-5,-1,6,-6,-1,-5,-6,3,-5],[-8,7,1,-4,-9,-5,6,-8,6,1,4,-6,8]]], dtype = "int32")#candidate|6490|(3, 4, 13)|const|int32
bop_6491 = relay.maximum(const_6489.astype('int32'), relay.reshape(const_6490.astype('int32'), relay.shape_of(const_6489))) # shape=(3, 4, 13)
func_2534_call = mod.get_global_var('func_2534')
func_2536_call = mutated_mod.get_global_var('func_2536')
var_6504 = relay.var("var_6504", dtype = "float64", shape = (2940,))#candidate|6504|(2940,)|var|float64
call_6503 = func_2534_call(relay.reshape(var_6504.astype('float64'), [14, 15, 14]))
call_6505 = func_2534_call(relay.reshape(var_6504.astype('float64'), [14, 15, 14]))
func_2534_call = mod.get_global_var('func_2534')
func_2536_call = mutated_mod.get_global_var('func_2536')
call_6510 = func_2534_call(relay.reshape(call_6503.astype('float64'), [14, 15, 14]))
call_6511 = func_2534_call(relay.reshape(call_6503.astype('float64'), [14, 15, 14]))
output = relay.Tuple([bop_6491,call_6503,var_6504,call_6510,])
output2 = relay.Tuple([bop_6491,call_6505,var_6504,call_6511,])
func_6512 = relay.Function([var_6504,], output)
mod['func_6512'] = func_6512
mod = relay.transform.InferType()(mod)
mutated_mod['func_6512'] = func_6512
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6513 = relay.var("var_6513", dtype = "float64", shape = (2940,))#candidate|6513|(2940,)|var|float64
func_6512_call = mutated_mod.get_global_var('func_6512')
call_6514 = func_6512_call(var_6513)
output = call_6514
func_6515 = relay.Function([var_6513], output)
mutated_mod['func_6515'] = func_6515
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7074 = relay.var("var_7074", dtype = "int8", shape = (16, 13, 2))#candidate|7074|(16, 13, 2)|var|int8
const_7075 = relay.const([[[-5,5],[-8,-10],[-3,-3],[1,-1],[-6,-6],[-2,2],[8,-6],[7,10],[3,-1],[-2,-3],[-7,5],[6,4],[2,2]],[[8,9],[10,-6],[-9,10],[4,5],[2,3],[4,7],[6,4],[5,4],[-2,1],[10,8],[6,3],[9,5],[6,1]],[[6,2],[3,-1],[-1,-2],[-10,4],[2,1],[-10,-5],[-2,10],[-8,2],[3,5],[-9,4],[1,-5],[-1,-3],[1,-9]],[[10,-7],[6,-2],[10,-8],[7,9],[-2,-8],[-1,6],[-1,2],[-2,-2],[7,-5],[-1,-9],[1,4],[-1,-6],[7,5]],[[-8,-9],[9,3],[-4,-2],[-6,-6],[-3,8],[2,-4],[8,-7],[-5,-3],[3,-1],[3,4],[9,-10],[4,-4],[1,-3]],[[-5,-6],[-8,-7],[7,-3],[2,-5],[-6,-2],[-4,1],[-8,-4],[-6,-2],[5,-5],[-10,5],[2,10],[-2,1],[-1,-4]],[[-5,4],[10,2],[7,9],[1,9],[8,-1],[-2,6],[-3,5],[-10,-2],[3,-2],[-5,1],[8,6],[-5,5],[8,4]],[[6,-5],[7,-4],[8,3],[3,6],[-2,10],[6,1],[10,5],[-1,-8],[-6,-5],[-5,-1],[-8,-6],[-2,7],[-1,3]],[[-10,9],[2,7],[-2,10],[2,-3],[8,-1],[8,5],[4,-5],[-8,2],[-5,-9],[-4,10],[-5,-4],[-10,5],[-10,-4]],[[8,2],[3,4],[-6,-1],[-7,7],[9,9],[-2,1],[1,9],[4,2],[3,3],[1,-7],[-4,-7],[-9,4],[6,3]],[[6,9],[2,9],[-1,10],[-6,2],[-10,4],[9,7],[-8,7],[-4,-9],[6,6],[-7,-4],[7,-2],[6,-10],[-5,2]],[[-8,2],[-10,7],[1,2],[5,5],[-6,-10],[-4,-8],[8,-7],[-4,7],[-8,5],[9,-1],[9,10],[-3,8],[6,2]],[[2,-10],[-8,1],[6,2],[-8,3],[1,2],[5,-6],[8,8],[3,4],[10,4],[-1,-9],[-5,-2],[-10,-2],[6,2]],[[5,4],[3,-7],[-3,-4],[3,10],[6,-2],[2,6],[8,4],[-2,-9],[-4,2],[4,8],[10,-8],[-9,-8],[10,6]],[[5,-4],[1,-9],[4,-2],[9,-10],[5,10],[-7,8],[-9,-2],[8,10],[1,-6],[-4,5],[-1,6],[5,4],[-3,3]],[[3,7],[2,2],[9,-3],[8,3],[2,-9],[9,4],[-3,-1],[-3,6],[10,9],[-5,1],[-4,6],[-2,5],[-9,9]]], dtype = "int8")#candidate|7075|(16, 13, 2)|const|int8
bop_7076 = relay.less_equal(var_7074.astype('bool'), relay.reshape(const_7075.astype('bool'), relay.shape_of(var_7074))) # shape=(16, 13, 2)
func_3958_call = mod.get_global_var('func_3958')
func_3960_call = mutated_mod.get_global_var('func_3960')
const_7082 = relay.const(9, dtype = "int32")#candidate|7082|()|const|int32
call_7081 = relay.TupleGetItem(func_3958_call(relay.reshape(const_7082.astype('int32'), [])), 0)
call_7083 = relay.TupleGetItem(func_3960_call(relay.reshape(const_7082.astype('int32'), [])), 0)
bop_7092 = relay.logical_or(const_7082.astype('bool'), bop_7076.astype('bool')) # shape=(16, 13, 2)
func_4270_call = mod.get_global_var('func_4270')
func_4273_call = mutated_mod.get_global_var('func_4273')
const_7102 = relay.const([False,True,False,False,False,True,True,False,True,False,True,True,False,True,True,False,True,False,True,False,True,False,False,False,True,False,True,True,False,True,True,False,False,False,False,False,True,True,False,False,True,False,False,False,True,True,False,True,True,False,True,False,False,True,False,False,True,True,True,True,True,False,True,True,False,True,False,True,True,False,False,False,False,False,False,False,True,True,True,False,True,False,False,True,True,True,True,False,False,False,True,True,True,False,True,True,True,True,True,False,True,True,True,False,True,True,False,False,False,True,False,True,True,False,True,False,True,False,False,False,True,True,True,False,True,False,True,False,True,False,True,True,True,False,True,False,True,True,False,False,False,False,True,True,True,False,True,False,True,True,False,False,False,False,False,True,False,True,True,False,False,False,True,True,False,False,False,False,True,False,False,True,True,True,False,False,False,True,False,True,False,True,True,False,True,True,True,True,False,False,True,False,True,False,False,True,False,False,True,True,False,True,False,True,True,False,True,True,True,False,False,True,True,True,True,False,False,False,True,False,True,True,True,False,True,True,True,False,True,True,True,True,False,False,True,True,False,False,False,False,False,False,True,True,True,True,True,True,True,True,False,False,False,True,False,True,False,False,True,True,True,True,False,True,True,True,True,True,False,True,True,False,False,True,False,True,False,True,True,True,False,True,False,False,False,False,False,False,False,True,True,True,False,True,True,True,True,False,True,True,True,False,True,True,True,True,True,True,True,False,True,True,True,True,False,True,True,False,True,False,True,False,True,False,True,False,True,False,False,False,True,False,True,True,True,False,False,False,False,True,False,True,True,True,False,True,False,True,True,True,True,False,True,True,False,True,True,False,True,False,False,True,False,True,False,True,False,False,False,False,False,False,True,True,False,True,False,False,False,True,False,False,True,True,True,False,False,False,False,False,False,False,True,False,False,True,False,False,True,False,False,True,False,True,False,False,False,False,True,False,True,True,False,True,False,True,True,True,False,True,True,False,True,False,True,True,True,True,True,False,True,True,False,True,False,False,False,False,True,True,True,False,False,True,True,False,True,False,True,True,True,False,True,True,False,False,False,True,True,False,False,False,True,False,False,False,False,False,False,True,True,True,False,True,True,True,True,False,False,True,True,True,True,False,False,False,True,True,True,False,True,True,True,False,True,True,False,False,True,True,True,False,False,True,True,True,True,False,True,True,True,False,False,True,True,True,True,False,False,False,False,True,False,True,True,True,False,False,True,True,True,True,True,True,False,False,True,True,True,False,False,False,True,True,True,False], dtype = "bool")#candidate|7102|(546,)|const|bool
call_7101 = relay.TupleGetItem(func_4270_call(relay.reshape(const_7102.astype('bool'), [7, 13, 6]), relay.reshape(const_7102.astype('bool'), [7, 13, 6]), ), 0)
call_7103 = relay.TupleGetItem(func_4273_call(relay.reshape(const_7102.astype('bool'), [7, 13, 6]), relay.reshape(const_7102.astype('bool'), [7, 13, 6]), ), 0)
output = relay.Tuple([call_7081,bop_7092,call_7101,const_7102,])
output2 = relay.Tuple([call_7083,bop_7092,call_7103,const_7102,])
func_7107 = relay.Function([var_7074,], output)
mod['func_7107'] = func_7107
mod = relay.transform.InferType()(mod)
var_7108 = relay.var("var_7108", dtype = "int8", shape = (16, 13, 2))#candidate|7108|(16, 13, 2)|var|int8
output = func_7107(var_7108)
func_7109 = relay.Function([var_7108], output)
mutated_mod['func_7109'] = func_7109
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7190 = relay.var("var_7190", dtype = "float32", shape = (10, 9, 15))#candidate|7190|(10, 9, 15)|var|float32
const_7191 = relay.const([[[-6.285758,0.266229,-4.213893,-8.206779,-4.458219,-2.877499,-1.231321,8.434120,-5.614623,-6.160740,3.115261,3.498189,4.691865,-0.680507,6.238790],[-1.305046,-3.823042,6.898864,-3.060567,-0.255519,2.241384,8.905755,-1.718142,-1.051559,4.119436,-0.230151,9.724959,5.169278,-0.487988,4.612490],[1.933230,2.440619,7.943538,9.969303,-0.923868,-8.637291,-4.703042,-7.126365,-4.761395,-3.310024,8.260685,-5.945631,-5.753623,6.539483,6.853936],[-7.991804,-0.139477,-4.918417,8.309568,7.476586,-0.504793,3.346493,-0.261428,0.204058,-4.089593,-5.138662,-1.920535,3.297195,-5.879745,-7.232015],[0.380265,6.870598,-5.739103,0.286983,7.433644,-8.513929,1.385495,-7.543106,2.691853,-6.227890,3.925833,2.167456,-8.157661,8.753195,0.429558],[-7.285641,-7.601220,-4.550763,-8.560796,-5.841821,-4.722219,6.642873,-7.520606,7.153419,4.229236,-9.242525,-4.003810,3.902489,-2.616406,-1.942445],[-9.049876,-4.816771,-8.452136,2.721504,-4.034471,-4.708388,-1.072355,-6.470569,1.915154,-4.861165,-7.434826,-1.287321,-2.498289,5.874599,-9.274125],[-1.531599,-8.033818,4.087372,7.830187,9.122967,9.266476,8.112429,7.113662,-1.702145,8.344932,-8.283567,1.689407,2.762711,-6.453799,-5.062148],[-9.356479,5.770515,5.986393,6.512000,2.164232,5.145173,-0.238813,4.773111,-8.289825,-9.747056,-6.411590,8.875739,0.475777,-3.256913,9.954045]],[[-0.565743,8.434953,8.904691,5.590036,-0.856698,8.220183,8.272093,-4.329656,-8.930724,-1.529606,-6.457936,7.086786,1.674106,-4.652757,-6.351830],[-2.850939,5.382452,-7.735491,0.153490,5.034881,-5.026504,9.169442,-1.975924,-0.822204,-2.463441,-7.706173,-7.413216,7.915684,-2.302433,2.728299],[6.460275,-8.974414,5.343614,4.222623,-5.877514,-8.894924,-1.747758,-4.952069,5.280306,6.341953,3.492225,9.726213,1.810940,6.223564,-9.443065],[-1.343810,9.550541,4.045766,9.975566,9.385287,4.118609,-1.777571,2.137770,3.065796,-9.830899,-9.402697,-0.946299,4.193873,-1.840828,5.959103],[0.556269,1.010729,-7.211929,0.196483,1.489569,6.703432,2.158257,-9.031774,-8.610915,7.416880,-9.862700,8.255296,8.234695,-7.286352,9.089474],[7.397201,3.657811,2.405551,2.381010,6.641109,5.048861,1.520729,2.623662,4.058032,7.299076,-0.198602,1.624258,-3.578830,-9.592976,-1.270488],[0.018965,-2.734701,-8.097431,-1.077879,-9.943286,9.253370,2.334536,-8.266365,-0.219774,-8.245329,8.263465,-4.299600,-2.238015,4.871063,7.023843],[8.674108,4.612456,-9.843218,6.990803,0.840242,-7.107311,-9.575017,-3.839492,-2.636266,-5.580419,-5.736275,8.959789,-8.838138,-6.555661,-6.418456],[-5.320950,-1.782940,4.913868,0.392033,4.228713,1.907276,5.573340,2.430791,-1.978379,0.854804,7.929244,-0.318534,-2.907589,-9.450306,9.930439]],[[-1.837705,-7.629589,1.739991,6.833603,4.268447,-9.709448,0.319320,-5.818879,2.944743,-7.003934,9.658885,-5.924910,5.296144,5.964745,2.298987],[-3.088347,-0.978033,-2.474719,6.913074,-3.977269,2.391661,4.793022,9.236057,8.105736,-5.053726,4.726908,1.516897,-7.999928,-3.034417,4.151798],[-8.085135,3.568918,-2.165057,-9.757599,-4.888610,-8.584974,3.816568,-0.266965,2.644891,2.751638,8.644629,-6.073277,1.637380,0.241345,-0.852340],[1.592084,5.567246,8.629144,9.535903,6.788257,-7.493111,5.124632,5.323246,-7.647523,3.570774,-6.296788,-0.758968,-1.707150,6.933549,5.099140],[-3.818077,-0.751172,-8.218659,0.077808,-6.552245,2.035894,2.328337,-5.704766,-7.574967,4.782403,4.578435,-6.948362,-9.126338,3.192148,5.456812],[3.030571,5.521988,5.321978,3.555196,6.928932,6.753250,6.027745,3.460758,0.849605,-7.119363,-5.168493,-3.449392,-7.098243,9.631193,8.120884],[-4.432241,-0.793437,-2.869739,2.864259,-3.495018,3.721195,8.649443,-2.762948,7.776483,-4.341600,6.856095,9.313921,-6.841061,-3.085984,0.294778],[-8.060344,4.130064,3.154640,-8.299819,5.104717,-0.699446,-8.639387,9.887618,-2.697579,-6.730749,7.217381,6.270902,2.065735,-7.100501,1.852298],[5.682606,6.414560,-5.218125,0.670868,-7.045222,-9.424036,5.942658,-3.198744,2.590852,3.769722,-0.887526,9.376825,1.208995,5.407366,1.616010]],[[7.759214,-3.317481,8.748578,-7.305626,1.658628,3.496943,2.345663,-7.863728,-7.818733,-6.019414,7.246317,-2.400444,0.112004,7.363602,8.573010],[5.984769,-4.895645,4.849164,6.016716,-2.707159,-7.211996,-5.634094,-6.049249,-0.569921,-4.366257,9.842583,1.889762,3.745553,7.332233,2.628229],[5.141178,-8.988273,-0.082599,5.179071,2.927906,-1.778831,3.334787,9.250671,7.842496,-5.024556,-3.359675,7.595275,8.580404,-4.733208,1.541329],[4.247072,8.887108,-4.520881,-1.940128,3.121840,2.110871,1.465215,-0.355798,2.460753,-1.122537,1.839615,7.685031,-8.726106,6.143205,9.661487],[-5.986245,7.586888,-9.194136,5.898220,5.006373,-5.089707,-4.789138,-5.307740,-4.481345,-3.962125,7.513062,-8.068491,-1.822107,-1.505144,2.135862],[6.697522,-1.929852,1.011009,-7.448038,7.425391,5.243792,9.174123,-5.916115,-7.034416,1.381442,5.141532,0.655411,0.049589,6.694400,6.196143],[4.231363,-7.292985,-5.535186,4.642654,7.397462,-5.049010,-5.184471,-4.621136,6.909963,-2.816488,-4.852983,-8.704184,4.389934,7.267278,5.554906],[9.207979,3.514150,-4.775697,-2.910445,9.524046,6.244577,-8.702737,3.296976,-3.994925,-5.350289,6.973528,-6.557752,-2.318477,1.791886,-5.994625],[-6.091989,5.820025,-5.578485,1.015379,6.231620,-0.044046,2.253475,3.202115,9.570779,9.991055,-3.227526,-4.507809,-9.275843,-6.227905,7.663773]],[[-3.131528,-9.024915,7.634129,-8.088314,1.868928,6.987740,-6.525228,3.453822,6.264616,7.473371,-6.145442,7.060104,-1.308572,5.774230,1.052122],[-9.899112,-0.681812,-0.359458,7.901786,5.918892,-4.693670,-7.618244,9.187835,-8.452663,-3.261154,9.475447,4.786994,-7.592547,9.579465,-1.623881],[-2.387750,-3.446703,-6.245991,-0.374192,1.619224,-3.576028,3.111998,-6.889598,-8.829782,4.510226,-0.894521,7.520831,-2.217170,-4.936733,6.398899],[-2.059132,6.827129,0.519740,2.126239,7.594878,4.505931,3.567503,-9.838110,9.834478,-8.165396,6.036352,1.349140,6.633889,-1.140299,2.411454],[-0.285696,9.954243,6.892285,2.847912,7.576798,4.672365,5.920009,6.628670,5.542372,-1.183604,4.351434,-9.195142,3.427113,-2.299499,3.767424],[7.923078,-4.932486,6.075477,3.158329,-1.922072,0.293847,7.072161,-5.509255,-0.377665,5.766799,-7.994479,3.205940,-1.985189,-4.375001,-9.179374],[-6.491308,9.021865,1.440482,-4.355692,-1.990031,2.011497,0.473364,-4.258125,1.717438,8.396739,2.187341,0.022729,-5.686331,5.230166,0.243526],[2.846572,-3.922163,-4.922666,9.815747,-6.138267,0.493263,-2.475004,0.696785,6.937830,3.905422,1.153633,-6.194847,0.827677,-9.271634,8.428689],[7.047362,-0.014980,9.456805,8.250853,7.824889,-5.222439,3.296804,8.744813,5.810281,0.106812,4.342779,-9.373969,6.130949,8.153330,-8.076417]],[[6.506452,9.871918,8.743680,-1.803403,4.422176,0.099974,8.192397,-5.280325,1.853960,7.751484,7.962007,7.279450,-1.004824,5.405882,5.955287],[-3.758713,5.047317,-4.771264,-7.128185,2.490472,-0.183300,-8.670662,2.518745,0.175192,-8.875453,3.804544,1.948545,6.647411,-0.176945,9.725188],[2.320722,-8.697254,6.547062,2.250208,-7.783022,-5.177689,5.057212,-7.925406,4.081923,9.984460,-5.567462,0.860112,-9.011983,0.203912,-1.150640],[-0.383621,-7.531597,-9.507844,9.856652,4.042313,7.427451,-2.549176,-1.893371,9.174215,-6.962777,-3.425999,-7.365557,3.234621,-1.791979,3.020990],[4.254943,-8.689031,-4.717436,-1.238542,7.653162,2.483832,6.596603,0.875527,-1.914873,7.456189,-9.039907,0.857905,-2.497151,5.841120,9.491383],[6.407585,-4.481494,-6.374866,-7.574894,-1.936205,8.847167,-6.592916,2.275083,-6.650902,4.397420,3.951597,6.081122,-2.726198,2.507470,6.352546],[-2.581544,0.877829,-5.599116,4.616996,-6.055545,-5.501543,-9.667536,-9.077229,0.847973,5.364214,3.710725,-9.960745,-1.399574,-7.975213,-0.389192],[-4.391544,-7.966386,8.144646,-6.827021,5.123848,-6.254048,-1.318821,9.036519,-0.797594,1.238254,2.326463,-4.963136,-8.323761,-3.959406,-1.764242],[-1.636067,4.578091,0.412082,8.167438,5.781585,-4.681244,5.485968,-2.841851,-5.998443,8.793728,5.783687,-7.523521,-6.501692,-8.973743,6.107160]],[[5.258685,8.956873,-6.456909,1.772762,-5.750695,-2.634816,-4.528319,8.411462,-2.348219,3.511355,-5.954276,-9.497939,2.191656,4.729104,7.347918],[-9.976795,-1.856086,8.164852,-0.443167,-9.723510,-8.596212,-0.474195,-1.268469,8.863437,2.655031,-3.643005,0.342964,-6.587503,2.330744,-1.949313],[-3.624235,8.493781,9.634792,2.455395,2.100793,-7.876479,-8.509937,-2.186186,7.719161,-3.063599,4.043151,-7.077394,9.472283,4.419703,-5.099137],[-3.415255,-8.822045,5.683425,-2.561399,-4.835233,-0.451506,7.281670,0.936686,-4.841071,-5.033964,8.176045,1.542077,-6.296516,-4.007751,-2.954286],[-1.826077,1.810669,-7.770343,-0.318020,3.795139,1.062156,6.593266,-1.251377,-3.876625,6.752728,5.866915,-2.332776,-6.446164,-0.628553,-7.225070],[2.849032,8.037834,-9.299089,6.798367,-1.566798,7.078417,4.725413,7.497670,9.174258,-0.527845,-9.281407,5.767372,-9.076381,5.323403,-4.181229],[0.997343,-0.923982,-2.278431,0.182633,0.851739,-1.782615,3.002108,-6.206024,1.633479,-5.647817,-8.745117,-9.525975,-3.121341,-9.185280,2.582791],[3.632398,-1.157924,3.970625,-8.527816,9.182637,-3.159117,-4.728841,5.043463,-8.138778,-3.495701,-5.626316,2.175853,-0.727830,2.495904,-2.488265],[9.540918,-9.142856,0.930335,-5.487475,-4.268046,-9.601126,5.595035,-7.738750,2.034036,-3.544088,6.443144,-8.180895,6.528187,-3.403197,7.968835]],[[2.043431,9.952168,8.569861,8.878342,-4.875975,1.666644,-7.687474,-9.790378,0.765624,-3.530725,5.773166,-3.252377,-7.529147,4.520010,-9.625142],[2.166917,9.112126,2.449968,-3.667513,5.330977,-1.401975,9.085689,0.391477,2.572181,4.073294,-9.656053,-8.841327,-5.865982,-3.007951,8.915676],[1.174432,-2.598910,3.814477,6.040402,-0.048083,8.158605,6.469872,-5.909290,-0.169861,2.159872,8.363394,-3.258944,-9.332289,-3.458959,-7.955097],[7.050632,1.474947,1.856045,-2.773808,-5.884096,1.710370,1.339894,-7.424471,5.211946,-9.923678,-8.365916,1.298627,1.534136,2.374699,-2.591884],[3.649361,4.608650,-3.835778,-4.378125,8.309768,3.547076,-8.832995,4.776309,-7.006786,6.842585,5.446356,-8.063509,-9.910536,-5.037477,-7.453948],[-4.589803,4.712728,-2.148166,-1.441364,-0.675565,4.735789,-9.481307,-5.376074,-8.315068,-1.235744,1.837505,1.087703,-7.763005,6.251381,0.949859],[-1.084564,-6.690416,-5.164267,1.140373,1.683916,-8.530492,1.278566,-5.929634,2.510200,4.440023,-7.826780,7.545877,-1.032536,3.218212,5.409880],[3.531317,-9.956332,9.015652,-2.346377,0.144020,-6.854131,-1.454831,-9.280357,6.919067,2.398947,-7.109359,-2.088124,5.636159,1.425732,-6.874685],[-7.040320,-4.489158,4.712101,9.342750,-6.997551,1.336326,-2.613987,4.711180,-1.175610,-1.471973,9.375680,3.367755,6.467771,-8.025372,-3.019468]],[[6.032073,7.508504,9.518056,2.978422,-4.040485,-7.082770,-8.751200,-5.934703,1.620993,-0.811357,-4.004756,-8.252742,8.004488,6.652017,4.217122],[3.426116,-6.461086,-8.161309,4.433277,-8.655508,-0.362354,-5.741881,2.607854,-6.797925,2.333360,9.803621,-4.948321,-4.651637,3.091107,3.061042],[6.499150,1.382746,5.387952,8.838394,1.415985,9.294921,-1.246207,-5.663644,-5.213493,9.610831,8.894130,1.421797,-7.184547,-0.239322,9.313686],[-1.538747,-1.220121,-9.627729,-7.483962,-7.598811,2.254189,0.687330,0.610130,-1.771495,-8.762474,-1.643514,-5.151379,7.549077,0.817114,-7.706741],[8.027636,4.947725,-0.035798,-0.589516,0.029956,-0.493472,-0.261246,1.637574,0.830650,3.656795,2.919723,6.141024,8.701426,-7.542614,-5.954263],[-4.235831,-0.660957,5.157238,7.257548,2.413596,1.742478,-6.101905,1.574816,8.913775,6.509320,-2.584159,-0.456498,-7.091503,-1.515669,-7.906489],[6.989407,-4.814661,-8.861764,-9.617946,5.046446,3.745028,4.929926,-1.521190,7.976649,6.740284,-8.732947,8.456662,4.573061,2.825061,-2.630916],[8.061409,-3.193384,9.209477,7.143988,-9.531802,2.130729,4.467094,8.939482,4.869453,-2.003096,0.542926,-7.600041,5.139883,-0.341337,6.715541],[7.290851,-0.623824,2.725571,-7.439001,5.913770,7.627666,-4.401630,7.377438,4.935138,-8.668313,6.444966,-5.914320,-3.199765,-5.911730,-6.520259]],[[-7.325681,-7.135598,3.720657,-8.863282,-5.959730,1.053724,6.121829,8.521277,1.611490,6.912463,-8.737952,-7.621129,5.091208,-5.758470,9.810851],[7.387132,-5.963717,4.555671,2.832591,-2.127674,9.239004,-9.933459,3.404193,-0.179360,-2.002577,7.043973,-5.220628,8.255394,-4.205166,9.144471],[9.150056,7.079434,-8.964048,7.750526,7.711083,-6.015868,7.629518,6.770378,-0.538916,-7.246444,9.752487,7.129951,6.157396,2.270825,-6.306883],[7.142884,-0.796258,-4.450982,6.579355,-4.340641,4.319860,-3.644384,8.377958,0.160931,6.054127,-7.439299,5.507862,-0.655365,6.859329,6.501408],[6.656603,0.622922,4.117020,-8.903630,4.179857,4.932494,2.286435,-0.958778,2.152268,-5.163871,4.616328,-7.640455,-1.548185,4.888034,-9.435684],[-0.149035,3.320837,6.554716,0.130890,-5.562379,0.287530,2.252401,8.135145,8.317567,4.234886,9.018061,7.479694,-1.466716,-4.232217,2.644163],[-2.008556,-9.871860,9.434402,-3.438041,-4.654487,8.393367,1.895666,-5.671062,-4.199294,6.743126,-4.291858,-3.152403,-8.410212,1.227497,-8.664901],[-2.245946,-5.697934,7.561729,-5.368327,-3.319081,-0.850469,-4.078922,-3.588581,-7.307751,2.224983,8.220782,-5.401799,2.068124,-8.393092,7.025516],[4.438779,2.453020,2.755797,9.875472,-8.479144,-6.068940,8.374426,-3.049001,5.509339,7.251748,9.065669,-0.220275,-2.596087,-9.452292,7.049989]]], dtype = "float32")#candidate|7191|(10, 9, 15)|const|float32
bop_7192 = relay.power(var_7190.astype('float32'), relay.reshape(const_7191.astype('float32'), relay.shape_of(var_7190))) # shape=(10, 9, 15)
output = bop_7192
output2 = bop_7192
func_7200 = relay.Function([var_7190,], output)
mod['func_7200'] = func_7200
mod = relay.transform.InferType()(mod)
mutated_mod['func_7200'] = func_7200
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7201 = relay.var("var_7201", dtype = "float32", shape = (10, 9, 15))#candidate|7201|(10, 9, 15)|var|float32
func_7200_call = mutated_mod.get_global_var('func_7200')
call_7202 = func_7200_call(var_7201)
output = call_7202
func_7203 = relay.Function([var_7201], output)
mutated_mod['func_7203'] = func_7203
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7273 = relay.var("var_7273", dtype = "float64", shape = (7, 7, 10))#candidate|7273|(7, 7, 10)|var|float64
uop_7274 = relay.atan(var_7273.astype('float64')) # shape=(7, 7, 10)
output = relay.Tuple([uop_7274,])
output2 = relay.Tuple([uop_7274,])
func_7280 = relay.Function([var_7273,], output)
mod['func_7280'] = func_7280
mod = relay.transform.InferType()(mod)
var_7281 = relay.var("var_7281", dtype = "float64", shape = (7, 7, 10))#candidate|7281|(7, 7, 10)|var|float64
output = func_7280(var_7281)
func_7282 = relay.Function([var_7281], output)
mutated_mod['func_7282'] = func_7282
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7309 = relay.var("var_7309", dtype = "float32", shape = (3, 1, 1))#candidate|7309|(3, 1, 1)|var|float32
var_7310 = relay.var("var_7310", dtype = "float32", shape = (3, 6, 7))#candidate|7310|(3, 6, 7)|var|float32
bop_7311 = relay.divide(var_7309.astype('float32'), var_7310.astype('float32')) # shape=(3, 6, 7)
output = bop_7311
output2 = bop_7311
func_7314 = relay.Function([var_7309,var_7310,], output)
mod['func_7314'] = func_7314
mod = relay.transform.InferType()(mod)
mutated_mod['func_7314'] = func_7314
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7314_call = mutated_mod.get_global_var('func_7314')
var_7316 = relay.var("var_7316", dtype = "float32", shape = (3, 1, 1))#candidate|7316|(3, 1, 1)|var|float32
var_7317 = relay.var("var_7317", dtype = "float32", shape = (3, 6, 7))#candidate|7317|(3, 6, 7)|var|float32
call_7315 = func_7314_call(var_7316,var_7317,)
output = call_7315
func_7318 = relay.Function([var_7316,var_7317,], output)
mutated_mod['func_7318'] = func_7318
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7406 = relay.var("var_7406", dtype = "float64", shape = (9, 5, 13))#candidate|7406|(9, 5, 13)|var|float64
uop_7407 = relay.tan(var_7406.astype('float64')) # shape=(9, 5, 13)
output = uop_7407
output2 = uop_7407
func_7412 = relay.Function([var_7406,], output)
mod['func_7412'] = func_7412
mod = relay.transform.InferType()(mod)
var_7413 = relay.var("var_7413", dtype = "float64", shape = (9, 5, 13))#candidate|7413|(9, 5, 13)|var|float64
output = func_7412(var_7413)
func_7414 = relay.Function([var_7413], output)
mutated_mod['func_7414'] = func_7414
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7547 = relay.const([[[-10,-4,1,8,-6,8,1,5,9,-9,-6,3,-4,8],[1,-5,6,3,-1,7,-2,-5,2,6,-9,-2,-1,8],[4,-1,-10,5,-8,-5,1,-8,-8,-6,1,10,1,5],[-1,-9,-1,-7,7,-8,2,5,7,4,6,-4,4,-9],[9,6,8,-4,-4,-1,3,-9,5,8,-9,7,-4,4],[-6,2,-8,-7,4,5,-2,-10,-6,-2,4,10,4,-9],[-10,-6,-6,4,-9,-10,2,-2,2,7,-2,8,9,-9]],[[7,1,1,-4,8,-8,-8,-9,-4,3,2,3,-1,9],[-10,2,6,-3,-3,-1,4,7,8,2,-8,9,7,5],[2,7,-4,-7,4,-9,-8,7,2,6,1,-3,3,8],[-3,-7,1,-6,4,-7,-5,5,-7,-7,-4,8,-9,4],[-4,-1,9,1,-1,-5,10,3,-6,-1,9,-1,-1,10],[-3,-3,9,1,1,6,-9,-6,2,-6,-8,-1,-5,1],[5,-7,8,-3,-3,4,8,-5,-2,-8,2,3,1,8]],[[10,3,1,-2,-9,5,-3,3,9,-8,10,-7,10,-4],[-6,10,-2,-3,-4,-9,2,-2,-2,-6,-4,4,-2,10],[-1,-4,7,-6,8,1,2,2,5,-1,-2,10,1,2],[4,-5,6,-3,3,3,7,-3,5,7,3,7,-2,1],[-10,9,5,-1,3,-6,-3,10,-3,3,10,8,-7,-9],[1,-4,-1,6,-7,8,1,10,3,8,-5,-3,-10,-10],[-5,7,9,6,-4,-5,-7,5,-7,4,7,5,2,10]],[[-9,10,-9,10,8,-7,8,7,7,5,-9,5,2,7],[-9,7,-9,-4,4,6,9,8,9,5,7,1,1,-1],[9,-7,7,8,3,-4,-7,-2,-6,-6,-6,-3,2,-9],[2,-6,-10,-1,8,-2,-3,-1,9,-9,-4,9,5,-4],[-6,10,5,-10,8,3,-1,1,3,4,-7,-6,7,2],[-9,-9,-1,4,-4,4,-6,-9,4,-10,-2,-1,-9,-10],[4,10,-10,10,-9,-1,1,-4,2,3,-3,-5,9,-4]]], dtype = "uint64")#candidate|7547|(4, 7, 14)|const|uint64
var_7548 = relay.var("var_7548", dtype = "uint64", shape = (4, 7, 14))#candidate|7548|(4, 7, 14)|var|uint64
bop_7549 = relay.not_equal(const_7547.astype('bool'), relay.reshape(var_7548.astype('bool'), relay.shape_of(const_7547))) # shape=(4, 7, 14)
uop_7556 = relay.erf(var_7548.astype('float64')) # shape=(4, 7, 14)
func_3445_call = mod.get_global_var('func_3445')
func_3448_call = mutated_mod.get_global_var('func_3448')
const_7566 = relay.const([6.494851,9.093798,-2.848268,1.845939,-9.470256,-0.911668,2.029177,-1.858142,4.858189,4.987365,4.186795,3.840159,6.731598,-4.860300,-9.214188,-0.904637,3.131942,-9.668907,4.168164,-7.108444,1.568443,9.404318,9.401222,8.855577,8.512096,-0.550266,-6.674778,3.117736,-7.342907,3.497493,-5.006366,-0.354875,5.905776,7.916853,-4.668926,-9.523683,9.033015,-6.775145,5.131780,9.155875,-2.063106,4.452358,0.490310,6.533164,-3.953212,-4.113136,-5.106591,-1.894329,-7.897640,4.155449,-0.709620,-7.785613,6.085306,-1.887366,-9.857347,1.651140,9.934146,-4.957752,8.263589,-5.891251,-9.707927,-9.478139,-6.064899,-4.846247,3.362756,1.231894,7.024344,4.098093,1.651667,4.943291,5.828351,-0.554222,2.233041,1.130522,-8.735699,2.827357,-9.300424,-9.175486,-3.138957,4.444033,-8.316976,0.997207,-6.206331,-3.852063,-7.666400,-9.313829,-6.956095,-6.380686,4.892724,-1.573573,-1.107235,-1.835827,-4.282777,6.777044,9.379253,-2.773133,0.355761,2.723285,-3.501951,8.463550,2.018057,-6.121862,3.931091,7.124652,-9.028503,-4.655678,8.164708,4.897137,8.938006,6.364176,-3.892533,-1.567930,7.345840,9.923506,4.201968,8.340550,-3.362283,-5.065978,-9.244912,-4.022097,-3.029186,8.561654,8.370528,4.789306,8.510601,8.827313,-2.861708,-1.430267,1.009839,2.626883,-2.786966,9.085015,-3.895905,-7.650007,-5.382204,4.933682,-9.107607,-0.754277,2.943359,-2.900287,-6.069862,-4.001630,-1.954156,4.663261,3.056082,-8.578637,2.506055,-6.351320,-7.028090,-9.498893,-7.322891,1.389442,2.706615,-1.370732,8.621638,3.582328,3.867234,-4.304149,-4.386872,8.811875,-4.412192,-1.307894,-5.012784,4.815111,6.422751,7.544417,4.010301,-6.497713,-1.672675,7.273958,-9.090393,-2.795257,3.255625,4.162977,-0.093868,6.129121,-2.362121,-1.340382,-5.981022,3.337927,8.826779,0.230808,4.573867,0.656713,9.991073,4.680229,-4.039729,2.690610,-2.884183,4.834530,5.403440,7.235172,-7.386491,-7.245785,5.066119,7.675944,-6.801306,8.624643,-8.181076,-7.891784,-5.445487,2.502488,3.273578,-5.121307,6.953223,-2.109500,-4.650929,7.192464,5.176412,9.553451,3.945545,4.121365,-4.685484,-9.746644,-6.398504,-6.073318,-5.774123,6.144313,-9.467726,-8.297018,4.000480,-9.395487,-5.489288,5.044310,-8.831294,3.009492,2.727137,9.209263,3.416787,-7.062657,-2.475966,-1.975879,1.652751,-2.525179,2.437860,6.888667,8.552419,-6.636928,5.129463,9.132506,5.816902,-4.812938,-0.531481,-6.629220,1.054404,6.616643,6.462316,-5.891456,3.493729,-1.614947,3.930661,3.657385,0.704002,3.885250,9.624096,-9.247073,7.622592,6.473680,0.440813,2.165166,1.241609,-2.661143,1.501547,9.777439,-8.737577,5.214589,0.149811,-0.687473,2.076521,-6.058433,6.678244,0.116476,8.192886,-2.137266,-7.559607,0.049945,-8.793752,-1.181265,-4.909322,-5.285776,9.446374,0.584353,-1.153855,0.322969,9.332326,2.931823,1.287862,3.571719,0.330669,0.244804,5.524438,9.496634,-9.795741,7.528830,6.236784,7.979836,-5.233839,-1.993376,9.413731,-9.325069,8.310236,5.046198,-8.038297,6.716821,-7.354410,5.002223,8.259015,6.505152,-8.451284,-7.388681,-1.244480,-3.099632,-2.715561,3.714968,-5.820620,-0.276733,7.690336,-7.009693,-7.040851,-9.108908,-9.273103,2.110862,-1.963568,-6.059213,0.016409,3.183373,-2.689469,-4.682119,-6.070047,-4.647169,8.861422,-1.722580,-7.945257,-3.818258,-2.244623,2.914461,-7.446425,-2.842915,4.822723,8.267413,8.095424,-7.419282,-9.024870,5.058064,3.573362,-0.466547,-8.662932,9.971994,1.276823,-9.129577,-7.258302,1.323487,-5.499682,-7.922474,-7.068647,-5.097829,-6.572871,4.350982,-1.904588,5.011979,6.539597,-6.462774,-3.604215,-9.221013,-5.182667,8.040432,5.611527,6.954151,-0.258677,7.220795,-1.197283,-6.212956,6.494227,6.531223,-5.141039,6.763978,-9.333487,-7.259456,1.775161,3.624240,1.274547,3.334789,0.860559,-6.424191,-8.285224,-5.443223,6.473298,0.209736,-0.933922,-9.497108,2.917305,-6.628350,-1.157531,-4.810749,-0.482459,9.557288,-3.208715,-7.537211,0.023735,8.934281,-4.570237,-6.968747,-2.639779,-0.616474,8.725476,-6.262833,-2.789981,-3.645524,3.847835,9.657420,-9.541378,6.707088,1.529016,-1.766019,-5.450163,-2.325773,0.210110,-4.501995,-1.829565,8.413408,-1.794531,-1.782441,-6.034110,4.754053,6.694835,2.362501,1.305606,-7.306622,-1.732651,1.958716,-6.362917,-2.565928,6.652956,7.393821,6.219779,6.130585,-5.979401,8.676869,-6.799153,-7.351268,9.596112,-4.955143,-0.759203,4.565514,6.218200,6.698274,-4.351456,-9.573735,1.763389,7.044462,-9.203981,-5.595531,-9.585480,9.461139,-6.833669,-0.361268,-7.639524,-9.063047,2.016589,1.762216,-3.211989,-8.168523,-1.113174,-2.155112,-1.358003,7.507990,-5.852148,-4.671488,0.213803,-0.189269,7.167118,0.847635,2.284686,3.504942,9.090801,4.480446,3.540992,-9.426229,-5.791875,4.560940,-6.384763,9.425606,-2.715751,7.473378,-3.431452,8.435071,-4.597635,8.987752,-7.756092,-0.161659,5.455130,-4.557938,4.886129,3.992744,3.607886,-7.504265,1.885560,9.091515,0.579418,9.607498,-1.563209,-0.794064,2.672993,-1.121822,-0.037769,6.126220,-2.691925,-8.362767,-8.074388,-0.852187,5.809889,2.636487,-3.091559,-2.524632,4.076800,7.853378,5.489085,-6.903862,9.254975,-1.330226,6.022051,-5.882349,3.588197,2.546900,-0.391294,-3.303753,-7.011885,-1.203877,-6.941930,5.831198,-0.611692,7.240485,-3.492008,-1.140531,-4.868843,1.226832,-5.403771,4.163725,-4.225647,5.602455,-1.265723,-3.594143,6.301044,-5.335605,-3.711282,8.345577,-0.396525,-8.171190,-1.769557,0.373366,8.032559,-7.847036,-2.789941,-5.864679,-6.996407,6.361971,9.131890,8.252440,-7.102134,-2.202469,6.633121,8.409555,-3.463088,-0.392340,-3.201086,6.194534,-5.846855,4.957961,5.102520,-0.810357,2.726351,1.640559,0.785604,8.030294,-0.992327,-9.821183,5.538197,4.446108,6.912248,-6.431884,1.708600,-6.429999,2.975851,-2.840399,5.910642,-1.073912,-5.658636,0.507650,-6.514163,7.055487,-3.553717,7.535661,8.003967,1.630870,-6.413839,-6.364062,9.068517,-5.065692,-5.813780,8.508337,7.707109,-2.785745,8.078448,5.511634,-9.689629,-6.020412,7.925104,-3.208157,0.125320,6.115158,0.223169,1.501104,-7.091398,0.751946,5.023675,-4.939605,-4.282215,-0.719357,-9.337679,-4.375526,3.973226,8.914239,-2.315320,0.126751,2.551831,4.543158,3.187020,3.830765,-4.320220,-7.860834], dtype = "float64")#candidate|7566|(630,)|const|float64
call_7565 = relay.TupleGetItem(func_3445_call(relay.reshape(const_7566.astype('float64'), [9, 7, 10])), 0)
call_7567 = relay.TupleGetItem(func_3448_call(relay.reshape(const_7566.astype('float64'), [9, 7, 10])), 0)
func_4270_call = mod.get_global_var('func_4270')
func_4273_call = mutated_mod.get_global_var('func_4273')
const_7575 = relay.const([True,False,True,False,False,False,False,False,False,True,True,False,False,False,False,True,False,True,True,True,False,False,False,False,False,True,False,False,True,False,True,False,False,False,True,True,False,True,True,False,False,False,False,False,False,True,True,True,False,False,False,False,False,False,False,False,False,False,True,True,False,False,False,True,False,True,False,False,False,True,False,False,True,True,False,True,False,True,False,False,False,False,True,False,True,True,True,True,False,False,False,False,False,False,True,False,True,True,False,True,False,False,True,True,True,True,True,True,True,True,False,True,False,True,True,True,False,False,False,False,False,False,True,False,True,False,False,False,False,False,False,False,True,True,False,False,True,True,False,False,False,False,True,False,True,False,True,True,True,True,False,True,False,True,False,True,True,False,True,True,True,True,False,False,True,False,False,False,True,False,False,True,False,True,False,True,True,True,True,False,True,True,False,True,False,False,False,True,False,True,True,True,True,True,True,False,True,False,False,False,False,False,True,True,True,True,False,False,True,True,True,False,False,True,True,False,True,True,False,True,False,True,True,True,False,False,True,True,False,True,True,True,True,False,False,False,False,False,True,True,False,False,True,False,True,False,True,False,True,True,True,True,False,False,True,False,True,False,True,True,False,False,False,True,False,False,False,False,True,True,True,True,True,False,True,False,False,False,False,True,True,True,True,True,False,False,True,True,False,False,False,False,False,True,False,True,True,False,True,False,True,True,True,False,True,True,False,False,True,False,True,True,True,False,False,True,False,False,False,True,False,True,True,True,False,True,False,True,True,True,False,False,False,True,False,False,False,False,False,False,False,True,True,False,False,True,True,False,True,False,True,False,True,True,True,True,False,True,False,False,False,False,False,True,False,True,True,False,True,True,False,False,False,True,False,False,True,True,True,False,True,False,False,False,True,True,True,False,False,False,False,True,False,False,False,False,True,True,True,True,False,True,True,False,True,True,True,False,False,False,False,False,False,True,False,False,False,False,False,True,False,False,False,False,False,False,True,False,True,False,True,True,True,False,True,False,True,False,False,True,False,True,True,True,False,False,True,False,False,True,True,False,True,True,False,True,True,True,True,False,True,False,True,True,False,True,True,True,True,False,True,False,True,False,True,True,False,False,True,False,True,True,False,False,False,True,True,False,False,True,False,False,True,False,True,False,True,False,True,False,False,False,False,True,True,True,False,True,True,False,False,False,True,False,False,True,True,False,True,False,True,False,False,False,False,True,False,True,True,False,True,False,False,False,True,True,True,False,True,True,False,True,True,True,True,False], dtype = "bool")#candidate|7575|(546,)|const|bool
call_7574 = relay.TupleGetItem(func_4270_call(relay.reshape(const_7575.astype('bool'), [7, 13, 6]), relay.reshape(const_7575.astype('bool'), [7, 13, 6]), ), 0)
call_7576 = relay.TupleGetItem(func_4273_call(relay.reshape(const_7575.astype('bool'), [7, 13, 6]), relay.reshape(const_7575.astype('bool'), [7, 13, 6]), ), 0)
bop_7579 = relay.bitwise_or(uop_7556.astype('uint16'), relay.reshape(const_7547.astype('uint16'), relay.shape_of(uop_7556))) # shape=(4, 7, 14)
uop_7601 = relay.tan(uop_7556.astype('float64')) # shape=(4, 7, 14)
output = relay.Tuple([bop_7549,call_7565,const_7566,call_7574,const_7575,bop_7579,uop_7601,])
output2 = relay.Tuple([bop_7549,call_7567,const_7566,call_7576,const_7575,bop_7579,uop_7601,])
func_7629 = relay.Function([var_7548,], output)
mod['func_7629'] = func_7629
mod = relay.transform.InferType()(mod)
mutated_mod['func_7629'] = func_7629
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7630 = relay.var("var_7630", dtype = "uint64", shape = (4, 7, 14))#candidate|7630|(4, 7, 14)|var|uint64
func_7629_call = mutated_mod.get_global_var('func_7629')
call_7631 = func_7629_call(var_7630)
output = call_7631
func_7632 = relay.Function([var_7630], output)
mutated_mod['func_7632'] = func_7632
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7708 = relay.const([[[-5.286109,8.470723,-6.402076,3.800813,-1.993780,5.624138,3.429576,-1.010877],[3.494858,3.033749,4.109679,2.869211,-3.965844,-9.640799,-6.795048,1.906043],[-5.011840,-6.421910,-2.305065,-7.147731,-7.518986,-0.144056,-8.817703,-5.966373],[8.156998,-5.921719,-9.529870,-4.616989,0.349213,9.720081,2.449860,-1.701930],[-1.063618,-0.452691,-3.373360,3.345072,3.353675,-5.333025,-6.840541,8.592521],[-1.249007,4.066259,7.986007,-9.008933,-3.116817,8.630488,-2.416382,9.493880],[-4.041879,-5.999778,3.144778,-4.270586,5.569453,-6.568257,6.415938,3.899585],[3.750072,-6.784363,0.344577,3.464587,9.153964,4.205894,-2.184151,-9.498629],[-7.517622,0.032869,-4.197665,-1.948306,-3.256736,2.132741,4.632843,0.846752],[6.662398,8.622572,-4.430572,-8.430085,2.890753,-4.019524,0.206481,6.719174],[5.505735,4.648817,-3.157489,7.131691,-3.710583,-0.804649,-5.392307,-2.329311],[-9.776367,-9.547011,-8.514325,-4.661622,-5.115860,0.863188,8.073683,1.243613],[9.040972,-5.083438,9.229016,-2.857138,-8.735708,9.004362,-0.528045,2.069718],[0.831273,-6.780891,-2.098441,-1.690255,5.256024,-4.762529,-8.602460,5.054840],[-0.045618,6.718991,0.754805,2.911569,-1.357061,-6.844861,-8.922823,2.656050],[2.445400,2.565152,-2.434757,-1.687726,7.427377,-3.267424,6.762671,6.363096]],[[1.495973,1.734187,-7.755614,0.266190,9.579198,-8.581407,9.722278,2.783417],[0.582387,-3.334774,-8.429405,2.871771,-5.018988,9.771692,1.313162,8.036422],[9.108663,4.286458,-3.061184,5.933082,9.590917,7.746961,1.599962,5.693009],[-5.687073,7.947063,1.878761,-2.331687,-4.193335,7.515989,2.821827,5.715912],[5.786074,-5.053339,1.713017,8.821959,1.237618,8.077881,0.895741,2.781785],[-2.555578,4.065926,0.167779,5.656350,7.844817,1.145049,-1.875015,-7.602873],[-0.983365,5.615954,-6.687415,-0.486560,9.173527,-0.682217,-8.246866,-8.439834],[-9.666894,-8.471724,-5.640762,-9.622573,-0.083259,-8.204455,-8.759811,-9.337107],[2.254676,-2.829961,-5.404651,-9.122245,-2.876594,1.832740,-1.345771,4.762833],[0.039689,6.702525,-0.880651,7.326858,3.804266,4.883733,-0.743062,-1.491325],[1.957767,1.996475,1.601446,5.694733,6.474824,3.018944,4.947711,-3.641825],[-1.744116,-5.277461,5.646755,-4.988282,9.552516,-8.038756,2.701901,2.047031],[2.348485,7.188534,-5.967773,-0.791398,7.701410,-1.727586,2.154214,1.676490],[-4.456485,-1.962974,5.760093,-0.894894,-7.443595,8.540128,-6.035528,-8.477418],[5.956350,-0.196326,-9.124335,3.215862,-4.479179,-1.951001,6.524822,-7.017951],[1.628254,9.187557,2.957334,7.357230,5.375882,4.722734,-8.207180,3.603237]],[[4.068822,8.661255,2.458735,3.755375,-5.296007,3.736033,1.464736,0.777529],[-3.127034,-3.740249,8.073271,0.696908,-8.019548,-8.896121,-8.631263,-8.339076],[1.096045,8.985712,4.432126,0.880471,1.322857,2.547768,-1.887022,4.811203],[0.475831,-6.169178,-7.677775,0.885604,-5.379052,4.632880,-8.347511,7.383890],[4.738496,-8.356416,3.638060,7.563982,-2.170595,-9.713890,9.785839,0.814025],[6.735622,9.734258,0.363012,-6.035635,-9.506646,-6.289261,7.239215,7.829051],[-4.959774,0.972740,4.820301,-3.665818,4.577161,-3.742041,9.784484,-5.906307],[8.297858,-8.736403,-8.362616,-2.226908,-3.683162,6.419954,-7.979695,-5.154598],[-8.114880,4.770046,-4.876583,6.715356,-1.549327,3.152635,4.457142,-3.937167],[0.927020,1.970222,5.814898,3.458164,-2.220156,6.500487,9.946902,-6.078975],[-8.857376,1.166333,8.940033,-2.943053,-6.664244,7.666584,0.475069,-1.954699],[-3.242609,4.378902,8.636764,6.007525,8.017420,8.359190,2.798398,0.117942],[0.147749,-6.437903,1.201922,-9.798686,-9.410855,-2.679040,7.317364,6.044445],[-2.915139,8.090797,8.356697,-1.568590,7.927480,3.163273,9.818441,-3.380873],[0.204102,5.861896,-1.422378,-0.481151,-4.203872,-7.824262,3.510541,0.513488],[-6.913715,6.763668,-6.257704,6.013256,0.806573,-8.344755,6.399592,4.158651]],[[9.705263,0.333629,-5.653481,0.288628,-0.023180,-3.471061,8.850336,-0.230934],[-2.140950,1.517603,7.397459,0.451940,0.454526,9.478584,-2.403206,2.478678],[6.527534,3.405391,-8.036280,-1.138304,8.249521,-1.756142,8.573291,-2.489026],[-6.518772,-1.073182,-9.428336,3.579531,1.585901,-0.007285,5.863719,8.956970],[6.652132,3.449403,1.643261,-1.668661,-6.841252,2.922297,2.372930,-1.911206],[1.538513,7.795535,-1.021426,7.287019,4.635877,7.106595,4.770581,-3.293455],[-4.679555,-7.412025,3.584803,-5.119822,5.420257,7.321008,2.084549,4.274903],[-1.840206,5.453339,4.492115,-0.413289,-6.784428,5.902564,4.995173,-9.102607],[6.652348,9.389606,-8.145149,0.985646,-4.279868,-5.676436,-6.694511,-1.449190],[3.110622,0.580742,7.342276,5.848789,5.359075,4.772246,-9.874510,-5.502977],[9.890662,6.765824,8.808951,7.081976,6.177519,-7.759226,2.627891,5.496429],[-7.060120,1.686351,-4.512326,9.359790,-7.480322,-5.944210,6.912441,-4.999966],[5.214428,-6.181362,-6.541657,-3.052867,5.759829,6.617275,6.519298,0.575884],[3.515519,1.417022,-4.571236,-4.857058,-0.689849,2.190252,5.827861,-8.171314],[4.512686,-1.907275,-0.641646,-6.110029,7.623550,7.596667,-6.690816,-1.972750],[5.162528,9.042760,-1.694283,-6.980455,1.056232,-6.200734,-8.557169,2.179217]],[[8.253213,4.933390,-6.118796,-2.744061,-9.883801,-8.380769,-5.178197,-9.491922],[5.585151,3.385668,1.361337,-0.435635,-7.040718,-4.033083,2.753143,-5.140681],[1.812523,-0.232678,1.440047,7.153504,-3.225254,-5.653190,-1.297792,4.930226],[5.783773,8.374637,-8.951537,0.763817,4.373352,4.961550,4.227811,6.011329],[-4.934939,-4.201812,-5.522199,6.155393,6.047342,-1.869412,-2.706555,2.813816],[-4.366444,2.615678,-6.950158,3.986395,-5.362392,-9.833809,5.215944,-9.168247],[-2.868500,7.842522,-2.982569,5.486940,5.960189,3.173503,8.369234,7.174475],[9.054268,6.118889,8.579921,7.569908,6.589089,4.307238,-1.527910,-1.724711],[-5.691772,3.967725,-1.385379,-9.679552,-8.704001,-1.493318,3.178458,-1.418694],[-2.845096,-7.767563,-6.747851,7.456674,-9.896410,-8.274199,-5.023480,6.130544],[5.217866,5.581359,7.934413,4.792745,4.031682,-7.489600,2.196109,2.107089],[-5.708714,2.725777,-1.286847,-2.989549,8.362373,1.591093,-7.595438,-7.580218],[3.829952,4.869081,2.555277,3.704162,-7.568241,5.449594,-0.924688,7.829955],[3.864066,4.306453,1.120093,-3.260175,1.067392,-0.786366,-9.314148,4.294262],[-1.513690,-3.920852,2.667708,-8.414810,1.672055,4.391361,5.376184,-7.333316],[9.007202,-9.463459,-0.444073,3.770556,-6.947788,6.492405,-6.867687,-3.039791]],[[7.594552,-5.821259,-4.814485,6.622186,0.291392,1.958805,9.635921,3.015999],[-4.084497,-6.159698,-1.802960,-5.926294,1.109959,3.848675,-8.651335,7.023313],[-9.718066,-3.606425,-6.863096,9.616692,-8.718776,-9.877157,-6.637447,-9.353464],[8.680484,9.643791,-8.827839,-8.480222,5.069428,0.395303,-5.014477,-0.933811],[-4.951562,9.803399,-9.771682,-0.780908,-2.468035,-2.004021,-4.994252,2.494137],[8.597346,1.950440,-8.160800,-0.429324,0.659551,6.490307,-1.611721,4.446184],[-1.880778,6.767609,0.065653,9.123187,0.291347,-9.321523,-8.524255,4.251419],[3.274966,1.242291,4.405086,5.910486,4.138499,-8.728112,-6.418369,-2.684373],[-8.415892,5.760613,-9.791363,1.856834,7.309023,6.239219,6.363774,5.602915],[-4.041146,-8.070913,-0.423847,-7.114396,-8.918937,7.275720,-2.849304,2.720119],[-5.008144,-4.711851,9.083114,-6.195534,-0.567546,-2.776431,-1.224211,-3.930969],[-7.688664,-3.110448,-5.378159,-9.963548,1.849050,-4.486049,-1.853608,6.262265],[-9.147662,7.333371,3.415902,-8.275072,1.029989,-3.640948,0.028507,-0.631093],[1.604421,-2.493395,-2.512733,8.911050,9.961325,0.540092,0.347491,-7.738104],[1.042126,-4.729745,5.587877,-2.056404,3.835596,-8.913715,6.273658,9.652112],[-2.406907,-6.132070,-7.594594,-3.031292,8.030284,5.513396,-0.010740,2.504266]],[[2.817994,9.114268,-1.484852,-4.412223,-7.728188,-4.316811,8.253859,-0.903265],[-2.007673,-1.167299,-4.196111,-2.032627,7.152502,0.266410,3.467302,5.826008],[-7.570147,2.559519,-0.949424,-5.254376,-3.841472,-3.697525,-8.768091,0.767819],[3.723991,-6.072797,2.274337,-6.548291,-1.337444,-2.291597,-2.665672,8.453335],[-0.470034,8.849721,-7.458129,8.852639,9.896202,-5.944835,7.547426,-3.956503],[-3.028041,-6.909010,4.668755,-1.224412,-1.043425,6.687186,-1.062166,2.855020],[0.297273,0.270761,6.260735,-5.339335,-5.892914,-2.096573,8.039500,-0.303237],[4.925341,2.644370,3.479484,8.593692,-9.487928,-3.342217,4.134876,-0.134166],[6.845658,-8.087427,-7.959747,1.181962,0.440853,-7.910707,-8.589178,-7.964604],[-2.285094,-3.201266,7.282104,0.425964,-8.904726,-6.918900,-4.541047,-3.166300],[-8.816801,-4.696558,1.848981,4.166036,9.081199,5.188846,8.193241,-4.872616],[1.194583,5.249815,-0.621131,2.266917,8.773447,-7.330110,-4.967119,4.164846],[6.239643,2.875048,6.488321,4.985597,9.556400,-5.682589,1.658683,-5.451737],[9.027252,9.649399,-0.032485,-1.325485,3.763535,0.364688,5.012222,-6.341451],[-0.699586,1.100135,8.472589,7.235192,-2.041850,8.242040,-1.067035,-9.695354],[4.253850,2.301022,-1.297902,1.257868,-1.528645,4.744742,1.207755,-0.539111]],[[-2.253436,9.166149,-9.677543,-2.547719,-4.914516,-2.167815,0.420835,-4.334039],[5.428559,-3.622542,4.429364,5.556990,7.006734,9.824446,-8.030619,-2.020020],[-6.956518,-4.039260,-1.938530,5.629537,-6.259790,6.594123,-0.134918,1.885755],[8.311605,-2.960086,8.433465,-2.123990,-4.296388,-3.491436,0.319022,9.225403],[-5.286739,5.823767,-5.512674,-7.003917,-5.082612,-0.727556,5.154089,-1.662831],[-3.943380,-7.898075,-9.970790,-6.405329,-2.185974,-5.491484,5.941586,9.652945],[3.822720,5.978731,6.112057,8.437833,6.603622,4.504273,8.862478,-5.479527],[-8.775262,8.276143,4.853852,5.570116,-7.548777,-5.828220,-1.844731,-7.844508],[-1.071854,1.159693,9.642374,5.229024,9.676351,3.803017,7.443685,-3.108471],[-6.593646,-7.368751,6.813585,-9.079585,2.460981,9.192732,-4.431631,-7.676884],[9.902563,6.226982,-3.118964,-7.301620,7.358197,-3.118092,7.205166,-1.996943],[-5.036195,8.775641,-4.236605,-1.733417,-2.508835,7.985059,0.098326,9.119785],[-8.275779,2.151216,-4.812653,-5.784132,3.040210,-0.843053,4.058968,6.719980],[6.993524,4.342191,-1.335853,-2.323083,2.895050,9.022243,4.186552,-9.976989],[6.580730,-6.226453,5.943165,5.145110,1.285331,7.209648,-4.810293,-5.183767],[7.699937,-6.673458,1.074125,2.097236,-2.709794,2.756809,5.904945,4.088583]]], dtype = "float64")#candidate|7708|(8, 16, 8)|const|float64
uop_7709 = relay.erf(const_7708.astype('float64')) # shape=(8, 16, 8)
output = relay.Tuple([uop_7709,])
output2 = relay.Tuple([uop_7709,])
func_7714 = relay.Function([], output)
mod['func_7714'] = func_7714
mod = relay.transform.InferType()(mod)
output = func_7714()
func_7715 = relay.Function([], output)
mutated_mod['func_7715'] = func_7715
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7714_call = mod.get_global_var('func_7714')
func_7715_call = mutated_mod.get_global_var('func_7715')
call_7773 = relay.TupleGetItem(func_7714_call(), 0)
call_7774 = relay.TupleGetItem(func_7715_call(), 0)
output = call_7773
output2 = call_7774
func_7783 = relay.Function([], output)
mod['func_7783'] = func_7783
mod = relay.transform.InferType()(mod)
output = func_7783()
func_7784 = relay.Function([], output)
mutated_mod['func_7784'] = func_7784
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7714_call = mod.get_global_var('func_7714')
func_7715_call = mutated_mod.get_global_var('func_7715')
call_7809 = relay.TupleGetItem(func_7714_call(), 0)
call_7810 = relay.TupleGetItem(func_7715_call(), 0)
func_6512_call = mod.get_global_var('func_6512')
func_6515_call = mutated_mod.get_global_var('func_6515')
const_7815 = relay.const([[5.341942],[4.510765],[-2.715531],[-5.197811],[1.821434],[-2.694162],[-6.410221],[-1.449136],[8.441930],[9.959769],[-5.044541],[8.444136],[-5.497938],[-4.612087],[8.598397],[3.917997],[7.079974],[-6.368336],[4.854437],[3.828426],[-7.514673],[8.474073],[-2.943156],[7.495693],[-8.103455],[-6.262689],[-1.354258],[6.393811],[-0.884670],[-5.598321],[8.878263],[9.580935],[-6.602059],[-6.627698],[-1.812482],[-2.722811],[6.181441],[-8.304099],[1.437367],[4.050540],[-7.272143],[-2.431617],[-3.028343],[0.302221],[-4.929928],[-6.487381],[-4.947014],[-8.427053],[3.939155],[-4.148358],[-1.479543],[-5.816641],[-4.073791],[9.826265],[4.901599],[-7.183317],[-4.560235],[-6.627598],[-7.000367],[0.962243],[8.004711],[-5.613189],[1.620078],[-9.597092],[1.637499],[5.816974],[5.370844],[-8.361128],[-0.338405],[7.902908],[-0.603401],[8.028416],[2.215981],[2.546745],[8.203351],[-7.435870],[5.929681],[-4.015057],[5.694783],[1.286391],[-2.163578],[-8.402147],[0.291361],[1.962675],[-5.083501],[0.825022],[-1.269048],[0.045976],[-8.495037],[-5.993769],[7.827421],[3.506874],[8.044690],[-9.809873],[-6.408755],[-0.291874],[-2.067929],[4.595420],[9.035204],[6.168909],[4.238807],[-1.223216],[3.121899],[4.562341],[6.881486],[9.980251],[-2.571589],[1.694919],[8.045804],[-2.622692],[7.525497],[-2.036612],[5.432037],[8.287915],[-7.744416],[-9.924774],[1.066763],[-7.997730],[-9.826168],[5.036781],[2.846941],[8.084330],[7.156972],[5.807409],[-7.200133],[-2.907743],[-7.356120],[4.513291],[-9.976447],[-7.295270],[3.416552],[0.283589],[-6.913227],[0.938408],[8.944439],[-7.809122],[8.938759],[6.215102],[-1.603412],[0.298591],[-4.946544],[-6.013029],[-5.166866],[1.351650],[6.499264],[-8.759459],[-9.041923],[5.024414],[0.598209],[-9.707348],[9.539823],[0.963563],[-7.673541],[5.843230],[0.491100],[4.213308],[9.124091],[7.064181],[7.668453],[-5.980616],[-9.340964],[9.895041],[-3.949087],[6.329290],[5.260228],[3.878578],[-3.565865],[8.807073],[2.582305],[6.902320],[-9.921801],[-6.968983],[6.496970],[4.132607],[-7.688974],[5.703528],[-6.313254],[-6.359174],[8.197430],[-5.817469],[9.319043],[-1.432921],[-2.176421],[-7.562968],[-3.357331],[5.703059],[-1.726617],[-1.674977],[7.840581],[-7.356346],[-9.709081],[-3.651099],[-3.652187],[2.180311],[9.491123],[-6.772644],[2.326303],[-5.878056],[-4.540043],[0.102756],[7.521178],[2.726466],[7.675286],[3.828566],[-8.204160],[-3.111413],[3.592330],[8.734636],[2.771545],[1.022806],[3.001049],[8.610966],[-7.250531],[-4.358395],[-4.243034],[-6.416777],[-6.055775],[8.433801],[0.433988],[-5.104036],[-6.472839],[-6.791880],[-2.854889],[3.078073],[6.117482],[-9.411028],[-4.486244],[8.890965],[1.070412],[-5.273260],[-4.342816],[3.393791],[-9.860029],[-9.023042],[9.524339],[0.106118],[5.014780],[7.975474],[-6.856172],[-9.923647],[-1.749037],[-1.680730],[-7.400521],[8.679174],[4.331933],[-7.689084],[-2.538180],[8.014189],[-5.988441],[2.811931],[-5.162188],[-6.050729],[-0.576374],[2.501847],[-7.596099],[-8.935443],[-4.255214],[-2.450966],[6.748730],[8.182531],[0.206034],[-1.995364],[3.131688],[-9.610589],[1.060786],[-1.956347],[1.266043],[9.734038],[-6.244872],[-9.805165],[-6.817640],[5.377174],[6.018958],[-2.156484],[-8.119456],[0.176164],[3.749447],[2.250907],[9.012499],[-5.969286],[6.559195],[5.234472],[2.293764],[0.946041],[5.944985],[5.825964],[-1.427538],[9.578782],[-7.078689],[-3.535229],[9.561271],[-5.407225],[2.107857],[8.023475],[9.205146],[9.395533],[-4.938993],[9.646304],[-2.377630],[-8.903269],[-0.243971],[7.286246],[-0.970427],[-8.811760],[-0.221772],[4.007204],[6.084048],[-4.275656],[-4.912779],[2.712046],[-2.109273],[-5.773703],[6.160353],[-4.007570],[-8.257022],[-3.542349],[-6.042185],[-5.441850],[-4.809944],[4.332400],[8.584404],[-7.593264],[-2.521406],[-4.365610],[-1.558265],[5.252113],[-4.093595],[-3.134695],[7.516694],[3.613957],[7.401008],[9.684999],[-9.085515],[-7.613620],[-9.143892],[6.256098],[0.792334],[-3.799984],[0.216156],[-7.579897],[1.076755],[-9.951020],[4.364581],[4.176270],[5.075301],[3.866158],[-0.373543],[5.368171],[-3.285237],[1.787787],[9.122614],[-6.733278],[-7.102539],[1.579411],[6.943521],[-6.918641],[1.709869],[5.928951],[3.575774],[5.923665],[1.752825],[4.198520],[9.454605],[-4.855530],[-7.126810],[2.083392],[5.966619],[-3.868517],[-1.882125],[0.555644],[6.949848],[-6.005902],[-5.254410],[-3.374191],[4.679057],[-3.756615],[-0.366159],[-4.708990],[-6.478704],[5.003694],[4.633419],[9.012681],[-7.606368],[-6.193986],[0.765611],[2.810447],[1.882850],[6.633609],[5.420315],[9.997572],[3.663157],[5.739853],[0.290354],[-4.531072],[7.711329],[6.551175],[-9.200646],[6.267318],[-6.274360],[2.462716],[7.238246],[3.948287],[4.520536],[-9.379175],[-0.279459],[8.535130],[6.577966],[0.304443],[-3.976415],[9.088145],[0.768706],[-0.545776],[4.876094],[-4.047056],[-5.057093],[9.054187],[-7.174566],[-0.967079],[8.807128],[-1.427124],[2.618031],[3.145605],[3.581431],[4.012756],[-6.928713],[3.843223],[9.863208],[0.624752],[4.621714],[5.466560],[-1.752932],[7.388426],[7.131737],[-1.143172],[-5.142989],[-0.673996],[-2.575966],[-2.697100],[-9.088179],[8.563374],[-5.984594],[-9.733376],[0.684215],[-5.585634],[6.348153],[-5.740657],[-8.592082],[4.117079],[3.743582],[-7.775795],[-7.887475],[6.054545],[1.422208],[-1.015862],[-8.997668],[-5.605567],[-7.696045],[-3.055419],[3.316757],[-0.270117],[-1.239196],[-0.443623],[-0.121146],[-4.636339],[3.255241],[9.479263],[4.503821],[-7.002669],[7.145342],[-0.045722],[-4.461524],[-7.341483],[7.147254],[-1.682338],[-9.574840],[-0.299665],[8.930549],[5.272622],[-5.872295],[-2.306460],[9.342988],[2.411663],[-7.811207],[2.173221],[6.672027],[5.982614],[-1.506108],[-5.931984],[4.140213],[-1.762908],[-3.670508],[-0.751747],[3.644480],[6.546398],[-5.474883],[3.368617],[-7.795430],[-8.717419],[-6.485498],[-7.331792],[-5.962417],[-1.057700],[8.299393],[-8.631400],[2.901941],[-1.262154],[5.124957],[-6.811960],[1.229892],[-0.543784],[7.364501],[4.379171],[6.263368],[-7.113809],[3.751191],[7.882701],[0.492603],[-3.471985],[-9.557247],[1.192520],[-6.385713],[9.710134],[-7.983003],[-8.399875],[-9.687789],[6.227924],[7.432093],[7.859917],[5.081016],[-3.741963],[-3.584460],[-1.127485],[7.827733],[-2.604583],[4.613398],[-2.617173],[-3.563076],[-9.108506],[1.016594],[-9.821286],[7.474224],[5.020190],[-4.985201],[8.936307],[-8.217020],[-7.843094],[7.148318],[-5.386260],[8.329733],[6.903420],[-8.753671],[-4.561885],[5.062588],[-7.793712],[-8.633790],[-9.463711],[-7.613588],[-9.605102],[-2.722890],[-9.547425],[9.520357],[5.942722],[5.990823],[-9.419423],[2.371066],[-7.956928],[4.087018],[-2.979819],[2.469203],[8.920373],[4.717073],[4.557588],[4.616477],[-4.230468],[-6.232799],[-7.401927],[1.014456],[-2.216534],[-7.089466],[6.721357],[-4.468340],[2.307254],[4.591773],[7.927951],[-3.300538],[-9.466463],[-3.829682],[-6.180683],[5.893661],[-8.949499],[2.349347],[9.719842],[-1.047000],[-9.525660],[-4.377685],[-7.245036],[5.088451],[-3.326620],[7.623034],[3.685027],[-5.246554],[9.852506],[0.889605],[-7.438568],[-9.705924],[-3.594729],[-8.873511],[-8.542680],[-1.765114],[0.163199],[9.635231],[9.623616],[2.961026],[4.939557],[9.582769],[8.908600],[-8.242546],[1.289912],[-0.305224],[-6.567468],[-0.114850],[-8.052425],[-4.303087],[4.563758],[0.548180],[-3.439360],[0.391328],[4.115764],[8.070851],[2.238941],[4.034177],[2.359739],[-5.268513],[-6.115796],[-8.865046],[1.370403],[3.452192],[4.598176],[8.716301],[-2.893986],[7.228878],[4.810010],[8.481986],[-9.517814],[0.436608],[1.850230],[-8.775499],[-8.829200],[0.480235],[9.031719],[1.542499],[-9.261639],[-9.663614],[-0.456851],[4.461342],[0.851709],[9.165708],[0.412279],[0.020668],[-1.394005],[7.104630],[-9.824469],[-9.302886],[-0.653908],[8.494148],[1.036950],[3.733613],[8.789047],[-5.687039],[1.008704],[3.804690],[-8.164933],[5.830659],[4.194452],[6.828740],[4.674530],[8.209299],[-2.904433],[-9.559510],[-0.265750],[-3.444994],[-9.060294],[0.420117],[-2.239891],[6.417697],[2.132164],[-8.830106],[-0.405435],[8.738681],[-8.189594],[3.760404],[-9.546244],[0.802576],[-8.822973],[5.752800],[9.727873],[-0.197760],[4.977785],[-6.970176],[5.665781],[7.301566],[-8.854572],[0.152025],[0.049626],[-8.363362],[7.996990],[4.151305],[-1.105690],[6.982677],[-9.402399],[9.384725],[-4.999552],[5.221520],[-9.416283],[0.420678],[-2.728011],[-5.184706],[-6.637834],[1.183471],[1.529868],[-7.361705],[4.654972],[-0.153649],[-0.374315],[-1.750196],[-1.999488],[4.173454],[8.875520],[2.949812],[-5.143593],[-9.204949],[7.042522],[9.601462],[-5.291979],[-5.850280],[-5.159286],[-9.451693],[-4.190072],[8.475659],[-7.218281],[-2.098454],[-6.924294],[-4.183285],[-8.865227],[0.999529],[-9.237491],[0.101876],[-9.769145],[-7.658838],[7.535790],[-0.066484],[0.184591],[5.194763],[8.030957],[-9.901162],[-3.067038],[9.159694],[-6.035911],[6.133496],[3.721717],[5.605371],[-3.306891],[0.143376],[5.870314],[5.933235],[-1.427744],[-7.363711],[-7.785568],[-7.189526],[8.981314],[-5.943784],[9.059662],[-3.690164],[0.400081],[-4.524079],[-3.618008],[-0.652519],[5.746170],[4.407226],[4.194314],[2.155956],[3.042742],[0.206124],[-4.208723],[4.565152],[8.658397],[2.959933],[6.538503],[-2.916348],[5.333551],[1.913796],[5.135765],[-2.210444],[-2.452372],[2.941786],[-3.035790],[4.140050],[7.628586],[-8.159414],[-1.191041],[6.717086],[0.229821],[-5.099893],[-4.704616],[4.824133],[-6.499527],[4.465340],[-1.779988],[-5.379902],[3.292697],[2.374122],[-9.591166],[2.485505],[2.787296],[3.180327],[-7.611150],[3.172899],[-2.516457],[-7.812612],[6.061706],[-8.813709],[2.138053],[5.087220],[-9.617356],[-4.717006],[3.285340],[0.472513],[-7.434497],[3.538374],[-9.227346],[-1.431780],[0.110730],[-0.298509],[0.454365],[-0.161020],[-0.766337],[-0.305460],[-3.886580],[-4.585853],[8.690309],[8.072407],[-1.802611],[2.094559],[0.659609],[-1.387249],[0.128495],[-3.373642],[6.226178],[-1.144361],[-8.698117],[6.052833],[-2.371817],[-3.138848],[9.811004],[8.214068],[5.689446],[3.078522],[6.430976],[-2.235109],[-0.974916],[0.597642],[7.854782],[-8.065479],[-4.474571],[-0.697336],[-7.564850],[-0.208449],[1.846755],[0.204697],[7.184082],[-7.976195],[6.619250],[-4.454294],[-8.592827],[-5.165672],[4.725734],[-8.405501],[4.737120],[1.348706],[-8.471345],[-9.763057],[1.435147],[9.339183],[0.446183],[1.774072],[6.704887],[6.618773],[-9.179956],[7.513659],[4.356790],[5.658332],[9.027734],[1.532247],[-6.471323],[3.692069],[-0.802443],[7.924147],[-5.293268],[5.396728],[-8.535773],[-2.293887],[-9.329459],[-9.755774],[9.970260],[9.216196],[2.392511],[7.499858],[-4.128923],[-2.257484],[-2.991455],[0.636625],[6.899210],[-9.026157],[3.490863],[-8.106329],[3.323416],[8.060999],[-6.209205],[-4.679100],[-6.536913],[-5.461809],[-4.748922],[-5.664657],[2.299378],[9.751431],[-3.535235],[-9.064238],[-9.904846],[0.934023],[-9.008900],[4.964680],[-9.446487],[8.850888],[-7.582181],[-8.817519],[3.225588],[0.401534],[0.215495],[6.444235],[-9.982601],[-8.108230],[9.088624],[-4.116512],[9.975414],[-4.255390],[1.192682],[9.111171],[-5.893871],[3.512624],[-7.039145],[0.719856],[-0.653188],[4.519846],[0.714042],[-4.025284],[-9.498515],[-0.336726],[-1.634729],[8.860808],[3.108823],[2.393507],[1.262318],[-7.865129],[-3.951705],[-5.766658],[-7.686654],[-6.430089],[-5.125112],[-5.451117],[-7.802033],[9.984214],[6.096923],[1.444587],[5.841031],[2.599199],[-4.297577],[2.170831],[-9.611442],[2.488121],[2.939766],[0.288013],[-0.426201],[0.091428],[-8.874673],[-0.348991],[-6.579437],[6.138044],[1.880080],[5.329242],[8.751690],[7.044535],[-4.436624],[1.081402],[2.000608],[7.702842],[-1.042397],[-9.847063],[-8.106924],[-1.501564],[2.170092],[-3.921500],[-7.367382],[7.918767],[-8.268323],[-6.258532],[0.709818],[3.660531],[3.729226],[-2.405120],[0.148930],[9.403358],[2.230181],[-4.414371],[2.263533],[-4.960880],[5.325442],[0.247789],[-3.285837],[-7.365186],[4.381255],[-1.736657],[-3.252170],[-6.870691],[-5.448272],[-4.157879],[-2.212928],[9.461849],[6.254531],[-2.591482],[-8.165635],[5.674441],[4.046490],[-8.318209],[9.117910],[-6.942147],[3.528355],[-4.224709],[-4.586539],[8.989114],[6.910580],[-5.343350],[-8.024466],[3.200615],[-2.351785],[-6.634856],[-7.951092],[-4.697248],[-9.189965],[9.025078],[8.903151],[5.714000],[-4.664434],[9.980421],[-7.447147],[4.461481],[-8.452806],[-7.180122],[-4.033988],[4.771147],[7.440149],[8.990371],[2.624569],[2.049038],[-7.319292],[-3.482460],[-1.769243],[0.063779],[5.657172],[3.428410],[6.656596],[0.865451],[-2.601750],[-8.710093],[-6.987770],[5.666572],[-0.235499],[2.205132],[3.318180],[0.107613],[-0.632596],[2.308246],[4.317625],[6.420880],[7.240292],[0.926014],[-8.207713],[8.165030],[-5.076054],[1.865060],[5.136956],[-7.972175],[1.297814],[5.026939],[-0.807765],[7.472685],[-5.918913],[9.276974],[1.358076],[-9.379885],[6.245639],[8.885989],[7.466855],[-5.496209],[1.094565],[-8.361704],[2.159419],[-1.565012],[-8.528952],[0.851952],[-7.257950],[7.663635],[9.315446],[3.782105],[-6.379580],[-7.331340],[3.676326],[5.761391],[-6.074612],[-0.426109],[4.602347],[-6.798914],[0.076459],[9.524758],[-3.491263],[-2.578285],[5.300445],[-6.017097],[-9.103096],[1.325530],[3.745528],[-5.346660],[-6.279611],[3.365461],[6.530886],[-2.111503],[-8.948967],[2.676807],[1.959783],[-3.045791],[6.741562],[-1.551772],[-8.835035],[-2.855306],[-0.619603],[5.720735],[6.790183],[-8.833022],[8.843039],[-6.534007],[8.196281],[8.229522],[6.982257],[2.762527],[-5.532080],[-7.424568],[-7.118932],[-9.681326],[1.294852],[0.698869],[0.302507],[-6.326422],[-6.422395],[-8.005786],[-7.536419],[8.245687],[9.864588],[-6.320145],[2.490672],[7.292875],[6.805209],[-5.324863],[-5.380860],[-3.158190],[1.169216],[-4.356653],[5.623533],[2.617985],[2.572934],[0.398979],[-9.353290],[-4.546218],[-8.050542],[-2.109118],[-8.493216],[3.839145],[2.566995],[-7.030316],[-9.513677],[-1.555930],[-0.260556],[-9.269779],[1.691867],[-9.007569],[9.848229],[-9.901297],[-6.294316],[4.087682],[2.471644],[-7.898076],[9.308651],[7.899923],[7.661794],[9.516109],[5.248601],[1.834815],[-9.133473],[1.634029],[5.352127],[-0.153225],[3.458805],[-5.012328],[4.607819],[-4.799059],[7.369987],[1.822477],[-9.067870],[-6.239849],[-3.022809],[-3.804465],[0.547032],[1.010335],[9.429845],[1.655490],[-7.803612],[-2.649157],[-0.781785],[6.850394],[-6.833450],[8.803097],[0.255712],[9.071337],[6.385411],[0.294756],[0.199796],[0.679137],[-0.607935],[-8.420299],[4.984351],[-6.041068],[8.945389],[-8.498475],[-3.560790],[-8.502747],[5.442977],[-4.997515],[-3.933654],[4.349495],[0.442135],[5.703177],[-0.080705],[3.300854],[7.843783],[-0.323041],[9.540267],[2.846812],[5.501703],[2.073671],[7.050349],[8.678897],[1.432186],[4.031799],[4.055454],[4.062719],[-8.232685],[8.110756],[-7.141606],[3.949163],[-5.321187],[-1.377249],[-7.237422],[-0.037332],[6.914584],[6.713614],[8.761948],[-6.370356],[1.652508],[-5.032003],[-6.526357],[9.180425],[-8.954430],[3.482897],[-4.449763],[9.797278],[-8.148463],[-0.543608],[1.482650],[9.739933],[-0.365708],[3.510854],[5.445446],[-3.733656],[-2.706313],[0.908219],[1.308987],[1.151912],[6.743053],[-1.669592],[5.984180],[-2.294022],[9.652506],[-5.487319],[6.741601],[-0.423060],[6.200104],[-6.179545],[6.841309],[1.514900],[5.395513],[-6.380967],[1.497731],[5.881214],[-6.727136],[-7.008631],[5.418646],[0.859909],[-9.124952],[6.417121],[4.388479],[9.213767],[8.500858],[7.410968],[9.175987],[-5.598858],[2.781143],[7.766883],[-2.368424],[3.234883],[-1.259210],[-6.669386],[-4.033481],[-7.957723],[-8.355859],[5.425534],[9.932841],[-7.948189],[-5.328129],[6.481654],[-5.183721],[-9.808917],[-8.440171],[-1.236554],[-4.493078],[3.456988],[-4.774340],[-5.447595],[-6.836636],[4.596805],[-5.684575],[-8.013379],[6.154287],[9.062987],[8.456885],[8.556697],[-1.001184],[1.967648],[1.173377],[-1.849242],[-8.957376],[-0.521060],[4.199160],[9.332179],[-1.303018],[-9.729746],[9.854390],[-5.551426],[4.028571],[-6.963732],[7.195201],[-7.327265],[-6.735260],[-3.922067],[-6.339612],[1.258037],[5.626402],[5.014614],[1.688556],[-9.364827],[4.629838],[-8.996272],[0.530090],[4.203099],[-3.579261],[2.455858],[-7.674580],[-0.182018],[-2.881298],[-3.758839],[2.400524],[9.831608],[-9.209007],[9.055411],[5.526515],[2.498420],[4.982636],[-1.020915],[-6.491611],[7.005685],[8.011900],[-9.218792],[9.528896],[-0.736811],[-7.992706],[-4.565371],[1.139878],[-1.876870],[-1.628330],[7.735471],[9.359726],[-1.750486],[-8.944742],[2.012392],[-4.054843],[-1.834926],[-9.198494],[4.502053],[1.129364],[3.489391],[4.259513],[7.604341],[3.998191],[-0.817909],[5.825423],[6.573543],[-1.806124],[6.633286],[-5.137871],[7.052266],[-9.575595],[1.011386],[1.837573],[-9.862963],[-1.284698],[-1.380618],[9.776106],[-4.880475],[1.439526],[-6.724956],[-5.496651],[4.595756],[6.708316],[-4.283004],[7.517772],[-8.786058],[5.956116],[-8.801902],[1.798013],[0.230883],[-0.748060],[5.853968],[9.759482],[-0.217465],[-4.563757],[6.306677],[2.450033],[9.576102],[-2.594330],[-8.215501],[2.526412],[0.148201],[-0.905502],[6.313379],[-3.124277],[-6.091258],[-7.526044],[-1.790543],[0.754170],[-4.604104],[6.582392],[3.550393],[-1.558135],[4.798337],[-8.314810],[0.541008],[-8.818749],[-2.722885],[-4.158474],[-1.248290],[-2.263658],[-9.087982],[-2.286735],[-7.728968],[4.302197],[4.444652],[-5.642091],[0.341980],[5.557540],[2.729672],[9.363803],[-1.754110],[5.516176],[-9.667138],[-3.515692],[-2.772821],[9.352339],[-2.161937],[7.517096],[-2.803322],[0.324913],[0.886037],[-4.382388],[1.212262],[6.801367],[0.542199],[7.837158],[9.024010],[-0.236434],[-1.791572],[-8.086883],[2.803241],[8.990929],[-9.750589],[-6.814336],[-7.643634],[-8.791136],[0.813203],[-2.950102],[4.946971],[-0.620541],[-3.018315],[-3.868390],[-0.971234],[-6.308709],[3.111748],[-6.072149],[-5.346833],[-6.759788],[-2.631687],[1.788988],[9.669111],[6.735216],[-7.297135],[5.226379],[7.051148],[-5.711671],[2.087546],[1.939941],[2.275926],[-6.743934],[1.767525],[1.190439],[2.315773],[-0.266969],[-4.005618],[-8.717156],[5.701173],[8.499563],[7.786023],[5.500672],[-3.989283],[6.814627],[-9.240349],[5.380911],[-2.098134],[0.262992],[-2.477305],[5.928696],[-5.701946],[-1.772143],[-6.317719],[-8.406559],[-7.724362],[3.298247],[-9.587212],[-3.820483],[5.869366],[-0.781466],[5.798057],[3.540662],[-1.810143],[0.401119],[-8.426483],[-8.197791],[-7.136139],[7.924462],[7.398740],[-1.272804],[8.540289],[5.775801],[7.784153],[-4.880791],[7.853236],[-9.762743],[7.303266],[-9.455006],[-1.747306],[-5.132594],[5.628125],[-2.025199],[9.122071],[-9.437544],[6.993648],[-9.653429],[-3.503092],[3.255421],[-5.782719],[-3.854079],[-6.897446],[-4.140885],[5.972049],[5.436021],[-5.009374],[-0.972510],[-7.704355],[2.895778],[-6.942341],[-6.011714],[-9.062367],[0.176694],[2.144236],[-7.163839],[-6.002903],[4.538328],[-6.789607],[-9.511136],[0.104396],[6.870528],[-0.405380],[3.432483],[-7.225633],[-4.029052],[-1.149575],[0.278336],[-9.325929],[1.608282],[6.421676],[1.968715],[4.619363],[-4.907139],[-3.758075],[3.481223],[1.076803],[4.449046],[-8.587485],[-3.313706],[4.540844],[0.063273],[-0.742336],[-4.918131],[4.782958],[-9.090914],[-4.482641],[7.006501],[-5.118811],[5.618594],[-6.367905],[-2.882379],[2.770451],[9.188113],[-9.432937],[8.154847],[6.106770],[4.704499],[5.594289],[-3.854684],[-4.805243],[8.813649],[-5.030970],[-7.899021],[-4.947696],[3.112787],[-7.413211],[-1.009053],[9.484796],[6.409370],[-5.996025],[6.242651],[2.854320],[2.127923],[-4.512442],[-0.215576],[-1.333361],[7.021875],[-0.965920],[4.968289],[3.802426],[9.783555],[9.236037],[-9.679074],[-5.484209],[-6.969855],[-5.270298],[-6.806260],[0.152659],[-5.004903],[7.896241],[-4.695851],[-2.266362],[-1.005270],[9.859563],[9.312298],[-5.887775],[-9.261263],[6.878506],[-6.227530],[-6.914260],[-1.089850],[-5.466191],[-0.898202],[-9.414522],[2.139534],[1.604731],[4.552308],[-3.568271],[-6.920983],[8.032434],[-2.738025],[2.230996],[5.524453],[8.452766],[-7.414847],[6.519746],[-2.636329],[6.093342],[1.983633],[4.357865],[7.943043],[-8.756994],[-0.649122],[-1.346741],[-6.674047],[2.153381],[9.501949],[9.482845],[4.731118],[-8.695316],[-3.543558],[-0.001475],[3.709110],[2.015968],[3.979597],[6.085781],[-6.633958],[2.735893],[-2.377570],[0.906011],[6.194620],[-6.270905],[5.466009],[-4.736386],[-9.776741],[-1.952618],[-3.203425],[-3.099642],[-4.808635],[-9.413707],[-4.715417],[-8.532899],[4.652915],[-0.299843],[9.469185],[-0.358585],[-1.848171],[2.605207],[-0.085045],[-3.987117],[-1.968967],[2.061490],[8.899240],[-0.639292],[7.842364],[9.879067],[0.695339],[-4.768196],[7.268547],[-2.810623],[0.001439],[3.424845],[5.845775],[5.443532],[-8.932428],[4.830664],[6.957073],[9.474014],[-4.492158],[-8.715711],[-8.173278],[7.575538],[-7.358785],[-4.712159],[-5.722785],[-6.659801],[7.439147],[4.196365],[6.675716],[-5.541274],[-3.462350],[-0.626439],[-6.847839],[-3.584243],[-9.204334],[0.097537],[-1.007377],[-8.655726],[-1.164779],[-7.275083],[7.593075],[-8.964903],[9.937618],[-6.623496],[8.011683],[-9.481342],[-1.957763],[2.016067],[3.010376],[7.013203],[-6.132755],[-0.799647],[9.586721],[5.424509],[-3.654752],[9.982002],[8.796810],[-8.224066],[5.183035],[0.869227],[-4.924150],[7.878626],[-8.080122],[7.788004],[-3.611713],[3.928217],[9.940519],[-5.149951],[-8.184389],[2.146301],[6.526084],[7.582000],[-7.242542],[8.739062],[-9.544481],[-6.446624],[8.753059],[0.655954],[-2.434153],[3.597253],[0.905750],[-2.316762],[-8.944322],[8.162714],[-9.397464],[9.509654],[7.898846],[-0.540931],[0.385031],[-0.006183],[-4.259460],[-7.842243],[-7.756235],[-2.490787],[-3.520094],[8.732875],[-1.182772],[6.149037],[-8.260367],[-6.610307],[5.136012],[4.702338],[-3.790759],[-9.464454],[8.055380],[5.775968],[-5.648752],[9.986255],[6.271635],[0.643819],[3.298167],[6.347576],[-7.755109],[9.707706],[0.818773],[-1.876389],[7.246174],[-5.819413],[6.409253],[9.719270],[1.138242],[8.521789],[-2.133266],[-3.517850],[-2.521557],[-0.443775],[-6.093257],[1.000709],[-1.421595],[-4.610156],[-9.150697],[-2.632237],[-5.722185],[4.476668],[5.161181],[-2.911197],[3.539070],[-7.521505],[3.962906],[9.487510],[1.705777],[8.750980],[1.657580],[-6.816038],[8.908860],[-1.086219],[5.221949],[-3.256667],[2.357675],[-3.003435],[-8.861379],[4.869879],[-6.338043],[-2.932679],[-1.441074],[8.942571],[1.696468],[2.091541],[5.412831],[-2.324626],[-1.856067],[8.724252],[4.820138],[3.049169],[4.855235],[8.232659],[7.770680],[-1.959462],[4.968009],[3.088150],[-2.923860],[9.660574],[6.523522],[0.638890],[-3.100156],[-6.694947],[-3.260540],[5.659489],[2.051302],[-9.573586],[-6.144286],[-9.334270],[-9.949025],[2.552912],[8.617301],[1.611046],[0.324574],[3.194020],[3.627667],[0.894931],[-6.184671],[7.216931],[5.405943],[-2.296262],[7.589897],[-9.331930],[7.973000],[2.689604],[6.735332],[8.276461],[2.743381],[-4.844567],[2.532315],[-5.033254],[-4.426367],[-7.065857],[0.274643],[2.140606],[-2.040787],[5.812878],[-4.930004],[1.804512],[-7.133183],[0.386374],[3.546484],[3.189954],[4.146271],[1.825411],[0.593632],[-4.097192],[-5.747596],[3.036073],[-7.466137],[-3.212855],[-7.798159],[-3.782496],[4.263085],[-8.986572],[1.579171],[2.656434],[-3.658994],[1.525453],[2.432868],[-7.198744],[-0.437638],[-1.666690],[-7.287366],[-4.914699],[1.594293],[5.159611],[-7.236620],[-8.754037],[-9.822928],[-7.836779],[3.104207],[-1.283400],[-2.180831],[0.711930],[5.611137],[-5.921216],[-1.533745],[-8.429043],[-6.421561],[0.317199],[6.564280],[-0.832782],[4.680416],[-6.242929],[2.121886],[8.346753],[-3.365909],[6.083205],[2.399593],[-9.118240],[-8.979757],[7.584371],[-5.370189],[3.123423],[-3.031165],[-9.405677],[-8.741294],[-6.956285],[2.015631],[9.408625],[9.868717],[3.784338],[-6.498528],[-7.676215],[-7.397417],[-3.588620],[5.092568],[4.770970],[6.145732],[1.995874],[-5.032599],[-9.135660],[-6.588325],[-7.899433],[7.873261],[-1.441197],[-9.467665],[-8.269226],[-8.821623],[-2.028482],[-5.884538],[-3.390021],[-6.398918],[1.425487],[-6.355248],[-7.907607],[-3.213038],[9.966592],[4.069143],[-0.719336],[2.054653],[7.554109],[2.761927],[3.607651],[-9.141960],[-2.366991],[-1.977430],[-6.927573],[-5.933361],[8.971528],[-9.295627],[9.033255],[-3.287837],[7.724289],[-6.595623],[-0.604622],[6.731288],[2.174311],[8.793929],[-7.918815],[8.934172],[-2.457163],[9.682828],[-8.506955],[-6.983765],[8.000221],[8.817233],[2.100855],[3.591761],[2.516815],[7.290999],[-3.608383],[7.847826],[7.722181],[-1.634587],[-2.211507],[-6.088586],[2.423774],[-0.933664],[1.029578],[3.831465],[3.581161],[-9.903528],[-1.237174],[-4.104225],[0.332799],[2.321042],[-2.104276],[-1.056213],[-2.967793],[8.461151],[-0.042793],[5.730982],[-4.251345],[0.295557],[3.880357],[-7.789001],[-0.928223],[2.918274],[-9.630622],[-8.069116],[3.295894],[0.410983],[4.854005],[9.583000],[-4.889393],[-3.765863],[-0.833547],[2.431792],[8.459992],[5.198537],[3.405266],[-1.404410],[-1.149728],[9.733166],[9.323527],[-8.712794],[1.444799],[-5.256044],[5.402862],[-6.229266],[-0.383652],[-5.857562],[3.339803],[5.740697],[0.788261],[5.590941],[-9.243487],[-5.316091],[9.949822],[-9.318101],[6.791009],[-3.956069],[-0.538195],[6.966910],[-1.331289],[-1.421545],[8.477814],[-3.321574],[-0.328601],[4.778171],[-6.264974],[-9.788941],[-5.043718],[6.274168],[-6.377255],[-0.972316],[-6.692892],[3.230173],[7.408102],[6.185078],[-6.895754],[3.243374],[-6.963238],[-1.571638],[1.076264],[-7.866094],[-7.125090],[3.013419],[7.504011],[1.411175],[-7.818170],[-4.732240],[-5.712584],[3.605378],[-3.415250],[7.691072],[-2.007777],[-8.429640],[-0.958736],[4.314882],[9.226223],[2.837420],[8.519598],[-0.525118],[9.475318],[-6.494283],[-5.972680],[6.111257],[-2.475733],[-7.344726],[9.271428],[-6.382796],[-9.101070],[-7.791755],[0.394060],[4.702100],[-1.584975],[9.580484],[0.067207],[-2.080379],[3.922887],[-6.243335],[6.724301],[-2.948582],[-8.708105],[4.773922],[-3.987315],[-0.616427],[-8.615114],[-1.068654],[-8.616368],[-3.869772],[-9.532315],[-5.004700],[-0.050063],[5.327661],[-6.451377],[5.852763],[9.733250],[0.797083],[-0.489538],[9.980077],[-2.369385],[-8.674618],[-0.169570],[5.225183],[-7.093008],[1.161806],[2.935366],[-0.980378],[1.922896],[4.604707],[1.226278],[5.714279],[-0.556433],[-5.360807],[0.547542],[2.803167],[1.243013],[1.723326],[-2.243331],[4.542748],[-8.532146],[-6.114413],[-9.795260],[2.932734],[-1.730095],[5.130941],[8.643863],[-2.606757],[-1.418257],[7.260740],[-5.252594],[5.713416],[-2.606440],[3.638609],[9.504481],[8.856933],[-6.823959],[5.143850],[-0.725972],[-6.899867],[3.454762],[-4.922485],[-0.104989],[-4.914254],[7.551673],[7.645516],[5.166898],[-6.437587],[1.824320],[-7.106567],[-4.467731],[-5.056153],[5.122492],[9.836294],[3.024273],[-6.638926],[-8.266063],[3.604435],[8.743943],[2.007651],[3.202469],[-4.384887],[4.905056],[-1.385208],[8.189122],[-2.785784],[-0.285895],[-5.616180],[-1.458303],[0.009688],[5.437433],[8.013116],[-1.764563],[-2.509168],[-0.122317],[8.073916],[-2.125192],[-1.645441],[-7.394844],[-0.271176],[-8.745241],[0.201408],[-7.230220],[-5.084575],[3.278535],[-4.538247],[-2.349581],[-3.332219],[-3.294609],[-5.640887],[-8.930845],[3.037856],[-2.628750],[7.409170],[-5.549017],[-2.651000],[-1.528573],[-5.015995],[9.954071],[4.070223],[-8.883084],[4.166543],[5.530350],[-5.719416],[-1.801322],[7.164819],[-7.429752],[-0.525037],[-3.940041],[6.107151],[5.276678],[8.058436],[9.949072],[-2.768392],[2.998559],[8.921605],[3.930247],[-2.434073],[2.324206],[3.706429],[1.070553],[-5.719273],[3.060018],[-3.400900],[-5.068942],[-5.339782],[1.698311],[8.778852],[8.997027],[7.889880],[-1.890886],[3.534369],[8.005764],[-4.845102],[-7.332402],[0.116635],[-0.662802],[6.313852],[-8.048313],[-7.015096],[0.678822],[-0.516078],[-3.976261],[7.030643],[-8.421913],[-2.432733],[0.732547],[-6.178094],[2.608412],[7.931977],[-5.613079],[-0.013386],[6.882309],[-1.913345],[6.493513],[-3.529393],[-4.602840],[-2.674010],[3.848544],[-4.939680],[-7.918546],[-4.123849],[-2.358327],[5.072724],[1.434603],[1.390447],[2.297919],[9.520195],[9.999343],[-4.276120],[-7.226060],[3.027991],[4.961533],[8.858458],[3.200342],[-3.676202],[7.268390],[-5.075512],[-8.425328],[9.249842],[-4.049460],[9.422084],[-2.057851],[-9.028626],[7.619413],[6.836496],[-5.835210],[-3.395557],[-7.706599],[-8.799826],[0.271597],[0.041595],[8.990711],[7.615749],[3.642748],[0.800212],[0.021097],[8.868710],[4.367919],[-7.991948],[-7.491795],[-3.053215],[-4.325356],[4.114522],[7.553376],[6.314363],[-0.368912],[7.591458],[-8.090147],[3.217485],[1.024213],[6.659686],[-8.438189],[5.923726],[1.865347],[-3.805150],[9.327523],[-6.514198],[7.242277],[-6.083934],[1.840509],[2.995953],[-3.601630],[0.759354],[2.019858],[9.694818],[4.282804],[-7.331130],[1.966814],[-2.171556],[8.570985],[3.109176],[8.307924],[-0.654770],[8.640240],[0.881622],[-6.098083],[-3.936332],[3.081808],[6.919585],[0.338186],[-6.700511],[-7.856055],[-6.254018],[-3.970567],[-6.436445],[5.441730],[-7.863318],[2.606007],[5.230333],[8.619074],[4.100578],[8.081569],[-0.944004],[6.912509],[-5.840026],[-0.187503],[6.929612],[8.806905],[9.434094],[-7.111333],[1.498823],[2.499154],[6.481585],[-2.210662],[9.781033],[7.059486],[-9.546208],[-5.200599],[-1.341859],[-8.609987],[-7.395516],[3.134526],[0.315439],[5.382206],[-8.479700],[-9.835331],[0.407968],[8.773213],[-8.658848],[0.750837],[4.023958],[-3.831105],[-7.055261],[-4.614059],[-8.961313],[6.923155],[-8.932144],[6.843952],[9.258755],[-5.557793],[-6.796098],[3.335465],[-0.889204],[-7.700972],[-7.195186],[-3.053347],[1.502033],[6.165457],[6.482452],[-4.223958],[1.080779],[0.264376],[-3.066014],[6.587418],[1.705251],[9.932900],[8.378523],[-6.929583],[3.137486],[-1.618693],[-1.840102],[8.899500],[-1.370836],[8.576983],[-3.577350],[4.431917],[5.790907],[0.507747],[0.088826],[1.212715],[-4.422121],[1.391783],[0.506309],[6.841153],[-1.761116],[0.087253],[-8.565037],[-5.431812],[6.332895],[2.435055],[5.017651],[7.035619],[1.257402],[-4.415432],[-6.092898],[2.649586],[-3.515540],[-4.779082],[-0.676064],[-1.994363],[0.190588],[-5.534356],[-4.537807],[-7.131667],[-7.909858],[-3.831950],[8.361629],[4.269671],[-8.762460],[7.039867],[0.384960],[-4.778649],[2.804090],[-3.312946],[-1.602435],[8.925582],[-5.243402],[-3.146265],[-7.599631],[-7.423991],[-5.125223],[3.457595],[8.347955],[-9.505375],[-9.728775],[-6.824622],[-3.298993],[-2.450344],[3.146424],[-6.359627],[5.112388],[7.965175],[9.540974],[8.510164],[1.260116],[-2.290366],[-9.077882],[1.998873],[-4.064252],[6.083758],[0.088928],[2.495539],[-9.298772],[-7.350056],[-9.368663],[-2.896970],[-9.331679],[0.188658],[8.318792],[6.066120],[-1.974013],[-6.376577],[4.522181],[-5.009785],[8.521345],[0.257244],[0.401912],[-9.277130],[-4.814807],[8.816688],[6.564702],[-2.247155],[-3.629362],[0.688431],[-6.848202],[-5.976095],[7.005867],[6.684653],[-8.869140],[-0.799384],[-8.754803],[-3.962770],[-3.840048],[2.255991],[0.403985],[8.363002],[-3.075739],[-3.261843],[8.916138],[-0.316926],[6.314202],[3.033824],[7.341541],[9.975353],[-0.743891],[6.942149],[5.809807],[5.059480],[3.687904],[-9.461071],[5.730867],[3.422666],[-1.097421],[-6.765126],[-4.750427],[0.226120],[5.459514],[-8.661947],[-1.915782],[-7.069281],[2.978753],[6.742725],[-0.619490],[1.574636],[5.997908],[-1.386024],[1.964682],[2.074475],[-6.394663],[-6.658871],[-0.812687],[-5.860004],[-3.133527],[3.904821],[-0.894432],[5.743447],[5.700858],[2.496102],[0.390295],[5.196126],[-2.065998],[-4.729780],[-4.459635],[6.112152],[4.122574],[9.978950],[-0.415625],[-5.866063],[-6.970919],[4.177583],[9.279649],[-0.579058],[7.354574],[-9.711928],[-0.301002],[2.034696],[-4.616487],[9.158419],[2.790110],[9.286834],[-6.265559],[8.919146],[-7.540706],[3.413873],[6.079057],[8.796217],[9.030167],[8.816079],[4.943466],[-3.422398],[-3.967369],[9.478071],[6.822174],[4.384316],[5.386369],[7.966608],[4.593613],[-2.085564],[-9.657214],[-7.256195],[-6.903732],[4.391594],[9.622862],[-3.647573],[-0.131158],[1.412221],[2.730557],[4.829030],[0.043579],[7.842008],[3.519959],[-7.552578],[2.637237],[-9.999128],[-8.919465],[6.527341],[8.029288],[-2.899016],[-6.033515],[2.424324],[1.581761],[3.383404],[1.611568],[1.682493],[8.097263],[-2.357852],[-7.858633],[2.561341],[7.063047],[2.035960],[-2.834264],[6.910379],[8.760581],[-2.435878],[-0.590906],[6.939828],[-2.565122],[-0.221194],[8.627361],[-4.631419],[7.831277],[-0.599479],[4.745875],[7.014860],[0.703974],[-6.624361],[-4.253718],[4.313621],[-3.139769],[7.264612],[-8.320402],[-0.020832],[1.158191],[-2.322012],[0.505802],[0.315860],[7.210373],[-7.065047],[1.285336],[-2.179985],[-8.867538],[-4.440539],[-1.169154],[0.161110],[5.402912],[3.977562],[2.113470],[9.967236],[6.350219],[1.063147],[-0.655382],[9.697829],[-4.838543],[0.909119],[8.830960],[1.047240],[-4.090152],[-7.583453],[6.375095],[4.653397],[-1.930333],[-9.187719],[5.421315],[-5.085477],[-2.859043],[9.312880],[-2.702067],[-4.840335],[-3.375425],[-6.371980],[8.927023],[3.376374],[4.635886],[-1.342107],[5.832411],[-1.076642],[8.549565],[4.061118],[-7.821888],[9.127706],[-0.567298],[4.482100],[0.416626],[5.398455],[2.957383],[6.884280],[6.918982],[4.232697],[1.889682],[-8.764251],[5.608565],[-9.269805],[3.134722],[5.332627],[-2.513615],[-8.028326],[3.589174],[4.815966],[-2.938135],[-7.905575],[7.260911],[-5.413778],[7.241195],[3.930149],[-0.390509],[1.647396],[-4.821996],[-6.350755],[-3.685814],[1.268670],[-5.091896],[2.774701],[-4.346951],[-4.033187],[7.873960],[-3.044007],[-9.464633],[-4.345241],[-6.800828],[-5.025829],[3.002154],[0.163841],[-2.885629],[6.873570],[3.721981],[5.229283],[0.305674],[-4.848886],[5.497462],[-6.326398],[6.769402],[3.854596],[5.937878],[7.530499],[-3.400682],[-1.372282],[-7.066695],[8.429077],[9.253645],[2.809951],[-5.056357],[-7.024841],[6.783517],[2.839587],[3.105234],[9.650324],[-7.737820],[9.860778],[-9.845453],[-8.813190],[-7.258587],[-2.271316],[-1.798823],[5.148723],[3.139487],[-5.104756],[2.190345],[4.586625],[4.702463],[-6.523846],[-9.538964],[-7.556395],[-8.141688],[-1.141253],[-1.419240],[9.278819],[-2.380291],[2.472304],[-3.113665],[-6.403834],[5.678371],[5.908092],[-2.482143],[9.219157],[7.259541],[-0.479028],[-6.791444],[-4.135952],[-6.559679],[3.314833],[9.507564],[-0.018908],[7.967068],[-3.898375],[-6.622336],[1.837792],[-3.580176]], dtype = "float64")#candidate|7815|(2940, 1)|const|float64
call_7814 = relay.TupleGetItem(func_6512_call(relay.reshape(const_7815.astype('float64'), [2940,])), 1)
call_7816 = relay.TupleGetItem(func_6515_call(relay.reshape(const_7815.astype('float64'), [2940,])), 1)
func_7314_call = mod.get_global_var('func_7314')
func_7318_call = mutated_mod.get_global_var('func_7318')
var_7825 = relay.var("var_7825", dtype = "float32", shape = (3,))#candidate|7825|(3,)|var|float32
const_7826 = relay.const([1.978222,0.339748,0.400603,2.902568,0.520479,-5.608680,-6.149534,9.592638,5.200379,6.050959,-8.871149,0.328937,9.756083,0.158562,6.546592,-4.901380,-8.520624,8.342586,-1.321012,-7.364109,-3.943253,-5.346240,-4.828888,4.203004,4.717744,9.117468,1.598715,-2.091640,6.472495,6.230001,-3.460734,2.821899,-4.660646,-5.254558,2.667715,-7.289180,-4.270554,2.060465,5.952563,-3.876261,2.515186,-8.783093,-1.801672,8.292293,-9.847843,-6.908287,-9.650147,-7.437364,-3.707032,-2.592042,4.460761,5.781109,9.901516,-0.820357,-7.159021,2.142985,-6.201311,-8.035358,6.902668,-9.382254,-3.888575,-6.942473,-4.972034,6.143635,5.257296,4.125440,2.132139,-6.520931,5.740220,3.704868,6.300173,3.017932,-9.748739,-1.378701,3.882960,6.522933,9.166393,3.237854,-9.806664,3.560771,-8.423576,-2.588364,8.206929,-2.064816,7.258527,-2.038775,5.307542,-7.848084,0.535624,5.744171,9.238890,8.331286,-6.394347,5.654997,6.669665,-5.575321,4.811325,0.244194,-2.819023,2.031053,2.778794,-7.771312,6.066433,-9.113533,-5.775045,6.856983,9.745291,-7.053661,0.997410,-8.093003,-2.760402,-6.963706,-3.142695,0.650896,-2.589182,-7.177265,-0.800255,-7.192061,-4.935447,6.021691,-8.862859,-8.074581,4.119320,7.578932,-7.300704,2.407742], dtype = "float32")#candidate|7826|(126,)|const|float32
call_7824 = func_7314_call(relay.reshape(var_7825.astype('float32'), [3, 1, 1]), relay.reshape(const_7826.astype('float32'), [3, 6, 7]), )
call_7827 = func_7314_call(relay.reshape(var_7825.astype('float32'), [3, 1, 1]), relay.reshape(const_7826.astype('float32'), [3, 6, 7]), )
output = relay.Tuple([call_7809,call_7814,const_7815,call_7824,var_7825,const_7826,])
output2 = relay.Tuple([call_7810,call_7816,const_7815,call_7827,var_7825,const_7826,])
func_7828 = relay.Function([var_7825,], output)
mod['func_7828'] = func_7828
mod = relay.transform.InferType()(mod)
var_7829 = relay.var("var_7829", dtype = "float32", shape = (3,))#candidate|7829|(3,)|var|float32
output = func_7828(var_7829)
func_7830 = relay.Function([var_7829], output)
mutated_mod['func_7830'] = func_7830
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7714_call = mod.get_global_var('func_7714')
func_7715_call = mutated_mod.get_global_var('func_7715')
call_7838 = relay.TupleGetItem(func_7714_call(), 0)
call_7839 = relay.TupleGetItem(func_7715_call(), 0)
uop_7870 = relay.sinh(call_7838.astype('float32')) # shape=(8, 16, 8)
uop_7872 = relay.sinh(call_7839.astype('float32')) # shape=(8, 16, 8)
output = relay.Tuple([uop_7870,])
output2 = relay.Tuple([uop_7872,])
func_7874 = relay.Function([], output)
mod['func_7874'] = func_7874
mod = relay.transform.InferType()(mod)
mutated_mod['func_7874'] = func_7874
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7874_call = mutated_mod.get_global_var('func_7874')
call_7875 = func_7874_call()
output = call_7875
func_7876 = relay.Function([], output)
mutated_mod['func_7876'] = func_7876
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7714_call = mod.get_global_var('func_7714')
func_7715_call = mutated_mod.get_global_var('func_7715')
call_7884 = relay.TupleGetItem(func_7714_call(), 0)
call_7885 = relay.TupleGetItem(func_7715_call(), 0)
func_2096_call = mod.get_global_var('func_2096')
func_2099_call = mutated_mod.get_global_var('func_2099')
const_7887 = relay.const(-2, dtype = "uint64")#candidate|7887|()|const|uint64
var_7888 = relay.var("var_7888", dtype = "uint64", shape = (56, 8))#candidate|7888|(56, 8)|var|uint64
call_7886 = func_2096_call(relay.reshape(const_7887.astype('uint64'), []), relay.reshape(var_7888.astype('uint64'), [7, 4, 16]), )
call_7889 = func_2096_call(relay.reshape(const_7887.astype('uint64'), []), relay.reshape(var_7888.astype('uint64'), [7, 4, 16]), )
output = relay.Tuple([call_7884,call_7886,const_7887,var_7888,])
output2 = relay.Tuple([call_7885,call_7889,const_7887,var_7888,])
func_7896 = relay.Function([var_7888,], output)
mod['func_7896'] = func_7896
mod = relay.transform.InferType()(mod)
mutated_mod['func_7896'] = func_7896
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7897 = relay.var("var_7897", dtype = "uint64", shape = (56, 8))#candidate|7897|(56, 8)|var|uint64
func_7896_call = mutated_mod.get_global_var('func_7896')
call_7898 = func_7896_call(var_7897)
output = call_7898
func_7899 = relay.Function([var_7897], output)
mutated_mod['func_7899'] = func_7899
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7714_call = mod.get_global_var('func_7714')
func_7715_call = mutated_mod.get_global_var('func_7715')
call_7901 = relay.TupleGetItem(func_7714_call(), 0)
call_7902 = relay.TupleGetItem(func_7715_call(), 0)
output = call_7901
output2 = call_7902
func_7915 = relay.Function([], output)
mod['func_7915'] = func_7915
mod = relay.transform.InferType()(mod)
mutated_mod['func_7915'] = func_7915
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7915_call = mutated_mod.get_global_var('func_7915')
call_7916 = func_7915_call()
output = call_7916
func_7917 = relay.Function([], output)
mutated_mod['func_7917'] = func_7917
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7943 = relay.var("var_7943", dtype = "bool", shape = (14, 5, 5))#candidate|7943|(14, 5, 5)|var|bool
var_7944 = relay.var("var_7944", dtype = "bool", shape = (14, 5, 5))#candidate|7944|(14, 5, 5)|var|bool
bop_7945 = relay.logical_and(var_7943.astype('bool'), relay.reshape(var_7944.astype('bool'), relay.shape_of(var_7943))) # shape=(14, 5, 5)
output = bop_7945
output2 = bop_7945
func_7951 = relay.Function([var_7943,var_7944,], output)
mod['func_7951'] = func_7951
mod = relay.transform.InferType()(mod)
mutated_mod['func_7951'] = func_7951
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7951_call = mutated_mod.get_global_var('func_7951')
var_7953 = relay.var("var_7953", dtype = "bool", shape = (14, 5, 5))#candidate|7953|(14, 5, 5)|var|bool
var_7954 = relay.var("var_7954", dtype = "bool", shape = (14, 5, 5))#candidate|7954|(14, 5, 5)|var|bool
call_7952 = func_7951_call(var_7953,var_7954,)
output = call_7952
func_7955 = relay.Function([var_7953,var_7954,], output)
mutated_mod['func_7955'] = func_7955
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7915_call = mod.get_global_var('func_7915')
func_7917_call = mutated_mod.get_global_var('func_7917')
call_7966 = func_7915_call()
call_7967 = func_7915_call()
func_4904_call = mod.get_global_var('func_4904')
func_4908_call = mutated_mod.get_global_var('func_4908')
var_7997 = relay.var("var_7997", dtype = "int8", shape = (180,))#candidate|7997|(180,)|var|int8
call_7996 = relay.TupleGetItem(func_4904_call(relay.reshape(var_7997.astype('int8'), [2, 9, 10]), relay.reshape(var_7997.astype('int8'), [2, 9, 10]), ), 0)
call_7998 = relay.TupleGetItem(func_4908_call(relay.reshape(var_7997.astype('int8'), [2, 9, 10]), relay.reshape(var_7997.astype('int8'), [2, 9, 10]), ), 0)
output = relay.Tuple([call_7966,call_7996,var_7997,])
output2 = relay.Tuple([call_7967,call_7998,var_7997,])
func_8011 = relay.Function([var_7997,], output)
mod['func_8011'] = func_8011
mod = relay.transform.InferType()(mod)
mutated_mod['func_8011'] = func_8011
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8012 = relay.var("var_8012", dtype = "int8", shape = (180,))#candidate|8012|(180,)|var|int8
func_8011_call = mutated_mod.get_global_var('func_8011')
call_8013 = func_8011_call(var_8012)
output = call_8013
func_8014 = relay.Function([var_8012], output)
mutated_mod['func_8014'] = func_8014
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7874_call = mod.get_global_var('func_7874')
func_7876_call = mutated_mod.get_global_var('func_7876')
call_8024 = relay.TupleGetItem(func_7874_call(), 0)
call_8025 = relay.TupleGetItem(func_7876_call(), 0)
output = call_8024
output2 = call_8025
func_8028 = relay.Function([], output)
mod['func_8028'] = func_8028
mod = relay.transform.InferType()(mod)
mutated_mod['func_8028'] = func_8028
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8028_call = mutated_mod.get_global_var('func_8028')
call_8029 = func_8028_call()
output = call_8029
func_8030 = relay.Function([], output)
mutated_mod['func_8030'] = func_8030
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8076 = relay.var("var_8076", dtype = "int64", shape = (3, 13, 16))#candidate|8076|(3, 13, 16)|var|int64
const_8077 = relay.const([[[-2,-8,-4,8,1,-6,-10,9,-2,-9,-7,9,-10,7,-6,5],[-3,-4,9,-7,-6,3,4,3,10,-5,2,-8,-1,-8,-3,4],[5,5,2,4,-4,1,2,-4,-5,1,2,-2,2,9,-4,-3],[1,-2,-7,8,-5,9,-2,-2,-1,4,10,-6,7,-10,-8,-9],[9,1,-8,-9,-7,-2,3,-6,7,-8,8,-3,-9,8,-6,-6],[8,4,6,3,-4,-2,1,1,-2,6,5,6,4,3,1,-6],[-9,-7,6,8,-4,-6,2,2,-6,-3,10,5,5,4,9,5],[2,3,-1,-7,3,2,1,-7,-6,10,-10,-10,4,1,3,1],[9,3,-5,8,4,-3,-6,3,-1,-8,1,7,1,9,3,9],[-6,-5,3,-8,3,-3,2,-9,-1,3,4,-7,8,-8,10,5],[2,-6,3,-3,5,-3,3,9,10,8,-2,6,-3,-2,-2,6],[7,10,-7,-6,10,-1,-3,7,-2,7,9,5,10,2,4,-7],[-3,-3,-9,-5,8,1,6,-5,2,4,7,-3,7,-10,-7,-6]],[[-3,1,7,10,9,9,9,4,7,-3,7,3,5,-9,-10,3],[3,5,7,7,5,3,-1,-5,5,5,6,-10,-3,3,1,9],[9,7,-9,4,-2,8,-6,-2,-3,-4,6,9,-2,-5,10,8],[7,-5,-10,10,8,5,-3,4,5,2,-4,3,7,1,-3,5],[4,8,-9,-8,-8,-10,10,-4,3,-8,-1,3,10,-5,2,-5],[-10,-2,3,7,-1,-2,-10,-7,6,-10,-6,-7,6,9,2,4],[-7,2,-4,-1,5,-9,-4,7,-2,9,9,-4,5,-3,-7,8],[3,4,-10,-6,10,1,-2,4,-7,-3,6,-1,1,8,1,10],[10,1,10,-9,1,-4,10,8,-10,6,-8,-9,-1,5,-6,3],[-10,8,-10,-10,-8,-7,-4,-8,5,2,-8,-10,-9,10,3,-1],[-6,5,-7,10,-1,4,1,2,5,-9,5,4,6,9,-5,-2],[-1,-10,4,-2,4,-2,9,1,8,-10,9,8,8,-5,-10,-6],[4,9,-6,2,-8,-7,8,2,-5,-10,-6,10,-6,7,-1,-8]],[[10,4,-8,-8,-1,-5,10,-5,-2,1,-1,-2,-7,-6,-5,-5],[10,1,-6,-4,3,-5,9,-9,-3,8,5,-3,-10,-1,3,-8],[-7,-1,-1,1,-6,-8,-4,-5,9,-1,5,7,4,8,5,-10],[-8,-9,-6,2,5,-9,7,4,-9,-2,-10,8,8,1,4,8],[-10,1,-7,10,-3,9,-2,9,9,-4,2,-2,9,-4,3,-7],[10,1,-2,-9,9,-8,2,-2,1,-7,7,-1,-1,9,10,-8],[-5,8,-9,4,-5,-9,-10,-8,-7,1,-4,-10,1,10,-7,-4],[7,-10,10,-4,-6,2,6,-4,4,-6,-2,-5,8,-6,4,-7],[-1,9,3,-6,8,3,-7,6,-6,10,-9,-3,-10,3,-9,9],[9,1,1,9,5,-3,10,-4,2,-4,-10,-9,6,-8,-4,6],[3,7,5,5,-9,2,8,8,1,2,-1,-4,4,-3,-9,4],[-4,-7,-9,9,-1,-9,-9,8,9,3,-2,8,-1,6,9,3],[3,4,-2,-1,-4,-1,-9,2,10,9,-4,-8,7,-4,-4,-10]]], dtype = "int64")#candidate|8077|(3, 13, 16)|const|int64
bop_8078 = relay.bitwise_and(var_8076.astype('int64'), relay.reshape(const_8077.astype('int64'), relay.shape_of(var_8076))) # shape=(3, 13, 16)
func_4270_call = mod.get_global_var('func_4270')
func_4273_call = mutated_mod.get_global_var('func_4273')
const_8082 = relay.const([[True,False,True,False,True,True,True,True,False,True,False,True,True,True,False,False,False,False,False,True,True,True,False,False,True,False,True,True,False,True,False,True,True,True,True,False,False,True,False,True,False,False,False,True,True,False,False,True,False,False,False,False,True,False,False,True,True,False,False,True,True,False,True,False,True,False,True,False,True,True,True,False,True,True,True,False,True,True],[False,True,True,False,True,True,True,False,False,False,False,False,True,True,False,False,True,True,True,False,True,False,True,False,False,False,True,False,True,False,True,True,False,True,True,True,False,False,True,False,False,True,False,False,False,False,False,False,True,True,False,True,False,False,True,False,False,True,False,True,True,False,False,True,True,False,True,True,False,False,True,True,False,True,True,False,True,True],[False,False,True,True,True,True,True,True,True,True,False,False,True,True,False,True,True,True,True,False,False,False,False,True,True,False,False,False,True,True,True,True,True,False,False,True,True,True,False,True,True,False,True,False,True,True,True,False,False,True,False,False,True,True,True,False,True,True,False,False,False,True,False,True,False,False,False,True,False,False,False,True,False,True,True,False,False,False],[False,False,True,True,False,False,False,True,False,True,False,False,False,False,False,False,False,False,False,False,True,False,True,False,True,True,True,False,True,False,True,False,False,False,True,True,True,True,False,True,False,True,False,False,True,False,False,True,False,True,False,True,True,True,True,True,False,True,True,False,True,False,False,True,True,True,False,False,False,True,True,False,False,True,True,True,True,True],[True,True,False,True,True,False,False,False,True,False,True,False,False,False,True,False,False,False,True,False,False,True,True,True,False,True,True,True,True,False,False,False,False,True,True,True,True,True,True,False,True,True,False,False,True,True,False,True,True,False,False,True,True,True,True,True,True,False,False,False,False,True,False,False,False,True,True,True,False,True,True,True,False,True,True,True,True,False],[True,False,False,True,False,True,False,True,True,True,True,True,True,True,False,True,False,False,False,True,True,False,False,False,False,False,False,True,False,True,True,True,True,True,False,True,True,False,False,False,False,True,True,True,True,False,True,True,False,True,False,False,False,True,False,False,True,False,True,True,True,True,False,True,False,False,False,True,True,True,True,True,False,True,False,True,True,True],[False,True,True,True,True,True,False,False,True,True,False,False,True,False,True,True,True,False,False,True,True,True,False,True,False,True,False,False,False,True,False,True,False,True,False,False,False,False,False,True,True,False,True,False,False,True,False,True,True,False,True,False,True,True,True,True,False,True,True,True,False,True,False,True,False,False,True,False,False,True,True,True,True,True,False,False,False,False]], dtype = "bool")#candidate|8082|(7, 78)|const|bool
call_8081 = relay.TupleGetItem(func_4270_call(relay.reshape(const_8082.astype('bool'), [7, 13, 6]), relay.reshape(const_8082.astype('bool'), [7, 13, 6]), ), 0)
call_8083 = relay.TupleGetItem(func_4273_call(relay.reshape(const_8082.astype('bool'), [7, 13, 6]), relay.reshape(const_8082.astype('bool'), [7, 13, 6]), ), 0)
func_4270_call = mod.get_global_var('func_4270')
func_4273_call = mutated_mod.get_global_var('func_4273')
call_8084 = relay.TupleGetItem(func_4270_call(relay.reshape(call_8081.astype('bool'), [7, 13, 6]), relay.reshape(call_8081.astype('bool'), [7, 13, 6]), ), 0)
call_8085 = relay.TupleGetItem(func_4273_call(relay.reshape(call_8081.astype('bool'), [7, 13, 6]), relay.reshape(call_8081.astype('bool'), [7, 13, 6]), ), 0)
func_673_call = mod.get_global_var('func_673')
func_676_call = mutated_mod.get_global_var('func_676')
const_8087 = relay.const([-6,-4,2,-2,10,4,-4,2,-10,-1,-8,-8,6,10,7,-5,-4,-5,8,1,1,-1,6,7,2,8,1,-1,-7,8,-8,-8,2,9,1,8,-5,-6,-4,-6,3,8,-1,10,2,1,10,4,-3,10,5,5,-6,-3,-4,-9,-5,2,8,2,-9,-9,4,-1,-8,-10,-8,5,6,6,-6,-8,4,7,-1,1,5,8,-5,6,-9,-6,-1,-5,-8,-6,8,5,3,5,2,3,9,-7,-10,10,7,-8,-7,-5,4,9,-7,-5,10,-2,5,2,-7,-8,1,-8,-4,-9,9,-7,-5,-4,-5,-3,-8,-9,-2,-9,-9,-8,5,-9,10,3,1,-2,-10,-1,7,10,-8,-10,-10,-1,-6,-7,5,-3,3,-4,-5,3,5,10,7,-7,9,-9,-8,5,-9,6,-10,9,-4,10,-1,5,-8,-8,-7,3,-4,-6,-3,8,-5,6,-3,9,-9,-9,5,-8,10,-9,3,-2,4,-1,9,1,-4,-9,3,6,-8,-4,-10,-5,10,-5,8,2,-7,1,2,2,-8,-5,-1,-4,-8,2,-5,-8,5,-8,3,6,-2,-8,8,10,-8,-8,-10,8,3,7,10,-10,1,5,7,3,-8,-2,10,-2,-1,-9,-3,10,-8,-3,-2,-1,-1,6,10,7,-4,-4,-5,3,7,8,1,-5,4,-9,-10,-3,9,-1,1,-8,-1,9,1,1,-6,-7,6,7,-9,-10,7,4,-3,6,4,-10,8,-8,-3,-6,-9,-5,-4,-7,-9,4,10,-3,-2,6,-4,-1,-6,-1,2,-8,-10,-6,-7,9,-7,5,2,10,-8,-2,-7,-9,5,-1,-7,6,4,-4,-4,-1,8,10,-6,6,1,8,-2,-10,-7,4,10,3,-1,-8,-4,7,5,-3,-10,-4,-6,6,1,5,-6,4,-8,-3,8,5,10,-3,9,-5,7,-9,-6,-1,10,-5,-4,4,5,-2,-7,-2,-10,2,-3,8,8,2,-2,-1,10,9,-2,-7,-10,-10,5,4,9,5,-6,-3,-10,-10,-10,5,4,4,-6,-3,-10,-5,-6,-10,-6,-6,-10,9,-4,2,-8,3,-2,-10,-10,7,7,-6,-1,-6,3,-1,3,-5,-7,-2,-4,6,6,4,-8,-7,-3,8,9,-2,7,7,3,8,9,-6,-9,-10,-10,-10,-5,5,-9,-3,6,5,3,3,6,-8,1,9,-8,-4,3,-7,4,8,5,-4,-1,2,2,9,-7,4,-1,-10,10,-7,2,3,8,-9,-5,3,3,7,1,3,3,9,-10,2,5,-3,3,-2,7,3,-4,7,2,-3,10,-4,-3,6,10,-3,7,-1,-4,-3,-4,-5,3,-6,-6,1,-4,10,5,-1,5,-1,2,7,7,-8,-8,-9,-5,-9,3,8,2,5,5,2,9,-6,-7,6,-5,-5,7,6,-9,4,3,-9,9,2,-9,-6,10,-9,5,1,2,-2,9,3,-1,2,-1,10,-5,6,9,-2,5,5,1,-1,3,-3,1,2,5,7,7,5,-10,-7,4,7,3,9,-10,-6,-4,-5,7,9,1,9,3,-1,-7,-1,10,-10,2,6,10,4,2,-10,-5,4,-7,6,-9,7,7,-8,-8,9,-8,1,-8,-3,-2,-3,4,-7,-2,-4,-1,-10,-9,-7,-7,-6,-3,2,-1,6,-1,-4,-8,-7,3,-3,2,-7,2,-9,-10,3,-1,-7,-3,8,1,9,3,2,-9,4,-10,4,5,-2,-6,10,-1,4,9,-8,-5,2,2,6,10,-3,-3,6,-10,-4,-5,-6,1,-2,3,3,-4,-4,10,8,-1,2,-9,1,7,6,8,-8,-3,9,8,-1,-8,1,-8,8,1,3,-10,-9,-8,7,-10,-6,5,10,9,8,-10,-5,-9,8,-5,-1,-5,-10,-9,10,-3,-4,-2,-2,6,8,10,-4,6,-2,-3,6,7,-1,-4,-6,9,-5,-4,2,8,6,5,8,2,-4,5,2,-7,-6,6,-8,-2,6,2,6,1,-8,1,-10,6,-7,6,-2,-4,6,10,7,-8,10,2,-8,9,1,-3,-3,7,-1,1,7,-10,5,6,-4,4,2,1,1,7,-7,5,1,-2,-4,-4,8,4,5,-5,4,-4,-7,8,4,10,-8,-3,-6,9,-8,2,8,9,-8,4,-4,-2,-5,9,-8,1,5,-4,1,-2,8,-4,2,2,10,5,6,4,-8,1,1,1,-5,6,10,-6,-2,7,-6,5,4,-9,-7,-2,-6,-10,-4,-3,-8,7,-9,-8,-5,-4,-1,6,-10,6,10,10,-10,2,-3,-4,-6,-9,-6,-5,-2,-4,1,-8,7,-6,-1,-2,9,6,-1,-1,3,-1,10,2,6,-5,-7,5,7,10,10,-1,-8,-8,-9,-5,2,-3,-1,-4,-2,5,2,-5,3,-8,-9,-1,6,-5,2,-7,-3,7,-9,4,-10,3,1,8,3,-9,5,-1,-3,5,-4,10,-5,5,9,-5,8,-8,6,-5,4,-3,-5,-9,9,-2,8,-10,2,-5,5,-8,8,4,-4,2,2,-6,-8,-3,-10,-9,10,1,5,1,-8,2,4,9,-4,5,-6,1,7,10,1,-6,-9,1,5,-3,-10,8,-3,-2,-7,3,8,-9,9,2,1,3,9,5,5,-4,4,-10,8,-6,-1,-10,4,-3,1,7,7,1,3,9,-3,-4,6,8,8,-3,-4,7,2,-2,-9,-2,-8,-2,10,-8,6,-2,8,8,-5,-6,-2,6,4,7,-7,-10,6,6,5,9,-8,4,2,-5,-1,-5,-5,-10,-10,-4,8,4,8,-9,3,-6,8,8,-2,-8,-3,9,-3,7,-6,10,7,-7,1,-1,4,5,5,-4,6,1,3,7,7,-9,7,6,-3,-2,-10,1,8,8,9,2,1,5,1,2,-8,-2,10,10,2,-8,-2,-8,4,4,7,-1,9,-6,9,-10,-1,-1,-10,-4,10,-9,-2,-3,-5,2,-4,4,-2,-4,8,-8,-6,-10,10,1,10,4,-8,-8,5,5,-4,3,-9,7,-2,-8,5,-7,6,7,-7,-7,2,-8,-7,6,-3,-9,7,2,2,10,-10,4,-2,-9,4,5,-1,-2,-5,-2,-1,-1,-9,-10,2,8,-4,5,5,-6,-2,-6,-4,-3,-1,9,8,-10,2,-7,9,-8,10,-10,9,-6,9,-6,-2,-3,-6,3,-2,-8,-5,1,-2,9,-4,7,-7,6,4,-2,-3,-7,7,10,7,6,-4,-5,9,8,-5,7,-7,9,-7,8,-7,-6,9,6,7,-7,2,-7,8,-2,-10,6,-4,-9,-7,10,3,8,3,5,5,-10,4,6,3,-6,9,-8,-6,-5,-3,-6,-10,-8,6,2,7,-8,9,4,4,-3,-9,-9,8,-9,10,9,8,4,3,7,9,-1,-9,-10,-5,9,4,1,1,-4,3,-2,1,7,1,-3,9,-9,-1,3,-2,1,10,1,-2,-4,-10,-8,-2,6,10,4,-5,10,-1,-1,-5,10,-4,9,-8,1,-9,9,-7,-5,-6,6,3,7,-7,9,-1,-1,2,1,5,7,4,-7,3,-5,10,-10,5,9,8,-8,-8,5,1,9,-1,-1,-2,-5,-10,-4,2,-5,3,-3,-3,3,-3,3,-6,1,-1,-2,1,-10,8,1,-9,-10,-2,7,-7,-9,9,-2,6,-4,-6,-10,4,7,-3,3,-9,-6,8,-8,-4,-5,1,-9,1,-4,2,5,3,9,4,-9,6,4,9,-1,9,5,3,6,7,-2,-3,4,-1,-3,-6,-8,10,-8,-3,1,5,3,9,-4,1,-5,5,2,4,-2,8,5,-1,-6,-2,-10,10,-6,5,5,-8,-10,-2,10,8,8,-4,-5,-4,3,7,-6,9,7,-2,9,5,-4,10,4,-7,-5,5,-10,-10,-8,6,-5,6,6,6,-9,-5,-9,6,-4,-8,-6,10,4,8,-8,-4,7,6,-7,1,3,-8,2,8,6,6,10,9,5,-4,10,-5,-7,4,-3,-1,-10,9,-2,9,-6,2,-10,-8,6,7,1,5,-3,3,2,2,-2,8,-1,-1,-2,1,-4,7,2,-6,-8,-2,-7,-8,-10,5,-1,-5,9,-7,1,-5,8,2,7,-2,8,7,10,8,-4,-3,7,-9,-6,-9,6,-9,-5,-4,-3,-9,-10,-10,-2,10,3,-2,1,-9,10,3,10,-2,-7,7,-3,-10,-3,-5,9,2,1,4,-7,-1,9,-5,-8,-3,-3,4,9,9,4,-6,1,7,-3,-4,-2,-9,8,9,1,2,4,-10,-2,4,4,1,9,-5,-6,3,5,8,-6,-1,9,-2,1,-6,10,-1,10,-10,-7,-1,6,-1,-6,6,8,-10,3,9,-4,9,3,-10,1,1,-5,-2,-6,3,4,3,-7,8,-5,-5,4,-6,-3,1,6,-1,6,-3,-8,6,6,-3,-4,-10,-2,9,9,2,-2,6,-6,-1,2,-9,-10,2,4,-8,8,9,-3,5,-4,5,-1,3,10,2,-8,2,-5,6,2,10,-2,-10,-7,-8,-2,-8,6,10,7,-9,4,5,-8,1,-4,7,-1,-2,2,1,5,-4,-3,8,-8,-5,8,4,-2,5,-9,4,1,-8,10,-4,-9,7,-5,-1,1,9,-5,-7,-9,3,-9,6,2,3,-5,8,-7,7,-9,-9,2,4,-1,2,-5,6,1,4,-9,-7,3,-10,10,6,-6,2,1,5,6,1,-4,7,-2,9,7,-6,1,3,-3,-1,-4,-5,10,8,-9,9,-6,9,7,-9,-3,-5,1,8,-6,3,3,-6,9,-8,1,-4,-4,-6,10,-3,4,-9,-7,1,7,5,1,4,-5,10,10,4,-6,2,10,9,5,-9,9,6,-1,8,2,3,4,3,7,7,10,9,7,3,10,-2,1,4,9,-5,-2,8,4,-2,-9,-4,8,-8,-3,-9,-5,9,1,8,-5,-10,-3,-5,-10,-8,3,7,-7,-10,-7,3,-8,-6,6,-8,8,8,-8,8,7,6,-2,-5,9,-9,-2,8,5,-10,1,1,-8,1,-1,6,9,-2,-7,9,-2,-6,-1,6,-10,6,-6,1,6,-2,4,-5,-1,1,-3,8,1,10,10,-7,-4,-4,-9,-4,8,2,-5,-5,5,8,8,-3,-10,10,-1,-10,1,-3,8,5,-5,-10,-5,9,-2,-8,-3,-9,4,-2,-8,7,-6,-2,-10,-2,6,-7,6,-1,-3,9,7,-10,9,5,-4,-9,-5,-5,-7,-1,-9,-6,-6,-1,3,6,8,-3,8,6,-4,-2,-3,-5,-4,-7,-7,-7,-7,4,8,4,-6,5,-6,-5,4,-1,-6,1,-3,4,9,-2,10,10,6,6,-10,-7,1,-9,9,4,-6,-5,3,-10,-1,-3,-10,8,7,-9,2,5,8,-8,4,4,9,9,-1,8,-3,10,2,-1,-2,5,-6,9,4,3,-3,8,-6,-6,9,-8,3,-8,-8,5,9,5,-10,-1,4,-4,1,-1,-2,4,10,-4,10,9,2,9,4,9,10,2,-4,-3,2,-1,-10,6,7,-3,5,-8,-8,8,-10,-7,9,-6,-8,9,2,4,7,2,-3,2,8,3,-6,7,-10,-8,-6,3,5,5,3,1,-1,-5,-9,10,-8,3,-6,10,9,-4,-6,10,-10,-1,6,5,7,2,9,-5,-7,-9,-1,6,10,-4,8,6,-10,-10,-10,-4,7,5,9,10,-8,-8,9,6,5,-4,3,10,-10,8,7,9,9,7,3,6,6,8,-10,-5,-4,8,2,1,-8,1,4,-9,-3,-2,4,8,2,7,2,-4,4,6,-2,7,-7,-7,-10,3,-3,-2,1,-6,7,4,7,10,2,7,-4,-3,-3,-1,7,8,8,-4,1,-3,-5,-10,5,-4,-7,-10,-3,1,5,1,-5,-1,-9,2,-7,8,2,-4,9,3,-7,6,-7,-8,-6,-6], dtype = "uint16")#candidate|8087|(2250,)|const|uint16
call_8086 = relay.TupleGetItem(func_673_call(relay.reshape(const_8087.astype('uint16'), [15, 15, 10])), 0)
call_8088 = relay.TupleGetItem(func_676_call(relay.reshape(const_8087.astype('uint16'), [15, 15, 10])), 0)
var_8095 = relay.var("var_8095", dtype = "uint16", shape = (15, 15, 10))#candidate|8095|(15, 15, 10)|var|uint16
bop_8096 = relay.logical_and(call_8086.astype('bool'), relay.reshape(var_8095.astype('bool'), relay.shape_of(call_8086))) # shape=(15, 15, 10)
bop_8099 = relay.logical_and(call_8088.astype('bool'), relay.reshape(var_8095.astype('bool'), relay.shape_of(call_8088))) # shape=(15, 15, 10)
func_5723_call = mod.get_global_var('func_5723')
func_5725_call = mutated_mod.get_global_var('func_5725')
var_8117 = relay.var("var_8117", dtype = "uint16", shape = (11,))#candidate|8117|(11,)|var|uint16
call_8116 = relay.TupleGetItem(func_5723_call(relay.reshape(var_8117.astype('uint16'), [1, 1, 11])), 0)
call_8118 = relay.TupleGetItem(func_5725_call(relay.reshape(var_8117.astype('uint16'), [1, 1, 11])), 0)
output = relay.Tuple([bop_8078,call_8081,const_8082,call_8084,const_8087,bop_8096,call_8116,var_8117,])
output2 = relay.Tuple([bop_8078,call_8083,const_8082,call_8085,const_8087,bop_8099,call_8118,var_8117,])
func_8119 = relay.Function([var_8076,var_8095,var_8117,], output)
mod['func_8119'] = func_8119
mod = relay.transform.InferType()(mod)
var_8120 = relay.var("var_8120", dtype = "int64", shape = (3, 13, 16))#candidate|8120|(3, 13, 16)|var|int64
var_8121 = relay.var("var_8121", dtype = "uint16", shape = (15, 15, 10))#candidate|8121|(15, 15, 10)|var|uint16
var_8122 = relay.var("var_8122", dtype = "uint16", shape = (11,))#candidate|8122|(11,)|var|uint16
output = func_8119(var_8120,var_8121,var_8122,)
func_8123 = relay.Function([var_8120,var_8121,var_8122,], output)
mutated_mod['func_8123'] = func_8123
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8028_call = mod.get_global_var('func_8028')
func_8030_call = mutated_mod.get_global_var('func_8030')
call_8165 = func_8028_call()
call_8166 = func_8028_call()
output = relay.Tuple([call_8165,])
output2 = relay.Tuple([call_8166,])
func_8173 = relay.Function([], output)
mod['func_8173'] = func_8173
mod = relay.transform.InferType()(mod)
mutated_mod['func_8173'] = func_8173
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8173_call = mutated_mod.get_global_var('func_8173')
call_8174 = func_8173_call()
output = call_8174
func_8175 = relay.Function([], output)
mutated_mod['func_8175'] = func_8175
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7714_call = mod.get_global_var('func_7714')
func_7715_call = mutated_mod.get_global_var('func_7715')
call_8192 = relay.TupleGetItem(func_7714_call(), 0)
call_8193 = relay.TupleGetItem(func_7715_call(), 0)
func_7783_call = mod.get_global_var('func_7783')
func_7784_call = mutated_mod.get_global_var('func_7784')
call_8194 = func_7783_call()
call_8195 = func_7783_call()
func_7629_call = mod.get_global_var('func_7629')
func_7632_call = mutated_mod.get_global_var('func_7632')
var_8207 = relay.var("var_8207", dtype = "uint64", shape = (14, 28))#candidate|8207|(14, 28)|var|uint64
call_8206 = relay.TupleGetItem(func_7629_call(relay.reshape(var_8207.astype('uint64'), [4, 7, 14])), 6)
call_8208 = relay.TupleGetItem(func_7632_call(relay.reshape(var_8207.astype('uint64'), [4, 7, 14])), 6)
output = relay.Tuple([call_8192,call_8194,call_8206,var_8207,])
output2 = relay.Tuple([call_8193,call_8195,call_8208,var_8207,])
func_8232 = relay.Function([var_8207,], output)
mod['func_8232'] = func_8232
mod = relay.transform.InferType()(mod)
var_8233 = relay.var("var_8233", dtype = "uint64", shape = (14, 28))#candidate|8233|(14, 28)|var|uint64
output = func_8232(var_8233)
func_8234 = relay.Function([var_8233], output)
mutated_mod['func_8234'] = func_8234
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8337 = relay.var("var_8337", dtype = "float64", shape = (8, 11, 3))#candidate|8337|(8, 11, 3)|var|float64
uop_8338 = relay.acosh(var_8337.astype('float64')) # shape=(8, 11, 3)
output = relay.Tuple([uop_8338,])
output2 = relay.Tuple([uop_8338,])
func_8347 = relay.Function([var_8337,], output)
mod['func_8347'] = func_8347
mod = relay.transform.InferType()(mod)
mutated_mod['func_8347'] = func_8347
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8348 = relay.var("var_8348", dtype = "float64", shape = (8, 11, 3))#candidate|8348|(8, 11, 3)|var|float64
func_8347_call = mutated_mod.get_global_var('func_8347')
call_8349 = func_8347_call(var_8348)
output = call_8349
func_8350 = relay.Function([var_8348], output)
mutated_mod['func_8350'] = func_8350
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8028_call = mod.get_global_var('func_8028')
func_8030_call = mutated_mod.get_global_var('func_8030')
call_8387 = func_8028_call()
call_8388 = func_8028_call()
func_7314_call = mod.get_global_var('func_7314')
func_7318_call = mutated_mod.get_global_var('func_7318')
const_8393 = relay.const([1.520679,3.886679,-7.272724], dtype = "float32")#candidate|8393|(3,)|const|float32
const_8394 = relay.const([-8.535407,6.241829,-2.798281,-2.539550,-3.082893,-8.346140,-5.515908,-9.442547,-1.208450,-9.326338,-7.306338,-5.121106,-0.301144,-9.036108,-9.521013,6.505164,3.549697,9.845453,-6.744463,-8.568846,0.257664,-5.392102,1.529962,-5.573891,-6.885258,3.125852,-8.183397,-6.851278,1.100952,-6.341823,-2.611326,-7.249407,1.140497,8.563378,3.534929,-4.345319,8.345065,0.868878,0.568584,-2.772386,-2.486345,-9.024939,5.120929,5.574590,9.083507,-0.686271,-2.066620,-9.380473,0.115098,9.843958,7.434548,2.671971,-1.650283,1.565043,-3.423342,6.405059,5.123606,-8.940613,-8.115876,6.997016,5.814333,5.111470,-2.515631,5.025003,-5.368541,0.868675,-0.883093,-9.736269,3.119858,-3.326592,9.203326,-2.656030,4.991655,3.851697,-8.431970,-0.188980,-9.024819,9.065773,6.651545,-2.470359,7.787851,9.100858,-8.850937,-2.004946,8.355500,-8.756455,-8.195619,8.311614,7.697697,7.431872,-4.271232,7.284496,-8.878650,2.827571,-4.850598,1.570859,6.850511,7.997540,-0.648813,0.814174,3.356594,-9.151623,-8.193080,1.477904,-6.019449,-9.913853,-9.519795,7.308398,-8.363955,-7.023453,3.318412,0.241152,-1.929629,-1.539134,-3.283655,-5.647637,8.005796,-5.163655,9.399798,6.949159,-0.702098,-2.267258,-4.752203,4.549926,-6.447397,8.061150], dtype = "float32")#candidate|8394|(126,)|const|float32
call_8392 = func_7314_call(relay.reshape(const_8393.astype('float32'), [3, 1, 1]), relay.reshape(const_8394.astype('float32'), [3, 6, 7]), )
call_8395 = func_7314_call(relay.reshape(const_8393.astype('float32'), [3, 1, 1]), relay.reshape(const_8394.astype('float32'), [3, 6, 7]), )
output = relay.Tuple([call_8387,call_8392,const_8393,const_8394,])
output2 = relay.Tuple([call_8388,call_8395,const_8393,const_8394,])
func_8424 = relay.Function([], output)
mod['func_8424'] = func_8424
mod = relay.transform.InferType()(mod)
mutated_mod['func_8424'] = func_8424
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8424_call = mutated_mod.get_global_var('func_8424')
call_8425 = func_8424_call()
output = call_8425
func_8426 = relay.Function([], output)
mutated_mod['func_8426'] = func_8426
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7915_call = mod.get_global_var('func_7915')
func_7917_call = mutated_mod.get_global_var('func_7917')
call_8489 = func_7915_call()
call_8490 = func_7915_call()
func_2534_call = mod.get_global_var('func_2534')
func_2536_call = mutated_mod.get_global_var('func_2536')
const_8499 = relay.const([4.293750,3.679150,-5.817922,-9.575306,1.000615,-2.176226,-4.936675,2.239153,9.411795,-5.395231,9.160485,-0.539622,7.047369,6.195619,1.652764,1.301366,-1.545211,6.095734,0.966294,-3.055848,6.492057,-2.124347,-4.963505,2.573570,-7.817651,-5.758099,-4.685969,-7.216584,-8.200005,1.846882,-7.108011,-4.643769,2.589535,3.471697,-0.827588,7.265471,-1.859689,4.717140,7.088329,-5.665739,-4.784592,-9.490556,-9.804876,-6.679300,-3.557041,-3.219431,-2.682782,4.998020,-6.722600,-5.490046,4.307264,-2.489364,-5.116774,-1.096070,0.968390,6.059473,4.163256,-7.549603,-1.533037,5.424886,-9.455201,-1.665590,-3.421805,5.660313,-2.677058,6.995602,3.131215,-8.658584,7.081168,-9.696047,0.019140,-4.135543,4.007737,-2.761377,6.023160,-3.882067,5.336188,-6.036617,5.023579,-7.759205,-4.297506,3.453664,-3.069266,7.972244,-6.274464,-4.298287,4.630904,-6.159964,9.926809,-3.329887,-1.275883,2.402628,8.043381,-0.089313,3.871031,7.023531,-2.467704,2.039864,-3.102710,0.950338,-9.634318,-3.615102,-4.717973,-6.839482,-4.669884,0.821366,-3.339468,-0.180365,-6.286841,-0.165916,-9.907392,0.093372,-8.461492,4.339031,1.562521,8.785709,-8.809641,3.327238,-2.123536,-6.206858,0.675132,-0.860664,-1.458248,6.130186,1.472215,-2.984334,1.639642,-5.863176,7.893824,-1.387464,-7.709434,-9.763114,-4.724313,-1.348500,-5.492953,9.656022,-9.443700,9.882577,-1.668295,0.777800,-9.507630,7.978739,-7.526588,0.486723,9.136727,-6.537978,6.176358,-6.692898,6.006695,-4.196537,-5.261287,2.846719,8.472080,9.661404,4.840955,4.293596,0.203093,-9.309044,9.599843,0.626283,7.414272,-6.071517,-9.937179,-4.069030,5.792568,5.402705,-8.268614,-1.228560,5.203361,-0.236742,6.489972,-9.562808,-0.938271,-0.474732,-8.458261,1.362847,6.907090,-8.640970,-0.552405,0.511160,-7.522902,8.119309,7.980116,-6.881316,-2.362046,-7.310426,9.339395,-0.297881,8.792185,3.140367,-2.393047,9.799751,-9.247871,6.733655,6.226775,4.445887,-7.236667,-6.611287,-0.527467,-0.538119,5.051596,-4.839952,-2.567743,2.686942,0.066882,7.596640,0.241966,-1.043496,6.440424,-6.932155,-3.645844,-1.154092,5.554448,0.304541,3.121801,-2.284616,-9.376857,8.836105,1.328935,-1.378110,7.643717,-6.324057,-3.897109,4.255556,-1.270039,-5.209129,2.777443,9.591185,-8.479999,-4.652925,3.989795,-4.934540,-9.179116,-5.745250,-1.882581,-6.758464,-9.480010,-9.912381,6.960360,-5.440321,-5.761279,8.034407,0.169662,-4.899078,9.683940,-9.191145,7.061496,-0.340620,-2.087764,4.909721,9.495990,8.810633,-2.990170,-0.628885,8.973224,1.611157,-9.194114,6.115240,-9.787013,7.002707,-1.153614,-3.443283,-3.220796,0.269552,8.899073,-9.309241,0.818902,-7.314574,4.834523,7.713421,-8.135468,-1.276205,8.500792,-4.141499,2.345332,1.006623,3.679729,4.555853,-9.455259,8.118619,7.239394,-7.518098,1.169130,-8.830669,-4.507112,7.036650,5.988134,0.662175,1.155591,-4.557694,0.636423,-2.623286,2.828180,-1.783459,0.668659,0.035199,7.888045,5.812427,-2.898949,-8.143327,7.988985,1.437242,1.148373,-7.592297,8.489985,-3.245057,-9.131840,9.517275,-2.211183,-0.930946,9.654788,0.766125,1.253307,3.380978,-5.747360,-9.760561,5.034814,-4.846190,-1.721273,4.477760,5.843122,-7.318881,0.954599,5.036068,-8.463585,5.299053,0.039288,-6.334361,2.565724,7.104953,9.007717,7.124937,8.208340,-8.237284,-1.121563,0.804955,6.149786,-8.963521,-3.027117,-7.025440,8.997418,-0.959343,-4.507619,6.206634,7.804343,-6.457729,3.628581,0.566490,3.224836,-2.589338,-4.189964,-5.496056,-2.857502,-4.467435,-1.831506,5.402082,-2.455515,2.030329,-6.107694,-1.990578,2.782189,8.512163,-4.992663,5.590487,-4.041941,-3.533043,-2.570390,-6.683118,7.287479,0.563873,7.246527,2.582377,-6.639280,4.101214,8.191622,-4.541421,-3.918873,2.506414,5.588022,-8.120291,6.809463,-6.638109,4.009138,-2.908363,7.283061,4.438746,-5.488949,-9.997402,9.532782,7.327132,9.758639,7.586896,4.444782,-6.506521,6.717805,-2.474266,6.194623,-9.676036,0.124888,1.938719,-1.918383,-0.825591,6.307857,-9.071506,-7.112479,-1.179586,7.390556,9.409408,-8.719464,0.025736,-9.228431,-2.705731,-3.771877,8.972181,2.924210,-1.364808,8.476406,-5.391348,2.522865,9.907985,5.366289,8.888147,4.706994,9.615957,3.617427,5.154202,3.667296,7.476102,3.732021,3.847810,-7.339683,-9.805695,-9.415787,-4.294647,6.387307,8.486565,9.488160,-1.754360,1.581214,0.981328,-7.206263,6.267622,-0.325894,-8.888533,6.038902,4.322711,7.453423,6.487402,-4.451014,-3.955150,0.091671,-7.784626,-2.607938,3.751492,9.218255,-0.279483,5.740382,3.546214,4.738511,4.739784,2.708917,-0.182089,9.113264,1.263752,9.640511,3.254654,3.329761,-6.010844,-1.222873,-7.974402,-2.117185,-5.342425,-7.055309,8.311925,8.967652,-4.545169,3.757771,2.030821,-2.266874,7.818786,-2.356672,-2.089520,-4.911731,-1.281769,-8.859081,-9.130936,4.850976,-1.206141,-6.373319,3.485014,1.905587,0.374320,-8.624263,3.890982,2.712214,0.685301,9.904493,3.800133,-3.397692,6.158691,-1.362360,9.549802,-2.992840,7.913716,4.274651,-2.471848,-2.657692,-2.407623,-3.604339,0.752275,-1.017002,-5.911077,-1.933252,7.330350,1.467136,0.926373,6.087948,3.462291,3.913830,-5.315900,-5.613947,9.755536,-3.641986,3.142110,0.258016,-1.793060,2.378289,9.920831,8.279786,-4.412305,5.449955,-9.493781,-2.778259,-7.629297,4.093953,2.619892,0.750789,-4.958290,-0.630725,2.779495,5.067095,8.122605,-8.935817,-2.285491,6.495585,-6.800709,0.291554,5.761879,-7.660617,0.097565,0.451231,3.920182,7.961724,-4.694884,-2.596091,6.872597,-5.454746,-8.767639,3.484591,-1.905775,-2.360347,-9.213260,9.257475,4.902607,4.613963,6.098839,1.107198,-1.545334,0.734835,-0.043825,-1.565310,0.493753,-1.479763,8.135547,-1.923909,3.743322,-8.408147,-2.264990,7.966944,3.201500,-2.286793,2.700017,-7.712212,-5.424964,3.321885,5.961546,-0.002269,-9.651803,-4.588318,3.401738,8.494673,5.927273,-4.915020,9.080130,-5.011511,-8.139531,-3.651189,-3.412741,4.836113,-0.598439,-8.581451,-8.794233,-0.439456,0.445776,-4.701673,6.099058,8.095262,3.637803,2.780805,-9.097735,-8.381582,-0.855137,-1.267427,2.194842,-3.649398,-6.013381,5.731749,7.152999,2.485320,-4.827460,9.706843,0.159754,5.381826,-4.219986,-6.150474,-8.922982,-4.616253,6.438724,9.012723,-2.838979,-6.646309,-4.152267,-3.579242,9.338324,6.711045,8.952622,8.858960,8.390074,-6.161734,8.000375,-0.825961,6.452258,9.128274,-0.784268,7.638779,-1.108762,9.397681,4.164373,-2.252569,-3.589286,-5.272570,1.301158,-5.562104,-9.605062,-7.292764,0.958110,5.388699,6.302195,3.819906,-9.664800,6.925108,-5.852759,4.949241,-6.727083,-9.354004,5.280127,-9.415520,3.438087,-5.292619,5.780238,8.341432,3.080441,0.382957,1.112174,-9.933188,8.920795,-8.222379,3.887933,5.371178,-4.089277,-6.385437,8.940228,-8.352218,7.410829,-4.771800,9.115441,-2.055989,1.149183,-2.686608,-4.810547,-2.081591,-7.008411,-6.323316,-1.198534,3.267682,5.761612,5.748532,-7.114532,0.464059,-3.490078,8.185378,-8.358780,-7.092372,0.566174,-5.622924,-5.940778,-4.687089,-8.143006,-1.274034,-5.749907,9.938922,8.437275,-3.526917,-0.455817,3.711388,-0.609974,-0.496538,-0.046936,-7.409989,9.194016,-4.061078,2.843167,-2.769388,9.523784,-6.254620,-2.037965,8.470486,-3.681277,-5.338048,-5.015564,6.977469,-4.256185,1.985637,2.528852,-1.371513,-4.511418,-3.396675,1.869988,6.460466,8.976498,1.125483,3.616292,4.648975,-8.324316,-2.119420,4.325703,8.466584,-7.056848,5.848572,-7.047224,-4.922800,-1.962663,-1.212745,-5.680723,-2.740700,-6.723550,4.719533,-1.120007,6.570190,-3.011132,7.006770,-6.242846,3.937124,0.555462,-8.524397,5.755248,7.156736,8.295750,9.706742,1.183475,4.128433,3.375988,-8.528447,5.812721,4.699577,7.003902,0.856074,4.073366,-8.780014,1.616327,2.548704,-6.636155,-6.149330,-4.169726,7.370321,5.252606,1.635858,3.699747,8.434718,-2.772718,9.959666,1.717698,1.409294,1.168827,-3.261077,-6.696428,2.574287,-2.003297,-3.428517,-9.271605,-5.586744,-4.272675,-8.048865,4.276362,-8.672260,-2.753732,-3.321790,-4.954175,7.746420,4.676814,6.558771,2.516523,-7.097436,-3.541403,-3.266818,-6.318081,8.112001,4.167602,0.377569,4.814484,-0.827024,6.111810,4.566631,-1.104493,1.619708,-5.024311,5.743979,-8.705947,2.506818,-5.499739,3.458371,4.631324,4.527433,-4.938570,6.852825,-7.794137,-4.697542,-3.193232,9.249717,-1.291412,1.992625,4.395914,-2.312302,-6.517614,5.393435,9.847512,-4.873141,6.319483,3.319809,-0.205543,5.530402,-2.405500,-7.603753,1.169394,0.267393,-4.445987,2.858923,8.893334,1.225657,0.286626,-7.214160,1.584030,9.848196,-6.503029,1.362727,-4.250744,1.411209,-3.890471,7.417815,-4.689749,8.788260,2.633932,-5.724447,-2.013581,8.907070,-1.625411,-5.143743,-8.630363,-7.489679,7.172725,4.025287,-0.447491,-6.982258,-2.530079,3.741606,9.206290,1.840851,0.526726,9.986788,-5.566415,0.259012,9.855344,-4.492581,-1.894657,-4.471120,-0.575221,4.994349,8.974626,9.763448,3.256200,-1.121566,5.163830,-3.544432,9.147291,-1.115478,-5.571848,4.917293,-3.872560,0.746487,-8.516563,-7.977086,3.615006,-3.600941,1.000706,-0.207356,-6.752489,3.101655,-0.130555,-2.189091,-6.735393,7.738896,-9.152942,-2.380854,4.573288,1.550587,5.620368,-8.364290,7.496796,0.607482,1.375212,-9.865842,-0.764075,9.380176,5.059453,3.693270,5.295394,-4.607566,7.665620,-9.686306,-1.375664,-8.432591,3.607253,-5.700115,3.852273,1.728626,9.918370,-5.422087,-5.857500,-2.854784,3.776177,5.918435,2.957922,7.018428,-3.544620,3.767702,7.191551,-3.448370,-7.917787,-6.455941,8.698807,-9.718381,2.633876,-5.348450,5.585911,7.632530,-8.136987,0.055117,-2.522508,-6.262108,-8.361987,6.479130,-4.308077,-5.306820,-6.542472,-8.689662,-3.988349,-4.719550,-6.979673,7.588541,8.863898,-6.517800,1.083837,0.235951,-4.907352,-0.302451,0.251418,1.822244,-0.972689,1.809363,-0.907691,-4.302361,-8.008547,-3.663195,3.491853,-0.950874,-2.963845,5.017492,-5.646840,0.059900,-7.047149,4.222789,1.560270,6.743746,-5.002685,-2.270698,9.726853,-3.808140,3.433430,-0.157698,-7.286513,1.443409,5.239983,6.457798,-5.055275,9.935237,-7.644245,-6.681257,4.608659,1.741375,-7.516768,-5.583569,-8.942051,-1.645100,9.221876,7.745587,0.054086,-0.343906,1.910661,0.983823,-7.011699,-0.948625,7.664922,-4.515925,9.392281,6.414916,2.133328,4.689774,-0.357906,4.773656,-3.115606,8.535234,1.717191,-5.194979,4.699581,-1.317063,-2.318603,4.513185,-2.554253,-7.375962,2.307497,0.324607,2.959073,5.667754,-8.564317,6.871548,0.950858,7.399163,-8.751784,7.268141,2.128896,6.823456,-2.345184,0.795692,-3.133319,-5.836426,1.919953,-8.439560,-5.704919,-7.067603,-2.045632,2.191427,6.197018,6.345373,7.552257,3.386472,-5.967259,-7.033452,5.870571,5.150605,-0.686908,-8.690365,-6.158740,-3.193421,-6.917802,8.901806,9.303851,-1.215686,4.249830,-8.791676,-4.239071,2.438506,9.415363,4.008096,-4.744835,-7.082527,1.101693,-3.270855,-9.231941,-8.466902,-0.418220,3.784197,4.963619,-7.024544,3.183429,4.474190,-1.288208,7.011452,-1.899896,2.686493,5.046403,3.971147,-7.818737,-2.871662,8.786394,6.664031,9.035901,7.148675,-8.773140,9.710264,-6.414261,3.280313,-9.248332,-1.004520,7.248619,4.751207,-9.748334,0.505619,-7.703644,5.613897,1.081189,8.952609,4.728608,9.753164,-3.109987,-8.098586,5.818901,-9.353661,-6.115281,-7.533653,-1.855041,-0.422352,2.414743,9.842661,-1.866406,7.722834,2.492778,-0.128513,8.071782,-1.859784,-3.731713,-4.524369,-5.700842,9.135401,-7.526244,-8.771007,3.837329,1.121408,3.767461,8.027482,7.392622,0.505390,4.301126,5.847209,2.773420,0.676088,-8.723583,5.899462,-3.429200,5.985629,-7.280370,2.958054,5.832052,-7.210493,7.177004,-6.299892,-0.236640,7.982570,7.368567,-3.472687,-3.474629,-6.095175,-0.815017,6.343479,5.920339,6.458143,-4.306475,0.104060,7.996379,-9.041526,8.844050,5.484930,-1.617362,-2.921961,9.961836,-2.915542,-1.767765,2.850523,-3.050893,1.551595,6.697886,-0.028436,8.194630,6.812788,1.731222,7.041028,-1.092709,2.040712,9.170733,-7.617312,-3.401458,-8.891881,-3.364302,6.223231,-5.708431,-7.985158,5.580305,3.420554,-8.270860,8.495437,3.232780,1.532583,5.842521,-9.066147,-0.705561,-4.407226,-2.485134,7.296409,-3.859782,5.421909,0.362660,-7.700867,-9.255464,4.572042,0.305838,3.358783,4.144957,-4.563190,4.839276,5.154804,-7.122791,-3.728331,-1.338619,8.916450,0.472429,5.368621,-3.778156,9.932244,9.633841,7.295098,-0.694783,1.444214,4.654165,-4.157091,0.555785,-9.041149,2.040912,-2.366412,-3.999900,-9.409162,-2.096965,-5.515525,-4.779343,-6.672505,-0.862199,-4.869467,-1.545751,-2.599727,9.013123,-9.058316,-1.276806,-7.243965,4.054493,4.437031,-2.168957,7.653641,8.728004,4.942458,-6.942517,-0.519460,-7.734048,9.629028,-5.484691,-1.298414,-0.227029,-5.951656,-5.997200,3.529219,2.523480,0.369563,-3.164676,5.430355,3.278577,2.751765,-6.756706,-1.171440,-5.061649,2.752865,-2.906792,5.832297,-1.352712,2.957760,-8.225481,-8.696851,-2.675579,-4.952203,9.682180,-1.816771,-3.402480,-9.061780,0.318716,5.926408,-3.204099,5.934051,0.014718,0.098798,-0.632124,-2.440601,4.565243,6.821864,-5.654959,6.271646,2.500545,-9.057799,8.352975,-3.370360,-6.627639,7.943949,-7.525928,6.456968,8.520888,4.361003,8.814596,-6.392519,-1.470901,-2.061502,5.754358,-4.023857,-5.524254,6.281459,8.928518,-4.405268,7.677130,-0.864774,-3.593964,3.915841,1.060303,-3.760717,-8.727962,5.952830,-9.780175,-9.590899,5.477001,-1.717779,3.315286,-7.214873,6.417596,-1.841164,-0.264437,-3.422585,-4.682824,-2.955500,-7.719986,9.188620,2.959563,2.871674,-4.077247,-8.290571,2.614966,7.930681,-8.823438,6.677182,4.524830,-9.791276,6.948079,-4.780592,0.075055,5.265426,9.586775,-9.053584,6.991652,-4.859293,1.908518,-4.293688,1.654708,-1.902670,8.707872,6.725429,7.986652,-1.274506,-8.606575,6.269030,7.626250,5.242009,6.788392,3.680688,-8.872942,-7.440811,-2.411256,-8.861054,3.631645,4.195692,-3.318043,7.527965,8.354620,-4.495849,-0.122757,6.910126,-8.762180,0.807802,-6.434349,6.133596,-6.213628,3.798047,-6.364028,2.291244,-0.367817,-2.596531,8.630742,-3.104572,8.438221,0.787822,-7.650285,8.543575,4.977601,-3.268269,5.572615,-5.666830,-3.344333,1.466601,9.264486,-1.892991,7.179563,2.725622,-8.037407,2.380440,-2.964614,0.822822,5.862149,-1.718722,3.557819,6.790814,-8.779986,7.251521,7.325519,2.825764,8.298837,-1.803063,-4.268345,8.458870,8.777133,-3.267195,8.111699,0.777099,-0.946233,-7.202290,-0.375734,-7.839528,0.438356,8.919490,-2.363743,-6.811909,-1.853121,9.545559,-8.590182,6.877407,5.257717,9.741419,-1.074117,-0.011273,-2.162441,-7.505650,-5.585111,1.223490,-2.655254,-9.339062,9.674725,-5.144795,8.326600,-3.086086,4.792996,6.743169,3.323649,3.826374,0.207929,-2.434041,-8.460518,0.203373,-0.557348,7.823347,4.820638,7.854654,-8.988704,3.612690,0.899934,6.627774,1.571725,-0.417438,4.276238,-0.213748,7.900992,7.443307,-9.713423,-8.294975,8.245104,1.839692,9.256850,-7.790521,9.025937,0.791834,6.615421,4.802027,7.915814,-2.175460,8.694933,-3.345709,8.323294,7.897039,-3.080101,-1.823532,2.387675,-1.931521,5.532500,-1.543526,-1.635550,4.951329,-5.221556,1.639760,-7.830080,-0.554915,-4.584425,-6.903648,-9.124663,5.712193,1.360946,2.106899,-7.798593,3.016673,-3.291570,-9.512352,3.709808,-0.845469,-2.234708,-0.140239,2.267486,-1.783907,1.304989,-8.663874,-0.627463,-3.691438,4.017637,-3.405158,2.499604,0.021917,6.676503,6.146647,-0.384946,-9.010099,6.096557,2.928575,-6.774188,-5.311403,7.890522,6.996643,3.892308,8.242719,8.288800,-8.648848,-3.249640,-0.628253,8.512088,-4.191400,-8.558750,-7.690925,8.799175,-6.088015,0.136282,3.264845,6.135661,3.675180,-6.322823,-2.938756,-3.285553,4.269973,-6.235702,2.443900,1.113649,1.778362,-5.814013,1.753617,-7.204913,7.553242,-0.200691,-4.800117,-5.110974,-6.577178,-9.346932,-8.753024,5.699503,1.130819,-6.639315,4.312741,3.284952,6.747538,-1.873169,4.420119,-3.743084,8.431342,-0.506325,6.126209,7.872299,9.414324,-7.133771,-4.319455,2.489611,1.225813,-7.916676,9.945308,-3.167165,-5.090246,2.558327,0.520768,-3.209619,8.367033,-7.059078,7.912944,-5.966684,6.566141,5.375692,2.413372,-6.044653,-0.943193,9.212262,-1.166511,-4.385127,6.100929,-7.340446,2.462665,6.232461,5.339151,7.290644,7.216386,-3.480350,-4.066647,-5.946974,-1.577899,0.228776,-1.905125,0.125379,-0.362914,5.292247,9.704186,-3.097627,-5.095746,2.995576,0.909177,6.407122,5.663124,6.993747,5.682475,4.687441,-2.343691,-3.474057,1.215175,9.414602,7.003182,1.099577,0.525326,9.234989,2.259947,6.633534,-4.324413,0.217689,-2.536229,4.870497,9.868453,-9.880949,0.473915,-4.830649,-9.343058,-4.617459,-1.127564,-4.416292,1.905418,2.812691,6.420825,2.946453,6.983005,9.631442,-4.400049,9.167213,4.237934,6.197983,-6.963621,2.102855,-1.816862,-9.572566,-7.315215,-1.242625,7.447632,-6.971590,-9.078335,-6.239926,0.318869,-8.165566,-4.483109,6.342276,2.451823,8.539137,-0.535766,-9.992579,-9.286801,0.135497,1.017025,8.110707,5.212846,1.294134,8.916100,-6.610440,4.338252,-3.539751,-5.402287,5.095587,2.742652,-7.343075,-7.137824,-0.014434,9.593476,1.270606,7.648465,9.753143,-5.933377,-9.668510,-3.920404,-2.837887,9.782644,-7.935116,-1.266963,7.987716,-8.807443,1.337795,-9.197300,3.088631,1.592124,3.494644,5.957201,-2.000677,7.767497,-2.491090,9.229699,-9.763540,1.945035,-2.338976,-6.223479,7.690760,7.396719,9.456411,-8.821706,-9.009151,1.033051,-1.096481,-6.688690,6.080011,-1.546710,-9.839483,-6.977779,-0.830535,5.179143,-8.084003,9.258424,-4.316875,-5.878836,-8.548587,-7.048485,3.382128,-4.917940,1.293325,-3.636152,1.964184,-3.590489,-1.931448,-1.995498,-2.315488,1.410371,3.799026,1.849303,-9.081314,-1.360085,-0.465067,6.817323,-3.333939,-4.527521,-6.753605,-4.877929,3.843564,4.650376,-5.349850,-4.570790,7.100178,3.975246,-5.955136,-8.188698,-0.156390,-2.838542,-5.787921,-6.294483,4.145013,-5.952009,1.836445,5.410923,2.732837,-0.429610,-9.097322,-2.074083,2.265624,0.893441,-1.135492,-4.834100,-5.284973,-7.214099,-5.075334,8.555530,2.763318,9.756614,7.529949,8.935399,-0.796218,-9.327271,-3.161336,-8.640376,-0.383837,-5.153241,-1.731801,0.100565,2.975882,8.714906,4.882795,1.425012,-4.109376,1.200736,-5.946772,-2.581636,8.760927,8.105014,9.477993,3.706232,3.117342,1.085293,-9.059907,-9.549121,-1.056406,6.422847,8.615859,-7.851856,6.763175,8.683832,-8.313479,-9.645676,-6.504063,8.295762,-5.240947,2.244455,-8.066609,4.759372,7.567534,-4.363530,1.226756,5.251927,4.100246,-8.263561,-2.436133,-2.421312,6.389751,-9.962060,-6.599759,6.142507,-6.761363,5.397286,9.151817,6.747548,-5.066303,-0.709723,3.737992,-8.739242,4.053609,4.559329,-5.375155,-6.918256,3.801503,1.033843,3.393733,-2.664993,4.263223,-7.729519,-4.819554,-5.807716,-5.018068,-9.991699,-1.551704,-3.302234,8.506248,8.468679,5.906100,8.622661,-8.310194,-5.367443,9.694796,8.818208,-8.216741,-7.100237,5.389714,-2.190590,1.176912,1.128369,0.406161,-8.026590,-5.604741,8.839092,4.843426,-7.319519,5.621519,5.646290,5.230512,-3.028247,4.546234,-8.519576,7.858112,-6.575889,8.311842,-1.111306,2.828940,6.025579,7.012593,4.562317,2.806209,-0.804223,-3.803922,4.172833,4.373432,-7.559248,-8.044648,1.705491,3.669488,8.550516,-1.078483,8.786041,-8.891988,0.571078,0.599982,-2.558853,-4.475740,-1.512505,9.871297,-5.709738,2.544304,5.084636,0.292737,2.961471,-7.116656,5.078719,-7.578242,-3.499508,8.466206,-0.033862,-3.535661,1.519138,-7.274041,7.468626,4.945863,-9.973186,-7.096087,2.185460,-3.982805,-2.920655,2.255852,9.842677,6.446935,-7.841230,1.682053,8.763540,6.250692,-9.272607,-6.791894,4.056061,4.385699,-4.108282,5.993790,1.159857,-0.086079,-6.220377,4.886331,-7.918052,3.043196,9.710685,0.272329,-0.930036,9.571243,-2.978096,4.166196,-3.158706,1.865844,-6.795359,-0.939873,4.927425,-9.953347,-0.896432,2.313227,-7.372365,8.631768,-1.495322,-4.586118,0.007667,7.320891,-1.649313,-3.524179,-8.379427,9.759345,-1.620664,-2.350857,8.166147,-8.337024,1.271982,-9.860429,-1.818598,4.938351,-1.221292,-7.998613,-7.333752,-5.586522,-7.401917,6.892654,-8.014333,4.721637,-8.033777,-7.785295,-3.115943,8.556917,7.969318,9.593986,4.797703,-9.326497,3.155487,6.750184,-6.890039,-6.162321,-3.968417,9.354480,-8.743060,-9.783147,3.852871,-2.419035,3.962031,0.556715,6.713256,-2.031363,4.066711,9.503068,1.602181,-4.508536,-1.770624,-6.734580,-5.719079,4.087245,9.238007,5.850433,3.144826,-6.622339,5.011813,5.380040,5.694119,6.260539,-1.650351,9.949869,-6.068050,4.592298,-6.620381,5.035313,-2.449366,3.113764,-1.786816,-9.228981,0.868827,-6.720510,-4.636203,8.335008,-5.089928,-8.427622,8.184819,-4.102662,-1.275888,-4.536447,-2.731392,6.648474,8.873260,-3.734514,-7.844954,5.076733,3.738097,-3.124923,0.570022,9.824119,2.139365,-5.401609,0.608784,-1.449562,-8.496251,-4.142523,-5.321545,3.446408,3.553182,-3.475742,-1.969712,0.097923,0.236331,1.197388,9.322888,-8.597583,1.208615,-5.006836,-3.059484,-1.817958,2.247894,0.438431,-8.017277,6.529264,-1.941929,8.185867,5.485069,-2.812149,4.424142,2.134012,8.017028,6.414371,-8.193345,5.386146,-9.764922,-8.102688,8.161403,7.145710,-9.656007,7.858033,-1.954558,-4.345532,7.628732,9.875122,-3.353962,2.595505,-9.721095,-1.969447,-9.450718,0.924800,3.962161,8.175837,7.618610,2.638258,2.586969,-4.540679,1.069225,-9.727710,-4.943945,6.480023,-6.398280,-2.248635,1.181863,-5.754597,-0.664434,-0.703858,2.355377,-2.864719,5.249600,-3.262041,-0.013435,-3.050424,6.281040,-7.746268,-9.278301,4.812893,9.913729,-5.887643,-9.518292,-4.352502,-1.734408,4.276007,-1.357216,9.571379,5.862793,7.193385,-8.195147,5.247231,-6.083169,4.865321,-8.774227,0.389432,-4.243339,-4.243553,-6.624434,-5.637667,-1.104461,-8.328535,0.809654,-8.124330,-3.636110,6.811918,1.656586,-5.421023,-8.577136,0.252516,-0.108400,-5.719217,-7.144575,-0.930312,-9.088372,1.525248,-5.093859,0.900768,9.641528,-9.478706,5.806529,4.476136,-7.789826,-2.900450,2.299144,6.661515,6.077387,3.176491,6.954819,-3.946490,-4.770715,-8.886538,-4.635555,-6.848564,0.799038,6.758841,-7.948587,1.112937,-4.156708,-0.764783,9.745329,-4.335138,0.405113,-7.564723,7.493466,-0.874992,4.812473,-1.599775,1.671433,0.311614,0.733421,8.291689,4.196802,-9.159566,2.957119,-4.032238,2.472396,0.924114,-3.927615,0.752652,-6.667296,1.122605,-0.520086,9.912143,-9.424518,-7.299375,6.587401,-8.947447,-3.769685,4.892344,7.684014,5.948402,-9.552085,3.448437,-0.735243,-4.997036,9.215492,-6.528739,3.138447,0.302855,3.149921,3.974945,7.620527,2.778669,-1.742481,0.002571,-2.410658,-0.542723,0.799118,9.608548,-5.773439,2.174705,5.255594,3.160742,4.378282,3.920411,-5.655612,-1.886441,-7.972095,-3.150163,-3.770441,-9.525532,-0.600685,8.977571,-2.873314,8.033630,-0.120170,-6.460211,8.238700,-8.240996,-0.389710,4.851687,-2.813732,0.195438,7.152985,8.568231,7.748725,7.561103,8.759170,-4.056431,4.054252,-8.029108,-6.770207,-0.085513,4.198807,-3.486195,-3.555813,-7.171758,0.632756,5.829645,9.238701,-1.977770,-9.483747,-4.624607,-4.146021,3.871802,1.997145,5.661012,6.171353,0.553632,-3.668597,-2.004298,0.779992,2.099574,-2.799382,6.895106,-7.053798,6.505451,2.394596,-7.490463,-6.980809,-9.575961,4.509623,4.556740,4.217825,9.919894,-6.522149,-3.008915,2.702918,9.062688,-2.255189,9.239068,-3.000092,4.189138,4.280824,-1.500257,8.524671,7.051780,-0.471547,6.092639,5.233150,-2.434379,5.727395,9.649284,-8.713014,-7.972341,6.185647,3.882609,-6.768494,-5.791916,-8.371456,8.860195,6.194052,9.975696,8.928447,4.490562,0.279791,6.748552,-1.293504,8.240792,4.858256,8.973656,-1.398948,-7.235896,5.469398,-6.430232,6.534478,9.534843,-6.051198,9.842813,-0.422527,-5.659667,-2.297926,-6.692933,-6.136027,5.734161,3.756074,-6.278817,-8.812255,9.415837,8.830799,5.236582,1.067021,1.530761,6.003781,-7.718841,6.670032,-6.124986,-6.773181,-1.023598,-1.173804,-5.955672,-8.682957,9.468207,9.388355,-4.272626,-8.461217,-3.217403,3.641948,4.640275,-9.901662,-3.722409,-9.477661,6.117163,1.738604,3.569240,6.708422,6.516446,1.823703,-2.175118,9.681236,2.688001,9.894898,-6.366706,-4.785339,2.368192,2.133333,-0.085193,-9.696388,-5.989822,-6.975879,-8.600988,3.493316,3.497935,-6.821340,6.562249,5.694176,-7.479923,-4.730366,8.684214,-9.707303,3.640381,-5.309075,-9.413571,9.923827,-7.782870,-4.314064,-4.938776,-5.619109,-3.333807,4.449025,3.925683,7.315679,8.743620,-5.295833,-5.935091,-8.317234,-3.546927,1.458358,6.152554,8.769487,-6.014334,-9.454886,0.805566,0.590788,-5.300607,1.565064,5.480643,5.163734,4.003033,7.686665,-9.581212,3.312429,-5.559247,1.549288,-7.182722,3.306126,6.551790,5.969945,-9.472872,-3.709621,7.809765,-8.932978,-7.151439,-1.816056,9.019321,4.401589,3.523342,-1.750505,-0.568489,4.567420,-7.625471,4.211765,2.949976,-0.565179,2.791797,-6.497764,5.793578,5.248328,-8.108396,3.693313,0.686717,1.462061,4.076740,-2.575848,-9.805981,-1.462489,-8.017453,-1.399935,-0.830779,-2.015969,0.366716,8.060732,6.141742,8.765212,-2.837398,-1.762958,3.785538,-6.852176,4.512365,-4.319262,-6.936075,5.146990,3.605325,-7.109111,-7.426078,5.642763,7.707137,-6.164171,-7.766878,-4.818733,-7.770960,-6.167433,7.985815,8.243821,-0.371512,-4.058240,-4.606134,5.612184,8.338596,-6.883559,-4.706944,7.535671,-4.884051,4.034460,4.859406,8.993784,-7.289675,-2.333606,-7.350180,-5.292269,2.372163,2.603179,-8.944137,5.418917,6.792868,-9.999100,-5.612597,9.042162,5.842533,5.147789,1.389846,4.689367,-1.878752,9.725849,5.427138,4.397429,-3.243687,-3.443437,-1.483374,-9.411701,7.083770,1.807233,-6.867712,-6.557064,2.030553,5.246732,-5.664132,-9.090497,-5.641790,7.315594,-9.309534,-1.313411,-0.708113,4.459062,4.273227,-1.595884,-3.851728,-1.949706,-9.321636,7.917509,-4.725363,-1.082784,0.058801,2.267649,-8.152399,4.838287,-7.660576,7.449790,-1.326388,7.992595,-3.888263,8.922442,5.484041,-4.323434,-9.429067,-2.024332,-7.469299,-7.326440,6.451611,5.144978,-7.271108,-1.485995,-6.446794,0.609768,2.809192,-9.905348,-8.758369,-2.885285,8.073061,-0.836061,-8.885859,-3.444264,5.832221,-6.851131,0.546792,2.027690,-3.740292,-5.401889,4.511154,-0.710004,-6.613513,0.052024,-6.533130,-9.825893,-5.992145,6.356921,0.636093,2.573820,-7.606735,-2.983881,0.109399,-7.818871,7.356107,-4.401295,-5.329306,0.964640,-7.582817,-9.842178,4.927112,-4.696068,1.300359,-4.380873,-9.204025,8.371568,-7.833775,-5.362527,9.966698,0.137280,3.993414,-4.058770,-5.047984,-3.666220,-5.325527,5.960655,3.218438,9.578926,-5.934972,-0.845683,5.940726,8.410519,8.678867,6.195391,-3.421701,6.099561,-6.885019,-9.578931,-7.640208,2.089758,6.094035,-9.666689,6.282255,8.856512,3.494673,-0.020159,6.911722,-2.883435,3.721059,-0.735256,6.509166,8.139237,4.528382,-8.199535,-5.962985,-7.852010,6.228268,-0.347525,-0.903436,-9.835164,9.030266,-1.525832,-5.097979,0.732044,-4.706651,-4.126158,-3.416213,0.887287,5.127202,4.111513,-2.560769,4.336858,-6.443561,-9.596389,0.734674,-2.804171,6.095193,7.953221,-9.709987,6.509147,-4.309875,-8.059319,6.915183,-5.729770,0.711587,-0.276683,0.517812,2.873748,5.762607,-9.013970,-2.875319,-0.092977,6.689549,-7.468790,-2.779060,-3.773608,1.976118,7.974473,8.061228,7.540578,9.004497,-4.248604,7.660190,-0.266275,7.200807,1.429417,-1.051688,0.744870,8.214145,4.348899,2.446917,9.212116,-6.651739,8.529624,-4.980977,-7.053780,-8.863826,1.347874,0.165386,-1.510390,-8.033958,-4.412737,4.171854,8.487174,6.043211,3.494779,-3.207050,6.497044,7.161423,-5.116135,5.483847,-3.427654,8.852797,2.300621,7.178799,0.095314,4.339130,-3.510368,2.697825,-8.859336,-3.314146,4.456365,-9.339693,1.262829,6.499016,8.309459,9.277483,-6.970647,8.283212,7.084624,-3.099298,8.834354,-0.105624,-1.926272,0.103075,9.052324,-8.007343,-1.170471,4.929455,5.551159,-5.664719,-9.266301,-1.550782,-8.526740,-6.829766,-8.363257,4.780315,2.311250,-0.153831,0.117959,-3.250869,0.435301,-6.690056,6.319162,-9.737643,-0.366619,1.558604,-0.157645,-6.323180,-5.411877,-3.349560,5.087887,-8.715677,1.621928,-1.583977,-4.774274,3.010991,-7.491977,9.592483,-1.601811,-0.997796,-6.384994,8.481122,4.418208,-5.318595,-8.019269,-8.251536,-9.496180,-5.476751,7.758086,-4.496261,6.295238,-6.252315,2.213850,9.833118,5.805640,7.591904,-9.802484,-8.934328,-8.473382,3.758658,5.171148,-1.803000,-7.496756,4.539333,7.068864,9.404048,-2.094764,-0.063199,3.502268,0.089565,8.881233,5.093281,6.416165,1.270635,-9.191577,-1.349118,1.410798,8.055322,-1.424138,2.383942,-9.659881,-8.269844,-1.699777,3.548296,9.439004,-0.724327,3.222941,-6.402129,3.300934,-8.962629,-0.678380,5.770415,5.662536,6.325331,-2.490999,3.769311,0.960750,7.815351,2.418538,5.462494,1.689612,3.717066,2.528314,3.593575,-6.600197,-8.315337,-4.300753,-0.071263,-5.445225,6.319819,-9.668230,-9.517444,8.954682,-2.307688,-5.847683,9.424743,4.797253,-8.537603,-9.474707,-8.314029,9.030966,2.617349,-2.390681,5.051447,4.375426,0.809299,7.292465,0.461281,2.160085,4.714124,2.946210,9.678120,-7.112181,-1.672376], dtype = "float64")#candidate|8499|(2940,)|const|float64
call_8498 = func_2534_call(relay.reshape(const_8499.astype('float64'), [14, 15, 14]))
call_8500 = func_2534_call(relay.reshape(const_8499.astype('float64'), [14, 15, 14]))
output = relay.Tuple([call_8489,call_8498,const_8499,])
output2 = relay.Tuple([call_8490,call_8500,const_8499,])
func_8501 = relay.Function([], output)
mod['func_8501'] = func_8501
mod = relay.transform.InferType()(mod)
mutated_mod['func_8501'] = func_8501
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8501_call = mutated_mod.get_global_var('func_8501')
call_8502 = func_8501_call()
output = call_8502
func_8503 = relay.Function([], output)
mutated_mod['func_8503'] = func_8503
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7783_call = mod.get_global_var('func_7783')
func_7784_call = mutated_mod.get_global_var('func_7784')
call_8525 = func_7783_call()
call_8526 = func_7783_call()
func_8232_call = mod.get_global_var('func_8232')
func_8234_call = mutated_mod.get_global_var('func_8234')
const_8535 = relay.const([-4,-1,-6,3,-4,-1,9,-1,-8,8,8,-2,-9,-2,-5,-4,1,2,-2,5,1,-4,5,-7,-6,-2,-8,-1,-5,8,8,-1,-9,8,-9,7,10,-2,-7,-5,3,7,-2,-8,1,-9,10,-10,6,-10,1,-2,-9,4,-3,-10,8,8,6,-1,6,6,1,-6,-3,1,-6,-5,-7,-2,9,7,-9,-9,4,2,9,5,5,8,-8,4,-2,-8,7,1,1,-7,-4,-5,-8,6,6,-9,3,-1,-6,4,3,7,3,7,-6,6,3,-10,-8,-8,8,-5,7,-1,-10,-3,8,-2,7,-6,-6,-5,-6,9,1,-10,9,1,3,10,-6,6,-2,6,-8,4,-7,-4,-6,-8,-2,-8,-6,-6,-9,-2,-7,1,-7,-1,-9,10,4,8,-6,-8,7,-9,3,3,10,-10,-4,-8,-6,-7,-4,3,-2,9,-9,6,3,8,1,-9,-7,-9,8,3,8,10,-8,1,4,-7,7,9,-1,5,8,-2,-2,7,10,-5,1,-2,10,8,5,7,1,3,4,-3,-1,9,-7,5,-8,8,8,10,-3,-2,-8,-2,6,10,-3,-6,9,8,-4,3,-3,-5,1,9,-6,4,-1,-2,10,-10,-4,-7,-2,8,10,-9,-2,-6,-10,7,-7,9,-7,-6,2,10,-2,10,4,9,-9,10,3,-4,-2,-10,-2,-8,9,-6,2,8,4,6,-5,-3,5,6,9,2,1,-2,-10,-1,-6,9,-4,-10,4,6,2,4,3,5,1,5,9,4,10,10,6,-2,8,-9,-9,-4,6,-6,9,3,9,10,7,-1,3,1,-3,-10,-6,-5,-3,3,6,-10,-3,3,-3,3,-10,7,6,-1,-10,1,-9,10,-3,3,6,-4,-8,-10,1,3,8,3,5,-2,-6,-2,9,-6,8,-4,5,-3,5,6,-7,-7,6,-8,5,-9,-4,3,4,8,1,6,9,8,3,10,-2,6,7,10,-5,-3,9,-4,7,7,-5,-3,2,-10,5,6,7,5,5,7,4,1,-10,-8], dtype = "uint64")#candidate|8535|(392,)|const|uint64
call_8534 = relay.TupleGetItem(func_8232_call(relay.reshape(const_8535.astype('uint64'), [14, 28])), 2)
call_8536 = relay.TupleGetItem(func_8234_call(relay.reshape(const_8535.astype('uint64'), [14, 28])), 2)
func_652_call = mod.get_global_var('func_652')
func_654_call = mutated_mod.get_global_var('func_654')
var_8545 = relay.var("var_8545", dtype = "float32", shape = (270,))#candidate|8545|(270,)|var|float32
call_8544 = relay.TupleGetItem(func_652_call(relay.reshape(var_8545.astype('float32'), [9, 5, 6])), 0)
call_8546 = relay.TupleGetItem(func_654_call(relay.reshape(var_8545.astype('float32'), [9, 5, 6])), 0)
output = relay.Tuple([call_8525,call_8534,const_8535,call_8544,var_8545,])
output2 = relay.Tuple([call_8526,call_8536,const_8535,call_8546,var_8545,])
func_8548 = relay.Function([var_8545,], output)
mod['func_8548'] = func_8548
mod = relay.transform.InferType()(mod)
var_8549 = relay.var("var_8549", dtype = "float32", shape = (270,))#candidate|8549|(270,)|var|float32
output = func_8548(var_8549)
func_8550 = relay.Function([var_8549], output)
mutated_mod['func_8550'] = func_8550
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8028_call = mod.get_global_var('func_8028')
func_8030_call = mutated_mod.get_global_var('func_8030')
call_8557 = func_8028_call()
call_8558 = func_8028_call()
func_8119_call = mod.get_global_var('func_8119')
func_8123_call = mutated_mod.get_global_var('func_8123')
const_8566 = relay.const([-2,5,9,-10,-7,-4,-2,-10,8,-4,4,-8,-1,10,-8,6,4,-2,5,2,8,2,8,2,-3,10,-6,8,5,-3,-1,-4,8,9,-7,-7,8,-4,-1,-2,-1,-4,9,6,-1,8,6,6,10,-9,-8,-2,6,-3,-10,-3,-5,10,6,9,-5,-9,1,-4,3,-7,-10,9,3,-4,5,6,4,-4,-3,8,-10,-8,-4,-3,6,10,-9,3,-9,6,4,-3,-1,-1,-10,2,-7,2,-5,-8,6,-8,-7,10,-9,9,10,4,-1,-8,3,2,2,-1,10,9,-9,3,-1,-9,9,6,2,-3,-6,-3,-10,-10,8,9,-3,3,7,-8,-7,9,-7,-7,8,9,8,-4,6,3,7,1,2,4,10,-10,-8,-4,5,-3,9,6,5,-8,-7,-4,-2,-6,9,-6,1,5,-4,-4,10,1,-1,-9,-8,-7,7,-9,6,-5,-9,-5,6,2,1,-8,-3,-10,-5,-1,5,10,-9,3,8,2,7,-6,7,3,-3,-9,-10,-3,8,-10,3,-7,10,-10,5,4,1,-7,9,8,-10,2,-6,7,-10,8,-6,6,2,6,9,-9,1,9,-5,4,2,7,3,-3,-10,6,4,4,9,-3,-10,-9,10,3,-4,3,4,-7,4,2,9,-10,4,-10,5,-3,6,8,-1,1,1,-5,-4,4,10,-1,-5,-3,6,2,-7,-8,7,6,10,-5,-3,-6,3,-6,7,4,-10,-9,-2,-2,5,1,8,2,-7,1,-9,7,-8,-5,-2,-4,-7,3,-5,-10,4,2,9,2,-5,5,9,-4,-9,-1,-9,5,10,-9,2,-5,1,10,3,7,6,-2,6,-3,6,-5,-3,-4,10,-7,-1,1,-2,-1,5,-3,-9,-8,-2,1,-7,4,7,-2,-1,9,3,-3,1,10,-3,-8,9,-9,-9,8,7,7,-1,-2,9,-4,3,7,-1,-1,9,9,9,10,8,-5,1,-10,-4,5,-6,-8,-4,3,2,-4,-5,-1,-10,-2,9,3,3,2,-8,3,-6,2,-3,-7,-1,6,-3,10,-7,2,-4,-6,10,6,-7,-1,9,-2,8,-9,-2,5,-1,-9,-9,-4,5,2,10,-3,-9,7,-6,10,10,-3,4,8,-4,6,5,8,2,5,-10,-6,-1,-6,-3,2,-8,6,4,-1,-10,-2,9,-4,10,10,6,-10,8,-7,-2,4,6,4,-5,-8,2,-7,8,1,-1,-9,-6,7,4,-6,-2,8,2,8,9,-2,6,3,3,3,4,4,-2,3,-4,2,-1,6,6,-3,-9,-7,4,-8,-5,-2,4,8,-6,10,2,-8,6,-8,-5,7,-6,9,-8,9,-8,2,-7,-6,1,-5,-1,6,4,-10,-5,-2,-3,2,-8,5,-4,-5,-7,-5,8,9,-2,5,-9,4,-3,-6,9,-10,-1,-2,1,-7,10,-7,4,6,-1,2,7,5,-6,8,8,-2,-2,5,2,4,-6,10,6,-7,-8,-8,-9,-7,-3,10,-3,-10,7,-10,7,-2,-4,-4,8,-9,2,-5,10,6,9,7,-8,-10,-2,7,6,-4,-2,3,2,10,9,7,-9,7,8,-1,10,-5,-2,4,4,10,-8,9,5,4,-7,7,3,-6,-5,1,-8,10,1,-10,3,10], dtype = "int64")#candidate|8566|(624,)|const|int64
const_8567 = relay.const([9,-8,-3,-3,1,-2,9,5,7,-6,-5,-2,-1,-7,6,10,9,10,5,2,-1,4,-6,-10,2,1,-5,6,-7,7,-4,-9,-6,-7,-4,8,7,-5,-1,-7,1,2,-10,1,1,1,4,-10,-10,-3,8,-8,-5,10,-8,-9,-5,-6,-7,-2,-5,-2,2,-3,-1,-5,-10,-5,-5,-1,4,-3,-8,5,6,-2,10,-9,-7,3,9,-6,2,-5,8,2,-3,10,4,5,-3,-10,-4,-5,1,1,-7,-10,10,-8,1,-10,-4,6,-8,-9,-9,-5,-6,-3,8,1,-1,-4,6,9,1,2,2,7,-8,-10,-3,-9,5,8,-8,-1,-9,1,-9,5,-2,9,-4,3,-1,10,-9,-5,-2,10,-3,10,7,1,4,8,-4,9,1,9,-6,-8,-7,1,-5,1,3,-1,-3,-8,10,-4,-1,2,6,6,2,10,6,-1,4,10,-1,2,5,4,6,-10,2,10,5,3,9,-7,5,-7,-7,-8,10,-6,-8,10,8,-2,4,-10,10,-4,-5,6,-6,8,-10,4,4,4,-10,-7,-6,9,-9,-7,-2,-7,-2,8,-6,3,-3,-3,-7,-1,3,5,5,9,5,-4,-9,-6,6,10,2,-5,2,-4,-6,8,-4,-7,7,6,4,-8,3,-3,-10,10,-8,-7,-6,1,-9,-9,2,-4,6,2,10,-10,-6,3,-5,5,9,-4,-4,-6,4,6,3,-6,7,-8,7,-1,10,6,6,-1,-5,1,1,-4,3,10,9,-7,-3,-7,-1,-1,2,-8,-3,5,-5,-9,4,-1,5,-2,-7,-5,4,-9,10,-7,1,3,6,2,-6,8,-8,4,-8,10,-7,-6,-6,-5,-8,1,10,3,-3,7,-10,7,2,3,-10,-7,-9,10,-9,4,-9,-9,10,-7,1,-10,9,-8,1,-2,6,9,-4,3,-4,-3,3,-4,-5,3,2,-4,-3,1,8,4,-3,-9,10,2,-8,-8,8,3,-10,-7,2,-5,-8,6,10,-7,-2,1,8,-9,10,-9,-9,10,-9,-4,-10,5,-7,-1,-2,3,-5,-10,-10,1,-6,8,3,5,-7,-6,-9,-5,3,-5,-4,-2,3,-6,-1,-2,-9,10,-8,-5,-5,-2,-3,3,2,-2,-6,-9,-8,-1,4,-6,4,7,1,9,-5,10,-9,-4,1,-9,-2,-6,-5,-7,-2,4,-9,10,-2,-7,1,3,-10,-10,2,-8,10,-5,4,-6,7,4,10,7,4,-9,1,4,-10,4,6,8,-7,2,7,8,7,-1,8,1,1,-9,-3,-6,9,-6,-2,-10,-9,10,2,1,10,8,-7,-9,8,-5,-3,5,10,7,-8,-3,-1,5,9,-5,-8,-6,-4,5,3,5,10,-9,1,-4,-5,10,-8,-3,10,5,-3,-3,5,10,-8,5,-5,8,-10,-7,-9,-5,1,-5,4,-1,2,5,-5,-5,-8,-1,-7,-8,-3,-4,-3,1,-4,7,8,-6,-5,8,-6,1,5,8,2,1,-3,8,-3,-10,-7,7,-6,-6,4,10,-6,5,-4,-5,10,-4,10,-1,-2,10,-9,-5,-7,-7,-4,4,-10,3,-1,2,4,-6,-7,7,-7,9,1,-2,-6,1,6,9,-6,9,3,-1,-7,-1,-4,-4,-3,-7,-10,3,8,5,1,1,8,-5,3,-8,-2,5,-5,-7,3,-3,2,10,-1,-5,10,-10,-8,-1,-2,1,8,-10,-6,-3,2,3,-1,-6,-7,5,-9,-6,-1,-7,-6,6,6,-8,4,1,-7,-2,7,-1,10,-2,2,-5,-6,5,-3,-5,9,-9,-5,1,-7,10,-10,10,8,9,1,4,-6,-7,-2,-6,-8,-5,7,8,-6,10,1,6,-4,-1,8,-10,6,3,-4,10,6,-6,9,9,-2,1,-2,5,1,9,-3,4,-8,9,8,3,-3,8,-5,-7,-9,2,-5,-7,7,8,7,-1,-2,5,10,-5,9,4,4,2,-10,-5,3,5,-8,-8,-6,-9,9,-8,4,-1,9,-8,7,-6,-4,5,-3,-5,-3,5,4,-8,10,4,-3,6,2,-5,-3,7,-2,-3,3,5,3,-5,-5,-9,-3,8,10,8,-9,-1,1,-2,-2,-7,2,-1,5,-1,-3,5,5,-1,-7,-7,1,-1,-5,7,-7,-2,-8,6,-1,4,-9,-9,2,7,1,8,-1,-4,3,6,6,10,3,7,-5,7,10,8,5,3,-1,-6,1,1,-1,-5,6,-1,3,2,-9,-4,2,10,7,-3,-6,3,1,3,-10,1,4,-5,-9,9,-4,8,-4,5,-2,2,-9,7,-6,4,-7,-1,6,-1,3,-5,-10,-4,1,-6,8,-5,10,9,-10,-3,5,-1,-2,-9,10,-1,-9,7,-6,5,2,3,1,9,2,-10,7,-1,2,3,4,-4,-1,-4,-5,-3,8,10,-7,-3,-2,9,2,6,9,-8,3,7,5,3,10,-9,-1,10,-8,10,-3,9,10,-1,-7,4,-1,6,-10,-5,4,-1,-5,-4,3,2,6,3,-9,4,1,5,-9,-7,-9,-1,10,-7,-4,-5,6,3,3,7,2,7,9,5,-3,9,9,-5,2,2,-3,-3,8,-3,3,10,-1,-9,1,10,-10,-7,9,-8,2,-6,-6,-5,6,5,10,-5,4,-3,1,10,2,-10,7,-3,5,5,-8,-8,-8,6,-8,-9,8,-9,7,8,-7,2,6,5,5,-5,-10,-9,-5,8,-7,-8,-3,2,8,-1,10,-1,9,8,-7,6,3,10,10,3,-9,4,10,1,-8,5,6,-4,3,6,4,-9,-9,5,9,9,-9,-7,9,-6,-10,6,-6,-10,2,-1,10,-5,1,8,-8,-7,10,-7,-3,7,-6,3,3,3,9,-4,-5,10,9,-7,5,-7,9,-5,8,10,-4,8,-4,5,-6,-6,9,7,2,-6,-8,-3,6,-1,-9,-8,4,10,-6,5,5,-3,5,-2,-3,-7,1,10,-7,4,2,1,-8,5,-8,-8,-10,-7,2,-6,-10,-6,3,10,8,8,-6,5,-9,-1,-9,-10,-9,-5,-8,6,4,-1,-9,-8,7,-7,6,8,-4,-4,8,-3,-3,-10,9,-1,9,9,6,-4,-3,5,-5,-7,-4,2,-5,10,5,-8,-7,9,-2,-3,6,-1,-10,-10,-1,-6,8,-8,-4,10,10,6,-9,-5,-3,-9,-8,10,7,7,-9,-5,-2,9,-5,7,-8,-5,8,-6,-8,2,5,8,-3,2,-7,-10,-3,-4,9,4,-6,2,8,-7,-5,4,10,-4,6,-7,-6,-9,6,-5,-7,-10,-9,7,2,-4,2,7,-2,6,-8,9,8,2,3,8,-8,3,1,-5,-5,-10,-8,8,1,-8,-5,-2,6,8,3,1,4,-9,5,10,10,6,10,-10,8,-9,-4,7,-6,7,-2,-1,4,3,-1,-9,4,10,7,-4,-7,-7,5,9,2,-1,6,-1,1,10,-7,-4,2,5,-6,-4,4,-2,-9,10,-10,-4,-4,-7,-8,-6,3,4,-6,5,-9,-2,4,10,8,-5,-1,-5,5,-10,6,-6,6,6,-10,-1,-2,10,1,-1,1,7,6,-9,-1,-2,4,8,9,-1,7,-7,-9,6,8,8,3,3,7,-10,10,-7,-9,4,9,6,1,4,2,-1,9,-2,-7,2,7,-2,4,-1,2,-5,-3,8,6,-6,-4,-9,-6,-5,-5,7,-1,-7,6,-1,3,1,7,-2,3,-1,4,-10,-2,7,4,-9,3,-9,4,-9,-6,-7,-2,-5,-6,10,8,-4,4,6,-3,2,-1,-7,3,-5,6,9,8,3,-2,-8,4,9,-1,-8,9,2,-1,8,5,-2,-3,9,6,-9,-6,7,7,9,-2,-6,-5,5,-9,1,-4,5,3,-3,7,-7,9,4,-1,-7,8,-6,-2,-10,-1,5,1,7,7,2,1,8,3,-7,-2,5,-8,2,1,-2,-2,-10,-8,-8,-8,-10,10,-1,7,5,-2,1,3,-9,7,7,-10,-6,-5,-3,5,-3,1,-5,-2,2,-3,4,-6,2,-6,-7,-9,5,9,8,3,-8,5,-5,-8,-1,-9,8,-1,3,1,-6,-2,4,-10,5,2,-10,-9,-4,-3,9,-3,9,7,-1,-1,9,-7,7,5,-5,-7,6,3,4,-6,-7,-8,-2,8,5,10,3,7,9,1,-1,-10,-6,-6,6,-1,-10,1,6,-7,9,7,9,3,7,1,-4,-4,1,-9,3,-1,-1,-7,2,-9,3,4,-1,-7,2,-8,-8,-7,4,9,-7,2,-3,-4,5,7,-3,-8,-7,-5,-5,-5,5,4,-7,-9,-3,10,-2,-2,-2,-2,1,9,7,7,5,2,2,-3,9,3,5,-10,10,3,-3,6,7,2,-9,5,-10,6,-5,3,3,5,-9,-4,-7,2,-5,3,-4,-7,3,9,-9,9,5,7,10,-5,-7,2,7,-3,4,6,1,3,5,1,-6,-7,4,7,6,-7,-1,6,-2,-2,-4,-4,-4,-3,8,3,4,-3,4,4,-1,2,9,2,8,8,4,9,1,-7,5,1,1,-10,5,6,7,2,7,-7,-9,7,9,1,9,6,-1,-3,-2,-9,9,7,-7,-3,-2,-9,5,6,3,3,9,-6,-8,-3,4,-9,9,-10,-4,1,3,-9,-8,-4,4,5,-7,-2,-1,-5,-8,1,-10,-6,-6,-2,-8,9,8,7,3,5,-2,-2,3,2,-4,9,-4,10,-3,-10,5,-5,5,3,5,-7,-5,1,-8,9,6,8,4,-3,-2,8,-2,-10,-6,-6,-3,7,2,7,-3,-2,6,-2,-7,9,-5,7,-1,-8,-10,-7,7,-2,-4,-9,-5,7,-2,-4,-1,10,-2,-5,6,4,-8,-10,7,-4,-8,9,7,-5,-4,-7,3,-2,6,2,3,-9,-6,-7,-8,-5,5,2,-1,-10,7,9,7,-9,-1,7,8,4,-5,-9,2,-1,-10,-9,-1,6,-8,-10,-6,-10,-1,-10,2,-4,-5,-10,-7,-5,4,-7,-5,-3,-8,8,5,3,-6,6,9,5,-1,2,-7,-6,-1,4,-8,10,1,1,7,-3,-9,3,6,-1,-4,-6,7,2,7,-5,4,-2,-3,-10,-7,5,9,-3,5,-4,4,-2,4,-1,9,-7,-3,-7,-1,9,9,5,2,-4,1,-10,10,10,-5,6,-8,4,-1,10,-7,2,-4,3,-5,7,-7,-5,-10,-2,5,-8,10,-8,2,-4,8,-4,-3,2,-7,5,7,-10,4,-9,-7,-6,8,1,2,10,1,4,-4,3,-5,-3,8,-9,-5,-5,-7,1,-3,-7,8,-6,-5,3,7,1,4,-6,9,-9,6,-7,3,8,2,2,5,9,8,-9,9,7,-6,-8,-10,9,8,-7,-6,8,4,-8,-10,1,10,-3,10,2,4,-10,6,-10,-5,-7,4,9,-7,-9,3,-5,7,-9,1,-4,-1,9,6,-2,-8,2,-4,2,-5,10,-8,-10,-6,-6,10,2,-6,9,-2,-3,-7,2,5,7,-4,9,-4,7,-7,7,-4,-9,1,2,-6,-4,1,8,-10,9,2,6,-4,7,7,-9,4,1,5,-7,-10,7,6,9,-10,2,6,-9,-4,-4,-2,-1,-2,-2,-6,9,9,-9,-1,5,-7,-5,-6,3,-3,-10,-9,-3,-5,-7,3,7,2,-9,4,-4,2,2,-4,-9,-10,-3,-3,-10,-1,-9,3,-6,-4,9,10,9,-5,-1,5,-7,2,6,6,2,-4,-2,7,-3,-3,-8,-8,-7,7,-1,10,9,-7,7,-2,-3,-2,-3,-2,-1,-1,-10,-6,-1,6,5,-1,10,-9,3,8,8,-2,-10,-9,1,-7,-10,-7,6,-4,-9,-3,-3,8,4,4,7,-2,4,7,1,6,9,-2,-9,3,-1,1,-1,-10,6,-8,3,9,1,-3,-1,6,4,-2,6,5,6,-9,-4,5,-6,2], dtype = "uint16")#candidate|8567|(2250,)|const|uint16
var_8568 = relay.var("var_8568", dtype = "uint16", shape = (1, 11))#candidate|8568|(1, 11)|var|uint16
call_8565 = relay.TupleGetItem(func_8119_call(relay.reshape(const_8566.astype('int64'), [3, 13, 16]), relay.reshape(const_8567.astype('uint16'), [15, 15, 10]), relay.reshape(var_8568.astype('uint16'), [11,]), ), 2)
call_8569 = relay.TupleGetItem(func_8123_call(relay.reshape(const_8566.astype('int64'), [3, 13, 16]), relay.reshape(const_8567.astype('uint16'), [15, 15, 10]), relay.reshape(var_8568.astype('uint16'), [11,]), ), 2)
func_8347_call = mod.get_global_var('func_8347')
func_8350_call = mutated_mod.get_global_var('func_8350')
var_8578 = relay.var("var_8578", dtype = "float64", shape = (3, 88))#candidate|8578|(3, 88)|var|float64
call_8577 = relay.TupleGetItem(func_8347_call(relay.reshape(var_8578.astype('float64'), [8, 11, 3])), 0)
call_8579 = relay.TupleGetItem(func_8350_call(relay.reshape(var_8578.astype('float64'), [8, 11, 3])), 0)
output = relay.Tuple([call_8557,call_8565,const_8566,const_8567,var_8568,call_8577,var_8578,])
output2 = relay.Tuple([call_8558,call_8569,const_8566,const_8567,var_8568,call_8579,var_8578,])
func_8589 = relay.Function([var_8568,var_8578,], output)
mod['func_8589'] = func_8589
mod = relay.transform.InferType()(mod)
mutated_mod['func_8589'] = func_8589
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8589_call = mutated_mod.get_global_var('func_8589')
var_8591 = relay.var("var_8591", dtype = "uint16", shape = (1, 11))#candidate|8591|(1, 11)|var|uint16
var_8592 = relay.var("var_8592", dtype = "float64", shape = (3, 88))#candidate|8592|(3, 88)|var|float64
call_8590 = func_8589_call(var_8591,var_8592,)
output = call_8590
func_8593 = relay.Function([var_8591,var_8592,], output)
mutated_mod['func_8593'] = func_8593
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7783_call = mod.get_global_var('func_7783')
func_7784_call = mutated_mod.get_global_var('func_7784')
call_8603 = func_7783_call()
call_8604 = func_7783_call()
output = relay.Tuple([call_8603,])
output2 = relay.Tuple([call_8604,])
func_8606 = relay.Function([], output)
mod['func_8606'] = func_8606
mod = relay.transform.InferType()(mod)
mutated_mod['func_8606'] = func_8606
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8606_call = mutated_mod.get_global_var('func_8606')
call_8607 = func_8606_call()
output = call_8607
func_8608 = relay.Function([], output)
mutated_mod['func_8608'] = func_8608
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8501_call = mod.get_global_var('func_8501')
func_8503_call = mutated_mod.get_global_var('func_8503')
call_8609 = relay.TupleGetItem(func_8501_call(), 1)
call_8610 = relay.TupleGetItem(func_8503_call(), 1)
func_2096_call = mod.get_global_var('func_2096')
func_2099_call = mutated_mod.get_global_var('func_2099')
const_8612 = relay.const(7, dtype = "uint64")#candidate|8612|()|const|uint64
const_8613 = relay.const([-2,-8,3,-3,10,-7,9,7,9,1,3,2,8,-4,-2,1,-3,-6,-1,-5,-8,-9,-10,-8,8,-2,9,-7,-10,3,-5,3,-5,6,5,-6,4,9,4,4,-9,2,-10,5,9,1,4,2,10,-7,9,-9,-1,-8,-8,-8,9,-4,-1,1,1,-2,6,8,3,-3,1,5,4,6,6,-10,-5,7,5,6,10,3,-3,3,6,-6,10,6,5,-8,7,-7,4,10,2,5,1,9,9,-10,8,10,7,3,-2,-2,-1,-5,1,-4,9,-6,-9,6,6,3,-10,-3,-2,9,-9,5,8,-7,-3,-3,-10,5,-1,-7,5,-1,4,-1,2,10,-1,-5,5,9,1,-2,-10,-4,6,-7,3,7,4,4,10,-9,-9,1,6,-1,3,-10,10,3,7,-8,-10,8,5,-1,-3,7,7,-5,-9,10,10,6,-5,-8,10,1,-3,5,-10,-2,-1,3,8,-8,4,10,9,-6,4,7,9,6,-8,9,-1,10,-1,-7,3,-7,-7,-3,-2,3,2,-4,9,-5,4,4,7,5,-7,9,2,-6,-5,-5,7,-7,-9,2,-10,4,2,-9,-4,-9,1,-2,5,1,-9,7,6,5,-4,1,5,-9,-7,-6,-5,3,-4,-8,-5,9,5,9,9,-7,2,-8,-7,-2,5,5,-2,5,-5,4,-2,-3,-10,-10,-8,-3,-5,7,-8,-6,6,5,2,-7,5,-7,6,-5,6,-5,-2,-5,9,-1,-1,-2,-8,9,6,-9,7,7,-7,10,-8,8,-3,-9,4,-9,-6,-4,-7,6,-8,6,10,9,-8,3,-3,-7,3,-9,5,4,1,6,2,5,7,-5,7,-6,-2,4,-9,10,-7,3,-10,-3,-6,1,3,7,-7,6,-8,-10,3,-4,5,8,-6,5,-7,-7,9,2,1,-1,4,4,-2,-2,8,-9,1,-6,6,3,4,-8,-7,5,10,8,-5,-7,7,-4,-5,-10,10,-5,1,-2,9,6,-10,6,6,7,-8,-10,2,-10,7,-3,-7,-3,-8,3,-7,-5,-9,9,5,-9,-10,8,3,9,9,6,2,-6,6,-8,-8,10,-4,-5,6,-3,-4,-8,-10,-6,-9,-7,-4,1,-2,-3,-2,8,-5,-4,-8,7,10,1,-2,-1,1,-4,-2,-5,4,5,-2,-1,-7,-7,-3,-6], dtype = "uint64")#candidate|8613|(448,)|const|uint64
call_8611 = func_2096_call(relay.reshape(const_8612.astype('uint64'), []), relay.reshape(const_8613.astype('uint64'), [7, 4, 16]), )
call_8614 = func_2096_call(relay.reshape(const_8612.astype('uint64'), []), relay.reshape(const_8613.astype('uint64'), [7, 4, 16]), )
func_8232_call = mod.get_global_var('func_8232')
func_8234_call = mutated_mod.get_global_var('func_8234')
var_8627 = relay.var("var_8627", dtype = "uint64", shape = (392,))#candidate|8627|(392,)|var|uint64
call_8626 = relay.TupleGetItem(func_8232_call(relay.reshape(var_8627.astype('uint64'), [14, 28])), 1)
call_8628 = relay.TupleGetItem(func_8234_call(relay.reshape(var_8627.astype('uint64'), [14, 28])), 1)
func_8501_call = mod.get_global_var('func_8501')
func_8503_call = mutated_mod.get_global_var('func_8503')
call_8630 = relay.TupleGetItem(func_8501_call(), 1)
call_8631 = relay.TupleGetItem(func_8503_call(), 1)
output = relay.Tuple([call_8609,call_8611,const_8612,const_8613,call_8626,var_8627,call_8630,])
output2 = relay.Tuple([call_8610,call_8614,const_8612,const_8613,call_8628,var_8627,call_8631,])
func_8634 = relay.Function([var_8627,], output)
mod['func_8634'] = func_8634
mod = relay.transform.InferType()(mod)
mutated_mod['func_8634'] = func_8634
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8635 = relay.var("var_8635", dtype = "uint64", shape = (392,))#candidate|8635|(392,)|var|uint64
func_8634_call = mutated_mod.get_global_var('func_8634')
call_8636 = func_8634_call(var_8635)
output = call_8636
func_8637 = relay.Function([var_8635], output)
mutated_mod['func_8637'] = func_8637
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7915_call = mod.get_global_var('func_7915')
func_7917_call = mutated_mod.get_global_var('func_7917')
call_8713 = func_7915_call()
call_8714 = func_7915_call()
func_7200_call = mod.get_global_var('func_7200')
func_7203_call = mutated_mod.get_global_var('func_7203')
var_8717 = relay.var("var_8717", dtype = "float32", shape = (1350,))#candidate|8717|(1350,)|var|float32
call_8716 = func_7200_call(relay.reshape(var_8717.astype('float32'), [10, 9, 15]))
call_8718 = func_7200_call(relay.reshape(var_8717.astype('float32'), [10, 9, 15]))
bop_8734 = relay.power(var_8717.astype('float32'), relay.reshape(call_8716.astype('float32'), relay.shape_of(var_8717))) # shape=(1350,)
bop_8737 = relay.power(var_8717.astype('float32'), relay.reshape(call_8718.astype('float32'), relay.shape_of(var_8717))) # shape=(1350,)
func_8232_call = mod.get_global_var('func_8232')
func_8234_call = mutated_mod.get_global_var('func_8234')
var_8740 = relay.var("var_8740", dtype = "uint64", shape = (392,))#candidate|8740|(392,)|var|uint64
call_8739 = relay.TupleGetItem(func_8232_call(relay.reshape(var_8740.astype('uint64'), [14, 28])), 1)
call_8741 = relay.TupleGetItem(func_8234_call(relay.reshape(var_8740.astype('uint64'), [14, 28])), 1)
output = relay.Tuple([call_8713,bop_8734,call_8739,var_8740,])
output2 = relay.Tuple([call_8714,bop_8737,call_8741,var_8740,])
func_8742 = relay.Function([var_8717,var_8740,], output)
mod['func_8742'] = func_8742
mod = relay.transform.InferType()(mod)
mutated_mod['func_8742'] = func_8742
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8742_call = mutated_mod.get_global_var('func_8742')
var_8744 = relay.var("var_8744", dtype = "float32", shape = (1350,))#candidate|8744|(1350,)|var|float32
var_8745 = relay.var("var_8745", dtype = "uint64", shape = (392,))#candidate|8745|(392,)|var|uint64
call_8743 = func_8742_call(var_8744,var_8745,)
output = call_8743
func_8746 = relay.Function([var_8744,var_8745,], output)
mutated_mod['func_8746'] = func_8746
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8762 = relay.var("var_8762", dtype = "bool", shape = ())#candidate|8762|()|var|bool
var_8763 = relay.var("var_8763", dtype = "bool", shape = (3, 4, 9))#candidate|8763|(3, 4, 9)|var|bool
bop_8764 = relay.logical_and(var_8762.astype('bool'), var_8763.astype('bool')) # shape=(3, 4, 9)
output = relay.Tuple([bop_8764,])
output2 = relay.Tuple([bop_8764,])
func_8769 = relay.Function([var_8762,var_8763,], output)
mod['func_8769'] = func_8769
mod = relay.transform.InferType()(mod)
mutated_mod['func_8769'] = func_8769
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8769_call = mutated_mod.get_global_var('func_8769')
var_8771 = relay.var("var_8771", dtype = "bool", shape = ())#candidate|8771|()|var|bool
var_8772 = relay.var("var_8772", dtype = "bool", shape = (3, 4, 9))#candidate|8772|(3, 4, 9)|var|bool
call_8770 = func_8769_call(var_8771,var_8772,)
output = call_8770
func_8773 = relay.Function([var_8771,var_8772,], output)
mutated_mod['func_8773'] = func_8773
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7783_call = mod.get_global_var('func_7783')
func_7784_call = mutated_mod.get_global_var('func_7784')
call_8802 = func_7783_call()
call_8803 = func_7783_call()
output = call_8802
output2 = call_8803
func_8825 = relay.Function([], output)
mod['func_8825'] = func_8825
mod = relay.transform.InferType()(mod)
mutated_mod['func_8825'] = func_8825
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8825_call = mutated_mod.get_global_var('func_8825')
call_8826 = func_8825_call()
output = call_8826
func_8827 = relay.Function([], output)
mutated_mod['func_8827'] = func_8827
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7714_call = mod.get_global_var('func_7714')
func_7715_call = mutated_mod.get_global_var('func_7715')
call_8828 = relay.TupleGetItem(func_7714_call(), 0)
call_8829 = relay.TupleGetItem(func_7715_call(), 0)
func_8606_call = mod.get_global_var('func_8606')
func_8608_call = mutated_mod.get_global_var('func_8608')
call_8849 = relay.TupleGetItem(func_8606_call(), 0)
call_8850 = relay.TupleGetItem(func_8608_call(), 0)
const_8876 = relay.const([[[7.773247,-7.653967,-3.515637,-1.577460,7.630538,-2.352734,0.486194,-8.650036],[0.316628,6.074351,7.475717,4.153046,8.341926,0.037745,-1.219701,7.173720],[7.947951,-4.910368,-0.992370,-3.205509,2.853808,-7.017336,-3.265890,9.430546],[-6.581062,5.260779,2.804623,-6.137511,0.178336,-9.698546,-1.092771,5.358055],[2.799731,-3.626611,8.044837,-5.290198,7.495534,8.810360,2.860603,-6.693950],[3.115939,8.575280,-9.664457,-9.304154,6.977313,-3.143723,-4.190915,8.808878],[8.522231,4.814695,-3.621860,9.761665,-5.021375,-4.808345,9.775204,8.751102],[-2.686343,0.174806,1.288247,-3.725162,-0.967024,-8.322276,2.306550,5.008742],[3.171417,4.658291,-5.185629,-1.966010,7.646884,-0.658152,3.480535,5.233833],[-2.204286,-5.866399,-2.811474,-0.103520,3.133585,3.705163,-7.733491,4.940348],[5.053103,-4.028281,-4.366065,-4.319500,7.381640,-6.811697,6.420887,-6.288981],[0.667455,1.464133,4.257225,-0.714683,-7.591178,9.082955,-3.000356,8.106287],[0.095387,0.646820,-2.648758,6.071546,-3.820240,-4.157872,-2.053143,0.872015],[8.322445,3.806470,-1.426559,-9.744893,-1.508440,-8.035447,-0.904093,-4.217001],[6.110429,1.462081,-7.391122,7.747534,3.537516,-3.222611,-2.618737,1.621227],[-5.269478,-2.057793,-3.723929,1.231565,4.855468,-2.332561,2.039213,0.962376]],[[-0.419512,-2.647773,-6.137716,-2.256482,6.095167,7.282110,-7.462211,-3.577573],[4.344571,-7.885544,9.593543,-6.002889,7.166528,-1.536046,-5.353359,8.179907],[8.687323,8.392853,7.449089,7.071419,-3.460089,-4.794501,8.891560,5.882371],[8.830038,-6.017315,3.150724,8.044309,7.662625,-9.704385,-0.619148,0.060964],[7.431678,3.249411,-0.712358,-9.303497,6.499833,6.405059,4.283119,6.065109],[-6.678556,9.656833,7.586385,-7.790130,-5.069730,-6.938871,-3.329319,-7.859088],[-7.004338,-7.095486,-8.877023,0.641857,6.360703,-8.835289,7.260651,-0.495540],[-4.406317,5.017149,-7.462582,-9.748151,-1.067283,5.200951,-5.819667,6.238810],[3.203620,9.810972,-3.759968,6.545916,-9.414398,-4.243331,-4.891697,1.526293],[-2.814413,-9.629475,8.408447,1.706795,0.493164,-7.526596,4.635393,-7.025655],[-4.355273,-1.584034,-4.084443,-8.879894,-3.798927,-3.779134,6.079041,9.841004],[-2.477014,4.595653,-0.448790,-9.123535,8.650093,-2.165422,-4.942120,-5.309913],[-0.315374,3.430988,-8.625381,0.118615,-6.351617,3.027935,-5.954414,5.042707],[-2.853648,-2.860281,4.463139,-4.525076,0.677983,6.256472,8.098665,-5.422710],[2.570795,-0.299629,-0.750944,-6.299878,4.244762,-9.942334,-9.888597,5.066460],[-8.683747,7.210953,-1.977418,4.001078,-3.730028,1.177855,-7.684685,-6.769822]],[[6.684187,9.365075,-5.263857,-8.527398,-1.734344,2.557401,-1.964155,7.874302],[-2.633500,-6.827916,9.751233,4.402978,1.508244,4.539495,-3.512003,2.112248],[9.617125,7.376757,-0.457917,7.690924,1.560077,6.647185,0.778691,-8.454038],[5.212419,-2.116178,-3.862852,1.386182,-0.324652,0.302371,-2.440958,-1.214434],[-6.387199,8.083419,4.471992,3.854860,-5.037734,-5.196985,3.834921,1.952817],[-4.032916,4.340613,4.347995,-1.079213,-8.177495,7.259742,-7.219790,-6.309518],[5.102026,7.326697,-7.074887,7.099365,8.261801,2.617547,7.574855,5.121752],[-6.910339,-0.337804,3.175298,-6.838021,0.495650,-4.276670,7.584032,-9.699880],[2.430872,-7.036105,-3.611702,-7.539416,5.649671,-5.247264,-5.664626,-5.993648],[4.819796,3.944980,8.659465,-4.256480,8.176052,-6.559509,5.454906,1.824756],[-5.471902,-0.999534,-1.913704,-0.003048,-8.527878,-1.365900,6.484867,-9.270279],[6.769289,0.397743,3.062835,8.288820,3.653742,8.637126,-4.420582,7.372927],[-5.763553,4.555848,-8.139419,0.461491,9.714991,8.024600,-6.084196,9.679970],[5.722378,6.746483,-5.310455,0.052039,-0.715628,-3.022227,-0.440969,-3.369525],[7.379831,2.200761,7.946370,0.617918,-9.022228,6.988934,-4.468679,-1.528179],[-1.640648,-7.705801,2.881838,-5.581992,-9.384038,-2.207561,-8.613837,-3.905122]],[[5.829129,2.013129,-5.547703,7.713302,9.949744,7.058130,6.411829,-8.341277],[2.317730,-1.319127,-8.677352,4.744662,1.846761,9.276971,-6.930921,6.008424],[9.290478,-5.263906,0.235972,-0.878431,5.437966,-5.656845,-9.645081,-0.428457],[8.560982,-0.957620,0.633656,2.353850,5.749813,-0.015354,-0.908573,6.124975],[-8.310203,1.564422,5.630965,-8.300729,3.032823,8.642452,1.115540,-1.359197],[-1.432637,7.124559,-2.974804,-5.120553,4.884217,1.943880,6.602274,-5.002641],[-1.206125,8.273148,4.676681,-8.673601,8.860386,-2.830052,7.237032,8.480670],[9.049510,7.313042,2.575648,-5.529657,-7.416591,-1.068744,-3.336155,9.702952],[-7.100268,4.280949,8.288135,9.474388,2.025706,2.226070,-8.249397,4.323809],[5.194381,4.333843,-2.418845,-7.945415,6.360499,-0.503626,6.908894,-9.997351],[8.441034,6.507458,-0.576557,6.855379,7.758715,-5.616129,9.618728,1.743579],[6.173597,-8.568534,-0.865411,-0.888016,3.113662,-9.292090,2.812607,6.883981],[-6.107866,0.572655,1.200157,-5.168875,9.565669,-0.122487,-2.969195,-0.492821],[-9.467241,-6.649093,2.697524,-2.627417,0.699333,2.185398,1.563139,6.604003],[3.504003,-1.072886,7.429968,5.376390,-1.052279,-5.408139,-7.945578,-9.351204],[6.727683,5.056651,8.744875,8.203395,-6.160711,0.146071,1.817854,4.487261]],[[3.366850,1.814220,7.891450,-4.937362,-5.222952,-3.442566,1.102155,1.400417],[9.560198,4.867393,-1.928597,-5.318400,3.636115,5.744386,-3.608574,6.589629],[-8.874062,9.225089,-0.942345,9.576219,-8.277605,3.117385,-7.491541,-5.514799],[7.249836,3.020018,-6.946958,2.967217,2.773310,9.315598,1.470923,-7.013012],[3.625212,4.509191,5.680158,1.036369,9.787639,7.176833,1.033453,7.891676],[6.991020,5.364895,-3.077056,7.545586,4.524734,-4.735097,8.602791,-4.646735],[-1.545485,-0.713285,0.696239,4.186631,-2.253438,-5.598973,-9.174149,3.800331],[-7.476473,6.927081,1.144151,1.652515,3.036795,5.273705,-0.945046,-9.699942],[-5.425874,-1.057827,-2.157872,-8.189894,-1.135088,-8.829620,-6.521811,-8.286685],[-5.684868,-7.354989,-2.399782,-4.873100,4.499778,-3.384029,-7.539994,-9.197268],[-0.842179,-9.160738,-0.822316,3.107077,9.985681,7.180957,6.711516,5.992172],[1.416705,7.493861,4.412465,-7.512182,-2.721761,-0.979539,1.219160,6.027919],[0.632650,-1.064399,-8.991682,-1.907411,4.175249,1.138342,9.169501,1.713115],[-1.673513,-0.550021,-9.449776,-1.297526,5.718381,9.224050,0.304150,-0.193883],[-3.926589,-6.598475,6.690707,5.869401,-6.204086,1.860521,0.487488,1.860804],[-9.319882,9.185139,-7.221127,5.774109,-6.160505,-0.235334,6.086548,-8.294819]],[[3.067755,-1.421841,6.319893,8.653468,-7.555455,1.952858,7.631929,-5.765604],[-5.334967,0.657874,8.795084,-5.592974,9.665327,-3.326615,-2.000689,3.470752],[1.581626,-7.952528,0.021551,3.038508,-6.539389,7.738958,7.281109,2.023523],[2.499253,-3.214762,7.616668,-7.012825,0.150386,3.702597,6.805099,6.727738],[-6.868532,2.712421,5.965709,-8.450802,6.638068,-8.262782,1.292562,-0.193056],[-8.563316,3.539103,9.928114,-4.046319,-8.030412,-8.965868,-3.553195,4.183410],[4.706517,-8.539419,0.758987,3.573255,-6.814787,6.173036,6.446153,-1.981460],[-9.005578,-1.850811,8.060198,-9.399153,-9.812464,3.353431,-0.105683,-3.893129],[1.585150,-8.903821,9.255363,2.985675,9.760623,5.360708,-8.091005,-8.321580],[4.702803,3.480094,-0.787421,7.316239,-0.739415,7.684067,9.924320,9.777412],[8.012120,0.669597,7.457456,-8.418120,1.144311,7.860702,-7.405275,-0.993511],[-3.191428,-4.360364,2.302562,-3.801645,8.533373,-8.891434,1.922626,4.180387],[2.647175,7.979782,-3.211393,-3.418657,9.928510,9.265777,6.404670,6.148222],[0.675412,-2.261406,0.788371,1.989277,8.167889,1.558117,7.004908,8.161004],[3.790997,7.551519,-0.536545,5.396967,5.420380,5.922098,-7.039362,9.394411],[6.271518,-3.134073,-7.601745,7.526192,1.737343,-6.526624,4.225449,-1.465776]],[[-2.448489,-4.414003,6.827026,-4.075450,6.658693,5.987956,-9.165007,9.874651],[2.576482,8.683424,7.129479,4.825112,2.213607,7.130792,4.612279,-4.277609],[1.975936,-7.954278,-4.204570,-4.322636,6.618873,-8.975973,-9.349967,8.308231],[6.424444,5.365327,0.925270,-3.738822,-8.819374,6.879740,4.758795,3.656600],[5.651854,2.163364,-4.288576,6.858023,6.859715,4.865881,7.896340,6.433895],[0.102260,-5.512392,9.386674,-5.419725,-2.596248,7.079546,1.737116,8.549838],[3.760271,-7.480126,-4.466796,8.495970,1.678794,8.506965,6.041783,-2.238587],[8.274665,7.623073,7.129218,-1.418634,5.832201,3.947888,-9.839204,4.619555],[4.707124,5.853649,7.788900,2.932588,1.167185,-4.516833,-3.745509,-8.981346],[7.688837,-1.795076,0.494457,-9.184879,8.498988,7.403599,-4.693466,5.445192],[-7.141944,5.003411,8.214609,0.492989,4.025279,4.517029,-0.186320,3.289847],[2.233141,-8.802810,-2.279511,8.642068,-6.525719,8.122428,-8.890000,-0.431368],[7.083946,-8.219598,-3.839592,-7.753891,7.896128,0.189338,1.708906,3.531733],[6.912083,7.260199,8.586773,7.660253,8.674615,-8.661859,6.637150,-3.502462],[0.521129,1.643369,-8.141848,0.254272,7.502517,7.568964,-0.271816,4.541474],[-3.395977,9.228795,6.664016,4.502159,-7.587281,-4.774816,-0.256301,-4.283845]],[[-2.955300,-9.441036,2.425449,-7.138372,-2.081029,3.547897,5.884367,-0.044394],[6.907808,5.775298,-0.950951,9.738313,-0.429347,-5.095720,0.534741,-0.225343],[-0.597601,-3.532354,8.691271,-6.492734,4.389203,-4.262991,-1.965585,-6.195388],[-6.104424,3.364228,6.198060,8.938451,-0.579865,-6.368543,7.373744,2.306655],[9.090438,9.385160,9.506687,0.253577,-7.524676,6.963458,-7.843818,-8.212549],[4.970733,-9.474709,9.630700,-9.711799,6.873271,2.300268,-2.663553,1.381846],[-3.918788,-4.881833,-6.624633,-6.534493,4.332759,-1.505650,-5.703653,-8.206248],[-0.622843,-2.452152,2.919010,8.944675,5.613723,4.328694,-8.221901,-7.849913],[7.833249,-6.711876,-1.304743,-6.176077,-8.374629,0.360769,-0.287931,-9.681390],[-8.065238,-1.158634,2.922239,8.618614,-5.978336,-8.508571,4.285991,9.365925],[4.470108,-1.100936,5.343280,6.764353,6.361217,-8.956538,5.672866,-4.231915],[2.217990,9.478616,2.735022,2.832831,4.011710,-8.650110,-4.084044,4.444829],[3.684479,7.507760,3.514223,-4.565469,-1.794653,-1.517966,3.468323,4.338527],[8.536086,5.348987,5.857286,-2.485426,3.956373,4.483103,-4.320916,6.140694],[4.059106,-9.119837,-5.900810,5.137045,6.825313,-0.186751,1.157577,5.247973],[-0.015588,4.876859,-1.724117,-1.236866,-5.367285,9.138784,-6.734822,-9.553348]]], dtype = "float64")#candidate|8876|(8, 16, 8)|const|float64
bop_8877 = relay.bitwise_and(call_8828.astype('int64'), relay.reshape(const_8876.astype('int64'), relay.shape_of(call_8828))) # shape=(8, 16, 8)
bop_8880 = relay.bitwise_and(call_8829.astype('int64'), relay.reshape(const_8876.astype('int64'), relay.shape_of(call_8829))) # shape=(8, 16, 8)
func_6097_call = mod.get_global_var('func_6097')
func_6099_call = mutated_mod.get_global_var('func_6099')
const_8882 = relay.const([5.941650,3.253585,2.869259,4.082673,-1.287488,-7.790273,9.094477,-7.273693,-4.354954,-7.637132,-4.622613,5.132412,6.130893,6.057693,-9.530493,-7.064655,3.054295,-9.767730,2.403386,3.728356,1.511956,-4.806976,-0.289124,-3.769618,5.052533,2.718453,1.019802,9.130860,3.531631,8.562741,6.599863,9.705628,9.960418,-6.224836,5.397856,-6.651085,5.624669,-6.603121,-5.844788,-0.720232,5.259596,5.513799,1.780310,5.834420,1.049954,-6.445577,-7.860247,4.098727,8.122244,-9.940454,0.532220,-4.657747,7.488901,-3.868152,9.446774,3.598273,-1.808727,8.287523,8.045511,-3.199999,0.678766,-5.924080,-2.519784,7.495209,4.450121,2.349702,5.224448,8.779230,-9.429845,-3.835545,3.168176,-9.487034,-8.772889,2.601085,-1.793442,6.381095,-6.054347,1.038958,5.480366,-7.587862,-3.344835,-3.614932,2.771334,-5.514750,0.995382,0.498778,-9.384007,5.429877,2.490683,1.229402,-3.376922,6.102851,-9.894744,-6.694367,-1.700702,-0.175786,-0.486096,-2.552803,-0.815632,0.333778,6.668242,-4.500813,-1.429422,-7.446292,-8.950783,2.178313,-5.449085,1.850123,6.935127,7.118728,5.483375,-4.982318,-1.297047,3.220447,6.068727,-4.008164,-8.000180,-8.766138,-2.530909,-4.019679,-6.491736,-5.114764,5.952022,5.258162,6.972124,-2.309212,-3.178147,-6.442657,7.163864,-7.078189,-7.023066,9.222054,8.397889,3.301102,-1.779020,9.757474,9.994391,-3.968731,8.985954,2.016511,-1.267898,5.756131,-6.063018,2.466250,-3.605277,-5.947602,-1.298840,2.031733,9.225216,-2.491554,-6.357496,8.362583,5.342075,-7.595104,3.271149,3.530958,7.245425,4.425534,-0.688958,8.338132,-8.504183,6.539933,3.801782,-6.886906,8.615732,2.541704,-8.089623,2.828952,-4.802004,9.654593,8.392607,1.588049,5.571620,-1.349857,4.636140,-1.437150,5.628538,-1.847783,-0.010869,0.629931,6.654767,-3.170994,2.993668,6.715425,1.119706,-3.111596,2.093651,-8.164348,-7.128830,-5.806177,-7.021686,8.294284,-5.898936,9.608084,-3.995203,-5.208095,0.390696,-6.104385,-7.403219,-7.394655,-2.186888,-6.594692,-4.218837,-1.757062,4.061979,-0.493257,-0.392023,8.969847,0.342915,9.978508,-4.947094,-6.917741,-2.795379,-8.250052,-7.654550,6.940619,6.452759,3.317763,-5.255746,-1.831506,-8.499254,4.784222,-4.958997,-8.745152,5.462028,-7.158274,9.290541,2.000623,2.531638,1.064104,-6.401314,-0.791546,-0.120476,4.085252,3.460044,6.296310,-1.683134,-3.623609,4.061850,6.491094,9.593604,-6.595871,-5.863435,-2.251836,-3.291404,8.639896,-5.110356,-0.098443,0.054089,9.204310,-6.150062,0.781655,-2.695972,6.789798,-7.630740,-9.944425,-0.713149,-2.631619,3.672565,-2.524512,-8.159606,-8.314888,5.802653,-5.533724,5.562086,-9.916132,-6.562382,-2.560068,7.279318,-5.527918,-8.277798,5.957057,-0.435654,4.190428,0.416005,9.210030,-5.376295,-4.387596,-2.099957,-7.911290,6.783390,5.231768,-7.134295,-2.539952,-4.753062,5.624957,0.374804,3.075259,7.439877,7.828329,2.404429,-2.366241,8.439780,9.610212,6.861523,0.802590,-8.867730,-2.427311,-4.389533,2.219242,-5.259018,-4.189016,3.493459,9.586200,-6.923458,2.308722,8.520969,6.271097,4.549060,-8.067807,5.374119,5.332107,2.042667,-7.299063,-8.524842], dtype = "float32")#candidate|8882|(315,)|const|float32
call_8881 = func_6097_call(relay.reshape(const_8882.astype('float32'), [7, 3, 15]))
call_8883 = func_6097_call(relay.reshape(const_8882.astype('float32'), [7, 3, 15]))
output = relay.Tuple([call_8849,bop_8877,call_8881,const_8882,])
output2 = relay.Tuple([call_8850,bop_8880,call_8883,const_8882,])
func_8889 = relay.Function([], output)
mod['func_8889'] = func_8889
mod = relay.transform.InferType()(mod)
mutated_mod['func_8889'] = func_8889
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8889_call = mutated_mod.get_global_var('func_8889')
call_8890 = func_8889_call()
output = call_8890
func_8891 = relay.Function([], output)
mutated_mod['func_8891'] = func_8891
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8028_call = mod.get_global_var('func_8028')
func_8030_call = mutated_mod.get_global_var('func_8030')
call_9005 = func_8028_call()
call_9006 = func_8028_call()
output = call_9005
output2 = call_9006
func_9013 = relay.Function([], output)
mod['func_9013'] = func_9013
mod = relay.transform.InferType()(mod)
output = func_9013()
func_9014 = relay.Function([], output)
mutated_mod['func_9014'] = func_9014
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8173_call = mod.get_global_var('func_8173')
func_8175_call = mutated_mod.get_global_var('func_8175')
call_9058 = relay.TupleGetItem(func_8173_call(), 0)
call_9059 = relay.TupleGetItem(func_8175_call(), 0)
output = call_9058
output2 = call_9059
func_9064 = relay.Function([], output)
mod['func_9064'] = func_9064
mod = relay.transform.InferType()(mod)
mutated_mod['func_9064'] = func_9064
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9064_call = mutated_mod.get_global_var('func_9064')
call_9065 = func_9064_call()
output = call_9065
func_9066 = relay.Function([], output)
mutated_mod['func_9066'] = func_9066
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7874_call = mod.get_global_var('func_7874')
func_7876_call = mutated_mod.get_global_var('func_7876')
call_9173 = relay.TupleGetItem(func_7874_call(), 0)
call_9174 = relay.TupleGetItem(func_7876_call(), 0)
output = relay.Tuple([call_9173,])
output2 = relay.Tuple([call_9174,])
func_9203 = relay.Function([], output)
mod['func_9203'] = func_9203
mod = relay.transform.InferType()(mod)
output = func_9203()
func_9204 = relay.Function([], output)
mutated_mod['func_9204'] = func_9204
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8173_call = mod.get_global_var('func_8173')
func_8175_call = mutated_mod.get_global_var('func_8175')
call_9241 = relay.TupleGetItem(func_8173_call(), 0)
call_9242 = relay.TupleGetItem(func_8175_call(), 0)
output = call_9241
output2 = call_9242
func_9254 = relay.Function([], output)
mod['func_9254'] = func_9254
mod = relay.transform.InferType()(mod)
mutated_mod['func_9254'] = func_9254
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9254_call = mutated_mod.get_global_var('func_9254')
call_9255 = func_9254_call()
output = call_9255
func_9256 = relay.Function([], output)
mutated_mod['func_9256'] = func_9256
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9312 = relay.var("var_9312", dtype = "uint32", shape = ())#candidate|9312|()|var|uint32
const_9313 = relay.const([[[-1,-3,8,7,-3,6,-8],[-6,-8,3,-6,10,6,4],[-6,7,4,6,-5,10,3],[-7,-9,-10,-6,9,-1,-5]],[[6,6,-6,1,-4,4,1],[1,-9,7,-9,-5,1,9],[4,10,-5,3,-9,3,-3],[-5,2,10,-2,9,3,8]],[[-7,-5,3,10,2,-9,-10],[-4,-1,9,5,-3,8,10],[-4,-7,-7,2,10,8,-7],[-2,-1,-4,-7,4,-4,-1]]], dtype = "uint32")#candidate|9313|(3, 4, 7)|const|uint32
bop_9314 = relay.less_equal(var_9312.astype('bool'), const_9313.astype('bool')) # shape=(3, 4, 7)
func_9064_call = mod.get_global_var('func_9064')
func_9066_call = mutated_mod.get_global_var('func_9066')
call_9333 = func_9064_call()
call_9334 = func_9064_call()
var_9341 = relay.var("var_9341", dtype = "bool", shape = (3, 4, 7))#candidate|9341|(3, 4, 7)|var|bool
bop_9342 = relay.minimum(bop_9314.astype('int16'), relay.reshape(var_9341.astype('int16'), relay.shape_of(bop_9314))) # shape=(3, 4, 7)
output = relay.Tuple([call_9333,bop_9342,])
output2 = relay.Tuple([call_9334,bop_9342,])
func_9352 = relay.Function([var_9312,var_9341,], output)
mod['func_9352'] = func_9352
mod = relay.transform.InferType()(mod)
var_9353 = relay.var("var_9353", dtype = "uint32", shape = ())#candidate|9353|()|var|uint32
var_9354 = relay.var("var_9354", dtype = "bool", shape = (3, 4, 7))#candidate|9354|(3, 4, 7)|var|bool
output = func_9352(var_9353,var_9354,)
func_9355 = relay.Function([var_9353,var_9354,], output)
mutated_mod['func_9355'] = func_9355
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8173_call = mod.get_global_var('func_8173')
func_8175_call = mutated_mod.get_global_var('func_8175')
call_9368 = relay.TupleGetItem(func_8173_call(), 0)
call_9369 = relay.TupleGetItem(func_8175_call(), 0)
output = call_9368
output2 = call_9369
func_9380 = relay.Function([], output)
mod['func_9380'] = func_9380
mod = relay.transform.InferType()(mod)
mutated_mod['func_9380'] = func_9380
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9380_call = mutated_mod.get_global_var('func_9380')
call_9381 = func_9380_call()
output = call_9381
func_9382 = relay.Function([], output)
mutated_mod['func_9382'] = func_9382
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8606_call = mod.get_global_var('func_8606')
func_8608_call = mutated_mod.get_global_var('func_8608')
call_9383 = relay.TupleGetItem(func_8606_call(), 0)
call_9384 = relay.TupleGetItem(func_8608_call(), 0)
output = call_9383
output2 = call_9384
func_9399 = relay.Function([], output)
mod['func_9399'] = func_9399
mod = relay.transform.InferType()(mod)
mutated_mod['func_9399'] = func_9399
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9399_call = mutated_mod.get_global_var('func_9399')
call_9400 = func_9399_call()
output = call_9400
func_9401 = relay.Function([], output)
mutated_mod['func_9401'] = func_9401
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8606_call = mod.get_global_var('func_8606')
func_8608_call = mutated_mod.get_global_var('func_8608')
call_9431 = relay.TupleGetItem(func_8606_call(), 0)
call_9432 = relay.TupleGetItem(func_8608_call(), 0)
output = call_9431
output2 = call_9432
func_9447 = relay.Function([], output)
mod['func_9447'] = func_9447
mod = relay.transform.InferType()(mod)
mutated_mod['func_9447'] = func_9447
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9447_call = mutated_mod.get_global_var('func_9447')
call_9448 = func_9447_call()
output = call_9448
func_9449 = relay.Function([], output)
mutated_mod['func_9449'] = func_9449
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8889_call = mod.get_global_var('func_8889')
func_8891_call = mutated_mod.get_global_var('func_8891')
call_9490 = relay.TupleGetItem(func_8889_call(), 0)
call_9491 = relay.TupleGetItem(func_8891_call(), 0)
output = call_9490
output2 = call_9491
func_9492 = relay.Function([], output)
mod['func_9492'] = func_9492
mod = relay.transform.InferType()(mod)
output = func_9492()
func_9493 = relay.Function([], output)
mutated_mod['func_9493'] = func_9493
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8606_call = mod.get_global_var('func_8606')
func_8608_call = mutated_mod.get_global_var('func_8608')
call_9502 = relay.TupleGetItem(func_8606_call(), 0)
call_9503 = relay.TupleGetItem(func_8608_call(), 0)
func_8634_call = mod.get_global_var('func_8634')
func_8637_call = mutated_mod.get_global_var('func_8637')
const_9507 = relay.const([4,-3,6,-8,1,-5,9,-2,-1,-10,-2,-9,6,-2,-2,-2,-3,-7,-6,-7,-4,-7,-10,-7,-2,1,9,-2,9,5,-5,8,-2,6,9,-7,6,7,3,-4,-2,8,8,-6,8,-8,8,2,2,-8,-3,-3,8,-4,3,5,-4,7,-5,-1,-4,-7,-9,-2,8,2,-6,-10,-5,5,-2,-5,5,10,-5,-4,-2,-3,1,1,-5,1,-8,-6,-3,4,3,-2,1,8,-5,-9,3,-5,5,-4,-9,-4,3,-1,-2,4,4,4,7,3,4,8,-4,-4,1,1,-2,-6,-4,-5,-1,10,4,1,5,5,6,9,-8,-8,2,8,4,-10,2,5,-2,-1,8,-8,-5,-4,-6,-2,-7,-3,10,2,-7,4,-6,5,3,-6,7,6,7,-5,-5,7,-7,-1,-2,-3,-3,-10,-4,-9,-2,-10,1,1,7,10,4,6,-8,8,-7,-10,-6,1,9,10,7,10,-7,-5,-8,-8,4,4,8,5,3,-8,-8,-10,1,8,-10,-5,9,1,6,-2,5,4,7,1,-5,-8,7,9,8,5,8,-4,1,6,7,8,3,-7,9,8,-6,6,6,3,-5,-1,2,9,3,9,-5,-3,-6,7,-8,-9,3,2,-3,3,-5,2,-10,-1,8,4,-8,2,-9,1,-5,-6,8,-10,-2,10,7,-7,4,-1,-9,-8,4,-10,8,-4,4,3,-5,2,6,-7,5,-10,-1,3,-8,6,10,6,-9,-3,10,4,1,-3,9,9,-3,5,2,3,-9,-3,-6,9,1,8,-9,5,2,8,7,7,8,3,8,-1,4,7,3,5,9,-5,8,8,-1,3,-6,7,2,6,-5,-8,1,9,3,-1,-7,-9,-8,7,5,-7,-10,-7,-6,4,-1,10,-10,-9,-1,3,7,-5,3,4,1,9,8,6,10,-5,2,5,4,-5,4,-3,2,-8,9,10,-5,-3,-8,7,9,-1,7,3,9,8,-5,-6,8,-9,8,-9,2,-6,-1,8,-6,10,-4,7,-4,1], dtype = "uint64")#candidate|9507|(392,)|const|uint64
call_9506 = relay.TupleGetItem(func_8634_call(relay.reshape(const_9507.astype('uint64'), [392,])), 0)
call_9508 = relay.TupleGetItem(func_8637_call(relay.reshape(const_9507.astype('uint64'), [392,])), 0)
output = relay.Tuple([call_9502,call_9506,const_9507,])
output2 = relay.Tuple([call_9503,call_9508,const_9507,])
func_9514 = relay.Function([], output)
mod['func_9514'] = func_9514
mod = relay.transform.InferType()(mod)
mutated_mod['func_9514'] = func_9514
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9514_call = mutated_mod.get_global_var('func_9514')
call_9515 = func_9514_call()
output = call_9515
func_9516 = relay.Function([], output)
mutated_mod['func_9516'] = func_9516
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7783_call = mod.get_global_var('func_7783')
func_7784_call = mutated_mod.get_global_var('func_7784')
call_9566 = func_7783_call()
call_9567 = func_7783_call()
output = relay.Tuple([call_9566,])
output2 = relay.Tuple([call_9567,])
func_9577 = relay.Function([], output)
mod['func_9577'] = func_9577
mod = relay.transform.InferType()(mod)
mutated_mod['func_9577'] = func_9577
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9577_call = mutated_mod.get_global_var('func_9577')
call_9578 = func_9577_call()
output = call_9578
func_9579 = relay.Function([], output)
mutated_mod['func_9579'] = func_9579
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9254_call = mod.get_global_var('func_9254')
func_9256_call = mutated_mod.get_global_var('func_9256')
call_9583 = func_9254_call()
call_9584 = func_9254_call()
func_8548_call = mod.get_global_var('func_8548')
func_8550_call = mutated_mod.get_global_var('func_8550')
var_9592 = relay.var("var_9592", dtype = "float32", shape = (270,))#candidate|9592|(270,)|var|float32
call_9591 = relay.TupleGetItem(func_8548_call(relay.reshape(var_9592.astype('float32'), [270,])), 3)
call_9593 = relay.TupleGetItem(func_8550_call(relay.reshape(var_9592.astype('float32'), [270,])), 3)
func_8825_call = mod.get_global_var('func_8825')
func_8827_call = mutated_mod.get_global_var('func_8827')
call_9605 = func_8825_call()
call_9606 = func_8825_call()
output = relay.Tuple([call_9583,call_9591,var_9592,call_9605,])
output2 = relay.Tuple([call_9584,call_9593,var_9592,call_9606,])
func_9628 = relay.Function([var_9592,], output)
mod['func_9628'] = func_9628
mod = relay.transform.InferType()(mod)
mutated_mod['func_9628'] = func_9628
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9629 = relay.var("var_9629", dtype = "float32", shape = (270,))#candidate|9629|(270,)|var|float32
func_9628_call = mutated_mod.get_global_var('func_9628')
call_9630 = func_9628_call(var_9629)
output = call_9630
func_9631 = relay.Function([var_9629], output)
mutated_mod['func_9631'] = func_9631
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9064_call = mod.get_global_var('func_9064')
func_9066_call = mutated_mod.get_global_var('func_9066')
call_9703 = func_9064_call()
call_9704 = func_9064_call()
func_8889_call = mod.get_global_var('func_8889')
func_8891_call = mutated_mod.get_global_var('func_8891')
call_9728 = relay.TupleGetItem(func_8889_call(), 3)
call_9729 = relay.TupleGetItem(func_8891_call(), 3)
func_6097_call = mod.get_global_var('func_6097')
func_6099_call = mutated_mod.get_global_var('func_6099')
call_9730 = func_6097_call(relay.reshape(call_9728.astype('float32'), [7, 3, 15]))
call_9731 = func_6097_call(relay.reshape(call_9728.astype('float32'), [7, 3, 15]))
func_8889_call = mod.get_global_var('func_8889')
func_8891_call = mutated_mod.get_global_var('func_8891')
call_9735 = relay.TupleGetItem(func_8889_call(), 1)
call_9736 = relay.TupleGetItem(func_8891_call(), 1)
output = relay.Tuple([call_9703,call_9728,call_9730,call_9735,])
output2 = relay.Tuple([call_9704,call_9729,call_9731,call_9736,])
func_9744 = relay.Function([], output)
mod['func_9744'] = func_9744
mod = relay.transform.InferType()(mod)
output = func_9744()
func_9745 = relay.Function([], output)
mutated_mod['func_9745'] = func_9745
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8501_call = mod.get_global_var('func_8501')
func_8503_call = mutated_mod.get_global_var('func_8503')
call_9793 = relay.TupleGetItem(func_8501_call(), 0)
call_9794 = relay.TupleGetItem(func_8503_call(), 0)
output = call_9793
output2 = call_9794
func_9795 = relay.Function([], output)
mod['func_9795'] = func_9795
mod = relay.transform.InferType()(mod)
output = func_9795()
func_9796 = relay.Function([], output)
mutated_mod['func_9796'] = func_9796
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8501_call = mod.get_global_var('func_8501')
func_8503_call = mutated_mod.get_global_var('func_8503')
call_9826 = relay.TupleGetItem(func_8501_call(), 0)
call_9827 = relay.TupleGetItem(func_8503_call(), 0)
output = call_9826
output2 = call_9827
func_9830 = relay.Function([], output)
mod['func_9830'] = func_9830
mod = relay.transform.InferType()(mod)
mutated_mod['func_9830'] = func_9830
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9830_call = mutated_mod.get_global_var('func_9830')
call_9831 = func_9830_call()
output = call_9831
func_9832 = relay.Function([], output)
mutated_mod['func_9832'] = func_9832
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8889_call = mod.get_global_var('func_8889')
func_8891_call = mutated_mod.get_global_var('func_8891')
call_9838 = relay.TupleGetItem(func_8889_call(), 3)
call_9839 = relay.TupleGetItem(func_8891_call(), 3)
output = call_9838
output2 = call_9839
func_9849 = relay.Function([], output)
mod['func_9849'] = func_9849
mod = relay.transform.InferType()(mod)
output = func_9849()
func_9850 = relay.Function([], output)
mutated_mod['func_9850'] = func_9850
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9013_call = mod.get_global_var('func_9013')
func_9014_call = mutated_mod.get_global_var('func_9014')
call_9965 = func_9013_call()
call_9966 = func_9013_call()
output = call_9965
output2 = call_9966
func_9983 = relay.Function([], output)
mod['func_9983'] = func_9983
mod = relay.transform.InferType()(mod)
mutated_mod['func_9983'] = func_9983
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9983_call = mutated_mod.get_global_var('func_9983')
call_9984 = func_9983_call()
output = call_9984
func_9985 = relay.Function([], output)
mutated_mod['func_9985'] = func_9985
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9830_call = mod.get_global_var('func_9830')
func_9832_call = mutated_mod.get_global_var('func_9832')
call_9994 = func_9830_call()
call_9995 = func_9830_call()
output = relay.Tuple([call_9994,])
output2 = relay.Tuple([call_9995,])
func_10030 = relay.Function([], output)
mod['func_10030'] = func_10030
mod = relay.transform.InferType()(mod)
output = func_10030()
func_10031 = relay.Function([], output)
mutated_mod['func_10031'] = func_10031
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9577_call = mod.get_global_var('func_9577')
func_9579_call = mutated_mod.get_global_var('func_9579')
call_10082 = relay.TupleGetItem(func_9577_call(), 0)
call_10083 = relay.TupleGetItem(func_9579_call(), 0)
const_10091 = relay.const([[[4.578231,3.793008,5.284891,0.461761,-8.396358,-0.855000,-6.688715,-9.375411],[0.153962,-1.994223,-6.852295,0.550760,8.533765,-5.355863,-0.816736,-5.820816],[-8.333224,-0.744599,0.857068,-3.536920,6.085581,9.320187,-3.618004,-6.751377],[-0.277489,-6.263986,1.786380,1.792402,3.835187,7.493067,-9.990270,1.330379],[5.663869,-5.312879,9.197591,7.233203,0.422905,-9.503114,-3.592268,3.639523],[0.810543,5.497980,1.524993,4.672258,-3.388370,-8.734074,-8.391440,-6.303368],[2.596735,8.130036,0.416055,3.905912,4.683034,-5.427064,-9.304805,-3.504461],[-5.531275,-7.053401,-5.265960,-8.650101,8.207986,0.445548,-7.553769,8.595587],[-5.870459,-2.657523,3.593221,9.111940,9.591610,-9.857626,5.959535,9.817266],[-4.977382,-1.817603,-3.984108,-8.691066,6.121508,0.507945,1.068005,-3.485557],[3.590006,2.134312,-6.370356,3.904243,8.509542,-4.294944,-4.948355,-9.808582],[4.455613,-0.935387,3.421754,8.904267,-5.457147,-1.968566,-0.846938,-7.081131],[3.636639,-6.469143,-8.539414,2.565977,-6.713490,-2.142644,2.964322,9.481051],[9.615383,-2.048660,-2.570130,-5.375646,0.240528,-1.771810,8.403782,1.661079],[2.455997,-6.619121,-3.196404,4.332867,5.032548,0.062671,-1.837057,-4.964560],[-8.619666,-7.727851,-4.369907,-3.432782,3.566769,4.154618,5.415969,2.374283]],[[3.880652,-2.414126,8.037535,-2.220685,4.213331,2.311648,-4.379265,-2.588173],[9.972942,-1.154244,2.931073,2.151964,2.106156,6.159056,5.035764,7.512290],[-8.763159,-0.176474,4.815234,0.875575,8.840750,-6.376884,-1.040047,-3.043930],[0.005657,1.536669,0.445146,2.026922,-8.924343,2.492963,7.706289,-6.189769],[-6.125650,8.284104,0.948867,0.676018,-7.410276,-7.417029,-3.124707,-4.706638],[1.838821,-8.317201,-7.825578,-1.146800,-8.069363,-7.775609,-3.427450,6.622732],[-6.239044,3.471476,9.009911,-2.628339,-8.173703,-5.011095,1.836542,1.009335],[3.063521,-2.852937,6.100349,-4.566459,-7.348483,-2.595148,7.889220,-1.854626],[-9.252127,4.401755,-7.170473,4.539527,-3.307822,2.174725,-2.986284,9.367560],[-4.854298,1.114955,-2.487233,3.572653,5.994403,6.270046,4.292934,-4.347439],[8.847914,-7.662906,6.024206,9.497607,6.102047,3.732612,7.088091,2.814884],[-2.565976,7.357191,-7.097359,-8.958541,-1.386533,-2.918360,0.079846,-9.976982],[-7.196931,-7.719595,-0.108370,-6.311379,-0.383717,-7.682242,-3.947478,1.981748],[-0.423073,0.815477,2.369076,-2.557923,2.808449,7.088809,9.761689,-8.571473],[-4.430574,2.767458,-2.227283,8.890253,-8.611664,-3.948921,9.698824,6.675597],[-6.216329,8.666905,-7.724822,-3.751692,-8.753138,-1.357239,7.553551,-0.538283]],[[3.877146,-0.506555,3.830799,-2.283962,5.858723,-0.677295,-6.292080,7.462777],[-5.455341,-8.841443,-5.619590,-1.511055,2.466329,4.267853,6.183061,-7.632942],[9.033031,-7.116986,-0.345438,-5.307501,7.132026,1.040075,0.808816,3.527857],[8.414406,-5.216815,-6.275700,-9.946332,-5.426206,-3.830878,1.567488,-3.554712],[6.341980,5.144985,-9.831257,-8.697131,-8.518868,9.688069,-4.897942,8.994868],[7.220039,2.360767,5.111069,1.182967,9.608964,6.915498,-5.926326,-7.743704],[4.797464,-7.017340,6.633172,5.266311,-7.234339,5.751382,0.072445,-8.087008],[7.729212,-7.084589,5.554699,-0.484630,5.595460,-3.526482,7.868054,-1.198709],[-2.060471,-9.493342,8.458295,-2.598544,7.270204,-4.435580,-4.472506,3.547672],[-1.252522,-0.965097,7.782449,5.274457,0.983888,-4.716807,-5.536637,7.584992],[0.943481,-1.942321,4.763719,-4.332742,1.457634,-4.220473,0.899667,4.800547],[2.760082,-4.732486,-3.191444,-4.770660,7.428226,-2.996240,3.036742,-7.359800],[-7.012543,1.099475,9.017954,-3.397627,-9.893677,0.345628,-5.997828,6.888712],[-5.840203,-2.410826,1.465423,-0.499918,1.286019,-6.649054,-1.063265,-8.688165],[-6.577434,4.828748,3.973893,-5.997045,-5.852696,-2.987446,-8.206733,-4.917508],[7.550011,7.723293,9.828509,5.480219,-0.242499,1.027175,-5.018972,5.340791]],[[1.442459,6.025657,-7.187624,-0.247769,7.680443,2.350705,5.538890,-9.004574],[-1.587088,1.334078,-3.014766,0.722816,4.097821,9.878800,-1.171505,-4.131639],[1.230867,-4.574872,4.230318,-0.955129,5.450556,-1.689645,-2.330054,7.624513],[-5.497343,-0.228630,0.996322,9.889778,0.414755,4.158277,-8.059960,9.709473],[2.065602,9.919893,2.981307,5.071987,-1.295101,8.380006,-5.862088,1.463480],[9.168772,8.123924,4.633113,5.521612,-7.410309,-9.291126,-0.523449,-0.973903],[-3.501196,-0.833719,-4.406959,-4.063813,3.334166,8.510814,8.402187,-4.425115],[-7.755512,7.497636,0.704851,-8.836182,6.509665,-4.479892,9.485207,6.501369],[-2.470614,0.894668,8.961738,1.077961,9.021348,1.431524,-4.696450,2.256983],[5.778044,-5.408064,-7.919631,-4.697324,-6.835411,3.212641,-6.620961,1.599485],[4.401888,5.558253,-6.616557,9.673152,5.607375,-4.648814,6.141776,-5.688086],[3.682204,2.324680,-7.482602,5.455132,-7.810684,-2.441857,-2.567996,2.774197],[-8.453654,-0.179717,-3.381533,-9.902479,-1.951177,7.089828,-0.137583,2.673231],[-1.367203,4.364274,-5.918509,3.465274,-9.198335,7.871513,5.760750,-3.266530],[7.716264,9.760627,-6.839824,2.780604,-5.851806,-1.515208,2.575732,-2.013670],[-5.212549,-3.820352,7.440676,4.053964,3.961679,-4.540037,-1.573432,-3.408666]],[[0.427652,7.439351,8.097253,9.792361,5.301107,-6.490589,6.509021,-6.024277],[4.234814,-7.897670,3.207185,-1.444537,0.237850,8.233321,5.445392,0.313830],[5.520757,-7.360926,-9.389650,9.113394,-6.096071,-3.398073,-3.817678,7.146517],[6.037813,-7.961817,-8.682912,3.676746,7.467746,6.195304,-6.996099,-4.493642],[6.909750,-8.705022,-9.666601,7.458391,6.066866,-9.043750,-6.423365,9.299297],[1.952381,-6.744581,-2.617624,4.953881,1.765957,-5.125556,-0.759973,7.417949],[-9.151852,3.138502,5.004918,8.925252,-6.412617,2.752408,1.571551,-4.307615],[-3.296857,-4.316799,-8.598939,5.637273,-2.434256,3.018951,-5.044946,-7.964965],[-2.381872,0.199378,-6.331881,-2.687729,-0.480260,-1.331340,0.658076,-1.848510],[0.033382,-3.274948,8.192820,6.967000,-4.416626,-5.694350,-2.205382,0.701100],[-2.098056,-0.393249,2.925147,1.963098,-8.312029,6.961751,-8.443335,-4.406768],[3.268225,6.537703,-5.971659,-4.833049,5.265255,2.565266,-5.739405,-4.290267],[8.590814,0.791258,6.474498,-4.092102,-8.380711,7.339565,3.749495,8.091611],[1.343792,7.900906,5.486209,-6.188125,-1.359029,-8.735442,-7.144315,7.807474],[-4.008099,-7.219373,8.183237,2.869682,-2.891588,-3.325527,-6.150203,-8.583541],[-6.430841,1.559726,-2.658788,-2.727357,2.732426,2.751985,4.489300,6.449417]],[[3.304796,-5.922188,-5.402172,4.628077,-7.529524,1.971916,4.016390,-3.813058],[8.926825,4.445306,7.806905,4.631132,7.989172,-0.069122,2.474322,-0.826396],[9.970030,-7.522993,-2.884275,7.695851,8.820303,-9.475328,-5.100601,2.651760],[-1.222972,5.918778,-2.194091,4.132574,9.419117,1.208437,9.997913,-9.535638],[-2.002396,7.010036,-0.413913,0.217896,5.281393,-1.480493,1.070924,4.304838],[-8.446813,6.510117,5.445358,-4.681244,4.026130,-2.145119,8.044367,8.571544],[9.232929,6.020687,0.970886,5.121255,-2.924744,5.111052,6.602725,6.746808],[7.628640,5.799908,4.740110,-5.873423,1.701622,-4.528876,5.595586,-6.291558],[-1.186857,-3.281339,-4.960528,-8.856950,5.835549,-3.573720,-0.190858,-7.641976],[1.470784,9.613339,-2.191497,3.284867,-9.678102,-4.188584,5.368530,-4.707043],[-0.196862,-2.284812,-1.019123,8.265648,-7.556548,5.105178,-3.702485,-4.039176],[3.531614,-2.269589,7.622149,7.622042,7.081068,2.729280,-9.314603,-1.109138],[-5.729495,4.598593,1.466597,-1.425825,9.873220,5.642042,-8.966623,3.792433],[5.793406,3.151857,4.397066,-0.469714,-8.592294,0.371958,4.753876,-9.835626],[-1.147114,-3.113684,-4.039062,5.183707,-6.441629,7.300520,1.580422,-7.360473],[9.219544,8.870882,-5.437001,9.757888,-4.244743,5.226239,0.029414,3.812696]],[[-8.250999,2.493670,1.668417,-9.983023,7.984080,-5.070836,-4.735741,9.313627],[-9.848040,-4.340232,-7.137695,5.639257,-9.821700,-1.668634,-0.581084,-9.432222],[-4.731127,-6.515420,-5.878661,5.584936,-4.599582,-5.558803,1.620831,-3.837479],[6.751618,-6.938064,2.892078,-6.963780,4.391340,9.677343,-9.041019,-7.958652],[1.887563,-3.391616,1.345564,-2.815975,3.169267,-5.838872,-2.368045,-7.593864],[1.535274,-5.188718,1.390374,-9.336164,2.489261,-7.604173,5.397488,-5.501162],[2.747500,8.165073,5.247907,1.930214,-3.704580,8.000662,-8.228556,-9.546582],[-0.758148,-6.882450,1.574921,-8.881978,-3.764630,5.882955,6.593413,4.450143],[-2.603573,7.617098,-7.892266,7.310974,-6.521619,2.841827,-2.642920,-3.228848],[-1.780730,-3.064796,-3.560504,5.539700,-5.779934,-2.241159,-8.703072,-4.759651],[-7.177350,-3.896957,-3.594335,-8.846143,-3.736711,-5.777368,7.050287,-5.968855],[2.091198,-5.418990,1.943340,7.727133,-1.288218,-6.073758,5.366326,2.307364],[-6.841264,-9.271232,7.028902,-6.865985,-8.023419,1.934933,9.326883,-6.490334],[-1.466595,-0.528045,-2.219666,7.290955,-1.721339,0.844122,9.221725,5.009500],[4.112320,-1.550675,-5.795605,-7.091542,8.290307,6.587483,9.531800,-2.831489],[-2.872911,-4.945545,-3.563793,7.748587,0.349756,-2.644502,7.798987,-5.321531]],[[9.485947,-4.882665,2.718969,-5.228444,-3.183270,-3.398528,2.980238,5.858327],[4.307874,-0.007806,-0.559584,-8.826826,3.087979,-4.097171,0.472949,5.055099],[9.133237,-9.481242,-1.612360,-1.843817,-8.890005,9.611604,4.766453,8.283061],[-5.058872,-4.494395,2.649007,-2.015114,0.925381,-1.668637,3.615122,5.622576],[4.457570,-1.437104,-3.389058,-9.510382,6.956150,4.135911,-5.679873,2.095933],[-3.621107,2.265801,8.819439,-2.498138,-5.098193,2.252111,-7.702563,8.713072],[-1.935796,-2.423350,-6.583177,-1.925818,-6.305948,-8.078529,-2.480471,5.680195],[7.340566,8.569102,-9.765970,7.846058,-6.607459,-0.100465,5.228747,-8.110729],[9.329358,-8.285352,1.549276,4.599869,-8.038717,-7.659694,-7.858214,-8.318432],[4.178574,-1.322637,4.340097,-9.964944,-6.511860,5.128060,-2.798252,6.944246],[-5.884829,0.730045,-9.449432,9.236274,-2.045108,-2.744625,7.057674,-3.200183],[-5.250341,-8.296481,-9.998175,1.846863,1.357929,-0.217810,-1.118693,-6.644472],[-2.824329,-5.551832,-2.224862,7.490180,8.600285,6.626888,-6.707426,1.935864],[-2.672445,3.168801,4.961933,7.185945,5.715733,-5.762200,-4.749389,-1.488455],[5.160309,5.594627,-1.689828,-8.128074,-7.593399,-5.574918,-2.366771,2.198593],[3.082062,9.333056,8.279201,9.339999,3.150142,-5.905437,-2.847825,-7.925626]]], dtype = "float64")#candidate|10091|(8, 16, 8)|const|float64
bop_10092 = relay.floor_mod(call_10082.astype('float32'), relay.reshape(const_10091.astype('float32'), relay.shape_of(call_10082))) # shape=(8, 16, 8)
bop_10095 = relay.floor_mod(call_10083.astype('float32'), relay.reshape(const_10091.astype('float32'), relay.shape_of(call_10083))) # shape=(8, 16, 8)
func_9352_call = mod.get_global_var('func_9352')
func_9355_call = mutated_mod.get_global_var('func_9355')
var_10104 = relay.var("var_10104", dtype = "uint32", shape = ())#candidate|10104|()|var|uint32
const_10105 = relay.const([False,True,False,True,False,True,True,True,False,True,True,True,False,False,False,True,False,True,False,False,True,True,True,True,False,True,False,False,False,True,False,False,False,False,False,True,False,True,False,False,False,False,False,True,False,False,False,True,True,False,True,True,True,False,False,False,True,True,False,True,False,False,False,False,True,False,True,True,True,False,True,True,False,True,False,False,True,False,True,True,False,True,False,False], dtype = "bool")#candidate|10105|(84,)|const|bool
call_10103 = relay.TupleGetItem(func_9352_call(relay.reshape(var_10104.astype('uint32'), []), relay.reshape(const_10105.astype('bool'), [3, 4, 7]), ), 1)
call_10106 = relay.TupleGetItem(func_9355_call(relay.reshape(var_10104.astype('uint32'), []), relay.reshape(const_10105.astype('bool'), [3, 4, 7]), ), 1)
output = relay.Tuple([bop_10092,call_10103,var_10104,const_10105,])
output2 = relay.Tuple([bop_10095,call_10106,var_10104,const_10105,])
func_10116 = relay.Function([var_10104,], output)
mod['func_10116'] = func_10116
mod = relay.transform.InferType()(mod)
var_10117 = relay.var("var_10117", dtype = "uint32", shape = ())#candidate|10117|()|var|uint32
output = func_10116(var_10117)
func_10118 = relay.Function([var_10117], output)
mutated_mod['func_10118'] = func_10118
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9849_call = mod.get_global_var('func_9849')
func_9850_call = mutated_mod.get_global_var('func_9850')
call_10143 = func_9849_call()
call_10144 = func_9849_call()
func_2639_call = mod.get_global_var('func_2639')
func_2644_call = mutated_mod.get_global_var('func_2644')
var_10148 = relay.var("var_10148", dtype = "float32", shape = (2310,))#candidate|10148|(2310,)|var|float32
var_10149 = relay.var("var_10149", dtype = "float32", shape = (270,))#candidate|10149|(270,)|var|float32
const_10150 = relay.const([-6.821858,-7.325407,-8.320956,4.434826,5.408769,-5.472755,0.604961,1.330271,8.567180,5.426188,2.270465,-3.798609,5.706240,-8.689805,1.122593,2.788042,3.326858,-1.202022,6.191131,-2.428439,2.170874,5.415112,4.253269,-2.484162,5.454571,5.207141,2.878945,-9.068957,3.045714,9.529476,9.769634,-8.486237,-3.370981,-4.451949,-5.817780,-0.900632,3.333693,0.170885,3.664323,0.190979,1.416703,4.420332,-0.982027,6.711924,-7.813528,-7.126934,2.486915,-6.440283,0.206912,-2.140625,2.398733,5.915182,-9.440445,-0.631156,2.696587,-5.784738,-5.752474,6.106338,-2.636369,-0.295454,-5.682671,-1.661161,-5.250689,4.544490,4.058485,5.334665,8.741517,1.514251,3.472440,7.657749,6.359145,-8.832739,7.443939,5.267649,-1.870854,-0.945008,-1.993803,2.737508,3.583370,4.637539,-0.973763,4.192370,2.454509,5.012463,-1.010382,5.102497,7.887684,1.302325,-7.267288,-3.722975,1.244970,1.380964,4.942182,-3.155234,1.906154,7.881993,-7.177249,4.473371,9.674634,9.781240,9.400057,1.880029,-5.640605,9.783270,8.609673,7.375887,-1.778298,9.751703,5.041667,-6.098899,0.998960,-9.411112,8.811851,4.391371,0.085241,-9.289145,-9.167150,4.367480,5.963151,7.045604,-2.713793,7.429309,2.670921,-0.085864,-3.025389,5.679429,-6.991548,9.522788,-6.246020,-9.192054,7.843943,-9.288932,-2.890735,-0.523927,2.276980,8.528075,3.843383,-7.342602,9.317371,9.605438,-1.763117,0.637980,4.002424,-6.605753,8.648800,5.868656,1.496327,-1.967789,8.668412,6.049768,-0.382581,-8.765441,4.787405,-1.875330,6.654443,-2.973904,7.431315,-3.406058,8.105364,-6.063153,9.344051,5.525718,5.604896,-7.927460,2.335565,3.294231,-7.243675,1.668333,9.780430,-8.306912,0.511269,-9.179960,-5.295982,6.422698,8.328739,8.566609,7.997260,9.061786,-6.839767,1.614140,-2.070042,-9.938835,-3.478436,-1.026368,4.212343,-5.806012,-2.865670,6.140086,7.504906,-9.008711,-3.929409,6.322950,-6.532343,3.682046,3.439595,-7.483789,4.388568,-6.476795,-6.168333,9.871434,-0.104478,1.674767,-8.501893,5.021803,1.181646,-3.481741,6.239597,-3.207414,8.413093,3.346955,-2.251728,-2.516570,-4.648288,-5.592382,2.498553,-2.605674,2.987303,-3.031180,7.628879,-5.709786,6.792000,-0.369011,-2.100665,3.205424,-2.635113,-0.489974,-7.804653,9.430695,-1.769736,-3.886397,6.866887,4.245890,-0.614371,9.442169,8.676600,-7.923772,-8.984555,-1.444147,9.261896,-1.095613,-4.566205,1.350099,0.742612,6.470832,-9.171355,-8.895736,-6.666773,-8.466740,7.246320,-7.871558,6.985683,-5.432119,-0.141758,0.019267,-8.795776,7.663152,-5.183073,4.481522,5.451799,3.451110,-8.559975,-0.716842,7.134933,4.860501,-4.585310,-4.581988,4.298580,2.769831,6.852336,9.067507,7.580534,-9.813844,6.622115,6.746858,-6.324704,-2.519121,-9.821383,4.321838,-0.491623,5.620411,5.831538,-7.474059,-8.288061,-7.389687,-7.902635,6.198253,-1.276876,-8.381824,7.899564,0.863648,-7.212624,8.978718,-6.802217,9.341959,6.517447,6.142795,-1.963653,3.687288,2.479521,-9.591972,-9.350893,5.160684,8.692532,-0.878126,-9.373021,-7.009666,-8.208000,6.125292,-1.834894,2.684633,4.460964,-0.153559,-0.444948,-8.517814,3.736102,-0.928453,-1.523347,5.377191,5.824351,1.148892,7.771610,-0.732621,0.536367,-2.886157,-1.028286,0.402900,-6.358889,6.999640,-8.453002,-0.750485,-8.270822,6.269729,4.690408,-3.766430,-1.903739,-1.951720,9.348921,2.866254,-9.980468,2.444258,5.327428,6.188753,-7.923511,2.533981,-7.559719,7.661813,-2.553459,-9.946535,6.410416,-4.870040,-0.621275,0.069562,4.338998,-8.670711,-0.491202,5.175761,-4.758132,3.229354,0.687498,1.295246,-4.222421,6.942889,2.487171,-3.303319,-7.270294,9.224175,5.528387,9.903390,8.631165,0.442209,7.480385,-5.948342,8.704934,-2.362622,-1.204359,-0.703682,-5.549716,7.381653,4.096020,-4.109250,-1.487905,-4.593779,-2.843418,-7.896095,3.572536,4.164610,-9.098830,5.263472,8.356344,3.514048,6.521931,8.940120,1.733843,-7.359077,-1.032830,-5.755660,-8.018904,6.572860,-7.695619,-7.152846,4.159675,-3.287276,1.414502,4.939477,-8.012279,-0.545322,-8.080096,8.378364,-2.123241,7.598647,4.566555,4.271949,-3.457617,-1.849602,9.154114,4.644896,9.857625,-4.571226,2.752302,6.608039,-0.580497,6.029778,0.460299,-4.044805,-9.589711,5.942926,-1.661679,3.227533,7.808651,0.274394,8.932155,0.486659,1.921028,4.622333,2.854647,-7.411132,6.819458,-6.917420,-7.194522,-1.535521,-1.227407,-1.427173,5.406417,-8.205310,-6.540206,5.713929,-2.734761,-0.602585,-5.223824,-5.368426,-1.407345,-3.450142,-0.437493,0.327523,0.597065,-9.637337,9.773138,-7.485865,-1.063238,3.320922,1.677768,-4.247036,6.167650,9.829970,5.057249,9.139817,-8.830175,5.622424,-4.606077,1.037779,-2.380052,-4.197137,2.687916,-9.308627,2.923988,-6.284805,-3.857816,-2.396133,1.236693,-7.499602,2.803168,-8.122214,3.977971,-9.926118,-3.153265,8.075400,2.249575,-3.655695,1.521984,0.004669,-1.388938,1.606435,-6.847208,-0.426646,2.373970,-0.786657,-9.270845,-9.863695,-5.900150,-9.157958,-7.081981,-6.909214,6.416575,-6.649393,5.335596,7.946195,7.440770,5.753645,-5.417646,8.871554,-6.414246,-0.475839,9.183788,-6.602611,0.207546,-0.360489,-1.578680,-7.429754,-4.267500,-7.303227,-0.833300,5.209342,-9.801952,5.751250,2.271093,-8.067636,7.455046,-7.609784,5.181163,-6.802641,3.273392,6.944675,7.166714,3.641892,-7.490114,-9.405866,5.602939,9.214916,-3.973097,-3.156665,9.837306,4.305506,4.179085,1.692334,-7.204705,-2.729298,3.232595,4.480249,4.306957,-9.268992,2.649941,-3.798383,-1.529125,-9.493895,-4.403449,-0.318801,-4.096192,-7.499752,-0.641724,-3.695221,-4.829416,-9.146864,-3.933452,-1.889058,9.089861,-9.306047,9.820290,5.891871,-4.553577,-2.710090,7.671781,-7.630320,-3.912803,0.301612,8.819283,5.405544,-4.863207,0.997539,-2.542105,-7.064014,-9.688058,-6.757838,9.956195,7.411384,2.628086,5.038006,4.692849,-3.544515,-8.477124,-7.270375,-8.666710,4.893182,0.196602,8.362432,4.692963,5.437900,-5.951386,6.516154,-1.721993,3.213929,5.889244,-2.706492,5.179777,-8.255303,-3.754890,0.468253,8.906932,-5.915065,0.830037,-7.906956,7.622960,-9.216244,4.257453,-1.026840,-9.362596,8.031883,-2.751649,-6.560042,5.148330,1.031048,7.492030,-3.681144,-2.855828,-2.830929,-3.463824,-0.602240,-0.739713,-7.821930,-9.261434,9.752176,-2.859059,-4.859698,-3.878418,-8.048060,-1.259892,-6.534372,-5.193933,-0.921983,9.309232,-3.241831,9.743950,5.249490,9.743864,9.452900,-0.269187,4.103011,1.798506,2.389226,-3.443719,7.917099,-3.146099,4.078526,-3.762125,0.795509,-6.767048,-3.314313,-8.916405,6.372331,8.959282,9.699314,-6.454633,-1.552461,9.952909,9.207326,-0.705140,-6.999025,-9.571230,6.887718,2.183761,-7.969446,8.031507,2.461937,3.108450,0.951882,4.941096,-2.888671,2.802411,5.658248,5.435268,5.809810,-9.829881,-7.633644,4.503454,1.863890,-4.316875,-5.740119,-9.120197,1.164127,-9.652142,-7.824980,5.874529,9.176584,-2.244398,2.371597,-1.681722,4.744193,-9.698513,6.921405,3.560123,-1.567538,0.251344,2.828503,-8.673587,8.442882,-0.688783,-6.788184,-1.566737,-4.583597,8.772381,-0.388081,-6.244584,-6.922812,4.601963,-4.301864,-1.709990,-9.195380,9.699912,-4.807264,-6.892345,3.568019,2.224011,3.814488,0.829943,-8.196528,1.931379,-7.472235,-6.328367,1.065344,1.047088,2.858078,-3.469836,1.594665,3.769275,-2.150422,5.380150,-9.678396,6.288048,-3.240290,-6.181420,1.183715,-8.236784,7.684494,-3.914795,-5.209856,1.373590,-3.643818,-2.142259,7.584016,8.293633,0.326408,6.360075,5.170116,8.240621,-5.947639,4.276936,-9.941265,5.383067,-9.110172,-9.259815,1.515326,-1.331534,7.305252,0.185687,2.571231,-1.947326,8.583282,-9.652856,3.502451,1.324309,6.531264,3.977136,-8.193332,-1.298142,1.546546,8.075331,-1.317651,-0.517475,-8.022902,-2.572599,-5.208593,6.005989,8.225191,-7.939814,3.034341,-8.924623,-3.196362,-6.112344,-6.917357,-9.539790,9.058465,3.759607,7.000978,-5.611496,9.663247,9.292782,2.441125,-0.864478,9.242205,8.645281,-6.432383,8.312365,-4.391791,1.615118,-5.486871,-8.529925,3.877209,6.343746,3.322048,3.184442,2.067308,-3.413386,4.007369,7.315202,1.752075,6.898081,-9.236438,1.212611,0.468431,5.463610,-8.975526,6.246181,9.110820,-7.844787,-8.238783,-7.903275,9.400004,3.596348,8.495332,8.950803,5.105425,-2.838423,5.302123,-5.303050,-2.581983,9.994029,7.989055,-3.236970,2.172689,7.678807,-1.016189,0.210032,-5.957686,-7.373820,2.655482,9.215249,2.225742,-4.022450,3.728357,8.639801,4.766030,-4.237155,0.068950,7.503784,9.069830,1.750851,-1.195706,7.581022,6.264507,-5.142980,1.425989,6.937686,6.168595,-7.318236,9.070182,-1.097743,-6.017167,7.944293,-1.818489,-9.442779,-6.860497,9.129982,9.484185,5.422087,6.486483,2.945856,7.249014,6.296576,9.841586,0.117131,7.057456,6.805609,-3.216399,3.285095,0.338638,3.808373,1.655877,5.492709,4.524888,2.212859,-9.677673,-9.029560,-0.145970,4.279903,8.802203,-3.739672,-4.770577,-0.668611,-6.934149,0.159613,7.866188,4.787761,-4.603804,3.537240,-7.380033,-3.541729,-9.181492,-0.823402,-5.727871,-8.756453,4.345670,-1.349031,-9.675539,-2.845479,-7.413744,-7.163626,-2.688973,0.453952,-1.450188,8.910306,5.092757,-6.563860,-9.268764,-7.300742,-5.620368,-9.362484,2.911627,0.778935,8.856431,4.190547,-1.304631,4.776454,0.512885,9.060335,-9.193376,-7.744591,-6.578737,4.150586,-8.205357,3.882738,-9.324269,-7.174994,-4.260716,0.104571,4.870524,0.719157,-5.015435,9.872603,3.008258,-1.933273,2.367735,-4.140342,6.015979,-3.082877,8.157049,-1.218805,2.957981,-0.675472,-7.091063,3.642603,-0.976950,7.280450,3.567809,-6.919728,4.834379,-4.512755,-8.185514,-0.889376,-6.908451,2.688976,-0.597554,6.427147,-6.494838,8.381950,8.424613,-6.805028,-4.194936,2.689877,-3.586789,-3.312319,-3.932570,-5.159951,7.925621,-7.941872,8.558263,-9.312822,8.876341,6.018448,8.904227,-7.205041,6.172406,-7.738337,3.852154,-8.635039,7.114193,5.293979,8.573240,-4.934870,6.025083,7.364084,-8.454842,-4.329133,5.804329,5.613147,0.150575,-1.232902,8.031539,-9.646908,-0.655034,-6.302189,1.830680,7.919347,-7.442039,-7.965679,-7.629119,-6.200715,9.915075,-7.667643,2.456544,3.453723,0.563189,7.851226,-6.346574,1.620739,-0.173019,-0.166537,-3.611788,5.496489,-9.495037,-4.387897,7.420350,5.074635,2.278995,3.255899,-3.671621,1.248578,-0.799890,-6.784570,-8.356660,5.487188,8.185106,4.740052,0.186718,-8.195640,-6.403921,-7.923964,-3.668284,-3.376444,1.715704,-1.184798,-1.374804,-2.840213,-3.352675,0.096481,-0.541878,-0.608586,-1.598928,5.120004,-7.766633,9.090345,-6.989566,-5.609957,-5.160783,0.676012,-1.809069,4.573840,8.450481,-1.715120,-7.013034,7.143815,-8.186831,-9.514302,4.569206,0.117067,-7.172143,-5.953769,-2.546761,6.072638,7.934781,9.732974,-6.468253,-2.037622,-4.213318,3.951142,-4.614019,9.801881,-5.491269,7.334077,-6.673001,8.720192,-6.916650,3.445342,-7.025205,1.421956,1.688753,-1.376750,6.340767,-8.395394,8.049441,-2.943820,-9.270153,-8.578091,2.582375,-8.141780,-1.031295,-6.448531,1.766846,-0.643542,-8.026640,1.090267,-2.189306,9.917139,-9.101784,4.540600,-1.534684,5.309874,4.510498,7.404054,4.560539,-4.244960,-4.284966,-1.334726,6.987222,8.565327,-0.647562,5.301786,-3.899865,-0.905759,-2.593631,-8.457430,7.611747,9.168858,-5.395384,-6.575697,-1.146014,4.877901,5.729130,-7.257059,-0.989623,2.747491,-3.734995,5.065548,7.419841,8.267707,5.074797,-7.641394,8.428775,-2.182175,7.430879,-3.479811,6.613769,-9.906684,7.688822,6.389909,-6.404769,1.767030,-7.499256,-5.209361,-4.979537,7.455969,1.192975,5.886808,-1.257984,-0.975122,-0.658847,9.723479,2.568748,-2.254375,1.063075,-4.042065,-9.852719,-0.611990,0.575190,6.880405,4.893917,5.340703,-6.857488,6.197644,-2.698040,-1.482275,-4.710823,0.098595,0.923001,4.420225,2.682607,8.974860,9.624715,-3.326727,-5.344234,-9.135078,2.477629,-1.808881,-0.472341,-8.969252,-2.633135,9.729025,-3.285273,-2.835722,4.253440,-3.570464,5.872867,-5.598939,-6.109158,6.967810,-2.897314,-9.335796,-8.841955,-6.590540,-5.356005,1.727029,3.372865,-5.616635,8.218999,-7.668449,-5.225019,-6.725162,-6.781537,-2.041461,7.649773,9.116886,4.674503,2.230849,-9.294113,0.125202,-4.460174,3.965759,3.349409,-4.878884,-1.871730,3.036864,5.543890,2.514522,9.645098,-7.659046,9.973983,-8.121879,1.073579,-0.463800,9.602488,5.033856,4.546952,-1.784083,-4.195714,9.145056,1.015821,1.812743,-4.746487,-2.487598,-5.611378,0.128799,-3.847891,-0.939654,3.670208,1.482114,-2.400634,8.269046,-3.566027,8.572722,-1.793539,6.874306,3.797656,-9.581148,8.545721,0.524656,-6.500589,-5.492368,0.528801,-0.897412,3.357569,5.505177,-3.364985,9.387514,-6.882873,7.446747,-0.426147,-5.430604,6.925547,7.687709,8.376066,-6.120622,4.772721,-0.128360,-6.984508,-1.590735,8.803215,3.540198,-6.299723,-6.865015,4.650746,0.243580,-2.654097,-0.537425,-3.080905,8.267490,-7.812252,0.456074,-9.591389,-9.681207,5.704653,-4.869836,2.885111,-5.515105,7.200836,-7.880295,4.169847,-7.575837,-5.871016,6.991132,-1.253244,-7.416631,5.560322,8.132878,-4.523736,-4.668022,-8.471702,-2.607600,-8.400788,2.553273,9.717916,6.854040,5.944716,-2.135906,-1.550845,-1.885683,-4.304490,4.452575,7.868068,5.637247,1.456261,0.297943,9.866741,0.584989,-1.676081,3.183789,-6.149791,-2.694623,-8.384510,1.595140,9.266132,9.492717,8.627779,8.537708,2.474075,-9.330139,-4.114258,-0.587256,7.239499,5.047881,-4.126136,2.618110,4.004610,-0.755770,-5.503553,-2.548357,-2.310274,-1.632530,4.869402,-4.915241,-3.081165,6.500432,-0.265143,-9.623181,1.108441,0.171247,-2.223753,-7.892242,0.356910,7.351693,1.943505,7.916729,-4.444812,9.938649,8.665754,-3.919660,-5.912790,-0.317437,-1.523468,-9.200609,-4.892211,1.779780,-1.968945,3.043437,7.238787,3.802660,-0.967584,-3.742678,-0.872861,-6.722926,7.117670,-0.478840,-3.912421,-9.890959,6.925291,-9.842758,-2.884501,7.032440,-0.590756,-6.305933,0.309256,-5.299551,-4.236922,-9.773181,-6.872949,-6.211668,-3.753732,5.833493,8.808344,0.333569,-1.132135,0.602800,8.763619,4.687450,4.989223,7.577927,3.085263,-5.106912,-9.406719,6.946006,-2.465331,-7.974340,-9.111092,9.746310,5.342406,-0.843649,0.698927,8.293653,-2.763446,-0.534709,-2.784402,4.858435,5.747806,-8.117747,-3.036345,-8.698243,0.640145,7.734469,-0.990009,-8.814513,2.423381,3.563838,-0.156886,-9.530721,8.868383,-1.172998,-6.998178,6.262023,4.436604,-0.270158,9.398751,-3.199124,0.639446,-3.206708,3.328491,-4.869109,-6.281044,9.264966,-1.860547,6.512350,-9.520198,9.665301,3.581613,-4.870853,-9.805864,9.241964,4.711300,8.074670,3.816550,-1.999412,-9.490992,-0.670972,-1.444173,3.287701,8.841956,-3.643926,-3.465095,-7.983567,-4.502726,-6.133113,5.711317,8.884937,-7.524029,-0.513924,-4.565854,-3.511980,9.868393,0.829747,-0.227441,-1.106716,-8.766677,7.900479,-9.856106,-7.632565,-2.377483,-1.256307,-6.242769,-7.913170,-0.662021,0.066970,8.749735,4.803932,-5.267546,-3.537381,2.863231,-1.844254,3.822646,-4.951178,7.935966,-2.158185,0.069247,-8.459099,-2.288374,-6.818827,8.343732,-4.947450,1.426940,2.545812,-4.436445,-5.150951,-2.924617,0.671887,-2.304553,5.723811,7.740648,0.081523,-6.949693,-5.967554,-7.208623,4.405210,-5.055309,-1.111971,5.318309,0.541678,2.253082,5.794640,-6.352732,1.987668,-2.325456,0.697186,1.946414,8.320689,-8.454174,-4.956305,-2.934948,-0.794905,3.360379,8.980539,-5.688372,4.813793,-1.996270,7.373525,6.218298,-4.041240,0.732946,9.454199,-2.462918,8.494580,3.018775,-2.276168,7.377798,-1.349185,9.227304,-9.890153,3.580961,-0.857159,-2.542668,-3.081998,-3.716125,-7.247468,-3.840580,-2.560785,-8.265008,1.788068,-4.791393,0.314635,-1.021925,-6.599215,8.922915,6.647312,-1.655828,3.549920,5.520682,7.300853,-2.498111,-2.308269,2.691853,0.049087,-7.394630,8.131549,-6.423217,-5.878732,4.496274,4.355603,1.468654,9.192174,-1.986212,6.765222,-3.017320,7.514674,-1.386903,-4.079014,0.330333,2.338141,-2.289270,-1.818214,1.210646,-4.903258,6.343660,-2.607860,-3.463645,0.563539,-9.312790,8.685214,9.159262,9.617445,-2.931677,2.695328,4.240652,7.279156,-7.709129,4.363006,-2.323835,-4.754480,0.499719,7.549351,-9.205448,-7.308967,2.136339,9.778654,-3.453698,-9.131936,-0.875064,-8.873955,-8.145747,-7.848433,4.837472,-0.342223,1.136426,-3.339075,2.022800,-8.986680,-9.326563,-4.653427,-3.172552,-4.613013,-4.823110,4.016785,-1.586700,8.400264,7.117113,7.580529,7.092829,1.549317,-1.528326,0.644223,6.743134,7.813538,-8.814520,1.149658,-0.510705,0.766291,-7.756543,1.560663,0.308502,7.837528,-7.757399,0.920213,-6.095451,-4.535465,-5.450917,3.856274,-1.487038,2.452306,-2.365966,6.176230,-5.566668,-3.054116,-7.821100,-8.453052,-8.407275,-2.103927,-6.777059,-7.758836,-1.016931,-5.761676,-6.996832,-8.144102,-7.916064,4.267350,-6.444234,4.284017,8.807256,9.235149,-1.935435,5.699632,4.118918,8.814878,-6.929763,4.894623,1.545493,1.686347,8.323760,-2.410591,-2.302768,-6.982283,-2.355019,8.838183,1.684437,9.817159,-5.238242,-5.617413,5.113800,-5.141910,3.650625,-7.102214,1.440968,-7.249886,-1.155364,-5.862145,-4.935528,2.932563,2.523176,1.485295,-2.526228,-9.648971,2.022770,-2.508882,-3.875662,-5.036008,-0.087541,-5.800962,8.004543,-8.541474,6.555700,-6.283464,-3.353731,0.525301,-0.255801,-8.618770,0.813703,-6.409484,-7.310710,7.564016,2.728285,-4.267265,7.350777,1.089350,-7.448872,-7.719244,-5.999290,4.401033,-7.209486,-7.930543,8.932501,3.012922,7.752250,-8.980540,7.604486,3.247996,8.776555,-4.421984,-6.472150,0.806782,-6.795112,4.891389,-3.385272,1.306989,2.434635,-4.397375,-5.385820,2.204735,6.428782,4.337590,-4.921466,2.228720,0.949072,-5.543938,4.114122,-6.303526,8.789840,-7.555741,-5.284660,-5.710846,-3.729391,8.057647,3.991258,-5.196800,-0.021165,5.517833,-5.963596,-8.963692,-9.836999,-8.545467,7.613367,1.306533,-4.086583,-3.828146,7.555858,-1.256786,9.889438,0.227652,-2.053293,1.750824,2.571843,8.787030,3.549342,0.127706,-9.579253,1.334770,-9.674560,-6.734732,2.628162,-6.444009,-7.257655,-9.835996,-3.624758,-9.309693,2.472369,1.705362,-2.657993,1.644800,-1.932541,4.888541,-1.996001,-4.028157,-1.303328,0.110542,-3.673452,-5.562852,-2.998010,-1.914618,-3.798499,7.969653,3.927534,4.983394,-6.321252,6.553209,1.191573,2.673796,-5.651557,4.324575,1.233022,-5.580283,-4.383390,-3.999414,1.019497,4.147691,7.333471,1.037184,0.740574,-9.707402,5.052479,-4.957287,-8.440426,-0.671266,-3.986911,0.273614,-0.831694,4.212617,5.636152,7.215443,-3.003917,-2.695341,-8.390433,-9.128830,-5.796734,3.427910,4.097116,2.683518,3.360135,-7.735072,1.848706,5.193704,5.004024,-3.822787,-0.974093,9.659227,-7.263283,-3.663047,0.743130,-9.775886,0.907166,-9.753435,2.683752,7.406945,8.504337,-2.537395,4.403343,1.255147,-8.288216,5.953180,4.768329,-4.126841,1.224046,-0.153414,2.507993,-0.351924,-6.126677,7.565692,-3.564360,9.570330,-7.136348,-4.696087,8.343914,-6.296201,3.435089,1.346247,-7.894409,-8.226086,-9.062399,7.652928,4.994962,0.578712,-4.847018,-0.223522,1.356270,-4.951757,9.177547,0.411391,-8.302226,5.241577,-4.250072,0.780912,-1.389092,-0.137911,-7.874963,-5.112380,6.275250,-1.028310,4.978258,9.135466,-6.825936,-4.863960,-9.937531,-6.889671,-3.543274,4.026996,-2.476963,3.257704,-6.198966,-0.087600,5.944043,6.939899,-9.649667,-7.608224,-1.402954,-4.729627,-2.157914,-9.585947,-5.851225,2.900535,-9.825643,8.704096,3.904798,8.633599,-7.661255,0.938641,7.851292,7.758903,-0.729523,1.089610,5.951300,5.301507,-8.878187,-8.769972,-6.396666,5.650136,-2.759007,-6.410097,-8.954994,-6.680843,2.543380,-8.831128,-3.041919,-7.769002,-2.735291,1.855547,4.845595,0.776286,-4.136431,-4.493427,8.786404,-4.548919,3.919230,-9.698809,-7.597529,-9.568411,-7.838543,-1.806357,-2.272722,2.791827,-3.728340,-1.589379,9.751739,-1.108900,-0.485888,-5.855994,-7.808395,6.893435,2.070760,3.157848,-7.769890,7.712529,3.405409,7.373402,-2.756020,-8.494763,5.711117,-7.984309,-4.116651,7.689439,-3.064305,-0.024875,-8.016646,-9.480080,4.460869,3.560443,2.007825,-7.777203,2.267148,2.309602,-2.958421,-5.131095,-0.831932,-2.395764,2.377881,8.578596,-5.504755,0.888099,-7.645986,-4.998520,1.484682,0.866658,3.609618,6.894754,-1.824421,-1.153908,-4.730932,-4.825017,-4.306991,7.703085,-8.932679,5.306995,7.170183,7.874843,-8.401786,1.332456,-9.903167,-0.712824,1.691350,-4.595830,-7.384114,-1.285582,2.765485,-0.920217,-9.155508,-4.547898,-4.654960,6.787333,-7.602873,8.315300,-4.364709,-5.844294,-8.627802,-3.685823,4.142791,1.845562,-0.320954,-5.976609,-7.981489,5.600846,5.219849,-8.643849,8.611457,8.112959,-2.446016,-9.843408,6.019079,4.637545,7.374088,5.544932,-9.245159,1.852671,2.452462,3.965011,-6.837067,-7.428581,-8.072314,7.465061,-2.992659,7.188923,-7.257097,9.628914,-9.920474,7.901384,7.984705,-2.416844,6.560772,-9.446620,-8.760813,-5.156529,-2.528271,-2.960073,7.131322,-6.315927,-9.529693,7.129072,1.126966,-5.321614,4.929005,1.071000,0.677691,2.446538,7.072265,5.551745,0.932686,-6.722788,-6.278625,-2.889269,6.533363,5.889887,-4.286589,-8.697689,1.146341,9.172995,-5.218907,8.060265,7.098260,-5.689516,-7.137097,-5.719101,5.562248,6.998099,4.616071,-9.929763,-4.180011,-6.657723,-5.359398,-0.562120,4.898239,-6.057434,7.744528,6.351800,-5.823448,8.958745,5.769298,-0.342327,9.357040,-5.053111,5.679152,2.303403,-0.084825,-3.829910,-3.666074,3.765640,6.140005,6.973130,1.913344,7.559600,-2.430989,7.446664,-9.447679,-6.833927,0.006138,-8.475864,8.029345,6.188256,4.471226,-9.684601,-6.448885,1.857171,-3.015308,-2.843117,-8.824665,0.727419,3.866542,-7.589540,0.182794,7.302418,-7.504884,4.672510,8.527065,4.465397,9.850300,-6.043807,3.941603,3.556486,-7.635717,-0.947459,7.307054,3.486273,-3.067410,-5.690158,-5.538222,-8.344641,6.755018,4.595859,-4.549728,6.554681,-0.435580,-8.734086,9.500993,4.293973,6.510563,-8.667559,-0.898935,1.418594,-2.170716,-1.315857,2.160582,0.368997,-2.486589,7.678467,7.861398,-6.212633,-3.458668,-0.963546,-8.523967,1.539459,2.980808,-1.687867,7.193904,-9.693205,4.241094,5.095927,1.100931,1.834115,8.596836,6.576688,5.023418,-7.923201,-3.125861,-0.132150,6.476538,-9.568105,5.838194,-4.984413,9.421033,-7.303509,0.947096,6.917665,-2.827640,-2.390053,-8.784814,6.234777,-5.878441,9.940415,-4.240863,9.981331,-5.172291,-8.746632,4.433167], dtype = "float32")#candidate|10150|(2250,)|const|float32
call_10147 = relay.TupleGetItem(func_2639_call(relay.reshape(var_10148.astype('float32'), [11, 15, 14]), relay.reshape(var_10148.astype('float32'), [11, 15, 14]), relay.reshape(var_10149.astype('float32'), [30, 9]), relay.reshape(const_10150.astype('float32'), [2250,]), ), 5)
call_10151 = relay.TupleGetItem(func_2644_call(relay.reshape(var_10148.astype('float32'), [11, 15, 14]), relay.reshape(var_10148.astype('float32'), [11, 15, 14]), relay.reshape(var_10149.astype('float32'), [30, 9]), relay.reshape(const_10150.astype('float32'), [2250,]), ), 5)
output = relay.Tuple([call_10143,call_10147,var_10148,var_10149,const_10150,])
output2 = relay.Tuple([call_10144,call_10151,var_10148,var_10149,const_10150,])
func_10154 = relay.Function([var_10148,var_10149,], output)
mod['func_10154'] = func_10154
mod = relay.transform.InferType()(mod)
mutated_mod['func_10154'] = func_10154
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10154_call = mutated_mod.get_global_var('func_10154')
var_10156 = relay.var("var_10156", dtype = "float32", shape = (2310,))#candidate|10156|(2310,)|var|float32
var_10157 = relay.var("var_10157", dtype = "float32", shape = (270,))#candidate|10157|(270,)|var|float32
call_10155 = func_10154_call(var_10156,var_10157,)
output = call_10155
func_10158 = relay.Function([var_10156,var_10157,], output)
mutated_mod['func_10158'] = func_10158
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10193 = relay.var("var_10193", dtype = "float64", shape = (10, 3, 1))#candidate|10193|(10, 3, 1)|var|float64
uop_10194 = relay.acosh(var_10193.astype('float64')) # shape=(10, 3, 1)
func_2639_call = mod.get_global_var('func_2639')
func_2644_call = mutated_mod.get_global_var('func_2644')
const_10201 = relay.const([-0.967725,-9.408362,3.518935,9.038414,3.033710,0.152580,0.218086,-3.650446,1.350381,-8.894164,-1.685832,4.902876,0.812141,0.984505,-3.953513,9.798399,2.355318,-9.651038,-9.314695,8.011453,-1.872276,1.628325,6.201133,-2.475479,-0.946758,-5.562445,-5.760702,-0.838262,1.107851,-4.425315,-6.884469,9.190650,8.617131,-0.407224,4.805270,-1.517777,-5.878680,-3.498636,6.334067,-2.212404,9.399703,-1.294348,-4.565157,4.015018,-6.781975,-2.700992,-5.188651,-7.019565,3.859719,7.948692,5.719927,-9.930008,9.792277,7.732241,-1.443434,-3.268141,-5.867858,5.885354,-5.534712,2.099761,7.100976,5.328219,5.106790,3.765041,3.663860,1.031408,-0.336037,-9.302144,-9.437912,-2.256883,-0.408118,6.204747,-5.668656,1.642234,0.334405,9.040986,-1.705096,-9.081111,1.081790,8.451635,9.771805,7.339619,-5.202606,2.873516,8.352227,5.515739,5.600903,2.985741,-7.448035,-3.353050,4.980065,-8.220055,-4.631549,4.114871,-8.212165,-6.062111,7.370920,-1.183373,-8.253806,7.200830,7.808423,9.304813,6.982643,-1.660344,3.542725,1.177609,3.576351,0.387749,8.479407,6.341989,5.323431,9.483719,0.487460,-0.973925,2.236936,0.744784,2.997978,8.736443,4.724283,-1.617014,-4.236760,7.627428,6.775965,-6.491008,9.655068,-3.546354,8.403903,-9.811183,3.693608,-0.685251,-3.826237,-9.838319,-0.866020,-3.185257,9.073726,7.849106,-7.609336,3.045416,1.480943,-3.197186,9.340754,9.086457,-8.505117,5.869151,-0.094629,0.884460,-1.077932,-7.340292,6.867235,-4.005956,2.235660,4.759723,9.149762,0.756135,-0.257933,7.134286,0.516040,-6.226232,-8.410574,2.600938,-0.413912,1.502816,-5.799262,1.494017,-0.154639,1.459885,0.003402,-0.019026,4.274856,5.108733,0.371901,-9.421600,3.451098,6.772063,-7.389094,8.775072,5.524324,2.620747,-5.397234,1.575688,2.275321,4.441931,6.764812,3.442023,6.181099,-6.662406,5.144205,1.724257,-3.728258,4.568476,-1.298903,0.411644,9.010040,4.102224,0.821299,8.198894,5.364935,-3.140144,-9.484999,-7.459402,-3.882423,-6.690122,6.052101,2.970248,-0.371356,-6.825691,8.535345,-6.799389,2.278580,-6.116131,6.253466,8.320769,-7.066636,7.898969,9.696561,5.663933,6.090939,1.695048,4.435195,-0.808089,7.483223,-4.834492,-6.692263,-1.542173,4.038884,-4.225184,-5.776234,3.848431,7.486858,0.841771,-7.133780,2.525075,-7.614673,-0.314451,3.741616,-2.105756,-2.206817,4.332344,0.744741,-3.425857,-8.972322,0.264616,-2.938520,-0.066955,-1.779132,-9.380996,-0.142490,-9.025283,-6.021725,-2.740695,5.484106,9.932183,-5.931705,-7.144671,-9.178455,-4.116613,4.057000,6.786933,-3.280144,-3.219835,7.974872,-4.553057,-4.827325,-8.800409,2.568771,-1.898457,4.188600,-6.730973,-1.888081,-2.826862,2.721192,2.086362,-7.265669,-1.882445,-3.882988,9.912637,4.526174,2.082732,-0.022504,6.083347,7.160533,-2.520840,9.806634,-7.082904,3.275290,-9.321894,3.172951,-2.014898,-3.358695,-0.116787,9.858236,-8.256895,3.312610,-1.659373,7.561700,-5.052588,0.361895,-1.833770,7.612427,-6.776053,5.216362,-6.956188,-8.204016,-1.163643,8.411074,-3.379003,0.955708,-9.244545,-5.864279,-5.011574,-7.148973,-5.478684,-3.362304,-7.064636,7.536321,-1.443004,7.900983,0.783982,6.729944,-9.955275,1.648601,5.222882,1.762035,8.810559,-4.549003,5.033072,-9.126503,-4.775874,-8.987522,5.088801,7.709009,-5.908080,-2.174649,7.214986,-7.698901,-7.883604,-8.821106,-3.253989,9.184854,2.476781,6.391871,-2.262791,7.205685,-7.693074,1.858168,6.457398,-9.603736,6.251007,-3.018026,-7.574335,-9.918557,-7.719167,2.803581,-6.694837,-7.174745,-0.571497,8.352704,-3.832391,-9.395628,-6.917454,-5.364210,-5.058656,-4.805285,5.100869,-2.492915,0.108769,-7.429565,1.877525,-5.040118,6.903596,-6.161431,-0.855276,-0.767038,-0.913931,-4.216787,1.471425,-1.020931,6.050771,9.377951,9.702746,-7.443592,4.531724,-7.679323,-0.645082,-2.427916,-0.281704,-3.287815,-0.454517,4.179165,3.038083,-2.075645,-1.356725,-1.493876,4.862673,-6.897660,-1.085026,9.210001,4.224021,-7.267200,-6.190891,7.272139,5.638459,2.818099,2.638457,-2.514253,-7.027435,1.783963,-9.238833,-1.933729,5.790703,-3.881841,-6.329923,6.152135,-3.476559,1.885582,0.537452,1.435623,-2.268659,-3.567605,0.284108,-0.394246,6.206775,-8.223713,-5.305820,6.258678,0.207301,1.438033,1.512959,2.591796,-5.044366,-5.452799,-7.062165,9.568674,2.900756,-4.175573,-3.158601,-3.228850,-2.733791,6.062198,-0.348197,-9.174288,5.891259,1.900473,7.938666,-8.891162,4.705695,6.490728,-9.870908,0.763834,-6.841119,-7.164724,-2.310583,8.755713,2.017200,5.387818,9.347013,8.082489,8.976754,-5.978337,1.881795,6.490902,9.995833,-7.586885,7.185889,1.738645,5.356755,-1.671885,7.657965,-9.293309,6.838231,-0.543174,-5.576615,0.436265,-9.151529,-5.435963,-5.906718,-4.338398,-4.489545,4.442323,-2.770297,8.686708,-3.206545,-1.216182,1.461163,-7.545242,-0.979613,-1.168112,-9.128614,4.382865,8.964033,-2.675812,5.953372,3.597482,-7.265461,3.428909,-9.335136,-6.667655,-0.414927,-7.049547,-6.999311,-3.305250,7.759328,9.985666,-8.709589,-9.397529,-2.385327,5.751179,9.827607,0.571405,9.803846,5.803183,8.778213,-5.849366,-3.815478,-4.070125,1.174522,0.378032,9.194198,-6.121549,8.688999,9.633592,-9.816772,4.300410,4.447259,7.745603,2.134816,-7.280406,-9.506904,0.868320,1.937079,0.240485,-4.991904,9.443167,0.986919,-6.600231,-2.057560,-7.547948,-9.283309,3.018422,-9.169295,2.613243,2.048602,1.254786,-6.037097,-5.251264,-7.580935,8.993938,-3.388965,-1.980923,-4.228004,0.933285,-9.509676,8.451868,5.724043,-8.649390,5.591735,-2.130394,-1.878744,0.448620,-2.223989,-9.554777,9.410430,0.213860,7.345494,-1.661008,-0.523713,-4.124080,8.759367,-9.527606,-6.232903,8.034024,-7.849134,-1.060400,5.537162,7.620146,7.762476,-9.259300,1.204177,1.421797,0.522608,1.278358,0.865948,-1.688873,5.040033,4.652127,4.366248,-3.132252,-5.607783,-3.545150,-6.164348,3.007300,-4.306871,-4.487522,-0.941417,-5.146620,7.207226,8.620541,3.835653,-3.707240,-0.001057,4.312759,-8.669960,9.878448,-1.242740,-2.360124,-4.818613,4.429072,4.239892,-4.892976,6.453573,4.016519,-3.177334,7.563563,-4.043922,3.270787,7.008403,-3.436159,-0.376339,0.818654,-7.034026,5.733247,3.907350,2.196443,-8.206227,-7.913958,-7.568839,8.271301,9.295780,-2.368705,-4.881178,-3.156873,-5.440349,2.761111,0.002939,-6.788085,-8.673224,-3.657600,-7.823769,-0.752607,8.178920,-9.022770,-3.859745,7.698575,-1.022370,5.153575,6.327266,-5.011281,-7.636913,-6.922424,-1.165750,9.926308,-3.216741,4.863977,3.539722,1.119809,-5.359167,-7.362996,8.195783,-3.903504,-6.628681,-5.649067,-6.718320,0.560297,-5.263610,-0.715187,-0.344592,5.326433,4.421968,7.329942,-4.658066,2.870188,-2.651380,5.410130,7.542376,0.251116,2.243778,1.296400,3.156356,2.682995,-1.478321,-1.251199,7.852509,6.880019,-4.585546,-9.632046,-1.612913,-4.952776,2.025381,-3.804469,7.800935,-5.969665,-2.440997,-8.113904,9.748470,0.244759,1.271059,-6.032846,-4.130706,5.521701,2.841344,4.745791,-5.261663,-6.808957,-0.715285,-3.130314,1.423006,-9.294063,6.988073,2.036117,-6.559809,-8.234988,-4.466204,5.649611,1.129651,-3.700264,-2.125838,-8.917811,0.426133,-2.995052,4.794794,4.514059,-0.356599,-4.145311,8.778668,-1.180429,2.050182,3.035973,9.944987,-6.223234,-3.350489,4.021449,-2.124758,6.486241,9.232721,6.535101,-4.229450,4.891213,7.706749,-1.225728,6.672577,-3.713824,-3.694564,-5.759412,-1.976972,-6.163845,6.951449,2.528388,0.557200,1.823556,9.018601,6.122808,-8.652899,-9.485442,2.512683,-3.809405,1.406643,9.170958,-2.154655,5.629823,-5.418465,7.497202,-5.595844,1.446280,5.072613,-8.307146,-1.772037,6.355605,-0.879082,-4.059337,-5.260455,-9.204397,0.775910,1.190199,1.498598,8.025418,-9.876034,-7.010908,8.529676,-6.652595,-0.429250,1.907648,9.490418,4.512038,-6.462217,2.594714,-1.180863,-6.964254,3.172919,-9.062401,6.873179,-4.122180,-7.611675,-1.978438,-2.352189,8.864518,6.454694,5.361214,3.829042,-8.960543,-1.983055,-6.371555,4.379324,2.351995,6.952117,6.401140,7.270261,-3.853435,-6.610372,7.243655,-5.342799,-3.172034,-4.022709,-7.925244,-1.642205,5.601167,-3.143144,-0.580234,9.406048,-4.481708,5.401918,2.529480,1.018638,-3.367638,-9.070510,-5.655098,-2.995660,-6.386602,8.756232,-2.130435,4.193195,-6.832098,-1.838499,2.003386,-0.398927,-8.677244,3.777580,-1.790158,8.212900,0.939154,6.479449,-4.874246,-5.242824,-1.113683,2.167582,1.209617,-9.605480,-5.501858,-0.158038,-4.603710,1.117959,-2.929726,-1.872979,8.008887,-0.709241,1.375433,7.315351,2.741610,-9.294908,3.265568,1.164041,-4.776611,-6.285484,-1.890872,-3.655274,-2.444515,2.282951,9.104518,1.070428,9.165689,2.817118,5.108097,7.326313,-1.847076,-6.318488,3.389206,-1.175755,-3.612922,6.002431,-5.019724,8.588354,4.577329,7.916403,6.952263,-2.579648,-4.680465,4.410541,-6.844371,4.044196,1.055062,-5.724106,0.772835,-4.233027,9.130915,-6.174717,-1.470744,-2.270823,-5.860376,-6.185702,5.990152,-0.311324,-4.870086,3.312674,-5.114050,4.800160,4.118307,2.235082,-9.610603,-6.591425,0.658776,3.616250,-6.696989,9.792943,-9.031198,-7.175754,-1.754130,6.388917,5.061004,3.758056,1.982165,0.906333,-4.806381,5.889126,-0.836286,2.335699,-4.070460,5.822452,-4.935534,3.333272,-9.793333,-5.173239,1.782539,6.913107,3.330937,-8.739365,8.379330,3.062080,-5.429787,1.802578,-5.430785,-7.757943,4.849097,8.564205,0.553647,-5.317531,2.694328,-4.754243,4.649788,7.433811,6.591968,4.300450,4.926849,-7.511353,-1.227897,-8.000098,-4.770736,7.916507,3.376195,-7.409905,-7.554106,-6.907286,8.471846,-0.983705,5.542926,1.436624,7.571403,4.093461,6.441147,9.084666,5.384056,-8.329460,-5.596149,-6.201282,4.176414,-0.413583,3.229224,5.522355,-2.674167,9.766691,9.254846,-3.521555,-1.554789,9.047361,0.190873,3.388150,-9.796471,5.689282,1.243562,-1.537469,-0.192417,-6.120475,-4.462679,-0.489681,8.859657,-7.549550,5.856444,-1.214038,-2.001657,0.587858,-9.170436,2.212907,7.330730,3.485550,-4.107364,3.840311,7.281633,-7.541261,4.919781,-9.372922,4.781942,6.823784,6.741435,-6.120065,0.973472,3.764999,-1.747235,-8.275423,3.708209,-3.090330,-4.231673,-8.996650,-7.186491,1.351319,-4.293633,-9.113461,-5.625308,-3.123779,5.666614,9.601521,-4.804258,-4.963645,9.146657,-8.424515,0.382658,-2.765704,-0.070930,7.203970,-8.975364,-7.556941,-5.141730,-3.854802,-0.498164,-1.471794,4.641211,-6.027289,-0.172680,-3.269563,-6.107019,0.913328,4.720189,5.145970,-7.622432,-4.400308,7.028458,1.732078,-9.544330,-9.284733,-7.306907,-3.961185,-4.922542,-9.947148,-3.620841,3.148403,4.381077,-4.245995,-6.144190,3.846038,-5.673996,3.661602,-9.000762,9.747065,-2.016646,-1.077472,-1.550101,-4.793964,2.955989,4.677307,7.862776,-8.058472,6.799316,-1.954062,-0.552927,9.972189,7.898268,-9.406441,7.388004,-5.879978,1.140479,1.544686,-6.571504,5.501590,-8.544614,5.524658,2.247405,-6.105500,-1.106084,-3.676488,-4.916791,5.485471,9.151640,-2.924096,1.507783,-3.899878,6.341987,-2.753417,-6.499152,8.078479,-7.029388,-9.821578,9.164465,4.784290,2.111326,-2.544162,9.861030,-3.814472,-6.154386,2.755759,7.539491,-0.352388,5.014260,-1.323985,-5.825249,-0.733419,-7.892498,-8.080357,-3.300266,8.622732,-1.732860,4.161801,5.719462,-0.423646,-7.395719,6.599957,4.498238,-6.553955,-5.160636,-6.153659,2.583613,-0.606357,-7.229586,6.498805,-7.878642,-4.353779,-2.060332,-7.678754,3.543472,4.471120,-5.898706,-8.810834,3.523659,9.055794,6.979384,-2.813884,-2.725329,2.062802,-1.003215,5.866557,0.265375,0.136452,-1.956169,-7.265232,-7.327744,9.039003,-2.827859,-9.041733,5.010358,-2.859671,-0.302907,2.178444,6.823325,2.002918,8.824884,-1.157512,-8.050290,-1.727573,6.151506,6.583518,3.054667,-2.776592,-1.881278,2.399337,-3.243474,-3.909346,-7.952050,-4.960814,-8.610574,1.188667,-3.268720,6.502155,8.941364,8.406956,-6.738300,-0.912193,-9.379388,7.756696,-5.644828,-6.034965,-0.814486,6.372821,-0.513965,-5.725349,6.527227,-8.856961,1.487818,-6.057293,7.037048,6.403606,-3.144623,8.995934,8.216810,3.767998,5.021325,-2.735917,3.777077,1.702239,2.521157,-8.760146,0.219903,5.385976,-3.218086,-6.511818,6.971186,8.755047,6.786911,-5.924373,-6.660520,-5.289849,3.610882,9.958380,-8.590777,-8.545713,4.784766,-9.989427,2.623112,5.505893,-0.577139,-1.789798,-9.137685,6.255237,-1.940227,-4.570045,-7.350869,7.646122,0.273392,-7.586320,0.231269,-5.614496,0.381861,0.401566,-0.909274,7.493782,-7.377829,-7.729164,1.900586,7.864682,-1.138967,-2.933375,-5.942581,-8.883115,2.500714,-2.312852,-0.784939,3.015720,1.874387,-5.520283,8.209305,-7.333442,0.756251,-2.623298,8.966913,6.743027,7.403747,-6.200743,6.808520,-5.347011,5.366339,5.771720,3.299868,3.505469,4.197272,-5.386867,0.297183,8.493361,5.176958,-1.174620,4.266802,-8.429492,5.736539,-8.176128,-3.748342,1.328633,0.849769,5.543063,6.657243,-1.866286,-4.183718,-6.033116,9.192265,7.928078,1.763785,6.917772,6.868682,-4.278323,-8.963631,5.790658,3.837946,-7.127465,3.560768,2.100692,9.042217,9.310361,-6.182986,7.188347,7.869714,-5.153853,-5.704071,4.226797,-8.275925,8.700049,7.497890,7.360750,4.141752,8.458789,6.104073,-1.490669,-6.311387,-5.643069,1.463908,4.701396,-8.618886,9.252145,3.834709,-3.989077,-3.150552,1.180781,-6.436690,-9.826102,-5.967710,-6.830839,-5.467249,-6.357272,4.094635,9.550924,5.957185,9.783935,0.013841,-8.519267,-7.697692,-1.862845,-8.153618,-7.310810,-9.441169,1.981092,-8.207897,-1.920406,-9.124095,-6.956545,1.747346,-9.454878,-1.758973,0.607606,-2.496549,-4.570301,-0.811434,-6.549886,-9.388375,-1.892514,0.368404,-3.343306,9.834617,3.014739,0.131276,6.277413,0.319936,5.498048,-7.717721,3.170657,2.832847,3.028122,-5.256163,-8.286079,-5.545151,3.181329,-3.293647,7.538724,-4.642585,1.193748,-5.019051,5.177691,-8.309209,5.931929,7.018644,-3.379927,5.921062,-3.292013,4.414392,-9.808177,8.628050,5.417400,3.421911,-8.260734,8.621917,-3.481344,-2.238482,-8.262032,-6.286644,7.989218,-2.608009,-2.000090,3.265467,-5.355823,-9.879003,-7.399083,-1.388199,5.003535,6.719028,-1.844351,-6.549520,-3.408982,-0.015053,4.695364,1.711230,-6.390294,-3.800187,6.527746,6.288908,-2.282287,-7.651432,-6.425682,3.440391,4.011678,4.988159,2.039061,-2.387005,-2.689189,-8.229538,0.577369,7.904273,-4.469282,2.992992,6.412528,9.981825,-5.008636,8.016282,-9.607661,-6.492165,3.294169,7.680608,6.856531,-7.260640,-5.069310,-7.502463,-1.052183,6.194932,8.771664,-0.424948,-3.164658,8.518870,-6.293571,1.278060,8.460310,-9.004655,5.751956,2.163075,2.709222,-9.126782,0.185087,4.950969,-6.284246,-1.449447,0.180579,2.078911,-7.549811,-1.610463,4.100701,7.177655,-0.553418,7.187484,-2.704237,-1.056183,-8.536946,6.784075,2.138145,-7.437431,-1.585467,-3.080383,8.146777,7.989736,-1.526094,-1.719205,9.838527,-7.053540,0.207186,2.285322,-4.654620,2.941352,-5.280185,-5.492778,-2.737864,-1.132444,5.201782,-6.714802,-4.023044,-6.858613,-5.887659,-5.077109,9.486672,4.270441,-6.623794,-3.241864,-1.989257,2.782267,-9.102365,8.759065,-0.348054,7.485879,-4.638722,7.745404,1.641014,3.885427,-3.939877,0.858027,-6.199103,3.405431,8.834076,9.877048,7.788990,7.672450,6.077156,-8.576604,-6.910601,5.161058,-9.130577,5.777362,0.771979,6.549351,-5.553802,3.338901,3.589941,3.723935,-9.445237,-6.351084,0.191529,2.398922,-4.108060,9.178097,-4.274872,1.632235,8.667966,-2.896671,4.586423,-3.677308,1.118398,-2.752129,-2.896181,9.085831,3.999987,8.513702,3.385220,4.021621,-1.410171,-4.035196,9.794407,7.576131,-1.283974,0.639000,6.328284,3.426080,1.140228,4.125311,4.399668,-6.417691,7.673462,-8.874482,9.861258,-8.395207,-4.167131,-3.767431,4.926648,-3.910367,5.375430,2.375097,5.620261,0.862921,2.251070,4.181333,-6.346067,8.903956,0.161827,-3.098625,2.262871,-1.886208,-5.378469,3.385125,1.904053,6.495323,-1.021127,0.287668,-2.845091,-0.847136,-8.750135,-8.024512,-7.303463,-0.036082,9.821609,-7.432713,0.928266,-1.635010,7.627699,0.314451,6.053407,3.025651,-5.944773,-4.328481,-8.783165,-7.553871,-4.768544,3.017398,-5.952051,-8.595547,-3.116998,-0.431341,9.517874,8.960941,-9.134999,8.764446,-9.311983,6.160114,-0.339908,4.960668,8.302846,3.800457,-2.633176,-9.228227,-7.720636,7.782603,7.401584,-1.277949,-7.371268,1.778029,9.969228,5.356980,2.765792,-8.670267,-9.380620,-5.924223,2.868193,8.707337,-1.607014,-9.229436,-5.905826,-5.391486,7.145338,-0.320965,-3.441691,-7.374637,7.446192,8.417228,9.889867,-8.749055,0.235094,4.426905,-2.774865,1.958198,-6.333683,1.214653,5.232575,-4.455786,-4.185472,-9.519200,-2.318561,-4.639190,-4.633770,-6.625814,3.009528,6.418042,-6.555891,9.972416,8.278426,0.391466,-0.150756,-9.668089,-3.279355,-2.957975,-4.627489,-5.083974,-7.212334,-2.661917,-6.699222,-9.969237,7.184284,3.301274,-4.392446,-2.900744,9.661955,0.960757,-8.509278,3.967843,-6.211848,9.766623,-0.654845,1.010545,6.177163,-4.469147,-2.561740,0.238958,-0.585073,4.791241,-6.753026,0.905237,-2.146773,7.009024,-4.491144,7.819204,0.669136,0.876720,-7.991238,-8.420063,-5.381980,-0.062826,4.414688,-0.055667,-1.842794,-6.497344,2.549105,-7.133973,-7.139460,-3.264763,-1.329989,6.656545,7.162155,8.323320,0.271253,4.504512,-6.942249,-7.125631,2.294040,-0.210194,6.623086,-6.763365,-5.169642,-5.463011,7.484308,6.211752,-6.037931,2.945540,-6.172175,-9.964143,-7.809300,2.352377,4.866392,-3.317029,4.454543,-7.271462,2.731344,5.039228,6.276494,-5.318910,6.298802,-8.025201,-7.645689,6.235443,-5.484194,-9.556377,8.859069,-8.214151,7.211864,1.549390,0.631019,6.973084,6.735379,-5.661163,-7.293317,7.991497,-6.546302,-3.063412,6.841552,9.362260,4.015263,-0.846157,-3.026731,3.325968,4.641406,-7.958713,-4.989826,6.916929,-9.913046,-1.489850,-9.945994,-4.847981,3.396599,7.029576,-4.194657,-5.104424,-3.804542,-9.600754,7.484501,-1.894949,0.124795,2.348352,2.343653,9.816876,-0.416219,-2.294626,2.366504,-6.177927,8.751984,9.788733,-1.899477,1.957891,-0.126184,9.465252,8.873611,-8.175500,-0.557778,-9.807826,-6.789837,-8.551578,7.877279,8.805142,3.927228,4.567298,3.244319,9.862178,8.566325,-1.755940,-1.347814,0.516663,7.052151,-1.474870,-4.295816,0.358676,-3.172199,3.673109,4.014020,-1.178426,-4.974715,1.549181,-2.810300,-0.696084,-2.609376,5.019948,-1.995322,-8.734998,-8.700989,-2.954396,-2.308288,1.865366,7.375404,-5.849824,4.382427,7.822463,4.767732,2.656428,2.905624,8.016350,-0.977753,8.891751,1.607520,4.222074,-9.942854,-0.810968,9.463567,-5.314780,3.689880,7.216044,9.186640,-4.067223,-5.183420,8.723993,9.878771,6.636147,6.531102,9.347510,-3.961829,3.015986,-4.415154,9.263218,2.201740,-6.311297,6.740056,-6.500329,-9.383025,1.678349,-4.819578,4.289535,0.748473,-1.438100,1.813604,7.738727,-5.062294,-3.911198,4.535525,-3.627458,4.387442,2.636654,4.541062,-0.800895,-2.400944,-0.836186,-5.783809,2.585020,-0.570312,-4.582768,0.929777,4.345964,-6.719246,-3.323286,-4.040829,7.484577,0.929604,-1.351097,-1.120669,-4.638469,-0.853783,6.039577,-0.862163,-4.971454,-5.150713,-6.258027,-1.439469,0.868500,-4.171150,-6.709143,0.980580,-6.648742,-1.526396,9.603405,9.332262,-6.359597,-3.953443,-9.384426,-7.284353,9.685519,-8.534043,-0.454277,5.766074,1.932432,6.886089,-7.501180,4.918618,3.861751,2.772641,-4.540828,-8.769303,-6.131726,8.113803,-0.843960,1.397816,-3.278234,8.842942,2.691187,1.319070,-7.693374,-9.103951,8.362055,-3.765611,-5.737258,1.216673,-0.581030,9.185047,-0.719210,-5.872890,-2.092384,-7.675612,9.179302,9.116624,-5.449127,0.250102,3.704079,-1.354370,-1.441566,7.066856,-7.775841,6.859427,-4.625294,-7.714850,1.182118,6.037100,-9.125780,0.639663,-9.289016,-1.307955,3.817697,2.022612,-0.923744,9.600779,-6.472463,5.958406,7.950575,-3.452730,6.575882,-6.152944,1.101685,-8.206753,3.824918,6.660802,-7.840862,-7.127589,8.000308,-0.931157,1.499088,-6.425026,-1.751687,9.595406,8.445935,6.867361,-7.130526,9.915556,-6.427890,3.381059,3.082553,4.302305,9.193644,2.132730,0.530562,-8.833011,4.976316,6.999768,-3.412360,4.603911,-1.565255,-2.135566,-1.831546,-4.111885,5.571800,-0.848966,-4.467803,-9.378492,-6.212293,-9.878311,0.144114,-7.250927,-4.137939,-7.104769,-2.970539,-5.362527,-0.255482,9.193448,-7.304083,5.868913,-3.031757,2.061139,2.937236,-6.051983,9.677805,-9.821474,2.805894,-6.206791,-8.899015,-3.289276,-3.253562,0.160075,3.205576,-5.894773,-9.204463,6.544794,8.118717,2.493763,-2.081416,-1.504205,-4.762663,-5.164423,-6.833507,9.735417,6.812344,2.583563,-3.042398,-9.638307,-3.034718,-6.647025,7.830741,0.911765,-9.820323,2.858662,-1.145740,-6.607557,-7.563432,-6.678178,4.832915,1.623017,3.682559,3.481620,6.741451,4.174299,-3.560446,-1.444466,1.224877,-7.834358,-5.433947,-1.884550,-0.059236,-2.342002,3.219824,4.193934,-3.733676,3.482986,7.099600,-0.354020,-5.007907,-6.960518,4.596111,-5.976198,-1.336778,-8.988306,1.435008,9.046101,2.333411,-9.151418,-7.447207,-0.041661,5.571225,-0.606034,-5.899208,5.225325,-1.494916,3.857657,8.408797,-5.469077,-3.427983,-3.474875,9.819809,4.135218,4.595584,6.868761,0.458582,5.685886,1.034293,-7.388954,-8.384372,1.162185,9.498630,-2.417260,-8.995365,9.762081,9.713058,-7.660750,3.861792,4.633633,-7.101160,4.553345,-9.391430,-2.686604,-6.553331,9.543651,-4.465392,-4.749737,8.367125,-0.523492,6.207431,3.980214,-7.811923,-3.414626,6.120511,-5.492188,-8.311999,-3.236486,-5.812922,1.630267,1.045122,0.389035,4.639741,4.369891,-5.246242,-8.088347,3.867924,-7.518738,-2.197493,-1.590826,6.863454,6.710506,-1.933057,-0.655653,-4.614530,9.121886,8.428701,2.191608,-5.421584,2.993229,7.923682,8.494205,2.708763,-8.595537,-2.647567,-6.647995,4.398310,6.145033,6.025088,3.038375,5.356192,2.519327,1.438028,3.747429,7.600115,9.140757,2.152348,-8.144709,-3.952978,-5.564636,3.892362,-7.014648,-7.328907,-4.602944,-6.514526,1.045531,-8.894310,-1.541925,4.784416,-1.504797,-4.861220,1.866778,-0.738158,6.728905,-4.419636,7.866819,-2.539174,3.109020,3.378195,-7.769304,3.231614,-3.684038,-0.040859,2.516756,-9.505355,-7.106389,4.626068,-8.771531,7.914144,0.228688,9.836795,3.089419,-5.312669,-5.308688,-4.338235,1.820912,-7.386917,-5.689039,-2.739998,4.413626,0.563670,-7.840834,6.872661,-8.043587,-7.452247,9.468160,-7.289865,7.901551,3.452359,-5.807882,-1.552857,2.771588,3.058197,6.908580,5.659617,8.517733,-0.871647,-9.421548,-9.806628,9.775422,-5.591376,7.576300,5.168529,7.850680,-4.844078,4.636986,-9.272201,-4.204059,-9.471991,3.532466,-2.398048,-8.390844,-5.322687,-7.473237,2.608626,4.184660,-1.048748,-9.370627,4.024171,-9.330103,3.058161,-1.290325,-4.425099,-2.854093,-0.962633,5.182003,-3.839300,-5.243709,-9.127245,3.590241,-9.628221,8.338368,8.422095,-4.256915,6.073545,1.682316,-4.049126,-2.951613,-5.277894,8.834375,1.690962,0.828852,-3.092366,-7.243929,-3.168170,-5.083872,8.467666,-0.158516,3.439577,6.816144,1.313038,-4.577805], dtype = "float32")#candidate|10201|(2310,)|const|float32
const_10202 = relay.const([-7.876351,6.101377,-1.002823,4.287410,-4.581182,-2.334970,-2.928602,-2.934300,9.843435,-2.526015,-8.024065,7.777371,0.874899,-9.375883,-9.423926,-3.187403,-0.259088,-5.559094,6.126225,2.589814,9.592279,9.225023,8.212518,-9.424956,7.812895,-0.942116,4.301115,-4.354418,-7.508463,9.046656,-0.657294,6.313221,6.024818,9.004307,-8.499079,-0.918528,6.217645,5.194780,6.859404,1.510812,-2.554774,-2.200586,3.882955,2.256461,0.144262,-3.009108,-9.461790,-1.941625,6.688409,-8.420832,2.354665,4.826410,-9.768760,7.188226,4.114177,7.472013,-3.878642,6.458056,-5.122448,2.113689,2.923718,-5.431634,-9.995973,4.772132,-5.522166,7.387562,-2.833522,-8.625969,2.187097,-7.079505,-8.509803,2.335004,0.426903,-4.520109,4.806640,-2.764211,4.506744,-9.970091,4.852083,2.832146,5.318544,3.064138,-4.853411,5.467967,-1.583665,-8.468299,2.049554,8.896268,-8.430780,-9.851659,-3.412885,-4.276974,4.623941,8.043547,-4.409567,1.931001,3.255997,9.677807,-2.386781,4.591320,-0.867245,-0.792534,2.795605,-7.979335,2.834326,8.422277,7.604199,-2.450017,-5.610661,-7.025128,-1.952975,5.208268,-4.929804,1.719589,1.592798,2.710960,-1.824590,9.277573,-2.087636,3.772397,-4.842469,8.037229,-8.515629,9.166409,7.265274,5.254232,1.782466,6.000129,5.888304,-1.282472,3.635724,-1.457921,1.255373,-3.677304,-9.874613,-8.706817,-8.680434,-6.988880,9.153729,-6.956238,4.145507,-7.581530,-5.586302,1.128417,6.627010,-5.757460,7.463847,-0.386325,-2.578541,-7.643099,6.701794,4.973759,-7.165672,-8.660241,1.179869,-4.089044,5.604073,1.681965,-4.031260,7.298628,3.575867,9.944401,7.502327,2.239723,-9.177721,-1.701997,-3.394773,1.790016,1.967209,-1.373130,-3.803296,-9.308294,-5.381333,1.644137,-1.337937,-8.847191,-2.863287,-0.415964,5.680517,5.350341,-4.537901,2.869369,-1.698067,5.138359,2.904956,-1.439096,5.162435,5.615927,8.764630,-4.261584,5.340636,3.071693,-9.046565,0.692046,6.954092,5.083199,-3.303823,8.262824,-0.623486,0.202949,-8.239729,0.124757,-2.902304,7.799092,-6.048552,6.823169,-9.777977,8.280469,-9.294299,7.389450,-2.915141,4.610751,2.846744,0.740695,-4.410893,3.970891,-0.203739,-7.828887,3.980493,-9.329700,3.731331,-3.298977,-4.040982,1.767884,-2.924869,1.225136,6.107515,-6.360861,1.306622,-8.410189,-1.831377,-0.600500,6.073298,8.626677,4.598581,-4.981176,0.896309,-4.946823,-6.965495,-6.168084,-6.765617,5.963423,5.768446,0.693462,8.571344,-4.943807,5.411493,1.283912,5.994984,-2.555164,-9.571483,7.481871,1.882267,-1.328293,2.258130,-6.148617,-2.030291,-2.688541,2.152302,-3.468374,7.234109,-3.517773,2.067328,9.771235,-8.593652,1.726664,-9.180936,-3.816917,0.753200,-6.214053], dtype = "float32")#candidate|10202|(270,)|const|float32
var_10203 = relay.var("var_10203", dtype = "float32", shape = (225, 10))#candidate|10203|(225, 10)|var|float32
call_10200 = relay.TupleGetItem(func_2639_call(relay.reshape(const_10201.astype('float32'), [11, 15, 14]), relay.reshape(const_10201.astype('float32'), [11, 15, 14]), relay.reshape(const_10202.astype('float32'), [30, 9]), relay.reshape(var_10203.astype('float32'), [2250,]), ), 3)
call_10204 = relay.TupleGetItem(func_2644_call(relay.reshape(const_10201.astype('float32'), [11, 15, 14]), relay.reshape(const_10201.astype('float32'), [11, 15, 14]), relay.reshape(const_10202.astype('float32'), [30, 9]), relay.reshape(var_10203.astype('float32'), [2250,]), ), 3)
func_4270_call = mod.get_global_var('func_4270')
func_4273_call = mutated_mod.get_global_var('func_4273')
const_10206 = relay.const([False,False,True,True,False,True,False,True,False,True,False,True,False,False,False,True,True,False,True,False,True,True,True,False,True,True,True,False,True,True,False,True,True,True,False,False,False,True,True,True,False,True,False,True,True,False,False,False,False,True,True,False,True,False,False,False,True,False,False,False,True,True,True,True,False,False,True,True,True,False,False,True,True,False,False,False,False,False,True,True,False,False,True,True,False,True,True,False,True,True,False,True,False,False,False,True,False,True,False,True,True,False,False,False,False,True,False,False,True,True,True,True,True,False,False,False,False,True,False,True,True,False,False,True,False,False,False,False,True,False,True,False,False,False,False,False,True,True,True,False,False,False,False,False,True,False,False,True,False,False,False,True,False,True,False,True,True,True,True,True,True,True,True,False,True,False,False,False,True,True,False,True,False,False,True,True,True,True,False,True,True,False,False,False,True,False,True,True,True,False,False,True,True,True,True,False,True,True,False,False,True,True,False,True,True,True,False,False,True,False,True,False,False,True,False,False,False,True,True,True,False,True,False,True,False,True,False,False,True,False,False,False,True,False,True,True,False,True,True,True,True,True,True,True,False,False,True,False,True,False,False,True,True,False,True,False,False,True,False,True,True,False,True,True,True,False,False,True,True,True,False,False,False,True,True,True,True,True,True,True,True,True,False,True,False,True,True,False,False,True,True,False,True,False,True,False,False,True,True,True,False,True,True,True,True,False,False,False,True,True,True,True,True,False,False,True,True,True,True,False,False,False,False,True,False,True,False,False,False,True,True,False,True,False,True,False,False,True,False,False,True,False,True,False,False,True,True,True,False,False,True,False,False,True,True,False,False,True,False,False,True,True,True,False,True,False,False,True,False,False,True,True,False,False,True,False,True,False,False,True,False,True,True,False,True,True,False,True,False,False,False,True,True,True,True,False,True,True,True,True,False,True,False,False,True,True,True,True,True,True,False,True,False,False,True,True,True,True,True,True,True,True,True,False,False,False,False,True,False,False,True,False,True,True,False,False,True,True,True,False,False,False,False,True,False,True,False,True,True,True,False,False,False,True,True,False,False,True,False,False,True,True,False,False,False,False,True,True,False,False,False,False,False,False,True,False,True,False,True,False,True,False,True,False,True,False,False,True,True,False,True,True,True,True,True,False,False,False,True,False,True,True,False,True,True,False,False,True,False,True,True,True,True,False,True,True,False,False,False,False,False,False,True,False,True,False,False,True,True,True,True,False,True,False,True,False,False,True,True,False,True,True,True,False,True,True], dtype = "bool")#candidate|10206|(546,)|const|bool
call_10205 = relay.TupleGetItem(func_4270_call(relay.reshape(const_10206.astype('bool'), [7, 13, 6]), relay.reshape(const_10206.astype('bool'), [7, 13, 6]), ), 0)
call_10207 = relay.TupleGetItem(func_4273_call(relay.reshape(const_10206.astype('bool'), [7, 13, 6]), relay.reshape(const_10206.astype('bool'), [7, 13, 6]), ), 0)
bop_10226 = relay.bitwise_or(const_10201.astype('int32'), var_10193.astype('int32')) # shape=(10, 3, 2310)
func_8634_call = mod.get_global_var('func_8634')
func_8637_call = mutated_mod.get_global_var('func_8637')
const_10230 = relay.const([5,9,7,-6,2,-7,8,2,1,2,5,10,5,1,-2,-7,2,-5,-4,5,2,-10,7,-8,5,-4,7,-10,5,8,-6,6,-3,-6,-1,10,10,-6,3,5,-6,-10,-5,7,-2,7,2,-5,-4,9,-1,-9,-2,-7,-8,4,-3,9,5,-8,-5,-6,-8,-9,1,10,-8,2,-3,-4,5,-9,4,-6,7,5,-1,-6,-1,3,-4,5,-3,1,-10,-9,5,-5,7,8,-7,4,4,-9,7,-1,7,3,5,-6,-1,1,-2,-4,8,-2,5,-3,10,-5,3,7,4,-10,4,-5,10,10,2,2,8,-5,2,3,9,8,-8,4,7,-2,-7,-5,-4,-10,2,6,-3,-4,-10,-6,9,-3,-1,8,8,-10,-8,3,-1,-8,-4,-5,-7,4,10,-6,-6,-7,-5,-6,6,1,10,-7,6,5,2,-7,-3,-8,-2,3,5,-6,6,5,-7,-7,10,-9,-1,-8,-6,-4,7,1,8,5,3,-6,-3,-2,-7,7,-5,4,1,-7,-7,8,-2,-3,-3,6,2,-5,-2,5,-8,-5,-1,6,-10,-10,5,3,7,10,4,7,7,-1,1,-8,-10,-1,-3,4,-2,-4,-4,-4,1,-2,9,1,3,7,-9,2,-10,-10,-10,8,-9,-6,-7,6,4,5,7,-1,7,2,-5,-5,7,-7,10,-8,-8,-3,-7,-5,5,8,7,2,-9,1,-1,8,2,9,-1,-2,-3,5,4,-3,-1,2,-10,3,-1,3,1,-3,7,8,9,6,-6,2,-3,8,-5,4,-7,5,1,1,9,8,6,-3,-5,6,4,-1,10,2,10,-1,3,6,-5,-8,2,2,10,-2,-6,6,4,-8,-7,-2,-6,-5,-2,-3,-7,-3,6,7,-3,-3,-7,1,-8,-8,9,3,6,2,-10,-4,7,6,-5,1,3,-8,-5,-2,10,-8,-1,-2,-1,-4,1,-8,5,4,-10,-9,1,1,-10,8,4,-7,-7,3,-5,-8,5,9,-3,-2,-7,4,-2,-3,2,10,-7,3,8,-3], dtype = "uint64")#candidate|10230|(392,)|const|uint64
call_10229 = relay.TupleGetItem(func_8634_call(relay.reshape(const_10230.astype('uint64'), [392,])), 4)
call_10231 = relay.TupleGetItem(func_8637_call(relay.reshape(const_10230.astype('uint64'), [392,])), 4)
var_10237 = relay.var("var_10237", dtype = "float64", shape = (10, 3, 1))#candidate|10237|(10, 3, 1)|var|float64
bop_10238 = relay.less(uop_10194.astype('bool'), relay.reshape(var_10237.astype('bool'), relay.shape_of(uop_10194))) # shape=(10, 3, 1)
func_10154_call = mod.get_global_var('func_10154')
func_10158_call = mutated_mod.get_global_var('func_10158')
call_10246 = relay.TupleGetItem(func_10154_call(relay.reshape(const_10201.astype('float32'), [2310,]), relay.reshape(const_10202.astype('float32'), [270,]), ), 1)
call_10247 = relay.TupleGetItem(func_10158_call(relay.reshape(const_10201.astype('float32'), [2310,]), relay.reshape(const_10202.astype('float32'), [270,]), ), 1)
output = relay.Tuple([call_10200,const_10202,var_10203,call_10205,const_10206,bop_10226,call_10229,const_10230,bop_10238,call_10246,])
output2 = relay.Tuple([call_10204,const_10202,var_10203,call_10207,const_10206,bop_10226,call_10231,const_10230,bop_10238,call_10247,])
func_10255 = relay.Function([var_10193,var_10203,var_10237,], output)
mod['func_10255'] = func_10255
mod = relay.transform.InferType()(mod)
var_10256 = relay.var("var_10256", dtype = "float64", shape = (10, 3, 1))#candidate|10256|(10, 3, 1)|var|float64
var_10257 = relay.var("var_10257", dtype = "float32", shape = (225, 10))#candidate|10257|(225, 10)|var|float32
var_10258 = relay.var("var_10258", dtype = "float64", shape = (10, 3, 1))#candidate|10258|(10, 3, 1)|var|float64
output = func_10255(var_10256,var_10257,var_10258,)
func_10259 = relay.Function([var_10256,var_10257,var_10258,], output)
mutated_mod['func_10259'] = func_10259
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9830_call = mod.get_global_var('func_9830')
func_9832_call = mutated_mod.get_global_var('func_9832')
call_10292 = func_9830_call()
call_10293 = func_9830_call()
output = call_10292
output2 = call_10293
func_10300 = relay.Function([], output)
mod['func_10300'] = func_10300
mod = relay.transform.InferType()(mod)
mutated_mod['func_10300'] = func_10300
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10300_call = mutated_mod.get_global_var('func_10300')
call_10301 = func_10300_call()
output = call_10301
func_10302 = relay.Function([], output)
mutated_mod['func_10302'] = func_10302
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7874_call = mod.get_global_var('func_7874')
func_7876_call = mutated_mod.get_global_var('func_7876')
call_10333 = relay.TupleGetItem(func_7874_call(), 0)
call_10334 = relay.TupleGetItem(func_7876_call(), 0)
func_2096_call = mod.get_global_var('func_2096')
func_2099_call = mutated_mod.get_global_var('func_2099')
const_10337 = relay.const(7, dtype = "uint64")#candidate|10337|()|const|uint64
const_10338 = relay.const([10,2,1,-5,-6,8,-2,4,-2,3,3,5,-2,-1,-8,5,-10,-1,-7,-4,5,-10,-6,9,5,-1,9,-10,-2,1,-9,-9,-3,2,5,3,-9,-8,-9,-5,1,5,-10,3,5,-4,-2,5,-1,5,2,-9,3,6,-6,-8,-4,9,7,-10,5,7,4,3,9,-3,-10,-10,2,6,-6,5,7,-8,5,7,1,-9,5,2,2,3,-10,4,10,9,4,9,-7,6,-6,-4,-6,-4,5,-7,3,-8,4,4,1,3,7,-9,-3,-8,9,-8,5,7,7,-8,3,-5,7,2,-3,7,9,6,-10,-10,8,-5,-9,-4,6,7,9,6,-3,6,-5,8,9,-5,10,-10,-3,-3,7,9,1,-3,-9,-8,9,-8,9,10,10,8,5,8,3,2,-1,3,8,4,-7,10,6,-4,-6,2,-4,-5,8,-6,-7,3,9,1,4,-5,-8,10,-4,7,-9,-5,-7,1,-6,-8,-7,-4,-7,-4,-10,3,-5,-2,-7,9,5,-10,-4,10,10,-4,9,1,-3,-8,-5,3,-5,-9,3,10,-9,2,3,-3,2,-8,-5,8,6,-3,8,-1,2,-7,5,10,-2,-9,-6,6,2,-10,6,7,1,-5,7,-4,-3,1,-2,3,-7,7,-7,-3,10,5,9,-8,-3,3,-8,-6,-10,2,-10,-6,-9,10,7,-4,7,4,3,-10,6,4,-8,6,1,-10,3,8,8,-8,3,3,-3,-8,9,-3,-1,9,-9,-9,-3,1,-6,9,-1,10,-1,8,2,-10,-5,-7,2,-6,-3,1,-6,3,5,6,1,2,1,-5,5,3,2,6,6,-5,9,-6,-10,6,10,-3,-8,-4,4,-3,7,-1,-5,-3,1,3,-3,4,7,1,2,10,-9,-10,-4,-4,-8,-9,1,8,-9,-1,-10,-6,-5,-2,-10,-6,7,-10,10,1,8,-4,4,-3,3,-5,-1,7,7,2,4,-6,7,-9,9,-4,1,-8,-10,-8,-8,-7,4,-6,5,-10,-9,9,2,10,9,-10,4,5,-2,-8,-6,9,8,2,-5,-2,9,-10,-3,-4,-6,5,4,-5,-3,-7,9,2,5,-1,-8,-5,-6,2,5,2,-2,-1,-6,-5,1,-1,-1,-8,-7,-7,1,4,8,7,-1,5,5,-10,-6,2,-8,-6,4,-3,2,-7], dtype = "uint64")#candidate|10338|(448,)|const|uint64
call_10336 = func_2096_call(relay.reshape(const_10337.astype('uint64'), []), relay.reshape(const_10338.astype('uint64'), [7, 4, 16]), )
call_10339 = func_2096_call(relay.reshape(const_10337.astype('uint64'), []), relay.reshape(const_10338.astype('uint64'), [7, 4, 16]), )
func_9577_call = mod.get_global_var('func_9577')
func_9579_call = mutated_mod.get_global_var('func_9579')
call_10346 = relay.TupleGetItem(func_9577_call(), 0)
call_10347 = relay.TupleGetItem(func_9579_call(), 0)
output = relay.Tuple([call_10333,call_10336,const_10337,const_10338,call_10346,])
output2 = relay.Tuple([call_10334,call_10339,const_10337,const_10338,call_10347,])
func_10354 = relay.Function([], output)
mod['func_10354'] = func_10354
mod = relay.transform.InferType()(mod)
mutated_mod['func_10354'] = func_10354
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10354_call = mutated_mod.get_global_var('func_10354')
call_10355 = func_10354_call()
output = call_10355
func_10356 = relay.Function([], output)
mutated_mod['func_10356'] = func_10356
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7714_call = mod.get_global_var('func_7714')
func_7715_call = mutated_mod.get_global_var('func_7715')
call_10438 = relay.TupleGetItem(func_7714_call(), 0)
call_10439 = relay.TupleGetItem(func_7715_call(), 0)
func_8634_call = mod.get_global_var('func_8634')
func_8637_call = mutated_mod.get_global_var('func_8637')
var_10492 = relay.var("var_10492", dtype = "uint64", shape = (392,))#candidate|10492|(392,)|var|uint64
call_10491 = relay.TupleGetItem(func_8634_call(relay.reshape(var_10492.astype('uint64'), [392,])), 4)
call_10493 = relay.TupleGetItem(func_8637_call(relay.reshape(var_10492.astype('uint64'), [392,])), 4)
func_7629_call = mod.get_global_var('func_7629')
func_7632_call = mutated_mod.get_global_var('func_7632')
call_10494 = relay.TupleGetItem(func_7629_call(relay.reshape(var_10492.astype('uint64'), [4, 7, 14])), 5)
call_10495 = relay.TupleGetItem(func_7632_call(relay.reshape(var_10492.astype('uint64'), [4, 7, 14])), 5)
func_10255_call = mod.get_global_var('func_10255')
func_10259_call = mutated_mod.get_global_var('func_10259')
var_10503 = relay.var("var_10503", dtype = "float64", shape = (30,))#candidate|10503|(30,)|var|float64
var_10504 = relay.var("var_10504", dtype = "float32", shape = (2250,))#candidate|10504|(2250,)|var|float32
call_10502 = relay.TupleGetItem(func_10255_call(relay.reshape(var_10503.astype('float64'), [10, 3, 1]), relay.reshape(var_10504.astype('float32'), [225, 10]), relay.reshape(var_10503.astype('float64'), [10, 3, 1]), ), 1)
call_10505 = relay.TupleGetItem(func_10259_call(relay.reshape(var_10503.astype('float64'), [10, 3, 1]), relay.reshape(var_10504.astype('float32'), [225, 10]), relay.reshape(var_10503.astype('float64'), [10, 3, 1]), ), 1)
output = relay.Tuple([call_10438,call_10491,var_10492,call_10494,call_10502,var_10503,var_10504,])
output2 = relay.Tuple([call_10439,call_10493,var_10492,call_10495,call_10505,var_10503,var_10504,])
func_10530 = relay.Function([var_10492,var_10503,var_10504,], output)
mod['func_10530'] = func_10530
mod = relay.transform.InferType()(mod)
mutated_mod['func_10530'] = func_10530
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10530_call = mutated_mod.get_global_var('func_10530')
var_10532 = relay.var("var_10532", dtype = "uint64", shape = (392,))#candidate|10532|(392,)|var|uint64
var_10533 = relay.var("var_10533", dtype = "float64", shape = (30,))#candidate|10533|(30,)|var|float64
var_10534 = relay.var("var_10534", dtype = "float32", shape = (2250,))#candidate|10534|(2250,)|var|float32
call_10531 = func_10530_call(var_10532,var_10533,var_10534,)
output = call_10531
func_10535 = relay.Function([var_10532,var_10533,var_10534,], output)
mutated_mod['func_10535'] = func_10535
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9380_call = mod.get_global_var('func_9380')
func_9382_call = mutated_mod.get_global_var('func_9382')
call_10557 = func_9380_call()
call_10558 = func_9380_call()
func_10300_call = mod.get_global_var('func_10300')
func_10302_call = mutated_mod.get_global_var('func_10302')
call_10580 = func_10300_call()
call_10581 = func_10300_call()
output = relay.Tuple([call_10557,call_10580,])
output2 = relay.Tuple([call_10558,call_10581,])
func_10596 = relay.Function([], output)
mod['func_10596'] = func_10596
mod = relay.transform.InferType()(mod)
output = func_10596()
func_10597 = relay.Function([], output)
mutated_mod['func_10597'] = func_10597
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7874_call = mod.get_global_var('func_7874')
func_7876_call = mutated_mod.get_global_var('func_7876')
call_10609 = relay.TupleGetItem(func_7874_call(), 0)
call_10610 = relay.TupleGetItem(func_7876_call(), 0)
func_9013_call = mod.get_global_var('func_9013')
func_9014_call = mutated_mod.get_global_var('func_9014')
call_10618 = func_9013_call()
call_10619 = func_9013_call()
func_8347_call = mod.get_global_var('func_8347')
func_8350_call = mutated_mod.get_global_var('func_8350')
const_10624 = relay.const([7.117539,-2.774562,8.110665,7.588496,2.769766,5.680459,-0.924740,-7.207642,-9.578188,5.510432,3.395611,-6.705200,-5.167424,3.041253,-8.614907,-3.619626,4.218820,6.820125,-3.147948,-7.936418,-9.577893,2.253527,0.499638,2.095288,7.739640,-7.627571,6.764130,2.053577,-7.724914,0.268605,1.787720,9.034395,-2.010864,4.278145,2.384227,-6.121343,6.654410,-8.460437,-6.599425,5.797779,-3.013944,-1.429872,-9.786959,3.854987,-6.531646,0.190416,-3.768198,-6.526170,4.964848,7.066380,4.751112,0.777449,3.834046,-1.028950,1.312558,4.883023,9.523987,6.053783,-1.748681,9.477256,3.025559,-3.736869,5.356874,0.740633,-8.680067,6.660736,-6.236149,1.821755,-1.291698,5.199339,1.756100,5.857918,0.134555,-0.707096,-5.067829,-1.750005,-0.400388,4.073537,-9.828140,0.091186,-1.906951,-0.929596,2.000087,-8.456485,3.471021,3.664051,1.059311,-2.594109,6.337518,-2.210502,-6.186427,2.997143,6.260753,-5.259876,3.796140,-1.224835,-1.692907,7.023545,-5.031796,3.646961,4.258475,-2.415890,7.871122,7.543523,0.443588,-6.719491,9.418080,4.350563,1.503262,-4.801348,2.643890,-6.267439,1.038359,7.562314,1.828296,-3.317553,8.001952,7.433758,2.386418,5.064685,-6.728589,-4.492715,4.153971,-6.538334,8.157484,-5.450290,-4.384977,-3.673485,-7.647919,8.895410,-0.241616,-3.316136,8.883221,-8.576110,7.370978,8.770942,-5.790978,2.324959,9.799764,-4.213376,-7.692098,4.741197,8.520156,-1.427274,9.192018,5.110933,2.952830,6.060077,-9.418773,2.728107,5.222964,4.290111,-5.110506,-5.377932,8.772393,-2.725905,2.726122,-3.913474,0.273745,-0.329883,-6.267753,-4.379786,1.380203,-7.604436,-2.847604,2.104656,3.181815,2.424313,1.216483,7.698179,-7.931736,-3.793988,-3.859568,-9.545925,-9.867659,-9.458956,-4.651965,-9.467406,0.531751,1.859281,0.513977,8.469890,-8.811673,-3.152656,-8.528945,-2.898891,-4.674960,-2.856580,6.653847,-4.993013,7.801169,-4.193931,-2.645211,-4.693644,-6.516632,0.507130,-7.966761,-0.907565,6.410477,4.958270,-4.291961,-6.465227,-8.344527,3.955576,9.468379,7.662835,4.205067,-9.373616,7.574375,8.623271,1.741273,6.210478,4.677143,-5.668459,-9.942344,3.719960,9.488946,7.144241,-3.115160,8.629628,7.596406,9.457571,-4.468042,-4.513257,-6.281943,6.998991,-0.266382,8.188660,-4.222109,-4.377952,6.033587,-9.640452,2.632676,5.060912,-6.906110,4.667982,9.690328,-4.605205,-2.921735,2.902599,-0.958762,-2.615419,6.942979,2.404433,8.444923,6.819070,6.367565,8.327460,9.017522,-8.867180,6.554588,6.716297,-5.447727,0.877006,-0.078204,6.072281,6.264284,4.826810,-1.321027,0.871656,-4.815811,-0.857748,-1.277280,-5.363441], dtype = "float64")#candidate|10624|(264,)|const|float64
call_10623 = relay.TupleGetItem(func_8347_call(relay.reshape(const_10624.astype('float64'), [8, 11, 3])), 0)
call_10625 = relay.TupleGetItem(func_8350_call(relay.reshape(const_10624.astype('float64'), [8, 11, 3])), 0)
func_1485_call = mod.get_global_var('func_1485')
func_1490_call = mutated_mod.get_global_var('func_1490')
const_10631 = relay.const([-10,7,7,-8,-4,10,-7,-5,-6,9,-4,4,-5,10,6,7,-6,-1,8,-1,-6,-6,-9,10,-1,-7,9,9,-4,8,-6,7,-9,6,10,10,6,10,8,-5,8,-4,-3,-3,-3,8,7,-3,4,4,5,-1,-1,-10,-3,-7,-7,10,-5,-9,-7,8,-2,8,10,-1,7,8,5,6,3,10,4,9,4,-8,5,-3,-6,-5,7,1,-10,-2,9,4,1,1,4,7,-10,-9,8,3,4,-2,4,5,-4,-10,6,4,-9,-5,5,-1,4,3,3,-9,4,8,-5,-5,-1,-2,10,-4,-9,2,-10,2,-4,-9,-2,3,-10,-5,7,5,-6,3,-3,5,-6,9,-3,-2,-7,-3,7,-5,9,3,-10,4,-7,2,-5,-3,7,7,-4,-4,-9,-8,-4,-5,-2,1,-9,10,1,8,-2,-7,5,-6,4,-8,8,1,-10,5,7,8,10,-5,-1,-8,-4,-1,-2,7,-8,1,4,5,8,-8,9,-2,3,1,10,8,-8,-4,5,-6,-10,-6,-7,-8,5,4,9,3,5,7,-7,1,1,4,9,-8,5,3,9,10,7,-7,10,-2], dtype = "int64")#candidate|10631|(224,)|const|int64
const_10632 = relay.const(-10, dtype = "uint32")#candidate|10632|()|const|uint32
call_10630 = relay.TupleGetItem(func_1485_call(relay.reshape(const_10631.astype('int64'), [7, 4, 8]), relay.reshape(const_10631.astype('int64'), [7, 4, 8]), relay.reshape(const_10632.astype('uint32'), []), ), 4)
call_10633 = relay.TupleGetItem(func_1490_call(relay.reshape(const_10631.astype('int64'), [7, 4, 8]), relay.reshape(const_10631.astype('int64'), [7, 4, 8]), relay.reshape(const_10632.astype('uint32'), []), ), 4)
func_9352_call = mod.get_global_var('func_9352')
func_9355_call = mutated_mod.get_global_var('func_9355')
var_10642 = relay.var("var_10642", dtype = "bool", shape = (84,))#candidate|10642|(84,)|var|bool
call_10641 = relay.TupleGetItem(func_9352_call(relay.reshape(const_10632.astype('uint32'), []), relay.reshape(var_10642.astype('bool'), [3, 4, 7]), ), 0)
call_10643 = relay.TupleGetItem(func_9355_call(relay.reshape(const_10632.astype('uint32'), []), relay.reshape(var_10642.astype('bool'), [3, 4, 7]), ), 0)
func_9849_call = mod.get_global_var('func_9849')
func_9850_call = mutated_mod.get_global_var('func_9850')
call_10646 = func_9849_call()
call_10647 = func_9849_call()
output = relay.Tuple([call_10609,call_10618,call_10623,const_10624,call_10630,const_10631,const_10632,call_10641,var_10642,call_10646,])
output2 = relay.Tuple([call_10610,call_10619,call_10625,const_10624,call_10633,const_10631,const_10632,call_10643,var_10642,call_10647,])
func_10651 = relay.Function([var_10642,], output)
mod['func_10651'] = func_10651
mod = relay.transform.InferType()(mod)
mutated_mod['func_10651'] = func_10651
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10652 = relay.var("var_10652", dtype = "bool", shape = (84,))#candidate|10652|(84,)|var|bool
func_10651_call = mutated_mod.get_global_var('func_10651')
call_10653 = func_10651_call(var_10652)
output = call_10653
func_10654 = relay.Function([var_10652], output)
mutated_mod['func_10654'] = func_10654
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9830_call = mod.get_global_var('func_9830')
func_9832_call = mutated_mod.get_global_var('func_9832')
call_10692 = func_9830_call()
call_10693 = func_9830_call()
func_7951_call = mod.get_global_var('func_7951')
func_7955_call = mutated_mod.get_global_var('func_7955')
const_10707 = relay.const([False,True,True,False,True,False,False,False,False,False,True,True,False,True,True,True,True,True,False,False,False,False,True,True,False,False,False,False,True,False,False,True,True,True,True,False,False,True,False,False,True,True,True,False,True,False,True,False,True,False,False,False,False,True,True,False,True,True,False,False,False,False,True,True,False,False,False,False,False,False,False,True,False,True,True,True,True,True,True,False,True,True,False,True,False,False,True,False,True,False,False,True,False,False,True,False,False,True,False,False,True,False,False,True,True,True,False,False,False,True,True,True,False,True,False,True,True,False,True,True,False,True,False,False,True,True,True,False,False,True,False,False,False,False,True,True,False,False,False,False,True,True,False,False,False,False,True,False,False,False,True,False,True,True,True,True,True,False,True,True,True,True,True,True,False,True,True,False,True,True,False,False,False,False,False,False,True,True,False,True,True,True,False,True,True,True,False,False,True,True,True,False,False,True,False,False,False,True,False,True,False,True,True,False,True,False,False,False,True,True,False,True,False,False,False,True,True,False,True,False,True,True,False,True,False,False,False,False,True,False,True,True,True,False,True,True,False,False,True,False,True,True,True,True,True,True,True,False,True,False,False,False,True,True,True,True,True,True,True,True,False,False,False,True,True,False,False,True,False,False,True,True,True,False,False,True,True,True,True,False,False,False,False,True,True,False,True,False,True,False,True,True,True,False,True,False,False,True,True,False,True,True,True,True,True,True,False,True,True,True,True,True,True,False,False,False,False,True,True,True,False,False,True,True,False,False,True,False,True,False,False,True,True,True,False,True,True,False,False,False,True,True,True,True,True,True,True,True,True,False], dtype = "bool")#candidate|10707|(350,)|const|bool
call_10706 = func_7951_call(relay.reshape(const_10707.astype('bool'), [14, 5, 5]), relay.reshape(const_10707.astype('bool'), [14, 5, 5]), )
call_10708 = func_7951_call(relay.reshape(const_10707.astype('bool'), [14, 5, 5]), relay.reshape(const_10707.astype('bool'), [14, 5, 5]), )
bop_10727 = relay.bitwise_and(const_10707.astype('int64'), relay.reshape(call_10706.astype('int64'), relay.shape_of(const_10707))) # shape=(350,)
bop_10730 = relay.bitwise_and(const_10707.astype('int64'), relay.reshape(call_10708.astype('int64'), relay.shape_of(const_10707))) # shape=(350,)
func_1485_call = mod.get_global_var('func_1485')
func_1490_call = mutated_mod.get_global_var('func_1490')
var_10734 = relay.var("var_10734", dtype = "int64", shape = (224,))#candidate|10734|(224,)|var|int64
const_10735 = relay.const(-2, dtype = "uint32")#candidate|10735|()|const|uint32
call_10733 = relay.TupleGetItem(func_1485_call(relay.reshape(var_10734.astype('int64'), [7, 4, 8]), relay.reshape(var_10734.astype('int64'), [7, 4, 8]), relay.reshape(const_10735.astype('uint32'), []), ), 2)
call_10736 = relay.TupleGetItem(func_1490_call(relay.reshape(var_10734.astype('int64'), [7, 4, 8]), relay.reshape(var_10734.astype('int64'), [7, 4, 8]), relay.reshape(const_10735.astype('uint32'), []), ), 2)
output = relay.Tuple([call_10692,bop_10727,call_10733,var_10734,const_10735,])
output2 = relay.Tuple([call_10693,bop_10730,call_10736,var_10734,const_10735,])
func_10738 = relay.Function([var_10734,], output)
mod['func_10738'] = func_10738
mod = relay.transform.InferType()(mod)
mutated_mod['func_10738'] = func_10738
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10739 = relay.var("var_10739", dtype = "int64", shape = (224,))#candidate|10739|(224,)|var|int64
func_10738_call = mutated_mod.get_global_var('func_10738')
call_10740 = func_10738_call(var_10739)
output = call_10740
func_10741 = relay.Function([var_10739], output)
mutated_mod['func_10741'] = func_10741
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9577_call = mod.get_global_var('func_9577')
func_9579_call = mutated_mod.get_global_var('func_9579')
call_10873 = relay.TupleGetItem(func_9577_call(), 0)
call_10874 = relay.TupleGetItem(func_9579_call(), 0)
output = relay.Tuple([call_10873,])
output2 = relay.Tuple([call_10874,])
func_10876 = relay.Function([], output)
mod['func_10876'] = func_10876
mod = relay.transform.InferType()(mod)
mutated_mod['func_10876'] = func_10876
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10876_call = mutated_mod.get_global_var('func_10876')
call_10877 = func_10876_call()
output = call_10877
func_10878 = relay.Function([], output)
mutated_mod['func_10878'] = func_10878
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8028_call = mod.get_global_var('func_8028')
func_8030_call = mutated_mod.get_global_var('func_8030')
call_10914 = func_8028_call()
call_10915 = func_8028_call()
func_4270_call = mod.get_global_var('func_4270')
func_4273_call = mutated_mod.get_global_var('func_4273')
const_10917 = relay.const([False,True,True,False,True,False,False,False,True,True,True,True,True,True,True,False,False,False,True,False,True,True,True,False,True,False,True,False,False,True,False,False,False,False,False,True,False,True,False,True,False,True,False,True,False,True,True,False,True,False,False,False,True,False,False,True,False,True,True,False,True,True,False,True,True,True,True,True,False,True,False,False,False,False,True,False,True,True,False,False,True,False,False,True,False,True,False,False,False,True,False,True,False,True,True,False,False,False,True,False,True,False,False,True,False,True,True,False,False,True,False,False,True,True,True,False,False,True,False,False,False,True,False,False,False,True,False,False,True,False,False,False,False,False,True,False,True,False,False,False,True,True,False,False,False,True,False,False,False,True,False,False,False,False,False,False,True,True,False,False,True,False,False,True,False,True,True,True,True,False,True,False,True,True,True,True,False,True,True,False,False,True,False,False,False,True,False,True,False,False,False,True,False,False,False,False,False,True,False,True,True,True,False,False,True,True,True,True,False,False,False,True,False,False,True,False,True,False,True,True,False,True,False,True,False,False,True,False,False,True,True,True,True,True,False,False,False,True,True,True,False,True,False,False,False,True,False,True,True,True,True,False,True,True,True,True,False,False,True,False,False,False,True,True,False,True,True,False,True,False,True,True,False,True,True,False,True,True,True,False,False,False,False,True,False,True,False,False,False,True,False,False,False,True,True,False,True,False,False,False,False,False,True,False,True,False,False,False,True,False,True,True,False,True,True,False,True,True,False,True,True,False,True,True,False,False,True,True,False,True,True,False,True,False,True,True,False,True,True,True,True,False,False,False,False,True,False,True,True,True,False,False,True,True,True,True,True,False,False,True,True,True,True,True,True,False,False,True,False,True,False,True,False,True,True,False,False,False,True,True,True,True,True,False,False,False,False,True,False,False,False,False,False,True,True,True,False,True,True,False,False,True,True,False,False,True,False,True,True,True,False,False,False,False,False,False,False,False,True,True,True,True,True,True,True,False,False,True,True,True,True,True,True,False,False,True,True,False,False,False,False,True,False,False,True,True,True,True,True,False,False,False,False,True,True,True,True,False,False,False,True,True,False,False,True,False,False,True,False,False,True,False,True,False,True,False,True,False,False,False,False,False,True,False,False,False,True,True,False,True,False,False,False,False,False,False,False,False,True,False,True,False,True,False,False,False,True,True,False,True,False,False,True,True,True,True,True,False,True,False,False,True,False,False,True,False,False,True,True,True,True,False,False,False,False,False,False,True,False,False,False,False,True,False,True,False], dtype = "bool")#candidate|10917|(546,)|const|bool
call_10916 = relay.TupleGetItem(func_4270_call(relay.reshape(const_10917.astype('bool'), [7, 13, 6]), relay.reshape(const_10917.astype('bool'), [7, 13, 6]), ), 0)
call_10918 = relay.TupleGetItem(func_4273_call(relay.reshape(const_10917.astype('bool'), [7, 13, 6]), relay.reshape(const_10917.astype('bool'), [7, 13, 6]), ), 0)
func_8742_call = mod.get_global_var('func_8742')
func_8746_call = mutated_mod.get_global_var('func_8746')
var_10922 = relay.var("var_10922", dtype = "float32", shape = (9, 150))#candidate|10922|(9, 150)|var|float32
const_10923 = relay.const([4,-6,-9,5,6,-7,10,-5,-3,5,4,3,2,-10,-1,-1,-4,-7,7,10,6,6,5,5,4,2,-9,5,-2,-4,-7,-7,-1,6,6,1,5,-10,-9,-8,4,-10,4,-6,4,1,-4,-4,1,-3,8,-9,-9,3,3,-10,-3,1,8,6,-5,3,3,4,-9,-3,9,2,-2,-8,8,3,8,1,-1,-6,-3,-6,8,2,-7,4,10,7,-3,-8,-1,-6,-5,5,-3,-2,1,5,-10,-7,-6,6,-9,8,6,-6,-7,7,9,-9,4,1,1,-5,6,9,-4,-8,8,6,-1,2,-5,1,-1,-6,-4,-2,-2,-8,-10,-10,2,9,3,-5,-10,-2,5,8,-4,3,-1,2,6,4,7,-2,2,-10,-9,-9,1,5,-7,-2,-5,-8,1,-10,2,-3,-7,-9,-8,-4,-3,5,4,-9,-1,1,-5,-2,1,-5,5,-1,3,-1,-10,-8,-6,8,-5,1,6,-3,1,1,-9,-6,-2,-9,8,8,3,-10,8,-10,-2,8,3,3,9,7,-8,-6,-1,-9,-3,4,10,-8,3,-3,9,7,5,5,1,3,8,-4,-2,-5,-8,4,6,-8,10,-3,5,8,-9,-3,8,2,5,2,-6,6,-9,-4,4,1,5,10,6,-7,4,5,-8,-7,-2,-2,-9,4,1,-10,-2,-9,-7,-7,1,-5,-6,7,7,6,-7,10,9,2,4,4,-5,2,-4,-4,-5,-9,1,-4,2,-8,10,-4,1,-8,-10,-10,-7,-6,5,5,-10,10,10,10,6,2,-7,5,-2,5,-7,-6,9,-5,-1,4,-5,-3,-10,9,-4,-2,-7,8,-9,-1,8,-1,9,-5,6,-4,-6,8,-1,-4,9,-5,-2,-8,-8,9,8,6,6,10,1,-5,-10,-4,1,7,3,-8,6,8,-7,-9,5,-2,5,4,-5,-2,3,7,4,-6,9,4,8,-9,-8,-1,4,-5,5,-6,10,7,-5,-7,-2,8,7,-7,5,-1,4,8,-5,-8,4,-3,5,-8,-6,-3,-10,-10], dtype = "uint64")#candidate|10923|(392,)|const|uint64
call_10921 = relay.TupleGetItem(func_8742_call(relay.reshape(var_10922.astype('float32'), [1350,]), relay.reshape(const_10923.astype('uint64'), [392,]), ), 2)
call_10924 = relay.TupleGetItem(func_8746_call(relay.reshape(var_10922.astype('float32'), [1350,]), relay.reshape(const_10923.astype('uint64'), [392,]), ), 2)
output = relay.Tuple([call_10914,call_10916,const_10917,call_10921,var_10922,const_10923,])
output2 = relay.Tuple([call_10915,call_10918,const_10917,call_10924,var_10922,const_10923,])
func_10940 = relay.Function([var_10922,], output)
mod['func_10940'] = func_10940
mod = relay.transform.InferType()(mod)
var_10941 = relay.var("var_10941", dtype = "float32", shape = (9, 150))#candidate|10941|(9, 150)|var|float32
output = func_10940(var_10941)
func_10942 = relay.Function([var_10941], output)
mutated_mod['func_10942'] = func_10942
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9577_call = mod.get_global_var('func_9577')
func_9579_call = mutated_mod.get_global_var('func_9579')
call_10970 = relay.TupleGetItem(func_9577_call(), 0)
call_10971 = relay.TupleGetItem(func_9579_call(), 0)
output = call_10970
output2 = call_10971
func_10994 = relay.Function([], output)
mod['func_10994'] = func_10994
mod = relay.transform.InferType()(mod)
output = func_10994()
func_10995 = relay.Function([], output)
mutated_mod['func_10995'] = func_10995
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7915_call = mod.get_global_var('func_7915')
func_7917_call = mutated_mod.get_global_var('func_7917')
call_11059 = func_7915_call()
call_11060 = func_7915_call()
func_8548_call = mod.get_global_var('func_8548')
func_8550_call = mutated_mod.get_global_var('func_8550')
const_11109 = relay.const([-4.390824,2.492927,6.022611,-4.729479,-3.162720,3.593542,-0.408633,-9.191028,1.691880,9.555337,-8.135411,-2.534006,-3.356157,-7.709224,-0.925571,-4.927611,-4.107151,8.162023,-2.354429,5.750019,2.639777,-5.702195,0.050460,-2.930592,9.546886,-0.536338,-7.687590,-8.104196,8.480719,0.326957,-4.695702,-3.085183,3.849207,-1.582769,-2.183725,-0.691144,-2.192380,1.934941,8.230805,6.480919,4.523393,9.792749,-3.728826,-1.613522,-5.858241,5.091828,0.857295,7.749362,7.081482,-2.391281,8.252698,1.394655,-6.127097,-8.536064,-7.199986,-9.395043,1.215393,-0.552881,2.368160,-3.417402,-1.717935,4.219750,4.368617,-3.361378,-4.945618,-6.959077,0.499264,-7.256181,0.771675,7.215547,-3.227738,0.226444,8.827937,3.943009,8.797734,4.241763,4.138282,6.544914,4.033772,-0.379478,3.893743,-3.445746,-8.180654,-5.978086,5.779514,-0.692291,3.535900,8.473207,5.404474,5.440787,-6.066960,-2.518847,5.827238,9.035825,7.502973,8.129297,-3.535120,6.871237,-2.548253,-0.506863,8.025517,8.006785,9.482183,-0.766171,5.809390,9.321288,-6.988328,9.188747,9.426662,-2.021689,-5.953351,6.876679,4.620683,-8.157093,-8.271949,0.277723,7.912418,-1.495573,-0.386071,5.371323,0.851276,5.642506,-3.317622,9.878894,2.740713,-7.830983,1.573059,4.374942,-1.965886,-8.113712,-7.665264,-6.299709,-0.541405,-0.871047,0.057545,-5.163352,-5.848668,-7.089427,4.286206,3.527737,-9.286881,-7.342494,4.486775,-5.755507,4.194118,8.975912,3.531789,0.729515,-0.495828,-2.800168,3.799280,-8.373363,-9.505612,-1.820511,9.484097,3.685353,0.820053,5.120226,4.626967,-8.525601,0.380514,-3.054986,-9.341579,-3.148630,-3.671637,-8.249953,-4.910614,7.260426,-1.680885,-7.379135,6.644542,7.070120,1.201602,-8.091987,-4.561402,-7.204662,-2.349661,-7.057802,-1.168332,1.647201,1.053736,4.390237,3.819642,2.768806,-1.930251,9.205247,0.896087,5.531183,4.384644,3.119200,-4.908954,6.076301,-7.394349,0.541565,4.764136,4.111857,5.376632,-1.016321,-8.839908,-3.359513,9.021580,-0.568851,-9.014092,2.029300,1.736431,7.272969,-6.276381,-6.172917,3.272697,-8.338668,5.459379,7.928108,-2.398503,8.733515,3.767044,5.743043,3.888659,2.234569,7.500815,0.171717,1.979914,4.449905,-5.292788,1.530164,4.916414,-2.041027,8.313758,5.437357,7.076151,-8.278683,-5.069601,2.695559,-8.985804,1.516225,2.614465,-0.224543,-0.086967,0.657242,-0.620479,-4.228443,-2.478920,-8.005024,-6.334901,1.629539,-2.952139,9.260912,0.708107,-4.239561,8.858003,-6.965434,-2.600703,-3.104232,-9.109083,3.790622,-6.970067,-5.338019,-9.566808,-8.522953,5.178793,-8.039968,-5.272810,-1.409443,-8.965939,7.640851,3.033636,6.278682,-5.942769,-5.415257,2.737859,3.548574], dtype = "float32")#candidate|11109|(270,)|const|float32
call_11108 = relay.TupleGetItem(func_8548_call(relay.reshape(const_11109.astype('float32'), [270,])), 0)
call_11110 = relay.TupleGetItem(func_8550_call(relay.reshape(const_11109.astype('float32'), [270,])), 0)
output = relay.Tuple([call_11059,call_11108,const_11109,])
output2 = relay.Tuple([call_11060,call_11110,const_11109,])
func_11129 = relay.Function([], output)
mod['func_11129'] = func_11129
mod = relay.transform.InferType()(mod)
mutated_mod['func_11129'] = func_11129
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11129_call = mutated_mod.get_global_var('func_11129')
call_11130 = func_11129_call()
output = call_11130
func_11131 = relay.Function([], output)
mutated_mod['func_11131'] = func_11131
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9447_call = mod.get_global_var('func_9447')
func_9449_call = mutated_mod.get_global_var('func_9449')
call_11175 = func_9447_call()
call_11176 = func_9447_call()
func_1485_call = mod.get_global_var('func_1485')
func_1490_call = mutated_mod.get_global_var('func_1490')
var_11178 = relay.var("var_11178", dtype = "int64", shape = (224,))#candidate|11178|(224,)|var|int64
var_11179 = relay.var("var_11179", dtype = "uint32", shape = ())#candidate|11179|()|var|uint32
call_11177 = relay.TupleGetItem(func_1485_call(relay.reshape(var_11178.astype('int64'), [7, 4, 8]), relay.reshape(var_11178.astype('int64'), [7, 4, 8]), relay.reshape(var_11179.astype('uint32'), []), ), 4)
call_11180 = relay.TupleGetItem(func_1490_call(relay.reshape(var_11178.astype('int64'), [7, 4, 8]), relay.reshape(var_11178.astype('int64'), [7, 4, 8]), relay.reshape(var_11179.astype('uint32'), []), ), 4)
bop_11188 = relay.power(call_11175.astype('float32'), var_11179.astype('float32')) # shape=(8, 16, 8)
bop_11191 = relay.power(call_11176.astype('float32'), var_11179.astype('float32')) # shape=(8, 16, 8)
output = relay.Tuple([call_11177,var_11178,bop_11188,])
output2 = relay.Tuple([call_11180,var_11178,bop_11191,])
func_11199 = relay.Function([var_11178,var_11179,], output)
mod['func_11199'] = func_11199
mod = relay.transform.InferType()(mod)
mutated_mod['func_11199'] = func_11199
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11199_call = mutated_mod.get_global_var('func_11199')
var_11201 = relay.var("var_11201", dtype = "int64", shape = (224,))#candidate|11201|(224,)|var|int64
var_11202 = relay.var("var_11202", dtype = "uint32", shape = ())#candidate|11202|()|var|uint32
call_11200 = func_11199_call(var_11201,var_11202,)
output = call_11200
func_11203 = relay.Function([var_11201,var_11202,], output)
mutated_mod['func_11203'] = func_11203
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8501_call = mod.get_global_var('func_8501')
func_8503_call = mutated_mod.get_global_var('func_8503')
call_11244 = relay.TupleGetItem(func_8501_call(), 0)
call_11245 = relay.TupleGetItem(func_8503_call(), 0)
func_7412_call = mod.get_global_var('func_7412')
func_7414_call = mutated_mod.get_global_var('func_7414')
var_11260 = relay.var("var_11260", dtype = "float64", shape = (65, 9))#candidate|11260|(65, 9)|var|float64
call_11259 = func_7412_call(relay.reshape(var_11260.astype('float64'), [9, 5, 13]))
call_11261 = func_7412_call(relay.reshape(var_11260.astype('float64'), [9, 5, 13]))
output = relay.Tuple([call_11244,call_11259,var_11260,])
output2 = relay.Tuple([call_11245,call_11261,var_11260,])
func_11268 = relay.Function([var_11260,], output)
mod['func_11268'] = func_11268
mod = relay.transform.InferType()(mod)
mutated_mod['func_11268'] = func_11268
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11269 = relay.var("var_11269", dtype = "float64", shape = (65, 9))#candidate|11269|(65, 9)|var|float64
func_11268_call = mutated_mod.get_global_var('func_11268')
call_11270 = func_11268_call(var_11269)
output = call_11270
func_11271 = relay.Function([var_11269], output)
mutated_mod['func_11271'] = func_11271
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8606_call = mod.get_global_var('func_8606')
func_8608_call = mutated_mod.get_global_var('func_8608')
call_11280 = relay.TupleGetItem(func_8606_call(), 0)
call_11281 = relay.TupleGetItem(func_8608_call(), 0)
func_9352_call = mod.get_global_var('func_9352')
func_9355_call = mutated_mod.get_global_var('func_9355')
const_11297 = relay.const(-8, dtype = "uint32")#candidate|11297|()|const|uint32
const_11298 = relay.const([True,False,False,False,False,True,True,False,True,True,True,True,True,True,True,True,False,True,False,True,True,True,False,True,False,False,True,True,True,False,False,False,False,False,False,False,False,False,False,True,True,False,False,False,True,True,True,True,False,False,True,False,True,True,True,True,True,True,True,False,True,True,True,True,True,True,False,True,True,False,False,True,False,False,True,True,True,True,True,False,True,False,False,False], dtype = "bool")#candidate|11298|(84,)|const|bool
call_11296 = relay.TupleGetItem(func_9352_call(relay.reshape(const_11297.astype('uint32'), []), relay.reshape(const_11298.astype('bool'), [3, 4, 7]), ), 1)
call_11299 = relay.TupleGetItem(func_9355_call(relay.reshape(const_11297.astype('uint32'), []), relay.reshape(const_11298.astype('bool'), [3, 4, 7]), ), 1)
func_4427_call = mod.get_global_var('func_4427')
func_4431_call = mutated_mod.get_global_var('func_4431')
const_11305 = relay.const([9.771565,-7.468853,-5.862154,-9.515058,4.157163,-5.616669,7.202244,5.093389], dtype = "float64")#candidate|11305|(8,)|const|float64
const_11306 = relay.const([-5,-6,9,-5,-8,-9,-7,3,-3,-5,-8,3,-3,9,5,-7,-6,-1,7,-4,-9,7,3,9,8,5,7,3,9,1,-5,6,-3,6,3,6,-3,9,-5,-4,-2,-9,8,-8,6,-1,-8,-2,-4,-3,-10,-8,-2,-9,-5,9,1,-6,-10,6,-4,8,-7,-4,-1,-7,-4,4,-4,-2,-7,8,-9,-8,9,-6,2,6,4,-10,5,-6,4,6,4,-7,-10,-8,9,9,-10,2,9,-3,10,-10,3,-5,-7,-5,2,3,-8,3,6,7,7,2,-1,-8,8,-5,5,8,-4,6,-6,6,-9,3,-10,-3,-2,-10,-8,4,-8,7,-1,-9,9,-1,-2,10,7,-7,4,2,3,-10,4,-6,-5,8,-9,10,-2,-4,-9,4,-6,1,-10,-7,-8,-1,9,7,-4,9,-1,3,2,-8,10,7,4,7,4,5,8,-4,-7,2,-5,-5,4,10,5,-8,-1,-10,-4,8,-10,-10,1,7,5,9,2,6,2,-1,7,2,4,-2,-1,-8,3,9,-2,-2,-6,6,-5,-2,-2,5,-4,-7,1,9,-2,-10,5,-1,-6,1,-7,7,-1,10,4,3,4,-8,-1,-4,-4,-10,-6,3,7,1,4,6,1,-9,3,2,-5,-10,-7,-1,-1,-9,5,6,-7,6,8,-7,9,-1,1,10,6,-2,6,-4,-4,5,-5,1,-9,3,10,6,9,4,3,-6,5,1,-1,2,6,-5,8,4,5,-7,-9,-6,10,-8,3,-1,-4,-2,7,-10,-1,5,3,7,7,4,-4,-6,-10,7,-10,4,3,9,-1,-5,6,-2,-9,10,4,2,4,-4,4,-2,10,-8,-5,2,-6,10,7,2,2,2,5,6,3,8,1,-2,7,3,7,-7,2,-8,9,5,-1,9,-2,-9,-3,2,6,-5,6,-2,5,7,-7,8,-4,-9,-1,-2,1,8,8,-10,-6,7,4,4,-1,9,-7,-5,-4,-7,-3,8,2,-10,5,-7,4,2,7,9,8,-7,-7,-5,9,5,-1,-7,-8,5,6,6,-8,-10,-4,-3,7,7,-4,-6,-4,-4,6,10,-8,-9,9,-6,6,1,5,4,8,7,-4,5,-5,-3,-2,-7,7,7,-3,-2,9,1,-1,-5,6,1,8,-10,-4,-6,-5,9,8,8,8,-2,-7,-10], dtype = "uint64")#candidate|11306|(448,)|const|uint64
call_11304 = relay.TupleGetItem(func_4427_call(relay.reshape(const_11305.astype('float64'), [2, 1, 4]), relay.reshape(const_11297.astype('uint64'), []), relay.reshape(const_11306.astype('uint64'), [448,]), ), 2)
call_11307 = relay.TupleGetItem(func_4431_call(relay.reshape(const_11305.astype('float64'), [2, 1, 4]), relay.reshape(const_11297.astype('uint64'), []), relay.reshape(const_11306.astype('uint64'), [448,]), ), 2)
output = relay.Tuple([call_11280,call_11296,const_11297,const_11298,call_11304,const_11305,const_11306,])
output2 = relay.Tuple([call_11281,call_11299,const_11297,const_11298,call_11307,const_11305,const_11306,])
func_11330 = relay.Function([], output)
mod['func_11330'] = func_11330
mod = relay.transform.InferType()(mod)
mutated_mod['func_11330'] = func_11330
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11330_call = mutated_mod.get_global_var('func_11330')
call_11331 = func_11330_call()
output = call_11331
func_11332 = relay.Function([], output)
mutated_mod['func_11332'] = func_11332
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9795_call = mod.get_global_var('func_9795')
func_9796_call = mutated_mod.get_global_var('func_9796')
call_11431 = func_9795_call()
call_11432 = func_9795_call()
uop_11435 = relay.log2(call_11431.astype('float64')) # shape=(8, 16, 8)
uop_11437 = relay.log2(call_11432.astype('float64')) # shape=(8, 16, 8)
output = relay.Tuple([uop_11435,])
output2 = relay.Tuple([uop_11437,])
func_11440 = relay.Function([], output)
mod['func_11440'] = func_11440
mod = relay.transform.InferType()(mod)
output = func_11440()
func_11441 = relay.Function([], output)
mutated_mod['func_11441'] = func_11441
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11487 = relay.var("var_11487", dtype = "float32", shape = (15, 3, 11))#candidate|11487|(15, 3, 11)|var|float32
uop_11488 = relay.atan(var_11487.astype('float32')) # shape=(15, 3, 11)
output = uop_11488
output2 = uop_11488
func_11501 = relay.Function([var_11487,], output)
mod['func_11501'] = func_11501
mod = relay.transform.InferType()(mod)
var_11502 = relay.var("var_11502", dtype = "float32", shape = (15, 3, 11))#candidate|11502|(15, 3, 11)|var|float32
output = func_11501(var_11502)
func_11503 = relay.Function([var_11502], output)
mutated_mod['func_11503'] = func_11503
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8889_call = mod.get_global_var('func_8889')
func_8891_call = mutated_mod.get_global_var('func_8891')
call_11510 = relay.TupleGetItem(func_8889_call(), 0)
call_11511 = relay.TupleGetItem(func_8891_call(), 0)
output = relay.Tuple([call_11510,])
output2 = relay.Tuple([call_11511,])
func_11520 = relay.Function([], output)
mod['func_11520'] = func_11520
mod = relay.transform.InferType()(mod)
output = func_11520()
func_11521 = relay.Function([], output)
mutated_mod['func_11521'] = func_11521
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9254_call = mod.get_global_var('func_9254')
func_9256_call = mutated_mod.get_global_var('func_9256')
call_11525 = func_9254_call()
call_11526 = func_9254_call()
output = call_11525
output2 = call_11526
func_11546 = relay.Function([], output)
mod['func_11546'] = func_11546
mod = relay.transform.InferType()(mod)
mutated_mod['func_11546'] = func_11546
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11546_call = mutated_mod.get_global_var('func_11546')
call_11547 = func_11546_call()
output = call_11547
func_11548 = relay.Function([], output)
mutated_mod['func_11548'] = func_11548
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9399_call = mod.get_global_var('func_9399')
func_9401_call = mutated_mod.get_global_var('func_9401')
call_11558 = func_9399_call()
call_11559 = func_9399_call()
func_9380_call = mod.get_global_var('func_9380')
func_9382_call = mutated_mod.get_global_var('func_9382')
call_11560 = func_9380_call()
call_11561 = func_9380_call()
output = relay.Tuple([call_11558,call_11560,])
output2 = relay.Tuple([call_11559,call_11561,])
func_11564 = relay.Function([], output)
mod['func_11564'] = func_11564
mod = relay.transform.InferType()(mod)
mutated_mod['func_11564'] = func_11564
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11564_call = mutated_mod.get_global_var('func_11564')
call_11565 = func_11564_call()
output = call_11565
func_11566 = relay.Function([], output)
mutated_mod['func_11566'] = func_11566
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7714_call = mod.get_global_var('func_7714')
func_7715_call = mutated_mod.get_global_var('func_7715')
call_11575 = relay.TupleGetItem(func_7714_call(), 0)
call_11576 = relay.TupleGetItem(func_7715_call(), 0)
func_9983_call = mod.get_global_var('func_9983')
func_9985_call = mutated_mod.get_global_var('func_9985')
call_11577 = func_9983_call()
call_11578 = func_9983_call()
output = relay.Tuple([call_11575,call_11577,])
output2 = relay.Tuple([call_11576,call_11578,])
func_11583 = relay.Function([], output)
mod['func_11583'] = func_11583
mod = relay.transform.InferType()(mod)
output = func_11583()
func_11584 = relay.Function([], output)
mutated_mod['func_11584'] = func_11584
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11607 = relay.var("var_11607", dtype = "float32", shape = (16, 1, 1))#candidate|11607|(16, 1, 1)|var|float32
uop_11608 = relay.cosh(var_11607.astype('float32')) # shape=(16, 1, 1)
bop_11616 = relay.logical_xor(uop_11608.astype('uint16'), relay.reshape(var_11607.astype('uint16'), relay.shape_of(uop_11608))) # shape=(16, 1, 1)
func_11583_call = mod.get_global_var('func_11583')
func_11584_call = mutated_mod.get_global_var('func_11584')
call_11621 = relay.TupleGetItem(func_11583_call(), 0)
call_11622 = relay.TupleGetItem(func_11584_call(), 0)
uop_11631 = relay.erf(bop_11616.astype('float32')) # shape=(16, 1, 1)
bop_11637 = relay.mod(uop_11631.astype('float32'), relay.reshape(var_11607.astype('float32'), relay.shape_of(uop_11631))) # shape=(16, 1, 1)
bop_11640 = relay.greater(uop_11608.astype('bool'), relay.reshape(uop_11631.astype('bool'), relay.shape_of(uop_11608))) # shape=(16, 1, 1)
output = relay.Tuple([call_11621,bop_11637,bop_11640,])
output2 = relay.Tuple([call_11622,bop_11637,bop_11640,])
func_11644 = relay.Function([var_11607,], output)
mod['func_11644'] = func_11644
mod = relay.transform.InferType()(mod)
var_11645 = relay.var("var_11645", dtype = "float32", shape = (16, 1, 1))#candidate|11645|(16, 1, 1)|var|float32
output = func_11644(var_11645)
func_11646 = relay.Function([var_11645], output)
mutated_mod['func_11646'] = func_11646
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9013_call = mod.get_global_var('func_9013')
func_9014_call = mutated_mod.get_global_var('func_9014')
call_11695 = func_9013_call()
call_11696 = func_9013_call()
func_8028_call = mod.get_global_var('func_8028')
func_8030_call = mutated_mod.get_global_var('func_8030')
call_11711 = func_8028_call()
call_11712 = func_8028_call()
func_9744_call = mod.get_global_var('func_9744')
func_9745_call = mutated_mod.get_global_var('func_9745')
call_11732 = relay.TupleGetItem(func_9744_call(), 2)
call_11733 = relay.TupleGetItem(func_9745_call(), 2)
output = relay.Tuple([call_11695,call_11711,call_11732,])
output2 = relay.Tuple([call_11696,call_11712,call_11733,])
func_11744 = relay.Function([], output)
mod['func_11744'] = func_11744
mod = relay.transform.InferType()(mod)
mutated_mod['func_11744'] = func_11744
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11744_call = mutated_mod.get_global_var('func_11744')
call_11745 = func_11744_call()
output = call_11745
func_11746 = relay.Function([], output)
mutated_mod['func_11746'] = func_11746
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9795_call = mod.get_global_var('func_9795')
func_9796_call = mutated_mod.get_global_var('func_9796')
call_11749 = func_9795_call()
call_11750 = func_9795_call()
var_11753 = relay.var("var_11753", dtype = "float64", shape = (8, 16, 8))#candidate|11753|(8, 16, 8)|var|float64
bop_11754 = relay.add(call_11749.astype('uint16'), relay.reshape(var_11753.astype('uint16'), relay.shape_of(call_11749))) # shape=(8, 16, 8)
bop_11757 = relay.add(call_11750.astype('uint16'), relay.reshape(var_11753.astype('uint16'), relay.shape_of(call_11750))) # shape=(8, 16, 8)
func_8889_call = mod.get_global_var('func_8889')
func_8891_call = mutated_mod.get_global_var('func_8891')
call_11765 = relay.TupleGetItem(func_8889_call(), 2)
call_11766 = relay.TupleGetItem(func_8891_call(), 2)
func_11440_call = mod.get_global_var('func_11440')
func_11441_call = mutated_mod.get_global_var('func_11441')
call_11773 = relay.TupleGetItem(func_11440_call(), 0)
call_11774 = relay.TupleGetItem(func_11441_call(), 0)
func_9399_call = mod.get_global_var('func_9399')
func_9401_call = mutated_mod.get_global_var('func_9401')
call_11776 = func_9399_call()
call_11777 = func_9399_call()
func_7412_call = mod.get_global_var('func_7412')
func_7414_call = mutated_mod.get_global_var('func_7414')
var_11789 = relay.var("var_11789", dtype = "float64", shape = (585,))#candidate|11789|(585,)|var|float64
call_11788 = func_7412_call(relay.reshape(var_11789.astype('float64'), [9, 5, 13]))
call_11790 = func_7412_call(relay.reshape(var_11789.astype('float64'), [9, 5, 13]))
output = relay.Tuple([bop_11754,call_11765,call_11773,call_11776,call_11788,var_11789,])
output2 = relay.Tuple([bop_11757,call_11766,call_11774,call_11777,call_11790,var_11789,])
func_11792 = relay.Function([var_11753,var_11789,], output)
mod['func_11792'] = func_11792
mod = relay.transform.InferType()(mod)
mutated_mod['func_11792'] = func_11792
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11792_call = mutated_mod.get_global_var('func_11792')
var_11794 = relay.var("var_11794", dtype = "float64", shape = (8, 16, 8))#candidate|11794|(8, 16, 8)|var|float64
var_11795 = relay.var("var_11795", dtype = "float64", shape = (585,))#candidate|11795|(585,)|var|float64
call_11793 = func_11792_call(var_11794,var_11795,)
output = call_11793
func_11796 = relay.Function([var_11794,var_11795,], output)
mutated_mod['func_11796'] = func_11796
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11744_call = mod.get_global_var('func_11744')
func_11746_call = mutated_mod.get_global_var('func_11746')
call_11801 = relay.TupleGetItem(func_11744_call(), 1)
call_11802 = relay.TupleGetItem(func_11746_call(), 1)
output = relay.Tuple([call_11801,])
output2 = relay.Tuple([call_11802,])
func_11818 = relay.Function([], output)
mod['func_11818'] = func_11818
mod = relay.transform.InferType()(mod)
output = func_11818()
func_11819 = relay.Function([], output)
mutated_mod['func_11819'] = func_11819
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9830_call = mod.get_global_var('func_9830')
func_9832_call = mutated_mod.get_global_var('func_9832')
call_11865 = func_9830_call()
call_11866 = func_9830_call()
func_6512_call = mod.get_global_var('func_6512')
func_6515_call = mutated_mod.get_global_var('func_6515')
const_11913 = relay.const([-7.746070,1.564342,-0.943076,-2.393949,-6.240405,-8.539845,5.965901,-8.589170,8.362832,7.802680,-2.520261,9.902516,-8.601716,5.485776,8.180408,9.048320,-7.370036,-4.434305,-7.108782,-9.884395,-4.975377,8.165881,0.191375,-3.125148,-5.897205,-9.792493,-1.689270,-7.161544,-3.113385,-8.429784,-5.370611,6.123600,-1.748523,4.368583,-9.199426,9.824168,-1.881205,-0.669173,-1.671340,-8.279926,-4.966574,-0.104585,-6.077156,1.082103,-2.939863,-7.647784,-9.823286,0.223912,-3.076356,1.941859,-4.017310,2.481059,6.223547,7.842064,-3.081510,-8.784287,-0.640071,4.778817,9.901808,5.612606,5.007193,6.930405,0.417705,-5.223971,1.810507,-8.180298,3.895739,7.729965,-8.116390,-3.670495,-4.021065,4.398296,9.487043,-3.606073,-6.206013,-3.602901,1.945951,2.497129,-4.217116,-3.254436,5.310568,-0.506666,-0.480550,1.635220,-2.467790,-1.052255,-7.608869,7.629908,-1.033567,-5.910756,4.240628,-3.656389,-5.843132,5.293387,-5.176734,3.924465,-0.726245,-1.584378,0.966134,0.857615,1.236171,-6.172338,-3.955315,-9.619952,5.502568,8.925157,0.068521,-5.283303,4.311122,1.209686,6.363725,5.456500,-9.022225,8.530091,1.349610,0.864954,-1.170896,-3.995735,0.742499,3.445000,0.554576,1.006879,4.683168,9.591965,2.308437,-7.285398,5.322714,-0.044754,5.118726,2.271837,3.298686,9.107760,-6.073159,-1.550189,-2.633548,8.855891,-1.495088,0.649117,-6.020667,-9.860621,6.207570,-3.520638,-5.864981,-3.964581,-6.034371,-8.346283,-2.594296,8.211810,7.607691,-0.333661,-7.953607,5.894837,-8.349626,-2.508863,1.408240,-8.744047,5.089809,8.468225,6.206003,7.110181,7.878958,7.292135,0.146943,5.890483,-6.943745,4.595174,2.386689,1.392702,3.755051,-5.629224,-7.948664,5.445898,0.684844,5.431317,-2.269981,3.994247,-9.094242,6.714095,0.364877,-3.040975,-1.706600,-9.461006,0.792367,0.332569,7.642377,7.140069,-8.379812,3.488277,-0.684955,-8.933406,8.852784,-9.084838,6.076547,-2.493604,-1.702674,-0.570943,-4.191412,-6.716680,3.021723,-8.123708,5.561295,-5.141334,-3.104116,-9.377083,8.214958,2.052645,-0.651876,-7.195576,3.245271,-5.252875,-2.531805,-7.732989,-7.195758,-5.884846,-1.147600,-2.888101,-0.883884,9.388711,9.968172,8.372909,-1.179201,4.378051,1.914060,-5.235290,-5.252373,-2.176120,-7.118424,7.388216,-2.765548,-8.180675,-7.976835,-5.491374,3.981342,3.897580,1.834804,2.009765,8.601124,-1.301539,9.579155,7.612287,-1.276215,-5.573770,-5.560476,0.646404,7.769663,8.888872,-8.884527,-5.468047,0.270187,-6.005302,0.170425,5.260401,6.185648,8.055770,-6.265739,-0.014501,-3.330049,4.082476,4.186562,3.561838,-4.246697,-1.614701,9.898688,4.987056,4.034295,2.595110,6.830222,1.801486,2.503726,4.567312,-7.682515,-0.334498,-7.247229,1.955801,-3.097180,-5.006490,-8.138911,3.891046,-0.611772,-9.936779,8.633642,-4.584434,-0.426317,8.373821,-4.508248,-9.207395,-4.145694,0.762702,-5.124445,-0.863940,-8.404976,-0.864167,-2.933103,-8.934038,-1.896819,-6.886702,-4.231416,-2.480119,-1.680798,-7.415247,3.994662,9.269427,1.853220,-3.806037,-8.784824,-9.720908,-1.438379,3.059682,9.591307,4.433375,-8.613617,4.229615,-5.744039,-9.690682,2.164605,2.062307,6.590211,-4.009277,9.203990,-1.689685,-5.833357,-5.803863,2.036970,3.710360,0.109173,-1.987687,-0.381793,1.391018,-6.005273,2.083243,-9.796757,-6.578000,-4.922785,5.812164,4.408491,8.830891,-4.891614,-0.578967,0.785720,-4.212796,-2.934157,-5.698176,-9.167860,7.480147,5.357866,-8.420812,9.499317,8.816116,-0.294398,-6.885094,9.839913,1.634018,8.979470,0.583961,2.264488,-6.677831,8.611694,-0.637817,-5.937068,-1.037689,-2.799666,8.364602,9.337744,2.810446,1.498771,6.822034,8.335534,2.619513,8.607228,5.831581,-3.592685,-6.695593,8.696715,-0.936369,6.377012,4.384669,8.859295,4.797839,-8.581600,-0.591690,-8.563790,-3.584027,-1.354729,7.855194,-0.529910,-4.593672,-6.610248,-8.258089,1.172300,3.618882,2.735002,8.740937,8.263101,3.912219,4.203629,-6.039934,-7.513657,-6.776172,-5.160091,-2.197174,-0.986219,5.576663,5.142825,-0.114041,-5.862427,8.771359,9.685307,9.310749,-8.415609,-6.557263,-8.746627,1.160881,1.103119,-2.163518,4.753508,-5.248294,7.427625,-5.697088,-6.923791,-8.248103,-9.227461,-5.077617,-6.031590,5.643668,5.874712,-6.999504,-1.651003,-3.005436,8.228494,1.291061,8.886371,2.342138,3.995190,4.546033,-5.702005,7.434287,-3.694415,-4.838558,6.568132,0.519545,9.997471,-0.349647,1.314027,7.100162,9.493191,-3.566400,7.065928,-4.583793,1.976786,-0.223553,1.301676,9.546009,4.046700,-3.520647,2.791409,7.600895,7.988040,-8.652625,-0.778005,-3.196108,-3.553652,-3.451212,-4.265345,-4.260578,8.997516,4.700384,-2.905989,-2.782930,4.455159,-0.641731,-3.656402,1.968500,-1.365481,-1.952329,-2.124654,-6.393245,7.799487,-4.241096,4.298391,-2.145788,5.428196,9.242157,-1.074649,7.560086,-7.244913,-8.815973,-9.260998,0.502433,2.987256,5.553524,-3.064053,-3.197204,5.719725,6.278073,2.698885,2.438470,3.513482,4.069501,-4.683051,1.618097,-8.065409,7.313247,-1.075832,5.116817,-3.098535,3.193027,8.317802,2.893398,-3.210916,2.185286,-7.256920,-3.552929,-9.469321,0.253975,-9.031283,5.050037,-4.885758,5.040799,2.977745,-0.474328,-5.400569,-2.542121,0.506958,-0.402209,-4.395292,7.431399,-9.397656,8.788196,5.959822,0.266200,1.314323,0.872361,3.210676,-8.931713,8.570777,-8.700129,-3.756079,4.500627,-6.409738,9.514344,-5.122851,3.019218,-2.605852,3.809085,9.134613,-3.810174,9.460389,-3.157742,-6.499303,-3.768424,9.971769,0.951066,7.336932,8.789198,-2.072601,8.617939,-4.544543,2.939836,4.556844,-5.864770,6.284124,3.396641,-8.682404,1.804128,1.839964,5.849818,7.934935,-0.173717,0.259496,-4.216598,9.203327,-4.308541,4.613615,-0.450290,-8.006500,8.756041,6.669926,2.087191,3.619953,9.344188,-9.011404,0.899367,0.466342,-1.710303,-3.224197,7.054007,-1.807297,8.085073,3.770367,-1.573110,-4.357344,-7.519898,4.316167,-0.939035,-6.374736,1.532011,-3.759964,-2.000461,-5.949223,-0.097542,-5.584350,-8.960430,-0.955577,-4.202437,-8.789215,2.174547,-1.413818,-8.309307,5.990145,-1.332987,-9.531722,-1.269668,6.468950,3.482283,-3.204890,-2.496411,9.312029,7.780421,-1.372010,8.112544,1.487104,7.518140,-2.453571,5.840345,-7.304644,-0.799074,7.806813,6.636969,9.918841,-3.518414,2.337875,-8.516859,-3.319413,-7.629693,6.296121,5.036902,-9.217198,0.271707,-3.306239,8.005480,-4.465925,-6.725680,-6.762718,-5.242522,-1.771560,6.705516,1.231737,-4.659458,-1.071108,-6.884056,-5.410327,-8.058004,3.119925,-0.604625,-3.746198,-1.637399,8.159880,-6.995847,9.046997,1.044062,2.362646,7.592415,4.164469,-9.282126,-8.540064,2.306869,-6.739836,7.489752,2.638594,-9.226037,8.974151,9.764591,5.582116,3.565145,-7.302667,-2.745581,7.054588,2.665348,5.679275,-9.611548,-0.888673,-6.696437,6.334480,-6.524587,9.399923,-0.051141,-5.096834,7.660439,6.221982,-1.936187,-5.064826,-9.088067,-6.610154,-5.898399,4.290735,4.766274,-7.484036,3.493213,7.714464,8.308222,-3.757538,-7.839647,8.657705,-1.247099,-8.989005,-7.218625,1.559231,-5.664237,-3.617655,7.300635,-8.562854,-5.110174,-7.275268,-6.984593,5.452127,4.945401,-1.873244,-1.803552,8.977983,-0.054346,4.759480,-9.367685,4.828341,-2.221123,8.175559,-8.446028,-8.968685,5.979390,-0.020058,4.972186,4.742604,5.975759,-2.212953,5.608738,-3.474941,8.767035,-4.111195,-2.866647,-7.147471,-8.410001,-4.469561,4.403049,8.971596,5.576175,8.922458,4.394423,8.868036,-3.372442,8.104186,-8.966065,7.792704,3.528390,0.771859,-0.519224,7.384645,-9.230486,8.809708,-7.808764,-1.606143,-3.768520,-6.713211,-7.646902,-6.534393,6.050954,-8.810401,6.224188,1.327019,5.449761,-8.829430,9.618659,-7.302732,4.667849,0.457798,-4.725270,7.074424,9.933119,2.623986,-5.453182,-2.045055,9.302891,4.997450,6.197619,3.038527,6.480791,-1.376463,2.284247,-6.781566,-9.188486,2.312292,8.098991,4.810094,-4.542905,-6.995982,-0.038013,0.097451,6.592904,-2.058124,5.274800,-1.907762,8.936462,8.244706,8.822958,4.382783,-8.068554,3.238969,5.373701,-5.033800,7.486537,-5.608054,-3.849083,5.564710,-8.172666,-1.641904,0.101885,6.813808,8.784817,-4.202350,-6.571167,-6.013653,-8.294567,4.991552,-4.169029,7.727834,-3.106156,6.245021,7.988117,0.022459,-3.860652,-1.884496,-7.055799,-0.603024,-1.887161,-8.129824,-8.337182,7.186099,-7.390118,-5.632108,1.353341,-9.332086,-7.411807,-2.354338,-0.568216,8.673661,8.504314,8.949229,3.523138,2.233971,-1.621994,8.402344,-5.186645,3.061205,4.301806,1.566293,8.639660,-7.294727,1.537243,-1.109946,-9.026022,-1.161116,4.055470,7.380326,6.385913,-2.824499,3.422965,-8.077902,2.211352,-4.551788,2.215601,9.678085,-8.249458,-2.536127,-0.356347,6.801100,4.709658,-7.599125,8.931975,9.252612,-3.470436,-0.634005,2.626711,1.832981,-1.986665,6.616656,1.642861,0.484446,7.599600,9.044549,-7.410318,-8.339674,-7.278119,-7.020809,7.339725,-6.144683,7.746462,8.459277,4.062600,6.678324,-9.899125,7.690696,9.749074,2.079760,7.734462,-8.577624,-5.000954,3.228083,5.078848,-5.691608,7.920324,-2.988030,-9.388802,-1.977032,-6.890792,8.346112,-2.249768,-4.450518,4.409979,-5.021363,-6.244059,-2.058318,-2.572110,2.290349,5.059719,-7.673302,-6.645884,-7.310271,-5.948939,-6.740223,-5.301935,3.251849,7.977723,8.480043,-9.011998,8.101681,-8.950314,3.236764,6.386260,6.666935,-7.357185,4.161588,-7.049909,5.645781,-7.888764,-9.028939,-8.701536,-7.498362,8.436770,-6.226312,3.353276,1.581037,-5.553043,-9.259881,2.242940,-8.714090,8.534067,0.927797,3.520670,-8.637895,-7.388848,0.338960,6.584834,-6.745263,9.873403,-2.297936,-4.607723,-0.585258,-7.034445,-3.750008,-4.134410,0.741677,9.901808,-4.955806,-3.845523,-6.528554,8.237566,3.208732,0.203334,8.375254,-5.457587,-2.191138,0.709172,5.264226,5.722448,-3.715876,1.938690,-3.434101,-3.028273,7.267795,2.244195,6.910476,7.295936,1.952906,4.650724,2.592274,-3.751653,-6.680372,1.144441,1.802299,-0.996080,-6.501065,-1.707543,-3.859579,3.272787,6.281017,5.728995,4.132976,7.691016,-9.380776,-0.625138,-5.142767,4.442713,-7.309344,9.847723,5.086366,1.165031,4.372435,-2.650014,-8.233502,3.143766,8.421496,6.471151,-1.266789,5.240033,3.977592,-0.889600,2.086044,-3.574834,-2.745843,5.546513,3.839062,-6.992187,-3.273888,-2.558543,-8.892025,-0.417013,7.596127,9.229401,-6.804034,-9.076361,-1.795078,-9.171320,-1.979148,9.079555,-8.510076,-9.266081,-7.538563,-6.525371,-2.254235,0.789741,-7.926664,-9.030991,4.137045,2.308913,-6.670948,7.238413,1.720358,-2.894777,1.075013,-1.359702,9.935184,6.933196,0.155589,-7.802899,3.244452,0.573513,-3.709164,9.312024,4.564560,8.172604,-6.287974,-4.984803,-7.504379,6.763758,-7.274435,2.730440,-0.950150,1.732523,-3.057123,8.277439,-5.416962,-0.569431,-0.739743,-2.685473,-7.101936,-9.256507,2.678260,-9.856239,1.429019,4.797360,-4.670491,4.571042,1.826611,-7.759592,9.555826,5.053285,-9.956861,-5.048008,6.601150,-4.449955,-7.038891,-5.958906,4.133681,-2.743641,-7.627362,7.619526,-1.318898,-5.031680,6.913428,-3.500653,-4.924595,-4.350231,4.526135,-2.346467,-1.998852,-0.540440,4.882866,-2.910607,-1.318939,9.874484,-0.203418,3.640520,-8.263964,-2.760526,-0.253683,-4.499599,6.074134,-0.928985,2.947860,7.171325,5.650665,-6.814525,8.222213,-1.131952,5.806679,-4.342434,-4.359742,6.925668,6.265322,-6.003882,-0.626619,1.047203,-6.123909,-1.909014,-9.764229,1.627192,4.894914,-2.157634,-7.680424,-7.768040,-0.941147,4.765932,-2.504665,6.320552,-4.297761,-7.098013,-1.394060,-1.215353,1.826468,-2.143731,8.908298,4.587025,-6.927169,4.969670,-8.232381,-1.791003,-6.383137,9.732822,-2.243704,8.405841,7.194958,3.277902,5.767901,-3.981242,-0.756314,-1.401200,-0.892214,0.793967,4.854317,3.229329,-9.415452,-0.308422,7.797067,-1.514215,3.477762,-0.911334,4.097878,-1.535499,-5.553522,3.565299,-7.649840,-8.993877,7.454313,4.759245,-9.785243,2.330670,-5.076593,5.038518,1.957145,-4.996521,3.446582,4.733088,-5.005063,6.979095,-4.066536,-7.471867,-3.311616,9.260187,-0.699840,-1.697217,6.381385,4.967156,-4.553024,8.822339,-3.156181,-5.000219,1.238562,-3.811401,3.743468,-8.835617,-2.052395,-8.010811,3.732427,8.478645,-9.473973,-6.083003,2.815907,-7.676422,-8.167388,6.166657,2.127134,2.358611,-5.015948,-2.617685,1.493223,9.739625,7.672954,1.947701,-6.870659,-4.762628,-2.521869,-2.063596,2.064756,9.361915,3.886598,-9.292599,-6.683745,8.695385,-9.603154,1.568987,-6.778285,2.418217,-2.570809,-2.075410,8.514760,-4.703504,0.001015,6.129513,8.289796,-6.570592,-2.978618,6.383263,-2.852731,2.527231,-0.311387,3.689497,6.729373,9.985744,2.710418,-2.068999,-4.663526,-8.525669,-0.695249,-8.494766,4.774204,-7.519875,-7.047667,-9.223238,-5.237661,5.266117,-2.041135,3.357597,4.193786,-4.172358,-1.301285,-9.799441,6.833560,-2.495568,-1.082954,9.187250,0.982654,8.945434,9.114239,4.998103,9.957653,-0.892121,7.474246,-0.540416,-0.844054,1.967559,0.022513,-5.106212,-7.371995,-6.798750,5.574822,-2.727634,5.935548,-3.825504,-7.109501,-8.104910,-3.254498,1.423597,-5.976424,8.639319,-8.816794,5.834532,-4.569695,-6.898338,-3.543758,1.885755,-8.783835,9.954250,-0.820912,-8.485445,4.905185,-4.544524,-3.218466,7.051104,4.445639,5.166709,8.560207,-2.376430,-0.082247,-4.712105,9.159727,6.839328,-9.310453,-0.965824,-9.956351,7.676735,8.628389,-9.148931,0.112822,8.669182,-8.261666,3.732961,0.703542,2.516386,-3.596198,3.973158,6.990744,-9.685041,9.043370,-8.740785,6.417769,7.924543,-5.176340,-1.433400,9.127582,-0.076468,3.115602,2.240090,4.959543,-9.751875,-1.960345,-4.927155,-5.630739,8.073413,1.364353,-1.309557,8.790384,3.705764,4.887305,-5.864658,9.511407,-6.970146,-1.337248,-2.009872,-2.145781,5.135304,-2.528238,-1.990424,-4.066908,-4.253558,-8.036460,3.272344,-1.159118,3.607981,-6.535114,-2.150618,-1.999006,-5.572535,-0.711505,0.997284,-9.605462,3.285253,-9.891155,5.666158,-0.560109,-3.187413,-2.323734,-3.780939,-5.727116,-8.280749,7.945443,5.364821,4.339152,-3.977917,-9.384935,-2.373592,3.945954,3.763066,-9.206114,-0.469644,-4.817903,6.506147,-8.470720,9.716713,1.573755,-9.055281,-3.547922,-3.246305,0.580997,4.427779,-4.114520,-0.140005,6.489351,0.306895,8.194053,-6.134741,-1.917045,-6.134229,-1.943123,-4.268598,-7.415798,-5.581611,-6.948549,-2.862467,-8.910240,2.032731,-9.629320,-5.035973,8.234939,4.109638,9.131939,-8.768767,9.075766,5.706485,-0.596571,4.611516,-1.573335,0.148416,-9.849331,-3.134856,4.155886,-5.149542,-0.184363,3.810754,-7.422285,-7.799044,4.705049,-4.593407,7.884557,-2.997449,1.915178,-3.374070,9.410241,-7.099863,-3.237705,-5.344722,-6.732393,0.384573,9.993305,-1.108456,2.241321,-8.207166,1.097739,7.163251,-1.655305,-9.712423,8.274025,1.038439,-6.649133,-3.090417,-2.287503,-2.053127,0.445094,3.195648,-3.654940,7.595834,-7.075790,-1.147032,-2.641753,1.371217,3.217010,-3.581513,-0.714165,-6.544621,0.529727,5.653127,8.811569,-9.163404,2.319351,-1.356493,9.444994,1.732760,4.822609,2.880708,4.401588,-1.720535,-3.824029,2.115134,-1.974210,5.809127,7.268389,0.828513,-2.818923,2.074743,-8.701137,6.271222,8.556791,1.951759,7.898592,-4.788558,6.874385,8.653765,3.276345,6.659150,-8.757253,3.715362,4.723683,4.515708,-2.590477,-4.195956,-2.924322,-4.012724,-8.627907,-4.238075,-1.687395,9.699609,1.076230,8.577747,5.496232,-2.664403,0.222597,2.713186,-3.357329,-8.974229,-1.899608,4.249342,4.634516,-0.948822,-2.635321,7.697083,-1.004424,-7.308899,1.714663,-0.025379,-7.336593,2.388025,9.591521,8.187699,0.557988,-0.386791,-9.914972,-8.167552,-6.861596,9.861680,3.413012,4.749967,0.558302,2.446860,-4.098212,-9.094713,-5.852882,-0.833366,-0.941528,3.497316,-4.818636,8.141010,-5.574768,-8.407640,0.894379,9.755741,-8.868809,-7.284304,-5.186740,-3.883682,1.435929,-7.175033,-8.194799,7.843415,-6.375686,-3.892182,4.394855,7.859368,6.360277,-9.908083,3.693628,2.735099,-9.323117,-1.277422,5.211127,4.337718,6.341069,-9.270748,6.354019,-1.162066,4.838749,-5.112588,7.173330,-6.665522,8.204665,6.925374,-5.206069,-3.187415,-5.064947,3.094021,9.255119,-5.238563,-6.155076,5.831943,3.110192,4.595131,-3.381718,3.418698,9.401090,7.469469,-5.732665,-6.621399,9.237362,1.268637,3.832498,-3.725076,-5.795817,8.199576,4.433064,-2.212022,-9.582464,8.758381,3.824510,-1.215729,-1.552362,0.820867,-8.220619,6.234723,-9.412512,6.283546,-0.782819,-0.319093,9.858124,1.673834,-8.794874,4.178676,-1.459577,-1.439982,5.007440,-5.618131,-9.675127,-3.867452,4.017652,-6.509765,-4.746490,4.646643,7.226114,7.817475,0.086422,-6.834846,-5.115489,0.931197,-6.225980,-7.266473,-1.824598,-6.571044,-0.893718,-7.724537,-9.986923,6.952988,-1.228292,1.323577,8.546167,-7.610981,-9.116864,-7.564683,-6.479647,9.273342,7.827396,-8.328832,-3.338181,-2.928870,1.010944,2.553950,-9.804867,7.589774,3.142052,-7.338886,6.081142,-2.495256,8.366465,0.833662,-0.543437,2.269258,-3.704045,8.999837,-6.688870,-2.117205,-6.448377,3.106717,-2.070565,-2.422360,-6.734650,-2.093702,1.202679,5.452338,-1.608665,6.875828,0.349427,-9.265228,-2.901789,-9.780714,-7.020424,2.324638,-7.193959,9.808025,0.541237,8.368401,-8.918900,5.288580,-7.844696,0.865400,3.826675,5.832591,9.806092,8.911369,6.260366,-7.624545,-2.912620,2.570282,-2.275599,9.018531,-8.813457,4.227311,3.526473,-7.615816,4.548410,-2.169406,-9.105720,0.913101,4.401855,-5.262530,2.305086,-3.985320,-0.633660,-8.436763,-1.064881,-9.325651,-4.390441,-3.973863,-7.093654,9.497748,-0.827097,7.873487,5.436312,-7.539481,8.326297,-8.399078,1.284397,-6.965174,-2.853520,-2.598116,-7.529558,7.077452,5.407593,-8.391115,-8.243171,5.638069,1.841115,-0.233427,-4.281994,-2.808397,9.789770,-0.286365,9.188587,-9.624356,8.849815,2.801461,1.102154,8.529632,-4.665264,-5.284763,9.806637,1.433019,-0.854152,-0.742541,-5.435456,-1.606508,1.331141,-3.095773,5.596437,-6.075148,7.806162,8.425435,-3.806593,9.970476,-5.342177,9.468186,-4.767507,9.563350,-0.962223,2.546971,-5.624353,-0.108267,-6.342534,-6.246017,8.491741,-4.040125,-4.690098,2.956417,-0.675197,3.901977,0.957708,2.514131,8.020143,-8.979097,-7.947207,-5.651353,-0.581334,-5.407379,1.629065,-2.976468,0.200941,-5.391505,-5.509194,-7.660903,-1.362513,-7.068424,-9.164394,7.290232,-0.376118,-5.815568,0.760229,4.793527,8.354735,-8.761021,-6.907608,-9.512083,-8.230742,-0.086500,-0.912616,3.584246,-5.456123,-0.950722,0.838289,2.275243,-2.340775,-2.193574,-3.864905,7.447361,8.413578,0.055226,-5.364758,6.440316,-0.406443,-8.043715,-3.727625,3.720293,2.279840,-9.582033,-0.944504,-6.753469,8.773071,-3.865667,-1.053497,0.723228,-5.005425,5.219738,-0.852322,6.652240,-7.033333,-1.212160,3.911175,-0.614999,4.940756,-9.519896,-6.060428,-0.526812,0.845978,8.724526,-7.215104,-0.451415,4.597489,-5.655830,-7.548202,-6.573893,1.687601,-7.952445,0.413897,0.395974,7.086034,-4.292300,-4.905307,3.528145,1.303465,8.610267,0.713592,-5.527660,0.923360,9.554234,-2.886420,5.664524,-7.681292,2.079856,-0.415775,-3.391961,-9.444278,7.499932,-0.311943,-4.711655,7.028695,7.943516,1.672391,-1.977974,-5.055537,7.686799,3.482346,-8.680369,-7.639311,9.520637,-6.164523,-9.413949,-7.879401,2.075460,-0.450925,1.725276,0.773096,-6.720218,-1.147374,-6.079856,-0.588709,-7.987524,-3.099028,2.855615,-9.951204,1.713993,7.220370,7.758349,9.994477,-9.245094,-1.452858,9.746093,-5.975732,7.335184,-5.446557,-2.238985,2.636837,4.212468,9.800923,-2.730063,8.041618,6.719178,6.445233,6.541929,6.798223,-0.710001,7.983991,-5.599322,7.876049,-6.137708,1.831106,7.297287,0.083362,-9.788956,8.763531,-3.849604,-9.114513,5.681759,-7.796749,-7.297189,-6.100818,-5.147110,-0.198832,-7.536806,-4.286585,-2.550896,2.677018,-4.080335,-1.315195,0.314993,0.019177,-4.254981,9.250934,2.935076,-9.768943,-8.881877,-9.977676,-8.568231,5.563850,-5.742388,-1.017702,0.451471,-7.580656,-8.008803,-9.910911,5.592587,-0.859879,5.368879,3.208258,0.442038,-6.283330,6.386325,-1.540632,1.633694,-6.668963,0.944673,-5.656168,-1.697078,-3.197386,4.155812,-9.634402,-4.847114,1.419096,4.793669,-9.295716,-6.658375,-9.193032,5.469730,-4.099763,-0.223997,8.697189,8.228842,-2.152545,-4.122561,-7.095236,3.464423,-1.963375,9.544294,6.338134,0.440497,-7.898180,-8.388778,5.723099,5.087308,-1.804543,-4.547906,-1.896219,-3.632293,2.306394,5.711902,-5.789557,-3.262994,6.847050,-8.935488,-2.610416,-6.909077,-4.696519,1.749437,3.138546,3.246836,-2.206000,5.319694,2.813807,2.403121,-2.368944,-2.269313,7.390908,-0.101511,3.653340,1.705882,-8.751838,-6.376665,-5.780362,-9.432246,-4.053760,-4.681025,9.341616,0.018677,7.522397,7.057980,-0.366234,-8.942813,-0.385586,-5.009011,-1.158516,-6.468795,0.221459,9.810528,-8.769701,4.415862,4.131133,-8.874794,9.773521,3.050113,-8.438046,8.873856,-7.911384,3.021801,-7.259384,-1.853849,2.124192,0.443389,2.516955,4.312131,-6.045216,9.805982,-5.860320,-7.207372,5.134832,-5.674735,-3.267277,-9.342227,4.846325,7.319752,9.793254,-9.653396,-2.888467,-6.106610,-4.309757,-0.300229,-5.505571,-6.060972,6.767142,6.280933,-7.432672,-6.452672,6.965728,-9.091605,-9.012046,-8.153950,3.280676,9.654374,-8.351158,-6.952691,4.736937,7.994044,-3.415773,-9.896486,-4.378503,-8.764698,2.667453,7.140079,-7.759766,6.574423,9.406512,-0.276718,7.168462,9.138986,4.233236,-4.279966,-2.260925,3.941981,-5.151182,-6.355902,7.615380,5.007464,6.866538,7.163354,-1.871615,1.788926,-4.624462,4.279617,6.719594,6.102020,-3.940309,8.960268,7.314084,2.597029,-7.945886,-3.746312,-8.854466,-3.460348,-6.700131,4.995097,-9.000954,-8.438358,1.795025,-9.676687,-8.000096,2.102967,-2.827620,2.707346,3.106394,1.821523,-9.249684,4.457380,2.762967,2.386446,4.156014,7.910595,4.757597,-2.967143,6.914496,4.255456,-7.936038,-3.942684,5.167007,-6.688066,-2.037489,-6.908496,2.250129,2.720758,6.560849,-8.804741,-9.665203,-0.332300,-4.276078,-3.016969,-2.222411,3.712279,-1.891044,9.947933,-5.981241,1.006293,2.881271,4.960307,5.320654,4.969202,6.999126,-5.327345,7.987393,4.521745,9.301326,9.085491,2.048709,3.838632,-4.934475,3.369920,-8.238292,3.011143,-8.409543,0.347143,-6.951279,-3.076973,-2.935806,1.354560,-5.009115,2.733260,-3.050671,2.551739,-3.455276,8.523696,4.389560,6.039614,0.138152,2.663901,3.677714,-4.658644,3.573843,-1.821334,7.151216,-5.545891,-2.072110,6.072986,-4.971420,2.509400,2.159029,-0.624278,9.475648,2.954953,-3.257172,6.350780,0.644348,3.552436,-5.787859,-4.747717,4.483883,1.203945,8.707351,-6.676322,5.198511,-1.339858,8.396560,6.822183,-2.635720,2.141999,4.641411,-4.841819,-1.750211,-2.392765,3.821586,-1.069343,7.031080,4.685172,9.785147,-2.711764,6.389317,9.719964,6.503077,5.613006,2.745255,3.102104,9.345353,0.377592,2.599193,8.102724,3.675640,-0.475376,2.278554,9.119041,6.252754,-8.444685,-4.649298,6.082218,-4.027101,7.384138,-8.575773,7.147418,-0.231357,4.317247,-4.247619,4.649164,1.151286,-3.015815,5.502944,9.979240,4.757772,5.737796,7.151932,-0.413427,1.544157,-3.518547,-0.088736,-9.870657,-1.751048,-5.159340,-0.362020,-9.046197,8.982761,-7.854306,-2.929956,-4.702996,5.933213,8.356258,-8.987615,5.957470,0.875197,7.153080,5.440420,6.671825,-8.563659,-3.839205,9.917942,-1.279832,6.924204,4.115537,-8.340013,4.233254,2.212606,-5.459120,-7.554820,4.267256,0.291634,4.058228,-5.757738,5.212224,6.842856,3.632857,-2.352445,1.359845,0.082007,-9.782508,-8.802534,2.458002,-1.408079,-5.893521,7.588979,6.659506,-6.846924,5.729541,2.811798,6.311874,-8.191617,6.456509,-7.050944,-1.936143,8.589807,6.676669,6.943977,2.195689,8.996074,-9.135481,2.704335,7.181281,5.081861,8.074728,3.952735,3.655334,8.635844,0.782080,8.433222,4.714536,-8.912185,5.759889,-6.531599,0.822105,-1.630726,-9.213545,3.871428,4.155177,1.668192,1.658839,-2.451662,-2.738600,5.742029,7.000302,-4.519136,1.619699,-1.807669,-1.581046,8.817131,-6.287152,1.683317,-5.388528,-4.940745,6.462979,-8.600853,1.118718,8.643220,-5.028542,4.664356,-8.981947,1.876460,-9.473439,-2.458897,-5.756289,-3.575811,4.582742,5.730278,3.760144,2.553961,2.668327,2.913893,-6.938539,3.394448,-1.462072,4.936386,-9.158257,-9.453035,-5.055238,4.033487,9.584666,3.341000,7.077211,-8.321975,-8.889748,-7.918786,7.966897,-7.859462,-8.523484,-8.042686,-3.112108,4.234757,-7.903625,4.006781,-1.857406,4.632781,5.011842,-5.334820,-7.976524,3.138709,8.715863,-5.665354,3.006863,-6.672876,-3.050780,-0.084061,-7.492752,9.650016,-7.072400,9.584544,1.632271,-7.648999,6.290156,-3.198922,8.898722,2.721863,3.567857,9.668339,-9.472955,-0.781562,-2.988531,-6.720490,8.987840,-1.742044,-0.333307,-3.175099,-0.377979,-0.815287,-1.123046,5.262671,-6.298019,-3.662635,1.385276,5.775751,6.364020,-1.730999,-2.949729,2.918119,6.775049,2.717656,8.462730,3.426203,-4.176659,-1.691614,-6.531146,-2.346185,-7.493833,-1.685039,-2.165930,8.179635,-7.589047,-3.232051,-8.986934,-2.416757,2.333733,-7.866940,2.554749,-6.399717,3.322475,-7.887901,8.693091,7.839070,6.334269,8.921128,6.196571,-3.946931,-6.023932,-8.210776,-1.391566,-4.575311,2.676830,-5.545223,9.036201,-1.723427,0.628828,-6.296717,-7.596374,-6.006487,-6.882201,9.693717,1.033628,3.217459,-8.394888,-8.742495,-0.606058,-9.545007,9.588785,-3.156426,-4.120566,-1.190222,-4.811148,-6.213787,-5.624310,-2.355016,-2.975066,-1.731474,3.336382,1.021430,3.235745,-1.897471,2.708847,2.375882,-8.073538,2.393041,7.917604,-2.797769,-7.929900,-9.592959,-7.862331,9.149381,-3.194998,-2.472594,2.701895,-5.995565,4.625756,-3.735585,3.983566,-3.122991,-5.964363,-4.942908,8.830121,9.568102,6.072995,-9.311881,-1.274090,-3.262684,0.535288,8.438362,6.622124,5.511672,-8.454732,6.287479,-8.443176,2.430809,5.223266,-6.532292,8.817017,-1.895208,7.095405,-2.963510,0.010537,-6.560331,9.928899,4.049088,7.685482,6.148813,6.782792,-5.273062,-9.359298,-6.882998,8.796709,-9.524559,-0.045519,-3.118105,4.544221,4.386137,0.934562,0.816161,5.711735,8.460738,-3.559904,8.827037,2.693578,1.051272,4.118963,7.021979,-6.520516,8.764722,9.371332,-1.481611,-2.360565,0.357190,6.698394,-6.317110,8.369986,-7.645409,5.095765,5.323830,9.866039,-2.925583,-0.170817,7.190294,-7.393639,1.120868,-2.235034,-3.902689,-7.222336,3.376226,3.142266,-0.084338,0.755194,-9.546435,-6.660253,-9.075077,-9.200929,6.697554,-6.393655,6.832113,3.571894,-3.580007,-3.283647,0.729441,-2.068848,-5.570751,-2.137477,9.747791,8.887805,-8.195630,6.129241,1.338709,-0.690618,3.469827,-3.914627,8.916993,5.682421,3.049192,-0.945032,-4.918074,4.190383,-0.071565,-5.442047,-6.688629,0.319266,7.807032,3.758892,-9.009899,7.567201,-9.651724,-2.538982,-5.388645,-7.128664,0.726624,-8.913051,7.383370,1.121024,7.970575,4.506886,5.942655,4.179193,-5.227463,-0.682776,-7.832654,-0.462061,5.522202,-7.168084,-0.823115,0.326735,5.431328,-3.782989,-1.030079,6.047022,2.132472,3.473027,5.289123,7.755732,5.450187,9.788382,-2.834415,-7.690257,-3.398544,3.493557,1.343063,9.036850,-3.353635,-0.166884,7.378991,-9.862980,-7.829699,8.195888,-1.700821,2.623893,-8.090219,7.850793,-5.230106,-6.973295,-9.777032,-0.400454,2.796845,3.842967,0.803207,-7.265936,7.984616,6.023330,-7.020980,6.955215,6.646502,-4.695774,2.611005,-8.161408,2.919891,8.613683,-7.044290,-5.812398,5.323919,7.718825,8.517509,7.249629,0.760975,-6.677803,3.299252,-2.207923,2.731744,1.493459,2.878711,-2.382933,-7.768360,-4.318543,7.369561,-4.892414,-2.792188,0.798119,4.856691,-4.278550,4.041942,-5.168520,9.522756,-0.807507,6.464102,1.311171,3.588619,-0.581250,8.907801,5.702024,8.505768,2.002607,3.683727,1.506761,9.854073,4.320676,-0.144571,-1.919180,8.578676,-0.301923,-6.759303,3.743315,-9.589579,7.260020,-5.487554,-5.636996,4.058108,-6.284958,0.575525,5.679298,6.498951,1.508698,5.201821,4.262238,-9.505242,8.382705,-4.733350,5.330334,-9.822323,-2.301844,7.131113,-2.720442,8.520064,9.284565,-9.814913,7.713374,-9.826367,-6.067202,-3.442584,-3.383756,1.323603,6.381200,-1.288560,-0.196071,-8.500953,7.406224,-0.820458,-8.163805,-1.948133,-6.776885,-3.951937,6.482296,-8.987889,-3.199858,5.944039,-4.504616,5.159509,-0.169129,-8.397161,-8.835088,-5.598527,-1.255969,-0.832800,-8.881867,-3.506736,9.860640,-1.840938,1.972844,-3.666261,-7.275625,-7.341776,0.072979,-6.616828,9.388273,-4.282880,6.074939,-7.863242,6.883265,-8.516770,7.736392,-7.000173,-0.103206,1.405320,-3.875597,6.551085,-5.923002,6.650170,9.509129,8.682965,-0.185316,4.190072,-1.608025,5.281000,-5.906757,6.861088,-1.330752,-5.183853,2.709912,5.715833,-3.543774,-4.111919,-8.514748,-3.059201,3.849394,2.027837,6.221480,-2.377670,-5.564458,-9.865045,9.062696,-4.091884,6.695617,-3.496374,6.143654,-5.964792,2.444318,-0.410073,-3.088853,2.646261,-5.007638,5.567993,0.480596,-3.767256,0.691483,-1.654637,-5.856152,1.194370,-4.130641,-0.076610,5.048330,8.940021,2.489698,-7.904913,-7.255885,-9.854708,-8.218555,-3.744719,6.212127,4.316473,0.223459,7.072124,1.889459,-4.518679,1.450711,5.614707,2.447411,3.079441,-4.614688,9.195945,4.130547,4.026943,0.195695,-1.906954,-5.400606,-9.374824,4.011496,-3.655984,-8.753691,-6.501974,9.640424], dtype = "float64")#candidate|11913|(2940,)|const|float64
call_11912 = relay.TupleGetItem(func_6512_call(relay.reshape(const_11913.astype('float64'), [2940,])), 0)
call_11914 = relay.TupleGetItem(func_6515_call(relay.reshape(const_11913.astype('float64'), [2940,])), 0)
var_11962 = relay.var("var_11962", dtype = "float64", shape = (2940,))#candidate|11962|(2940,)|var|float64
bop_11963 = relay.less(const_11913.astype('bool'), relay.reshape(var_11962.astype('bool'), relay.shape_of(const_11913))) # shape=(2940,)
func_2534_call = mod.get_global_var('func_2534')
func_2536_call = mutated_mod.get_global_var('func_2536')
call_11966 = func_2534_call(relay.reshape(var_11962.astype('float64'), [14, 15, 14]))
call_11967 = func_2534_call(relay.reshape(var_11962.astype('float64'), [14, 15, 14]))
output = relay.Tuple([call_11865,call_11912,bop_11963,call_11966,])
output2 = relay.Tuple([call_11866,call_11914,bop_11963,call_11967,])
func_11968 = relay.Function([var_11962,], output)
mod['func_11968'] = func_11968
mod = relay.transform.InferType()(mod)
mutated_mod['func_11968'] = func_11968
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11969 = relay.var("var_11969", dtype = "float64", shape = (2940,))#candidate|11969|(2940,)|var|float64
func_11968_call = mutated_mod.get_global_var('func_11968')
call_11970 = func_11968_call(var_11969)
output = call_11970
func_11971 = relay.Function([var_11969], output)
mutated_mod['func_11971'] = func_11971
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11330_call = mod.get_global_var('func_11330')
func_11332_call = mutated_mod.get_global_var('func_11332')
call_12029 = relay.TupleGetItem(func_11330_call(), 6)
call_12030 = relay.TupleGetItem(func_11332_call(), 6)
func_7783_call = mod.get_global_var('func_7783')
func_7784_call = mutated_mod.get_global_var('func_7784')
call_12032 = func_7783_call()
call_12033 = func_7783_call()
func_4427_call = mod.get_global_var('func_4427')
func_4431_call = mutated_mod.get_global_var('func_4431')
const_12070 = relay.const([[6.705047],[-2.638206],[7.689527],[8.716069],[1.305343],[3.924243],[-7.004844],[-0.414076]], dtype = "float64")#candidate|12070|(8, 1)|const|float64
const_12071 = relay.const(-7, dtype = "uint64")#candidate|12071|()|const|uint64
call_12069 = relay.TupleGetItem(func_4427_call(relay.reshape(const_12070.astype('float64'), [2, 1, 4]), relay.reshape(const_12071.astype('uint64'), []), relay.reshape(call_12029.astype('uint64'), [448,]), ), 2)
call_12072 = relay.TupleGetItem(func_4431_call(relay.reshape(const_12070.astype('float64'), [2, 1, 4]), relay.reshape(const_12071.astype('uint64'), []), relay.reshape(call_12029.astype('uint64'), [448,]), ), 2)
func_8825_call = mod.get_global_var('func_8825')
func_8827_call = mutated_mod.get_global_var('func_8827')
call_12074 = func_8825_call()
call_12075 = func_8825_call()
output = relay.Tuple([call_12029,call_12032,call_12069,const_12070,const_12071,call_12074,])
output2 = relay.Tuple([call_12030,call_12033,call_12072,const_12070,const_12071,call_12075,])
func_12096 = relay.Function([], output)
mod['func_12096'] = func_12096
mod = relay.transform.InferType()(mod)
mutated_mod['func_12096'] = func_12096
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12096_call = mutated_mod.get_global_var('func_12096')
call_12097 = func_12096_call()
output = call_12097
func_12098 = relay.Function([], output)
mutated_mod['func_12098'] = func_12098
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12103 = relay.var("var_12103", dtype = "float64", shape = ())#candidate|12103|()|var|float64
var_12104 = relay.var("var_12104", dtype = "float64", shape = (4, 8, 16))#candidate|12104|(4, 8, 16)|var|float64
bop_12105 = relay.divide(var_12103.astype('float64'), var_12104.astype('float64')) # shape=(4, 8, 16)
bop_12108 = relay.left_shift(var_12104.astype('int8'), relay.reshape(bop_12105.astype('int8'), relay.shape_of(var_12104))) # shape=(4, 8, 16)
func_7629_call = mod.get_global_var('func_7629')
func_7632_call = mutated_mod.get_global_var('func_7632')
var_12114 = relay.var("var_12114", dtype = "uint64", shape = (392,))#candidate|12114|(392,)|var|uint64
call_12113 = relay.TupleGetItem(func_7629_call(relay.reshape(var_12114.astype('uint64'), [4, 7, 14])), 1)
call_12115 = relay.TupleGetItem(func_7632_call(relay.reshape(var_12114.astype('uint64'), [4, 7, 14])), 1)
func_9830_call = mod.get_global_var('func_9830')
func_9832_call = mutated_mod.get_global_var('func_9832')
call_12120 = func_9830_call()
call_12121 = func_9830_call()
output = relay.Tuple([bop_12108,call_12113,var_12114,call_12120,])
output2 = relay.Tuple([bop_12108,call_12115,var_12114,call_12121,])
func_12123 = relay.Function([var_12103,var_12104,var_12114,], output)
mod['func_12123'] = func_12123
mod = relay.transform.InferType()(mod)
mutated_mod['func_12123'] = func_12123
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12123_call = mutated_mod.get_global_var('func_12123')
var_12125 = relay.var("var_12125", dtype = "float64", shape = ())#candidate|12125|()|var|float64
var_12126 = relay.var("var_12126", dtype = "float64", shape = (4, 8, 16))#candidate|12126|(4, 8, 16)|var|float64
var_12127 = relay.var("var_12127", dtype = "uint64", shape = (392,))#candidate|12127|(392,)|var|uint64
call_12124 = func_12123_call(var_12125,var_12126,var_12127,)
output = call_12124
func_12128 = relay.Function([var_12125,var_12126,var_12127,], output)
mutated_mod['func_12128'] = func_12128
mutated_mod = relay.transform.InferType()(mutated_mod)
const_12217 = relay.const(-7, dtype = "int16")#candidate|12217|()|const|int16
var_12218 = relay.var("var_12218", dtype = "int16", shape = (14, 1, 2))#candidate|12218|(14, 1, 2)|var|int16
bop_12219 = relay.logical_xor(const_12217.astype('int16'), var_12218.astype('int16')) # shape=(14, 1, 2)
func_11546_call = mod.get_global_var('func_11546')
func_11548_call = mutated_mod.get_global_var('func_11548')
call_12230 = func_11546_call()
call_12231 = func_11546_call()
func_7629_call = mod.get_global_var('func_7629')
func_7632_call = mutated_mod.get_global_var('func_7632')
const_12234 = relay.const([[-1,9,10,-2,7,3,-1,7,9,4,-7,2,-4,-7,-10,-5,1,-2,-5,8,-6,-1,1,4,-10,-10,1,-7,10,7,10,8,-7,-4,5,-4,3,10,5,-6,4,-4,-9,-10,-4,8,9,7,6,-10,-5,4,4,-4,1,4],[7,10,10,6,7,7,-9,5,10,-8,2,3,-7,-4,8,-4,7,-4,4,-8,5,8,-4,9,8,6,-9,-7,5,-7,-1,-9,-6,3,4,-2,9,-1,3,-6,7,-3,3,5,3,-3,4,1,5,-2,5,8,-4,-6,8,9],[6,-4,-4,-4,-2,1,9,7,-4,-4,3,-3,-10,-5,3,-6,8,5,-8,10,8,-7,1,-2,1,6,-6,2,-9,4,4,8,-9,-5,2,8,-5,6,9,3,-3,-5,-7,5,-5,-8,1,1,9,-9,-9,2,2,-2,-7,2],[-3,1,3,7,-6,-8,-3,7,5,4,2,10,7,6,4,-5,2,-8,-1,4,-10,-4,-1,4,8,-2,5,4,-3,-5,8,-5,-6,-7,7,-4,-6,-1,-3,3,-4,-2,6,-10,-6,-7,5,-7,4,-7,7,-10,-2,-10,-6,4],[9,-9,-2,5,4,-4,-3,-9,5,7,-7,-7,-8,2,3,3,4,8,-3,-5,4,-5,2,-1,9,-1,5,-3,-4,-6,-3,-8,3,2,-10,4,-6,-8,-2,-7,6,-5,-5,-3,-5,7,-10,-4,2,10,3,-3,-2,1,-1,6],[4,8,2,-8,10,5,-2,-4,7,6,9,-10,2,6,-8,9,-4,3,10,-2,-9,-2,-8,-3,2,4,1,-4,-5,-4,-3,-9,2,4,3,4,-5,-3,5,-5,-7,8,-4,9,-3,4,-8,4,5,3,5,2,-4,-2,-2,3],[7,7,4,-1,-1,-2,10,-10,-3,4,10,8,2,-2,9,4,-1,-9,7,1,-5,-8,10,-1,-2,-2,3,-8,-2,-9,-10,-8,4,-5,7,10,10,8,-7,-2,4,-5,4,3,-6,8,5,-4,-5,-9,-4,6,-6,-3,-3,-4]], dtype = "uint64")#candidate|12234|(7, 56)|const|uint64
call_12233 = relay.TupleGetItem(func_7629_call(relay.reshape(const_12234.astype('uint64'), [4, 7, 14])), 6)
call_12235 = relay.TupleGetItem(func_7632_call(relay.reshape(const_12234.astype('uint64'), [4, 7, 14])), 6)
bop_12247 = relay.greater_equal(bop_12219.astype('bool'), relay.reshape(var_12218.astype('bool'), relay.shape_of(bop_12219))) # shape=(14, 1, 2)
output = relay.Tuple([call_12230,call_12233,const_12234,bop_12247,])
output2 = relay.Tuple([call_12231,call_12235,const_12234,bop_12247,])
func_12271 = relay.Function([var_12218,], output)
mod['func_12271'] = func_12271
mod = relay.transform.InferType()(mod)
mutated_mod['func_12271'] = func_12271
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12272 = relay.var("var_12272", dtype = "int16", shape = (14, 1, 2))#candidate|12272|(14, 1, 2)|var|int16
func_12271_call = mutated_mod.get_global_var('func_12271')
call_12273 = func_12271_call(var_12272)
output = call_12273
func_12274 = relay.Function([var_12272], output)
mutated_mod['func_12274'] = func_12274
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10994_call = mod.get_global_var('func_10994')
func_10995_call = mutated_mod.get_global_var('func_10995')
call_12330 = func_10994_call()
call_12331 = func_10994_call()
output = call_12330
output2 = call_12331
func_12354 = relay.Function([], output)
mod['func_12354'] = func_12354
mod = relay.transform.InferType()(mod)
output = func_12354()
func_12355 = relay.Function([], output)
mutated_mod['func_12355'] = func_12355
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9514_call = mod.get_global_var('func_9514')
func_9516_call = mutated_mod.get_global_var('func_9516')
call_12362 = relay.TupleGetItem(func_9514_call(), 1)
call_12363 = relay.TupleGetItem(func_9516_call(), 1)
output = relay.Tuple([call_12362,])
output2 = relay.Tuple([call_12363,])
func_12378 = relay.Function([], output)
mod['func_12378'] = func_12378
mod = relay.transform.InferType()(mod)
mutated_mod['func_12378'] = func_12378
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12378_call = mutated_mod.get_global_var('func_12378')
call_12379 = func_12378_call()
output = call_12379
func_12380 = relay.Function([], output)
mutated_mod['func_12380'] = func_12380
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12354_call = mod.get_global_var('func_12354')
func_12355_call = mutated_mod.get_global_var('func_12355')
call_12443 = func_12354_call()
call_12444 = func_12354_call()
func_9447_call = mod.get_global_var('func_9447')
func_9449_call = mutated_mod.get_global_var('func_9449')
call_12445 = func_9447_call()
call_12446 = func_9447_call()
output = relay.Tuple([call_12443,call_12445,])
output2 = relay.Tuple([call_12444,call_12446,])
func_12448 = relay.Function([], output)
mod['func_12448'] = func_12448
mod = relay.transform.InferType()(mod)
output = func_12448()
func_12449 = relay.Function([], output)
mutated_mod['func_12449'] = func_12449
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8825_call = mod.get_global_var('func_8825')
func_8827_call = mutated_mod.get_global_var('func_8827')
call_12452 = func_8825_call()
call_12453 = func_8825_call()
func_10876_call = mod.get_global_var('func_10876')
func_10878_call = mutated_mod.get_global_var('func_10878')
call_12460 = relay.TupleGetItem(func_10876_call(), 0)
call_12461 = relay.TupleGetItem(func_10878_call(), 0)
func_9013_call = mod.get_global_var('func_9013')
func_9014_call = mutated_mod.get_global_var('func_9014')
call_12495 = func_9013_call()
call_12496 = func_9013_call()
func_10876_call = mod.get_global_var('func_10876')
func_10878_call = mutated_mod.get_global_var('func_10878')
call_12511 = relay.TupleGetItem(func_10876_call(), 0)
call_12512 = relay.TupleGetItem(func_10878_call(), 0)
func_12378_call = mod.get_global_var('func_12378')
func_12380_call = mutated_mod.get_global_var('func_12380')
call_12516 = relay.TupleGetItem(func_12378_call(), 0)
call_12517 = relay.TupleGetItem(func_12380_call(), 0)
output = relay.Tuple([call_12452,call_12460,call_12495,call_12511,call_12516,])
output2 = relay.Tuple([call_12453,call_12461,call_12496,call_12512,call_12517,])
func_12518 = relay.Function([], output)
mod['func_12518'] = func_12518
mod = relay.transform.InferType()(mod)
output = func_12518()
func_12519 = relay.Function([], output)
mutated_mod['func_12519'] = func_12519
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9849_call = mod.get_global_var('func_9849')
func_9850_call = mutated_mod.get_global_var('func_9850')
call_12540 = func_9849_call()
call_12541 = func_9849_call()
func_9399_call = mod.get_global_var('func_9399')
func_9401_call = mutated_mod.get_global_var('func_9401')
call_12542 = func_9399_call()
call_12543 = func_9399_call()
const_12550 = relay.const([[[1.431976,-1.287977,3.486539,3.041088,-1.003812,-9.843393,-2.819458,2.886160],[-6.757851,-9.717621,9.405375,-4.208419,5.808877,-3.150402,-3.619620,-3.866099],[-2.173107,-9.854012,-2.010491,3.413326,8.488471,0.961981,2.829580,-8.978192],[-1.739843,5.048127,3.526843,7.296966,-2.834392,-0.998871,0.848312,-5.116607],[2.355799,7.108662,-2.390295,-2.242025,-4.917578,-5.496998,5.946802,-4.368423],[9.674095,4.575541,6.207508,8.870948,3.692989,9.812249,-0.821143,-3.377576],[-1.556735,6.726468,-3.210949,-1.841113,6.558588,4.107531,9.953777,-0.920994],[9.160091,1.414940,-4.226485,-8.686183,0.896817,-7.465808,7.177646,2.151783],[7.954138,8.027651,5.490934,-3.907917,-9.416916,1.765445,6.207696,-9.041637],[5.154167,-0.278189,-6.103420,6.138961,-4.938736,4.243525,4.111210,5.841981],[-2.821492,-9.519577,6.242313,-1.937873,-8.986613,6.207940,-2.922375,-9.623172],[-6.689480,1.677833,3.661841,-7.146434,9.874882,-1.859713,-5.624025,3.064628],[-0.696438,-9.616142,-8.584810,3.902775,-5.892502,1.972623,-1.740859,1.177475],[-7.521170,5.215119,6.048800,8.518697,9.166735,6.215327,7.341989,-7.080385],[5.314087,8.780248,-8.624426,-7.601430,-9.771751,9.949430,-2.607198,0.934340],[0.934073,-4.460594,-1.659811,5.358650,2.421790,7.703153,8.257549,-0.503779]],[[6.714309,2.554810,-5.335707,-3.537979,9.486125,2.810365,-8.084957,-4.704321],[7.767187,0.876161,-6.490114,-3.037179,2.595504,-3.761385,8.258274,1.544407],[4.256432,-4.393024,1.633546,-8.807876,-0.174239,-2.558543,-8.346851,8.119440],[1.703240,7.640339,4.560167,-3.086406,9.284911,-1.474357,3.926817,5.916593],[-9.017026,9.440524,5.077031,-4.235161,8.479062,-7.335044,6.468183,-6.855173],[-4.173740,-8.036262,1.322146,1.306478,8.124839,9.535388,0.449428,4.789853],[9.365024,3.298172,-7.358435,-0.286905,-3.346601,4.802289,-5.930293,4.161645],[5.238440,0.179379,-4.850208,-5.836280,-3.155929,-6.652062,-5.489531,9.565695],[-3.666199,-4.611231,-9.592148,8.642681,-1.294359,-1.111989,-9.140912,7.481840],[1.131602,-6.854109,1.160668,7.102303,-7.996322,-7.870735,-1.016992,-6.423868],[-8.497596,7.783482,-8.870585,-9.561852,-5.705167,7.015246,-6.718496,-3.107139],[7.542820,8.552183,2.623727,-2.268880,-6.984196,6.542823,-1.271870,-3.560824],[-3.232362,7.040941,-1.432419,2.691015,-9.729785,5.751079,-2.741748,-9.440372],[-2.224321,-7.688922,5.322789,0.117759,8.959250,-7.569705,6.177366,8.520137],[-3.967446,-1.188010,-8.303774,4.975815,-4.841050,3.237449,6.040200,3.135355],[4.401624,9.656463,-9.909264,-8.870460,8.368554,-1.806896,3.597369,7.760448]],[[-2.811179,-8.910367,2.091785,-4.214318,-3.835436,-5.659376,1.966804,3.695297],[-3.554460,8.498227,-5.039538,-6.575591,-3.596865,-7.010142,-8.210481,-0.491136],[8.716756,1.587406,-4.845312,-0.475587,3.164036,-2.120929,-7.133870,7.742202],[0.089924,-3.335275,9.393315,1.263972,7.312292,7.126577,9.330366,-0.637046],[6.810123,-6.690741,7.326429,-8.947280,2.337068,-4.641677,8.153397,-3.805833],[-0.136785,-8.586008,-2.030038,-6.794283,0.784721,2.114228,6.014213,1.825639],[-8.774174,-2.294394,-8.184510,-3.298585,-8.082224,-2.160715,1.675391,-5.616685],[4.757606,6.372318,-4.463127,0.350227,3.398655,7.171473,-4.611561,8.771189],[-0.609698,9.895027,2.559976,-0.582177,-9.542498,4.921107,-8.567931,2.029897],[-4.353015,3.849285,-9.638547,-6.142888,8.306425,-6.004810,-2.032934,-8.764912],[-1.943627,1.521807,-6.071811,9.380142,-3.624533,-3.429409,-3.379098,-5.855968],[-2.855465,3.136245,-8.000305,-3.737340,6.554657,-6.872852,5.975792,-0.379439],[-5.420470,1.432541,-0.008280,3.761530,7.485961,2.416628,2.896293,-1.832586],[3.504963,5.745431,6.862284,3.077707,-6.572907,-0.506196,4.756599,2.863849],[-7.004298,-6.493062,0.121395,-2.083571,2.744888,-1.166766,4.479182,-0.511635],[0.043331,3.359319,1.677794,5.222649,-5.870725,8.811265,0.866722,0.748318]],[[1.980855,-5.972033,9.840665,1.412845,-2.969503,7.783133,-3.432489,-9.249562],[4.128555,-2.801191,-7.784540,4.129650,7.120921,-4.229012,4.830644,8.052398],[4.460859,-9.094069,-2.981100,6.696919,8.524344,-8.169236,-9.709430,8.905885],[-9.979290,9.075056,-2.307899,3.325253,7.723472,-8.177965,3.251924,-6.554013],[8.461289,0.233954,-0.259038,-8.856359,-1.861367,-6.389393,4.125041,-1.544650],[8.456415,-0.953363,-3.243915,-5.218307,-1.545796,2.123616,-9.413233,-4.409479],[-3.488119,8.347439,7.508405,-7.349375,-3.440058,-9.992321,4.340523,-2.941414],[-8.817149,-9.207991,-9.008531,9.557932,7.481829,7.872516,-4.816291,9.836761],[9.496396,6.588185,-0.319950,-3.415651,-1.763286,-5.976748,-0.637059,0.865695],[6.619382,6.770025,-1.297251,-9.413722,7.684023,1.004291,-2.078246,-4.558789],[7.831912,-8.389003,-5.853516,-2.986197,9.057848,-9.051216,5.322890,7.485320],[8.492788,0.860568,2.467943,1.779348,4.872714,-0.175033,4.101156,1.560471],[-9.189524,-7.796166,1.972389,-3.355905,6.268976,-3.510139,-4.171336,1.204428],[-4.053245,7.258158,4.050558,9.291772,8.416535,-9.026148,-5.581779,8.916686],[9.082017,4.473850,-2.261319,4.814171,-9.567740,5.608058,0.654565,-8.736741],[6.059114,3.999559,-3.592870,2.576012,-0.587998,-5.084027,8.631718,-1.313576]],[[7.847619,0.262233,3.068259,4.242502,-7.429591,-1.392823,-0.287365,-1.733892],[-4.622495,-5.755732,-7.702902,-7.881385,9.384589,9.828980,-9.527873,4.305025],[-7.052186,4.292612,5.552361,1.565013,6.008027,-2.532326,8.729981,6.436048],[-3.086585,-7.753741,5.244705,-6.202759,-1.440037,-8.680171,0.054812,-9.093139],[-7.723100,9.707288,8.733034,-9.068279,-9.282324,-3.423037,3.769355,2.252521],[1.431631,-3.650744,-1.195310,6.987219,-8.612748,9.351067,6.457157,1.104351],[9.224943,2.406502,-4.688150,-6.019714,-1.715655,-9.880647,-0.074886,-8.238999],[2.121994,5.916135,7.396239,-9.931574,-7.705175,7.420240,-8.617625,7.718424],[5.666231,-9.644471,-2.884976,-2.717086,2.631290,-1.766185,-8.509779,4.891705],[7.043182,5.142317,9.397423,8.640785,5.012984,2.775978,7.421737,5.067290],[6.547941,-8.647821,-1.589986,6.549859,7.412522,-7.072752,-5.837818,-7.967342],[-7.559523,-9.718758,7.272017,9.744440,-3.583186,-9.393216,8.331348,-9.402771],[4.582835,5.691557,4.892968,9.909146,-0.360941,-1.578279,2.520094,5.193355],[-0.855169,6.718417,1.368926,-7.912961,0.341774,6.561385,-3.968987,-5.625122],[3.024613,-9.572491,-6.733005,8.595858,5.934492,2.740225,-6.749436,-7.562362],[-6.914916,2.474805,-0.381617,1.485808,-2.068947,-9.055839,-0.661906,9.648997]],[[-5.865161,-3.895434,0.989230,-0.201140,4.211624,-4.552961,-0.608663,-7.063277],[-4.008669,-6.215354,1.296410,8.803265,-1.262033,-3.527308,-1.221614,-7.605495],[4.218519,2.841165,3.391994,3.189287,5.334232,-9.373613,-2.939328,-5.814795],[-3.194176,3.060316,-0.753627,-5.703677,8.208805,0.651978,-7.120744,-6.179680],[-5.477097,-0.119715,8.227608,-6.659631,2.179961,-9.421020,4.872585,3.510813],[5.913555,0.397073,1.239935,3.737758,-2.033941,-6.118330,-5.084043,4.983027],[-9.573214,-7.086424,5.704538,-6.428226,-2.876316,9.495529,8.362429,1.747352],[2.307123,-8.121256,-9.397046,0.644512,-6.198994,8.693008,9.770928,7.817490],[6.886503,0.208020,-4.435950,9.119054,2.597818,-6.878862,4.234621,4.041774],[-3.456502,7.630835,2.946220,5.257232,-3.858184,1.462138,9.186018,5.869049],[-9.857965,-7.966877,-9.493451,9.024971,-2.309208,-8.247561,-0.667600,-2.409194],[4.833829,8.793441,8.275937,-3.535463,-1.356121,4.606372,-5.941528,-8.709243],[9.734713,1.471525,-6.049617,4.724158,-9.953669,2.117950,-6.855329,6.862267],[6.942197,-5.612820,-9.732128,4.482075,-4.212409,-9.241779,3.671997,-6.160560],[4.183817,1.513161,-7.463248,-8.316816,-0.436508,0.385843,-6.538041,2.525432],[-0.804356,-7.757097,-6.614829,9.113097,-4.666761,-4.081761,-2.005688,-9.412397]],[[-1.296780,9.323736,9.657332,-3.319503,6.261322,-5.978332,-6.576282,-0.633873],[9.087691,2.131016,-2.367003,8.264793,8.796361,-5.021359,-4.369341,9.076870],[-0.107123,8.268151,6.080162,-9.479085,-4.826667,-4.529400,-6.935507,3.679157],[6.408892,2.209662,2.136246,-4.157805,-4.124330,-3.830686,5.586431,-4.524972],[-7.513113,0.891097,7.539925,1.785685,-6.737260,-1.405019,-0.858424,6.712468],[1.818265,5.674389,1.381278,9.407134,-7.552000,-1.483788,8.292990,-6.713023],[-4.282415,8.231465,6.728158,6.932287,-3.543610,-3.385926,5.666499,-7.592211],[-6.673759,2.562778,1.870777,-8.877786,-6.628639,-7.864755,2.227683,-6.698026],[-2.668895,7.517657,-0.902415,-7.646325,-3.250341,2.178363,-6.782077,-2.104362],[3.670374,-3.723210,-3.163762,-0.001501,5.941239,1.785184,0.137748,-5.038042],[0.589956,0.328362,4.699029,8.457083,-7.118777,4.747392,-0.964403,-0.339657],[-6.307046,8.780621,0.139870,5.556881,-3.978318,1.715718,-5.434772,7.632959],[9.283402,0.409588,-4.675283,-3.525594,3.012407,3.818570,-3.548685,7.738879],[-9.166684,6.072280,0.980757,-9.977254,6.832365,9.178952,-7.568120,-8.577491],[-9.147196,-8.346740,-1.789671,0.228846,-0.953183,9.214069,-5.964673,4.057372],[9.252223,-0.295767,-8.898038,-1.119317,-5.973353,2.417143,2.836246,-4.605201]],[[-2.285181,-3.464413,-6.266732,-3.972041,2.350427,7.635180,5.161428,-2.243376],[4.095045,1.632276,-6.882156,-7.429370,4.458217,8.257668,7.175170,-7.868787],[-0.048709,-8.249157,8.787176,0.174314,-5.854584,-4.848194,-9.140247,1.382163],[-6.160383,9.471081,-2.114741,3.608788,7.792988,-9.566897,1.105692,-4.656693],[-8.326824,-0.606925,-6.109207,-7.383121,-8.787228,-7.248306,6.482545,-3.403359],[-1.146555,-3.011886,7.263900,-4.256299,-5.791546,0.992230,-2.881492,9.419630],[-0.892905,-2.159919,-8.849328,-1.327182,8.416243,7.288506,-3.935176,-8.500036],[0.974206,5.370466,9.798940,3.342987,0.722785,5.360623,3.321104,-8.722141],[-7.318152,-8.864931,1.533978,6.415145,9.534792,1.479324,-0.626507,-1.782503],[2.789988,6.581059,6.655590,-3.544419,2.002892,-0.457726,4.522818,3.536710],[4.825424,-2.145039,-6.076443,-5.610025,-4.212334,1.310415,4.709812,-9.904646],[5.761775,4.626500,-3.620993,5.720337,4.380456,-8.204538,-1.749068,-9.860363],[5.693025,-1.549194,-4.364113,3.628252,9.167132,-1.543466,-2.429982,3.741751],[-2.802847,1.254213,-3.429153,-7.792555,-6.545666,-0.669094,-7.760979,4.035641],[8.707611,2.106219,-0.776346,-2.404554,2.940064,-4.932115,7.818432,-3.571796],[2.916516,7.136985,-4.141562,6.190672,-1.620677,-0.038540,3.095760,0.160588]]], dtype = "float64")#candidate|12550|(8, 16, 8)|const|float64
bop_12551 = relay.left_shift(call_12542.astype('uint32'), relay.reshape(const_12550.astype('uint32'), relay.shape_of(call_12542))) # shape=(8, 16, 8)
bop_12554 = relay.left_shift(call_12543.astype('uint32'), relay.reshape(const_12550.astype('uint32'), relay.shape_of(call_12543))) # shape=(8, 16, 8)
func_12096_call = mod.get_global_var('func_12096')
func_12098_call = mutated_mod.get_global_var('func_12098')
call_12558 = relay.TupleGetItem(func_12096_call(), 2)
call_12559 = relay.TupleGetItem(func_12098_call(), 2)
output = relay.Tuple([call_12540,bop_12551,call_12558,])
output2 = relay.Tuple([call_12541,bop_12554,call_12559,])
func_12565 = relay.Function([], output)
mod['func_12565'] = func_12565
mod = relay.transform.InferType()(mod)
mutated_mod['func_12565'] = func_12565
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12565_call = mutated_mod.get_global_var('func_12565')
call_12566 = func_12565_call()
output = call_12566
func_12567 = relay.Function([], output)
mutated_mod['func_12567'] = func_12567
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9254_call = mod.get_global_var('func_9254')
func_9256_call = mutated_mod.get_global_var('func_9256')
call_12568 = func_9254_call()
call_12569 = func_9254_call()
func_8606_call = mod.get_global_var('func_8606')
func_8608_call = mutated_mod.get_global_var('func_8608')
call_12570 = relay.TupleGetItem(func_8606_call(), 0)
call_12571 = relay.TupleGetItem(func_8608_call(), 0)
output = relay.Tuple([call_12568,call_12570,])
output2 = relay.Tuple([call_12569,call_12571,])
func_12573 = relay.Function([], output)
mod['func_12573'] = func_12573
mod = relay.transform.InferType()(mod)
mutated_mod['func_12573'] = func_12573
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12573_call = mutated_mod.get_global_var('func_12573')
call_12574 = func_12573_call()
output = call_12574
func_12575 = relay.Function([], output)
mutated_mod['func_12575'] = func_12575
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8825_call = mod.get_global_var('func_8825')
func_8827_call = mutated_mod.get_global_var('func_8827')
call_12631 = func_8825_call()
call_12632 = func_8825_call()
func_10116_call = mod.get_global_var('func_10116')
func_10118_call = mutated_mod.get_global_var('func_10118')
var_12655 = relay.var("var_12655", dtype = "uint32", shape = ())#candidate|12655|()|var|uint32
call_12654 = relay.TupleGetItem(func_10116_call(relay.reshape(var_12655.astype('uint32'), [])), 1)
call_12656 = relay.TupleGetItem(func_10118_call(relay.reshape(var_12655.astype('uint32'), [])), 1)
func_10596_call = mod.get_global_var('func_10596')
func_10597_call = mutated_mod.get_global_var('func_10597')
call_12664 = relay.TupleGetItem(func_10596_call(), 1)
call_12665 = relay.TupleGetItem(func_10597_call(), 1)
output = relay.Tuple([call_12631,call_12654,var_12655,call_12664,])
output2 = relay.Tuple([call_12632,call_12656,var_12655,call_12665,])
func_12669 = relay.Function([var_12655,], output)
mod['func_12669'] = func_12669
mod = relay.transform.InferType()(mod)
mutated_mod['func_12669'] = func_12669
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12670 = relay.var("var_12670", dtype = "uint32", shape = ())#candidate|12670|()|var|uint32
func_12669_call = mutated_mod.get_global_var('func_12669')
call_12671 = func_12669_call(var_12670)
output = call_12671
func_12672 = relay.Function([var_12670], output)
mutated_mod['func_12672'] = func_12672
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9399_call = mod.get_global_var('func_9399')
func_9401_call = mutated_mod.get_global_var('func_9401')
call_12716 = func_9399_call()
call_12717 = func_9399_call()
func_9380_call = mod.get_global_var('func_9380')
func_9382_call = mutated_mod.get_global_var('func_9382')
call_12721 = func_9380_call()
call_12722 = func_9380_call()
func_12448_call = mod.get_global_var('func_12448')
func_12449_call = mutated_mod.get_global_var('func_12449')
call_12724 = relay.TupleGetItem(func_12448_call(), 0)
call_12725 = relay.TupleGetItem(func_12449_call(), 0)
func_9983_call = mod.get_global_var('func_9983')
func_9985_call = mutated_mod.get_global_var('func_9985')
call_12728 = func_9983_call()
call_12729 = func_9983_call()
output = relay.Tuple([call_12716,call_12721,call_12724,call_12728,])
output2 = relay.Tuple([call_12717,call_12722,call_12725,call_12729,])
func_12730 = relay.Function([], output)
mod['func_12730'] = func_12730
mod = relay.transform.InferType()(mod)
output = func_12730()
func_12731 = relay.Function([], output)
mutated_mod['func_12731'] = func_12731
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9983_call = mod.get_global_var('func_9983')
func_9985_call = mutated_mod.get_global_var('func_9985')
call_12742 = func_9983_call()
call_12743 = func_9983_call()
output = relay.Tuple([call_12742,])
output2 = relay.Tuple([call_12743,])
func_12768 = relay.Function([], output)
mod['func_12768'] = func_12768
mod = relay.transform.InferType()(mod)
mutated_mod['func_12768'] = func_12768
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12768_call = mutated_mod.get_global_var('func_12768')
call_12769 = func_12768_call()
output = call_12769
func_12770 = relay.Function([], output)
mutated_mod['func_12770'] = func_12770
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12771 = relay.var("var_12771", dtype = "float64", shape = (4, 16, 8))#candidate|12771|(4, 16, 8)|var|float64
uop_12772 = relay.log2(var_12771.astype('float64')) # shape=(4, 16, 8)
output = uop_12772
output2 = uop_12772
func_12787 = relay.Function([var_12771,], output)
mod['func_12787'] = func_12787
mod = relay.transform.InferType()(mod)
var_12788 = relay.var("var_12788", dtype = "float64", shape = (4, 16, 8))#candidate|12788|(4, 16, 8)|var|float64
output = func_12787(var_12788)
func_12789 = relay.Function([var_12788], output)
mutated_mod['func_12789'] = func_12789
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10300_call = mod.get_global_var('func_10300')
func_10302_call = mutated_mod.get_global_var('func_10302')
call_12888 = func_10300_call()
call_12889 = func_10300_call()
func_11440_call = mod.get_global_var('func_11440')
func_11441_call = mutated_mod.get_global_var('func_11441')
call_12890 = relay.TupleGetItem(func_11440_call(), 0)
call_12891 = relay.TupleGetItem(func_11441_call(), 0)
func_2096_call = mod.get_global_var('func_2096')
func_2099_call = mutated_mod.get_global_var('func_2099')
var_12893 = relay.var("var_12893", dtype = "uint64", shape = ())#candidate|12893|()|var|uint64
const_12894 = relay.const([4,1,4,10,3,7,9,-9,-7,3,-2,-3,-9,-6,-3,-2,-2,-8,-2,-8,4,-3,5,8,-10,-7,8,-9,-1,2,8,1,-6,8,-5,10,-4,-2,5,-2,-3,-7,-1,5,-3,-7,10,1,-5,3,9,-1,6,-1,-5,6,-2,-8,9,-6,-2,-3,1,10,7,7,-9,-9,2,-8,3,-5,-8,7,-8,-2,-5,5,-1,1,-10,-3,5,-6,4,-3,9,-1,3,-4,2,-1,1,3,3,-1,4,-4,8,7,-5,8,-10,-2,-6,2,-4,-6,-1,8,-5,-8,3,-10,-3,4,9,3,10,10,4,5,-7,3,-10,-1,-10,-5,-3,5,-4,-6,-8,2,-6,3,6,-6,-8,10,-9,-4,2,-1,4,10,2,3,-7,-7,9,3,-9,10,-9,7,3,-5,1,-7,2,5,5,4,-10,5,5,5,-8,-3,-7,-2,-2,-3,-5,-9,10,-10,9,7,7,1,9,-5,-2,3,-1,-8,-4,-7,3,-7,-8,-10,-1,8,-8,-7,4,-5,2,-4,2,7,4,8,-10,4,10,-6,-10,8,-1,6,-10,-2,8,-5,-9,-10,-6,2,-1,-5,8,-5,-4,-6,-9,2,3,2,-9,2,9,1,-10,5,-9,6,2,6,2,2,-2,1,-8,7,-9,-7,2,-8,-3,6,3,-9,-1,10,-7,-9,7,-6,-4,-4,3,5,-3,8,6,-8,-7,-6,4,-6,-8,-1,4,2,10,2,1,-7,-10,10,2,-7,-9,-7,-8,-1,7,-3,-9,8,-3,1,8,8,-6,4,-8,-6,3,-9,8,9,-4,-6,-9,10,-7,-6,2,2,4,-5,6,-1,-7,-10,-10,10,-3,-7,-1,4,10,2,6,10,-8,4,10,-5,-6,2,5,-10,-6,-1,-3,-4,5,-5,-10,10,-3,3,2,10,4,3,-4,8,-9,-7,-3,5,9,-8,-8,6,-7,-5,-9,-4,-7,-2,10,-10,-10,1,-10,-1,8,-9,-2,-8,-5,7,-7,7,-9,-2,-1,-10,-1,-4,9,1,9,-6,4,1,6,-3,8,-7,-1,8,3,-2,-2,7,-6,-1,-8,-7,2,4,-5,-2,-9,1,-10,-3,-8,-7,-3,-2,-3,-3,1,-5,-7,2,6,-4,5,-6,-6,-7,-3,-7,-1,7,-3,8,2,8,2,1,5,4,5,-4,8,7], dtype = "uint64")#candidate|12894|(448,)|const|uint64
call_12892 = func_2096_call(relay.reshape(var_12893.astype('uint64'), []), relay.reshape(const_12894.astype('uint64'), [7, 4, 16]), )
call_12895 = func_2096_call(relay.reshape(var_12893.astype('uint64'), []), relay.reshape(const_12894.astype('uint64'), [7, 4, 16]), )
func_8606_call = mod.get_global_var('func_8606')
func_8608_call = mutated_mod.get_global_var('func_8608')
call_12908 = relay.TupleGetItem(func_8606_call(), 0)
call_12909 = relay.TupleGetItem(func_8608_call(), 0)
output = relay.Tuple([call_12888,call_12890,call_12892,var_12893,const_12894,call_12908,])
output2 = relay.Tuple([call_12889,call_12891,call_12895,var_12893,const_12894,call_12909,])
func_12942 = relay.Function([var_12893,], output)
mod['func_12942'] = func_12942
mod = relay.transform.InferType()(mod)
var_12943 = relay.var("var_12943", dtype = "uint64", shape = ())#candidate|12943|()|var|uint64
output = func_12942(var_12943)
func_12944 = relay.Function([var_12943], output)
mutated_mod['func_12944'] = func_12944
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9577_call = mod.get_global_var('func_9577')
func_9579_call = mutated_mod.get_global_var('func_9579')
call_12965 = relay.TupleGetItem(func_9577_call(), 0)
call_12966 = relay.TupleGetItem(func_9579_call(), 0)
output = relay.Tuple([call_12965,])
output2 = relay.Tuple([call_12966,])
func_12967 = relay.Function([], output)
mod['func_12967'] = func_12967
mod = relay.transform.InferType()(mod)
output = func_12967()
func_12968 = relay.Function([], output)
mutated_mod['func_12968'] = func_12968
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7714_call = mod.get_global_var('func_7714')
func_7715_call = mutated_mod.get_global_var('func_7715')
call_12972 = relay.TupleGetItem(func_7714_call(), 0)
call_12973 = relay.TupleGetItem(func_7715_call(), 0)
func_7828_call = mod.get_global_var('func_7828')
func_7830_call = mutated_mod.get_global_var('func_7830')
const_12975 = relay.const([-6.844448,1.640040,-4.430714], dtype = "float32")#candidate|12975|(3,)|const|float32
call_12974 = relay.TupleGetItem(func_7828_call(relay.reshape(const_12975.astype('float32'), [3,])), 1)
call_12976 = relay.TupleGetItem(func_7830_call(relay.reshape(const_12975.astype('float32'), [3,])), 1)
output = relay.Tuple([call_12972,call_12974,const_12975,])
output2 = relay.Tuple([call_12973,call_12976,const_12975,])
func_12988 = relay.Function([], output)
mod['func_12988'] = func_12988
mod = relay.transform.InferType()(mod)
output = func_12988()
func_12989 = relay.Function([], output)
mutated_mod['func_12989'] = func_12989
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11583_call = mod.get_global_var('func_11583')
func_11584_call = mutated_mod.get_global_var('func_11584')
call_13004 = relay.TupleGetItem(func_11583_call(), 1)
call_13005 = relay.TupleGetItem(func_11584_call(), 1)
output = call_13004
output2 = call_13005
func_13006 = relay.Function([], output)
mod['func_13006'] = func_13006
mod = relay.transform.InferType()(mod)
output = func_13006()
func_13007 = relay.Function([], output)
mutated_mod['func_13007'] = func_13007
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7714_call = mod.get_global_var('func_7714')
func_7715_call = mutated_mod.get_global_var('func_7715')
call_13014 = relay.TupleGetItem(func_7714_call(), 0)
call_13015 = relay.TupleGetItem(func_7715_call(), 0)
func_9447_call = mod.get_global_var('func_9447')
func_9449_call = mutated_mod.get_global_var('func_9449')
call_13017 = func_9447_call()
call_13018 = func_9447_call()
output = relay.Tuple([call_13014,call_13017,])
output2 = relay.Tuple([call_13015,call_13018,])
func_13022 = relay.Function([], output)
mod['func_13022'] = func_13022
mod = relay.transform.InferType()(mod)
mutated_mod['func_13022'] = func_13022
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13022_call = mutated_mod.get_global_var('func_13022')
call_13023 = func_13022_call()
output = call_13023
func_13024 = relay.Function([], output)
mutated_mod['func_13024'] = func_13024
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7783_call = mod.get_global_var('func_7783')
func_7784_call = mutated_mod.get_global_var('func_7784')
call_13087 = func_7783_call()
call_13088 = func_7783_call()
output = call_13087
output2 = call_13088
func_13104 = relay.Function([], output)
mod['func_13104'] = func_13104
mod = relay.transform.InferType()(mod)
output = func_13104()
func_13105 = relay.Function([], output)
mutated_mod['func_13105'] = func_13105
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9514_call = mod.get_global_var('func_9514')
func_9516_call = mutated_mod.get_global_var('func_9516')
call_13109 = relay.TupleGetItem(func_9514_call(), 0)
call_13110 = relay.TupleGetItem(func_9516_call(), 0)
func_8769_call = mod.get_global_var('func_8769')
func_8773_call = mutated_mod.get_global_var('func_8773')
const_13112 = relay.const(True, dtype = "bool")#candidate|13112|()|const|bool
const_13113 = relay.const([True,True,True,False,False,True,False,True,False,False,True,True,True,True,False,False,True,False,False,True,True,False,False,True,False,False,False,True,True,True,True,True,False,True,True,False,False,False,True,False,False,False,True,True,True,False,True,False,False,False,False,True,False,False,False,True,True,True,False,False,False,True,True,False,False,True,False,False,True,True,True,True,True,False,False,False,False,True,False,False,True,False,False,False,True,False,True,False,True,True,False,True,False,False,True,True,True,True,True,False,False,False,True,True,True,True,True,True], dtype = "bool")#candidate|13113|(108,)|const|bool
call_13111 = relay.TupleGetItem(func_8769_call(relay.reshape(const_13112.astype('bool'), []), relay.reshape(const_13113.astype('bool'), [3, 4, 9]), ), 0)
call_13114 = relay.TupleGetItem(func_8773_call(relay.reshape(const_13112.astype('bool'), []), relay.reshape(const_13113.astype('bool'), [3, 4, 9]), ), 0)
func_10255_call = mod.get_global_var('func_10255')
func_10259_call = mutated_mod.get_global_var('func_10259')
const_13119 = relay.const([-6.748369,-8.641429,-0.111255,4.859456,-0.785953,-7.984488,-0.097881,-5.646568,3.531198,3.398306,7.140065,-3.866057,0.809463,8.411334,-4.127673,8.658013,5.683195,-3.054051,3.586823,5.185620,-5.168459,9.516447,2.704062,5.991556,-2.534452,5.582229,0.826713,-0.878409,4.868540,-8.418522], dtype = "float64")#candidate|13119|(30,)|const|float64
var_13120 = relay.var("var_13120", dtype = "float32", shape = (1, 2250))#candidate|13120|(1, 2250)|var|float32
call_13118 = relay.TupleGetItem(func_10255_call(relay.reshape(const_13119.astype('float64'), [10, 3, 1]), relay.reshape(var_13120.astype('float32'), [225, 10]), relay.reshape(const_13119.astype('float64'), [10, 3, 1]), ), 3)
call_13121 = relay.TupleGetItem(func_10259_call(relay.reshape(const_13119.astype('float64'), [10, 3, 1]), relay.reshape(var_13120.astype('float32'), [225, 10]), relay.reshape(const_13119.astype('float64'), [10, 3, 1]), ), 3)
func_9352_call = mod.get_global_var('func_9352')
func_9355_call = mutated_mod.get_global_var('func_9355')
const_13131 = relay.const([True,False,False,False,True,False,False,False,False,False,True,True,True,True,False,False,True,True,True,True,True,True,True,True,True,True,True,False,True,True,False,False,True,False,True,True,False,True,True,True,True,False,False,False,True,False,False,True,False,False,False,True,True,True,False,False,False,True,False,True,True,True,False,False,True,True,True,False,False,True,True,True,True,True,True,True,True,True,False,True,True,False,False,True], dtype = "bool")#candidate|13131|(84,)|const|bool
call_13130 = relay.TupleGetItem(func_9352_call(relay.reshape(const_13112.astype('uint32'), []), relay.reshape(const_13131.astype('bool'), [3, 4, 7]), ), 1)
call_13132 = relay.TupleGetItem(func_9355_call(relay.reshape(const_13112.astype('uint32'), []), relay.reshape(const_13131.astype('bool'), [3, 4, 7]), ), 1)
output = relay.Tuple([call_13109,call_13111,const_13112,const_13113,call_13118,const_13119,var_13120,call_13130,const_13131,])
output2 = relay.Tuple([call_13110,call_13114,const_13112,const_13113,call_13121,const_13119,var_13120,call_13132,const_13131,])
func_13136 = relay.Function([var_13120,], output)
mod['func_13136'] = func_13136
mod = relay.transform.InferType()(mod)
mutated_mod['func_13136'] = func_13136
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13137 = relay.var("var_13137", dtype = "float32", shape = (1, 2250))#candidate|13137|(1, 2250)|var|float32
func_13136_call = mutated_mod.get_global_var('func_13136')
call_13138 = func_13136_call(var_13137)
output = call_13138
func_13139 = relay.Function([var_13137], output)
mutated_mod['func_13139'] = func_13139
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11818_call = mod.get_global_var('func_11818')
func_11819_call = mutated_mod.get_global_var('func_11819')
call_13162 = relay.TupleGetItem(func_11818_call(), 0)
call_13163 = relay.TupleGetItem(func_11819_call(), 0)
func_3958_call = mod.get_global_var('func_3958')
func_3960_call = mutated_mod.get_global_var('func_3960')
var_13171 = relay.var("var_13171", dtype = "int32", shape = ())#candidate|13171|()|var|int32
call_13170 = relay.TupleGetItem(func_3958_call(relay.reshape(var_13171.astype('int32'), [])), 0)
call_13172 = relay.TupleGetItem(func_3960_call(relay.reshape(var_13171.astype('int32'), [])), 0)
output = relay.Tuple([call_13162,call_13170,var_13171,])
output2 = relay.Tuple([call_13163,call_13172,var_13171,])
func_13174 = relay.Function([var_13171,], output)
mod['func_13174'] = func_13174
mod = relay.transform.InferType()(mod)
mutated_mod['func_13174'] = func_13174
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13175 = relay.var("var_13175", dtype = "int32", shape = ())#candidate|13175|()|var|int32
func_13174_call = mutated_mod.get_global_var('func_13174')
call_13176 = func_13174_call(var_13175)
output = call_13176
func_13177 = relay.Function([var_13175], output)
mutated_mod['func_13177'] = func_13177
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12378_call = mod.get_global_var('func_12378')
func_12380_call = mutated_mod.get_global_var('func_12380')
call_13190 = relay.TupleGetItem(func_12378_call(), 0)
call_13191 = relay.TupleGetItem(func_12380_call(), 0)
func_6097_call = mod.get_global_var('func_6097')
func_6099_call = mutated_mod.get_global_var('func_6099')
const_13193 = relay.const([2.542290,7.174430,6.519963,-1.645179,-2.158224,9.629246,-1.966730,8.990141,1.377392,0.425213,-5.272388,1.655868,-9.244017,3.590530,5.853163,-9.328871,-6.105911,-7.470684,3.117465,-1.282620,2.285021,2.152210,-3.198726,8.092545,-8.403048,-2.254919,8.138047,-7.658829,-7.991182,4.564767,-1.184587,-7.728617,8.041774,4.641628,-2.761456,6.559262,0.528712,0.560888,0.643567,1.992638,6.963943,-3.798935,0.617331,7.277395,-9.869300,7.219996,-5.503494,-1.116486,-1.247961,-3.107674,5.253613,3.848950,-1.449566,-9.276747,2.789640,0.126208,-8.412771,4.917484,-9.914464,6.091835,3.723664,-7.238406,-9.607878,-8.722389,-3.705388,7.085163,-9.043098,-3.815057,7.832099,-7.284598,-8.987671,-9.493748,-4.437175,-7.490322,-6.203082,3.904973,-8.217495,1.111899,-4.848309,-6.957835,-6.344680,0.124101,-9.421569,9.546716,-5.946224,-3.253581,9.243600,7.858214,-2.273081,-1.314958,5.970808,-7.499202,1.428351,0.899597,6.614205,-4.987226,6.781081,-2.805953,0.316507,-6.482404,-6.204361,-1.633757,5.416988,5.077832,0.934154,-3.621620,6.457576,1.877205,-3.099848,1.339765,-8.248678,0.617177,0.088631,6.843952,2.791763,-1.893152,-2.555828,3.791893,8.121699,1.222458,-1.132701,7.313494,-1.130737,8.058688,8.922705,0.281521,-5.905174,-5.047637,-3.948315,7.862959,5.152557,8.205603,-0.302725,3.878903,5.735946,6.532004,-2.220740,-7.505392,5.264910,3.853493,-8.540628,-4.941740,1.615248,-1.404433,-2.638480,4.473033,7.390178,7.553173,2.079236,7.212389,3.422117,-0.473706,-3.230079,-5.807875,-4.002557,-5.337890,-8.754081,-8.802486,2.698015,-8.865806,-8.207621,6.984999,-5.070723,8.318022,5.123302,4.465797,6.996604,-2.493483,-6.940716,0.519248,-0.709857,6.218732,-4.273252,-5.604793,-1.960960,0.802606,-5.188834,-3.016168,8.314851,-6.939615,7.795662,7.641356,-0.684001,-8.992013,1.269688,0.024065,1.712029,-3.131743,-4.659786,-0.627563,3.118062,3.649343,-8.030673,9.808111,-4.656788,3.708872,7.855264,-7.327704,-0.947005,-6.246004,4.728711,-4.519182,-1.842966,-8.736945,2.877111,9.548398,6.709914,3.287148,-0.486370,0.652136,-9.561871,-5.768327,-1.359346,0.589639,3.059186,-4.521206,-2.346635,-3.563043,8.429973,4.179454,0.681686,-1.576381,-6.494090,-0.697939,-7.777973,8.685084,-2.260306,-9.415943,-1.612150,-4.096167,4.222101,-1.811416,4.997558,-0.023684,-0.666760,7.186922,-5.259051,-4.255375,5.788858,6.113615,-0.090545,5.723122,0.423878,3.647085,3.761310,3.833044,-7.592112,-8.082204,-8.744450,1.869104,1.945762,-2.184882,-8.190867,-8.671002,-0.706682,4.660827,-3.773185,2.680360,-7.969582,2.776416,-2.216528,-5.674828,0.997429,-5.756941,1.116582,-8.573627,1.678724,-2.626739,3.944043,8.014020,-2.428036,-3.757129,2.225291,-3.404630,7.041612,-3.137667,6.364931,-4.506563,2.926584,-0.419557,-3.217505,4.781786,-6.349713,8.509184,-9.482639,8.778101,1.093932,6.227713,7.249591,-3.700661,-5.126746,7.198118,4.222651,-5.490272,-0.373928,0.125751,2.962337,-5.523874,-7.911558,4.869185,3.436055,-1.203962,-4.111454,7.958101,1.987595,-6.115736,-3.635575,2.326740,-2.345356,5.636603,8.973593,6.122059,3.444356,-5.436196,-0.662441], dtype = "float32")#candidate|13193|(315,)|const|float32
call_13192 = func_6097_call(relay.reshape(const_13193.astype('float32'), [7, 3, 15]))
call_13194 = func_6097_call(relay.reshape(const_13193.astype('float32'), [7, 3, 15]))
func_13006_call = mod.get_global_var('func_13006')
func_13007_call = mutated_mod.get_global_var('func_13007')
call_13202 = func_13006_call()
call_13203 = func_13006_call()
output = relay.Tuple([call_13190,call_13192,const_13193,call_13202,])
output2 = relay.Tuple([call_13191,call_13194,const_13193,call_13203,])
func_13204 = relay.Function([], output)
mod['func_13204'] = func_13204
mod = relay.transform.InferType()(mod)
output = func_13204()
func_13205 = relay.Function([], output)
mutated_mod['func_13205'] = func_13205
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12096_call = mod.get_global_var('func_12096')
func_12098_call = mutated_mod.get_global_var('func_12098')
call_13206 = relay.TupleGetItem(func_12096_call(), 3)
call_13207 = relay.TupleGetItem(func_12098_call(), 3)
func_1485_call = mod.get_global_var('func_1485')
func_1490_call = mutated_mod.get_global_var('func_1490')
const_13216 = relay.const([[-3,7,9,-2,-1,-5,-5,-2,-3,6,6,7,5,-9,-1,-2,-5,10,-8,-1,3,6,4,-2,-6,4,-8,-5,1,4,4,-6,-4,5,9,3,-1,-9,4,3,-10,1,8,-2,1,-2,-3,-3,5,3,5,7,2,10,-9,-9,2,10,-7,10,10,10,-10,-4,-3,2,-2,4,7,3,9,-9,-1,4,1,3,-5,9,-8,-2,-10,8,5,8,-8,-10,-3,9,-7,-2,-6,-2,-10,8,-3,-10,7,7,-2,4,7,8,-10,-6,1,-5,-4,9,9,-5,-10,-7,5,-10,2,10,7,-9,-4,-6,-2,-1,10,-2,7,-1,-2,-5,4,-7,-1,-4,-4,5,-8,2,-2,8,-5,10,10,1,8,3,5,-8,7,-5,7,-9,-3,-6,-6,-8,9,-4,-7,-10,-3,9,-3,2,-9,10,-7,2,2,4,4,-8,9,-1,7,3,4,-7,9,6,-8,-7,-7,-6,8,-6,3,-7,-8,-9,10,6,-4,-1,-6,-4,-7,-1,9,-3,9,-9,-5,-5,5,-9,-7,-8,-8,5,-10,-10,1,9,-9,7,4,-2,-4,-2,-2,3,6,10,2,9]], dtype = "int64")#candidate|13216|(1, 224)|const|int64
const_13217 = relay.const(9, dtype = "uint32")#candidate|13217|()|const|uint32
call_13215 = relay.TupleGetItem(func_1485_call(relay.reshape(const_13216.astype('int64'), [7, 4, 8]), relay.reshape(const_13216.astype('int64'), [7, 4, 8]), relay.reshape(const_13217.astype('uint32'), []), ), 3)
call_13218 = relay.TupleGetItem(func_1490_call(relay.reshape(const_13216.astype('int64'), [7, 4, 8]), relay.reshape(const_13216.astype('int64'), [7, 4, 8]), relay.reshape(const_13217.astype('uint32'), []), ), 3)
func_7280_call = mod.get_global_var('func_7280')
func_7282_call = mutated_mod.get_global_var('func_7282')
const_13221 = relay.const([4.426330,-0.235975,-7.272779,3.986673,-4.249508,4.902067,8.171191,-4.727676,-2.002207,6.039369,1.842975,-6.097046,0.715958,4.980055,9.401501,5.851313,3.876389,7.577068,7.725481,2.565996,7.939085,-9.989912,3.835478,7.915543,6.682252,-3.796985,9.029761,-0.216810,3.794200,9.271773,-6.002775,6.636114,7.749451,3.004990,9.670560,-9.027653,5.554019,-5.578008,3.604867,0.660461,-9.106267,1.799861,-4.290412,-6.158548,-8.684330,-4.680727,4.237452,-7.010010,-0.282882,5.105948,-2.840950,-9.927156,-3.332906,-0.814479,-0.950485,2.518698,4.712272,4.643246,-8.783157,4.696114,1.008646,3.058020,-5.720890,7.247509,3.539064,-8.243593,-6.141587,2.625669,4.515253,-9.638140,5.899154,5.794766,8.156580,5.218031,-4.731120,-2.857343,-7.008694,-8.154730,5.735113,-4.113101,7.263068,-4.001655,2.751187,-8.671845,9.537334,8.601971,-7.351487,-9.448313,8.217492,1.826499,-2.664190,1.265961,9.851939,4.752630,-5.689067,2.780304,1.917876,9.919395,-6.429564,8.403991,2.698454,-9.836497,2.840535,7.560906,-5.798024,5.854275,-8.655575,-9.700284,-0.379288,-7.033796,8.958561,-8.276060,5.030561,6.248090,-1.654248,0.836895,4.934935,7.065420,-7.566248,9.418814,-9.646263,-1.174957,-4.708347,-2.375677,-3.199045,1.611038,5.735956,-7.871646,1.113150,-4.430666,3.203641,9.845075,9.159148,4.514365,9.104592,2.535065,3.529132,-9.683871,-9.912034,2.248680,2.223034,-6.783879,-9.964502,2.723506,-3.456657,2.952884,-6.534381,2.442339,-2.846753,3.423192,3.542926,0.737671,-4.124341,-1.396945,-6.602753,-4.664821,-7.293623,-0.771395,5.620843,8.172971,0.299496,3.986923,8.970277,-5.966649,-2.633179,-2.180024,-8.118577,-4.839308,4.354375,3.990457,-7.209383,-9.517079,-3.431000,-3.110071,-7.911368,5.171157,-7.253725,0.994094,3.794168,3.906033,-6.186020,-1.151495,3.308728,5.871383,4.943834,8.055881,-0.220546,0.829430,-2.454841,6.098751,7.368913,1.601624,6.741379,0.635610,-9.358747,-0.004233,-8.509136,8.711187,-1.362321,1.913248,7.508291,7.212441,-9.133261,-0.978511,-7.778269,5.074907,-4.795866,-0.402607,-1.748634,4.982057,-6.489282,8.437933,-6.375511,0.047803,4.004028,-4.053707,5.655191,2.008554,-3.199452,-9.663743,7.126832,-1.148659,-3.294985,9.743797,7.361046,5.363735,3.238566,-1.499525,4.713588,-6.881588,-7.493532,5.253739,-3.618831,8.850001,-2.652186,-1.910894,-0.402649,-0.549553,5.359365,7.707151,-9.628957,-4.632581,6.751720,3.658035,-9.065603,3.504695,-0.993524,-6.747549,6.366158,-0.046675,-3.526898,5.881487,6.393471,7.886282,-0.679132,3.333216,-7.056350,-7.931418,4.809598,-6.432206,3.589362,-7.474821,7.283927,-6.903305,6.211911,-2.444084,0.843492,-4.598386,5.229484,0.210681,-9.547383,-9.722822,7.337868,-3.986588,-5.070334,-2.753524,-1.171384,-6.612911,-6.452721,8.918529,8.040899,1.525471,9.622794,5.191507,4.556105,-7.342400,-4.089358,-9.969719,1.228234,-1.359321,-7.771358,5.633195,3.998528,-8.771742,2.288210,1.457928,3.401043,6.060242,-5.216593,-4.390264,-9.838341,1.584101,7.802608,-4.385355,-3.155647,2.787070,0.049161,-9.840408,-1.242626,-2.443522,-2.934898,-7.999257,-0.203135,-7.544187,-5.511909,8.497968,-8.454368,4.184358,-9.675763,-5.473963,-1.578554,7.154525,2.655419,5.478492,-9.811951,5.365558,7.462249,7.156528,7.746527,1.394520,-3.669078,-3.929795,3.488069,-4.897855,2.976198,1.319981,-1.893577,-0.315989,-9.241066,2.935101,2.087052,1.234243,-4.775990,3.334229,-8.423729,-9.469256,5.036052,7.155922,-8.179623,-8.675167,5.575542,-0.200069,7.273068,9.499776,-7.986062,-0.636510,2.990062,-2.987744,-5.228020,4.361197,-0.322681,2.291270,3.140954,7.420207,3.701241,5.698466,1.438967,-7.344070,-5.858138,-6.568256,4.368903,7.860410,-5.565094,-0.346996,2.537911,8.065849,9.851848,1.845849,-6.603611,1.283996,-8.221338,-2.394749,-7.365028,-5.800687,-7.767262,5.701982,-3.703897,-4.241075,-2.031658,7.421752,-7.445141,-3.028415,-3.556454,-3.884139,-7.179701,-6.475289,5.358234,-9.201765,6.848177,-0.668947,8.886262,3.953554,-8.716382,-6.205606,6.413150,-1.744522,-4.928193,2.158990,-1.817105,9.691143,2.394339,-2.539614,-0.274214,-9.591220,6.679202,2.992974,-7.264992,-2.870827,-2.830581,-5.032106,5.710668,-9.395492,9.313601,-5.801798,6.595707,-9.738112,0.079708,7.615129,3.358920,6.269757,6.635542,8.277004,-6.264025,-7.931386,-0.364690,-7.606867,-5.426068,4.004819,-5.977198,7.965943,-1.839329,7.900216,-9.001474,8.920240,-5.218973,6.390634,-6.478414,-5.630708,-1.771702,3.767529,6.911156,-7.063117,-5.885622,4.603396,4.533563,5.053828,-8.526704,6.018439,3.091543,-4.809690,-5.486806,6.919475,-3.775741,6.290878,4.051813,1.629275,-2.009938,-8.140077,0.409680,9.584194,-7.156956,-3.412167,1.708404,-9.059405,8.506930,8.208718,-3.889592,-0.142750,-5.430873,9.896352,-4.890559,-1.738730,7.367244,-0.921340,-1.746156,4.978786,-3.174706,2.509185,-0.115827,-0.550723], dtype = "float64")#candidate|13221|(490,)|const|float64
call_13220 = relay.TupleGetItem(func_7280_call(relay.reshape(const_13221.astype('float64'), [7, 7, 10])), 0)
call_13222 = relay.TupleGetItem(func_7282_call(relay.reshape(const_13221.astype('float64'), [7, 7, 10])), 0)
func_7714_call = mod.get_global_var('func_7714')
func_7715_call = mutated_mod.get_global_var('func_7715')
call_13225 = relay.TupleGetItem(func_7714_call(), 0)
call_13226 = relay.TupleGetItem(func_7715_call(), 0)
output = relay.Tuple([call_13206,call_13215,const_13216,const_13217,call_13220,const_13221,call_13225,])
output2 = relay.Tuple([call_13207,call_13218,const_13216,const_13217,call_13222,const_13221,call_13226,])
func_13239 = relay.Function([], output)
mod['func_13239'] = func_13239
mod = relay.transform.InferType()(mod)
mutated_mod['func_13239'] = func_13239
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13239_call = mutated_mod.get_global_var('func_13239')
call_13240 = func_13239_call()
output = call_13240
func_13241 = relay.Function([], output)
mutated_mod['func_13241'] = func_13241
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11546_call = mod.get_global_var('func_11546')
func_11548_call = mutated_mod.get_global_var('func_11548')
call_13254 = func_11546_call()
call_13255 = func_11546_call()
output = call_13254
output2 = call_13255
func_13258 = relay.Function([], output)
mod['func_13258'] = func_13258
mod = relay.transform.InferType()(mod)
mutated_mod['func_13258'] = func_13258
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13258_call = mutated_mod.get_global_var('func_13258')
call_13259 = func_13258_call()
output = call_13259
func_13260 = relay.Function([], output)
mutated_mod['func_13260'] = func_13260
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9514_call = mod.get_global_var('func_9514')
func_9516_call = mutated_mod.get_global_var('func_9516')
call_13263 = relay.TupleGetItem(func_9514_call(), 1)
call_13264 = relay.TupleGetItem(func_9516_call(), 1)
output = relay.Tuple([call_13263,])
output2 = relay.Tuple([call_13264,])
func_13270 = relay.Function([], output)
mod['func_13270'] = func_13270
mod = relay.transform.InferType()(mod)
output = func_13270()
func_13271 = relay.Function([], output)
mutated_mod['func_13271'] = func_13271
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11583_call = mod.get_global_var('func_11583')
func_11584_call = mutated_mod.get_global_var('func_11584')
call_13279 = relay.TupleGetItem(func_11583_call(), 0)
call_13280 = relay.TupleGetItem(func_11584_call(), 0)
func_13022_call = mod.get_global_var('func_13022')
func_13024_call = mutated_mod.get_global_var('func_13024')
call_13331 = relay.TupleGetItem(func_13022_call(), 1)
call_13332 = relay.TupleGetItem(func_13024_call(), 1)
func_7107_call = mod.get_global_var('func_7107')
func_7109_call = mutated_mod.get_global_var('func_7109')
var_13339 = relay.var("var_13339", dtype = "int8", shape = (416,))#candidate|13339|(416,)|var|int8
call_13338 = relay.TupleGetItem(func_7107_call(relay.reshape(var_13339.astype('int8'), [16, 13, 2])), 2)
call_13340 = relay.TupleGetItem(func_7109_call(relay.reshape(var_13339.astype('int8'), [16, 13, 2])), 2)
func_652_call = mod.get_global_var('func_652')
func_654_call = mutated_mod.get_global_var('func_654')
const_13362 = relay.const([[-7.284763],[-5.846682],[3.250711],[9.276042],[-3.691202],[7.933859],[4.951021],[-3.442309],[0.995913],[5.384389],[9.164259],[2.382315],[-1.403286],[-2.971797],[6.785972],[-0.354669],[-6.634457],[6.443714],[9.530791],[2.745407],[-7.597233],[7.575492],[4.388045],[-4.346964],[9.765581],[-3.465118],[5.512741],[2.561714],[-0.968202],[-0.802002],[-9.324818],[9.788946],[5.656592],[2.214170],[0.595428],[0.182629],[2.316496],[7.812305],[-8.200537],[9.381531],[-0.030345],[-4.890863],[1.248064],[7.656840],[-5.711216],[4.837454],[-0.529286],[8.821446],[-1.885332],[-6.283562],[1.379381],[3.663678],[-3.893123],[-4.791580],[8.113201],[5.421901],[1.509053],[9.906082],[7.145027],[-6.817141],[-1.142285],[0.453358],[-6.446815],[-4.106483],[4.333962],[-0.462228],[-7.443227],[5.757889],[-1.714804],[-2.025519],[9.107071],[2.313180],[4.572808],[-5.687497],[5.167720],[-7.921051],[-3.773870],[-5.269159],[1.098676],[5.275469],[8.465204],[1.972043],[-7.014908],[9.440686],[-9.120975],[-0.897804],[7.109845],[-1.426420],[-1.401421],[9.605068],[6.934212],[4.499956],[6.431968],[-1.114099],[-1.746649],[8.353296],[0.178390],[-0.198578],[0.938586],[8.886038],[0.383025],[-9.879405],[6.770706],[9.235622],[1.206688],[-2.632367],[0.089366],[-0.148171],[0.935389],[3.677360],[5.173010],[-4.888691],[8.007045],[-8.722137],[-5.460377],[8.512369],[9.340662],[-9.970175],[-3.819016],[-8.161281],[-6.491772],[6.006348],[-6.540253],[4.819361],[-5.015946],[5.400335],[2.329701],[6.705262],[-8.313312],[-1.521478],[7.606828],[-8.528171],[1.221591],[3.243833],[1.704751],[5.826099],[-1.917887],[4.649359],[-6.842438],[0.912524],[2.443694],[-8.283885],[-5.534134],[7.878730],[2.208053],[5.887257],[0.845221],[0.456160],[-3.988660],[3.980048],[-6.575795],[6.794251],[6.866154],[8.197404],[0.462590],[-1.989729],[-8.449541],[-1.005099],[-7.172466],[3.736332],[3.098631],[-4.578139],[1.188662],[6.415410],[1.545871],[7.616604],[1.842624],[-4.840385],[2.869111],[-4.049948],[-1.725925],[5.889346],[-9.675596],[4.936615],[0.150391],[-3.340838],[9.137689],[-5.863852],[9.511225],[-2.358176],[-6.280234],[-7.162865],[6.901711],[-3.702296],[3.668854],[4.214079],[9.371183],[-3.643108],[-3.553722],[6.824191],[-0.881123],[-4.103922],[-1.100994],[-5.236139],[-5.564122],[-0.172078],[-7.727034],[-3.693801],[-8.966570],[-6.702281],[-5.356538],[6.254829],[-4.440675],[4.333904],[-6.930848],[8.460490],[-7.843782],[-8.762540],[-9.821001],[-7.479731],[-7.495351],[6.149587],[-3.267494],[-1.618173],[-9.240933],[-1.762972],[-5.557928],[-9.226800],[0.545988],[-6.509929],[-0.851262],[-3.044799],[0.559265],[-8.302819],[-9.248755],[4.119264],[3.461541],[5.526817],[-9.300394],[-3.777287],[9.173717],[6.005539],[0.493571],[-2.268367],[1.387163],[-9.602000],[-7.969991],[7.978442],[9.801547],[6.554453],[-0.391193],[-2.896713],[3.209092],[3.206787],[7.204575],[-8.791624],[-1.569453],[0.621275],[-5.836926],[-1.228537],[-1.090781],[8.910971],[-3.581911],[-4.460164],[-9.215880],[3.294082],[-9.048079],[9.447840],[9.856178],[-5.978791],[-8.763758],[5.639815],[-2.931383],[-9.618595],[6.552871],[6.029857],[0.353530],[-6.789229],[1.908956],[-1.547256]], dtype = "float32")#candidate|13362|(270, 1)|const|float32
call_13361 = relay.TupleGetItem(func_652_call(relay.reshape(const_13362.astype('float32'), [9, 5, 6])), 0)
call_13363 = relay.TupleGetItem(func_654_call(relay.reshape(const_13362.astype('float32'), [9, 5, 6])), 0)
bop_13365 = relay.logical_and(var_13339.astype('bool'), const_13362.astype('bool')) # shape=(270, 416)
func_9492_call = mod.get_global_var('func_9492')
func_9493_call = mutated_mod.get_global_var('func_9493')
call_13370 = func_9492_call()
call_13371 = func_9492_call()
var_13373 = relay.var("var_13373", dtype = "float64", shape = (9, 5, 6))#candidate|13373|(9, 5, 6)|var|float64
bop_13374 = relay.subtract(call_13361.astype('uint32'), relay.reshape(var_13373.astype('uint32'), relay.shape_of(call_13361))) # shape=(9, 5, 6)
bop_13377 = relay.subtract(call_13363.astype('uint32'), relay.reshape(var_13373.astype('uint32'), relay.shape_of(call_13363))) # shape=(9, 5, 6)
uop_13382 = relay.log(const_13362.astype('float64')) # shape=(270, 1)
bop_13387 = relay.greater_equal(uop_13382.astype('bool'), relay.reshape(call_13361.astype('bool'), relay.shape_of(uop_13382))) # shape=(270, 1)
bop_13390 = relay.greater_equal(uop_13382.astype('bool'), relay.reshape(call_13363.astype('bool'), relay.shape_of(uop_13382))) # shape=(270, 1)
bop_13401 = relay.minimum(uop_13382.astype('float64'), relay.reshape(const_13362.astype('float64'), relay.shape_of(uop_13382))) # shape=(270, 1)
func_8028_call = mod.get_global_var('func_8028')
func_8030_call = mutated_mod.get_global_var('func_8030')
call_13404 = func_8028_call()
call_13405 = func_8028_call()
func_3445_call = mod.get_global_var('func_3445')
func_3448_call = mutated_mod.get_global_var('func_3448')
var_13415 = relay.var("var_13415", dtype = "float64", shape = (630,))#candidate|13415|(630,)|var|float64
call_13414 = relay.TupleGetItem(func_3445_call(relay.reshape(var_13415.astype('float64'), [9, 7, 10])), 0)
call_13416 = relay.TupleGetItem(func_3448_call(relay.reshape(var_13415.astype('float64'), [9, 7, 10])), 0)
var_13418 = relay.var("var_13418", dtype = "bool", shape = (270, 14))#candidate|13418|(270, 14)|var|bool
bop_13419 = relay.logical_xor(bop_13387.astype('uint16'), var_13418.astype('uint16')) # shape=(270, 14)
bop_13422 = relay.logical_xor(bop_13390.astype('uint16'), var_13418.astype('uint16')) # shape=(270, 14)
output = relay.Tuple([call_13279,call_13331,call_13338,bop_13365,call_13370,bop_13374,bop_13401,call_13404,call_13414,var_13415,bop_13419,])
output2 = relay.Tuple([call_13280,call_13332,call_13340,bop_13365,call_13371,bop_13377,bop_13401,call_13405,call_13416,var_13415,bop_13422,])
func_13426 = relay.Function([var_13339,var_13373,var_13415,var_13418,], output)
mod['func_13426'] = func_13426
mod = relay.transform.InferType()(mod)
var_13427 = relay.var("var_13427", dtype = "int8", shape = (416,))#candidate|13427|(416,)|var|int8
var_13428 = relay.var("var_13428", dtype = "float64", shape = (9, 5, 6))#candidate|13428|(9, 5, 6)|var|float64
var_13429 = relay.var("var_13429", dtype = "float64", shape = (630,))#candidate|13429|(630,)|var|float64
var_13430 = relay.var("var_13430", dtype = "bool", shape = (270, 14))#candidate|13430|(270, 14)|var|bool
output = func_13426(var_13427,var_13428,var_13429,var_13430,)
func_13431 = relay.Function([var_13427,var_13428,var_13429,var_13430,], output)
mutated_mod['func_13431'] = func_13431
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12768_call = mod.get_global_var('func_12768')
func_12770_call = mutated_mod.get_global_var('func_12770')
call_13458 = relay.TupleGetItem(func_12768_call(), 0)
call_13459 = relay.TupleGetItem(func_12770_call(), 0)
func_8889_call = mod.get_global_var('func_8889')
func_8891_call = mutated_mod.get_global_var('func_8891')
call_13469 = relay.TupleGetItem(func_8889_call(), 0)
call_13470 = relay.TupleGetItem(func_8891_call(), 0)
output = relay.Tuple([call_13458,call_13469,])
output2 = relay.Tuple([call_13459,call_13470,])
func_13482 = relay.Function([], output)
mod['func_13482'] = func_13482
mod = relay.transform.InferType()(mod)
mutated_mod['func_13482'] = func_13482
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13482_call = mutated_mod.get_global_var('func_13482')
call_13483 = func_13482_call()
output = call_13483
func_13484 = relay.Function([], output)
mutated_mod['func_13484'] = func_13484
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13493 = relay.var("var_13493", dtype = "int32", shape = (12, 4, 7))#candidate|13493|(12, 4, 7)|var|int32
var_13494 = relay.var("var_13494", dtype = "int32", shape = (12, 4, 7))#candidate|13494|(12, 4, 7)|var|int32
bop_13495 = relay.left_shift(var_13493.astype('int32'), relay.reshape(var_13494.astype('int32'), relay.shape_of(var_13493))) # shape=(12, 4, 7)
func_13006_call = mod.get_global_var('func_13006')
func_13007_call = mutated_mod.get_global_var('func_13007')
call_13516 = func_13006_call()
call_13517 = func_13006_call()
func_13022_call = mod.get_global_var('func_13022')
func_13024_call = mutated_mod.get_global_var('func_13024')
call_13530 = relay.TupleGetItem(func_13022_call(), 1)
call_13531 = relay.TupleGetItem(func_13024_call(), 1)
output = relay.Tuple([bop_13495,call_13516,call_13530,])
output2 = relay.Tuple([bop_13495,call_13517,call_13531,])
func_13543 = relay.Function([var_13493,var_13494,], output)
mod['func_13543'] = func_13543
mod = relay.transform.InferType()(mod)
var_13544 = relay.var("var_13544", dtype = "int32", shape = (12, 4, 7))#candidate|13544|(12, 4, 7)|var|int32
var_13545 = relay.var("var_13545", dtype = "int32", shape = (12, 4, 7))#candidate|13545|(12, 4, 7)|var|int32
output = func_13543(var_13544,var_13545,)
func_13546 = relay.Function([var_13544,var_13545,], output)
mutated_mod['func_13546'] = func_13546
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12096_call = mod.get_global_var('func_12096')
func_12098_call = mutated_mod.get_global_var('func_12098')
call_13551 = relay.TupleGetItem(func_12096_call(), 3)
call_13552 = relay.TupleGetItem(func_12098_call(), 3)
output = relay.Tuple([call_13551,])
output2 = relay.Tuple([call_13552,])
func_13553 = relay.Function([], output)
mod['func_13553'] = func_13553
mod = relay.transform.InferType()(mod)
mutated_mod['func_13553'] = func_13553
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13553_call = mutated_mod.get_global_var('func_13553')
call_13554 = func_13553_call()
output = call_13554
func_13555 = relay.Function([], output)
mutated_mod['func_13555'] = func_13555
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12378_call = mod.get_global_var('func_12378')
func_12380_call = mutated_mod.get_global_var('func_12380')
call_13606 = relay.TupleGetItem(func_12378_call(), 0)
call_13607 = relay.TupleGetItem(func_12380_call(), 0)
output = relay.Tuple([call_13606,])
output2 = relay.Tuple([call_13607,])
func_13615 = relay.Function([], output)
mod['func_13615'] = func_13615
mod = relay.transform.InferType()(mod)
mutated_mod['func_13615'] = func_13615
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13615_call = mutated_mod.get_global_var('func_13615')
call_13616 = func_13615_call()
output = call_13616
func_13617 = relay.Function([], output)
mutated_mod['func_13617'] = func_13617
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10876_call = mod.get_global_var('func_10876')
func_10878_call = mutated_mod.get_global_var('func_10878')
call_13624 = relay.TupleGetItem(func_10876_call(), 0)
call_13625 = relay.TupleGetItem(func_10878_call(), 0)
func_13136_call = mod.get_global_var('func_13136')
func_13139_call = mutated_mod.get_global_var('func_13139')
const_13633 = relay.const([-8.219832,2.177321,-5.415452,-1.162364,-7.295483,-6.052651,-2.367729,-1.316323,-3.648919,-0.355277,-4.133275,-5.217588,3.967436,1.840950,-6.946076,-8.061737,-8.589924,-9.915298,6.388421,2.434529,-0.808428,0.437581,6.945513,-6.224300,2.846472,-0.612880,5.544687,-1.377996,1.578891,7.829652,8.353969,8.007897,-4.072386,5.530265,-4.597503,4.647468,-0.697920,1.038864,9.069147,3.729630,-4.797497,-5.912584,6.247236,-2.153332,-0.506588,-4.424024,4.550704,8.078896,2.884921,8.063616,4.828214,-2.656614,-7.374028,-3.270649,-8.443270,-3.502612,4.189409,-2.388918,9.926312,7.361307,-6.544266,1.969253,9.895515,6.824937,1.475381,-5.459810,-3.381555,2.803657,-9.934919,-5.978096,6.599290,-9.714854,8.692974,2.280043,6.788946,6.971049,1.105864,-7.950815,5.307355,1.481299,-1.187299,-4.721666,0.263657,0.148238,9.522810,-3.684069,-8.267896,3.157212,8.530602,-7.591490,1.398875,-8.051297,5.535062,-2.258358,4.245958,0.298326,9.176264,-8.445298,2.791231,8.735686,1.066401,-2.697804,-7.442393,2.092017,-4.576411,-1.185748,5.484089,-5.489987,6.069331,-2.279823,0.367390,5.862835,2.874605,7.521282,7.817467,2.742734,-7.484406,0.896594,1.813339,-7.526831,-0.842170,8.206788,5.174491,-2.704978,-1.993136,9.465585,4.362802,4.409523,-7.381714,8.951375,1.786171,-0.458183,-0.650627,-7.894378,8.862546,-0.177677,2.920033,6.440982,4.820975,-3.070993,-5.619993,3.569846,-8.781575,-0.320432,9.514016,-3.713498,-0.245100,-5.662660,-9.068993,-6.697476,1.266548,-0.172817,5.316499,-8.602855,4.354755,-7.933821,-6.374453,3.390615,-3.043437,-8.321531,-2.209412,-0.076522,3.610735,9.929724,4.581960,6.746731,-2.569174,-9.994880,-3.261345,2.509213,2.119801,0.833011,6.604032,-2.762419,6.285927,-8.269657,6.447024,-9.254653,1.228212,5.067261,-5.081291,-7.923164,-1.170825,-5.300968,0.748465,-7.161276,2.399892,-7.318320,8.647899,5.424952,1.074409,-1.788051,-6.444285,-3.876953,-5.105242,5.914327,-8.027008,-3.465520,-3.618430,9.970439,-5.580979,-5.072461,-0.259896,-6.265772,5.949332,-0.574476,8.670035,5.140911,0.175660,-6.025778,2.299060,-8.673095,8.148389,-6.981712,4.204889,7.087713,-9.180579,-1.878950,-4.867884,-3.447995,-3.876600,7.769429,2.771048,6.771113,-9.251554,-6.256669,7.985735,9.490155,2.512506,-4.065779,-3.029349,-3.192585,6.451833,3.373290,-7.541530,7.655398,-7.313572,-1.244542,-2.067150,-2.930128,2.227007,-8.223627,-5.956883,8.872680,-1.511665,-3.693890,4.556500,0.181951,8.855902,9.167361,-4.345723,-2.335689,2.348108,-6.491706,9.801438,-3.244079,4.939911,4.239369,-5.200554,-8.271225,6.741553,7.614200,8.353363,2.987901,3.766333,-4.431769,-1.119899,-6.957470,-7.748243,4.430987,-1.410824,-7.770837,-7.439293,6.236951,5.913310,9.736842,-5.990036,8.964971,3.608335,5.480291,4.473618,-4.027424,-9.923272,8.694275,5.990063,-6.851325,-4.041924,-4.592029,9.121417,-7.656391,3.888719,7.789634,-3.471104,4.909498,3.695527,5.028092,1.698821,-7.652735,-0.466321,-1.988031,-2.365024,2.930524,3.681537,-7.232415,7.237517,2.283951,-1.704694,8.117792,-9.301309,3.333159,6.436360,-7.389246,-7.675770,-4.107497,7.301516,8.064676,-2.170902,-7.207282,-9.687887,-2.593447,6.301190,-9.450677,-6.780490,3.467903,-3.133181,-2.820056,5.987411,-0.447089,-1.683285,-3.708817,4.410808,0.257454,4.431323,-3.784132,-1.364967,4.625153,-1.864858,-4.529798,6.292071,1.706751,-4.501115,8.668884,8.705609,0.067947,8.231502,1.453043,2.922136,-8.929686,-6.559498,-6.400131,1.780927,9.086277,3.292127,-6.552112,8.520034,5.984261,3.180512,1.398198,-4.179019,-6.077230,-8.470043,6.810145,9.666016,-7.639627,-5.940459,-3.259084,7.970464,1.681488,0.426315,6.396174,-8.629136,-7.685293,-1.355952,-2.485263,8.032559,-3.096626,-0.649041,0.484138,9.187432,8.261864,3.460102,1.625273,5.272106,1.396950,-5.755550,7.806171,9.495891,-1.755754,2.267079,5.805650,-8.022482,4.940525,8.197810,-4.314349,-6.205953,-9.290727,4.081126,-1.254938,-1.057544,-3.536182,4.115702,0.147609,2.836298,-4.239310,-5.441077,7.977826,0.812729,9.829648,-3.249185,0.388035,-4.302808,-0.805013,0.968716,-2.626690,-2.030679,-1.947350,2.185564,3.837530,3.959664,6.076449,3.112992,-1.043913,5.100896,5.729811,6.361102,2.434873,-2.851172,-1.000341,-8.891936,0.500732,5.790054,-3.334688,-7.117647,9.463552,9.582935,5.399465,-3.679294,9.102039,-6.372965,3.712226,7.769844,5.255359,-7.608223,9.518974,-4.169552,9.834093,-2.461734,-6.834384,5.487459,7.090608,3.775344,5.517306,-8.487560,9.647240,0.100767,7.238489,5.143281,-8.196202,-8.785340,3.025264,7.710339,-8.165142,-6.294203,-3.336929,-5.142523,3.985546,-7.271154,0.718191,0.279066,2.024613,6.655196,-7.848819,9.942624,-0.631509,-5.001145,2.289322,1.012328,-2.616634,-7.624295,5.001041,-3.635695,-5.035057,-0.899996,8.106557,5.707974,-2.199995,0.343870,0.953642,-6.158208,-4.455680,4.655166,-7.264693,1.828006,8.779390,6.036699,0.372600,4.499551,-6.832960,0.521402,2.807746,5.316503,-9.849141,-8.659919,3.557191,0.639661,-5.439940,0.874827,4.033349,9.255737,7.164196,-8.876991,-8.959209,-4.657830,8.082796,-0.680041,-8.201980,-0.306180,1.838862,1.689814,6.964904,-5.489343,9.068869,-3.757572,1.227102,6.257202,-4.717657,0.397935,1.538855,-2.286502,0.115137,-6.838875,-2.749318,-6.948607,3.898923,-7.318409,5.799143,-0.040816,8.893921,0.732411,-3.038021,7.085038,-2.385906,1.188282,-7.980629,-4.650485,8.072005,-2.710091,-7.811294,8.007780,-3.161133,-5.471806,-6.839132,-2.550826,-1.576478,-9.572796,0.055935,5.662898,-5.872105,3.411133,-0.704454,7.092330,-0.811065,6.727021,-8.591630,3.274217,9.537064,-7.584500,-8.782864,8.589159,0.109369,-2.761903,8.634104,-4.405455,-7.596279,-2.202314,-1.005660,-4.096738,7.664322,1.720874,-4.467417,-0.264879,-6.614160,-9.757442,-5.256168,9.207967,5.335772,-0.321761,-9.826810,0.438105,-8.763420,5.033022,5.572603,-2.080199,-2.345193,-1.080954,-4.033133,-9.854859,-7.230228,2.519080,-5.968996,-0.447138,-5.865574,-1.130073,1.508797,-7.817353,0.709729,-7.217657,4.433590,-4.562726,-7.088662,6.239779,9.239163,-2.819580,-6.584550,-3.817256,-6.241263,-7.531530,0.470053,3.073831,-7.607781,0.593268,-8.409096,-0.964652,-5.741968,0.565500,-9.778428,4.423744,-3.928478,5.034536,2.835871,6.776446,-9.745017,3.416985,-4.474749,-7.889125,-6.306830,-9.727195,-0.825965,-2.709911,4.688298,6.593540,-4.727356,-4.788678,-6.564314,1.844922,7.257898,-0.107404,4.454458,-1.769287,-7.059085,-2.003539,-2.970140,3.091891,-2.160302,5.182088,9.680451,4.809449,4.149640,-4.071400,6.544196,1.885675,-1.530589,-9.359112,5.180596,2.545454,0.824840,-4.262614,4.391855,-0.584745,-3.104992,7.102877,5.815491,3.227821,-5.141740,-5.033603,-6.336715,4.422164,2.195062,-7.315349,-2.200101,3.370194,2.232032,2.371575,6.832544,-0.903495,0.300977,-8.481214,-1.566752,2.007575,4.240525,-6.613541,0.427934,3.951845,9.076010,-9.250577,3.983955,-8.192470,4.075521,9.319138,3.215268,-4.847841,-1.871463,1.470363,5.470503,8.798678,0.425748,-3.000975,3.934067,3.058659,7.821002,-7.681930,9.346571,1.788798,-1.373914,-4.649746,1.270417,-1.643739,8.905773,-6.770193,-5.444424,0.484252,-6.745579,4.452152,8.728271,-2.815896,-4.377366,-6.423494,0.350412,-0.402484,-7.634030,-0.890668,-0.526574,9.431148,-3.562802,-4.437149,-4.768858,-4.416372,9.712213,-3.450853,2.949148,7.051368,-2.143150,6.720642,3.986246,4.438905,-9.225688,9.831730,3.103379,-5.800366,1.097431,-2.348788,8.396510,-9.523978,-7.098448,7.973022,4.808364,4.470605,-0.424364,-8.338391,6.436655,-4.794135,6.534954,-7.354736,-9.763863,-1.643117,2.350050,2.086946,-9.271075,4.837262,1.129180,-7.954566,5.377688,-9.986168,-3.384227,4.172985,-3.539353,-6.842957,-3.633694,-9.281670,9.444672,-1.790808,-9.104707,5.305461,6.201852,7.244535,-6.916773,9.857142,-8.422898,6.890371,-0.328185,-7.492502,-8.489787,-5.741756,3.139829,-8.960103,-8.031529,6.798228,-2.973805,3.131060,7.556267,-0.971567,-2.201296,0.542157,8.424450,9.552454,0.376467,8.465374,-5.037363,-2.656937,-3.754464,2.988671,2.336139,1.973002,2.368037,9.997280,-8.206127,-6.968696,-7.374809,1.627518,7.781077,5.058956,-2.445936,-6.274576,0.365460,-2.528991,9.052022,-9.058495,-7.907579,9.579826,-5.203730,-9.820808,-5.974884,1.851626,-6.556120,4.305399,8.529894,-6.504633,0.846222,4.426287,-6.760669,-1.378773,9.974254,-1.067777,7.985257,2.565676,5.279702,-0.341970,0.504430,-5.343102,-3.510303,0.081296,-5.469673,6.047336,-8.041445,-1.763916,-9.506184,0.734862,6.127440,3.217238,5.484676,-4.195302,-8.865761,-6.811721,-5.317959,9.254462,-9.598357,4.226093,-0.467880,-3.103008,3.728991,1.417595,-3.454514,0.491787,5.578157,-6.307287,0.475530,9.049158,9.849293,9.226896,-2.700479,-8.137629,4.429128,0.253098,-4.788297,3.506249,7.384311,9.207288,0.639057,2.748348,2.507757,4.745397,6.181147,-9.234387,-2.794223,-8.567945,-4.078052,-2.822716,-7.041776,9.288201,0.354350,-6.969737,-4.146638,-2.649765,-9.322890,-9.585714,9.792563,7.103241,-0.026021,8.923103,4.855658,2.995192,-6.395419,-8.703340,5.409142,3.309865,-9.917109,6.449184,8.273476,-7.057409,-1.584993,5.564877,-5.058051,-4.056007,-4.416229,3.825972,4.178644,2.977560,-4.479998,6.349447,-9.395384,7.429511,-8.130532,9.621001,-8.707333,-5.287468,-4.954122,7.341448,-5.468495,9.917107,8.026913,-4.216920,3.854122,2.431909,3.744229,4.535976,7.879328,-8.500962,-6.600351,-3.313755,7.847910,6.009643,-6.369344,-2.801713,-2.696854,-0.269354,1.119869,-7.674654,-3.619276,-1.465132,-6.624123,8.209099,-4.577862,-6.444270,1.397281,-3.350806,7.084340,-7.593112,-1.841310,-1.654122,-5.649781,-5.524717,0.021110,-8.181529,-4.410040,-5.317624,2.039811,1.133538,0.348373,-2.275818,-9.641163,-3.417050,-1.966598,9.171622,1.354578,8.144580,-9.360945,1.119009,-4.218400,-0.496634,6.544881,-8.582741,-3.776275,-2.768588,2.387703,7.023200,6.846516,2.734695,-8.954052,-2.013779,-1.548190,-1.367441,-2.734102,-8.867422,7.953765,7.206409,0.164810,7.799041,0.621776,-4.821357,-2.835747,-3.943672,0.209416,9.480787,8.267851,9.278519,7.460234,-3.948822,-3.440608,8.769733,1.823656,-8.913504,-4.806152,7.599784,0.070992,-3.710392,5.478539,-6.302803,-2.870347,-6.133751,9.474711,1.308684,9.469411,-5.852772,-7.716211,-7.212327,7.555393,4.232323,-5.258046,9.313924,-3.246707,-3.985290,7.448817,-8.082938,-9.302767,6.064232,-6.585424,9.952201,-5.717046,2.351893,5.603129,3.430938,-8.535914,-3.026284,3.351419,7.121044,4.309592,7.764423,-7.199542,-4.342289,-9.128861,-9.306387,-9.871897,1.707832,-1.974330,8.488749,-1.055473,-9.513529,8.948328,1.883310,-3.666004,-0.729309,-0.118809,-8.701018,3.302907,-9.528271,-9.390525,1.778568,-9.502448,-3.982180,4.558119,-2.270385,-9.862070,6.400042,2.712192,-1.725151,1.120177,7.317522,-8.376673,-5.944706,-4.369666,0.158865,4.085034,0.073700,7.830139,-3.781079,7.439741,-8.271352,1.826379,-5.238036,3.577790,9.002403,8.049336,-1.314922,-2.932526,-6.504217,0.413993,-9.788784,-9.785364,-0.031937,7.673484,-9.991244,9.533847,-0.117535,-3.076744,6.508333,6.333757,-1.100509,4.206988,-1.561124,6.251670,-5.971553,-2.071733,-3.762235,-1.098358,9.815229,6.508178,2.403281,-1.508587,-2.367260,-7.218559,-2.991864,-3.120582,-6.047716,-4.804556,7.574201,5.915424,-6.716055,-2.847511,-4.448320,-2.214397,-0.499256,-4.066979,-7.886624,4.707160,2.305939,1.769617,5.826190,9.127039,9.577262,-9.345189,9.776004,5.861603,-8.867779,-9.614938,-7.074129,-5.851959,0.949511,-1.529119,5.193385,-2.101833,2.580696,2.737470,4.249327,2.062943,-7.123843,5.942456,3.168475,1.089453,9.066518,6.304960,-7.134166,-9.436859,-2.470943,-7.106148,2.343085,-5.390179,-9.952713,1.720822,-5.553436,-7.371786,6.858943,7.541440,-4.379269,-1.146059,-7.055030,-9.111091,3.320685,-7.000518,0.865658,7.420258,0.589223,-8.949289,0.348849,4.609192,-3.705585,-4.207329,-3.855644,-3.161619,3.920317,-4.939697,-1.166431,-6.358597,8.015259,6.473093,7.696709,1.704144,5.227721,-9.854079,-7.556289,-9.619986,-5.573490,-6.231646,-9.888772,6.067862,6.001810,-8.193270,-2.923325,7.089359,1.506894,9.785705,6.786005,-6.898859,-4.077228,-1.150433,-8.308825,9.310385,7.116202,6.003322,-3.415446,3.462822,-5.399306,-2.825218,0.452394,5.245224,-9.364663,3.062017,7.985617,-1.720615,3.053074,-3.637312,-7.871877,-7.908668,3.911685,5.435208,-6.804919,1.723853,-8.173823,-2.228985,3.063144,0.802883,-7.241905,-0.472733,-4.482867,6.653960,3.685440,8.887760,0.349415,4.085370,-5.666747,-8.397542,-8.272964,2.471629,2.261738,-7.246838,6.695907,7.678236,-4.703333,-4.769806,-7.354322,-3.977610,4.135992,7.280040,4.502471,-7.738041,-4.845489,2.647274,-7.577893,6.395020,-4.576593,8.678694,4.182860,5.289587,-3.138036,-1.618562,7.975188,-1.927395,0.590438,6.140002,-4.738508,-1.717377,-4.935723,2.060285,-2.510776,6.343319,-7.591470,8.161532,8.821147,-8.957627,-9.327832,-3.649682,9.042573,-5.907223,0.735019,-9.685669,6.103787,-1.573678,-4.950551,1.531606,-7.358631,9.938967,3.221445,8.231067,7.081163,-6.964674,-1.998022,7.945013,9.412372,-3.380966,6.572019,-7.328343,2.053823,-8.663297,5.491481,2.278518,-1.673966,-9.933040,0.902902,-5.753375,2.741459,-3.807257,-6.989451,-6.203058,9.569934,-4.469057,1.904208,-2.951967,0.658166,-4.757575,-5.650841,-6.675819,-7.560352,-2.280029,-6.964371,-5.372273,8.444216,-4.281277,-9.297204,1.044791,5.339346,-5.193139,-1.457544,-3.196537,6.033694,-8.883028,-0.388881,0.286471,-9.531934,-2.325350,-0.048539,-0.603608,9.609542,7.664741,5.874858,4.751670,-4.354660,0.627982,-7.718762,-9.052105,-9.451419,8.283961,-9.777431,1.153866,-9.842051,8.422261,-0.665870,-4.779877,-2.544675,2.451680,-9.940817,0.572047,-5.947502,-9.106683,-4.661277,6.725306,0.998017,2.824287,3.006368,-6.615979,-9.679167,-0.892373,-1.526913,-4.891664,9.841599,-4.982878,-0.811194,-4.391713,1.231245,-2.528210,-0.079130,-0.959715,-6.241936,9.525467,5.431674,-4.204991,7.404330,-1.375801,1.207716,9.146966,0.374362,7.156901,7.310501,-2.705804,-8.999327,-8.483373,-7.257367,-8.257466,-8.169419,-3.619813,-0.925394,6.046894,-7.038214,8.349264,-2.725214,-0.016565,-2.876836,5.711505,2.347182,-0.047136,-7.268921,-2.132027,-9.627061,-5.255445,-1.528120,-6.834614,5.936196,9.382889,6.995346,6.982019,2.938089,4.928117,9.543479,5.347714,0.504375,-5.193350,-1.548683,-7.495669,-1.304360,8.714309,-2.598785,9.354891,9.467611,9.680236,6.668483,-0.016099,-4.716418,-3.273736,-1.614048,-7.036400,-1.782173,-5.916458,-4.870100,4.443689,4.736248,3.954971,-3.840360,7.946386,5.842568,-6.402335,9.930903,0.837174,1.290002,-6.301209,1.649287,3.512187,6.937979,-3.046748,-7.533120,-8.868775,-9.516646,9.440461,-2.838086,-1.136489,6.071763,-5.903406,5.733385,-6.086037,-9.427778,3.549390,-0.516827,6.703700,-4.057723,4.325234,2.113888,-8.488301,4.028249,-0.370041,-5.107001,-3.841212,4.831950,-3.764403,-1.539696,7.002920,9.579724,9.268112,6.171046,-7.135715,-2.722623,5.419494,9.144783,-5.029002,3.263301,4.863238,5.294678,-6.963813,-1.594088,-5.599642,6.163695,9.523909,-1.169179,-6.266181,5.987849,7.569597,-2.091551,7.188171,-8.817763,7.442917,-2.008310,4.097374,-8.869040,5.891782,-3.496855,0.903056,9.352081,3.681790,8.084295,-8.730837,-3.235335,8.684122,-1.854724,-6.147232,-2.984065,-9.838538,-9.759994,-1.514335,5.349529,-4.682178,8.339800,-9.284001,-9.650267,-4.213075,9.776515,7.218813,-1.908254,8.310703,2.508477,1.693629,8.770809,1.010575,5.762350,-0.420227,5.143942,4.427958,-8.081265,0.311657,6.290364,5.122558,-4.777518,-6.003455,7.053449,5.186820,8.893568,-2.994558,9.475938,1.805248,2.784752,6.035493,-0.169014,-7.762790,-3.434175,7.884049,5.750670,8.876366,0.809180,5.385286,3.068928,-2.790409,7.559968,4.762073,-2.213933,-7.083044,-4.287330,-9.079558,-5.499660,5.495550,-6.574799,-8.301145,7.780793,-4.881235,9.126108,1.049542,-2.915660,6.204175,-6.201349,-4.605981,0.854222,4.098698,2.209451,-4.796451,-8.594944,-8.311815,0.230098,-8.528158,-7.590893,3.220621,-4.380925,-8.629074,-6.807481,7.969295,-8.711035,5.428327,-9.218246,0.841092,-7.476359,2.913873,-9.589383,-9.962692,-0.305890,-2.069799,6.502718,-8.714320,2.824636,-3.705875,-1.798820,-6.614015,-5.424989,7.259979,-4.042209,-5.319743,-2.485899,8.276101,8.763634,-2.419857,6.784465,3.221255,0.741316,-0.045531,-3.897757,-2.342067,-0.899942,-0.333118,8.550680,9.345210,-4.332063,-0.498067,2.317521,2.977695,3.939027,-2.996722,6.874126,6.064220,9.047575,1.410776,5.383628,8.022022,-0.924995,-0.551913,4.163151,-0.912870,2.369840,-0.149388,-4.305129,1.347012,-9.383675,-6.196153,0.413898,-3.715046,-6.911722,7.433400,5.308481,8.386050,-2.453476,4.614941,-5.750694,4.294339,7.014944,-1.950082,-2.495719,0.305748,-9.856086,-3.796980,-6.924091,-6.110408,-2.171818,-5.059365,-0.617484,7.347499,2.307374,-1.233750,-9.357437,0.923805,-8.540284,-9.839209,8.195834,5.577561,1.587822,-6.886301,-4.375710,-6.749690,-9.018000,-4.142041,3.797079,2.145821,8.514405,-9.769361,3.429338,1.579502,0.095448,-6.813622,0.259792,-5.981196,7.167220,-7.484339,-7.894908,-3.388902,3.308978,4.973675,4.025646,8.609252,0.846099,-3.391976,3.978186,-4.886170,6.601273,-4.314254,-0.685099,-0.136209,7.858126,2.199175,9.146925,-3.941717,-8.899360,5.434134,-0.596943,-3.116228,-3.201959,-2.009893,-8.055755,8.676838,-2.094267,2.887946,-0.587856,-1.220172,-2.165050,7.775981,-3.227523,0.370903,-7.912932,-1.249967,0.794093,-8.937139,9.399174,-3.753441,5.071047,-9.612575,8.148225,-0.068538,4.947992,0.680017,-2.028644,1.321315,-3.524989,1.895289,-0.108538,4.575388,5.724987,2.469076,-2.905551,-0.781150,0.768592,0.903269,-5.096460,2.329278,7.069553,-1.079833,9.882853,-2.405827,-8.467293,-9.321890,5.132938,-7.383790,8.776519,1.020787,6.653588,4.433467,-7.273978,1.824904,-4.343433,-4.282054,6.355049,9.222523,7.171971,-1.357248,-0.859036,-3.600486,-6.288921,-3.405886,-6.031184,-1.853756,1.746897,3.716378,-5.845003,3.783905,2.475079,-5.166767,-5.471052,4.180297,5.915669,7.903402,1.095250,4.183825,-4.932391,5.955708,-4.924268,8.262467,-3.979206,2.670836,5.859907,9.883595,1.891809,-3.876941,-2.744165,8.667435,0.576796,9.719946,-5.605667,9.501250,-7.091905,5.867857,-2.755375,-9.132121,0.652988,0.708133,-6.135850,3.299582,7.026564,2.711338,-6.735095,8.750467,2.233394,-8.144800,-5.189602,2.182108,-8.460802,7.734534,1.104751,7.327934,7.423148,4.444806,-2.189895,4.617906,-3.174995,1.136344,2.785841,8.308033,1.651343,-8.059585,0.008261,-7.377387,4.161593,-1.042761,7.391392,6.435312,-6.362251,7.835243,-2.256472,-7.830960,7.983793,1.691093,6.264538,-0.195336,-0.348892,-4.005652,-3.523003,3.431727,-5.019220,-7.635565,-3.747952,-6.344104,-6.968088,6.885939,3.683817,-5.432113,0.365039,4.131266,-7.879735,0.835016,4.462685,-3.341213,-8.750314,9.853066,4.068648,-1.921430,3.060646,-6.277645,-4.122812,-1.693283,-9.673993,0.176494,-7.654382,-4.822241,-1.900674,1.940744,4.902118,9.222657,-8.955871,-9.519802,-6.807854,3.516876,1.701994,9.228505,2.108124,4.907924,-4.074098,1.286640,-4.187473,3.781575,7.529275,-0.511818,-5.181285,-4.277299,-9.317905,-3.785752,6.034859,-0.103267,-0.929837,4.596530,-3.526196,4.629821,8.759953,3.543597,-8.867463,-4.002747,-1.855664,-2.439893,-8.497646,1.858192,2.544420,0.230740,1.922800,4.508922,7.647085,6.261123,-5.640331,3.717512,0.164340,7.071768,0.053835,8.665843,-7.521313,1.747261,-7.358054,6.143756,-0.852865,-8.427438,-9.937492,5.551874,-7.119713,2.899843,6.762491,-1.117531,-2.904127,-7.109608,4.653153,9.052564,9.906920,-3.414602,3.519806,4.459244,-4.021196,7.703875,-4.648430,3.689191,5.455483,2.758176,3.515239,0.359495,3.314092,2.142819,4.566161,-1.599317,2.069111,-3.787100,-5.335069,6.196886,8.224334,9.658201,1.063633,1.510895,-9.478903,-7.351158,-8.620612,7.352614,0.352744,1.353315,5.148750,-8.562196,-6.829918,5.557159,-6.643933,-6.806282,6.127632,8.264954,-2.804831,3.902734,7.388001,-2.416308,9.223459,2.861949,-1.166529,3.333429,-3.134726,2.131040,-8.593006,0.464227,9.338627,-3.327842,-5.963164,2.277110,-0.221540,2.140717,-5.296231,-6.102111,5.323487,5.252353,-3.207640,5.537477,-2.629849,4.780555,5.462214,6.718568,-1.959565,9.317468,-2.304454,9.223217,1.444180,-8.755795,-3.389664,1.800434,6.025780,-3.157962,4.793549,-6.927608,-9.578598,-9.577814,2.933691,-5.515955,9.238802,-3.447990,-8.516939,1.148454,-0.954248,-7.772681,-1.452431,-9.707997,-1.914058,3.581708,-1.507393,2.161647,8.877193,-5.141672,9.085442,6.999663,-2.946230,-8.828588,1.859539,-1.548123,-1.464886,0.563782,-1.844051,-9.929838,-4.860724,-6.697926,9.757040,0.951638,9.803025,5.657863,-4.448362,4.207825,-5.509040,0.351741,0.203689,0.073982,-2.602734,-2.939915,-5.484791,7.097987,-8.005769,7.150192,6.786195,9.370275,-9.134575,-6.056042,6.135754,9.573813,5.674443,6.797833,-0.315647,-4.282343,7.384303,3.306739,3.680684,-6.527593,-4.302832,-9.559847,-9.010385,-6.281417,-8.797279,6.565109,9.788981,-3.216482,-6.870263,5.525443,-4.515153,3.598953,0.339409,-3.055569,-8.213807,-7.204638,-1.825047,-4.191393,-5.629043,-6.981966,4.022542,-5.204699,-3.676254,-9.577373,1.222726,-3.813479,0.763903,5.602878,-3.688286,-4.301531,1.511654,-9.278762,1.838136,-5.885706,7.630864,-0.304091,2.274502,0.724636,2.190748,-7.526277,-4.183494,8.694698,-5.937395,-4.482827,-7.937290,4.373920,9.474371,2.520125,0.304492,4.068448,-7.599185,3.032120,-0.245710,-5.448815,-9.190059,-6.718461,9.004273,4.082855,4.096410,-4.292642,-0.132474,7.590531,7.925895,-1.904840,-6.058100,-2.115972,5.747626,-6.348034,-3.026008,-4.410916,0.244825,8.448849,-3.061696,2.675444,-8.974561,5.882327,2.006799,3.906675,5.881742,8.637454,1.774826,1.176261,-1.607053,-8.861234,-4.242115,3.625047,-7.464690,-3.556579,5.052028,-2.129836,9.854196,-7.895886,-8.556527,-6.305768,8.340957,6.738327,7.082124,-7.941199,2.619236,-8.001080,4.238762,4.296869,8.347344,-2.111529,8.019073,-3.468685,-8.638191,-7.563358,-1.018375,-0.316830,-3.720589,-7.810241,-8.889957,2.999556,-7.975935,4.563156,-0.845412,1.405054,-8.382236,-9.249028,-9.409855,5.569550,-4.655001,4.574980,-9.222929,-8.677172,7.689239,-0.753709,1.695691,9.488044,4.355717,9.968209,-5.360181,9.921085,-2.757083,-5.306663,0.385825,6.064921], dtype = "float32")#candidate|13633|(2250,)|const|float32
call_13632 = relay.TupleGetItem(func_13136_call(relay.reshape(const_13633.astype('float32'), [1, 2250])), 1)
call_13634 = relay.TupleGetItem(func_13139_call(relay.reshape(const_13633.astype('float32'), [1, 2250])), 1)
func_7896_call = mod.get_global_var('func_7896')
func_7899_call = mutated_mod.get_global_var('func_7899')
const_13661 = relay.const([3,-6,9,-6,-2,4,7,-4,8,9,1,2,-4,6,-6,3,-10,4,-9,-8,9,2,8,2,-6,-9,8,-4,4,-10,-5,-2,2,-2,6,1,-6,3,9,-9,-8,-1,-10,9,-6,-6,1,-6,4,3,10,7,-9,7,6,2,-6,10,-9,-10,7,-6,6,1,-9,-3,-10,-4,-1,-6,1,-10,-2,-3,-9,-6,10,5,1,9,-2,-1,-3,1,10,-10,5,5,10,6,2,-6,-3,10,6,-4,-2,-1,1,-10,9,-1,-1,10,4,-1,-10,-1,-9,-7,-10,5,7,8,8,-9,7,-1,-6,-10,-9,-9,1,1,10,-6,8,-6,-7,-3,4,10,-3,10,2,-2,-2,-1,10,4,8,2,-9,-3,3,-1,-9,6,4,1,-7,-8,-3,-3,-10,3,-7,8,-1,4,6,-9,-6,6,5,5,-10,3,3,6,-5,3,-4,-7,1,-9,7,-3,6,-3,9,-1,3,2,-1,1,-9,-7,-5,-8,-8,-3,-6,7,8,-3,10,-5,9,10,8,-8,-6,-10,1,-9,-6,5,-1,-5,2,5,1,4,-9,-2,6,4,4,6,3,-6,10,-4,-4,1,7,10,5,-10,10,1,-9,-1,8,-10,-3,-3,-8,5,6,-1,-1,2,9,-10,3,7,6,-7,-3,9,-3,-10,-9,-4,2,-7,8,-1,-1,-6,-4,-6,-10,7,10,-1,8,4,8,-2,5,5,9,2,1,-6,-2,-7,5,-6,-2,8,10,-9,9,-1,3,10,6,-3,2,3,-2,-6,4,4,1,-8,-1,3,10,-6,2,4,8,6,-9,-3,7,9,-3,9,-4,-7,6,7,-4,9,-1,-7,-2,-10,-1,-3,-4,2,-7,1,10,10,-8,1,2,-1,3,-1,-8,-8,-3,7,-5,-5,2,6,4,7,3,-5,6,-7,3,-5,-8,-9,-4,-10,-7,-1,-1,-10,-3,8,-3,-10,-8,-1,4,1,1,-4,-10,3,-1,6,-1,6,3,9,-6,8,-3,-6,-7,8,-9,-10,-9,6,-9,-10,1,6,10,4,4,10,1,4,-5,5,-7,2,-9,-5,-5,1,-1,-1,-2,-8,7,6,4,-7,4,-2,8,-6,6,-7,6,-6,7,-9,4,-7,-5,-10,-3,-9,-10,6,7,-7,3,4,4,-6,7,1,-3,2,-9,9,1,9], dtype = "uint64")#candidate|13661|(448,)|const|uint64
call_13660 = relay.TupleGetItem(func_7896_call(relay.reshape(const_13661.astype('uint64'), [56, 8])), 2)
call_13662 = relay.TupleGetItem(func_7899_call(relay.reshape(const_13661.astype('uint64'), [56, 8])), 2)
func_12967_call = mod.get_global_var('func_12967')
func_12968_call = mutated_mod.get_global_var('func_12968')
call_13670 = relay.TupleGetItem(func_12967_call(), 0)
call_13671 = relay.TupleGetItem(func_12968_call(), 0)
func_9795_call = mod.get_global_var('func_9795')
func_9796_call = mutated_mod.get_global_var('func_9796')
call_13683 = func_9795_call()
call_13684 = func_9795_call()
func_9447_call = mod.get_global_var('func_9447')
func_9449_call = mutated_mod.get_global_var('func_9449')
call_13694 = func_9447_call()
call_13695 = func_9447_call()
func_13426_call = mod.get_global_var('func_13426')
func_13431_call = mutated_mod.get_global_var('func_13431')
var_13697 = relay.var("var_13697", dtype = "int8", shape = (416,))#candidate|13697|(416,)|var|int8
const_13698 = relay.const([[7.070554,-6.594461,-7.134936,3.413870,7.501633,9.451193,-1.566097,6.917059,-0.897920,1.095445,-3.720564,8.715191,-2.162376,7.581162,8.308170,7.800547,8.464587,-1.534983,-1.080303,-1.220887,-1.590331,6.274834,-0.915405,4.542925,9.661238,1.003862,6.911264,9.746491,4.196350,-9.093961,-2.020765,-3.824848,8.286873,0.300649,-2.256662,-8.349372,-6.132807,0.184748,-1.439012,2.556448,3.752153,-2.098773,7.911437,-3.471046,-4.932702],[7.571937,5.305943,-7.075795,-1.718378,-3.018454,1.670500,-1.171179,4.400931,5.088174,-4.049276,6.198596,8.874785,-2.833330,7.595778,7.575081,6.850113,-4.580795,-8.314499,-7.221337,5.130413,9.636737,8.454229,-7.245904,-5.646739,-7.845057,-5.958001,-6.240167,1.573077,-2.355752,-9.439706,-3.886976,-7.885604,-5.836048,-1.355926,8.587330,8.643299,-2.614125,-7.650602,8.871476,-7.985534,-5.126760,2.692420,-3.154828,0.473843,-4.811050],[7.241743,-9.305858,7.812090,-6.013860,3.612635,6.790972,5.301172,4.414563,-1.117687,-8.832835,-8.930872,1.651592,7.399577,9.627161,-2.635130,-6.801434,-9.438140,4.843271,4.300828,7.452869,-0.445382,-6.235041,6.460259,0.167623,-7.787698,-7.997406,-0.991591,0.346293,-9.360701,4.792536,-0.804811,-5.259866,-8.904721,-9.665895,3.963291,-7.832639,3.687275,5.788969,-3.180354,-9.189465,-5.160938,4.177669,1.228579,2.284584,7.425729],[-7.706659,-3.641809,0.952342,3.930419,7.774027,3.792603,-4.356119,-6.693036,7.787501,-5.023279,4.385252,1.633382,-5.735748,8.942337,-3.725767,-9.020672,-6.482261,7.587799,0.335263,-5.173200,2.116652,-5.398969,-4.703340,-8.341194,2.677719,4.544617,4.561773,7.416243,5.485354,1.390871,-5.000169,3.988166,4.161845,-8.004335,5.295550,3.082796,-7.084399,-8.731880,-0.416652,4.870500,0.482942,-1.813723,4.531091,-6.764230,0.081911],[-3.883431,8.344778,-3.880118,-9.803894,1.525896,1.682545,-1.695579,-7.785717,-3.489627,6.851618,-1.008992,5.168022,-3.430764,5.596214,5.728260,-2.114767,-4.678748,2.833170,-6.000928,6.652554,4.719441,-2.975574,-4.593037,-8.428438,3.481128,-0.831147,6.380642,3.248969,-5.250700,-8.934458,9.273127,9.083900,3.618427,-3.787704,-0.345396,2.605009,8.636461,-7.153480,3.915279,-1.099331,-9.780814,-8.498621,-9.132372,1.224288,-2.053512],[7.127129,7.079436,6.707076,9.987086,-7.514001,8.426150,-9.687374,-4.460610,8.736435,7.587737,-2.174962,-9.690999,8.518174,-8.124249,-3.253184,1.516599,-0.573936,-6.420286,3.230867,-7.417713,-1.549705,0.069229,-1.888931,6.928271,8.011381,9.741163,-8.081810,3.935260,0.555345,0.480581,-8.482888,0.869402,1.836387,3.039246,1.869258,-8.668119,9.972964,-8.273247,9.659909,9.733784,5.839626,6.449956,3.137743,4.856065,-8.778581]], dtype = "float64")#candidate|13698|(6, 45)|const|float64
var_13699 = relay.var("var_13699", dtype = "float64", shape = (630,))#candidate|13699|(630,)|var|float64
var_13700 = relay.var("var_13700", dtype = "bool", shape = (3780,))#candidate|13700|(3780,)|var|bool
call_13696 = relay.TupleGetItem(func_13426_call(relay.reshape(var_13697.astype('int8'), [416,]), relay.reshape(const_13698.astype('float64'), [9, 5, 6]), relay.reshape(var_13699.astype('float64'), [630,]), relay.reshape(var_13700.astype('bool'), [270, 14]), ), 5)
call_13701 = relay.TupleGetItem(func_13431_call(relay.reshape(var_13697.astype('int8'), [416,]), relay.reshape(const_13698.astype('float64'), [9, 5, 6]), relay.reshape(var_13699.astype('float64'), [630,]), relay.reshape(var_13700.astype('bool'), [270, 14]), ), 5)
const_13714 = relay.const([False,False,False,False,True,False,False,True,True,True,False,True,False,False,True,False,False,False,True,False,False,False,False,True,True,False,True,False,True,False,False,True,False,False,True,False,False,True,True,False,True,True,True,True,True,False,True,True,False,False,False,False,True,False,True,False,False,True,False,True,True,False,False,True,False,True,True,True,True,False,True,False,True,False,True,True,True,False,False,True,False,False,False,True,False,True,False,False,False,False,True,True,True,True,True,True,True,False,False,False,True,True,False,False,False,True,True,True,True,False,False,True,False,False,True,True,False,True,True,False,True,True,False,False,False,True,False,True,True,False,True,False,False,True,True,False,False,False,True,True,False,True,True,True,False,False,False,False,True,True,False,False,False,False,True,True,True,True,False,True,True,False,True,True,True,False,True,False,True,False,True,True,False,False,False,False,False,False,False,True,False,False,False,False,True,True,True,False,False,False,True,True,False,True,True,True,True,False,True,False,True,True,False,True,True,False,True,False,True,True,True,True,True,True,True,False,False,True,True,False,True,False,False,True,True,True,False,True,True,False,True,False,True,True,True,False,False,False,False,True,True,False,False,True,True,True,True,False,False,False,False,True,True,False,False,False,True,True,True,True,True,True,True,False,False,True,False,False,True,True,True,True,True,True,False,False,True,True,False,True,False,True,True,True,True,True,True,True,False,True,False,True,False,True,True,False,False,False,True,False,True,False,True,False,False,True,False,True,False,True,False,False,False,True,True,True,True,True,False,True,False,False,True,False,False,False,False,False,False,True,False,True,False,True,True,False,False,False,True,True,True,True,True,True,True,True,False,False,False,True,True,False,True,False,False,True,True,False,False,True,False,False,True,False,False,False,False,False,False,True,True,True,False,True,False,True,False,True,True,False,False,True,False,True,True,False,True,False,False,True,False,False,True,True,False,True,True,False,False,False,True,True,True,False,False,False,True,False,True,True,False,True,False,False,False,True,False,True,False,True,False,False,True,False,True,False,True,False,False,True,False,False,True,False,False,True,False,True,False,True,False,False,False,False,True,False,False,True,False,False,False,False,False,False,False,True,False,False,True,False,True,False,False,False,False,False,False,False,False,False,True,False,False,True,True,True,True,True,True,True,True,True,False,True,True,False,False,True,False,True,False,False,True,False,False,True,True,False,True,True,False,False,True,True,True,False,False,True,True,True,False,False,True,False,True,False,True,True,False,True,True,False,True,False,False,False,False,True,False,True,False,True,False,False,False,True,False,False,False,False,False,True,False,True,True,False,True,False,True,True,False,False,True,True,True,False,True,True,True,False,False,False,True,False,False,True,False,False,True,False,False,True,True,True,False,True,True,False,True,False,True,True,True,True,True,False,True,False,True,False,False,True,False,True,False,False,False,False,True,False,False,True,True,False,False,False,True,True,False,False,False,True,False,True,False,True,True,True,True,False,False,False,True,False,True,True,True,False,True,False,False,False,True,True,False,False,True,True,True,True,True,True,True,True,False,True,False,True,True,False,True,True,False,True,True,True,False,False,True,False,False,True,False,False,True,False,False,False,True,True,False,False,True,True,False,True,False,False,True,True,False,False,False,False,True,False,False,False,False,True,False,True,True,False,True,False,False,True,False,True,False,False,True,True,True,True,True,False,False,False,True,False,False,False,True,False,False,True,False,False,False,False,True,True,False,False,True,False,True,False,True,False,False,False,True,False,False,False,False,False,False,True,False,True,True,True,True,True,False,True,False,True,True,True,False,True,False,False,True,True,False,False,True,False,False,True,False,False,True,False,False,False,False,True,True,True,False,False,True,True,True,True,False,False,False,False,True,False,False,False,False,False,False,True,True,False,False,True,True,False,False,True,False,False,False,True,True,True,True,False,False,False,True,False,False,False,False,True,False,True,True,False,True,True,False,False,True,False,False,False,False,False,False,False,False,False,True,True,True,False,False,True,False,True,True,False,True,False,True,False,True,False,False,False,True,False,True,True,True,True,True,True,True,True,False,True,False,True,False,True,False,False,True,False,False,False,True,True,False,False,True,True,True,False,False,False,False,True,True,True,False,True,True,True,False,True,False,False,False,False,False,False,True,True,True,True,True,False,False,False,False,False,True,True,False,True,False,False,False,True,False,False,False,True,True,True,False,True,True,False,False,True,True,True,False,False,False,False,False,False,False,False,False,True,False,False,True,False,True,True,True,True,False,False,False,True,True,False,True,False,False,True,False,True,False,False,True,False,False,True,False,False,False,True,False,False,True,True,False,False,False,True,True,False,True,True,False,False,True,True,True,False,False,True,True,False,True,True,False,False,False,False,False,False,True,False,False,True,True,False,True,False,False,True,False,True,False,False,False,False,True,True,False,True,False,True,True,True,False,True,True,True,False,False,True,True,False,False,False,False,False,False,False,False,True,False,False,True,True,False,True,False,True,True,False,True,True,True,False,True,True,False,False,True,False,False,False,False,False,True,False,False,True,False,True,False,True,True,True,False,True,True,False,False,False,False,True,True,False,True,True,True,True,True,False,True,True,False,False,True,True,False,False,False,True,True,False,False,False,False,False,True,True,False,True,True,True,False,True,True,True,False,False,True,True,False,False,True,False,False,False,False,True,False,False,False,True,True,False,True,True,False,False,False,False,True,True,True,True,False,False,True,False,False,False,False,False,False,True,True,True,True,True,False,False,True,False,True,False,False,True,True,False,True,True,False,True,True,False,False,True,False,True,False,True,True,False,True,False,True,False,True,False,True,True,False,True,True,False,True,True,True,True,True,False,False,True,True,True,True,False,True,False,True,True,True,True,True,False,True,False,True,False,False,False,True,True,True,False,True,True,True,False,False,False,False,False,True,False,False,True,False,True,True,True,False,False,False,True,False,True,True,True,True,True,False,False,False,True,False,True,False,True,True,False,True,False,True,True,False,True,False,False,False,True,True,False,True,False,True,True,True,False,True,True,True,True,True,False,False,False,True,True,True,True,True,True,True,False,False,True,True,False,True,True,True,False,True,False,False,False,True,False,False,False,True,False,True,False,False,False,False,True,True,False,False,False,True,True,True,True,False,False,True,True,False,False,False,True,False,False,False,True,False,False,False,True,False,True,False,False,True,False,False,False,False,False,True,True,False,False,False,False,False,True,False,False,True,False,False,True,False,False,True,True,False,True,False,True,False,False,True,False,True,True,False,True,False,True,True,False,True,True,False,False,True,False,False,False,False,False,False,True,False,True,False,True,False,False,False,False,True,True,False,False,True,True,True,True,False,False,True,False,False,True,False,True,False,False,True,False,True,True,True,True,False,True,False,False,False,False,True,True,False,True,True,True,False,False,False,True,True,True,True,True,False,True,False,False,True,True,True,False,True,False,False,True,False,False,False,False,True,True,True,True,False,False,False,True,False,False,False,True,True,True,False,True,False,False,False,True,False,True,False,True,True,False,False,True,False,False,True,True,True,False,False,False,False,False,True,True,False,True,False,True,False,True,True,False,True,True,True,True,False,True,False,True,True,True,True,False,True,False,True,True,True,False,True,True,False,False,False,True,True,True,False,True,False,True,True,True,False,False,True,False,False,True,False,True,False,True,True,False,True,True,True,False,True,False,False,True,False,False,False,True,True,True,False,True,False,True,True,True,True,False,True,True,True,True,True,False,False,False,False,False,True,True,False,False,True,False,False,True,True,False,False,False,True,False,False,False,True,True,True,False,True,False,False,False,False,True,False,False,True,False,False,True,True,True,True,False,True,True,True,False,False,True,True,True,True,True,True,False,False,False,True,True,True,True,True,True,False,False,True,True,False,False,False,False,True,False,False,False,True,False,True,True,True,False,True,True,True,False,True,True,True,False,False,False,True,True,True,True,True,False,True,False,False,True,False,True,True,False,False,True,False,True,False,False,True,True,True,False,False,False,True,True,True,True,True,False,False,False,False,False,False,True,False,True,False,False,False,False,False,False,True,True,True,True,True,False,True,False,False,True,False,True,False,True,False,True,False,True,True,False,True,True,True,True,False,True,True,True,True,True,True,False,False,True,False,True,True,True,True,False,False,False,True,False,True,False,True,True,True,False,True,False,True,False,True,False,False,False,True,True,True,False,False,False,True,False,True,True,True,True,True,True,True,False,True,False,False,False,False,True,False,True,True,True,False,False,True,False,False,False,True,False,True,True,False,False,True,True,True,False,False,False,True,True,True,False,False,True,False,False,True,False,True,False,False,True,True,True,True,True,False,True,True,True,False,True,True,False,True,True,False,True,True,False,True,False,False,True,False,True,True,True,True,False,True,True,False,False,True,True,False,True,False,True,False,True,True,True,True,False,False,True,True,False,True,False,False,False,True,False,True,False,True,False,True,True,False,True,True,True,False,True,False,True,True,False,False,False,True,True,False,False,False,True,False,False,False,False,False,True,True,True,False,False,True,True,True,True,False,True,False,False,False,False,True,True,False,True,True,False,False,True,False,True,True,False,True,True,False,True,False,True,False,False,False,True,True,True,True,True,False,True,False,True,False,True,False,False,True,False,False,True,True,False,False,False,False,True,True,True,False,False,False,False,False,False,False,False,False,True,True,False,False,True,True,False,True,False,True,False,False,True,True,True,False,False,False,False,True,True,True,False,True,False,False,False,False,False,False,False,True,True,True,False,True,False,False,False,False,True,False,False,True,True,False,True,True,False,True,True,True,True,True,True,True,True,True,True,False,True,False,True,False,True,True,True,True,False,True,False,True,True,False,False,True,False,True,False,False,True,True,False,False,False,True,True,False,False,False,False,True,False,True,True,True,True,True,True,True,False,True,False,False,True,True,True,False,False,True,False,True,True,False,True,True,True,False,True,True,True,True,False,True,True,False,True,False,True,False,True,True,True,True,True,False,False,False,False,True,False,True,False,True,True,False,False,True,False,False,False,True,True,True,True,False,True,False,False,False,False,True,True,True,True,True,True,True,True,False,False,True,True,True,False,False,True,True,True,True,True,False,True,False,True,False,True,False,False,True,False,False,True,True,True,False,False,False,True,False,False,False,True,True,True,False,False,False,True,True,True,False,True,False,False,False,False,True,False,False,True,False,False,False,False,True,False,False,False,True,False,False,True,False,False,False,False,False,False,True,True,False,True,True,False,True,True,True,True,False,True,False,False,False,False,False,True,False,True,True,True,True,False,True,True,False,True,True,False,False,False,True,False,True,False,False,True,False,True,False,False,True,False,False,True,False,True,False,False,False,False,True,True,False,False,True,False,False,False,False,False,True,True,False,False,False,False,True,False,False,True,False,True,True,False,False,True,True,False,True,True,False,True,True,False,True,False,False,True,False,False,True,True,False,True,False,False,False,True,False,False,True,False,True,False,False,True,False,False,True,True,True,False,False,False,False,False,False,True,True,True,True,True,False,True,False,False,True,False,False,True,False,True,True,True,True,False,False,True,False,False,True,True,False,True,False,False,True,False,True,True,True,True,False,False,False,False,False,False,True,False,True,True,True,True,True,True,True,True,False,True,True,True,False,True,True,False,False,False,True,True,True,False,False,True,False,True,False,True,True,True,True,False,False,True,True,True,False,False,True,False,True,False,False,False,False,True,False,False,True,True,True,True,False,False,False,False,True,False,True,False,True,True,False,False,False,False,True,False,False,False,False,False,True,False,False,True,True,False,True,True,False,False,False,False,False,False,False,True,True,False,True,False,True,False,False,True,False,False,True,False,False,True,False,True,False,False,False,True,True,True,False,True,False,False,True,False,True,True,False,False,True,True,False,False,True,True,True,True,True,False,False,True,False,False,True,False,True,True,True,False,True,False,True,True,False,False,True,True,True,True,True,True,True,False,True,False,True,True,False,False,True,False,True,True,False,False,True,True,False,True,True,True,True,False,False,True,False,True,True,False,True,False,True,False,False,False,False,True,True,False,True,True,False,True,False,True,True,False,False,True,True,False,False,False,False,False,True,True,False,False,True,True,True,False,True,True,False,True,True,False,False,False,True,False,True,True,True,True,True,False,False,False,False,True,False,False,True,False,True,True,False,False,False,True,False,True,True,True,True,False,True,True,False,False,True,False,True,True,True,True,True,True,True,True,False,False,True,False,False,True,True,False,True,False,False,False,True,True,True,False,True,False,True,True,False,True,True,True,False,False,False,True,False,False,False,False,False,True,False,False,False,False,False,False,False,False,False,True,True,True,False,False,True,True,False,True,False,True,False,False,False,True,True,False,True,True,False,True,True,True,True,True,True,True,True,True,False,True,False,True,False,False,False,True,False,False,False,False,True,True,True,True,False,False,True,True,False,False,False,True,True,True,False,False,False,False,True,False,True,True,False,False,False,False,True,False,False,False,False,True,True,True,True,True,False,False,False,False,False,False,True,True,True,True,True,True,True,False,False,True,False,False,True,False,False,False,False,False,False,False,True,True,False,False,False,False,True,False,False,True,False,True,True,True,False,False,True,False,True,True,True,True,True,False,True,True,False,True,True,True,True,False,False,True,True,True,True,False,True,True,True,False,False,False,True,True,True,False,True,False,True,False,True,False,False,False,True,False,True,False,True,False,True,False,False,False,True,True,False,False,True,True,False,True,False,False,False,True,False,True,True,False,True,False,False,True,False,False,False,True,False,True,True,True,True,True,True,False,True,True,True,False,True,True,True,True,True,False,False,False,True,True,False,True,True,False,False,True,False,False,False,True,False,True,False,True,True,False,False,False,True,True,False,False,False,True,True,False,True,True,False,True,False,False,False,True,False,False,False,True,True,False,False,True,False,False,False,True,False,False,True,False,True,True,False,False,False,False,False,False,True,False,True,False,False,True,True,False,True,False,True,False,False,True,True,False,False,False,True,False,False,False,False,False,True,True,False,False,True,False,False,False,False,True,False,False,False,False,False,True,False,False,False,False,True,True,True,True,True,False,False,False,True,False,False,False,True,False,False,False,False,False,True,False,True,True,False,True,True,False,True,True,False,True,False,False,False,True,True,False,True,True,False,False,False,False,True,True,False,True,False,False,False,True,False,True,False,False,True,False,False,False,True,True,True,True,True,True,False,False,True,False,False,True,False,False,True,True,True,True,True,True,True,True,False,True,False,True,True,True,True,False,True,False,True,False,False,False,False,False,False,True,False,False,True,True,False,False,False,False,False,True,True,True,False,False,True,True,True,False,False,False,False,False,False,True,False,False,True,False,True,False,False,True,False,True,False,True,True,True,True,True,False,False,True,True,False,False,False,True,False,False,True,True,False,False,False,True,False,False,True,True,False,True,True,False,False,True,True,False,False,False,True,True,True,False,False,True,False,False,True,True,False,False,False,True,False,False,False,True,False,True,False,False,True,True,True,True,True,False,True,True,True,True,False,False,True,False,True,False,False,False,True,True,True,True,False,True,True,False,False,False,True,True,False,False,False,True,False,True,False,True,True,True,False,True,True,False,False,False,False,False,True,True,True,False,False,True,True,True,True,False,True,True,True,False,True,True,True,True,True,True,True,False,False,True,True,True,True,True,False,True,False,True,False,True,True,False,True,False,False,False,False,True,True,True,True,True,True,True,False,False,False,True,False,True,True,True,False,False,True,False,False,True,True,False,False,False,True,True,True,True,False,True,False,True,True,False,False,False,True,True,False,True,False,False,False,True,True,True,False,False,True,False,True,True,False,False,True,True,True,False,False,True,False,True,True,True,True,True,True,False,False,True,True,True,True,False,False,False,True,False,True,False,False,False,True,True,False,True,False,False,True,True,True,True,False,False,False,True,False,True,True,False,False,False,True,True,False,False,False,True,False,True,False,True,True,True,False,False,False,False,False,False,True,True,True,True,False,False,False,False,True,True,False,False,False,False,True,False,False,True,False,False,False,False,True,False,True,True,False,False,False,False,False,True,True,True,True,True,True,True,True,True,True,False,True,True,False,False,True,False,False,True,False,False,True,False,False,True,True,False,True,True,False,True,True,False,False,False,True,False,True,True,True,False,True,False,True,True,False,True,True,False,False,True,True,False,True,True,True,True,False,False,False,False,True,True,False,True,True,False,True,True,True,False,True,False,False,True,True,True,False,False,True,False,True,False,False,True,False,True,False,False,True,False,False,False,False,True,False,True,True,True,False,False,False,False,False,False,True,True,True,True,True,True,True,False,True,False,True,True,True,True,True,True,False,False,True,False,True,True,True,False,True,False,False,True,False,False,True,True,True,True,False,False,False,True,False,True,True,False,True,True,True,False,False,True,False,True,True,True,True,True,True,False,True,True,True,True,True,False,False,False,True,False,False,True,True,True,True,True,True,False,False,False,False,False,False,True,True,True,False,False,False,False,False,True,True,True,False,True,False,False,True,True,False,False,True,False,True,False,True,False,False,True,False,False,True,False,True,False,False,False,True,False,False,True,False,True,True,False,False,True,True,False,False,True,False,True,True,True,True,False,True,True,True,True,False,False,False,True,True,False,True,False,False,True,True,False,True,False,True,True,True,False,True,False,True,True,True,True,False,True,True,True,False,True,True,False,True,True,False,False,True,True,False,True,True,False,False,False,False,True,True,False,True,True,False,False,False,True,True,True,False,True,False,True,False,True,True,True,False,True,False,True,True,False,True,False,False,True,False,True,False,True,True,True,False,True,True,True,False,True,False], dtype = "bool")#candidate|13714|(3780,)|const|bool
bop_13715 = relay.greater(var_13700.astype('bool'), relay.reshape(const_13714.astype('bool'), relay.shape_of(var_13700))) # shape=(3780,)
func_10940_call = mod.get_global_var('func_10940')
func_10942_call = mutated_mod.get_global_var('func_10942')
const_13728 = relay.const([-6.751275,-9.766946,3.085483,-6.905596,8.343404,7.896774,1.439125,7.453810,2.649800,-3.527831,-0.707068,-1.109193,5.953782,9.360656,-8.760197,3.387012,-7.111435,1.923430,5.993506,9.081981,1.784951,8.021187,7.113056,-1.397542,-9.217771,-0.095944,2.467884,2.033829,-4.660530,3.962306,-8.096031,9.845759,-4.869759,-1.089103,-3.036375,7.101822,-3.759372,-1.782502,7.101926,-1.560432,6.164381,2.512425,-7.981484,5.515102,9.985548,9.439066,2.976133,-7.886775,5.236902,2.321721,1.236538,7.910967,6.198301,0.980176,-5.916427,-1.824259,-3.202534,-2.504413,-1.277227,8.841144,1.291555,5.732856,8.942605,-5.821591,-8.122994,-5.316989,-5.479524,-3.680200,7.826045,9.781479,8.710630,3.938293,5.594510,-6.997257,-9.014204,8.781526,-9.419622,-8.419947,3.343065,-2.237814,0.721680,7.208412,9.924989,2.997322,5.177567,-2.478441,1.189697,-0.155578,-5.538819,-4.722278,4.247526,-9.632432,9.340708,5.195743,1.093917,-8.246791,5.397843,7.951101,4.746159,7.199044,7.980439,-9.513409,-4.741873,8.173766,0.763127,7.410305,8.059241,8.237418,-4.287416,5.536793,-2.373699,-4.071206,5.059933,-2.513199,2.035875,5.941033,-3.133243,1.427158,8.347313,4.036410,-8.225802,9.099887,-5.984185,-5.714029,6.158594,-7.580738,-2.043559,6.447012,-1.142799,-8.024204,-7.925341,-0.384462,3.308616,9.151835,-8.481145,-6.323285,0.281598,1.994275,-8.028996,-6.613393,8.711403,9.942305,-6.207588,-2.649237,6.595347,-6.798636,-5.847729,-9.783500,-3.309657,-4.151289,-4.490285,1.044636,-7.125049,4.419092,5.887140,8.296229,-8.202642,-2.391345,3.499883,-8.533160,2.483888,-2.872743,8.173749,-2.118759,-1.816073,0.112147,9.496588,-4.507182,2.178715,-7.806468,-3.383058,1.512304,-1.786686,6.691664,-4.529812,-4.062452,-9.133166,-3.191646,3.768756,9.527455,1.737163,-1.488308,7.526363,2.092019,-9.136524,3.691152,5.565928,-5.117429,-9.511606,5.479032,8.667450,4.686975,1.016332,0.877453,-3.271484,-7.087297,3.465221,-6.056291,-9.363869,5.568511,3.656771,4.139712,-8.734584,-0.181176,6.223133,1.291847,-5.599352,-4.755342,-4.763849,-6.220825,-3.881097,5.602685,-4.182896,-1.449943,3.764127,3.565771,5.754396,5.942587,-4.654866,-3.381482,2.638769,-5.526455,-6.663277,0.867400,1.100611,3.608884,0.608542,8.239112,-0.516211,-3.526747,-0.973222,-5.842902,-7.553358,6.613745,-1.353491,-8.786755,4.453035,7.871848,6.832481,0.639025,-4.872489,-4.954801,8.649403,2.215314,2.007626,4.491276,-6.979859,6.969174,4.907617,5.403664,1.878297,0.719825,5.310650,-6.242240,-0.476521,7.773353,1.363426,-3.753154,6.733649,-2.758180,0.769399,-2.113745,-9.151945,-6.672895,-2.029931,7.425140,3.299460,7.222153,9.122028,6.594125,5.922223,-2.531065,-7.944907,9.313586,3.720730,-7.409669,4.414704,-2.185477,0.396168,3.165048,-0.909416,6.912453,2.890621,-0.185896,-6.164060,-8.968483,-5.155302,-7.362532,2.745402,5.011119,-1.244507,7.531705,-3.522224,6.770520,-5.435747,-8.188267,7.939240,-4.807548,-3.486983,5.737843,-0.953031,-3.034359,-8.241684,8.072896,-2.478656,-0.684169,9.910100,-5.819571,0.995268,8.490274,-8.929032,7.342785,9.119505,-8.329261,-3.152193,-4.657321,-8.880176,-0.013636,-7.472081,-5.103281,-3.968507,8.550398,4.705950,7.803461,3.735679,-6.837403,-0.667342,9.507985,-9.217055,2.123243,1.098189,7.463651,-8.183014,-8.650469,-9.406797,1.746296,-1.447131,-7.511341,-7.193985,-2.975494,-1.588117,7.177644,-1.220431,-2.320806,1.011542,-6.021412,4.484735,-0.019578,1.626780,-4.532742,6.993548,-0.613217,-5.623193,7.814974,-1.579097,-4.293750,5.492731,-6.735063,-8.166622,-6.014993,-5.234065,-2.919005,-9.901183,-0.983082,-6.658785,9.564430,-8.447911,5.927584,-5.730962,-3.420325,-6.569060,9.152595,-8.527098,-7.394943,-4.194858,-2.885293,0.372821,8.631634,5.623527,4.466047,-0.225272,-3.546155,-9.682573,-6.299946,-1.794248,6.427906,3.543147,-9.356784,-0.050396,3.960881,5.069193,-8.296958,-3.371002,7.627059,7.082004,6.014798,3.458312,-1.880761,5.668317,1.823901,5.630942,3.800822,8.544510,0.948311,-4.950727,6.629214,-8.169190,-8.905323,2.434858,4.609933,-2.630049,-5.510354,-7.590291,0.626100,3.318866,2.831006,0.677418,-1.364032,5.709767,3.214939,-2.669926,5.899385,-0.696461,6.694744,7.220036,-3.603827,-5.931878,-7.877511,8.936850,-2.381725,-9.961913,-6.788950,-9.558477,-3.751932,-0.587239,7.057132,-6.270500,9.881037,-7.287177,-9.627576,7.064346,1.918529,-7.110090,-3.162828,4.276263,-6.765683,2.815937,-0.871855,9.220392,7.588683,-5.202482,-8.197170,2.797069,4.590654,8.977939,-6.656169,-1.929984,-3.932656,5.342895,-3.399397,9.167468,-0.062346,5.467060,2.163608,8.163878,-1.723552,7.614611,1.057913,2.532367,7.839714,-7.350717,4.922842,5.994968,7.982649,5.449510,-3.381555,5.367622,1.859047,9.335254,5.689011,6.908354,-1.826855,8.432475,5.080152,-8.569666,9.763413,-4.420573,9.552900,-8.863099,-9.494857,-4.555545,-1.070814,4.745188,3.396167,-7.419838,-7.341730,-0.824499,9.212839,-0.476530,-2.007424,4.478915,0.751233,9.173450,6.501102,-6.113748,7.398619,-8.150907,-9.099701,8.555298,-3.584484,-9.196564,9.074824,7.242650,-7.707224,8.543576,-8.502240,-8.789313,3.521088,-9.675059,1.603054,-5.740166,-5.709548,7.913050,8.206866,-3.470436,-2.590421,-9.213048,9.973310,-6.776880,0.428868,6.379159,-9.306199,0.146650,6.604497,0.487769,-7.275943,0.225772,-6.283958,3.055243,9.532709,-3.903832,9.301128,2.824543,-9.442043,-3.744363,4.465096,-9.935318,-3.537390,8.182219,6.271146,-8.099821,5.893569,-0.113404,-7.124179,4.694391,2.542346,-9.753583,-0.211170,-6.247907,4.363796,-5.432315,-7.461036,1.941693,-0.573460,-6.471945,4.239108,-7.038332,-0.576578,-6.895360,-4.929453,-8.761348,3.035299,-1.924333,-5.843719,9.688423,-2.072007,-1.969007,-1.274384,1.943292,9.381092,-6.548456,-7.620332,0.651276,-3.708223,-2.625838,7.721693,-1.012464,3.828669,-2.512203,1.982144,9.667274,7.569539,-7.660126,2.599486,-3.004686,4.006943,9.535984,6.058110,-6.237711,1.817873,5.562377,8.915716,3.530285,-5.814153,-2.582585,4.416888,3.752898,-8.522240,-6.196304,7.469886,-3.840263,-3.913631,5.036729,-2.007134,4.785706,-0.538718,-6.044944,-1.723694,-2.092487,3.605971,3.108992,-5.985914,4.722711,-3.165803,0.863412,-0.004161,4.228170,7.297233,9.102514,-8.468352,7.921741,9.894995,1.107066,-7.335896,-0.922942,-9.933107,-2.371890,9.080289,7.767707,-9.867142,3.337077,-5.724712,8.881165,8.316267,1.867677,7.055754,-2.712106,-4.153236,-8.753548,5.466147,-5.857546,-8.100740,9.207735,-8.991699,-0.041220,3.914152,-1.993366,-8.389603,4.121550,-1.813715,9.736347,-7.920242,-6.320868,4.838442,5.039678,5.366843,9.595467,-9.019998,7.507607,8.122457,4.628436,-5.384010,6.808582,2.656001,-3.371201,0.689111,1.797741,-5.925645,5.636162,5.713264,-4.419451,-0.467120,-6.975522,-1.166128,-3.159626,0.467871,-7.412356,8.171066,-2.181252,1.420186,-7.204525,1.544836,-3.427539,6.231391,7.061337,-9.112734,3.279253,1.875057,3.038251,-3.175541,-7.450812,-1.482376,7.754916,-0.170548,-1.779491,-8.230547,-7.335703,8.957208,6.853685,-9.615514,3.254097,1.866202,-5.508637,-2.515606,-7.786569,4.653866,2.579916,-1.138879,0.076242,-4.939914,-4.338312,-3.658410,-5.924708,3.728459,-0.434242,3.732432,-5.487643,-5.148879,0.831674,-3.751897,0.935847,-5.335325,7.434683,4.984849,7.026249,3.706398,0.173848,3.519952,9.457778,2.886278,-3.729864,5.764354,9.681604,7.169405,-6.814159,2.746569,8.776559,-3.892003,-6.746236,5.603026,-8.471302,6.944934,-7.755710,1.612432,7.437723,7.508457,7.283195,-4.735613,0.022921,-9.060556,9.172485,9.979892,3.962561,-4.881106,-9.826995,-4.667807,-0.572319,-0.676290,-5.567804,-8.974202,-9.457505,7.279495,-5.362477,0.302776,-3.014489,8.815748,2.686680,-0.582744,1.293538,-4.218275,7.991648,-3.581387,-0.282251,-6.509038,-0.608909,-8.101634,5.862503,7.477070,1.741100,2.932305,-0.082215,0.746808,1.852097,-8.604297,-0.010136,-4.458591,1.263954,1.822265,7.171830,-2.125218,-2.999017,1.587821,5.159762,8.634362,4.413437,-6.461573,-6.522466,6.637080,7.580416,-6.065600,-6.569239,1.120779,0.692636,1.171810,9.825258,-1.443107,-9.662361,8.902129,-0.169081,-4.944353,9.344254,2.638386,-1.960577,7.575607,2.134395,-2.434763,2.906015,9.284138,-7.926557,8.205109,8.121711,-5.924280,7.848240,4.677053,-7.542898,0.076477,-4.808698,1.314784,8.370151,-9.705379,-7.426297,-1.759833,3.704269,-3.929958,-9.882717,8.848168,-9.212071,3.340879,0.393348,6.710009,-3.868436,2.776154,-5.052444,-2.741317,9.283905,-3.462383,0.027263,1.734631,-1.632104,-0.001400,-4.498520,-9.034030,0.368413,-1.994520,-8.908041,2.859993,7.678272,3.097957,9.707523,4.752003,3.213351,4.073035,3.096980,1.263543,-2.258859,-2.367998,8.630424,0.076863,3.204762,8.911582,-4.989737,-6.183468,8.739165,7.791713,1.151081,3.955525,-1.517743,3.927815,-7.189641,2.449965,7.647905,4.846934,1.448086,3.429118,-7.843850,-6.736409,9.675305,-8.998871,7.591245,-7.127593,6.288703,4.410655,-4.579179,3.721702,1.872227,4.927783,-0.550119,8.351667,-1.068861,-2.108625,0.971159,5.353688,-7.012618,7.921150,3.356694,-0.104008,7.690155,-7.443259,3.121150,-1.885784,-9.670977,7.246089,-2.705262,-8.110631,2.255732,-8.509841,-0.096346,-8.396476,4.793324,-2.397818,6.922574,3.302476,-7.400458,-2.709000,4.022104,-8.506085,-5.738763,3.747732,-3.523721,3.908992,-5.537012,-9.112445,8.301257,9.527872,-9.037191,1.613839,5.814591,-4.732178,-9.542603,8.133850,-5.843086,-0.957062,5.264915,5.206877,4.478623,1.669770,-6.341817,-1.219357,-7.925135,2.585353,2.533744,-7.323986,6.454075,-3.407649,8.953631,-9.008103,8.081939,6.057929,-2.265390,-0.848889,2.295607,6.693091,8.730766,-3.126396,-5.246588,-1.102605,-4.441560,-5.778284,-6.098649,-8.941638,-4.185690,8.919819,6.739480,-2.638695,7.448847,3.126000,-0.577395,0.504857,8.731786,-7.174927,3.112485,3.929602,8.558057,0.154967,4.516690,-0.224638,-4.604164,5.148484,-2.530572,9.117559,9.262581,-6.818519,-5.218464,1.421642,0.576106,4.026399,2.418899,5.669443,-1.325125,-6.755527,-5.929133,3.711951,-6.496809,-8.370765,-2.151757,-4.114139,-7.967772,6.045649,-2.728164,-5.815782,-5.422747,-9.574889,7.619268,3.386691,9.706048,6.887231,-6.016722,-5.313621,8.580240,4.407328,7.227139,2.415861,-8.210645,-5.641704,-9.622382,2.279749,-0.016775,-0.863318,2.457758,8.111308,4.628982,-2.738879,2.800177,-0.724301,3.633478,-0.219793,9.698285,-4.746920,-4.776464,7.140543,-7.299165,-7.379258,-8.981638,-8.985206,-7.524731,-1.012833,-7.353710,4.044575,-9.254721,-5.919213,9.296230,-6.125465,7.963489,-4.656010,4.699179,-4.457505,-9.476445,-0.133502,8.945860,-9.603915,-9.252086,8.801326,3.904021,-7.599353,-9.084171,9.125563,9.236617,-1.654470,8.952064,-8.817557,-0.017622,-6.974768,8.913487,-3.283856,2.042244,-9.237116,6.805725,-1.332108,-9.885481,-6.843090,9.616238,-2.419897,5.360940,1.478557,-1.679174,5.477263,-0.756127,2.861911,-0.530688,-0.632449,9.509368,8.565945,-8.380345,2.291690,-5.291951,3.277671,-5.112236,-3.009152,7.732663,-1.481489,-2.110008,-2.592400,9.229556,-1.752445,0.254092,1.245117,-1.386529,-8.126041,-2.553045,0.448415,4.214208,-4.507732,9.895571,-9.739043,4.051921,-6.529722,-8.925425,-6.325648,-7.871838,-2.196954,-8.615101,-7.115527,-7.673949,1.195031,9.618821,-8.268577,-2.272141,-5.313651,2.774290,-2.098779,5.489954,-2.363539,0.804288,5.001028,-3.872175,-3.104711,9.369118,5.709975,6.561327,-2.417534,0.685186,2.518988,9.439295,6.864704,-2.646524,6.022125,-4.572350,-4.686815,9.862243,-1.922802,2.548854,-9.633974,7.227974,-1.172047,-5.808576,2.531327,8.633889,9.176213,-1.174001,-0.895097,-1.382935,-6.741088,7.195206,5.324376,-2.129779,-9.644425,-0.024232,-6.024626,-3.178469,-8.506819,4.718353,6.640220,-6.054260,-6.190845,4.832649,-1.570547,-6.233709,7.166991,5.635285,-7.101817,-8.783576,1.408205,4.159796,-0.580889,-5.870745,3.449520,7.738408,5.249687,8.570365,-5.777097,-7.415908,7.554376,-6.830091,-3.762571,8.012123,8.068517,-6.356951,-9.168377,4.775786,0.302422,2.536119,8.012184,4.020977,-8.915858,-6.855188,-4.611842,2.944910,-1.104834,-0.808549,3.056129,0.230857,0.916620,5.163495,-2.094190,-5.001678,8.742662,-2.084623,-2.830204,2.680688,-4.959542,-7.911536,-7.873434,-1.031282,0.666308,3.861332,-8.834361,1.203870,-1.312403,4.355922,6.018022,1.752862,0.946246,-9.521794,5.119406,7.475165,4.557337,-7.621600,4.805543,-4.418272,4.928055,-4.371006,1.746707,1.787050,-9.782149,-3.738211,9.162544,-1.541802,9.801260,-2.765297,-3.388015,-0.091359,9.852194,0.182672,-2.753935,2.397804,-8.743873,9.484119,-9.577791,1.805667,-3.373457,-0.107002,7.888089,-6.310005,3.248804,-0.215647,-6.255477,-2.662712,9.720833,5.867267,8.949147,-3.926341,-3.640740,7.518317,-2.399282,6.920243,-6.619162,-5.330414,6.950310,-1.103229,-4.264902,-4.439483,-4.509755,-4.320720,9.728701,7.077074,7.309218,-6.005211,8.496549,-2.965210,-5.327959,-2.250987,0.437890,4.583186,-0.004816,-6.596043,-2.232561,1.227212,0.966936,-2.892876,6.240785,2.822429,1.160678,-4.361700,-0.351108,2.066902,4.276060,8.117154,-6.841299,2.756183,7.586583,7.089654,-6.571232,-5.369566,2.268144,-5.342583,-1.236149,9.295655,4.683497,-9.793125,-9.174270,7.650175,-1.734487,-2.408823,7.612205,7.745907,4.094238,-2.434358,6.428253,9.385119,6.245276,-8.742197,-9.999707,-4.313875,3.962632,4.162182,-5.633682,4.413511,8.756993,2.792818,8.372729], dtype = "float32")#candidate|13728|(1350,)|const|float32
call_13727 = relay.TupleGetItem(func_10940_call(relay.reshape(const_13728.astype('float32'), [9, 150])), 1)
call_13729 = relay.TupleGetItem(func_10942_call(relay.reshape(const_13728.astype('float32'), [9, 150])), 1)
output = relay.Tuple([call_13624,call_13632,const_13633,call_13660,const_13661,call_13670,call_13683,call_13694,call_13696,var_13697,const_13698,var_13699,bop_13715,call_13727,const_13728,])
output2 = relay.Tuple([call_13625,call_13634,const_13633,call_13662,const_13661,call_13671,call_13684,call_13695,call_13701,var_13697,const_13698,var_13699,bop_13715,call_13729,const_13728,])
func_13733 = relay.Function([var_13697,var_13699,var_13700,], output)
mod['func_13733'] = func_13733
mod = relay.transform.InferType()(mod)
mutated_mod['func_13733'] = func_13733
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13733_call = mutated_mod.get_global_var('func_13733')
var_13735 = relay.var("var_13735", dtype = "int8", shape = (416,))#candidate|13735|(416,)|var|int8
var_13736 = relay.var("var_13736", dtype = "float64", shape = (630,))#candidate|13736|(630,)|var|float64
var_13737 = relay.var("var_13737", dtype = "bool", shape = (3780,))#candidate|13737|(3780,)|var|bool
call_13734 = func_13733_call(var_13735,var_13736,var_13737,)
output = call_13734
func_13738 = relay.Function([var_13735,var_13736,var_13737,], output)
mutated_mod['func_13738'] = func_13738
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11440_call = mod.get_global_var('func_11440')
func_11441_call = mutated_mod.get_global_var('func_11441')
call_13740 = relay.TupleGetItem(func_11440_call(), 0)
call_13741 = relay.TupleGetItem(func_11441_call(), 0)
output = call_13740
output2 = call_13741
func_13746 = relay.Function([], output)
mod['func_13746'] = func_13746
mod = relay.transform.InferType()(mod)
output = func_13746()
func_13747 = relay.Function([], output)
mutated_mod['func_13747'] = func_13747
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7874_call = mod.get_global_var('func_7874')
func_7876_call = mutated_mod.get_global_var('func_7876')
call_13768 = relay.TupleGetItem(func_7874_call(), 0)
call_13769 = relay.TupleGetItem(func_7876_call(), 0)
func_11818_call = mod.get_global_var('func_11818')
func_11819_call = mutated_mod.get_global_var('func_11819')
call_13772 = relay.TupleGetItem(func_11818_call(), 0)
call_13773 = relay.TupleGetItem(func_11819_call(), 0)
func_10940_call = mod.get_global_var('func_10940')
func_10942_call = mutated_mod.get_global_var('func_10942')
var_13781 = relay.var("var_13781", dtype = "float32", shape = (1350,))#candidate|13781|(1350,)|var|float32
call_13780 = relay.TupleGetItem(func_10940_call(relay.reshape(var_13781.astype('float32'), [9, 150])), 4)
call_13782 = relay.TupleGetItem(func_10942_call(relay.reshape(var_13781.astype('float32'), [9, 150])), 4)
func_9830_call = mod.get_global_var('func_9830')
func_9832_call = mutated_mod.get_global_var('func_9832')
call_13783 = func_9830_call()
call_13784 = func_9830_call()
output = relay.Tuple([call_13768,call_13772,call_13780,var_13781,call_13783,])
output2 = relay.Tuple([call_13769,call_13773,call_13782,var_13781,call_13784,])
func_13793 = relay.Function([var_13781,], output)
mod['func_13793'] = func_13793
mod = relay.transform.InferType()(mod)
mutated_mod['func_13793'] = func_13793
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13794 = relay.var("var_13794", dtype = "float32", shape = (1350,))#candidate|13794|(1350,)|var|float32
func_13793_call = mutated_mod.get_global_var('func_13793')
call_13795 = func_13793_call(var_13794)
output = call_13795
func_13796 = relay.Function([var_13794], output)
mutated_mod['func_13796'] = func_13796
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9254_call = mod.get_global_var('func_9254')
func_9256_call = mutated_mod.get_global_var('func_9256')
call_13820 = func_9254_call()
call_13821 = func_9254_call()
output = relay.Tuple([call_13820,])
output2 = relay.Tuple([call_13821,])
func_13828 = relay.Function([], output)
mod['func_13828'] = func_13828
mod = relay.transform.InferType()(mod)
output = func_13828()
func_13829 = relay.Function([], output)
mutated_mod['func_13829'] = func_13829
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9795_call = mod.get_global_var('func_9795')
func_9796_call = mutated_mod.get_global_var('func_9796')
call_13927 = func_9795_call()
call_13928 = func_9795_call()
func_11268_call = mod.get_global_var('func_11268')
func_11271_call = mutated_mod.get_global_var('func_11271')
const_13952 = relay.const([-1.567814,0.700746,-8.907385,4.233824,-7.232170,7.380542,3.268139,-0.272693,-5.430729,3.267646,6.427937,-0.852268,-2.576281,-5.772131,1.956962,1.107178,-7.649055,-7.203761,0.039734,-6.346921,0.877213,6.448010,-6.483846,-2.721112,-8.833915,4.903951,0.501958,2.350991,-6.355985,4.436641,-0.036056,1.411558,-8.423139,1.642642,8.991261,9.930528,-0.102493,-6.147073,4.979529,6.917903,-9.716108,9.959767,-1.463868,1.042936,-4.440621,5.785016,-5.793913,4.596348,-4.630344,-0.187486,-2.047464,-3.942380,-0.971650,1.730073,8.598753,3.311162,-0.819313,-9.506675,-1.166655,3.458630,-1.735366,9.308726,9.100266,2.588369,4.455916,4.274979,-3.573149,-9.434904,-6.305764,-7.743420,4.842323,7.149548,-8.144820,-1.875256,-0.115320,8.168503,-9.554251,0.662598,-4.946657,-1.132100,-0.936429,7.383808,9.945363,5.060199,-1.957690,-2.911446,-1.583188,7.144035,5.290279,7.007574,5.189221,-5.466433,7.663596,9.634219,8.386109,4.204724,9.878757,-4.675391,4.271291,1.369442,4.420913,9.230305,8.780005,-4.770628,-0.079812,-6.624108,-1.769519,-3.878765,-2.863295,9.705688,8.724349,2.186528,-6.020915,4.305057,-3.886297,7.143695,-0.402014,7.348330,6.471579,-8.897228,6.563186,7.283199,-6.287837,9.444782,1.688078,-5.096162,5.563872,4.949938,6.458024,7.680568,7.604788,6.205164,8.624793,-4.532002,-9.416570,6.005368,5.382884,5.075706,-1.933338,9.660498,-7.494328,-7.492659,9.027983,3.855590,-9.808658,-4.237272,2.562278,-7.081215,-0.941914,8.478371,0.345356,-8.243461,9.356469,-6.289076,-3.927374,2.756286,3.441583,2.438442,2.424960,6.301807,1.513650,-0.552972,4.261076,-5.121559,0.365056,-0.550237,-4.844777,5.957459,8.022018,0.365222,0.659022,-6.439127,-2.161192,-4.448393,-9.802012,6.693277,2.426815,-4.894595,-2.925537,7.091525,-6.515323,2.157999,-1.888904,-5.065670,-0.612201,-0.999718,-1.979001,1.331788,-1.611193,-7.921667,2.161936,-1.887879,8.422460,-7.401834,0.318218,0.487411,6.895530,-0.519849,-0.615376,2.540946,-4.842446,-1.772743,-9.842476,4.011165,3.712908,0.575750,-9.251119,-7.624635,-9.443239,5.135694,-5.273278,4.619206,4.947027,7.001681,-4.535195,5.700221,-3.056142,0.081415,2.495013,4.516467,9.234031,2.174667,4.821935,3.956393,-2.986062,8.483022,-7.753886,6.783592,0.271871,9.971280,9.876024,-5.584610,-9.020039,5.139977,0.172877,7.618622,6.273019,-7.476555,-6.019611,6.979568,-6.788100,1.959163,8.499355,8.070673,4.426492,8.018541,2.298820,7.518254,9.344338,9.688566,1.453129,9.214131,8.271620,7.730431,-8.258254,3.416028,-3.172013,3.698236,8.957695,-4.389844,2.155860,8.347850,5.079289,-7.831098,1.691167,6.159544,-7.380590,-3.291451,-2.478225,4.869772,-9.098847,-3.380462,6.238127,-2.270856,-9.215198,-8.049523,-2.850248,-5.574190,-3.617355,0.967832,-4.511901,-1.706087,7.967945,-8.551198,9.078629,-6.784152,-9.897491,-6.398817,-0.690077,-3.580189,5.596189,-1.892478,3.691124,9.242189,-4.455214,1.200958,-5.735579,7.393250,-9.331948,4.459876,-6.088947,5.532114,-6.353476,-5.688244,8.974947,9.568622,9.783219,-7.649946,-9.651801,-9.554934,-5.715147,1.849146,-0.969582,3.590250,3.381504,-8.409955,-6.976966,-5.217618,6.309047,-2.390902,-7.497255,7.727965,2.725923,-0.987140,6.797819,-0.045690,-0.304107,-6.797820,3.975442,-7.168107,6.939000,-5.934924,-3.681237,-0.898039,8.341880,-3.387427,2.919471,-5.283428,-2.999197,-9.662334,3.600591,1.489341,3.988149,-8.337579,0.427469,2.631564,1.167864,6.060158,-7.238735,7.995816,-9.477722,9.185114,3.452267,-2.491588,-0.058403,-8.113328,-6.171383,-4.265196,4.848697,-0.257406,5.569532,7.258714,2.218514,-5.009709,4.408661,5.745362,-6.712951,7.207483,-6.886373,5.517631,-5.592512,4.709639,4.271578,-0.866220,-8.730730,-5.318623,-8.023831,0.142391,-0.624858,-6.125146,4.278977,9.308819,-9.461643,-2.536954,-0.042718,-1.778716,5.644768,3.962173,9.408860,1.094013,-4.281548,9.774338,-0.808107,-0.768175,-4.274053,-4.033036,3.130670,7.847714,-1.526065,-2.306471,2.612893,4.053538,-1.829305,-7.368497,0.089050,-0.240044,6.840641,-0.060359,-0.395342,-4.568286,2.224303,-3.203969,-4.766619,2.246804,9.132034,5.962354,-9.544709,1.899999,-5.186558,-4.936669,-1.012239,0.061236,-8.618783,6.187951,4.084172,8.503368,-1.503892,8.438624,-6.180183,3.227075,-0.694672,-2.586687,1.069698,-6.146465,5.691340,4.553019,1.794552,4.363848,4.881841,-4.775711,-6.453387,9.073226,2.406508,3.019173,0.402218,-5.500714,-7.501978,-1.948658,-3.562851,0.183277,5.532220,8.346749,9.240972,-6.535643,6.301696,0.830077,3.296505,-9.068910,1.919793,-4.907203,-7.384647,2.004285,1.100663,6.445619,-8.976289,-4.845191,5.081712,-5.531006,-1.116268,6.855881,9.112433,-9.847541,-5.864357,2.917789,-9.697595,-3.905707,-1.622788,2.640669,-4.096759,-3.652743,6.057060,-2.516462,-0.649017,-7.208410,-7.453496,3.344886,-5.249216,-4.198823,-3.156140,0.150457,3.175555,-1.113350,3.944123,8.602024,-0.801884,-2.177852,-9.324245,-2.495730,9.224722,-0.330025,2.208978,3.514991,5.700151,-4.470899,5.525946,-0.294722,2.439133,1.386142,0.223965,-9.651414,-4.156210,6.946226,-0.066951,0.552922,-7.851582,5.539496,7.402299,-0.522415,-2.567908,2.475206,-9.152030,-0.007955,-5.333490,-2.745087,-8.113004,1.426242,0.968506,-0.813278,-5.102003,9.794045,6.061362,-5.276842,8.508570,1.147043,3.372012,3.652804,-2.107936,-3.684968,4.935476,-6.984848,6.339511,-0.225648,8.609654,-0.991804,3.234978,-5.723725,-7.664906,4.948103,6.633728,6.261676,8.396369,-9.051640,-7.042730,-8.611334,9.190798,-7.337292,-6.821833,1.092559,7.611993,-9.712473,2.147677,6.490892,7.438829,2.486984,4.403856,-4.258646,-9.943132,-2.381073,3.318752,-7.009084,-1.598220,8.043964,-9.112005,-9.832523,6.295695,-4.833393,0.776933,-0.492325,-9.185113,-7.715738,4.297163,1.489929,8.016979,-9.126942,-1.945020], dtype = "float64")#candidate|13952|(585,)|const|float64
call_13951 = relay.TupleGetItem(func_11268_call(relay.reshape(const_13952.astype('float64'), [65, 9])), 2)
call_13953 = relay.TupleGetItem(func_11271_call(relay.reshape(const_13952.astype('float64'), [65, 9])), 2)
func_13793_call = mod.get_global_var('func_13793')
func_13796_call = mutated_mod.get_global_var('func_13796')
const_13956 = relay.const([6.950622,2.252620,-0.202461,-4.271375,1.324581,-9.711976,-6.571293,-1.670948,7.223405,2.276762,6.006651,0.324199,-8.618821,5.667826,-9.269173,5.310756,-8.750110,-4.075184,7.170883,4.030210,-3.135829,6.885717,-4.952475,-7.926767,-5.450193,2.331469,7.655793,-3.225116,0.100304,3.692016,-6.588593,-5.879367,-4.679523,-3.870163,1.000940,-2.569560,5.939551,-3.082214,3.809447,0.610265,-7.600731,0.763981,9.458009,0.272356,1.454002,4.392532,-6.882225,0.712372,-5.627738,-3.474714,7.148382,4.218132,-8.520226,-9.998249,6.636814,8.052880,-2.682875,7.029516,-6.150851,2.070199,2.985491,-2.263244,-7.602119,-9.340573,4.404585,-5.066845,1.486637,0.127031,-2.871743,6.708989,-7.571217,9.032013,7.549660,-0.316291,-0.619694,-1.333040,-4.549782,8.194909,-5.365973,-5.324575,-6.308829,-4.782781,-2.476117,-8.331290,8.089320,-5.739779,-6.338732,-4.343394,-5.724709,-0.604229,-5.100095,6.057083,6.347437,8.452870,-9.955267,8.775937,8.268625,1.766192,9.334535,-2.824913,2.659931,-7.429211,-3.693832,-0.558190,-5.213750,2.015559,4.365914,8.135262,7.256082,-7.834721,-2.281991,3.221117,9.618408,-2.955373,-8.935238,4.041791,9.908027,7.654783,-5.759502,8.428715,-3.056726,-2.114279,3.564263,-1.136918,-9.781585,-3.242220,-8.824757,-0.680111,-7.525202,9.799406,4.085905,8.475532,-8.971346,7.605006,-3.316688,8.085425,4.377645,-4.896859,-2.509446,-2.527262,2.382369,8.758367,-2.504266,6.306131,-6.720146,2.587078,4.709595,7.228042,0.617345,-9.952400,6.687855,2.163256,6.964204,2.216129,-6.029933,6.873796,-0.074952,-8.045267,-9.646945,-5.002605,-7.404047,4.438366,-4.017690,7.801181,0.198954,9.410137,-4.713166,0.826114,-9.200655,4.355082,-0.318418,-4.429025,7.888186,3.800699,-7.251616,1.847695,5.421428,-1.548234,3.129463,-7.419252,6.342080,1.347829,-7.449916,-8.708749,2.619355,4.356639,-0.057260,-6.805397,-2.698566,3.883297,5.884018,4.907203,0.664181,-1.265119,-0.978319,1.914596,-3.231701,8.832355,-2.040571,1.135105,8.964154,7.976560,-5.887517,6.854123,-1.756332,4.998335,7.828835,-2.804099,-7.304463,3.724987,2.550253,6.437777,1.905996,-1.651585,-6.909596,2.440444,6.190392,0.421353,4.928118,-3.469857,5.218002,8.727366,2.824849,-9.329414,3.068186,-4.161307,-6.077630,-5.448534,-0.302003,7.536475,0.240123,-1.861557,-8.271459,-3.723296,-6.991821,3.102075,0.639268,0.113044,-8.788053,-9.413957,8.685166,9.258584,-1.766107,-4.915883,-2.724728,9.452489,-4.398864,-3.598231,2.350753,-9.526231,-4.661105,-5.015994,2.973145,-4.092123,9.403887,7.273801,4.056340,-5.919285,-0.321371,-4.847645,5.959856,-4.937186,6.986594,-4.184710,-2.894429,-8.990222,-3.835676,-5.247934,-0.679302,0.588407,6.524598,2.219675,5.766106,2.344078,-9.235198,1.536206,6.241141,7.387470,-4.311347,-2.663740,3.521083,9.316531,5.585956,7.194034,-4.663931,3.577956,2.981937,-6.807156,-4.652995,-0.037364,5.738683,-9.748308,-0.628790,0.907717,1.850520,4.686537,3.316392,-2.994392,-8.188486,-0.165114,7.427965,-4.337994,-9.906110,0.072051,-4.383746,9.986231,3.213303,5.365296,-0.831756,9.128215,-6.893548,-4.827274,3.172319,-4.631558,-9.753649,3.716442,-2.469986,-2.594927,-7.360419,1.914890,2.243712,7.686871,3.697034,-3.889981,9.191015,4.569930,-4.278397,2.480394,9.866269,9.005534,8.799973,5.521514,5.548484,-1.531068,9.563133,-0.205713,3.262181,-5.300602,-4.114833,-4.413940,-4.343109,8.267701,9.285763,-8.095640,-4.742221,-1.731206,-1.771442,5.099540,7.285399,-1.966312,-3.195389,7.485531,-9.912012,-1.845942,1.531574,-3.730214,-9.243664,-4.920636,4.755059,-7.571199,8.021056,4.613923,-3.093282,2.044927,-6.623843,5.656244,-8.238720,-4.699065,-0.779488,-5.208153,6.622341,8.264041,-0.444797,3.922422,-6.601698,-8.881603,-3.533549,-3.471069,-6.730912,-2.336316,9.360160,9.677676,7.580969,-5.180153,-1.029349,7.602423,8.674702,-0.640758,-6.771547,6.859545,9.070348,-2.934132,9.493625,1.963420,-4.885296,0.106129,3.472157,-8.571027,-4.849520,-9.921046,2.134219,8.819683,-0.584003,-2.597964,4.594315,1.593714,6.090708,2.711277,-2.084294,3.090985,-8.065037,-1.379639,6.712648,-3.276489,1.191838,6.639914,-2.286390,-0.816801,-8.869458,-0.436581,-0.758997,-3.860401,1.331565,8.121956,-7.104597,0.417102,6.051855,-1.097481,-4.710641,-7.026354,3.389070,-9.651152,-2.965099,-0.772591,8.348182,1.195665,2.059020,-5.577678,8.898546,-4.483368,-0.502872,-4.799754,-1.252524,-8.728828,-9.709972,-8.859631,-8.517763,6.969715,8.925220,4.909053,-1.345737,9.415858,1.909325,7.932554,3.626160,-0.126920,2.518881,3.426238,-8.037255,-6.114141,-8.478239,-4.929356,5.610724,-6.315422,-4.589284,9.892209,-0.239783,-6.401299,-8.915056,-8.569533,0.916060,4.719578,9.831877,-5.150150,6.241359,-7.206599,-9.311941,-4.655957,4.027693,-4.364328,4.593723,-4.962560,-9.301085,2.438399,-0.805708,-9.530777,-0.906195,-0.622761,-8.299187,7.391572,7.789374,-9.240345,5.163789,6.930079,8.980884,-8.464516,-0.741327,-1.900940,1.198599,8.657473,4.975653,5.152785,-1.720067,9.911805,7.553950,-2.209205,3.950499,-2.868319,7.832514,7.130026,8.379660,9.469868,-2.058713,1.532814,9.162881,-7.335092,-2.447214,8.841320,5.946100,-9.588532,6.481626,-6.070760,1.887602,6.294855,-2.650903,6.083435,-1.420029,8.990646,-1.133737,-8.956623,-6.589219,-2.358436,2.509001,4.249330,-4.830310,8.511098,-1.263263,-3.143335,-4.921197,-2.495147,-6.697361,-2.677821,6.802407,-1.395551,-1.059897,5.056171,1.797298,-5.987026,4.263010,2.110612,2.204681,-5.295127,-6.560852,4.102640,-1.555668,-6.447667,9.005432,-9.255490,-9.801281,-4.992581,7.181913,0.465662,6.485867,1.161527,1.977614,-2.420728,0.067730,-1.252696,-0.527060,-3.984355,-0.057251,7.215468,-4.686315,-0.214739,-0.029967,0.504807,-9.939080,-1.825544,-7.622434,9.584664,9.585017,-7.904161,-8.355351,-6.597428,-5.587531,9.848371,8.323879,-1.500213,-3.387852,8.355858,1.579199,1.995722,2.173717,8.547275,1.579086,-6.760602,0.092477,-8.745900,8.938265,-0.496046,5.629618,-0.878706,-1.014246,-2.776730,7.107107,-8.781749,3.693125,3.722900,7.399986,-4.014355,6.373708,4.634691,-8.258491,-5.028866,3.739688,2.717760,-5.857238,4.312521,2.699253,-7.248929,1.029682,4.243817,-9.078204,-2.997442,-1.356692,-5.959011,1.927252,-4.701495,3.243809,0.617666,2.882791,-1.423654,3.737428,-3.645450,8.907335,8.512253,9.892310,0.351901,6.067254,-1.057837,9.618575,7.495213,-9.899852,-8.147436,-7.472021,-1.222994,-4.314847,-6.003986,8.452999,-0.132497,9.114446,2.799351,4.533937,-4.899792,-2.491401,-4.929472,2.103285,-0.407131,5.734356,-0.718684,1.015798,0.343407,6.836396,1.827147,-4.687332,4.694182,6.160192,9.390174,-3.480010,-4.724280,-6.992179,-5.709066,-0.429224,3.738940,0.862870,-6.085820,5.727922,-7.644257,6.819624,6.533850,-1.405614,2.432141,1.842260,-0.045332,-4.570259,9.996831,6.416454,-8.018324,-6.045280,2.939907,8.921786,-7.701723,0.457991,9.821619,-5.834909,-8.913137,-5.321632,5.579149,-5.140227,9.319940,-8.919814,7.661957,-2.382515,6.288492,-3.332254,-9.763151,-2.790152,-1.255330,8.677629,-2.553690,-7.350912,-5.850540,-9.819467,-4.062691,1.297220,5.883005,-0.443956,1.986851,4.900807,-0.001324,1.474600,9.885783,5.589284,9.788273,-3.264689,3.157067,3.948838,1.036042,3.565514,-6.136816,1.460585,-4.212468,4.735991,-3.140652,-0.980676,-1.984329,1.923628,-7.926111,2.301733,1.916885,7.855034,-1.705449,6.532532,2.368312,1.206269,4.044840,6.683920,8.330609,-9.050310,0.459446,-1.898877,-3.208557,-6.720359,-0.049057,2.997713,1.831011,-1.792535,6.663054,5.367556,-2.617096,-4.935075,8.138782,8.641244,-5.012505,-2.558895,0.678090,3.284552,-3.628444,-6.524061,7.814996,-1.944451,-9.539557,-0.619087,-2.813349,-0.209119,3.517079,7.280739,8.156479,8.305677,-5.560107,5.353866,-1.380068,0.633484,-5.884230,4.549079,1.434696,-8.285584,2.324218,5.756054,-2.757637,-4.721204,4.295574,-7.887705,4.401699,-4.078818,1.089054,4.512966,7.769170,-2.353077,-8.740840,2.302067,-8.000393,5.885304,0.487385,7.808052,9.451675,3.993131,3.755573,2.732457,7.379316,-4.582419,3.942481,-4.004653,9.729123,4.320197,-8.921024,8.783238,-4.995029,-6.424292,-0.365052,-0.113912,-8.220858,-1.999800,9.919473,-6.561495,2.075212,-4.143372,-1.879154,5.480463,1.105000,8.966729,-4.382612,-1.888381,7.335134,-1.793137,4.271018,0.500603,-3.432840,7.898991,8.117349,-2.805665,5.514387,-7.849166,1.703727,9.095516,-1.957413,-0.435564,1.955894,4.734109,-9.373602,-3.491082,-4.766456,3.070327,8.366664,6.613759,-7.050369,-8.168899,-6.793936,0.356235,-9.534278,-6.174299,4.874666,1.901684,-6.126758,3.221988,-7.220550,-8.963940,-8.676312,6.986331,-4.081038,-1.994250,-5.777205,-0.965092,9.498901,-0.560343,-5.426038,-8.069666,-1.395047,6.943921,4.301265,3.356882,-1.798247,-0.307581,5.004505,7.102407,-9.856403,-0.680157,-9.048451,9.501844,-7.694614,4.827217,9.844372,-6.027806,-5.839910,-6.600353,-8.955047,6.874386,5.375478,2.921525,-0.518137,-3.573653,1.615391,4.412316,-2.682119,7.697548,9.165665,0.146259,8.334888,-1.133660,7.797951,3.997662,-8.904708,4.495851,-6.464779,-9.445345,5.897188,-5.126505,3.078255,-3.864846,-8.837167,-8.991659,-0.175115,-6.518595,1.673823,6.662583,3.060400,-1.448988,-5.484035,7.823425,5.077299,0.547372,1.031124,4.494980,9.492351,-8.790861,5.583741,7.514433,-0.827008,5.257493,-1.950377,5.755349,3.361768,0.012137,5.958140,5.230967,-2.161128,3.790518,-7.629710,-3.785447,-4.528259,2.988326,8.288639,5.443527,7.043788,8.768413,-4.094091,6.138435,8.193180,1.688760,-6.070339,9.905426,9.740780,-2.977125,5.902415,8.627065,0.796063,7.773718,-6.481728,-7.229059,-9.386746,8.253815,-7.020307,-9.495397,-4.689069,-8.432026,-0.642660,7.481441,-1.766969,9.415173,2.613249,7.109224,-4.525495,8.470774,-2.837147,-8.946342,-5.664453,2.279693,-5.241940,-7.152917,7.317273,1.019878,-0.033900,6.030268,-8.202333,-8.803406,1.214177,-2.956817,-7.258405,-3.487854,-2.561058,6.232789,8.518231,1.221443,7.589838,-4.066463,6.912745,-3.067185,-6.777418,-8.456694,2.814027,-4.938111,2.464404,-4.699894,3.969467,-3.094694,8.715726,-7.719602,-6.556624,-9.573683,9.202713,-2.153185,0.460998,-5.088540,-1.911611,-2.134761,5.540233,-9.043642,-8.725393,-5.935820,-6.445765,9.439237,3.971263,-6.969188,2.111538,6.891553,7.279778,4.954696,-0.695750,-2.906990,6.674643,-3.340993,-8.681583,6.228964,9.305186,-6.585583,-6.126348,6.704228,8.767514,5.365969,9.851776,7.932232,-8.107103,4.051513,-9.522725,1.845768,-6.751928,-8.412717,-7.134406,5.543504,7.512426,7.227447,8.159188,6.538669,-5.296411,-8.407907,4.427841,-5.327650,-7.937310,3.017493,-9.206442,-1.539575,-6.570648,8.235738,-7.854312,8.236765,-0.301307,2.515793,4.565964,-0.709792,5.189780,4.354600,-5.623270,-0.531884,1.231663,6.444761,-5.806767,4.673868,-7.960324,-1.520007,6.940549,-5.151569,-9.660209,-3.780346,3.504117,-4.536282,0.611340,6.538841,0.229727,-9.155156,6.868927,-4.364190,-2.100526,2.510562,-7.104888,6.913222,9.718325,6.383571,-7.090810,6.539511,-0.370290,-9.085371,-5.706725,3.196729,-3.200922,-4.039097,5.635290,2.900291,-1.353646,-4.409714,-5.912073,1.614288,-1.661319,-6.676113,-4.880059,-4.852787,6.349518,-6.220531,-5.109141,3.045710,9.328000,5.124716,1.539192,-5.620415,7.188832,-3.289627,2.723007,5.737415,8.657032,-1.112691,7.534820,-5.577035,2.135504,-6.720403,9.415486,-9.447934,-4.417097,0.200884,5.468190,5.474002,6.958927,-2.795352,0.334526,-0.197925,3.243807,-3.642417,3.208167,8.114862,4.924614,-9.060004,-9.410832,-4.774337,-0.752874,-0.658620,2.606594,-0.180672,3.104328,0.386569,-8.693378,4.862263,-2.487563,2.819638,1.279042,1.444220,-2.575825,8.417811,-4.378427,9.998130,6.627624,-0.714505,-6.460598,8.799273,-9.409482,-5.054437,-2.820640,-2.457786,-1.784226,-6.560539,7.564601,-3.840716,-1.729087,-2.015304,3.765283,0.541965,7.260077,-0.700607,2.953444,6.374496,-5.208288,-4.704783,-7.346240,-1.640274,-1.311742,-1.254421,-8.839946,-6.139488,-4.353543,1.200375,-0.375645,-8.895343,9.852024,2.033095,0.700052,-5.718673,3.094930,-1.048553,1.540555,-9.808492,-6.177706,8.251559,6.751630,3.324901,-6.101565,-7.465118,3.820323,-0.843125,6.898828,5.930594,7.755417,-7.927338,9.104211,-7.304630,6.866897,-4.461873,7.151102,-5.005486,3.734885,-5.285603,6.623541,7.085565,9.710415,1.984410,5.027429,1.524436,-5.987714,5.030655,7.519592,-3.363422,-8.012719,-3.064742,6.120039,2.575940,-4.955283,-9.132529,-5.549737,-3.924221,-2.978095,-1.810997,7.190346,-0.751905,3.567919,2.651179,3.595465,-6.477538,-5.840972,2.708824,5.479900,7.533350,-4.514793,2.206388,1.679344,-2.215233,9.574116,2.670857,5.227142,-9.120658,-0.822581,5.260237,-3.322472,5.939809,-0.324075,-6.316365,5.472138,5.597943,7.095840,-9.404502,-5.455094,-4.013969,8.618729,-1.358543,6.710657,-1.801728,-2.937936,4.358409,2.791890,-3.812381,6.720358,7.990461,-7.075763,-2.852413,-0.789337,-4.777681,-5.120352,-1.798920,-2.592530,-5.994108,-4.235624,6.773121,-6.578687,4.947867,-0.209119,8.879445,-3.221960,-1.192836,0.507610,-9.319561,-8.671594,-8.775671,-4.309534,-5.959638,-7.677993,-0.915369,6.053711,3.533445,5.255198,6.000124,-3.558629,1.059444,-6.034021,8.048840,5.426799,9.040761,-9.459601,-6.759891,-6.600338,-0.055153,9.705838,7.826715,-4.435857,-4.999309,3.309832,4.128643,-4.767426,-2.344341,3.930414,-5.773813,-8.649723,-0.636465,1.619282,5.018928,8.789773], dtype = "float32")#candidate|13956|(1350,)|const|float32
call_13955 = relay.TupleGetItem(func_13793_call(relay.reshape(const_13956.astype('float32'), [1350,])), 1)
call_13957 = relay.TupleGetItem(func_13796_call(relay.reshape(const_13956.astype('float32'), [1350,])), 1)
func_9254_call = mod.get_global_var('func_9254')
func_9256_call = mutated_mod.get_global_var('func_9256')
call_13964 = func_9254_call()
call_13965 = func_9254_call()
func_7280_call = mod.get_global_var('func_7280')
func_7282_call = mutated_mod.get_global_var('func_7282')
const_13969 = relay.const([6.501851,-6.740225,9.029327,1.552613,1.674431,3.703377,-4.854156,-7.582980,-2.661442,7.917715,-8.997154,-8.368422,9.738703,7.492990,-6.792191,-9.671739,-1.132201,9.535900,-4.039821,-8.940561,-1.748542,5.050730,-3.785588,-3.187314,-0.917393,8.845922,9.872249,-2.160701,-9.256903,1.387619,7.316576,3.900708,-0.077566,2.987214,6.055693,-5.186587,-1.841870,-7.163354,-8.023987,3.630904,3.391304,4.043099,-9.177138,3.263923,-7.671679,0.079006,5.670774,7.380070,8.864791,-8.574700,0.168654,8.937465,-0.998032,-3.404505,-7.792906,1.808442,7.873328,3.418533,9.725390,-5.053313,4.748023,3.561763,-6.337781,0.974649,4.596755,7.036271,-9.834932,-3.749923,-4.859933,8.460866,-8.739859,-7.984953,-9.333335,8.824945,1.493488,2.024217,-9.682142,1.235610,8.581716,-8.825797,-0.934615,6.111798,-9.057920,6.327247,9.443897,-7.218164,3.705670,6.888044,-9.930856,8.989233,-6.996302,-3.643869,4.782333,-0.417461,-6.927827,-9.566881,-5.783579,-1.032928,1.342679,3.750955,-0.251110,1.571233,1.448140,9.839331,1.228288,4.455343,4.852595,-6.369898,1.683045,-0.203722,-2.825562,-4.307193,-0.356830,0.534119,-9.258049,-1.315250,-6.112525,-6.920546,-8.804583,4.915666,3.133606,-4.937335,7.542345,6.603693,1.753635,-4.395561,-7.319584,-5.110169,3.502357,2.118335,-8.508132,5.079292,0.954164,-7.561622,8.263779,8.192181,-2.331623,-7.146472,8.954161,-4.478092,3.729496,-3.387918,6.123441,-0.759495,-1.298609,-1.121598,-5.058087,-0.397384,-2.834298,0.054991,-6.466817,-9.967616,-1.901465,-2.680769,-8.065824,-7.244007,-9.908564,-5.835015,7.589976,-3.585971,-7.792100,7.195675,-5.406800,-5.055574,-4.867208,0.220016,-2.574372,-3.130650,-7.112527,-3.790765,7.709168,-1.762209,5.973913,-9.506101,1.302859,1.676059,6.452791,-9.695234,-5.753450,-0.733729,1.835965,7.848200,0.060068,-6.177369,6.568933,2.592198,-5.689826,-6.913054,-6.687813,-9.204357,3.742307,7.144170,-4.457667,0.639314,-3.302305,-0.646336,0.846713,6.679368,2.317538,-5.463406,2.961288,4.240264,2.352226,8.102814,-9.020535,4.000454,2.686675,3.105391,0.306874,-8.454928,-4.099585,8.766995,1.111637,4.784467,-0.309782,1.854509,2.387616,1.999716,-6.324502,-0.536606,3.551578,-5.980263,-3.902123,-4.711784,-0.895610,8.064325,5.287214,-6.538140,7.779318,7.610450,6.776624,6.011132,-3.567629,4.787793,-9.628298,5.864533,-7.256025,-6.980984,3.142968,-4.450044,-9.548828,2.613748,-1.056128,-8.703580,2.804407,6.075354,-2.734991,8.107138,-2.398211,8.398192,-3.551212,-5.992328,-7.395408,0.829009,0.809302,-5.330820,3.784618,-8.813324,6.785649,1.640823,-1.612466,-5.734825,-1.137954,2.989820,-2.489209,8.807054,-5.232081,8.532476,-2.090031,-5.852566,-1.424793,5.611940,-6.111232,7.008652,-0.433353,-8.479983,-8.034920,3.214657,-2.261601,2.864910,6.897958,5.722763,-2.010614,2.036705,6.255057,-5.633216,-6.508697,3.450912,0.100748,-6.756414,-2.804603,6.122894,5.851697,5.837713,5.412810,1.153961,6.356811,-8.553957,0.674548,-3.497663,-2.202111,4.458693,2.790395,6.264695,9.763035,-3.195926,6.316603,-4.375202,3.542999,-8.240867,-1.470399,9.289498,1.602659,7.158229,3.034205,6.997280,6.919324,-6.072939,-9.529773,0.931553,-2.458874,8.943990,1.243648,-4.109769,4.853611,-0.402608,-2.654398,6.052661,7.928963,8.053224,-6.215363,-6.443651,3.135942,-8.158336,5.434277,5.984660,-7.027391,5.717883,2.801552,-2.376057,-4.269205,-8.112049,-8.838268,-6.001609,1.382633,3.595006,4.691378,0.683709,-6.338250,-9.087679,0.997117,6.141991,-7.784154,-3.527178,1.751421,-4.422301,9.004450,-7.927678,-9.619699,8.448543,-0.586696,1.200657,4.232027,-8.655840,6.861217,2.749462,7.895711,-3.750494,6.773296,4.827229,3.296572,-2.740161,-6.436973,-0.195853,-4.351088,-4.322084,-4.658106,-2.705691,-8.271951,-2.594301,0.611216,2.874368,-3.703057,-6.034334,-7.655573,-0.539130,5.967992,-2.795155,-2.134719,-6.111944,-7.870763,7.867298,-7.157675,-6.381098,0.253123,-4.645585,-1.826318,2.842011,0.705442,-8.712304,1.969083,6.042093,-8.801267,-0.333069,2.753627,5.154965,-1.210422,-8.050354,-5.590328,8.116471,3.439114,-5.796720,7.407084,7.904471,2.403558,-0.044653,-8.739744,3.071690,8.810268,4.272869,-8.616664,4.509932,-8.900469,4.735285,-7.202727,-9.361915,4.568270,-7.555432,-5.747029,7.407084,2.908545,-1.966850,-8.365534,-1.230051,3.959103,-2.084780,-7.712678,-4.953579,4.317023,9.491438,6.647303,-2.165853,-8.482798,8.032591,-0.859273,-5.754716,4.556759,1.906819,-4.471947,4.715799,-8.300844,3.022842,1.127627,4.594582,-2.835797,9.676916,-0.324521,-2.894804,-6.808396,2.250275,-9.630734,-6.237595,-5.879920,6.185404,-8.524051,-9.571055,-1.285822,2.651267,-7.225717,1.964035,-2.641127,-5.299806,-0.917064,8.097236,-3.804528,1.967389,0.225293,-4.817784,4.070086,-8.103605,5.245186,-1.053268,1.513234,1.738414,-7.927891,-4.837408,1.668945,4.758323,2.187093,-6.257630], dtype = "float64")#candidate|13969|(490,)|const|float64
call_13968 = relay.TupleGetItem(func_7280_call(relay.reshape(const_13969.astype('float64'), [7, 7, 10])), 0)
call_13970 = relay.TupleGetItem(func_7282_call(relay.reshape(const_13969.astype('float64'), [7, 7, 10])), 0)
output = relay.Tuple([call_13927,call_13951,const_13952,call_13955,const_13956,call_13964,call_13968,const_13969,])
output2 = relay.Tuple([call_13928,call_13953,const_13952,call_13957,const_13956,call_13965,call_13970,const_13969,])
func_13975 = relay.Function([], output)
mod['func_13975'] = func_13975
mod = relay.transform.InferType()(mod)
output = func_13975()
func_13976 = relay.Function([], output)
mutated_mod['func_13976'] = func_13976
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9380_call = mod.get_global_var('func_9380')
func_9382_call = mutated_mod.get_global_var('func_9382')
call_13995 = func_9380_call()
call_13996 = func_9380_call()
func_652_call = mod.get_global_var('func_652')
func_654_call = mutated_mod.get_global_var('func_654')
const_13999 = relay.const([-1.865838,4.830998,-6.013198,-1.559428,1.606429,1.477552,7.634911,9.194649,9.881363,-3.360453,-7.835106,-6.850061,-7.597735,-9.186070,-3.028622,-1.104313,-6.179176,-6.640573,9.494015,-5.860123,-2.777049,0.788759,-7.735102,-3.912267,-9.679558,6.214788,0.750455,8.917202,8.454381,2.398038,0.036552,8.528156,-5.823561,8.579008,-1.332248,-7.116142,4.430916,-3.126228,-2.649818,5.912380,-1.078315,-0.797055,-9.941269,8.544688,7.897046,-1.536791,-9.817376,-1.465482,2.748852,-1.638169,-6.016160,2.281932,-9.265445,2.650516,-7.168294,-3.045141,5.039971,2.559888,-8.670790,-4.974094,6.757049,8.263239,-1.441290,-9.686237,1.094919,5.177884,2.169383,3.649571,0.892105,7.832464,-2.716601,-1.259883,-0.751624,1.270537,-2.831020,-8.607826,-5.752029,2.626558,-7.170146,2.017575,-3.438452,5.871167,8.406416,-1.668268,7.869227,-1.465964,8.245190,-0.715477,-0.059090,-1.056138,4.680804,0.521423,-5.591144,-9.875226,-9.180715,-5.442220,-0.716876,3.900761,2.876864,-3.397918,7.675900,-3.161561,5.944215,-2.284884,-4.248040,-2.631148,2.384378,-4.504148,-1.001368,-6.558741,-9.375068,-8.368679,-7.683031,-0.271587,8.541343,8.594701,8.045616,4.064483,-0.566121,9.013673,-0.687323,-1.948796,8.080340,-3.147346,8.624245,-2.674532,5.467670,-7.171936,-8.151283,3.990100,-7.173401,-7.014421,-8.576355,-9.514889,4.017265,-7.762853,-7.884492,-2.427642,3.158978,8.346651,0.773448,-5.365156,-5.586068,1.602742,3.144892,-6.565405,4.998270,3.800211,-6.663840,-3.674622,3.176960,-8.422604,6.711814,3.288510,2.097760,0.683235,1.216871,4.909928,-2.047366,-0.051371,-3.909228,2.403169,-0.654277,2.920592,5.641266,-1.955990,-5.335524,-1.622328,8.148340,-3.068233,-2.481767,-2.109739,4.086608,-7.425138,-4.533868,5.510364,0.892273,-0.354143,-2.547338,2.279714,7.642476,-2.040749,-7.928290,4.952673,9.859325,-8.326742,1.475988,8.145540,-5.527580,-4.975906,-3.034160,9.924434,8.495984,8.349761,-2.831639,5.057041,9.820151,5.211770,-4.375701,4.258847,4.515486,2.539745,-5.497373,5.519052,-9.396054,9.854931,-4.621230,3.874223,-3.029968,1.414447,9.849694,-4.954151,-5.244461,-1.115782,-7.041300,-6.015275,3.279796,-0.959129,-0.343381,-7.312343,-6.321487,-1.522756,1.678409,-3.966564,-2.202844,-4.898488,-0.180416,-9.457757,-7.756435,8.734253,6.512992,-0.258203,1.423522,-6.373286,4.295567,1.012965,6.526138,-8.621203,5.474903,-4.282553,-1.711105,7.772793,-8.750262,9.091724,-2.353388,9.176788,2.888180,-5.354906,9.573344,-7.069631,4.521578,-7.470302,3.028574,4.303452,6.101800,3.418832,-8.351099,-4.930076,-0.675415,-0.591274,-5.774689,-2.164542,7.200639,-7.170780,-4.399201,8.488895,-6.216023,-3.206043,-7.612170,-7.445479], dtype = "float32")#candidate|13999|(270,)|const|float32
call_13998 = relay.TupleGetItem(func_652_call(relay.reshape(const_13999.astype('float32'), [9, 5, 6])), 0)
call_14000 = relay.TupleGetItem(func_654_call(relay.reshape(const_13999.astype('float32'), [9, 5, 6])), 0)
func_12730_call = mod.get_global_var('func_12730')
func_12731_call = mutated_mod.get_global_var('func_12731')
call_14002 = relay.TupleGetItem(func_12730_call(), 2)
call_14003 = relay.TupleGetItem(func_12731_call(), 2)
func_11501_call = mod.get_global_var('func_11501')
func_11503_call = mutated_mod.get_global_var('func_11503')
const_14015 = relay.const([[-1.640095],[-3.596666],[-1.756363],[-9.784089],[-5.307673],[7.665879],[0.998848],[-7.306339],[7.208004],[-8.617843],[0.543512],[6.301898],[7.736598],[-5.400713],[-4.187544],[6.710843],[6.444751],[-0.627870],[1.039967],[9.480624],[0.491270],[4.704913],[1.766245],[2.589000],[-4.758239],[-3.394323],[6.695593],[-5.778336],[1.195044],[1.360147],[2.376667],[-4.928626],[-3.161725],[-5.147493],[3.233573],[5.465819],[-7.839431],[9.260289],[-2.688732],[-0.502771],[9.713682],[-9.314799],[-5.170251],[6.508489],[6.313272],[9.282191],[0.838521],[-2.105767],[0.941122],[-3.792795],[-2.693327],[2.691150],[-5.066886],[-4.006824],[-7.125680],[7.403511],[-1.324261],[-0.191904],[-6.033971],[-7.773983],[-3.084469],[1.111403],[0.376690],[7.571187],[-2.981722],[-1.326658],[4.179064],[-2.930439],[-9.922894],[-5.935551],[8.681941],[-0.150732],[-3.981380],[3.191073],[-4.059245],[-1.378497],[5.408402],[5.951440],[6.319320],[5.878141],[-9.768765],[-4.148200],[-0.391141],[0.905497],[-8.541215],[9.589738],[5.498556],[0.990436],[-3.885340],[7.664155],[-5.875931],[-9.153501],[9.983614],[-2.683553],[-3.732427],[-0.226760],[4.040782],[6.627265],[6.345290],[9.942639],[-3.801856],[-3.913507],[-2.263358],[4.216971],[-3.176452],[-1.522889],[2.565949],[-1.344430],[-4.627870],[8.257588],[1.310305],[6.950679],[0.819150],[-1.952984],[2.474335],[-9.091145],[-3.958015],[1.441040],[-4.838123],[3.386913],[4.863102],[7.523123],[-8.207470],[4.692027],[-8.046230],[-6.936644],[6.343780],[6.235652],[-0.830586],[9.185613],[7.426908],[4.953723],[-9.275541],[-0.113261],[-5.360067],[2.578909],[6.276305],[-7.701945],[5.465052],[-1.091519],[-8.181285],[9.904723],[-1.243307],[-4.826144],[-5.364784],[-8.923429],[5.439046],[6.029763],[3.942500],[-3.922348],[6.459894],[2.973239],[-0.809800],[3.704990],[-0.596845],[-5.919161],[-8.662490],[-4.778046],[-3.742957],[7.760796],[-0.193061],[-4.590227],[2.757416],[-3.308167],[7.968897],[-1.074248],[-2.066841],[-0.591961],[1.525349],[-8.593246],[2.112746],[5.267248],[-8.694372],[6.864080],[-3.428977],[9.861536],[-1.132631],[3.958616],[1.014473],[-3.840591],[-7.707939],[-7.162258],[5.786160],[-1.722892],[-3.508319],[-2.669344],[9.233494],[5.841075],[0.768239],[-3.936549],[6.282606],[-2.537073],[8.811233],[7.096692],[7.779970],[8.502283],[9.936021],[5.937129],[-5.837222],[2.390962],[-0.729747],[2.286910],[0.604276],[-6.879353],[5.738552],[6.283497],[-1.620526],[-2.640019],[0.569267],[1.048915],[-0.011261],[-6.002410],[-0.709374],[-8.644096],[3.132069],[6.626166],[2.980148],[7.875258],[6.892068],[9.869918],[-9.861497],[6.908449],[-6.967141],[-0.807680],[9.214827],[8.127606],[3.496254],[7.691732],[8.688734],[-0.036054],[-6.751505],[-1.801758],[-3.921921],[-7.294622],[8.529202],[-5.876417],[-8.569361],[6.488901],[-6.038917],[-3.068016],[0.438685],[8.019953],[-4.155450],[-5.130675],[-6.463145],[-8.253133],[-1.277098],[-3.455057],[3.562089],[-8.418010],[-9.824942],[-9.641558],[-9.439038],[4.221107],[-8.660253],[-8.828897],[2.479366],[-5.850574],[0.609265],[7.940996],[4.033505],[-2.632042],[6.541683],[0.365823],[9.731418],[7.127130],[-0.312619],[0.945634],[3.577134],[1.639100],[-6.254006],[6.505883],[1.217581],[4.608388],[-7.519421],[-6.373355],[4.398817],[2.146606],[2.973614],[6.505061],[-2.147297],[-5.764649],[-8.356721],[8.481205],[3.716423],[5.373440],[3.451180],[9.988555],[-4.616167],[7.590853],[-0.885240],[3.297219],[-2.797627],[-3.011562],[1.764336],[-6.118042],[-5.876637],[-7.550360],[-8.324975],[3.093163],[2.107783],[-3.058143],[5.662068],[8.836146],[-7.352003],[1.451877],[0.758643],[-3.597079],[3.116417],[9.644897],[-1.141914],[6.565834],[7.358181],[-1.060926],[2.647976],[3.348190],[-4.981262],[0.001686],[4.454692],[-7.824612],[5.164081],[-0.434722],[-2.002321],[-5.780627],[1.703951],[-6.317528],[-1.846692],[7.362457],[1.809598],[2.515516],[1.324940],[5.489956],[-3.999866],[8.245614],[-7.555729],[-2.986448],[4.463712],[-8.212303],[6.297683],[-2.714750],[-3.004571],[4.324661],[-7.304478],[-5.639743],[-1.361088],[-1.875100],[-5.607528],[8.072448],[7.270790],[4.992560],[-4.352232],[0.471928],[-3.723332],[3.411961],[7.438729],[5.016609],[-8.925046],[-9.930363],[3.258406],[9.391421],[-3.060495],[4.451822],[4.752039],[-7.805584],[0.845949],[-2.015230],[4.783122],[-9.022410],[0.382887],[7.172609],[6.383192],[2.178536],[7.311113],[-8.840940],[-0.739398],[-9.534885],[2.331553],[-3.758282],[2.837138],[1.386576],[-5.268525],[-3.701142],[-0.734713],[4.588418],[4.271794],[-7.117929],[2.911027],[-3.609531],[3.649670],[3.480422],[-1.381768],[-4.859018],[1.445749],[3.227364],[5.990590],[-8.635139],[-2.659527],[2.355352],[6.570595],[0.014838],[-5.101134],[2.106358],[9.021556],[-4.369304],[-3.822229],[-7.642535],[-1.294747],[-1.551611],[3.568727],[-3.080720],[0.400678],[-2.909727],[2.092728],[-3.376490],[6.136187],[6.690470],[7.079424],[4.366274],[2.750353],[6.809135],[-9.773556],[-8.784798],[-1.556126],[-1.059528],[-7.833798],[1.060128],[7.973870],[-1.568148],[2.969877],[4.158330],[-9.736174],[-5.763036],[9.714264],[-1.526126],[-7.658164],[-8.199906],[5.178328],[0.843657],[-0.760098],[-1.584441],[-6.518858],[-9.448857],[7.678873],[-5.360865],[8.777842],[1.237031],[7.158250],[2.335788],[-3.013913],[0.813535],[4.847408],[8.590425],[-0.983180],[-4.227273],[-3.270060],[-0.226063],[-3.569643],[1.141230],[1.316340],[0.989464],[8.228861],[-7.534442],[-6.117650],[-4.744285],[6.306742],[9.485977],[7.177104],[3.197566],[8.652858],[-3.057927],[-5.458329],[-6.190198],[6.624166],[1.858249],[-4.408105],[4.601790],[7.933912],[-4.473922],[5.904328],[-1.914210],[-5.047577],[5.583825],[-3.223452],[0.882130],[2.526369],[-9.837299],[-0.008070],[-9.725199],[-2.770369],[-2.767408],[-4.076571],[-6.028233],[3.441316],[-8.128654],[5.268465]], dtype = "float32")#candidate|14015|(495, 1)|const|float32
call_14014 = func_11501_call(relay.reshape(const_14015.astype('float32'), [15, 3, 11]))
call_14016 = func_11501_call(relay.reshape(const_14015.astype('float32'), [15, 3, 11]))
var_14021 = relay.var("var_14021", dtype = "float64", shape = (9, 5, 6))#candidate|14021|(9, 5, 6)|var|float64
bop_14022 = relay.greater(call_13998.astype('bool'), relay.reshape(var_14021.astype('bool'), relay.shape_of(call_13998))) # shape=(9, 5, 6)
bop_14025 = relay.greater(call_14000.astype('bool'), relay.reshape(var_14021.astype('bool'), relay.shape_of(call_14000))) # shape=(9, 5, 6)
output = relay.Tuple([call_13995,const_13999,call_14002,call_14014,const_14015,bop_14022,])
output2 = relay.Tuple([call_13996,const_13999,call_14003,call_14016,const_14015,bop_14025,])
func_14035 = relay.Function([var_14021,], output)
mod['func_14035'] = func_14035
mod = relay.transform.InferType()(mod)
mutated_mod['func_14035'] = func_14035
mutated_mod = relay.transform.InferType()(mutated_mod)
var_14036 = relay.var("var_14036", dtype = "float64", shape = (9, 5, 6))#candidate|14036|(9, 5, 6)|var|float64
func_14035_call = mutated_mod.get_global_var('func_14035')
call_14037 = func_14035_call(var_14036)
output = call_14037
func_14038 = relay.Function([var_14036], output)
mutated_mod['func_14038'] = func_14038
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9064_call = mod.get_global_var('func_9064')
func_9066_call = mutated_mod.get_global_var('func_9066')
call_14065 = func_9064_call()
call_14066 = func_9064_call()
output = call_14065
output2 = call_14066
func_14076 = relay.Function([], output)
mod['func_14076'] = func_14076
mod = relay.transform.InferType()(mod)
output = func_14076()
func_14077 = relay.Function([], output)
mutated_mod['func_14077'] = func_14077
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9254_call = mod.get_global_var('func_9254')
func_9256_call = mutated_mod.get_global_var('func_9256')
call_14087 = func_9254_call()
call_14088 = func_9254_call()
func_12988_call = mod.get_global_var('func_12988')
func_12989_call = mutated_mod.get_global_var('func_12989')
call_14146 = relay.TupleGetItem(func_12988_call(), 1)
call_14147 = relay.TupleGetItem(func_12989_call(), 1)
func_9744_call = mod.get_global_var('func_9744')
func_9745_call = mutated_mod.get_global_var('func_9745')
call_14150 = relay.TupleGetItem(func_9744_call(), 3)
call_14151 = relay.TupleGetItem(func_9745_call(), 3)
output = relay.Tuple([call_14087,call_14146,call_14150,])
output2 = relay.Tuple([call_14088,call_14147,call_14151,])
func_14152 = relay.Function([], output)
mod['func_14152'] = func_14152
mod = relay.transform.InferType()(mod)
output = func_14152()
func_14153 = relay.Function([], output)
mutated_mod['func_14153'] = func_14153
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11129_call = mod.get_global_var('func_11129')
func_11131_call = mutated_mod.get_global_var('func_11131')
call_14174 = relay.TupleGetItem(func_11129_call(), 0)
call_14175 = relay.TupleGetItem(func_11131_call(), 0)
output = call_14174
output2 = call_14175
func_14184 = relay.Function([], output)
mod['func_14184'] = func_14184
mod = relay.transform.InferType()(mod)
mutated_mod['func_14184'] = func_14184
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14184_call = mutated_mod.get_global_var('func_14184')
call_14185 = func_14184_call()
output = call_14185
func_14186 = relay.Function([], output)
mutated_mod['func_14186'] = func_14186
mutated_mod = relay.transform.InferType()(mutated_mod)
var_14197 = relay.var("var_14197", dtype = "uint8", shape = (16, 7, 4))#candidate|14197|(16, 7, 4)|var|uint8
const_14198 = relay.const([[[-2,7,4,2],[9,-1,-9,-2],[-5,1,-8,-9],[-9,8,-1,10],[-1,-7,7,1],[5,8,-1,7],[1,3,3,8]],[[6,4,2,3],[10,-8,-7,2],[-1,6,-1,9],[-2,-1,4,-7],[-5,8,-8,3],[-10,7,-10,-1],[-9,2,-1,2]],[[-3,8,-4,8],[7,-1,8,5],[4,5,-10,4],[3,-9,-7,8],[8,7,-1,3],[2,5,7,10],[-1,-5,1,-8]],[[5,1,-2,2],[-4,-2,-6,7],[9,2,1,7],[-6,2,-4,-4],[-2,1,-1,-4],[3,-2,-2,-9],[-10,-9,10,4]],[[2,3,-8,5],[9,4,10,-7],[-3,-2,-9,-10],[-9,-1,-6,-4],[2,-4,-4,10],[8,5,1,1],[-4,-1,-1,1]],[[9,-10,8,-5],[3,1,-10,-1],[5,6,-2,10],[-7,9,3,1],[-2,8,7,10],[-3,-7,4,-3],[8,4,6,5]],[[6,-5,-4,10],[-7,5,2,-4],[-8,9,-3,-10],[-2,2,-10,-3],[-1,-5,5,10],[-6,6,10,-6],[-2,-10,-9,-7]],[[-7,-1,8,-5],[-2,-3,-10,9],[-5,7,-4,4],[7,-3,6,-9],[1,-4,-4,7],[3,-5,2,-10],[-8,2,9,-7]],[[4,5,2,-5],[-2,3,9,-3],[9,-5,1,-7],[2,10,9,-8],[-9,-3,4,5],[8,-3,-7,9],[-6,6,8,8]],[[-7,1,-6,-9],[9,6,-9,-1],[-9,1,-3,-2],[5,-8,-5,2],[3,-8,-2,3],[-6,-7,10,-1],[2,-4,2,-6]],[[6,-1,8,-3],[-9,-1,-7,-4],[-1,-7,9,-9],[1,8,1,-2],[5,10,-7,6],[3,6,-2,-2],[-1,6,-8,-5]],[[-10,2,-6,-8],[6,-6,-2,-8],[2,6,6,6],[6,9,7,-3],[-6,6,-9,-3],[-4,-9,-3,-3],[1,-8,-5,4]],[[4,-7,7,8],[5,5,10,-1],[9,3,7,9],[-3,-6,-1,4],[-8,-8,1,10],[10,1,5,6],[-4,-8,-5,2]],[[3,-8,2,2],[3,5,-6,1],[2,5,8,9],[-2,-4,5,-7],[-5,5,-7,7],[6,5,9,-5],[-9,-6,6,10]],[[4,5,1,-8],[-6,-6,-9,-4],[-5,7,4,4],[-4,4,-8,8],[-8,3,-4,8],[5,3,-6,-1],[6,6,-9,5]],[[5,-5,-2,6],[7,-3,-4,3],[4,-5,2,3],[3,-6,-4,-10],[-10,1,-10,-6],[-10,-2,-10,4],[-8,6,7,8]]], dtype = "uint8")#candidate|14198|(16, 7, 4)|const|uint8
bop_14199 = relay.logical_xor(var_14197.astype('uint8'), relay.reshape(const_14198.astype('uint8'), relay.shape_of(var_14197))) # shape=(16, 7, 4)
output = bop_14199
output2 = bop_14199
func_14233 = relay.Function([var_14197,], output)
mod['func_14233'] = func_14233
mod = relay.transform.InferType()(mod)
mutated_mod['func_14233'] = func_14233
mutated_mod = relay.transform.InferType()(mutated_mod)
var_14234 = relay.var("var_14234", dtype = "uint8", shape = (16, 7, 4))#candidate|14234|(16, 7, 4)|var|uint8
func_14233_call = mutated_mod.get_global_var('func_14233')
call_14235 = func_14233_call(var_14234)
output = call_14235
func_14236 = relay.Function([var_14234], output)
mutated_mod['func_14236'] = func_14236
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13270_call = mod.get_global_var('func_13270')
func_13271_call = mutated_mod.get_global_var('func_13271')
call_14238 = relay.TupleGetItem(func_13270_call(), 0)
call_14239 = relay.TupleGetItem(func_13271_call(), 0)
func_12354_call = mod.get_global_var('func_12354')
func_12355_call = mutated_mod.get_global_var('func_12355')
call_14257 = func_12354_call()
call_14258 = func_12354_call()
output = relay.Tuple([call_14238,call_14257,])
output2 = relay.Tuple([call_14239,call_14258,])
func_14262 = relay.Function([], output)
mod['func_14262'] = func_14262
mod = relay.transform.InferType()(mod)
output = func_14262()
func_14263 = relay.Function([], output)
mutated_mod['func_14263'] = func_14263
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13482_call = mod.get_global_var('func_13482')
func_13484_call = mutated_mod.get_global_var('func_13484')
call_14307 = relay.TupleGetItem(func_13482_call(), 0)
call_14308 = relay.TupleGetItem(func_13484_call(), 0)
output = call_14307
output2 = call_14308
func_14326 = relay.Function([], output)
mod['func_14326'] = func_14326
mod = relay.transform.InferType()(mod)
mutated_mod['func_14326'] = func_14326
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14326_call = mutated_mod.get_global_var('func_14326')
call_14327 = func_14326_call()
output = call_14327
func_14328 = relay.Function([], output)
mutated_mod['func_14328'] = func_14328
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9380_call = mod.get_global_var('func_9380')
func_9382_call = mutated_mod.get_global_var('func_9382')
call_14393 = func_9380_call()
call_14394 = func_9380_call()
func_13258_call = mod.get_global_var('func_13258')
func_13260_call = mutated_mod.get_global_var('func_13260')
call_14396 = func_13258_call()
call_14397 = func_13258_call()
func_10738_call = mod.get_global_var('func_10738')
func_10741_call = mutated_mod.get_global_var('func_10741')
const_14406 = relay.const([-3,-7,-4,10,10,8,10,2,1,-4,-5,-5,-6,9,9,2,-5,-8,1,-8,7,6,1,1,-1,6,1,-4,8,-3,-5,2,-3,10,10,6,5,5,1,8,2,-8,5,-10,-5,-3,9,10,-4,7,-10,1,6,-9,-1,-8,1,6,8,-1,2,-5,9,-2,-8,9,3,-1,-6,-5,-9,10,1,-8,-5,-3,-4,5,-4,6,-7,9,-5,-10,-1,5,-9,2,2,-10,8,1,10,5,6,-5,6,-4,4,-9,-8,7,-1,9,6,10,3,-7,-9,8,-2,10,-6,-9,6,-7,4,4,-2,9,-2,-3,-10,7,-3,-7,-7,4,-1,6,-1,-4,7,-8,-10,-7,4,5,-2,-3,5,-9,7,6,4,-5,-4,-10,6,-10,-5,-9,8,-2,6,5,-7,4,6,2,-3,-7,-6,8,2,-10,-6,7,3,-4,7,10,4,8,7,1,6,5,-2,-6,10,3,-5,9,10,-8,-5,-2,4,8,-1,9,5,-1,-8,3,-5,5,-7,-9,-2,-3,-7,5,-5,3,1,3,-8,5,3,6,-4,-9,7,-7,7,5,5,3,4,5,-8,5], dtype = "int64")#candidate|14406|(224,)|const|int64
call_14405 = relay.TupleGetItem(func_10738_call(relay.reshape(const_14406.astype('int64'), [224,])), 1)
call_14407 = relay.TupleGetItem(func_10741_call(relay.reshape(const_14406.astype('int64'), [224,])), 1)
output = relay.Tuple([call_14393,call_14396,call_14405,const_14406,])
output2 = relay.Tuple([call_14394,call_14397,call_14407,const_14406,])
func_14427 = relay.Function([], output)
mod['func_14427'] = func_14427
mod = relay.transform.InferType()(mod)
mutated_mod['func_14427'] = func_14427
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14427_call = mutated_mod.get_global_var('func_14427')
call_14428 = func_14427_call()
output = call_14428
func_14429 = relay.Function([], output)
mutated_mod['func_14429'] = func_14429
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9830_call = mod.get_global_var('func_9830')
func_9832_call = mutated_mod.get_global_var('func_9832')
call_14515 = func_9830_call()
call_14516 = func_9830_call()
func_6512_call = mod.get_global_var('func_6512')
func_6515_call = mutated_mod.get_global_var('func_6515')
const_14518 = relay.const([3.045632,-3.902717,7.438395,-6.801109,-0.785505,9.418922,-6.436601,0.707038,9.855277,2.885064,7.789515,-7.921319,8.905765,1.129794,5.045975,-9.779135,-6.950878,8.011985,-2.956953,-3.924044,-1.823007,6.618627,-1.932712,-9.629295,8.624605,0.765360,9.773013,-5.263381,-8.794041,6.689849,3.636836,-2.072228,-7.873538,1.992485,5.782098,2.084168,4.332095,3.610866,6.093327,4.009258,7.938375,-2.561485,-5.756526,-1.719987,-7.622993,-5.289390,4.103102,1.436839,-5.112051,-5.233857,-6.125624,-3.268672,-3.718924,2.077819,6.289734,-9.555296,-6.739417,8.353743,7.108817,1.994999,2.482671,8.104713,4.304855,-9.666471,3.294067,4.313597,-4.589499,3.979409,4.506677,9.059319,9.894392,-2.661492,-1.349863,-9.172158,8.346909,4.692306,1.891640,9.391380,2.570825,5.829684,-9.449144,-1.855286,-0.129050,1.185300,5.363160,-2.017305,-1.041967,-1.150570,4.849090,3.999466,-4.547091,9.569594,3.835090,-1.967532,1.198409,-6.606194,1.917248,-0.322379,-0.855345,9.424850,-9.246923,7.779912,-3.651482,5.967630,-5.641488,-7.082280,8.231171,2.278672,-2.938029,6.265959,5.240018,3.328627,5.715067,-1.156426,7.660095,2.157033,3.646129,1.494403,-7.653261,5.138159,9.433920,3.096620,-2.047557,3.479180,4.655016,-8.984223,-1.869086,2.220979,5.375765,-6.721433,1.872792,6.115616,-1.502680,5.948063,9.553858,7.848717,-8.037805,-2.469816,5.713765,-5.763547,-9.979182,6.339897,-2.908179,-0.103744,-2.429125,7.847925,-0.557104,8.451880,3.931837,6.379375,1.711366,5.590576,-1.146978,-2.133604,5.621252,-0.491930,5.572777,4.523714,-2.153402,-2.632345,-1.498454,-7.519911,-6.266149,0.907086,-2.173881,-8.110938,6.463315,-1.508800,3.167955,-5.940030,1.228674,6.675532,-4.385722,-1.362838,-9.083401,-7.868453,-6.471388,-9.040380,-7.155062,-6.065849,-1.801277,-4.497781,-5.042064,9.066473,-5.545880,6.533496,-3.992673,-1.636932,4.861850,5.089695,4.566639,-8.422302,2.385731,-3.549721,-6.221762,-8.162629,-4.242662,-9.681670,2.049412,-3.159915,3.073531,2.916492,-3.682245,6.611413,9.520439,-7.813285,-8.481183,-8.779332,2.865633,5.594717,-1.243803,-7.488125,-5.535705,5.146823,5.709540,5.723008,2.581628,-8.004617,6.081686,7.058045,0.506451,5.694233,-4.898276,4.730753,6.804061,5.605713,-6.749222,-1.698575,7.007023,9.299604,3.326737,9.754289,7.652478,1.807406,4.521447,9.903595,-9.952926,-4.979273,2.089612,-0.122855,-8.098977,-3.174291,3.061023,-9.802408,-6.576363,2.312108,-8.342221,2.554251,1.685561,-9.826092,9.687174,9.956804,6.111865,1.232084,5.060188,8.467875,8.547038,-6.558113,-3.503456,7.219169,-3.620082,-7.213811,-1.356553,8.335840,-9.252760,-0.673023,8.121696,8.908473,-1.137633,1.902862,-2.254737,3.310753,-7.813428,4.471643,-0.688579,-2.685860,5.912695,-4.580935,-1.827441,5.139893,8.157381,-5.030157,1.371105,7.273472,-0.473061,0.902452,9.530298,0.819539,8.658603,-5.224125,5.123089,-3.659803,-5.853084,-9.274249,-4.196368,7.772036,-7.995312,3.472310,-0.151098,7.386793,5.697579,6.462413,3.403562,7.147929,1.417314,9.340967,-3.821634,-1.773104,-4.706204,9.486617,-9.406906,-9.998995,-2.109279,1.272403,9.293370,-4.127417,8.129239,9.573626,-4.985196,5.870715,8.530563,-6.755563,9.462353,-7.023750,-8.679712,-0.529912,-8.661127,5.834035,-3.833922,9.484539,6.445249,0.031913,-8.492256,1.936808,1.564308,-2.205514,1.094689,-1.615231,5.707889,-2.166590,-1.879732,7.097098,-1.989727,8.523395,9.757210,-3.294992,-7.489321,0.060468,-8.498589,6.695005,-6.508303,-0.224926,5.498619,-3.185885,6.915984,-1.120571,7.610151,4.413733,-9.493490,8.312802,4.225804,-8.109716,3.922131,-4.501024,-3.780288,0.005027,-9.982061,2.259761,-6.614371,-2.718385,-1.354612,3.157521,-9.847302,2.398825,0.815884,-6.685325,-9.696517,5.677493,6.946306,-6.111044,3.947856,-9.762228,7.462556,2.834329,3.984837,-0.199166,-3.209264,2.501968,-0.714545,0.663845,9.325517,-3.509952,-7.636057,5.518405,-7.290760,-7.832594,0.666314,0.704386,-9.124246,-3.971475,-0.624653,2.759109,-4.720625,-3.130231,-4.807700,7.804026,7.574126,5.179467,8.092135,2.145479,-4.665753,1.763193,-1.383753,2.247222,-9.500545,-2.309286,-1.458679,7.973451,4.784600,5.185888,-2.197289,1.616600,-1.175179,0.645546,-4.206636,8.217103,-2.175903,-7.532879,1.270148,8.866965,-1.566335,1.795225,-0.012254,5.690659,-9.476632,6.500460,4.380277,-7.498575,0.809962,7.591881,8.779938,1.411906,-9.664909,-6.885517,3.477220,2.447380,-7.629175,-0.892873,9.228617,-4.480922,-9.197439,-4.306548,-3.870843,2.653907,2.667619,8.434174,-4.676841,-4.253820,5.889972,-0.342549,7.198635,-4.632616,-1.494817,-6.415384,-9.770443,2.108079,-5.042492,9.268345,5.468903,-8.742667,3.490045,7.573909,-0.565544,-9.758787,-1.579643,-0.524327,-0.981874,0.305106,1.125340,8.995801,-0.533482,-0.079234,-6.167650,-3.023869,4.572025,-9.306404,-0.568366,-2.437993,-7.480320,-1.105007,1.554087,-5.367498,9.640679,8.984931,0.636959,4.424271,0.229236,-4.534017,1.441573,9.923539,4.845791,8.773687,3.764412,4.627837,9.105597,6.260693,-1.950477,-7.983467,1.493473,6.490691,-3.585615,9.314498,-5.431617,-1.141401,-0.089661,-4.617852,0.914132,2.673119,4.150858,-5.561911,1.232877,-6.393538,4.423067,0.884286,-8.096916,3.182839,1.055020,-8.773253,-2.308412,6.002568,4.697767,2.761196,-3.970830,5.204002,6.157809,-7.034107,9.890087,-3.306556,4.916179,-1.953687,-4.089082,7.422590,-7.568658,-2.038722,-4.889870,3.902603,9.839280,-3.123630,1.089313,-0.698602,-2.052092,8.788221,2.229056,-9.229579,-8.339251,-9.962843,6.869153,-3.675055,5.829611,-7.987687,6.210713,1.107230,-9.855158,-5.040486,-1.181638,-8.288405,7.529225,-1.539688,-4.822564,5.040581,1.598731,1.901124,6.477398,-2.180515,-4.077971,-3.383441,-2.890947,3.334947,-0.702970,1.335865,-1.951832,1.056174,1.155392,-7.969903,-3.120427,-5.026592,2.543119,-0.096517,-3.901944,9.416554,-4.153915,-2.466420,-7.827148,9.066932,7.304688,7.755057,8.606998,7.005079,-0.913240,-3.864571,2.056371,9.520537,-8.682430,-3.185971,-2.973284,-1.514211,8.207714,-3.397493,-1.136902,-3.587972,-8.822613,9.712319,-3.758597,-9.065876,-9.189831,-3.196748,-5.641016,-3.349182,9.380716,1.424783,-9.506361,-1.317662,-0.940510,3.029149,8.788984,-2.288659,6.242474,6.292543,-6.477634,6.132565,-3.446033,-2.862072,5.090607,5.675528,6.246516,-6.590468,-5.282980,-6.096724,5.271956,5.051934,3.985010,-3.263585,8.161916,7.343106,-2.908725,-0.199967,-5.151143,2.848883,1.789755,-2.201973,9.978715,9.927919,-5.935918,-5.483774,8.929845,-7.040958,7.194981,-7.794686,-4.212147,-4.322745,-9.996139,6.123034,2.945293,-4.535832,3.523040,-4.176832,8.337474,3.002282,8.969143,-0.099083,2.417754,5.194042,8.643859,-7.519937,8.587125,-3.959530,3.263991,-2.812221,-2.287907,-4.383471,-3.024588,-0.979815,-7.583078,6.854769,2.171106,-9.672340,-4.343881,8.885299,4.601559,6.410290,-1.830196,-7.713860,8.255445,0.942200,9.347721,3.493301,-3.191275,-2.291718,7.832369,-2.956649,5.773410,-0.951296,-0.436118,9.832188,9.807896,8.614234,2.587711,1.982360,-7.011353,-3.626580,-8.394512,6.598613,-8.927287,7.091533,7.647182,-3.015511,7.971381,-0.718251,8.347058,2.070912,-7.013843,-9.336501,4.821838,-0.414486,-0.913792,9.873132,6.195804,7.851385,-5.821811,3.570884,-0.494599,-0.814490,-4.952060,-6.438558,0.409431,-8.680118,-0.755854,1.856829,4.246255,2.168616,-5.082138,-0.552005,-8.092231,2.814493,5.369759,-8.658603,9.479943,7.078800,-9.689408,6.391423,3.189199,3.783798,-9.376808,8.412954,5.099177,-4.050863,-0.796591,4.023924,-4.973027,1.149807,5.036919,-7.279671,2.824841,3.898968,5.932674,5.247747,-4.249823,-2.349919,0.858832,-3.526288,-5.546435,-9.801805,-4.654634,2.381683,6.727160,-4.250941,1.932871,1.720167,-0.012819,-2.859635,6.132465,-9.175842,-7.555821,-7.525255,7.735702,-7.177714,7.790943,-8.691898,-4.393148,7.983208,-7.189417,9.526417,-5.866657,-5.388770,3.422199,-6.321573,-8.729394,-7.560121,8.430173,-8.676318,-8.065895,-9.392181,-9.953054,9.462836,0.335270,-0.474129,-6.813631,2.640780,-4.094539,2.021832,-1.207204,-4.412343,-5.786224,4.601021,7.283043,-3.848788,8.586735,-8.210381,1.421212,-9.303081,-2.799011,5.171939,-7.042315,6.791321,-7.621028,-4.287218,-8.069791,-0.402209,-9.865980,-1.618010,8.331664,0.844412,9.492345,-1.866726,2.381376,7.696940,6.866160,-7.659954,7.428061,-8.342992,-6.906967,-9.271081,6.606802,0.728131,6.933431,-7.927561,2.931933,2.488429,2.983264,2.309997,-4.985077,-6.342457,1.851085,-8.392108,-6.264945,8.879884,3.575756,9.740772,-0.704318,-0.703705,-5.791892,-6.963259,-9.895129,-3.324049,-2.544692,-5.339107,9.172978,-0.466394,4.888556,2.565119,-7.061737,-1.599631,3.807839,-5.246048,2.215888,6.099951,0.396231,1.327747,7.637525,1.636822,2.006504,-8.297720,-6.636281,-6.241279,5.599163,9.176137,-3.821627,-3.564961,7.268888,0.879937,9.793083,-6.610727,-0.167665,9.150799,-5.426937,4.745773,-3.446524,-2.918334,6.258161,8.433498,-8.137157,-4.764390,-5.075945,-1.286661,2.300924,-5.136313,-6.627251,-0.113149,-0.166371,-7.877412,-8.886785,7.675613,-2.084628,-2.623867,-9.698667,-4.092365,-9.107549,8.642685,1.947475,5.159484,1.351784,-8.565924,-6.591876,-1.615398,-1.314295,1.983149,1.666206,4.091658,-1.163544,3.757525,3.550724,-1.938041,-1.835250,8.297592,0.467308,-2.674565,-0.327457,6.956308,5.252618,-3.485331,-2.378881,7.504597,-1.402617,7.738364,-2.502227,0.502235,9.321940,1.287327,4.822382,8.488357,1.979349,8.592591,-0.325101,7.808088,-6.680605,3.561715,9.624983,-7.869554,-4.920510,8.526169,-5.140839,-2.261886,-5.327598,6.216234,-2.790404,-7.794582,5.429732,-8.778582,-5.214393,4.391585,6.527622,-3.434705,9.383751,-3.562048,-9.366470,-6.275418,-0.783348,-4.698661,9.036582,-7.027564,0.111471,6.390569,-6.379907,-4.808187,4.660629,8.178369,1.433824,-6.720279,3.987545,-4.454677,-6.354285,-7.163158,1.149383,2.474711,2.751817,2.916888,-4.008619,8.808332,-6.513316,-5.689439,0.518643,-8.136050,6.646765,-8.030316,6.839257,-6.527742,4.043048,-1.431631,-1.215021,2.382977,2.612445,-2.208160,-0.408525,-6.215928,2.647123,-5.620736,-4.120050,1.500455,6.898919,-3.149210,-9.697628,-3.880082,-6.443638,6.221692,-1.885962,-9.117640,3.823003,-6.772049,-8.546887,-2.026688,5.201932,-6.336674,2.680673,0.899685,0.496710,3.591265,-7.581150,-8.471112,-8.224476,0.580451,-8.605248,-8.474593,-9.604841,4.976666,9.811218,6.511294,1.051167,-6.145336,6.728210,7.782694,-6.158176,6.432894,1.374841,7.676023,0.111350,-4.571054,-0.038926,6.850951,2.757408,3.934053,-8.146509,4.897695,-0.959200,-2.017038,7.252173,4.385358,-2.143662,5.868472,-5.818601,4.158281,5.161505,1.201961,-3.189794,7.485433,-8.325777,-7.810832,0.791260,-3.179144,7.312261,8.721450,-7.636765,-5.721200,1.804723,-7.294452,-9.726694,1.797888,-2.718241,6.599600,2.746537,-8.409987,6.857460,-9.224386,6.669031,5.560478,9.699503,5.918923,8.763366,-4.160402,1.506253,-3.297737,-4.134813,-0.397907,-4.854273,2.763670,-2.538109,3.616799,-0.066552,-0.683982,-4.829773,6.223093,-9.913050,-7.110107,-8.596732,9.405613,5.261458,-5.096609,8.191766,-0.612021,-1.720415,-3.409751,-6.514146,2.806038,3.245792,-3.392968,9.382254,-0.228680,-3.333299,0.064158,6.772540,0.861823,-9.383988,9.263155,-2.873150,8.198679,9.660320,9.574473,-0.455413,7.105569,-0.928965,9.443588,3.140783,3.156615,-5.149598,-9.050843,8.398670,8.754223,0.161134,-8.796155,-1.973462,5.856596,9.035881,5.907344,3.876108,6.445929,-7.896354,1.528396,-7.588796,-6.023948,8.657541,3.706431,-0.663152,-8.530157,4.332215,2.837737,-2.715444,2.147423,7.865176,8.825357,6.911445,-4.568190,-5.764413,8.890055,-1.612890,6.475904,2.893508,0.388951,6.539875,2.516339,-8.795354,6.610897,4.162378,-3.869388,0.186624,1.930748,-2.338579,3.294352,9.400200,-1.201556,-9.457116,3.153888,-8.720598,7.305239,-5.561898,-7.844490,2.960257,-2.086507,-8.619845,1.679043,-5.348521,5.796676,-7.046173,1.612977,8.094299,2.751943,-0.423748,5.666521,2.198300,-1.941893,-8.770062,-2.006934,-7.160163,-5.368172,9.687342,2.311878,5.965743,8.101928,2.611420,6.199857,-1.826177,-0.798947,-6.781129,1.607749,-7.897053,8.071692,-6.809403,-8.202650,-5.330646,4.750086,-7.770865,-2.278494,1.684469,2.933704,-6.588900,-7.023224,2.179816,7.512535,-3.217856,-6.231388,8.239902,5.600545,9.285026,-5.130036,5.332852,-3.493380,-2.933961,0.474893,-0.585625,-4.548256,5.807872,5.173387,7.752996,-5.968518,0.919076,-2.150629,4.038795,-9.324985,6.407335,-8.616575,-1.902361,-1.088388,1.992482,0.990741,-8.960884,5.339506,-8.799184,4.990680,6.354166,7.737164,-4.066968,2.939402,-9.568397,-0.949620,6.985687,-2.311737,1.429068,-2.903861,-3.889754,-4.757856,-7.193203,-1.571066,-3.565019,-5.247664,-2.737764,-0.393604,-1.289757,-6.725863,5.056513,-5.710037,1.814350,7.434892,-5.139187,-7.805924,8.307583,8.429205,-1.684071,-4.760179,2.837146,-1.229039,-9.208539,-4.607079,7.579206,5.169851,-8.960516,5.308877,-9.114060,-0.367043,-7.380156,6.307764,-1.982596,3.893947,7.152621,2.233118,3.141052,-6.972851,9.270556,-7.240771,7.821514,1.197099,9.722291,4.193397,0.479802,-0.594697,-4.614533,3.847501,8.317337,9.616405,-4.530257,8.738304,8.077785,-0.212770,6.340181,6.202369,-1.038640,-1.501623,5.001942,-8.621933,2.627810,-0.525734,-6.011422,-4.915967,0.609217,-9.927280,4.474805,7.168453,2.796255,3.107193,-8.740113,5.912950,8.993470,-1.357194,-0.706044,-2.245349,-6.675954,6.273068,-0.830251,-1.403394,-6.951089,-6.338770,-3.806579,-6.846837,0.476006,-7.282163,-1.916384,-1.988673,9.005650,-5.237231,3.988774,-8.615220,5.502977,8.002211,9.093643,6.220672,-3.119049,0.237049,8.873203,9.931751,9.641332,-8.344700,6.503497,-7.751421,-2.069698,-0.968251,0.190638,7.687540,3.047706,-2.837494,-9.698676,-2.437913,3.514593,0.495449,3.317416,0.903344,2.826033,-4.006592,8.368909,9.003161,4.787436,9.427502,-0.189426,4.413818,2.131200,5.053716,-4.164011,5.339560,3.416423,-5.531361,2.514536,-4.775360,-7.010809,1.043111,7.125481,5.339891,2.348656,0.119723,8.111956,3.015969,-6.983433,-8.663150,-4.572179,4.744389,-7.596588,-0.591204,5.139397,-4.058733,0.907001,1.317472,9.237318,7.931517,-2.487331,-7.654010,5.855263,-6.826539,-2.483148,-0.180687,-5.044376,3.544521,-2.029938,-1.964836,-1.950251,8.853020,1.641877,-1.134227,5.307267,1.717890,-9.375896,2.799741,0.368739,4.412956,-3.640973,-9.446779,8.312952,4.719089,0.217182,-5.699397,7.282301,8.117928,-3.676656,6.936014,8.613397,4.777848,-7.016092,7.764592,0.463613,-7.237794,9.913318,-5.639152,-6.378687,-0.893661,-1.759646,4.979446,-4.750818,-9.179230,-5.627520,-8.968305,-0.110908,9.503755,-8.728124,-7.468992,9.715375,8.926732,0.539657,-6.993289,8.997163,5.360287,5.814283,7.782495,0.533667,-7.024630,1.483125,5.462929,1.556939,5.364524,1.747719,6.058748,-4.171341,5.010244,-0.642674,8.265905,-0.436759,9.213855,6.397171,9.845683,-0.269258,-7.878081,-3.952750,6.953237,-3.010011,3.871474,-1.052807,-8.909530,6.657559,-1.960687,0.781155,-5.297138,-2.072507,8.520276,-8.122979,-9.974627,9.757327,0.412095,-8.502069,6.435795,6.210131,3.148258,1.570472,-1.505450,9.604217,-9.843840,-9.015274,1.744400,5.005044,-9.586764,8.264189,-5.420775,0.813815,8.906071,6.438758,-1.040510,5.835915,-6.749333,4.739772,-4.048794,-4.992452,-3.736803,5.429594,3.050093,-6.613348,-3.889461,2.671852,-9.584209,-3.766233,-3.150226,-1.541624,-1.391706,-8.584415,-5.139292,2.668604,0.424464,-3.027065,-3.367439,4.091893,-5.259917,6.120593,1.540506,1.419055,4.867939,8.480441,9.471684,-0.499920,-0.874392,3.915248,1.387744,3.089330,-2.831382,-0.394709,0.516035,-5.092312,2.009429,-0.130561,-7.221986,1.901034,-9.303817,-7.024060,-2.545714,4.406093,3.986350,-1.393870,-5.314750,2.980734,2.202900,3.883309,7.281659,-5.908935,-7.687449,-7.063355,-5.449033,-9.488829,-9.711736,6.172643,-2.161110,3.755490,9.720455,-1.706935,4.990221,-5.305786,6.375320,3.836959,0.029599,0.053887,2.792961,2.120567,9.781261,-9.637052,-3.156719,4.677209,-2.435733,-2.610139,-4.322022,3.546704,7.420086,-9.875960,-5.851524,0.055040,0.441949,5.558909,-1.326939,-8.795414,-1.059952,-0.934207,-7.516852,2.174896,-8.827476,-2.507973,-3.310939,1.852492,4.618408,-8.881733,1.066226,-4.442574,4.852282,5.816021,-8.767550,9.118203,-2.172891,5.021610,7.731165,-5.807373,-5.808776,-4.202044,-2.270485,-9.665210,9.605457,6.513638,3.383431,3.873654,5.611382,-3.559988,8.460328,3.787227,8.197231,-2.159071,5.459314,0.008592,-7.142097,6.401117,5.101134,-9.117042,-7.282509,8.412208,3.703689,-3.847733,-2.514328,-3.823817,4.491539,3.236106,-3.243655,3.570241,-4.103927,-2.688984,5.229541,-9.344196,9.174800,1.314005,-2.376933,0.231437,-0.136403,5.084084,1.020652,-6.628669,8.869822,7.629319,2.603676,0.887269,5.048757,-3.162151,1.350591,4.699621,-1.800790,4.345642,-2.092603,-5.065601,-1.127199,0.351503,-4.187796,-8.283430,6.095240,5.851310,4.860083,8.659655,-6.860066,4.477023,-1.550715,4.798017,6.087767,5.350565,6.248375,-7.575229,2.220920,4.068235,7.853280,7.199022,-8.942691,-9.775760,-1.364740,-4.527243,6.820242,-3.932344,9.564408,-1.755465,-9.423933,-0.617315,-3.393838,-7.288974,-6.229867,0.574798,5.669111,-2.566966,4.217552,3.542206,-2.303809,2.157489,5.699993,7.025113,5.766467,-1.075947,-9.639295,7.255585,1.825728,-0.127040,-4.842107,-5.952143,5.197627,8.706736,8.235271,-7.644441,-3.214014,4.908741,4.893766,-3.917314,3.866848,4.303047,5.966836,-8.292912,-3.740162,-8.739324,-2.800314,-1.724001,-7.890409,-3.593770,5.485353,0.758475,-3.911061,8.248158,-5.944687,-0.858380,-3.188505,6.777376,4.237093,5.934778,-7.721859,-8.437983,-3.521871,-4.964586,-2.414902,-9.640446,7.423621,2.774300,-9.994088,-2.163071,8.713192,-0.800270,-1.683552,1.123847,8.736366,9.283317,8.843372,-9.125389,-8.522386,-3.289723,-3.418336,-9.450664,-6.194812,7.775098,3.884636,8.104810,8.087032,-4.135981,4.182649,1.675823,-6.837386,2.906025,-7.903617,8.037594,-9.677853,2.304724,-2.779614,5.559327,8.050289,-2.843025,-8.250838,6.313711,1.639064,9.080081,-6.720336,-5.854365,1.224238,-8.303738,6.578159,-9.559358,8.546310,-7.410608,-1.219202,-1.647363,6.291889,-6.549049,8.598762,4.151225,5.080474,3.589522,6.304683,3.231007,8.595526,-1.162928,9.274846,7.077421,-1.148914,0.750088,8.453942,-0.812963,-4.250378,-1.716179,1.233902,-7.463766,-0.240733,-6.528333,7.165420,-4.742100,7.400545,-9.492797,8.961107,8.672768,6.189155,-4.476451,-7.919525,0.545158,0.915654,-2.787130,6.792309,-2.831161,9.772021,8.860259,-3.696275,2.974889,-5.163767,-2.854785,0.805737,1.459396,-2.263727,6.879643,3.059178,3.461745,-5.707629,3.481365,3.083780,4.094755,-2.108425,3.311351,-6.547211,-1.408965,-5.242841,7.991802,-4.255688,2.109295,-3.582907,7.338241,1.632237,1.937526,7.587128,-6.387759,-1.488579,8.814701,-0.340047,3.282767,2.899722,-9.119373,-3.369072,-5.827280,-7.424932,-1.052547,-0.844509,-3.224679,-0.452285,-5.873611,-9.569740,-3.194033,-5.325369,0.262847,0.718024,-1.035469,-8.621838,-1.700934,-3.693232,8.179240,-4.032208,7.009108,-5.528780,7.016387,2.964301,-6.308081,-5.694826,-0.903194,-0.635908,0.399193,-4.514292,-3.816338,-8.631045,-4.562690,1.191020,-5.924065,2.024927,5.554631,1.014401,-4.970290,-1.962213,0.766761,-4.593545,3.528673,0.359672,-4.201252,-0.448036,3.643980,0.565197,4.246789,5.947467,6.850819,-1.527545,-4.971823,4.088082,-6.313507,8.094822,-7.202968,-5.595981,-3.693886,-3.438949,4.372001,-8.098471,-1.427748,-8.678778,-4.649958,8.655764,-8.286353,-9.907888,9.659516,-7.746418,6.557630,9.648948,8.041919,-6.743568,-4.775206,-0.294548,0.203997,-6.472087,-3.219685,-4.864818,-3.258688,-1.053227,4.095329,-8.578271,-7.726102,-7.955275,-0.352413,5.292911,4.714354,-0.779969,9.618061,-5.982943,0.190075,-4.524650,4.262615,-7.642344,-9.054966,9.943011,-2.693310,-4.987522,-5.524043,-0.434467,0.755900,-1.476466,1.198161,-1.554471,7.693720,-2.548955,8.948414,-6.520674,1.588694,-9.612989,-6.455344,1.801671,0.753211,3.490601,-1.200250,4.936749,-9.378714,5.368689,-4.840862,-8.329377,-3.654743,-5.670590,0.192477,-7.172069,0.048207,-3.404322,-3.067931,-0.937399,5.273168,0.971864,-7.441381,3.238026,-9.578559,-3.163919,-0.939929,-9.798544,8.021876,-8.418714,-7.048933,3.969628,-8.641314,7.271921,7.158785,-9.365325,7.657315,2.166155,-4.139242,-4.737253,7.909752,6.120884,9.048125,-9.607175,-5.571151,0.850074,3.925974,4.888995,-7.049885,5.260371,-8.733172,1.259543,2.248713,3.454306,0.779642,8.984368,7.506476,6.841696,-3.416417,6.719691,-5.154167,0.459646,-0.111074,4.210665,2.710208,-8.143241,6.941464,-1.788287,-8.914869,-2.203458,6.841534,-6.600658,7.816632,-0.928168,2.745751,-9.895795,-8.320033,-2.271432,-7.677591,-8.596665,-8.809105,-9.607686,-2.338105,-3.710128,-4.135715,-8.780181,-3.777723,-2.679975,-5.477593,-8.016992,9.608907,-5.546311,-4.029990,-5.056663,-6.988301,7.333135,2.370087,-8.505509,-1.541145,5.959082,-0.982777,-6.957734,-4.120484,-1.599480,7.189021,1.532452,5.176952,2.011710,-7.401417,0.072089,-2.261744,7.587895,-5.626463,3.462907,-9.608799,2.035341,-1.163444,-7.868741,6.831171,-9.791629,8.176040,7.612379,2.639765,-7.715375,-1.081140,-7.164056,-8.023901,-1.395252,-3.803340,1.277874,-1.056325,9.805790,9.956952,-5.957586,-9.487237,2.437456,-8.871886,-6.492830,2.881683,9.636860,-7.429250,-3.342489,3.509492,0.547001,-4.023326,-6.812965,-1.683698,-1.112491,6.128304,-8.022709,7.298981,4.154777,-0.410863,3.980101,1.613354,3.700532,-5.322467,-2.246119,-2.969105,6.560943,4.004331,-7.488505,1.057169,9.758679,9.383660,-9.529232,8.359596,-0.298357,-0.833468,-7.329579,-1.179462,2.831218,5.555491,-7.821665,-2.123748,2.379785,2.281045,3.987194,-2.713652,-2.668807,-1.537431,-0.586395,-9.982084,8.540451,-3.225814,-2.240736,1.697270,0.610764,-9.170799,-7.511421,-7.284055,-3.092524,0.912926,-2.585591,-9.699623,3.593270,-2.439500,-1.653282,-7.757688,5.645043,7.791840,4.931082,4.226296,-6.708538,-4.819661,-4.201526,-2.756191,8.103123,-7.050363,8.790513,-9.945719,9.703199,-5.891307,5.221132,6.117930,7.631993,2.635285,6.465837,6.713558,-3.879487,2.601546,-3.705514,6.901473,7.425812,-5.063530,-3.082435,-6.960212,1.382145,5.863099,9.522966,2.543110,-9.959991,-8.627853,1.399159,6.873529,1.030853,1.204736,-0.187167,6.708455,-8.099609,-1.625102,-2.430974,2.457877,4.816924,4.812330,0.610874,2.392553,6.038567,-0.616110,9.057966,-3.856166,-4.755796,9.379381,-3.261784,-3.004165,-6.436077,9.604901,5.834048,-3.951670,5.586564,-6.764967,-1.676018,-9.800342,2.901414,-4.927755,-8.250750,2.367846,-0.289827,2.834033,-4.063959,-9.351484,-0.997936,0.107453,-0.758533,-7.523160,4.115486,-5.570271,-8.915913,8.715341,9.490743,8.544733,-6.328511,-2.790893,8.407107,7.310839,-9.032202,-2.405813,2.229529,-8.480604,1.533349,-1.753035,9.736009,-7.620832,2.852611,2.862883,9.504751,3.086054,-0.577508,4.279637,7.549087,4.855060,-3.432059,7.129296,2.737656,5.155491,-2.264563,-6.819811,-2.226407,-7.904471,-2.577246,8.519542,-3.330503,-1.008598,-2.718105,-1.804729,-3.342855,7.390793,2.606373,9.904005,5.269692,4.298545,-9.324816,2.276480,-2.480190,-8.118516,-7.539824,-2.652317,-7.636584,8.822416,-1.518266,8.901077,7.930926,4.212062,2.070303,5.042083,8.548930,-1.152599,-8.433525,5.912973,9.045276,-7.988605,2.627582,-2.519862,1.573036,-0.870938,5.131681,-6.417647,6.343983,7.363617,-4.434866,6.661939,6.295860,7.455705,5.033520,-6.977577,2.104905,-1.511693,-0.242074,-9.297500,-3.611818,5.422481,-5.040277,-7.532858,-4.412076,-6.097025,0.288012,-8.887412,-2.853268,-8.974453,-7.019589,-5.922192,6.909276,-9.800219,-5.192916,7.502765,-6.796902,-7.992475,5.144669,-9.770150,2.868031,-5.964991,-4.309615,9.989886,0.695479,-6.303148,9.743164,8.527978,-7.610944,-9.807427,-1.774703,7.434147,-0.843431,-0.747833,7.281821,3.338087,4.179909,2.731980,4.129280,-1.804902,-4.668499,-0.219615,-0.535331,1.494082,-0.264872,8.310633,4.546720,0.958680,-4.503328,0.191533,-6.633023,-0.919128,1.098103,7.756685,8.223153,9.813835,-7.044207,0.848837,9.617752,1.415958,-1.033699,-3.126117,-4.311725,2.543408,4.101656,-9.846880,-8.619452,-1.061113,-5.038359,-5.329581,4.001796,7.282306,5.876506,-5.792055,5.959596,-2.548652,-7.307564,-7.911442,-6.523221,-7.826722,-0.695455,3.508803,8.639369,-8.711026,0.592857,7.069052,-9.017748,0.770662,8.123032,-5.633912,2.736224,-5.497369,-8.195360,-5.270820,6.091551,-9.575677,1.643545,-3.566680,4.864377,-2.314099,5.336064,-6.845470,4.966656,5.841788,5.565208,7.582347,1.910540,4.727492,-1.068986,-5.303801,-0.749346,-0.623704,4.404643,-4.466328,7.030796,6.911018,6.940310,6.107832,1.183113,6.256460,-7.159798,-4.119893,3.676430,1.643300,6.603996,8.241865,3.574604,-6.904953,-3.226271,2.127505,5.184576,-8.055345,-1.583809,4.990155,-1.027284,6.003243,-0.522021,-0.427201,2.751831,0.807221,-3.345053,-2.622776,-3.075366,-4.147871,5.460490,7.156284,-6.501969,6.147540,4.732583,1.808498,-1.147271,-7.392762,-8.283443,-8.298991,0.109783,-0.265018,-4.715096,3.575762,4.248610,8.260210,6.035678,-3.517591,-6.634085,9.485527,-0.851353,3.067758,0.365290,5.323891,5.165468,9.176834,-3.804929,-8.861917,-7.818024,7.669497,1.830622,-4.536683,3.832955,-0.908296,4.947242,2.196959,-1.438117,-9.951504,5.101760,1.015220,4.306208,7.970137,1.217051,-9.206948,1.157134,2.259126,-6.864690,2.535115,-9.463159,0.287110,3.455819,-1.959499,0.383434,5.803881,-7.621003,1.734075,2.299237,6.141000,-5.413151,-5.523042,-3.768655,-7.399372,-9.243473,-5.688621,-2.128114,-9.255471,2.408243,8.075824,3.993688,0.860699,-5.393502,5.044143,2.755154,-3.951900,-7.216920,2.571772,-9.746778,7.513309,4.942940,-0.705141,2.984281,-1.951196,2.219075,4.339920,-1.341087,-7.211422,-3.803387,3.374704,7.879643,0.951236,-7.443657,-8.812213,2.914178,6.732269,4.041905,-4.440202,-3.901860,4.082940,-3.368628,-1.979918,5.116212,1.314733,-2.382357,1.411253,-1.521144,2.016911,8.487977,-5.809416,0.122773,-7.194939,5.687358,6.564757,4.601994,5.654303,-2.394402,-7.103158,-0.423678,8.327854,-1.993931,-1.703167,7.246604,-2.808708,5.327432,0.166344,-4.272659,-5.055911,-0.305556,-2.980517,-6.241656,-8.296253,1.518538,1.429233,-8.836727,8.042249,8.359815,-6.223894,0.704241,-2.425048,4.458293,-8.521793,9.155091,6.460690,-0.739825,6.055007,6.757647,3.698513,-4.409337,-5.245717,3.183043,-8.733698,-9.669939,-5.759079,3.101161,-5.555070,-2.254033,-5.009369,6.923375,-6.486580,1.320262,7.475390,5.398132,-5.422196,2.091882,-6.721292,-6.417755,0.249361,4.899610,-9.733351,-5.420311,6.020415,5.775882,-8.363092,0.846046,0.267579,-1.141984,0.036443,2.504086,-1.241687,2.691015,-3.595223,8.423067,-4.477057,1.169793,3.645768,4.712019,-1.500252,-0.092957,-8.707594,5.389346,5.186509,-4.108944,7.524471,-3.909490,-7.175837,6.077080,5.143035,-3.630696,6.973655,-2.558425,-8.262166,-9.975331,4.195909,4.500130,-6.540892,9.930312,9.064011,7.792031,3.316198,-5.680547,2.304005,-1.022914,-2.409703,-3.478417,-2.878149,-4.963335,-0.182126,-2.679872,9.019665,5.918415,-7.032144,7.604576,-9.114853,7.543075,-1.452886,2.856614,7.548822,-3.372206,3.474081,3.421330,-1.706167,-3.223792,-0.789182,-2.161737,-6.830599,-6.956269,-0.542099,-8.991095,-8.377261,-9.619700,7.366561,-7.241276,-6.905174,-6.891346,0.415862,5.954917,1.743166,-9.092137,-6.345168,-3.993602,4.094918,-9.942836,-2.346251,-4.708823,-9.346602,-0.808905,1.815022,-2.369692,6.428651,7.687422,-5.797239,-2.517906,-5.601640,-4.135366,6.840022,8.149976,5.656753,-3.647288,5.764433,-1.873636,-3.114842,9.066162,0.040689,5.482441,2.296937,0.253202,6.570723,8.376241,-3.458565,0.386565,-8.274313,-1.503510,-7.468916,-5.055785,-7.972894,3.209643,5.674333,-5.111039,-6.602015,1.029860,-1.705531,8.670709,6.832355,2.368772,-1.721604,7.000963,1.336697,-1.305066,7.762551,6.578474,6.335440,-7.931548,-4.969061,1.019627,-4.461240,-3.310634,2.874531,-9.450779,-5.296261,1.485982,-7.636653,-4.425348,-6.164912,5.805918,8.191605,0.458257,7.781649,1.988591,-4.254908,-9.619137,0.399234,8.646970,0.031375,8.409590,5.823260,-0.223821,-5.236809,-3.205052,-2.159884,-3.334001,-2.105323,-1.647939,8.053918,8.777828,4.323484,-8.114273,-4.924555,5.654952,5.481007,-4.611782,2.537870,5.699393,1.531105,5.802654,4.286899,5.431139,6.993343,-6.680859,4.552097,0.723529,6.122452,5.889648,2.006700,8.685158,-4.667043,-8.596641,0.626253,0.760640,5.631450,-2.598304,-0.456565,-1.099178,8.190992,-0.548763,6.445886,4.769047,1.936130,-2.640077,-5.562896,8.588890,8.228127,-6.300213,4.948245,0.279141,-8.395889,-0.722037,8.491935,1.786630,2.952989,6.449923,4.597739,1.577030,-5.220003,3.777629,-3.621331,7.288900,-9.830265,-0.629144,5.735342,-0.147612,7.400858,-0.693554,-3.182443,6.421567,8.144716,-0.698755,-8.352291,4.792413,1.036111,2.678455,5.052857,-6.812886,-7.963922,-4.624323,-0.005149,-4.696081,5.608919,6.976851,-4.214286,7.076169,5.599580,-8.958423,3.648789,-4.475063,-4.558636,-6.592966,-4.100189,-4.364339,6.004459,-7.085127,1.758118,4.310367,1.215635,-7.302560], dtype = "float64")#candidate|14518|(2940,)|const|float64
call_14517 = relay.TupleGetItem(func_6512_call(relay.reshape(const_14518.astype('float64'), [2940,])), 1)
call_14519 = relay.TupleGetItem(func_6515_call(relay.reshape(const_14518.astype('float64'), [2940,])), 1)
uop_14523 = relay.acosh(const_14518.astype('float32')) # shape=(2940,)
bop_14531 = relay.logical_xor(uop_14523.astype('int16'), relay.reshape(call_14517.astype('int16'), relay.shape_of(uop_14523))) # shape=(2940,)
bop_14534 = relay.logical_xor(uop_14523.astype('int16'), relay.reshape(call_14519.astype('int16'), relay.shape_of(uop_14523))) # shape=(2940,)
output = relay.Tuple([call_14515,bop_14531,])
output2 = relay.Tuple([call_14516,bop_14534,])
func_14539 = relay.Function([], output)
mod['func_14539'] = func_14539
mod = relay.transform.InferType()(mod)
output = func_14539()
func_14540 = relay.Function([], output)
mutated_mod['func_14540'] = func_14540
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9254_call = mod.get_global_var('func_9254')
func_9256_call = mutated_mod.get_global_var('func_9256')
call_14544 = func_9254_call()
call_14545 = func_9254_call()
output = call_14544
output2 = call_14545
func_14548 = relay.Function([], output)
mod['func_14548'] = func_14548
mod = relay.transform.InferType()(mod)
output = func_14548()
func_14549 = relay.Function([], output)
mutated_mod['func_14549'] = func_14549
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7915_call = mod.get_global_var('func_7915')
func_7917_call = mutated_mod.get_global_var('func_7917')
call_14560 = func_7915_call()
call_14561 = func_7915_call()
func_10940_call = mod.get_global_var('func_10940')
func_10942_call = mutated_mod.get_global_var('func_10942')
var_14566 = relay.var("var_14566", dtype = "float32", shape = (1350,))#candidate|14566|(1350,)|var|float32
call_14565 = relay.TupleGetItem(func_10940_call(relay.reshape(var_14566.astype('float32'), [9, 150])), 0)
call_14567 = relay.TupleGetItem(func_10942_call(relay.reshape(var_14566.astype('float32'), [9, 150])), 0)
output = relay.Tuple([call_14560,call_14565,var_14566,])
output2 = relay.Tuple([call_14561,call_14567,var_14566,])
func_14572 = relay.Function([var_14566,], output)
mod['func_14572'] = func_14572
mod = relay.transform.InferType()(mod)
mutated_mod['func_14572'] = func_14572
mutated_mod = relay.transform.InferType()(mutated_mod)
var_14573 = relay.var("var_14573", dtype = "float32", shape = (1350,))#candidate|14573|(1350,)|var|float32
func_14572_call = mutated_mod.get_global_var('func_14572')
call_14574 = func_14572_call(var_14573)
output = call_14574
func_14575 = relay.Function([var_14573], output)
mutated_mod['func_14575'] = func_14575
mutated_mod = relay.transform.InferType()(mutated_mod)
const_14630 = relay.const([[[False,False,False,False,False,False,False],[True,True,True,True,True,False,True],[False,False,False,True,False,True,False],[False,True,True,True,True,False,True],[False,True,True,False,True,True,False],[True,False,False,True,True,True,False],[False,True,False,True,True,False,False],[False,True,True,False,False,False,True],[True,True,False,True,False,False,True],[True,True,False,False,True,False,True]]], dtype = "bool")#candidate|14630|(1, 10, 7)|const|bool
const_14631 = relay.const([[[False,True,True,False,False,True,False],[True,True,True,False,True,False,False],[True,True,True,True,True,True,True],[False,False,True,False,True,False,True],[False,True,True,False,True,False,False],[True,True,False,False,False,False,False],[False,False,True,True,True,False,False],[False,False,False,True,False,True,True],[True,True,False,False,True,True,False],[False,False,True,True,True,True,False]],[[False,True,False,False,True,True,True],[True,False,True,True,False,True,False],[False,False,False,False,False,False,False],[True,False,False,True,False,True,False],[True,True,False,True,False,True,True],[False,False,False,True,False,False,False],[False,True,True,True,False,True,True],[False,True,True,True,True,True,False],[True,True,False,True,False,True,False],[False,False,False,False,False,False,True]],[[True,False,False,True,False,True,False],[False,False,True,False,True,False,True],[True,False,True,False,True,True,True],[True,False,False,True,False,False,False],[True,False,True,False,True,True,True],[True,False,False,True,False,True,True],[False,False,False,True,False,True,True],[True,False,True,False,True,True,True],[True,True,True,False,True,True,False],[False,False,False,True,True,False,False]],[[True,True,True,True,True,True,False],[True,False,False,False,True,True,False],[False,False,False,True,True,True,False],[False,False,False,True,True,False,False],[False,False,True,True,False,False,True],[True,False,True,True,False,True,True],[True,False,False,True,False,False,True],[True,True,True,False,False,True,True],[True,False,True,True,False,False,False],[False,True,True,False,True,True,True]],[[True,False,False,True,True,False,False],[True,False,True,True,False,False,True],[False,False,False,True,False,True,False],[False,False,False,True,True,False,True],[False,True,False,True,True,False,False],[False,True,True,False,True,False,True],[True,True,False,True,True,False,False],[True,True,False,True,True,True,False],[False,True,True,False,False,True,False],[True,False,False,False,True,True,False]],[[False,False,True,False,True,True,True],[False,True,False,True,False,False,False],[False,True,True,False,False,False,True],[False,False,True,False,False,True,False],[True,True,False,True,True,True,True],[False,False,True,False,True,True,True],[True,True,True,True,True,False,False],[True,True,True,False,True,False,False],[True,True,False,False,False,False,True],[True,True,True,True,True,False,True]],[[False,True,False,True,False,False,True],[True,False,True,True,True,False,True],[False,False,True,True,True,True,True],[False,True,True,True,False,False,True],[True,False,False,True,True,True,False],[True,True,True,True,True,False,False],[True,False,True,True,False,False,True],[False,True,False,False,False,True,True],[False,True,False,True,True,True,False],[False,False,False,False,True,False,True]],[[False,False,True,True,True,False,True],[True,False,False,True,True,False,True],[True,False,True,True,True,True,False],[True,False,False,True,False,False,True],[True,False,False,False,True,True,True],[False,True,False,True,True,False,True],[False,True,False,True,True,True,False],[False,True,False,True,True,False,True],[False,True,False,True,True,True,True],[False,False,True,False,False,True,False]],[[True,False,True,False,True,True,True],[False,True,False,False,False,False,False],[True,True,True,True,False,True,True],[True,False,False,False,True,True,False],[True,True,False,False,True,True,False],[False,True,False,False,False,False,False],[False,False,False,True,True,True,True],[True,True,False,True,True,False,True],[False,False,True,True,True,False,False],[False,True,False,False,False,False,False]],[[False,False,False,False,True,True,False],[False,False,True,False,True,True,True],[True,True,False,True,True,True,True],[False,True,True,False,True,True,False],[True,False,False,False,False,True,False],[True,False,False,False,False,True,False],[False,False,True,True,False,True,False],[True,False,True,False,False,False,False],[True,False,True,False,False,True,False],[False,False,True,False,False,True,False]],[[True,True,False,True,True,True,False],[True,False,False,True,False,False,True],[False,False,True,True,False,False,False],[False,False,False,True,False,True,True],[True,True,True,False,False,True,True],[True,False,True,True,False,True,False],[False,True,True,True,False,False,False],[False,True,False,True,True,True,False],[True,False,True,False,True,False,False],[True,True,True,True,True,False,False]],[[True,False,False,True,True,True,False],[True,True,True,False,False,True,True],[True,False,True,True,True,False,True],[False,False,False,False,True,True,True],[False,False,True,True,False,True,False],[True,False,True,True,True,False,True],[False,True,False,True,False,True,False],[True,True,False,True,True,False,True],[False,True,False,False,True,True,True],[True,False,True,True,False,False,False]],[[False,False,True,False,False,True,True],[False,False,False,True,True,False,False],[False,False,False,False,True,False,False],[True,False,True,False,False,False,True],[True,True,True,True,True,False,True],[True,True,False,True,True,False,False],[False,False,True,False,False,True,False],[False,True,False,True,True,True,True],[False,False,True,True,True,False,False],[False,True,True,False,False,True,True]],[[False,False,False,False,False,True,True],[True,False,True,True,True,False,False],[True,True,True,True,True,False,False],[False,True,False,True,False,True,True],[False,False,False,False,False,False,True],[True,True,False,False,True,True,True],[True,True,True,False,True,False,True],[False,True,True,True,False,True,False],[False,False,True,False,False,True,True],[True,False,False,False,True,False,False]],[[True,True,True,False,True,False,False],[False,False,True,False,True,False,True],[True,True,True,True,True,False,False],[True,False,True,False,False,True,False],[True,True,False,False,False,True,False],[True,True,False,True,False,True,False],[True,True,True,True,False,True,False],[True,True,False,True,True,True,True],[True,False,False,True,True,False,True],[False,False,False,True,True,False,True]],[[True,False,True,True,True,False,False],[False,True,False,True,True,True,False],[False,False,False,False,True,False,True],[False,False,False,False,False,False,False],[False,True,True,True,True,False,False],[False,False,False,False,False,True,False],[True,False,False,True,False,False,True],[True,False,False,False,True,True,False],[True,True,False,True,False,True,True],[True,True,True,False,False,False,False]]], dtype = "bool")#candidate|14631|(16, 10, 7)|const|bool
bop_14632 = relay.logical_and(const_14630.astype('bool'), const_14631.astype('bool')) # shape=(16, 10, 7)
func_14184_call = mod.get_global_var('func_14184')
func_14186_call = mutated_mod.get_global_var('func_14186')
call_14635 = func_14184_call()
call_14636 = func_14184_call()
func_14035_call = mod.get_global_var('func_14035')
func_14038_call = mutated_mod.get_global_var('func_14038')
var_14655 = relay.var("var_14655", dtype = "float64", shape = (270,))#candidate|14655|(270,)|var|float64
call_14654 = relay.TupleGetItem(func_14035_call(relay.reshape(var_14655.astype('float64'), [9, 5, 6])), 4)
call_14656 = relay.TupleGetItem(func_14038_call(relay.reshape(var_14655.astype('float64'), [9, 5, 6])), 4)
output = relay.Tuple([bop_14632,call_14635,call_14654,var_14655,])
output2 = relay.Tuple([bop_14632,call_14636,call_14656,var_14655,])
func_14665 = relay.Function([var_14655,], output)
mod['func_14665'] = func_14665
mod = relay.transform.InferType()(mod)
var_14666 = relay.var("var_14666", dtype = "float64", shape = (270,))#candidate|14666|(270,)|var|float64
output = func_14665(var_14666)
func_14667 = relay.Function([var_14666], output)
mutated_mod['func_14667'] = func_14667
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9064_call = mod.get_global_var('func_9064')
func_9066_call = mutated_mod.get_global_var('func_9066')
call_14738 = func_9064_call()
call_14739 = func_9064_call()
output = relay.Tuple([call_14738,])
output2 = relay.Tuple([call_14739,])
func_14772 = relay.Function([], output)
mod['func_14772'] = func_14772
mod = relay.transform.InferType()(mod)
mutated_mod['func_14772'] = func_14772
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14772_call = mutated_mod.get_global_var('func_14772')
call_14773 = func_14772_call()
output = call_14773
func_14774 = relay.Function([], output)
mutated_mod['func_14774'] = func_14774
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9013_call = mod.get_global_var('func_9013')
func_9014_call = mutated_mod.get_global_var('func_9014')
call_14805 = func_9013_call()
call_14806 = func_9013_call()
func_2639_call = mod.get_global_var('func_2639')
func_2644_call = mutated_mod.get_global_var('func_2644')
const_14813 = relay.const([[-9.724248,9.836596,2.524478],[-3.934711,-7.713045,1.271366],[-0.110970,3.123318,9.560432],[-7.846047,6.235555,-3.846583],[-5.989540,-6.724652,-7.519223],[2.986509,-5.301392,6.298639],[-4.194860,-1.312877,6.314486],[-6.612687,-9.107249,8.264325],[5.981422,-3.520658,-5.651558],[-1.821705,-2.739459,-0.372702],[1.443088,8.944805,-9.053848],[4.660273,3.913847,0.685646],[1.688350,-2.336139,-9.564570],[-1.358390,-3.585129,-1.057835],[8.985651,5.478327,7.564361],[-7.952319,3.468598,9.084969],[-5.582326,-5.873226,-1.040940],[-5.301776,1.544731,8.579699],[-7.140899,-3.641007,-6.126567],[-0.520317,9.853410,-5.421456],[9.440689,8.102806,-2.117761],[-9.357255,-9.143915,-9.164073],[7.681048,-4.751638,-5.836743],[-0.679878,7.575605,6.986813],[6.618941,3.499427,4.153183],[9.992097,-7.795895,6.953397],[4.264714,-0.530369,-1.990028],[-9.845402,7.851573,-4.473998],[9.717812,7.895948,8.964782],[-8.378882,-7.081953,-4.451936],[9.641273,-4.550121,-9.054986],[6.351546,9.769624,9.173980],[-2.248077,2.435038,0.354128],[0.595220,-3.892865,8.127182],[9.975051,-4.059004,-6.368659],[4.097941,9.173066,0.462929],[5.921685,9.242308,-8.561189],[-0.718905,5.449987,7.872271],[-4.842451,6.074772,9.313549],[-0.387884,-5.968899,-1.727851],[0.353045,3.970617,8.126036],[7.478253,3.600594,9.001694],[9.133214,-5.376833,-4.574122],[4.342469,7.668505,1.814728],[-1.460913,5.559977,1.847172],[4.707923,-1.327314,3.186224],[1.928538,-2.171681,0.514261],[3.654633,-1.665711,9.924799],[8.788761,1.988236,1.901412],[9.301516,-5.627009,0.577520],[-3.585638,4.685199,2.287700],[-6.908811,3.076691,5.078459],[-1.424922,8.335929,-8.769289],[5.837831,-2.566157,-1.976120],[-8.742782,2.590928,4.282639],[-2.315186,9.309838,-8.216726],[-6.621084,1.209674,4.051820],[-9.626498,1.580231,-6.876147],[8.522494,6.273641,-3.257403],[7.775103,4.392107,-9.500370],[7.954789,-3.123670,-6.191463],[5.680935,7.840890,-5.454502],[3.652049,8.572433,-4.187138],[3.913797,0.030180,0.714788],[-1.561451,-3.922470,2.317555],[-3.679147,5.346518,6.394001],[5.388100,-5.367491,-0.017738],[-8.907897,-4.326587,-5.188187],[8.978498,-7.056021,9.144121],[3.489126,-7.516891,5.825756],[-4.610355,7.139940,5.225951],[9.932021,9.846029,9.533273],[-4.123970,-5.126096,4.856132],[9.584573,-3.587897,-3.575211],[-4.060270,1.787602,3.363224],[-8.881968,7.782874,-7.403464],[7.793934,3.577048,7.866484],[-2.026372,-3.371668,-9.738807],[5.834298,0.447732,0.298014],[4.162408,0.845268,7.313587],[-3.507530,-3.693731,8.343006],[-8.287914,-0.330626,0.678678],[-8.181325,7.424431,-1.912656],[7.015617,1.199085,6.640073],[-2.060143,-2.570507,-5.109678],[-6.761208,-6.660951,-4.553386],[8.228570,-6.502746,-6.242778],[-5.897236,8.684364,-2.778737],[2.241392,6.900044,-4.966861],[-4.398463,-7.336462,-8.246491],[-8.211950,4.190502,4.075611],[-2.323133,-9.687495,-4.362358],[-3.517150,0.026601,-9.305924],[-6.268628,5.080299,-4.675575],[-0.541012,-1.335957,-3.765388],[7.412298,-3.537264,7.246552],[-3.976215,-2.301564,-9.050099],[-7.396640,2.698331,-7.720727],[5.087734,-6.190970,-4.076158],[-0.399280,6.008075,0.589702],[5.347283,-7.344002,6.420740],[5.934688,4.300875,-2.916625],[-0.012391,-8.099026,3.543626],[9.188293,8.447346,4.795343],[-5.738307,6.780174,6.696879],[6.685920,2.627731,-4.384946],[1.414391,9.998151,2.358118],[-0.520687,-5.733694,-3.613804],[5.763745,-5.508465,6.953053],[6.742614,3.776706,2.662716],[0.887803,2.125892,-6.848278],[-2.546082,4.561785,-3.390172],[6.695056,-9.153319,4.415005],[5.626136,-2.954379,-8.405710],[-9.995544,9.290115,-7.306458],[-9.503586,-2.729150,-7.407296],[1.316896,-9.130196,-1.566444],[4.320195,-2.528904,3.735016],[-7.737523,-2.647102,-2.644482],[-3.815581,-9.975773,-7.544523],[-9.887391,8.608804,-0.878240],[3.519433,-5.954770,-9.286591],[-3.390964,-3.948661,2.756313],[9.818732,5.608060,-2.745317],[-6.865175,-8.515738,6.285681],[2.039916,2.732982,-3.825498],[-7.021750,9.038252,7.612935],[-6.244666,5.335677,-5.585575],[-4.973250,7.507310,-8.312110],[-4.711112,-2.892148,1.967278],[1.980413,-6.890268,2.316156],[8.348543,-6.064544,-2.579318],[-7.742296,-1.736920,-5.546561],[4.955528,-5.872911,-8.014226],[-8.612490,6.201770,7.741115],[-3.786544,7.745045,5.424812],[0.292309,-4.063045,6.833323],[-2.744086,7.827067,5.197201],[1.926776,4.596464,0.511631],[-1.863834,-5.186319,0.943523],[9.081293,-8.108876,-7.443226],[1.375545,-9.065537,4.329549],[3.699596,-7.580111,-8.525400],[-6.233145,-8.926662,7.027004],[8.592756,2.150508,4.441661],[0.892677,2.458452,6.431129],[9.271819,7.293267,3.239898],[0.937525,-2.929303,1.288220],[9.997884,3.538471,2.263946],[-3.417624,-8.237415,-9.724121],[-5.657731,-9.427242,-2.533649],[4.466147,8.436650,8.238743],[4.875015,4.833728,-9.104083],[5.939821,-4.353273,3.597523],[9.074079,-2.841219,-3.276240],[-5.225511,-9.177494,-0.884120],[-9.111192,-9.800769,-4.428554],[-4.638941,-0.885088,-1.025532],[2.012615,-8.939526,-6.160924],[4.079188,6.444609,8.655188],[1.528924,-9.961918,4.628670],[-0.959922,-3.274744,9.192692],[-6.801519,0.085957,7.649496],[-0.259424,6.966189,-3.997349],[-7.324318,6.028359,9.876835],[7.078069,-1.634791,-2.101159],[-4.808306,-0.499930,2.908163],[-8.422290,1.463676,-3.379822],[7.770479,7.323551,8.439026],[-1.767885,-2.409375,-6.007231],[-8.410881,-6.012677,9.432544],[-2.670760,0.256802,4.946263],[-6.628637,-7.531938,9.213412],[-0.609034,1.201993,8.911471],[5.378631,6.074242,5.210133],[1.019303,5.037164,9.318805],[-6.023213,4.731009,-0.538574],[-5.881832,-4.586302,-3.878222],[1.182040,-5.376191,9.625299],[-2.505014,6.244099,-9.770798],[5.043229,-2.697756,7.174833],[0.823838,-7.506174,8.046579],[7.002471,4.026318,-9.416783],[7.385840,4.920226,0.242407],[0.259705,4.832057,3.628513],[-3.232581,-5.726100,7.497895],[-3.021137,2.474756,6.654051],[6.313858,1.547223,-8.789052],[-2.428204,6.293276,9.621564],[-6.443488,-6.779931,3.044016],[5.607080,-5.980161,3.116482],[8.216498,1.563370,-1.935022],[7.753563,2.813800,-8.513639],[2.032721,-6.440458,-9.536941],[5.343519,-9.724402,4.514203],[0.775001,8.091588,-0.280251],[9.798140,-3.803957,-2.146366],[-6.884980,-1.003434,-8.381502],[6.290535,-9.132871,5.945366],[-0.940615,1.749715,-7.039983],[-7.024962,-6.848898,-4.688008],[-0.395103,-0.213755,-2.184477],[6.327527,8.705940,-6.185542],[2.958692,9.228632,6.728346],[-3.311188,9.726985,0.669395],[-7.942847,4.833515,1.699518],[9.892336,7.950355,7.214659],[0.484345,-4.903706,-6.807671],[-8.618953,1.401424,7.774126],[-0.863367,-7.917776,-4.944934],[-4.357889,4.212359,9.412140],[2.349587,7.615242,-2.151180],[-9.725458,5.659479,-7.720038],[0.744303,4.815611,-3.157684],[-3.298845,3.243266,-2.880745],[-7.968095,-2.777567,-0.220604],[-2.220013,9.754659,7.094531],[-1.632268,1.205494,-1.114086],[-1.246949,-0.842342,-2.180189],[-7.738056,-8.815818,6.869915],[3.800070,9.814099,-0.263269],[0.663675,3.692724,-4.924012],[4.198308,-1.867457,-5.055450],[-5.854082,-7.116123,8.147841],[-6.066165,5.017892,5.624468],[1.184964,-9.189691,-9.294053],[1.643969,-9.590617,-9.961323],[8.116004,5.368905,-5.643051],[-5.035695,-8.600215,-2.384231],[-4.328579,-3.572812,2.140479],[-0.545214,-1.230324,3.939999],[8.497619,9.415792,4.854086],[-4.183764,2.659596,-1.302153],[-2.897899,-5.568993,2.100493],[-1.263502,4.046670,-4.330218],[-2.262989,-1.156229,6.964291],[1.994913,-6.412693,-1.001365],[5.753775,-8.639836,4.479898],[-0.663477,2.222135,-6.161601],[0.360210,-8.409863,1.704332],[4.559660,-7.965014,4.857568],[0.628582,-6.555828,1.652590],[5.786036,-7.945483,5.759727],[-4.249403,5.032681,-7.716099],[5.986971,-1.033518,4.253898],[-4.401147,7.271533,-1.951924],[-3.404465,7.068330,5.172933],[-6.532498,2.607707,-7.643038],[-4.828930,9.694717,-5.846111],[6.442102,2.196370,-4.535777],[-2.088669,-0.214315,4.006415],[-8.428158,-1.163279,-7.349817],[-1.240843,6.029148,2.640007],[-2.780284,-1.722675,2.111709],[8.829580,-7.106139,-7.640867],[9.402406,6.688423,-5.545881],[-7.609834,4.938562,1.010281],[-2.466551,-6.918966,3.090562],[4.167744,9.187406,3.665856],[9.399085,3.240203,-8.235957],[-3.364186,-6.381339,1.068145],[-5.791722,9.206138,-8.799669],[0.556906,-3.896842,-1.279959],[-0.030706,7.590021,-1.258405],[-2.179538,-0.577740,4.800917],[-8.717373,-0.450949,-8.592720],[5.386595,-9.665261,-8.740399],[3.117325,8.534947,6.560669],[-4.316848,-2.616522,1.197823],[-0.548017,-4.716993,0.134717],[5.702029,7.609368,1.221648],[9.040130,-5.518562,1.395667],[1.092272,-5.758074,6.805759],[-7.717890,8.084426,9.039442],[2.912390,1.295425,-2.975489],[-5.944843,-0.182601,-4.869758],[6.504901,-4.596889,3.309229],[-4.547906,6.199338,5.531494],[-1.435656,-0.488169,-4.957170],[-1.560621,4.432080,3.972365],[-0.767693,-8.675709,9.035889],[-7.343352,-5.938702,-7.691901],[1.997000,-9.020196,-5.095273],[7.248014,-4.137906,-0.856882],[5.983991,-6.046169,-9.657686],[0.827865,5.198115,8.036437],[-6.959037,6.196955,9.938852],[-2.596414,-7.413308,5.406131],[-4.985792,0.978272,-6.268874],[-3.189829,-2.150444,-5.232498],[-9.434090,-2.688057,8.897627],[6.625234,8.378506,8.427220],[-5.424307,7.471323,-7.346771],[5.088052,3.122551,6.450590],[6.602766,-1.338787,7.037336],[-9.150305,-1.868817,9.359406],[4.958354,3.770142,-3.539185],[6.359604,-8.209441,4.349434],[1.328286,7.193880,-7.626212],[-3.748315,-2.472690,9.290054],[1.071992,-4.609987,-4.546078],[-0.554804,-9.053015,4.287552],[-2.262208,7.458012,6.583113],[1.697754,-1.122236,-5.242052],[-4.929476,-4.107607,4.026940],[-0.519143,2.535076,-5.298618],[-1.704560,5.463257,-9.963072],[6.310122,9.165811,5.617799],[-0.541329,8.287038,7.590596],[6.088609,-3.949169,9.283683],[8.214869,9.796062,-9.401323],[9.050166,-6.339748,7.442713],[8.972242,3.398701,0.816443],[7.876516,0.758626,-1.728399],[-2.191747,-2.773408,8.514351],[-4.597810,1.230664,-3.810063],[5.868089,0.837936,-9.628654],[-4.778060,0.796776,6.205231],[-3.503363,-9.602636,8.151401],[4.328389,-2.885270,1.563804],[0.118975,3.737623,1.695347],[-5.895338,2.810651,-0.976197],[-2.579862,0.906570,-1.205025],[-2.003761,7.483498,-0.386249],[-8.138657,2.832070,-3.881893],[-4.169083,-7.965071,-1.751925],[6.025015,1.203387,-6.479398],[8.882479,-9.081582,9.750502],[5.408373,-4.449151,-7.443373],[3.798750,-8.924429,-6.148607],[4.036013,-2.600068,-7.714837],[8.789038,5.084302,-3.246059],[-6.950566,-5.840617,-9.667460],[1.514656,4.222072,-9.258706],[8.767131,-3.072677,-4.463543],[-7.926775,-0.280751,-7.897561],[9.076679,-9.314241,-4.393574],[2.359662,-4.298262,3.828259],[6.589633,-4.131831,-9.003209],[-5.256412,3.530577,6.216484],[3.959158,5.901129,-0.172478],[-9.082179,-2.632547,-9.618349],[8.704226,1.307903,4.309066],[-2.117682,-2.275099,-5.046803],[-5.345686,-9.531770,4.140282],[0.728723,2.850702,-3.734771],[-8.539382,6.809648,-4.266166],[6.061314,5.931824,5.809578],[-7.104342,9.631453,9.975756],[4.914176,5.799868,0.162060],[-7.508807,3.610846,8.683385],[9.659813,8.938280,-5.444343],[7.855673,9.605002,2.593875],[2.743415,2.741975,-2.599884],[-3.326228,-6.425218,7.907525],[8.390866,-2.014428,4.620666],[-4.159171,-4.843438,5.756725],[1.584596,-3.036455,-2.607223],[-2.775348,7.110464,-5.883573],[-6.355161,-5.757480,-6.226797],[-6.852583,1.318694,4.213404],[-2.602679,3.084610,2.055580],[-2.352150,6.080484,2.333189],[-3.264528,-6.688514,3.471384],[4.840089,7.371127,-3.937004],[0.030163,6.799315,-7.749350],[1.787813,6.146824,1.327084],[8.820678,5.457468,-7.798194],[-6.877511,-0.964619,0.256466],[-7.866649,8.311941,-7.194001],[5.729818,-9.583008,-4.162392],[6.575875,-6.417506,-9.753576],[1.143003,3.997604,1.456974],[-2.116632,-3.501463,-0.524182],[-5.785187,-5.871321,-5.268621],[-0.117518,-3.432709,7.108439],[4.726137,-2.355943,4.967513],[0.041277,-5.968836,5.133699],[-6.894908,-4.301358,0.630280],[-6.603365,7.290907,4.217361],[6.249953,2.300042,7.884668],[-8.329214,-5.952595,-5.685499],[-1.536524,-9.236630,-1.021649],[-4.665212,3.826334,8.263539],[2.380727,7.584124,-6.129929],[-4.812183,-7.727026,7.876526],[-8.126301,-3.537430,-3.527144],[-9.080347,-8.381252,4.196158],[5.002455,0.280327,-3.960360],[0.884548,8.861062,-8.749306],[2.284080,3.835811,4.271290],[2.556416,5.873308,-6.433435],[-1.354060,-3.103595,6.050425],[3.257752,5.448605,-3.909209],[0.605219,7.411451,-6.218658],[-1.691937,-0.641074,4.498760],[-9.372506,-4.215266,-9.346921],[5.303845,7.406116,2.210365],[-5.143073,5.267467,7.200974],[1.426527,5.778485,0.981796],[4.389458,-5.324018,-3.141749],[5.412928,-2.393577,-0.350992],[-0.521286,-1.119363,2.750967],[-7.592448,-2.196850,3.194670],[7.267387,1.750600,6.460323],[-7.062778,-5.672466,-4.848544],[-1.128399,-6.751637,8.070863],[1.151066,-6.855650,-5.154012],[9.479114,2.319908,-0.313809],[-8.705017,-7.311762,8.844833],[-8.048219,-9.481381,-7.603586],[7.198657,-8.956219,6.013989],[-1.709678,8.677981,-3.773863],[-9.105182,-0.932143,-3.380767],[-8.969211,6.839966,-8.793945],[-0.604549,-5.482884,8.953054],[-4.292781,-2.497615,-5.023590],[-0.056826,-5.190419,-3.672030],[8.130146,2.625784,-2.998234],[5.736291,-5.819292,2.006938],[8.413933,0.078085,-1.989827],[-2.288147,-6.556202,8.150776],[-1.615988,3.072213,8.634912],[-8.739618,8.741245,6.271123],[6.339450,-5.221663,6.735084],[-0.359345,-5.050620,-0.569173],[-1.123250,8.502184,1.809892],[-5.283595,-2.980808,4.102292],[5.799890,6.355868,6.226543],[-6.287567,6.576086,-6.560632],[1.325855,0.895560,-8.465420],[-8.435095,-3.099926,5.890549],[0.576998,7.381155,-7.319054],[5.555752,-2.549903,-0.646533],[5.854193,-5.642668,9.243008],[3.610335,2.178117,-1.930269],[3.509052,3.566367,-9.804459],[2.002666,-2.737784,-6.436170],[8.055190,-0.657097,-7.270801],[4.126924,0.486662,-3.546820],[-8.204330,6.337482,-9.452691],[-0.199458,0.318803,4.698376],[-0.667951,7.944865,3.650043],[2.135002,9.895228,6.136731],[-0.792749,-0.317308,-3.338563],[7.340346,-1.786373,0.188052],[-2.201053,-2.265630,8.320389],[-4.699885,3.447848,-4.740680],[0.939270,4.371981,7.044155],[-0.372098,-6.723747,5.951833],[3.127710,5.738513,-0.369446],[-1.748828,-4.995018,-2.703043],[-1.250375,-9.793956,-6.753104],[-7.584608,-0.395089,-7.392318],[-9.474899,-8.186644,8.205066],[-6.163404,-3.399024,5.721692],[-0.965122,1.049788,-0.017988],[-3.373277,-5.048467,-9.172467],[8.161678,-5.533630,1.514732],[6.867417,6.500658,-9.993327],[7.510514,7.050834,-3.350791],[-8.708151,-2.216377,-8.413021],[2.481250,6.961411,7.484754],[-4.048572,2.867512,-3.391177],[-2.826054,-0.478257,2.895694],[-6.787384,0.017805,-6.115438],[-2.199593,-7.181108,7.233670],[-3.545774,9.631762,-6.244158],[1.008895,5.901725,-1.242951],[8.785874,4.915744,-1.289956],[-9.118697,-8.425380,2.497767],[-5.051314,4.550946,-6.987545],[4.107310,-5.939354,5.228073],[9.155606,4.846120,2.473772],[-9.613012,-1.594186,-1.553499],[1.688395,-5.455738,0.747754],[-6.129184,2.247800,-9.946780],[-4.296343,-0.884225,8.199613],[-7.573031,3.636518,3.141068],[9.607496,6.554103,-6.432750],[-6.679674,0.114088,0.475377],[-7.039847,-2.786424,1.153891],[-1.941272,-2.649430,-9.046842],[-7.411250,-0.159234,8.871938],[-9.037663,7.818093,-0.580693],[4.908975,8.286044,0.754714],[1.208393,3.131860,-6.075296],[6.549560,-0.634048,4.485614],[7.387246,2.912878,3.552567],[0.700241,8.020387,-6.565204],[-7.794543,5.993739,-1.687044],[-0.219335,-1.959153,8.186445],[7.950580,5.906724,-8.750717],[-9.937873,-6.673160,5.879178],[-8.814988,0.746153,6.481187],[-3.146770,-4.509405,-7.908871],[-2.267927,-4.888041,-7.881239],[0.895064,-6.296042,0.102586],[-0.757917,-6.628479,-3.945168],[-5.897719,1.335575,-9.886284],[0.300778,-1.792402,-1.154590],[-4.060231,-6.303669,-1.882814],[-3.386600,-4.324229,-8.594722],[0.529817,1.723134,-6.012051],[8.700748,5.547080,-2.054065],[-7.210676,-9.615372,7.627452],[9.852331,7.949685,3.178022],[-6.948438,-0.311050,-7.949076],[-6.825331,8.306735,-8.851195],[0.077565,-5.100040,-0.272840],[6.162089,8.781847,5.768065],[-2.518998,-5.861149,-9.325116],[8.176403,-4.525497,2.820316],[9.842342,-0.645925,-1.751759],[-7.116186,0.578263,-0.448394],[3.699770,-0.817566,7.319042],[-3.663973,-7.562655,1.392291],[-1.688542,1.735059,-4.634906],[1.921348,-4.012248,-6.102498],[-2.763570,9.211986,-0.646935],[0.044742,4.721322,-7.426476],[-3.358642,-1.655928,3.571892],[7.678224,2.567464,-0.770066],[-2.760886,9.081657,-8.776833],[8.988946,-9.870791,-9.792347],[-5.882354,-8.021527,1.434681],[-9.429675,1.326863,-7.417417],[-4.965646,-6.149779,-2.207236],[-1.736647,7.324108,7.832841],[6.048084,-3.438471,9.180920],[-0.287675,4.534191,8.510728],[6.999741,-1.439918,0.600602],[-8.020847,-2.881075,8.931851],[7.236210,3.705312,4.776096],[-1.807567,8.016330,-1.710890],[6.468925,-0.951752,8.886116],[9.683164,2.406728,-6.034181],[-8.944594,5.226286,4.888300],[5.051421,-3.040403,1.142060],[-4.730088,-8.760449,1.069170],[-9.951413,-8.730047,7.718370],[2.135534,-5.510029,-0.759178],[2.143344,6.078870,0.309587],[2.376705,-7.410877,-1.274470],[9.342615,4.367775,-1.527016],[-6.980924,-0.308502,-6.870703],[-6.717452,-7.595742,-0.429329],[3.350835,-3.501839,-5.242708],[-6.798159,-0.373518,1.853385],[-6.739986,5.077179,0.578719],[-5.552995,0.124830,-9.487926],[-2.973588,8.846666,0.057035],[9.152550,0.084410,-6.139199],[-5.718642,7.566113,4.803697],[5.439745,1.528449,5.816350],[-2.315011,-8.168971,-5.988936],[0.469606,9.225161,-9.583253],[7.811308,-9.009047,4.067531],[-5.875528,2.991177,-5.088957],[4.352243,-9.337965,3.733457],[2.419421,-4.388208,3.325569],[-3.827798,8.158239,1.456959],[-8.062337,-4.580469,2.125266],[8.627001,0.843395,8.547078],[8.483934,6.427621,0.350476],[-7.889127,-4.877187,-4.457952],[5.067327,8.580309,-6.910642],[-0.767719,5.111195,5.795032],[-6.010357,-2.240558,9.664289],[-3.177960,-7.616696,6.867634],[-4.858662,-1.789478,-8.420226],[-7.211992,5.235353,-5.083193],[-4.344018,0.779018,2.573765],[-6.376729,1.406147,4.817748],[-9.798956,-5.348937,1.600938],[-4.954500,9.886972,8.194732],[1.392086,4.225206,1.380797],[-6.766422,5.335070,3.161756],[2.309968,-9.389850,-3.385736],[9.122227,2.463155,-9.196959],[8.423465,-4.639388,0.621271],[-6.226401,2.025978,-8.645578],[-2.074746,-9.032552,-6.049397],[-7.297754,7.794203,-3.135469],[7.863602,-3.410154,4.231739],[4.295908,5.120489,6.750548],[1.409892,1.519364,-2.569255],[1.905563,9.252912,-9.543966],[2.698433,8.257267,8.002496],[1.703173,2.758888,-0.156793],[-9.614842,-4.422004,0.804396],[-9.832360,7.497199,-8.317677],[2.376810,-8.948000,4.883341],[-9.446475,-6.378061,-6.211781],[-1.666756,-8.489555,2.438706],[-7.670363,-4.873808,-9.993206],[1.826207,7.849845,-0.613401],[-9.156212,8.382701,-5.474137],[1.941778,-6.862351,-8.707026],[7.593653,-0.604969,9.841566],[-1.638676,7.182369,-7.822023],[0.004107,-4.210388,-0.338241],[-8.393483,6.474750,-0.895226],[-5.881631,-4.045430,1.072335],[7.565953,6.862227,-2.995291],[-7.389265,1.550531,9.043412],[7.536503,9.503201,3.465267],[-2.816631,-2.243470,-6.237702],[-7.308766,-7.641565,1.794270],[3.657263,-8.060391,-2.086223],[6.882904,-5.182337,-4.957012],[-3.523851,-9.552178,0.372558],[-4.196561,7.459840,8.856359],[0.851423,-0.781676,3.531300],[9.772574,1.225651,3.309125],[-6.480508,-3.659778,0.773371],[-6.755457,-9.079606,2.536749],[3.312123,3.506383,-9.288363],[-5.377717,-3.771665,9.354088],[-6.254907,3.348915,3.741747],[1.082413,5.102858,-9.772883],[-6.516673,2.672966,3.819835],[-8.525024,-6.296356,5.514718],[2.088164,-7.991926,-8.341526],[6.500861,-4.079141,-4.586822],[6.381270,2.776232,1.540024],[-2.420195,-3.791295,-8.238758],[-4.997177,-9.338975,5.212149],[-6.037301,5.194782,-5.722472],[-3.318071,-4.873116,-9.347973],[-8.051525,-0.578027,3.702390],[7.414681,6.743066,3.605755],[2.175018,8.669618,-5.986296],[4.161243,6.012959,2.993105],[3.850759,6.827181,-5.913253],[-6.161851,5.147161,-6.551557],[7.991699,-2.150471,6.451007],[-0.973763,-0.952873,7.636007],[-0.243482,8.349339,4.475378],[-9.402673,-8.860156,6.277803],[4.368897,-4.113135,-8.782656],[7.921541,-4.122543,1.941553],[0.715926,8.935476,0.834554],[-1.189032,0.215649,4.047370],[-6.488424,7.363087,0.807692],[6.352094,3.380221,4.225043],[-7.583493,5.233366,2.696082],[9.049655,-5.697192,-8.227243],[1.276866,-7.253549,-1.220287],[3.656026,1.449115,4.212218],[7.061394,3.516739,-7.799528],[1.336134,-2.836883,-7.624350],[1.012047,-1.596446,-2.867116],[9.743959,-5.914542,-5.194166],[9.784933,1.816333,5.297539],[2.698409,-1.515759,0.588992],[6.324991,4.657402,9.513650],[6.017024,6.898901,-5.931391],[-3.901001,6.946249,2.565232],[2.098961,-5.966450,9.696253],[-7.715869,-7.924794,-7.723218],[6.752682,-0.411458,0.950107],[-3.714025,-4.361901,-9.556574],[8.332475,-5.363688,6.094111],[5.485828,-8.608427,-7.336388],[5.655647,-2.060724,6.528847],[1.521034,3.291131,2.714008],[8.670622,0.419489,-3.031293],[-9.591041,5.464283,-2.855341],[2.534892,2.361690,5.678244],[0.946178,-2.289982,4.328799],[-6.208849,0.851703,-3.283787],[-5.343492,-2.250668,-4.881158],[-3.843110,9.328291,0.703036],[-6.326925,0.229372,4.070025],[1.843112,2.265160,-5.005724],[9.170957,8.615829,-8.505050],[-0.689355,6.200418,8.918115],[2.278818,-1.548324,2.309643],[-8.686434,-4.830029,4.204782],[4.803128,9.964001,7.800629],[3.438624,-5.577692,0.217798],[-3.779928,-5.200221,-2.042089],[9.807247,8.443730,-5.426596],[-0.129755,-3.349692,-1.545216],[-4.517692,3.445796,-7.989115],[2.036953,0.328460,-2.754588],[9.460648,-8.214610,-8.904260],[7.686289,-0.247091,-9.091286],[9.571431,-1.876429,9.231482],[6.365187,-3.137450,4.152955],[8.854502,-4.792369,5.554085],[5.810836,3.616027,-8.824554],[2.432124,-1.445999,-2.168092],[-2.946762,0.684147,7.158408],[-9.936226,-4.085267,9.522557],[3.402817,-6.589162,-8.949655],[2.300385,-4.403101,0.190474],[-6.374537,-0.551412,7.666433],[0.574040,-1.049278,-3.395432],[-7.448704,7.740529,4.692691],[-2.477926,4.748247,-0.971594],[-7.604745,-8.140809,-4.361564],[4.376995,-9.494310,8.624981],[-3.314689,8.882124,1.188114],[9.663779,-5.246412,-3.362392],[4.268481,0.052625,-2.311903],[-9.786259,1.136361,3.821874],[5.160405,-1.434922,8.353112],[3.574485,5.298743,-8.946032],[-3.597943,-9.363129,-0.232721],[-3.627991,9.866053,4.678824],[3.613550,5.107325,-6.485274],[-2.850899,4.673732,3.413110],[8.885759,0.078319,1.662557],[1.370842,4.923970,8.467396],[4.049556,4.535938,8.218372],[-9.798212,5.094367,6.358845],[-7.989702,9.935844,-4.277702],[-0.979230,4.436894,-1.421896],[-4.082785,-8.363870,6.532614],[9.546007,7.508044,-8.636150],[8.603425,8.170513,-1.263989],[-3.137709,-7.402848,-7.331267],[-0.971905,-4.058969,-1.038493],[8.200542,6.841646,-4.871881],[3.348306,1.854229,5.827412],[4.154301,-4.467124,0.226555],[5.020485,0.458922,5.163053],[-4.255451,6.131096,3.371477],[-9.914072,-3.287014,-3.642820],[-3.528903,-3.825191,-5.956752],[4.357574,1.773457,-8.576708],[-9.469565,-1.056613,4.742190],[-5.256562,-6.869891,8.826159],[8.894167,-1.236791,8.642031],[2.056574,-4.551577,1.294882],[8.427612,-2.209302,-7.613530],[2.341251,-8.882093,-8.314475],[6.192258,0.592480,-9.521301],[4.462916,-1.886081,0.176798],[-7.382440,-4.470152,3.447715],[3.631585,-9.534727,8.932836],[-0.949847,-1.877953,-8.848361],[-9.102177,8.955334,6.646258],[-1.777285,3.731363,-9.648835],[-7.028060,1.860272,5.334407],[-6.269590,3.276873,-4.738738],[8.906705,2.666625,2.682731],[2.453934,7.660647,-5.594165],[-7.036994,6.243939,8.731473],[9.180108,-5.538917,-0.760089],[3.028690,-2.436194,-6.924584],[2.118245,0.701855,1.149031],[-6.068574,7.128618,9.724234],[4.446577,-2.123081,6.938462],[-3.009070,-7.318257,-6.555222],[5.681404,5.543318,-6.310038],[-2.035132,-5.727995,9.095803],[9.692703,-0.702197,1.551914],[-4.753003,8.129648,-9.648055],[-3.738271,7.777318,5.866257],[-0.664730,0.853566,8.265384],[6.586586,0.659444,2.861767],[1.398241,7.189491,3.055053],[7.006091,7.559064,6.133694],[2.546841,-2.940232,-3.359891],[-3.269179,-0.224653,-2.780765],[-2.411910,-7.657153,1.313799],[-2.556597,-8.851046,-3.854981]], dtype = "float32")#candidate|14813|(770, 3)|const|float32
const_14814 = relay.const([5.749870,-3.563551,1.058990,-6.246311,6.619093,-0.794755,-6.842614,9.519987,-0.285243,-0.368962,6.791017,-5.301317,3.965733,1.772527,-7.922019,2.183878,-9.886616,-4.735238,-9.993254,8.874044,7.089293,4.279697,-4.533302,-8.736931,-9.359019,9.881057,0.313617,0.663223,1.229223,9.222821,5.016599,4.466579,4.861464,-1.994496,-8.685142,6.509691,7.800354,4.834963,-8.337046,-2.379049,0.525308,-3.221951,-7.990373,7.665314,8.945690,2.166690,4.586248,-6.024808,-6.482359,-1.195683,-6.656430,7.058414,-2.970776,-9.299266,-3.540272,4.156702,-9.356422,5.640006,-7.671192,-1.012986,0.736410,-5.935687,7.243386,4.282512,1.107489,-4.124137,-8.614770,9.458412,8.717434,4.228869,9.040336,8.531869,-9.684846,-5.162417,5.427557,-6.068567,-1.361880,1.578709,3.583451,-7.769730,-7.964379,9.018328,-0.672389,9.905375,-4.636721,8.759735,-5.231533,9.370292,7.953306,6.914032,4.833235,-8.265842,-1.234280,2.550105,-4.883408,9.970797,-2.152652,6.678349,2.600999,-9.069417,7.429346,4.537731,-8.843656,3.628478,-6.443751,-2.949123,-9.734961,-4.007765,-6.635131,0.287696,6.609001,1.986732,4.155412,-9.361366,-5.774728,-7.179664,-7.401965,0.014300,-4.901294,3.728359,8.291183,-0.065994,-2.039291,-8.539240,-1.508425,5.544231,-1.435847,-3.756968,-1.878519,7.635103,2.333080,-9.507595,8.807995,0.337417,-0.324876,7.490914,-9.533247,-2.339103,-9.738129,-8.877438,-8.770236,-0.743695,-0.916234,-8.537413,0.173723,4.934672,7.008168,-2.005856,3.349838,-5.029320,-9.565411,9.963873,-0.535772,8.384841,8.410672,6.307474,-4.103012,-3.078493,-9.149318,3.338186,-8.775532,7.064655,-3.425123,0.178113,1.158491,-8.150232,8.886381,-0.548317,9.951498,-5.569124,8.350004,-3.974422,5.340144,9.910495,9.951684,5.137254,8.406277,0.633124,-6.696435,-5.184952,-2.981818,-4.072613,-8.346727,6.353195,-7.958569,-2.311969,-9.245384,6.397170,-1.242017,7.909142,4.829376,3.918039,7.797300,7.071299,6.502773,4.486274,-0.397514,7.866126,1.228217,-4.853376,-7.084643,2.012316,5.385928,-5.735373,2.493695,6.161810,-0.509984,-7.281925,6.488335,-2.838560,3.796977,-6.659428,6.543667,-2.277738,5.209226,-0.408675,-9.399582,-4.892981,5.868919,4.696275,-7.960147,8.689448,3.450814,4.704358,8.916218,-1.053399,7.326072,-2.467266,-4.101244,7.052834,5.961692,-7.186832,-5.013207,6.859809,2.260748,-4.054844,2.350604,4.617694,6.573045,5.751006,-2.302563,1.751080,4.122481,-2.640518,7.868720,3.237576,2.249339,-6.428476,-3.951108,7.076966,-7.922138,2.875240,-5.861321,-0.231363,7.656517,-1.563608,6.560619,-7.493722,-5.424470,8.060304,-8.412576,-9.426088,-8.264640,8.588524,1.190057,-3.514330,3.585018,8.035275,-9.878055,9.886465], dtype = "float32")#candidate|14814|(270,)|const|float32
var_14815 = relay.var("var_14815", dtype = "float32", shape = (2250,))#candidate|14815|(2250,)|var|float32
call_14812 = relay.TupleGetItem(func_2639_call(relay.reshape(const_14813.astype('float32'), [11, 15, 14]), relay.reshape(const_14813.astype('float32'), [11, 15, 14]), relay.reshape(const_14814.astype('float32'), [30, 9]), relay.reshape(var_14815.astype('float32'), [2250,]), ), 7)
call_14816 = relay.TupleGetItem(func_2644_call(relay.reshape(const_14813.astype('float32'), [11, 15, 14]), relay.reshape(const_14813.astype('float32'), [11, 15, 14]), relay.reshape(const_14814.astype('float32'), [30, 9]), relay.reshape(var_14815.astype('float32'), [2250,]), ), 7)
bop_14822 = relay.mod(const_14814.astype('float32'), call_14812.astype('float32')) # shape=(270,)
bop_14825 = relay.mod(const_14814.astype('float32'), call_14816.astype('float32')) # shape=(270,)
func_12271_call = mod.get_global_var('func_12271')
func_12274_call = mutated_mod.get_global_var('func_12274')
const_14829 = relay.const([5,10,-3,2,6,7,5,-7,-7,-9,-1,-5,1,5,6,-3,5,2,-10,3,-6,-9,10,-3,8,-5,-3,5], dtype = "int16")#candidate|14829|(28,)|const|int16
call_14828 = relay.TupleGetItem(func_12271_call(relay.reshape(const_14829.astype('int16'), [14, 1, 2])), 3)
call_14830 = relay.TupleGetItem(func_12274_call(relay.reshape(const_14829.astype('int16'), [14, 1, 2])), 3)
func_9795_call = mod.get_global_var('func_9795')
func_9796_call = mutated_mod.get_global_var('func_9796')
call_14831 = func_9795_call()
call_14832 = func_9795_call()
func_14665_call = mod.get_global_var('func_14665')
func_14667_call = mutated_mod.get_global_var('func_14667')
call_14837 = relay.TupleGetItem(func_14665_call(relay.reshape(bop_14822.astype('float64'), [270,])), 3)
call_14838 = relay.TupleGetItem(func_14667_call(relay.reshape(bop_14822.astype('float64'), [270,])), 3)
uop_14850 = relay.atanh(const_14813.astype('float64')) # shape=(770, 3)
func_13239_call = mod.get_global_var('func_13239')
func_13241_call = mutated_mod.get_global_var('func_13241')
call_14853 = relay.TupleGetItem(func_13239_call(), 5)
call_14854 = relay.TupleGetItem(func_13241_call(), 5)
output = relay.Tuple([call_14805,var_14815,bop_14822,call_14828,const_14829,call_14831,call_14837,uop_14850,call_14853,])
output2 = relay.Tuple([call_14806,var_14815,bop_14825,call_14830,const_14829,call_14832,call_14838,uop_14850,call_14854,])
func_14869 = relay.Function([var_14815,], output)
mod['func_14869'] = func_14869
mod = relay.transform.InferType()(mod)
mutated_mod['func_14869'] = func_14869
mutated_mod = relay.transform.InferType()(mutated_mod)
var_14870 = relay.var("var_14870", dtype = "float32", shape = (2250,))#candidate|14870|(2250,)|var|float32
func_14869_call = mutated_mod.get_global_var('func_14869')
call_14871 = func_14869_call(var_14870)
output = call_14871
func_14872 = relay.Function([var_14870], output)
mutated_mod['func_14872'] = func_14872
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12967_call = mod.get_global_var('func_12967')
func_12968_call = mutated_mod.get_global_var('func_12968')
call_14945 = relay.TupleGetItem(func_12967_call(), 0)
call_14946 = relay.TupleGetItem(func_12968_call(), 0)
output = relay.Tuple([call_14945,])
output2 = relay.Tuple([call_14946,])
func_14973 = relay.Function([], output)
mod['func_14973'] = func_14973
mod = relay.transform.InferType()(mod)
mutated_mod['func_14973'] = func_14973
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14973_call = mutated_mod.get_global_var('func_14973')
call_14974 = func_14973_call()
output = call_14974
func_14975 = relay.Function([], output)
mutated_mod['func_14975'] = func_14975
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11129_call = mod.get_global_var('func_11129')
func_11131_call = mutated_mod.get_global_var('func_11131')
call_14979 = relay.TupleGetItem(func_11129_call(), 2)
call_14980 = relay.TupleGetItem(func_11131_call(), 2)
func_10876_call = mod.get_global_var('func_10876')
func_10878_call = mutated_mod.get_global_var('func_10878')
call_14985 = relay.TupleGetItem(func_10876_call(), 0)
call_14986 = relay.TupleGetItem(func_10878_call(), 0)
func_3958_call = mod.get_global_var('func_3958')
func_3960_call = mutated_mod.get_global_var('func_3960')
const_14988 = relay.const(8, dtype = "int32")#candidate|14988|()|const|int32
call_14987 = relay.TupleGetItem(func_3958_call(relay.reshape(const_14988.astype('int32'), [])), 0)
call_14989 = relay.TupleGetItem(func_3960_call(relay.reshape(const_14988.astype('int32'), [])), 0)
output = relay.Tuple([call_14979,call_14985,call_14987,const_14988,])
output2 = relay.Tuple([call_14980,call_14986,call_14989,const_14988,])
func_14996 = relay.Function([], output)
mod['func_14996'] = func_14996
mod = relay.transform.InferType()(mod)
output = func_14996()
func_14997 = relay.Function([], output)
mutated_mod['func_14997'] = func_14997
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8889_call = mod.get_global_var('func_8889')
func_8891_call = mutated_mod.get_global_var('func_8891')
call_15099 = relay.TupleGetItem(func_8889_call(), 3)
call_15100 = relay.TupleGetItem(func_8891_call(), 3)
func_11520_call = mod.get_global_var('func_11520')
func_11521_call = mutated_mod.get_global_var('func_11521')
call_15105 = relay.TupleGetItem(func_11520_call(), 0)
call_15106 = relay.TupleGetItem(func_11521_call(), 0)
func_4427_call = mod.get_global_var('func_4427')
func_4431_call = mutated_mod.get_global_var('func_4431')
var_15120 = relay.var("var_15120", dtype = "float64", shape = (8,))#candidate|15120|(8,)|var|float64
const_15121 = relay.const(-4, dtype = "uint64")#candidate|15121|()|const|uint64
var_15122 = relay.var("var_15122", dtype = "uint64", shape = (448,))#candidate|15122|(448,)|var|uint64
call_15119 = relay.TupleGetItem(func_4427_call(relay.reshape(var_15120.astype('float64'), [2, 1, 4]), relay.reshape(const_15121.astype('uint64'), []), relay.reshape(var_15122.astype('uint64'), [448,]), ), 2)
call_15123 = relay.TupleGetItem(func_4431_call(relay.reshape(var_15120.astype('float64'), [2, 1, 4]), relay.reshape(const_15121.astype('uint64'), []), relay.reshape(var_15122.astype('uint64'), [448,]), ), 2)
func_8011_call = mod.get_global_var('func_8011')
func_8014_call = mutated_mod.get_global_var('func_8014')
var_15133 = relay.var("var_15133", dtype = "int8", shape = (180,))#candidate|15133|(180,)|var|int8
call_15132 = relay.TupleGetItem(func_8011_call(relay.reshape(var_15133.astype('int8'), [180,])), 1)
call_15134 = relay.TupleGetItem(func_8014_call(relay.reshape(var_15133.astype('int8'), [180,])), 1)
func_7783_call = mod.get_global_var('func_7783')
func_7784_call = mutated_mod.get_global_var('func_7784')
call_15136 = func_7783_call()
call_15137 = func_7783_call()
output = relay.Tuple([call_15099,call_15105,call_15119,var_15120,const_15121,var_15122,call_15132,var_15133,call_15136,])
output2 = relay.Tuple([call_15100,call_15106,call_15123,var_15120,const_15121,var_15122,call_15134,var_15133,call_15137,])
func_15155 = relay.Function([var_15120,var_15122,var_15133,], output)
mod['func_15155'] = func_15155
mod = relay.transform.InferType()(mod)
var_15156 = relay.var("var_15156", dtype = "float64", shape = (8,))#candidate|15156|(8,)|var|float64
var_15157 = relay.var("var_15157", dtype = "uint64", shape = (448,))#candidate|15157|(448,)|var|uint64
var_15158 = relay.var("var_15158", dtype = "int8", shape = (180,))#candidate|15158|(180,)|var|int8
output = func_15155(var_15156,var_15157,var_15158,)
func_15159 = relay.Function([var_15156,var_15157,var_15158,], output)
mutated_mod['func_15159'] = func_15159
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13553_call = mod.get_global_var('func_13553')
func_13555_call = mutated_mod.get_global_var('func_13555')
call_15267 = relay.TupleGetItem(func_13553_call(), 0)
call_15268 = relay.TupleGetItem(func_13555_call(), 0)
func_4427_call = mod.get_global_var('func_4427')
func_4431_call = mutated_mod.get_global_var('func_4431')
const_15271 = relay.const(-6, dtype = "uint64")#candidate|15271|()|const|uint64
var_15272 = relay.var("var_15272", dtype = "uint64", shape = (448,))#candidate|15272|(448,)|var|uint64
call_15270 = relay.TupleGetItem(func_4427_call(relay.reshape(call_15267.astype('float64'), [2, 1, 4]), relay.reshape(const_15271.astype('uint64'), []), relay.reshape(var_15272.astype('uint64'), [448,]), ), 0)
call_15273 = relay.TupleGetItem(func_4431_call(relay.reshape(call_15267.astype('float64'), [2, 1, 4]), relay.reshape(const_15271.astype('uint64'), []), relay.reshape(var_15272.astype('uint64'), [448,]), ), 0)
func_14035_call = mod.get_global_var('func_14035')
func_14038_call = mutated_mod.get_global_var('func_14038')
const_15277 = relay.const([2.566860,-0.688852,2.655682,8.417601,0.453950,7.653857,-2.878421,-6.013008,3.423045,-5.217063,8.712908,-2.567045,0.761846,-5.041134,0.046142,9.979628,-6.151010,-8.884931,-4.686355,9.410252,-6.543641,-0.377985,7.044412,3.429540,-7.988073,-4.613212,6.548878,5.808474,7.507604,9.590858,7.610343,3.413940,-5.536176,-9.208434,9.370518,4.922098,-9.493779,4.306061,-5.292682,-2.927207,-0.049168,-0.858475,5.505306,-0.392761,-1.589132,0.650187,-0.524340,3.682821,-0.993704,9.588557,7.979836,-6.229164,-4.570484,-5.638351,-4.288533,-3.618735,1.278373,-6.365747,-0.906244,6.765150,8.723839,1.338240,-3.905229,-8.309325,-3.613768,-1.777009,-3.102099,3.265990,-2.676871,-1.218544,-6.905827,5.334965,0.167900,-8.239436,-4.573451,-0.854910,0.995831,8.603549,9.205605,-0.236441,7.725444,8.461908,9.639007,0.429216,-7.138676,5.148902,-2.762507,-2.731940,-2.808298,8.007452,3.315863,-5.718202,9.557195,-1.134623,-6.720576,-6.458244,4.511195,6.796293,-7.914474,7.925815,-0.754812,1.842705,8.243440,7.692017,3.153208,5.901276,-6.437041,0.088396,6.979731,-2.635928,-5.089891,-9.025287,0.840003,0.292711,-1.245503,-5.590549,1.061769,3.989785,-7.713162,-8.056980,0.971199,-0.846824,-5.953849,-8.295205,3.077883,6.064345,0.741851,4.802178,6.292163,3.444465,6.802479,7.272963,6.639403,-0.118374,5.811366,3.043793,-2.212948,-7.896533,5.653938,-1.358658,-3.707658,3.100709,4.724960,-2.344378,4.907653,-2.539091,0.811085,9.479250,-0.127935,-0.620889,-4.772733,4.114470,1.290668,1.661018,-6.013628,3.563419,3.283066,-7.476085,-8.879716,-4.823209,-3.001943,-1.119079,-5.189707,0.221771,6.213522,-0.084972,9.308081,-2.664974,6.181759,-5.742696,-7.011097,-4.875700,-7.943970,-1.135316,4.706673,-5.652644,-1.381558,-3.173874,-8.376909,5.335586,7.466817,0.196638,7.449509,-1.903633,-8.260960,-6.114233,-0.828191,-6.887809,-8.908708,0.204646,8.887764,0.964894,8.087851,-0.274665,8.808433,2.436302,0.186551,-4.048381,5.514386,-6.724490,4.397879,-8.158865,1.003476,-1.550815,8.263260,-2.779259,7.190814,-7.350958,5.260515,-2.639024,2.372511,6.932268,-2.976784,5.775529,-9.580188,8.262916,6.237837,-0.926824,0.627813,-5.223634,-1.984125,8.942987,-1.936758,-7.833137,9.341282,5.728450,0.467122,8.731948,-2.026928,0.445939,-2.771448,-0.165223,-1.498048,3.795699,3.955020,-8.135003,-6.290619,7.259870,-9.153408,-3.083703,-7.124881,-4.706083,-1.775159,7.172134,-9.754576,-6.274050,-6.626960,-8.480464,5.117411,-2.226186,0.143432,-5.275130,-6.671869,1.353813,-4.857379,-6.301550,8.835929,-1.757148,9.610073,-0.539423,-0.094698,-0.958321,1.787221,8.879237,-8.654185,2.400389,-6.746779,3.955339,0.178683,8.858972], dtype = "float64")#candidate|15277|(270,)|const|float64
call_15276 = relay.TupleGetItem(func_14035_call(relay.reshape(const_15277.astype('float64'), [9, 5, 6])), 5)
call_15278 = relay.TupleGetItem(func_14038_call(relay.reshape(const_15277.astype('float64'), [9, 5, 6])), 5)
output = relay.Tuple([call_15267,call_15270,const_15271,var_15272,call_15276,const_15277,])
output2 = relay.Tuple([call_15268,call_15273,const_15271,var_15272,call_15278,const_15277,])
func_15288 = relay.Function([var_15272,], output)
mod['func_15288'] = func_15288
mod = relay.transform.InferType()(mod)
mutated_mod['func_15288'] = func_15288
mutated_mod = relay.transform.InferType()(mutated_mod)
var_15289 = relay.var("var_15289", dtype = "uint64", shape = (448,))#candidate|15289|(448,)|var|uint64
func_15288_call = mutated_mod.get_global_var('func_15288')
call_15290 = func_15288_call(var_15289)
output = call_15290
func_15291 = relay.Function([var_15289], output)
mutated_mod['func_15291'] = func_15291
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13553_call = mod.get_global_var('func_13553')
func_13555_call = mutated_mod.get_global_var('func_13555')
call_15302 = relay.TupleGetItem(func_13553_call(), 0)
call_15303 = relay.TupleGetItem(func_13555_call(), 0)
output = call_15302
output2 = call_15303
func_15306 = relay.Function([], output)
mod['func_15306'] = func_15306
mod = relay.transform.InferType()(mod)
output = func_15306()
func_15307 = relay.Function([], output)
mutated_mod['func_15307'] = func_15307
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7874_call = mod.get_global_var('func_7874')
func_7876_call = mutated_mod.get_global_var('func_7876')
call_15379 = relay.TupleGetItem(func_7874_call(), 0)
call_15380 = relay.TupleGetItem(func_7876_call(), 0)
output = call_15379
output2 = call_15380
func_15398 = relay.Function([], output)
mod['func_15398'] = func_15398
mod = relay.transform.InferType()(mod)
mutated_mod['func_15398'] = func_15398
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15398_call = mutated_mod.get_global_var('func_15398')
call_15399 = func_15398_call()
output = call_15399
func_15400 = relay.Function([], output)
mutated_mod['func_15400'] = func_15400
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11129_call = mod.get_global_var('func_11129')
func_11131_call = mutated_mod.get_global_var('func_11131')
call_15433 = relay.TupleGetItem(func_11129_call(), 0)
call_15434 = relay.TupleGetItem(func_11131_call(), 0)
output = call_15433
output2 = call_15434
func_15457 = relay.Function([], output)
mod['func_15457'] = func_15457
mod = relay.transform.InferType()(mod)
output = func_15457()
func_15458 = relay.Function([], output)
mutated_mod['func_15458'] = func_15458
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9514_call = mod.get_global_var('func_9514')
func_9516_call = mutated_mod.get_global_var('func_9516')
call_15501 = relay.TupleGetItem(func_9514_call(), 0)
call_15502 = relay.TupleGetItem(func_9516_call(), 0)
func_14996_call = mod.get_global_var('func_14996')
func_14997_call = mutated_mod.get_global_var('func_14997')
call_15513 = relay.TupleGetItem(func_14996_call(), 1)
call_15514 = relay.TupleGetItem(func_14997_call(), 1)
output = relay.Tuple([call_15501,call_15513,])
output2 = relay.Tuple([call_15502,call_15514,])
func_15524 = relay.Function([], output)
mod['func_15524'] = func_15524
mod = relay.transform.InferType()(mod)
mutated_mod['func_15524'] = func_15524
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15524_call = mutated_mod.get_global_var('func_15524')
call_15525 = func_15524_call()
output = call_15525
func_15526 = relay.Function([], output)
mutated_mod['func_15526'] = func_15526
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13270_call = mod.get_global_var('func_13270')
func_13271_call = mutated_mod.get_global_var('func_13271')
call_15557 = relay.TupleGetItem(func_13270_call(), 0)
call_15558 = relay.TupleGetItem(func_13271_call(), 0)
output = call_15557
output2 = call_15558
func_15571 = relay.Function([], output)
mod['func_15571'] = func_15571
mod = relay.transform.InferType()(mod)
mutated_mod['func_15571'] = func_15571
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15571_call = mutated_mod.get_global_var('func_15571')
call_15572 = func_15571_call()
output = call_15572
func_15573 = relay.Function([], output)
mutated_mod['func_15573'] = func_15573
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7874_call = mod.get_global_var('func_7874')
func_7876_call = mutated_mod.get_global_var('func_7876')
call_15607 = relay.TupleGetItem(func_7874_call(), 0)
call_15608 = relay.TupleGetItem(func_7876_call(), 0)
func_14427_call = mod.get_global_var('func_14427')
func_14429_call = mutated_mod.get_global_var('func_14429')
call_15609 = relay.TupleGetItem(func_14427_call(), 0)
call_15610 = relay.TupleGetItem(func_14429_call(), 0)
output = relay.Tuple([call_15607,call_15609,])
output2 = relay.Tuple([call_15608,call_15610,])
func_15635 = relay.Function([], output)
mod['func_15635'] = func_15635
mod = relay.transform.InferType()(mod)
output = func_15635()
func_15636 = relay.Function([], output)
mutated_mod['func_15636'] = func_15636
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8889_call = mod.get_global_var('func_8889')
func_8891_call = mutated_mod.get_global_var('func_8891')
call_15639 = relay.TupleGetItem(func_8889_call(), 1)
call_15640 = relay.TupleGetItem(func_8891_call(), 1)
func_15306_call = mod.get_global_var('func_15306')
func_15307_call = mutated_mod.get_global_var('func_15307')
call_15641 = func_15306_call()
call_15642 = func_15306_call()
func_12123_call = mod.get_global_var('func_12123')
func_12128_call = mutated_mod.get_global_var('func_12128')
const_15657 = relay.const(2.190550, dtype = "float64")#candidate|15657|()|const|float64
var_15658 = relay.var("var_15658", dtype = "float64", shape = (512,))#candidate|15658|(512,)|var|float64
const_15659 = relay.const([-2,6,10,-6,10,-10,-5,-8,-3,-8,6,-6,-9,-7,9,-8,2,10,4,3,-10,-8,9,9,6,-6,-5,7,7,7,-5,-6,8,3,2,5,10,-8,1,3,-9,10,-3,-2,-1,8,-3,-5,2,1,5,-9,9,-3,9,10,7,3,-6,-10,-1,3,5,-5,7,1,3,-4,-7,5,-3,3,-4,9,1,-7,10,-8,-9,9,2,7,-10,-10,-9,5,1,-3,-6,4,-4,10,2,-8,-3,-6,-7,-2,5,-7,8,-10,2,5,8,5,-2,-5,-7,5,9,6,-6,4,10,-8,3,-9,-3,-3,6,2,-5,10,9,-1,-9,-4,-5,6,10,-8,-2,-8,-3,-6,8,-5,-5,6,-2,-2,-6,-6,5,-10,6,7,-7,4,5,7,6,-8,-10,-4,-3,-5,-3,2,3,-2,-10,-8,4,-6,-2,4,-6,-10,9,1,10,-1,-7,2,6,8,5,-2,-7,-9,1,6,6,-4,-10,6,-10,-7,-1,6,5,3,1,-2,-4,-9,4,2,1,-4,-10,-3,9,-9,8,-10,-1,-6,8,3,9,-7,-5,-5,-5,-7,1,-7,-9,3,-2,-10,-7,5,4,-7,10,-8,-3,1,-3,-4,10,5,10,7,-2,-6,5,4,1,-4,5,6,-6,5,9,4,-5,-9,8,8,4,10,-7,-9,-6,-9,-5,-1,4,-10,7,2,-2,8,6,-1,10,-10,-6,5,-1,4,-9,-9,-3,6,3,-4,9,-5,6,7,-7,-4,7,-6,-6,-6,-7,10,6,-10,1,5,3,-5,8,-8,-1,10,4,6,-8,6,9,-3,-9,-5,-6,2,-2,8,-1,7,-9,-9,4,-4,10,-8,-8,-6,-4,9,3,9,8,-7,6,-2,2,-9,-7,-1,-6,5,-9,-1,4,-5,3,4,3,-2,-7,3,6,-8,-8,-9,7,8,-9,-1,1,1,1,-5,9,1,-2,9,-10,-10,-7,3,-4,-2,-10,-5,-10,-4,4,-3,-9,-10,3,-10,8,9,10,7,-3,-9,1,-1,-2,2], dtype = "uint64")#candidate|15659|(392,)|const|uint64
call_15656 = relay.TupleGetItem(func_12123_call(relay.reshape(const_15657.astype('float64'), []), relay.reshape(var_15658.astype('float64'), [4, 8, 16]), relay.reshape(const_15659.astype('uint64'), [392,]), ), 1)
call_15660 = relay.TupleGetItem(func_12128_call(relay.reshape(const_15657.astype('float64'), []), relay.reshape(var_15658.astype('float64'), [4, 8, 16]), relay.reshape(const_15659.astype('uint64'), [392,]), ), 1)
func_14262_call = mod.get_global_var('func_14262')
func_14263_call = mutated_mod.get_global_var('func_14263')
call_15671 = relay.TupleGetItem(func_14262_call(), 0)
call_15672 = relay.TupleGetItem(func_14263_call(), 0)
func_14262_call = mod.get_global_var('func_14262')
func_14263_call = mutated_mod.get_global_var('func_14263')
call_15678 = relay.TupleGetItem(func_14262_call(), 1)
call_15679 = relay.TupleGetItem(func_14263_call(), 1)
func_11268_call = mod.get_global_var('func_11268')
func_11271_call = mutated_mod.get_global_var('func_11271')
const_15697 = relay.const([[-2.302887,-4.439080,4.654146,6.890512,5.488405,-7.908721,-4.049943,-0.622333,-0.147532,6.570992,-9.821404,-7.918609,5.333110,-4.755439,6.328614,-7.954015,-4.749673,3.161493,3.010266,-3.291055,7.787154,-5.848501,-3.435611,-4.248055,8.667650,5.901787,2.110635,8.552606,-9.967739,-0.600205,-1.735785,2.415938,1.943114,-9.273980,8.737801,0.683753,4.617699,0.187451,-1.736799,9.350310,7.351798,9.526999,-6.857614,9.088272,5.340431,-1.519637,-8.174597,-8.072554,2.101302,7.350683,6.220533,1.755657,-6.120334,0.502036,9.120883,6.696140,0.812528,8.438597,7.669678,-7.521702,-2.313480,0.664856,2.587427,-5.818987,-4.717215,8.554162,-5.667064,7.060171,6.303632,4.523173,7.864152,4.997340,0.489494,-2.181785,-0.944428,6.856903,-3.581610,1.814774,9.359770,-1.774127,9.778010,5.441966,-5.505307,7.259996,4.285660,-6.592155,7.471921,-9.297856,-7.545318,0.333621,3.467939,5.131608,1.311245,7.838591,-9.475392,1.661280,-2.942300,9.752441,1.189281,-0.671659,5.946574,7.312291,4.439876,-1.601807,-3.228514,-8.150534,-0.505180,1.418280,-8.343856,-3.407184,-6.702669,6.039904,7.238383,-7.879297,6.327641,2.504844,7.184989],[2.376194,-7.915347,5.129957,1.207138,0.891636,9.328396,-7.911403,0.541882,3.314189,-0.243045,-7.461870,4.731771,-7.416015,-0.270409,-1.295370,-9.633394,-5.962441,9.533719,6.062215,9.818216,-4.801118,-7.811870,-5.733767,-4.023827,3.824267,-8.661946,-5.877820,-4.885147,-5.484732,-9.454322,9.371922,-0.936655,-5.264719,0.625959,0.254764,-3.277954,9.542302,-6.279448,-2.177206,0.311704,0.739400,-5.065503,-8.869197,-1.124857,1.229401,7.718441,1.326927,-3.044043,6.288481,7.633659,-8.516294,-5.935642,-8.120781,8.263930,8.629843,2.366714,0.678730,-3.915272,-3.023349,-7.131867,-1.518132,-7.611890,-8.657887,9.328807,-6.601048,-9.051377,-2.107090,6.437268,9.094423,3.763437,4.762846,7.642338,-9.204209,-9.940482,-8.453893,-5.503945,-6.720863,-5.343256,5.208461,-0.797581,-4.877683,-3.298487,-6.808171,-2.905484,6.114745,-1.109081,-4.229503,3.053345,-0.436537,8.259077,-0.454184,0.818222,0.488964,1.304677,4.255814,-1.807190,-9.978480,-1.130538,-6.704585,-9.714479,-2.199468,2.279936,-8.378348,-2.268682,-5.594602,3.817460,5.120328,-4.009531,-8.510167,-3.582269,6.111547,-7.947564,3.060551,-8.115170,0.806467,7.920962,-7.880032],[-2.765604,5.505825,3.823621,-3.077794,1.309947,4.347057,-7.965608,8.328508,9.846048,-3.079649,0.649085,-6.108971,4.757770,-7.685466,2.824923,2.277446,-7.963645,-1.211588,1.226728,-9.606222,1.799405,-8.290524,-0.270519,-2.359774,-1.921953,3.713235,-2.929376,-1.270604,2.653783,4.417842,4.773995,-4.901227,4.347617,1.890748,9.550794,5.780321,7.218734,7.835426,-2.655998,1.722609,-5.751863,-6.199819,-8.123458,-1.550970,9.747938,-6.813864,9.644399,-4.091542,-8.499238,9.039335,-0.484552,-5.282203,-4.524594,7.357173,5.622378,7.085602,9.280400,-9.918747,-8.607309,8.328002,-4.281776,-6.273731,-0.321982,5.465672,-2.115861,-2.931358,0.680812,-8.703201,-4.183886,-8.692165,-1.387235,1.484984,8.840771,9.069514,8.674976,-3.769468,9.792033,2.054175,2.342388,-0.337652,1.525891,-0.399163,1.215358,-1.700982,-6.899206,7.027670,-5.104982,-5.575612,-5.000173,-5.568607,-7.060186,-9.066882,6.973891,2.768392,-2.916054,2.251280,1.296973,-0.380683,-7.866084,-9.623761,-2.301969,-2.159623,4.327517,-2.811979,-4.626280,3.130307,3.290463,-3.816780,2.109633,-3.394386,5.728429,5.827276,9.410509,1.662860,-8.638071,3.864687,0.741539],[3.155949,-8.267656,8.396135,-4.366941,-0.394403,-3.894493,2.886055,-8.734846,6.445100,5.882572,-4.259381,-5.058998,-4.370821,-8.334118,3.235697,5.793148,-5.868089,5.377045,0.542592,-2.111035,9.146420,-7.131704,-1.260948,-6.979364,6.389079,-2.642038,7.634720,2.558122,5.849364,1.950220,-3.751710,9.685147,-9.076031,-0.911239,0.576947,9.741163,2.027295,9.304721,8.630536,7.676623,3.771283,-5.866172,-8.978088,-8.654254,7.050408,1.858542,8.875896,-5.667542,4.917415,9.701347,3.494810,5.711963,-4.713963,-1.851280,4.639665,-5.150256,6.697794,5.440108,1.762767,1.365389,4.263416,-6.874589,-1.180610,-4.681120,4.205021,-4.236241,8.880026,3.929728,-8.305300,9.529697,5.613587,-3.330081,-9.431438,-8.302938,2.724265,7.411648,-4.376396,1.620372,-2.434089,-4.159334,5.136243,5.190895,9.491400,1.384139,-6.320608,1.629142,-5.007808,4.486637,7.724314,-8.253843,1.821753,7.579667,8.670787,-1.220019,-6.364305,9.624583,3.996151,-3.546873,5.730237,-8.769148,-5.766312,9.132567,8.642993,-2.301020,4.728298,-3.965703,-7.180577,-7.740251,-5.994677,1.116398,-7.505328,0.980754,9.564974,-1.905350,0.064154,6.384289,-4.281024],[-0.022373,3.442949,-7.268243,-2.001391,6.271980,-6.092634,-6.692567,7.819579,1.968672,0.696518,7.356380,7.056311,9.379161,0.667936,-7.673873,-3.771951,8.714785,6.517780,-1.321863,-6.053971,-9.367048,2.527102,-9.571374,0.258290,-4.121726,-5.971128,7.098192,6.283980,-4.662582,5.956808,-5.844494,5.649682,3.383529,7.731868,-5.792342,-1.532622,-9.341210,-6.926245,-4.104999,8.265432,-9.336566,-5.446398,0.451030,-1.231824,-3.033497,-6.043365,0.956038,0.580998,7.905945,-4.587938,-7.861476,-1.666650,8.684194,1.745630,-3.772342,-5.636191,-9.024915,2.300270,4.362783,1.041002,7.203899,-4.633309,-4.520763,-9.877617,3.126885,8.154258,8.119167,-0.043011,-4.609228,-4.352975,-7.261512,7.556316,3.722909,-2.813553,1.438887,4.922646,-1.498425,6.105252,3.738805,-7.643104,1.788182,-3.432127,6.566849,0.433906,0.899626,3.153476,-3.830161,-0.601869,1.651719,-6.902150,6.827101,0.281908,-9.346287,-7.027001,-0.285500,-6.559786,-9.217886,-2.691113,3.825095,-7.557219,5.069758,6.377669,-9.212244,-8.610540,-7.720201,-4.353744,-0.114695,0.841632,7.243440,-9.246379,-9.234159,6.515176,3.361092,9.214078,0.097024,0.038927,3.838757]], dtype = "float64")#candidate|15697|(5, 117)|const|float64
call_15696 = relay.TupleGetItem(func_11268_call(relay.reshape(const_15697.astype('float64'), [65, 9])), 1)
call_15698 = relay.TupleGetItem(func_11271_call(relay.reshape(const_15697.astype('float64'), [65, 9])), 1)
output = relay.Tuple([call_15639,call_15641,call_15656,const_15657,var_15658,const_15659,call_15671,call_15678,call_15696,const_15697,])
output2 = relay.Tuple([call_15640,call_15642,call_15660,const_15657,var_15658,const_15659,call_15672,call_15679,call_15698,const_15697,])
func_15709 = relay.Function([var_15658,], output)
mod['func_15709'] = func_15709
mod = relay.transform.InferType()(mod)
mutated_mod['func_15709'] = func_15709
mutated_mod = relay.transform.InferType()(mutated_mod)
var_15710 = relay.var("var_15710", dtype = "float64", shape = (512,))#candidate|15710|(512,)|var|float64
func_15709_call = mutated_mod.get_global_var('func_15709')
call_15711 = func_15709_call(var_15710)
output = call_15711
func_15712 = relay.Function([var_15710], output)
mutated_mod['func_15712'] = func_15712
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15635_call = mod.get_global_var('func_15635')
func_15636_call = mutated_mod.get_global_var('func_15636')
call_15740 = relay.TupleGetItem(func_15635_call(), 1)
call_15741 = relay.TupleGetItem(func_15636_call(), 1)
output = relay.Tuple([call_15740,])
output2 = relay.Tuple([call_15741,])
func_15771 = relay.Function([], output)
mod['func_15771'] = func_15771
mod = relay.transform.InferType()(mod)
mutated_mod['func_15771'] = func_15771
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15771_call = mutated_mod.get_global_var('func_15771')
call_15772 = func_15771_call()
output = call_15772
func_15773 = relay.Function([], output)
mutated_mod['func_15773'] = func_15773
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9830_call = mod.get_global_var('func_9830')
func_9832_call = mutated_mod.get_global_var('func_9832')
call_15792 = func_9830_call()
call_15793 = func_9830_call()
output = relay.Tuple([call_15792,])
output2 = relay.Tuple([call_15793,])
func_15798 = relay.Function([], output)
mod['func_15798'] = func_15798
mod = relay.transform.InferType()(mod)
output = func_15798()
func_15799 = relay.Function([], output)
mutated_mod['func_15799'] = func_15799
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9254_call = mod.get_global_var('func_9254')
func_9256_call = mutated_mod.get_global_var('func_9256')
call_15810 = func_9254_call()
call_15811 = func_9254_call()
output = relay.Tuple([call_15810,])
output2 = relay.Tuple([call_15811,])
func_15824 = relay.Function([], output)
mod['func_15824'] = func_15824
mod = relay.transform.InferType()(mod)
output = func_15824()
func_15825 = relay.Function([], output)
mutated_mod['func_15825'] = func_15825
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13258_call = mod.get_global_var('func_13258')
func_13260_call = mutated_mod.get_global_var('func_13260')
call_15831 = func_13258_call()
call_15832 = func_13258_call()
func_7200_call = mod.get_global_var('func_7200')
func_7203_call = mutated_mod.get_global_var('func_7203')
const_15839 = relay.const([-6.386047,-8.995156,-8.206153,5.311029,9.516440,3.138192,-5.460281,6.046642,7.739157,-3.396313,-9.506351,-7.314830,5.526525,5.443612,-4.539846,-5.440631,-3.668210,6.213613,-5.595990,-4.161944,-0.765235,8.068239,-1.438182,-8.891094,-8.872824,6.907024,3.833596,-2.017418,-4.807160,-7.111964,-1.714254,9.335673,2.529807,8.549096,5.683257,-3.033006,-6.418721,-3.052296,-6.884381,-2.092474,9.916387,3.337311,5.107481,-4.321403,-6.010808,-3.100835,5.567981,1.452148,9.402711,-3.866301,-6.442916,-8.973250,-7.003881,-6.275431,8.835209,0.178984,-3.101437,3.496510,-3.409849,-6.637696,-3.925540,-3.678452,-3.264986,7.122053,-0.858893,1.409988,-7.439378,4.730275,-4.417685,1.439023,-0.933941,6.948439,1.218083,-4.943838,-5.966161,-7.786172,-6.701118,-6.243543,0.915514,-2.506565,-3.880951,-6.370153,5.574460,8.963279,0.666471,8.781076,-7.290627,2.674524,4.335695,7.216936,-7.902959,1.733889,-7.242215,2.693666,4.909404,-9.397911,1.414135,-5.154577,-6.040442,9.527136,-4.750036,-2.034941,4.934538,-5.074568,5.412289,-6.118010,-6.621744,-0.037154,9.086924,-0.714008,7.244766,-9.522871,3.817810,5.479895,3.838426,-8.631053,9.488873,-2.249683,-7.141124,-4.223630,-4.060585,7.912034,-3.382030,-1.184836,5.465832,-6.875600,2.201554,-4.650661,8.342403,-4.653545,-1.706481,-1.253557,9.294033,-9.831127,7.560471,-7.890129,4.081271,-7.697102,6.016040,4.722125,7.552262,-9.702598,4.227203,-2.347491,-6.450441,3.237490,4.604222,4.720344,-6.318866,-9.437239,-3.667243,0.633435,-6.771718,8.944520,-4.713419,-1.882711,-8.734501,-0.173812,6.758696,-6.536174,-6.735500,-7.346323,7.367507,-1.875631,3.808279,9.375062,4.731652,6.263640,1.322786,-0.212651,-3.961916,8.774896,6.686456,-5.095973,-9.363532,-8.324785,-2.901624,-9.080426,-5.922750,9.092846,1.177388,7.283511,0.046431,-5.357356,4.227339,2.602133,-3.388808,-9.376806,-2.028715,-9.911846,7.318574,8.672573,-3.437023,0.903601,7.750583,-6.674423,-3.938727,0.162072,7.410685,-8.327983,-9.977178,-2.177880,-6.662994,-3.382426,0.334972,-2.613143,-5.200252,-6.615986,1.683560,6.416945,-9.963015,-5.517722,-8.649640,-5.326101,6.693518,-8.504169,-1.922326,-1.829039,-0.013281,-2.286655,-8.289771,-2.370576,-9.188545,7.456129,6.837662,-8.523959,-3.522659,-2.396703,2.365278,-1.934156,4.443907,-2.317683,0.813451,-4.735328,-8.493461,4.265093,7.852992,8.729611,-3.061726,-4.707687,7.251399,7.974821,8.883764,-2.945380,4.586184,6.266454,-8.880963,-6.530157,5.816536,5.321250,4.812662,-9.609852,-5.975707,3.795153,-0.239126,-1.040657,-4.208146,5.300752,8.292890,-5.082640,9.863764,0.324309,-7.019255,5.402364,2.861033,8.151148,-6.173052,7.733758,1.848371,1.798872,-3.210892,7.878796,-3.337319,-1.915869,2.969267,-3.840383,9.226379,-4.773605,5.278364,7.157227,-3.843151,-0.587852,-0.448119,0.490222,-6.443159,6.649276,1.593154,1.116649,9.917329,5.016084,3.541013,1.172197,-9.510814,-9.706747,-2.644326,-5.421025,-8.522840,3.491363,-7.656032,-5.526816,4.870143,-6.102514,-6.365848,-0.500451,0.503980,-3.766567,6.673921,4.188979,6.688216,-4.108051,9.028202,-1.017845,9.617396,-6.674818,6.032859,-5.390949,-1.756566,0.569808,-6.442922,2.532709,3.455887,-4.786055,6.691596,-0.304578,3.884209,-8.164767,8.225561,-2.444969,-5.059989,9.111587,2.080313,6.593909,-1.787683,0.033225,-8.055835,-1.824433,-4.157124,6.719509,9.915246,9.712334,-3.354315,5.832315,-2.417838,-3.361829,1.715099,-0.740196,5.888846,-4.681841,-1.345588,-5.857833,-8.177028,8.838119,-4.959528,9.546039,-0.563323,-1.632215,-1.553702,6.406886,-3.862534,-3.442808,2.785446,-3.418511,-5.627436,-1.677212,-3.281225,8.499870,2.059277,-2.103190,9.865700,5.713221,-0.533088,-8.575806,-9.984822,9.831804,8.271733,-9.062645,2.916664,7.414232,0.679490,-3.895062,9.401386,4.981915,-9.995315,-3.919966,4.151223,-3.526040,9.340323,-1.364258,-8.131386,-9.530383,5.548299,-5.697786,-7.711812,-5.020841,3.049270,6.939033,1.789855,3.488028,-6.084267,1.691437,-7.210566,8.684315,4.008856,8.651292,-2.343355,9.607287,-3.759007,-4.571987,-8.145997,-2.386444,6.029477,-8.078052,-6.985794,1.823770,1.003825,-5.851359,-8.627496,0.552756,-0.407750,4.472988,9.368603,-8.339609,-6.891873,-2.299742,-6.552148,-8.789649,-4.023402,-4.499775,-4.192747,-8.672286,-3.342145,1.209235,-4.676255,-2.110600,0.809721,2.671824,2.592955,-4.109727,-9.614394,-3.473961,-5.142218,0.805753,0.500180,1.637541,4.977492,3.755811,8.219414,-4.234851,2.655784,-5.136083,-5.150696,4.931151,2.648628,8.335138,-2.834187,-0.531801,-6.706088,-1.517640,6.364045,0.628894,9.086850,1.583689,-4.653949,-8.510104,-7.273766,-1.875457,7.211102,-7.083552,-4.666668,-4.410866,1.560102,5.951866,-3.371914,1.030417,6.765755,-2.698074,3.579979,4.426601,2.091162,-8.267568,-6.207548,-0.467984,-0.046507,4.925497,-6.130826,-1.540065,-8.413715,5.737236,3.924523,8.845673,-5.454729,7.806405,1.705237,2.844587,-8.846430,-5.708007,-4.396985,-4.200326,-3.386086,2.888618,-4.619921,-2.938077,1.839340,5.540280,1.787780,-6.447192,4.224457,7.457940,-3.087054,6.591374,-1.554467,-1.639371,4.207756,-2.978799,-4.859648,-2.572532,8.728965,7.441550,4.971932,8.791411,0.582860,-1.845441,5.126300,2.120030,-2.242287,-9.650399,4.471631,7.460736,-4.280270,-5.764851,-9.573799,1.785719,7.125517,-8.383811,6.561896,2.021388,9.960400,0.005828,-7.933658,9.438138,-6.480804,4.818605,-7.911079,-4.866348,-8.797612,6.738221,2.678327,-9.606050,4.811036,9.889704,-4.073607,-4.793715,-5.345029,-1.244121,-1.680654,8.441608,-3.021422,-3.086075,-0.137795,6.407024,6.085444,0.842491,9.255177,-4.001394,-6.564297,3.882962,-5.696947,1.638888,-6.672082,3.644003,5.999161,5.741633,-6.397919,-6.699409,-9.547052,8.261165,-6.744069,-4.939761,2.714531,-8.800598,1.010616,-4.615194,6.944024,-5.421091,-4.808662,3.944997,6.031475,6.639073,-2.230015,-6.259689,7.332938,3.718918,-7.441287,2.724630,-9.241144,9.616886,7.624125,8.732731,6.077591,-0.138696,-8.476213,7.372520,-6.155954,6.720710,-9.113713,0.208243,4.620608,2.510108,8.455503,0.807814,4.945211,8.656584,6.125579,2.268433,-9.716429,-0.035001,0.972828,-8.004933,-8.807117,5.319687,2.679025,-3.491599,1.261672,-1.853857,-0.074122,-5.813078,7.507340,-5.964804,-4.739150,4.884823,-0.769890,7.560887,-7.175762,1.226243,0.230805,3.818316,-8.369145,-0.764515,-5.366659,-7.303639,-0.574979,-7.830663,-2.682910,-4.377095,-2.729605,1.894251,2.400831,6.816056,2.518175,-8.360058,1.253712,8.659151,7.382416,7.645194,5.050300,-5.226337,-1.851307,1.190954,-2.092733,0.194295,8.474194,5.494008,-7.603727,-0.119455,3.337799,-1.538639,7.771004,-8.531754,6.047811,-7.314939,2.670277,2.682901,7.496124,-8.216677,-2.992992,-5.532099,6.385340,9.019491,-7.058073,9.499474,-2.462398,-0.929786,4.256042,8.517623,-1.343090,8.648187,-1.623320,3.736752,4.215881,2.271810,-7.122318,-3.974411,4.809493,2.478979,7.967475,-4.609440,-5.284797,2.460145,3.039742,9.929589,-3.333233,-2.921112,8.894072,-2.739387,4.243015,-1.459795,-0.515746,2.808180,-9.101390,6.075214,1.089698,-9.236000,4.955705,-3.236460,-5.877601,-5.820678,-2.123786,4.117207,3.932152,2.043888,-8.453432,-8.851066,-6.118679,-3.342347,-2.891511,-7.544584,4.531754,6.859399,0.106531,-1.189342,9.385378,-2.074720,7.632756,4.244246,-8.449273,6.143861,0.357944,8.128633,-6.971159,-6.399485,6.811625,-0.175012,1.709972,6.924045,5.416799,-2.318870,2.248513,5.929249,3.920433,3.973303,0.797203,-9.821410,-9.601436,-5.175364,4.994369,3.681635,1.149415,-5.141853,9.552126,0.396158,7.501451,-6.821467,4.366682,3.581245,-6.847887,-0.174181,1.785996,-0.196113,-5.539644,-0.616627,-7.407582,-9.139057,-4.454960,-3.964611,6.801652,-5.760488,-7.588765,5.791831,-3.529108,-5.895677,6.645000,-4.305455,9.627090,-9.029020,4.167818,3.309985,-8.086826,-2.566526,-0.162831,-6.356996,-1.531651,-8.977075,4.699531,-9.654380,-1.173144,7.825794,7.912349,1.793819,-8.372224,-0.749547,-5.427661,2.307060,-2.584731,9.985912,8.113367,-2.005104,4.183417,-7.377261,-6.539539,-4.675934,4.530204,-3.204080,-4.536661,9.989561,3.110014,-7.094194,0.972229,-1.495439,8.694024,0.830534,4.227935,1.013632,-9.394781,-0.968448,-4.875549,-5.326460,-1.500626,5.831130,-8.090937,4.533025,-6.224203,6.581313,-6.950182,7.569094,-2.066925,-7.667537,-7.687548,-4.380133,1.069911,3.640976,5.291844,3.244489,-1.573813,-2.643203,6.308431,-0.938099,-1.045360,2.708479,4.929653,-2.478198,8.737179,-8.078888,-1.552917,9.057699,1.217892,-3.498437,-2.719392,-3.700583,-4.304746,7.812057,-3.622023,6.902022,6.274053,5.679890,-7.643730,-2.370629,-2.581643,3.994080,8.709146,-1.983208,-4.174987,-6.814760,-6.290598,2.947741,9.075840,-2.314398,7.627851,-4.269597,3.378426,9.683704,-3.236843,0.151752,-9.367285,0.281275,5.054253,-1.528707,-6.442844,-0.959611,3.937948,0.669353,-0.532481,5.275915,-1.170167,3.743724,6.247462,6.356328,-9.021857,3.411950,9.840132,0.116939,-9.312482,-1.618874,-7.154146,-2.630139,9.771065,-2.708343,8.032549,6.240616,-3.810009,1.679979,9.402644,0.424700,-6.960844,2.560865,1.904605,-5.259912,-2.830582,8.438884,-2.013950,5.908425,6.261729,3.042877,4.737085,-2.177441,7.801306,6.829386,-1.582720,8.333149,5.175759,7.294526,3.783988,7.526982,-1.783873,-9.520076,-5.554641,-1.333696,6.328445,-5.304650,-5.398959,-8.490830,5.086001,5.387102,-0.978467,-9.775834,3.178783,4.414877,6.329675,-6.841150,5.105075,-5.724007,-8.218463,5.490321,9.054460,-5.989688,2.542732,1.205008,1.894349,-0.025347,0.201242,1.991251,-2.383185,4.752227,7.685727,-0.283916,-6.751764,-2.769431,3.129252,2.221116,-1.458817,4.297341,-0.956025,-0.226212,9.357029,-6.447419,9.977703,0.020219,-6.634441,7.135684,-4.429558,-8.750638,9.553806,-6.406155,-6.526688,7.575939,9.365862,-6.484015,5.376765,3.921943,-0.250906,-7.458245,-1.065722,4.632000,-2.693058,-3.495820,-6.478965,-2.683394,-2.207127,0.558244,-2.388510,9.704404,7.281320,8.230360,-6.417628,3.794778,-8.834669,-8.447211,9.198090,8.290581,-2.611707,-3.456951,-4.367445,-0.628016,1.122204,-9.060098,-9.512329,-7.032593,4.836252,6.190188,-3.836998,-6.986651,-6.262875,2.439857,4.558451,7.216206,3.349134,-4.907766,-7.840529,-3.358081,-6.048770,2.609293,-4.218399,-8.586650,-4.290017,2.620442,-7.128557,8.448437,-7.244373,-8.024908,-6.527246,7.944441,-4.310388,8.216017,1.838497,-3.631779,-9.466992,-8.225286,4.558511,0.722047,-7.650918,6.388520,-5.086803,3.623993,3.164512,-5.897207,-9.481340,8.273660,-8.678621,2.525793,-0.606758,5.335726,-9.656058,5.374155,7.986589,8.681074,7.699738,-2.673993,5.846831,-9.551882,-5.102087,-1.457136,8.057125,4.069721,0.471410,3.963001,-8.067925,-6.506130,-5.798306,2.166706,-5.490871,-7.274250,3.791616,-8.124118,-1.957595,2.706231,8.934622,9.863767,-6.062220,-3.390758,-3.347540,8.486003,2.486955,7.390178,-9.050535,0.183798,6.398526,-7.260556,-9.830089,7.229551,-3.469753,5.288958,3.679302,-8.610000,1.339018,3.370491,-9.631704,5.983826,-4.937116,0.982080,0.041396,-8.904263,-1.025949,9.166296,9.293719,-4.133702,5.362375,5.448343,-3.352415,-9.683731,8.355975,0.807243,8.684786,0.375286,6.937359,-5.031492,1.915971,2.822030,4.916886,-8.891051,-3.611390,-1.830679,2.123066,-1.269091,1.917372,2.872648,-1.910560,-1.460982,9.938629,1.522466,3.048119,6.057068,-0.118125,-7.028963,7.281185,-6.984021,9.114684,-9.874191,1.191484,6.599925,3.903249,1.272754,9.878563,3.387834,0.785931,-1.030080,-3.110076,5.062207,-1.939534,6.753112,-9.505317,9.085002,-2.885305,-5.358645,-2.122367,2.941833,5.309740,3.969047,-2.418980,7.280708,-2.657025,-2.864719,-5.058253,2.651980,-3.191850,-5.797405,3.889556,-0.430630,4.946365,7.963905,-0.752829,-4.124764,9.384232,0.477298,-4.156115,1.021579,-0.359746,-6.039113,4.020777,4.363453,-8.568027,-0.618345,-3.442015,8.676934,-2.241019,0.679246,1.840231,-0.062103,-6.806121,0.845723,-2.572810,1.629790,-8.348016,6.493005,2.053494,0.806318,6.330828,9.034938,6.667051,4.163341,7.710670,-9.433411,-7.725956,2.425352,-8.351725,-2.830589,2.705347,2.822266,7.314831,1.241549,-4.308101,-1.610458,4.909979,4.271631,-6.704188,-4.519615,1.934929,7.367826,7.071764,-7.838403,6.915998,-0.334458,-2.429713,-4.221690,5.479041,7.975273,2.297348,3.033234,0.278932,7.868025,0.247779,-9.085343,-7.185097,6.088411,-1.875724,-5.480142,-5.038166,1.345350,-7.602306,-2.702911,4.032310,1.675357,7.623445,1.966701,2.875392,-7.799809,-3.563080,-8.835128,-6.589140,-5.408689,7.228822,-4.987376,-0.031630,9.152563,-0.473104,-8.843116,7.787190,-2.834458,-1.486335,4.453678,-4.626142,-2.875600,-8.438108,5.331167,-9.115358,-8.257862,-6.632066,1.018844,-4.795901,-2.892442,-7.238704,-1.360951,-1.755992,-7.903110,7.388796,4.678980,-4.160602,-9.039517,-7.364262,7.162627,-1.834857,-7.617962,2.713523,0.422658,-0.652548,-3.325435,-0.740931,-7.423909,7.779425,2.283004,0.955519,-9.860421,-7.660854,-1.601898,-0.887782,-8.368484,1.663020,-4.603157,-7.663396,-1.142695,5.895121,-2.521485,-2.229727,-8.972236,8.248571,-2.236660,-1.799258,-4.443010,5.761913,7.226311,9.920972,-1.663415,7.327659,6.749479,-0.583336,-9.034810,-8.500129,4.025471,-1.960595,-6.100271,9.405846,-8.025002,5.795550,6.682666,1.670821,-1.921246,-5.241706,-5.073555,1.896694,2.297839,5.354894,6.930885,-6.180166,-9.244470,1.057695,4.461412,5.354796,-9.898963,-4.252499,-7.581465,5.151272,-5.788046], dtype = "float32")#candidate|15839|(1350,)|const|float32
call_15838 = func_7200_call(relay.reshape(const_15839.astype('float32'), [10, 9, 15]))
call_15840 = func_7200_call(relay.reshape(const_15839.astype('float32'), [10, 9, 15]))
func_13104_call = mod.get_global_var('func_13104')
func_13105_call = mutated_mod.get_global_var('func_13105')
call_15854 = func_13104_call()
call_15855 = func_13104_call()
output = relay.Tuple([call_15831,call_15838,const_15839,call_15854,])
output2 = relay.Tuple([call_15832,call_15840,const_15839,call_15855,])
func_15863 = relay.Function([], output)
mod['func_15863'] = func_15863
mod = relay.transform.InferType()(mod)
output = func_15863()
func_15864 = relay.Function([], output)
mutated_mod['func_15864'] = func_15864
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9064_call = mod.get_global_var('func_9064')
func_9066_call = mutated_mod.get_global_var('func_9066')
call_15865 = func_9064_call()
call_15866 = func_9064_call()
func_11583_call = mod.get_global_var('func_11583')
func_11584_call = mutated_mod.get_global_var('func_11584')
call_15890 = relay.TupleGetItem(func_11583_call(), 1)
call_15891 = relay.TupleGetItem(func_11584_call(), 1)
func_13258_call = mod.get_global_var('func_13258')
func_13260_call = mutated_mod.get_global_var('func_13260')
call_15911 = func_13258_call()
call_15912 = func_13258_call()
func_13006_call = mod.get_global_var('func_13006')
func_13007_call = mutated_mod.get_global_var('func_13007')
call_15914 = func_13006_call()
call_15915 = func_13006_call()
func_15306_call = mod.get_global_var('func_15306')
func_15307_call = mutated_mod.get_global_var('func_15307')
call_15918 = func_15306_call()
call_15919 = func_15306_call()
func_12573_call = mod.get_global_var('func_12573')
func_12575_call = mutated_mod.get_global_var('func_12575')
call_15927 = relay.TupleGetItem(func_12573_call(), 0)
call_15928 = relay.TupleGetItem(func_12575_call(), 0)
output = relay.Tuple([call_15865,call_15890,call_15911,call_15914,call_15918,call_15927,])
output2 = relay.Tuple([call_15866,call_15891,call_15912,call_15915,call_15919,call_15928,])
func_15931 = relay.Function([], output)
mod['func_15931'] = func_15931
mod = relay.transform.InferType()(mod)
output = func_15931()
func_15932 = relay.Function([], output)
mutated_mod['func_15932'] = func_15932
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14548_call = mod.get_global_var('func_14548')
func_14549_call = mutated_mod.get_global_var('func_14549')
call_15949 = func_14548_call()
call_15950 = func_14548_call()
output = call_15949
output2 = call_15950
func_15953 = relay.Function([], output)
mod['func_15953'] = func_15953
mod = relay.transform.InferType()(mod)
output = func_15953()
func_15954 = relay.Function([], output)
mutated_mod['func_15954'] = func_15954
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9849_call = mod.get_global_var('func_9849')
func_9850_call = mutated_mod.get_global_var('func_9850')
call_15958 = func_9849_call()
call_15959 = func_9849_call()
func_8742_call = mod.get_global_var('func_8742')
func_8746_call = mutated_mod.get_global_var('func_8746')
var_15968 = relay.var("var_15968", dtype = "float32", shape = (1350,))#candidate|15968|(1350,)|var|float32
var_15969 = relay.var("var_15969", dtype = "uint64", shape = (392,))#candidate|15969|(392,)|var|uint64
call_15967 = relay.TupleGetItem(func_8742_call(relay.reshape(var_15968.astype('float32'), [1350,]), relay.reshape(var_15969.astype('uint64'), [392,]), ), 2)
call_15970 = relay.TupleGetItem(func_8746_call(relay.reshape(var_15968.astype('float32'), [1350,]), relay.reshape(var_15969.astype('uint64'), [392,]), ), 2)
func_5723_call = mod.get_global_var('func_5723')
func_5725_call = mutated_mod.get_global_var('func_5725')
var_16004 = relay.var("var_16004", dtype = "uint16", shape = (11,))#candidate|16004|(11,)|var|uint16
call_16003 = relay.TupleGetItem(func_5723_call(relay.reshape(var_16004.astype('uint16'), [1, 1, 11])), 1)
call_16005 = relay.TupleGetItem(func_5725_call(relay.reshape(var_16004.astype('uint16'), [1, 1, 11])), 1)
func_14539_call = mod.get_global_var('func_14539')
func_14540_call = mutated_mod.get_global_var('func_14540')
call_16021 = relay.TupleGetItem(func_14539_call(), 1)
call_16022 = relay.TupleGetItem(func_14540_call(), 1)
func_15457_call = mod.get_global_var('func_15457')
func_15458_call = mutated_mod.get_global_var('func_15458')
call_16045 = func_15457_call()
call_16046 = func_15457_call()
output = relay.Tuple([call_15958,call_15967,var_15968,var_15969,call_16003,var_16004,call_16021,call_16045,])
output2 = relay.Tuple([call_15959,call_15970,var_15968,var_15969,call_16005,var_16004,call_16022,call_16046,])
func_16055 = relay.Function([var_15968,var_15969,var_16004,], output)
mod['func_16055'] = func_16055
mod = relay.transform.InferType()(mod)
var_16056 = relay.var("var_16056", dtype = "float32", shape = (1350,))#candidate|16056|(1350,)|var|float32
var_16057 = relay.var("var_16057", dtype = "uint64", shape = (392,))#candidate|16057|(392,)|var|uint64
var_16058 = relay.var("var_16058", dtype = "uint16", shape = (11,))#candidate|16058|(11,)|var|uint16
output = func_16055(var_16056,var_16057,var_16058,)
func_16059 = relay.Function([var_16056,var_16057,var_16058,], output)
mutated_mod['func_16059'] = func_16059
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10354_call = mod.get_global_var('func_10354')
func_10356_call = mutated_mod.get_global_var('func_10356')
call_16111 = relay.TupleGetItem(func_10354_call(), 0)
call_16112 = relay.TupleGetItem(func_10356_call(), 0)
func_2096_call = mod.get_global_var('func_2096')
func_2099_call = mutated_mod.get_global_var('func_2099')
const_16139 = relay.const(-7, dtype = "uint64")#candidate|16139|()|const|uint64
var_16140 = relay.var("var_16140", dtype = "uint64", shape = (448,))#candidate|16140|(448,)|var|uint64
call_16138 = func_2096_call(relay.reshape(const_16139.astype('uint64'), []), relay.reshape(var_16140.astype('uint64'), [7, 4, 16]), )
call_16141 = func_2096_call(relay.reshape(const_16139.astype('uint64'), []), relay.reshape(var_16140.astype('uint64'), [7, 4, 16]), )
output = relay.Tuple([call_16111,call_16138,const_16139,var_16140,])
output2 = relay.Tuple([call_16112,call_16141,const_16139,var_16140,])
func_16148 = relay.Function([var_16140,], output)
mod['func_16148'] = func_16148
mod = relay.transform.InferType()(mod)
var_16149 = relay.var("var_16149", dtype = "uint64", shape = (448,))#candidate|16149|(448,)|var|uint64
output = func_16148(var_16149)
func_16150 = relay.Function([var_16149], output)
mutated_mod['func_16150'] = func_16150
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15457_call = mod.get_global_var('func_15457')
func_15458_call = mutated_mod.get_global_var('func_15458')
call_16187 = func_15457_call()
call_16188 = func_15457_call()
output = relay.Tuple([call_16187,])
output2 = relay.Tuple([call_16188,])
func_16189 = relay.Function([], output)
mod['func_16189'] = func_16189
mod = relay.transform.InferType()(mod)
mutated_mod['func_16189'] = func_16189
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16189_call = mutated_mod.get_global_var('func_16189')
call_16190 = func_16189_call()
output = call_16190
func_16191 = relay.Function([], output)
mutated_mod['func_16191'] = func_16191
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12448_call = mod.get_global_var('func_12448')
func_12449_call = mutated_mod.get_global_var('func_12449')
call_16237 = relay.TupleGetItem(func_12448_call(), 1)
call_16238 = relay.TupleGetItem(func_12449_call(), 1)
func_16189_call = mod.get_global_var('func_16189')
func_16191_call = mutated_mod.get_global_var('func_16191')
call_16256 = relay.TupleGetItem(func_16189_call(), 0)
call_16257 = relay.TupleGetItem(func_16191_call(), 0)
func_8501_call = mod.get_global_var('func_8501')
func_8503_call = mutated_mod.get_global_var('func_8503')
call_16259 = relay.TupleGetItem(func_8501_call(), 1)
call_16260 = relay.TupleGetItem(func_8503_call(), 1)
func_8548_call = mod.get_global_var('func_8548')
func_8550_call = mutated_mod.get_global_var('func_8550')
var_16269 = relay.var("var_16269", dtype = "float32", shape = (270,))#candidate|16269|(270,)|var|float32
call_16268 = relay.TupleGetItem(func_8548_call(relay.reshape(var_16269.astype('float32'), [270,])), 0)
call_16270 = relay.TupleGetItem(func_8550_call(relay.reshape(var_16269.astype('float32'), [270,])), 0)
output = relay.Tuple([call_16237,call_16256,call_16259,call_16268,var_16269,])
output2 = relay.Tuple([call_16238,call_16257,call_16260,call_16270,var_16269,])
func_16271 = relay.Function([var_16269,], output)
mod['func_16271'] = func_16271
mod = relay.transform.InferType()(mod)
mutated_mod['func_16271'] = func_16271
mutated_mod = relay.transform.InferType()(mutated_mod)
var_16272 = relay.var("var_16272", dtype = "float32", shape = (270,))#candidate|16272|(270,)|var|float32
func_16271_call = mutated_mod.get_global_var('func_16271')
call_16273 = func_16271_call(var_16272)
output = call_16273
func_16274 = relay.Function([var_16272], output)
mutated_mod['func_16274'] = func_16274
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14772_call = mod.get_global_var('func_14772')
func_14774_call = mutated_mod.get_global_var('func_14774')
call_16284 = relay.TupleGetItem(func_14772_call(), 0)
call_16285 = relay.TupleGetItem(func_14774_call(), 0)
func_13615_call = mod.get_global_var('func_13615')
func_13617_call = mutated_mod.get_global_var('func_13617')
call_16299 = relay.TupleGetItem(func_13615_call(), 0)
call_16300 = relay.TupleGetItem(func_13617_call(), 0)
output = relay.Tuple([call_16284,call_16299,])
output2 = relay.Tuple([call_16285,call_16300,])
func_16301 = relay.Function([], output)
mod['func_16301'] = func_16301
mod = relay.transform.InferType()(mod)
mutated_mod['func_16301'] = func_16301
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16301_call = mutated_mod.get_global_var('func_16301')
call_16302 = func_16301_call()
output = call_16302
func_16303 = relay.Function([], output)
mutated_mod['func_16303'] = func_16303
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9744_call = mod.get_global_var('func_9744')
func_9745_call = mutated_mod.get_global_var('func_9745')
call_16310 = relay.TupleGetItem(func_9744_call(), 2)
call_16311 = relay.TupleGetItem(func_9745_call(), 2)
func_14539_call = mod.get_global_var('func_14539')
func_14540_call = mutated_mod.get_global_var('func_14540')
call_16315 = relay.TupleGetItem(func_14539_call(), 0)
call_16316 = relay.TupleGetItem(func_14540_call(), 0)
output = relay.Tuple([call_16310,call_16315,])
output2 = relay.Tuple([call_16311,call_16316,])
func_16330 = relay.Function([], output)
mod['func_16330'] = func_16330
mod = relay.transform.InferType()(mod)
mutated_mod['func_16330'] = func_16330
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16330_call = mutated_mod.get_global_var('func_16330')
call_16331 = func_16330_call()
output = call_16331
func_16332 = relay.Function([], output)
mutated_mod['func_16332'] = func_16332
mutated_mod = relay.transform.InferType()(mutated_mod)
var_16393 = relay.var("var_16393", dtype = "int64", shape = ())#candidate|16393|()|var|int64
var_16394 = relay.var("var_16394", dtype = "int64", shape = (4, 12, 5))#candidate|16394|(4, 12, 5)|var|int64
bop_16395 = relay.less_equal(var_16393.astype('bool'), var_16394.astype('bool')) # shape=(4, 12, 5)
func_12448_call = mod.get_global_var('func_12448')
func_12449_call = mutated_mod.get_global_var('func_12449')
call_16410 = relay.TupleGetItem(func_12448_call(), 0)
call_16411 = relay.TupleGetItem(func_12449_call(), 0)
func_14035_call = mod.get_global_var('func_14035')
func_14038_call = mutated_mod.get_global_var('func_14038')
const_16440 = relay.const([-6.716434,2.806923,-9.691441,8.008189,-4.786569,2.976924,-9.711204,7.888244,2.210264,0.161442,-0.917549,-1.021206,0.551659,4.370426,9.665518,9.057354,9.045420,4.475770,-1.145328,3.699047,7.401446,-0.291764,3.771416,7.489931,8.575210,-5.446054,9.134091,1.483962,-1.239183,9.082521,4.966319,0.937885,4.334814,-8.351058,-0.932814,-0.819134,-7.694042,2.599084,6.165219,-2.675723,1.171758,-0.098447,9.835724,9.625115,9.242306,4.334591,8.372606,9.983856,6.039972,-1.129068,2.231393,-7.860390,-7.866505,5.830900,-5.625033,-9.958408,5.010186,-8.541930,-8.532471,-0.980816,-1.715286,-0.275252,-1.408180,-6.884798,5.684404,1.014871,-6.485366,5.931899,2.919092,-9.364495,-0.031329,-5.241493,9.046380,4.166631,-3.027730,3.824978,7.695371,0.114404,-3.217495,-9.478568,-9.259868,-4.573677,7.328194,7.273039,1.924838,-9.996431,9.865079,0.288475,-4.807880,-6.897503,-3.526482,6.140213,-7.061518,5.817681,3.143571,-1.917179,-8.170676,-8.418654,-5.783272,-9.181961,6.948857,-4.172315,2.699663,9.475172,-6.409113,1.816840,-0.468398,-6.349398,2.973403,6.526318,8.350901,-5.145127,-4.203020,7.838906,4.580065,-2.541427,6.714362,8.772002,-1.955812,-6.992016,-3.925665,5.620267,-2.150359,4.323448,-1.434785,-1.984366,6.854214,8.480906,0.072210,-9.857104,-6.422383,5.588731,9.112705,1.911497,-5.260341,-3.479345,1.238665,0.880571,-0.706901,6.687729,1.193473,-5.463775,-4.827081,-6.471878,0.826635,-4.792903,-1.158223,7.444079,-4.335683,7.739763,-9.965019,-1.690770,-4.081196,6.778646,-9.682181,7.000311,0.840791,-4.168720,9.481583,2.821516,-3.357437,-2.339848,-0.127928,-0.025783,-7.931832,7.639474,-1.142916,-6.534889,3.858543,0.510202,-8.910959,3.163250,-9.679891,-0.030736,-8.815084,-2.474837,3.246364,4.061323,-0.139334,7.314010,-3.082754,8.176140,-8.387180,1.499313,-1.296369,5.612222,6.793308,-4.598975,6.683607,3.711190,-2.337148,-2.121209,-4.826126,3.994948,1.663096,-1.606056,1.526366,-2.720016,3.885504,7.279471,-2.835920,3.552604,4.066071,-8.589386,-7.256118,7.787865,8.978564,-0.547816,7.328191,2.580797,-8.209815,-9.219908,4.489678,8.493126,-2.648464,-5.571076,-1.250664,-4.142066,5.923644,-9.413011,-9.227903,0.497539,7.157065,-4.649259,8.384640,0.327871,3.141810,-7.405818,8.428377,3.343863,-2.447505,-7.495888,3.804746,1.736582,4.288388,-5.814827,0.350998,-4.853102,-7.542276,5.655311,-3.169045,9.952204,2.664306,-8.155388,-2.462013,-3.632120,-7.721114,7.369386,-8.318216,-0.232403,-3.695922,4.874723,-6.780009,-6.399463,-0.129652,3.873781,-8.047188,-8.275993,-7.335800,-0.359017,9.289802,9.905056,-8.200906,3.368327,0.291168,-1.508869,0.004266,3.959382,8.508448,-9.782975], dtype = "float64")#candidate|16440|(270,)|const|float64
call_16439 = relay.TupleGetItem(func_14035_call(relay.reshape(const_16440.astype('float64'), [9, 5, 6])), 5)
call_16441 = relay.TupleGetItem(func_14038_call(relay.reshape(const_16440.astype('float64'), [9, 5, 6])), 5)
func_8011_call = mod.get_global_var('func_8011')
func_8014_call = mutated_mod.get_global_var('func_8014')
const_16477 = relay.const([-3,5,-8,3,3,7,-9,-4,6,5,-1,9,10,9,2,-3,1,-2,-7,8,-10,7,4,6,-3,6,-7,-5,8,3,10,-6,4,-7,-3,-2,-2,2,10,-7,-8,-6,-9,-4,-7,-8,2,7,2,-6,10,5,7,-7,-7,2,9,-10,9,7,2,-2,-9,-10,-2,5,-6,-4,-10,-10,5,-2,-9,3,10,-3,-5,-7,-3,-7,-5,9,-3,-4,5,-1,5,-5,8,4,7,-10,-2,9,4,-2,-6,-10,-5,-5,-8,1,10,10,5,5,1,6,-2,1,-1,-5,-6,-8,-9,1,9,-3,-1,6,6,10,7,-1,3,5,6,10,4,3,1,1,8,-7,-4,5,-6,-7,2,-4,-1,6,-8,9,4,-7,6,7,9,-4,-8,-5,7,9,-4,-4,-1,-4,9,-3,5,-10,-6,-8,-10,2,-3,-2,10,10,2,1,-4,-4,-10,6,7,-8,-2,9], dtype = "int8")#candidate|16477|(180,)|const|int8
call_16476 = relay.TupleGetItem(func_8011_call(relay.reshape(const_16477.astype('int8'), [180,])), 1)
call_16478 = relay.TupleGetItem(func_8014_call(relay.reshape(const_16477.astype('int8'), [180,])), 1)
func_551_call = mod.get_global_var('func_551')
func_554_call = mutated_mod.get_global_var('func_554')
call_16483 = relay.TupleGetItem(func_551_call(relay.reshape(var_16393.astype('uint32'), [])), 1)
call_16484 = relay.TupleGetItem(func_554_call(relay.reshape(var_16393.astype('uint32'), [])), 1)
uop_16488 = relay.tan(call_16439.astype('float64')) # shape=(9, 5, 6)
uop_16490 = relay.tan(call_16441.astype('float64')) # shape=(9, 5, 6)
bop_16493 = relay.divide(var_16393.astype('float32'), call_16483.astype('float32')) # shape=(16, 15, 5)
bop_16496 = relay.divide(var_16393.astype('float32'), call_16484.astype('float32')) # shape=(16, 15, 5)
func_11968_call = mod.get_global_var('func_11968')
func_11971_call = mutated_mod.get_global_var('func_11971')
var_16502 = relay.var("var_16502", dtype = "float64", shape = (2940,))#candidate|16502|(2940,)|var|float64
call_16501 = relay.TupleGetItem(func_11968_call(relay.reshape(var_16502.astype('float64'), [2940,])), 3)
call_16503 = relay.TupleGetItem(func_11971_call(relay.reshape(var_16502.astype('float64'), [2940,])), 3)
func_15457_call = mod.get_global_var('func_15457')
func_15458_call = mutated_mod.get_global_var('func_15458')
call_16508 = func_15457_call()
call_16509 = func_15457_call()
output = relay.Tuple([bop_16395,call_16410,const_16440,call_16476,const_16477,uop_16488,bop_16493,call_16501,var_16502,call_16508,])
output2 = relay.Tuple([bop_16395,call_16411,const_16440,call_16478,const_16477,uop_16490,bop_16496,call_16503,var_16502,call_16509,])
func_16517 = relay.Function([var_16393,var_16394,var_16502,], output)
mod['func_16517'] = func_16517
mod = relay.transform.InferType()(mod)
var_16518 = relay.var("var_16518", dtype = "int64", shape = ())#candidate|16518|()|var|int64
var_16519 = relay.var("var_16519", dtype = "int64", shape = (4, 12, 5))#candidate|16519|(4, 12, 5)|var|int64
var_16520 = relay.var("var_16520", dtype = "float64", shape = (2940,))#candidate|16520|(2940,)|var|float64
output = func_16517(var_16518,var_16519,var_16520,)
func_16521 = relay.Function([var_16518,var_16519,var_16520,], output)
mutated_mod['func_16521'] = func_16521
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11440_call = mod.get_global_var('func_11440')
func_11441_call = mutated_mod.get_global_var('func_11441')
call_16539 = relay.TupleGetItem(func_11440_call(), 0)
call_16540 = relay.TupleGetItem(func_11441_call(), 0)
func_10255_call = mod.get_global_var('func_10255')
func_10259_call = mutated_mod.get_global_var('func_10259')
const_16543 = relay.const([[-2.897441,-5.689046,4.312007],[-6.067718,7.061248,8.524948],[-5.433753,6.191827,-8.097773],[2.969782,9.674587,2.595675],[5.865573,5.722428,2.683733],[-5.569021,-9.978305,1.588453],[4.322926,-3.622910,-8.480948],[1.239960,-7.075993,9.161047],[-9.994035,3.534710,-2.513700],[3.477341,4.233243,6.153883]], dtype = "float64")#candidate|16543|(10, 3)|const|float64
var_16544 = relay.var("var_16544", dtype = "float32", shape = (2250,))#candidate|16544|(2250,)|var|float32
call_16542 = relay.TupleGetItem(func_10255_call(relay.reshape(const_16543.astype('float64'), [10, 3, 1]), relay.reshape(var_16544.astype('float32'), [225, 10]), relay.reshape(const_16543.astype('float64'), [10, 3, 1]), ), 9)
call_16545 = relay.TupleGetItem(func_10259_call(relay.reshape(const_16543.astype('float64'), [10, 3, 1]), relay.reshape(var_16544.astype('float32'), [225, 10]), relay.reshape(const_16543.astype('float64'), [10, 3, 1]), ), 9)
output = relay.Tuple([call_16539,call_16542,const_16543,var_16544,])
output2 = relay.Tuple([call_16540,call_16545,const_16543,var_16544,])
func_16546 = relay.Function([var_16544,], output)
mod['func_16546'] = func_16546
mod = relay.transform.InferType()(mod)
var_16547 = relay.var("var_16547", dtype = "float32", shape = (2250,))#candidate|16547|(2250,)|var|float32
output = func_16546(var_16547)
func_16548 = relay.Function([var_16547], output)
mutated_mod['func_16548'] = func_16548
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13828_call = mod.get_global_var('func_13828')
func_13829_call = mutated_mod.get_global_var('func_13829')
call_16591 = relay.TupleGetItem(func_13828_call(), 0)
call_16592 = relay.TupleGetItem(func_13829_call(), 0)
output = relay.Tuple([call_16591,])
output2 = relay.Tuple([call_16592,])
func_16598 = relay.Function([], output)
mod['func_16598'] = func_16598
mod = relay.transform.InferType()(mod)
output = func_16598()
func_16599 = relay.Function([], output)
mutated_mod['func_16599'] = func_16599
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12096_call = mod.get_global_var('func_12096')
func_12098_call = mutated_mod.get_global_var('func_12098')
call_16618 = relay.TupleGetItem(func_12096_call(), 0)
call_16619 = relay.TupleGetItem(func_12098_call(), 0)
func_16330_call = mod.get_global_var('func_16330')
func_16332_call = mutated_mod.get_global_var('func_16332')
call_16626 = relay.TupleGetItem(func_16330_call(), 0)
call_16627 = relay.TupleGetItem(func_16332_call(), 0)
func_9830_call = mod.get_global_var('func_9830')
func_9832_call = mutated_mod.get_global_var('func_9832')
call_16628 = func_9830_call()
call_16629 = func_9830_call()
output = relay.Tuple([call_16618,call_16626,call_16628,])
output2 = relay.Tuple([call_16619,call_16627,call_16629,])
func_16648 = relay.Function([], output)
mod['func_16648'] = func_16648
mod = relay.transform.InferType()(mod)
mutated_mod['func_16648'] = func_16648
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16648_call = mutated_mod.get_global_var('func_16648')
call_16649 = func_16648_call()
output = call_16649
func_16650 = relay.Function([], output)
mutated_mod['func_16650'] = func_16650
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13615_call = mod.get_global_var('func_13615')
func_13617_call = mutated_mod.get_global_var('func_13617')
call_16690 = relay.TupleGetItem(func_13615_call(), 0)
call_16691 = relay.TupleGetItem(func_13617_call(), 0)
func_12669_call = mod.get_global_var('func_12669')
func_12672_call = mutated_mod.get_global_var('func_12672')
const_16703 = relay.const(-8, dtype = "uint32")#candidate|16703|()|const|uint32
call_16702 = relay.TupleGetItem(func_12669_call(relay.reshape(const_16703.astype('uint32'), [])), 1)
call_16704 = relay.TupleGetItem(func_12672_call(relay.reshape(const_16703.astype('uint32'), [])), 1)
func_10030_call = mod.get_global_var('func_10030')
func_10031_call = mutated_mod.get_global_var('func_10031')
call_16711 = relay.TupleGetItem(func_10030_call(), 0)
call_16712 = relay.TupleGetItem(func_10031_call(), 0)
func_7874_call = mod.get_global_var('func_7874')
func_7876_call = mutated_mod.get_global_var('func_7876')
call_16713 = relay.TupleGetItem(func_7874_call(), 0)
call_16714 = relay.TupleGetItem(func_7876_call(), 0)
output = relay.Tuple([call_16690,call_16702,const_16703,call_16711,call_16713,])
output2 = relay.Tuple([call_16691,call_16704,const_16703,call_16712,call_16714,])
func_16723 = relay.Function([], output)
mod['func_16723'] = func_16723
mod = relay.transform.InferType()(mod)
output = func_16723()
func_16724 = relay.Function([], output)
mutated_mod['func_16724'] = func_16724
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8889_call = mod.get_global_var('func_8889')
func_8891_call = mutated_mod.get_global_var('func_8891')
call_16795 = relay.TupleGetItem(func_8889_call(), 0)
call_16796 = relay.TupleGetItem(func_8891_call(), 0)
output = call_16795
output2 = call_16796
func_16805 = relay.Function([], output)
mod['func_16805'] = func_16805
mod = relay.transform.InferType()(mod)
mutated_mod['func_16805'] = func_16805
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16805_call = mutated_mod.get_global_var('func_16805')
call_16806 = func_16805_call()
output = call_16806
func_16807 = relay.Function([], output)
mutated_mod['func_16807'] = func_16807
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9577_call = mod.get_global_var('func_9577')
func_9579_call = mutated_mod.get_global_var('func_9579')
call_16810 = relay.TupleGetItem(func_9577_call(), 0)
call_16811 = relay.TupleGetItem(func_9579_call(), 0)
func_7896_call = mod.get_global_var('func_7896')
func_7899_call = mutated_mod.get_global_var('func_7899')
const_16818 = relay.const([-5,-5,-3,-5,9,9,6,8,-2,4,2,-1,4,-7,-1,5,7,7,9,3,3,-5,5,6,-8,5,8,3,6,-7,6,-2,-4,-5,3,10,1,-7,-9,-6,-1,-7,7,-5,9,9,-5,-8,-2,-1,2,2,-9,10,10,-6,-6,-4,-4,7,10,-9,-7,-4,-2,5,-8,-5,-4,6,-2,-6,5,3,-6,5,4,-1,-2,1,1,6,-3,-8,-8,2,7,10,8,1,2,2,-9,9,9,5,-8,-1,6,9,-6,-5,8,4,7,-2,3,-4,-8,-4,-7,-10,2,5,3,-1,2,9,-9,8,10,4,-5,-6,3,3,-10,4,-4,-9,10,5,4,-4,9,-9,-3,2,3,-2,-9,8,-5,1,-1,8,8,5,-7,7,2,-7,-10,2,7,2,8,7,-10,5,-9,-3,6,1,9,-1,7,-6,7,10,4,1,-2,7,9,3,5,-4,-8,-6,6,-7,-7,10,5,-9,-4,2,1,7,-3,7,-10,3,-10,4,6,9,-8,-7,-2,3,9,1,-7,1,3,-2,-8,1,-3,6,-8,-5,5,-1,-10,-1,10,-10,-2,-10,8,-10,-6,6,7,1,6,-4,-7,8,-9,-8,-2,-9,9,3,-3,6,3,-1,4,10,7,3,-10,3,9,-2,10,-9,-3,6,5,-5,4,1,-7,7,4,10,-10,-5,4,4,-9,3,-5,-5,-1,-9,8,4,-10,1,-3,-7,-8,4,10,-8,-10,10,-9,8,-9,6,6,3,1,9,9,-6,10,10,9,10,8,7,-7,9,1,-3,7,2,-2,-3,6,-9,-1,-6,-7,-2,-8,-2,5,3,1,2,2,8,-4,8,-2,6,-5,6,9,-7,-6,-2,-2,-6,10,1,-3,-7,-9,6,-3,-7,-5,2,-10,2,8,4,8,-1,7,2,10,-8,6,4,-8,-8,5,-8,-9,-10,4,-4,-5,3,-6,1,-6,-7,-5,-2,4,-6,1,4,4,-6,-8,-3,5,5,2,-1,7,1,-1,-4,4,-3,-2,5,-9,-4,-1,-1,2,-2,-4,-3,1,2,6,6,-4,4,-4,-5,10,-1,6,-1,-8,5,6,-2,1,-8,1,-6,2,4,1,-10,-9,-3,-5,-5,7,-6,9,9,-3,6,2,-1,-2,-2,-2,-3,7,6,-2,6,3,2,1,2], dtype = "uint64")#candidate|16818|(448,)|const|uint64
call_16817 = relay.TupleGetItem(func_7896_call(relay.reshape(const_16818.astype('uint64'), [56, 8])), 1)
call_16819 = relay.TupleGetItem(func_7899_call(relay.reshape(const_16818.astype('uint64'), [56, 8])), 1)
output = relay.Tuple([call_16810,call_16817,const_16818,])
output2 = relay.Tuple([call_16811,call_16819,const_16818,])
func_16823 = relay.Function([], output)
mod['func_16823'] = func_16823
mod = relay.transform.InferType()(mod)
mutated_mod['func_16823'] = func_16823
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16823_call = mutated_mod.get_global_var('func_16823')
call_16824 = func_16823_call()
output = call_16824
func_16825 = relay.Function([], output)
mutated_mod['func_16825'] = func_16825
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16598_call = mod.get_global_var('func_16598')
func_16599_call = mutated_mod.get_global_var('func_16599')
call_16831 = relay.TupleGetItem(func_16598_call(), 0)
call_16832 = relay.TupleGetItem(func_16599_call(), 0)
func_8769_call = mod.get_global_var('func_8769')
func_8773_call = mutated_mod.get_global_var('func_8773')
var_16834 = relay.var("var_16834", dtype = "bool", shape = ())#candidate|16834|()|var|bool
var_16835 = relay.var("var_16835", dtype = "bool", shape = (108,))#candidate|16835|(108,)|var|bool
call_16833 = relay.TupleGetItem(func_8769_call(relay.reshape(var_16834.astype('bool'), []), relay.reshape(var_16835.astype('bool'), [3, 4, 9]), ), 0)
call_16836 = relay.TupleGetItem(func_8773_call(relay.reshape(var_16834.astype('bool'), []), relay.reshape(var_16835.astype('bool'), [3, 4, 9]), ), 0)
output = relay.Tuple([call_16831,call_16833,var_16834,var_16835,])
output2 = relay.Tuple([call_16832,call_16836,var_16834,var_16835,])
func_16844 = relay.Function([var_16834,var_16835,], output)
mod['func_16844'] = func_16844
mod = relay.transform.InferType()(mod)
var_16845 = relay.var("var_16845", dtype = "bool", shape = ())#candidate|16845|()|var|bool
var_16846 = relay.var("var_16846", dtype = "bool", shape = (108,))#candidate|16846|(108,)|var|bool
output = func_16844(var_16845,var_16846,)
func_16847 = relay.Function([var_16845,var_16846,], output)
mutated_mod['func_16847'] = func_16847
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9203_call = mod.get_global_var('func_9203')
func_9204_call = mutated_mod.get_global_var('func_9204')
call_16864 = relay.TupleGetItem(func_9203_call(), 0)
call_16865 = relay.TupleGetItem(func_9204_call(), 0)
func_12565_call = mod.get_global_var('func_12565')
func_12567_call = mutated_mod.get_global_var('func_12567')
call_16873 = relay.TupleGetItem(func_12565_call(), 2)
call_16874 = relay.TupleGetItem(func_12567_call(), 2)
func_14539_call = mod.get_global_var('func_14539')
func_14540_call = mutated_mod.get_global_var('func_14540')
call_16888 = relay.TupleGetItem(func_14539_call(), 1)
call_16889 = relay.TupleGetItem(func_14540_call(), 1)
uop_16891 = relay.sqrt(call_16888.astype('float64')) # shape=(2940,)
uop_16893 = relay.sqrt(call_16889.astype('float64')) # shape=(2940,)
output = relay.Tuple([call_16864,call_16873,uop_16891,])
output2 = relay.Tuple([call_16865,call_16874,uop_16893,])
func_16897 = relay.Function([], output)
mod['func_16897'] = func_16897
mod = relay.transform.InferType()(mod)
mutated_mod['func_16897'] = func_16897
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16897_call = mutated_mod.get_global_var('func_16897')
call_16898 = func_16897_call()
output = call_16898
func_16899 = relay.Function([], output)
mutated_mod['func_16899'] = func_16899
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8028_call = mod.get_global_var('func_8028')
func_8030_call = mutated_mod.get_global_var('func_8030')
call_16910 = func_8028_call()
call_16911 = func_8028_call()
uop_16925 = relay.sin(call_16910.astype('float32')) # shape=(8, 16, 8)
uop_16927 = relay.sin(call_16911.astype('float32')) # shape=(8, 16, 8)
output = relay.Tuple([uop_16925,])
output2 = relay.Tuple([uop_16927,])
func_16942 = relay.Function([], output)
mod['func_16942'] = func_16942
mod = relay.transform.InferType()(mod)
mutated_mod['func_16942'] = func_16942
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16942_call = mutated_mod.get_global_var('func_16942')
call_16943 = func_16942_call()
output = call_16943
func_16944 = relay.Function([], output)
mutated_mod['func_16944'] = func_16944
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7874_call = mod.get_global_var('func_7874')
func_7876_call = mutated_mod.get_global_var('func_7876')
call_16994 = relay.TupleGetItem(func_7874_call(), 0)
call_16995 = relay.TupleGetItem(func_7876_call(), 0)
output = relay.Tuple([call_16994,])
output2 = relay.Tuple([call_16995,])
func_16997 = relay.Function([], output)
mod['func_16997'] = func_16997
mod = relay.transform.InferType()(mod)
output = func_16997()
func_16998 = relay.Function([], output)
mutated_mod['func_16998'] = func_16998
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14184_call = mod.get_global_var('func_14184')
func_14186_call = mutated_mod.get_global_var('func_14186')
call_17032 = func_14184_call()
call_17033 = func_14184_call()
func_8606_call = mod.get_global_var('func_8606')
func_8608_call = mutated_mod.get_global_var('func_8608')
call_17039 = relay.TupleGetItem(func_8606_call(), 0)
call_17040 = relay.TupleGetItem(func_8608_call(), 0)
output = relay.Tuple([call_17032,call_17039,])
output2 = relay.Tuple([call_17033,call_17040,])
func_17082 = relay.Function([], output)
mod['func_17082'] = func_17082
mod = relay.transform.InferType()(mod)
mutated_mod['func_17082'] = func_17082
mutated_mod = relay.transform.InferType()(mutated_mod)
func_17082_call = mutated_mod.get_global_var('func_17082')
call_17083 = func_17082_call()
output = call_17083
func_17084 = relay.Function([], output)
mutated_mod['func_17084'] = func_17084
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9254_call = mod.get_global_var('func_9254')
func_9256_call = mutated_mod.get_global_var('func_9256')
call_17110 = func_9254_call()
call_17111 = func_9254_call()
output = relay.Tuple([call_17110,])
output2 = relay.Tuple([call_17111,])
func_17116 = relay.Function([], output)
mod['func_17116'] = func_17116
mod = relay.transform.InferType()(mod)
mutated_mod['func_17116'] = func_17116
mutated_mod = relay.transform.InferType()(mutated_mod)
func_17116_call = mutated_mod.get_global_var('func_17116')
call_17117 = func_17116_call()
output = call_17117
func_17118 = relay.Function([], output)
mutated_mod['func_17118'] = func_17118
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11564_call = mod.get_global_var('func_11564')
func_11566_call = mutated_mod.get_global_var('func_11566')
call_17131 = relay.TupleGetItem(func_11564_call(), 0)
call_17132 = relay.TupleGetItem(func_11566_call(), 0)
output = relay.Tuple([call_17131,])
output2 = relay.Tuple([call_17132,])
func_17165 = relay.Function([], output)
mod['func_17165'] = func_17165
mod = relay.transform.InferType()(mod)
output = func_17165()
func_17166 = relay.Function([], output)
mutated_mod['func_17166'] = func_17166
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15398_call = mod.get_global_var('func_15398')
func_15400_call = mutated_mod.get_global_var('func_15400')
call_17183 = func_15398_call()
call_17184 = func_15398_call()
func_16546_call = mod.get_global_var('func_16546')
func_16548_call = mutated_mod.get_global_var('func_16548')
var_17198 = relay.var("var_17198", dtype = "float32", shape = (15, 150))#candidate|17198|(15, 150)|var|float32
call_17197 = relay.TupleGetItem(func_16546_call(relay.reshape(var_17198.astype('float32'), [2250,])), 3)
call_17199 = relay.TupleGetItem(func_16548_call(relay.reshape(var_17198.astype('float32'), [2250,])), 3)
output = relay.Tuple([call_17183,call_17197,var_17198,])
output2 = relay.Tuple([call_17184,call_17199,var_17198,])
func_17208 = relay.Function([var_17198,], output)
mod['func_17208'] = func_17208
mod = relay.transform.InferType()(mod)
mutated_mod['func_17208'] = func_17208
mutated_mod = relay.transform.InferType()(mutated_mod)
var_17209 = relay.var("var_17209", dtype = "float32", shape = (15, 150))#candidate|17209|(15, 150)|var|float32
func_17208_call = mutated_mod.get_global_var('func_17208')
call_17210 = func_17208_call(var_17209)
output = call_17210
func_17211 = relay.Function([var_17209], output)
mutated_mod['func_17211'] = func_17211
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16189_call = mod.get_global_var('func_16189')
func_16191_call = mutated_mod.get_global_var('func_16191')
call_17238 = relay.TupleGetItem(func_16189_call(), 0)
call_17239 = relay.TupleGetItem(func_16191_call(), 0)
output = relay.Tuple([call_17238,])
output2 = relay.Tuple([call_17239,])
func_17251 = relay.Function([], output)
mod['func_17251'] = func_17251
mod = relay.transform.InferType()(mod)
mutated_mod['func_17251'] = func_17251
mutated_mod = relay.transform.InferType()(mutated_mod)
func_17251_call = mutated_mod.get_global_var('func_17251')
call_17252 = func_17251_call()
output = call_17252
func_17253 = relay.Function([], output)
mutated_mod['func_17253'] = func_17253
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15306_call = mod.get_global_var('func_15306')
func_15307_call = mutated_mod.get_global_var('func_15307')
call_17295 = func_15306_call()
call_17296 = func_15306_call()
output = call_17295
output2 = call_17296
func_17307 = relay.Function([], output)
mod['func_17307'] = func_17307
mod = relay.transform.InferType()(mod)
mutated_mod['func_17307'] = func_17307
mutated_mod = relay.transform.InferType()(mutated_mod)
func_17307_call = mutated_mod.get_global_var('func_17307')
call_17308 = func_17307_call()
output = call_17308
func_17309 = relay.Function([], output)
mutated_mod['func_17309'] = func_17309
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16598_call = mod.get_global_var('func_16598')
func_16599_call = mutated_mod.get_global_var('func_16599')
call_17322 = relay.TupleGetItem(func_16598_call(), 0)
call_17323 = relay.TupleGetItem(func_16599_call(), 0)
output = call_17322
output2 = call_17323
func_17333 = relay.Function([], output)
mod['func_17333'] = func_17333
mod = relay.transform.InferType()(mod)
mutated_mod['func_17333'] = func_17333
mutated_mod = relay.transform.InferType()(mutated_mod)
func_17333_call = mutated_mod.get_global_var('func_17333')
call_17334 = func_17333_call()
output = call_17334
func_17335 = relay.Function([], output)
mutated_mod['func_17335'] = func_17335
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13553_call = mod.get_global_var('func_13553')
func_13555_call = mutated_mod.get_global_var('func_13555')
call_17374 = relay.TupleGetItem(func_13553_call(), 0)
call_17375 = relay.TupleGetItem(func_13555_call(), 0)
func_10030_call = mod.get_global_var('func_10030')
func_10031_call = mutated_mod.get_global_var('func_10031')
call_17389 = relay.TupleGetItem(func_10030_call(), 0)
call_17390 = relay.TupleGetItem(func_10031_call(), 0)
output = relay.Tuple([call_17374,call_17389,])
output2 = relay.Tuple([call_17375,call_17390,])
func_17393 = relay.Function([], output)
mod['func_17393'] = func_17393
mod = relay.transform.InferType()(mod)
mutated_mod['func_17393'] = func_17393
mutated_mod = relay.transform.InferType()(mutated_mod)
func_17393_call = mutated_mod.get_global_var('func_17393')
call_17394 = func_17393_call()
output = call_17394
func_17395 = relay.Function([], output)
mutated_mod['func_17395'] = func_17395
mutated_mod = relay.transform.InferType()(mutated_mod)
var_17448 = relay.var("var_17448", dtype = "float64", shape = (14, 4, 5))#candidate|17448|(14, 4, 5)|var|float64
var_17449 = relay.var("var_17449", dtype = "float64", shape = (14, 4, 5))#candidate|17449|(14, 4, 5)|var|float64
bop_17450 = relay.divide(var_17448.astype('float64'), relay.reshape(var_17449.astype('float64'), relay.shape_of(var_17448))) # shape=(14, 4, 5)
func_8742_call = mod.get_global_var('func_8742')
func_8746_call = mutated_mod.get_global_var('func_8746')
var_17456 = relay.var("var_17456", dtype = "float32", shape = (1350, 1))#candidate|17456|(1350, 1)|var|float32
const_17457 = relay.const([-6,-5,-2,3,-10,4,4,-8,-5,8,9,5,2,7,6,7,3,-2,-4,-8,1,6,-4,-4,5,2,-4,9,8,10,-6,-5,-7,-5,-1,-5,6,10,8,-9,-6,6,-10,7,-3,-2,-2,-7,6,-1,-4,1,-8,8,-7,-10,9,-4,-2,-5,-6,3,7,-6,-1,-10,-3,-5,-2,-8,1,3,-5,7,5,-2,2,-8,5,-2,3,1,2,9,-8,-4,-5,7,1,-7,7,-9,7,7,-5,8,8,-4,-3,6,-9,8,-5,-6,-10,-5,6,-5,-3,-5,-9,6,10,10,4,5,-8,1,-10,2,-2,7,2,1,4,6,6,-1,-6,2,-10,-3,-1,-2,3,-3,2,3,3,1,-9,-1,1,-3,-6,6,1,-2,6,-5,9,-4,-9,-5,2,-10,-5,5,-2,2,1,-3,7,-5,1,-10,8,-9,10,9,-2,-2,-9,-2,5,-10,9,-1,9,9,-5,-8,2,2,-3,-3,-2,-1,-4,-6,4,5,7,2,-1,-4,8,1,-1,-2,-8,9,-2,4,1,4,4,-1,-5,-7,-1,-3,2,1,-1,-8,-1,-10,7,-8,-2,6,-2,-8,-9,3,5,3,2,-3,-8,-1,-9,-2,6,5,-4,5,9,3,8,1,2,3,7,-6,-8,-4,9,-3,7,3,10,-7,1,10,8,5,5,-3,-5,-9,-7,1,-10,10,-4,-9,3,7,8,5,9,5,9,6,8,-8,10,-2,6,6,-7,6,2,5,-3,5,2,5,9,-5,9,-1,-5,-7,-7,2,-1,5,4,-3,-2,-6,-8,8,-4,-4,8,-2,-10,-5,6,-10,-6,10,5,-4,4,5,-2,-1,6,9,-1,-9,4,8,9,-6,-3,2,10,6,5,5,-4,4,-2,-6,-6,5,-8,9,-1,2,-1,-1,-10,6,10,-5,-10,6,3,-6,-6,-10,-4,-2,4,-8,-8,-10,5,8,-9,-10,3,2,8,7,-9,-8,4,9,-2,4,3,10,2,-3,-2,-2,9,-1,2,-8,-4,5,6,7], dtype = "uint64")#candidate|17457|(392,)|const|uint64
call_17455 = relay.TupleGetItem(func_8742_call(relay.reshape(var_17456.astype('float32'), [1350,]), relay.reshape(const_17457.astype('uint64'), [392,]), ), 0)
call_17458 = relay.TupleGetItem(func_8746_call(relay.reshape(var_17456.astype('float32'), [1350,]), relay.reshape(const_17457.astype('uint64'), [392,]), ), 0)
func_12096_call = mod.get_global_var('func_12096')
func_12098_call = mutated_mod.get_global_var('func_12098')
call_17463 = relay.TupleGetItem(func_12096_call(), 4)
call_17464 = relay.TupleGetItem(func_12098_call(), 4)
uop_17467 = relay.acos(bop_17450.astype('float64')) # shape=(14, 4, 5)
func_16844_call = mod.get_global_var('func_16844')
func_16847_call = mutated_mod.get_global_var('func_16847')
const_17503 = relay.const([[False,True,True,False,True,False,True,True,False,False,True,False,True,False,True,False,False,True],[True,True,False,False,True,False,True,True,False,True,True,True,False,False,False,True,False,True],[True,True,False,True,True,True,True,True,False,True,True,False,False,False,True,True,False,True],[True,True,False,True,False,False,False,False,False,False,True,False,True,False,True,True,True,False],[True,True,True,True,False,False,True,False,False,False,True,False,True,False,True,False,True,False],[False,True,False,False,True,False,False,False,False,True,False,False,True,True,True,True,False,True]], dtype = "bool")#candidate|17503|(6, 18)|const|bool
call_17502 = relay.TupleGetItem(func_16844_call(relay.reshape(call_17463.astype('bool'), []), relay.reshape(const_17503.astype('bool'), [108,]), ), 0)
call_17504 = relay.TupleGetItem(func_16847_call(relay.reshape(call_17463.astype('bool'), []), relay.reshape(const_17503.astype('bool'), [108,]), ), 0)
func_16598_call = mod.get_global_var('func_16598')
func_16599_call = mutated_mod.get_global_var('func_16599')
call_17510 = relay.TupleGetItem(func_16598_call(), 0)
call_17511 = relay.TupleGetItem(func_16599_call(), 0)
func_15824_call = mod.get_global_var('func_15824')
func_15825_call = mutated_mod.get_global_var('func_15825')
call_17512 = relay.TupleGetItem(func_15824_call(), 0)
call_17513 = relay.TupleGetItem(func_15825_call(), 0)
func_16648_call = mod.get_global_var('func_16648')
func_16650_call = mutated_mod.get_global_var('func_16650')
call_17517 = relay.TupleGetItem(func_16648_call(), 0)
call_17518 = relay.TupleGetItem(func_16650_call(), 0)
func_10940_call = mod.get_global_var('func_10940')
func_10942_call = mutated_mod.get_global_var('func_10942')
call_17523 = relay.TupleGetItem(func_10940_call(relay.reshape(var_17456.astype('float32'), [9, 150])), 5)
call_17524 = relay.TupleGetItem(func_10942_call(relay.reshape(var_17456.astype('float32'), [9, 150])), 5)
func_3958_call = mod.get_global_var('func_3958')
func_3960_call = mutated_mod.get_global_var('func_3960')
call_17525 = relay.TupleGetItem(func_3958_call(relay.reshape(call_17463.astype('int32'), [])), 1)
call_17526 = relay.TupleGetItem(func_3960_call(relay.reshape(call_17463.astype('int32'), [])), 1)
func_12787_call = mod.get_global_var('func_12787')
func_12789_call = mutated_mod.get_global_var('func_12789')
const_17536 = relay.const([[-1.745991,2.876175,-0.045613,-3.775704,8.671245,9.466323,-8.115549,-3.239728,-5.327443,-4.268533,6.565965,-5.251332,-4.219844,-9.676621,-9.110620,-9.683693,-0.645774,-2.529438,-7.299618,7.549556,-0.443891,7.148492,-6.315218,9.355186,2.825089,6.622032,6.115327,-6.227340,4.196375,6.178991,-8.036958,8.626407],[2.347538,-2.945670,-6.594176,-1.531536,-3.077006,0.253555,9.908782,1.733433,-9.477599,5.594247,-1.659087,-6.996059,-1.941204,2.849384,8.217732,-1.210118,6.067757,2.225310,-7.858265,-3.533969,7.185889,2.156970,-1.298887,0.013286,8.528814,8.491566,-9.141276,-7.079101,7.378738,5.188323,-9.593603,0.535555],[-8.280072,9.634799,-5.934780,7.727435,4.739584,-0.320260,1.401076,3.605156,2.826538,-0.814582,-6.837933,-5.020657,0.579431,-4.244918,5.693366,2.651153,-3.731499,-4.946308,-9.605556,-1.942326,9.915721,2.616803,-5.118339,5.918538,9.942774,1.976078,-1.634067,4.331245,-2.238862,9.700910,-1.488205,6.361631],[4.902955,2.159098,-9.960731,-2.571959,5.145465,-0.720741,-2.491133,4.093398,-3.906749,1.779155,-3.892319,-2.401696,-6.556329,6.546320,-0.581194,-0.536575,-2.559729,9.304106,1.337621,-3.677678,3.213054,3.180612,0.764017,-1.408106,6.056382,-1.263243,-1.544769,-2.149094,6.332798,8.632838,0.457614,2.049688],[-1.594178,-7.686319,-5.103468,-9.469969,0.279532,4.564733,-7.999405,-2.796106,6.062572,6.863373,0.044533,6.400675,1.243273,-6.198141,-8.692309,0.019370,-8.687871,-9.421036,-9.225650,4.223230,-0.766882,-9.783550,-4.905127,5.886584,-8.703166,2.592410,-4.136273,-8.396476,-3.721697,-9.864921,-5.596485,1.030763],[7.929155,-9.146793,-3.475459,-9.798577,-6.252650,0.408165,3.123149,7.639785,1.849908,-9.884135,9.398246,-6.503135,2.771099,-5.524212,-1.359787,7.933601,8.160154,1.857192,6.497862,6.664735,5.676188,-0.551049,9.933626,-6.416348,-6.338637,-8.724133,1.974789,3.564902,-2.818952,-4.628931,1.280776,-6.994477],[4.708865,-4.782006,6.714941,7.662769,-8.857862,-8.559508,2.765075,9.218503,6.492853,6.943571,-2.021417,7.177259,-3.160852,9.606011,8.630564,-6.425947,8.646201,7.568977,-3.804823,7.964869,-4.259836,-0.093870,-4.164628,-6.598253,-9.970408,-8.767560,-4.116008,5.518208,-6.346486,4.739479,-5.383934,-3.015047],[-4.734252,7.048075,-5.763354,-1.501569,-3.765299,-9.627210,-2.380483,-9.410974,-0.654609,8.537826,-3.439325,5.788788,1.173995,9.717923,3.150836,2.496774,3.360550,-7.284457,-1.386983,0.461885,-6.592727,5.935525,-1.138781,0.530001,2.143903,1.576479,9.174224,-8.338144,0.225857,-1.292432,8.777633,2.126825],[-9.797736,6.036229,-5.485975,5.708864,-7.030277,9.586821,-1.544815,-6.952482,9.340988,-7.955554,-2.894263,8.362482,-2.316451,-0.898742,5.673325,-2.309342,-6.665817,-6.089892,-8.436023,6.359106,3.029655,3.536662,2.292359,0.968627,-6.180140,0.201050,-4.044735,-9.537948,-8.237736,-7.554462,-9.583857,-5.432085],[-0.234765,7.798782,-0.706793,-6.470472,4.330417,-2.985281,6.286373,7.380672,7.395994,-8.687295,2.689504,-3.080408,-2.949448,-4.301525,4.651818,8.409837,9.535482,0.244304,4.310010,9.889741,8.726168,9.173870,9.073219,-1.254006,8.564581,-8.829253,-6.672681,-9.663670,-4.366228,3.584023,3.631104,0.289871],[-5.303380,3.144058,-9.670011,-1.946254,-4.273453,-2.892706,2.128922,-3.441668,-9.056632,0.676465,9.519569,1.055449,-7.269826,9.318940,7.656551,8.777405,9.379693,8.920443,3.057168,-2.371347,0.640427,-1.479964,9.460153,8.114025,5.494597,-6.571612,-7.534240,-3.599543,2.412376,9.081094,6.244436,-4.665758],[9.829894,-0.779761,5.377379,-8.756923,-4.676470,1.520685,7.902877,0.135181,-7.286758,2.902290,9.724283,4.219138,2.990435,7.576180,7.276329,-4.534479,1.750802,-4.418187,1.579064,7.197438,4.034195,6.079808,4.551204,4.787741,8.697864,-3.824109,1.640008,3.882104,-7.276905,0.831428,-9.254893,-9.980725],[-5.400919,-8.175529,5.741302,4.291096,4.766318,5.483619,0.573020,-2.136398,1.411229,6.370709,-8.232656,-6.395354,8.200125,6.972283,1.498533,9.852027,-9.653525,9.166862,9.554679,-4.098892,3.937677,6.388529,-5.184589,4.998152,2.410089,-1.183127,7.483428,-1.501541,-9.033992,-4.609242,-2.180988,-7.029558],[-6.720946,-7.689679,-0.272861,-7.085519,4.303925,6.306511,8.215551,9.897093,1.353500,-1.789338,-5.678258,-2.815897,-3.634187,-9.846500,-8.486604,6.664540,-5.484380,5.885435,-8.129194,4.085133,5.334606,-3.730381,6.115639,0.883650,2.119930,-8.962565,6.099148,0.630342,3.493401,-1.722090,-3.950579,-8.401385],[5.968702,8.114681,3.918538,4.567295,3.837210,5.080049,-5.264752,-5.118291,3.830504,8.783721,5.841725,-6.648691,4.531674,-1.611433,0.302525,-8.924260,-6.608443,-9.193928,-9.787808,0.310495,8.373745,1.245522,2.333034,-0.986592,-9.571338,8.800132,-9.014657,-8.164088,-5.154903,0.067370,-3.615710,2.374671],[0.153058,-0.420098,7.984717,-0.924919,7.469553,-8.414813,8.308744,1.963439,8.161758,7.555746,-1.444703,5.538110,-6.696553,-4.140823,-3.979424,-7.263937,-0.789862,-5.288151,-6.961181,-0.045492,-5.355219,-2.760337,3.485747,1.998662,6.863727,-5.329482,-9.246870,-9.960423,-7.565135,3.487592,-2.077422,5.470641]], dtype = "float64")#candidate|17536|(16, 32)|const|float64
call_17535 = func_12787_call(relay.reshape(const_17536.astype('float64'), [4, 16, 8]))
call_17537 = func_12787_call(relay.reshape(const_17536.astype('float64'), [4, 16, 8]))
func_10651_call = mod.get_global_var('func_10651')
func_10654_call = mutated_mod.get_global_var('func_10654')
const_17549 = relay.const([[False,True,False,False,False,True,False,True,False,True,False,True,False,False,False,False,True,True,False,True,True,False,False,True,False,False,False,True,False,True,False,True,False,True,True,True,False,True,False,False,False,True,True,False,True,True,True,True,False,True,False,True,True,False,False,False,False,True,True,True,False,True,False,True,False,True,False,False,True,False,False,True,True,True,False,True,False,True,False,False,False,False,False,False]], dtype = "bool")#candidate|17549|(1, 84)|const|bool
call_17548 = relay.TupleGetItem(func_10651_call(relay.reshape(const_17549.astype('bool'), [84,])), 8)
call_17550 = relay.TupleGetItem(func_10654_call(relay.reshape(const_17549.astype('bool'), [84,])), 8)
func_15798_call = mod.get_global_var('func_15798')
func_15799_call = mutated_mod.get_global_var('func_15799')
call_17567 = relay.TupleGetItem(func_15798_call(), 0)
call_17568 = relay.TupleGetItem(func_15799_call(), 0)
output = relay.Tuple([call_17455,var_17456,const_17457,call_17463,uop_17467,call_17502,const_17503,call_17510,call_17512,call_17517,call_17523,call_17525,call_17535,const_17536,call_17548,const_17549,call_17567,])
output2 = relay.Tuple([call_17458,var_17456,const_17457,call_17464,uop_17467,call_17504,const_17503,call_17511,call_17513,call_17518,call_17524,call_17526,call_17537,const_17536,call_17550,const_17549,call_17568,])
func_17576 = relay.Function([var_17448,var_17449,var_17456,], output)
mod['func_17576'] = func_17576
mod = relay.transform.InferType()(mod)
mutated_mod['func_17576'] = func_17576
mutated_mod = relay.transform.InferType()(mutated_mod)
func_17576_call = mutated_mod.get_global_var('func_17576')
var_17578 = relay.var("var_17578", dtype = "float64", shape = (14, 4, 5))#candidate|17578|(14, 4, 5)|var|float64
var_17579 = relay.var("var_17579", dtype = "float64", shape = (14, 4, 5))#candidate|17579|(14, 4, 5)|var|float64
var_17580 = relay.var("var_17580", dtype = "float32", shape = (1350, 1))#candidate|17580|(1350, 1)|var|float32
call_17577 = func_17576_call(var_17578,var_17579,var_17580,)
output = call_17577
func_17581 = relay.Function([var_17578,var_17579,var_17580,], output)
mutated_mod['func_17581'] = func_17581
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12565_call = mod.get_global_var('func_12565')
func_12567_call = mutated_mod.get_global_var('func_12567')
call_17602 = relay.TupleGetItem(func_12565_call(), 2)
call_17603 = relay.TupleGetItem(func_12567_call(), 2)
output = call_17602
output2 = call_17603
func_17610 = relay.Function([], output)
mod['func_17610'] = func_17610
mod = relay.transform.InferType()(mod)
mutated_mod['func_17610'] = func_17610
mutated_mod = relay.transform.InferType()(mutated_mod)
func_17610_call = mutated_mod.get_global_var('func_17610')
call_17611 = func_17610_call()
output = call_17611
func_17612 = relay.Function([], output)
mutated_mod['func_17612'] = func_17612
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9849_call = mod.get_global_var('func_9849')
func_9850_call = mutated_mod.get_global_var('func_9850')
call_17686 = func_9849_call()
call_17687 = func_9849_call()
func_7951_call = mod.get_global_var('func_7951')
func_7955_call = mutated_mod.get_global_var('func_7955')
const_17689 = relay.const([True,False,False,False,False,False,False,False,True,True,False,True,True,True,False,True,False,False,False,True,False,True,False,False,True,True,True,False,False,False,False,True,False,False,True,True,False,True,True,True,False,True,True,True,False,True,False,True,True,True,False,False,False,False,False,True,True,True,False,False,True,False,True,False,False,True,True,False,False,False,False,True,False,True,False,False,False,True,True,True,False,True,True,False,True,True,False,True,True,False,True,False,False,False,False,False,True,True,False,False,False,False,True,False,True,True,False,True,False,False,True,False,True,False,True,True,False,True,False,True,True,True,True,True,True,False,True,True,True,True,True,True,False,False,True,True,True,False,True,False,False,False,False,True,False,True,False,False,False,False,True,True,True,True,False,True,True,True,False,False,True,True,False,True,True,True,False,False,True,True,False,True,True,True,True,False,False,True,False,True,False,False,False,True,True,True,False,False,False,False,False,True,True,False,False,False,False,True,True,True,False,True,True,False,False,False,False,True,True,False,False,True,False,False,True,True,True,True,True,False,False,False,True,True,False,False,False,False,True,True,False,True,False,True,True,True,True,True,False,False,False,False,False,False,False,True,False,False,False,True,False,False,True,True,False,False,True,False,False,False,True,False,False,True,True,True,False,False,True,False,True,True,False,True,True,True,False,True,True,False,True,True,True,False,False,True,False,False,True,True,False,False,True,False,True,True,False,False,True,True,False,False,False,True,True,True,False,True,True,True,False,False,False,True,False,False,False,True,False,True,False,True,True,True,True,False,False,True,False,False,False,True,False,False,False,False,False,False,True,True,True,True,True,True,False,True,True,False,False,False], dtype = "bool")#candidate|17689|(350,)|const|bool
call_17688 = func_7951_call(relay.reshape(const_17689.astype('bool'), [14, 5, 5]), relay.reshape(const_17689.astype('bool'), [14, 5, 5]), )
call_17690 = func_7951_call(relay.reshape(const_17689.astype('bool'), [14, 5, 5]), relay.reshape(const_17689.astype('bool'), [14, 5, 5]), )
output = relay.Tuple([call_17686,call_17688,const_17689,])
output2 = relay.Tuple([call_17687,call_17690,const_17689,])
func_17696 = relay.Function([], output)
mod['func_17696'] = func_17696
mod = relay.transform.InferType()(mod)
output = func_17696()
func_17697 = relay.Function([], output)
mutated_mod['func_17697'] = func_17697
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9514_call = mod.get_global_var('func_9514')
func_9516_call = mutated_mod.get_global_var('func_9516')
call_17703 = relay.TupleGetItem(func_9514_call(), 1)
call_17704 = relay.TupleGetItem(func_9516_call(), 1)
var_17709 = relay.var("var_17709", dtype = "float64", shape = (14, 15, 14))#candidate|17709|(14, 15, 14)|var|float64
bop_17710 = relay.floor_divide(call_17703.astype('float32'), relay.reshape(var_17709.astype('float32'), relay.shape_of(call_17703))) # shape=(14, 15, 14)
bop_17713 = relay.floor_divide(call_17704.astype('float32'), relay.reshape(var_17709.astype('float32'), relay.shape_of(call_17704))) # shape=(14, 15, 14)
output = relay.Tuple([bop_17710,])
output2 = relay.Tuple([bop_17713,])
func_17718 = relay.Function([var_17709,], output)
mod['func_17718'] = func_17718
mod = relay.transform.InferType()(mod)
mutated_mod['func_17718'] = func_17718
mutated_mod = relay.transform.InferType()(mutated_mod)
var_17719 = relay.var("var_17719", dtype = "float64", shape = (14, 15, 14))#candidate|17719|(14, 15, 14)|var|float64
func_17718_call = mutated_mod.get_global_var('func_17718')
call_17720 = func_17718_call(var_17719)
output = call_17720
func_17721 = relay.Function([var_17719], output)
mutated_mod['func_17721'] = func_17721
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16942_call = mod.get_global_var('func_16942')
func_16944_call = mutated_mod.get_global_var('func_16944')
call_17741 = relay.TupleGetItem(func_16942_call(), 0)
call_17742 = relay.TupleGetItem(func_16944_call(), 0)
output = relay.Tuple([call_17741,])
output2 = relay.Tuple([call_17742,])
func_17753 = relay.Function([], output)
mod['func_17753'] = func_17753
mod = relay.transform.InferType()(mod)
output = func_17753()
func_17754 = relay.Function([], output)
mutated_mod['func_17754'] = func_17754
mutated_mod = relay.transform.InferType()(mutated_mod)
func_17082_call = mod.get_global_var('func_17082')
func_17084_call = mutated_mod.get_global_var('func_17084')
call_17777 = relay.TupleGetItem(func_17082_call(), 1)
call_17778 = relay.TupleGetItem(func_17084_call(), 1)
func_8028_call = mod.get_global_var('func_8028')
func_8030_call = mutated_mod.get_global_var('func_8030')
call_17783 = func_8028_call()
call_17784 = func_8028_call()
output = relay.Tuple([call_17777,call_17783,])
output2 = relay.Tuple([call_17778,call_17784,])
func_17802 = relay.Function([], output)
mod['func_17802'] = func_17802
mod = relay.transform.InferType()(mod)
mutated_mod['func_17802'] = func_17802
mutated_mod = relay.transform.InferType()(mutated_mod)
func_17802_call = mutated_mod.get_global_var('func_17802')
call_17803 = func_17802_call()
output = call_17803
func_17804 = relay.Function([], output)
mutated_mod['func_17804'] = func_17804
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16189_call = mod.get_global_var('func_16189')
func_16191_call = mutated_mod.get_global_var('func_16191')
call_17825 = relay.TupleGetItem(func_16189_call(), 0)
call_17826 = relay.TupleGetItem(func_16191_call(), 0)
output = call_17825
output2 = call_17826
func_17835 = relay.Function([], output)
mod['func_17835'] = func_17835
mod = relay.transform.InferType()(mod)
output = func_17835()
func_17836 = relay.Function([], output)
mutated_mod['func_17836'] = func_17836
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16823_call = mod.get_global_var('func_16823')
func_16825_call = mutated_mod.get_global_var('func_16825')
call_17904 = relay.TupleGetItem(func_16823_call(), 2)
call_17905 = relay.TupleGetItem(func_16825_call(), 2)
output = relay.Tuple([call_17904,])
output2 = relay.Tuple([call_17905,])
func_17917 = relay.Function([], output)
mod['func_17917'] = func_17917
mod = relay.transform.InferType()(mod)
mutated_mod['func_17917'] = func_17917
mutated_mod = relay.transform.InferType()(mutated_mod)
func_17917_call = mutated_mod.get_global_var('func_17917')
call_17918 = func_17917_call()
output = call_17918
func_17919 = relay.Function([], output)
mutated_mod['func_17919'] = func_17919
mutated_mod = relay.transform.InferType()(mutated_mod)
var_17931 = relay.var("var_17931", dtype = "float32", shape = (4, 13, 12))#candidate|17931|(4, 13, 12)|var|float32
var_17932 = relay.var("var_17932", dtype = "float32", shape = (4, 13, 12))#candidate|17932|(4, 13, 12)|var|float32
bop_17933 = relay.mod(var_17931.astype('float32'), relay.reshape(var_17932.astype('float32'), relay.shape_of(var_17931))) # shape=(4, 13, 12)
func_12096_call = mod.get_global_var('func_12096')
func_12098_call = mutated_mod.get_global_var('func_12098')
call_17946 = relay.TupleGetItem(func_12096_call(), 0)
call_17947 = relay.TupleGetItem(func_12098_call(), 0)
output = relay.Tuple([bop_17933,call_17946,])
output2 = relay.Tuple([bop_17933,call_17947,])
func_17978 = relay.Function([var_17931,var_17932,], output)
mod['func_17978'] = func_17978
mod = relay.transform.InferType()(mod)
var_17979 = relay.var("var_17979", dtype = "float32", shape = (4, 13, 12))#candidate|17979|(4, 13, 12)|var|float32
var_17980 = relay.var("var_17980", dtype = "float32", shape = (4, 13, 12))#candidate|17980|(4, 13, 12)|var|float32
output = func_17978(var_17979,var_17980,)
func_17981 = relay.Function([var_17979,var_17980,], output)
mutated_mod['func_17981'] = func_17981
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11546_call = mod.get_global_var('func_11546')
func_11548_call = mutated_mod.get_global_var('func_11548')
call_17983 = func_11546_call()
call_17984 = func_11546_call()
func_4427_call = mod.get_global_var('func_4427')
func_4431_call = mutated_mod.get_global_var('func_4431')
var_17999 = relay.var("var_17999", dtype = "float64", shape = (8,))#candidate|17999|(8,)|var|float64
const_18000 = relay.const(-4, dtype = "uint64")#candidate|18000|()|const|uint64
var_18001 = relay.var("var_18001", dtype = "uint64", shape = (2, 224))#candidate|18001|(2, 224)|var|uint64
call_17998 = relay.TupleGetItem(func_4427_call(relay.reshape(var_17999.astype('float64'), [2, 1, 4]), relay.reshape(const_18000.astype('uint64'), []), relay.reshape(var_18001.astype('uint64'), [448,]), ), 1)
call_18002 = relay.TupleGetItem(func_4431_call(relay.reshape(var_17999.astype('float64'), [2, 1, 4]), relay.reshape(const_18000.astype('uint64'), []), relay.reshape(var_18001.astype('uint64'), [448,]), ), 1)
bop_18012 = relay.maximum(var_18001.astype('int64'), relay.reshape(call_17998.astype('int64'), relay.shape_of(var_18001))) # shape=(2, 224)
bop_18015 = relay.maximum(var_18001.astype('int64'), relay.reshape(call_18002.astype('int64'), relay.shape_of(var_18001))) # shape=(2, 224)
bop_18018 = relay.bitwise_xor(const_18000.astype('int16'), bop_18012.astype('int16')) # shape=(2, 224)
bop_18021 = relay.bitwise_xor(const_18000.astype('int16'), bop_18015.astype('int16')) # shape=(2, 224)
func_7915_call = mod.get_global_var('func_7915')
func_7917_call = mutated_mod.get_global_var('func_7917')
call_18025 = func_7915_call()
call_18026 = func_7915_call()
uop_18040 = relay.sin(bop_18018.astype('float64')) # shape=(2, 224)
uop_18042 = relay.sin(bop_18021.astype('float64')) # shape=(2, 224)
func_17610_call = mod.get_global_var('func_17610')
func_17612_call = mutated_mod.get_global_var('func_17612')
call_18047 = func_17610_call()
call_18048 = func_17610_call()
uop_18065 = relay.log2(var_18001.astype('float64')) # shape=(2, 224)
output = relay.Tuple([call_17983,var_17999,call_18025,uop_18040,call_18047,uop_18065,])
output2 = relay.Tuple([call_17984,var_17999,call_18026,uop_18042,call_18048,uop_18065,])
func_18068 = relay.Function([var_17999,var_18001,], output)
mod['func_18068'] = func_18068
mod = relay.transform.InferType()(mod)
var_18069 = relay.var("var_18069", dtype = "float64", shape = (8,))#candidate|18069|(8,)|var|float64
var_18070 = relay.var("var_18070", dtype = "uint64", shape = (2, 224))#candidate|18070|(2, 224)|var|uint64
output = func_18068(var_18069,var_18070,)
func_18071 = relay.Function([var_18069,var_18070,], output)
mutated_mod['func_18071'] = func_18071
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12565_call = mod.get_global_var('func_12565')
func_12567_call = mutated_mod.get_global_var('func_12567')
call_18106 = relay.TupleGetItem(func_12565_call(), 2)
call_18107 = relay.TupleGetItem(func_12567_call(), 2)
output = relay.Tuple([call_18106,])
output2 = relay.Tuple([call_18107,])
func_18113 = relay.Function([], output)
mod['func_18113'] = func_18113
mod = relay.transform.InferType()(mod)
mutated_mod['func_18113'] = func_18113
mutated_mod = relay.transform.InferType()(mutated_mod)
func_18113_call = mutated_mod.get_global_var('func_18113')
call_18114 = func_18113_call()
output = call_18114
func_18115 = relay.Function([], output)
mutated_mod['func_18115'] = func_18115
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16723_call = mod.get_global_var('func_16723')
func_16724_call = mutated_mod.get_global_var('func_16724')
call_18142 = relay.TupleGetItem(func_16723_call(), 0)
call_18143 = relay.TupleGetItem(func_16724_call(), 0)
output = call_18142
output2 = call_18143
func_18149 = relay.Function([], output)
mod['func_18149'] = func_18149
mod = relay.transform.InferType()(mod)
mutated_mod['func_18149'] = func_18149
mutated_mod = relay.transform.InferType()(mutated_mod)
func_18149_call = mutated_mod.get_global_var('func_18149')
call_18150 = func_18149_call()
output = call_18150
func_18151 = relay.Function([], output)
mutated_mod['func_18151'] = func_18151
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12768_call = mod.get_global_var('func_12768')
func_12770_call = mutated_mod.get_global_var('func_12770')
call_18191 = relay.TupleGetItem(func_12768_call(), 0)
call_18192 = relay.TupleGetItem(func_12770_call(), 0)
func_11129_call = mod.get_global_var('func_11129')
func_11131_call = mutated_mod.get_global_var('func_11131')
call_18216 = relay.TupleGetItem(func_11129_call(), 2)
call_18217 = relay.TupleGetItem(func_11131_call(), 2)
output = relay.Tuple([call_18191,call_18216,])
output2 = relay.Tuple([call_18192,call_18217,])
func_18224 = relay.Function([], output)
mod['func_18224'] = func_18224
mod = relay.transform.InferType()(mod)
output = func_18224()
func_18225 = relay.Function([], output)
mutated_mod['func_18225'] = func_18225
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15824_call = mod.get_global_var('func_15824')
func_15825_call = mutated_mod.get_global_var('func_15825')
call_18407 = relay.TupleGetItem(func_15824_call(), 0)
call_18408 = relay.TupleGetItem(func_15825_call(), 0)
output = call_18407
output2 = call_18408
func_18409 = relay.Function([], output)
mod['func_18409'] = func_18409
mod = relay.transform.InferType()(mod)
mutated_mod['func_18409'] = func_18409
mutated_mod = relay.transform.InferType()(mutated_mod)
func_18409_call = mutated_mod.get_global_var('func_18409')
call_18410 = func_18409_call()
output = call_18410
func_18411 = relay.Function([], output)
mutated_mod['func_18411'] = func_18411
mutated_mod = relay.transform.InferType()(mutated_mod)
func_18409_call = mod.get_global_var('func_18409')
func_18411_call = mutated_mod.get_global_var('func_18411')
call_18435 = func_18409_call()
call_18436 = func_18409_call()
func_8769_call = mod.get_global_var('func_8769')
func_8773_call = mutated_mod.get_global_var('func_8773')
var_18456 = relay.var("var_18456", dtype = "bool", shape = ())#candidate|18456|()|var|bool
const_18457 = relay.const([True,False,False,False,False,True,True,True,False,True,False,False,True,False,True,False,True,False,False,True,False,False,True,True,False,True,False,True,False,True,False,True,True,False,False,True,True,True,False,False,True,False,False,False,False,True,True,True,True,True,False,True,False,True,False,False,False,True,False,True,False,False,False,True,False,False,False,True,False,False,True,True,False,True,True,True,False,False,False,True,False,True,True,False,False,True,False,True,False,False,False,False,False,False,True,False,True,True,False,True,True,True,False,False,True,True,True,True], dtype = "bool")#candidate|18457|(108,)|const|bool
call_18455 = relay.TupleGetItem(func_8769_call(relay.reshape(var_18456.astype('bool'), []), relay.reshape(const_18457.astype('bool'), [3, 4, 9]), ), 0)
call_18458 = relay.TupleGetItem(func_8773_call(relay.reshape(var_18456.astype('bool'), []), relay.reshape(const_18457.astype('bool'), [3, 4, 9]), ), 0)
output = relay.Tuple([call_18435,call_18455,var_18456,const_18457,])
output2 = relay.Tuple([call_18436,call_18458,var_18456,const_18457,])
func_18471 = relay.Function([var_18456,], output)
mod['func_18471'] = func_18471
mod = relay.transform.InferType()(mod)
mutated_mod['func_18471'] = func_18471
mutated_mod = relay.transform.InferType()(mutated_mod)
var_18472 = relay.var("var_18472", dtype = "bool", shape = ())#candidate|18472|()|var|bool
func_18471_call = mutated_mod.get_global_var('func_18471')
call_18473 = func_18471_call(var_18472)
output = call_18473
func_18474 = relay.Function([var_18472], output)
mutated_mod['func_18474'] = func_18474
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9983_call = mod.get_global_var('func_9983')
func_9985_call = mutated_mod.get_global_var('func_9985')
call_18488 = func_9983_call()
call_18489 = func_9983_call()
output = relay.Tuple([call_18488,])
output2 = relay.Tuple([call_18489,])
func_18493 = relay.Function([], output)
mod['func_18493'] = func_18493
mod = relay.transform.InferType()(mod)
output = func_18493()
func_18494 = relay.Function([], output)
mutated_mod['func_18494'] = func_18494
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8424_call = mod.get_global_var('func_8424')
func_8426_call = mutated_mod.get_global_var('func_8426')
call_18547 = relay.TupleGetItem(func_8424_call(), 0)
call_18548 = relay.TupleGetItem(func_8426_call(), 0)
output = relay.Tuple([call_18547,])
output2 = relay.Tuple([call_18548,])
func_18550 = relay.Function([], output)
mod['func_18550'] = func_18550
mod = relay.transform.InferType()(mod)
output = func_18550()
func_18551 = relay.Function([], output)
mutated_mod['func_18551'] = func_18551
mutated_mod = relay.transform.InferType()(mutated_mod)
var_18600 = relay.var("var_18600", dtype = "float64", shape = (6, 13, 16))#candidate|18600|(6, 13, 16)|var|float64
uop_18601 = relay.rsqrt(var_18600.astype('float64')) # shape=(6, 13, 16)
uop_18605 = relay.asinh(var_18600.astype('float64')) # shape=(6, 13, 16)
output = relay.Tuple([uop_18601,uop_18605,])
output2 = relay.Tuple([uop_18601,uop_18605,])
func_18609 = relay.Function([var_18600,], output)
mod['func_18609'] = func_18609
mod = relay.transform.InferType()(mod)
mutated_mod['func_18609'] = func_18609
mutated_mod = relay.transform.InferType()(mutated_mod)
var_18610 = relay.var("var_18610", dtype = "float64", shape = (6, 13, 16))#candidate|18610|(6, 13, 16)|var|float64
func_18609_call = mutated_mod.get_global_var('func_18609')
call_18611 = func_18609_call(var_18610)
output = call_18611
func_18612 = relay.Function([var_18610], output)
mutated_mod['func_18612'] = func_18612
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12730_call = mod.get_global_var('func_12730')
func_12731_call = mutated_mod.get_global_var('func_12731')
call_18668 = relay.TupleGetItem(func_12730_call(), 3)
call_18669 = relay.TupleGetItem(func_12731_call(), 3)
func_16823_call = mod.get_global_var('func_16823')
func_16825_call = mutated_mod.get_global_var('func_16825')
call_18691 = relay.TupleGetItem(func_16823_call(), 2)
call_18692 = relay.TupleGetItem(func_16825_call(), 2)
func_15771_call = mod.get_global_var('func_15771')
func_15773_call = mutated_mod.get_global_var('func_15773')
call_18714 = relay.TupleGetItem(func_15771_call(), 0)
call_18715 = relay.TupleGetItem(func_15773_call(), 0)
func_15709_call = mod.get_global_var('func_15709')
func_15712_call = mutated_mod.get_global_var('func_15712')
const_18718 = relay.const([-4.406025,8.609135,-0.046469,3.223770,8.895960,-4.238937,7.773705,-0.816069,1.651398,6.544531,-4.339145,-2.884359,-1.409791,6.899405,6.152588,-3.314755,2.502062,-6.591023,1.162371,1.792567,-3.876152,5.919950,1.630777,7.715664,3.084382,-8.916247,-6.530237,5.173803,-6.384652,-1.756369,4.647442,2.646299,-2.961464,-1.316453,-2.849722,4.376173,9.731721,-8.172262,-6.018477,-8.418376,6.995603,7.532463,2.723897,-4.286176,5.156577,9.883466,4.160306,8.957502,-4.772329,7.694080,5.541548,1.817276,1.005683,1.954433,-0.001628,6.556882,-8.500246,6.883573,8.555834,-7.318416,-2.761301,-3.177696,-0.460843,-1.638822,8.647414,9.904834,-6.169442,-5.294573,5.461597,9.971067,7.286792,3.202486,3.837968,8.115242,-6.669661,5.137354,4.842299,-8.896976,8.200794,9.681667,-7.172073,6.165637,0.409040,-7.512292,-5.663063,-2.462061,-4.200294,7.974373,-1.948419,-9.440365,-9.739152,-4.703713,3.693668,-0.065679,9.565919,-3.000041,-0.773219,-8.382845,4.596667,-9.129237,-6.810191,9.376589,-8.682574,-1.567920,3.802700,4.738952,-2.954040,3.114356,-0.989324,-0.817622,6.496336,4.718542,-0.374575,-8.808421,-4.071779,3.048906,7.177248,4.090349,-4.609330,6.351487,8.030537,9.365330,-1.046318,1.448110,-5.535226,-5.377172,-1.348953,-6.694236,1.599761,-8.155733,8.784702,-0.719038,-6.195985,5.256573,3.876652,-3.648355,0.363451,-1.749707,8.695763,1.804441,2.040359,5.940801,7.823591,-6.764548,-2.881125,4.493975,4.685549,3.752436,5.577298,-8.967242,0.273814,3.529946,-9.551385,-2.386719,-5.214436,-4.426611,0.557259,4.305764,1.729316,9.978552,1.772400,9.028212,-9.423944,-9.174015,7.569838,-9.255547,-9.923066,-9.713517,4.581388,-9.583495,-5.733020,6.326953,-3.553268,-8.154959,-4.917883,-4.202521,-4.034577,-1.644634,-0.024974,3.196235,2.506136,-3.320435,6.417835,9.138730,6.181881,-0.636655,-2.718555,6.357116,3.421024,-5.585275,7.696237,4.696874,-8.193523,-1.075647,-7.087845,0.257849,7.910244,8.878507,-8.930772,3.829388,-6.481136,2.825699,8.505344,-7.856465,-4.469361,-7.972695,0.073835,-5.086376,-3.064625,-4.385316,-8.758146,-0.700223,4.726959,-6.017750,-1.593987,0.248017,-6.314185,3.666046,5.455274,-1.151502,-4.880951,2.157922,-0.325195,-3.586386,-3.171449,3.018825,-4.611356,-6.178256,-4.175153,1.024945,-6.042246,1.373501,4.073852,-0.374173,-2.296588,-5.240361,1.750592,-6.227527,3.417839,-7.434004,2.764709,-6.392259,-3.196453,5.201565,-4.560010,1.375772,5.706052,2.011485,-6.040868,7.400692,-2.071037,7.381002,4.074062,7.253744,-5.305408,-6.172948,7.647362,5.575906,2.559763,-7.320102,6.807838,-8.136757,0.855054,4.871028,8.295436,-2.129317,3.320819,-4.271392,-3.624815,2.620538,3.525093,-7.765371,0.393507,-2.916471,5.658602,-4.115132,7.543837,7.021722,-7.666828,-5.632630,-0.851992,8.802267,-0.579140,-6.099081,6.214010,-2.866496,-7.124502,7.862791,-1.327536,-3.434660,1.251242,6.997007,-9.280103,7.228469,4.691054,-1.645985,-3.736315,7.495370,5.566832,4.510029,-4.550890,-5.261824,4.282844,-3.022323,9.208346,1.538060,6.717346,4.073788,8.322779,-7.842129,-2.692493,-6.945782,-1.816597,-4.813225,-0.982990,-3.951868,9.856368,4.667826,-6.981071,-0.232080,-8.038076,-4.375741,-3.361688,0.989395,-5.263893,2.233092,0.736819,-4.333659,7.976049,8.074051,-0.049989,-1.307672,-7.806037,-0.866423,3.000699,8.400384,-3.681883,2.451740,7.629191,1.364933,-1.818368,2.354324,-6.798375,0.319108,-3.065009,0.998557,-3.015688,-6.559449,2.313625,-5.518444,7.419547,5.856775,2.049279,0.912184,9.861176,9.901900,2.597564,0.296810,-2.457385,8.622405,-0.725311,7.795589,0.118634,1.760893,1.116834,3.555608,3.909085,-0.890707,-5.545684,-5.110450,-8.579497,1.920234,-8.524382,-4.594223,-1.685327,2.780828,-4.776137,4.883283,-0.060611,3.796836,-1.700931,-4.029233,7.585137,8.091240,-9.841012,6.461967,0.003433,-5.932333,-5.046774,-2.909081,7.850918,4.279874,-2.467814,4.719901,6.749765,-8.037284,1.069852,-5.737065,-3.779928,-1.135330,0.242874,0.748656,6.002632,-0.042641,-0.787271,-4.576405,-5.048993,-2.241231,-6.752493,7.877907,-6.590398,-4.089195,-6.705386,-5.880408,-5.327980,-3.100631,-6.152500,-1.204844,8.876490,6.882644,2.475912,8.045338,9.476335,-5.133623,4.860811,-1.567855,-0.930323,-7.702493,6.477525,7.766424,2.696022,8.082305,5.221587,1.516676,-9.192088,9.685690,-8.862492,1.600998,-9.842169,-3.467450,8.509187,0.857739,5.219979,-7.645297,-2.284263,-6.545145,0.229195,0.558232,1.419938,-2.937819,-5.502010,3.889412,-7.291577,-3.882196,-4.093399,9.300226,7.619778,0.448482,-3.325898,4.308085,3.185599,-7.954644,2.030617,-9.924748,3.327230,-7.944705,-7.336405,-5.197074,-4.456232,6.300246,0.401585,-9.293942,4.916676,0.467020,-2.205244,-5.433168,-0.423821,-3.952569,-8.460918,-5.254117,6.144738,8.744062,-2.536114,2.200616,9.656504,-5.239706,5.080781,8.658800,-6.507357,-8.444890,-9.309021,4.989061,0.744849,-9.546229,-2.924071,1.495055,-5.216445,3.821637,6.368758,7.667889,2.481681,2.601745,1.403804,8.066677,-3.378316,-9.494186,-5.214583,1.628330,5.932276,4.151095,6.469811,-9.284253], dtype = "float64")#candidate|18718|(512,)|const|float64
call_18717 = relay.TupleGetItem(func_15709_call(relay.reshape(const_18718.astype('float64'), [512,])), 4)
call_18719 = relay.TupleGetItem(func_15712_call(relay.reshape(const_18718.astype('float64'), [512,])), 4)
output = relay.Tuple([call_18668,call_18691,call_18714,call_18717,const_18718,])
output2 = relay.Tuple([call_18669,call_18692,call_18715,call_18719,const_18718,])
func_18720 = relay.Function([], output)
mod['func_18720'] = func_18720
mod = relay.transform.InferType()(mod)
output = func_18720()
func_18721 = relay.Function([], output)
mutated_mod['func_18721'] = func_18721
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9577_call = mod.get_global_var('func_9577')
func_9579_call = mutated_mod.get_global_var('func_9579')
call_18728 = relay.TupleGetItem(func_9577_call(), 0)
call_18729 = relay.TupleGetItem(func_9579_call(), 0)
func_18113_call = mod.get_global_var('func_18113')
func_18115_call = mutated_mod.get_global_var('func_18115')
call_18734 = relay.TupleGetItem(func_18113_call(), 0)
call_18735 = relay.TupleGetItem(func_18115_call(), 0)
output = relay.Tuple([call_18728,call_18734,])
output2 = relay.Tuple([call_18729,call_18735,])
func_18769 = relay.Function([], output)
mod['func_18769'] = func_18769
mod = relay.transform.InferType()(mod)
output = func_18769()
func_18770 = relay.Function([], output)
mutated_mod['func_18770'] = func_18770
mutated_mod = relay.transform.InferType()(mutated_mod)
func_15571_call = mod.get_global_var('func_15571')
func_15573_call = mutated_mod.get_global_var('func_15573')
call_18793 = func_15571_call()
call_18794 = func_15571_call()
output = call_18793
output2 = call_18794
func_18799 = relay.Function([], output)
mod['func_18799'] = func_18799
mod = relay.transform.InferType()(mod)
output = func_18799()
func_18800 = relay.Function([], output)
mutated_mod['func_18800'] = func_18800
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11546_call = mod.get_global_var('func_11546')
func_11548_call = mutated_mod.get_global_var('func_11548')
call_18908 = func_11546_call()
call_18909 = func_11546_call()
func_15398_call = mod.get_global_var('func_15398')
func_15400_call = mutated_mod.get_global_var('func_15400')
call_18927 = func_15398_call()
call_18928 = func_15398_call()
func_18471_call = mod.get_global_var('func_18471')
func_18474_call = mutated_mod.get_global_var('func_18474')
var_18944 = relay.var("var_18944", dtype = "bool", shape = ())#candidate|18944|()|var|bool
call_18943 = relay.TupleGetItem(func_18471_call(relay.reshape(var_18944.astype('bool'), [])), 0)
call_18945 = relay.TupleGetItem(func_18474_call(relay.reshape(var_18944.astype('bool'), [])), 0)
func_16844_call = mod.get_global_var('func_16844')
func_16847_call = mutated_mod.get_global_var('func_16847')
const_18958 = relay.const([False,True,False,False,True,True,True,True,False,False,True,False,True,True,True,False,False,True,True,False,False,False,False,True,False,True,False,False,True,False,True,True,False,True,False,True,True,True,False,True,True,True,True,False,True,False,True,True,True,False,True,True,False,True,False,False,True,True,True,False,True,False,False,True,True,False,False,False,True,True,True,True,False,False,True,True,False,False,False,True,False,False,False,False,True,True,True,False,False,False,True,True,False,True,True,True,True,True,False,False,False,True,True,True,False,True,False,False], dtype = "bool")#candidate|18958|(108,)|const|bool
call_18957 = relay.TupleGetItem(func_16844_call(relay.reshape(var_18944.astype('bool'), []), relay.reshape(const_18958.astype('bool'), [108,]), ), 0)
call_18959 = relay.TupleGetItem(func_16847_call(relay.reshape(var_18944.astype('bool'), []), relay.reshape(const_18958.astype('bool'), [108,]), ), 0)
output = relay.Tuple([call_18908,call_18927,call_18943,var_18944,call_18957,const_18958,])
output2 = relay.Tuple([call_18909,call_18928,call_18945,var_18944,call_18959,const_18958,])
func_18969 = relay.Function([var_18944,], output)
mod['func_18969'] = func_18969
mod = relay.transform.InferType()(mod)
mutated_mod['func_18969'] = func_18969
mutated_mod = relay.transform.InferType()(mutated_mod)
var_18970 = relay.var("var_18970", dtype = "bool", shape = ())#candidate|18970|()|var|bool
func_18969_call = mutated_mod.get_global_var('func_18969')
call_18971 = func_18969_call(var_18970)
output = call_18971
func_18972 = relay.Function([var_18970], output)
mutated_mod['func_18972'] = func_18972
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13746_call = mod.get_global_var('func_13746')
func_13747_call = mutated_mod.get_global_var('func_13747')
call_18998 = func_13746_call()
call_18999 = func_13746_call()
func_9849_call = mod.get_global_var('func_9849')
func_9850_call = mutated_mod.get_global_var('func_9850')
call_19002 = func_9849_call()
call_19003 = func_9849_call()
func_18969_call = mod.get_global_var('func_18969')
func_18972_call = mutated_mod.get_global_var('func_18972')
const_19006 = relay.const(False, dtype = "bool")#candidate|19006|()|const|bool
call_19005 = relay.TupleGetItem(func_18969_call(relay.reshape(const_19006.astype('bool'), [])), 0)
call_19007 = relay.TupleGetItem(func_18972_call(relay.reshape(const_19006.astype('bool'), [])), 0)
output = relay.Tuple([call_18998,call_19002,call_19005,const_19006,])
output2 = relay.Tuple([call_18999,call_19003,call_19007,const_19006,])
func_19029 = relay.Function([], output)
mod['func_19029'] = func_19029
mod = relay.transform.InferType()(mod)
mutated_mod['func_19029'] = func_19029
mutated_mod = relay.transform.InferType()(mutated_mod)
func_19029_call = mutated_mod.get_global_var('func_19029')
call_19030 = func_19029_call()
output = call_19030
func_19031 = relay.Function([], output)
mutated_mod['func_19031'] = func_19031
mutated_mod = relay.transform.InferType()(mutated_mod)
func_16189_call = mod.get_global_var('func_16189')
func_16191_call = mutated_mod.get_global_var('func_16191')
call_19058 = relay.TupleGetItem(func_16189_call(), 0)
call_19059 = relay.TupleGetItem(func_16191_call(), 0)
func_11501_call = mod.get_global_var('func_11501')
func_11503_call = mutated_mod.get_global_var('func_11503')
var_19078 = relay.var("var_19078", dtype = "float32", shape = (495,))#candidate|19078|(495,)|var|float32
call_19077 = func_11501_call(relay.reshape(var_19078.astype('float32'), [15, 3, 11]))
call_19079 = func_11501_call(relay.reshape(var_19078.astype('float32'), [15, 3, 11]))
func_7314_call = mod.get_global_var('func_7314')
func_7318_call = mutated_mod.get_global_var('func_7318')
const_19087 = relay.const([[4.056429,5.830407,-8.479158]], dtype = "float32")#candidate|19087|(1, 3)|const|float32
var_19088 = relay.var("var_19088", dtype = "float32", shape = (126,))#candidate|19088|(126,)|var|float32
call_19086 = func_7314_call(relay.reshape(const_19087.astype('float32'), [3, 1, 1]), relay.reshape(var_19088.astype('float32'), [3, 6, 7]), )
call_19089 = func_7314_call(relay.reshape(const_19087.astype('float32'), [3, 1, 1]), relay.reshape(var_19088.astype('float32'), [3, 6, 7]), )
func_17718_call = mod.get_global_var('func_17718')
func_17721_call = mutated_mod.get_global_var('func_17721')
const_19135 = relay.const([-6.596268,-4.203433,0.596679,9.259290,8.805020,-1.860604,-1.833436,-5.016735,-5.348171,-8.014621,2.820400,2.487361,1.242787,1.590732,0.768250,3.614193,2.315875,-7.703989,2.966493,6.130027,0.855171,-4.862935,4.089487,-5.794094,-8.985953,6.993675,8.043191,-0.029572,-7.142305,-4.533661,6.261538,8.157412,3.751618,6.247201,1.686607,5.299391,4.475912,-2.456557,3.143699,-1.561409,7.958111,7.964368,-3.759006,2.567684,-1.101969,-3.496208,-5.688171,-4.673636,-7.661211,-6.793763,8.275143,-9.892927,0.041292,1.292084,8.132428,-2.754675,2.536984,-6.722701,-0.821875,-5.663237,0.888123,-2.454655,-0.524705,8.996470,3.138815,-7.379134,3.436789,3.984464,1.367251,9.229829,-4.120809,6.452331,-5.663974,5.947427,6.174929,7.943723,-4.121496,-5.998279,-6.021536,6.447897,-9.107729,-6.974510,-1.770153,-5.122456,-5.862550,7.314349,-3.858786,-5.305371,-6.944025,3.507344,8.822763,-3.857576,-6.783065,-6.613733,-1.441402,-9.039693,9.141163,-6.811623,-3.252036,0.992150,2.186130,5.403374,2.974466,-8.387867,2.899377,-8.178831,-3.427029,1.293736,6.819835,8.338943,5.509380,-6.785705,0.181150,3.612426,-4.743061,-0.150815,3.776836,5.933119,-0.445599,-4.226025,6.485198,-9.183127,4.641583,-0.746941,-9.959568,-4.187998,-9.450143,-6.816252,3.104008,1.087043,1.395544,1.679820,-9.576543,9.613497,-0.975905,-2.851038,-3.891629,9.760754,-3.304307,0.343264,-8.628035,6.420647,-9.339114,-9.560342,6.224753,2.324035,0.309631,2.450319,0.018980,-6.780884,-6.934501,6.644856,-8.979003,-4.942114,7.203161,6.598356,8.554451,-8.419108,-4.011233,2.652743,-1.269537,-6.950492,-3.170535,6.826609,7.921370,6.265504,6.526618,-7.642143,-5.962395,-1.527284,-0.041258,0.409961,-9.444178,-8.263997,-2.102405,-3.736392,-4.157106,-9.501302,-0.223752,4.117937,-7.853806,5.549753,9.003839,5.659795,-7.370895,8.157183,2.416392,-8.083673,-3.187612,-8.907074,1.011366,-6.016659,-5.526296,-9.572090,-3.700217,-2.532823,-0.638497,-2.691883,7.926483,2.189032,-8.439047,8.137032,6.910981,8.949147,-1.873898,-4.710695,6.795659,3.061337,-9.812827,-2.931419,5.791567,1.776503,4.102950,-3.014636,2.055090,-7.808132,-7.018273,1.302970,-3.272844,-6.270999,-6.846354,-6.035536,9.783746,4.315477,5.530663,-8.495103,-9.948326,-8.649391,-0.282726,4.324039,3.071331,4.010495,5.385655,6.066161,1.562693,-9.037759,1.423407,6.075267,-1.433811,-3.693280,9.170194,6.180117,-8.272043,6.081966,-6.737741,-3.211233,-5.349539,9.000062,-6.256196,0.943697,-9.455294,1.843768,-3.828935,-2.424577,-8.128649,-8.848388,-1.076562,5.689444,-5.944705,0.972510,7.385069,-0.854427,3.253873,0.355731,-6.491521,5.057485,-9.798818,-9.682610,-8.526281,-8.075812,8.769243,-3.499287,-1.446420,-8.804158,-7.708991,4.354994,2.845871,6.722210,7.172008,-4.172697,-1.809688,0.596545,5.703811,6.056040,-7.100799,-4.549432,7.238962,4.659235,-6.968495,-7.264157,2.523751,4.062952,4.083222,6.036163,1.536634,-8.690266,-1.111880,3.102692,-7.986243,3.053998,-6.698034,-9.402501,-5.339113,3.399264,-9.838410,7.190182,7.293530,-1.351454,2.375933,8.763630,-9.161926,-8.570974,8.559990,-2.613588,0.380864,4.046853,3.849842,6.913785,5.869436,-7.588607,-5.490710,-6.786095,-2.828451,-7.822725,-4.090208,8.682453,3.476019,9.562405,5.498886,-0.976079,0.670829,-3.600833,-7.569446,-6.797751,-6.361055,3.813474,-8.204598,-5.252401,-2.289763,1.971247,-1.178577,3.843155,-9.035338,1.351583,-0.326291,-9.134056,3.888170,-9.381458,-1.574789,8.200965,-2.487522,5.883978,-5.278430,8.170721,-9.661158,-9.796007,7.418322,6.068918,-0.757807,1.620288,-0.411134,8.575315,-6.307711,4.392009,-7.138481,2.908376,9.836003,-8.257504,-7.374953,7.647246,-3.107584,-4.333304,7.321984,0.817913,-3.099291,5.738984,2.358120,-8.047143,-3.019591,-0.784897,-6.897044,3.764766,8.257485,-2.631819,-2.184155,-9.748168,7.463175,-4.702943,-5.822222,-8.973818,9.427899,-7.585859,-9.321337,-3.943693,-4.655873,-6.733974,8.694045,3.362158,4.194464,-0.941801,5.245389,-9.671730,2.878103,2.535737,-0.788097,-2.235798,3.128355,-1.130705,4.196596,4.591952,-0.357430,1.425625,2.338419,-2.915675,-9.250944,-4.825668,8.199473,-3.750085,-6.115549,0.693483,8.436238,-2.565466,-9.024043,5.725897,1.640805,3.435346,-6.766975,3.553529,4.289765,-6.564667,2.275327,5.516337,1.060971,6.224821,-6.512163,-1.920709,8.393392,-8.089480,-3.110289,1.045259,-2.189482,8.699620,4.100878,8.419780,-9.464143,-3.078852,-4.249045,-9.071081,7.112023,8.191963,-4.570610,-7.801777,-7.910160,2.328759,-9.136507,5.980320,-9.127649,8.948031,3.157853,-9.331558,-7.279239,2.262518,9.241212,-0.321764,-6.592961,-7.664018,2.657653,-5.031982,3.235661,-6.806061,-7.307167,5.803289,-0.786922,6.730475,3.725328,0.931593,-8.501852,-6.105854,8.069455,7.760763,3.445328,-4.466781,-5.660132,-6.178659,6.082233,9.495821,-1.348052,-9.576730,9.477429,6.823791,0.297682,-3.032724,1.757584,5.881042,8.931629,-9.454191,-9.147911,2.997321,8.936108,8.794953,3.715382,4.126871,1.441651,-5.750796,6.396860,0.775798,7.115342,-6.603594,-4.069528,0.578322,-3.667340,-3.858545,-5.374174,4.403372,-6.246062,-5.512736,7.180008,3.781165,5.326997,4.556021,1.088743,-0.142139,-6.249874,-0.324374,-8.688815,-8.478244,8.584452,-1.180457,6.010028,-1.775173,-8.700666,6.004221,-0.218096,-4.995985,-2.005690,-1.714694,-9.992161,-8.268299,8.547878,6.457299,-0.297363,2.309432,4.840388,-9.525944,1.021820,-7.328545,8.444351,-6.627982,-3.770054,-5.827670,-1.231740,7.532508,4.667292,-8.663584,-8.881462,-4.208960,1.168161,-6.374346,2.646723,2.309698,7.440526,-1.207900,7.077237,-1.403813,7.069986,7.719734,0.925517,-8.796565,-9.162683,-2.978721,2.116925,-2.503091,-7.756572,0.467109,9.371112,-6.302210,-3.982952,0.153885,9.274228,5.049458,-1.125970,2.814182,1.200575,-6.438909,-0.630083,-3.921741,-5.384446,-2.263976,-5.922142,-6.592721,3.495241,-2.106915,-4.656971,2.522842,-7.854348,-5.947083,8.700819,-8.701079,-1.931312,3.415994,5.434092,-8.381816,-6.764649,-7.169919,-3.270329,-4.348097,-7.401959,7.039797,-1.254668,-3.176714,6.034293,-1.141553,-0.609247,-9.862982,9.771829,2.887802,2.375541,-2.809773,9.904639,-9.591018,-8.286081,4.499747,-4.906753,7.531736,6.452685,5.427495,-7.417101,-5.875444,-1.686028,7.484209,-8.807883,6.797538,-7.746156,4.963010,-6.050934,5.840004,-5.870237,3.579895,0.481467,9.341382,8.733645,-8.201559,-0.120419,-1.501513,2.220427,1.787215,8.915244,8.327292,-2.002881,2.642431,3.154073,7.902939,1.647253,-0.515094,3.937784,9.351935,-6.425541,7.975616,-6.044323,4.851643,9.777059,1.983925,2.647794,1.302830,8.264097,9.971686,0.629459,-3.089142,5.800062,-1.401875,5.446759,5.594889,8.424982,-8.224868,5.560266,1.671802,-9.991707,7.277117,5.195750,-0.181192,9.640155,9.078511,-5.172948,5.610696,-1.673976,7.878259,3.767569,3.468447,7.439454,1.626481,-5.826429,6.496997,6.459377,-2.158752,2.921047,-9.178686,-2.344750,-0.147250,3.400283,0.239920,3.133191,4.550152,8.714726,0.213612,5.576109,8.945586,3.102981,-3.013118,3.433437,5.686152,5.737751,1.854481,-9.507373,8.300184,9.909854,1.120186,7.022680,-5.124595,-2.920594,2.065065,-9.271595,8.491572,6.913551,-8.942345,-4.298058,-5.255623,3.750054,-3.608109,8.452302,-3.461654,-8.804204,6.784549,-8.449798,-5.028396,7.222136,-7.583320,2.884042,8.117150,-6.367768,4.442918,3.889518,-1.729938,-3.676887,-9.385958,-5.189750,-7.291905,8.136457,-3.265555,8.930310,-2.814107,-8.363424,-2.517915,-5.520628,1.368245,-5.440047,3.813840,-5.578525,-8.771421,-9.143084,-2.817197,9.269986,0.266165,-1.366095,2.369195,6.572286,-6.515298,-2.021798,3.758970,-9.816119,2.951643,9.621594,-4.148370,1.014355,-0.014565,-5.350374,-8.331029,-5.887755,-6.436530,-9.050921,-0.810977,9.918396,9.723319,-2.017510,-0.666350,6.400920,6.772261,-4.306962,-3.925796,-5.330084,-8.784197,0.005598,2.828183,-2.849470,-9.775285,9.660002,-6.909814,5.100173,-8.530640,-8.275729,-4.484055,3.225038,2.883948,-1.136880,8.636748,-3.038643,3.850964,-5.428487,0.392948,-9.329597,8.475142,7.836052,-2.403381,-7.017582,-3.617027,4.592353,-6.234380,-6.036547,-0.869770,-7.318356,2.971083,0.565025,-6.884241,8.872587,6.891378,-8.850951,6.308214,-2.049096,-9.214042,0.592323,-9.118530,-6.242742,5.745825,-8.591363,9.443468,3.437674,8.930316,3.622537,-9.861858,-4.317606,-7.315899,5.872224,-2.043125,2.592537,-0.039404,9.922627,3.101556,0.635925,-6.174524,-7.604406,-3.938231,-0.899027,3.576497,-7.947596,7.852993,1.464665,8.577927,8.068350,-1.685206,-3.247557,2.479265,7.220479,4.093096,9.650497,-2.821394,8.732353,0.260574,6.998886,4.116511,7.836001,-8.218023,-6.211615,1.405490,8.124026,-7.102397,-2.862679,0.495827,-3.503125,-7.185195,-1.786994,-1.800079,-8.728519,1.959395,-1.149204,6.904413,6.758821,-3.002775,6.489628,-2.189824,9.281588,-9.624470,-2.822515,-7.471160,5.170715,8.508767,4.995663,1.032340,3.764678,7.422884,-6.188321,3.709586,-2.155160,4.430472,5.865331,-2.524363,1.055591,-2.510682,-2.541650,-1.239164,-9.806782,1.841065,1.408600,6.296772,-1.571451,-2.459074,2.122222,-6.753777,2.960836,6.878656,3.472687,-1.636106,-9.379485,1.359857,8.197937,-0.540413,1.337150,3.794672,5.117688,4.820392,-9.315571,-9.628155,-3.523514,6.889714,-3.887032,-9.870850,2.504395,-2.113986,-9.341930,-2.614268,-7.512661,7.318844,0.608278,-5.036000,5.470859,-4.623823,-3.728569,1.588452,2.179038,-4.432173,6.251619,-8.934824,4.147649,-1.568660,-0.575256,4.987396,-8.383060,-1.088810,-5.928069,-3.410307,-3.465874,9.061715,2.395979,5.255128,0.533794,-4.992725,1.683540,8.444637,-2.946341,-5.521460,4.555434,7.926342,-6.308938,6.834160,-9.060124,-7.208768,-3.704691,7.343445,-6.495597,-6.644035,4.639028,-8.119401,9.523289,1.007382,3.418767,-9.555444,-8.657725,-7.889055,5.071912,8.229172,8.509024,2.465520,4.237884,4.323021,5.028814,8.006243,6.353534,9.713128,-2.329024,-8.010567,-0.093223,-2.071485,-9.673085,1.826442,-9.852608,2.695949,-9.806143,0.740883,-0.042953,0.980576,-3.387272,-5.579509,-8.375245,9.416758,-8.627709,5.100089,-8.924375,6.895380,-0.113836,7.835349,8.325437,4.941048,0.895821,7.692222,7.011935,4.511447,-8.427847,2.149560,-5.500472,3.542685,-6.623660,6.033240,-3.942416,7.012497,-5.635770,2.464258,-0.673256,8.638616,2.590102,7.845787,-3.353050,-4.667664,-4.211890,9.039800,-3.168389,6.233454,9.379775,-8.202618,-6.577700,5.004142,-0.257145,-6.486479,6.253197,-1.085835,0.555588,0.081920,-4.925135,-5.183607,-4.379090,2.914840,-0.812250,9.446142,-5.217238,0.230148,-2.275788,8.928912,5.736466,7.104877,3.436049,6.645623,0.960653,-6.206057,-2.308759,-5.890143,9.047032,-6.802207,-1.441404,5.130345,4.925430,9.504218,2.825522,-1.748078,3.658949,4.819821,5.683767,8.409875,-2.544943,-9.170687,-9.680347,2.224898,2.482776,3.849351,4.154861,-5.758423,4.187130,-2.291837,-0.404948,5.356602,-0.005934,-3.502368,1.066843,-5.025730,-1.485324,-5.311971,6.106507,-5.144897,2.080954,5.868413,-0.170316,4.970255,0.483979,4.654079,-2.517568,3.273374,9.346039,-3.684897,9.989782,-5.213506,-6.789325,-5.261329,-5.820690,-2.747740,-8.333255,9.346091,8.388669,-9.984801,-8.050187,-8.049229,-2.269865,-0.114523,9.388638,-2.858286,9.927024,-7.147816,-5.468698,-4.936005,4.029133,-9.225260,-7.102799,2.100340,6.866737,-9.678406,3.860717,-8.446151,9.703213,2.986057,-5.928096,2.332502,8.227471,7.040344,4.572346,-0.668341,-1.496007,-2.668746,-3.925571,-9.946481,-3.920380,-7.052015,0.229069,8.630810,4.864670,6.888577,6.875296,6.218032,6.284669,-1.119794,-6.974920,0.482338,9.221259,9.194930,6.328769,8.190879,3.736251,3.360230,4.539352,0.289182,-6.487383,-7.629177,6.876918,-7.800185,-8.292808,4.920639,9.951125,6.414810,6.900070,6.286753,-0.604215,-5.212315,-8.765382,-9.633378,-2.613854,-4.471191,-7.055364,-1.251042,-5.760402,-0.746067,0.402601,-2.039144,4.336030,-8.986135,-2.802703,8.049192,-1.166706,-4.000863,-1.874974,-6.240011,-4.741246,8.184644,0.049105,6.637309,-4.738472,-3.165893,9.724193,-9.473244,-4.893030,0.145960,-4.656386,5.786380,-8.338285,5.810761,-8.206144,-8.164562,-2.733702,-9.821406,0.307337,-5.484557,3.926592,-9.273799,0.351393,6.637403,8.640105,-0.426780,-4.270963,-8.570487,-6.218446,8.660570,-7.329171,9.927471,1.377061,-5.560653,3.492070,-1.208464,-6.759506,-3.534996,0.241396,9.050754,-7.520276,8.051372,-3.379812,-6.394801,8.771341,3.067807,4.361775,8.765953,-3.408566,1.844419,-9.104368,5.581718,-4.753140,-5.957775,1.063814,-8.155500,2.206618,-7.965555,-1.028634,-4.567967,-1.970031,9.856305,6.891116,-0.465943,-5.758049,0.635054,7.627939,9.312069,-2.791966,-2.522374,-9.223937,-0.226995,-7.361113,5.762798,9.268264,-3.659244,8.686089,6.959890,-4.194082,1.782710,3.416023,0.928734,1.854861,6.091159,-8.779029,8.986326,-2.458360,3.786363,3.236580,9.843013,-5.760747,-2.688161,6.229777,-1.558544,-3.845125,6.849258,1.384184,-8.125407,1.643010,-4.586940,9.734485,-3.382371,1.265482,-5.246779,-9.438000,0.782727,-9.657978,9.384559,0.991736,4.431856,2.883736,-3.454336,-4.757322,9.383322,-4.633290,5.773335,8.906170,9.787892,7.626202,1.268927,-0.239465,7.515494,7.180851,-2.645545,-2.274929,-3.989843,-3.696945,-3.398070,6.909669,2.647394,-4.259969,-9.986893,-9.134432,-0.943218,0.585990,-7.133885,6.247286,-4.336714,-4.629812,5.470908,2.258827,-5.977271,-6.755446,-0.402852,-0.796281,5.214590,-3.862982,-9.334490,-3.861178,3.645343,3.109143,8.605299,3.876886,7.944347,-0.856922,-0.754542,-5.202817,-7.020245,-8.814588,-7.426688,-1.902145,4.051176,8.309828,6.756779,-2.138943,-3.623345,-3.631264,-1.218837,4.877267,9.461713,4.611933,9.929470,-5.113665,-1.979652,-1.515342,0.894089,5.493405,-1.535446,9.772962,-1.100949,-8.041087,8.496489,-0.587683,-1.948215,7.034842,1.551886,4.482986,-7.730749,-9.553676,-5.440192,1.491353,6.239578,-1.362337,-1.768789,-5.974360,-9.203777,5.633112,9.341696,9.200749,4.019428,-6.320208,1.595663,-1.478130,9.106407,5.949470,7.211417,-9.548216,3.797877,-5.006234,-7.060464,-2.680890,3.159654,-6.745669,6.469500,-8.484893,-4.764822,3.250502,5.942278,9.526019,6.713878,-9.914380,0.904819,3.467021,-8.328919,-7.286061,-5.769841,6.265771,-4.217775,8.335141,7.719537,2.916380,-2.238012,-5.798570,-4.263678,-7.802903,-3.326321,-1.775845,9.744723,-9.687069,-1.452195,-5.551189,1.611831,-2.629432,2.097515,1.947622,-8.198178,-3.524075,2.395115,-7.630563,-2.188509,4.012294,3.608898,7.584091,-5.414165,-9.845220,-3.233630,5.458670,-9.490327,-9.584857,6.518277,2.703830,-4.858250,-9.578177,-1.970972,2.722029,-1.140634,1.169894,-6.193214,-7.917519,-5.476127,9.784523,-8.752121,-6.423924,0.106464,-2.459515,-8.517318,-3.617828,-6.596266,-6.616484,6.512009,0.860434,1.476917,8.450303,3.780739,-4.817598,3.862953,4.108356,-5.463342,-0.812012,-3.549083,6.399468,-9.090652,5.982182,-6.459768,1.934710,5.250642,7.684214,4.301814,-2.277635,9.217383,-1.750172,8.052351,-9.746124,2.588585,7.160472,0.858102,-6.036027,-6.533655,-5.618063,-4.918817,-1.888221,1.161541,-6.837203,-9.478686,0.484930,0.279454,-0.639052,8.923031,-1.619719,-1.785704,-5.791328,-9.018626,3.275639,-8.093818,-9.245668,-7.788989,-1.045982,-7.501308,-7.892215,-1.641075,-0.147895,-5.786725,-8.558989,5.233161,-0.699194,-2.686302,-7.583350,-0.942058,2.750641,4.690729,9.089573,-2.552362,2.028869,-7.698233,0.631288,-2.606012,-1.887401,6.876356,-0.671977,4.195290,-7.800325,-4.094692,4.062533,-5.184475,6.626382,-8.345361,0.484753,9.897574,9.320979,4.182487,-3.478887,9.606728,-4.224391,3.866678,6.656499,2.189832,-7.692919,-2.060676,-1.648875,-8.964984,0.976479,-2.238787,5.255622,1.253909,7.139290,1.508224,-4.626389,-7.921101,9.319056,-2.024579,9.021352,-7.076500,9.871691,9.434246,-9.791704,6.968026,-2.418132,-7.408807,1.433971,-2.312812,-2.044790,-2.684439,-2.204697,9.300779,-3.989811,7.230892,-3.898444,0.479374,-5.351748,9.707265,-9.819997,-2.603491,6.459581,-7.892991,8.154752,0.978935,7.854422,-7.712696,3.156970,2.603671,3.967386,9.084703,0.308062,9.755110,3.521210,-7.613088,-7.526091,-0.393101,1.310902,-6.532400,0.927812,3.155444,-7.708297,9.216870,3.495766,6.570324,8.695146,-1.326582,-2.030422,-9.351117,1.794648,1.365476,-9.392533,9.567396,8.511227,-1.441044,7.265871,8.876042,7.875956,0.531547,4.465601,-5.385330,2.693062,4.236480,-1.159210,2.778831,-8.304517,1.337641,-3.822649,4.262093,2.717734,3.155982,1.931665,-1.976492,1.591258,4.001642,-1.192994,3.099041,0.683943,4.952733,-8.381792,7.025787,-8.087700,0.283357,7.706540,-1.854604,-7.532714,3.741779,-3.751522,8.776393,-5.888218,-0.511621,-8.609701,-7.679925,5.754238,6.366371,5.115688,-6.624354,-2.282427,-8.280806,-0.236781,-8.005166,-4.706390,-3.963678,3.349264,-1.933602,1.911716,-4.463611,-2.858086,4.593150,6.699452,-9.995128,8.549601,-6.727451,-2.766203,6.292356,7.780967,-6.976583,3.876078,-4.305612,-2.075995,-9.487025,3.037138,2.219953,-3.360020,7.967371,2.991190,-5.101491,9.793332,-3.866089,4.394689,-3.855590,3.971486,2.808373,-6.405116,4.016195,-4.025343,-6.840209,2.460400,-0.002986,-4.560909,6.459089,1.853035,-7.009738,-3.924184,-9.743570,-7.613605,-6.028092,5.935589,-6.391496,5.033636,-1.484785,-7.314619,1.593755,-5.496475,4.644253,-8.722686,9.160479,-0.517492,-0.464238,-7.616338,-6.012362,6.774229,8.602939,-2.119458,-4.993776,4.759890,-0.954963,7.365232,1.668273,6.208812,-2.669137,3.602016,6.079817,5.590114,-3.043681,-5.781081,-7.440371,7.254407,1.237137,-0.678072,9.619078,-1.007014,1.506801,-7.104110,-8.704089,9.064021,7.152892,-6.341811,-3.705565,-3.852330,3.423902,8.636165,-7.172828,8.412296,6.984620,-1.434776,-9.122890,-3.648317,-4.835974,-3.187426,-6.930007,-5.297837,0.288839,-8.978151,-2.517940,-7.809616,2.558188,-8.951398,0.150111,9.883618,9.247295,4.500663,5.835546,9.625432,-0.812997,-8.994866,2.071503,-4.982959,4.411272,-7.619691,7.762679,7.460481,-5.212103,1.171776,-6.573351,-6.572875,-0.564959,9.747255,1.623368,5.927435,-3.709607,-8.633055,-8.678279,-3.893740,0.647794,-4.325324,-6.563162,-3.447885,8.955454,-2.377687,-9.461108,8.839776,-7.617454,-5.953329,8.355958,-9.468066,9.066053,7.497973,9.230238,4.531929,-8.205138,-9.385769,-6.302782,7.888261,-5.578977,6.248162,1.242760,3.296789,2.445214,5.574902,0.265919,-3.038757,0.303990,7.333505,-4.342353,0.087850,-4.642427,0.256546,-3.538162,-6.843564,-4.528318,-2.770879,-0.093566,1.926249,8.853277,-3.139675,-5.385800,-2.088125,-2.989138,9.151722,-1.064062,3.545921,-8.586904,4.670497,2.844799,8.205309,5.785463,5.244356,6.162688,7.628547,-6.928538,0.483399,7.813615,-4.017948,8.724600,-2.532802,-9.306937,-3.736757,-1.688540,-7.726043,2.330120,3.689121,1.929954,-3.727810,4.831709,6.709816,7.034722,5.604901,-0.614617,-2.976045,8.517047,-4.725544,-0.932528,-3.220424,-7.251636,7.784348,-8.404503,5.750970,0.849455,-1.341516,6.566991,-4.960662,-4.786220,6.831910,9.583409,6.900001,-6.795929,0.340344,-2.606898,5.312231,-9.341833,4.364225,8.098501,-8.626326,-1.564122,-5.857197,-2.513909,9.949444,-6.397453,-3.886606,-7.813693,-1.140979,0.802369,-2.185275,0.641959,-2.445525,-3.562734,-9.329448,-4.740585,-9.082933,4.015276,3.382877,-9.775871,-0.049571,7.848968,-2.719045,-7.089658,2.502345,-3.270018,-1.299441,9.306326,1.960641,-4.932894,-3.245831,-5.807361,5.485275,4.266728,-0.799024,3.329973,-0.479822,6.348931,6.724156,5.239016,7.888312,-3.937976,2.666868,-7.921005,1.620019,-7.788713,-3.129433,-1.666612,-9.147698,-5.656861,0.405583,6.796817,-7.304270,6.786858,1.877356,-5.474554,-4.398076,-6.432326,5.052630,7.614644,6.779888,-0.485594,-5.694754,5.757208,-8.557660,5.537138,-7.367143,7.646240,7.860233,-6.907248,8.275267,2.729069,8.250047,8.725830,1.925232,6.432224,-8.186130,-6.129912,-2.095717,9.452119,8.940718,1.354238,1.880587,-0.211476,9.056781,8.787875,-9.947639,-2.709089,-4.098144,-5.521031,-0.251069,-7.615248,1.620015,-0.683230,2.295845,-6.039646,-0.853604,-8.134031,-7.035907,9.023098,9.361524,-1.411295,8.081111,5.874648,-2.372545,3.075544,2.954773,7.723348,-8.177485,-0.805487,4.776499,-5.132156,-5.211468,6.974725,-0.924436,-1.243165,-2.455238,9.883884,-8.948540,9.974179,-0.725570,7.327721,2.580563,-5.957401,-6.292798,1.275923,7.658268,-0.104668,-8.068295,-2.295946,-3.670667,-0.961572,2.195772,-6.273670,-1.877043,-8.307606,0.161815,-6.423737,-9.534859,-0.907608,3.348496,-5.804514,-7.556484,3.766748,-9.225335,6.808957,-1.045569,9.452243,4.570286,0.155872,-4.568548,-1.942925,-5.970847,-5.606452,3.694246,0.641691,-1.782577,8.161956,-5.650329,7.144116,-5.693959,6.759012,-1.265630,-1.712340,9.486980,2.230282,3.748297,3.125076,-1.466326,-2.877232,-8.624693,-2.490914,6.977276,7.036252,-5.413518,-6.161280,0.616322,-1.700008,9.827803,9.985769,-4.922377,-5.986767,-9.322233,2.478868,0.273519,-9.708196,-9.755496,-4.003251,-3.286973,5.033164,-3.719337,7.186229,-9.546149,9.072970,-4.971129,-7.174756,3.049091,-3.607384,-1.541767,-3.944402,6.796159,8.958371,7.266890,4.381667,-4.880353,0.707275,7.638741,-7.487192,-5.121283,8.988788,9.759345,6.055350,-4.170438,-7.880522,-8.585911,-2.865297,-6.717772,8.094824,5.900224,3.588301,3.739016,-5.589835,-3.189371,-6.058008,-5.117290,0.909349,3.280215,-6.820694,1.673886,-0.538330,2.860313,0.012812,0.881121,4.281062,-9.608944,-6.227533,3.477968,-8.923934,7.010889,-4.574383,-0.683825,6.470657,9.536412,2.043082,7.598902,-2.392893,-8.585347,-3.182249,-6.617788,-5.768348,-8.299645,-3.762110,7.707220,5.863481,-8.371858,-4.708948,-0.971513,-0.611328,9.157121,-5.545488,-2.758315,5.306736,-5.218825,-6.309097,7.364796,9.931284,0.464647,-1.625895,-8.470758,6.873975,4.715579,5.200451,-5.625363,4.708484,6.145003,-4.568976,-8.953008,-8.201451,1.283885,5.036693,2.325807,-7.275291,7.742413,2.342559,4.810793,-5.240315,-5.606022,-0.154168,0.958796,-4.312510,7.059455,-7.717519,-5.692151,-1.398535,1.922346,4.907420,6.812849,6.403251,-8.554912,-3.748115,-9.524617,-4.607572,6.708211,2.330084,8.448707,4.251854,-9.229694,-7.514226,5.276484,-7.029460,3.666231,7.071450,4.475835,4.055593,-8.655116,7.507091,-3.748404,2.999247,-7.081921,-9.072778,6.654643,-4.884214,-4.851877,-2.281637,-1.543418,-8.245228,-7.080135,-3.923201,5.703404,3.232691,3.934285,-7.952460,6.242316,9.396818,-6.210159,9.164907,-3.842935,6.883757,-1.130294,-3.094539,-5.108193,-1.773788,-4.222265,-3.332194,-1.077434,8.017593,0.019400,4.603921,-2.326853,-9.104418,8.567808,-2.495115,-3.543943,-0.581718,7.596407,4.161433,6.088744,3.714042,-8.861817,7.474539,8.734244,-3.119977,-8.713285,1.791914,0.327178,4.485129,3.109900,-9.429708,2.864691,9.780661,5.114873,-1.631396,-7.874835,-1.623435,-6.411604,-9.428112,8.100125,-0.662927,-0.085892,-3.056532,3.901237,-1.159493,1.612337,-2.605982,6.138903,2.853206,-7.281381,-5.000321,5.418026,6.988781,-3.809704,-2.035998,8.033402,-1.801785,-8.332113,6.721975,-3.312881,8.987294,-0.461040,6.708333,1.216486,-9.522149,-7.534529,-0.936790,8.491908,3.533608,7.571541,2.866098,-3.345366,3.188154,-2.887843,2.634114,-8.454381,-1.858689,-7.030785,1.902144,4.444108,-2.566107,-2.908994,4.086286,-8.251049,6.259222,-7.690658,-5.703992,-0.609914,-2.032932,-4.242770,-8.661436,-4.660068,8.322639,-6.664197,-0.561495,-6.341258,6.137707,4.710538,1.579571,-5.123690,-6.676609,0.888497,0.897352,-1.487356,4.322737,5.308863,7.288456,-7.006191,3.142574,2.256136,-2.696523,-1.476064,-7.058530,1.174854,6.173653,8.376436,-7.185241,2.125554,-3.942453,8.821418,-0.465689,1.714451,-8.442750,3.516174,-4.974155,6.821388,-8.015054,8.051538,-6.847935,-0.013846,-6.843108,9.601824,5.832107,-9.683446,-0.827158,0.380422,0.794270,-4.022538,-6.798583,0.659773,4.951300,-6.451988,-2.490913,-8.354634,-4.261630,-4.819847,-1.978697,4.078415,-7.558772,-2.544197,-7.924539,-3.512518,-6.193522,7.756125,-2.529169,-0.611346,-3.630229,6.247445,-6.959680,4.466494,2.946286,6.260564,1.923885,3.182141,-9.588779,-2.568097,4.568127,-2.204229,0.651112,-7.411458,-7.912255,8.518919,1.945850,9.287676,9.239622,-7.064187,0.039677,-4.617415,7.383157,-9.259637,3.297444,-0.358719,1.491828,9.952996,-1.043148,-5.229800,-7.905944,7.129628,4.205864,8.124344,9.786780,5.034098,4.443718,6.576732,8.904078,-9.502441,-9.315411,5.292789,-0.927218,5.809689,-4.631457,5.955970,5.588572,5.193845,-8.180402,3.857324,-1.244613,-2.098527,3.157118,-1.670713,8.107217,3.653696,8.904623,-0.776303,6.612057,6.710094,1.757456,-1.949359,8.298357,1.428890,-5.999709,-8.169610,0.210853,-5.060180,-3.508668,7.883479,-1.691581,-2.380420,1.646749,5.669475,-9.003421,3.421247,4.498220,-5.475371,2.799790,-2.931333,7.730136,-9.807090,0.135144,9.656182,-4.590272,-1.592962,1.617172,-4.089480,6.198359,-5.629451,-7.187819,9.602055,6.652681,3.815476,-4.509078,9.764093,-2.692337,-9.857678,-7.472794,8.621912,4.626914,5.506102,-7.828117,7.380596,3.815142,1.864750,1.396594,-0.927511,2.740154,6.320675,3.473269,8.515624,4.582300,-1.977692,3.457450,-8.938979,9.555585,7.805011,1.588537,9.207407,-2.166731,2.706167,4.803084,1.300479,9.542706,-5.115620,9.902269,-2.842972,-1.596476,-5.546053,-0.371425,-8.797992,5.853966,-0.089917,-0.896050,2.680049,-9.203238,8.215794,-0.731595,-6.780071,6.720407,4.086435,-5.572766,5.746278,-2.558560,-6.220114,-6.490690,-1.471403,6.278472,1.724079,-5.492150,-1.121244,1.775315,-7.227647,-4.332936,6.643780,-6.834351,-3.327381,-6.484960,5.203890,-3.390685,8.811969,-5.612649,-7.715027,-0.450065,7.855023,-3.862438,-2.063601,9.877412,-0.474242,9.159121,-5.694625,-0.726802,2.017855,-5.784678,4.438514,-8.584890,-2.703936,-7.002042,-9.688487,-6.177846,9.941544,-7.217770,-4.993897,-3.682694,1.980772,-7.107463,1.209904,0.179609,6.778813,9.910162,-8.120984,3.190135,-4.599822,7.982499,8.948074,3.270307,-8.995995,-0.900312,7.147348,2.427527,-2.172330,-0.226653,-5.297544,-2.941831,-5.871344,-1.365488,-9.552503,4.455571,8.750485,5.950278,-1.387912,3.359182,-3.251917,6.139453,6.394401,2.696350,-0.444689,3.320663,9.272055,-7.997331,-0.146382,-1.942154,-2.128438,8.421558,-0.430826,-5.555177,6.100519,3.820154,2.797560,-4.315031,-7.468586,1.804614,4.141584,2.761764,-3.964206,-3.162567,4.318903,6.586191,-9.162571,2.653616,-3.405012,3.685910,-0.314280,0.240779,5.328979,-3.579860,0.996663,-6.863214,-7.755541,3.924738,2.638263,4.641909,-4.850118,8.534488,-6.878073,2.524533,-6.208647,-0.513242,-2.082800,9.300836,6.529879,9.235862,3.467463,-1.994147,7.052624,-4.388160,8.954858,4.993977,0.091439,0.970335,-4.917141,-9.783432,4.011364,3.327422,-5.989780,-5.050141,-3.345552,6.468454,2.132346,4.419885,2.904546,-5.643212,-2.940452,7.984588,-2.041826,4.678212,2.551415,8.709637,-0.091329,-5.762259,6.124438,5.489091,-5.806917,5.960205,-0.333890,2.764607,2.721942,-5.449326,3.732524,1.361920,-6.545523,-8.988955,-1.155709,0.547815,-4.604744,0.461589,-3.327552,5.539723,0.838626,-2.261864,-5.580180,-4.915880,1.557950,6.851366,-1.257216,-0.846042,9.155515,-1.905926,0.512822,-8.747900,-0.983680,6.961155,-1.264453,7.787413,-4.265716,4.697217,4.077065,-1.665648,9.046806,-3.527966,-6.828988,-6.454328,3.080773,7.547838,-7.695013,7.098463,1.371798,8.954023,1.693516,-5.486192,3.853113,-5.322500,1.196128,3.368049,-6.554413,-8.481508,4.877301,-4.211541,7.883537,8.916846,-1.930726,-4.518993,1.224480,4.717002,8.836140,-5.879978,-2.211158,4.186068,5.766613,-2.610808,-5.941051,-4.164266,2.195374,9.106391,-5.678428,8.521522,1.934464,7.487395,0.522509,1.797549,-2.169735,1.640150,0.648691,-7.364107,-3.515271,-9.077768,4.927536,-1.735787,-1.091277,5.456803,-6.866310,2.749857,4.631833,-3.470742,7.394106,6.839317,-6.345562,-5.898796,6.511461,-4.943220,0.591520,2.148267,-2.074964,-5.590670,8.040453,0.706631,-0.110932,7.951887,0.532333,-5.979153,2.256552,-5.898297,1.359623,7.859705,7.551456,-2.044810,3.338522,4.454789,7.643071,-3.830970,-1.441579,-1.646988,-9.923677,-8.084173,5.860760,-6.800835,-3.195787,-6.792757,-9.453472,-8.842574,-3.056222,-4.141923,-6.329058,7.728779,7.057870,-9.498364,4.369027,-9.548105,-2.063597,-5.851211,-5.135049,1.116762,6.575424,-5.808398,9.003645,-1.331939,3.182809,4.319409,-2.803016,4.157173,-9.613257,4.734884,-2.914830,5.103928,-8.489566,-9.992600,2.160996,9.760578,-7.030226,-8.409469,0.357027,4.557206,1.707240,-1.430446,9.751520,-1.968120,-3.714107,4.936238,6.976557,1.337194,-3.580287,-5.411300,9.459956,9.374640,9.262181,-2.515931,-0.607656,3.024945,-2.201670,3.343910,8.689141,-4.442298,-7.755908,-8.680102,-5.852440,5.318877,-5.519005,-3.678774,-5.415318,9.390738,6.096418,-4.522188,8.275721,-2.434453,3.191981,7.104977,2.825664,-8.809676,8.193451,1.658754,8.315594,3.853735,4.934261,2.338009,6.214419,9.261425,-0.689804,-0.103662,-7.530703,-8.091111,-3.805705,-3.411081,7.358319,8.387515,-1.967365,-1.501344,-4.488045,9.587298,-8.759028,3.622746,0.610290,-6.434798,-8.240656,0.276631,2.014698,-8.403160,3.631749,1.294823,-1.334220,4.432823,-0.111652,-8.414732,1.869317,-5.472739,-1.597762,6.009146,-2.678334,-7.906695], dtype = "float64")#candidate|19135|(2940,)|const|float64
call_19134 = relay.TupleGetItem(func_17718_call(relay.reshape(const_19135.astype('float64'), [14, 15, 14])), 0)
call_19136 = relay.TupleGetItem(func_17721_call(relay.reshape(const_19135.astype('float64'), [14, 15, 14])), 0)
func_16301_call = mod.get_global_var('func_16301')
func_16303_call = mutated_mod.get_global_var('func_16303')
call_19138 = relay.TupleGetItem(func_16301_call(), 1)
call_19139 = relay.TupleGetItem(func_16303_call(), 1)
func_13204_call = mod.get_global_var('func_13204')
func_13205_call = mutated_mod.get_global_var('func_13205')
call_19140 = relay.TupleGetItem(func_13204_call(), 2)
call_19141 = relay.TupleGetItem(func_13205_call(), 2)
uop_19143 = relay.log10(call_19086.astype('float64')) # shape=(3, 6, 7)
uop_19145 = relay.log10(call_19089.astype('float64')) # shape=(3, 6, 7)
func_15306_call = mod.get_global_var('func_15306')
func_15307_call = mutated_mod.get_global_var('func_15307')
call_19146 = func_15306_call()
call_19147 = func_15306_call()
func_7412_call = mod.get_global_var('func_7412')
func_7414_call = mutated_mod.get_global_var('func_7414')
const_19185 = relay.const([3.145589,-1.982505,3.669780,-0.628657,-8.161464,8.614085,4.136550,3.369694,3.465093,-1.931130,8.623978,3.293053,1.175356,-0.025757,-3.881258,0.760136,-5.064312,-9.419580,8.537715,-0.362624,4.069636,3.865314,2.501370,-1.608308,4.976789,-6.397007,8.741123,-9.177638,1.208168,2.246289,-7.303570,6.193096,-6.355624,-6.860187,-0.435626,-4.216202,-8.069724,-5.841373,-7.709768,-5.467296,-7.681327,-7.449952,9.417350,-5.557469,1.240797,-8.096622,-7.147962,6.344776,-9.210530,6.535379,-3.185772,-8.310904,5.035808,0.608039,8.450027,4.315517,-4.293116,0.948893,-7.326208,-6.504551,8.424363,1.806826,-2.620445,9.173967,-5.238611,-0.533806,-6.847262,9.993155,7.564056,5.850721,6.191335,-2.646444,-7.116643,8.835485,-1.131461,-5.050318,-7.922614,3.085323,-3.702566,0.011553,6.889615,-9.134429,-3.203075,9.916720,-2.268706,7.616113,-9.090178,5.722916,8.936060,5.701349,5.303826,-6.332139,-9.408549,-0.672633,-7.900988,9.285938,8.551683,1.307658,-6.203926,-8.556817,9.615858,-7.598449,7.908364,-9.101841,-0.940284,-0.374589,2.305076,9.757423,3.534790,1.039514,-7.001652,1.268515,-7.040277,8.009296,-9.910947,5.978814,6.316358,5.729835,6.323466,-2.798522,4.375439,2.730071,3.446686,-9.363214,8.136649,-5.398730,8.156808,3.513678,-3.677562,-0.991185,-9.827028,-8.666038,2.735329,1.994429,9.368265,-7.616073,-7.203228,2.149307,-0.778744,-8.286143,4.432908,7.534257,7.628672,-2.616872,-5.584306,-1.651256,-4.138817,-7.150312,-8.113507,4.977504,2.645160,-5.575480,8.658933,2.037108,-4.779220,2.288123,-8.620014,-8.520990,-1.105563,9.327163,7.931351,5.075173,-2.988504,0.716627,3.606008,-2.656767,-3.556764,1.471284,6.993519,0.067080,-4.573621,4.527638,-3.156611,-8.784165,8.302191,0.118532,7.656858,-7.849922,-1.937008,-9.425557,-9.860796,8.230132,-5.768983,5.931061,4.048334,1.096545,0.933168,5.884340,-9.006567,-7.200986,4.515977,-5.868113,3.963709,5.947270,-0.462159,6.850862,-4.954753,2.871064,2.840547,-7.317551,8.426430,5.117202,8.059590,-5.185321,-2.093854,7.700422,-2.401658,9.540268,-7.048347,-9.651088,-5.962613,-3.796593,-2.797727,4.219779,-7.268922,-0.562476,8.224918,-0.059655,-4.897434,-4.063895,-3.578584,5.006330,6.236159,-9.339775,8.446847,-5.802971,-3.460294,-8.529132,-9.860417,3.986442,-9.240753,3.381277,4.923918,-7.489033,-8.761376,-3.226162,-8.366384,-7.016968,-2.492740,8.987501,2.463311,-7.922446,-5.431987,-9.706905,-5.807997,5.772353,2.800395,5.112890,5.443485,5.830599,-9.083884,-4.003653,8.314834,5.796178,3.588023,3.520749,-6.086463,-0.132835,-9.852905,-6.722110,-2.875798,5.324272,-0.925383,-3.486310,-9.983622,2.972016,-5.476819,3.617519,-8.313499,6.669268,-2.678836,-7.116602,-1.686454,4.611111,4.351140,-3.196705,-7.154441,-0.943390,-4.744613,-8.611453,-7.246982,9.524082,9.225105,-2.806409,3.572624,0.765583,-6.817597,7.158003,-2.755963,5.506618,-0.090726,-0.033862,-9.252569,6.008336,8.558863,8.963162,1.618680,-3.737000,-9.536918,0.505333,8.044814,3.816429,-7.624292,-2.387220,7.455272,3.231646,7.958895,-4.758003,-0.821153,-1.366955,0.359942,4.561302,4.772570,3.964602,-8.239806,2.906306,3.020236,3.128791,0.204171,8.130944,2.450409,-4.609523,-4.870248,-9.365722,-5.812231,-6.134322,0.415011,4.452485,-6.043355,-2.319997,4.870100,-1.373060,-2.126130,-4.590662,1.398326,-7.073784,-2.224248,-8.209562,-7.964126,6.438050,5.074054,-4.251836,2.329916,1.591483,8.823155,-7.453757,-3.942650,4.191956,-6.331501,-2.085410,6.703691,9.316620,-6.798157,-8.202805,-1.074563,9.167389,-6.195901,-6.433618,0.443808,6.063894,5.278566,7.462852,-1.598037,-0.809704,1.339538,-4.270379,-2.385526,-7.074120,1.881402,9.624559,1.691672,-7.288899,-9.517226,5.024678,-8.514960,-6.756435,8.432777,0.552895,2.050873,-4.928217,1.056628,0.462888,-1.372010,-6.046219,5.468447,-0.031864,-6.513241,-1.982200,4.282265,5.019876,-6.780041,-3.429916,1.078815,5.724841,4.402064,8.697630,-5.325009,-5.418471,2.342114,6.079360,-1.173692,3.245247,-6.033406,-0.273849,8.514039,4.669254,9.117073,4.337862,-9.762290,1.566624,0.777614,-9.520450,-4.974565,-8.057358,8.667356,-4.366301,7.301992,-5.652563,8.106573,-0.253461,-7.838413,-6.551725,3.482288,2.810798,-6.188216,9.630631,5.558290,4.085567,6.170489,4.550283,7.176257,-8.448925,3.893494,-9.603951,0.102844,-1.074029,6.387065,-9.248492,-6.621479,-1.093370,-9.319424,-3.019669,4.864229,1.823167,-4.614778,9.961187,-2.230183,-0.034469,-8.572302,-4.209029,5.534923,-0.292544,3.366128,5.865637,-9.617232,-2.323115,-4.872796,-6.716129,5.162647,-2.434868,8.442235,2.738923,9.037176,5.526541,2.824414,-2.821965,-6.491764,9.004772,9.253889,-6.050617,-3.218686,-5.713618,6.901399,-8.004461,7.466578,-0.241140,-3.068175,-3.898821,-7.666963,4.517343,-4.640990,-5.540623,-8.050446,-5.995176,9.878016,5.082938,-8.707938,-8.855895,8.815331,-9.599326,5.639940,9.578346,-9.931539,9.612280,2.400569,-8.696525,-5.513128,7.864598,-5.643738,-8.468082,-1.457564,6.724933,-4.018056,-6.286727,-7.696176,-6.217874,-8.320892,8.301244,6.027705,3.342877,-3.980005,-8.763644,-6.768832,7.878541,-3.038879,-4.179691,-8.383453,0.948968,6.986472,-0.785942,-8.686233,4.283614,-4.713151,6.418236,-7.183444,-7.028877,4.364262,5.362250,-5.926064,-4.876922,6.372029,1.350961,2.743210,-0.442145,6.987215,-0.244166,5.171934,-4.929671,4.955385,1.020755,-5.364976,-2.266653,0.258701,3.603805,-6.524281,-0.285797,1.801009,4.368977,-8.931736,7.901489,-8.763184,8.013378,-4.058644,3.750710,0.032197,4.015961,5.338284,5.963189,7.572377,-4.791233,2.725016,5.794263,8.802439,2.972235,-5.771388,7.590778,-9.610595,-3.305517,-8.220939,-9.975315,3.547104,5.894542,3.872247,9.638962,2.689033,4.356117,-6.050077,9.406190,7.605109,4.534099,-8.118207,8.582666,6.648667,8.364389,7.674527], dtype = "float64")#candidate|19185|(585,)|const|float64
call_19184 = func_7412_call(relay.reshape(const_19185.astype('float64'), [9, 5, 13]))
call_19186 = func_7412_call(relay.reshape(const_19185.astype('float64'), [9, 5, 13]))
func_14326_call = mod.get_global_var('func_14326')
func_14328_call = mutated_mod.get_global_var('func_14328')
call_19214 = func_14326_call()
call_19215 = func_14326_call()
var_19217 = relay.var("var_19217", dtype = "float64", shape = (2940,))#candidate|19217|(2940,)|var|float64
bop_19218 = relay.mod(const_19135.astype('float64'), relay.reshape(var_19217.astype('float64'), relay.shape_of(const_19135))) # shape=(2940,)
output = relay.Tuple([call_19058,call_19077,var_19078,const_19087,var_19088,call_19134,call_19138,call_19140,uop_19143,call_19146,call_19184,const_19185,call_19214,bop_19218,])
output2 = relay.Tuple([call_19059,call_19079,var_19078,const_19087,var_19088,call_19136,call_19139,call_19141,uop_19145,call_19147,call_19186,const_19185,call_19215,bop_19218,])
F = relay.Function([var_19078,var_19088,var_19217,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_19078,var_19088,var_19217,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
	relay.transform.ToBasicBlockNormalForm(),
	relay.transform.FuseOps(3),
	relay.transform.DefuseOps(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

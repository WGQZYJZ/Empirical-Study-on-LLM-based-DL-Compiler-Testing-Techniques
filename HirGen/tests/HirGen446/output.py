import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
const_44 = relay.const([[[6.564493,8.124383,-4.038099,-9.928736,-0.378449,5.641781,-7.546343,-8.835999,3.812194,8.275996,-6.467230,6.827239]],[[6.455220,7.335681,5.270225,-5.414482,-8.220703,0.503343,-9.974952,4.155807,-5.511523,8.915726,-3.157540,-3.792261]],[[5.890945,4.981266,9.162301,-2.480719,9.834543,-3.581566,3.118113,3.510175,-1.743108,-1.629257,-5.704905,9.603499]],[[0.076137,-2.753992,-5.401827,0.335418,-0.473901,-2.896610,-3.383448,-6.665853,-5.175946,-0.717401,1.486991,6.862444]],[[-2.821778,-6.795981,5.095860,1.676837,-3.849445,7.570706,-1.286830,7.941884,4.328496,-8.469553,-3.255878,3.479985]],[[3.230113,-4.598884,0.021942,2.740846,-3.706955,2.755446,3.376834,-9.282886,-6.008600,2.135405,-3.448779,2.816585]],[[-5.323011,5.022827,-0.005284,2.039884,0.405456,-1.012693,4.756616,-1.572058,-3.042565,-5.476647,5.522654,4.100306]],[[-5.155387,-6.514035,5.196505,-9.259078,-7.773229,3.435986,-7.232457,-8.850806,-6.172048,-5.440277,-8.267306,5.395347]],[[-4.560567,6.355208,-7.800925,2.364111,2.835114,-5.537819,6.225183,-1.884901,-9.364166,-9.370907,-5.031816,-6.781723]],[[-5.887077,-0.267007,-4.325011,0.910956,4.723015,-2.353194,2.241444,-7.732921,1.491538,-0.828251,5.083949,-4.563773]],[[-0.355935,-0.550911,-5.649967,3.995768,-1.286074,2.160288,-2.590625,6.753894,4.403264,9.268526,-6.173777,7.545644]],[[-3.807297,-8.195413,-1.611722,-6.959481,-1.079880,8.563697,9.184684,4.041576,0.526761,-6.129251,2.659885,6.351795]],[[3.986851,2.886224,2.755762,-8.959542,-6.653225,5.774689,4.848864,6.284866,4.275214,-4.153311,-6.729437,-5.433248]],[[0.713963,6.104335,-9.457330,2.432642,0.843703,9.355213,-3.628043,7.897527,8.487059,9.530783,-6.649250,-7.425192]]], dtype = "float64")#candidate|44|(14, 1, 12)|const|float64
uop_45 = relay.acosh(const_44.astype('float64')) # shape=(14, 1, 12)
uop_51 = relay.asin(uop_45.astype('float32')) # shape=(14, 1, 12)
output = relay.Tuple([uop_51,])
output2 = relay.Tuple([uop_51,])
func_59 = relay.Function([], output)
mod['func_59'] = func_59
mod = relay.transform.InferType()(mod)
output = func_59()
func_60 = relay.Function([], output)
mutated_mod['func_60'] = func_60
mutated_mod = relay.transform.InferType()(mutated_mod)
func_59_call = mod.get_global_var('func_59')
func_60_call = mutated_mod.get_global_var('func_60')
call_83 = relay.TupleGetItem(func_59_call(), 0)
call_84 = relay.TupleGetItem(func_60_call(), 0)
uop_89 = relay.log(call_83.astype('float32')) # shape=(14, 1, 12)
uop_91 = relay.log(call_84.astype('float32')) # shape=(14, 1, 12)
output = uop_89
output2 = uop_91
func_99 = relay.Function([], output)
mod['func_99'] = func_99
mod = relay.transform.InferType()(mod)
mutated_mod['func_99'] = func_99
mutated_mod = relay.transform.InferType()(mutated_mod)
func_99_call = mutated_mod.get_global_var('func_99')
call_100 = func_99_call()
output = call_100
func_101 = relay.Function([], output)
mutated_mod['func_101'] = func_101
mutated_mod = relay.transform.InferType()(mutated_mod)
func_99_call = mod.get_global_var('func_99')
func_101_call = mutated_mod.get_global_var('func_101')
call_133 = func_99_call()
call_134 = func_99_call()
func_99_call = mod.get_global_var('func_99')
func_101_call = mutated_mod.get_global_var('func_101')
call_151 = func_99_call()
call_152 = func_99_call()
func_59_call = mod.get_global_var('func_59')
func_60_call = mutated_mod.get_global_var('func_60')
call_157 = relay.TupleGetItem(func_59_call(), 0)
call_158 = relay.TupleGetItem(func_60_call(), 0)
bop_160 = relay.logical_xor(call_157.astype('uint16'), relay.reshape(call_151.astype('uint16'), relay.shape_of(call_157))) # shape=(14, 1, 12)
bop_163 = relay.logical_xor(call_158.astype('uint16'), relay.reshape(call_152.astype('uint16'), relay.shape_of(call_158))) # shape=(14, 1, 12)
bop_175 = relay.right_shift(call_157.astype('uint32'), relay.reshape(bop_160.astype('uint32'), relay.shape_of(call_157))) # shape=(14, 1, 12)
bop_178 = relay.right_shift(call_158.astype('uint32'), relay.reshape(bop_163.astype('uint32'), relay.shape_of(call_158))) # shape=(14, 1, 12)
func_99_call = mod.get_global_var('func_99')
func_101_call = mutated_mod.get_global_var('func_101')
call_179 = func_99_call()
call_180 = func_99_call()
output = relay.Tuple([call_133,bop_175,call_179,])
output2 = relay.Tuple([call_134,bop_178,call_180,])
func_181 = relay.Function([], output)
mod['func_181'] = func_181
mod = relay.transform.InferType()(mod)
mutated_mod['func_181'] = func_181
mutated_mod = relay.transform.InferType()(mutated_mod)
func_181_call = mutated_mod.get_global_var('func_181')
call_182 = func_181_call()
output = call_182
func_183 = relay.Function([], output)
mutated_mod['func_183'] = func_183
mutated_mod = relay.transform.InferType()(mutated_mod)
func_181_call = mod.get_global_var('func_181')
func_183_call = mutated_mod.get_global_var('func_183')
call_204 = relay.TupleGetItem(func_181_call(), 0)
call_205 = relay.TupleGetItem(func_183_call(), 0)
func_59_call = mod.get_global_var('func_59')
func_60_call = mutated_mod.get_global_var('func_60')
call_216 = relay.TupleGetItem(func_59_call(), 0)
call_217 = relay.TupleGetItem(func_60_call(), 0)
var_218 = relay.var("var_218", dtype = "float32", shape = (14, 15, 12))#candidate|218|(14, 15, 12)|var|float32
bop_219 = relay.floor_divide(call_216.astype('float64'), var_218.astype('float64')) # shape=(14, 15, 12)
bop_222 = relay.floor_divide(call_217.astype('float64'), var_218.astype('float64')) # shape=(14, 15, 12)
var_228 = relay.var("var_228", dtype = "float32", shape = (14, 14, 12))#candidate|228|(14, 14, 12)|var|float32
bop_229 = relay.power(call_204.astype('float64'), var_228.astype('float64')) # shape=(14, 14, 12)
bop_232 = relay.power(call_205.astype('float64'), var_228.astype('float64')) # shape=(14, 14, 12)
func_181_call = mod.get_global_var('func_181')
func_183_call = mutated_mod.get_global_var('func_183')
call_233 = relay.TupleGetItem(func_181_call(), 0)
call_234 = relay.TupleGetItem(func_183_call(), 0)
output = relay.Tuple([bop_219,bop_229,call_233,])
output2 = relay.Tuple([bop_222,bop_232,call_234,])
func_235 = relay.Function([var_218,var_228,], output)
mod['func_235'] = func_235
mod = relay.transform.InferType()(mod)
var_236 = relay.var("var_236", dtype = "float32", shape = (14, 15, 12))#candidate|236|(14, 15, 12)|var|float32
var_237 = relay.var("var_237", dtype = "float32", shape = (14, 14, 12))#candidate|237|(14, 14, 12)|var|float32
output = func_235(var_236,var_237,)
func_238 = relay.Function([var_236,var_237,], output)
mutated_mod['func_238'] = func_238
mutated_mod = relay.transform.InferType()(mutated_mod)
func_99_call = mod.get_global_var('func_99')
func_101_call = mutated_mod.get_global_var('func_101')
call_258 = func_99_call()
call_259 = func_99_call()
uop_262 = relay.atan(call_258.astype('float32')) # shape=(14, 1, 12)
uop_264 = relay.atan(call_259.astype('float32')) # shape=(14, 1, 12)
output = uop_262
output2 = uop_264
func_265 = relay.Function([], output)
mod['func_265'] = func_265
mod = relay.transform.InferType()(mod)
mutated_mod['func_265'] = func_265
mutated_mod = relay.transform.InferType()(mutated_mod)
func_265_call = mutated_mod.get_global_var('func_265')
call_266 = func_265_call()
output = call_266
func_267 = relay.Function([], output)
mutated_mod['func_267'] = func_267
mutated_mod = relay.transform.InferType()(mutated_mod)
func_265_call = mod.get_global_var('func_265')
func_267_call = mutated_mod.get_global_var('func_267')
call_308 = func_265_call()
call_309 = func_265_call()
func_235_call = mod.get_global_var('func_235')
func_238_call = mutated_mod.get_global_var('func_238')
var_313 = relay.var("var_313", dtype = "float32", shape = (6, 420))#candidate|313|(6, 420)|var|float32
const_314 = relay.const([[8.136356,7.336099,-9.399642,3.038915,7.047783,-2.164089,1.111315,4.705545,-1.844996,-2.227839,8.071339,-2.364153,9.879389,7.943428,6.054270,-8.673069,-4.308955,5.744868,8.056262,7.782893,9.954447,4.733864,-8.460873,7.348987,-5.649400,9.116585,-9.677607,0.383441,-9.997356,4.596056,9.458513,-7.442989,2.913936,-4.038541,-1.925198,-6.676883,3.828349,-4.776369,-5.226202,-3.412986,7.819978,-5.251746,9.630005,-4.264317,-8.980974,0.279093,9.066267,-0.749956,-2.292658,2.023493,-4.383565,-9.597084,-6.589155,5.096325,-9.334098,2.636303,3.240944,-1.761574,9.475639,-1.305342,-0.645645,9.368584,8.239188,2.413191,-8.775837,-0.631075,-6.234854,-6.018622,-7.979187,5.647106,8.407834,-4.677032,-7.618213,-2.844016,9.490411,-5.888790,-2.999211,1.414596,3.492485,7.730081,-7.724056,-3.647636,-7.582285,0.916447,-1.926641,-8.484679,4.627949,-9.557990,0.260963,-7.688283,-5.825629,-0.445638,-0.225495,-9.042323,-9.794244,-5.643910,-1.198110,3.793493,9.947483,7.176708,2.601502,-2.748751,-5.054915,4.563882,4.225553,1.441779,-8.455588,-9.936981,2.139582,-2.915467,7.095063,-6.634427,1.051368,-9.667291,-6.205167,-8.796455,2.641606,0.618368,3.604262,6.348782,-1.271123,-0.808291,4.048172,4.018079,-6.119682,-7.782742,-4.190911,1.259368,9.825520,9.415981,1.796695,4.376593,-6.716007,-5.898952,6.530046,-3.079362,-6.475863,-6.277443,5.892381,1.505980,3.103762,1.227991,-1.397226,3.786368,4.302780,-1.373077,-7.693952,3.118768,-1.914556,0.532166,-5.447006,3.477469,-5.892379,-0.695851,3.914431,7.490402,7.035830,8.043119,3.061003,4.354191,7.706713,3.351804,-6.767369,-9.795432,8.221525,-4.469447,9.105386,-6.761472,-0.105203,5.814730,-2.753667,-6.702097,-6.554961,-7.563447,2.818008,-7.489424,8.942141,-5.892409,-3.318336,-5.368786,-3.709900,5.825689,-5.598636,-6.964817,-2.202227,-2.358588,-2.404498,1.085262,-1.253862,2.664654,5.079643,-1.775508,1.564826,-0.467712,8.585391,8.770974,-3.752747,3.916704,2.690268,6.263556,-2.709257,-4.579388,-8.452685,8.708550,2.157859,-7.868030,-7.870640,4.291239,-3.483055,4.529166,-6.331462,8.193969,-5.379311,8.822459,-8.556127,9.616491,2.928834,-1.473877,3.410390,-5.584179,-8.827168,-9.339243,-8.519928,-9.959154,7.370574,-7.658944,0.756382,-1.523039,6.677240,5.072675,-9.476146,-8.501276,-7.594064,-1.295372,-3.318641,0.559955,7.225044,5.843293,8.547587,-3.554582,9.806193,9.069257,5.863731,-3.200763,3.441510,-5.199231,6.825631,4.738788,1.306182,4.277620,0.219996,-0.529999,-1.936477,-4.498222,-3.862796,6.719229,8.955463,-1.851373,-3.642971,1.966656,-2.851257,-3.092815,-7.692148,0.444629,2.864624,3.799769,6.060408,2.572350,1.711121,-9.271729,6.947967,-1.166413,-2.899987,2.159297,0.191213,-5.822143,-3.055299,7.489638,8.519464,3.619208,-9.236922,6.639536,-9.081780,9.462813,-8.600455,4.224019,7.357018,-3.307154,-9.176058,5.152801,5.447052,7.285536,-1.690500,-0.309659,-3.245817,-2.665328,3.315356,-6.289031,-1.563485,2.648973,6.054198,-1.812014,-7.531876,-4.321281,-3.185499,2.426882,-4.168833,-7.007259,0.595128,-4.821568,-1.794135,-3.798652,-3.932667,8.114028,6.221209,3.265342,-4.149112,6.294558,-6.412954,7.069345,2.375726,-6.593451,-8.889057,-0.782690,-7.281421,6.241052,6.867199,-6.343956,-4.357044,3.458667,-1.727118,6.736648,-3.248698,-6.939342,-2.177458,-0.401703,-2.220698,1.239978,4.721872,-1.325457,-2.012239,-5.886044,-8.709694,0.806109,-3.825185,-1.406152,3.956660,7.323150,-0.683744,4.462949,-7.747181,4.705744,-8.194854,9.768463,-8.223637,5.146560,7.936098,9.700400,-5.438822,-2.118595,9.910706,-0.370910,-1.863781,-1.466497,6.132653,-5.565684,2.508656,-3.421181,-8.928248,5.073941,3.833875,-5.536700,-9.141494,-4.084205,-3.929441,-0.322305,3.010757,9.675574,-2.382907,7.457360,2.138407,9.433904,8.592366,-5.304042,0.247754,-5.899017,8.029254,5.331582,-8.551133,-8.934319,5.678152,-3.763019,0.057436,-6.344248,-2.162793,9.936589,9.997009,-7.689464,-2.026541,8.432219,9.647067,1.415211,-5.564962,-4.849326,-9.595187,5.979758,6.325087,9.350410,6.164939,1.246137,3.128709,9.470957,2.114819,9.046464,1.243171,-1.364947,-1.216966,9.050333,-5.954555,-0.987265,-5.686463,-1.911205,8.491176,7.567184,-5.600076,-5.884120,7.187836,-2.116809,-8.786671,5.325540,-6.989754,-7.392238,0.886747,4.897883,4.991011,-1.059434,-9.899069,-5.740127,-6.469827,-1.323060,-0.724875,-5.214714,2.352485,-1.805646,-1.511867,1.852413,6.155670,-3.021857,8.757006,0.703121,7.558033,-1.744221,-1.484580,4.597605,-9.256699,2.289331,3.719624,0.992203,8.194193,-4.609638,9.734437,-1.243378,2.647658,4.749460,3.713021,4.636459,-8.997166,-4.514235,-0.053897,-9.033715,6.709243,4.110098,8.151560,5.236470,3.958118,9.202618,7.067757,4.946195,-3.575270,6.889473,8.843124,-9.880170,4.253701,1.908083,-6.801409,-1.592253,9.523091,-9.766684,-0.046292,1.320052,0.438449,-7.128685,6.243798,2.545892,-9.740237,4.218034,-9.468724,-2.628040,-7.688827,7.451061,9.894380,-9.116978,-9.200705,3.961133,1.112564,-3.220954,4.522110,8.394774,-8.663795,-9.598920,-2.625278,4.749229,5.785611,-1.487505,1.741628,3.967662,6.234815,6.545638,-2.868884,5.334328,-6.511416,3.272156,-4.726359,-4.038003,9.281456,-9.066543,-0.526068,-6.857033,9.768546,4.551540,4.087014,8.275878,-9.759978,-8.166408,3.449471,-1.974044,1.110508,-8.739995,7.270872,-2.282956,3.251876,-0.085320,-6.458726,-7.705266,7.501272,-3.773801,-6.239100,6.715882,1.153997,2.152516,0.581783,-6.662923,8.769381,6.141830,4.654850,-1.900895,-1.489535,-3.190715,7.865648,-4.735497,-9.450377,4.502454,-0.169369,5.439459,-1.650046,-2.459698,3.788376,-2.598449,5.175577,4.264548,-0.297553,-4.644828,-9.243897,4.300894,8.174095,-9.907083,2.564333,-6.968811,-1.227386,6.702793,-0.713919,0.089480,-7.742974,9.952173,7.683148,-2.248652,-7.840618,-1.064407],[6.922690,-6.401196,8.784205,-4.772667,4.195683,-1.586291,-5.122673,-3.210042,1.224635,-0.157644,-9.939923,-0.803592,-1.868303,9.464241,4.948621,9.654053,8.907937,4.134919,-4.135740,4.696019,-6.800048,-8.243387,1.435726,5.753549,-4.082274,-4.731447,6.678051,-1.086653,9.543183,-1.739061,1.614202,5.292065,-5.444037,8.058366,-0.251077,-0.424463,-9.440229,-3.369839,4.071283,-6.655638,0.727867,-3.995951,0.514180,6.110821,-8.730292,8.260023,3.851458,7.383727,3.136105,6.536058,2.314414,-7.747849,-0.834303,-5.656978,3.306074,9.331532,0.154868,8.243588,-9.092663,-2.507050,5.714110,-4.209439,-7.908285,-8.555278,-4.894829,-7.549481,1.920051,3.632465,6.820099,0.721933,-7.647045,6.428369,5.589154,9.524707,3.703130,-9.429638,4.817082,-5.364529,-3.749892,-0.397145,-9.700371,9.476175,4.331134,5.873361,-9.109716,9.789551,6.477420,-0.523850,-5.930230,-2.012984,0.272666,-0.991219,7.048610,2.636055,6.333699,-3.305110,-5.554195,2.042246,-0.045631,-3.537434,2.165218,0.428647,-0.870728,0.448228,0.411223,4.303372,4.955920,-6.911887,-5.417419,-4.499492,2.234123,7.030811,-6.079155,1.350778,8.408182,1.639320,-5.761323,2.687845,6.590883,0.283807,-8.066230,0.847408,-6.258142,-3.418551,7.390611,-6.457134,6.536525,-7.961552,-0.966075,-9.809802,7.491842,-9.089391,-9.864813,2.948066,6.966800,3.818498,4.373711,2.585564,-5.720640,-3.607562,-0.335803,-4.275656,-6.225419,-5.183533,-5.465380,-7.008225,-6.819243,7.444867,-3.482412,-8.592951,4.841047,0.336237,0.066399,-8.557882,-5.568932,4.631266,3.345713,-6.242940,9.915666,-4.679916,5.918706,6.866522,-2.746780,-3.623581,6.934253,-7.792067,-0.371588,1.693526,-9.385006,1.416926,-1.693040,0.322536,-3.854378,4.100846,-0.387486,-2.684524,-2.789119,-5.067346,-5.575588,5.670609,3.190546,9.172435,8.487069,0.741192,-5.401157,-6.242108,-0.021083,1.711836,4.974111,-5.895241,-0.016679,6.088421,-0.988303,7.673384,9.182674,2.994247,-0.814260,-1.378303,8.356839,3.634379,8.551171,1.800637,-9.383529,-9.761314,1.593232,2.077167,7.775399,8.575337,-4.520028,0.384684,7.151567,0.427925,9.576084,-5.573178,6.267096,-6.419036,6.144478,-1.466881,-5.986362,-0.281021,9.569180,-2.369689,-9.873471,7.786481,-9.819575,-7.028037,7.154045,-2.792658,-2.254352,3.028433,-7.887827,-0.993365,8.611976,7.420340,5.694400,-8.518017,-5.560781,-7.055305,-8.884494,1.978825,-4.231711,-9.562720,7.127835,-1.391316,9.836466,-6.214553,8.417354,-7.698954,0.237685,8.127423,7.214646,-1.868562,-8.131353,-0.741896,-0.956141,8.565727,-7.212728,-2.065388,-7.274637,9.762689,-8.803921,-9.360046,-6.346420,9.964894,-1.591001,-9.291212,-6.096491,0.759987,1.143795,7.975227,-0.700536,-2.690764,-4.605355,-7.557492,4.219326,9.174506,7.737173,-1.059665,-9.530044,-8.413639,-2.723763,-1.109431,2.483987,8.592697,3.530544,-1.070929,1.055256,-0.136585,2.286728,6.029440,-0.609371,-2.902533,-1.174983,8.415269,-9.484793,2.610549,9.102933,4.503696,-6.234678,1.248133,8.088658,8.880248,6.467794,9.387260,-2.683797,8.942497,7.612047,8.937800,-3.471697,-4.692305,-8.336153,3.771571,4.691465,-7.067992,4.434343,0.229405,3.190214,-1.459305,0.089771,8.681103,-0.260139,-7.452280,-1.873278,1.136318,8.350237,-2.300704,2.184097,7.473761,-4.440237,-8.892879,5.697555,1.019573,-8.370000,9.093878,3.320230,-3.319008,-6.225854,2.038753,-1.335015,0.018232,-7.509713,1.366206,-3.533179,-6.965143,-9.965117,-4.991714,-4.770710,-3.185892,3.481787,-1.582239,-8.083900,-8.544080,-0.235705,3.826339,-1.109624,-4.689930,-3.456175,9.812395,-9.343052,-8.675523,-0.276992,-4.414291,-2.204168,-7.567548,5.704562,-5.527048,5.468848,-0.638747,-2.317408,-1.609298,-6.010019,5.700929,-6.098300,5.639979,-2.597338,0.539112,6.459438,6.170354,-0.140065,6.095400,2.103119,1.471446,2.630342,-0.229262,2.651039,-7.530019,2.424116,2.772250,-7.328349,-9.679108,-7.352819,-1.849381,9.370660,2.933726,9.879534,5.568018,-9.832330,3.754089,-7.450925,5.672868,-6.591370,-0.410593,2.186074,8.894845,-6.201185,-6.280379,3.582794,-3.441196,-0.774200,-8.811973,2.546434,-0.524651,-0.924542,3.856994,3.197007,-4.570679,-1.325015,0.306145,-4.233066,-6.434260,-2.343709,2.733823,6.011154,4.700368,8.139457,3.378573,5.139260,-7.397355,7.820710,1.603838,-7.995980,-0.130220,-8.762980,-4.923605,-2.724899,1.131714,7.540526,-2.356291,0.307477,7.046642,2.836032,0.726363,-6.630289,-2.038535,9.385621,0.983312,8.154399,-5.678801,7.405072,7.238238,4.039657,5.469425,5.511819,4.344768,2.156579,-4.827674,1.792951,7.307903,9.813488,5.957127,1.683819,7.118347,-2.598952,-1.262538,-6.071507,0.684725,7.204655,9.114867,-3.470568,5.606659,8.823613,-5.574906,7.595911,-1.370351,5.006195,1.381152,-8.869181,-3.616291,-1.954351,7.337557,-7.843645,3.124512,2.949693,-2.246710,5.650452,7.048339,2.003245,-3.214594,3.885076,-9.767868,-9.825833,-9.361151,-3.073771,-9.397958,6.760848,7.020542,-3.509750,3.228366,0.710622,-3.964783,7.972157,3.750649,2.893851,3.107145,7.529363,-1.533659,5.574705,-9.642449,9.094992,9.465461,-6.437239,-1.423263,7.325588,-7.975232,1.473167,8.312633,-7.268449,-7.795318,-7.003363,2.270450,7.258513,-7.572526,-8.868325,-3.368545,5.241357,-4.081154,-5.697213,-3.238522,2.719469,0.933895,1.509004,0.420632,9.774483,-9.389381,-3.122032,9.542978,5.130570,-9.257610,3.420399,2.684478,-9.268691,-9.390548,-5.325436,-5.623696,-7.287964,-5.558636,6.057652,0.147785,9.412519,-4.251369,9.384545,7.354520,9.339469,-4.709590,-4.043144,0.990649,-6.875463,-9.395094,0.002790,-6.726864,-1.835262,7.693198,-5.494208,-5.649775,-8.444306,9.287711,0.439269,-1.021939,0.783863,6.915091,-1.015647,-5.129200,-9.277419,9.434426,-8.410628,4.494323,8.555691,-7.108124,-3.939030,1.377551,9.412471,-0.279843,-0.532835,-3.691048,-2.601432,9.412981,-7.088900,6.337121],[-7.616992,-6.020077,-8.351946,3.452269,8.233139,8.396104,4.941652,-8.034754,-2.207024,1.824334,-7.250864,-2.194809,1.121284,8.173246,8.600350,-7.714251,-7.358507,-6.987310,6.360347,-7.044043,5.305364,-1.568987,-8.733169,-1.470452,3.402088,0.273766,6.247676,-4.070205,-8.400073,-4.546905,-9.216627,4.552782,-9.075830,4.793310,-5.207232,-0.312451,-1.702882,-0.251403,8.976099,2.330050,-5.617277,-0.253209,-2.108373,-4.985379,9.800546,-9.902032,2.375780,-2.644987,-8.176365,0.261165,5.147231,-5.392249,-9.658248,-5.539378,9.538980,8.595573,9.935100,2.033041,-7.862511,-8.182136,2.443565,-4.021888,-6.206700,-3.020274,-4.621438,9.255818,0.541607,3.801290,-7.076892,5.870996,6.379663,6.293070,8.280409,-4.486587,-9.131009,0.762767,-2.755796,1.728507,-3.122385,5.266385,2.673965,-9.758795,-5.426343,6.547063,0.632654,6.174763,9.850253,8.428553,1.346421,-3.211727,-5.983817,5.516792,5.428207,-0.284469,-7.582395,2.477529,-5.614032,-4.515371,1.769591,-9.480720,0.566994,-4.602930,-9.333012,9.483543,0.594467,-1.537461,1.022169,-4.203678,-4.898339,-7.782195,-1.026548,-4.090993,6.487512,-2.872168,-4.609249,6.728387,-0.789072,-6.565071,-5.354332,-1.315977,-9.508965,6.527100,4.077155,-6.021366,-8.266686,-1.039781,-7.865126,-7.647744,-7.158862,0.627130,7.255453,-5.114106,-2.450489,-5.096477,-2.199803,-7.567812,8.984816,-0.462404,-0.208588,-2.339626,8.637568,2.060387,-8.546558,5.524785,-7.118348,7.082722,3.710537,3.677435,4.187825,-2.116076,0.839356,-7.842877,7.463061,5.810810,5.970166,-7.107354,-0.886840,1.044023,3.359118,0.285013,6.955052,1.264944,-5.161510,-1.849353,7.772638,7.592129,2.419346,5.293466,-8.382209,-7.657049,4.298093,-8.668416,0.939649,-3.649410,-0.113964,-1.667305,-0.279857,5.452112,7.347464,-9.698734,-3.019975,6.473912,5.895249,-6.547791,1.907681,-0.180598,-7.873332,-7.384148,-0.424302,-9.668681,4.890779,-0.217011,6.843215,-4.295032,8.404839,9.538838,2.530760,0.835615,5.264857,-7.388650,4.319411,0.021189,-2.430835,7.241836,-3.475175,2.555485,-7.947985,-2.352202,0.337626,-8.962242,3.879082,9.457372,-9.956358,-2.710566,-6.011928,-7.331861,5.744307,5.177199,-3.858265,-3.680499,0.651658,-5.173704,2.731168,3.190508,8.328874,5.722837,5.202576,2.045627,9.127763,4.973456,8.569408,2.394731,-5.553135,-1.186591,5.996068,6.741110,-2.867872,4.385948,-5.613199,3.213586,-4.679792,2.206389,5.503799,-6.455646,-5.939621,-5.561628,9.119071,-2.460314,4.647573,-0.683948,1.528287,0.590228,2.306860,7.084601,0.055270,-1.388910,2.035001,7.448842,-2.740224,9.040078,1.250255,-3.075372,-9.552426,-2.931654,2.145794,-8.027503,0.583654,9.082411,-6.245004,-1.553719,8.885349,-1.621928,-7.093346,4.480980,2.544881,3.284387,-9.142738,5.114258,-1.859596,-4.200247,5.126053,-3.648091,-1.707550,5.930462,-3.561990,-6.543841,-5.105287,-7.008173,-1.533364,-4.556248,2.354773,0.468372,0.363565,-4.804731,-3.112561,-4.494053,2.664258,-9.697833,-8.036092,5.951165,-6.947565,-6.439417,-8.711958,3.267913,-2.253067,-4.905074,-8.922927,5.993780,-3.932129,3.661917,3.044640,-0.218698,6.438632,-1.592229,2.371939,-4.636960,-0.865831,-5.618813,-9.920775,9.546319,8.217670,-2.736150,5.841641,-0.957909,8.875283,1.147748,3.704327,0.977200,-1.131670,-0.616640,7.494254,8.691822,5.609665,-8.310715,-3.772628,-7.134099,6.193217,0.944362,-9.870305,2.412662,4.962607,-5.587589,-7.337594,6.498710,-9.952149,-3.224412,4.482590,2.298038,-8.059288,-8.754259,1.334035,-1.659409,4.993410,-6.148620,1.233158,5.424679,-6.939124,0.547263,1.041400,5.903414,-5.966932,-6.577403,-2.194523,-4.105854,0.929401,7.533290,2.884417,-5.908173,3.942285,8.676674,-2.514097,8.143209,-5.317978,5.208960,-4.605268,7.246286,5.151808,-0.585275,3.365896,-3.815769,0.657668,-5.348910,7.198519,5.103805,7.861113,-6.457275,8.852102,-6.491994,-3.683120,6.570836,-1.002924,-1.690032,-0.319564,1.126089,1.155434,7.313801,6.241393,-9.735721,-4.625153,4.187089,-2.335612,2.044703,-4.375043,6.173396,4.778359,4.537127,-6.656797,1.897677,-9.284288,-0.164152,-4.933236,-7.545155,1.687607,1.074289,-8.719144,5.834121,-3.920719,-4.437043,-5.296930,7.063979,-5.407056,-2.433864,-4.922413,-3.743336,-1.327540,2.101304,-3.636059,4.077556,-0.136538,0.768286,6.982164,9.140744,0.704198,-5.861589,0.279912,5.223530,-3.016482,-7.618086,-3.313212,0.584737,-9.057876,0.802597,-7.654672,-5.672804,3.000208,1.474510,1.805889,-9.351484,-4.438485,-9.281071,5.002474,-5.786891,9.129703,-3.848409,5.493706,7.633495,-0.527933,-5.573529,9.734126,1.596954,-0.171597,2.593076,4.900604,-3.301095,2.040537,-7.617192,-3.680609,-3.935620,5.256379,1.962173,8.069432,-3.818923,-4.228737,-0.539001,-1.061140,-3.717879,9.243280,-0.108520,-4.653279,-9.805980,5.609830,-9.515430,2.712152,-5.607013,9.930675,0.743309,-2.294112,0.836341,-5.968546,-4.145789,9.574789,1.754325,-3.328169,-3.461170,-7.026172,-2.233381,7.581919,-9.285845,-3.938964,4.597926,-0.723874,-8.091045,0.393648,0.485611,6.086614,-1.312433,6.852192,2.215618,2.474764,-4.259977,8.931520,7.157195,4.678415,1.373500,-3.997362,0.773194,-8.440492,8.282418,9.592893,7.265069,-1.713689,-0.985334,-3.591821,-2.775235,8.996922,6.267082,3.602800,5.228842,-5.824912,-2.894257,5.706252,-1.807709,8.374274,6.873815,-7.983612,-7.402835,-4.201255,-9.730372,-7.003629,-9.170281,1.415996,-9.397844,2.301986,8.859071,3.860845,-5.171716,-0.369388,-8.806315,5.520696,-3.811123,-7.849754,-7.538888,8.776864,2.897669,8.766144,0.228183,-0.849237,-3.103960,8.301544,1.973911,2.316769,-8.584621,-8.435045,-3.101110,-3.928517,-8.990559,9.536571,-2.399336,6.923000,-4.220311,2.322585,-0.883820,-3.205620,6.536412,-1.249386,-1.405609,5.158591,7.584341,2.954060,5.284735,4.417673,-2.077770,-8.989024,0.990072,8.540139,7.948490,-8.551249,-2.943339],[-4.254261,-4.129417,-5.796796,-1.947063,3.069253,-3.826209,2.616837,5.162821,9.236332,5.821334,-2.411263,0.578166,0.294238,-2.597098,-9.202507,-3.616444,7.938713,-3.017827,6.167073,9.972062,-5.711325,2.385664,8.208149,-0.861402,-4.049931,-7.520264,2.918997,-7.316107,-3.067634,-9.269398,7.925979,6.097926,7.933516,3.693840,9.143295,-5.311426,-4.876741,9.432889,-0.303047,-8.674690,-4.814222,4.454989,-3.058381,-7.875981,-6.673035,-3.180286,9.768870,-1.709667,5.851773,5.777603,-2.584102,-1.410163,8.536759,-3.340337,-8.670147,-7.789042,-1.459568,-0.257257,-8.191395,4.734764,0.926914,-3.755140,-5.578561,2.640152,-7.463137,-5.779941,-0.755990,1.185212,-8.174437,4.687768,-5.967085,7.770931,1.862740,-1.131274,-1.848392,0.400188,7.114160,-9.989364,-6.675092,2.255835,-4.514437,-5.395242,-0.387649,-2.516985,0.078471,4.829196,-8.106243,-0.694162,-1.140467,7.221376,1.515770,-4.473794,-5.755529,-3.321302,9.468307,-2.072028,3.222168,-1.578019,-4.766770,-8.289344,5.257235,-7.967568,4.430313,1.036768,1.318868,-7.565956,0.681106,5.207666,-5.796688,5.098366,5.986768,4.635164,-9.779091,-4.926181,7.195213,-0.554873,6.546134,-1.981455,-6.213916,-0.620744,-9.218079,-4.061978,-5.792086,4.991757,0.343908,-8.165495,-3.342797,0.333277,1.140181,-8.330777,-7.827173,6.173709,6.155766,-1.511483,-0.179974,5.589647,-9.922452,-6.542852,3.650510,5.059622,-7.362537,7.919914,9.435118,7.558264,-4.289976,7.169400,5.627030,-9.025748,-4.154844,-0.550333,-1.272910,7.741733,5.707202,7.898457,-1.642785,3.788480,-1.065642,9.213638,9.209179,-4.648243,-8.774743,-8.112859,6.541220,-4.450741,-9.282720,-3.452007,-7.172542,5.554957,3.384150,-7.806017,2.564008,9.043039,-5.669965,4.168995,3.596820,-1.194293,-5.432507,7.358215,7.591940,3.697810,-4.083061,-6.175288,-3.818818,-6.982044,-9.735791,4.339791,-6.378723,7.142779,1.590318,-7.496941,7.220772,1.574004,-8.512383,3.672035,-3.519858,7.191925,-7.706676,-6.045636,9.811757,-9.105936,5.951240,3.773647,-7.951339,8.899047,0.434494,4.878961,-7.435254,-1.529494,5.709798,-3.074596,9.031655,0.325267,-0.948668,-9.941052,-3.403247,5.055320,-0.659677,-5.177181,-9.887315,-8.450636,0.924164,-6.165165,-7.185246,-0.943777,-7.030049,-9.297698,-1.897054,3.480033,3.590019,-8.881693,-1.866881,0.293779,-8.220633,-8.247515,8.784506,7.222045,-9.574182,-3.138901,-3.193607,-6.455605,-6.681702,-9.909925,-7.189954,1.739228,4.458849,-7.010216,1.571368,-6.919661,0.409065,-6.806969,-7.775528,3.954408,8.748967,2.597924,2.727708,-4.776865,-1.427884,-4.594089,-5.303449,-8.224555,-2.397489,-1.326847,4.643601,2.457423,7.217439,0.041080,3.590262,-9.429639,6.222370,1.850949,4.474724,-3.987696,-7.905004,1.710241,-0.050412,8.082988,-6.061400,-5.772531,-0.093776,-8.759088,-9.610669,9.131419,-7.397405,-5.277290,-6.275630,-1.557821,-6.408717,1.563033,-9.383856,8.040330,7.628382,1.550455,-5.747500,2.766076,1.631720,-6.152822,5.797743,-4.056914,1.104034,7.879114,-8.572106,-6.367972,-8.175083,2.433930,-7.072198,3.278859,7.962427,4.864823,9.790646,6.560509,-4.588401,-0.235414,0.578429,3.859688,3.330426,-0.406860,3.627696,-6.486694,7.043366,-5.142763,7.005085,7.502902,-8.668144,-5.602616,1.558764,-8.153358,-3.972697,5.974543,4.139142,-5.486295,-6.443827,-3.912231,9.174610,0.516740,6.207164,-6.347266,-9.357872,9.559648,-4.281163,-7.272046,7.516378,1.917666,9.285305,-6.747233,-9.686641,2.162867,1.290659,-0.421363,4.886623,1.103798,3.888387,7.490112,2.577512,-1.305214,-0.674846,6.166455,4.388686,1.645375,-9.983325,-0.273715,8.486532,4.269590,4.003391,5.779854,4.323856,6.811370,0.648828,-8.162388,-0.618777,-2.592199,8.626296,-8.835876,8.139688,7.723462,5.696339,-9.831724,-6.520573,-7.783074,4.436330,-1.708859,-6.649375,4.918576,-6.189539,0.197366,-7.827412,8.284315,2.996980,-1.466787,-2.033632,-7.821271,5.738972,-9.695815,-7.453172,-2.513930,-3.213737,7.341900,-8.622913,-5.784316,-7.692466,2.851235,-6.534952,1.337324,5.609088,-1.592329,9.788081,0.965250,4.187445,-4.644094,-9.292781,3.690443,2.068925,-8.733953,3.542533,-5.999062,-5.486922,-1.143834,4.252053,-7.238448,8.826313,-3.674312,-1.766802,-5.715984,5.160762,0.527793,2.684226,-2.669472,3.791783,-7.410124,-1.348648,4.095980,1.558762,5.973798,0.853241,4.355672,-2.797831,9.131432,7.527565,-1.237399,7.640835,8.510266,-3.010961,0.055822,-6.718245,-6.878311,9.712221,2.307316,4.056131,7.058565,-9.130838,4.246740,-9.414952,2.970132,-6.913742,-4.144773,-9.759311,-3.673336,6.974225,-7.482702,-1.910548,-9.355395,-1.863037,-2.485120,-6.789679,-6.250236,-8.109934,0.784216,2.156938,-2.438809,-0.824190,2.338898,-2.683342,3.483006,4.133168,4.463800,-1.276932,6.453051,5.775079,-0.209321,3.613207,6.587546,0.939271,-1.007006,4.656420,-9.726618,4.129344,-4.238501,-9.524403,-7.690242,-0.626304,5.351706,7.578160,0.154526,-9.741387,3.622822,9.350238,9.544611,2.682687,7.188271,-2.121401,8.673600,7.297100,-2.219289,3.008207,9.047188,-3.317457,0.011932,-9.668156,6.196430,-1.199277,-2.188003,8.148537,-4.214651,-8.550625,8.283333,-6.043379,-3.034956,1.881994,5.183185,8.807861,-6.111020,9.360963,-0.165855,-0.280063,-5.679303,-1.554395,-1.393028,-8.370055,-6.627831,-6.748073,6.202831,-6.563674,-0.795230,-3.945748,2.523816,7.288459,-8.688003,9.513035,-8.288991,-0.807977,-3.157667,3.002144,-4.747374,-7.529043,-7.620052,-4.809021,8.145047,-7.026612,-5.305709,9.478102,-0.059108,4.206508,6.001174,3.482006,3.949345,-9.771803,-6.102614,-9.988367,5.865458,-9.034128,-2.165968,8.338281,6.439611,7.813171,3.940728,7.783773,1.396253,-1.993476,6.806038,-2.145768,3.726566,6.609730,1.628128,-0.698330,-3.925549,-6.322441,2.322787,-2.974377,8.832082,3.902494,-9.258166,5.803134,5.978573,-2.065849,0.375709,1.238194,8.737675,2.315562,6.097336]], dtype = "float32")#candidate|314|(4, 588)|const|float32
call_312 = relay.TupleGetItem(func_235_call(relay.reshape(var_313.astype('float32'), [14, 15, 12]), relay.reshape(const_314.astype('float32'), [14, 14, 12]), ), 0)
call_315 = relay.TupleGetItem(func_238_call(relay.reshape(var_313.astype('float32'), [14, 15, 12]), relay.reshape(const_314.astype('float32'), [14, 14, 12]), ), 0)
uop_316 = relay.sqrt(call_308.astype('float32')) # shape=(14, 1, 12)
uop_318 = relay.sqrt(call_309.astype('float32')) # shape=(14, 1, 12)
output = relay.Tuple([call_312,var_313,const_314,uop_316,])
output2 = relay.Tuple([call_315,var_313,const_314,uop_318,])
func_325 = relay.Function([var_313,], output)
mod['func_325'] = func_325
mod = relay.transform.InferType()(mod)
mutated_mod['func_325'] = func_325
mutated_mod = relay.transform.InferType()(mutated_mod)
var_326 = relay.var("var_326", dtype = "float32", shape = (6, 420))#candidate|326|(6, 420)|var|float32
func_325_call = mutated_mod.get_global_var('func_325')
call_327 = func_325_call(var_326)
output = call_327
func_328 = relay.Function([var_326], output)
mutated_mod['func_328'] = func_328
mutated_mod = relay.transform.InferType()(mutated_mod)
func_99_call = mod.get_global_var('func_99')
func_101_call = mutated_mod.get_global_var('func_101')
call_333 = func_99_call()
call_334 = func_99_call()
func_325_call = mod.get_global_var('func_325')
func_328_call = mutated_mod.get_global_var('func_328')
var_340 = relay.var("var_340", dtype = "float32", shape = (2520,))#candidate|340|(2520,)|var|float32
call_339 = relay.TupleGetItem(func_325_call(relay.reshape(var_340.astype('float32'), [6, 420])), 3)
call_341 = relay.TupleGetItem(func_328_call(relay.reshape(var_340.astype('float32'), [6, 420])), 3)
output = relay.Tuple([call_333,call_339,var_340,])
output2 = relay.Tuple([call_334,call_341,var_340,])
func_343 = relay.Function([var_340,], output)
mod['func_343'] = func_343
mod = relay.transform.InferType()(mod)
mutated_mod['func_343'] = func_343
mutated_mod = relay.transform.InferType()(mutated_mod)
var_344 = relay.var("var_344", dtype = "float32", shape = (2520,))#candidate|344|(2520,)|var|float32
func_343_call = mutated_mod.get_global_var('func_343')
call_345 = func_343_call(var_344)
output = call_345
func_346 = relay.Function([var_344], output)
mutated_mod['func_346'] = func_346
mutated_mod = relay.transform.InferType()(mutated_mod)
func_59_call = mod.get_global_var('func_59')
func_60_call = mutated_mod.get_global_var('func_60')
call_479 = relay.TupleGetItem(func_59_call(), 0)
call_480 = relay.TupleGetItem(func_60_call(), 0)
func_265_call = mod.get_global_var('func_265')
func_267_call = mutated_mod.get_global_var('func_267')
call_481 = func_265_call()
call_482 = func_265_call()
func_343_call = mod.get_global_var('func_343')
func_346_call = mutated_mod.get_global_var('func_346')
var_489 = relay.var("var_489", dtype = "float32", shape = (6, 420))#candidate|489|(6, 420)|var|float32
call_488 = relay.TupleGetItem(func_343_call(relay.reshape(var_489.astype('float32'), [2520,])), 2)
call_490 = relay.TupleGetItem(func_346_call(relay.reshape(var_489.astype('float32'), [2520,])), 2)
var_497 = relay.var("var_497", dtype = "float32", shape = (2520,))#candidate|497|(2520,)|var|float32
bop_498 = relay.left_shift(call_488.astype('int8'), relay.reshape(var_497.astype('int8'), relay.shape_of(call_488))) # shape=(2520,)
bop_501 = relay.left_shift(call_490.astype('int8'), relay.reshape(var_497.astype('int8'), relay.shape_of(call_490))) # shape=(2520,)
bop_513 = relay.equal(call_481.astype('bool'), relay.reshape(call_479.astype('bool'), relay.shape_of(call_481))) # shape=(14, 1, 12)
bop_516 = relay.equal(call_482.astype('bool'), relay.reshape(call_480.astype('bool'), relay.shape_of(call_482))) # shape=(14, 1, 12)
output = relay.Tuple([var_489,bop_498,bop_513,])
output2 = relay.Tuple([var_489,bop_501,bop_516,])
func_533 = relay.Function([var_489,var_497,], output)
mod['func_533'] = func_533
mod = relay.transform.InferType()(mod)
mutated_mod['func_533'] = func_533
mutated_mod = relay.transform.InferType()(mutated_mod)
func_533_call = mutated_mod.get_global_var('func_533')
var_535 = relay.var("var_535", dtype = "float32", shape = (6, 420))#candidate|535|(6, 420)|var|float32
var_536 = relay.var("var_536", dtype = "float32", shape = (2520,))#candidate|536|(2520,)|var|float32
call_534 = func_533_call(var_535,var_536,)
output = call_534
func_537 = relay.Function([var_535,var_536,], output)
mutated_mod['func_537'] = func_537
mutated_mod = relay.transform.InferType()(mutated_mod)
func_265_call = mod.get_global_var('func_265')
func_267_call = mutated_mod.get_global_var('func_267')
call_559 = func_265_call()
call_560 = func_265_call()
func_99_call = mod.get_global_var('func_99')
func_101_call = mutated_mod.get_global_var('func_101')
call_576 = func_99_call()
call_577 = func_99_call()
bop_585 = relay.add(call_559.astype('float32'), relay.reshape(call_576.astype('float32'), relay.shape_of(call_559))) # shape=(14, 1, 12)
bop_588 = relay.add(call_560.astype('float32'), relay.reshape(call_577.astype('float32'), relay.shape_of(call_560))) # shape=(14, 1, 12)
func_59_call = mod.get_global_var('func_59')
func_60_call = mutated_mod.get_global_var('func_60')
call_592 = relay.TupleGetItem(func_59_call(), 0)
call_593 = relay.TupleGetItem(func_60_call(), 0)
output = relay.Tuple([bop_585,call_592,])
output2 = relay.Tuple([bop_588,call_593,])
func_597 = relay.Function([], output)
mod['func_597'] = func_597
mod = relay.transform.InferType()(mod)
mutated_mod['func_597'] = func_597
mutated_mod = relay.transform.InferType()(mutated_mod)
func_597_call = mutated_mod.get_global_var('func_597')
call_598 = func_597_call()
output = call_598
func_599 = relay.Function([], output)
mutated_mod['func_599'] = func_599
mutated_mod = relay.transform.InferType()(mutated_mod)
var_665 = relay.var("var_665", dtype = "float32", shape = (7, 11, 4))#candidate|665|(7, 11, 4)|var|float32
var_666 = relay.var("var_666", dtype = "float32", shape = (7, 11, 4))#candidate|666|(7, 11, 4)|var|float32
bop_667 = relay.divide(var_665.astype('float32'), relay.reshape(var_666.astype('float32'), relay.shape_of(var_665))) # shape=(7, 11, 4)
output = bop_667
output2 = bop_667
func_671 = relay.Function([var_665,var_666,], output)
mod['func_671'] = func_671
mod = relay.transform.InferType()(mod)
mutated_mod['func_671'] = func_671
mutated_mod = relay.transform.InferType()(mutated_mod)
func_671_call = mutated_mod.get_global_var('func_671')
var_673 = relay.var("var_673", dtype = "float32", shape = (7, 11, 4))#candidate|673|(7, 11, 4)|var|float32
var_674 = relay.var("var_674", dtype = "float32", shape = (7, 11, 4))#candidate|674|(7, 11, 4)|var|float32
call_672 = func_671_call(var_673,var_674,)
output = call_672
func_675 = relay.Function([var_673,var_674,], output)
mutated_mod['func_675'] = func_675
mutated_mod = relay.transform.InferType()(mutated_mod)
func_597_call = mod.get_global_var('func_597')
func_599_call = mutated_mod.get_global_var('func_599')
call_721 = relay.TupleGetItem(func_597_call(), 1)
call_722 = relay.TupleGetItem(func_599_call(), 1)
output = relay.Tuple([call_721,])
output2 = relay.Tuple([call_722,])
func_735 = relay.Function([], output)
mod['func_735'] = func_735
mod = relay.transform.InferType()(mod)
output = func_735()
func_736 = relay.Function([], output)
mutated_mod['func_736'] = func_736
mutated_mod = relay.transform.InferType()(mutated_mod)
func_735_call = mod.get_global_var('func_735')
func_736_call = mutated_mod.get_global_var('func_736')
call_812 = relay.TupleGetItem(func_735_call(), 0)
call_813 = relay.TupleGetItem(func_736_call(), 0)
func_735_call = mod.get_global_var('func_735')
func_736_call = mutated_mod.get_global_var('func_736')
call_814 = relay.TupleGetItem(func_735_call(), 0)
call_815 = relay.TupleGetItem(func_736_call(), 0)
func_99_call = mod.get_global_var('func_99')
func_101_call = mutated_mod.get_global_var('func_101')
call_846 = func_99_call()
call_847 = func_99_call()
output = relay.Tuple([call_812,call_814,call_846,])
output2 = relay.Tuple([call_813,call_815,call_847,])
func_852 = relay.Function([], output)
mod['func_852'] = func_852
mod = relay.transform.InferType()(mod)
output = func_852()
func_853 = relay.Function([], output)
mutated_mod['func_853'] = func_853
mutated_mod = relay.transform.InferType()(mutated_mod)
func_59_call = mod.get_global_var('func_59')
func_60_call = mutated_mod.get_global_var('func_60')
call_859 = relay.TupleGetItem(func_59_call(), 0)
call_860 = relay.TupleGetItem(func_60_call(), 0)
output = relay.Tuple([call_859,])
output2 = relay.Tuple([call_860,])
func_862 = relay.Function([], output)
mod['func_862'] = func_862
mod = relay.transform.InferType()(mod)
mutated_mod['func_862'] = func_862
mutated_mod = relay.transform.InferType()(mutated_mod)
func_862_call = mutated_mod.get_global_var('func_862')
call_863 = func_862_call()
output = call_863
func_864 = relay.Function([], output)
mutated_mod['func_864'] = func_864
mutated_mod = relay.transform.InferType()(mutated_mod)
func_99_call = mod.get_global_var('func_99')
func_101_call = mutated_mod.get_global_var('func_101')
call_877 = func_99_call()
call_878 = func_99_call()
func_181_call = mod.get_global_var('func_181')
func_183_call = mutated_mod.get_global_var('func_183')
call_888 = relay.TupleGetItem(func_181_call(), 2)
call_889 = relay.TupleGetItem(func_183_call(), 2)
func_735_call = mod.get_global_var('func_735')
func_736_call = mutated_mod.get_global_var('func_736')
call_890 = relay.TupleGetItem(func_735_call(), 0)
call_891 = relay.TupleGetItem(func_736_call(), 0)
output = relay.Tuple([call_877,call_888,call_890,])
output2 = relay.Tuple([call_878,call_889,call_891,])
func_892 = relay.Function([], output)
mod['func_892'] = func_892
mod = relay.transform.InferType()(mod)
output = func_892()
func_893 = relay.Function([], output)
mutated_mod['func_893'] = func_893
mutated_mod = relay.transform.InferType()(mutated_mod)
func_862_call = mod.get_global_var('func_862')
func_864_call = mutated_mod.get_global_var('func_864')
call_896 = relay.TupleGetItem(func_862_call(), 0)
call_897 = relay.TupleGetItem(func_864_call(), 0)
uop_900 = relay.rsqrt(call_896.astype('float64')) # shape=(14, 1, 12)
uop_902 = relay.rsqrt(call_897.astype('float64')) # shape=(14, 1, 12)
uop_906 = relay.exp(uop_900.astype('float32')) # shape=(14, 1, 12)
uop_908 = relay.exp(uop_902.astype('float32')) # shape=(14, 1, 12)
func_862_call = mod.get_global_var('func_862')
func_864_call = mutated_mod.get_global_var('func_864')
call_912 = relay.TupleGetItem(func_862_call(), 0)
call_913 = relay.TupleGetItem(func_864_call(), 0)
func_343_call = mod.get_global_var('func_343')
func_346_call = mutated_mod.get_global_var('func_346')
var_933 = relay.var("var_933", dtype = "float32", shape = (2520,))#candidate|933|(2520,)|var|float32
call_932 = relay.TupleGetItem(func_343_call(relay.reshape(var_933.astype('float32'), [2520,])), 0)
call_934 = relay.TupleGetItem(func_346_call(relay.reshape(var_933.astype('float32'), [2520,])), 0)
output = relay.Tuple([uop_906,call_912,call_932,var_933,])
output2 = relay.Tuple([uop_908,call_913,call_934,var_933,])
func_954 = relay.Function([var_933,], output)
mod['func_954'] = func_954
mod = relay.transform.InferType()(mod)
var_955 = relay.var("var_955", dtype = "float32", shape = (2520,))#candidate|955|(2520,)|var|float32
output = func_954(var_955)
func_956 = relay.Function([var_955], output)
mutated_mod['func_956'] = func_956
mutated_mod = relay.transform.InferType()(mutated_mod)
func_597_call = mod.get_global_var('func_597')
func_599_call = mutated_mod.get_global_var('func_599')
call_961 = relay.TupleGetItem(func_597_call(), 0)
call_962 = relay.TupleGetItem(func_599_call(), 0)
func_671_call = mod.get_global_var('func_671')
func_675_call = mutated_mod.get_global_var('func_675')
var_966 = relay.var("var_966", dtype = "float32", shape = (154, 2))#candidate|966|(154, 2)|var|float32
call_965 = func_671_call(relay.reshape(var_966.astype('float32'), [7, 11, 4]), relay.reshape(var_966.astype('float32'), [7, 11, 4]), )
call_967 = func_671_call(relay.reshape(var_966.astype('float32'), [7, 11, 4]), relay.reshape(var_966.astype('float32'), [7, 11, 4]), )
output = relay.Tuple([call_961,call_965,var_966,])
output2 = relay.Tuple([call_962,call_967,var_966,])
func_969 = relay.Function([var_966,], output)
mod['func_969'] = func_969
mod = relay.transform.InferType()(mod)
mutated_mod['func_969'] = func_969
mutated_mod = relay.transform.InferType()(mutated_mod)
var_970 = relay.var("var_970", dtype = "float32", shape = (154, 2))#candidate|970|(154, 2)|var|float32
func_969_call = mutated_mod.get_global_var('func_969')
call_971 = func_969_call(var_970)
output = call_971
func_972 = relay.Function([var_970], output)
mutated_mod['func_972'] = func_972
mutated_mod = relay.transform.InferType()(mutated_mod)
func_852_call = mod.get_global_var('func_852')
func_853_call = mutated_mod.get_global_var('func_853')
call_977 = relay.TupleGetItem(func_852_call(), 1)
call_978 = relay.TupleGetItem(func_853_call(), 1)
func_343_call = mod.get_global_var('func_343')
func_346_call = mutated_mod.get_global_var('func_346')
var_993 = relay.var("var_993", dtype = "float32", shape = (2520,))#candidate|993|(2520,)|var|float32
call_992 = relay.TupleGetItem(func_343_call(relay.reshape(var_993.astype('float32'), [2520,])), 0)
call_994 = relay.TupleGetItem(func_346_call(relay.reshape(var_993.astype('float32'), [2520,])), 0)
func_99_call = mod.get_global_var('func_99')
func_101_call = mutated_mod.get_global_var('func_101')
call_1012 = func_99_call()
call_1013 = func_99_call()
func_852_call = mod.get_global_var('func_852')
func_853_call = mutated_mod.get_global_var('func_853')
call_1027 = relay.TupleGetItem(func_852_call(), 1)
call_1028 = relay.TupleGetItem(func_853_call(), 1)
output = relay.Tuple([call_977,call_992,var_993,call_1012,call_1027,])
output2 = relay.Tuple([call_978,call_994,var_993,call_1013,call_1028,])
func_1033 = relay.Function([var_993,], output)
mod['func_1033'] = func_1033
mod = relay.transform.InferType()(mod)
mutated_mod['func_1033'] = func_1033
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1034 = relay.var("var_1034", dtype = "float32", shape = (2520,))#candidate|1034|(2520,)|var|float32
func_1033_call = mutated_mod.get_global_var('func_1033')
call_1035 = func_1033_call(var_1034)
output = call_1035
func_1036 = relay.Function([var_1034], output)
mutated_mod['func_1036'] = func_1036
mutated_mod = relay.transform.InferType()(mutated_mod)
func_892_call = mod.get_global_var('func_892')
func_893_call = mutated_mod.get_global_var('func_893')
call_1041 = relay.TupleGetItem(func_892_call(), 0)
call_1042 = relay.TupleGetItem(func_893_call(), 0)
func_597_call = mod.get_global_var('func_597')
func_599_call = mutated_mod.get_global_var('func_599')
call_1063 = relay.TupleGetItem(func_597_call(), 0)
call_1064 = relay.TupleGetItem(func_599_call(), 0)
bop_1069 = relay.less(call_1063.astype('bool'), relay.reshape(call_1041.astype('bool'), relay.shape_of(call_1063))) # shape=(14, 1, 12)
bop_1072 = relay.less(call_1064.astype('bool'), relay.reshape(call_1042.astype('bool'), relay.shape_of(call_1064))) # shape=(14, 1, 12)
output = bop_1069
output2 = bop_1072
func_1079 = relay.Function([], output)
mod['func_1079'] = func_1079
mod = relay.transform.InferType()(mod)
mutated_mod['func_1079'] = func_1079
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1079_call = mutated_mod.get_global_var('func_1079')
call_1080 = func_1079_call()
output = call_1080
func_1081 = relay.Function([], output)
mutated_mod['func_1081'] = func_1081
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1079_call = mod.get_global_var('func_1079')
func_1081_call = mutated_mod.get_global_var('func_1081')
call_1104 = func_1079_call()
call_1105 = func_1079_call()
output = call_1104
output2 = call_1105
func_1107 = relay.Function([], output)
mod['func_1107'] = func_1107
mod = relay.transform.InferType()(mod)
mutated_mod['func_1107'] = func_1107
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1107_call = mutated_mod.get_global_var('func_1107')
call_1108 = func_1107_call()
output = call_1108
func_1109 = relay.Function([], output)
mutated_mod['func_1109'] = func_1109
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1107_call = mod.get_global_var('func_1107')
func_1109_call = mutated_mod.get_global_var('func_1109')
call_1117 = func_1107_call()
call_1118 = func_1107_call()
uop_1139 = relay.atanh(call_1117.astype('float64')) # shape=(14, 1, 12)
uop_1141 = relay.atanh(call_1118.astype('float64')) # shape=(14, 1, 12)
output = relay.Tuple([uop_1139,])
output2 = relay.Tuple([uop_1141,])
func_1146 = relay.Function([], output)
mod['func_1146'] = func_1146
mod = relay.transform.InferType()(mod)
output = func_1146()
func_1147 = relay.Function([], output)
mutated_mod['func_1147'] = func_1147
mutated_mod = relay.transform.InferType()(mutated_mod)
func_597_call = mod.get_global_var('func_597')
func_599_call = mutated_mod.get_global_var('func_599')
call_1182 = relay.TupleGetItem(func_597_call(), 0)
call_1183 = relay.TupleGetItem(func_599_call(), 0)
output = call_1182
output2 = call_1183
func_1186 = relay.Function([], output)
mod['func_1186'] = func_1186
mod = relay.transform.InferType()(mod)
output = func_1186()
func_1187 = relay.Function([], output)
mutated_mod['func_1187'] = func_1187
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1193 = relay.var("var_1193", dtype = "float64", shape = (16, 6, 7))#candidate|1193|(16, 6, 7)|var|float64
uop_1194 = relay.asinh(var_1193.astype('float64')) # shape=(16, 6, 7)
output = relay.Tuple([uop_1194,])
output2 = relay.Tuple([uop_1194,])
func_1206 = relay.Function([var_1193,], output)
mod['func_1206'] = func_1206
mod = relay.transform.InferType()(mod)
var_1207 = relay.var("var_1207", dtype = "float64", shape = (16, 6, 7))#candidate|1207|(16, 6, 7)|var|float64
output = func_1206(var_1207)
func_1208 = relay.Function([var_1207], output)
mutated_mod['func_1208'] = func_1208
mutated_mod = relay.transform.InferType()(mutated_mod)
func_597_call = mod.get_global_var('func_597')
func_599_call = mutated_mod.get_global_var('func_599')
call_1219 = relay.TupleGetItem(func_597_call(), 1)
call_1220 = relay.TupleGetItem(func_599_call(), 1)
uop_1238 = relay.cos(call_1219.astype('float32')) # shape=(14, 1, 12)
uop_1240 = relay.cos(call_1220.astype('float32')) # shape=(14, 1, 12)
func_325_call = mod.get_global_var('func_325')
func_328_call = mutated_mod.get_global_var('func_328')
const_1256 = relay.const([[0.757051,2.536649,-0.300654,-5.748896,4.937068,-3.399957,0.458946,-7.035706,-2.868295,-3.335396,-0.023880,1.664849,3.973586,5.572697,-4.793255,8.467751,-8.758993,4.824463,3.507850,2.959802,-8.071600,7.418837,-8.619159,-8.365209,8.858054,7.644462,0.939724,3.971557,9.057702,-2.147599,2.752528,1.099210,-1.850181,-3.477362,-1.261275,-4.703040,-9.516510,-0.732349,-6.329871,4.595334,-2.106952,3.027426,-2.646298,-3.174145,9.415070,0.601936,-4.986188,1.824239,3.947818,-9.689599,1.585503,-6.590644,3.023715,-1.542417,7.607791,2.503229,-0.946189,2.617092,3.163758,-5.866944,-0.699801,6.219819,-8.685246,-7.853540,9.227115,9.973209,6.088406,-5.633032,-3.080095,-4.786048,-0.492925,4.001651,-7.474351,4.970353,8.331999,6.936783,-5.672861,-6.008303,7.474517,-3.357610,-5.403344,8.170794,-3.583116,-9.431404,-7.341714,-2.286355,-7.672966,4.228355,5.589080,-7.737923,-4.794418,-0.286375,3.379631,1.439244,5.585437,9.534208,5.494207,-5.664050,-0.076242,-5.977878,5.401935,7.767508,0.247279,3.741555,-4.316582,9.938681,4.659332,7.633996,-8.973331,3.360798,-3.302073,7.732286,7.390207,2.019478,-5.969230,-5.317627,5.540010,9.342374,-4.876250,6.934437,0.036956,0.041710,-8.815235,1.123405,9.116709,7.304002,6.299786,6.667435,-7.859009,-3.755279,-1.109480,-2.610518,-3.579214,-5.406639,-9.558391,2.002454,-8.564540,-5.566592,4.507875,-6.289178],[-5.493676,8.197986,-3.024631,-0.786896,1.263725,-0.214840,6.529009,9.593536,-1.916954,-2.310756,1.875208,-4.657261,-0.693547,7.430924,-6.648995,-2.434794,6.142823,-5.980564,-1.392057,-3.858521,9.482253,-7.086972,5.050278,4.297720,8.115541,8.738482,5.219482,7.292002,-0.040058,-1.117159,-6.491163,-9.220965,-7.491878,3.039638,1.499209,-9.026512,-1.986167,-8.237964,6.721649,-7.396481,4.268707,8.109601,3.218523,1.871340,3.081066,4.834953,-9.888217,9.430515,-6.517620,-2.667513,-0.879562,0.357270,9.202698,9.139378,5.987450,4.629934,6.984618,8.986116,3.778710,-4.753602,-3.979808,-9.154414,9.199657,2.588677,1.392434,-8.079277,3.550220,-2.997502,7.854365,0.664419,5.603169,0.698278,0.308149,-9.154973,8.873720,-9.716283,-3.455448,3.983599,-4.894207,8.242833,-8.700347,-5.302861,0.696566,-9.502621,-8.982231,2.112101,-2.985426,-2.346841,-1.818261,3.676593,6.483098,7.173285,-6.348180,-0.141561,-6.031582,-4.387997,1.589712,-8.245273,-0.258177,6.351781,-2.611616,-3.215347,8.158810,-5.474613,2.210702,-3.684014,6.910363,-1.509773,-2.658992,8.155362,3.358206,9.903829,-7.147571,9.565548,-8.801128,3.807652,-1.803053,6.784431,-2.241196,2.202197,5.831758,-6.403473,3.159163,7.691013,3.238841,-7.542892,-0.107114,4.429772,8.333463,3.517398,6.915264,-1.006225,2.767448,-3.276368,-4.226345,7.011293,1.749615,-7.502713,6.378069,-2.106911],[-3.273946,1.490318,-9.570110,4.519182,5.609223,6.230221,3.068880,-9.381726,3.027487,-6.245850,-3.756192,-3.707216,-2.690515,3.247370,-9.265539,-0.192622,-8.405132,8.239318,3.375147,1.187296,-0.325997,0.960088,-4.450574,-9.619752,-4.470025,1.926608,-9.563127,-9.838271,2.623212,-1.517285,0.392517,-7.915770,-0.252692,-4.416255,2.928805,8.982274,-3.206679,0.373605,-0.811188,2.147982,8.258453,-6.680187,-8.940308,-5.644600,-9.422004,0.027290,3.566922,8.707886,4.359363,5.807660,1.808873,-4.607008,-0.891139,0.614734,2.654182,2.299363,2.186948,8.137702,3.434281,5.733818,-7.812512,1.944319,2.207147,-8.849998,7.281792,3.260045,-1.783734,-2.607103,8.062317,7.202041,-3.224226,9.619687,-1.991985,1.750740,-5.025383,0.980369,3.016744,0.727765,-2.385151,-2.152757,4.158827,-2.997965,9.917226,-2.476865,-9.739771,-2.849130,8.464415,6.919891,-1.480075,1.812339,1.138768,9.264552,6.900467,6.130859,-9.931127,3.125391,8.056626,8.682070,5.387946,-6.888989,-1.038450,-2.791434,-1.121134,9.428700,8.621493,-1.004367,-5.106620,4.804593,-5.366881,1.758208,-1.814694,-7.611282,-7.019810,5.768249,-2.882801,-7.106126,-9.153545,-8.437190,-2.250413,2.921223,-3.889087,-5.952308,3.269930,-2.770800,4.063825,2.624647,1.924384,1.851010,3.423517,6.907397,-2.129229,-8.217639,-5.797361,-9.450626,5.708828,-5.226185,2.269824,-8.119651,7.108953,-0.990135],[-7.639046,-9.545024,7.765706,4.748681,-3.788966,-9.714802,-1.702453,6.469616,5.871618,7.478550,1.721005,-8.198556,2.294181,-0.498506,-2.432066,7.300808,-4.477955,-0.947289,1.692649,-2.916065,-5.993359,8.081784,-7.975745,6.281335,-0.828829,-3.310892,7.532354,-4.318644,2.450314,8.791594,6.233347,-1.949118,-8.134628,2.105476,-8.221534,-0.643347,5.517325,-1.567518,-9.275586,4.438416,-2.309914,0.162268,4.186450,-9.143193,-5.171702,-7.897980,-0.353229,7.144452,1.063728,3.311488,-1.180121,-3.700430,8.541955,9.141137,-2.929533,-4.865250,-4.663436,-0.086758,7.551990,-1.427803,-8.288214,6.425609,2.798768,-8.764193,4.589247,0.876499,0.984013,7.324866,-5.806147,-8.141641,-2.998754,6.192331,-7.366697,-1.539022,2.299003,3.599583,2.005303,-7.309366,5.674246,7.507736,-8.680939,8.676061,-7.363054,-9.811581,0.859595,9.589029,1.629677,7.765626,4.552884,9.154319,-2.303369,-1.410260,9.006248,4.863496,0.518985,-9.230086,3.592555,4.857523,-4.190482,-4.136400,5.081657,6.734964,-7.695059,-0.995002,-5.832218,-8.511133,8.273389,-3.912226,-9.048309,9.725752,-8.988601,7.961054,3.471318,4.665249,0.992819,-4.702477,-7.144123,9.516236,-6.430413,-2.572353,-6.707755,4.393793,2.327874,-3.061688,1.505212,-5.686582,0.514684,1.004318,-4.541831,1.838198,-4.798172,-0.912846,1.257250,-5.109627,-6.728456,9.063790,6.442681,-8.956612,-6.161717,-1.745533],[-0.813683,-6.649279,2.655666,8.740554,-2.587134,3.581722,-6.624410,7.922571,2.955435,0.032125,-3.790053,-8.529561,1.209501,4.804959,-3.909973,-2.880398,-3.233416,-8.423097,-8.786420,9.175926,-1.122123,-1.104801,7.977536,5.739284,8.561285,-2.091616,5.525920,6.349426,2.702384,-3.793305,7.380269,-0.710947,4.465790,2.579341,-7.137928,6.140259,2.949454,5.774835,2.791781,9.957696,3.247394,4.809786,0.374757,-1.232274,5.816291,-7.332049,8.122771,-1.767295,7.999799,-3.853558,-0.545893,9.217097,1.107140,-4.710359,8.714966,9.407500,1.964073,0.629331,-1.834145,5.361055,-7.157265,-9.260148,8.878535,1.147048,-3.080902,-9.819890,6.267371,-6.110227,2.867450,6.952880,-2.861038,3.149220,5.514215,-5.452667,-1.005527,9.250565,8.185017,-6.632536,-5.094402,-7.206922,-7.140178,-0.695163,-7.658528,-7.964470,7.946306,-2.068428,1.066866,-8.367677,-2.405827,-4.367074,-7.261289,2.503383,9.270851,-0.277712,7.009351,-6.454497,-4.590511,0.159913,8.085725,-2.447806,-0.931487,-3.694229,-5.565540,-1.022563,-9.905814,-6.905456,3.324009,-0.392309,9.364120,-5.932739,0.619926,-1.250664,6.257963,-8.880923,-0.850194,-9.882026,8.938474,-1.731939,7.598011,-9.049684,1.417786,-8.724638,9.224236,6.828738,-4.926883,1.314334,-3.319608,8.942540,-6.600610,-2.783053,-4.128569,9.730133,4.708768,5.064362,-8.884560,-5.324971,-5.373358,-3.760564,-6.048673,3.491566],[-0.739011,-4.703980,-4.572424,-3.335280,-0.963941,3.429769,4.463070,-0.095199,-9.144217,3.826336,-9.698370,-6.051954,0.405845,-0.336478,-9.207474,-7.201152,-4.522081,2.489756,-3.674054,7.794433,-9.208196,3.514110,7.184022,9.734576,1.561390,8.089974,-6.959131,2.767466,-5.711308,9.500054,3.805908,3.102331,2.571787,-3.295824,0.111040,-7.407510,6.364474,0.467503,8.933847,-1.449275,-5.339663,-3.643431,-4.666003,-2.283782,6.128618,7.838500,4.175643,1.291924,-1.325987,-1.304630,8.393098,5.596984,-2.385705,-2.053371,6.498682,-8.468297,-8.467485,2.981830,-8.017534,8.171742,9.594590,-2.077044,-9.154616,6.928619,-4.257425,-7.234560,-6.122559,-6.981825,-7.219056,0.152870,0.662524,8.907032,-4.937143,-6.980766,-4.966174,0.236100,3.198299,-5.160207,6.318606,-3.537207,9.623908,7.446720,-6.253233,-2.470507,-7.626467,0.275253,-1.041081,4.707512,0.207036,8.607540,-1.454810,8.252613,6.882616,5.872228,-7.356340,-4.923827,-8.801092,8.500458,1.523540,0.663123,9.032942,1.691951,-4.818366,7.419573,0.003169,7.049604,5.791022,6.957315,3.909435,2.201342,-1.635882,2.997483,1.880553,8.084108,9.242380,9.405437,8.761964,-8.959807,0.379672,6.968344,-8.523400,-4.442420,-6.199936,-3.274092,-6.903730,2.088952,1.171713,1.028475,4.362778,0.165014,-0.085845,-4.573854,-0.390144,2.330158,-0.059547,-9.815334,8.296701,-2.495728,-1.486390,2.352948],[-9.776104,6.557449,-2.837126,-5.963055,2.508078,-1.682559,-9.687154,-7.851286,1.280283,4.222345,-3.021966,-8.676536,-3.730446,5.450729,-1.924826,-8.474891,7.088579,-8.610226,-3.868622,-5.878237,7.947060,6.776604,0.063544,-5.042835,5.635197,-7.770587,1.694352,-2.797433,6.935261,-0.439425,-9.071174,-2.436978,-0.273472,6.601303,3.779035,-9.208839,-5.135950,6.374341,0.213882,-8.534903,9.364243,0.190105,-8.714520,-8.404984,4.609380,1.738342,0.994570,-2.426709,-2.581685,8.106843,3.480327,-8.046313,4.894704,5.346933,9.087888,-1.297542,-9.391771,5.285013,2.268758,-2.429743,-6.843950,-5.901800,9.915704,5.307326,5.456152,4.792138,4.240029,-6.455308,5.315555,8.288774,-4.651097,6.732467,5.518871,3.050415,5.995681,-6.805492,4.157726,9.749902,2.927673,-4.898994,4.933948,5.273059,-7.472267,-6.960979,4.470308,-3.008545,2.611066,-1.695054,9.546136,0.079632,1.119416,-0.835637,-6.592467,0.308344,6.774524,-9.463406,2.616271,9.347018,-8.997886,-2.727987,1.101043,8.064549,-5.974703,-6.225113,5.841455,-0.906455,1.525890,1.919120,2.363594,8.390391,-0.968864,6.026047,4.080422,5.910599,-2.142369,6.102683,1.554859,-6.091305,-2.235823,3.655069,-3.194493,-8.312229,-6.881635,-3.609539,-4.101014,-4.081742,5.689769,-9.308647,-3.679095,-0.911462,6.203814,4.119570,-6.594523,6.153337,-6.125953,-9.658210,-6.049137,-4.214728,-0.399610,-3.090142],[-7.413009,-5.771751,5.366590,-0.985379,-4.859447,-3.217068,-7.083332,-4.478718,-9.456782,3.741413,-0.354957,1.802439,-8.915252,-9.508680,-2.909848,2.040523,8.729148,1.699620,-2.856626,6.935985,-7.264158,8.539865,0.984975,-8.210750,5.818916,-8.703095,1.590545,-3.480437,4.979271,5.773416,-5.871937,-5.331900,-8.767439,-8.523568,6.212803,3.177431,9.097440,-1.132419,5.527086,-8.623635,-9.232042,-4.073323,7.374785,7.436750,3.973025,-5.012988,5.226074,-6.787007,-6.151727,-4.300809,-0.709416,-9.549776,-5.357441,-5.148489,9.526745,-6.293906,1.888974,4.879434,-6.423449,5.743061,6.448732,6.850721,-4.583685,-2.442082,-8.126800,-2.818247,2.592433,-8.539897,5.997495,2.181673,-4.031903,-6.068248,-7.052033,-4.334615,-9.641494,5.939543,8.039456,-5.090427,-9.349363,8.725299,5.963866,3.518642,-6.744711,8.647820,-7.894928,-5.844907,-3.878083,-2.043629,-5.146403,8.162317,-1.843411,1.876962,1.064310,0.107731,-0.458649,-3.380236,-8.520903,-8.207441,-4.362937,-2.016276,-8.991221,5.772816,3.752964,-3.625120,-2.932596,-7.450429,-6.172801,-9.132617,6.528408,5.999059,-1.263777,6.600057,0.945527,7.598476,3.001195,-7.334458,-9.163799,0.517058,0.705903,-8.671224,4.880726,-3.417693,-2.603382,-7.326721,-0.552257,8.559414,9.294187,1.393151,2.128533,-1.490687,-4.334971,-8.241280,-6.421242,-1.027622,1.816269,0.040329,6.718009,-8.975578,6.118261,2.194086],[-9.429871,-0.483536,9.910759,-7.788081,2.656382,-5.552109,6.075746,-1.820906,-8.827568,6.327479,2.916307,-6.159228,-2.491629,-8.254576,0.674349,3.064337,7.315567,-5.742653,4.071058,4.397775,8.074237,-5.185691,-7.431138,0.384891,3.329871,2.914180,1.784475,3.491754,-7.841091,2.871168,1.141446,-5.181337,6.030815,-4.267586,9.396576,4.489263,5.039968,-7.235129,-1.940943,-7.203504,-3.032615,7.342333,6.587590,-9.917634,-6.619774,-3.361948,-4.253180,-4.949233,3.262643,3.812596,-0.404797,1.283630,-1.401818,-2.292770,7.569874,7.970612,-6.198492,-5.300549,6.074475,1.377032,-1.129293,-1.330590,-0.783454,-3.326304,3.260587,8.000274,-3.456346,0.362327,-0.559866,-6.006924,-0.081876,5.785141,-0.419346,-6.316136,-7.328849,1.657039,7.998381,-0.167602,9.712830,1.641967,-4.790189,-9.690537,-1.815603,7.376537,5.377722,-3.802980,1.538859,-1.077106,2.714488,-9.461275,0.681292,4.502450,7.060860,-9.108625,-5.191155,7.658334,-8.302012,-9.010373,2.082859,2.868606,1.387691,-6.899845,-1.772605,-9.394739,5.028410,3.276075,-9.968966,-7.023970,-2.121630,-9.984920,-1.896839,3.383481,-7.608715,4.242766,-2.305269,-7.376544,5.653857,-7.540629,-0.018174,6.729709,8.904452,-2.641679,2.413974,6.148378,4.330308,4.894218,7.384057,6.337662,-8.595250,6.646199,4.595047,-3.969842,-1.062910,-0.945083,5.886240,3.148919,7.495052,-5.024591,-3.339751,-4.971356],[-3.853690,7.983388,4.937181,4.120192,-8.594664,-3.001277,-6.284888,-3.773757,4.886519,6.990834,-2.152093,-7.491142,-9.716105,4.515838,-6.078581,9.784274,8.649573,7.545106,9.033672,-6.336889,9.150672,4.655242,0.102875,1.088633,1.067352,8.001292,9.685516,9.030192,-3.799947,-6.599794,-3.475280,0.521809,-4.406218,-0.056244,9.788127,0.051332,3.569554,1.953757,-5.887126,-6.145205,8.716610,-2.339104,4.489992,0.993559,-4.837171,-7.534198,4.366138,-0.656280,-9.987224,5.953596,7.083988,8.246210,6.571379,4.125511,7.711421,5.648960,3.585731,3.960168,5.296092,-6.346749,-2.627545,1.642353,6.149306,1.794026,-7.907010,5.036637,-5.905111,9.059996,5.804461,0.932740,-2.232973,-0.199294,-7.045695,-9.525866,-8.397687,5.100063,8.862587,-9.359770,-3.557219,0.778104,-3.845028,-9.344367,1.598732,-3.260697,-6.329887,1.688669,9.845431,-9.896960,7.079437,5.064614,-5.504800,-5.643722,5.520686,-4.260031,-7.507048,6.931186,-3.503013,8.612899,0.176351,2.893033,-4.339033,-6.294876,-0.200844,1.042702,3.412130,5.141540,-4.893555,7.827326,-7.885539,6.842136,1.364905,5.767405,3.969716,7.139904,-0.552215,-3.515571,3.249643,-0.306895,-1.324083,1.782249,2.800451,1.395015,-6.517811,8.934680,-0.984070,-4.675554,2.185948,3.907945,-4.576304,8.347589,2.637823,3.017090,-9.786680,-3.978306,-0.274846,-6.503925,-4.532935,7.479967,7.030786,7.230505],[9.320429,8.218130,6.365645,7.332792,-4.807905,9.795741,4.973349,-5.694621,-2.752430,-3.661161,9.284608,-7.810286,-3.525683,-9.290226,3.237414,9.763014,0.206085,0.941763,5.141591,9.644369,-3.725026,-3.990308,8.898045,8.164682,9.787954,-6.920444,1.517123,5.902626,-2.363291,4.173403,9.998580,4.869261,1.616042,-9.403356,9.346946,-3.616400,-9.363884,0.197945,-2.445964,3.285372,-3.063132,-9.884309,1.842195,5.489415,1.362330,9.386313,0.990809,-5.391077,2.020883,-9.728259,-8.959537,-0.691960,4.008653,-8.583251,0.470419,4.063338,-0.365871,6.912187,0.064165,7.939788,0.065632,-7.936722,0.292980,4.160750,5.074300,-9.528021,8.842858,-0.282635,-9.101315,-8.159004,-2.354700,-3.582372,2.042248,-9.531214,-2.182638,9.206007,-8.945805,0.015259,-5.199808,8.987511,-8.100280,8.368269,-4.611195,-2.521137,9.213417,-3.449083,-0.811860,-0.880815,-2.119651,1.707876,-8.673823,-8.368767,-4.848520,1.605783,3.157510,-1.056599,-1.707140,1.302799,3.679415,6.139441,-2.302366,-9.331835,-0.262299,-2.694460,-3.265304,-1.241994,-2.910520,4.823730,-2.085782,-6.522203,0.910743,9.007003,-9.608190,9.400243,-4.069393,-0.896522,-7.221015,7.288616,8.146398,-8.511445,0.534154,2.631887,8.509568,-2.797302,3.352250,4.308801,1.266467,-3.180552,7.601412,3.745282,-2.951755,-3.417164,8.244530,-5.436442,7.215357,-5.495728,9.446703,7.491808,-4.877180,-1.419668],[-3.543332,6.679456,-9.813418,0.678342,3.965775,4.267903,7.150055,-7.105353,5.064940,8.561633,5.029577,-0.019447,5.807054,-1.402874,9.290432,9.830792,-5.750272,-1.145779,-4.462868,9.975567,-4.119185,-6.461788,-5.560668,-4.710464,0.563303,7.728256,6.036492,0.491607,3.342058,7.465735,-1.103302,-8.743788,0.673850,2.637651,-2.485382,9.525098,2.625879,-6.179290,-9.435375,2.497550,7.875324,7.736145,-1.655798,3.560595,-9.714829,9.968054,-1.874268,5.087953,-8.650718,4.528761,1.526588,2.427922,-9.331772,8.448459,5.657544,-0.208344,5.950345,8.657856,-2.302729,7.394009,5.493037,1.981775,-0.590214,0.407599,0.011921,1.269285,7.913433,6.218236,2.894391,4.586627,-9.590887,4.266306,8.105676,4.639505,6.609616,-0.138093,7.838438,-6.400063,-6.815444,-9.409319,7.837034,8.744581,9.516459,-8.014822,5.173673,5.852251,-7.773207,3.667907,9.564379,4.930475,9.389963,-4.921531,-6.017396,-5.391169,-8.930585,-9.881420,-8.928467,7.773483,1.052479,-1.287703,2.227342,-6.523384,-7.694452,4.691781,-5.967449,9.295952,-9.818161,0.433816,-3.747062,8.701092,-1.031516,-8.148920,8.790238,-5.407743,-8.678352,8.030385,-3.561957,4.013238,2.503331,3.279210,7.410552,6.366487,-8.878256,-0.239524,-2.894512,9.231591,-7.453683,-7.903510,0.104511,-1.798737,2.211578,2.803740,3.033575,4.921164,9.796112,-3.654787,1.476515,-0.499495,-6.687932,-4.162454],[3.251571,-7.799354,-8.705871,8.885223,1.282409,9.934008,-4.162163,1.420050,8.917776,-0.861395,7.016464,2.864923,5.853450,-8.485862,1.675876,-4.725682,-9.144267,-2.459200,4.295170,8.516155,6.440206,-4.314194,2.971154,2.654566,-5.174130,-8.961105,-4.196003,-1.145452,1.430568,-8.757586,4.401859,0.634535,5.780700,-2.956701,-8.522424,3.145995,-1.128182,9.033738,4.926159,-4.867824,-8.344595,4.035683,8.278258,-5.962137,-3.930670,0.647483,-9.187174,-0.404534,-7.911861,-8.535774,-7.589567,-9.942731,5.389626,-0.566637,-8.678757,-3.613610,7.807270,3.726433,9.885168,-6.921428,-8.881519,-0.625782,-9.966308,-5.041686,2.970112,0.432645,1.561428,0.117046,2.787786,7.982991,-8.212077,1.499167,-9.623889,-2.054097,-6.310099,2.499474,-0.022856,6.670540,-4.873012,1.963816,3.809854,5.732358,-6.115955,5.717281,7.698157,8.897043,2.395346,9.548566,-3.219832,2.145412,-9.671078,0.713192,-3.175318,-9.539446,5.100097,6.359837,-8.616764,8.955871,2.683127,8.227979,7.345576,-2.303242,8.701110,-9.690488,-6.118266,-4.260365,4.517734,1.198016,2.303587,-6.689428,-9.269198,3.578485,2.491757,0.914271,0.893987,7.206186,-7.577040,1.587256,9.326914,2.282807,-8.917203,7.535586,4.351253,0.211381,-9.110827,5.201379,4.920951,0.304881,0.455188,6.168104,1.112543,-5.343149,7.416296,8.093114,5.271826,-4.813790,9.204549,9.305808,-6.931549,9.650865],[0.406666,9.889699,9.308734,7.414211,-4.630307,1.717642,6.538604,0.241548,-2.141286,0.738441,0.762963,6.173719,4.169795,7.481470,3.817243,-5.569384,-5.967473,-3.672228,4.810847,-9.857332,-6.097008,0.111022,5.517956,-6.909153,-0.566489,-8.810861,2.206163,-0.963748,-1.716288,9.936847,-6.918981,-4.751850,2.352005,-0.751908,-4.391761,-8.820025,-7.749111,-6.033329,-6.741777,9.728231,3.114446,-2.404095,0.851068,6.606332,4.105517,-6.561541,5.514503,-1.786496,7.260167,3.751031,0.406569,-6.140823,2.163373,-3.465605,-9.353750,-8.474748,1.173917,-8.066492,7.634935,-6.874789,-2.580272,-0.343671,-2.532431,3.023636,8.948737,8.648368,-6.005724,2.105346,2.375319,-9.422405,1.545022,2.550239,1.996412,-0.959768,9.226083,9.731898,8.193870,3.327378,-9.772064,3.862175,9.741348,9.627508,-4.041878,-5.462660,-8.852148,2.385033,4.942921,-2.873435,7.994090,-5.966326,4.603559,-1.661493,1.329523,-7.937369,-0.651591,-1.650814,6.878700,-3.215704,-2.063425,5.186304,3.589335,-4.652666,3.675369,8.189322,1.115466,3.985071,-7.193047,6.567700,-0.713364,5.361557,1.612139,-9.353309,7.342989,6.650571,6.929776,-2.388988,8.316275,-3.225721,5.092938,2.399780,3.735513,-6.472655,6.978234,6.640768,3.952406,-5.672815,-8.590642,4.760771,2.987102,3.142641,9.214235,7.409739,9.159079,7.348352,-9.731251,5.164886,-3.793511,5.636826,-8.112492,3.303519],[9.679163,-1.968717,-3.714117,-4.595175,-3.118492,1.315828,5.647459,8.572808,-5.509114,-5.641789,3.444269,-1.565113,6.166626,5.309534,-2.701162,5.165979,0.623369,-2.748966,-9.493468,7.440840,-7.292652,-3.351373,-4.039044,-6.443107,0.398949,8.455993,5.572330,-8.583199,8.859963,-9.207518,-8.688578,2.271487,3.771173,6.234922,-5.720064,8.973730,4.782129,4.139243,0.851870,-4.417370,-5.787133,6.860330,9.842576,-6.235621,-0.306040,1.669484,-5.973790,-7.849637,-3.676721,5.584099,-5.656103,2.243684,4.591767,0.608912,9.356284,1.924736,5.983386,9.410967,-4.565192,0.135563,-6.308047,9.908020,-5.298713,-7.312474,9.863215,9.515384,-0.919822,-2.859265,8.180787,-8.150944,9.038618,-1.344066,5.481401,-9.968628,2.386232,-4.286455,-3.777172,2.694803,4.645222,7.164275,4.062027,-9.773061,0.074117,5.629227,7.170182,5.634745,6.848991,2.806739,2.884885,-5.006117,-8.212410,-5.373143,-3.309069,2.031211,-1.834542,7.531562,7.091078,5.725254,-2.780858,-9.890863,7.233845,-9.144676,7.155430,1.107306,1.943975,-3.492265,-2.068148,-5.598377,-2.008308,-6.435341,-3.240550,-3.671249,9.647109,5.527860,3.076488,2.736257,3.753805,9.498802,-4.091269,-9.101501,8.647637,6.590783,3.606853,-1.327532,7.343945,-8.890100,-4.508360,7.838195,6.768808,8.184400,-6.219047,2.735704,2.403042,2.718075,3.872199,5.994424,-2.131591,-5.290818,7.575005,2.407133],[9.532308,-3.680539,-6.168444,5.384902,-3.473737,-2.346988,-3.297463,2.629942,9.669185,7.389811,-1.650414,8.165078,2.842510,-0.691617,-7.777549,4.513794,-1.119712,-1.055784,5.124639,-8.206151,-5.697018,5.924612,-0.314139,-6.009959,4.153670,-2.229429,5.233510,-1.299380,6.165515,0.829826,-9.756767,0.717381,-8.199771,2.039164,4.170500,-2.604640,9.346035,-2.342829,-1.078967,3.503372,-0.572313,3.307635,3.189903,-9.618820,-2.559497,-8.100258,-3.858845,0.649427,4.680013,5.026070,-9.248583,1.974447,6.901376,8.619898,-0.666175,3.703660,-8.745356,-4.579508,-6.375493,-7.316646,-9.907164,2.881161,-1.542301,-8.028334,4.528519,8.739292,7.210516,3.916545,-9.499897,-3.023443,5.019676,-6.314668,-3.423766,0.337143,4.182331,9.489164,5.759891,0.975701,-0.642475,0.245889,5.744197,7.165432,7.895581,8.272714,-0.019332,5.866534,2.946144,4.636310,-8.939401,-3.726188,6.300597,-4.149892,-7.992495,-3.982096,0.071450,-6.498845,-8.981884,3.372347,7.386947,-6.716036,-2.045105,0.579067,5.408624,7.242431,-8.204242,5.369899,4.186674,-1.967444,1.362409,-8.625234,-8.475152,9.457047,4.600263,0.222733,7.725118,-3.236337,7.469585,1.821308,-2.167139,-3.076786,-4.736838,-8.523520,0.089179,1.581614,-0.397869,9.118921,3.579226,6.704371,2.920208,1.402737,-3.787567,-2.186195,2.857087,-5.485310,-1.273795,-4.942439,2.091195,9.744223,2.644298,0.924324],[-9.856367,6.279704,-5.619876,-6.889694,4.344578,-2.661865,0.187422,2.838066,1.787929,6.275848,-6.469475,-1.814126,-9.908503,1.213560,5.178503,5.237549,9.116432,9.538048,-6.553202,-6.940263,3.093213,9.089570,0.718578,6.280995,2.890647,4.057893,0.359847,2.174013,6.887203,9.954285,3.380677,-7.831150,9.922898,-6.530746,-0.101009,9.914928,-9.994157,-8.765623,9.990390,-2.944787,-3.435840,6.399580,2.083337,-3.012530,7.941980,2.599801,-8.031178,5.945320,6.601726,1.726349,-0.127760,7.459342,-8.021899,3.929106,-4.882525,-8.611997,2.674854,-2.200127,-2.797938,1.327614,-0.124296,-4.614703,-6.937933,4.589148,-5.671215,5.279754,4.964606,5.617578,6.462773,-7.983984,-4.184286,-8.500178,-8.030045,-0.942446,0.300900,-1.162981,5.125390,6.629312,-0.508873,7.010713,7.524011,-9.797846,-7.867556,-7.197790,-0.380561,9.855615,2.995795,-1.453553,-2.489038,-9.768944,-9.194429,7.949459,-6.307228,6.065589,3.151995,9.807355,-8.386216,-5.422290,4.470902,-1.338772,4.308502,-7.930339,8.758352,-2.015860,2.678613,-8.537143,7.689240,8.216559,-9.075347,-5.527035,-6.358380,-8.254694,3.949024,4.747211,-9.853722,-5.329969,1.094888,-2.178725,2.698356,-9.953056,-1.335225,-1.161766,-7.805754,0.316138,1.911947,0.245969,0.195650,-9.000483,-9.469416,0.994795,4.578846,-2.551369,-3.367352,6.559309,5.998398,-5.621395,-5.152488,8.176535,8.686902,0.316013],[-1.680868,-6.861309,5.206010,8.217940,-7.306039,-9.532957,-2.276010,-5.158088,2.413122,5.294858,5.570731,-8.433649,-4.440927,-5.410966,-6.850424,-5.849858,-6.143605,-6.161264,3.517809,4.572070,-0.375586,5.332488,-3.334165,2.316909,-5.649400,-6.961514,7.266898,7.789845,-0.417578,8.674914,-1.003745,-9.705059,-4.094913,-0.405409,-4.801502,4.071433,8.240359,4.351059,-9.244655,3.777320,1.086018,-5.845659,4.724655,8.773892,7.062095,-6.552665,-7.919246,2.730861,-9.753659,6.385186,8.543811,0.675114,6.444150,9.074265,-6.686040,-2.950392,-8.607127,-4.684320,2.790248,-3.271479,-7.720428,-8.663484,6.041480,4.967004,6.738317,-3.044692,7.547321,8.500714,-6.121686,-4.356275,0.110559,1.495081,5.680898,8.329392,2.236746,4.850463,3.413582,-1.922377,0.322273,-5.197771,-1.689787,-2.001915,-1.403433,5.756613,-0.647211,3.969009,-0.671815,3.540174,-8.905486,-3.274888,-2.721242,6.384427,0.928956,-3.360567,5.301303,9.509900,6.539686,7.866917,3.984834,8.463023,-2.487673,-4.792074,6.716347,-0.282685,-2.145300,4.734877,0.899353,-3.526732,-7.529141,0.697932,0.154273,-5.700474,-6.479505,2.103029,-3.421520,3.956940,0.295598,1.737571,-8.475338,7.895146,8.978651,6.311918,1.473834,0.191451,4.665458,-8.174149,-8.913021,9.762018,-2.462123,-9.189842,1.000110,-3.938636,6.362017,9.294411,2.809758,1.764696,0.601778,6.515770,-9.843667,0.569238]], dtype = "float32")#candidate|1256|(18, 140)|const|float32
call_1255 = relay.TupleGetItem(func_325_call(relay.reshape(const_1256.astype('float32'), [6, 420])), 0)
call_1257 = relay.TupleGetItem(func_328_call(relay.reshape(const_1256.astype('float32'), [6, 420])), 0)
output = relay.Tuple([uop_1238,call_1255,const_1256,])
output2 = relay.Tuple([uop_1240,call_1257,const_1256,])
func_1264 = relay.Function([], output)
mod['func_1264'] = func_1264
mod = relay.transform.InferType()(mod)
mutated_mod['func_1264'] = func_1264
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1264_call = mutated_mod.get_global_var('func_1264')
call_1265 = func_1264_call()
output = call_1265
func_1266 = relay.Function([], output)
mutated_mod['func_1266'] = func_1266
mutated_mod = relay.transform.InferType()(mutated_mod)
func_265_call = mod.get_global_var('func_265')
func_267_call = mutated_mod.get_global_var('func_267')
call_1281 = func_265_call()
call_1282 = func_265_call()
output = relay.Tuple([call_1281,])
output2 = relay.Tuple([call_1282,])
func_1285 = relay.Function([], output)
mod['func_1285'] = func_1285
mod = relay.transform.InferType()(mod)
mutated_mod['func_1285'] = func_1285
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1285_call = mutated_mod.get_global_var('func_1285')
call_1286 = func_1285_call()
output = call_1286
func_1287 = relay.Function([], output)
mutated_mod['func_1287'] = func_1287
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1079_call = mod.get_global_var('func_1079')
func_1081_call = mutated_mod.get_global_var('func_1081')
call_1288 = func_1079_call()
call_1289 = func_1079_call()
output = relay.Tuple([call_1288,])
output2 = relay.Tuple([call_1289,])
func_1296 = relay.Function([], output)
mod['func_1296'] = func_1296
mod = relay.transform.InferType()(mod)
mutated_mod['func_1296'] = func_1296
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1296_call = mutated_mod.get_global_var('func_1296')
call_1297 = func_1296_call()
output = call_1297
func_1298 = relay.Function([], output)
mutated_mod['func_1298'] = func_1298
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1186_call = mod.get_global_var('func_1186')
func_1187_call = mutated_mod.get_global_var('func_1187')
call_1328 = func_1186_call()
call_1329 = func_1186_call()
func_325_call = mod.get_global_var('func_325')
func_328_call = mutated_mod.get_global_var('func_328')
var_1343 = relay.var("var_1343", dtype = "float32", shape = (2520,))#candidate|1343|(2520,)|var|float32
call_1342 = relay.TupleGetItem(func_325_call(relay.reshape(var_1343.astype('float32'), [6, 420])), 1)
call_1344 = relay.TupleGetItem(func_328_call(relay.reshape(var_1343.astype('float32'), [6, 420])), 1)
output = relay.Tuple([call_1328,call_1342,var_1343,])
output2 = relay.Tuple([call_1329,call_1344,var_1343,])
func_1351 = relay.Function([var_1343,], output)
mod['func_1351'] = func_1351
mod = relay.transform.InferType()(mod)
var_1352 = relay.var("var_1352", dtype = "float32", shape = (2520,))#candidate|1352|(2520,)|var|float32
output = func_1351(var_1352)
func_1353 = relay.Function([var_1352], output)
mutated_mod['func_1353'] = func_1353
mutated_mod = relay.transform.InferType()(mutated_mod)
func_99_call = mod.get_global_var('func_99')
func_101_call = mutated_mod.get_global_var('func_101')
call_1541 = func_99_call()
call_1542 = func_99_call()
output = call_1541
output2 = call_1542
func_1544 = relay.Function([], output)
mod['func_1544'] = func_1544
mod = relay.transform.InferType()(mod)
mutated_mod['func_1544'] = func_1544
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1544_call = mutated_mod.get_global_var('func_1544')
call_1545 = func_1544_call()
output = call_1545
func_1546 = relay.Function([], output)
mutated_mod['func_1546'] = func_1546
mutated_mod = relay.transform.InferType()(mutated_mod)
func_597_call = mod.get_global_var('func_597')
func_599_call = mutated_mod.get_global_var('func_599')
call_1572 = relay.TupleGetItem(func_597_call(), 0)
call_1573 = relay.TupleGetItem(func_599_call(), 0)
func_181_call = mod.get_global_var('func_181')
func_183_call = mutated_mod.get_global_var('func_183')
call_1586 = relay.TupleGetItem(func_181_call(), 2)
call_1587 = relay.TupleGetItem(func_183_call(), 2)
output = relay.Tuple([call_1572,call_1586,])
output2 = relay.Tuple([call_1573,call_1587,])
func_1590 = relay.Function([], output)
mod['func_1590'] = func_1590
mod = relay.transform.InferType()(mod)
output = func_1590()
func_1591 = relay.Function([], output)
mutated_mod['func_1591'] = func_1591
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1264_call = mod.get_global_var('func_1264')
func_1266_call = mutated_mod.get_global_var('func_1266')
call_1621 = relay.TupleGetItem(func_1264_call(), 2)
call_1622 = relay.TupleGetItem(func_1266_call(), 2)
uop_1624 = relay.sigmoid(call_1621.astype('float64')) # shape=(18, 140)
uop_1626 = relay.sigmoid(call_1622.astype('float64')) # shape=(18, 140)
output = relay.Tuple([uop_1624,])
output2 = relay.Tuple([uop_1626,])
func_1634 = relay.Function([], output)
mod['func_1634'] = func_1634
mod = relay.transform.InferType()(mod)
output = func_1634()
func_1635 = relay.Function([], output)
mutated_mod['func_1635'] = func_1635
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1634_call = mod.get_global_var('func_1634')
func_1635_call = mutated_mod.get_global_var('func_1635')
call_1650 = relay.TupleGetItem(func_1634_call(), 0)
call_1651 = relay.TupleGetItem(func_1635_call(), 0)
func_181_call = mod.get_global_var('func_181')
func_183_call = mutated_mod.get_global_var('func_183')
call_1655 = relay.TupleGetItem(func_181_call(), 2)
call_1656 = relay.TupleGetItem(func_183_call(), 2)
func_862_call = mod.get_global_var('func_862')
func_864_call = mutated_mod.get_global_var('func_864')
call_1659 = relay.TupleGetItem(func_862_call(), 0)
call_1660 = relay.TupleGetItem(func_864_call(), 0)
func_1033_call = mod.get_global_var('func_1033')
func_1036_call = mutated_mod.get_global_var('func_1036')
call_1662 = relay.TupleGetItem(func_1033_call(relay.reshape(call_1650.astype('float32'), [2520,])), 2)
call_1663 = relay.TupleGetItem(func_1036_call(relay.reshape(call_1650.astype('float32'), [2520,])), 2)
func_533_call = mod.get_global_var('func_533')
func_537_call = mutated_mod.get_global_var('func_537')
call_1670 = relay.TupleGetItem(func_533_call(relay.reshape(call_1650.astype('float32'), [6, 420]), relay.reshape(call_1662.astype('float32'), [2520,]), ), 1)
call_1671 = relay.TupleGetItem(func_537_call(relay.reshape(call_1650.astype('float32'), [6, 420]), relay.reshape(call_1662.astype('float32'), [2520,]), ), 1)
output = relay.Tuple([call_1650,call_1655,call_1659,call_1662,call_1670,])
output2 = relay.Tuple([call_1651,call_1656,call_1660,call_1663,call_1671,])
func_1672 = relay.Function([], output)
mod['func_1672'] = func_1672
mod = relay.transform.InferType()(mod)
output = func_1672()
func_1673 = relay.Function([], output)
mutated_mod['func_1673'] = func_1673
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1107_call = mod.get_global_var('func_1107')
func_1109_call = mutated_mod.get_global_var('func_1109')
call_1708 = func_1107_call()
call_1709 = func_1107_call()
const_1721 = relay.const([[[False,False,False,True,False,True,True,True,True,False,False,True],[True,False,True,False,True,True,False,True,False,True,True,True],[True,True,True,False,False,False,False,False,False,False,False,False]],[[True,True,True,False,False,False,False,True,False,True,True,True],[True,False,False,True,True,False,True,False,True,False,False,False],[False,False,False,False,False,False,True,True,False,False,False,False]],[[False,False,True,True,True,True,False,False,True,True,False,False],[True,True,True,False,True,True,False,False,False,True,False,False],[True,True,False,True,False,False,True,False,False,True,True,True]],[[False,False,False,True,True,False,True,False,True,False,False,False],[False,True,False,False,False,True,False,True,False,False,True,False],[False,False,True,False,True,False,False,True,False,False,False,True]],[[False,False,True,True,False,False,True,False,True,False,False,True],[True,True,False,True,True,True,False,False,False,True,False,True],[True,False,True,False,False,True,True,False,True,True,True,False]],[[True,True,False,False,True,True,True,False,False,True,True,True],[True,True,True,True,False,False,False,False,False,True,False,True],[True,True,True,False,False,True,False,True,False,True,True,True]],[[False,False,True,False,False,False,True,True,False,True,False,False],[True,False,False,True,False,False,False,True,False,False,True,False],[True,False,False,True,True,True,False,True,False,True,True,False]],[[True,False,True,True,True,True,False,False,True,False,False,True],[True,False,False,True,False,False,True,True,False,True,False,True],[True,False,False,True,True,True,True,True,True,False,False,True]],[[True,False,True,False,True,True,False,False,False,False,True,False],[False,False,False,False,False,False,True,True,True,True,False,False],[False,True,True,False,True,False,True,False,False,False,False,True]],[[False,False,True,False,True,False,False,True,True,False,False,True],[True,True,False,False,True,False,False,True,True,False,True,False],[False,False,False,False,True,False,False,True,True,True,True,False]],[[False,True,True,True,False,True,False,True,True,False,True,False],[False,True,True,True,True,True,True,True,True,True,False,False],[True,False,True,False,True,False,False,True,False,False,False,False]],[[True,False,True,False,False,False,False,False,True,False,True,True],[True,False,False,False,True,False,True,True,False,False,True,False],[True,False,True,True,False,False,True,True,False,False,False,True]],[[False,False,True,True,False,True,False,True,True,True,False,True],[True,True,False,False,True,True,False,False,True,True,True,True],[True,False,True,False,False,True,True,False,True,False,False,False]],[[True,False,True,True,True,True,False,True,False,False,True,False],[True,True,False,True,False,False,False,False,False,True,False,True],[False,True,True,False,True,True,False,True,False,True,False,True]]], dtype = "bool")#candidate|1721|(14, 3, 12)|const|bool
bop_1722 = relay.bitwise_and(call_1708.astype('int16'), const_1721.astype('int16')) # shape=(14, 3, 12)
bop_1725 = relay.bitwise_and(call_1709.astype('int16'), const_1721.astype('int16')) # shape=(14, 3, 12)
func_1186_call = mod.get_global_var('func_1186')
func_1187_call = mutated_mod.get_global_var('func_1187')
call_1727 = func_1186_call()
call_1728 = func_1186_call()
func_862_call = mod.get_global_var('func_862')
func_864_call = mutated_mod.get_global_var('func_864')
call_1738 = relay.TupleGetItem(func_862_call(), 0)
call_1739 = relay.TupleGetItem(func_864_call(), 0)
output = relay.Tuple([bop_1722,call_1727,call_1738,])
output2 = relay.Tuple([bop_1725,call_1728,call_1739,])
func_1747 = relay.Function([], output)
mod['func_1747'] = func_1747
mod = relay.transform.InferType()(mod)
output = func_1747()
func_1748 = relay.Function([], output)
mutated_mod['func_1748'] = func_1748
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1755 = relay.var("var_1755", dtype = "int8", shape = (3, 10, 4))#candidate|1755|(3, 10, 4)|var|int8
var_1756 = relay.var("var_1756", dtype = "int8", shape = (3, 10, 4))#candidate|1756|(3, 10, 4)|var|int8
bop_1757 = relay.bitwise_xor(var_1755.astype('int8'), relay.reshape(var_1756.astype('int8'), relay.shape_of(var_1755))) # shape=(3, 10, 4)
func_1079_call = mod.get_global_var('func_1079')
func_1081_call = mutated_mod.get_global_var('func_1081')
call_1765 = func_1079_call()
call_1766 = func_1079_call()
func_1590_call = mod.get_global_var('func_1590')
func_1591_call = mutated_mod.get_global_var('func_1591')
call_1773 = relay.TupleGetItem(func_1590_call(), 1)
call_1774 = relay.TupleGetItem(func_1591_call(), 1)
output = relay.Tuple([bop_1757,call_1765,call_1773,])
output2 = relay.Tuple([bop_1757,call_1766,call_1774,])
func_1776 = relay.Function([var_1755,var_1756,], output)
mod['func_1776'] = func_1776
mod = relay.transform.InferType()(mod)
var_1777 = relay.var("var_1777", dtype = "int8", shape = (3, 10, 4))#candidate|1777|(3, 10, 4)|var|int8
var_1778 = relay.var("var_1778", dtype = "int8", shape = (3, 10, 4))#candidate|1778|(3, 10, 4)|var|int8
output = func_1776(var_1777,var_1778,)
func_1779 = relay.Function([var_1777,var_1778,], output)
mutated_mod['func_1779'] = func_1779
mutated_mod = relay.transform.InferType()(mutated_mod)
func_181_call = mod.get_global_var('func_181')
func_183_call = mutated_mod.get_global_var('func_183')
call_1834 = relay.TupleGetItem(func_181_call(), 0)
call_1835 = relay.TupleGetItem(func_183_call(), 0)
var_1852 = relay.var("var_1852", dtype = "float32", shape = (14, 13, 12))#candidate|1852|(14, 13, 12)|var|float32
bop_1853 = relay.subtract(call_1834.astype('uint32'), var_1852.astype('uint32')) # shape=(14, 13, 12)
bop_1856 = relay.subtract(call_1835.astype('uint32'), var_1852.astype('uint32')) # shape=(14, 13, 12)
output = bop_1853
output2 = bop_1856
func_1865 = relay.Function([var_1852,], output)
mod['func_1865'] = func_1865
mod = relay.transform.InferType()(mod)
var_1866 = relay.var("var_1866", dtype = "float32", shape = (14, 13, 12))#candidate|1866|(14, 13, 12)|var|float32
output = func_1865(var_1866)
func_1867 = relay.Function([var_1866], output)
mutated_mod['func_1867'] = func_1867
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1264_call = mod.get_global_var('func_1264')
func_1266_call = mutated_mod.get_global_var('func_1266')
call_1915 = relay.TupleGetItem(func_1264_call(), 2)
call_1916 = relay.TupleGetItem(func_1266_call(), 2)
uop_1918 = relay.asinh(call_1915.astype('float32')) # shape=(18, 140)
uop_1920 = relay.asinh(call_1916.astype('float32')) # shape=(18, 140)
output = uop_1918
output2 = uop_1920
func_1921 = relay.Function([], output)
mod['func_1921'] = func_1921
mod = relay.transform.InferType()(mod)
mutated_mod['func_1921'] = func_1921
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1921_call = mutated_mod.get_global_var('func_1921')
call_1922 = func_1921_call()
output = call_1922
func_1923 = relay.Function([], output)
mutated_mod['func_1923'] = func_1923
mutated_mod = relay.transform.InferType()(mutated_mod)
func_597_call = mod.get_global_var('func_597')
func_599_call = mutated_mod.get_global_var('func_599')
call_1952 = relay.TupleGetItem(func_597_call(), 0)
call_1953 = relay.TupleGetItem(func_599_call(), 0)
output = relay.Tuple([call_1952,])
output2 = relay.Tuple([call_1953,])
func_1954 = relay.Function([], output)
mod['func_1954'] = func_1954
mod = relay.transform.InferType()(mod)
output = func_1954()
func_1955 = relay.Function([], output)
mutated_mod['func_1955'] = func_1955
mutated_mod = relay.transform.InferType()(mutated_mod)
func_59_call = mod.get_global_var('func_59')
func_60_call = mutated_mod.get_global_var('func_60')
call_1974 = relay.TupleGetItem(func_59_call(), 0)
call_1975 = relay.TupleGetItem(func_60_call(), 0)
func_954_call = mod.get_global_var('func_954')
func_956_call = mutated_mod.get_global_var('func_956')
const_1986 = relay.const([9.673460,9.832118,7.261810,3.890330,-9.267704,-5.550772,2.000701,6.476131,-9.432556,5.930789,2.437222,-6.694072,-9.513683,-1.129631,1.612075,-4.252890,2.758388,-2.132661,-2.270200,-1.830301,5.697440,-5.982935,4.007663,0.063701,-8.001769,5.507387,-2.150893,-1.661671,0.788851,9.976382,-3.479198,0.199405,0.143585,-6.514417,5.221359,-5.911678,5.429769,-5.908207,-3.166419,-2.875404,-6.911929,-1.532060,3.495568,4.635678,-8.260184,-7.490480,-8.332061,-9.482551,7.458372,0.383820,-0.977031,3.029571,-6.872222,-9.093279,-2.636222,-7.435722,-8.341162,6.364351,7.879324,-8.554303,7.801450,-2.541930,7.674154,6.592080,1.380111,2.310169,4.238828,-6.010785,-7.887766,-1.232517,8.480997,7.177490,-2.793242,-4.587584,-3.433577,1.391640,3.476746,3.554848,-1.650784,2.476495,-2.704552,4.929505,-7.733895,6.452391,-4.270380,9.438047,-1.756472,-3.859721,2.024735,-2.267407,1.151308,-1.753642,2.662642,4.422067,-6.593078,-7.971526,-7.259818,-8.913280,1.164508,8.963855,-6.082748,7.577734,-5.997322,0.910788,-6.219387,6.026237,4.648073,-5.726961,3.668342,-1.260719,9.892781,-5.467356,6.033775,-1.906630,4.275980,-2.439958,-9.477496,-0.391456,2.560658,-3.662466,-9.878974,-0.557556,5.977611,-7.989893,-0.821051,3.488007,0.887523,6.069224,-1.301241,3.719205,-4.809695,9.705801,-0.874448,0.770004,9.240086,8.927423,0.128890,1.312001,7.407245,4.506595,5.597667,4.429981,6.138381,9.089431,-5.720197,3.207238,-2.706419,7.266578,-9.999453,4.916554,-3.475072,0.264274,-8.780780,6.443079,6.661936,1.194407,8.130193,6.325545,-1.109823,-7.802982,-6.553416,3.804506,5.194433,0.274292,8.217067,3.102059,4.734919,1.494780,-3.783960,3.896475,2.051436,-6.590410,7.346385,4.278293,-3.585622,-7.687680,4.767433,6.291067,-2.469549,0.963927,9.283207,-2.935780,7.836314,-4.733355,-2.642455,6.450952,6.114683,-0.031580,-1.158628,-9.643688,3.083687,2.643660,-6.740668,1.671602,9.413362,-7.632539,-1.809152,1.534675,-5.520443,3.560026,-6.472265,-1.239966,-1.397644,-3.373946,9.392650,8.171041,-2.281195,0.500396,2.337464,3.292005,6.308457,-8.756156,-9.059295,-3.335825,5.015421,4.746684,-0.510529,1.318053,-1.282190,1.733997,-7.882519,1.382055,6.566213,0.904417,8.849380,9.249442,-8.940957,-9.222956,-2.814994,0.444002,-9.403797,0.562435,4.631834,9.252897,-5.230578,3.933273,6.428057,4.288896,5.837385,-4.075435,-0.040922,-0.665386,8.344324,4.306929,8.431082,1.936006,-4.532959,-8.265796,-3.785266,1.341609,6.022930,2.736164,6.383555,7.304950,-3.424007,-7.264807,-5.771930,7.449735,3.680334,1.386152,-5.804896,8.688368,1.629692,-3.352504,6.126101,-2.648097,-6.917134,-5.743192,1.393070,-5.888859,4.202459,-5.986177,6.668413,8.337753,-0.969996,7.385371,2.942218,8.714803,7.738354,-9.610666,-3.707287,6.830369,7.861986,-0.241969,1.840045,-9.972931,0.892765,-3.296988,-6.596441,-4.599170,-5.283504,7.574236,-8.641677,-6.808167,-4.749746,-3.288199,-3.056455,1.764555,9.980644,-1.385308,5.445108,3.483146,1.652408,6.329103,4.267236,-4.824811,-7.787790,-6.856648,2.337394,-4.085593,1.583457,-7.109496,-9.447749,8.738688,5.008331,-5.939097,-0.770651,-0.054542,-6.657600,-4.053265,0.524888,6.298711,-1.245426,-2.671431,5.126260,-0.489684,9.791284,-8.473872,-8.254891,-8.152992,5.602397,-7.534924,-1.492506,7.542367,6.638852,9.839528,-5.728880,-9.064890,-2.732595,-2.761710,6.269286,-7.545631,6.124786,-7.969765,0.064525,-3.562750,9.849486,-3.834477,8.513334,-7.217116,7.193861,1.766335,0.453040,7.608763,-9.828749,2.344970,-5.843859,-4.814999,-7.749574,0.608479,2.116723,-8.164953,3.033480,6.115251,-5.766423,2.055575,9.143574,9.103805,-9.008664,-6.331396,1.968251,-4.754706,2.141665,7.125627,6.866766,4.368696,-5.299064,5.747031,2.073143,-8.921688,7.438439,3.321357,-2.108382,7.749767,4.015061,3.498521,7.569759,-7.669805,7.171741,-0.554367,9.240639,8.100506,1.275971,0.207302,8.377759,-7.313697,8.983330,6.043127,-6.418922,-8.726589,-1.412508,-2.611292,3.125525,1.302093,6.659337,2.484127,3.317845,-0.266371,2.724480,4.063915,-7.804452,5.103228,-8.628899,5.911636,1.940999,-1.122065,-7.408029,1.024927,-5.900399,-7.977378,-6.151632,-6.628268,-1.487089,-1.498785,-4.276499,8.409360,9.168133,-5.357638,3.273032,7.706636,3.718751,4.431383,-9.670734,6.101046,1.564139,-7.407378,2.964834,5.646351,-5.490532,7.355990,-7.496232,4.933843,-1.932032,6.187093,9.639169,-6.178607,-5.394030,-2.804523,8.474505,7.867469,9.021688,-7.920733,-9.859846,8.650646,-7.592690,4.404015,3.103627,-0.645128,-9.852832,1.348329,-8.184622,-4.470243,6.051695,-9.083475,-3.145123,1.188347,9.894863,-6.719435,-9.848055,-8.462897,5.879092,3.318181,-0.464341,-2.416780,3.544282,3.722852,8.761337,-0.824864,-8.040867,1.147376,3.898273,4.126348,0.545261,-9.925273,9.872190,-2.844495,6.824888,0.950108,4.696990,-5.993715,3.912443,7.303303,-2.782920,-2.064882,-1.944090,7.480237,-2.685080,-1.514842,1.403827,6.377058,-4.630748,1.884544,8.257767,0.350794,-1.821958,9.412444,8.996663,-2.191205,7.180895,1.799530,3.947207,5.058851,2.503106,9.380594,-7.237833,3.036521,-9.264791,-4.885540,9.707484,-2.443974,-6.365425,7.569432,-7.500440,2.309297,-8.709120,8.483180,3.191707,-6.716477,2.411597,9.216647,-2.574748,-1.032382,1.074850,0.359517,-3.843625,-4.706684,2.165033,2.654496,-9.342108,7.375504,1.080178,-6.749280,5.027000,6.471133,-2.881851,1.153853,2.896980,7.957670,-1.964885,0.551416,-4.740246,1.453380,3.671268,-0.852512,8.804021,5.168889,-9.102372,-4.528937,-5.256808,-1.740539,-6.203352,7.191647,6.213573,3.679446,3.258612,0.168172,-9.228671,-0.114372,1.953117,5.392167,-3.784868,5.023568,-9.587945,1.724308,8.194417,8.490158,7.621591,8.627603,5.946310,-7.408275,5.235797,7.374437,2.669571,1.322983,-0.189371,8.306979,5.562651,3.565842,-1.025483,-7.555691,9.491790,-6.510402,0.241924,0.577552,-8.678546,1.192605,8.849091,3.164094,-7.341738,0.581263,-1.725620,-3.892614,2.330470,5.703600,-1.457476,2.702750,-1.919913,-0.314959,4.115567,-9.906665,8.645425,1.812652,-9.115792,6.714718,-2.367051,1.880931,-3.880666,-0.535613,-0.558951,4.986084,-1.157910,-1.960679,-3.430069,-4.684902,-6.086661,3.040613,-2.738159,3.336372,-3.066375,-2.902649,9.687173,9.023646,0.401596,-3.249098,8.018662,-8.681876,-3.436155,-9.413084,5.309319,8.109948,-4.637630,3.107922,4.766201,4.160605,-2.784934,-9.633700,-6.404625,0.982565,-9.448196,2.981626,8.867724,9.250978,-9.115940,0.641955,-3.594605,6.291732,1.764742,5.511637,5.583399,-3.421041,-2.828298,-8.889146,-6.653634,-2.890715,9.560071,8.837776,3.249653,-6.767817,-6.263215,2.822036,-1.182556,9.748864,-9.122128,2.367246,-6.949352,7.842501,-6.771519,7.314232,7.056106,0.400854,2.486884,1.111757,8.559413,-6.310368,8.907250,-2.994180,-6.766779,-2.756683,6.741303,9.034560,2.580261,-6.904785,-7.397134,3.454999,-4.892070,-0.128081,6.194585,-2.696381,4.508723,-7.650585,1.227790,8.677071,4.807184,-9.514437,5.946309,-6.299312,-9.766494,-3.030824,-7.483676,-6.727252,3.121404,-7.057912,-6.982384,9.987815,7.912480,3.791329,4.243285,-7.153897,-1.701427,6.218407,-5.578134,-4.061206,-1.005553,1.387880,-8.764882,6.526171,-3.274022,-6.681526,0.380976,7.768639,-8.995101,6.440008,2.469162,-2.267074,-3.028409,0.927746,3.966914,2.695122,-4.989253,-6.324958,-1.751472,-4.717559,1.715006,1.439139,4.196401,5.297658,6.029146,1.003703,-0.421703,-9.593914,1.553404,-7.476634,-0.951330,-1.711540,-8.211623,0.693453,5.905022,-6.387986,5.472135,2.782097,-1.556243,-5.415037,2.412255,-9.828805,7.601000,-3.328519,-6.752741,3.575030,-5.922905,5.498325,-8.409089,7.435266,1.441710,-8.025438,5.027135,9.519435,-4.082438,-2.831182,6.589267,2.581687,4.326694,7.024612,-3.130755,-3.465482,-9.643547,-4.129441,9.015533,-6.792072,9.326126,2.441590,-4.695473,-4.697791,-1.855698,-7.875960,7.993651,-4.297725,5.634145,-9.425499,-2.917658,-1.289696,-0.682963,9.822836,-7.053959,-6.873315,-5.182823,2.965861,-4.320793,5.074075,-4.673490,-3.099634,3.198936,-3.166003,-2.890753,6.385010,-1.049064,-4.810798,-6.455939,-7.025533,9.195067,-0.614425,-5.535114,3.014932,6.941670,5.622229,-5.200487,8.765072,-5.726460,5.603570,-8.479276,8.467711,-4.022234,0.050179,9.945611,-5.840158,6.977712,-3.673828,-6.011259,-7.006500,-0.737059,2.784987,-6.433993,-3.470856,-9.454541,1.464826,-8.209570,3.144740,-9.599436,9.043305,-6.991559,8.172412,-0.753212,6.504923,7.656386,-8.570913,8.818700,-6.812132,-1.943418,-7.102557,-5.363789,8.107944,-7.574374,-3.707024,-5.656822,-6.775689,4.689032,-6.435137,0.103603,-2.288441,7.913118,-1.673939,-4.575843,-5.676355,-3.642629,6.530144,1.954470,9.290028,-3.256791,-9.324609,-7.158755,0.898517,-3.685078,6.302780,-5.204687,-6.634855,0.475171,-8.857961,-5.077990,-8.041350,-5.666516,0.876634,7.386614,3.560715,-9.275332,-8.143842,2.857796,-4.025482,6.115399,8.402702,9.737101,6.149759,1.514592,-6.333872,5.094466,-7.260025,9.133325,0.466753,-3.288437,-3.625581,-9.330137,0.860033,-7.043919,-3.124390,-4.020161,7.615704,2.329715,-5.018839,9.435971,-4.012647,7.877438,-8.847516,0.577963,6.797702,-2.434516,-1.590413,-7.176779,-5.945813,-4.355166,-3.531801,0.329598,-0.096701,2.424844,9.402773,-3.087207,0.760814,-9.485273,-8.780861,5.747829,5.716867,2.968818,-2.430017,-0.934386,-7.688597,9.265589,7.424614,6.705326,-3.572244,-3.535046,6.963675,1.011479,-1.708016,-8.659104,4.278880,5.334234,5.818297,2.700418,-3.795288,2.043695,-7.414613,-7.468609,3.602388,3.960491,-2.129352,0.318073,-1.433488,-8.675569,-3.225062,3.240298,-9.071734,-1.535471,6.656448,8.347405,9.872209,6.010545,-4.968426,7.092440,0.379052,4.460156,-0.973751,4.179279,1.528106,-6.905935,-0.532100,-5.911704,-2.629115,-3.050881,-1.918154,1.372657,-7.465636,3.074527,-9.207456,-0.782315,8.656101,3.351171,-2.462276,4.478267,-4.800088,1.856934,1.351890,5.663555,1.603708,-4.162549,-5.509931,7.668599,-3.408794,3.607309,-7.278105,-3.848172,4.579501,4.657077,-3.168745,2.701689,-5.265129,6.656462,-5.552855,8.915000,-6.640695,3.889843,-1.148106,-4.436421,7.074198,7.142133,8.629513,-1.798351,-7.344807,6.042765,-1.908086,3.623464,6.380397,-3.517354,-3.168776,6.430225,7.014086,8.747966,-5.583022,-2.472551,4.818832,7.455553,1.495038,9.996592,1.551599,-9.024080,3.356985,0.464546,-3.280191,0.968412,1.937756,-8.583214,5.487831,-1.735469,8.184037,-7.815823,6.288421,3.991509,4.420737,-8.270903,7.913880,-8.543631,-7.880762,-9.115547,3.272008,5.333134,-7.233314,-0.730595,9.363202,6.434281,6.321557,5.634734,2.801478,-2.334623,2.308924,-9.822709,2.690174,-6.991257,-7.323104,4.539119,-7.771874,-3.576959,-0.295006,-2.198298,-3.464049,-8.828311,9.671467,-3.129123,-0.906710,0.206413,8.276903,7.592404,-7.461767,-8.559289,-5.062421,4.758008,2.311327,7.289200,-5.005965,4.700488,-3.658254,-3.994315,-9.931552,-0.375424,7.830736,-1.989757,5.639244,-2.052893,3.306068,-5.666731,-3.172894,-8.844183,-8.008795,3.561453,-4.271352,9.152392,-3.562267,-1.385592,-2.728277,8.323029,5.528736,-5.027974,4.404848,-8.187666,6.995256,-5.446388,-5.412662,6.161399,3.540915,4.371257,-2.407675,-7.633945,0.479944,9.347626,2.813379,5.556875,-1.762045,-5.327747,-1.894209,2.568458,4.708676,9.322546,-3.239815,-4.033624,6.559260,5.993073,-7.256712,-0.266418,2.694892,5.630752,4.448282,0.982316,-3.933586,7.308227,-6.114952,4.573059,6.719031,-3.807273,0.904332,7.354434,-2.103983,-4.458003,-0.883957,-5.417578,-3.304170,-2.638742,1.524745,-3.908376,2.422427,-7.915810,-9.206790,-6.299465,0.183722,2.716515,6.618175,9.098357,-9.317813,6.786808,8.641965,-7.427538,9.592597,9.496952,-8.474332,7.880270,1.383058,5.909164,7.574796,0.627966,-4.009110,7.806878,7.430280,-6.395934,5.982312,-2.210269,4.273865,-0.376940,-1.193507,8.540209,7.794981,-5.849483,8.409101,-3.903035,0.124650,3.611542,7.489605,-5.442898,9.886308,-7.195670,-6.115998,6.082967,2.428530,-3.837074,6.539822,-3.288667,-7.073381,-3.911655,-6.268845,-6.166785,-5.986652,-1.396157,9.017738,8.709315,2.309270,2.626630,-4.331013,5.425190,-9.052137,2.317218,-4.592208,8.200684,4.510688,-9.767904,-1.002973,2.550381,-2.680640,-3.391301,-8.601802,-7.796518,7.069316,5.377830,5.157403,7.787939,0.869651,7.917237,-7.772934,-5.907694,-2.260453,-8.652715,-6.025327,-5.495758,0.402166,-1.433987,-1.211324,9.445420,-8.929162,1.568789,4.755699,2.309743,-2.993842,-5.770228,5.639058,-3.401757,3.634907,7.980852,-7.417049,-4.284644,-0.974139,-0.658028,-2.462018,0.642851,-3.307068,-1.634588,8.528143,-0.415207,-0.915340,6.094110,-4.822611,-6.873076,-9.538232,3.292390,4.342575,-4.250668,-3.369842,-3.328618,-5.252050,1.365727,-2.891855,-3.612134,6.754266,5.046544,-1.138112,-0.660111,-1.998257,-4.881830,-1.122454,-3.200256,-0.429284,9.939301,6.799507,3.680570,5.611772,-1.384449,-6.138295,-8.078650,-1.563501,8.193892,-3.798765,4.405834,-4.068576,6.656334,7.202338,-0.503824,-5.566193,-5.093368,5.764985,5.052723,-9.303739,5.061611,-8.494342,-9.084600,7.003629,2.567875,2.925874,4.607916,2.085533,-7.777632,-6.852325,-7.565284,2.769249,-5.222993,-9.011734,2.353244,3.164361,7.336380,-1.899286,-2.599304,9.680062,7.921967,-6.323792,8.925160,5.749218,-8.779657,-0.129439,-1.988852,6.554769,7.087747,-7.565727,-1.507902,9.729198,-0.929382,-3.986465,2.984403,-4.853952,-5.369879,7.126159,-7.430008,-3.392512,-6.481154,4.446820,-5.601995,3.350093,-4.589556,-9.869132,-6.118671,-8.893842,-8.036052,0.707169,2.952862,-0.549991,7.098427,5.514449,3.584247,-4.990344,-8.837292,-8.295061,6.913051,-0.522989,-1.963288,-3.956058,-9.026960,3.048901,8.248630,3.686799,-1.500430,1.215501,3.541015,-7.465577,-4.466221,3.710807,-3.457471,5.193912,5.378464,-9.894461,-8.168481,-2.764019,1.860753,6.932723,5.844729,7.560549,2.978656,3.099688,5.083573,6.901314,-0.222418,7.614883,-3.504640,-3.501121,-6.599609,1.685133,-4.608980,-8.895914,7.672686,-4.684399,-6.929205,1.904818,-5.951256,-8.018093,-9.015802,9.807360,-3.743765,9.312903,0.023945,1.341354,-6.311965,8.628239,-9.997467,1.847384,5.342282,-2.892591,5.744206,9.712968,-1.221815,-1.135177,3.507717,-8.963055,-0.165605,5.994847,8.574449,5.152780,0.442052,-9.525794,-8.986481,-9.460073,-2.965974,0.115460,-4.165713,8.723080,7.047856,0.739857,-6.851098,-8.862532,4.672447,-7.821271,-7.992091,9.754731,-0.275500,-5.880399,2.439274,1.776935,8.985346,5.919863,8.604562,1.455561,-7.410800,-7.057896,-8.697996,3.210908,-7.716807,-9.102408,-5.674003,-6.472751,-0.584882,5.189941,0.638842,5.747124,-9.876115,-0.218053,6.223645,-8.805636,-2.241186,-0.401699,9.684104,5.790492,-3.712537,3.166391,7.337809,4.511502,-3.834671,1.966542,5.879540,-5.165778,3.145586,-6.127382,-0.349977,1.186797,9.604895,2.912884,0.242316,-2.441867,3.574372,-2.633244,5.388466,-7.200861,9.045658,-6.860730,-3.362950,-9.597163,0.626815,-3.115141,7.640605,5.502543,-0.102132,5.929507,1.645767,8.226638,7.381855,8.784739,4.255204,-1.052866,0.030308,-3.589378,-4.419358,4.516320,2.407055,3.981816,4.995283,8.545895,-5.212260,-7.297395,-2.582391,-5.952269,5.820203,-3.714439,6.701953,0.801341,4.322218,-3.316225,-8.959571,-4.226762,1.126173,-4.793765,-9.827902,-9.557739,4.119630,-6.012426,-8.572911,6.011807,-0.557484,2.457459,3.645479,-8.315544,-4.302402,-0.112311,-4.494627,-0.176862,-3.002050,1.247366,-8.013539,4.106224,-1.460672,1.627395,-6.773355,-6.227699,-8.716608,-3.473252,3.531144,6.968955,8.320880,-5.287474,-8.757224,-2.411460,-7.505379,1.862786,1.008899,-3.286174,-1.977692,5.196886,-5.110602,2.426357,4.226892,-5.481695,-1.623247,-6.130737,7.315070,2.509887,7.574309,4.220366,4.380018,-5.513106,4.558078,-9.820307,-9.756048,0.753531,-3.806393,5.555990,-9.120997,-5.250703,0.663147,6.710402,5.831024,-9.345748,-4.923730,-0.075560,-5.010931,-3.519602,8.730054,3.889072,-5.140519,2.745916,1.973382,-0.588993,-0.697644,-2.819317,8.911688,6.543101,8.820085,3.116175,5.586958,3.553808,-1.039737,8.112164,5.606263,2.961129,9.320501,-0.912889,-5.645778,7.732450,3.444067,-6.285358,1.056787,9.829614,-3.067655,-1.538910,4.521159,7.096009,0.386871,5.765374,-4.414894,7.547219,5.690877,-5.830559,-8.900116,4.903186,-0.059282,8.286831,1.203808,-7.331640,8.608627,4.461110,-7.565749,8.553821,4.567635,-8.240629,1.431368,-3.184620,8.709385,-1.600657,-5.384930,2.284342,-7.034831,-3.355797,-0.728287,4.840088,5.533576,-3.558276,2.811319,9.935010,-1.551356,-8.855754,5.124663,8.650754,-4.503285,9.520596,7.401919,5.642555,1.038388,9.372391,-5.690282,7.600252,8.265819,3.732755,8.535302,2.056425,7.660733,-1.950358,-0.853993,7.436491,5.923966,7.712816,-9.748976,-7.702295,-2.395261,0.565040,-3.770964,-8.044893,-3.582577,3.522478,8.856202,4.761332,-4.963662,6.241759,0.180774,2.812869,2.322443,6.316845,8.154458,2.376917,7.136082,-7.245972,-3.744559,9.921687,2.584816,-9.434438,-4.830969,1.180851,6.808866,5.313340,5.728297,-4.622273,-9.692166,-4.912385,4.378617,2.825982,-0.700173,0.148895,2.128032,9.889394,6.012318,6.163178,-8.974574,-0.140865,2.935125,-4.806292,9.488986,-1.208120,1.469968,8.481167,-3.400443,2.524108,0.936004,1.440687,-0.001156,7.782205,9.970802,6.533454,4.067767,5.985545,1.423371,3.211217,-1.496836,-0.075159,0.606077,6.415150,2.683302,-7.931511,6.445831,4.380194,2.345741,7.919223,7.377209,-8.580160,-2.864366,2.430214,7.064014,-5.200543,-9.470511,9.069102,3.344307,-3.569012,-7.667225,8.072614,-6.785994,8.779406,7.801525,-2.616552,4.702985,1.999915,8.082383,5.409612,3.966607,-6.803050,9.627282,8.022384,-0.673141,9.491026,0.748684,-6.505950,9.585924,5.021780,-4.832222,6.586227,-7.588440,-4.113896,9.309382,-8.678824,1.419820,1.782569,2.333639,3.151424,-6.477068,-3.573972,5.266944,4.423851,-1.199383,0.189948,7.922289,-6.103565,7.639166,3.150733,-0.046659,-3.095171,-8.543200,-8.314178,-7.111579,-5.556058,-5.530524,-9.839131,6.864338,-3.666115,-1.378573,3.469580,-5.639466,1.723187,-2.945228,5.810108,9.436832,-3.291113,6.965340,9.294626,1.394772,-3.044326,-1.988099,5.053506,-8.770041,1.796422,-0.692438,-1.295168,-4.377924,-2.068340,-1.737621,1.152682,2.876812,-2.583403,0.812538,6.259469,7.686991,-2.907368,-7.716661,8.597198,-6.585188,-8.188243,6.091061,6.842455,-9.453660,-1.386939,6.183644,-3.661209,-9.898815,4.346856,-7.618325,-4.421615,-2.692194,0.614998,-2.467528,-4.421609,6.713129,5.615901,5.514343,-3.196997,3.033213,9.258758,9.107822,2.877902,-4.790926,9.431750,9.665597,-7.884157,-3.224632,0.180136,-1.230251,7.003814,-0.354372,8.208963,-5.016768,3.156852,-1.745035,-6.929413,4.387353,3.922982,2.763365,-6.281040,-4.894375,-7.175258,2.999485,-1.116644,6.583691,1.586145,-0.490090,-2.315584,5.239693,-1.494433,-4.087000,0.576484,2.337638,0.856223,2.016633,5.650208,-8.325030,-2.844018,3.152977,1.171145,8.242323,-7.849072,2.341389,-8.614095,6.112181,0.993357,3.533053,1.382072,1.107875,0.657708,-5.564030,8.045160,7.085024,-1.087463,-7.506240,3.933315,9.151211,6.372976,-4.162424,2.925781,9.327794,9.898675,9.843102,8.963724,2.735552,6.621641,2.159590,-2.566513,-0.094555,-9.228372,7.443691,-4.379339,7.203492,3.198875,2.103751,7.616767,5.697129,-8.411515,9.593396,-1.279691,-4.674729,0.329747,-5.523665,-4.585632,-6.136871,8.674344,5.710728,-6.272916,9.199498,-9.688039,-8.239473,6.818621,7.682351,-5.684209,7.704431,9.888388,-4.347928,-9.186023,5.677577,-1.077141,2.800461,2.134833,1.655234,4.999123,8.059576,-7.474196,-4.240921,-1.093830,8.869987,-4.819414,1.310232,-3.503052,-6.226095,-9.936498,-5.690610,-2.286247,-4.190577,-3.626187,4.581516,-8.927901,9.841992,9.805463,9.246236,9.351048,-1.278685,7.221119,-9.030051,-1.048913,-6.554059,-0.161469,4.304139,-8.789317,-8.291703,6.707771,6.974365,-3.082420,-7.341564,-8.141640,5.561970,-7.673275,9.907580,3.622646,-9.534981,0.263661,-8.332455,6.747990,-1.457272,4.933934,-6.335518,-9.635011,7.745748,-9.758918,-9.211786,2.915154,5.720908,-3.865079,0.571248,-6.577415,4.046983,7.198236,3.011189,0.923231,-1.363314,-8.543104,6.526963,-3.680965,5.855823,3.300207,6.691536,-3.107754,-9.739820,-4.293166,-0.091710,3.449849,-7.810996,-6.501654,3.276745,7.275561,-5.228410,-1.856030,-7.638688,-2.931960,-4.855409,-3.798630,-7.810286,-7.068923,4.413049,5.161144,6.755324,5.480844,1.322572,9.347115,6.855963,-3.257716,-4.770494,1.870467,-5.523625,-2.187806,0.300824,-0.801163,7.200220,9.907965,6.316649,9.709113,0.402492,-3.353069,-9.264221,-6.741816,-5.274083,3.546829,0.012038,-6.232873,3.835946,-3.795736,7.457204,-5.806501,2.172174,6.133312,-3.979563,5.719090,7.901152,-7.381370,9.465540,2.555546,-7.863581,-1.816003,2.511984,0.865447,-6.296795,-7.487308,-2.545161,-7.433481,-7.001600,7.832933,-3.282146,-9.669069,-4.179790,0.371732,1.631931,-3.450524,-4.450927,-9.764828,4.424147,-8.398189,1.162041,0.952347,0.642108,-4.390304,2.889277,7.773542,-7.658659,0.426070,-0.819965,7.361172,8.869810,0.223020,-5.515947,4.823095,5.950934,6.497932,-2.387554,9.750571,5.806853,2.349205,1.902839,-0.691533,4.645731,-3.394147,3.757697,8.075101,3.239978,-2.189169,-5.658726,4.876227,0.282359,5.683903,4.982050,6.183036,-9.247096,2.294283,2.281583,0.692449,2.912270,4.130619,1.137959,4.929055,2.674732,7.817157,-6.826300,-8.277143,2.279503,0.188722,-6.713660,1.574118,-1.482071,-4.485246,5.504421,-8.358204,8.295821,0.607487,-9.444142,-9.962132,-4.549901,-8.207528,-3.647115,-8.618617,-9.633867,8.365987,-0.925055,7.980291,2.501375,5.217133,8.001073,-5.839281,9.302670,-3.679672,-3.686005,5.681663,-8.450455,5.992702,-1.955731,-8.368622,-7.633256,0.396348,4.601498,5.499718,-3.961516,7.154385,-3.300747,7.440122,4.227714,4.033993,-5.504959,-5.987085,-9.539222,8.762333,9.850031,0.588537,7.708484,-6.160513,3.013901,-5.386009,-3.551511,-8.222497,6.172166,-2.544043,1.049624,-6.806800,3.950225,-8.594731,3.188188,-5.753139,1.238678,-5.702985,1.313565,8.141595,-8.440431,-5.104782,0.013652,7.379876,-5.595327,5.933589,9.663447,2.190254,-7.848677,8.076948,-7.119324,-0.429396,6.838444,-8.763466,-5.053140,-7.060925,8.431940,1.125325,7.190828,4.451877,4.175814,6.681173,1.106256,9.566509,-9.312093,8.444483,-9.653137,-8.988221,-8.289985,-5.507366,8.906117,5.663370,-3.425756,3.722308,0.245172,4.704114,-1.084392,2.708261,-7.038910,9.356496,8.042802,5.679264,1.253022,-5.454099,-2.368552,-9.151630,7.464911,5.060774,-3.785212,1.336366,1.120720,-9.648057,4.644534,1.397980,-8.851196,-6.391202,4.048695,-0.114392,0.458218,-9.977577,9.580116,5.658384,-4.904420,-9.216598,-6.923605,-5.675602,9.246697,6.436708,7.056884,-8.295611,2.868920,1.770225,-8.889365,9.925345,-1.130078,2.451566,-5.865816,-1.871760,0.802480,-7.243419,-8.611401,-7.723479,7.430522,-4.721478,-8.043223,9.696597,8.469470,9.974742,-9.965999,-0.690378,-4.738542,-8.979690,-9.822014,-0.603871,-2.935287,8.390534,2.204635,-5.232584,5.985223,7.046169,3.432328,-2.928587,-7.351453,-9.235739,-9.712302,6.900260,-7.655385,-5.110619,0.717337,2.659026,9.712093,-2.577153,-4.254098,6.373682,-6.379524,0.860924,1.989415,-7.778493,6.117776,-1.530753,5.509678,4.069343,-3.517219,6.892446,-8.934179,7.893679,1.572915,-5.420760,-1.207113,-9.773651,7.813961,-5.466340,5.712018,-3.730723,6.233778,-7.930271,-3.172784,-4.304269,9.724315,-4.215580,-2.449190,7.229645,-2.483241,5.490644,-7.237925,2.662962,-0.637608,-8.489933,-6.855177,-9.710077,-1.177435,9.921973,-8.267210,0.660272,8.287364,1.828065,4.017263,0.872835,0.705201,-9.556268,-1.203747,3.439351,2.275557,-8.579302,-2.426735,3.396696,-5.991250,5.179694,-9.707633,-5.774102,8.627147,-9.028712,6.030164,-8.292544,-8.334128,-7.205801,-7.197866,1.604743,1.555321,3.012508,3.398092,-1.674944,4.550925,-4.238222,-9.281687,4.217369,6.924206,-8.014699,-4.934404,6.431317,9.706271,9.294861,8.603698,9.404697,4.671652,-7.617159,5.828567,-9.390751,-8.297608,8.297079,6.584783,-6.506706,-6.889503,0.475844,5.771224,2.970988,-0.646700,-7.602552,-1.309043,7.387836,5.602444,-2.469265,-4.951421,5.562530,7.268235,-9.362661,-2.416553,9.378951,4.932277,1.799152,9.606458,-2.602391,1.981760,7.842336,-9.287567,1.875976,-7.454726,1.391180,-9.190708,-2.470073,8.804727,6.730292,1.453729,-9.546547,6.031129,-2.924148,-0.705215,3.599751,0.675980,4.702782,5.208548,3.521975,-9.804087,-0.188453,-9.466978,6.080283,4.335338,4.444684,8.087569,-1.865127,6.786060,-1.445614,9.068398,5.222482,-6.075542,-6.093889,-4.237498,-7.143550,-0.713422,8.857817,6.158187,-1.656362,7.117277,2.080164,6.089296,-9.232018,-5.046874,8.610243,-7.289737,1.529569,9.870932,-0.859786,0.970078,5.868060,2.633524,-7.590620,2.438189,-2.953538,-1.033703,2.414727,8.395762,-5.585631,-7.354118,5.884854,4.048928,-1.102063,-6.206195,-6.375346,9.769583,-3.611050,-6.941037,0.962424,3.026061,1.895844,6.060921,-4.546185,-9.669085,6.073045], dtype = "float32")#candidate|1986|(2520,)|const|float32
call_1985 = relay.TupleGetItem(func_954_call(relay.reshape(const_1986.astype('float32'), [2520,])), 3)
call_1987 = relay.TupleGetItem(func_956_call(relay.reshape(const_1986.astype('float32'), [2520,])), 3)
output = relay.Tuple([call_1974,call_1985,const_1986,])
output2 = relay.Tuple([call_1975,call_1987,const_1986,])
func_2000 = relay.Function([], output)
mod['func_2000'] = func_2000
mod = relay.transform.InferType()(mod)
output = func_2000()
func_2001 = relay.Function([], output)
mutated_mod['func_2001'] = func_2001
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1544_call = mod.get_global_var('func_1544')
func_1546_call = mutated_mod.get_global_var('func_1546')
call_2037 = func_1544_call()
call_2038 = func_1544_call()
func_1033_call = mod.get_global_var('func_1033')
func_1036_call = mutated_mod.get_global_var('func_1036')
var_2042 = relay.var("var_2042", dtype = "float32", shape = (2520,))#candidate|2042|(2520,)|var|float32
call_2041 = relay.TupleGetItem(func_1033_call(relay.reshape(var_2042.astype('float32'), [2520,])), 0)
call_2043 = relay.TupleGetItem(func_1036_call(relay.reshape(var_2042.astype('float32'), [2520,])), 0)
func_343_call = mod.get_global_var('func_343')
func_346_call = mutated_mod.get_global_var('func_346')
call_2051 = relay.TupleGetItem(func_343_call(relay.reshape(var_2042.astype('float32'), [2520,])), 1)
call_2052 = relay.TupleGetItem(func_346_call(relay.reshape(var_2042.astype('float32'), [2520,])), 1)
output = relay.Tuple([call_2037,call_2041,var_2042,call_2051,])
output2 = relay.Tuple([call_2038,call_2043,var_2042,call_2052,])
func_2056 = relay.Function([var_2042,], output)
mod['func_2056'] = func_2056
mod = relay.transform.InferType()(mod)
var_2057 = relay.var("var_2057", dtype = "float32", shape = (2520,))#candidate|2057|(2520,)|var|float32
output = func_2056(var_2057)
func_2058 = relay.Function([var_2057], output)
mutated_mod['func_2058'] = func_2058
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1544_call = mod.get_global_var('func_1544')
func_1546_call = mutated_mod.get_global_var('func_1546')
call_2176 = func_1544_call()
call_2177 = func_1544_call()
func_1296_call = mod.get_global_var('func_1296')
func_1298_call = mutated_mod.get_global_var('func_1298')
call_2178 = relay.TupleGetItem(func_1296_call(), 0)
call_2179 = relay.TupleGetItem(func_1298_call(), 0)
output = relay.Tuple([call_2176,call_2178,])
output2 = relay.Tuple([call_2177,call_2179,])
func_2185 = relay.Function([], output)
mod['func_2185'] = func_2185
mod = relay.transform.InferType()(mod)
output = func_2185()
func_2186 = relay.Function([], output)
mutated_mod['func_2186'] = func_2186
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1954_call = mod.get_global_var('func_1954')
func_1955_call = mutated_mod.get_global_var('func_1955')
call_2201 = relay.TupleGetItem(func_1954_call(), 0)
call_2202 = relay.TupleGetItem(func_1955_call(), 0)
output = relay.Tuple([call_2201,])
output2 = relay.Tuple([call_2202,])
func_2218 = relay.Function([], output)
mod['func_2218'] = func_2218
mod = relay.transform.InferType()(mod)
output = func_2218()
func_2219 = relay.Function([], output)
mutated_mod['func_2219'] = func_2219
mutated_mod = relay.transform.InferType()(mutated_mod)
func_181_call = mod.get_global_var('func_181')
func_183_call = mutated_mod.get_global_var('func_183')
call_2296 = relay.TupleGetItem(func_181_call(), 1)
call_2297 = relay.TupleGetItem(func_183_call(), 1)
func_1544_call = mod.get_global_var('func_1544')
func_1546_call = mutated_mod.get_global_var('func_1546')
call_2304 = func_1544_call()
call_2305 = func_1544_call()
func_852_call = mod.get_global_var('func_852')
func_853_call = mutated_mod.get_global_var('func_853')
call_2307 = relay.TupleGetItem(func_852_call(), 0)
call_2308 = relay.TupleGetItem(func_853_call(), 0)
bop_2309 = relay.floor_divide(call_2296.astype('float64'), relay.reshape(call_2307.astype('float64'), relay.shape_of(call_2296))) # shape=(14, 1, 12)
bop_2312 = relay.floor_divide(call_2297.astype('float64'), relay.reshape(call_2308.astype('float64'), relay.shape_of(call_2297))) # shape=(14, 1, 12)
func_533_call = mod.get_global_var('func_533')
func_537_call = mutated_mod.get_global_var('func_537')
const_2316 = relay.const([-0.664606,9.782485,-8.191045,5.054050,-6.249039,-9.897972,7.763561,6.965347,2.762103,1.196169,2.189992,-0.247528,0.223277,-9.794754,-3.873276,-6.016318,-3.431914,-9.136321,-8.408526,-6.718996,-9.784570,9.107515,-6.826262,0.350481,4.535247,-4.454841,-1.707213,7.142484,-4.529592,-8.268203,7.917208,1.503996,-5.198447,9.561830,4.867930,1.935788,-3.360045,-0.335374,-8.737099,-4.540548,-5.884890,-4.089868,-1.942729,-5.883078,8.585774,7.619253,-3.921141,-1.698493,6.482537,4.072593,4.649522,-3.675250,-2.829074,6.002519,-0.533606,-6.340783,-7.679329,2.882407,-7.266963,2.141351,-3.732338,4.280272,-8.837518,-8.507756,4.939397,-4.469849,-4.440827,-7.571125,4.303013,9.309244,-6.395375,8.255058,-5.626488,0.536659,-1.823934,0.249674,5.351076,7.000083,-4.745639,4.389516,-5.333531,6.572092,-2.480078,8.595851,6.549879,-6.850130,-4.410250,-3.528218,-5.277609,-7.756305,8.606997,-4.442507,-2.139797,-1.198403,1.249691,-3.610768,4.326440,-2.012537,9.868675,-8.819325,6.676965,-0.441127,-0.990722,-4.636281,-1.570180,8.032574,-9.163100,4.991269,-5.933621,-2.255441,0.626542,9.852134,-2.982025,5.129366,8.536328,-8.968408,-0.132469,-9.835231,7.142532,0.955336,0.680038,0.649470,-6.713181,-7.320342,-0.237965,-3.579077,1.123160,1.546365,-8.655542,-5.819282,-9.141473,-2.080990,4.588946,5.893306,7.741598,6.947177,8.265782,3.413705,3.297092,-0.886197,-2.035490,8.497674,-2.163498,5.580480,7.113215,-1.786388,-9.567970,-7.689914,-6.394952,-7.977619,8.416382,-8.946689,8.675228,-3.613585,-6.736896,-2.264781,-4.950401,-5.485404,-3.848060,7.967268,0.321543,4.426090,-0.501213,-4.660779,5.334110,-6.493496,-1.429880,-7.509382,-8.392373,-7.177579,1.293182,1.445363,-6.442985,8.709620,1.087972,4.672434,-2.727972,-3.386777,-5.933129,7.133005,-2.805487,-5.279318,9.677100,-1.726405,-7.886661,-5.427692,1.738951,2.784804,4.986377,4.628175,1.114114,-1.806361,3.473959,-6.477314,7.982482,-8.122454,3.415874,-7.484557,8.128396,8.721409,8.314620,4.356560,1.544332,-4.015086,5.380691,-7.708985,-0.079686,7.925708,7.242086,-1.208980,3.289554,-5.546563,3.380325,8.822568,2.269678,-9.566871,-9.198113,-9.292050,-5.959617,0.152831,-0.338573,-3.418609,-9.795661,-5.293557,5.523124,-6.345586,1.829129,-8.827766,6.590464,8.869891,-4.237370,5.913870,-4.568546,-4.635009,-9.249633,-3.839471,3.504412,-9.244524,-7.960271,-0.398781,5.400807,9.147491,4.510619,7.468824,4.589499,-7.525198,9.090400,8.441781,1.339339,-8.674321,9.652997,-8.389830,-8.633026,-3.897917,8.284084,-5.674766,5.008466,-4.899900,2.455785,0.704314,-0.179265,-2.166721,8.237719,7.748770,-6.035398,-2.333793,5.422272,-8.722449,2.554872,-2.119304,9.425044,7.680121,-0.998289,-1.044953,-3.811767,7.415735,1.780330,-8.586252,2.508223,0.393797,1.989033,3.134381,-9.115057,-5.415766,-8.119346,-2.818794,-8.483546,-3.721948,8.438762,-3.693737,-1.485717,3.297835,-5.587848,-3.406884,0.592836,0.271659,6.422332,2.752429,-2.136632,-5.318435,7.132398,0.236954,-4.413627,-1.735703,-9.182839,5.229145,-6.459246,-4.529681,-1.661269,-8.567324,-4.713738,0.349717,-4.636953,7.613370,-1.372235,4.814549,-6.658509,9.526169,-5.733220,2.081712,5.124053,2.156562,6.735064,-4.254922,-2.441888,9.909739,-2.570237,7.478940,-8.060729,5.909391,-3.999949,-1.855892,6.294634,9.315383,3.330711,-1.198907,-9.079251,6.189912,8.619458,7.305439,-2.528355,-1.383646,2.240242,-9.157821,-4.430301,6.197390,-6.376875,-7.853249,1.811254,-6.928874,-0.505546,0.506900,-9.360559,-6.202057,-8.788802,-3.168233,-1.720467,1.413228,-7.565104,4.272222,-6.653705,2.476716,-4.857622,-9.115949,0.060115,3.570717,-7.896792,-8.702002,0.254669,-8.294881,1.422917,-2.762916,-4.796888,5.694161,3.177257,0.575584,5.396136,7.096212,-9.227156,-7.477024,-2.062779,5.031533,-9.680235,8.346270,-5.541511,-5.961800,-1.340324,-8.219183,-7.054659,3.320779,-8.861481,6.991718,3.665383,-0.800299,9.954447,-2.105573,-1.308434,-8.951146,1.182162,-4.919517,8.351175,3.601225,5.784079,-0.776408,-3.776385,-6.079707,3.752330,-8.506447,-4.014558,-4.356233,1.213044,4.974744,6.418173,3.368382,8.403073,-3.608176,-7.445885,4.274712,3.340079,0.280857,0.841271,8.314832,-0.575476,-8.290039,-7.008548,-0.751580,3.161321,2.724818,6.045511,4.625511,-2.511107,3.636562,-8.767115,-3.145903,1.308494,6.634480,7.089514,1.070437,-4.657623,-5.477804,-8.531228,7.499828,-2.267021,-2.410134,4.605388,4.921795,-4.520738,-6.676774,3.149621,-5.074335,-1.582561,7.233209,-0.032067,5.976757,-9.746825,7.904675,-1.435369,-0.159799,3.941163,-4.136122,1.988169,-2.247451,0.608218,-7.420864,-5.365676,9.139639,-5.193411,-3.256657,9.908309,3.506155,-6.607532,-5.121735,8.145533,9.723828,-0.325114,2.787494,8.001687,1.671569,-8.167875,6.760110,-8.099445,-1.993572,-5.382721,-0.660657,-6.784717,0.911714,-5.450526,-5.543431,1.551720,1.729427,2.294641,2.286190,-7.014798,3.501804,-6.722932,5.598907,3.052518,7.193471,8.336343,4.534814,5.534741,-4.577459,1.825886,-7.583767,-2.589846,-2.494613,-5.393318,5.350520,-5.982638,-8.555287,6.361270,6.535795,6.314682,-7.157204,-9.239118,-2.862432,0.971388,-7.726406,6.975480,1.724894,-3.360511,-6.840796,8.434605,1.323306,-6.050746,-0.729389,-2.989427,5.491840,-8.730653,-3.389095,2.743487,-0.523311,2.899639,9.054860,5.636840,-8.651847,-4.459328,4.579055,-3.267291,8.315900,-8.814602,8.744457,-6.141650,-2.002205,-2.915785,9.001912,0.399417,-5.902106,-3.075429,-2.528849,-9.814991,8.327322,4.743452,-1.583708,-6.240459,-0.179187,4.874185,5.319053,-9.808291,-1.426806,-8.788981,6.239762,-5.706786,-2.202345,3.894902,-8.465630,9.556413,2.321804,-6.790238,3.888005,0.954810,2.331946,5.929656,-4.905970,-9.176494,-7.929013,4.011276,6.894834,-8.171677,-2.467920,-7.270536,7.943836,9.283624,-4.660885,5.269365,-5.116477,4.140967,0.273497,-2.429471,3.564234,2.802890,9.138489,8.745873,-9.916150,-3.788864,8.877011,8.172419,-9.276179,7.317112,8.388541,-1.229740,-2.205197,4.718523,-7.688430,3.023289,4.796918,-4.138816,4.377750,1.768631,3.445103,0.037540,-0.534083,3.333975,3.312778,6.822883,1.577665,-9.767718,0.414154,-4.844794,4.534073,1.513842,-3.040874,6.354445,4.761616,2.783440,-5.330129,-7.693126,6.807622,3.523404,-8.925253,7.045222,1.308176,4.584284,-0.727911,-6.636179,-1.864229,-2.228912,6.252501,-8.495272,-7.615333,0.311580,-8.422664,8.183664,-7.407382,-5.020512,0.043195,-0.248477,7.442700,3.421896,6.525035,2.409458,-9.380177,-6.360693,5.127354,-7.236793,-2.600942,-5.445327,5.150395,6.787109,3.571536,5.519261,9.903349,2.572022,2.100379,-1.475040,-8.933663,-5.046803,3.031123,9.184016,-7.311303,-6.340603,4.491869,3.159325,-1.730931,-5.282604,6.466819,-1.831801,-8.581980,6.190542,3.730241,-5.764791,-4.133187,-2.980298,-5.483239,-0.273909,9.647220,7.227416,-1.498892,-5.502569,4.632088,-7.767646,-8.753512,-2.104505,-9.700943,-2.328636,8.801122,8.513144,-0.733150,-2.117753,2.848281,4.581203,5.571922,-4.856668,1.244378,0.033449,0.014999,9.933222,-9.628980,-1.391382,-5.441099,-2.160654,-0.810281,2.732768,7.208545,1.729848,-7.071688,-4.972784,7.729220,0.370662,1.395854,-4.061293,-2.826278,-2.580068,8.683775,2.910686,3.666467,0.689669,-4.238760,-4.274334,-8.476941,-2.441922,-6.032470,9.261149,6.670993,1.624955,3.201089,-3.590051,4.526070,-4.218065,2.137252,-4.353215,-1.952940,-4.736593,-5.024752,-8.699592,-2.859084,-4.905537,7.407005,8.254543,-5.959607,2.621225,-6.384375,-9.599650,-1.957231,-3.115223,-7.754746,3.544004,-6.503928,6.721159,-8.574228,-5.653725,8.585747,-5.047873,-4.309367,6.218283,-5.189683,-8.346075,-1.632429,-6.939685,3.218862,5.958111,-3.958604,-7.621759,-4.015116,0.507888,-5.640686,-1.349801,-8.372924,-1.720618,-1.631898,-1.178204,0.228392,1.599760,4.257165,-6.670485,-1.536562,-4.309711,-2.027012,1.329985,9.499294,-0.035774,-5.367255,2.068159,1.370170,0.274857,3.729231,-9.916388,-6.550076,3.061789,3.741054,6.408276,4.451506,-0.977571,-6.867598,-1.402998,3.592185,4.011854,4.414751,-3.813686,5.088618,-5.070966,7.610660,2.893346,-5.996943,7.649653,-2.523729,9.723371,3.390267,-0.970806,-9.168126,7.370273,8.070072,1.318626,9.971219,4.165281,-8.668538,1.596680,-9.991981,3.264367,8.357183,-5.491304,1.765505,9.982358,-8.759885,8.230718,8.002960,-8.053620,5.346169,3.500663,2.971316,8.824465,0.991244,-9.019816,5.713603,-4.016012,-4.487899,2.528257,9.733269,-7.839725,-6.786767,-2.660602,-8.184040,-7.211010,-0.152686,-0.649026,-3.804228,0.262745,8.008733,8.534878,-5.566927,0.471727,-5.416186,-2.200311,-3.999433,3.743299,-5.401242,-7.083406,-5.301519,5.604809,-1.073126,6.828821,4.336605,-3.599858,-5.470776,-9.641661,-2.530736,2.048836,-0.031509,-9.585809,9.682718,0.834938,7.467914,-6.979242,-8.578789,-1.194622,-7.110427,2.970475,4.999575,-8.487138,4.331832,-5.364044,-4.020863,-1.489686,8.295177,9.942001,3.300409,8.884164,-6.944108,-4.805749,4.893392,-0.622214,-2.959255,7.985485,4.529104,1.666907,-9.978753,-5.069949,-3.215953,1.301891,1.835207,-8.804662,8.339122,0.007151,9.777477,-1.883277,7.614572,-7.501228,-0.155430,3.292198,0.994540,-8.570695,-2.492477,0.705217,-0.169461,-8.157657,0.123730,-7.510779,-0.158773,4.120392,3.329101,-7.088708,-8.800992,3.525948,6.642651,-5.173127,2.664951,-5.726730,-5.025438,-3.497043,4.101645,-3.427394,3.738729,4.442564,2.510905,-3.735303,3.574710,4.420348,8.009972,-3.536526,2.748177,-0.633894,-9.373942,-1.550139,-5.852613,2.312804,6.589075,-9.972453,-4.293997,7.987345,-6.311062,-5.455070,-9.644101,7.301907,-0.951225,-0.245961,6.669773,1.163237,-2.511999,-7.685145,-4.155723,-7.476664,6.117174,9.877914,-7.768904,8.988714,-0.379062,-4.066972,9.111613,-8.320958,-6.880170,8.637788,8.734166,4.968488,-4.738791,-6.467910,0.288584,0.556865,-4.900929,-7.282577,6.605900,4.188644,2.595953,-7.091256,-0.731217,8.762075,-8.671794,-2.148645,9.839228,3.222698,5.691060,-3.737939,-2.726749,9.587906,-2.975613,4.332042,-1.184854,9.493062,1.340754,-1.876375,5.344328,-3.987580,1.845183,0.866126,-2.761975,-2.425623,2.132124,-2.060362,-1.323878,-9.043124,3.821985,-4.336851,-2.869180,6.357346,-1.623363,3.541616,4.986809,8.343639,-8.877791,7.459380,9.077463,-8.087012,9.427497,-6.616362,0.514930,-5.223743,-6.460573,-2.445229,0.991870,-4.622674,2.688875,6.252762,8.817896,1.372747,9.260862,-7.028483,1.947652,0.528282,6.441345,-1.624804,-0.360852,0.870768,-9.325331,-4.156338,-1.587401,6.619557,-9.009299,-4.837920,8.451109,-8.201569,4.507118,4.027483,8.437528,5.991853,-9.337947,8.971272,-2.386192,5.433330,-9.486534,-3.980442,9.882309,4.845204,-8.762289,4.750175,2.175826,1.758758,7.029954,4.669466,8.539765,3.828758,8.663315,9.157209,-6.483279,-1.813479,-5.273806,0.046446,-6.974148,9.386379,-1.953449,-3.514817,-5.402727,-4.867674,-4.614157,9.318218,-5.828031,6.755067,6.211678,-9.063260,3.545477,2.955177,0.643552,1.952688,6.691344,9.296064,-8.895826,4.872537,4.664064,-1.547834,-5.760707,6.877913,-8.814449,-9.579233,7.563669,0.492589,9.053545,-4.506932,8.430931,-0.332038,9.753787,3.029704,5.136328,-6.959306,-4.428165,-6.645271,-7.761379,-4.167681,-7.021388,6.456510,9.738631,-2.042699,5.180207,5.115375,5.606619,1.325167,6.286601,-8.256546,1.111934,9.531704,5.893064,-6.253689,-8.092994,-0.764437,1.930531,-3.881800,0.528871,8.721853,-9.550703,5.074689,-0.889179,-8.168601,9.496512,-6.392261,0.240847,2.309670,7.747377,3.701652,-1.797157,-9.908771,7.942105,-1.450789,-1.203856,3.293717,-4.497177,-1.441287,3.406474,8.699380,4.897070,0.164569,4.658405,6.805079,4.174298,-0.279901,-9.793536,5.775926,-5.860200,-3.339137,-3.989517,3.516372,6.351027,8.637928,-6.578511,2.584372,4.347286,-1.327904,3.231147,9.609283,-2.940558,-6.266720,1.080578,-1.441958,0.659566,-7.765968,-5.709236,8.224949,1.721683,-5.463231,8.866684,8.545519,6.808180,7.872802,0.023780,7.071044,6.804688,-7.904056,9.676842,-4.640585,-6.355925,-7.159932,-4.946982,-5.576556,0.532821,2.713145,-7.148923,9.929146,-5.042727,2.536306,7.472274,-3.035836,-8.050786,3.628670,2.603004,0.751324,-1.106834,3.827951,9.707685,-9.806301,-6.335988,5.923959,-6.694299,-5.478688,1.442464,-2.702374,-9.708552,3.018244,-9.268650,9.604867,-7.987383,1.049051,-9.248540,0.587113,-3.709923,-0.960088,6.604971,5.641187,-8.423353,0.932258,1.576651,8.754038,-9.786575,4.590864,5.481996,-1.769347,5.445100,6.214160,-1.459720,0.627747,-3.821417,-7.850817,2.178407,-7.494245,5.245238,5.584846,5.978890,6.778938,-8.662191,-6.372116,8.347999,1.843234,-1.408735,-2.584372,-2.486247,4.508052,-2.427959,-0.486508,-7.745738,5.002940,-8.299296,-5.985540,6.333959,4.809338,-9.451062,-2.524774,4.549809,-2.484971,-6.601827,-9.212680,-5.230515,5.845482,8.891448,-3.600874,-2.632746,-9.380575,1.957905,3.549325,-9.746526,-8.698782,-3.898858,-8.429014,-1.447040,-2.405994,0.524394,5.507671,-9.332760,-4.321699,8.450237,9.777679,8.941069,-5.028013,1.283918,8.545570,3.745279,-2.586874,-5.910433,6.226819,-6.287114,4.029858,-6.231197,4.838625,-9.457729,1.676134,3.891506,8.306790,-5.007191,6.597333,4.494698,8.809659,-9.400026,8.840646,-9.172801,6.335124,-6.738071,-3.572205,-1.545494,3.351354,-7.575540,-7.510509,-4.716205,-4.613360,0.652251,-1.770041,-6.472981,7.931731,9.235644,-2.399039,9.763401,-2.546945,-8.385072,8.211488,5.537060,4.183912,7.989567,2.406180,-6.049621,-4.773060,1.568488,-9.544280,-2.954558,-1.105166,-9.958415,7.535711,-1.570160,7.169945,-7.868323,9.860403,-7.194755,0.677545,-1.945009,8.677661,-1.073455,5.064326,-1.161534,-8.306033,2.094803,-3.076838,1.216705,-7.546513,-5.659299,-8.501132,-0.556776,-6.230057,9.390961,-8.089635,-9.073842,-3.288503,6.640944,-1.470172,0.253015,-4.326046,5.188258,7.636441,-1.603659,-6.179506,4.337842,5.644745,2.003268,-0.803976,-1.816211,-3.091325,-1.576013,6.418053,-8.801505,4.841218,-3.233070,5.640543,5.875890,-4.557432,-0.940439,-7.425447,-7.213452,7.875716,5.838994,-2.275926,-1.949588,-1.694692,5.039133,-4.470359,5.243925,8.651098,5.882288,4.281566,2.304933,-0.795215,-3.269745,-3.373923,-8.447920,-3.028227,2.046008,1.746050,-7.065050,0.236204,-0.633781,5.404611,9.929005,0.648898,1.604736,2.453067,7.264078,-5.217699,-6.619348,-7.882850,-4.788320,-4.308410,2.490319,3.490393,9.695632,6.244028,-6.256786,2.308721,8.345185,-1.064180,9.072010,-7.687663,4.053995,4.137296,2.722119,5.155374,-0.059608,9.407389,3.801711,5.561822,8.568018,-3.584942,-5.877594,-9.975189,2.350234,-4.757909,-3.721504,2.291553,-3.315857,-6.902867,-7.690522,5.164708,7.678024,-1.695973,-5.335300,-5.777457,-7.862595,9.982942,-2.967711,-0.127186,2.547913,1.129189,8.844371,4.172456,8.484598,0.594154,2.130419,-3.403576,-5.076057,-0.437765,6.242637,-0.918252,3.388623,-8.583993,1.586863,9.570572,1.156365,6.592203,9.644317,-4.237084,-5.133303,-8.921309,6.537191,-7.002585,0.012785,-2.473584,7.659225,-1.520326,-9.832107,4.640402,-2.046936,-5.117402,7.048005,-4.687214,3.350273,2.538582,0.276919,0.593956,-0.608416,-1.400020,-0.577842,-0.588670,1.008924,0.653541,6.462960,-3.907395,7.532072,-2.789181,-8.345414,-6.974432,6.988660,8.179496,5.265614,8.217229,-4.533708,-3.842394,-4.604890,1.890302,7.728794,-7.383341,8.452315,-0.393343,4.199243,5.655431,-4.862637,2.017063,3.788107,-6.967394,-9.217893,-6.019589,3.787769,1.912161,-5.856861,1.800441,0.346386,-2.510361,-5.642591,-9.016782,7.756200,9.840769,7.661222,-0.988144,0.279178,5.845891,-0.557252,2.307051,-8.567365,-0.835699,7.427056,4.495540,0.362438,5.366434,-6.920802,3.107807,2.638427,1.141525,-8.994096,1.033309,-4.356331,1.261373,-4.980638,-3.108455,2.480450,8.636281,9.677730,-5.198876,0.882190,-1.060603,8.295049,5.511471,8.122294,7.773683,-8.310663,8.214846,6.807222,-2.539014,1.168129,6.634043,3.326476,9.310232,1.062124,6.092230,3.423911,-2.297619,7.959507,3.546598,5.936166,-4.420646,1.420358,-6.515539,-6.526038,8.878732,-5.655810,5.948288,0.714988,-2.327182,-1.892258,0.124133,9.354484,-3.859498,-6.295465,2.791819,-2.060414,2.393916,-9.428023,-0.125370,-8.259675,-0.590790,-5.224638,-6.777784,0.303942,-9.814544,-8.434569,3.748617,-3.564663,7.207640,-0.866395,-2.510301,-5.522727,-9.516766,5.677824,-6.124075,-7.283593,-4.322198,-7.614066,7.683562,8.710727,3.508853,9.590169,-6.133158,-8.079194,-2.475003,-8.682848,6.104584,4.768675,4.164782,-9.632083,-4.478663,6.371671,-1.583723,-1.999983,8.094386,7.820187,0.534970,5.685374,-2.076478,3.616945,-2.374561,2.985547,6.174410,-9.056759,-1.094590,-9.122275,7.124109,4.577642,8.509146,9.484671,-0.312578,0.944944,-5.965009,9.621347,-4.667589,4.860235,-7.106967,-0.644555,9.777499,9.140627,8.496658,5.963510,4.071336,-5.272921,-3.387889,5.676676,4.779329,-6.899677,4.949537,-3.453364,5.034584,4.846473,6.669556,1.786165,-7.358625,-3.899146,-3.035203,-1.943000,-8.675186,-3.908073,6.786479,0.670942,-8.693023,-2.819511,7.021024,1.374445,-0.386552,8.415693,-5.837860,3.893718,6.894569,-5.175890,2.236214,0.149195,-2.673307,-1.110980,6.638855,-0.657053,5.103756,4.596008,3.369674,8.467146,2.834165,5.426776,4.268301,-1.022942,-5.077572,-2.625785,-5.810274,-9.634832,9.439400,-0.468784,-2.416412,-6.284038,4.710623,2.497130,-9.281546,-6.609742,7.231434,1.792577,-2.184593,6.352347,6.856917,-9.330146,0.748182,-4.699569,3.449451,5.117659,7.344048,-9.803594,0.014040,2.858326,-3.265743,-6.571666,-3.848919,5.870497,6.497119,6.582264,-7.821782,-1.533605,-1.673657,4.822337,8.818229,-9.645461,-5.722380,8.221334,-3.003863,-1.935690,6.586578,-2.685838,-0.677599,-9.855818,-8.869804,-2.670881,-8.736467,-0.084829,3.228732,-8.909147,-9.326086,2.205866,4.039659,-4.243568,-7.789051,4.208640,8.411478,4.189704,1.670831,-4.920165,5.310192,-2.931896,4.023139,5.471401,-6.956499,-2.614468,-4.002132,-3.324300,-5.885029,1.891725,4.602406,-3.868232,-1.709846,-4.768693,-3.237169,6.238219,-8.377758,1.459245,-3.946124,-1.175559,-1.153653,6.675553,2.135129,1.879228,-0.297143,-4.008808,5.674285,9.095949,-6.890048,3.028448,-7.258470,-5.268426,-7.480635,-3.341642,-4.897493,-8.742862,8.491336,3.194563,5.330533,6.796944,3.436833,1.351001,-9.753300,-2.119505,-1.107291,9.939769,-4.093295,9.680977,8.880948,7.979243,8.202897,4.848907,2.110746,3.150884,3.746521,5.739437,-6.596317,1.254246,0.747422,2.489071,8.390677,-9.188187,-0.565285,-7.800068,6.817732,-8.309847,1.354144,-5.791582,-1.073331,6.437741,-1.253977,8.220770,4.380611,1.042592,-4.622591,8.480849,-5.242865,-6.418579,1.614556,-3.075299,-4.295070,3.239706,-9.732039,2.189093,4.326672,-4.977621,8.583929,-1.647591,-2.411135,9.380282,-3.473540,-9.676850,-7.375526,-0.641119,-9.206389,-4.453592,3.409341,-8.073799,1.814160,-6.756105,3.656185,-7.052715,-1.793712,1.908047,2.676798,-6.536024,5.755976,-0.638539,5.113184,-9.289628,2.267808,-1.160677,-6.699212,3.096757,-6.638783,7.750680,-5.820620,-7.391168,-5.739007,-7.725996,-6.770694,-7.094649,9.038864,2.549922,9.377443,-2.379317,2.679613,1.134419,-4.052452,3.918530,-2.756493,-8.188225,8.480181,-4.495939,-9.928594,5.542446,6.652261,7.917247,-1.950227,5.991270,-4.941767,-4.340846,-6.066913,4.247470,-3.825277,-9.616267,6.738043,-3.823685,1.979114,0.189714,6.312392,2.945551,-7.324253,3.251657,8.101213,-2.443251,4.062604,2.757191,-0.124431,-3.540078,-9.002271,9.449334,0.053546,-2.162569,-4.637608,-3.158858,-9.929942,-2.271010,-0.221664,0.744641,-6.847514,1.595176,-2.084910,-7.889079,-9.078072,-8.270725,9.886972,-6.930624,4.513891,4.843580,-8.834125,0.790221,2.038487,6.158093,9.675118,-7.108265,-9.750396,5.124554,-9.984448,3.685568,-2.964127,2.678880,-4.819805,-3.730315,-8.713814,0.724193,-3.129800,3.271251,9.333790,5.430093,5.598748,-3.794561,-5.103612,2.790785,9.846176,7.049863,-2.435755,0.618441,-9.638096,-1.250136,-6.378087,-6.877361,-1.986455,-5.239403,-3.748070,-0.062602,4.287222,-2.873940,4.535544,7.206322,-9.161564,-0.463110,1.244061,5.979166,-3.376539,6.003994,-6.260062,7.203507,1.952612,-6.317291,4.081925,-4.512838,9.601711,-8.237872,-4.990283,-7.064361,-6.379421,6.438803,-1.940507,-8.696656,-5.615852,2.430111,4.096716,7.332406,0.102607,-3.999052,-2.492404,0.893000,8.338482,-4.398833,6.937767,3.666100,-9.366170,-9.479578,6.031868,7.443467,-7.250489,-1.522449,6.552401,-0.162039,9.674076,9.594305,8.449130,-8.110127,9.302907,-2.529068,4.230374,-3.662542,-2.445754,-2.223816,6.499614,6.128841,7.007665,3.410561,3.661726,8.494605,8.617477,0.798979,7.934198,5.512541,-0.685632,-2.963810,5.500707,4.042970,4.161876,-4.710970,7.072092,-0.037399,2.077823,1.123020,2.352206,-3.688112,-5.280155,-2.503202,2.643259,-6.842425,8.312805,3.506148,8.159548,4.929704,-2.787187,-4.580242,9.048481,-0.886141,-4.019587,-4.955884,-7.081358,-2.173948,-3.085635,3.351564,0.948728,6.975064,-9.457779,8.760314,-5.879092,-3.028870,-1.217955,-9.351962,2.504558,5.547906,8.834904,3.265390,-7.132850,-5.552276,-4.531554,-5.909328,4.113225,1.360981,-0.443222,7.713076,6.430985,3.677876,-5.264371,0.906566,1.714411,-3.383030,-8.887056,-6.274585,0.615219,1.461020,-3.606524,5.719117,-7.803771,2.371627,-9.569367,4.700231,-1.949147,4.676854,-3.205664,-4.896061,7.755899,-4.366105,1.941773,-7.503794,2.871163,-1.248682,2.354089,0.133081,-9.740128,-0.757140,-6.857731,-7.340360,7.036161,7.104470,7.769664,9.816605,-1.595745,-2.517602,-2.507530,6.483847,5.301744,-2.940334,6.600709,-2.020741,-5.394486,-1.991027,-7.824158,-6.677085,0.215166,4.859188,0.112540,9.380170,2.693229,1.085974,9.605745,4.897390,9.730642,7.096949,-6.388253,-0.692680,9.582132,5.580971,-2.736631,4.749768,2.056924,-5.224576,7.506503,3.093610,0.910167,-4.376381,7.360850,5.487845,7.893277,9.766579,-0.618744,6.960529,1.032352,3.670773,-0.153854,2.540113,-7.618393,-8.870759,5.170705,-3.911464,2.128247,3.179329,-1.931794,0.757959,-1.869840,5.118630,-0.786729,-7.468270,8.395386,2.138329,-6.442623,-1.143833,-0.196810,-6.129907,-5.967128,7.855189,2.705869,-9.704737,1.133451,-8.213200,-9.375930,1.770689,-0.961863,-5.045820,1.962465,6.697248,-5.468443,-4.666982,-4.156435,2.832272,7.974781,-0.990877,1.592789,2.863503,-9.573281,-9.427280,9.889135,-1.358838,2.324769,-7.126333,-7.756439,-0.876478,0.012969,-3.143210,1.037411,-9.949239,-1.905091,-1.282906,6.993182,-6.215270,3.838050,-3.458011,-5.260484,-1.935658,-6.646008,1.611815,-4.521924,4.280512,-2.018890,4.338527,4.689807,5.347340,6.848217,-1.220535,2.783720,-8.363499,8.872729,3.217972,0.686222,-7.608941,-0.476337,8.593929,2.523795,-0.940467,-5.779619,-7.957683,8.693867,3.888083,9.307924,0.516359,-4.713541,8.960118,9.261108,-0.119820,-3.056947,-4.885250,-4.628889,5.184698,-6.306160,6.694324,5.480471,3.637953,4.336043,0.231981,-0.149330,2.206911,4.181509,-9.334363,-0.898209,0.918961,0.754520,6.133382,4.142955,-2.296416,5.829046,-0.867904,1.724144,9.077884,-4.152730,8.801086,-8.658465,-6.437893,1.003518,-2.595941,1.350737,-4.041504,7.265850,-7.022000,-5.877975,-6.845134,-4.453840,-6.573374,-8.082563,1.572863,7.085928,3.389962,1.394009,6.481594,0.141975,-7.645475,8.210418,4.329707,3.765336,-2.252745,-7.206330,2.139439,8.091192,-9.225256,4.598005,8.276601,-2.050283,-0.409183,-8.956741,-4.896334,6.471620,-7.324766,7.388000,0.241934,4.734200,-2.569232,7.685344,-3.984082,-3.348714,-3.904104,-3.754412,-7.594163,0.164814,0.508432,-5.755303,5.131521,-3.119808,-5.372842,3.422476,-2.473503,0.846654,1.211201,-1.161767,-8.347136,-4.232213,6.168664,-0.305597,-0.491791,-0.382815,8.974536,0.961704,3.453222,-7.855528,-9.205648,4.227131,-2.135963,6.132016,9.719747,7.644638,-4.723646,7.893941,7.407275,4.383939,0.153769,5.373585,-7.415386,7.627215,-3.636087,-0.532627,9.576348,-7.554885,-3.274715,5.741981,6.400712,9.344292,5.941376,7.604510,-0.257613,-4.091548,9.672434,-4.504601,-6.555091,3.885587,8.294259,1.888669,6.082574,-7.402119,-3.441768,-6.299691,9.153883,8.164226,-9.302261,4.891974,-9.213052,-2.092152,0.787078,1.923938,-0.463713,-9.830789,-4.698244,-2.516783,9.759161,-1.049213,8.023608,-1.236031,-7.091152,2.753844,-4.367624,-1.749415,-9.838806,-2.945695,5.738397,8.737298,-8.500850,-9.815339,-1.391888,5.584273,9.511992,5.624124,-1.277389,3.650433,2.015083,0.558150,4.173826,-6.298023,-5.049056,4.348226,0.363197,4.940896,6.419211,-9.376976,-7.505421,4.059092,5.702180,-5.977647,-9.841909,3.741764,-8.120892,-5.578349,-5.246006,4.528165,3.826707,-8.216172,-4.766837,9.268486,1.339408,3.919991,2.147946,-9.101590,1.886443,-3.193864,-5.389393,0.942142,-5.430203,2.653299,3.138486,1.875988,7.797194,1.892142,5.638081,3.358410,-1.657570,-6.857528,-7.829467,0.428175,-5.807588,9.782446,2.982010,1.727848,-2.237251,-8.630869,-2.297724,5.999122,7.707692,5.836641,6.225800,-7.239004,2.627060,5.691203,4.027637,4.842971,-6.662534,-7.224207,8.506005,5.801218,-9.188384,9.918952,1.038120], dtype = "float32")#candidate|2316|(2520,)|const|float32
call_2315 = relay.TupleGetItem(func_533_call(relay.reshape(const_2316.astype('float32'), [6, 420]), relay.reshape(const_2316.astype('float32'), [2520,]), ), 0)
call_2317 = relay.TupleGetItem(func_537_call(relay.reshape(const_2316.astype('float32'), [6, 420]), relay.reshape(const_2316.astype('float32'), [2520,]), ), 0)
bop_2323 = relay.logical_or(call_2307.astype('bool'), relay.reshape(call_2296.astype('bool'), relay.shape_of(call_2307))) # shape=(14, 1, 12)
bop_2326 = relay.logical_or(call_2308.astype('bool'), relay.reshape(call_2297.astype('bool'), relay.shape_of(call_2308))) # shape=(14, 1, 12)
output = relay.Tuple([call_2304,bop_2309,call_2315,const_2316,bop_2323,])
output2 = relay.Tuple([call_2305,bop_2312,call_2317,const_2316,bop_2326,])
func_2329 = relay.Function([], output)
mod['func_2329'] = func_2329
mod = relay.transform.InferType()(mod)
output = func_2329()
func_2330 = relay.Function([], output)
mutated_mod['func_2330'] = func_2330
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1634_call = mod.get_global_var('func_1634')
func_1635_call = mutated_mod.get_global_var('func_1635')
call_2334 = relay.TupleGetItem(func_1634_call(), 0)
call_2335 = relay.TupleGetItem(func_1635_call(), 0)
output = relay.Tuple([call_2334,])
output2 = relay.Tuple([call_2335,])
func_2337 = relay.Function([], output)
mod['func_2337'] = func_2337
mod = relay.transform.InferType()(mod)
mutated_mod['func_2337'] = func_2337
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2337_call = mutated_mod.get_global_var('func_2337')
call_2338 = func_2337_call()
output = call_2338
func_2339 = relay.Function([], output)
mutated_mod['func_2339'] = func_2339
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2337_call = mod.get_global_var('func_2337')
func_2339_call = mutated_mod.get_global_var('func_2339')
call_2356 = relay.TupleGetItem(func_2337_call(), 0)
call_2357 = relay.TupleGetItem(func_2339_call(), 0)
const_2358 = relay.const([[-2.770982,-1.846057,8.261265,2.734757,9.282089,-4.842372,-9.694044,6.492649,-8.272613,-4.843660,-1.536893,1.228774,3.865326,-0.764517,5.880598,9.082987,7.598944,2.904988,-1.950437,-8.251550,7.770608,-6.730873,-3.374705,3.228430,-4.474463,4.986117,6.655445,9.057017,0.859468,-6.415791,9.067603,-4.136055,0.886202,1.350604,-0.645185,5.983865,4.255817,1.508286,4.551937,-5.295675,2.949989,-8.004234,-8.026526,5.662639,6.754081,-3.096435,-8.243303,2.248568,-5.185090,1.874536,6.011617,2.092790,-4.194719,-1.542670,2.685502,1.902368,-3.131399,6.522468,6.850049,-3.827523,-6.139673,6.878611,8.231729,-6.534243,-3.317195,-0.689664,-0.208141,-2.283694,8.633151,-4.133505,5.597695,2.220928,-0.365333,-0.184409,4.155841,-7.373800,3.284953,-3.426706,3.591886,-6.818441,-9.894233,3.750480,-4.633358,5.672150,-9.032793,-3.565780,-0.883990,4.998909,-1.386725,-1.709081,-9.403379,2.764794,2.322161,-0.380011,-5.248639,-0.859653,0.051908,1.350711,0.907941,3.435900,3.238954,9.070364,5.169897,-4.699797,-9.399204,-4.065061,3.033617,-1.398291,6.394868,4.366598,2.011602,2.467757,6.345797,0.716282,3.439529,-1.438848,-5.418535,-2.472449,-4.568895,-0.443857,-9.746119,2.401551,-2.812539,-2.637810,-1.035945,-2.011135,1.739624,0.167889,-4.775940,2.432145,5.096100,-9.852424,1.036103,-0.128360,4.375760,-1.659454,0.834880,-2.226922,5.033734,3.610084],[-2.290440,4.825323,9.064019,1.271700,2.306529,-5.579161,-6.730263,4.196323,1.303425,-3.420964,-5.779418,-7.599907,-2.640653,1.591598,3.096354,-8.037648,-1.845571,8.303487,-3.977586,-2.825440,3.370113,-0.616767,2.240920,3.811498,2.939332,-2.963652,-7.568026,7.286947,3.283985,-9.716667,-8.717824,-7.712464,6.754511,-9.280973,-7.176513,1.168607,1.111950,-2.001836,7.134352,-0.979475,7.092580,-1.192161,3.503905,-5.741630,4.740575,-0.080618,0.712231,-5.729464,-5.292086,-2.132504,3.008396,0.726871,-4.174590,-8.335360,4.542518,-3.076017,8.377571,6.601080,2.760432,3.535191,-2.049047,-6.248426,-6.353715,-2.266561,8.264564,-4.972817,1.944384,-3.405801,7.490072,0.798827,6.776494,1.161455,4.382920,5.477070,-1.570443,2.035862,-4.225756,4.917579,-8.401396,-8.700498,-2.142930,7.241641,-1.703362,1.752668,-8.380967,-0.403804,5.030121,-8.385047,-2.095875,0.932007,-1.361008,-9.345982,-6.668115,6.029013,9.614535,-9.913530,-6.387908,6.734965,3.753291,-5.602410,-8.486053,9.728534,-3.725269,-5.919357,-3.432357,-8.045451,-5.913825,7.951446,-5.375757,4.260601,-4.318946,1.520823,6.737532,2.549807,-2.551709,-2.295030,2.925050,-2.859626,6.627729,-1.986989,-6.487069,-8.570221,9.987115,7.545127,3.867220,-5.789982,-5.539396,-9.445018,-7.707307,3.710457,-4.793454,9.321075,2.892086,1.167669,-2.748613,-9.263887,-0.053235,0.501500,9.630231,7.322890],[-9.696138,-9.334103,-4.609030,-5.689498,6.645516,7.863046,-1.626167,1.270183,-6.979371,-8.765937,-7.347462,5.601411,-1.939793,3.095718,3.758867,-6.940462,-2.565521,-2.127846,0.750995,7.848630,-8.761048,-5.276232,-3.051645,5.603770,5.394229,5.846881,-4.220121,-1.406116,-4.351013,-0.760115,8.467202,6.518215,-7.602189,-6.754595,-7.667439,-7.928330,-9.957513,7.510477,-7.843476,6.001069,6.021921,9.977962,1.137760,-2.573057,1.069337,5.345297,1.313497,-5.090590,-9.836168,8.514979,1.766889,-4.400805,6.861500,-3.261797,-4.020250,6.336298,-8.020942,9.156577,-6.205747,0.720189,7.380991,-7.008682,4.155286,-4.074566,5.900479,2.558089,8.025910,-1.639620,5.786674,-7.192541,-1.330542,4.238805,-2.536955,-7.886378,-0.665638,9.912986,-8.245405,-1.422729,-2.612930,-9.505464,8.479422,-8.402242,0.201913,7.061620,3.448189,-0.761978,7.938614,9.943292,-3.336954,-1.828149,9.090538,-6.863221,-4.286039,-1.344043,5.918944,-5.717479,-0.089506,8.410237,-7.208969,-7.309850,-9.576279,6.712338,3.663198,-0.648702,6.563155,-4.791839,-7.612414,-3.058825,-3.466816,2.390588,7.491301,-9.525576,4.396859,3.911398,-3.818570,9.150648,-7.540810,-9.883419,8.129882,-5.325057,2.493212,-5.000788,4.342884,-3.854618,3.487748,-8.977528,-4.092879,-6.794612,-0.378513,1.580864,6.361617,-0.585673,5.613417,8.934802,5.812716,0.621838,9.722347,-6.842747,1.705456,-4.606848],[-5.270324,7.240226,7.753570,-3.555192,-6.027214,-8.079185,0.392173,3.198884,7.089460,5.497538,-0.178823,0.033735,-9.709911,4.075639,0.293912,-4.172821,-6.103761,-1.743965,1.809041,4.320510,-1.536646,-5.700562,-9.536544,-8.323013,-5.223386,-9.882322,9.358493,-9.615546,2.210271,9.086862,9.049151,9.697082,8.434805,3.480278,-1.669360,-9.398192,-8.750543,-9.524160,3.084903,-0.897018,3.359053,-0.606810,2.861772,-7.895728,-4.672932,4.079492,-0.914617,9.737569,-4.962085,-1.280046,-5.053652,8.707554,2.112947,7.544634,-1.827393,1.604310,5.319750,-8.918601,-9.904237,8.816054,-6.270909,9.840816,0.116015,2.103439,0.452585,3.381098,-1.092903,1.964699,-0.994439,-9.973584,-9.324905,-2.193268,-6.503417,-7.454337,-3.090517,4.047916,-6.812593,0.359559,-5.116866,2.353931,-0.957949,6.936464,4.985770,3.560227,7.451291,2.528357,6.963033,4.246591,-2.912489,-6.545026,-9.747108,-6.691833,-1.549680,-0.223282,-4.004031,7.569661,-2.624850,3.822741,6.780253,-8.383905,2.532064,-9.702188,3.434225,-5.712555,-3.206061,-3.795395,-3.817944,7.845052,-3.447909,6.584022,-6.503226,-1.711964,8.838333,-4.658220,-2.468283,-8.669464,-5.652358,-2.220096,-7.112390,-7.133483,0.499243,5.174465,1.419447,6.137041,3.568924,-3.138139,4.557863,-1.661648,-9.359450,0.972146,1.325321,-3.064269,-1.543205,-8.343470,1.414915,4.999037,3.548183,2.176308,-8.237875,1.669906],[4.426059,6.238515,-9.654105,-0.727309,-6.012185,5.646353,3.149986,-3.387460,-4.521731,-0.987792,7.618733,-8.209358,0.298665,2.457753,-1.678429,0.604267,-1.838925,-3.492761,-2.036153,4.348030,-3.469103,7.463722,6.557978,-7.861741,-4.309112,5.840596,-5.689573,-8.957139,1.310557,3.459907,-9.199102,-2.913014,4.595733,1.521223,3.083330,0.065139,7.951017,7.996455,-8.576015,-9.999935,-8.123111,-8.786936,-0.697294,-4.915301,-0.918949,7.325401,-8.721058,6.180816,6.055595,-1.996832,6.477952,-8.323122,-0.247473,5.947006,5.460787,7.077216,-3.617616,6.246872,-6.234476,-6.371505,4.546206,-2.826025,6.596191,-1.039503,-0.709839,3.149766,-3.722864,7.470737,0.459959,1.040122,-2.510986,4.295887,-0.493286,8.259315,-9.953528,2.405791,-1.476096,-1.318714,9.815752,-9.712911,6.483448,4.572922,7.341990,-6.808438,-4.484822,-8.156009,-5.489914,1.536601,-8.569103,4.866673,-6.669284,-6.347494,-7.863842,8.676467,4.022142,-5.812492,9.749409,-9.446021,-4.669106,-4.507360,-6.316895,4.159024,-7.643351,3.393677,-8.350559,5.232103,5.654506,0.754152,-5.337607,7.380822,-5.336292,-1.602166,-4.781246,-3.604285,6.952733,5.298243,5.839557,-5.629703,7.273148,-9.192728,1.737630,-9.857720,-1.869518,-2.320640,-7.575870,-9.084637,7.536385,3.836562,-2.220535,-6.959415,-2.289423,7.285280,3.598235,5.661139,-0.161913,-4.307986,9.137615,-8.836575,-1.388515,1.542385],[8.171692,5.157412,-4.161287,-3.344210,-0.152226,9.060611,-5.506227,6.971781,-8.249954,-1.619053,-2.217850,-0.078255,8.299049,2.994220,-6.904361,5.116380,9.632864,-5.485758,7.672567,-7.597916,-4.686553,-8.592246,-4.239244,-8.857553,-0.142555,0.542105,7.206072,-7.394921,5.067564,-6.568392,-8.567952,1.223091,-0.171870,-6.852922,-7.597376,2.856883,-5.668425,3.879105,5.762234,9.293004,-6.071173,5.595975,1.905450,-3.634365,9.338443,-7.688027,-1.067753,9.557745,0.325340,-0.546995,-0.291435,-2.678754,2.843621,-1.522216,3.082470,-3.796639,-2.756019,8.127644,-9.030049,-9.746254,-7.436333,7.351461,-5.243282,5.126788,-5.955553,0.474485,-7.766907,4.192245,8.313608,-1.878143,-0.420145,-6.785627,-1.399903,-8.823427,-0.374452,3.290339,3.083619,1.515547,4.883049,6.299390,8.237217,6.856677,8.875978,4.087079,-8.099968,7.299536,7.111442,2.381869,-5.007631,-0.465078,0.518979,2.357878,-2.135542,-2.832259,-3.855630,-1.007878,0.787503,0.451063,-2.649111,4.113173,-7.036030,6.578433,8.818421,-4.078717,-4.348020,-7.793418,-2.968079,-4.360217,-2.750410,-7.669502,8.693770,-0.745238,-9.249343,3.424099,8.606215,2.555380,7.168785,4.346589,-1.896038,-9.993446,-6.373149,-0.474547,5.941136,5.965430,1.449858,-8.975555,-0.575916,5.507732,-0.907183,-5.926613,-7.248070,8.161710,-5.819951,-1.495016,-7.567859,-3.796171,3.402158,5.471522,8.063430,-1.306185],[3.446656,7.177747,-5.685084,-7.765369,1.157888,-1.220780,9.647900,-0.830918,-9.607825,-7.970415,6.667141,2.105933,9.107293,4.069679,2.183175,8.361965,-0.182199,8.281075,-3.189476,2.581493,-7.586881,6.025595,-7.991242,4.615537,-9.495614,5.075336,-2.280566,-6.666568,-7.869482,5.352276,2.585468,-9.093646,2.457681,-1.890265,4.218977,-1.425547,0.250745,1.197784,4.458663,-1.198182,-0.685302,5.766501,-9.640405,-4.185938,-4.767860,5.114425,1.359479,3.213977,9.240839,-9.929217,-1.724581,-1.045516,-3.004026,6.194141,-4.176512,9.502735,1.394338,-4.697010,-0.558600,-4.333692,-1.025815,-7.242754,2.229751,-3.757186,-0.080394,-7.907313,8.360171,-6.163891,-6.058737,0.735476,-7.105517,-5.552149,-0.382670,1.695107,5.431296,6.530255,1.192020,7.348312,1.981812,3.138172,-4.477303,-2.714115,-9.031325,6.367530,-3.777384,-7.653419,9.654323,6.128036,9.455243,-5.210393,-6.735134,-7.037758,-0.961659,3.990754,1.263910,8.084905,-0.984069,-6.649145,-9.385181,5.594401,-0.799099,0.964997,-1.519770,3.040891,-9.745370,6.827367,3.649487,-7.443289,0.006296,-5.491170,6.958822,1.020981,2.395052,-7.333372,2.059594,4.685703,6.080781,-4.072419,0.566071,2.923660,7.762358,-0.238510,-5.453599,-9.650532,-7.341350,4.777757,-9.811174,4.880191,-0.566737,-7.504380,-9.681749,5.474108,-8.619921,4.266452,-1.232654,2.307420,3.370177,-1.387394,1.351888,-8.904036],[2.238431,6.414108,-8.988829,-9.015590,-1.608800,-9.563843,-4.624249,1.576869,4.544173,-8.783741,9.832663,-2.806237,7.363632,2.244294,5.990297,8.505264,4.720666,6.953821,6.581960,-0.096840,-3.853870,-9.894872,-9.898503,1.713400,9.684155,5.186588,-0.187144,0.119035,1.052336,-9.528425,-6.214076,1.595634,-5.669362,1.528058,-5.230380,7.699240,0.254628,2.424397,2.978578,5.272309,-9.687459,-7.279668,-4.236638,2.127685,-3.423376,8.800595,1.634539,-5.087715,3.864086,8.880877,9.164206,-6.133476,8.358577,-8.753396,-4.399849,3.198881,6.827130,2.749241,8.279792,8.840404,-7.603680,8.882722,0.625902,8.093313,2.761661,2.387785,-2.080074,9.943126,7.827947,-1.443989,-8.582096,1.223973,7.650531,8.897096,8.262196,-3.761179,6.385895,0.607361,4.452508,8.966867,8.182222,1.889038,-4.188014,7.589546,6.013907,-6.859493,7.389773,0.339048,-9.011514,-8.021072,4.108819,-8.733691,-2.290656,4.985500,-6.205269,-3.435457,7.782567,6.877430,5.560961,-4.768517,7.830191,-3.037762,-8.914910,4.412157,-0.357509,-6.773167,9.937523,8.351870,-7.449964,2.625203,5.912515,-4.819247,-7.774009,8.927982,9.477138,-0.746981,-7.435886,1.541345,-3.709525,1.509002,-3.751007,-5.800240,-9.947141,3.800332,-7.838974,-8.213035,2.018956,1.652708,-8.793413,9.825338,-0.596964,-7.534934,-9.383027,2.922112,0.010916,6.381917,-7.090653,1.131803,2.047697,7.048492],[0.447608,-5.958552,-1.821284,-1.528985,-7.390316,-9.647277,4.064085,9.403176,2.240876,-7.694874,2.786418,-8.183664,1.929406,7.222406,4.419016,7.649125,-8.133010,9.636965,4.820121,7.505924,6.823767,-4.153188,4.321470,-0.565631,-5.994334,6.820442,-3.181911,6.433057,5.817309,5.957867,3.524076,6.236571,-0.815789,-6.604603,9.655410,2.124622,-6.086278,2.307809,1.719477,-3.917381,7.957047,6.821700,9.129181,5.594670,5.794658,1.266150,5.061738,-8.806931,4.013118,3.918323,9.772125,6.776198,-6.576509,5.052649,-2.460721,7.967717,1.660709,-7.861841,9.689255,3.565833,-7.252461,7.931215,6.793583,5.205296,1.344692,5.007178,8.445684,-7.529670,-5.186326,3.842235,5.890551,-4.478798,6.432793,2.536873,-3.815174,-7.057973,-4.228264,5.197603,7.156153,-5.064335,8.319705,0.546486,0.775769,9.863541,4.824730,-7.557980,6.421741,2.421478,7.555973,-8.813742,2.009161,-8.874352,-0.175960,-9.094982,-2.199785,-3.629710,-5.140379,-8.509137,9.380726,2.687107,-7.501712,4.448775,-9.873778,9.632944,-9.809765,-0.622248,-4.281300,3.188245,-6.456286,-0.567305,-4.978306,-2.103805,7.110052,-9.573704,-4.499053,0.285998,-7.355159,7.278893,-4.221518,-9.981103,-5.354501,-3.097587,-3.496318,8.564776,4.744740,1.325148,1.894977,6.376454,4.855507,3.824504,9.483071,-2.366004,-2.932529,6.802489,-7.749241,0.664527,-7.759198,0.518757,0.772235,6.288190],[2.426269,-9.264046,-0.335901,8.171189,-7.791593,-9.942902,4.791586,7.366378,-3.665031,-8.884160,-4.441949,0.988729,-5.274208,1.701611,0.042972,-1.706395,-2.704492,2.749776,-8.413390,-1.298645,-1.952636,4.109442,1.404134,1.958378,7.035911,1.082806,7.204154,-4.996112,8.100375,3.160763,-1.911445,6.268043,-3.310111,1.859151,8.855805,2.308340,-7.558939,-6.442542,3.358919,4.233738,7.269497,4.406147,8.483745,-3.455127,6.767299,-7.643606,-3.717497,-6.773976,-1.993522,6.856205,3.495964,0.144368,7.353766,-1.013817,8.577596,0.225332,-3.367249,8.851692,-6.968473,-1.715142,9.004764,0.150195,4.567081,5.701934,-5.929925,3.572192,4.252374,7.819012,-5.809221,-5.680750,-1.952451,0.067200,-5.521253,-0.452734,-8.166328,-0.160892,0.339311,1.575577,-2.086557,7.873230,-4.374375,-1.350599,0.999747,-2.111556,8.360827,-1.121717,1.483157,-4.369042,-6.408965,-1.782423,-7.406472,2.566641,2.669631,-6.126206,6.782046,-6.252848,-7.533972,6.635989,-6.344278,-3.089028,-3.305163,0.749734,-6.445942,9.693467,1.687226,2.315148,4.769551,6.418830,-4.612930,-5.438929,5.222164,6.167910,9.191688,-5.184720,-8.363593,-2.413244,7.381109,-3.303356,0.660602,-7.113109,-4.416839,-2.603735,-6.960310,-8.736101,1.446805,-3.136813,5.376174,6.374318,8.026692,-2.401948,-5.601315,-2.274661,2.389271,0.459780,0.109782,3.078239,3.182467,0.802716,8.067368,-6.497095],[-7.308659,-1.620549,-8.183447,-1.881352,5.397501,-2.537659,2.138637,5.690796,9.590145,-0.744312,-0.672098,-2.816518,2.551763,-3.697729,8.775745,-5.224112,0.288927,5.275643,-6.649174,8.317298,8.346574,5.201655,9.345347,7.774981,2.764243,7.156472,6.448398,5.371677,0.984385,2.457848,3.065587,-3.803174,-8.409962,-2.620541,4.972446,-9.928128,4.321753,-2.179793,-8.704364,-9.922919,0.028278,-7.107574,7.464225,8.201678,0.479526,-6.312689,-4.921740,3.240516,-6.190203,0.517744,-4.629661,-3.052948,4.160493,-7.571628,-6.018205,3.304642,-4.366683,-4.261341,-3.252842,-3.119021,0.774187,-2.839542,6.716553,-8.297124,8.071305,0.096996,-0.734474,-2.701653,-6.684078,3.398656,0.285631,-9.002564,-9.353702,2.489887,2.723072,-1.644622,-5.617907,-3.556730,5.487256,-0.771154,5.491136,-1.789002,4.661025,2.771911,3.597470,9.905496,-5.394026,-3.824358,-0.161109,4.773224,2.951134,-8.071897,-9.007132,1.873338,-7.856076,-5.760879,6.905300,9.593989,4.656942,7.375777,9.726793,2.966126,-7.626204,3.728971,-0.711829,-3.747867,-0.114858,1.010700,-8.521995,-7.988105,-5.984579,-5.469028,2.937675,9.962657,-9.484439,7.832007,6.161179,7.562158,-9.515738,-0.716990,6.064046,-6.878139,-5.012586,-9.323939,-7.372235,0.365613,-5.335339,6.189585,9.199154,-7.537638,6.887325,9.403198,3.169909,-7.801462,1.956317,-3.568870,-0.479243,7.895062,-9.016704,9.074454],[-8.824765,-9.601028,-7.958125,1.439133,-1.667336,9.175955,1.872634,-5.203633,-9.079575,8.346029,1.568690,-2.675913,-1.391993,-2.139162,-3.285519,-8.443342,-7.043519,3.332090,-8.758623,-6.757031,-0.096964,-1.032717,9.351405,-2.199532,5.580128,5.553165,4.148433,-8.276729,9.370072,6.618703,-6.121185,1.613513,-8.988635,9.933500,6.474156,7.817017,-4.428894,9.306021,-0.634066,1.628093,1.706206,-4.613905,-6.767459,1.320428,-4.131486,3.759591,-1.001056,7.691039,1.985687,6.207055,5.669984,8.329462,-8.480823,1.042634,-6.931157,-9.971685,4.362935,9.960698,-6.999091,-1.356321,6.686791,1.984329,-9.298745,-7.152026,-4.623953,-8.366784,-2.645370,2.253188,-9.224546,5.678510,3.687101,3.046478,-0.789224,-2.680746,9.394664,3.557058,2.462009,-0.986943,-8.303985,7.141169,-1.040851,-1.268611,2.354029,0.391538,-7.824195,0.771756,-1.881229,-8.064631,5.096742,5.823045,0.399555,8.599210,-8.383630,-9.759005,-7.367668,7.648444,2.548107,7.167503,5.278581,7.738716,3.984642,2.385219,9.629344,-2.607490,-3.912903,5.220827,3.524876,-1.467065,-2.428283,-4.757814,9.662332,1.627787,9.223671,7.241513,1.994766,-1.415161,9.289792,-4.918982,1.982969,3.924679,3.471402,-8.482431,5.789799,-6.722931,7.263028,-7.099745,-6.200291,-8.589672,-5.415275,-6.015242,-9.218839,-1.352880,-7.647581,-3.465115,-2.164461,0.147177,-6.114366,-8.540067,3.775217,9.635431],[0.864163,3.476250,1.986883,8.622915,9.006175,0.703809,-1.251017,-6.384795,-2.738542,-2.976121,-0.226304,-3.988387,8.172161,7.374704,4.643637,-9.439869,-5.743818,-9.109113,5.108528,-9.432165,7.751706,-5.069114,7.245716,-4.702006,6.099843,-3.719548,5.633685,-0.343890,1.480508,9.953261,-4.311572,2.385253,3.740688,-8.107317,1.589751,8.901532,-5.222510,-5.422986,-4.929240,1.992963,-9.631653,-7.362148,8.257888,-8.294834,-5.227234,1.155414,5.207882,6.884087,4.859349,1.353019,-6.926885,6.593765,-1.270201,5.934168,2.955746,-5.222158,-2.030718,2.082580,4.676896,7.532392,5.012633,-2.892875,8.947274,4.083672,5.576802,-3.713044,0.521759,-3.572355,0.133477,7.629224,4.769415,-0.376472,-2.305065,6.985480,-4.737759,0.883356,9.210161,-4.151000,7.331491,9.674301,9.692420,5.633986,-5.686151,-3.436424,3.873794,-3.385260,-5.953487,-0.463387,-5.446120,-5.246387,-5.073277,-7.929203,-0.503052,5.588803,-0.790106,-1.777343,-3.833753,-2.211569,-6.396456,-3.306348,-9.065108,-2.328661,-0.658119,4.594946,-4.002538,5.753649,1.870894,-0.067670,-1.800073,-9.161463,6.262306,-7.919550,-1.391072,-5.935357,-3.308702,-2.321477,8.597175,1.878223,8.699118,-9.492995,-4.152479,7.566730,2.956659,0.090334,2.103580,-3.757357,2.875731,-6.084845,8.261376,-9.156122,0.148343,5.419579,8.328509,-7.199199,5.262779,-0.399448,-2.266713,-7.854394,8.673178,-8.020203],[8.428093,4.465436,1.681935,-3.155810,-4.571108,-5.369542,7.417719,-0.007024,-6.460761,1.521960,1.247354,-2.250206,1.475316,2.613232,-7.601304,2.386552,-1.238703,-3.019086,-8.116324,7.540777,5.482189,7.471167,0.533709,2.103263,-3.299688,7.581128,-7.448834,-6.408769,-5.632033,3.984902,7.951417,-3.384545,9.127873,2.707314,0.348454,3.862062,3.939855,4.233596,-8.314335,-0.148880,-3.644509,3.068601,1.320674,-3.298437,5.971441,3.473500,8.918501,7.592831,-1.743169,-7.825683,4.033932,5.152740,-3.280911,1.374922,5.760759,-1.504430,4.874574,8.396459,2.990881,2.686377,5.446406,0.787162,-1.100513,7.325719,1.228720,1.057667,1.530022,2.794774,3.010838,3.338485,8.207006,-9.231323,7.140627,2.739481,-3.007413,6.684360,4.321478,-1.034644,0.486965,6.019867,4.328148,7.275861,6.850075,9.522995,2.909546,1.044748,-9.262857,-1.456823,7.981005,-9.340813,-8.562622,1.638682,-3.145120,0.650045,-5.935038,-5.212608,9.802695,-9.569994,3.753377,-0.672135,-5.073656,7.609977,4.384712,-6.461006,5.247146,-1.962421,3.043297,-6.757704,1.793621,2.355749,-9.301790,-4.749862,-3.941947,-5.284673,-4.959226,-5.756494,-9.743785,7.194064,4.403069,5.336485,-4.605917,-9.593700,9.264830,3.875720,2.714307,-4.958290,-9.030351,1.646801,-3.818822,-5.848761,-9.514556,1.395156,-2.451127,8.310244,7.817792,7.339239,-3.018232,6.385322,-7.682499,9.667570],[2.307316,6.854759,-5.792290,-4.650261,-8.332241,3.373985,-4.991129,1.643499,5.096985,-3.198083,9.448814,-7.879538,-7.476742,-4.936832,-3.907019,-2.917845,1.823354,0.176865,-8.679975,-1.713069,4.029701,-1.251925,1.819640,-3.730291,-1.776239,4.488280,-6.316931,9.618498,0.156392,7.433407,8.561695,7.970023,4.360072,-2.249440,4.008283,-7.082315,-7.663251,-1.907351,8.074425,-9.796346,6.566224,4.712136,6.646148,-7.908905,-8.024787,-1.676482,8.224027,4.058515,3.403118,9.944124,-9.320614,2.794475,-7.817613,-9.975851,-9.805938,9.664877,-9.280361,-4.958583,8.054835,-4.581767,-3.028174,-0.491089,5.716243,3.271170,6.187538,9.522495,-5.535020,3.616790,-9.809268,-5.513964,-0.457279,-8.168597,3.501801,3.350146,-4.016264,-5.193104,-7.571179,-3.593478,-9.475426,-6.970229,-5.242765,-9.076460,-1.876234,1.319716,2.230410,-9.210937,0.933325,2.964855,0.778754,-3.623072,-6.005876,-7.967709,6.207905,-3.762193,-2.974969,1.987413,-1.214029,-6.534027,8.995821,1.769028,9.667157,3.764980,3.816532,7.517548,5.657697,-8.310018,0.364943,-1.606482,8.901330,-9.966042,-8.334909,0.062870,0.956446,3.037740,5.252412,-5.975867,-7.222360,-7.380470,-9.308865,-6.307648,6.962709,7.283493,-9.508583,0.433297,8.713225,0.189039,4.923426,-2.761838,-1.599831,-6.126018,8.186223,7.733699,-9.736757,5.785808,9.993531,-7.628737,-8.973046,0.977885,3.636959,-4.882811],[0.013362,-7.850551,-5.033838,1.377943,2.400636,8.169718,-4.408647,-8.408461,-7.674327,0.352950,-3.168455,-6.457321,-1.769530,4.351713,-2.549862,-9.772715,7.486175,-2.878242,2.554034,8.809064,9.385509,9.218718,7.254865,-8.775914,1.276630,3.759394,9.752523,-0.202032,-8.043983,-7.189418,-9.813778,-6.872126,0.233913,3.669788,-5.226808,6.878374,2.934274,-5.447357,8.627190,-6.925383,-9.336323,-5.966630,9.639004,5.390659,-2.319703,-2.265498,-7.571965,-4.366359,-9.156978,0.190916,-3.214716,-2.541790,2.663114,-0.473581,-2.368999,-8.458229,1.358000,-5.092264,2.524616,-7.074380,0.094355,-5.077781,9.832684,-7.967451,8.093966,-4.114968,-0.306384,5.476531,3.040088,-3.942642,2.144811,7.020639,7.624701,3.445862,5.227071,-8.989405,7.433398,5.901625,-6.827237,-7.016507,4.542760,4.290706,3.121230,4.677506,8.002938,-3.755211,-2.989337,0.781528,-4.927458,0.043418,-9.697820,-5.561354,-1.755235,-2.136482,7.324809,-6.755241,3.789541,3.340734,4.338977,-1.311096,-2.755729,0.275805,-0.378002,3.317999,8.384126,-8.971076,-0.256750,5.193334,-7.876676,5.863011,-5.496303,-5.562588,-1.805790,1.467863,5.806229,-0.310539,-3.567404,-4.301134,-5.078488,0.266508,-4.541539,2.282121,3.365103,-5.295464,-4.568285,1.719462,5.564903,-8.233330,3.691192,6.668161,0.179814,6.508626,2.842253,-1.040798,9.920377,-3.190302,-1.097238,-4.520552,-2.358675,5.034233],[1.257817,-8.438930,7.707375,-5.642782,-6.515435,5.149838,8.720730,9.757253,-0.792453,-5.053882,-0.102048,-9.350373,-6.031749,-4.475825,0.080827,0.369700,-3.749907,7.715864,-7.778751,5.816013,-5.433345,6.154262,1.494564,-6.750982,-4.486186,1.795572,1.279500,6.383211,-2.438578,0.111549,-1.704126,-2.398327,-2.289475,-9.628392,7.575104,4.699650,-7.068988,0.079472,8.002463,2.292307,-0.872552,-7.038167,-9.907250,8.348273,8.506841,-7.632355,5.908354,0.984258,7.454928,3.539683,5.674813,-3.682573,3.529379,3.533700,8.379012,-3.459899,0.692585,-8.606242,2.458549,-7.544383,-7.632601,-0.642984,-1.517826,9.498924,0.386054,-3.924621,5.413118,-5.032889,3.266311,5.556399,-2.967109,-6.664177,2.436077,-6.318078,0.520050,8.051300,6.733355,0.484714,4.783190,7.237867,0.075516,0.902916,-1.897344,5.546077,9.406978,1.386871,0.546000,4.238612,-0.435611,9.768211,8.041639,0.888185,-2.579932,-7.204787,0.621543,-6.930366,1.902891,2.204985,8.275724,8.915510,0.467959,-7.055714,8.353967,7.826644,7.308858,4.337440,-0.989436,-1.170648,7.465423,-5.185083,-9.171892,-4.379847,9.430426,-5.005834,-9.683891,5.555000,-8.238747,-5.318757,-8.610790,2.081262,-8.872873,-7.724653,5.031112,0.730598,8.129376,2.852324,-7.503038,0.119323,4.077271,-5.052271,-7.901840,8.982474,-6.308956,-5.195498,-8.509260,-7.327344,-0.735046,2.644450,6.150399,-5.749742],[-9.868393,1.969756,1.937603,-2.109414,-1.045558,8.593142,8.849026,7.598078,-2.826867,-5.646854,6.146396,-0.825698,9.068133,4.974002,-7.641298,9.618939,2.594251,-4.458906,5.534958,6.884534,7.203809,-7.828672,8.740168,-2.141499,4.459512,-8.753857,-3.569117,-2.573629,-5.965483,-1.791531,-2.238304,-0.338090,-3.051325,-6.888292,6.439785,6.286628,-8.244771,3.480159,3.930750,-9.982273,-6.178609,0.021464,5.756875,-6.953621,7.690912,-6.363512,-8.150947,1.675444,0.292560,3.090682,7.050351,-0.534444,-4.383136,-5.071707,4.328860,9.406062,3.356224,-5.772237,-8.954194,9.223517,-2.714343,5.457101,-1.255062,8.562338,2.206569,-4.898672,-1.228231,-9.993604,5.873352,-6.436372,2.034982,-3.961282,8.192266,3.911928,-4.663735,8.857157,0.418649,4.174629,-7.858040,1.184842,5.999437,-5.427753,-9.323957,8.344428,5.195899,0.259393,6.103332,-8.493182,-7.404925,-2.025524,-5.503202,4.093992,7.110293,5.853043,-1.426832,8.487255,-0.909593,3.702826,-3.005352,-0.469404,-7.252184,6.801845,-8.072256,-4.425289,7.501858,0.319176,5.906308,7.104133,1.748292,-4.097806,-0.854737,-6.953659,3.180939,0.925462,-1.517170,-8.017321,7.094943,-9.056495,5.506236,8.033600,0.202957,-9.725179,9.667880,0.723804,-6.936625,-9.803797,5.097061,7.847478,-1.394204,9.420575,4.748043,-9.042256,6.931765,-5.030038,3.088733,3.179566,-4.458898,7.202993,-1.231884,-3.281231]], dtype = "float64")#candidate|2358|(18, 140)|const|float64
bop_2359 = relay.logical_xor(call_2356.astype('int8'), relay.reshape(const_2358.astype('int8'), relay.shape_of(call_2356))) # shape=(18, 140)
bop_2362 = relay.logical_xor(call_2357.astype('int8'), relay.reshape(const_2358.astype('int8'), relay.shape_of(call_2357))) # shape=(18, 140)
bop_2379 = relay.bitwise_and(bop_2359.astype('uint8'), relay.reshape(const_2358.astype('uint8'), relay.shape_of(bop_2359))) # shape=(18, 140)
bop_2382 = relay.bitwise_and(bop_2362.astype('uint8'), relay.reshape(const_2358.astype('uint8'), relay.shape_of(bop_2362))) # shape=(18, 140)
bop_2389 = relay.less_equal(const_2358.astype('bool'), relay.reshape(call_2356.astype('bool'), relay.shape_of(const_2358))) # shape=(18, 140)
bop_2392 = relay.less_equal(const_2358.astype('bool'), relay.reshape(call_2357.astype('bool'), relay.shape_of(const_2358))) # shape=(18, 140)
output = relay.Tuple([bop_2379,bop_2389,])
output2 = relay.Tuple([bop_2382,bop_2392,])
func_2394 = relay.Function([], output)
mod['func_2394'] = func_2394
mod = relay.transform.InferType()(mod)
output = func_2394()
func_2395 = relay.Function([], output)
mutated_mod['func_2395'] = func_2395
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2416 = relay.var("var_2416", dtype = "bool", shape = (12, 12, 8))#candidate|2416|(12, 12, 8)|var|bool
var_2417 = relay.var("var_2417", dtype = "bool", shape = (12, 12, 8))#candidate|2417|(12, 12, 8)|var|bool
bop_2418 = relay.logical_or(var_2416.astype('bool'), relay.reshape(var_2417.astype('bool'), relay.shape_of(var_2416))) # shape=(12, 12, 8)
output = relay.Tuple([bop_2418,])
output2 = relay.Tuple([bop_2418,])
func_2432 = relay.Function([var_2416,var_2417,], output)
mod['func_2432'] = func_2432
mod = relay.transform.InferType()(mod)
var_2433 = relay.var("var_2433", dtype = "bool", shape = (12, 12, 8))#candidate|2433|(12, 12, 8)|var|bool
var_2434 = relay.var("var_2434", dtype = "bool", shape = (12, 12, 8))#candidate|2434|(12, 12, 8)|var|bool
output = func_2432(var_2433,var_2434,)
func_2435 = relay.Function([var_2433,var_2434,], output)
mutated_mod['func_2435'] = func_2435
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1107_call = mod.get_global_var('func_1107')
func_1109_call = mutated_mod.get_global_var('func_1109')
call_2450 = func_1107_call()
call_2451 = func_1107_call()
func_1033_call = mod.get_global_var('func_1033')
func_1036_call = mutated_mod.get_global_var('func_1036')
const_2453 = relay.const([[-7.570447,8.791092,-3.259385,1.833015,7.005168,-9.884636,3.585564,4.137405,-4.326489,3.098850,-9.258438,7.268413,-9.858911,8.574579,3.766565,-1.098857,-9.879506,1.951360,-1.696133,-5.140761,-0.914096,-6.912176,-3.231959,-3.559762,3.009302,7.268931,-1.769912,-6.829808,1.231392,6.317363,-4.217872,-1.142663,9.309156,1.315339,-3.630567,6.161561,-4.736606,1.055557,3.906415,6.260992,4.683843,2.048385,8.979162,-4.627940,1.364020,6.206285,-5.722504,-1.364309,-7.121512,4.293377,9.877516,3.455281,3.832849,-0.999361,-5.268090,4.987985,-3.548208,8.730902,-8.595282,8.806160,7.162186,-3.416683,-5.414826,4.332293,-9.951396,-3.367315,-0.211220,-7.526114,-0.509231,-9.561476,-5.861611,-3.598237,-1.892107,2.621899,-4.383340,-9.172170,0.963707,5.102601,0.959208,-5.567211,2.885131,3.363128,-1.472028,7.963452,-7.905588,-9.347189,4.739394,-7.077171,-6.749317,2.241737,-8.085160,8.485959,-3.608709,3.029520,4.999369,4.893477,-6.353915,-0.532775,-5.250203,2.123997,-8.488380,-8.698278,2.928298,1.723132,-1.541427,-6.929550,5.867546,-9.061784,-4.580216,1.673575,-2.593598,-9.727217,-2.059731,2.481135,4.245701,5.031423,-5.382451,2.061041,-6.705179,-9.943455,3.089741,0.857913,-1.382280,-1.137591,-2.967660,-8.295682,2.181596,3.965238,-0.604313,-5.325643,-2.915399,3.331563,9.883308,-5.695078,9.660678,-8.924811,5.013009,7.895070,-9.909030,-0.714806,-9.206427,5.708211,0.322532,7.403700,5.919081,8.393526,5.291639,0.294656,-7.225824,0.846486,-3.103927,-1.072753,0.660525,2.772257,-7.751450,-0.731020,-3.587602,-1.492862,5.039109,1.030542,1.287487,-6.511793,3.002332,-5.560653,4.226014,-9.665798,0.901035,6.783877,-5.792351,-0.678875,-3.240007,3.737671,-4.117614,-4.368525,8.272831,8.816733,8.696761,-9.758982,3.552707,-0.044695,-4.481406,-2.165296,9.036445,-3.247541,-4.298279,-7.812891,-5.527950,5.111238,7.374559,-9.070063,-8.165580,-3.740080,1.452948,-3.935972,9.985442,1.851866,5.586224,2.375621,7.492070,4.587091,8.350296,-3.966836,2.054191,-4.043667,0.556138,-4.016240,-9.281759,4.474582,4.238000,-9.100018,-9.196668,-9.202064,8.679133,9.493168,1.268526,-2.205442,-6.833838,-3.174772,8.285916,3.141245,9.418024,-4.838971,-1.510150,6.070615,0.755442,-9.038670,9.319004,-9.571116,-9.766950,4.201557,-2.913986,-6.835023,-0.809240,-3.173783,-3.689480,7.328856,6.247841,6.570541,0.486710,7.333334,6.345440,1.557351,-5.934186,9.499903,2.130277,1.374623,3.198583,-7.350002,-4.369128,8.372278,-2.326014,6.408440,-3.749018,5.302515,1.451342,-9.953589,-7.930689,-4.127081,4.297777,-9.404151,-2.687797,-1.470623,0.785910,-7.745381,-8.853044,-7.557994,-2.749914,-7.777286,2.192602,-5.824003,1.113119,0.847419,-2.162175,-5.880021,7.351185,-2.394463,-3.002201,7.579580,-7.859715,-6.070816,2.837471,1.453688,-2.804178,-6.547765,-6.728613,-2.297546,-4.033146,1.749836,5.846891,-9.416771,-6.402167,2.160793,-6.413795,9.650573,-3.221097,4.872424,-3.729059,6.052656,-2.409723,-5.920348,-5.285479,-9.941835,-2.296859,-6.499317,-4.032886,9.652149,0.368532,6.729112,6.307763,-1.235715,-2.886013,-6.756720,2.511888,5.791294,6.970481,-4.413400,6.157752,-1.210688,-2.436597,2.215351,-9.417195,-7.168648,5.418203,0.854584,-4.266061,-0.084556,7.908576,9.016748,-4.712874,-8.771466,6.601300,-5.604340,-5.898743,-1.489307,5.310263,1.311650,-3.479297,0.946139,5.010493,4.861017,6.788427,2.825315,-8.742636,0.067730,2.478501,-2.179589,-9.436219,6.456092,-5.507946,9.362780,-6.567567,8.686053,-9.458148,-3.157627,5.603349,8.382695,-4.043708,5.310374,-0.743997,3.131706,-7.649712,-8.497678,-2.522102,7.855799,7.531552,-8.938006,6.531368,5.356024,9.522448,-5.724914,9.665341,9.534852,-8.430048,-8.569764,5.792112,-2.065728,9.489997,-0.543077,8.898165,-3.694917,-9.391626,-3.527817,-0.642671,-5.500050,0.380339,-0.685763,-0.408175,-0.875896,-4.287692,0.844857,1.983674,-5.164809,-7.938291,-5.897751,-8.710346,0.486034,-3.984411,0.480904,0.905958,-2.391269,-5.424045,8.547153,-9.239306,3.104713,-0.102232,-9.941642,-2.039192,-4.016654,3.457911,-4.409694,-4.358219,-1.522581,7.481216,5.317044,8.764493,-8.942656,4.327563,1.380350,6.677124,-8.226362,7.879307,4.963747,1.911957,0.753152,6.304699,4.660489,5.186236,-5.025795,0.606812,8.795457,1.811519,-2.676534,3.960594,-8.437244,-5.025898,-5.766944,0.799669,7.826646,6.408914,3.190243,4.747484,-0.377204,-5.488763,6.554144,7.374384,2.935555,-8.155950,3.586244,5.642560,9.176039,-6.360316,1.200784,8.539372,8.766702,9.427988,2.514410,4.795453,7.118770,-4.241793,7.814015,1.466942,-8.573861,-3.955952,9.030762,7.266079,8.719391,-6.056083,7.717504,0.342845,7.511817,9.483212,7.144418,-7.164272,0.733212,-8.588224,-6.540449,0.042471,2.422455,-8.112918,9.812609,1.302394,-5.119014,2.790571,-7.304413,-3.381549,-5.003163,-7.178941,-2.777882,-8.771568,-5.808094,-3.232442,3.397700,1.247912,9.828795,5.124170,-7.809460,7.124794,1.527831,-8.138333,9.230309,3.077882,6.407303,-1.041900,-3.373023,3.332968,2.955714,-6.230557,2.324779,8.621865,2.071890,9.626423,-7.491760,-8.378085,1.091126,1.075894,6.542579,-2.827381,-6.456766,-6.900677,-5.020790,4.077569,7.974910,-5.031175,-6.960052,1.118450,-7.432524,5.781028,4.458900,-4.027163,-7.798080,-6.731965,-2.026032,-6.610922,3.326765,-5.810860,-8.615080,9.082195,0.869467,-5.098320,4.391531,6.268291,-2.715224,-2.748198,9.003005,3.737728,-1.641017,9.943074,-9.380469,-0.884396,6.746141,2.218454,-6.649631,6.392472,-0.842928,6.326461,-2.158585,-5.161461,1.202923,-8.077605,5.367964,9.798589,9.889049,1.232577,-5.047823,8.991850,-0.278085,-5.111715,2.063557,-0.461464,6.402694,-5.534335,-3.644333,6.360042,0.515098,-4.985932,2.331728,5.787638,1.453171,-0.124872,-7.818014,9.558867,2.359295,2.598445,6.862728,-4.965198,-8.127314,-6.786595,1.332850,-5.325194,-8.712971,-9.440974,-6.782524,-3.616368,-7.973395,-9.967640,3.385411,6.440779,0.896037,0.357134,-8.320668,8.578948,-2.048607,1.501109,8.749297,2.949581,9.614375,1.855829,6.933894,0.896742,1.686426,-4.863942,7.268959,7.022263,-5.525967,1.113190,-2.918406,0.216015,6.792302,5.046792,2.309360,-9.567481,-2.860061,-8.711518,9.183783,6.214135,7.998958,8.291431,0.597918,4.317800,-6.371755,-7.577826,-8.358561,2.639585,-0.822067,-9.162379,7.667262,-0.773572,3.381183,7.161201,-1.713689,1.703892,-4.098752,-0.683154,5.668845,-5.283412,3.414748,-8.158562,-9.807544,4.485320,-5.084381,-2.661451,-8.141444,3.898245,-3.701398,-9.602268,2.565996,-3.505850,5.465805,6.342325,3.413234,-4.197182,-1.737216,-8.889127,-0.152854,-9.952755,3.321890,5.300137,0.455748,5.207069,6.359350,8.168138,2.821751,3.829301,-9.706669,1.394313,-0.753794,-6.057314,0.408952,1.474887,-0.083301,-9.089596,5.868951,4.908884,3.548166,-9.123316,1.110991,9.579929,7.899035,1.202012,-4.361633,9.538540,-9.519202,6.012050,-0.949511,6.270228,-5.530945,6.711167,2.272015,4.618128,4.551891,-3.561222,5.995620,-5.138167,-6.305532,-2.259298,-0.005123,3.532138,-7.052529,-2.129208,9.780674,9.466619,-6.524369,4.408222,-8.385158,-9.975141,-4.199272,-6.929775,-3.209589,7.429871,-0.421669,0.247145,0.831146,0.204776,-9.682847,4.679350,6.323174,7.394509,9.322948,-3.911735,3.411795,4.473547,4.611050,1.598482,-4.204896,-4.130143,9.244961,-6.878865,-8.751796,-6.812333,4.490472,-6.916196,-0.513457,-0.807762,2.322622,9.078978,5.744725,-8.205764,-3.772215,3.925537,-9.613653,9.195735,9.244598,1.491104,2.792221,-5.703814,6.074957,-1.578848,5.707241,4.176995,3.266050,5.955717,1.413878,2.879556,-5.409464,0.151195,-9.840790,-3.914406,-7.458514,6.568880,4.877567,-8.536083,-1.050691,-1.436804,-9.760714,-9.514227,4.291673,-3.482769,-1.572338,-5.754193,-4.568637,4.215832,9.585095,7.555743,0.982470,6.123828,-8.935140,9.910874,-7.689360,-5.797469,4.932698,-8.081345,2.873451,-6.071067,-3.840622,-5.174500,-5.603142,4.606420,3.345741,1.141658,9.613721,4.751212,-2.552082,1.242487,-3.241031,6.397136,-7.413117,-7.697802,3.002574,9.635874,-1.534960,-8.366400,-9.089028,-3.979067,-8.743033,-2.958295,-0.089122,-8.452205,0.853385,-9.121700,2.672183,6.875534,0.379189,6.190448,-4.509374,1.721137,-1.553071,0.307325,5.473206,-3.747175,9.706572,-1.278291,-3.331505,7.982320,-8.386709,-2.694823,6.320777,3.279736,2.406814,8.710546,-3.466789,-0.429387,6.249577,1.813636,1.007710,-4.791490,-9.673910,3.686043,7.692492,-1.326163,-3.958825,-3.540365,7.945675,-4.027339,-4.866800,-4.475699,-3.191945,-0.757154,7.676902,5.691381,6.646179,9.576940,-3.801335,0.578918,9.287392,1.390035,-4.657040,-3.438061,4.024894,-7.065187,-7.569423,-0.667127,-2.790092,-8.651545,-2.877268,-9.497714,-2.416504,-1.678112,-9.723840,-5.036612,5.281164,5.170144,7.176850,6.576037,1.534307,3.327890,7.357681,-1.847418,-1.568072,5.907674,-8.123549,-5.405635,2.391709,8.296739,-5.184061,-1.047004,7.786871,8.227875,9.070159,-2.810814,5.289976,-1.874407,2.381387,-9.659255,-7.148810,8.999129,5.745390,6.602867,-5.202600,3.874450,-5.868394,-5.607093,7.190726,9.008131,6.393398,2.539652,0.223072,5.755229,3.202931,-3.209898,0.107888,-0.867943,6.107288,8.980565,7.844880,6.150460,-3.590221,8.786564,3.545867,-1.869863,-8.650739,0.351218,-8.104657,5.033400,-9.458540,3.825347,6.221429,9.746034,5.761718,-0.287690,8.633963,-2.613163,7.482577,0.341083,-0.163031,3.531048,-3.475148,-7.342441,7.211987,-2.537411,8.131674,2.262781,3.127488,-0.743860,-6.562035,0.231019,-6.818249,1.479159,-5.259463,-2.145161,4.203923,0.051115,1.903108,-6.354777,0.309606,-1.660368,-5.344810,2.312597,-2.667912,-2.512799,-2.569417,-7.755783,0.936679,7.816380,6.735054,5.854132,6.783930,-6.394077,-3.615482,-6.104918,2.330952,1.535930,-0.925344,4.991995,-6.115007,5.906003,-2.087851,6.893792,-0.495446,9.986006,-0.998865,-2.624305,3.431766,-4.620557,5.391839,-4.686766,-6.117898,-5.014891,-8.057942,9.370757,4.107020,-0.938630,4.673638,5.762042,-5.943733,8.260509,2.682344,-4.337189,-0.651909,7.281919,2.585720,-4.662108,3.522871,6.301262,-2.095411,-0.225323,6.181110,6.494945,-2.305426,-0.422498,6.399889,6.992954,5.060761,-0.793138,3.754475,5.103883,3.620874,-0.409301,-7.910900,-5.792397,-4.638839,-3.149376,9.333296,-8.845624,2.515005,-4.937420,-8.931405,2.406330,-5.535445,0.916162,3.197691,-1.700390,-8.350245,4.771710,-7.081682,-4.967143,-6.225605,6.128201,-1.045832,0.483169,-5.967212,1.393362,-8.949802,2.180311,-8.269775,-3.015810,7.035908,-9.658594,1.854293,2.217172,5.364564,-6.642650,-2.989903,-9.765223,-6.844778,-0.967047,6.265863,3.293737,6.335114,-7.868844,-8.246849,2.464063,-9.750111,8.659700,-7.336936,1.633166,-0.956563,0.101872,7.927358,-5.484763,-6.342513,2.234067,-1.008680,5.480861,6.788309,9.200122,-2.846789,8.840298,-7.013125,-9.959855,4.940322,-9.599760,4.157898,6.259154,2.502306,-9.638131,-4.461589,-2.628164,6.509913,-5.234452,5.484491,-8.540610,2.118835,-1.868230,-4.936476,-8.083915,3.259850,-8.800857,-1.036938,0.195762,5.125536,8.840238,5.245141,-6.531178,6.268038,6.717854,-1.120362,-2.988523,-7.203976,3.821980,3.975522,-1.291348,-4.027954,-1.355779,-5.616479,2.153206,1.376906,-0.319442,-9.582514,8.772332,7.638363,-5.642960,-9.930105,8.394063,-2.811251,-3.046889,-5.387536,-8.334728,2.585760,-2.629991,-3.705358,7.681395,-4.606673,2.956884,-1.443544,2.766605,1.482047,2.006455,-1.862551,-5.197164,3.706399,0.592049,-7.100118,-2.310642,-8.087718,4.391358,-8.321375,-2.880394,-7.723654,4.786696,7.581679,0.885875,6.808822,-2.012107,7.390010,-6.094488,3.878726,0.389029,2.597421,1.423704,-6.136036,-3.505285,3.653910,1.107977,-5.074050,-8.537291,9.544294,4.761523,-1.582811,2.974347,-0.937881,-4.047910,3.103113,8.008912,-8.755181,-0.934667,-9.896257,3.231341,7.139258,1.535875,-7.123751,6.505224,5.280251,-5.436807,6.323053,-5.136658,8.466881,9.742737,-0.393296,1.995978,-5.679180,2.685377,-3.047089,-6.994602,3.859358,-1.621765,-6.657200,-0.768286,-2.386993,3.860873,-3.802880,4.871956,6.123481,-7.786391,-0.704152,-2.415080,1.969583,9.943552,-5.165562,8.360796,1.374672,2.865187,-3.000744,-0.318482,-4.674644,-1.637968,2.864731,-3.415046,-2.810972,-6.424703,-7.091786,4.413808,-3.948747,-1.672838,1.878004,-7.807628,9.631342,-5.427490,2.843298,-7.645789,-3.189294,-5.757731,-2.232315,-4.751018,9.856540,0.937358,6.575581,5.123596,3.790949,9.323286,-0.699545,-0.870691,1.049330,3.496467,5.734939,7.242336,-1.554406,4.991075,-3.070088,3.933883,-9.869139,-0.804290,-6.431736,1.638875,5.090966,-3.589174,-0.803013,4.032535,5.691134,5.424565,-7.756971,-9.051420,-8.965895,9.698933,-4.171260,9.286261,-7.385162,-7.788866,5.763035,-1.269072,-9.402202,-6.757317,4.717235,8.900055,-3.425881,5.337728,3.945924,7.967718,3.865855,-2.134213,-5.760782,-6.597695,8.029647,2.364326,-1.342343,6.808072,-6.932659,-0.010648,8.945229,-9.516890,-7.989715,-0.941548,0.652030,6.457635,5.378860,-4.116250,1.089648,-8.006229,-5.423068,-5.949294,8.028828,7.318019,5.116012,-8.664639,4.961022,4.720114,-8.602531,7.779896,3.122180,4.619571,3.554293,-4.839252,-4.166481,4.227977,-1.852286,-1.343914,-4.354981,0.562847,4.839264,-9.235106,-2.742720,-4.895423,-5.123458,4.023360,-5.627050,-3.688007,-8.552741,2.892525,3.145857,4.845884,-3.958657,0.123740,-3.652386,-4.941023,-4.574843,-3.025010,-1.199635,-1.568231,6.893839,9.652380,-1.247575,1.407522,-9.315011,8.761352,9.998799,-0.619220,-0.558382,-7.298194,-0.347556,-1.544224,-2.953502,-1.234165,5.174231,6.325114,-8.488919,4.914829,-7.356360,1.185367,7.763086,-6.259916,-5.569611,-4.799902,-8.741602,3.635442,6.846174,-5.150325,-9.684895,4.926084,2.234798,-4.460827,8.971894,-5.924846,-7.381441,-8.172934,-9.170358,3.219206,0.922388,-7.691878,-9.691417,1.511927,0.478761,8.607326,-6.765247,-5.627245,2.248259,8.932483,-6.247192,-5.340807,9.913842,-2.714352,6.495471,-5.611813,0.701468,6.874670,-2.918034,6.331319,-9.022653,-2.572828,2.957516,-0.774244,7.774767,1.910591,0.299497,9.097223,8.731674,-0.691098,0.343488,6.151008,4.376303,-9.448599,2.097966,-6.952331,3.678547,-0.099054,0.466202,7.471451,-4.215398,-2.251834,9.447946,1.561140,4.368901,3.881819,-0.459623,2.266493,1.157948,-0.334491,7.897009,-8.297984,2.781489,-7.340035,6.917484,1.884682,-6.451143,6.277276,9.248523,-4.769887,4.293701,5.008396,0.421109,2.991408,0.031151,6.131376,-7.669471,7.937461,9.548960,-5.574948,7.122743,-7.920131,9.332807,0.204552,-7.907392,8.869627,-2.144835,-9.082118,6.553421,-0.186464,0.031281,-2.847758,-2.612254,9.946404,9.185404,-7.632745,6.924900,-1.609061,1.155152,-1.823219,-2.878899,3.364744,-5.430441,-3.932927,4.623213,-6.346430,-8.801112,3.477515,-9.796891,-2.454273,-4.125384,5.844451,-0.991097,7.347540,9.402256,5.567717,7.607796,-2.658794,-1.714114,-6.205042,-3.173020,-6.416307,9.060396,8.155899,-2.674146,7.326774,-7.514461,9.930275,-4.530671,-0.283777,-5.043480,5.959157,-6.732074,1.324005,-8.230193,8.531875,0.483240,-2.799863,0.692635,-3.420549,2.828345,-6.141915,-0.765613,-4.426396,-0.211920,8.932451,6.777469,6.202203,-3.786435,-8.965267,-5.796229,8.767226,-8.181298,-8.317700,2.584025,7.759463,-7.033546,9.552863,1.955232,4.128782,-5.251222,-6.294243,-1.433523,-6.326437,2.811438,9.327286,-3.967694,7.428772,-5.311301,-0.810854,-4.465033,4.109877,5.142657,-0.050137,-3.063619,9.509408,-9.864608,-0.409569,3.559434,2.644304,-3.364526,-3.786592,-8.060306,7.613123,6.528685,-3.209371,3.690709,-4.138244,-3.263598,-2.052950,-3.475137,-3.853007,6.375936,0.073273,7.117732,1.651617,-5.071451,-8.599857,0.822886,0.654070,6.642354,1.023943,6.875947,8.485296,-3.431724,8.178837,9.802959,4.911808,-3.374849,3.016341,2.504530,1.956883,-6.614524,-1.070438,9.173333,-1.533472,-9.871131,-4.824370,6.729821,7.457282,1.212489,9.599530,-5.584223,7.293938,5.526046,-3.515823,-3.849872,-5.764449,7.574888,-3.622658,7.418669,2.286086,-5.891224,8.759725,-9.454772,2.408010,8.261220,-7.708993,0.681305,0.139950,6.437497,-0.459851,4.813247,-0.162162,4.190458,-9.307928,-3.016712,-2.648240,1.268747,-8.600543,3.515790,5.816618,-3.432234,-3.525431,1.936079,9.942187,-3.098442,-6.793142,-7.829421,-8.932512,-0.350578,-6.282685,2.318517,7.660201,5.604167,-4.216408,-4.238027,4.937541,6.316826,-5.700172,6.892125,9.764431,4.256830,-0.394419,0.543231,-1.974677,1.928176,-0.660530,0.389356,2.533930,2.520435,7.911627,1.544268,2.000676,2.907999,7.126928,6.034615,-5.689915,3.876542,-1.733439,7.529663,-0.575583,-8.485886,6.989116,-3.852636,-5.763555,-7.896475,8.328804,-0.789572,9.182663,5.696303,0.974831,0.547703,6.624836,-2.492791,0.824249,-6.112992,-2.197092,-5.615292,0.706991,-7.904567,5.995850,7.477948,-4.090383,5.091218,8.491430,-2.798323,7.729031,-4.285951,-5.918871,-4.421911,9.246462,8.562299,0.336628,7.804880,2.231012,-8.897418,5.812574,6.339730,-4.877595,9.233264,8.554559,-1.517985,9.012330,-3.722166,9.812466,-9.296688,0.452667,-5.231520,6.089527,5.640908,5.161167,8.492647,-0.051255,-8.609829,5.407976,-7.946760,6.220015,3.398676,-3.122544,8.951922,9.679298,-3.214900,2.814376,8.698751,-1.834941,7.643619,3.891045,-3.305613,-6.560979,-4.230609,-6.322362,-7.082155,2.001099,9.592798,0.083132,3.422197,-1.538471,-4.429357,-8.503453,-7.257492,-8.414396,-9.081217,6.097161,8.257685,8.751458,8.822105,9.341886,9.439809,-8.938684,-5.564380,0.194331,-4.434540,4.493907,-9.724572,-5.996401,-0.557017,-4.409432,-5.656761,-0.169408,5.314374,4.299360,3.151899,1.362478,0.672521,0.453682,1.335237,2.582053,-4.182263,-1.956374,-5.624833,-2.802053,-9.997143,2.164676,-9.536784,-1.223420,7.848041,-0.500520,-9.826461,-2.880830,1.720458,7.651304,-2.943904,-5.440284,8.257171,3.781794,-3.201234,5.886726,1.994068,2.915171,-8.793627,3.047020,-6.728860,-3.595277,7.713446,-5.491970,5.323920,-8.961809,7.109186,-9.625231,2.498398,-0.355946,2.854414,-7.905951,0.546656,-8.969545,-1.964251,0.265908,-9.012225,0.153371,-6.772560,-1.257056,-5.364463,-6.785465,-2.163460,-2.073248,-1.093800,3.205991,-4.453925,-8.264466,7.865235,9.238212,4.652351,-3.530061,6.633395,5.637364,-8.902964,7.103318,-1.887175,-9.837126,-1.064199,2.604523,8.717208,0.588153,-1.795929,9.681842,-2.715686,9.314046,-5.969093,5.744585,-9.441259,4.991537,9.488440,4.568870,-9.233682,-9.269395,-1.330240,-2.301960,-0.021846,-0.059365,6.503792,-0.245872,-8.568278,6.583343,-4.291909,-7.142746,-1.353953,8.624497,-3.625108,5.605683,-4.232757,-5.623310,0.952350,-4.239627,-6.826674,4.940951,3.757357,5.923335,3.410409,-2.313850,-4.949732,-8.224812,-9.519150,-7.614391,-7.442355,-2.357245,6.804998,-2.970652,5.501177,-1.982972,0.984914,8.795147,8.963270,-6.673133,-7.019655,-9.583853,-6.338352,5.626793,-8.776228,7.531314,3.155633,9.356196,-6.902808,-0.920667,4.329406,1.130205,-6.356825,9.968041,-4.740292,-8.039538,-6.359349,0.829043,-1.411135,7.476079,-1.734124,4.827109,-9.439983,-0.124482,-3.948115,-4.948655,5.720947,-8.388932,2.342853,9.357753,-6.564522,-4.454371,9.654583,1.167759,-0.949406,-1.289431,4.506890,-7.770637,5.599085,7.515875,3.408522,8.522149,7.232457,-7.487289,1.864100,-2.131815,-8.614613,-7.652335,-8.171140,6.865635,-1.664882,1.836121,1.544773,-1.020605,-8.507229,6.916285,9.846305,-6.190296,-2.205508,3.252377,8.552907,9.395769,-0.602000,3.176219,8.877475,5.380565,-4.162678,-0.434199,0.829567,-3.112240,-6.998398,4.401698,-0.919680,-9.532445,2.092140,-3.070116,-6.099989,-4.193456,9.637988,2.263883,-8.566099,3.462899,-3.994130,-4.734638,-7.730046,1.103689,-5.455626,-8.743201,7.606068,-5.211478,8.402787,7.958529,-6.293271,-5.305433,3.238215,3.028346,0.782921,-0.378791,-2.485497,5.022116,-2.667165,1.937407,3.166837,5.583309,-3.655929,4.267038,3.933971,1.795649,-6.995472,8.411712,-9.344931,2.401910,2.609383,3.345187,8.274868,-4.284486,2.186429,-4.571970,-7.961694,9.643955,8.753502,-9.664697,2.572502,6.240764,0.088407,2.603129,9.557139,5.419446,3.550562,-6.716138,5.562994,-1.195680,-1.379787,-9.791410,-4.344410,3.366871,-6.534624,-7.353042,-4.517036,-7.486506,0.969309,4.652317,-6.440151,6.099947,4.914435,-9.118365,1.812715,1.318289,-9.954103,-9.861371,-4.419738,-2.907611,8.704310,-7.229213,-0.918235,8.819411,0.703769,-6.424818,-6.498043,4.422311,1.621597,-6.747432,-8.544217,-8.264808,0.601114,6.609342,2.066511,8.356352,6.642298,-7.262183,-9.001900,7.119396,-6.088392,9.577667,5.566358,-9.311954,5.638599,2.602848,-1.681135,-6.357984,-0.939380,7.136080,6.828018,-5.812281,3.432187,9.059172,2.855206,7.258314,-4.628724,-3.426407,5.949948,6.947986,5.007686,-9.455564,-6.509163,-1.310128,-7.254926,-2.961194,-8.173715,-6.116975,7.208105,0.747420,-9.710899,-2.265935,4.086595,9.188899,8.445602,4.135179,2.290507,7.426587,-7.717785,1.552123,1.852773,5.029477,-4.176017,0.888027,2.026413,-6.797566,8.253158,-5.352360,4.192667,6.531052,-8.805242,-1.975021,-0.705716,-2.914214,3.080568,-0.171466,2.411742,-0.335308,4.477345,-8.300507,-5.671353,2.817144,2.239355,-2.471275,8.823103,-1.535416,2.960521,2.698916,-4.669285,-9.749918,2.652039,-0.423591,-7.697609,8.090259,4.775116,-3.733320,-2.729123,6.560712,-0.213087,9.307773,-1.165165,7.363240,-7.354333,4.668307,-3.381329,-4.664479,-3.175169,8.385741,5.399890,6.919573,-8.350459,-9.733546,6.178133,-5.623882,5.071009,1.735670,2.491345,7.807218,7.473953,-6.444447,3.228995,-4.451877,-5.919729,-0.895650,-8.780407,-8.213106,-6.420992,3.053989,-3.829727,6.116238,7.783426,6.113566,2.874255,-5.225320,-9.194024,9.190409,4.099202,7.521704,4.250093,0.660720,1.527352,-5.417631,-3.586247,5.901021,5.737076,9.894632,4.885346,-7.939486,7.149138,-6.259569,1.984383,6.746802,0.810903,-1.491974,7.717230,-3.837368,6.334376,-2.447710,-2.486187,4.499269,-4.518581,6.733286,4.311163,-9.585558,-2.622766,-8.341897,-3.559137,6.485543,6.697793,-4.857056,2.013721,7.786435,4.668929,2.649240,-6.619178,-2.019996,2.616094,-0.685462,7.076677,4.398170,7.992253,5.093618,-3.612831,9.894564,8.526289,-1.184512,-3.164363,2.938600,6.248537,-9.628432,4.593490,-3.966548,-4.487132,-0.028983,0.170834,5.946396,3.700085,8.094615,3.830896,7.451539,-4.032326,-7.224574,-0.302009,5.323187,-5.465576,4.246364,-7.571113,-4.221970,-6.394471,-9.003374,-1.581875,6.997841,-8.482901,9.339423,9.919775,-9.189410,-1.232892,8.505797,3.146218,-5.676080,-5.492889,5.022441,1.459283,6.730507,-7.937370,-4.470826,7.373358,5.211935,-6.841701,-4.944863,4.552371,7.254997,6.243833,-0.012243,6.057986,-4.378931,-4.450951,-1.493488,8.803257,-2.919538,4.519208,-4.400596,-8.962592,8.318636,1.273137,-7.473188,-7.880577,-2.844290,-3.634764,-2.455128,-5.372428,1.375163,7.928348,-1.941252,3.473628,-1.474688,1.495450,-2.080607,-0.578039,-3.044153,0.533573,1.906573,5.879832,5.317180,-3.663778,7.539306,-2.827176,-7.308930,2.848916,-6.362630,1.652438,6.640687,6.352973,-1.401986,5.821103,9.628321,0.245977,7.099150,8.361155,4.069944,-5.595382,-3.585349,4.403103,-4.360671,2.155602,-2.706402,-3.152330,-5.996227,4.645919,2.702278,6.423935,1.358038,6.316589,4.096133,3.691378,2.826648,-9.200296,-5.718920,-7.951501,-2.195186,5.104197,-8.548594,-9.787811,0.267175,6.502057,0.870720,-9.780663,7.419282,1.511874,-5.043671,0.962572,-5.278106,2.329018,-6.311863,-4.130322,6.984385,2.128849,7.858201,-9.236990,1.614586,7.299603,2.274051,1.787499,-6.922655,0.747578,6.835861,-4.425278,-7.023506,-4.242172,7.012056,3.695900,-8.291583,-0.787778,2.810567,-8.938287,-8.571001,1.197336,2.502153,-8.333975,1.352235,-4.921364,3.828995,-4.464622,-7.544743,-1.067815,6.882145,8.567827,-9.577482,9.809449,-9.700186,-5.345068,-0.463795,-1.222987,-9.284176,5.041387,2.589038,-8.460902,-7.606127,-2.432144,8.803144,-3.694598,0.194643,-2.223735,3.348819,4.625286,4.343287,-7.510048,4.492415,-4.700691,7.415741,3.459628,6.875680,8.499033,-2.893580,0.488860,-1.494832,7.695651,2.768256,8.264236,0.774854,-6.904443,-0.514848,-5.547764,-1.111141,6.582281,-9.160100,-1.919864,-6.840857,6.018473,1.067973,-3.881806,-1.775536,1.451421,4.959900,-2.519464,0.716138,-8.280189,7.259334,0.958860,6.691787,-8.082167,7.036456,9.500243,-7.163426,2.037788,7.576364,-5.108557,9.201854,7.100865,-3.143623,4.505573,4.963260,-0.850938,3.219672,-0.556923,-8.156470,-2.698782,1.534452,-9.554252,8.992523,5.983742,8.348612,-3.079169,-4.368057,-5.734363,-0.761432,-2.400348,4.744702,-7.472666,3.776329,8.323427,5.106109,3.858323,3.871870,3.895164,9.916246,-6.591576,-6.403306,6.064150,-1.288100,7.453680,-4.517512,-4.916081,-2.324779,-1.882886,4.068498,-4.890398,6.180709,4.049028,8.813308,6.242736,-3.130272,7.718831,3.132557,5.109905,-2.661643,-0.600005,-4.869081,-0.909677,1.787741,-3.933434,-1.279655,-0.976969,3.323263,2.954613,-6.084847,1.091406,-5.064716,8.797628,-5.630936,0.235975,0.642752,9.695771,0.951920,4.434246,-7.475294,4.325709,-3.663529,-8.507599]], dtype = "float32")#candidate|2453|(1, 2520)|const|float32
call_2452 = relay.TupleGetItem(func_1033_call(relay.reshape(const_2453.astype('float32'), [2520,])), 1)
call_2454 = relay.TupleGetItem(func_1036_call(relay.reshape(const_2453.astype('float32'), [2520,])), 1)
output = relay.Tuple([call_2450,call_2452,const_2453,])
output2 = relay.Tuple([call_2451,call_2454,const_2453,])
func_2459 = relay.Function([], output)
mod['func_2459'] = func_2459
mod = relay.transform.InferType()(mod)
output = func_2459()
func_2460 = relay.Function([], output)
mutated_mod['func_2460'] = func_2460
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1747_call = mod.get_global_var('func_1747')
func_1748_call = mutated_mod.get_global_var('func_1748')
call_2557 = relay.TupleGetItem(func_1747_call(), 1)
call_2558 = relay.TupleGetItem(func_1748_call(), 1)
output = relay.Tuple([call_2557,])
output2 = relay.Tuple([call_2558,])
func_2565 = relay.Function([], output)
mod['func_2565'] = func_2565
mod = relay.transform.InferType()(mod)
mutated_mod['func_2565'] = func_2565
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2565_call = mutated_mod.get_global_var('func_2565')
call_2566 = func_2565_call()
output = call_2566
func_2567 = relay.Function([], output)
mutated_mod['func_2567'] = func_2567
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2337_call = mod.get_global_var('func_2337')
func_2339_call = mutated_mod.get_global_var('func_2339')
call_2598 = relay.TupleGetItem(func_2337_call(), 0)
call_2599 = relay.TupleGetItem(func_2339_call(), 0)
output = relay.Tuple([call_2598,])
output2 = relay.Tuple([call_2599,])
func_2602 = relay.Function([], output)
mod['func_2602'] = func_2602
mod = relay.transform.InferType()(mod)
mutated_mod['func_2602'] = func_2602
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2602_call = mutated_mod.get_global_var('func_2602')
call_2603 = func_2602_call()
output = call_2603
func_2604 = relay.Function([], output)
mutated_mod['func_2604'] = func_2604
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1544_call = mod.get_global_var('func_1544')
func_1546_call = mutated_mod.get_global_var('func_1546')
call_2613 = func_1544_call()
call_2614 = func_1544_call()
func_265_call = mod.get_global_var('func_265')
func_267_call = mutated_mod.get_global_var('func_267')
call_2630 = func_265_call()
call_2631 = func_265_call()
func_1296_call = mod.get_global_var('func_1296')
func_1298_call = mutated_mod.get_global_var('func_1298')
call_2637 = relay.TupleGetItem(func_1296_call(), 0)
call_2638 = relay.TupleGetItem(func_1298_call(), 0)
var_2639 = relay.var("var_2639", dtype = "bool", shape = (14, 11, 12))#candidate|2639|(14, 11, 12)|var|bool
bop_2640 = relay.maximum(call_2637.astype('uint64'), var_2639.astype('uint64')) # shape=(14, 11, 12)
bop_2643 = relay.maximum(call_2638.astype('uint64'), var_2639.astype('uint64')) # shape=(14, 11, 12)
func_969_call = mod.get_global_var('func_969')
func_972_call = mutated_mod.get_global_var('func_972')
const_2651 = relay.const([1.722913,0.469041,0.256042,-8.272372,-6.057354,-5.012705,0.786005,8.116748,-0.143062,-1.470552,-5.396712,5.147599,-9.080905,-7.802800,-6.831676,0.612723,0.939443,-6.826014,-6.777553,-8.939041,-3.490814,-4.474717,-5.169096,-7.598016,-1.849253,-7.078672,-1.070505,7.654231,6.301840,9.123213,-1.477575,9.536088,4.066270,-3.912274,-2.927319,-0.529224,7.040978,-2.111713,-4.844233,9.213355,9.453913,1.398268,9.597413,-1.718649,-9.169533,-7.538609,-6.347022,6.895210,4.481664,3.050418,-1.767361,-9.818687,-1.609280,-7.062658,-1.253134,-1.340758,5.759361,8.726343,-0.185251,4.314378,3.480060,7.751246,2.989229,-2.849527,8.943930,-8.183957,9.485226,7.399326,-9.835824,5.419958,4.864154,-8.397556,4.825384,7.963162,-1.575534,6.121482,-9.881307,4.040844,2.160060,9.858302,-0.966704,-9.423535,-4.598065,7.574420,2.776427,1.819833,-4.136754,-6.510264,-2.497598,-4.883031,-9.114074,-5.187674,-5.568711,5.835214,1.449623,-1.701928,-8.334332,-4.833238,0.754395,9.006415,-5.872887,1.369757,9.988771,-0.812698,-1.362348,-7.087887,-3.683983,4.605644,-3.408346,-4.561726,0.716262,7.700436,-2.326861,1.207556,-3.123830,-2.388512,0.957762,1.221495,0.584704,-7.255615,-7.641970,2.010051,-5.672370,-0.409545,3.504744,-5.076660,8.603613,-3.752663,4.354803,2.811130,8.254131,-6.998086,-9.418485,1.020712,-4.985125,6.709968,-4.430264,0.154958,7.416302,3.030079,1.349283,-5.709917,-2.410419,-2.498489,-4.762323,9.699016,0.768545,-0.701460,6.903524,-4.841036,-5.090877,0.773492,-3.357596,4.957230,-5.560350,-8.916340,-0.084966,-9.608177,4.631999,0.816380,7.144605,1.822385,-7.433062,-6.558876,0.107954,1.660591,-7.730816,-3.587400,-4.815877,-3.374605,0.355319,-6.207444,3.502950,-5.474528,8.561896,-8.239250,-6.940191,0.683017,-5.264789,-4.656708,-2.037572,5.978462,-3.736876,3.741916,1.051962,0.216375,-6.387758,-7.884421,2.834072,0.151461,-9.440442,9.866007,2.519215,-0.641955,-4.066989,-5.761111,-6.733287,2.467379,3.655283,1.745625,-8.353919,5.897837,-2.069613,2.767483,-3.778073,-9.130275,-6.443868,5.849218,9.409462,1.681247,9.438246,-3.414493,4.415977,-3.461284,6.155512,0.500197,0.763807,-4.251174,1.824720,6.020876,-6.573035,-9.492081,9.602264,5.630626,7.193657,-8.260545,-8.347557,1.422593,-2.938813,-7.955076,3.837205,0.785073,2.903686,0.654477,7.530147,-5.488310,-3.603393,6.834209,9.597271,-5.884713,9.556855,0.336359,-0.174412,-1.283049,-4.300044,-9.819598,-0.467236,-5.203880,9.187002,-3.652853,-1.994778,7.376034,-9.538816,-6.120263,9.511300,-9.020149,9.208846,-8.296402,-5.383873,-5.934684,0.725724,7.896738,7.657005,3.123453,6.053704,3.072970,5.763476,-2.133097,1.456710,7.885200,-8.822424,-4.790400,0.924703,8.970307,2.658017,-9.881960,-7.773775,-4.560930,-1.904076,-9.873051,-2.993101,9.893383,-9.060073,2.045363,3.694515,-4.090054,-9.861691,2.296852,2.442183,-4.494697,3.591084,-4.268910,-9.025864,0.394067,-3.571838,-9.003276,3.123921,-0.368889,4.256788,-3.025789,-8.381442,-7.259936,1.000040,-1.905063,-9.753768,9.171260,-7.138127,2.423250], dtype = "float32")#candidate|2651|(308,)|const|float32
call_2650 = relay.TupleGetItem(func_969_call(relay.reshape(const_2651.astype('float32'), [154, 2])), 2)
call_2652 = relay.TupleGetItem(func_972_call(relay.reshape(const_2651.astype('float32'), [154, 2])), 2)
output = relay.Tuple([call_2613,call_2630,bop_2640,call_2650,const_2651,])
output2 = relay.Tuple([call_2614,call_2631,bop_2643,call_2652,const_2651,])
func_2653 = relay.Function([var_2639,], output)
mod['func_2653'] = func_2653
mod = relay.transform.InferType()(mod)
mutated_mod['func_2653'] = func_2653
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2654 = relay.var("var_2654", dtype = "bool", shape = (14, 11, 12))#candidate|2654|(14, 11, 12)|var|bool
func_2653_call = mutated_mod.get_global_var('func_2653')
call_2655 = func_2653_call(var_2654)
output = call_2655
func_2656 = relay.Function([var_2654], output)
mutated_mod['func_2656'] = func_2656
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1079_call = mod.get_global_var('func_1079')
func_1081_call = mutated_mod.get_global_var('func_1081')
call_2663 = func_1079_call()
call_2664 = func_1079_call()
output = relay.Tuple([call_2663,])
output2 = relay.Tuple([call_2664,])
func_2674 = relay.Function([], output)
mod['func_2674'] = func_2674
mod = relay.transform.InferType()(mod)
mutated_mod['func_2674'] = func_2674
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2674_call = mutated_mod.get_global_var('func_2674')
call_2675 = func_2674_call()
output = call_2675
func_2676 = relay.Function([], output)
mutated_mod['func_2676'] = func_2676
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1107_call = mod.get_global_var('func_1107')
func_1109_call = mutated_mod.get_global_var('func_1109')
call_2680 = func_1107_call()
call_2681 = func_1107_call()
output = relay.Tuple([call_2680,])
output2 = relay.Tuple([call_2681,])
func_2684 = relay.Function([], output)
mod['func_2684'] = func_2684
mod = relay.transform.InferType()(mod)
output = func_2684()
func_2685 = relay.Function([], output)
mutated_mod['func_2685'] = func_2685
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1747_call = mod.get_global_var('func_1747')
func_1748_call = mutated_mod.get_global_var('func_1748')
call_2753 = relay.TupleGetItem(func_1747_call(), 0)
call_2754 = relay.TupleGetItem(func_1748_call(), 0)
output = relay.Tuple([call_2753,])
output2 = relay.Tuple([call_2754,])
func_2767 = relay.Function([], output)
mod['func_2767'] = func_2767
mod = relay.transform.InferType()(mod)
output = func_2767()
func_2768 = relay.Function([], output)
mutated_mod['func_2768'] = func_2768
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1186_call = mod.get_global_var('func_1186')
func_1187_call = mutated_mod.get_global_var('func_1187')
call_2774 = func_1186_call()
call_2775 = func_1186_call()
func_2674_call = mod.get_global_var('func_2674')
func_2676_call = mutated_mod.get_global_var('func_2676')
call_2778 = relay.TupleGetItem(func_2674_call(), 0)
call_2779 = relay.TupleGetItem(func_2676_call(), 0)
output = relay.Tuple([call_2774,call_2778,])
output2 = relay.Tuple([call_2775,call_2779,])
func_2788 = relay.Function([], output)
mod['func_2788'] = func_2788
mod = relay.transform.InferType()(mod)
output = func_2788()
func_2789 = relay.Function([], output)
mutated_mod['func_2789'] = func_2789
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2837 = relay.var("var_2837", dtype = "float32", shape = (11, 5, 12))#candidate|2837|(11, 5, 12)|var|float32
var_2838 = relay.var("var_2838", dtype = "float32", shape = (11, 5, 12))#candidate|2838|(11, 5, 12)|var|float32
bop_2839 = relay.floor_divide(var_2837.astype('float32'), relay.reshape(var_2838.astype('float32'), relay.shape_of(var_2837))) # shape=(11, 5, 12)
output = relay.Tuple([bop_2839,])
output2 = relay.Tuple([bop_2839,])
func_2857 = relay.Function([var_2837,var_2838,], output)
mod['func_2857'] = func_2857
mod = relay.transform.InferType()(mod)
var_2858 = relay.var("var_2858", dtype = "float32", shape = (11, 5, 12))#candidate|2858|(11, 5, 12)|var|float32
var_2859 = relay.var("var_2859", dtype = "float32", shape = (11, 5, 12))#candidate|2859|(11, 5, 12)|var|float32
output = func_2857(var_2858,var_2859,)
func_2860 = relay.Function([var_2858,var_2859,], output)
mutated_mod['func_2860'] = func_2860
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1672_call = mod.get_global_var('func_1672')
func_1673_call = mutated_mod.get_global_var('func_1673')
call_2883 = relay.TupleGetItem(func_1672_call(), 3)
call_2884 = relay.TupleGetItem(func_1673_call(), 3)
uop_2885 = relay.log2(call_2883.astype('float32')) # shape=(2520,)
uop_2887 = relay.log2(call_2884.astype('float32')) # shape=(2520,)
output = relay.Tuple([uop_2885,])
output2 = relay.Tuple([uop_2887,])
func_2890 = relay.Function([], output)
mod['func_2890'] = func_2890
mod = relay.transform.InferType()(mod)
mutated_mod['func_2890'] = func_2890
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2890_call = mutated_mod.get_global_var('func_2890')
call_2891 = func_2890_call()
output = call_2891
func_2892 = relay.Function([], output)
mutated_mod['func_2892'] = func_2892
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2904 = relay.var("var_2904", dtype = "float64", shape = (7, 16, 7))#candidate|2904|(7, 16, 7)|var|float64
uop_2905 = relay.cosh(var_2904.astype('float64')) # shape=(7, 16, 7)
func_59_call = mod.get_global_var('func_59')
func_60_call = mutated_mod.get_global_var('func_60')
call_2914 = relay.TupleGetItem(func_59_call(), 0)
call_2915 = relay.TupleGetItem(func_60_call(), 0)
func_2788_call = mod.get_global_var('func_2788')
func_2789_call = mutated_mod.get_global_var('func_2789')
call_2918 = relay.TupleGetItem(func_2788_call(), 1)
call_2919 = relay.TupleGetItem(func_2789_call(), 1)
output = relay.Tuple([uop_2905,call_2914,call_2918,])
output2 = relay.Tuple([uop_2905,call_2915,call_2919,])
func_2924 = relay.Function([var_2904,], output)
mod['func_2924'] = func_2924
mod = relay.transform.InferType()(mod)
mutated_mod['func_2924'] = func_2924
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2925 = relay.var("var_2925", dtype = "float64", shape = (7, 16, 7))#candidate|2925|(7, 16, 7)|var|float64
func_2924_call = mutated_mod.get_global_var('func_2924')
call_2926 = func_2924_call(var_2925)
output = call_2926
func_2927 = relay.Function([var_2925], output)
mutated_mod['func_2927'] = func_2927
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2957 = relay.const([[[5,-10],[3,2],[-6,10],[-6,8],[-6,8],[-5,-9],[-8,1],[-6,7],[-2,8],[9,-7],[1,-10]],[[-4,9],[-1,3],[7,6],[5,-5],[10,-2],[9,8],[-10,-4],[-2,9],[5,8],[-5,1],[-3,9]],[[2,-8],[-6,-5],[-2,4],[1,2],[2,-1],[-7,2],[-10,-6],[-10,10],[9,-6],[-10,-9],[-7,-4]],[[-2,-2],[-6,-3],[2,9],[-8,4],[9,2],[3,2],[-3,6],[5,8],[4,2],[-5,-7],[10,-8]],[[10,-8],[5,7],[-2,-1],[-4,-4],[-5,-6],[4,-3],[5,-5],[-5,-5],[4,-3],[7,-9],[3,-3]],[[7,5],[2,4],[-3,7],[6,-5],[5,-5],[-5,-8],[-2,-9],[-8,-1],[-10,8],[-10,-9],[9,1]],[[8,-6],[5,-1],[-4,1],[7,1],[2,10],[-10,7],[-3,1],[2,7],[7,4],[7,-2],[-6,6]],[[-3,-1],[-1,-1],[1,9],[4,-6],[-5,10],[-8,-3],[2,7],[8,-3],[2,-10],[-5,4],[-10,-10]],[[6,-3],[-8,-2],[-9,-3],[-2,-1],[6,5],[-10,-1],[-7,2],[7,-2],[-9,3],[-9,-6],[-1,9]],[[1,-8],[-6,3],[10,-4],[8,-6],[10,-9],[4,6],[8,-2],[-3,6],[3,-1],[7,-6],[7,-5]],[[5,-1],[9,4],[3,-9],[-2,-1],[3,8],[-1,6],[2,-6],[1,-5],[3,3],[-7,9],[5,-10]],[[10,3],[-9,9],[2,10],[9,-5],[9,9],[8,-6],[-7,5],[-5,-10],[-8,-8],[5,-7],[-5,9]],[[2,4],[-5,-5],[-5,8],[-8,-3],[-1,7],[7,6],[-7,9],[9,5],[3,5],[4,-1],[-3,-10]]], dtype = "int32")#candidate|2957|(13, 11, 2)|const|int32
var_2958 = relay.var("var_2958", dtype = "int32", shape = (13, 11, 2))#candidate|2958|(13, 11, 2)|var|int32
bop_2959 = relay.less_equal(const_2957.astype('bool'), relay.reshape(var_2958.astype('bool'), relay.shape_of(const_2957))) # shape=(13, 11, 2)
uop_2971 = relay.asin(const_2957.astype('float32')) # shape=(13, 11, 2)
output = relay.Tuple([bop_2959,uop_2971,])
output2 = relay.Tuple([bop_2959,uop_2971,])
func_2983 = relay.Function([var_2958,], output)
mod['func_2983'] = func_2983
mod = relay.transform.InferType()(mod)
mutated_mod['func_2983'] = func_2983
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2984 = relay.var("var_2984", dtype = "int32", shape = (13, 11, 2))#candidate|2984|(13, 11, 2)|var|int32
func_2983_call = mutated_mod.get_global_var('func_2983')
call_2985 = func_2983_call(var_2984)
output = call_2985
func_2986 = relay.Function([var_2984], output)
mutated_mod['func_2986'] = func_2986
mutated_mod = relay.transform.InferType()(mutated_mod)
func_735_call = mod.get_global_var('func_735')
func_736_call = mutated_mod.get_global_var('func_736')
call_3001 = relay.TupleGetItem(func_735_call(), 0)
call_3002 = relay.TupleGetItem(func_736_call(), 0)
func_2857_call = mod.get_global_var('func_2857')
func_2860_call = mutated_mod.get_global_var('func_2860')
var_3012 = relay.var("var_3012", dtype = "float32", shape = (5, 132))#candidate|3012|(5, 132)|var|float32
call_3011 = relay.TupleGetItem(func_2857_call(relay.reshape(var_3012.astype('float32'), [11, 5, 12]), relay.reshape(var_3012.astype('float32'), [11, 5, 12]), ), 0)
call_3013 = relay.TupleGetItem(func_2860_call(relay.reshape(var_3012.astype('float32'), [11, 5, 12]), relay.reshape(var_3012.astype('float32'), [11, 5, 12]), ), 0)
output = relay.Tuple([call_3001,call_3011,var_3012,])
output2 = relay.Tuple([call_3002,call_3013,var_3012,])
func_3014 = relay.Function([var_3012,], output)
mod['func_3014'] = func_3014
mod = relay.transform.InferType()(mod)
mutated_mod['func_3014'] = func_3014
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3015 = relay.var("var_3015", dtype = "float32", shape = (5, 132))#candidate|3015|(5, 132)|var|float32
func_3014_call = mutated_mod.get_global_var('func_3014')
call_3016 = func_3014_call(var_3015)
output = call_3016
func_3017 = relay.Function([var_3015], output)
mutated_mod['func_3017'] = func_3017
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2329_call = mod.get_global_var('func_2329')
func_2330_call = mutated_mod.get_global_var('func_2330')
call_3041 = relay.TupleGetItem(func_2329_call(), 3)
call_3042 = relay.TupleGetItem(func_2330_call(), 3)
func_1954_call = mod.get_global_var('func_1954')
func_1955_call = mutated_mod.get_global_var('func_1955')
call_3069 = relay.TupleGetItem(func_1954_call(), 0)
call_3070 = relay.TupleGetItem(func_1955_call(), 0)
output = relay.Tuple([call_3041,call_3069,])
output2 = relay.Tuple([call_3042,call_3070,])
func_3076 = relay.Function([], output)
mod['func_3076'] = func_3076
mod = relay.transform.InferType()(mod)
output = func_3076()
func_3077 = relay.Function([], output)
mutated_mod['func_3077'] = func_3077
mutated_mod = relay.transform.InferType()(mutated_mod)
func_99_call = mod.get_global_var('func_99')
func_101_call = mutated_mod.get_global_var('func_101')
call_3085 = func_99_call()
call_3086 = func_99_call()
output = relay.Tuple([call_3085,])
output2 = relay.Tuple([call_3086,])
func_3094 = relay.Function([], output)
mod['func_3094'] = func_3094
mod = relay.transform.InferType()(mod)
mutated_mod['func_3094'] = func_3094
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3094_call = mutated_mod.get_global_var('func_3094')
call_3095 = func_3094_call()
output = call_3095
func_3096 = relay.Function([], output)
mutated_mod['func_3096'] = func_3096
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3109 = relay.var("var_3109", dtype = "float32", shape = (2, 14, 14))#candidate|3109|(2, 14, 14)|var|float32
uop_3110 = relay.acosh(var_3109.astype('float32')) # shape=(2, 14, 14)
output = relay.Tuple([uop_3110,])
output2 = relay.Tuple([uop_3110,])
func_3113 = relay.Function([var_3109,], output)
mod['func_3113'] = func_3113
mod = relay.transform.InferType()(mod)
mutated_mod['func_3113'] = func_3113
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3114 = relay.var("var_3114", dtype = "float32", shape = (2, 14, 14))#candidate|3114|(2, 14, 14)|var|float32
func_3113_call = mutated_mod.get_global_var('func_3113')
call_3115 = func_3113_call(var_3114)
output = call_3115
func_3116 = relay.Function([var_3114], output)
mutated_mod['func_3116'] = func_3116
mutated_mod = relay.transform.InferType()(mutated_mod)
func_852_call = mod.get_global_var('func_852')
func_853_call = mutated_mod.get_global_var('func_853')
call_3168 = relay.TupleGetItem(func_852_call(), 1)
call_3169 = relay.TupleGetItem(func_853_call(), 1)
func_1146_call = mod.get_global_var('func_1146')
func_1147_call = mutated_mod.get_global_var('func_1147')
call_3181 = relay.TupleGetItem(func_1146_call(), 0)
call_3182 = relay.TupleGetItem(func_1147_call(), 0)
func_2602_call = mod.get_global_var('func_2602')
func_2604_call = mutated_mod.get_global_var('func_2604')
call_3191 = relay.TupleGetItem(func_2602_call(), 0)
call_3192 = relay.TupleGetItem(func_2604_call(), 0)
output = relay.Tuple([call_3168,call_3181,call_3191,])
output2 = relay.Tuple([call_3169,call_3182,call_3192,])
func_3202 = relay.Function([], output)
mod['func_3202'] = func_3202
mod = relay.transform.InferType()(mod)
output = func_3202()
func_3203 = relay.Function([], output)
mutated_mod['func_3203'] = func_3203
mutated_mod = relay.transform.InferType()(mutated_mod)
func_852_call = mod.get_global_var('func_852')
func_853_call = mutated_mod.get_global_var('func_853')
call_3204 = relay.TupleGetItem(func_852_call(), 0)
call_3205 = relay.TupleGetItem(func_853_call(), 0)
func_1747_call = mod.get_global_var('func_1747')
func_1748_call = mutated_mod.get_global_var('func_1748')
call_3207 = relay.TupleGetItem(func_1747_call(), 0)
call_3208 = relay.TupleGetItem(func_1748_call(), 0)
output = relay.Tuple([call_3204,call_3207,])
output2 = relay.Tuple([call_3205,call_3208,])
func_3213 = relay.Function([], output)
mod['func_3213'] = func_3213
mod = relay.transform.InferType()(mod)
output = func_3213()
func_3214 = relay.Function([], output)
mutated_mod['func_3214'] = func_3214
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3303 = relay.var("var_3303", dtype = "float64", shape = ())#candidate|3303|()|var|float64
var_3304 = relay.var("var_3304", dtype = "float64", shape = (2, 2, 4))#candidate|3304|(2, 2, 4)|var|float64
bop_3305 = relay.floor_mod(var_3303.astype('float64'), var_3304.astype('float64')) # shape=(2, 2, 4)
func_852_call = mod.get_global_var('func_852')
func_853_call = mutated_mod.get_global_var('func_853')
call_3308 = relay.TupleGetItem(func_852_call(), 2)
call_3309 = relay.TupleGetItem(func_853_call(), 2)
output = relay.Tuple([bop_3305,call_3308,])
output2 = relay.Tuple([bop_3305,call_3309,])
func_3312 = relay.Function([var_3303,var_3304,], output)
mod['func_3312'] = func_3312
mod = relay.transform.InferType()(mod)
var_3313 = relay.var("var_3313", dtype = "float64", shape = ())#candidate|3313|()|var|float64
var_3314 = relay.var("var_3314", dtype = "float64", shape = (2, 2, 4))#candidate|3314|(2, 2, 4)|var|float64
output = func_3312(var_3313,var_3314,)
func_3315 = relay.Function([var_3313,var_3314,], output)
mutated_mod['func_3315'] = func_3315
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3213_call = mod.get_global_var('func_3213')
func_3214_call = mutated_mod.get_global_var('func_3214')
call_3319 = relay.TupleGetItem(func_3213_call(), 1)
call_3320 = relay.TupleGetItem(func_3214_call(), 1)
func_2337_call = mod.get_global_var('func_2337')
func_2339_call = mutated_mod.get_global_var('func_2339')
call_3336 = relay.TupleGetItem(func_2337_call(), 0)
call_3337 = relay.TupleGetItem(func_2339_call(), 0)
output = relay.Tuple([call_3319,call_3336,])
output2 = relay.Tuple([call_3320,call_3337,])
func_3343 = relay.Function([], output)
mod['func_3343'] = func_3343
mod = relay.transform.InferType()(mod)
mutated_mod['func_3343'] = func_3343
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3343_call = mutated_mod.get_global_var('func_3343')
call_3344 = func_3343_call()
output = call_3344
func_3345 = relay.Function([], output)
mutated_mod['func_3345'] = func_3345
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2684_call = mod.get_global_var('func_2684')
func_2685_call = mutated_mod.get_global_var('func_2685')
call_3372 = relay.TupleGetItem(func_2684_call(), 0)
call_3373 = relay.TupleGetItem(func_2685_call(), 0)
output = relay.Tuple([call_3372,])
output2 = relay.Tuple([call_3373,])
func_3381 = relay.Function([], output)
mod['func_3381'] = func_3381
mod = relay.transform.InferType()(mod)
output = func_3381()
func_3382 = relay.Function([], output)
mutated_mod['func_3382'] = func_3382
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1954_call = mod.get_global_var('func_1954')
func_1955_call = mutated_mod.get_global_var('func_1955')
call_3417 = relay.TupleGetItem(func_1954_call(), 0)
call_3418 = relay.TupleGetItem(func_1955_call(), 0)
output = relay.Tuple([call_3417,])
output2 = relay.Tuple([call_3418,])
func_3426 = relay.Function([], output)
mod['func_3426'] = func_3426
mod = relay.transform.InferType()(mod)
mutated_mod['func_3426'] = func_3426
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3426_call = mutated_mod.get_global_var('func_3426')
call_3427 = func_3426_call()
output = call_3427
func_3428 = relay.Function([], output)
mutated_mod['func_3428'] = func_3428
mutated_mod = relay.transform.InferType()(mutated_mod)
func_892_call = mod.get_global_var('func_892')
func_893_call = mutated_mod.get_global_var('func_893')
call_3440 = relay.TupleGetItem(func_892_call(), 0)
call_3441 = relay.TupleGetItem(func_893_call(), 0)
output = call_3440
output2 = call_3441
func_3446 = relay.Function([], output)
mod['func_3446'] = func_3446
mod = relay.transform.InferType()(mod)
mutated_mod['func_3446'] = func_3446
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3446_call = mutated_mod.get_global_var('func_3446')
call_3447 = func_3446_call()
output = call_3447
func_3448 = relay.Function([], output)
mutated_mod['func_3448'] = func_3448
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1672_call = mod.get_global_var('func_1672')
func_1673_call = mutated_mod.get_global_var('func_1673')
call_3533 = relay.TupleGetItem(func_1672_call(), 1)
call_3534 = relay.TupleGetItem(func_1673_call(), 1)
output = relay.Tuple([call_3533,])
output2 = relay.Tuple([call_3534,])
func_3540 = relay.Function([], output)
mod['func_3540'] = func_3540
mod = relay.transform.InferType()(mod)
mutated_mod['func_3540'] = func_3540
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3540_call = mutated_mod.get_global_var('func_3540')
call_3541 = func_3540_call()
output = call_3541
func_3542 = relay.Function([], output)
mutated_mod['func_3542'] = func_3542
mutated_mod = relay.transform.InferType()(mutated_mod)
func_99_call = mod.get_global_var('func_99')
func_101_call = mutated_mod.get_global_var('func_101')
call_3635 = func_99_call()
call_3636 = func_99_call()
var_3649 = relay.var("var_3649", dtype = "float32", shape = (14, 16, 12))#candidate|3649|(14, 16, 12)|var|float32
bop_3650 = relay.subtract(call_3635.astype('uint8'), var_3649.astype('uint8')) # shape=(14, 16, 12)
bop_3653 = relay.subtract(call_3636.astype('uint8'), var_3649.astype('uint8')) # shape=(14, 16, 12)
output = bop_3650
output2 = bop_3653
func_3665 = relay.Function([var_3649,], output)
mod['func_3665'] = func_3665
mod = relay.transform.InferType()(mod)
mutated_mod['func_3665'] = func_3665
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3666 = relay.var("var_3666", dtype = "float32", shape = (14, 16, 12))#candidate|3666|(14, 16, 12)|var|float32
func_3665_call = mutated_mod.get_global_var('func_3665')
call_3667 = func_3665_call(var_3666)
output = call_3667
func_3668 = relay.Function([var_3666], output)
mutated_mod['func_3668'] = func_3668
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2684_call = mod.get_global_var('func_2684')
func_2685_call = mutated_mod.get_global_var('func_2685')
call_3694 = relay.TupleGetItem(func_2684_call(), 0)
call_3695 = relay.TupleGetItem(func_2685_call(), 0)
func_1079_call = mod.get_global_var('func_1079')
func_1081_call = mutated_mod.get_global_var('func_1081')
call_3696 = func_1079_call()
call_3697 = func_1079_call()
const_3700 = relay.const([[[False,False,False,False,False,True,False,True,False,False,False,False],[True,False,True,True,False,True,True,False,True,False,True,False],[False,False,False,False,False,True,False,False,True,False,False,False],[True,False,True,False,False,False,False,True,False,True,True,False],[True,False,False,False,False,True,False,False,True,False,False,True],[False,True,False,True,True,False,True,True,True,True,True,True],[True,True,True,True,False,False,True,True,False,True,True,False],[False,True,False,False,False,True,True,False,False,True,True,True],[False,True,False,True,False,True,False,True,False,True,False,True],[True,True,False,True,False,False,True,False,True,False,False,True]],[[True,False,True,True,True,True,False,True,False,True,False,False],[False,True,True,True,False,True,False,False,False,False,True,False],[False,True,False,False,True,True,True,False,True,True,True,False],[False,True,False,False,False,False,False,True,True,True,False,False],[False,False,False,False,False,True,False,True,False,False,True,True],[True,False,True,False,True,False,True,True,False,True,True,False],[True,True,True,True,False,True,True,False,True,True,False,False],[False,False,True,True,True,False,False,False,False,False,True,False],[False,False,True,False,True,True,True,False,False,False,True,True],[False,False,True,True,True,False,True,False,False,False,True,True]],[[False,True,False,True,True,True,True,False,True,False,False,False],[True,True,False,False,False,False,True,False,False,False,True,False],[False,True,False,True,True,True,False,False,False,False,True,False],[True,False,False,False,False,False,False,False,False,True,False,False],[True,True,False,True,True,True,True,False,False,True,True,False],[False,True,False,True,False,True,True,True,True,True,False,True],[True,False,True,True,True,True,True,False,False,True,False,False],[True,True,False,True,True,True,True,True,False,True,False,False],[False,True,False,True,False,False,True,False,False,False,True,False],[False,True,False,False,False,False,False,True,False,False,True,True]],[[True,False,False,False,False,True,False,False,False,False,False,True],[False,True,True,True,True,False,True,True,True,True,False,False],[False,False,True,False,True,False,True,False,True,True,False,True],[False,True,True,True,True,True,False,False,False,True,True,False],[True,False,True,True,True,True,True,True,False,False,True,True],[True,False,True,False,False,False,True,False,True,False,True,False],[False,True,False,False,False,True,False,False,True,False,True,True],[True,False,False,True,False,False,False,True,False,False,True,False],[False,False,True,True,True,False,True,True,False,False,True,False],[True,False,False,True,False,True,False,True,True,False,True,False]],[[False,True,True,True,True,True,True,True,True,False,False,False],[True,False,True,True,False,True,True,True,True,False,False,True],[True,False,False,True,True,True,True,True,True,False,False,False],[True,False,False,True,False,False,True,True,False,True,False,False],[False,False,False,True,False,False,False,True,True,False,False,False],[False,True,True,True,False,False,True,True,False,True,False,False],[False,False,False,False,True,False,True,True,False,True,False,False],[True,False,False,False,False,False,False,False,False,False,True,False],[False,True,True,False,False,False,False,False,False,False,True,True],[True,False,False,True,True,False,False,False,False,False,True,False]],[[False,True,True,False,True,False,False,True,True,False,True,False],[False,False,False,False,False,True,True,True,True,True,True,False],[True,True,True,True,True,False,True,True,True,False,False,True],[True,False,False,False,False,False,False,False,False,True,False,False],[False,True,False,False,False,True,False,True,False,True,False,True],[True,False,False,True,False,False,False,True,True,False,False,True],[False,False,False,False,True,False,True,False,False,True,False,False],[False,False,False,False,False,False,True,True,False,True,False,True],[False,False,False,True,True,False,False,True,True,False,False,False],[True,True,False,True,False,False,True,False,True,True,False,True]],[[False,True,False,False,False,True,True,False,True,False,True,False],[False,False,False,True,False,False,False,True,True,False,False,True],[True,False,True,False,True,True,True,True,False,True,False,False],[False,True,True,False,True,False,False,False,False,False,True,True],[False,True,False,True,False,True,False,True,True,True,True,False],[False,False,False,False,True,False,True,False,True,False,False,True],[False,False,True,True,True,False,False,True,False,False,True,False],[True,True,True,False,True,False,True,True,False,True,False,True],[True,True,True,False,True,True,True,True,False,False,False,True],[True,False,False,True,True,True,True,False,True,False,True,False]],[[False,False,True,False,True,True,True,False,False,True,False,True],[False,False,True,False,False,True,True,True,False,False,False,True],[True,True,True,False,True,False,False,True,False,False,True,True],[True,True,True,False,False,False,True,False,False,False,True,False],[False,False,False,False,False,False,True,False,False,False,False,True],[True,True,True,True,True,False,True,False,True,False,False,True],[False,False,False,False,False,True,True,False,True,True,False,False],[True,True,False,True,False,False,True,True,True,False,False,False],[False,True,True,False,False,True,True,False,True,True,True,False],[False,False,False,False,True,True,False,False,False,False,False,False]],[[False,True,True,False,True,False,False,True,True,True,True,True],[True,True,False,False,False,True,False,True,True,True,True,False],[False,True,False,False,True,False,True,True,True,False,True,False],[False,False,False,False,True,True,True,False,False,True,True,True],[False,True,False,True,False,True,True,False,False,False,True,True],[False,False,False,False,False,False,False,True,False,False,True,True],[False,False,False,False,False,True,True,False,False,True,False,True],[False,True,True,False,True,False,True,False,False,False,False,True],[False,False,False,False,True,True,True,True,True,True,True,True],[False,True,False,True,False,False,False,True,True,True,True,True]],[[False,True,True,False,True,True,True,True,True,True,True,False],[False,False,True,False,False,True,True,False,False,True,True,False],[True,True,True,True,True,True,False,True,False,True,True,True],[False,True,False,True,False,True,False,True,True,True,True,True],[False,False,False,False,False,True,True,True,True,False,False,False],[True,False,True,True,True,False,False,True,True,False,True,False],[True,True,True,True,False,False,False,True,False,False,True,False],[False,False,False,True,True,False,True,False,True,False,False,False],[False,False,False,False,True,True,False,False,False,True,True,False],[True,False,True,True,False,True,False,False,True,False,True,False]],[[False,False,True,True,False,True,False,True,True,False,True,False],[True,True,True,True,False,False,True,True,False,True,False,True],[False,False,True,True,False,True,False,True,True,True,False,False],[False,False,True,True,False,False,False,True,True,True,False,True],[True,False,False,False,True,False,True,True,True,False,False,True],[True,False,False,True,True,True,True,True,True,False,True,False],[False,True,True,True,False,False,False,True,False,False,True,True],[False,False,False,True,True,False,True,False,True,True,True,False],[False,False,False,False,False,True,False,False,False,True,True,False],[True,True,True,True,True,True,False,False,True,False,True,False]],[[True,False,True,False,False,False,False,False,True,False,False,True],[True,False,False,True,False,True,True,True,True,True,True,False],[False,True,False,True,False,False,False,True,False,True,True,False],[True,True,True,False,False,True,False,True,False,False,True,False],[True,False,True,False,True,False,True,True,False,True,True,False],[True,True,True,False,False,False,False,True,True,True,False,True],[True,False,True,True,False,False,True,True,False,False,False,False],[True,True,True,True,False,False,True,False,True,False,False,True],[False,False,True,True,False,True,True,True,True,False,False,True],[False,True,False,False,True,False,False,False,True,False,True,False]],[[False,False,False,False,False,False,True,False,False,False,False,False],[True,True,True,False,True,True,True,True,False,False,True,False],[False,False,False,False,False,False,False,False,False,False,False,True],[False,False,True,False,False,True,True,False,False,False,False,True],[False,False,False,False,False,False,False,False,False,True,False,False],[True,False,False,True,False,True,False,False,True,False,True,True],[True,False,True,False,False,False,True,False,False,False,True,False],[False,True,False,False,False,True,False,True,True,False,True,False],[True,True,False,False,True,True,False,True,True,True,True,False],[True,False,False,True,False,True,True,False,True,False,False,True]],[[True,False,True,False,True,False,False,False,True,True,True,True],[False,True,False,False,False,True,False,False,True,False,True,False],[False,True,False,True,True,True,False,False,True,True,False,False],[True,True,True,True,False,False,False,False,True,False,False,True],[True,False,True,False,True,True,False,True,False,True,False,True],[False,False,True,True,False,True,False,True,False,True,False,False],[True,False,True,False,False,True,True,True,False,True,False,True],[False,False,False,False,True,False,True,True,False,False,True,False],[True,True,False,False,False,False,False,True,True,True,True,True],[True,False,True,True,True,True,False,True,True,False,True,True]]], dtype = "bool")#candidate|3700|(14, 10, 12)|const|bool
bop_3701 = relay.add(call_3696.astype('uint32'), const_3700.astype('uint32')) # shape=(14, 10, 12)
bop_3704 = relay.add(call_3697.astype('uint32'), const_3700.astype('uint32')) # shape=(14, 10, 12)
output = relay.Tuple([call_3694,bop_3701,])
output2 = relay.Tuple([call_3695,bop_3704,])
func_3728 = relay.Function([], output)
mod['func_3728'] = func_3728
mod = relay.transform.InferType()(mod)
output = func_3728()
func_3729 = relay.Function([], output)
mutated_mod['func_3729'] = func_3729
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3733 = relay.const([[[-3.475027,-5.535296,-3.234329,-4.666849,1.485609,9.860071,0.265267,4.356584,7.055369],[-2.372864,5.921667,1.017261,0.220001,-1.315552,-6.872300,-1.405838,1.160829,-4.076094],[-7.697424,-9.295898,7.871885,9.749600,5.104060,-5.726748,-8.460985,-1.873550,3.188174],[8.958104,3.249849,4.878061,8.698151,-8.194328,-6.035015,2.126266,2.149948,-6.371656],[5.047264,7.670086,-7.164046,2.454710,-3.218208,-9.235231,-7.903917,9.088562,2.201621],[5.783672,-4.236368,8.943976,-1.000356,9.733198,-1.571856,1.954802,0.057315,-8.481171]],[[-7.937993,-3.324617,3.002982,-7.077191,9.005639,8.853158,-5.395137,8.889779,-4.044531],[1.224826,5.903677,2.149937,6.136006,5.747750,3.297564,-5.535598,-1.216039,0.538628],[-5.428637,9.624805,7.058932,-7.910585,9.908276,-1.414028,0.733319,-3.179378,-5.521984],[-8.359738,-7.537878,-9.109834,-7.934135,4.975426,4.422868,-9.120051,-8.156224,6.791052],[1.140118,9.372856,-8.634424,-7.587588,-6.568907,-0.616522,-3.457115,-1.897614,9.671903],[1.147468,8.294549,-2.357131,1.537738,-0.532561,-3.159022,1.516650,-2.109622,-9.299950]],[[-1.617848,-9.430612,5.406134,9.972382,3.707088,2.028914,-4.445797,-3.150904,4.280441],[-2.835513,-7.258525,4.461927,9.202105,-9.794904,2.529789,-1.074584,0.060090,-6.656617],[2.027069,8.061912,4.662419,2.194171,3.988671,-2.775051,-9.515886,2.289541,1.089009],[6.612128,3.999078,-5.951085,-7.594749,-7.502511,1.564261,9.145936,-0.222995,-1.640567],[7.227042,8.246385,2.939659,9.512505,-8.538880,-8.913424,1.153368,-5.673489,9.008464],[-9.862327,2.609911,-2.596532,7.805390,-8.109392,-0.737494,-4.049328,-7.501738,-2.151999]],[[5.135024,-1.807797,-3.955060,0.948370,-0.825990,-9.802630,0.493558,-1.484280,6.296329],[6.019552,-9.229966,-8.169835,-6.664842,-9.533579,-7.775212,0.441929,-2.172066,6.658183],[-2.994870,8.093380,6.288742,7.307895,-4.146069,0.986009,-6.553541,-1.916851,-1.428212],[2.273888,0.810852,-2.974329,-7.622827,1.920213,5.598698,5.169499,-0.702753,-0.264178],[-7.285278,-2.351770,7.245434,-2.206115,-1.850728,-4.409512,4.864862,-6.662264,0.249670],[-3.794621,-0.096198,8.432123,-9.724138,0.011253,4.340629,-3.379357,1.846811,-9.216650]],[[2.814537,-1.739729,7.771700,-2.387163,-6.636641,-1.352194,8.030300,8.364812,-1.854054],[1.462921,8.752383,7.923749,9.863770,-2.765574,-9.343433,9.922408,8.273957,-3.833781],[3.039495,5.339895,3.002537,5.718242,-8.126367,-2.286391,4.406833,-2.447399,-2.243165],[7.231740,3.644413,3.329769,-1.320331,3.148440,-5.859824,8.640728,4.207980,-5.055342],[-2.100908,4.999225,-0.988149,6.690481,-3.088388,1.310201,-6.921849,-1.095635,-1.474086],[9.903654,-1.295553,2.318812,-3.034710,-6.006064,8.602161,-8.229126,4.010575,3.343285]],[[2.873496,6.676545,-7.973962,3.306191,-1.985958,-4.533909,6.829998,4.695293,0.052407],[-7.663519,5.874326,9.753056,5.805793,-9.189542,7.277837,3.297982,4.925738,-7.795771],[2.898089,-0.061783,2.438808,-9.728075,-3.547572,6.519020,-6.178224,-1.296705,-3.717229],[4.760102,5.060450,-7.919426,0.160783,-4.857749,5.937393,-1.043767,-5.889989,-9.319873],[1.830056,-1.949126,-5.997848,8.112997,7.223554,9.653922,0.628752,-3.227113,-6.864044],[-9.156918,-0.307578,-8.091409,5.291302,-9.475209,5.155821,-0.447516,2.178081,6.437116]],[[-5.852644,5.031368,-1.120279,8.563868,6.460772,-3.375980,1.321344,6.871382,1.275801],[4.479467,-8.444105,-9.297060,-9.353961,-2.546126,5.722317,0.894651,1.663404,-6.443685],[6.851769,5.391613,8.443204,3.552796,-5.145940,-2.633971,-0.976448,8.845500,0.611149],[3.148292,-7.050238,5.061516,4.235467,9.846944,0.113692,-5.616549,6.777119,4.918303],[2.761589,9.025502,5.467778,-2.888595,3.866318,-0.467120,3.678755,-0.956800,-2.327989],[-0.824777,0.007034,-8.741120,4.375553,0.276917,-8.712420,5.919450,7.040996,-6.903759]],[[-0.039008,3.429404,-6.119948,-5.733352,5.330937,4.420232,-3.197933,4.767754,7.451764],[2.638698,-0.673500,6.096374,6.549137,-2.495038,-1.967726,-2.810523,3.198474,-5.018907],[7.277241,-4.017297,-5.761049,-8.190048,3.379075,-6.027694,9.722968,7.537933,-6.250798],[9.123062,7.953202,6.336581,-3.706066,-1.301246,1.373734,5.030179,7.138421,1.593807],[2.345332,-8.443751,9.969573,0.067691,-5.166177,-1.957107,2.810791,6.555717,5.668964],[-4.298872,-0.062830,-4.274491,-0.941835,-9.706650,8.603071,6.723725,-6.269132,0.394840]],[[-7.709282,-2.514960,9.450318,3.240462,-5.433626,1.782690,5.733354,9.582864,-3.821397],[1.008698,1.084043,-2.005791,2.252901,7.213270,5.634147,6.710426,5.146255,9.564468],[-5.799014,-2.002196,7.397501,1.103148,9.437723,-9.960602,-1.442146,-7.285761,3.279126],[-2.254116,-5.131774,-5.129743,-3.857233,0.005880,-9.587023,-6.539079,-1.794710,1.505835],[-2.042902,-2.479858,-5.649409,4.312949,6.262570,-1.809059,-5.015353,2.253826,4.472157],[-0.570112,-3.307857,8.678102,-3.124580,2.356543,-7.859934,-9.725085,7.541707,9.928395]],[[0.094994,-1.218588,-1.105643,-9.024350,8.433213,-2.126560,4.641239,-9.500399,-4.899361],[-8.167209,1.474642,1.321503,6.113799,-7.822059,0.763487,-8.845576,-5.759660,3.905433],[2.574744,0.354580,3.070181,1.932437,3.588941,-3.740571,-8.977561,-4.017670,4.709138],[8.851787,-7.439566,1.024052,9.248707,-8.236631,6.299807,9.548747,6.634565,3.580032],[-6.522920,-8.862321,4.740883,1.739305,5.564411,0.148440,-5.391209,2.596285,1.893257],[-4.896652,-7.650118,-5.994306,-6.795132,3.898386,5.863473,-3.694255,6.492284,3.255118]],[[-3.848177,-6.109116,-8.186465,-0.161969,2.445969,1.544931,-3.299955,4.558821,3.491495],[-1.427141,6.000664,9.580495,8.939060,-7.708273,-7.749534,8.529680,5.068992,7.803468],[6.327153,-4.075737,9.428893,4.002785,2.829403,4.036905,3.821673,-7.921015,1.486164],[3.655507,6.163803,3.435208,3.641926,-9.671686,6.556571,-6.297459,8.266587,7.838204],[0.852867,0.559828,8.618033,1.884163,-0.821033,-0.710184,4.854838,-9.639056,0.865499],[2.229532,-3.081378,3.220238,5.130276,4.175318,-8.121930,4.413871,7.649576,-0.406684]],[[6.742782,5.384153,3.088017,1.736736,8.131641,-5.925811,-3.405265,4.272255,4.689565],[-1.280257,6.363101,-6.361896,-1.304543,8.962571,-3.833187,-3.141909,1.737331,0.513188],[5.140232,3.502352,3.980806,-2.350867,2.971531,-4.812500,-5.277135,8.354749,-4.171346],[-6.059927,-2.049545,5.770886,0.718023,-7.055783,3.553002,-1.065436,9.435736,-2.291601],[0.340209,-0.922666,-3.955234,6.766802,1.774939,-0.118557,-4.126978,-2.573778,-6.368501],[4.682399,1.903938,-3.344296,-6.183611,-1.689738,7.167069,-0.664704,7.240695,4.048529]]], dtype = "float32")#candidate|3733|(12, 6, 9)|const|float32
uop_3734 = relay.acos(const_3733.astype('float32')) # shape=(12, 6, 9)
func_1634_call = mod.get_global_var('func_1634')
func_1635_call = mutated_mod.get_global_var('func_1635')
call_3754 = relay.TupleGetItem(func_1634_call(), 0)
call_3755 = relay.TupleGetItem(func_1635_call(), 0)
func_2337_call = mod.get_global_var('func_2337')
func_2339_call = mutated_mod.get_global_var('func_2339')
call_3766 = relay.TupleGetItem(func_2337_call(), 0)
call_3767 = relay.TupleGetItem(func_2339_call(), 0)
uop_3777 = relay.asinh(uop_3734.astype('float64')) # shape=(12, 6, 9)
func_1033_call = mod.get_global_var('func_1033')
func_1036_call = mutated_mod.get_global_var('func_1036')
call_3780 = relay.TupleGetItem(func_1033_call(relay.reshape(call_3754.astype('float32'), [2520,])), 2)
call_3781 = relay.TupleGetItem(func_1036_call(relay.reshape(call_3754.astype('float32'), [2520,])), 2)
output = relay.Tuple([call_3754,call_3766,uop_3777,call_3780,])
output2 = relay.Tuple([call_3755,call_3767,uop_3777,call_3781,])
func_3783 = relay.Function([], output)
mod['func_3783'] = func_3783
mod = relay.transform.InferType()(mod)
mutated_mod['func_3783'] = func_3783
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3783_call = mutated_mod.get_global_var('func_3783')
call_3784 = func_3783_call()
output = call_3784
func_3785 = relay.Function([], output)
mutated_mod['func_3785'] = func_3785
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3094_call = mod.get_global_var('func_3094')
func_3096_call = mutated_mod.get_global_var('func_3096')
call_3786 = relay.TupleGetItem(func_3094_call(), 0)
call_3787 = relay.TupleGetItem(func_3096_call(), 0)
const_3789 = relay.const([[[-3.558846,-0.847408,-2.083933,2.603400,8.455209,3.257196,-5.545799,0.656937,-8.190246,-9.682757,-7.056708,-2.617407],[1.884737,4.808574,0.023831,8.382219,-2.740203,-8.387472,0.047172,-7.672010,-5.667759,-6.889380,5.093846,0.252337],[5.360391,7.451136,2.860886,5.677010,1.865232,-9.768179,4.292611,-9.408379,6.259797,1.459823,-5.437728,7.918444],[6.723021,5.192839,-9.174134,3.697842,3.231673,4.483275,-8.160451,1.699755,-9.467485,-6.356517,7.261741,7.705337],[4.484326,-0.028562,7.405767,-3.728667,3.618275,1.436664,-1.215031,-9.440583,0.206906,8.166982,-9.583253,-9.096543],[-1.793635,9.092290,2.764997,-9.809620,9.303349,5.010544,-1.667135,8.798523,0.481732,1.646265,8.412545,9.739573],[-1.512492,-0.083174,0.987755,9.936892,9.295636,-9.784427,1.292819,0.735749,2.081160,6.782889,8.183956,3.426446],[9.151024,-6.805048,-7.302873,-2.474769,-5.161001,-8.519687,6.023226,7.586034,-2.747089,2.549702,-0.720086,-0.333241],[2.897042,-3.138798,-8.976367,-0.220996,-8.264862,2.183425,-9.042985,1.660127,-2.471772,5.167037,3.153977,2.420588],[-1.348750,-6.914254,4.857891,-5.470498,-9.076053,7.875021,-4.423511,9.160132,0.933459,-2.590749,-1.746803,-8.072546],[0.911866,-8.312858,7.757020,-9.773056,-9.925253,-8.826833,5.000650,2.906118,4.986764,-9.514894,-2.383011,6.759632],[-7.759453,5.902736,0.031546,-2.296862,0.469204,-9.626283,-0.251008,-6.286911,5.643731,-5.240722,9.219370,-8.687940],[8.814716,9.236548,-8.375625,1.215591,-4.868854,8.984001,-4.259953,-2.072061,-5.468748,-7.291554,5.551802,-2.109016]],[[-3.072169,6.989740,-9.441946,-1.413312,-8.992376,5.282360,-1.282951,-9.234264,9.362431,9.189482,6.051036,-6.801003],[-8.329495,-9.463014,3.232929,-8.594685,7.583010,-9.665349,4.489058,4.435546,-3.148560,9.358967,6.541963,3.733887],[3.518803,6.505578,-6.528241,7.602072,-0.402511,-6.761411,-0.786353,7.792434,-4.892235,2.990535,7.401227,9.740734],[4.588861,-7.158509,-6.517442,9.351908,-5.294304,-7.441770,-2.542707,8.163572,6.741960,6.693966,-6.939591,-5.675622],[-8.954151,9.129236,-6.834172,8.741177,8.364800,3.661448,8.585019,6.717830,5.201616,-7.587444,3.622817,-6.672558],[6.497858,-1.606419,7.153483,-2.852455,-0.433170,6.941327,-1.425639,-8.228455,-9.761809,-9.637549,4.060791,-4.385184],[9.466955,-1.445574,-3.507373,-6.697673,-0.377837,-8.925722,2.057625,8.971759,-7.930246,-8.524430,4.925166,-4.645612],[-2.942612,2.158034,-0.870912,-7.001197,-2.365853,4.402810,-6.232749,-5.639884,-8.126898,-1.835336,2.569527,-1.151101],[-9.722155,0.252676,6.157746,2.295569,-0.613077,9.851194,-5.449061,-0.625507,6.871803,-2.644566,9.668688,-7.463396],[8.113798,9.391749,4.789181,-6.847954,4.508826,2.745256,4.616282,-0.227203,-6.242298,-1.290822,-5.930501,5.601352],[-4.197062,9.243228,2.609188,-9.455011,-0.968468,6.756373,4.390812,8.751850,3.170062,0.218722,9.353265,-0.903973],[-9.929020,9.608246,-9.730842,-2.423260,-6.084080,-9.978767,5.131662,-8.014969,6.907790,7.984859,5.323630,8.608084],[-1.800035,8.311547,-0.528504,5.590906,-6.962927,2.687105,8.423725,-1.218910,6.708749,8.072783,2.324597,-2.247463]],[[-0.850974,3.411620,-6.320472,-4.624195,2.497544,0.783248,-1.085151,-3.099780,9.804815,7.706300,5.440996,-6.839704],[-7.655358,-7.527149,8.197415,-4.808540,-7.911595,2.828611,-6.537170,8.194775,2.417502,-0.549289,1.907199,-8.452895],[-5.447280,-8.633039,8.075999,6.849432,-5.926677,8.483888,-7.178281,0.950390,1.663098,-0.567838,1.778169,-6.551912],[-6.281183,-2.504057,8.339954,-6.389090,-0.920318,-5.979472,7.111420,9.759308,1.442018,4.868834,8.038639,-7.119963],[9.449440,-7.576090,2.675986,2.800248,2.609158,7.738536,-2.744027,2.509083,-8.772067,4.847245,9.378039,-8.659811],[1.643811,-5.499657,-7.373069,-5.237864,0.412559,-9.568371,0.816061,-7.048198,9.102867,6.095081,6.454903,-6.172080],[-0.461940,5.305240,0.573950,-5.282182,5.829077,2.405139,-2.483133,2.775573,-3.731961,-4.628061,6.691191,4.300958],[-3.489915,0.370839,0.126761,-8.171176,8.743383,2.145344,7.240651,0.826283,-6.599381,-7.103932,-3.989078,8.273096],[-7.282107,-0.290861,-9.891489,-1.962958,9.108432,0.387139,-6.299424,-4.220446,7.648145,-3.061306,-6.191468,-4.590818],[-8.815567,2.953174,-2.122159,4.796482,-1.653860,6.045461,0.906860,9.327628,7.007064,2.965728,-4.302009,7.069889],[3.428058,-1.492485,1.322580,6.569791,-5.653725,8.147377,3.014155,4.374927,-9.655931,-6.022323,-5.156352,-0.182171],[-5.031810,3.802351,-4.889844,1.025709,-7.127859,5.406869,-4.226310,4.774268,1.823711,5.192000,-6.318256,-1.196837],[5.264648,-3.650441,-1.485074,4.661531,1.596652,-1.220004,5.466660,6.724411,0.580498,-5.651759,7.577855,-7.527466]],[[-6.100668,7.074494,-7.698708,2.442835,7.377342,-6.600641,3.783510,-1.981720,-3.446339,-4.619972,-1.556173,-2.750189],[-8.373150,4.100765,-5.186930,-4.410328,-0.335947,3.627448,1.575477,-3.692625,7.856360,-1.984543,5.856498,5.206542],[0.180351,1.361940,8.477215,-2.833319,-0.754346,-3.462231,1.248134,8.474081,-8.723522,6.804407,-4.586926,-9.006960],[-1.712540,-7.013561,-4.420255,4.654639,0.582025,3.480729,-6.405784,-0.050557,-2.620025,-4.278673,4.335161,7.207672],[-4.896378,9.808343,-1.053105,-1.334512,-7.592642,-3.871081,-9.311689,0.779494,6.346012,1.232986,-4.656567,-3.917255],[-4.301649,-1.426702,0.044222,7.479891,-1.047036,-4.899789,1.384586,8.835433,5.119885,-4.528779,-6.645285,1.240683],[-2.968011,2.121102,-3.515678,4.933550,-8.396439,-0.522142,4.674241,-6.955464,-2.092386,1.234166,7.888566,2.518453],[-9.822164,7.360750,1.385630,-0.985896,5.515445,-1.068865,-4.712946,-0.848946,-7.983955,-7.075430,-5.654657,4.430016],[6.767584,-8.563296,-6.612990,9.227473,1.306165,6.357130,2.524846,4.212356,3.482742,-3.265777,3.000925,3.822403],[3.235919,-9.179284,-7.517919,-8.266093,-8.614667,-5.675973,-4.915154,7.451367,-3.631002,4.485764,1.296132,-6.033917],[-8.073572,-6.575665,3.665863,2.580866,1.206231,8.765695,-7.408477,9.785496,-7.131787,0.416127,4.896355,7.717593],[7.965042,9.467477,5.875381,5.332296,-1.587772,6.039221,8.010364,-9.944402,-6.355375,-7.155405,1.715409,9.159197],[-4.937430,-5.542026,-5.198647,4.095993,-6.628348,-8.563696,3.394699,-2.120732,3.903600,3.814822,-7.638966,0.908975]],[[5.898375,2.712719,4.664985,8.150405,7.586510,9.770130,0.897983,3.749455,7.373314,2.501567,-9.399795,-5.263889],[3.254843,-8.104727,6.558558,0.056568,-7.830961,3.551218,9.540388,7.792925,-0.310083,-2.589104,7.408357,-4.885099],[8.946344,6.701838,0.321087,9.327515,-0.679591,-7.745876,7.743204,-6.525472,4.235933,2.711401,-9.385143,8.845389],[5.770228,-3.215211,-0.777741,7.694992,-9.690423,9.045204,-4.580141,0.729372,-9.723344,-0.633715,7.388655,7.609996],[-7.982635,9.550972,4.650037,-0.968847,5.085661,-5.951664,1.070218,7.731646,-0.624014,7.947317,-7.151740,2.618096],[-9.389740,-7.590713,2.563165,-7.894564,0.554773,-1.217566,5.283975,3.981023,-8.036427,-6.741509,-6.802785,2.090354],[-4.297784,5.215911,9.318912,1.748099,4.272029,9.872181,-5.305516,-2.058848,-5.965646,-3.375385,6.336301,-2.814386],[1.072537,9.700774,-5.859659,6.172408,8.505182,1.091087,2.230712,4.104469,8.441710,0.664089,-9.378991,5.632909],[2.039199,-9.738658,0.412509,-6.754624,5.314358,-8.634358,-7.987294,-5.135176,8.265637,7.004238,7.300897,1.613908],[3.377840,-0.546032,-6.987308,-3.022996,8.652821,9.161038,7.610063,-6.921748,5.055299,2.552197,-9.040921,-5.212195],[6.897302,-0.965505,-8.731748,0.919599,4.677424,8.059086,8.898976,7.729967,6.781745,-0.275661,-8.896778,5.038008],[3.600353,3.020319,8.800857,9.552796,2.247231,9.154732,5.250486,-2.333280,-6.443792,6.120553,2.363630,-8.871505],[1.405937,-0.537901,0.710190,3.991495,-2.889400,-9.540896,-7.493379,-4.858720,-0.328394,2.185513,3.116865,-8.294834]],[[-9.650681,8.413444,-9.622515,-7.692652,-5.600865,0.853260,-5.981197,9.424428,1.822384,-6.092281,8.968179,-2.373825],[-6.926437,-0.413792,9.513485,0.285453,-9.645084,4.829804,3.132400,-5.766090,-2.000995,6.908820,-0.648262,8.140973],[4.161708,-0.812777,7.773728,-2.554133,-9.213498,4.109056,5.764430,9.685665,5.231840,-6.177217,-4.934405,1.252687],[-0.096669,-9.053689,3.289229,-9.461031,9.464130,6.221551,9.523610,2.093967,-7.425621,6.808674,1.806058,0.362087],[-0.348449,0.612420,-2.612953,1.909098,-0.402799,-0.756698,-2.306937,-6.927636,6.528073,-7.024451,6.305417,-5.775437],[-0.134279,6.993595,6.459876,-3.742509,-9.572767,-3.009229,-5.568812,3.855632,2.830291,-2.504449,-8.172614,-9.645229],[1.540175,8.378023,-3.424550,-1.265639,7.547400,-2.812417,1.980583,-0.247269,1.748999,-9.267779,5.174756,-6.858889],[7.146118,-6.810731,1.132314,9.352692,3.760675,4.470126,5.853966,-2.019509,9.811134,0.706673,3.221928,-1.977566],[-1.782301,5.949788,-7.534897,0.633300,-3.143930,9.081988,-8.136204,-3.600563,2.152427,0.618085,-5.695781,-7.660440],[-0.695904,-6.008892,3.330864,-7.925539,0.354679,8.986836,9.636997,-6.486531,-8.636561,3.637538,-3.856697,-4.871183],[8.992665,-3.821550,7.106407,7.749663,-8.716688,-5.182240,-3.743003,-3.238308,-2.593368,0.035368,-6.427355,3.356328],[-8.570572,7.598729,0.416838,-7.606457,7.299407,-9.120803,7.269433,-1.729083,0.327905,-5.758032,-5.762429,3.974680],[-2.779848,-0.176633,-4.309229,-3.926260,7.897707,-9.840421,4.307728,2.981819,1.308802,-1.180576,-4.945910,7.999379]],[[5.476126,2.454745,-3.380643,-8.630560,-5.214618,0.520216,-5.835048,8.947294,2.438549,-6.026135,-5.658272,8.344819],[1.683193,6.632482,-6.108703,5.521876,-5.126078,2.807117,-7.082220,8.844672,3.050652,9.140376,-5.566117,7.283186],[-3.501922,2.362951,5.592048,8.693459,-9.844365,-6.273628,3.107443,-3.160384,6.704763,-0.338155,2.889340,-5.146103],[-3.465284,-2.985081,-3.510343,-1.910192,-4.817437,9.025324,-5.683208,-1.601338,0.971805,4.205414,4.644235,-9.146160],[-0.797862,-6.744846,0.467404,-0.105100,-6.319736,-3.942622,-7.510701,-6.773708,-1.355440,-4.497990,-5.604176,3.449883],[-5.408963,-7.923962,-5.690309,-8.406886,6.313089,-1.880127,0.622350,-4.934788,-7.443263,-7.184810,5.585597,3.079840],[-2.774410,-4.092996,-7.692577,6.239213,-9.013563,-9.107345,-6.829935,1.279357,8.425724,-3.546786,-3.197203,2.802372],[-5.072355,5.531314,-4.111664,0.445094,4.110044,2.326237,-7.734728,-8.704216,-0.392364,7.056438,4.258029,-9.055670],[8.934700,8.240628,9.773408,-5.331108,-3.648008,6.188708,-0.778602,0.584872,-0.883999,8.866869,1.429415,6.030005],[2.515466,7.093907,-9.290451,2.710232,-0.036325,1.208134,1.742411,8.892176,-4.476184,-4.168287,-0.042219,-7.349746],[-5.703608,5.453541,7.766528,5.402501,3.139732,7.181150,-9.075457,6.638014,4.430592,-9.572068,-9.845779,-2.225883],[-2.286161,1.250596,-0.382452,7.115587,-2.594836,3.477000,-8.460191,-4.721468,7.358407,3.048586,-0.552230,-6.771717],[6.519119,3.248908,4.983615,-2.583499,-7.928584,-3.889581,6.497724,-1.549408,-3.192445,2.253449,-7.527752,-2.461480]],[[8.989160,-3.471553,2.998375,2.754333,6.740413,-6.500752,-0.926334,9.327473,0.639939,-6.659808,6.511170,-1.682599],[-1.953465,-4.672386,7.860650,-8.316738,-6.049249,-6.533609,9.035398,4.060672,-1.893330,7.663606,-9.928627,-7.100591],[-2.482806,4.397930,0.053854,2.425571,9.362218,-3.772934,9.689668,-0.391424,7.459595,1.723336,-9.220826,-0.859805],[-9.235441,-3.535445,-2.664698,-3.675241,0.652781,-7.816830,7.824499,-8.924511,-4.249130,5.720120,4.179866,1.334487],[9.235704,4.860960,2.136069,-1.409710,-6.114425,9.887641,4.360293,5.035668,3.720183,7.618700,-8.719277,4.042023],[1.283174,-9.157777,-5.604360,3.102999,-1.249031,-7.510495,-2.527816,7.560709,7.303125,1.918062,3.325276,9.665192],[2.633436,0.467083,-2.767010,-0.965728,-8.134607,-9.381677,-7.514258,-7.075732,-3.282183,9.393626,5.694672,3.749161],[4.643827,-7.471414,-7.102998,6.294142,-6.698524,7.465447,6.937974,-7.367253,-2.851534,5.955546,3.755522,0.374374],[-4.161710,-3.048338,2.463432,-0.480973,9.285623,4.025723,-8.666872,0.734862,-1.386078,5.827801,-2.113873,5.341331],[-0.532773,2.843227,-1.962974,7.518786,6.077632,-4.463134,-6.035392,4.478850,9.834880,4.431183,8.777768,9.925708],[6.251686,-3.753917,-7.920356,-3.557580,-9.770883,-2.320444,-3.373420,6.876559,-2.842809,-1.292723,-2.155404,-0.652665],[0.572944,8.954762,-3.644990,-6.642776,2.696498,1.012035,-5.806100,-7.397709,5.155805,1.366428,-9.721798,-1.927488],[-6.094128,8.771292,-4.824417,2.268477,9.714241,8.518518,3.957859,2.414711,-5.355228,-1.755157,-0.743236,3.046693]],[[-0.603896,8.627820,0.443234,9.554340,1.321531,-3.376595,-9.329956,3.638546,-3.756588,5.395872,-4.431705,-4.232769],[4.636999,4.431772,0.244695,4.092534,0.641867,-4.076933,-9.838454,-5.228598,8.190355,-2.547968,-8.180064,4.116533],[-5.704529,-8.659226,-6.042630,2.681943,-5.945602,2.413162,1.443662,8.364914,-5.692746,9.322891,2.062319,-4.872866],[-0.114251,-5.547407,-4.531417,0.229310,-4.344996,0.101976,-7.093137,-1.251206,8.694286,-6.946246,-3.923345,4.002225],[9.548180,-7.593947,-7.743854,7.790209,1.739356,-5.917873,-3.220684,-1.894984,1.854667,7.701420,-1.308283,-0.257205],[9.639172,-4.401928,-5.271116,-4.924268,-7.521537,-6.531063,4.719995,5.753089,3.802762,-4.391562,9.140629,-2.821500],[-9.952596,-4.538397,0.492166,-4.308515,4.912238,0.002672,-8.005333,2.251988,-7.546300,-1.002206,-5.422112,-2.924521],[1.372282,8.272360,4.855446,1.299503,7.331406,-4.440552,1.691470,0.330797,1.759357,-5.891428,9.210921,-3.852918],[-7.452399,8.266950,-1.607003,-3.912363,8.305141,-0.574003,-1.872428,-1.535159,7.463547,-8.309498,-1.585063,9.853980],[-1.286867,3.382106,5.178264,2.118921,-1.108828,-8.202219,-1.515548,-1.642430,-2.094540,-2.218186,2.862300,-7.888182],[1.901170,8.899407,7.879535,9.081033,-7.285139,4.597871,-0.592149,2.157660,9.014795,8.292716,1.731426,1.595101],[-1.264353,-0.752728,1.637615,-5.307970,7.711950,-3.578133,-7.408459,3.095059,-2.428374,4.730124,0.016612,-3.596400],[-3.785187,5.491819,1.812201,-9.266438,-6.567161,6.393895,9.291921,8.484304,4.395944,8.854940,4.131473,2.272044]],[[2.092418,3.266667,8.572087,-4.550250,0.060961,1.242576,-6.600411,7.355822,-0.343923,-4.309940,-8.370925,6.177804],[8.597409,-1.815441,1.275751,8.068055,-0.791596,5.286049,-9.038025,1.662499,0.151331,-3.223196,-5.523907,0.287518],[0.148896,9.400273,7.715715,6.113494,0.043016,2.253925,6.739822,-5.380310,3.582161,-1.766132,1.806418,-3.707610],[-5.231610,-8.458758,-6.098233,-3.683779,-9.241089,9.482874,-7.584466,-7.485398,-0.879146,-8.713776,-2.187942,4.806099],[-3.987672,3.912723,-2.758053,0.905937,1.081532,0.333074,5.412392,4.019068,7.478740,7.340267,8.965549,-3.736917],[0.794782,-9.078378,8.572992,-9.289122,6.627430,8.978357,9.927623,-2.764080,-2.997815,-2.408556,8.010184,9.826156],[-2.424239,-5.226053,4.581136,-3.186939,4.056397,-4.113569,-3.273073,2.436996,5.630824,9.528838,2.984711,3.158613],[-1.529472,6.847478,5.303804,-3.381040,7.627016,9.053206,0.237174,0.746224,-6.142708,4.344321,-9.895508,-6.388699],[3.646741,-7.685355,-7.055344,7.164547,0.597969,-5.481055,2.625756,8.854704,-6.847506,0.507156,-2.936582,-9.847241],[7.774927,3.999632,-8.671853,2.951681,-2.021444,-8.010006,3.909084,4.444235,-7.906561,8.839030,-1.685959,-8.483722],[8.377456,5.540427,0.095757,5.066284,4.823130,-7.680669,-8.743168,-8.299117,-7.773549,3.666024,-2.571962,-5.856948],[9.377865,-7.405403,-3.778899,-7.462185,6.003653,9.924879,0.050063,3.065728,-2.208974,9.268651,0.110785,3.117520],[-3.843986,1.649090,5.520022,-1.249108,3.124619,-4.184402,9.886971,7.676931,-2.313564,0.601277,2.942350,1.562940]],[[5.566480,6.869056,-9.404711,-7.386835,7.060317,0.267592,7.872185,3.880409,-5.137795,0.758303,-0.982378,-0.681851],[1.580200,7.627124,-0.355583,-3.169306,7.702650,-9.540076,-7.513138,-7.798676,-6.724540,-1.206619,0.424482,-9.781543],[-4.413807,-8.038956,0.286688,4.448468,-0.314456,8.223011,1.908049,-0.466711,9.173169,-5.313591,4.524258,-4.887038],[-2.511988,-0.103024,-6.229736,-9.196779,-6.529437,-1.216121,6.124402,-9.357959,-6.247987,5.621859,-0.127517,-1.921251],[-8.863701,7.326643,7.760880,-4.809419,5.142871,-6.024767,4.949366,-8.649235,9.412458,0.564145,-7.497140,-3.024668],[-4.797136,2.456741,-4.491086,-2.950232,-5.555849,-3.745088,3.144795,-8.299611,6.189809,9.552107,2.916086,-4.359121],[-3.150209,3.999399,-6.549125,0.658478,7.552137,0.737498,-3.139292,0.375009,8.144490,-4.384261,-8.092173,4.283322],[1.150993,-4.605313,-9.979213,3.307004,9.262280,-7.878648,5.642315,-6.946650,-7.529890,-4.844540,2.735615,2.453934],[5.088883,-8.398160,-9.427882,-8.301557,-1.408895,-6.563120,8.964926,5.612428,8.360567,-6.409075,4.610721,9.235944],[-8.199727,-6.520400,3.761477,5.948641,9.140508,-2.100691,1.450095,-7.488103,-5.500752,3.131330,-3.056876,-8.972745],[-4.245731,-3.858531,8.577651,0.560005,7.294865,3.791119,1.858203,-2.521918,-8.976496,9.874733,4.960971,9.988079],[-4.709042,4.844523,1.262607,-8.193995,6.575976,8.747597,5.099095,-4.176132,-7.567605,3.389805,-4.707936,3.678773],[1.371900,7.567489,-7.608691,-8.603199,9.693714,3.435603,6.841159,-1.574020,6.888764,2.966399,-8.138560,3.890370]],[[4.237569,-1.239945,-3.457395,8.091415,-4.953187,-3.588015,0.023060,-4.961325,5.922287,-3.016874,5.870929,1.716881],[-8.458253,8.829513,-0.749770,-4.104538,-5.750068,-9.276042,-2.996546,-0.727291,-2.189920,6.692859,2.692273,-0.028017],[4.673572,0.020200,5.479726,2.997251,7.937881,-3.381524,-1.907606,5.624758,0.969554,2.447116,8.132556,0.945815],[8.721869,-7.782723,-3.306462,3.874149,6.998213,-0.157894,6.528275,-5.345958,8.142505,-2.924847,7.590745,-2.146117],[5.137395,-6.030941,9.263940,-7.546693,-4.634446,3.817241,0.942038,5.929482,3.357312,7.410344,4.863947,4.640656],[-0.013564,-9.553991,5.112168,3.145917,6.216396,-4.925579,2.019028,2.334775,2.347472,-7.857285,7.752121,9.741720],[4.986540,4.919194,-5.855790,2.303874,-8.348956,0.113642,-6.456906,5.604634,-2.157166,-6.269973,-6.873476,-7.761125],[-1.534221,7.273036,-9.187100,-6.124172,4.528452,-8.585232,-2.578033,0.503988,-1.788773,5.380448,1.792470,-3.706232],[-6.477194,4.315196,-3.539971,-7.922677,-0.472228,-0.324633,-0.725645,-8.776243,-9.039233,2.445102,0.738653,6.945487],[2.403969,-6.493667,6.962342,8.802445,-8.538323,9.299389,-5.147038,9.536015,0.933146,8.705657,9.348646,3.686857],[-2.930795,-2.970885,9.991385,6.618075,-6.242286,7.120594,-8.433131,7.383118,3.375876,3.397249,-7.746042,-6.103558],[-8.008042,0.026114,-7.846763,5.298972,-2.479015,-3.856528,-6.541196,-0.319722,6.763873,-8.967468,-4.066255,-2.051913],[-8.465476,0.873013,5.028788,-1.335135,0.716154,2.304503,7.295043,7.011293,-5.376892,9.526784,0.480659,-2.080815]],[[-5.161268,3.990216,-9.886125,-0.746524,6.608092,-3.074106,-5.981643,8.864734,-4.364279,4.824776,7.415735,2.350869],[-1.746824,-4.211476,1.674975,-3.731216,-6.117103,-8.145852,-2.671245,1.856908,3.975519,-8.583299,2.235948,8.686023],[-7.415825,4.598311,2.492844,3.528044,3.610143,-9.623416,-8.479970,-6.808259,-1.518393,-4.386067,-7.036820,-6.363568],[8.345318,8.236512,-2.800552,-9.302247,6.597615,4.774063,9.887086,-7.156918,-2.436717,9.563737,5.630919,8.107242],[-6.040697,-9.098014,-2.924258,-1.845523,0.821077,-3.811699,4.265172,-4.145177,-6.281090,1.539757,3.262394,-1.174419],[-5.185056,-3.720333,-1.295357,6.556952,7.686690,6.568270,1.145127,7.971779,2.917740,-2.502781,2.761729,9.748346],[-4.364051,3.953145,-6.344238,-3.091442,9.111792,-2.694667,-7.197051,-4.564839,-7.049314,3.404048,-8.986837,-1.714653],[-3.205249,-3.945368,-8.062770,4.829392,-8.989214,-0.585924,1.438838,-8.673004,1.866203,-8.398055,-0.114703,-9.340933],[-4.853805,-0.701838,-9.001061,-1.021160,-5.069740,-6.114364,-3.920730,9.321655,-4.647625,0.304750,-2.429238,-0.843139],[-5.941623,-1.740194,-1.762521,1.233423,-3.241189,7.499529,8.680261,-6.992308,-9.595704,-8.623172,-5.210266,1.079086],[4.561199,-9.596449,-5.777108,4.466806,7.208586,-8.176103,-7.345986,-7.415582,9.743786,-6.121751,8.893604,-5.555252],[7.418342,-2.524012,6.651975,1.911525,-4.316647,-0.877005,-4.584817,-9.458727,9.818856,5.999325,-1.912745,6.164754],[7.093575,-7.293676,-4.018814,-4.273690,9.079578,7.366078,1.629518,3.232181,7.607047,-5.702371,-2.127511,2.512790]],[[2.908904,8.662081,0.019308,-7.208597,-7.751184,6.196361,7.774245,0.694482,6.729301,5.604612,6.809080,-1.889119],[4.510504,-6.303032,5.646248,8.065669,7.519972,6.300046,1.404434,1.735006,-4.183044,-5.694019,8.030597,7.814088],[3.252423,1.404843,9.211271,9.595733,-9.846272,-5.555899,1.795397,8.468814,6.850848,3.211437,-7.952087,-1.114251],[-1.477419,-5.174322,-6.321186,-2.316124,3.548973,-7.059857,4.883676,3.954275,-6.217390,-0.087462,8.554077,-5.626708],[-6.326221,-4.311595,-2.848742,0.332648,9.498891,-9.043073,1.287824,7.648586,-5.040641,-5.181350,6.540408,-9.321606],[2.350880,-2.893722,-7.700015,5.712428,-0.902761,7.756004,4.194978,7.558904,-3.438892,-1.127564,-1.145933,-2.840038],[-9.922734,3.428448,-9.853080,6.375375,-1.952476,1.984287,-9.018895,2.318082,-9.062802,8.573159,5.525812,-9.309498],[9.718240,-3.741532,3.851774,-8.415302,6.751301,0.359836,9.846152,0.237068,-7.313962,-2.988313,-5.897069,-1.532655],[-9.401258,-5.907423,-1.662737,-2.727685,7.682802,-9.955385,2.653484,-0.852893,-3.883688,7.186093,-2.056806,8.811027],[4.577663,8.907198,1.457005,-5.298148,-3.958261,9.809790,1.084447,-4.938378,-7.292986,9.090007,0.978092,-4.300681],[-1.693020,-0.268048,5.066171,7.584914,3.955866,-4.240471,-2.074251,2.149044,3.627930,-3.925971,-2.548815,3.341689],[1.489393,-3.341264,6.600207,-1.594839,-4.035677,-9.754907,-6.434798,-5.991277,6.065924,-7.436387,1.571324,-9.651389],[-7.874473,-9.916914,1.974149,-8.146126,-7.418279,0.038801,0.664606,5.771934,-7.184483,8.578303,-2.745794,9.170362]]], dtype = "float32")#candidate|3789|(14, 13, 12)|const|float32
bop_3790 = relay.logical_xor(call_3786.astype('int32'), const_3789.astype('int32')) # shape=(14, 13, 12)
bop_3793 = relay.logical_xor(call_3787.astype('int32'), const_3789.astype('int32')) # shape=(14, 13, 12)
output = bop_3790
output2 = bop_3793
func_3818 = relay.Function([], output)
mod['func_3818'] = func_3818
mod = relay.transform.InferType()(mod)
output = func_3818()
func_3819 = relay.Function([], output)
mutated_mod['func_3819'] = func_3819
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3831 = relay.constdtype = "float64")#candidate|3831|(10, 16, 14)|const|float64
uop_3832 = relay.asin(const_3831.astype('float64')) # shape=(10, 16, 14)
output = relay.Tuple([uop_3832,])
output2 = relay.Tuple([uop_3832,])
func_3835 = relay.Function([], output)
mod['func_3835'] = func_3835
mod = relay.transform.InferType()(mod)
output = func_3835()
func_3836 = relay.Function([], output)
mutated_mod['func_3836'] = func_3836
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2788_call = mod.get_global_var('func_2788')
func_2789_call = mutated_mod.get_global_var('func_2789')
call_3847 = relay.TupleGetItem(func_2788_call(), 0)
call_3848 = relay.TupleGetItem(func_2789_call(), 0)
func_1921_call = mod.get_global_var('func_1921')
func_1923_call = mutated_mod.get_global_var('func_1923')
call_3853 = func_1921_call()
call_3854 = func_1921_call()
output = relay.Tuple([call_3847,call_3853,])
output2 = relay.Tuple([call_3848,call_3854,])
func_3857 = relay.Function([], output)
mod['func_3857'] = func_3857
mod = relay.transform.InferType()(mod)
output = func_3857()
func_3858 = relay.Function([], output)
mutated_mod['func_3858'] = func_3858
mutated_mod = relay.transform.InferType()(mutated_mod)
func_862_call = mod.get_global_var('func_862')
func_864_call = mutated_mod.get_global_var('func_864')
call_3865 = relay.TupleGetItem(func_862_call(), 0)
call_3866 = relay.TupleGetItem(func_864_call(), 0)
output = relay.Tuple([call_3865,])
output2 = relay.Tuple([call_3866,])
func_3867 = relay.Function([], output)
mod['func_3867'] = func_3867
mod = relay.transform.InferType()(mod)
output = func_3867()
func_3868 = relay.Function([], output)
mutated_mod['func_3868'] = func_3868
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1672_call = mod.get_global_var('func_1672')
func_1673_call = mutated_mod.get_global_var('func_1673')
call_3910 = relay.TupleGetItem(func_1672_call(), 1)
call_3911 = relay.TupleGetItem(func_1673_call(), 1)
output = relay.Tuple([call_3910,])
output2 = relay.Tuple([call_3911,])
func_3914 = relay.Function([], output)
mod['func_3914'] = func_3914
mod = relay.transform.InferType()(mod)
output = func_3914()
func_3915 = relay.Function([], output)
mutated_mod['func_3915'] = func_3915
mutated_mod = relay.transform.InferType()(mutated_mod)
func_597_call = mod.get_global_var('func_597')
func_599_call = mutated_mod.get_global_var('func_599')
call_3965 = relay.TupleGetItem(func_597_call(), 1)
call_3966 = relay.TupleGetItem(func_599_call(), 1)
func_2788_call = mod.get_global_var('func_2788')
func_2789_call = mutated_mod.get_global_var('func_2789')
call_4021 = relay.TupleGetItem(func_2788_call(), 0)
call_4022 = relay.TupleGetItem(func_2789_call(), 0)
var_4025 = relay.var("var_4025", dtype = "float32", shape = (14, 12, 12))#candidate|4025|(14, 12, 12)|var|float32
bop_4026 = relay.not_equal(call_3965.astype('bool'), var_4025.astype('bool')) # shape=(14, 12, 12)
bop_4029 = relay.not_equal(call_3966.astype('bool'), var_4025.astype('bool')) # shape=(14, 12, 12)
output = relay.Tuple([call_4021,bop_4026,])
output2 = relay.Tuple([call_4022,bop_4029,])
func_4034 = relay.Function([var_4025,], output)
mod['func_4034'] = func_4034
mod = relay.transform.InferType()(mod)
mutated_mod['func_4034'] = func_4034
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4035 = relay.var("var_4035", dtype = "float32", shape = (14, 12, 12))#candidate|4035|(14, 12, 12)|var|float32
func_4034_call = mutated_mod.get_global_var('func_4034')
call_4036 = func_4034_call(var_4035)
output = call_4036
func_4037 = relay.Function([var_4035], output)
mutated_mod['func_4037'] = func_4037
mutated_mod = relay.transform.InferType()(mutated_mod)
func_597_call = mod.get_global_var('func_597')
func_599_call = mutated_mod.get_global_var('func_599')
call_4104 = relay.TupleGetItem(func_597_call(), 0)
call_4105 = relay.TupleGetItem(func_599_call(), 0)
func_1865_call = mod.get_global_var('func_1865')
func_1867_call = mutated_mod.get_global_var('func_1867')
var_4126 = relay.var("var_4126", dtype = "float32", shape = (2184,))#candidate|4126|(2184,)|var|float32
call_4125 = func_1865_call(relay.reshape(var_4126.astype('float32'), [14, 13, 12]))
call_4127 = func_1865_call(relay.reshape(var_4126.astype('float32'), [14, 13, 12]))
func_2890_call = mod.get_global_var('func_2890')
func_2892_call = mutated_mod.get_global_var('func_2892')
call_4128 = relay.TupleGetItem(func_2890_call(), 0)
call_4129 = relay.TupleGetItem(func_2892_call(), 0)
output = relay.Tuple([call_4104,call_4125,var_4126,call_4128,])
output2 = relay.Tuple([call_4105,call_4127,var_4126,call_4129,])
func_4151 = relay.Function([var_4126,], output)
mod['func_4151'] = func_4151
mod = relay.transform.InferType()(mod)
var_4152 = relay.var("var_4152", dtype = "float32", shape = (2184,))#candidate|4152|(2184,)|var|float32
output = func_4151(var_4152)
func_4153 = relay.Function([var_4152], output)
mutated_mod['func_4153'] = func_4153
mutated_mod = relay.transform.InferType()(mutated_mod)
func_597_call = mod.get_global_var('func_597')
func_599_call = mutated_mod.get_global_var('func_599')
call_4166 = relay.TupleGetItem(func_597_call(), 1)
call_4167 = relay.TupleGetItem(func_599_call(), 1)
output = call_4166
output2 = call_4167
func_4177 = relay.Function([], output)
mod['func_4177'] = func_4177
mod = relay.transform.InferType()(mod)
output = func_4177()
func_4178 = relay.Function([], output)
mutated_mod['func_4178'] = func_4178
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1186_call = mod.get_global_var('func_1186')
func_1187_call = mutated_mod.get_global_var('func_1187')
call_4179 = func_1186_call()
call_4180 = func_1186_call()
func_1107_call = mod.get_global_var('func_1107')
func_1109_call = mutated_mod.get_global_var('func_1109')
call_4182 = func_1107_call()
call_4183 = func_1107_call()
output = relay.Tuple([call_4179,call_4182,])
output2 = relay.Tuple([call_4180,call_4183,])
func_4187 = relay.Function([], output)
mod['func_4187'] = func_4187
mod = relay.transform.InferType()(mod)
output = func_4187()
func_4188 = relay.Function([], output)
mutated_mod['func_4188'] = func_4188
mutated_mod = relay.transform.InferType()(mutated_mod)
func_99_call = mod.get_global_var('func_99')
func_101_call = mutated_mod.get_global_var('func_101')
call_4192 = func_99_call()
call_4193 = func_99_call()
output = call_4192
output2 = call_4193
func_4194 = relay.Function([], output)
mod['func_4194'] = func_4194
mod = relay.transform.InferType()(mod)
output = func_4194()
func_4195 = relay.Function([], output)
mutated_mod['func_4195'] = func_4195
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4231 = relay.var("var_4231", dtype = "float32", shape = (7, 1, 5))#candidate|4231|(7, 1, 5)|var|float32
uop_4232 = relay.asinh(var_4231.astype('float32')) # shape=(7, 1, 5)
output = uop_4232
output2 = uop_4232
func_4239 = relay.Function([var_4231,], output)
mod['func_4239'] = func_4239
mod = relay.transform.InferType()(mod)
var_4240 = relay.var("var_4240", dtype = "float32", shape = (7, 1, 5))#candidate|4240|(7, 1, 5)|var|float32
output = func_4239(var_4240)
func_4241 = relay.Function([var_4240], output)
mutated_mod['func_4241'] = func_4241
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3094_call = mod.get_global_var('func_3094')
func_3096_call = mutated_mod.get_global_var('func_3096')
call_4260 = relay.TupleGetItem(func_3094_call(), 0)
call_4261 = relay.TupleGetItem(func_3096_call(), 0)
output = call_4260
output2 = call_4261
func_4268 = relay.Function([], output)
mod['func_4268'] = func_4268
mod = relay.transform.InferType()(mod)
mutated_mod['func_4268'] = func_4268
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4268_call = mutated_mod.get_global_var('func_4268')
call_4269 = func_4268_call()
output = call_4269
func_4270 = relay.Function([], output)
mutated_mod['func_4270'] = func_4270
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1747_call = mod.get_global_var('func_1747')
func_1748_call = mutated_mod.get_global_var('func_1748')
call_4333 = relay.TupleGetItem(func_1747_call(), 1)
call_4334 = relay.TupleGetItem(func_1748_call(), 1)
var_4349 = relay.var("var_4349", dtype = "float32", shape = (14, 2, 12))#candidate|4349|(14, 2, 12)|var|float32
bop_4350 = relay.greater(call_4333.astype('bool'), var_4349.astype('bool')) # shape=(14, 2, 12)
bop_4353 = relay.greater(call_4334.astype('bool'), var_4349.astype('bool')) # shape=(14, 2, 12)
func_2674_call = mod.get_global_var('func_2674')
func_2676_call = mutated_mod.get_global_var('func_2676')
call_4354 = relay.TupleGetItem(func_2674_call(), 0)
call_4355 = relay.TupleGetItem(func_2676_call(), 0)
bop_4356 = relay.logical_or(var_4349.astype('bool'), call_4333.astype('bool')) # shape=(14, 2, 12)
bop_4359 = relay.logical_or(var_4349.astype('bool'), call_4334.astype('bool')) # shape=(14, 2, 12)
uop_4361 = relay.log10(call_4333.astype('float64')) # shape=(14, 1, 12)
uop_4363 = relay.log10(call_4334.astype('float64')) # shape=(14, 1, 12)
output = relay.Tuple([bop_4350,call_4354,bop_4356,uop_4361,])
output2 = relay.Tuple([bop_4353,call_4355,bop_4359,uop_4363,])
func_4369 = relay.Function([var_4349,], output)
mod['func_4369'] = func_4369
mod = relay.transform.InferType()(mod)
var_4370 = relay.var("var_4370", dtype = "float32", shape = (14, 2, 12))#candidate|4370|(14, 2, 12)|var|float32
output = func_4369(var_4370)
func_4371 = relay.Function([var_4370], output)
mutated_mod['func_4371'] = func_4371
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3213_call = mod.get_global_var('func_3213')
func_3214_call = mutated_mod.get_global_var('func_3214')
call_4376 = relay.TupleGetItem(func_3213_call(), 0)
call_4377 = relay.TupleGetItem(func_3214_call(), 0)
const_4392 = relay.const([[[-4.250829,-9.351385,8.877394,-3.990133,-3.833268,7.519317,-1.000505,-7.835632,-2.579511,-6.854653,8.896419,-2.519411],[4.648179,-1.203821,1.454455,4.252483,8.673513,3.210114,0.112835,-7.287983,5.615678,-7.730256,-9.038226,-2.447052]],[[6.328165,8.043750,8.211328,7.882754,3.382864,-2.215812,-0.263980,-2.131175,4.488582,-0.140238,2.475517,-1.978604],[-9.943109,-6.250312,0.209691,9.770154,6.236060,-2.079777,-8.438398,2.792277,1.595468,-6.587932,-3.706214,-5.869998]],[[-3.595351,-7.407370,7.400554,-9.863311,1.218013,-5.576753,5.777267,0.023014,-7.875724,5.750834,-4.366107,-1.663335],[-0.468832,4.764044,-5.626193,-1.384190,-5.921413,-6.312350,5.521402,4.402274,-6.867311,-3.952557,3.715619,-1.708452]],[[9.665820,1.546896,1.619564,4.653906,-0.955385,-2.662172,-7.149466,-3.440661,4.878784,-4.968944,5.368910,0.383579],[-3.250632,-1.021858,-0.618686,1.230984,-9.728516,0.513305,4.306017,-4.794953,5.952447,-1.357264,2.352000,-8.911703]],[[9.918968,-1.177328,-5.160068,-4.783755,0.674868,-1.581696,-5.235399,8.633685,-3.182677,-3.383997,9.682269,-5.322449],[0.273255,3.897386,9.522319,2.516525,-1.904471,6.595510,7.889202,3.230900,-8.119889,-3.099606,-8.693104,-9.060402]],[[-4.017223,-3.570853,1.480573,-8.401457,2.632795,3.803860,1.787962,9.793127,-7.916930,-9.769925,8.578457,-8.568552],[-8.194307,-7.990782,-6.201759,6.909124,1.842054,2.909043,-8.102195,7.391353,2.552829,-9.657848,0.496625,-3.810085]],[[5.709901,8.221025,4.596956,-2.224634,6.281349,-9.343217,9.228406,-2.916206,7.439378,8.657970,-8.600904,6.020007],[-4.739066,-2.931308,1.675252,7.212211,-3.320731,4.181734,5.635724,8.757754,-2.117329,-6.703641,3.442785,-1.073860]],[[-8.731410,0.118117,-4.232044,-0.371740,-3.963839,-7.292042,-0.920350,-1.972560,2.148158,-7.541749,-7.973145,6.871420],[2.971715,-8.013465,-3.277810,0.340157,0.024669,0.103728,2.129453,-9.549546,2.042382,5.879398,-7.761727,-7.628380]],[[-6.195886,-7.764831,-1.884071,9.829740,-4.337791,-1.546252,0.631073,9.549450,-4.470651,-0.943297,7.646489,-3.386706],[-5.481022,-4.950207,1.876859,-6.700900,5.135587,-6.970630,-0.611864,9.010432,-4.918900,3.687044,6.762828,-5.489149]],[[-6.042911,9.155151,9.365060,-0.448077,1.742566,-4.920235,2.784961,-4.396867,-1.264606,-2.931976,1.225797,2.922282],[0.429660,2.863236,3.796007,5.676379,-2.606850,8.497316,-0.762621,2.815326,-3.516025,-7.828899,-9.626394,-2.792111]],[[-2.973400,4.852741,-8.924028,3.848623,-8.407429,-8.936853,-7.896396,7.092452,-7.435007,-8.199725,-1.120093,4.681337],[2.629279,-4.086536,-6.603384,-2.846323,6.281777,-0.660693,-3.756141,5.240861,-6.885439,3.172553,8.695079,-1.344794]],[[0.566120,-7.915394,-0.303660,2.694288,-0.728014,-4.080834,-7.299581,2.250176,-7.961240,-7.878313,5.445353,0.829433],[9.493652,-9.622632,6.921788,4.606963,2.054460,-6.584150,2.868941,9.892663,5.149966,-1.425902,3.210282,2.080290]],[[-1.719300,-1.226366,-6.395866,1.969988,-9.674817,-1.970037,-1.122623,2.902710,-8.515259,-4.780343,6.334137,5.762956],[9.530590,-3.151141,2.949442,-2.380676,1.798772,0.087213,8.096474,-7.201475,-9.161452,1.175502,-1.122041,-0.629823]],[[8.193646,-8.689450,-5.517693,6.644463,3.907016,-9.364751,-2.415651,-7.172297,-3.434592,9.194889,2.218702,8.008409],[-7.399452,-8.313045,8.574446,4.223298,1.092609,3.864277,1.592902,9.368484,5.938830,0.080889,6.660867,6.632417]]], dtype = "float32")#candidate|4392|(14, 2, 12)|const|float32
bop_4393 = relay.maximum(call_4376.astype('uint32'), const_4392.astype('uint32')) # shape=(14, 2, 12)
bop_4396 = relay.maximum(call_4377.astype('uint32'), const_4392.astype('uint32')) # shape=(14, 2, 12)
uop_4399 = relay.cosh(bop_4393.astype('float32')) # shape=(14, 2, 12)
uop_4401 = relay.cosh(bop_4396.astype('float32')) # shape=(14, 2, 12)
func_852_call = mod.get_global_var('func_852')
func_853_call = mutated_mod.get_global_var('func_853')
call_4406 = relay.TupleGetItem(func_852_call(), 2)
call_4407 = relay.TupleGetItem(func_853_call(), 2)
func_3076_call = mod.get_global_var('func_3076')
func_3077_call = mutated_mod.get_global_var('func_3077')
call_4419 = relay.TupleGetItem(func_3076_call(), 1)
call_4420 = relay.TupleGetItem(func_3077_call(), 1)
func_1296_call = mod.get_global_var('func_1296')
func_1298_call = mutated_mod.get_global_var('func_1298')
call_4430 = relay.TupleGetItem(func_1296_call(), 0)
call_4431 = relay.TupleGetItem(func_1298_call(), 0)
output = relay.Tuple([uop_4399,call_4406,call_4419,call_4430,])
output2 = relay.Tuple([uop_4401,call_4407,call_4420,call_4431,])
func_4439 = relay.Function([], output)
mod['func_4439'] = func_4439
mod = relay.transform.InferType()(mod)
output = func_4439()
func_4440 = relay.Function([], output)
mutated_mod['func_4440'] = func_4440
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3446_call = mod.get_global_var('func_3446')
func_3448_call = mutated_mod.get_global_var('func_3448')
call_4445 = func_3446_call()
call_4446 = func_3446_call()
output = call_4445
output2 = call_4446
func_4447 = relay.Function([], output)
mod['func_4447'] = func_4447
mod = relay.transform.InferType()(mod)
output = func_4447()
func_4448 = relay.Function([], output)
mutated_mod['func_4448'] = func_4448
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2788_call = mod.get_global_var('func_2788')
func_2789_call = mutated_mod.get_global_var('func_2789')
call_4457 = relay.TupleGetItem(func_2788_call(), 0)
call_4458 = relay.TupleGetItem(func_2789_call(), 0)
var_4471 = relay.var("var_4471", dtype = "float32", shape = (14, 6, 12))#candidate|4471|(14, 6, 12)|var|float32
bop_4472 = relay.bitwise_xor(call_4457.astype('uint64'), var_4471.astype('uint64')) # shape=(14, 6, 12)
bop_4475 = relay.bitwise_xor(call_4458.astype('uint64'), var_4471.astype('uint64')) # shape=(14, 6, 12)
func_852_call = mod.get_global_var('func_852')
func_853_call = mutated_mod.get_global_var('func_853')
call_4476 = relay.TupleGetItem(func_852_call(), 0)
call_4477 = relay.TupleGetItem(func_853_call(), 0)
uop_4493 = relay.acosh(var_4471.astype('float32')) # shape=(14, 6, 12)
func_2218_call = mod.get_global_var('func_2218')
func_2219_call = mutated_mod.get_global_var('func_2219')
call_4504 = relay.TupleGetItem(func_2218_call(), 0)
call_4505 = relay.TupleGetItem(func_2219_call(), 0)
bop_4521 = relay.maximum(var_4471.astype('int64'), call_4457.astype('int64')) # shape=(14, 6, 12)
bop_4524 = relay.maximum(var_4471.astype('int64'), call_4458.astype('int64')) # shape=(14, 6, 12)
output = relay.Tuple([bop_4472,call_4476,uop_4493,call_4504,bop_4521,])
output2 = relay.Tuple([bop_4475,call_4477,uop_4493,call_4505,bop_4524,])
func_4539 = relay.Function([var_4471,], output)
mod['func_4539'] = func_4539
mod = relay.transform.InferType()(mod)
var_4540 = relay.var("var_4540", dtype = "float32", shape = (14, 6, 12))#candidate|4540|(14, 6, 12)|var|float32
output = func_4539(var_4540)
func_4541 = relay.Function([var_4540], output)
mutated_mod['func_4541'] = func_4541
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2459_call = mod.get_global_var('func_2459')
func_2460_call = mutated_mod.get_global_var('func_2460')
call_4568 = relay.TupleGetItem(func_2459_call(), 1)
call_4569 = relay.TupleGetItem(func_2460_call(), 1)
func_1107_call = mod.get_global_var('func_1107')
func_1109_call = mutated_mod.get_global_var('func_1109')
call_4577 = func_1107_call()
call_4578 = func_1107_call()
output = relay.Tuple([call_4568,call_4577,])
output2 = relay.Tuple([call_4569,call_4578,])
func_4586 = relay.Function([], output)
mod['func_4586'] = func_4586
mod = relay.transform.InferType()(mod)
mutated_mod['func_4586'] = func_4586
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4586_call = mutated_mod.get_global_var('func_4586')
call_4587 = func_4586_call()
output = call_4587
func_4588 = relay.Function([], output)
mutated_mod['func_4588'] = func_4588
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2674_call = mod.get_global_var('func_2674')
func_2676_call = mutated_mod.get_global_var('func_2676')
call_4589 = relay.TupleGetItem(func_2674_call(), 0)
call_4590 = relay.TupleGetItem(func_2676_call(), 0)
output = relay.Tuple([call_4589,])
output2 = relay.Tuple([call_4590,])
func_4604 = relay.Function([], output)
mod['func_4604'] = func_4604
mod = relay.transform.InferType()(mod)
mutated_mod['func_4604'] = func_4604
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4604_call = mutated_mod.get_global_var('func_4604')
call_4605 = func_4604_call()
output = call_4605
func_4606 = relay.Function([], output)
mutated_mod['func_4606'] = func_4606
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3540_call = mod.get_global_var('func_3540')
func_3542_call = mutated_mod.get_global_var('func_3542')
call_4660 = relay.TupleGetItem(func_3540_call(), 0)
call_4661 = relay.TupleGetItem(func_3542_call(), 0)
output = call_4660
output2 = call_4661
func_4664 = relay.Function([], output)
mod['func_4664'] = func_4664
mod = relay.transform.InferType()(mod)
output = func_4664()
func_4665 = relay.Function([], output)
mutated_mod['func_4665'] = func_4665
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4194_call = mod.get_global_var('func_4194')
func_4195_call = mutated_mod.get_global_var('func_4195')
call_4683 = func_4194_call()
call_4684 = func_4194_call()
func_4539_call = mod.get_global_var('func_4539')
func_4541_call = mutated_mod.get_global_var('func_4541')
var_4691 = relay.var("var_4691", dtype = "float32", shape = (1008,))#candidate|4691|(1008,)|var|float32
call_4690 = relay.TupleGetItem(func_4539_call(relay.reshape(var_4691.astype('float32'), [14, 6, 12])), 0)
call_4692 = relay.TupleGetItem(func_4541_call(relay.reshape(var_4691.astype('float32'), [14, 6, 12])), 0)
func_2218_call = mod.get_global_var('func_2218')
func_2219_call = mutated_mod.get_global_var('func_2219')
call_4709 = relay.TupleGetItem(func_2218_call(), 0)
call_4710 = relay.TupleGetItem(func_2219_call(), 0)
output = relay.Tuple([call_4683,call_4690,var_4691,call_4709,])
output2 = relay.Tuple([call_4684,call_4692,var_4691,call_4710,])
func_4711 = relay.Function([var_4691,], output)
mod['func_4711'] = func_4711
mod = relay.transform.InferType()(mod)
var_4712 = relay.var("var_4712", dtype = "float32", shape = (1008,))#candidate|4712|(1008,)|var|float32
output = func_4711(var_4712)
func_4713 = relay.Function([var_4712], output)
mutated_mod['func_4713'] = func_4713
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3857_call = mod.get_global_var('func_3857')
func_3858_call = mutated_mod.get_global_var('func_3858')
call_4728 = relay.TupleGetItem(func_3857_call(), 0)
call_4729 = relay.TupleGetItem(func_3858_call(), 0)
output = call_4728
output2 = call_4729
func_4737 = relay.Function([], output)
mod['func_4737'] = func_4737
mod = relay.transform.InferType()(mod)
mutated_mod['func_4737'] = func_4737
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4737_call = mutated_mod.get_global_var('func_4737')
call_4738 = func_4737_call()
output = call_4738
func_4739 = relay.Function([], output)
mutated_mod['func_4739'] = func_4739
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3094_call = mod.get_global_var('func_3094')
func_3096_call = mutated_mod.get_global_var('func_3096')
call_4744 = relay.TupleGetItem(func_3094_call(), 0)
call_4745 = relay.TupleGetItem(func_3096_call(), 0)
func_533_call = mod.get_global_var('func_533')
func_537_call = mutated_mod.get_global_var('func_537')
const_4751 = relay.const([-6.039837,7.114120,7.100390,8.689444,9.735296,-7.732111,6.119094,-1.836708,7.346136,1.456435,8.044589,-7.566211,-8.394852,4.299129,5.353084,-6.874034,3.362521,4.761627,1.984429,-7.152971,4.230370,-3.902385,4.562987,7.932226,0.115058,-3.026266,-3.345645,-7.792769,1.455779,1.012960,-5.835261,2.433383,5.981772,-7.753166,2.313780,2.267878,-8.933653,-1.092275,-9.399760,-7.001483,-5.924545,-2.656115,1.537253,7.662456,-9.025844,8.520151,0.951470,5.132752,4.507151,5.926552,-7.900621,7.874723,-5.071219,4.832498,3.942340,-4.970998,-8.518337,-6.522428,2.270661,3.457721,-6.310154,-6.792068,0.897622,-0.128641,-4.483002,8.075795,1.030685,3.541531,-7.468241,-1.319520,-0.122232,9.545591,-6.278172,-1.136636,-2.305351,8.828291,-7.699005,-9.674282,0.928869,-3.042292,-9.203194,6.424030,-1.202599,5.298814,2.166342,-5.223554,-4.053187,-3.817003,9.652671,-2.981773,-8.558449,1.193757,8.342938,-4.462563,-6.537669,-1.890181,6.156361,-0.075432,-9.967701,-1.208785,-6.327934,9.653269,0.840833,2.993274,-0.808114,-1.270957,6.684858,1.356213,8.070845,-6.239663,-0.637368,-3.905121,-8.702808,0.961713,-0.557169,-1.573221,-3.347478,5.860368,5.363437,9.689911,-8.912459,2.869538,7.270872,-3.362837,-5.096316,-2.342663,-3.971086,-0.874078,-7.633224,8.018437,-6.835140,2.659059,-1.289912,-4.443268,3.708795,7.414388,6.215693,0.586051,-3.518143,2.363943,-1.363608,0.066205,-2.221833,8.900463,-3.629461,4.853735,-9.980929,0.383360,9.217904,5.323137,0.377579,-3.267163,8.009146,3.121335,5.453099,-9.531091,8.561616,-0.136017,-1.362989,-1.384565,2.122225,3.552827,-4.452188,-2.334977,-4.624793,-5.290209,-8.521915,-9.623289,-7.373040,5.848882,-6.940527,-2.141084,-0.047882,4.989640,-7.847339,4.256382,7.482442,-1.779276,0.869880,7.078563,-0.797075,-6.181119,-6.324350,-8.083866,-8.459100,-3.917127,2.080568,-2.712755,-4.128937,-0.808442,3.912089,-3.432170,-9.524645,-6.749033,6.560827,9.889332,4.677350,-0.903966,-8.664284,0.491410,0.559648,7.306955,-8.722294,-3.019698,0.091000,5.853756,-0.617216,4.510110,-1.358953,-6.706787,3.842786,5.464779,1.809775,-1.524634,-2.546176,1.984648,-0.836780,9.096948,-6.947185,7.720406,-1.045702,7.605730,-1.207686,-9.293156,-1.107676,-1.591504,-3.715578,6.116162,1.517163,-2.773637,7.054819,3.353105,-3.649104,-3.481092,-4.464486,0.277843,-7.596529,7.644044,1.751417,-0.066710,9.205478,-2.235321,-3.855412,0.047168,2.960665,-9.379613,7.001793,-9.422502,-1.330184,1.230360,-2.311181,1.097421,2.298128,4.060636,-6.090289,-5.553719,-3.199225,-6.877113,-4.992176,7.687349,5.498932,-1.562608,0.816559,-6.351631,2.141777,8.720589,-9.100461,6.040639,6.437713,0.367417,-3.608496,1.325197,-2.235555,4.953553,-1.454668,-1.214557,-6.592271,-8.317122,-2.825040,1.942663,-0.476831,6.562769,-4.477116,-4.425440,-8.728051,8.710411,-7.022471,6.492814,-5.499444,3.587322,4.599110,-9.644325,3.854081,-8.043551,-6.747839,3.825509,-2.033814,0.039991,1.090165,-3.325145,7.221936,-7.675456,2.437815,-4.309347,8.164362,-9.282464,-9.857684,-8.422757,6.836211,8.700620,6.490284,1.930464,8.951774,-5.207189,-1.860283,-0.359951,-7.298247,8.157435,4.534743,-6.005623,-1.730035,8.142347,1.341497,-0.247802,-5.707775,-1.863559,-4.644845,3.580701,1.965348,0.725329,7.898087,6.666751,-3.101199,0.204993,1.731462,-7.659581,-6.619726,-5.901663,-1.302050,-0.161761,-4.527313,-9.408920,-9.023651,-4.936086,6.400855,-4.098662,-9.550304,-3.525138,-8.418037,-1.174604,7.952432,4.511697,-3.923809,-4.652601,-4.899851,-3.428198,4.203468,-8.863450,-7.776399,8.469704,-4.177897,-0.712538,-5.034344,2.092087,-1.821589,-2.761338,2.980048,4.754152,0.743029,-1.612251,5.603109,-5.740773,9.294165,-0.354760,5.123213,2.858488,2.729912,-2.719589,-8.230987,2.911382,1.270960,6.088610,9.921485,4.786575,-8.422173,0.869957,-1.110624,-4.046094,-7.374603,3.080966,5.667023,1.347230,3.873965,-1.299075,2.804657,-5.702051,9.966873,9.685070,7.402887,1.721313,-7.403487,7.177832,-2.596890,-0.071198,-3.742485,-5.303739,-2.497312,1.797170,-4.623672,-8.511825,2.683693,-4.264298,-3.685095,5.959202,-0.498867,7.152849,8.913077,8.871215,-0.852138,-8.586114,-1.534766,-1.461706,-2.004499,-4.310531,5.059348,7.325881,2.110147,6.318588,2.754575,3.821138,8.118456,4.893477,0.280122,-3.893205,-0.212242,4.006569,-5.615781,-4.410979,3.600659,8.585561,3.209927,6.967398,-0.009519,-2.285525,5.133006,-4.159150,-6.399263,-8.702780,-1.900032,8.153749,9.203840,6.181575,4.449530,8.009119,-8.093571,1.435232,3.671824,2.486789,-1.333943,0.748999,1.920491,-1.332295,0.110345,-0.275085,-9.887511,7.647246,-0.843005,5.737102,-7.549828,-0.514055,4.406362,-6.348800,-4.486452,-7.032394,0.393548,-5.237315,9.047934,-5.383706,3.235329,1.702269,-9.082240,-9.157458,4.509970,-9.530998,-2.800189,8.283760,3.982044,-7.394121,2.177257,-7.478218,-0.068053,4.514015,2.217848,6.637761,-6.118029,-6.063075,0.554358,0.546090,-7.627934,-2.429350,-2.189475,-7.399682,7.347235,1.111302,-7.042710,0.981332,7.771360,-0.536835,-1.499524,0.383982,-8.718825,9.443552,-4.436880,9.842419,5.050880,9.421895,2.952748,4.238091,-0.071545,9.103060,-1.170107,-4.078819,7.863095,-3.745905,-9.760579,1.782595,-5.801928,-4.693957,2.321234,2.125764,7.133336,0.394487,5.389086,1.840639,7.488250,-7.336814,0.153214,4.973142,0.682000,-6.495999,-9.858701,0.893329,-9.117751,3.333285,6.228915,-7.919863,-8.345409,0.761727,-0.679354,9.019482,2.616745,4.495649,-8.697619,5.427631,1.842985,9.386794,1.734468,-9.152925,-3.264600,-6.693150,-5.745341,-6.440149,-1.903769,-3.973008,-2.445730,-4.729632,1.802067,-5.805063,4.205142,-4.874162,0.078141,-5.440259,-5.552788,8.363741,-8.570117,-2.432922,-8.874584,5.529494,-2.727390,-7.561121,-8.541964,-7.525891,-4.702712,9.417272,-0.292763,-8.433619,-3.502093,1.529432,3.918508,2.268907,-5.427082,6.096021,9.944101,2.344425,-6.640717,-7.885743,-1.398541,4.557804,-9.360298,-2.806513,-0.838163,-6.099394,9.491134,9.990242,-1.200527,4.843561,-9.995282,-1.799432,2.656330,1.460609,4.568169,-7.764499,-6.579853,-8.537311,8.504119,1.918814,-0.426137,-8.092474,0.463590,-4.507209,-3.388090,-2.229796,-3.916591,-7.013352,-8.096516,-3.260193,-3.331676,-3.101187,-5.866135,4.685141,3.629737,1.096752,-0.134558,-3.499033,6.754458,-2.914212,-9.618722,-2.195171,9.961297,-9.860130,-2.231164,2.389560,-6.885407,7.479207,-0.891158,-3.374978,2.683194,1.492345,4.398355,-4.014147,3.834547,-0.611421,2.455753,-4.463201,-7.894324,3.106911,2.686893,6.929565,-2.821661,-9.930132,9.687704,-7.219284,-0.462902,-0.002846,5.757906,-0.689140,1.254662,-4.138066,9.782368,9.573364,-9.295632,-0.755592,2.850278,7.070548,-9.109851,6.898139,-5.121710,4.709232,1.951073,-5.821479,-5.527576,2.792345,9.558151,-0.503049,3.432351,-0.571867,-1.680455,3.767216,-4.141270,5.691428,9.210277,-5.388186,5.722767,-1.118107,-1.742000,0.790786,-0.209665,-2.316002,9.207363,-9.891972,0.166467,-7.912096,-1.620472,9.021399,-7.170323,2.963990,3.056359,8.473198,0.528824,-7.210943,-7.788414,-5.028982,-2.506358,-1.453059,-9.673461,-9.335026,-2.636743,9.325968,4.282353,9.560256,-4.273416,4.571095,3.776617,-1.656708,-6.050699,-2.468558,-3.622475,8.220436,4.193116,-2.776861,0.672701,4.186922,3.935802,-1.980143,-4.088154,-8.172930,-3.220548,-3.750375,-3.065464,2.088498,4.315312,9.899041,-6.045690,9.660401,3.549775,1.830964,-0.310654,-5.794542,-4.309539,-0.140816,-6.865405,6.887788,-5.611922,-0.915938,-4.525276,-8.373304,3.885195,7.418067,-2.631541,-7.360815,9.687398,-9.181440,-8.832751,9.981250,2.375692,6.512369,1.126660,7.670533,8.338377,-5.290966,5.534673,8.057337,2.951259,-9.301607,7.282745,1.300271,6.490617,0.043246,-0.578969,-7.100039,-8.005782,7.146024,-3.876278,-6.297523,0.727913,5.619110,6.770667,7.216872,0.749125,-2.194014,-2.690758,3.904425,-3.550552,-4.318497,-2.245187,-9.883112,-7.145940,-8.183422,-2.839632,-0.888880,4.203647,-0.868518,3.229374,5.105518,-9.450554,8.274800,5.268782,-2.117520,3.528833,-2.185130,7.982952,0.560582,3.088875,-6.058126,-2.459990,5.402276,-7.529458,-4.239153,6.839889,-5.478662,5.097705,2.229116,2.693494,-7.387761,-7.785822,-4.434302,-4.474786,6.629229,5.246224,6.329828,4.361743,1.692386,8.289909,4.860149,-7.316390,-8.269238,4.981459,-3.660083,2.004108,-6.662093,-2.713748,3.621237,-4.291792,-6.045234,-6.445455,2.039720,-3.138311,5.950195,-0.556553,-1.454530,-7.996114,-1.127662,-1.931392,-7.942804,-9.818052,9.976641,3.933653,5.897900,-7.963315,2.561757,0.544798,-7.039345,-9.847805,6.263523,-0.763159,1.351747,-1.939289,-6.849034,-3.422824,-4.848788,8.645883,8.000617,-9.616409,-6.969658,-9.501033,9.093509,-7.695481,5.827426,9.897966,3.895181,7.403383,8.707719,5.846773,-1.463479,-8.097115,-0.307993,2.831824,7.141740,-2.849165,-7.059521,4.423561,-0.805439,6.681636,-9.754051,4.912792,-5.412234,-4.338209,-6.411973,3.152526,-7.654237,-8.825485,-2.381879,-3.288823,9.532860,6.784197,-0.488960,-4.815761,7.918726,-7.105235,-6.228078,0.039604,-5.995787,-9.531366,9.970674,-8.005152,-6.275465,-4.533244,-1.135751,-4.106265,8.483638,9.085964,-2.561123,0.013312,7.696324,-8.041448,8.285769,-0.430439,6.611187,-0.674955,-6.354057,-4.579132,7.616228,5.089756,-9.434189,-8.741686,-4.470823,8.415660,8.261814,-4.500115,-5.316744,-4.965450,-0.800158,-6.264458,-0.324396,4.143371,5.426431,6.250135,-9.366136,-8.213393,-0.155115,2.105346,-6.095241,5.210968,1.919445,-9.079649,-7.664863,9.793413,7.727625,4.738355,-8.274702,-4.566531,-1.038666,3.392527,9.839676,4.073119,-6.292126,-2.616966,0.650809,-6.080111,3.519747,6.575961,4.829084,-0.203468,-5.766269,-6.611295,-6.077716,-7.144331,-1.707859,-5.083591,0.912787,2.926257,-2.855629,-4.362609,-8.847707,-7.817351,4.158425,3.829193,-0.699666,8.846238,7.554198,1.602722,-6.137224,8.985621,4.209052,-5.221425,3.721116,-7.515588,6.397644,-2.615964,7.477272,0.486449,-0.622423,-9.438300,5.592446,4.962417,2.369448,-9.850773,-5.577739,0.782254,2.996844,-2.114734,5.478480,-3.708919,7.659573,-0.277982,0.073030,3.364683,4.371058,-0.942319,2.598524,1.962601,8.463584,-9.240761,8.743058,2.302366,-9.156344,-1.404065,2.917797,-3.163836,7.881204,2.977382,6.020678,-6.955856,-5.483904,1.449321,-9.498773,9.955335,-0.111212,8.417653,2.150455,6.204413,-0.881445,3.252853,-1.373908,-7.412394,8.371886,0.531168,-4.077238,9.108909,-3.917239,-7.416940,3.540789,-5.588227,5.652297,-6.631294,7.075864,-6.392772,0.363768,6.113411,-8.715643,1.679382,8.304212,-4.582606,-2.459775,0.298146,-7.936979,1.888236,1.641297,3.640353,9.412484,8.148384,7.117923,-0.399968,7.535671,8.489686,4.793384,5.594047,8.362542,-0.246403,7.621626,-7.741565,6.696855,-8.034430,-5.293388,5.014272,5.221153,-7.525299,8.692757,3.465433,-1.310147,-6.104981,2.354153,-5.568742,7.521254,-0.358775,-1.559446,-8.146110,-5.524188,-5.843589,-3.556728,-1.153534,-7.052544,0.165152,0.950302,3.722128,4.127802,8.256240,0.590181,7.301928,-7.795985,-2.030618,-9.462354,-1.776781,6.562721,2.285606,-4.020969,5.751777,-3.657651,-8.626282,9.293755,3.523557,8.781409,9.559942,7.083407,0.663145,-7.015287,-8.925286,-7.909584,6.319307,-2.897577,-0.830997,-3.291687,7.333955,-6.781672,-3.954178,5.402644,-3.789805,-9.438349,-7.683922,-4.608978,5.657937,3.704672,3.288672,-5.647515,0.878769,-6.093877,5.993527,9.291696,4.670394,6.079599,7.126525,-6.782065,4.270810,3.960051,-7.193479,-8.722925,-2.022735,8.734440,9.692000,-6.469377,-3.607332,-6.574266,2.396521,8.093984,0.038428,-6.209790,7.180761,-5.443665,3.318558,-5.662726,4.432211,0.464165,-3.358145,-8.849453,-4.813411,-6.543596,7.751997,-1.155365,-0.900417,6.614320,-7.860765,-9.618281,-3.220684,6.008304,-6.682050,2.274455,-3.088605,2.808140,-7.665278,-6.977072,-8.185718,8.734758,-0.857872,-1.031561,6.661530,-4.346911,7.854407,-8.242325,-6.613375,6.064788,4.090481,-7.554251,4.713361,7.492188,0.993371,-8.118018,-7.540510,7.179308,-4.317074,-6.715477,-0.667718,5.225526,7.576958,1.834737,3.724257,8.374058,-7.092600,-0.452089,9.596552,2.902591,-9.292469,6.522404,6.315503,8.343820,-8.738536,-0.203382,-6.697391,5.428534,6.584296,2.744762,1.162510,0.509442,8.620032,-2.033941,7.106474,5.207539,8.707207,2.460611,-5.711662,-2.044978,-3.028558,7.142655,9.984120,-3.361128,7.688586,7.822646,-2.278438,-2.631494,3.897519,3.505963,-5.996710,-1.700040,5.545598,6.871379,-7.183091,-5.175860,-6.210736,0.123080,-1.564547,-6.634131,-8.020044,3.893528,-0.114667,-5.318115,-7.048554,3.330285,-1.743455,-8.148133,7.798988,5.193933,-3.019782,-9.016695,1.206843,-8.187183,2.042157,-4.499871,-1.591095,4.755315,6.497761,-4.109334,1.334434,3.053617,7.922811,4.274385,2.226272,-1.450342,-8.195063,-5.734549,2.181719,-5.387632,2.283933,-4.752678,-2.251421,-2.894388,3.474607,8.002650,-5.470072,-4.968025,-6.774741,-0.964603,8.427902,7.349221,7.123361,6.871681,-7.181503,-3.946790,-3.956524,-9.842775,-1.744422,1.124538,9.741933,-6.948122,9.494610,-2.241008,-0.885994,8.516319,3.711879,1.590814,-8.446847,6.398819,-6.268047,-7.432331,-5.717652,9.955326,2.429422,-9.160539,7.701947,5.824707,-2.897035,0.855906,-8.719371,-1.951867,8.313667,3.535707,-5.546085,8.977894,-1.703954,-8.599862,-9.122423,3.481932,-4.090171,-9.028804,-9.194265,-0.066989,3.855429,6.622291,-4.730740,-3.034773,7.307352,6.629233,-3.534032,1.916684,-5.845291,-7.779613,0.120040,-2.004858,3.081153,-3.742868,-4.857883,-0.684016,-5.138348,-1.333456,3.844069,-8.438398,-2.714945,6.531659,-3.893376,3.913553,-8.272063,7.050825,8.363346,7.955246,0.322814,-6.576400,-6.944006,7.328933,-2.880611,9.716627,-5.450423,-4.198017,8.976010,-0.966091,-2.335969,-1.986501,7.141541,3.572796,1.024274,7.893374,-2.063963,5.148947,7.341246,2.767179,-0.744790,1.751543,-8.342137,6.810650,2.766195,-1.687780,0.089291,-7.234628,-9.635526,5.342849,-2.044541,-5.987459,-2.904759,7.983655,3.390599,4.654024,6.824643,-1.009097,-5.565915,8.812635,7.270480,-6.866638,-3.308680,2.512754,-3.739403,2.543651,-5.285849,9.651982,1.301358,-4.014685,4.109013,-4.953735,-4.715076,-7.505823,-7.936206,6.500914,6.076955,-2.981421,-9.915197,3.688495,-9.744399,-8.657082,-6.845264,3.527608,-2.789475,-4.506984,0.534592,8.537442,-4.070007,-7.829113,6.387879,-5.677380,2.090267,9.265329,8.213378,-1.147040,0.858248,-9.117741,-0.899672,9.017678,6.425028,-8.912964,-3.850377,-6.122681,-9.060768,0.472903,-9.618076,-9.263508,-5.323495,-9.394649,-3.453507,5.340420,3.532060,-2.831611,8.264732,-9.667491,9.244257,2.892518,-2.728086,-5.256181,-1.423726,8.557432,-5.536047,7.568683,4.230025,-2.597743,-5.479604,8.008168,6.261758,-3.816376,4.710477,2.066999,4.216414,-9.150018,-5.825117,-4.087293,-0.476210,-6.267084,-2.430561,7.165119,2.808607,5.331234,5.657491,1.579857,-6.906201,1.818470,-3.111344,6.725223,7.951752,-0.802808,-6.306950,-2.094348,-5.970354,4.216260,-3.794986,-4.821904,-7.383732,-6.038395,-0.718833,-6.067960,1.280578,-6.400647,-6.031503,3.248260,4.500159,-8.261400,0.175523,-6.239973,3.342908,-5.589946,-0.938980,9.500384,-2.419945,-9.832737,7.936523,-5.773937,-0.304525,-8.595657,-8.532231,-6.438748,4.223709,7.614860,5.737196,-8.161149,-1.204329,2.693937,4.380779,4.851224,-2.612174,-8.912079,6.906659,-8.236734,2.018885,-3.449708,-1.348945,6.581437,3.963723,-9.983837,-1.640268,4.124161,7.438190,3.086307,7.676631,8.457604,-7.640541,2.451762,-4.463196,4.606360,4.025876,7.267125,-7.173974,6.598534,4.023338,0.519641,9.354816,-7.663983,6.756739,3.594772,4.147409,-9.925257,3.270505,9.648256,3.608136,2.396249,-1.330274,-8.862603,-8.981633,5.882451,-1.640148,1.024599,1.829116,-8.365007,-7.001603,-5.414977,-8.426855,9.665136,-7.713770,2.367397,-7.857942,-8.258195,0.111406,4.589794,0.653850,-3.361375,4.752782,6.665403,6.449663,0.248707,5.106685,8.538438,-5.620752,2.695603,1.093905,-5.548475,-7.538480,5.883464,-8.090873,1.161894,6.364133,7.321507,8.112097,3.502932,-5.218801,-6.421254,-1.865905,-4.288899,5.141740,-2.405295,-0.456902,-2.688678,6.290478,7.683760,-0.758867,1.489358,-2.387279,8.973439,2.650107,-2.760815,5.590493,-2.910623,5.207150,0.884894,-8.337229,0.706236,-1.081263,0.249285,4.657639,0.071249,6.561838,9.588313,6.018143,-4.328797,-8.566561,5.807439,4.008281,3.173331,-8.010398,8.983832,-1.403268,7.847082,-1.103648,7.665195,7.388226,-1.482651,3.720269,-1.375668,-4.700042,-7.071890,-8.128124,-6.583358,7.546647,-3.230182,-0.896677,-1.201373,-0.460381,-6.917396,5.355773,6.479726,-7.352859,9.216135,9.342675,6.681726,-6.268950,-4.400940,9.252817,3.784704,1.401146,-1.010516,1.254015,-9.455855,-2.999084,1.849098,-4.160742,8.982615,-0.738665,0.566045,-9.052899,9.532962,-2.994614,7.533940,-9.580302,-6.599884,-5.700515,-4.029483,7.402237,-1.741212,5.076246,9.573707,-1.705520,-4.571596,-5.913512,-7.826204,-9.426506,0.735560,-3.982823,-7.848301,7.829102,-7.740814,0.708225,-7.556011,8.956272,4.880938,-8.454036,5.903778,8.774091,1.650902,3.465254,-3.536366,7.006713,-1.827285,6.381115,-6.959770,1.878008,-8.095899,9.642886,8.180342,0.365580,8.954358,-3.040824,-9.029617,1.491026,0.142336,-6.128897,-7.245789,4.790414,0.775996,-9.495042,-7.080012,-5.702148,-8.858911,5.801123,-9.059262,-0.236886,-0.759674,-3.252099,-7.576426,-6.865279,-8.693709,-1.672313,-4.144948,0.774314,-9.281848,8.387008,1.843211,2.340578,-7.237746,-9.853341,-0.224072,-8.290682,0.308204,2.987334,-2.909648,3.163481,-9.659754,-8.397505,0.062051,-5.321401,1.200524,-0.420932,3.654748,-0.984856,-3.349901,4.807295,-0.856050,7.517685,-4.672468,1.468325,-6.217962,-1.739836,-9.366938,8.753017,-8.962029,0.695978,-2.966923,7.253362,-0.805325,4.834662,-8.257324,1.712078,-8.786113,-5.072340,2.655689,-6.516051,-1.239231,6.586792,6.515258,-2.592014,-9.573314,8.291026,-8.794365,3.551657,-6.322749,7.431790,0.571024,8.815646,-5.580914,-6.308620,-0.302998,9.154562,8.837897,5.389511,-8.306242,8.639502,-3.697343,2.992966,2.081568,3.226358,0.510860,-9.512739,8.302968,-3.203171,5.863445,8.581107,7.666675,-8.016408,2.875549,2.467785,4.664548,3.963462,6.364481,-0.500025,2.884175,4.159391,2.829884,8.370451,4.757674,-1.713347,-7.085131,-6.076974,-4.176797,3.319878,9.423869,1.257005,1.756878,-8.777640,7.768285,9.648288,-8.525019,6.791882,-9.563505,-1.756592,7.043945,-7.658050,-4.765448,2.783596,5.137062,2.638287,-4.032397,4.459852,7.123989,-2.998682,9.864287,7.320133,-0.974198,9.590361,4.318750,6.261688,-6.057770,-6.009980,-0.089370,8.801104,-6.171282,-3.012223,-9.548622,-0.523200,7.557418,-6.950670,-4.002888,-3.688255,9.919435,9.740177,1.316599,3.505529,-4.235351,1.800284,9.414757,-7.585299,9.543095,-5.664080,8.471493,8.164703,-2.023796,0.143000,1.952697,1.574233,4.207171,8.933670,9.080547,-6.361339,-7.226677,8.292448,-3.594279,-3.442933,-7.515301,3.977120,9.362178,5.256247,2.652515,3.419443,-7.204527,4.389780,7.980646,7.890402,3.769369,4.956916,5.581278,7.753073,-5.819090,8.093176,4.180178,-6.037567,0.319584,-4.088450,-7.647213,7.354151,-8.322098,-2.336302,0.096784,6.642117,9.155806,-2.636461,5.097241,3.602201,9.870626,-2.690312,0.698205,-2.650029,-2.558511,1.458759,-8.982286,-7.953797,4.557565,-7.260804,-3.273612,2.119456,-2.798212,-1.497003,-4.471277,-6.434384,-9.210766,-0.717608,8.679167,-9.656242,7.892099,4.460039,-1.218829,-9.111413,-7.775906,-9.939094,-9.382272,6.189220,9.083889,-8.370888,1.394062,-0.014488,-5.124334,8.347382,9.869940,4.930239,-1.169513,-0.928538,-1.168636,-1.149435,8.512734,6.445883,4.411867,2.049329,-2.074788,-6.954741,-5.559818,8.758522,2.151216,-7.767775,-0.199688,7.445411,-0.745238,9.182655,-3.487910,-3.297677,-3.153772,-6.959492,-8.721226,1.190684,2.760398,-0.609600,-7.037429,-2.144520,-9.037212,-6.850704,6.012753,0.951274,1.848588,-9.187481,9.474527,7.091020,9.938457,5.924368,8.567728,-1.148086,-1.238001,-5.354072,3.432273,-1.590417,-1.084534,-0.870821,-3.682645,2.185769,0.231521,0.479015,-2.152212,-8.747001,-1.792415,2.318548,-2.624314,4.657414,-7.931783,5.001528,-2.457655,-6.438090,-0.487683,-6.360499,-9.444920,-2.743893,-4.403753,-6.794602,2.409611,-6.734348,-9.201622,7.058874,7.383342,9.844569,2.665129,7.494464,-3.880568,-5.681124,1.416588,5.377090,-6.380846,6.494502,-9.726109,-7.582250,-3.943953,9.676576,-3.522459,-2.958444,5.486061,-4.197916,-4.788580,0.922800,3.680173,-2.377012,-7.695144,-3.283283,5.507514,2.647873,-9.465954,9.343346,-1.023275,7.409728,-8.157836,5.685191,-7.346943,-6.029449,1.580340,3.879983,7.957491,3.404590,-9.073189,-6.552933,5.300967,1.904453,4.017524,6.456082,7.663349,9.577531,-4.956279,-6.966043,-0.991682,5.781651,-1.495168,-6.267196,-9.710632,8.884115,6.152650,8.960867,-4.249128,-9.118586,1.617065,7.410082,2.424059,-1.373954,6.533488,-0.834421,0.967001,-6.212078,-1.288313,0.718949,-7.437920,8.958143,5.978476,8.826190,9.717132,8.462703,8.211306,-6.047902,7.895821,-6.600260,1.936864,-1.756562,-4.436896,-3.440407,5.380739,-7.566509,-2.040839,-7.470710,-6.634472,3.208841,7.653493,-0.201081,-2.944937,6.950056,-2.115408,-0.722479,-4.366818,-9.151950,8.374771,-2.676963,8.152082,7.901285,-1.527903,0.189314,8.576724,5.252850,4.599650,8.608891,-4.191473,-9.541928,-2.259826,-3.584930,2.794482,5.057321,7.843272,-7.045191,-8.123758,-5.593565,0.660530,7.386126,7.489435,4.848174,7.732509,-8.989450,-9.945007,-1.687575,8.669725,9.413886,6.870179,-7.216448,-1.173308,1.505279,-5.173217,-7.990286,6.529367,-4.609386,-1.954956,-6.528193,-9.072768,0.772518,8.332945,2.418554,-8.512123,7.115913,7.382246,-4.182167,-7.369789,7.433932,3.643015,-2.321888,5.177885,8.043655,0.974104,7.150703,-6.465447,-2.873087,-3.600038,8.253362,-8.670512,5.372298,-7.849320,-0.838409,2.822177,0.775127,4.230730,-0.255661,-4.497687,-5.575713,9.064614,0.210734,-3.382497,1.686202,7.916138,2.195551,6.096767,8.301364,-6.360704,3.596425,6.372150,-0.384982,-2.980244,-3.178192,3.476630,-1.295839,-3.010922,-1.433938,6.012431,-4.756158,-4.999654,8.859809,-4.575277,0.702238,-4.705915,-7.435086,1.773775,-7.877175,0.227367,-3.472646,7.690077,9.926156,-3.372232,-3.924382,5.068656,-6.114224,-7.372114,-9.416592,3.578227,7.977139,-2.804896,0.327957,-7.223843,1.626057,-9.762481,-2.602034,8.671362,-2.994864,-2.563511,6.697602,6.831795,2.451465,6.965805,-7.041414,-5.118652,-2.552373,8.214662,-6.986365,6.673267,-9.788909,-5.976322,2.053929,-0.778388,9.638842,-5.949880,3.615479,0.294476,9.156207,-4.699027,5.489659,6.787668,2.415074,1.389546,2.436987,2.146814,2.009335,-9.366908,9.394044,-6.630987,8.586753,-1.034024,-6.266719,-3.780156,-3.071818,1.694737,1.012213,-2.200234,2.560974,-7.578392,-0.115351,-2.927569,2.345967,5.829390,-0.529911,-6.208558,-1.349580,-0.953008,-0.176136,4.391137,9.244728,-1.909069,2.840654,7.073270,-5.162822,9.449401,7.239562,-8.360754,1.997907,-0.871687,6.499139,1.879397,7.047445,-1.833941,-2.994076,-0.105462,-9.719139,-5.181773,4.306673,0.853102,-2.531348,0.985493,-7.318283,-7.086322,2.879468,5.043658,3.348002,-8.864047,-6.181149,-9.203311,-5.450186,-4.717930,9.414925,9.735400,-4.183681,8.153547,2.688848,1.729452,-1.362182,3.006006,-7.913506,6.138730,-6.131247,-6.961035,-2.754447,9.932515,4.621403,-0.772057,4.069400,-4.990018,-4.879670,-9.892452,-6.152860,2.512978,1.593709,-2.810402,-4.679687,-1.378488,0.959168,2.063915,6.187893,3.184878,3.544831,-0.174879,2.657123,-7.552052,-8.762469,3.454607,-6.952034,1.287724,-0.685837,7.058345,9.324745,2.057990,-2.409111,7.312886,5.262028,8.685694,-0.782339,7.609796,-9.757995,6.065186,-2.971752,6.346839,8.765639,7.204513,-4.294394,-1.750239,-2.013311,-5.819491,3.383109,-7.743332,-9.216530,4.179099,5.869590,-5.733128,-1.388340,-0.821074,9.420431,-7.771646,2.523972,-5.765550,-5.376084,7.483976,-1.751106,-2.071044,5.356598,-3.685314,-0.630922,-5.791697,8.355804,5.157486,-8.291568,-4.185257,6.637736,5.879806,-6.465699,-4.937428,-7.188988,8.518863,5.937288,-1.970904,8.524107,3.358343,-1.758152,8.408076,-8.886837,-5.580066,9.595236,-4.489767,0.826925,6.218116,2.462514,-4.607147,8.048308,-2.082764,5.453905,-9.750429,-4.437475,-6.056913,9.227804,-8.441724,-1.642790,9.686453,3.590063,-0.552544,6.966773,5.852020,6.117537,-1.982407,6.929749,-9.919634,-6.670704,7.256266,-0.944358,9.133438,-2.982677,6.043079,-5.441010,-9.211667,7.411627,-4.713982,-9.613944,1.649444,-5.582786,-2.267268,4.361746,-6.149456,1.889410,-4.453867,-3.020198,-1.516859,3.897389,7.944866,-9.872490,1.200057,8.878714,-7.734149,9.817032,4.127442,8.373630,-7.600419,-1.134597,-6.593141,-6.576984,3.312674,7.942710,3.717117,-6.025128,-3.183198,-1.153060,-8.613467,-8.276891,1.256438,-4.963873,7.706850,7.486103,-5.113368,-8.094752,5.700138,2.698679,2.661494,-9.094468,8.028689,-8.468723,1.289258,-9.256185,-9.033505,-6.623876,-6.868635,-4.134143,5.034386,0.127091,-4.566161], dtype = "float32")#candidate|4751|(2520,)|const|float32
call_4750 = relay.TupleGetItem(func_533_call(relay.reshape(const_4751.astype('float32'), [6, 420]), relay.reshape(const_4751.astype('float32'), [2520,]), ), 2)
call_4752 = relay.TupleGetItem(func_537_call(relay.reshape(const_4751.astype('float32'), [6, 420]), relay.reshape(const_4751.astype('float32'), [2520,]), ), 2)
output = relay.Tuple([call_4744,call_4750,const_4751,])
output2 = relay.Tuple([call_4745,call_4752,const_4751,])
func_4754 = relay.Function([], output)
mod['func_4754'] = func_4754
mod = relay.transform.InferType()(mod)
mutated_mod['func_4754'] = func_4754
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4754_call = mutated_mod.get_global_var('func_4754')
call_4755 = func_4754_call()
output = call_4755
func_4756 = relay.Function([], output)
mutated_mod['func_4756'] = func_4756
mutated_mod = relay.transform.InferType()(mutated_mod)
func_735_call = mod.get_global_var('func_735')
func_736_call = mutated_mod.get_global_var('func_736')
call_4757 = relay.TupleGetItem(func_735_call(), 0)
call_4758 = relay.TupleGetItem(func_736_call(), 0)
func_969_call = mod.get_global_var('func_969')
func_972_call = mutated_mod.get_global_var('func_972')
const_4762 = relay.const([2.337499,0.574096,-5.037292,1.453388,2.098841,1.789416,5.353068,3.141751,7.255201,-7.497657,-6.760178,3.453998,1.823995,-6.869881,5.141639,0.111787,-9.058436,-1.271206,6.846252,5.382072,-7.271050,2.502217,-8.425214,4.522096,6.314104,-0.868796,6.314280,-8.088004,0.961591,7.489225,-2.371701,-8.378142,2.687936,9.177811,-5.082048,-0.015919,-3.744029,-1.771606,-3.504748,-8.464995,-6.269535,9.371185,-6.476410,-8.069335,-7.553692,-6.288983,7.844323,-9.300879,5.710050,9.704903,-0.537082,2.432309,3.758981,4.803521,2.681781,5.262467,-4.219517,4.642925,-5.986119,9.949974,-7.054599,4.869618,-5.705702,-1.200003,-7.669898,5.496311,5.148630,4.645064,0.097698,6.637994,-7.669138,-0.079702,4.861999,7.476876,3.837253,0.395843,3.519626,5.985664,-7.411097,6.986225,-5.398400,7.130699,2.761728,-5.606394,3.788062,-7.730843,1.824040,-4.264194,-1.227835,-0.100297,-1.375158,9.841860,1.467149,1.019380,6.843870,-5.852224,-6.401189,7.520418,-2.607150,-9.265663,3.018825,3.044445,5.633130,-4.025876,6.020335,4.551866,-4.635084,3.049875,-5.896585,2.269433,-9.351369,3.748365,6.722833,-3.694066,-4.286862,1.271549,7.901390,-7.382646,-8.015362,6.949247,-9.782032,-5.314566,7.712544,-7.967822,-0.622456,8.001538,6.698509,7.682832,-0.381868,-2.702941,-8.142187,-0.849264,-2.691584,-0.844800,6.780830,-3.927112,1.858701,-5.108923,0.997745,-6.289262,-3.626125,-5.111617,-2.514374,-8.929404,0.623189,0.265973,-2.170004,-8.328550,6.859176,-8.505500,-8.684694,-1.140013,9.056050,-2.101246,9.616391,-1.122204,4.721195,5.032341,9.285260,-7.373145,-7.959672,-1.057517,7.876929,1.843196,-7.364805,-6.692403,-2.176469,-3.488910,4.163450,-5.812356,3.076864,9.674820,9.284623,-6.946705,-8.534062,-9.527812,-8.050438,-1.765776,5.867256,-5.201951,8.015743,-2.271016,1.475043,8.322022,5.364588,5.768673,-2.210937,4.144992,4.975704,-6.749065,-9.796631,-6.206835,-7.155493,9.632869,-9.171493,5.585415,-5.702763,-6.488929,-0.048724,-5.053278,6.097539,-5.569791,-1.409004,-0.769308,8.391114,-9.611127,0.858195,-5.056229,1.155391,4.857165,-0.679166,5.961555,-3.950906,-2.380139,5.551663,-7.184675,3.803924,-9.961374,5.698084,8.029555,-9.458947,-8.734433,9.021295,2.027100,-9.070291,-2.247728,7.416852,3.460939,5.818053,-3.110901,1.442289,-9.509608,7.331826,-5.463182,4.471707,2.164388,2.029221,5.709478,-7.934253,0.238099,4.646196,4.130167,4.805855,-8.866826,4.303357,6.053869,1.151941,2.459185,4.993250,4.275586,1.686367,-2.025040,6.642822,5.496515,-5.378092,-9.766445,3.767978,-2.816905,7.842864,6.192203,9.914660,7.261303,-6.446620,7.584941,-6.035928,-7.336460,3.137478,6.565940,-0.714124,-6.731969,1.478063,-3.133861,7.898866,-8.070117,8.258187,2.394550,-5.754830,-2.584746,2.378261,-1.241138,-2.744935,1.771775,6.578892,-2.824684,-1.890847,-6.241737,-0.707898,-2.939512,4.776602,-2.414969,-2.024705,6.050968,-0.721756,-2.146437,3.278709,7.572385,9.147904,5.920889,6.942721,0.807666,1.436531,-2.775321,-9.741997,8.644443,5.278164,9.428368,7.038932,-5.179139], dtype = "float32")#candidate|4762|(308,)|const|float32
call_4761 = relay.TupleGetItem(func_969_call(relay.reshape(const_4762.astype('float32'), [154, 2])), 1)
call_4763 = relay.TupleGetItem(func_972_call(relay.reshape(const_4762.astype('float32'), [154, 2])), 1)
func_1186_call = mod.get_global_var('func_1186')
func_1187_call = mutated_mod.get_global_var('func_1187')
call_4764 = func_1186_call()
call_4765 = func_1186_call()
func_2337_call = mod.get_global_var('func_2337')
func_2339_call = mutated_mod.get_global_var('func_2339')
call_4787 = relay.TupleGetItem(func_2337_call(), 0)
call_4788 = relay.TupleGetItem(func_2339_call(), 0)
output = relay.Tuple([call_4757,call_4761,const_4762,call_4764,call_4787,])
output2 = relay.Tuple([call_4758,call_4763,const_4762,call_4765,call_4788,])
func_4800 = relay.Function([], output)
mod['func_4800'] = func_4800
mod = relay.transform.InferType()(mod)
output = func_4800()
func_4801 = relay.Function([], output)
mutated_mod['func_4801'] = func_4801
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2767_call = mod.get_global_var('func_2767')
func_2768_call = mutated_mod.get_global_var('func_2768')
call_4884 = relay.TupleGetItem(func_2767_call(), 0)
call_4885 = relay.TupleGetItem(func_2768_call(), 0)
var_4912 = relay.var("var_4912", dtype = "int16", shape = (14, 3, 12))#candidate|4912|(14, 3, 12)|var|int16
bop_4913 = relay.add(call_4884.astype('uint64'), relay.reshape(var_4912.astype('uint64'), relay.shape_of(call_4884))) # shape=(14, 3, 12)
bop_4916 = relay.add(call_4885.astype('uint64'), relay.reshape(var_4912.astype('uint64'), relay.shape_of(call_4885))) # shape=(14, 3, 12)
func_1296_call = mod.get_global_var('func_1296')
func_1298_call = mutated_mod.get_global_var('func_1298')
call_4923 = relay.TupleGetItem(func_1296_call(), 0)
call_4924 = relay.TupleGetItem(func_1298_call(), 0)
output = relay.Tuple([bop_4913,call_4923,])
output2 = relay.Tuple([bop_4916,call_4924,])
func_4926 = relay.Function([var_4912,], output)
mod['func_4926'] = func_4926
mod = relay.transform.InferType()(mod)
mutated_mod['func_4926'] = func_4926
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4927 = relay.var("var_4927", dtype = "int16", shape = (14, 3, 12))#candidate|4927|(14, 3, 12)|var|int16
func_4926_call = mutated_mod.get_global_var('func_4926')
call_4928 = func_4926_call(var_4927)
output = call_4928
func_4929 = relay.Function([var_4927], output)
mutated_mod['func_4929'] = func_4929
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1285_call = mod.get_global_var('func_1285')
func_1287_call = mutated_mod.get_global_var('func_1287')
call_4953 = relay.TupleGetItem(func_1285_call(), 0)
call_4954 = relay.TupleGetItem(func_1287_call(), 0)
const_4957 = relay.constdtype = "float32")#candidate|4957|(14, 12, 12)|const|float32
bop_4958 = relay.floor_divide(call_4953.astype('float64'), const_4957.astype('float64')) # shape=(14, 12, 12)
bop_4961 = relay.floor_divide(call_4954.astype('float64'), const_4957.astype('float64')) # shape=(14, 12, 12)
uop_4963 = relay.log(const_4957.astype('float32')) # shape=(14, 12, 12)
func_2924_call = mod.get_global_var('func_2924')
func_2927_call = mutated_mod.get_global_var('func_2927')
var_4971 = relay.var("var_4971", dtype = "float64", shape = (784,))#candidate|4971|(784,)|var|float64
call_4970 = relay.TupleGetItem(func_2924_call(relay.reshape(var_4971.astype('float64'), [7, 16, 7])), 1)
call_4972 = relay.TupleGetItem(func_2927_call(relay.reshape(var_4971.astype('float64'), [7, 16, 7])), 1)
output = relay.Tuple([bop_4958,uop_4963,call_4970,var_4971,])
output2 = relay.Tuple([bop_4961,uop_4963,call_4972,var_4971,])
func_4976 = relay.Function([var_4971,], output)
mod['func_4976'] = func_4976
mod = relay.transform.InferType()(mod)
var_4977 = relay.var("var_4977", dtype = "float64", shape = (784,))#candidate|4977|(784,)|var|float64
output = func_4976(var_4977)
func_4978 = relay.Function([var_4977], output)
mutated_mod['func_4978'] = func_4978
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1079_call = mod.get_global_var('func_1079')
func_1081_call = mutated_mod.get_global_var('func_1081')
call_4993 = func_1079_call()
call_4994 = func_1079_call()
output = relay.Tuple([call_4993,])
output2 = relay.Tuple([call_4994,])
func_5010 = relay.Function([], output)
mod['func_5010'] = func_5010
mod = relay.transform.InferType()(mod)
output = func_5010()
func_5011 = relay.Function([], output)
mutated_mod['func_5011'] = func_5011
mutated_mod = relay.transform.InferType()(mutated_mod)
func_862_call = mod.get_global_var('func_862')
func_864_call = mutated_mod.get_global_var('func_864')
call_5014 = relay.TupleGetItem(func_862_call(), 0)
call_5015 = relay.TupleGetItem(func_864_call(), 0)
func_4034_call = mod.get_global_var('func_4034')
func_4037_call = mutated_mod.get_global_var('func_4037')
var_5023 = relay.var("var_5023", dtype = "float32", shape = (2016,))#candidate|5023|(2016,)|var|float32
call_5022 = relay.TupleGetItem(func_4034_call(relay.reshape(var_5023.astype('float32'), [14, 12, 12])), 0)
call_5024 = relay.TupleGetItem(func_4037_call(relay.reshape(var_5023.astype('float32'), [14, 12, 12])), 0)
const_5052 = relay.const([3.790655,7.360838,4.977279,7.292327,-2.672715,9.793435,9.180083,8.518706,-5.023933,-7.883405,4.317053,3.929026,-1.317219,4.996496,-2.803023,-7.869877,8.922222,-7.345933,6.465538,-4.209234,2.864621,-7.262140,0.710266,-9.846515,-3.858010,-9.166638,-2.190565,9.469698,-6.794636,-6.324632,7.468750,-2.459963,-0.698940,4.622315,-3.963792,-2.078338,-2.337568,-9.200236,-4.466071,5.301544,9.136250,0.032174,3.934931,-1.277742,9.040631,9.567966,4.884884,8.130478,-5.242901,0.811899,-0.309781,7.601873,-8.210904,-1.880691,-2.213985,-7.850228,0.242128,8.052379,-3.419684,-1.429613,-7.438282,7.466770,-9.452531,-8.307296,9.810472,5.527084,1.854881,-5.877264,5.886920,-6.503778,3.749931,8.237132,-0.366350,0.657537,3.905443,8.759948,1.596527,6.009824,4.477385,0.680990,-7.740628,2.374858,8.132483,0.220795,-2.112016,-3.145419,-8.212779,5.964693,-3.808950,-7.448572,-7.995083,4.410470,-4.053809,8.982467,-1.645716,-6.194450,-8.830996,-7.441438,-2.515301,-2.432319,-9.428609,-0.725434,-8.800934,9.277950,-0.723181,-3.295208,1.084699,8.327797,5.459146,-7.492244,3.531625,-0.132913,-2.182786,5.168146,-7.877539,8.624632,-1.557888,-3.880581,4.908678,5.555095,6.554504,1.392822,6.057692,-5.350722,9.554321,4.331514,7.908375,-0.146263,-1.114692,-3.215978,9.911046,0.386003,5.631393,8.252238,-4.036566,7.699854,-4.514536,-3.901856,7.063770,-8.998578,0.179903,9.978163,2.753433,-9.644822,3.345214,6.306914,7.805848,-4.887071,-4.275857,3.828504,-6.133510,-3.607182,4.286746,-2.764269,4.175750,-0.425589,-8.514046,7.136081,5.619964,-6.584957,2.325608,-6.744196,-7.902627,0.800303,-0.479839,9.166627,7.179371,2.488012,9.624173,9.171681,2.380266,1.227648,4.251094,2.052447,3.941356,2.456100,7.423750,0.016592,-1.378151,-8.379753,3.137951,1.322606,4.028660,-8.103909,5.084906,1.324436,0.793166,-9.820641,-7.089159,8.474337,7.962455,-9.804074,-4.896505,1.353483,-3.805277,8.065945,5.137615,9.136192,-0.964727,4.587592,9.230417,-5.360557,-7.563495,-4.171693,-1.620267,-3.395765,-5.943538,3.274328,-7.603766,-5.446794,-8.657064,-6.884559,-5.207806,3.449837,9.383509,-5.151218,4.904124,8.124468,-5.229925,-5.459775,-0.684123,-5.226730,8.004326,9.247147,-6.608324,0.662949,-8.163607,3.413992,8.295142,7.691706,0.363970,7.609988,-8.140697,-3.839839,-1.644147,4.949898,7.778230,-7.022160,7.814225,-9.179025,3.257383,1.667405,-3.328444,-1.969505,0.660823,-6.712222,-3.492972,3.115574,9.955267,0.909195,6.950121,-1.797737,-7.436494,8.802550,-4.780576,-8.759500,0.492834,2.686218,-4.803286,0.449919,1.466405,-3.909140,-4.899982,-6.828484,-2.703390,7.247568,2.716529,-8.620897,-2.707009,1.218692,-8.198387,-1.013995,5.365955,8.791922,-5.800860,1.897991,-4.383897,2.910823,-4.217755,-4.084850,2.458493,-3.661460,5.807283,-0.753617,-6.023803,7.669040,0.217428,9.583683,7.111716,-7.152297,6.528014,-1.882907,-8.632508,-5.257396,2.826912,7.073154,3.688644,7.584219,-6.810140,-1.451112,-7.230787,3.515000,-4.094191,-6.930661,5.957255,2.521560,9.096754,4.649468,7.009484,-5.381004,-8.980845,9.178120,8.397874,3.595341,-1.952859,-8.786437,7.781608,2.448820,-9.816603,2.686030,-4.503714,0.608928,-2.469440,9.175851,-0.969000,7.745110,0.869206,-4.754709,8.266137,8.412808,-3.732365,-0.993584,6.204191,8.141773,-0.536704,-7.960395,7.648378,-0.323026,-1.218417,8.251603,4.517953,4.804882,7.360509,4.075512,5.182963,-6.993545,-2.341585,5.267596,-0.757933,-8.162414,-3.813813,-4.418270,-7.977958,2.989400,-7.265611,7.433850,3.698655,0.148825,6.474918,-2.677579,1.353556,-0.641876,1.329374,3.649184,-1.050888,-9.473764,-1.465238,-3.873425,1.278720,3.970210,-1.829343,9.400806,-6.756381,-1.719131,3.397771,-7.996329,1.579621,3.504075,0.041247,6.060551,-2.273183,-6.193634,-8.869695,0.013833,-1.886683,0.887189,7.959629,4.037228,4.035484,0.131222,-3.900337,4.283235,-1.716512,-6.887545,-9.524278,0.252652,-4.305098,8.043965,-1.159815,-0.089666,-8.979595,1.753348,0.566977,0.779303,-2.173162,8.093169,-8.085334,1.854819,1.857913,-7.599673,8.899183,-8.919209,7.008347,-2.269864,-9.105146,3.956302,-1.051472,3.254969,9.953115,2.007541,3.190273,-5.464556,9.954020,3.920930,2.519050,-1.660134,0.899994,-5.802153,0.397514,4.282991,-7.244510,-3.012876,2.167330,-2.515799,-8.585309,6.807171,-1.413431,5.734859,7.441351,1.706373,7.197085,5.770654,-4.607236,1.173988,-2.707948,-3.432709,0.451355,6.187878,-6.767241,5.380122,2.370456,-4.576622,-3.285958,-7.661335,-4.515646,6.886346,2.252231,5.640960,-6.185237,0.761086,7.397312,3.340317,-0.681765,2.932282,-8.829605,0.755319,3.648128,-0.616364,-1.955935,3.669925,-9.211367,-7.253065,3.862949,4.980461,-2.554384,-0.293755,-4.999259,6.170637,2.087552,8.066161,1.280719,3.401613,6.528002,9.775607,-8.062565,-4.346641,6.310136,4.097420,-9.347708,-6.733883,2.561749,-0.261301,8.318546,2.528741,4.192350,-5.001946,5.481332,5.310338,1.339978,-1.393196,-9.866214,-2.445455,1.861690,-0.384039,7.081388,6.950283,-8.868674,-6.199806,9.004108,-9.297114,7.289679,1.339470,-2.460794,9.210835,7.573410,-5.746457,-9.793235,2.971300,-5.074442,-1.497829,3.030660,-2.113704,1.438529,1.226937,-3.716596,3.824188,-1.557041,0.253734,-5.520540,5.362521,-9.955632,0.967064,-5.260486,9.419459,-5.563275,-0.360830,5.615480,7.384794,-7.219328,1.107290,-1.215665,-7.647242,7.113764,-7.915918,-3.639372,-8.433059,1.573459,5.149988,-5.093381,-2.643198,-1.861169,-3.466663,4.584193,3.187388,-6.877630,2.305417,8.061220,-7.538013,0.736827,-7.240390,-5.402276,-4.261621,-7.382905,9.181033,-7.171244,-6.111782,7.404558,-4.917754,-5.788786,-1.755436,-5.590702,-0.862171,3.200909,1.216913,4.737174,-2.299533,-5.606253,6.839706,-7.346539,3.785068,-6.603719,-4.828352,5.782080,-7.036525,-8.990511,-1.497888,-6.593423,-1.403850,1.231740,-5.323319,-6.595648,-0.477989,-7.416070,7.352812,7.628260,9.040696,-9.541366,1.025231,1.520501,-3.542279,-3.814733,-1.340462,7.096013,-6.907276,-6.827961,2.596703,1.613873,2.205588,7.000822,-4.211509,-9.019265,-1.439020,5.481283,-0.965027,1.251541,-7.303400,3.329240,0.602266,-5.219925,-0.465666,-3.616544,8.506474,7.292792,8.362283,1.048530,0.758049,-5.770143,2.439169,6.859576,-7.049838,-0.385085,-1.638046,9.389646,-4.913270,2.818688,3.213378,-4.771426,1.412976,8.876486,-3.942714,1.454984,-0.759994,6.594136,2.529835,7.359877,3.660479,5.494473,-2.482182,0.696652,-2.440591,9.717819,0.358526,-2.432501,3.229376,4.457826,-5.568722,-5.529039,-1.751295,-2.919596,-7.307432,3.899361,1.301775,-5.721428,-6.846260,-8.675345,-6.164935,-7.660817,8.221129,8.647092,-2.237104,-9.755565,2.901232,-2.791120,-1.605492,3.976347,-7.788049,4.056725,2.466194,4.855376,9.795581,-9.859470,5.785820,8.343589,2.394786,-0.531287,-1.634671,4.419860,7.577918,6.906009,-9.110051,-5.494684,-6.933779,4.422744,9.407201,0.528503,-4.891679,7.876901,-6.767504,5.620399,2.393200,7.557969,-6.579389,2.075625,-4.153338,-1.796016,8.597938,-6.702545,-1.861275,-2.245733,-7.160705,-2.025706,7.638660,9.701288,4.537885,-5.010469,-2.640174,-3.232900,-3.006713,-0.386967,-7.880371,3.994089,6.212540,5.877762,6.117772,-4.172407,4.870141,4.663249,-4.164247,-8.900154,8.980440,-5.204491,4.132680,-3.124860,-9.200623,-1.951229,1.271092,-2.935531,7.166156,-4.227832,2.929693,0.815277,-3.992793,-7.502272,2.601389,-1.628850,0.382350,-3.532227,8.455530,-2.099003,2.567272,-6.623118,-1.903165,3.884238,7.060532,5.519855,-8.956738,5.413747,1.350924,4.337067,9.188006,7.142743,-9.685546,9.550903,-6.819724,1.625439,-6.130053,8.633490,5.472964,2.887831,-4.919653,6.448330,2.989245,4.557421,-8.775526,7.829125,-6.337214,-0.086956,-2.122530,-4.319266,9.012057,-0.053232,-2.273583,9.079710,-7.653635,-7.578235,6.665553,-1.540738,-5.858166,3.582247,-1.344989,-5.415250,9.262149,-8.068054,-7.348031,-6.786941,-1.824817,-8.045714,-7.929871,-5.086994,-2.783294,-8.674387,5.058084,-2.283592,-1.567900,-8.832975,-3.090828,-9.457844,-2.801304,1.042225,4.812853,-8.566017,-9.911376,-7.781101,-3.860371,5.092877,8.231928,-5.125043,-0.502327,3.404348,-1.999137,-2.673899,-7.979271,-4.882078,5.391018,-5.123391,-3.845703,-4.697885,5.460026,6.391205,-1.742094,-2.285241,-1.982113,-0.872136,1.090098,-3.934863,2.840627,-5.540860,1.029172,-6.266748,-8.098217,4.834862,-5.503112,3.612885,3.153194,5.926244,7.779849,4.906364,6.844031,5.165671,9.670796,-2.249557,-8.542400,7.952033,-3.107659,-0.303602,-6.441886,9.069783,7.284781,-1.708701,3.976715,-9.826262,0.047154,0.275806,7.361497,1.965560,-5.236328,-3.260049,-1.527503,-8.745755,5.305020,7.400973,-1.555335,-8.834509,8.420002,-9.290254,7.134744,1.250322,3.262671,7.736300,0.865826,4.415208,-3.014555,-9.215044,4.806632,8.310506,1.110290,-9.631234,2.566106,-2.428209,2.292129,-1.492849,1.338509,1.399113,-6.358447,-0.284925,6.201293,9.026725,8.978128,-0.406475,-8.850365,0.252664,-0.521889,8.713843,9.590655,-0.549453,3.716467,7.589538,2.424791,6.824020,1.717907,8.157258,0.662362,-0.504506,8.642120,-6.698821,2.297037,1.717598,1.742841,1.460521,-0.981689,-7.520932,-2.465272,2.731462,-3.245072,9.901688,-3.377639,9.890490,2.998169,-8.784911,-5.733879,-9.831050,-2.515716,-5.003506,1.501255,-0.343115,9.685370,5.954613,-7.029752,8.447984,2.924394,-6.858489,-3.252207,9.519198,-4.724122,-2.296508,-4.065835,-7.184116,-6.036968,8.863372,-7.240932,-6.977616,-3.435783,-8.797156,-1.207658,7.053241,-2.608432,5.965709,3.495300,4.209932,-2.252043,5.249984,-8.374666,4.299410,-8.649087,-3.374994,6.175828,-2.441146,-4.496217,-9.024796,3.931420,-3.665014,-4.540088,-5.418856,3.189237,3.823870,6.444013,-6.386801,-2.378529,-3.537600,-9.701995,1.482368,6.468850,1.491334,-9.414199,-1.213201,-8.085435,-4.356066,-8.201206,-8.339467,-9.373105,7.816641,-0.362106,7.671596,-7.392280,4.837640,3.783231,-3.871734,7.302035,-1.552808,7.845612,9.857042,-1.520553,-9.748866,-8.756420,-5.966102,-6.438461,-9.809193,7.453334,4.607894,1.821691,6.835221,-4.882395,-0.912372,7.869300,0.881453,6.667790,-5.286004,-6.158688,9.283814,-1.827609,2.863982,1.648713,1.723547,-9.780201,-0.650101,-4.624621,-7.015105,0.753493,-0.890252,1.937228,-8.139615,-4.866180,-4.629826,5.179447,6.020751,9.115697,7.368250,-7.086017,-0.969129,5.965761,-8.571950,-3.947810,-6.617738,2.482658,-3.751781,8.757788,-7.570644,-3.633843,-1.685334,-9.609564,5.434061,8.093280,-3.337266,3.941267,-5.588086,-9.436187,-3.165437,9.572025,-8.747958,5.239468,4.269571,0.295603,-8.441290,7.668671,-3.000121,-5.603172,6.288561,-8.078165,1.585862,-6.492214,-4.656908,4.332666,4.572577,-4.538547,1.307029,3.212491,-8.410977,-0.601946,-0.182018,4.991354,0.637220,-6.379818,9.369882,7.962856,-8.689874,-5.348936,-8.393895,-7.019611,-0.359106,8.371514,-3.506027,4.228827,-5.581144,-0.603413,3.607499,0.938912,1.292223,6.119407,-0.599094,-7.622961,9.841704,1.406487,-2.933742,4.587399,-6.089259,-8.932168,3.893902,3.811138,-8.137530,-0.186668,-5.226470,-3.481725,4.107947,-6.922755,-1.720741,2.540345,-0.615282,6.891484,-1.164564,8.028554,-6.228895,7.281065,8.920783,4.756050,-6.582471,5.151727,8.350324,1.382879,-1.100408,-0.984634,-0.065533,-6.183508,-7.546427,4.534299,-2.292082,-1.355870,-7.314420,8.781911,-9.784614,3.424993,-0.903475,3.677279,1.938267,3.181845,3.265486,-9.854222,6.972456,-2.053872,7.962368,-7.756061,-9.858846,-3.975666,-4.714687,5.608273,-9.652197,-4.368215,2.705938,-5.003707,-8.080690,-3.431219,6.680617,3.128690,4.885193,-1.559341,0.109009,4.780301,6.289221,-4.555943,2.582776,2.859434,8.636378,-2.426432,4.652458,2.165310,-8.712671,7.055712,-0.972909,-8.408201,-4.086918,-7.445502,2.581417,-9.572431,8.523197,9.574560,-3.776458,-6.213862,-2.521506,-1.940745,0.565761,4.072711,-1.193791,1.570293,1.033592,-7.476954,7.197365,1.711573,-2.721359,9.491402,-6.934695,-7.831096,5.865217,-0.587065,-5.132605,-2.358979,-1.818571,4.850131,-7.902938,-3.955828,5.145448,-0.298433,7.505344,6.313918,8.710380,-5.434218,8.710306,-4.868278,8.867411,-9.461562,4.998446,-7.317019,-6.594963,-6.830021,-4.485700,-0.050856,-0.368481,-6.117495,-1.451557,3.187281,6.431594,-8.006392,0.946027,9.274892,6.859985,-1.574985,-9.095783,5.846764,-7.924915,-4.759556,-2.691804,-1.951953,3.677245,-7.180199,3.419459,4.112714,9.302958,6.652945,-4.145996,-4.454130,5.390610,-6.663282,4.383530,-3.924143,-5.201328,-7.695648,-5.607874,2.987978,-0.035798,5.978814,2.637832,-3.917902,-7.777350,9.685118,-1.536909,7.794440,-6.886472,-3.082295,7.209257,-3.979574,3.235096,-4.261378,0.592962,3.935394,0.224338,8.577748,5.552475,-5.337531,-8.162647,-8.372616,5.038411,-5.472542,6.472479,7.161312,0.281885,-7.511570,-2.318998,-9.866825,-6.716900,5.154764,2.066849,1.605269,-4.140951,-2.301887,1.027851,-3.342375,-3.722421,8.275607,7.428873,-4.741158,-3.789661,7.174527,4.118292,-2.520177,9.354053,-2.838563,9.414606,7.971176,0.943157,-2.461522,-4.089582,3.342005,4.023803,-1.627405,6.883877,2.903733,-3.906111,-4.828917,2.861795,1.098601,2.172840,4.184403,1.238516,-1.300746,-5.234773,-7.865931,8.003259,-7.727306,-4.916092,8.168298,1.483005,7.626272,6.455421,-4.381855,-1.083774,5.384325,5.146860,-5.819556,9.876084,5.684219,7.282613,-1.954371,7.827752,0.351233,-6.625554,9.418350,-5.251709,6.770083,-4.088980,-6.160603,9.826943,-5.184722,-6.809559,-5.007763,-3.337558,4.732576,6.392038,-2.629383,-0.623095,-5.667848,1.213867,8.164242,-6.232673,7.079751,-3.768841,4.310266,-0.237373,-2.600982,4.887770,-1.408701,-5.993190,5.837074,-0.032755,-0.819989,-2.587182,3.600202,-9.727264,5.874457,4.053692,5.181731,-2.913636,0.327199,3.391575,2.756865,-0.495265,-4.108450,5.653043,-5.900303,6.820617,4.426183,3.613985,6.721519,4.153610,-2.118353,-4.458099,-4.793285,3.605596,8.775956,5.419016,2.033353,-6.669310,-5.545648,6.070005,0.684197,1.446455,-0.655841,2.752490,-3.445073,-4.970996,4.178037,-5.398872,9.483666,-6.404843,-8.105185,4.713297,6.232505,7.439976,-9.426295,2.329619,-7.599933,-1.233388,1.220940,-4.397440,-5.432379,9.954193,6.975907,8.902213,6.156462,0.944679,2.737319,7.345851,2.128417,-2.198896,4.624218,7.929747,-0.495366,5.064511,-1.397728,2.686340,-4.714919,-2.865016,-4.284692,4.282889,3.816498,-7.884262,2.514247,-3.311802,-0.224054,-0.709722,-6.045705,3.637861,6.382510,-5.235933,9.286301,-2.779235,-5.039314,7.407662,-5.489392,-7.892463,-5.204283,-8.260591,-2.692003,-2.389141,6.458497,2.964280,-9.067862,-7.124433,5.034812,4.297962,-8.700803,-3.479482,9.739378,-4.872544,-0.143604,1.858917,1.438580,9.774942,-0.926026,-3.366418,-5.142989,8.843916,0.563314,2.995961,5.629530,1.146262,-6.186774,-4.679683,0.242244,-7.832702,-6.837709,-2.461133,8.631120,1.592180,5.747517,-9.725866,1.819632,4.536971,4.539845,1.991715,1.059245,4.621424,2.268718,4.319804,-4.240199,-0.039502,-0.059917,-2.371677,-3.051452,0.791331,5.078752,-6.832622,-2.386898,2.894951,-3.141798,-6.087049,3.077414,7.838339,0.952362,-4.043926,-9.535135,-0.844216,7.717468,6.492400,1.250588,-1.148985,-5.531109,4.301451,-2.431338,-5.838456,-3.558280,-2.229565,-9.354479,-1.787703,5.563301,8.904130,0.824585,-3.618019,-2.597101,7.398926,-0.762296,5.949396,-5.796373,8.908767,5.842069,2.686723,-3.141758,-5.772267,0.387608,2.052574,9.164999,5.217834,-5.789434,8.445868,3.371273,-5.051330,-6.092183,-2.593946,7.686842,2.321145,6.862755,-4.230178,0.167938,5.947517,2.562588,6.355207,5.519787,1.247144,-8.148006,4.417320,3.492290,1.286530,4.640213,-2.627592,-7.759375,0.785409,-9.141542,6.786152,-5.108203,6.518158,3.310634,-2.035961,6.786850,1.219639,3.193748,2.200175,-1.992639,-9.917935,-4.189504,-8.428434,5.469535,-6.985831,2.670820,9.299119,-9.131889,4.731853,6.355514,4.786789,-7.069022,-0.807560,4.073480,-1.541416,-8.814445,8.781591,-1.116251,0.970708,9.946387,7.790979,-4.038686,7.973068,2.978394,-6.240219,-8.300961,0.445352,-5.973308,-6.476755,6.703822,-0.939982,-5.756608,-5.242661,6.757247,-5.910615,-0.833506,-8.626623,-0.621012,1.921758,-8.801110,-0.457435,2.533351,0.262431,2.894412,4.571748,5.728120,-5.517876,6.036765,-3.064968,0.886893,-6.329570,-5.666518,-4.282461,-5.393150,4.391214,7.162025,8.862974,9.152343,9.131574,5.321925,-3.532279,-1.876393,-5.850476,2.420212,-2.188416,7.846920,-6.048881,8.216582,-9.885781,3.403231,2.811787,1.946866,7.939197,7.041452,3.809969,-6.816466,9.904293,-1.073769,-5.938031,-9.539917,-3.012063,4.302032,-8.742596,7.011222,-5.793223,-1.158913,-6.570256,6.271984,-4.353139,-2.145812,2.335253,6.795924,4.768512,-4.482703,-4.891512,-8.435471,-5.764664,8.747407,7.262931,6.638035,2.928697,7.674160,6.710616,-9.568803,5.087963,0.449724,7.340429,-5.978027,-7.464112,-6.558098,2.783224,-6.647605,5.607899,-0.448852,-3.562582,-2.578448,9.205339,9.884696,-6.154423,1.958539,-5.810432,-5.012545,9.884005,-2.078266,7.158093,-9.600618,-2.895363,-7.766244,0.213242,-0.749185,-8.622764,5.206519,-7.051619,-5.391993,-3.065782,-4.842502,-1.282262,-9.605335,4.317624,-4.618286,-8.448367,-8.235741,7.734047,-3.527314,3.679142,-6.353001,7.506495,-2.865159,8.094833,3.690112,-9.972001,-1.347330,-5.914225,-4.210991,-7.769024,7.095945,-9.324848,9.404061,-4.872314,-7.483783,-3.641454,-3.525505,-7.949880,7.295890,7.782034,-1.217475,-0.270957,4.701935,3.476859,5.537415,-1.094341,-0.322817,-0.149989,-7.663409,1.225126,-0.686729,1.370206,-0.431239,4.893479,8.910778,-7.343111,-6.714756,7.354013,2.139759,-4.871847,-2.981177,2.588415,9.220175,-8.310479,3.200859,-7.011758,0.616694,-1.644923,1.095060,6.193222,-6.738115,-7.087405,-2.490345,-2.535738,1.705636,-3.972773,3.588284,-6.446048,2.200242,-6.393625,8.193705,3.674600,7.008258,-5.538396,3.872590,4.604085,2.626929,3.683782,4.844853,7.497437,-2.918416,-1.528381,-6.117772,-0.288879,4.771719,-9.375168,4.561677,1.047422,2.649020,6.923643,8.258261,-6.464285,0.736883,5.166924,-0.157226,2.024481,-2.280009,-0.123837,-8.246552,4.381906,-6.640740,-0.328973,6.371895,-7.546402,8.271093,6.292472,-4.268372,1.643816,0.499390,5.654326,-2.311814,-4.882158,-5.330352,0.030089,7.976638,7.470952,-5.211257,1.348696,1.071364,-3.878803,-1.814729,-9.544303,3.385039,-7.624098,-3.793788,-8.621017,-5.961318,9.828595,-5.170286,3.778675,7.066075,5.288320,9.290355,0.608541,-3.318545,8.404997,-7.747437,4.400750,-6.381849,-6.615809,9.134463,7.397054,-7.308499,5.919331,3.657915,-0.029798,8.939075,-2.211524,7.993322,4.669826,7.134715,-3.240012,-8.469205,6.475082,5.905174,7.983167,6.590383,-1.209016,-1.122478,-0.575987,-0.149497,-8.871280,-6.201506,-3.942780,9.593297,0.356308,6.495690,-1.382567,3.377306,-2.099351,4.152149,-0.568423,-5.570891,-7.384113,-3.511788,-1.639053,-8.715012,-5.587904,2.897598,-9.641849,-6.338966,7.880950,4.893705,-4.299722,5.863011,6.201012,-0.369487,5.131032,-1.587178,5.838151,-1.970676,6.103897,0.474795,4.611056,4.358279,4.499643,4.415925,8.358557,-6.687876,-3.362909,-6.253867,-3.771501,6.769594,7.565764,-9.942982,-5.181425,-9.017449,8.945658,1.346247,-8.814407,-8.506396,-3.052869,-1.653717,-2.054711,2.992335,-2.837347,-1.824672,1.297829,8.990653,1.540796,3.588285,-2.737403,0.925185,2.308010,7.501416,8.640680,2.083956,7.769213,7.251626,-5.169018,-0.122306,-4.567267,-0.338097,-9.293633,-7.249852,7.149401,0.766626,0.775071,8.403107,2.013277,-7.755444,-2.170080,2.700318,0.180585,5.743249,3.047821,8.007965,-8.604796,2.191599,5.637141,-8.123140,-8.321618,-4.608635,-1.082219,-2.538236,-7.297800,0.876877,3.999919,4.863401,9.861520,-5.332081,-3.458231,4.305106,1.113415,-2.534753,-7.240974,0.994442,-5.792464,3.407463,5.228399,7.326430,-8.337068,-0.130190,0.767050,5.720775,-2.510387,6.745515,6.474210,3.039164,-7.260629,7.295485,-6.637272,2.231079,-8.368391,-2.032182,-7.975119,-6.473964,-1.170903,-9.721034,-2.037781,-5.464571,-8.674681,3.340416,-5.017723,-6.976054,-8.855726,-7.738456], dtype = "float32")#candidate|5052|(2016,)|const|float32
bop_5053 = relay.less_equal(var_5023.astype('bool'), relay.reshape(const_5052.astype('bool'), relay.shape_of(var_5023))) # shape=(2016,)
output = relay.Tuple([call_5014,call_5022,bop_5053,])
output2 = relay.Tuple([call_5015,call_5024,bop_5053,])
func_5056 = relay.Function([var_5023,], output)
mod['func_5056'] = func_5056
mod = relay.transform.InferType()(mod)
var_5057 = relay.var("var_5057", dtype = "float32", shape = (2016,))#candidate|5057|(2016,)|var|float32
output = func_5056(var_5057)
func_5058 = relay.Function([var_5057], output)
mutated_mod['func_5058'] = func_5058
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3343_call = mod.get_global_var('func_3343')
func_3345_call = mutated_mod.get_global_var('func_3345')
call_5073 = relay.TupleGetItem(func_3343_call(), 0)
call_5074 = relay.TupleGetItem(func_3345_call(), 0)
output = call_5073
output2 = call_5074
func_5077 = relay.Function([], output)
mod['func_5077'] = func_5077
mod = relay.transform.InferType()(mod)
mutated_mod['func_5077'] = func_5077
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5077_call = mutated_mod.get_global_var('func_5077')
call_5078 = func_5077_call()
output = call_5078
func_5079 = relay.Function([], output)
mutated_mod['func_5079'] = func_5079
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2767_call = mod.get_global_var('func_2767')
func_2768_call = mutated_mod.get_global_var('func_2768')
call_5082 = relay.TupleGetItem(func_2767_call(), 0)
call_5083 = relay.TupleGetItem(func_2768_call(), 0)
func_3540_call = mod.get_global_var('func_3540')
func_3542_call = mutated_mod.get_global_var('func_3542')
call_5091 = relay.TupleGetItem(func_3540_call(), 0)
call_5092 = relay.TupleGetItem(func_3542_call(), 0)
output = relay.Tuple([call_5082,call_5091,])
output2 = relay.Tuple([call_5083,call_5092,])
func_5096 = relay.Function([], output)
mod['func_5096'] = func_5096
mod = relay.transform.InferType()(mod)
mutated_mod['func_5096'] = func_5096
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5096_call = mutated_mod.get_global_var('func_5096')
call_5097 = func_5096_call()
output = call_5097
func_5098 = relay.Function([], output)
mutated_mod['func_5098'] = func_5098
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5096_call = mod.get_global_var('func_5096')
func_5098_call = mutated_mod.get_global_var('func_5098')
call_5099 = relay.TupleGetItem(func_5096_call(), 0)
call_5100 = relay.TupleGetItem(func_5098_call(), 0)
output = call_5099
output2 = call_5100
func_5110 = relay.Function([], output)
mod['func_5110'] = func_5110
mod = relay.transform.InferType()(mod)
output = func_5110()
func_5111 = relay.Function([], output)
mutated_mod['func_5111'] = func_5111
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5096_call = mod.get_global_var('func_5096')
func_5098_call = mutated_mod.get_global_var('func_5098')
call_5143 = relay.TupleGetItem(func_5096_call(), 1)
call_5144 = relay.TupleGetItem(func_5098_call(), 1)
func_4439_call = mod.get_global_var('func_4439')
func_4440_call = mutated_mod.get_global_var('func_4440')
call_5149 = relay.TupleGetItem(func_4439_call(), 0)
call_5150 = relay.TupleGetItem(func_4440_call(), 0)
bop_5155 = relay.less_equal(call_5149.astype('bool'), call_5143.astype('bool')) # shape=(14, 2, 12)
bop_5158 = relay.less_equal(call_5150.astype('bool'), call_5144.astype('bool')) # shape=(14, 2, 12)
func_2890_call = mod.get_global_var('func_2890')
func_2892_call = mutated_mod.get_global_var('func_2892')
call_5160 = relay.TupleGetItem(func_2890_call(), 0)
call_5161 = relay.TupleGetItem(func_2892_call(), 0)
func_1590_call = mod.get_global_var('func_1590')
func_1591_call = mutated_mod.get_global_var('func_1591')
call_5173 = relay.TupleGetItem(func_1590_call(), 1)
call_5174 = relay.TupleGetItem(func_1591_call(), 1)
var_5177 = relay.var("var_5177", dtype = "bool", shape = (14, 2, 12))#candidate|5177|(14, 2, 12)|var|bool
bop_5178 = relay.add(bop_5155.astype('uint64'), relay.reshape(var_5177.astype('uint64'), relay.shape_of(bop_5155))) # shape=(14, 2, 12)
bop_5181 = relay.add(bop_5158.astype('uint64'), relay.reshape(var_5177.astype('uint64'), relay.shape_of(bop_5158))) # shape=(14, 2, 12)
bop_5193 = relay.bitwise_or(bop_5178.astype('int32'), relay.reshape(var_5177.astype('int32'), relay.shape_of(bop_5178))) # shape=(14, 2, 12)
bop_5196 = relay.bitwise_or(bop_5181.astype('int32'), relay.reshape(var_5177.astype('int32'), relay.shape_of(bop_5181))) # shape=(14, 2, 12)
output = relay.Tuple([call_5160,call_5173,bop_5193,])
output2 = relay.Tuple([call_5161,call_5174,bop_5196,])
func_5202 = relay.Function([var_5177,], output)
mod['func_5202'] = func_5202
mod = relay.transform.InferType()(mod)
var_5203 = relay.var("var_5203", dtype = "bool", shape = (14, 2, 12))#candidate|5203|(14, 2, 12)|var|bool
output = func_5202(var_5203)
func_5204 = relay.Function([var_5203], output)
mutated_mod['func_5204'] = func_5204
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2767_call = mod.get_global_var('func_2767')
func_2768_call = mutated_mod.get_global_var('func_2768')
call_5220 = relay.TupleGetItem(func_2767_call(), 0)
call_5221 = relay.TupleGetItem(func_2768_call(), 0)
output = relay.Tuple([call_5220,])
output2 = relay.Tuple([call_5221,])
func_5222 = relay.Function([], output)
mod['func_5222'] = func_5222
mod = relay.transform.InferType()(mod)
output = func_5222()
func_5223 = relay.Function([], output)
mutated_mod['func_5223'] = func_5223
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5096_call = mod.get_global_var('func_5096')
func_5098_call = mutated_mod.get_global_var('func_5098')
call_5231 = relay.TupleGetItem(func_5096_call(), 0)
call_5232 = relay.TupleGetItem(func_5098_call(), 0)
output = relay.Tuple([call_5231,])
output2 = relay.Tuple([call_5232,])
func_5237 = relay.Function([], output)
mod['func_5237'] = func_5237
mod = relay.transform.InferType()(mod)
mutated_mod['func_5237'] = func_5237
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5237_call = mutated_mod.get_global_var('func_5237')
call_5238 = func_5237_call()
output = call_5238
func_5239 = relay.Function([], output)
mutated_mod['func_5239'] = func_5239
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3426_call = mod.get_global_var('func_3426')
func_3428_call = mutated_mod.get_global_var('func_3428')
call_5251 = relay.TupleGetItem(func_3426_call(), 0)
call_5252 = relay.TupleGetItem(func_3428_call(), 0)
uop_5261 = relay.sinh(call_5251.astype('float32')) # shape=(14, 1, 12)
uop_5263 = relay.sinh(call_5252.astype('float32')) # shape=(14, 1, 12)
func_4711_call = mod.get_global_var('func_4711')
func_4713_call = mutated_mod.get_global_var('func_4713')
const_5266 = relay.const([3.660896,2.346624,7.149013,-6.071121,-1.471020,7.855576,-7.835494,1.675598,-7.058581,-5.724519,2.738202,3.949214,-2.360869,-0.446549,-0.439305,5.687990,6.566108,7.289120,0.018930,-1.887802,6.707303,1.780162,1.174198,-7.923799,5.590930,-7.722293,7.283487,-0.545627,7.397332,-0.542211,-6.024815,2.568629,-1.732230,-0.377395,2.879744,9.053013,-0.533730,-6.389423,6.408294,-5.645530,3.214080,1.357717,-9.114278,8.998408,-0.203814,-8.674789,6.903257,6.357142,-6.717190,-2.241390,-4.147352,-6.986615,-6.218132,7.063635,-6.889162,-3.087985,-2.450646,-4.627312,9.788054,-1.719976,9.735081,-6.912314,5.774673,-6.302874,-6.711092,4.506176,-4.364333,7.301617,-5.591147,-1.153396,-2.607767,-8.792022,7.347824,-6.115143,-8.712917,-6.013962,6.451014,4.799109,-6.146735,-8.178936,-7.633608,-6.418462,3.137476,0.672628,-1.012288,-4.803466,-2.911459,8.121655,-3.718104,2.753924,-8.937775,-9.396600,-5.472910,-7.882280,-6.270773,1.541111,-0.938228,5.291959,-4.432448,5.255318,2.704311,3.434787,6.385657,3.435347,-5.971714,-6.619728,-0.163588,-2.512725,-0.148387,-2.852005,3.293166,4.346547,5.302357,-1.646383,4.099862,-4.423312,5.066697,8.168987,-0.105990,-1.174386,8.087002,2.689904,-3.495379,-0.494705,4.405587,1.529446,0.224355,-0.997398,4.473662,-2.075685,9.998884,5.998118,-7.938323,7.124428,1.993752,-1.661822,-9.117070,7.940545,0.456958,-9.439473,-8.919839,-0.065322,-9.172273,-7.880526,3.339508,2.705555,1.225669,4.680860,0.640394,-6.518078,8.125931,9.497011,-0.857267,-0.180982,-1.141711,-3.389560,-4.476931,-7.694228,-9.217607,-7.303075,2.698230,-7.445702,8.055741,6.596654,-7.285903,5.023344,-1.688104,3.819909,9.185086,-1.455112,-7.969691,-8.912873,0.401376,-4.107762,4.602713,7.764989,-9.293240,7.472464,-2.660940,-7.146182,-7.280287,-4.931693,-4.835600,-1.159775,0.820439,4.897900,8.895148,-8.250968,5.615301,-6.883779,5.520478,5.721984,2.909699,6.317607,5.818767,-6.999143,-5.617738,-2.643063,0.322462,-7.695369,-6.574734,-9.297274,-7.754204,-3.301845,8.128501,-8.290194,8.780580,-1.333115,3.656288,-0.475063,8.589726,-8.502975,8.452985,-0.184507,1.521600,6.774369,8.976284,-8.822471,-7.079716,1.375195,2.193052,-7.028393,4.671299,-8.985359,5.011291,-6.727781,4.747573,-2.096377,0.714354,3.014004,3.878545,-0.813139,3.196613,-5.945331,-4.128022,6.355328,-0.881851,-4.996263,6.949024,-2.023081,5.184295,2.106903,2.904787,2.064587,8.688524,-0.504143,4.951992,9.337178,2.748417,-0.899390,3.421856,6.247123,7.757288,8.491028,-6.782227,0.031928,-5.347298,3.428927,-0.347412,7.223975,8.159630,2.194185,-0.734349,9.572891,-5.118356,9.495090,-6.926767,7.610661,-3.537794,-7.003037,-5.287036,-9.196096,-3.583044,3.543092,-8.647307,-5.773154,-3.202230,-1.492711,-1.104283,-9.574638,7.952902,-7.550450,-4.720846,-9.965107,3.895295,-2.092834,-7.468069,-1.735569,-0.991223,-4.447766,-7.558137,-3.279320,-5.702559,-9.983882,2.549861,9.601553,-9.503309,-2.922448,-9.131806,-9.450161,4.219806,6.977398,4.835553,-1.131409,4.088808,1.606304,-3.146625,-6.889211,-0.028928,0.050609,2.097594,4.982766,7.343231,0.782350,-0.562429,3.816545,-2.318033,1.407694,-3.518464,2.896783,-5.538041,-0.988248,-2.139298,5.383706,8.090651,-2.341123,-7.829609,-6.081969,1.085693,6.829161,0.713349,1.517087,4.967759,-4.012846,5.034486,-8.537306,-2.705769,-4.992645,9.178197,2.947546,-3.347554,-0.997562,1.037235,-2.522581,-3.143924,-8.415172,-1.562347,8.094967,6.017596,-6.395435,3.290743,-2.766548,3.778191,-1.471511,1.260183,7.390611,-5.717472,-7.109985,-9.872571,-4.588321,-3.864593,7.612793,1.230454,-8.799522,-4.483420,5.179979,5.300845,5.249557,-0.784567,-4.863106,6.231409,6.030710,9.532977,-1.191084,8.241758,-6.995442,0.258515,-8.896447,-2.381439,1.262831,1.178293,-8.127857,6.679938,7.900947,8.935402,6.432308,7.559471,-3.419803,-6.918515,2.478125,-7.134384,6.530465,1.371764,-8.819842,-9.565391,-1.483166,-6.530903,1.646461,-9.947567,0.199508,-1.269027,-7.240600,1.618249,-1.287472,2.591290,7.296892,0.945982,-8.245336,1.175892,-5.801488,-5.422928,3.170546,1.219616,-4.500063,-7.169914,6.768012,-0.668236,-7.173023,3.186146,3.307534,-7.551796,-9.158027,5.378859,-8.729228,6.083048,3.071666,7.938499,-6.982407,7.889676,-6.895289,-2.236445,-5.042150,-3.083100,-4.152823,4.832302,-1.339259,2.046763,4.694025,7.108572,9.487217,-4.773903,6.420540,9.331417,-3.491380,-1.760811,-1.326886,-2.035995,-8.490588,-2.800224,-3.025552,-1.684311,9.403560,8.812130,0.610117,4.568402,6.370004,3.961374,5.164917,-4.734453,1.248158,0.721793,2.043476,-4.257889,-5.989529,2.333382,-0.624181,6.684634,9.795591,-1.677686,-1.787671,5.751040,2.976071,-7.334889,7.188016,-8.515759,1.430360,0.975799,3.026781,-7.671980,-9.281119,3.886243,-4.077861,-1.525535,6.282762,-1.785015,-8.031673,-9.991395,-5.983460,8.604414,5.814465,-1.379274,2.914752,-8.893460,2.405321,-3.561686,-2.000836,-3.043939,-2.287736,-2.263942,1.709709,0.919923,-9.595246,8.113941,-9.791579,-3.826928,-0.715659,0.180804,-3.869465,-8.833548,-8.399788,2.749966,-2.499314,3.630230,2.345763,6.237912,-5.453420,-0.307340,-5.775571,5.278073,-5.288435,-4.370942,-3.626930,-5.148979,2.721258,-0.150364,6.782121,-9.201602,9.333593,3.527586,0.346007,3.629563,1.935767,-7.312057,9.179361,4.228394,-2.220139,-4.425816,0.581471,5.457843,-7.914886,-8.685633,-7.663128,9.307345,6.455765,-9.455484,5.809909,-9.712422,3.820947,-2.666398,7.705975,2.283920,-9.562300,-7.418523,-6.757600,-5.874501,-8.803869,1.512383,-9.260268,-7.111489,1.763099,-7.792304,3.378803,0.440778,-4.991904,5.780858,6.313920,5.346083,4.464395,0.629487,3.498992,-6.280239,8.518931,-1.361337,-5.833126,6.688308,1.359361,6.133845,-4.124139,-6.944933,-0.724591,-3.650406,-6.035195,0.925697,-3.089283,9.045536,3.132071,7.321599,0.222725,-5.564654,-3.636733,7.248066,0.502467,-2.465135,-4.586814,-6.475500,1.313807,-4.378151,-7.809616,8.807709,3.150127,7.167675,-3.987533,5.886221,-9.852760,7.996982,3.486443,4.587977,5.330592,-0.723202,-8.695126,0.039023,-6.261062,4.424574,4.367029,8.292406,2.783062,5.269117,6.343879,-7.084895,-3.503185,-3.387540,-1.171821,2.278100,-4.019469,1.242315,-0.064126,-7.157329,6.899432,-2.632981,-0.262588,8.231330,-5.646286,8.497614,7.115747,5.115309,4.140479,9.020370,0.029577,-0.314494,-7.320565,-0.030374,-5.163518,5.455016,-8.967606,-6.745272,8.188637,6.676006,3.810421,7.295168,-1.893541,-5.547542,5.212309,0.805691,-8.794268,-2.918993,-6.584875,-1.158047,3.935395,-5.155905,8.543644,-6.724625,-5.563900,-0.828608,-8.709209,-2.203543,-4.474429,-2.366515,-2.269976,6.254296,8.829185,2.562930,-4.983245,-8.254547,-3.430975,-8.240703,-9.183364,-1.156707,-7.353508,-5.875478,9.696933,3.456361,5.476195,4.532956,8.374659,3.109255,-2.521500,-6.755687,-1.068267,-0.513924,2.752727,-4.508799,4.592249,-1.360760,8.286938,-9.483547,7.859180,-2.912698,8.949334,-5.623334,-9.824022,-5.058927,6.762295,-7.668590,8.594583,-8.451634,6.646786,-1.866619,8.773329,-1.329388,5.340440,4.405273,-3.788360,-6.186195,2.680489,-7.988528,-3.095104,-3.889722,-1.093634,1.230151,4.877799,-1.746304,-8.564213,2.788346,-3.561625,-8.974502,-2.786142,-8.267324,3.554749,9.916672,-5.402101,0.425173,-5.904475,-5.014518,-8.549975,-2.745911,4.639563,-3.254520,-4.149021,0.925259,3.299165,-7.684490,-0.324084,-9.742074,7.602251,-0.468135,5.481238,-4.454783,-8.132785,-4.019489,-8.995072,-8.286699,-3.121071,6.845453,0.093501,2.186726,-4.484961,-7.083259,-0.238155,2.493845,-7.022732,1.327310,4.561939,2.037698,-4.680116,-6.738549,2.493619,-0.499394,6.802134,-2.178277,2.075654,9.691288,6.811135,-2.279803,-4.390627,-3.586053,5.713440,-5.695600,2.578332,-6.028755,-6.353500,3.825131,-8.692069,2.797699,9.572365,-5.914493,9.240929,8.893268,5.315984,-9.405882,3.868355,3.828095,3.451028,3.473353,5.465342,-7.557523,-9.783525,9.493265,-4.491295,-0.554152,-2.164514,-9.856528,-5.101344,9.599628,8.786829,0.046527,-1.587407,2.899368,-7.599703,-4.042834,0.538952,1.696213,-2.987654,-4.219717,5.258401,5.214976,3.384308,0.151799,9.681778,2.564545,0.273320,4.731666,1.153348,1.985727,9.055468,-3.602217,-3.633751,-5.040637,-2.185382,2.779249,3.101525,-2.478040,-8.951934,-5.562327,-9.554012,-2.586251,-6.073732,1.726517,9.386051,7.772270,-1.729540,3.955459,-2.247400,-7.885242,-6.449542,-2.305642,-1.771417,-4.547990,4.101114,-6.042352,-4.931121,2.303936,-0.555875,1.699648,2.749184,-9.536868,-8.530440,-3.155597,7.132427,8.124485,2.643647,2.395230,-9.563326,-3.079671,-6.738931,5.289839,-5.989470,2.801380,9.591206,-6.475104,0.778206,7.086138,-2.282636,-4.716635,-3.783562,6.556994,-5.286355,9.996913,-7.476578,-1.831647,-8.262336,8.808282,-3.761797,0.642793,7.354299,-0.744154,-2.363172,-8.546290,7.339111,-2.259821,1.258106,1.715466,-4.870667,-1.343926,0.817953,5.270558,4.073735,-4.025342,1.190464,4.465362,1.747796,3.262431,7.751032,-6.554206,0.496228,-2.334497,-4.995636,-7.187446,-9.705909,4.646367,4.639444,1.305420,6.719064,-2.411326,7.943817,-0.457444,8.354972,-6.820297,2.640179,5.388141,1.413164,9.808831,-6.572190,-5.406097,4.236367,-5.111760,-5.514846,3.520540,8.807447,-2.720518,2.621250,1.202021,2.388977,-5.778753,-8.516398,9.054431,7.714007,0.788652,-5.018099,9.794365,1.036152,-0.747190,6.754725,0.509120,7.610803,-2.498100,-8.245930,9.266178,7.985614,1.968444,5.321828,-8.586922,4.533467,-1.104760,8.633484,2.516649,8.396830,2.424224,3.695691,5.137528,-0.006781,-6.264849,6.470328,-0.808393,8.257438,-3.919031,-1.870869,6.812066,-7.348852,9.528877,7.260614,-9.243066,-6.315162,-5.738183,7.279178,-8.703978,0.827737,-6.178426,-2.719449,8.406919,-8.545008,2.474642,-0.170474,0.316467,-2.406125,1.946531,1.332345,7.601719,7.601102,-8.505935,2.976973,-9.999865,9.494331,-7.056814,-2.317792,4.742371,4.751948,0.884385,0.825815,7.307199,-0.979537,-9.389098,-6.155052,1.095125,3.022968,-5.290218,5.613382,1.660149,-7.804504], dtype = "float32")#candidate|5266|(1008,)|const|float32
call_5265 = relay.TupleGetItem(func_4711_call(relay.reshape(const_5266.astype('float32'), [1008,])), 1)
call_5267 = relay.TupleGetItem(func_4713_call(relay.reshape(const_5266.astype('float32'), [1008,])), 1)
func_1079_call = mod.get_global_var('func_1079')
func_1081_call = mutated_mod.get_global_var('func_1081')
call_5272 = func_1079_call()
call_5273 = func_1079_call()
func_2056_call = mod.get_global_var('func_2056')
func_2058_call = mutated_mod.get_global_var('func_2058')
var_5287 = relay.var("var_5287", dtype = "float32", shape = (2520,))#candidate|5287|(2520,)|var|float32
call_5286 = relay.TupleGetItem(func_2056_call(relay.reshape(var_5287.astype('float32'), [2520,])), 3)
call_5288 = relay.TupleGetItem(func_2058_call(relay.reshape(var_5287.astype('float32'), [2520,])), 3)
func_4737_call = mod.get_global_var('func_4737')
func_4739_call = mutated_mod.get_global_var('func_4739')
call_5291 = func_4737_call()
call_5292 = func_4737_call()
func_4754_call = mod.get_global_var('func_4754')
func_4756_call = mutated_mod.get_global_var('func_4756')
call_5294 = relay.TupleGetItem(func_4754_call(), 0)
call_5295 = relay.TupleGetItem(func_4756_call(), 0)
output = relay.Tuple([uop_5261,call_5265,const_5266,call_5272,call_5286,var_5287,call_5291,call_5294,])
output2 = relay.Tuple([uop_5263,call_5267,const_5266,call_5273,call_5288,var_5287,call_5292,call_5295,])
func_5321 = relay.Function([var_5287,], output)
mod['func_5321'] = func_5321
mod = relay.transform.InferType()(mod)
mutated_mod['func_5321'] = func_5321
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5322 = relay.var("var_5322", dtype = "float32", shape = (2520,))#candidate|5322|(2520,)|var|float32
func_5321_call = mutated_mod.get_global_var('func_5321')
call_5323 = func_5321_call(var_5322)
output = call_5323
func_5324 = relay.Function([var_5322], output)
mutated_mod['func_5324'] = func_5324
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2674_call = mod.get_global_var('func_2674')
func_2676_call = mutated_mod.get_global_var('func_2676')
call_5331 = relay.TupleGetItem(func_2674_call(), 0)
call_5332 = relay.TupleGetItem(func_2676_call(), 0)
output = call_5331
output2 = call_5332
func_5333 = relay.Function([], output)
mod['func_5333'] = func_5333
mod = relay.transform.InferType()(mod)
output = func_5333()
func_5334 = relay.Function([], output)
mutated_mod['func_5334'] = func_5334
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5390 = relay.var("var_5390", dtype = "float64", shape = (13, 9, 4))#candidate|5390|(13, 9, 4)|var|float64
uop_5391 = relay.asinh(var_5390.astype('float64')) # shape=(13, 9, 4)
output = relay.Tuple([uop_5391,])
output2 = relay.Tuple([uop_5391,])
func_5393 = relay.Function([var_5390,], output)
mod['func_5393'] = func_5393
mod = relay.transform.InferType()(mod)
var_5394 = relay.var("var_5394", dtype = "float64", shape = (13, 9, 4))#candidate|5394|(13, 9, 4)|var|float64
output = func_5393(var_5394)
func_5395 = relay.Function([var_5394], output)
mutated_mod['func_5395'] = func_5395
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3446_call = mod.get_global_var('func_3446')
func_3448_call = mutated_mod.get_global_var('func_3448')
call_5402 = func_3446_call()
call_5403 = func_3446_call()
func_4604_call = mod.get_global_var('func_4604')
func_4606_call = mutated_mod.get_global_var('func_4606')
call_5405 = relay.TupleGetItem(func_4604_call(), 0)
call_5406 = relay.TupleGetItem(func_4606_call(), 0)
output = relay.Tuple([call_5402,call_5405,])
output2 = relay.Tuple([call_5403,call_5406,])
func_5407 = relay.Function([], output)
mod['func_5407'] = func_5407
mod = relay.transform.InferType()(mod)
output = func_5407()
func_5408 = relay.Function([], output)
mutated_mod['func_5408'] = func_5408
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5439 = relay.var("var_5439", dtype = "float32", shape = (8, 13, 7))#candidate|5439|(8, 13, 7)|var|float32
var_5440 = relay.var("var_5440", dtype = "float32", shape = (8, 13, 7))#candidate|5440|(8, 13, 7)|var|float32
bop_5441 = relay.power(var_5439.astype('float32'), relay.reshape(var_5440.astype('float32'), relay.shape_of(var_5439))) # shape=(8, 13, 7)
func_2337_call = mod.get_global_var('func_2337')
func_2339_call = mutated_mod.get_global_var('func_2339')
call_5447 = relay.TupleGetItem(func_2337_call(), 0)
call_5448 = relay.TupleGetItem(func_2339_call(), 0)
output = relay.Tuple([bop_5441,call_5447,])
output2 = relay.Tuple([bop_5441,call_5448,])
func_5449 = relay.Function([var_5439,var_5440,], output)
mod['func_5449'] = func_5449
mod = relay.transform.InferType()(mod)
var_5450 = relay.var("var_5450", dtype = "float32", shape = (8, 13, 7))#candidate|5450|(8, 13, 7)|var|float32
var_5451 = relay.var("var_5451", dtype = "float32", shape = (8, 13, 7))#candidate|5451|(8, 13, 7)|var|float32
output = func_5449(var_5450,var_5451,)
func_5452 = relay.Function([var_5450,var_5451,], output)
mutated_mod['func_5452'] = func_5452
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3857_call = mod.get_global_var('func_3857')
func_3858_call = mutated_mod.get_global_var('func_3858')
call_5457 = relay.TupleGetItem(func_3857_call(), 1)
call_5458 = relay.TupleGetItem(func_3858_call(), 1)
func_4447_call = mod.get_global_var('func_4447')
func_4448_call = mutated_mod.get_global_var('func_4448')
call_5466 = func_4447_call()
call_5467 = func_4447_call()
output = relay.Tuple([call_5457,call_5466,])
output2 = relay.Tuple([call_5458,call_5467,])
func_5497 = relay.Function([], output)
mod['func_5497'] = func_5497
mod = relay.transform.InferType()(mod)
output = func_5497()
func_5498 = relay.Function([], output)
mutated_mod['func_5498'] = func_5498
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2788_call = mod.get_global_var('func_2788')
func_2789_call = mutated_mod.get_global_var('func_2789')
call_5506 = relay.TupleGetItem(func_2788_call(), 0)
call_5507 = relay.TupleGetItem(func_2789_call(), 0)
const_5508 = relay.const([[[0.207086,-4.596157,-5.238127,-6.911737,3.213991,-8.827709,-3.702816,-6.543701,-6.247277,-8.664335,4.160336,-0.924973]],[[2.149281,4.995678,-9.788748,-1.731817,7.240310,-8.392104,-5.930985,-3.698197,8.097942,0.391106,3.778499,7.447762]],[[-3.116815,4.405811,6.262171,7.574699,3.136575,-6.567123,1.983643,-6.863835,0.593361,-1.211167,9.603689,9.615201]],[[-4.595604,-0.203881,4.692602,2.943047,1.920878,1.895007,-8.799168,0.334069,-8.990078,8.491036,-7.423699,-4.982396]],[[-6.056338,9.230055,4.309458,-8.073996,6.518777,5.038848,6.222568,-9.861868,-7.526956,3.882519,-8.482643,-7.277921]],[[-2.259573,-8.569328,9.164892,7.287110,-6.012987,6.600038,0.970458,2.853786,-3.045441,1.500546,4.702032,-6.726239]],[[-5.749295,-3.588845,-7.293425,2.806823,-5.031260,0.330027,-0.989988,-8.348584,6.583459,1.304305,6.126017,2.462193]],[[3.532406,8.956109,2.826818,-4.415339,-1.824339,-8.449863,-0.404333,0.852099,-4.386538,-9.924180,2.434049,2.078150]],[[7.772921,-1.284701,6.594482,-8.681834,-4.750732,1.933209,-6.773911,0.283287,-1.923619,0.598432,9.328836,1.434167]],[[-4.471784,7.298467,-3.782194,-3.301309,4.035020,8.751340,7.047575,7.819509,3.536796,1.138975,1.449983,-3.665246]],[[-6.529585,-9.900826,7.195895,0.234950,1.100061,3.690671,9.769336,5.657116,-8.308310,6.572983,6.735063,-6.683777]],[[1.343952,-0.677029,-3.105422,-2.654634,-3.270738,4.184346,5.217747,3.420088,0.220402,-8.917807,9.809350,8.003161]],[[-9.596866,1.467323,2.890741,3.088639,3.412306,1.359403,-0.799740,-1.834124,-5.615911,-8.927432,1.220898,1.893358]],[[9.049163,5.922155,3.755633,-7.751201,-3.135638,7.465687,2.841447,-7.932381,-9.979970,8.604892,-9.437854,-5.467568]]], dtype = "float32")#candidate|5508|(14, 1, 12)|const|float32
bop_5509 = relay.multiply(call_5506.astype('int8'), relay.reshape(const_5508.astype('int8'), relay.shape_of(call_5506))) # shape=(14, 1, 12)
bop_5512 = relay.multiply(call_5507.astype('int8'), relay.reshape(const_5508.astype('int8'), relay.shape_of(call_5507))) # shape=(14, 1, 12)
func_2602_call = mod.get_global_var('func_2602')
func_2604_call = mutated_mod.get_global_var('func_2604')
call_5513 = relay.TupleGetItem(func_2602_call(), 0)
call_5514 = relay.TupleGetItem(func_2604_call(), 0)
uop_5534 = relay.erf(call_5513.astype('float64')) # shape=(18, 140)
uop_5536 = relay.erf(call_5514.astype('float64')) # shape=(18, 140)
output = relay.Tuple([bop_5509,uop_5534,])
output2 = relay.Tuple([bop_5512,uop_5536,])
func_5542 = relay.Function([], output)
mod['func_5542'] = func_5542
mod = relay.transform.InferType()(mod)
output = func_5542()
func_5543 = relay.Function([], output)
mutated_mod['func_5543'] = func_5543
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3343_call = mod.get_global_var('func_3343')
func_3345_call = mutated_mod.get_global_var('func_3345')
call_5568 = relay.TupleGetItem(func_3343_call(), 0)
call_5569 = relay.TupleGetItem(func_3345_call(), 0)
output = call_5568
output2 = call_5569
func_5574 = relay.Function([], output)
mod['func_5574'] = func_5574
mod = relay.transform.InferType()(mod)
mutated_mod['func_5574'] = func_5574
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5574_call = mutated_mod.get_global_var('func_5574')
call_5575 = func_5574_call()
output = call_5575
func_5576 = relay.Function([], output)
mutated_mod['func_5576'] = func_5576
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3213_call = mod.get_global_var('func_3213')
func_3214_call = mutated_mod.get_global_var('func_3214')
call_5618 = relay.TupleGetItem(func_3213_call(), 1)
call_5619 = relay.TupleGetItem(func_3214_call(), 1)
func_181_call = mod.get_global_var('func_181')
func_183_call = mutated_mod.get_global_var('func_183')
call_5640 = relay.TupleGetItem(func_181_call(), 2)
call_5641 = relay.TupleGetItem(func_183_call(), 2)
func_1634_call = mod.get_global_var('func_1634')
func_1635_call = mutated_mod.get_global_var('func_1635')
call_5650 = relay.TupleGetItem(func_1634_call(), 0)
call_5651 = relay.TupleGetItem(func_1635_call(), 0)
func_5222_call = mod.get_global_var('func_5222')
func_5223_call = mutated_mod.get_global_var('func_5223')
call_5653 = relay.TupleGetItem(func_5222_call(), 0)
call_5654 = relay.TupleGetItem(func_5223_call(), 0)
output = relay.Tuple([call_5618,call_5640,call_5650,call_5653,])
output2 = relay.Tuple([call_5619,call_5641,call_5651,call_5654,])
func_5669 = relay.Function([], output)
mod['func_5669'] = func_5669
mod = relay.transform.InferType()(mod)
mutated_mod['func_5669'] = func_5669
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5669_call = mutated_mod.get_global_var('func_5669')
call_5670 = func_5669_call()
output = call_5670
func_5671 = relay.Function([], output)
mutated_mod['func_5671'] = func_5671
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2767_call = mod.get_global_var('func_2767')
func_2768_call = mutated_mod.get_global_var('func_2768')
call_5672 = relay.TupleGetItem(func_2767_call(), 0)
call_5673 = relay.TupleGetItem(func_2768_call(), 0)
uop_5681 = relay.log10(call_5672.astype('float32')) # shape=(14, 3, 12)
uop_5683 = relay.log10(call_5673.astype('float32')) # shape=(14, 3, 12)
func_2218_call = mod.get_global_var('func_2218')
func_2219_call = mutated_mod.get_global_var('func_2219')
call_5686 = relay.TupleGetItem(func_2218_call(), 0)
call_5687 = relay.TupleGetItem(func_2219_call(), 0)
output = relay.Tuple([uop_5681,call_5686,])
output2 = relay.Tuple([uop_5683,call_5687,])
func_5688 = relay.Function([], output)
mod['func_5688'] = func_5688
mod = relay.transform.InferType()(mod)
output = func_5688()
func_5689 = relay.Function([], output)
mutated_mod['func_5689'] = func_5689
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5708 = relay.var("var_5708", dtype = "float32", shape = (9, 9, 1))#candidate|5708|(9, 9, 1)|var|float32
uop_5709 = relay.sinh(var_5708.astype('float32')) # shape=(9, 9, 1)
func_2674_call = mod.get_global_var('func_2674')
func_2676_call = mutated_mod.get_global_var('func_2676')
call_5722 = relay.TupleGetItem(func_2674_call(), 0)
call_5723 = relay.TupleGetItem(func_2676_call(), 0)
output = relay.Tuple([uop_5709,call_5722,])
output2 = relay.Tuple([uop_5709,call_5723,])
func_5750 = relay.Function([var_5708,], output)
mod['func_5750'] = func_5750
mod = relay.transform.InferType()(mod)
var_5751 = relay.var("var_5751", dtype = "float32", shape = (9, 9, 1))#candidate|5751|(9, 9, 1)|var|float32
output = func_5750(var_5751)
func_5752 = relay.Function([var_5751], output)
mutated_mod['func_5752'] = func_5752
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2459_call = mod.get_global_var('func_2459')
func_2460_call = mutated_mod.get_global_var('func_2460')
call_5765 = relay.TupleGetItem(func_2459_call(), 1)
call_5766 = relay.TupleGetItem(func_2460_call(), 1)
output = call_5765
output2 = call_5766
func_5767 = relay.Function([], output)
mod['func_5767'] = func_5767
mod = relay.transform.InferType()(mod)
mutated_mod['func_5767'] = func_5767
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5767_call = mutated_mod.get_global_var('func_5767')
call_5768 = func_5767_call()
output = call_5768
func_5769 = relay.Function([], output)
mutated_mod['func_5769'] = func_5769
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2329_call = mod.get_global_var('func_2329')
func_2330_call = mutated_mod.get_global_var('func_2330')
call_5770 = relay.TupleGetItem(func_2329_call(), 3)
call_5771 = relay.TupleGetItem(func_2330_call(), 3)
var_5772 = relay.var("var_5772", dtype = "float32", shape = (2520,))#candidate|5772|(2520,)|var|float32
bop_5773 = relay.right_shift(call_5770.astype('uint16'), relay.reshape(var_5772.astype('uint16'), relay.shape_of(call_5770))) # shape=(2520,)
bop_5776 = relay.right_shift(call_5771.astype('uint16'), relay.reshape(var_5772.astype('uint16'), relay.shape_of(call_5771))) # shape=(2520,)
func_5222_call = mod.get_global_var('func_5222')
func_5223_call = mutated_mod.get_global_var('func_5223')
call_5786 = relay.TupleGetItem(func_5222_call(), 0)
call_5787 = relay.TupleGetItem(func_5223_call(), 0)
bop_5792 = relay.divide(bop_5773.astype('float64'), relay.reshape(call_5770.astype('float64'), relay.shape_of(bop_5773))) # shape=(2520,)
bop_5795 = relay.divide(bop_5776.astype('float64'), relay.reshape(call_5771.astype('float64'), relay.shape_of(bop_5776))) # shape=(2520,)
output = relay.Tuple([call_5786,bop_5792,])
output2 = relay.Tuple([call_5787,bop_5795,])
func_5796 = relay.Function([var_5772,], output)
mod['func_5796'] = func_5796
mod = relay.transform.InferType()(mod)
var_5797 = relay.var("var_5797", dtype = "float32", shape = (2520,))#candidate|5797|(2520,)|var|float32
output = func_5796(var_5797)
func_5798 = relay.Function([var_5797], output)
mutated_mod['func_5798'] = func_5798
mutated_mod = relay.transform.InferType()(mutated_mod)
func_181_call = mod.get_global_var('func_181')
func_183_call = mutated_mod.get_global_var('func_183')
call_5806 = relay.TupleGetItem(func_181_call(), 2)
call_5807 = relay.TupleGetItem(func_183_call(), 2)
output = relay.Tuple([call_5806,])
output2 = relay.Tuple([call_5807,])
func_5808 = relay.Function([], output)
mod['func_5808'] = func_5808
mod = relay.transform.InferType()(mod)
output = func_5808()
func_5809 = relay.Function([], output)
mutated_mod['func_5809'] = func_5809
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2684_call = mod.get_global_var('func_2684')
func_2685_call = mutated_mod.get_global_var('func_2685')
call_5818 = relay.TupleGetItem(func_2684_call(), 0)
call_5819 = relay.TupleGetItem(func_2685_call(), 0)
func_3426_call = mod.get_global_var('func_3426')
func_3428_call = mutated_mod.get_global_var('func_3428')
call_5822 = relay.TupleGetItem(func_3426_call(), 0)
call_5823 = relay.TupleGetItem(func_3428_call(), 0)
func_1285_call = mod.get_global_var('func_1285')
func_1287_call = mutated_mod.get_global_var('func_1287')
call_5826 = relay.TupleGetItem(func_1285_call(), 0)
call_5827 = relay.TupleGetItem(func_1287_call(), 0)
bop_5831 = relay.logical_and(call_5822.astype('bool'), relay.reshape(call_5818.astype('bool'), relay.shape_of(call_5822))) # shape=(14, 1, 12)
bop_5834 = relay.logical_and(call_5823.astype('bool'), relay.reshape(call_5819.astype('bool'), relay.shape_of(call_5823))) # shape=(14, 1, 12)
bop_5837 = relay.power(call_5818.astype('float32'), relay.reshape(bop_5831.astype('float32'), relay.shape_of(call_5818))) # shape=(14, 1, 12)
bop_5840 = relay.power(call_5819.astype('float32'), relay.reshape(bop_5834.astype('float32'), relay.shape_of(call_5819))) # shape=(14, 1, 12)
bop_5841 = relay.bitwise_or(bop_5831.astype('int32'), relay.reshape(call_5826.astype('int32'), relay.shape_of(bop_5831))) # shape=(14, 1, 12)
bop_5844 = relay.bitwise_or(bop_5834.astype('int32'), relay.reshape(call_5827.astype('int32'), relay.shape_of(bop_5834))) # shape=(14, 1, 12)
output = relay.Tuple([bop_5837,bop_5841,])
output2 = relay.Tuple([bop_5840,bop_5844,])
func_5855 = relay.Function([], output)
mod['func_5855'] = func_5855
mod = relay.transform.InferType()(mod)
mutated_mod['func_5855'] = func_5855
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5855_call = mutated_mod.get_global_var('func_5855')
call_5856 = func_5855_call()
output = call_5856
func_5857 = relay.Function([], output)
mutated_mod['func_5857'] = func_5857
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5222_call = mod.get_global_var('func_5222')
func_5223_call = mutated_mod.get_global_var('func_5223')
call_5895 = relay.TupleGetItem(func_5222_call(), 0)
call_5896 = relay.TupleGetItem(func_5223_call(), 0)
output = call_5895
output2 = call_5896
func_5913 = relay.Function([], output)
mod['func_5913'] = func_5913
mod = relay.transform.InferType()(mod)
output = func_5913()
func_5914 = relay.Function([], output)
mutated_mod['func_5914'] = func_5914
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2459_call = mod.get_global_var('func_2459')
func_2460_call = mutated_mod.get_global_var('func_2460')
call_5926 = relay.TupleGetItem(func_2459_call(), 1)
call_5927 = relay.TupleGetItem(func_2460_call(), 1)
func_3426_call = mod.get_global_var('func_3426')
func_3428_call = mutated_mod.get_global_var('func_3428')
call_5940 = relay.TupleGetItem(func_3426_call(), 0)
call_5941 = relay.TupleGetItem(func_3428_call(), 0)
func_2432_call = mod.get_global_var('func_2432')
func_2435_call = mutated_mod.get_global_var('func_2435')
var_5943 = relay.var("var_5943", dtype = "bool", shape = (24, 48))#candidate|5943|(24, 48)|var|bool
call_5942 = relay.TupleGetItem(func_2432_call(relay.reshape(var_5943.astype('bool'), [12, 12, 8]), relay.reshape(var_5943.astype('bool'), [12, 12, 8]), ), 0)
call_5944 = relay.TupleGetItem(func_2435_call(relay.reshape(var_5943.astype('bool'), [12, 12, 8]), relay.reshape(var_5943.astype('bool'), [12, 12, 8]), ), 0)
var_5951 = relay.var("var_5951", dtype = "float32", shape = (14, 3, 12))#candidate|5951|(14, 3, 12)|var|float32
bop_5952 = relay.right_shift(call_5926.astype('uint16'), var_5951.astype('uint16')) # shape=(14, 3, 12)
bop_5955 = relay.right_shift(call_5927.astype('uint16'), var_5951.astype('uint16')) # shape=(14, 3, 12)
output = relay.Tuple([call_5940,call_5942,var_5943,bop_5952,])
output2 = relay.Tuple([call_5941,call_5944,var_5943,bop_5955,])
func_5956 = relay.Function([var_5943,var_5951,], output)
mod['func_5956'] = func_5956
mod = relay.transform.InferType()(mod)
mutated_mod['func_5956'] = func_5956
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5956_call = mutated_mod.get_global_var('func_5956')
var_5958 = relay.var("var_5958", dtype = "bool", shape = (24, 48))#candidate|5958|(24, 48)|var|bool
var_5959 = relay.var("var_5959", dtype = "float32", shape = (14, 3, 12))#candidate|5959|(14, 3, 12)|var|float32
call_5957 = func_5956_call(var_5958,var_5959,)
output = call_5957
func_5960 = relay.Function([var_5958,var_5959,], output)
mutated_mod['func_5960'] = func_5960
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5962 = relay.const([[[4,5,10],[7,9,4],[9,2,-4],[-3,-8,-4],[-10,-9,4]],[[6,3,3],[5,5,-9],[-5,5,-2],[-2,5,-5],[-10,10,7]],[[9,-10,-3],[10,-5,1],[-5,4,6],[8,-3,8],[2,3,7]],[[-5,-1,1],[-10,-3,-7],[2,-5,-2],[2,-8,3],[-7,4,-8]],[[-9,-9,10],[8,2,-6],[8,-1,-2],[-5,-2,-3],[1,-1,-9]],[[-5,-2,9],[-6,-1,-10],[7,4,-2],[-10,-5,10],[-9,-8,-5]],[[9,-3,6],[-2,-1,-3],[9,9,-8],[2,-8,2],[6,8,-2]],[[-1,4,-2],[8,-5,7],[1,7,-1],[-3,-7,-1],[8,2,1]],[[2,5,-6],[8,-10,-4],[-2,3,7],[6,-9,8],[4,9,-5]],[[-10,-10,2],[-1,-1,-5],[8,-2,-7],[-6,-6,8],[7,1,7]],[[-6,-2,3],[4,4,7],[-10,5,9],[-10,6,2],[-9,5,-8]],[[-7,-1,-3],[-1,-10,-4],[-4,-5,8],[-2,-9,-2],[10,3,-5]],[[-2,-5,1],[9,5,-9],[-10,3,4],[7,10,2],[-10,-7,-2]],[[6,-7,6],[9,2,-7],[-4,3,-10],[1,-1,-7],[4,7,-10]],[[4,-2,-7],[6,4,-1],[-8,5,6],[-8,-5,7],[4,-9,1]]], dtype = "int16")#candidate|5962|(15, 5, 3)|const|int16
var_5963 = relay.var("var_5963", dtype = "int16", shape = (15, 5, 3))#candidate|5963|(15, 5, 3)|var|int16
bop_5964 = relay.minimum(const_5962.astype('int16'), relay.reshape(var_5963.astype('int16'), relay.shape_of(const_5962))) # shape=(15, 5, 3)
const_5975 = relay.const([[[2,1,10],[-1,3,-9],[6,-7,5],[-4,-9,10],[-5,6,1]],[[-5,4,6],[1,4,7],[-3,3,1],[-3,6,6],[-10,8,4]],[[-10,4,-4],[-9,10,-6],[-7,9,1],[1,4,6],[5,10,1]],[[-5,-4,2],[9,-2,-7],[5,9,5],[3,2,5],[-7,3,6]],[[-5,3,-9],[-7,8,-9],[-8,-8,-8],[7,-1,9],[8,-8,7]],[[-4,-4,2],[-4,4,-8],[9,-9,3],[2,-1,8],[8,-7,-6]],[[2,-9,-9],[-10,1,6],[-10,7,4],[7,9,-10],[7,4,6]],[[-2,-10,-5],[-1,-3,-10],[2,-6,9],[9,9,-5],[7,-8,-8]],[[1,-3,1],[1,4,4],[4,3,-5],[1,8,1],[8,-5,-9]],[[1,5,2],[-3,-7,8],[10,-7,4],[-5,5,-5],[-7,4,-1]],[[9,4,5],[1,10,4],[9,-2,7],[8,10,-5],[10,10,-8]],[[-9,-3,10],[-1,-10,8],[3,-8,-4],[10,6,9],[-7,-5,-5]],[[7,7,-8],[-2,9,2],[-5,-5,-9],[-7,4,8],[-5,2,-1]],[[-1,2,-10],[7,1,-5],[-3,7,1],[-10,-2,-2],[-8,5,-4]],[[-9,-5,-5],[3,-1,9],[-7,-4,4],[-8,-6,7],[-1,4,4]]], dtype = "int16")#candidate|5975|(15, 5, 3)|const|int16
bop_5976 = relay.less(bop_5964.astype('bool'), relay.reshape(const_5975.astype('bool'), relay.shape_of(bop_5964))) # shape=(15, 5, 3)
output = bop_5976
output2 = bop_5976
func_5979 = relay.Function([var_5963,], output)
mod['func_5979'] = func_5979
mod = relay.transform.InferType()(mod)
var_5980 = relay.var("var_5980", dtype = "int16", shape = (15, 5, 3))#candidate|5980|(15, 5, 3)|var|int16
output = func_5979(var_5980)
func_5981 = relay.Function([var_5980], output)
mutated_mod['func_5981'] = func_5981
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3818_call = mod.get_global_var('func_3818')
func_3819_call = mutated_mod.get_global_var('func_3819')
call_6039 = func_3818_call()
call_6040 = func_3818_call()
output = call_6039
output2 = call_6040
func_6041 = relay.Function([], output)
mod['func_6041'] = func_6041
mod = relay.transform.InferType()(mod)
mutated_mod['func_6041'] = func_6041
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6041_call = mutated_mod.get_global_var('func_6041')
call_6042 = func_6041_call()
output = call_6042
func_6043 = relay.Function([], output)
mutated_mod['func_6043'] = func_6043
mutated_mod = relay.transform.InferType()(mutated_mod)
func_99_call = mod.get_global_var('func_99')
func_101_call = mutated_mod.get_global_var('func_101')
call_6044 = func_99_call()
call_6045 = func_99_call()
func_1590_call = mod.get_global_var('func_1590')
func_1591_call = mutated_mod.get_global_var('func_1591')
call_6046 = relay.TupleGetItem(func_1590_call(), 0)
call_6047 = relay.TupleGetItem(func_1591_call(), 0)
var_6050 = relay.var("var_6050", dtype = "float32", shape = (14, 13, 12))#candidate|6050|(14, 13, 12)|var|float32
bop_6051 = relay.bitwise_or(call_6046.astype('int16'), var_6050.astype('int16')) # shape=(14, 13, 12)
bop_6054 = relay.bitwise_or(call_6047.astype('int16'), var_6050.astype('int16')) # shape=(14, 13, 12)
output = relay.Tuple([call_6044,bop_6051,])
output2 = relay.Tuple([call_6045,bop_6054,])
func_6063 = relay.Function([var_6050,], output)
mod['func_6063'] = func_6063
mod = relay.transform.InferType()(mod)
var_6064 = relay.var("var_6064", dtype = "float32", shape = (14, 13, 12))#candidate|6064|(14, 13, 12)|var|float32
output = func_6063(var_6064)
func_6065 = relay.Function([var_6064], output)
mutated_mod['func_6065'] = func_6065
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6091 = relay.var("var_6091", dtype = "uint32", shape = (1, 5, 4))#candidate|6091|(1, 5, 4)|var|uint32
const_6092 = relay.const([[[5,-9,2,-7],[8,5,-10,-1],[6,7,-4,-3],[10,10,10,7],[1,-6,2,4]],[[-7,-3,3,7],[3,5,4,2],[5,5,-1,3],[-8,4,2,-8],[-6,7,7,1]],[[7,7,-5,5],[-10,-7,3,-2],[-9,-9,-4,-10],[-9,2,-3,6],[-8,-1,-2,4]],[[7,3,-1,10],[-3,1,-7,-10],[9,4,6,10],[-3,-8,7,6],[-7,-5,6,-10]]], dtype = "uint32")#candidate|6092|(4, 5, 4)|const|uint32
bop_6093 = relay.bitwise_or(var_6091.astype('uint32'), const_6092.astype('uint32')) # shape=(4, 5, 4)
func_6063_call = mod.get_global_var('func_6063')
func_6065_call = mutated_mod.get_global_var('func_6065')
var_6102 = relay.var("var_6102", dtype = "float32", shape = (2184,))#candidate|6102|(2184,)|var|float32
call_6101 = relay.TupleGetItem(func_6063_call(relay.reshape(var_6102.astype('float32'), [14, 13, 12])), 1)
call_6103 = relay.TupleGetItem(func_6065_call(relay.reshape(var_6102.astype('float32'), [14, 13, 12])), 1)
func_4800_call = mod.get_global_var('func_4800')
func_4801_call = mutated_mod.get_global_var('func_4801')
call_6117 = relay.TupleGetItem(func_4800_call(), 0)
call_6118 = relay.TupleGetItem(func_4801_call(), 0)
uop_6122 = relay.rsqrt(const_6092.astype('float64')) # shape=(4, 5, 4)
func_862_call = mod.get_global_var('func_862')
func_864_call = mutated_mod.get_global_var('func_864')
call_6127 = relay.TupleGetItem(func_862_call(), 0)
call_6128 = relay.TupleGetItem(func_864_call(), 0)
func_4369_call = mod.get_global_var('func_4369')
func_4371_call = mutated_mod.get_global_var('func_4371')
var_6134 = relay.var("var_6134", dtype = "float32", shape = (336,))#candidate|6134|(336,)|var|float32
call_6133 = relay.TupleGetItem(func_4369_call(relay.reshape(var_6134.astype('float32'), [14, 2, 12])), 2)
call_6135 = relay.TupleGetItem(func_4371_call(relay.reshape(var_6134.astype('float32'), [14, 2, 12])), 2)
output = relay.Tuple([bop_6093,call_6101,var_6102,call_6117,uop_6122,call_6127,call_6133,var_6134,])
output2 = relay.Tuple([bop_6093,call_6103,var_6102,call_6118,uop_6122,call_6128,call_6135,var_6134,])
func_6139 = relay.Function([var_6091,var_6102,var_6134,], output)
mod['func_6139'] = func_6139
mod = relay.transform.InferType()(mod)
var_6140 = relay.var("var_6140", dtype = "uint32", shape = (1, 5, 4))#candidate|6140|(1, 5, 4)|var|uint32
var_6141 = relay.var("var_6141", dtype = "float32", shape = (2184,))#candidate|6141|(2184,)|var|float32
var_6142 = relay.var("var_6142", dtype = "float32", shape = (336,))#candidate|6142|(336,)|var|float32
output = func_6139(var_6140,var_6141,var_6142,)
func_6143 = relay.Function([var_6140,var_6141,var_6142,], output)
mutated_mod['func_6143'] = func_6143
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6230 = relay.var("var_6230", dtype = "bool", shape = (4, 8, 8))#candidate|6230|(4, 8, 8)|var|bool
var_6231 = relay.var("var_6231", dtype = "bool", shape = (4, 8, 8))#candidate|6231|(4, 8, 8)|var|bool
bop_6232 = relay.logical_or(var_6230.astype('bool'), relay.reshape(var_6231.astype('bool'), relay.shape_of(var_6230))) # shape=(4, 8, 8)
bop_6236 = relay.not_equal(var_6231.astype('bool'), relay.reshape(var_6230.astype('bool'), relay.shape_of(var_6231))) # shape=(4, 8, 8)
output = relay.Tuple([bop_6232,bop_6236,])
output2 = relay.Tuple([bop_6232,bop_6236,])
func_6240 = relay.Function([var_6230,var_6231,], output)
mod['func_6240'] = func_6240
mod = relay.transform.InferType()(mod)
mutated_mod['func_6240'] = func_6240
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6240_call = mutated_mod.get_global_var('func_6240')
var_6242 = relay.var("var_6242", dtype = "bool", shape = (4, 8, 8))#candidate|6242|(4, 8, 8)|var|bool
var_6243 = relay.var("var_6243", dtype = "bool", shape = (4, 8, 8))#candidate|6243|(4, 8, 8)|var|bool
call_6241 = func_6240_call(var_6242,var_6243,)
output = call_6241
func_6244 = relay.Function([var_6242,var_6243,], output)
mutated_mod['func_6244'] = func_6244
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1921_call = mod.get_global_var('func_1921')
func_1923_call = mutated_mod.get_global_var('func_1923')
call_6258 = func_1921_call()
call_6259 = func_1921_call()
output = call_6258
output2 = call_6259
func_6260 = relay.Function([], output)
mod['func_6260'] = func_6260
mod = relay.transform.InferType()(mod)
mutated_mod['func_6260'] = func_6260
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6260_call = mutated_mod.get_global_var('func_6260')
call_6261 = func_6260_call()
output = call_6261
func_6262 = relay.Function([], output)
mutated_mod['func_6262'] = func_6262
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6277 = relay.const([[[-8.022538,-2.965204,4.944549,8.775317,-0.660858,3.128195,6.083717,-9.654210,2.090214],[-8.062551,-0.048862,-4.168576,-9.912222,3.869627,-8.898178,7.168023,9.540010,6.618289],[5.181633,-8.317405,-5.028763,4.824513,-1.568863,-3.624334,-7.942439,-0.903840,4.502368],[-2.024069,-6.589322,1.009048,-4.583986,1.722890,-1.990639,-1.003534,6.175987,-4.815231],[-9.290720,-9.115212,3.844835,-1.901881,5.525933,-5.125683,-1.151835,-2.595198,-6.146460],[0.103859,6.765075,5.797795,5.101952,8.721748,-5.740788,-6.780989,9.427689,-3.405094],[-3.052425,-0.910088,7.417625,-8.642336,2.392950,-4.693825,8.066880,-5.069060,5.277094],[-9.954435,7.766906,6.554830,2.120717,-2.953047,-4.484806,-3.533496,-0.404620,-7.308856],[3.040880,7.958631,-5.901939,6.944287,9.411907,-4.043044,5.183942,4.388353,-0.835298],[-2.432426,-9.396967,-5.033093,2.883698,3.369398,5.265812,-3.288035,7.021294,1.143673],[2.776706,0.514380,-1.820634,1.866503,-7.082339,-2.544516,-4.569443,2.797852,3.658135],[7.603691,-2.450628,-6.161549,7.603335,-0.333962,-2.323962,-8.059779,-0.879135,-5.503059]],[[1.230635,-0.885655,-2.203721,-5.536595,-0.160267,-0.645662,3.591808,-8.137986,-0.224691],[4.680945,5.488538,-8.152821,0.684898,-1.649254,-6.289042,-9.644648,-5.745106,-2.796868],[1.151363,4.364165,-1.582055,4.229989,-8.699776,3.157403,6.404426,-0.836415,-4.529899],[-0.988429,1.923285,-9.368580,-2.237846,5.772002,8.343660,9.880822,-4.978636,-7.108601],[-9.052515,-9.389138,-3.841761,-9.942931,-8.327147,-2.768219,4.078467,-5.904719,7.815843],[8.156853,6.249965,5.590675,-5.824724,2.598071,4.737046,4.766962,6.216995,-6.819060],[8.510263,0.178299,1.573189,-4.679583,9.054810,5.807153,2.041446,-4.893794,8.374342],[-6.541241,-5.411949,-6.169750,7.501085,-0.140955,9.037435,-4.469967,8.817914,-7.476211],[-9.204316,8.356408,4.162312,-0.232885,6.645565,2.747675,-7.837840,-9.251735,2.395430],[9.293433,-0.842708,-2.316791,-2.068383,-0.686779,-1.471709,9.340532,-0.478853,-1.731021],[9.430156,-2.602694,7.547497,-8.274462,8.664631,3.413332,6.893531,-0.340958,-1.627056],[-9.259369,4.665903,-8.158576,4.334310,-7.216268,-2.301934,-7.256777,-9.985187,0.509217]],[[-8.831329,2.929868,-2.132675,6.672364,3.769788,-8.233828,-8.461068,4.258712,5.551717],[6.114278,7.282433,-7.523060,0.968719,7.319333,-1.983892,7.007888,-5.445125,-5.847472],[6.480782,5.107402,6.837600,-7.323193,-1.708958,-1.407502,8.061405,-8.618452,5.663207],[2.172575,7.950058,-1.077420,4.817922,9.074032,9.206836,-1.794532,2.819127,7.301684],[0.017067,-1.388696,7.535698,-6.157095,-2.960729,0.915099,7.508996,-8.149734,-4.657756],[-5.535574,6.444495,8.811060,-4.998492,0.611630,0.940745,-0.866075,9.017896,-3.353800],[5.018835,5.535115,-8.320176,-0.409224,1.032423,-7.707704,4.083343,6.289825,-2.104685],[5.215544,4.438729,-1.280771,-1.069938,9.309738,4.088942,-2.716272,-0.625716,3.211597],[3.419737,9.131703,-4.243789,-2.865473,-2.333473,-5.026613,-2.527134,2.515355,4.380457],[5.676571,5.390341,6.656100,-5.962566,4.939877,5.623365,8.775226,-9.768077,-0.979370],[2.026222,2.486750,-4.392039,-5.314857,2.503586,-2.155860,-6.478989,-8.773405,5.868519],[-7.835700,-8.447263,-2.201678,-5.703718,-8.440392,-1.165633,-9.412851,6.751609,-9.284570]]], dtype = "float64")#candidate|6277|(3, 12, 9)|const|float64
var_6278 = relay.var("var_6278", dtype = "float64", shape = (3, 12, 9))#candidate|6278|(3, 12, 9)|var|float64
bop_6279 = relay.mod(const_6277.astype('float64'), relay.reshape(var_6278.astype('float64'), relay.shape_of(const_6277))) # shape=(3, 12, 9)
func_5010_call = mod.get_global_var('func_5010')
func_5011_call = mutated_mod.get_global_var('func_5011')
call_6285 = relay.TupleGetItem(func_5010_call(), 0)
call_6286 = relay.TupleGetItem(func_5011_call(), 0)
func_1590_call = mod.get_global_var('func_1590')
func_1591_call = mutated_mod.get_global_var('func_1591')
call_6287 = relay.TupleGetItem(func_1590_call(), 1)
call_6288 = relay.TupleGetItem(func_1591_call(), 1)
output = relay.Tuple([bop_6279,call_6285,call_6287,])
output2 = relay.Tuple([bop_6279,call_6286,call_6288,])
func_6304 = relay.Function([var_6278,], output)
mod['func_6304'] = func_6304
mod = relay.transform.InferType()(mod)
var_6305 = relay.var("var_6305", dtype = "float64", shape = (3, 12, 9))#candidate|6305|(3, 12, 9)|var|float64
output = func_6304(var_6305)
func_6306 = relay.Function([var_6305], output)
mutated_mod['func_6306'] = func_6306
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6317 = relay.const(-6, dtype = "int8")#candidate|6317|()|const|int8
var_6318 = relay.var("var_6318", dtype = "int8", shape = (13, 7, 5))#candidate|6318|(13, 7, 5)|var|int8
bop_6319 = relay.maximum(const_6317.astype('int8'), var_6318.astype('int8')) # shape=(13, 7, 5)
output = bop_6319
output2 = bop_6319
func_6332 = relay.Function([var_6318,], output)
mod['func_6332'] = func_6332
mod = relay.transform.InferType()(mod)
mutated_mod['func_6332'] = func_6332
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6333 = relay.var("var_6333", dtype = "int8", shape = (13, 7, 5))#candidate|6333|(13, 7, 5)|var|int8
func_6332_call = mutated_mod.get_global_var('func_6332')
call_6334 = func_6332_call(var_6333)
output = call_6334
func_6335 = relay.Function([var_6333], output)
mutated_mod['func_6335'] = func_6335
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5688_call = mod.get_global_var('func_5688')
func_5689_call = mutated_mod.get_global_var('func_5689')
call_6387 = relay.TupleGetItem(func_5688_call(), 1)
call_6388 = relay.TupleGetItem(func_5689_call(), 1)
output = relay.Tuple([call_6387,])
output2 = relay.Tuple([call_6388,])
func_6393 = relay.Function([], output)
mod['func_6393'] = func_6393
mod = relay.transform.InferType()(mod)
mutated_mod['func_6393'] = func_6393
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6393_call = mutated_mod.get_global_var('func_6393')
call_6394 = func_6393_call()
output = call_6394
func_6395 = relay.Function([], output)
mutated_mod['func_6395'] = func_6395
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5096_call = mod.get_global_var('func_5096')
func_5098_call = mutated_mod.get_global_var('func_5098')
call_6437 = relay.TupleGetItem(func_5096_call(), 1)
call_6438 = relay.TupleGetItem(func_5098_call(), 1)
output = call_6437
output2 = call_6438
func_6442 = relay.Function([], output)
mod['func_6442'] = func_6442
mod = relay.transform.InferType()(mod)
mutated_mod['func_6442'] = func_6442
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6442_call = mutated_mod.get_global_var('func_6442')
call_6443 = func_6442_call()
output = call_6443
func_6444 = relay.Function([], output)
mutated_mod['func_6444'] = func_6444
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2329_call = mod.get_global_var('func_2329')
func_2330_call = mutated_mod.get_global_var('func_2330')
call_6449 = relay.TupleGetItem(func_2329_call(), 4)
call_6450 = relay.TupleGetItem(func_2330_call(), 4)
output = relay.Tuple([call_6449,])
output2 = relay.Tuple([call_6450,])
func_6457 = relay.Function([], output)
mod['func_6457'] = func_6457
mod = relay.transform.InferType()(mod)
output = func_6457()
func_6458 = relay.Function([], output)
mutated_mod['func_6458'] = func_6458
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5497_call = mod.get_global_var('func_5497')
func_5498_call = mutated_mod.get_global_var('func_5498')
call_6481 = relay.TupleGetItem(func_5497_call(), 0)
call_6482 = relay.TupleGetItem(func_5498_call(), 0)
uop_6488 = relay.rsqrt(call_6481.astype('float32')) # shape=(18, 140)
uop_6490 = relay.rsqrt(call_6482.astype('float32')) # shape=(18, 140)
func_5237_call = mod.get_global_var('func_5237')
func_5239_call = mutated_mod.get_global_var('func_5239')
call_6491 = relay.TupleGetItem(func_5237_call(), 0)
call_6492 = relay.TupleGetItem(func_5239_call(), 0)
func_2565_call = mod.get_global_var('func_2565')
func_2567_call = mutated_mod.get_global_var('func_2567')
call_6493 = relay.TupleGetItem(func_2565_call(), 0)
call_6494 = relay.TupleGetItem(func_2567_call(), 0)
uop_6503 = relay.tan(uop_6488.astype('float32')) # shape=(18, 140)
uop_6505 = relay.tan(uop_6490.astype('float32')) # shape=(18, 140)
bop_6507 = relay.left_shift(call_6493.astype('int32'), call_6491.astype('int32')) # shape=(14, 3, 12)
bop_6510 = relay.left_shift(call_6494.astype('int32'), call_6492.astype('int32')) # shape=(14, 3, 12)
output = relay.Tuple([uop_6503,bop_6507,])
output2 = relay.Tuple([uop_6505,bop_6510,])
func_6521 = relay.Function([], output)
mod['func_6521'] = func_6521
mod = relay.transform.InferType()(mod)
mutated_mod['func_6521'] = func_6521
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6521_call = mutated_mod.get_global_var('func_6521')
call_6522 = func_6521_call()
output = call_6522
func_6523 = relay.Function([], output)
mutated_mod['func_6523'] = func_6523
mutated_mod = relay.transform.InferType()(mutated_mod)
func_735_call = mod.get_global_var('func_735')
func_736_call = mutated_mod.get_global_var('func_736')
call_6553 = relay.TupleGetItem(func_735_call(), 0)
call_6554 = relay.TupleGetItem(func_736_call(), 0)
var_6561 = relay.var("var_6561", dtype = "float32", shape = (14, 1, 12))#candidate|6561|(14, 1, 12)|var|float32
bop_6562 = relay.minimum(call_6553.astype('uint8'), relay.reshape(var_6561.astype('uint8'), relay.shape_of(call_6553))) # shape=(14, 1, 12)
bop_6565 = relay.minimum(call_6554.astype('uint8'), relay.reshape(var_6561.astype('uint8'), relay.shape_of(call_6554))) # shape=(14, 1, 12)
func_2684_call = mod.get_global_var('func_2684')
func_2685_call = mutated_mod.get_global_var('func_2685')
call_6566 = relay.TupleGetItem(func_2684_call(), 0)
call_6567 = relay.TupleGetItem(func_2685_call(), 0)
bop_6568 = relay.subtract(call_6553.astype('uint8'), relay.reshape(call_6566.astype('uint8'), relay.shape_of(call_6553))) # shape=(14, 1, 12)
bop_6571 = relay.subtract(call_6554.astype('uint8'), relay.reshape(call_6567.astype('uint8'), relay.shape_of(call_6554))) # shape=(14, 1, 12)
func_5750_call = mod.get_global_var('func_5750')
func_5752_call = mutated_mod.get_global_var('func_5752')
const_6573 = relay.const([8.256634,-3.311329,-7.919466,-7.663200,8.971633,-9.786278,-2.861227,-2.437373,-8.801767,-1.518514,8.195390,2.760836,5.556328,2.312894,9.785618,-9.070686,-8.445624,0.132945,2.095227,-8.763769,-9.992542,-4.341275,-9.782783,-7.205015,8.437935,-1.479756,4.300611,-7.787831,6.762942,8.107556,0.123290,5.991937,-7.262740,-1.699052,-9.030230,2.317994,1.948465,-0.860099,-6.591402,-1.701878,8.979453,6.458556,-0.604179,3.728132,0.508759,-8.988978,7.364724,4.208913,2.173069,4.062727,-5.331142,-4.116725,-5.609525,-2.465468,9.653336,-0.521563,7.908727,5.946552,-5.229072,9.415056,-6.268383,-6.759538,-3.040705,7.167047,7.289897,9.386545,6.222402,-3.886142,-3.009706,2.608935,7.821869,-5.484347,5.082508,8.871374,8.896640,3.863154,-7.868293,9.640469,1.723251,-0.439157,6.945138], dtype = "float32")#candidate|6573|(81,)|const|float32
call_6572 = relay.TupleGetItem(func_5750_call(relay.reshape(const_6573.astype('float32'), [9, 9, 1])), 1)
call_6574 = relay.TupleGetItem(func_5752_call(relay.reshape(const_6573.astype('float32'), [9, 9, 1])), 1)
func_4151_call = mod.get_global_var('func_4151')
func_4153_call = mutated_mod.get_global_var('func_4153')
const_6581 = relay.const([-1.830694,9.575433,-6.366108,2.281498,0.758029,-3.409769,-6.894840,8.346079,0.430957,-8.950682,3.438196,-1.734123,-9.852581,0.567272,2.231204,4.783190,2.408814,-2.781916,-0.257098,1.222646,3.292412,-3.745491,-1.573151,5.035326,-4.330534,5.936602,3.974089,-0.111245,3.961943,9.720355,1.075851,-0.312189,8.510144,-9.357491,-9.375989,-4.277074,0.817227,-7.535882,-0.023861,0.218920,2.940080,-5.493008,-3.358233,-1.452472,6.411689,-1.416793,-2.326253,7.630042,6.089097,8.327011,5.113853,1.459084,8.872301,-3.786051,-5.134049,-0.915983,-0.785083,-8.063119,-3.517911,-1.859060,3.897639,-0.743499,1.424041,8.517932,0.013831,6.066745,-8.178109,4.539182,-3.584526,-5.127154,2.428493,-3.111028,4.559925,-9.181462,6.004638,6.524511,9.079187,-2.310531,3.809193,-0.641253,-0.684701,5.012581,-4.645879,-8.644854,-0.732022,2.639138,-0.026367,-5.803024,7.663273,4.603024,3.929724,7.544144,-2.443051,-2.529592,6.760399,-8.636519,-4.373069,4.395156,-3.509044,1.077340,-0.349564,-9.586310,-6.252727,-0.455787,0.273601,-2.041033,8.080755,8.992596,6.452098,5.399210,-9.890236,-6.233763,-5.623465,-6.368134,-7.462802,2.396501,-7.429670,1.087468,-0.513540,-8.431380,3.841807,8.720581,-9.070739,-2.655729,-5.469351,1.550213,6.412001,8.350895,4.679811,-5.370151,8.476001,-5.858237,8.790709,-8.089650,4.240495,7.149703,7.885299,1.418927,4.499498,6.152862,-8.253006,6.186481,-2.312584,9.362500,-8.695139,8.125310,0.710647,9.929959,1.222954,7.022691,2.285224,8.839074,1.684465,-6.125577,-7.606274,-2.548061,-8.452149,-8.690001,-8.686269,-6.797191,3.303429,-6.993512,4.466967,2.938352,2.337397,-1.936911,9.482852,0.119222,-3.410333,-8.082289,9.132238,6.850364,-9.142573,-3.488449,4.095569,5.290663,5.575268,-2.364540,7.301363,2.081530,-7.340353,9.493028,-4.760504,-2.156564,6.248272,9.393425,7.374814,-3.712192,5.565949,-5.955741,-9.244412,1.043030,6.146662,-1.762935,-3.730258,2.743947,7.210403,-2.698645,2.808354,5.969326,5.439232,7.871157,7.001723,-4.216166,-3.715631,-3.464995,-7.019771,-6.604035,3.932532,0.129646,6.638892,-2.731620,3.021412,-6.854853,6.379939,1.492499,-0.748174,8.140078,3.944340,-1.404827,-3.997415,-9.619284,4.110574,-8.900094,0.740549,-8.937329,-3.880271,-0.670840,1.688190,-2.213332,-2.748531,-5.698159,-2.467783,-6.236469,3.156817,1.920068,1.811103,4.776281,3.498028,7.935138,5.217584,3.979585,-5.947045,3.458789,-2.204982,-9.280570,-6.986858,2.627989,-8.239268,-1.725999,9.275571,5.734087,3.245042,5.341901,-5.320012,4.039656,-5.237933,8.321645,-4.751204,-4.343657,-4.320384,2.826714,7.795282,7.219883,6.393909,-4.898291,-6.973938,1.423763,-4.495319,-8.292240,-6.176110,-0.714947,-9.963006,2.405209,-6.444017,2.049898,8.906642,1.534113,6.508158,-5.690497,-9.221692,1.884118,4.683490,-6.410723,9.220362,-1.082114,7.256699,-3.304094,5.471868,-1.736590,-8.449848,-6.850699,7.638913,-9.889326,1.847788,0.600402,4.612949,-2.158406,8.051669,-4.513406,2.080421,-7.261944,6.661871,-7.269241,6.504617,4.188470,-6.601214,5.373577,8.799609,-4.500680,-9.937418,4.956013,8.503924,-6.993170,-7.978213,1.529493,-3.478217,-2.273904,6.877129,-6.850728,-3.825858,-9.335541,5.170044,-1.687868,6.876545,0.169893,-8.739899,-7.819410,-4.816605,-0.120418,4.768953,-1.979226,-9.247240,-6.917585,8.763425,-6.387973,-3.661512,-8.658793,-2.709887,-8.276992,-7.083286,1.760251,-7.942034,-9.223083,7.028921,-7.267593,-6.244223,-7.062620,4.920611,-3.802398,8.104992,-9.113437,1.047916,6.247161,3.175272,-7.470683,-9.116904,-3.732250,6.824664,7.545969,-3.628281,8.583520,2.275547,7.060464,-8.173588,1.462579,-2.206699,6.831075,8.930962,8.972399,4.455061,-1.494335,5.660402,-9.732755,2.683335,8.898704,6.458568,-0.835136,-8.365443,-5.517417,-1.592596,-9.372990,5.868836,-9.738751,7.747614,-6.424458,8.473782,-6.111652,3.653657,6.925695,-5.592275,-0.481790,-5.885066,-5.450132,-3.454491,6.462153,8.891996,9.855856,-4.562618,1.169047,4.478010,-8.203834,-6.141504,-3.902094,6.653593,-8.174666,-1.373020,-7.818109,1.942493,-7.469885,3.513654,-4.475087,3.036644,3.861554,-0.544648,5.372385,-6.474102,-5.440114,-4.657984,6.036934,2.215037,-8.218675,-1.979017,-7.962861,1.583104,-6.569859,-1.733386,5.928265,-8.342684,5.263381,1.221871,0.747288,-0.146466,-0.453371,-7.138412,1.796800,8.478969,3.701246,-9.298013,-1.141723,-5.527822,-9.431788,8.325464,5.537421,-2.117691,-8.599541,3.554080,-1.043416,-8.041175,4.739672,-8.851123,-5.254119,-3.671815,9.914271,2.278541,-8.751189,-0.769277,-7.137665,6.354197,-1.215164,5.520100,0.674798,-6.001741,-1.733639,2.082540,2.555377,-1.455229,5.342416,7.797359,4.706535,-0.329955,2.512401,-5.998702,0.265385,0.685730,-6.008075,-3.693282,2.073079,8.779305,1.913599,2.811610,-6.187911,-0.658649,-1.151374,-9.323448,-6.562629,-2.288233,-9.725759,-9.664050,-4.708338,5.235874,-2.786750,-9.661264,-5.524436,2.503030,-2.971138,-5.662922,5.521613,5.391607,-7.972439,1.344885,-2.461582,-3.554383,2.944533,-8.172042,-4.985066,-0.400791,-8.976758,4.077091,-3.632988,-4.430537,5.351406,9.031191,-1.701987,9.714179,-9.000467,1.127291,-7.388167,7.921110,-3.302279,8.972820,8.695185,5.196030,-5.804549,-1.366182,-8.466057,-1.409353,3.292164,-7.456138,-9.193980,5.858784,-9.805723,8.230557,-7.890800,-4.774894,1.797335,-5.134401,1.364914,-6.607036,-2.087287,-3.252197,2.384356,-2.211672,-8.873322,-8.815065,-8.335145,-3.142721,0.868734,9.760220,-3.560231,-7.439607,6.017226,4.392426,4.083693,2.610331,-2.490782,-5.025001,-1.252465,1.570490,9.749356,5.854244,5.458631,-1.205597,6.897582,-3.330368,-8.605543,8.339439,9.182986,-0.465000,-3.006344,-9.184221,-0.667662,5.978878,-5.724545,4.843231,-5.868674,5.741549,-7.925575,-8.675041,-4.019877,-0.803064,-5.228673,-4.807234,-6.220024,-3.979436,-8.062024,2.789951,6.326364,1.317263,6.415933,1.566240,6.971633,9.426692,-6.763568,-9.739784,4.242108,2.109611,-5.446694,4.499229,4.147431,-4.557137,0.536707,-2.998033,-9.872850,-2.070988,-8.588300,3.045803,-9.784455,-9.857653,4.052085,9.265884,4.246346,-0.333735,1.361906,-0.905768,0.338930,-5.991154,-1.380252,0.798351,6.727204,8.657434,4.740217,2.574369,3.939956,-1.910430,-5.809676,7.597681,5.096150,-8.343665,-2.132236,7.947453,5.067976,-7.513900,-7.256755,-5.859502,5.828517,1.891287,-2.478022,-0.843807,-5.520838,-7.617871,8.240468,-2.818544,0.728120,1.377643,0.941525,0.743308,-7.586279,7.339130,6.908017,-9.827886,7.842307,8.665011,6.792224,8.322478,8.657802,-2.841808,-9.047154,9.860721,1.706091,5.182398,6.837496,6.210415,-7.119453,-4.568060,-6.552124,-9.869203,-5.896401,-5.828696,5.871848,-1.803199,8.831472,0.814154,7.623950,-6.676790,1.954741,-9.937694,-7.276640,5.317714,-2.556482,7.307746,-6.400821,-5.537180,9.291909,-2.647334,-3.359075,7.080258,-8.860568,8.474249,3.873263,-3.051009,0.188071,3.920769,5.904292,-8.305667,-0.173391,-0.226809,3.048799,-6.646786,9.537512,-8.441383,2.587348,-9.452449,-5.320656,5.846785,7.566754,8.825008,-8.086002,-3.475349,2.788493,7.325190,-5.061749,-2.492159,-5.892889,0.272305,-7.564188,-5.817316,9.087484,2.477082,-5.809691,-2.007810,-2.529690,0.954976,-1.198545,-9.452772,-4.825711,-1.783596,-2.650120,1.861462,8.570814,-8.991602,-4.434712,4.195074,5.284235,5.536992,1.047321,6.188212,3.578172,7.754076,1.855711,1.711949,2.581444,-4.043159,2.713878,2.489923,-6.093351,-1.307070,-4.308537,1.504878,-4.929335,2.400568,-0.503463,4.108265,5.365825,6.182867,4.066919,9.246939,-3.076879,-4.404766,7.191755,-7.944915,7.227279,-0.082585,-1.142498,-4.316115,-2.769792,8.348596,-7.198059,6.151733,0.287662,-7.081795,6.577784,6.605313,-7.546088,5.043128,0.084390,3.515507,-4.800591,-2.160225,6.883015,8.738968,5.321681,-8.837141,-6.634898,8.625045,7.824280,-6.299979,2.412735,-0.895859,0.681834,3.381172,-8.884260,6.719582,-8.938621,3.341197,-7.581930,-9.574046,4.637388,-8.158921,-0.380966,2.407042,1.668828,-4.624882,-9.186217,-8.298773,7.950895,-3.255696,1.410750,-9.639303,-6.622519,7.409233,6.675536,-1.692121,3.455945,-2.104257,-4.133834,2.538606,1.891489,5.680838,-6.909600,9.944588,8.296301,3.223923,4.712297,0.895966,-1.428461,5.440971,-7.575373,-2.597510,-8.386216,7.938642,4.642582,-8.181099,-1.095410,-2.400674,-7.912821,-0.945582,8.327650,-2.296793,-9.165825,-5.140365,-4.388867,-0.596030,7.658840,-7.852996,8.674721,3.797721,-8.276822,4.355597,8.262258,-1.778788,3.461111,1.931536,-0.005603,9.165506,5.722876,6.334728,7.550743,-7.122553,2.492276,-5.602934,-9.147907,6.808146,-9.160799,-3.256264,-9.756522,6.964385,7.538110,-6.941367,-9.488905,-2.691884,-4.567413,9.594906,2.317140,-2.212000,5.167223,0.047878,-1.067469,-4.376908,3.316677,-3.198343,7.845622,1.618858,4.241469,1.253770,-9.173951,0.091390,1.677431,-4.275330,6.330145,2.136611,-5.472636,-8.094871,5.985025,6.476101,9.960417,-2.854203,7.759158,-0.933159,-0.464245,-7.391111,5.374371,5.245679,-9.526935,-7.564593,-6.394010,-0.448635,-7.701914,-1.687372,-2.920328,0.755521,9.417470,-1.816338,7.632920,9.490630,-1.304133,-1.847270,-4.325770,7.171255,-5.979293,-6.819195,8.780440,5.392625,4.404542,-9.722983,7.032197,-7.666822,4.017747,1.732150,3.193812,-3.149197,-1.121668,6.733627,-8.176493,0.551232,-2.391977,-6.806099,4.095428,-5.319763,9.755085,-8.064446,-6.706678,4.448657,2.444006,-6.918630,-1.816786,9.015849,-7.449950,2.036135,4.150093,4.297913,-3.258386,1.778165,8.685926,-3.864713,-6.691299,3.189948,2.929717,6.830280,9.298296,8.896739,-3.791673,-8.482888,-6.907120,-0.611074,-7.260561,0.328833,0.917382,-0.963337,-2.231916,2.482924,2.734095,2.423658,1.418413,-6.852090,1.605190,-7.336354,-7.152382,-0.382725,-6.766533,-9.433397,-2.806838,5.128453,-6.484727,-4.037083,5.896807,-7.469454,-5.012584,1.503742,-0.361079,-6.717581,-4.063446,6.306730,8.713904,9.527498,-5.633686,-2.091746,2.480981,-6.844230,-7.334266,3.630974,-9.697961,-8.555301,2.718558,9.039988,8.759986,6.618877,-4.931309,-1.499660,-4.295360,-1.439986,8.996818,0.218557,-1.102021,1.112718,-2.648350,-8.310944,-1.405584,0.633118,9.723267,6.652105,-1.887020,-1.744867,2.897572,-0.478878,-3.258825,3.474953,-3.510500,-1.803195,-6.035926,7.043759,-6.643128,-4.256252,-5.939548,4.055340,-3.556735,7.843775,3.314750,4.612209,-3.514124,6.349217,-5.058914,9.678859,0.697887,-9.911807,8.546215,9.079885,8.043265,-7.113234,6.631450,8.137695,-7.818774,0.310457,-0.768243,-4.097681,-2.422498,5.204985,-7.920230,7.024102,0.872029,-6.264482,7.345900,-1.298111,2.828823,1.205213,-7.311843,-3.136263,5.589740,5.727185,-0.511061,-5.304876,6.610797,-6.418405,-3.594670,8.554880,6.950065,-8.824443,3.941561,7.605944,1.320039,-8.782499,-9.150514,-2.210477,-6.037841,4.014169,-2.368003,7.594104,-1.209522,8.990411,-0.813720,-9.606935,-7.520964,-0.412607,6.685760,-0.191417,-4.943123,9.230248,7.254693,-4.672151,2.240869,2.083779,-5.033098,6.244042,-3.463474,8.322303,9.235385,-2.566263,0.875701,-7.453455,-9.217363,4.097576,2.536679,7.208981,9.182656,-4.756488,-1.691046,-3.654562,-6.054235,2.393028,-9.063460,4.005181,-0.142663,-0.688004,3.462811,-0.900680,5.979313,-4.079274,-3.070138,-3.089107,-7.290342,-4.790898,-6.158048,5.891226,-7.383832,6.974332,5.097921,4.573040,-5.620119,7.344063,-7.669232,5.253070,-7.037779,-7.987766,-9.765502,-6.721676,3.392275,3.027342,4.091114,-7.820307,4.207724,-1.347415,1.796720,-3.721344,1.982587,2.600288,1.552872,-7.334701,-6.066538,4.576409,2.803923,5.612696,-4.055733,-7.263894,6.770877,-2.298451,-4.060967,-2.668157,-9.622139,1.046980,-8.065521,3.282980,8.259361,3.653955,-6.255725,-1.928020,-2.938260,-3.494962,-8.699448,-2.665581,4.175049,-2.088139,-0.879880,3.020986,8.586591,-1.369285,4.985409,-1.694271,7.055195,8.724913,-9.356822,9.944157,0.990949,0.496760,-5.196810,-8.630775,-7.032955,1.588661,9.906308,4.180301,3.742125,-2.470685,8.831572,-5.276903,5.282169,-4.230802,3.432861,-9.258433,3.039522,6.408477,-2.150563,-5.395390,-9.866919,4.442379,-1.991050,1.058045,-9.604670,7.892588,-6.526431,6.519675,5.445023,2.463484,3.873397,3.932621,6.747872,3.782840,-9.751188,4.140565,7.829801,-4.418222,2.469303,-8.481682,-6.791251,-2.406427,3.903439,-8.035143,9.828297,7.787972,9.665032,-9.448792,8.928648,-3.597305,2.630165,6.054425,-2.459891,-3.480633,2.917854,-5.038410,-5.587754,-6.069647,-9.148618,-5.541799,-7.278543,-8.841653,9.257690,-8.223814,-4.225073,-3.860352,-2.575769,2.725106,-0.258607,1.243890,-2.434738,6.513974,-1.214718,-7.051664,-6.535177,-6.424376,-8.878112,-2.736752,1.367068,6.536615,-2.131008,4.072359,6.637101,0.147073,3.980807,7.112680,-3.531622,-6.923239,-8.766872,2.151910,-2.713051,4.361736,0.467287,-2.955470,-4.245874,-2.489097,2.977156,-5.061300,-7.064165,-1.666320,-3.167284,5.039504,-4.875697,1.370498,-5.251540,4.978485,-4.167123,-0.362282,3.511690,4.994953,-2.512153,-9.760214,4.216178,-6.930112,-2.525671,5.082320,-6.019082,-2.564961,7.035768,1.351999,-7.090586,-8.272863,9.002191,-7.292416,5.673864,-1.554122,-1.059510,1.542154,5.126214,8.399566,8.865557,-8.924645,-0.181553,-4.091930,-4.105656,3.340432,9.473257,-7.823633,-9.463017,9.563682,-5.060182,7.506454,-6.411040,-9.016528,-4.986051,5.868662,2.677347,1.041778,-0.716464,4.900930,3.474876,-2.001312,-9.043538,2.995197,9.126711,-8.770608,3.024731,-5.632971,-5.042844,3.754397,6.879992,-5.415908,4.711012,-8.872910,-5.470462,-3.563520,-5.192281,-8.698443,6.166254,-9.508205,-5.040223,-1.330379,-2.299805,2.876060,-2.158198,-1.926085,4.000131,-3.603699,-8.923090,3.689706,-1.524374,9.704204,-2.037136,4.885379,8.684858,-1.043072,-4.455656,7.786390,-3.456385,2.845873,-3.171328,-5.767748,2.276638,-5.883784,8.108764,-4.335239,5.797784,-2.273825,6.311196,-6.672279,4.768307,-7.943431,2.430369,4.829483,-9.605726,-9.833480,-8.918863,-3.729068,3.659642,8.786840,-9.008911,-8.250247,6.918726,2.054512,-2.503355,-1.367388,0.203980,4.245603,-3.371133,-0.264815,-6.010201,0.587809,9.749579,-9.507531,-6.711920,9.016671,8.656717,1.857731,-7.992730,5.046067,-4.072360,1.433525,-0.145126,-3.817815,6.322810,9.803566,-9.397907,-6.351619,-5.873656,-9.268528,-4.012684,-6.463851,-4.619953,9.343433,-4.133024,2.667015,-3.907737,-6.062518,-5.677884,7.877294,4.438218,5.332247,-3.775706,9.832197,-6.197821,5.938416,0.352895,-5.444811,5.549442,1.872193,-8.373193,-4.206117,6.414315,8.956797,-2.990097,5.706659,9.334812,1.966743,-9.674135,-5.110334,-2.679950,2.126153,0.960956,1.096192,0.557660,0.207060,-3.189068,-5.730689,-2.632325,1.342340,3.890457,5.427823,2.645045,-7.533651,3.480369,-5.573654,-7.835597,-3.071884,1.902152,4.381880,-0.446388,-6.603507,-3.453051,-4.166585,-6.211226,6.969862,-7.412532,-1.118741,3.624586,8.393594,7.610236,9.979122,4.258408,-6.932201,2.127852,-4.520285,-7.180500,-0.312514,1.655751,5.602935,-8.114015,4.411311,9.471789,-2.259841,-8.453276,-8.556166,2.009052,-8.673288,2.570815,6.450157,-7.495904,-3.092795,-7.014929,1.878344,1.571619,7.360195,-2.637774,-9.485285,-1.826233,-3.876174,-3.095899,4.160046,-1.277293,-5.009482,-8.781149,9.773757,7.671786,6.025756,-0.120128,-4.547780,2.891485,-7.462162,-2.207264,-5.170314,8.939399,-3.240419,3.291386,-1.043139,0.481533,1.083362,-0.218986,-8.822050,-9.018761,-9.052587,-8.243369,-0.788753,-8.367466,5.505731,7.857778,-2.107568,5.313584,-0.889256,-0.767157,-7.475715,8.772020,8.271989,-0.965783,-7.710653,9.630502,-6.596175,3.925822,0.897311,9.392701,-4.880209,-9.270259,9.110996,0.805750,-9.655776,-2.485228,9.419899,-1.430827,-1.660457,-5.642291,7.012205,2.384536,-1.207658,-4.112907,-8.062228,-7.965840,-1.252232,3.005847,-0.465296,5.238135,-4.376456,-7.141968,-5.397598,-9.241812,9.962129,3.980763,-9.006180,-4.225539,4.183692,9.769617,-7.540214,-9.053763,-4.218696,6.226503,8.071002,-1.800533,-3.642326,5.659015,4.525674,1.395681,4.427113,-5.856789,4.375553,-4.824261,7.150361,3.746320,0.199575,4.818119,7.674248,8.065399,8.390058,3.743607,-1.369346,-9.017366,-2.074239,-8.147847,-4.273093,-5.704308,-7.773037,-5.817685,-5.032180,8.719737,-3.232908,5.834458,0.009432,-7.298483,-9.376616,4.190783,-9.441914,4.593643,5.583491,-4.401324,-6.595272,-6.471229,4.864404,-0.134748,-3.347917,-2.144560,-0.295463,-8.207735,-7.367680,8.681007,-0.414921,3.988516,-4.715911,-4.599833,-3.123019,-4.263953,5.198238,1.040812,0.103767,-5.977901,-6.536729,-5.480728,-8.543605,-6.629543,2.757200,-2.075113,-9.101376,5.447422,-6.172537,3.294135,-0.258559,9.389569,-0.071659,5.571514,-4.348844,9.405114,-7.810872,-4.002259,-6.597955,9.053107,-2.699580,-3.700380,6.043673,9.313935,3.143741,-3.662960,-2.840134,8.485864,6.912570,4.154465,-4.763396,-8.359492,-2.644912,8.478073,6.780742,2.847242,-4.386204,0.552147,9.647421,6.992906,0.191114,-3.554826,4.616706,-2.552549,-0.517731,5.778210,-5.204313,4.964975,-0.382567,4.685553,2.733718,1.638819,-9.239615,1.024073,0.831584,-5.426120,3.735305,7.404404,-3.775371,8.469359,5.542379,9.387430,-6.318144,-7.614438,-6.847105,-7.576879,-3.890009,1.828721,-9.752386,-6.343666,-8.633880,-3.612988,-2.537070,-3.763074,7.777520,8.648225,-7.831779,-2.501227,-3.681765,0.556864,6.829776,-9.993104,1.403717,-5.791947,3.617756,-2.145283,-5.438944,2.260095,-0.290946,6.708103,0.500527,-0.651963,-7.786336,-0.131567,7.232063,6.934058,9.609896,1.574596,6.820202,1.479332,-3.328070,-9.154265,-7.993600,0.524740,-2.310286,7.758730,-8.924627,1.707152,-3.357284,2.467917,-1.573475,-3.020854,-6.263990,-1.338674,-9.726434,-9.870366,0.899037,8.261150,-3.262729,-4.615875,5.321138,-2.157632,4.920134,-8.645862,9.002510,-1.016784,-6.667168,-3.969056,-1.358561,4.074540,-8.377094,1.943286,-8.169718,1.511320,-2.076727,8.754813,9.246454,7.843369,-2.102135,4.344830,2.202343,0.341130,-0.951782,-0.029536,-8.788923,9.929481,-5.405913,2.271148,5.892605,3.320244,-5.888186,-8.341427,3.258067,1.330612,9.691545,0.723759,-1.040577,3.930164,-7.760734,7.679291,9.457477,9.655322,7.928074,-8.930425,-0.954361,-3.942282,6.201336,-1.143974,-4.961051,-3.470582,-1.652123,-4.820954,-7.968538,-2.677344,-2.443233,7.088933,-7.465256,3.316509,9.793925,7.046095,6.584827,1.585087,-3.046617,7.359563,9.756058,-0.487204,-2.082857,-2.813990,-8.772657,2.252215,-1.498953,-8.863871,-3.387902,-2.727183,-9.052841,7.376840,-0.135888,-5.917382,-0.996273,9.903277,9.083725,-3.030175,9.652041,-5.085601,4.255882,-5.693360,-7.112840,-4.363498,-7.057856,8.341186,-2.952033,-2.533581,6.884789,7.796131,1.346630,0.238197,0.738054,-7.286305,-2.472308,-4.295118,-9.153163,5.437088,-1.908330,4.395078,-3.965446,9.443239,9.090997,9.663189,-6.016482,1.253591,-3.915481,-3.957303,-3.265755,-6.126979,6.983201,-0.747604,1.967280,-3.488545,0.962263,-8.490410,-8.455050,3.751815,1.140639,-7.663967,5.577165,2.257537,-3.025627,2.107927,-8.874001,6.274764,5.976597,-2.366452,5.727487,-1.541760,-6.899400,4.701774,-4.544572,9.302792,2.199197,5.264747,0.512027,-9.525315,-6.182331,-2.819682,2.697364,-6.220230,9.014195,6.268214,2.846396,8.732616,-1.936152,3.039032,4.258743,3.127378,-3.959460,-5.773662,8.024658,-8.818985,-8.091153,7.869986,-3.996032,-3.315381,-9.240378,9.550212,1.027793,7.807940,7.616589,-6.311203,7.690808,6.223954,-2.879007,2.086801,6.513887,2.460890,-0.890472,3.337724,-7.192814,-1.992032,-8.324218,8.062733,1.294735,6.082570,8.892045,4.347794,8.413895,-7.670515,-1.161974,-0.630413,4.200327,-8.320032,-3.181629,9.797273,8.227552,7.737179,8.176398,-7.836334,4.884620,9.464889,3.867840,-5.350528,4.664978,0.764084,-2.929084,7.710069,2.999250,-8.332531,-5.629793,9.700850,1.228546,5.455396,5.276895,4.751361,7.270823,4.829408,-6.081788,-5.110284,-7.507598,3.308952,7.192772,0.248246,-6.012276,-2.793887,2.428187,8.589636,-5.545702,5.205428,-2.708616,-0.796932,2.690243,-2.106724,5.987787,6.224401,-7.862702,1.416051,-3.943134,2.707050,-7.792498,4.884124,3.951174,-2.260505,2.143420,5.326560,5.827460,8.477364,1.648112,-6.033434,-7.493596,-2.672337,-9.037071,-9.813923,-0.781839,-5.477052,2.408167,-5.006446,-8.787407,-5.757413,-3.460053,2.967373,-9.751812,-1.742918,-6.507884,-3.237561,8.848973,-1.559982,-2.855186,-0.754970,-2.067873,8.799251,-6.875766,-6.658595,7.348156,-9.346978,-5.441262,1.553341,-2.530087,-2.474600,-1.182053,-6.561621,0.580387,5.074075,0.079835,5.842552,-5.943251,-3.955186,-5.442437,6.001103,3.273491,-8.936425,6.554827,-8.860852,5.343780,6.463078,-4.097652,5.622691,-0.233330,9.184569,-5.496076,4.011765,-3.403888,7.958119,-7.577921,-8.444028,-9.747148,5.549548,-5.261272,-4.830590,-7.253443,9.437328,1.634633,-5.009728,5.319995,6.622534,-8.252305,2.774572,-5.540838,-7.442084,4.071360,8.635050,0.115904,-3.669990,-1.875150,0.361153,-6.832310,4.588096,-5.323068,9.516528,-8.757410,8.173391,2.716124,6.694941,-0.879501,-6.635573,-1.179293,3.363120,-9.830076,8.585846,-7.132114,9.951864,3.297332,-9.910723,-1.093770,8.336725,1.861556,-4.385626,0.335715,-2.031521,9.236015,-9.136703,-2.236752,4.684928,9.193981,-3.687126,6.975942,-5.032200,-9.417139,-2.667135,-0.524314,1.741209,5.827193,-4.301233,2.994714,-4.752284,8.058666,-1.863036,-2.855142,-4.478834,-5.099258,-9.609202,-1.176327,-2.166149,9.039283,9.106756,1.547606,5.583358,-5.588989,7.354515,5.337644,-9.436672,-0.003011,-7.573197,-5.762438,-5.206883,9.478453,3.750857,3.519627,6.498510,-3.255721,-9.302313,9.146501,-1.649261,3.029972,-7.360963,4.203254,0.495972,2.940247,0.086441,-2.594242,6.654442,-7.210341,8.211325,-3.534677,-9.182015,-3.433890,-3.063049,8.791017,7.570925,8.435877,7.770213], dtype = "float32")#candidate|6581|(2184,)|const|float32
call_6580 = relay.TupleGetItem(func_4151_call(relay.reshape(const_6581.astype('float32'), [2184,])), 1)
call_6582 = relay.TupleGetItem(func_4153_call(relay.reshape(const_6581.astype('float32'), [2184,])), 1)
const_6593 = relay.const([[[-2,1,-9,-8,5,-7,4,7,10,-4,1,-3],[-9,-5,3,-10,6,-2,-10,7,2,8,9,-2],[3,5,6,-6,-4,9,2,4,-1,-4,-7,-8],[-4,-3,-4,-1,2,10,6,5,1,-1,3,3],[-2,-7,-8,7,1,-5,8,-1,-4,10,-1,3],[-9,6,-10,8,-8,10,-9,-7,1,-5,-10,7],[1,5,2,-3,4,5,-8,5,-9,1,-6,-10],[10,3,-4,-3,10,7,8,7,9,6,-6,-5],[-10,4,-3,-2,-10,3,7,-10,-4,3,7,3],[-1,-5,-2,1,-5,9,-9,-2,-5,-6,-1,-3],[3,6,-3,8,-10,10,-3,5,8,-9,4,-10],[8,-5,-2,5,-2,7,-2,9,8,-5,2,1],[5,-9,-1,9,-4,-8,1,-10,-6,8,2,9]],[[7,-10,-5,1,9,8,10,9,10,-10,3,-3],[7,-7,9,10,2,-8,-9,7,-10,9,-2,6],[8,-4,6,-1,1,3,-4,7,-2,-4,-4,10],[8,6,10,4,7,-10,-7,5,9,-7,2,-10],[9,-5,9,-10,5,-8,9,-2,2,-9,-4,-7],[6,-5,-8,-3,3,3,-3,10,1,2,2,6],[9,4,-2,4,5,-6,-8,-1,7,10,8,-8],[10,9,-8,-7,-10,10,-4,-10,8,3,5,5],[-9,-1,-7,-6,-3,-8,-9,9,7,-1,-6,1],[9,7,9,7,9,5,-1,2,5,4,-4,-3],[-2,4,-7,9,-1,3,8,-8,-10,-4,5,4],[3,-3,-10,-2,1,10,2,-8,-8,1,-1,-5],[-3,1,-3,9,2,7,-8,-6,-4,1,-6,7]],[[9,9,8,-2,-3,10,-9,-3,8,-5,-6,7],[7,-6,-6,8,10,5,3,10,4,1,-8,6],[-4,-4,2,-2,9,4,8,1,1,-7,-7,2],[8,5,-8,4,2,2,-1,-4,2,-8,-2,-10],[4,9,8,-3,3,-4,8,4,-8,-5,3,-1],[-7,-5,7,4,-5,-3,2,-9,3,-9,3,-3],[10,-2,-7,-7,-4,-5,-8,-4,-10,7,-4,-1],[10,-10,-1,-6,8,5,-2,10,-7,-9,-4,9],[2,7,2,3,-8,-7,-5,-2,-10,10,1,2],[-5,-2,-5,-2,-9,-3,7,-3,10,-3,-2,9],[2,-7,-9,1,-9,-2,8,-9,3,7,9,-4],[-9,-5,-4,4,6,-10,-10,9,-8,2,-7,2],[-5,1,-7,7,5,-1,-8,4,-8,-9,7,-6]],[[10,-10,10,-8,-9,1,7,-5,1,9,3,-3],[10,-7,-1,4,2,-2,-8,-7,1,-4,-7,-9],[7,8,-1,-10,5,2,10,-9,1,-5,2,-5],[-2,-1,10,-9,-8,-8,10,-2,3,10,1,8],[-3,-1,6,7,-7,-1,8,7,-9,-5,-10,5],[-2,-1,-6,-4,-3,-3,-1,1,9,-8,-3,3],[7,-4,-4,2,-4,6,3,1,5,9,6,-5],[-3,4,-7,10,2,4,-1,-1,-1,-6,-8,-10],[-3,-10,-8,-6,1,7,-6,3,10,-5,6,-7],[6,1,2,-9,-2,-6,8,-1,1,-7,6,-4],[-7,-7,-8,10,-2,9,4,-1,-9,-7,6,-3],[8,3,-10,-8,9,-2,4,10,-4,-9,7,3],[4,10,-7,-8,-3,-9,-9,1,-6,2,4,-3]],[[-1,7,2,-3,-9,8,-7,3,7,-4,10,-2],[-6,-6,8,-1,4,10,-7,4,-7,-3,9,6],[-9,10,-4,8,9,-4,-5,-10,2,-9,-1,6],[5,4,-7,-8,1,-8,2,-8,-1,-10,9,7],[7,10,-9,8,6,-8,4,-1,-5,1,4,8],[2,-2,-5,-2,-7,2,1,-7,-2,1,-2,1],[1,5,-1,-1,-1,6,5,8,-2,-5,-10,3],[-9,10,-7,9,4,3,6,-10,8,3,-6,5],[-3,5,5,7,-2,-5,9,7,9,1,-6,2],[-9,-9,-8,-4,-5,4,7,-5,-10,10,-6,5],[6,1,-8,-6,-10,5,1,8,-10,-7,-6,8],[3,-5,2,4,-7,10,8,4,4,7,-1,-1],[-9,-8,1,3,3,-2,-10,-4,1,-2,-1,6]],[[-8,-1,8,-9,-2,-4,-4,-8,-4,1,9,1],[-9,-9,-1,-8,-10,9,-4,-6,7,9,6,-8],[10,-6,-5,8,-10,-6,4,10,-6,-1,-9,-7],[9,-10,5,-7,9,3,10,10,8,9,-4,7],[9,-8,-7,5,-1,10,2,1,3,-7,-5,1],[5,-7,-10,-8,-2,-5,1,4,-2,-8,-4,-8],[-4,7,2,-5,7,-5,-8,-6,-9,-1,1,-2],[10,7,-2,-10,-10,8,-5,8,-6,-1,-7,-9],[7,7,-5,-9,3,-10,3,-1,-9,6,1,7],[10,-4,-2,3,2,5,1,6,-4,-10,8,-1],[-10,10,2,1,-3,8,7,-5,3,8,-8,9],[1,-10,-1,-6,9,-2,-3,-4,7,2,-3,-5],[-10,10,9,7,-9,1,-9,8,-4,10,1,-4]],[[4,-4,-6,3,4,-2,-5,3,8,-1,-2,5],[-9,-3,-9,-1,-4,1,-4,4,10,-8,-6,6],[-6,1,5,-2,-10,-7,2,3,-2,6,9,-3],[5,-3,-2,-5,5,6,1,-6,-5,-2,-2,-4],[9,2,9,8,-7,-7,9,9,9,6,5,2],[7,-10,-3,5,4,2,5,9,1,2,7,6],[7,5,3,6,5,1,8,-10,7,6,-1,3],[1,4,7,4,-1,7,-10,6,-9,-3,-4,1],[-4,1,-4,-9,-10,-2,2,-10,-7,-9,-10,-2],[1,-7,-6,-6,5,-6,-4,3,10,8,3,7],[6,7,-10,-6,4,-5,2,-3,-1,-8,-5,-8],[8,7,5,-1,9,-7,-9,-9,8,5,5,1],[-6,10,1,6,-5,3,8,-1,4,-7,2,-5]],[[-10,-2,-8,-1,-3,-6,1,8,-5,-4,-4,2],[-4,10,3,-10,-8,7,7,-10,9,7,-8,-5],[-5,-7,-5,-7,-6,-7,-6,1,9,-2,6,-9],[10,4,-10,-2,-8,-5,6,4,-3,-10,-9,-5],[-8,7,2,8,9,-1,-3,-5,2,5,-4,-1],[-1,-5,3,-9,6,-7,-9,10,9,10,-6,4],[-6,9,10,-4,2,-1,9,10,-7,6,1,5],[-9,3,-9,5,-8,5,6,-8,1,7,-1,-5],[-3,-4,9,8,6,5,-8,3,7,-3,9,3],[-1,10,-9,-2,-8,-9,-8,4,8,-1,10,-2],[4,-1,-7,3,-5,1,9,-6,-10,3,2,3],[-7,-6,-2,3,6,-9,8,-4,-6,-7,-8,2],[-10,9,-2,-1,1,-5,8,9,2,8,1,-3]],[[6,-1,-4,6,10,7,-10,-3,8,1,6,1],[-7,9,10,4,5,4,-10,5,-6,4,-3,-6],[-4,8,-9,1,-9,-6,4,6,-7,9,1,-9],[-8,-2,1,9,-4,-9,-5,9,-1,-2,-4,6],[-1,1,1,-6,3,8,-5,-1,-6,-2,-1,5],[-7,-8,-9,4,-1,9,-5,9,-4,-3,-5,-8],[5,4,-4,-9,-9,-3,3,-6,2,-4,-10,-6],[1,-3,-4,-9,-2,4,-5,-6,1,-1,-9,-7],[-4,-10,8,-9,3,-7,-5,-7,-3,-3,-5,-1],[10,-9,10,-10,10,9,5,-7,1,7,-2,5],[5,-4,-8,-7,6,7,-3,-10,-6,1,8,10],[-3,7,1,-3,-9,9,1,-6,-1,4,-10,8],[-5,7,-8,5,4,-1,6,-5,2,-10,9,1]],[[-9,-5,9,-4,2,-10,-10,4,-8,1,10,9],[-10,-4,-7,9,7,-4,5,5,-1,10,9,-5],[10,1,2,9,-8,-8,-7,10,1,2,-4,-5],[-1,4,2,9,5,-1,1,-8,-4,-6,7,5],[-2,4,-4,-10,-8,5,6,-2,-5,10,5,-6],[8,10,-8,3,-3,-5,-8,2,-9,-7,-2,-8],[2,-2,9,7,-10,3,3,-7,3,-3,-8,10],[-1,-4,4,1,-1,-6,-3,-8,-2,-2,-6,-3],[-2,1,-1,-7,6,7,-5,-7,-3,7,-7,-10],[3,-6,-10,8,-5,-2,-10,1,2,7,6,4],[-8,-7,5,6,9,6,10,3,-5,-4,-8,2],[-10,-7,-4,10,-3,6,4,5,5,5,9,3],[-5,-10,9,-2,10,7,-2,5,6,5,-5,-3]],[[4,-6,-8,-9,-5,5,-1,-4,6,-7,10,6],[-5,-6,-1,-1,-9,-2,-5,9,9,5,-10,-3],[10,-9,-1,-6,5,-7,1,5,-4,-8,-9,-10],[-10,10,-3,8,-4,4,3,-4,-4,-7,6,6],[1,8,2,8,-2,-3,3,8,10,5,-4,2],[-7,-2,4,-4,3,-5,-1,-6,-3,-7,2,-8],[-9,-6,1,2,8,2,3,7,9,10,8,4],[-5,-10,8,9,-10,-2,-2,10,8,2,-9,9],[2,7,-5,1,-1,9,10,9,-5,-10,7,9],[-3,9,9,-9,7,-10,6,4,-4,-9,5,6],[-10,8,-8,3,7,3,-9,-8,-8,-9,-2,6],[-8,-2,-2,2,5,-9,9,4,3,-4,10,9],[10,6,10,10,6,2,10,-2,-6,-10,3,10]],[[1,-10,-4,1,-6,-8,9,-6,-1,3,-2,8],[5,2,-10,-6,4,4,-5,-6,1,7,3,5],[2,7,2,-2,1,-5,-4,-4,4,-10,2,-10],[-1,3,2,8,-5,-8,10,3,3,4,8,-10],[7,-3,-6,-2,-10,1,-4,-6,5,7,5,7],[-10,9,-3,10,9,-9,-4,1,9,-8,10,3],[1,1,3,-3,-2,-9,-1,5,2,-4,6,-4],[7,7,7,5,1,3,-7,-7,1,4,-4,-2],[2,5,-3,-10,-3,2,-6,-10,-6,-10,-1,1],[-2,-4,3,-7,3,-2,2,-9,-10,5,-9,-2],[-7,-7,1,8,3,2,-9,-1,-2,1,5,-7],[2,-1,-8,-7,7,-1,1,4,5,-8,-6,7],[1,1,9,-1,1,-3,6,4,-3,6,8,8]],[[7,-8,-4,-2,-4,-3,1,5,7,-3,-9,10],[3,5,-5,5,-8,8,9,-9,1,7,5,3],[1,6,-2,1,2,7,9,-3,6,-1,9,9],[9,1,-9,5,-2,-9,5,2,-5,7,2,1],[1,-4,-9,10,10,-1,8,8,-4,6,6,-9],[6,3,7,-9,-5,9,-5,-1,2,3,-7,-2],[5,-2,-6,2,-8,4,-8,-4,-6,-8,-1,6],[-2,-5,-10,-9,5,-8,2,-6,4,6,3,-6],[4,-9,-4,10,6,4,-10,-10,4,-7,7,-9],[-3,4,6,6,5,-6,-2,6,10,5,3,-7],[5,-5,9,-5,10,10,-1,-7,2,9,10,4],[-3,9,6,5,10,-4,-6,1,10,4,-8,10],[-6,5,-2,5,-8,3,10,3,-8,1,8,9]],[[-3,-9,-8,10,10,10,-4,9,-1,6,-10,3],[10,1,-8,-5,-5,-2,5,-7,-9,9,3,-7],[-2,-8,-4,2,5,-9,6,-3,-8,6,-1,10],[-1,5,-7,-10,3,-3,9,10,-9,-8,-3,-7],[-10,-6,-5,2,3,4,10,-1,2,-10,9,8],[9,2,8,4,-2,10,-7,5,-2,4,-3,-4],[8,7,-4,-3,10,6,7,-10,2,-8,4,1],[-2,-7,9,-1,5,-2,2,3,-3,2,1,-8],[-1,4,-10,3,-1,9,2,-6,-8,6,-6,-4],[10,-10,9,5,-6,7,-3,10,-1,-3,10,9],[-10,10,6,6,9,6,-5,7,-10,-9,-5,7],[1,8,-1,-1,-2,6,4,-3,-9,-2,9,-8],[-6,-4,-8,-8,2,10,2,6,-2,-1,6,9]]], dtype = "uint8")#candidate|6593|(14, 13, 12)|const|uint8
bop_6594 = relay.floor_mod(bop_6568.astype('float64'), const_6593.astype('float64')) # shape=(14, 13, 12)
bop_6597 = relay.floor_mod(bop_6571.astype('float64'), const_6593.astype('float64')) # shape=(14, 13, 12)
func_6442_call = mod.get_global_var('func_6442')
func_6444_call = mutated_mod.get_global_var('func_6444')
call_6636 = func_6442_call()
call_6637 = func_6442_call()
func_2653_call = mod.get_global_var('func_2653')
func_2656_call = mutated_mod.get_global_var('func_2656')
const_6641 = relay.const([[False,True],[False,False],[True,False],[False,False],[True,False],[False,False],[False,True],[True,True],[True,True],[False,True],[True,False],[True,True],[True,False],[True,False],[False,False],[True,False],[False,True],[True,True],[True,True],[True,False],[True,True],[False,True],[True,False],[True,False],[True,True],[False,False],[False,True],[True,True],[True,True],[True,True],[True,False],[False,True],[True,True],[True,True],[False,False],[True,True],[False,False],[True,True],[False,False],[True,True],[True,True],[True,True],[True,False],[True,False],[True,False],[False,True],[True,False],[False,False],[True,True],[True,True],[False,True],[False,False],[True,True],[True,True],[True,False],[False,True],[False,True],[False,True],[True,True],[True,True],[False,True],[False,True],[True,False],[True,False],[False,True],[True,False],[False,False],[False,True],[True,True],[False,True],[True,False],[False,True],[True,False],[False,False],[False,False],[True,False],[True,True],[True,True],[False,False],[True,False],[True,True],[False,True],[True,False],[False,False],[True,False],[True,False],[False,True],[False,True],[False,False],[False,False],[False,True],[False,False],[True,True],[True,True],[True,False],[True,True],[True,True],[False,False],[True,True],[True,False],[True,False],[False,False],[False,False],[True,False],[True,True],[False,True],[True,False],[True,False],[True,False],[True,False],[True,False],[True,False],[True,False],[True,False],[True,False],[False,False],[False,False],[False,False],[True,False],[False,False],[True,False],[True,False],[False,True],[False,True],[True,True],[False,False],[True,True],[True,False],[True,False],[False,False],[False,False],[True,False],[True,True],[True,False],[True,True],[False,True],[False,True],[True,False],[False,False],[False,False],[True,False],[False,True],[True,True],[True,True],[True,False],[True,True],[False,False],[False,True],[False,True],[True,True],[False,True],[False,False],[True,False],[True,True],[False,True],[True,True],[True,False],[False,False],[True,False],[True,True],[False,True],[False,False],[True,False],[False,True],[True,True],[True,False],[True,True],[False,False],[True,True],[True,True],[False,True],[True,True],[True,True],[False,False],[True,True],[True,True],[False,False],[False,False],[False,False],[True,False],[True,False],[False,False],[False,False],[False,True],[False,False],[True,False],[True,False],[False,False],[True,False],[False,True],[True,False],[False,False],[False,False],[False,False],[False,True],[False,False],[False,False],[False,False],[True,True],[True,True],[True,False],[True,False],[False,True],[False,False],[True,False],[True,True],[False,True],[True,False],[False,True],[True,False],[False,True],[False,False],[False,True],[False,True],[False,False],[False,True],[False,True],[True,True],[True,True],[True,False],[True,False],[True,False],[True,False],[False,True],[True,True],[False,False],[True,False],[False,True],[True,True],[False,True],[True,False],[False,True],[True,True],[False,False],[False,True],[True,False],[True,False],[False,True],[True,False],[False,False],[False,False],[False,True],[True,True],[False,False],[False,False],[False,True],[False,False],[False,True],[False,True],[False,False],[False,True],[False,False],[True,False],[True,False],[True,True],[True,True],[False,True],[False,True],[False,False],[True,False],[False,True],[True,False],[False,False],[True,False],[True,True],[False,True],[False,True],[True,False],[True,False],[False,False],[False,True],[True,False],[True,True],[True,True],[True,False],[False,True],[False,True],[True,False],[True,True],[False,False],[False,False],[False,True],[True,True],[True,True],[False,True],[True,False],[True,True],[False,False],[False,True],[True,False],[True,True],[True,True],[True,True],[True,False],[False,True],[True,False],[False,True],[True,True],[False,False],[False,False],[False,False],[False,True],[True,False],[True,True],[True,False],[True,True],[False,True],[False,True],[False,False],[True,False],[True,False],[False,True],[True,False],[True,False],[False,True],[False,False],[True,True],[True,False],[True,False],[False,True],[True,True],[False,True],[False,False],[False,False],[False,True],[False,False],[False,True],[True,True],[True,False],[True,True],[False,False],[False,True],[True,True],[False,False],[False,False],[True,True],[True,True],[False,False],[False,False],[False,False],[True,True],[False,True],[False,False],[True,True],[False,False],[False,False],[False,False],[False,True],[False,False],[False,False],[False,True],[True,True],[True,True],[True,True],[True,False],[True,False],[True,False],[False,True],[False,True],[False,False],[True,False],[True,False],[True,True],[True,True],[True,True],[True,True],[True,False],[False,False],[True,False],[True,False],[False,False],[False,True],[False,False],[False,False],[True,False],[True,True],[False,False],[True,True],[True,False],[False,False],[False,True],[True,True],[True,True],[True,False],[True,False],[False,True],[False,True],[False,True],[True,False],[True,True],[False,False],[False,True],[False,True],[False,True],[True,True],[True,True],[False,False],[False,False],[False,True],[False,True],[True,True],[True,False],[False,True],[True,True],[False,False],[False,False],[True,False],[True,True],[True,False],[True,True],[True,False],[False,True],[True,True],[True,True],[False,False],[False,False],[True,True],[False,True],[True,True],[False,True],[True,True],[True,False],[True,True],[False,True],[True,True],[False,False],[True,False],[True,False],[True,True],[True,False],[True,False],[False,False],[True,False],[True,False],[True,True],[True,False],[False,True],[True,False],[False,True],[True,True],[False,True],[True,True],[True,False],[False,True],[True,True],[True,False],[True,True],[False,True],[True,True],[True,False],[True,True],[False,True],[False,True],[True,False],[False,False],[True,False],[True,False],[False,True],[False,False],[False,False],[True,True],[False,True],[False,True],[False,True],[False,True],[True,True],[False,True],[True,False],[True,False],[False,True],[True,True],[False,False],[True,False],[True,False],[False,True],[False,True],[False,False],[False,False],[True,False],[True,False],[False,False],[True,False],[False,False],[True,True],[True,True],[False,False],[True,False],[False,False],[False,False],[False,False],[True,False],[False,False],[True,False],[False,False],[True,False],[False,True],[False,False],[True,False],[False,False],[True,True],[False,False],[True,True],[False,False],[True,True],[False,False],[True,True],[False,True],[True,True],[False,False],[False,True],[False,False],[False,False],[False,True],[True,True],[False,False],[False,False],[False,False],[True,True],[False,False],[False,False],[False,True],[True,True],[True,True],[False,True],[True,False],[False,True],[True,False],[True,True],[True,False],[False,True],[True,True],[True,True],[True,False],[False,True],[True,False],[True,True],[False,False],[False,True],[True,True],[False,False],[True,False],[True,False],[False,True],[False,True],[True,False],[True,False],[True,False],[False,False],[True,False],[True,False],[True,False],[True,True],[True,False],[False,False],[True,False],[True,False],[False,False],[True,False],[True,True],[True,True],[True,False],[True,True],[True,True],[True,False],[False,True],[False,True],[True,True],[False,False],[True,False],[True,False],[False,False],[True,False],[False,False],[False,False],[True,True],[True,False],[False,False],[True,True],[False,True],[True,False],[False,True],[True,True],[False,True],[False,False],[True,True],[False,True],[True,True],[True,True],[True,True],[True,False],[False,False],[True,False],[True,False],[True,True],[True,False],[True,True],[True,False],[True,False],[True,True],[False,False],[False,False],[True,True],[False,False],[False,True],[True,False],[False,True],[False,True],[False,True],[True,True],[False,True],[False,True],[False,True],[True,True],[True,False],[False,True],[False,False],[False,True],[True,False],[True,False],[True,False],[False,True],[False,False],[False,False],[False,False],[True,False],[True,True],[False,True],[True,True],[True,False],[False,True],[False,False],[False,False],[False,True],[False,True],[True,True],[False,True],[True,False],[False,True],[False,False],[True,True],[False,False],[True,False],[False,False],[False,True],[False,False],[False,False],[False,False],[False,False],[False,False],[False,True],[False,False],[True,True],[False,True],[False,False],[True,False],[True,True],[False,False],[False,False],[False,False],[True,True],[False,False],[True,False],[False,False],[True,False],[False,True],[False,False],[True,True],[True,True],[False,False],[True,True],[False,False],[False,False],[True,False],[True,True],[False,False],[False,False],[False,False],[True,True],[False,False],[True,False],[True,True],[True,False],[False,False],[True,False],[False,False],[True,False],[False,False],[True,True],[False,False],[True,True],[False,True],[True,True],[True,False],[False,True],[False,True],[False,True],[True,True],[True,True],[True,False],[False,False],[False,True],[False,True],[True,True],[False,False],[True,True],[True,False],[True,False],[True,False],[True,True],[False,True],[False,False],[True,True],[True,False],[True,False],[True,True],[False,True],[False,True],[False,False],[False,True],[False,False],[False,True],[False,True],[True,True],[False,False],[False,False],[False,False],[False,True],[False,True],[True,True],[True,False],[False,False],[False,False],[True,False],[False,True],[True,False],[True,False],[True,True],[True,True],[False,True],[True,False],[True,True],[True,True],[False,True],[False,False],[False,False],[False,False],[False,False],[False,True],[True,True],[False,False],[True,False],[False,True],[True,False],[False,False],[True,True],[False,True],[True,True],[False,True],[False,True],[True,False],[True,False],[False,True],[False,True],[False,True],[False,False],[False,True],[False,False],[False,False],[False,False],[False,False],[False,False],[True,True],[False,True],[False,False],[False,False],[True,True],[False,True],[False,False],[False,False],[False,False],[True,False],[False,True],[False,False],[True,True],[True,True],[True,True],[False,False],[False,False],[True,False],[False,False],[False,True],[True,False],[True,False],[True,True],[False,True],[False,True],[True,False],[True,True],[False,False],[False,True],[False,True],[False,False],[True,False],[False,True],[True,False],[True,True],[False,False],[False,True],[False,True],[False,True],[False,False],[False,True],[False,True],[False,True],[False,True],[False,False],[False,True],[False,False],[True,False],[True,False],[False,False],[False,False],[False,False],[True,True],[True,False],[False,True],[False,False],[False,True],[False,False],[False,False],[True,False],[False,False],[True,False],[False,True],[False,True],[True,False],[True,True],[True,True],[True,False],[False,False],[False,False],[True,True],[True,True],[False,True],[False,False],[True,True],[False,True],[True,False],[True,True],[True,True],[False,False],[True,True],[False,False],[True,True],[True,True],[False,True],[False,True],[False,True],[True,False],[False,True],[False,True],[False,True],[False,False],[True,True],[True,False],[False,False],[False,True],[True,False],[False,False],[False,True],[False,False],[False,False],[True,True],[True,False],[True,True],[True,False],[False,False],[True,False],[False,False],[True,True],[False,True],[True,False],[False,True],[True,False],[True,True],[True,True],[True,False],[True,False],[True,False],[True,False],[True,False],[False,True],[False,True],[True,False],[True,False],[False,True],[True,True],[False,False],[False,True],[False,False],[False,False],[True,True],[False,True],[True,True],[True,False],[True,True],[True,False],[False,True],[True,False],[False,True],[False,False],[False,False],[True,False],[False,False],[True,False],[False,True],[False,True],[False,False],[False,False],[True,False],[False,True],[True,True],[True,True],[True,False]], dtype = "bool")#candidate|6641|(924, 2)|const|bool
call_6640 = relay.TupleGetItem(func_2653_call(relay.reshape(const_6641.astype('bool'), [14, 11, 12])), 2)
call_6642 = relay.TupleGetItem(func_2656_call(relay.reshape(const_6641.astype('bool'), [14, 11, 12])), 2)
output = relay.Tuple([bop_6562,call_6572,const_6573,call_6580,const_6581,bop_6594,call_6636,call_6640,const_6641,])
output2 = relay.Tuple([bop_6565,call_6574,const_6573,call_6582,const_6581,bop_6597,call_6637,call_6642,const_6641,])
func_6644 = relay.Function([var_6561,], output)
mod['func_6644'] = func_6644
mod = relay.transform.InferType()(mod)
mutated_mod['func_6644'] = func_6644
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6645 = relay.var("var_6645", dtype = "float32", shape = (14, 1, 12))#candidate|6645|(14, 1, 12)|var|float32
func_6644_call = mutated_mod.get_global_var('func_6644')
call_6646 = func_6644_call(var_6645)
output = call_6646
func_6647 = relay.Function([var_6645], output)
mutated_mod['func_6647'] = func_6647
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1921_call = mod.get_global_var('func_1921')
func_1923_call = mutated_mod.get_global_var('func_1923')
call_6676 = func_1921_call()
call_6677 = func_1921_call()
uop_6694 = relay.log2(call_6676.astype('float64')) # shape=(18, 140)
uop_6696 = relay.log2(call_6677.astype('float64')) # shape=(18, 140)
bop_6699 = relay.less(call_6676.astype('bool'), relay.reshape(uop_6694.astype('bool'), relay.shape_of(call_6676))) # shape=(18, 140)
bop_6702 = relay.less(call_6677.astype('bool'), relay.reshape(uop_6696.astype('bool'), relay.shape_of(call_6677))) # shape=(18, 140)
bop_6713 = relay.floor_mod(call_6676.astype('float32'), relay.reshape(uop_6694.astype('float32'), relay.shape_of(call_6676))) # shape=(18, 140)
bop_6716 = relay.floor_mod(call_6677.astype('float32'), relay.reshape(uop_6696.astype('float32'), relay.shape_of(call_6677))) # shape=(18, 140)
func_265_call = mod.get_global_var('func_265')
func_267_call = mutated_mod.get_global_var('func_267')
call_6719 = func_265_call()
call_6720 = func_265_call()
uop_6728 = relay.cos(bop_6699.astype('float64')) # shape=(18, 140)
uop_6730 = relay.cos(bop_6702.astype('float64')) # shape=(18, 140)
bop_6734 = relay.bitwise_xor(uop_6694.astype('uint64'), relay.reshape(bop_6699.astype('uint64'), relay.shape_of(uop_6694))) # shape=(18, 140)
bop_6737 = relay.bitwise_xor(uop_6696.astype('uint64'), relay.reshape(bop_6702.astype('uint64'), relay.shape_of(uop_6696))) # shape=(18, 140)
func_4151_call = mod.get_global_var('func_4151')
func_4153_call = mutated_mod.get_global_var('func_4153')
const_6746 = relay.constdtype = "float32")#candidate|6746|(84, 26)|const|float32
call_6745 = relay.TupleGetItem(func_4151_call(relay.reshape(const_6746.astype('float32'), [2184,])), 2)
call_6747 = relay.TupleGetItem(func_4153_call(relay.reshape(const_6746.astype('float32'), [2184,])), 2)
uop_6752 = relay.log10(uop_6728.astype('float32')) # shape=(18, 140)
uop_6754 = relay.log10(uop_6730.astype('float32')) # shape=(18, 140)
bop_6756 = relay.right_shift(uop_6752.astype('int32'), relay.reshape(bop_6734.astype('int32'), relay.shape_of(uop_6752))) # shape=(18, 140)
bop_6759 = relay.right_shift(uop_6754.astype('int32'), relay.reshape(bop_6737.astype('int32'), relay.shape_of(uop_6754))) # shape=(18, 140)
output = relay.Tuple([bop_6713,call_6719,call_6745,const_6746,bop_6756,])
output2 = relay.Tuple([bop_6716,call_6720,call_6747,const_6746,bop_6759,])
func_6760 = relay.Function([], output)
mod['func_6760'] = func_6760
mod = relay.transform.InferType()(mod)
mutated_mod['func_6760'] = func_6760
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6760_call = mutated_mod.get_global_var('func_6760')
call_6761 = func_6760_call()
output = call_6761
func_6762 = relay.Function([], output)
mutated_mod['func_6762'] = func_6762
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4754_call = mod.get_global_var('func_4754')
func_4756_call = mutated_mod.get_global_var('func_4756')
call_6797 = relay.TupleGetItem(func_4754_call(), 0)
call_6798 = relay.TupleGetItem(func_4756_call(), 0)
output = call_6797
output2 = call_6798
func_6799 = relay.Function([], output)
mod['func_6799'] = func_6799
mod = relay.transform.InferType()(mod)
mutated_mod['func_6799'] = func_6799
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6799_call = mutated_mod.get_global_var('func_6799')
call_6800 = func_6799_call()
output = call_6800
func_6801 = relay.Function([], output)
mutated_mod['func_6801'] = func_6801
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6889 = relay.var("var_6889", dtype = "float64", shape = ())#candidate|6889|()|var|float64
const_6890 = relay.const([[[-1.499469,-9.070435,8.353106,-7.980653],[2.706897,-0.721748,7.259214,3.435801],[-2.192939,6.073142,-7.681781,-5.786635],[-4.088962,-1.359379,7.484204,9.726058],[-9.183604,-1.760459,-2.152993,-2.705344],[-6.251263,-1.553529,7.495463,-4.631285]],[[5.856375,-0.922920,-8.676488,-8.891143],[-2.599494,2.279627,-1.369473,4.607229],[-8.798491,4.357001,-8.550681,-7.268545],[-0.981216,-5.283345,-2.365064,5.772044],[-6.154065,-3.346726,-1.985174,-2.045783],[9.369309,6.934051,-4.553926,-4.782982]],[[-6.041134,-2.056622,-8.161502,3.788444],[2.644572,-5.111226,4.515367,5.710690],[7.054888,-4.588791,-6.498507,-9.176628],[-8.677369,-0.450041,-8.184908,7.154978],[-0.934367,5.529312,-1.497712,7.259355],[3.923800,1.338879,1.033453,-7.809269]],[[-5.332053,-5.972040,0.400846,8.568763],[-4.936821,1.749239,-0.272286,-6.907816],[-8.608556,6.823523,-5.265251,-7.678213],[-8.787276,-3.686233,6.032134,3.027451],[7.186085,-3.280586,-6.498516,-9.214361],[5.808037,-0.413580,-3.046726,-0.704802]],[[-6.120896,7.178885,-4.164094,-9.279835],[-2.374026,-2.107584,-7.300592,6.550875],[-1.644685,-5.682297,1.543334,9.393301],[-0.447577,2.603950,-0.197428,0.292296],[1.346392,-8.789824,2.745629,8.725241],[0.136967,2.704231,0.968249,-7.870890]],[[-0.209323,-8.118474,6.381459,7.265084],[5.606408,8.661577,-1.593911,9.223437],[5.507979,-8.616658,-8.190657,-0.485778],[2.313834,3.603236,2.972756,-9.713441],[4.379257,9.840203,9.162940,-2.285812],[6.739782,-3.119613,2.809259,-4.740615]],[[0.963061,8.381758,-6.666258,-1.352765],[8.933644,-6.978587,6.951334,-2.020693],[2.867688,9.916250,-8.366249,-3.611666],[0.004321,-5.779260,-3.740395,-1.823506],[4.387482,3.595873,9.217544,0.552917],[-3.982752,0.108007,4.974184,-9.307652]],[[-6.098788,6.107926,9.078909,-5.376209],[-3.327681,8.044230,4.471645,1.121327],[8.948226,-8.127809,-8.013527,2.578472],[6.257247,-8.028426,0.433608,-0.009599],[-6.533844,-2.840306,2.766324,5.314891],[2.011726,-6.789557,-4.349424,4.158404]],[[-6.502708,-9.686192,-9.147510,3.129868],[1.679102,-9.060545,-7.519666,-4.163031],[-6.046427,3.044852,4.061678,2.022029],[0.934908,-1.682368,7.949941,-1.590059],[1.080067,-8.611178,-4.404219,-9.791428],[1.802210,-0.868707,4.512579,6.756479]],[[-6.226608,9.228218,9.942674,-2.361637],[-4.661313,-0.274940,8.804799,9.149742],[3.847737,-0.791293,-0.358141,1.273623],[1.631690,5.053914,-8.170348,-6.755516],[7.855286,8.676527,-2.796029,-3.624304],[-6.276770,1.175708,7.595465,-9.231480]]], dtype = "float64")#candidate|6890|(10, 6, 4)|const|float64
bop_6891 = relay.greater(var_6889.astype('bool'), const_6890.astype('bool')) # shape=(10, 6, 4)
var_6897 = relay.var("var_6897", dtype = "bool", shape = (10, 6, 4))#candidate|6897|(10, 6, 4)|var|bool
bop_6898 = relay.not_equal(bop_6891.astype('bool'), relay.reshape(var_6897.astype('bool'), relay.shape_of(bop_6891))) # shape=(10, 6, 4)
func_2218_call = mod.get_global_var('func_2218')
func_2219_call = mutated_mod.get_global_var('func_2219')
call_6904 = relay.TupleGetItem(func_2218_call(), 0)
call_6905 = relay.TupleGetItem(func_2219_call(), 0)
func_1296_call = mod.get_global_var('func_1296')
func_1298_call = mutated_mod.get_global_var('func_1298')
call_6907 = relay.TupleGetItem(func_1296_call(), 0)
call_6908 = relay.TupleGetItem(func_1298_call(), 0)
output = relay.Tuple([bop_6898,call_6904,call_6907,])
output2 = relay.Tuple([bop_6898,call_6905,call_6908,])
func_6909 = relay.Function([var_6889,var_6897,], output)
mod['func_6909'] = func_6909
mod = relay.transform.InferType()(mod)
var_6910 = relay.var("var_6910", dtype = "float64", shape = ())#candidate|6910|()|var|float64
var_6911 = relay.var("var_6911", dtype = "bool", shape = (10, 6, 4))#candidate|6911|(10, 6, 4)|var|bool
output = func_6909(var_6910,var_6911,)
func_6912 = relay.Function([var_6910,var_6911,], output)
mutated_mod['func_6912'] = func_6912
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3818_call = mod.get_global_var('func_3818')
func_3819_call = mutated_mod.get_global_var('func_3819')
call_6923 = func_3818_call()
call_6924 = func_3818_call()
func_1107_call = mod.get_global_var('func_1107')
func_1109_call = mutated_mod.get_global_var('func_1109')
call_6931 = func_1107_call()
call_6932 = func_1107_call()
output = relay.Tuple([call_6923,call_6931,])
output2 = relay.Tuple([call_6924,call_6932,])
func_6954 = relay.Function([], output)
mod['func_6954'] = func_6954
mod = relay.transform.InferType()(mod)
output = func_6954()
func_6955 = relay.Function([], output)
mutated_mod['func_6955'] = func_6955
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1544_call = mod.get_global_var('func_1544')
func_1546_call = mutated_mod.get_global_var('func_1546')
call_6967 = func_1544_call()
call_6968 = func_1544_call()
func_3381_call = mod.get_global_var('func_3381')
func_3382_call = mutated_mod.get_global_var('func_3382')
call_6969 = relay.TupleGetItem(func_3381_call(), 0)
call_6970 = relay.TupleGetItem(func_3382_call(), 0)
bop_6979 = relay.less_equal(call_6967.astype('bool'), relay.reshape(call_6969.astype('bool'), relay.shape_of(call_6967))) # shape=(14, 1, 12)
bop_6982 = relay.less_equal(call_6968.astype('bool'), relay.reshape(call_6970.astype('bool'), relay.shape_of(call_6968))) # shape=(14, 1, 12)
output = bop_6979
output2 = bop_6982
func_6990 = relay.Function([], output)
mod['func_6990'] = func_6990
mod = relay.transform.InferType()(mod)
mutated_mod['func_6990'] = func_6990
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6990_call = mutated_mod.get_global_var('func_6990')
call_6991 = func_6990_call()
output = call_6991
func_6992 = relay.Function([], output)
mutated_mod['func_6992'] = func_6992
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6993 = relay.var("var_6993", dtype = "uint32", shape = (6, 10, 11))#candidate|6993|(6, 10, 11)|var|uint32
var_6994 = relay.var("var_6994", dtype = "uint32", shape = (6, 10, 11))#candidate|6994|(6, 10, 11)|var|uint32
bop_6995 = relay.not_equal(var_6993.astype('bool'), relay.reshape(var_6994.astype('bool'), relay.shape_of(var_6993))) # shape=(6, 10, 11)
output = bop_6995
output2 = bop_6995
F = relay.Function([var_6993,var_6994,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_6993,var_6994,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

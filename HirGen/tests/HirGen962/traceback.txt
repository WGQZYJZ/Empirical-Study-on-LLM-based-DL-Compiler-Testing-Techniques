==========mod==========
#[version = "0.0.5"]
def @func_20695() -> (Tensor[(3, 9, 5), float64],) {
  %0 = @func_7537() /* ty=Tensor[(3, 9, 5), float64] */;
  (%0,)
}

def @func_4259() -> (Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) {
  %1 = @func_2447() /* ty=(Tensor[(?, 8, 13), float32],) */;
  %2 = %1.0;
  %3 = @func_4153() /* ty=Tensor[(?, 8, 13), float32] */;
  (%2, %3)
}

def @func_19340() -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) {
  %4 = @func_6283() /* ty=Tensor[(3, 9, 5), float64] */;
  %5 = @func_7133() /* ty=Tensor[(3, 9, 5), float64] */;
  (%4, %5)
}

def @func_3345() -> Tensor[(?, 8, 13), float32] {
  %6 = @func_2581() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64], Tensor[(105, 2), float64], Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64]) */;
  %6.3
}

def @func_12437(%var_12430: Tensor[(128), float32]) -> (Tensor[(?, 8, 13), bool], Tensor[(3, 45), float32], Tensor[(1620), float32], Tensor[(128), float32], Tensor[(3, 9, 5), float64]) {
  %7 = @func_10788() /* ty=(Tensor[(?, 8, 13), bool], Tensor[(?, 8, 13), bool], Tensor[(3, 9, 5), uint16]) */;
  %8 = cast(meta[relay.Constant][0] /* ty=Tensor[(1620), float32] */, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %9 = cast(%var_12430, dtype="float32") /* ty=Tensor[(128), float32] */;
  %10 = reshape(%8, newshape=[1620]) /* ty=Tensor[(1620), float32] */;
  %11 = reshape(%9, newshape=[128]) /* ty=Tensor[(128), float32] */;
  %12 = @func_8747(%10, %11) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 45), float32], Tensor[(1620), float32], Tensor[(128), float32], Tensor[(52, 2), bool], Tensor[(210), float64]) */;
  %13 = %7.1;
  %14 = %12.1;
  %15 = @func_7537() /* ty=Tensor[(3, 9, 5), float64] */;
  (%13, %14, meta[relay.Constant][0] /* ty=Tensor[(1620), float32] */, %var_12430, %15)
}

def @func_6867() -> (Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(15, 210), bool], Tensor[(7, 8, 13), int16]) {
  %16 = @func_5740() /* ty=(Tensor[(?, 8, 13), float32],) */;
  %17 = cast(meta[relay.Constant][1] /* ty=Tensor[(1, 210), float64] */, dtype="float64") /* ty=Tensor[(1, 210), float64] */;
  %18 = reshape(%17, newshape=[210, 1]) /* ty=Tensor[(210, 1), float64] */;
  %19 = @func_5520(%18) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64], Tensor[(210, 1), float64]) */;
  %20 = cast(meta[relay.Constant][1] /* ty=Tensor[(1, 210), float64] */, dtype="bool") /* ty=Tensor[(1, 210), bool] */;
  %21 = cast(meta[relay.Constant][2] /* ty=Tensor[(15, 210), float64] */, dtype="bool") /* ty=Tensor[(15, 210), bool] */;
  %22 = @func_2839() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(7, 8, 13), int16]) */;
  %23 = %16.0;
  %24 = %19.1;
  %25 = not_equal(%20, %21) /* ty=Tensor[(15, 210), bool] */;
  %26 = %22.1;
  (%23, %24, %25, %26)
}

def @func_5379(%var_5359: Tensor[(210), float64]) -> (Tensor[(7, 8, 13), int16], Tensor[(?, 8, 13), bool], Tensor[(135), float64], Tensor[(210), float64], Tensor[(128), float32]) {
  %27 = @func_2839() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(7, 8, 13), int16]) */;
  %28 = cast(meta[relay.Constant][3] /* ty=Tensor[(135), float64] */, dtype="float64") /* ty=Tensor[(135), float64] */;
  %29 = cast(%var_5359, dtype="float64") /* ty=Tensor[(210), float64] */;
  %30 = cast(meta[relay.Constant][4] /* ty=Tensor[(128), float32] */, dtype="float32") /* ty=Tensor[(128), float32] */;
  %31 = reshape(%28, newshape=[45, 3]) /* ty=Tensor[(45, 3), float64] */;
  %32 = reshape(%29, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %33 = reshape(%30, newshape=[128]) /* ty=Tensor[(128), float32] */;
  %34 = @func_3116(%31, %32, %33) /* ty=(Tensor[(?, 8, 13), float32], Tensor[(45, 3), float64], Tensor[(?, 8, 13), bool], Tensor[(210), float64], Tensor[(210), float64], Tensor[(2, 7, 15), uint32], Tensor[(128), bool], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(1620), float32]) */;
  %35 = %27.1;
  %36 = %34.2;
  (%35, %36, meta[relay.Constant][3] /* ty=Tensor[(135), float64] */, %var_5359, meta[relay.Constant][4] /* ty=Tensor[(128), float32] */)
}

def @func_6814() -> Tensor[(3, 9, 5), float64] {
  @func_2600() /* ty=Tensor[(3, 9, 5), float64] */
}

def @func_16434() -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) {
  %37 = @func_4609() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %38 = @func_9180() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(7, 8, 13), bool], Tensor[(7, 104), int16]) */;
  %39 = @func_4609() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %40 = %37.0;
  %41 = @func_12787() /* ty=Tensor[(?, 8, 13), float32] */;
  %42 = %38.0;
  %43 = %39.0;
  %44 = @func_4359() /* ty=Tensor[(?, 8, 13), float32] */;
  (%40, %41, %42, %43, %44)
}

def @func_2581() -> (Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64], Tensor[(105, 2), float64], Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64]) {
  %45 = @func_2384() /* ty=(Tensor[(10, 4, 6), int32], Tensor[(?, 8, 13), bool], Tensor[(1, 104), bool]) */;
  %46 = %45.1;
  %47 = cast(%46, dtype="float64") /* ty=Tensor[(?, 8, 13), float64] */;
  %48 = sqrt(%47) /* ty=Tensor[(?, 8, 13), float64] */;
  %49 = cast(%48, dtype="float32") /* ty=Tensor[(?, 8, 13), float32] */;
  %50 = cast(meta[relay.Constant][5] /* ty=Tensor[(105, 2), float64] */, dtype="float64") /* ty=Tensor[(105, 2), float64] */;
  %51 = reshape(%50, newshape=[2, 7, 15]) /* ty=Tensor[(2, 7, 15), float64] */;
  %52 = @func_869(%51) /* ty=(Tensor[(2, 7, 15), float64],) */;
  %53 = @func_2447() /* ty=(Tensor[(?, 8, 13), float32],) */;
  %54 = %52.0;
  %55 = cast(%54, dtype="float64") /* ty=Tensor[(2, 7, 15), float64] */;
  %56 = reshape(%55, newshape=[2, 7, 15]) /* ty=Tensor[(2, 7, 15), float64] */;
  %57 = @func_869(%56) /* ty=(Tensor[(2, 7, 15), float64],) */;
  %58 = erf(%49) /* ty=Tensor[(?, 8, 13), float32] */;
  %59 = %53.0;
  %60 = %57.0;
  (%58, %54, meta[relay.Constant][5] /* ty=Tensor[(105, 2), float64] */, %59, %60)
}

def @func_7341() -> (Tensor[(3, 9, 5), float64],) {
  %61 = @func_3180() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %62 = %61.0;
  (%62,)
}

def @func_9912() -> (Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) {
  %63 = @func_4746() /* ty=(Tensor[(?, 8, 13), float32],) */;
  %64 = @func_9760() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %65 = %63.0;
  %66 = %64.0;
  (%65, %66)
}

def @func_7537() -> Tensor[(3, 9, 5), float64] {
  %67 = @func_3538() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) */;
  %67.0
}

def @func_15065() -> Tensor[(3, 9, 5), float64] {
  @func_4867() /* ty=Tensor[(3, 9, 5), float64] */
}

def @func_16640(%var_16569: Tensor[(105, 2), float64]) -> (Tensor[(3, 9, 5), float64], Tensor[(105, 2), float64], Tensor[(210, 5), float32], Tensor[(210, 5), float64], Tensor[(3, 9, 5), float64]) {
  %68 = cast(%var_16569, dtype="float64") /* ty=Tensor[(105, 2), float64] */;
  %69 = reshape(%68, newshape=[210, 1]) /* ty=Tensor[(210, 1), float64] */;
  %70 = @func_5520(%69) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64], Tensor[(210, 1), float64]) */;
  %71 = %70.3;
  %72 = cast(%71, dtype="float32") /* ty=Tensor[(210, 1), float32] */;
  %73 = cast(meta[relay.Constant][6] /* ty=Tensor[(210, 5), float64] */, dtype="float32") /* ty=Tensor[(210, 5), float32] */;
  %74 = cast(meta[relay.Constant][6] /* ty=Tensor[(210, 5), float64] */, dtype="float64") /* ty=Tensor[(210, 5), float64] */;
  %75 = log10(%74) /* ty=Tensor[(210, 5), float64] */;
  %76 = cast(meta[relay.Constant][6] /* ty=Tensor[(210, 5), float64] */, dtype="float32") /* ty=Tensor[(210, 5), float32] */;
  %77 = shape_of(%75, dtype="int32") /* ty=Tensor[(2), int32] */;
  %78 = cast(%75, dtype="float32") /* ty=Tensor[(210, 5), float32] */;
  %79 = dyn.reshape(%76, %77, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %80 = power(%78, %79) /* ty=Tensor[(210, 5), float32] */;
  %81 = cast(%80, dtype="float64") /* ty=Tensor[(210, 5), float64] */;
  %82 = @func_7543() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %83 = @func_6411() /* ty=Tensor[(3, 9, 5), float64] */;
  %84 = mod(%72, %73) /* ty=Tensor[(210, 5), float32] */;
  %85 = exp(%81) /* ty=Tensor[(210, 5), float64] */;
  %86 = %82.0;
  (%83, %var_16569, %84, %85, %86)
}

def @func_7476() -> (Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), uint16]) {
  %87 = @func_5084() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) */;
  %88 = @func_3672() /* ty=(Tensor[(3, 9, 5), uint16],) */;
  %89 = %87.0;
  %90 = %88.0;
  (%89, %90)
}

def @func_8030() -> (Tensor[(4, 8, 13), int16], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) {
  %91 = @func_3345() /* ty=Tensor[(?, 8, 13), float32] */;
  %92 = cast(%91, dtype="int16") /* ty=Tensor[(?, 8, 13), int16] */;
  %93 = cast(meta[relay.Constant][7] /* ty=Tensor[(4, 8, 13), float32] */, dtype="int16") /* ty=Tensor[(4, 8, 13), int16] */;
  %94 = subtract(%92, %93) /* ty=Tensor[(4, 8, 13), int16] */;
  %95 = @func_4471() /* ty=Tensor[(?, 8, 13), float32] */;
  %96 = @func_6814() /* ty=Tensor[(3, 9, 5), float64] */;
  (%94, %95, %96)
}

def @func_7448() -> (Tensor[(3, 9, 5), float64],) {
  %97 = @func_2600() /* ty=Tensor[(3, 9, 5), float64] */;
  (%97,)
}

def @func_15381() -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(210), float64]) {
  %98 = cast(meta[relay.Constant][8] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %99 = reshape(%98, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %100 = @func_6028(%99) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(210), float64]) */;
  %101 = @func_7537() /* ty=Tensor[(3, 9, 5), float64] */;
  %102 = %100.0;
  (%101, %102, meta[relay.Constant][8] /* ty=Tensor[(210), float64] */)
}

def @func_4292(%var_4286: Tensor[(7, 8, 13), int16]) -> (Tensor[(7, 8, 13), bool],) {
  %103 = @func_3386() /* ty=Tensor[(7, 8, 13), int16] */;
  %104 = cast(%var_4286, dtype="bool") /* ty=Tensor[(7, 8, 13), bool] */;
  %105 = shape_of(%103, dtype="int32") /* ty=Tensor[(3), int32] */;
  %106 = cast(%103, dtype="bool") /* ty=Tensor[(7, 8, 13), bool] */;
  %107 = dyn.reshape(%104, %105, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %108 = greater_equal(%106, %107) /* ty=Tensor[(7, 8, 13), bool] */;
  (%108,)
}

def @func_17510() -> Tensor[(?, 8, 13), float32] {
  %109 = @func_11864() /* ty=(Tensor[(3, 9, 5), uint16], Tensor[(2, 7, 15), float64], Tensor[(210), float64], Tensor[(7, 8, 13), int16], Tensor[(?, 8, 13), float32]) */;
  %109.4
}

def @func_2289(%var_2212: Tensor[(12, 15, 9), float32], %var_2233: Tensor[(128), float32], %var_2235: Tensor[(52, 2), bool], %var_2243: Tensor[(210), float64]) -> (Tensor[(3, 45), float32], Tensor[(128), float32], Tensor[(135), float64], Tensor[(52, 2), bool], Tensor[(2, 7, 15), float64], Tensor[(210), float64], Tensor[(12, 15, 9), float64], Tensor[(12, 15, 9), int8], Tensor[(2, 7, 15), float64]) {
  %110 = cast(%var_2233, dtype="float32") /* ty=Tensor[(128), float32] */;
  %111 = cast(meta[relay.Constant][9] /* ty=Tensor[(135), float64] */, dtype="float64") /* ty=Tensor[(135), float64] */;
  %112 = cast(%var_2235, dtype="bool") /* ty=Tensor[(52, 2), bool] */;
  %113 = reshape(%110, newshape=[16, 1, 8]) /* ty=Tensor[(16, 1, 8), float32] */;
  %114 = reshape(%111, newshape=[3, 45]) /* ty=Tensor[(3, 45), float64] */;
  %115 = reshape(%112, newshape=[104]) /* ty=Tensor[(104), bool] */;
  %116 = @func_1683(%113, %114, %115) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(16, ?, 8), uint16], Tensor[(?, 8, 13), bool], Tensor[(104), bool], Tensor[(3, 45), float32]) */;
  %117 = cast(%var_2243, dtype="float64") /* ty=Tensor[(210), float64] */;
  %118 = reshape(%117, newshape=[2, 7, 15]) /* ty=Tensor[(2, 7, 15), float64] */;
  %119 = @func_869(%118) /* ty=(Tensor[(2, 7, 15), float64],) */;
  %120 = cast(%var_2212, dtype="float32") /* ty=Tensor[(12, 15, 9), float32] */;
  %121 = sinh(%120) /* ty=Tensor[(12, 15, 9), float32] */;
  %122 = cast(%121, dtype="float64") /* ty=Tensor[(12, 15, 9), float64] */;
  %123 = erf(%122) /* ty=Tensor[(12, 15, 9), float64] */;
  %124 = cast(%123, dtype="float64") /* ty=Tensor[(12, 15, 9), float64] */;
  %125 = cast(%123, dtype="float64") /* ty=Tensor[(12, 15, 9), float64] */;
  %126 = atan(%125) /* ty=Tensor[(12, 15, 9), float64] */;
  %127 = cast(%126, dtype="float64") /* ty=Tensor[(12, 15, 9), float64] */;
  %128 = asin(%127) /* ty=Tensor[(12, 15, 9), float64] */;
  %129 = cast(%128, dtype="int8") /* ty=Tensor[(12, 15, 9), int8] */;
  %130 = shape_of(%126, dtype="int32") /* ty=Tensor[(3), int32] */;
  %131 = cast(%126, dtype="int8") /* ty=Tensor[(12, 15, 9), int8] */;
  %132 = dyn.reshape(%129, %130, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %133 = %119.0;
  %134 = cast(%133, dtype="float64") /* ty=Tensor[(2, 7, 15), float64] */;
  %135 = reshape(%134, newshape=[2, 7, 15]) /* ty=Tensor[(2, 7, 15), float64] */;
  %136 = @func_869(%135) /* ty=(Tensor[(2, 7, 15), float64],) */;
  %137 = %116.4;
  %138 = sigmoid(%124) /* ty=Tensor[(12, 15, 9), float64] */;
  %139 = add(%131, %132) /* ty=Tensor[(12, 15, 9), int8] */;
  %140 = %136.0;
  (%137, %var_2233, meta[relay.Constant][9] /* ty=Tensor[(135), float64] */, %var_2235, %133, %var_2243, %138, %139, %140)
}

def @func_21063() -> (Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), bool]) {
  %141 = @func_13754() /* ty=(Tensor[(7, 8, 13), int16], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) */;
  %142 = @func_15248() /* ty=(Tensor[(105, 2), float64], Tensor[(3, 9, 5), uint16], Tensor[(3, 9, 5), float64]) */;
  %143 = @func_17066() /* ty=(Tensor[(?, 8, 13), bool], Tensor[(2, 7, 15), float64], Tensor[(210), float64]) */;
  %144 = %141.2;
  %145 = %142.2;
  %146 = %143.0;
  (%144, %145, %146)
}

def @func_19465() -> (Tensor[(3, 9, 5), uint16], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) {
  %147 = @func_18867() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), uint16]) */;
  %148 = @func_17833() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) */;
  %149 = %147.1;
  %150 = @func_17589() /* ty=Tensor[(?, 8, 13), float32] */;
  %151 = @func_18535() /* ty=Tensor[(?, 8, 13), float32] */;
  %152 = %148.0;
  (%149, %150, %151, %152)
}

def @func_19233(%var_19221: Tensor[(2, 210), float64]) -> (Tensor[(?, 8, 13), float32], Tensor[(52, 2), bool], Tensor[(2, 210), bool]) {
  %153 = @func_15634() /* ty=(Tensor[(15, 2, 10), float64], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) */;
  %154 = cast(meta[relay.Constant][10] /* ty=Tensor[(1, 210), float64] */, dtype="float64") /* ty=Tensor[(1, 210), float64] */;
  %155 = reshape(%154, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %156 = @func_2759(%155) /* ty=(Tensor[(?, 8, 13), bool], Tensor[(52, 2), bool], Tensor[(1620), float32], Tensor[(128), float32], Tensor[(210), float64]) */;
  %157 = cast(meta[relay.Constant][10] /* ty=Tensor[(1, 210), float64] */, dtype="bool") /* ty=Tensor[(1, 210), bool] */;
  %158 = cast(%var_19221, dtype="bool") /* ty=Tensor[(2, 210), bool] */;
  %159 = %153.4;
  %160 = %156.1;
  %161 = less_equal(%157, %158) /* ty=Tensor[(2, 210), bool] */;
  (%159, %160, %161)
}

def @func_11420() -> (Tensor[(135), float64], Tensor[(3, 9, 5), float64]) {
  %162 = @func_2504() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(135), float64]) */;
  %163 = %162.2;
  %164 = @func_10194() /* ty=Tensor[(3, 9, 5), float64] */;
  (%163, %164)
}

def @func_12926() -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), bool]) {
  %165 = @func_3180() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %166 = @func_11577() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) */;
  %167 = @func_8954() /* ty=(Tensor[(?, 8, 13), bool],) */;
  %168 = %165.0;
  %169 = %166.1;
  %170 = %167.0;
  (%168, %169, %170)
}

def @func_5323() -> (Tensor[(3, 9, 5), float64],) {
  %171 = @func_4047() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %172 = %171.0;
  (%172,)
}

def @func_4349() -> Tensor[(?, 8, 13), float32] {
  @func_3842() /* ty=Tensor[(?, 8, 13), float32] */
}

def @func_12772() -> (Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) {
  %173 = @func_10466() /* ty=(Tensor[(?, 8, 13), float32],) */;
  %174 = @func_4259() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) */;
  %175 = @func_9397() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) */;
  %176 = %173.0;
  %177 = %174.1;
  %178 = %175.1;
  (%176, %177, %178)
}

def @func_18248() -> (Tensor[(?, 8, 13), bool],) {
  %179 = @func_6994() /* ty=Tensor[(?, 8, 13), bool] */;
  (%179,)
}

def @func_4609() -> (Tensor[(3, 9, 5), float64],) {
  %180 = @func_3180() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %181 = %180.0;
  (%181,)
}

def @func_9276() -> Tensor[(2, 7, 15), float64] {
  %182 = @func_2581() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64], Tensor[(105, 2), float64], Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64]) */;
  %182.1
}

def @func_14407() -> Tensor[(?, 8, 13), float32] {
  @func_4126() /* ty=Tensor[(?, 8, 13), float32] */
}

def @func_10565() -> (Tensor[(3, 9, 5), float64],) {
  %183 = @func_10204() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %184 = %183.0;
  (%184,)
}

def @func_20178() -> (Tensor[(3, 9, 5), float64],) {
  %185 = @func_10194() /* ty=Tensor[(3, 9, 5), float64] */;
  (%185,)
}

def @func_14109() -> (Tensor[(3, 9, 5), float64],) {
  %186 = @func_5323() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %187 = %186.0;
  (%187,)
}

def @func_12207(%var_12190: Tensor[(128), float32], %var_12191: Tensor[(3, 45), float64]) -> (Tensor[(7, 8, 13), int16], Tensor[(?, 8, 13), bool], Tensor[(128), float32], Tensor[(3, 45), float64], Tensor[(104), bool]) {
  %188 = @func_7263() /* ty=(Tensor[(7, 8, 13), int16],) */;
  %189 = cast(%var_12190, dtype="float32") /* ty=Tensor[(128), float32] */;
  %190 = cast(%var_12191, dtype="float64") /* ty=Tensor[(3, 45), float64] */;
  %191 = cast(meta[relay.Constant][11] /* ty=Tensor[(104), bool] */, dtype="bool") /* ty=Tensor[(104), bool] */;
  %192 = reshape(%189, newshape=[16, 1, 8]) /* ty=Tensor[(16, 1, 8), float32] */;
  %193 = reshape(%190, newshape=[3, 45]) /* ty=Tensor[(3, 45), float64] */;
  %194 = reshape(%191, newshape=[104]) /* ty=Tensor[(104), bool] */;
  %195 = @func_1683(%192, %193, %194) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(16, ?, 8), uint16], Tensor[(?, 8, 13), bool], Tensor[(104), bool], Tensor[(3, 45), float32]) */;
  %196 = %188.0;
  %197 = %195.2;
  (%196, %197, %var_12190, %var_12191, meta[relay.Constant][11] /* ty=Tensor[(104), bool] */)
}

def @func_14730() -> Tensor[(3, 9, 5), float64] {
  %198 = @func_11541() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) */;
  %198.1
}

def @func_1635(%var_1630: Tensor[(1, 8, 13), bool], %var_1631: Tensor[(1, 8, 13), bool]) -> (Tensor[(?, 8, 13), bool],) {
  %199 = cast(%var_1631, dtype="bool") /* ty=Tensor[(1, 8, 13), bool] */;
  %200 = shape_of(%var_1630, dtype="int32") /* ty=Tensor[(3), int32] */;
  %201 = cast(%var_1630, dtype="bool") /* ty=Tensor[(1, 8, 13), bool] */;
  %202 = dyn.reshape(%199, %200, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %203 = logical_and(%201, %202) /* ty=Tensor[(?, 8, 13), bool] */;
  (%203,)
}

def @func_21305() -> Tensor[(3, 9, 5), float64] {
  @func_4705() /* ty=Tensor[(3, 9, 5), float64] */
}

def @func_13619(%var_13555: Tensor[(7, 9, 4), float32]) -> (Tensor[(7, 9, 4), float32], Tensor[(2, 7, 15), uint8], Tensor[(210), float64], Tensor[(?, 8, 13), float32], Tensor[(7, 9, 4), float32]) {
  %204 = cast(%var_13555, dtype="float32") /* ty=Tensor[(7, 9, 4), float32] */;
  %205 = atan(%204) /* ty=Tensor[(7, 9, 4), float32] */;
  %206 = cast(%205, dtype="float32") /* ty=Tensor[(7, 9, 4), float32] */;
  %207 = cast(meta[relay.Constant][12] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %208 = reshape(%207, newshape=[2, 7, 15]) /* ty=Tensor[(2, 7, 15), float64] */;
  %209 = @func_4746() /* ty=(Tensor[(?, 8, 13), float32],) */;
  %210 = cast(%205, dtype="float32") /* ty=Tensor[(7, 9, 4), float32] */;
  %211 = atanh(%206) /* ty=Tensor[(7, 9, 4), float32] */;
  %212 = @func_3760(%208) /* ty=Tensor[(2, 7, 15), uint8] */;
  %213 = %209.0;
  %214 = sqrt(%210) /* ty=Tensor[(7, 9, 4), float32] */;
  (%211, %212, meta[relay.Constant][12] /* ty=Tensor[(210), float64] */, %213, %214)
}

def @func_17066() -> (Tensor[(?, 8, 13), bool], Tensor[(2, 7, 15), float64], Tensor[(210), float64]) {
  %215 = cast(meta[relay.Constant][13] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %216 = reshape(%215, newshape=[2, 7, 15]) /* ty=Tensor[(2, 7, 15), float64] */;
  %217 = @func_869(%216) /* ty=(Tensor[(2, 7, 15), float64],) */;
  %218 = @func_6994() /* ty=Tensor[(?, 8, 13), bool] */;
  %219 = %217.0;
  (%218, %219, meta[relay.Constant][13] /* ty=Tensor[(210), float64] */)
}

def @func_15534() -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), uint16], Tensor[(3, 9, 5), uint16], Tensor[(2, 7, 15), float64]) {
  %220 = @func_10811() /* ty=(Tensor[(3, 9, 5), uint16],) */;
  %221 = @func_9711() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(2, 7, 15), float64]) */;
  %222 = @func_7133() /* ty=Tensor[(3, 9, 5), float64] */;
  %223 = @func_5807() /* ty=Tensor[(3, 9, 5), uint16] */;
  %224 = %220.0;
  %225 = %221.1;
  (%222, %223, %224, %225)
}

def @func_9742() -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) {
  %226 = @func_2504() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(135), float64]) */;
  %227 = @func_8443() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) */;
  %228 = %226.1;
  %229 = %227.0;
  (%228, %229)
}

def @func_12552() -> (Tensor[(7, 8, 13), int16],) {
  %230 = @func_4095() /* ty=(Tensor[(7, 8, 13), int16],) */;
  %231 = %230.0;
  (%231,)
}

def @func_14801() -> (Tensor[(?, 8, 13), bool], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) {
  %232 = @func_11340() /* ty=(Tensor[(?, 8, 13), bool],) */;
  %233 = @func_6607() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %234 = @func_3538() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) */;
  %235 = @func_6782() /* ty=(Tensor[(3, 9, 5), uint16], Tensor[(3, 9, 5), float64]) */;
  %236 = %232.0;
  %237 = %233.0;
  %238 = %234.0;
  %239 = %235.1;
  (%236, %237, %238, %239)
}

def @func_16712() -> (Tensor[(3, 9, 5), float64],) {
  %240 = @func_11711() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(2, 7, 15), uint8], Tensor[(210), float64], Tensor[(128), float32], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) */;
  %241 = %240.1;
  (%241,)
}

def @func_3141() -> Tensor[(3, 9, 5), float64] {
  %242 = @func_2504() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(135), float64]) */;
  %242.1
}

def @func_20304() -> (Tensor[(2, 7, 15), float64], Tensor[(3, 9, 5), uint16], Tensor[(3, 9, 5), float64]) {
  %243 = @func_9276() /* ty=Tensor[(2, 7, 15), float64] */;
  %244 = cast(%243, dtype="float64") /* ty=Tensor[(2, 7, 15), float64] */;
  %245 = @func_15095() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(15, 210), bool], Tensor[(3, 9, 5), float64]) */;
  %246 = exp(%244) /* ty=Tensor[(2, 7, 15), float64] */;
  %247 = @func_5807() /* ty=Tensor[(3, 9, 5), uint16] */;
  %248 = %245.2;
  (%246, %247, %248)
}

def @func_14720() -> (Tensor[(3, 9, 5), float64],) {
  %249 = @func_3180() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %250 = %249.0;
  (%250,)
}

def @func_9082() -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) {
  %251 = @func_5323() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %252 = @func_4609() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %253 = %251.0;
  %254 = %252.0;
  (%253, %254)
}

def @func_15095() -> (Tensor[(?, 8, 13), float32], Tensor[(15, 210), bool], Tensor[(3, 9, 5), float64]) {
  %255 = @func_10239() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) */;
  %256 = @func_6867() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(15, 210), bool], Tensor[(7, 8, 13), int16]) */;
  %257 = @func_7543() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %258 = %255.0;
  %259 = %256.2;
  %260 = %257.0;
  (%258, %259, %260)
}

def @func_3241(%var_3206: Tensor[(4, 32), float32], %var_3207: Tensor[(5, 42), float64]) -> (Tensor[(?, 8, 13), bool], Tensor[(12, 15, 9), int8], Tensor[(1620), float32], Tensor[(4, 32), float32], Tensor[(5, 42), float64], Tensor[(3, 9, 5), float64]) {
  %261 = cast(meta[relay.Constant][14] /* ty=Tensor[(1620), float32] */, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %262 = cast(%var_3206, dtype="float32") /* ty=Tensor[(4, 32), float32] */;
  %263 = @func_2460() /* ty=Tensor[(?, 8, 13), bool] */;
  %264 = cast(%263, dtype="bool") /* ty=Tensor[(?, 8, 13), bool] */;
  %265 = cast(%var_3207, dtype="float64") /* ty=Tensor[(5, 42), float64] */;
  %266 = reshape(%261, newshape=[12, 15, 9]) /* ty=Tensor[(12, 15, 9), float32] */;
  %267 = reshape(%262, newshape=[128]) /* ty=Tensor[(128), float32] */;
  %268 = reshape(%264, newshape=[52, 2]) /* ty=Tensor[(52, 2), bool] */;
  %269 = reshape(%265, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %270 = @func_2289(%266, %267, %268, %269) /* ty=(Tensor[(3, 45), float32], Tensor[(128), float32], Tensor[(135), float64], Tensor[(52, 2), bool], Tensor[(2, 7, 15), float64], Tensor[(210), float64], Tensor[(12, 15, 9), float64], Tensor[(12, 15, 9), int8], Tensor[(2, 7, 15), float64]) */;
  %271 = %270.7;
  %272 = @func_2600() /* ty=Tensor[(3, 9, 5), float64] */;
  (%263, %271, meta[relay.Constant][14] /* ty=Tensor[(1620), float32] */, %var_3206, %var_3207, %272)
}

def @func_15999() -> Tensor[(?, 8, 13), float32] {
  %273 = @func_2447() /* ty=(Tensor[(?, 8, 13), float32],) */;
  %274 = %273.0;
  %275 = cast(%274, dtype="float32") /* ty=Tensor[(?, 8, 13), float32] */;
  acosh(%275) /* ty=Tensor[(?, 8, 13), float32] */
}

def @func_14340() -> Tensor[(?, 8, 13), float32] {
  %276 = @func_12090() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) */;
  %276.1
}

def @func_19757() -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) {
  %277 = @func_17531() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %278 = @func_10184() /* ty=(Tensor[(?, 8, 13), float32],) */;
  %279 = %277.0;
  %280 = %278.0;
  (%279, %280)
}

def @func_2504() -> (Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(135), float64]) {
  %281 = @func_2447() /* ty=(Tensor[(?, 8, 13), float32],) */;
  %282 = cast(meta[relay.Constant][15] /* ty=Tensor[(135), float64] */, dtype="float64") /* ty=Tensor[(135), float64] */;
  %283 = reshape(%282, newshape=[3, 9, 5]) /* ty=Tensor[(3, 9, 5), float64] */;
  %284 = @func_576(%283) /* ty=(Tensor[(3, 9, 5), float64],) */;
  %285 = %281.0;
  %286 = %284.0;
  (%285, %286, meta[relay.Constant][15] /* ty=Tensor[(135), float64] */)
}

def @func_11541() -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) {
  %287 = @func_11223() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) */;
  %288 = @func_3141() /* ty=Tensor[(3, 9, 5), float64] */;
  %289 = %287.1;
  (%288, %289)
}

def @func_4175() -> (Tensor[(?, 8, 13), float32],) {
  %290 = @func_4126() /* ty=Tensor[(?, 8, 13), float32] */;
  (%290,)
}

def @func_17498() -> (Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), uint16], Tensor[(?, 8, 13), bool], Tensor[(3, 9, 5), float64]) {
  %291 = @func_4175() /* ty=(Tensor[(?, 8, 13), float32],) */;
  %292 = @func_14443() /* ty=(Tensor[(3, 9, 5), uint16],) */;
  %293 = @func_8954() /* ty=(Tensor[(?, 8, 13), bool],) */;
  %294 = @func_14207() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %295 = %291.0;
  %296 = %292.0;
  %297 = %293.0;
  %298 = %294.0;
  (%295, %296, %297, %298)
}

def @func_6396(%var_6360: Tensor[(728), int16], %var_6382: Tensor[(128), float32]) -> (Tensor[(?, 8, 13), float32], Tensor[(7, 8, 13), bool], Tensor[(728), int16], Tensor[(3, 9, 5), float64], Tensor[(128), float32], Tensor[(135), float64], Tensor[(3, 9, 5), float64]) {
  %299 = @func_2447() /* ty=(Tensor[(?, 8, 13), float32],) */;
  %300 = %299.0;
  %301 = cast(%300, dtype="float32") /* ty=Tensor[(?, 8, 13), float32] */;
  %302 = cast(%var_6360, dtype="int16") /* ty=Tensor[(728), int16] */;
  %303 = reshape(%302, newshape=[7, 8, 13]) /* ty=Tensor[(7, 8, 13), int16] */;
  %304 = @func_4292(%303) /* ty=(Tensor[(7, 8, 13), bool],) */;
  %305 = cast(%var_6382, dtype="float32") /* ty=Tensor[(128), float32] */;
  %306 = cast(meta[relay.Constant][16] /* ty=Tensor[(135), float64] */, dtype="float64") /* ty=Tensor[(135), float64] */;
  %307 = cast(%300, dtype="bool") /* ty=Tensor[(?, 8, 13), bool] */;
  %308 = reshape(%305, newshape=[16, 1, 8]) /* ty=Tensor[(16, 1, 8), float32] */;
  %309 = reshape(%306, newshape=[3, 45]) /* ty=Tensor[(3, 45), float64] */;
  %310 = reshape(%307, newshape=[104]) /* ty=Tensor[(104), bool] */;
  %311 = @func_1683(%308, %309, %310) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(16, ?, 8), uint16], Tensor[(?, 8, 13), bool], Tensor[(104), bool], Tensor[(3, 45), float32]) */;
  %312 = @func_3180() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %313 = cos(%301) /* ty=Tensor[(?, 8, 13), float32] */;
  %314 = %304.0;
  %315 = %311.0;
  %316 = %312.0;
  (%313, %314, %var_6360, %315, %var_6382, meta[relay.Constant][16] /* ty=Tensor[(135), float64] */, %316)
}

def @func_15975() -> Tensor[(3, 9, 5), uint16] {
  %317 = @func_10811() /* ty=(Tensor[(3, 9, 5), uint16],) */;
  %317.0
}

def @func_2600() -> Tensor[(3, 9, 5), float64] {
  %318 = @func_2504() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(135), float64]) */;
  %318.1
}

def @func_15182(%var_15166: Tensor[(16, 8, 13), bool]) -> (Tensor[(3, 9, 5), float64], Tensor[(16, 8, 13), uint16]) {
  %319 = @func_12341() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) */;
  %320 = @func_5719() /* ty=(Tensor[(?, 8, 13), bool],) */;
  %321 = %320.0;
  %322 = cast(%321, dtype="uint16") /* ty=Tensor[(?, 8, 13), uint16] */;
  %323 = cast(%var_15166, dtype="uint16") /* ty=Tensor[(16, 8, 13), uint16] */;
  %324 = %319.0;
  %325 = bitwise_and(%322, %323) /* ty=Tensor[(16, 8, 13), uint16] */;
  (%324, %325)
}

def @func_7726(%var_7684: Tensor[(210), float64]) -> (Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(864), uint64], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), bool], Tensor[(210), float64], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) {
  %326 = @func_7441() /* ty=(Tensor[(3, 9, 5), uint16], Tensor[(?, 8, 13), float32]) */;
  %327 = @func_5784() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(1620), float32], Tensor[(210), float64], Tensor[(?, 8, 13), float32]) */;
  %328 = cast(meta[relay.Constant][17] /* ty=Tensor[(864), uint64] */, dtype="uint64") /* ty=Tensor[(864), uint64] */;
  %329 = cast(meta[relay.Constant][17] /* ty=Tensor[(864), uint64] */, dtype="uint64") /* ty=Tensor[(864), uint64] */;
  %330 = @func_6283() /* ty=Tensor[(3, 9, 5), float64] */;
  %331 = cast(%330, dtype="float64") /* ty=Tensor[(3, 9, 5), float64] */;
  %332 = reshape(%328, newshape=[6, 9, 16]) /* ty=Tensor[(6, 9, 16), uint64] */;
  %333 = reshape(%329, newshape=[6, 9, 16]) /* ty=Tensor[(6, 9, 16), uint64] */;
  %334 = reshape(%331, newshape=[135]) /* ty=Tensor[(135), float64] */;
  %335 = @func_5045(%332, %333, %334) /* ty=(Tensor[(6, 9, 16), bool], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(135), float64]) */;
  %336 = cast(%var_7684, dtype="float64") /* ty=Tensor[(210), float64] */;
  %337 = reshape(%336, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %338 = @func_2759(%337) /* ty=(Tensor[(?, 8, 13), bool], Tensor[(52, 2), bool], Tensor[(1620), float32], Tensor[(128), float32], Tensor[(210), float64]) */;
  %339 = @func_4609() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %340 = %326.1;
  %341 = %327.0;
  %342 = %335.4;
  %343 = @func_4359() /* ty=Tensor[(?, 8, 13), float32] */;
  %344 = %338.0;
  %345 = @func_3361() /* ty=Tensor[(?, 8, 13), float32] */;
  %346 = %339.0;
  (%340, %330, %341, %342, meta[relay.Constant][17] /* ty=Tensor[(864), uint64] */, %343, %344, %var_7684, %345, %346)
}

def @func_9580(%var_9574: Tensor[(1620), float32]) -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(128), float32], Tensor[(1620), float32], Tensor[(3, 9, 5), uint16]) {
  %347 = @func_8665() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %348 = @func_7441() /* ty=(Tensor[(3, 9, 5), uint16], Tensor[(?, 8, 13), float32]) */;
  %349 = cast(%var_9574, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %350 = reshape(%349, newshape=[540, 3]) /* ty=Tensor[(540, 3), float32] */;
  %351 = @func_9366(%350) /* ty=(Tensor[(?, 8, 13), float32], Tensor[(128), float32], Tensor[(540, 3), float32], Tensor[(128, 1), float32]) */;
  %352 = %347.0;
  %353 = %348.1;
  %354 = %351.1;
  %355 = @func_5807() /* ty=Tensor[(3, 9, 5), uint16] */;
  (%352, %353, %354, %var_9574, %355)
}

def @func_10024() -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float64], Tensor[(2, 7, 15), float64], Tensor[(?, 8, 13), float32]) {
  %356 = @func_8443() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) */;
  %357 = @func_5873() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) */;
  %358 = %357.0;
  %359 = cast(%358, dtype="float64") /* ty=Tensor[(?, 8, 13), float64] */;
  %360 = @func_2581() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64], Tensor[(105, 2), float64], Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64]) */;
  %361 = @func_7441() /* ty=(Tensor[(3, 9, 5), uint16], Tensor[(?, 8, 13), float32]) */;
  %362 = %356.1;
  %363 = sinh(%359) /* ty=Tensor[(?, 8, 13), float64] */;
  %364 = %360.4;
  %365 = %361.1;
  (%362, %363, %364, %365)
}

def @func_13954() -> Tensor[(3, 9, 5), float64] {
  %366 = @func_4047() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %366.0
}

def @func_11340() -> (Tensor[(?, 8, 13), bool],) {
  %367 = @func_2460() /* ty=Tensor[(?, 8, 13), bool] */;
  (%367,)
}

def @func_5873() -> (Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) {
  %368 = @func_5740() /* ty=(Tensor[(?, 8, 13), float32],) */;
  %369 = @func_4349() /* ty=Tensor[(?, 8, 13), float32] */;
  %370 = %368.0;
  %371 = @func_4937() /* ty=Tensor[(3, 9, 5), float64] */;
  (%369, %370, %371)
}

def @func_16912() -> (Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) {
  %372 = @func_5784() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(1620), float32], Tensor[(210), float64], Tensor[(?, 8, 13), float32]) */;
  %373 = %372.0;
  %374 = @func_4349() /* ty=Tensor[(?, 8, 13), float32] */;
  (%373, %374)
}

def @func_18319() -> Tensor[(135), float64] {
  %375 = @func_2504() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(135), float64]) */;
  %375.2
}

def @func_6499() -> (Tensor[(3, 9, 5), float64],) {
  %376 = @func_3538() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) */;
  %377 = %376.0;
  (%377,)
}

def @func_18177() -> (Tensor[(?, 8, 13), bool], Tensor[(?, 8, 13), float32]) {
  %378 = @func_17867() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), bool], Tensor[(3, 9, 5), float64]) */;
  %379 = @func_15095() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(15, 210), bool], Tensor[(3, 9, 5), float64]) */;
  %380 = %378.1;
  %381 = %379.0;
  (%380, %381)
}

def @func_10649() -> Tensor[(?, 8, 13), bool] {
  @func_2460() /* ty=Tensor[(?, 8, 13), bool] */
}

def @func_16781() -> Tensor[(?, 8, 13), float32] {
  %382 = @func_2581() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64], Tensor[(105, 2), float64], Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64]) */;
  %382.3
}

def @func_4812(%var_4809: Tensor[(128), float32]) -> (Tensor[(3, 9, 5), float32], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), bool], Tensor[(128), float32], Tensor[(210), float64]) {
  %383 = @func_3141() /* ty=Tensor[(3, 9, 5), float64] */;
  %384 = cast(%383, dtype="float32") /* ty=Tensor[(3, 9, 5), float32] */;
  %385 = cast(%var_4809, dtype="float32") /* ty=Tensor[(128), float32] */;
  %386 = cast(meta[relay.Constant][18] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %387 = reshape(%385, newshape=[4, 32]) /* ty=Tensor[(4, 32), float32] */;
  %388 = reshape(%386, newshape=[5, 42]) /* ty=Tensor[(5, 42), float64] */;
  %389 = @func_3241(%387, %388) /* ty=(Tensor[(?, 8, 13), bool], Tensor[(12, 15, 9), int8], Tensor[(1620), float32], Tensor[(4, 32), float32], Tensor[(5, 42), float64], Tensor[(3, 9, 5), float64]) */;
  %390 = asinh(%384) /* ty=Tensor[(3, 9, 5), float32] */;
  %391 = @func_3361() /* ty=Tensor[(?, 8, 13), float32] */;
  %392 = @func_3141() /* ty=Tensor[(3, 9, 5), float64] */;
  %393 = %389.0;
  (%390, %391, %392, %393, %var_4809, meta[relay.Constant][18] /* ty=Tensor[(210), float64] */)
}

def @func_7178() -> (Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(864), uint64], Tensor[(?, 8, 13), float32]) {
  %394 = @func_5740() /* ty=(Tensor[(?, 8, 13), float32],) */;
  %395 = cast(meta[relay.Constant][19] /* ty=Tensor[(864), uint64] */, dtype="uint64") /* ty=Tensor[(864), uint64] */;
  %396 = cast(meta[relay.Constant][19] /* ty=Tensor[(864), uint64] */, dtype="uint64") /* ty=Tensor[(864), uint64] */;
  %397 = @func_6283() /* ty=Tensor[(3, 9, 5), float64] */;
  %398 = cast(%397, dtype="float64") /* ty=Tensor[(3, 9, 5), float64] */;
  %399 = reshape(%395, newshape=[6, 9, 16]) /* ty=Tensor[(6, 9, 16), uint64] */;
  %400 = reshape(%396, newshape=[6, 9, 16]) /* ty=Tensor[(6, 9, 16), uint64] */;
  %401 = reshape(%398, newshape=[135]) /* ty=Tensor[(135), float64] */;
  %402 = @func_5045(%399, %400, %401) /* ty=(Tensor[(6, 9, 16), bool], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(135), float64]) */;
  %403 = @func_5740() /* ty=(Tensor[(?, 8, 13), float32],) */;
  %404 = %394.0;
  %405 = %402.4;
  %406 = %403.0;
  (%404, %397, %405, meta[relay.Constant][19] /* ty=Tensor[(864), uint64] */, %406)
}

def @func_7263() -> (Tensor[(7, 8, 13), int16],) {
  %407 = @func_4095() /* ty=(Tensor[(7, 8, 13), int16],) */;
  %408 = %407.0;
  (%408,)
}

def @func_10215() -> (Tensor[(?, 8, 13), float32],) {
  %409 = @func_8443() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) */;
  %410 = %409.0;
  (%410,)
}

def @func_13463() -> (Tensor[(3, 9, 5), uint16],) {
  %411 = @func_8928() /* ty=Tensor[(3, 9, 5), uint16] */;
  (%411,)
}

def @func_13998() -> Tensor[(3, 9, 5), float64] {
  @func_11888() /* ty=Tensor[(3, 9, 5), float64] */
}

def @func_7585(%var_7568: Tensor[(10, 1, 9), float64]) -> (Tensor[(10, 1, 9), float64],) {
  %412 = cast(%var_7568, dtype="float64") /* ty=Tensor[(10, 1, 9), float64] */;
  %413 = sigmoid(%412) /* ty=Tensor[(10, 1, 9), float64] */;
  (%413,)
}

def @func_14298() -> Tensor[(3, 9, 5), float64] {
  %414 = @func_10357() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %414.0
}

def @func_20041(%var_20026: Tensor[(11, 11, 11), float32]) -> Tensor[(11, 11, 11), bool] {
  %415 = @func_16238() /* ty=(Tensor[(11, 11, 11), float32], Tensor[(?, 8, 13), bool]) */;
  %416 = %415.0;
  %417 = cast(%var_20026, dtype="bool") /* ty=Tensor[(11, 11, 11), bool] */;
  %418 = shape_of(%416, dtype="int32") /* ty=Tensor[(3), int32] */;
  %419 = cast(%416, dtype="bool") /* ty=Tensor[(11, 11, 11), bool] */;
  %420 = dyn.reshape(%417, %418, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%419, %420) /* ty=Tensor[(11, 11, 11), bool] */
}

def @func_15969(%var_15939: Tensor[(128), float32]) -> (Tensor[(128), float32], Tensor[(3, 45), float64], Tensor[(3, 9, 5), uint16]) {
  %421 = cast(%var_15939, dtype="float32") /* ty=Tensor[(128), float32] */;
  %422 = reshape(%421, newshape=[128]) /* ty=Tensor[(128), float32] */;
  %423 = @func_12437(%422) /* ty=(Tensor[(?, 8, 13), bool], Tensor[(3, 45), float32], Tensor[(1620), float32], Tensor[(128), float32], Tensor[(3, 9, 5), float64]) */;
  %424 = %423.1;
  %425 = @func_8443() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) */;
  %426 = %425.1;
  %427 = cast(%426, dtype="float64") /* ty=Tensor[(3, 9, 5), float64] */;
  %428 = shape_of(%424, dtype="int32") /* ty=Tensor[(2), int32] */;
  %429 = cast(%424, dtype="float64") /* ty=Tensor[(3, 45), float64] */;
  %430 = dyn.reshape(%427, %428, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %431 = @func_14443() /* ty=(Tensor[(3, 9, 5), uint16],) */;
  %432 = mod(%429, %430) /* ty=Tensor[(3, 45), float64] */;
  %433 = %431.0;
  (%var_15939, %432, %433)
}

def @func_4359() -> Tensor[(?, 8, 13), float32] {
  %434 = @func_4175() /* ty=(Tensor[(?, 8, 13), float32],) */;
  %434.0
}

def @func_3361() -> Tensor[(?, 8, 13), float32] {
  %435 = @func_2447() /* ty=(Tensor[(?, 8, 13), float32],) */;
  %435.0
}

def @func_18535() -> Tensor[(?, 8, 13), float32] {
  %436 = @func_18177() /* ty=(Tensor[(?, 8, 13), bool], Tensor[(?, 8, 13), float32]) */;
  %436.1
}

def @func_8087() -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(128), float32], Tensor[(7, 104), int16], Tensor[(128), float32]) {
  %437 = @func_4047() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %438 = @func_7229() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), int16], Tensor[(7, 8, 13), int16], Tensor[(3, 9, 5), float32], Tensor[(3, 9, 5), float64]) */;
  %439 = @func_5323() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %440 = cast(meta[relay.Constant][20] /* ty=Tensor[(7, 104), int16] */, dtype="int16") /* ty=Tensor[(7, 104), int16] */;
  %441 = cast(meta[relay.Constant][21] /* ty=Tensor[(128), float32] */, dtype="float32") /* ty=Tensor[(128), float32] */;
  %442 = reshape(%440, newshape=[728]) /* ty=Tensor[(728), int16] */;
  %443 = reshape(%441, newshape=[128]) /* ty=Tensor[(128), float32] */;
  %444 = @func_6396(%442, %443) /* ty=(Tensor[(?, 8, 13), float32], Tensor[(7, 8, 13), bool], Tensor[(728), int16], Tensor[(3, 9, 5), float64], Tensor[(128), float32], Tensor[(135), float64], Tensor[(3, 9, 5), float64]) */;
  %445 = %437.0;
  %446 = %438.4;
  %447 = %439.0;
  %448 = %444.4;
  (%445, %446, %447, %448, meta[relay.Constant][20] /* ty=Tensor[(7, 104), int16] */, meta[relay.Constant][21] /* ty=Tensor[(128), float32] */)
}

def @func_10357() -> (Tensor[(3, 9, 5), float64],) {
  %449 = @func_9113() /* ty=Tensor[(3, 9, 5), float64] */;
  (%449,)
}

def @func_20635() -> Tensor[(7, 8, 13), int16] {
  %450 = @func_12552() /* ty=(Tensor[(7, 8, 13), int16],) */;
  %450.0
}

def @func_17825(%var_17810: Tensor[(208), int16]) -> (Tensor[(?, 8, 13), float32], Tensor[(13, 16, 11), uint16], Tensor[(208), int16], Tensor[(1, 2288), int16]) {
  %451 = @func_15865() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64]) */;
  %452 = cast(%var_17810, dtype="int16") /* ty=Tensor[(208), int16] */;
  %453 = cast(%var_17810, dtype="int16") /* ty=Tensor[(208), int16] */;
  %454 = cast(meta[relay.Constant][22] /* ty=Tensor[(1, 2288), int16] */, dtype="int16") /* ty=Tensor[(1, 2288), int16] */;
  %455 = reshape(%452, newshape=[13, 16, 1]) /* ty=Tensor[(13, 16, 1), int16] */;
  %456 = reshape(%453, newshape=[13, 16, 1]) /* ty=Tensor[(13, 16, 1), int16] */;
  %457 = reshape(%454, newshape=[13, 16, 11]) /* ty=Tensor[(13, 16, 11), int16] */;
  %458 = @func_447(%455, %456, %457) /* ty=(Tensor[(13, 16, ?), int16], Tensor[(13, 16, 11), uint16]) */;
  %459 = %451.0;
  %460 = %458.1;
  (%459, %460, %var_17810, meta[relay.Constant][22] /* ty=Tensor[(1, 2288), int16] */)
}

def @func_4705() -> Tensor[(3, 9, 5), float64] {
  %461 = @func_4047() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %461.0
}

def @func_10982() -> (Tensor[(3, 9, 5), uint16],) {
  %462 = @func_10811() /* ty=(Tensor[(3, 9, 5), uint16],) */;
  %463 = %462.0;
  (%463,)
}

def @func_6273(%var_6269: Tensor[(128), float32], %var_6270: Tensor[(1, 210), float64]) -> (Tensor[(3, 9, 5), float32], Tensor[(?, 8, 13), bool], Tensor[(128), float32], Tensor[(1, 210), float64]) {
  %464 = @func_4047() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %465 = %464.0;
  %466 = cast(%465, dtype="float32") /* ty=Tensor[(3, 9, 5), float32] */;
  %467 = cast(%var_6269, dtype="float32") /* ty=Tensor[(128), float32] */;
  %468 = cast(%var_6270, dtype="float64") /* ty=Tensor[(1, 210), float64] */;
  %469 = reshape(%467, newshape=[4, 32]) /* ty=Tensor[(4, 32), float32] */;
  %470 = reshape(%468, newshape=[5, 42]) /* ty=Tensor[(5, 42), float64] */;
  %471 = @func_3241(%469, %470) /* ty=(Tensor[(?, 8, 13), bool], Tensor[(12, 15, 9), int8], Tensor[(1620), float32], Tensor[(4, 32), float32], Tensor[(5, 42), float64], Tensor[(3, 9, 5), float64]) */;
  %472 = log2(%466) /* ty=Tensor[(3, 9, 5), float32] */;
  %473 = %471.0;
  (%472, %473, %var_6269, %var_6270)
}

def @func_15730() -> (Tensor[(3, 9, 5), float64],) {
  %474 = @func_10565() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %475 = %474.0;
  (%475,)
}

def @func_19815() -> (Tensor[(128), float32],) {
  %476 = @func_11440() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(128), float32], Tensor[(1620), float32]) */;
  %477 = %476.1;
  (%477,)
}

def @func_14956(%var_14923: Tensor[(12, 8, 13), bool]) -> (Tensor[(12, 8, 13), bool], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), uint16]) {
  %478 = @func_8954() /* ty=(Tensor[(?, 8, 13), bool],) */;
  %479 = %478.0;
  %480 = cast(%479, dtype="bool") /* ty=Tensor[(?, 8, 13), bool] */;
  %481 = cast(%var_14923, dtype="bool") /* ty=Tensor[(12, 8, 13), bool] */;
  %482 = cast(meta[relay.Constant][23] /* ty=Tensor[(1620), float32] */, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %483 = reshape(%482, newshape=[1620]) /* ty=Tensor[(1620), float32] */;
  %484 = @func_12630(%483) /* ty=(Tensor[(?, 8, 13), float32], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) */;
  %485 = @func_5424() /* ty=(Tensor[(3, 9, 5), uint16],) */;
  %486 = logical_or(%480, %481) /* ty=Tensor[(12, 8, 13), bool] */;
  %487 = %484.1;
  %488 = @func_8893() /* ty=Tensor[(3, 9, 5), float64] */;
  %489 = %485.0;
  (%486, %487, meta[relay.Constant][23] /* ty=Tensor[(1620), float32] */, %488, %489)
}

def @func_8531() -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), bool]) {
  %490 = @func_8030() /* ty=(Tensor[(4, 8, 13), int16], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) */;
  %491 = @func_7341() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %492 = %490.2;
  %493 = %491.0;
  %494 = @func_6994() /* ty=Tensor[(?, 8, 13), bool] */;
  (%492, %493, %494)
}

def @func_10184() -> (Tensor[(?, 8, 13), float32],) {
  %495 = @func_3345() /* ty=Tensor[(?, 8, 13), float32] */;
  (%495,)
}

def @func_17589() -> Tensor[(?, 8, 13), float32] {
  @func_15999() /* ty=Tensor[(?, 8, 13), float32] */
}

def @func_18885() -> (Tensor[(1620), float32],) {
  %496 = @func_17627() /* ty=(Tensor[(1620), float32],) */;
  %497 = %496.0;
  (%497,)
}

def @func_8388(%var_8274: Tensor[(5, 8, 11), float32], %var_8292: Tensor[(210), float64]) -> (Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(1, 1456), float32], Tensor[(?, 8, 13), float32], Tensor[(210), float64], Tensor[(5, 8, 11), float32], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), bool], Tensor[(?, 8, 13), float32]) {
  %498 = @func_7178() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(864), uint64], Tensor[(?, 8, 13), float32]) */;
  %499 = cast(meta[relay.Constant][24] /* ty=Tensor[(1, 1456), float32] */, dtype="float32") /* ty=Tensor[(1, 1456), float32] */;
  %500 = reshape(%499, newshape=[14, 8, 13]) /* ty=Tensor[(14, 8, 13), float32] */;
  %501 = @func_5618(%500) /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), uint16], Tensor[(?, 8, 13), float32], Tensor[(14, 8, 13), int16]) */;
  %502 = cast(%var_8292, dtype="float64") /* ty=Tensor[(210), float64] */;
  %503 = reshape(%502, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %504 = @func_6028(%503) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(210), float64]) */;
  %505 = cast(meta[relay.Constant][25] /* ty=Tensor[(5, 8, 11), float32] */, dtype="float32") /* ty=Tensor[(5, 8, 11), float32] */;
  %506 = log(%505) /* ty=Tensor[(5, 8, 11), float32] */;
  %507 = cast(%var_8274, dtype="bool") /* ty=Tensor[(5, 8, 11), bool] */;
  %508 = shape_of(%506, dtype="int32") /* ty=Tensor[(3), int32] */;
  %509 = cast(%506, dtype="bool") /* ty=Tensor[(5, 8, 11), bool] */;
  %510 = dyn.reshape(%507, %508, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %511 = greater_equal(%509, %510) /* ty=Tensor[(5, 8, 11), bool] */;
  %512 = cast(%511, dtype="float32") /* ty=Tensor[(5, 8, 11), float32] */;
  %513 = @func_4184() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %514 = @func_5719() /* ty=(Tensor[(?, 8, 13), bool],) */;
  %515 = @func_6655() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) */;
  %516 = %498.4;
  %517 = %501.2;
  %518 = %504.1;
  %519 = sigmoid(%512) /* ty=Tensor[(5, 8, 11), float32] */;
  %520 = %513.0;
  %521 = %514.0;
  %522 = %515.0;
  (%516, %517, meta[relay.Constant][24] /* ty=Tensor[(1, 1456), float32] */, %518, %var_8292, %519, %520, %521, %522)
}

def @func_20999() -> (Tensor[(2, 7, 15), float64],) {
  %523 = @func_9711() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(2, 7, 15), float64]) */;
  %524 = %523.1;
  (%524,)
}

def @func_12630(%var_12607: Tensor[(1620), float32]) -> (Tensor[(?, 8, 13), float32], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) {
  %525 = @func_11711() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(2, 7, 15), uint8], Tensor[(210), float64], Tensor[(128), float32], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) */;
  %526 = cast(%var_12607, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %527 = reshape(%526, newshape=[540, 3]) /* ty=Tensor[(540, 3), float32] */;
  %528 = @func_12263(%527) /* ty=(Tensor[(?, 8, 13), float32], Tensor[(1620), float32], Tensor[(35, 6), float64], Tensor[(540, 3), float32]) */;
  %529 = @func_2447() /* ty=(Tensor[(?, 8, 13), float32],) */;
  %530 = @func_10204() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %531 = %525.7;
  %532 = %528.1;
  %533 = %529.0;
  %534 = %530.0;
  (%531, %532, %var_12607, %533, %534)
}

def @func_17698(%var_17642: Tensor[(4, 364), float32]) -> (Tensor[(3, 9, 5), uint16], Tensor[(3, 9, 5), float64], Tensor[(4, 364), uint8], Tensor[(3, 9, 5), float64], Tensor[(210), float64], Tensor[(?, 8, 13), bool]) {
  %535 = cast(%var_17642, dtype="float32") /* ty=Tensor[(4, 364), float32] */;
  %536 = reshape(%535, newshape=[14, 8, 13]) /* ty=Tensor[(14, 8, 13), float32] */;
  %537 = @func_5618(%536) /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), uint16], Tensor[(?, 8, 13), float32], Tensor[(14, 8, 13), int16]) */;
  %538 = @func_11711() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(2, 7, 15), uint8], Tensor[(210), float64], Tensor[(128), float32], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) */;
  %539 = cast(meta[relay.Constant][26] /* ty=Tensor[(4, 364), float32] */, dtype="uint8") /* ty=Tensor[(4, 364), uint8] */;
  %540 = shape_of(%var_17642, dtype="int32") /* ty=Tensor[(2), int32] */;
  %541 = cast(%var_17642, dtype="uint8") /* ty=Tensor[(4, 364), uint8] */;
  %542 = dyn.reshape(%539, %540, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %543 = cast(meta[relay.Constant][27] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %544 = reshape(%543, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %545 = @func_7726(%544) /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(864), uint64], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), bool], Tensor[(210), float64], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) */;
  %546 = @func_4175() /* ty=(Tensor[(?, 8, 13), float32],) */;
  %547 = %546.0;
  %548 = @func_16167() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(540, 3), float64], Tensor[(?, 8, 13), float32]) */;
  %549 = %548.4;
  %550 = cast(%549, dtype="bool") /* ty=Tensor[(?, 8, 13), bool] */;
  %551 = shape_of(%547, dtype="int32") /* ty=Tensor[(3), int32] */;
  %552 = cast(%547, dtype="bool") /* ty=Tensor[(?, 8, 13), bool] */;
  %553 = dyn.reshape(%550, %551, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %554 = %537.1;
  %555 = %538.5;
  %556 = left_shift(%541, %542) /* ty=Tensor[(4, 364), uint8] */;
  %557 = %545.3;
  %558 = less_equal(%552, %553) /* ty=Tensor[(?, 8, 13), bool] */;
  (%554, %555, %556, %557, meta[relay.Constant][27] /* ty=Tensor[(210), float64] */, %558)
}

def @func_4832() -> (Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) {
  %559 = @func_4153() /* ty=Tensor[(?, 8, 13), float32] */;
  %560 = @func_4349() /* ty=Tensor[(?, 8, 13), float32] */;
  (%559, %560)
}

def @func_11864() -> (Tensor[(3, 9, 5), uint16], Tensor[(2, 7, 15), float64], Tensor[(210), float64], Tensor[(7, 8, 13), int16], Tensor[(?, 8, 13), float32]) {
  %561 = cast(meta[relay.Constant][28] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %562 = reshape(%561, newshape=[2, 7, 15]) /* ty=Tensor[(2, 7, 15), float64] */;
  %563 = @func_869(%562) /* ty=(Tensor[(2, 7, 15), float64],) */;
  %564 = @func_2839() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(7, 8, 13), int16]) */;
  %565 = @func_9912() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) */;
  %566 = @func_3330() /* ty=Tensor[(3, 9, 5), uint16] */;
  %567 = %563.0;
  %568 = %564.1;
  %569 = %565.0;
  (%566, %567, meta[relay.Constant][28] /* ty=Tensor[(210), float64] */, %568, %569)
}

def @func_5784() -> (Tensor[(?, 8, 13), float32], Tensor[(1620), float32], Tensor[(210), float64], Tensor[(?, 8, 13), float32]) {
  %570 = @func_4349() /* ty=Tensor[(?, 8, 13), float32] */;
  %571 = cast(meta[relay.Constant][29] /* ty=Tensor[(1, 8, 13), float32] */, dtype="uint64") /* ty=Tensor[(1, 8, 13), uint64] */;
  %572 = shape_of(%570, dtype="int32") /* ty=Tensor[(3), int32] */;
  %573 = cast(%570, dtype="uint64") /* ty=Tensor[(?, 8, 13), uint64] */;
  %574 = dyn.reshape(%571, %572, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %575 = bitwise_xor(%573, %574) /* ty=Tensor[(?, 8, 13), uint64] */;
  %576 = cast(%575, dtype="float32") /* ty=Tensor[(?, 8, 13), float32] */;
  %577 = cast(meta[relay.Constant][30] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %578 = reshape(%577, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %579 = @func_2759(%578) /* ty=(Tensor[(?, 8, 13), bool], Tensor[(52, 2), bool], Tensor[(1620), float32], Tensor[(128), float32], Tensor[(210), float64]) */;
  %580 = sigmoid(%576) /* ty=Tensor[(?, 8, 13), float32] */;
  %581 = %579.2;
  %582 = @func_4359() /* ty=Tensor[(?, 8, 13), float32] */;
  (%580, %581, meta[relay.Constant][30] /* ty=Tensor[(210), float64] */, %582)
}

def @func_14443() -> (Tensor[(3, 9, 5), uint16],) {
  %583 = @func_7441() /* ty=(Tensor[(3, 9, 5), uint16], Tensor[(?, 8, 13), float32]) */;
  %584 = %583.0;
  (%584,)
}

def @func_6941() -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), uint16], Tensor[(3, 9, 5), float64]) {
  %585 = @func_6782() /* ty=(Tensor[(3, 9, 5), uint16], Tensor[(3, 9, 5), float64]) */;
  %586 = @func_3672() /* ty=(Tensor[(3, 9, 5), uint16],) */;
  %587 = %585.1;
  %588 = %586.0;
  %589 = @func_6283() /* ty=Tensor[(3, 9, 5), float64] */;
  (%587, %588, %589)
}

def @func_6185() -> (Tensor[(3, 9, 5), float64],) {
  %590 = @func_4184() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %591 = %590.0;
  (%591,)
}

def @func_10399() -> (Tensor[(?, 8, 13), bool],) {
  %592 = @func_7599() /* ty=Tensor[(?, 8, 13), bool] */;
  (%592,)
}

def @func_5045(%var_4985: Tensor[(6, 9, 16), uint64], %var_4986: Tensor[(6, 9, 16), uint64], %var_5042: Tensor[(135), float64]) -> (Tensor[(6, 9, 16), bool], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(135), float64]) {
  %593 = cast(%var_4986, dtype="bool") /* ty=Tensor[(6, 9, 16), bool] */;
  %594 = shape_of(%var_4985, dtype="int32") /* ty=Tensor[(3), int32] */;
  %595 = cast(%var_4985, dtype="bool") /* ty=Tensor[(6, 9, 16), bool] */;
  %596 = dyn.reshape(%593, %594, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %597 = @func_4259() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) */;
  %598 = cast(%var_5042, dtype="float64") /* ty=Tensor[(135), float64] */;
  %599 = reshape(%598, newshape=[3, 9, 5]) /* ty=Tensor[(3, 9, 5), float64] */;
  %600 = @func_576(%599) /* ty=(Tensor[(3, 9, 5), float64],) */;
  %601 = equal(%595, %596) /* ty=Tensor[(6, 9, 16), bool] */;
  %602 = @func_4953() /* ty=Tensor[(?, 8, 13), float32] */;
  %603 = @func_3345() /* ty=Tensor[(?, 8, 13), float32] */;
  %604 = %597.0;
  %605 = %600.0;
  (%601, %602, %603, %604, %605, %var_5042)
}

def @func_8665() -> (Tensor[(3, 9, 5), float64],) {
  %606 = @func_6607() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %607 = %606.0;
  (%607,)
}

def @func_12090() -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) {
  %608 = @func_6283() /* ty=Tensor[(3, 9, 5), float64] */;
  %609 = @func_7757() /* ty=Tensor[(?, 8, 13), float32] */;
  (%608, %609)
}

def @func_7599() -> Tensor[(?, 8, 13), bool] {
  %610 = @func_5719() /* ty=(Tensor[(?, 8, 13), bool],) */;
  %610.0
}

def @func_17261() -> Tensor[(7, 8, 13), int16] {
  %611 = @func_2839() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(7, 8, 13), int16]) */;
  %611.1
}

def @func_8986() -> Tensor[(?, 8, 13), float32] {
  %612 = @func_4259() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) */;
  %612.1
}

def @func_10848() -> Tensor[(3, 9, 5), float64] {
  %613 = @func_6499() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %613.0
}

def @func_11888() -> Tensor[(3, 9, 5), float64] {
  @func_3141() /* ty=Tensor[(3, 9, 5), float64] */
}

def @func_13143() -> (Tensor[(3, 9, 5), float64], Tensor[(7, 8, 13), int16]) {
  %614 = @func_4705() /* ty=Tensor[(3, 9, 5), float64] */;
  %615 = @func_3386() /* ty=Tensor[(7, 8, 13), int16] */;
  (%614, %615)
}

def @func_14576() -> (Tensor[(3, 9, 5), float64], Tensor[(1620), float32], Tensor[(210), float64], Tensor[(4, 32), float32]) {
  %616 = @func_11440() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(128), float32], Tensor[(1620), float32]) */;
  %617 = cast(meta[relay.Constant][31] /* ty=Tensor[(4, 32), float32] */, dtype="float32") /* ty=Tensor[(4, 32), float32] */;
  %618 = reshape(%617, newshape=[128]) /* ty=Tensor[(128), float32] */;
  %619 = @func_4812(%618) /* ty=(Tensor[(3, 9, 5), float32], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), bool], Tensor[(128), float32], Tensor[(210), float64]) */;
  %620 = @func_6814() /* ty=Tensor[(3, 9, 5), float64] */;
  %621 = %616.2;
  %622 = %619.5;
  (%620, %621, %622, meta[relay.Constant][31] /* ty=Tensor[(4, 32), float32] */)
}

def @func_12699(%var_12684: Tensor[(210), float64]) -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), uint16], Tensor[(2, 7, 15), uint32], Tensor[(210), float64], Tensor[(3, 9, 5), float64]) {
  %623 = @func_12090() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) */;
  %624 = @func_9180() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(7, 8, 13), bool], Tensor[(7, 104), int16]) */;
  %625 = cast(%var_12684, dtype="float64") /* ty=Tensor[(210), float64] */;
  %626 = reshape(%625, newshape=[2, 7, 15]) /* ty=Tensor[(2, 7, 15), float64] */;
  %627 = @func_6499() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %628 = %623.0;
  %629 = %624.0;
  %630 = @func_8928() /* ty=Tensor[(3, 9, 5), uint16] */;
  %631 = @func_2985(%626) /* ty=Tensor[(2, 7, 15), uint32] */;
  %632 = %627.0;
  (%628, %629, %630, %631, %var_12684, %632)
}

def @func_12508() -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(128), float32]) {
  %633 = @func_9082() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) */;
  %634 = cast(meta[relay.Constant][32] /* ty=Tensor[(128), float32] */, dtype="float32") /* ty=Tensor[(128), float32] */;
  %635 = reshape(%634, newshape=[2, 64]) /* ty=Tensor[(2, 64), float32] */;
  %636 = @func_11068(%635) /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), uint16], Tensor[(3, 9, 5), float32], Tensor[(2, 64), float32], Tensor[(210), float64]) */;
  %637 = %633.0;
  %638 = %636.1;
  (%637, %638, meta[relay.Constant][32] /* ty=Tensor[(128), float32] */)
}

def @func_18046() -> (Tensor[(3, 9, 5), float64],) {
  %639 = @func_15730() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %640 = %639.0;
  (%640,)
}

def @func_17151() -> (Tensor[(?, 8, 13), bool], Tensor[(3, 9, 5), float64]) {
  %641 = @func_7948() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) */;
  %642 = @func_10649() /* ty=Tensor[(?, 8, 13), bool] */;
  %643 = %641.1;
  (%642, %643)
}

def @func_14588(%var_14579: uint16) -> (Tensor[(12, 12, 15), uint16],) {
  %644 = cast(%var_14579, dtype="uint16") /* ty=uint16 */;
  %645 = cast(meta[relay.Constant][33] /* ty=Tensor[(12, 12, 15), uint16] */, dtype="uint16") /* ty=Tensor[(12, 12, 15), uint16] */;
  %646 = add(%644, %645) /* ty=Tensor[(12, 12, 15), uint16] */;
  (%646,)
}

def @func_21475() -> Tensor[(?, 8, 13), float32] {
  %647 = @func_10184() /* ty=(Tensor[(?, 8, 13), float32],) */;
  %647.0
}

def @func_10466() -> (Tensor[(?, 8, 13), float32],) {
  %648 = @func_2504() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(135), float64]) */;
  %649 = %648.0;
  (%649,)
}

def @func_17745() -> (Tensor[(3, 9, 5), float64],) {
  %650 = @func_7133() /* ty=Tensor[(3, 9, 5), float64] */;
  (%650,)
}

def @func_11270() -> (Tensor[(3, 9, 5), float64],) {
  %651 = @func_10848() /* ty=Tensor[(3, 9, 5), float64] */;
  (%651,)
}

def @func_8179(%var_8142: Tensor[(210), float64], %var_8161: Tensor[(1620), float32]) -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(210), float64], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) {
  %652 = @func_8087() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(128), float32], Tensor[(7, 104), int16], Tensor[(128), float32]) */;
  %653 = @func_7391() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) */;
  %654 = cast(%var_8142, dtype="float64") /* ty=Tensor[(210), float64] */;
  %655 = reshape(%654, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %656 = @func_7726(%655) /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(864), uint64], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), bool], Tensor[(210), float64], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) */;
  %657 = cast(%var_8161, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %658 = reshape(%657, newshape=[1620]) /* ty=Tensor[(1620), float32] */;
  %659 = @func_4027(%658) /* ty=(Tensor[(7, 8, 13), int16], Tensor[(?, 8, 13), uint16], Tensor[(105, 2), uint64], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(105, 2), float64], Tensor[(2, 7, 15), float64], Tensor[(1620), float32], Tensor[(128), float32], Tensor[(2, 7, 15), float64], Tensor[(3, 9, 5), float64], Tensor[(45, 3), float64], Tensor[(3, 9, 5), uint16]) */;
  %660 = @func_4047() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %661 = @func_7341() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %662 = %652.2;
  %663 = %653.0;
  %664 = %656.2;
  %665 = %659.7;
  %666 = @func_6283() /* ty=Tensor[(3, 9, 5), float64] */;
  %667 = %660.0;
  %668 = %661.0;
  (%662, %663, %664, %var_8142, %665, %var_8161, %666, %667, %668)
}

def @func_19139(%var_19101: Tensor[(728), int16], %var_19102: Tensor[(128), float32]) -> (Tensor[(?, 8, 13), bool], Tensor[(128), float32], Tensor[(728), int16], Tensor[(128), float32]) {
  %669 = @func_8954() /* ty=(Tensor[(?, 8, 13), bool],) */;
  %670 = cast(%var_19101, dtype="int16") /* ty=Tensor[(728), int16] */;
  %671 = cast(%var_19102, dtype="float32") /* ty=Tensor[(128), float32] */;
  %672 = reshape(%670, newshape=[728]) /* ty=Tensor[(728), int16] */;
  %673 = reshape(%671, newshape=[128]) /* ty=Tensor[(128), float32] */;
  %674 = @func_6396(%672, %673) /* ty=(Tensor[(?, 8, 13), float32], Tensor[(7, 8, 13), bool], Tensor[(728), int16], Tensor[(3, 9, 5), float64], Tensor[(128), float32], Tensor[(135), float64], Tensor[(3, 9, 5), float64]) */;
  %675 = %669.0;
  %676 = %674.4;
  (%675, %676, %var_19101, %var_19102)
}

def @func_4047() -> (Tensor[(3, 9, 5), float64],) {
  %677 = @func_3141() /* ty=Tensor[(3, 9, 5), float64] */;
  (%677,)
}

def @func_3605() -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), bool]) {
  %678 = @func_2600() /* ty=Tensor[(3, 9, 5), float64] */;
  %679 = @func_2460() /* ty=Tensor[(?, 8, 13), bool] */;
  (%678, %679)
}

def @func_6283() -> Tensor[(3, 9, 5), float64] {
  @func_4867() /* ty=Tensor[(3, 9, 5), float64] */
}

def @func_11005() -> Tensor[(?, 8, 13), float32] {
  %680 = @func_6655() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) */;
  %680.0
}

def @func_19793() -> (Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) {
  %681 = @func_4746() /* ty=(Tensor[(?, 8, 13), float32],) */;
  %682 = @func_15275() /* ty=(Tensor[(15, 2, 10), float64], Tensor[(3, 9, 5), float64]) */;
  %683 = %681.0;
  %684 = %682.1;
  (%683, %684)
}

def @func_16378(%var_16347: float64, %var_16348: Tensor[(9, 16, 10), float64], %var_16352: Tensor[(9, 16, 10), float64]) -> (Tensor[(9, 16, 10), float64], Tensor[(9, 16, 10), bool], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), uint16]) {
  %685 = cast(%var_16347, dtype="float64") /* ty=float64 */;
  %686 = cast(%var_16348, dtype="float64") /* ty=Tensor[(9, 16, 10), float64] */;
  %687 = cast(%var_16352, dtype="bool") /* ty=Tensor[(9, 16, 10), bool] */;
  %688 = shape_of(%var_16348, dtype="int32") /* ty=Tensor[(3), int32] */;
  %689 = cast(%var_16348, dtype="bool") /* ty=Tensor[(9, 16, 10), bool] */;
  %690 = dyn.reshape(%687, %688, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %691 = @func_5214() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), bool]) */;
  %692 = @func_10982() /* ty=(Tensor[(3, 9, 5), uint16],) */;
  %693 = floor_mod(%685, %686) /* ty=Tensor[(9, 16, 10), float64] */;
  %694 = logical_or(%689, %690) /* ty=Tensor[(9, 16, 10), bool] */;
  %695 = %691.0;
  %696 = %692.0;
  (%693, %694, %695, %696)
}

def @func_4953() -> Tensor[(?, 8, 13), float32] {
  %697 = @func_4259() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) */;
  %697.0
}

def @func_17759() -> Tensor[(2, 7, 15), float64] {
  %698 = @func_15865() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64]) */;
  %698.1
}

def @func_5302(%var_5295: Tensor[(210, 1), float64]) -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), uint16], Tensor[(210), float64], Tensor[(210, 1), float64], Tensor[(128), float32]) {
  %699 = @func_5214() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), bool]) */;
  %700 = %699.0;
  %701 = cast(%700, dtype="float64") /* ty=Tensor[(3, 9, 5), float64] */;
  %702 = cast(%var_5295, dtype="float64") /* ty=Tensor[(210, 1), float64] */;
  %703 = cast(meta[relay.Constant][34] /* ty=Tensor[(128), float32] */, dtype="float32") /* ty=Tensor[(128), float32] */;
  %704 = reshape(%701, newshape=[45, 3]) /* ty=Tensor[(45, 3), float64] */;
  %705 = reshape(%702, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %706 = reshape(%703, newshape=[128]) /* ty=Tensor[(128), float32] */;
  %707 = @func_3116(%704, %705, %706) /* ty=(Tensor[(?, 8, 13), float32], Tensor[(45, 3), float64], Tensor[(?, 8, 13), bool], Tensor[(210), float64], Tensor[(210), float64], Tensor[(2, 7, 15), uint32], Tensor[(128), bool], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(1620), float32]) */;
  %708 = @func_3330() /* ty=Tensor[(3, 9, 5), uint16] */;
  %709 = %707.4;
  (%700, %708, %709, %var_5295, meta[relay.Constant][34] /* ty=Tensor[(128), float32] */)
}

def @func_8928() -> Tensor[(3, 9, 5), uint16] {
  @func_3330() /* ty=Tensor[(3, 9, 5), uint16] */
}

def @func_11068(%var_11056: Tensor[(2, 64), float32]) -> (Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), uint16], Tensor[(3, 9, 5), float32], Tensor[(2, 64), float32], Tensor[(210), float64]) {
  %710 = @func_9082() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) */;
  %711 = @func_10982() /* ty=(Tensor[(3, 9, 5), uint16],) */;
  %712 = cast(%var_11056, dtype="float32") /* ty=Tensor[(2, 64), float32] */;
  %713 = cast(meta[relay.Constant][35] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %714 = reshape(%712, newshape=[128]) /* ty=Tensor[(128), float32] */;
  %715 = reshape(%713, newshape=[1, 210]) /* ty=Tensor[(1, 210), float64] */;
  %716 = @func_6273(%714, %715) /* ty=(Tensor[(3, 9, 5), float32], Tensor[(?, 8, 13), bool], Tensor[(128), float32], Tensor[(1, 210), float64]) */;
  %717 = @func_4126() /* ty=Tensor[(?, 8, 13), float32] */;
  %718 = %710.1;
  %719 = %711.0;
  %720 = %716.0;
  (%717, %718, %719, %720, %var_11056, meta[relay.Constant][35] /* ty=Tensor[(210), float64] */)
}

def @func_19177() -> (Tensor[(3, 9, 5), float64],) {
  %721 = @func_11974() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %722 = %721.0;
  (%722,)
}

def @func_13201() -> Tensor[(?, 8, 13), bool] {
  %723 = @func_8531() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), bool]) */;
  %723.2
}

def @func_12263(%var_12258: Tensor[(540, 3), float32]) -> (Tensor[(?, 8, 13), float32], Tensor[(1620), float32], Tensor[(35, 6), float64], Tensor[(540, 3), float32]) {
  %724 = @func_9742() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) */;
  %725 = cast(meta[relay.Constant][36] /* ty=Tensor[(35, 6), float64] */, dtype="float64") /* ty=Tensor[(35, 6), float64] */;
  %726 = cast(%var_12258, dtype="float32") /* ty=Tensor[(540, 3), float32] */;
  %727 = reshape(%725, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %728 = reshape(%726, newshape=[1620]) /* ty=Tensor[(1620), float32] */;
  %729 = @func_8179(%727, %728) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(210), float64], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) */;
  %730 = %724.1;
  %731 = %729.4;
  (%730, %731, meta[relay.Constant][36] /* ty=Tensor[(35, 6), float64] */, %var_12258)
}

def @func_21377() -> (Tensor[(3, 9, 5), uint16],) {
  %732 = @func_20080() /* ty=(Tensor[(3, 9, 5), uint16],) */;
  %733 = %732.0;
  (%733,)
}

def @func_13743() -> Tensor[(?, 8, 13), float32] {
  @func_4533() /* ty=Tensor[(?, 8, 13), float32] */
}

def @func_20454() -> (Tensor[(3, 9, 5), uint16],) {
  %734 = @func_3672() /* ty=(Tensor[(3, 9, 5), uint16],) */;
  %735 = %734.0;
  (%735,)
}

def @func_11656() -> (Tensor[(?, 8, 13), float32],) {
  %736 = @func_2447() /* ty=(Tensor[(?, 8, 13), float32],) */;
  %737 = %736.0;
  (%737,)
}

def @func_11711() -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(2, 7, 15), uint8], Tensor[(210), float64], Tensor[(128), float32], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) {
  %738 = @func_7341() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %739 = cast(meta[relay.Constant][37] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %740 = reshape(%739, newshape=[2, 7, 15]) /* ty=Tensor[(2, 7, 15), float64] */;
  %741 = @func_3760(%740) /* ty=Tensor[(2, 7, 15), uint8] */;
  %742 = cast(%741, dtype="float64") /* ty=Tensor[(2, 7, 15), float64] */;
  %743 = reshape(%742, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %744 = @func_2759(%743) /* ty=(Tensor[(?, 8, 13), bool], Tensor[(52, 2), bool], Tensor[(1620), float32], Tensor[(128), float32], Tensor[(210), float64]) */;
  %745 = @func_9877() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) */;
  %746 = @func_7391() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) */;
  %747 = @func_4937() /* ty=Tensor[(3, 9, 5), float64] */;
  %748 = %738.0;
  %749 = %744.3;
  %750 = @func_6411() /* ty=Tensor[(3, 9, 5), float64] */;
  %751 = %745.0;
  %752 = %746.2;
  (%747, %748, %741, meta[relay.Constant][37] /* ty=Tensor[(210), float64] */, %749, %750, %751, %752)
}

def @func_20467() -> (Tensor[(3, 9, 5), float64],) {
  %753 = @func_13945() /* ty=Tensor[(3, 9, 5), float64] */;
  (%753,)
}

def @func_4075() -> (Tensor[(3, 9, 5), uint16], Tensor[(?, 8, 13), float32]) {
  %754 = @func_2447() /* ty=(Tensor[(?, 8, 13), float32],) */;
  %755 = @func_3330() /* ty=Tensor[(3, 9, 5), uint16] */;
  %756 = %754.0;
  (%755, %756)
}

def @func_19324() -> (Tensor[(?, 8, 13), float32],) {
  %757 = @func_16434() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) */;
  %758 = %757.4;
  (%758,)
}

def @func_447(%var_421: Tensor[(13, 16, 1), int16], %var_422: Tensor[(13, 16, 1), int16], %var_426: Tensor[(13, 16, 11), int16]) -> (Tensor[(13, 16, ?), int16], Tensor[(13, 16, 11), uint16]) {
  %759 = cast(%var_422, dtype="int16") /* ty=Tensor[(13, 16, 1), int16] */;
  %760 = shape_of(%var_421, dtype="int32") /* ty=Tensor[(3), int32] */;
  %761 = cast(%var_421, dtype="int16") /* ty=Tensor[(13, 16, 1), int16] */;
  %762 = dyn.reshape(%759, %760, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %763 = cast(%var_422, dtype="uint16") /* ty=Tensor[(13, 16, 1), uint16] */;
  %764 = cast(%var_426, dtype="uint16") /* ty=Tensor[(13, 16, 11), uint16] */;
  %765 = subtract(%761, %762) /* ty=Tensor[(13, 16, ?), int16] */;
  %766 = logical_xor(%763, %764) /* ty=Tensor[(13, 16, 11), uint16] */;
  (%765, %766)
}

def @func_16854() -> (Tensor[(7, 104), float64], Tensor[(3, 9, 5), float64]) {
  %767 = @func_8087() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(128), float32], Tensor[(7, 104), int16], Tensor[(128), float32]) */;
  %768 = %767.4;
  %769 = cast(%768, dtype="float64") /* ty=Tensor[(7, 104), float64] */;
  %770 = @func_4609() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %771 = log(%769) /* ty=Tensor[(7, 104), float64] */;
  %772 = %770.0;
  (%771, %772)
}

def @func_8747(%var_8739: Tensor[(1620), float32], %var_8740: Tensor[(128), float32]) -> (Tensor[(3, 9, 5), float64], Tensor[(3, 45), float32], Tensor[(1620), float32], Tensor[(128), float32], Tensor[(52, 2), bool], Tensor[(210), float64]) {
  %773 = @func_3538() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) */;
  %774 = cast(%var_8739, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %775 = cast(%var_8740, dtype="float32") /* ty=Tensor[(128), float32] */;
  %776 = cast(meta[relay.Constant][38] /* ty=Tensor[(52, 2), bool] */, dtype="bool") /* ty=Tensor[(52, 2), bool] */;
  %777 = cast(meta[relay.Constant][39] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %778 = reshape(%774, newshape=[12, 15, 9]) /* ty=Tensor[(12, 15, 9), float32] */;
  %779 = reshape(%775, newshape=[128]) /* ty=Tensor[(128), float32] */;
  %780 = reshape(%776, newshape=[52, 2]) /* ty=Tensor[(52, 2), bool] */;
  %781 = reshape(%777, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %782 = @func_2289(%778, %779, %780, %781) /* ty=(Tensor[(3, 45), float32], Tensor[(128), float32], Tensor[(135), float64], Tensor[(52, 2), bool], Tensor[(2, 7, 15), float64], Tensor[(210), float64], Tensor[(12, 15, 9), float64], Tensor[(12, 15, 9), int8], Tensor[(2, 7, 15), float64]) */;
  %783 = %773.0;
  %784 = %782.0;
  (%783, %784, %var_8739, %var_8740, meta[relay.Constant][38] /* ty=Tensor[(52, 2), bool] */, meta[relay.Constant][39] /* ty=Tensor[(210), float64] */)
}

def @func_5214() -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), bool]) {
  %785 = @func_4937() /* ty=Tensor[(3, 9, 5), float64] */;
  %786 = cast(%785, dtype="float64") /* ty=Tensor[(3, 9, 5), float64] */;
  %787 = reshape(%786, newshape=[3, 9, 5]) /* ty=Tensor[(3, 9, 5), float64] */;
  %788 = @func_576(%787) /* ty=(Tensor[(3, 9, 5), float64],) */;
  %789 = %788.0;
  %790 = @func_2460() /* ty=Tensor[(?, 8, 13), bool] */;
  (%785, %789, %790)
}

def @func_8954() -> (Tensor[(?, 8, 13), bool],) {
  %791 = @func_8531() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), bool]) */;
  %792 = %791.2;
  (%792,)
}

def @func_16875() -> Tensor[(?, 8, 13), float32] {
  %793 = @func_4746() /* ty=(Tensor[(?, 8, 13), float32],) */;
  %793.0
}

def @func_9530() -> Tensor[(?, 8, 13), float32] {
  %794 = @func_6867() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(15, 210), bool], Tensor[(7, 8, 13), int16]) */;
  %794.0
}

def @func_18980() -> (Tensor[(3, 9, 5), float64],) {
  %795 = @func_10024() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float64], Tensor[(2, 7, 15), float64], Tensor[(?, 8, 13), float32]) */;
  %796 = %795.0;
  (%796,)
}

def @func_9180() -> (Tensor[(?, 8, 13), float32], Tensor[(7, 8, 13), bool], Tensor[(7, 104), int16]) {
  %797 = @func_6655() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) */;
  %798 = cast(meta[relay.Constant][40] /* ty=Tensor[(7, 104), int16] */, dtype="int16") /* ty=Tensor[(7, 104), int16] */;
  %799 = reshape(%798, newshape=[7, 8, 13]) /* ty=Tensor[(7, 8, 13), int16] */;
  %800 = @func_4292(%799) /* ty=(Tensor[(7, 8, 13), bool],) */;
  %801 = %797.0;
  %802 = %800.0;
  (%801, %802, meta[relay.Constant][40] /* ty=Tensor[(7, 104), int16] */)
}

def @func_15876() -> (Tensor[(3, 9, 5), float64],) {
  %803 = @func_10239() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) */;
  %804 = %803.1;
  (%804,)
}

def @func_18622() -> (Tensor[(?, 8, 13), bool],) {
  %805 = @func_9438() /* ty=(Tensor[(?, 8, 13), bool], Tensor[(3, 9, 5), float64]) */;
  %806 = %805.0;
  (%806,)
}

def @func_15634() -> (Tensor[(15, 2, 10), float64], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) {
  %807 = @func_11778() /* ty=(Tensor[(15, 2, 10), float64],) */;
  %808 = %807.0;
  %809 = cast(%808, dtype="float64") /* ty=Tensor[(15, 2, 10), float64] */;
  %810 = @func_4533() /* ty=Tensor[(?, 8, 13), float32] */;
  %811 = cast(%810, dtype="bool") /* ty=Tensor[(?, 8, 13), bool] */;
  %812 = reshape(%811, newshape=[1, 8, 13]) /* ty=Tensor[(1, 8, 13), bool] */;
  %813 = @func_13493(%812) /* ty=(Tensor[(?, 8, 13), float32],) */;
  %814 = @func_11974() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %815 = asin(%809) /* ty=Tensor[(15, 2, 10), float64] */;
  %816 = %813.0;
  %817 = %814.0;
  %818 = @func_12787() /* ty=Tensor[(?, 8, 13), float32] */;
  (%815, %810, %816, %817, %818)
}

def @func_14808() -> (Tensor[(?, 8, 13), float32],) {
  %819 = @func_12772() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) */;
  %820 = %819.0;
  (%820,)
}

def @func_18954() -> (Tensor[(3, 9, 5), float64],) {
  %821 = @func_16494() /* ty=Tensor[(3, 9, 5), float64] */;
  (%821,)
}

def @func_15014() -> Tensor[(3, 9, 5), float64] {
  %822 = @func_8665() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %822.0
}

def @func_20255() -> Tensor[(3, 9, 5), float64] {
  %823 = @func_5873() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) */;
  %823.2
}

def @func_7543() -> (Tensor[(3, 9, 5), float64],) {
  %824 = @func_2839() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(7, 8, 13), int16]) */;
  %825 = %824.0;
  (%825,)
}

def @func_20535() -> (Tensor[(3, 9, 5), float64], Tensor[(7, 8, 13), int16]) {
  %826 = @func_20178() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %827 = %826.0;
  %828 = @func_3386() /* ty=Tensor[(7, 8, 13), int16] */;
  (%827, %828)
}

def @func_2759(%var_2739: Tensor[(210), float64]) -> (Tensor[(?, 8, 13), bool], Tensor[(52, 2), bool], Tensor[(1620), float32], Tensor[(128), float32], Tensor[(210), float64]) {
  %829 = @func_2384() /* ty=(Tensor[(10, 4, 6), int32], Tensor[(?, 8, 13), bool], Tensor[(1, 104), bool]) */;
  %830 = cast(meta[relay.Constant][41] /* ty=Tensor[(1620), float32] */, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %831 = cast(meta[relay.Constant][42] /* ty=Tensor[(128), float32] */, dtype="float32") /* ty=Tensor[(128), float32] */;
  %832 = %829.1;
  %833 = cast(%832, dtype="bool") /* ty=Tensor[(?, 8, 13), bool] */;
  %834 = cast(%var_2739, dtype="float64") /* ty=Tensor[(210), float64] */;
  %835 = reshape(%830, newshape=[12, 15, 9]) /* ty=Tensor[(12, 15, 9), float32] */;
  %836 = reshape(%831, newshape=[128]) /* ty=Tensor[(128), float32] */;
  %837 = reshape(%833, newshape=[52, 2]) /* ty=Tensor[(52, 2), bool] */;
  %838 = reshape(%834, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %839 = @func_2289(%835, %836, %837, %838) /* ty=(Tensor[(3, 45), float32], Tensor[(128), float32], Tensor[(135), float64], Tensor[(52, 2), bool], Tensor[(2, 7, 15), float64], Tensor[(210), float64], Tensor[(12, 15, 9), float64], Tensor[(12, 15, 9), int8], Tensor[(2, 7, 15), float64]) */;
  %840 = %839.3;
  (%832, %840, meta[relay.Constant][41] /* ty=Tensor[(1620), float32] */, meta[relay.Constant][42] /* ty=Tensor[(128), float32] */, %var_2739)
}

def @func_9826() -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), uint16]) {
  %841 = @func_6782() /* ty=(Tensor[(3, 9, 5), uint16], Tensor[(3, 9, 5), float64]) */;
  %842 = @func_5424() /* ty=(Tensor[(3, 9, 5), uint16],) */;
  %843 = %841.1;
  %844 = %842.0;
  (%843, %844)
}

def @func_2985(%var_2964: Tensor[(2, 7, 15), float64]) -> Tensor[(2, 7, 15), uint32] {
  %845 = @func_2581() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64], Tensor[(105, 2), float64], Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64]) */;
  %846 = %845.4;
  %847 = cast(%var_2964, dtype="uint32") /* ty=Tensor[(2, 7, 15), uint32] */;
  %848 = shape_of(%846, dtype="int32") /* ty=Tensor[(3), int32] */;
  %849 = cast(%846, dtype="uint32") /* ty=Tensor[(2, 7, 15), uint32] */;
  %850 = dyn.reshape(%847, %848, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  minimum(%849, %850) /* ty=Tensor[(2, 7, 15), uint32] */
}

def @func_9397() -> (Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) {
  %851 = @func_5740() /* ty=(Tensor[(?, 8, 13), float32],) */;
  %852 = @func_5740() /* ty=(Tensor[(?, 8, 13), float32],) */;
  %853 = %851.0;
  %854 = %852.0;
  (%853, %854)
}

def @func_4533() -> Tensor[(?, 8, 13), float32] {
  @func_4349() /* ty=Tensor[(?, 8, 13), float32] */
}

def @func_11561() -> Tensor[(1, 4, 8), float32] {
  %855 = cast(meta[relay.Constant][43] /* ty=Tensor[(1, 4, 8), float32] */, dtype="float32") /* ty=Tensor[(1, 4, 8), float32] */;
  cosh(%855) /* ty=Tensor[(1, 4, 8), float32] */
}

def @func_4027(%var_3978: Tensor[(1620), float32]) -> (Tensor[(7, 8, 13), int16], Tensor[(?, 8, 13), uint16], Tensor[(105, 2), uint64], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(105, 2), float64], Tensor[(2, 7, 15), float64], Tensor[(1620), float32], Tensor[(128), float32], Tensor[(2, 7, 15), float64], Tensor[(3, 9, 5), float64], Tensor[(45, 3), float64], Tensor[(3, 9, 5), uint16]) {
  %856 = @func_3361() /* ty=Tensor[(?, 8, 13), float32] */;
  %857 = cast(%856, dtype="float64") /* ty=Tensor[(?, 8, 13), float64] */;
  %858 = sin(%857) /* ty=Tensor[(?, 8, 13), float64] */;
  %859 = cast(%856, dtype="uint16") /* ty=Tensor[(?, 8, 13), uint16] */;
  %860 = shape_of(%858, dtype="int32") /* ty=Tensor[(3), int32] */;
  %861 = cast(%858, dtype="uint16") /* ty=Tensor[(?, 8, 13), uint16] */;
  %862 = dyn.reshape(%859, %860, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %863 = @func_2581() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64], Tensor[(105, 2), float64], Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64]) */;
  %864 = %863.2;
  %865 = cast(meta[relay.Constant][44] /* ty=Tensor[(105, 2), float64] */, dtype="uint64") /* ty=Tensor[(105, 2), uint64] */;
  %866 = shape_of(%864, dtype="int32") /* ty=Tensor[(2), int32] */;
  %867 = cast(%864, dtype="uint64") /* ty=Tensor[(105, 2), uint64] */;
  %868 = dyn.reshape(%865, %866, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %869 = @func_2581() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64], Tensor[(105, 2), float64], Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64]) */;
  %870 = @func_2581() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64], Tensor[(105, 2), float64], Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64]) */;
  %871 = cast(%var_3978, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %872 = cast(meta[relay.Constant][45] /* ty=Tensor[(128), float32] */, dtype="float32") /* ty=Tensor[(128), float32] */;
  %873 = right_shift(%861, %862) /* ty=Tensor[(?, 8, 13), uint16] */;
  %874 = cast(%873, dtype="bool") /* ty=Tensor[(?, 8, 13), bool] */;
  %875 = cast(meta[relay.Constant][44] /* ty=Tensor[(105, 2), float64] */, dtype="float64") /* ty=Tensor[(105, 2), float64] */;
  %876 = reshape(%871, newshape=[12, 15, 9]) /* ty=Tensor[(12, 15, 9), float32] */;
  %877 = reshape(%872, newshape=[128]) /* ty=Tensor[(128), float32] */;
  %878 = reshape(%874, newshape=[52, 2]) /* ty=Tensor[(52, 2), bool] */;
  %879 = reshape(%875, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %880 = @func_2289(%876, %877, %878, %879) /* ty=(Tensor[(3, 45), float32], Tensor[(128), float32], Tensor[(135), float64], Tensor[(52, 2), bool], Tensor[(2, 7, 15), float64], Tensor[(210), float64], Tensor[(12, 15, 9), float64], Tensor[(12, 15, 9), int8], Tensor[(2, 7, 15), float64]) */;
  %881 = cast(meta[relay.Constant][44] /* ty=Tensor[(105, 2), float64] */, dtype="float64") /* ty=Tensor[(105, 2), float64] */;
  %882 = reshape(%881, newshape=[2, 7, 15]) /* ty=Tensor[(2, 7, 15), float64] */;
  %883 = @func_869(%882) /* ty=(Tensor[(2, 7, 15), float64],) */;
  %884 = @func_2600() /* ty=Tensor[(3, 9, 5), float64] */;
  %885 = cast(%884, dtype="float64") /* ty=Tensor[(3, 9, 5), float64] */;
  %886 = %880.4;
  %887 = cast(%886, dtype="float64") /* ty=Tensor[(2, 7, 15), float64] */;
  %888 = cast(meta[relay.Constant][45] /* ty=Tensor[(128), float32] */, dtype="float32") /* ty=Tensor[(128), float32] */;
  %889 = reshape(%885, newshape=[45, 3]) /* ty=Tensor[(45, 3), float64] */;
  %890 = reshape(%887, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %891 = reshape(%888, newshape=[128]) /* ty=Tensor[(128), float32] */;
  %892 = @func_3116(%889, %890, %891) /* ty=(Tensor[(?, 8, 13), float32], Tensor[(45, 3), float64], Tensor[(?, 8, 13), bool], Tensor[(210), float64], Tensor[(210), float64], Tensor[(2, 7, 15), uint32], Tensor[(128), bool], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(1620), float32]) */;
  %893 = @func_3386() /* ty=Tensor[(7, 8, 13), int16] */;
  %894 = maximum(%867, %868) /* ty=Tensor[(105, 2), uint64] */;
  %895 = %869.0;
  %896 = %870.2;
  %897 = %883.0;
  %898 = @func_2600() /* ty=Tensor[(3, 9, 5), float64] */;
  %899 = %892.1;
  %900 = @func_3330() /* ty=Tensor[(3, 9, 5), uint16] */;
  (%893, %873, %894, %884, %895, %896, %886, %var_3978, meta[relay.Constant][45] /* ty=Tensor[(128), float32] */, %897, %898, %899, %900)
}

def @func_9336() -> Tensor[(3, 9, 5), float64] {
  @func_6283() /* ty=Tensor[(3, 9, 5), float64] */
}

def @func_20344() -> Tensor[(1, 4, 8), float32] {
  @func_17369() /* ty=Tensor[(1, 4, 8), float32] */
}

def @func_17555() -> (Tensor[(3, 9, 5), float64],) {
  %901 = @func_4047() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %902 = %901.0;
  (%902,)
}

def @func_19660() -> (Tensor[(3, 9, 5), uint16],) {
  %903 = @func_13463() /* ty=(Tensor[(3, 9, 5), uint16],) */;
  %904 = %903.0;
  (%904,)
}

def @func_3330() -> Tensor[(3, 9, 5), uint16] {
  %905 = @func_3180() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %906 = %905.0;
  %907 = cast(meta[relay.Constant][46] /* ty=Tensor[(3, 9, 5), float64] */, dtype="uint16") /* ty=Tensor[(3, 9, 5), uint16] */;
  %908 = shape_of(%906, dtype="int32") /* ty=Tensor[(3), int32] */;
  %909 = cast(%906, dtype="uint16") /* ty=Tensor[(3, 9, 5), uint16] */;
  %910 = dyn.reshape(%907, %908, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  logical_xor(%909, %910) /* ty=Tensor[(3, 9, 5), uint16] */
}

def @func_20785() -> Tensor[(?, 8, 13), float32] {
  @func_3842() /* ty=Tensor[(?, 8, 13), float32] */
}

def @func_4521() -> (Tensor[(?, 8, 13), float32],) {
  %911 = @func_3361() /* ty=Tensor[(?, 8, 13), float32] */;
  (%911,)
}

def @func_1683(%var_1645: Tensor[(16, 1, 8), float32], %var_1657: Tensor[(3, 45), float64], %var_1669: Tensor[(104), bool]) -> (Tensor[(3, 9, 5), float64], Tensor[(16, ?, 8), uint16], Tensor[(?, 8, 13), bool], Tensor[(104), bool], Tensor[(3, 45), float32]) {
  %912 = cast(%var_1657, dtype="float64") /* ty=Tensor[(3, 45), float64] */;
  %913 = reshape(%912, newshape=[3, 9, 5]) /* ty=Tensor[(3, 9, 5), float64] */;
  %914 = @func_576(%913) /* ty=(Tensor[(3, 9, 5), float64],) */;
  %915 = cast(%var_1645, dtype="float32") /* ty=Tensor[(16, 1, 8), float32] */;
  %916 = cos(%915) /* ty=Tensor[(16, 1, 8), float32] */;
  %917 = cast(%916, dtype="bool") /* ty=Tensor[(16, 1, 8), bool] */;
  %918 = shape_of(%var_1645, dtype="int32") /* ty=Tensor[(3), int32] */;
  %919 = cast(%var_1645, dtype="bool") /* ty=Tensor[(16, 1, 8), bool] */;
  %920 = dyn.reshape(%917, %918, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %921 = not_equal(%919, %920) /* ty=Tensor[(16, ?, 8), bool] */;
  %922 = cast(%916, dtype="uint16") /* ty=Tensor[(16, 1, 8), uint16] */;
  %923 = shape_of(%921, dtype="int32") /* ty=Tensor[(3), int32] */;
  %924 = cast(%921, dtype="uint16") /* ty=Tensor[(16, ?, 8), uint16] */;
  %925 = dyn.reshape(%922, %923, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %926 = cast(%var_1669, dtype="bool") /* ty=Tensor[(104), bool] */;
  %927 = cast(%var_1669, dtype="bool") /* ty=Tensor[(104), bool] */;
  %928 = reshape(%926, newshape=[1, 8, 13]) /* ty=Tensor[(1, 8, 13), bool] */;
  %929 = reshape(%927, newshape=[1, 8, 13]) /* ty=Tensor[(1, 8, 13), bool] */;
  %930 = @func_1635(%928, %929) /* ty=(Tensor[(?, 8, 13), bool],) */;
  %931 = cast(%var_1657, dtype="float32") /* ty=Tensor[(3, 45), float32] */;
  %932 = %914.0;
  %933 = right_shift(%924, %925) /* ty=Tensor[(16, ?, 8), uint16] */;
  %934 = %930.0;
  %935 = asin(%931) /* ty=Tensor[(3, 45), float32] */;
  (%932, %933, %934, %var_1669, %935)
}

def @func_13493(%var_13483: Tensor[(1, 8, 13), bool]) -> (Tensor[(?, 8, 13), float32],) {
  %936 = @func_10399() /* ty=(Tensor[(?, 8, 13), bool],) */;
  %937 = %936.0;
  %938 = cast(%var_13483, dtype="float32") /* ty=Tensor[(1, 8, 13), float32] */;
  %939 = shape_of(%937, dtype="int32") /* ty=Tensor[(3), int32] */;
  %940 = cast(%937, dtype="float32") /* ty=Tensor[(?, 8, 13), float32] */;
  %941 = dyn.reshape(%938, %939, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %942 = power(%940, %941) /* ty=Tensor[(?, 8, 13), float32] */;
  (%942,)
}

def @func_9897() -> (Tensor[(3, 9, 5), float64],) {
  %943 = @func_8665() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %944 = %943.0;
  (%944,)
}

def @func_14693(%var_14603: Tensor[(35, 6), float64], %var_14630: Tensor[(7, 104), int16]) -> (Tensor[(3, 9, 5), float64], Tensor[(2, 7, 15), uint32], Tensor[(35, 6), float64], Tensor[(7, 104), int16], Tensor[(?, 8, 13), bool], Tensor[(?, 8, 13), float32]) {
  %945 = @func_9613() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) */;
  %946 = cast(%var_14603, dtype="float64") /* ty=Tensor[(35, 6), float64] */;
  %947 = reshape(%946, newshape=[2, 7, 15]) /* ty=Tensor[(2, 7, 15), float64] */;
  %948 = @func_9180() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(7, 8, 13), bool], Tensor[(7, 104), int16]) */;
  %949 = %948.2;
  %950 = cast(%var_14630, dtype="int16") /* ty=Tensor[(7, 104), int16] */;
  %951 = shape_of(%949, dtype="int32") /* ty=Tensor[(2), int32] */;
  %952 = cast(%949, dtype="int16") /* ty=Tensor[(7, 104), int16] */;
  %953 = dyn.reshape(%950, %951, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %954 = @func_11340() /* ty=(Tensor[(?, 8, 13), bool],) */;
  %955 = %945.0;
  %956 = @func_2985(%947) /* ty=Tensor[(2, 7, 15), uint32] */;
  %957 = subtract(%952, %953) /* ty=Tensor[(7, 104), int16] */;
  %958 = %954.0;
  %959 = @func_4153() /* ty=Tensor[(?, 8, 13), float32] */;
  (%955, %956, %var_14603, %957, %958, %959)
}

def @func_2460() -> Tensor[(?, 8, 13), bool] {
  %960 = @func_2384() /* ty=(Tensor[(10, 4, 6), int32], Tensor[(?, 8, 13), bool], Tensor[(1, 104), bool]) */;
  %960.1
}

def @func_4867() -> Tensor[(3, 9, 5), float64] {
  %961 = @func_2839() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(7, 8, 13), int16]) */;
  %961.0
}

def @func_19761() -> (Tensor[(3, 9, 5), uint16],) {
  %962 = @func_14443() /* ty=(Tensor[(3, 9, 5), uint16],) */;
  %963 = %962.0;
  (%963,)
}

def @func_18867() -> (Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), uint16]) {
  %964 = @func_7391() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) */;
  %965 = @func_16945() /* ty=(Tensor[(3, 9, 5), uint16],) */;
  %966 = %964.1;
  %967 = %965.0;
  (%966, %967)
}

def @func_6607() -> (Tensor[(3, 9, 5), float64],) {
  %968 = @func_5323() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %969 = %968.0;
  (%969,)
}

def @func_13042() -> Tensor[(3, 9, 5), float64] {
  %970 = @func_8665() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %970.0
}

def @func_9877() -> (Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) {
  %971 = @func_8531() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), bool]) */;
  %972 = @func_4471() /* ty=Tensor[(?, 8, 13), float32] */;
  %973 = %971.1;
  (%972, %973)
}

def @func_6729() -> (Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) {
  %974 = @func_5873() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) */;
  %975 = @func_3361() /* ty=Tensor[(?, 8, 13), float32] */;
  %976 = %974.1;
  (%975, %976)
}

def @func_16945() -> (Tensor[(3, 9, 5), uint16],) {
  %977 = @func_13463() /* ty=(Tensor[(3, 9, 5), uint16],) */;
  %978 = %977.0;
  (%978,)
}

def @func_14183(%var_14157: Tensor[(16, 8, 13), float32]) -> (Tensor[(3, 9, 5), float64], Tensor[(16, 8, 13), bool], Tensor[(16, 8, 13), float64]) {
  %979 = @func_12772() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) */;
  %980 = %979.2;
  %981 = cast(%980, dtype="bool") /* ty=Tensor[(?, 8, 13), bool] */;
  %982 = cast(%var_14157, dtype="bool") /* ty=Tensor[(16, 8, 13), bool] */;
  %983 = cast(%980, dtype="float64") /* ty=Tensor[(?, 8, 13), float64] */;
  %984 = cast(%var_14157, dtype="float64") /* ty=Tensor[(16, 8, 13), float64] */;
  %985 = @func_13042() /* ty=Tensor[(3, 9, 5), float64] */;
  %986 = greater(%981, %982) /* ty=Tensor[(16, 8, 13), bool] */;
  %987 = floor_mod(%983, %984) /* ty=Tensor[(16, 8, 13), float64] */;
  (%985, %986, %987)
}

def @func_17289() -> (Tensor[(3, 9, 5), float64],) {
  %988 = @func_6499() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %989 = %988.0;
  (%989,)
}

def @func_2667(%var_2658: Tensor[(4, 32), float32]) -> (Tensor[(3, 9, 5), float64], Tensor[(16, ?, 8), uint16], Tensor[(4, 32), float32], Tensor[(104), bool]) {
  %990 = cast(%var_2658, dtype="float32") /* ty=Tensor[(4, 32), float32] */;
  %991 = @func_2600() /* ty=Tensor[(3, 9, 5), float64] */;
  %992 = cast(%991, dtype="float64") /* ty=Tensor[(3, 9, 5), float64] */;
  %993 = cast(meta[relay.Constant][47] /* ty=Tensor[(104), bool] */, dtype="bool") /* ty=Tensor[(104), bool] */;
  %994 = reshape(%990, newshape=[16, 1, 8]) /* ty=Tensor[(16, 1, 8), float32] */;
  %995 = reshape(%992, newshape=[3, 45]) /* ty=Tensor[(3, 45), float64] */;
  %996 = reshape(%993, newshape=[104]) /* ty=Tensor[(104), bool] */;
  %997 = @func_1683(%994, %995, %996) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(16, ?, 8), uint16], Tensor[(?, 8, 13), bool], Tensor[(104), bool], Tensor[(3, 45), float32]) */;
  %998 = %997.1;
  (%991, %998, %var_2658, meta[relay.Constant][47] /* ty=Tensor[(104), bool] */)
}

def @func_15865() -> (Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64]) {
  %999 = @func_10184() /* ty=(Tensor[(?, 8, 13), float32],) */;
  %1000 = %999.0;
  %1001 = cast(%1000, dtype="float32") /* ty=Tensor[(?, 8, 13), float32] */;
  %1002 = rsqrt(%1001) /* ty=Tensor[(?, 8, 13), float32] */;
  %1003 = @func_9276() /* ty=Tensor[(2, 7, 15), float64] */;
  (%1002, %1003)
}

def @func_13754() -> (Tensor[(7, 8, 13), int16], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) {
  %1004 = @func_2839() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(7, 8, 13), int16]) */;
  %1005 = @func_9397() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) */;
  %1006 = @func_3386() /* ty=Tensor[(7, 8, 13), int16] */;
  %1007 = %1004.0;
  %1008 = %1005.0;
  (%1006, %1007, %1008)
}

def @func_14901() -> (Tensor[(?, 8, 13), float32],) {
  %1009 = @func_7757() /* ty=Tensor[(?, 8, 13), float32] */;
  (%1009,)
}

def @func_10239() -> (Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) {
  %1010 = @func_5740() /* ty=(Tensor[(?, 8, 13), float32],) */;
  %1011 = %1010.0;
  %1012 = @func_8893() /* ty=Tensor[(3, 9, 5), float64] */;
  (%1011, %1012)
}

def @func_2384() -> (Tensor[(10, 4, 6), int32], Tensor[(?, 8, 13), bool], Tensor[(1, 104), bool]) {
  %1013 = cast(meta[relay.Constant][48] /* ty=Tensor[(10, 4, 6), float64] */, dtype="float64") /* ty=Tensor[(10, 4, 6), float64] */;
  %1014 = rsqrt(%1013) /* ty=Tensor[(10, 4, 6), float64] */;
  %1015 = cast(meta[relay.Constant][48] /* ty=Tensor[(10, 4, 6), float64] */, dtype="int32") /* ty=Tensor[(10, 4, 6), int32] */;
  %1016 = shape_of(%1014, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1017 = cast(%1014, dtype="int32") /* ty=Tensor[(10, 4, 6), int32] */;
  %1018 = dyn.reshape(%1015, %1016, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1019 = cast(meta[relay.Constant][49] /* ty=Tensor[(1, 104), bool] */, dtype="bool") /* ty=Tensor[(1, 104), bool] */;
  %1020 = cast(meta[relay.Constant][49] /* ty=Tensor[(1, 104), bool] */, dtype="bool") /* ty=Tensor[(1, 104), bool] */;
  %1021 = reshape(%1019, newshape=[1, 8, 13]) /* ty=Tensor[(1, 8, 13), bool] */;
  %1022 = reshape(%1020, newshape=[1, 8, 13]) /* ty=Tensor[(1, 8, 13), bool] */;
  %1023 = @func_1635(%1021, %1022) /* ty=(Tensor[(?, 8, 13), bool],) */;
  %1024 = minimum(%1017, %1018) /* ty=Tensor[(10, 4, 6), int32] */;
  %1025 = %1023.0;
  (%1024, %1025, meta[relay.Constant][49] /* ty=Tensor[(1, 104), bool] */)
}

def @func_18776() -> (Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), uint8], Tensor[(252), float32]) {
  %1026 = @func_12772() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) */;
  %1027 = cast(meta[relay.Constant][50] /* ty=Tensor[(252), float32] */, dtype="float32") /* ty=Tensor[(252), float32] */;
  %1028 = reshape(%1027, newshape=[7, 9, 4]) /* ty=Tensor[(7, 9, 4), float32] */;
  %1029 = @func_13619(%1028) /* ty=(Tensor[(7, 9, 4), float32], Tensor[(2, 7, 15), uint8], Tensor[(210), float64], Tensor[(?, 8, 13), float32], Tensor[(7, 9, 4), float32]) */;
  %1030 = %1026.0;
  %1031 = @func_15999() /* ty=Tensor[(?, 8, 13), float32] */;
  %1032 = %1029.1;
  (%1030, %1031, %1032, meta[relay.Constant][50] /* ty=Tensor[(252), float32] */)
}

def @func_6028(%var_6017: Tensor[(210), float64]) -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(210), float64]) {
  %1033 = @func_5323() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %1034 = cast(%var_6017, dtype="float64") /* ty=Tensor[(210), float64] */;
  %1035 = reshape(%1034, newshape=[210, 1]) /* ty=Tensor[(210, 1), float64] */;
  %1036 = @func_5302(%1035) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), uint16], Tensor[(210), float64], Tensor[(210, 1), float64], Tensor[(128), float32]) */;
  %1037 = %1033.0;
  %1038 = @func_3345() /* ty=Tensor[(?, 8, 13), float32] */;
  %1039 = %1036.0;
  (%1037, %1038, %1039, %var_6017)
}

def @func_20708() -> (Tensor[(?, 8, 13), float32],) {
  %1040 = @func_2447() /* ty=(Tensor[(?, 8, 13), float32],) */;
  %1041 = %1040.0;
  (%1041,)
}

def @func_9240(%var_9232: Tensor[(16, 15, 6), float64]) -> Tensor[(16, 15, 6), float64] {
  %1042 = cast(%var_9232, dtype="float64") /* ty=Tensor[(16, 15, 6), float64] */;
  sqrt(%1042) /* ty=Tensor[(16, 15, 6), float64] */
}

def @func_3842() -> Tensor[(?, 8, 13), float32] {
  %1043 = @func_2581() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64], Tensor[(105, 2), float64], Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64]) */;
  %1043.0
}

def @func_13830() -> (Tensor[(3, 9, 5), float64], Tensor[(2, 7, 15), float64], Tensor[(3, 9, 5), uint16]) {
  %1044 = @func_8665() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %1045 = @func_2581() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64], Tensor[(105, 2), float64], Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64]) */;
  %1046 = %1045.1;
  %1047 = cast(%1046, dtype="float64") /* ty=Tensor[(2, 7, 15), float64] */;
  %1048 = @func_6941() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), uint16], Tensor[(3, 9, 5), float64]) */;
  %1049 = %1044.0;
  %1050 = acos(%1047) /* ty=Tensor[(2, 7, 15), float64] */;
  %1051 = %1048.1;
  (%1049, %1050, %1051)
}

def @func_4471() -> Tensor[(?, 8, 13), float32] {
  %1052 = @func_4175() /* ty=(Tensor[(?, 8, 13), float32],) */;
  %1052.0
}

def @func_19002() -> Tensor[(3, 9, 5), float64] {
  @func_6283() /* ty=Tensor[(3, 9, 5), float64] */
}

def @func_20337() -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) {
  %1053 = @func_16771() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(2, 7, 15), float64]) */;
  %1054 = %1053.0;
  %1055 = @func_4359() /* ty=Tensor[(?, 8, 13), float32] */;
  (%1054, %1055)
}

def @func_16771() -> (Tensor[(3, 9, 5), float64], Tensor[(2, 7, 15), float64]) {
  %1056 = @func_9613() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) */;
  %1057 = @func_2581() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64], Tensor[(105, 2), float64], Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64]) */;
  %1058 = %1056.0;
  %1059 = %1057.4;
  (%1058, %1059)
}

def @func_14082(%var_14018: Tensor[(15, 10, 13), float32], %var_14037: Tensor[(60), float64]) -> (Tensor[(15, 10, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(60), float64], Tensor[(7, 8, 13), bool], Tensor[(?, 8, 13), bool]) {
  %1060 = cast(%var_14018, dtype="float32") /* ty=Tensor[(15, 10, 13), float32] */;
  %1061 = cast(%var_14037, dtype="float64") /* ty=Tensor[(60), float64] */;
  %1062 = reshape(%1061, newshape=[5, 4, 3]) /* ty=Tensor[(5, 4, 3), float64] */;
  %1063 = @func_10081(%1062) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(5, 4, 3), float32], Tensor[(?, 8, 13), float32], Tensor[(5, 4, 3), float32], Tensor[(?, 8, 13), float32]) */;
  %1064 = @func_9180() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(7, 8, 13), bool], Tensor[(7, 104), int16]) */;
  %1065 = cos(%1060) /* ty=Tensor[(15, 10, 13), float32] */;
  %1066 = %1063.2;
  %1067 = %1064.1;
  %1068 = @func_2460() /* ty=Tensor[(?, 8, 13), bool] */;
  (%1065, %1066, %var_14037, %1067, %1068)
}

def @func_10788() -> (Tensor[(?, 8, 13), bool], Tensor[(?, 8, 13), bool], Tensor[(3, 9, 5), uint16]) {
  %1069 = @func_5719() /* ty=(Tensor[(?, 8, 13), bool],) */;
  %1070 = @func_3672() /* ty=(Tensor[(3, 9, 5), uint16],) */;
  %1071 = @func_2460() /* ty=Tensor[(?, 8, 13), bool] */;
  %1072 = %1069.0;
  %1073 = %1070.0;
  (%1071, %1072, %1073)
}

def @func_11223() -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) {
  %1074 = @func_7448() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %1075 = @func_3180() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %1076 = %1074.0;
  %1077 = %1075.0;
  (%1076, %1077)
}

def @func_19970(%var_19939: Tensor[(210), float64]) -> (Tensor[(16, 8, 13), bool], Tensor[(?, 8, 13), float32], Tensor[(210), float64], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(16, 8, 13), float32]) {
  %1078 = @func_14340() /* ty=Tensor[(?, 8, 13), float32] */;
  %1079 = cast(%1078, dtype="bool") /* ty=Tensor[(?, 8, 13), bool] */;
  %1080 = cast(meta[relay.Constant][51] /* ty=Tensor[(16, 8, 13), float32] */, dtype="bool") /* ty=Tensor[(16, 8, 13), bool] */;
  %1081 = cast(%var_19939, dtype="float64") /* ty=Tensor[(210), float64] */;
  %1082 = reshape(%1081, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %1083 = @func_12699(%1082) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), uint16], Tensor[(2, 7, 15), uint32], Tensor[(210), float64], Tensor[(3, 9, 5), float64]) */;
  %1084 = @func_9912() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) */;
  %1085 = @func_17991() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) */;
  %1086 = cast(meta[relay.Constant][51] /* ty=Tensor[(16, 8, 13), float32] */, dtype="float32") /* ty=Tensor[(16, 8, 13), float32] */;
  %1087 = less_equal(%1079, %1080) /* ty=Tensor[(16, 8, 13), bool] */;
  %1088 = %1083.1;
  %1089 = %1084.1;
  %1090 = %1085.2;
  %1091 = cos(%1086) /* ty=Tensor[(16, 8, 13), float32] */;
  (%1087, %1088, %var_19939, %1089, %1090, %1091)
}

def @func_12845() -> (Tensor[(3, 9, 5), float64],) {
  %1092 = @func_10357() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %1093 = %1092.0;
  (%1093,)
}

def @func_5424() -> (Tensor[(3, 9, 5), uint16],) {
  %1094 = @func_3672() /* ty=(Tensor[(3, 9, 5), uint16],) */;
  %1095 = %1094.0;
  (%1095,)
}

def @func_17214() -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), uint16], Tensor[(3, 9, 5), float64]) {
  %1096 = @func_8087() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(128), float32], Tensor[(7, 104), int16], Tensor[(128), float32]) */;
  %1097 = @func_10982() /* ty=(Tensor[(3, 9, 5), uint16],) */;
  %1098 = @func_2504() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(135), float64]) */;
  %1099 = %1096.0;
  %1100 = %1097.0;
  %1101 = %1098.1;
  (%1099, %1100, %1101)
}

def @func_10811() -> (Tensor[(3, 9, 5), uint16],) {
  %1102 = @func_3672() /* ty=(Tensor[(3, 9, 5), uint16],) */;
  %1103 = %1102.0;
  (%1103,)
}

def @func_20375() -> (Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(135), float64], Tensor[(210), float64], Tensor[(3, 9, 5), float64]) {
  %1104 = @func_10215() /* ty=(Tensor[(?, 8, 13), float32],) */;
  %1105 = @func_14280() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %1106 = cast(meta[relay.Constant][52] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %1107 = reshape(%1106, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %1108 = @func_5379(%1107) /* ty=(Tensor[(7, 8, 13), int16], Tensor[(?, 8, 13), bool], Tensor[(135), float64], Tensor[(210), float64], Tensor[(128), float32]) */;
  %1109 = %1104.0;
  %1110 = %1105.0;
  %1111 = %1108.2;
  %1112 = @func_19002() /* ty=Tensor[(3, 9, 5), float64] */;
  (%1109, %1110, %1111, meta[relay.Constant][52] /* ty=Tensor[(210), float64] */, %1112)
}

def @func_20723() -> (Tensor[(2, 7, 15), float64],) {
  %1113 = @func_17759() /* ty=Tensor[(2, 7, 15), float64] */;
  (%1113,)
}

def @func_869(%var_864: Tensor[(2, 7, 15), float64]) -> (Tensor[(2, 7, 15), float64],) {
  %1114 = cast(meta[relay.Constant][53] /* ty=Tensor[(2, 1, 15), float64] */, dtype="float64") /* ty=Tensor[(2, 1, 15), float64] */;
  %1115 = cast(%var_864, dtype="float64") /* ty=Tensor[(2, 7, 15), float64] */;
  %1116 = add(%1114, %1115) /* ty=Tensor[(2, 7, 15), float64] */;
  (%1116,)
}

def @func_15121() -> (Tensor[(3, 9, 5), uint16],) {
  %1117 = @func_13463() /* ty=(Tensor[(3, 9, 5), uint16],) */;
  %1118 = %1117.0;
  (%1118,)
}

def @func_4937() -> Tensor[(3, 9, 5), float64] {
  %1119 = @func_4047() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %1119.0
}

def @func_6411() -> Tensor[(3, 9, 5), float64] {
  %1120 = @func_3538() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) */;
  %1120.1
}

def @func_10194() -> Tensor[(3, 9, 5), float64] {
  @func_6814() /* ty=Tensor[(3, 9, 5), float64] */
}

def @func_21332() -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) {
  %1121 = @func_17005() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %1122 = %1121.0;
  %1123 = @func_18535() /* ty=Tensor[(?, 8, 13), float32] */;
  (%1122, %1123)
}

def @func_13896() -> Tensor[(3, 9, 5), float64] {
  %1124 = @func_7537() /* ty=Tensor[(3, 9, 5), float64] */;
  %1125 = cast(meta[relay.Constant][54] /* ty=Tensor[(3, 9, 5), float64] */, dtype="float64") /* ty=Tensor[(3, 9, 5), float64] */;
  %1126 = shape_of(%1124, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1127 = cast(%1124, dtype="float64") /* ty=Tensor[(3, 9, 5), float64] */;
  %1128 = dyn.reshape(%1125, %1126, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_divide(%1127, %1128) /* ty=Tensor[(3, 9, 5), float64] */
}

def @func_9438() -> (Tensor[(?, 8, 13), bool], Tensor[(3, 9, 5), float64]) {
  %1129 = @func_2384() /* ty=(Tensor[(10, 4, 6), int32], Tensor[(?, 8, 13), bool], Tensor[(1, 104), bool]) */;
  %1130 = @func_7341() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %1131 = %1129.1;
  %1132 = %1130.0;
  (%1131, %1132)
}

def @func_7757() -> Tensor[(?, 8, 13), float32] {
  %1133 = @func_4521() /* ty=(Tensor[(?, 8, 13), float32],) */;
  %1133.0
}

def @func_11778() -> (Tensor[(15, 2, 10), float64],) {
  %1134 = cast(meta[relay.Constant][55] /* ty=Tensor[(15, 2, 10), float64] */, dtype="float64") /* ty=Tensor[(15, 2, 10), float64] */;
  %1135 = sigmoid(%1134) /* ty=Tensor[(15, 2, 10), float64] */;
  (%1135,)
}

def @func_6655() -> (Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) {
  %1136 = @func_4832() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) */;
  %1137 = %1136.1;
  %1138 = @func_3361() /* ty=Tensor[(?, 8, 13), float32] */;
  (%1137, %1138)
}

def @func_4126() -> Tensor[(?, 8, 13), float32] {
  %1139 = @func_4075() /* ty=(Tensor[(3, 9, 5), uint16], Tensor[(?, 8, 13), float32]) */;
  %1139.1
}

def @func_16548() -> (Tensor[(?, 8, 13), bool],) {
  %1140 = @func_6994() /* ty=Tensor[(?, 8, 13), bool] */;
  (%1140,)
}

def @func_15275() -> (Tensor[(15, 2, 10), float64], Tensor[(3, 9, 5), float64]) {
  %1141 = @func_11778() /* ty=(Tensor[(15, 2, 10), float64],) */;
  %1142 = @func_9897() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %1143 = %1141.0;
  %1144 = %1142.0;
  (%1143, %1144)
}

def @func_9613() -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) {
  %1145 = @func_4867() /* ty=Tensor[(3, 9, 5), float64] */;
  %1146 = @func_4471() /* ty=Tensor[(?, 8, 13), float32] */;
  (%1145, %1146)
}

def @func_5922(%var_5915: Tensor[(210), float64]) -> (Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), uint16], Tensor[(3, 9, 5), float64], Tensor[(128), float32], Tensor[(210), float64]) {
  %1147 = @func_4259() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) */;
  %1148 = @func_4184() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %1149 = cast(%var_5915, dtype="float64") /* ty=Tensor[(210), float64] */;
  %1150 = reshape(%1149, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %1151 = @func_2759(%1150) /* ty=(Tensor[(?, 8, 13), bool], Tensor[(52, 2), bool], Tensor[(1620), float32], Tensor[(128), float32], Tensor[(210), float64]) */;
  %1152 = %1147.1;
  %1153 = @func_5807() /* ty=Tensor[(3, 9, 5), uint16] */;
  %1154 = %1148.0;
  %1155 = %1151.3;
  (%1152, %1153, %1154, %1155, %var_5915)
}

def @func_6782() -> (Tensor[(3, 9, 5), uint16], Tensor[(3, 9, 5), float64]) {
  %1156 = @func_5807() /* ty=Tensor[(3, 9, 5), uint16] */;
  %1157 = @func_4867() /* ty=Tensor[(3, 9, 5), float64] */;
  (%1156, %1157)
}

def @func_12341() -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) {
  %1158 = @func_11656() /* ty=(Tensor[(?, 8, 13), float32],) */;
  %1159 = @func_6814() /* ty=Tensor[(3, 9, 5), float64] */;
  %1160 = %1158.0;
  (%1159, %1160)
}

def @func_17423(%var_17407: Tensor[(128), float32], %var_17408: Tensor[(210, 1), float64], %var_17411: Tensor[(128), float32]) -> (Tensor[(3, 9, 5), float64], Tensor[(128), float32], Tensor[(210, 1), float64], Tensor[(128), float32], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(1620), float32]) {
  %1161 = @func_8665() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %1162 = cast(%var_17407, dtype="float32") /* ty=Tensor[(128), float32] */;
  %1163 = cast(%var_17408, dtype="float64") /* ty=Tensor[(210, 1), float64] */;
  %1164 = reshape(%1162, newshape=[128]) /* ty=Tensor[(128), float32] */;
  %1165 = reshape(%1163, newshape=[1, 210]) /* ty=Tensor[(1, 210), float64] */;
  %1166 = @func_6273(%1164, %1165) /* ty=(Tensor[(3, 9, 5), float32], Tensor[(?, 8, 13), bool], Tensor[(128), float32], Tensor[(1, 210), float64]) */;
  %1167 = %1166.2;
  %1168 = cast(%var_17411, dtype="float32") /* ty=Tensor[(128), float32] */;
  %1169 = shape_of(%1167, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1170 = cast(%1167, dtype="float32") /* ty=Tensor[(128), float32] */;
  %1171 = dyn.reshape(%1168, %1169, newshape=[]) /* ty=Tensor[(?), float32] */;
  %1172 = @func_4075() /* ty=(Tensor[(3, 9, 5), uint16], Tensor[(?, 8, 13), float32]) */;
  %1173 = cast(%var_17408, dtype="float64") /* ty=Tensor[(210, 1), float64] */;
  %1174 = cast(meta[relay.Constant][56] /* ty=Tensor[(1620), float32] */, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %1175 = reshape(%1173, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %1176 = reshape(%1174, newshape=[1620]) /* ty=Tensor[(1620), float32] */;
  %1177 = @func_8179(%1175, %1176) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(210), float64], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) */;
  %1178 = %1161.0;
  %1179 = power(%1170, %1171) /* ty=Tensor[(128), float32] */;
  %1180 = %1172.1;
  %1181 = %1177.0;
  (%1178, %var_17407, %var_17408, %1179, %1180, %1181, meta[relay.Constant][56] /* ty=Tensor[(1620), float32] */)
}

def @func_2839() -> (Tensor[(3, 9, 5), float64], Tensor[(7, 8, 13), int16]) {
  %1182 = @func_2447() /* ty=(Tensor[(?, 8, 13), float32],) */;
  %1183 = %1182.0;
  %1184 = cast(%1183, dtype="int16") /* ty=Tensor[(?, 8, 13), int16] */;
  %1185 = cast(meta[relay.Constant][57] /* ty=Tensor[(7, 8, 13), float32] */, dtype="int16") /* ty=Tensor[(7, 8, 13), int16] */;
  %1186 = @func_2600() /* ty=Tensor[(3, 9, 5), float64] */;
  %1187 = right_shift(%1184, %1185) /* ty=Tensor[(7, 8, 13), int16] */;
  (%1186, %1187)
}

def @func_4923(%var_4915: Tensor[(135), float64]) -> (Tensor[(3, 9, 5), float64], Tensor[(135), float64], Tensor[(105, 2), float64], Tensor[(128), float32], Tensor[(?, 8, 13), uint8]) {
  %1188 = cast(%var_4915, dtype="float64") /* ty=Tensor[(135), float64] */;
  %1189 = cast(meta[relay.Constant][58] /* ty=Tensor[(105, 2), float64] */, dtype="float64") /* ty=Tensor[(105, 2), float64] */;
  %1190 = cast(meta[relay.Constant][59] /* ty=Tensor[(128), float32] */, dtype="float32") /* ty=Tensor[(128), float32] */;
  %1191 = reshape(%1188, newshape=[45, 3]) /* ty=Tensor[(45, 3), float64] */;
  %1192 = reshape(%1189, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %1193 = reshape(%1190, newshape=[128]) /* ty=Tensor[(128), float32] */;
  %1194 = @func_3116(%1191, %1192, %1193) /* ty=(Tensor[(?, 8, 13), float32], Tensor[(45, 3), float64], Tensor[(?, 8, 13), bool], Tensor[(210), float64], Tensor[(210), float64], Tensor[(2, 7, 15), uint32], Tensor[(128), bool], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(1620), float32]) */;
  %1195 = @func_2460() /* ty=Tensor[(?, 8, 13), bool] */;
  %1196 = cast(%1195, dtype="float32") /* ty=Tensor[(?, 8, 13), float32] */;
  %1197 = tan(%1196) /* ty=Tensor[(?, 8, 13), float32] */;
  %1198 = cast(%1195, dtype="uint8") /* ty=Tensor[(?, 8, 13), uint8] */;
  %1199 = shape_of(%1197, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1200 = cast(%1197, dtype="uint8") /* ty=Tensor[(?, 8, 13), uint8] */;
  %1201 = dyn.reshape(%1198, %1199, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1202 = %1194.7;
  %1203 = minimum(%1200, %1201) /* ty=Tensor[(?, 8, 13), uint8] */;
  (%1202, %var_4915, meta[relay.Constant][58] /* ty=Tensor[(105, 2), float64] */, meta[relay.Constant][59] /* ty=Tensor[(128), float32] */, %1203)
}

def @func_16238() -> (Tensor[(11, 11, 11), float32], Tensor[(?, 8, 13), bool]) {
  %1204 = cast(meta[relay.Constant][60] /* ty=Tensor[(11, 11, 11), float32] */, dtype="float32") /* ty=Tensor[(11, 11, 11), float32] */;
  %1205 = atanh(%1204) /* ty=Tensor[(11, 11, 11), float32] */;
  %1206 = @func_2460() /* ty=Tensor[(?, 8, 13), bool] */;
  (%1205, %1206)
}

def @func_9113() -> Tensor[(3, 9, 5), float64] {
  @func_7537() /* ty=Tensor[(3, 9, 5), float64] */
}

def @func_17707() -> (Tensor[(3, 9, 5), uint16],) {
  %1207 = @func_10982() /* ty=(Tensor[(3, 9, 5), uint16],) */;
  %1208 = %1207.0;
  (%1208,)
}

def @func_21234(%var_21193: Tensor[(1620), float32]) -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(1620), float32], Tensor[(210), float64], Tensor[(2, 7, 15), float64], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(7, 8, 13), int16]) {
  %1209 = @func_9613() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) */;
  %1210 = cast(%var_21193, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %1211 = reshape(%1210, newshape=[540, 3]) /* ty=Tensor[(540, 3), float32] */;
  %1212 = @func_9366(%1211) /* ty=(Tensor[(?, 8, 13), float32], Tensor[(128), float32], Tensor[(540, 3), float32], Tensor[(128, 1), float32]) */;
  %1213 = @func_17066() /* ty=(Tensor[(?, 8, 13), bool], Tensor[(2, 7, 15), float64], Tensor[(210), float64]) */;
  %1214 = @func_15865() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64]) */;
  %1215 = @func_5214() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), bool]) */;
  %1216 = %1209.0;
  %1217 = %1212.0;
  %1218 = %1213.2;
  %1219 = %1214.1;
  %1220 = @func_7757() /* ty=Tensor[(?, 8, 13), float32] */;
  %1221 = %1215.0;
  %1222 = @func_17261() /* ty=Tensor[(7, 8, 13), int16] */;
  (%1216, %1217, %var_21193, %1218, %1219, %1220, %1221, %1222)
}

def @func_4095() -> (Tensor[(7, 8, 13), int16],) {
  %1223 = @func_3386() /* ty=Tensor[(7, 8, 13), int16] */;
  (%1223,)
}

def @func_7391() -> (Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) {
  %1224 = @func_4746() /* ty=(Tensor[(?, 8, 13), float32],) */;
  %1225 = @func_6655() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) */;
  %1226 = @func_4153() /* ty=Tensor[(?, 8, 13), float32] */;
  %1227 = %1224.0;
  %1228 = %1225.1;
  (%1226, %1227, %1228)
}

def @func_5618(%var_5590: Tensor[(14, 8, 13), float32]) -> (Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), uint16], Tensor[(?, 8, 13), float32], Tensor[(14, 8, 13), int16]) {
  %1229 = @func_4075() /* ty=(Tensor[(3, 9, 5), uint16], Tensor[(?, 8, 13), float32]) */;
  %1230 = @func_4359() /* ty=Tensor[(?, 8, 13), float32] */;
  %1231 = cast(%1230, dtype="float32") /* ty=Tensor[(?, 8, 13), float32] */;
  %1232 = cast(%1230, dtype="int16") /* ty=Tensor[(?, 8, 13), int16] */;
  %1233 = cast(%var_5590, dtype="int16") /* ty=Tensor[(14, 8, 13), int16] */;
  %1234 = %1229.1;
  %1235 = @func_3330() /* ty=Tensor[(3, 9, 5), uint16] */;
  %1236 = acos(%1231) /* ty=Tensor[(?, 8, 13), float32] */;
  %1237 = minimum(%1232, %1233) /* ty=Tensor[(14, 8, 13), int16] */;
  (%1234, %1235, %1236, %1237)
}

def @func_17369() -> Tensor[(1, 4, 8), float32] {
  @func_11561() /* ty=Tensor[(1, 4, 8), float32] */
}

def @func_9208() -> (Tensor[(3, 9, 5), uint16], Tensor[(3, 9, 5), float64]) {
  %1238 = @func_7441() /* ty=(Tensor[(3, 9, 5), uint16], Tensor[(?, 8, 13), float32]) */;
  %1239 = %1238.0;
  %1240 = @func_6411() /* ty=Tensor[(3, 9, 5), float64] */;
  (%1239, %1240)
}

def @func_2447() -> (Tensor[(?, 8, 13), float32],) {
  %1241 = @func_2384() /* ty=(Tensor[(10, 4, 6), int32], Tensor[(?, 8, 13), bool], Tensor[(1, 104), bool]) */;
  %1242 = %1241.1;
  %1243 = cast(%1242, dtype="float32") /* ty=Tensor[(?, 8, 13), float32] */;
  %1244 = log10(%1243) /* ty=Tensor[(?, 8, 13), float32] */;
  (%1244,)
}

def @func_16528(%var_16515: int8, %var_16516: Tensor[(9, 13, 1), int8]) -> (Tensor[(9, 13, 1), int8],) {
  %1245 = cast(%var_16515, dtype="int8") /* ty=int8 */;
  %1246 = cast(%var_16516, dtype="int8") /* ty=Tensor[(9, 13, 1), int8] */;
  %1247 = left_shift(%1245, %1246) /* ty=Tensor[(9, 13, 1), int8] */;
  (%1247,)
}

def @func_17627() -> (Tensor[(1620), float32],) {
  %1248 = @func_11440() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(128), float32], Tensor[(1620), float32]) */;
  %1249 = %1248.2;
  (%1249,)
}

def @func_20080() -> (Tensor[(3, 9, 5), uint16],) {
  %1250 = @func_19660() /* ty=(Tensor[(3, 9, 5), uint16],) */;
  %1251 = %1250.0;
  (%1251,)
}

def @func_19903(%var_19892: Tensor[(210), float64]) -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(7, 8, 13), int16], Tensor[(3, 9, 5), float64], Tensor[(210), float64], Tensor[(210), float64]) {
  %1252 = @func_17214() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), uint16], Tensor[(3, 9, 5), float64]) */;
  %1253 = @func_16434() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) */;
  %1254 = @func_13754() /* ty=(Tensor[(7, 8, 13), int16], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) */;
  %1255 = @func_17214() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), uint16], Tensor[(3, 9, 5), float64]) */;
  %1256 = cast(%var_19892, dtype="float64") /* ty=Tensor[(210), float64] */;
  %1257 = reshape(%1256, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %1258 = @func_6028(%1257) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(210), float64]) */;
  %1259 = %1252.2;
  %1260 = %1253.2;
  %1261 = %1254.0;
  %1262 = %1255.2;
  %1263 = %1258.3;
  (%1259, %1260, %1261, %1262, %1263, %var_19892)
}

def @func_14448() -> (Tensor[(7, 8, 13), int16],) {
  %1264 = @func_4095() /* ty=(Tensor[(7, 8, 13), int16],) */;
  %1265 = %1264.0;
  (%1265,)
}

def @func_18923() -> (Tensor[(3, 9, 5), float64],) {
  %1266 = @func_15791() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) */;
  %1267 = %1266.0;
  (%1267,)
}

def @func_14280() -> (Tensor[(3, 9, 5), float64],) {
  %1268 = @func_12508() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(128), float32]) */;
  %1269 = %1268.1;
  (%1269,)
}

def @func_21133(%var_21089: Tensor[(2, 64), float32], %var_21093: Tensor[(252), float32]) -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), bool], Tensor[(104), bool], Tensor[(2, 64), float32], Tensor[(7, 9, 4), float32], Tensor[(252), float32], Tensor[(?, 8, 13), bool], Tensor[(3, 9, 5), float64]) {
  %1270 = cast(%var_21089, dtype="float32") /* ty=Tensor[(2, 64), float32] */;
  %1271 = @func_14298() /* ty=Tensor[(3, 9, 5), float64] */;
  %1272 = cast(%1271, dtype="float64") /* ty=Tensor[(3, 9, 5), float64] */;
  %1273 = reshape(%1270, newshape=[128]) /* ty=Tensor[(128), float32] */;
  %1274 = reshape(%1272, newshape=[3, 45]) /* ty=Tensor[(3, 45), float64] */;
  %1275 = @func_12207(%1273, %1274) /* ty=(Tensor[(7, 8, 13), int16], Tensor[(?, 8, 13), bool], Tensor[(128), float32], Tensor[(3, 45), float64], Tensor[(104), bool]) */;
  %1276 = cast(%var_21093, dtype="float32") /* ty=Tensor[(252), float32] */;
  %1277 = reshape(%1276, newshape=[7, 9, 4]) /* ty=Tensor[(7, 9, 4), float32] */;
  %1278 = @func_13619(%1277) /* ty=(Tensor[(7, 9, 4), float32], Tensor[(2, 7, 15), uint8], Tensor[(210), float64], Tensor[(?, 8, 13), float32], Tensor[(7, 9, 4), float32]) */;
  %1279 = %1275.4;
  %1280 = cast(%1279, dtype="bool") /* ty=Tensor[(104), bool] */;
  %1281 = cast(%1279, dtype="bool") /* ty=Tensor[(104), bool] */;
  %1282 = reshape(%1280, newshape=[1, 8, 13]) /* ty=Tensor[(1, 8, 13), bool] */;
  %1283 = reshape(%1281, newshape=[1, 8, 13]) /* ty=Tensor[(1, 8, 13), bool] */;
  %1284 = @func_1635(%1282, %1283) /* ty=(Tensor[(?, 8, 13), bool],) */;
  %1285 = @func_7341() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %1286 = @func_2460() /* ty=Tensor[(?, 8, 13), bool] */;
  %1287 = %1278.0;
  %1288 = %1284.0;
  %1289 = %1285.0;
  (%1271, %1286, %1279, %var_21089, %1287, %var_21093, %1288, %1289)
}

def @func_21441() -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) {
  %1290 = @func_10357() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %1291 = @func_11270() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %1292 = %1290.0;
  %1293 = %1291.0;
  (%1292, %1293)
}

def @func_3672() -> (Tensor[(3, 9, 5), uint16],) {
  %1294 = @func_3330() /* ty=Tensor[(3, 9, 5), uint16] */;
  (%1294,)
}

def @func_14992(%var_14976: Tensor[(1620), float32]) -> (Tensor[(3, 9, 5), uint16], Tensor[(?, 8, 13), bool], Tensor[(?, 8, 13), float32], Tensor[(1620), float32], Tensor[(3, 9, 5), float64]) {
  %1295 = @func_3672() /* ty=(Tensor[(3, 9, 5), uint16],) */;
  %1296 = @func_12926() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), bool]) */;
  %1297 = cast(%var_14976, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %1298 = reshape(%1297, newshape=[1620]) /* ty=Tensor[(1620), float32] */;
  %1299 = @func_9580(%1298) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(128), float32], Tensor[(1620), float32], Tensor[(3, 9, 5), uint16]) */;
  %1300 = %1295.0;
  %1301 = %1296.2;
  %1302 = %1299.1;
  %1303 = @func_14298() /* ty=Tensor[(3, 9, 5), float64] */;
  (%1300, %1301, %1302, %var_14976, %1303)
}

def @func_18228() -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), uint16]) {
  %1304 = @func_11577() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) */;
  %1305 = @func_13830() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(2, 7, 15), float64], Tensor[(3, 9, 5), uint16]) */;
  %1306 = @func_13945() /* ty=Tensor[(3, 9, 5), float64] */;
  %1307 = %1304.1;
  %1308 = %1305.2;
  (%1306, %1307, %1308)
}

def @func_5084() -> (Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) {
  %1309 = @func_3842() /* ty=Tensor[(?, 8, 13), float32] */;
  %1310 = @func_4349() /* ty=Tensor[(?, 8, 13), float32] */;
  (%1309, %1310)
}

def @func_17833() -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) {
  %1311 = @func_11577() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) */;
  %1312 = @func_7341() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %1313 = %1311.1;
  %1314 = %1312.0;
  (%1313, %1314)
}

def @func_4184() -> (Tensor[(3, 9, 5), float64],) {
  %1315 = @func_2600() /* ty=Tensor[(3, 9, 5), float64] */;
  (%1315,)
}

def @func_8893() -> Tensor[(3, 9, 5), float64] {
  %1316 = @func_6185() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %1316.0
}

def @func_10204() -> (Tensor[(3, 9, 5), float64],) {
  %1317 = @func_6411() /* ty=Tensor[(3, 9, 5), float64] */;
  (%1317,)
}

def @func_17099() -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) {
  %1318 = @func_7341() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %1319 = @func_10357() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %1320 = %1318.0;
  %1321 = %1319.0;
  (%1320, %1321)
}

def @func_16003() -> (Tensor[(3, 9, 5), float64],) {
  %1322 = @func_15065() /* ty=Tensor[(3, 9, 5), float64] */;
  (%1322,)
}

def @func_11440() -> (Tensor[(3, 9, 5), float64], Tensor[(128), float32], Tensor[(1620), float32]) {
  %1323 = cast(meta[relay.Constant][61] /* ty=Tensor[(1620), float32] */, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %1324 = reshape(%1323, newshape=[1620]) /* ty=Tensor[(1620), float32] */;
  %1325 = @func_9580(%1324) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(128), float32], Tensor[(1620), float32], Tensor[(3, 9, 5), uint16]) */;
  %1326 = @func_6411() /* ty=Tensor[(3, 9, 5), float64] */;
  %1327 = %1325.2;
  (%1326, %1327, meta[relay.Constant][61] /* ty=Tensor[(1620), float32] */)
}

def @func_15248() -> (Tensor[(105, 2), float64], Tensor[(3, 9, 5), uint16], Tensor[(3, 9, 5), float64]) {
  %1328 = @func_2581() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64], Tensor[(105, 2), float64], Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64]) */;
  %1329 = @func_15121() /* ty=(Tensor[(3, 9, 5), uint16],) */;
  %1330 = %1328.2;
  %1331 = %1329.0;
  %1332 = @func_14730() /* ty=Tensor[(3, 9, 5), float64] */;
  (%1330, %1331, %1332)
}

def @func_12999() -> Tensor[(3, 9, 5), float64] {
  %1333 = @func_5323() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %1333.0
}

def @func_3180() -> (Tensor[(3, 9, 5), float64],) {
  %1334 = @func_2839() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(7, 8, 13), int16]) */;
  %1335 = %1334.0;
  (%1335,)
}

def @func_3386() -> Tensor[(7, 8, 13), int16] {
  %1336 = @func_2839() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(7, 8, 13), int16]) */;
  %1336.1
}

def @func_20382() -> (Tensor[(3, 9, 5), float64],) {
  %1337 = @func_11577() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) */;
  %1338 = %1337.1;
  (%1338,)
}

def @main(%var_21485: Tensor[(70, 6), float64]) -> (Tensor[(?, 8, 13), bool], Tensor[(70, 6), float64], Tensor[(52, 2), uint64]) {
  %1339 = @func_2384() /* ty=(Tensor[(10, 4, 6), int32], Tensor[(?, 8, 13), bool], Tensor[(1, 104), bool]) */;
  %1340 = cast(%var_21485, dtype="float64") /* ty=Tensor[(70, 6), float64] */;
  %1341 = reshape(%1340, newshape=[2, 210]) /* ty=Tensor[(2, 210), float64] */;
  %1342 = @func_19233(%1341) /* ty=(Tensor[(?, 8, 13), float32], Tensor[(52, 2), bool], Tensor[(2, 210), bool]) */;
  %1343 = %1342.1;
  %1344 = cast(meta[relay.Constant][62] /* ty=Tensor[(52, 2), bool] */, dtype="uint64") /* ty=Tensor[(52, 2), uint64] */;
  %1345 = shape_of(%1343, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1346 = cast(%1343, dtype="uint64") /* ty=Tensor[(52, 2), uint64] */;
  %1347 = dyn.reshape(%1344, %1345, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %1348 = %1339.1;
  %1349 = maximum(%1346, %1347) /* ty=Tensor[(52, 2), uint64] */;
  (%1348, %var_21485, %1349)
}

def @func_3116(%var_3041: Tensor[(45, 3), float64], %var_3077: Tensor[(210), float64], %var_3093: Tensor[(128), float32]) -> (Tensor[(?, 8, 13), float32], Tensor[(45, 3), float64], Tensor[(?, 8, 13), bool], Tensor[(210), float64], Tensor[(210), float64], Tensor[(2, 7, 15), uint32], Tensor[(128), bool], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(1620), float32]) {
  %1350 = @func_2447() /* ty=(Tensor[(?, 8, 13), float32],) */;
  %1351 = cast(meta[relay.Constant][63] /* ty=Tensor[(128), float32] */, dtype="float32") /* ty=Tensor[(128), float32] */;
  %1352 = cast(%var_3041, dtype="float64") /* ty=Tensor[(45, 3), float64] */;
  %1353 = %1350.0;
  %1354 = cast(%1353, dtype="bool") /* ty=Tensor[(?, 8, 13), bool] */;
  %1355 = reshape(%1351, newshape=[16, 1, 8]) /* ty=Tensor[(16, 1, 8), float32] */;
  %1356 = reshape(%1352, newshape=[3, 45]) /* ty=Tensor[(3, 45), float64] */;
  %1357 = reshape(%1354, newshape=[104]) /* ty=Tensor[(104), bool] */;
  %1358 = @func_1683(%1355, %1356, %1357) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(16, ?, 8), uint16], Tensor[(?, 8, 13), bool], Tensor[(104), bool], Tensor[(3, 45), float32]) */;
  %1359 = %1358.2;
  %1360 = cast(%1359, dtype="bool") /* ty=Tensor[(?, 8, 13), bool] */;
  %1361 = @func_2460() /* ty=Tensor[(?, 8, 13), bool] */;
  %1362 = cast(%1361, dtype="bool") /* ty=Tensor[(?, 8, 13), bool] */;
  %1363 = reshape(%1360, newshape=[1, 8, 13]) /* ty=Tensor[(1, 8, 13), bool] */;
  %1364 = reshape(%1362, newshape=[1, 8, 13]) /* ty=Tensor[(1, 8, 13), bool] */;
  %1365 = @func_1635(%1363, %1364) /* ty=(Tensor[(?, 8, 13), bool],) */;
  %1366 = cast(%var_3077, dtype="float64") /* ty=Tensor[(210), float64] */;
  %1367 = reshape(%1366, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %1368 = @func_2759(%1367) /* ty=(Tensor[(?, 8, 13), bool], Tensor[(52, 2), bool], Tensor[(1620), float32], Tensor[(128), float32], Tensor[(210), float64]) */;
  %1369 = %1368.4;
  %1370 = cast(%1369, dtype="float64") /* ty=Tensor[(210), float64] */;
  %1371 = reshape(%1370, newshape=[2, 7, 15]) /* ty=Tensor[(2, 7, 15), float64] */;
  %1372 = cast(%var_3093, dtype="bool") /* ty=Tensor[(128), bool] */;
  %1373 = shape_of(meta[relay.Constant][63] /* ty=Tensor[(128), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1374 = cast(meta[relay.Constant][63] /* ty=Tensor[(128), float32] */, dtype="bool") /* ty=Tensor[(128), bool] */;
  %1375 = dyn.reshape(%1372, %1373, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1376 = cast(meta[relay.Constant][63] /* ty=Tensor[(128), float32] */, dtype="float32") /* ty=Tensor[(128), float32] */;
  %1377 = cast(%var_3041, dtype="float64") /* ty=Tensor[(45, 3), float64] */;
  %1378 = cast(%1359, dtype="uint32") /* ty=Tensor[(?, 8, 13), uint32] */;
  %1379 = shape_of(%1361, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1380 = cast(%1361, dtype="uint32") /* ty=Tensor[(?, 8, 13), uint32] */;
  %1381 = dyn.reshape(%1378, %1379, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1382 = bitwise_or(%1380, %1381) /* ty=Tensor[(?, 8, 13), uint32] */;
  %1383 = cast(%1382, dtype="bool") /* ty=Tensor[(?, 8, 13), bool] */;
  %1384 = reshape(%1376, newshape=[16, 1, 8]) /* ty=Tensor[(16, 1, 8), float32] */;
  %1385 = reshape(%1377, newshape=[3, 45]) /* ty=Tensor[(3, 45), float64] */;
  %1386 = reshape(%1383, newshape=[104]) /* ty=Tensor[(104), bool] */;
  %1387 = @func_1683(%1384, %1385, %1386) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(16, ?, 8), uint16], Tensor[(?, 8, 13), bool], Tensor[(104), bool], Tensor[(3, 45), float32]) */;
  %1388 = @func_2384() /* ty=(Tensor[(10, 4, 6), int32], Tensor[(?, 8, 13), bool], Tensor[(1, 104), bool]) */;
  %1389 = %1388.2;
  %1390 = cast(%1389, dtype="bool") /* ty=Tensor[(1, 104), bool] */;
  %1391 = shape_of(%1359, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1392 = cast(%1359, dtype="bool") /* ty=Tensor[(?, 8, 13), bool] */;
  %1393 = dyn.reshape(%1390, %1391, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1394 = greater_equal(%1392, %1393) /* ty=Tensor[(?, 8, 13), bool] */;
  %1395 = cast(%1382, dtype="float32") /* ty=Tensor[(?, 8, 13), float32] */;
  %1396 = shape_of(%1394, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1397 = cast(%1394, dtype="float32") /* ty=Tensor[(?, 8, 13), float32] */;
  %1398 = dyn.reshape(%1395, %1396, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1399 = cast(%1359, dtype="float32") /* ty=Tensor[(?, 8, 13), float32] */;
  %1400 = cast(%1369, dtype="float64") /* ty=Tensor[(210), float64] */;
  %1401 = reshape(%1400, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %1402 = @func_2759(%1401) /* ty=(Tensor[(?, 8, 13), bool], Tensor[(52, 2), bool], Tensor[(1620), float32], Tensor[(128), float32], Tensor[(210), float64]) */;
  %1403 = %1365.0;
  %1404 = @func_2985(%1371) /* ty=Tensor[(2, 7, 15), uint32] */;
  %1405 = not_equal(%1374, %1375) /* ty=Tensor[(128), bool] */;
  %1406 = %1387.0;
  %1407 = multiply(%1397, %1398) /* ty=Tensor[(?, 8, 13), float32] */;
  %1408 = log2(%1399) /* ty=Tensor[(?, 8, 13), float32] */;
  %1409 = %1402.2;
  (%1353, %var_3041, %1403, %1369, %var_3077, %1404, %1405, %1406, %1407, %1408, %1409)
}

def @func_9660() -> (Tensor[(3, 9, 5), uint16],) {
  %1410 = @func_5807() /* ty=Tensor[(3, 9, 5), uint16] */;
  (%1410,)
}

def @func_16292() -> Tensor[(3, 9, 5), uint16] {
  %1411 = @func_3672() /* ty=(Tensor[(3, 9, 5), uint16],) */;
  %1411.0
}

def @func_6994() -> Tensor[(?, 8, 13), bool] {
  %1412 = @func_6729() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) */;
  %1413 = %1412.0;
  %1414 = @func_4349() /* ty=Tensor[(?, 8, 13), float32] */;
  %1415 = cast(%1414, dtype="bool") /* ty=Tensor[(?, 8, 13), bool] */;
  %1416 = shape_of(%1413, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1417 = cast(%1413, dtype="bool") /* ty=Tensor[(?, 8, 13), bool] */;
  %1418 = dyn.reshape(%1415, %1416, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%1417, %1418) /* ty=Tensor[(?, 8, 13), bool] */
}

def @func_18476() -> Tensor[(3, 9, 5), float64] {
  %1419 = @func_14109() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %1419.0
}

def @func_19249() -> Tensor[(3, 9, 5), float64] {
  @func_4867() /* ty=Tensor[(3, 9, 5), float64] */
}

def @func_17005() -> (Tensor[(3, 9, 5), float64],) {
  %1420 = @func_13998() /* ty=Tensor[(3, 9, 5), float64] */;
  (%1420,)
}

def @func_9760() -> (Tensor[(3, 9, 5), float64],) {
  %1421 = @func_3141() /* ty=Tensor[(3, 9, 5), float64] */;
  (%1421,)
}

def @func_9366(%var_9361: Tensor[(540, 3), float32]) -> (Tensor[(?, 8, 13), float32], Tensor[(128), float32], Tensor[(540, 3), float32], Tensor[(128, 1), float32]) {
  %1422 = cast(%var_9361, dtype="float32") /* ty=Tensor[(540, 3), float32] */;
  %1423 = cast(meta[relay.Constant][64] /* ty=Tensor[(128, 1), float32] */, dtype="float32") /* ty=Tensor[(128, 1), float32] */;
  %1424 = reshape(%1422, newshape=[1620]) /* ty=Tensor[(1620), float32] */;
  %1425 = reshape(%1423, newshape=[128]) /* ty=Tensor[(128), float32] */;
  %1426 = @func_8747(%1424, %1425) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 45), float32], Tensor[(1620), float32], Tensor[(128), float32], Tensor[(52, 2), bool], Tensor[(210), float64]) */;
  %1427 = @func_8986() /* ty=Tensor[(?, 8, 13), float32] */;
  %1428 = %1426.3;
  (%1427, %1428, %var_9361, meta[relay.Constant][64] /* ty=Tensor[(128, 1), float32] */)
}

def @func_11577() -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) {
  %1429 = @func_7448() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %1430 = %1429.0;
  %1431 = @func_3141() /* ty=Tensor[(3, 9, 5), float64] */;
  (%1430, %1431)
}

def @func_576(%var_568: Tensor[(3, 9, 5), float64]) -> (Tensor[(3, 9, 5), float64],) {
  %1432 = cast(%var_568, dtype="float64") /* ty=Tensor[(3, 9, 5), float64] */;
  %1433 = exp(%1432) /* ty=Tensor[(3, 9, 5), float64] */;
  (%1433,)
}

def @func_5719() -> (Tensor[(?, 8, 13), bool],) {
  %1434 = @func_3605() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), bool]) */;
  %1435 = %1434.1;
  (%1435,)
}

def @func_10081(%var_10043: Tensor[(5, 4, 3), float64]) -> (Tensor[(3, 9, 5), float64], Tensor[(5, 4, 3), float32], Tensor[(?, 8, 13), float32], Tensor[(5, 4, 3), float32], Tensor[(?, 8, 13), float32]) {
  %1436 = @func_3538() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) */;
  %1437 = cast(%var_10043, dtype="float64") /* ty=Tensor[(5, 4, 3), float64] */;
  %1438 = sinh(%1437) /* ty=Tensor[(5, 4, 3), float64] */;
  %1439 = cast(%1438, dtype="float32") /* ty=Tensor[(5, 4, 3), float32] */;
  %1440 = cast(%1438, dtype="float32") /* ty=Tensor[(5, 4, 3), float32] */;
  %1441 = @func_4832() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) */;
  %1442 = %1436.0;
  %1443 = asin(%1439) /* ty=Tensor[(5, 4, 3), float32] */;
  %1444 = @func_7757() /* ty=Tensor[(?, 8, 13), float32] */;
  %1445 = acosh(%1440) /* ty=Tensor[(5, 4, 3), float32] */;
  %1446 = %1441.1;
  (%1442, %1443, %1444, %1445, %1446)
}

def @func_7229() -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), int16], Tensor[(7, 8, 13), int16], Tensor[(3, 9, 5), float32], Tensor[(3, 9, 5), float64]) {
  %1447 = @func_4184() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %1448 = %1447.0;
  %1449 = cast(meta[relay.Constant][65] /* ty=Tensor[(3, 9, 5), float64] */, dtype="int16") /* ty=Tensor[(3, 9, 5), int16] */;
  %1450 = shape_of(%1448, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1451 = cast(%1448, dtype="int16") /* ty=Tensor[(3, 9, 5), int16] */;
  %1452 = dyn.reshape(%1449, %1450, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1453 = @func_4095() /* ty=(Tensor[(7, 8, 13), int16],) */;
  %1454 = cast(%1448, dtype="float32") /* ty=Tensor[(3, 9, 5), float32] */;
  %1455 = @func_6607() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %1456 = @func_6814() /* ty=Tensor[(3, 9, 5), float64] */;
  %1457 = add(%1451, %1452) /* ty=Tensor[(3, 9, 5), int16] */;
  %1458 = %1453.0;
  %1459 = cosh(%1454) /* ty=Tensor[(3, 9, 5), float32] */;
  %1460 = %1455.0;
  (%1456, %1457, %1458, %1459, %1460)
}

def @func_20583() -> (Tensor[(?, 8, 13), float32],) {
  %1461 = @func_12090() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) */;
  %1462 = %1461.1;
  (%1462,)
}

def @func_7948() -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) {
  %1463 = @func_4047() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %1464 = @func_5323() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %1465 = %1463.0;
  %1466 = %1464.0;
  (%1465, %1466)
}

def @func_4388(%var_4377: Tensor[(728), int16]) -> (Tensor[(?, 8, 13), float32], Tensor[(7, 8, 13), bool], Tensor[(728), int16]) {
  %1467 = cast(%var_4377, dtype="int16") /* ty=Tensor[(728), int16] */;
  %1468 = reshape(%1467, newshape=[7, 8, 13]) /* ty=Tensor[(7, 8, 13), int16] */;
  %1469 = @func_4292(%1468) /* ty=(Tensor[(7, 8, 13), bool],) */;
  %1470 = @func_4349() /* ty=Tensor[(?, 8, 13), float32] */;
  %1471 = %1469.0;
  (%1470, %1471, %var_4377)
}

def @func_8443() -> (Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) {
  %1472 = @func_4075() /* ty=(Tensor[(3, 9, 5), uint16], Tensor[(?, 8, 13), float32]) */;
  %1473 = %1472.1;
  %1474 = @func_4705() /* ty=Tensor[(3, 9, 5), float64] */;
  (%1473, %1474)
}

def @func_17531() -> (Tensor[(3, 9, 5), float64],) {
  %1475 = @func_7948() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) */;
  %1476 = %1475.1;
  (%1476,)
}

def @func_16494() -> Tensor[(3, 9, 5), float64] {
  %1477 = @func_7448() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %1477.0
}

def @func_13732(%var_13721: Tensor[(252), float32]) -> (Tensor[(?, 8, 13), bool], Tensor[(13, 16, ?), int16], Tensor[(208), int16], Tensor[(2288), int16], Tensor[(210), float64], Tensor[(252), float32], Tensor[(128), float32]) {
  %1478 = @func_5719() /* ty=(Tensor[(?, 8, 13), bool],) */;
  %1479 = cast(meta[relay.Constant][66] /* ty=Tensor[(208), int16] */, dtype="int16") /* ty=Tensor[(208), int16] */;
  %1480 = cast(meta[relay.Constant][66] /* ty=Tensor[(208), int16] */, dtype="int16") /* ty=Tensor[(208), int16] */;
  %1481 = cast(meta[relay.Constant][67] /* ty=Tensor[(2288), int16] */, dtype="int16") /* ty=Tensor[(2288), int16] */;
  %1482 = reshape(%1479, newshape=[13, 16, 1]) /* ty=Tensor[(13, 16, 1), int16] */;
  %1483 = reshape(%1480, newshape=[13, 16, 1]) /* ty=Tensor[(13, 16, 1), int16] */;
  %1484 = reshape(%1481, newshape=[13, 16, 11]) /* ty=Tensor[(13, 16, 11), int16] */;
  %1485 = @func_447(%1482, %1483, %1484) /* ty=(Tensor[(13, 16, ?), int16], Tensor[(13, 16, 11), uint16]) */;
  %1486 = cast(%var_13721, dtype="float32") /* ty=Tensor[(252), float32] */;
  %1487 = reshape(%1486, newshape=[7, 9, 4]) /* ty=Tensor[(7, 9, 4), float32] */;
  %1488 = @func_13619(%1487) /* ty=(Tensor[(7, 9, 4), float32], Tensor[(2, 7, 15), uint8], Tensor[(210), float64], Tensor[(?, 8, 13), float32], Tensor[(7, 9, 4), float32]) */;
  %1489 = %1488.2;
  %1490 = cast(%1489, dtype="float64") /* ty=Tensor[(210), float64] */;
  %1491 = reshape(%1490, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %1492 = @func_2759(%1491) /* ty=(Tensor[(?, 8, 13), bool], Tensor[(52, 2), bool], Tensor[(1620), float32], Tensor[(128), float32], Tensor[(210), float64]) */;
  %1493 = %1478.0;
  %1494 = %1485.0;
  %1495 = %1492.3;
  (%1493, %1494, meta[relay.Constant][66] /* ty=Tensor[(208), int16] */, meta[relay.Constant][67] /* ty=Tensor[(2288), int16] */, %1489, %var_13721, %1495)
}

def @func_4746() -> (Tensor[(?, 8, 13), float32],) {
  %1496 = @func_2581() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64], Tensor[(105, 2), float64], Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64]) */;
  %1497 = %1496.3;
  (%1497,)
}

def @func_20612() -> Tensor[(?, 8, 13), float32] {
  %1498 = @func_19324() /* ty=(Tensor[(?, 8, 13), float32],) */;
  %1498.0
}

def @func_11203() -> (Tensor[(?, 8, 13), float64], Tensor[(?, 8, 13), float64], Tensor[(3, 9, 5), uint16]) {
  %1499 = @func_8954() /* ty=(Tensor[(?, 8, 13), bool],) */;
  %1500 = %1499.0;
  %1501 = @func_2447() /* ty=(Tensor[(?, 8, 13), float32],) */;
  %1502 = %1501.0;
  %1503 = cast(%1502, dtype="float64") /* ty=Tensor[(?, 8, 13), float64] */;
  %1504 = shape_of(%1500, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1505 = cast(%1500, dtype="float64") /* ty=Tensor[(?, 8, 13), float64] */;
  %1506 = dyn.reshape(%1503, %1504, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1507 = cast(%1502, dtype="float64") /* ty=Tensor[(?, 8, 13), float64] */;
  %1508 = @func_3672() /* ty=(Tensor[(3, 9, 5), uint16],) */;
  %1509 = floor_divide(%1505, %1506) /* ty=Tensor[(?, 8, 13), float64] */;
  %1510 = cosh(%1507) /* ty=Tensor[(?, 8, 13), float64] */;
  %1511 = %1508.0;
  (%1509, %1510, %1511)
}

def @func_14207() -> (Tensor[(3, 9, 5), float64],) {
  %1512 = @func_7341() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %1513 = %1512.0;
  (%1513,)
}

def @func_11974() -> (Tensor[(3, 9, 5), float64],) {
  %1514 = @func_6411() /* ty=Tensor[(3, 9, 5), float64] */;
  (%1514,)
}

def @func_18943() -> Tensor[(3, 9, 5), uint16] {
  %1515 = @func_4075() /* ty=(Tensor[(3, 9, 5), uint16], Tensor[(?, 8, 13), float32]) */;
  %1515.0
}

def @func_16167() -> (Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(540, 3), float64], Tensor[(?, 8, 13), float32]) {
  %1516 = @func_4184() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %1517 = cast(meta[relay.Constant][68] /* ty=Tensor[(270, 6), float32] */, dtype="float32") /* ty=Tensor[(270, 6), float32] */;
  %1518 = reshape(%1517, newshape=[540, 3]) /* ty=Tensor[(540, 3), float32] */;
  %1519 = @func_12263(%1518) /* ty=(Tensor[(?, 8, 13), float32], Tensor[(1620), float32], Tensor[(35, 6), float64], Tensor[(540, 3), float32]) */;
  %1520 = %1519.3;
  %1521 = cast(meta[relay.Constant][68] /* ty=Tensor[(270, 6), float32] */, dtype="float64") /* ty=Tensor[(270, 6), float64] */;
  %1522 = shape_of(%1520, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1523 = cast(%1520, dtype="float64") /* ty=Tensor[(540, 3), float64] */;
  %1524 = dyn.reshape(%1521, %1522, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %1525 = @func_12772() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) */;
  %1526 = @func_14340() /* ty=Tensor[(?, 8, 13), float32] */;
  %1527 = %1516.0;
  %1528 = @func_13998() /* ty=Tensor[(3, 9, 5), float64] */;
  %1529 = power(%1523, %1524) /* ty=Tensor[(540, 3), float64] */;
  %1530 = %1525.1;
  (%1526, %1527, %1528, %1529, %1530)
}

def @func_19517(%var_19500: Tensor[(8, 13, 8), float32]) -> (Tensor[(8, 13, 8), float32], Tensor[(3, 9, 5), float64]) {
  %1531 = cast(%var_19500, dtype="float32") /* ty=Tensor[(8, 13, 8), float32] */;
  %1532 = sqrt(%1531) /* ty=Tensor[(8, 13, 8), float32] */;
  %1533 = @func_8893() /* ty=Tensor[(3, 9, 5), float64] */;
  (%1532, %1533)
}

def @func_12787() -> Tensor[(?, 8, 13), float32] {
  @func_3345() /* ty=Tensor[(?, 8, 13), float32] */
}

def @func_20901(%var_20889: Tensor[(420), float64]) -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(2, 210), bool], Tensor[(420), float64], Tensor[(?, 8, 13), float32]) {
  %1534 = @func_3538() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) */;
  %1535 = @func_15095() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(15, 210), bool], Tensor[(3, 9, 5), float64]) */;
  %1536 = @func_17555() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %1537 = @func_4047() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %1538 = cast(%var_20889, dtype="float64") /* ty=Tensor[(420), float64] */;
  %1539 = reshape(%1538, newshape=[2, 210]) /* ty=Tensor[(2, 210), float64] */;
  %1540 = @func_19233(%1539) /* ty=(Tensor[(?, 8, 13), float32], Tensor[(52, 2), bool], Tensor[(2, 210), bool]) */;
  %1541 = %1534.1;
  %1542 = %1535.2;
  %1543 = %1536.0;
  %1544 = %1537.0;
  %1545 = %1540.2;
  %1546 = @func_9530() /* ty=Tensor[(?, 8, 13), float32] */;
  (%1541, %1542, %1543, %1544, %1545, %var_20889, %1546)
}

def @func_5740() -> (Tensor[(?, 8, 13), float32],) {
  %1547 = @func_4349() /* ty=Tensor[(?, 8, 13), float32] */;
  (%1547,)
}

def @func_7441() -> (Tensor[(3, 9, 5), uint16], Tensor[(?, 8, 13), float32]) {
  %1548 = @func_5424() /* ty=(Tensor[(3, 9, 5), uint16],) */;
  %1549 = @func_5084() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) */;
  %1550 = %1548.0;
  %1551 = %1549.0;
  (%1550, %1551)
}

def @func_9711() -> (Tensor[(3, 9, 5), float64], Tensor[(2, 7, 15), float64]) {
  %1552 = @func_8665() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %1553 = %1552.0;
  %1554 = @func_9276() /* ty=Tensor[(2, 7, 15), float64] */;
  (%1553, %1554)
}

def @func_5520(%var_5517: Tensor[(210, 1), float64]) -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64], Tensor[(210, 1), float64]) {
  %1555 = @func_3672() /* ty=(Tensor[(3, 9, 5), uint16],) */;
  %1556 = %1555.0;
  %1557 = cast(%1556, dtype="float64") /* ty=Tensor[(3, 9, 5), float64] */;
  %1558 = cast(%var_5517, dtype="float64") /* ty=Tensor[(210, 1), float64] */;
  %1559 = reshape(%1558, newshape=[2, 7, 15]) /* ty=Tensor[(2, 7, 15), float64] */;
  %1560 = @func_869(%1559) /* ty=(Tensor[(2, 7, 15), float64],) */;
  %1561 = atan(%1557) /* ty=Tensor[(3, 9, 5), float64] */;
  %1562 = @func_4359() /* ty=Tensor[(?, 8, 13), float32] */;
  %1563 = %1560.0;
  (%1561, %1562, %1563, %var_5517)
}

def @func_19298() -> Tensor[(3, 9, 5), uint16] {
  %1564 = @func_17707() /* ty=(Tensor[(3, 9, 5), uint16],) */;
  %1564.0
}

def @func_3538() -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) {
  %1565 = @func_3180() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %1566 = @func_3141() /* ty=Tensor[(3, 9, 5), float64] */;
  %1567 = cast(%1566, dtype="float64") /* ty=Tensor[(3, 9, 5), float64] */;
  %1568 = %1565.0;
  %1569 = sigmoid(%1567) /* ty=Tensor[(3, 9, 5), float64] */;
  (%1568, %1569)
}

def @func_19627() -> (Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) {
  %1570 = @func_4953() /* ty=Tensor[(?, 8, 13), float32] */;
  %1571 = @func_14298() /* ty=Tensor[(3, 9, 5), float64] */;
  (%1570, %1571)
}

def @func_7133() -> Tensor[(3, 9, 5), float64] {
  %1572 = @func_4609() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %1572.0
}

def @func_4153() -> Tensor[(?, 8, 13), float32] {
  %1573 = @func_2447() /* ty=(Tensor[(?, 8, 13), float32],) */;
  %1573.0
}

def @func_13945() -> Tensor[(3, 9, 5), float64] {
  @func_8893() /* ty=Tensor[(3, 9, 5), float64] */
}

def @func_8609(%var_8604: Tensor[(210), float64]) -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(210), float64]) {
  %1574 = cast(%var_8604, dtype="float64") /* ty=Tensor[(210), float64] */;
  %1575 = reshape(%1574, newshape=[210, 1]) /* ty=Tensor[(210, 1), float64] */;
  %1576 = @func_5520(%1575) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64], Tensor[(210, 1), float64]) */;
  %1577 = @func_3141() /* ty=Tensor[(3, 9, 5), float64] */;
  %1578 = %1576.1;
  (%1577, %1578, %var_8604)
}

def @func_15791() -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) {
  %1579 = @func_9613() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) */;
  %1580 = @func_9897() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %1581 = %1579.0;
  %1582 = %1580.0;
  (%1581, %1582)
}

def @func_3760(%var_3740: Tensor[(2, 7, 15), float64]) -> Tensor[(2, 7, 15), uint8] {
  %1583 = @func_2581() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64], Tensor[(105, 2), float64], Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64]) */;
  %1584 = %1583.1;
  %1585 = cast(%var_3740, dtype="uint8") /* ty=Tensor[(2, 7, 15), uint8] */;
  %1586 = shape_of(%1584, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1587 = cast(%1584, dtype="uint8") /* ty=Tensor[(2, 7, 15), uint8] */;
  %1588 = dyn.reshape(%1585, %1586, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  bitwise_xor(%1587, %1588) /* ty=Tensor[(2, 7, 15), uint8] */
}

def @func_5807() -> Tensor[(3, 9, 5), uint16] {
  %1589 = @func_5424() /* ty=(Tensor[(3, 9, 5), uint16],) */;
  %1589.0
}

def @func_17991() -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) {
  %1590 = @func_15095() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(15, 210), bool], Tensor[(3, 9, 5), float64]) */;
  %1591 = @func_4937() /* ty=Tensor[(3, 9, 5), float64] */;
  %1592 = %1590.0;
  %1593 = @func_7133() /* ty=Tensor[(3, 9, 5), float64] */;
  (%1591, %1592, %1593)
}

def @func_17867() -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), bool], Tensor[(3, 9, 5), float64]) {
  %1594 = @func_4047() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %1595 = %1594.0;
  %1596 = @func_13201() /* ty=Tensor[(?, 8, 13), bool] */;
  %1597 = @func_7133() /* ty=Tensor[(3, 9, 5), float64] */;
  (%1595, %1596, %1597)
}

def @func_16108(%var_16093: Tensor[(210), float64]) -> (Tensor[(?, 8, 13), float32], Tensor[(128), float32], Tensor[(210), float64]) {
  %1598 = @func_8030() /* ty=(Tensor[(4, 8, 13), int16], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) */;
  %1599 = cast(%var_16093, dtype="float64") /* ty=Tensor[(210), float64] */;
  %1600 = reshape(%1599, newshape=[210, 1]) /* ty=Tensor[(210, 1), float64] */;
  %1601 = @func_5302(%1600) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), uint16], Tensor[(210), float64], Tensor[(210, 1), float64], Tensor[(128), float32]) */;
  %1602 = %1598.1;
  %1603 = %1601.4;
  (%1602, %1603, %var_16093)
}

def @func_18428() -> (Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), uint16], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) {
  %1604 = @func_10184() /* ty=(Tensor[(?, 8, 13), float32],) */;
  %1605 = @func_16945() /* ty=(Tensor[(3, 9, 5), uint16],) */;
  %1606 = @func_6499() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %1607 = %1604.0;
  %1608 = @func_17589() /* ty=Tensor[(?, 8, 13), float32] */;
  %1609 = %1605.0;
  %1610 = %1606.0;
  %1611 = @func_4705() /* ty=Tensor[(3, 9, 5), float64] */;
  (%1607, %1608, %1609, %1610, %1611)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_9368(%var_9367: Tensor[(540, 3), float32]) -> (Tensor[(?, 8, 13), float32], Tensor[(128), float32], Tensor[(540, 3), float32], Tensor[(128, 1), float32]) {
  %7 = fn (%var_9361: Tensor[(540, 3), float32]) -> (Tensor[(?, 8, 13), float32], Tensor[(128), float32], Tensor[(540, 3), float32], Tensor[(128, 1), float32]) {
    %0 = cast(%var_9361, dtype="float32") /* ty=Tensor[(540, 3), float32] */;
    %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(128, 1), float32] */, dtype="float32") /* ty=Tensor[(128, 1), float32] */;
    %2 = reshape(%0, newshape=[1620]) /* ty=Tensor[(1620), float32] */;
    %3 = reshape(%1, newshape=[128]) /* ty=Tensor[(128), float32] */;
    %4 = @func_8747(%2, %3) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 45), float32], Tensor[(1620), float32], Tensor[(128), float32], Tensor[(52, 2), bool], Tensor[(210), float64]) */;
    %5 = @func_8986() /* ty=Tensor[(?, 8, 13), float32] */;
    %6 = %4.3;
    (%5, %6, %var_9361, meta[relay.Constant][0] /* ty=Tensor[(128, 1), float32] */)
  };
  %7(%var_9367) /* ty=(Tensor[(?, 8, 13), float32], Tensor[(128), float32], Tensor[(540, 3), float32], Tensor[(128, 1), float32]) */
}

def @func_11421() -> (Tensor[(135), float64], Tensor[(3, 9, 5), float64]) {
  %11 = fn () -> (Tensor[(135), float64], Tensor[(3, 9, 5), float64]) {
    %8 = @func_2504() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(135), float64]) */;
    %9 = %8.2;
    %10 = @func_10194() /* ty=Tensor[(3, 9, 5), float64] */;
    (%9, %10)
  };
  %11() /* ty=(Tensor[(135), float64], Tensor[(3, 9, 5), float64]) */
}

def @func_11712() -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(2, 7, 15), uint8], Tensor[(210), float64], Tensor[(128), float32], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) {
  %27 = fn () -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(2, 7, 15), uint8], Tensor[(210), float64], Tensor[(128), float32], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) {
    %12 = @func_7341() /* ty=(Tensor[(3, 9, 5), float64],) */;
    %13 = cast(meta[relay.Constant][1] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
    %14 = reshape(%13, newshape=[2, 7, 15]) /* ty=Tensor[(2, 7, 15), float64] */;
    %15 = @func_3760(%14) /* ty=Tensor[(2, 7, 15), uint8] */;
    %16 = cast(%15, dtype="float64") /* ty=Tensor[(2, 7, 15), float64] */;
    %17 = reshape(%16, newshape=[210]) /* ty=Tensor[(210), float64] */;
    %18 = @func_2759(%17) /* ty=(Tensor[(?, 8, 13), bool], Tensor[(52, 2), bool], Tensor[(1620), float32], Tensor[(128), float32], Tensor[(210), float64]) */;
    %19 = @func_9877() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) */;
    %20 = @func_7391() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) */;
    %21 = @func_4937() /* ty=Tensor[(3, 9, 5), float64] */;
    %22 = %12.0;
    %23 = %18.3;
    %24 = @func_6411() /* ty=Tensor[(3, 9, 5), float64] */;
    %25 = %19.0;
    %26 = %20.2;
    (%21, %22, %15, meta[relay.Constant][1] /* ty=Tensor[(210), float64] */, %23, %24, %25, %26)
  };
  %27() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(2, 7, 15), uint8], Tensor[(210), float64], Tensor[(128), float32], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) */
}

def @func_18869() -> (Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), uint16]) {
  @func_18867() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), uint16]) */
}

def @func_13955() -> Tensor[(3, 9, 5), float64] {
  %29 = fn () -> Tensor[(3, 9, 5), float64] {
    %28 = @func_4047() /* ty=(Tensor[(3, 9, 5), float64],) */;
    %28.0
  };
  %29() /* ty=Tensor[(3, 9, 5), float64] */
}

def @func_4955() -> Tensor[(?, 8, 13), float32] {
  @func_4953() /* ty=Tensor[(?, 8, 13), float32] */
}

def @func_11779() -> (Tensor[(15, 2, 10), float64],) {
  %32 = fn () -> (Tensor[(15, 2, 10), float64],) {
    %30 = cast(meta[relay.Constant][2] /* ty=Tensor[(15, 2, 10), float64] */, dtype="float64") /* ty=Tensor[(15, 2, 10), float64] */;
    %31 = sigmoid(%30) /* ty=Tensor[(15, 2, 10), float64] */;
    (%31,)
  };
  %32() /* ty=(Tensor[(15, 2, 10), float64],) */
}

def @func_11225() -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) {
  @func_11223() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) */
}

def @func_14902() -> (Tensor[(?, 8, 13), float32],) {
  %34 = fn () -> (Tensor[(?, 8, 13), float32],) {
    %33 = @func_7757() /* ty=Tensor[(?, 8, 13), float32] */;
    (%33,)
  };
  %34() /* ty=(Tensor[(?, 8, 13), float32],) */
}

def @func_16378(%var_16347: float64, %var_16348: Tensor[(9, 16, 10), float64], %var_16352: Tensor[(9, 16, 10), float64]) -> (Tensor[(9, 16, 10), float64], Tensor[(9, 16, 10), bool], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), uint16]) {
  %35 = cast(%var_16347, dtype="float64") /* ty=float64 */;
  %36 = cast(%var_16348, dtype="float64") /* ty=Tensor[(9, 16, 10), float64] */;
  %37 = cast(%var_16352, dtype="bool") /* ty=Tensor[(9, 16, 10), bool] */;
  %38 = shape_of(%var_16348, dtype="int32") /* ty=Tensor[(3), int32] */;
  %39 = cast(%var_16348, dtype="bool") /* ty=Tensor[(9, 16, 10), bool] */;
  %40 = dyn.reshape(%37, %38, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %41 = @func_5214() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), bool]) */;
  %42 = @func_10982() /* ty=(Tensor[(3, 9, 5), uint16],) */;
  %43 = floor_mod(%35, %36) /* ty=Tensor[(9, 16, 10), float64] */;
  %44 = logical_or(%39, %40) /* ty=Tensor[(9, 16, 10), bool] */;
  %45 = %41.0;
  %46 = %42.0;
  (%43, %44, %45, %46)
}

def @func_18777() -> (Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), uint8], Tensor[(252), float32]) {
  %54 = fn () -> (Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), uint8], Tensor[(252), float32]) {
    %47 = @func_12772() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) */;
    %48 = cast(meta[relay.Constant][3] /* ty=Tensor[(252), float32] */, dtype="float32") /* ty=Tensor[(252), float32] */;
    %49 = reshape(%48, newshape=[7, 9, 4]) /* ty=Tensor[(7, 9, 4), float32] */;
    %50 = @func_13619(%49) /* ty=(Tensor[(7, 9, 4), float32], Tensor[(2, 7, 15), uint8], Tensor[(210), float64], Tensor[(?, 8, 13), float32], Tensor[(7, 9, 4), float32]) */;
    %51 = %47.0;
    %52 = @func_15999() /* ty=Tensor[(?, 8, 13), float32] */;
    %53 = %50.1;
    (%51, %52, %53, meta[relay.Constant][3] /* ty=Tensor[(252), float32] */)
  };
  %54() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), uint8], Tensor[(252), float32]) */
}

def @func_14281() -> (Tensor[(3, 9, 5), float64],) {
  %57 = fn () -> (Tensor[(3, 9, 5), float64],) {
    %55 = @func_12508() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(128), float32]) */;
    %56 = %55.1;
    (%56,)
  };
  %57() /* ty=(Tensor[(3, 9, 5), float64],) */
}

def @func_17262() -> Tensor[(7, 8, 13), int16] {
  %59 = fn () -> Tensor[(7, 8, 13), int16] {
    %58 = @func_2839() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(7, 8, 13), int16]) */;
    %58.1
  };
  %59() /* ty=Tensor[(7, 8, 13), int16] */
}

def @func_8956() -> (Tensor[(?, 8, 13), bool],) {
  @func_8954() /* ty=(Tensor[(?, 8, 13), bool],) */
}

def @func_14408() -> Tensor[(?, 8, 13), float32] {
  %60 = fn () -> Tensor[(?, 8, 13), float32] {
    @func_4126() /* ty=Tensor[(?, 8, 13), float32] */
  };
  %60() /* ty=Tensor[(?, 8, 13), float32] */
}

def @func_20710() -> (Tensor[(?, 8, 13), float32],) {
  @func_20708() /* ty=(Tensor[(?, 8, 13), float32],) */
}

def @func_1687(%var_1684: Tensor[(16, 1, 8), float32], %var_1685: Tensor[(3, 45), float64], %var_1686: Tensor[(104), bool]) -> (Tensor[(3, 9, 5), float64], Tensor[(16, ?, 8), uint16], Tensor[(?, 8, 13), bool], Tensor[(104), bool], Tensor[(3, 45), float32]) {
  %85 = fn (%var_1645: Tensor[(16, 1, 8), float32], %var_1657: Tensor[(3, 45), float64], %var_1669: Tensor[(104), bool]) -> (Tensor[(3, 9, 5), float64], Tensor[(16, ?, 8), uint16], Tensor[(?, 8, 13), bool], Tensor[(104), bool], Tensor[(3, 45), float32]) {
    %61 = cast(%var_1657, dtype="float64") /* ty=Tensor[(3, 45), float64] */;
    %62 = reshape(%61, newshape=[3, 9, 5]) /* ty=Tensor[(3, 9, 5), float64] */;
    %63 = @func_576(%62) /* ty=(Tensor[(3, 9, 5), float64],) */;
    %64 = cast(%var_1645, dtype="float32") /* ty=Tensor[(16, 1, 8), float32] */;
    %65 = cos(%64) /* ty=Tensor[(16, 1, 8), float32] */;
    %66 = cast(%65, dtype="bool") /* ty=Tensor[(16, 1, 8), bool] */;
    %67 = shape_of(%var_1645, dtype="int32") /* ty=Tensor[(3), int32] */;
    %68 = cast(%var_1645, dtype="bool") /* ty=Tensor[(16, 1, 8), bool] */;
    %69 = dyn.reshape(%66, %67, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %70 = not_equal(%68, %69) /* ty=Tensor[(16, ?, 8), bool] */;
    %71 = cast(%65, dtype="uint16") /* ty=Tensor[(16, 1, 8), uint16] */;
    %72 = shape_of(%70, dtype="int32") /* ty=Tensor[(3), int32] */;
    %73 = cast(%70, dtype="uint16") /* ty=Tensor[(16, ?, 8), uint16] */;
    %74 = dyn.reshape(%71, %72, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %75 = cast(%var_1669, dtype="bool") /* ty=Tensor[(104), bool] */;
    %76 = cast(%var_1669, dtype="bool") /* ty=Tensor[(104), bool] */;
    %77 = reshape(%75, newshape=[1, 8, 13]) /* ty=Tensor[(1, 8, 13), bool] */;
    %78 = reshape(%76, newshape=[1, 8, 13]) /* ty=Tensor[(1, 8, 13), bool] */;
    %79 = @func_1635(%77, %78) /* ty=(Tensor[(?, 8, 13), bool],) */;
    %80 = cast(%var_1657, dtype="float32") /* ty=Tensor[(3, 45), float32] */;
    %81 = %63.0;
    %82 = right_shift(%73, %74) /* ty=Tensor[(16, ?, 8), uint16] */;
    %83 = %79.0;
    %84 = asin(%80) /* ty=Tensor[(3, 45), float32] */;
    (%81, %82, %83, %var_1669, %84)
  };
  %85(%var_1684, %var_1685, %var_1686) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(16, ?, 8), uint16], Tensor[(?, 8, 13), bool], Tensor[(104), bool], Tensor[(3, 45), float32]) */
}

def @func_6031(%var_6029: Tensor[(210), float64]) -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(210), float64]) {
  @func_6028(%var_6029) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(210), float64]) */
}

def @func_2840() -> (Tensor[(3, 9, 5), float64], Tensor[(7, 8, 13), int16]) {
  %92 = fn () -> (Tensor[(3, 9, 5), float64], Tensor[(7, 8, 13), int16]) {
    %86 = @func_2447() /* ty=(Tensor[(?, 8, 13), float32],) */;
    %87 = %86.0;
    %88 = cast(%87, dtype="int16") /* ty=Tensor[(?, 8, 13), int16] */;
    %89 = cast(meta[relay.Constant][4] /* ty=Tensor[(7, 8, 13), float32] */, dtype="int16") /* ty=Tensor[(7, 8, 13), int16] */;
    %90 = @func_2600() /* ty=Tensor[(3, 9, 5), float64] */;
    %91 = right_shift(%88, %89) /* ty=Tensor[(7, 8, 13), int16] */;
    (%90, %91)
  };
  %92() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(7, 8, 13), int16]) */
}

def @func_16947() -> (Tensor[(3, 9, 5), uint16],) {
  @func_16945() /* ty=(Tensor[(3, 9, 5), uint16],) */
}

def @func_19906(%var_19904: Tensor[(210), float64]) -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(7, 8, 13), int16], Tensor[(3, 9, 5), float64], Tensor[(210), float64], Tensor[(210), float64]) {
  @func_19903(%var_19904) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(7, 8, 13), int16], Tensor[(3, 9, 5), float64], Tensor[(210), float64], Tensor[(210), float64]) */
}

def @func_19300() -> Tensor[(3, 9, 5), uint16] {
  @func_19298() /* ty=Tensor[(3, 9, 5), uint16] */
}

def @func_16782() -> Tensor[(?, 8, 13), float32] {
  %94 = fn () -> Tensor[(?, 8, 13), float32] {
    %93 = @func_2581() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64], Tensor[(105, 2), float64], Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64]) */;
    %93.3
  };
  %94() /* ty=Tensor[(?, 8, 13), float32] */
}

def @func_7134() -> Tensor[(3, 9, 5), float64] {
  %96 = fn () -> Tensor[(3, 9, 5), float64] {
    %95 = @func_4609() /* ty=(Tensor[(3, 9, 5), float64],) */;
    %95.0
  };
  %96() /* ty=Tensor[(3, 9, 5), float64] */
}

def @func_10468() -> (Tensor[(?, 8, 13), float32],) {
  @func_10466() /* ty=(Tensor[(?, 8, 13), float32],) */
}

def @func_4292(%var_4286: Tensor[(7, 8, 13), int16]) -> (Tensor[(7, 8, 13), bool],) {
  %97 = @func_3386() /* ty=Tensor[(7, 8, 13), int16] */;
  %98 = cast(%var_4286, dtype="bool") /* ty=Tensor[(7, 8, 13), bool] */;
  %99 = shape_of(%97, dtype="int32") /* ty=Tensor[(3), int32] */;
  %100 = cast(%97, dtype="bool") /* ty=Tensor[(7, 8, 13), bool] */;
  %101 = dyn.reshape(%98, %99, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %102 = greater_equal(%100, %101) /* ty=Tensor[(7, 8, 13), bool] */;
  (%102,)
}

def @func_4748() -> (Tensor[(?, 8, 13), float32],) {
  @func_4746() /* ty=(Tensor[(?, 8, 13), float32],) */
}

def @func_5382(%var_5380: Tensor[(210), float64]) -> (Tensor[(7, 8, 13), int16], Tensor[(?, 8, 13), bool], Tensor[(135), float64], Tensor[(210), float64], Tensor[(128), float32]) {
  @func_5379(%var_5380) /* ty=(Tensor[(7, 8, 13), int16], Tensor[(?, 8, 13), bool], Tensor[(135), float64], Tensor[(210), float64], Tensor[(128), float32]) */
}

def @func_5808() -> Tensor[(3, 9, 5), uint16] {
  %104 = fn () -> Tensor[(3, 9, 5), uint16] {
    %103 = @func_5424() /* ty=(Tensor[(3, 9, 5), uint16],) */;
    %103.0
  };
  %104() /* ty=Tensor[(3, 9, 5), uint16] */
}

def @func_4259() -> (Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) {
  %105 = @func_2447() /* ty=(Tensor[(?, 8, 13), float32],) */;
  %106 = %105.0;
  %107 = @func_4153() /* ty=Tensor[(?, 8, 13), float32] */;
  (%106, %107)
}

def @func_6499() -> (Tensor[(3, 9, 5), float64],) {
  %108 = @func_3538() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) */;
  %109 = %108.0;
  (%109,)
}

def @func_5875() -> (Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) {
  @func_5873() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) */
}

def @func_12090() -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) {
  %110 = @func_6283() /* ty=Tensor[(3, 9, 5), float64] */;
  %111 = @func_7757() /* ty=Tensor[(?, 8, 13), float32] */;
  (%110, %111)
}

def @func_6657() -> (Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) {
  @func_6655() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) */
}

def @func_10359() -> (Tensor[(3, 9, 5), float64],) {
  @func_10357() /* ty=(Tensor[(3, 9, 5), float64],) */
}

def @func_14085(%var_14083: Tensor[(15, 10, 13), float32], %var_14084: Tensor[(60), float64]) -> (Tensor[(15, 10, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(60), float64], Tensor[(7, 8, 13), bool], Tensor[(?, 8, 13), bool]) {
  %121 = fn (%var_14018: Tensor[(15, 10, 13), float32], %var_14037: Tensor[(60), float64]) -> (Tensor[(15, 10, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(60), float64], Tensor[(7, 8, 13), bool], Tensor[(?, 8, 13), bool]) {
    %112 = cast(%var_14018, dtype="float32") /* ty=Tensor[(15, 10, 13), float32] */;
    %113 = cast(%var_14037, dtype="float64") /* ty=Tensor[(60), float64] */;
    %114 = reshape(%113, newshape=[5, 4, 3]) /* ty=Tensor[(5, 4, 3), float64] */;
    %115 = @func_10081(%114) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(5, 4, 3), float32], Tensor[(?, 8, 13), float32], Tensor[(5, 4, 3), float32], Tensor[(?, 8, 13), float32]) */;
    %116 = @func_9180() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(7, 8, 13), bool], Tensor[(7, 104), int16]) */;
    %117 = cos(%112) /* ty=Tensor[(15, 10, 13), float32] */;
    %118 = %115.2;
    %119 = %116.1;
    %120 = @func_2460() /* ty=Tensor[(?, 8, 13), bool] */;
    (%117, %118, %var_14037, %119, %120)
  };
  %121(%var_14083, %var_14084) /* ty=(Tensor[(15, 10, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(60), float64], Tensor[(7, 8, 13), bool], Tensor[(?, 8, 13), bool]) */
}

def @func_10215() -> (Tensor[(?, 8, 13), float32],) {
  %122 = @func_8443() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) */;
  %123 = %122.0;
  (%123,)
}

def @func_19520(%var_19518: Tensor[(8, 13, 8), float32]) -> (Tensor[(8, 13, 8), float32], Tensor[(3, 9, 5), float64]) {
  @func_19517(%var_19518) /* ty=(Tensor[(8, 13, 8), float32], Tensor[(3, 9, 5), float64]) */
}

def @func_2447() -> (Tensor[(?, 8, 13), float32],) {
  %124 = @func_2384() /* ty=(Tensor[(10, 4, 6), int32], Tensor[(?, 8, 13), bool], Tensor[(1, 104), bool]) */;
  %125 = %124.1;
  %126 = cast(%125, dtype="float32") /* ty=Tensor[(?, 8, 13), float32] */;
  %127 = log10(%126) /* ty=Tensor[(?, 8, 13), float32] */;
  (%127,)
}

def @func_19340() -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) {
  %128 = @func_6283() /* ty=Tensor[(3, 9, 5), float64] */;
  %129 = @func_7133() /* ty=Tensor[(3, 9, 5), float64] */;
  (%128, %129)
}

def @func_15634() -> (Tensor[(15, 2, 10), float64], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) {
  %130 = @func_11778() /* ty=(Tensor[(15, 2, 10), float64],) */;
  %131 = %130.0;
  %132 = cast(%131, dtype="float64") /* ty=Tensor[(15, 2, 10), float64] */;
  %133 = @func_4533() /* ty=Tensor[(?, 8, 13), float32] */;
  %134 = cast(%133, dtype="bool") /* ty=Tensor[(?, 8, 13), bool] */;
  %135 = reshape(%134, newshape=[1, 8, 13]) /* ty=Tensor[(1, 8, 13), bool] */;
  %136 = @func_13493(%135) /* ty=(Tensor[(?, 8, 13), float32],) */;
  %137 = @func_11974() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %138 = asin(%132) /* ty=Tensor[(15, 2, 10), float64] */;
  %139 = %136.0;
  %140 = %137.0;
  %141 = @func_12787() /* ty=Tensor[(?, 8, 13), float32] */;
  (%138, %133, %139, %140, %141)
}

def @func_15792() -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) {
  %146 = fn () -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) {
    %142 = @func_9613() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) */;
    %143 = @func_9897() /* ty=(Tensor[(3, 9, 5), float64],) */;
    %144 = %142.0;
    %145 = %143.0;
    (%144, %145)
  };
  %146() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) */
}

def @func_4939() -> Tensor[(3, 9, 5), float64] {
  @func_4937() /* ty=Tensor[(3, 9, 5), float64] */
}

def @func_15878() -> (Tensor[(3, 9, 5), float64],) {
  @func_15876() /* ty=(Tensor[(3, 9, 5), float64],) */
}

def @func_20904(%var_20902: Tensor[(420), float64]) -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(2, 210), bool], Tensor[(420), float64], Tensor[(?, 8, 13), float32]) {
  @func_20901(%var_20902) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(2, 210), bool], Tensor[(420), float64], Tensor[(?, 8, 13), float32]) */
}

def @func_15866() -> (Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64]) {
  %152 = fn () -> (Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64]) {
    %147 = @func_10184() /* ty=(Tensor[(?, 8, 13), float32],) */;
    %148 = %147.0;
    %149 = cast(%148, dtype="float32") /* ty=Tensor[(?, 8, 13), float32] */;
    %150 = rsqrt(%149) /* ty=Tensor[(?, 8, 13), float32] */;
    %151 = @func_9276() /* ty=Tensor[(2, 7, 15), float64] */;
    (%150, %151)
  };
  %152() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64]) */
}

def @func_16004() -> (Tensor[(3, 9, 5), float64],) {
  %154 = fn () -> (Tensor[(3, 9, 5), float64],) {
    %153 = @func_15065() /* ty=Tensor[(3, 9, 5), float64] */;
    (%153,)
  };
  %154() /* ty=(Tensor[(3, 9, 5), float64],) */
}

def @func_21234(%var_21193: Tensor[(1620), float32]) -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(1620), float32], Tensor[(210), float64], Tensor[(2, 7, 15), float64], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(7, 8, 13), int16]) {
  %155 = @func_9613() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) */;
  %156 = cast(%var_21193, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %157 = reshape(%156, newshape=[540, 3]) /* ty=Tensor[(540, 3), float32] */;
  %158 = @func_9366(%157) /* ty=(Tensor[(?, 8, 13), float32], Tensor[(128), float32], Tensor[(540, 3), float32], Tensor[(128, 1), float32]) */;
  %159 = @func_17066() /* ty=(Tensor[(?, 8, 13), bool], Tensor[(2, 7, 15), float64], Tensor[(210), float64]) */;
  %160 = @func_15865() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64]) */;
  %161 = @func_5214() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), bool]) */;
  %162 = %155.0;
  %163 = %158.0;
  %164 = %159.2;
  %165 = %160.1;
  %166 = @func_7757() /* ty=Tensor[(?, 8, 13), float32] */;
  %167 = %161.0;
  %168 = @func_17261() /* ty=Tensor[(7, 8, 13), int16] */;
  (%162, %163, %var_21193, %164, %165, %166, %167, %168)
}

def @func_6655() -> (Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) {
  %169 = @func_4832() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) */;
  %170 = %169.1;
  %171 = @func_3361() /* ty=Tensor[(?, 8, 13), float32] */;
  (%170, %171)
}

def @func_14340() -> Tensor[(?, 8, 13), float32] {
  %172 = @func_12090() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) */;
  %172.1
}

def @func_10205() -> (Tensor[(3, 9, 5), float64],) {
  %174 = fn () -> (Tensor[(3, 9, 5), float64],) {
    %173 = @func_6411() /* ty=Tensor[(3, 9, 5), float64] */;
    (%173,)
  };
  %174() /* ty=(Tensor[(3, 9, 5), float64],) */
}

def @func_13999() -> Tensor[(3, 9, 5), float64] {
  %175 = fn () -> Tensor[(3, 9, 5), float64] {
    @func_11888() /* ty=Tensor[(3, 9, 5), float64] */
  };
  %175() /* ty=Tensor[(3, 9, 5), float64] */
}

def @func_20583() -> (Tensor[(?, 8, 13), float32],) {
  %176 = @func_12090() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) */;
  %177 = %176.1;
  (%177,)
}

def @func_16383(%var_16380: float64, %var_16381: Tensor[(9, 16, 10), float64], %var_16382: Tensor[(9, 16, 10), float64]) -> (Tensor[(9, 16, 10), float64], Tensor[(9, 16, 10), bool], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), uint16]) {
  @func_16378(%var_16380, %var_16381, %var_16382) /* ty=(Tensor[(9, 16, 10), float64], Tensor[(9, 16, 10), bool], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), uint16]) */
}

def @func_3762(%var_3761: Tensor[(2, 7, 15), float64]) -> Tensor[(2, 7, 15), uint8] {
  %184 = fn (%var_3740: Tensor[(2, 7, 15), float64]) -> Tensor[(2, 7, 15), uint8] {
    %178 = @func_2581() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64], Tensor[(105, 2), float64], Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64]) */;
    %179 = %178.1;
    %180 = cast(%var_3740, dtype="uint8") /* ty=Tensor[(2, 7, 15), uint8] */;
    %181 = shape_of(%179, dtype="int32") /* ty=Tensor[(3), int32] */;
    %182 = cast(%179, dtype="uint8") /* ty=Tensor[(2, 7, 15), uint8] */;
    %183 = dyn.reshape(%180, %181, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    bitwise_xor(%182, %183) /* ty=Tensor[(2, 7, 15), uint8] */
  };
  %184(%var_3761) /* ty=Tensor[(2, 7, 15), uint8] */
}

def @func_14298() -> Tensor[(3, 9, 5), float64] {
  %185 = @func_10357() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %185.0
}

def @func_4834() -> (Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) {
  @func_4832() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) */
}

def @func_17707() -> (Tensor[(3, 9, 5), uint16],) {
  %186 = @func_10982() /* ty=(Tensor[(3, 9, 5), uint16],) */;
  %187 = %186.0;
  (%187,)
}

def @func_18178() -> (Tensor[(?, 8, 13), bool], Tensor[(?, 8, 13), float32]) {
  %192 = fn () -> (Tensor[(?, 8, 13), bool], Tensor[(?, 8, 13), float32]) {
    %188 = @func_17867() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), bool], Tensor[(3, 9, 5), float64]) */;
    %189 = @func_15095() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(15, 210), bool], Tensor[(3, 9, 5), float64]) */;
    %190 = %188.1;
    %191 = %189.0;
    (%190, %191)
  };
  %192() /* ty=(Tensor[(?, 8, 13), bool], Tensor[(?, 8, 13), float32]) */
}

def @func_5379(%var_5359: Tensor[(210), float64]) -> (Tensor[(7, 8, 13), int16], Tensor[(?, 8, 13), bool], Tensor[(135), float64], Tensor[(210), float64], Tensor[(128), float32]) {
  %193 = @func_2839() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(7, 8, 13), int16]) */;
  %194 = cast(meta[relay.Constant][5] /* ty=Tensor[(135), float64] */, dtype="float64") /* ty=Tensor[(135), float64] */;
  %195 = cast(%var_5359, dtype="float64") /* ty=Tensor[(210), float64] */;
  %196 = cast(meta[relay.Constant][6] /* ty=Tensor[(128), float32] */, dtype="float32") /* ty=Tensor[(128), float32] */;
  %197 = reshape(%194, newshape=[45, 3]) /* ty=Tensor[(45, 3), float64] */;
  %198 = reshape(%195, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %199 = reshape(%196, newshape=[128]) /* ty=Tensor[(128), float32] */;
  %200 = @func_3116(%197, %198, %199) /* ty=(Tensor[(?, 8, 13), float32], Tensor[(45, 3), float64], Tensor[(?, 8, 13), bool], Tensor[(210), float64], Tensor[(210), float64], Tensor[(2, 7, 15), uint32], Tensor[(128), bool], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(1620), float32]) */;
  %201 = %193.1;
  %202 = %200.2;
  (%201, %202, meta[relay.Constant][5] /* ty=Tensor[(135), float64] */, %var_5359, meta[relay.Constant][6] /* ty=Tensor[(128), float32] */)
}

def @func_15095() -> (Tensor[(?, 8, 13), float32], Tensor[(15, 210), bool], Tensor[(3, 9, 5), float64]) {
  %203 = @func_10239() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) */;
  %204 = @func_6867() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(15, 210), bool], Tensor[(7, 8, 13), int16]) */;
  %205 = @func_7543() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %206 = %203.0;
  %207 = %204.2;
  %208 = %205.0;
  (%206, %207, %208)
}

def @func_11204() -> (Tensor[(?, 8, 13), float64], Tensor[(?, 8, 13), float64], Tensor[(3, 9, 5), uint16]) {
  %222 = fn () -> (Tensor[(?, 8, 13), float64], Tensor[(?, 8, 13), float64], Tensor[(3, 9, 5), uint16]) {
    %209 = @func_8954() /* ty=(Tensor[(?, 8, 13), bool],) */;
    %210 = %209.0;
    %211 = @func_2447() /* ty=(Tensor[(?, 8, 13), float32],) */;
    %212 = %211.0;
    %213 = cast(%212, dtype="float64") /* ty=Tensor[(?, 8, 13), float64] */;
    %214 = shape_of(%210, dtype="int32") /* ty=Tensor[(3), int32] */;
    %215 = cast(%210, dtype="float64") /* ty=Tensor[(?, 8, 13), float64] */;
    %216 = dyn.reshape(%213, %214, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %217 = cast(%212, dtype="float64") /* ty=Tensor[(?, 8, 13), float64] */;
    %218 = @func_3672() /* ty=(Tensor[(3, 9, 5), uint16],) */;
    %219 = floor_divide(%215, %216) /* ty=Tensor[(?, 8, 13), float64] */;
    %220 = cosh(%217) /* ty=Tensor[(?, 8, 13), float64] */;
    %221 = %218.0;
    (%219, %220, %221)
  };
  %222() /* ty=(Tensor[(?, 8, 13), float64], Tensor[(?, 8, 13), float64], Tensor[(3, 9, 5), uint16]) */
}

def @func_15534() -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), uint16], Tensor[(3, 9, 5), uint16], Tensor[(2, 7, 15), float64]) {
  %223 = @func_10811() /* ty=(Tensor[(3, 9, 5), uint16],) */;
  %224 = @func_9711() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(2, 7, 15), float64]) */;
  %225 = @func_7133() /* ty=Tensor[(3, 9, 5), float64] */;
  %226 = @func_5807() /* ty=Tensor[(3, 9, 5), uint16] */;
  %227 = %223.0;
  %228 = %224.1;
  (%225, %226, %227, %228)
}

def @func_19139(%var_19101: Tensor[(728), int16], %var_19102: Tensor[(128), float32]) -> (Tensor[(?, 8, 13), bool], Tensor[(128), float32], Tensor[(728), int16], Tensor[(128), float32]) {
  %229 = @func_8954() /* ty=(Tensor[(?, 8, 13), bool],) */;
  %230 = cast(%var_19101, dtype="int16") /* ty=Tensor[(728), int16] */;
  %231 = cast(%var_19102, dtype="float32") /* ty=Tensor[(128), float32] */;
  %232 = reshape(%230, newshape=[728]) /* ty=Tensor[(728), int16] */;
  %233 = reshape(%231, newshape=[128]) /* ty=Tensor[(128), float32] */;
  %234 = @func_6396(%232, %233) /* ty=(Tensor[(?, 8, 13), float32], Tensor[(7, 8, 13), bool], Tensor[(728), int16], Tensor[(3, 9, 5), float64], Tensor[(128), float32], Tensor[(135), float64], Tensor[(3, 9, 5), float64]) */;
  %235 = %229.0;
  %236 = %234.4;
  (%235, %236, %var_19101, %var_19102)
}

def @func_19178() -> (Tensor[(3, 9, 5), float64],) {
  %239 = fn () -> (Tensor[(3, 9, 5), float64],) {
    %237 = @func_11974() /* ty=(Tensor[(3, 9, 5), float64],) */;
    %238 = %237.0;
    (%238,)
  };
  %239() /* ty=(Tensor[(3, 9, 5), float64],) */
}

def @func_19233(%var_19221: Tensor[(2, 210), float64]) -> (Tensor[(?, 8, 13), float32], Tensor[(52, 2), bool], Tensor[(2, 210), bool]) {
  %240 = @func_15634() /* ty=(Tensor[(15, 2, 10), float64], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) */;
  %241 = cast(meta[relay.Constant][7] /* ty=Tensor[(1, 210), float64] */, dtype="float64") /* ty=Tensor[(1, 210), float64] */;
  %242 = reshape(%241, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %243 = @func_2759(%242) /* ty=(Tensor[(?, 8, 13), bool], Tensor[(52, 2), bool], Tensor[(1620), float32], Tensor[(128), float32], Tensor[(210), float64]) */;
  %244 = cast(meta[relay.Constant][7] /* ty=Tensor[(1, 210), float64] */, dtype="bool") /* ty=Tensor[(1, 210), bool] */;
  %245 = cast(%var_19221, dtype="bool") /* ty=Tensor[(2, 210), bool] */;
  %246 = %240.4;
  %247 = %243.1;
  %248 = less_equal(%244, %245) /* ty=Tensor[(2, 210), bool] */;
  (%246, %247, %248)
}

def @func_3347() -> Tensor[(?, 8, 13), float32] {
  @func_3345() /* ty=Tensor[(?, 8, 13), float32] */
}

def @func_17589() -> Tensor[(?, 8, 13), float32] {
  @func_15999() /* ty=Tensor[(?, 8, 13), float32] */
}

def @func_20469() -> (Tensor[(3, 9, 5), float64],) {
  @func_20467() /* ty=(Tensor[(3, 9, 5), float64],) */
}

def @func_7476() -> (Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), uint16]) {
  %249 = @func_5084() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) */;
  %250 = @func_3672() /* ty=(Tensor[(3, 9, 5), uint16],) */;
  %251 = %249.0;
  %252 = %250.0;
  (%251, %252)
}

def @func_1638(%var_1636: Tensor[(1, 8, 13), bool], %var_1637: Tensor[(1, 8, 13), bool]) -> (Tensor[(?, 8, 13), bool],) {
  %258 = fn (%var_1630: Tensor[(1, 8, 13), bool], %var_1631: Tensor[(1, 8, 13), bool]) -> (Tensor[(?, 8, 13), bool],) {
    %253 = cast(%var_1631, dtype="bool") /* ty=Tensor[(1, 8, 13), bool] */;
    %254 = shape_of(%var_1630, dtype="int32") /* ty=Tensor[(3), int32] */;
    %255 = cast(%var_1630, dtype="bool") /* ty=Tensor[(1, 8, 13), bool] */;
    %256 = dyn.reshape(%253, %254, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %257 = logical_and(%255, %256) /* ty=Tensor[(?, 8, 13), bool] */;
    (%257,)
  };
  %258(%var_1636, %var_1637) /* ty=(Tensor[(?, 8, 13), bool],) */
}

def @func_12701(%var_12700: Tensor[(210), float64]) -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), uint16], Tensor[(2, 7, 15), uint32], Tensor[(210), float64], Tensor[(3, 9, 5), float64]) {
  %269 = fn (%var_12684: Tensor[(210), float64]) -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), uint16], Tensor[(2, 7, 15), uint32], Tensor[(210), float64], Tensor[(3, 9, 5), float64]) {
    %259 = @func_12090() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) */;
    %260 = @func_9180() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(7, 8, 13), bool], Tensor[(7, 104), int16]) */;
    %261 = cast(%var_12684, dtype="float64") /* ty=Tensor[(210), float64] */;
    %262 = reshape(%261, newshape=[2, 7, 15]) /* ty=Tensor[(2, 7, 15), float64] */;
    %263 = @func_6499() /* ty=(Tensor[(3, 9, 5), float64],) */;
    %264 = %259.0;
    %265 = %260.0;
    %266 = @func_8928() /* ty=Tensor[(3, 9, 5), uint16] */;
    %267 = @func_2985(%262) /* ty=Tensor[(2, 7, 15), uint32] */;
    %268 = %263.0;
    (%264, %265, %266, %267, %var_12684, %268)
  };
  %269(%var_12700) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), uint16], Tensor[(2, 7, 15), uint32], Tensor[(210), float64], Tensor[(3, 9, 5), float64]) */
}

def @func_4127() -> Tensor[(?, 8, 13), float32] {
  %271 = fn () -> Tensor[(?, 8, 13), float32] {
    %270 = @func_4075() /* ty=(Tensor[(3, 9, 5), uint16], Tensor[(?, 8, 13), float32]) */;
    %270.1
  };
  %271() /* ty=Tensor[(?, 8, 13), float32] */
}

def @func_20455() -> (Tensor[(3, 9, 5), uint16],) {
  %274 = fn () -> (Tensor[(3, 9, 5), uint16],) {
    %272 = @func_3672() /* ty=(Tensor[(3, 9, 5), uint16],) */;
    %273 = %272.0;
    (%273,)
  };
  %274() /* ty=(Tensor[(3, 9, 5), uint16],) */
}

def @func_11579() -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) {
  @func_11577() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) */
}

def @func_4155() -> Tensor[(?, 8, 13), float32] {
  @func_4153() /* ty=Tensor[(?, 8, 13), float32] */
}

def @func_20255() -> Tensor[(3, 9, 5), float64] {
  %275 = @func_5873() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) */;
  %275.2
}

def @func_14342() -> Tensor[(?, 8, 13), float32] {
  @func_14340() /* ty=Tensor[(?, 8, 13), float32] */
}

def @func_14731() -> Tensor[(3, 9, 5), float64] {
  %277 = fn () -> Tensor[(3, 9, 5), float64] {
    %276 = @func_11541() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) */;
    %276.1
  };
  %277() /* ty=Tensor[(3, 9, 5), float64] */
}

def @func_16000() -> Tensor[(?, 8, 13), float32] {
  %281 = fn () -> Tensor[(?, 8, 13), float32] {
    %278 = @func_2447() /* ty=(Tensor[(?, 8, 13), float32],) */;
    %279 = %278.0;
    %280 = cast(%279, dtype="float32") /* ty=Tensor[(?, 8, 13), float32] */;
    acosh(%280) /* ty=Tensor[(?, 8, 13), float32] */
  };
  %281() /* ty=Tensor[(?, 8, 13), float32] */
}

def @func_3241(%var_3206: Tensor[(4, 32), float32], %var_3207: Tensor[(5, 42), float64]) -> (Tensor[(?, 8, 13), bool], Tensor[(12, 15, 9), int8], Tensor[(1620), float32], Tensor[(4, 32), float32], Tensor[(5, 42), float64], Tensor[(3, 9, 5), float64]) {
  %282 = cast(meta[relay.Constant][8] /* ty=Tensor[(1620), float32] */, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %283 = cast(%var_3206, dtype="float32") /* ty=Tensor[(4, 32), float32] */;
  %284 = @func_2460() /* ty=Tensor[(?, 8, 13), bool] */;
  %285 = cast(%284, dtype="bool") /* ty=Tensor[(?, 8, 13), bool] */;
  %286 = cast(%var_3207, dtype="float64") /* ty=Tensor[(5, 42), float64] */;
  %287 = reshape(%282, newshape=[12, 15, 9]) /* ty=Tensor[(12, 15, 9), float32] */;
  %288 = reshape(%283, newshape=[128]) /* ty=Tensor[(128), float32] */;
  %289 = reshape(%285, newshape=[52, 2]) /* ty=Tensor[(52, 2), bool] */;
  %290 = reshape(%286, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %291 = @func_2289(%287, %288, %289, %290) /* ty=(Tensor[(3, 45), float32], Tensor[(128), float32], Tensor[(135), float64], Tensor[(52, 2), bool], Tensor[(2, 7, 15), float64], Tensor[(210), float64], Tensor[(12, 15, 9), float64], Tensor[(12, 15, 9), int8], Tensor[(2, 7, 15), float64]) */;
  %292 = %291.7;
  %293 = @func_2600() /* ty=Tensor[(3, 9, 5), float64] */;
  (%284, %292, meta[relay.Constant][8] /* ty=Tensor[(1620), float32] */, %var_3206, %var_3207, %293)
}

def @func_8182(%var_8180: Tensor[(210), float64], %var_8181: Tensor[(1620), float32]) -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(210), float64], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) {
  %311 = fn (%var_8142: Tensor[(210), float64], %var_8161: Tensor[(1620), float32]) -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(210), float64], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) {
    %294 = @func_8087() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(128), float32], Tensor[(7, 104), int16], Tensor[(128), float32]) */;
    %295 = @func_7391() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) */;
    %296 = cast(%var_8142, dtype="float64") /* ty=Tensor[(210), float64] */;
    %297 = reshape(%296, newshape=[210]) /* ty=Tensor[(210), float64] */;
    %298 = @func_7726(%297) /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(864), uint64], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), bool], Tensor[(210), float64], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) */;
    %299 = cast(%var_8161, dtype="float32") /* ty=Tensor[(1620), float32] */;
    %300 = reshape(%299, newshape=[1620]) /* ty=Tensor[(1620), float32] */;
    %301 = @func_4027(%300) /* ty=(Tensor[(7, 8, 13), int16], Tensor[(?, 8, 13), uint16], Tensor[(105, 2), uint64], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(105, 2), float64], Tensor[(2, 7, 15), float64], Tensor[(1620), float32], Tensor[(128), float32], Tensor[(2, 7, 15), float64], Tensor[(3, 9, 5), float64], Tensor[(45, 3), float64], Tensor[(3, 9, 5), uint16]) */;
    %302 = @func_4047() /* ty=(Tensor[(3, 9, 5), float64],) */;
    %303 = @func_7341() /* ty=(Tensor[(3, 9, 5), float64],) */;
    %304 = %294.2;
    %305 = %295.0;
    %306 = %298.2;
    %307 = %301.7;
    %308 = @func_6283() /* ty=Tensor[(3, 9, 5), float64] */;
    %309 = %302.0;
    %310 = %303.0;
    (%304, %305, %306, %var_8142, %307, %var_8161, %308, %309, %310)
  };
  %311(%var_8180, %var_8181) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(210), float64], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) */
}

def @func_13465() -> (Tensor[(3, 9, 5), uint16],) {
  @func_13463() /* ty=(Tensor[(3, 9, 5), uint16],) */
}

def @func_17868() -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), bool], Tensor[(3, 9, 5), float64]) {
  %316 = fn () -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), bool], Tensor[(3, 9, 5), float64]) {
    %312 = @func_4047() /* ty=(Tensor[(3, 9, 5), float64],) */;
    %313 = %312.0;
    %314 = @func_13201() /* ty=Tensor[(?, 8, 13), bool] */;
    %315 = @func_7133() /* ty=Tensor[(3, 9, 5), float64] */;
    (%313, %314, %315)
  };
  %316() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), bool], Tensor[(3, 9, 5), float64]) */
}

def @func_11577() -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) {
  %317 = @func_7448() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %318 = %317.0;
  %319 = @func_3141() /* ty=Tensor[(3, 9, 5), float64] */;
  (%318, %319)
}

def @func_11864() -> (Tensor[(3, 9, 5), uint16], Tensor[(2, 7, 15), float64], Tensor[(210), float64], Tensor[(7, 8, 13), int16], Tensor[(?, 8, 13), float32]) {
  %320 = cast(meta[relay.Constant][9] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %321 = reshape(%320, newshape=[2, 7, 15]) /* ty=Tensor[(2, 7, 15), float64] */;
  %322 = @func_869(%321) /* ty=(Tensor[(2, 7, 15), float64],) */;
  %323 = @func_2839() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(7, 8, 13), int16]) */;
  %324 = @func_9912() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) */;
  %325 = @func_3330() /* ty=Tensor[(3, 9, 5), uint16] */;
  %326 = %322.0;
  %327 = %323.1;
  %328 = %324.0;
  (%325, %326, meta[relay.Constant][9] /* ty=Tensor[(210), float64] */, %327, %328)
}

def @func_4925(%var_4924: Tensor[(135), float64]) -> (Tensor[(3, 9, 5), float64], Tensor[(135), float64], Tensor[(105, 2), float64], Tensor[(128), float32], Tensor[(?, 8, 13), uint8]) {
  %345 = fn (%var_4915: Tensor[(135), float64]) -> (Tensor[(3, 9, 5), float64], Tensor[(135), float64], Tensor[(105, 2), float64], Tensor[(128), float32], Tensor[(?, 8, 13), uint8]) {
    %329 = cast(%var_4915, dtype="float64") /* ty=Tensor[(135), float64] */;
    %330 = cast(meta[relay.Constant][10] /* ty=Tensor[(105, 2), float64] */, dtype="float64") /* ty=Tensor[(105, 2), float64] */;
    %331 = cast(meta[relay.Constant][11] /* ty=Tensor[(128), float32] */, dtype="float32") /* ty=Tensor[(128), float32] */;
    %332 = reshape(%329, newshape=[45, 3]) /* ty=Tensor[(45, 3), float64] */;
    %333 = reshape(%330, newshape=[210]) /* ty=Tensor[(210), float64] */;
    %334 = reshape(%331, newshape=[128]) /* ty=Tensor[(128), float32] */;
    %335 = @func_3116(%332, %333, %334) /* ty=(Tensor[(?, 8, 13), float32], Tensor[(45, 3), float64], Tensor[(?, 8, 13), bool], Tensor[(210), float64], Tensor[(210), float64], Tensor[(2, 7, 15), uint32], Tensor[(128), bool], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(1620), float32]) */;
    %336 = @func_2460() /* ty=Tensor[(?, 8, 13), bool] */;
    %337 = cast(%336, dtype="float32") /* ty=Tensor[(?, 8, 13), float32] */;
    %338 = tan(%337) /* ty=Tensor[(?, 8, 13), float32] */;
    %339 = cast(%336, dtype="uint8") /* ty=Tensor[(?, 8, 13), uint8] */;
    %340 = shape_of(%338, dtype="int32") /* ty=Tensor[(3), int32] */;
    %341 = cast(%338, dtype="uint8") /* ty=Tensor[(?, 8, 13), uint8] */;
    %342 = dyn.reshape(%339, %340, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %343 = %335.7;
    %344 = minimum(%341, %342) /* ty=Tensor[(?, 8, 13), uint8] */;
    (%343, %var_4915, meta[relay.Constant][10] /* ty=Tensor[(105, 2), float64] */, meta[relay.Constant][11] /* ty=Tensor[(128), float32] */, %344)
  };
  %345(%var_4924) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(135), float64], Tensor[(105, 2), float64], Tensor[(128), float32], Tensor[(?, 8, 13), uint8]) */
}

def @func_16169() -> (Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(540, 3), float64], Tensor[(?, 8, 13), float32]) {
  @func_16167() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(540, 3), float64], Tensor[(?, 8, 13), float32]) */
}

def @func_3674() -> (Tensor[(3, 9, 5), uint16],) {
  @func_3672() /* ty=(Tensor[(3, 9, 5), uint16],) */
}

def @func_10239() -> (Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) {
  %346 = @func_5740() /* ty=(Tensor[(?, 8, 13), float32],) */;
  %347 = %346.0;
  %348 = @func_8893() /* ty=Tensor[(3, 9, 5), float64] */;
  (%347, %348)
}

def @func_14445() -> (Tensor[(3, 9, 5), uint16],) {
  @func_14443() /* ty=(Tensor[(3, 9, 5), uint16],) */
}

def @func_12773() -> (Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) {
  %355 = fn () -> (Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) {
    %349 = @func_10466() /* ty=(Tensor[(?, 8, 13), float32],) */;
    %350 = @func_4259() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) */;
    %351 = @func_9397() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) */;
    %352 = %349.0;
    %353 = %350.1;
    %354 = %351.1;
    (%352, %353, %354)
  };
  %355() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) */
}

def @func_11340() -> (Tensor[(?, 8, 13), bool],) {
  %356 = @func_2460() /* ty=Tensor[(?, 8, 13), bool] */;
  (%356,)
}

def @func_13946() -> Tensor[(3, 9, 5), float64] {
  %357 = fn () -> Tensor[(3, 9, 5), float64] {
    @func_8893() /* ty=Tensor[(3, 9, 5), float64] */
  };
  %357() /* ty=Tensor[(3, 9, 5), float64] */
}

def @func_12928() -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), bool]) {
  @func_12926() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), bool]) */
}

def @func_19342() -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) {
  @func_19340() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) */
}

def @func_4097() -> (Tensor[(7, 8, 13), int16],) {
  @func_4095() /* ty=(Tensor[(7, 8, 13), int16],) */
}

def @func_451(%var_448: Tensor[(13, 16, 1), int16], %var_449: Tensor[(13, 16, 1), int16], %var_450: Tensor[(13, 16, 11), int16]) -> (Tensor[(13, 16, ?), int16], Tensor[(13, 16, 11), uint16]) {
  %366 = fn (%var_421: Tensor[(13, 16, 1), int16], %var_422: Tensor[(13, 16, 1), int16], %var_426: Tensor[(13, 16, 11), int16]) -> (Tensor[(13, 16, ?), int16], Tensor[(13, 16, 11), uint16]) {
    %358 = cast(%var_422, dtype="int16") /* ty=Tensor[(13, 16, 1), int16] */;
    %359 = shape_of(%var_421, dtype="int32") /* ty=Tensor[(3), int32] */;
    %360 = cast(%var_421, dtype="int16") /* ty=Tensor[(13, 16, 1), int16] */;
    %361 = dyn.reshape(%358, %359, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %362 = cast(%var_422, dtype="uint16") /* ty=Tensor[(13, 16, 1), uint16] */;
    %363 = cast(%var_426, dtype="uint16") /* ty=Tensor[(13, 16, 11), uint16] */;
    %364 = subtract(%360, %361) /* ty=Tensor[(13, 16, ?), int16] */;
    %365 = logical_xor(%362, %363) /* ty=Tensor[(13, 16, 11), uint16] */;
    (%364, %365)
  };
  %366(%var_448, %var_449, %var_450) /* ty=(Tensor[(13, 16, ?), int16], Tensor[(13, 16, 11), uint16]) */
}

def @func_3245(%var_3243: Tensor[(4, 32), float32], %var_3244: Tensor[(5, 42), float64]) -> (Tensor[(?, 8, 13), bool], Tensor[(12, 15, 9), int8], Tensor[(1620), float32], Tensor[(4, 32), float32], Tensor[(5, 42), float64], Tensor[(3, 9, 5), float64]) {
  @func_3241(%var_3243, %var_3244) /* ty=(Tensor[(?, 8, 13), bool], Tensor[(12, 15, 9), int8], Tensor[(1620), float32], Tensor[(4, 32), float32], Tensor[(5, 42), float64], Tensor[(3, 9, 5), float64]) */
}

def @func_9082() -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) {
  %367 = @func_5323() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %368 = @func_4609() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %369 = %367.0;
  %370 = %368.0;
  (%369, %370)
}

def @func_9113() -> Tensor[(3, 9, 5), float64] {
  @func_7537() /* ty=Tensor[(3, 9, 5), float64] */
}

def @func_20535() -> (Tensor[(3, 9, 5), float64], Tensor[(7, 8, 13), int16]) {
  %371 = @func_20178() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %372 = %371.0;
  %373 = @func_3386() /* ty=Tensor[(7, 8, 13), int16] */;
  (%372, %373)
}

def @func_21237(%var_21235: Tensor[(1620), float32]) -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(1620), float32], Tensor[(210), float64], Tensor[(2, 7, 15), float64], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(7, 8, 13), int16]) {
  @func_21234(%var_21235) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(1620), float32], Tensor[(210), float64], Tensor[(2, 7, 15), float64], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(7, 8, 13), int16]) */
}

def @func_8751(%var_8749: Tensor[(1620), float32], %var_8750: Tensor[(128), float32]) -> (Tensor[(3, 9, 5), float64], Tensor[(3, 45), float32], Tensor[(1620), float32], Tensor[(128), float32], Tensor[(52, 2), bool], Tensor[(210), float64]) {
  @func_8747(%var_8749, %var_8750) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 45), float32], Tensor[(1620), float32], Tensor[(128), float32], Tensor[(52, 2), bool], Tensor[(210), float64]) */
}

def @func_19143(%var_19141: Tensor[(728), int16], %var_19142: Tensor[(128), float32]) -> (Tensor[(?, 8, 13), bool], Tensor[(128), float32], Tensor[(728), int16], Tensor[(128), float32]) {
  @func_19139(%var_19141, %var_19142) /* ty=(Tensor[(?, 8, 13), bool], Tensor[(128), float32], Tensor[(728), int16], Tensor[(128), float32]) */
}

def @func_5721() -> (Tensor[(?, 8, 13), bool],) {
  @func_5719() /* ty=(Tensor[(?, 8, 13), bool],) */
}

def @func_17700(%var_17699: Tensor[(4, 364), float32]) -> (Tensor[(3, 9, 5), uint16], Tensor[(3, 9, 5), float64], Tensor[(4, 364), uint8], Tensor[(3, 9, 5), float64], Tensor[(210), float64], Tensor[(?, 8, 13), bool]) {
  %398 = fn (%var_17642: Tensor[(4, 364), float32]) -> (Tensor[(3, 9, 5), uint16], Tensor[(3, 9, 5), float64], Tensor[(4, 364), uint8], Tensor[(3, 9, 5), float64], Tensor[(210), float64], Tensor[(?, 8, 13), bool]) {
    %374 = cast(%var_17642, dtype="float32") /* ty=Tensor[(4, 364), float32] */;
    %375 = reshape(%374, newshape=[14, 8, 13]) /* ty=Tensor[(14, 8, 13), float32] */;
    %376 = @func_5618(%375) /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), uint16], Tensor[(?, 8, 13), float32], Tensor[(14, 8, 13), int16]) */;
    %377 = @func_11711() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(2, 7, 15), uint8], Tensor[(210), float64], Tensor[(128), float32], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) */;
    %378 = cast(meta[relay.Constant][12] /* ty=Tensor[(4, 364), float32] */, dtype="uint8") /* ty=Tensor[(4, 364), uint8] */;
    %379 = shape_of(%var_17642, dtype="int32") /* ty=Tensor[(2), int32] */;
    %380 = cast(%var_17642, dtype="uint8") /* ty=Tensor[(4, 364), uint8] */;
    %381 = dyn.reshape(%378, %379, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
    %382 = cast(meta[relay.Constant][13] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
    %383 = reshape(%382, newshape=[210]) /* ty=Tensor[(210), float64] */;
    %384 = @func_7726(%383) /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(864), uint64], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), bool], Tensor[(210), float64], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) */;
    %385 = @func_4175() /* ty=(Tensor[(?, 8, 13), float32],) */;
    %386 = %385.0;
    %387 = @func_16167() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(540, 3), float64], Tensor[(?, 8, 13), float32]) */;
    %388 = %387.4;
    %389 = cast(%388, dtype="bool") /* ty=Tensor[(?, 8, 13), bool] */;
    %390 = shape_of(%386, dtype="int32") /* ty=Tensor[(3), int32] */;
    %391 = cast(%386, dtype="bool") /* ty=Tensor[(?, 8, 13), bool] */;
    %392 = dyn.reshape(%389, %390, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %393 = %376.1;
    %394 = %377.5;
    %395 = left_shift(%380, %381) /* ty=Tensor[(4, 364), uint8] */;
    %396 = %384.3;
    %397 = less_equal(%391, %392) /* ty=Tensor[(?, 8, 13), bool] */;
    (%393, %394, %395, %396, meta[relay.Constant][13] /* ty=Tensor[(210), float64] */, %397)
  };
  %398(%var_17699) /* ty=(Tensor[(3, 9, 5), uint16], Tensor[(3, 9, 5), float64], Tensor[(4, 364), uint8], Tensor[(3, 9, 5), float64], Tensor[(210), float64], Tensor[(?, 8, 13), bool]) */
}

def @func_18923() -> (Tensor[(3, 9, 5), float64],) {
  %399 = @func_15791() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) */;
  %400 = %399.0;
  (%400,)
}

def @func_4868() -> Tensor[(3, 9, 5), float64] {
  %402 = fn () -> Tensor[(3, 9, 5), float64] {
    %401 = @func_2839() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(7, 8, 13), int16]) */;
    %401.0
  };
  %402() /* ty=Tensor[(3, 9, 5), float64] */
}

def @func_18048() -> (Tensor[(3, 9, 5), float64],) {
  @func_18046() /* ty=(Tensor[(3, 9, 5), float64],) */
}

def @func_14801() -> (Tensor[(?, 8, 13), bool], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) {
  %403 = @func_11340() /* ty=(Tensor[(?, 8, 13), bool],) */;
  %404 = @func_6607() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %405 = @func_3538() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) */;
  %406 = @func_6782() /* ty=(Tensor[(3, 9, 5), uint16], Tensor[(3, 9, 5), float64]) */;
  %407 = %403.0;
  %408 = %404.0;
  %409 = %405.0;
  %410 = %406.1;
  (%407, %408, %409, %410)
}

def @func_3843() -> Tensor[(?, 8, 13), float32] {
  %412 = fn () -> Tensor[(?, 8, 13), float32] {
    %411 = @func_2581() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64], Tensor[(105, 2), float64], Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64]) */;
    %411.0
  };
  %412() /* ty=Tensor[(?, 8, 13), float32] */
}

def @func_7448() -> (Tensor[(3, 9, 5), float64],) {
  %413 = @func_2600() /* ty=Tensor[(3, 9, 5), float64] */;
  (%413,)
}

def @func_9615() -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) {
  @func_9613() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) */
}

def @func_10566() -> (Tensor[(3, 9, 5), float64],) {
  %416 = fn () -> (Tensor[(3, 9, 5), float64],) {
    %414 = @func_10204() /* ty=(Tensor[(3, 9, 5), float64],) */;
    %415 = %414.0;
    (%415,)
  };
  %416() /* ty=(Tensor[(3, 9, 5), float64],) */
}

def @func_3332() -> Tensor[(3, 9, 5), uint16] {
  @func_3330() /* ty=Tensor[(3, 9, 5), uint16] */
}

def @main(%var_21485: Tensor[(70, 6), float64]) -> (Tensor[(?, 8, 13), bool], Tensor[(70, 6), float64], Tensor[(52, 2), uint64]) {
  %417 = @func_2385() /* ty=(Tensor[(10, 4, 6), int32], Tensor[(?, 8, 13), bool], Tensor[(1, 104), bool]) */;
  %418 = cast(%var_21485, dtype="float64") /* ty=Tensor[(70, 6), float64] */;
  %419 = reshape(%418, newshape=[2, 210]) /* ty=Tensor[(2, 210), float64] */;
  %420 = @func_19236(%419) /* ty=(Tensor[(?, 8, 13), float32], Tensor[(52, 2), bool], Tensor[(2, 210), bool]) */;
  %421 = %420.1;
  %422 = cast(meta[relay.Constant][14] /* ty=Tensor[(52, 2), bool] */, dtype="uint64") /* ty=Tensor[(52, 2), uint64] */;
  %423 = shape_of(%421, dtype="int32") /* ty=Tensor[(2), int32] */;
  %424 = cast(%421, dtype="uint64") /* ty=Tensor[(52, 2), uint64] */;
  %425 = dyn.reshape(%422, %423, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %426 = %417.1;
  %427 = maximum(%424, %425) /* ty=Tensor[(52, 2), uint64] */;
  (%426, %var_21485, %427)
}

def @func_5618(%var_5590: Tensor[(14, 8, 13), float32]) -> (Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), uint16], Tensor[(?, 8, 13), float32], Tensor[(14, 8, 13), int16]) {
  %428 = @func_4075() /* ty=(Tensor[(3, 9, 5), uint16], Tensor[(?, 8, 13), float32]) */;
  %429 = @func_4359() /* ty=Tensor[(?, 8, 13), float32] */;
  %430 = cast(%429, dtype="float32") /* ty=Tensor[(?, 8, 13), float32] */;
  %431 = cast(%429, dtype="int16") /* ty=Tensor[(?, 8, 13), int16] */;
  %432 = cast(%var_5590, dtype="int16") /* ty=Tensor[(14, 8, 13), int16] */;
  %433 = %428.1;
  %434 = @func_3330() /* ty=Tensor[(3, 9, 5), uint16] */;
  %435 = acos(%430) /* ty=Tensor[(?, 8, 13), float32] */;
  %436 = minimum(%431, %432) /* ty=Tensor[(14, 8, 13), int16] */;
  (%433, %434, %435, %436)
}

def @func_8747(%var_8739: Tensor[(1620), float32], %var_8740: Tensor[(128), float32]) -> (Tensor[(3, 9, 5), float64], Tensor[(3, 45), float32], Tensor[(1620), float32], Tensor[(128), float32], Tensor[(52, 2), bool], Tensor[(210), float64]) {
  %437 = @func_3538() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) */;
  %438 = cast(%var_8739, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %439 = cast(%var_8740, dtype="float32") /* ty=Tensor[(128), float32] */;
  %440 = cast(meta[relay.Constant][15] /* ty=Tensor[(52, 2), bool] */, dtype="bool") /* ty=Tensor[(52, 2), bool] */;
  %441 = cast(meta[relay.Constant][16] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %442 = reshape(%438, newshape=[12, 15, 9]) /* ty=Tensor[(12, 15, 9), float32] */;
  %443 = reshape(%439, newshape=[128]) /* ty=Tensor[(128), float32] */;
  %444 = reshape(%440, newshape=[52, 2]) /* ty=Tensor[(52, 2), bool] */;
  %445 = reshape(%441, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %446 = @func_2289(%442, %443, %444, %445) /* ty=(Tensor[(3, 45), float32], Tensor[(128), float32], Tensor[(135), float64], Tensor[(52, 2), bool], Tensor[(2, 7, 15), float64], Tensor[(210), float64], Tensor[(12, 15, 9), float64], Tensor[(12, 15, 9), int8], Tensor[(2, 7, 15), float64]) */;
  %447 = %437.0;
  %448 = %446.0;
  (%447, %448, %var_8739, %var_8740, meta[relay.Constant][15] /* ty=Tensor[(52, 2), bool] */, meta[relay.Constant][16] /* ty=Tensor[(210), float64] */)
}

def @func_6943() -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), uint16], Tensor[(3, 9, 5), float64]) {
  @func_6941() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), uint16], Tensor[(3, 9, 5), float64]) */
}

def @func_13144() -> (Tensor[(3, 9, 5), float64], Tensor[(7, 8, 13), int16]) {
  %451 = fn () -> (Tensor[(3, 9, 5), float64], Tensor[(7, 8, 13), int16]) {
    %449 = @func_4705() /* ty=Tensor[(3, 9, 5), float64] */;
    %450 = @func_3386() /* ty=Tensor[(7, 8, 13), int16] */;
    (%449, %450)
  };
  %451() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(7, 8, 13), int16]) */
}

def @func_16642(%var_16641: Tensor[(105, 2), float64]) -> (Tensor[(3, 9, 5), float64], Tensor[(105, 2), float64], Tensor[(210, 5), float32], Tensor[(210, 5), float64], Tensor[(3, 9, 5), float64]) {
  %471 = fn (%var_16569: Tensor[(105, 2), float64]) -> (Tensor[(3, 9, 5), float64], Tensor[(105, 2), float64], Tensor[(210, 5), float32], Tensor[(210, 5), float64], Tensor[(3, 9, 5), float64]) {
    %452 = cast(%var_16569, dtype="float64") /* ty=Tensor[(105, 2), float64] */;
    %453 = reshape(%452, newshape=[210, 1]) /* ty=Tensor[(210, 1), float64] */;
    %454 = @func_5520(%453) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64], Tensor[(210, 1), float64]) */;
    %455 = %454.3;
    %456 = cast(%455, dtype="float32") /* ty=Tensor[(210, 1), float32] */;
    %457 = cast(meta[relay.Constant][17] /* ty=Tensor[(210, 5), float64] */, dtype="float32") /* ty=Tensor[(210, 5), float32] */;
    %458 = cast(meta[relay.Constant][17] /* ty=Tensor[(210, 5), float64] */, dtype="float64") /* ty=Tensor[(210, 5), float64] */;
    %459 = log10(%458) /* ty=Tensor[(210, 5), float64] */;
    %460 = cast(meta[relay.Constant][17] /* ty=Tensor[(210, 5), float64] */, dtype="float32") /* ty=Tensor[(210, 5), float32] */;
    %461 = shape_of(%459, dtype="int32") /* ty=Tensor[(2), int32] */;
    %462 = cast(%459, dtype="float32") /* ty=Tensor[(210, 5), float32] */;
    %463 = dyn.reshape(%460, %461, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %464 = power(%462, %463) /* ty=Tensor[(210, 5), float32] */;
    %465 = cast(%464, dtype="float64") /* ty=Tensor[(210, 5), float64] */;
    %466 = @func_7543() /* ty=(Tensor[(3, 9, 5), float64],) */;
    %467 = @func_6411() /* ty=Tensor[(3, 9, 5), float64] */;
    %468 = mod(%456, %457) /* ty=Tensor[(210, 5), float32] */;
    %469 = exp(%465) /* ty=Tensor[(210, 5), float64] */;
    %470 = %466.0;
    (%467, %var_16569, %468, %469, %470)
  };
  %471(%var_16641) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(105, 2), float64], Tensor[(210, 5), float32], Tensor[(210, 5), float64], Tensor[(3, 9, 5), float64]) */
}

def @func_19758() -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) {
  %476 = fn () -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) {
    %472 = @func_17531() /* ty=(Tensor[(3, 9, 5), float64],) */;
    %473 = @func_10184() /* ty=(Tensor[(?, 8, 13), float32],) */;
    %474 = %472.0;
    %475 = %473.0;
    (%474, %475)
  };
  %476() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) */
}

def @func_19903(%var_19892: Tensor[(210), float64]) -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(7, 8, 13), int16], Tensor[(3, 9, 5), float64], Tensor[(210), float64], Tensor[(210), float64]) {
  %477 = @func_17214() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), uint16], Tensor[(3, 9, 5), float64]) */;
  %478 = @func_16434() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) */;
  %479 = @func_13754() /* ty=(Tensor[(7, 8, 13), int16], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) */;
  %480 = @func_17214() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), uint16], Tensor[(3, 9, 5), float64]) */;
  %481 = cast(%var_19892, dtype="float64") /* ty=Tensor[(210), float64] */;
  %482 = reshape(%481, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %483 = @func_6028(%482) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(210), float64]) */;
  %484 = %477.2;
  %485 = %478.2;
  %486 = %479.0;
  %487 = %480.2;
  %488 = %483.3;
  (%484, %485, %486, %487, %488, %var_19892)
}

def @func_6028(%var_6017: Tensor[(210), float64]) -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(210), float64]) {
  %489 = @func_5323() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %490 = cast(%var_6017, dtype="float64") /* ty=Tensor[(210), float64] */;
  %491 = reshape(%490, newshape=[210, 1]) /* ty=Tensor[(210, 1), float64] */;
  %492 = @func_5302(%491) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), uint16], Tensor[(210), float64], Tensor[(210, 1), float64], Tensor[(128), float32]) */;
  %493 = %489.0;
  %494 = @func_3345() /* ty=Tensor[(?, 8, 13), float32] */;
  %495 = %492.0;
  (%493, %494, %495, %var_6017)
}

def @func_6869() -> (Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(15, 210), bool], Tensor[(7, 8, 13), int16]) {
  @func_6867() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(15, 210), bool], Tensor[(7, 8, 13), int16]) */
}

def @func_7392() -> (Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) {
  %501 = fn () -> (Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) {
    %496 = @func_4746() /* ty=(Tensor[(?, 8, 13), float32],) */;
    %497 = @func_6655() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) */;
    %498 = @func_4153() /* ty=Tensor[(?, 8, 13), float32] */;
    %499 = %496.0;
    %500 = %497.1;
    (%498, %499, %500)
  };
  %501() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) */
}

def @func_10217() -> (Tensor[(?, 8, 13), float32],) {
  @func_10215() /* ty=(Tensor[(?, 8, 13), float32],) */
}

def @func_7538() -> Tensor[(3, 9, 5), float64] {
  %503 = fn () -> Tensor[(3, 9, 5), float64] {
    %502 = @func_3538() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) */;
    %502.0
  };
  %503() /* ty=Tensor[(3, 9, 5), float64] */
}

def @func_6276(%var_6274: Tensor[(128), float32], %var_6275: Tensor[(1, 210), float64]) -> (Tensor[(3, 9, 5), float32], Tensor[(?, 8, 13), bool], Tensor[(128), float32], Tensor[(1, 210), float64]) {
  %514 = fn (%var_6269: Tensor[(128), float32], %var_6270: Tensor[(1, 210), float64]) -> (Tensor[(3, 9, 5), float32], Tensor[(?, 8, 13), bool], Tensor[(128), float32], Tensor[(1, 210), float64]) {
    %504 = @func_4047() /* ty=(Tensor[(3, 9, 5), float64],) */;
    %505 = %504.0;
    %506 = cast(%505, dtype="float32") /* ty=Tensor[(3, 9, 5), float32] */;
    %507 = cast(%var_6269, dtype="float32") /* ty=Tensor[(128), float32] */;
    %508 = cast(%var_6270, dtype="float64") /* ty=Tensor[(1, 210), float64] */;
    %509 = reshape(%507, newshape=[4, 32]) /* ty=Tensor[(4, 32), float32] */;
    %510 = reshape(%508, newshape=[5, 42]) /* ty=Tensor[(5, 42), float64] */;
    %511 = @func_3241(%509, %510) /* ty=(Tensor[(?, 8, 13), bool], Tensor[(12, 15, 9), int8], Tensor[(1620), float32], Tensor[(4, 32), float32], Tensor[(5, 42), float64], Tensor[(3, 9, 5), float64]) */;
    %512 = log2(%506) /* ty=Tensor[(3, 9, 5), float32] */;
    %513 = %511.0;
    (%512, %513, %var_6269, %var_6270)
  };
  %514(%var_6274, %var_6275) /* ty=(Tensor[(3, 9, 5), float32], Tensor[(?, 8, 13), bool], Tensor[(128), float32], Tensor[(1, 210), float64]) */
}

def @func_2461() -> Tensor[(?, 8, 13), bool] {
  %516 = fn () -> Tensor[(?, 8, 13), bool] {
    %515 = @func_2384() /* ty=(Tensor[(10, 4, 6), int32], Tensor[(?, 8, 13), bool], Tensor[(1, 104), bool]) */;
    %515.1
  };
  %516() /* ty=Tensor[(?, 8, 13), bool] */
}

def @func_12510() -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(128), float32]) {
  @func_12508() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(128), float32]) */
}

def @func_19003() -> Tensor[(3, 9, 5), float64] {
  %517 = fn () -> Tensor[(3, 9, 5), float64] {
    @func_6283() /* ty=Tensor[(3, 9, 5), float64] */
  };
  %517() /* ty=Tensor[(3, 9, 5), float64] */
}

def @func_6187() -> (Tensor[(3, 9, 5), float64],) {
  @func_6185() /* ty=(Tensor[(3, 9, 5), float64],) */
}

def @func_17827(%var_17826: Tensor[(208), int16]) -> (Tensor[(?, 8, 13), float32], Tensor[(13, 16, 11), uint16], Tensor[(208), int16], Tensor[(1, 2288), int16]) {
  %528 = fn (%var_17810: Tensor[(208), int16]) -> (Tensor[(?, 8, 13), float32], Tensor[(13, 16, 11), uint16], Tensor[(208), int16], Tensor[(1, 2288), int16]) {
    %518 = @func_15865() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64]) */;
    %519 = cast(%var_17810, dtype="int16") /* ty=Tensor[(208), int16] */;
    %520 = cast(%var_17810, dtype="int16") /* ty=Tensor[(208), int16] */;
    %521 = cast(meta[relay.Constant][18] /* ty=Tensor[(1, 2288), int16] */, dtype="int16") /* ty=Tensor[(1, 2288), int16] */;
    %522 = reshape(%519, newshape=[13, 16, 1]) /* ty=Tensor[(13, 16, 1), int16] */;
    %523 = reshape(%520, newshape=[13, 16, 1]) /* ty=Tensor[(13, 16, 1), int16] */;
    %524 = reshape(%521, newshape=[13, 16, 11]) /* ty=Tensor[(13, 16, 11), int16] */;
    %525 = @func_447(%522, %523, %524) /* ty=(Tensor[(13, 16, ?), int16], Tensor[(13, 16, 11), uint16]) */;
    %526 = %518.0;
    %527 = %525.1;
    (%526, %527, %var_17810, meta[relay.Constant][18] /* ty=Tensor[(1, 2288), int16] */)
  };
  %528(%var_17826) /* ty=(Tensor[(?, 8, 13), float32], Tensor[(13, 16, 11), uint16], Tensor[(208), int16], Tensor[(1, 2288), int16]) */
}

def @func_7450() -> (Tensor[(3, 9, 5), float64],) {
  @func_7448() /* ty=(Tensor[(3, 9, 5), float64],) */
}

def @func_19662() -> (Tensor[(3, 9, 5), uint16],) {
  @func_19660() /* ty=(Tensor[(3, 9, 5), uint16],) */
}

def @func_18046() -> (Tensor[(3, 9, 5), float64],) {
  %529 = @func_15730() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %530 = %529.0;
  (%530,)
}

def @func_8087() -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(128), float32], Tensor[(7, 104), int16], Tensor[(128), float32]) {
  %531 = @func_4047() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %532 = @func_7229() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), int16], Tensor[(7, 8, 13), int16], Tensor[(3, 9, 5), float32], Tensor[(3, 9, 5), float64]) */;
  %533 = @func_5323() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %534 = cast(meta[relay.Constant][19] /* ty=Tensor[(7, 104), int16] */, dtype="int16") /* ty=Tensor[(7, 104), int16] */;
  %535 = cast(meta[relay.Constant][20] /* ty=Tensor[(128), float32] */, dtype="float32") /* ty=Tensor[(128), float32] */;
  %536 = reshape(%534, newshape=[728]) /* ty=Tensor[(728), int16] */;
  %537 = reshape(%535, newshape=[128]) /* ty=Tensor[(128), float32] */;
  %538 = @func_6396(%536, %537) /* ty=(Tensor[(?, 8, 13), float32], Tensor[(7, 8, 13), bool], Tensor[(728), int16], Tensor[(3, 9, 5), float64], Tensor[(128), float32], Tensor[(135), float64], Tensor[(3, 9, 5), float64]) */;
  %539 = %531.0;
  %540 = %532.4;
  %541 = %533.0;
  %542 = %538.4;
  (%539, %540, %541, %542, meta[relay.Constant][19] /* ty=Tensor[(7, 104), int16] */, meta[relay.Constant][20] /* ty=Tensor[(128), float32] */)
}

def @func_18321() -> Tensor[(135), float64] {
  @func_18319() /* ty=Tensor[(135), float64] */
}

def @func_17371() -> Tensor[(1, 4, 8), float32] {
  @func_17369() /* ty=Tensor[(1, 4, 8), float32] */
}

def @func_19236(%var_19234: Tensor[(2, 210), float64]) -> (Tensor[(?, 8, 13), float32], Tensor[(52, 2), bool], Tensor[(2, 210), bool]) {
  @func_19233(%var_19234) /* ty=(Tensor[(?, 8, 13), float32], Tensor[(52, 2), bool], Tensor[(2, 210), bool]) */
}

def @func_19660() -> (Tensor[(3, 9, 5), uint16],) {
  %543 = @func_13463() /* ty=(Tensor[(3, 9, 5), uint16],) */;
  %544 = %543.0;
  (%544,)
}

def @func_9336() -> Tensor[(3, 9, 5), float64] {
  @func_6283() /* ty=Tensor[(3, 9, 5), float64] */
}

def @func_3181() -> (Tensor[(3, 9, 5), float64],) {
  %547 = fn () -> (Tensor[(3, 9, 5), float64],) {
    %545 = @func_2839() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(7, 8, 13), int16]) */;
    %546 = %545.0;
    (%546,)
  };
  %547() /* ty=(Tensor[(3, 9, 5), float64],) */
}

def @func_4937() -> Tensor[(3, 9, 5), float64] {
  %548 = @func_4047() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %548.0
}

def @func_17153() -> (Tensor[(?, 8, 13), bool], Tensor[(3, 9, 5), float64]) {
  @func_17151() /* ty=(Tensor[(?, 8, 13), bool], Tensor[(3, 9, 5), float64]) */
}

def @func_6814() -> Tensor[(3, 9, 5), float64] {
  @func_2600() /* ty=Tensor[(3, 9, 5), float64] */
}

def @func_9181() -> (Tensor[(?, 8, 13), float32], Tensor[(7, 8, 13), bool], Tensor[(7, 104), int16]) {
  %555 = fn () -> (Tensor[(?, 8, 13), float32], Tensor[(7, 8, 13), bool], Tensor[(7, 104), int16]) {
    %549 = @func_6655() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) */;
    %550 = cast(meta[relay.Constant][21] /* ty=Tensor[(7, 104), int16] */, dtype="int16") /* ty=Tensor[(7, 104), int16] */;
    %551 = reshape(%550, newshape=[7, 8, 13]) /* ty=Tensor[(7, 8, 13), int16] */;
    %552 = @func_4292(%551) /* ty=(Tensor[(7, 8, 13), bool],) */;
    %553 = %549.0;
    %554 = %552.0;
    (%553, %554, meta[relay.Constant][21] /* ty=Tensor[(7, 104), int16] */)
  };
  %555() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(7, 8, 13), bool], Tensor[(7, 104), int16]) */
}

def @func_9828() -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), uint16]) {
  @func_9826() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), uint16]) */
}

def @func_15381() -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(210), float64]) {
  %556 = cast(meta[relay.Constant][22] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %557 = reshape(%556, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %558 = @func_6028(%557) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(210), float64]) */;
  %559 = @func_7537() /* ty=Tensor[(3, 9, 5), float64] */;
  %560 = %558.0;
  (%559, %560, meta[relay.Constant][22] /* ty=Tensor[(210), float64] */)
}

def @func_20537() -> (Tensor[(3, 9, 5), float64], Tensor[(7, 8, 13), int16]) {
  @func_20535() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(7, 8, 13), int16]) */
}

def @func_16528(%var_16515: int8, %var_16516: Tensor[(9, 13, 1), int8]) -> (Tensor[(9, 13, 1), int8],) {
  %561 = cast(%var_16515, dtype="int8") /* ty=int8 */;
  %562 = cast(%var_16516, dtype="int8") /* ty=Tensor[(9, 13, 1), int8] */;
  %563 = left_shift(%561, %562) /* ty=Tensor[(9, 13, 1), int8] */;
  (%563,)
}

def @func_4359() -> Tensor[(?, 8, 13), float32] {
  %564 = @func_4175() /* ty=(Tensor[(?, 8, 13), float32],) */;
  %564.0
}

def @func_17101() -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) {
  @func_17099() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) */
}

def @func_17290() -> (Tensor[(3, 9, 5), float64],) {
  %567 = fn () -> (Tensor[(3, 9, 5), float64],) {
    %565 = @func_6499() /* ty=(Tensor[(3, 9, 5), float64],) */;
    %566 = %565.0;
    (%566,)
  };
  %567() /* ty=(Tensor[(3, 9, 5), float64],) */
}

def @func_3606() -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), bool]) {
  %570 = fn () -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), bool]) {
    %568 = @func_2600() /* ty=Tensor[(3, 9, 5), float64] */;
    %569 = @func_2460() /* ty=Tensor[(?, 8, 13), bool] */;
    (%568, %569)
  };
  %570() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), bool]) */
}

def @func_7230() -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), int16], Tensor[(7, 8, 13), int16], Tensor[(3, 9, 5), float32], Tensor[(3, 9, 5), float64]) {
  %585 = fn () -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), int16], Tensor[(7, 8, 13), int16], Tensor[(3, 9, 5), float32], Tensor[(3, 9, 5), float64]) {
    %571 = @func_4184() /* ty=(Tensor[(3, 9, 5), float64],) */;
    %572 = %571.0;
    %573 = cast(meta[relay.Constant][23] /* ty=Tensor[(3, 9, 5), float64] */, dtype="int16") /* ty=Tensor[(3, 9, 5), int16] */;
    %574 = shape_of(%572, dtype="int32") /* ty=Tensor[(3), int32] */;
    %575 = cast(%572, dtype="int16") /* ty=Tensor[(3, 9, 5), int16] */;
    %576 = dyn.reshape(%573, %574, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %577 = @func_4095() /* ty=(Tensor[(7, 8, 13), int16],) */;
    %578 = cast(%572, dtype="float32") /* ty=Tensor[(3, 9, 5), float32] */;
    %579 = @func_6607() /* ty=(Tensor[(3, 9, 5), float64],) */;
    %580 = @func_6814() /* ty=Tensor[(3, 9, 5), float64] */;
    %581 = add(%575, %576) /* ty=Tensor[(3, 9, 5), int16] */;
    %582 = %577.0;
    %583 = cosh(%578) /* ty=Tensor[(3, 9, 5), float32] */;
    %584 = %579.0;
    (%580, %581, %582, %583, %584)
  };
  %585() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), int16], Tensor[(7, 8, 13), int16], Tensor[(3, 9, 5), float32], Tensor[(3, 9, 5), float64]) */
}

def @func_5325() -> (Tensor[(3, 9, 5), float64],) {
  @func_5323() /* ty=(Tensor[(3, 9, 5), float64],) */
}

def @func_9531() -> Tensor[(?, 8, 13), float32] {
  %587 = fn () -> Tensor[(?, 8, 13), float32] {
    %586 = @func_6867() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(15, 210), bool], Tensor[(7, 8, 13), int16]) */;
    %586.0
  };
  %587() /* ty=Tensor[(?, 8, 13), float32] */
}

def @func_8089() -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(128), float32], Tensor[(7, 104), int16], Tensor[(128), float32]) {
  @func_8087() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(128), float32], Tensor[(7, 104), int16], Tensor[(128), float32]) */
}

def @func_11974() -> (Tensor[(3, 9, 5), float64],) {
  %588 = @func_6411() /* ty=Tensor[(3, 9, 5), float64] */;
  (%588,)
}

def @func_18867() -> (Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), uint16]) {
  %589 = @func_7391() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) */;
  %590 = @func_16945() /* ty=(Tensor[(3, 9, 5), uint16],) */;
  %591 = %589.1;
  %592 = %590.0;
  (%591, %592)
}

def @func_9711() -> (Tensor[(3, 9, 5), float64], Tensor[(2, 7, 15), float64]) {
  %593 = @func_8665() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %594 = %593.0;
  %595 = @func_9276() /* ty=Tensor[(2, 7, 15), float64] */;
  (%594, %595)
}

def @func_13043() -> Tensor[(3, 9, 5), float64] {
  %597 = fn () -> Tensor[(3, 9, 5), float64] {
    %596 = @func_8665() /* ty=(Tensor[(3, 9, 5), float64],) */;
    %596.0
  };
  %597() /* ty=Tensor[(3, 9, 5), float64] */
}

def @func_4186() -> (Tensor[(3, 9, 5), float64],) {
  @func_4184() /* ty=(Tensor[(3, 9, 5), float64],) */
}

def @func_8929() -> Tensor[(3, 9, 5), uint16] {
  %598 = fn () -> Tensor[(3, 9, 5), uint16] {
    @func_3330() /* ty=Tensor[(3, 9, 5), uint16] */
  };
  %598() /* ty=Tensor[(3, 9, 5), uint16] */
}

def @func_19517(%var_19500: Tensor[(8, 13, 8), float32]) -> (Tensor[(8, 13, 8), float32], Tensor[(3, 9, 5), float64]) {
  %599 = cast(%var_19500, dtype="float32") /* ty=Tensor[(8, 13, 8), float32] */;
  %600 = sqrt(%599) /* ty=Tensor[(8, 13, 8), float32] */;
  %601 = @func_8893() /* ty=Tensor[(3, 9, 5), float64] */;
  (%600, %601)
}

def @func_20636() -> Tensor[(7, 8, 13), int16] {
  %603 = fn () -> Tensor[(7, 8, 13), int16] {
    %602 = @func_12552() /* ty=(Tensor[(7, 8, 13), int16],) */;
    %602.0
  };
  %603() /* ty=Tensor[(7, 8, 13), int16] */
}

def @func_21136(%var_21134: Tensor[(2, 64), float32], %var_21135: Tensor[(252), float32]) -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), bool], Tensor[(104), bool], Tensor[(2, 64), float32], Tensor[(7, 9, 4), float32], Tensor[(252), float32], Tensor[(?, 8, 13), bool], Tensor[(3, 9, 5), float64]) {
  %624 = fn (%var_21089: Tensor[(2, 64), float32], %var_21093: Tensor[(252), float32]) -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), bool], Tensor[(104), bool], Tensor[(2, 64), float32], Tensor[(7, 9, 4), float32], Tensor[(252), float32], Tensor[(?, 8, 13), bool], Tensor[(3, 9, 5), float64]) {
    %604 = cast(%var_21089, dtype="float32") /* ty=Tensor[(2, 64), float32] */;
    %605 = @func_14298() /* ty=Tensor[(3, 9, 5), float64] */;
    %606 = cast(%605, dtype="float64") /* ty=Tensor[(3, 9, 5), float64] */;
    %607 = reshape(%604, newshape=[128]) /* ty=Tensor[(128), float32] */;
    %608 = reshape(%606, newshape=[3, 45]) /* ty=Tensor[(3, 45), float64] */;
    %609 = @func_12207(%607, %608) /* ty=(Tensor[(7, 8, 13), int16], Tensor[(?, 8, 13), bool], Tensor[(128), float32], Tensor[(3, 45), float64], Tensor[(104), bool]) */;
    %610 = cast(%var_21093, dtype="float32") /* ty=Tensor[(252), float32] */;
    %611 = reshape(%610, newshape=[7, 9, 4]) /* ty=Tensor[(7, 9, 4), float32] */;
    %612 = @func_13619(%611) /* ty=(Tensor[(7, 9, 4), float32], Tensor[(2, 7, 15), uint8], Tensor[(210), float64], Tensor[(?, 8, 13), float32], Tensor[(7, 9, 4), float32]) */;
    %613 = %609.4;
    %614 = cast(%613, dtype="bool") /* ty=Tensor[(104), bool] */;
    %615 = cast(%613, dtype="bool") /* ty=Tensor[(104), bool] */;
    %616 = reshape(%614, newshape=[1, 8, 13]) /* ty=Tensor[(1, 8, 13), bool] */;
    %617 = reshape(%615, newshape=[1, 8, 13]) /* ty=Tensor[(1, 8, 13), bool] */;
    %618 = @func_1635(%616, %617) /* ty=(Tensor[(?, 8, 13), bool],) */;
    %619 = @func_7341() /* ty=(Tensor[(3, 9, 5), float64],) */;
    %620 = @func_2460() /* ty=Tensor[(?, 8, 13), bool] */;
    %621 = %612.0;
    %622 = %618.0;
    %623 = %619.0;
    (%605, %620, %613, %var_21089, %621, %var_21093, %622, %623)
  };
  %624(%var_21134, %var_21135) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), bool], Tensor[(104), bool], Tensor[(2, 64), float32], Tensor[(7, 9, 4), float32], Tensor[(252), float32], Tensor[(?, 8, 13), bool], Tensor[(3, 9, 5), float64]) */
}

def @func_13832() -> (Tensor[(3, 9, 5), float64], Tensor[(2, 7, 15), float64], Tensor[(3, 9, 5), uint16]) {
  @func_13830() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(2, 7, 15), float64], Tensor[(3, 9, 5), uint16]) */
}

def @func_17627() -> (Tensor[(1620), float32],) {
  %625 = @func_11440() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(128), float32], Tensor[(1620), float32]) */;
  %626 = %625.2;
  (%626,)
}

def @func_13619(%var_13555: Tensor[(7, 9, 4), float32]) -> (Tensor[(7, 9, 4), float32], Tensor[(2, 7, 15), uint8], Tensor[(210), float64], Tensor[(?, 8, 13), float32], Tensor[(7, 9, 4), float32]) {
  %627 = cast(%var_13555, dtype="float32") /* ty=Tensor[(7, 9, 4), float32] */;
  %628 = atan(%627) /* ty=Tensor[(7, 9, 4), float32] */;
  %629 = cast(%628, dtype="float32") /* ty=Tensor[(7, 9, 4), float32] */;
  %630 = cast(meta[relay.Constant][24] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %631 = reshape(%630, newshape=[2, 7, 15]) /* ty=Tensor[(2, 7, 15), float64] */;
  %632 = @func_4746() /* ty=(Tensor[(?, 8, 13), float32],) */;
  %633 = cast(%628, dtype="float32") /* ty=Tensor[(7, 9, 4), float32] */;
  %634 = atanh(%629) /* ty=Tensor[(7, 9, 4), float32] */;
  %635 = @func_3760(%631) /* ty=Tensor[(2, 7, 15), uint8] */;
  %636 = %632.0;
  %637 = sqrt(%633) /* ty=Tensor[(7, 9, 4), float32] */;
  (%634, %635, meta[relay.Constant][24] /* ty=Tensor[(210), float64] */, %636, %637)
}

def @func_17532() -> (Tensor[(3, 9, 5), float64],) {
  %640 = fn () -> (Tensor[(3, 9, 5), float64],) {
    %638 = @func_7948() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) */;
    %639 = %638.1;
    (%639,)
  };
  %640() /* ty=(Tensor[(3, 9, 5), float64],) */
}

def @func_18248() -> (Tensor[(?, 8, 13), bool],) {
  %641 = @func_6994() /* ty=Tensor[(?, 8, 13), bool] */;
  (%641,)
}

def @func_20723() -> (Tensor[(2, 7, 15), float64],) {
  %642 = @func_17759() /* ty=Tensor[(2, 7, 15), float64] */;
  (%642,)
}

def @func_4535() -> Tensor[(?, 8, 13), float32] {
  @func_4533() /* ty=Tensor[(?, 8, 13), float32] */
}

def @func_14186(%var_14184: Tensor[(16, 8, 13), float32]) -> (Tensor[(3, 9, 5), float64], Tensor[(16, 8, 13), bool], Tensor[(16, 8, 13), float64]) {
  @func_14183(%var_14184) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(16, 8, 13), bool], Tensor[(16, 8, 13), float64]) */
}

def @func_18319() -> Tensor[(135), float64] {
  %643 = @func_2504() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(135), float64]) */;
  %643.2
}

def @func_20041(%var_20026: Tensor[(11, 11, 11), float32]) -> Tensor[(11, 11, 11), bool] {
  %644 = @func_16238() /* ty=(Tensor[(11, 11, 11), float32], Tensor[(?, 8, 13), bool]) */;
  %645 = %644.0;
  %646 = cast(%var_20026, dtype="bool") /* ty=Tensor[(11, 11, 11), bool] */;
  %647 = shape_of(%645, dtype="int32") /* ty=Tensor[(3), int32] */;
  %648 = cast(%645, dtype="bool") /* ty=Tensor[(11, 11, 11), bool] */;
  %649 = dyn.reshape(%646, %647, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%648, %649) /* ty=Tensor[(11, 11, 11), bool] */
}

def @func_17005() -> (Tensor[(3, 9, 5), float64],) {
  %650 = @func_13998() /* ty=Tensor[(3, 9, 5), float64] */;
  (%650,)
}

def @func_14591(%var_14589: uint16) -> (Tensor[(12, 12, 15), uint16],) {
  @func_14588(%var_14589) /* ty=(Tensor[(12, 12, 15), uint16],) */
}

def @func_14183(%var_14157: Tensor[(16, 8, 13), float32]) -> (Tensor[(3, 9, 5), float64], Tensor[(16, 8, 13), bool], Tensor[(16, 8, 13), float64]) {
  %651 = @func_12772() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) */;
  %652 = %651.2;
  %653 = cast(%652, dtype="bool") /* ty=Tensor[(?, 8, 13), bool] */;
  %654 = cast(%var_14157, dtype="bool") /* ty=Tensor[(16, 8, 13), bool] */;
  %655 = cast(%652, dtype="float64") /* ty=Tensor[(?, 8, 13), float64] */;
  %656 = cast(%var_14157, dtype="float64") /* ty=Tensor[(16, 8, 13), float64] */;
  %657 = @func_13042() /* ty=Tensor[(3, 9, 5), float64] */;
  %658 = greater(%653, %654) /* ty=Tensor[(16, 8, 13), bool] */;
  %659 = floor_mod(%655, %656) /* ty=Tensor[(16, 8, 13), float64] */;
  (%657, %658, %659)
}

def @func_17099() -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) {
  %660 = @func_7341() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %661 = @func_10357() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %662 = %660.0;
  %663 = %661.0;
  (%662, %663)
}

def @func_3386() -> Tensor[(7, 8, 13), int16] {
  %664 = @func_2839() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(7, 8, 13), int16]) */;
  %664.1
}

def @func_20725() -> (Tensor[(2, 7, 15), float64],) {
  @func_20723() /* ty=(Tensor[(2, 7, 15), float64],) */
}

def @func_21334() -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) {
  @func_21332() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) */
}

def @func_8532() -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), bool]) {
  %670 = fn () -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), bool]) {
    %665 = @func_8030() /* ty=(Tensor[(4, 8, 13), int16], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) */;
    %666 = @func_7341() /* ty=(Tensor[(3, 9, 5), float64],) */;
    %667 = %665.2;
    %668 = %666.0;
    %669 = @func_6994() /* ty=Tensor[(?, 8, 13), bool] */;
    (%667, %668, %669)
  };
  %670() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), bool]) */
}

def @func_9661() -> (Tensor[(3, 9, 5), uint16],) {
  %672 = fn () -> (Tensor[(3, 9, 5), uint16],) {
    %671 = @func_5807() /* ty=Tensor[(3, 9, 5), uint16] */;
    (%671,)
  };
  %672() /* ty=(Tensor[(3, 9, 5), uint16],) */
}

def @func_9912() -> (Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) {
  %673 = @func_4746() /* ty=(Tensor[(?, 8, 13), float32],) */;
  %674 = @func_9760() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %675 = %673.0;
  %676 = %674.0;
  (%675, %676)
}

def @func_14992(%var_14976: Tensor[(1620), float32]) -> (Tensor[(3, 9, 5), uint16], Tensor[(?, 8, 13), bool], Tensor[(?, 8, 13), float32], Tensor[(1620), float32], Tensor[(3, 9, 5), float64]) {
  %677 = @func_3672() /* ty=(Tensor[(3, 9, 5), uint16],) */;
  %678 = @func_12926() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), bool]) */;
  %679 = cast(%var_14976, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %680 = reshape(%679, newshape=[1620]) /* ty=Tensor[(1620), float32] */;
  %681 = @func_9580(%680) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(128), float32], Tensor[(1620), float32], Tensor[(3, 9, 5), uint16]) */;
  %682 = %677.0;
  %683 = %678.2;
  %684 = %681.1;
  %685 = @func_14298() /* ty=Tensor[(3, 9, 5), float64] */;
  (%682, %683, %684, %var_14976, %685)
}

def @func_5215() -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), bool]) {
  %692 = fn () -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), bool]) {
    %686 = @func_4937() /* ty=Tensor[(3, 9, 5), float64] */;
    %687 = cast(%686, dtype="float64") /* ty=Tensor[(3, 9, 5), float64] */;
    %688 = reshape(%687, newshape=[3, 9, 5]) /* ty=Tensor[(3, 9, 5), float64] */;
    %689 = @func_576(%688) /* ty=(Tensor[(3, 9, 5), float64],) */;
    %690 = %689.0;
    %691 = @func_2460() /* ty=Tensor[(?, 8, 13), bool] */;
    (%686, %690, %691)
  };
  %692() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), bool]) */
}

def @func_8954() -> (Tensor[(?, 8, 13), bool],) {
  %693 = @func_8531() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), bool]) */;
  %694 = %693.2;
  (%694,)
}

def @func_6185() -> (Tensor[(3, 9, 5), float64],) {
  %695 = @func_4184() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %696 = %695.0;
  (%696,)
}

def @func_11656() -> (Tensor[(?, 8, 13), float32],) {
  %697 = @func_2447() /* ty=(Tensor[(?, 8, 13), float32],) */;
  %698 = %697.0;
  (%698,)
}

def @func_13202() -> Tensor[(?, 8, 13), bool] {
  %700 = fn () -> Tensor[(?, 8, 13), bool] {
    %699 = @func_8531() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), bool]) */;
    %699.2
  };
  %700() /* ty=Tensor[(?, 8, 13), bool] */
}

def @func_20708() -> (Tensor[(?, 8, 13), float32],) {
  %701 = @func_2447() /* ty=(Tensor[(?, 8, 13), float32],) */;
  %702 = %701.0;
  (%702,)
}

def @func_14803() -> (Tensor[(?, 8, 13), bool], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) {
  @func_14801() /* ty=(Tensor[(?, 8, 13), bool], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) */
}

def @func_15731() -> (Tensor[(3, 9, 5), float64],) {
  %705 = fn () -> (Tensor[(3, 9, 5), float64],) {
    %703 = @func_10565() /* ty=(Tensor[(3, 9, 5), float64],) */;
    %704 = %703.0;
    (%704,)
  };
  %705() /* ty=(Tensor[(3, 9, 5), float64],) */
}

def @func_21332() -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) {
  %706 = @func_17005() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %707 = %706.0;
  %708 = @func_18535() /* ty=Tensor[(?, 8, 13), float32] */;
  (%707, %708)
}

def @func_18250() -> (Tensor[(?, 8, 13), bool],) {
  @func_18248() /* ty=(Tensor[(?, 8, 13), bool],) */
}

def @func_14448() -> (Tensor[(7, 8, 13), int16],) {
  %709 = @func_4095() /* ty=(Tensor[(7, 8, 13), int16],) */;
  %710 = %709.0;
  (%710,)
}

def @func_2762(%var_2760: Tensor[(210), float64]) -> (Tensor[(?, 8, 13), bool], Tensor[(52, 2), bool], Tensor[(1620), float32], Tensor[(128), float32], Tensor[(210), float64]) {
  @func_2759(%var_2760) /* ty=(Tensor[(?, 8, 13), bool], Tensor[(52, 2), bool], Tensor[(1620), float32], Tensor[(128), float32], Tensor[(210), float64]) */
}

def @func_3141() -> Tensor[(3, 9, 5), float64] {
  %711 = @func_2504() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(135), float64]) */;
  %711.1
}

def @func_7757() -> Tensor[(?, 8, 13), float32] {
  %712 = @func_4521() /* ty=(Tensor[(?, 8, 13), float32],) */;
  %712.0
}

def @func_9762() -> (Tensor[(3, 9, 5), float64],) {
  @func_9760() /* ty=(Tensor[(3, 9, 5), float64],) */
}

def @func_15015() -> Tensor[(3, 9, 5), float64] {
  %714 = fn () -> Tensor[(3, 9, 5), float64] {
    %713 = @func_8665() /* ty=(Tensor[(3, 9, 5), float64],) */;
    %713.0
  };
  %714() /* ty=Tensor[(3, 9, 5), float64] */
}

def @func_5323() -> (Tensor[(3, 9, 5), float64],) {
  %715 = @func_4047() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %716 = %715.0;
  (%716,)
}

def @func_6413() -> Tensor[(3, 9, 5), float64] {
  @func_6411() /* ty=Tensor[(3, 9, 5), float64] */
}

def @func_13622(%var_13620: Tensor[(7, 9, 4), float32]) -> (Tensor[(7, 9, 4), float32], Tensor[(2, 7, 15), uint8], Tensor[(210), float64], Tensor[(?, 8, 13), float32], Tensor[(7, 9, 4), float32]) {
  @func_13619(%var_13620) /* ty=(Tensor[(7, 9, 4), float32], Tensor[(2, 7, 15), uint8], Tensor[(210), float64], Tensor[(?, 8, 13), float32], Tensor[(7, 9, 4), float32]) */
}

def @func_5740() -> (Tensor[(?, 8, 13), float32],) {
  %717 = @func_4349() /* ty=Tensor[(?, 8, 13), float32] */;
  (%717,)
}

def @func_11562() -> Tensor[(1, 4, 8), float32] {
  %719 = fn () -> Tensor[(1, 4, 8), float32] {
    %718 = cast(meta[relay.Constant][25] /* ty=Tensor[(1, 4, 8), float32] */, dtype="float32") /* ty=Tensor[(1, 4, 8), float32] */;
    cosh(%718) /* ty=Tensor[(1, 4, 8), float32] */
  };
  %719() /* ty=Tensor[(1, 4, 8), float32] */
}

def @func_18429() -> (Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), uint16], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) {
  %728 = fn () -> (Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), uint16], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) {
    %720 = @func_10184() /* ty=(Tensor[(?, 8, 13), float32],) */;
    %721 = @func_16945() /* ty=(Tensor[(3, 9, 5), uint16],) */;
    %722 = @func_6499() /* ty=(Tensor[(3, 9, 5), float64],) */;
    %723 = %720.0;
    %724 = @func_17589() /* ty=Tensor[(?, 8, 13), float32] */;
    %725 = %721.0;
    %726 = %722.0;
    %727 = @func_4705() /* ty=Tensor[(3, 9, 5), float64] */;
    (%723, %724, %725, %726, %727)
  };
  %728() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), uint16], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) */
}

def @func_18885() -> (Tensor[(1620), float32],) {
  %729 = @func_17627() /* ty=(Tensor[(1620), float32],) */;
  %730 = %729.0;
  (%730,)
}

def @func_20613() -> Tensor[(?, 8, 13), float32] {
  %732 = fn () -> Tensor[(?, 8, 13), float32] {
    %731 = @func_19324() /* ty=(Tensor[(?, 8, 13), float32],) */;
    %731.0
  };
  %732() /* ty=Tensor[(?, 8, 13), float32] */
}

def @func_19762() -> (Tensor[(3, 9, 5), uint16],) {
  %735 = fn () -> (Tensor[(3, 9, 5), uint16],) {
    %733 = @func_14443() /* ty=(Tensor[(3, 9, 5), uint16],) */;
    %734 = %733.0;
    (%734,)
  };
  %735() /* ty=(Tensor[(3, 9, 5), uint16],) */
}

def @func_9398() -> (Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) {
  %740 = fn () -> (Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) {
    %736 = @func_5740() /* ty=(Tensor[(?, 8, 13), float32],) */;
    %737 = @func_5740() /* ty=(Tensor[(?, 8, 13), float32],) */;
    %738 = %736.0;
    %739 = %737.0;
    (%738, %739)
  };
  %740() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) */
}

def @func_10983() -> (Tensor[(3, 9, 5), uint16],) {
  %743 = fn () -> (Tensor[(3, 9, 5), uint16],) {
    %741 = @func_10811() /* ty=(Tensor[(3, 9, 5), uint16],) */;
    %742 = %741.0;
    (%742,)
  };
  %743() /* ty=(Tensor[(3, 9, 5), uint16],) */
}

def @func_7179() -> (Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(864), uint64], Tensor[(?, 8, 13), float32]) {
  %757 = fn () -> (Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(864), uint64], Tensor[(?, 8, 13), float32]) {
    %744 = @func_5740() /* ty=(Tensor[(?, 8, 13), float32],) */;
    %745 = cast(meta[relay.Constant][26] /* ty=Tensor[(864), uint64] */, dtype="uint64") /* ty=Tensor[(864), uint64] */;
    %746 = cast(meta[relay.Constant][26] /* ty=Tensor[(864), uint64] */, dtype="uint64") /* ty=Tensor[(864), uint64] */;
    %747 = @func_6283() /* ty=Tensor[(3, 9, 5), float64] */;
    %748 = cast(%747, dtype="float64") /* ty=Tensor[(3, 9, 5), float64] */;
    %749 = reshape(%745, newshape=[6, 9, 16]) /* ty=Tensor[(6, 9, 16), uint64] */;
    %750 = reshape(%746, newshape=[6, 9, 16]) /* ty=Tensor[(6, 9, 16), uint64] */;
    %751 = reshape(%748, newshape=[135]) /* ty=Tensor[(135), float64] */;
    %752 = @func_5045(%749, %750, %751) /* ty=(Tensor[(6, 9, 16), bool], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(135), float64]) */;
    %753 = @func_5740() /* ty=(Tensor[(?, 8, 13), float32],) */;
    %754 = %744.0;
    %755 = %752.4;
    %756 = %753.0;
    (%754, %747, %755, meta[relay.Constant][26] /* ty=Tensor[(864), uint64] */, %756)
  };
  %757() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(864), uint64], Tensor[(?, 8, 13), float32]) */
}

def @func_9897() -> (Tensor[(3, 9, 5), float64],) {
  %758 = @func_8665() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %759 = %758.0;
  (%759,)
}

def @func_20338() -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) {
  %763 = fn () -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) {
    %760 = @func_16771() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(2, 7, 15), float64]) */;
    %761 = %760.0;
    %762 = @func_4359() /* ty=Tensor[(?, 8, 13), float32] */;
    (%761, %762)
  };
  %763() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) */
}

def @func_16771() -> (Tensor[(3, 9, 5), float64], Tensor[(2, 7, 15), float64]) {
  %764 = @func_9613() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) */;
  %765 = @func_2581() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64], Tensor[(105, 2), float64], Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64]) */;
  %766 = %764.0;
  %767 = %765.4;
  (%766, %767)
}

def @func_19628() -> (Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) {
  %770 = fn () -> (Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) {
    %768 = @func_4953() /* ty=Tensor[(?, 8, 13), float32] */;
    %769 = @func_14298() /* ty=Tensor[(3, 9, 5), float64] */;
    (%768, %769)
  };
  %770() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) */
}

def @func_17369() -> Tensor[(1, 4, 8), float32] {
  @func_11561() /* ty=Tensor[(1, 4, 8), float32] */
}

def @func_7759() -> Tensor[(?, 8, 13), float32] {
  @func_7757() /* ty=Tensor[(?, 8, 13), float32] */
}

def @func_10241() -> (Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) {
  @func_10239() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) */
}

def @func_11342() -> (Tensor[(?, 8, 13), bool],) {
  @func_11340() /* ty=(Tensor[(?, 8, 13), bool],) */
}

def @func_6816() -> Tensor[(3, 9, 5), float64] {
  @func_6814() /* ty=Tensor[(3, 9, 5), float64] */
}

def @func_5784() -> (Tensor[(?, 8, 13), float32], Tensor[(1620), float32], Tensor[(210), float64], Tensor[(?, 8, 13), float32]) {
  %771 = @func_4349() /* ty=Tensor[(?, 8, 13), float32] */;
  %772 = cast(meta[relay.Constant][27] /* ty=Tensor[(1, 8, 13), float32] */, dtype="uint64") /* ty=Tensor[(1, 8, 13), uint64] */;
  %773 = shape_of(%771, dtype="int32") /* ty=Tensor[(3), int32] */;
  %774 = cast(%771, dtype="uint64") /* ty=Tensor[(?, 8, 13), uint64] */;
  %775 = dyn.reshape(%772, %773, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %776 = bitwise_xor(%774, %775) /* ty=Tensor[(?, 8, 13), uint64] */;
  %777 = cast(%776, dtype="float32") /* ty=Tensor[(?, 8, 13), float32] */;
  %778 = cast(meta[relay.Constant][28] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %779 = reshape(%778, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %780 = @func_2759(%779) /* ty=(Tensor[(?, 8, 13), bool], Tensor[(52, 2), bool], Tensor[(1620), float32], Tensor[(128), float32], Tensor[(210), float64]) */;
  %781 = sigmoid(%777) /* ty=Tensor[(?, 8, 13), float32] */;
  %782 = %780.2;
  %783 = @func_4359() /* ty=Tensor[(?, 8, 13), float32] */;
  (%781, %782, meta[relay.Constant][28] /* ty=Tensor[(210), float64] */, %783)
}

def @func_11441() -> (Tensor[(3, 9, 5), float64], Tensor[(128), float32], Tensor[(1620), float32]) {
  %789 = fn () -> (Tensor[(3, 9, 5), float64], Tensor[(128), float32], Tensor[(1620), float32]) {
    %784 = cast(meta[relay.Constant][29] /* ty=Tensor[(1620), float32] */, dtype="float32") /* ty=Tensor[(1620), float32] */;
    %785 = reshape(%784, newshape=[1620]) /* ty=Tensor[(1620), float32] */;
    %786 = @func_9580(%785) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(128), float32], Tensor[(1620), float32], Tensor[(3, 9, 5), uint16]) */;
    %787 = @func_6411() /* ty=Tensor[(3, 9, 5), float64] */;
    %788 = %786.2;
    (%787, %788, meta[relay.Constant][29] /* ty=Tensor[(1620), float32] */)
  };
  %789() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(128), float32], Tensor[(1620), float32]) */
}

def @func_11223() -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) {
  %790 = @func_7448() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %791 = @func_3180() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %792 = %790.0;
  %793 = %791.0;
  (%792, %793)
}

def @func_3330() -> Tensor[(3, 9, 5), uint16] {
  %794 = @func_3180() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %795 = %794.0;
  %796 = cast(meta[relay.Constant][30] /* ty=Tensor[(3, 9, 5), float64] */, dtype="uint16") /* ty=Tensor[(3, 9, 5), uint16] */;
  %797 = shape_of(%795, dtype="int32") /* ty=Tensor[(3), int32] */;
  %798 = cast(%795, dtype="uint16") /* ty=Tensor[(3, 9, 5), uint16] */;
  %799 = dyn.reshape(%796, %797, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  logical_xor(%798, %799) /* ty=Tensor[(3, 9, 5), uint16] */
}

def @func_5049(%var_5046: Tensor[(6, 9, 16), uint64], %var_5047: Tensor[(6, 9, 16), uint64], %var_5048: Tensor[(135), float64]) -> (Tensor[(6, 9, 16), bool], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(135), float64]) {
  %813 = fn (%var_4985: Tensor[(6, 9, 16), uint64], %var_4986: Tensor[(6, 9, 16), uint64], %var_5042: Tensor[(135), float64]) -> (Tensor[(6, 9, 16), bool], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(135), float64]) {
    %800 = cast(%var_4986, dtype="bool") /* ty=Tensor[(6, 9, 16), bool] */;
    %801 = shape_of(%var_4985, dtype="int32") /* ty=Tensor[(3), int32] */;
    %802 = cast(%var_4985, dtype="bool") /* ty=Tensor[(6, 9, 16), bool] */;
    %803 = dyn.reshape(%800, %801, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %804 = @func_4259() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) */;
    %805 = cast(%var_5042, dtype="float64") /* ty=Tensor[(135), float64] */;
    %806 = reshape(%805, newshape=[3, 9, 5]) /* ty=Tensor[(3, 9, 5), float64] */;
    %807 = @func_576(%806) /* ty=(Tensor[(3, 9, 5), float64],) */;
    %808 = equal(%802, %803) /* ty=Tensor[(6, 9, 16), bool] */;
    %809 = @func_4953() /* ty=Tensor[(?, 8, 13), float32] */;
    %810 = @func_3345() /* ty=Tensor[(?, 8, 13), float32] */;
    %811 = %804.0;
    %812 = %807.0;
    (%808, %809, %810, %811, %812, %var_5042)
  };
  %813(%var_5046, %var_5047, %var_5048) /* ty=(Tensor[(6, 9, 16), bool], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(135), float64]) */
}

def @func_16167() -> (Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(540, 3), float64], Tensor[(?, 8, 13), float32]) {
  %814 = @func_4184() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %815 = cast(meta[relay.Constant][31] /* ty=Tensor[(270, 6), float32] */, dtype="float32") /* ty=Tensor[(270, 6), float32] */;
  %816 = reshape(%815, newshape=[540, 3]) /* ty=Tensor[(540, 3), float32] */;
  %817 = @func_12263(%816) /* ty=(Tensor[(?, 8, 13), float32], Tensor[(1620), float32], Tensor[(35, 6), float64], Tensor[(540, 3), float32]) */;
  %818 = %817.3;
  %819 = cast(meta[relay.Constant][31] /* ty=Tensor[(270, 6), float32] */, dtype="float64") /* ty=Tensor[(270, 6), float64] */;
  %820 = shape_of(%818, dtype="int32") /* ty=Tensor[(2), int32] */;
  %821 = cast(%818, dtype="float64") /* ty=Tensor[(540, 3), float64] */;
  %822 = dyn.reshape(%819, %820, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %823 = @func_12772() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) */;
  %824 = @func_14340() /* ty=Tensor[(?, 8, 13), float32] */;
  %825 = %814.0;
  %826 = @func_13998() /* ty=Tensor[(3, 9, 5), float64] */;
  %827 = power(%821, %822) /* ty=Tensor[(540, 3), float64] */;
  %828 = %823.1;
  (%824, %825, %826, %827, %828)
}

def @func_4611() -> (Tensor[(3, 9, 5), float64],) {
  @func_4609() /* ty=(Tensor[(3, 9, 5), float64],) */
}

def @func_9878() -> (Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) {
  %832 = fn () -> (Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) {
    %829 = @func_8531() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), bool]) */;
    %830 = @func_4471() /* ty=Tensor[(?, 8, 13), float32] */;
    %831 = %829.1;
    (%830, %831)
  };
  %832() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) */
}

def @func_15971(%var_15970: Tensor[(128), float32]) -> (Tensor[(128), float32], Tensor[(3, 45), float64], Tensor[(3, 9, 5), uint16]) {
  %846 = fn (%var_15939: Tensor[(128), float32]) -> (Tensor[(128), float32], Tensor[(3, 45), float64], Tensor[(3, 9, 5), uint16]) {
    %833 = cast(%var_15939, dtype="float32") /* ty=Tensor[(128), float32] */;
    %834 = reshape(%833, newshape=[128]) /* ty=Tensor[(128), float32] */;
    %835 = @func_12437(%834) /* ty=(Tensor[(?, 8, 13), bool], Tensor[(3, 45), float32], Tensor[(1620), float32], Tensor[(128), float32], Tensor[(3, 9, 5), float64]) */;
    %836 = %835.1;
    %837 = @func_8443() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) */;
    %838 = %837.1;
    %839 = cast(%838, dtype="float64") /* ty=Tensor[(3, 9, 5), float64] */;
    %840 = shape_of(%836, dtype="int32") /* ty=Tensor[(2), int32] */;
    %841 = cast(%836, dtype="float64") /* ty=Tensor[(3, 45), float64] */;
    %842 = dyn.reshape(%839, %840, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %843 = @func_14443() /* ty=(Tensor[(3, 9, 5), uint16],) */;
    %844 = mod(%841, %842) /* ty=Tensor[(3, 45), float64] */;
    %845 = %843.0;
    (%var_15939, %844, %845)
  };
  %846(%var_15970) /* ty=(Tensor[(128), float32], Tensor[(3, 45), float64], Tensor[(3, 9, 5), uint16]) */
}

def @func_17427(%var_17424: Tensor[(128), float32], %var_17425: Tensor[(210, 1), float64], %var_17426: Tensor[(128), float32]) -> (Tensor[(3, 9, 5), float64], Tensor[(128), float32], Tensor[(210, 1), float64], Tensor[(128), float32], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(1620), float32]) {
  %868 = fn (%var_17407: Tensor[(128), float32], %var_17408: Tensor[(210, 1), float64], %var_17411: Tensor[(128), float32]) -> (Tensor[(3, 9, 5), float64], Tensor[(128), float32], Tensor[(210, 1), float64], Tensor[(128), float32], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(1620), float32]) {
    %847 = @func_8665() /* ty=(Tensor[(3, 9, 5), float64],) */;
    %848 = cast(%var_17407, dtype="float32") /* ty=Tensor[(128), float32] */;
    %849 = cast(%var_17408, dtype="float64") /* ty=Tensor[(210, 1), float64] */;
    %850 = reshape(%848, newshape=[128]) /* ty=Tensor[(128), float32] */;
    %851 = reshape(%849, newshape=[1, 210]) /* ty=Tensor[(1, 210), float64] */;
    %852 = @func_6273(%850, %851) /* ty=(Tensor[(3, 9, 5), float32], Tensor[(?, 8, 13), bool], Tensor[(128), float32], Tensor[(1, 210), float64]) */;
    %853 = %852.2;
    %854 = cast(%var_17411, dtype="float32") /* ty=Tensor[(128), float32] */;
    %855 = shape_of(%853, dtype="int32") /* ty=Tensor[(1), int32] */;
    %856 = cast(%853, dtype="float32") /* ty=Tensor[(128), float32] */;
    %857 = dyn.reshape(%854, %855, newshape=[]) /* ty=Tensor[(?), float32] */;
    %858 = @func_4075() /* ty=(Tensor[(3, 9, 5), uint16], Tensor[(?, 8, 13), float32]) */;
    %859 = cast(%var_17408, dtype="float64") /* ty=Tensor[(210, 1), float64] */;
    %860 = cast(meta[relay.Constant][32] /* ty=Tensor[(1620), float32] */, dtype="float32") /* ty=Tensor[(1620), float32] */;
    %861 = reshape(%859, newshape=[210]) /* ty=Tensor[(210), float64] */;
    %862 = reshape(%860, newshape=[1620]) /* ty=Tensor[(1620), float32] */;
    %863 = @func_8179(%861, %862) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(210), float64], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) */;
    %864 = %847.0;
    %865 = power(%856, %857) /* ty=Tensor[(128), float32] */;
    %866 = %858.1;
    %867 = %863.0;
    (%864, %var_17407, %var_17408, %865, %866, %867, meta[relay.Constant][32] /* ty=Tensor[(1620), float32] */)
  };
  %868(%var_17424, %var_17425, %var_17426) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(128), float32], Tensor[(210, 1), float64], Tensor[(128), float32], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(1620), float32]) */
}

def @func_17556() -> (Tensor[(3, 9, 5), float64],) {
  %871 = fn () -> (Tensor[(3, 9, 5), float64],) {
    %869 = @func_4047() /* ty=(Tensor[(3, 9, 5), float64],) */;
    %870 = %869.0;
    (%870,)
  };
  %871() /* ty=(Tensor[(3, 9, 5), float64],) */
}

def @func_13001() -> Tensor[(3, 9, 5), float64] {
  @func_12999() /* ty=Tensor[(3, 9, 5), float64] */
}

def @func_10196() -> Tensor[(3, 9, 5), float64] {
  @func_10194() /* ty=Tensor[(3, 9, 5), float64] */
}

def @func_17761() -> Tensor[(2, 7, 15), float64] {
  @func_17759() /* ty=Tensor[(2, 7, 15), float64] */
}

def @func_8666() -> (Tensor[(3, 9, 5), float64],) {
  %874 = fn () -> (Tensor[(3, 9, 5), float64],) {
    %872 = @func_6607() /* ty=(Tensor[(3, 9, 5), float64],) */;
    %873 = %872.0;
    (%873,)
  };
  %874() /* ty=(Tensor[(3, 9, 5), float64],) */
}

def @func_18478() -> Tensor[(3, 9, 5), float64] {
  @func_18476() /* ty=Tensor[(3, 9, 5), float64] */
}

def @func_12341() -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) {
  %875 = @func_11656() /* ty=(Tensor[(?, 8, 13), float32],) */;
  %876 = @func_6814() /* ty=Tensor[(3, 9, 5), float64] */;
  %877 = %875.0;
  (%876, %877)
}

def @func_14576() -> (Tensor[(3, 9, 5), float64], Tensor[(1620), float32], Tensor[(210), float64], Tensor[(4, 32), float32]) {
  %878 = @func_11440() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(128), float32], Tensor[(1620), float32]) */;
  %879 = cast(meta[relay.Constant][33] /* ty=Tensor[(4, 32), float32] */, dtype="float32") /* ty=Tensor[(4, 32), float32] */;
  %880 = reshape(%879, newshape=[128]) /* ty=Tensor[(128), float32] */;
  %881 = @func_4812(%880) /* ty=(Tensor[(3, 9, 5), float32], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), bool], Tensor[(128), float32], Tensor[(210), float64]) */;
  %882 = @func_6814() /* ty=Tensor[(3, 9, 5), float64] */;
  %883 = %878.2;
  %884 = %881.5;
  (%882, %883, %884, meta[relay.Constant][33] /* ty=Tensor[(4, 32), float32] */)
}

def @func_6867() -> (Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(15, 210), bool], Tensor[(7, 8, 13), int16]) {
  %885 = @func_5740() /* ty=(Tensor[(?, 8, 13), float32],) */;
  %886 = cast(meta[relay.Constant][34] /* ty=Tensor[(1, 210), float64] */, dtype="float64") /* ty=Tensor[(1, 210), float64] */;
  %887 = reshape(%886, newshape=[210, 1]) /* ty=Tensor[(210, 1), float64] */;
  %888 = @func_5520(%887) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64], Tensor[(210, 1), float64]) */;
  %889 = cast(meta[relay.Constant][34] /* ty=Tensor[(1, 210), float64] */, dtype="bool") /* ty=Tensor[(1, 210), bool] */;
  %890 = cast(meta[relay.Constant][35] /* ty=Tensor[(15, 210), float64] */, dtype="bool") /* ty=Tensor[(15, 210), bool] */;
  %891 = @func_2839() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(7, 8, 13), int16]) */;
  %892 = %885.0;
  %893 = %888.1;
  %894 = not_equal(%889, %890) /* ty=Tensor[(15, 210), bool] */;
  %895 = %891.1;
  (%892, %893, %894, %895)
}

def @func_4027(%var_3978: Tensor[(1620), float32]) -> (Tensor[(7, 8, 13), int16], Tensor[(?, 8, 13), uint16], Tensor[(105, 2), uint64], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(105, 2), float64], Tensor[(2, 7, 15), float64], Tensor[(1620), float32], Tensor[(128), float32], Tensor[(2, 7, 15), float64], Tensor[(3, 9, 5), float64], Tensor[(45, 3), float64], Tensor[(3, 9, 5), uint16]) {
  %896 = @func_3361() /* ty=Tensor[(?, 8, 13), float32] */;
  %897 = cast(%896, dtype="float64") /* ty=Tensor[(?, 8, 13), float64] */;
  %898 = sin(%897) /* ty=Tensor[(?, 8, 13), float64] */;
  %899 = cast(%896, dtype="uint16") /* ty=Tensor[(?, 8, 13), uint16] */;
  %900 = shape_of(%898, dtype="int32") /* ty=Tensor[(3), int32] */;
  %901 = cast(%898, dtype="uint16") /* ty=Tensor[(?, 8, 13), uint16] */;
  %902 = dyn.reshape(%899, %900, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %903 = @func_2581() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64], Tensor[(105, 2), float64], Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64]) */;
  %904 = %903.2;
  %905 = cast(meta[relay.Constant][36] /* ty=Tensor[(105, 2), float64] */, dtype="uint64") /* ty=Tensor[(105, 2), uint64] */;
  %906 = shape_of(%904, dtype="int32") /* ty=Tensor[(2), int32] */;
  %907 = cast(%904, dtype="uint64") /* ty=Tensor[(105, 2), uint64] */;
  %908 = dyn.reshape(%905, %906, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %909 = @func_2581() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64], Tensor[(105, 2), float64], Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64]) */;
  %910 = @func_2581() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64], Tensor[(105, 2), float64], Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64]) */;
  %911 = cast(%var_3978, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %912 = cast(meta[relay.Constant][37] /* ty=Tensor[(128), float32] */, dtype="float32") /* ty=Tensor[(128), float32] */;
  %913 = right_shift(%901, %902) /* ty=Tensor[(?, 8, 13), uint16] */;
  %914 = cast(%913, dtype="bool") /* ty=Tensor[(?, 8, 13), bool] */;
  %915 = cast(meta[relay.Constant][36] /* ty=Tensor[(105, 2), float64] */, dtype="float64") /* ty=Tensor[(105, 2), float64] */;
  %916 = reshape(%911, newshape=[12, 15, 9]) /* ty=Tensor[(12, 15, 9), float32] */;
  %917 = reshape(%912, newshape=[128]) /* ty=Tensor[(128), float32] */;
  %918 = reshape(%914, newshape=[52, 2]) /* ty=Tensor[(52, 2), bool] */;
  %919 = reshape(%915, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %920 = @func_2289(%916, %917, %918, %919) /* ty=(Tensor[(3, 45), float32], Tensor[(128), float32], Tensor[(135), float64], Tensor[(52, 2), bool], Tensor[(2, 7, 15), float64], Tensor[(210), float64], Tensor[(12, 15, 9), float64], Tensor[(12, 15, 9), int8], Tensor[(2, 7, 15), float64]) */;
  %921 = cast(meta[relay.Constant][36] /* ty=Tensor[(105, 2), float64] */, dtype="float64") /* ty=Tensor[(105, 2), float64] */;
  %922 = reshape(%921, newshape=[2, 7, 15]) /* ty=Tensor[(2, 7, 15), float64] */;
  %923 = @func_869(%922) /* ty=(Tensor[(2, 7, 15), float64],) */;
  %924 = @func_2600() /* ty=Tensor[(3, 9, 5), float64] */;
  %925 = cast(%924, dtype="float64") /* ty=Tensor[(3, 9, 5), float64] */;
  %926 = %920.4;
  %927 = cast(%926, dtype="float64") /* ty=Tensor[(2, 7, 15), float64] */;
  %928 = cast(meta[relay.Constant][37] /* ty=Tensor[(128), float32] */, dtype="float32") /* ty=Tensor[(128), float32] */;
  %929 = reshape(%925, newshape=[45, 3]) /* ty=Tensor[(45, 3), float64] */;
  %930 = reshape(%927, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %931 = reshape(%928, newshape=[128]) /* ty=Tensor[(128), float32] */;
  %932 = @func_3116(%929, %930, %931) /* ty=(Tensor[(?, 8, 13), float32], Tensor[(45, 3), float64], Tensor[(?, 8, 13), bool], Tensor[(210), float64], Tensor[(210), float64], Tensor[(2, 7, 15), uint32], Tensor[(128), bool], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(1620), float32]) */;
  %933 = @func_3386() /* ty=Tensor[(7, 8, 13), int16] */;
  %934 = maximum(%907, %908) /* ty=Tensor[(105, 2), uint64] */;
  %935 = %909.0;
  %936 = %910.2;
  %937 = %923.0;
  %938 = @func_2600() /* ty=Tensor[(3, 9, 5), float64] */;
  %939 = %932.1;
  %940 = @func_3330() /* ty=Tensor[(3, 9, 5), uint16] */;
  (%933, %913, %934, %924, %935, %936, %926, %var_3978, meta[relay.Constant][37] /* ty=Tensor[(128), float32] */, %937, %938, %939, %940)
}

def @func_3143() -> Tensor[(3, 9, 5), float64] {
  @func_3141() /* ty=Tensor[(3, 9, 5), float64] */
}

def @func_11006() -> Tensor[(?, 8, 13), float32] {
  %942 = fn () -> Tensor[(?, 8, 13), float32] {
    %941 = @func_6655() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) */;
    %941.0
  };
  %942() /* ty=Tensor[(?, 8, 13), float32] */
}

def @func_4350() -> Tensor[(?, 8, 13), float32] {
  %943 = fn () -> Tensor[(?, 8, 13), float32] {
    @func_3842() /* ty=Tensor[(?, 8, 13), float32] */
  };
  %943() /* ty=Tensor[(?, 8, 13), float32] */
}

def @func_9743() -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) {
  %948 = fn () -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) {
    %944 = @func_2504() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(135), float64]) */;
    %945 = @func_8443() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) */;
    %946 = %944.1;
    %947 = %945.0;
    (%946, %947)
  };
  %948() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) */
}

def @func_9115() -> Tensor[(3, 9, 5), float64] {
  @func_9113() /* ty=Tensor[(3, 9, 5), float64] */
}

def @func_14443() -> (Tensor[(3, 9, 5), uint16],) {
  %949 = @func_7441() /* ty=(Tensor[(3, 9, 5), uint16], Tensor[(?, 8, 13), float32]) */;
  %950 = %949.0;
  (%950,)
}

def @func_17151() -> (Tensor[(?, 8, 13), bool], Tensor[(3, 9, 5), float64]) {
  %951 = @func_7948() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) */;
  %952 = @func_10649() /* ty=Tensor[(?, 8, 13), bool] */;
  %953 = %951.1;
  (%952, %953)
}

def @func_4095() -> (Tensor[(7, 8, 13), int16],) {
  %954 = @func_3386() /* ty=Tensor[(7, 8, 13), int16] */;
  (%954,)
}

def @func_13896() -> Tensor[(3, 9, 5), float64] {
  %955 = @func_7537() /* ty=Tensor[(3, 9, 5), float64] */;
  %956 = cast(meta[relay.Constant][38] /* ty=Tensor[(3, 9, 5), float64] */, dtype="float64") /* ty=Tensor[(3, 9, 5), float64] */;
  %957 = shape_of(%955, dtype="int32") /* ty=Tensor[(3), int32] */;
  %958 = cast(%955, dtype="float64") /* ty=Tensor[(3, 9, 5), float64] */;
  %959 = dyn.reshape(%956, %957, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_divide(%958, %959) /* ty=Tensor[(3, 9, 5), float64] */
}

def @func_3345() -> Tensor[(?, 8, 13), float32] {
  %960 = @func_2581() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64], Tensor[(105, 2), float64], Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64]) */;
  %960.3
}

def @func_16110(%var_16109: Tensor[(210), float64]) -> (Tensor[(?, 8, 13), float32], Tensor[(128), float32], Tensor[(210), float64]) {
  %967 = fn (%var_16093: Tensor[(210), float64]) -> (Tensor[(?, 8, 13), float32], Tensor[(128), float32], Tensor[(210), float64]) {
    %961 = @func_8030() /* ty=(Tensor[(4, 8, 13), int16], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) */;
    %962 = cast(%var_16093, dtype="float64") /* ty=Tensor[(210), float64] */;
    %963 = reshape(%962, newshape=[210, 1]) /* ty=Tensor[(210, 1), float64] */;
    %964 = @func_5302(%963) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), uint16], Tensor[(210), float64], Tensor[(210, 1), float64], Tensor[(128), float32]) */;
    %965 = %961.1;
    %966 = %964.4;
    (%965, %966, %var_16093)
  };
  %967(%var_16109) /* ty=(Tensor[(?, 8, 13), float32], Tensor[(128), float32], Tensor[(210), float64]) */
}

def @func_6995() -> Tensor[(?, 8, 13), bool] {
  %975 = fn () -> Tensor[(?, 8, 13), bool] {
    %968 = @func_6729() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) */;
    %969 = %968.0;
    %970 = @func_4349() /* ty=Tensor[(?, 8, 13), float32] */;
    %971 = cast(%970, dtype="bool") /* ty=Tensor[(?, 8, 13), bool] */;
    %972 = shape_of(%969, dtype="int32") /* ty=Tensor[(3), int32] */;
    %973 = cast(%969, dtype="bool") /* ty=Tensor[(?, 8, 13), bool] */;
    %974 = dyn.reshape(%971, %972, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    greater(%973, %974) /* ty=Tensor[(?, 8, 13), bool] */
  };
  %975() /* ty=Tensor[(?, 8, 13), bool] */
}

def @func_6609() -> (Tensor[(3, 9, 5), float64],) {
  @func_6607() /* ty=(Tensor[(3, 9, 5), float64],) */
}

def @func_6399(%var_6397: Tensor[(728), int16], %var_6398: Tensor[(128), float32]) -> (Tensor[(?, 8, 13), float32], Tensor[(7, 8, 13), bool], Tensor[(728), int16], Tensor[(3, 9, 5), float64], Tensor[(128), float32], Tensor[(135), float64], Tensor[(3, 9, 5), float64]) {
  %994 = fn (%var_6360: Tensor[(728), int16], %var_6382: Tensor[(128), float32]) -> (Tensor[(?, 8, 13), float32], Tensor[(7, 8, 13), bool], Tensor[(728), int16], Tensor[(3, 9, 5), float64], Tensor[(128), float32], Tensor[(135), float64], Tensor[(3, 9, 5), float64]) {
    %976 = @func_2447() /* ty=(Tensor[(?, 8, 13), float32],) */;
    %977 = %976.0;
    %978 = cast(%977, dtype="float32") /* ty=Tensor[(?, 8, 13), float32] */;
    %979 = cast(%var_6360, dtype="int16") /* ty=Tensor[(728), int16] */;
    %980 = reshape(%979, newshape=[7, 8, 13]) /* ty=Tensor[(7, 8, 13), int16] */;
    %981 = @func_4292(%980) /* ty=(Tensor[(7, 8, 13), bool],) */;
    %982 = cast(%var_6382, dtype="float32") /* ty=Tensor[(128), float32] */;
    %983 = cast(meta[relay.Constant][39] /* ty=Tensor[(135), float64] */, dtype="float64") /* ty=Tensor[(135), float64] */;
    %984 = cast(%977, dtype="bool") /* ty=Tensor[(?, 8, 13), bool] */;
    %985 = reshape(%982, newshape=[16, 1, 8]) /* ty=Tensor[(16, 1, 8), float32] */;
    %986 = reshape(%983, newshape=[3, 45]) /* ty=Tensor[(3, 45), float64] */;
    %987 = reshape(%984, newshape=[104]) /* ty=Tensor[(104), bool] */;
    %988 = @func_1683(%985, %986, %987) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(16, ?, 8), uint16], Tensor[(?, 8, 13), bool], Tensor[(104), bool], Tensor[(3, 45), float32]) */;
    %989 = @func_3180() /* ty=(Tensor[(3, 9, 5), float64],) */;
    %990 = cos(%978) /* ty=Tensor[(?, 8, 13), float32] */;
    %991 = %981.0;
    %992 = %988.0;
    %993 = %989.0;
    (%990, %991, %var_6360, %992, %var_6382, meta[relay.Constant][39] /* ty=Tensor[(135), float64] */, %993)
  };
  %994(%var_6397, %var_6398) /* ty=(Tensor[(?, 8, 13), float32], Tensor[(7, 8, 13), bool], Tensor[(728), int16], Tensor[(3, 9, 5), float64], Tensor[(128), float32], Tensor[(135), float64], Tensor[(3, 9, 5), float64]) */
}

def @func_7478() -> (Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), uint16]) {
  @func_7476() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), uint16]) */
}

def @func_6501() -> (Tensor[(3, 9, 5), float64],) {
  @func_6499() /* ty=(Tensor[(3, 9, 5), float64],) */
}

def @func_17214() -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), uint16], Tensor[(3, 9, 5), float64]) {
  %995 = @func_8087() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(128), float32], Tensor[(7, 104), int16], Tensor[(128), float32]) */;
  %996 = @func_10982() /* ty=(Tensor[(3, 9, 5), uint16],) */;
  %997 = @func_2504() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(135), float64]) */;
  %998 = %995.0;
  %999 = %996.0;
  %1000 = %997.1;
  (%998, %999, %1000)
}

def @func_11866() -> (Tensor[(3, 9, 5), uint16], Tensor[(2, 7, 15), float64], Tensor[(210), float64], Tensor[(7, 8, 13), int16], Tensor[(?, 8, 13), float32]) {
  @func_11864() /* ty=(Tensor[(3, 9, 5), uint16], Tensor[(2, 7, 15), float64], Tensor[(210), float64], Tensor[(7, 8, 13), int16], Tensor[(?, 8, 13), float32]) */
}

def @func_14450() -> (Tensor[(7, 8, 13), int16],) {
  @func_14448() /* ty=(Tensor[(7, 8, 13), int16],) */
}

def @func_17629() -> (Tensor[(1620), float32],) {
  @func_17627() /* ty=(Tensor[(1620), float32],) */
}

def @func_16875() -> Tensor[(?, 8, 13), float32] {
  %1001 = @func_4746() /* ty=(Tensor[(?, 8, 13), float32],) */;
  %1001.0
}

def @func_2669(%var_2668: Tensor[(4, 32), float32]) -> (Tensor[(3, 9, 5), float64], Tensor[(16, ?, 8), uint16], Tensor[(4, 32), float32], Tensor[(104), bool]) {
  %1011 = fn (%var_2658: Tensor[(4, 32), float32]) -> (Tensor[(3, 9, 5), float64], Tensor[(16, ?, 8), uint16], Tensor[(4, 32), float32], Tensor[(104), bool]) {
    %1002 = cast(%var_2658, dtype="float32") /* ty=Tensor[(4, 32), float32] */;
    %1003 = @func_2600() /* ty=Tensor[(3, 9, 5), float64] */;
    %1004 = cast(%1003, dtype="float64") /* ty=Tensor[(3, 9, 5), float64] */;
    %1005 = cast(meta[relay.Constant][40] /* ty=Tensor[(104), bool] */, dtype="bool") /* ty=Tensor[(104), bool] */;
    %1006 = reshape(%1002, newshape=[16, 1, 8]) /* ty=Tensor[(16, 1, 8), float32] */;
    %1007 = reshape(%1004, newshape=[3, 45]) /* ty=Tensor[(3, 45), float64] */;
    %1008 = reshape(%1005, newshape=[104]) /* ty=Tensor[(104), bool] */;
    %1009 = @func_1683(%1006, %1007, %1008) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(16, ?, 8), uint16], Tensor[(?, 8, 13), bool], Tensor[(104), bool], Tensor[(3, 45), float32]) */;
    %1010 = %1009.1;
    (%1003, %1010, %var_2658, meta[relay.Constant][40] /* ty=Tensor[(104), bool] */)
  };
  %1011(%var_2668) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(16, ?, 8), uint16], Tensor[(4, 32), float32], Tensor[(104), bool]) */
}

def @func_19326() -> (Tensor[(?, 8, 13), float32],) {
  @func_19324() /* ty=(Tensor[(?, 8, 13), float32],) */
}

def @func_14208() -> (Tensor[(3, 9, 5), float64],) {
  %1014 = fn () -> (Tensor[(3, 9, 5), float64],) {
    %1012 = @func_7341() /* ty=(Tensor[(3, 9, 5), float64],) */;
    %1013 = %1012.0;
    (%1013,)
  };
  %1014() /* ty=(Tensor[(3, 9, 5), float64],) */
}

def @func_20384() -> (Tensor[(3, 9, 5), float64],) {
  @func_20382() /* ty=(Tensor[(3, 9, 5), float64],) */
}

def @func_20082() -> (Tensor[(3, 9, 5), uint16],) {
  @func_20080() /* ty=(Tensor[(3, 9, 5), uint16],) */
}

def @func_14959(%var_14957: Tensor[(12, 8, 13), bool]) -> (Tensor[(12, 8, 13), bool], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), uint16]) {
  @func_14956(%var_14957) /* ty=(Tensor[(12, 8, 13), bool], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), uint16]) */
}

def @func_5305(%var_5303: Tensor[(210, 1), float64]) -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), uint16], Tensor[(210), float64], Tensor[(210, 1), float64], Tensor[(128), float32]) {
  @func_5302(%var_5303) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), uint16], Tensor[(210), float64], Tensor[(210, 1), float64], Tensor[(128), float32]) */
}

def @func_19970(%var_19939: Tensor[(210), float64]) -> (Tensor[(16, 8, 13), bool], Tensor[(?, 8, 13), float32], Tensor[(210), float64], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(16, 8, 13), float32]) {
  %1015 = @func_14340() /* ty=Tensor[(?, 8, 13), float32] */;
  %1016 = cast(%1015, dtype="bool") /* ty=Tensor[(?, 8, 13), bool] */;
  %1017 = cast(meta[relay.Constant][41] /* ty=Tensor[(16, 8, 13), float32] */, dtype="bool") /* ty=Tensor[(16, 8, 13), bool] */;
  %1018 = cast(%var_19939, dtype="float64") /* ty=Tensor[(210), float64] */;
  %1019 = reshape(%1018, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %1020 = @func_12699(%1019) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), uint16], Tensor[(2, 7, 15), uint32], Tensor[(210), float64], Tensor[(3, 9, 5), float64]) */;
  %1021 = @func_9912() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) */;
  %1022 = @func_17991() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) */;
  %1023 = cast(meta[relay.Constant][41] /* ty=Tensor[(16, 8, 13), float32] */, dtype="float32") /* ty=Tensor[(16, 8, 13), float32] */;
  %1024 = less_equal(%1016, %1017) /* ty=Tensor[(16, 8, 13), bool] */;
  %1025 = %1020.1;
  %1026 = %1021.1;
  %1027 = %1022.2;
  %1028 = cos(%1023) /* ty=Tensor[(16, 8, 13), float32] */;
  (%1024, %1025, %var_19939, %1026, %1027, %1028)
}

def @func_13754() -> (Tensor[(7, 8, 13), int16], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) {
  %1029 = @func_2839() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(7, 8, 13), int16]) */;
  %1030 = @func_9397() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) */;
  %1031 = @func_3386() /* ty=Tensor[(7, 8, 13), int16] */;
  %1032 = %1029.0;
  %1033 = %1030.0;
  (%1031, %1032, %1033)
}

def @func_4472() -> Tensor[(?, 8, 13), float32] {
  %1035 = fn () -> Tensor[(?, 8, 13), float32] {
    %1034 = @func_4175() /* ty=(Tensor[(?, 8, 13), float32],) */;
    %1034.0
  };
  %1035() /* ty=Tensor[(?, 8, 13), float32] */
}

def @func_6730() -> (Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) {
  %1039 = fn () -> (Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) {
    %1036 = @func_5873() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) */;
    %1037 = @func_3361() /* ty=Tensor[(?, 8, 13), float32] */;
    %1038 = %1036.1;
    (%1037, %1038)
  };
  %1039() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) */
}

def @func_4814(%var_4813: Tensor[(128), float32]) -> (Tensor[(3, 9, 5), float32], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), bool], Tensor[(128), float32], Tensor[(210), float64]) {
  %1051 = fn (%var_4809: Tensor[(128), float32]) -> (Tensor[(3, 9, 5), float32], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), bool], Tensor[(128), float32], Tensor[(210), float64]) {
    %1040 = @func_3141() /* ty=Tensor[(3, 9, 5), float64] */;
    %1041 = cast(%1040, dtype="float32") /* ty=Tensor[(3, 9, 5), float32] */;
    %1042 = cast(%var_4809, dtype="float32") /* ty=Tensor[(128), float32] */;
    %1043 = cast(meta[relay.Constant][42] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
    %1044 = reshape(%1042, newshape=[4, 32]) /* ty=Tensor[(4, 32), float32] */;
    %1045 = reshape(%1043, newshape=[5, 42]) /* ty=Tensor[(5, 42), float64] */;
    %1046 = @func_3241(%1044, %1045) /* ty=(Tensor[(?, 8, 13), bool], Tensor[(12, 15, 9), int8], Tensor[(1620), float32], Tensor[(4, 32), float32], Tensor[(5, 42), float64], Tensor[(3, 9, 5), float64]) */;
    %1047 = asinh(%1041) /* ty=Tensor[(3, 9, 5), float32] */;
    %1048 = @func_3361() /* ty=Tensor[(?, 8, 13), float32] */;
    %1049 = @func_3141() /* ty=Tensor[(3, 9, 5), float64] */;
    %1050 = %1046.0;
    (%1047, %1048, %1049, %1050, %var_4809, meta[relay.Constant][42] /* ty=Tensor[(210), float64] */)
  };
  %1051(%var_4813) /* ty=(Tensor[(3, 9, 5), float32], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), bool], Tensor[(128), float32], Tensor[(210), float64]) */
}

def @func_5084() -> (Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) {
  %1052 = @func_3842() /* ty=Tensor[(?, 8, 13), float32] */;
  %1053 = @func_4349() /* ty=Tensor[(?, 8, 13), float32] */;
  (%1052, %1053)
}

def @func_6784() -> (Tensor[(3, 9, 5), uint16], Tensor[(3, 9, 5), float64]) {
  @func_6782() /* ty=(Tensor[(3, 9, 5), uint16], Tensor[(3, 9, 5), float64]) */
}

def @func_17007() -> (Tensor[(3, 9, 5), float64],) {
  @func_17005() /* ty=(Tensor[(3, 9, 5), float64],) */
}

def @func_9760() -> (Tensor[(3, 9, 5), float64],) {
  %1054 = @func_3141() /* ty=Tensor[(3, 9, 5), float64] */;
  (%1054,)
}

def @func_15250() -> (Tensor[(105, 2), float64], Tensor[(3, 9, 5), uint16], Tensor[(3, 9, 5), float64]) {
  @func_15248() /* ty=(Tensor[(105, 2), float64], Tensor[(3, 9, 5), uint16], Tensor[(3, 9, 5), float64]) */
}

def @func_15876() -> (Tensor[(3, 9, 5), float64],) {
  %1055 = @func_10239() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) */;
  %1056 = %1055.1;
  (%1056,)
}

def @func_6411() -> Tensor[(3, 9, 5), float64] {
  %1057 = @func_3538() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) */;
  %1057.1
}

def @func_12847() -> (Tensor[(3, 9, 5), float64],) {
  @func_12845() /* ty=(Tensor[(3, 9, 5), float64],) */
}

def @func_9242(%var_9241: Tensor[(16, 15, 6), float64]) -> Tensor[(16, 15, 6), float64] {
  %1059 = fn (%var_9232: Tensor[(16, 15, 6), float64]) -> Tensor[(16, 15, 6), float64] {
    %1058 = cast(%var_9232, dtype="float64") /* ty=Tensor[(16, 15, 6), float64] */;
    sqrt(%1058) /* ty=Tensor[(16, 15, 6), float64] */
  };
  %1059(%var_9241) /* ty=Tensor[(16, 15, 6), float64] */
}

def @func_10848() -> Tensor[(3, 9, 5), float64] {
  %1060 = @func_6499() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %1060.0
}

def @func_13898() -> Tensor[(3, 9, 5), float64] {
  @func_13896() /* ty=Tensor[(3, 9, 5), float64] */
}

def @func_18925() -> (Tensor[(3, 9, 5), float64],) {
  @func_18923() /* ty=(Tensor[(3, 9, 5), float64],) */
}

def @func_12508() -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(128), float32]) {
  %1061 = @func_9082() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) */;
  %1062 = cast(meta[relay.Constant][43] /* ty=Tensor[(128), float32] */, dtype="float32") /* ty=Tensor[(128), float32] */;
  %1063 = reshape(%1062, newshape=[2, 64]) /* ty=Tensor[(2, 64), float32] */;
  %1064 = @func_11068(%1063) /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), uint16], Tensor[(3, 9, 5), float32], Tensor[(2, 64), float32], Tensor[(210), float64]) */;
  %1065 = %1061.0;
  %1066 = %1064.1;
  (%1065, %1066, meta[relay.Constant][43] /* ty=Tensor[(128), float32] */)
}

def @func_10850() -> Tensor[(3, 9, 5), float64] {
  @func_10848() /* ty=Tensor[(3, 9, 5), float64] */
}

def @func_4048() -> (Tensor[(3, 9, 5), float64],) {
  %1068 = fn () -> (Tensor[(3, 9, 5), float64],) {
    %1067 = @func_3141() /* ty=Tensor[(3, 9, 5), float64] */;
    (%1067,)
  };
  %1068() /* ty=(Tensor[(3, 9, 5), float64],) */
}

def @func_17709() -> (Tensor[(3, 9, 5), uint16],) {
  @func_17707() /* ty=(Tensor[(3, 9, 5), uint16],) */
}

def @func_18982() -> (Tensor[(3, 9, 5), float64],) {
  @func_18980() /* ty=(Tensor[(3, 9, 5), float64],) */
}

def @func_15248() -> (Tensor[(105, 2), float64], Tensor[(3, 9, 5), uint16], Tensor[(3, 9, 5), float64]) {
  %1069 = @func_2581() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64], Tensor[(105, 2), float64], Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64]) */;
  %1070 = @func_15121() /* ty=(Tensor[(3, 9, 5), uint16],) */;
  %1071 = %1069.2;
  %1072 = %1070.0;
  %1073 = @func_14730() /* ty=Tensor[(3, 9, 5), float64] */;
  (%1071, %1072, %1073)
}

def @func_19298() -> Tensor[(3, 9, 5), uint16] {
  %1074 = @func_17707() /* ty=(Tensor[(3, 9, 5), uint16],) */;
  %1074.0
}

def @func_17745() -> (Tensor[(3, 9, 5), float64],) {
  %1075 = @func_7133() /* ty=Tensor[(3, 9, 5), float64] */;
  (%1075,)
}

def @func_20305() -> (Tensor[(2, 7, 15), float64], Tensor[(3, 9, 5), uint16], Tensor[(3, 9, 5), float64]) {
  %1082 = fn () -> (Tensor[(2, 7, 15), float64], Tensor[(3, 9, 5), uint16], Tensor[(3, 9, 5), float64]) {
    %1076 = @func_9276() /* ty=Tensor[(2, 7, 15), float64] */;
    %1077 = cast(%1076, dtype="float64") /* ty=Tensor[(2, 7, 15), float64] */;
    %1078 = @func_15095() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(15, 210), bool], Tensor[(3, 9, 5), float64]) */;
    %1079 = exp(%1077) /* ty=Tensor[(2, 7, 15), float64] */;
    %1080 = @func_5807() /* ty=Tensor[(3, 9, 5), uint16] */;
    %1081 = %1078.2;
    (%1079, %1080, %1081)
  };
  %1082() /* ty=(Tensor[(2, 7, 15), float64], Tensor[(3, 9, 5), uint16], Tensor[(3, 9, 5), float64]) */
}

def @func_21378() -> (Tensor[(3, 9, 5), uint16],) {
  %1085 = fn () -> (Tensor[(3, 9, 5), uint16],) {
    %1083 = @func_20080() /* ty=(Tensor[(3, 9, 5), uint16],) */;
    %1084 = %1083.0;
    (%1084,)
  };
  %1085() /* ty=(Tensor[(3, 9, 5), uint16],) */
}

def @func_4295(%var_4293: Tensor[(7, 8, 13), int16]) -> (Tensor[(7, 8, 13), bool],) {
  @func_4292(%var_4293) /* ty=(Tensor[(7, 8, 13), bool],) */
}

def @func_8391(%var_8389: Tensor[(5, 8, 11), float32], %var_8390: Tensor[(210), float64]) -> (Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(1, 1456), float32], Tensor[(?, 8, 13), float32], Tensor[(210), float64], Tensor[(5, 8, 11), float32], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), bool], Tensor[(?, 8, 13), float32]) {
  %1111 = fn (%var_8274: Tensor[(5, 8, 11), float32], %var_8292: Tensor[(210), float64]) -> (Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(1, 1456), float32], Tensor[(?, 8, 13), float32], Tensor[(210), float64], Tensor[(5, 8, 11), float32], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), bool], Tensor[(?, 8, 13), float32]) {
    %1086 = @func_7178() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(864), uint64], Tensor[(?, 8, 13), float32]) */;
    %1087 = cast(meta[relay.Constant][44] /* ty=Tensor[(1, 1456), float32] */, dtype="float32") /* ty=Tensor[(1, 1456), float32] */;
    %1088 = reshape(%1087, newshape=[14, 8, 13]) /* ty=Tensor[(14, 8, 13), float32] */;
    %1089 = @func_5618(%1088) /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), uint16], Tensor[(?, 8, 13), float32], Tensor[(14, 8, 13), int16]) */;
    %1090 = cast(%var_8292, dtype="float64") /* ty=Tensor[(210), float64] */;
    %1091 = reshape(%1090, newshape=[210]) /* ty=Tensor[(210), float64] */;
    %1092 = @func_6028(%1091) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(210), float64]) */;
    %1093 = cast(meta[relay.Constant][45] /* ty=Tensor[(5, 8, 11), float32] */, dtype="float32") /* ty=Tensor[(5, 8, 11), float32] */;
    %1094 = log(%1093) /* ty=Tensor[(5, 8, 11), float32] */;
    %1095 = cast(%var_8274, dtype="bool") /* ty=Tensor[(5, 8, 11), bool] */;
    %1096 = shape_of(%1094, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1097 = cast(%1094, dtype="bool") /* ty=Tensor[(5, 8, 11), bool] */;
    %1098 = dyn.reshape(%1095, %1096, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1099 = greater_equal(%1097, %1098) /* ty=Tensor[(5, 8, 11), bool] */;
    %1100 = cast(%1099, dtype="float32") /* ty=Tensor[(5, 8, 11), float32] */;
    %1101 = @func_4184() /* ty=(Tensor[(3, 9, 5), float64],) */;
    %1102 = @func_5719() /* ty=(Tensor[(?, 8, 13), bool],) */;
    %1103 = @func_6655() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) */;
    %1104 = %1086.4;
    %1105 = %1089.2;
    %1106 = %1092.1;
    %1107 = sigmoid(%1100) /* ty=Tensor[(5, 8, 11), float32] */;
    %1108 = %1101.0;
    %1109 = %1102.0;
    %1110 = %1103.0;
    (%1104, %1105, meta[relay.Constant][44] /* ty=Tensor[(1, 1456), float32] */, %1106, %var_8292, %1107, %1108, %1109, %1110)
  };
  %1111(%var_8389, %var_8390) /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(1, 1456), float32], Tensor[(?, 8, 13), float32], Tensor[(210), float64], Tensor[(5, 8, 11), float32], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), bool], Tensor[(?, 8, 13), float32]) */
}

def @func_7442() -> (Tensor[(3, 9, 5), uint16], Tensor[(?, 8, 13), float32]) {
  %1116 = fn () -> (Tensor[(3, 9, 5), uint16], Tensor[(?, 8, 13), float32]) {
    %1112 = @func_5424() /* ty=(Tensor[(3, 9, 5), uint16],) */;
    %1113 = @func_5084() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) */;
    %1114 = %1112.0;
    %1115 = %1113.0;
    (%1114, %1115)
  };
  %1116() /* ty=(Tensor[(3, 9, 5), uint16], Tensor[(?, 8, 13), float32]) */
}

def @func_21477() -> Tensor[(?, 8, 13), float32] {
  @func_21475() /* ty=Tensor[(?, 8, 13), float32] */
}

def @func_4361() -> Tensor[(?, 8, 13), float32] {
  @func_4359() /* ty=Tensor[(?, 8, 13), float32] */
}

def @func_20044(%var_20042: Tensor[(11, 11, 11), float32]) -> Tensor[(11, 11, 11), bool] {
  @func_20041(%var_20042) /* ty=Tensor[(11, 11, 11), bool] */
}

def @func_16495() -> Tensor[(3, 9, 5), float64] {
  %1118 = fn () -> Tensor[(3, 9, 5), float64] {
    %1117 = @func_7448() /* ty=(Tensor[(3, 9, 5), float64],) */;
    %1117.0
  };
  %1118() /* ty=Tensor[(3, 9, 5), float64] */
}

def @func_10650() -> Tensor[(?, 8, 13), bool] {
  %1119 = fn () -> Tensor[(?, 8, 13), bool] {
    @func_2460() /* ty=Tensor[(?, 8, 13), bool] */
  };
  %1119() /* ty=Tensor[(?, 8, 13), bool] */
}

def @func_20696() -> (Tensor[(3, 9, 5), float64],) {
  %1121 = fn () -> (Tensor[(3, 9, 5), float64],) {
    %1120 = @func_7537() /* ty=Tensor[(3, 9, 5), float64] */;
    (%1120,)
  };
  %1121() /* ty=(Tensor[(3, 9, 5), float64],) */
}

def @func_7728(%var_7727: Tensor[(210), float64]) -> (Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(864), uint64], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), bool], Tensor[(210), float64], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) {
  %1143 = fn (%var_7684: Tensor[(210), float64]) -> (Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(864), uint64], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), bool], Tensor[(210), float64], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) {
    %1122 = @func_7441() /* ty=(Tensor[(3, 9, 5), uint16], Tensor[(?, 8, 13), float32]) */;
    %1123 = @func_5784() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(1620), float32], Tensor[(210), float64], Tensor[(?, 8, 13), float32]) */;
    %1124 = cast(meta[relay.Constant][46] /* ty=Tensor[(864), uint64] */, dtype="uint64") /* ty=Tensor[(864), uint64] */;
    %1125 = cast(meta[relay.Constant][46] /* ty=Tensor[(864), uint64] */, dtype="uint64") /* ty=Tensor[(864), uint64] */;
    %1126 = @func_6283() /* ty=Tensor[(3, 9, 5), float64] */;
    %1127 = cast(%1126, dtype="float64") /* ty=Tensor[(3, 9, 5), float64] */;
    %1128 = reshape(%1124, newshape=[6, 9, 16]) /* ty=Tensor[(6, 9, 16), uint64] */;
    %1129 = reshape(%1125, newshape=[6, 9, 16]) /* ty=Tensor[(6, 9, 16), uint64] */;
    %1130 = reshape(%1127, newshape=[135]) /* ty=Tensor[(135), float64] */;
    %1131 = @func_5045(%1128, %1129, %1130) /* ty=(Tensor[(6, 9, 16), bool], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(135), float64]) */;
    %1132 = cast(%var_7684, dtype="float64") /* ty=Tensor[(210), float64] */;
    %1133 = reshape(%1132, newshape=[210]) /* ty=Tensor[(210), float64] */;
    %1134 = @func_2759(%1133) /* ty=(Tensor[(?, 8, 13), bool], Tensor[(52, 2), bool], Tensor[(1620), float32], Tensor[(128), float32], Tensor[(210), float64]) */;
    %1135 = @func_4609() /* ty=(Tensor[(3, 9, 5), float64],) */;
    %1136 = %1122.1;
    %1137 = %1123.0;
    %1138 = %1131.4;
    %1139 = @func_4359() /* ty=Tensor[(?, 8, 13), float32] */;
    %1140 = %1134.0;
    %1141 = @func_3361() /* ty=Tensor[(?, 8, 13), float32] */;
    %1142 = %1135.0;
    (%1136, %1126, %1137, %1138, meta[relay.Constant][46] /* ty=Tensor[(864), uint64] */, %1139, %1140, %var_7684, %1141, %1142)
  };
  %1143(%var_7727) /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(864), uint64], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), bool], Tensor[(210), float64], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) */
}

def @func_20257() -> Tensor[(3, 9, 5), float64] {
  @func_20255() /* ty=Tensor[(3, 9, 5), float64] */
}

def @func_17511() -> Tensor[(?, 8, 13), float32] {
  %1145 = fn () -> Tensor[(?, 8, 13), float32] {
    %1144 = @func_11864() /* ty=(Tensor[(3, 9, 5), uint16], Tensor[(2, 7, 15), float64], Tensor[(210), float64], Tensor[(7, 8, 13), int16], Tensor[(?, 8, 13), float32]) */;
    %1144.4
  };
  %1145() /* ty=Tensor[(?, 8, 13), float32] */
}

def @func_17498() -> (Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), uint16], Tensor[(?, 8, 13), bool], Tensor[(3, 9, 5), float64]) {
  %1146 = @func_4175() /* ty=(Tensor[(?, 8, 13), float32],) */;
  %1147 = @func_14443() /* ty=(Tensor[(3, 9, 5), uint16],) */;
  %1148 = @func_8954() /* ty=(Tensor[(?, 8, 13), bool],) */;
  %1149 = @func_14207() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %1150 = %1146.0;
  %1151 = %1147.0;
  %1152 = %1148.0;
  %1153 = %1149.0;
  (%1150, %1151, %1152, %1153)
}

def @func_18535() -> Tensor[(?, 8, 13), float32] {
  %1154 = @func_18177() /* ty=(Tensor[(?, 8, 13), bool], Tensor[(?, 8, 13), float32]) */;
  %1154.1
}

def @func_3672() -> (Tensor[(3, 9, 5), uint16],) {
  %1155 = @func_3330() /* ty=Tensor[(3, 9, 5), uint16] */;
  (%1155,)
}

def @func_9914() -> (Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) {
  @func_9912() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) */
}

def @func_578(%var_577: Tensor[(3, 9, 5), float64]) -> (Tensor[(3, 9, 5), float64],) {
  %1158 = fn (%var_568: Tensor[(3, 9, 5), float64]) -> (Tensor[(3, 9, 5), float64],) {
    %1156 = cast(%var_568, dtype="float64") /* ty=Tensor[(3, 9, 5), float64] */;
    %1157 = exp(%1156) /* ty=Tensor[(3, 9, 5), float64] */;
    (%1157,)
  };
  %1158(%var_577) /* ty=(Tensor[(3, 9, 5), float64],) */
}

def @func_15067() -> Tensor[(3, 9, 5), float64] {
  @func_15065() /* ty=Tensor[(3, 9, 5), float64] */
}

def @func_2294(%var_2290: Tensor[(12, 15, 9), float32], %var_2291: Tensor[(128), float32], %var_2292: Tensor[(52, 2), bool], %var_2293: Tensor[(210), float64]) -> (Tensor[(3, 45), float32], Tensor[(128), float32], Tensor[(135), float64], Tensor[(52, 2), bool], Tensor[(2, 7, 15), float64], Tensor[(210), float64], Tensor[(12, 15, 9), float64], Tensor[(12, 15, 9), int8], Tensor[(2, 7, 15), float64]) {
  %1190 = fn (%var_2212: Tensor[(12, 15, 9), float32], %var_2233: Tensor[(128), float32], %var_2235: Tensor[(52, 2), bool], %var_2243: Tensor[(210), float64]) -> (Tensor[(3, 45), float32], Tensor[(128), float32], Tensor[(135), float64], Tensor[(52, 2), bool], Tensor[(2, 7, 15), float64], Tensor[(210), float64], Tensor[(12, 15, 9), float64], Tensor[(12, 15, 9), int8], Tensor[(2, 7, 15), float64]) {
    %1159 = cast(%var_2233, dtype="float32") /* ty=Tensor[(128), float32] */;
    %1160 = cast(meta[relay.Constant][47] /* ty=Tensor[(135), float64] */, dtype="float64") /* ty=Tensor[(135), float64] */;
    %1161 = cast(%var_2235, dtype="bool") /* ty=Tensor[(52, 2), bool] */;
    %1162 = reshape(%1159, newshape=[16, 1, 8]) /* ty=Tensor[(16, 1, 8), float32] */;
    %1163 = reshape(%1160, newshape=[3, 45]) /* ty=Tensor[(3, 45), float64] */;
    %1164 = reshape(%1161, newshape=[104]) /* ty=Tensor[(104), bool] */;
    %1165 = @func_1683(%1162, %1163, %1164) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(16, ?, 8), uint16], Tensor[(?, 8, 13), bool], Tensor[(104), bool], Tensor[(3, 45), float32]) */;
    %1166 = cast(%var_2243, dtype="float64") /* ty=Tensor[(210), float64] */;
    %1167 = reshape(%1166, newshape=[2, 7, 15]) /* ty=Tensor[(2, 7, 15), float64] */;
    %1168 = @func_869(%1167) /* ty=(Tensor[(2, 7, 15), float64],) */;
    %1169 = cast(%var_2212, dtype="float32") /* ty=Tensor[(12, 15, 9), float32] */;
    %1170 = sinh(%1169) /* ty=Tensor[(12, 15, 9), float32] */;
    %1171 = cast(%1170, dtype="float64") /* ty=Tensor[(12, 15, 9), float64] */;
    %1172 = erf(%1171) /* ty=Tensor[(12, 15, 9), float64] */;
    %1173 = cast(%1172, dtype="float64") /* ty=Tensor[(12, 15, 9), float64] */;
    %1174 = cast(%1172, dtype="float64") /* ty=Tensor[(12, 15, 9), float64] */;
    %1175 = atan(%1174) /* ty=Tensor[(12, 15, 9), float64] */;
    %1176 = cast(%1175, dtype="float64") /* ty=Tensor[(12, 15, 9), float64] */;
    %1177 = asin(%1176) /* ty=Tensor[(12, 15, 9), float64] */;
    %1178 = cast(%1177, dtype="int8") /* ty=Tensor[(12, 15, 9), int8] */;
    %1179 = shape_of(%1175, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1180 = cast(%1175, dtype="int8") /* ty=Tensor[(12, 15, 9), int8] */;
    %1181 = dyn.reshape(%1178, %1179, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %1182 = %1168.0;
    %1183 = cast(%1182, dtype="float64") /* ty=Tensor[(2, 7, 15), float64] */;
    %1184 = reshape(%1183, newshape=[2, 7, 15]) /* ty=Tensor[(2, 7, 15), float64] */;
    %1185 = @func_869(%1184) /* ty=(Tensor[(2, 7, 15), float64],) */;
    %1186 = %1165.4;
    %1187 = sigmoid(%1173) /* ty=Tensor[(12, 15, 9), float64] */;
    %1188 = add(%1180, %1181) /* ty=Tensor[(12, 15, 9), int8] */;
    %1189 = %1185.0;
    (%1186, %var_2233, meta[relay.Constant][47] /* ty=Tensor[(135), float64] */, %var_2235, %1182, %var_2243, %1187, %1188, %1189)
  };
  %1190(%var_2290, %var_2291, %var_2292, %var_2293) /* ty=(Tensor[(3, 45), float32], Tensor[(128), float32], Tensor[(135), float64], Tensor[(52, 2), bool], Tensor[(2, 7, 15), float64], Tensor[(210), float64], Tensor[(12, 15, 9), float64], Tensor[(12, 15, 9), int8], Tensor[(2, 7, 15), float64]) */
}

def @func_21442() -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) {
  %1195 = fn () -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) {
    %1191 = @func_10357() /* ty=(Tensor[(3, 9, 5), float64],) */;
    %1192 = @func_11270() /* ty=(Tensor[(3, 9, 5), float64],) */;
    %1193 = %1191.0;
    %1194 = %1192.0;
    (%1193, %1194)
  };
  %1195() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) */
}

def @func_10813() -> (Tensor[(3, 9, 5), uint16],) {
  @func_10811() /* ty=(Tensor[(3, 9, 5), uint16],) */
}

def @func_14721() -> (Tensor[(3, 9, 5), float64],) {
  %1198 = fn () -> (Tensor[(3, 9, 5), float64],) {
    %1196 = @func_3180() /* ty=(Tensor[(3, 9, 5), float64],) */;
    %1197 = %1196.0;
    (%1197,)
  };
  %1198() /* ty=(Tensor[(3, 9, 5), float64],) */
}

def @func_8894() -> Tensor[(3, 9, 5), float64] {
  %1200 = fn () -> Tensor[(3, 9, 5), float64] {
    %1199 = @func_6185() /* ty=(Tensor[(3, 9, 5), float64],) */;
    %1199.0
  };
  %1200() /* ty=Tensor[(3, 9, 5), float64] */
}

def @func_2504() -> (Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(135), float64]) {
  %1201 = @func_2447() /* ty=(Tensor[(?, 8, 13), float32],) */;
  %1202 = cast(meta[relay.Constant][48] /* ty=Tensor[(135), float64] */, dtype="float64") /* ty=Tensor[(135), float64] */;
  %1203 = reshape(%1202, newshape=[3, 9, 5]) /* ty=Tensor[(3, 9, 5), float64] */;
  %1204 = @func_576(%1203) /* ty=(Tensor[(3, 9, 5), float64],) */;
  %1205 = %1201.0;
  %1206 = %1204.0;
  (%1205, %1206, meta[relay.Constant][48] /* ty=Tensor[(135), float64] */)
}

def @func_4030(%var_4028: Tensor[(1620), float32]) -> (Tensor[(7, 8, 13), int16], Tensor[(?, 8, 13), uint16], Tensor[(105, 2), uint64], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(105, 2), float64], Tensor[(2, 7, 15), float64], Tensor[(1620), float32], Tensor[(128), float32], Tensor[(2, 7, 15), float64], Tensor[(3, 9, 5), float64], Tensor[(45, 3), float64], Tensor[(3, 9, 5), uint16]) {
  @func_4027(%var_4028) /* ty=(Tensor[(7, 8, 13), int16], Tensor[(?, 8, 13), uint16], Tensor[(105, 2), uint64], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(105, 2), float64], Tensor[(2, 7, 15), float64], Tensor[(1620), float32], Tensor[(128), float32], Tensor[(2, 7, 15), float64], Tensor[(3, 9, 5), float64], Tensor[(45, 3), float64], Tensor[(3, 9, 5), uint16]) */
}

def @func_7949() -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) {
  %1211 = fn () -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) {
    %1207 = @func_4047() /* ty=(Tensor[(3, 9, 5), float64],) */;
    %1208 = @func_5323() /* ty=(Tensor[(3, 9, 5), float64],) */;
    %1209 = %1207.0;
    %1210 = %1208.0;
    (%1209, %1210)
  };
  %1211() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) */
}

def @func_9580(%var_9574: Tensor[(1620), float32]) -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(128), float32], Tensor[(1620), float32], Tensor[(3, 9, 5), uint16]) {
  %1212 = @func_8665() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %1213 = @func_7441() /* ty=(Tensor[(3, 9, 5), uint16], Tensor[(?, 8, 13), float32]) */;
  %1214 = cast(%var_9574, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %1215 = reshape(%1214, newshape=[540, 3]) /* ty=Tensor[(540, 3), float32] */;
  %1216 = @func_9366(%1215) /* ty=(Tensor[(?, 8, 13), float32], Tensor[(128), float32], Tensor[(540, 3), float32], Tensor[(128, 1), float32]) */;
  %1217 = %1212.0;
  %1218 = %1213.1;
  %1219 = %1216.1;
  %1220 = @func_5807() /* ty=Tensor[(3, 9, 5), uint16] */;
  (%1217, %1218, %1219, %var_9574, %1220)
}

def @func_12265(%var_12264: Tensor[(540, 3), float32]) -> (Tensor[(?, 8, 13), float32], Tensor[(1620), float32], Tensor[(35, 6), float64], Tensor[(540, 3), float32]) {
  %1229 = fn (%var_12258: Tensor[(540, 3), float32]) -> (Tensor[(?, 8, 13), float32], Tensor[(1620), float32], Tensor[(35, 6), float64], Tensor[(540, 3), float32]) {
    %1221 = @func_9742() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) */;
    %1222 = cast(meta[relay.Constant][49] /* ty=Tensor[(35, 6), float64] */, dtype="float64") /* ty=Tensor[(35, 6), float64] */;
    %1223 = cast(%var_12258, dtype="float32") /* ty=Tensor[(540, 3), float32] */;
    %1224 = reshape(%1222, newshape=[210]) /* ty=Tensor[(210), float64] */;
    %1225 = reshape(%1223, newshape=[1620]) /* ty=Tensor[(1620), float32] */;
    %1226 = @func_8179(%1224, %1225) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(210), float64], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) */;
    %1227 = %1221.1;
    %1228 = %1226.4;
    (%1227, %1228, meta[relay.Constant][49] /* ty=Tensor[(35, 6), float64] */, %var_12258)
  };
  %1229(%var_12264) /* ty=(Tensor[(?, 8, 13), float32], Tensor[(1620), float32], Tensor[(35, 6), float64], Tensor[(540, 3), float32]) */
}

def @func_20377() -> (Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(135), float64], Tensor[(210), float64], Tensor[(3, 9, 5), float64]) {
  @func_20375() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(135), float64], Tensor[(210), float64], Tensor[(3, 9, 5), float64]) */
}

def @func_15122() -> (Tensor[(3, 9, 5), uint16],) {
  %1232 = fn () -> (Tensor[(3, 9, 5), uint16],) {
    %1230 = @func_13463() /* ty=(Tensor[(3, 9, 5), uint16],) */;
    %1231 = %1230.0;
    (%1231,)
  };
  %1232() /* ty=(Tensor[(3, 9, 5), uint16],) */
}

def @func_16436() -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) {
  @func_16434() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) */
}

def @func_7599() -> Tensor[(?, 8, 13), bool] {
  %1233 = @func_5719() /* ty=(Tensor[(?, 8, 13), bool],) */;
  %1233.0
}

def @func_17835() -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) {
  @func_17833() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) */
}

def @func_19324() -> (Tensor[(?, 8, 13), float32],) {
  %1234 = @func_16434() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) */;
  %1235 = %1234.4;
  (%1235,)
}

def @func_6941() -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), uint16], Tensor[(3, 9, 5), float64]) {
  %1236 = @func_6782() /* ty=(Tensor[(3, 9, 5), uint16], Tensor[(3, 9, 5), float64]) */;
  %1237 = @func_3672() /* ty=(Tensor[(3, 9, 5), uint16],) */;
  %1238 = %1236.1;
  %1239 = %1237.0;
  %1240 = @func_6283() /* ty=Tensor[(3, 9, 5), float64] */;
  (%1238, %1239, %1240)
}

def @func_11542() -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) {
  %1244 = fn () -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) {
    %1241 = @func_11223() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) */;
    %1242 = @func_3141() /* ty=Tensor[(3, 9, 5), float64] */;
    %1243 = %1241.1;
    (%1242, %1243)
  };
  %1244() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) */
}

def @func_18476() -> Tensor[(3, 9, 5), float64] {
  %1245 = @func_14109() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %1245.0
}

def @func_4261() -> (Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) {
  @func_4259() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) */
}

def @func_5302(%var_5295: Tensor[(210, 1), float64]) -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), uint16], Tensor[(210), float64], Tensor[(210, 1), float64], Tensor[(128), float32]) {
  %1246 = @func_5214() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), bool]) */;
  %1247 = %1246.0;
  %1248 = cast(%1247, dtype="float64") /* ty=Tensor[(3, 9, 5), float64] */;
  %1249 = cast(%var_5295, dtype="float64") /* ty=Tensor[(210, 1), float64] */;
  %1250 = cast(meta[relay.Constant][50] /* ty=Tensor[(128), float32] */, dtype="float32") /* ty=Tensor[(128), float32] */;
  %1251 = reshape(%1248, newshape=[45, 3]) /* ty=Tensor[(45, 3), float64] */;
  %1252 = reshape(%1249, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %1253 = reshape(%1250, newshape=[128]) /* ty=Tensor[(128), float32] */;
  %1254 = @func_3116(%1251, %1252, %1253) /* ty=(Tensor[(?, 8, 13), float32], Tensor[(45, 3), float64], Tensor[(?, 8, 13), bool], Tensor[(210), float64], Tensor[(210), float64], Tensor[(2, 7, 15), uint32], Tensor[(128), bool], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(1620), float32]) */;
  %1255 = @func_3330() /* ty=Tensor[(3, 9, 5), uint16] */;
  %1256 = %1254.4;
  (%1247, %1255, %1256, %var_5295, meta[relay.Constant][50] /* ty=Tensor[(128), float32] */)
}

def @func_4523() -> (Tensor[(?, 8, 13), float32],) {
  @func_4521() /* ty=(Tensor[(?, 8, 13), float32],) */
}

def @func_20585() -> (Tensor[(?, 8, 13), float32],) {
  @func_20583() /* ty=(Tensor[(?, 8, 13), float32],) */
}

def @func_2601() -> Tensor[(3, 9, 5), float64] {
  %1258 = fn () -> Tensor[(3, 9, 5), float64] {
    %1257 = @func_2504() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(135), float64]) */;
    %1257.1
  };
  %1258() /* ty=Tensor[(3, 9, 5), float64] */
}

def @func_21307() -> Tensor[(3, 9, 5), float64] {
  @func_21305() /* ty=Tensor[(3, 9, 5), float64] */
}

def @func_7342() -> (Tensor[(3, 9, 5), float64],) {
  %1261 = fn () -> (Tensor[(3, 9, 5), float64],) {
    %1259 = @func_3180() /* ty=(Tensor[(3, 9, 5), float64],) */;
    %1260 = %1259.0;
    (%1260,)
  };
  %1261() /* ty=(Tensor[(3, 9, 5), float64],) */
}

def @func_19794() -> (Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) {
  %1266 = fn () -> (Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) {
    %1262 = @func_4746() /* ty=(Tensor[(?, 8, 13), float32],) */;
    %1263 = @func_15275() /* ty=(Tensor[(15, 2, 10), float64], Tensor[(3, 9, 5), float64]) */;
    %1264 = %1262.0;
    %1265 = %1263.1;
    (%1264, %1265)
  };
  %1266() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) */
}

def @func_13756() -> (Tensor[(7, 8, 13), int16], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) {
  @func_13754() /* ty=(Tensor[(7, 8, 13), int16], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) */
}

def @func_10185() -> (Tensor[(?, 8, 13), float32],) {
  %1268 = fn () -> (Tensor[(?, 8, 13), float32],) {
    %1267 = @func_3345() /* ty=Tensor[(?, 8, 13), float32] */;
    (%1267,)
  };
  %1268() /* ty=(Tensor[(?, 8, 13), float32],) */
}

def @func_13463() -> (Tensor[(3, 9, 5), uint16],) {
  %1269 = @func_8928() /* ty=Tensor[(3, 9, 5), uint16] */;
  (%1269,)
}

def @func_20382() -> (Tensor[(3, 9, 5), float64],) {
  %1270 = @func_11577() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) */;
  %1271 = %1270.1;
  (%1271,)
}

def @func_3539() -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) {
  %1277 = fn () -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) {
    %1272 = @func_3180() /* ty=(Tensor[(3, 9, 5), float64],) */;
    %1273 = @func_3141() /* ty=Tensor[(3, 9, 5), float64] */;
    %1274 = cast(%1273, dtype="float64") /* ty=Tensor[(3, 9, 5), float64] */;
    %1275 = %1272.0;
    %1276 = sigmoid(%1274) /* ty=Tensor[(3, 9, 5), float64] */;
    (%1275, %1276)
  };
  %1277() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) */
}

def @func_2506() -> (Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(135), float64]) {
  @func_2504() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(135), float64]) */
}

def @func_10025() -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float64], Tensor[(2, 7, 15), float64], Tensor[(?, 8, 13), float32]) {
  %1288 = fn () -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float64], Tensor[(2, 7, 15), float64], Tensor[(?, 8, 13), float32]) {
    %1278 = @func_8443() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) */;
    %1279 = @func_5873() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) */;
    %1280 = %1279.0;
    %1281 = cast(%1280, dtype="float64") /* ty=Tensor[(?, 8, 13), float64] */;
    %1282 = @func_2581() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64], Tensor[(105, 2), float64], Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64]) */;
    %1283 = @func_7441() /* ty=(Tensor[(3, 9, 5), uint16], Tensor[(?, 8, 13), float32]) */;
    %1284 = %1278.1;
    %1285 = sinh(%1281) /* ty=Tensor[(?, 8, 13), float64] */;
    %1286 = %1282.4;
    %1287 = %1283.1;
    (%1284, %1285, %1286, %1287)
  };
  %1288() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float64], Tensor[(2, 7, 15), float64], Tensor[(?, 8, 13), float32]) */
}

def @func_12343() -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) {
  @func_12341() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) */
}

def @func_5719() -> (Tensor[(?, 8, 13), bool],) {
  %1289 = @func_3605() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), bool]) */;
  %1290 = %1289.1;
  (%1290,)
}

def @func_14956(%var_14923: Tensor[(12, 8, 13), bool]) -> (Tensor[(12, 8, 13), bool], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), uint16]) {
  %1291 = @func_8954() /* ty=(Tensor[(?, 8, 13), bool],) */;
  %1292 = %1291.0;
  %1293 = cast(%1292, dtype="bool") /* ty=Tensor[(?, 8, 13), bool] */;
  %1294 = cast(%var_14923, dtype="bool") /* ty=Tensor[(12, 8, 13), bool] */;
  %1295 = cast(meta[relay.Constant][51] /* ty=Tensor[(1620), float32] */, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %1296 = reshape(%1295, newshape=[1620]) /* ty=Tensor[(1620), float32] */;
  %1297 = @func_12630(%1296) /* ty=(Tensor[(?, 8, 13), float32], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) */;
  %1298 = @func_5424() /* ty=(Tensor[(3, 9, 5), uint16],) */;
  %1299 = logical_or(%1293, %1294) /* ty=Tensor[(12, 8, 13), bool] */;
  %1300 = %1297.1;
  %1301 = @func_8893() /* ty=Tensor[(3, 9, 5), float64] */;
  %1302 = %1298.0;
  (%1299, %1300, meta[relay.Constant][51] /* ty=Tensor[(1620), float32] */, %1301, %1302)
}

def @func_9899() -> (Tensor[(3, 9, 5), float64],) {
  @func_9897() /* ty=(Tensor[(3, 9, 5), float64],) */
}

def @func_9277() -> Tensor[(2, 7, 15), float64] {
  %1304 = fn () -> Tensor[(2, 7, 15), float64] {
    %1303 = @func_2581() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64], Tensor[(105, 2), float64], Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64]) */;
    %1303.1
  };
  %1304() /* ty=Tensor[(2, 7, 15), float64] */
}

def @func_4706() -> Tensor[(3, 9, 5), float64] {
  %1306 = fn () -> Tensor[(3, 9, 5), float64] {
    %1305 = @func_4047() /* ty=(Tensor[(3, 9, 5), float64],) */;
    %1305.0
  };
  %1306() /* ty=Tensor[(3, 9, 5), float64] */
}

def @func_8611(%var_8610: Tensor[(210), float64]) -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(210), float64]) {
  %1312 = fn (%var_8604: Tensor[(210), float64]) -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(210), float64]) {
    %1307 = cast(%var_8604, dtype="float64") /* ty=Tensor[(210), float64] */;
    %1308 = reshape(%1307, newshape=[210, 1]) /* ty=Tensor[(210, 1), float64] */;
    %1309 = @func_5520(%1308) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64], Tensor[(210, 1), float64]) */;
    %1310 = @func_3141() /* ty=Tensor[(3, 9, 5), float64] */;
    %1311 = %1309.1;
    (%1310, %1311, %var_8604)
  };
  %1312(%var_8610) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(210), float64]) */
}

def @func_5742() -> (Tensor[(?, 8, 13), float32],) {
  @func_5740() /* ty=(Tensor[(?, 8, 13), float32],) */
}

def @func_15383() -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(210), float64]) {
  @func_15381() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(210), float64]) */
}

def @func_14588(%var_14579: uint16) -> (Tensor[(12, 12, 15), uint16],) {
  %1313 = cast(%var_14579, dtype="uint16") /* ty=uint16 */;
  %1314 = cast(meta[relay.Constant][52] /* ty=Tensor[(12, 12, 15), uint16] */, dtype="uint16") /* ty=Tensor[(12, 12, 15), uint16] */;
  %1315 = add(%1313, %1314) /* ty=Tensor[(12, 12, 15), uint16] */;
  (%1315,)
}

def @func_17216() -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), uint16], Tensor[(3, 9, 5), float64]) {
  @func_17214() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), uint16], Tensor[(3, 9, 5), float64]) */
}

def @func_10083(%var_10082: Tensor[(5, 4, 3), float64]) -> (Tensor[(3, 9, 5), float64], Tensor[(5, 4, 3), float32], Tensor[(?, 8, 13), float32], Tensor[(5, 4, 3), float32], Tensor[(?, 8, 13), float32]) {
  %1327 = fn (%var_10043: Tensor[(5, 4, 3), float64]) -> (Tensor[(3, 9, 5), float64], Tensor[(5, 4, 3), float32], Tensor[(?, 8, 13), float32], Tensor[(5, 4, 3), float32], Tensor[(?, 8, 13), float32]) {
    %1316 = @func_3538() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) */;
    %1317 = cast(%var_10043, dtype="float64") /* ty=Tensor[(5, 4, 3), float64] */;
    %1318 = sinh(%1317) /* ty=Tensor[(5, 4, 3), float64] */;
    %1319 = cast(%1318, dtype="float32") /* ty=Tensor[(5, 4, 3), float32] */;
    %1320 = cast(%1318, dtype="float32") /* ty=Tensor[(5, 4, 3), float32] */;
    %1321 = @func_4832() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) */;
    %1322 = %1316.0;
    %1323 = asin(%1319) /* ty=Tensor[(5, 4, 3), float32] */;
    %1324 = @func_7757() /* ty=Tensor[(?, 8, 13), float32] */;
    %1325 = acosh(%1320) /* ty=Tensor[(5, 4, 3), float32] */;
    %1326 = %1321.1;
    (%1322, %1323, %1324, %1325, %1326)
  };
  %1327(%var_10082) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(5, 4, 3), float32], Tensor[(?, 8, 13), float32], Tensor[(5, 4, 3), float32], Tensor[(?, 8, 13), float32]) */
}

def @func_16713() -> (Tensor[(3, 9, 5), float64],) {
  %1330 = fn () -> (Tensor[(3, 9, 5), float64],) {
    %1328 = @func_11711() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(2, 7, 15), uint8], Tensor[(210), float64], Tensor[(128), float32], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) */;
    %1329 = %1328.1;
    (%1329,)
  };
  %1330() /* ty=(Tensor[(3, 9, 5), float64],) */
}

def @func_5086() -> (Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) {
  @func_5084() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) */
}

def @func_12999() -> Tensor[(3, 9, 5), float64] {
  %1331 = @func_5323() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %1331.0
}

def @func_21475() -> Tensor[(?, 8, 13), float32] {
  %1332 = @func_10184() /* ty=(Tensor[(?, 8, 13), float32],) */;
  %1332.0
}

def @func_12439(%var_12438: Tensor[(128), float32]) -> (Tensor[(?, 8, 13), bool], Tensor[(3, 45), float32], Tensor[(1620), float32], Tensor[(128), float32], Tensor[(3, 9, 5), float64]) {
  %1342 = fn (%var_12430: Tensor[(128), float32]) -> (Tensor[(?, 8, 13), bool], Tensor[(3, 45), float32], Tensor[(1620), float32], Tensor[(128), float32], Tensor[(3, 9, 5), float64]) {
    %1333 = @func_10788() /* ty=(Tensor[(?, 8, 13), bool], Tensor[(?, 8, 13), bool], Tensor[(3, 9, 5), uint16]) */;
    %1334 = cast(meta[relay.Constant][53] /* ty=Tensor[(1620), float32] */, dtype="float32") /* ty=Tensor[(1620), float32] */;
    %1335 = cast(%var_12430, dtype="float32") /* ty=Tensor[(128), float32] */;
    %1336 = reshape(%1334, newshape=[1620]) /* ty=Tensor[(1620), float32] */;
    %1337 = reshape(%1335, newshape=[128]) /* ty=Tensor[(128), float32] */;
    %1338 = @func_8747(%1336, %1337) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 45), float32], Tensor[(1620), float32], Tensor[(128), float32], Tensor[(52, 2), bool], Tensor[(210), float64]) */;
    %1339 = %1333.1;
    %1340 = %1338.1;
    %1341 = @func_7537() /* ty=Tensor[(3, 9, 5), float64] */;
    (%1339, %1340, meta[relay.Constant][53] /* ty=Tensor[(1620), float32] */, %var_12430, %1341)
  };
  %1342(%var_12438) /* ty=(Tensor[(?, 8, 13), bool], Tensor[(3, 45), float32], Tensor[(1620), float32], Tensor[(128), float32], Tensor[(3, 9, 5), float64]) */
}

def @func_12788() -> Tensor[(?, 8, 13), float32] {
  %1343 = fn () -> Tensor[(?, 8, 13), float32] {
    @func_3345() /* ty=Tensor[(?, 8, 13), float32] */
  };
  %1343() /* ty=Tensor[(?, 8, 13), float32] */
}

def @func_11658() -> (Tensor[(?, 8, 13), float32],) {
  @func_11656() /* ty=(Tensor[(?, 8, 13), float32],) */
}

def @func_9713() -> (Tensor[(3, 9, 5), float64], Tensor[(2, 7, 15), float64]) {
  @func_9711() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(2, 7, 15), float64]) */
}

def @func_12632(%var_12631: Tensor[(1620), float32]) -> (Tensor[(?, 8, 13), float32], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) {
  %1354 = fn (%var_12607: Tensor[(1620), float32]) -> (Tensor[(?, 8, 13), float32], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) {
    %1344 = @func_11711() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(2, 7, 15), uint8], Tensor[(210), float64], Tensor[(128), float32], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) */;
    %1345 = cast(%var_12607, dtype="float32") /* ty=Tensor[(1620), float32] */;
    %1346 = reshape(%1345, newshape=[540, 3]) /* ty=Tensor[(540, 3), float32] */;
    %1347 = @func_12263(%1346) /* ty=(Tensor[(?, 8, 13), float32], Tensor[(1620), float32], Tensor[(35, 6), float64], Tensor[(540, 3), float32]) */;
    %1348 = @func_2447() /* ty=(Tensor[(?, 8, 13), float32],) */;
    %1349 = @func_10204() /* ty=(Tensor[(3, 9, 5), float64],) */;
    %1350 = %1344.7;
    %1351 = %1347.1;
    %1352 = %1348.0;
    %1353 = %1349.0;
    (%1350, %1351, %var_12607, %1352, %1353)
  };
  %1354(%var_12631) /* ty=(Tensor[(?, 8, 13), float32], Tensor[(1620), float32], Tensor[(1620), float32], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) */
}

def @func_12926() -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), bool]) {
  %1355 = @func_3180() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %1356 = @func_11577() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) */;
  %1357 = @func_8954() /* ty=(Tensor[(?, 8, 13), bool],) */;
  %1358 = %1355.0;
  %1359 = %1356.1;
  %1360 = %1357.0;
  (%1358, %1359, %1360)
}

def @func_7601() -> Tensor[(?, 8, 13), bool] {
  @func_7599() /* ty=Tensor[(?, 8, 13), bool] */
}

def @func_16239() -> (Tensor[(11, 11, 11), float32], Tensor[(?, 8, 13), bool]) {
  %1364 = fn () -> (Tensor[(11, 11, 11), float32], Tensor[(?, 8, 13), bool]) {
    %1361 = cast(meta[relay.Constant][54] /* ty=Tensor[(11, 11, 11), float32] */, dtype="float32") /* ty=Tensor[(11, 11, 11), float32] */;
    %1362 = atanh(%1361) /* ty=Tensor[(11, 11, 11), float32] */;
    %1363 = @func_2460() /* ty=Tensor[(?, 8, 13), bool] */;
    (%1362, %1363)
  };
  %1364() /* ty=(Tensor[(11, 11, 11), float32], Tensor[(?, 8, 13), bool]) */
}

def @func_17591() -> Tensor[(?, 8, 13), float32] {
  @func_17589() /* ty=Tensor[(?, 8, 13), float32] */
}

def @func_5522(%var_5521: Tensor[(210, 1), float64]) -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64], Tensor[(210, 1), float64]) {
  %1374 = fn (%var_5517: Tensor[(210, 1), float64]) -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64], Tensor[(210, 1), float64]) {
    %1365 = @func_3672() /* ty=(Tensor[(3, 9, 5), uint16],) */;
    %1366 = %1365.0;
    %1367 = cast(%1366, dtype="float64") /* ty=Tensor[(3, 9, 5), float64] */;
    %1368 = cast(%var_5517, dtype="float64") /* ty=Tensor[(210, 1), float64] */;
    %1369 = reshape(%1368, newshape=[2, 7, 15]) /* ty=Tensor[(2, 7, 15), float64] */;
    %1370 = @func_869(%1369) /* ty=(Tensor[(2, 7, 15), float64],) */;
    %1371 = atan(%1367) /* ty=Tensor[(3, 9, 5), float64] */;
    %1372 = @func_4359() /* ty=Tensor[(?, 8, 13), float32] */;
    %1373 = %1370.0;
    (%1371, %1372, %1373, %var_5517)
  };
  %1374(%var_5521) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64], Tensor[(210, 1), float64]) */
}

def @func_14300() -> Tensor[(3, 9, 5), float64] {
  @func_14298() /* ty=Tensor[(3, 9, 5), float64] */
}

def @func_18887() -> (Tensor[(1620), float32],) {
  @func_18885() /* ty=(Tensor[(1620), float32],) */
}

def @func_8987() -> Tensor[(?, 8, 13), float32] {
  %1376 = fn () -> Tensor[(?, 8, 13), float32] {
    %1375 = @func_4259() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) */;
    %1375.1
  };
  %1376() /* ty=Tensor[(?, 8, 13), float32] */
}

def @func_9084() -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) {
  @func_9082() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) */
}

def @func_4832() -> (Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) {
  %1377 = @func_4153() /* ty=Tensor[(?, 8, 13), float32] */;
  %1378 = @func_4349() /* ty=Tensor[(?, 8, 13), float32] */;
  (%1377, %1378)
}

def @func_15536() -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), uint16], Tensor[(3, 9, 5), uint16], Tensor[(2, 7, 15), float64]) {
  @func_15534() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), uint16], Tensor[(3, 9, 5), uint16], Tensor[(2, 7, 15), float64]) */
}

def @func_12552() -> (Tensor[(7, 8, 13), int16],) {
  %1379 = @func_4095() /* ty=(Tensor[(7, 8, 13), int16],) */;
  %1380 = %1379.0;
  (%1380,)
}

def @func_17833() -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) {
  %1381 = @func_11577() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) */;
  %1382 = @func_7341() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %1383 = %1381.1;
  %1384 = %1382.0;
  (%1383, %1384)
}

def @func_16532(%var_16530: int8, %var_16531: Tensor[(9, 13, 1), int8]) -> (Tensor[(9, 13, 1), int8],) {
  @func_16528(%var_16530, %var_16531) /* ty=(Tensor[(9, 13, 1), int8],) */
}

def @func_20786() -> Tensor[(?, 8, 13), float32] {
  %1385 = fn () -> Tensor[(?, 8, 13), float32] {
    @func_3842() /* ty=Tensor[(?, 8, 13), float32] */
  };
  %1385() /* ty=Tensor[(?, 8, 13), float32] */
}

def @func_19466() -> (Tensor[(3, 9, 5), uint16], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) {
  %1392 = fn () -> (Tensor[(3, 9, 5), uint16], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) {
    %1386 = @func_18867() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), uint16]) */;
    %1387 = @func_17833() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) */;
    %1388 = %1386.1;
    %1389 = @func_17589() /* ty=Tensor[(?, 8, 13), float32] */;
    %1390 = @func_18535() /* ty=Tensor[(?, 8, 13), float32] */;
    %1391 = %1387.0;
    (%1388, %1389, %1390, %1391)
  };
  %1392() /* ty=(Tensor[(3, 9, 5), uint16], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) */
}

def @func_12554() -> (Tensor[(7, 8, 13), int16],) {
  @func_12552() /* ty=(Tensor[(7, 8, 13), int16],) */
}

def @func_18537() -> Tensor[(?, 8, 13), float32] {
  @func_18535() /* ty=Tensor[(?, 8, 13), float32] */
}

def @func_2759(%var_2739: Tensor[(210), float64]) -> (Tensor[(?, 8, 13), bool], Tensor[(52, 2), bool], Tensor[(1620), float32], Tensor[(128), float32], Tensor[(210), float64]) {
  %1393 = @func_2384() /* ty=(Tensor[(10, 4, 6), int32], Tensor[(?, 8, 13), bool], Tensor[(1, 104), bool]) */;
  %1394 = cast(meta[relay.Constant][55] /* ty=Tensor[(1620), float32] */, dtype="float32") /* ty=Tensor[(1620), float32] */;
  %1395 = cast(meta[relay.Constant][56] /* ty=Tensor[(128), float32] */, dtype="float32") /* ty=Tensor[(128), float32] */;
  %1396 = %1393.1;
  %1397 = cast(%1396, dtype="bool") /* ty=Tensor[(?, 8, 13), bool] */;
  %1398 = cast(%var_2739, dtype="float64") /* ty=Tensor[(210), float64] */;
  %1399 = reshape(%1394, newshape=[12, 15, 9]) /* ty=Tensor[(12, 15, 9), float32] */;
  %1400 = reshape(%1395, newshape=[128]) /* ty=Tensor[(128), float32] */;
  %1401 = reshape(%1397, newshape=[52, 2]) /* ty=Tensor[(52, 2), bool] */;
  %1402 = reshape(%1398, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %1403 = @func_2289(%1399, %1400, %1401, %1402) /* ty=(Tensor[(3, 45), float32], Tensor[(128), float32], Tensor[(135), float64], Tensor[(52, 2), bool], Tensor[(2, 7, 15), float64], Tensor[(210), float64], Tensor[(12, 15, 9), float64], Tensor[(12, 15, 9), int8], Tensor[(2, 7, 15), float64]) */;
  %1404 = %1403.3;
  (%1396, %1404, meta[relay.Constant][55] /* ty=Tensor[(1620), float32] */, meta[relay.Constant][56] /* ty=Tensor[(128), float32] */, %var_2739)
}

def @func_11271() -> (Tensor[(3, 9, 5), float64],) {
  %1406 = fn () -> (Tensor[(3, 9, 5), float64],) {
    %1405 = @func_10848() /* ty=Tensor[(3, 9, 5), float64] */;
    (%1405,)
  };
  %1406() /* ty=(Tensor[(3, 9, 5), float64],) */
}

def @func_9338() -> Tensor[(3, 9, 5), float64] {
  @func_9336() /* ty=Tensor[(3, 9, 5), float64] */
}

def @func_18955() -> (Tensor[(3, 9, 5), float64],) {
  %1408 = fn () -> (Tensor[(3, 9, 5), float64],) {
    %1407 = @func_16494() /* ty=Tensor[(3, 9, 5), float64] */;
    (%1407,)
  };
  %1408() /* ty=(Tensor[(3, 9, 5), float64],) */
}

def @func_4176() -> (Tensor[(?, 8, 13), float32],) {
  %1410 = fn () -> (Tensor[(?, 8, 13), float32],) {
    %1409 = @func_4126() /* ty=Tensor[(?, 8, 13), float32] */;
    (%1409,)
  };
  %1410() /* ty=(Tensor[(?, 8, 13), float32],) */
}

def @func_872(%var_870: Tensor[(2, 7, 15), float64]) -> (Tensor[(2, 7, 15), float64],) {
  @func_869(%var_870) /* ty=(Tensor[(2, 7, 15), float64],) */
}

def @func_4390(%var_4389: Tensor[(728), int16]) -> (Tensor[(?, 8, 13), float32], Tensor[(7, 8, 13), bool], Tensor[(728), int16]) {
  %1416 = fn (%var_4377: Tensor[(728), int16]) -> (Tensor[(?, 8, 13), float32], Tensor[(7, 8, 13), bool], Tensor[(728), int16]) {
    %1411 = cast(%var_4377, dtype="int16") /* ty=Tensor[(728), int16] */;
    %1412 = reshape(%1411, newshape=[7, 8, 13]) /* ty=Tensor[(7, 8, 13), int16] */;
    %1413 = @func_4292(%1412) /* ty=(Tensor[(7, 8, 13), bool],) */;
    %1414 = @func_4349() /* ty=Tensor[(?, 8, 13), float32] */;
    %1415 = %1413.0;
    (%1414, %1415, %var_4377)
  };
  %1416(%var_4389) /* ty=(Tensor[(?, 8, 13), float32], Tensor[(7, 8, 13), bool], Tensor[(728), int16]) */
}

def @func_2385() -> (Tensor[(10, 4, 6), int32], Tensor[(?, 8, 13), bool], Tensor[(1, 104), bool]) {
  %1430 = fn () -> (Tensor[(10, 4, 6), int32], Tensor[(?, 8, 13), bool], Tensor[(1, 104), bool]) {
    %1417 = cast(meta[relay.Constant][57] /* ty=Tensor[(10, 4, 6), float64] */, dtype="float64") /* ty=Tensor[(10, 4, 6), float64] */;
    %1418 = rsqrt(%1417) /* ty=Tensor[(10, 4, 6), float64] */;
    %1419 = cast(meta[relay.Constant][57] /* ty=Tensor[(10, 4, 6), float64] */, dtype="int32") /* ty=Tensor[(10, 4, 6), int32] */;
    %1420 = shape_of(%1418, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1421 = cast(%1418, dtype="int32") /* ty=Tensor[(10, 4, 6), int32] */;
    %1422 = dyn.reshape(%1419, %1420, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %1423 = cast(meta[relay.Constant][58] /* ty=Tensor[(1, 104), bool] */, dtype="bool") /* ty=Tensor[(1, 104), bool] */;
    %1424 = cast(meta[relay.Constant][58] /* ty=Tensor[(1, 104), bool] */, dtype="bool") /* ty=Tensor[(1, 104), bool] */;
    %1425 = reshape(%1423, newshape=[1, 8, 13]) /* ty=Tensor[(1, 8, 13), bool] */;
    %1426 = reshape(%1424, newshape=[1, 8, 13]) /* ty=Tensor[(1, 8, 13), bool] */;
    %1427 = @func_1635(%1425, %1426) /* ty=(Tensor[(?, 8, 13), bool],) */;
    %1428 = minimum(%1421, %1422) /* ty=Tensor[(10, 4, 6), int32] */;
    %1429 = %1427.0;
    (%1428, %1429, meta[relay.Constant][58] /* ty=Tensor[(1, 104), bool] */)
  };
  %1430() /* ty=(Tensor[(10, 4, 6), int32], Tensor[(?, 8, 13), bool], Tensor[(1, 104), bool]) */
}

def @func_13744() -> Tensor[(?, 8, 13), float32] {
  %1431 = fn () -> Tensor[(?, 8, 13), float32] {
    @func_4533() /* ty=Tensor[(?, 8, 13), float32] */
  };
  %1431() /* ty=Tensor[(?, 8, 13), float32] */
}

def @func_15184(%var_15183: Tensor[(16, 8, 13), bool]) -> (Tensor[(3, 9, 5), float64], Tensor[(16, 8, 13), uint16]) {
  %1439 = fn (%var_15166: Tensor[(16, 8, 13), bool]) -> (Tensor[(3, 9, 5), float64], Tensor[(16, 8, 13), uint16]) {
    %1432 = @func_12341() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) */;
    %1433 = @func_5719() /* ty=(Tensor[(?, 8, 13), bool],) */;
    %1434 = %1433.0;
    %1435 = cast(%1434, dtype="uint16") /* ty=Tensor[(?, 8, 13), uint16] */;
    %1436 = cast(%var_15166, dtype="uint16") /* ty=Tensor[(16, 8, 13), uint16] */;
    %1437 = %1432.0;
    %1438 = bitwise_and(%1435, %1436) /* ty=Tensor[(16, 8, 13), uint16] */;
    (%1437, %1438)
  };
  %1439(%var_15183) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(16, 8, 13), uint16]) */
}

def @func_5924(%var_5923: Tensor[(210), float64]) -> (Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), uint16], Tensor[(3, 9, 5), float64], Tensor[(128), float32], Tensor[(210), float64]) {
  %1449 = fn (%var_5915: Tensor[(210), float64]) -> (Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), uint16], Tensor[(3, 9, 5), float64], Tensor[(128), float32], Tensor[(210), float64]) {
    %1440 = @func_4259() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) */;
    %1441 = @func_4184() /* ty=(Tensor[(3, 9, 5), float64],) */;
    %1442 = cast(%var_5915, dtype="float64") /* ty=Tensor[(210), float64] */;
    %1443 = reshape(%1442, newshape=[210]) /* ty=Tensor[(210), float64] */;
    %1444 = @func_2759(%1443) /* ty=(Tensor[(?, 8, 13), bool], Tensor[(52, 2), bool], Tensor[(1620), float32], Tensor[(128), float32], Tensor[(210), float64]) */;
    %1445 = %1440.1;
    %1446 = @func_5807() /* ty=Tensor[(3, 9, 5), uint16] */;
    %1447 = %1441.0;
    %1448 = %1444.3;
    (%1445, %1446, %1447, %1448, %var_5915)
  };
  %1449(%var_5923) /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), uint16], Tensor[(3, 9, 5), float64], Tensor[(128), float32], Tensor[(210), float64]) */
}

def @func_13734(%var_13733: Tensor[(252), float32]) -> (Tensor[(?, 8, 13), bool], Tensor[(13, 16, ?), int16], Tensor[(208), int16], Tensor[(2288), int16], Tensor[(210), float64], Tensor[(252), float32], Tensor[(128), float32]) {
  %1468 = fn (%var_13721: Tensor[(252), float32]) -> (Tensor[(?, 8, 13), bool], Tensor[(13, 16, ?), int16], Tensor[(208), int16], Tensor[(2288), int16], Tensor[(210), float64], Tensor[(252), float32], Tensor[(128), float32]) {
    %1450 = @func_5719() /* ty=(Tensor[(?, 8, 13), bool],) */;
    %1451 = cast(meta[relay.Constant][59] /* ty=Tensor[(208), int16] */, dtype="int16") /* ty=Tensor[(208), int16] */;
    %1452 = cast(meta[relay.Constant][59] /* ty=Tensor[(208), int16] */, dtype="int16") /* ty=Tensor[(208), int16] */;
    %1453 = cast(meta[relay.Constant][60] /* ty=Tensor[(2288), int16] */, dtype="int16") /* ty=Tensor[(2288), int16] */;
    %1454 = reshape(%1451, newshape=[13, 16, 1]) /* ty=Tensor[(13, 16, 1), int16] */;
    %1455 = reshape(%1452, newshape=[13, 16, 1]) /* ty=Tensor[(13, 16, 1), int16] */;
    %1456 = reshape(%1453, newshape=[13, 16, 11]) /* ty=Tensor[(13, 16, 11), int16] */;
    %1457 = @func_447(%1454, %1455, %1456) /* ty=(Tensor[(13, 16, ?), int16], Tensor[(13, 16, 11), uint16]) */;
    %1458 = cast(%var_13721, dtype="float32") /* ty=Tensor[(252), float32] */;
    %1459 = reshape(%1458, newshape=[7, 9, 4]) /* ty=Tensor[(7, 9, 4), float32] */;
    %1460 = @func_13619(%1459) /* ty=(Tensor[(7, 9, 4), float32], Tensor[(2, 7, 15), uint8], Tensor[(210), float64], Tensor[(?, 8, 13), float32], Tensor[(7, 9, 4), float32]) */;
    %1461 = %1460.2;
    %1462 = cast(%1461, dtype="float64") /* ty=Tensor[(210), float64] */;
    %1463 = reshape(%1462, newshape=[210]) /* ty=Tensor[(210), float64] */;
    %1464 = @func_2759(%1463) /* ty=(Tensor[(?, 8, 13), bool], Tensor[(52, 2), bool], Tensor[(1620), float32], Tensor[(128), float32], Tensor[(210), float64]) */;
    %1465 = %1450.0;
    %1466 = %1457.0;
    %1467 = %1464.3;
    (%1465, %1466, meta[relay.Constant][59] /* ty=Tensor[(208), int16] */, meta[relay.Constant][60] /* ty=Tensor[(2288), int16] */, %1461, %var_13721, %1467)
  };
  %1468(%var_13733) /* ty=(Tensor[(?, 8, 13), bool], Tensor[(13, 16, ?), int16], Tensor[(208), int16], Tensor[(2288), int16], Tensor[(210), float64], Tensor[(252), float32], Tensor[(128), float32]) */
}

def @func_16548() -> (Tensor[(?, 8, 13), bool],) {
  %1469 = @func_6994() /* ty=Tensor[(?, 8, 13), bool] */;
  (%1469,)
}

def @func_7544() -> (Tensor[(3, 9, 5), float64],) {
  %1472 = fn () -> (Tensor[(3, 9, 5), float64],) {
    %1470 = @func_2839() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(7, 8, 13), int16]) */;
    %1471 = %1470.0;
    (%1471,)
  };
  %1472() /* ty=(Tensor[(3, 9, 5), float64],) */
}

def @func_18229() -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), uint16]) {
  %1478 = fn () -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), uint16]) {
    %1473 = @func_11577() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) */;
    %1474 = @func_13830() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(2, 7, 15), float64], Tensor[(3, 9, 5), uint16]) */;
    %1475 = @func_13945() /* ty=Tensor[(3, 9, 5), float64] */;
    %1476 = %1473.1;
    %1477 = %1474.2;
    (%1475, %1476, %1477)
  };
  %1478() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), uint16]) */
}

def @func_15276() -> (Tensor[(15, 2, 10), float64], Tensor[(3, 9, 5), float64]) {
  %1483 = fn () -> (Tensor[(15, 2, 10), float64], Tensor[(3, 9, 5), float64]) {
    %1479 = @func_11778() /* ty=(Tensor[(15, 2, 10), float64],) */;
    %1480 = @func_9897() /* ty=(Tensor[(3, 9, 5), float64],) */;
    %1481 = %1479.0;
    %1482 = %1480.0;
    (%1481, %1482)
  };
  %1483() /* ty=(Tensor[(15, 2, 10), float64], Tensor[(3, 9, 5), float64]) */
}

def @func_4533() -> Tensor[(?, 8, 13), float32] {
  @func_4349() /* ty=Tensor[(?, 8, 13), float32] */
}

def @func_10401() -> (Tensor[(?, 8, 13), bool],) {
  @func_10399() /* ty=(Tensor[(?, 8, 13), bool],) */
}

def @func_21001() -> (Tensor[(2, 7, 15), float64],) {
  @func_20999() /* ty=(Tensor[(2, 7, 15), float64],) */
}

def @func_3388() -> Tensor[(7, 8, 13), int16] {
  @func_3386() /* ty=Tensor[(7, 8, 13), int16] */
}

def @func_4184() -> (Tensor[(3, 9, 5), float64],) {
  %1484 = @func_2600() /* ty=Tensor[(3, 9, 5), float64] */;
  (%1484,)
}

def @func_5873() -> (Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) {
  %1485 = @func_5740() /* ty=(Tensor[(?, 8, 13), float32],) */;
  %1486 = @func_4349() /* ty=Tensor[(?, 8, 13), float32] */;
  %1487 = %1485.0;
  %1488 = @func_4937() /* ty=Tensor[(3, 9, 5), float64] */;
  (%1486, %1487, %1488)
}

def @func_20180() -> (Tensor[(3, 9, 5), float64],) {
  @func_20178() /* ty=(Tensor[(3, 9, 5), float64],) */
}

def @func_9209() -> (Tensor[(3, 9, 5), uint16], Tensor[(3, 9, 5), float64]) {
  %1492 = fn () -> (Tensor[(3, 9, 5), uint16], Tensor[(3, 9, 5), float64]) {
    %1489 = @func_7441() /* ty=(Tensor[(3, 9, 5), uint16], Tensor[(?, 8, 13), float32]) */;
    %1490 = %1489.0;
    %1491 = @func_6411() /* ty=Tensor[(3, 9, 5), float64] */;
    (%1490, %1491)
  };
  %1492() /* ty=(Tensor[(3, 9, 5), uint16], Tensor[(3, 9, 5), float64]) */
}

def @func_16945() -> (Tensor[(3, 9, 5), uint16],) {
  %1493 = @func_13463() /* ty=(Tensor[(3, 9, 5), uint16],) */;
  %1494 = %1493.0;
  (%1494,)
}

def @func_17067() -> (Tensor[(?, 8, 13), bool], Tensor[(2, 7, 15), float64], Tensor[(210), float64]) {
  %1500 = fn () -> (Tensor[(?, 8, 13), bool], Tensor[(2, 7, 15), float64], Tensor[(210), float64]) {
    %1495 = cast(meta[relay.Constant][61] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
    %1496 = reshape(%1495, newshape=[2, 7, 15]) /* ty=Tensor[(2, 7, 15), float64] */;
    %1497 = @func_869(%1496) /* ty=(Tensor[(2, 7, 15), float64],) */;
    %1498 = @func_6994() /* ty=Tensor[(?, 8, 13), bool] */;
    %1499 = %1497.0;
    (%1498, %1499, meta[relay.Constant][61] /* ty=Tensor[(210), float64] */)
  };
  %1500() /* ty=(Tensor[(?, 8, 13), bool], Tensor[(2, 7, 15), float64], Tensor[(210), float64]) */
}

def @func_14696(%var_14694: Tensor[(35, 6), float64], %var_14695: Tensor[(7, 104), int16]) -> (Tensor[(3, 9, 5), float64], Tensor[(2, 7, 15), uint32], Tensor[(35, 6), float64], Tensor[(7, 104), int16], Tensor[(?, 8, 13), bool], Tensor[(?, 8, 13), float32]) {
  %1516 = fn (%var_14603: Tensor[(35, 6), float64], %var_14630: Tensor[(7, 104), int16]) -> (Tensor[(3, 9, 5), float64], Tensor[(2, 7, 15), uint32], Tensor[(35, 6), float64], Tensor[(7, 104), int16], Tensor[(?, 8, 13), bool], Tensor[(?, 8, 13), float32]) {
    %1501 = @func_9613() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) */;
    %1502 = cast(%var_14603, dtype="float64") /* ty=Tensor[(35, 6), float64] */;
    %1503 = reshape(%1502, newshape=[2, 7, 15]) /* ty=Tensor[(2, 7, 15), float64] */;
    %1504 = @func_9180() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(7, 8, 13), bool], Tensor[(7, 104), int16]) */;
    %1505 = %1504.2;
    %1506 = cast(%var_14630, dtype="int16") /* ty=Tensor[(7, 104), int16] */;
    %1507 = shape_of(%1505, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1508 = cast(%1505, dtype="int16") /* ty=Tensor[(7, 104), int16] */;
    %1509 = dyn.reshape(%1506, %1507, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
    %1510 = @func_11340() /* ty=(Tensor[(?, 8, 13), bool],) */;
    %1511 = %1501.0;
    %1512 = @func_2985(%1503) /* ty=Tensor[(2, 7, 15), uint32] */;
    %1513 = subtract(%1508, %1509) /* ty=Tensor[(7, 104), int16] */;
    %1514 = %1510.0;
    %1515 = @func_4153() /* ty=Tensor[(?, 8, 13), float32] */;
    (%1511, %1512, %var_14603, %1513, %1514, %1515)
  };
  %1516(%var_14694, %var_14695) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(2, 7, 15), uint32], Tensor[(35, 6), float64], Tensor[(7, 104), int16], Tensor[(?, 8, 13), bool], Tensor[(?, 8, 13), float32]) */
}

def @func_7264() -> (Tensor[(7, 8, 13), int16],) {
  %1519 = fn () -> (Tensor[(7, 8, 13), int16],) {
    %1517 = @func_4095() /* ty=(Tensor[(7, 8, 13), int16],) */;
    %1518 = %1517.0;
    (%1518,)
  };
  %1519() /* ty=(Tensor[(7, 8, 13), int16],) */
}

def @func_4609() -> (Tensor[(3, 9, 5), float64],) {
  %1520 = @func_3180() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %1521 = %1520.0;
  (%1521,)
}

def @func_10466() -> (Tensor[(?, 8, 13), float32],) {
  %1522 = @func_2504() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(135), float64]) */;
  %1523 = %1522.0;
  (%1523,)
}

def @func_15977() -> Tensor[(3, 9, 5), uint16] {
  @func_15975() /* ty=Tensor[(3, 9, 5), uint16] */
}

def @func_8443() -> (Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) {
  %1524 = @func_4075() /* ty=(Tensor[(3, 9, 5), uint16], Tensor[(?, 8, 13), float32]) */;
  %1525 = %1524.1;
  %1526 = @func_4705() /* ty=Tensor[(3, 9, 5), float64] */;
  (%1525, %1526)
}

def @func_21064() -> (Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), bool]) {
  %1533 = fn () -> (Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), bool]) {
    %1527 = @func_13754() /* ty=(Tensor[(7, 8, 13), int16], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) */;
    %1528 = @func_15248() /* ty=(Tensor[(105, 2), float64], Tensor[(3, 9, 5), uint16], Tensor[(3, 9, 5), float64]) */;
    %1529 = @func_17066() /* ty=(Tensor[(?, 8, 13), bool], Tensor[(2, 7, 15), float64], Tensor[(210), float64]) */;
    %1530 = %1527.2;
    %1531 = %1528.2;
    %1532 = %1529.0;
    (%1530, %1531, %1532)
  };
  %1533() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), bool]) */
}

def @func_15975() -> Tensor[(3, 9, 5), uint16] {
  %1534 = @func_10811() /* ty=(Tensor[(3, 9, 5), uint16],) */;
  %1534.0
}

def @func_6284() -> Tensor[(3, 9, 5), float64] {
  %1535 = fn () -> Tensor[(3, 9, 5), float64] {
    @func_4867() /* ty=Tensor[(3, 9, 5), float64] */
  };
  %1535() /* ty=Tensor[(3, 9, 5), float64] */
}

def @func_4746() -> (Tensor[(?, 8, 13), float32],) {
  %1536 = @func_2581() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64], Tensor[(105, 2), float64], Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64]) */;
  %1537 = %1536.3;
  (%1537,)
}

def @func_19250() -> Tensor[(3, 9, 5), float64] {
  %1538 = fn () -> Tensor[(3, 9, 5), float64] {
    @func_4867() /* ty=Tensor[(3, 9, 5), float64] */
  };
  %1538() /* ty=Tensor[(3, 9, 5), float64] */
}

def @func_2987(%var_2986: Tensor[(2, 7, 15), float64]) -> Tensor[(2, 7, 15), uint32] {
  %1545 = fn (%var_2964: Tensor[(2, 7, 15), float64]) -> Tensor[(2, 7, 15), uint32] {
    %1539 = @func_2581() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64], Tensor[(105, 2), float64], Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64]) */;
    %1540 = %1539.4;
    %1541 = cast(%var_2964, dtype="uint32") /* ty=Tensor[(2, 7, 15), uint32] */;
    %1542 = shape_of(%1540, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1543 = cast(%1540, dtype="uint32") /* ty=Tensor[(2, 7, 15), uint32] */;
    %1544 = dyn.reshape(%1541, %1542, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    minimum(%1543, %1544) /* ty=Tensor[(2, 7, 15), uint32] */
  };
  %1545(%var_2986) /* ty=Tensor[(2, 7, 15), uint32] */
}

def @func_16856() -> (Tensor[(7, 104), float64], Tensor[(3, 9, 5), float64]) {
  @func_16854() /* ty=(Tensor[(7, 104), float64], Tensor[(3, 9, 5), float64]) */
}

def @func_11070(%var_11069: Tensor[(2, 64), float32]) -> (Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), uint16], Tensor[(3, 9, 5), float32], Tensor[(2, 64), float32], Tensor[(210), float64]) {
  %1557 = fn (%var_11056: Tensor[(2, 64), float32]) -> (Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), uint16], Tensor[(3, 9, 5), float32], Tensor[(2, 64), float32], Tensor[(210), float64]) {
    %1546 = @func_9082() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) */;
    %1547 = @func_10982() /* ty=(Tensor[(3, 9, 5), uint16],) */;
    %1548 = cast(%var_11056, dtype="float32") /* ty=Tensor[(2, 64), float32] */;
    %1549 = cast(meta[relay.Constant][62] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
    %1550 = reshape(%1548, newshape=[128]) /* ty=Tensor[(128), float32] */;
    %1551 = reshape(%1549, newshape=[1, 210]) /* ty=Tensor[(1, 210), float64] */;
    %1552 = @func_6273(%1550, %1551) /* ty=(Tensor[(3, 9, 5), float32], Tensor[(?, 8, 13), bool], Tensor[(128), float32], Tensor[(1, 210), float64]) */;
    %1553 = @func_4126() /* ty=Tensor[(?, 8, 13), float32] */;
    %1554 = %1546.1;
    %1555 = %1547.0;
    %1556 = %1552.0;
    (%1553, %1554, %1555, %1556, %var_11056, meta[relay.Constant][62] /* ty=Tensor[(210), float64] */)
  };
  %1557(%var_11069) /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), uint16], Tensor[(3, 9, 5), float32], Tensor[(2, 64), float32], Tensor[(210), float64]) */
}

def @func_16293() -> Tensor[(3, 9, 5), uint16] {
  %1559 = fn () -> Tensor[(3, 9, 5), uint16] {
    %1558 = @func_3672() /* ty=(Tensor[(3, 9, 5), uint16],) */;
    %1558.0
  };
  %1559() /* ty=Tensor[(3, 9, 5), uint16] */
}

def @func_20901(%var_20889: Tensor[(420), float64]) -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(2, 210), bool], Tensor[(420), float64], Tensor[(?, 8, 13), float32]) {
  %1560 = @func_3538() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64]) */;
  %1561 = @func_15095() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(15, 210), bool], Tensor[(3, 9, 5), float64]) */;
  %1562 = @func_17555() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %1563 = @func_4047() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %1564 = cast(%var_20889, dtype="float64") /* ty=Tensor[(420), float64] */;
  %1565 = reshape(%1564, newshape=[2, 210]) /* ty=Tensor[(2, 210), float64] */;
  %1566 = @func_19233(%1565) /* ty=(Tensor[(?, 8, 13), float32], Tensor[(52, 2), bool], Tensor[(2, 210), bool]) */;
  %1567 = %1560.1;
  %1568 = %1561.2;
  %1569 = %1562.0;
  %1570 = %1563.0;
  %1571 = %1566.2;
  %1572 = @func_9530() /* ty=Tensor[(?, 8, 13), float32] */;
  (%1567, %1568, %1569, %1570, %1571, %var_20889, %1572)
}

def @func_16550() -> (Tensor[(?, 8, 13), bool],) {
  @func_16548() /* ty=(Tensor[(?, 8, 13), bool],) */
}

def @func_12210(%var_12208: Tensor[(128), float32], %var_12209: Tensor[(3, 45), float64]) -> (Tensor[(7, 8, 13), int16], Tensor[(?, 8, 13), bool], Tensor[(128), float32], Tensor[(3, 45), float64], Tensor[(104), bool]) {
  %1583 = fn (%var_12190: Tensor[(128), float32], %var_12191: Tensor[(3, 45), float64]) -> (Tensor[(7, 8, 13), int16], Tensor[(?, 8, 13), bool], Tensor[(128), float32], Tensor[(3, 45), float64], Tensor[(104), bool]) {
    %1573 = @func_7263() /* ty=(Tensor[(7, 8, 13), int16],) */;
    %1574 = cast(%var_12190, dtype="float32") /* ty=Tensor[(128), float32] */;
    %1575 = cast(%var_12191, dtype="float64") /* ty=Tensor[(3, 45), float64] */;
    %1576 = cast(meta[relay.Constant][63] /* ty=Tensor[(104), bool] */, dtype="bool") /* ty=Tensor[(104), bool] */;
    %1577 = reshape(%1574, newshape=[16, 1, 8]) /* ty=Tensor[(16, 1, 8), float32] */;
    %1578 = reshape(%1575, newshape=[3, 45]) /* ty=Tensor[(3, 45), float64] */;
    %1579 = reshape(%1576, newshape=[104]) /* ty=Tensor[(104), bool] */;
    %1580 = @func_1683(%1577, %1578, %1579) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(16, ?, 8), uint16], Tensor[(?, 8, 13), bool], Tensor[(104), bool], Tensor[(3, 45), float32]) */;
    %1581 = %1573.0;
    %1582 = %1580.2;
    (%1581, %1582, %var_12190, %var_12191, meta[relay.Constant][63] /* ty=Tensor[(104), bool] */)
  };
  %1583(%var_12208, %var_12209) /* ty=(Tensor[(7, 8, 13), int16], Tensor[(?, 8, 13), bool], Tensor[(128), float32], Tensor[(3, 45), float64], Tensor[(104), bool]) */
}

def @func_15636() -> (Tensor[(15, 2, 10), float64], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) {
  @func_15634() /* ty=(Tensor[(15, 2, 10), float64], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) */
}

def @func_16854() -> (Tensor[(7, 104), float64], Tensor[(3, 9, 5), float64]) {
  %1584 = @func_8087() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(128), float32], Tensor[(7, 104), int16], Tensor[(128), float32]) */;
  %1585 = %1584.4;
  %1586 = cast(%1585, dtype="float64") /* ty=Tensor[(7, 104), float64] */;
  %1587 = @func_4609() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %1588 = log(%1586) /* ty=Tensor[(7, 104), float64] */;
  %1589 = %1587.0;
  (%1588, %1589)
}

def @func_16434() -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) {
  %1590 = @func_4609() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %1591 = @func_9180() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(7, 8, 13), bool], Tensor[(7, 104), int16]) */;
  %1592 = @func_4609() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %1593 = %1590.0;
  %1594 = @func_12787() /* ty=Tensor[(?, 8, 13), float32] */;
  %1595 = %1591.0;
  %1596 = %1592.0;
  %1597 = @func_4359() /* ty=Tensor[(?, 8, 13), float32] */;
  (%1593, %1594, %1595, %1596, %1597)
}

def @func_11889() -> Tensor[(3, 9, 5), float64] {
  %1598 = fn () -> Tensor[(3, 9, 5), float64] {
    @func_3141() /* ty=Tensor[(3, 9, 5), float64] */
  };
  %1598() /* ty=Tensor[(3, 9, 5), float64] */
}

def @func_11976() -> (Tensor[(3, 9, 5), float64],) {
  @func_11974() /* ty=(Tensor[(3, 9, 5), float64],) */
}

def @func_18624() -> (Tensor[(?, 8, 13), bool],) {
  @func_18622() /* ty=(Tensor[(?, 8, 13), bool],) */
}

def @func_13830() -> (Tensor[(3, 9, 5), float64], Tensor[(2, 7, 15), float64], Tensor[(3, 9, 5), uint16]) {
  %1599 = @func_8665() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %1600 = @func_2581() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64], Tensor[(105, 2), float64], Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64]) */;
  %1601 = %1600.1;
  %1602 = cast(%1601, dtype="float64") /* ty=Tensor[(2, 7, 15), float64] */;
  %1603 = @func_6941() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), uint16], Tensor[(3, 9, 5), float64]) */;
  %1604 = %1599.0;
  %1605 = acos(%1602) /* ty=Tensor[(2, 7, 15), float64] */;
  %1606 = %1603.1;
  (%1604, %1605, %1606)
}

def @func_8030() -> (Tensor[(4, 8, 13), int16], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) {
  %1607 = @func_3345() /* ty=Tensor[(?, 8, 13), float32] */;
  %1608 = cast(%1607, dtype="int16") /* ty=Tensor[(?, 8, 13), int16] */;
  %1609 = cast(meta[relay.Constant][64] /* ty=Tensor[(4, 8, 13), float32] */, dtype="int16") /* ty=Tensor[(4, 8, 13), int16] */;
  %1610 = subtract(%1608, %1609) /* ty=Tensor[(4, 8, 13), int16] */;
  %1611 = @func_4471() /* ty=Tensor[(?, 8, 13), float32] */;
  %1612 = @func_6814() /* ty=Tensor[(3, 9, 5), float64] */;
  (%1610, %1611, %1612)
}

def @func_15065() -> Tensor[(3, 9, 5), float64] {
  @func_4867() /* ty=Tensor[(3, 9, 5), float64] */
}

def @func_5786() -> (Tensor[(?, 8, 13), float32], Tensor[(1620), float32], Tensor[(210), float64], Tensor[(?, 8, 13), float32]) {
  @func_5784() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(1620), float32], Tensor[(210), float64], Tensor[(?, 8, 13), float32]) */
}

def @func_20999() -> (Tensor[(2, 7, 15), float64],) {
  %1613 = @func_9711() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(2, 7, 15), float64]) */;
  %1614 = %1613.1;
  (%1614,)
}

def @func_17992() -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) {
  %1619 = fn () -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) {
    %1615 = @func_15095() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(15, 210), bool], Tensor[(3, 9, 5), float64]) */;
    %1616 = @func_4937() /* ty=Tensor[(3, 9, 5), float64] */;
    %1617 = %1615.0;
    %1618 = @func_7133() /* ty=Tensor[(3, 9, 5), float64] */;
    (%1616, %1617, %1618)
  };
  %1619() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) */
}

def @func_20345() -> Tensor[(1, 4, 8), float32] {
  %1620 = fn () -> Tensor[(1, 4, 8), float32] {
    @func_17369() /* ty=Tensor[(1, 4, 8), float32] */
  };
  %1620() /* ty=Tensor[(1, 4, 8), float32] */
}

def @func_19816() -> (Tensor[(128), float32],) {
  %1623 = fn () -> (Tensor[(128), float32],) {
    %1621 = @func_11440() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(128), float32], Tensor[(1620), float32]) */;
    %1622 = %1621.1;
    (%1622,)
  };
  %1623() /* ty=(Tensor[(128), float32],) */
}

def @func_4953() -> Tensor[(?, 8, 13), float32] {
  %1624 = @func_4259() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) */;
  %1624.0
}

def @func_8445() -> (Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) {
  @func_8443() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) */
}

def @func_9439() -> (Tensor[(?, 8, 13), bool], Tensor[(3, 9, 5), float64]) {
  %1629 = fn () -> (Tensor[(?, 8, 13), bool], Tensor[(3, 9, 5), float64]) {
    %1625 = @func_2384() /* ty=(Tensor[(10, 4, 6), int32], Tensor[(?, 8, 13), bool], Tensor[(1, 104), bool]) */;
    %1626 = @func_7341() /* ty=(Tensor[(3, 9, 5), float64],) */;
    %1627 = %1625.1;
    %1628 = %1626.0;
    (%1627, %1628)
  };
  %1629() /* ty=(Tensor[(?, 8, 13), bool], Tensor[(3, 9, 5), float64]) */
}

def @func_4521() -> (Tensor[(?, 8, 13), float32],) {
  %1630 = @func_3361() /* ty=Tensor[(?, 8, 13), float32] */;
  (%1630,)
}

def @func_13495(%var_13494: Tensor[(1, 8, 13), bool]) -> (Tensor[(?, 8, 13), float32],) {
  %1638 = fn (%var_13483: Tensor[(1, 8, 13), bool]) -> (Tensor[(?, 8, 13), float32],) {
    %1631 = @func_10399() /* ty=(Tensor[(?, 8, 13), bool],) */;
    %1632 = %1631.0;
    %1633 = cast(%var_13483, dtype="float32") /* ty=Tensor[(1, 8, 13), float32] */;
    %1634 = shape_of(%1632, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1635 = cast(%1632, dtype="float32") /* ty=Tensor[(?, 8, 13), float32] */;
    %1636 = dyn.reshape(%1633, %1634, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1637 = power(%1635, %1636) /* ty=Tensor[(?, 8, 13), float32] */;
    (%1637,)
  };
  %1638(%var_13494) /* ty=(Tensor[(?, 8, 13), float32],) */
}

def @func_12845() -> (Tensor[(3, 9, 5), float64],) {
  %1639 = @func_10357() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %1640 = %1639.0;
  (%1640,)
}

def @func_14110() -> (Tensor[(3, 9, 5), float64],) {
  %1643 = fn () -> (Tensor[(3, 9, 5), float64],) {
    %1641 = @func_5323() /* ty=(Tensor[(3, 9, 5), float64],) */;
    %1642 = %1641.0;
    (%1642,)
  };
  %1643() /* ty=(Tensor[(3, 9, 5), float64],) */
}

def @func_5621(%var_5619: Tensor[(14, 8, 13), float32]) -> (Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), uint16], Tensor[(?, 8, 13), float32], Tensor[(14, 8, 13), int16]) {
  @func_5618(%var_5619) /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), uint16], Tensor[(?, 8, 13), float32], Tensor[(14, 8, 13), int16]) */
}

def @func_16773() -> (Tensor[(3, 9, 5), float64], Tensor[(2, 7, 15), float64]) {
  @func_16771() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(2, 7, 15), float64]) */
}

def @func_20467() -> (Tensor[(3, 9, 5), float64],) {
  %1644 = @func_13945() /* ty=Tensor[(3, 9, 5), float64] */;
  (%1644,)
}

def @func_10790() -> (Tensor[(?, 8, 13), bool], Tensor[(?, 8, 13), bool], Tensor[(3, 9, 5), uint16]) {
  @func_10788() /* ty=(Tensor[(?, 8, 13), bool], Tensor[(?, 8, 13), bool], Tensor[(3, 9, 5), uint16]) */
}

def @func_6782() -> (Tensor[(3, 9, 5), uint16], Tensor[(3, 9, 5), float64]) {
  %1645 = @func_5807() /* ty=Tensor[(3, 9, 5), uint16] */;
  %1646 = @func_4867() /* ty=Tensor[(3, 9, 5), float64] */;
  (%1645, %1646)
}

def @func_17747() -> (Tensor[(3, 9, 5), float64],) {
  @func_17745() /* ty=(Tensor[(3, 9, 5), float64],) */
}

def @func_20375() -> (Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64], Tensor[(135), float64], Tensor[(210), float64], Tensor[(3, 9, 5), float64]) {
  %1647 = @func_10215() /* ty=(Tensor[(?, 8, 13), float32],) */;
  %1648 = @func_14280() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %1649 = cast(meta[relay.Constant][65] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %1650 = reshape(%1649, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %1651 = @func_5379(%1650) /* ty=(Tensor[(7, 8, 13), int16], Tensor[(?, 8, 13), bool], Tensor[(135), float64], Tensor[(210), float64], Tensor[(128), float32]) */;
  %1652 = %1647.0;
  %1653 = %1648.0;
  %1654 = %1651.2;
  %1655 = @func_19002() /* ty=Tensor[(3, 9, 5), float64] */;
  (%1652, %1653, %1654, meta[relay.Constant][65] /* ty=Tensor[(210), float64] */, %1655)
}

def @func_17759() -> Tensor[(2, 7, 15), float64] {
  %1656 = @func_15865() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64]) */;
  %1656.1
}

def @func_4076() -> (Tensor[(3, 9, 5), uint16], Tensor[(?, 8, 13), float32]) {
  %1660 = fn () -> (Tensor[(3, 9, 5), uint16], Tensor[(?, 8, 13), float32]) {
    %1657 = @func_2447() /* ty=(Tensor[(?, 8, 13), float32],) */;
    %1658 = @func_3330() /* ty=Tensor[(3, 9, 5), uint16] */;
    %1659 = %1657.0;
    (%1658, %1659)
  };
  %1660() /* ty=(Tensor[(3, 9, 5), uint16], Tensor[(?, 8, 13), float32]) */
}

def @func_8032() -> (Tensor[(4, 8, 13), int16], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) {
  @func_8030() /* ty=(Tensor[(4, 8, 13), int16], Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), float64]) */
}

def @func_4153() -> Tensor[(?, 8, 13), float32] {
  %1661 = @func_2447() /* ty=(Tensor[(?, 8, 13), float32],) */;
  %1661.0
}

def @func_869(%var_864: Tensor[(2, 7, 15), float64]) -> (Tensor[(2, 7, 15), float64],) {
  %1662 = cast(meta[relay.Constant][66] /* ty=Tensor[(2, 1, 15), float64] */, dtype="float64") /* ty=Tensor[(2, 1, 15), float64] */;
  %1663 = cast(%var_864, dtype="float64") /* ty=Tensor[(2, 7, 15), float64] */;
  %1664 = add(%1662, %1663) /* ty=Tensor[(2, 7, 15), float64] */;
  (%1664,)
}

def @func_10788() -> (Tensor[(?, 8, 13), bool], Tensor[(?, 8, 13), bool], Tensor[(3, 9, 5), uint16]) {
  %1665 = @func_5719() /* ty=(Tensor[(?, 8, 13), bool],) */;
  %1666 = @func_3672() /* ty=(Tensor[(3, 9, 5), uint16],) */;
  %1667 = @func_2460() /* ty=Tensor[(?, 8, 13), bool] */;
  %1668 = %1665.0;
  %1669 = %1666.0;
  (%1667, %1668, %1669)
}

def @func_21305() -> Tensor[(3, 9, 5), float64] {
  @func_4705() /* ty=Tensor[(3, 9, 5), float64] */
}

def @func_3120(%var_3117: Tensor[(45, 3), float64], %var_3118: Tensor[(210), float64], %var_3119: Tensor[(128), float32]) -> (Tensor[(?, 8, 13), float32], Tensor[(45, 3), float64], Tensor[(?, 8, 13), bool], Tensor[(210), float64], Tensor[(210), float64], Tensor[(2, 7, 15), uint32], Tensor[(128), bool], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(1620), float32]) {
  %1730 = fn (%var_3041: Tensor[(45, 3), float64], %var_3077: Tensor[(210), float64], %var_3093: Tensor[(128), float32]) -> (Tensor[(?, 8, 13), float32], Tensor[(45, 3), float64], Tensor[(?, 8, 13), bool], Tensor[(210), float64], Tensor[(210), float64], Tensor[(2, 7, 15), uint32], Tensor[(128), bool], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(1620), float32]) {
    %1670 = @func_2447() /* ty=(Tensor[(?, 8, 13), float32],) */;
    %1671 = cast(meta[relay.Constant][67] /* ty=Tensor[(128), float32] */, dtype="float32") /* ty=Tensor[(128), float32] */;
    %1672 = cast(%var_3041, dtype="float64") /* ty=Tensor[(45, 3), float64] */;
    %1673 = %1670.0;
    %1674 = cast(%1673, dtype="bool") /* ty=Tensor[(?, 8, 13), bool] */;
    %1675 = reshape(%1671, newshape=[16, 1, 8]) /* ty=Tensor[(16, 1, 8), float32] */;
    %1676 = reshape(%1672, newshape=[3, 45]) /* ty=Tensor[(3, 45), float64] */;
    %1677 = reshape(%1674, newshape=[104]) /* ty=Tensor[(104), bool] */;
    %1678 = @func_1683(%1675, %1676, %1677) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(16, ?, 8), uint16], Tensor[(?, 8, 13), bool], Tensor[(104), bool], Tensor[(3, 45), float32]) */;
    %1679 = %1678.2;
    %1680 = cast(%1679, dtype="bool") /* ty=Tensor[(?, 8, 13), bool] */;
    %1681 = @func_2460() /* ty=Tensor[(?, 8, 13), bool] */;
    %1682 = cast(%1681, dtype="bool") /* ty=Tensor[(?, 8, 13), bool] */;
    %1683 = reshape(%1680, newshape=[1, 8, 13]) /* ty=Tensor[(1, 8, 13), bool] */;
    %1684 = reshape(%1682, newshape=[1, 8, 13]) /* ty=Tensor[(1, 8, 13), bool] */;
    %1685 = @func_1635(%1683, %1684) /* ty=(Tensor[(?, 8, 13), bool],) */;
    %1686 = cast(%var_3077, dtype="float64") /* ty=Tensor[(210), float64] */;
    %1687 = reshape(%1686, newshape=[210]) /* ty=Tensor[(210), float64] */;
    %1688 = @func_2759(%1687) /* ty=(Tensor[(?, 8, 13), bool], Tensor[(52, 2), bool], Tensor[(1620), float32], Tensor[(128), float32], Tensor[(210), float64]) */;
    %1689 = %1688.4;
    %1690 = cast(%1689, dtype="float64") /* ty=Tensor[(210), float64] */;
    %1691 = reshape(%1690, newshape=[2, 7, 15]) /* ty=Tensor[(2, 7, 15), float64] */;
    %1692 = cast(%var_3093, dtype="bool") /* ty=Tensor[(128), bool] */;
    %1693 = shape_of(meta[relay.Constant][67] /* ty=Tensor[(128), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1694 = cast(meta[relay.Constant][67] /* ty=Tensor[(128), float32] */, dtype="bool") /* ty=Tensor[(128), bool] */;
    %1695 = dyn.reshape(%1692, %1693, newshape=[]) /* ty=Tensor[(?), bool] */;
    %1696 = cast(meta[relay.Constant][67] /* ty=Tensor[(128), float32] */, dtype="float32") /* ty=Tensor[(128), float32] */;
    %1697 = cast(%var_3041, dtype="float64") /* ty=Tensor[(45, 3), float64] */;
    %1698 = cast(%1679, dtype="uint32") /* ty=Tensor[(?, 8, 13), uint32] */;
    %1699 = shape_of(%1681, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1700 = cast(%1681, dtype="uint32") /* ty=Tensor[(?, 8, 13), uint32] */;
    %1701 = dyn.reshape(%1698, %1699, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %1702 = bitwise_or(%1700, %1701) /* ty=Tensor[(?, 8, 13), uint32] */;
    %1703 = cast(%1702, dtype="bool") /* ty=Tensor[(?, 8, 13), bool] */;
    %1704 = reshape(%1696, newshape=[16, 1, 8]) /* ty=Tensor[(16, 1, 8), float32] */;
    %1705 = reshape(%1697, newshape=[3, 45]) /* ty=Tensor[(3, 45), float64] */;
    %1706 = reshape(%1703, newshape=[104]) /* ty=Tensor[(104), bool] */;
    %1707 = @func_1683(%1704, %1705, %1706) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(16, ?, 8), uint16], Tensor[(?, 8, 13), bool], Tensor[(104), bool], Tensor[(3, 45), float32]) */;
    %1708 = @func_2384() /* ty=(Tensor[(10, 4, 6), int32], Tensor[(?, 8, 13), bool], Tensor[(1, 104), bool]) */;
    %1709 = %1708.2;
    %1710 = cast(%1709, dtype="bool") /* ty=Tensor[(1, 104), bool] */;
    %1711 = shape_of(%1679, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1712 = cast(%1679, dtype="bool") /* ty=Tensor[(?, 8, 13), bool] */;
    %1713 = dyn.reshape(%1710, %1711, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1714 = greater_equal(%1712, %1713) /* ty=Tensor[(?, 8, 13), bool] */;
    %1715 = cast(%1702, dtype="float32") /* ty=Tensor[(?, 8, 13), float32] */;
    %1716 = shape_of(%1714, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1717 = cast(%1714, dtype="float32") /* ty=Tensor[(?, 8, 13), float32] */;
    %1718 = dyn.reshape(%1715, %1716, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1719 = cast(%1679, dtype="float32") /* ty=Tensor[(?, 8, 13), float32] */;
    %1720 = cast(%1689, dtype="float64") /* ty=Tensor[(210), float64] */;
    %1721 = reshape(%1720, newshape=[210]) /* ty=Tensor[(210), float64] */;
    %1722 = @func_2759(%1721) /* ty=(Tensor[(?, 8, 13), bool], Tensor[(52, 2), bool], Tensor[(1620), float32], Tensor[(128), float32], Tensor[(210), float64]) */;
    %1723 = %1685.0;
    %1724 = @func_2985(%1691) /* ty=Tensor[(2, 7, 15), uint32] */;
    %1725 = not_equal(%1694, %1695) /* ty=Tensor[(128), bool] */;
    %1726 = %1707.0;
    %1727 = multiply(%1717, %1718) /* ty=Tensor[(?, 8, 13), float32] */;
    %1728 = log2(%1719) /* ty=Tensor[(?, 8, 13), float32] */;
    %1729 = %1722.2;
    (%1673, %var_3041, %1723, %1689, %var_3077, %1724, %1725, %1726, %1727, %1728, %1729)
  };
  %1730(%var_3117, %var_3118, %var_3119) /* ty=(Tensor[(?, 8, 13), float32], Tensor[(45, 3), float64], Tensor[(?, 8, 13), bool], Tensor[(210), float64], Tensor[(210), float64], Tensor[(2, 7, 15), uint32], Tensor[(128), bool], Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(1620), float32]) */
}

def @func_3362() -> Tensor[(?, 8, 13), float32] {
  %1732 = fn () -> Tensor[(?, 8, 13), float32] {
    %1731 = @func_2447() /* ty=(Tensor[(?, 8, 13), float32],) */;
    %1731.0
  };
  %1732() /* ty=Tensor[(?, 8, 13), float32] */
}

def @func_18944() -> Tensor[(3, 9, 5), uint16] {
  %1734 = fn () -> Tensor[(3, 9, 5), uint16] {
    %1733 = @func_4075() /* ty=(Tensor[(3, 9, 5), uint16], Tensor[(?, 8, 13), float32]) */;
    %1733.0
  };
  %1734() /* ty=Tensor[(3, 9, 5), uint16] */
}

def @func_12092() -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) {
  @func_12090() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) */
}

def @func_10357() -> (Tensor[(3, 9, 5), float64],) {
  %1735 = @func_9113() /* ty=Tensor[(3, 9, 5), float64] */;
  (%1735,)
}

def @func_2449() -> (Tensor[(?, 8, 13), float32],) {
  @func_2447() /* ty=(Tensor[(?, 8, 13), float32],) */
}

def @func_9613() -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32]) {
  %1736 = @func_4867() /* ty=Tensor[(3, 9, 5), float64] */;
  %1737 = @func_4471() /* ty=Tensor[(?, 8, 13), float32] */;
  (%1736, %1737)
}

def @func_2582() -> (Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64], Tensor[(105, 2), float64], Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64]) {
  %1754 = fn () -> (Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64], Tensor[(105, 2), float64], Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64]) {
    %1738 = @func_2384() /* ty=(Tensor[(10, 4, 6), int32], Tensor[(?, 8, 13), bool], Tensor[(1, 104), bool]) */;
    %1739 = %1738.1;
    %1740 = cast(%1739, dtype="float64") /* ty=Tensor[(?, 8, 13), float64] */;
    %1741 = sqrt(%1740) /* ty=Tensor[(?, 8, 13), float64] */;
    %1742 = cast(%1741, dtype="float32") /* ty=Tensor[(?, 8, 13), float32] */;
    %1743 = cast(meta[relay.Constant][68] /* ty=Tensor[(105, 2), float64] */, dtype="float64") /* ty=Tensor[(105, 2), float64] */;
    %1744 = reshape(%1743, newshape=[2, 7, 15]) /* ty=Tensor[(2, 7, 15), float64] */;
    %1745 = @func_869(%1744) /* ty=(Tensor[(2, 7, 15), float64],) */;
    %1746 = @func_2447() /* ty=(Tensor[(?, 8, 13), float32],) */;
    %1747 = %1745.0;
    %1748 = cast(%1747, dtype="float64") /* ty=Tensor[(2, 7, 15), float64] */;
    %1749 = reshape(%1748, newshape=[2, 7, 15]) /* ty=Tensor[(2, 7, 15), float64] */;
    %1750 = @func_869(%1749) /* ty=(Tensor[(2, 7, 15), float64],) */;
    %1751 = erf(%1742) /* ty=Tensor[(?, 8, 13), float32] */;
    %1752 = %1746.0;
    %1753 = %1750.0;
    (%1751, %1747, meta[relay.Constant][68] /* ty=Tensor[(105, 2), float64] */, %1752, %1753)
  };
  %1754() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64], Tensor[(105, 2), float64], Tensor[(?, 8, 13), float32], Tensor[(2, 7, 15), float64]) */
}

def @func_18980() -> (Tensor[(3, 9, 5), float64],) {
  %1755 = @func_10024() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float64], Tensor[(2, 7, 15), float64], Tensor[(?, 8, 13), float32]) */;
  %1756 = %1755.0;
  (%1756,)
}

def @func_9826() -> (Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), uint16]) {
  %1757 = @func_6782() /* ty=(Tensor[(3, 9, 5), uint16], Tensor[(3, 9, 5), float64]) */;
  %1758 = @func_5424() /* ty=(Tensor[(3, 9, 5), uint16],) */;
  %1759 = %1757.1;
  %1760 = %1758.0;
  (%1759, %1760)
}

def @func_9583(%var_9581: Tensor[(1620), float32]) -> (Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(128), float32], Tensor[(1620), float32], Tensor[(3, 9, 5), uint16]) {
  @func_9580(%var_9581) /* ty=(Tensor[(3, 9, 5), float64], Tensor[(?, 8, 13), float32], Tensor[(128), float32], Tensor[(1620), float32], Tensor[(3, 9, 5), uint16]) */
}

def @func_7585(%var_7568: Tensor[(10, 1, 9), float64]) -> (Tensor[(10, 1, 9), float64],) {
  %1761 = cast(%var_7568, dtype="float64") /* ty=Tensor[(10, 1, 9), float64] */;
  %1762 = sigmoid(%1761) /* ty=Tensor[(10, 1, 9), float64] */;
  (%1762,)
}

def @func_14578() -> (Tensor[(3, 9, 5), float64], Tensor[(1620), float32], Tensor[(210), float64], Tensor[(4, 32), float32]) {
  @func_14576() /* ty=(Tensor[(3, 9, 5), float64], Tensor[(1620), float32], Tensor[(210), float64], Tensor[(4, 32), float32]) */
}

def @func_10811() -> (Tensor[(3, 9, 5), uint16],) {
  %1763 = @func_3672() /* ty=(Tensor[(3, 9, 5), uint16],) */;
  %1764 = %1763.0;
  (%1764,)
}

def @func_14995(%var_14993: Tensor[(1620), float32]) -> (Tensor[(3, 9, 5), uint16], Tensor[(?, 8, 13), bool], Tensor[(?, 8, 13), float32], Tensor[(1620), float32], Tensor[(3, 9, 5), float64]) {
  @func_14992(%var_14993) /* ty=(Tensor[(3, 9, 5), uint16], Tensor[(?, 8, 13), bool], Tensor[(?, 8, 13), float32], Tensor[(1620), float32], Tensor[(3, 9, 5), float64]) */
}

def @func_15097() -> (Tensor[(?, 8, 13), float32], Tensor[(15, 210), bool], Tensor[(3, 9, 5), float64]) {
  @func_15095() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(15, 210), bool], Tensor[(3, 9, 5), float64]) */
}

def @func_19973(%var_19971: Tensor[(210), float64]) -> (Tensor[(16, 8, 13), bool], Tensor[(?, 8, 13), float32], Tensor[(210), float64], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(16, 8, 13), float32]) {
  @func_19970(%var_19971) /* ty=(Tensor[(16, 8, 13), bool], Tensor[(?, 8, 13), float32], Tensor[(210), float64], Tensor[(3, 9, 5), float64], Tensor[(3, 9, 5), float64], Tensor[(16, 8, 13), float32]) */
}

def @func_14809() -> (Tensor[(?, 8, 13), float32],) {
  %1767 = fn () -> (Tensor[(?, 8, 13), float32],) {
    %1765 = @func_12772() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) */;
    %1766 = %1765.0;
    (%1766,)
  };
  %1767() /* ty=(Tensor[(?, 8, 13), float32],) */
}

def @func_16877() -> Tensor[(?, 8, 13), float32] {
  @func_16875() /* ty=Tensor[(?, 8, 13), float32] */
}

def @func_16913() -> (Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) {
  %1771 = fn () -> (Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) {
    %1768 = @func_5784() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(1620), float32], Tensor[(210), float64], Tensor[(?, 8, 13), float32]) */;
    %1769 = %1768.0;
    %1770 = @func_4349() /* ty=Tensor[(?, 8, 13), float32] */;
    (%1769, %1770)
  };
  %1771() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(?, 8, 13), float32]) */
}

def @func_7588(%var_7586: Tensor[(10, 1, 9), float64]) -> (Tensor[(10, 1, 9), float64],) {
  @func_7585(%var_7586) /* ty=(Tensor[(10, 1, 9), float64],) */
}

def @func_18622() -> (Tensor[(?, 8, 13), bool],) {
  %1772 = @func_9438() /* ty=(Tensor[(?, 8, 13), bool], Tensor[(3, 9, 5), float64]) */;
  %1773 = %1772.0;
  (%1773,)
}

def @func_10399() -> (Tensor[(?, 8, 13), bool],) {
  %1774 = @func_7599() /* ty=Tensor[(?, 8, 13), bool] */;
  (%1774,)
}

def @func_5425() -> (Tensor[(3, 9, 5), uint16],) {
  %1777 = fn () -> (Tensor[(3, 9, 5), uint16],) {
    %1775 = @func_3672() /* ty=(Tensor[(3, 9, 5), uint16],) */;
    %1776 = %1775.0;
    (%1776,)
  };
  %1777() /* ty=(Tensor[(3, 9, 5), uint16],) */
}

def @func_20178() -> (Tensor[(3, 9, 5), float64],) {
  %1778 = @func_10194() /* ty=Tensor[(3, 9, 5), float64] */;
  (%1778,)
}

def @func_20080() -> (Tensor[(3, 9, 5), uint16],) {
  %1779 = @func_19660() /* ty=(Tensor[(3, 9, 5), uint16],) */;
  %1780 = %1779.0;
  (%1780,)
}

def @func_10194() -> Tensor[(3, 9, 5), float64] {
  @func_6814() /* ty=Tensor[(3, 9, 5), float64] */
}

def @func_17500() -> (Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), uint16], Tensor[(?, 8, 13), bool], Tensor[(3, 9, 5), float64]) {
  @func_17498() /* ty=(Tensor[(?, 8, 13), float32], Tensor[(3, 9, 5), uint16], Tensor[(?, 8, 13), bool], Tensor[(3, 9, 5), float64]) */
}

def @func_6607() -> (Tensor[(3, 9, 5), float64],) {
  %1781 = @func_5323() /* ty=(Tensor[(3, 9, 5), float64],) */;
  %1782 = %1781.0;
  (%1782,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen962/build/output.py", line 6664, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  79: TVMFuncCall
  78: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  77: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  76: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  75: tvm::transform::Pass::operator()(tvm::IRModule) const
  74: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  73: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  72: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  71: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  70: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  69: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [15:03:52] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int


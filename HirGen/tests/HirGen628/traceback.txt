==========mod==========
#[version = "0.0.5"]
def @func_9147() -> (Tensor[(6, 12, 2), int32],) {
  %0 = @func_6551() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */;
  %1 = %0.0;
  (%1,)
}

def @func_10295(%var_10263: int64, %var_10264: Tensor[(1, 10, 12), int64], %var_10280: Tensor[(1408), int8]) -> (Tensor[(1, 10, 12), int64], Tensor[(?, 10, 12), bool], Tensor[(11, 8, 16), float64], Tensor[(1408), int8]) {
  %2 = cast(%var_10263, dtype="int64") /* ty=int64 */;
  %3 = cast(%var_10264, dtype="int64") /* ty=Tensor[(1, 10, 12), int64] */;
  %4 = cast(%var_10264, dtype="float64") /* ty=Tensor[(1, 10, 12), float64] */;
  %5 = cast(%var_10263, dtype="float64") /* ty=float64 */;
  %6 = divide(%4, %5) /* ty=Tensor[(1, 10, 12), float64] */;
  %7 = cast(%6, dtype="bool") /* ty=Tensor[(1, 10, 12), bool] */;
  %8 = shape_of(%var_10264, dtype="int32") /* ty=Tensor[(3), int32] */;
  %9 = cast(%var_10264, dtype="bool") /* ty=Tensor[(1, 10, 12), bool] */;
  %10 = dyn.reshape(%7, %8, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %11 = cast(%var_10280, dtype="int8") /* ty=Tensor[(1408), int8] */;
  %12 = cast(%var_10280, dtype="int8") /* ty=Tensor[(1408), int8] */;
  %13 = reshape(%11, newshape=[11, 8, 16]) /* ty=Tensor[(11, 8, 16), int8] */;
  %14 = reshape(%12, newshape=[11, 8, 16]) /* ty=Tensor[(11, 8, 16), int8] */;
  %15 = @func_1356(%13, %14) /* ty=(Tensor[(11, 8, 16), int8], Tensor[(11, 8, 16), float64], Tensor[(3, 4, 16), float64], Tensor[(2, 96), float64]) */;
  %16 = maximum(%2, %3) /* ty=Tensor[(1, 10, 12), int64] */;
  %17 = logical_or(%9, %10) /* ty=Tensor[(?, 10, 12), bool] */;
  %18 = %15.1;
  (%16, %17, %18, %var_10280)
}

def @func_11461() -> (Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) {
  %19 = @func_10807() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */;
  %20 = @func_9033() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %21 = %19.1;
  %22 = %20.0;
  (%21, %22)
}

def @func_5882(%var_5748: Tensor[(5, 12, 8), float32], %var_5749: Tensor[(5, 12, 8), float32], %var_5775: Tensor[(96, 2), float64], %var_5840: Tensor[(4, 44), float32], %var_5847: Tensor[(4, 44), float32], %var_5859: Tensor[(300), float32]) -> (Tensor[(5, 12, 8), float32], Tensor[(3, 4, 16), float64], Tensor[(96, 2), float64], Tensor[(6, 12, 2), int32], Tensor[(4, 44), int64], Tensor[(3, 2, 10), float32], Tensor[(300), float32], Tensor[(378), uint8], Tensor[(16, 1, 11), float32]) {
  %23 = cast(%var_5749, dtype="float32") /* ty=Tensor[(5, 12, 8), float32] */;
  %24 = shape_of(%var_5748, dtype="int32") /* ty=Tensor[(3), int32] */;
  %25 = cast(%var_5748, dtype="float32") /* ty=Tensor[(5, 12, 8), float32] */;
  %26 = dyn.reshape(%23, %24, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %27 = cast(%var_5775, dtype="float64") /* ty=Tensor[(96, 2), float64] */;
  %28 = reshape(%27, newshape=[3, 4, 16]) /* ty=Tensor[(3, 4, 16), float64] */;
  %29 = cast(%var_5847, dtype="int64") /* ty=Tensor[(4, 44), int64] */;
  %30 = shape_of(%var_5840, dtype="int32") /* ty=Tensor[(2), int32] */;
  %31 = cast(%var_5840, dtype="int64") /* ty=Tensor[(4, 44), int64] */;
  %32 = dyn.reshape(%29, %30, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %33 = cast(%var_5859, dtype="float32") /* ty=Tensor[(300), float32] */;
  %34 = @func_1144(%28) /* ty=Tensor[(3, 4, 16), float64] */;
  %35 = cast(%34, dtype="float64") /* ty=Tensor[(3, 4, 16), float64] */;
  %36 = cast(meta[relay.Constant][0] /* ty=Tensor[(378), uint8] */, dtype="uint8") /* ty=Tensor[(378), uint8] */;
  %37 = reshape(%33, newshape=[15, 2, 10]) /* ty=Tensor[(15, 2, 10), float32] */;
  %38 = reshape(%35, newshape=[48, 4]) /* ty=Tensor[(48, 4), float64] */;
  %39 = reshape(%36, newshape=[126, 3]) /* ty=Tensor[(126, 3), uint8] */;
  %40 = @func_4826(%37, %38, %39) /* ty=(Tensor[(15, 2, 10), float32], Tensor[(3, 4, 16), float64], Tensor[(48, 4), float64], Tensor[(60), uint16], Tensor[(3, 2, 10), int32], Tensor[(126, 3), uint8], Tensor[(11, 8, 16), float64], Tensor[(1408), int8], Tensor[(3, 2, 10), float32], Tensor[(3, 2, 10), int32], Tensor[(756), int8], Tensor[(1408), int8], Tensor[(140), float32]) */;
  %41 = cast(%var_5840, dtype="float32") /* ty=Tensor[(4, 44), float32] */;
  %42 = reshape(%41, newshape=[16, 1, 11]) /* ty=Tensor[(16, 1, 11), float32] */;
  %43 = @func_5056(%42) /* ty=(Tensor[(16, 1, 11), float32],) */;
  %44 = %43.0;
  %45 = cast(%44, dtype="float64") /* ty=Tensor[(16, 1, 11), float64] */;
  %46 = sinh(%45) /* ty=Tensor[(16, 1, 11), float64] */;
  %47 = cast(%46, dtype="float32") /* ty=Tensor[(16, 1, 11), float32] */;
  %48 = maximum(%25, %26) /* ty=Tensor[(5, 12, 8), float32] */;
  %49 = @func_5648() /* ty=Tensor[(6, 12, 2), int32] */;
  %50 = bitwise_or(%31, %32) /* ty=Tensor[(4, 44), int64] */;
  %51 = %40.8;
  %52 = tan(%47) /* ty=Tensor[(16, 1, 11), float32] */;
  (%48, %34, %var_5775, %49, %50, %51, %var_5859, meta[relay.Constant][0] /* ty=Tensor[(378), uint8] */, %52)
}

def @func_7406() -> Tensor[(6, 12, 2), int32] {
  %53 = @func_6480() /* ty=(Tensor[(6, 12, 2), float32], Tensor[(6, 12, 2), int32]) */;
  %53.1
}

def @func_9610() -> (Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) {
  %54 = @func_7637() /* ty=(Tensor[(6, 12, 2), uint8], Tensor[(6, 12, 2), int32]) */;
  %55 = @func_7162() /* ty=Tensor[(6, 12, 2), int32] */;
  %56 = %54.1;
  (%55, %56)
}

def @func_1144(%var_1141: Tensor[(3, 4, 16), float64]) -> Tensor[(3, 4, 16), float64] {
  %57 = cast(%var_1141, dtype="float64") /* ty=Tensor[(3, 4, 16), float64] */;
  asin(%57) /* ty=Tensor[(3, 4, 16), float64] */
}

def @func_10732(%var_10719: uint16, %var_10720: Tensor[(8, 7, 1), uint16]) -> Tensor[(8, 7, 1), float64] {
  %58 = cast(%var_10719, dtype="uint16") /* ty=uint16 */;
  %59 = cast(%var_10720, dtype="uint16") /* ty=Tensor[(8, 7, 1), uint16] */;
  %60 = left_shift(%58, %59) /* ty=Tensor[(8, 7, 1), uint16] */;
  %61 = cast(%var_10719, dtype="float64") /* ty=float64 */;
  %62 = cast(%60, dtype="float64") /* ty=Tensor[(8, 7, 1), float64] */;
  floor_mod(%61, %62) /* ty=Tensor[(8, 7, 1), float64] */
}

def @func_11786() -> (Tensor[(6, 12, 2), int32],) {
  %63 = @func_7952() /* ty=Tensor[(6, 12, 2), int32] */;
  (%63,)
}

def @func_3057(%var_3043: Tensor[(15, 12, 4), float64]) -> (Tensor[(15, 12, 4), float64], Tensor[(15, 12, 4), float32]) {
  %64 = cast(%var_3043, dtype="float64") /* ty=Tensor[(15, 12, 4), float64] */;
  %65 = shape_of(meta[relay.Constant][1] /* ty=Tensor[(15, 12, 4), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %66 = cast(meta[relay.Constant][1] /* ty=Tensor[(15, 12, 4), float64] */, dtype="float64") /* ty=Tensor[(15, 12, 4), float64] */;
  %67 = dyn.reshape(%64, %65, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %68 = cast(%var_3043, dtype="float32") /* ty=Tensor[(15, 12, 4), float32] */;
  %69 = floor_divide(%66, %67) /* ty=Tensor[(15, 12, 4), float64] */;
  %70 = sin(%68) /* ty=Tensor[(15, 12, 4), float32] */;
  (%69, %70)
}

def @func_7637() -> (Tensor[(6, 12, 2), uint8], Tensor[(6, 12, 2), int32]) {
  %71 = @func_7507() /* ty=(Tensor[(6, 12, 2), uint8],) */;
  %72 = %71.0;
  %73 = @func_7162() /* ty=Tensor[(6, 12, 2), int32] */;
  (%72, %73)
}

def @func_7145(%var_7093: Tensor[(9, 12, 13), float64]) -> (Tensor[(9, 12, 13), float64], Tensor[(9, 12, 13), bool]) {
  %74 = cast(%var_7093, dtype="float64") /* ty=Tensor[(9, 12, 13), float64] */;
  %75 = atanh(%74) /* ty=Tensor[(9, 12, 13), float64] */;
  %76 = cast(%75, dtype="float32") /* ty=Tensor[(9, 12, 13), float32] */;
  %77 = cosh(%76) /* ty=Tensor[(9, 12, 13), float32] */;
  %78 = cast(meta[relay.Constant][2] /* ty=Tensor[(9, 12, 13), float32] */, dtype="float64") /* ty=Tensor[(9, 12, 13), float64] */;
  %79 = shape_of(%77, dtype="int32") /* ty=Tensor[(3), int32] */;
  %80 = cast(%77, dtype="float64") /* ty=Tensor[(9, 12, 13), float64] */;
  %81 = dyn.reshape(%78, %79, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %82 = cast(meta[relay.Constant][2] /* ty=Tensor[(9, 12, 13), float32] */, dtype="float32") /* ty=Tensor[(9, 12, 13), float32] */;
  %83 = shape_of(%77, dtype="int32") /* ty=Tensor[(3), int32] */;
  %84 = cast(%77, dtype="float32") /* ty=Tensor[(9, 12, 13), float32] */;
  %85 = dyn.reshape(%82, %83, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %86 = floor_mod(%84, %85) /* ty=Tensor[(9, 12, 13), float32] */;
  %87 = cast(%75, dtype="bool") /* ty=Tensor[(9, 12, 13), bool] */;
  %88 = shape_of(%86, dtype="int32") /* ty=Tensor[(3), int32] */;
  %89 = cast(%86, dtype="bool") /* ty=Tensor[(9, 12, 13), bool] */;
  %90 = dyn.reshape(%87, %88, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %91 = mod(%80, %81) /* ty=Tensor[(9, 12, 13), float64] */;
  %92 = not_equal(%89, %90) /* ty=Tensor[(9, 12, 13), bool] */;
  (%91, %92)
}

def @func_6644() -> (Tensor[(6, 12, 2), float32], Tensor[(16, 7, ?), uint64], Tensor[(112), bool]) {
  %93 = @func_6480() /* ty=(Tensor[(6, 12, 2), float32], Tensor[(6, 12, 2), int32]) */;
  %94 = cast(meta[relay.Constant][3] /* ty=Tensor[(112), bool] */, dtype="bool") /* ty=Tensor[(112), bool] */;
  %95 = reshape(%94, newshape=[16, 7, 1]) /* ty=Tensor[(16, 7, 1), bool] */;
  %96 = @func_1396(%95) /* ty=(Tensor[(16, 7, ?), uint64],) */;
  %97 = %93.0;
  %98 = %96.0;
  (%97, %98, meta[relay.Constant][3] /* ty=Tensor[(112), bool] */)
}

def @func_9400() -> (Tensor[(6, 12, 2), uint8],) {
  %99 = @func_7805() /* ty=(Tensor[(6, 12, 2), uint8],) */;
  %100 = %99.0;
  (%100,)
}

def @func_5733(%var_5695: Tensor[(756), int8]) -> (Tensor[(7, 12, 9), int8], Tensor[(756), int8], Tensor[(6, 12, 2), bool]) {
  %101 = cast(%var_5695, dtype="int8") /* ty=Tensor[(756), int8] */;
  %102 = cast(%var_5695, dtype="int8") /* ty=Tensor[(756), int8] */;
  %103 = reshape(%101, newshape=[7, 12, 9]) /* ty=Tensor[(7, 12, 9), int8] */;
  %104 = reshape(%102, newshape=[7, 12, 9]) /* ty=Tensor[(7, 12, 9), int8] */;
  %105 = @func_1789(%103, %104) /* ty=(Tensor[(7, 12, 9), int8], Tensor[(3, 2, 10), int32], Tensor[(378), uint8], Tensor[(60), int32]) */;
  %106 = @func_5512() /* ty=Tensor[(6, 12, 2), int32] */;
  %107 = cast(meta[relay.Constant][4] /* ty=Tensor[(6, 12, 2), int32] */, dtype="bool") /* ty=Tensor[(6, 12, 2), bool] */;
  %108 = shape_of(%106, dtype="int32") /* ty=Tensor[(3), int32] */;
  %109 = cast(%106, dtype="bool") /* ty=Tensor[(6, 12, 2), bool] */;
  %110 = dyn.reshape(%107, %108, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %111 = %105.0;
  %112 = less(%109, %110) /* ty=Tensor[(6, 12, 2), bool] */;
  (%111, %var_5695, %112)
}

def @func_6154() -> (Tensor[(6, 12, 2), int32],) {
  %113 = @func_5512() /* ty=Tensor[(6, 12, 2), int32] */;
  (%113,)
}

def @func_8036(%var_8032: Tensor[(1404), float64]) -> (Tensor[(6, 12, 2), bool], Tensor[(6, 12, 2), float32], Tensor[(9, 12, 13), bool], Tensor[(1404), float64]) {
  %114 = @func_7441() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %115 = %114.0;
  %116 = cast(meta[relay.Constant][5] /* ty=Tensor[(6, 12, 2), int32] */, dtype="bool") /* ty=Tensor[(6, 12, 2), bool] */;
  %117 = shape_of(%115, dtype="int32") /* ty=Tensor[(3), int32] */;
  %118 = cast(%115, dtype="bool") /* ty=Tensor[(6, 12, 2), bool] */;
  %119 = dyn.reshape(%116, %117, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %120 = @func_6480() /* ty=(Tensor[(6, 12, 2), float32], Tensor[(6, 12, 2), int32]) */;
  %121 = cast(%var_8032, dtype="float64") /* ty=Tensor[(1404), float64] */;
  %122 = reshape(%121, newshape=[9, 12, 13]) /* ty=Tensor[(9, 12, 13), float64] */;
  %123 = @func_7145(%122) /* ty=(Tensor[(9, 12, 13), float64], Tensor[(9, 12, 13), bool]) */;
  %124 = logical_or(%118, %119) /* ty=Tensor[(6, 12, 2), bool] */;
  %125 = %120.0;
  %126 = %123.1;
  (%124, %125, %126, %var_8032)
}

def @func_7297(%var_7217: Tensor[(1404), float64], %var_7236: Tensor[(30, 2), int32], %var_7237: Tensor[(8, 60), float32], %var_7274: Tensor[(252), float64], %var_7280: Tensor[(720), float64]) -> (Tensor[(6, 12, 2), float32], Tensor[(1404), float64], Tensor[(15, 6, 15), float32], Tensor[(1350), int32], Tensor[(288), int8], Tensor[(30, 2), int32], Tensor[(8, 60), float32], Tensor[(8, 24), float64], Tensor[(9, 12, 13), float32], Tensor[(60), int32], Tensor[(252), float64], Tensor[(54, 14), int8], Tensor[(64), float32], Tensor[(720), float64]) {
  %127 = @func_6480() /* ty=(Tensor[(6, 12, 2), float32], Tensor[(6, 12, 2), int32]) */;
  %128 = cast(meta[relay.Constant][6] /* ty=Tensor[(1350), int32] */, dtype="int32") /* ty=Tensor[(1350), int32] */;
  %129 = cast(meta[relay.Constant][6] /* ty=Tensor[(1350), int32] */, dtype="int32") /* ty=Tensor[(1350), int32] */;
  %130 = reshape(%128, newshape=[15, 6, 15]) /* ty=Tensor[(15, 6, 15), int32] */;
  %131 = reshape(%129, newshape=[15, 6, 15]) /* ty=Tensor[(15, 6, 15), int32] */;
  %132 = cast(%var_7236, dtype="int32") /* ty=Tensor[(30, 2), int32] */;
  %133 = cast(%var_7237, dtype="float32") /* ty=Tensor[(8, 60), float32] */;
  %134 = cast(meta[relay.Constant][7] /* ty=Tensor[(8, 24), float64] */, dtype="float64") /* ty=Tensor[(8, 24), float64] */;
  %135 = reshape(%132, newshape=[60]) /* ty=Tensor[(60), int32] */;
  %136 = reshape(%133, newshape=[8, 60]) /* ty=Tensor[(8, 60), float32] */;
  %137 = reshape(%134, newshape=[4, 48]) /* ty=Tensor[(4, 48), float64] */;
  %138 = @func_7016(%135, %136, %137) /* ty=(Tensor[(6, 12, 2), int32], Tensor[(16, 7, ?), uint64], Tensor[(112), bool], Tensor[(6, 12, 2), int32], Tensor[(16, 13, 5), int16], int16, Tensor[(60), int32], Tensor[(6, 12, 2), int32], Tensor[(60), int32], Tensor[(288), int8], Tensor[(5, 12, 8), float32], Tensor[(8, 60), float32], Tensor[(4, 48), float64], Tensor[(176), float32], Tensor[(300), float32], Tensor[(6, 12, 2), int32]) */;
  %139 = cast(%var_7217, dtype="float64") /* ty=Tensor[(1404), float64] */;
  %140 = reshape(%139, newshape=[9, 12, 13]) /* ty=Tensor[(9, 12, 13), float64] */;
  %141 = @func_7145(%140) /* ty=(Tensor[(9, 12, 13), float64], Tensor[(9, 12, 13), bool]) */;
  %142 = %141.1;
  %143 = cast(%142, dtype="float32") /* ty=Tensor[(9, 12, 13), float32] */;
  %144 = cast(%var_7274, dtype="float64") /* ty=Tensor[(252), float64] */;
  %145 = cast(meta[relay.Constant][8] /* ty=Tensor[(54, 14), int8] */, dtype="int8") /* ty=Tensor[(54, 14), int8] */;
  %146 = reshape(%144, newshape=[9, 4, 7]) /* ty=Tensor[(9, 4, 7), float64] */;
  %147 = reshape(%145, newshape=[756]) /* ty=Tensor[(756), int8] */;
  %148 = @func_2095(%146, %147) /* ty=(Tensor[(60), int32], Tensor[(756), int8], Tensor[(9, 4, 7), bool]) */;
  %149 = cast(meta[relay.Constant][8] /* ty=Tensor[(54, 14), int8] */, dtype="int8") /* ty=Tensor[(54, 14), int8] */;
  %150 = cast(%var_7280, dtype="float64") /* ty=Tensor[(720), float64] */;
  %151 = %138.9;
  %152 = cast(%151, dtype="int8") /* ty=Tensor[(288), int8] */;
  %153 = reshape(%149, newshape=[756]) /* ty=Tensor[(756), int8] */;
  %154 = reshape(%150, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %155 = reshape(%152, newshape=[24, 12]) /* ty=Tensor[(24, 12), int8] */;
  %156 = @func_6303(%153, %154, %155) /* ty=(Tensor[(6, 12, 2), int32], Tensor[(3, 4, 16), float64], Tensor[(192), float64], Tensor[(60), int32], Tensor[(64), float32], Tensor[(60, 1), int32], Tensor[(756), int8], Tensor[(720), float64], Tensor[(24, 12), int8], Tensor[(112, 1), bool], Tensor[(3, 9, 14), float64], Tensor[(378), uint8], Tensor[(6, 12, 2), int32], Tensor[(756), int8], Tensor[(252), float64]) */;
  %157 = %127.0;
  %158 = @func_2936(%130, %131) /* ty=Tensor[(15, 6, 15), float32] */;
  %159 = sinh(%143) /* ty=Tensor[(9, 12, 13), float32] */;
  %160 = %148.0;
  %161 = %156.4;
  (%157, %var_7217, %158, meta[relay.Constant][6] /* ty=Tensor[(1350), int32] */, %151, %var_7236, %var_7237, meta[relay.Constant][7] /* ty=Tensor[(8, 24), float64] */, %159, %160, %var_7274, meta[relay.Constant][8] /* ty=Tensor[(54, 14), int8] */, %161, %var_7280)
}

def @func_7952() -> Tensor[(6, 12, 2), int32] {
  @func_5512() /* ty=Tensor[(6, 12, 2), int32] */
}

def @func_13827(%var_13788: Tensor[(192), float64]) -> (Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32], Tensor[(192), float64]) {
  %162 = @func_8677() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %163 = cast(%var_13788, dtype="float64") /* ty=Tensor[(192), float64] */;
  %164 = reshape(%163, newshape=[192]) /* ty=Tensor[(192), float64] */;
  %165 = @func_9906(%164) /* ty=(Tensor[(6, 12, 2), uint8], Tensor[(378), uint8], Tensor[(192), float64], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */;
  %166 = %162.0;
  %167 = %165.3;
  (%166, %167, %var_13788)
}

def @func_10(%var_4: Tensor[(3, 2, 10), int32], %var_5: Tensor[(3, 2, 10), int32]) -> Tensor[(3, 2, 10), int32] {
  %168 = cast(%var_5, dtype="int32") /* ty=Tensor[(3, 2, 10), int32] */;
  %169 = shape_of(%var_4, dtype="int32") /* ty=Tensor[(3), int32] */;
  %170 = cast(%var_4, dtype="int32") /* ty=Tensor[(3, 2, 10), int32] */;
  %171 = dyn.reshape(%168, %169, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  add(%170, %171) /* ty=Tensor[(3, 2, 10), int32] */
}

def @func_10539() -> (Tensor[(6, 12, 2), float64],) {
  %172 = @func_7406() /* ty=Tensor[(6, 12, 2), int32] */;
  %173 = cast(%172, dtype="float64") /* ty=Tensor[(6, 12, 2), float64] */;
  %174 = cos(%173) /* ty=Tensor[(6, 12, 2), float64] */;
  (%174,)
}

def @func_13572() -> Tensor[(6, 12, 2), int32] {
  @func_5512() /* ty=Tensor[(6, 12, 2), int32] */
}

def @func_14440(%var_14425: Tensor[(14, 11, 7), float32], %var_14435: uint16, %var_14436: Tensor[(56), uint16]) -> (Tensor[(14, 11, 7), float32], Tensor[(8, 7, 1), float64], uint16, Tensor[(56), uint16]) {
  %175 = cast(%var_14425, dtype="float32") /* ty=Tensor[(14, 11, 7), float32] */;
  %176 = cast(%var_14435, dtype="uint16") /* ty=uint16 */;
  %177 = cast(%var_14436, dtype="uint16") /* ty=Tensor[(56), uint16] */;
  %178 = reshape(%176, newshape=[]) /* ty=uint16 */;
  %179 = reshape(%177, newshape=[8, 7, 1]) /* ty=Tensor[(8, 7, 1), uint16] */;
  %180 = log10(%175) /* ty=Tensor[(14, 11, 7), float32] */;
  %181 = @func_10732(%178, %179) /* ty=Tensor[(8, 7, 1), float64] */;
  (%180, %181, %var_14435, %var_14436)
}

def @func_7016(%var_6979: Tensor[(60), int32], %var_7002: Tensor[(8, 60), float32], %var_7003: Tensor[(4, 48), float64]) -> (Tensor[(6, 12, 2), int32], Tensor[(16, 7, ?), uint64], Tensor[(112), bool], Tensor[(6, 12, 2), int32], Tensor[(16, 13, 5), int16], int16, Tensor[(60), int32], Tensor[(6, 12, 2), int32], Tensor[(60), int32], Tensor[(288), int8], Tensor[(5, 12, 8), float32], Tensor[(8, 60), float32], Tensor[(4, 48), float64], Tensor[(176), float32], Tensor[(300), float32], Tensor[(6, 12, 2), int32]) {
  %182 = @func_5899() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %183 = cast(meta[relay.Constant][9] /* ty=Tensor[(112), bool] */, dtype="bool") /* ty=Tensor[(112), bool] */;
  %184 = reshape(%183, newshape=[16, 7, 1]) /* ty=Tensor[(16, 7, 1), bool] */;
  %185 = @func_1396(%184) /* ty=(Tensor[(16, 7, ?), uint64],) */;
  %186 = @func_6551() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */;
  %187 = cast(meta[relay.Constant][10] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %188 = cast(%var_6979, dtype="int32") /* ty=Tensor[(60), int32] */;
  %189 = reshape(%187, newshape=[]) /* ty=int16 */;
  %190 = reshape(%188, newshape=[60]) /* ty=Tensor[(60), int32] */;
  %191 = @func_852(%189, %190) /* ty=(Tensor[(16, 13, 5), int16], Tensor[(3, 2, 10), int32], Tensor[(60), int32]) */;
  %192 = @func_6529() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %193 = cast(meta[relay.Constant][11] /* ty=Tensor[(288), int8] */, dtype="int8") /* ty=Tensor[(288), int8] */;
  %194 = cast(meta[relay.Constant][11] /* ty=Tensor[(288), int8] */, dtype="int8") /* ty=Tensor[(288), int8] */;
  %195 = %185.0;
  %196 = cast(%195, dtype="bool") /* ty=Tensor[(16, 7, ?), bool] */;
  %197 = cast(%var_6979, dtype="int32") /* ty=Tensor[(60), int32] */;
  %198 = reshape(%193, newshape=[6, 4, 12]) /* ty=Tensor[(6, 4, 12), int8] */;
  %199 = reshape(%194, newshape=[6, 4, 12]) /* ty=Tensor[(6, 4, 12), int8] */;
  %200 = reshape(%196, newshape=[1, 112]) /* ty=Tensor[(1, 112), bool] */;
  %201 = reshape(%197, newshape=[60]) /* ty=Tensor[(60), int32] */;
  %202 = @func_1668(%198, %199, %200, %201) /* ty=(Tensor[(6, 4, 12), int8], Tensor[(1, 112), bool], Tensor[(3, 2, 10), int32], Tensor[(60), int32], Tensor[(16, 7, 378), uint8]) */;
  %203 = cast(%var_7002, dtype="float32") /* ty=Tensor[(8, 60), float32] */;
  %204 = cast(%var_7002, dtype="float32") /* ty=Tensor[(8, 60), float32] */;
  %205 = cast(%var_7003, dtype="float64") /* ty=Tensor[(4, 48), float64] */;
  %206 = cast(meta[relay.Constant][12] /* ty=Tensor[(176), float32] */, dtype="float32") /* ty=Tensor[(176), float32] */;
  %207 = cast(meta[relay.Constant][12] /* ty=Tensor[(176), float32] */, dtype="float32") /* ty=Tensor[(176), float32] */;
  %208 = cast(meta[relay.Constant][13] /* ty=Tensor[(300), float32] */, dtype="float32") /* ty=Tensor[(300), float32] */;
  %209 = reshape(%203, newshape=[5, 12, 8]) /* ty=Tensor[(5, 12, 8), float32] */;
  %210 = reshape(%204, newshape=[5, 12, 8]) /* ty=Tensor[(5, 12, 8), float32] */;
  %211 = reshape(%205, newshape=[96, 2]) /* ty=Tensor[(96, 2), float64] */;
  %212 = reshape(%206, newshape=[4, 44]) /* ty=Tensor[(4, 44), float32] */;
  %213 = reshape(%207, newshape=[4, 44]) /* ty=Tensor[(4, 44), float32] */;
  %214 = reshape(%208, newshape=[300]) /* ty=Tensor[(300), float32] */;
  %215 = @func_5882(%209, %210, %211, %212, %213, %214) /* ty=(Tensor[(5, 12, 8), float32], Tensor[(3, 4, 16), float64], Tensor[(96, 2), float64], Tensor[(6, 12, 2), int32], Tensor[(4, 44), int64], Tensor[(3, 2, 10), float32], Tensor[(300), float32], Tensor[(378), uint8], Tensor[(16, 1, 11), float32]) */;
  %216 = @func_6154() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %217 = %182.0;
  %218 = %186.0;
  %219 = %191.0;
  %220 = %192.0;
  %221 = %202.3;
  %222 = %215.0;
  %223 = %216.0;
  (%217, %195, meta[relay.Constant][9] /* ty=Tensor[(112), bool] */, %218, %219, meta[relay.Constant][10] /* ty=int16 */, %var_6979, %220, %221, meta[relay.Constant][11] /* ty=Tensor[(288), int8] */, %222, %var_7002, %var_7003, meta[relay.Constant][12] /* ty=Tensor[(176), float32] */, meta[relay.Constant][13] /* ty=Tensor[(300), float32] */, %223)
}

def @func_9298() -> (Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) {
  %224 = @func_7941() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %225 = @func_6529() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %226 = %224.0;
  %227 = %225.0;
  (%226, %227)
}

def @func_9178(%var_9165: Tensor[(60), int32], %var_9168: Tensor[(42, 6), float64], %var_9173: Tensor[(6, 12, 2), int32]) -> (Tensor[(378), uint8], Tensor[(784), uint32], Tensor[(60), int32], Tensor[(756), int8], Tensor[(192), float64], Tensor[(42, 6), float64], Tensor[(378), uint8], Tensor[(6, 12, 2), int8]) {
  %228 = cast(meta[relay.Constant][14] /* ty=Tensor[(784), uint32] */, dtype="uint32") /* ty=Tensor[(784), uint32] */;
  %229 = cast(meta[relay.Constant][14] /* ty=Tensor[(784), uint32] */, dtype="uint32") /* ty=Tensor[(784), uint32] */;
  %230 = cast(%var_9165, dtype="int32") /* ty=Tensor[(60), int32] */;
  %231 = cast(meta[relay.Constant][15] /* ty=Tensor[(756), int8] */, dtype="int8") /* ty=Tensor[(756), int8] */;
  %232 = cast(meta[relay.Constant][16] /* ty=Tensor[(192), float64] */, dtype="float64") /* ty=Tensor[(192), float64] */;
  %233 = cast(%var_9168, dtype="float64") /* ty=Tensor[(42, 6), float64] */;
  %234 = cast(meta[relay.Constant][17] /* ty=Tensor[(378), uint8] */, dtype="uint8") /* ty=Tensor[(378), uint8] */;
  %235 = reshape(%228, newshape=[8, 7, 14]) /* ty=Tensor[(8, 7, 14), uint32] */;
  %236 = reshape(%229, newshape=[8, 7, 14]) /* ty=Tensor[(8, 7, 14), uint32] */;
  %237 = reshape(%230, newshape=[60]) /* ty=Tensor[(60), int32] */;
  %238 = reshape(%231, newshape=[9, 84]) /* ty=Tensor[(9, 84), int8] */;
  %239 = reshape(%232, newshape=[24, 8]) /* ty=Tensor[(24, 8), float64] */;
  %240 = reshape(%233, newshape=[1, 252]) /* ty=Tensor[(1, 252), float64] */;
  %241 = reshape(%234, newshape=[378]) /* ty=Tensor[(378), uint8] */;
  %242 = @func_2765(%235, %236, %237, %238, %239, %240, %241) /* ty=(Tensor[(60), int32], Tensor[(288), int8], Tensor[(112), bool], Tensor[(60), int32], Tensor[(8, 7, 14), float64], Tensor[(3, 2, 10), int32], Tensor[(9, 84), int8], Tensor[(3, 4, 16), float64], Tensor[(24, 8), float64], Tensor[(3, 4, 16), float64], Tensor[(60), int32], Tensor[(1, 252), float64], Tensor[(3, 2, 10), int32], Tensor[(378), uint8], Tensor[(60), int32], int16, Tensor[(16, 7, ?), uint64], Tensor[(11, 8, 16), int8], Tensor[(2, 704), int8]) */;
  %243 = @func_8338() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %244 = %243.0;
  %245 = cast(%var_9173, dtype="int8") /* ty=Tensor[(6, 12, 2), int8] */;
  %246 = shape_of(%244, dtype="int32") /* ty=Tensor[(3), int32] */;
  %247 = cast(%244, dtype="int8") /* ty=Tensor[(6, 12, 2), int8] */;
  %248 = dyn.reshape(%245, %246, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %249 = %242.13;
  %250 = bitwise_or(%247, %248) /* ty=Tensor[(6, 12, 2), int8] */;
  (%249, meta[relay.Constant][14] /* ty=Tensor[(784), uint32] */, %var_9165, meta[relay.Constant][15] /* ty=Tensor[(756), int8] */, meta[relay.Constant][16] /* ty=Tensor[(192), float64] */, %var_9168, meta[relay.Constant][17] /* ty=Tensor[(378), uint8] */, %250)
}

def @func_1668(%var_1619: Tensor[(6, 4, 12), int8], %var_1620: Tensor[(6, 4, 12), int8], %var_1628: Tensor[(1, 112), bool], %var_1647: Tensor[(60), int32]) -> (Tensor[(6, 4, 12), int8], Tensor[(1, 112), bool], Tensor[(3, 2, 10), int32], Tensor[(60), int32], Tensor[(16, 7, 378), uint8]) {
  %251 = cast(%var_1620, dtype="int8") /* ty=Tensor[(6, 4, 12), int8] */;
  %252 = shape_of(%var_1619, dtype="int32") /* ty=Tensor[(3), int32] */;
  %253 = cast(%var_1619, dtype="int8") /* ty=Tensor[(6, 4, 12), int8] */;
  %254 = dyn.reshape(%251, %252, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %255 = cast(meta[relay.Constant][18] /* ty=Tensor[(378), uint8] */, dtype="uint8") /* ty=Tensor[(378), uint8] */;
  %256 = cast(%var_1647, dtype="int32") /* ty=Tensor[(60), int32] */;
  %257 = reshape(%255, newshape=[3, 9, 14]) /* ty=Tensor[(3, 9, 14), uint8] */;
  %258 = reshape(%256, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), int32] */;
  %259 = @func_206(%257, %258) /* ty=(Tensor[(60), int32], Tensor[(3, 2, 10), bool], Tensor[(3, 2, 10), int32], Tensor[(3, 9, 14), float64], Tensor[(3, 2, 10), int32]) */;
  %260 = cast(%var_1628, dtype="bool") /* ty=Tensor[(1, 112), bool] */;
  %261 = reshape(%260, newshape=[16, 7, 1]) /* ty=Tensor[(16, 7, 1), bool] */;
  %262 = @func_1396(%261) /* ty=(Tensor[(16, 7, ?), uint64],) */;
  %263 = %262.0;
  %264 = cast(meta[relay.Constant][18] /* ty=Tensor[(378), uint8] */, dtype="uint8") /* ty=Tensor[(378), uint8] */;
  %265 = cast(%263, dtype="uint8") /* ty=Tensor[(16, 7, ?), uint8] */;
  %266 = subtract(%253, %254) /* ty=Tensor[(6, 4, 12), int8] */;
  %267 = %259.4;
  %268 = minimum(%264, %265) /* ty=Tensor[(16, 7, 378), uint8] */;
  (%266, %var_1628, %267, %var_1647, %268)
}

def @func_13505(%var_13464: Tensor[(378), uint8], %var_13465: Tensor[(60), int32]) -> (Tensor[(6, 12, 2), int32], Tensor[(60), int32], Tensor[(378), uint8], Tensor[(60), int32], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) {
  %269 = @func_10209() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */;
  %270 = cast(%var_13464, dtype="uint8") /* ty=Tensor[(378), uint8] */;
  %271 = cast(%var_13465, dtype="int32") /* ty=Tensor[(60), int32] */;
  %272 = reshape(%270, newshape=[3, 9, 14]) /* ty=Tensor[(3, 9, 14), uint8] */;
  %273 = reshape(%271, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), int32] */;
  %274 = @func_206(%272, %273) /* ty=(Tensor[(60), int32], Tensor[(3, 2, 10), bool], Tensor[(3, 2, 10), int32], Tensor[(3, 9, 14), float64], Tensor[(3, 2, 10), int32]) */;
  %275 = @func_8338() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %276 = @func_6154() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %277 = %269.0;
  %278 = %274.0;
  %279 = %275.0;
  %280 = @func_9335() /* ty=Tensor[(6, 12, 2), int32] */;
  %281 = %276.0;
  (%277, %278, %var_13464, %var_13465, %279, %280, %281)
}

def @func_6218(%var_6213: Tensor[(192), float64]) -> (Tensor[(6, 12, 2), float64], Tensor[(3, 2, 10), int32], Tensor[(300), float32], Tensor[(192), float64], Tensor[(378), uint8]) {
  %282 = @func_5899() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %283 = %282.0;
  %284 = cast(%283, dtype="float64") /* ty=Tensor[(6, 12, 2), float64] */;
  %285 = cast(meta[relay.Constant][19] /* ty=Tensor[(300), float32] */, dtype="float32") /* ty=Tensor[(300), float32] */;
  %286 = cast(%var_6213, dtype="float64") /* ty=Tensor[(192), float64] */;
  %287 = cast(meta[relay.Constant][20] /* ty=Tensor[(378), uint8] */, dtype="uint8") /* ty=Tensor[(378), uint8] */;
  %288 = reshape(%285, newshape=[15, 2, 10]) /* ty=Tensor[(15, 2, 10), float32] */;
  %289 = reshape(%286, newshape=[48, 4]) /* ty=Tensor[(48, 4), float64] */;
  %290 = reshape(%287, newshape=[126, 3]) /* ty=Tensor[(126, 3), uint8] */;
  %291 = @func_4826(%288, %289, %290) /* ty=(Tensor[(15, 2, 10), float32], Tensor[(3, 4, 16), float64], Tensor[(48, 4), float64], Tensor[(60), uint16], Tensor[(3, 2, 10), int32], Tensor[(126, 3), uint8], Tensor[(11, 8, 16), float64], Tensor[(1408), int8], Tensor[(3, 2, 10), float32], Tensor[(3, 2, 10), int32], Tensor[(756), int8], Tensor[(1408), int8], Tensor[(140), float32]) */;
  %292 = log10(%284) /* ty=Tensor[(6, 12, 2), float64] */;
  %293 = %291.4;
  (%292, %293, meta[relay.Constant][19] /* ty=Tensor[(300), float32] */, %var_6213, meta[relay.Constant][20] /* ty=Tensor[(378), uint8] */)
}

def @func_12029(%var_12022: Tensor[(13, 14, 16), bool], %var_12023: Tensor[(13, 14, 16), bool]) -> (Tensor[(13, 14, 16), bool],) {
  %294 = cast(%var_12023, dtype="bool") /* ty=Tensor[(13, 14, 16), bool] */;
  %295 = shape_of(%var_12022, dtype="int32") /* ty=Tensor[(3), int32] */;
  %296 = cast(%var_12022, dtype="bool") /* ty=Tensor[(13, 14, 16), bool] */;
  %297 = dyn.reshape(%294, %295, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %298 = logical_or(%296, %297) /* ty=Tensor[(13, 14, 16), bool] */;
  (%298,)
}

def @func_12742() -> Tensor[(6, 12, 2), int32] {
  @func_11220() /* ty=Tensor[(6, 12, 2), int32] */
}

def @func_6808(%var_6795: Tensor[(9, 3, 13), bool], %var_6806: Tensor[(756), int8]) -> (Tensor[(9, 3, 13), bool], Tensor[(3, 2, 10), int32], Tensor[(756), int8]) {
  %299 = cast(%var_6795, dtype="bool") /* ty=Tensor[(9, 3, 13), bool] */;
  %300 = shape_of(meta[relay.Constant][21] /* ty=Tensor[(9, 3, 13), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %301 = cast(meta[relay.Constant][21] /* ty=Tensor[(9, 3, 13), bool] */, dtype="bool") /* ty=Tensor[(9, 3, 13), bool] */;
  %302 = dyn.reshape(%299, %300, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %303 = cast(%var_6806, dtype="int8") /* ty=Tensor[(756), int8] */;
  %304 = cast(%var_6806, dtype="int8") /* ty=Tensor[(756), int8] */;
  %305 = reshape(%303, newshape=[7, 12, 9]) /* ty=Tensor[(7, 12, 9), int8] */;
  %306 = reshape(%304, newshape=[7, 12, 9]) /* ty=Tensor[(7, 12, 9), int8] */;
  %307 = @func_1789(%305, %306) /* ty=(Tensor[(7, 12, 9), int8], Tensor[(3, 2, 10), int32], Tensor[(378), uint8], Tensor[(60), int32]) */;
  %308 = logical_or(%301, %302) /* ty=Tensor[(9, 3, 13), bool] */;
  %309 = %307.1;
  (%308, %309, %var_6806)
}

def @func_7084() -> (Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) {
  %310 = @func_6529() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %311 = @func_5899() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %312 = %310.0;
  %313 = %311.0;
  (%312, %313)
}

def @func_10947() -> (Tensor[(6, 12, 2), int32], Tensor[(9, 3, 13), bool], Tensor[(756), int8]) {
  %314 = @func_10863() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %315 = cast(meta[relay.Constant][22] /* ty=Tensor[(756), int8] */, dtype="int8") /* ty=Tensor[(756), int8] */;
  %316 = reshape(%315, newshape=[18, 42]) /* ty=Tensor[(18, 42), int8] */;
  %317 = @func_7364(%316) /* ty=(Tensor[(6, 12, 2), int32], Tensor[(9, 3, 13), bool], Tensor[(351), bool], Tensor[(18, 42), int8]) */;
  %318 = %314.0;
  %319 = %317.1;
  (%318, %319, meta[relay.Constant][22] /* ty=Tensor[(756), int8] */)
}

def @func_10682() -> (Tensor[(6, 12, 2), int32],) {
  %320 = @func_7084() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */;
  %321 = %320.1;
  (%321,)
}

def @func_8293() -> (Tensor[(6, 12, 2), uint8],) {
  %322 = @func_7805() /* ty=(Tensor[(6, 12, 2), uint8],) */;
  %323 = %322.0;
  (%323,)
}

def @func_11578() -> Tensor[(6, 12, 2), int32] {
  %324 = @func_6154() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %324.0
}

def @func_10641() -> (Tensor[(6, 12, 2), int32], Tensor[(1, 3, 11), int8], int8, Tensor[(6, 12, 2), int32], Tensor[(9, 3, 13), bool], Tensor[(117, 3), bool], Tensor[(756), int8]) {
  %325 = @func_7870() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */;
  %326 = cast(meta[relay.Constant][23] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %327 = reshape(%326, newshape=[]) /* ty=int8 */;
  %328 = @func_7941() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %329 = cast(meta[relay.Constant][24] /* ty=Tensor[(117, 3), bool] */, dtype="bool") /* ty=Tensor[(117, 3), bool] */;
  %330 = cast(meta[relay.Constant][25] /* ty=Tensor[(756), int8] */, dtype="int8") /* ty=Tensor[(756), int8] */;
  %331 = reshape(%329, newshape=[9, 3, 13]) /* ty=Tensor[(9, 3, 13), bool] */;
  %332 = reshape(%330, newshape=[756]) /* ty=Tensor[(756), int8] */;
  %333 = @func_6808(%331, %332) /* ty=(Tensor[(9, 3, 13), bool], Tensor[(3, 2, 10), int32], Tensor[(756), int8]) */;
  %334 = %325.1;
  %335 = @func_5457(%327) /* ty=Tensor[(1, 3, 11), int8] */;
  %336 = %328.0;
  %337 = %333.0;
  (%334, %335, meta[relay.Constant][23] /* ty=int8 */, %336, %337, meta[relay.Constant][24] /* ty=Tensor[(117, 3), bool] */, meta[relay.Constant][25] /* ty=Tensor[(756), int8] */)
}

def @func_11328() -> (Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), float32]) {
  %338 = @func_7084() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */;
  %339 = @func_10846() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %340 = %339.0;
  %341 = cast(%340, dtype="float32") /* ty=Tensor[(6, 12, 2), float32] */;
  %342 = %338.1;
  %343 = cosh(%341) /* ty=Tensor[(6, 12, 2), float32] */;
  (%342, %343)
}

def @func_10846() -> (Tensor[(6, 12, 2), int32],) {
  %344 = @func_6529() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %345 = %344.0;
  (%345,)
}

def @func_5604(%var_5575: Tensor[(4, 16, 16), float64], %var_5576: Tensor[(4, 16, 16), float64], %var_5600: Tensor[(1350), int32]) -> (Tensor[(4, 16, 16), float64], Tensor[(16, 7, ?), uint64], Tensor[(112), bool], Tensor[(15, 6, 15), float32], Tensor[(1350), int32]) {
  %346 = cast(%var_5576, dtype="float64") /* ty=Tensor[(4, 16, 16), float64] */;
  %347 = shape_of(%var_5575, dtype="int32") /* ty=Tensor[(3), int32] */;
  %348 = cast(%var_5575, dtype="float64") /* ty=Tensor[(4, 16, 16), float64] */;
  %349 = dyn.reshape(%346, %347, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %350 = cast(meta[relay.Constant][26] /* ty=Tensor[(112), bool] */, dtype="bool") /* ty=Tensor[(112), bool] */;
  %351 = reshape(%350, newshape=[16, 7, 1]) /* ty=Tensor[(16, 7, 1), bool] */;
  %352 = @func_1396(%351) /* ty=(Tensor[(16, 7, ?), uint64],) */;
  %353 = cast(%var_5600, dtype="int32") /* ty=Tensor[(1350), int32] */;
  %354 = cast(%var_5600, dtype="int32") /* ty=Tensor[(1350), int32] */;
  %355 = reshape(%353, newshape=[15, 6, 15]) /* ty=Tensor[(15, 6, 15), int32] */;
  %356 = reshape(%354, newshape=[15, 6, 15]) /* ty=Tensor[(15, 6, 15), int32] */;
  %357 = floor_divide(%348, %349) /* ty=Tensor[(4, 16, 16), float64] */;
  %358 = %352.0;
  %359 = @func_2936(%355, %356) /* ty=Tensor[(15, 6, 15), float32] */;
  (%357, %358, meta[relay.Constant][26] /* ty=Tensor[(112), bool] */, %359, %var_5600)
}

def @func_11348() -> Tensor[(6, 12, 2), int32] {
  @func_5648() /* ty=Tensor[(6, 12, 2), int32] */
}

def @func_10387() -> (Tensor[(6, 12, 2), int32],) {
  %360 = @func_9461() /* ty=Tensor[(6, 12, 2), int32] */;
  (%360,)
}

def @func_6498(%var_6483: Tensor[(5, 12, 6), float32], %var_6493: Tensor[(352, 4), int8]) -> (Tensor[(5, 12, 6), float32], Tensor[(11, 8, 16), float64], Tensor[(352, 4), int8]) {
  %361 = cast(meta[relay.Constant][27] /* ty=Tensor[(5, 12, 6), float32] */, dtype="float32") /* ty=Tensor[(5, 12, 6), float32] */;
  %362 = shape_of(%var_6483, dtype="int32") /* ty=Tensor[(3), int32] */;
  %363 = cast(%var_6483, dtype="float32") /* ty=Tensor[(5, 12, 6), float32] */;
  %364 = dyn.reshape(%361, %362, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %365 = cast(%var_6493, dtype="int8") /* ty=Tensor[(352, 4), int8] */;
  %366 = cast(%var_6493, dtype="int8") /* ty=Tensor[(352, 4), int8] */;
  %367 = reshape(%365, newshape=[11, 8, 16]) /* ty=Tensor[(11, 8, 16), int8] */;
  %368 = reshape(%366, newshape=[11, 8, 16]) /* ty=Tensor[(11, 8, 16), int8] */;
  %369 = @func_1356(%367, %368) /* ty=(Tensor[(11, 8, 16), int8], Tensor[(11, 8, 16), float64], Tensor[(3, 4, 16), float64], Tensor[(2, 96), float64]) */;
  %370 = mod(%363, %364) /* ty=Tensor[(5, 12, 6), float32] */;
  %371 = %369.1;
  (%370, %371, %var_6493)
}

def @func_13124(%var_13113: Tensor[(756), int8]) -> (Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), bool], Tensor[(756), int8]) {
  %372 = cast(%var_13113, dtype="int8") /* ty=Tensor[(756), int8] */;
  %373 = reshape(%372, newshape=[756]) /* ty=Tensor[(756), int8] */;
  %374 = @func_5733(%373) /* ty=(Tensor[(7, 12, 9), int8], Tensor[(756), int8], Tensor[(6, 12, 2), bool]) */;
  %375 = @func_5512() /* ty=Tensor[(6, 12, 2), int32] */;
  %376 = @func_10775() /* ty=Tensor[(6, 12, 2), int32] */;
  %377 = %374.2;
  (%375, %376, %377, %var_13113)
}

def @func_11681(%var_11675: Tensor[(30, 2), int32]) -> (Tensor[(6, 12, 2), int32], Tensor[(3, 9, 14), float64], Tensor[(378), uint8], Tensor[(30, 2), int32]) {
  %378 = @func_10641() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(1, 3, 11), int8], int8, Tensor[(6, 12, 2), int32], Tensor[(9, 3, 13), bool], Tensor[(117, 3), bool], Tensor[(756), int8]) */;
  %379 = cast(meta[relay.Constant][28] /* ty=Tensor[(378), uint8] */, dtype="uint8") /* ty=Tensor[(378), uint8] */;
  %380 = cast(%var_11675, dtype="int32") /* ty=Tensor[(30, 2), int32] */;
  %381 = reshape(%379, newshape=[3, 9, 14]) /* ty=Tensor[(3, 9, 14), uint8] */;
  %382 = reshape(%380, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), int32] */;
  %383 = @func_206(%381, %382) /* ty=(Tensor[(60), int32], Tensor[(3, 2, 10), bool], Tensor[(3, 2, 10), int32], Tensor[(3, 9, 14), float64], Tensor[(3, 2, 10), int32]) */;
  %384 = %378.3;
  %385 = %383.3;
  (%384, %385, meta[relay.Constant][28] /* ty=Tensor[(378), uint8] */, %var_11675)
}

def @func_12506() -> Tensor[(6, 12, 2), float32] {
  %386 = @func_11786() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %387 = %386.0;
  %388 = cast(%387, dtype="float32") /* ty=Tensor[(6, 12, 2), float32] */;
  atan(%388) /* ty=Tensor[(6, 12, 2), float32] */
}

def @func_2765(%var_2620: Tensor[(8, 7, 14), uint32], %var_2621: Tensor[(8, 7, 14), uint32], %var_2628: Tensor[(60), int32], %var_2653: Tensor[(9, 84), int8], %var_2663: Tensor[(24, 8), float64], %var_2680: Tensor[(1, 252), float64], %var_2727: Tensor[(378), uint8]) -> (Tensor[(60), int32], Tensor[(288), int8], Tensor[(112), bool], Tensor[(60), int32], Tensor[(8, 7, 14), float64], Tensor[(3, 2, 10), int32], Tensor[(9, 84), int8], Tensor[(3, 4, 16), float64], Tensor[(24, 8), float64], Tensor[(3, 4, 16), float64], Tensor[(60), int32], Tensor[(1, 252), float64], Tensor[(3, 2, 10), int32], Tensor[(378), uint8], Tensor[(60), int32], int16, Tensor[(16, 7, ?), uint64], Tensor[(11, 8, 16), int8], Tensor[(2, 704), int8]) {
  %389 = cast(meta[relay.Constant][29] /* ty=Tensor[(288), int8] */, dtype="int8") /* ty=Tensor[(288), int8] */;
  %390 = cast(meta[relay.Constant][29] /* ty=Tensor[(288), int8] */, dtype="int8") /* ty=Tensor[(288), int8] */;
  %391 = cast(meta[relay.Constant][30] /* ty=Tensor[(112), bool] */, dtype="bool") /* ty=Tensor[(112), bool] */;
  %392 = cast(%var_2628, dtype="int32") /* ty=Tensor[(60), int32] */;
  %393 = reshape(%389, newshape=[6, 4, 12]) /* ty=Tensor[(6, 4, 12), int8] */;
  %394 = reshape(%390, newshape=[6, 4, 12]) /* ty=Tensor[(6, 4, 12), int8] */;
  %395 = reshape(%391, newshape=[1, 112]) /* ty=Tensor[(1, 112), bool] */;
  %396 = reshape(%392, newshape=[60]) /* ty=Tensor[(60), int32] */;
  %397 = @func_1668(%393, %394, %395, %396) /* ty=(Tensor[(6, 4, 12), int8], Tensor[(1, 112), bool], Tensor[(3, 2, 10), int32], Tensor[(60), int32], Tensor[(16, 7, 378), uint8]) */;
  %398 = cast(%var_2621, dtype="bool") /* ty=Tensor[(8, 7, 14), bool] */;
  %399 = shape_of(%var_2620, dtype="int32") /* ty=Tensor[(3), int32] */;
  %400 = cast(%var_2620, dtype="bool") /* ty=Tensor[(8, 7, 14), bool] */;
  %401 = dyn.reshape(%398, %399, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %402 = less_equal(%400, %401) /* ty=Tensor[(8, 7, 14), bool] */;
  %403 = cast(%402, dtype="float64") /* ty=Tensor[(8, 7, 14), float64] */;
  %404 = shape_of(%var_2620, dtype="int32") /* ty=Tensor[(3), int32] */;
  %405 = cast(%var_2620, dtype="float64") /* ty=Tensor[(8, 7, 14), float64] */;
  %406 = dyn.reshape(%403, %404, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %407 = cast(%var_2653, dtype="int8") /* ty=Tensor[(9, 84), int8] */;
  %408 = cast(%var_2653, dtype="int8") /* ty=Tensor[(9, 84), int8] */;
  %409 = reshape(%407, newshape=[7, 12, 9]) /* ty=Tensor[(7, 12, 9), int8] */;
  %410 = reshape(%408, newshape=[7, 12, 9]) /* ty=Tensor[(7, 12, 9), int8] */;
  %411 = @func_1789(%409, %410) /* ty=(Tensor[(7, 12, 9), int8], Tensor[(3, 2, 10), int32], Tensor[(378), uint8], Tensor[(60), int32]) */;
  %412 = cast(%var_2663, dtype="float64") /* ty=Tensor[(24, 8), float64] */;
  %413 = reshape(%412, newshape=[3, 4, 16]) /* ty=Tensor[(3, 4, 16), float64] */;
  %414 = cast(%var_2663, dtype="float64") /* ty=Tensor[(24, 8), float64] */;
  %415 = reshape(%414, newshape=[3, 4, 16]) /* ty=Tensor[(3, 4, 16), float64] */;
  %416 = cast(%var_2680, dtype="float64") /* ty=Tensor[(1, 252), float64] */;
  %417 = cast(%var_2653, dtype="int8") /* ty=Tensor[(9, 84), int8] */;
  %418 = reshape(%416, newshape=[9, 4, 7]) /* ty=Tensor[(9, 4, 7), float64] */;
  %419 = reshape(%417, newshape=[756]) /* ty=Tensor[(756), int8] */;
  %420 = @func_2095(%418, %419) /* ty=(Tensor[(60), int32], Tensor[(756), int8], Tensor[(9, 4, 7), bool]) */;
  %421 = cast(%var_2727, dtype="uint8") /* ty=Tensor[(378), uint8] */;
  %422 = %397.3;
  %423 = cast(%422, dtype="int32") /* ty=Tensor[(60), int32] */;
  %424 = reshape(%421, newshape=[3, 9, 14]) /* ty=Tensor[(3, 9, 14), uint8] */;
  %425 = reshape(%423, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), int32] */;
  %426 = @func_206(%424, %425) /* ty=(Tensor[(60), int32], Tensor[(3, 2, 10), bool], Tensor[(3, 2, 10), int32], Tensor[(3, 9, 14), float64], Tensor[(3, 2, 10), int32]) */;
  %427 = cast(meta[relay.Constant][31] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %428 = cast(%422, dtype="int32") /* ty=Tensor[(60), int32] */;
  %429 = reshape(%427, newshape=[]) /* ty=int16 */;
  %430 = reshape(%428, newshape=[60]) /* ty=Tensor[(60), int32] */;
  %431 = @func_852(%429, %430) /* ty=(Tensor[(16, 13, 5), int16], Tensor[(3, 2, 10), int32], Tensor[(60), int32]) */;
  %432 = cast(meta[relay.Constant][30] /* ty=Tensor[(112), bool] */, dtype="bool") /* ty=Tensor[(112), bool] */;
  %433 = reshape(%432, newshape=[16, 7, 1]) /* ty=Tensor[(16, 7, 1), bool] */;
  %434 = @func_1396(%433) /* ty=(Tensor[(16, 7, ?), uint64],) */;
  %435 = cast(meta[relay.Constant][32] /* ty=Tensor[(2, 704), int8] */, dtype="int8") /* ty=Tensor[(2, 704), int8] */;
  %436 = cast(meta[relay.Constant][32] /* ty=Tensor[(2, 704), int8] */, dtype="int8") /* ty=Tensor[(2, 704), int8] */;
  %437 = reshape(%435, newshape=[11, 8, 16]) /* ty=Tensor[(11, 8, 16), int8] */;
  %438 = reshape(%436, newshape=[11, 8, 16]) /* ty=Tensor[(11, 8, 16), int8] */;
  %439 = @func_1356(%437, %438) /* ty=(Tensor[(11, 8, 16), int8], Tensor[(11, 8, 16), float64], Tensor[(3, 4, 16), float64], Tensor[(2, 96), float64]) */;
  %440 = floor_mod(%405, %406) /* ty=Tensor[(8, 7, 14), float64] */;
  %441 = %411.1;
  %442 = @func_1144(%413) /* ty=Tensor[(3, 4, 16), float64] */;
  %443 = @func_1144(%415) /* ty=Tensor[(3, 4, 16), float64] */;
  %444 = %420.0;
  %445 = %426.4;
  %446 = %431.2;
  %447 = %434.0;
  %448 = %439.0;
  (%422, meta[relay.Constant][29] /* ty=Tensor[(288), int8] */, meta[relay.Constant][30] /* ty=Tensor[(112), bool] */, %var_2628, %440, %441, %var_2653, %442, %var_2663, %443, %444, %var_2680, %445, %var_2727, %446, meta[relay.Constant][31] /* ty=int16 */, %447, %448, meta[relay.Constant][32] /* ty=Tensor[(2, 704), int8] */)
}

def @func_11220() -> Tensor[(6, 12, 2), int32] {
  @func_5512() /* ty=Tensor[(6, 12, 2), int32] */
}

def @func_8862(%var_8845: Tensor[(15, 4, 3), float64]) -> (Tensor[(15, 4, 3), float64], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) {
  %449 = cast(%var_8845, dtype="float64") /* ty=Tensor[(15, 4, 3), float64] */;
  %450 = @func_8338() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %451 = sqrt(%449) /* ty=Tensor[(15, 4, 3), float64] */;
  %452 = @func_7406() /* ty=Tensor[(6, 12, 2), int32] */;
  %453 = %450.0;
  (%451, %452, %453)
}

def @func_14056() -> (Tensor[(9, 3, 13), bool],) {
  %454 = @func_10947() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(9, 3, 13), bool], Tensor[(756), int8]) */;
  %455 = %454.1;
  (%455,)
}

def @func_11938(%var_11928: Tensor[(192), float64]) -> (Tensor[(6, 12, 2), uint8], Tensor[(6, 12, 2), uint8], Tensor[(15, 2, 10), float32], Tensor[(300), float32], Tensor[(192), float64], Tensor[(378), uint8]) {
  %456 = @func_7637() /* ty=(Tensor[(6, 12, 2), uint8], Tensor[(6, 12, 2), int32]) */;
  %457 = @func_7805() /* ty=(Tensor[(6, 12, 2), uint8],) */;
  %458 = cast(meta[relay.Constant][33] /* ty=Tensor[(300), float32] */, dtype="float32") /* ty=Tensor[(300), float32] */;
  %459 = cast(%var_11928, dtype="float64") /* ty=Tensor[(192), float64] */;
  %460 = cast(meta[relay.Constant][34] /* ty=Tensor[(378), uint8] */, dtype="uint8") /* ty=Tensor[(378), uint8] */;
  %461 = reshape(%458, newshape=[15, 2, 10]) /* ty=Tensor[(15, 2, 10), float32] */;
  %462 = reshape(%459, newshape=[48, 4]) /* ty=Tensor[(48, 4), float64] */;
  %463 = reshape(%460, newshape=[126, 3]) /* ty=Tensor[(126, 3), uint8] */;
  %464 = @func_4826(%461, %462, %463) /* ty=(Tensor[(15, 2, 10), float32], Tensor[(3, 4, 16), float64], Tensor[(48, 4), float64], Tensor[(60), uint16], Tensor[(3, 2, 10), int32], Tensor[(126, 3), uint8], Tensor[(11, 8, 16), float64], Tensor[(1408), int8], Tensor[(3, 2, 10), float32], Tensor[(3, 2, 10), int32], Tensor[(756), int8], Tensor[(1408), int8], Tensor[(140), float32]) */;
  %465 = %456.0;
  %466 = %457.0;
  %467 = %464.0;
  (%465, %466, %467, meta[relay.Constant][33] /* ty=Tensor[(300), float32] */, %var_11928, meta[relay.Constant][34] /* ty=Tensor[(378), uint8] */)
}

def @func_7748(%var_7679: Tensor[(13, 10, 10), uint16], %var_7680: Tensor[(13, 10, 10), uint16], %var_7685: int8) -> (Tensor[(13, 10, 10), uint16], int8, Tensor[(6, 12, 2), int32], Tensor[(1, 3, 11), float32], Tensor[(1408), int8], Tensor[(5, 28), float32]) {
  %468 = cast(%var_7680, dtype="uint16") /* ty=Tensor[(13, 10, 10), uint16] */;
  %469 = shape_of(%var_7679, dtype="int32") /* ty=Tensor[(3), int32] */;
  %470 = cast(%var_7679, dtype="uint16") /* ty=Tensor[(13, 10, 10), uint16] */;
  %471 = dyn.reshape(%468, %469, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %472 = cast(%var_7685, dtype="int8") /* ty=int8 */;
  %473 = reshape(%472, newshape=[]) /* ty=int8 */;
  %474 = @func_5457(%473) /* ty=Tensor[(1, 3, 11), int8] */;
  %475 = cast(%474, dtype="float64") /* ty=Tensor[(1, 3, 11), float64] */;
  %476 = rsqrt(%475) /* ty=Tensor[(1, 3, 11), float64] */;
  %477 = cast(%476, dtype="float32") /* ty=Tensor[(1, 3, 11), float32] */;
  %478 = cast(meta[relay.Constant][35] /* ty=Tensor[(5, 28), float32] */, dtype="float32") /* ty=Tensor[(5, 28), float32] */;
  %479 = cast(meta[relay.Constant][35] /* ty=Tensor[(5, 28), float32] */, dtype="float32") /* ty=Tensor[(5, 28), float32] */;
  %480 = reshape(%478, newshape=[4, 5, 7]) /* ty=Tensor[(4, 5, 7), float32] */;
  %481 = reshape(%479, newshape=[4, 5, 7]) /* ty=Tensor[(4, 5, 7), float32] */;
  %482 = @func_1954(%480, %481) /* ty=(Tensor[(4, 5, 7), float32], Tensor[(4, 5, 7), float64], Tensor[(2, 96), float64], Tensor[(1408), int8]) */;
  %483 = bitwise_xor(%470, %471) /* ty=Tensor[(13, 10, 10), uint16] */;
  %484 = @func_7406() /* ty=Tensor[(6, 12, 2), int32] */;
  %485 = atanh(%477) /* ty=Tensor[(1, 3, 11), float32] */;
  %486 = %482.3;
  (%483, %var_7685, %484, %485, %486, meta[relay.Constant][35] /* ty=Tensor[(5, 28), float32] */)
}

def @func_8465(%var_8457: Tensor[(7, 4, 3), float32]) -> (Tensor[(7, 4, 3), float32],) {
  %487 = cast(%var_8457, dtype="float32") /* ty=Tensor[(7, 4, 3), float32] */;
  %488 = cos(%487) /* ty=Tensor[(7, 4, 3), float32] */;
  %489 = cast(%488, dtype="float32") /* ty=Tensor[(7, 4, 3), float32] */;
  %490 = acosh(%489) /* ty=Tensor[(7, 4, 3), float32] */;
  (%490,)
}

def @func_11631() -> (Tensor[(6, 12, 2), int32],) {
  %491 = @func_9298() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */;
  %492 = %491.1;
  (%492,)
}

def @func_8109(%var_8090: Tensor[(3, 84), float64]) -> (Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32], Tensor[(192), float64], Tensor[(5, 42), float64], Tensor[(378, 2), int8], Tensor[(3, 84), float64]) {
  %493 = @func_6551() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */;
  %494 = cast(meta[relay.Constant][36] /* ty=Tensor[(5, 42), float64] */, dtype="float64") /* ty=Tensor[(5, 42), float64] */;
  %495 = cast(meta[relay.Constant][37] /* ty=Tensor[(378, 2), int8] */, dtype="int8") /* ty=Tensor[(378, 2), int8] */;
  %496 = cast(%var_8090, dtype="float64") /* ty=Tensor[(3, 84), float64] */;
  %497 = reshape(%494, newshape=[14, 15, 1]) /* ty=Tensor[(14, 15, 1), float64] */;
  %498 = reshape(%495, newshape=[9, 84]) /* ty=Tensor[(9, 84), int8] */;
  %499 = reshape(%496, newshape=[252]) /* ty=Tensor[(252), float64] */;
  %500 = @func_6765(%497, %498, %499) /* ty=(Tensor[(14, 15, 1), float64], Tensor[(9, 84), int8], Tensor[(1, 784), uint32], Tensor[(15, 4), int32], Tensor[(9, 84), int8], Tensor[(192), float64], Tensor[(252), float64], Tensor[(378), uint8], Tensor[(6, 12, 2), int32]) */;
  %501 = @func_7551() /* ty=Tensor[(6, 12, 2), int32] */;
  %502 = %493.1;
  %503 = %500.5;
  (%501, %502, %503, meta[relay.Constant][36] /* ty=Tensor[(5, 42), float64] */, meta[relay.Constant][37] /* ty=Tensor[(378, 2), int8] */, %var_8090)
}

def @func_14013() -> (Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) {
  %504 = @func_5899() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %505 = @func_7406() /* ty=Tensor[(6, 12, 2), int32] */;
  %506 = %504.0;
  (%505, %506)
}

def @func_4677(%var_4663: Tensor[(3, 2, 10), uint16]) -> (Tensor[(3, 2, 10), uint16],) {
  %507 = cast(meta[relay.Constant][38] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %508 = cast(%var_4663, dtype="uint16") /* ty=Tensor[(3, 2, 10), uint16] */;
  %509 = left_shift(%507, %508) /* ty=Tensor[(3, 2, 10), uint16] */;
  (%509,)
}

def @func_6706(%var_6697: Tensor[(12, 1, 5), float32], %var_6698: Tensor[(12, 7, 5), float32]) -> Tensor[(12, 7, 5), float32] {
  %510 = cast(%var_6697, dtype="float32") /* ty=Tensor[(12, 1, 5), float32] */;
  %511 = cast(%var_6698, dtype="float32") /* ty=Tensor[(12, 7, 5), float32] */;
  floor_mod(%510, %511) /* ty=Tensor[(12, 7, 5), float32] */
}

def @func_2095(%var_2060: Tensor[(9, 4, 7), float64], %var_2068: Tensor[(756), int8]) -> (Tensor[(60), int32], Tensor[(756), int8], Tensor[(9, 4, 7), bool]) {
  %512 = cast(%var_2068, dtype="int8") /* ty=Tensor[(756), int8] */;
  %513 = cast(%var_2068, dtype="int8") /* ty=Tensor[(756), int8] */;
  %514 = reshape(%512, newshape=[7, 12, 9]) /* ty=Tensor[(7, 12, 9), int8] */;
  %515 = reshape(%513, newshape=[7, 12, 9]) /* ty=Tensor[(7, 12, 9), int8] */;
  %516 = @func_1789(%514, %515) /* ty=(Tensor[(7, 12, 9), int8], Tensor[(3, 2, 10), int32], Tensor[(378), uint8], Tensor[(60), int32]) */;
  %517 = cast(%var_2060, dtype="float64") /* ty=Tensor[(9, 4, 7), float64] */;
  %518 = acosh(%517) /* ty=Tensor[(9, 4, 7), float64] */;
  %519 = cast(%var_2060, dtype="bool") /* ty=Tensor[(9, 4, 7), bool] */;
  %520 = shape_of(%518, dtype="int32") /* ty=Tensor[(3), int32] */;
  %521 = cast(%518, dtype="bool") /* ty=Tensor[(9, 4, 7), bool] */;
  %522 = dyn.reshape(%519, %520, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %523 = %516.3;
  %524 = less(%521, %522) /* ty=Tensor[(9, 4, 7), bool] */;
  (%523, %var_2068, %524)
}

def @func_7551() -> Tensor[(6, 12, 2), int32] {
  @func_5512() /* ty=Tensor[(6, 12, 2), int32] */
}

def @func_7364(%var_7322: Tensor[(18, 42), int8]) -> (Tensor[(6, 12, 2), int32], Tensor[(9, 3, 13), bool], Tensor[(351), bool], Tensor[(18, 42), int8]) {
  %525 = @func_6154() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %526 = cast(meta[relay.Constant][39] /* ty=Tensor[(351), bool] */, dtype="bool") /* ty=Tensor[(351), bool] */;
  %527 = cast(%var_7322, dtype="int8") /* ty=Tensor[(18, 42), int8] */;
  %528 = reshape(%526, newshape=[9, 3, 13]) /* ty=Tensor[(9, 3, 13), bool] */;
  %529 = reshape(%527, newshape=[756]) /* ty=Tensor[(756), int8] */;
  %530 = @func_6808(%528, %529) /* ty=(Tensor[(9, 3, 13), bool], Tensor[(3, 2, 10), int32], Tensor[(756), int8]) */;
  %531 = %525.0;
  %532 = %530.0;
  (%531, %532, meta[relay.Constant][39] /* ty=Tensor[(351), bool] */, %var_7322)
}

def @func_12376(%var_12342: Tensor[(12, 16, 14), float32]) -> (Tensor[(6, 12, 2), int32], Tensor[(12, 16, 14), float64]) {
  %533 = @func_10387() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %534 = cast(%var_12342, dtype="float32") /* ty=Tensor[(12, 16, 14), float32] */;
  %535 = sigmoid(%534) /* ty=Tensor[(12, 16, 14), float32] */;
  %536 = cast(%535, dtype="float64") /* ty=Tensor[(12, 16, 14), float64] */;
  %537 = %533.0;
  %538 = acosh(%536) /* ty=Tensor[(12, 16, 14), float64] */;
  (%537, %538)
}

def @func_9010(%var_8968: Tensor[(9, 84), int8]) -> (Tensor[(6, 12, 2), uint32], Tensor[(7, 12, 9), int8], Tensor[(9, 84), int8], Tensor[(15, 12, 4), float32], Tensor[(720), float64], Tensor[(18, 42), float64]) {
  %539 = @func_5512() /* ty=Tensor[(6, 12, 2), int32] */;
  %540 = cast(meta[relay.Constant][40] /* ty=Tensor[(6, 12, 2), int32] */, dtype="uint32") /* ty=Tensor[(6, 12, 2), uint32] */;
  %541 = shape_of(%539, dtype="int32") /* ty=Tensor[(3), int32] */;
  %542 = cast(%539, dtype="uint32") /* ty=Tensor[(6, 12, 2), uint32] */;
  %543 = dyn.reshape(%540, %541, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %544 = cast(%var_8968, dtype="int8") /* ty=Tensor[(9, 84), int8] */;
  %545 = cast(%var_8968, dtype="int8") /* ty=Tensor[(9, 84), int8] */;
  %546 = reshape(%544, newshape=[7, 12, 9]) /* ty=Tensor[(7, 12, 9), int8] */;
  %547 = reshape(%545, newshape=[7, 12, 9]) /* ty=Tensor[(7, 12, 9), int8] */;
  %548 = @func_1789(%546, %547) /* ty=(Tensor[(7, 12, 9), int8], Tensor[(3, 2, 10), int32], Tensor[(378), uint8], Tensor[(60), int32]) */;
  %549 = cast(meta[relay.Constant][41] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
  %550 = reshape(%549, newshape=[15, 12, 4]) /* ty=Tensor[(15, 12, 4), float64] */;
  %551 = @func_3057(%550) /* ty=(Tensor[(15, 12, 4), float64], Tensor[(15, 12, 4), float32]) */;
  %552 = cast(%var_8968, dtype="int8") /* ty=Tensor[(9, 84), int8] */;
  %553 = reshape(%552, newshape=[18, 42]) /* ty=Tensor[(18, 42), int8] */;
  %554 = @func_7364(%553) /* ty=(Tensor[(6, 12, 2), int32], Tensor[(9, 3, 13), bool], Tensor[(351), bool], Tensor[(18, 42), int8]) */;
  %555 = %554.3;
  %556 = cast(%555, dtype="float64") /* ty=Tensor[(18, 42), float64] */;
  %557 = logical_xor(%542, %543) /* ty=Tensor[(6, 12, 2), uint32] */;
  %558 = %548.0;
  %559 = %551.1;
  %560 = asinh(%556) /* ty=Tensor[(18, 42), float64] */;
  (%557, %558, %var_8968, %559, meta[relay.Constant][41] /* ty=Tensor[(720), float64] */, %560)
}

def @func_1954(%var_1938: Tensor[(4, 5, 7), float32], %var_1939: Tensor[(4, 5, 7), float32]) -> (Tensor[(4, 5, 7), float32], Tensor[(4, 5, 7), float64], Tensor[(2, 96), float64], Tensor[(1408), int8]) {
  %561 = cast(%var_1939, dtype="float32") /* ty=Tensor[(4, 5, 7), float32] */;
  %562 = shape_of(%var_1938, dtype="int32") /* ty=Tensor[(3), int32] */;
  %563 = cast(%var_1938, dtype="float32") /* ty=Tensor[(4, 5, 7), float32] */;
  %564 = dyn.reshape(%561, %562, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %565 = cast(%var_1939, dtype="float64") /* ty=Tensor[(4, 5, 7), float64] */;
  %566 = shape_of(%var_1938, dtype="int32") /* ty=Tensor[(3), int32] */;
  %567 = cast(%var_1938, dtype="float64") /* ty=Tensor[(4, 5, 7), float64] */;
  %568 = dyn.reshape(%565, %566, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %569 = cast(meta[relay.Constant][42] /* ty=Tensor[(1408), int8] */, dtype="int8") /* ty=Tensor[(1408), int8] */;
  %570 = cast(meta[relay.Constant][42] /* ty=Tensor[(1408), int8] */, dtype="int8") /* ty=Tensor[(1408), int8] */;
  %571 = reshape(%569, newshape=[11, 8, 16]) /* ty=Tensor[(11, 8, 16), int8] */;
  %572 = reshape(%570, newshape=[11, 8, 16]) /* ty=Tensor[(11, 8, 16), int8] */;
  %573 = @func_1356(%571, %572) /* ty=(Tensor[(11, 8, 16), int8], Tensor[(11, 8, 16), float64], Tensor[(3, 4, 16), float64], Tensor[(2, 96), float64]) */;
  %574 = power(%563, %564) /* ty=Tensor[(4, 5, 7), float32] */;
  %575 = floor_mod(%567, %568) /* ty=Tensor[(4, 5, 7), float64] */;
  %576 = %573.3;
  (%574, %575, %576, meta[relay.Constant][42] /* ty=Tensor[(1408), int8] */)
}

def @func_4826(%var_4761: Tensor[(15, 2, 10), float32], %var_4777: Tensor[(48, 4), float64], %var_4793: Tensor[(126, 3), uint8]) -> (Tensor[(15, 2, 10), float32], Tensor[(3, 4, 16), float64], Tensor[(48, 4), float64], Tensor[(60), uint16], Tensor[(3, 2, 10), int32], Tensor[(126, 3), uint8], Tensor[(11, 8, 16), float64], Tensor[(1408), int8], Tensor[(3, 2, 10), float32], Tensor[(3, 2, 10), int32], Tensor[(756), int8], Tensor[(1408), int8], Tensor[(140), float32]) {
  %577 = cast(%var_4761, dtype="float32") /* ty=Tensor[(15, 2, 10), float32] */;
  %578 = cast(%var_4777, dtype="float64") /* ty=Tensor[(48, 4), float64] */;
  %579 = reshape(%578, newshape=[3, 4, 16]) /* ty=Tensor[(3, 4, 16), float64] */;
  %580 = cast(%var_4793, dtype="uint8") /* ty=Tensor[(126, 3), uint8] */;
  %581 = cast(meta[relay.Constant][43] /* ty=Tensor[(60), uint16] */, dtype="int32") /* ty=Tensor[(60), int32] */;
  %582 = reshape(%580, newshape=[3, 9, 14]) /* ty=Tensor[(3, 9, 14), uint8] */;
  %583 = reshape(%581, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), int32] */;
  %584 = @func_206(%582, %583) /* ty=(Tensor[(60), int32], Tensor[(3, 2, 10), bool], Tensor[(3, 2, 10), int32], Tensor[(3, 9, 14), float64], Tensor[(3, 2, 10), int32]) */;
  %585 = cast(meta[relay.Constant][44] /* ty=Tensor[(1408), int8] */, dtype="int8") /* ty=Tensor[(1408), int8] */;
  %586 = cast(meta[relay.Constant][44] /* ty=Tensor[(1408), int8] */, dtype="int8") /* ty=Tensor[(1408), int8] */;
  %587 = reshape(%585, newshape=[11, 8, 16]) /* ty=Tensor[(11, 8, 16), int8] */;
  %588 = reshape(%586, newshape=[11, 8, 16]) /* ty=Tensor[(11, 8, 16), int8] */;
  %589 = @func_1356(%587, %588) /* ty=(Tensor[(11, 8, 16), int8], Tensor[(11, 8, 16), float64], Tensor[(3, 4, 16), float64], Tensor[(2, 96), float64]) */;
  %590 = cast(meta[relay.Constant][43] /* ty=Tensor[(60), uint16] */, dtype="uint16") /* ty=Tensor[(60), uint16] */;
  %591 = reshape(%590, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), uint16] */;
  %592 = @func_4677(%591) /* ty=(Tensor[(3, 2, 10), uint16],) */;
  %593 = %592.0;
  %594 = cast(%593, dtype="float32") /* ty=Tensor[(3, 2, 10), float32] */;
  %595 = cast(meta[relay.Constant][45] /* ty=Tensor[(756), int8] */, dtype="int8") /* ty=Tensor[(756), int8] */;
  %596 = cast(meta[relay.Constant][45] /* ty=Tensor[(756), int8] */, dtype="int8") /* ty=Tensor[(756), int8] */;
  %597 = reshape(%595, newshape=[7, 12, 9]) /* ty=Tensor[(7, 12, 9), int8] */;
  %598 = reshape(%596, newshape=[7, 12, 9]) /* ty=Tensor[(7, 12, 9), int8] */;
  %599 = @func_1789(%597, %598) /* ty=(Tensor[(7, 12, 9), int8], Tensor[(3, 2, 10), int32], Tensor[(378), uint8], Tensor[(60), int32]) */;
  %600 = cast(meta[relay.Constant][46] /* ty=Tensor[(140), float32] */, dtype="float32") /* ty=Tensor[(140), float32] */;
  %601 = cast(meta[relay.Constant][46] /* ty=Tensor[(140), float32] */, dtype="float32") /* ty=Tensor[(140), float32] */;
  %602 = reshape(%600, newshape=[4, 5, 7]) /* ty=Tensor[(4, 5, 7), float32] */;
  %603 = reshape(%601, newshape=[4, 5, 7]) /* ty=Tensor[(4, 5, 7), float32] */;
  %604 = @func_1954(%602, %603) /* ty=(Tensor[(4, 5, 7), float32], Tensor[(4, 5, 7), float64], Tensor[(2, 96), float64], Tensor[(1408), int8]) */;
  %605 = atanh(%577) /* ty=Tensor[(15, 2, 10), float32] */;
  %606 = @func_1144(%579) /* ty=Tensor[(3, 4, 16), float64] */;
  %607 = %584.2;
  %608 = %589.1;
  %609 = acosh(%594) /* ty=Tensor[(3, 2, 10), float32] */;
  %610 = %599.1;
  %611 = %604.3;
  (%605, %606, %var_4777, meta[relay.Constant][43] /* ty=Tensor[(60), uint16] */, %607, %var_4793, %608, meta[relay.Constant][44] /* ty=Tensor[(1408), int8] */, %609, %610, meta[relay.Constant][45] /* ty=Tensor[(756), int8] */, %611, meta[relay.Constant][46] /* ty=Tensor[(140), float32] */)
}

def @func_5659() -> (Tensor[(6, 12, 2), int32],) {
  %612 = @func_5648() /* ty=Tensor[(6, 12, 2), int32] */;
  (%612,)
}

def @func_7836(%var_7819: Tensor[(1, 3, 3), float32]) -> Tensor[(1, 3, 3), float32] {
  %613 = cast(%var_7819, dtype="float32") /* ty=Tensor[(1, 3, 3), float32] */;
  %614 = sigmoid(%613) /* ty=Tensor[(1, 3, 3), float32] */;
  %615 = cast(%614, dtype="float32") /* ty=Tensor[(1, 3, 3), float32] */;
  erf(%615) /* ty=Tensor[(1, 3, 3), float32] */
}

def @func_13167() -> Tensor[(6, 12, 2), int32] {
  %616 = @func_7441() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %616.0
}

def @func_12224() -> (Tensor[(6, 12, 2), int32],) {
  %617 = @func_9298() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */;
  %618 = %617.1;
  (%618,)
}

def @func_11211(%var_11206: Tensor[(192), float64], %var_11208: Tensor[(300), float32]) -> (Tensor[(756), int8], Tensor[(6, 12, 2), int32], Tensor[(480), float32], Tensor[(192), float64], Tensor[(1, 176), float32], Tensor[(300), float32]) {
  %619 = @func_10174() /* ty=(Tensor[(756), int8],) */;
  %620 = cast(meta[relay.Constant][47] /* ty=Tensor[(480), float32] */, dtype="float32") /* ty=Tensor[(480), float32] */;
  %621 = cast(meta[relay.Constant][47] /* ty=Tensor[(480), float32] */, dtype="float32") /* ty=Tensor[(480), float32] */;
  %622 = cast(%var_11206, dtype="float64") /* ty=Tensor[(192), float64] */;
  %623 = cast(meta[relay.Constant][48] /* ty=Tensor[(1, 176), float32] */, dtype="float32") /* ty=Tensor[(1, 176), float32] */;
  %624 = cast(meta[relay.Constant][48] /* ty=Tensor[(1, 176), float32] */, dtype="float32") /* ty=Tensor[(1, 176), float32] */;
  %625 = cast(%var_11208, dtype="float32") /* ty=Tensor[(300), float32] */;
  %626 = reshape(%620, newshape=[5, 12, 8]) /* ty=Tensor[(5, 12, 8), float32] */;
  %627 = reshape(%621, newshape=[5, 12, 8]) /* ty=Tensor[(5, 12, 8), float32] */;
  %628 = reshape(%622, newshape=[96, 2]) /* ty=Tensor[(96, 2), float64] */;
  %629 = reshape(%623, newshape=[4, 44]) /* ty=Tensor[(4, 44), float32] */;
  %630 = reshape(%624, newshape=[4, 44]) /* ty=Tensor[(4, 44), float32] */;
  %631 = reshape(%625, newshape=[300]) /* ty=Tensor[(300), float32] */;
  %632 = @func_5882(%626, %627, %628, %629, %630, %631) /* ty=(Tensor[(5, 12, 8), float32], Tensor[(3, 4, 16), float64], Tensor[(96, 2), float64], Tensor[(6, 12, 2), int32], Tensor[(4, 44), int64], Tensor[(3, 2, 10), float32], Tensor[(300), float32], Tensor[(378), uint8], Tensor[(16, 1, 11), float32]) */;
  %633 = %619.0;
  %634 = %632.3;
  (%633, %634, meta[relay.Constant][47] /* ty=Tensor[(480), float32] */, %var_11206, meta[relay.Constant][48] /* ty=Tensor[(1, 176), float32] */, %var_11208)
}

def @func_7507() -> (Tensor[(6, 12, 2), uint8],) {
  %635 = @func_7406() /* ty=Tensor[(6, 12, 2), int32] */;
  %636 = cast(meta[relay.Constant][49] /* ty=Tensor[(6, 12, 2), int32] */, dtype="uint8") /* ty=Tensor[(6, 12, 2), uint8] */;
  %637 = shape_of(%635, dtype="int32") /* ty=Tensor[(3), int32] */;
  %638 = cast(%635, dtype="uint8") /* ty=Tensor[(6, 12, 2), uint8] */;
  %639 = dyn.reshape(%636, %637, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %640 = add(%638, %639) /* ty=Tensor[(6, 12, 2), uint8] */;
  (%640,)
}

def @func_6765(%var_6738: Tensor[(14, 15, 1), float64], %var_6753: Tensor[(9, 84), int8], %var_6755: Tensor[(252), float64]) -> (Tensor[(14, 15, 1), float64], Tensor[(9, 84), int8], Tensor[(1, 784), uint32], Tensor[(15, 4), int32], Tensor[(9, 84), int8], Tensor[(192), float64], Tensor[(252), float64], Tensor[(378), uint8], Tensor[(6, 12, 2), int32]) {
  %641 = cast(%var_6738, dtype="float64") /* ty=Tensor[(14, 15, 1), float64] */;
  %642 = cast(meta[relay.Constant][50] /* ty=Tensor[(1, 784), uint32] */, dtype="uint32") /* ty=Tensor[(1, 784), uint32] */;
  %643 = cast(meta[relay.Constant][50] /* ty=Tensor[(1, 784), uint32] */, dtype="uint32") /* ty=Tensor[(1, 784), uint32] */;
  %644 = cast(meta[relay.Constant][51] /* ty=Tensor[(15, 4), int32] */, dtype="int32") /* ty=Tensor[(15, 4), int32] */;
  %645 = cast(%var_6753, dtype="int8") /* ty=Tensor[(9, 84), int8] */;
  %646 = cast(meta[relay.Constant][52] /* ty=Tensor[(192), float64] */, dtype="float64") /* ty=Tensor[(192), float64] */;
  %647 = cast(%var_6755, dtype="float64") /* ty=Tensor[(252), float64] */;
  %648 = cast(meta[relay.Constant][53] /* ty=Tensor[(378), uint8] */, dtype="uint8") /* ty=Tensor[(378), uint8] */;
  %649 = reshape(%642, newshape=[8, 7, 14]) /* ty=Tensor[(8, 7, 14), uint32] */;
  %650 = reshape(%643, newshape=[8, 7, 14]) /* ty=Tensor[(8, 7, 14), uint32] */;
  %651 = reshape(%644, newshape=[60]) /* ty=Tensor[(60), int32] */;
  %652 = reshape(%645, newshape=[9, 84]) /* ty=Tensor[(9, 84), int8] */;
  %653 = reshape(%646, newshape=[24, 8]) /* ty=Tensor[(24, 8), float64] */;
  %654 = reshape(%647, newshape=[1, 252]) /* ty=Tensor[(1, 252), float64] */;
  %655 = reshape(%648, newshape=[378]) /* ty=Tensor[(378), uint8] */;
  %656 = @func_2765(%649, %650, %651, %652, %653, %654, %655) /* ty=(Tensor[(60), int32], Tensor[(288), int8], Tensor[(112), bool], Tensor[(60), int32], Tensor[(8, 7, 14), float64], Tensor[(3, 2, 10), int32], Tensor[(9, 84), int8], Tensor[(3, 4, 16), float64], Tensor[(24, 8), float64], Tensor[(3, 4, 16), float64], Tensor[(60), int32], Tensor[(1, 252), float64], Tensor[(3, 2, 10), int32], Tensor[(378), uint8], Tensor[(60), int32], int16, Tensor[(16, 7, ?), uint64], Tensor[(11, 8, 16), int8], Tensor[(2, 704), int8]) */;
  %657 = @func_5659() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %658 = sin(%641) /* ty=Tensor[(14, 15, 1), float64] */;
  %659 = %656.6;
  %660 = %657.0;
  (%658, %659, meta[relay.Constant][50] /* ty=Tensor[(1, 784), uint32] */, meta[relay.Constant][51] /* ty=Tensor[(15, 4), int32] */, %var_6753, meta[relay.Constant][52] /* ty=Tensor[(192), float64] */, %var_6755, meta[relay.Constant][53] /* ty=Tensor[(378), uint8] */, %660)
}

def @func_1356(%var_1314: Tensor[(11, 8, 16), int8], %var_1315: Tensor[(11, 8, 16), int8]) -> (Tensor[(11, 8, 16), int8], Tensor[(11, 8, 16), float64], Tensor[(3, 4, 16), float64], Tensor[(2, 96), float64]) {
  %661 = cast(%var_1315, dtype="int8") /* ty=Tensor[(11, 8, 16), int8] */;
  %662 = shape_of(%var_1314, dtype="int32") /* ty=Tensor[(3), int32] */;
  %663 = cast(%var_1314, dtype="int8") /* ty=Tensor[(11, 8, 16), int8] */;
  %664 = dyn.reshape(%661, %662, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %665 = cast(%var_1314, dtype="float64") /* ty=Tensor[(11, 8, 16), float64] */;
  %666 = cast(meta[relay.Constant][54] /* ty=Tensor[(2, 96), float64] */, dtype="float64") /* ty=Tensor[(2, 96), float64] */;
  %667 = reshape(%666, newshape=[3, 4, 16]) /* ty=Tensor[(3, 4, 16), float64] */;
  %668 = bitwise_xor(%663, %664) /* ty=Tensor[(11, 8, 16), int8] */;
  %669 = rsqrt(%665) /* ty=Tensor[(11, 8, 16), float64] */;
  %670 = @func_1144(%667) /* ty=Tensor[(3, 4, 16), float64] */;
  (%668, %669, %670, meta[relay.Constant][54] /* ty=Tensor[(2, 96), float64] */)
}

def @func_9461() -> Tensor[(6, 12, 2), int32] {
  %671 = @func_5659() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %671.0
}

def @func_8677() -> (Tensor[(6, 12, 2), int32],) {
  %672 = @func_7084() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */;
  %673 = %672.1;
  (%673,)
}

def @func_12262() -> Tensor[(112), bool] {
  %674 = @func_6644() /* ty=(Tensor[(6, 12, 2), float32], Tensor[(16, 7, ?), uint64], Tensor[(112), bool]) */;
  %674.2
}

def @func_14533(%var_14497: Tensor[(378), uint8]) -> (Tensor[(6, 12, 2), int32], Tensor[(378), uint8], Tensor[(378), uint8], Tensor[(60), int32], Tensor[(6, 12, 2), int32]) {
  %675 = @func_10387() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %676 = cast(%var_14497, dtype="uint8") /* ty=Tensor[(378), uint8] */;
  %677 = cast(meta[relay.Constant][55] /* ty=Tensor[(60), int32] */, dtype="int32") /* ty=Tensor[(60), int32] */;
  %678 = reshape(%676, newshape=[378]) /* ty=Tensor[(378), uint8] */;
  %679 = reshape(%677, newshape=[60]) /* ty=Tensor[(60), int32] */;
  %680 = @func_13505(%678, %679) /* ty=(Tensor[(6, 12, 2), int32], Tensor[(60), int32], Tensor[(378), uint8], Tensor[(60), int32], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */;
  %681 = @func_5899() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %682 = %675.0;
  %683 = %680.2;
  %684 = %681.0;
  (%682, %683, %var_14497, meta[relay.Constant][55] /* ty=Tensor[(60), int32] */, %684)
}

def @func_7912(%var_7902: Tensor[(6, 12, 2), uint8]) -> (Tensor[(6, 12, 2), float32], Tensor[(6, 12, 2), float32]) {
  %685 = @func_7805() /* ty=(Tensor[(6, 12, 2), uint8],) */;
  %686 = %685.0;
  %687 = cast(%var_7902, dtype="float32") /* ty=Tensor[(6, 12, 2), float32] */;
  %688 = shape_of(%686, dtype="int32") /* ty=Tensor[(3), int32] */;
  %689 = cast(%686, dtype="float32") /* ty=Tensor[(6, 12, 2), float32] */;
  %690 = dyn.reshape(%687, %688, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %691 = cast(%686, dtype="float32") /* ty=Tensor[(6, 12, 2), float32] */;
  %692 = power(%689, %690) /* ty=Tensor[(6, 12, 2), float32] */;
  %693 = sigmoid(%691) /* ty=Tensor[(6, 12, 2), float32] */;
  (%692, %693)
}

def @func_12411() -> (Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) {
  %694 = @func_10863() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %695 = @func_8053() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %696 = %694.0;
  %697 = %695.0;
  (%696, %697)
}

def @func_1789(%var_1768: Tensor[(7, 12, 9), int8], %var_1769: Tensor[(7, 12, 9), int8]) -> (Tensor[(7, 12, 9), int8], Tensor[(3, 2, 10), int32], Tensor[(378), uint8], Tensor[(60), int32]) {
  %698 = cast(%var_1769, dtype="int8") /* ty=Tensor[(7, 12, 9), int8] */;
  %699 = shape_of(%var_1768, dtype="int32") /* ty=Tensor[(3), int32] */;
  %700 = cast(%var_1768, dtype="int8") /* ty=Tensor[(7, 12, 9), int8] */;
  %701 = dyn.reshape(%698, %699, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %702 = cast(meta[relay.Constant][56] /* ty=Tensor[(378), uint8] */, dtype="uint8") /* ty=Tensor[(378), uint8] */;
  %703 = cast(meta[relay.Constant][57] /* ty=Tensor[(60), int32] */, dtype="int32") /* ty=Tensor[(60), int32] */;
  %704 = reshape(%702, newshape=[3, 9, 14]) /* ty=Tensor[(3, 9, 14), uint8] */;
  %705 = reshape(%703, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), int32] */;
  %706 = @func_206(%704, %705) /* ty=(Tensor[(60), int32], Tensor[(3, 2, 10), bool], Tensor[(3, 2, 10), int32], Tensor[(3, 9, 14), float64], Tensor[(3, 2, 10), int32]) */;
  %707 = bitwise_xor(%700, %701) /* ty=Tensor[(7, 12, 9), int8] */;
  %708 = %706.4;
  (%707, %708, meta[relay.Constant][56] /* ty=Tensor[(378), uint8] */, meta[relay.Constant][57] /* ty=Tensor[(60), int32] */)
}

def @func_8593(%var_8508: Tensor[(6, 12, 2), int32], %var_8542: Tensor[(252), float64], %var_8588: Tensor[(720), float64]) -> (Tensor[(6, 12, 2), float32], Tensor[(60), int32], Tensor[(252), float64], Tensor[(54, 14), int8], Tensor[(6, 12, 2), int32], Tensor[(15, 12, 4), float32], Tensor[(720), float64]) {
  %709 = @func_7941() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %710 = %709.0;
  %711 = cast(%var_8508, dtype="float32") /* ty=Tensor[(6, 12, 2), float32] */;
  %712 = shape_of(%710, dtype="int32") /* ty=Tensor[(3), int32] */;
  %713 = cast(%710, dtype="float32") /* ty=Tensor[(6, 12, 2), float32] */;
  %714 = dyn.reshape(%711, %712, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %715 = cast(%var_8542, dtype="float64") /* ty=Tensor[(252), float64] */;
  %716 = cast(meta[relay.Constant][58] /* ty=Tensor[(54, 14), int8] */, dtype="int8") /* ty=Tensor[(54, 14), int8] */;
  %717 = reshape(%715, newshape=[9, 4, 7]) /* ty=Tensor[(9, 4, 7), float64] */;
  %718 = reshape(%716, newshape=[756]) /* ty=Tensor[(756), int8] */;
  %719 = @func_2095(%717, %718) /* ty=(Tensor[(60), int32], Tensor[(756), int8], Tensor[(9, 4, 7), bool]) */;
  %720 = cast(%var_8588, dtype="float64") /* ty=Tensor[(720), float64] */;
  %721 = reshape(%720, newshape=[15, 12, 4]) /* ty=Tensor[(15, 12, 4), float64] */;
  %722 = @func_3057(%721) /* ty=(Tensor[(15, 12, 4), float64], Tensor[(15, 12, 4), float32]) */;
  %723 = floor_mod(%713, %714) /* ty=Tensor[(6, 12, 2), float32] */;
  %724 = %719.0;
  %725 = @func_5512() /* ty=Tensor[(6, 12, 2), int32] */;
  %726 = %722.1;
  (%723, %724, %var_8542, meta[relay.Constant][58] /* ty=Tensor[(54, 14), int8] */, %725, %726, %var_8588)
}

def @func_9727() -> Tensor[(6, 12, 2), int32] {
  @func_7551() /* ty=Tensor[(6, 12, 2), int32] */
}

def @func_10131() -> (Tensor[(6, 12, 2), int32], Tensor[(756), int8], Tensor[(6, 12, 2), int32], Tensor[(9, 3, 13), float32], Tensor[(6, 12, 2), int32]) {
  %727 = cast(meta[relay.Constant][59] /* ty=Tensor[(756), int8] */, dtype="int8") /* ty=Tensor[(756), int8] */;
  %728 = reshape(%727, newshape=[756]) /* ty=Tensor[(756), int8] */;
  %729 = @func_7610(%728) /* ty=(Tensor[(6, 12, 2), float32], Tensor[(9, 3, 13), bool], Tensor[(756), float64]) */;
  %730 = %729.1;
  %731 = cast(%730, dtype="float32") /* ty=Tensor[(9, 3, 13), float32] */;
  %732 = @func_7406() /* ty=Tensor[(6, 12, 2), int32] */;
  %733 = @func_9335() /* ty=Tensor[(6, 12, 2), int32] */;
  %734 = cosh(%731) /* ty=Tensor[(9, 3, 13), float32] */;
  %735 = @func_9461() /* ty=Tensor[(6, 12, 2), int32] */;
  (%732, meta[relay.Constant][59] /* ty=Tensor[(756), int8] */, %733, %734, %735)
}

def @func_13017() -> (Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), uint8]) {
  %736 = @func_9298() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */;
  %737 = @func_7805() /* ty=(Tensor[(6, 12, 2), uint8],) */;
  %738 = %736.1;
  %739 = @func_10997() /* ty=Tensor[(6, 12, 2), int32] */;
  %740 = %737.0;
  (%738, %739, %740)
}

def @func_10807() -> (Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) {
  %741 = @func_7084() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */;
  %742 = @func_7637() /* ty=(Tensor[(6, 12, 2), uint8], Tensor[(6, 12, 2), int32]) */;
  %743 = %741.0;
  %744 = %742.1;
  (%743, %744)
}

def @func_7941() -> (Tensor[(6, 12, 2), int32],) {
  %745 = @func_6551() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */;
  %746 = %745.1;
  (%746,)
}

def @func_5899() -> (Tensor[(6, 12, 2), int32],) {
  %747 = @func_5512() /* ty=Tensor[(6, 12, 2), int32] */;
  (%747,)
}

def @func_11271() -> (Tensor[(6, 12, 2), int32], Tensor[(1300), uint16], int8, Tensor[(16, 1, 11), float32], Tensor[(176), float32], Tensor[(13, 10, 10), float32]) {
  %748 = @func_6551() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */;
  %749 = cast(meta[relay.Constant][62] /* ty=Tensor[(176), float32] */, dtype="float32") /* ty=Tensor[(176), float32] */;
  %750 = reshape(%749, newshape=[16, 1, 11]) /* ty=Tensor[(16, 1, 11), float32] */;
  %751 = @func_5056(%750) /* ty=(Tensor[(16, 1, 11), float32],) */;
  %752 = cast(meta[relay.Constant][60] /* ty=Tensor[(1300), uint16] */, dtype="uint16") /* ty=Tensor[(1300), uint16] */;
  %753 = cast(meta[relay.Constant][60] /* ty=Tensor[(1300), uint16] */, dtype="uint16") /* ty=Tensor[(1300), uint16] */;
  %754 = cast(meta[relay.Constant][61] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %755 = reshape(%752, newshape=[13, 10, 10]) /* ty=Tensor[(13, 10, 10), uint16] */;
  %756 = reshape(%753, newshape=[13, 10, 10]) /* ty=Tensor[(13, 10, 10), uint16] */;
  %757 = reshape(%754, newshape=[]) /* ty=int8 */;
  %758 = @func_7748(%755, %756, %757) /* ty=(Tensor[(13, 10, 10), uint16], int8, Tensor[(6, 12, 2), int32], Tensor[(1, 3, 11), float32], Tensor[(1408), int8], Tensor[(5, 28), float32]) */;
  %759 = %758.0;
  %760 = cast(%759, dtype="float32") /* ty=Tensor[(13, 10, 10), float32] */;
  %761 = %748.1;
  %762 = %751.0;
  %763 = cosh(%760) /* ty=Tensor[(13, 10, 10), float32] */;
  (%761, meta[relay.Constant][60] /* ty=Tensor[(1300), uint16] */, meta[relay.Constant][61] /* ty=int8 */, %762, meta[relay.Constant][62] /* ty=Tensor[(176), float32] */, %763)
}

def @func_13219(%var_13194: Tensor[(60), int32]) -> (Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32], Tensor[(378), uint8], Tensor[(60), int32]) {
  %764 = @func_11461() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */;
  %765 = cast(meta[relay.Constant][63] /* ty=Tensor[(378), uint8] */, dtype="uint8") /* ty=Tensor[(378), uint8] */;
  %766 = cast(%var_13194, dtype="int32") /* ty=Tensor[(60), int32] */;
  %767 = reshape(%765, newshape=[378]) /* ty=Tensor[(378), uint8] */;
  %768 = reshape(%766, newshape=[60, 1]) /* ty=Tensor[(60, 1), int32] */;
  %769 = @func_8245(%767, %768) /* ty=(Tensor[(6, 12, 2), int32], Tensor[(3, 4, 16), float64], Tensor[(192), float64], Tensor[(3, 9, 14), float64], Tensor[(378), uint8], Tensor[(15, 6, 15), float32], Tensor[(60, 1350), bool], Tensor[(3, 2, 10), int32]) */;
  %770 = %764.1;
  %771 = %769.0;
  (%770, %771, meta[relay.Constant][63] /* ty=Tensor[(378), uint8] */, %var_13194)
}

def @func_13394() -> (Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), uint8], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), float32], Tensor[(6, 12, 2), int32]) {
  %772 = @func_6551() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */;
  %773 = @func_7805() /* ty=(Tensor[(6, 12, 2), uint8],) */;
  %774 = @func_6154() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %775 = %774.0;
  %776 = cast(%775, dtype="uint8") /* ty=Tensor[(6, 12, 2), uint8] */;
  %777 = reshape(%776, newshape=[6, 12, 2]) /* ty=Tensor[(6, 12, 2), uint8] */;
  %778 = @func_7912(%777) /* ty=(Tensor[(6, 12, 2), float32], Tensor[(6, 12, 2), float32]) */;
  %779 = %772.1;
  %780 = %773.0;
  %781 = %778.1;
  %782 = @func_13167() /* ty=Tensor[(6, 12, 2), int32] */;
  (%779, %780, %775, %781, %782)
}

def @func_7805() -> (Tensor[(6, 12, 2), uint8],) {
  %783 = @func_7507() /* ty=(Tensor[(6, 12, 2), uint8],) */;
  %784 = %783.0;
  (%784,)
}

def @func_7870() -> (Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) {
  %785 = @func_5512() /* ty=Tensor[(6, 12, 2), int32] */;
  %786 = @func_7162() /* ty=Tensor[(6, 12, 2), int32] */;
  (%785, %786)
}

def @func_12812() -> Tensor[(6, 12, 2), int32] {
  @func_9335() /* ty=Tensor[(6, 12, 2), int32] */
}

def @func_13445(%var_13424: Tensor[(7, 4, 5), float64]) -> (Tensor[(7, 4, 5), float64], Tensor[(6, 12, 2), int32]) {
  %787 = cast(%var_13424, dtype="float64") /* ty=Tensor[(7, 4, 5), float64] */;
  %788 = erf(%787) /* ty=Tensor[(7, 4, 5), float64] */;
  %789 = @func_12193() /* ty=Tensor[(6, 12, 2), int32] */;
  (%788, %789)
}

def @func_12013(%var_11997: Tensor[(64), float32], %var_12001: Tensor[(720), float64], %var_12002: Tensor[(4, 72), int8]) -> (Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32], Tensor[(720), float64], Tensor[(64), float32], Tensor[(60), int32], Tensor[(756), int8], Tensor[(192), float64], Tensor[(720), float64], Tensor[(4, 72), int8], Tensor[(112), bool]) {
  %790 = @func_11786() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %791 = @func_11742() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %792 = cast(%var_11997, dtype="float32") /* ty=Tensor[(64), float32] */;
  %793 = cast(meta[relay.Constant][64] /* ty=Tensor[(60), int32] */, dtype="int32") /* ty=Tensor[(60), int32] */;
  %794 = cast(meta[relay.Constant][65] /* ty=Tensor[(756), int8] */, dtype="int8") /* ty=Tensor[(756), int8] */;
  %795 = cast(meta[relay.Constant][66] /* ty=Tensor[(192), float64] */, dtype="float64") /* ty=Tensor[(192), float64] */;
  %796 = cast(%var_12001, dtype="float64") /* ty=Tensor[(720), float64] */;
  %797 = cast(%var_12002, dtype="int8") /* ty=Tensor[(4, 72), int8] */;
  %798 = cast(meta[relay.Constant][67] /* ty=Tensor[(112), bool] */, dtype="bool") /* ty=Tensor[(112), bool] */;
  %799 = reshape(%792, newshape=[2, 4, 8]) /* ty=Tensor[(2, 4, 8), float32] */;
  %800 = reshape(%793, newshape=[15, 4]) /* ty=Tensor[(15, 4), int32] */;
  %801 = reshape(%794, newshape=[756]) /* ty=Tensor[(756), int8] */;
  %802 = reshape(%795, newshape=[192]) /* ty=Tensor[(192), float64] */;
  %803 = reshape(%796, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %804 = reshape(%797, newshape=[1, 288]) /* ty=Tensor[(1, 288), int8] */;
  %805 = reshape(%798, newshape=[112]) /* ty=Tensor[(112), bool] */;
  %806 = @func_6060(%799, %800, %801, %802, %803, %804, %805) /* ty=(Tensor[(2, 4, 8), int32], Tensor[(3, 2, 10), int32], Tensor[(15, 4), int32], Tensor[(60), int32], Tensor[(784), uint32], Tensor[(756), int8], Tensor[(192), float64], Tensor[(252), float64], Tensor[(378), uint8], Tensor[(2, 4, 8), float64], Tensor[(15, 12, 4), float64], Tensor[(720), float64], Tensor[(60), int32], Tensor[(1, 288), int8], Tensor[(112), bool], Tensor[(16, 7, ?), uint64], Tensor[(8, 84), uint64], Tensor[(2, 4, 8), float64]) */;
  %807 = %790.0;
  %808 = %791.0;
  %809 = @func_7952() /* ty=Tensor[(6, 12, 2), int32] */;
  %810 = %806.11;
  (%807, %808, %809, %810, %var_11997, meta[relay.Constant][64] /* ty=Tensor[(60), int32] */, meta[relay.Constant][65] /* ty=Tensor[(756), int8] */, meta[relay.Constant][66] /* ty=Tensor[(192), float64] */, %var_12001, %var_12002, meta[relay.Constant][67] /* ty=Tensor[(112), bool] */)
}

def @func_206(%var_158: Tensor[(3, 9, 14), uint8], %var_179: Tensor[(3, 2, 10), int32]) -> (Tensor[(60), int32], Tensor[(3, 2, 10), bool], Tensor[(3, 2, 10), int32], Tensor[(3, 9, 14), float64], Tensor[(3, 2, 10), int32]) {
  %811 = cast(meta[relay.Constant][68] /* ty=Tensor[(60), int32] */, dtype="int32") /* ty=Tensor[(60), int32] */;
  %812 = cast(meta[relay.Constant][68] /* ty=Tensor[(60), int32] */, dtype="int32") /* ty=Tensor[(60), int32] */;
  %813 = reshape(%811, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), int32] */;
  %814 = reshape(%812, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), int32] */;
  %815 = @func_10(%813, %814) /* ty=Tensor[(3, 2, 10), int32] */;
  %816 = cast(%var_179, dtype="bool") /* ty=Tensor[(3, 2, 10), bool] */;
  %817 = shape_of(%815, dtype="int32") /* ty=Tensor[(3), int32] */;
  %818 = cast(%815, dtype="bool") /* ty=Tensor[(3, 2, 10), bool] */;
  %819 = dyn.reshape(%816, %817, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %820 = cast(meta[relay.Constant][68] /* ty=Tensor[(60), int32] */, dtype="int32") /* ty=Tensor[(60), int32] */;
  %821 = cast(%var_179, dtype="int32") /* ty=Tensor[(3, 2, 10), int32] */;
  %822 = reshape(%820, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), int32] */;
  %823 = reshape(%821, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), int32] */;
  %824 = cast(meta[relay.Constant][69] /* ty=Tensor[(3, 9, 14), uint8] */, dtype="uint8") /* ty=Tensor[(3, 9, 14), uint8] */;
  %825 = shape_of(%var_158, dtype="int32") /* ty=Tensor[(3), int32] */;
  %826 = cast(%var_158, dtype="uint8") /* ty=Tensor[(3, 9, 14), uint8] */;
  %827 = dyn.reshape(%824, %825, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %828 = bitwise_and(%826, %827) /* ty=Tensor[(3, 9, 14), uint8] */;
  %829 = cast(%828, dtype="float64") /* ty=Tensor[(3, 9, 14), float64] */;
  %830 = @func_10(%822, %823) /* ty=Tensor[(3, 2, 10), int32] */;
  %831 = cast(%830, dtype="int32") /* ty=Tensor[(3, 2, 10), int32] */;
  %832 = less(%818, %819) /* ty=Tensor[(3, 2, 10), bool] */;
  %833 = cast(%832, dtype="int32") /* ty=Tensor[(3, 2, 10), int32] */;
  %834 = reshape(%831, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), int32] */;
  %835 = reshape(%833, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), int32] */;
  %836 = rsqrt(%829) /* ty=Tensor[(3, 9, 14), float64] */;
  %837 = @func_10(%834, %835) /* ty=Tensor[(3, 2, 10), int32] */;
  (meta[relay.Constant][68] /* ty=Tensor[(60), int32] */, %832, %830, %836, %837)
}

def @func_9666(%var_9650: Tensor[(60), int32], %var_9654: Tensor[(378), uint8]) -> (Tensor[(6, 12, 2), int32], Tensor[(3, 2, 10), int32], Tensor[(784), uint32], Tensor[(60), int32], Tensor[(756), int8], Tensor[(24, 8), float64], Tensor[(378), uint8], Tensor[(3, 84), float32]) {
  %838 = @func_6551() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */;
  %839 = cast(meta[relay.Constant][70] /* ty=Tensor[(784), uint32] */, dtype="uint32") /* ty=Tensor[(784), uint32] */;
  %840 = cast(meta[relay.Constant][70] /* ty=Tensor[(784), uint32] */, dtype="uint32") /* ty=Tensor[(784), uint32] */;
  %841 = cast(%var_9650, dtype="int32") /* ty=Tensor[(60), int32] */;
  %842 = cast(meta[relay.Constant][71] /* ty=Tensor[(756), int8] */, dtype="int8") /* ty=Tensor[(756), int8] */;
  %843 = cast(meta[relay.Constant][72] /* ty=Tensor[(24, 8), float64] */, dtype="float64") /* ty=Tensor[(24, 8), float64] */;
  %844 = cast(meta[relay.Constant][73] /* ty=Tensor[(3, 84), float64] */, dtype="float64") /* ty=Tensor[(3, 84), float64] */;
  %845 = cast(%var_9654, dtype="uint8") /* ty=Tensor[(378), uint8] */;
  %846 = reshape(%839, newshape=[8, 7, 14]) /* ty=Tensor[(8, 7, 14), uint32] */;
  %847 = reshape(%840, newshape=[8, 7, 14]) /* ty=Tensor[(8, 7, 14), uint32] */;
  %848 = reshape(%841, newshape=[60]) /* ty=Tensor[(60), int32] */;
  %849 = reshape(%842, newshape=[9, 84]) /* ty=Tensor[(9, 84), int8] */;
  %850 = reshape(%843, newshape=[24, 8]) /* ty=Tensor[(24, 8), float64] */;
  %851 = reshape(%844, newshape=[1, 252]) /* ty=Tensor[(1, 252), float64] */;
  %852 = reshape(%845, newshape=[378]) /* ty=Tensor[(378), uint8] */;
  %853 = @func_2765(%846, %847, %848, %849, %850, %851, %852) /* ty=(Tensor[(60), int32], Tensor[(288), int8], Tensor[(112), bool], Tensor[(60), int32], Tensor[(8, 7, 14), float64], Tensor[(3, 2, 10), int32], Tensor[(9, 84), int8], Tensor[(3, 4, 16), float64], Tensor[(24, 8), float64], Tensor[(3, 4, 16), float64], Tensor[(60), int32], Tensor[(1, 252), float64], Tensor[(3, 2, 10), int32], Tensor[(378), uint8], Tensor[(60), int32], int16, Tensor[(16, 7, ?), uint64], Tensor[(11, 8, 16), int8], Tensor[(2, 704), int8]) */;
  %854 = cast(meta[relay.Constant][73] /* ty=Tensor[(3, 84), float64] */, dtype="float32") /* ty=Tensor[(3, 84), float32] */;
  %855 = %838.1;
  %856 = %853.12;
  %857 = acos(%854) /* ty=Tensor[(3, 84), float32] */;
  (%855, %856, meta[relay.Constant][70] /* ty=Tensor[(784), uint32] */, %var_9650, meta[relay.Constant][71] /* ty=Tensor[(756), int8] */, meta[relay.Constant][72] /* ty=Tensor[(24, 8), float64] */, %var_9654, %857)
}

def @func_13752() -> (Tensor[(14, 15, 7), int8], Tensor[(14, 15, 7), float32], Tensor[(9, 3, 13), bool], Tensor[(176), float32]) {
  %858 = cast(meta[relay.Constant][75] /* ty=Tensor[(14, 15, 7), int8] */, dtype="int8") /* ty=Tensor[(14, 15, 7), int8] */;
  %859 = shape_of(meta[relay.Constant][74] /* ty=Tensor[(14, 15, 7), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %860 = cast(meta[relay.Constant][74] /* ty=Tensor[(14, 15, 7), int8] */, dtype="int8") /* ty=Tensor[(14, 15, 7), int8] */;
  %861 = dyn.reshape(%858, %859, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %862 = cast(meta[relay.Constant][74] /* ty=Tensor[(14, 15, 7), int8] */, dtype="float32") /* ty=Tensor[(14, 15, 7), float32] */;
  %863 = @func_10641() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(1, 3, 11), int8], int8, Tensor[(6, 12, 2), int32], Tensor[(9, 3, 13), bool], Tensor[(117, 3), bool], Tensor[(756), int8]) */;
  %864 = @func_11271() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(1300), uint16], int8, Tensor[(16, 1, 11), float32], Tensor[(176), float32], Tensor[(13, 10, 10), float32]) */;
  %865 = minimum(%860, %861) /* ty=Tensor[(14, 15, 7), int8] */;
  %866 = exp(%862) /* ty=Tensor[(14, 15, 7), float32] */;
  %867 = %863.4;
  %868 = %864.4;
  (%865, %866, %867, %868)
}

def @func_14417(%var_14376: Tensor[(60), int32]) -> (Tensor[(6, 12, 2), float32], Tensor[(3, 9, 14), float64], Tensor[(60), int32], Tensor[(3, 2, 10), int32]) {
  %869 = @func_13394() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), uint8], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), float32], Tensor[(6, 12, 2), int32]) */;
  %870 = cast(%var_14376, dtype="int32") /* ty=Tensor[(60), int32] */;
  %871 = reshape(%870, newshape=[30, 2]) /* ty=Tensor[(30, 2), int32] */;
  %872 = @func_11681(%871) /* ty=(Tensor[(6, 12, 2), int32], Tensor[(3, 9, 14), float64], Tensor[(378), uint8], Tensor[(30, 2), int32]) */;
  %873 = cast(%var_14376, dtype="int32") /* ty=Tensor[(60), int32] */;
  %874 = cast(%var_14376, dtype="int32") /* ty=Tensor[(60), int32] */;
  %875 = reshape(%873, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), int32] */;
  %876 = reshape(%874, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), int32] */;
  %877 = %869.3;
  %878 = %872.1;
  %879 = @func_10(%875, %876) /* ty=Tensor[(3, 2, 10), int32] */;
  (%877, %878, %var_14376, %879)
}

def @func_14676() -> Tensor[(6, 12, 2), float64] {
  %880 = @func_10539() /* ty=(Tensor[(6, 12, 2), float64],) */;
  %880.0
}

def @func_14583() -> (Tensor[(6, 12, 2), int32], Tensor[(192), float64], Tensor[(252), float64], Tensor[(6, 12, 2), int32]) {
  %881 = @func_10682() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %882 = cast(meta[relay.Constant][76] /* ty=Tensor[(252), float64] */, dtype="float64") /* ty=Tensor[(252), float64] */;
  %883 = reshape(%882, newshape=[3, 84]) /* ty=Tensor[(3, 84), float64] */;
  %884 = @func_8109(%883) /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32], Tensor[(192), float64], Tensor[(5, 42), float64], Tensor[(378, 2), int8], Tensor[(3, 84), float64]) */;
  %885 = @func_13394() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), uint8], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), float32], Tensor[(6, 12, 2), int32]) */;
  %886 = %881.0;
  %887 = %884.2;
  %888 = %885.4;
  (%886, %887, meta[relay.Constant][76] /* ty=Tensor[(252), float64] */, %888)
}

def @func_14039(%var_14018: Tensor[(6, 12, 2), int32]) -> (Tensor[(6, 12, 2), uint32],) {
  %889 = @func_8338() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %890 = %889.0;
  %891 = cast(%var_14018, dtype="uint32") /* ty=Tensor[(6, 12, 2), uint32] */;
  %892 = shape_of(%890, dtype="int32") /* ty=Tensor[(3), int32] */;
  %893 = cast(%890, dtype="uint32") /* ty=Tensor[(6, 12, 2), uint32] */;
  %894 = dyn.reshape(%891, %892, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %895 = maximum(%893, %894) /* ty=Tensor[(6, 12, 2), uint32] */;
  (%895,)
}

def @func_852(%var_823: int16, %var_831: Tensor[(60), int32]) -> (Tensor[(16, 13, 5), int16], Tensor[(3, 2, 10), int32], Tensor[(60), int32]) {
  %896 = cast(%var_823, dtype="int16") /* ty=int16 */;
  %897 = cast(meta[relay.Constant][77] /* ty=Tensor[(16, 13, 5), int16] */, dtype="int16") /* ty=Tensor[(16, 13, 5), int16] */;
  %898 = cast(%var_831, dtype="int32") /* ty=Tensor[(60), int32] */;
  %899 = cast(%var_831, dtype="int32") /* ty=Tensor[(60), int32] */;
  %900 = reshape(%898, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), int32] */;
  %901 = reshape(%899, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), int32] */;
  %902 = add(%896, %897) /* ty=Tensor[(16, 13, 5), int16] */;
  %903 = @func_10(%900, %901) /* ty=Tensor[(3, 2, 10), int32] */;
  (%902, %903, %var_831)
}

def @func_12166() -> (Tensor[(6, 12, 2), int32],) {
  %904 = @func_5648() /* ty=Tensor[(6, 12, 2), int32] */;
  (%904,)
}

def @func_3923(%var_3909: Tensor[(9, 3, 15), float32], %var_3920: Tensor[(378), uint8], %var_3921: Tensor[(60), int32]) -> (Tensor[(9, 3, 15), float32], Tensor[(60), int32], Tensor[(378), uint8], Tensor[(60), int32]) {
  %905 = cast(%var_3909, dtype="float32") /* ty=Tensor[(9, 3, 15), float32] */;
  %906 = cast(%var_3920, dtype="uint8") /* ty=Tensor[(378), uint8] */;
  %907 = cast(%var_3921, dtype="int32") /* ty=Tensor[(60), int32] */;
  %908 = reshape(%906, newshape=[3, 9, 14]) /* ty=Tensor[(3, 9, 14), uint8] */;
  %909 = reshape(%907, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), int32] */;
  %910 = @func_206(%908, %909) /* ty=(Tensor[(60), int32], Tensor[(3, 2, 10), bool], Tensor[(3, 2, 10), int32], Tensor[(3, 9, 14), float64], Tensor[(3, 2, 10), int32]) */;
  %911 = erf(%905) /* ty=Tensor[(9, 3, 15), float32] */;
  %912 = %910.0;
  (%911, %912, %var_3920, %var_3921)
}

def @func_11742() -> (Tensor[(6, 12, 2), int32],) {
  %913 = @func_10641() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(1, 3, 11), int8], int8, Tensor[(6, 12, 2), int32], Tensor[(9, 3, 13), bool], Tensor[(117, 3), bool], Tensor[(756), int8]) */;
  %914 = %913.0;
  (%914,)
}

def @func_5457(%var_5448: int8) -> Tensor[(1, 3, 11), int8] {
  %915 = cast(%var_5448, dtype="int8") /* ty=int8 */;
  %916 = cast(meta[relay.Constant][78] /* ty=Tensor[(1, 3, 11), int8] */, dtype="int8") /* ty=Tensor[(1, 3, 11), int8] */;
  right_shift(%915, %916) /* ty=Tensor[(1, 3, 11), int8] */
}

def @func_6910() -> (Tensor[(6, 12, 2), int32],) {
  %917 = @func_6480() /* ty=(Tensor[(6, 12, 2), float32], Tensor[(6, 12, 2), int32]) */;
  %918 = %917.1;
  (%918,)
}

def @func_9837() -> (Tensor[(6, 12, 2), int32], Tensor[(12, 7, 5), float32], Tensor[(60), float32], Tensor[(5, 84), float32]) {
  %919 = @func_7441() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %920 = cast(meta[relay.Constant][79] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
  %921 = cast(meta[relay.Constant][80] /* ty=Tensor[(5, 84), float32] */, dtype="float32") /* ty=Tensor[(5, 84), float32] */;
  %922 = reshape(%920, newshape=[12, 1, 5]) /* ty=Tensor[(12, 1, 5), float32] */;
  %923 = reshape(%921, newshape=[12, 7, 5]) /* ty=Tensor[(12, 7, 5), float32] */;
  %924 = %919.0;
  %925 = @func_6706(%922, %923) /* ty=Tensor[(12, 7, 5), float32] */;
  (%924, %925, meta[relay.Constant][79] /* ty=Tensor[(60), float32] */, meta[relay.Constant][80] /* ty=Tensor[(5, 84), float32] */)
}

def @func_6060(%var_5919: Tensor[(2, 4, 8), float32], %var_5930: Tensor[(15, 4), int32], %var_5944: Tensor[(756), int8], %var_5945: Tensor[(192), float64], %var_5999: Tensor[(720), float64], %var_6026: Tensor[(1, 288), int8], %var_6027: Tensor[(112), bool]) -> (Tensor[(2, 4, 8), int32], Tensor[(3, 2, 10), int32], Tensor[(15, 4), int32], Tensor[(60), int32], Tensor[(784), uint32], Tensor[(756), int8], Tensor[(192), float64], Tensor[(252), float64], Tensor[(378), uint8], Tensor[(2, 4, 8), float64], Tensor[(15, 12, 4), float64], Tensor[(720), float64], Tensor[(60), int32], Tensor[(1, 288), int8], Tensor[(112), bool], Tensor[(16, 7, ?), uint64], Tensor[(8, 84), uint64], Tensor[(2, 4, 8), float64]) {
  %926 = cast(%var_5919, dtype="float32") /* ty=Tensor[(2, 4, 8), float32] */;
  %927 = log10(%926) /* ty=Tensor[(2, 4, 8), float32] */;
  %928 = cast(%927, dtype="int32") /* ty=Tensor[(2, 4, 8), int32] */;
  %929 = shape_of(%var_5919, dtype="int32") /* ty=Tensor[(3), int32] */;
  %930 = cast(%var_5919, dtype="int32") /* ty=Tensor[(2, 4, 8), int32] */;
  %931 = dyn.reshape(%928, %929, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %932 = cast(%var_5930, dtype="int32") /* ty=Tensor[(15, 4), int32] */;
  %933 = cast(%var_5930, dtype="int32") /* ty=Tensor[(15, 4), int32] */;
  %934 = reshape(%932, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), int32] */;
  %935 = reshape(%933, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), int32] */;
  %936 = cast(meta[relay.Constant][81] /* ty=Tensor[(784), uint32] */, dtype="uint32") /* ty=Tensor[(784), uint32] */;
  %937 = cast(meta[relay.Constant][81] /* ty=Tensor[(784), uint32] */, dtype="uint32") /* ty=Tensor[(784), uint32] */;
  %938 = @func_10(%934, %935) /* ty=Tensor[(3, 2, 10), int32] */;
  %939 = cast(%938, dtype="int32") /* ty=Tensor[(3, 2, 10), int32] */;
  %940 = cast(%var_5944, dtype="int8") /* ty=Tensor[(756), int8] */;
  %941 = cast(%var_5945, dtype="float64") /* ty=Tensor[(192), float64] */;
  %942 = cast(meta[relay.Constant][82] /* ty=Tensor[(252), float64] */, dtype="float64") /* ty=Tensor[(252), float64] */;
  %943 = cast(meta[relay.Constant][83] /* ty=Tensor[(378), uint8] */, dtype="uint8") /* ty=Tensor[(378), uint8] */;
  %944 = reshape(%936, newshape=[8, 7, 14]) /* ty=Tensor[(8, 7, 14), uint32] */;
  %945 = reshape(%937, newshape=[8, 7, 14]) /* ty=Tensor[(8, 7, 14), uint32] */;
  %946 = reshape(%939, newshape=[60]) /* ty=Tensor[(60), int32] */;
  %947 = reshape(%940, newshape=[9, 84]) /* ty=Tensor[(9, 84), int8] */;
  %948 = reshape(%941, newshape=[24, 8]) /* ty=Tensor[(24, 8), float64] */;
  %949 = reshape(%942, newshape=[1, 252]) /* ty=Tensor[(1, 252), float64] */;
  %950 = reshape(%943, newshape=[378]) /* ty=Tensor[(378), uint8] */;
  %951 = @func_2765(%944, %945, %946, %947, %948, %949, %950) /* ty=(Tensor[(60), int32], Tensor[(288), int8], Tensor[(112), bool], Tensor[(60), int32], Tensor[(8, 7, 14), float64], Tensor[(3, 2, 10), int32], Tensor[(9, 84), int8], Tensor[(3, 4, 16), float64], Tensor[(24, 8), float64], Tensor[(3, 4, 16), float64], Tensor[(60), int32], Tensor[(1, 252), float64], Tensor[(3, 2, 10), int32], Tensor[(378), uint8], Tensor[(60), int32], int16, Tensor[(16, 7, ?), uint64], Tensor[(11, 8, 16), int8], Tensor[(2, 704), int8]) */;
  %952 = cast(meta[relay.Constant][84] /* ty=Tensor[(2, 4, 8), float32] */, dtype="float64") /* ty=Tensor[(2, 4, 8), float64] */;
  %953 = shape_of(%var_5919, dtype="int32") /* ty=Tensor[(3), int32] */;
  %954 = cast(%var_5919, dtype="float64") /* ty=Tensor[(2, 4, 8), float64] */;
  %955 = dyn.reshape(%952, %953, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %956 = cast(%var_5999, dtype="float64") /* ty=Tensor[(720), float64] */;
  %957 = reshape(%956, newshape=[15, 12, 4]) /* ty=Tensor[(15, 12, 4), float64] */;
  %958 = @func_3057(%957) /* ty=(Tensor[(15, 12, 4), float64], Tensor[(15, 12, 4), float32]) */;
  %959 = cast(%var_6026, dtype="int8") /* ty=Tensor[(1, 288), int8] */;
  %960 = cast(%var_6026, dtype="int8") /* ty=Tensor[(1, 288), int8] */;
  %961 = cast(%var_6027, dtype="bool") /* ty=Tensor[(112), bool] */;
  %962 = cast(%938, dtype="int32") /* ty=Tensor[(3, 2, 10), int32] */;
  %963 = reshape(%959, newshape=[6, 4, 12]) /* ty=Tensor[(6, 4, 12), int8] */;
  %964 = reshape(%960, newshape=[6, 4, 12]) /* ty=Tensor[(6, 4, 12), int8] */;
  %965 = reshape(%961, newshape=[1, 112]) /* ty=Tensor[(1, 112), bool] */;
  %966 = reshape(%962, newshape=[60]) /* ty=Tensor[(60), int32] */;
  %967 = @func_1668(%963, %964, %965, %966) /* ty=(Tensor[(6, 4, 12), int8], Tensor[(1, 112), bool], Tensor[(3, 2, 10), int32], Tensor[(60), int32], Tensor[(16, 7, 378), uint8]) */;
  %968 = cast(%var_6027, dtype="bool") /* ty=Tensor[(112), bool] */;
  %969 = reshape(%968, newshape=[16, 7, 1]) /* ty=Tensor[(16, 7, 1), bool] */;
  %970 = @func_1396(%969) /* ty=(Tensor[(16, 7, ?), uint64],) */;
  %971 = cast(meta[relay.Constant][85] /* ty=Tensor[(8, 84), float64] */, dtype="float64") /* ty=Tensor[(8, 84), float64] */;
  %972 = reshape(%971, newshape=[7, 16, 6]) /* ty=Tensor[(7, 16, 6), float64] */;
  %973 = @func_4053(%972) /* ty=Tensor[(7, 16, 6), float64] */;
  %974 = cast(%973, dtype="uint64") /* ty=Tensor[(7, 16, 6), uint64] */;
  %975 = shape_of(meta[relay.Constant][85] /* ty=Tensor[(8, 84), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %976 = cast(meta[relay.Constant][85] /* ty=Tensor[(8, 84), float64] */, dtype="uint64") /* ty=Tensor[(8, 84), uint64] */;
  %977 = dyn.reshape(%974, %975, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %978 = cast(%927, dtype="float64") /* ty=Tensor[(2, 4, 8), float64] */;
  %979 = bitwise_or(%930, %931) /* ty=Tensor[(2, 4, 8), int32] */;
  %980 = %951.3;
  %981 = power(%954, %955) /* ty=Tensor[(2, 4, 8), float64] */;
  %982 = %958.0;
  %983 = %967.3;
  %984 = %970.0;
  %985 = minimum(%976, %977) /* ty=Tensor[(8, 84), uint64] */;
  %986 = sigmoid(%978) /* ty=Tensor[(2, 4, 8), float64] */;
  (%979, %938, %var_5930, %980, meta[relay.Constant][81] /* ty=Tensor[(784), uint32] */, %var_5944, %var_5945, meta[relay.Constant][82] /* ty=Tensor[(252), float64] */, meta[relay.Constant][83] /* ty=Tensor[(378), uint8] */, %981, %982, %var_5999, %983, %var_6026, %var_6027, %984, %985, %986)
}

def @func_11167() -> Tensor[(6, 12, 2), int32] {
  %987 = @func_8338() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %987.0
}

def @func_5392(%var_5338: Tensor[(7, 9, 5), bool], %var_5339: Tensor[(7, 9, 5), bool], %var_5364: Tensor[(56, 2), bool], %var_5383: Tensor[(252), float64], %var_5384: Tensor[(378), uint8]) -> (Tensor[(7, 9, 5), bool], Tensor[(56, 2), bool], Tensor[(3, 2, 10), int32], Tensor[(60), int32], Tensor[(60), int32], Tensor[(392, 2), uint32], Tensor[(756), int8], Tensor[(1, 192), float64], Tensor[(378), uint8], Tensor[(16, 7, 252), int64]) {
  %988 = cast(%var_5339, dtype="bool") /* ty=Tensor[(7, 9, 5), bool] */;
  %989 = shape_of(%var_5338, dtype="int32") /* ty=Tensor[(3), int32] */;
  %990 = cast(%var_5338, dtype="bool") /* ty=Tensor[(7, 9, 5), bool] */;
  %991 = dyn.reshape(%988, %989, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %992 = logical_and(%990, %991) /* ty=Tensor[(7, 9, 5), bool] */;
  %993 = cast(%992, dtype="bool") /* ty=Tensor[(7, 9, 5), bool] */;
  %994 = shape_of(%var_5338, dtype="int32") /* ty=Tensor[(3), int32] */;
  %995 = cast(%var_5338, dtype="bool") /* ty=Tensor[(7, 9, 5), bool] */;
  %996 = dyn.reshape(%993, %994, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %997 = cast(meta[relay.Constant][86] /* ty=Tensor[(60), int32] */, dtype="int32") /* ty=Tensor[(60), int32] */;
  %998 = cast(meta[relay.Constant][86] /* ty=Tensor[(60), int32] */, dtype="int32") /* ty=Tensor[(60), int32] */;
  %999 = reshape(%997, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), int32] */;
  %1000 = reshape(%998, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), int32] */;
  %1001 = cast(meta[relay.Constant][87] /* ty=Tensor[(392, 2), uint32] */, dtype="uint32") /* ty=Tensor[(392, 2), uint32] */;
  %1002 = cast(meta[relay.Constant][87] /* ty=Tensor[(392, 2), uint32] */, dtype="uint32") /* ty=Tensor[(392, 2), uint32] */;
  %1003 = cast(meta[relay.Constant][86] /* ty=Tensor[(60), int32] */, dtype="int32") /* ty=Tensor[(60), int32] */;
  %1004 = cast(meta[relay.Constant][88] /* ty=Tensor[(756), int8] */, dtype="int8") /* ty=Tensor[(756), int8] */;
  %1005 = cast(meta[relay.Constant][89] /* ty=Tensor[(1, 192), float64] */, dtype="float64") /* ty=Tensor[(1, 192), float64] */;
  %1006 = cast(%var_5383, dtype="float64") /* ty=Tensor[(252), float64] */;
  %1007 = cast(%var_5384, dtype="uint8") /* ty=Tensor[(378), uint8] */;
  %1008 = reshape(%1001, newshape=[8, 7, 14]) /* ty=Tensor[(8, 7, 14), uint32] */;
  %1009 = reshape(%1002, newshape=[8, 7, 14]) /* ty=Tensor[(8, 7, 14), uint32] */;
  %1010 = reshape(%1003, newshape=[60]) /* ty=Tensor[(60), int32] */;
  %1011 = reshape(%1004, newshape=[9, 84]) /* ty=Tensor[(9, 84), int8] */;
  %1012 = reshape(%1005, newshape=[24, 8]) /* ty=Tensor[(24, 8), float64] */;
  %1013 = reshape(%1006, newshape=[1, 252]) /* ty=Tensor[(1, 252), float64] */;
  %1014 = reshape(%1007, newshape=[378]) /* ty=Tensor[(378), uint8] */;
  %1015 = @func_2765(%1008, %1009, %1010, %1011, %1012, %1013, %1014) /* ty=(Tensor[(60), int32], Tensor[(288), int8], Tensor[(112), bool], Tensor[(60), int32], Tensor[(8, 7, 14), float64], Tensor[(3, 2, 10), int32], Tensor[(9, 84), int8], Tensor[(3, 4, 16), float64], Tensor[(24, 8), float64], Tensor[(3, 4, 16), float64], Tensor[(60), int32], Tensor[(1, 252), float64], Tensor[(3, 2, 10), int32], Tensor[(378), uint8], Tensor[(60), int32], int16, Tensor[(16, 7, ?), uint64], Tensor[(11, 8, 16), int8], Tensor[(2, 704), int8]) */;
  %1016 = cast(%var_5364, dtype="bool") /* ty=Tensor[(56, 2), bool] */;
  %1017 = reshape(%1016, newshape=[16, 7, 1]) /* ty=Tensor[(16, 7, 1), bool] */;
  %1018 = @func_1396(%1017) /* ty=(Tensor[(16, 7, ?), uint64],) */;
  %1019 = %1018.0;
  %1020 = cast(%var_5383, dtype="int64") /* ty=Tensor[(252), int64] */;
  %1021 = cast(%1019, dtype="int64") /* ty=Tensor[(16, 7, ?), int64] */;
  %1022 = logical_or(%995, %996) /* ty=Tensor[(7, 9, 5), bool] */;
  %1023 = @func_10(%999, %1000) /* ty=Tensor[(3, 2, 10), int32] */;
  %1024 = %1015.10;
  %1025 = bitwise_or(%1020, %1021) /* ty=Tensor[(16, 7, 252), int64] */;
  (%1022, %var_5364, %1023, meta[relay.Constant][86] /* ty=Tensor[(60), int32] */, %1024, meta[relay.Constant][87] /* ty=Tensor[(392, 2), uint32] */, meta[relay.Constant][88] /* ty=Tensor[(756), int8] */, meta[relay.Constant][89] /* ty=Tensor[(1, 192), float64] */, %var_5384, %1025)
}

def @func_12921(%var_12889: Tensor[(112), bool], %var_12891: Tensor[(378), uint8], %var_12905: Tensor[(8, 8), float32], %var_12906: Tensor[(60), int32], %var_12908: Tensor[(720), float64]) -> (Tensor[(6, 12, 2), int32], Tensor[(315), bool], Tensor[(112), bool], Tensor[(42, 6), float64], Tensor[(378), uint8], Tensor[(7, 192), int32], Tensor[(60), int32], Tensor[(8, 8), float32], Tensor[(60), int32], Tensor[(756), int8], Tensor[(720), float64], Tensor[(288), int8]) {
  %1026 = @func_10131() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(756), int8], Tensor[(6, 12, 2), int32], Tensor[(9, 3, 13), float32], Tensor[(6, 12, 2), int32]) */;
  %1027 = cast(meta[relay.Constant][90] /* ty=Tensor[(315), bool] */, dtype="bool") /* ty=Tensor[(315), bool] */;
  %1028 = cast(meta[relay.Constant][90] /* ty=Tensor[(315), bool] */, dtype="bool") /* ty=Tensor[(315), bool] */;
  %1029 = cast(%var_12889, dtype="bool") /* ty=Tensor[(112), bool] */;
  %1030 = cast(meta[relay.Constant][91] /* ty=Tensor[(42, 6), float64] */, dtype="float64") /* ty=Tensor[(42, 6), float64] */;
  %1031 = cast(%var_12891, dtype="uint8") /* ty=Tensor[(378), uint8] */;
  %1032 = reshape(%1027, newshape=[7, 9, 5]) /* ty=Tensor[(7, 9, 5), bool] */;
  %1033 = reshape(%1028, newshape=[7, 9, 5]) /* ty=Tensor[(7, 9, 5), bool] */;
  %1034 = reshape(%1029, newshape=[56, 2]) /* ty=Tensor[(56, 2), bool] */;
  %1035 = reshape(%1030, newshape=[252]) /* ty=Tensor[(252), float64] */;
  %1036 = reshape(%1031, newshape=[378]) /* ty=Tensor[(378), uint8] */;
  %1037 = @func_5392(%1032, %1033, %1034, %1035, %1036) /* ty=(Tensor[(7, 9, 5), bool], Tensor[(56, 2), bool], Tensor[(3, 2, 10), int32], Tensor[(60), int32], Tensor[(60), int32], Tensor[(392, 2), uint32], Tensor[(756), int8], Tensor[(1, 192), float64], Tensor[(378), uint8], Tensor[(16, 7, 252), int64]) */;
  %1038 = %1037.7;
  %1039 = cast(%1038, dtype="int32") /* ty=Tensor[(1, 192), int32] */;
  %1040 = cast(meta[relay.Constant][92] /* ty=Tensor[(7, 192), float64] */, dtype="int32") /* ty=Tensor[(7, 192), int32] */;
  %1041 = cast(%var_12905, dtype="float32") /* ty=Tensor[(8, 8), float32] */;
  %1042 = cast(%var_12906, dtype="int32") /* ty=Tensor[(60), int32] */;
  %1043 = cast(meta[relay.Constant][93] /* ty=Tensor[(756), int8] */, dtype="int8") /* ty=Tensor[(756), int8] */;
  %1044 = cast(%1038, dtype="float64") /* ty=Tensor[(1, 192), float64] */;
  %1045 = cast(%var_12908, dtype="float64") /* ty=Tensor[(720), float64] */;
  %1046 = cast(meta[relay.Constant][94] /* ty=Tensor[(288), int8] */, dtype="int8") /* ty=Tensor[(288), int8] */;
  %1047 = cast(%var_12889, dtype="bool") /* ty=Tensor[(112), bool] */;
  %1048 = reshape(%1041, newshape=[2, 4, 8]) /* ty=Tensor[(2, 4, 8), float32] */;
  %1049 = reshape(%1042, newshape=[15, 4]) /* ty=Tensor[(15, 4), int32] */;
  %1050 = reshape(%1043, newshape=[756]) /* ty=Tensor[(756), int8] */;
  %1051 = reshape(%1044, newshape=[192]) /* ty=Tensor[(192), float64] */;
  %1052 = reshape(%1045, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %1053 = reshape(%1046, newshape=[1, 288]) /* ty=Tensor[(1, 288), int8] */;
  %1054 = reshape(%1047, newshape=[112]) /* ty=Tensor[(112), bool] */;
  %1055 = @func_6060(%1048, %1049, %1050, %1051, %1052, %1053, %1054) /* ty=(Tensor[(2, 4, 8), int32], Tensor[(3, 2, 10), int32], Tensor[(15, 4), int32], Tensor[(60), int32], Tensor[(784), uint32], Tensor[(756), int8], Tensor[(192), float64], Tensor[(252), float64], Tensor[(378), uint8], Tensor[(2, 4, 8), float64], Tensor[(15, 12, 4), float64], Tensor[(720), float64], Tensor[(60), int32], Tensor[(1, 288), int8], Tensor[(112), bool], Tensor[(16, 7, ?), uint64], Tensor[(8, 84), uint64], Tensor[(2, 4, 8), float64]) */;
  %1056 = %1026.2;
  %1057 = bitwise_or(%1039, %1040) /* ty=Tensor[(7, 192), int32] */;
  %1058 = %1055.12;
  (%1056, meta[relay.Constant][90] /* ty=Tensor[(315), bool] */, %var_12889, meta[relay.Constant][91] /* ty=Tensor[(42, 6), float64] */, %var_12891, %1057, %1058, %var_12905, %var_12906, meta[relay.Constant][93] /* ty=Tensor[(756), int8] */, %var_12908, meta[relay.Constant][94] /* ty=Tensor[(288), int8] */)
}

def @func_1396(%var_1383: Tensor[(16, 7, 1), bool]) -> (Tensor[(16, 7, ?), uint64],) {
  %1059 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %1060 = cast(%var_1383, dtype="bool") /* ty=Tensor[(16, 7, 1), bool] */;
  %1061 = logical_or(%1059, %1060) /* ty=Tensor[(16, 7, 1), bool] */;
  %1062 = cast(%1061, dtype="uint64") /* ty=Tensor[(16, 7, 1), uint64] */;
  %1063 = shape_of(%var_1383, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1064 = cast(%var_1383, dtype="uint64") /* ty=Tensor[(16, 7, 1), uint64] */;
  %1065 = dyn.reshape(%1062, %1063, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1066 = bitwise_xor(%1064, %1065) /* ty=Tensor[(16, 7, ?), uint64] */;
  (%1066,)
}

def @func_9906(%var_9868: Tensor[(192), float64]) -> (Tensor[(6, 12, 2), uint8], Tensor[(378), uint8], Tensor[(192), float64], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) {
  %1067 = @func_7805() /* ty=(Tensor[(6, 12, 2), uint8],) */;
  %1068 = cast(%var_9868, dtype="float64") /* ty=Tensor[(192), float64] */;
  %1069 = reshape(%1068, newshape=[192]) /* ty=Tensor[(192), float64] */;
  %1070 = @func_6218(%1069) /* ty=(Tensor[(6, 12, 2), float64], Tensor[(3, 2, 10), int32], Tensor[(300), float32], Tensor[(192), float64], Tensor[(378), uint8]) */;
  %1071 = @func_8677() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %1072 = @func_6154() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %1073 = @func_6480() /* ty=(Tensor[(6, 12, 2), float32], Tensor[(6, 12, 2), int32]) */;
  %1074 = %1067.0;
  %1075 = %1070.4;
  %1076 = %1071.0;
  %1077 = %1072.0;
  %1078 = %1073.1;
  (%1074, %1075, %var_9868, %1076, %1077, %1078)
}

def @main(%var_14712: Tensor[(2, 15, 14), uint8]) -> (Tensor[(2, 15, 14), uint8],) {
  %1079 = cast(%var_14712, dtype="uint8") /* ty=Tensor[(2, 15, 14), uint8] */;
  %1080 = shape_of(meta[relay.Constant][95] /* ty=Tensor[(2, 15, 14), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1081 = cast(meta[relay.Constant][95] /* ty=Tensor[(2, 15, 14), uint8] */, dtype="uint8") /* ty=Tensor[(2, 15, 14), uint8] */;
  %1082 = dyn.reshape(%1079, %1080, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1083 = add(%1081, %1082) /* ty=Tensor[(2, 15, 14), uint8] */;
  (%1083,)
}

def @func_9802(%var_9798: Tensor[(672), float64]) -> (Tensor[(6, 12, 2), uint16], Tensor[(7, 16, 6), float64], Tensor[(672), float64]) {
  %1084 = @func_7162() /* ty=Tensor[(6, 12, 2), int32] */;
  %1085 = cast(meta[relay.Constant][96] /* ty=Tensor[(6, 12, 2), int32] */, dtype="uint16") /* ty=Tensor[(6, 12, 2), uint16] */;
  %1086 = shape_of(%1084, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1087 = cast(%1084, dtype="uint16") /* ty=Tensor[(6, 12, 2), uint16] */;
  %1088 = dyn.reshape(%1085, %1086, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1089 = cast(%var_9798, dtype="float64") /* ty=Tensor[(672), float64] */;
  %1090 = reshape(%1089, newshape=[7, 16, 6]) /* ty=Tensor[(7, 16, 6), float64] */;
  %1091 = bitwise_and(%1087, %1088) /* ty=Tensor[(6, 12, 2), uint16] */;
  %1092 = @func_4053(%1090) /* ty=Tensor[(7, 16, 6), float64] */;
  (%1091, %1092, %var_9798)
}

def @func_8053() -> (Tensor[(6, 12, 2), int32],) {
  %1093 = @func_6910() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %1094 = %1093.0;
  (%1094,)
}

def @func_7610(%var_7606: Tensor[(756), int8]) -> (Tensor[(6, 12, 2), float32], Tensor[(9, 3, 13), bool], Tensor[(756), float64]) {
  %1095 = @func_6644() /* ty=(Tensor[(6, 12, 2), float32], Tensor[(16, 7, ?), uint64], Tensor[(112), bool]) */;
  %1096 = cast(meta[relay.Constant][97] /* ty=Tensor[(756), int8] */, dtype="int8") /* ty=Tensor[(756), int8] */;
  %1097 = reshape(%1096, newshape=[18, 42]) /* ty=Tensor[(18, 42), int8] */;
  %1098 = @func_7364(%1097) /* ty=(Tensor[(6, 12, 2), int32], Tensor[(9, 3, 13), bool], Tensor[(351), bool], Tensor[(18, 42), int8]) */;
  %1099 = cast(%var_7606, dtype="float64") /* ty=Tensor[(756), float64] */;
  %1100 = shape_of(meta[relay.Constant][97] /* ty=Tensor[(756), int8] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1101 = cast(meta[relay.Constant][97] /* ty=Tensor[(756), int8] */, dtype="float64") /* ty=Tensor[(756), float64] */;
  %1102 = dyn.reshape(%1099, %1100, newshape=[]) /* ty=Tensor[(?), float64] */;
  %1103 = %1095.0;
  %1104 = %1098.1;
  %1105 = add(%1101, %1102) /* ty=Tensor[(756), float64] */;
  (%1103, %1104, %1105)
}

def @func_9818() -> Tensor[(6, 12, 2), int32] {
  @func_5648() /* ty=Tensor[(6, 12, 2), int32] */
}

def @func_5648() -> Tensor[(6, 12, 2), int32] {
  @func_5512() /* ty=Tensor[(6, 12, 2), int32] */
}

def @func_10863() -> (Tensor[(6, 12, 2), int32],) {
  %1106 = @func_10387() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %1107 = %1106.0;
  (%1107,)
}

def @func_10775() -> Tensor[(6, 12, 2), int32] {
  %1108 = @func_10209() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */;
  %1108.1
}

def @func_6396(%var_6366: Tensor[(756), int8], %var_6368: Tensor[(72, 4), int8], %var_6392: Tensor[(112), bool]) -> (Tensor[(6, 12, 2), int32], Tensor[(3, 2, 10), int32], Tensor[(60), int32], Tensor[(24, 12), int8], Tensor[(756), int8], Tensor[(720), float64], Tensor[(72, 4), int8], Tensor[(6, 12, 2), int32], Tensor[(60), int32], Tensor[(315), bool], Tensor[(112), bool], Tensor[(252), float64], Tensor[(378, 1), uint8]) {
  %1109 = @func_5659() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %1110 = cast(meta[relay.Constant][98] /* ty=Tensor[(60), int32] */, dtype="int32") /* ty=Tensor[(60), int32] */;
  %1111 = cast(meta[relay.Constant][98] /* ty=Tensor[(60), int32] */, dtype="int32") /* ty=Tensor[(60), int32] */;
  %1112 = reshape(%1110, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), int32] */;
  %1113 = reshape(%1111, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), int32] */;
  %1114 = cast(%var_6366, dtype="int8") /* ty=Tensor[(756), int8] */;
  %1115 = cast(meta[relay.Constant][99] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
  %1116 = cast(%var_6368, dtype="int8") /* ty=Tensor[(72, 4), int8] */;
  %1117 = reshape(%1114, newshape=[756]) /* ty=Tensor[(756), int8] */;
  %1118 = reshape(%1115, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %1119 = reshape(%1116, newshape=[24, 12]) /* ty=Tensor[(24, 12), int8] */;
  %1120 = @func_6303(%1117, %1118, %1119) /* ty=(Tensor[(6, 12, 2), int32], Tensor[(3, 4, 16), float64], Tensor[(192), float64], Tensor[(60), int32], Tensor[(64), float32], Tensor[(60, 1), int32], Tensor[(756), int8], Tensor[(720), float64], Tensor[(24, 12), int8], Tensor[(112, 1), bool], Tensor[(3, 9, 14), float64], Tensor[(378), uint8], Tensor[(6, 12, 2), int32], Tensor[(756), int8], Tensor[(252), float64]) */;
  %1121 = cast(meta[relay.Constant][100] /* ty=Tensor[(315), bool] */, dtype="bool") /* ty=Tensor[(315), bool] */;
  %1122 = cast(meta[relay.Constant][100] /* ty=Tensor[(315), bool] */, dtype="bool") /* ty=Tensor[(315), bool] */;
  %1123 = cast(%var_6392, dtype="bool") /* ty=Tensor[(112), bool] */;
  %1124 = cast(meta[relay.Constant][101] /* ty=Tensor[(252), float64] */, dtype="float64") /* ty=Tensor[(252), float64] */;
  %1125 = cast(meta[relay.Constant][102] /* ty=Tensor[(378, 1), uint8] */, dtype="uint8") /* ty=Tensor[(378, 1), uint8] */;
  %1126 = reshape(%1121, newshape=[7, 9, 5]) /* ty=Tensor[(7, 9, 5), bool] */;
  %1127 = reshape(%1122, newshape=[7, 9, 5]) /* ty=Tensor[(7, 9, 5), bool] */;
  %1128 = reshape(%1123, newshape=[56, 2]) /* ty=Tensor[(56, 2), bool] */;
  %1129 = reshape(%1124, newshape=[252]) /* ty=Tensor[(252), float64] */;
  %1130 = reshape(%1125, newshape=[378]) /* ty=Tensor[(378), uint8] */;
  %1131 = @func_5392(%1126, %1127, %1128, %1129, %1130) /* ty=(Tensor[(7, 9, 5), bool], Tensor[(56, 2), bool], Tensor[(3, 2, 10), int32], Tensor[(60), int32], Tensor[(60), int32], Tensor[(392, 2), uint32], Tensor[(756), int8], Tensor[(1, 192), float64], Tensor[(378), uint8], Tensor[(16, 7, 252), int64]) */;
  %1132 = %1109.0;
  %1133 = @func_10(%1112, %1113) /* ty=Tensor[(3, 2, 10), int32] */;
  %1134 = %1120.8;
  %1135 = @func_5512() /* ty=Tensor[(6, 12, 2), int32] */;
  %1136 = %1131.4;
  (%1132, %1133, meta[relay.Constant][98] /* ty=Tensor[(60), int32] */, %1134, %var_6366, meta[relay.Constant][99] /* ty=Tensor[(720), float64] */, %var_6368, %1135, %1136, meta[relay.Constant][100] /* ty=Tensor[(315), bool] */, %var_6392, meta[relay.Constant][101] /* ty=Tensor[(252), float64] */, meta[relay.Constant][102] /* ty=Tensor[(378, 1), uint8] */)
}

def @func_6551() -> (Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) {
  %1137 = @func_5659() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %1138 = %1137.0;
  %1139 = @func_5648() /* ty=Tensor[(6, 12, 2), int32] */;
  (%1138, %1139)
}

def @func_13916() -> (Tensor[(6, 12, 2), int32],) {
  %1140 = @func_7952() /* ty=Tensor[(6, 12, 2), int32] */;
  (%1140,)
}

def @func_5512() -> Tensor[(6, 12, 2), int32] {
  %1141 = cast(meta[relay.Constant][104] /* ty=Tensor[(6, 12, 2), int32] */, dtype="int32") /* ty=Tensor[(6, 12, 2), int32] */;
  %1142 = shape_of(meta[relay.Constant][103] /* ty=Tensor[(6, 12, 2), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1143 = cast(meta[relay.Constant][103] /* ty=Tensor[(6, 12, 2), int32] */, dtype="int32") /* ty=Tensor[(6, 12, 2), int32] */;
  %1144 = dyn.reshape(%1141, %1142, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  right_shift(%1143, %1144) /* ty=Tensor[(6, 12, 2), int32] */
}

def @func_10209() -> (Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) {
  %1145 = @func_9818() /* ty=Tensor[(6, 12, 2), int32] */;
  %1146 = @func_7406() /* ty=Tensor[(6, 12, 2), int32] */;
  (%1145, %1146)
}

def @func_2936(%var_2927: Tensor[(15, 6, 15), int32], %var_2928: Tensor[(15, 6, 15), int32]) -> Tensor[(15, 6, 15), float32] {
  %1147 = cast(%var_2928, dtype="bool") /* ty=Tensor[(15, 6, 15), bool] */;
  %1148 = shape_of(%var_2927, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1149 = cast(%var_2927, dtype="bool") /* ty=Tensor[(15, 6, 15), bool] */;
  %1150 = dyn.reshape(%1147, %1148, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1151 = greater_equal(%1149, %1150) /* ty=Tensor[(15, 6, 15), bool] */;
  %1152 = cast(%var_2928, dtype="float32") /* ty=Tensor[(15, 6, 15), float32] */;
  %1153 = shape_of(%1151, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1154 = cast(%1151, dtype="float32") /* ty=Tensor[(15, 6, 15), float32] */;
  %1155 = dyn.reshape(%1152, %1153, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  power(%1154, %1155) /* ty=Tensor[(15, 6, 15), float32] */
}

def @func_5056(%var_5050: Tensor[(16, 1, 11), float32]) -> (Tensor[(16, 1, 11), float32],) {
  %1156 = cast(%var_5050, dtype="float32") /* ty=Tensor[(16, 1, 11), float32] */;
  %1157 = acosh(%1156) /* ty=Tensor[(16, 1, 11), float32] */;
  (%1157,)
}

def @func_6529() -> (Tensor[(6, 12, 2), int32],) {
  %1158 = @func_5512() /* ty=Tensor[(6, 12, 2), int32] */;
  (%1158,)
}

def @func_12858() -> (Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) {
  %1159 = @func_9298() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */;
  %1160 = @func_11271() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(1300), uint16], int8, Tensor[(16, 1, 11), float32], Tensor[(176), float32], Tensor[(13, 10, 10), float32]) */;
  %1161 = %1159.0;
  %1162 = %1160.0;
  %1163 = @func_11578() /* ty=Tensor[(6, 12, 2), int32] */;
  (%1161, %1162, %1163)
}

def @func_8245(%var_8227: Tensor[(378), uint8], %var_8228: Tensor[(60, 1), int32]) -> (Tensor[(6, 12, 2), int32], Tensor[(3, 4, 16), float64], Tensor[(192), float64], Tensor[(3, 9, 14), float64], Tensor[(378), uint8], Tensor[(15, 6, 15), float32], Tensor[(60, 1350), bool], Tensor[(3, 2, 10), int32]) {
  %1164 = cast(meta[relay.Constant][105] /* ty=Tensor[(192), float64] */, dtype="float64") /* ty=Tensor[(192), float64] */;
  %1165 = reshape(%1164, newshape=[3, 4, 16]) /* ty=Tensor[(3, 4, 16), float64] */;
  %1166 = cast(%var_8227, dtype="uint8") /* ty=Tensor[(378), uint8] */;
  %1167 = cast(%var_8228, dtype="int32") /* ty=Tensor[(60, 1), int32] */;
  %1168 = reshape(%1166, newshape=[3, 9, 14]) /* ty=Tensor[(3, 9, 14), uint8] */;
  %1169 = reshape(%1167, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), int32] */;
  %1170 = @func_206(%1168, %1169) /* ty=(Tensor[(60), int32], Tensor[(3, 2, 10), bool], Tensor[(3, 2, 10), int32], Tensor[(3, 9, 14), float64], Tensor[(3, 2, 10), int32]) */;
  %1171 = cast(meta[relay.Constant][106] /* ty=Tensor[(1350), int32] */, dtype="int32") /* ty=Tensor[(1350), int32] */;
  %1172 = cast(meta[relay.Constant][106] /* ty=Tensor[(1350), int32] */, dtype="int32") /* ty=Tensor[(1350), int32] */;
  %1173 = reshape(%1171, newshape=[15, 6, 15]) /* ty=Tensor[(15, 6, 15), int32] */;
  %1174 = reshape(%1172, newshape=[15, 6, 15]) /* ty=Tensor[(15, 6, 15), int32] */;
  %1175 = cast(meta[relay.Constant][106] /* ty=Tensor[(1350), int32] */, dtype="float32") /* ty=Tensor[(1350), float32] */;
  %1176 = cosh(%1175) /* ty=Tensor[(1350), float32] */;
  %1177 = cast(%1176, dtype="bool") /* ty=Tensor[(1350), bool] */;
  %1178 = cast(%var_8228, dtype="bool") /* ty=Tensor[(60, 1), bool] */;
  %1179 = @func_1144(%1165) /* ty=Tensor[(3, 4, 16), float64] */;
  %1180 = cast(%1179, dtype="float64") /* ty=Tensor[(3, 4, 16), float64] */;
  %1181 = reshape(%1180, newshape=[192]) /* ty=Tensor[(192), float64] */;
  %1182 = @func_6218(%1181) /* ty=(Tensor[(6, 12, 2), float64], Tensor[(3, 2, 10), int32], Tensor[(300), float32], Tensor[(192), float64], Tensor[(378), uint8]) */;
  %1183 = @func_7551() /* ty=Tensor[(6, 12, 2), int32] */;
  %1184 = %1170.3;
  %1185 = @func_2936(%1173, %1174) /* ty=Tensor[(15, 6, 15), float32] */;
  %1186 = logical_and(%1177, %1178) /* ty=Tensor[(60, 1350), bool] */;
  %1187 = %1182.1;
  (%1183, %1179, meta[relay.Constant][105] /* ty=Tensor[(192), float64] */, %1184, %var_8227, %1185, %1186, %1187)
}

def @func_14187(%var_14123: Tensor[(720), float64], %var_14152: int64, %var_14174: Tensor[(288), int8]) -> (Tensor[(13, 10, 10), float32], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32], Tensor[(140), float64], Tensor[(6, 12, 2), int32], Tensor[(756), int8], Tensor[(378, 2), int8], Tensor[(720), float64], Tensor[(6, 12, 2), float32], Tensor[(6, 12, 2), int32], Tensor[(?, 10, 12), bool], int64, Tensor[(3, 40), int64], Tensor[(1408), int8], Tensor[(6, 12, 2), int32], Tensor[(378), uint8], Tensor[(288), int8]) {
  %1188 = @func_11271() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(1300), uint16], int8, Tensor[(16, 1, 11), float32], Tensor[(176), float32], Tensor[(13, 10, 10), float32]) */;
  %1189 = @func_9298() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */;
  %1190 = cast(meta[relay.Constant][107] /* ty=Tensor[(140), float64] */, dtype="float64") /* ty=Tensor[(140), float64] */;
  %1191 = reshape(%1190, newshape=[7, 4, 5]) /* ty=Tensor[(7, 4, 5), float64] */;
  %1192 = @func_13445(%1191) /* ty=(Tensor[(7, 4, 5), float64], Tensor[(6, 12, 2), int32]) */;
  %1193 = @func_13394() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), uint8], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), float32], Tensor[(6, 12, 2), int32]) */;
  %1194 = cast(meta[relay.Constant][108] /* ty=Tensor[(378, 2), int8] */, dtype="int8") /* ty=Tensor[(378, 2), int8] */;
  %1195 = cast(%var_14123, dtype="float64") /* ty=Tensor[(720), float64] */;
  %1196 = reshape(%1194, newshape=[756]) /* ty=Tensor[(756), int8] */;
  %1197 = reshape(%1195, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %1198 = @func_11847(%1196, %1197) /* ty=(Tensor[(6, 12, 2), int32], Tensor[(60), int32], Tensor[(756), int8], Tensor[(720), float64], Tensor[(288), int8]) */;
  %1199 = %1189.1;
  %1200 = cast(%1199, dtype="uint8") /* ty=Tensor[(6, 12, 2), uint8] */;
  %1201 = reshape(%1200, newshape=[6, 12, 2]) /* ty=Tensor[(6, 12, 2), uint8] */;
  %1202 = @func_7912(%1201) /* ty=(Tensor[(6, 12, 2), float32], Tensor[(6, 12, 2), float32]) */;
  %1203 = @func_11742() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %1204 = cast(%var_14152, dtype="int64") /* ty=int64 */;
  %1205 = cast(meta[relay.Constant][109] /* ty=Tensor[(3, 40), int64] */, dtype="int64") /* ty=Tensor[(3, 40), int64] */;
  %1206 = cast(meta[relay.Constant][110] /* ty=Tensor[(1408), int8] */, dtype="int8") /* ty=Tensor[(1408), int8] */;
  %1207 = reshape(%1204, newshape=[]) /* ty=int64 */;
  %1208 = reshape(%1205, newshape=[1, 10, 12]) /* ty=Tensor[(1, 10, 12), int64] */;
  %1209 = reshape(%1206, newshape=[1408]) /* ty=Tensor[(1408), int8] */;
  %1210 = @func_10295(%1207, %1208, %1209) /* ty=(Tensor[(1, 10, 12), int64], Tensor[(?, 10, 12), bool], Tensor[(11, 8, 16), float64], Tensor[(1408), int8]) */;
  %1211 = @func_13916() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %1212 = cast(meta[relay.Constant][108] /* ty=Tensor[(378, 2), int8] */, dtype="int8") /* ty=Tensor[(378, 2), int8] */;
  %1213 = cast(%var_14123, dtype="float64") /* ty=Tensor[(720), float64] */;
  %1214 = cast(%var_14174, dtype="int8") /* ty=Tensor[(288), int8] */;
  %1215 = reshape(%1212, newshape=[756]) /* ty=Tensor[(756), int8] */;
  %1216 = reshape(%1213, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %1217 = reshape(%1214, newshape=[24, 12]) /* ty=Tensor[(24, 12), int8] */;
  %1218 = @func_6303(%1215, %1216, %1217) /* ty=(Tensor[(6, 12, 2), int32], Tensor[(3, 4, 16), float64], Tensor[(192), float64], Tensor[(60), int32], Tensor[(64), float32], Tensor[(60, 1), int32], Tensor[(756), int8], Tensor[(720), float64], Tensor[(24, 12), int8], Tensor[(112, 1), bool], Tensor[(3, 9, 14), float64], Tensor[(378), uint8], Tensor[(6, 12, 2), int32], Tensor[(756), int8], Tensor[(252), float64]) */;
  %1219 = %1188.5;
  %1220 = @func_12812() /* ty=Tensor[(6, 12, 2), int32] */;
  %1221 = %1192.1;
  %1222 = %1193.4;
  %1223 = %1198.2;
  %1224 = %1202.0;
  %1225 = %1203.0;
  %1226 = %1210.1;
  %1227 = %1211.0;
  %1228 = %1218.11;
  (%1219, %1220, %1199, %1221, meta[relay.Constant][107] /* ty=Tensor[(140), float64] */, %1222, %1223, meta[relay.Constant][108] /* ty=Tensor[(378, 2), int8] */, %var_14123, %1224, %1225, %1226, %var_14152, meta[relay.Constant][109] /* ty=Tensor[(3, 40), int64] */, meta[relay.Constant][110] /* ty=Tensor[(1408), int8] */, %1227, %1228, %var_14174)
}

def @func_7162() -> Tensor[(6, 12, 2), int32] {
  %1229 = @func_6154() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %1229.0
}

def @func_8338() -> (Tensor[(6, 12, 2), int32],) {
  %1230 = @func_7870() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */;
  %1231 = %1230.0;
  (%1231,)
}

def @func_11847(%var_11843: Tensor[(756), int8], %var_11844: Tensor[(720), float64]) -> (Tensor[(6, 12, 2), int32], Tensor[(60), int32], Tensor[(756), int8], Tensor[(720), float64], Tensor[(288), int8]) {
  %1232 = @func_9298() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */;
  %1233 = cast(%var_11843, dtype="int8") /* ty=Tensor[(756), int8] */;
  %1234 = cast(%var_11844, dtype="float64") /* ty=Tensor[(720), float64] */;
  %1235 = cast(meta[relay.Constant][111] /* ty=Tensor[(288), int8] */, dtype="int8") /* ty=Tensor[(288), int8] */;
  %1236 = reshape(%1233, newshape=[756]) /* ty=Tensor[(756), int8] */;
  %1237 = reshape(%1234, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %1238 = reshape(%1235, newshape=[24, 12]) /* ty=Tensor[(24, 12), int8] */;
  %1239 = @func_6303(%1236, %1237, %1238) /* ty=(Tensor[(6, 12, 2), int32], Tensor[(3, 4, 16), float64], Tensor[(192), float64], Tensor[(60), int32], Tensor[(64), float32], Tensor[(60, 1), int32], Tensor[(756), int8], Tensor[(720), float64], Tensor[(24, 12), int8], Tensor[(112, 1), bool], Tensor[(3, 9, 14), float64], Tensor[(378), uint8], Tensor[(6, 12, 2), int32], Tensor[(756), int8], Tensor[(252), float64]) */;
  %1240 = %1232.1;
  %1241 = %1239.3;
  (%1240, %1241, %var_11843, %var_11844, meta[relay.Constant][111] /* ty=Tensor[(288), int8] */)
}

def @func_12712(%var_12683: Tensor[(1350), int32], %var_12697: Tensor[(140), float32]) -> (Tensor[(6, 12, 2), int32], Tensor[(12, 7, 5), float32], Tensor[(3, 4, 16), float64], Tensor[(192), float64], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32], Tensor[(15, 6, 15), float32], Tensor[(1350), int32], Tensor[(4, 5, 7), float32], Tensor[(140), float32]) {
  %1242 = @func_6529() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %1243 = @func_9837() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(12, 7, 5), float32], Tensor[(60), float32], Tensor[(5, 84), float32]) */;
  %1244 = %1243.1;
  %1245 = cast(%1244, dtype="float32") /* ty=Tensor[(12, 7, 5), float32] */;
  %1246 = cast(meta[relay.Constant][112] /* ty=Tensor[(192), float64] */, dtype="float64") /* ty=Tensor[(192), float64] */;
  %1247 = reshape(%1246, newshape=[3, 4, 16]) /* ty=Tensor[(3, 4, 16), float64] */;
  %1248 = @func_7941() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %1249 = cast(%var_12683, dtype="int32") /* ty=Tensor[(1350), int32] */;
  %1250 = cast(%var_12683, dtype="int32") /* ty=Tensor[(1350), int32] */;
  %1251 = reshape(%1249, newshape=[15, 6, 15]) /* ty=Tensor[(15, 6, 15), int32] */;
  %1252 = reshape(%1250, newshape=[15, 6, 15]) /* ty=Tensor[(15, 6, 15), int32] */;
  %1253 = cast(%var_12697, dtype="float32") /* ty=Tensor[(140), float32] */;
  %1254 = cast(%var_12697, dtype="float32") /* ty=Tensor[(140), float32] */;
  %1255 = reshape(%1253, newshape=[4, 5, 7]) /* ty=Tensor[(4, 5, 7), float32] */;
  %1256 = reshape(%1254, newshape=[4, 5, 7]) /* ty=Tensor[(4, 5, 7), float32] */;
  %1257 = @func_1954(%1255, %1256) /* ty=(Tensor[(4, 5, 7), float32], Tensor[(4, 5, 7), float64], Tensor[(2, 96), float64], Tensor[(1408), int8]) */;
  %1258 = %1242.0;
  %1259 = acosh(%1245) /* ty=Tensor[(12, 7, 5), float32] */;
  %1260 = @func_1144(%1247) /* ty=Tensor[(3, 4, 16), float64] */;
  %1261 = @func_11348() /* ty=Tensor[(6, 12, 2), int32] */;
  %1262 = %1248.0;
  %1263 = @func_2936(%1251, %1252) /* ty=Tensor[(15, 6, 15), float32] */;
  %1264 = %1257.0;
  (%1258, %1259, %1260, meta[relay.Constant][112] /* ty=Tensor[(192), float64] */, %1261, %1262, %1263, %var_12683, %1264, %var_12697)
}

def @func_6303(%var_6268: Tensor[(756), int8], %var_6269: Tensor[(720), float64], %var_6270: Tensor[(24, 12), int8]) -> (Tensor[(6, 12, 2), int32], Tensor[(3, 4, 16), float64], Tensor[(192), float64], Tensor[(60), int32], Tensor[(64), float32], Tensor[(60, 1), int32], Tensor[(756), int8], Tensor[(720), float64], Tensor[(24, 12), int8], Tensor[(112, 1), bool], Tensor[(3, 9, 14), float64], Tensor[(378), uint8], Tensor[(6, 12, 2), int32], Tensor[(756), int8], Tensor[(252), float64]) {
  %1265 = cast(meta[relay.Constant][113] /* ty=Tensor[(192), float64] */, dtype="float64") /* ty=Tensor[(192), float64] */;
  %1266 = reshape(%1265, newshape=[3, 4, 16]) /* ty=Tensor[(3, 4, 16), float64] */;
  %1267 = cast(meta[relay.Constant][114] /* ty=Tensor[(64), float32] */, dtype="float32") /* ty=Tensor[(64), float32] */;
  %1268 = cast(meta[relay.Constant][115] /* ty=Tensor[(60, 1), int32] */, dtype="int32") /* ty=Tensor[(60, 1), int32] */;
  %1269 = cast(%var_6268, dtype="int8") /* ty=Tensor[(756), int8] */;
  %1270 = @func_1144(%1266) /* ty=Tensor[(3, 4, 16), float64] */;
  %1271 = cast(%1270, dtype="float64") /* ty=Tensor[(3, 4, 16), float64] */;
  %1272 = cast(%var_6269, dtype="float64") /* ty=Tensor[(720), float64] */;
  %1273 = cast(%var_6270, dtype="int8") /* ty=Tensor[(24, 12), int8] */;
  %1274 = cast(meta[relay.Constant][116] /* ty=Tensor[(112, 1), bool] */, dtype="bool") /* ty=Tensor[(112, 1), bool] */;
  %1275 = reshape(%1267, newshape=[2, 4, 8]) /* ty=Tensor[(2, 4, 8), float32] */;
  %1276 = reshape(%1268, newshape=[15, 4]) /* ty=Tensor[(15, 4), int32] */;
  %1277 = reshape(%1269, newshape=[756]) /* ty=Tensor[(756), int8] */;
  %1278 = reshape(%1271, newshape=[192]) /* ty=Tensor[(192), float64] */;
  %1279 = reshape(%1272, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %1280 = reshape(%1273, newshape=[1, 288]) /* ty=Tensor[(1, 288), int8] */;
  %1281 = reshape(%1274, newshape=[112]) /* ty=Tensor[(112), bool] */;
  %1282 = @func_6060(%1275, %1276, %1277, %1278, %1279, %1280, %1281) /* ty=(Tensor[(2, 4, 8), int32], Tensor[(3, 2, 10), int32], Tensor[(15, 4), int32], Tensor[(60), int32], Tensor[(784), uint32], Tensor[(756), int8], Tensor[(192), float64], Tensor[(252), float64], Tensor[(378), uint8], Tensor[(2, 4, 8), float64], Tensor[(15, 12, 4), float64], Tensor[(720), float64], Tensor[(60), int32], Tensor[(1, 288), int8], Tensor[(112), bool], Tensor[(16, 7, ?), uint64], Tensor[(8, 84), uint64], Tensor[(2, 4, 8), float64]) */;
  %1283 = cast(meta[relay.Constant][117] /* ty=Tensor[(378), uint8] */, dtype="uint8") /* ty=Tensor[(378), uint8] */;
  %1284 = %1282.3;
  %1285 = cast(%1284, dtype="int32") /* ty=Tensor[(60), int32] */;
  %1286 = reshape(%1283, newshape=[3, 9, 14]) /* ty=Tensor[(3, 9, 14), uint8] */;
  %1287 = reshape(%1285, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), int32] */;
  %1288 = @func_206(%1286, %1287) /* ty=(Tensor[(60), int32], Tensor[(3, 2, 10), bool], Tensor[(3, 2, 10), int32], Tensor[(3, 9, 14), float64], Tensor[(3, 2, 10), int32]) */;
  %1289 = cast(meta[relay.Constant][118] /* ty=Tensor[(252), float64] */, dtype="float64") /* ty=Tensor[(252), float64] */;
  %1290 = cast(%var_6268, dtype="int8") /* ty=Tensor[(756), int8] */;
  %1291 = reshape(%1289, newshape=[9, 4, 7]) /* ty=Tensor[(9, 4, 7), float64] */;
  %1292 = reshape(%1290, newshape=[756]) /* ty=Tensor[(756), int8] */;
  %1293 = @func_2095(%1291, %1292) /* ty=(Tensor[(60), int32], Tensor[(756), int8], Tensor[(9, 4, 7), bool]) */;
  %1294 = @func_5648() /* ty=Tensor[(6, 12, 2), int32] */;
  %1295 = %1288.3;
  %1296 = @func_5648() /* ty=Tensor[(6, 12, 2), int32] */;
  %1297 = %1293.1;
  (%1294, %1270, meta[relay.Constant][113] /* ty=Tensor[(192), float64] */, %1284, meta[relay.Constant][114] /* ty=Tensor[(64), float32] */, meta[relay.Constant][115] /* ty=Tensor[(60, 1), int32] */, %var_6268, %var_6269, %var_6270, meta[relay.Constant][116] /* ty=Tensor[(112, 1), bool] */, %1295, meta[relay.Constant][117] /* ty=Tensor[(378), uint8] */, %1296, %1297, meta[relay.Constant][118] /* ty=Tensor[(252), float64] */)
}

def @func_12193() -> Tensor[(6, 12, 2), int32] {
  %1298 = @func_9147() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %1298.0
}

def @func_10997() -> Tensor[(6, 12, 2), int32] {
  %1299 = @func_10209() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */;
  %1299.0
}

def @func_13277(%var_13267: Tensor[(252), float64]) -> (Tensor[(6, 12, 2), int32], Tensor[(3, 84), float64], Tensor[(252), float64]) {
  %1300 = cast(%var_13267, dtype="float64") /* ty=Tensor[(252), float64] */;
  %1301 = reshape(%1300, newshape=[3, 84]) /* ty=Tensor[(3, 84), float64] */;
  %1302 = @func_8109(%1301) /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32], Tensor[(192), float64], Tensor[(5, 42), float64], Tensor[(378, 2), int8], Tensor[(3, 84), float64]) */;
  %1303 = @func_11167() /* ty=Tensor[(6, 12, 2), int32] */;
  %1304 = %1302.5;
  (%1303, %1304, %var_13267)
}

def @func_9335() -> Tensor[(6, 12, 2), int32] {
  %1305 = @func_6154() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %1305.0
}

def @func_14078() -> Tensor[(6, 12, 2), int32] {
  %1306 = @func_12411() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */;
  %1306.1
}

def @func_4053(%var_4041: Tensor[(7, 16, 6), float64]) -> Tensor[(7, 16, 6), float64] {
  %1307 = cast(%var_4041, dtype="float64") /* ty=Tensor[(7, 16, 6), float64] */;
  %1308 = atanh(%1307) /* ty=Tensor[(7, 16, 6), float64] */;
  %1309 = cast(%1308, dtype="float64") /* ty=Tensor[(7, 16, 6), float64] */;
  %1310 = shape_of(%var_4041, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1311 = cast(%var_4041, dtype="float64") /* ty=Tensor[(7, 16, 6), float64] */;
  %1312 = dyn.reshape(%1309, %1310, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  power(%1311, %1312) /* ty=Tensor[(7, 16, 6), float64] */
}

def @func_10445() -> Tensor[(6, 12, 2), int32] {
  %1313 = @func_5899() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %1313.0
}

def @func_13158() -> Tensor[(6, 12, 2), int32] {
  %1314 = @func_11461() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */;
  %1314.1
}

def @func_13671(%var_13630: Tensor[(140), float64]) -> (Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), uint8], Tensor[(6, 12, 2), uint8], Tensor[(6, 12, 2), int32], Tensor[(7, 4, 5), float64], Tensor[(140), float64]) {
  %1315 = @func_12224() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %1316 = @func_7805() /* ty=(Tensor[(6, 12, 2), uint8],) */;
  %1317 = @func_13017() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), uint8]) */;
  %1318 = @func_10807() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */;
  %1319 = cast(%var_13630, dtype="float64") /* ty=Tensor[(140), float64] */;
  %1320 = reshape(%1319, newshape=[7, 4, 5]) /* ty=Tensor[(7, 4, 5), float64] */;
  %1321 = @func_13445(%1320) /* ty=(Tensor[(7, 4, 5), float64], Tensor[(6, 12, 2), int32]) */;
  %1322 = %1315.0;
  %1323 = %1316.0;
  %1324 = %1317.2;
  %1325 = %1318.1;
  %1326 = %1321.0;
  (%1322, %1323, %1324, %1325, %1326, %var_13630)
}

def @func_10174() -> (Tensor[(756), int8],) {
  %1327 = @func_10131() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(756), int8], Tensor[(6, 12, 2), int32], Tensor[(9, 3, 13), float32], Tensor[(6, 12, 2), int32]) */;
  %1328 = %1327.1;
  (%1328,)
}

def @func_6480() -> (Tensor[(6, 12, 2), float32], Tensor[(6, 12, 2), int32]) {
  %1329 = @func_5899() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %1330 = %1329.0;
  %1331 = cast(%1330, dtype="float32") /* ty=Tensor[(6, 12, 2), float32] */;
  %1332 = erf(%1331) /* ty=Tensor[(6, 12, 2), float32] */;
  %1333 = @func_5512() /* ty=Tensor[(6, 12, 2), int32] */;
  (%1332, %1333)
}

def @func_10980() -> Tensor[(6, 12, 2), int32] {
  %1334 = @func_10863() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %1334.0
}

def @func_13701() -> (Tensor[(6, 12, 2), int32],) {
  %1335 = @func_8677() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %1336 = %1335.0;
  (%1336,)
}

def @func_9033() -> (Tensor[(6, 12, 2), int32],) {
  %1337 = @func_7551() /* ty=Tensor[(6, 12, 2), int32] */;
  (%1337,)
}

def @func_7441() -> (Tensor[(6, 12, 2), int32],) {
  %1338 = @func_7162() /* ty=Tensor[(6, 12, 2), int32] */;
  (%1338,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_10300(%var_10297: int64, %var_10298: Tensor[(1, 10, 12), int64], %var_10299: Tensor[(1408), int8]) -> (Tensor[(1, 10, 12), int64], Tensor[(?, 10, 12), bool], Tensor[(11, 8, 16), float64], Tensor[(1408), int8]) {
  @func_10295(%var_10297, %var_10298, %var_10299) /* ty=(Tensor[(1, 10, 12), int64], Tensor[(?, 10, 12), bool], Tensor[(11, 8, 16), float64], Tensor[(1408), int8]) */
}

def @func_12411() -> (Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) {
  %0 = @func_10863() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %1 = @func_8053() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %2 = %0.0;
  %3 = %1.0;
  (%2, %3)
}

def @func_13396() -> (Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), uint8], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), float32], Tensor[(6, 12, 2), int32]) {
  @func_13394() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), uint8], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), float32], Tensor[(6, 12, 2), int32]) */
}

def @func_13574() -> Tensor[(6, 12, 2), int32] {
  @func_13572() /* ty=Tensor[(6, 12, 2), int32] */
}

def @func_855(%var_853: int16, %var_854: Tensor[(60), int32]) -> (Tensor[(16, 13, 5), int16], Tensor[(3, 2, 10), int32], Tensor[(60), int32]) {
  %12 = fn (%var_823: int16, %var_831: Tensor[(60), int32]) -> (Tensor[(16, 13, 5), int16], Tensor[(3, 2, 10), int32], Tensor[(60), int32]) {
    %4 = cast(%var_823, dtype="int16") /* ty=int16 */;
    %5 = cast(meta[relay.Constant][0] /* ty=Tensor[(16, 13, 5), int16] */, dtype="int16") /* ty=Tensor[(16, 13, 5), int16] */;
    %6 = cast(%var_831, dtype="int32") /* ty=Tensor[(60), int32] */;
    %7 = cast(%var_831, dtype="int32") /* ty=Tensor[(60), int32] */;
    %8 = reshape(%6, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), int32] */;
    %9 = reshape(%7, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), int32] */;
    %10 = add(%4, %5) /* ty=Tensor[(16, 13, 5), int16] */;
    %11 = @func_10(%8, %9) /* ty=Tensor[(3, 2, 10), int32] */;
    (%10, %11, %var_831)
  };
  %12(%var_853, %var_854) /* ty=(Tensor[(16, 13, 5), int16], Tensor[(3, 2, 10), int32], Tensor[(60), int32]) */
}

def @func_14080() -> Tensor[(6, 12, 2), int32] {
  @func_14078() /* ty=Tensor[(6, 12, 2), int32] */
}

def @func_11349() -> Tensor[(6, 12, 2), int32] {
  %13 = fn () -> Tensor[(6, 12, 2), int32] {
    @func_5648() /* ty=Tensor[(6, 12, 2), int32] */
  };
  %13() /* ty=Tensor[(6, 12, 2), int32] */
}

def @func_6502(%var_6500: Tensor[(5, 12, 6), float32], %var_6501: Tensor[(352, 4), int8]) -> (Tensor[(5, 12, 6), float32], Tensor[(11, 8, 16), float64], Tensor[(352, 4), int8]) {
  @func_6498(%var_6500, %var_6501) /* ty=(Tensor[(5, 12, 6), float32], Tensor[(11, 8, 16), float64], Tensor[(352, 4), int8]) */
}

def @func_7147(%var_7146: Tensor[(9, 12, 13), float64]) -> (Tensor[(9, 12, 13), float64], Tensor[(9, 12, 13), bool]) {
  %33 = fn (%var_7093: Tensor[(9, 12, 13), float64]) -> (Tensor[(9, 12, 13), float64], Tensor[(9, 12, 13), bool]) {
    %14 = cast(%var_7093, dtype="float64") /* ty=Tensor[(9, 12, 13), float64] */;
    %15 = atanh(%14) /* ty=Tensor[(9, 12, 13), float64] */;
    %16 = cast(%15, dtype="float32") /* ty=Tensor[(9, 12, 13), float32] */;
    %17 = cosh(%16) /* ty=Tensor[(9, 12, 13), float32] */;
    %18 = cast(meta[relay.Constant][1] /* ty=Tensor[(9, 12, 13), float32] */, dtype="float64") /* ty=Tensor[(9, 12, 13), float64] */;
    %19 = shape_of(%17, dtype="int32") /* ty=Tensor[(3), int32] */;
    %20 = cast(%17, dtype="float64") /* ty=Tensor[(9, 12, 13), float64] */;
    %21 = dyn.reshape(%18, %19, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %22 = cast(meta[relay.Constant][1] /* ty=Tensor[(9, 12, 13), float32] */, dtype="float32") /* ty=Tensor[(9, 12, 13), float32] */;
    %23 = shape_of(%17, dtype="int32") /* ty=Tensor[(3), int32] */;
    %24 = cast(%17, dtype="float32") /* ty=Tensor[(9, 12, 13), float32] */;
    %25 = dyn.reshape(%22, %23, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %26 = floor_mod(%24, %25) /* ty=Tensor[(9, 12, 13), float32] */;
    %27 = cast(%15, dtype="bool") /* ty=Tensor[(9, 12, 13), bool] */;
    %28 = shape_of(%26, dtype="int32") /* ty=Tensor[(3), int32] */;
    %29 = cast(%26, dtype="bool") /* ty=Tensor[(9, 12, 13), bool] */;
    %30 = dyn.reshape(%27, %28, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %31 = mod(%20, %21) /* ty=Tensor[(9, 12, 13), float64] */;
    %32 = not_equal(%29, %30) /* ty=Tensor[(9, 12, 13), bool] */;
    (%31, %32)
  };
  %33(%var_7146) /* ty=(Tensor[(9, 12, 13), float64], Tensor[(9, 12, 13), bool]) */
}

def @func_6154() -> (Tensor[(6, 12, 2), int32],) {
  %34 = @func_5512() /* ty=Tensor[(6, 12, 2), int32] */;
  (%34,)
}

def @func_6307(%var_6304: Tensor[(756), int8], %var_6305: Tensor[(720), float64], %var_6306: Tensor[(24, 12), int8]) -> (Tensor[(6, 12, 2), int32], Tensor[(3, 4, 16), float64], Tensor[(192), float64], Tensor[(60), int32], Tensor[(64), float32], Tensor[(60, 1), int32], Tensor[(756), int8], Tensor[(720), float64], Tensor[(24, 12), int8], Tensor[(112, 1), bool], Tensor[(3, 9, 14), float64], Tensor[(378), uint8], Tensor[(6, 12, 2), int32], Tensor[(756), int8], Tensor[(252), float64]) {
  %68 = fn (%var_6268: Tensor[(756), int8], %var_6269: Tensor[(720), float64], %var_6270: Tensor[(24, 12), int8]) -> (Tensor[(6, 12, 2), int32], Tensor[(3, 4, 16), float64], Tensor[(192), float64], Tensor[(60), int32], Tensor[(64), float32], Tensor[(60, 1), int32], Tensor[(756), int8], Tensor[(720), float64], Tensor[(24, 12), int8], Tensor[(112, 1), bool], Tensor[(3, 9, 14), float64], Tensor[(378), uint8], Tensor[(6, 12, 2), int32], Tensor[(756), int8], Tensor[(252), float64]) {
    %35 = cast(meta[relay.Constant][2] /* ty=Tensor[(192), float64] */, dtype="float64") /* ty=Tensor[(192), float64] */;
    %36 = reshape(%35, newshape=[3, 4, 16]) /* ty=Tensor[(3, 4, 16), float64] */;
    %37 = cast(meta[relay.Constant][3] /* ty=Tensor[(64), float32] */, dtype="float32") /* ty=Tensor[(64), float32] */;
    %38 = cast(meta[relay.Constant][4] /* ty=Tensor[(60, 1), int32] */, dtype="int32") /* ty=Tensor[(60, 1), int32] */;
    %39 = cast(%var_6268, dtype="int8") /* ty=Tensor[(756), int8] */;
    %40 = @func_1144(%36) /* ty=Tensor[(3, 4, 16), float64] */;
    %41 = cast(%40, dtype="float64") /* ty=Tensor[(3, 4, 16), float64] */;
    %42 = cast(%var_6269, dtype="float64") /* ty=Tensor[(720), float64] */;
    %43 = cast(%var_6270, dtype="int8") /* ty=Tensor[(24, 12), int8] */;
    %44 = cast(meta[relay.Constant][5] /* ty=Tensor[(112, 1), bool] */, dtype="bool") /* ty=Tensor[(112, 1), bool] */;
    %45 = reshape(%37, newshape=[2, 4, 8]) /* ty=Tensor[(2, 4, 8), float32] */;
    %46 = reshape(%38, newshape=[15, 4]) /* ty=Tensor[(15, 4), int32] */;
    %47 = reshape(%39, newshape=[756]) /* ty=Tensor[(756), int8] */;
    %48 = reshape(%41, newshape=[192]) /* ty=Tensor[(192), float64] */;
    %49 = reshape(%42, newshape=[720]) /* ty=Tensor[(720), float64] */;
    %50 = reshape(%43, newshape=[1, 288]) /* ty=Tensor[(1, 288), int8] */;
    %51 = reshape(%44, newshape=[112]) /* ty=Tensor[(112), bool] */;
    %52 = @func_6060(%45, %46, %47, %48, %49, %50, %51) /* ty=(Tensor[(2, 4, 8), int32], Tensor[(3, 2, 10), int32], Tensor[(15, 4), int32], Tensor[(60), int32], Tensor[(784), uint32], Tensor[(756), int8], Tensor[(192), float64], Tensor[(252), float64], Tensor[(378), uint8], Tensor[(2, 4, 8), float64], Tensor[(15, 12, 4), float64], Tensor[(720), float64], Tensor[(60), int32], Tensor[(1, 288), int8], Tensor[(112), bool], Tensor[(16, 7, ?), uint64], Tensor[(8, 84), uint64], Tensor[(2, 4, 8), float64]) */;
    %53 = cast(meta[relay.Constant][6] /* ty=Tensor[(378), uint8] */, dtype="uint8") /* ty=Tensor[(378), uint8] */;
    %54 = %52.3;
    %55 = cast(%54, dtype="int32") /* ty=Tensor[(60), int32] */;
    %56 = reshape(%53, newshape=[3, 9, 14]) /* ty=Tensor[(3, 9, 14), uint8] */;
    %57 = reshape(%55, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), int32] */;
    %58 = @func_206(%56, %57) /* ty=(Tensor[(60), int32], Tensor[(3, 2, 10), bool], Tensor[(3, 2, 10), int32], Tensor[(3, 9, 14), float64], Tensor[(3, 2, 10), int32]) */;
    %59 = cast(meta[relay.Constant][7] /* ty=Tensor[(252), float64] */, dtype="float64") /* ty=Tensor[(252), float64] */;
    %60 = cast(%var_6268, dtype="int8") /* ty=Tensor[(756), int8] */;
    %61 = reshape(%59, newshape=[9, 4, 7]) /* ty=Tensor[(9, 4, 7), float64] */;
    %62 = reshape(%60, newshape=[756]) /* ty=Tensor[(756), int8] */;
    %63 = @func_2095(%61, %62) /* ty=(Tensor[(60), int32], Tensor[(756), int8], Tensor[(9, 4, 7), bool]) */;
    %64 = @func_5648() /* ty=Tensor[(6, 12, 2), int32] */;
    %65 = %58.3;
    %66 = @func_5648() /* ty=Tensor[(6, 12, 2), int32] */;
    %67 = %63.1;
    (%64, %40, meta[relay.Constant][2] /* ty=Tensor[(192), float64] */, %54, meta[relay.Constant][3] /* ty=Tensor[(64), float32] */, meta[relay.Constant][4] /* ty=Tensor[(60, 1), int32] */, %var_6268, %var_6269, %var_6270, meta[relay.Constant][5] /* ty=Tensor[(112, 1), bool] */, %65, meta[relay.Constant][6] /* ty=Tensor[(378), uint8] */, %66, %67, meta[relay.Constant][7] /* ty=Tensor[(252), float64] */)
  };
  %68(%var_6304, %var_6305, %var_6306) /* ty=(Tensor[(6, 12, 2), int32], Tensor[(3, 4, 16), float64], Tensor[(192), float64], Tensor[(60), int32], Tensor[(64), float32], Tensor[(60, 1), int32], Tensor[(756), int8], Tensor[(720), float64], Tensor[(24, 12), int8], Tensor[(112, 1), bool], Tensor[(3, 9, 14), float64], Tensor[(378), uint8], Tensor[(6, 12, 2), int32], Tensor[(756), int8], Tensor[(252), float64]) */
}

def @func_9402() -> (Tensor[(6, 12, 2), uint8],) {
  @func_9400() /* ty=(Tensor[(6, 12, 2), uint8],) */
}

def @func_13017() -> (Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), uint8]) {
  %69 = @func_9298() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */;
  %70 = @func_7805() /* ty=(Tensor[(6, 12, 2), uint8],) */;
  %71 = %69.1;
  %72 = @func_10997() /* ty=Tensor[(6, 12, 2), int32] */;
  %73 = %70.0;
  (%71, %72, %73)
}

def @func_8467(%var_8466: Tensor[(7, 4, 3), float32]) -> (Tensor[(7, 4, 3), float32],) {
  %78 = fn (%var_8457: Tensor[(7, 4, 3), float32]) -> (Tensor[(7, 4, 3), float32],) {
    %74 = cast(%var_8457, dtype="float32") /* ty=Tensor[(7, 4, 3), float32] */;
    %75 = cos(%74) /* ty=Tensor[(7, 4, 3), float32] */;
    %76 = cast(%75, dtype="float32") /* ty=Tensor[(7, 4, 3), float32] */;
    %77 = acosh(%76) /* ty=Tensor[(7, 4, 3), float32] */;
    (%77,)
  };
  %78(%var_8466) /* ty=(Tensor[(7, 4, 3), float32],) */
}

def @func_12712(%var_12683: Tensor[(1350), int32], %var_12697: Tensor[(140), float32]) -> (Tensor[(6, 12, 2), int32], Tensor[(12, 7, 5), float32], Tensor[(3, 4, 16), float64], Tensor[(192), float64], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32], Tensor[(15, 6, 15), float32], Tensor[(1350), int32], Tensor[(4, 5, 7), float32], Tensor[(140), float32]) {
  %79 = @func_6529() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %80 = @func_9837() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(12, 7, 5), float32], Tensor[(60), float32], Tensor[(5, 84), float32]) */;
  %81 = %80.1;
  %82 = cast(%81, dtype="float32") /* ty=Tensor[(12, 7, 5), float32] */;
  %83 = cast(meta[relay.Constant][8] /* ty=Tensor[(192), float64] */, dtype="float64") /* ty=Tensor[(192), float64] */;
  %84 = reshape(%83, newshape=[3, 4, 16]) /* ty=Tensor[(3, 4, 16), float64] */;
  %85 = @func_7941() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %86 = cast(%var_12683, dtype="int32") /* ty=Tensor[(1350), int32] */;
  %87 = cast(%var_12683, dtype="int32") /* ty=Tensor[(1350), int32] */;
  %88 = reshape(%86, newshape=[15, 6, 15]) /* ty=Tensor[(15, 6, 15), int32] */;
  %89 = reshape(%87, newshape=[15, 6, 15]) /* ty=Tensor[(15, 6, 15), int32] */;
  %90 = cast(%var_12697, dtype="float32") /* ty=Tensor[(140), float32] */;
  %91 = cast(%var_12697, dtype="float32") /* ty=Tensor[(140), float32] */;
  %92 = reshape(%90, newshape=[4, 5, 7]) /* ty=Tensor[(4, 5, 7), float32] */;
  %93 = reshape(%91, newshape=[4, 5, 7]) /* ty=Tensor[(4, 5, 7), float32] */;
  %94 = @func_1954(%92, %93) /* ty=(Tensor[(4, 5, 7), float32], Tensor[(4, 5, 7), float64], Tensor[(2, 96), float64], Tensor[(1408), int8]) */;
  %95 = %79.0;
  %96 = acosh(%82) /* ty=Tensor[(12, 7, 5), float32] */;
  %97 = @func_1144(%84) /* ty=Tensor[(3, 4, 16), float64] */;
  %98 = @func_11348() /* ty=Tensor[(6, 12, 2), int32] */;
  %99 = %85.0;
  %100 = @func_2936(%88, %89) /* ty=Tensor[(15, 6, 15), float32] */;
  %101 = %94.0;
  (%95, %96, %97, meta[relay.Constant][8] /* ty=Tensor[(192), float64] */, %98, %99, %100, %var_12683, %101, %var_12697)
}

def @func_7509() -> (Tensor[(6, 12, 2), uint8],) {
  @func_7507() /* ty=(Tensor[(6, 12, 2), uint8],) */
}

def @func_14192(%var_14189: Tensor[(720), float64], %var_14190: int64, %var_14191: Tensor[(288), int8]) -> (Tensor[(13, 10, 10), float32], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32], Tensor[(140), float64], Tensor[(6, 12, 2), int32], Tensor[(756), int8], Tensor[(378, 2), int8], Tensor[(720), float64], Tensor[(6, 12, 2), float32], Tensor[(6, 12, 2), int32], Tensor[(?, 10, 12), bool], int64, Tensor[(3, 40), int64], Tensor[(1408), int8], Tensor[(6, 12, 2), int32], Tensor[(378), uint8], Tensor[(288), int8]) {
  @func_14187(%var_14189, %var_14190, %var_14191) /* ty=(Tensor[(13, 10, 10), float32], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32], Tensor[(140), float64], Tensor[(6, 12, 2), int32], Tensor[(756), int8], Tensor[(378, 2), int8], Tensor[(720), float64], Tensor[(6, 12, 2), float32], Tensor[(6, 12, 2), int32], Tensor[(?, 10, 12), bool], int64, Tensor[(3, 40), int64], Tensor[(1408), int8], Tensor[(6, 12, 2), int32], Tensor[(378), uint8], Tensor[(288), int8]) */
}

def @func_14187(%var_14123: Tensor[(720), float64], %var_14152: int64, %var_14174: Tensor[(288), int8]) -> (Tensor[(13, 10, 10), float32], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32], Tensor[(140), float64], Tensor[(6, 12, 2), int32], Tensor[(756), int8], Tensor[(378, 2), int8], Tensor[(720), float64], Tensor[(6, 12, 2), float32], Tensor[(6, 12, 2), int32], Tensor[(?, 10, 12), bool], int64, Tensor[(3, 40), int64], Tensor[(1408), int8], Tensor[(6, 12, 2), int32], Tensor[(378), uint8], Tensor[(288), int8]) {
  %102 = @func_11271() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(1300), uint16], int8, Tensor[(16, 1, 11), float32], Tensor[(176), float32], Tensor[(13, 10, 10), float32]) */;
  %103 = @func_9298() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */;
  %104 = cast(meta[relay.Constant][9] /* ty=Tensor[(140), float64] */, dtype="float64") /* ty=Tensor[(140), float64] */;
  %105 = reshape(%104, newshape=[7, 4, 5]) /* ty=Tensor[(7, 4, 5), float64] */;
  %106 = @func_13445(%105) /* ty=(Tensor[(7, 4, 5), float64], Tensor[(6, 12, 2), int32]) */;
  %107 = @func_13394() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), uint8], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), float32], Tensor[(6, 12, 2), int32]) */;
  %108 = cast(meta[relay.Constant][10] /* ty=Tensor[(378, 2), int8] */, dtype="int8") /* ty=Tensor[(378, 2), int8] */;
  %109 = cast(%var_14123, dtype="float64") /* ty=Tensor[(720), float64] */;
  %110 = reshape(%108, newshape=[756]) /* ty=Tensor[(756), int8] */;
  %111 = reshape(%109, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %112 = @func_11847(%110, %111) /* ty=(Tensor[(6, 12, 2), int32], Tensor[(60), int32], Tensor[(756), int8], Tensor[(720), float64], Tensor[(288), int8]) */;
  %113 = %103.1;
  %114 = cast(%113, dtype="uint8") /* ty=Tensor[(6, 12, 2), uint8] */;
  %115 = reshape(%114, newshape=[6, 12, 2]) /* ty=Tensor[(6, 12, 2), uint8] */;
  %116 = @func_7912(%115) /* ty=(Tensor[(6, 12, 2), float32], Tensor[(6, 12, 2), float32]) */;
  %117 = @func_11742() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %118 = cast(%var_14152, dtype="int64") /* ty=int64 */;
  %119 = cast(meta[relay.Constant][11] /* ty=Tensor[(3, 40), int64] */, dtype="int64") /* ty=Tensor[(3, 40), int64] */;
  %120 = cast(meta[relay.Constant][12] /* ty=Tensor[(1408), int8] */, dtype="int8") /* ty=Tensor[(1408), int8] */;
  %121 = reshape(%118, newshape=[]) /* ty=int64 */;
  %122 = reshape(%119, newshape=[1, 10, 12]) /* ty=Tensor[(1, 10, 12), int64] */;
  %123 = reshape(%120, newshape=[1408]) /* ty=Tensor[(1408), int8] */;
  %124 = @func_10295(%121, %122, %123) /* ty=(Tensor[(1, 10, 12), int64], Tensor[(?, 10, 12), bool], Tensor[(11, 8, 16), float64], Tensor[(1408), int8]) */;
  %125 = @func_13916() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %126 = cast(meta[relay.Constant][10] /* ty=Tensor[(378, 2), int8] */, dtype="int8") /* ty=Tensor[(378, 2), int8] */;
  %127 = cast(%var_14123, dtype="float64") /* ty=Tensor[(720), float64] */;
  %128 = cast(%var_14174, dtype="int8") /* ty=Tensor[(288), int8] */;
  %129 = reshape(%126, newshape=[756]) /* ty=Tensor[(756), int8] */;
  %130 = reshape(%127, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %131 = reshape(%128, newshape=[24, 12]) /* ty=Tensor[(24, 12), int8] */;
  %132 = @func_6303(%129, %130, %131) /* ty=(Tensor[(6, 12, 2), int32], Tensor[(3, 4, 16), float64], Tensor[(192), float64], Tensor[(60), int32], Tensor[(64), float32], Tensor[(60, 1), int32], Tensor[(756), int8], Tensor[(720), float64], Tensor[(24, 12), int8], Tensor[(112, 1), bool], Tensor[(3, 9, 14), float64], Tensor[(378), uint8], Tensor[(6, 12, 2), int32], Tensor[(756), int8], Tensor[(252), float64]) */;
  %133 = %102.5;
  %134 = @func_12812() /* ty=Tensor[(6, 12, 2), int32] */;
  %135 = %106.1;
  %136 = %107.4;
  %137 = %112.2;
  %138 = %116.0;
  %139 = %117.0;
  %140 = %124.1;
  %141 = %125.0;
  %142 = %132.11;
  (%133, %134, %113, %135, meta[relay.Constant][9] /* ty=Tensor[(140), float64] */, %136, %137, meta[relay.Constant][10] /* ty=Tensor[(378, 2), int8] */, %var_14123, %138, %139, %140, %var_14152, meta[relay.Constant][11] /* ty=Tensor[(3, 40), int64] */, meta[relay.Constant][12] /* ty=Tensor[(1408), int8] */, %141, %142, %var_14174)
}

def @func_2936(%var_2927: Tensor[(15, 6, 15), int32], %var_2928: Tensor[(15, 6, 15), int32]) -> Tensor[(15, 6, 15), float32] {
  %143 = cast(%var_2928, dtype="bool") /* ty=Tensor[(15, 6, 15), bool] */;
  %144 = shape_of(%var_2927, dtype="int32") /* ty=Tensor[(3), int32] */;
  %145 = cast(%var_2927, dtype="bool") /* ty=Tensor[(15, 6, 15), bool] */;
  %146 = dyn.reshape(%143, %144, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %147 = greater_equal(%145, %146) /* ty=Tensor[(15, 6, 15), bool] */;
  %148 = cast(%var_2928, dtype="float32") /* ty=Tensor[(15, 6, 15), float32] */;
  %149 = shape_of(%147, dtype="int32") /* ty=Tensor[(3), int32] */;
  %150 = cast(%147, dtype="float32") /* ty=Tensor[(15, 6, 15), float32] */;
  %151 = dyn.reshape(%148, %149, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  power(%150, %151) /* ty=Tensor[(15, 6, 15), float32] */
}

def @func_5513() -> Tensor[(6, 12, 2), int32] {
  %156 = fn () -> Tensor[(6, 12, 2), int32] {
    %152 = cast(meta[relay.Constant][14] /* ty=Tensor[(6, 12, 2), int32] */, dtype="int32") /* ty=Tensor[(6, 12, 2), int32] */;
    %153 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(6, 12, 2), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %154 = cast(meta[relay.Constant][13] /* ty=Tensor[(6, 12, 2), int32] */, dtype="int32") /* ty=Tensor[(6, 12, 2), int32] */;
    %155 = dyn.reshape(%152, %153, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    right_shift(%154, %155) /* ty=Tensor[(6, 12, 2), int32] */
  };
  %156() /* ty=Tensor[(6, 12, 2), int32] */
}

def @func_10447() -> Tensor[(6, 12, 2), int32] {
  @func_10445() /* ty=Tensor[(6, 12, 2), int32] */
}

def @func_12744() -> Tensor[(6, 12, 2), int32] {
  @func_12742() /* ty=Tensor[(6, 12, 2), int32] */
}

def @func_14078() -> Tensor[(6, 12, 2), int32] {
  %157 = @func_12411() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */;
  %157.1
}

def @func_9149() -> (Tensor[(6, 12, 2), int32],) {
  @func_9147() /* ty=(Tensor[(6, 12, 2), int32],) */
}

def @func_13703() -> (Tensor[(6, 12, 2), int32],) {
  @func_13701() /* ty=(Tensor[(6, 12, 2), int32],) */
}

def @func_8293() -> (Tensor[(6, 12, 2), uint8],) {
  %158 = @func_7805() /* ty=(Tensor[(6, 12, 2), uint8],) */;
  %159 = %158.0;
  (%159,)
}

def @func_9728() -> Tensor[(6, 12, 2), int32] {
  %160 = fn () -> Tensor[(6, 12, 2), int32] {
    @func_7551() /* ty=Tensor[(6, 12, 2), int32] */
  };
  %160() /* ty=Tensor[(6, 12, 2), int32] */
}

def @func_11938(%var_11928: Tensor[(192), float64]) -> (Tensor[(6, 12, 2), uint8], Tensor[(6, 12, 2), uint8], Tensor[(15, 2, 10), float32], Tensor[(300), float32], Tensor[(192), float64], Tensor[(378), uint8]) {
  %161 = @func_7637() /* ty=(Tensor[(6, 12, 2), uint8], Tensor[(6, 12, 2), int32]) */;
  %162 = @func_7805() /* ty=(Tensor[(6, 12, 2), uint8],) */;
  %163 = cast(meta[relay.Constant][15] /* ty=Tensor[(300), float32] */, dtype="float32") /* ty=Tensor[(300), float32] */;
  %164 = cast(%var_11928, dtype="float64") /* ty=Tensor[(192), float64] */;
  %165 = cast(meta[relay.Constant][16] /* ty=Tensor[(378), uint8] */, dtype="uint8") /* ty=Tensor[(378), uint8] */;
  %166 = reshape(%163, newshape=[15, 2, 10]) /* ty=Tensor[(15, 2, 10), float32] */;
  %167 = reshape(%164, newshape=[48, 4]) /* ty=Tensor[(48, 4), float64] */;
  %168 = reshape(%165, newshape=[126, 3]) /* ty=Tensor[(126, 3), uint8] */;
  %169 = @func_4826(%166, %167, %168) /* ty=(Tensor[(15, 2, 10), float32], Tensor[(3, 4, 16), float64], Tensor[(48, 4), float64], Tensor[(60), uint16], Tensor[(3, 2, 10), int32], Tensor[(126, 3), uint8], Tensor[(11, 8, 16), float64], Tensor[(1408), int8], Tensor[(3, 2, 10), float32], Tensor[(3, 2, 10), int32], Tensor[(756), int8], Tensor[(1408), int8], Tensor[(140), float32]) */;
  %170 = %161.0;
  %171 = %162.0;
  %172 = %169.0;
  (%170, %171, %172, meta[relay.Constant][15] /* ty=Tensor[(300), float32] */, %var_11928, meta[relay.Constant][16] /* ty=Tensor[(378), uint8] */)
}

def @func_14440(%var_14425: Tensor[(14, 11, 7), float32], %var_14435: uint16, %var_14436: Tensor[(56), uint16]) -> (Tensor[(14, 11, 7), float32], Tensor[(8, 7, 1), float64], uint16, Tensor[(56), uint16]) {
  %173 = cast(%var_14425, dtype="float32") /* ty=Tensor[(14, 11, 7), float32] */;
  %174 = cast(%var_14435, dtype="uint16") /* ty=uint16 */;
  %175 = cast(%var_14436, dtype="uint16") /* ty=Tensor[(56), uint16] */;
  %176 = reshape(%174, newshape=[]) /* ty=uint16 */;
  %177 = reshape(%175, newshape=[8, 7, 1]) /* ty=Tensor[(8, 7, 1), uint16] */;
  %178 = log10(%173) /* ty=Tensor[(14, 11, 7), float32] */;
  %179 = @func_10732(%176, %177) /* ty=Tensor[(8, 7, 1), float64] */;
  (%178, %179, %var_14435, %var_14436)
}

def @func_13673(%var_13672: Tensor[(140), float64]) -> (Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), uint8], Tensor[(6, 12, 2), uint8], Tensor[(6, 12, 2), int32], Tensor[(7, 4, 5), float64], Tensor[(140), float64]) {
  %192 = fn (%var_13630: Tensor[(140), float64]) -> (Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), uint8], Tensor[(6, 12, 2), uint8], Tensor[(6, 12, 2), int32], Tensor[(7, 4, 5), float64], Tensor[(140), float64]) {
    %180 = @func_12224() /* ty=(Tensor[(6, 12, 2), int32],) */;
    %181 = @func_7805() /* ty=(Tensor[(6, 12, 2), uint8],) */;
    %182 = @func_13017() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), uint8]) */;
    %183 = @func_10807() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */;
    %184 = cast(%var_13630, dtype="float64") /* ty=Tensor[(140), float64] */;
    %185 = reshape(%184, newshape=[7, 4, 5]) /* ty=Tensor[(7, 4, 5), float64] */;
    %186 = @func_13445(%185) /* ty=(Tensor[(7, 4, 5), float64], Tensor[(6, 12, 2), int32]) */;
    %187 = %180.0;
    %188 = %181.0;
    %189 = %182.2;
    %190 = %183.1;
    %191 = %186.0;
    (%187, %188, %189, %190, %191, %var_13630)
  };
  %192(%var_13672) /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), uint8], Tensor[(6, 12, 2), uint8], Tensor[(6, 12, 2), int32], Tensor[(7, 4, 5), float64], Tensor[(140), float64]) */
}

def @func_6911() -> (Tensor[(6, 12, 2), int32],) {
  %195 = fn () -> (Tensor[(6, 12, 2), int32],) {
    %193 = @func_6480() /* ty=(Tensor[(6, 12, 2), float32], Tensor[(6, 12, 2), int32]) */;
    %194 = %193.1;
    (%194,)
  };
  %195() /* ty=(Tensor[(6, 12, 2), int32],) */
}

def @func_7297(%var_7217: Tensor[(1404), float64], %var_7236: Tensor[(30, 2), int32], %var_7237: Tensor[(8, 60), float32], %var_7274: Tensor[(252), float64], %var_7280: Tensor[(720), float64]) -> (Tensor[(6, 12, 2), float32], Tensor[(1404), float64], Tensor[(15, 6, 15), float32], Tensor[(1350), int32], Tensor[(288), int8], Tensor[(30, 2), int32], Tensor[(8, 60), float32], Tensor[(8, 24), float64], Tensor[(9, 12, 13), float32], Tensor[(60), int32], Tensor[(252), float64], Tensor[(54, 14), int8], Tensor[(64), float32], Tensor[(720), float64]) {
  %196 = @func_6480() /* ty=(Tensor[(6, 12, 2), float32], Tensor[(6, 12, 2), int32]) */;
  %197 = cast(meta[relay.Constant][17] /* ty=Tensor[(1350), int32] */, dtype="int32") /* ty=Tensor[(1350), int32] */;
  %198 = cast(meta[relay.Constant][17] /* ty=Tensor[(1350), int32] */, dtype="int32") /* ty=Tensor[(1350), int32] */;
  %199 = reshape(%197, newshape=[15, 6, 15]) /* ty=Tensor[(15, 6, 15), int32] */;
  %200 = reshape(%198, newshape=[15, 6, 15]) /* ty=Tensor[(15, 6, 15), int32] */;
  %201 = cast(%var_7236, dtype="int32") /* ty=Tensor[(30, 2), int32] */;
  %202 = cast(%var_7237, dtype="float32") /* ty=Tensor[(8, 60), float32] */;
  %203 = cast(meta[relay.Constant][18] /* ty=Tensor[(8, 24), float64] */, dtype="float64") /* ty=Tensor[(8, 24), float64] */;
  %204 = reshape(%201, newshape=[60]) /* ty=Tensor[(60), int32] */;
  %205 = reshape(%202, newshape=[8, 60]) /* ty=Tensor[(8, 60), float32] */;
  %206 = reshape(%203, newshape=[4, 48]) /* ty=Tensor[(4, 48), float64] */;
  %207 = @func_7016(%204, %205, %206) /* ty=(Tensor[(6, 12, 2), int32], Tensor[(16, 7, ?), uint64], Tensor[(112), bool], Tensor[(6, 12, 2), int32], Tensor[(16, 13, 5), int16], int16, Tensor[(60), int32], Tensor[(6, 12, 2), int32], Tensor[(60), int32], Tensor[(288), int8], Tensor[(5, 12, 8), float32], Tensor[(8, 60), float32], Tensor[(4, 48), float64], Tensor[(176), float32], Tensor[(300), float32], Tensor[(6, 12, 2), int32]) */;
  %208 = cast(%var_7217, dtype="float64") /* ty=Tensor[(1404), float64] */;
  %209 = reshape(%208, newshape=[9, 12, 13]) /* ty=Tensor[(9, 12, 13), float64] */;
  %210 = @func_7145(%209) /* ty=(Tensor[(9, 12, 13), float64], Tensor[(9, 12, 13), bool]) */;
  %211 = %210.1;
  %212 = cast(%211, dtype="float32") /* ty=Tensor[(9, 12, 13), float32] */;
  %213 = cast(%var_7274, dtype="float64") /* ty=Tensor[(252), float64] */;
  %214 = cast(meta[relay.Constant][19] /* ty=Tensor[(54, 14), int8] */, dtype="int8") /* ty=Tensor[(54, 14), int8] */;
  %215 = reshape(%213, newshape=[9, 4, 7]) /* ty=Tensor[(9, 4, 7), float64] */;
  %216 = reshape(%214, newshape=[756]) /* ty=Tensor[(756), int8] */;
  %217 = @func_2095(%215, %216) /* ty=(Tensor[(60), int32], Tensor[(756), int8], Tensor[(9, 4, 7), bool]) */;
  %218 = cast(meta[relay.Constant][19] /* ty=Tensor[(54, 14), int8] */, dtype="int8") /* ty=Tensor[(54, 14), int8] */;
  %219 = cast(%var_7280, dtype="float64") /* ty=Tensor[(720), float64] */;
  %220 = %207.9;
  %221 = cast(%220, dtype="int8") /* ty=Tensor[(288), int8] */;
  %222 = reshape(%218, newshape=[756]) /* ty=Tensor[(756), int8] */;
  %223 = reshape(%219, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %224 = reshape(%221, newshape=[24, 12]) /* ty=Tensor[(24, 12), int8] */;
  %225 = @func_6303(%222, %223, %224) /* ty=(Tensor[(6, 12, 2), int32], Tensor[(3, 4, 16), float64], Tensor[(192), float64], Tensor[(60), int32], Tensor[(64), float32], Tensor[(60, 1), int32], Tensor[(756), int8], Tensor[(720), float64], Tensor[(24, 12), int8], Tensor[(112, 1), bool], Tensor[(3, 9, 14), float64], Tensor[(378), uint8], Tensor[(6, 12, 2), int32], Tensor[(756), int8], Tensor[(252), float64]) */;
  %226 = %196.0;
  %227 = @func_2936(%199, %200) /* ty=Tensor[(15, 6, 15), float32] */;
  %228 = sinh(%212) /* ty=Tensor[(9, 12, 13), float32] */;
  %229 = %217.0;
  %230 = %225.4;
  (%226, %var_7217, %227, meta[relay.Constant][17] /* ty=Tensor[(1350), int32] */, %220, %var_7236, %var_7237, meta[relay.Constant][18] /* ty=Tensor[(8, 24), float64] */, %228, %229, %var_7274, meta[relay.Constant][19] /* ty=Tensor[(54, 14), int8] */, %230, %var_7280)
}

def @func_7942() -> (Tensor[(6, 12, 2), int32],) {
  %233 = fn () -> (Tensor[(6, 12, 2), int32],) {
    %231 = @func_6551() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */;
    %232 = %231.1;
    (%232,)
  };
  %233() /* ty=(Tensor[(6, 12, 2), int32],) */
}

def @func_11579() -> Tensor[(6, 12, 2), int32] {
  %235 = fn () -> Tensor[(6, 12, 2), int32] {
    %234 = @func_6154() /* ty=(Tensor[(6, 12, 2), int32],) */;
    %234.0
  };
  %235() /* ty=Tensor[(6, 12, 2), int32] */
}

def @func_6482() -> (Tensor[(6, 12, 2), float32], Tensor[(6, 12, 2), int32]) {
  @func_6480() /* ty=(Tensor[(6, 12, 2), float32], Tensor[(6, 12, 2), int32]) */
}

def @func_13701() -> (Tensor[(6, 12, 2), int32],) {
  %236 = @func_8677() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %237 = %236.0;
  (%237,)
}

def @func_11684(%var_11682: Tensor[(30, 2), int32]) -> (Tensor[(6, 12, 2), int32], Tensor[(3, 9, 14), float64], Tensor[(378), uint8], Tensor[(30, 2), int32]) {
  @func_11681(%var_11682) /* ty=(Tensor[(6, 12, 2), int32], Tensor[(3, 9, 14), float64], Tensor[(378), uint8], Tensor[(30, 2), int32]) */
}

def @func_14677() -> Tensor[(6, 12, 2), float64] {
  %239 = fn () -> Tensor[(6, 12, 2), float64] {
    %238 = @func_10539() /* ty=(Tensor[(6, 12, 2), float64],) */;
    %238.0
  };
  %239() /* ty=Tensor[(6, 12, 2), float64] */
}

def @func_6770(%var_6767: Tensor[(14, 15, 1), float64], %var_6768: Tensor[(9, 84), int8], %var_6769: Tensor[(252), float64]) -> (Tensor[(14, 15, 1), float64], Tensor[(9, 84), int8], Tensor[(1, 784), uint32], Tensor[(15, 4), int32], Tensor[(9, 84), int8], Tensor[(192), float64], Tensor[(252), float64], Tensor[(378), uint8], Tensor[(6, 12, 2), int32]) {
  @func_6765(%var_6767, %var_6768, %var_6769) /* ty=(Tensor[(14, 15, 1), float64], Tensor[(9, 84), int8], Tensor[(1, 784), uint32], Tensor[(15, 4), int32], Tensor[(9, 84), int8], Tensor[(192), float64], Tensor[(252), float64], Tensor[(378), uint8], Tensor[(6, 12, 2), int32]) */
}

def @func_1792(%var_1790: Tensor[(7, 12, 9), int8], %var_1791: Tensor[(7, 12, 9), int8]) -> (Tensor[(7, 12, 9), int8], Tensor[(3, 2, 10), int32], Tensor[(378), uint8], Tensor[(60), int32]) {
  %251 = fn (%var_1768: Tensor[(7, 12, 9), int8], %var_1769: Tensor[(7, 12, 9), int8]) -> (Tensor[(7, 12, 9), int8], Tensor[(3, 2, 10), int32], Tensor[(378), uint8], Tensor[(60), int32]) {
    %240 = cast(%var_1769, dtype="int8") /* ty=Tensor[(7, 12, 9), int8] */;
    %241 = shape_of(%var_1768, dtype="int32") /* ty=Tensor[(3), int32] */;
    %242 = cast(%var_1768, dtype="int8") /* ty=Tensor[(7, 12, 9), int8] */;
    %243 = dyn.reshape(%240, %241, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %244 = cast(meta[relay.Constant][20] /* ty=Tensor[(378), uint8] */, dtype="uint8") /* ty=Tensor[(378), uint8] */;
    %245 = cast(meta[relay.Constant][21] /* ty=Tensor[(60), int32] */, dtype="int32") /* ty=Tensor[(60), int32] */;
    %246 = reshape(%244, newshape=[3, 9, 14]) /* ty=Tensor[(3, 9, 14), uint8] */;
    %247 = reshape(%245, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), int32] */;
    %248 = @func_206(%246, %247) /* ty=(Tensor[(60), int32], Tensor[(3, 2, 10), bool], Tensor[(3, 2, 10), int32], Tensor[(3, 9, 14), float64], Tensor[(3, 2, 10), int32]) */;
    %249 = bitwise_xor(%242, %243) /* ty=Tensor[(7, 12, 9), int8] */;
    %250 = %248.4;
    (%249, %250, meta[relay.Constant][20] /* ty=Tensor[(378), uint8] */, meta[relay.Constant][21] /* ty=Tensor[(60), int32] */)
  };
  %251(%var_1790, %var_1791) /* ty=(Tensor[(7, 12, 9), int8], Tensor[(3, 2, 10), int32], Tensor[(378), uint8], Tensor[(60), int32]) */
}

def @func_14057() -> (Tensor[(9, 3, 13), bool],) {
  %254 = fn () -> (Tensor[(9, 3, 13), bool],) {
    %252 = @func_10947() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(9, 3, 13), bool], Tensor[(756), int8]) */;
    %253 = %252.1;
    (%253,)
  };
  %254() /* ty=(Tensor[(9, 3, 13), bool],) */
}

def @func_14039(%var_14018: Tensor[(6, 12, 2), int32]) -> (Tensor[(6, 12, 2), uint32],) {
  %255 = @func_8338() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %256 = %255.0;
  %257 = cast(%var_14018, dtype="uint32") /* ty=Tensor[(6, 12, 2), uint32] */;
  %258 = shape_of(%256, dtype="int32") /* ty=Tensor[(3), int32] */;
  %259 = cast(%256, dtype="uint32") /* ty=Tensor[(6, 12, 2), uint32] */;
  %260 = dyn.reshape(%257, %258, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %261 = maximum(%259, %260) /* ty=Tensor[(6, 12, 2), uint32] */;
  (%261,)
}

def @func_6765(%var_6738: Tensor[(14, 15, 1), float64], %var_6753: Tensor[(9, 84), int8], %var_6755: Tensor[(252), float64]) -> (Tensor[(14, 15, 1), float64], Tensor[(9, 84), int8], Tensor[(1, 784), uint32], Tensor[(15, 4), int32], Tensor[(9, 84), int8], Tensor[(192), float64], Tensor[(252), float64], Tensor[(378), uint8], Tensor[(6, 12, 2), int32]) {
  %262 = cast(%var_6738, dtype="float64") /* ty=Tensor[(14, 15, 1), float64] */;
  %263 = cast(meta[relay.Constant][22] /* ty=Tensor[(1, 784), uint32] */, dtype="uint32") /* ty=Tensor[(1, 784), uint32] */;
  %264 = cast(meta[relay.Constant][22] /* ty=Tensor[(1, 784), uint32] */, dtype="uint32") /* ty=Tensor[(1, 784), uint32] */;
  %265 = cast(meta[relay.Constant][23] /* ty=Tensor[(15, 4), int32] */, dtype="int32") /* ty=Tensor[(15, 4), int32] */;
  %266 = cast(%var_6753, dtype="int8") /* ty=Tensor[(9, 84), int8] */;
  %267 = cast(meta[relay.Constant][24] /* ty=Tensor[(192), float64] */, dtype="float64") /* ty=Tensor[(192), float64] */;
  %268 = cast(%var_6755, dtype="float64") /* ty=Tensor[(252), float64] */;
  %269 = cast(meta[relay.Constant][25] /* ty=Tensor[(378), uint8] */, dtype="uint8") /* ty=Tensor[(378), uint8] */;
  %270 = reshape(%263, newshape=[8, 7, 14]) /* ty=Tensor[(8, 7, 14), uint32] */;
  %271 = reshape(%264, newshape=[8, 7, 14]) /* ty=Tensor[(8, 7, 14), uint32] */;
  %272 = reshape(%265, newshape=[60]) /* ty=Tensor[(60), int32] */;
  %273 = reshape(%266, newshape=[9, 84]) /* ty=Tensor[(9, 84), int8] */;
  %274 = reshape(%267, newshape=[24, 8]) /* ty=Tensor[(24, 8), float64] */;
  %275 = reshape(%268, newshape=[1, 252]) /* ty=Tensor[(1, 252), float64] */;
  %276 = reshape(%269, newshape=[378]) /* ty=Tensor[(378), uint8] */;
  %277 = @func_2765(%270, %271, %272, %273, %274, %275, %276) /* ty=(Tensor[(60), int32], Tensor[(288), int8], Tensor[(112), bool], Tensor[(60), int32], Tensor[(8, 7, 14), float64], Tensor[(3, 2, 10), int32], Tensor[(9, 84), int8], Tensor[(3, 4, 16), float64], Tensor[(24, 8), float64], Tensor[(3, 4, 16), float64], Tensor[(60), int32], Tensor[(1, 252), float64], Tensor[(3, 2, 10), int32], Tensor[(378), uint8], Tensor[(60), int32], int16, Tensor[(16, 7, ?), uint64], Tensor[(11, 8, 16), int8], Tensor[(2, 704), int8]) */;
  %278 = @func_5659() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %279 = sin(%262) /* ty=Tensor[(14, 15, 1), float64] */;
  %280 = %277.6;
  %281 = %278.0;
  (%279, %280, meta[relay.Constant][22] /* ty=Tensor[(1, 784), uint32] */, meta[relay.Constant][23] /* ty=Tensor[(15, 4), int32] */, %var_6753, meta[relay.Constant][24] /* ty=Tensor[(192), float64] */, %var_6755, meta[relay.Constant][25] /* ty=Tensor[(378), uint8] */, %281)
}

def @func_12812() -> Tensor[(6, 12, 2), int32] {
  @func_9335() /* ty=Tensor[(6, 12, 2), int32] */
}

def @func_8338() -> (Tensor[(6, 12, 2), int32],) {
  %282 = @func_7870() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */;
  %283 = %282.0;
  (%283,)
}

def @func_4053(%var_4041: Tensor[(7, 16, 6), float64]) -> Tensor[(7, 16, 6), float64] {
  %284 = cast(%var_4041, dtype="float64") /* ty=Tensor[(7, 16, 6), float64] */;
  %285 = atanh(%284) /* ty=Tensor[(7, 16, 6), float64] */;
  %286 = cast(%285, dtype="float64") /* ty=Tensor[(7, 16, 6), float64] */;
  %287 = shape_of(%var_4041, dtype="int32") /* ty=Tensor[(3), int32] */;
  %288 = cast(%var_4041, dtype="float64") /* ty=Tensor[(7, 16, 6), float64] */;
  %289 = dyn.reshape(%286, %287, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  power(%288, %289) /* ty=Tensor[(7, 16, 6), float64] */
}

def @func_12262() -> Tensor[(112), bool] {
  %290 = @func_6644() /* ty=(Tensor[(6, 12, 2), float32], Tensor[(16, 7, ?), uint64], Tensor[(112), bool]) */;
  %290.2
}

def @func_10132() -> (Tensor[(6, 12, 2), int32], Tensor[(756), int8], Tensor[(6, 12, 2), int32], Tensor[(9, 3, 13), float32], Tensor[(6, 12, 2), int32]) {
  %300 = fn () -> (Tensor[(6, 12, 2), int32], Tensor[(756), int8], Tensor[(6, 12, 2), int32], Tensor[(9, 3, 13), float32], Tensor[(6, 12, 2), int32]) {
    %291 = cast(meta[relay.Constant][26] /* ty=Tensor[(756), int8] */, dtype="int8") /* ty=Tensor[(756), int8] */;
    %292 = reshape(%291, newshape=[756]) /* ty=Tensor[(756), int8] */;
    %293 = @func_7610(%292) /* ty=(Tensor[(6, 12, 2), float32], Tensor[(9, 3, 13), bool], Tensor[(756), float64]) */;
    %294 = %293.1;
    %295 = cast(%294, dtype="float32") /* ty=Tensor[(9, 3, 13), float32] */;
    %296 = @func_7406() /* ty=Tensor[(6, 12, 2), int32] */;
    %297 = @func_9335() /* ty=Tensor[(6, 12, 2), int32] */;
    %298 = cosh(%295) /* ty=Tensor[(9, 3, 13), float32] */;
    %299 = @func_9461() /* ty=Tensor[(6, 12, 2), int32] */;
    (%296, meta[relay.Constant][26] /* ty=Tensor[(756), int8] */, %297, %298, %299)
  };
  %300() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(756), int8], Tensor[(6, 12, 2), int32], Tensor[(9, 3, 13), float32], Tensor[(6, 12, 2), int32]) */
}

def @func_6069(%var_6062: Tensor[(2, 4, 8), float32], %var_6063: Tensor[(15, 4), int32], %var_6064: Tensor[(756), int8], %var_6065: Tensor[(192), float64], %var_6066: Tensor[(720), float64], %var_6067: Tensor[(1, 288), int8], %var_6068: Tensor[(112), bool]) -> (Tensor[(2, 4, 8), int32], Tensor[(3, 2, 10), int32], Tensor[(15, 4), int32], Tensor[(60), int32], Tensor[(784), uint32], Tensor[(756), int8], Tensor[(192), float64], Tensor[(252), float64], Tensor[(378), uint8], Tensor[(2, 4, 8), float64], Tensor[(15, 12, 4), float64], Tensor[(720), float64], Tensor[(60), int32], Tensor[(1, 288), int8], Tensor[(112), bool], Tensor[(16, 7, ?), uint64], Tensor[(8, 84), uint64], Tensor[(2, 4, 8), float64]) {
  @func_6060(%var_6062, %var_6063, %var_6064, %var_6065, %var_6066, %var_6067, %var_6068) /* ty=(Tensor[(2, 4, 8), int32], Tensor[(3, 2, 10), int32], Tensor[(15, 4), int32], Tensor[(60), int32], Tensor[(784), uint32], Tensor[(756), int8], Tensor[(192), float64], Tensor[(252), float64], Tensor[(378), uint8], Tensor[(2, 4, 8), float64], Tensor[(15, 12, 4), float64], Tensor[(720), float64], Tensor[(60), int32], Tensor[(1, 288), int8], Tensor[(112), bool], Tensor[(16, 7, ?), uint64], Tensor[(8, 84), uint64], Tensor[(2, 4, 8), float64]) */
}

def @func_5608(%var_5605: Tensor[(4, 16, 16), float64], %var_5606: Tensor[(4, 16, 16), float64], %var_5607: Tensor[(1350), int32]) -> (Tensor[(4, 16, 16), float64], Tensor[(16, 7, ?), uint64], Tensor[(112), bool], Tensor[(15, 6, 15), float32], Tensor[(1350), int32]) {
  %315 = fn (%var_5575: Tensor[(4, 16, 16), float64], %var_5576: Tensor[(4, 16, 16), float64], %var_5600: Tensor[(1350), int32]) -> (Tensor[(4, 16, 16), float64], Tensor[(16, 7, ?), uint64], Tensor[(112), bool], Tensor[(15, 6, 15), float32], Tensor[(1350), int32]) {
    %301 = cast(%var_5576, dtype="float64") /* ty=Tensor[(4, 16, 16), float64] */;
    %302 = shape_of(%var_5575, dtype="int32") /* ty=Tensor[(3), int32] */;
    %303 = cast(%var_5575, dtype="float64") /* ty=Tensor[(4, 16, 16), float64] */;
    %304 = dyn.reshape(%301, %302, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %305 = cast(meta[relay.Constant][27] /* ty=Tensor[(112), bool] */, dtype="bool") /* ty=Tensor[(112), bool] */;
    %306 = reshape(%305, newshape=[16, 7, 1]) /* ty=Tensor[(16, 7, 1), bool] */;
    %307 = @func_1396(%306) /* ty=(Tensor[(16, 7, ?), uint64],) */;
    %308 = cast(%var_5600, dtype="int32") /* ty=Tensor[(1350), int32] */;
    %309 = cast(%var_5600, dtype="int32") /* ty=Tensor[(1350), int32] */;
    %310 = reshape(%308, newshape=[15, 6, 15]) /* ty=Tensor[(15, 6, 15), int32] */;
    %311 = reshape(%309, newshape=[15, 6, 15]) /* ty=Tensor[(15, 6, 15), int32] */;
    %312 = floor_divide(%303, %304) /* ty=Tensor[(4, 16, 16), float64] */;
    %313 = %307.0;
    %314 = @func_2936(%310, %311) /* ty=Tensor[(15, 6, 15), float32] */;
    (%312, %313, meta[relay.Constant][27] /* ty=Tensor[(112), bool] */, %314, %var_5600)
  };
  %315(%var_5605, %var_5606, %var_5607) /* ty=(Tensor[(4, 16, 16), float64], Tensor[(16, 7, ?), uint64], Tensor[(112), bool], Tensor[(15, 6, 15), float32], Tensor[(1350), int32]) */
}

def @func_7407() -> Tensor[(6, 12, 2), int32] {
  %317 = fn () -> Tensor[(6, 12, 2), int32] {
    %316 = @func_6480() /* ty=(Tensor[(6, 12, 2), float32], Tensor[(6, 12, 2), int32]) */;
    %316.1
  };
  %317() /* ty=Tensor[(6, 12, 2), int32] */
}

def @func_9013(%var_9011: Tensor[(9, 84), int8]) -> (Tensor[(6, 12, 2), uint32], Tensor[(7, 12, 9), int8], Tensor[(9, 84), int8], Tensor[(15, 12, 4), float32], Tensor[(720), float64], Tensor[(18, 42), float64]) {
  @func_9010(%var_9011) /* ty=(Tensor[(6, 12, 2), uint32], Tensor[(7, 12, 9), int8], Tensor[(9, 84), int8], Tensor[(15, 12, 4), float32], Tensor[(720), float64], Tensor[(18, 42), float64]) */
}

def @func_10948() -> (Tensor[(6, 12, 2), int32], Tensor[(9, 3, 13), bool], Tensor[(756), int8]) {
  %324 = fn () -> (Tensor[(6, 12, 2), int32], Tensor[(9, 3, 13), bool], Tensor[(756), int8]) {
    %318 = @func_10863() /* ty=(Tensor[(6, 12, 2), int32],) */;
    %319 = cast(meta[relay.Constant][28] /* ty=Tensor[(756), int8] */, dtype="int8") /* ty=Tensor[(756), int8] */;
    %320 = reshape(%319, newshape=[18, 42]) /* ty=Tensor[(18, 42), int8] */;
    %321 = @func_7364(%320) /* ty=(Tensor[(6, 12, 2), int32], Tensor[(9, 3, 13), bool], Tensor[(351), bool], Tensor[(18, 42), int8]) */;
    %322 = %318.0;
    %323 = %321.1;
    (%322, %323, meta[relay.Constant][28] /* ty=Tensor[(756), int8] */)
  };
  %324() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(9, 3, 13), bool], Tensor[(756), int8]) */
}

def @func_8593(%var_8508: Tensor[(6, 12, 2), int32], %var_8542: Tensor[(252), float64], %var_8588: Tensor[(720), float64]) -> (Tensor[(6, 12, 2), float32], Tensor[(60), int32], Tensor[(252), float64], Tensor[(54, 14), int8], Tensor[(6, 12, 2), int32], Tensor[(15, 12, 4), float32], Tensor[(720), float64]) {
  %325 = @func_7941() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %326 = %325.0;
  %327 = cast(%var_8508, dtype="float32") /* ty=Tensor[(6, 12, 2), float32] */;
  %328 = shape_of(%326, dtype="int32") /* ty=Tensor[(3), int32] */;
  %329 = cast(%326, dtype="float32") /* ty=Tensor[(6, 12, 2), float32] */;
  %330 = dyn.reshape(%327, %328, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %331 = cast(%var_8542, dtype="float64") /* ty=Tensor[(252), float64] */;
  %332 = cast(meta[relay.Constant][29] /* ty=Tensor[(54, 14), int8] */, dtype="int8") /* ty=Tensor[(54, 14), int8] */;
  %333 = reshape(%331, newshape=[9, 4, 7]) /* ty=Tensor[(9, 4, 7), float64] */;
  %334 = reshape(%332, newshape=[756]) /* ty=Tensor[(756), int8] */;
  %335 = @func_2095(%333, %334) /* ty=(Tensor[(60), int32], Tensor[(756), int8], Tensor[(9, 4, 7), bool]) */;
  %336 = cast(%var_8588, dtype="float64") /* ty=Tensor[(720), float64] */;
  %337 = reshape(%336, newshape=[15, 12, 4]) /* ty=Tensor[(15, 12, 4), float64] */;
  %338 = @func_3057(%337) /* ty=(Tensor[(15, 12, 4), float64], Tensor[(15, 12, 4), float32]) */;
  %339 = floor_mod(%329, %330) /* ty=Tensor[(6, 12, 2), float32] */;
  %340 = %335.0;
  %341 = @func_5512() /* ty=Tensor[(6, 12, 2), int32] */;
  %342 = %338.1;
  (%339, %340, %var_8542, meta[relay.Constant][29] /* ty=Tensor[(54, 14), int8] */, %341, %342, %var_8588)
}

def @func_1396(%var_1383: Tensor[(16, 7, 1), bool]) -> (Tensor[(16, 7, ?), uint64],) {
  %343 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %344 = cast(%var_1383, dtype="bool") /* ty=Tensor[(16, 7, 1), bool] */;
  %345 = logical_or(%343, %344) /* ty=Tensor[(16, 7, 1), bool] */;
  %346 = cast(%345, dtype="uint64") /* ty=Tensor[(16, 7, 1), uint64] */;
  %347 = shape_of(%var_1383, dtype="int32") /* ty=Tensor[(3), int32] */;
  %348 = cast(%var_1383, dtype="uint64") /* ty=Tensor[(16, 7, 1), uint64] */;
  %349 = dyn.reshape(%346, %347, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %350 = bitwise_xor(%348, %349) /* ty=Tensor[(16, 7, ?), uint64] */;
  (%350,)
}

def @func_11273() -> (Tensor[(6, 12, 2), int32], Tensor[(1300), uint16], int8, Tensor[(16, 1, 11), float32], Tensor[(176), float32], Tensor[(13, 10, 10), float32]) {
  @func_11271() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(1300), uint16], int8, Tensor[(16, 1, 11), float32], Tensor[(176), float32], Tensor[(13, 10, 10), float32]) */
}

def @func_6531() -> (Tensor[(6, 12, 2), int32],) {
  @func_6529() /* ty=(Tensor[(6, 12, 2), int32],) */
}

def @func_9610() -> (Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) {
  %351 = @func_7637() /* ty=(Tensor[(6, 12, 2), uint8], Tensor[(6, 12, 2), int32]) */;
  %352 = @func_7162() /* ty=Tensor[(6, 12, 2), int32] */;
  %353 = %351.1;
  (%352, %353)
}

def @func_9461() -> Tensor[(6, 12, 2), int32] {
  %354 = @func_5659() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %354.0
}

def @func_10388() -> (Tensor[(6, 12, 2), int32],) {
  %356 = fn () -> (Tensor[(6, 12, 2), int32],) {
    %355 = @func_9461() /* ty=Tensor[(6, 12, 2), int32] */;
    (%355,)
  };
  %356() /* ty=(Tensor[(6, 12, 2), int32],) */
}

def @func_6811(%var_6809: Tensor[(9, 3, 13), bool], %var_6810: Tensor[(756), int8]) -> (Tensor[(9, 3, 13), bool], Tensor[(3, 2, 10), int32], Tensor[(756), int8]) {
  %368 = fn (%var_6795: Tensor[(9, 3, 13), bool], %var_6806: Tensor[(756), int8]) -> (Tensor[(9, 3, 13), bool], Tensor[(3, 2, 10), int32], Tensor[(756), int8]) {
    %357 = cast(%var_6795, dtype="bool") /* ty=Tensor[(9, 3, 13), bool] */;
    %358 = shape_of(meta[relay.Constant][30] /* ty=Tensor[(9, 3, 13), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %359 = cast(meta[relay.Constant][30] /* ty=Tensor[(9, 3, 13), bool] */, dtype="bool") /* ty=Tensor[(9, 3, 13), bool] */;
    %360 = dyn.reshape(%357, %358, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %361 = cast(%var_6806, dtype="int8") /* ty=Tensor[(756), int8] */;
    %362 = cast(%var_6806, dtype="int8") /* ty=Tensor[(756), int8] */;
    %363 = reshape(%361, newshape=[7, 12, 9]) /* ty=Tensor[(7, 12, 9), int8] */;
    %364 = reshape(%362, newshape=[7, 12, 9]) /* ty=Tensor[(7, 12, 9), int8] */;
    %365 = @func_1789(%363, %364) /* ty=(Tensor[(7, 12, 9), int8], Tensor[(3, 2, 10), int32], Tensor[(378), uint8], Tensor[(60), int32]) */;
    %366 = logical_or(%359, %360) /* ty=Tensor[(9, 3, 13), bool] */;
    %367 = %365.1;
    (%366, %367, %var_6806)
  };
  %368(%var_6809, %var_6810) /* ty=(Tensor[(9, 3, 13), bool], Tensor[(3, 2, 10), int32], Tensor[(756), int8]) */
}

def @func_7914(%var_7913: Tensor[(6, 12, 2), uint8]) -> (Tensor[(6, 12, 2), float32], Tensor[(6, 12, 2), float32]) {
  %378 = fn (%var_7902: Tensor[(6, 12, 2), uint8]) -> (Tensor[(6, 12, 2), float32], Tensor[(6, 12, 2), float32]) {
    %369 = @func_7805() /* ty=(Tensor[(6, 12, 2), uint8],) */;
    %370 = %369.0;
    %371 = cast(%var_7902, dtype="float32") /* ty=Tensor[(6, 12, 2), float32] */;
    %372 = shape_of(%370, dtype="int32") /* ty=Tensor[(3), int32] */;
    %373 = cast(%370, dtype="float32") /* ty=Tensor[(6, 12, 2), float32] */;
    %374 = dyn.reshape(%371, %372, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %375 = cast(%370, dtype="float32") /* ty=Tensor[(6, 12, 2), float32] */;
    %376 = power(%373, %374) /* ty=Tensor[(6, 12, 2), float32] */;
    %377 = sigmoid(%375) /* ty=Tensor[(6, 12, 2), float32] */;
    (%376, %377)
  };
  %378(%var_7913) /* ty=(Tensor[(6, 12, 2), float32], Tensor[(6, 12, 2), float32]) */
}

def @func_13127(%var_13125: Tensor[(756), int8]) -> (Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), bool], Tensor[(756), int8]) {
  @func_13124(%var_13125) /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), bool], Tensor[(756), int8]) */
}

def @func_14445(%var_14442: Tensor[(14, 11, 7), float32], %var_14443: uint16, %var_14444: Tensor[(56), uint16]) -> (Tensor[(14, 11, 7), float32], Tensor[(8, 7, 1), float64], uint16, Tensor[(56), uint16]) {
  @func_14440(%var_14442, %var_14443, %var_14444) /* ty=(Tensor[(14, 11, 7), float32], Tensor[(8, 7, 1), float64], uint16, Tensor[(56), uint16]) */
}

def @func_9400() -> (Tensor[(6, 12, 2), uint8],) {
  %379 = @func_7805() /* ty=(Tensor[(6, 12, 2), uint8],) */;
  %380 = %379.0;
  (%380,)
}

def @func_1147(%var_1145: Tensor[(3, 4, 16), float64]) -> Tensor[(3, 4, 16), float64] {
  @func_1144(%var_1145) /* ty=Tensor[(3, 4, 16), float64] */
}

def @func_7639() -> (Tensor[(6, 12, 2), uint8], Tensor[(6, 12, 2), int32]) {
  @func_7637() /* ty=(Tensor[(6, 12, 2), uint8], Tensor[(6, 12, 2), int32]) */
}

def @func_5733(%var_5695: Tensor[(756), int8]) -> (Tensor[(7, 12, 9), int8], Tensor[(756), int8], Tensor[(6, 12, 2), bool]) {
  %381 = cast(%var_5695, dtype="int8") /* ty=Tensor[(756), int8] */;
  %382 = cast(%var_5695, dtype="int8") /* ty=Tensor[(756), int8] */;
  %383 = reshape(%381, newshape=[7, 12, 9]) /* ty=Tensor[(7, 12, 9), int8] */;
  %384 = reshape(%382, newshape=[7, 12, 9]) /* ty=Tensor[(7, 12, 9), int8] */;
  %385 = @func_1789(%383, %384) /* ty=(Tensor[(7, 12, 9), int8], Tensor[(3, 2, 10), int32], Tensor[(378), uint8], Tensor[(60), int32]) */;
  %386 = @func_5512() /* ty=Tensor[(6, 12, 2), int32] */;
  %387 = cast(meta[relay.Constant][31] /* ty=Tensor[(6, 12, 2), int32] */, dtype="bool") /* ty=Tensor[(6, 12, 2), bool] */;
  %388 = shape_of(%386, dtype="int32") /* ty=Tensor[(3), int32] */;
  %389 = cast(%386, dtype="bool") /* ty=Tensor[(6, 12, 2), bool] */;
  %390 = dyn.reshape(%387, %388, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %391 = %385.0;
  %392 = less(%389, %390) /* ty=Tensor[(6, 12, 2), bool] */;
  (%391, %var_5695, %392)
}

def @func_7021(%var_7018: Tensor[(60), int32], %var_7019: Tensor[(8, 60), float32], %var_7020: Tensor[(4, 48), float64]) -> (Tensor[(6, 12, 2), int32], Tensor[(16, 7, ?), uint64], Tensor[(112), bool], Tensor[(6, 12, 2), int32], Tensor[(16, 13, 5), int16], int16, Tensor[(60), int32], Tensor[(6, 12, 2), int32], Tensor[(60), int32], Tensor[(288), int8], Tensor[(5, 12, 8), float32], Tensor[(8, 60), float32], Tensor[(4, 48), float64], Tensor[(176), float32], Tensor[(300), float32], Tensor[(6, 12, 2), int32]) {
  @func_7016(%var_7018, %var_7019, %var_7020) /* ty=(Tensor[(6, 12, 2), int32], Tensor[(16, 7, ?), uint64], Tensor[(112), bool], Tensor[(6, 12, 2), int32], Tensor[(16, 13, 5), int16], int16, Tensor[(60), int32], Tensor[(6, 12, 2), int32], Tensor[(60), int32], Tensor[(288), int8], Tensor[(5, 12, 8), float32], Tensor[(8, 60), float32], Tensor[(4, 48), float64], Tensor[(176), float32], Tensor[(300), float32], Tensor[(6, 12, 2), int32]) */
}

def @func_6480() -> (Tensor[(6, 12, 2), float32], Tensor[(6, 12, 2), int32]) {
  %393 = @func_5899() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %394 = %393.0;
  %395 = cast(%394, dtype="float32") /* ty=Tensor[(6, 12, 2), float32] */;
  %396 = erf(%395) /* ty=Tensor[(6, 12, 2), float32] */;
  %397 = @func_5512() /* ty=Tensor[(6, 12, 2), int32] */;
  (%396, %397)
}

def @func_9183(%var_9180: Tensor[(60), int32], %var_9181: Tensor[(42, 6), float64], %var_9182: Tensor[(6, 12, 2), int32]) -> (Tensor[(378), uint8], Tensor[(784), uint32], Tensor[(60), int32], Tensor[(756), int8], Tensor[(192), float64], Tensor[(42, 6), float64], Tensor[(378), uint8], Tensor[(6, 12, 2), int8]) {
  @func_9178(%var_9180, %var_9181, %var_9182) /* ty=(Tensor[(378), uint8], Tensor[(784), uint32], Tensor[(60), int32], Tensor[(756), int8], Tensor[(192), float64], Tensor[(42, 6), float64], Tensor[(378), uint8], Tensor[(6, 12, 2), int8]) */
}

def @func_8865(%var_8863: Tensor[(15, 4, 3), float64]) -> (Tensor[(15, 4, 3), float64], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) {
  @func_8862(%var_8863) /* ty=(Tensor[(15, 4, 3), float64], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */
}

def @func_11742() -> (Tensor[(6, 12, 2), int32],) {
  %398 = @func_10641() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(1, 3, 11), int8], int8, Tensor[(6, 12, 2), int32], Tensor[(9, 3, 13), bool], Tensor[(117, 3), bool], Tensor[(756), int8]) */;
  %399 = %398.0;
  (%399,)
}

def @func_7637() -> (Tensor[(6, 12, 2), uint8], Tensor[(6, 12, 2), int32]) {
  %400 = @func_7507() /* ty=(Tensor[(6, 12, 2), uint8],) */;
  %401 = %400.0;
  %402 = @func_7162() /* ty=Tensor[(6, 12, 2), int32] */;
  (%401, %402)
}

def @func_12716(%var_12714: Tensor[(1350), int32], %var_12715: Tensor[(140), float32]) -> (Tensor[(6, 12, 2), int32], Tensor[(12, 7, 5), float32], Tensor[(3, 4, 16), float64], Tensor[(192), float64], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32], Tensor[(15, 6, 15), float32], Tensor[(1350), int32], Tensor[(4, 5, 7), float32], Tensor[(140), float32]) {
  @func_12712(%var_12714, %var_12715) /* ty=(Tensor[(6, 12, 2), int32], Tensor[(12, 7, 5), float32], Tensor[(3, 4, 16), float64], Tensor[(192), float64], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32], Tensor[(15, 6, 15), float32], Tensor[(1350), int32], Tensor[(4, 5, 7), float32], Tensor[(140), float32]) */
}

def @func_13(%var_11: Tensor[(3, 2, 10), int32], %var_12: Tensor[(3, 2, 10), int32]) -> Tensor[(3, 2, 10), int32] {
  %407 = fn (%var_4: Tensor[(3, 2, 10), int32], %var_5: Tensor[(3, 2, 10), int32]) -> Tensor[(3, 2, 10), int32] {
    %403 = cast(%var_5, dtype="int32") /* ty=Tensor[(3, 2, 10), int32] */;
    %404 = shape_of(%var_4, dtype="int32") /* ty=Tensor[(3), int32] */;
    %405 = cast(%var_4, dtype="int32") /* ty=Tensor[(3, 2, 10), int32] */;
    %406 = dyn.reshape(%403, %404, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    add(%405, %406) /* ty=Tensor[(3, 2, 10), int32] */
  };
  %407(%var_11, %var_12) /* ty=Tensor[(3, 2, 10), int32] */
}

def @func_10295(%var_10263: int64, %var_10264: Tensor[(1, 10, 12), int64], %var_10280: Tensor[(1408), int8]) -> (Tensor[(1, 10, 12), int64], Tensor[(?, 10, 12), bool], Tensor[(11, 8, 16), float64], Tensor[(1408), int8]) {
  %408 = cast(%var_10263, dtype="int64") /* ty=int64 */;
  %409 = cast(%var_10264, dtype="int64") /* ty=Tensor[(1, 10, 12), int64] */;
  %410 = cast(%var_10264, dtype="float64") /* ty=Tensor[(1, 10, 12), float64] */;
  %411 = cast(%var_10263, dtype="float64") /* ty=float64 */;
  %412 = divide(%410, %411) /* ty=Tensor[(1, 10, 12), float64] */;
  %413 = cast(%412, dtype="bool") /* ty=Tensor[(1, 10, 12), bool] */;
  %414 = shape_of(%var_10264, dtype="int32") /* ty=Tensor[(3), int32] */;
  %415 = cast(%var_10264, dtype="bool") /* ty=Tensor[(1, 10, 12), bool] */;
  %416 = dyn.reshape(%413, %414, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %417 = cast(%var_10280, dtype="int8") /* ty=Tensor[(1408), int8] */;
  %418 = cast(%var_10280, dtype="int8") /* ty=Tensor[(1408), int8] */;
  %419 = reshape(%417, newshape=[11, 8, 16]) /* ty=Tensor[(11, 8, 16), int8] */;
  %420 = reshape(%418, newshape=[11, 8, 16]) /* ty=Tensor[(11, 8, 16), int8] */;
  %421 = @func_1356(%419, %420) /* ty=(Tensor[(11, 8, 16), int8], Tensor[(11, 8, 16), float64], Tensor[(3, 4, 16), float64], Tensor[(2, 96), float64]) */;
  %422 = maximum(%408, %409) /* ty=Tensor[(1, 10, 12), int64] */;
  %423 = logical_or(%415, %416) /* ty=Tensor[(?, 10, 12), bool] */;
  %424 = %421.1;
  (%422, %423, %424, %var_10280)
}

def @func_13508(%var_13506: Tensor[(378), uint8], %var_13507: Tensor[(60), int32]) -> (Tensor[(6, 12, 2), int32], Tensor[(60), int32], Tensor[(378), uint8], Tensor[(60), int32], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) {
  %438 = fn (%var_13464: Tensor[(378), uint8], %var_13465: Tensor[(60), int32]) -> (Tensor[(6, 12, 2), int32], Tensor[(60), int32], Tensor[(378), uint8], Tensor[(60), int32], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) {
    %425 = @func_10209() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */;
    %426 = cast(%var_13464, dtype="uint8") /* ty=Tensor[(378), uint8] */;
    %427 = cast(%var_13465, dtype="int32") /* ty=Tensor[(60), int32] */;
    %428 = reshape(%426, newshape=[3, 9, 14]) /* ty=Tensor[(3, 9, 14), uint8] */;
    %429 = reshape(%427, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), int32] */;
    %430 = @func_206(%428, %429) /* ty=(Tensor[(60), int32], Tensor[(3, 2, 10), bool], Tensor[(3, 2, 10), int32], Tensor[(3, 9, 14), float64], Tensor[(3, 2, 10), int32]) */;
    %431 = @func_8338() /* ty=(Tensor[(6, 12, 2), int32],) */;
    %432 = @func_6154() /* ty=(Tensor[(6, 12, 2), int32],) */;
    %433 = %425.0;
    %434 = %430.0;
    %435 = %431.0;
    %436 = @func_9335() /* ty=Tensor[(6, 12, 2), int32] */;
    %437 = %432.0;
    (%433, %434, %var_13464, %var_13465, %435, %436, %437)
  };
  %438(%var_13506, %var_13507) /* ty=(Tensor[(6, 12, 2), int32], Tensor[(60), int32], Tensor[(378), uint8], Tensor[(60), int32], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */
}

def @func_11168() -> Tensor[(6, 12, 2), int32] {
  %440 = fn () -> Tensor[(6, 12, 2), int32] {
    %439 = @func_8338() /* ty=(Tensor[(6, 12, 2), int32],) */;
    %439.0
  };
  %440() /* ty=Tensor[(6, 12, 2), int32] */
}

def @func_8295() -> (Tensor[(6, 12, 2), uint8],) {
  @func_8293() /* ty=(Tensor[(6, 12, 2), uint8],) */
}

def @func_14042(%var_14040: Tensor[(6, 12, 2), int32]) -> (Tensor[(6, 12, 2), uint32],) {
  @func_14039(%var_14040) /* ty=(Tensor[(6, 12, 2), uint32],) */
}

def @func_14014() -> (Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) {
  %444 = fn () -> (Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) {
    %441 = @func_5899() /* ty=(Tensor[(6, 12, 2), int32],) */;
    %442 = @func_7406() /* ty=Tensor[(6, 12, 2), int32] */;
    %443 = %441.0;
    (%442, %443)
  };
  %444() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */
}

def @func_7748(%var_7679: Tensor[(13, 10, 10), uint16], %var_7680: Tensor[(13, 10, 10), uint16], %var_7685: int8) -> (Tensor[(13, 10, 10), uint16], int8, Tensor[(6, 12, 2), int32], Tensor[(1, 3, 11), float32], Tensor[(1408), int8], Tensor[(5, 28), float32]) {
  %445 = cast(%var_7680, dtype="uint16") /* ty=Tensor[(13, 10, 10), uint16] */;
  %446 = shape_of(%var_7679, dtype="int32") /* ty=Tensor[(3), int32] */;
  %447 = cast(%var_7679, dtype="uint16") /* ty=Tensor[(13, 10, 10), uint16] */;
  %448 = dyn.reshape(%445, %446, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %449 = cast(%var_7685, dtype="int8") /* ty=int8 */;
  %450 = reshape(%449, newshape=[]) /* ty=int8 */;
  %451 = @func_5457(%450) /* ty=Tensor[(1, 3, 11), int8] */;
  %452 = cast(%451, dtype="float64") /* ty=Tensor[(1, 3, 11), float64] */;
  %453 = rsqrt(%452) /* ty=Tensor[(1, 3, 11), float64] */;
  %454 = cast(%453, dtype="float32") /* ty=Tensor[(1, 3, 11), float32] */;
  %455 = cast(meta[relay.Constant][32] /* ty=Tensor[(5, 28), float32] */, dtype="float32") /* ty=Tensor[(5, 28), float32] */;
  %456 = cast(meta[relay.Constant][32] /* ty=Tensor[(5, 28), float32] */, dtype="float32") /* ty=Tensor[(5, 28), float32] */;
  %457 = reshape(%455, newshape=[4, 5, 7]) /* ty=Tensor[(4, 5, 7), float32] */;
  %458 = reshape(%456, newshape=[4, 5, 7]) /* ty=Tensor[(4, 5, 7), float32] */;
  %459 = @func_1954(%457, %458) /* ty=(Tensor[(4, 5, 7), float32], Tensor[(4, 5, 7), float64], Tensor[(2, 96), float64], Tensor[(1408), int8]) */;
  %460 = bitwise_xor(%447, %448) /* ty=Tensor[(13, 10, 10), uint16] */;
  %461 = @func_7406() /* ty=Tensor[(6, 12, 2), int32] */;
  %462 = atanh(%454) /* ty=Tensor[(1, 3, 11), float32] */;
  %463 = %459.3;
  (%460, %var_7685, %461, %462, %463, meta[relay.Constant][32] /* ty=Tensor[(5, 28), float32] */)
}

def @func_2765(%var_2620: Tensor[(8, 7, 14), uint32], %var_2621: Tensor[(8, 7, 14), uint32], %var_2628: Tensor[(60), int32], %var_2653: Tensor[(9, 84), int8], %var_2663: Tensor[(24, 8), float64], %var_2680: Tensor[(1, 252), float64], %var_2727: Tensor[(378), uint8]) -> (Tensor[(60), int32], Tensor[(288), int8], Tensor[(112), bool], Tensor[(60), int32], Tensor[(8, 7, 14), float64], Tensor[(3, 2, 10), int32], Tensor[(9, 84), int8], Tensor[(3, 4, 16), float64], Tensor[(24, 8), float64], Tensor[(3, 4, 16), float64], Tensor[(60), int32], Tensor[(1, 252), float64], Tensor[(3, 2, 10), int32], Tensor[(378), uint8], Tensor[(60), int32], int16, Tensor[(16, 7, ?), uint64], Tensor[(11, 8, 16), int8], Tensor[(2, 704), int8]) {
  %464 = cast(meta[relay.Constant][33] /* ty=Tensor[(288), int8] */, dtype="int8") /* ty=Tensor[(288), int8] */;
  %465 = cast(meta[relay.Constant][33] /* ty=Tensor[(288), int8] */, dtype="int8") /* ty=Tensor[(288), int8] */;
  %466 = cast(meta[relay.Constant][34] /* ty=Tensor[(112), bool] */, dtype="bool") /* ty=Tensor[(112), bool] */;
  %467 = cast(%var_2628, dtype="int32") /* ty=Tensor[(60), int32] */;
  %468 = reshape(%464, newshape=[6, 4, 12]) /* ty=Tensor[(6, 4, 12), int8] */;
  %469 = reshape(%465, newshape=[6, 4, 12]) /* ty=Tensor[(6, 4, 12), int8] */;
  %470 = reshape(%466, newshape=[1, 112]) /* ty=Tensor[(1, 112), bool] */;
  %471 = reshape(%467, newshape=[60]) /* ty=Tensor[(60), int32] */;
  %472 = @func_1668(%468, %469, %470, %471) /* ty=(Tensor[(6, 4, 12), int8], Tensor[(1, 112), bool], Tensor[(3, 2, 10), int32], Tensor[(60), int32], Tensor[(16, 7, 378), uint8]) */;
  %473 = cast(%var_2621, dtype="bool") /* ty=Tensor[(8, 7, 14), bool] */;
  %474 = shape_of(%var_2620, dtype="int32") /* ty=Tensor[(3), int32] */;
  %475 = cast(%var_2620, dtype="bool") /* ty=Tensor[(8, 7, 14), bool] */;
  %476 = dyn.reshape(%473, %474, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %477 = less_equal(%475, %476) /* ty=Tensor[(8, 7, 14), bool] */;
  %478 = cast(%477, dtype="float64") /* ty=Tensor[(8, 7, 14), float64] */;
  %479 = shape_of(%var_2620, dtype="int32") /* ty=Tensor[(3), int32] */;
  %480 = cast(%var_2620, dtype="float64") /* ty=Tensor[(8, 7, 14), float64] */;
  %481 = dyn.reshape(%478, %479, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %482 = cast(%var_2653, dtype="int8") /* ty=Tensor[(9, 84), int8] */;
  %483 = cast(%var_2653, dtype="int8") /* ty=Tensor[(9, 84), int8] */;
  %484 = reshape(%482, newshape=[7, 12, 9]) /* ty=Tensor[(7, 12, 9), int8] */;
  %485 = reshape(%483, newshape=[7, 12, 9]) /* ty=Tensor[(7, 12, 9), int8] */;
  %486 = @func_1789(%484, %485) /* ty=(Tensor[(7, 12, 9), int8], Tensor[(3, 2, 10), int32], Tensor[(378), uint8], Tensor[(60), int32]) */;
  %487 = cast(%var_2663, dtype="float64") /* ty=Tensor[(24, 8), float64] */;
  %488 = reshape(%487, newshape=[3, 4, 16]) /* ty=Tensor[(3, 4, 16), float64] */;
  %489 = cast(%var_2663, dtype="float64") /* ty=Tensor[(24, 8), float64] */;
  %490 = reshape(%489, newshape=[3, 4, 16]) /* ty=Tensor[(3, 4, 16), float64] */;
  %491 = cast(%var_2680, dtype="float64") /* ty=Tensor[(1, 252), float64] */;
  %492 = cast(%var_2653, dtype="int8") /* ty=Tensor[(9, 84), int8] */;
  %493 = reshape(%491, newshape=[9, 4, 7]) /* ty=Tensor[(9, 4, 7), float64] */;
  %494 = reshape(%492, newshape=[756]) /* ty=Tensor[(756), int8] */;
  %495 = @func_2095(%493, %494) /* ty=(Tensor[(60), int32], Tensor[(756), int8], Tensor[(9, 4, 7), bool]) */;
  %496 = cast(%var_2727, dtype="uint8") /* ty=Tensor[(378), uint8] */;
  %497 = %472.3;
  %498 = cast(%497, dtype="int32") /* ty=Tensor[(60), int32] */;
  %499 = reshape(%496, newshape=[3, 9, 14]) /* ty=Tensor[(3, 9, 14), uint8] */;
  %500 = reshape(%498, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), int32] */;
  %501 = @func_206(%499, %500) /* ty=(Tensor[(60), int32], Tensor[(3, 2, 10), bool], Tensor[(3, 2, 10), int32], Tensor[(3, 9, 14), float64], Tensor[(3, 2, 10), int32]) */;
  %502 = cast(meta[relay.Constant][35] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %503 = cast(%497, dtype="int32") /* ty=Tensor[(60), int32] */;
  %504 = reshape(%502, newshape=[]) /* ty=int16 */;
  %505 = reshape(%503, newshape=[60]) /* ty=Tensor[(60), int32] */;
  %506 = @func_852(%504, %505) /* ty=(Tensor[(16, 13, 5), int16], Tensor[(3, 2, 10), int32], Tensor[(60), int32]) */;
  %507 = cast(meta[relay.Constant][34] /* ty=Tensor[(112), bool] */, dtype="bool") /* ty=Tensor[(112), bool] */;
  %508 = reshape(%507, newshape=[16, 7, 1]) /* ty=Tensor[(16, 7, 1), bool] */;
  %509 = @func_1396(%508) /* ty=(Tensor[(16, 7, ?), uint64],) */;
  %510 = cast(meta[relay.Constant][36] /* ty=Tensor[(2, 704), int8] */, dtype="int8") /* ty=Tensor[(2, 704), int8] */;
  %511 = cast(meta[relay.Constant][36] /* ty=Tensor[(2, 704), int8] */, dtype="int8") /* ty=Tensor[(2, 704), int8] */;
  %512 = reshape(%510, newshape=[11, 8, 16]) /* ty=Tensor[(11, 8, 16), int8] */;
  %513 = reshape(%511, newshape=[11, 8, 16]) /* ty=Tensor[(11, 8, 16), int8] */;
  %514 = @func_1356(%512, %513) /* ty=(Tensor[(11, 8, 16), int8], Tensor[(11, 8, 16), float64], Tensor[(3, 4, 16), float64], Tensor[(2, 96), float64]) */;
  %515 = floor_mod(%480, %481) /* ty=Tensor[(8, 7, 14), float64] */;
  %516 = %486.1;
  %517 = @func_1144(%488) /* ty=Tensor[(3, 4, 16), float64] */;
  %518 = @func_1144(%490) /* ty=Tensor[(3, 4, 16), float64] */;
  %519 = %495.0;
  %520 = %501.4;
  %521 = %506.2;
  %522 = %509.0;
  %523 = %514.0;
  (%497, meta[relay.Constant][33] /* ty=Tensor[(288), int8] */, meta[relay.Constant][34] /* ty=Tensor[(112), bool] */, %var_2628, %515, %516, %var_2653, %517, %var_2663, %518, %519, %var_2680, %520, %var_2727, %521, meta[relay.Constant][35] /* ty=int16 */, %522, %523, meta[relay.Constant][36] /* ty=Tensor[(2, 704), int8] */)
}

def @func_6220(%var_6219: Tensor[(192), float64]) -> (Tensor[(6, 12, 2), float64], Tensor[(3, 2, 10), int32], Tensor[(300), float32], Tensor[(192), float64], Tensor[(378), uint8]) {
  %536 = fn (%var_6213: Tensor[(192), float64]) -> (Tensor[(6, 12, 2), float64], Tensor[(3, 2, 10), int32], Tensor[(300), float32], Tensor[(192), float64], Tensor[(378), uint8]) {
    %524 = @func_5899() /* ty=(Tensor[(6, 12, 2), int32],) */;
    %525 = %524.0;
    %526 = cast(%525, dtype="float64") /* ty=Tensor[(6, 12, 2), float64] */;
    %527 = cast(meta[relay.Constant][37] /* ty=Tensor[(300), float32] */, dtype="float32") /* ty=Tensor[(300), float32] */;
    %528 = cast(%var_6213, dtype="float64") /* ty=Tensor[(192), float64] */;
    %529 = cast(meta[relay.Constant][38] /* ty=Tensor[(378), uint8] */, dtype="uint8") /* ty=Tensor[(378), uint8] */;
    %530 = reshape(%527, newshape=[15, 2, 10]) /* ty=Tensor[(15, 2, 10), float32] */;
    %531 = reshape(%528, newshape=[48, 4]) /* ty=Tensor[(48, 4), float64] */;
    %532 = reshape(%529, newshape=[126, 3]) /* ty=Tensor[(126, 3), uint8] */;
    %533 = @func_4826(%530, %531, %532) /* ty=(Tensor[(15, 2, 10), float32], Tensor[(3, 4, 16), float64], Tensor[(48, 4), float64], Tensor[(60), uint16], Tensor[(3, 2, 10), int32], Tensor[(126, 3), uint8], Tensor[(11, 8, 16), float64], Tensor[(1408), int8], Tensor[(3, 2, 10), float32], Tensor[(3, 2, 10), int32], Tensor[(756), int8], Tensor[(1408), int8], Tensor[(140), float32]) */;
    %534 = log10(%526) /* ty=Tensor[(6, 12, 2), float64] */;
    %535 = %533.4;
    (%534, %535, meta[relay.Constant][37] /* ty=Tensor[(300), float32] */, %var_6213, meta[relay.Constant][38] /* ty=Tensor[(378), uint8] */)
  };
  %536(%var_6219) /* ty=(Tensor[(6, 12, 2), float64], Tensor[(3, 2, 10), int32], Tensor[(300), float32], Tensor[(192), float64], Tensor[(378), uint8]) */
}

def @func_7806() -> (Tensor[(6, 12, 2), uint8],) {
  %539 = fn () -> (Tensor[(6, 12, 2), uint8],) {
    %537 = @func_7507() /* ty=(Tensor[(6, 12, 2), uint8],) */;
    %538 = %537.0;
    (%538,)
  };
  %539() /* ty=(Tensor[(6, 12, 2), uint8],) */
}

def @func_3059(%var_3058: Tensor[(15, 12, 4), float64]) -> (Tensor[(15, 12, 4), float64], Tensor[(15, 12, 4), float32]) {
  %547 = fn (%var_3043: Tensor[(15, 12, 4), float64]) -> (Tensor[(15, 12, 4), float64], Tensor[(15, 12, 4), float32]) {
    %540 = cast(%var_3043, dtype="float64") /* ty=Tensor[(15, 12, 4), float64] */;
    %541 = shape_of(meta[relay.Constant][39] /* ty=Tensor[(15, 12, 4), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %542 = cast(meta[relay.Constant][39] /* ty=Tensor[(15, 12, 4), float64] */, dtype="float64") /* ty=Tensor[(15, 12, 4), float64] */;
    %543 = dyn.reshape(%540, %541, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %544 = cast(%var_3043, dtype="float32") /* ty=Tensor[(15, 12, 4), float32] */;
    %545 = floor_divide(%542, %543) /* ty=Tensor[(15, 12, 4), float64] */;
    %546 = sin(%544) /* ty=Tensor[(15, 12, 4), float32] */;
    (%545, %546)
  };
  %547(%var_3058) /* ty=(Tensor[(15, 12, 4), float64], Tensor[(15, 12, 4), float32]) */
}

def @func_6156() -> (Tensor[(6, 12, 2), int32],) {
  @func_6154() /* ty=(Tensor[(6, 12, 2), int32],) */
}

def @func_9612() -> (Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) {
  @func_9610() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */
}

def @func_1360(%var_1358: Tensor[(11, 8, 16), int8], %var_1359: Tensor[(11, 8, 16), int8]) -> (Tensor[(11, 8, 16), int8], Tensor[(11, 8, 16), float64], Tensor[(3, 4, 16), float64], Tensor[(2, 96), float64]) {
  @func_1356(%var_1358, %var_1359) /* ty=(Tensor[(11, 8, 16), int8], Tensor[(11, 8, 16), float64], Tensor[(3, 4, 16), float64], Tensor[(2, 96), float64]) */
}

def @func_1958(%var_1956: Tensor[(4, 5, 7), float32], %var_1957: Tensor[(4, 5, 7), float32]) -> (Tensor[(4, 5, 7), float32], Tensor[(4, 5, 7), float64], Tensor[(2, 96), float64], Tensor[(1408), int8]) {
  @func_1954(%var_1956, %var_1957) /* ty=(Tensor[(4, 5, 7), float32], Tensor[(4, 5, 7), float64], Tensor[(2, 96), float64], Tensor[(1408), int8]) */
}

def @func_7507() -> (Tensor[(6, 12, 2), uint8],) {
  %548 = @func_7406() /* ty=Tensor[(6, 12, 2), int32] */;
  %549 = cast(meta[relay.Constant][40] /* ty=Tensor[(6, 12, 2), int32] */, dtype="uint8") /* ty=Tensor[(6, 12, 2), uint8] */;
  %550 = shape_of(%548, dtype="int32") /* ty=Tensor[(3), int32] */;
  %551 = cast(%548, dtype="uint8") /* ty=Tensor[(6, 12, 2), uint8] */;
  %552 = dyn.reshape(%549, %550, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %553 = add(%551, %552) /* ty=Tensor[(6, 12, 2), uint8] */;
  (%553,)
}

def @func_5459(%var_5458: int8) -> Tensor[(1, 3, 11), int8] {
  %556 = fn (%var_5448: int8) -> Tensor[(1, 3, 11), int8] {
    %554 = cast(%var_5448, dtype="int8") /* ty=int8 */;
    %555 = cast(meta[relay.Constant][41] /* ty=Tensor[(1, 3, 11), int8] */, dtype="int8") /* ty=Tensor[(1, 3, 11), int8] */;
    right_shift(%554, %555) /* ty=Tensor[(1, 3, 11), int8] */
  };
  %556(%var_5458) /* ty=Tensor[(1, 3, 11), int8] */
}

def @func_11633() -> (Tensor[(6, 12, 2), int32],) {
  @func_11631() /* ty=(Tensor[(6, 12, 2), int32],) */
}

def @func_5056(%var_5050: Tensor[(16, 1, 11), float32]) -> (Tensor[(16, 1, 11), float32],) {
  %557 = cast(%var_5050, dtype="float32") /* ty=Tensor[(16, 1, 11), float32] */;
  %558 = acosh(%557) /* ty=Tensor[(16, 1, 11), float32] */;
  (%558,)
}

def @func_6645() -> (Tensor[(6, 12, 2), float32], Tensor[(16, 7, ?), uint64], Tensor[(112), bool]) {
  %565 = fn () -> (Tensor[(6, 12, 2), float32], Tensor[(16, 7, ?), uint64], Tensor[(112), bool]) {
    %559 = @func_6480() /* ty=(Tensor[(6, 12, 2), float32], Tensor[(6, 12, 2), int32]) */;
    %560 = cast(meta[relay.Constant][42] /* ty=Tensor[(112), bool] */, dtype="bool") /* ty=Tensor[(112), bool] */;
    %561 = reshape(%560, newshape=[16, 7, 1]) /* ty=Tensor[(16, 7, 1), bool] */;
    %562 = @func_1396(%561) /* ty=(Tensor[(16, 7, ?), uint64],) */;
    %563 = %559.0;
    %564 = %562.0;
    (%563, %564, meta[relay.Constant][42] /* ty=Tensor[(112), bool] */)
  };
  %565() /* ty=(Tensor[(6, 12, 2), float32], Tensor[(16, 7, ?), uint64], Tensor[(112), bool]) */
}

def @func_5399(%var_5394: Tensor[(7, 9, 5), bool], %var_5395: Tensor[(7, 9, 5), bool], %var_5396: Tensor[(56, 2), bool], %var_5397: Tensor[(252), float64], %var_5398: Tensor[(378), uint8]) -> (Tensor[(7, 9, 5), bool], Tensor[(56, 2), bool], Tensor[(3, 2, 10), int32], Tensor[(60), int32], Tensor[(60), int32], Tensor[(392, 2), uint32], Tensor[(756), int8], Tensor[(1, 192), float64], Tensor[(378), uint8], Tensor[(16, 7, 252), int64]) {
  @func_5392(%var_5394, %var_5395, %var_5396, %var_5397, %var_5398) /* ty=(Tensor[(7, 9, 5), bool], Tensor[(56, 2), bool], Tensor[(3, 2, 10), int32], Tensor[(60), int32], Tensor[(60), int32], Tensor[(392, 2), uint32], Tensor[(756), int8], Tensor[(1, 192), float64], Tensor[(378), uint8], Tensor[(16, 7, 252), int64]) */
}

def @func_7871() -> (Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) {
  %568 = fn () -> (Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) {
    %566 = @func_5512() /* ty=Tensor[(6, 12, 2), int32] */;
    %567 = @func_7162() /* ty=Tensor[(6, 12, 2), int32] */;
    (%566, %567)
  };
  %568() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */
}

def @func_10981() -> Tensor[(6, 12, 2), int32] {
  %570 = fn () -> Tensor[(6, 12, 2), int32] {
    %569 = @func_10863() /* ty=(Tensor[(6, 12, 2), int32],) */;
    %569.0
  };
  %570() /* ty=Tensor[(6, 12, 2), int32] */
}

def @func_7753(%var_7750: Tensor[(13, 10, 10), uint16], %var_7751: Tensor[(13, 10, 10), uint16], %var_7752: int8) -> (Tensor[(13, 10, 10), uint16], int8, Tensor[(6, 12, 2), int32], Tensor[(1, 3, 11), float32], Tensor[(1408), int8], Tensor[(5, 28), float32]) {
  @func_7748(%var_7750, %var_7751, %var_7752) /* ty=(Tensor[(13, 10, 10), uint16], int8, Tensor[(6, 12, 2), int32], Tensor[(1, 3, 11), float32], Tensor[(1408), int8], Tensor[(5, 28), float32]) */
}

def @func_8862(%var_8845: Tensor[(15, 4, 3), float64]) -> (Tensor[(15, 4, 3), float64], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) {
  %571 = cast(%var_8845, dtype="float64") /* ty=Tensor[(15, 4, 3), float64] */;
  %572 = @func_8338() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %573 = sqrt(%571) /* ty=Tensor[(15, 4, 3), float64] */;
  %574 = @func_7406() /* ty=Tensor[(6, 12, 2), int32] */;
  %575 = %572.0;
  (%573, %574, %575)
}

def @func_12193() -> Tensor[(6, 12, 2), int32] {
  %576 = @func_9147() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %576.0
}

def @func_10210() -> (Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) {
  %579 = fn () -> (Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) {
    %577 = @func_9818() /* ty=Tensor[(6, 12, 2), int32] */;
    %578 = @func_7406() /* ty=Tensor[(6, 12, 2), int32] */;
    (%577, %578)
  };
  %579() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */
}

def @func_13124(%var_13113: Tensor[(756), int8]) -> (Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), bool], Tensor[(756), int8]) {
  %580 = cast(%var_13113, dtype="int8") /* ty=Tensor[(756), int8] */;
  %581 = reshape(%580, newshape=[756]) /* ty=Tensor[(756), int8] */;
  %582 = @func_5733(%581) /* ty=(Tensor[(7, 12, 9), int8], Tensor[(756), int8], Tensor[(6, 12, 2), bool]) */;
  %583 = @func_5512() /* ty=Tensor[(6, 12, 2), int32] */;
  %584 = @func_10775() /* ty=Tensor[(6, 12, 2), int32] */;
  %585 = %582.2;
  (%583, %584, %585, %var_13113)
}

def @func_12376(%var_12342: Tensor[(12, 16, 14), float32]) -> (Tensor[(6, 12, 2), int32], Tensor[(12, 16, 14), float64]) {
  %586 = @func_10387() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %587 = cast(%var_12342, dtype="float32") /* ty=Tensor[(12, 16, 14), float32] */;
  %588 = sigmoid(%587) /* ty=Tensor[(12, 16, 14), float32] */;
  %589 = cast(%588, dtype="float64") /* ty=Tensor[(12, 16, 14), float64] */;
  %590 = %586.0;
  %591 = acosh(%589) /* ty=Tensor[(12, 16, 14), float64] */;
  (%590, %591)
}

def @func_13447(%var_13446: Tensor[(7, 4, 5), float64]) -> (Tensor[(7, 4, 5), float64], Tensor[(6, 12, 2), int32]) {
  %595 = fn (%var_13424: Tensor[(7, 4, 5), float64]) -> (Tensor[(7, 4, 5), float64], Tensor[(6, 12, 2), int32]) {
    %592 = cast(%var_13424, dtype="float64") /* ty=Tensor[(7, 4, 5), float64] */;
    %593 = erf(%592) /* ty=Tensor[(7, 4, 5), float64] */;
    %594 = @func_12193() /* ty=Tensor[(6, 12, 2), int32] */;
    (%593, %594)
  };
  %595(%var_13446) /* ty=(Tensor[(7, 4, 5), float64], Tensor[(6, 12, 2), int32]) */
}

def @func_1399(%var_1397: Tensor[(16, 7, 1), bool]) -> (Tensor[(16, 7, ?), uint64],) {
  @func_1396(%var_1397) /* ty=(Tensor[(16, 7, ?), uint64],) */
}

def @func_9463() -> Tensor[(6, 12, 2), int32] {
  @func_9461() /* ty=Tensor[(6, 12, 2), int32] */
}

def @func_9819() -> Tensor[(6, 12, 2), int32] {
  %596 = fn () -> Tensor[(6, 12, 2), int32] {
    @func_5648() /* ty=Tensor[(6, 12, 2), int32] */
  };
  %596() /* ty=Tensor[(6, 12, 2), int32] */
}

def @func_10176() -> (Tensor[(756), int8],) {
  @func_10174() /* ty=(Tensor[(756), int8],) */
}

def @func_5059(%var_5057: Tensor[(16, 1, 11), float32]) -> (Tensor[(16, 1, 11), float32],) {
  @func_5056(%var_5057) /* ty=(Tensor[(16, 1, 11), float32],) */
}

def @func_9838() -> (Tensor[(6, 12, 2), int32], Tensor[(12, 7, 5), float32], Tensor[(60), float32], Tensor[(5, 84), float32]) {
  %604 = fn () -> (Tensor[(6, 12, 2), int32], Tensor[(12, 7, 5), float32], Tensor[(60), float32], Tensor[(5, 84), float32]) {
    %597 = @func_7441() /* ty=(Tensor[(6, 12, 2), int32],) */;
    %598 = cast(meta[relay.Constant][43] /* ty=Tensor[(60), float32] */, dtype="float32") /* ty=Tensor[(60), float32] */;
    %599 = cast(meta[relay.Constant][44] /* ty=Tensor[(5, 84), float32] */, dtype="float32") /* ty=Tensor[(5, 84), float32] */;
    %600 = reshape(%598, newshape=[12, 1, 5]) /* ty=Tensor[(12, 1, 5), float32] */;
    %601 = reshape(%599, newshape=[12, 7, 5]) /* ty=Tensor[(12, 7, 5), float32] */;
    %602 = %597.0;
    %603 = @func_6706(%600, %601) /* ty=Tensor[(12, 7, 5), float32] */;
    (%602, %603, meta[relay.Constant][43] /* ty=Tensor[(60), float32] */, meta[relay.Constant][44] /* ty=Tensor[(5, 84), float32] */)
  };
  %604() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(12, 7, 5), float32], Tensor[(60), float32], Tensor[(5, 84), float32]) */
}

def @func_13019() -> (Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), uint8]) {
  @func_13017() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), uint8]) */
}

def @func_11681(%var_11675: Tensor[(30, 2), int32]) -> (Tensor[(6, 12, 2), int32], Tensor[(3, 9, 14), float64], Tensor[(378), uint8], Tensor[(30, 2), int32]) {
  %605 = @func_10641() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(1, 3, 11), int8], int8, Tensor[(6, 12, 2), int32], Tensor[(9, 3, 13), bool], Tensor[(117, 3), bool], Tensor[(756), int8]) */;
  %606 = cast(meta[relay.Constant][45] /* ty=Tensor[(378), uint8] */, dtype="uint8") /* ty=Tensor[(378), uint8] */;
  %607 = cast(%var_11675, dtype="int32") /* ty=Tensor[(30, 2), int32] */;
  %608 = reshape(%606, newshape=[3, 9, 14]) /* ty=Tensor[(3, 9, 14), uint8] */;
  %609 = reshape(%607, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), int32] */;
  %610 = @func_206(%608, %609) /* ty=(Tensor[(60), int32], Tensor[(3, 2, 10), bool], Tensor[(3, 2, 10), int32], Tensor[(3, 9, 14), float64], Tensor[(3, 2, 10), int32]) */;
  %611 = %605.3;
  %612 = %610.3;
  (%611, %612, meta[relay.Constant][45] /* ty=Tensor[(378), uint8] */, %var_11675)
}

def @func_9034() -> (Tensor[(6, 12, 2), int32],) {
  %614 = fn () -> (Tensor[(6, 12, 2), int32],) {
    %613 = @func_7551() /* ty=Tensor[(6, 12, 2), int32] */;
    (%613,)
  };
  %614() /* ty=(Tensor[(6, 12, 2), int32],) */
}

def @func_11744() -> (Tensor[(6, 12, 2), int32],) {
  @func_11742() /* ty=(Tensor[(6, 12, 2), int32],) */
}

def @func_10864() -> (Tensor[(6, 12, 2), int32],) {
  %617 = fn () -> (Tensor[(6, 12, 2), int32],) {
    %615 = @func_10387() /* ty=(Tensor[(6, 12, 2), int32],) */;
    %616 = %615.0;
    (%616,)
  };
  %617() /* ty=(Tensor[(6, 12, 2), int32],) */
}

def @func_7442() -> (Tensor[(6, 12, 2), int32],) {
  %619 = fn () -> (Tensor[(6, 12, 2), int32],) {
    %618 = @func_7162() /* ty=Tensor[(6, 12, 2), int32] */;
    (%618,)
  };
  %619() /* ty=(Tensor[(6, 12, 2), int32],) */
}

def @func_13752() -> (Tensor[(14, 15, 7), int8], Tensor[(14, 15, 7), float32], Tensor[(9, 3, 13), bool], Tensor[(176), float32]) {
  %620 = cast(meta[relay.Constant][47] /* ty=Tensor[(14, 15, 7), int8] */, dtype="int8") /* ty=Tensor[(14, 15, 7), int8] */;
  %621 = shape_of(meta[relay.Constant][46] /* ty=Tensor[(14, 15, 7), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %622 = cast(meta[relay.Constant][46] /* ty=Tensor[(14, 15, 7), int8] */, dtype="int8") /* ty=Tensor[(14, 15, 7), int8] */;
  %623 = dyn.reshape(%620, %621, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %624 = cast(meta[relay.Constant][46] /* ty=Tensor[(14, 15, 7), int8] */, dtype="float32") /* ty=Tensor[(14, 15, 7), float32] */;
  %625 = @func_10641() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(1, 3, 11), int8], int8, Tensor[(6, 12, 2), int32], Tensor[(9, 3, 13), bool], Tensor[(117, 3), bool], Tensor[(756), int8]) */;
  %626 = @func_11271() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(1300), uint16], int8, Tensor[(16, 1, 11), float32], Tensor[(176), float32], Tensor[(13, 10, 10), float32]) */;
  %627 = minimum(%622, %623) /* ty=Tensor[(14, 15, 7), int8] */;
  %628 = exp(%624) /* ty=Tensor[(14, 15, 7), float32] */;
  %629 = %625.4;
  %630 = %626.4;
  (%627, %628, %629, %630)
}

def @func_12225() -> (Tensor[(6, 12, 2), int32],) {
  %633 = fn () -> (Tensor[(6, 12, 2), int32],) {
    %631 = @func_9298() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */;
    %632 = %631.1;
    (%632,)
  };
  %633() /* ty=(Tensor[(6, 12, 2), int32],) */
}

def @func_5882(%var_5748: Tensor[(5, 12, 8), float32], %var_5749: Tensor[(5, 12, 8), float32], %var_5775: Tensor[(96, 2), float64], %var_5840: Tensor[(4, 44), float32], %var_5847: Tensor[(4, 44), float32], %var_5859: Tensor[(300), float32]) -> (Tensor[(5, 12, 8), float32], Tensor[(3, 4, 16), float64], Tensor[(96, 2), float64], Tensor[(6, 12, 2), int32], Tensor[(4, 44), int64], Tensor[(3, 2, 10), float32], Tensor[(300), float32], Tensor[(378), uint8], Tensor[(16, 1, 11), float32]) {
  %634 = cast(%var_5749, dtype="float32") /* ty=Tensor[(5, 12, 8), float32] */;
  %635 = shape_of(%var_5748, dtype="int32") /* ty=Tensor[(3), int32] */;
  %636 = cast(%var_5748, dtype="float32") /* ty=Tensor[(5, 12, 8), float32] */;
  %637 = dyn.reshape(%634, %635, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %638 = cast(%var_5775, dtype="float64") /* ty=Tensor[(96, 2), float64] */;
  %639 = reshape(%638, newshape=[3, 4, 16]) /* ty=Tensor[(3, 4, 16), float64] */;
  %640 = cast(%var_5847, dtype="int64") /* ty=Tensor[(4, 44), int64] */;
  %641 = shape_of(%var_5840, dtype="int32") /* ty=Tensor[(2), int32] */;
  %642 = cast(%var_5840, dtype="int64") /* ty=Tensor[(4, 44), int64] */;
  %643 = dyn.reshape(%640, %641, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %644 = cast(%var_5859, dtype="float32") /* ty=Tensor[(300), float32] */;
  %645 = @func_1144(%639) /* ty=Tensor[(3, 4, 16), float64] */;
  %646 = cast(%645, dtype="float64") /* ty=Tensor[(3, 4, 16), float64] */;
  %647 = cast(meta[relay.Constant][48] /* ty=Tensor[(378), uint8] */, dtype="uint8") /* ty=Tensor[(378), uint8] */;
  %648 = reshape(%644, newshape=[15, 2, 10]) /* ty=Tensor[(15, 2, 10), float32] */;
  %649 = reshape(%646, newshape=[48, 4]) /* ty=Tensor[(48, 4), float64] */;
  %650 = reshape(%647, newshape=[126, 3]) /* ty=Tensor[(126, 3), uint8] */;
  %651 = @func_4826(%648, %649, %650) /* ty=(Tensor[(15, 2, 10), float32], Tensor[(3, 4, 16), float64], Tensor[(48, 4), float64], Tensor[(60), uint16], Tensor[(3, 2, 10), int32], Tensor[(126, 3), uint8], Tensor[(11, 8, 16), float64], Tensor[(1408), int8], Tensor[(3, 2, 10), float32], Tensor[(3, 2, 10), int32], Tensor[(756), int8], Tensor[(1408), int8], Tensor[(140), float32]) */;
  %652 = cast(%var_5840, dtype="float32") /* ty=Tensor[(4, 44), float32] */;
  %653 = reshape(%652, newshape=[16, 1, 11]) /* ty=Tensor[(16, 1, 11), float32] */;
  %654 = @func_5056(%653) /* ty=(Tensor[(16, 1, 11), float32],) */;
  %655 = %654.0;
  %656 = cast(%655, dtype="float64") /* ty=Tensor[(16, 1, 11), float64] */;
  %657 = sinh(%656) /* ty=Tensor[(16, 1, 11), float64] */;
  %658 = cast(%657, dtype="float32") /* ty=Tensor[(16, 1, 11), float32] */;
  %659 = maximum(%636, %637) /* ty=Tensor[(5, 12, 8), float32] */;
  %660 = @func_5648() /* ty=Tensor[(6, 12, 2), int32] */;
  %661 = bitwise_or(%642, %643) /* ty=Tensor[(4, 44), int64] */;
  %662 = %651.8;
  %663 = tan(%658) /* ty=Tensor[(16, 1, 11), float32] */;
  (%659, %645, %var_5775, %660, %661, %662, %var_5859, meta[relay.Constant][48] /* ty=Tensor[(378), uint8] */, %663)
}

def @func_9010(%var_8968: Tensor[(9, 84), int8]) -> (Tensor[(6, 12, 2), uint32], Tensor[(7, 12, 9), int8], Tensor[(9, 84), int8], Tensor[(15, 12, 4), float32], Tensor[(720), float64], Tensor[(18, 42), float64]) {
  %664 = @func_5512() /* ty=Tensor[(6, 12, 2), int32] */;
  %665 = cast(meta[relay.Constant][49] /* ty=Tensor[(6, 12, 2), int32] */, dtype="uint32") /* ty=Tensor[(6, 12, 2), uint32] */;
  %666 = shape_of(%664, dtype="int32") /* ty=Tensor[(3), int32] */;
  %667 = cast(%664, dtype="uint32") /* ty=Tensor[(6, 12, 2), uint32] */;
  %668 = dyn.reshape(%665, %666, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %669 = cast(%var_8968, dtype="int8") /* ty=Tensor[(9, 84), int8] */;
  %670 = cast(%var_8968, dtype="int8") /* ty=Tensor[(9, 84), int8] */;
  %671 = reshape(%669, newshape=[7, 12, 9]) /* ty=Tensor[(7, 12, 9), int8] */;
  %672 = reshape(%670, newshape=[7, 12, 9]) /* ty=Tensor[(7, 12, 9), int8] */;
  %673 = @func_1789(%671, %672) /* ty=(Tensor[(7, 12, 9), int8], Tensor[(3, 2, 10), int32], Tensor[(378), uint8], Tensor[(60), int32]) */;
  %674 = cast(meta[relay.Constant][50] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
  %675 = reshape(%674, newshape=[15, 12, 4]) /* ty=Tensor[(15, 12, 4), float64] */;
  %676 = @func_3057(%675) /* ty=(Tensor[(15, 12, 4), float64], Tensor[(15, 12, 4), float32]) */;
  %677 = cast(%var_8968, dtype="int8") /* ty=Tensor[(9, 84), int8] */;
  %678 = reshape(%677, newshape=[18, 42]) /* ty=Tensor[(18, 42), int8] */;
  %679 = @func_7364(%678) /* ty=(Tensor[(6, 12, 2), int32], Tensor[(9, 3, 13), bool], Tensor[(351), bool], Tensor[(18, 42), int8]) */;
  %680 = %679.3;
  %681 = cast(%680, dtype="float64") /* ty=Tensor[(18, 42), float64] */;
  %682 = logical_xor(%667, %668) /* ty=Tensor[(6, 12, 2), uint32] */;
  %683 = %673.0;
  %684 = %676.1;
  %685 = asinh(%681) /* ty=Tensor[(18, 42), float64] */;
  (%682, %683, %var_8968, %684, meta[relay.Constant][50] /* ty=Tensor[(720), float64] */, %685)
}

def @func_11271() -> (Tensor[(6, 12, 2), int32], Tensor[(1300), uint16], int8, Tensor[(16, 1, 11), float32], Tensor[(176), float32], Tensor[(13, 10, 10), float32]) {
  %686 = @func_6551() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */;
  %687 = cast(meta[relay.Constant][53] /* ty=Tensor[(176), float32] */, dtype="float32") /* ty=Tensor[(176), float32] */;
  %688 = reshape(%687, newshape=[16, 1, 11]) /* ty=Tensor[(16, 1, 11), float32] */;
  %689 = @func_5056(%688) /* ty=(Tensor[(16, 1, 11), float32],) */;
  %690 = cast(meta[relay.Constant][51] /* ty=Tensor[(1300), uint16] */, dtype="uint16") /* ty=Tensor[(1300), uint16] */;
  %691 = cast(meta[relay.Constant][51] /* ty=Tensor[(1300), uint16] */, dtype="uint16") /* ty=Tensor[(1300), uint16] */;
  %692 = cast(meta[relay.Constant][52] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %693 = reshape(%690, newshape=[13, 10, 10]) /* ty=Tensor[(13, 10, 10), uint16] */;
  %694 = reshape(%691, newshape=[13, 10, 10]) /* ty=Tensor[(13, 10, 10), uint16] */;
  %695 = reshape(%692, newshape=[]) /* ty=int8 */;
  %696 = @func_7748(%693, %694, %695) /* ty=(Tensor[(13, 10, 10), uint16], int8, Tensor[(6, 12, 2), int32], Tensor[(1, 3, 11), float32], Tensor[(1408), int8], Tensor[(5, 28), float32]) */;
  %697 = %696.0;
  %698 = cast(%697, dtype="float32") /* ty=Tensor[(13, 10, 10), float32] */;
  %699 = %686.1;
  %700 = %689.0;
  %701 = cosh(%698) /* ty=Tensor[(13, 10, 10), float32] */;
  (%699, meta[relay.Constant][51] /* ty=Tensor[(1300), uint16] */, meta[relay.Constant][52] /* ty=int8 */, %700, meta[relay.Constant][53] /* ty=Tensor[(176), float32] */, %701)
}

def @func_9336() -> Tensor[(6, 12, 2), int32] {
  %703 = fn () -> Tensor[(6, 12, 2), int32] {
    %702 = @func_6154() /* ty=(Tensor[(6, 12, 2), int32],) */;
    %702.0
  };
  %703() /* ty=Tensor[(6, 12, 2), int32] */
}

def @func_12507() -> Tensor[(6, 12, 2), float32] {
  %707 = fn () -> Tensor[(6, 12, 2), float32] {
    %704 = @func_11786() /* ty=(Tensor[(6, 12, 2), int32],) */;
    %705 = %704.0;
    %706 = cast(%705, dtype="float32") /* ty=Tensor[(6, 12, 2), float32] */;
    atan(%706) /* ty=Tensor[(6, 12, 2), float32] */
  };
  %707() /* ty=Tensor[(6, 12, 2), float32] */
}

def @main(%var_14712: Tensor[(2, 15, 14), uint8]) -> (Tensor[(2, 15, 14), uint8],) {
  %708 = cast(%var_14712, dtype="uint8") /* ty=Tensor[(2, 15, 14), uint8] */;
  %709 = shape_of(meta[relay.Constant][54] /* ty=Tensor[(2, 15, 14), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %710 = cast(meta[relay.Constant][54] /* ty=Tensor[(2, 15, 14), uint8] */, dtype="uint8") /* ty=Tensor[(2, 15, 14), uint8] */;
  %711 = dyn.reshape(%708, %709, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %712 = add(%710, %711) /* ty=Tensor[(2, 15, 14), uint8] */;
  (%712,)
}

def @func_5649() -> Tensor[(6, 12, 2), int32] {
  %713 = fn () -> Tensor[(6, 12, 2), int32] {
    @func_5512() /* ty=Tensor[(6, 12, 2), int32] */
  };
  %713() /* ty=Tensor[(6, 12, 2), int32] */
}

def @func_14535(%var_14534: Tensor[(378), uint8]) -> (Tensor[(6, 12, 2), int32], Tensor[(378), uint8], Tensor[(378), uint8], Tensor[(60), int32], Tensor[(6, 12, 2), int32]) {
  %724 = fn (%var_14497: Tensor[(378), uint8]) -> (Tensor[(6, 12, 2), int32], Tensor[(378), uint8], Tensor[(378), uint8], Tensor[(60), int32], Tensor[(6, 12, 2), int32]) {
    %714 = @func_10387() /* ty=(Tensor[(6, 12, 2), int32],) */;
    %715 = cast(%var_14497, dtype="uint8") /* ty=Tensor[(378), uint8] */;
    %716 = cast(meta[relay.Constant][55] /* ty=Tensor[(60), int32] */, dtype="int32") /* ty=Tensor[(60), int32] */;
    %717 = reshape(%715, newshape=[378]) /* ty=Tensor[(378), uint8] */;
    %718 = reshape(%716, newshape=[60]) /* ty=Tensor[(60), int32] */;
    %719 = @func_13505(%717, %718) /* ty=(Tensor[(6, 12, 2), int32], Tensor[(60), int32], Tensor[(378), uint8], Tensor[(60), int32], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */;
    %720 = @func_5899() /* ty=(Tensor[(6, 12, 2), int32],) */;
    %721 = %714.0;
    %722 = %719.2;
    %723 = %720.0;
    (%721, %722, %var_14497, meta[relay.Constant][55] /* ty=Tensor[(60), int32] */, %723)
  };
  %724(%var_14534) /* ty=(Tensor[(6, 12, 2), int32], Tensor[(378), uint8], Tensor[(378), uint8], Tensor[(60), int32], Tensor[(6, 12, 2), int32]) */
}

def @func_8598(%var_8595: Tensor[(6, 12, 2), int32], %var_8596: Tensor[(252), float64], %var_8597: Tensor[(720), float64]) -> (Tensor[(6, 12, 2), float32], Tensor[(60), int32], Tensor[(252), float64], Tensor[(54, 14), int8], Tensor[(6, 12, 2), int32], Tensor[(15, 12, 4), float32], Tensor[(720), float64]) {
  @func_8593(%var_8595, %var_8596, %var_8597) /* ty=(Tensor[(6, 12, 2), float32], Tensor[(60), int32], Tensor[(252), float64], Tensor[(54, 14), int8], Tensor[(6, 12, 2), int32], Tensor[(15, 12, 4), float32], Tensor[(720), float64]) */
}

def @func_13572() -> Tensor[(6, 12, 2), int32] {
  @func_5512() /* ty=Tensor[(6, 12, 2), int32] */
}

def @func_11787() -> (Tensor[(6, 12, 2), int32],) {
  %726 = fn () -> (Tensor[(6, 12, 2), int32],) {
    %725 = @func_7952() /* ty=Tensor[(6, 12, 2), int32] */;
    (%725,)
  };
  %726() /* ty=(Tensor[(6, 12, 2), int32],) */
}

def @func_13917() -> (Tensor[(6, 12, 2), int32],) {
  %728 = fn () -> (Tensor[(6, 12, 2), int32],) {
    %727 = @func_7952() /* ty=Tensor[(6, 12, 2), int32] */;
    (%727,)
  };
  %728() /* ty=(Tensor[(6, 12, 2), int32],) */
}

def @func_5392(%var_5338: Tensor[(7, 9, 5), bool], %var_5339: Tensor[(7, 9, 5), bool], %var_5364: Tensor[(56, 2), bool], %var_5383: Tensor[(252), float64], %var_5384: Tensor[(378), uint8]) -> (Tensor[(7, 9, 5), bool], Tensor[(56, 2), bool], Tensor[(3, 2, 10), int32], Tensor[(60), int32], Tensor[(60), int32], Tensor[(392, 2), uint32], Tensor[(756), int8], Tensor[(1, 192), float64], Tensor[(378), uint8], Tensor[(16, 7, 252), int64]) {
  %729 = cast(%var_5339, dtype="bool") /* ty=Tensor[(7, 9, 5), bool] */;
  %730 = shape_of(%var_5338, dtype="int32") /* ty=Tensor[(3), int32] */;
  %731 = cast(%var_5338, dtype="bool") /* ty=Tensor[(7, 9, 5), bool] */;
  %732 = dyn.reshape(%729, %730, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %733 = logical_and(%731, %732) /* ty=Tensor[(7, 9, 5), bool] */;
  %734 = cast(%733, dtype="bool") /* ty=Tensor[(7, 9, 5), bool] */;
  %735 = shape_of(%var_5338, dtype="int32") /* ty=Tensor[(3), int32] */;
  %736 = cast(%var_5338, dtype="bool") /* ty=Tensor[(7, 9, 5), bool] */;
  %737 = dyn.reshape(%734, %735, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %738 = cast(meta[relay.Constant][56] /* ty=Tensor[(60), int32] */, dtype="int32") /* ty=Tensor[(60), int32] */;
  %739 = cast(meta[relay.Constant][56] /* ty=Tensor[(60), int32] */, dtype="int32") /* ty=Tensor[(60), int32] */;
  %740 = reshape(%738, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), int32] */;
  %741 = reshape(%739, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), int32] */;
  %742 = cast(meta[relay.Constant][57] /* ty=Tensor[(392, 2), uint32] */, dtype="uint32") /* ty=Tensor[(392, 2), uint32] */;
  %743 = cast(meta[relay.Constant][57] /* ty=Tensor[(392, 2), uint32] */, dtype="uint32") /* ty=Tensor[(392, 2), uint32] */;
  %744 = cast(meta[relay.Constant][56] /* ty=Tensor[(60), int32] */, dtype="int32") /* ty=Tensor[(60), int32] */;
  %745 = cast(meta[relay.Constant][58] /* ty=Tensor[(756), int8] */, dtype="int8") /* ty=Tensor[(756), int8] */;
  %746 = cast(meta[relay.Constant][59] /* ty=Tensor[(1, 192), float64] */, dtype="float64") /* ty=Tensor[(1, 192), float64] */;
  %747 = cast(%var_5383, dtype="float64") /* ty=Tensor[(252), float64] */;
  %748 = cast(%var_5384, dtype="uint8") /* ty=Tensor[(378), uint8] */;
  %749 = reshape(%742, newshape=[8, 7, 14]) /* ty=Tensor[(8, 7, 14), uint32] */;
  %750 = reshape(%743, newshape=[8, 7, 14]) /* ty=Tensor[(8, 7, 14), uint32] */;
  %751 = reshape(%744, newshape=[60]) /* ty=Tensor[(60), int32] */;
  %752 = reshape(%745, newshape=[9, 84]) /* ty=Tensor[(9, 84), int8] */;
  %753 = reshape(%746, newshape=[24, 8]) /* ty=Tensor[(24, 8), float64] */;
  %754 = reshape(%747, newshape=[1, 252]) /* ty=Tensor[(1, 252), float64] */;
  %755 = reshape(%748, newshape=[378]) /* ty=Tensor[(378), uint8] */;
  %756 = @func_2765(%749, %750, %751, %752, %753, %754, %755) /* ty=(Tensor[(60), int32], Tensor[(288), int8], Tensor[(112), bool], Tensor[(60), int32], Tensor[(8, 7, 14), float64], Tensor[(3, 2, 10), int32], Tensor[(9, 84), int8], Tensor[(3, 4, 16), float64], Tensor[(24, 8), float64], Tensor[(3, 4, 16), float64], Tensor[(60), int32], Tensor[(1, 252), float64], Tensor[(3, 2, 10), int32], Tensor[(378), uint8], Tensor[(60), int32], int16, Tensor[(16, 7, ?), uint64], Tensor[(11, 8, 16), int8], Tensor[(2, 704), int8]) */;
  %757 = cast(%var_5364, dtype="bool") /* ty=Tensor[(56, 2), bool] */;
  %758 = reshape(%757, newshape=[16, 7, 1]) /* ty=Tensor[(16, 7, 1), bool] */;
  %759 = @func_1396(%758) /* ty=(Tensor[(16, 7, ?), uint64],) */;
  %760 = %759.0;
  %761 = cast(%var_5383, dtype="int64") /* ty=Tensor[(252), int64] */;
  %762 = cast(%760, dtype="int64") /* ty=Tensor[(16, 7, ?), int64] */;
  %763 = logical_or(%736, %737) /* ty=Tensor[(7, 9, 5), bool] */;
  %764 = @func_10(%740, %741) /* ty=Tensor[(3, 2, 10), int32] */;
  %765 = %756.10;
  %766 = bitwise_or(%761, %762) /* ty=Tensor[(16, 7, 252), int64] */;
  (%763, %var_5364, %764, meta[relay.Constant][56] /* ty=Tensor[(60), int32] */, %765, meta[relay.Constant][57] /* ty=Tensor[(392, 2), uint32] */, meta[relay.Constant][58] /* ty=Tensor[(756), int8] */, meta[relay.Constant][59] /* ty=Tensor[(1, 192), float64] */, %var_5384, %766)
}

def @func_10846() -> (Tensor[(6, 12, 2), int32],) {
  %767 = @func_6529() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %768 = %767.0;
  (%768,)
}

def @func_2940(%var_2938: Tensor[(15, 6, 15), int32], %var_2939: Tensor[(15, 6, 15), int32]) -> Tensor[(15, 6, 15), float32] {
  @func_2936(%var_2938, %var_2939) /* ty=Tensor[(15, 6, 15), float32] */
}

def @func_2098(%var_2096: Tensor[(9, 4, 7), float64], %var_2097: Tensor[(756), int8]) -> (Tensor[(60), int32], Tensor[(756), int8], Tensor[(9, 4, 7), bool]) {
  %782 = fn (%var_2060: Tensor[(9, 4, 7), float64], %var_2068: Tensor[(756), int8]) -> (Tensor[(60), int32], Tensor[(756), int8], Tensor[(9, 4, 7), bool]) {
    %769 = cast(%var_2068, dtype="int8") /* ty=Tensor[(756), int8] */;
    %770 = cast(%var_2068, dtype="int8") /* ty=Tensor[(756), int8] */;
    %771 = reshape(%769, newshape=[7, 12, 9]) /* ty=Tensor[(7, 12, 9), int8] */;
    %772 = reshape(%770, newshape=[7, 12, 9]) /* ty=Tensor[(7, 12, 9), int8] */;
    %773 = @func_1789(%771, %772) /* ty=(Tensor[(7, 12, 9), int8], Tensor[(3, 2, 10), int32], Tensor[(378), uint8], Tensor[(60), int32]) */;
    %774 = cast(%var_2060, dtype="float64") /* ty=Tensor[(9, 4, 7), float64] */;
    %775 = acosh(%774) /* ty=Tensor[(9, 4, 7), float64] */;
    %776 = cast(%var_2060, dtype="bool") /* ty=Tensor[(9, 4, 7), bool] */;
    %777 = shape_of(%775, dtype="int32") /* ty=Tensor[(3), int32] */;
    %778 = cast(%775, dtype="bool") /* ty=Tensor[(9, 4, 7), bool] */;
    %779 = dyn.reshape(%776, %777, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %780 = %773.3;
    %781 = less(%778, %779) /* ty=Tensor[(9, 4, 7), bool] */;
    (%780, %var_2068, %781)
  };
  %782(%var_2096, %var_2097) /* ty=(Tensor[(60), int32], Tensor[(756), int8], Tensor[(9, 4, 7), bool]) */
}

def @func_11211(%var_11206: Tensor[(192), float64], %var_11208: Tensor[(300), float32]) -> (Tensor[(756), int8], Tensor[(6, 12, 2), int32], Tensor[(480), float32], Tensor[(192), float64], Tensor[(1, 176), float32], Tensor[(300), float32]) {
  %783 = @func_10174() /* ty=(Tensor[(756), int8],) */;
  %784 = cast(meta[relay.Constant][60] /* ty=Tensor[(480), float32] */, dtype="float32") /* ty=Tensor[(480), float32] */;
  %785 = cast(meta[relay.Constant][60] /* ty=Tensor[(480), float32] */, dtype="float32") /* ty=Tensor[(480), float32] */;
  %786 = cast(%var_11206, dtype="float64") /* ty=Tensor[(192), float64] */;
  %787 = cast(meta[relay.Constant][61] /* ty=Tensor[(1, 176), float32] */, dtype="float32") /* ty=Tensor[(1, 176), float32] */;
  %788 = cast(meta[relay.Constant][61] /* ty=Tensor[(1, 176), float32] */, dtype="float32") /* ty=Tensor[(1, 176), float32] */;
  %789 = cast(%var_11208, dtype="float32") /* ty=Tensor[(300), float32] */;
  %790 = reshape(%784, newshape=[5, 12, 8]) /* ty=Tensor[(5, 12, 8), float32] */;
  %791 = reshape(%785, newshape=[5, 12, 8]) /* ty=Tensor[(5, 12, 8), float32] */;
  %792 = reshape(%786, newshape=[96, 2]) /* ty=Tensor[(96, 2), float64] */;
  %793 = reshape(%787, newshape=[4, 44]) /* ty=Tensor[(4, 44), float32] */;
  %794 = reshape(%788, newshape=[4, 44]) /* ty=Tensor[(4, 44), float32] */;
  %795 = reshape(%789, newshape=[300]) /* ty=Tensor[(300), float32] */;
  %796 = @func_5882(%790, %791, %792, %793, %794, %795) /* ty=(Tensor[(5, 12, 8), float32], Tensor[(3, 4, 16), float64], Tensor[(96, 2), float64], Tensor[(6, 12, 2), int32], Tensor[(4, 44), int64], Tensor[(3, 2, 10), float32], Tensor[(300), float32], Tensor[(378), uint8], Tensor[(16, 1, 11), float32]) */;
  %797 = %783.0;
  %798 = %796.3;
  (%797, %798, meta[relay.Constant][60] /* ty=Tensor[(480), float32] */, %var_11206, meta[relay.Constant][61] /* ty=Tensor[(1, 176), float32] */, %var_11208)
}

def @func_10997() -> Tensor[(6, 12, 2), int32] {
  %799 = @func_10209() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */;
  %799.0
}

def @func_7953() -> Tensor[(6, 12, 2), int32] {
  %800 = fn () -> Tensor[(6, 12, 2), int32] {
    @func_5512() /* ty=Tensor[(6, 12, 2), int32] */
  };
  %800() /* ty=Tensor[(6, 12, 2), int32] */
}

def @func_8112(%var_8110: Tensor[(3, 84), float64]) -> (Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32], Tensor[(192), float64], Tensor[(5, 42), float64], Tensor[(378, 2), int8], Tensor[(3, 84), float64]) {
  @func_8109(%var_8110) /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32], Tensor[(192), float64], Tensor[(5, 42), float64], Tensor[(378, 2), int8], Tensor[(3, 84), float64]) */
}

def @func_11631() -> (Tensor[(6, 12, 2), int32],) {
  %801 = @func_9298() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */;
  %802 = %801.1;
  (%802,)
}

def @func_11221() -> Tensor[(6, 12, 2), int32] {
  %803 = fn () -> Tensor[(6, 12, 2), int32] {
    @func_5512() /* ty=Tensor[(6, 12, 2), int32] */
  };
  %803() /* ty=Tensor[(6, 12, 2), int32] */
}

def @func_14584() -> (Tensor[(6, 12, 2), int32], Tensor[(192), float64], Tensor[(252), float64], Tensor[(6, 12, 2), int32]) {
  %812 = fn () -> (Tensor[(6, 12, 2), int32], Tensor[(192), float64], Tensor[(252), float64], Tensor[(6, 12, 2), int32]) {
    %804 = @func_10682() /* ty=(Tensor[(6, 12, 2), int32],) */;
    %805 = cast(meta[relay.Constant][62] /* ty=Tensor[(252), float64] */, dtype="float64") /* ty=Tensor[(252), float64] */;
    %806 = reshape(%805, newshape=[3, 84]) /* ty=Tensor[(3, 84), float64] */;
    %807 = @func_8109(%806) /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32], Tensor[(192), float64], Tensor[(5, 42), float64], Tensor[(378, 2), int8], Tensor[(3, 84), float64]) */;
    %808 = @func_13394() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), uint8], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), float32], Tensor[(6, 12, 2), int32]) */;
    %809 = %804.0;
    %810 = %807.2;
    %811 = %808.4;
    (%809, %810, meta[relay.Constant][62] /* ty=Tensor[(252), float64] */, %811)
  };
  %812() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(192), float64], Tensor[(252), float64], Tensor[(6, 12, 2), int32]) */
}

def @func_8340() -> (Tensor[(6, 12, 2), int32],) {
  @func_8338() /* ty=(Tensor[(6, 12, 2), int32],) */
}

def @func_13829(%var_13828: Tensor[(192), float64]) -> (Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32], Tensor[(192), float64]) {
  %819 = fn (%var_13788: Tensor[(192), float64]) -> (Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32], Tensor[(192), float64]) {
    %813 = @func_8677() /* ty=(Tensor[(6, 12, 2), int32],) */;
    %814 = cast(%var_13788, dtype="float64") /* ty=Tensor[(192), float64] */;
    %815 = reshape(%814, newshape=[192]) /* ty=Tensor[(192), float64] */;
    %816 = @func_9906(%815) /* ty=(Tensor[(6, 12, 2), uint8], Tensor[(378), uint8], Tensor[(192), float64], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */;
    %817 = %813.0;
    %818 = %816.3;
    (%817, %818, %var_13788)
  };
  %819(%var_13828) /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32], Tensor[(192), float64]) */
}

def @func_1954(%var_1938: Tensor[(4, 5, 7), float32], %var_1939: Tensor[(4, 5, 7), float32]) -> (Tensor[(4, 5, 7), float32], Tensor[(4, 5, 7), float64], Tensor[(2, 96), float64], Tensor[(1408), int8]) {
  %820 = cast(%var_1939, dtype="float32") /* ty=Tensor[(4, 5, 7), float32] */;
  %821 = shape_of(%var_1938, dtype="int32") /* ty=Tensor[(3), int32] */;
  %822 = cast(%var_1938, dtype="float32") /* ty=Tensor[(4, 5, 7), float32] */;
  %823 = dyn.reshape(%820, %821, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %824 = cast(%var_1939, dtype="float64") /* ty=Tensor[(4, 5, 7), float64] */;
  %825 = shape_of(%var_1938, dtype="int32") /* ty=Tensor[(3), int32] */;
  %826 = cast(%var_1938, dtype="float64") /* ty=Tensor[(4, 5, 7), float64] */;
  %827 = dyn.reshape(%824, %825, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %828 = cast(meta[relay.Constant][63] /* ty=Tensor[(1408), int8] */, dtype="int8") /* ty=Tensor[(1408), int8] */;
  %829 = cast(meta[relay.Constant][63] /* ty=Tensor[(1408), int8] */, dtype="int8") /* ty=Tensor[(1408), int8] */;
  %830 = reshape(%828, newshape=[11, 8, 16]) /* ty=Tensor[(11, 8, 16), int8] */;
  %831 = reshape(%829, newshape=[11, 8, 16]) /* ty=Tensor[(11, 8, 16), int8] */;
  %832 = @func_1356(%830, %831) /* ty=(Tensor[(11, 8, 16), int8], Tensor[(11, 8, 16), float64], Tensor[(3, 4, 16), float64], Tensor[(2, 96), float64]) */;
  %833 = power(%822, %823) /* ty=Tensor[(4, 5, 7), float32] */;
  %834 = floor_mod(%826, %827) /* ty=Tensor[(4, 5, 7), float64] */;
  %835 = %832.3;
  (%833, %834, %835, meta[relay.Constant][63] /* ty=Tensor[(1408), int8] */)
}

def @func_12264() -> Tensor[(112), bool] {
  @func_12262() /* ty=Tensor[(112), bool] */
}

def @func_5890(%var_5884: Tensor[(5, 12, 8), float32], %var_5885: Tensor[(5, 12, 8), float32], %var_5886: Tensor[(96, 2), float64], %var_5887: Tensor[(4, 44), float32], %var_5888: Tensor[(4, 44), float32], %var_5889: Tensor[(300), float32]) -> (Tensor[(5, 12, 8), float32], Tensor[(3, 4, 16), float64], Tensor[(96, 2), float64], Tensor[(6, 12, 2), int32], Tensor[(4, 44), int64], Tensor[(3, 2, 10), float32], Tensor[(300), float32], Tensor[(378), uint8], Tensor[(16, 1, 11), float32]) {
  @func_5882(%var_5884, %var_5885, %var_5886, %var_5887, %var_5888, %var_5889) /* ty=(Tensor[(5, 12, 8), float32], Tensor[(3, 4, 16), float64], Tensor[(96, 2), float64], Tensor[(6, 12, 2), int32], Tensor[(4, 44), int64], Tensor[(3, 2, 10), float32], Tensor[(300), float32], Tensor[(378), uint8], Tensor[(16, 1, 11), float32]) */
}

def @func_12413() -> (Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) {
  @func_12411() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */
}

def @func_7552() -> Tensor[(6, 12, 2), int32] {
  %836 = fn () -> Tensor[(6, 12, 2), int32] {
    @func_5512() /* ty=Tensor[(6, 12, 2), int32] */
  };
  %836() /* ty=Tensor[(6, 12, 2), int32] */
}

def @func_9804(%var_9803: Tensor[(672), float64]) -> (Tensor[(6, 12, 2), uint16], Tensor[(7, 16, 6), float64], Tensor[(672), float64]) {
  %846 = fn (%var_9798: Tensor[(672), float64]) -> (Tensor[(6, 12, 2), uint16], Tensor[(7, 16, 6), float64], Tensor[(672), float64]) {
    %837 = @func_7162() /* ty=Tensor[(6, 12, 2), int32] */;
    %838 = cast(meta[relay.Constant][64] /* ty=Tensor[(6, 12, 2), int32] */, dtype="uint16") /* ty=Tensor[(6, 12, 2), uint16] */;
    %839 = shape_of(%837, dtype="int32") /* ty=Tensor[(3), int32] */;
    %840 = cast(%837, dtype="uint16") /* ty=Tensor[(6, 12, 2), uint16] */;
    %841 = dyn.reshape(%838, %839, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %842 = cast(%var_9798, dtype="float64") /* ty=Tensor[(672), float64] */;
    %843 = reshape(%842, newshape=[7, 16, 6]) /* ty=Tensor[(7, 16, 6), float64] */;
    %844 = bitwise_and(%840, %841) /* ty=Tensor[(6, 12, 2), uint16] */;
    %845 = @func_4053(%843) /* ty=Tensor[(7, 16, 6), float64] */;
    (%844, %845, %var_9798)
  };
  %846(%var_9803) /* ty=(Tensor[(6, 12, 2), uint16], Tensor[(7, 16, 6), float64], Tensor[(672), float64]) */
}

def @func_10735(%var_10733: uint16, %var_10734: Tensor[(8, 7, 1), uint16]) -> Tensor[(8, 7, 1), float64] {
  %852 = fn (%var_10719: uint16, %var_10720: Tensor[(8, 7, 1), uint16]) -> Tensor[(8, 7, 1), float64] {
    %847 = cast(%var_10719, dtype="uint16") /* ty=uint16 */;
    %848 = cast(%var_10720, dtype="uint16") /* ty=Tensor[(8, 7, 1), uint16] */;
    %849 = left_shift(%847, %848) /* ty=Tensor[(8, 7, 1), uint16] */;
    %850 = cast(%var_10719, dtype="float64") /* ty=float64 */;
    %851 = cast(%849, dtype="float64") /* ty=Tensor[(8, 7, 1), float64] */;
    floor_mod(%850, %851) /* ty=Tensor[(8, 7, 1), float64] */
  };
  %852(%var_10733, %var_10734) /* ty=Tensor[(8, 7, 1), float64] */
}

def @func_5736(%var_5734: Tensor[(756), int8]) -> (Tensor[(7, 12, 9), int8], Tensor[(756), int8], Tensor[(6, 12, 2), bool]) {
  @func_5733(%var_5734) /* ty=(Tensor[(7, 12, 9), int8], Tensor[(756), int8], Tensor[(6, 12, 2), bool]) */
}

def @func_7612(%var_7611: Tensor[(756), int8]) -> (Tensor[(6, 12, 2), float32], Tensor[(9, 3, 13), bool], Tensor[(756), float64]) {
  %864 = fn (%var_7606: Tensor[(756), int8]) -> (Tensor[(6, 12, 2), float32], Tensor[(9, 3, 13), bool], Tensor[(756), float64]) {
    %853 = @func_6644() /* ty=(Tensor[(6, 12, 2), float32], Tensor[(16, 7, ?), uint64], Tensor[(112), bool]) */;
    %854 = cast(meta[relay.Constant][65] /* ty=Tensor[(756), int8] */, dtype="int8") /* ty=Tensor[(756), int8] */;
    %855 = reshape(%854, newshape=[18, 42]) /* ty=Tensor[(18, 42), int8] */;
    %856 = @func_7364(%855) /* ty=(Tensor[(6, 12, 2), int32], Tensor[(9, 3, 13), bool], Tensor[(351), bool], Tensor[(18, 42), int8]) */;
    %857 = cast(%var_7606, dtype="float64") /* ty=Tensor[(756), float64] */;
    %858 = shape_of(meta[relay.Constant][65] /* ty=Tensor[(756), int8] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %859 = cast(meta[relay.Constant][65] /* ty=Tensor[(756), int8] */, dtype="float64") /* ty=Tensor[(756), float64] */;
    %860 = dyn.reshape(%857, %858, newshape=[]) /* ty=Tensor[(?), float64] */;
    %861 = %853.0;
    %862 = %856.1;
    %863 = add(%859, %860) /* ty=Tensor[(756), float64] */;
    (%861, %862, %863)
  };
  %864(%var_7611) /* ty=(Tensor[(6, 12, 2), float32], Tensor[(9, 3, 13), bool], Tensor[(756), float64]) */
}

def @func_12928(%var_12923: Tensor[(112), bool], %var_12924: Tensor[(378), uint8], %var_12925: Tensor[(8, 8), float32], %var_12926: Tensor[(60), int32], %var_12927: Tensor[(720), float64]) -> (Tensor[(6, 12, 2), int32], Tensor[(315), bool], Tensor[(112), bool], Tensor[(42, 6), float64], Tensor[(378), uint8], Tensor[(7, 192), int32], Tensor[(60), int32], Tensor[(8, 8), float32], Tensor[(60), int32], Tensor[(756), int8], Tensor[(720), float64], Tensor[(288), int8]) {
  @func_12921(%var_12923, %var_12924, %var_12925, %var_12926, %var_12927) /* ty=(Tensor[(6, 12, 2), int32], Tensor[(315), bool], Tensor[(112), bool], Tensor[(42, 6), float64], Tensor[(378), uint8], Tensor[(7, 192), int32], Tensor[(60), int32], Tensor[(8, 8), float32], Tensor[(60), int32], Tensor[(756), int8], Tensor[(720), float64], Tensor[(288), int8]) */
}

def @func_13279(%var_13278: Tensor[(252), float64]) -> (Tensor[(6, 12, 2), int32], Tensor[(3, 84), float64], Tensor[(252), float64]) {
  %870 = fn (%var_13267: Tensor[(252), float64]) -> (Tensor[(6, 12, 2), int32], Tensor[(3, 84), float64], Tensor[(252), float64]) {
    %865 = cast(%var_13267, dtype="float64") /* ty=Tensor[(252), float64] */;
    %866 = reshape(%865, newshape=[3, 84]) /* ty=Tensor[(3, 84), float64] */;
    %867 = @func_8109(%866) /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32], Tensor[(192), float64], Tensor[(5, 42), float64], Tensor[(378, 2), int8], Tensor[(3, 84), float64]) */;
    %868 = @func_11167() /* ty=Tensor[(6, 12, 2), int32] */;
    %869 = %867.5;
    (%868, %869, %var_13267)
  };
  %870(%var_13278) /* ty=(Tensor[(6, 12, 2), int32], Tensor[(3, 84), float64], Tensor[(252), float64]) */
}

def @func_12195() -> Tensor[(6, 12, 2), int32] {
  @func_12193() /* ty=Tensor[(6, 12, 2), int32] */
}

def @func_12814() -> Tensor[(6, 12, 2), int32] {
  @func_12812() /* ty=Tensor[(6, 12, 2), int32] */
}

def @func_13394() -> (Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), uint8], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), float32], Tensor[(6, 12, 2), int32]) {
  %871 = @func_6551() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */;
  %872 = @func_7805() /* ty=(Tensor[(6, 12, 2), uint8],) */;
  %873 = @func_6154() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %874 = %873.0;
  %875 = cast(%874, dtype="uint8") /* ty=Tensor[(6, 12, 2), uint8] */;
  %876 = reshape(%875, newshape=[6, 12, 2]) /* ty=Tensor[(6, 12, 2), uint8] */;
  %877 = @func_7912(%876) /* ty=(Tensor[(6, 12, 2), float32], Tensor[(6, 12, 2), float32]) */;
  %878 = %871.1;
  %879 = %872.0;
  %880 = %877.1;
  %881 = @func_13167() /* ty=Tensor[(6, 12, 2), int32] */;
  (%878, %879, %874, %880, %881)
}

def @func_6396(%var_6366: Tensor[(756), int8], %var_6368: Tensor[(72, 4), int8], %var_6392: Tensor[(112), bool]) -> (Tensor[(6, 12, 2), int32], Tensor[(3, 2, 10), int32], Tensor[(60), int32], Tensor[(24, 12), int8], Tensor[(756), int8], Tensor[(720), float64], Tensor[(72, 4), int8], Tensor[(6, 12, 2), int32], Tensor[(60), int32], Tensor[(315), bool], Tensor[(112), bool], Tensor[(252), float64], Tensor[(378, 1), uint8]) {
  %882 = @func_5659() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %883 = cast(meta[relay.Constant][66] /* ty=Tensor[(60), int32] */, dtype="int32") /* ty=Tensor[(60), int32] */;
  %884 = cast(meta[relay.Constant][66] /* ty=Tensor[(60), int32] */, dtype="int32") /* ty=Tensor[(60), int32] */;
  %885 = reshape(%883, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), int32] */;
  %886 = reshape(%884, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), int32] */;
  %887 = cast(%var_6366, dtype="int8") /* ty=Tensor[(756), int8] */;
  %888 = cast(meta[relay.Constant][67] /* ty=Tensor[(720), float64] */, dtype="float64") /* ty=Tensor[(720), float64] */;
  %889 = cast(%var_6368, dtype="int8") /* ty=Tensor[(72, 4), int8] */;
  %890 = reshape(%887, newshape=[756]) /* ty=Tensor[(756), int8] */;
  %891 = reshape(%888, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %892 = reshape(%889, newshape=[24, 12]) /* ty=Tensor[(24, 12), int8] */;
  %893 = @func_6303(%890, %891, %892) /* ty=(Tensor[(6, 12, 2), int32], Tensor[(3, 4, 16), float64], Tensor[(192), float64], Tensor[(60), int32], Tensor[(64), float32], Tensor[(60, 1), int32], Tensor[(756), int8], Tensor[(720), float64], Tensor[(24, 12), int8], Tensor[(112, 1), bool], Tensor[(3, 9, 14), float64], Tensor[(378), uint8], Tensor[(6, 12, 2), int32], Tensor[(756), int8], Tensor[(252), float64]) */;
  %894 = cast(meta[relay.Constant][68] /* ty=Tensor[(315), bool] */, dtype="bool") /* ty=Tensor[(315), bool] */;
  %895 = cast(meta[relay.Constant][68] /* ty=Tensor[(315), bool] */, dtype="bool") /* ty=Tensor[(315), bool] */;
  %896 = cast(%var_6392, dtype="bool") /* ty=Tensor[(112), bool] */;
  %897 = cast(meta[relay.Constant][69] /* ty=Tensor[(252), float64] */, dtype="float64") /* ty=Tensor[(252), float64] */;
  %898 = cast(meta[relay.Constant][70] /* ty=Tensor[(378, 1), uint8] */, dtype="uint8") /* ty=Tensor[(378, 1), uint8] */;
  %899 = reshape(%894, newshape=[7, 9, 5]) /* ty=Tensor[(7, 9, 5), bool] */;
  %900 = reshape(%895, newshape=[7, 9, 5]) /* ty=Tensor[(7, 9, 5), bool] */;
  %901 = reshape(%896, newshape=[56, 2]) /* ty=Tensor[(56, 2), bool] */;
  %902 = reshape(%897, newshape=[252]) /* ty=Tensor[(252), float64] */;
  %903 = reshape(%898, newshape=[378]) /* ty=Tensor[(378), uint8] */;
  %904 = @func_5392(%899, %900, %901, %902, %903) /* ty=(Tensor[(7, 9, 5), bool], Tensor[(56, 2), bool], Tensor[(3, 2, 10), int32], Tensor[(60), int32], Tensor[(60), int32], Tensor[(392, 2), uint32], Tensor[(756), int8], Tensor[(1, 192), float64], Tensor[(378), uint8], Tensor[(16, 7, 252), int64]) */;
  %905 = %882.0;
  %906 = @func_10(%885, %886) /* ty=Tensor[(3, 2, 10), int32] */;
  %907 = %893.8;
  %908 = @func_5512() /* ty=Tensor[(6, 12, 2), int32] */;
  %909 = %904.4;
  (%905, %906, meta[relay.Constant][66] /* ty=Tensor[(60), int32] */, %907, %var_6366, meta[relay.Constant][67] /* ty=Tensor[(720), float64] */, %var_6368, %908, %909, meta[relay.Constant][68] /* ty=Tensor[(315), bool] */, %var_6392, meta[relay.Constant][69] /* ty=Tensor[(252), float64] */, meta[relay.Constant][70] /* ty=Tensor[(378, 1), uint8] */)
}

def @func_12017(%var_12014: Tensor[(64), float32], %var_12015: Tensor[(720), float64], %var_12016: Tensor[(4, 72), int8]) -> (Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32], Tensor[(720), float64], Tensor[(64), float32], Tensor[(60), int32], Tensor[(756), int8], Tensor[(192), float64], Tensor[(720), float64], Tensor[(4, 72), int8], Tensor[(112), bool]) {
  %931 = fn (%var_11997: Tensor[(64), float32], %var_12001: Tensor[(720), float64], %var_12002: Tensor[(4, 72), int8]) -> (Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32], Tensor[(720), float64], Tensor[(64), float32], Tensor[(60), int32], Tensor[(756), int8], Tensor[(192), float64], Tensor[(720), float64], Tensor[(4, 72), int8], Tensor[(112), bool]) {
    %910 = @func_11786() /* ty=(Tensor[(6, 12, 2), int32],) */;
    %911 = @func_11742() /* ty=(Tensor[(6, 12, 2), int32],) */;
    %912 = cast(%var_11997, dtype="float32") /* ty=Tensor[(64), float32] */;
    %913 = cast(meta[relay.Constant][71] /* ty=Tensor[(60), int32] */, dtype="int32") /* ty=Tensor[(60), int32] */;
    %914 = cast(meta[relay.Constant][72] /* ty=Tensor[(756), int8] */, dtype="int8") /* ty=Tensor[(756), int8] */;
    %915 = cast(meta[relay.Constant][73] /* ty=Tensor[(192), float64] */, dtype="float64") /* ty=Tensor[(192), float64] */;
    %916 = cast(%var_12001, dtype="float64") /* ty=Tensor[(720), float64] */;
    %917 = cast(%var_12002, dtype="int8") /* ty=Tensor[(4, 72), int8] */;
    %918 = cast(meta[relay.Constant][74] /* ty=Tensor[(112), bool] */, dtype="bool") /* ty=Tensor[(112), bool] */;
    %919 = reshape(%912, newshape=[2, 4, 8]) /* ty=Tensor[(2, 4, 8), float32] */;
    %920 = reshape(%913, newshape=[15, 4]) /* ty=Tensor[(15, 4), int32] */;
    %921 = reshape(%914, newshape=[756]) /* ty=Tensor[(756), int8] */;
    %922 = reshape(%915, newshape=[192]) /* ty=Tensor[(192), float64] */;
    %923 = reshape(%916, newshape=[720]) /* ty=Tensor[(720), float64] */;
    %924 = reshape(%917, newshape=[1, 288]) /* ty=Tensor[(1, 288), int8] */;
    %925 = reshape(%918, newshape=[112]) /* ty=Tensor[(112), bool] */;
    %926 = @func_6060(%919, %920, %921, %922, %923, %924, %925) /* ty=(Tensor[(2, 4, 8), int32], Tensor[(3, 2, 10), int32], Tensor[(15, 4), int32], Tensor[(60), int32], Tensor[(784), uint32], Tensor[(756), int8], Tensor[(192), float64], Tensor[(252), float64], Tensor[(378), uint8], Tensor[(2, 4, 8), float64], Tensor[(15, 12, 4), float64], Tensor[(720), float64], Tensor[(60), int32], Tensor[(1, 288), int8], Tensor[(112), bool], Tensor[(16, 7, ?), uint64], Tensor[(8, 84), uint64], Tensor[(2, 4, 8), float64]) */;
    %927 = %910.0;
    %928 = %911.0;
    %929 = @func_7952() /* ty=Tensor[(6, 12, 2), int32] */;
    %930 = %926.11;
    (%927, %928, %929, %930, %var_11997, meta[relay.Constant][71] /* ty=Tensor[(60), int32] */, meta[relay.Constant][72] /* ty=Tensor[(756), int8] */, meta[relay.Constant][73] /* ty=Tensor[(192), float64] */, %var_12001, %var_12002, meta[relay.Constant][74] /* ty=Tensor[(112), bool] */)
  };
  %931(%var_12014, %var_12015, %var_12016) /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32], Tensor[(720), float64], Tensor[(64), float32], Tensor[(60), int32], Tensor[(756), int8], Tensor[(192), float64], Tensor[(720), float64], Tensor[(4, 72), int8], Tensor[(112), bool]) */
}

def @func_12379(%var_12377: Tensor[(12, 16, 14), float32]) -> (Tensor[(6, 12, 2), int32], Tensor[(12, 16, 14), float64]) {
  @func_12376(%var_12377) /* ty=(Tensor[(6, 12, 2), int32], Tensor[(12, 16, 14), float64]) */
}

def @func_13168() -> Tensor[(6, 12, 2), int32] {
  %933 = fn () -> Tensor[(6, 12, 2), int32] {
    %932 = @func_7441() /* ty=(Tensor[(6, 12, 2), int32],) */;
    %932.0
  };
  %933() /* ty=Tensor[(6, 12, 2), int32] */
}

def @func_1674(%var_1670: Tensor[(6, 4, 12), int8], %var_1671: Tensor[(6, 4, 12), int8], %var_1672: Tensor[(1, 112), bool], %var_1673: Tensor[(60), int32]) -> (Tensor[(6, 4, 12), int8], Tensor[(1, 112), bool], Tensor[(3, 2, 10), int32], Tensor[(60), int32], Tensor[(16, 7, 378), uint8]) {
  @func_1668(%var_1670, %var_1671, %var_1672, %var_1673) /* ty=(Tensor[(6, 4, 12), int8], Tensor[(1, 112), bool], Tensor[(3, 2, 10), int32], Tensor[(60), int32], Tensor[(16, 7, 378), uint8]) */
}

def @func_9299() -> (Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) {
  %938 = fn () -> (Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) {
    %934 = @func_7941() /* ty=(Tensor[(6, 12, 2), int32],) */;
    %935 = @func_6529() /* ty=(Tensor[(6, 12, 2), int32],) */;
    %936 = %934.0;
    %937 = %935.0;
    (%936, %937)
  };
  %938() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */
}

def @func_8109(%var_8090: Tensor[(3, 84), float64]) -> (Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32], Tensor[(192), float64], Tensor[(5, 42), float64], Tensor[(378, 2), int8], Tensor[(3, 84), float64]) {
  %939 = @func_6551() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */;
  %940 = cast(meta[relay.Constant][75] /* ty=Tensor[(5, 42), float64] */, dtype="float64") /* ty=Tensor[(5, 42), float64] */;
  %941 = cast(meta[relay.Constant][76] /* ty=Tensor[(378, 2), int8] */, dtype="int8") /* ty=Tensor[(378, 2), int8] */;
  %942 = cast(%var_8090, dtype="float64") /* ty=Tensor[(3, 84), float64] */;
  %943 = reshape(%940, newshape=[14, 15, 1]) /* ty=Tensor[(14, 15, 1), float64] */;
  %944 = reshape(%941, newshape=[9, 84]) /* ty=Tensor[(9, 84), int8] */;
  %945 = reshape(%942, newshape=[252]) /* ty=Tensor[(252), float64] */;
  %946 = @func_6765(%943, %944, %945) /* ty=(Tensor[(14, 15, 1), float64], Tensor[(9, 84), int8], Tensor[(1, 784), uint32], Tensor[(15, 4), int32], Tensor[(9, 84), int8], Tensor[(192), float64], Tensor[(252), float64], Tensor[(378), uint8], Tensor[(6, 12, 2), int32]) */;
  %947 = @func_7551() /* ty=Tensor[(6, 12, 2), int32] */;
  %948 = %939.1;
  %949 = %946.5;
  (%947, %948, %949, meta[relay.Constant][75] /* ty=Tensor[(5, 42), float64] */, meta[relay.Constant][76] /* ty=Tensor[(378, 2), int8] */, %var_8090)
}

def @func_10174() -> (Tensor[(756), int8],) {
  %950 = @func_10131() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(756), int8], Tensor[(6, 12, 2), int32], Tensor[(9, 3, 13), float32], Tensor[(6, 12, 2), int32]) */;
  %951 = %950.1;
  (%951,)
}

def @func_7838(%var_7837: Tensor[(1, 3, 3), float32]) -> Tensor[(1, 3, 3), float32] {
  %955 = fn (%var_7819: Tensor[(1, 3, 3), float32]) -> Tensor[(1, 3, 3), float32] {
    %952 = cast(%var_7819, dtype="float32") /* ty=Tensor[(1, 3, 3), float32] */;
    %953 = sigmoid(%952) /* ty=Tensor[(1, 3, 3), float32] */;
    %954 = cast(%953, dtype="float32") /* ty=Tensor[(1, 3, 3), float32] */;
    erf(%954) /* ty=Tensor[(1, 3, 3), float32] */
  };
  %955(%var_7837) /* ty=Tensor[(1, 3, 3), float32] */
}

def @func_210(%var_208: Tensor[(3, 9, 14), uint8], %var_209: Tensor[(3, 2, 10), int32]) -> (Tensor[(60), int32], Tensor[(3, 2, 10), bool], Tensor[(3, 2, 10), int32], Tensor[(3, 9, 14), float64], Tensor[(3, 2, 10), int32]) {
  @func_206(%var_208, %var_209) /* ty=(Tensor[(60), int32], Tensor[(3, 2, 10), bool], Tensor[(3, 2, 10), int32], Tensor[(3, 9, 14), float64], Tensor[(3, 2, 10), int32]) */
}

def @func_12167() -> (Tensor[(6, 12, 2), int32],) {
  %957 = fn () -> (Tensor[(6, 12, 2), int32],) {
    %956 = @func_5648() /* ty=Tensor[(6, 12, 2), int32] */;
    (%956,)
  };
  %957() /* ty=(Tensor[(6, 12, 2), int32],) */
}

def @func_12858() -> (Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) {
  %958 = @func_9298() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */;
  %959 = @func_11271() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(1300), uint16], int8, Tensor[(16, 1, 11), float32], Tensor[(176), float32], Tensor[(13, 10, 10), float32]) */;
  %960 = %958.0;
  %961 = %959.0;
  %962 = @func_11578() /* ty=Tensor[(6, 12, 2), int32] */;
  (%960, %961, %962)
}

def @func_12032(%var_12030: Tensor[(13, 14, 16), bool], %var_12031: Tensor[(13, 14, 16), bool]) -> (Tensor[(13, 14, 16), bool],) {
  %968 = fn (%var_12022: Tensor[(13, 14, 16), bool], %var_12023: Tensor[(13, 14, 16), bool]) -> (Tensor[(13, 14, 16), bool],) {
    %963 = cast(%var_12023, dtype="bool") /* ty=Tensor[(13, 14, 16), bool] */;
    %964 = shape_of(%var_12022, dtype="int32") /* ty=Tensor[(3), int32] */;
    %965 = cast(%var_12022, dtype="bool") /* ty=Tensor[(13, 14, 16), bool] */;
    %966 = dyn.reshape(%963, %964, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %967 = logical_or(%965, %966) /* ty=Tensor[(13, 14, 16), bool] */;
    (%967,)
  };
  %968(%var_12030, %var_12031) /* ty=(Tensor[(13, 14, 16), bool],) */
}

def @func_6709(%var_6707: Tensor[(12, 1, 5), float32], %var_6708: Tensor[(12, 7, 5), float32]) -> Tensor[(12, 7, 5), float32] {
  %971 = fn (%var_6697: Tensor[(12, 1, 5), float32], %var_6698: Tensor[(12, 7, 5), float32]) -> Tensor[(12, 7, 5), float32] {
    %969 = cast(%var_6697, dtype="float32") /* ty=Tensor[(12, 1, 5), float32] */;
    %970 = cast(%var_6698, dtype="float32") /* ty=Tensor[(12, 7, 5), float32] */;
    floor_mod(%969, %970) /* ty=Tensor[(12, 7, 5), float32] */
  };
  %971(%var_6707, %var_6708) /* ty=Tensor[(12, 7, 5), float32] */
}

def @func_8245(%var_8227: Tensor[(378), uint8], %var_8228: Tensor[(60, 1), int32]) -> (Tensor[(6, 12, 2), int32], Tensor[(3, 4, 16), float64], Tensor[(192), float64], Tensor[(3, 9, 14), float64], Tensor[(378), uint8], Tensor[(15, 6, 15), float32], Tensor[(60, 1350), bool], Tensor[(3, 2, 10), int32]) {
  %972 = cast(meta[relay.Constant][77] /* ty=Tensor[(192), float64] */, dtype="float64") /* ty=Tensor[(192), float64] */;
  %973 = reshape(%972, newshape=[3, 4, 16]) /* ty=Tensor[(3, 4, 16), float64] */;
  %974 = cast(%var_8227, dtype="uint8") /* ty=Tensor[(378), uint8] */;
  %975 = cast(%var_8228, dtype="int32") /* ty=Tensor[(60, 1), int32] */;
  %976 = reshape(%974, newshape=[3, 9, 14]) /* ty=Tensor[(3, 9, 14), uint8] */;
  %977 = reshape(%975, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), int32] */;
  %978 = @func_206(%976, %977) /* ty=(Tensor[(60), int32], Tensor[(3, 2, 10), bool], Tensor[(3, 2, 10), int32], Tensor[(3, 9, 14), float64], Tensor[(3, 2, 10), int32]) */;
  %979 = cast(meta[relay.Constant][78] /* ty=Tensor[(1350), int32] */, dtype="int32") /* ty=Tensor[(1350), int32] */;
  %980 = cast(meta[relay.Constant][78] /* ty=Tensor[(1350), int32] */, dtype="int32") /* ty=Tensor[(1350), int32] */;
  %981 = reshape(%979, newshape=[15, 6, 15]) /* ty=Tensor[(15, 6, 15), int32] */;
  %982 = reshape(%980, newshape=[15, 6, 15]) /* ty=Tensor[(15, 6, 15), int32] */;
  %983 = cast(meta[relay.Constant][78] /* ty=Tensor[(1350), int32] */, dtype="float32") /* ty=Tensor[(1350), float32] */;
  %984 = cosh(%983) /* ty=Tensor[(1350), float32] */;
  %985 = cast(%984, dtype="bool") /* ty=Tensor[(1350), bool] */;
  %986 = cast(%var_8228, dtype="bool") /* ty=Tensor[(60, 1), bool] */;
  %987 = @func_1144(%973) /* ty=Tensor[(3, 4, 16), float64] */;
  %988 = cast(%987, dtype="float64") /* ty=Tensor[(3, 4, 16), float64] */;
  %989 = reshape(%988, newshape=[192]) /* ty=Tensor[(192), float64] */;
  %990 = @func_6218(%989) /* ty=(Tensor[(6, 12, 2), float64], Tensor[(3, 2, 10), int32], Tensor[(300), float32], Tensor[(192), float64], Tensor[(378), uint8]) */;
  %991 = @func_7551() /* ty=Tensor[(6, 12, 2), int32] */;
  %992 = %978.3;
  %993 = @func_2936(%981, %982) /* ty=Tensor[(15, 6, 15), float32] */;
  %994 = logical_and(%985, %986) /* ty=Tensor[(60, 1350), bool] */;
  %995 = %990.1;
  (%991, %987, meta[relay.Constant][77] /* ty=Tensor[(192), float64] */, %992, %var_8227, %993, %994, %995)
}

def @func_7016(%var_6979: Tensor[(60), int32], %var_7002: Tensor[(8, 60), float32], %var_7003: Tensor[(4, 48), float64]) -> (Tensor[(6, 12, 2), int32], Tensor[(16, 7, ?), uint64], Tensor[(112), bool], Tensor[(6, 12, 2), int32], Tensor[(16, 13, 5), int16], int16, Tensor[(60), int32], Tensor[(6, 12, 2), int32], Tensor[(60), int32], Tensor[(288), int8], Tensor[(5, 12, 8), float32], Tensor[(8, 60), float32], Tensor[(4, 48), float64], Tensor[(176), float32], Tensor[(300), float32], Tensor[(6, 12, 2), int32]) {
  %996 = @func_5899() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %997 = cast(meta[relay.Constant][79] /* ty=Tensor[(112), bool] */, dtype="bool") /* ty=Tensor[(112), bool] */;
  %998 = reshape(%997, newshape=[16, 7, 1]) /* ty=Tensor[(16, 7, 1), bool] */;
  %999 = @func_1396(%998) /* ty=(Tensor[(16, 7, ?), uint64],) */;
  %1000 = @func_6551() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */;
  %1001 = cast(meta[relay.Constant][80] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %1002 = cast(%var_6979, dtype="int32") /* ty=Tensor[(60), int32] */;
  %1003 = reshape(%1001, newshape=[]) /* ty=int16 */;
  %1004 = reshape(%1002, newshape=[60]) /* ty=Tensor[(60), int32] */;
  %1005 = @func_852(%1003, %1004) /* ty=(Tensor[(16, 13, 5), int16], Tensor[(3, 2, 10), int32], Tensor[(60), int32]) */;
  %1006 = @func_6529() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %1007 = cast(meta[relay.Constant][81] /* ty=Tensor[(288), int8] */, dtype="int8") /* ty=Tensor[(288), int8] */;
  %1008 = cast(meta[relay.Constant][81] /* ty=Tensor[(288), int8] */, dtype="int8") /* ty=Tensor[(288), int8] */;
  %1009 = %999.0;
  %1010 = cast(%1009, dtype="bool") /* ty=Tensor[(16, 7, ?), bool] */;
  %1011 = cast(%var_6979, dtype="int32") /* ty=Tensor[(60), int32] */;
  %1012 = reshape(%1007, newshape=[6, 4, 12]) /* ty=Tensor[(6, 4, 12), int8] */;
  %1013 = reshape(%1008, newshape=[6, 4, 12]) /* ty=Tensor[(6, 4, 12), int8] */;
  %1014 = reshape(%1010, newshape=[1, 112]) /* ty=Tensor[(1, 112), bool] */;
  %1015 = reshape(%1011, newshape=[60]) /* ty=Tensor[(60), int32] */;
  %1016 = @func_1668(%1012, %1013, %1014, %1015) /* ty=(Tensor[(6, 4, 12), int8], Tensor[(1, 112), bool], Tensor[(3, 2, 10), int32], Tensor[(60), int32], Tensor[(16, 7, 378), uint8]) */;
  %1017 = cast(%var_7002, dtype="float32") /* ty=Tensor[(8, 60), float32] */;
  %1018 = cast(%var_7002, dtype="float32") /* ty=Tensor[(8, 60), float32] */;
  %1019 = cast(%var_7003, dtype="float64") /* ty=Tensor[(4, 48), float64] */;
  %1020 = cast(meta[relay.Constant][82] /* ty=Tensor[(176), float32] */, dtype="float32") /* ty=Tensor[(176), float32] */;
  %1021 = cast(meta[relay.Constant][82] /* ty=Tensor[(176), float32] */, dtype="float32") /* ty=Tensor[(176), float32] */;
  %1022 = cast(meta[relay.Constant][83] /* ty=Tensor[(300), float32] */, dtype="float32") /* ty=Tensor[(300), float32] */;
  %1023 = reshape(%1017, newshape=[5, 12, 8]) /* ty=Tensor[(5, 12, 8), float32] */;
  %1024 = reshape(%1018, newshape=[5, 12, 8]) /* ty=Tensor[(5, 12, 8), float32] */;
  %1025 = reshape(%1019, newshape=[96, 2]) /* ty=Tensor[(96, 2), float64] */;
  %1026 = reshape(%1020, newshape=[4, 44]) /* ty=Tensor[(4, 44), float32] */;
  %1027 = reshape(%1021, newshape=[4, 44]) /* ty=Tensor[(4, 44), float32] */;
  %1028 = reshape(%1022, newshape=[300]) /* ty=Tensor[(300), float32] */;
  %1029 = @func_5882(%1023, %1024, %1025, %1026, %1027, %1028) /* ty=(Tensor[(5, 12, 8), float32], Tensor[(3, 4, 16), float64], Tensor[(96, 2), float64], Tensor[(6, 12, 2), int32], Tensor[(4, 44), int64], Tensor[(3, 2, 10), float32], Tensor[(300), float32], Tensor[(378), uint8], Tensor[(16, 1, 11), float32]) */;
  %1030 = @func_6154() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %1031 = %996.0;
  %1032 = %1000.0;
  %1033 = %1005.0;
  %1034 = %1006.0;
  %1035 = %1016.3;
  %1036 = %1029.0;
  %1037 = %1030.0;
  (%1031, %1009, meta[relay.Constant][79] /* ty=Tensor[(112), bool] */, %1032, %1033, meta[relay.Constant][80] /* ty=int16 */, %var_6979, %1034, %1035, meta[relay.Constant][81] /* ty=Tensor[(288), int8] */, %1036, %var_7002, %var_7003, meta[relay.Constant][82] /* ty=Tensor[(176), float32] */, meta[relay.Constant][83] /* ty=Tensor[(300), float32] */, %1037)
}

def @func_10809() -> (Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) {
  @func_10807() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */
}

def @func_8249(%var_8247: Tensor[(378), uint8], %var_8248: Tensor[(60, 1), int32]) -> (Tensor[(6, 12, 2), int32], Tensor[(3, 4, 16), float64], Tensor[(192), float64], Tensor[(3, 9, 14), float64], Tensor[(378), uint8], Tensor[(15, 6, 15), float32], Tensor[(60, 1350), bool], Tensor[(3, 2, 10), int32]) {
  @func_8245(%var_8247, %var_8248) /* ty=(Tensor[(6, 12, 2), int32], Tensor[(3, 4, 16), float64], Tensor[(192), float64], Tensor[(3, 9, 14), float64], Tensor[(378), uint8], Tensor[(15, 6, 15), float32], Tensor[(60, 1350), bool], Tensor[(3, 2, 10), int32]) */
}

def @func_10776() -> Tensor[(6, 12, 2), int32] {
  %1039 = fn () -> Tensor[(6, 12, 2), int32] {
    %1038 = @func_10209() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */;
    %1038.1
  };
  %1039() /* ty=Tensor[(6, 12, 2), int32] */
}

def @func_11850(%var_11848: Tensor[(756), int8], %var_11849: Tensor[(720), float64]) -> (Tensor[(6, 12, 2), int32], Tensor[(60), int32], Tensor[(756), int8], Tensor[(720), float64], Tensor[(288), int8]) {
  %1050 = fn (%var_11843: Tensor[(756), int8], %var_11844: Tensor[(720), float64]) -> (Tensor[(6, 12, 2), int32], Tensor[(60), int32], Tensor[(756), int8], Tensor[(720), float64], Tensor[(288), int8]) {
    %1040 = @func_9298() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */;
    %1041 = cast(%var_11843, dtype="int8") /* ty=Tensor[(756), int8] */;
    %1042 = cast(%var_11844, dtype="float64") /* ty=Tensor[(720), float64] */;
    %1043 = cast(meta[relay.Constant][84] /* ty=Tensor[(288), int8] */, dtype="int8") /* ty=Tensor[(288), int8] */;
    %1044 = reshape(%1041, newshape=[756]) /* ty=Tensor[(756), int8] */;
    %1045 = reshape(%1042, newshape=[720]) /* ty=Tensor[(720), float64] */;
    %1046 = reshape(%1043, newshape=[24, 12]) /* ty=Tensor[(24, 12), int8] */;
    %1047 = @func_6303(%1044, %1045, %1046) /* ty=(Tensor[(6, 12, 2), int32], Tensor[(3, 4, 16), float64], Tensor[(192), float64], Tensor[(60), int32], Tensor[(64), float32], Tensor[(60, 1), int32], Tensor[(756), int8], Tensor[(720), float64], Tensor[(24, 12), int8], Tensor[(112, 1), bool], Tensor[(3, 9, 14), float64], Tensor[(378), uint8], Tensor[(6, 12, 2), int32], Tensor[(756), int8], Tensor[(252), float64]) */;
    %1048 = %1040.1;
    %1049 = %1047.3;
    (%1048, %1049, %var_11843, %var_11844, meta[relay.Constant][84] /* ty=Tensor[(288), int8] */)
  };
  %1050(%var_11848, %var_11849) /* ty=(Tensor[(6, 12, 2), int32], Tensor[(60), int32], Tensor[(756), int8], Tensor[(720), float64], Tensor[(288), int8]) */
}

def @func_8054() -> (Tensor[(6, 12, 2), int32],) {
  %1053 = fn () -> (Tensor[(6, 12, 2), int32],) {
    %1051 = @func_6910() /* ty=(Tensor[(6, 12, 2), int32],) */;
    %1052 = %1051.0;
    (%1052,)
  };
  %1053() /* ty=(Tensor[(6, 12, 2), int32],) */
}

def @func_12921(%var_12889: Tensor[(112), bool], %var_12891: Tensor[(378), uint8], %var_12905: Tensor[(8, 8), float32], %var_12906: Tensor[(60), int32], %var_12908: Tensor[(720), float64]) -> (Tensor[(6, 12, 2), int32], Tensor[(315), bool], Tensor[(112), bool], Tensor[(42, 6), float64], Tensor[(378), uint8], Tensor[(7, 192), int32], Tensor[(60), int32], Tensor[(8, 8), float32], Tensor[(60), int32], Tensor[(756), int8], Tensor[(720), float64], Tensor[(288), int8]) {
  %1054 = @func_10131() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(756), int8], Tensor[(6, 12, 2), int32], Tensor[(9, 3, 13), float32], Tensor[(6, 12, 2), int32]) */;
  %1055 = cast(meta[relay.Constant][85] /* ty=Tensor[(315), bool] */, dtype="bool") /* ty=Tensor[(315), bool] */;
  %1056 = cast(meta[relay.Constant][85] /* ty=Tensor[(315), bool] */, dtype="bool") /* ty=Tensor[(315), bool] */;
  %1057 = cast(%var_12889, dtype="bool") /* ty=Tensor[(112), bool] */;
  %1058 = cast(meta[relay.Constant][86] /* ty=Tensor[(42, 6), float64] */, dtype="float64") /* ty=Tensor[(42, 6), float64] */;
  %1059 = cast(%var_12891, dtype="uint8") /* ty=Tensor[(378), uint8] */;
  %1060 = reshape(%1055, newshape=[7, 9, 5]) /* ty=Tensor[(7, 9, 5), bool] */;
  %1061 = reshape(%1056, newshape=[7, 9, 5]) /* ty=Tensor[(7, 9, 5), bool] */;
  %1062 = reshape(%1057, newshape=[56, 2]) /* ty=Tensor[(56, 2), bool] */;
  %1063 = reshape(%1058, newshape=[252]) /* ty=Tensor[(252), float64] */;
  %1064 = reshape(%1059, newshape=[378]) /* ty=Tensor[(378), uint8] */;
  %1065 = @func_5392(%1060, %1061, %1062, %1063, %1064) /* ty=(Tensor[(7, 9, 5), bool], Tensor[(56, 2), bool], Tensor[(3, 2, 10), int32], Tensor[(60), int32], Tensor[(60), int32], Tensor[(392, 2), uint32], Tensor[(756), int8], Tensor[(1, 192), float64], Tensor[(378), uint8], Tensor[(16, 7, 252), int64]) */;
  %1066 = %1065.7;
  %1067 = cast(%1066, dtype="int32") /* ty=Tensor[(1, 192), int32] */;
  %1068 = cast(meta[relay.Constant][87] /* ty=Tensor[(7, 192), float64] */, dtype="int32") /* ty=Tensor[(7, 192), int32] */;
  %1069 = cast(%var_12905, dtype="float32") /* ty=Tensor[(8, 8), float32] */;
  %1070 = cast(%var_12906, dtype="int32") /* ty=Tensor[(60), int32] */;
  %1071 = cast(meta[relay.Constant][88] /* ty=Tensor[(756), int8] */, dtype="int8") /* ty=Tensor[(756), int8] */;
  %1072 = cast(%1066, dtype="float64") /* ty=Tensor[(1, 192), float64] */;
  %1073 = cast(%var_12908, dtype="float64") /* ty=Tensor[(720), float64] */;
  %1074 = cast(meta[relay.Constant][89] /* ty=Tensor[(288), int8] */, dtype="int8") /* ty=Tensor[(288), int8] */;
  %1075 = cast(%var_12889, dtype="bool") /* ty=Tensor[(112), bool] */;
  %1076 = reshape(%1069, newshape=[2, 4, 8]) /* ty=Tensor[(2, 4, 8), float32] */;
  %1077 = reshape(%1070, newshape=[15, 4]) /* ty=Tensor[(15, 4), int32] */;
  %1078 = reshape(%1071, newshape=[756]) /* ty=Tensor[(756), int8] */;
  %1079 = reshape(%1072, newshape=[192]) /* ty=Tensor[(192), float64] */;
  %1080 = reshape(%1073, newshape=[720]) /* ty=Tensor[(720), float64] */;
  %1081 = reshape(%1074, newshape=[1, 288]) /* ty=Tensor[(1, 288), int8] */;
  %1082 = reshape(%1075, newshape=[112]) /* ty=Tensor[(112), bool] */;
  %1083 = @func_6060(%1076, %1077, %1078, %1079, %1080, %1081, %1082) /* ty=(Tensor[(2, 4, 8), int32], Tensor[(3, 2, 10), int32], Tensor[(15, 4), int32], Tensor[(60), int32], Tensor[(784), uint32], Tensor[(756), int8], Tensor[(192), float64], Tensor[(252), float64], Tensor[(378), uint8], Tensor[(2, 4, 8), float64], Tensor[(15, 12, 4), float64], Tensor[(720), float64], Tensor[(60), int32], Tensor[(1, 288), int8], Tensor[(112), bool], Tensor[(16, 7, ?), uint64], Tensor[(8, 84), uint64], Tensor[(2, 4, 8), float64]) */;
  %1084 = %1054.2;
  %1085 = bitwise_or(%1067, %1068) /* ty=Tensor[(7, 192), int32] */;
  %1086 = %1083.12;
  (%1084, meta[relay.Constant][85] /* ty=Tensor[(315), bool] */, %var_12889, meta[relay.Constant][86] /* ty=Tensor[(42, 6), float64] */, %var_12891, %1085, %1086, %var_12905, %var_12906, meta[relay.Constant][88] /* ty=Tensor[(756), int8] */, %var_12908, meta[relay.Constant][89] /* ty=Tensor[(288), int8] */)
}

def @func_5899() -> (Tensor[(6, 12, 2), int32],) {
  %1087 = @func_5512() /* ty=Tensor[(6, 12, 2), int32] */;
  (%1087,)
}

def @func_7085() -> (Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) {
  %1092 = fn () -> (Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) {
    %1088 = @func_6529() /* ty=(Tensor[(6, 12, 2), int32],) */;
    %1089 = @func_5899() /* ty=(Tensor[(6, 12, 2), int32],) */;
    %1090 = %1088.0;
    %1091 = %1089.0;
    (%1090, %1091)
  };
  %1092() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */
}

def @func_8038(%var_8037: Tensor[(1404), float64]) -> (Tensor[(6, 12, 2), bool], Tensor[(6, 12, 2), float32], Tensor[(9, 12, 13), bool], Tensor[(1404), float64]) {
  %1106 = fn (%var_8032: Tensor[(1404), float64]) -> (Tensor[(6, 12, 2), bool], Tensor[(6, 12, 2), float32], Tensor[(9, 12, 13), bool], Tensor[(1404), float64]) {
    %1093 = @func_7441() /* ty=(Tensor[(6, 12, 2), int32],) */;
    %1094 = %1093.0;
    %1095 = cast(meta[relay.Constant][90] /* ty=Tensor[(6, 12, 2), int32] */, dtype="bool") /* ty=Tensor[(6, 12, 2), bool] */;
    %1096 = shape_of(%1094, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1097 = cast(%1094, dtype="bool") /* ty=Tensor[(6, 12, 2), bool] */;
    %1098 = dyn.reshape(%1095, %1096, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1099 = @func_6480() /* ty=(Tensor[(6, 12, 2), float32], Tensor[(6, 12, 2), int32]) */;
    %1100 = cast(%var_8032, dtype="float64") /* ty=Tensor[(1404), float64] */;
    %1101 = reshape(%1100, newshape=[9, 12, 13]) /* ty=Tensor[(9, 12, 13), float64] */;
    %1102 = @func_7145(%1101) /* ty=(Tensor[(9, 12, 13), float64], Tensor[(9, 12, 13), bool]) */;
    %1103 = logical_or(%1097, %1098) /* ty=Tensor[(6, 12, 2), bool] */;
    %1104 = %1099.0;
    %1105 = %1102.1;
    (%1103, %1104, %1105, %var_8032)
  };
  %1106(%var_8037) /* ty=(Tensor[(6, 12, 2), bool], Tensor[(6, 12, 2), float32], Tensor[(9, 12, 13), bool], Tensor[(1404), float64]) */
}

def @func_6401(%var_6398: Tensor[(756), int8], %var_6399: Tensor[(72, 4), int8], %var_6400: Tensor[(112), bool]) -> (Tensor[(6, 12, 2), int32], Tensor[(3, 2, 10), int32], Tensor[(60), int32], Tensor[(24, 12), int8], Tensor[(756), int8], Tensor[(720), float64], Tensor[(72, 4), int8], Tensor[(6, 12, 2), int32], Tensor[(60), int32], Tensor[(315), bool], Tensor[(112), bool], Tensor[(252), float64], Tensor[(378, 1), uint8]) {
  @func_6396(%var_6398, %var_6399, %var_6400) /* ty=(Tensor[(6, 12, 2), int32], Tensor[(3, 2, 10), int32], Tensor[(60), int32], Tensor[(24, 12), int8], Tensor[(756), int8], Tensor[(720), float64], Tensor[(72, 4), int8], Tensor[(6, 12, 2), int32], Tensor[(60), int32], Tensor[(315), bool], Tensor[(112), bool], Tensor[(252), float64], Tensor[(378, 1), uint8]) */
}

def @func_6498(%var_6483: Tensor[(5, 12, 6), float32], %var_6493: Tensor[(352, 4), int8]) -> (Tensor[(5, 12, 6), float32], Tensor[(11, 8, 16), float64], Tensor[(352, 4), int8]) {
  %1107 = cast(meta[relay.Constant][91] /* ty=Tensor[(5, 12, 6), float32] */, dtype="float32") /* ty=Tensor[(5, 12, 6), float32] */;
  %1108 = shape_of(%var_6483, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1109 = cast(%var_6483, dtype="float32") /* ty=Tensor[(5, 12, 6), float32] */;
  %1110 = dyn.reshape(%1107, %1108, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1111 = cast(%var_6493, dtype="int8") /* ty=Tensor[(352, 4), int8] */;
  %1112 = cast(%var_6493, dtype="int8") /* ty=Tensor[(352, 4), int8] */;
  %1113 = reshape(%1111, newshape=[11, 8, 16]) /* ty=Tensor[(11, 8, 16), int8] */;
  %1114 = reshape(%1112, newshape=[11, 8, 16]) /* ty=Tensor[(11, 8, 16), int8] */;
  %1115 = @func_1356(%1113, %1114) /* ty=(Tensor[(11, 8, 16), int8], Tensor[(11, 8, 16), float64], Tensor[(3, 4, 16), float64], Tensor[(2, 96), float64]) */;
  %1116 = mod(%1109, %1110) /* ty=Tensor[(5, 12, 6), float32] */;
  %1117 = %1115.1;
  (%1116, %1117, %var_6493)
}

def @func_10807() -> (Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) {
  %1118 = @func_7084() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */;
  %1119 = @func_7637() /* ty=(Tensor[(6, 12, 2), uint8], Tensor[(6, 12, 2), int32]) */;
  %1120 = %1118.0;
  %1121 = %1119.1;
  (%1120, %1121)
}

def @func_1668(%var_1619: Tensor[(6, 4, 12), int8], %var_1620: Tensor[(6, 4, 12), int8], %var_1628: Tensor[(1, 112), bool], %var_1647: Tensor[(60), int32]) -> (Tensor[(6, 4, 12), int8], Tensor[(1, 112), bool], Tensor[(3, 2, 10), int32], Tensor[(60), int32], Tensor[(16, 7, 378), uint8]) {
  %1122 = cast(%var_1620, dtype="int8") /* ty=Tensor[(6, 4, 12), int8] */;
  %1123 = shape_of(%var_1619, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1124 = cast(%var_1619, dtype="int8") /* ty=Tensor[(6, 4, 12), int8] */;
  %1125 = dyn.reshape(%1122, %1123, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1126 = cast(meta[relay.Constant][92] /* ty=Tensor[(378), uint8] */, dtype="uint8") /* ty=Tensor[(378), uint8] */;
  %1127 = cast(%var_1647, dtype="int32") /* ty=Tensor[(60), int32] */;
  %1128 = reshape(%1126, newshape=[3, 9, 14]) /* ty=Tensor[(3, 9, 14), uint8] */;
  %1129 = reshape(%1127, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), int32] */;
  %1130 = @func_206(%1128, %1129) /* ty=(Tensor[(60), int32], Tensor[(3, 2, 10), bool], Tensor[(3, 2, 10), int32], Tensor[(3, 9, 14), float64], Tensor[(3, 2, 10), int32]) */;
  %1131 = cast(%var_1628, dtype="bool") /* ty=Tensor[(1, 112), bool] */;
  %1132 = reshape(%1131, newshape=[16, 7, 1]) /* ty=Tensor[(16, 7, 1), bool] */;
  %1133 = @func_1396(%1132) /* ty=(Tensor[(16, 7, ?), uint64],) */;
  %1134 = %1133.0;
  %1135 = cast(meta[relay.Constant][92] /* ty=Tensor[(378), uint8] */, dtype="uint8") /* ty=Tensor[(378), uint8] */;
  %1136 = cast(%1134, dtype="uint8") /* ty=Tensor[(16, 7, ?), uint8] */;
  %1137 = subtract(%1124, %1125) /* ty=Tensor[(6, 4, 12), int8] */;
  %1138 = %1130.4;
  %1139 = minimum(%1135, %1136) /* ty=Tensor[(16, 7, 378), uint8] */;
  (%1137, %var_1628, %1138, %var_1647, %1139)
}

def @func_5660() -> (Tensor[(6, 12, 2), int32],) {
  %1141 = fn () -> (Tensor[(6, 12, 2), int32],) {
    %1140 = @func_5648() /* ty=Tensor[(6, 12, 2), int32] */;
    (%1140,)
  };
  %1141() /* ty=(Tensor[(6, 12, 2), int32],) */
}

def @func_12742() -> Tensor[(6, 12, 2), int32] {
  @func_11220() /* ty=Tensor[(6, 12, 2), int32] */
}

def @func_4680(%var_4678: Tensor[(3, 2, 10), uint16]) -> (Tensor[(3, 2, 10), uint16],) {
  @func_4677(%var_4678) /* ty=(Tensor[(3, 2, 10), uint16],) */
}

def @func_5901() -> (Tensor[(6, 12, 2), int32],) {
  @func_5899() /* ty=(Tensor[(6, 12, 2), int32],) */
}

def @func_7163() -> Tensor[(6, 12, 2), int32] {
  %1143 = fn () -> Tensor[(6, 12, 2), int32] {
    %1142 = @func_6154() /* ty=(Tensor[(6, 12, 2), int32],) */;
    %1142.0
  };
  %1143() /* ty=Tensor[(6, 12, 2), int32] */
}

def @func_10683() -> (Tensor[(6, 12, 2), int32],) {
  %1146 = fn () -> (Tensor[(6, 12, 2), int32],) {
    %1144 = @func_7084() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */;
    %1145 = %1144.1;
    (%1145,)
  };
  %1146() /* ty=(Tensor[(6, 12, 2), int32],) */
}

def @func_206(%var_158: Tensor[(3, 9, 14), uint8], %var_179: Tensor[(3, 2, 10), int32]) -> (Tensor[(60), int32], Tensor[(3, 2, 10), bool], Tensor[(3, 2, 10), int32], Tensor[(3, 9, 14), float64], Tensor[(3, 2, 10), int32]) {
  %1147 = cast(meta[relay.Constant][93] /* ty=Tensor[(60), int32] */, dtype="int32") /* ty=Tensor[(60), int32] */;
  %1148 = cast(meta[relay.Constant][93] /* ty=Tensor[(60), int32] */, dtype="int32") /* ty=Tensor[(60), int32] */;
  %1149 = reshape(%1147, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), int32] */;
  %1150 = reshape(%1148, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), int32] */;
  %1151 = @func_10(%1149, %1150) /* ty=Tensor[(3, 2, 10), int32] */;
  %1152 = cast(%var_179, dtype="bool") /* ty=Tensor[(3, 2, 10), bool] */;
  %1153 = shape_of(%1151, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1154 = cast(%1151, dtype="bool") /* ty=Tensor[(3, 2, 10), bool] */;
  %1155 = dyn.reshape(%1152, %1153, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1156 = cast(meta[relay.Constant][93] /* ty=Tensor[(60), int32] */, dtype="int32") /* ty=Tensor[(60), int32] */;
  %1157 = cast(%var_179, dtype="int32") /* ty=Tensor[(3, 2, 10), int32] */;
  %1158 = reshape(%1156, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), int32] */;
  %1159 = reshape(%1157, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), int32] */;
  %1160 = cast(meta[relay.Constant][94] /* ty=Tensor[(3, 9, 14), uint8] */, dtype="uint8") /* ty=Tensor[(3, 9, 14), uint8] */;
  %1161 = shape_of(%var_158, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1162 = cast(%var_158, dtype="uint8") /* ty=Tensor[(3, 9, 14), uint8] */;
  %1163 = dyn.reshape(%1160, %1161, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1164 = bitwise_and(%1162, %1163) /* ty=Tensor[(3, 9, 14), uint8] */;
  %1165 = cast(%1164, dtype="float64") /* ty=Tensor[(3, 9, 14), float64] */;
  %1166 = @func_10(%1158, %1159) /* ty=Tensor[(3, 2, 10), int32] */;
  %1167 = cast(%1166, dtype="int32") /* ty=Tensor[(3, 2, 10), int32] */;
  %1168 = less(%1154, %1155) /* ty=Tensor[(3, 2, 10), bool] */;
  %1169 = cast(%1168, dtype="int32") /* ty=Tensor[(3, 2, 10), int32] */;
  %1170 = reshape(%1167, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), int32] */;
  %1171 = reshape(%1169, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), int32] */;
  %1172 = rsqrt(%1165) /* ty=Tensor[(3, 9, 14), float64] */;
  %1173 = @func_10(%1170, %1171) /* ty=Tensor[(3, 2, 10), int32] */;
  (meta[relay.Constant][93] /* ty=Tensor[(60), int32] */, %1168, %1166, %1172, %1173)
}

def @func_10642() -> (Tensor[(6, 12, 2), int32], Tensor[(1, 3, 11), int8], int8, Tensor[(6, 12, 2), int32], Tensor[(9, 3, 13), bool], Tensor[(117, 3), bool], Tensor[(756), int8]) {
  %1187 = fn () -> (Tensor[(6, 12, 2), int32], Tensor[(1, 3, 11), int8], int8, Tensor[(6, 12, 2), int32], Tensor[(9, 3, 13), bool], Tensor[(117, 3), bool], Tensor[(756), int8]) {
    %1174 = @func_7870() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */;
    %1175 = cast(meta[relay.Constant][95] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %1176 = reshape(%1175, newshape=[]) /* ty=int8 */;
    %1177 = @func_7941() /* ty=(Tensor[(6, 12, 2), int32],) */;
    %1178 = cast(meta[relay.Constant][96] /* ty=Tensor[(117, 3), bool] */, dtype="bool") /* ty=Tensor[(117, 3), bool] */;
    %1179 = cast(meta[relay.Constant][97] /* ty=Tensor[(756), int8] */, dtype="int8") /* ty=Tensor[(756), int8] */;
    %1180 = reshape(%1178, newshape=[9, 3, 13]) /* ty=Tensor[(9, 3, 13), bool] */;
    %1181 = reshape(%1179, newshape=[756]) /* ty=Tensor[(756), int8] */;
    %1182 = @func_6808(%1180, %1181) /* ty=(Tensor[(9, 3, 13), bool], Tensor[(3, 2, 10), int32], Tensor[(756), int8]) */;
    %1183 = %1174.1;
    %1184 = @func_5457(%1176) /* ty=Tensor[(1, 3, 11), int8] */;
    %1185 = %1177.0;
    %1186 = %1182.0;
    (%1183, %1184, meta[relay.Constant][95] /* ty=int8 */, %1185, %1186, meta[relay.Constant][96] /* ty=Tensor[(117, 3), bool] */, meta[relay.Constant][97] /* ty=Tensor[(756), int8] */)
  };
  %1187() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(1, 3, 11), int8], int8, Tensor[(6, 12, 2), int32], Tensor[(9, 3, 13), bool], Tensor[(117, 3), bool], Tensor[(756), int8]) */
}

def @func_1356(%var_1314: Tensor[(11, 8, 16), int8], %var_1315: Tensor[(11, 8, 16), int8]) -> (Tensor[(11, 8, 16), int8], Tensor[(11, 8, 16), float64], Tensor[(3, 4, 16), float64], Tensor[(2, 96), float64]) {
  %1188 = cast(%var_1315, dtype="int8") /* ty=Tensor[(11, 8, 16), int8] */;
  %1189 = shape_of(%var_1314, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1190 = cast(%var_1314, dtype="int8") /* ty=Tensor[(11, 8, 16), int8] */;
  %1191 = dyn.reshape(%1188, %1189, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1192 = cast(%var_1314, dtype="float64") /* ty=Tensor[(11, 8, 16), float64] */;
  %1193 = cast(meta[relay.Constant][98] /* ty=Tensor[(2, 96), float64] */, dtype="float64") /* ty=Tensor[(2, 96), float64] */;
  %1194 = reshape(%1193, newshape=[3, 4, 16]) /* ty=Tensor[(3, 4, 16), float64] */;
  %1195 = bitwise_xor(%1190, %1191) /* ty=Tensor[(11, 8, 16), int8] */;
  %1196 = rsqrt(%1192) /* ty=Tensor[(11, 8, 16), float64] */;
  %1197 = @func_1144(%1194) /* ty=Tensor[(3, 4, 16), float64] */;
  (%1195, %1196, %1197, meta[relay.Constant][98] /* ty=Tensor[(2, 96), float64] */)
}

def @func_10540() -> (Tensor[(6, 12, 2), float64],) {
  %1201 = fn () -> (Tensor[(6, 12, 2), float64],) {
    %1198 = @func_7406() /* ty=Tensor[(6, 12, 2), int32] */;
    %1199 = cast(%1198, dtype="float64") /* ty=Tensor[(6, 12, 2), float64] */;
    %1200 = cos(%1199) /* ty=Tensor[(6, 12, 2), float64] */;
    (%1200,)
  };
  %1201() /* ty=(Tensor[(6, 12, 2), float64],) */
}

def @func_8677() -> (Tensor[(6, 12, 2), int32],) {
  %1202 = @func_7084() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */;
  %1203 = %1202.1;
  (%1203,)
}

def @func_6552() -> (Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) {
  %1207 = fn () -> (Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) {
    %1204 = @func_5659() /* ty=(Tensor[(6, 12, 2), int32],) */;
    %1205 = %1204.0;
    %1206 = @func_5648() /* ty=Tensor[(6, 12, 2), int32] */;
    (%1205, %1206)
  };
  %1207() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */
}

def @func_7304(%var_7299: Tensor[(1404), float64], %var_7300: Tensor[(30, 2), int32], %var_7301: Tensor[(8, 60), float32], %var_7302: Tensor[(252), float64], %var_7303: Tensor[(720), float64]) -> (Tensor[(6, 12, 2), float32], Tensor[(1404), float64], Tensor[(15, 6, 15), float32], Tensor[(1350), int32], Tensor[(288), int8], Tensor[(30, 2), int32], Tensor[(8, 60), float32], Tensor[(8, 24), float64], Tensor[(9, 12, 13), float32], Tensor[(60), int32], Tensor[(252), float64], Tensor[(54, 14), int8], Tensor[(64), float32], Tensor[(720), float64]) {
  @func_7297(%var_7299, %var_7300, %var_7301, %var_7302, %var_7303) /* ty=(Tensor[(6, 12, 2), float32], Tensor[(1404), float64], Tensor[(15, 6, 15), float32], Tensor[(1350), int32], Tensor[(288), int8], Tensor[(30, 2), int32], Tensor[(8, 60), float32], Tensor[(8, 24), float64], Tensor[(9, 12, 13), float32], Tensor[(60), int32], Tensor[(252), float64], Tensor[(54, 14), int8], Tensor[(64), float32], Tensor[(720), float64]) */
}

def @func_9908(%var_9907: Tensor[(192), float64]) -> (Tensor[(6, 12, 2), uint8], Tensor[(378), uint8], Tensor[(192), float64], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) {
  %1220 = fn (%var_9868: Tensor[(192), float64]) -> (Tensor[(6, 12, 2), uint8], Tensor[(378), uint8], Tensor[(192), float64], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) {
    %1208 = @func_7805() /* ty=(Tensor[(6, 12, 2), uint8],) */;
    %1209 = cast(%var_9868, dtype="float64") /* ty=Tensor[(192), float64] */;
    %1210 = reshape(%1209, newshape=[192]) /* ty=Tensor[(192), float64] */;
    %1211 = @func_6218(%1210) /* ty=(Tensor[(6, 12, 2), float64], Tensor[(3, 2, 10), int32], Tensor[(300), float32], Tensor[(192), float64], Tensor[(378), uint8]) */;
    %1212 = @func_8677() /* ty=(Tensor[(6, 12, 2), int32],) */;
    %1213 = @func_6154() /* ty=(Tensor[(6, 12, 2), int32],) */;
    %1214 = @func_6480() /* ty=(Tensor[(6, 12, 2), float32], Tensor[(6, 12, 2), int32]) */;
    %1215 = %1208.0;
    %1216 = %1211.4;
    %1217 = %1212.0;
    %1218 = %1213.0;
    %1219 = %1214.1;
    (%1215, %1216, %var_9868, %1217, %1218, %1219)
  };
  %1220(%var_9907) /* ty=(Tensor[(6, 12, 2), uint8], Tensor[(378), uint8], Tensor[(192), float64], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */
}

def @func_8679() -> (Tensor[(6, 12, 2), int32],) {
  @func_8677() /* ty=(Tensor[(6, 12, 2), int32],) */
}

def @func_14419(%var_14418: Tensor[(60), int32]) -> (Tensor[(6, 12, 2), float32], Tensor[(3, 9, 14), float64], Tensor[(60), int32], Tensor[(3, 2, 10), int32]) {
  %1232 = fn (%var_14376: Tensor[(60), int32]) -> (Tensor[(6, 12, 2), float32], Tensor[(3, 9, 14), float64], Tensor[(60), int32], Tensor[(3, 2, 10), int32]) {
    %1221 = @func_13394() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), uint8], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), float32], Tensor[(6, 12, 2), int32]) */;
    %1222 = cast(%var_14376, dtype="int32") /* ty=Tensor[(60), int32] */;
    %1223 = reshape(%1222, newshape=[30, 2]) /* ty=Tensor[(30, 2), int32] */;
    %1224 = @func_11681(%1223) /* ty=(Tensor[(6, 12, 2), int32], Tensor[(3, 9, 14), float64], Tensor[(378), uint8], Tensor[(30, 2), int32]) */;
    %1225 = cast(%var_14376, dtype="int32") /* ty=Tensor[(60), int32] */;
    %1226 = cast(%var_14376, dtype="int32") /* ty=Tensor[(60), int32] */;
    %1227 = reshape(%1225, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), int32] */;
    %1228 = reshape(%1226, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), int32] */;
    %1229 = %1221.3;
    %1230 = %1224.1;
    %1231 = @func_10(%1227, %1228) /* ty=Tensor[(3, 2, 10), int32] */;
    (%1229, %1230, %var_14376, %1231)
  };
  %1232(%var_14418) /* ty=(Tensor[(6, 12, 2), float32], Tensor[(3, 9, 14), float64], Tensor[(60), int32], Tensor[(3, 2, 10), int32]) */
}

def @func_2774(%var_2767: Tensor[(8, 7, 14), uint32], %var_2768: Tensor[(8, 7, 14), uint32], %var_2769: Tensor[(60), int32], %var_2770: Tensor[(9, 84), int8], %var_2771: Tensor[(24, 8), float64], %var_2772: Tensor[(1, 252), float64], %var_2773: Tensor[(378), uint8]) -> (Tensor[(60), int32], Tensor[(288), int8], Tensor[(112), bool], Tensor[(60), int32], Tensor[(8, 7, 14), float64], Tensor[(3, 2, 10), int32], Tensor[(9, 84), int8], Tensor[(3, 4, 16), float64], Tensor[(24, 8), float64], Tensor[(3, 4, 16), float64], Tensor[(60), int32], Tensor[(1, 252), float64], Tensor[(3, 2, 10), int32], Tensor[(378), uint8], Tensor[(60), int32], int16, Tensor[(16, 7, ?), uint64], Tensor[(11, 8, 16), int8], Tensor[(2, 704), int8]) {
  @func_2765(%var_2767, %var_2768, %var_2769, %var_2770, %var_2771, %var_2772, %var_2773) /* ty=(Tensor[(60), int32], Tensor[(288), int8], Tensor[(112), bool], Tensor[(60), int32], Tensor[(8, 7, 14), float64], Tensor[(3, 2, 10), int32], Tensor[(9, 84), int8], Tensor[(3, 4, 16), float64], Tensor[(24, 8), float64], Tensor[(3, 4, 16), float64], Tensor[(60), int32], Tensor[(1, 252), float64], Tensor[(3, 2, 10), int32], Tensor[(378), uint8], Tensor[(60), int32], int16, Tensor[(16, 7, ?), uint64], Tensor[(11, 8, 16), int8], Tensor[(2, 704), int8]) */
}

def @func_9178(%var_9165: Tensor[(60), int32], %var_9168: Tensor[(42, 6), float64], %var_9173: Tensor[(6, 12, 2), int32]) -> (Tensor[(378), uint8], Tensor[(784), uint32], Tensor[(60), int32], Tensor[(756), int8], Tensor[(192), float64], Tensor[(42, 6), float64], Tensor[(378), uint8], Tensor[(6, 12, 2), int8]) {
  %1233 = cast(meta[relay.Constant][99] /* ty=Tensor[(784), uint32] */, dtype="uint32") /* ty=Tensor[(784), uint32] */;
  %1234 = cast(meta[relay.Constant][99] /* ty=Tensor[(784), uint32] */, dtype="uint32") /* ty=Tensor[(784), uint32] */;
  %1235 = cast(%var_9165, dtype="int32") /* ty=Tensor[(60), int32] */;
  %1236 = cast(meta[relay.Constant][100] /* ty=Tensor[(756), int8] */, dtype="int8") /* ty=Tensor[(756), int8] */;
  %1237 = cast(meta[relay.Constant][101] /* ty=Tensor[(192), float64] */, dtype="float64") /* ty=Tensor[(192), float64] */;
  %1238 = cast(%var_9168, dtype="float64") /* ty=Tensor[(42, 6), float64] */;
  %1239 = cast(meta[relay.Constant][102] /* ty=Tensor[(378), uint8] */, dtype="uint8") /* ty=Tensor[(378), uint8] */;
  %1240 = reshape(%1233, newshape=[8, 7, 14]) /* ty=Tensor[(8, 7, 14), uint32] */;
  %1241 = reshape(%1234, newshape=[8, 7, 14]) /* ty=Tensor[(8, 7, 14), uint32] */;
  %1242 = reshape(%1235, newshape=[60]) /* ty=Tensor[(60), int32] */;
  %1243 = reshape(%1236, newshape=[9, 84]) /* ty=Tensor[(9, 84), int8] */;
  %1244 = reshape(%1237, newshape=[24, 8]) /* ty=Tensor[(24, 8), float64] */;
  %1245 = reshape(%1238, newshape=[1, 252]) /* ty=Tensor[(1, 252), float64] */;
  %1246 = reshape(%1239, newshape=[378]) /* ty=Tensor[(378), uint8] */;
  %1247 = @func_2765(%1240, %1241, %1242, %1243, %1244, %1245, %1246) /* ty=(Tensor[(60), int32], Tensor[(288), int8], Tensor[(112), bool], Tensor[(60), int32], Tensor[(8, 7, 14), float64], Tensor[(3, 2, 10), int32], Tensor[(9, 84), int8], Tensor[(3, 4, 16), float64], Tensor[(24, 8), float64], Tensor[(3, 4, 16), float64], Tensor[(60), int32], Tensor[(1, 252), float64], Tensor[(3, 2, 10), int32], Tensor[(378), uint8], Tensor[(60), int32], int16, Tensor[(16, 7, ?), uint64], Tensor[(11, 8, 16), int8], Tensor[(2, 704), int8]) */;
  %1248 = @func_8338() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %1249 = %1248.0;
  %1250 = cast(%var_9173, dtype="int8") /* ty=Tensor[(6, 12, 2), int8] */;
  %1251 = shape_of(%1249, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1252 = cast(%1249, dtype="int8") /* ty=Tensor[(6, 12, 2), int8] */;
  %1253 = dyn.reshape(%1250, %1251, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1254 = %1247.13;
  %1255 = bitwise_or(%1252, %1253) /* ty=Tensor[(6, 12, 2), int8] */;
  (%1254, meta[relay.Constant][99] /* ty=Tensor[(784), uint32] */, %var_9165, meta[relay.Constant][100] /* ty=Tensor[(756), int8] */, meta[relay.Constant][101] /* ty=Tensor[(192), float64] */, %var_9168, meta[relay.Constant][102] /* ty=Tensor[(378), uint8] */, %1255)
}

def @func_4677(%var_4663: Tensor[(3, 2, 10), uint16]) -> (Tensor[(3, 2, 10), uint16],) {
  %1256 = cast(meta[relay.Constant][103] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %1257 = cast(%var_4663, dtype="uint16") /* ty=Tensor[(3, 2, 10), uint16] */;
  %1258 = left_shift(%1256, %1257) /* ty=Tensor[(3, 2, 10), uint16] */;
  (%1258,)
}

def @func_11328() -> (Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), float32]) {
  %1259 = @func_7084() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */;
  %1260 = @func_10846() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %1261 = %1260.0;
  %1262 = cast(%1261, dtype="float32") /* ty=Tensor[(6, 12, 2), float32] */;
  %1263 = %1259.1;
  %1264 = cosh(%1262) /* ty=Tensor[(6, 12, 2), float32] */;
  (%1263, %1264)
}

def @func_4056(%var_4054: Tensor[(7, 16, 6), float64]) -> Tensor[(7, 16, 6), float64] {
  @func_4053(%var_4054) /* ty=Tensor[(7, 16, 6), float64] */
}

def @func_9669(%var_9667: Tensor[(60), int32], %var_9668: Tensor[(378), uint8]) -> (Tensor[(6, 12, 2), int32], Tensor[(3, 2, 10), int32], Tensor[(784), uint32], Tensor[(60), int32], Tensor[(756), int8], Tensor[(24, 8), float64], Tensor[(378), uint8], Tensor[(3, 84), float32]) {
  %1285 = fn (%var_9650: Tensor[(60), int32], %var_9654: Tensor[(378), uint8]) -> (Tensor[(6, 12, 2), int32], Tensor[(3, 2, 10), int32], Tensor[(784), uint32], Tensor[(60), int32], Tensor[(756), int8], Tensor[(24, 8), float64], Tensor[(378), uint8], Tensor[(3, 84), float32]) {
    %1265 = @func_6551() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */;
    %1266 = cast(meta[relay.Constant][104] /* ty=Tensor[(784), uint32] */, dtype="uint32") /* ty=Tensor[(784), uint32] */;
    %1267 = cast(meta[relay.Constant][104] /* ty=Tensor[(784), uint32] */, dtype="uint32") /* ty=Tensor[(784), uint32] */;
    %1268 = cast(%var_9650, dtype="int32") /* ty=Tensor[(60), int32] */;
    %1269 = cast(meta[relay.Constant][105] /* ty=Tensor[(756), int8] */, dtype="int8") /* ty=Tensor[(756), int8] */;
    %1270 = cast(meta[relay.Constant][106] /* ty=Tensor[(24, 8), float64] */, dtype="float64") /* ty=Tensor[(24, 8), float64] */;
    %1271 = cast(meta[relay.Constant][107] /* ty=Tensor[(3, 84), float64] */, dtype="float64") /* ty=Tensor[(3, 84), float64] */;
    %1272 = cast(%var_9654, dtype="uint8") /* ty=Tensor[(378), uint8] */;
    %1273 = reshape(%1266, newshape=[8, 7, 14]) /* ty=Tensor[(8, 7, 14), uint32] */;
    %1274 = reshape(%1267, newshape=[8, 7, 14]) /* ty=Tensor[(8, 7, 14), uint32] */;
    %1275 = reshape(%1268, newshape=[60]) /* ty=Tensor[(60), int32] */;
    %1276 = reshape(%1269, newshape=[9, 84]) /* ty=Tensor[(9, 84), int8] */;
    %1277 = reshape(%1270, newshape=[24, 8]) /* ty=Tensor[(24, 8), float64] */;
    %1278 = reshape(%1271, newshape=[1, 252]) /* ty=Tensor[(1, 252), float64] */;
    %1279 = reshape(%1272, newshape=[378]) /* ty=Tensor[(378), uint8] */;
    %1280 = @func_2765(%1273, %1274, %1275, %1276, %1277, %1278, %1279) /* ty=(Tensor[(60), int32], Tensor[(288), int8], Tensor[(112), bool], Tensor[(60), int32], Tensor[(8, 7, 14), float64], Tensor[(3, 2, 10), int32], Tensor[(9, 84), int8], Tensor[(3, 4, 16), float64], Tensor[(24, 8), float64], Tensor[(3, 4, 16), float64], Tensor[(60), int32], Tensor[(1, 252), float64], Tensor[(3, 2, 10), int32], Tensor[(378), uint8], Tensor[(60), int32], int16, Tensor[(16, 7, ?), uint64], Tensor[(11, 8, 16), int8], Tensor[(2, 704), int8]) */;
    %1281 = cast(meta[relay.Constant][107] /* ty=Tensor[(3, 84), float64] */, dtype="float32") /* ty=Tensor[(3, 84), float32] */;
    %1282 = %1265.1;
    %1283 = %1280.12;
    %1284 = acos(%1281) /* ty=Tensor[(3, 84), float32] */;
    (%1282, %1283, meta[relay.Constant][104] /* ty=Tensor[(784), uint32] */, %var_9650, meta[relay.Constant][105] /* ty=Tensor[(756), int8] */, meta[relay.Constant][106] /* ty=Tensor[(24, 8), float64] */, %var_9654, %1284)
  };
  %1285(%var_9667, %var_9668) /* ty=(Tensor[(6, 12, 2), int32], Tensor[(3, 2, 10), int32], Tensor[(784), uint32], Tensor[(60), int32], Tensor[(756), int8], Tensor[(24, 8), float64], Tensor[(378), uint8], Tensor[(3, 84), float32]) */
}

def @func_9147() -> (Tensor[(6, 12, 2), int32],) {
  %1286 = @func_6551() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */;
  %1287 = %1286.0;
  (%1287,)
}

def @func_7366(%var_7365: Tensor[(18, 42), int8]) -> (Tensor[(6, 12, 2), int32], Tensor[(9, 3, 13), bool], Tensor[(351), bool], Tensor[(18, 42), int8]) {
  %1296 = fn (%var_7322: Tensor[(18, 42), int8]) -> (Tensor[(6, 12, 2), int32], Tensor[(9, 3, 13), bool], Tensor[(351), bool], Tensor[(18, 42), int8]) {
    %1288 = @func_6154() /* ty=(Tensor[(6, 12, 2), int32],) */;
    %1289 = cast(meta[relay.Constant][108] /* ty=Tensor[(351), bool] */, dtype="bool") /* ty=Tensor[(351), bool] */;
    %1290 = cast(%var_7322, dtype="int8") /* ty=Tensor[(18, 42), int8] */;
    %1291 = reshape(%1289, newshape=[9, 3, 13]) /* ty=Tensor[(9, 3, 13), bool] */;
    %1292 = reshape(%1290, newshape=[756]) /* ty=Tensor[(756), int8] */;
    %1293 = @func_6808(%1291, %1292) /* ty=(Tensor[(9, 3, 13), bool], Tensor[(3, 2, 10), int32], Tensor[(756), int8]) */;
    %1294 = %1288.0;
    %1295 = %1293.0;
    (%1294, %1295, meta[relay.Constant][108] /* ty=Tensor[(351), bool] */, %var_7322)
  };
  %1296(%var_7365) /* ty=(Tensor[(6, 12, 2), int32], Tensor[(9, 3, 13), bool], Tensor[(351), bool], Tensor[(18, 42), int8]) */
}

def @func_10445() -> Tensor[(6, 12, 2), int32] {
  %1297 = @func_5899() /* ty=(Tensor[(6, 12, 2), int32],) */;
  %1297.0
}

def @func_11330() -> (Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), float32]) {
  @func_11328() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), float32]) */
}

def @func_4830(%var_4827: Tensor[(15, 2, 10), float32], %var_4828: Tensor[(48, 4), float64], %var_4829: Tensor[(126, 3), uint8]) -> (Tensor[(15, 2, 10), float32], Tensor[(3, 4, 16), float64], Tensor[(48, 4), float64], Tensor[(60), uint16], Tensor[(3, 2, 10), int32], Tensor[(126, 3), uint8], Tensor[(11, 8, 16), float64], Tensor[(1408), int8], Tensor[(3, 2, 10), float32], Tensor[(3, 2, 10), int32], Tensor[(756), int8], Tensor[(1408), int8], Tensor[(140), float32]) {
  %1333 = fn (%var_4761: Tensor[(15, 2, 10), float32], %var_4777: Tensor[(48, 4), float64], %var_4793: Tensor[(126, 3), uint8]) -> (Tensor[(15, 2, 10), float32], Tensor[(3, 4, 16), float64], Tensor[(48, 4), float64], Tensor[(60), uint16], Tensor[(3, 2, 10), int32], Tensor[(126, 3), uint8], Tensor[(11, 8, 16), float64], Tensor[(1408), int8], Tensor[(3, 2, 10), float32], Tensor[(3, 2, 10), int32], Tensor[(756), int8], Tensor[(1408), int8], Tensor[(140), float32]) {
    %1298 = cast(%var_4761, dtype="float32") /* ty=Tensor[(15, 2, 10), float32] */;
    %1299 = cast(%var_4777, dtype="float64") /* ty=Tensor[(48, 4), float64] */;
    %1300 = reshape(%1299, newshape=[3, 4, 16]) /* ty=Tensor[(3, 4, 16), float64] */;
    %1301 = cast(%var_4793, dtype="uint8") /* ty=Tensor[(126, 3), uint8] */;
    %1302 = cast(meta[relay.Constant][109] /* ty=Tensor[(60), uint16] */, dtype="int32") /* ty=Tensor[(60), int32] */;
    %1303 = reshape(%1301, newshape=[3, 9, 14]) /* ty=Tensor[(3, 9, 14), uint8] */;
    %1304 = reshape(%1302, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), int32] */;
    %1305 = @func_206(%1303, %1304) /* ty=(Tensor[(60), int32], Tensor[(3, 2, 10), bool], Tensor[(3, 2, 10), int32], Tensor[(3, 9, 14), float64], Tensor[(3, 2, 10), int32]) */;
    %1306 = cast(meta[relay.Constant][110] /* ty=Tensor[(1408), int8] */, dtype="int8") /* ty=Tensor[(1408), int8] */;
    %1307 = cast(meta[relay.Constant][110] /* ty=Tensor[(1408), int8] */, dtype="int8") /* ty=Tensor[(1408), int8] */;
    %1308 = reshape(%1306, newshape=[11, 8, 16]) /* ty=Tensor[(11, 8, 16), int8] */;
    %1309 = reshape(%1307, newshape=[11, 8, 16]) /* ty=Tensor[(11, 8, 16), int8] */;
    %1310 = @func_1356(%1308, %1309) /* ty=(Tensor[(11, 8, 16), int8], Tensor[(11, 8, 16), float64], Tensor[(3, 4, 16), float64], Tensor[(2, 96), float64]) */;
    %1311 = cast(meta[relay.Constant][109] /* ty=Tensor[(60), uint16] */, dtype="uint16") /* ty=Tensor[(60), uint16] */;
    %1312 = reshape(%1311, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), uint16] */;
    %1313 = @func_4677(%1312) /* ty=(Tensor[(3, 2, 10), uint16],) */;
    %1314 = %1313.0;
    %1315 = cast(%1314, dtype="float32") /* ty=Tensor[(3, 2, 10), float32] */;
    %1316 = cast(meta[relay.Constant][111] /* ty=Tensor[(756), int8] */, dtype="int8") /* ty=Tensor[(756), int8] */;
    %1317 = cast(meta[relay.Constant][111] /* ty=Tensor[(756), int8] */, dtype="int8") /* ty=Tensor[(756), int8] */;
    %1318 = reshape(%1316, newshape=[7, 12, 9]) /* ty=Tensor[(7, 12, 9), int8] */;
    %1319 = reshape(%1317, newshape=[7, 12, 9]) /* ty=Tensor[(7, 12, 9), int8] */;
    %1320 = @func_1789(%1318, %1319) /* ty=(Tensor[(7, 12, 9), int8], Tensor[(3, 2, 10), int32], Tensor[(378), uint8], Tensor[(60), int32]) */;
    %1321 = cast(meta[relay.Constant][112] /* ty=Tensor[(140), float32] */, dtype="float32") /* ty=Tensor[(140), float32] */;
    %1322 = cast(meta[relay.Constant][112] /* ty=Tensor[(140), float32] */, dtype="float32") /* ty=Tensor[(140), float32] */;
    %1323 = reshape(%1321, newshape=[4, 5, 7]) /* ty=Tensor[(4, 5, 7), float32] */;
    %1324 = reshape(%1322, newshape=[4, 5, 7]) /* ty=Tensor[(4, 5, 7), float32] */;
    %1325 = @func_1954(%1323, %1324) /* ty=(Tensor[(4, 5, 7), float32], Tensor[(4, 5, 7), float64], Tensor[(2, 96), float64], Tensor[(1408), int8]) */;
    %1326 = atanh(%1298) /* ty=Tensor[(15, 2, 10), float32] */;
    %1327 = @func_1144(%1300) /* ty=Tensor[(3, 4, 16), float64] */;
    %1328 = %1305.2;
    %1329 = %1310.1;
    %1330 = acosh(%1315) /* ty=Tensor[(3, 2, 10), float32] */;
    %1331 = %1320.1;
    %1332 = %1325.3;
    (%1326, %1327, %var_4777, meta[relay.Constant][109] /* ty=Tensor[(60), uint16] */, %1328, %var_4793, %1329, meta[relay.Constant][110] /* ty=Tensor[(1408), int8] */, %1330, %1331, meta[relay.Constant][111] /* ty=Tensor[(756), int8] */, %1332, meta[relay.Constant][112] /* ty=Tensor[(140), float32] */)
  };
  %1333(%var_4827, %var_4828, %var_4829) /* ty=(Tensor[(15, 2, 10), float32], Tensor[(3, 4, 16), float64], Tensor[(48, 4), float64], Tensor[(60), uint16], Tensor[(3, 2, 10), int32], Tensor[(126, 3), uint8], Tensor[(11, 8, 16), float64], Tensor[(1408), int8], Tensor[(3, 2, 10), float32], Tensor[(3, 2, 10), int32], Tensor[(756), int8], Tensor[(1408), int8], Tensor[(140), float32]) */
}

def @func_1144(%var_1141: Tensor[(3, 4, 16), float64]) -> Tensor[(3, 4, 16), float64] {
  %1334 = cast(%var_1141, dtype="float64") /* ty=Tensor[(3, 4, 16), float64] */;
  asin(%1334) /* ty=Tensor[(3, 4, 16), float64] */
}

def @func_11215(%var_11213: Tensor[(192), float64], %var_11214: Tensor[(300), float32]) -> (Tensor[(756), int8], Tensor[(6, 12, 2), int32], Tensor[(480), float32], Tensor[(192), float64], Tensor[(1, 176), float32], Tensor[(300), float32]) {
  @func_11211(%var_11213, %var_11214) /* ty=(Tensor[(756), int8], Tensor[(6, 12, 2), int32], Tensor[(480), float32], Tensor[(192), float64], Tensor[(1, 176), float32], Tensor[(300), float32]) */
}

def @func_11462() -> (Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) {
  %1339 = fn () -> (Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) {
    %1335 = @func_10807() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */;
    %1336 = @func_9033() /* ty=(Tensor[(6, 12, 2), int32],) */;
    %1337 = %1335.1;
    %1338 = %1336.0;
    (%1337, %1338)
  };
  %1339() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */
}

def @func_12860() -> (Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) {
  @func_12858() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */
}

def @func_13159() -> Tensor[(6, 12, 2), int32] {
  %1341 = fn () -> Tensor[(6, 12, 2), int32] {
    %1340 = @func_11461() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */;
    %1340.1
  };
  %1341() /* ty=Tensor[(6, 12, 2), int32] */
}

def @func_13221(%var_13220: Tensor[(60), int32]) -> (Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32], Tensor[(378), uint8], Tensor[(60), int32]) {
  %1350 = fn (%var_13194: Tensor[(60), int32]) -> (Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32], Tensor[(378), uint8], Tensor[(60), int32]) {
    %1342 = @func_11461() /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32]) */;
    %1343 = cast(meta[relay.Constant][113] /* ty=Tensor[(378), uint8] */, dtype="uint8") /* ty=Tensor[(378), uint8] */;
    %1344 = cast(%var_13194, dtype="int32") /* ty=Tensor[(60), int32] */;
    %1345 = reshape(%1343, newshape=[378]) /* ty=Tensor[(378), uint8] */;
    %1346 = reshape(%1344, newshape=[60, 1]) /* ty=Tensor[(60, 1), int32] */;
    %1347 = @func_8245(%1345, %1346) /* ty=(Tensor[(6, 12, 2), int32], Tensor[(3, 4, 16), float64], Tensor[(192), float64], Tensor[(3, 9, 14), float64], Tensor[(378), uint8], Tensor[(15, 6, 15), float32], Tensor[(60, 1350), bool], Tensor[(3, 2, 10), int32]) */;
    %1348 = %1342.1;
    %1349 = %1347.0;
    (%1348, %1349, meta[relay.Constant][113] /* ty=Tensor[(378), uint8] */, %var_13194)
  };
  %1350(%var_13220) /* ty=(Tensor[(6, 12, 2), int32], Tensor[(6, 12, 2), int32], Tensor[(378), uint8], Tensor[(60), int32]) */
}

def @func_13754() -> (Tensor[(14, 15, 7), int8], Tensor[(14, 15, 7), float32], Tensor[(9, 3, 13), bool], Tensor[(176), float32]) {
  @func_13752() /* ty=(Tensor[(14, 15, 7), int8], Tensor[(14, 15, 7), float32], Tensor[(9, 3, 13), bool], Tensor[(176), float32]) */
}

def @func_6529() -> (Tensor[(6, 12, 2), int32],) {
  %1351 = @func_5512() /* ty=Tensor[(6, 12, 2), int32] */;
  (%1351,)
}

def @func_6060(%var_5919: Tensor[(2, 4, 8), float32], %var_5930: Tensor[(15, 4), int32], %var_5944: Tensor[(756), int8], %var_5945: Tensor[(192), float64], %var_5999: Tensor[(720), float64], %var_6026: Tensor[(1, 288), int8], %var_6027: Tensor[(112), bool]) -> (Tensor[(2, 4, 8), int32], Tensor[(3, 2, 10), int32], Tensor[(15, 4), int32], Tensor[(60), int32], Tensor[(784), uint32], Tensor[(756), int8], Tensor[(192), float64], Tensor[(252), float64], Tensor[(378), uint8], Tensor[(2, 4, 8), float64], Tensor[(15, 12, 4), float64], Tensor[(720), float64], Tensor[(60), int32], Tensor[(1, 288), int8], Tensor[(112), bool], Tensor[(16, 7, ?), uint64], Tensor[(8, 84), uint64], Tensor[(2, 4, 8), float64]) {
  %1352 = cast(%var_5919, dtype="float32") /* ty=Tensor[(2, 4, 8), float32] */;
  %1353 = log10(%1352) /* ty=Tensor[(2, 4, 8), float32] */;
  %1354 = cast(%1353, dtype="int32") /* ty=Tensor[(2, 4, 8), int32] */;
  %1355 = shape_of(%var_5919, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1356 = cast(%var_5919, dtype="int32") /* ty=Tensor[(2, 4, 8), int32] */;
  %1357 = dyn.reshape(%1354, %1355, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1358 = cast(%var_5930, dtype="int32") /* ty=Tensor[(15, 4), int32] */;
  %1359 = cast(%var_5930, dtype="int32") /* ty=Tensor[(15, 4), int32] */;
  %1360 = reshape(%1358, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), int32] */;
  %1361 = reshape(%1359, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), int32] */;
  %1362 = cast(meta[relay.Constant][114] /* ty=Tensor[(784), uint32] */, dtype="uint32") /* ty=Tensor[(784), uint32] */;
  %1363 = cast(meta[relay.Constant][114] /* ty=Tensor[(784), uint32] */, dtype="uint32") /* ty=Tensor[(784), uint32] */;
  %1364 = @func_10(%1360, %1361) /* ty=Tensor[(3, 2, 10), int32] */;
  %1365 = cast(%1364, dtype="int32") /* ty=Tensor[(3, 2, 10), int32] */;
  %1366 = cast(%var_5944, dtype="int8") /* ty=Tensor[(756), int8] */;
  %1367 = cast(%var_5945, dtype="float64") /* ty=Tensor[(192), float64] */;
  %1368 = cast(meta[relay.Constant][115] /* ty=Tensor[(252), float64] */, dtype="float64") /* ty=Tensor[(252), float64] */;
  %1369 = cast(meta[relay.Constant][116] /* ty=Tensor[(378), uint8] */, dtype="uint8") /* ty=Tensor[(378), uint8] */;
  %1370 = reshape(%1362, newshape=[8, 7, 14]) /* ty=Tensor[(8, 7, 14), uint32] */;
  %1371 = reshape(%1363, newshape=[8, 7, 14]) /* ty=Tensor[(8, 7, 14), uint32] */;
  %1372 = reshape(%1365, newshape=[60]) /* ty=Tensor[(60), int32] */;
  %1373 = reshape(%1366, newshape=[9, 84]) /* ty=Tensor[(9, 84), int8] */;
  %1374 = reshape(%1367, newshape=[24, 8]) /* ty=Tensor[(24, 8), float64] */;
  %1375 = reshape(%1368, newshape=[1, 252]) /* ty=Tensor[(1, 252), float64] */;
  %1376 = reshape(%1369, newshape=[378]) /* ty=Tensor[(378), uint8] */;
  %1377 = @func_2765(%1370, %1371, %1372, %1373, %1374, %1375, %1376) /* ty=(Tensor[(60), int32], Tensor[(288), int8], Tensor[(112), bool], Tensor[(60), int32], Tensor[(8, 7, 14), float64], Tensor[(3, 2, 10), int32], Tensor[(9, 84), int8], Tensor[(3, 4, 16), float64], Tensor[(24, 8), float64], Tensor[(3, 4, 16), float64], Tensor[(60), int32], Tensor[(1, 252), float64], Tensor[(3, 2, 10), int32], Tensor[(378), uint8], Tensor[(60), int32], int16, Tensor[(16, 7, ?), uint64], Tensor[(11, 8, 16), int8], Tensor[(2, 704), int8]) */;
  %1378 = cast(meta[relay.Constant][117] /* ty=Tensor[(2, 4, 8), float32] */, dtype="float64") /* ty=Tensor[(2, 4, 8), float64] */;
  %1379 = shape_of(%var_5919, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1380 = cast(%var_5919, dtype="float64") /* ty=Tensor[(2, 4, 8), float64] */;
  %1381 = dyn.reshape(%1378, %1379, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1382 = cast(%var_5999, dtype="float64") /* ty=Tensor[(720), float64] */;
  %1383 = reshape(%1382, newshape=[15, 12, 4]) /* ty=Tensor[(15, 12, 4), float64] */;
  %1384 = @func_3057(%1383) /* ty=(Tensor[(15, 12, 4), float64], Tensor[(15, 12, 4), float32]) */;
  %1385 = cast(%var_6026, dtype="int8") /* ty=Tensor[(1, 288), int8] */;
  %1386 = cast(%var_6026, dtype="int8") /* ty=Tensor[(1, 288), int8] */;
  %1387 = cast(%var_6027, dtype="bool") /* ty=Tensor[(112), bool] */;
  %1388 = cast(%1364, dtype="int32") /* ty=Tensor[(3, 2, 10), int32] */;
  %1389 = reshape(%1385, newshape=[6, 4, 12]) /* ty=Tensor[(6, 4, 12), int8] */;
  %1390 = reshape(%1386, newshape=[6, 4, 12]) /* ty=Tensor[(6, 4, 12), int8] */;
  %1391 = reshape(%1387, newshape=[1, 112]) /* ty=Tensor[(1, 112), bool] */;
  %1392 = reshape(%1388, newshape=[60]) /* ty=Tensor[(60), int32] */;
  %1393 = @func_1668(%1389, %1390, %1391, %1392) /* ty=(Tensor[(6, 4, 12), int8], Tensor[(1, 112), bool], Tensor[(3, 2, 10), int32], Tensor[(60), int32], Tensor[(16, 7, 378), uint8]) */;
  %1394 = cast(%var_6027, dtype="bool") /* ty=Tensor[(112), bool] */;
  %1395 = reshape(%1394, newshape=[16, 7, 1]) /* ty=Tensor[(16, 7, 1), bool] */;
  %1396 = @func_1396(%1395) /* ty=(Tensor[(16, 7, ?), uint64],) */;
  %1397 = cast(meta[relay.Constant][118] /* ty=Tensor[(8, 84), float64] */, dtype="float64") /* ty=Tensor[(8, 84), float64] */;
  %1398 = reshape(%1397, newshape=[7, 16, 6]) /* ty=Tensor[(7, 16, 6), float64] */;
  %1399 = @func_4053(%1398) /* ty=Tensor[(7, 16, 6), float64] */;
  %1400 = cast(%1399, dtype="uint64") /* ty=Tensor[(7, 16, 6), uint64] */;
  %1401 = shape_of(meta[relay.Constant][118] /* ty=Tensor[(8, 84), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1402 = cast(meta[relay.Constant][118] /* ty=Tensor[(8, 84), float64] */, dtype="uint64") /* ty=Tensor[(8, 84), uint64] */;
  %1403 = dyn.reshape(%1400, %1401, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %1404 = cast(%1353, dtype="float64") /* ty=Tensor[(2, 4, 8), float64] */;
  %1405 = bitwise_or(%1356, %1357) /* ty=Tensor[(2, 4, 8), int32] */;
  %1406 = %1377.3;
  %1407 = power(%1380, %1381) /* ty=Tensor[(2, 4, 8), float64] */;
  %1408 = %1384.0;
  %1409 = %1393.3;
  %1410 = %1396.0;
  %1411 = minimum(%1402, %1403) /* ty=Tensor[(8, 84), uint64] */;
  %1412 = sigmoid(%1404) /* ty=Tensor[(2, 4, 8), float64] */;
  (%1405, %1364, %var_5930, %1406, meta[relay.Constant][114] /* ty=Tensor[(784), uint32] */, %var_5944, %var_5945, meta[relay.Constant][115] /* ty=Tensor[(252), float64] */, meta[relay.Constant][116] /* ty=Tensor[(378), uint8] */, %1407, %1408, %var_5999, %1409, %var_6026, %var_6027, %1410, %1411, %1412)
}

def @func_11941(%var_11939: Tensor[(192), float64]) -> (Tensor[(6, 12, 2), uint8], Tensor[(6, 12, 2), uint8], Tensor[(15, 2, 10), float32], Tensor[(300), float32], Tensor[(192), float64], Tensor[(378), uint8]) {
  @func_11938(%var_11939) /* ty=(Tensor[(6, 12, 2), uint8], Tensor[(6, 12, 2), uint8], Tensor[(15, 2, 10), float32], Tensor[(300), float32], Tensor[(192), float64], Tensor[(378), uint8]) */
}

def @func_3927(%var_3924: Tensor[(9, 3, 15), float32], %var_3925: Tensor[(378), uint8], %var_3926: Tensor[(60), int32]) -> (Tensor[(9, 3, 15), float32], Tensor[(60), int32], Tensor[(378), uint8], Tensor[(60), int32]) {
  %1421 = fn (%var_3909: Tensor[(9, 3, 15), float32], %var_3920: Tensor[(378), uint8], %var_3921: Tensor[(60), int32]) -> (Tensor[(9, 3, 15), float32], Tensor[(60), int32], Tensor[(378), uint8], Tensor[(60), int32]) {
    %1413 = cast(%var_3909, dtype="float32") /* ty=Tensor[(9, 3, 15), float32] */;
    %1414 = cast(%var_3920, dtype="uint8") /* ty=Tensor[(378), uint8] */;
    %1415 = cast(%var_3921, dtype="int32") /* ty=Tensor[(60), int32] */;
    %1416 = reshape(%1414, newshape=[3, 9, 14]) /* ty=Tensor[(3, 9, 14), uint8] */;
    %1417 = reshape(%1415, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), int32] */;
    %1418 = @func_206(%1416, %1417) /* ty=(Tensor[(60), int32], Tensor[(3, 2, 10), bool], Tensor[(3, 2, 10), int32], Tensor[(3, 9, 14), float64], Tensor[(3, 2, 10), int32]) */;
    %1419 = erf(%1413) /* ty=Tensor[(9, 3, 15), float32] */;
    %1420 = %1418.0;
    (%1419, %1420, %var_3920, %var_3921)
  };
  %1421(%var_3924, %var_3925, %var_3926) /* ty=(Tensor[(9, 3, 15), float32], Tensor[(60), int32], Tensor[(378), uint8], Tensor[(60), int32]) */
}

def @func_10848() -> (Tensor[(6, 12, 2), int32],) {
  @func_10846() /* ty=(Tensor[(6, 12, 2), int32],) */
}

def @func_10999() -> Tensor[(6, 12, 2), int32] {
  @func_10997() /* ty=Tensor[(6, 12, 2), int32] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen628/build/output.py:3436: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen628/build/output.py", line 3441, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(420) tvmgen_default_fused_reshape_add_kernel0(uchar* __restrict__ T_add, uchar* __restrict__ placeholder, uchar* __restrict__ placeholder1) {
  T_add[(((int)threadIdx.x))] = (placeholder[(((int)threadIdx.x))] + placeholder1[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


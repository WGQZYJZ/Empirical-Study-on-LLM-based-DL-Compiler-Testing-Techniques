import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_12 = relay.var("var_12", dtype = "float32", shape = (3, 16, 2))#candidate|12|(3, 16, 2)|var|float32
uop_13 = relay.log10(var_12.astype('float32')) # shape=(3, 16, 2)
uop_30 = relay.log2(uop_13.astype('float32')) # shape=(3, 16, 2)
output = relay.Tuple([uop_30,])
output2 = relay.Tuple([uop_30,])
func_47 = relay.Function([var_12,], output)
mod['func_47'] = func_47
mod = relay.transform.InferType()(mod)
var_48 = relay.var("var_48", dtype = "float32", shape = (3, 16, 2))#candidate|48|(3, 16, 2)|var|float32
output = func_47(var_48)
func_49 = relay.Function([var_48], output)
mutated_mod['func_49'] = func_49
mutated_mod = relay.transform.InferType()(mutated_mod)
var_340 = relay.var("var_340", dtype = "int8", shape = (8, 8, 8))#candidate|340|(8, 8, 8)|var|int8
var_341 = relay.var("var_341", dtype = "int8", shape = (8, 8, 8))#candidate|341|(8, 8, 8)|var|int8
bop_342 = relay.subtract(var_340.astype('int8'), relay.reshape(var_341.astype('int8'), relay.shape_of(var_340))) # shape=(8, 8, 8)
output = bop_342
output2 = bop_342
func_352 = relay.Function([var_340,var_341,], output)
mod['func_352'] = func_352
mod = relay.transform.InferType()(mod)
mutated_mod['func_352'] = func_352
mutated_mod = relay.transform.InferType()(mutated_mod)
func_352_call = mutated_mod.get_global_var('func_352')
var_354 = relay.var("var_354", dtype = "int8", shape = (8, 8, 8))#candidate|354|(8, 8, 8)|var|int8
var_355 = relay.var("var_355", dtype = "int8", shape = (8, 8, 8))#candidate|355|(8, 8, 8)|var|int8
call_353 = func_352_call(var_354,var_355,)
output = call_353
func_356 = relay.Function([var_354,var_355,], output)
mutated_mod['func_356'] = func_356
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1332 = relay.var("var_1332", dtype = "float32", shape = (16, 4, 12))#candidate|1332|(16, 4, 12)|var|float32
uop_1333 = relay.sin(var_1332.astype('float32')) # shape=(16, 4, 12)
uop_1340 = relay.sinh(uop_1333.astype('float32')) # shape=(16, 4, 12)
bop_1359 = relay.add(uop_1333.astype('float64'), relay.reshape(var_1332.astype('float64'), relay.shape_of(uop_1333))) # shape=(16, 4, 12)
func_352_call = mod.get_global_var('func_352')
func_356_call = mutated_mod.get_global_var('func_356')
const_1371 = relay.const([-4,9,5,-7,-9,-8,5,10,-5,10,-4,8,7,-1,-10,-1,3,8,-4,-8,-7,10,8,-9,-8,2,8,-9,-2,4,-1,8,6,4,10,-3,-8,1,2,7,-7,-5,-9,-3,-3,4,-1,7,-8,-7,3,-7,4,5,10,-7,-10,-3,5,9,3,1,8,1,-1,6,10,-4,-3,-10,2,-9,10,-1,-10,-4,-8,6,4,-3,8,8,-3,4,-3,1,6,10,-4,10,3,-4,8,8,9,-7,-1,9,-7,-1,1,-8,2,10,8,9,-5,-4,-4,7,6,-4,-8,2,-8,-8,7,-4,3,-6,-8,-4,-7,-6,-3,-6,-6,5,-3,-1,-9,8,4,-4,7,-10,4,-8,2,-4,8,3,10,9,-4,4,9,1,5,-4,5,9,-6,2,4,3,6,7,-6,1,7,3,-7,-3,10,-7,9,-6,-5,-5,4,3,5,-6,-6,-1,2,3,10,6,-1,-7,-10,-5,3,6,-7,-7,-6,-5,2,9,10,7,-6,-2,-7,7,-3,-2,4,6,-6,-8,-8,7,7,-7,-6,10,7,-10,10,2,2,2,4,1,-2,2,-10,-1,-5,-7,-3,6,9,-6,3,-4,4,3,3,5,3,-5,-8,-3,7,5,-6,-1,7,6,5,-5,4,-4,3,4,9,-2,-8,-10,-4,-4,-8,-7,-10,2,-1,-4,-6,3,10,-9,9,-5,-4,-1,-2,9,9,2,9,9,-3,-6,-1,-2,6,-9,-1,-1,1,-3,8,4,10,-1,2,-10,10,5,6,-2,7,7,-8,-2,2,-6,9,-10,-6,9,-10,2,-6,-3,2,-5,9,-8,-2,-9,-6,-7,-3,-6,-9,-6,8,10,2,-8,-1,5,7,-8,-4,7,4,-6,2,-7,-1,-9,8,2,-3,8,5,3,-7,-3,1,-10,6,1,10,-9,10,9,-9,10,3,-5,1,10,-2,8,5,-8,6,10,-9,8,-9,7,-9,-10,-7,1,-7,-6,4,-2,-2,1,-2,-7,-10,-10,3,6,6,-4,-3,9,-6,8,-10,10,-1,-1,3,-5,4,-3,1,-1,-5,10,-10,7,5,-5,-6,-7,9,1,8,7,9,1,1,-9,-6,6,9,1,9,-8,-2,-3,7,-3,9,-8,-1,-10,-8,-9,-9,10,8,-3,7,1,10,-10,-5,-1,4,5,-6,-8,-6,-9,-1,5,10,4,1,7,-9,-6,2,1,7,-3,-10,9,7,-3,9,-8,5,-6,-9,-8,10,5,3,9,-1,-3,3,-9,2,-1,-9,9,10,2,8,10,-6,-1,-10,-9,3,5,5,-8,-7,7,-5,2,2,9,-4,10,-3,-8,-1,7,10,10,8,-2], dtype = "int8")#candidate|1371|(512,)|const|int8
call_1370 = func_352_call(relay.reshape(const_1371.astype('int8'), [8, 8, 8]), relay.reshape(const_1371.astype('int8'), [8, 8, 8]), )
call_1372 = func_352_call(relay.reshape(const_1371.astype('int8'), [8, 8, 8]), relay.reshape(const_1371.astype('int8'), [8, 8, 8]), )
const_1375 = relay.const([[[-4.174695,-9.971778,2.053659,-8.694785,-0.404878,3.295901,8.263164,-1.120358,-4.352577,6.732087,0.068623,-8.518603],[-4.356323,-9.764586,-4.878879,3.752606,-1.659634,9.587534,-0.307629,-1.720059,3.496042,-2.614222,4.638108,-3.695462],[6.177455,7.429580,-1.836247,4.898986,-3.565738,0.946426,8.549667,5.434251,-0.332391,-1.188165,0.922993,9.299122],[-9.372633,0.730506,7.764162,5.092382,-7.111588,1.050244,-3.984464,0.808854,-4.376253,7.250645,4.954469,8.598138]],[[-6.171558,-7.288634,2.424409,-4.616859,-1.218894,9.113773,-0.303730,-0.829780,6.464964,5.018592,-2.007991,-5.551686],[3.920998,5.183899,7.415286,2.803701,-5.864170,5.191895,8.281413,1.736094,1.857636,0.179401,7.703272,-4.121350],[2.314014,0.236969,-8.426259,-6.534097,3.921513,-8.512062,7.324681,-3.182251,-2.925793,4.983531,-2.074268,7.680446],[2.289724,2.363058,-3.553015,0.670304,5.234689,-6.975661,6.217249,-9.663565,-8.557773,0.616130,-4.355379,0.097523]],[[6.457959,-4.109950,2.268870,8.150150,1.440856,9.743346,7.468070,2.408761,0.787182,-7.589774,6.702956,-3.233632],[-7.619548,5.082050,8.887037,3.820988,1.592806,-8.187446,9.201341,6.008213,-7.755426,-2.403101,9.050951,3.755152],[5.060840,6.130218,-3.117878,-5.396440,7.586291,3.280441,-0.747945,2.581365,-2.961783,-1.643887,-7.170025,-1.239804],[6.124800,-0.110481,3.718010,6.258269,0.194830,1.886173,-5.675038,-8.287215,5.568859,9.660882,-6.085914,7.493145]],[[-0.942794,-7.391548,8.430501,-0.073492,-1.781509,3.222874,-3.671804,-4.094674,-7.368478,6.173306,-2.689066,-5.339432],[6.403021,8.688091,9.728245,-4.219695,6.031186,-9.486750,-1.892586,3.456429,2.139415,-8.780468,4.951315,5.137918],[-3.069632,0.592818,1.788613,-9.198178,1.425053,-2.804190,-2.101717,-9.600179,-6.601297,-4.013577,6.086269,8.657578],[-8.450998,-9.779046,-9.503421,8.629068,-9.155496,4.081454,0.825589,-2.212724,-3.639060,4.478998,-9.894035,-1.555298]],[[-7.149841,3.138792,-4.289480,-2.407067,-9.860030,-4.325373,-5.441732,6.455075,-0.908997,-9.198903,-7.885473,-6.861830],[-9.063278,3.151008,-5.589924,3.951479,-8.356205,-2.652163,5.252220,6.776544,-8.020854,-3.268925,-5.137853,2.346689],[6.736843,-1.266569,6.963500,-4.978673,-2.621704,-0.552258,0.954952,4.187448,-8.458338,-5.721413,-2.944477,3.190916],[1.209332,1.966067,8.074592,5.169138,9.626739,-1.274089,-1.366619,-5.768671,-8.663165,5.973238,-3.259547,4.094600]],[[5.408068,-7.328693,9.987156,-1.599406,9.921193,-6.560181,-9.399956,0.934214,3.059088,-1.883268,-2.811149,-2.739806],[0.051286,-6.150686,-9.791097,-9.735499,9.390477,1.066783,-2.168108,-0.129885,-1.124835,-9.399485,-6.111683,-4.403389],[1.547885,5.141592,7.753455,-6.443849,-6.488197,-6.251558,-6.439278,-2.997039,5.938265,2.068847,6.727267,2.121472],[-4.515126,-1.835025,-2.802784,1.147234,-7.574946,0.137174,-4.126987,-7.850754,4.991004,-1.303398,-3.336596,5.267895]],[[-0.655820,4.882548,-0.583914,5.244480,1.526399,5.253562,-9.473296,6.706339,-0.779818,-2.437396,6.469523,5.630133],[3.712443,-1.366266,-0.487981,9.919088,-3.201858,-1.831030,-9.873971,-1.127970,9.666256,5.176645,-6.681653,-6.068846],[0.995551,5.490366,-0.135977,1.442550,-9.967242,8.818859,-8.636967,-9.747703,9.764056,9.071876,-8.228739,9.985247],[-5.190525,-6.380619,-8.447407,6.095827,6.987393,-2.527088,4.729408,-6.456346,1.427992,-2.596139,-2.759559,9.910960]],[[0.750184,5.014195,-1.176704,7.926050,5.110962,5.597412,2.150656,-1.374123,7.577639,-6.184800,-6.951074,1.762663],[-6.422144,2.795493,-6.242525,-1.898838,-1.534927,6.796041,5.626556,1.785965,-0.143689,-7.038886,8.151817,8.548833],[2.450332,9.123647,-7.483170,6.600159,-1.880400,1.732268,2.346645,-4.863168,-2.751042,-3.967245,-0.156635,-1.956810],[-8.248384,-5.278101,1.435890,8.780297,0.824410,8.036240,5.675858,-4.724994,7.782837,-4.106420,-9.790722,-8.331765]],[[-7.947611,-2.893594,-6.481479,-7.402669,3.518387,-0.385062,-6.211964,2.781128,-2.910520,4.643852,3.710017,6.831471],[8.390443,-4.090433,-2.617107,-0.476686,0.821923,-8.370711,-4.641969,1.687806,0.693355,-9.539222,9.165099,-9.653369],[-5.922853,3.556187,8.552223,4.952853,-8.955226,-0.201297,-6.477799,3.604904,9.692944,-5.975100,-7.390450,7.821422],[1.351412,5.149860,1.573058,0.119120,5.234328,-3.137865,9.526063,-0.084597,0.065647,6.177265,2.797250,1.063122]],[[-6.995089,-2.991632,7.967165,-0.222268,-2.250648,1.284662,1.718450,4.557899,6.016817,-9.084115,2.964582,-7.352341],[1.211466,0.897996,0.120447,-8.238725,-7.606352,-3.611461,-2.208187,-7.268460,8.513129,9.337730,-0.209914,4.200887],[-4.347625,4.787335,-0.674366,-6.640666,4.879616,6.988582,-4.542567,-3.651718,-9.644695,8.265959,2.839839,9.549941],[1.424294,-9.195897,-4.893348,-3.922561,2.981118,-1.644417,1.418159,8.399268,-9.311014,4.240757,-2.323797,5.227190]],[[5.971999,-2.054503,9.676821,3.407612,-6.386129,-3.716708,1.661453,4.308635,-8.920089,7.107199,-4.536664,-4.788902],[8.016705,4.955922,1.235794,-9.046788,9.345676,-2.032790,2.088843,-3.488562,6.076218,-7.511246,3.165148,0.100916],[3.647935,1.228045,0.625954,3.829121,-5.690229,0.622793,0.362132,-7.798947,-1.320604,4.918933,-6.353387,8.039059],[6.934668,-5.481570,1.559722,-2.465997,-5.361981,-5.730866,-9.217011,-6.758656,-8.194163,-6.057534,-1.551134,2.453809]],[[9.701846,-4.729405,-9.630601,1.656379,7.303968,-7.941898,8.086062,5.873596,-8.072476,-4.552052,1.257977,6.241490],[-0.440881,-9.786765,-2.313957,3.356360,-0.650220,3.627608,3.024555,-4.707062,1.980603,4.775505,-1.664107,-5.036288],[-9.225817,5.566147,-2.568409,4.278203,-0.854026,8.139236,5.351147,7.707572,-6.395741,-8.644967,1.961952,-4.059737],[5.880502,-5.983760,-0.258451,4.783609,5.137626,4.681032,6.792530,-6.102198,-1.618711,6.506695,-3.342753,3.691694]],[[9.717436,-5.698119,4.885212,0.841060,-5.610896,-5.023390,8.216764,4.821721,-5.683506,-8.553699,3.065310,2.633953],[-2.228668,-7.576469,4.904859,4.004431,7.116750,-5.031382,-0.270235,-1.158595,2.327269,4.217751,-4.812376,0.977392],[3.469283,-7.345210,-1.598978,-8.443002,-3.681270,5.884641,5.734747,4.898678,-0.519201,7.403324,3.203946,5.903657],[-6.170504,7.979467,6.679744,0.519306,-9.436915,5.782055,3.528481,0.729802,-1.750209,-3.290784,2.102129,6.259656]],[[0.428597,-2.432925,-5.275832,1.916924,3.259952,5.309064,8.759153,1.974947,-5.688153,-2.613553,8.749904,-1.141365],[-7.694482,8.894903,-7.512009,4.308633,9.856143,-2.366159,6.608335,-1.308512,4.810587,4.536003,-9.195842,-5.547849],[5.088345,-5.923632,4.267927,2.030968,2.891469,4.337397,8.331977,4.470879,5.081408,-3.398435,6.000653,6.533376],[-3.757106,5.981036,4.390774,7.288341,-5.863913,7.154254,-8.515359,6.939921,9.424069,5.413176,9.279655,7.355966]],[[2.463691,9.873744,-8.059356,2.482527,0.827457,0.858593,-2.200050,-9.122412,6.163734,-2.449456,-8.220423,6.610952],[3.482721,-2.818023,-1.670348,1.631371,9.708858,-6.951743,3.689778,-5.301113,3.370801,6.214166,-3.601410,-9.452525],[-0.928148,-1.118001,9.310944,-3.351952,-3.021396,2.827409,5.651401,-8.906626,-0.127187,-7.937332,-0.838177,-2.898973],[5.274173,-1.363546,0.286920,1.424616,3.577214,-3.778097,7.237103,9.206930,7.368865,-1.114019,7.950070,6.006280]],[[-7.313164,6.172996,-5.111353,-1.295957,-9.810270,-4.089805,7.394456,8.537703,2.106307,6.380851,-9.522518,-0.333490],[-4.672705,-2.827054,-2.704342,4.389128,-3.548189,7.576719,-7.948462,-4.869784,-9.899213,7.385766,-4.551084,8.224899],[-0.874445,-3.815281,1.748352,4.125546,-9.661340,-0.695638,6.467934,2.738243,-0.439944,3.523110,-5.146702,8.720716],[-8.414299,-0.109245,6.461011,-2.582005,6.719472,7.067987,6.766243,-3.979924,-3.351458,-4.544992,-8.581588,3.511309]]], dtype = "float32")#candidate|1375|(16, 4, 12)|const|float32
bop_1376 = relay.logical_and(uop_1340.astype('bool'), relay.reshape(const_1375.astype('bool'), relay.shape_of(uop_1340))) # shape=(16, 4, 12)
output = relay.Tuple([bop_1359,call_1370,const_1371,bop_1376,])
output2 = relay.Tuple([bop_1359,call_1372,const_1371,bop_1376,])
func_1383 = relay.Function([var_1332,], output)
mod['func_1383'] = func_1383
mod = relay.transform.InferType()(mod)
var_1384 = relay.var("var_1384", dtype = "float32", shape = (16, 4, 12))#candidate|1384|(16, 4, 12)|var|float32
output = func_1383(var_1384)
func_1385 = relay.Function([var_1384], output)
mutated_mod['func_1385'] = func_1385
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1765 = relay.var("var_1765", dtype = "float32", shape = (9, 16, 11))#candidate|1765|(9, 16, 11)|var|float32
uop_1766 = relay.asinh(var_1765.astype('float32')) # shape=(9, 16, 11)
func_1383_call = mod.get_global_var('func_1383')
func_1385_call = mutated_mod.get_global_var('func_1385')
var_1770 = relay.var("var_1770", dtype = "float32", shape = (768,))#candidate|1770|(768,)|var|float32
call_1769 = relay.TupleGetItem(func_1383_call(relay.reshape(var_1770.astype('float32'), [16, 4, 12])), 0)
call_1771 = relay.TupleGetItem(func_1385_call(relay.reshape(var_1770.astype('float32'), [16, 4, 12])), 0)
uop_1800 = relay.atanh(uop_1766.astype('float32')) # shape=(9, 16, 11)
func_352_call = mod.get_global_var('func_352')
func_356_call = mutated_mod.get_global_var('func_356')
const_1803 = relay.const([[3,-9,9,9,2,10,-2,-6],[-7,7,-4,8,8,-10,6,-10],[-9,9,1,-3,-5,-8,3,1],[-6,3,-1,-10,5,-9,1,1],[-6,-7,-8,3,-5,-10,5,-8],[2,-1,-2,-9,2,-7,-7,2],[-9,-4,3,-10,-8,-7,-2,4],[-6,-4,-5,-7,-4,1,-5,7],[-3,-2,-8,-5,1,-1,-6,-4],[9,3,4,10,-8,-9,5,-10],[-9,-5,3,5,-1,-8,1,-9],[1,-4,-6,4,7,-1,-1,1],[1,7,5,1,-8,2,10,-8],[7,-7,8,9,5,8,-10,6],[-4,-9,-4,-8,7,10,3,-8],[3,5,9,7,-3,1,-5,-7],[9,1,-4,4,8,1,-5,2],[-6,-9,1,8,2,-9,6,5],[4,9,-2,-1,10,-2,1,-2],[10,-2,7,7,9,6,6,1],[7,9,-6,2,2,-10,9,-10],[1,-2,-1,-8,8,8,-5,-3],[-10,4,3,-1,-1,8,2,6],[1,2,8,-6,5,-8,4,3],[-4,-1,4,-9,-2,-2,8,-8],[8,3,-3,10,-3,-8,-2,3],[7,-10,-6,3,-10,2,5,-7],[1,6,-8,-2,9,-2,-1,6],[8,9,8,4,9,4,-8,-4],[10,5,-10,-1,-6,-1,-7,-5],[6,-9,-7,2,10,9,-6,1],[7,-4,-4,8,-9,9,8,10],[-9,8,-3,4,-6,-3,8,-6],[9,-3,-6,-3,2,10,-5,3],[3,-1,-2,2,-8,8,-9,10],[-6,-3,4,9,7,5,4,-7],[9,-3,-3,-9,-2,-6,5,10],[-10,6,-8,-9,6,10,-4,-7],[7,4,-5,-2,3,-7,-5,-10],[10,9,2,-5,-4,8,-4,-10],[7,10,10,10,-9,2,5,-8],[-7,-5,9,-7,4,2,2,-8],[8,2,9,3,-10,3,4,-10],[-10,-2,-4,-1,-6,-8,-7,-9],[6,2,3,5,-10,-9,-2,7],[-6,1,8,2,-7,4,9,-8],[5,2,7,3,8,4,-5,-3],[2,2,-8,-5,7,10,1,2],[-1,-5,-2,8,2,-1,4,9],[8,7,-8,-2,2,-2,3,10],[-8,2,5,1,1,4,6,1],[-5,-9,-1,-9,-4,-5,-6,-10],[-9,-8,2,2,3,-1,1,2],[-10,-2,-1,-1,3,3,10,8],[6,6,7,-3,7,-9,6,6],[-2,7,9,-10,4,6,7,-7],[-9,-10,4,7,7,-10,1,9],[6,9,-3,-10,4,-5,9,1],[7,-6,-5,2,1,5,2,5],[1,5,-5,-5,2,-10,-3,1],[-2,-3,-10,-1,1,-4,1,10],[5,7,2,-9,-3,-5,9,8],[-3,-2,-8,-5,-8,-1,-8,2],[6,-3,3,-3,2,3,-4,-5]], dtype = "int8")#candidate|1803|(64, 8)|const|int8
call_1802 = func_352_call(relay.reshape(const_1803.astype('int8'), [8, 8, 8]), relay.reshape(const_1803.astype('int8'), [8, 8, 8]), )
call_1804 = func_352_call(relay.reshape(const_1803.astype('int8'), [8, 8, 8]), relay.reshape(const_1803.astype('int8'), [8, 8, 8]), )
func_352_call = mod.get_global_var('func_352')
func_356_call = mutated_mod.get_global_var('func_356')
call_1811 = func_352_call(relay.reshape(call_1802.astype('int8'), [8, 8, 8]), relay.reshape(call_1802.astype('int8'), [8, 8, 8]), )
call_1812 = func_352_call(relay.reshape(call_1802.astype('int8'), [8, 8, 8]), relay.reshape(call_1802.astype('int8'), [8, 8, 8]), )
bop_1834 = relay.floor_mod(uop_1766.astype('float32'), relay.reshape(var_1765.astype('float32'), relay.shape_of(uop_1766))) # shape=(9, 16, 11)
output = relay.Tuple([call_1769,var_1770,uop_1800,call_1802,const_1803,call_1811,bop_1834,])
output2 = relay.Tuple([call_1771,var_1770,uop_1800,call_1804,const_1803,call_1812,bop_1834,])
func_1837 = relay.Function([var_1765,var_1770,], output)
mod['func_1837'] = func_1837
mod = relay.transform.InferType()(mod)
var_1838 = relay.var("var_1838", dtype = "float32", shape = (9, 16, 11))#candidate|1838|(9, 16, 11)|var|float32
var_1839 = relay.var("var_1839", dtype = "float32", shape = (768,))#candidate|1839|(768,)|var|float32
output = func_1837(var_1838,var_1839,)
func_1840 = relay.Function([var_1838,var_1839,], output)
mutated_mod['func_1840'] = func_1840
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1887 = relay.var("var_1887", dtype = "float32", shape = (9, 5, 6))#candidate|1887|(9, 5, 6)|var|float32
uop_1888 = relay.atan(var_1887.astype('float32')) # shape=(9, 5, 6)
func_352_call = mod.get_global_var('func_352')
func_356_call = mutated_mod.get_global_var('func_356')
var_1898 = relay.var("var_1898", dtype = "int8", shape = (512,))#candidate|1898|(512,)|var|int8
call_1897 = func_352_call(relay.reshape(var_1898.astype('int8'), [8, 8, 8]), relay.reshape(var_1898.astype('int8'), [8, 8, 8]), )
call_1899 = func_352_call(relay.reshape(var_1898.astype('int8'), [8, 8, 8]), relay.reshape(var_1898.astype('int8'), [8, 8, 8]), )
func_47_call = mod.get_global_var('func_47')
func_49_call = mutated_mod.get_global_var('func_49')
const_1901 = relay.const([[5.890011,9.059464,0.568201,-1.464525,0.526661,5.791567],[8.659774,-3.723525,-8.417597,7.478379,-2.510487,8.301233],[-5.575078,9.311458,-0.102152,8.367969,-1.224415,-8.776322],[-4.912739,-3.973416,7.676349,0.364954,-8.124049,3.770899],[9.808318,-5.370036,-0.728305,7.162487,-2.595847,0.473821],[5.603579,-9.009348,9.187585,5.706859,4.407702,6.436468],[-0.521151,-5.954209,-1.914659,7.343418,-3.643227,-4.947751],[-7.675527,-1.470027,-7.303973,6.069052,-8.727056,7.283766],[5.138711,4.691599,4.912742,6.329346,0.621607,-5.552119],[-9.583910,-5.641497,2.614818,7.761357,-4.873172,-6.695159],[4.628859,-9.825896,2.362842,8.051342,1.870608,7.195217],[-9.194145,-8.668029,-4.113805,1.321112,-2.653236,-6.957745],[-1.671053,2.084042,6.298575,5.724068,-7.569715,-0.486208],[-6.239912,-8.075401,-7.997518,-9.163515,-3.148323,-5.070460],[9.831931,3.549921,2.535831,9.324116,6.198413,0.785427],[-5.260201,5.299477,-5.355676,-5.891046,-0.099073,-4.131470]], dtype = "float32")#candidate|1901|(16, 6)|const|float32
call_1900 = relay.TupleGetItem(func_47_call(relay.reshape(const_1901.astype('float32'), [3, 16, 2])), 0)
call_1902 = relay.TupleGetItem(func_49_call(relay.reshape(const_1901.astype('float32'), [3, 16, 2])), 0)
uop_1910 = relay.exp(uop_1888.astype('float64')) # shape=(9, 5, 6)
output = relay.Tuple([call_1897,var_1898,call_1900,const_1901,uop_1910,])
output2 = relay.Tuple([call_1899,var_1898,call_1902,const_1901,uop_1910,])
func_1923 = relay.Function([var_1887,var_1898,], output)
mod['func_1923'] = func_1923
mod = relay.transform.InferType()(mod)
mutated_mod['func_1923'] = func_1923
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1923_call = mutated_mod.get_global_var('func_1923')
var_1925 = relay.var("var_1925", dtype = "float32", shape = (9, 5, 6))#candidate|1925|(9, 5, 6)|var|float32
var_1926 = relay.var("var_1926", dtype = "int8", shape = (512,))#candidate|1926|(512,)|var|int8
call_1924 = func_1923_call(var_1925,var_1926,)
output = call_1924
func_1927 = relay.Function([var_1925,var_1926,], output)
mutated_mod['func_1927'] = func_1927
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1970 = relay.var("var_1970", dtype = "float32", shape = (4, 9, 9))#candidate|1970|(4, 9, 9)|var|float32
var_1971 = relay.var("var_1971", dtype = "float32", shape = (4, 9, 9))#candidate|1971|(4, 9, 9)|var|float32
bop_1972 = relay.subtract(var_1970.astype('float32'), relay.reshape(var_1971.astype('float32'), relay.shape_of(var_1970))) # shape=(4, 9, 9)
output = relay.Tuple([bop_1972,])
output2 = relay.Tuple([bop_1972,])
func_1978 = relay.Function([var_1970,var_1971,], output)
mod['func_1978'] = func_1978
mod = relay.transform.InferType()(mod)
var_1979 = relay.var("var_1979", dtype = "float32", shape = (4, 9, 9))#candidate|1979|(4, 9, 9)|var|float32
var_1980 = relay.var("var_1980", dtype = "float32", shape = (4, 9, 9))#candidate|1980|(4, 9, 9)|var|float32
output = func_1978(var_1979,var_1980,)
func_1981 = relay.Function([var_1979,var_1980,], output)
mutated_mod['func_1981'] = func_1981
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2386 = relay.const([[[-8.423917,8.837771,9.935429],[-8.688981,-3.564036,-1.226447]],[[2.140076,-3.354198,1.086309],[8.197775,-1.088158,8.158985]],[[-7.886049,5.841047,-9.843838],[3.903759,-3.904036,4.002105]],[[-8.424870,-9.580876,-4.525716],[-2.598369,-5.479536,4.795309]],[[4.364276,-8.672903,9.816158],[2.458268,9.337363,2.311312]],[[5.729029,2.692508,-6.692366],[8.674959,-2.137423,9.787964]],[[-2.377970,-6.842522,-9.020499],[-9.691455,4.403274,7.283232]],[[-9.173737,-2.811532,9.557840],[-8.668001,-5.629923,-3.348740]],[[-6.699419,1.529368,5.122135],[-2.286692,-8.907263,-5.194503]],[[-1.205229,7.581379,1.601116],[-9.110976,7.308492,-6.175211]],[[8.611919,1.236887,-8.022853],[-7.212354,3.472579,7.051369]],[[-6.986673,3.384553,-4.334036],[2.561286,-2.600640,-4.200594]],[[-8.024919,-9.429178,9.047172],[-3.334552,7.241150,5.304040]],[[-1.852709,-4.089350,6.622527],[-5.405380,0.725946,9.217530]]], dtype = "float64")#candidate|2386|(14, 2, 3)|const|float64
uop_2387 = relay.log(const_2386.astype('float64')) # shape=(14, 2, 3)
func_1978_call = mod.get_global_var('func_1978')
func_1981_call = mutated_mod.get_global_var('func_1981')
var_2396 = relay.var("var_2396", dtype = "float32", shape = (324,))#candidate|2396|(324,)|var|float32
call_2395 = relay.TupleGetItem(func_1978_call(relay.reshape(var_2396.astype('float32'), [4, 9, 9]), relay.reshape(var_2396.astype('float32'), [4, 9, 9]), ), 0)
call_2397 = relay.TupleGetItem(func_1981_call(relay.reshape(var_2396.astype('float32'), [4, 9, 9]), relay.reshape(var_2396.astype('float32'), [4, 9, 9]), ), 0)
func_47_call = mod.get_global_var('func_47')
func_49_call = mutated_mod.get_global_var('func_49')
const_2408 = relay.const([-8.166345,-7.829575,5.012352,-0.577441,2.280139,1.484688,2.910701,3.337603,5.374270,-9.719174,7.052065,-3.159153,1.051615,1.076386,-2.486568,6.939276,0.150999,-6.296981,6.535522,4.988053,-6.515965,6.936890,6.467382,-2.822084,8.088096,-3.514051,9.235716,8.249500,-3.619690,7.357335,3.036876,9.629848,5.661811,1.039401,-8.754268,5.302692,7.357380,-0.976905,7.974341,8.304661,-0.305631,0.534914,-6.932155,-5.250442,6.117596,-3.972358,-8.576825,8.738818,5.112195,-8.636934,0.106378,-9.210163,2.715855,-1.229222,4.184657,3.707808,4.561184,2.168025,-7.846320,-6.512630,7.812419,-7.434473,-6.100671,7.816171,1.342767,8.729774,3.075263,8.388849,3.426761,3.072932,-5.457941,-5.387418,2.060314,7.801703,0.557661,3.462485,-0.550593,5.680541,-1.981253,-2.453964,-9.156599,-1.983039,8.114032,-7.949274,7.921815,6.132000,4.338868,3.292232,6.349857,-1.096748,-1.759593,-7.361699,4.252555,2.469144,-2.987940,6.425708], dtype = "float32")#candidate|2408|(96,)|const|float32
call_2407 = relay.TupleGetItem(func_47_call(relay.reshape(const_2408.astype('float32'), [3, 16, 2])), 0)
call_2409 = relay.TupleGetItem(func_49_call(relay.reshape(const_2408.astype('float32'), [3, 16, 2])), 0)
output = relay.Tuple([uop_2387,call_2395,var_2396,call_2407,const_2408,])
output2 = relay.Tuple([uop_2387,call_2397,var_2396,call_2409,const_2408,])
func_2412 = relay.Function([var_2396,], output)
mod['func_2412'] = func_2412
mod = relay.transform.InferType()(mod)
mutated_mod['func_2412'] = func_2412
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2413 = relay.var("var_2413", dtype = "float32", shape = (324,))#candidate|2413|(324,)|var|float32
func_2412_call = mutated_mod.get_global_var('func_2412')
call_2414 = func_2412_call(var_2413)
output = call_2414
func_2415 = relay.Function([var_2413], output)
mutated_mod['func_2415'] = func_2415
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2464 = relay.var("var_2464", dtype = "uint16", shape = ())#candidate|2464|()|var|uint16
const_2465 = relay.const([[-8,-9,-2,9,-8,4,1,-10,-5]], dtype = "uint16")#candidate|2465|(1, 9)|const|uint16
bop_2466 = relay.logical_xor(var_2464.astype('uint16'), const_2465.astype('uint16')) # shape=(1, 9)
output = relay.Tuple([bop_2466,])
output2 = relay.Tuple([bop_2466,])
func_2471 = relay.Function([var_2464,], output)
mod['func_2471'] = func_2471
mod = relay.transform.InferType()(mod)
mutated_mod['func_2471'] = func_2471
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2472 = relay.var("var_2472", dtype = "uint16", shape = ())#candidate|2472|()|var|uint16
func_2471_call = mutated_mod.get_global_var('func_2471')
call_2473 = func_2471_call(var_2472)
output = call_2473
func_2474 = relay.Function([var_2472], output)
mutated_mod['func_2474'] = func_2474
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3038 = relay.const([[[7,-2,-1,-3,10,10,-2,5,6,-7,-2,5],[-1,10,3,5,8,-8,-8,-4,4,4,-2,3],[8,-2,-3,2,6,-4,-3,-8,8,-4,6,3],[-9,-7,-5,1,-10,-6,2,7,-9,6,9,5],[-9,-6,-6,-8,-7,7,7,7,-5,-10,-10,-4]],[[7,-3,5,8,8,10,2,-8,-2,2,5,7],[-2,-4,6,-5,9,1,-7,-7,-2,6,4,4],[-9,5,6,3,-1,-2,6,-9,-5,-8,-9,7],[3,-5,7,2,4,1,1,9,10,8,1,10],[10,-10,4,-10,1,3,5,-8,-5,10,-1,-8]],[[2,-9,-5,-1,-9,-6,10,-2,-1,1,-10,-4],[5,1,-3,-1,6,10,-8,-8,3,4,10,-4],[-10,-5,-3,-5,3,8,-4,-10,8,-2,10,5],[-6,7,-4,-6,-6,-5,2,-7,6,10,4,-8],[2,1,4,7,7,-7,-5,-5,6,9,-8,2]],[[2,3,3,-8,-3,-9,7,8,-10,-4,8,5],[7,-1,-2,10,6,-10,7,8,-1,9,-2,1],[-2,8,-4,5,9,-8,-10,5,-4,-8,6,-2],[-2,-4,-10,8,-10,3,1,7,5,-3,6,4],[6,2,8,1,-5,-6,-2,6,-1,7,-8,-6]],[[-10,9,-8,7,-6,5,2,-8,1,-3,-8,-4],[-9,-3,-5,-1,7,-10,-6,-8,-5,8,9,6],[8,2,10,7,6,8,10,-6,-3,3,-1,-10],[3,6,4,1,-3,9,10,-5,-7,-8,4,5],[10,5,-8,10,4,1,-9,-1,-7,8,-6,4]],[[5,2,7,7,5,9,-8,3,4,-10,-8,5],[-1,5,-5,-3,-10,-2,-2,4,-2,9,1,-3],[-7,8,-6,-3,6,-4,-6,1,-2,4,-1,-9],[3,-2,9,-1,-10,4,-4,1,-6,10,4,9],[-4,9,-5,-8,-6,5,6,4,5,-2,-6,8]],[[9,-5,9,10,8,7,-8,2,-5,-1,-10,-9],[-4,3,-3,3,9,7,-3,9,6,5,-3,8],[-1,-9,6,8,-8,-2,-4,-2,-5,8,8,1],[5,10,10,-6,-8,6,4,4,6,10,2,-10],[-5,-7,8,-8,2,3,-7,7,-5,-9,-8,10]],[[10,-2,3,1,2,2,-6,7,10,3,10,-3],[4,3,-7,-4,2,-9,-9,5,-10,5,9,5],[-1,-7,10,-5,3,6,2,7,5,-9,8,-10],[-2,6,7,1,2,9,9,6,-6,2,-2,2],[-6,-4,6,7,-8,-7,4,3,7,8,7,-8]],[[6,-1,-10,6,3,-4,-3,-6,4,6,-3,-6],[10,-4,7,10,-3,-2,5,1,-9,8,8,2],[7,-9,-6,1,-8,3,-9,3,-5,9,4,-9],[-6,4,10,3,-6,10,-9,8,-7,7,3,10],[-4,9,8,10,4,8,-1,-1,-7,-9,-1,-6]],[[-5,6,2,7,4,3,-3,-8,6,-8,8,4],[-2,2,7,2,10,1,6,9,3,4,6,2],[7,-8,1,10,4,-9,-9,-4,-10,10,-2,-4],[10,10,9,7,4,-2,-9,10,-6,6,-9,4],[-7,3,-3,6,-6,-9,-10,4,-2,-1,-1,-4]],[[-8,-2,-3,6,1,9,8,-7,-6,1,5,-2],[-2,-7,1,-1,4,-6,10,-4,1,6,3,-4],[-2,-4,2,3,6,8,3,-8,3,-1,6,-3],[-3,6,4,4,7,-2,-4,5,-7,9,2,-5],[1,-7,3,4,1,-1,-2,-1,-3,-9,10,-10]]], dtype = "uint8")#candidate|3038|(11, 5, 12)|const|uint8
const_3039 = relay.const([[[-1,6,-2,9,8,3,-10,-9,-2,-3,-6,-2],[1,1,-10,-7,1,8,6,3,5,-1,6,-7],[-5,-7,-1,1,8,6,-8,7,-8,5,4,-8],[-5,7,-3,10,-5,10,3,-10,3,6,-8,-3],[10,4,7,7,3,1,-8,-3,-7,9,-4,10]],[[-4,1,3,-2,-3,9,8,-9,-9,6,-3,-8],[-4,10,-7,-5,1,5,-1,7,3,3,-1,2],[-5,5,9,-8,-4,1,3,4,-4,-5,6,-9],[7,2,-2,-10,-3,5,-10,-7,5,6,3,-1],[-9,-2,-10,7,2,-7,-4,-3,4,10,-3,10]],[[4,8,-8,-6,5,3,10,-3,9,-7,9,-1],[8,-6,-8,-2,2,2,9,6,-8,9,1,10],[-6,-5,7,-5,-7,7,-5,10,9,7,3,-1],[-4,-1,-6,7,8,-4,-7,-1,10,-2,8,-6],[5,4,9,-1,10,8,-10,8,6,-6,-3,-7]],[[-6,-1,10,-3,1,5,7,-10,5,-2,4,7],[-2,-3,10,9,9,-2,7,8,-5,5,8,-8],[5,1,10,9,9,-8,-4,-4,-8,3,-2,-1],[-3,-10,6,-5,-7,-10,4,-10,3,-1,6,-7],[-4,10,-3,-4,9,-9,-1,6,1,-7,-7,-8]],[[-7,-5,-8,9,-5,9,-10,-4,8,-4,8,-9],[5,-5,-4,-3,4,4,-2,-4,-10,5,-6,10],[4,3,3,-2,9,-5,10,2,5,6,8,4],[-10,9,10,10,-5,-8,6,-9,5,5,-1,9],[-4,-1,4,-2,6,10,3,10,2,8,-7,-2]],[[10,-10,-8,-7,6,7,-5,4,-4,-7,-6,-7],[-6,8,-2,8,10,5,8,10,-1,-4,8,8],[-4,-9,2,9,-8,3,-5,-2,-2,-3,-8,-4],[2,7,-6,1,10,10,-5,1,-4,-5,-9,6],[-3,-2,3,-2,-6,2,4,1,3,-7,10,2]],[[-4,7,-4,-5,-1,2,2,7,-2,9,-2,1],[4,6,8,2,-4,7,9,9,-8,-5,4,10],[3,-4,-4,4,5,-3,-5,6,1,1,5,3],[-8,8,2,-10,9,-2,10,-10,4,-9,8,2],[7,3,-3,7,-5,-5,-3,2,8,-3,-9,-5]],[[-6,-4,8,-6,-9,-10,5,6,-2,-5,-8,9],[10,-4,4,-2,4,9,-1,-10,3,-3,-7,10],[-3,-6,-3,-7,-6,-2,2,5,7,9,-8,-8],[-7,1,3,-5,6,5,8,-2,3,-7,5,1],[5,-2,9,3,-1,9,-8,10,8,3,9,10]],[[-9,-9,8,-8,9,5,-10,-3,-7,-4,-9,-6],[2,-10,-7,3,7,10,-3,10,8,10,-6,-6],[-9,7,-9,-4,-4,-1,5,5,-9,9,3,4],[5,-7,8,5,8,-7,4,-7,6,-9,6,-4],[1,5,-5,3,-2,2,-6,9,-10,10,-8,4]],[[6,8,9,7,7,2,-10,1,-7,-5,-1,-6],[3,-7,-2,-6,6,10,-5,-3,-8,2,2,-1],[-6,2,1,10,-2,4,8,2,-5,7,-9,2],[-7,-7,-8,10,7,3,9,-1,-10,7,-8,-2],[-1,-2,-1,-10,-9,-9,-7,4,10,1,1,-2]],[[-8,9,-8,-8,-9,-3,-7,1,10,-4,1,-1],[5,2,-4,7,3,-8,4,-4,-8,-3,8,10],[6,-6,-4,-7,7,-5,4,-2,5,-2,10,3],[-10,3,-2,9,1,-4,2,-1,3,-9,7,5],[-5,-2,2,-5,2,4,4,-2,9,-7,-9,10]]], dtype = "uint8")#candidate|3039|(11, 5, 12)|const|uint8
bop_3040 = relay.bitwise_xor(const_3038.astype('uint8'), relay.reshape(const_3039.astype('uint8'), relay.shape_of(const_3038))) # shape=(11, 5, 12)
func_2412_call = mod.get_global_var('func_2412')
func_2415_call = mutated_mod.get_global_var('func_2415')
const_3053 = relay.const([0.577982,8.707948,-5.989961,-4.759448,-8.794023,5.834795,4.743853,-6.677771,-0.536094,-1.550436,9.740946,9.505353,5.212690,-2.319550,-7.448485,5.523783,-9.663691,-2.833858,-1.085948,-1.193961,-0.610595,-2.878924,6.313012,7.669577,-8.563829,-6.180469,-2.985304,-5.512620,-8.339638,-9.110784,-4.305244,-6.817721,-6.146544,9.697962,-6.026145,-0.954129,2.997579,-1.455335,1.845500,-3.372009,5.479224,8.974236,-6.300139,6.112777,9.932529,-7.089889,4.420050,-0.054195,9.336028,0.211004,4.835001,-9.746902,-6.268325,4.920905,7.628883,8.629592,-0.181907,-3.613550,-1.362903,-5.798045,-3.512735,5.047491,3.901937,7.157231,7.703532,-4.945722,-3.393596,3.563910,-5.344400,-0.954776,8.157456,-9.539445,3.359078,-9.912167,3.119421,2.599701,9.917432,8.163161,-8.856849,-2.226911,1.134950,5.951619,0.145853,-1.657515,3.890563,3.088704,-1.056085,3.443869,1.077498,1.264966,-6.343107,-0.330488,5.346937,-2.549204,-5.350968,8.714990,-4.891615,-1.494001,-6.890653,8.597096,5.409914,-4.082374,-3.454652,4.032701,2.210905,-0.131647,3.225999,-9.555036,9.252212,6.018495,4.453783,1.433555,6.184939,6.282043,1.399769,0.863375,-0.212518,-1.803511,2.331108,-9.472809,6.280919,-9.189037,8.000059,6.225588,-3.638576,-6.210857,-0.162843,5.546462,4.293961,4.263034,9.935947,-9.744125,-2.373286,-6.701370,-1.288800,-7.444751,-9.571991,6.047267,0.625076,-4.794044,1.299426,7.281174,-3.109291,4.274858,-6.456056,-5.592559,0.214044,9.925984,-5.473328,-6.187150,-1.673478,-4.563719,4.724491,-4.822995,-2.024431,-7.744980,6.601518,6.789911,-7.543942,-1.984271,2.455518,-3.363664,4.279694,-5.464174,-3.001088,-0.749294,-2.593915,0.395193,-5.381942,-6.228259,-7.504498,-4.704866,4.133664,9.938597,-7.123201,-1.348475,4.810189,9.531908,-6.631014,-9.453149,-1.058496,0.970642,0.192522,-9.818982,-1.505909,-7.101822,-0.724319,-7.348220,2.561355,2.711735,6.579143,8.906639,6.400531,3.202418,9.783187,-6.315195,5.070032,-3.193782,-4.599724,-2.107437,7.252296,9.859647,-4.588924,1.909678,3.678723,8.689718,-4.741636,2.168922,9.622471,9.050058,-5.533756,-6.444865,7.529627,-8.121940,-1.694650,-6.295233,-2.586803,5.222249,-9.500194,-4.407317,5.305607,-2.958270,-0.380579,9.296528,1.144682,-3.041720,-3.475559,4.786230,8.657259,9.591224,-0.012563,-5.784944,2.909723,3.745485,-5.593058,-9.362200,-9.901862,-6.985615,-0.601422,-7.207624,-9.904452,-6.490066,-1.313386,8.476666,2.953729,4.547984,-0.990059,-9.719792,0.633454,9.874466,2.606595,8.374016,0.493584,4.161072,-7.372514,8.835603,-2.573310,7.559282,4.904523,6.389191,-1.546794,-6.138578,-3.631646,-4.723392,5.744767,1.141970,8.029903,-2.702466,-5.716507,3.913086,1.492998,-8.326037,-6.871376,-8.117566,-7.669454,-9.950539,-7.088164,1.355543,-2.672968,-6.187798,-7.815520,-2.177950,0.644002,-9.107753,-5.706638,-6.433927,-8.750116,-8.676699,-6.907002,-4.303151,-4.915055,8.229609,9.711647,6.287937,1.157649,9.106223,6.647730,9.937133,-2.107146,1.622893,5.196293,7.300270,-4.063866,-5.898430,-9.063025,8.215706,-7.023957,-4.999731,3.456625,7.313843,0.178522,-4.540937,-1.242328,1.254627,0.453706,-6.147643,-2.693350,-6.455883,0.120140,-3.803986,6.761558,-1.937158,-3.943013,-5.148257], dtype = "float32")#candidate|3053|(324,)|const|float32
call_3052 = relay.TupleGetItem(func_2412_call(relay.reshape(const_3053.astype('float32'), [324,])), 4)
call_3054 = relay.TupleGetItem(func_2415_call(relay.reshape(const_3053.astype('float32'), [324,])), 4)
func_1978_call = mod.get_global_var('func_1978')
func_1981_call = mutated_mod.get_global_var('func_1981')
call_3069 = relay.TupleGetItem(func_1978_call(relay.reshape(const_3053.astype('float32'), [4, 9, 9]), relay.reshape(const_3053.astype('float32'), [4, 9, 9]), ), 0)
call_3070 = relay.TupleGetItem(func_1981_call(relay.reshape(const_3053.astype('float32'), [4, 9, 9]), relay.reshape(const_3053.astype('float32'), [4, 9, 9]), ), 0)
func_1383_call = mod.get_global_var('func_1383')
func_1385_call = mutated_mod.get_global_var('func_1385')
var_3072 = relay.var("var_3072", dtype = "float32", shape = (768,))#candidate|3072|(768,)|var|float32
call_3071 = relay.TupleGetItem(func_1383_call(relay.reshape(var_3072.astype('float32'), [16, 4, 12])), 0)
call_3073 = relay.TupleGetItem(func_1385_call(relay.reshape(var_3072.astype('float32'), [16, 4, 12])), 0)
output = relay.Tuple([bop_3040,call_3052,const_3053,call_3069,call_3071,var_3072,])
output2 = relay.Tuple([bop_3040,call_3054,const_3053,call_3070,call_3073,var_3072,])
func_3083 = relay.Function([var_3072,], output)
mod['func_3083'] = func_3083
mod = relay.transform.InferType()(mod)
var_3084 = relay.var("var_3084", dtype = "float32", shape = (768,))#candidate|3084|(768,)|var|float32
output = func_3083(var_3084)
func_3085 = relay.Function([var_3084], output)
mutated_mod['func_3085'] = func_3085
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3095 = relay.var("var_3095", dtype = "float64", shape = (7, 12, 2))#candidate|3095|(7, 12, 2)|var|float64
uop_3096 = relay.exp(var_3095.astype('float64')) # shape=(7, 12, 2)
func_1383_call = mod.get_global_var('func_1383')
func_1385_call = mutated_mod.get_global_var('func_1385')
const_3126 = relay.const([-4.816741,0.290831,-9.855898,8.450157,-7.345500,4.033598,-7.935643,-9.725271,-5.151721,-8.347931,3.889894,-4.219477,1.698099,-0.786097,-1.120383,-3.141940,6.084846,-8.061462,-8.473783,-9.716701,-0.049091,-5.529759,5.363113,-5.477948,2.222740,-4.466717,0.868706,-5.588239,-2.311594,1.337842,0.868805,-6.154148,-1.461326,-5.730980,-5.211886,2.352573,-5.514015,4.074914,4.973478,4.810238,-1.487792,7.600266,6.865190,-5.209788,8.689217,-4.890325,-4.647245,9.323752,-0.040494,2.369913,-2.849896,0.287552,4.484769,-3.096763,-2.672246,2.786679,-4.195589,-1.191954,-0.022121,0.587298,0.564135,-6.724586,-0.888558,-9.254925,9.043771,8.924888,-6.193087,-0.398835,7.880444,-6.618373,1.297940,6.546054,0.892086,2.447309,-9.430855,8.875601,-7.992523,4.245130,2.356740,3.924470,-4.234369,-4.794073,-9.860613,-7.285649,3.276763,3.835448,-5.694905,-3.986996,5.040039,0.156273,1.349037,4.262979,-4.604669,-9.678684,-1.125242,-1.357811,7.033090,0.630629,0.135864,9.380869,1.086587,2.513906,6.349385,3.242210,7.699376,7.781627,3.554286,4.017326,5.238760,2.376108,6.790298,-8.074916,-0.695392,-8.603271,3.387807,-2.817224,9.633242,-3.953550,-2.840073,1.265732,-3.363554,-2.384898,3.515286,4.014921,5.951733,-6.946700,-5.750439,0.043714,-5.226279,1.181336,-4.513022,-2.068328,8.546633,-0.481010,-9.791256,-4.886621,-4.965111,-3.323067,-9.794415,0.929418,-4.844431,-3.970931,-9.717944,8.624535,-5.437093,2.000464,0.440346,-2.753038,-8.727047,-4.803747,-5.452274,-8.676500,4.958798,-6.204264,-7.580701,3.487183,5.414028,-1.910306,-7.340720,-8.101219,-6.061379,5.786875,-5.817155,-5.684827,-5.679030,1.126361,1.699317,-7.671820,8.005509,-7.802350,-2.359546,-1.306248,-6.122821,4.570112,6.712174,7.506284,5.101168,9.224487,-9.947075,1.360188,-3.713155,1.747180,-0.398235,-0.748611,-9.716791,2.034949,-1.944084,-3.071268,-9.169873,7.234299,3.394806,5.735798,1.282822,-4.821042,9.863184,7.673183,7.428308,3.512148,-5.977728,1.374022,2.661329,5.112721,-9.956358,-1.367514,9.297581,-7.652918,-5.624830,-4.622148,-0.838783,9.802418,-4.710314,2.957253,6.928998,7.346807,-0.855050,-9.949380,1.977506,-7.993248,0.019726,5.499228,-9.581242,7.726486,0.982027,0.107512,2.697700,5.875709,3.438573,5.758391,-6.489090,-6.289039,9.395322,-5.896151,-4.784893,-7.708421,3.351869,-6.008699,-5.857176,-7.925380,0.929587,4.865621,-8.895438,-4.045116,-6.064176,-9.303890,-1.347425,1.134086,9.947577,7.187181,-7.138385,2.577769,2.138354,-9.771546,4.482652,3.249365,-1.168936,1.247347,-4.878220,-3.531438,4.018122,7.333813,9.038401,9.898601,-5.485133,-6.484140,0.755426,-8.990353,8.581620,-2.328078,6.998778,-9.482239,-7.502411,-2.482942,3.595131,8.046318,0.342983,1.078588,-8.067980,7.695126,4.876658,0.994160,1.113757,5.295416,-5.333576,2.369269,9.674197,6.352545,-5.604075,-5.388420,-4.607831,-4.780982,-9.813380,-8.306134,5.469320,1.763489,7.971000,6.000652,-5.249301,-8.503699,-6.740691,-0.030744,2.791185,0.850071,8.493343,9.551357,-6.359407,6.993941,0.591424,6.505357,0.268731,7.452022,8.750215,3.293319,3.839372,3.083948,-0.634034,-4.996117,9.247240,7.149368,8.836803,7.313807,-0.675045,9.203405,-9.851277,-0.617157,6.183938,5.033359,-3.406127,8.529361,-6.817944,0.695766,-0.618199,-8.069905,-0.492272,7.323700,-7.599826,7.639982,7.594358,4.250790,3.280849,-6.603763,0.725333,8.160645,-6.593558,-2.313281,4.033392,7.266550,7.843627,-2.401921,6.786181,5.998706,-3.844313,6.307746,4.539758,3.263623,-4.121417,-8.829420,0.942514,-3.666952,-0.434545,-7.220154,-6.112634,6.990327,0.229363,5.991381,3.373532,9.084866,8.595361,-1.683230,2.165088,0.903657,6.655946,5.047435,-4.139713,-3.463962,-1.547461,-9.473563,6.879129,-8.837550,5.084398,3.499081,9.665362,-0.831930,0.278454,3.113697,1.196481,1.885349,-6.323410,5.229195,-7.355552,7.508093,2.775060,8.185249,-4.762081,6.231445,-7.191355,-0.120604,6.862273,-1.386458,0.789312,1.747058,5.528819,5.166040,-7.111910,-5.044667,6.144853,1.182779,6.281396,4.518491,0.392919,-5.500673,5.202936,8.955572,5.460341,-7.151578,4.063226,2.305001,-7.204441,6.861585,-2.603155,7.449291,7.996688,-3.505019,3.216169,-8.664177,-0.576213,-3.237733,-0.671722,2.542676,-9.175611,-8.071642,9.950549,-5.666436,2.894074,-1.842708,4.449229,1.313388,0.131848,8.849855,6.436902,3.348421,-0.432326,3.888407,8.046161,3.346508,-3.645932,1.440805,3.259042,4.566633,9.697721,-3.335621,5.370797,-8.649598,8.412285,-4.811497,5.564866,8.837709,3.681537,-7.964362,2.788037,-6.754386,-3.721777,9.953575,3.639064,-4.614960,5.439090,2.476840,-9.864786,8.203940,-6.823357,-2.509627,3.200072,0.598846,-6.302651,3.762898,1.845245,-0.160103,2.984945,-4.919228,-8.278867,-8.551673,0.737755,3.556758,3.063068,-4.999091,-2.228747,2.095480,-7.026229,-4.159592,1.769115,-4.827542,-0.863285,-8.126638,-5.170438,-4.821105,2.112740,-4.002492,7.402260,-7.235428,-0.914117,-5.097850,9.980395,-4.902362,-4.449745,-3.914817,-3.735263,9.150757,0.490879,7.960742,-9.037985,4.192026,-4.405701,-1.934385,8.941465,-0.713137,7.419484,-1.119972,-6.910102,-9.639750,4.228102,-3.024033,8.369818,-7.875562,7.321258,7.938477,-3.396228,4.619603,-0.925625,-2.106171,-0.418005,-8.190747,0.193402,-7.668416,2.988434,-7.181157,-7.888589,6.397301,-9.962317,-4.518623,7.782846,4.946558,-6.527757,-6.109186,2.717901,-1.897843,1.966929,9.609440,1.973487,-5.712216,5.733725,-1.576178,-1.916545,2.684766,2.644366,-2.704163,2.143013,-5.542757,8.671463,5.419172,8.162722,-4.288808,-6.528617,1.941394,-5.451033,-7.823646,9.962029,0.454092,-2.463504,-3.737715,-3.189835,-7.134942,8.311955,-9.701496,0.649203,3.621421,2.963119,1.499990,4.812998,-5.307577,6.411351,5.460383,7.401316,-8.484641,-8.446407,2.020313,8.333982,-9.745310,3.369464,2.369196,-4.171009,1.976529,6.354220,3.666863,-6.449860,-1.092725,9.724623,-5.166975,-9.559165,-6.242546,2.825157,2.658317,-2.656144,6.014378,-6.524275,-8.665216,3.360637,7.933329,3.886325,-3.856672,-5.284405,5.620792,-9.441502,-4.008233,-1.434457,2.038155,-9.194978,-2.006771,3.941510,-8.314091,0.715596,-5.024305,6.024255,2.165049,9.674023,-6.075457,-2.749863,9.496667,5.186904,6.438141,-4.769869,2.564690,9.915969,7.932990,-4.074519,8.216800,8.350952,-4.487000,4.356808,3.768042,5.408786,-0.428339,3.454440,9.095665,3.912422,-0.793349,4.154719,-9.567399,0.518307,4.514181,-7.159770,9.636346,9.782837,-7.713179,8.185034,3.137290,7.071576,-8.401702,9.905353,7.177446,-6.225798,-1.629215,3.599948,7.256707,9.853376,-9.322721,6.064376,4.866831,-3.069089,0.349714,7.876575,-0.609790,-6.380121,4.893178,-3.040346,-7.072724,-4.600601,8.184096,6.518915,-9.239719,5.166901,-6.590546,7.768881,6.845214,2.868111,3.985476,7.470927,3.866343,8.362387,5.798811,3.222650,-4.648015,2.406434,-0.340795,-3.025914,7.334860,8.889242,-2.864507,4.868659,-5.680615,-8.352285,1.693976,-9.289064,5.429893,3.199043,5.331312,-6.470976,-8.657748,3.539459,5.271570,6.775030,-2.252280,-6.220465,6.093247,-0.909624,1.958198,-6.565956,7.094343,4.857600,-3.288635,6.532022,-6.328870,8.501466,1.673296,4.177008,4.107012,9.891728,5.561349,-5.511677,7.847503,7.616864,-9.339307,5.052205,-6.337283,-2.408152,8.579627,-6.237844,-3.555128,-1.109655,3.747632,-2.696059,4.437479,-1.759353,5.976359,9.911732,4.202615,4.185399,-2.938066,9.946936,-3.993483,3.095363,-5.078014,7.603368,-5.695512,-3.707868,0.382056,-6.659008,2.089485,6.597866,7.641719,8.425019,8.489844,-1.450775,-1.294229,-2.685846,-9.238620,-3.263237,-6.833800,2.798061,-4.835638], dtype = "float32")#candidate|3126|(768,)|const|float32
call_3125 = relay.TupleGetItem(func_1383_call(relay.reshape(const_3126.astype('float32'), [16, 4, 12])), 0)
call_3127 = relay.TupleGetItem(func_1385_call(relay.reshape(const_3126.astype('float32'), [16, 4, 12])), 0)
func_1923_call = mod.get_global_var('func_1923')
func_1927_call = mutated_mod.get_global_var('func_1927')
const_3137 = relay.const([2.268771,-1.875348,8.704658,1.800180,-2.333857,5.516814,-7.578488,-4.154321,1.164145,-7.234080,-7.754478,-0.863282,-5.827809,-2.410189,8.823345,-7.623807,6.338007,-5.002981,-8.691952,8.708809,4.586252,4.887872,-7.196956,4.811495,-2.673208,0.466200,-1.435453,7.860370,-9.528473,-4.029592,0.613801,-9.832345,-8.746349,-8.171029,-3.101273,2.490206,-1.803682,6.174402,-7.769347,-4.432177,-9.590627,-3.461201,5.775333,8.042752,2.595892,-4.915173,3.850261,2.348643,3.738918,-6.700527,-3.331831,-4.583226,3.572135,9.888232,-4.604308,-7.290215,-5.785367,-9.683412,-1.734359,3.847584,5.740224,-8.041407,-1.590243,-0.991285,8.284273,3.374264,2.899850,-1.788814,2.010070,-7.191403,-6.829516,-5.311057,5.856587,-5.982816,8.851568,4.649416,4.513833,0.249533,-7.594635,-3.468911,-5.724001,7.821283,0.227499,-6.639954,5.099022,-5.416982,8.958546,-7.750550,4.784733,-0.360956,-4.871372,-7.003049,-5.909729,3.736824,1.441678,-9.501987,8.436460,9.359992,-8.092416,0.348859,7.395613,4.699483,7.483407,3.755379,-5.897359,0.201544,-3.055304,5.825988,7.103629,4.503592,-2.091623,-8.079448,5.026333,-9.837855,-2.225212,9.396667,3.835063,-6.733809,6.329582,-2.542686,-4.778757,-7.298536,6.987977,3.168739,3.805783,1.098809,-1.233897,5.061317,-2.307826,4.295217,-2.929395,-9.666953,4.542635,-1.213453,-6.069086,7.303145,-1.073069,1.499737,1.743797,-9.716145,9.027298,-4.389854,1.130799,6.733474,9.914784,-3.022126,-2.490891,4.337313,-5.846811,-7.855753,-7.305874,1.165441,0.688367,-0.191759,8.815811,7.287740,1.376997,-8.022717,-5.754569,-5.983160,3.223543,4.056973,8.911522,9.291599,-8.362309,-3.561198,8.634589,8.123083,7.178037,3.842965,-8.836343,7.110655,-6.367801,-0.136174,-4.000741,-2.989971,-4.629487,4.782027,4.469308,7.501706,-5.814277,-1.114543,6.432718,-4.983385,-2.008010,3.356179,3.885240,-3.364751,-9.936206,-3.364552,4.175503,-1.601369,-8.494979,8.925755,9.867596,0.295070,-6.800576,7.464937,0.349258,-2.469794,-5.603329,-3.465620,0.024717,0.490148,3.268040,-3.482714,1.123326,-0.602897,-6.695503,6.223128,-8.333560,3.725543,-4.619468,-5.246315,-1.511813,5.769498,-4.321729,-6.825848,-2.629874,-5.380777,0.167874,-2.091256,2.930351,-9.857044,-0.790281,1.914595,-3.875705,-5.229206,-8.207075,-8.154225,3.606011,3.870244,1.380146,8.974852,3.667852,-5.711419,-5.052964,2.430521,8.356126,6.395504,2.019927,1.153372,1.951800,9.429511,-4.794782,3.594755,9.950964,-8.289467,-4.894757,0.104633,7.749145,0.389442,-8.155479,7.015855,-4.494149,-0.335163,-3.084247,-0.878414,7.080648,3.874793,4.032921,4.317969,6.145598,-5.686775,-8.255804,1.427990,7.759479,0.635685,-5.981023,7.299761], dtype = "float32")#candidate|3137|(270,)|const|float32
var_3138 = relay.var("var_3138", dtype = "int8", shape = (256, 2))#candidate|3138|(256, 2)|var|int8
call_3136 = relay.TupleGetItem(func_1923_call(relay.reshape(const_3137.astype('float32'), [9, 5, 6]), relay.reshape(var_3138.astype('int8'), [512,]), ), 4)
call_3139 = relay.TupleGetItem(func_1927_call(relay.reshape(const_3137.astype('float32'), [9, 5, 6]), relay.reshape(var_3138.astype('int8'), [512,]), ), 4)
output = relay.Tuple([uop_3096,call_3125,const_3126,call_3136,const_3137,var_3138,])
output2 = relay.Tuple([uop_3096,call_3127,const_3126,call_3139,const_3137,var_3138,])
func_3158 = relay.Function([var_3095,var_3138,], output)
mod['func_3158'] = func_3158
mod = relay.transform.InferType()(mod)
mutated_mod['func_3158'] = func_3158
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3158_call = mutated_mod.get_global_var('func_3158')
var_3160 = relay.var("var_3160", dtype = "float64", shape = (7, 12, 2))#candidate|3160|(7, 12, 2)|var|float64
var_3161 = relay.var("var_3161", dtype = "int8", shape = (256, 2))#candidate|3161|(256, 2)|var|int8
call_3159 = func_3158_call(var_3160,var_3161,)
output = call_3159
func_3162 = relay.Function([var_3160,var_3161,], output)
mutated_mod['func_3162'] = func_3162
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3716 = relay.var("var_3716", dtype = "bool", shape = (8, 13, 1))#candidate|3716|(8, 13, 1)|var|bool
const_3717 = relay.const([[[False,False,False,True,True,False,False,True,False,False,True,False,False],[True,True,True,True,False,True,False,False,True,False,True,True,False],[True,True,True,False,True,True,False,True,False,True,False,False,True],[False,False,False,False,True,True,False,False,False,False,False,False,False],[True,True,False,False,True,True,True,False,True,False,True,False,False],[True,True,False,True,False,False,False,False,False,True,True,False,True],[False,False,True,False,True,True,True,True,True,False,False,True,False],[False,True,True,False,True,False,True,True,False,False,True,False,False],[False,True,False,False,False,False,True,False,False,False,True,False,True],[False,False,True,True,True,True,True,False,True,False,True,True,False],[True,True,True,True,True,True,False,True,False,False,True,True,False],[False,True,True,False,False,False,False,True,True,True,True,False,False],[False,True,True,True,True,False,False,False,True,False,False,True,True]],[[False,True,True,True,False,True,False,True,True,False,True,True,True],[True,True,False,True,True,True,False,False,False,True,False,True,False],[True,True,False,False,False,False,True,True,True,True,False,True,True],[True,True,False,True,False,True,False,True,True,True,False,True,True],[False,True,True,True,True,False,False,True,False,True,True,True,False],[False,True,True,True,False,False,False,False,True,False,False,True,True],[True,False,True,False,True,False,True,False,True,False,False,False,True],[False,True,False,False,True,False,True,False,True,True,True,True,True],[False,False,True,False,True,False,False,True,True,False,True,False,False],[False,True,True,False,False,True,True,True,True,True,True,False,True],[True,True,False,False,True,True,False,False,True,False,True,True,True],[False,True,False,False,False,False,True,True,True,False,False,False,True],[False,True,False,False,True,True,False,True,False,True,False,False,True]],[[True,False,False,True,True,False,False,True,True,False,False,False,True],[True,False,False,True,True,False,True,False,False,False,True,False,True],[True,True,False,False,True,True,False,True,False,False,False,True,True],[True,True,True,True,True,False,False,True,False,True,True,True,True],[True,True,True,False,False,False,True,False,False,False,False,True,False],[False,True,False,True,False,True,True,False,False,False,False,False,True],[False,False,False,True,True,True,False,False,True,True,True,True,True],[True,True,True,False,True,False,True,True,True,False,False,False,False],[True,False,False,True,True,True,True,True,False,True,True,True,True],[False,False,False,True,True,False,True,True,False,False,True,False,False],[False,False,False,True,False,True,True,False,True,True,True,False,False],[False,True,True,True,True,False,True,True,True,False,True,False,True],[False,True,False,False,True,True,False,True,False,False,True,True,False]],[[False,False,False,False,True,False,False,False,True,True,False,False,False],[False,False,False,False,False,False,True,False,False,False,True,False,False],[True,False,True,True,False,True,True,False,True,False,False,True,True],[True,False,True,True,True,True,False,True,False,False,True,True,False],[True,False,False,True,False,True,True,True,False,True,False,False,False],[True,False,False,True,True,False,True,True,True,False,False,True,True],[False,True,False,False,False,True,False,False,False,False,True,True,True],[False,True,True,False,True,False,False,True,True,False,True,True,True],[True,True,True,False,True,False,False,True,False,False,True,False,False],[True,False,True,True,True,True,False,False,True,True,False,False,False],[False,False,False,True,True,True,False,False,True,True,False,True,True],[False,True,False,False,True,True,False,True,False,True,False,False,True],[False,True,False,False,False,False,False,False,True,True,True,True,True]],[[False,True,False,False,False,False,True,False,True,True,True,True,False],[False,True,False,False,False,False,False,False,False,False,False,False,False],[True,True,True,True,True,True,False,True,True,False,True,True,False],[False,False,True,False,False,True,True,False,False,True,True,False,False],[True,False,False,False,False,False,True,True,True,False,False,True,True],[False,True,True,True,True,True,True,False,True,True,False,False,True],[False,False,False,False,False,False,False,False,False,False,False,True,True],[True,False,True,False,True,True,True,False,False,False,False,True,True],[True,False,True,False,False,True,False,False,True,False,False,True,False],[False,True,True,False,False,False,False,True,True,True,True,False,False],[True,True,False,True,False,True,True,True,True,True,False,True,False],[True,True,False,False,False,True,True,True,True,True,True,True,False],[False,False,True,True,False,True,False,False,False,False,False,True,True]],[[True,True,True,True,True,False,False,True,False,False,False,True,True],[True,False,True,False,False,True,True,False,False,True,True,False,False],[True,False,False,False,True,True,True,False,False,False,False,True,False],[False,True,False,True,True,False,True,False,False,False,True,True,False],[False,True,True,False,True,False,True,True,False,False,False,False,True],[True,False,True,False,False,False,True,True,True,False,True,True,False],[True,True,False,True,True,False,False,False,False,True,False,True,False],[False,False,False,False,True,True,True,False,True,True,False,True,False],[False,True,True,True,False,True,False,False,False,True,False,False,True],[False,True,True,False,True,True,False,True,False,True,True,True,True],[False,False,False,True,True,False,True,False,True,True,True,True,True],[True,False,True,True,True,True,False,False,True,True,True,True,True],[True,False,False,False,False,False,True,False,False,False,False,True,False]],[[True,False,False,False,True,True,False,False,True,True,True,True,True],[True,True,False,False,False,False,True,False,False,True,False,True,True],[False,True,True,True,False,False,True,False,False,False,True,False,False],[False,True,False,False,False,True,True,False,True,True,False,False,True],[True,True,True,False,False,False,False,True,True,False,True,True,False],[True,True,True,True,False,False,False,False,False,False,True,True,True],[False,False,True,True,True,False,False,False,True,True,False,True,False],[False,True,False,True,True,True,False,False,True,False,False,True,False],[False,False,True,True,True,False,True,False,True,False,True,True,True],[False,False,True,True,True,True,False,True,False,True,False,True,True],[True,True,False,True,False,False,True,True,False,False,True,True,False],[False,False,True,False,True,True,False,False,False,True,False,False,False],[False,True,True,True,True,False,True,True,True,True,True,False,False]],[[True,False,False,True,True,False,True,False,False,False,False,True,False],[False,False,False,True,True,True,False,False,False,True,False,True,False],[False,False,False,False,True,True,True,True,False,False,True,True,False],[False,True,False,True,False,True,True,False,False,False,True,False,False],[False,False,True,True,False,True,False,False,True,True,False,False,False],[False,False,True,False,True,True,True,True,False,True,False,False,False],[False,False,True,True,True,True,True,False,True,True,True,True,False],[False,False,False,True,False,False,True,True,False,False,True,False,False],[True,True,False,True,True,True,False,True,False,True,False,True,True],[True,False,False,False,False,False,False,False,True,False,True,True,False],[True,True,True,True,True,False,True,False,False,False,True,False,True],[True,True,False,False,False,True,False,False,False,True,False,False,True],[False,True,False,True,True,False,False,False,True,False,False,False,False]]], dtype = "bool")#candidate|3717|(8, 13, 13)|const|bool
bop_3718 = relay.logical_and(var_3716.astype('bool'), const_3717.astype('bool')) # shape=(8, 13, 13)
func_2471_call = mod.get_global_var('func_2471')
func_2474_call = mutated_mod.get_global_var('func_2474')
const_3722 = relay.const(-3, dtype = "uint16")#candidate|3722|()|const|uint16
call_3721 = relay.TupleGetItem(func_2471_call(relay.reshape(const_3722.astype('uint16'), [])), 0)
call_3723 = relay.TupleGetItem(func_2474_call(relay.reshape(const_3722.astype('uint16'), [])), 0)
uop_3725 = relay.cos(const_3717.astype('float64')) # shape=(8, 13, 13)
output = relay.Tuple([bop_3718,call_3721,const_3722,uop_3725,])
output2 = relay.Tuple([bop_3718,call_3723,const_3722,uop_3725,])
func_3729 = relay.Function([var_3716,], output)
mod['func_3729'] = func_3729
mod = relay.transform.InferType()(mod)
mutated_mod['func_3729'] = func_3729
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3730 = relay.var("var_3730", dtype = "bool", shape = (8, 13, 1))#candidate|3730|(8, 13, 1)|var|bool
func_3729_call = mutated_mod.get_global_var('func_3729')
call_3731 = func_3729_call(var_3730)
output = call_3731
func_3732 = relay.Function([var_3730], output)
mutated_mod['func_3732'] = func_3732
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3734 = relay.const([[[-1,-1,10,-10,4,4,7,2,-4,2,-1,-3,-7,8,-4],[-1,-5,9,-6,8,-9,6,2,6,6,5,-4,6,5,-3]],[[1,5,-6,-3,3,2,8,10,6,5,-7,3,1,3,1],[3,9,10,-2,10,8,9,-2,5,-8,3,-3,7,4,-7]],[[7,9,-10,3,-3,9,-9,-7,-1,10,-3,5,9,-9,1],[8,-8,5,-7,3,-3,3,-3,4,3,3,9,3,7,1]],[[-7,-7,-7,6,1,7,-2,-8,3,8,10,-3,9,-6,-5],[6,5,1,-4,-5,-4,10,3,2,-2,3,2,-2,9,9]],[[3,9,7,-10,-5,-5,-9,7,-3,-9,1,-8,7,6,-5],[1,-8,-8,10,-5,4,6,-3,7,-3,-2,8,7,-7,3]],[[-8,4,7,-1,1,-2,6,-10,2,-6,2,9,-5,7,-1],[-5,-7,7,10,-10,5,-8,9,-9,-3,-6,-2,-9,3,-10]],[[6,-3,4,-4,-7,-5,-6,3,-1,4,9,1,5,8,-3],[2,4,2,-7,-2,1,-9,2,-2,-4,7,8,-5,-7,3]],[[-1,-1,10,3,-2,-4,-6,-1,2,-1,2,2,-7,5,9],[-8,-2,-5,4,2,5,-8,6,1,-3,-8,2,6,-6,7]],[[-8,-8,-4,5,-3,4,10,10,1,7,4,10,-5,9,-7],[9,-1,-6,-9,5,-7,-1,10,6,-1,-7,6,2,6,-5]],[[8,-10,10,-6,-8,-3,7,-3,-5,10,10,2,-7,-9,6],[7,7,-2,5,10,-8,-10,8,4,10,9,3,8,-8,4]]], dtype = "uint8")#candidate|3734|(10, 2, 15)|const|uint8
const_3735 = relay.const([[[3,9,2,7,8,8,-1,10,-9,4,3,8,-2,4,-4],[-1,-6,8,-2,9,5,3,-10,-9,-6,-2,6,6,7,-10]],[[-8,9,-5,-3,-9,6,-10,1,2,8,1,-8,10,-7,-1],[-9,9,-4,-2,-9,9,-7,6,8,8,-7,-8,7,6,-4]],[[-10,7,-10,2,-8,-4,-8,-4,1,-4,8,9,4,-3,-10],[1,-9,-9,-9,-2,4,2,1,8,-7,-2,-4,10,-6,10]],[[9,6,-10,-8,10,6,8,-7,3,10,10,7,-2,3,10],[-4,7,-9,-8,7,-9,-1,-10,-7,-8,7,8,3,10,7]],[[-3,1,2,-8,8,-8,10,-7,10,5,10,5,3,7,-5],[-5,9,8,-5,4,4,4,1,-4,3,8,-1,-1,-2,10]],[[-5,4,1,5,-10,1,1,10,7,7,-3,-3,-10,1,-5],[7,-7,5,-5,-4,-1,1,-2,-6,-6,9,7,-6,-6,-9]],[[9,2,7,4,8,-6,-4,-1,-9,5,1,5,-6,7,9],[5,-9,3,-2,9,6,-1,4,9,10,-9,10,10,-8,-9]],[[10,6,-1,-9,-6,5,4,2,-7,-1,7,-9,-5,-4,-6],[9,-9,9,-4,4,-7,-3,6,-8,8,-1,9,-3,-1,-5]],[[-10,-6,9,-2,4,-6,7,-1,-7,-8,-8,2,-9,10,-10],[8,3,-2,9,-7,9,5,3,9,-7,-4,5,2,1,-5]],[[-1,2,7,6,5,3,9,8,-6,-1,-5,9,3,4,-3],[4,2,-8,7,8,-9,5,-9,-9,1,7,9,6,7,-5]]], dtype = "uint8")#candidate|3735|(10, 2, 15)|const|uint8
bop_3736 = relay.right_shift(const_3734.astype('uint8'), relay.reshape(const_3735.astype('uint8'), relay.shape_of(const_3734))) # shape=(10, 2, 15)
output = relay.Tuple([bop_3736,])
output2 = relay.Tuple([bop_3736,])
func_3742 = relay.Function([], output)
mod['func_3742'] = func_3742
mod = relay.transform.InferType()(mod)
output = func_3742()
func_3743 = relay.Function([], output)
mutated_mod['func_3743'] = func_3743
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3742_call = mod.get_global_var('func_3742')
func_3743_call = mutated_mod.get_global_var('func_3743')
call_3750 = relay.TupleGetItem(func_3742_call(), 0)
call_3751 = relay.TupleGetItem(func_3743_call(), 0)
output = call_3750
output2 = call_3751
func_3754 = relay.Function([], output)
mod['func_3754'] = func_3754
mod = relay.transform.InferType()(mod)
mutated_mod['func_3754'] = func_3754
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3754_call = mutated_mod.get_global_var('func_3754')
call_3755 = func_3754_call()
output = call_3755
func_3756 = relay.Function([], output)
mutated_mod['func_3756'] = func_3756
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3754_call = mod.get_global_var('func_3754')
func_3756_call = mutated_mod.get_global_var('func_3756')
call_3779 = func_3754_call()
call_3780 = func_3754_call()
output = call_3779
output2 = call_3780
func_3808 = relay.Function([], output)
mod['func_3808'] = func_3808
mod = relay.transform.InferType()(mod)
output = func_3808()
func_3809 = relay.Function([], output)
mutated_mod['func_3809'] = func_3809
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3847 = relay.var("var_3847", dtype = "float64", shape = (9, 3, 3))#candidate|3847|(9, 3, 3)|var|float64
uop_3848 = relay.sigmoid(var_3847.astype('float64')) # shape=(9, 3, 3)
func_3729_call = mod.get_global_var('func_3729')
func_3732_call = mutated_mod.get_global_var('func_3732')
var_3856 = relay.var("var_3856", dtype = "bool", shape = (26, 4))#candidate|3856|(26, 4)|var|bool
call_3855 = relay.TupleGetItem(func_3729_call(relay.reshape(var_3856.astype('bool'), [8, 13, 1])), 1)
call_3857 = relay.TupleGetItem(func_3732_call(relay.reshape(var_3856.astype('bool'), [8, 13, 1])), 1)
output = relay.Tuple([uop_3848,call_3855,var_3856,])
output2 = relay.Tuple([uop_3848,call_3857,var_3856,])
func_3860 = relay.Function([var_3847,var_3856,], output)
mod['func_3860'] = func_3860
mod = relay.transform.InferType()(mod)
var_3861 = relay.var("var_3861", dtype = "float64", shape = (9, 3, 3))#candidate|3861|(9, 3, 3)|var|float64
var_3862 = relay.var("var_3862", dtype = "bool", shape = (26, 4))#candidate|3862|(26, 4)|var|bool
output = func_3860(var_3861,var_3862,)
func_3863 = relay.Function([var_3861,var_3862,], output)
mutated_mod['func_3863'] = func_3863
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3894 = relay.var("var_3894", dtype = "float64", shape = ())#candidate|3894|()|var|float64
var_3895 = relay.var("var_3895", dtype = "float64", shape = (1, 11, 12))#candidate|3895|(1, 11, 12)|var|float64
bop_3896 = relay.add(var_3894.astype('float64'), var_3895.astype('float64')) # shape=(1, 11, 12)
func_3808_call = mod.get_global_var('func_3808')
func_3809_call = mutated_mod.get_global_var('func_3809')
call_3900 = func_3808_call()
call_3901 = func_3808_call()
func_2471_call = mod.get_global_var('func_2471')
func_2474_call = mutated_mod.get_global_var('func_2474')
call_3905 = relay.TupleGetItem(func_2471_call(relay.reshape(var_3894.astype('uint16'), [])), 0)
call_3906 = relay.TupleGetItem(func_2474_call(relay.reshape(var_3894.astype('uint16'), [])), 0)
output = relay.Tuple([bop_3896,call_3900,call_3905,])
output2 = relay.Tuple([bop_3896,call_3901,call_3906,])
func_3913 = relay.Function([var_3894,var_3895,], output)
mod['func_3913'] = func_3913
mod = relay.transform.InferType()(mod)
var_3914 = relay.var("var_3914", dtype = "float64", shape = ())#candidate|3914|()|var|float64
var_3915 = relay.var("var_3915", dtype = "float64", shape = (1, 11, 12))#candidate|3915|(1, 11, 12)|var|float64
output = func_3913(var_3914,var_3915,)
func_3916 = relay.Function([var_3914,var_3915,], output)
mutated_mod['func_3916'] = func_3916
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3742_call = mod.get_global_var('func_3742')
func_3743_call = mutated_mod.get_global_var('func_3743')
call_3921 = relay.TupleGetItem(func_3742_call(), 0)
call_3922 = relay.TupleGetItem(func_3743_call(), 0)
output = call_3921
output2 = call_3922
func_3933 = relay.Function([], output)
mod['func_3933'] = func_3933
mod = relay.transform.InferType()(mod)
mutated_mod['func_3933'] = func_3933
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3933_call = mutated_mod.get_global_var('func_3933')
call_3934 = func_3933_call()
output = call_3934
func_3935 = relay.Function([], output)
mutated_mod['func_3935'] = func_3935
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3742_call = mod.get_global_var('func_3742')
func_3743_call = mutated_mod.get_global_var('func_3743')
call_3946 = relay.TupleGetItem(func_3742_call(), 0)
call_3947 = relay.TupleGetItem(func_3743_call(), 0)
uop_3952 = relay.erf(call_3946.astype('float32')) # shape=(10, 2, 15)
uop_3954 = relay.erf(call_3947.astype('float32')) # shape=(10, 2, 15)
func_3742_call = mod.get_global_var('func_3742')
func_3743_call = mutated_mod.get_global_var('func_3743')
call_3957 = relay.TupleGetItem(func_3742_call(), 0)
call_3958 = relay.TupleGetItem(func_3743_call(), 0)
func_1837_call = mod.get_global_var('func_1837')
func_1840_call = mutated_mod.get_global_var('func_1840')
const_3968 = relay.constdtype = "float32")#candidate|3968|(132, 12)|const|float32
const_3969 = relay.const([-3.240340,1.560106,-5.654243,3.096232,-7.284204,-5.068296,5.247505,7.660844,8.580984,1.458716,-2.866844,-6.711479,1.218966,0.726424,1.681123,3.790729,1.551717,2.256075,8.178592,2.074085,-8.558796,-5.022027,5.674189,9.623858,-9.612056,-1.128935,5.311078,7.703186,-6.674084,2.049985,-4.985980,3.427611,8.565027,0.616888,-0.124702,-9.898336,-0.725582,-3.203496,-4.842445,-7.073778,4.645916,6.259796,6.586316,6.260107,-8.742762,9.894275,6.194693,-8.773696,4.668135,3.182882,-3.675929,-1.646440,-2.072672,-4.428595,0.820380,1.677060,0.029797,3.382050,0.621123,9.212088,-9.807051,-0.569664,2.478052,-8.881677,-9.267280,-1.766665,-0.882414,-7.660990,-6.560848,7.738993,8.613043,-9.435953,-6.248672,-4.402962,-9.415932,7.923053,-7.311450,-0.642048,-0.624947,7.504701,-4.932628,5.730865,-6.578191,-2.443764,-8.730094,-1.504994,-9.914002,1.928329,6.023863,3.255256,0.370427,-2.998523,-1.625825,4.260699,2.322016,-3.179443,3.559550,-9.907198,2.899102,-9.931174,8.145311,1.678587,2.068129,-2.400994,-9.182673,-1.904936,-5.938743,-5.311489,1.289719,0.052600,-4.387693,-9.979417,4.140395,2.358300,0.285948,-2.028789,6.752782,8.877770,-0.429646,6.847575,4.274451,-3.048112,-4.236593,-6.578357,0.687411,-7.585971,3.089292,4.441037,-6.741060,4.665263,-9.033296,-2.865826,-6.213115,-6.373185,9.857970,3.322796,5.080714,-4.809471,-4.709928,5.819725,-5.356733,8.725761,-1.065211,-7.165153,-3.896211,1.694077,3.788053,-7.336557,0.829412,9.424222,-0.592810,9.073940,-0.978796,3.348034,-0.499431,-2.145287,-3.694185,8.435345,-5.276707,4.101281,7.546901,2.129618,-6.448473,-3.350644,-4.726077,-2.140144,4.625468,-8.074015,6.423197,-6.767996,-3.792591,-6.079142,9.534387,-7.537358,0.196309,-7.467137,-5.223842,-2.825824,1.077557,-0.274678,-9.995552,-0.538277,-0.894293,3.950934,-7.209739,8.278438,5.732489,3.439790,2.610434,-7.306117,-1.649915,-3.586082,4.843074,2.074149,5.824603,-2.540963,5.975062,1.825368,-4.000507,5.714828,3.627545,4.378713,0.839834,7.458244,-6.286145,0.095393,-5.389812,9.079828,-3.935537,-5.676659,-4.034771,1.898849,2.221983,9.373170,-9.380951,-4.855311,-2.966463,-1.566292,-3.960545,-3.309795,4.846210,9.019638,6.107608,7.392682,-3.445734,-7.148982,8.580009,-0.256002,-3.105348,-1.194848,-7.713239,-9.131116,-8.335102,-1.184211,-8.661832,-2.170640,3.802856,3.707109,-9.182727,-7.680194,-4.357346,-4.501286,4.020375,-4.977819,-0.438086,-0.810732,5.902928,4.326800,6.128776,2.400311,6.186353,2.447815,8.789502,9.641276,-7.514989,-6.324965,-5.032835,-4.026555,5.760458,-6.796978,3.471851,3.510552,5.341745,-3.318376,-8.225675,5.761888,9.536203,-8.183828,7.098240,4.041328,-4.134525,5.046776,-8.632246,-6.373405,-5.062349,1.931500,6.481415,4.512314,-1.893238,5.327098,5.551276,-1.158184,2.809760,4.376238,-7.211333,-9.392086,0.366118,-0.476909,9.902559,7.669418,9.580837,5.274316,9.513346,4.694172,2.846793,2.481392,3.474845,5.670685,-4.381830,-1.941102,0.456578,0.554997,-6.506165,-4.927000,-4.719932,9.820456,9.721781,-2.952683,9.164492,-1.169396,-0.366702,7.806967,5.906780,1.134376,-8.603126,-2.446990,-3.460554,-2.176706,9.444267,9.293059,-3.529787,0.802703,5.165306,9.483617,-8.879246,0.787194,3.320901,-8.838776,-6.820820,-3.012113,0.560539,-5.905226,7.460843,-9.887588,-3.382373,-4.054156,3.275871,-9.148200,-1.380210,3.961534,7.990710,8.775356,-2.637681,5.375889,9.491539,1.734004,-7.574907,5.386587,-0.407039,2.167886,3.939873,5.427833,9.358702,2.824481,1.524501,-4.799252,-8.368938,3.009348,-2.438397,8.722413,3.485274,-1.382088,-9.892512,9.082911,-5.672212,5.891402,-0.994524,-7.916019,-2.632199,7.643957,-1.059473,-2.247804,-6.634006,2.368468,-9.245334,-9.925886,8.879191,-4.453941,-7.765006,-9.167686,-4.401242,-1.546769,4.918390,-1.861316,8.017369,2.338772,-3.724105,-7.531651,-4.309704,3.707713,-2.085382,-3.585740,-1.875239,5.139610,-5.220444,9.746464,-8.902625,4.600488,-9.619547,2.736846,-2.356890,-8.336967,9.169865,9.706674,-0.786182,-8.517052,-1.475020,1.115556,6.848749,-1.142499,-3.757857,-4.363244,8.539675,-9.814934,-1.719466,3.806600,9.194151,1.559434,-6.358121,-1.320018,6.726853,4.427055,5.286382,-9.345635,-4.485878,-8.493814,9.003539,3.061625,-0.029697,-3.267392,9.693700,9.187718,4.889683,9.673956,5.730589,1.497819,5.737590,2.305740,9.285353,5.103196,-2.576539,-2.390445,2.769203,-3.917332,-8.827724,-2.724262,3.167388,-2.093671,-5.471862,-8.274955,2.489938,-6.345107,6.394464,8.335841,4.342741,-9.761099,-1.883104,5.788087,-3.043903,8.206320,6.897511,-1.127227,-9.160883,9.425580,3.130139,-1.920952,8.738247,9.225172,-1.959249,8.272843,5.171473,4.915568,1.954895,6.079056,5.819606,-2.277388,-2.056154,4.995757,1.295106,7.322598,-3.763171,8.500199,-1.212670,-0.042606,0.438580,4.503407,7.437078,-0.966248,3.480782,-5.790674,-3.828757,4.245690,-3.018211,0.471708,-4.453947,-3.865173,5.538432,-1.667210,-8.083350,-8.894490,4.279228,-9.497435,8.422905,8.913923,2.989010,2.796208,-8.281979,-9.190506,9.694650,-4.383164,5.772868,-0.025754,-9.674728,-3.321130,-4.873917,-2.872582,-5.729043,-7.748634,3.671143,9.998062,-6.582751,-9.007117,0.762654,4.735445,0.715453,-5.157689,-1.881701,0.771416,-6.246997,6.305699,-3.383732,-2.997891,-5.526680,-3.411201,-6.357895,-8.196967,-0.425153,6.050437,-7.422177,-6.215086,-8.126179,-9.552596,-6.464526,9.213801,8.983328,9.471708,-5.451384,1.355894,-6.927141,-0.464724,1.260684,6.190255,7.700249,6.396616,7.514618,9.874905,1.567980,-8.382734,8.198271,-2.090130,-1.321916,8.727191,2.223388,-1.082240,-4.600062,-9.778942,1.483199,-4.883595,-5.292450,-6.557707,4.530345,3.431482,3.664459,-5.528690,9.325616,-9.872341,-2.587388,-5.635051,-3.784938,-7.482226,4.079288,-3.237972,-1.480261,4.592223,-7.535495,0.940632,-5.535738,-5.482538,-6.603529,-6.895741,8.569959,-1.985592,-3.560532,4.257963,7.733938,-0.428896,-7.472105,5.257082,2.148472,5.934259,9.880702,3.436284,0.792958,1.625814,6.402916,2.957249,-3.913402,-3.054714,-8.610999,7.909528,0.660836,-9.819447,-6.520420,0.786643,6.121529,-2.292611,2.931201,-8.702473,0.114037,-4.572209,9.542578,-8.326623,0.183103,5.517291,-8.251123,3.468491,-8.369500,-8.791003,-8.804689,-0.407551,-4.123054,-0.512368,-5.026856,7.584223,-8.957320,-0.805135,3.533743,-2.223085,-2.438630,7.464041,-1.109356,-6.433449,-0.369017,-3.910717,-4.056172,-1.207213,5.187504,-8.103071,6.841300,4.342905,-8.428352,-6.084609,-7.767747,-1.027577,-8.131423,-5.008616,3.381852,2.637363,0.838719,-4.348435,-3.460534,-4.113577,6.187241,7.141901,-2.673308,-9.671730,3.360453,0.761415,9.469219,-3.574918,3.092762,0.460180,0.334291,-5.704950,-0.364407,2.683598,-4.866220,-7.117416,-8.945549,-5.465430,-1.775741,9.890398,6.335171,-9.796287,2.401558,-0.428924,6.768370,7.161743,-4.583888,3.814493,-5.483646,6.860819,-9.565791,-9.553634,-1.112423,-4.771197,2.144309,-8.015313,-4.360030,-4.810524,4.831609,-7.721338,-0.101756,9.728297,4.053544,7.984691,1.233345,-5.165888,-8.108079,3.941300,-3.000300,0.888048,2.987568,-3.865303,-8.056285,1.561887,-7.447474,-8.453228,5.301237,8.311360,-7.918533,-3.483389,-0.573980,-5.568477,6.836966,7.364843,5.500465,-4.359366,-6.817402,-0.890683,3.245964,-1.771090,9.157194,-4.424625,-1.057253,5.675320,-4.111447,6.843956,9.062578,8.974229,7.649262,-6.831422,8.012743,5.483051,0.755765,5.943888,-2.971803,-7.044391,-3.769068,-7.138737,1.142847,-8.822000,-2.531360,-4.928389,3.840862,-1.120398,-8.366277,3.182630,2.449629,1.670056,-9.713585,3.304132,-8.213304,-2.364025,-5.367396,7.210400,-8.503960,4.844082], dtype = "float32")#candidate|3969|(768,)|const|float32
call_3967 = relay.TupleGetItem(func_1837_call(relay.reshape(const_3968.astype('float32'), [9, 16, 11]), relay.reshape(const_3969.astype('float32'), [768,]), ), 3)
call_3970 = relay.TupleGetItem(func_1840_call(relay.reshape(const_3968.astype('float32'), [9, 16, 11]), relay.reshape(const_3969.astype('float32'), [768,]), ), 3)
func_3742_call = mod.get_global_var('func_3742')
func_3743_call = mutated_mod.get_global_var('func_3743')
call_3973 = relay.TupleGetItem(func_3742_call(), 0)
call_3974 = relay.TupleGetItem(func_3743_call(), 0)
uop_3979 = relay.sinh(call_3973.astype('float64')) # shape=(10, 2, 15)
uop_3981 = relay.sinh(call_3974.astype('float64')) # shape=(10, 2, 15)
func_1978_call = mod.get_global_var('func_1978')
func_1981_call = mutated_mod.get_global_var('func_1981')
var_3992 = relay.var("var_3992", dtype = "float32", shape = (324, 1))#candidate|3992|(324, 1)|var|float32
call_3991 = relay.TupleGetItem(func_1978_call(relay.reshape(var_3992.astype('float32'), [4, 9, 9]), relay.reshape(var_3992.astype('float32'), [4, 9, 9]), ), 0)
call_3993 = relay.TupleGetItem(func_1981_call(relay.reshape(var_3992.astype('float32'), [4, 9, 9]), relay.reshape(var_3992.astype('float32'), [4, 9, 9]), ), 0)
output = relay.Tuple([uop_3952,call_3957,call_3967,const_3968,const_3969,uop_3979,call_3991,var_3992,])
output2 = relay.Tuple([uop_3954,call_3958,call_3970,const_3968,const_3969,uop_3981,call_3993,var_3992,])
func_3998 = relay.Function([var_3992,], output)
mod['func_3998'] = func_3998
mod = relay.transform.InferType()(mod)
var_3999 = relay.var("var_3999", dtype = "float32", shape = (324, 1))#candidate|3999|(324, 1)|var|float32
output = func_3998(var_3999)
func_4000 = relay.Function([var_3999], output)
mutated_mod['func_4000'] = func_4000
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4027 = relay.const([[[4.309779,4.682489],[-3.497126,-8.451976],[-8.674117,5.854028],[-4.802139,-7.666058],[-7.571694,0.058571]],[[-2.975462,-9.047096],[-2.276168,-8.765545],[-0.104836,7.982236],[7.260174,-7.716115],[3.017810,6.036447]],[[-4.043551,4.099424],[-5.878141,-2.811513],[-5.718578,0.582290],[6.399621,4.548259],[1.579716,-9.876368]],[[3.836834,-3.032788],[-3.220474,4.422358],[6.599163,-2.344400],[0.203420,-8.675158],[7.474630,-6.194496]],[[-0.397584,-8.778372],[0.104707,4.123715],[7.332660,-8.908031],[-4.192903,4.109782],[-9.442255,-4.546748]],[[7.417852,8.636385],[-8.817680,0.810971],[3.251609,7.578231],[5.469356,6.719443],[6.244738,2.026640]],[[3.228468,-8.730804],[-6.688278,-1.064132],[-7.874699,-9.117931],[0.655916,-4.789804],[0.469464,6.549544]],[[-6.974881,-4.776656],[-7.178603,-8.875498],[3.994674,-0.822994],[-8.676722,-0.953621],[6.198780,5.879229]],[[4.127668,8.108145],[1.399449,-3.899706],[6.537525,1.230069],[6.940272,6.100633],[-7.196242,6.955388]],[[-3.489698,-4.991414],[-0.474377,3.621262],[5.085430,9.464056],[0.568757,-0.697677],[3.381979,5.066597]],[[-2.413990,-3.143402],[9.831043,-6.294540],[8.164037,3.142261],[4.154120,-9.982746],[-5.475594,4.206167]],[[-3.263877,-2.171849],[-8.727464,9.479105],[9.662484,-6.703626],[7.846579,7.378437],[4.992887,-2.442870]]], dtype = "float64")#candidate|4027|(12, 5, 2)|const|float64
uop_4028 = relay.asin(const_4027.astype('float64')) # shape=(12, 5, 2)
output = relay.Tuple([uop_4028,])
output2 = relay.Tuple([uop_4028,])
func_4033 = relay.Function([], output)
mod['func_4033'] = func_4033
mod = relay.transform.InferType()(mod)
mutated_mod['func_4033'] = func_4033
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4033_call = mutated_mod.get_global_var('func_4033')
call_4034 = func_4033_call()
output = call_4034
func_4035 = relay.Function([], output)
mutated_mod['func_4035'] = func_4035
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3742_call = mod.get_global_var('func_3742')
func_3743_call = mutated_mod.get_global_var('func_3743')
call_4062 = relay.TupleGetItem(func_3742_call(), 0)
call_4063 = relay.TupleGetItem(func_3743_call(), 0)
var_4064 = relay.var("var_4064", dtype = "uint8", shape = (10, 2, 15))#candidate|4064|(10, 2, 15)|var|uint8
bop_4065 = relay.multiply(call_4062.astype('uint64'), relay.reshape(var_4064.astype('uint64'), relay.shape_of(call_4062))) # shape=(10, 2, 15)
bop_4068 = relay.multiply(call_4063.astype('uint64'), relay.reshape(var_4064.astype('uint64'), relay.shape_of(call_4063))) # shape=(10, 2, 15)
output = bop_4065
output2 = bop_4068
func_4069 = relay.Function([var_4064,], output)
mod['func_4069'] = func_4069
mod = relay.transform.InferType()(mod)
var_4070 = relay.var("var_4070", dtype = "uint8", shape = (10, 2, 15))#candidate|4070|(10, 2, 15)|var|uint8
output = func_4069(var_4070)
func_4071 = relay.Function([var_4070], output)
mutated_mod['func_4071'] = func_4071
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4033_call = mod.get_global_var('func_4033')
func_4035_call = mutated_mod.get_global_var('func_4035')
call_4090 = relay.TupleGetItem(func_4033_call(), 0)
call_4091 = relay.TupleGetItem(func_4035_call(), 0)
const_4107 = relay.const([[[8.346031,1.675028],[0.487324,-8.648909],[4.758644,-7.510166],[5.439779,-7.524562],[-1.529464,-7.473644]],[[-4.915478,-3.451993],[-4.331038,8.144971],[-8.086447,2.962024],[7.294570,-2.403854],[9.652126,-8.918867]],[[1.235197,-5.549048],[6.352423,-5.947222],[4.876249,2.411023],[-1.183407,7.797141],[0.954107,-3.471280]],[[2.185535,9.490546],[-7.549694,4.721073],[-7.632963,2.198158],[0.509003,-2.331218],[-4.847551,-0.127251]],[[-9.056805,1.597442],[8.424516,7.303635],[3.812736,-1.420434],[6.817662,2.929030],[-3.484517,3.923339]],[[6.895849,-3.110755],[2.097762,4.978935],[4.186810,6.448931],[6.286861,-3.197205],[9.955079,3.165675]],[[3.794381,-3.657277],[-8.842893,7.075795],[-6.530881,7.883681],[1.638764,-5.392595],[1.141124,-2.984742]],[[-5.333414,-6.323541],[-5.073828,-7.876091],[-1.875645,3.783982],[-3.129388,-1.046720],[9.202154,4.207984]],[[-7.372714,8.214156],[-0.073161,-4.970363],[-1.790211,-4.391142],[-4.675119,-5.570441],[-9.006585,2.124462]],[[2.537882,-1.276142],[-1.939658,-7.661018],[-1.560720,1.968844],[-9.883908,-6.402438],[8.506682,-8.735755]],[[1.072177,-9.155110],[2.108139,2.053908],[4.809417,-3.124023],[5.537173,-3.336094],[8.580977,7.639194]],[[-6.770628,5.959287],[-4.419798,7.226080],[-4.404738,8.746860],[1.867530,-7.183293],[-3.440149,-8.625105]]], dtype = "float64")#candidate|4107|(12, 5, 2)|const|float64
bop_4108 = relay.bitwise_or(call_4090.astype('uint16'), relay.reshape(const_4107.astype('uint16'), relay.shape_of(call_4090))) # shape=(12, 5, 2)
bop_4111 = relay.bitwise_or(call_4091.astype('uint16'), relay.reshape(const_4107.astype('uint16'), relay.shape_of(call_4091))) # shape=(12, 5, 2)
bop_4113 = relay.logical_and(call_4090.astype('bool'), relay.reshape(const_4107.astype('bool'), relay.shape_of(call_4090))) # shape=(12, 5, 2)
bop_4116 = relay.logical_and(call_4091.astype('bool'), relay.reshape(const_4107.astype('bool'), relay.shape_of(call_4091))) # shape=(12, 5, 2)
output = relay.Tuple([bop_4108,bop_4113,])
output2 = relay.Tuple([bop_4111,bop_4116,])
func_4121 = relay.Function([], output)
mod['func_4121'] = func_4121
mod = relay.transform.InferType()(mod)
output = func_4121()
func_4122 = relay.Function([], output)
mutated_mod['func_4122'] = func_4122
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3933_call = mod.get_global_var('func_3933')
func_3935_call = mutated_mod.get_global_var('func_3935')
call_4153 = func_3933_call()
call_4154 = func_3933_call()
output = call_4153
output2 = call_4154
func_4160 = relay.Function([], output)
mod['func_4160'] = func_4160
mod = relay.transform.InferType()(mod)
mutated_mod['func_4160'] = func_4160
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4160_call = mutated_mod.get_global_var('func_4160')
call_4161 = func_4160_call()
output = call_4161
func_4162 = relay.Function([], output)
mutated_mod['func_4162'] = func_4162
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4160_call = mod.get_global_var('func_4160')
func_4162_call = mutated_mod.get_global_var('func_4162')
call_4163 = func_4160_call()
call_4164 = func_4160_call()
func_2412_call = mod.get_global_var('func_2412')
func_2415_call = mutated_mod.get_global_var('func_2415')
var_4175 = relay.var("var_4175", dtype = "float32", shape = (324,))#candidate|4175|(324,)|var|float32
call_4174 = relay.TupleGetItem(func_2412_call(relay.reshape(var_4175.astype('float32'), [324,])), 4)
call_4176 = relay.TupleGetItem(func_2415_call(relay.reshape(var_4175.astype('float32'), [324,])), 4)
func_352_call = mod.get_global_var('func_352')
func_356_call = mutated_mod.get_global_var('func_356')
const_4189 = relay.const([[7,8,-8,2],[-8,5,5,-6],[10,-2,8,9],[-10,10,5,8],[7,-1,-2,4],[-9,3,-8,5],[-10,9,4,9],[-4,-3,-8,-2],[-10,9,-7,-1],[1,-10,-4,9],[5,-2,-7,-2],[-2,10,9,-7],[7,10,-9,10],[-6,1,9,-4],[9,3,8,6],[2,2,-10,-2],[-4,-10,-5,5],[3,3,-7,6],[4,-1,-5,-4],[5,-10,-2,-1],[-7,9,3,5],[-9,10,7,1],[5,4,9,7],[-4,8,-1,2],[3,-2,-3,-4],[7,-10,10,-6],[3,5,7,-7],[-10,7,-5,-1],[-8,5,-2,-6],[3,-5,-9,-9],[2,6,7,10],[-8,1,6,2],[-7,-7,-5,1],[-1,4,9,2],[-9,-1,-4,8],[-8,7,-2,-7],[-7,-9,-7,4],[-9,8,2,-9],[10,1,-1,-8],[-9,2,-6,-10],[1,-7,4,-6],[8,10,4,4],[9,8,4,8],[2,5,-9,1],[6,8,-7,-2],[-8,6,-4,-6],[8,5,-3,-7],[5,3,9,-3],[9,-7,-8,3],[3,-10,4,10],[-1,3,-7,8],[-4,-5,-2,8],[-2,10,-3,-7],[-6,1,-2,-9],[-5,-8,-7,-6],[5,4,2,1],[-6,-5,5,5],[-1,-1,-1,-8],[7,9,-10,4],[6,3,9,-3],[4,-6,-4,-2],[1,-7,-6,-9],[1,-6,4,-8],[-8,-10,4,4],[3,-9,-10,9],[-6,4,-3,4],[10,5,-4,4],[-4,8,8,-6],[-1,8,-7,5],[-5,-5,1,-2],[-3,-2,-2,6],[-1,-3,-8,1],[-5,-3,6,-6],[-8,-7,2,7],[-8,2,-7,3],[-7,-8,7,-6],[-6,7,-8,3],[5,4,-9,5],[-10,-7,-7,7],[-7,9,-4,-8],[-6,2,-9,-2],[7,6,-7,-5],[-7,-5,3,8],[-9,-5,4,3],[10,7,-2,-6],[7,5,2,-2],[-2,-5,1,4],[2,10,5,-7],[-1,-6,3,2],[-3,-3,-8,-8],[-4,-5,6,-4],[9,4,1,8],[-6,-7,-6,9],[7,-6,1,-7],[-7,-1,-2,-3],[2,2,1,-5],[4,-5,10,-10],[8,-4,-10,-5],[3,-1,-10,3],[-2,-5,-7,-9],[2,-1,-8,1],[-7,-6,-8,-5],[6,4,-8,9],[-6,-4,-7,-5],[-7,-5,-7,2],[3,-2,-10,10],[3,-3,4,3],[-10,-2,10,-10],[-4,-1,-1,-7],[-4,5,-6,-1],[10,-9,9,4],[-9,-6,6,3],[1,10,-8,8],[6,5,10,-10],[-1,7,-1,7],[9,-8,-1,4],[-6,8,9,-5],[1,6,7,6],[-5,7,-5,-5],[-2,-1,3,-9],[-10,-4,-4,6],[2,-9,-8,-8],[-9,8,-1,-10],[3,8,-7,-6],[1,-7,-10,10],[-7,-10,5,7],[-10,8,7,4],[9,7,-8,-4]], dtype = "int8")#candidate|4189|(128, 4)|const|int8
call_4188 = func_352_call(relay.reshape(const_4189.astype('int8'), [8, 8, 8]), relay.reshape(const_4189.astype('int8'), [8, 8, 8]), )
call_4190 = func_352_call(relay.reshape(const_4189.astype('int8'), [8, 8, 8]), relay.reshape(const_4189.astype('int8'), [8, 8, 8]), )
func_4160_call = mod.get_global_var('func_4160')
func_4162_call = mutated_mod.get_global_var('func_4162')
call_4192 = func_4160_call()
call_4193 = func_4160_call()
func_3808_call = mod.get_global_var('func_3808')
func_3809_call = mutated_mod.get_global_var('func_3809')
call_4194 = func_3808_call()
call_4195 = func_3808_call()
output = relay.Tuple([call_4163,call_4174,var_4175,call_4188,const_4189,call_4192,call_4194,])
output2 = relay.Tuple([call_4164,call_4176,var_4175,call_4190,const_4189,call_4193,call_4195,])
func_4202 = relay.Function([var_4175,], output)
mod['func_4202'] = func_4202
mod = relay.transform.InferType()(mod)
mutated_mod['func_4202'] = func_4202
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4203 = relay.var("var_4203", dtype = "float32", shape = (324,))#candidate|4203|(324,)|var|float32
func_4202_call = mutated_mod.get_global_var('func_4202')
call_4204 = func_4202_call(var_4203)
output = call_4204
func_4205 = relay.Function([var_4203], output)
mutated_mod['func_4205'] = func_4205
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3808_call = mod.get_global_var('func_3808')
func_3809_call = mutated_mod.get_global_var('func_3809')
call_4207 = func_3808_call()
call_4208 = func_3808_call()
func_2412_call = mod.get_global_var('func_2412')
func_2415_call = mutated_mod.get_global_var('func_2415')
var_4233 = relay.var("var_4233", dtype = "float32", shape = (1, 324))#candidate|4233|(1, 324)|var|float32
call_4232 = relay.TupleGetItem(func_2412_call(relay.reshape(var_4233.astype('float32'), [324,])), 4)
call_4234 = relay.TupleGetItem(func_2415_call(relay.reshape(var_4233.astype('float32'), [324,])), 4)
func_4160_call = mod.get_global_var('func_4160')
func_4162_call = mutated_mod.get_global_var('func_4162')
call_4247 = func_4160_call()
call_4248 = func_4160_call()
output = relay.Tuple([call_4207,call_4232,var_4233,call_4247,])
output2 = relay.Tuple([call_4208,call_4234,var_4233,call_4248,])
func_4249 = relay.Function([var_4233,], output)
mod['func_4249'] = func_4249
mod = relay.transform.InferType()(mod)
var_4250 = relay.var("var_4250", dtype = "float32", shape = (1, 324))#candidate|4250|(1, 324)|var|float32
output = func_4249(var_4250)
func_4251 = relay.Function([var_4250], output)
mutated_mod['func_4251'] = func_4251
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4160_call = mod.get_global_var('func_4160')
func_4162_call = mutated_mod.get_global_var('func_4162')
call_4284 = func_4160_call()
call_4285 = func_4160_call()
func_3083_call = mod.get_global_var('func_3083')
func_3085_call = mutated_mod.get_global_var('func_3085')
var_4295 = relay.var("var_4295", dtype = "float32", shape = (768,))#candidate|4295|(768,)|var|float32
call_4294 = relay.TupleGetItem(func_3083_call(relay.reshape(var_4295.astype('float32'), [768,])), 0)
call_4296 = relay.TupleGetItem(func_3085_call(relay.reshape(var_4295.astype('float32'), [768,])), 0)
func_3754_call = mod.get_global_var('func_3754')
func_3756_call = mutated_mod.get_global_var('func_3756')
call_4299 = func_3754_call()
call_4300 = func_3754_call()
output = relay.Tuple([call_4284,call_4294,var_4295,call_4299,])
output2 = relay.Tuple([call_4285,call_4296,var_4295,call_4300,])
func_4304 = relay.Function([var_4295,], output)
mod['func_4304'] = func_4304
mod = relay.transform.InferType()(mod)
mutated_mod['func_4304'] = func_4304
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4305 = relay.var("var_4305", dtype = "float32", shape = (768,))#candidate|4305|(768,)|var|float32
func_4304_call = mutated_mod.get_global_var('func_4304')
call_4306 = func_4304_call(var_4305)
output = call_4306
func_4307 = relay.Function([var_4305], output)
mutated_mod['func_4307'] = func_4307
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4160_call = mod.get_global_var('func_4160')
func_4162_call = mutated_mod.get_global_var('func_4162')
call_4335 = func_4160_call()
call_4336 = func_4160_call()
func_4249_call = mod.get_global_var('func_4249')
func_4251_call = mutated_mod.get_global_var('func_4251')
var_4342 = relay.var("var_4342", dtype = "float32", shape = (324,))#candidate|4342|(324,)|var|float32
call_4341 = relay.TupleGetItem(func_4249_call(relay.reshape(var_4342.astype('float32'), [1, 324])), 0)
call_4343 = relay.TupleGetItem(func_4251_call(relay.reshape(var_4342.astype('float32'), [1, 324])), 0)
output = relay.Tuple([call_4335,call_4341,var_4342,])
output2 = relay.Tuple([call_4336,call_4343,var_4342,])
func_4351 = relay.Function([var_4342,], output)
mod['func_4351'] = func_4351
mod = relay.transform.InferType()(mod)
var_4352 = relay.var("var_4352", dtype = "float32", shape = (324,))#candidate|4352|(324,)|var|float32
output = func_4351(var_4352)
func_4353 = relay.Function([var_4352], output)
mutated_mod['func_4353'] = func_4353
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3742_call = mod.get_global_var('func_3742')
func_3743_call = mutated_mod.get_global_var('func_3743')
call_4370 = relay.TupleGetItem(func_3742_call(), 0)
call_4371 = relay.TupleGetItem(func_3743_call(), 0)
func_4069_call = mod.get_global_var('func_4069')
func_4071_call = mutated_mod.get_global_var('func_4071')
call_4389 = func_4069_call(relay.reshape(call_4370.astype('uint8'), [10, 2, 15]))
call_4390 = func_4069_call(relay.reshape(call_4370.astype('uint8'), [10, 2, 15]))
func_47_call = mod.get_global_var('func_47')
func_49_call = mutated_mod.get_global_var('func_49')
var_4400 = relay.var("var_4400", dtype = "float32", shape = (96,))#candidate|4400|(96,)|var|float32
call_4399 = relay.TupleGetItem(func_47_call(relay.reshape(var_4400.astype('float32'), [3, 16, 2])), 0)
call_4401 = relay.TupleGetItem(func_49_call(relay.reshape(var_4400.astype('float32'), [3, 16, 2])), 0)
output = relay.Tuple([call_4370,call_4389,call_4399,var_4400,])
output2 = relay.Tuple([call_4371,call_4390,call_4401,var_4400,])
func_4417 = relay.Function([var_4400,], output)
mod['func_4417'] = func_4417
mod = relay.transform.InferType()(mod)
mutated_mod['func_4417'] = func_4417
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4418 = relay.var("var_4418", dtype = "float32", shape = (96,))#candidate|4418|(96,)|var|float32
func_4417_call = mutated_mod.get_global_var('func_4417')
call_4419 = func_4417_call(var_4418)
output = call_4419
func_4420 = relay.Function([var_4418], output)
mutated_mod['func_4420'] = func_4420
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3933_call = mod.get_global_var('func_3933')
func_3935_call = mutated_mod.get_global_var('func_3935')
call_4509 = func_3933_call()
call_4510 = func_3933_call()
var_4529 = relay.var("var_4529", dtype = "uint8", shape = (10, 2, 15))#candidate|4529|(10, 2, 15)|var|uint8
bop_4530 = relay.less(call_4509.astype('bool'), relay.reshape(var_4529.astype('bool'), relay.shape_of(call_4509))) # shape=(10, 2, 15)
bop_4533 = relay.less(call_4510.astype('bool'), relay.reshape(var_4529.astype('bool'), relay.shape_of(call_4510))) # shape=(10, 2, 15)
bop_4534 = relay.bitwise_and(var_4529.astype('uint64'), relay.reshape(call_4509.astype('uint64'), relay.shape_of(var_4529))) # shape=(10, 2, 15)
bop_4537 = relay.bitwise_and(var_4529.astype('uint64'), relay.reshape(call_4510.astype('uint64'), relay.shape_of(var_4529))) # shape=(10, 2, 15)
func_1978_call = mod.get_global_var('func_1978')
func_1981_call = mutated_mod.get_global_var('func_1981')
var_4541 = relay.var("var_4541", dtype = "float32", shape = (324,))#candidate|4541|(324,)|var|float32
call_4540 = relay.TupleGetItem(func_1978_call(relay.reshape(var_4541.astype('float32'), [4, 9, 9]), relay.reshape(var_4541.astype('float32'), [4, 9, 9]), ), 0)
call_4542 = relay.TupleGetItem(func_1981_call(relay.reshape(var_4541.astype('float32'), [4, 9, 9]), relay.reshape(var_4541.astype('float32'), [4, 9, 9]), ), 0)
output = relay.Tuple([bop_4530,bop_4534,call_4540,var_4541,])
output2 = relay.Tuple([bop_4533,bop_4537,call_4542,var_4541,])
func_4544 = relay.Function([var_4529,var_4541,], output)
mod['func_4544'] = func_4544
mod = relay.transform.InferType()(mod)
mutated_mod['func_4544'] = func_4544
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4544_call = mutated_mod.get_global_var('func_4544')
var_4546 = relay.var("var_4546", dtype = "uint8", shape = (10, 2, 15))#candidate|4546|(10, 2, 15)|var|uint8
var_4547 = relay.var("var_4547", dtype = "float32", shape = (324,))#candidate|4547|(324,)|var|float32
call_4545 = func_4544_call(var_4546,var_4547,)
output = call_4545
func_4548 = relay.Function([var_4546,var_4547,], output)
mutated_mod['func_4548'] = func_4548
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3808_call = mod.get_global_var('func_3808')
func_3809_call = mutated_mod.get_global_var('func_3809')
call_4672 = func_3808_call()
call_4673 = func_3808_call()
func_3083_call = mod.get_global_var('func_3083')
func_3085_call = mutated_mod.get_global_var('func_3085')
const_4675 = relay.const([-8.617585,-8.878516,7.060911,-0.027536,-6.026568,4.562479,-0.433787,8.480026,-6.761621,-2.487530,-8.030193,-0.762157,-0.918325,7.021801,-4.601868,-4.048722,3.364830,-9.999288,6.198506,-6.466516,-1.261325,-7.412194,-7.492321,-2.791509,9.415936,-2.455462,-7.019640,5.769085,8.660269,-3.357190,-5.839751,-2.200757,6.328073,-0.489606,0.391994,-8.164134,-5.433442,5.896463,-4.092997,4.632916,-4.888211,-2.518548,-1.436766,-8.867569,-7.289486,-8.034479,9.887760,-1.624148,8.182805,2.405497,-9.395433,-5.137995,-5.267850,6.785244,6.080984,6.857185,-5.863983,-9.974306,8.083381,-6.792139,4.215137,-3.790755,5.606632,-9.659659,3.272370,-6.424603,8.612133,-1.098531,-4.141532,4.867794,5.876156,2.901716,-0.390021,-5.298115,-2.211691,8.787368,8.531312,-0.446787,-9.125359,0.508416,-8.921439,6.803356,5.244653,-9.138977,5.613022,0.068656,-0.590209,9.645081,1.453473,-9.826037,-6.515015,1.616025,-7.946144,7.517795,-5.330601,-6.432792,-3.379742,8.491019,-6.929563,2.237806,4.989903,-6.751996,6.898417,-7.077984,9.052040,5.978079,-7.564025,-8.169066,-0.576283,3.837496,-8.894196,-8.139585,-8.488001,-1.554327,8.688231,-0.866083,4.619036,-7.451166,-7.207189,6.136829,3.223440,-6.989828,7.831277,-8.390452,-2.393705,0.577543,-9.523628,8.004890,3.368089,3.438372,8.153783,6.234815,-3.148321,6.442229,-8.861307,-4.349608,6.644235,5.248554,0.340785,1.610967,7.817182,8.342470,-4.326023,-8.002911,-0.727250,-2.377287,-8.991127,-7.896725,7.440587,5.139623,-3.773999,7.410651,-9.273730,1.919476,3.764464,5.590237,9.555486,-8.731547,0.443584,6.827852,-8.818275,9.346966,4.971878,2.515624,-9.168710,-1.486636,-2.533871,-1.254051,-2.795211,0.414076,-5.325719,-9.853935,8.116351,3.239520,-1.558875,-5.814926,-6.878489,9.095756,-9.385371,-4.107925,7.212436,0.944252,5.302473,9.942856,3.887155,9.854704,1.697819,3.150203,-1.004642,-7.717742,0.519006,7.041142,-5.458690,6.088626,7.739457,2.335024,-4.841063,-0.681807,6.840242,6.092644,-0.261741,-6.818947,4.392304,-1.589866,6.513264,-7.980764,-4.903462,-2.383482,-4.059564,1.386741,-6.524633,-7.324111,1.454321,-6.125141,-1.616443,-9.692104,-5.878230,9.608716,-4.219982,3.750541,-3.446063,9.273248,8.186317,5.197059,6.367704,0.279761,-8.787824,9.263660,-4.632832,-8.087146,7.045719,-5.359702,4.987007,6.375590,0.470281,7.888423,-2.303712,-9.817374,0.184558,4.614685,-1.899517,-1.430975,6.346921,0.940541,3.550225,-2.725563,-1.787285,-8.245318,-6.363323,9.830143,-3.233813,0.138395,2.808069,-0.142771,-0.209612,-2.663253,-4.739917,1.445284,-5.603043,8.610007,-2.498261,-9.599546,-3.388087,-9.892632,3.120524,0.140897,0.971002,-3.719187,-5.513506,1.520586,0.895419,-2.121435,-8.061972,9.311137,-8.388576,-9.318321,-0.695652,9.832616,5.736530,-8.016952,3.992238,-2.950889,-2.639158,-5.775393,4.728938,9.425192,5.945813,-7.635372,1.076040,-4.824395,-6.313346,-9.382539,8.449235,-3.306200,-2.747016,2.126346,-7.187799,-7.853682,0.248562,4.341663,-3.378280,3.663167,-2.694280,5.321153,5.310878,5.322053,-2.164924,-6.559720,2.935299,-4.199141,4.748150,-5.437281,4.057635,4.914949,9.781483,5.108591,7.393807,0.998052,-9.447805,-5.811737,-5.147180,7.746408,6.560976,-5.095981,-1.849923,-0.783909,3.500649,0.329571,4.169547,2.618158,-4.425502,-6.009686,9.136015,9.250708,-2.177965,7.323529,-3.932839,7.882129,-7.096423,-9.072016,-1.535443,0.587075,7.378209,-4.494240,2.064497,8.417969,-2.223615,0.061399,5.499801,5.727953,-3.299829,-0.349698,-0.674357,5.904491,-4.135071,7.543349,-9.721820,-8.173173,-2.694523,8.456317,-8.396848,5.024098,-1.355204,-9.246012,8.218157,-8.037659,-9.349886,-3.020436,-4.436483,1.653845,-3.577590,-7.848597,9.369480,-1.288319,8.241111,1.437095,8.784205,6.487619,-4.637382,3.775665,9.977634,1.596683,4.650156,-7.981119,8.166222,-7.420964,0.461110,5.806481,6.824924,-6.077051,8.366134,-8.521451,-2.076038,-6.096700,6.645934,-7.047290,6.491279,-5.091564,-8.274802,4.686276,-1.947119,8.589526,-5.008233,9.935288,-1.759209,-7.902704,5.707534,-9.857358,-8.523634,-3.002715,1.350382,2.040528,1.770024,4.788585,-8.505665,0.062721,-3.450837,-2.512496,2.758731,-9.492925,9.888254,6.802063,5.102333,-5.269284,9.065661,9.975941,-1.777981,6.766630,-4.404433,3.174210,0.315793,5.333486,2.087989,-4.202945,3.577673,-5.134359,-7.156848,-9.006764,-8.817314,5.914585,2.417424,-2.676929,6.645276,3.038337,-2.084075,0.411391,-3.526691,8.680613,-2.206116,-1.440552,-2.711944,1.517364,0.358405,-0.789525,-5.464285,8.376536,-1.194841,3.032436,9.586401,7.013863,5.363778,-7.999818,7.586661,9.788114,0.875329,-8.829632,8.707523,-8.586032,3.401907,-3.220083,7.265818,0.118441,0.400880,0.052848,-0.586547,-4.988330,7.549499,8.765268,-7.739267,0.432477,-2.290950,8.774263,3.586968,-9.674998,-8.687363,-3.091948,-9.105010,2.958019,6.157655,3.957848,2.792957,2.601638,-2.608888,5.835319,-8.908190,-9.677332,-5.203621,-4.447800,-7.424594,-9.909503,1.963277,-3.688376,7.595655,0.364311,-4.250351,-8.065871,-6.549818,4.728476,-6.367979,4.626935,6.671383,7.435608,6.812179,8.675205,1.298954,-7.461932,-4.625287,-0.557616,-5.125102,-0.838773,-1.531228,-6.641851,5.865699,9.308854,-3.092709,-3.199443,3.220563,-0.238577,7.662049,-3.643164,3.072473,3.822575,0.360473,6.660952,9.939633,-0.528828,-6.204081,-4.687753,-4.140213,1.859542,-2.929626,-3.754888,-3.698720,-3.829432,-0.125616,-3.835354,7.585896,-9.915391,4.942824,-6.523002,2.666900,6.369271,9.624435,2.618740,3.753505,-6.186031,-5.823403,7.495402,0.925880,-0.830503,-1.396049,-4.835948,-1.633903,-6.122539,-3.194336,-5.411757,-7.659552,-4.702396,9.986607,7.525967,-9.871138,-8.635327,3.390281,2.475839,0.891514,-2.559084,-8.785074,6.894542,8.887783,0.536652,-1.157469,-2.160858,8.542284,-7.113905,-8.095061,9.442047,-0.052730,-0.996312,-8.879083,-3.305729,7.296249,4.169490,8.493704,3.793183,9.296436,6.726979,-5.360859,-6.667391,-3.072084,3.549745,-4.625326,4.363764,-0.020209,-5.243397,-6.206991,1.071835,-8.744162,9.998125,4.804895,-8.880779,2.249634,4.646806,4.525956,2.071660,-9.247788,5.019186,-7.525716,1.399425,-4.382546,5.182562,2.939747,-7.298779,6.029185,6.950296,-7.717691,3.664491,1.530137,-7.695302,-3.725236,-6.496651,-6.640361,-9.461793,3.317977,6.965153,1.300923,-0.753866,5.950289,-7.567625,-9.372853,-0.843203,-9.007837,0.088556,-5.543470,-9.352148,2.755266,4.670976,-9.421611,-1.879545,-6.141473,0.127658,-2.663925,-5.900021,6.550193,3.572605,-1.491644,-7.220924,8.916460,9.171836,9.358997,9.885832,-1.467863,-4.443440,-9.161758,-3.204298,3.080975,-2.522779,5.604531,1.583017,-4.983837,2.837398,-6.937804,7.784140,9.820962,8.686211,-1.335139,0.338924,-4.539509,-5.041882,1.448472,7.292858,-4.923657,-4.227330,-7.739398,-0.744899,-6.783662,7.036566,-7.983051,4.863160,0.095052,-6.042103,1.173108,4.418229,-1.579566,-7.895535,-4.938741,-7.020738,2.177369,2.803073,-6.781429,-6.600305,3.372866,-0.240610,-5.670280,3.537606,-6.284355,-7.675413,1.937451,9.296897,9.997305,5.354644,0.732064,-1.061232,3.468418,-8.585082,-1.494409,-0.428840,8.515094,7.961530,-5.043260,7.980271,-3.263070,-3.125534,7.722961,2.547918,3.533390,1.032433,-8.907924,-6.526594,5.379553,-6.735817,0.587560,9.365646,2.733281,3.730740,9.992315,-1.628570,-5.197672,0.094488,8.064411,-5.970951,-3.630014,3.329639,2.975227,-0.705590,0.397982,-8.963979,6.499701,1.463878,-5.090192,3.605429,2.857405,-8.439564,-0.107041,-7.103956,-4.604718,6.387484,-3.869284,-8.921593,-5.114220,-6.182848,5.136311,-5.606114,-9.340480,2.422235,-7.781214,-3.727055,-8.920163,0.406867], dtype = "float32")#candidate|4675|(768,)|const|float32
call_4674 = relay.TupleGetItem(func_3083_call(relay.reshape(const_4675.astype('float32'), [768,])), 4)
call_4676 = relay.TupleGetItem(func_3085_call(relay.reshape(const_4675.astype('float32'), [768,])), 4)
output = relay.Tuple([call_4672,call_4674,const_4675,])
output2 = relay.Tuple([call_4673,call_4676,const_4675,])
func_4679 = relay.Function([], output)
mod['func_4679'] = func_4679
mod = relay.transform.InferType()(mod)
mutated_mod['func_4679'] = func_4679
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4679_call = mutated_mod.get_global_var('func_4679')
call_4680 = func_4679_call()
output = call_4680
func_4681 = relay.Function([], output)
mutated_mod['func_4681'] = func_4681
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3808_call = mod.get_global_var('func_3808')
func_3809_call = mutated_mod.get_global_var('func_3809')
call_4699 = func_3808_call()
call_4700 = func_3808_call()
uop_4717 = relay.log(call_4699.astype('float64')) # shape=(10, 2, 15)
uop_4719 = relay.log(call_4700.astype('float64')) # shape=(10, 2, 15)
func_4069_call = mod.get_global_var('func_4069')
func_4071_call = mutated_mod.get_global_var('func_4071')
call_4731 = func_4069_call(relay.reshape(call_4699.astype('uint8'), [10, 2, 15]))
call_4732 = func_4069_call(relay.reshape(call_4699.astype('uint8'), [10, 2, 15]))
func_3754_call = mod.get_global_var('func_3754')
func_3756_call = mutated_mod.get_global_var('func_3756')
call_4738 = func_3754_call()
call_4739 = func_3754_call()
func_4304_call = mod.get_global_var('func_4304')
func_4307_call = mutated_mod.get_global_var('func_4307')
const_4744 = relay.const([[8.314952],[-5.574133],[1.711724],[-2.799659],[-2.296839],[-9.112217],[5.652141],[5.296928],[5.663462],[4.192653],[-9.224485],[3.275962],[-6.355727],[8.087153],[-2.632667],[-2.153380],[5.353792],[4.287245],[-7.462261],[5.949447],[-6.106186],[-5.162099],[5.267996],[2.954391],[-2.758972],[-7.250680],[-9.819921],[7.457431],[-9.499779],[4.120878],[1.585335],[-7.959403],[-4.284807],[0.426098],[5.427252],[6.353555],[-6.567112],[0.263085],[-8.466314],[-1.211205],[4.091243],[9.643644],[0.294258],[-1.286895],[9.445717],[-6.029685],[-9.001569],[-9.506028],[-4.170861],[1.981040],[-1.999552],[-5.135240],[3.970269],[-1.723554],[-4.545317],[-0.684292],[6.041292],[2.969330],[6.651719],[-7.651779],[7.504351],[4.569232],[2.830907],[-6.133575],[3.538236],[7.074098],[-6.501749],[-4.651473],[4.256971],[3.700600],[-7.499760],[7.614404],[-2.113719],[-1.530954],[0.896668],[-8.095348],[0.285191],[-0.232062],[0.640033],[-4.505104],[-8.544057],[-3.627605],[7.317076],[-5.094627],[-7.697272],[-9.952423],[-6.006990],[-5.885828],[-8.221444],[-5.077491],[-2.845785],[-4.997942],[-0.382387],[-3.182606],[6.016762],[-1.976412],[9.690631],[3.745917],[9.587148],[4.033810],[8.054211],[-1.679526],[-9.847903],[-3.832667],[6.531583],[-8.919547],[-7.753627],[4.574552],[4.518435],[-8.575721],[7.743602],[-0.344565],[-0.376173],[7.137518],[-0.289252],[0.927261],[9.190629],[0.823388],[-0.720548],[-3.098873],[-0.894159],[3.610154],[-3.940378],[2.743361],[0.667654],[-9.643918],[-2.765785],[7.978943],[-1.276020],[-2.969486],[6.682183],[0.748660],[-4.135129],[-5.017219],[-7.787630],[-6.442605],[6.400321],[8.820441],[6.715587],[7.256988],[9.817611],[0.705923],[7.272971],[-4.024780],[1.829022],[-3.120184],[-0.014829],[4.680023],[-5.739066],[5.207223],[6.423242],[3.356914],[-9.035176],[-4.757240],[7.855720],[-1.003878],[0.018643],[-1.471015],[-5.288324],[6.681926],[4.094987],[-7.101856],[0.923762],[-3.931754],[-1.198632],[-3.300599],[-9.655977],[-5.925553],[9.066804],[-6.570104],[0.879106],[2.543255],[-2.006102],[2.112500],[-2.427345],[-1.398641],[-7.144309],[3.283997],[7.012627],[7.891235],[9.341836],[2.587011],[0.433490],[-3.184528],[-9.460192],[5.538920],[0.315340],[-5.194042],[-2.145632],[-4.625649],[-9.032275],[-0.635694],[-4.191852],[-1.899012],[-2.992168],[8.741144],[-2.333570],[1.870971],[-7.315263],[-7.890613],[-0.765548],[-6.263944],[-1.667625],[1.760731],[-1.800171],[0.749844],[-2.251770],[6.103349],[8.784680],[-9.295901],[9.978711],[0.548691],[-3.351448],[9.202963],[9.112420],[7.611819],[6.555670],[7.014099],[4.113165],[-4.375797],[7.800989],[-6.484373],[-1.906823],[-1.018281],[-8.950507],[6.475551],[-5.144277],[8.047283],[3.127739],[8.605543],[-6.645114],[-5.489371],[3.266893],[2.513350],[-6.064849],[-7.661246],[2.620896],[3.145566],[8.361934],[9.658910],[3.457248],[2.064558],[3.247388],[-7.109779],[-6.534794],[7.835688],[0.844412],[-4.209992],[-6.461451],[1.392704],[-8.462370],[-4.359231],[-9.648568],[8.080206],[6.498005],[3.306823],[9.373884],[-2.979427],[0.491686],[2.465216],[-1.129447],[-1.547090],[-0.608885],[-2.658246],[-1.843832],[9.611026],[-9.337138],[-2.576274],[3.453693],[-7.297412],[-4.240934],[8.850457],[-5.054253],[4.823510],[7.141176],[3.704237],[0.924583],[0.683942],[6.630473],[-2.927040],[1.229151],[-8.589713],[5.122366],[-8.967618],[-7.463830],[4.961632],[0.331607],[-6.327578],[-0.736265],[8.637724],[-3.312414],[-0.263857],[5.294702],[8.803163],[2.875603],[-0.743509],[8.156730],[-8.587555],[-0.092188],[5.427911],[5.456779],[8.272743],[-9.398303],[5.785434],[3.365021],[-0.421335],[4.792609],[-1.720141],[-0.827224],[2.981256],[4.054826],[-6.583042],[-4.169121],[-0.267962],[6.862534],[6.803381],[-9.498386],[2.789228],[-6.673196],[-7.105910],[-0.289537],[3.002632],[5.813459],[-5.761007],[7.143683],[4.125850],[8.550338],[5.978114],[3.961060],[-6.488368],[-1.471256],[1.418961],[4.181265],[0.014629],[2.175979],[8.049322],[-7.444878],[-4.172739],[-6.003896],[5.819777],[-8.188094],[2.692072],[-8.582966],[-6.688588],[-1.006135],[-3.991326],[-9.067509],[0.061814],[2.312737],[-7.905719],[-2.232436],[-1.646435],[-2.006634],[-9.499947],[4.870996],[3.583896],[6.835350],[6.041725],[0.177989],[2.096708],[8.350818],[-1.795680],[9.787232],[4.361166],[-8.566460],[-5.862694],[3.667720],[0.563072],[5.778150],[4.143252],[9.291954],[-9.787916],[6.549208],[-4.488984],[0.993874],[-3.085093],[-3.760772],[1.519830],[-9.220365],[-0.764977],[-9.289434],[-3.473109],[4.204801],[4.980601],[5.203673],[4.762430],[2.344118],[4.092170],[3.872975],[-1.273732],[5.982373],[9.279041],[3.017962],[-7.346893],[3.952710],[2.411719],[1.141362],[-7.702811],[6.866308],[6.707483],[-6.223565],[-0.899782],[-0.282079],[-9.841214],[0.144451],[9.969903],[4.880195],[-2.485760],[3.744352],[-2.993984],[6.315662],[-7.937242],[5.849637],[9.139164],[-6.110949],[-9.494202],[9.592982],[1.593400],[-3.713588],[-2.505936],[-9.329097],[5.772466],[-8.337832],[-2.884087],[-2.009818],[6.359652],[-6.020135],[-3.294152],[-2.196441],[8.633949],[-8.057552],[5.896805],[-4.315319],[2.779923],[-9.441096],[-7.396521],[3.525634],[-7.337533],[-9.177232],[7.446517],[5.972175],[-1.224259],[-8.295511],[-3.690904],[7.464456],[-0.777774],[6.453302],[4.040921],[-7.977842],[-5.721240],[-3.851041],[9.512528],[-0.629030],[-6.231388],[-3.293430],[2.325801],[-3.938162],[-4.309923],[-4.282546],[2.044933],[-2.474974],[4.108887],[1.071898],[2.816595],[-2.794605],[-6.583277],[-7.661808],[-4.627366],[6.396707],[2.157926],[5.928841],[1.923408],[2.543138],[-5.000901],[-9.561505],[5.405137],[3.162134],[-4.233703],[4.809117],[-9.965077],[-1.153681],[0.114748],[-2.629042],[5.979319],[-3.020973],[-3.263532],[-7.809839],[9.356315],[6.988996],[1.012403],[9.899220],[-8.277005],[-0.049368],[1.206066],[-5.552156],[0.326191],[-5.226883],[5.232985],[-0.369685],[-9.884035],[-1.932580],[-4.179215],[-9.800952],[-0.327480],[-0.450735],[-6.356134],[-8.097205],[-9.873683],[4.432976],[-2.254044],[-2.178468],[-4.959364],[-9.562469],[0.404713],[6.767361],[7.828948],[-9.790191],[-3.663601],[6.809814],[-7.722727],[-1.147523],[0.961449],[7.844077],[1.847955],[4.061025],[-4.853399],[1.165823],[-2.802224],[0.889202],[3.670017],[2.868526],[-0.295258],[-2.793380],[8.440563],[6.068369],[5.462610],[-3.791718],[-3.526497],[7.141251],[-6.811536],[3.126266],[-9.332532],[-7.766427],[5.832996],[-2.372682],[-3.166420],[8.836494],[-2.467389],[5.294902],[-3.889552],[9.903278],[-7.437484],[-8.732913],[-3.076794],[9.599457],[0.448727],[2.432321],[2.358028],[-3.712367],[3.179414],[9.570259],[4.081560],[-4.992553],[8.979070],[5.007383],[-9.115390],[0.694662],[-5.478291],[9.384375],[5.854373],[6.714641],[-6.778152],[-3.221018],[-2.821361],[-6.662894],[-4.048221],[6.126191],[-1.443869],[9.934353],[1.003551],[5.464612],[9.316756],[7.147432],[5.661409],[-9.024666],[0.518526],[3.772024],[4.320599],[9.767572],[-9.697034],[1.125283],[-8.479641],[-1.585708],[0.770284],[-9.577102],[-9.738315],[-1.321007],[-8.482220],[1.092369],[9.359943],[9.256875],[-8.719885],[-3.015337],[-5.951269],[6.739161],[8.679744],[4.077239],[-0.286121],[-0.052938],[5.048766],[-2.514682],[1.822348],[-7.549300],[-2.544337],[2.827583],[0.836906],[-6.298456],[5.424865],[2.620967],[4.294343],[-7.642015],[-8.373155],[-1.447751],[-1.047627],[-2.279373],[5.506690],[9.570355],[2.329508],[-9.837981],[-6.989379],[2.412973],[-1.939789],[5.078595],[-5.441479],[-6.462950],[1.488873],[-2.637990],[-7.153646],[-2.989881],[-1.557394],[6.597567],[-4.566799],[-1.234685],[-6.529511],[7.536384],[-3.847530],[-1.111801],[4.348971],[-2.929814],[9.512793],[1.739576],[2.270826],[-6.634008],[-9.883450],[-8.641711],[3.739729],[-7.298060],[2.514882],[1.712943],[3.779518],[-2.690671],[-6.900374],[2.062494],[-0.774330],[1.223402],[-8.323691],[-4.197710],[5.527821],[6.186627],[-3.770646],[-2.791866],[9.006982],[8.187406],[3.784399],[-1.087318],[8.140127],[-4.586324],[-6.641767],[8.654379],[0.795156],[-1.367669],[7.398078],[0.591223],[0.684681],[-8.137023],[0.491495],[4.209237],[2.741523],[0.203097],[4.759609],[-5.541029],[-2.598143],[-7.267206],[-4.671074],[2.554044],[2.182723],[6.458351],[-4.385985],[9.915304],[1.872346],[6.229368],[-3.289920],[-6.283061],[7.461762],[-9.234031],[4.198419],[-1.936960],[9.328082],[-7.050936],[-4.287506],[1.819113],[4.888148],[6.819198],[4.407491],[3.094180],[-2.390726],[6.768404],[0.770186],[9.101767],[2.366300],[-7.812993],[-7.589760],[-6.532457],[1.686923],[4.069595],[-6.463549],[0.817096],[8.222575],[-3.392245],[4.582537],[0.809826],[-2.189815],[-2.950689],[-9.342196],[1.222388],[3.824348],[3.118657],[-3.276572],[7.444288],[-0.827688],[3.800854],[4.362918],[3.276354],[0.071100],[-9.062768],[5.535001],[3.182602],[-1.418782],[-1.577504],[3.454521],[9.934494],[1.305157],[-8.117033],[-6.110457],[5.359958],[-8.411612],[-2.150593],[-6.079495],[-8.536628],[2.052387],[-9.880933],[-5.029653],[-6.968514],[-1.406197],[-5.361130],[-0.414083],[-2.931613],[-1.772875]], dtype = "float32")#candidate|4744|(768, 1)|const|float32
call_4743 = relay.TupleGetItem(func_4304_call(relay.reshape(const_4744.astype('float32'), [768,])), 3)
call_4745 = relay.TupleGetItem(func_4307_call(relay.reshape(const_4744.astype('float32'), [768,])), 3)
bop_4746 = relay.divide(uop_4717.astype('float64'), relay.reshape(call_4738.astype('float64'), relay.shape_of(uop_4717))) # shape=(10, 2, 15)
bop_4749 = relay.divide(uop_4719.astype('float64'), relay.reshape(call_4739.astype('float64'), relay.shape_of(uop_4719))) # shape=(10, 2, 15)
output = relay.Tuple([call_4731,call_4743,const_4744,bop_4746,])
output2 = relay.Tuple([call_4732,call_4745,const_4744,bop_4749,])
func_4757 = relay.Function([], output)
mod['func_4757'] = func_4757
mod = relay.transform.InferType()(mod)
output = func_4757()
func_4758 = relay.Function([], output)
mutated_mod['func_4758'] = func_4758
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3754_call = mod.get_global_var('func_3754')
func_3756_call = mutated_mod.get_global_var('func_3756')
call_4770 = func_3754_call()
call_4771 = func_3754_call()
func_3913_call = mod.get_global_var('func_3913')
func_3916_call = mutated_mod.get_global_var('func_3916')
var_4779 = relay.var("var_4779", dtype = "float64", shape = ())#candidate|4779|()|var|float64
const_4780 = relay.const([9.300182,-5.007281,8.987215,-8.210502,-9.226794,-0.765792,1.282854,-9.277223,9.982262,2.293721,-3.844385,3.317380,-4.040936,-6.458299,6.137971,-8.031692,-7.876658,0.175401,4.466045,-5.384044,-7.385093,6.157525,1.025209,3.842173,-4.566223,-1.661700,-6.493686,-3.837099,8.317039,-2.997661,3.026494,-9.739596,5.793906,-4.064368,1.242373,-1.792259,8.300636,7.923017,4.533138,9.411663,4.184762,6.161705,0.897295,-2.318110,-0.814046,-8.983723,5.263578,8.572295,-9.448527,6.789185,-1.909072,7.992827,9.157150,-5.218526,2.295938,-5.203244,7.976207,-8.720723,-7.512473,-6.974294,-4.648805,-5.842503,8.114945,-3.661025,1.655693,4.388721,-1.145811,3.475582,3.793240,-8.360111,0.983423,6.540609,-4.884816,-0.679235,-9.199726,4.642372,1.368876,0.489187,9.719637,-6.448613,5.909786,-5.419998,-7.623244,-2.473272,-7.938435,-9.094855,2.573091,-8.177029,8.989482,-2.241235,0.094439,-9.952567,-9.721221,7.934072,-2.570832,-2.594044,3.259176,2.842390,0.102577,6.317981,-4.250880,3.652245,4.684197,-9.991101,-8.056997,0.766427,-1.323762,-0.888466,7.921412,3.704938,8.289345,6.352862,-6.725264,-0.356939,-7.760591,2.235940,6.090088,2.628609,3.947061,-1.604291,-0.310895,3.623914,8.609194,7.857854,-2.656178,-4.268661,9.542483,-3.856744,-0.870397,1.179109,5.301320,-0.949685], dtype = "float64")#candidate|4780|(132,)|const|float64
call_4778 = relay.TupleGetItem(func_3913_call(relay.reshape(var_4779.astype('float64'), []), relay.reshape(const_4780.astype('float64'), [1, 11, 12]), ), 2)
call_4781 = relay.TupleGetItem(func_3916_call(relay.reshape(var_4779.astype('float64'), []), relay.reshape(const_4780.astype('float64'), [1, 11, 12]), ), 2)
output = relay.Tuple([call_4770,call_4778,var_4779,const_4780,])
output2 = relay.Tuple([call_4771,call_4781,var_4779,const_4780,])
func_4798 = relay.Function([var_4779,], output)
mod['func_4798'] = func_4798
mod = relay.transform.InferType()(mod)
mutated_mod['func_4798'] = func_4798
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4799 = relay.var("var_4799", dtype = "float64", shape = ())#candidate|4799|()|var|float64
func_4798_call = mutated_mod.get_global_var('func_4798')
call_4800 = func_4798_call(var_4799)
output = call_4800
func_4801 = relay.Function([var_4799], output)
mutated_mod['func_4801'] = func_4801
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4757_call = mod.get_global_var('func_4757')
func_4758_call = mutated_mod.get_global_var('func_4758')
call_4831 = relay.TupleGetItem(func_4757_call(), 2)
call_4832 = relay.TupleGetItem(func_4758_call(), 2)
uop_4847 = relay.exp(call_4831.astype('float64')) # shape=(768, 1)
uop_4849 = relay.exp(call_4832.astype('float64')) # shape=(768, 1)
func_3808_call = mod.get_global_var('func_3808')
func_3809_call = mutated_mod.get_global_var('func_3809')
call_4850 = func_3808_call()
call_4851 = func_3808_call()
func_3808_call = mod.get_global_var('func_3808')
func_3809_call = mutated_mod.get_global_var('func_3809')
call_4854 = func_3808_call()
call_4855 = func_3808_call()
output = relay.Tuple([uop_4847,call_4850,call_4854,])
output2 = relay.Tuple([uop_4849,call_4851,call_4855,])
func_4869 = relay.Function([], output)
mod['func_4869'] = func_4869
mod = relay.transform.InferType()(mod)
mutated_mod['func_4869'] = func_4869
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4869_call = mutated_mod.get_global_var('func_4869')
call_4870 = func_4869_call()
output = call_4870
func_4871 = relay.Function([], output)
mutated_mod['func_4871'] = func_4871
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3742_call = mod.get_global_var('func_3742')
func_3743_call = mutated_mod.get_global_var('func_3743')
call_4929 = relay.TupleGetItem(func_3742_call(), 0)
call_4930 = relay.TupleGetItem(func_3743_call(), 0)
output = relay.Tuple([call_4929,])
output2 = relay.Tuple([call_4930,])
func_4936 = relay.Function([], output)
mod['func_4936'] = func_4936
mod = relay.transform.InferType()(mod)
output = func_4936()
func_4937 = relay.Function([], output)
mutated_mod['func_4937'] = func_4937
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3754_call = mod.get_global_var('func_3754')
func_3756_call = mutated_mod.get_global_var('func_3756')
call_4938 = func_3754_call()
call_4939 = func_3754_call()
uop_4942 = relay.sin(call_4938.astype('float32')) # shape=(10, 2, 15)
uop_4944 = relay.sin(call_4939.astype('float32')) # shape=(10, 2, 15)
output = uop_4942
output2 = uop_4944
func_4946 = relay.Function([], output)
mod['func_4946'] = func_4946
mod = relay.transform.InferType()(mod)
output = func_4946()
func_4947 = relay.Function([], output)
mutated_mod['func_4947'] = func_4947
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4869_call = mod.get_global_var('func_4869')
func_4871_call = mutated_mod.get_global_var('func_4871')
call_4978 = relay.TupleGetItem(func_4869_call(), 0)
call_4979 = relay.TupleGetItem(func_4871_call(), 0)
output = relay.Tuple([call_4978,])
output2 = relay.Tuple([call_4979,])
func_4987 = relay.Function([], output)
mod['func_4987'] = func_4987
mod = relay.transform.InferType()(mod)
output = func_4987()
func_4988 = relay.Function([], output)
mutated_mod['func_4988'] = func_4988
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3742_call = mod.get_global_var('func_3742')
func_3743_call = mutated_mod.get_global_var('func_3743')
call_4994 = relay.TupleGetItem(func_3742_call(), 0)
call_4995 = relay.TupleGetItem(func_3743_call(), 0)
func_4160_call = mod.get_global_var('func_4160')
func_4162_call = mutated_mod.get_global_var('func_4162')
call_5012 = func_4160_call()
call_5013 = func_4160_call()
output = relay.Tuple([call_4994,call_5012,])
output2 = relay.Tuple([call_4995,call_5013,])
func_5019 = relay.Function([], output)
mod['func_5019'] = func_5019
mod = relay.transform.InferType()(mod)
mutated_mod['func_5019'] = func_5019
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5019_call = mutated_mod.get_global_var('func_5019')
call_5020 = func_5019_call()
output = call_5020
func_5021 = relay.Function([], output)
mutated_mod['func_5021'] = func_5021
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3742_call = mod.get_global_var('func_3742')
func_3743_call = mutated_mod.get_global_var('func_3743')
call_5031 = relay.TupleGetItem(func_3742_call(), 0)
call_5032 = relay.TupleGetItem(func_3743_call(), 0)
func_3754_call = mod.get_global_var('func_3754')
func_3756_call = mutated_mod.get_global_var('func_3756')
call_5039 = func_3754_call()
call_5040 = func_3754_call()
func_4987_call = mod.get_global_var('func_4987')
func_4988_call = mutated_mod.get_global_var('func_4988')
call_5054 = relay.TupleGetItem(func_4987_call(), 0)
call_5055 = relay.TupleGetItem(func_4988_call(), 0)
output = relay.Tuple([call_5031,call_5039,call_5054,])
output2 = relay.Tuple([call_5032,call_5040,call_5055,])
func_5060 = relay.Function([], output)
mod['func_5060'] = func_5060
mod = relay.transform.InferType()(mod)
mutated_mod['func_5060'] = func_5060
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5060_call = mutated_mod.get_global_var('func_5060')
call_5061 = func_5060_call()
output = call_5061
func_5062 = relay.Function([], output)
mutated_mod['func_5062'] = func_5062
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4946_call = mod.get_global_var('func_4946')
func_4947_call = mutated_mod.get_global_var('func_4947')
call_5079 = func_4946_call()
call_5080 = func_4946_call()
output = call_5079
output2 = call_5080
func_5083 = relay.Function([], output)
mod['func_5083'] = func_5083
mod = relay.transform.InferType()(mod)
mutated_mod['func_5083'] = func_5083
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5083_call = mutated_mod.get_global_var('func_5083')
call_5084 = func_5083_call()
output = call_5084
func_5085 = relay.Function([], output)
mutated_mod['func_5085'] = func_5085
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4987_call = mod.get_global_var('func_4987')
func_4988_call = mutated_mod.get_global_var('func_4988')
call_5148 = relay.TupleGetItem(func_4987_call(), 0)
call_5149 = relay.TupleGetItem(func_4988_call(), 0)
uop_5150 = relay.acosh(call_5148.astype('float64')) # shape=(768, 1)
uop_5152 = relay.acosh(call_5149.astype('float64')) # shape=(768, 1)
bop_5156 = relay.equal(uop_5150.astype('bool'), relay.reshape(call_5148.astype('bool'), relay.shape_of(uop_5150))) # shape=(768, 1)
bop_5159 = relay.equal(uop_5152.astype('bool'), relay.reshape(call_5149.astype('bool'), relay.shape_of(uop_5152))) # shape=(768, 1)
output = bop_5156
output2 = bop_5159
func_5160 = relay.Function([], output)
mod['func_5160'] = func_5160
mod = relay.transform.InferType()(mod)
output = func_5160()
func_5161 = relay.Function([], output)
mutated_mod['func_5161'] = func_5161
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4160_call = mod.get_global_var('func_4160')
func_4162_call = mutated_mod.get_global_var('func_4162')
call_5167 = func_4160_call()
call_5168 = func_4160_call()
func_5160_call = mod.get_global_var('func_5160')
func_5161_call = mutated_mod.get_global_var('func_5161')
call_5184 = func_5160_call()
call_5185 = func_5160_call()
func_5060_call = mod.get_global_var('func_5060')
func_5062_call = mutated_mod.get_global_var('func_5062')
call_5197 = relay.TupleGetItem(func_5060_call(), 1)
call_5198 = relay.TupleGetItem(func_5062_call(), 1)
func_352_call = mod.get_global_var('func_352')
func_356_call = mutated_mod.get_global_var('func_356')
var_5202 = relay.var("var_5202", dtype = "int8", shape = (512,))#candidate|5202|(512,)|var|int8
call_5201 = func_352_call(relay.reshape(var_5202.astype('int8'), [8, 8, 8]), relay.reshape(var_5202.astype('int8'), [8, 8, 8]), )
call_5203 = func_352_call(relay.reshape(var_5202.astype('int8'), [8, 8, 8]), relay.reshape(var_5202.astype('int8'), [8, 8, 8]), )
func_1978_call = mod.get_global_var('func_1978')
func_1981_call = mutated_mod.get_global_var('func_1981')
const_5206 = relay.const([[8.124410,-5.297428,-0.526236,-7.591606,7.825565,7.632095],[-6.869343,-5.060239,-0.189356,-8.608020,-3.253641,2.181010],[-2.294305,-3.066662,2.095113,3.141825,0.639191,-6.558478],[-4.181427,9.365419,3.480999,4.108793,2.179096,0.387044],[-9.011167,-3.577867,-3.363140,-7.584055,-9.836244,-7.706173],[-7.102410,-7.966048,9.228454,3.179941,0.109038,-2.610403],[8.302549,-3.566350,2.674285,4.048503,2.142842,-4.033680],[9.270625,9.415954,-3.106537,-8.766824,3.860487,-0.479916],[9.285319,-3.244163,5.382617,6.839247,-9.068178,4.144034],[-2.930978,4.064764,-3.272419,1.267860,-8.861691,3.636538],[-8.683324,6.544472,-1.234573,6.470059,-7.267286,-6.812928],[-2.441054,-2.798571,9.993145,-1.271847,-2.119492,1.295399],[-7.313125,2.820917,3.336289,8.775728,-8.326896,2.181608],[-0.955361,-9.847368,-5.447928,-0.865883,-6.996770,5.216575],[-1.982837,0.719114,7.296335,1.709937,-5.662531,1.411206],[7.940588,0.740452,8.087412,-2.111650,6.268153,-1.327444],[1.364381,-3.599958,-0.023111,5.050889,-0.881504,1.615990],[-5.985831,6.808780,4.851236,-2.732421,9.651543,-5.494013],[5.981465,-9.427762,0.494843,-3.043795,-9.042380,5.007978],[4.231336,5.980037,5.204952,2.021359,-8.449503,-3.737864],[8.816691,-6.887259,8.569049,-3.407501,-8.959109,6.957511],[5.754067,-7.497722,3.778686,-2.570627,9.372520,-2.182054],[7.123455,-9.998751,-4.781818,9.960618,4.873080,-5.163691],[3.935898,3.592173,2.176463,5.985846,7.010427,-7.888344],[8.707153,7.948473,0.534458,-6.290684,3.634327,-8.828195],[0.899388,-7.493262,5.960288,1.407954,2.967966,-3.932185],[-6.426448,2.171989,-3.385735,-4.478964,5.949761,-3.778604],[9.854819,3.636601,2.761312,-7.552453,2.996149,5.133890],[5.971123,2.840290,-8.949395,7.285075,-4.632340,-4.454296],[2.018368,-4.009457,-1.442827,1.747574,2.470197,-2.832481],[-4.104264,-0.607015,2.724680,-5.282277,-9.444577,6.980612],[-6.277909,0.194340,-3.703871,1.348151,-6.386128,-6.583266],[-0.702180,-3.152623,-9.704289,-0.850461,5.396178,-0.396897],[-5.204111,9.873284,7.811456,2.104746,-5.033387,-2.753554],[-4.738389,-7.886015,5.450504,8.180546,-6.616680,-9.115240],[8.158328,1.735254,7.164382,0.421138,-1.626500,-3.412059],[-9.119721,3.482798,5.735416,3.274516,6.522682,-9.159277],[-5.076239,-2.732108,-4.177011,1.296884,5.883357,-7.366837],[-5.341570,9.822476,2.573984,-5.787824,2.547908,-3.943499],[8.034135,5.141321,5.093963,-1.846602,5.177917,-7.801505],[8.722294,3.035906,-0.357226,5.992707,-9.491981,8.530346],[-5.827995,3.449537,-8.044890,-7.743786,8.354775,-0.331796],[-8.082255,-2.976764,-5.696082,6.591323,-9.810538,-1.441659],[-3.800560,4.111744,-3.602574,-1.968348,8.611369,4.525102],[6.066296,8.030518,4.653250,6.787982,-2.434401,4.068488],[-9.524141,-4.588534,-6.394786,6.521746,-8.112156,5.735655],[-9.258386,-8.066359,0.463344,8.863472,4.159831,7.762174],[-4.654738,-6.683667,-4.956269,0.342706,-0.279447,9.501797],[9.508913,-5.898790,9.413018,-7.514546,9.192893,4.239900],[-4.175096,-4.652001,-5.789692,-5.649537,-4.512060,6.251201],[6.193535,-3.644317,9.461273,-5.727430,-9.239781,-5.603007],[-8.325415,5.373163,2.580149,-7.308545,7.487824,-9.830831],[-2.955236,4.638927,1.081054,5.666653,6.221279,8.145957],[8.244956,5.701362,-3.698878,5.204949,3.324273,-4.917674]], dtype = "float32")#candidate|5206|(54, 6)|const|float32
call_5205 = relay.TupleGetItem(func_1978_call(relay.reshape(const_5206.astype('float32'), [4, 9, 9]), relay.reshape(const_5206.astype('float32'), [4, 9, 9]), ), 0)
call_5207 = relay.TupleGetItem(func_1981_call(relay.reshape(const_5206.astype('float32'), [4, 9, 9]), relay.reshape(const_5206.astype('float32'), [4, 9, 9]), ), 0)
func_4869_call = mod.get_global_var('func_4869')
func_4871_call = mutated_mod.get_global_var('func_4871')
call_5210 = relay.TupleGetItem(func_4869_call(), 2)
call_5211 = relay.TupleGetItem(func_4871_call(), 2)
func_3998_call = mod.get_global_var('func_3998')
func_4000_call = mutated_mod.get_global_var('func_4000')
call_5219 = relay.TupleGetItem(func_3998_call(relay.reshape(const_5206.astype('float32'), [324, 1])), 6)
call_5220 = relay.TupleGetItem(func_4000_call(relay.reshape(const_5206.astype('float32'), [324, 1])), 6)
uop_5235 = relay.atanh(call_5205.astype('float32')) # shape=(4, 9, 9)
uop_5237 = relay.atanh(call_5207.astype('float32')) # shape=(4, 9, 9)
func_5083_call = mod.get_global_var('func_5083')
func_5085_call = mutated_mod.get_global_var('func_5085')
call_5238 = func_5083_call()
call_5239 = func_5083_call()
func_3933_call = mod.get_global_var('func_3933')
func_3935_call = mutated_mod.get_global_var('func_3935')
call_5252 = func_3933_call()
call_5253 = func_3933_call()
func_5019_call = mod.get_global_var('func_5019')
func_5021_call = mutated_mod.get_global_var('func_5021')
call_5266 = relay.TupleGetItem(func_5019_call(), 1)
call_5267 = relay.TupleGetItem(func_5021_call(), 1)
func_4936_call = mod.get_global_var('func_4936')
func_4937_call = mutated_mod.get_global_var('func_4937')
call_5273 = relay.TupleGetItem(func_4936_call(), 0)
call_5274 = relay.TupleGetItem(func_4937_call(), 0)
output = relay.Tuple([call_5167,call_5184,call_5197,call_5201,var_5202,const_5206,call_5210,call_5219,uop_5235,call_5238,call_5252,call_5266,call_5273,])
output2 = relay.Tuple([call_5168,call_5185,call_5198,call_5203,var_5202,const_5206,call_5211,call_5220,uop_5237,call_5239,call_5253,call_5267,call_5274,])
func_5276 = relay.Function([var_5202,], output)
mod['func_5276'] = func_5276
mod = relay.transform.InferType()(mod)
var_5277 = relay.var("var_5277", dtype = "int8", shape = (512,))#candidate|5277|(512,)|var|int8
output = func_5276(var_5277)
func_5278 = relay.Function([var_5277], output)
mutated_mod['func_5278'] = func_5278
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4679_call = mod.get_global_var('func_4679')
func_4681_call = mutated_mod.get_global_var('func_4681')
call_5327 = relay.TupleGetItem(func_4679_call(), 2)
call_5328 = relay.TupleGetItem(func_4681_call(), 2)
uop_5337 = relay.log10(call_5327.astype('float32')) # shape=(768,)
uop_5339 = relay.log10(call_5328.astype('float32')) # shape=(768,)
output = relay.Tuple([uop_5337,])
output2 = relay.Tuple([uop_5339,])
func_5342 = relay.Function([], output)
mod['func_5342'] = func_5342
mod = relay.transform.InferType()(mod)
output = func_5342()
func_5343 = relay.Function([], output)
mutated_mod['func_5343'] = func_5343
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4946_call = mod.get_global_var('func_4946')
func_4947_call = mutated_mod.get_global_var('func_4947')
call_5347 = func_4946_call()
call_5348 = func_4946_call()
func_4304_call = mod.get_global_var('func_4304')
func_4307_call = mutated_mod.get_global_var('func_4307')
var_5350 = relay.var("var_5350", dtype = "float32", shape = (768,))#candidate|5350|(768,)|var|float32
call_5349 = relay.TupleGetItem(func_4304_call(relay.reshape(var_5350.astype('float32'), [768,])), 2)
call_5351 = relay.TupleGetItem(func_4307_call(relay.reshape(var_5350.astype('float32'), [768,])), 2)
output = relay.Tuple([call_5347,call_5349,var_5350,])
output2 = relay.Tuple([call_5348,call_5351,var_5350,])
func_5363 = relay.Function([var_5350,], output)
mod['func_5363'] = func_5363
mod = relay.transform.InferType()(mod)
mutated_mod['func_5363'] = func_5363
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5364 = relay.var("var_5364", dtype = "float32", shape = (768,))#candidate|5364|(768,)|var|float32
func_5363_call = mutated_mod.get_global_var('func_5363')
call_5365 = func_5363_call(var_5364)
output = call_5365
func_5366 = relay.Function([var_5364], output)
mutated_mod['func_5366'] = func_5366
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4757_call = mod.get_global_var('func_4757')
func_4758_call = mutated_mod.get_global_var('func_4758')
call_5400 = relay.TupleGetItem(func_4757_call(), 1)
call_5401 = relay.TupleGetItem(func_4758_call(), 1)
uop_5415 = relay.sigmoid(call_5400.astype('float32')) # shape=(10, 2, 15)
uop_5417 = relay.sigmoid(call_5401.astype('float32')) # shape=(10, 2, 15)
func_4757_call = mod.get_global_var('func_4757')
func_4758_call = mutated_mod.get_global_var('func_4758')
call_5450 = relay.TupleGetItem(func_4757_call(), 3)
call_5451 = relay.TupleGetItem(func_4758_call(), 3)
uop_5462 = relay.atan(call_5450.astype('float64')) # shape=(10, 2, 15)
uop_5464 = relay.atan(call_5451.astype('float64')) # shape=(10, 2, 15)
func_3158_call = mod.get_global_var('func_3158')
func_3162_call = mutated_mod.get_global_var('func_3162')
var_5487 = relay.var("var_5487", dtype = "float64", shape = (1, 168))#candidate|5487|(1, 168)|var|float64
var_5488 = relay.var("var_5488", dtype = "int8", shape = (512,))#candidate|5488|(512,)|var|int8
call_5486 = relay.TupleGetItem(func_3158_call(relay.reshape(var_5487.astype('float64'), [7, 12, 2]), relay.reshape(var_5488.astype('int8'), [256, 2]), ), 1)
call_5489 = relay.TupleGetItem(func_3162_call(relay.reshape(var_5487.astype('float64'), [7, 12, 2]), relay.reshape(var_5488.astype('int8'), [256, 2]), ), 1)
output = relay.Tuple([uop_5415,uop_5462,call_5486,var_5487,var_5488,])
output2 = relay.Tuple([uop_5417,uop_5464,call_5489,var_5487,var_5488,])
func_5504 = relay.Function([var_5487,var_5488,], output)
mod['func_5504'] = func_5504
mod = relay.transform.InferType()(mod)
var_5505 = relay.var("var_5505", dtype = "float64", shape = (1, 168))#candidate|5505|(1, 168)|var|float64
var_5506 = relay.var("var_5506", dtype = "int8", shape = (512,))#candidate|5506|(512,)|var|int8
output = func_5504(var_5505,var_5506,)
func_5507 = relay.Function([var_5505,var_5506,], output)
mutated_mod['func_5507'] = func_5507
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4936_call = mod.get_global_var('func_4936')
func_4937_call = mutated_mod.get_global_var('func_4937')
call_5516 = relay.TupleGetItem(func_4936_call(), 0)
call_5517 = relay.TupleGetItem(func_4937_call(), 0)
func_4249_call = mod.get_global_var('func_4249')
func_4251_call = mutated_mod.get_global_var('func_4251')
var_5524 = relay.var("var_5524", dtype = "float32", shape = (324,))#candidate|5524|(324,)|var|float32
call_5523 = relay.TupleGetItem(func_4249_call(relay.reshape(var_5524.astype('float32'), [1, 324])), 0)
call_5525 = relay.TupleGetItem(func_4251_call(relay.reshape(var_5524.astype('float32'), [1, 324])), 0)
output = relay.Tuple([call_5516,call_5523,var_5524,])
output2 = relay.Tuple([call_5517,call_5525,var_5524,])
func_5534 = relay.Function([var_5524,], output)
mod['func_5534'] = func_5534
mod = relay.transform.InferType()(mod)
var_5535 = relay.var("var_5535", dtype = "float32", shape = (324,))#candidate|5535|(324,)|var|float32
output = func_5534(var_5535)
func_5536 = relay.Function([var_5535], output)
mutated_mod['func_5536'] = func_5536
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5543 = relay.const([[[4.053336,-6.628707,4.198092,-4.965309,-4.675861,-9.328986,-2.876226,6.783731]],[[0.592052,-1.008938,7.615916,7.928557,8.465038,-6.572822,9.746349,-4.893449]],[[1.438000,-3.108866,-3.306133,8.202451,8.300148,-9.190978,5.865057,6.068637]],[[-7.735902,-1.346977,-0.238860,-0.666591,8.885268,1.441564,-9.309751,8.764649]],[[-8.640955,6.601296,-9.175394,3.734121,-8.208055,6.883409,7.871206,1.917018]],[[4.210232,5.455730,5.077017,4.353773,-3.722238,1.864488,-1.906122,9.375467]],[[-2.813104,-4.759005,5.370766,2.909429,8.904446,-1.847447,7.461223,0.509496]],[[6.094422,-7.834101,-4.219966,6.330598,3.160046,-5.616205,9.174031,-0.859471]],[[-6.040265,-3.990986,7.119329,3.093592,1.751048,0.350472,2.113913,6.011496]]], dtype = "float32")#candidate|5543|(9, 1, 8)|const|float32
uop_5544 = relay.acosh(const_5543.astype('float32')) # shape=(9, 1, 8)
bop_5548 = relay.logical_or(const_5543.astype('bool'), relay.reshape(uop_5544.astype('bool'), relay.shape_of(const_5543))) # shape=(9, 1, 8)
output = relay.Tuple([bop_5548,])
output2 = relay.Tuple([bop_5548,])
func_5552 = relay.Function([], output)
mod['func_5552'] = func_5552
mod = relay.transform.InferType()(mod)
output = func_5552()
func_5553 = relay.Function([], output)
mutated_mod['func_5553'] = func_5553
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4987_call = mod.get_global_var('func_4987')
func_4988_call = mutated_mod.get_global_var('func_4988')
call_5563 = relay.TupleGetItem(func_4987_call(), 0)
call_5564 = relay.TupleGetItem(func_4988_call(), 0)
output = call_5563
output2 = call_5564
func_5567 = relay.Function([], output)
mod['func_5567'] = func_5567
mod = relay.transform.InferType()(mod)
output = func_5567()
func_5568 = relay.Function([], output)
mutated_mod['func_5568'] = func_5568
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3933_call = mod.get_global_var('func_3933')
func_3935_call = mutated_mod.get_global_var('func_3935')
call_5639 = func_3933_call()
call_5640 = func_3933_call()
const_5653 = relay.const([[[-6,-2,1,-7,-7,-10,-10,8,-3,-4,5,7,-4,8,1],[1,-8,-8,-2,8,7,2,1,3,-5,10,-1,-7,-1,-2]],[[-10,2,9,-7,-2,-10,4,-10,-2,-10,2,-6,-8,7,-10],[4,5,8,-5,-6,-1,-7,10,2,10,6,4,4,-7,-5]],[[-1,6,4,-1,10,-5,-4,8,2,4,3,-6,6,-3,3],[9,-7,-2,-3,-10,-8,8,9,-4,7,7,-1,-9,4,-9]],[[9,1,-5,7,-3,2,1,-3,-5,3,8,2,-2,-4,4],[-3,1,9,6,5,2,-3,7,-3,-5,-2,6,-2,-6,5]],[[10,-3,2,1,9,-1,3,-1,-2,-3,-1,-9,1,-5,8],[9,6,2,-5,7,-9,4,-2,4,-1,10,2,-1,1,-1]],[[4,10,3,9,5,3,-4,-7,4,-10,-8,9,10,-4,3],[-3,-5,-8,-4,-6,3,-4,6,3,5,-5,6,5,-3,8]],[[-4,5,-5,-10,2,-10,7,1,-5,5,10,3,5,1,-6],[-6,-3,2,5,-6,1,-1,-10,-4,-9,-5,1,4,-7,-4]],[[5,3,-2,-5,-10,6,-9,-10,9,5,4,-6,9,1,-6],[-7,6,10,-9,-6,8,-2,9,5,7,8,10,-4,-4,5]],[[1,-1,-5,6,-6,5,-6,-10,-9,5,-6,5,6,7,6],[10,-3,6,-1,-4,-5,-10,3,8,-8,-8,-7,-2,-6,-3]],[[-10,-2,5,3,-8,-3,-3,6,7,-10,8,-9,2,-9,2],[-1,-6,-5,10,-5,2,-3,-2,-5,-6,4,-4,10,8,-4]]], dtype = "uint8")#candidate|5653|(10, 2, 15)|const|uint8
bop_5654 = relay.power(call_5639.astype('float64'), relay.reshape(const_5653.astype('float64'), relay.shape_of(call_5639))) # shape=(10, 2, 15)
bop_5657 = relay.power(call_5640.astype('float64'), relay.reshape(const_5653.astype('float64'), relay.shape_of(call_5640))) # shape=(10, 2, 15)
output = relay.Tuple([bop_5654,])
output2 = relay.Tuple([bop_5657,])
func_5676 = relay.Function([], output)
mod['func_5676'] = func_5676
mod = relay.transform.InferType()(mod)
mutated_mod['func_5676'] = func_5676
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5676_call = mutated_mod.get_global_var('func_5676')
call_5677 = func_5676_call()
output = call_5677
func_5678 = relay.Function([], output)
mutated_mod['func_5678'] = func_5678
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5060_call = mod.get_global_var('func_5060')
func_5062_call = mutated_mod.get_global_var('func_5062')
call_5702 = relay.TupleGetItem(func_5060_call(), 0)
call_5703 = relay.TupleGetItem(func_5062_call(), 0)
func_4417_call = mod.get_global_var('func_4417')
func_4420_call = mutated_mod.get_global_var('func_4420')
const_5723 = relay.const([[-3.117460,-9.541054,-5.826715,-6.877225,-6.068315,-8.495387],[-1.842716,5.494988,-9.489929,7.002760,-4.808802,-8.694937],[4.366416,-5.171854,-0.101762,-8.359820,-1.924993,7.302492],[-0.864354,-3.937238,1.774422,-0.894170,8.397646,9.040343],[-8.407007,9.878355,2.056858,-3.683984,4.880470,-6.833366],[7.546611,-1.981466,-5.088845,-0.281425,-4.551094,1.499091],[0.323314,1.976211,7.637928,-0.906836,1.794639,-2.843762],[-2.356696,7.201910,7.449987,0.760620,7.639694,-6.487306],[4.868742,-0.316008,0.125244,-0.103449,6.579136,0.882126],[-9.058179,-1.510300,-2.446444,-7.994759,0.917158,-0.421391],[-5.618856,-0.920460,-0.863501,1.675168,3.259895,9.598291],[1.892526,-0.253295,2.124376,9.901139,8.670452,-6.220458],[-8.487961,-4.680712,-2.537094,-7.423551,-9.828731,-5.330634],[-0.567511,4.315983,1.393776,-5.293392,-0.046205,5.190864],[1.155080,9.712713,1.531054,-5.296803,-2.603335,9.438652],[2.157314,2.990960,-4.270233,-6.929852,1.874575,9.081910]], dtype = "float32")#candidate|5723|(16, 6)|const|float32
call_5722 = relay.TupleGetItem(func_4417_call(relay.reshape(const_5723.astype('float32'), [96,])), 1)
call_5724 = relay.TupleGetItem(func_4420_call(relay.reshape(const_5723.astype('float32'), [96,])), 1)
func_5060_call = mod.get_global_var('func_5060')
func_5062_call = mutated_mod.get_global_var('func_5062')
call_5726 = relay.TupleGetItem(func_5060_call(), 2)
call_5727 = relay.TupleGetItem(func_5062_call(), 2)
const_5729 = relay.const([[-7.123771,-8.490273,-7.975311,-3.688200],[-9.064768,0.452665,4.293169,-2.589651],[9.864032,0.972961,4.673491,0.884196],[-9.992179,-0.167391,-3.729001,0.730044],[4.747727,-4.757862,-7.199940,-9.657884],[-2.703767,-4.949927,-2.073559,3.154299],[-0.950270,-0.903535,-3.912734,0.237514],[8.525458,8.848267,-5.536545,-5.540481],[-3.816520,3.759897,-2.064570,7.455791],[3.293702,-4.711474,-8.251690,4.999627],[-7.383297,-4.919629,7.227332,3.522872],[-7.660092,-2.028190,-0.434855,-2.976536],[-6.885824,8.566722,3.479003,1.230341],[8.933625,9.882713,0.575234,-9.036002],[-7.087737,-5.495791,-9.263499,-2.204730],[-8.678365,3.062029,-4.495374,-0.771936],[6.442073,2.593995,-6.483351,-3.704649],[-0.829866,-4.018575,-1.352772,4.834367],[1.185034,6.681632,-2.942113,-5.743807],[-8.325802,2.679510,-3.120487,9.033161],[3.465187,-8.856291,-2.028134,8.899283],[-8.427380,-4.989968,-3.113910,7.691096],[-7.007247,-2.465296,6.531894,8.557082],[-8.810058,-3.180702,-9.554953,4.874029],[-7.992558,-0.131671,-2.501491,8.212413],[8.044322,3.716689,7.806756,6.093098],[3.751796,-9.623503,1.195535,0.309912],[-2.306601,-8.724411,7.183343,6.907447],[1.420979,-8.140803,0.625339,2.243311],[-0.357485,3.140320,9.152382,3.138727],[-3.760817,0.286883,4.184064,7.830081],[-7.566851,7.402811,3.885173,2.164638],[-8.757233,-8.302506,8.988925,-9.804711],[9.510955,-3.756895,-4.646069,1.515767],[6.127473,-9.184749,8.886963,7.639319],[2.257616,-1.849031,8.015608,-2.884299],[0.923107,9.374885,-8.643391,-1.439693],[4.064940,-6.455801,-7.665158,-2.258354],[4.852657,4.322588,5.538791,-0.700286],[2.553115,2.022941,0.687833,-9.714049],[6.361966,7.032509,9.792734,9.193572],[-1.093074,-5.642052,2.171112,6.048663],[-3.630969,-9.294863,7.619090,-4.538500],[9.937891,1.410661,3.428585,7.804001],[9.797266,-9.337203,3.332095,-6.117910],[-0.142899,-5.532994,4.502547,-8.546007],[-3.824038,8.794240,6.245772,-8.197097],[-0.644950,0.310594,0.101799,-6.768909],[-8.910446,4.088050,-1.462243,2.263138],[0.207286,-0.944360,0.041105,-1.608965],[8.943181,4.777014,4.671988,2.825516],[0.718156,-2.436703,-8.038738,-0.516922],[7.871486,-1.024047,5.732667,-3.924853],[7.678564,3.516225,5.691410,0.715009],[-5.211723,-9.246542,-3.610315,9.156111],[-6.344843,2.093827,-3.319805,7.763649],[9.352313,1.935722,-9.029129,4.969236],[-7.517783,-0.718165,-1.051009,6.789919],[3.867473,5.620952,8.865179,9.552811],[-8.739461,-9.544889,-5.589227,-2.115681],[5.492901,-2.427220,-0.784107,-3.305766],[1.153397,-9.108190,-1.449834,-6.274223],[9.559036,5.141804,-9.909551,8.191612],[5.106142,8.842768,8.155888,-9.979754],[9.180293,-8.215837,-7.414801,-3.037195],[-7.612071,-4.186696,-7.966996,-8.932712],[-0.918818,1.894375,-4.755674,5.331452],[-7.249992,-6.284872,-4.061965,5.678074],[4.317476,2.410457,-4.642099,0.246843],[3.524567,8.867929,-1.291700,3.405778],[7.040604,0.379523,7.799348,-5.904334],[9.903359,-2.217135,8.772340,5.748552],[8.615836,-5.724304,7.362126,-9.347007],[8.826991,-7.697192,2.845738,-3.854083],[-4.663554,4.059136,-3.092705,-6.484243],[-1.618772,-2.244998,-2.214757,-0.781187],[-8.043716,2.492004,9.535210,-4.277369],[7.304213,-6.430136,9.093316,0.465465],[3.112099,3.530927,-6.902599,5.697584],[-4.661045,-6.053461,-1.299525,8.838476],[-1.839574,-7.532803,-5.366756,-7.768730],[3.979683,4.588916,-5.226035,9.725230],[2.952267,3.776365,-9.242393,-7.461027],[-7.592552,1.321217,0.956413,-8.702150],[4.549466,7.969965,7.413870,9.190064],[4.011090,7.264355,0.535063,5.594981],[-2.211788,6.193478,0.031862,8.816966],[-9.839788,-4.752860,3.414363,5.574402],[2.032715,8.912844,6.671726,-6.599890],[5.421287,-7.979811,-9.563493,6.110121],[-8.116883,1.204591,-5.496885,-6.737001],[0.226412,-4.655246,8.526432,5.166016],[6.005968,4.302372,0.268121,7.282454],[-9.456108,3.615775,2.791775,3.639502],[7.693206,2.595261,7.325514,2.198850],[2.528335,-9.215487,4.737181,1.293992],[-9.436783,5.509728,-3.675472,-8.626016],[-5.127166,9.112587,-4.723900,-9.789686],[1.045292,8.430001,9.898266,5.638714],[-6.440993,2.498485,5.001952,-6.967446],[1.341013,6.420429,-0.649225,-7.445505],[-3.237804,-8.857986,-9.032635,-5.516022],[7.865843,8.016664,-1.422095,4.153507],[-4.795910,5.028660,7.281133,9.491256],[4.907091,7.687002,-7.403393,0.615480],[6.131011,1.474364,-6.177569,-1.974309],[5.523474,-5.363477,-7.558219,-8.968559],[-4.596547,2.782548,-4.549673,-1.952829],[0.719970,0.777652,-2.832581,-4.996150],[9.029286,3.196555,-8.101373,6.583296],[0.678543,4.468890,9.475005,-5.700357],[1.426678,2.519140,-3.794608,-8.501371],[5.769486,5.205314,-3.231404,-3.851139],[1.227303,9.453231,6.126497,5.091304],[-8.299949,-5.262489,3.544045,1.787374],[-3.732185,-7.420844,-6.316093,8.547608],[-5.565875,7.062317,-9.529554,-9.634594],[-1.554672,6.835746,-5.477641,-0.924621],[-9.447069,-5.121765,-2.297551,-1.030229],[0.200450,6.138309,4.349501,2.377174],[-7.537180,-5.739607,-6.555701,-7.937736],[-3.796461,-7.635372,0.697810,7.901868],[-5.019031,2.745414,7.801598,7.517826],[-2.572978,7.390877,4.462004,6.465964],[1.447696,0.980550,9.429956,-6.179131],[2.570553,-1.530140,-2.097650,-0.630323],[-0.809245,8.031430,-5.925399,-6.782526],[7.507997,-6.261235,-9.072932,-0.021749],[-9.772527,-1.905427,-2.350174,2.902361],[6.250083,-5.631554,-3.773020,-6.296072],[-1.524054,-5.967359,9.084060,2.371842],[-5.601557,0.016799,4.294067,9.636613],[1.141896,0.792080,-8.035714,-5.592699],[0.858000,6.880408,3.211580,-4.300363],[2.617320,-0.861087,1.318765,-2.813345],[-9.183566,-9.405016,5.484452,2.725927],[5.395454,-7.515012,9.673601,-7.367681],[3.133590,-7.372479,2.415338,-2.463088],[-6.588426,7.637271,-0.245436,8.101130],[-2.468256,3.582415,6.712280,-6.838148],[3.025906,5.061176,9.453128,4.837288],[9.964089,-4.998284,-8.532529,-8.133943],[3.108343,-5.282090,7.430157,-9.514507],[-5.520865,0.179380,-7.956172,-6.403568],[7.478383,5.768265,5.926453,6.311840],[-1.859594,-2.724148,6.086174,1.727308],[-6.285614,-1.005960,-5.498679,9.080187],[-9.390637,-2.299935,7.812046,7.173947],[-9.615667,3.454562,6.158148,0.964967],[-1.150669,8.074629,-0.483538,1.280741],[-5.328684,-5.537772,-1.559232,7.497937],[-7.556860,-4.202958,7.993709,-3.403660],[-6.950595,6.026856,3.266649,4.071433],[-9.501649,7.732920,-2.771743,-0.889708],[-9.696116,8.193106,-7.372638,-7.310510],[-5.150198,-6.914186,-7.399195,-1.398506],[3.677316,-4.653242,-9.841854,-2.733747],[-2.881025,5.911148,-8.471472,-1.124758],[-1.670015,-0.612713,-0.973751,8.017393],[9.784329,-7.016206,9.010353,-1.594750],[0.482222,0.449849,-8.035431,-7.720791],[7.910819,7.164476,5.994366,-2.503004],[6.067081,4.522966,6.402433,7.222567],[-7.701013,-3.721726,-9.593408,-6.395106],[-3.978083,7.284232,-6.213888,4.855059],[1.634949,8.831685,-4.602368,-0.614412],[-2.114963,-3.622387,-0.755209,-7.294947],[0.786923,-2.140228,9.342024,0.656753],[-0.141552,7.551392,3.111644,-8.165775],[1.458834,7.080084,-3.730393,-9.599699],[6.091174,-4.673573,-9.796234,3.184686],[-8.744718,5.908075,-3.073032,2.406758],[1.501020,8.215802,6.413878,1.824113],[-9.318119,3.435387,-7.251090,1.934794],[-5.494658,8.212039,7.262028,-1.994794],[7.784865,3.534694,5.179182,-2.297040],[0.811241,6.826546,-4.623451,-0.667336],[2.911648,3.074569,6.004687,-0.172121],[-9.781411,-7.373353,-7.643458,6.401357],[-8.060871,2.991033,2.767795,-6.977215],[-7.945007,-4.814130,-8.571253,7.937545],[-8.064316,4.266037,4.277599,2.616817],[3.595697,8.011022,-4.263942,0.380207],[-3.667434,-6.193589,2.504609,-7.120813],[-5.768679,-2.263240,8.990340,0.764524],[-8.737358,8.971358,-3.065019,6.259034],[-7.030483,5.911004,-8.288341,4.045932],[6.192990,-5.536799,-2.343659,-5.525392],[7.813361,4.529223,-5.882215,-5.956542],[5.332351,9.457386,-5.886105,-5.067198],[0.816024,-9.475489,-2.004042,-7.897418],[2.075268,-3.710411,-9.606729,4.728725],[0.617946,-4.258274,0.845160,-9.151081],[3.091580,-7.616204,4.292825,-7.631338],[-3.443834,-5.880753,7.863062,-8.589534],[5.315795,-4.862625,-7.639306,-2.318083],[9.560499,5.814626,3.970183,0.736084],[6.520333,3.629246,-0.377918,-9.686422],[-8.080486,-7.387081,7.640863,-9.781972],[2.794288,-6.525454,-2.886805,-9.783588],[-0.738040,-6.596468,6.882040,-6.630600],[2.999867,3.426037,6.346811,-0.223489],[-6.531190,9.436190,-3.833987,0.132776],[4.297484,6.594897,-6.857400,3.832126],[7.821655,-0.245469,3.171291,-3.362580],[-6.143545,1.782388,5.034221,4.930427],[-2.853012,6.381982,8.678137,-6.533475],[1.602857,-5.807121,6.245756,-6.742846],[-5.408649,-6.434528,8.323719,-8.928572],[-7.039032,9.549488,-6.243785,-9.209392],[-1.035655,7.980208,-1.138632,-0.701568],[1.762306,2.250159,-5.913203,2.042375],[-3.503713,-2.137141,-3.344479,-2.202421],[-6.669049,-2.547571,-0.778888,4.062515],[5.306437,-6.172944,6.544071,9.611322],[-2.198952,1.536922,-1.982634,6.725771],[-5.809920,-2.464235,-2.026185,-4.981361],[-6.879282,2.582884,3.655638,7.561088],[2.486973,-6.199214,-9.002782,1.192223],[-0.482045,5.949404,-2.432399,0.026965],[0.542071,5.315807,-9.614513,-3.588062],[5.977378,-4.599183,3.925223,6.181068],[6.507695,8.926090,5.306725,-6.722590],[3.271835,-3.181711,-6.826147,0.003430],[5.258182,-7.097724,-6.424035,-8.574338],[-4.287999,-0.519378,6.307296,9.188683],[2.271062,-4.842309,9.285377,-9.693435],[6.609738,-7.474509,-2.802241,2.167140],[7.893918,-7.472925,-9.288068,1.774769],[9.164888,-9.790846,7.540626,1.788359],[-6.441034,3.903501,3.390924,4.467607],[-1.889736,-7.832196,5.088045,-9.332916],[5.421576,-6.412538,7.424109,8.538826],[7.060716,4.950754,0.124011,2.878764],[6.783346,8.124587,-7.757316,9.104976],[5.291455,6.636811,5.499030,0.450662],[-3.608730,-4.722196,9.038221,-7.056189],[-5.908203,3.421213,9.543847,2.588792],[8.672303,5.119751,4.169588,-8.171537],[-8.818958,6.042686,7.161408,8.595657],[-9.902709,2.316475,7.308151,-8.826373],[-1.917222,2.079713,-0.437561,-7.367709],[6.058999,3.198645,-7.774293,5.914312],[-2.550332,-0.571756,4.215474,2.678957],[8.583403,9.108923,4.276004,-6.716209],[3.445486,5.295661,8.310206,6.927198],[4.550683,3.423268,-2.356980,-0.931830],[-1.744825,-1.014694,-8.539149,8.247608],[3.108951,-5.619927,9.522197,-2.953094],[-6.467189,-9.697389,1.965826,8.736258],[2.455981,-9.424743,7.228671,-7.243224],[2.484383,-2.612443,-1.915417,7.653975],[-2.508155,-0.356169,8.119599,6.351500],[-5.215261,2.790199,4.918782,-8.268188],[1.045792,5.138369,-7.243044,-9.664853],[-1.407556,2.153130,0.057501,-1.985773],[7.611851,6.601184,0.139144,-9.083920],[-8.537006,2.311179,-0.156234,-3.783945],[-2.385580,3.068133,1.436334,-1.249883],[-5.768322,4.979811,1.468062,2.479884],[-6.296640,8.658604,7.669019,-9.916147],[0.866606,-9.085057,9.562365,7.937862],[-7.795537,-8.959872,0.553739,3.218461],[4.201396,6.487511,0.227747,4.830188],[9.487232,5.917792,-3.284331,-0.623303],[-0.997099,-9.413726,-7.330618,7.812270],[-8.287370,-3.140721,8.550229,8.998122],[-9.937058,8.198274,9.529928,-7.949745],[6.982308,-1.963704,5.516350,6.015418],[7.944957,3.125845,3.160713,-4.048974],[4.703766,1.244967,-0.769112,1.961330],[0.095062,-6.266857,3.090585,1.305250],[4.269406,-7.154085,8.721677,-4.246336],[1.691578,-1.022065,-4.256401,-2.026487],[8.425535,-3.874727,-5.499728,7.971902],[-1.126397,0.259354,-9.501565,-5.502938],[-1.850509,-4.000291,-4.800800,-7.879536],[-4.747066,9.420334,1.283366,-0.757908],[4.683669,-7.288057,-4.004305,-1.189022],[-5.899963,-5.286179,-4.411490,-1.648082],[-1.820393,-0.702090,1.067040,-8.120432],[0.601642,-9.343111,-6.285337,-1.770936],[-2.338805,1.950909,-9.519062,3.446889],[6.297303,4.471911,6.310021,-9.774745],[-8.395011,-8.135991,6.516806,7.981574],[-4.948087,6.693932,0.092106,1.091497],[3.062949,-3.191328,-2.647086,-6.670388],[-1.924306,9.923579,0.271519,4.331181],[1.074392,6.040397,-6.029180,3.563153],[-0.352760,2.197522,-5.040463,3.070245],[-6.142992,1.659924,-4.039770,-2.349389],[5.062378,-6.640488,-1.668171,-3.340815],[4.998379,-0.387637,8.264375,5.606189],[9.244253,5.889057,4.387382,8.834275],[-1.694617,-5.033186,-7.334651,9.297309],[-2.642641,-1.428056,6.930858,-2.529653],[-2.165906,2.425228,7.089606,5.305354],[6.149090,-2.168224,-3.740828,-4.088173],[6.984791,2.580242,-3.997453,2.517990],[-7.598299,1.890955,8.225986,-9.126866],[-4.191194,8.281955,-8.999309,-1.079387],[3.449998,-4.153205,-6.575564,-8.967403],[5.006525,2.340394,5.960444,6.192728],[-2.578952,9.496936,-7.368434,6.672380],[7.107839,-6.806786,-6.465350,-8.798825],[-7.502295,7.893075,8.211903,-6.325578],[6.367225,-4.614350,-6.519121,-6.663573],[-3.125549,-1.283354,0.834673,-1.840683],[-2.013370,4.043983,9.986092,-1.319921],[-6.716665,5.765045,-1.472560,9.953369],[7.981434,-3.147608,0.813220,7.835356],[-4.406388,-0.297923,2.745808,3.781939],[-5.227980,-6.888820,-0.899015,2.847692],[-8.172255,-9.706930,-1.012639,-4.701266],[-1.694345,7.760911,1.874387,5.311072],[3.565874,-6.983154,-5.549349,-6.256030],[-9.702003,4.196604,-4.175011,3.043915],[7.843450,2.783402,9.890075,1.785985],[-7.760448,4.871484,0.912784,4.038575],[7.341958,-7.339268,2.106757,-7.774205],[9.804721,-0.417966,-3.223523,2.002915],[-1.707869,4.685558,-1.922498,1.844241],[6.018124,1.748923,1.313889,1.904165],[-7.020287,6.368006,1.762459,8.487967],[7.858862,-4.620722,3.855412,6.515722],[-0.861942,-4.854454,2.690795,5.665333],[-9.842584,-2.822216,5.635621,-1.768467],[2.633749,-4.180595,8.970238,0.632197],[7.472389,-6.128426,6.603825,-3.225204],[-2.802432,0.797957,-9.276587,5.587999],[8.005864,5.669110,0.028696,-1.184748],[9.431048,7.329579,-6.918620,4.929495],[-0.780190,-5.074198,6.159367,6.428014],[7.465204,8.045475,8.236401,7.719160],[-0.860056,-3.134470,-3.853164,-2.031067],[0.882736,5.987349,0.311846,2.707776],[-3.798246,1.801144,9.552005,-9.610375],[1.258378,-1.447971,-2.229486,7.172799],[-6.064125,-7.217250,-7.009214,-8.002245],[4.684123,0.959231,-0.460253,-2.735242],[6.559519,-6.351245,3.916020,0.873533],[1.856804,0.861132,9.558484,-1.140522],[-0.340256,5.830877,-1.065890,-5.321436],[9.233420,-7.926739,2.213993,-3.922273],[-6.665508,7.176906,4.484276,3.221292],[-0.020527,-5.005913,0.182781,-3.461026],[-9.222492,1.622614,1.890690,-3.797491],[3.186910,3.320807,9.042467,0.439314],[-9.480473,8.604222,-2.365231,-7.237554],[-5.354754,-7.955013,-8.603053,8.896622],[-8.985117,1.832985,4.170407,-7.671005],[-5.087754,5.911240,-0.940045,7.421485],[7.944523,-7.101512,1.362103,-5.168942],[-6.803477,-6.627612,4.432537,2.392810],[-2.714935,-2.339407,-2.143371,-0.959705],[-7.600867,-1.309645,6.292153,5.410543],[4.092623,-5.036432,9.464096,-1.282075],[4.380819,-5.704504,-6.308596,8.079368],[-3.709144,-5.854508,-7.272336,8.441696],[-2.671357,4.635685,6.581176,-9.432346],[0.868041,-8.995862,-4.604874,-2.838016],[4.400597,-5.063326,-4.892621,-5.070139],[3.423217,3.569275,6.332202,-1.527277],[-9.630591,7.904707,3.809341,-2.505732],[-4.629076,3.414504,1.594192,7.541233],[-2.589478,4.502754,9.135193,2.036333],[-4.633807,-8.205254,5.745537,-5.742600],[9.272202,1.704067,1.214496,1.068783],[-6.398464,-7.782687,-0.249313,-2.105568],[-2.872314,1.908790,4.786808,-0.977501],[9.807100,-6.299904,-6.675978,-4.037538],[-0.143713,-4.042086,-1.847505,-2.928419],[-4.712360,-7.359069,-3.636023,3.320935],[-1.078809,-0.830117,6.739267,-6.450053],[4.279644,9.706308,5.945491,2.635206],[1.251692,9.164714,0.269665,1.781419],[7.824329,-8.664707,-0.500637,-9.923737],[-8.049108,5.601753,8.966590,-6.095751],[-8.766596,-7.334364,-4.784870,3.856011],[0.410678,5.075571,-5.737486,-7.060579],[-0.183891,1.291287,-2.198780,-4.018550],[-4.553464,-7.100558,3.885854,4.250090],[-3.604597,3.096498,1.710512,8.189435],[3.515412,-1.452000,4.739112,9.716462],[6.396588,-1.221273,-4.785086,5.579320],[-8.726474,8.598244,-1.044732,8.220616],[-2.039604,6.206264,-9.057521,6.645357],[1.866822,3.892037,-9.229454,7.643405],[-7.828022,-7.802178,-7.260322,3.518486],[7.064914,-4.851503,5.345276,2.801822],[-4.056535,-6.576302,0.925749,-8.493017],[6.983934,3.408480,6.882085,8.217531],[-7.592841,-9.714425,5.670147,-9.233661],[-6.758263,2.508066,-0.855508,-6.850476],[9.104309,5.444178,-9.432432,-6.368478],[-1.591687,1.443034,-5.207197,6.340672],[-3.193540,4.708274,2.981098,0.376929],[-5.942706,-8.328584,6.713803,9.222618],[7.396442,8.426940,-9.821216,3.043643],[1.448535,-5.850344,7.640865,-1.214751],[-1.310777,-9.094824,2.799539,8.336893],[-3.536297,0.966967,-6.582318,-7.459298],[0.822562,6.237394,2.336133,-7.522659],[-9.470407,-2.096788,-9.085067,2.836131],[-7.533208,9.650941,8.955625,1.414458],[-0.905425,7.992183,6.619357,-1.212337],[8.697955,2.285620,-1.087569,8.613179],[-8.937310,-4.995043,0.606173,6.256173],[4.959996,7.152141,-3.334326,-5.938521],[9.430247,3.919604,-2.235411,-4.700583],[-9.699071,-5.797682,4.181372,6.513858],[-1.612547,2.452372,7.212736,1.710698],[7.445342,-1.181922,-8.752008,-2.738751],[-1.573208,-1.835033,0.701666,8.871229],[-7.810033,-4.807211,0.251384,-5.312348],[0.110240,1.982619,-3.454594,-1.817440],[-3.590725,2.109286,6.398193,-8.247653],[-4.036569,-8.510105,8.407339,9.459291],[-2.284233,-2.498786,1.608320,6.628176],[-3.789748,6.312316,1.196940,-8.409773],[-7.023161,-5.031803,5.544032,-2.820047],[-0.515478,9.462175,-0.190415,2.552919],[-2.550371,-7.824866,-7.818028,-9.496281],[4.001447,-8.518211,5.519835,-1.616147],[-6.761758,-3.216353,2.172152,9.261448],[5.936093,-4.764059,1.128145,-2.745456],[7.549593,5.247185,-8.003175,-5.850954],[-8.473280,6.148696,0.323199,9.818883],[-4.101768,2.471761,-6.293314,5.829073],[4.626750,6.609367,-0.486139,-4.867453],[8.473173,2.004549,2.393197,0.079260],[-0.252720,-7.131942,-2.917168,-0.226109],[3.084593,-1.946410,-4.927933,7.241151],[8.258477,3.476661,7.917731,3.167970],[8.244559,-0.837147,-8.674712,-8.871282],[-5.976745,-8.603430,3.100902,-1.252236],[-8.953451,-3.976728,-0.117594,-0.205683],[1.953335,3.603926,5.087487,9.275059],[-4.486197,-2.322082,6.374207,8.379096],[7.194758,-6.319604,-9.042822,9.721828],[4.799929,-8.416036,6.040426,-1.216217],[-7.784258,9.371418,-5.491554,-3.792192],[1.099654,-8.991227,-9.631555,-7.939084],[3.541889,-6.502784,7.870884,0.662158],[9.691115,9.508835,-3.758455,3.824576],[9.640837,8.908394,8.763316,-4.656522],[-9.006431,4.855068,9.358092,-3.784653],[-7.945930,-5.595551,-3.015335,1.125287],[9.922774,-7.619928,-3.434972,-2.558416],[4.300907,9.991066,-1.043160,5.219711],[-1.234413,4.552446,-2.308832,5.343339],[-5.015896,3.977578,6.984293,-0.648532],[4.368851,-0.171342,2.858508,9.739119],[-6.284326,4.992318,3.789517,4.514546],[-3.839574,9.107718,-2.824123,6.360769],[-4.541266,9.262945,8.169383,6.120929],[1.603642,-6.648341,-0.149849,2.077787],[2.119149,9.113442,7.074942,-6.484394],[8.674665,-2.439470,-3.201979,-0.424981],[-0.848963,-4.227406,-2.793619,-8.500503],[-3.526258,-1.949652,2.633201,6.180415],[-5.722013,9.748496,-5.140452,3.812955],[4.012641,2.006387,-5.316786,-6.739503],[-1.737991,-4.862333,-8.137619,-2.001566],[-1.607872,-7.138422,-2.383286,-5.873405],[-4.929682,-8.474791,6.594895,2.218523],[0.154053,9.033068,-0.114008,2.541587],[-5.363427,5.766723,-5.487462,0.975927],[-1.749910,-2.880267,-1.575354,-3.485108],[-6.124219,1.435955,-6.943864,-0.612063],[3.129842,5.088176,-9.636480,-0.427037],[9.806463,0.496847,9.895859,-2.661305],[-5.541599,-8.370382,2.421676,-7.357601],[3.645658,9.268388,-4.969221,-3.532368],[1.296019,0.167308,-3.835027,6.838428],[-0.618113,3.750375,3.239846,3.927761],[2.771573,-9.445821,-3.696274,-6.427848],[-3.341407,-7.519642,-4.953225,7.730734],[-1.377597,9.789098,-7.961030,-0.941894],[2.379072,1.477428,8.765775,8.955352],[-8.549702,0.242906,-2.301832,8.760176],[-6.288025,1.012249,-9.584489,-4.333357],[3.951476,7.326999,-5.930649,-7.648048],[4.517712,6.107634,4.615252,2.946597],[-9.349279,-4.893138,6.829354,-9.493725],[9.176417,-9.553003,-6.037661,9.908943],[-5.457307,7.276145,-6.304618,-7.374604],[5.284916,7.535417,-0.360897,7.239604],[3.215779,9.437287,4.610376,-3.988527],[4.450590,-6.193008,-2.243357,-2.924737],[-4.231612,0.491321,9.441145,-2.952389],[8.466355,0.375761,4.960509,5.622680],[9.238084,9.274004,-3.671684,0.075195],[-3.150063,0.753219,6.397379,4.338360],[4.096157,3.842835,-0.351975,-8.224748],[7.942814,-6.622506,-1.074988,6.584826],[-0.635491,-2.804507,5.729418,8.185739],[3.611577,-6.048323,-5.138844,-6.869704],[-4.298948,-5.164053,1.876405,0.138918],[9.175904,0.599527,0.646242,9.818968],[1.383773,-3.301387,9.404071,-5.070890],[-6.551709,-0.466989,-8.158815,-5.224730],[-1.315673,-4.772996,9.978575,-8.239781],[4.907148,-2.092137,-3.036515,-7.274714],[0.160074,-3.986406,-1.185711,8.413297],[5.704767,8.167900,-0.387588,6.580495],[1.660167,6.794571,3.868972,8.981937],[1.068428,1.800197,5.494076,-7.338758],[-0.140110,9.990623,9.268825,0.337031],[-6.672389,7.173813,-4.411396,0.135250],[-5.415050,4.069532,-4.707394,-9.971391],[-5.466879,-3.791035,0.081007,5.086322],[5.919927,7.949816,2.316258,-1.966711],[3.481595,1.790288,-9.706451,9.959878],[6.329943,-4.069472,3.461275,4.580954],[-0.664149,2.552639,-7.282153,6.017849],[-3.262800,4.410200,8.072496,4.265048],[5.807074,-7.323925,-9.646086,-0.862340],[-8.822651,5.456548,1.748545,-8.685617],[-5.200476,8.888424,-3.558481,7.654957],[6.896413,-7.218120,-4.432753,-1.409795],[-4.333201,9.646030,-3.542658,-8.455054],[-7.235751,9.552951,7.090302,6.411243],[1.241988,-7.660784,8.908693,-2.633133],[-8.503531,6.857369,2.297656,-9.532573],[-6.556805,-0.464645,5.081946,-2.950000],[-8.276662,2.237842,0.762313,-1.047586],[-3.375584,-4.836843,-5.338360,-1.949184],[8.586995,8.215275,0.420958,8.986466],[1.159274,5.854712,-6.724668,-2.211084],[3.506072,-0.976693,-7.411681,0.773810],[-0.540663,-5.177396,6.115759,9.976623],[-9.369969,4.880368,6.127264,4.672998],[-5.035246,9.197126,-6.678285,7.232280],[-5.215732,-5.296629,-9.296020,1.382659],[3.742328,0.690681,-1.862210,-1.025705],[4.349494,8.251625,-1.030913,7.794677],[2.975637,0.135622,-9.229735,2.098155],[0.291040,3.335688,1.826255,-8.167474],[-7.618460,1.335665,-9.280131,7.629761],[8.519075,-1.086271,-6.624466,-0.725711],[7.819205,5.720077,8.056793,-1.519648],[8.583951,-3.144598,-2.413584,6.999378],[8.757787,7.224107,-8.923274,3.971757],[7.864617,5.010833,-0.935622,3.029219],[-0.975714,1.517974,8.518884,-6.307786],[-0.029679,-9.133079,1.130238,7.083891],[-8.867521,-8.427396,-9.155787,2.585647],[-7.904918,4.846364,-7.653814,-0.541702],[3.821322,-0.823870,5.539341,2.256422],[-6.584246,-5.264089,-6.319922,-3.206123],[-2.376954,1.118367,-8.255844,1.079205],[-1.023477,1.689094,6.262432,1.597769],[-9.588701,-3.738201,-7.976691,9.496979],[4.042997,-2.052050,4.399956,-9.779145],[6.098571,-0.412619,-3.653597,-3.422386],[-9.634583,-9.889942,7.435159,2.446781],[0.196766,5.165033,5.406177,-7.899586],[-9.847401,-4.966646,3.850235,-8.302225],[5.629076,6.769247,-4.302547,-0.206005],[0.543282,-3.872330,-7.518006,-5.969378],[2.908677,6.527826,-2.841068,4.617823],[-9.743159,6.115838,7.484182,-1.054875],[-5.743899,-6.981037,-5.874357,-4.117115],[9.640091,-4.806556,-5.731390,-5.030736],[1.498348,-4.140104,1.750488,-7.289927],[-8.346065,-0.086908,1.574375,-4.771673],[-6.574629,-6.611998,5.968678,-7.290497],[-0.820436,-3.202928,-4.292023,-3.909028],[-7.494525,1.161795,6.453153,9.311663],[3.549515,1.132461,-5.111616,0.278278],[-3.193775,5.756261,-2.720385,8.486549],[7.072052,0.914692,-8.892166,3.364603],[-8.335248,-4.527473,-8.016190,1.801609],[0.194546,2.271892,-5.436586,-9.879691],[-2.391925,-5.970694,-9.676872,0.570933],[7.547883,3.897330,9.183153,-3.100222],[3.682827,2.741808,-8.041775,-1.714586],[7.738616,-0.731122,-1.409375,-3.831184],[-2.750141,4.728506,-8.260754,-9.251589],[9.187330,0.270099,-6.426397,-7.505931],[7.677502,-1.907046,0.132479,4.188750],[-3.148293,-3.312077,0.321964,1.674055],[-7.371848,-7.230892,-1.551401,-2.671994],[-6.584871,-0.522536,-7.937141,-8.227436],[-1.125249,1.299968,5.113474,-0.361961],[-7.535334,-9.096398,6.036851,-1.145403],[-3.084753,7.266863,0.716385,-4.149575],[7.028924,4.923670,-4.110639,2.857691],[-9.985057,-8.103948,-4.145876,1.442505],[1.186891,-5.289481,4.276074,-8.555418],[4.037177,-8.709619,-4.899193,-6.349376],[2.334766,9.455242,0.046945,-3.146307],[0.405542,-0.277642,4.412746,3.495065],[6.048541,-3.399715,-5.253721,6.045611],[-9.658658,-2.685436,-1.116698,-4.784836],[-9.334447,0.686016,5.559043,0.455560],[-4.655991,-9.864882,3.087931,2.130164],[4.321292,-7.516761,-3.185598,2.506226],[4.540941,2.990601,-4.502672,-0.956902],[8.968066,-9.495088,8.831825,-2.943591],[7.442777,-0.955452,-6.386456,-7.139508],[4.919282,7.140431,-0.346531,-5.143500],[-0.757346,0.982801,8.582133,-5.501155],[-8.484495,5.162028,-8.047066,5.571038],[-8.114934,6.344205,6.441401,-8.421462],[-9.579899,7.870836,-4.850562,-6.286558],[4.046450,9.271787,3.942023,-3.601671],[0.380096,-1.925071,2.705860,8.062809],[4.948108,-5.393335,-5.053739,5.638564],[-7.824588,3.509451,-4.170878,4.283694],[-4.648544,-4.175675,-0.132403,7.274999],[1.531122,-9.183745,3.991653,-3.136737],[-1.968408,-2.627268,-0.096964,1.311205],[-4.809871,4.158954,-6.642135,-3.038352],[-2.542718,7.696101,2.531129,-4.456317],[-8.042696,6.210144,-5.501125,-5.573645],[-0.814550,-6.147336,-9.945656,1.809739],[-1.839008,6.905825,-6.210881,1.186264],[-5.476844,1.239791,9.737398,-2.714760],[-7.019075,-3.928330,-6.340589,7.482536],[4.996054,9.615978,6.898279,-4.285637],[8.643548,1.272712,9.782482,-4.313744],[9.377051,-9.618232,6.952630,-1.351197],[-0.397669,9.927361,9.627588,-5.759051],[-1.507333,-6.530129,-2.478789,4.292342],[-8.318174,2.705156,-7.018406,3.915909],[-8.146786,-4.922599,1.354562,7.673506],[7.618398,-2.287488,-9.073082,2.405854],[-3.806315,-0.515689,-5.915901,-3.713328],[-3.431764,1.407591,-2.571507,-5.438022],[-6.909701,-6.811130,6.011411,9.952167],[-1.340308,3.390789,-0.497162,9.317567],[-0.147165,-7.506346,-4.689055,7.950589],[-5.689251,2.093665,-3.909738,2.364223],[-9.615255,-2.607954,-8.287992,5.785193],[1.953450,5.627025,1.727680,-5.874647],[-6.421792,9.320607,7.815003,-5.759011],[4.226889,-2.971449,6.670456,-4.103898],[-2.909777,-3.137617,-9.502377,7.756047],[-7.551317,-1.275111,-3.071075,-7.185340],[7.454238,2.266383,-3.557404,-4.840596],[6.562739,4.757969,4.903121,-8.523300],[-7.581836,-5.712271,-5.799765,-3.259794],[-5.626554,6.168573,3.239046,6.222740],[5.773657,-0.132118,-7.554282,3.691865],[6.208038,6.568450,-8.358440,-5.154336],[-0.252565,0.977196,4.475625,4.310102],[-8.883895,-9.395910,-5.990470,-0.244814],[-1.875445,-2.377675,-1.515680,-3.636024],[-7.418612,-1.500939,0.090001,-5.993468],[3.363134,4.291867,1.211099,-4.025070],[7.373045,-6.371654,-8.895075,1.050768],[7.328703,-3.516836,7.328571,8.116317],[-0.327640,-0.250817,7.278348,1.806197],[-6.717383,7.407679,9.358149,-4.604542],[-4.442338,3.360734,5.606157,5.938097],[-8.022439,-1.158326,-8.796783,8.140386],[0.289146,-6.491587,-0.469339,1.592903],[-3.391934,5.059147,-5.798568,-3.876909],[-8.501321,-4.473690,-4.799942,-0.742920],[9.202632,-6.001054,-5.856889,-8.032832],[7.042090,-2.770079,-6.491408,6.775173],[-0.847198,-6.186852,-9.368562,5.585189],[-4.467302,-2.130155,7.127736,5.786791],[-4.557646,-6.451123,-3.411788,-2.223532],[-9.077702,2.871092,9.514594,9.064780],[8.168008,-1.670650,8.021323,-8.905314],[0.878052,-9.049240,6.472014,7.603870],[-8.524832,4.035048,-3.901129,-4.094723],[-4.684542,4.417835,-8.560235,-4.417162],[1.510692,5.242474,-6.369008,-8.181446],[9.089162,8.503140,1.466977,-1.304185],[-2.983496,-0.025650,4.575330,6.345317],[-3.681203,4.699052,-2.884320,1.031174],[8.104853,-6.994795,-8.950676,8.407969],[2.059878,0.962710,-4.842006,-5.528683],[1.334449,9.644556,-9.724069,-5.430047],[-1.620613,7.349499,3.111093,-0.074421],[-7.564266,5.787031,4.082868,-0.319413],[3.448998,3.268147,9.622106,-7.981130],[-0.125918,6.985672,4.800234,-4.855188],[-3.104621,-2.305557,-4.593919,-9.939937],[5.410491,0.523844,-1.418268,8.013988],[0.631735,2.480224,3.418664,6.886773],[-3.386922,-5.569457,9.350088,3.135558],[-1.132466,9.864128,-2.199936,5.349580],[4.500743,-0.619433,-0.312373,6.099056],[3.451612,-5.604608,3.298012,-3.428897],[0.604640,1.704770,0.671038,-3.053450],[-1.002713,-7.513349,8.346146,-9.627525],[7.776876,-3.927186,-1.180134,6.429105],[7.250331,-3.242063,-8.802942,-2.610899],[1.476336,-7.544691,-6.916471,4.518635],[-3.641864,6.327760,5.018002,1.417581],[-2.194446,3.384297,7.608882,-1.816514],[-4.989762,7.421074,-1.628239,-3.283248],[1.724950,-2.297597,3.301900,-6.538783],[-2.125029,7.487642,6.009206,-1.630198],[5.549572,1.690577,-8.732940,0.472165],[-4.112639,6.695816,-6.569926,6.532036],[-6.276569,8.098555,9.063239,-2.038962],[6.593194,5.258391,-2.055834,-9.452358],[9.839508,-0.703695,-9.611030,5.110084],[9.776435,8.415544,-5.751218,9.076684],[-9.181007,5.422731,6.086262,2.792507],[7.557362,5.719971,-2.885973,6.738624],[4.320397,-9.832164,3.649766,9.335552],[-5.756281,-7.894614,1.912250,-4.173849],[-2.466834,4.068529,1.195332,-7.162486],[9.991116,-2.097461,-2.473184,-1.180011],[0.739330,4.691635,-8.726110,5.867713],[6.250340,4.781504,-2.437799,-6.711008],[6.315232,-5.268806,3.231310,-1.682779],[-6.698198,-3.944508,-5.878477,2.384025],[0.671132,6.729780,5.203308,4.339932],[-9.109212,9.115797,-3.021675,-1.387313],[3.202216,-3.568717,3.061845,6.167343],[3.195326,-5.130421,-8.100300,5.673851],[-2.794841,5.666246,-9.408458,-3.454469],[-8.684562,0.214957,-3.645988,-2.270385],[-1.935307,-8.766362,6.363028,3.232919],[8.177937,9.758773,4.985757,-4.144814],[5.912643,5.130622,-9.216455,-1.076663],[3.484292,7.751090,8.039877,3.939868],[-7.454807,-0.958405,-2.224888,-7.975947],[8.797754,2.993954,-9.770615,1.896258],[-8.075249,6.046652,-6.335306,2.357426],[6.672712,9.235128,-8.236503,-6.125019],[-9.202446,3.641041,4.349750,6.287785],[7.090795,3.912883,-8.875475,6.870018],[-3.797497,3.287600,-5.623928,-4.699549],[8.174545,4.200710,8.038676,-7.791812],[-9.460380,-1.238204,0.016963,-6.347489],[-9.892601,-9.701722,-8.208953,9.850688],[9.275294,-0.107942,4.011411,1.559277],[-1.410488,8.022613,0.952689,-3.912577],[4.128833,1.623206,-5.761482,6.270381],[7.007001,1.827662,9.382528,-6.142493],[2.676912,-8.945941,-4.777314,2.869508],[-0.556739,-7.572039,-0.422920,8.507489],[9.336567,-5.379599,3.692437,-3.868598],[0.470855,-8.467589,5.223398,8.867078],[5.703570,6.157900,-6.673748,9.988332],[9.581689,-1.862117,-7.001169,9.896413],[-0.754565,1.985490,9.262755,-2.820671],[8.746683,9.393146,-8.575230,0.750337],[0.712088,1.298383,4.490367,-8.343084],[-6.783247,-8.745561,5.324399,-6.265673],[9.481399,3.271875,8.185152,5.461108],[-2.734619,8.953206,-4.019689,5.204802],[-9.436408,1.771458,9.159746,-3.363015],[-4.314993,-8.125670,2.150483,7.638264],[-2.152600,2.130493,-0.917545,-2.434992],[-0.708057,0.650006,-7.336839,-2.748357],[1.169363,-6.811735,2.417505,-9.694838],[8.914836,1.890481,8.883245,8.506257],[9.639390,-4.424694,2.818045,6.505970],[-9.099807,-0.501306,7.211360,4.106197],[-1.517913,8.135849,7.712523,7.198926],[-4.010216,5.291088,3.435050,2.063536],[5.504077,3.914711,-4.606032,-3.217307],[6.419978,6.530721,3.870390,-5.164206],[-9.922783,-8.697463,5.161200,-9.928953],[-0.940482,-7.637317,-0.998081,2.840549],[5.268611,-2.033273,5.254295,-5.870889],[-1.080366,2.189091,4.960343,7.543180],[6.515855,4.261739,-9.628399,-8.221825]], dtype = "float64")#candidate|5729|(768, 4)|const|float64
bop_5730 = relay.floor_mod(call_5726.astype('float32'), const_5729.astype('float32')) # shape=(768, 4)
bop_5733 = relay.floor_mod(call_5727.astype('float32'), const_5729.astype('float32')) # shape=(768, 4)
output = relay.Tuple([call_5702,call_5722,const_5723,bop_5730,])
output2 = relay.Tuple([call_5703,call_5724,const_5723,bop_5733,])
func_5738 = relay.Function([], output)
mod['func_5738'] = func_5738
mod = relay.transform.InferType()(mod)
mutated_mod['func_5738'] = func_5738
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5738_call = mutated_mod.get_global_var('func_5738')
call_5739 = func_5738_call()
output = call_5739
func_5740 = relay.Function([], output)
mutated_mod['func_5740'] = func_5740
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4121_call = mod.get_global_var('func_4121')
func_4122_call = mutated_mod.get_global_var('func_4122')
call_5743 = relay.TupleGetItem(func_4121_call(), 0)
call_5744 = relay.TupleGetItem(func_4122_call(), 0)
output = call_5743
output2 = call_5744
func_5782 = relay.Function([], output)
mod['func_5782'] = func_5782
mod = relay.transform.InferType()(mod)
output = func_5782()
func_5783 = relay.Function([], output)
mutated_mod['func_5783'] = func_5783
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5787 = relay.var("var_5787", dtype = "float64", shape = (14, 2, 1))#candidate|5787|(14, 2, 1)|var|float64
var_5788 = relay.var("var_5788", dtype = "float64", shape = (14, 2, 4))#candidate|5788|(14, 2, 4)|var|float64
bop_5789 = relay.maximum(var_5787.astype('float64'), var_5788.astype('float64')) # shape=(14, 2, 4)
output = relay.Tuple([bop_5789,])
output2 = relay.Tuple([bop_5789,])
func_5807 = relay.Function([var_5787,var_5788,], output)
mod['func_5807'] = func_5807
mod = relay.transform.InferType()(mod)
mutated_mod['func_5807'] = func_5807
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5807_call = mutated_mod.get_global_var('func_5807')
var_5809 = relay.var("var_5809", dtype = "float64", shape = (14, 2, 1))#candidate|5809|(14, 2, 1)|var|float64
var_5810 = relay.var("var_5810", dtype = "float64", shape = (14, 2, 4))#candidate|5810|(14, 2, 4)|var|float64
call_5808 = func_5807_call(var_5809,var_5810,)
output = call_5808
func_5811 = relay.Function([var_5809,var_5810,], output)
mutated_mod['func_5811'] = func_5811
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4757_call = mod.get_global_var('func_4757')
func_4758_call = mutated_mod.get_global_var('func_4758')
call_5843 = relay.TupleGetItem(func_4757_call(), 0)
call_5844 = relay.TupleGetItem(func_4758_call(), 0)
output = relay.Tuple([call_5843,])
output2 = relay.Tuple([call_5844,])
func_5849 = relay.Function([], output)
mod['func_5849'] = func_5849
mod = relay.transform.InferType()(mod)
mutated_mod['func_5849'] = func_5849
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5849_call = mutated_mod.get_global_var('func_5849')
call_5850 = func_5849_call()
output = call_5850
func_5851 = relay.Function([], output)
mutated_mod['func_5851'] = func_5851
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3742_call = mod.get_global_var('func_3742')
func_3743_call = mutated_mod.get_global_var('func_3743')
call_5875 = relay.TupleGetItem(func_3742_call(), 0)
call_5876 = relay.TupleGetItem(func_3743_call(), 0)
func_4121_call = mod.get_global_var('func_4121')
func_4122_call = mutated_mod.get_global_var('func_4122')
call_5903 = relay.TupleGetItem(func_4121_call(), 1)
call_5904 = relay.TupleGetItem(func_4122_call(), 1)
output = relay.Tuple([call_5875,call_5903,])
output2 = relay.Tuple([call_5876,call_5904,])
func_5937 = relay.Function([], output)
mod['func_5937'] = func_5937
mod = relay.transform.InferType()(mod)
output = func_5937()
func_5938 = relay.Function([], output)
mutated_mod['func_5938'] = func_5938
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5937_call = mod.get_global_var('func_5937')
func_5938_call = mutated_mod.get_global_var('func_5938')
call_6004 = relay.TupleGetItem(func_5937_call(), 0)
call_6005 = relay.TupleGetItem(func_5938_call(), 0)
func_5937_call = mod.get_global_var('func_5937')
func_5938_call = mutated_mod.get_global_var('func_5938')
call_6030 = relay.TupleGetItem(func_5937_call(), 0)
call_6031 = relay.TupleGetItem(func_5938_call(), 0)
func_5019_call = mod.get_global_var('func_5019')
func_5021_call = mutated_mod.get_global_var('func_5021')
call_6034 = relay.TupleGetItem(func_5019_call(), 1)
call_6035 = relay.TupleGetItem(func_5021_call(), 1)
func_5676_call = mod.get_global_var('func_5676')
func_5678_call = mutated_mod.get_global_var('func_5678')
call_6040 = relay.TupleGetItem(func_5676_call(), 0)
call_6041 = relay.TupleGetItem(func_5678_call(), 0)
func_2412_call = mod.get_global_var('func_2412')
func_2415_call = mutated_mod.get_global_var('func_2415')
const_6073 = relay.const([-9.316789,7.489573,-1.571462,4.251097,-3.687718,9.425632,5.173346,3.819011,3.798394,-2.583626,1.424342,-8.684958,3.687241,-1.161323,-8.292681,-2.762952,2.988449,-0.428250,3.520922,-0.068682,9.084753,3.529501,-7.289711,-2.514983,7.125782,5.178807,-2.374041,9.736754,8.315384,0.035908,-2.518803,5.175789,3.340004,5.841372,5.275439,-4.378553,7.339323,-0.381391,-4.159303,-2.121247,9.927697,-6.060627,2.491451,1.217783,1.851452,8.484748,7.047224,4.572576,-3.339519,4.924819,-7.310570,-7.015159,9.530793,-6.518917,1.064300,9.246108,-6.763504,9.048565,-2.930108,3.964620,1.310246,3.884797,2.562289,6.952172,4.622426,6.455393,-1.343428,-6.679377,-5.872223,8.264336,3.565547,3.117608,-5.325201,5.220407,5.243626,1.866204,8.738892,2.904162,0.640936,0.026576,-6.293129,9.945762,-6.856010,-0.647287,-7.929839,2.891243,3.097170,4.829252,3.690546,-7.787389,8.918651,2.276397,-1.383689,9.438383,9.002707,-8.798718,-6.970728,-6.730372,5.937799,8.723554,-6.193413,6.922587,7.859510,9.748147,-2.762125,-7.048111,4.743931,-3.165442,-6.981824,-6.343516,-3.932038,5.294677,-1.666419,-0.878287,9.428261,6.728472,-2.688162,0.433535,2.223783,-2.889156,-0.666766,-5.647359,-9.034188,6.371580,-4.240345,-3.137829,-5.973788,1.633702,4.692475,8.834219,-7.592886,-4.849770,3.218330,-3.346408,-6.643474,-1.578714,3.939009,6.822534,-6.531508,0.623338,-5.009455,9.375135,4.439598,2.905963,-0.133453,3.258004,7.778645,3.153584,0.653891,0.070675,-4.993745,-8.623362,-4.503260,9.842540,-6.925412,-1.449608,-0.443364,-3.101563,-4.548855,-5.981758,-9.875576,2.372319,9.407606,-3.600592,6.573967,7.670131,-1.666665,4.003560,7.305084,6.575475,8.029712,-7.818818,5.408073,-8.334539,-1.179348,7.071531,-0.323898,-8.775112,7.787102,9.772701,-4.728812,8.904471,-3.920379,-1.176909,2.646543,-1.977531,4.410189,3.515274,9.408520,-6.207056,-6.480552,-1.258826,5.920312,5.901925,7.298335,1.451544,1.606223,-3.884607,7.873654,9.433945,-9.817464,-8.432754,-5.365276,3.319063,2.839238,6.084623,1.971204,-7.219439,-6.839096,4.855821,-0.655665,9.941168,0.731675,-0.337508,-5.639533,-6.107950,9.046452,-8.389701,-7.855558,3.191752,-5.009775,7.569304,-8.680580,-9.982105,6.422545,-4.085971,-5.953416,8.875292,-3.528598,-9.387010,0.990672,0.686314,6.973203,-3.223250,1.337267,3.426992,-3.616254,9.728303,1.180722,8.317305,-0.967324,-6.925099,-4.347513,-0.048030,4.863222,6.827484,5.175974,8.513135,6.730643,-9.772659,7.095009,-8.632352,7.501941,-8.866329,8.212218,0.101668,-1.802248,-7.738240,-9.564573,9.754094,0.193975,-7.681993,3.096294,-5.526614,-0.452310,-7.009611,-9.687542,1.066135,-7.711558,-2.947201,-4.538717,1.441689,-4.372839,8.806650,4.655869,-6.203377,8.374402,7.972900,9.744901,6.359585,1.908713,5.446815,-0.462435,9.446908,0.335544,-9.519479,4.787464,-5.348176,6.411345,-8.395359,-2.035542,-9.440806,-6.287421,-1.069947,4.828057,0.783088,0.478049,-9.696615,9.371321,3.242594,-3.199070,-7.751910,3.428850,5.066346,-4.057707,8.236856,-1.860631,3.703377,-4.837463,-0.936311,4.445350,-0.617441,5.267778,7.253837,-7.769401,1.458251,-6.192879,-1.993296,-5.557492,8.174487,-9.280796,3.526913,-8.102320,7.123658], dtype = "float32")#candidate|6073|(324,)|const|float32
call_6072 = relay.TupleGetItem(func_2412_call(relay.reshape(const_6073.astype('float32'), [324,])), 1)
call_6074 = relay.TupleGetItem(func_2415_call(relay.reshape(const_6073.astype('float32'), [324,])), 1)
output = relay.Tuple([call_6004,call_6030,call_6034,call_6040,call_6072,const_6073,])
output2 = relay.Tuple([call_6005,call_6031,call_6035,call_6041,call_6074,const_6073,])
func_6088 = relay.Function([], output)
mod['func_6088'] = func_6088
mod = relay.transform.InferType()(mod)
output = func_6088()
func_6089 = relay.Function([], output)
mutated_mod['func_6089'] = func_6089
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5060_call = mod.get_global_var('func_5060')
func_5062_call = mutated_mod.get_global_var('func_5062')
call_6131 = relay.TupleGetItem(func_5060_call(), 0)
call_6132 = relay.TupleGetItem(func_5062_call(), 0)
func_1978_call = mod.get_global_var('func_1978')
func_1981_call = mutated_mod.get_global_var('func_1981')
const_6138 = relay.const([1.241240,-5.006330,7.987151,-3.456204,-9.296701,-7.703156,0.398038,4.440390,-9.330336,-3.245759,-4.368698,5.742510,-6.076082,1.215115,1.841404,4.439377,1.270690,-0.827815,-3.677366,6.961975,1.221513,2.981051,7.671681,-7.898925,-0.063914,-5.777336,-9.858461,2.852604,-0.461800,-3.328422,2.346692,-3.231533,7.852426,1.919063,4.982744,-0.391094,-6.542029,6.759221,7.834074,-9.260090,-4.288757,-0.199730,-0.621053,-3.412748,-7.687816,-9.602226,-3.369902,0.013133,-0.152379,-7.593958,7.939222,-1.957661,-9.735778,6.180969,-3.206423,1.377247,-7.686600,7.072284,9.768059,6.981193,2.566312,-8.902811,-6.205032,1.679397,-3.309652,-0.746066,0.011677,-8.203152,9.554780,9.081702,5.189856,-1.799331,-7.207398,-6.903465,0.112601,6.706924,-1.081522,6.104048,6.899666,7.383995,-4.645251,-9.604205,-2.585951,2.038311,-3.993333,0.715694,0.652073,-5.643434,-9.942848,5.350599,-8.616214,-0.999272,-2.377487,-1.099106,-7.623440,-9.587606,7.058852,-8.259085,8.813867,9.217103,-2.630452,6.704659,6.017792,8.399592,-8.495696,7.259413,-8.955921,5.597479,7.309882,-2.723614,5.622422,-9.867679,2.167029,9.858023,-4.849946,3.282924,8.157123,-3.407564,-4.263815,-1.926960,7.264497,8.987442,5.305591,-7.300783,-8.340008,6.276068,3.726257,1.269857,-9.186352,9.647399,5.683085,-0.498103,7.151550,9.235656,-3.353699,0.422565,-5.775753,3.705750,5.124925,-0.638636,4.465544,-6.979846,-8.983539,2.616413,-3.431561,6.157518,5.717625,-7.534197,3.813042,-7.228442,-2.542007,5.298571,8.254988,-2.498212,-9.042090,-8.355097,-3.998289,4.309529,-7.551418,-1.711493,8.567011,1.123513,7.973968,-8.249540,9.954501,-6.494974,-1.813595,-1.384555,8.843595,-5.232592,-6.012852,4.778358,5.782842,0.330842,2.437665,-6.306013,1.448825,-5.913637,-0.493155,8.100585,4.256129,2.072830,9.552028,1.300987,-0.312732,9.224786,1.670431,-1.547503,9.807841,-7.633188,9.254583,1.709358,-6.374045,2.027112,-2.901520,2.402504,-1.708752,5.556472,-9.232134,-4.310091,1.371195,2.938434,-2.467178,7.820364,9.819242,5.609143,7.133616,-4.475350,-8.427314,-4.045401,-9.426240,-8.396352,-9.476267,8.028029,6.949941,9.298938,2.844517,5.105143,-0.506358,6.106875,-8.487617,-2.425400,8.653755,-8.143298,-8.070207,6.811946,-0.690993,-1.640078,8.437528,2.834120,6.198782,3.306472,-1.524004,9.820575,-8.555673,-0.476065,7.494782,-9.691929,9.233091,-0.926717,4.952196,8.934358,2.530418,-0.712723,4.101850,9.415971,-2.410123,6.288150,2.900250,-0.136821,6.098871,5.277382,8.574000,7.547285,-7.953803,2.125716,3.393242,8.315980,-2.827222,-9.177344,5.193854,-5.794924,-1.957997,-5.844279,-7.932435,8.505310,-9.760717,-2.251668,-3.853519,-0.894729,9.339730,-6.459031,-1.488178,-7.134348,9.596689,-9.496651,-3.930910,3.492586,-6.381733,4.628064,-2.413252,-2.427023,4.479532,-9.010866,8.275647,-6.177838,-4.410746,1.874893,-7.557299,3.433053,-5.116984,-6.559657,4.042434,-7.730730,-6.020245,-7.124401,-5.152197,1.745339,-1.739805,-1.719831,-3.771132,-4.050326,3.607078,-5.044508,5.290940,-1.709282,5.073297,2.652946,-7.052972,3.704686,4.095742,2.192223,-4.592393,9.833422,-6.160759,-9.641230,-5.688657,-2.620495,3.595391,8.813761,-1.940422,-1.752640,-1.331519,-3.536248], dtype = "float32")#candidate|6138|(324,)|const|float32
call_6137 = relay.TupleGetItem(func_1978_call(relay.reshape(const_6138.astype('float32'), [4, 9, 9]), relay.reshape(const_6138.astype('float32'), [4, 9, 9]), ), 0)
call_6139 = relay.TupleGetItem(func_1981_call(relay.reshape(const_6138.astype('float32'), [4, 9, 9]), relay.reshape(const_6138.astype('float32'), [4, 9, 9]), ), 0)
func_4679_call = mod.get_global_var('func_4679')
func_4681_call = mutated_mod.get_global_var('func_4681')
call_6152 = relay.TupleGetItem(func_4679_call(), 1)
call_6153 = relay.TupleGetItem(func_4681_call(), 1)
output = relay.Tuple([call_6131,call_6137,const_6138,call_6152,])
output2 = relay.Tuple([call_6132,call_6139,const_6138,call_6153,])
func_6175 = relay.Function([], output)
mod['func_6175'] = func_6175
mod = relay.transform.InferType()(mod)
mutated_mod['func_6175'] = func_6175
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6175_call = mutated_mod.get_global_var('func_6175')
call_6176 = func_6175_call()
output = call_6176
func_6177 = relay.Function([], output)
mutated_mod['func_6177'] = func_6177
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6222 = relay.const([[[3.144893,2.905170,8.637497],[2.473847,1.349810,9.130368]],[[-8.669646,6.598244,6.808613],[-8.546029,-8.269922,-7.915127]],[[-1.012090,-1.144473,1.698633],[-6.912321,-5.411102,9.829647]],[[-4.592824,4.932186,-4.388362],[-0.230270,5.034769,3.196348]],[[6.071037,-6.525038,-4.276702],[-9.981903,2.275611,2.124292]],[[-3.833504,5.267142,0.316935],[-6.297503,-2.815610,-8.236356]],[[9.078258,7.558408,-6.186714],[3.961352,7.521055,4.763158]],[[-7.017869,-4.852468,0.928416],[-2.772905,4.150455,-2.569193]],[[-1.033679,-7.638828,-8.471654],[-4.632932,3.535556,7.289030]]], dtype = "float64")#candidate|6222|(9, 2, 3)|const|float64
uop_6223 = relay.rsqrt(const_6222.astype('float64')) # shape=(9, 2, 3)
const_6226 = relay.const([[[-3.328746,-4.586754,-1.399020],[-0.517576,-1.603342,8.421896]],[[8.379401,-5.583141,0.287627],[-9.382531,-8.164925,-5.924000]],[[8.426642,-9.188660,-9.905461],[-5.240038,-6.829494,-0.771349]],[[-2.199594,2.948950,5.398997],[8.003468,9.933070,-3.298170]],[[-6.746926,5.705804,-7.379437],[6.729683,-7.414198,2.404941]],[[-5.205830,8.802399,9.802274],[3.547681,-9.752407,-5.974517]],[[8.243236,-6.245866,7.342577],[4.392476,7.716428,0.814466]],[[6.157186,0.955457,-6.308749],[-8.234648,7.517191,4.284999]],[[0.390069,-5.921261,-8.139796],[1.800155,-2.367883,-0.350071]]], dtype = "float64")#candidate|6226|(9, 2, 3)|const|float64
bop_6227 = relay.add(uop_6223.astype('int16'), relay.reshape(const_6226.astype('int16'), relay.shape_of(uop_6223))) # shape=(9, 2, 3)
func_5738_call = mod.get_global_var('func_5738')
func_5740_call = mutated_mod.get_global_var('func_5740')
call_6230 = relay.TupleGetItem(func_5738_call(), 1)
call_6231 = relay.TupleGetItem(func_5740_call(), 1)
output = relay.Tuple([bop_6227,call_6230,])
output2 = relay.Tuple([bop_6227,call_6231,])
func_6234 = relay.Function([], output)
mod['func_6234'] = func_6234
mod = relay.transform.InferType()(mod)
mutated_mod['func_6234'] = func_6234
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6234_call = mutated_mod.get_global_var('func_6234')
call_6235 = func_6234_call()
output = call_6235
func_6236 = relay.Function([], output)
mutated_mod['func_6236'] = func_6236
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6255 = relay.var("var_6255", dtype = "float32", shape = (13, 1, 4))#candidate|6255|(13, 1, 4)|var|float32
const_6256 = relay.const([[[6.917089,7.284073,1.914428,8.664956],[-8.221488,-0.822660,7.702584,-1.517418]],[[-3.223432,-6.135341,-2.271073,-2.678418],[1.418781,-8.527322,5.248506,7.509666]],[[6.990451,4.187417,9.174424,1.567561],[-5.743449,-1.442006,-6.490887,4.799700]],[[1.679074,-3.535663,3.494512,-7.152137],[-0.459033,3.419845,-6.497533,6.696121]],[[2.049673,-5.655815,5.299047,-4.221733],[-4.849277,0.501933,-5.461885,6.855754]],[[-8.528706,7.159345,-8.252319,-4.321049],[-9.219446,-8.635952,-9.847098,-4.208370]],[[-2.374858,-2.388185,-8.534367,6.525929],[6.002319,7.387617,-3.486528,-7.650565]],[[2.403456,-4.403313,5.149185,-7.088606],[-9.740529,6.607941,-9.636162,-2.903296]],[[-3.337494,-1.058299,-2.506357,0.923734],[-4.141852,9.600797,2.489288,-9.041308]],[[7.853636,-9.583310,7.183498,-5.557280],[5.349805,1.894687,7.686850,0.543944]],[[-5.667163,-8.271470,2.263473,0.311631],[9.877904,-9.144368,-1.120039,7.192171]],[[-8.876786,-6.926628,-1.516374,1.912853],[-3.692971,-5.224110,0.092750,-6.645257]],[[0.248468,-1.589799,-5.292589,4.444922],[-8.840799,9.464326,-8.117192,-0.368696]]], dtype = "float32")#candidate|6256|(13, 2, 4)|const|float32
bop_6257 = relay.mod(var_6255.astype('float32'), const_6256.astype('float32')) # shape=(13, 2, 4)
uop_6271 = relay.tan(bop_6257.astype('float32')) # shape=(13, 2, 4)
func_4987_call = mod.get_global_var('func_4987')
func_4988_call = mutated_mod.get_global_var('func_4988')
call_6279 = relay.TupleGetItem(func_4987_call(), 0)
call_6280 = relay.TupleGetItem(func_4988_call(), 0)
uop_6296 = relay.atan(uop_6271.astype('float64')) # shape=(13, 2, 4)
output = relay.Tuple([call_6279,uop_6296,])
output2 = relay.Tuple([call_6280,uop_6296,])
func_6305 = relay.Function([var_6255,], output)
mod['func_6305'] = func_6305
mod = relay.transform.InferType()(mod)
var_6306 = relay.var("var_6306", dtype = "float32", shape = (13, 1, 4))#candidate|6306|(13, 1, 4)|var|float32
output = func_6305(var_6306)
func_6307 = relay.Function([var_6306], output)
mutated_mod['func_6307'] = func_6307
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4936_call = mod.get_global_var('func_4936')
func_4937_call = mutated_mod.get_global_var('func_4937')
call_6413 = relay.TupleGetItem(func_4936_call(), 0)
call_6414 = relay.TupleGetItem(func_4937_call(), 0)
output = relay.Tuple([call_6413,])
output2 = relay.Tuple([call_6414,])
func_6437 = relay.Function([], output)
mod['func_6437'] = func_6437
mod = relay.transform.InferType()(mod)
mutated_mod['func_6437'] = func_6437
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6437_call = mutated_mod.get_global_var('func_6437')
call_6438 = func_6437_call()
output = call_6438
func_6439 = relay.Function([], output)
mutated_mod['func_6439'] = func_6439
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6437_call = mod.get_global_var('func_6437')
func_6439_call = mutated_mod.get_global_var('func_6439')
call_6518 = relay.TupleGetItem(func_6437_call(), 0)
call_6519 = relay.TupleGetItem(func_6439_call(), 0)
func_5782_call = mod.get_global_var('func_5782')
func_5783_call = mutated_mod.get_global_var('func_5783')
call_6532 = func_5782_call()
call_6533 = func_5782_call()
func_5567_call = mod.get_global_var('func_5567')
func_5568_call = mutated_mod.get_global_var('func_5568')
call_6538 = func_5567_call()
call_6539 = func_5567_call()
output = relay.Tuple([call_6518,call_6532,call_6538,])
output2 = relay.Tuple([call_6519,call_6533,call_6539,])
func_6543 = relay.Function([], output)
mod['func_6543'] = func_6543
mod = relay.transform.InferType()(mod)
mutated_mod['func_6543'] = func_6543
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6543_call = mutated_mod.get_global_var('func_6543')
call_6544 = func_6543_call()
output = call_6544
func_6545 = relay.Function([], output)
mutated_mod['func_6545'] = func_6545
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6596 = relay.var("var_6596", dtype = "int64", shape = ())#candidate|6596|()|var|int64
var_6597 = relay.var("var_6597", dtype = "int64", shape = (2, 11, 10))#candidate|6597|(2, 11, 10)|var|int64
bop_6598 = relay.less_equal(var_6596.astype('bool'), var_6597.astype('bool')) # shape=(2, 11, 10)
uop_6606 = relay.sin(var_6597.astype('float32')) # shape=(2, 11, 10)
output = relay.Tuple([bop_6598,uop_6606,])
output2 = relay.Tuple([bop_6598,uop_6606,])
func_6609 = relay.Function([var_6596,var_6597,], output)
mod['func_6609'] = func_6609
mod = relay.transform.InferType()(mod)
mutated_mod['func_6609'] = func_6609
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6609_call = mutated_mod.get_global_var('func_6609')
var_6611 = relay.var("var_6611", dtype = "int64", shape = ())#candidate|6611|()|var|int64
var_6612 = relay.var("var_6612", dtype = "int64", shape = (2, 11, 10))#candidate|6612|(2, 11, 10)|var|int64
call_6610 = func_6609_call(var_6611,var_6612,)
output = call_6610
func_6613 = relay.Function([var_6611,var_6612,], output)
mutated_mod['func_6613'] = func_6613
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6175_call = mod.get_global_var('func_6175')
func_6177_call = mutated_mod.get_global_var('func_6177')
call_6658 = relay.TupleGetItem(func_6175_call(), 2)
call_6659 = relay.TupleGetItem(func_6177_call(), 2)
output = call_6658
output2 = call_6659
func_6661 = relay.Function([], output)
mod['func_6661'] = func_6661
mod = relay.transform.InferType()(mod)
output = func_6661()
func_6662 = relay.Function([], output)
mutated_mod['func_6662'] = func_6662
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6671 = relay.var("var_6671", dtype = "float32", shape = (9, 9, 7))#candidate|6671|(9, 9, 7)|var|float32
uop_6672 = relay.atan(var_6671.astype('float32')) # shape=(9, 9, 7)
output = uop_6672
output2 = uop_6672
func_6675 = relay.Function([var_6671,], output)
mod['func_6675'] = func_6675
mod = relay.transform.InferType()(mod)
var_6676 = relay.var("var_6676", dtype = "float32", shape = (9, 9, 7))#candidate|6676|(9, 9, 7)|var|float32
output = func_6675(var_6676)
func_6677 = relay.Function([var_6676], output)
mutated_mod['func_6677'] = func_6677
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4987_call = mod.get_global_var('func_4987')
func_4988_call = mutated_mod.get_global_var('func_4988')
call_6735 = relay.TupleGetItem(func_4987_call(), 0)
call_6736 = relay.TupleGetItem(func_4988_call(), 0)
output = relay.Tuple([call_6735,])
output2 = relay.Tuple([call_6736,])
func_6741 = relay.Function([], output)
mod['func_6741'] = func_6741
mod = relay.transform.InferType()(mod)
mutated_mod['func_6741'] = func_6741
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6741_call = mutated_mod.get_global_var('func_6741')
call_6742 = func_6741_call()
output = call_6742
func_6743 = relay.Function([], output)
mutated_mod['func_6743'] = func_6743
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6741_call = mod.get_global_var('func_6741')
func_6743_call = mutated_mod.get_global_var('func_6743')
call_6812 = relay.TupleGetItem(func_6741_call(), 0)
call_6813 = relay.TupleGetItem(func_6743_call(), 0)
func_5060_call = mod.get_global_var('func_5060')
func_5062_call = mutated_mod.get_global_var('func_5062')
call_6815 = relay.TupleGetItem(func_5060_call(), 0)
call_6816 = relay.TupleGetItem(func_5062_call(), 0)
func_6175_call = mod.get_global_var('func_6175')
func_6177_call = mutated_mod.get_global_var('func_6177')
call_6839 = relay.TupleGetItem(func_6175_call(), 3)
call_6840 = relay.TupleGetItem(func_6177_call(), 3)
uop_6842 = relay.log10(call_6812.astype('float64')) # shape=(768, 1)
uop_6844 = relay.log10(call_6813.astype('float64')) # shape=(768, 1)
output = relay.Tuple([call_6815,call_6839,uop_6842,])
output2 = relay.Tuple([call_6816,call_6840,uop_6844,])
func_6848 = relay.Function([], output)
mod['func_6848'] = func_6848
mod = relay.transform.InferType()(mod)
output = func_6848()
func_6849 = relay.Function([], output)
mutated_mod['func_6849'] = func_6849
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5083_call = mod.get_global_var('func_5083')
func_5085_call = mutated_mod.get_global_var('func_5085')
call_6874 = func_5083_call()
call_6875 = func_5083_call()
output = relay.Tuple([call_6874,])
output2 = relay.Tuple([call_6875,])
func_6876 = relay.Function([], output)
mod['func_6876'] = func_6876
mod = relay.transform.InferType()(mod)
output = func_6876()
func_6877 = relay.Function([], output)
mutated_mod['func_6877'] = func_6877
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6234_call = mod.get_global_var('func_6234')
func_6236_call = mutated_mod.get_global_var('func_6236')
call_6958 = relay.TupleGetItem(func_6234_call(), 1)
call_6959 = relay.TupleGetItem(func_6236_call(), 1)
func_6088_call = mod.get_global_var('func_6088')
func_6089_call = mutated_mod.get_global_var('func_6089')
call_6985 = relay.TupleGetItem(func_6088_call(), 5)
call_6986 = relay.TupleGetItem(func_6089_call(), 5)
func_47_call = mod.get_global_var('func_47')
func_49_call = mutated_mod.get_global_var('func_49')
var_7011 = relay.var("var_7011", dtype = "float32", shape = (96,))#candidate|7011|(96,)|var|float32
call_7010 = relay.TupleGetItem(func_47_call(relay.reshape(var_7011.astype('float32'), [3, 16, 2])), 0)
call_7012 = relay.TupleGetItem(func_49_call(relay.reshape(var_7011.astype('float32'), [3, 16, 2])), 0)
output = relay.Tuple([call_6958,call_6985,call_7010,var_7011,])
output2 = relay.Tuple([call_6959,call_6986,call_7012,var_7011,])
func_7013 = relay.Function([var_7011,], output)
mod['func_7013'] = func_7013
mod = relay.transform.InferType()(mod)
mutated_mod['func_7013'] = func_7013
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7014 = relay.var("var_7014", dtype = "float32", shape = (96,))#candidate|7014|(96,)|var|float32
func_7013_call = mutated_mod.get_global_var('func_7013')
call_7015 = func_7013_call(var_7014)
output = call_7015
func_7016 = relay.Function([var_7014], output)
mutated_mod['func_7016'] = func_7016
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7076 = relay.var("var_7076", dtype = "float64", shape = (9, 3, 8))#candidate|7076|(9, 3, 8)|var|float64
uop_7077 = relay.acosh(var_7076.astype('float64')) # shape=(9, 3, 8)
uop_7082 = relay.acos(uop_7077.astype('float32')) # shape=(9, 3, 8)
func_3729_call = mod.get_global_var('func_3729')
func_3732_call = mutated_mod.get_global_var('func_3732')
var_7086 = relay.var("var_7086", dtype = "bool", shape = (52, 2))#candidate|7086|(52, 2)|var|bool
call_7085 = relay.TupleGetItem(func_3729_call(relay.reshape(var_7086.astype('bool'), [8, 13, 1])), 2)
call_7087 = relay.TupleGetItem(func_3732_call(relay.reshape(var_7086.astype('bool'), [8, 13, 1])), 2)
output = relay.Tuple([uop_7082,call_7085,var_7086,])
output2 = relay.Tuple([uop_7082,call_7087,var_7086,])
func_7088 = relay.Function([var_7076,var_7086,], output)
mod['func_7088'] = func_7088
mod = relay.transform.InferType()(mod)
var_7089 = relay.var("var_7089", dtype = "float64", shape = (9, 3, 8))#candidate|7089|(9, 3, 8)|var|float64
var_7090 = relay.var("var_7090", dtype = "bool", shape = (52, 2))#candidate|7090|(52, 2)|var|bool
output = func_7088(var_7089,var_7090,)
func_7091 = relay.Function([var_7089,var_7090,], output)
mutated_mod['func_7091'] = func_7091
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5782_call = mod.get_global_var('func_5782')
func_5783_call = mutated_mod.get_global_var('func_5783')
call_7120 = func_5782_call()
call_7121 = func_5782_call()
output = call_7120
output2 = call_7121
func_7122 = relay.Function([], output)
mod['func_7122'] = func_7122
mod = relay.transform.InferType()(mod)
mutated_mod['func_7122'] = func_7122
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7122_call = mutated_mod.get_global_var('func_7122')
call_7123 = func_7122_call()
output = call_7123
func_7124 = relay.Function([], output)
mutated_mod['func_7124'] = func_7124
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4936_call = mod.get_global_var('func_4936')
func_4937_call = mutated_mod.get_global_var('func_4937')
call_7238 = relay.TupleGetItem(func_4936_call(), 0)
call_7239 = relay.TupleGetItem(func_4937_call(), 0)
output = call_7238
output2 = call_7239
func_7265 = relay.Function([], output)
mod['func_7265'] = func_7265
mod = relay.transform.InferType()(mod)
output = func_7265()
func_7266 = relay.Function([], output)
mutated_mod['func_7266'] = func_7266
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6661_call = mod.get_global_var('func_6661')
func_6662_call = mutated_mod.get_global_var('func_6662')
call_7276 = func_6661_call()
call_7277 = func_6661_call()
output = call_7276
output2 = call_7277
func_7286 = relay.Function([], output)
mod['func_7286'] = func_7286
mod = relay.transform.InferType()(mod)
output = func_7286()
func_7287 = relay.Function([], output)
mutated_mod['func_7287'] = func_7287
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7295 = relay.var("var_7295", dtype = "float32", shape = (9, 13, 7))#candidate|7295|(9, 13, 7)|var|float32
var_7296 = relay.var("var_7296", dtype = "float32", shape = (9, 13, 7))#candidate|7296|(9, 13, 7)|var|float32
bop_7297 = relay.maximum(var_7295.astype('float32'), relay.reshape(var_7296.astype('float32'), relay.shape_of(var_7295))) # shape=(9, 13, 7)
func_3158_call = mod.get_global_var('func_3158')
func_3162_call = mutated_mod.get_global_var('func_3162')
var_7316 = relay.var("var_7316", dtype = "float64", shape = (3, 56))#candidate|7316|(3, 56)|var|float64
const_7317 = relay.const([-6,-7,2,-6,-8,8,-9,8,2,-3,4,-7,-10,-5,-3,-4,-9,-6,4,9,-2,-3,-9,-9,4,9,9,5,6,-10,4,-10,4,1,7,-1,8,-2,-5,-7,10,-9,1,-8,3,8,3,-8,3,4,-1,8,1,8,10,6,-1,-1,-10,1,-1,1,-6,-9,-10,8,-10,-5,-8,-6,8,10,-1,-4,-4,-4,-6,6,-4,1,-2,7,5,4,5,-2,3,4,5,-5,-5,-3,-4,4,-8,3,-4,-3,-4,-2,6,-4,6,-5,6,-1,8,3,-4,9,-4,1,3,-4,-10,6,10,5,7,-6,-9,-5,2,-9,9,-8,2,-8,5,2,8,-1,7,4,-7,9,1,5,6,-8,3,7,-7,-8,8,-10,-9,7,-1,2,-5,-4,-6,8,2,-8,-3,-8,-9,3,-8,4,-5,3,-1,-4,7,3,-8,7,6,-6,-2,9,3,-9,-6,8,5,7,-8,4,-10,1,7,-9,5,2,-10,-9,5,-3,4,-4,7,-6,-6,-2,-7,-6,1,7,-1,-3,4,-3,3,-3,1,5,1,-3,-2,-5,8,-5,-7,6,5,-8,-3,-7,-6,3,-10,-5,2,9,-3,-4,6,-1,-4,-10,4,8,-8,6,-7,-1,-9,-7,-4,-6,-1,-9,2,9,-5,-4,6,8,7,5,-5,1,5,-5,-4,-8,-1,-1,7,6,-8,2,-2,-5,-6,-5,9,3,5,2,8,4,9,2,-5,7,-1,-7,-1,6,-3,8,-8,-5,-10,-2,-9,10,6,-3,4,-4,2,10,4,-1,-8,10,-4,10,-3,4,3,-9,10,9,5,1,-7,-1,8,9,-2,3,-1,2,7,6,-4,8,1,7,1,1,8,10,-5,1,7,5,-9,3,-3,-6,6,-10,-1,2,5,-1,-7,-9,1,10,-6,-3,-2,-2,5,-3,-4,-9,9,9,5,7,3,4,7,-2,-1,-9,3,-1,1,-1,-6,-10,-10,-1,2,-6,-3,1,-4,-5,7,-7,5,-9,1,-9,-8,4,-1,2,-2,-8,-7,-6,-1,-6,-3,7,3,4,5,3,-4,3,9,-9,-4,-7,-6,-5,-2,-5,6,-4,-9,-4,-2,10,-1,1,10,10,-7,-8,10,1,-4,8,10,10,-2,6,9,-10,-10,-2,-3,6,-1,-2,-6,2,9,10,6,1,-4,2,2,4,4,-10,-10,6,1,-2,-3,6,6,3,8,10,10,5,-5,-2,5,-8,10,-6,-4,-7,3,-2,1,-3,-1,1,8,-1,-5,1,-7,-6,-5,-8,-3,5,-8,6,-4,10,-5,-5,7,5,-1,3,-7,4,5,10,-7,-3,4,6,-2,1,7,10,2,-7], dtype = "int8")#candidate|7317|(512,)|const|int8
call_7315 = relay.TupleGetItem(func_3158_call(relay.reshape(var_7316.astype('float64'), [7, 12, 2]), relay.reshape(const_7317.astype('int8'), [256, 2]), ), 3)
call_7318 = relay.TupleGetItem(func_3162_call(relay.reshape(var_7316.astype('float64'), [7, 12, 2]), relay.reshape(const_7317.astype('int8'), [256, 2]), ), 3)
output = relay.Tuple([bop_7297,call_7315,var_7316,const_7317,])
output2 = relay.Tuple([bop_7297,call_7318,var_7316,const_7317,])
func_7319 = relay.Function([var_7295,var_7296,var_7316,], output)
mod['func_7319'] = func_7319
mod = relay.transform.InferType()(mod)
mutated_mod['func_7319'] = func_7319
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7319_call = mutated_mod.get_global_var('func_7319')
var_7321 = relay.var("var_7321", dtype = "float32", shape = (9, 13, 7))#candidate|7321|(9, 13, 7)|var|float32
var_7322 = relay.var("var_7322", dtype = "float32", shape = (9, 13, 7))#candidate|7322|(9, 13, 7)|var|float32
var_7323 = relay.var("var_7323", dtype = "float64", shape = (3, 56))#candidate|7323|(3, 56)|var|float64
call_7320 = func_7319_call(var_7321,var_7322,var_7323,)
output = call_7320
func_7324 = relay.Function([var_7321,var_7322,var_7323,], output)
mutated_mod['func_7324'] = func_7324
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7329 = relay.const([[[6,-7,-10,-6,4,5,9,-8,4,-2,-4],[2,1,-4,-3,-8,6,9,-2,5,1,4],[1,-5,-2,1,7,7,-9,9,-3,5,10],[5,1,10,1,-3,7,-9,-4,-6,-6,-3],[5,-9,8,-8,-9,2,7,1,-7,-2,4],[-3,2,1,4,2,-5,8,6,2,8,-3],[-8,-3,-1,-1,-8,5,-6,7,2,9,-4],[-1,-2,-6,-8,7,5,5,7,-3,10,5],[4,-6,-5,6,-4,10,1,-8,4,9,5],[7,7,9,6,5,-7,-8,8,10,2,-7],[5,-4,-1,10,6,-2,-5,-2,2,-3,-8],[1,-7,-9,-2,-2,4,-8,2,2,5,-2],[-4,5,4,5,1,10,-9,-6,5,-6,5],[-5,1,-4,-3,1,3,-3,4,-8,4,-2],[7,1,-6,-5,2,8,9,-4,-8,-8,-8],[7,9,-6,5,5,6,8,-7,-10,2,6]],[[10,4,4,-1,2,-6,-5,-5,10,4,10],[-7,4,-5,7,-10,1,7,5,-10,7,-10],[-8,-3,-7,-6,9,-3,1,3,-1,-7,6],[-10,1,10,3,10,-6,-2,10,-1,1,5],[-6,-2,-1,9,-2,-8,8,2,-9,5,-5],[-2,6,7,-9,-3,-1,2,-3,-7,2,9],[3,-3,2,-10,6,-4,-7,-4,-3,1,-2],[-6,-4,10,-8,5,-10,8,6,-1,-1,-7],[-7,-5,7,-6,9,-4,5,-10,-4,-6,5],[6,-1,-6,-5,-1,5,5,-1,1,-3,4],[2,10,-1,8,-10,5,-3,-4,-3,1,10],[-10,-8,-3,-9,-6,-1,4,-3,-7,-1,2],[5,-4,-10,6,2,-3,8,-9,2,-7,4],[-6,8,-9,6,-4,-9,9,5,1,3,8],[-1,10,4,8,-1,-4,8,7,-5,4,9],[-5,-1,2,2,7,8,-9,-7,2,-3,-6]],[[-2,-6,-5,-2,4,-1,-4,8,4,9,3],[6,-5,7,-7,-9,-7,7,-5,-6,-4,5],[1,-4,-9,9,-1,1,5,3,10,-2,-7],[8,-8,3,3,-2,9,1,10,-1,5,6],[9,-4,9,5,5,-8,-8,-6,8,7,-5],[7,-10,-6,-10,5,-10,-8,4,-7,-7,-1],[7,-9,-7,-2,7,-8,10,2,-4,9,5],[-5,1,8,-6,-6,-8,7,1,6,1,-5],[-7,2,3,9,1,6,3,-1,-5,-1,-1],[-8,10,-10,-9,-1,-1,10,-6,-1,3,8],[-3,7,5,-3,-8,9,-5,8,-4,-2,4],[7,1,5,-7,-1,4,-2,-8,7,6,-6],[5,-4,-3,-1,8,-6,-8,-4,6,7,5],[-10,2,3,-3,8,-10,-6,9,-3,5,-10],[2,8,-1,-9,2,-3,9,4,-2,-2,5],[9,-3,-4,2,3,-8,-4,-6,7,-6,-6]],[[-6,-9,-3,3,6,3,-4,2,-1,-10,6],[1,-8,-1,1,-9,6,-5,6,-8,-2,6],[9,4,2,2,7,-7,-2,-9,-6,9,-6],[-2,6,7,-10,-6,10,3,-3,8,-6,6],[7,-10,4,4,6,2,-5,-10,1,-6,-5],[5,-3,7,-1,-7,8,9,9,-10,1,-8],[3,1,-3,7,7,-5,4,-10,-5,-1,-6],[-5,-6,-1,8,-3,-9,-5,5,-2,3,-3],[-9,1,-1,9,5,-6,10,9,-9,9,7],[10,-7,4,-10,-8,-1,-5,3,4,9,-2],[7,6,-2,-2,8,-2,-4,4,5,-3,1],[3,-3,6,4,10,7,-9,-9,-9,3,-4],[8,-1,2,-1,3,8,10,-9,-2,-8,-2],[-8,-8,-10,10,7,5,-3,3,1,8,3],[5,-2,8,-6,7,-1,-2,-5,8,2,-4],[-10,1,-5,3,8,-8,5,-2,-8,4,3]]], dtype = "int32")#candidate|7329|(4, 16, 11)|const|int32
var_7330 = relay.var("var_7330", dtype = "int32", shape = (4, 16, 11))#candidate|7330|(4, 16, 11)|var|int32
bop_7331 = relay.maximum(const_7329.astype('int32'), relay.reshape(var_7330.astype('int32'), relay.shape_of(const_7329))) # shape=(4, 16, 11)
func_47_call = mod.get_global_var('func_47')
func_49_call = mutated_mod.get_global_var('func_49')
var_7345 = relay.var("var_7345", dtype = "float32", shape = (96,))#candidate|7345|(96,)|var|float32
call_7344 = relay.TupleGetItem(func_47_call(relay.reshape(var_7345.astype('float32'), [3, 16, 2])), 0)
call_7346 = relay.TupleGetItem(func_49_call(relay.reshape(var_7345.astype('float32'), [3, 16, 2])), 0)
func_5060_call = mod.get_global_var('func_5060')
func_5062_call = mutated_mod.get_global_var('func_5062')
call_7347 = relay.TupleGetItem(func_5060_call(), 0)
call_7348 = relay.TupleGetItem(func_5062_call(), 0)
func_6234_call = mod.get_global_var('func_6234')
func_6236_call = mutated_mod.get_global_var('func_6236')
call_7355 = relay.TupleGetItem(func_6234_call(), 0)
call_7356 = relay.TupleGetItem(func_6236_call(), 0)
func_4249_call = mod.get_global_var('func_4249')
func_4251_call = mutated_mod.get_global_var('func_4251')
var_7366 = relay.var("var_7366", dtype = "float32", shape = (324,))#candidate|7366|(324,)|var|float32
call_7365 = relay.TupleGetItem(func_4249_call(relay.reshape(var_7366.astype('float32'), [1, 324])), 2)
call_7367 = relay.TupleGetItem(func_4251_call(relay.reshape(var_7366.astype('float32'), [1, 324])), 2)
output = relay.Tuple([bop_7331,call_7344,var_7345,call_7347,call_7355,call_7365,var_7366,])
output2 = relay.Tuple([bop_7331,call_7346,var_7345,call_7348,call_7356,call_7367,var_7366,])
func_7378 = relay.Function([var_7330,var_7345,var_7366,], output)
mod['func_7378'] = func_7378
mod = relay.transform.InferType()(mod)
var_7379 = relay.var("var_7379", dtype = "int32", shape = (4, 16, 11))#candidate|7379|(4, 16, 11)|var|int32
var_7380 = relay.var("var_7380", dtype = "float32", shape = (96,))#candidate|7380|(96,)|var|float32
var_7381 = relay.var("var_7381", dtype = "float32", shape = (324,))#candidate|7381|(324,)|var|float32
output = func_7378(var_7379,var_7380,var_7381,)
func_7382 = relay.Function([var_7379,var_7380,var_7381,], output)
mutated_mod['func_7382'] = func_7382
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5738_call = mod.get_global_var('func_5738')
func_5740_call = mutated_mod.get_global_var('func_5740')
call_7389 = relay.TupleGetItem(func_5738_call(), 2)
call_7390 = relay.TupleGetItem(func_5740_call(), 2)
output = call_7389
output2 = call_7390
func_7391 = relay.Function([], output)
mod['func_7391'] = func_7391
mod = relay.transform.InferType()(mod)
mutated_mod['func_7391'] = func_7391
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7391_call = mutated_mod.get_global_var('func_7391')
call_7392 = func_7391_call()
output = call_7392
func_7393 = relay.Function([], output)
mutated_mod['func_7393'] = func_7393
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6661_call = mod.get_global_var('func_6661')
func_6662_call = mutated_mod.get_global_var('func_6662')
call_7461 = func_6661_call()
call_7462 = func_6661_call()
output = call_7461
output2 = call_7462
func_7472 = relay.Function([], output)
mod['func_7472'] = func_7472
mod = relay.transform.InferType()(mod)
output = func_7472()
func_7473 = relay.Function([], output)
mutated_mod['func_7473'] = func_7473
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4936_call = mod.get_global_var('func_4936')
func_4937_call = mutated_mod.get_global_var('func_4937')
call_7474 = relay.TupleGetItem(func_4936_call(), 0)
call_7475 = relay.TupleGetItem(func_4937_call(), 0)
output = call_7474
output2 = call_7475
func_7485 = relay.Function([], output)
mod['func_7485'] = func_7485
mod = relay.transform.InferType()(mod)
mutated_mod['func_7485'] = func_7485
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7485_call = mutated_mod.get_global_var('func_7485')
call_7486 = func_7485_call()
output = call_7486
func_7487 = relay.Function([], output)
mutated_mod['func_7487'] = func_7487
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7122_call = mod.get_global_var('func_7122')
func_7124_call = mutated_mod.get_global_var('func_7124')
call_7488 = func_7122_call()
call_7489 = func_7122_call()
var_7516 = relay.var("var_7516", dtype = "uint16", shape = (12, 5, 2))#candidate|7516|(12, 5, 2)|var|uint16
bop_7517 = relay.left_shift(call_7488.astype('int8'), relay.reshape(var_7516.astype('int8'), relay.shape_of(call_7488))) # shape=(12, 5, 2)
bop_7520 = relay.left_shift(call_7489.astype('int8'), relay.reshape(var_7516.astype('int8'), relay.shape_of(call_7489))) # shape=(12, 5, 2)
output = relay.Tuple([bop_7517,])
output2 = relay.Tuple([bop_7520,])
func_7524 = relay.Function([var_7516,], output)
mod['func_7524'] = func_7524
mod = relay.transform.InferType()(mod)
var_7525 = relay.var("var_7525", dtype = "uint16", shape = (12, 5, 2))#candidate|7525|(12, 5, 2)|var|uint16
output = func_7524(var_7525)
func_7526 = relay.Function([var_7525], output)
mutated_mod['func_7526'] = func_7526
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7579 = relay.var("var_7579", dtype = "float32", shape = (13, 16, 4))#candidate|7579|(13, 16, 4)|var|float32
uop_7580 = relay.cos(var_7579.astype('float32')) # shape=(13, 16, 4)
output = uop_7580
output2 = uop_7580
func_7585 = relay.Function([var_7579,], output)
mod['func_7585'] = func_7585
mod = relay.transform.InferType()(mod)
mutated_mod['func_7585'] = func_7585
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7586 = relay.var("var_7586", dtype = "float32", shape = (13, 16, 4))#candidate|7586|(13, 16, 4)|var|float32
func_7585_call = mutated_mod.get_global_var('func_7585')
call_7587 = func_7585_call(var_7586)
output = call_7587
func_7588 = relay.Function([var_7586], output)
mutated_mod['func_7588'] = func_7588
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6876_call = mod.get_global_var('func_6876')
func_6877_call = mutated_mod.get_global_var('func_6877')
call_7590 = relay.TupleGetItem(func_6876_call(), 0)
call_7591 = relay.TupleGetItem(func_6877_call(), 0)
output = call_7590
output2 = call_7591
func_7594 = relay.Function([], output)
mod['func_7594'] = func_7594
mod = relay.transform.InferType()(mod)
output = func_7594()
func_7595 = relay.Function([], output)
mutated_mod['func_7595'] = func_7595
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5019_call = mod.get_global_var('func_5019')
func_5021_call = mutated_mod.get_global_var('func_5021')
call_7619 = relay.TupleGetItem(func_5019_call(), 0)
call_7620 = relay.TupleGetItem(func_5021_call(), 0)
func_5160_call = mod.get_global_var('func_5160')
func_5161_call = mutated_mod.get_global_var('func_5161')
call_7625 = func_5160_call()
call_7626 = func_5160_call()
uop_7635 = relay.asin(call_7625.astype('float32')) # shape=(768, 1)
uop_7637 = relay.asin(call_7626.astype('float32')) # shape=(768, 1)
var_7642 = relay.var("var_7642", dtype = "float32", shape = (768, 11))#candidate|7642|(768, 11)|var|float32
bop_7643 = relay.mod(uop_7635.astype('float64'), var_7642.astype('float64')) # shape=(768, 11)
bop_7646 = relay.mod(uop_7637.astype('float64'), var_7642.astype('float64')) # shape=(768, 11)
func_7524_call = mod.get_global_var('func_7524')
func_7526_call = mutated_mod.get_global_var('func_7526')
var_7650 = relay.var("var_7650", dtype = "uint16", shape = (120,))#candidate|7650|(120,)|var|uint16
call_7649 = relay.TupleGetItem(func_7524_call(relay.reshape(var_7650.astype('uint16'), [12, 5, 2])), 0)
call_7651 = relay.TupleGetItem(func_7526_call(relay.reshape(var_7650.astype('uint16'), [12, 5, 2])), 0)
bop_7664 = relay.subtract(bop_7643.astype('uint16'), uop_7635.astype('uint16')) # shape=(768, 11)
bop_7667 = relay.subtract(bop_7646.astype('uint16'), uop_7637.astype('uint16')) # shape=(768, 11)
const_7669 = relay.const([[-1,-6,-8,-6,-1,2,-9,-4,-1,2,2],[6,9,-4,10,7,-5,-10,7,3,-8,-5],[3,9,-4,7,3,1,-9,4,-3,3,-6],[-8,-8,-5,6,-3,-9,-5,3,10,-7,-7],[8,-6,-2,6,1,-3,6,7,-7,-1,5],[1,7,-4,-2,1,-4,-10,7,6,-1,10],[8,1,8,-4,-7,-10,8,-1,7,-2,-10],[-7,10,8,2,-1,3,-6,6,-3,6,-9],[9,7,-5,-7,1,3,-7,5,9,10,9],[-5,7,-8,-1,-9,1,8,-3,1,1,7],[5,9,-9,-5,6,-3,-8,-8,-10,-1,1],[6,-6,-7,-1,5,6,9,5,-4,-6,6],[10,6,8,-2,9,-2,5,2,-8,1,2],[-9,-5,-8,2,8,-7,-3,-4,-4,2,-9],[-9,-10,-7,1,2,6,7,-10,-7,2,-5],[-9,-9,-3,2,8,1,8,-3,-7,1,2],[-9,-8,3,10,-4,-6,-3,5,-8,-7,-5],[9,6,-10,-1,-4,7,7,-1,-7,-10,-9],[3,-10,-9,2,-4,1,-8,6,5,10,-3],[1,5,-8,-4,-8,10,-8,5,-2,-2,8],[4,-9,-3,1,7,-9,-4,9,-3,-5,-7],[4,2,2,9,-3,-3,1,3,-9,6,7],[4,-7,5,1,-4,5,-3,1,-8,-6,-7],[4,-1,-2,-2,6,-5,4,-5,-3,4,-7],[8,8,2,-4,2,-1,-2,9,-4,-3,-8],[-2,-5,-3,4,3,-8,5,-6,-9,8,1],[-6,7,5,-10,6,-7,-6,10,-2,1,6],[10,-6,10,2,5,2,-8,1,-10,-2,10],[1,8,-10,5,-5,-10,5,-5,3,-7,-2],[-4,4,2,2,2,9,-9,8,-7,-9,2],[-10,5,6,10,6,3,-7,6,6,-5,9],[-3,7,10,10,-4,-8,6,8,4,-10,-3],[-1,-10,-10,-1,10,8,8,5,-9,-10,5],[-2,2,8,4,-2,-2,-3,7,3,-10,7],[6,-7,3,1,3,-3,-1,8,-4,-4,3],[1,3,-1,5,-2,2,-6,-9,4,-4,7],[-10,3,-7,10,-6,4,-5,2,-3,-10,6],[-9,-7,-6,-2,6,-10,-5,6,1,-6,-1],[9,10,-10,6,-8,-2,2,6,3,-5,1],[-3,7,10,10,6,-5,-1,9,-4,6,4],[5,1,9,2,6,-8,-9,6,-10,-9,9],[3,-9,8,4,-3,-1,-7,-10,2,-4,9],[-7,-3,9,3,1,-7,10,6,-7,-2,-3],[9,-10,9,9,7,5,4,-1,-4,-10,3],[-6,5,7,-10,-10,4,-7,-4,-1,4,-1],[1,-7,4,-4,9,-3,-3,-6,1,-1,-6],[7,7,-2,-3,-1,-5,-9,-6,-4,-3,1],[-9,1,5,-6,10,-10,3,-8,-5,3,7],[-10,3,8,-5,3,10,-6,6,5,-7,-3],[-8,-9,1,-6,-1,1,-2,-3,-2,1,-2],[6,-2,4,-7,-10,-9,10,10,-10,2,-7],[2,1,6,-7,-10,-6,5,2,8,-9,-2],[9,-4,-2,-10,-3,9,-8,6,3,10,8],[1,9,1,-8,-6,-4,-4,1,5,8,-7],[-9,2,9,-5,-9,-7,6,6,-1,-1,-7],[1,-8,-1,10,-3,-1,3,8,8,-4,6],[3,6,-4,-8,1,-8,-6,7,7,5,4],[-9,-3,10,4,-7,-7,10,9,4,-9,-1],[1,1,6,3,1,6,1,-3,-3,-9,-5],[-4,10,4,-10,4,-1,-9,-10,-10,-6,-7],[2,9,10,6,10,-10,7,10,7,9,1],[-8,10,-2,-2,-3,-8,-10,10,-6,5,3],[-9,9,10,-5,-6,2,1,-2,4,9,-8],[2,6,-10,-3,-3,7,10,2,8,10,-3],[5,-4,-3,-1,-4,10,-3,3,3,-10,-9],[-8,8,8,6,-9,-9,8,-7,-2,5,3],[2,6,3,8,8,5,-3,-6,-6,-8,9],[8,8,-9,4,3,-9,5,-6,-3,10,2],[3,-2,2,-6,7,-7,8,10,-9,9,-9],[-9,9,9,2,-3,-9,3,-3,2,-5,-7],[-6,-4,-7,2,-9,-2,5,-8,-5,1,3],[5,5,8,-6,-4,1,7,2,7,-10,-10],[2,-3,6,-1,10,-7,-5,8,9,4,-9],[-1,10,-4,6,-7,-1,-5,6,8,-4,-4],[9,10,3,9,5,-5,-7,-5,-5,1,-5],[-5,-6,9,-5,1,-5,1,5,10,-1,4],[3,2,4,-4,-4,1,1,10,-3,9,1],[5,-1,7,9,-3,-1,-2,10,5,4,-4],[6,-10,-6,-6,-8,-5,6,-4,-3,9,10],[10,-7,6,1,-6,-3,-5,-5,5,1,-6],[-4,-2,-5,-1,-2,9,-6,-1,-2,-5,3],[-5,2,-6,2,2,2,2,-4,-6,-4,6],[-7,-8,-3,-7,2,9,-4,6,8,-3,-1],[10,10,4,1,5,-6,-1,5,-7,10,8],[2,-1,2,-1,-10,8,6,-3,1,-7,10],[-6,-5,-9,-3,-8,-3,-5,4,-5,6,-4],[3,-3,5,1,-7,-8,2,-7,6,-9,-6],[-1,-10,-7,-10,-3,10,9,-6,-9,-7,-3],[-6,-5,-8,1,-7,-8,-1,-5,8,5,-2],[1,5,10,9,-3,6,7,-10,-9,3,6],[-2,4,-9,-8,-1,8,1,8,-3,-4,8],[-2,10,-7,-9,-6,4,-3,-8,3,-1,7],[-10,1,7,10,-9,-4,-6,-3,-4,5,10],[8,-8,9,-3,-3,-3,-4,-2,-4,9,-1],[8,9,2,9,-2,9,-7,3,-5,3,-3],[-8,1,7,1,6,-1,-1,-9,-6,-7,-4],[5,6,-4,-10,4,-1,10,-9,-5,10,10],[-10,2,-1,-10,5,10,7,-8,10,-5,-1],[8,-5,4,10,7,-2,-5,9,-6,3,6],[2,7,10,-3,-6,-10,6,6,-10,6,-5],[-5,-8,-7,-8,1,8,4,-1,-6,9,-9],[4,3,-2,3,9,10,-10,-10,-1,-10,10],[-7,-10,1,-1,-4,-8,8,-5,-7,-9,-4],[7,7,5,-9,1,8,-8,-1,-9,-5,-4],[-9,4,-3,-5,3,-1,10,-10,-10,2,2],[-9,3,10,7,3,-2,9,1,4,-6,4],[2,-2,5,-2,-7,2,1,10,-5,-1,9],[4,-6,1,5,5,-9,10,4,-1,-5,3],[-4,-1,5,7,3,-3,10,-10,-1,-2,3],[-4,-4,-10,-7,-4,-5,9,-6,-3,6,8],[9,-2,-3,1,-8,3,-2,-10,3,8,-8],[7,1,-3,-5,4,-6,-4,-3,-5,2,3],[-10,-10,9,-2,-5,1,8,-5,-6,6,-7],[1,7,-3,5,-4,-10,-9,-4,-8,-1,-5],[4,1,-10,3,9,-9,1,5,7,2,-4],[10,3,7,8,4,-3,-3,-2,-10,10,7],[-1,-9,4,10,4,7,10,1,7,2,-10],[5,-3,5,6,7,6,8,9,9,-9,-1],[10,7,-7,9,7,-3,1,-6,-2,4,8],[8,-1,-1,3,7,3,-3,6,10,-8,-4],[1,-3,2,10,9,-7,7,1,7,-5,4],[1,-2,3,-5,8,-6,8,-8,8,-8,-10],[-3,7,8,2,-2,6,-5,-3,-8,8,-1],[2,7,-9,-6,-2,-9,-1,-2,3,-8,-9],[7,-5,2,9,-10,-5,10,9,-4,-5,9],[3,10,7,-4,1,8,-6,-7,-6,-5,-1],[-6,1,3,-6,-3,-6,-5,-9,7,10,-5],[-6,9,-9,-4,9,3,1,-5,10,5,1],[7,1,-9,9,-7,-6,8,3,8,-1,2],[-10,-10,7,6,-7,7,7,9,1,3,-2],[-5,-5,7,-7,-10,7,5,7,-1,4,-2],[-3,-1,9,-2,-6,-8,-1,9,-3,4,10],[6,-1,-2,3,10,-7,10,4,8,10,-1],[10,-10,-8,5,-4,-5,-5,3,-3,6,1],[-7,-10,5,9,-3,-3,-4,-7,-8,9,7],[-10,-4,1,-2,-5,-5,4,-5,5,1,-10],[10,-3,8,2,6,4,-5,-9,7,-8,9],[4,6,-1,-7,4,-10,-6,9,-4,1,6],[-2,5,-8,-4,6,10,-7,-8,6,4,9],[4,9,6,7,6,-6,1,-5,-1,-2,2],[4,6,4,-5,1,4,7,-9,-1,-4,-7],[10,-9,-2,4,4,6,9,1,2,3,-9],[-5,5,-3,-2,3,2,-7,-6,-8,10,-10],[3,-4,3,-10,-8,-1,10,3,6,-6,-9],[-1,-5,-7,5,5,-1,3,-6,6,-10,8],[-3,-4,6,-5,4,-2,-9,3,6,-1,8],[-1,-9,-10,-4,-10,9,3,-3,-2,8,-5],[5,-8,5,8,-3,8,3,-2,-6,3,-4],[5,-7,-6,3,10,9,-8,9,-8,4,6],[-5,4,1,-9,4,-4,-10,-5,-4,-2,-7],[7,-6,-10,-2,10,7,9,1,-4,-1,-9],[-1,-8,1,5,-8,-6,9,7,-4,-7,10],[10,-3,10,3,6,4,-10,-4,5,-9,-8],[-8,-8,-1,5,10,-3,-10,-6,2,8,6],[3,4,1,10,10,6,10,4,9,1,-4],[6,-5,-3,-6,-2,8,8,7,-1,-8,8],[4,-3,3,-6,-6,-8,3,-5,-10,-10,1],[10,-8,9,-9,1,-7,8,-2,-9,-9,9],[-6,-10,1,5,-8,4,-5,9,9,7,8],[-8,-2,-9,3,2,2,4,-2,9,-3,5],[5,-9,-5,2,2,2,-8,4,8,-1,-7],[-8,-5,8,-8,-3,8,9,10,7,-5,5],[-9,-5,4,9,-10,-10,-2,2,-3,6,6],[-5,9,8,10,-9,4,-5,-1,-10,1,-5],[-10,4,-1,5,6,-6,1,-2,9,7,7],[-2,8,9,-1,4,-3,-5,1,-4,9,3],[-3,-8,-8,8,8,-4,-9,6,7,-1,8],[-5,-5,5,8,-1,-5,-5,-3,8,10,-8],[5,1,3,2,-8,-8,5,-7,3,4,-7],[3,-2,3,-7,5,6,3,9,-9,-2,2],[-2,2,8,-7,7,-7,5,2,-5,-3,4],[8,-1,4,6,5,-4,-7,-1,7,6,-8],[8,-2,-9,-3,1,8,-8,7,8,-6,-7],[7,7,7,-10,4,-4,-2,-1,6,6,-2],[-6,-10,3,9,9,9,9,-9,2,8,10],[-9,-3,-1,-10,-5,5,1,3,7,3,8],[-3,-1,-10,1,9,1,6,2,6,-10,-5],[7,2,-10,10,-9,4,-8,-8,-2,-8,8],[-4,9,8,-1,2,-8,1,-9,5,6,7],[4,2,2,-9,-5,3,-5,5,1,-3,2],[-1,7,-9,7,-6,1,7,9,8,-10,-7],[-1,8,-10,2,-7,2,-1,6,7,7,9],[3,-9,-1,1,4,2,3,5,3,10,-3],[-6,-7,10,-1,9,6,-5,6,4,-8,-4],[-10,6,-8,-1,-7,1,-2,-9,9,-8,-7],[1,-9,-5,-1,7,5,-7,10,-7,4,3],[8,-10,-2,-3,1,2,9,8,8,3,9],[-8,5,5,3,7,2,10,6,-2,-5,9],[-6,6,-2,-5,9,9,-9,5,-2,3,2],[9,7,4,-8,8,2,5,-4,-3,6,-9],[6,-8,8,4,7,7,5,-7,-6,6,-10],[-2,-5,-9,6,-7,2,3,-9,10,-2,-9],[10,-1,-1,-6,2,-7,-2,-8,-2,5,4],[-6,6,-10,-4,-7,-5,5,-9,-8,1,-6],[2,3,10,-2,5,7,5,-2,-6,-5,1],[-10,-3,1,-6,6,2,-3,-7,-9,2,-8],[5,6,-2,4,-3,4,-3,-9,-2,6,-4],[8,-4,8,5,3,-7,-3,3,2,4,-3],[1,-7,-5,-6,-3,-4,3,5,7,10,-10],[-3,-2,9,1,6,-2,-4,5,-9,6,7],[3,-7,-1,-6,-2,2,-6,-2,2,10,1],[2,5,6,5,1,7,-10,-7,-1,-7,-6],[3,1,-6,-1,4,4,-5,1,8,-7,1],[5,-6,-10,-9,-6,-4,2,-8,8,-4,-3],[7,-8,9,-1,-5,-10,-5,3,-7,-10,6],[3,-3,-7,-5,8,6,8,3,6,10,-8],[8,-8,-10,8,-10,-9,-1,-10,9,-2,-5],[-10,4,8,-6,8,10,1,-6,-6,-9,7],[-1,10,-6,5,-5,-4,3,-2,10,4,-5],[10,3,8,-10,4,4,1,6,-3,-1,1],[-1,-4,2,3,-3,9,-10,10,3,-1,-9],[7,6,-8,9,2,2,-10,-6,-2,-5,-6],[9,5,9,-9,10,-4,7,5,1,5,5],[-8,10,1,10,-10,-3,-10,-5,-3,-6,1],[-10,1,-6,-7,-4,2,-4,9,10,4,8],[-8,-5,-8,-9,-4,5,-2,-4,10,3,-3],[-8,-4,6,4,4,-7,-4,-9,3,-1,1],[-7,-10,6,-10,-2,-3,-7,-4,3,4,6],[4,-8,-1,5,-2,-10,9,8,4,10,-8],[-6,-9,-2,-8,10,6,-1,8,-10,8,3],[-3,-7,-2,-4,-5,5,-7,8,5,-9,7],[-5,-6,5,4,-1,10,-4,6,-5,6,6],[4,1,9,10,2,1,2,-3,-4,3,-4],[-8,-3,-1,10,-6,-9,-6,7,-4,-1,8],[-1,-10,-5,10,-10,-10,-1,5,8,8,6],[-8,9,-3,-9,6,4,-6,10,8,4,4],[9,-9,-9,-6,2,-2,-8,-3,-8,6,8],[-8,-9,10,-6,-1,4,-4,6,1,-6,8],[8,2,2,-7,-9,9,-3,3,3,-4,3],[-1,-2,6,-3,-3,-8,8,-2,-8,-10,-10],[6,-2,-5,-8,-6,7,9,-7,10,5,2],[7,8,6,-4,9,-8,-3,-9,1,-7,-5],[-4,1,2,-3,1,10,-7,7,1,-3,7],[1,-4,3,-1,-10,-9,-10,-8,5,2,9],[2,-9,2,-1,10,6,2,-7,-8,-9,-7],[7,-1,7,10,1,3,-4,-3,-7,6,-7],[5,-3,-3,9,1,-7,10,6,-3,-3,-6],[-3,-3,4,-6,-10,-8,-1,7,-1,5,3],[-4,-7,-5,-3,-9,-3,-7,-4,9,5,6],[6,-5,2,-5,-7,-3,3,-7,10,-3,10],[10,-6,-5,6,-6,-7,-1,2,5,4,6],[-7,-6,-8,-1,-2,10,10,6,1,2,2],[6,-9,5,-10,-5,-1,5,1,-8,7,-8],[5,6,-5,-3,-2,-2,1,-6,-8,9,1],[9,-2,-4,6,7,-7,9,-3,-10,-3,-6],[2,5,-1,9,10,6,6,-10,-4,-6,-2],[-5,-9,-8,9,-7,5,1,8,-8,8,8],[-3,-6,7,-8,-7,6,7,-8,-7,7,9],[-8,6,5,1,7,4,-1,-5,2,1,8],[3,6,5,3,-1,-10,8,-2,1,-5,3],[9,-6,-10,10,-6,-5,2,6,-3,6,-6],[3,5,9,10,-7,-10,2,3,7,3,-2],[4,-10,-6,4,-1,2,-10,6,-3,-1,-8],[-2,-2,-2,4,4,3,7,-10,-3,-8,9],[-8,-10,-9,-5,-1,-10,9,-2,8,-9,9],[2,8,2,-2,4,7,-4,-4,-5,-7,1],[-9,-9,8,5,5,-7,-3,-7,-2,-7,-6],[5,-2,-4,-5,7,8,10,3,3,3,8],[-3,-4,-7,-3,-4,10,9,6,-1,-10,6],[-4,5,6,-1,7,1,-6,2,1,8,-1],[7,2,8,-6,-2,-5,10,-7,8,-3,-3],[7,-10,9,-2,-6,-8,7,-8,2,5,-7],[1,-6,-7,-9,-1,4,-7,-9,5,-7,2],[7,-9,2,-8,-9,-4,-9,-5,9,-5,7],[-8,-10,-2,4,-1,7,-3,3,9,-10,6],[-2,-6,-9,6,2,2,6,8,-1,-4,8],[9,-9,-3,1,-8,2,-6,6,7,-5,-9],[5,5,-8,-4,6,-6,-2,-4,8,-6,6],[3,3,10,-9,10,-8,-9,4,3,-9,-7],[-9,3,-2,10,-2,-2,3,6,-4,-5,3],[-1,1,9,4,-2,6,2,6,-8,7,7],[3,-1,10,-9,3,-10,-5,-4,-4,2,2],[7,-8,-8,4,-6,-9,-4,-4,-1,-7,1],[1,-9,-2,4,6,3,6,-10,7,7,-10],[2,-8,-1,6,-4,-7,-4,5,2,7,5],[7,4,-1,9,-6,7,5,-6,10,-10,5],[8,1,-3,-7,2,6,-7,8,10,6,7],[-7,-4,5,6,7,-1,-3,-7,-5,-4,8],[7,9,2,-5,9,-2,-9,-7,10,-8,-6],[-5,1,3,-10,9,9,-3,3,9,-9,3],[1,-2,7,10,-1,6,7,-7,4,-2,-2],[-3,-2,7,7,-1,3,7,-3,5,4,-4],[-3,-7,7,-10,-6,-5,9,-2,-1,3,6],[4,-7,-1,-10,-5,8,-2,3,3,8,8],[10,-4,-2,-5,-6,-8,-9,7,4,4,4],[-6,-1,4,6,7,-3,9,9,-4,4,-8],[-10,4,-7,-7,-6,5,1,9,3,-5,8],[-4,7,-1,-1,-6,6,-7,8,-3,5,4],[-7,-5,-10,9,-4,6,-2,-4,6,1,10],[4,-2,-2,2,2,10,4,-8,9,-7,-5],[2,9,9,-9,-10,7,-7,-8,7,-2,7],[-9,10,-7,5,-3,3,-4,-4,1,3,5],[-9,2,-2,4,-2,-4,-5,1,-5,6,8],[10,10,-7,9,6,6,-3,4,-10,2,-1],[5,6,8,-7,9,-10,9,3,-1,8,-7],[-10,10,-9,3,1,4,9,-9,-8,-4,-1],[-6,-10,3,8,9,-5,7,-1,-6,10,2],[-1,6,1,-6,2,7,8,-10,-4,-4,7],[-4,4,3,-7,-5,-7,-8,10,1,5,-2],[1,-9,10,-5,7,-5,7,-6,4,5,-10],[-10,-6,-2,2,-3,-7,-10,-8,-4,-4,7],[-9,-10,-4,-2,9,-7,-2,5,5,7,-2],[7,-1,6,-1,1,-8,3,-7,8,-7,-10],[-6,-5,4,-10,-10,-6,-9,-8,-7,-8,-9],[9,-6,-1,-4,5,7,10,1,-8,9,2],[10,6,-1,4,-7,-6,-2,9,-8,-7,-2],[8,6,-6,4,1,-10,-1,5,-2,10,9],[-5,-1,1,-9,2,-8,-5,-3,2,3,3],[4,-1,2,4,-7,-8,-1,-6,-3,8,-9],[8,2,-6,-4,10,8,-6,-5,10,7,-2],[-8,-9,-7,4,1,-7,-4,9,3,7,3],[2,4,-1,1,-1,10,-1,8,4,-9,-2],[6,-10,3,2,3,-3,5,7,-7,-6,8],[-5,-3,6,2,3,-3,8,-4,-9,4,3],[-8,-7,1,-2,-1,7,-8,5,3,7,-5],[-2,-5,6,-5,-3,3,7,-5,5,8,9],[-5,5,4,-5,-8,8,8,-5,2,5,7],[-1,1,-10,8,-6,-6,2,-4,9,-4,7],[10,4,-1,-9,-10,-3,-4,3,-4,6,9],[-10,-7,-7,5,-2,10,-6,4,9,4,7],[7,-2,9,9,-10,-3,9,9,-7,-8,8],[8,-9,-9,1,3,-8,-8,-6,4,-7,4],[-10,9,-5,-4,1,8,9,3,3,-9,-2],[7,6,-4,10,-1,3,10,7,3,-8,-9],[8,6,-9,-2,1,-9,-3,-2,-2,-5,-2],[-5,1,-8,10,-5,-9,-2,7,9,5,7],[-2,-1,1,-1,3,4,3,4,-9,-4,1],[7,3,-7,4,6,-4,-2,7,10,7,-5],[-3,-6,9,3,7,9,5,-10,-2,7,-5],[1,-2,1,4,-2,6,-1,9,4,-5,-7],[1,-1,4,-8,-9,-3,1,-2,2,2,-3],[5,-7,9,-4,-2,2,5,-3,6,-4,-3],[-3,-8,9,4,-2,-4,-10,3,-9,-6,-10],[8,-5,-3,5,4,1,4,-3,-1,-9,-6],[-10,-2,7,2,10,9,6,6,10,-1,3],[2,-8,-3,-2,8,1,10,8,3,4,7],[8,3,-5,-10,4,6,-8,10,9,1,8],[6,-5,-5,-3,-1,8,-8,2,3,3,-7],[10,9,5,-7,-1,-10,4,-7,10,7,-4],[2,6,-10,-5,-7,6,2,6,-6,-4,5],[-4,4,-10,1,-9,-8,8,-1,-8,-8,4],[8,1,1,2,7,8,-9,4,10,5,-6],[7,6,8,2,5,-4,-5,6,-10,-5,-4],[-5,-8,-2,5,6,7,-9,-7,7,-10,10],[5,-5,9,-1,4,-1,-5,5,-1,3,-4],[-3,3,5,-10,-9,3,7,-3,2,8,-10],[-6,-4,8,7,2,-7,7,-8,-6,-1,2],[10,-8,-3,-8,3,9,-1,7,-3,7,5],[9,-10,-4,-6,8,-10,-8,7,7,10,-7],[5,10,-4,5,10,5,-10,10,3,-4,6],[-5,8,1,8,-10,2,10,-6,5,8,5],[-9,6,2,-7,1,-1,6,8,2,6,9],[-1,-10,10,-6,-7,-1,9,2,4,-7,-2],[-7,-6,10,2,-9,-2,-9,8,9,-2,-10],[-6,6,4,4,-6,-8,-9,-6,6,6,-8],[-4,2,-4,6,7,4,1,-7,-8,6,-7],[4,8,3,-2,10,-7,-9,-9,3,-8,-1],[9,-4,3,10,-4,7,6,7,9,4,-2],[-7,2,8,10,-9,-7,3,2,2,-10,10],[-9,6,6,5,6,8,-5,8,-6,-2,9],[-5,-9,-8,9,6,7,-7,-3,1,-8,7],[-5,-7,-9,6,-6,-10,-1,5,10,-8,-5],[-10,-9,10,-9,-1,10,-5,-8,-9,-5,9],[-1,6,6,-8,8,1,-6,5,8,10,-3],[-8,-8,-7,-8,-9,-1,-10,-8,9,-4,-3],[3,-8,5,10,-4,1,7,-5,2,-4,8],[1,-2,-1,-5,1,-6,1,-8,7,9,-4],[-6,1,-6,3,1,-1,8,-1,8,-1,10],[4,-2,10,3,-10,-6,8,-8,-5,9,-3],[-7,8,-8,-2,2,6,10,-7,-9,-1,10],[6,-2,-10,-6,6,9,1,-4,6,10,9],[-8,-3,7,-4,5,6,3,-6,9,4,-7],[-5,-9,-8,5,-3,8,-1,-1,-2,9,2],[6,-10,-4,-2,1,-4,10,-3,1,-7,-1],[-2,5,9,-5,-5,10,5,2,-7,-7,-7],[-4,2,-8,4,9,-2,-1,-10,1,-5,-5],[-7,10,-3,-6,3,-3,-5,6,-2,5,-3],[6,-3,3,10,-10,4,-10,6,7,5,-4],[3,-10,-7,9,-1,5,2,4,3,-6,4],[4,-1,9,3,8,5,8,-1,2,-4,6],[5,7,-5,-7,-10,-1,3,8,-3,-9,4],[-10,8,7,-1,7,6,-5,6,2,-2,10],[-2,1,-5,-4,10,4,-6,-10,-7,-2,-3],[-5,-9,-7,-9,8,5,7,-2,1,-6,1],[-9,10,2,-10,-1,3,10,-2,-7,2,-2],[4,-1,7,9,9,3,-3,-3,7,7,-3],[10,-8,6,8,9,3,6,-7,-7,2,-8],[-4,-9,-5,3,-3,-3,-1,-1,8,-3,-9],[-10,4,5,-9,3,5,4,-6,8,-1,2],[-2,1,2,1,-2,8,-10,4,-7,1,-8],[-2,2,-6,2,5,9,-6,-1,-2,9,1],[-4,-7,1,-3,-2,5,-8,9,9,6,1],[10,-8,-6,-4,-4,-1,1,8,-3,10,8],[-1,8,2,-7,-5,-6,-1,1,9,-6,-8],[-4,-1,-9,-7,1,-6,7,4,-3,-10,3],[1,-7,-9,9,-9,4,-2,-5,1,-8,-6],[7,8,10,-10,9,4,10,-10,1,-3,-9],[9,7,-1,-7,1,-6,7,-9,8,-6,6],[8,-6,5,-3,8,10,9,10,8,-3,2],[-2,-5,-9,-3,-9,-2,9,4,-2,1,8],[3,10,-1,8,1,4,-10,-8,-9,3,2],[9,-1,8,4,4,8,-1,-6,-4,-8,-2],[-3,-1,-7,-4,-6,5,-5,-1,-1,-8,-8],[-9,7,1,2,-4,-6,-9,-1,10,-7,5],[9,1,-1,-10,10,-3,-3,-4,10,1,-5],[6,3,-1,2,2,-2,-1,4,3,-9,10],[-3,-8,-2,-8,9,-3,2,5,-10,5,-10],[4,-6,-5,-5,10,7,10,6,6,-2,2],[-3,-9,-1,-4,9,-2,-8,3,-2,-9,10],[8,-7,-3,-3,4,1,-10,6,-3,5,3],[4,5,6,7,-3,-1,-1,-1,1,-2,-1],[-7,6,3,9,3,1,-1,1,-4,-3,7],[3,-10,-7,9,5,-4,-7,-2,-2,-10,-4],[1,-9,2,-2,-7,10,9,8,-3,3,-3],[4,-7,-2,-1,-7,2,9,-9,-2,6,-2],[9,-3,4,-10,6,-4,-4,9,-3,-10,-4],[8,2,2,1,-10,-5,-3,-9,-7,10,-6],[-10,-10,3,7,-10,3,-4,-9,8,-5,2],[-3,2,-6,5,-7,-8,7,8,1,6,2],[-8,5,2,-8,-8,5,-4,2,-4,-2,5],[-4,-3,5,-8,9,9,1,-4,6,-1,-1],[4,4,-2,10,8,-4,-10,2,7,-3,5],[-8,2,-10,4,10,5,-6,4,8,-4,3],[-1,-2,-6,5,-9,-10,-4,6,4,-8,1],[7,1,-7,8,-9,-7,-7,7,6,-4,9],[-9,-8,2,-1,1,10,3,-9,9,2,-2],[-1,-3,-7,5,7,-2,8,-2,-10,-9,6],[-8,-5,-6,5,7,7,2,7,1,-3,10],[10,2,-4,10,3,7,-5,6,-3,5,-3],[5,6,5,-10,1,-6,9,4,-1,9,6],[3,3,4,-5,7,-8,-5,-10,-7,-6,-6],[10,6,6,9,9,-1,-7,2,-4,1,10],[5,2,3,-3,-5,-8,6,6,5,9,-8],[10,10,9,-6,-9,8,-10,-9,3,-8,5],[-4,-9,-6,4,-7,-4,-10,8,1,-6,-9],[4,-1,-2,-8,1,7,3,-10,-9,-5,6],[7,3,3,9,-8,-10,1,-6,-10,-3,10],[-10,6,9,-4,9,1,9,3,-4,2,8],[5,-4,-4,1,4,-4,3,-4,-8,-8,6],[1,-5,10,10,-3,-5,-9,4,1,-5,8],[8,-5,-4,-7,10,2,4,5,4,-8,-2],[6,-1,4,3,4,-4,2,-3,2,7,-9],[8,7,-9,-8,4,-9,-4,10,4,1,-6],[8,9,1,4,9,3,1,-2,4,-7,-2],[-5,8,-8,-7,-1,-4,-7,-8,-6,-2,-4],[-2,5,2,-1,3,-7,-5,-10,-1,-1,1],[1,-8,6,-7,-6,7,-7,1,1,5,-5],[-5,5,5,-1,4,6,1,6,2,-7,1],[-6,-5,10,-7,10,-9,-7,1,-1,-2,-8],[8,-8,-4,-1,-2,-1,6,-5,-6,4,-10],[-10,-1,-7,-9,-3,-7,-9,-10,9,-7,-7],[4,5,-6,5,-2,-8,-7,5,10,-3,10],[1,2,10,-2,2,8,6,-8,2,8,-4],[-7,-3,6,-5,9,8,5,9,-6,3,-10],[-10,2,10,-5,6,-3,10,-6,8,10,5],[6,3,8,-8,7,-9,-3,10,3,-2,5],[-6,5,-6,-1,-10,-8,-1,-1,7,8,-8],[4,8,3,6,2,-1,-7,1,2,5,4],[-6,-2,6,8,-2,3,-2,2,6,-9,8],[-6,3,10,-9,1,-3,8,-4,5,-1,-8],[5,-10,-3,-10,6,-1,5,7,8,-9,1],[-10,6,-3,-2,-9,-2,-7,-1,-5,4,-5],[7,-3,10,-6,9,-7,1,-3,4,9,-2],[-10,-5,1,-3,8,-10,7,-3,10,8,1],[1,2,6,9,10,-5,4,-4,-4,-7,5],[4,-6,2,-6,-5,6,10,9,-2,-1,-3],[2,-2,-2,-1,-2,5,-1,-3,-9,-2,6],[-7,-3,3,5,-9,-3,-3,9,-2,-7,10],[-5,5,-3,-8,-8,1,5,7,10,-7,6],[-8,2,-7,-8,-8,-2,-6,9,4,-1,1],[1,-6,-4,5,-2,5,4,6,-1,-4,9],[-9,-4,-8,-10,-2,8,3,10,-2,-1,-10],[-8,-7,-5,3,-1,-4,7,-1,-2,-9,1],[-2,8,-5,10,-3,4,-9,-1,2,-7,6],[-8,-1,9,1,-2,1,5,-10,-3,-5,-3],[7,7,5,-6,7,9,4,-10,8,-6,-3],[-6,7,-3,8,5,9,5,-5,6,-4,-2],[5,-3,-5,1,-9,-8,-6,-9,9,2,-5],[6,9,-3,-9,3,-6,-6,-5,-8,5,3],[1,6,5,9,-6,-3,9,7,-3,-3,-7],[10,7,8,-4,-3,-2,-6,-8,10,-2,-8],[1,8,-6,-10,1,6,-10,9,-5,10,5],[6,-10,7,9,10,1,-1,10,-1,-5,-10],[1,-8,4,-4,1,2,6,3,7,7,-3],[6,-4,-8,-3,-2,8,1,-8,-2,-6,-10],[6,-10,-9,10,5,-9,2,-8,6,1,9],[-7,-10,-6,5,-9,-3,3,-5,-4,-10,9],[-10,9,6,9,4,4,5,8,-10,-1,5],[-3,-9,-1,1,1,9,-7,-9,-10,-2,-7],[-6,9,4,-7,5,7,6,-3,10,-8,3],[3,10,5,10,1,6,10,-9,9,8,8],[-6,2,-4,-4,-6,6,-10,9,2,-6,9],[10,-4,2,9,-5,-10,2,7,-8,2,-10],[7,-2,9,-9,3,-8,2,-10,-9,-5,-4],[-2,10,-6,8,-5,-5,-3,-5,3,-6,7],[-1,9,4,1,-9,-10,5,-3,10,-7,5],[9,4,9,3,10,-5,-5,2,-6,9,2],[-2,6,-1,6,2,-5,9,10,10,-7,-8],[-5,-10,-3,-8,4,10,-1,2,-8,-7,5],[-8,10,-5,-4,-1,5,-9,2,-5,-7,-8],[-7,-8,-7,7,10,6,-5,7,6,-6,3],[9,-5,4,9,-10,4,-1,-4,-2,-6,-6],[-1,-8,-3,6,-2,-1,-1,-8,-7,-9,10],[-2,8,1,-4,3,-2,-2,7,-10,7,7],[8,-10,-6,6,7,-2,-3,1,2,5,-6],[8,7,2,3,1,7,-6,10,-2,-9,-4],[-9,-4,-8,4,7,7,2,-5,-1,6,-6],[4,4,5,-8,8,3,-8,-2,-4,6,1],[1,5,-10,1,-1,4,-8,-9,-7,6,10],[10,6,-10,-5,2,-7,-9,6,-5,-6,-2],[-7,3,-9,-3,-2,-2,-6,3,-3,7,-10],[9,8,-4,-4,-1,1,-6,-4,1,9,-6],[-6,-4,6,1,10,3,-5,-4,-5,-1,-8],[7,3,10,1,-6,-7,-10,-4,8,-10,-1],[9,-3,10,-9,8,-10,5,-2,6,-7,-10],[7,-7,-5,-7,1,4,8,-9,-2,-4,9],[-2,8,-1,-10,-10,-3,1,4,-8,4,1],[6,1,-9,10,-6,3,8,-9,-4,-7,-5],[-9,-8,4,-9,-6,-8,-2,-3,7,3,-3],[3,-3,-10,6,-3,-4,1,5,-4,-6,-7],[1,3,9,-7,8,4,-9,-4,-10,9,9],[4,2,2,-2,8,-7,9,-6,-8,-8,-8],[9,-1,10,-4,2,3,-8,3,4,-1,-2],[-6,-9,-7,-1,6,-8,10,7,-8,-4,2],[-4,9,-6,-8,1,1,10,-8,2,10,1],[7,-6,6,6,9,4,-7,-8,-1,10,-10],[-9,-5,4,-8,-5,-4,1,-10,-9,6,-7],[-6,-1,4,8,-4,-6,-5,-4,5,1,2],[-1,-9,-1,6,10,-3,-8,2,2,-2,-7],[-7,3,4,-5,-5,1,9,-9,-10,-8,1],[9,-3,-3,9,3,3,-10,-7,5,1,6],[-8,6,5,2,-9,1,-1,-6,-6,-8,2],[-8,-3,1,-9,-6,3,8,8,-5,-10,-9],[-3,-3,6,8,9,9,10,-8,8,-7,-7],[-8,-4,2,-1,5,7,-3,-7,-3,8,10],[1,-9,3,-9,-3,-7,-1,-9,9,-6,-3],[-1,1,-9,-5,9,9,4,-3,4,1,-3],[10,5,-9,8,-10,-2,-5,10,-10,-6,6],[-10,-7,7,8,10,-5,7,-4,3,8,-4],[4,2,4,2,-2,-1,1,-4,-9,4,9],[-7,10,6,-5,2,-4,-5,4,8,-2,-2],[-8,-1,-3,2,-8,-5,-1,8,-1,7,-5],[-4,10,3,-3,-6,-3,10,1,6,-3,2],[1,-9,-10,-8,9,-4,-7,2,5,-3,-4],[-4,6,-6,2,4,8,6,10,-5,-9,7],[-9,6,-6,2,-3,-4,-6,-10,10,2,5],[-8,-1,3,5,5,-6,7,1,1,6,3],[-10,10,4,10,9,4,2,-1,-7,10,-7],[-7,-8,2,-6,6,5,5,-10,-1,-2,1],[4,2,8,5,1,-6,10,3,-3,1,-4],[9,1,3,5,-9,7,10,-5,5,-9,-5],[10,-7,6,1,6,6,-10,-3,4,-5,5],[-8,-2,-6,-5,10,-8,8,-6,-6,1,-2],[-10,7,8,6,-5,8,9,-8,7,-10,6],[-1,-9,5,-6,2,-1,-1,-8,6,3,-3],[-8,-7,-1,-1,6,-9,8,4,10,-1,4],[-4,9,10,-2,4,-5,4,-7,3,7,-8],[-8,9,8,-1,-4,-7,-4,6,-1,5,-1],[-2,-6,-2,8,7,2,-6,-8,5,1,-4],[8,-1,10,4,9,-2,2,-7,3,8,2],[8,-8,-3,-6,4,-8,-2,2,-2,4,5],[7,8,-8,7,-8,-3,1,-7,-2,10,7],[8,10,10,3,1,7,-2,-6,6,-8,-2],[4,4,2,6,6,1,-4,-1,4,9,-1],[-6,-9,-1,-3,4,4,-3,-1,-8,-3,-6],[-9,5,1,5,-4,1,7,-10,6,-10,-3],[-9,-4,-5,7,5,10,-9,4,5,7,1],[7,-6,7,-5,1,-9,2,-1,5,5,5],[-6,-8,-7,4,-10,-1,-8,-4,-1,9,-9],[3,-10,-7,-4,8,1,1,-2,-8,-10,1],[-7,10,-2,-7,-10,3,9,-6,2,2,-2],[5,-10,6,-4,-5,-4,1,6,8,-10,-7],[-3,-1,8,2,8,4,2,5,9,-9,9],[-8,9,10,-7,6,3,-4,-1,-3,-4,7],[8,-2,-4,-9,-10,-7,-1,8,-5,7,-4],[-8,-9,-5,7,9,-6,2,1,-4,-6,-1],[7,6,-6,7,-6,-6,-4,-10,-3,-6,-1],[10,8,4,-2,-3,-6,8,-4,3,-9,-4],[2,-6,2,-5,-10,4,6,6,-7,-6,7],[-7,10,-10,-1,-2,10,-9,1,5,8,3],[-1,3,-7,-1,2,7,9,10,4,4,-1],[-8,8,4,-5,9,6,-4,-10,7,-2,-3],[4,1,-5,-3,10,9,-7,6,-9,-7,-9],[-8,-5,-3,1,-8,-1,-4,5,-5,1,5],[-6,-9,5,10,7,3,4,9,-3,-2,-5],[1,8,-5,7,-8,-2,-9,-4,-3,8,-3],[3,2,8,-8,-4,2,-6,-2,8,7,-6],[-7,7,1,7,10,7,-3,5,7,4,-1],[6,-3,-3,6,-7,10,-2,-9,-7,8,2],[7,7,-9,3,1,-5,-6,5,10,5,-5],[-2,-8,7,3,7,7,5,-5,5,-10,10],[-9,-5,6,8,9,-10,-1,2,4,-5,3],[6,8,4,10,-1,-9,-7,-10,-10,6,-5],[7,-10,-5,2,5,-8,9,-1,7,7,2],[-3,-10,-9,-3,3,10,-10,8,-6,2,-6],[-7,-10,-10,-10,-3,-3,6,-1,-6,8,10],[4,-2,3,-4,4,7,-8,5,7,1,-2],[4,5,-10,10,10,7,4,-5,10,-2,5],[2,-7,9,3,-4,-7,-8,1,6,-4,1],[-5,-8,6,-2,1,-3,6,-8,-5,7,3],[-10,5,-4,-3,7,-3,-4,7,10,-1,8],[-6,6,1,5,9,8,3,3,9,3,6],[-1,-5,-3,-5,-4,7,10,5,2,3,10],[-2,-10,-4,2,-2,3,5,4,4,9,-9],[-1,-8,-10,1,-5,-2,3,-1,4,-10,-3],[-10,5,4,-7,-6,-9,9,3,7,4,-4],[3,-4,1,3,-8,-8,9,8,-6,4,9],[5,7,2,1,-8,3,5,-5,5,-3,8],[-8,-10,1,2,-9,-1,-8,8,1,8,-8],[-8,-1,-8,-8,6,3,2,2,-3,10,-9],[-1,2,3,-5,-2,7,6,10,2,-9,4],[10,-5,6,10,-6,2,-10,7,-9,-8,4],[10,7,-2,8,10,-3,-10,2,6,-1,-3],[5,-8,-1,-9,-10,1,-2,6,10,-7,-4],[-3,8,-4,8,-10,9,9,4,-5,8,2],[10,9,7,-2,-6,-7,4,3,-9,7,1],[-8,-4,9,-10,2,-2,-9,-1,-2,-5,9],[-2,-1,5,9,-4,3,1,-9,-7,-2,-6],[-10,9,3,-2,-1,-5,5,10,8,-2,-1],[-4,-7,-5,-10,7,7,-3,-10,-3,9,-5],[1,-10,-1,-1,9,-5,6,3,-1,5,6],[10,-3,1,2,8,-3,-4,3,9,1,-8],[5,3,2,8,6,-6,-1,-2,-4,8,-3],[4,-8,-9,8,-5,9,-3,-8,10,6,-4],[4,-2,10,-8,4,8,6,10,5,8,-5],[-4,9,6,2,4,8,6,6,9,-5,-2],[4,-6,-9,-4,7,-5,4,4,1,-1,4],[7,1,-1,-4,-9,5,9,4,-8,1,-7],[-7,10,9,-9,9,2,-1,-6,8,-5,-5],[-8,-10,-7,-2,-6,5,8,-7,4,2,-6],[3,-2,-1,3,-3,-2,9,-4,4,-9,7],[-1,-6,-10,5,5,-10,-6,-4,-7,-1,-8],[10,1,-1,3,10,2,-2,-8,10,2,10],[3,8,1,-8,-8,-10,-2,-1,-10,-10,-9],[-7,-7,10,-9,9,6,-1,-7,-5,-7,5],[-9,4,-7,4,-7,3,-9,5,-3,1,4],[-8,3,7,10,9,6,1,-10,-9,5,4],[5,4,-6,9,9,10,-1,-1,-6,-2,-6],[8,-7,6,9,8,9,-1,-6,-4,8,-6],[10,-9,8,1,-6,1,-7,9,-6,7,-8],[-10,-1,-1,8,-7,5,-7,9,8,-10,-1],[7,-1,7,-8,-8,-1,-3,-7,10,-1,10],[-7,-9,-8,-3,4,-9,2,-4,-2,9,1],[-8,2,2,4,-3,-5,-5,1,-2,-9,-3],[8,3,10,-7,-1,3,2,9,9,6,-4],[7,-10,-4,1,-2,-3,-10,5,7,-2,-1],[8,-2,-10,1,1,3,6,-10,3,5,-7],[2,-2,-9,-1,-1,-8,4,-1,-6,-4,2],[4,-6,-8,-2,7,8,-5,6,-7,3,-9],[-5,-3,-1,-8,6,8,9,-4,-10,7,2],[7,5,6,1,-4,-6,-7,-5,-1,-9,4],[7,-10,-1,-7,8,3,-7,-1,4,5,4],[6,-9,2,-10,-5,-6,-3,2,2,-5,-3],[-5,1,2,1,7,7,8,3,6,2,5],[-9,-7,-8,7,5,6,3,-1,3,-6,6],[-10,10,9,7,1,-2,6,-3,9,-7,3],[2,6,5,-4,6,10,-9,9,-4,2,1],[5,-5,1,1,1,1,9,-9,-5,-8,-10],[7,-4,4,-8,-6,-10,-1,-2,-6,-8,-10],[10,-1,-6,-3,7,-8,10,7,-8,3,5],[-6,6,9,8,2,-1,-5,3,5,-8,1],[6,8,-4,-9,-6,-5,8,8,-3,6,-1],[-3,8,4,-3,-4,6,1,4,6,-9,-2],[-5,5,-9,4,-9,-6,-4,-3,-7,6,-10],[1,8,-3,10,-4,-6,-3,-9,4,-3,-4],[-1,4,5,-9,-6,8,10,3,-7,-5,5],[5,-6,-1,-1,7,-4,-2,-10,4,3,-2],[-3,3,3,2,-7,-3,8,-1,10,5,-9],[-5,-7,-7,-4,3,7,7,3,7,6,2],[-3,-7,3,9,6,-2,-6,3,-9,7,-2],[3,4,5,9,6,-4,-7,2,8,-1,-2],[9,-4,4,4,6,9,-9,-9,-6,4,-7],[-9,-6,-8,-9,-3,10,7,-9,-7,-2,6],[-5,-2,10,-2,-7,-6,10,-10,-8,7,10],[-1,-7,-5,-7,10,4,4,10,-10,9,-7],[-4,5,-8,2,-8,-9,1,4,3,-1,-10],[2,1,4,-2,6,-10,9,-5,7,4,-8],[8,-7,10,1,-3,9,-6,3,-5,-3,-3],[-2,5,-2,3,-6,-6,5,10,-5,8,-6],[-6,-2,9,-4,2,-1,-5,-6,4,3,-6],[5,2,-1,-1,-5,-10,-8,6,1,9,-5],[-4,-5,4,8,6,-9,1,-1,1,-1,-6],[-7,-2,10,-10,-6,-7,-3,-10,-2,2,7],[3,8,-5,-4,10,3,10,3,-10,4,-1],[8,-6,8,-4,-1,-2,-1,-10,9,-6,1],[-8,8,3,-7,9,-6,8,2,8,10,-4],[8,-6,1,-7,-10,5,5,9,2,9,-4],[-1,-10,-2,8,1,-8,-1,3,-3,5,2],[-8,3,-1,-8,-1,1,-8,4,-9,-2,-4],[-7,-10,-1,-8,8,5,6,6,-1,4,10],[7,8,9,-2,-10,1,7,9,-4,-1,-8],[5,2,-3,-9,8,7,1,-3,-10,-2,-7],[10,4,10,-2,-4,-2,-2,3,-10,-7,-5],[4,1,-3,4,4,5,-7,-5,3,6,6],[-2,1,-7,10,9,2,-7,-5,-6,-4,-6],[5,-10,1,-6,5,-5,2,5,4,6,-3],[2,2,6,-8,-7,-6,-1,-4,-3,5,-5],[9,-8,1,-10,5,-4,-7,-4,-7,-8,-7],[-7,4,-2,-7,5,-5,9,-7,4,-1,10],[3,5,-5,10,-9,-5,-8,-1,3,2,-9],[6,2,-7,-10,-10,-10,-10,5,-7,8,7],[-8,-10,-6,-1,-5,-10,-8,-9,3,1,4],[6,-1,6,-4,5,5,7,10,-6,-6,2],[-3,-4,10,-2,9,6,3,-9,-8,1,2],[5,-7,-8,9,-8,-1,-1,-10,-7,-10,-8],[6,-10,-4,10,-10,-9,-5,-1,-9,9,1],[-2,2,7,2,-7,-3,-7,-1,-4,-1,9],[1,2,-8,9,10,10,1,-6,-3,5,3],[4,8,-6,-2,-5,-4,7,6,1,9,10],[1,5,10,-1,-2,8,4,7,6,2,-8],[3,-5,2,6,-4,-7,-2,-6,1,-7,-8],[-2,8,8,9,9,4,6,7,-7,8,9],[4,-2,-5,-5,-1,-9,-4,-9,5,-4,-3],[4,-2,-1,8,2,-7,-8,-5,-5,-9,-5],[1,9,-1,2,3,4,-8,10,6,7,-8],[4,-7,8,-1,-2,-7,8,-4,-4,8,-4],[4,4,8,1,-6,7,-4,-3,6,-9,4],[2,8,5,-3,-4,-5,-7,2,6,5,-3],[-8,5,-2,6,-2,4,-4,7,9,2,-2],[6,-7,1,-6,10,-1,-8,9,-8,4,-2],[2,6,1,-5,9,6,-4,9,-1,3,-5],[-4,-9,-7,6,-3,-9,10,-9,2,8,5],[4,1,-4,-7,7,5,-8,1,2,-2,3],[10,9,-1,9,-9,9,-8,6,9,-9,-1],[7,-10,-8,-9,-8,-4,-10,-6,-8,-3,4],[-7,9,4,-2,-6,9,-7,10,-5,-6,7],[-3,-6,5,7,1,2,1,7,-10,-2,10],[-3,7,9,10,-1,7,1,7,3,-1,-7],[10,-6,8,1,-9,-8,-6,-2,-3,7,-2],[-3,-8,6,-3,2,10,6,-7,-6,1,5],[-3,4,-9,5,1,10,-6,7,-1,3,-8],[-1,-5,-3,3,6,2,1,10,5,-3,1],[3,-7,8,8,-8,-4,8,-1,-3,6,-6],[-9,2,-10,-10,2,-10,10,10,5,-8,1],[4,8,9,-5,2,5,-9,-9,-7,-6,10],[4,-5,8,-10,1,10,-3,5,6,-3,1],[6,-3,-9,-10,7,10,5,-7,-8,-10,10],[-9,-1,-2,6,6,-1,4,10,-2,-8,-10],[2,-7,-10,9,8,6,-3,-4,2,-8,3],[-7,-6,1,-1,4,-2,4,-7,1,10,-7],[-8,1,-4,-4,-3,-9,10,-10,3,-4,8],[-7,10,-10,-7,-3,-1,6,-3,2,1,-4],[3,2,1,-3,2,2,9,-2,3,3,2],[-7,10,-3,-1,4,1,2,-1,-1,-6,-5],[-8,-1,-4,3,4,1,9,4,10,-4,3],[-5,2,7,8,2,1,-5,8,1,9,-3],[-7,-8,7,8,-9,-6,6,10,-9,1,6],[7,5,-5,1,3,-6,-4,3,7,-2,5],[-8,5,-7,-7,2,6,-3,2,-8,-1,3],[1,7,10,-3,-9,-1,-10,9,-9,3,-10],[6,-8,6,1,7,7,-10,-3,-5,-5,5],[3,3,8,-7,2,-10,-6,-2,-6,-8,10],[4,-4,6,-3,5,8,8,-5,2,-6,10],[9,-10,-10,1,-10,-5,-2,-4,-3,-1,-10],[-5,-3,4,1,3,3,-6,4,5,10,8],[9,9,4,3,10,-1,-6,4,7,7,1],[-5,1,-10,-7,5,2,-10,-5,-2,-2,9],[6,-7,-9,4,-10,-6,8,1,4,-3,-9],[7,-7,-10,10,1,3,10,6,3,-5,-6],[6,-8,5,-9,6,10,-4,4,-2,-3,-5],[-8,-9,7,-1,-6,-4,7,8,4,3,9],[4,3,-10,-10,9,6,-8,-3,9,8,-8],[1,-3,1,-8,-5,-4,10,-5,1,-8,-4],[-1,9,-10,3,2,-3,-8,-2,5,-3,-4],[-4,-5,4,9,2,-9,-2,-10,7,7,-8],[4,-5,5,-7,1,9,4,9,-3,7,-6],[1,2,-7,-7,7,-2,10,10,-8,1,-9],[3,10,3,-8,-4,2,-6,-6,3,-4,-6]], dtype = "uint16")#candidate|7669|(768, 11)|const|uint16
bop_7670 = relay.bitwise_or(bop_7664.astype('uint8'), relay.reshape(const_7669.astype('uint8'), relay.shape_of(bop_7664))) # shape=(768, 11)
bop_7673 = relay.bitwise_or(bop_7667.astype('uint8'), relay.reshape(const_7669.astype('uint8'), relay.shape_of(bop_7667))) # shape=(768, 11)
var_7682 = relay.var("var_7682", dtype = "uint8", shape = (768, 11))#candidate|7682|(768, 11)|var|uint8
bop_7683 = relay.greater(bop_7670.astype('bool'), relay.reshape(var_7682.astype('bool'), relay.shape_of(bop_7670))) # shape=(768, 11)
bop_7686 = relay.greater(bop_7673.astype('bool'), relay.reshape(var_7682.astype('bool'), relay.shape_of(bop_7673))) # shape=(768, 11)
uop_7692 = relay.rsqrt(bop_7683.astype('float64')) # shape=(768, 11)
uop_7694 = relay.rsqrt(bop_7686.astype('float64')) # shape=(768, 11)
output = relay.Tuple([call_7619,call_7649,var_7650,uop_7692,])
output2 = relay.Tuple([call_7620,call_7651,var_7650,uop_7694,])
func_7704 = relay.Function([var_7642,var_7650,var_7682,], output)
mod['func_7704'] = func_7704
mod = relay.transform.InferType()(mod)
mutated_mod['func_7704'] = func_7704
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7704_call = mutated_mod.get_global_var('func_7704')
var_7706 = relay.var("var_7706", dtype = "float32", shape = (768, 11))#candidate|7706|(768, 11)|var|float32
var_7707 = relay.var("var_7707", dtype = "uint16", shape = (120,))#candidate|7707|(120,)|var|uint16
var_7708 = relay.var("var_7708", dtype = "uint8", shape = (768, 11))#candidate|7708|(768, 11)|var|uint8
call_7705 = func_7704_call(var_7706,var_7707,var_7708,)
output = call_7705
func_7709 = relay.Function([var_7706,var_7707,var_7708,], output)
mutated_mod['func_7709'] = func_7709
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7734 = relay.var("var_7734", dtype = "float32", shape = (6, 9, 4))#candidate|7734|(6, 9, 4)|var|float32
uop_7735 = relay.tan(var_7734.astype('float32')) # shape=(6, 9, 4)
output = relay.Tuple([uop_7735,])
output2 = relay.Tuple([uop_7735,])
func_7737 = relay.Function([var_7734,], output)
mod['func_7737'] = func_7737
mod = relay.transform.InferType()(mod)
mutated_mod['func_7737'] = func_7737
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7738 = relay.var("var_7738", dtype = "float32", shape = (6, 9, 4))#candidate|7738|(6, 9, 4)|var|float32
func_7737_call = mutated_mod.get_global_var('func_7737')
call_7739 = func_7737_call(var_7738)
output = call_7739
func_7740 = relay.Function([var_7738], output)
mutated_mod['func_7740'] = func_7740
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3933_call = mod.get_global_var('func_3933')
func_3935_call = mutated_mod.get_global_var('func_3935')
call_7744 = func_3933_call()
call_7745 = func_3933_call()
func_2471_call = mod.get_global_var('func_2471')
func_2474_call = mutated_mod.get_global_var('func_2474')
const_7749 = relay.const(2, dtype = "uint16")#candidate|7749|()|const|uint16
call_7748 = relay.TupleGetItem(func_2471_call(relay.reshape(const_7749.astype('uint16'), [])), 0)
call_7750 = relay.TupleGetItem(func_2474_call(relay.reshape(const_7749.astype('uint16'), [])), 0)
output = relay.Tuple([call_7744,call_7748,const_7749,])
output2 = relay.Tuple([call_7745,call_7750,const_7749,])
func_7751 = relay.Function([], output)
mod['func_7751'] = func_7751
mod = relay.transform.InferType()(mod)
mutated_mod['func_7751'] = func_7751
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7751_call = mutated_mod.get_global_var('func_7751')
call_7752 = func_7751_call()
output = call_7752
func_7753 = relay.Function([], output)
mutated_mod['func_7753'] = func_7753
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4160_call = mod.get_global_var('func_4160')
func_4162_call = mutated_mod.get_global_var('func_4162')
call_7823 = func_4160_call()
call_7824 = func_4160_call()
output = call_7823
output2 = call_7824
func_7828 = relay.Function([], output)
mod['func_7828'] = func_7828
mod = relay.transform.InferType()(mod)
mutated_mod['func_7828'] = func_7828
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7828_call = mutated_mod.get_global_var('func_7828')
call_7829 = func_7828_call()
output = call_7829
func_7830 = relay.Function([], output)
mutated_mod['func_7830'] = func_7830
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6661_call = mod.get_global_var('func_6661')
func_6662_call = mutated_mod.get_global_var('func_6662')
call_7848 = func_6661_call()
call_7849 = func_6661_call()
func_4544_call = mod.get_global_var('func_4544')
func_4548_call = mutated_mod.get_global_var('func_4548')
const_7853 = relay.const([[-10,-7,-10,10,4,-6,1,-8,-10,-7,-5,-1,7,-6,2,2,-10,-2,4,4,-7,9,-4,5,3,3,10,1,-2,6,2,-5,1,-3,-1,-2,-7,-8,-7,-7,2,-8,-5,-2,9,10,7,4,-5,10,-5,-4,-3,-5,7,1,-3,-4,2,-5,3,2,3,6,4,3,2,4,-4,-8,-3,10,9,-4,7,4,7,10,2,7,5,5,-1,-3,-10,-4,1,8,-8,-3,-4,-7,-10,10,-2,-10,-8,4,-6,4,9,6,2,10,-6,6,-9,-10,9,-3,-6,-10,7,-4,3,6,6,10,8,9,-2,-4,8,-1,4,8,6,4,1,8,-6,4,8,9,5,-10,2,9,9,-5,-6,5,-10,-7,9,-3,-10,6,-4,-6,4,7,1,8,-9,-7,5,-7,2,-5,7,-5,-8,7,-9,-10,-8,-3,-4,2,-3,8,-10,-4,-7,5,-9,-3,5,-9,-4,9,6,2,2,-5,5,-2,6,-9,-7,9,5,4,-3,-4,2,8,5,9,-7,2,-8,7,4,-9,8,-8,-1,3,-7,-10,2,8,1,5,-4,8,-5,5,10,-10,-1,3,3,5,-5,-1,-6,-4,-8,3,-8,-5,-5,-2,-6,3,-1,1,-4,-3,3,4,5,-6,-9,-7,1,1,4,-3,4,-8,-2,-8,-7,-5,-7,2,7,6,-9,4,-7,-8,-6,9,-4,-4,8,-5,3,7,-9,9,-7,3,-10,-5,-9,5,-1,5,3,-6,-9,8,-10,-9,2,-6,-5,-4,-5,-1,2,-10,-2,2]], dtype = "uint8")#candidate|7853|(1, 300)|const|uint8
call_7852 = relay.TupleGetItem(func_4544_call(relay.reshape(const_7853.astype('uint8'), [10, 2, 15]), relay.reshape(call_7848.astype('float32'), [324,]), ), 2)
call_7854 = relay.TupleGetItem(func_4548_call(relay.reshape(const_7853.astype('uint8'), [10, 2, 15]), relay.reshape(call_7848.astype('float32'), [324,]), ), 2)
bop_7859 = relay.less_equal(call_7852.astype('bool'), relay.reshape(call_7848.astype('bool'), relay.shape_of(call_7852))) # shape=(4, 9, 9)
bop_7862 = relay.less_equal(call_7854.astype('bool'), relay.reshape(call_7849.astype('bool'), relay.shape_of(call_7854))) # shape=(4, 9, 9)
output = relay.Tuple([const_7853,bop_7859,])
output2 = relay.Tuple([const_7853,bop_7862,])
func_7870 = relay.Function([], output)
mod['func_7870'] = func_7870
mod = relay.transform.InferType()(mod)
mutated_mod['func_7870'] = func_7870
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7870_call = mutated_mod.get_global_var('func_7870')
call_7871 = func_7870_call()
output = call_7871
func_7872 = relay.Function([], output)
mutated_mod['func_7872'] = func_7872
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4160_call = mod.get_global_var('func_4160')
func_4162_call = mutated_mod.get_global_var('func_4162')
call_7931 = func_4160_call()
call_7932 = func_4160_call()
output = call_7931
output2 = call_7932
func_7935 = relay.Function([], output)
mod['func_7935'] = func_7935
mod = relay.transform.InferType()(mod)
mutated_mod['func_7935'] = func_7935
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7935_call = mutated_mod.get_global_var('func_7935')
call_7936 = func_7935_call()
output = call_7936
func_7937 = relay.Function([], output)
mutated_mod['func_7937'] = func_7937
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3808_call = mod.get_global_var('func_3808')
func_3809_call = mutated_mod.get_global_var('func_3809')
call_7949 = func_3808_call()
call_7950 = func_3808_call()
output = relay.Tuple([call_7949,])
output2 = relay.Tuple([call_7950,])
func_7955 = relay.Function([], output)
mod['func_7955'] = func_7955
mod = relay.transform.InferType()(mod)
mutated_mod['func_7955'] = func_7955
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7955_call = mutated_mod.get_global_var('func_7955')
call_7956 = func_7955_call()
output = call_7956
func_7957 = relay.Function([], output)
mutated_mod['func_7957'] = func_7957
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7594_call = mod.get_global_var('func_7594')
func_7595_call = mutated_mod.get_global_var('func_7595')
call_7965 = func_7594_call()
call_7966 = func_7594_call()
var_7972 = relay.var("var_7972", dtype = "float32", shape = (10, 2, 15))#candidate|7972|(10, 2, 15)|var|float32
bop_7973 = relay.logical_and(call_7965.astype('bool'), relay.reshape(var_7972.astype('bool'), relay.shape_of(call_7965))) # shape=(10, 2, 15)
bop_7976 = relay.logical_and(call_7966.astype('bool'), relay.reshape(var_7972.astype('bool'), relay.shape_of(call_7966))) # shape=(10, 2, 15)
output = relay.Tuple([bop_7973,])
output2 = relay.Tuple([bop_7976,])
func_7980 = relay.Function([var_7972,], output)
mod['func_7980'] = func_7980
mod = relay.transform.InferType()(mod)
mutated_mod['func_7980'] = func_7980
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7981 = relay.var("var_7981", dtype = "float32", shape = (10, 2, 15))#candidate|7981|(10, 2, 15)|var|float32
func_7980_call = mutated_mod.get_global_var('func_7980')
call_7982 = func_7980_call(var_7981)
output = call_7982
func_7983 = relay.Function([var_7981], output)
mutated_mod['func_7983'] = func_7983
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5738_call = mod.get_global_var('func_5738')
func_5740_call = mutated_mod.get_global_var('func_5740')
call_7996 = relay.TupleGetItem(func_5738_call(), 1)
call_7997 = relay.TupleGetItem(func_5740_call(), 1)
output = relay.Tuple([call_7996,])
output2 = relay.Tuple([call_7997,])
func_7999 = relay.Function([], output)
mod['func_7999'] = func_7999
mod = relay.transform.InferType()(mod)
mutated_mod['func_7999'] = func_7999
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7999_call = mutated_mod.get_global_var('func_7999')
call_8000 = func_7999_call()
output = call_8000
func_8001 = relay.Function([], output)
mutated_mod['func_8001'] = func_8001
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4987_call = mod.get_global_var('func_4987')
func_4988_call = mutated_mod.get_global_var('func_4988')
call_8066 = relay.TupleGetItem(func_4987_call(), 0)
call_8067 = relay.TupleGetItem(func_4988_call(), 0)
var_8087 = relay.var("var_8087", dtype = "float64", shape = (768, 3))#candidate|8087|(768, 3)|var|float64
bop_8088 = relay.minimum(call_8066.astype('int32'), var_8087.astype('int32')) # shape=(768, 3)
bop_8091 = relay.minimum(call_8067.astype('int32'), var_8087.astype('int32')) # shape=(768, 3)
bop_8098 = relay.divide(bop_8088.astype('float64'), call_8066.astype('float64')) # shape=(768, 3)
bop_8101 = relay.divide(bop_8091.astype('float64'), call_8067.astype('float64')) # shape=(768, 3)
func_5342_call = mod.get_global_var('func_5342')
func_5343_call = mutated_mod.get_global_var('func_5343')
call_8103 = relay.TupleGetItem(func_5342_call(), 0)
call_8104 = relay.TupleGetItem(func_5343_call(), 0)
bop_8107 = relay.less_equal(bop_8098.astype('bool'), relay.reshape(var_8087.astype('bool'), relay.shape_of(bop_8098))) # shape=(768, 3)
bop_8110 = relay.less_equal(bop_8101.astype('bool'), relay.reshape(var_8087.astype('bool'), relay.shape_of(bop_8101))) # shape=(768, 3)
func_4351_call = mod.get_global_var('func_4351')
func_4353_call = mutated_mod.get_global_var('func_4353')
const_8113 = relay.const([[-7.148605,-3.010943],[4.280690,-7.944212],[-9.081414,9.973975],[-5.623363,-1.760979],[0.561967,-5.808241],[3.879146,2.583195],[-4.731086,-7.045522],[-6.317767,-5.292648],[-4.136503,2.223859],[2.504457,-4.216104],[4.204103,1.904510],[-0.376205,0.712224],[-2.409747,1.286549],[-7.107994,-1.068971],[6.936060,7.034166],[7.398952,1.776302],[-6.461625,-2.637281],[-9.590386,5.807285],[-4.590325,-7.535505],[-5.591387,-2.784764],[1.909753,5.779090],[8.416234,-0.612695],[-1.526492,-7.761215],[6.140538,5.205708],[8.465409,1.658547],[-2.041151,4.616800],[0.802899,-8.189446],[4.152878,5.029082],[-5.602974,6.895497],[-2.309079,7.530458],[0.444801,-9.832388],[8.078468,2.898380],[4.222025,-2.505353],[4.040182,-9.171294],[7.673788,3.263327],[-7.890158,-6.066614],[9.529287,-3.126593],[5.304625,-7.932241],[1.635100,-9.889016],[2.091065,1.894571],[-7.067121,-3.674021],[-4.025481,3.711197],[8.068314,-8.375289],[5.985524,4.655991],[-6.350522,-6.385698],[8.864928,2.430949],[7.765172,5.338007],[0.016240,-4.983548],[-9.608181,1.734769],[8.844951,7.067779],[7.025269,-6.496892],[-1.252417,2.788273],[4.355583,-8.109775],[1.193126,-3.543675],[5.325878,4.633370],[-4.017258,6.514503],[-1.475688,2.950149],[9.933336,9.261486],[1.400908,7.462275],[6.971588,-1.261337],[-4.937922,5.476320],[-0.644432,-5.372618],[2.405746,-6.313683],[4.003557,-6.465025],[7.762290,-7.083450],[-8.774748,2.034700],[8.625809,5.102806],[-1.423625,-3.893282],[9.101181,-9.759784],[5.872011,3.540801],[-4.027871,-9.140825],[7.863762,2.346397],[4.757682,3.502893],[7.759009,7.377047],[1.237596,1.748279],[-5.353082,-7.438795],[2.968033,-9.598815],[-8.029668,1.472218],[9.909896,-2.847348],[2.574355,9.344115],[0.296554,-6.370602],[-3.413101,-7.670019],[3.188256,7.810919],[4.268096,6.718543],[-2.379886,7.676655],[3.771971,6.681207],[-8.148465,-1.791018],[2.846163,-7.093517],[-5.869954,-6.692846],[-2.929030,9.247754],[-5.210119,-8.162870],[-1.839766,8.564499],[6.464927,1.178558],[0.674000,7.786478],[7.584051,9.308211],[-4.355221,9.590055],[1.083547,2.568832],[-5.830643,5.216489],[0.622761,-6.778212],[5.107407,-9.296056],[-0.129555,2.292456],[-4.038699,-0.991362],[-8.352676,-5.687858],[2.958991,-5.027166],[1.949607,8.236139],[-2.791355,7.417770],[-2.224478,5.547391],[3.578197,-3.700717],[-1.791459,6.713577],[-4.328304,-6.435358],[-3.793941,8.141259],[-1.005397,-1.861296],[2.813882,-0.974188],[-2.267619,0.100525],[7.987626,-9.635241],[-7.874900,5.770375],[-1.726104,4.994800],[-2.600959,-9.191618],[5.796476,-1.416214],[6.324329,3.359948],[-9.210045,-5.436095],[2.609101,8.015722],[-3.506359,0.486306],[-2.210519,4.667950],[-9.122129,-1.920088],[-6.894488,5.005413],[-3.578652,-7.918770],[-1.310783,5.204795],[3.143353,4.748174],[0.779185,8.254379],[-3.619610,2.821412],[3.267833,2.499822],[4.461570,-5.661297],[-5.302876,0.474570],[-4.504400,-3.161687],[-3.003950,9.830811],[1.457980,-3.560058],[-8.407426,5.977548],[7.310140,3.964873],[2.899132,-7.296229],[-8.960090,3.131359],[-7.375298,-0.776707],[-4.936133,9.240368],[-2.511299,-7.035517],[8.867323,-0.263001],[-2.424074,-1.270572],[-5.999553,4.638606],[-8.859849,0.386024],[-0.610022,-7.309401],[6.442772,9.823626],[1.626383,-5.271733],[-7.755645,-1.020731],[-7.248399,0.692947],[-3.495599,-0.804614],[7.477721,-8.978839],[8.849885,9.897794],[-3.421731,-8.928703],[-4.224118,6.627841],[-7.087872,4.340670],[-3.536704,-0.278962],[-6.663713,-4.634394],[0.948989,-4.787867]], dtype = "float32")#candidate|8113|(162, 2)|const|float32
call_8112 = relay.TupleGetItem(func_4351_call(relay.reshape(const_8113.astype('float32'), [324,])), 0)
call_8114 = relay.TupleGetItem(func_4353_call(relay.reshape(const_8113.astype('float32'), [324,])), 0)
output = relay.Tuple([call_8103,bop_8107,call_8112,const_8113,])
output2 = relay.Tuple([call_8104,bop_8110,call_8114,const_8113,])
func_8118 = relay.Function([var_8087,], output)
mod['func_8118'] = func_8118
mod = relay.transform.InferType()(mod)
var_8119 = relay.var("var_8119", dtype = "float64", shape = (768, 3))#candidate|8119|(768, 3)|var|float64
output = func_8118(var_8119)
func_8120 = relay.Function([var_8119], output)
mutated_mod['func_8120'] = func_8120
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6876_call = mod.get_global_var('func_6876')
func_6877_call = mutated_mod.get_global_var('func_6877')
call_8142 = relay.TupleGetItem(func_6876_call(), 0)
call_8143 = relay.TupleGetItem(func_6877_call(), 0)
func_7980_call = mod.get_global_var('func_7980')
func_7983_call = mutated_mod.get_global_var('func_7983')
call_8159 = relay.TupleGetItem(func_7980_call(relay.reshape(call_8142.astype('float32'), [10, 2, 15])), 0)
call_8160 = relay.TupleGetItem(func_7983_call(relay.reshape(call_8142.astype('float32'), [10, 2, 15])), 0)
output = relay.Tuple([call_8142,call_8159,])
output2 = relay.Tuple([call_8143,call_8160,])
func_8178 = relay.Function([], output)
mod['func_8178'] = func_8178
mod = relay.transform.InferType()(mod)
mutated_mod['func_8178'] = func_8178
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8178_call = mutated_mod.get_global_var('func_8178')
call_8179 = func_8178_call()
output = call_8179
func_8180 = relay.Function([], output)
mutated_mod['func_8180'] = func_8180
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8187 = relay.var("var_8187", dtype = "float32", shape = ())#candidate|8187|()|var|float32
var_8188 = relay.var("var_8188", dtype = "float32", shape = (10, 10, 4))#candidate|8188|(10, 10, 4)|var|float32
bop_8189 = relay.maximum(var_8187.astype('float32'), var_8188.astype('float32')) # shape=(10, 10, 4)
func_7122_call = mod.get_global_var('func_7122')
func_7124_call = mutated_mod.get_global_var('func_7124')
call_8199 = func_7122_call()
call_8200 = func_7122_call()
func_5782_call = mod.get_global_var('func_5782')
func_5783_call = mutated_mod.get_global_var('func_5783')
call_8211 = func_5782_call()
call_8212 = func_5782_call()
output = relay.Tuple([bop_8189,call_8199,call_8211,])
output2 = relay.Tuple([bop_8189,call_8200,call_8212,])
func_8213 = relay.Function([var_8187,var_8188,], output)
mod['func_8213'] = func_8213
mod = relay.transform.InferType()(mod)
var_8214 = relay.var("var_8214", dtype = "float32", shape = ())#candidate|8214|()|var|float32
var_8215 = relay.var("var_8215", dtype = "float32", shape = (10, 10, 4))#candidate|8215|(10, 10, 4)|var|float32
output = func_8213(var_8214,var_8215,)
func_8216 = relay.Function([var_8214,var_8215,], output)
mutated_mod['func_8216'] = func_8216
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6175_call = mod.get_global_var('func_6175')
func_6177_call = mutated_mod.get_global_var('func_6177')
call_8221 = relay.TupleGetItem(func_6175_call(), 0)
call_8222 = relay.TupleGetItem(func_6177_call(), 0)
func_7870_call = mod.get_global_var('func_7870')
func_7872_call = mutated_mod.get_global_var('func_7872')
call_8232 = relay.TupleGetItem(func_7870_call(), 1)
call_8233 = relay.TupleGetItem(func_7872_call(), 1)
output = relay.Tuple([call_8221,call_8232,])
output2 = relay.Tuple([call_8222,call_8233,])
func_8234 = relay.Function([], output)
mod['func_8234'] = func_8234
mod = relay.transform.InferType()(mod)
output = func_8234()
func_8235 = relay.Function([], output)
mutated_mod['func_8235'] = func_8235
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7485_call = mod.get_global_var('func_7485')
func_7487_call = mutated_mod.get_global_var('func_7487')
call_8242 = func_7485_call()
call_8243 = func_7485_call()
func_4798_call = mod.get_global_var('func_4798')
func_4801_call = mutated_mod.get_global_var('func_4801')
var_8250 = relay.var("var_8250", dtype = "float64", shape = ())#candidate|8250|()|var|float64
call_8249 = relay.TupleGetItem(func_4798_call(relay.reshape(var_8250.astype('float64'), [])), 2)
call_8251 = relay.TupleGetItem(func_4801_call(relay.reshape(var_8250.astype('float64'), [])), 2)
func_5567_call = mod.get_global_var('func_5567')
func_5568_call = mutated_mod.get_global_var('func_5568')
call_8255 = func_5567_call()
call_8256 = func_5567_call()
func_7980_call = mod.get_global_var('func_7980')
func_7983_call = mutated_mod.get_global_var('func_7983')
call_8258 = relay.TupleGetItem(func_7980_call(relay.reshape(call_8242.astype('float32'), [10, 2, 15])), 0)
call_8259 = relay.TupleGetItem(func_7983_call(relay.reshape(call_8242.astype('float32'), [10, 2, 15])), 0)
output = relay.Tuple([call_8242,call_8249,var_8250,call_8255,call_8258,])
output2 = relay.Tuple([call_8243,call_8251,var_8250,call_8256,call_8259,])
func_8260 = relay.Function([var_8250,], output)
mod['func_8260'] = func_8260
mod = relay.transform.InferType()(mod)
var_8261 = relay.var("var_8261", dtype = "float64", shape = ())#candidate|8261|()|var|float64
output = func_8260(var_8261)
func_8262 = relay.Function([var_8261], output)
mutated_mod['func_8262'] = func_8262
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5083_call = mod.get_global_var('func_5083')
func_5085_call = mutated_mod.get_global_var('func_5085')
call_8266 = func_5083_call()
call_8267 = func_5083_call()
func_7286_call = mod.get_global_var('func_7286')
func_7287_call = mutated_mod.get_global_var('func_7287')
call_8270 = func_7286_call()
call_8271 = func_7286_call()
output = relay.Tuple([call_8266,call_8270,])
output2 = relay.Tuple([call_8267,call_8271,])
func_8295 = relay.Function([], output)
mod['func_8295'] = func_8295
mod = relay.transform.InferType()(mod)
output = func_8295()
func_8296 = relay.Function([], output)
mutated_mod['func_8296'] = func_8296
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7391_call = mod.get_global_var('func_7391')
func_7393_call = mutated_mod.get_global_var('func_7393')
call_8332 = func_7391_call()
call_8333 = func_7391_call()
func_7980_call = mod.get_global_var('func_7980')
func_7983_call = mutated_mod.get_global_var('func_7983')
const_8362 = relay.const([9.432322,-3.124335,7.864974,-5.071855,8.927897,-0.346016,-1.073766,-4.375927,8.456858,2.031072,-4.367225,-9.351669,2.797945,1.538544,-7.616417,8.646789,-9.567215,6.160132,-1.922476,-1.760229,1.616185,-2.136471,-1.924974,0.587441,8.589854,-4.445502,-3.048533,5.367351,7.891874,-0.935733,3.923106,5.123476,-2.284170,0.285470,-1.672646,-6.858335,-6.310169,8.510292,-6.599757,-8.082147,-9.957176,0.356690,8.922130,-0.072754,1.108227,-4.352344,-9.555091,-8.617475,-6.749309,2.590153,7.343681,-1.569953,-4.557117,-6.465913,-8.127261,-4.473022,0.082090,-8.164258,-6.268861,-0.991241,8.459001,7.790712,-3.312089,-2.625644,4.345671,-8.230118,-6.541428,1.290012,-3.616930,3.131592,-9.151353,9.677046,0.561581,7.061522,7.941868,0.054370,-8.131522,-3.227453,-8.740133,-1.783382,1.710934,-2.055691,6.198697,-1.771431,-2.751677,1.494427,-2.281629,-0.703893,-8.863376,6.566938,6.495127,-0.041590,7.726314,0.711055,-9.699546,-2.026719,-6.757369,4.492751,-3.748925,8.764549,3.371763,3.321171,-1.172220,3.305285,0.668085,-5.207051,5.820978,3.355911,3.849639,-9.540640,-7.649621,4.663379,5.610409,-6.608317,6.935828,-1.388906,-8.921061,-8.819758,-3.986145,7.946763,-4.673736,-8.031245,4.038642,4.750238,-7.643571,-4.637039,-4.499955,0.608516,-8.530988,7.885447,-4.118751,-6.474994,8.888193,6.901792,-4.502251,-6.737730,-7.587724,-8.473462,-6.788720,-3.678650,2.597645,8.126728,8.642695,3.330818,-6.375281,7.505724,7.972499,-5.507497,-9.438268,-0.765145,-4.975195,5.655664,0.400110,-6.739613,0.509320,9.144783,2.713071,-4.582586,1.617154,-2.313834,-2.597919,-4.040360,4.918906,7.936488,-4.022920,-3.122604,-1.051796,4.014501,8.483261,7.936569,5.973469,0.112301,6.438647,3.178005,-7.978185,-6.214384,7.039097,-9.689620,2.748784,-5.584163,6.264737,7.581932,-1.858691,7.782550,-2.722726,2.270551,8.952887,4.976667,-1.930149,-8.757143,-3.057335,-6.224294,6.622372,9.007483,-2.707097,9.778454,-4.475415,2.785424,4.805291,3.998937,7.270445,9.208675,3.858270,6.045892,2.363308,-1.799685,-9.291632,4.484344,2.262807,8.773510,-3.965320,2.900446,7.800222,-5.365151,-3.475140,-5.617700,-0.683996,-0.387933,-4.939568,1.866115,3.971592,-1.693452,-3.998777,-4.736828,-3.532877,4.231894,-6.542195,5.542802,2.334437,-3.409928,1.480698,3.878623,7.571551,-5.779248,7.394932,5.909964,0.261827,2.807536,-2.100022,-6.488325,7.856751,4.567868,-7.547247,8.500689,-3.066518,1.837286,-6.989436,9.348159,6.410112,-7.579072,-0.822220,8.624764,9.771492,6.084492,-0.548408,-8.097126,-5.206130,7.591912,-3.212184,-1.280205,9.284881,2.870238,2.874702,1.863487,-6.781476,0.078921,0.063961,-8.736461,3.006115,-6.962745,5.383970,4.913083,5.194023,3.933805,0.221523,-3.604223,8.818025,3.017192,1.557879,9.238131,-2.867457,-1.415013,-4.547987,-2.985552,-5.610238,4.520732,8.736559,8.401414,-0.096918,-8.049443,0.206646,-6.265870,-5.467884,0.728564,-3.790413,3.062488,0.033323,-5.487847,9.842992,-1.573814], dtype = "float32")#candidate|8362|(300,)|const|float32
call_8361 = relay.TupleGetItem(func_7980_call(relay.reshape(const_8362.astype('float32'), [10, 2, 15])), 0)
call_8363 = relay.TupleGetItem(func_7983_call(relay.reshape(const_8362.astype('float32'), [10, 2, 15])), 0)
func_4202_call = mod.get_global_var('func_4202')
func_4205_call = mutated_mod.get_global_var('func_4205')
var_8368 = relay.var("var_8368", dtype = "float32", shape = (324,))#candidate|8368|(324,)|var|float32
call_8367 = relay.TupleGetItem(func_4202_call(relay.reshape(var_8368.astype('float32'), [324,])), 3)
call_8369 = relay.TupleGetItem(func_4205_call(relay.reshape(var_8368.astype('float32'), [324,])), 3)
func_7870_call = mod.get_global_var('func_7870')
func_7872_call = mutated_mod.get_global_var('func_7872')
call_8372 = relay.TupleGetItem(func_7870_call(), 0)
call_8373 = relay.TupleGetItem(func_7872_call(), 0)
output = relay.Tuple([call_8332,call_8361,const_8362,call_8367,var_8368,call_8372,])
output2 = relay.Tuple([call_8333,call_8363,const_8362,call_8369,var_8368,call_8373,])
func_8426 = relay.Function([var_8368,], output)
mod['func_8426'] = func_8426
mod = relay.transform.InferType()(mod)
var_8427 = relay.var("var_8427", dtype = "float32", shape = (324,))#candidate|8427|(324,)|var|float32
output = func_8426(var_8427)
func_8428 = relay.Function([var_8427], output)
mutated_mod['func_8428'] = func_8428
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5782_call = mod.get_global_var('func_5782')
func_5783_call = mutated_mod.get_global_var('func_5783')
call_8434 = func_5782_call()
call_8435 = func_5782_call()
const_8449 = relay.const([[[2,-2],[1,-10],[-7,7],[1,-8],[-2,2]],[[-6,-2],[-2,-3],[-9,8],[10,2],[8,-4]],[[-6,-2],[2,2],[8,2],[6,-7],[5,9]],[[-10,5],[-6,1],[-1,-10],[-7,4],[2,-5]],[[-1,6],[-3,10],[-2,1],[-3,-4],[-3,3]],[[-10,-1],[-5,6],[2,-10],[8,-2],[9,-8]],[[10,-5],[-8,-4],[-3,-5],[9,-10],[4,2]],[[9,8],[-7,10],[-2,-9],[10,5],[-2,-8]],[[-5,-8],[2,1],[-5,-1],[6,-4],[8,1]],[[4,2],[3,-3],[6,1],[-6,-8],[-10,6]],[[3,-10],[5,-3],[7,4],[-5,5],[-4,4]],[[10,1],[-8,-8],[-7,4],[10,-10],[9,7]]], dtype = "uint16")#candidate|8449|(12, 5, 2)|const|uint16
bop_8450 = relay.less(call_8434.astype('bool'), relay.reshape(const_8449.astype('bool'), relay.shape_of(call_8434))) # shape=(12, 5, 2)
bop_8453 = relay.less(call_8435.astype('bool'), relay.reshape(const_8449.astype('bool'), relay.shape_of(call_8435))) # shape=(12, 5, 2)
func_4987_call = mod.get_global_var('func_4987')
func_4988_call = mutated_mod.get_global_var('func_4988')
call_8470 = relay.TupleGetItem(func_4987_call(), 0)
call_8471 = relay.TupleGetItem(func_4988_call(), 0)
output = relay.Tuple([bop_8450,call_8470,])
output2 = relay.Tuple([bop_8453,call_8471,])
func_8485 = relay.Function([], output)
mod['func_8485'] = func_8485
mod = relay.transform.InferType()(mod)
output = func_8485()
func_8486 = relay.Function([], output)
mutated_mod['func_8486'] = func_8486
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7472_call = mod.get_global_var('func_7472')
func_7473_call = mutated_mod.get_global_var('func_7473')
call_8496 = func_7472_call()
call_8497 = func_7472_call()
output = call_8496
output2 = call_8497
func_8509 = relay.Function([], output)
mod['func_8509'] = func_8509
mod = relay.transform.InferType()(mod)
mutated_mod['func_8509'] = func_8509
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8509_call = mutated_mod.get_global_var('func_8509')
call_8510 = func_8509_call()
output = call_8510
func_8511 = relay.Function([], output)
mutated_mod['func_8511'] = func_8511
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3754_call = mod.get_global_var('func_3754')
func_3756_call = mutated_mod.get_global_var('func_3756')
call_8520 = func_3754_call()
call_8521 = func_3754_call()
output = relay.Tuple([call_8520,])
output2 = relay.Tuple([call_8521,])
func_8524 = relay.Function([], output)
mod['func_8524'] = func_8524
mod = relay.transform.InferType()(mod)
output = func_8524()
func_8525 = relay.Function([], output)
mutated_mod['func_8525'] = func_8525
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5849_call = mod.get_global_var('func_5849')
func_5851_call = mutated_mod.get_global_var('func_5851')
call_8537 = relay.TupleGetItem(func_5849_call(), 0)
call_8538 = relay.TupleGetItem(func_5851_call(), 0)
func_1383_call = mod.get_global_var('func_1383')
func_1385_call = mutated_mod.get_global_var('func_1385')
const_8557 = relay.const([2.823843,-8.087483,-7.073161,-7.545849,9.470807,8.794058,0.567945,-9.616450,-4.380895,8.070854,-4.187772,-3.682321,-0.450602,7.467323,4.237568,7.317540,8.704100,-2.231341,0.565896,9.953806,-1.811599,-0.554996,7.206316,-3.651302,1.429197,3.956396,-3.458886,-7.391750,6.254255,7.275471,-4.052252,-9.549727,-4.765528,9.742848,8.809267,-0.346028,9.207981,1.964315,-5.927987,-9.750340,-4.739097,8.644193,-2.324064,5.189169,-7.570798,-7.604106,0.581043,-1.610981,9.434585,6.249461,-4.267140,-2.210272,6.071780,-5.242846,-3.054291,7.612996,-3.348434,7.316386,-8.940711,9.357470,8.340305,-4.319533,-5.599641,-7.636137,-4.375367,-5.527503,-1.827293,8.297449,-0.460164,2.446600,-2.599075,1.515892,2.122268,9.424200,9.413355,-7.174020,7.975907,2.289103,1.558570,0.672534,-4.916206,0.917855,4.961736,-8.974008,-5.759178,-2.195510,-1.058978,-3.232498,-0.798775,-1.302187,-6.148622,9.609602,6.377387,1.603549,-5.321635,-2.576985,-2.934129,9.835897,-9.321199,5.236016,7.853005,-1.121743,-7.151319,-1.245239,-9.100817,-3.078102,5.973562,-2.783592,5.842795,-8.260316,1.670903,-9.972399,-3.069601,9.516598,2.212639,3.098104,-7.830567,-3.185648,-0.134229,1.663789,9.056693,4.231175,3.167919,7.795488,0.825160,1.657419,3.474017,-2.411551,5.423988,-6.979252,4.773670,-6.410514,5.267676,-9.046281,6.953029,9.048388,6.332272,9.893441,-2.778700,9.298732,-8.174163,-6.073881,-5.639501,3.173039,-4.830356,-4.721324,-3.520416,9.559749,-4.372980,3.114959,-2.809136,-8.585083,-1.454014,-0.566130,3.168158,-5.670330,-0.948913,1.285773,-2.960604,8.252684,-3.594710,-7.054615,-2.926258,4.324114,8.028368,-1.223154,8.375534,8.222684,-8.628554,-5.821952,-7.540666,-8.432740,-6.604526,7.341985,-1.451513,3.559432,4.833640,1.926260,-9.199306,-1.325620,-6.720319,4.821665,2.353022,9.534646,-7.419957,3.313583,-7.111800,-1.224242,9.232882,0.840757,-6.249643,1.426773,-3.841627,6.948915,7.110073,-7.379322,-6.212107,8.818103,1.692285,7.151301,-6.616455,-1.541480,-3.762992,8.409176,-0.252302,-4.636111,-8.613040,-8.241280,-2.559794,9.922090,3.910570,9.008766,6.239546,-8.652383,5.301026,-2.001406,-4.681906,8.168120,9.808658,3.956429,2.885081,-9.133043,4.662750,7.897171,-2.120545,2.617318,-6.047535,5.546521,1.833144,-0.843996,-4.213192,-1.776326,4.702042,4.324001,4.288910,6.796634,-3.593097,-3.822486,-4.695616,-8.437389,-8.114084,5.460069,-1.358933,-0.307348,-8.611865,5.612370,8.802954,0.670306,1.242676,-5.086115,5.745757,9.683906,8.911492,6.899312,2.230919,2.614349,2.513501,4.429212,6.841349,5.056042,-3.127520,-9.908119,3.886614,3.445172,8.414783,7.799215,5.973888,-4.729535,-3.070223,-6.571698,2.044422,2.421914,-8.788160,1.825626,-5.685769,8.214567,0.856567,-9.900708,-6.343241,4.363648,8.393382,-4.739962,5.828907,-4.858963,4.371134,-5.573565,-7.027278,1.524755,-9.731660,-1.271308,-9.942961,5.869843,-0.607779,-6.607348,4.042700,-4.169943,-6.796913,5.564337,9.681005,8.877801,6.496645,-2.767048,1.440283,-1.652153,-2.101121,-3.325442,9.608143,-2.003677,1.789823,-2.827566,-9.188404,-5.537310,5.145508,-7.499973,0.704813,8.770741,4.319940,-8.770514,-0.572259,-0.894955,8.516166,2.522841,9.425191,-4.011964,-2.206168,4.513448,0.611820,8.174672,-8.145954,-1.435013,3.215111,-3.377070,7.967259,3.189724,6.705616,-9.712303,-7.175057,9.704032,7.614506,-1.121431,-3.000776,-6.961890,1.494823,9.630657,1.122362,3.604463,8.248579,-1.878823,-0.119970,-0.166851,8.577387,7.708426,-0.341267,7.223905,-9.458658,5.299505,-3.229140,6.125415,6.890282,4.130682,-8.983425,6.076515,-9.810797,-0.667525,4.424417,-3.003891,4.459531,-0.864626,8.335660,4.447271,-9.218119,-9.961386,-2.423506,-8.260040,-5.351048,-6.134105,3.733335,4.855677,4.941862,-2.915729,-6.016624,-2.763890,-9.157943,-9.707499,-2.080072,-5.719294,-6.290536,7.262802,-2.437115,6.125955,1.023093,4.483871,2.655023,-8.288956,-4.014165,-6.637245,-8.235235,-8.600686,2.300304,-1.041604,-5.255556,-6.536277,9.184378,4.854301,-5.046955,1.730454,-0.603168,-6.209074,6.643264,3.239260,0.370166,-3.214453,-5.954506,9.919534,5.083573,0.512794,-3.205052,3.062679,-3.460340,7.775663,8.629063,-6.233370,7.154795,0.701119,-5.416937,-6.203122,-1.340528,0.461894,5.789960,9.548869,-9.525545,-6.663135,-9.916634,-2.620780,-4.968084,8.569105,-1.274963,9.724515,-8.859569,-4.664978,1.225894,7.370086,-0.763859,-7.718191,8.574255,-6.672014,1.376337,-7.603864,-5.331523,-7.190415,-4.009405,-1.311147,6.329418,-3.619307,6.353866,-2.083423,8.253927,-2.448327,-4.842437,3.450794,-1.902896,7.109928,-0.550860,-6.995313,8.329281,3.711128,-5.760142,-6.717478,7.273788,-8.225465,-2.875176,-1.190816,-8.290984,8.544876,8.436038,-9.420972,-4.800869,1.894246,4.768872,-1.368263,-0.489897,-1.938974,3.289988,5.437763,1.107940,2.518638,-0.514751,8.875416,6.325595,-6.985404,8.832674,-7.578686,-5.232017,-2.796942,1.061649,-6.388671,-8.009340,6.701426,-1.337839,-7.085845,-3.723231,6.642373,1.165621,0.671967,2.762103,-1.219490,-4.372899,-4.505123,-4.258503,-6.818451,8.940539,-4.807928,1.250092,-3.984871,-2.450728,6.928193,-2.052076,8.513506,2.989568,-6.915705,-9.139141,6.506759,-3.207174,-8.630415,-1.826434,-1.992982,7.487423,8.937613,-7.189689,-3.845204,-6.518997,9.792892,-0.638026,7.889289,4.532355,-3.097472,-0.580622,-4.313691,-5.423172,6.947024,9.817269,-2.355210,-3.761839,8.862644,2.323191,6.844574,2.198037,5.165878,-9.369155,1.213039,-7.255567,5.756520,5.014040,7.966130,-4.122310,-0.857830,1.407984,9.291929,-7.636686,-1.458651,-4.768541,-2.114566,3.884140,-6.817831,-1.336014,8.325188,0.458205,9.054116,1.133683,-7.807174,4.071880,7.086574,-9.919712,1.570329,-1.234650,-1.368206,6.187843,-3.981666,-1.569702,-1.846148,6.088239,-2.058637,7.909697,3.110164,-9.156842,-1.195227,9.966564,-2.652556,-0.538874,-1.315983,-1.070147,-6.366945,0.947079,-5.393505,2.785954,-7.976032,-4.101158,3.239410,-5.392688,-2.750423,8.548745,4.930839,2.571102,-8.243702,5.095387,-2.460212,0.144725,8.792957,2.438326,9.860044,5.075315,0.858718,-5.766981,7.701899,-4.303929,1.032868,-6.475053,-5.733958,9.298519,-1.392441,2.194855,-4.379294,2.126870,-5.459291,1.497647,1.439309,3.404952,-1.576024,0.714349,4.386584,-0.682136,0.127387,6.950856,-4.451789,-1.326083,2.915736,3.473306,7.458462,6.303427,1.955552,7.934945,0.440424,-5.510133,-1.681345,2.605444,4.367622,-1.066035,8.094704,-4.507616,-7.369441,-7.915933,-6.496713,3.740409,-4.678526,1.436684,2.068949,-8.830977,-7.479486,3.695280,-4.051162,-5.407223,-9.172975,6.163628,-8.730313,2.759929,-1.158718,-3.834015,5.267570,-5.623376,-1.127528,7.494930,-1.840591,8.135604,-0.248358,7.126867,3.948913,-5.901547,8.145467,0.403163,2.942826,-1.845018,-6.539089,4.205930,5.925631,0.507524,9.223246,7.329341,-6.413055,-6.300310,5.082950,-7.000543,3.739311,-0.400237,-2.326125,-9.558964,-3.728951,7.351252,5.591040,-3.653500,4.998894,1.756801,9.258995,-3.967535,5.104425,-1.164002,5.424941,1.783028,-1.531851,6.849888,-2.812007,-4.809141,-8.061060,6.101946,-5.336681,-7.395631,-3.699313,8.688200,7.607766,1.192992,-6.352688,2.183860,-1.466852,6.663932,1.692331,5.803218,-9.936548,-6.475326,-9.239797,1.103940,-8.217074,-4.752493,5.045881,-1.759506,9.397190,3.467433,5.424479,8.104077,8.213090,-5.832747,7.537975,-3.650816,-0.636199,6.781335,5.423776,6.078518,-4.367818,-4.965163,3.095873,-7.556810,-6.389658,7.688861,8.523270,-8.727613,6.364833,6.876397,-2.558707,-1.419754,-4.435125,5.843173,-1.878307,3.628514,-5.036795,-2.221912,-8.576119,0.441412,-7.334480,0.006911,3.955892], dtype = "float32")#candidate|8557|(768,)|const|float32
call_8556 = relay.TupleGetItem(func_1383_call(relay.reshape(const_8557.astype('float32'), [16, 4, 12])), 0)
call_8558 = relay.TupleGetItem(func_1385_call(relay.reshape(const_8557.astype('float32'), [16, 4, 12])), 0)
func_8118_call = mod.get_global_var('func_8118')
func_8120_call = mutated_mod.get_global_var('func_8120')
const_8568 = relay.const([-0.677585,8.414530,0.817521,1.583062,7.799400,9.717986,-6.668692,-9.744121,0.256972,-8.595976,1.895365,9.298941,2.748153,4.027858,0.117412,-7.294502,-3.369382,6.967115,9.528463,-7.952130,-3.140973,3.087311,9.401086,-6.292803,7.439774,9.719519,0.209636,-1.266841,5.453974,6.054245,8.408988,-6.993641,3.607448,1.022541,2.000388,8.612993,5.823714,-7.919800,-3.263829,5.635758,4.394150,-6.301550,1.076523,-4.409776,2.792833,5.256528,5.524310,-0.169415,3.832843,3.931596,6.875397,-5.067021,-1.148257,0.895758,-3.641982,-0.414709,0.108480,-4.408231,6.025647,6.341175,-0.779621,5.069896,8.664355,5.147556,4.611947,6.431976,8.161974,6.420308,-3.001170,7.586453,3.015818,-8.126234,-3.890170,6.504554,8.297865,-1.097850,1.494588,-2.024737,7.168978,-1.953994,-2.686344,7.765735,7.355688,4.493210,-6.539810,-9.421995,9.299292,-4.082452,4.992490,4.263641,0.720880,1.942512,-9.981440,9.909959,8.497924,-1.474277,4.042327,3.906659,2.156560,-6.649756,3.383446,3.948201,9.438137,4.102805,-3.124731,-4.637792,-8.368871,-6.388835,7.369082,4.766512,8.147784,-1.582070,3.304801,-2.727121,7.122727,-8.779476,2.185146,8.891299,-7.658581,-9.898329,0.835540,-2.948176,-7.197544,-3.918401,-7.775304,-2.471847,-6.068838,-4.651770,-4.131108,-4.722909,8.162892,4.432059,-7.980874,8.142864,3.279126,4.538966,-7.479049,-1.871585,0.425518,-4.871413,-4.781741,1.859047,-4.391792,5.908186,-0.969695,-9.380515,-9.409157,8.651665,-3.607084,1.072864,-8.723913,-3.160893,-9.342131,7.879061,-4.974693,9.282825,-3.481162,6.988491,-8.552129,6.173640,-3.453177,-8.388262,0.670111,8.686143,5.550617,7.760039,-8.585935,-5.969446,5.569844,-2.479146,-6.704947,-3.768968,-7.533101,9.941056,-1.214161,-1.971943,-0.082426,-0.337347,-6.424747,2.143641,-8.263013,1.817648,-5.597951,-6.166528,8.815222,7.730237,-9.416735,-7.274837,6.319236,-1.222506,-9.933545,-3.808876,8.499723,0.691294,1.167472,4.927113,2.627984,-6.761797,0.050615,8.076295,4.733053,-5.199551,1.130034,-8.926595,-1.582407,-0.877277,8.745248,4.491137,5.735831,-7.547101,7.008040,1.289930,-0.433943,-6.483838,-8.229956,-5.608881,8.053529,7.186746,1.250065,5.211022,-1.394814,0.472845,1.975272,2.527568,6.476296,0.413422,7.224640,1.973894,-8.429486,4.412323,-1.433580,-2.623171,-0.144235,-6.424930,5.227957,5.239866,0.432402,-4.831752,7.692048,-4.101091,0.427112,9.669387,-7.553301,8.034223,5.787706,5.185393,-2.761269,7.722001,2.553154,7.839284,8.155880,4.253722,9.860313,6.939627,3.807332,0.565087,1.156263,5.830409,2.440006,-4.815135,-1.170790,-3.459513,0.597765,8.343919,0.146701,-3.518845,-0.353433,-2.326721,2.159294,-7.155908,6.997820,5.917810,6.272208,-0.570313,3.365393,1.265423,-9.704343,6.811198,9.625796,-3.398593,9.427022,2.777306,-5.251672,1.563730,-7.621246,-6.022677,9.161357,-1.684686,5.969987,0.912029,-6.201188,-7.940516,8.195219,-3.887606,-5.824463,5.859707,8.070331,6.220897,-8.966674,8.171319,2.490095,-3.574594,-7.414181,4.429510,5.066030,-8.802843,5.839523,-9.123388,-8.056996,7.225623,-2.761813,-5.075672,7.263084,9.913583,-5.987054,-3.208283,8.891034,-1.520706,-5.504221,0.051047,4.642197,4.734568,-9.635847,8.077802,-1.515198,0.474931,2.630384,8.206426,-5.658042,2.398418,3.456519,-0.665866,-8.768332,-1.059291,-9.295957,8.283561,-6.889339,-7.812163,-5.826639,7.017532,-2.188376,3.217357,3.634174,-5.214519,-1.617289,-7.655146,-2.410006,-1.710657,-3.777846,4.907399,-3.240291,-4.211334,8.314746,7.087943,-0.771257,-2.752317,2.410259,-9.298565,-4.322046,-2.394799,-4.730022,0.279661,3.649337,-8.764040,-1.309799,-3.973924,-9.057500,8.116824,2.825622,7.538182,-2.910627,-0.635971,-6.150017,-8.458661,-5.816767,0.918221,2.594907,5.946679,-9.008839,-3.171256,0.176677,5.599530,8.903441,9.715873,6.641928,-9.150307,-2.968057,9.060343,-9.665136,-8.949731,5.116176,6.769437,-3.460104,7.489605,-4.952547,1.812847,4.648333,3.973068,-6.294467,3.668408,-3.755854,9.023995,1.543067,9.841302,-1.748104,-2.195844,3.488485,-0.376853,-6.988367,-9.093549,-9.091941,-4.536052,-9.559903,-6.187481,-9.316123,-4.147048,-4.657056,3.539199,-1.127133,7.190586,-1.210791,-1.661285,8.541845,0.838766,8.980615,1.334059,-2.394322,0.462931,9.186272,8.885655,2.522770,-2.635109,9.789696,8.465424,-2.827294,-2.038796,-2.458139,-8.140009,7.153471,2.045357,3.057904,-3.749094,-3.657610,-0.626602,-8.138688,4.604810,0.045768,3.804268,-9.299268,0.238716,0.330738,8.322371,-9.451753,3.780735,-8.626770,-6.072751,1.424430,9.180819,-1.233837,-3.976351,9.442015,9.560598,8.284522,8.352649,2.204708,3.411790,-1.687241,1.827855,-7.708919,-3.639931,1.467123,0.743286,-2.970781,7.783101,-9.627103,8.406698,4.098967,7.392526,4.026145,-8.701609,7.852360,3.104569,0.830041,-4.952648,1.615994,-2.343452,-5.210612,-7.316930,-8.534685,6.969961,6.495589,-1.299822,1.459239,5.810858,-1.317513,-4.261162,5.230271,3.981756,-6.079019,5.366681,-0.257216,-6.165362,9.853439,1.080702,-5.852758,-4.256188,2.568573,7.609981,-3.535242,1.607233,-4.586394,-8.104528,9.714644,-0.112729,-3.832568,-4.274276,0.435319,4.368170,6.639332,-7.659170,2.051709,5.276316,5.370492,-9.420699,9.587655,-0.554924,5.536448,-1.781203,-3.864642,-8.766008,-3.849112,-6.782019,6.299633,-9.412744,-9.139442,5.869021,6.577561,6.216195,6.465345,2.114902,5.426766,-6.182327,-5.314749,-6.550361,-8.735397,3.515018,8.319293,-4.922981,8.288241,7.506147,-0.186235,-9.071559,7.179533,-7.048605,7.374519,5.366168,-7.922361,7.760154,-5.260960,7.814580,-7.294723,9.581060,-6.789739,-0.222257,-4.700422,-7.022485,-1.278095,7.444991,-0.668674,-0.330655,5.109006,-0.315959,-0.464948,-9.970279,1.202397,8.515571,7.443201,5.620227,-9.957139,9.499388,4.376917,0.721215,-6.877144,2.125565,4.719060,-3.796545,-7.795792,-0.734179,-1.825431,5.890707,-0.773152,6.510181,-2.524672,-7.493474,2.375116,4.694256,3.085252,-4.129208,8.656988,-1.482524,-0.420797,5.260747,9.691506,3.930171,2.693433,-5.762380,1.907574,9.444213,-7.346074,-7.858947,7.976995,6.693199,7.159006,9.002539,0.135134,1.985942,-4.072263,-6.392581,-0.605502,-3.667083,6.333968,2.908888,-9.076968,-2.397612,-5.741483,-4.775410,-6.019609,-8.309813,-5.915518,3.062491,3.126094,7.454863,4.222188,-3.817720,9.227094,6.301515,1.295464,3.801908,2.980893,-5.268371,-1.296024,-5.264233,-9.375167,-7.199034,-2.985308,8.547864,-4.175132,7.117226,-3.212051,3.410651,-8.710869,-8.392211,-1.822598,-4.282998,2.708438,4.985788,3.304372,8.496296,1.872688,-6.430572,2.447224,2.667344,-8.398925,4.170365,-5.777270,-4.999268,-5.941246,-4.445104,-3.431587,-5.409126,-1.396499,-1.319319,3.037234,2.516875,9.281078,-2.504092,1.981206,8.876089,6.043214,1.917276,1.119894,-2.975253,-3.540177,-6.547580,1.185616,2.305290,4.222478,-9.577546,3.488402,4.343940,1.027350,9.004138,8.043321,9.143668,3.368184,5.155063,-5.660233,-2.143206,-6.500424,-7.713056,-1.332749,1.784922,7.051838,-6.548012,-6.412971,8.847477,-9.088917,-2.786791,7.996000,-8.169960,-2.344046,-6.258939,4.452575,-4.445668,7.309908,-0.534715,-4.198441,4.076853,3.384012,-4.893042,7.744816,6.015547,-1.315916,-5.183270,3.467394,-1.789648,-3.681359,0.200759,-7.786557,1.620345,-4.227481,2.671682,-3.211824,-5.088473,-8.992594,6.786911,-3.861456,0.374653,-9.391115,2.374467,-8.773236,-3.217240,-6.083169,4.724288,4.733194,-7.371105,-5.242661,-6.676301,7.983144,-8.812697,8.855775,0.457878,-5.958135,-6.312490,-4.881261,5.284436,7.505605,8.880706,4.920016,-0.348868,-7.251473,-4.418791,-5.984742,0.286919,3.000643,-5.819030,1.365361,-0.979411,-5.301354,-7.283784,-2.051501,-9.645362,6.999941,3.166784,-4.532566,4.539120,5.307659,2.875367,-8.152592,9.295129,-1.248682,-6.844747,7.069631,2.901197,4.805550,7.449553,7.857180,-6.856570,7.963573,9.688429,6.907025,-6.583844,-0.988352,6.930232,-6.546351,-2.869341,-4.656849,-8.917820,-5.820050,7.277468,-2.340030,7.029045,-6.420275,-0.747245,-5.365909,3.158283,1.292250,-9.225989,3.275033,-8.281927,-1.149570,-9.843540,-0.023061,-3.022347,1.673968,-2.651854,-0.149760,8.533866,0.671004,6.288419,-7.331071,-8.821450,-9.620624,2.904547,-9.256423,-7.790230,7.927445,7.583911,4.949299,-4.205162,0.333970,-6.647382,-5.731022,2.717586,-6.670363,9.324598,5.711732,-4.600093,-6.356337,-6.645658,5.919243,7.957938,7.714189,-2.475664,2.488771,3.904825,-0.215766,-1.348052,-2.603589,-1.526606,-7.635026,5.015609,2.786575,-4.638985,7.346374,-1.193643,0.790152,8.824682,-9.131458,8.255899,-9.396215,0.254362,5.656494,-3.138570,0.540018,-7.202033,-8.505431,7.554563,7.972910,-1.794452,-7.212105,1.092839,-5.930796,3.696513,1.157995,-9.092907,5.820947,-7.360458,-7.393062,-1.938937,8.104070,9.533088,-0.229679,-1.551698,-5.838166,2.072349,7.741741,-0.864942,4.431138,8.261561,0.760577,2.630216,8.786015,1.492123,-1.495195,7.422479,-5.558641,1.232731,7.995303,-0.680090,-4.276479,8.732574,-2.483799,-2.870332,7.924046,-0.938444,3.973092,0.231450,5.852655,-5.294725,7.351040,-2.227680,6.107421,-4.570366,4.413994,-9.525493,-7.045237,0.879767,-9.310953,2.177473,1.065667,-0.696978,1.999981,6.517547,-9.775543,-3.943504,7.185610,2.046541,-3.266450,-7.913814,-5.244817,-1.040384,-8.409317,6.096503,0.479106,-3.062851,4.900407,3.766033,-8.064525,1.909304,8.472996,-5.225040,-6.590039,2.432280,-7.841100,-6.498431,-6.118751,0.823625,7.257465,3.740541,9.943053,7.781176,-7.389313,0.265404,-7.307425,0.809862,-1.939051,-5.838761,1.021172,-0.139744,1.682552,-0.785764,6.939902,-3.066394,2.465663,3.451468,4.634869,6.021955,3.274129,9.018451,8.774826,3.810093,-5.200678,1.292434,5.267845,3.421824,-6.259385,6.351553,-5.015809,-1.062961,7.526370,-2.127541,5.462049,4.264092,1.320055,-6.718006,9.822217,-6.411326,5.582329,-1.901811,3.966610,-2.755781,2.474548,0.874682,2.510826,2.814648,7.277737,-1.182805,2.828500,-9.046794,-9.365696,-5.055579,-7.677744,5.478000,-7.739272,8.406467,-8.925141,0.911721,2.775050,6.284729,9.706323,1.532396,-5.819433,4.892306,5.340433,-4.310742,-7.615670,-5.215038,-6.699593,-8.989071,2.838396,-1.234660,5.397438,2.238576,2.247652,-3.475222,-2.819400,1.221323,7.022333,-6.442037,-3.061324,-5.750620,3.314996,-3.251820,-7.346082,-8.716122,-6.201609,8.089392,7.661786,-8.385380,4.549272,7.931039,-9.547290,8.219074,8.317195,7.652652,-9.198077,-1.092841,-5.008269,0.129273,3.390080,-3.314206,0.744250,-2.844368,-8.285215,7.951523,6.404905,6.444011,7.095054,2.890489,2.637249,9.586516,-0.952975,8.445140,-8.100462,2.914344,6.990196,1.480139,-5.446245,3.050815,-3.706799,-2.953404,5.517606,5.726558,-0.885041,9.049703,4.019308,-8.409772,-4.140377,-0.612857,-6.979416,-9.966109,2.995743,-2.871718,5.780788,8.832558,-1.869892,2.793869,4.234170,2.127868,7.932763,0.811721,8.656222,-9.462985,-4.035022,-8.734595,8.485190,-4.449834,-7.701928,-1.596034,-2.798512,2.551489,9.222450,-6.643781,4.078297,7.935814,-6.983992,-3.482555,-6.468407,8.827919,5.910005,5.916637,-9.782157,-4.710308,4.857234,0.138499,-5.885724,-9.723261,9.283394,-3.211201,-3.546875,-8.183424,5.493642,-2.958340,0.629114,-1.356000,5.022289,3.910417,4.230396,-9.150755,-6.197831,-1.140548,-6.037050,5.851167,0.428631,3.195615,2.935548,-0.554520,-2.593783,-2.617723,-4.106235,-5.969998,-7.989723,7.334244,2.059565,-8.933155,3.984396,-1.657126,-3.177059,-4.381612,-5.067887,8.126648,1.232987,-1.227735,1.489008,5.730679,4.120796,8.121008,-9.816916,4.199796,4.815739,3.927071,-2.219922,-5.652022,4.807605,-1.747452,-8.454199,7.862174,9.543257,7.623036,-4.487233,-5.243982,9.660365,-2.682473,-9.035271,8.201577,5.951667,0.588590,9.593823,-6.623986,-3.299536,-9.606219,6.130196,-2.875240,9.971872,8.170338,-5.566702,2.499678,2.690329,0.781379,4.868895,9.624506,-4.652035,-0.361037,4.802457,-0.071404,5.111979,-7.771623,7.551446,4.803412,4.438202,-3.068482,-2.918391,9.376122,1.735201,6.582404,0.212970,-3.340638,5.989858,2.291005,7.295084,-7.995636,-7.612724,2.796207,9.811434,-5.841531,9.034875,9.478979,-3.323642,-8.907584,3.086338,-8.271809,-8.422846,-4.419570,9.607601,-9.282538,-8.003005,2.989382,-3.622872,-2.161401,2.971727,-7.238317,3.561520,-4.282594,-3.023845,-5.514438,3.755696,-8.637789,7.559394,5.922344,1.133386,6.797437,6.393975,-4.774284,-4.637840,5.840202,-2.572946,-0.694289,8.505448,2.552780,8.755017,-9.274816,9.265978,6.285785,5.384824,7.586939,-1.153015,-5.396144,-5.988844,2.127013,3.736827,-6.433923,-6.766310,-7.847041,-4.773881,6.846158,8.967704,-4.799050,1.487887,0.455228,-9.508358,3.637666,8.320837,-3.072193,-8.737215,-7.668039,1.871218,2.647768,-4.611628,3.782686,-4.956070,-4.373900,-0.985421,-0.824952,-8.907588,3.192751,-1.943401,-2.388845,-1.068268,3.317772,-7.651872,2.965293,6.470610,-7.236108,-2.075008,-7.938535,-3.560634,-8.647754,5.081768,-5.014899,-0.117046,-9.583424,-3.633444,-9.771978,-1.326221,-1.707409,-6.862543,-6.651968,-0.820484,9.096108,-7.526472,5.896612,-4.585930,-1.238707,-1.703817,-4.133381,-6.776284,-6.974302,9.217712,5.982802,-0.733363,-3.641998,4.057071,-2.544393,3.878133,-0.712622,7.215157,3.277090,5.224344,7.554247,-4.357231,-2.131833,2.542603,-9.699548,-7.224857,-0.162567,9.709642,8.364589,0.858449,-0.990331,6.063689,-5.983471,4.081756,-5.991537,8.482757,-9.579975,4.354519,-5.402061,7.806740,6.866656,0.222407,6.481747,9.507331,4.740650,-8.756928,3.898055,8.910646,9.276320,5.100875,3.539479,2.295062,1.213489,4.430280,0.569775,-2.405887,-8.766491,-6.073142,-0.264097,-5.523529,-1.913777,1.228864,-7.454991,-0.080029,0.308773,2.669925,-9.285007,6.984036,-2.870489,-0.611181,0.317367,-8.389614,-1.873266,3.844834,-9.404355,-2.794965,5.989377,2.673426,-0.598288,7.059216,7.757940,4.647265,7.151625,8.802641,6.711468,-3.699719,-5.759187,-1.209026,1.980503,4.568700,6.149729,1.482407,-9.312540,-3.215361,-1.888088,-6.307585,-8.998228,5.997366,-5.812865,1.331161,-5.308017,4.622974,0.173255,5.471809,4.571509,-3.179833,4.055343,0.032282,-1.846314,-8.360167,3.697151,4.752196,-3.718123,-2.506073,3.677828,-4.046637,0.365264,3.340582,9.641904,9.091648,8.259709,6.072542,7.241452,-0.706893,-3.861917,-1.155518,-3.261420,-5.011999,1.322510,1.203335,-1.154038,-7.303839,2.258141,-5.340140,9.172984,-6.070032,-6.974529,5.591884,-1.777745,4.992668,-7.082545,8.249025,5.073430,-0.061173,-9.157832,-0.540154,9.680991,-0.446081,-3.486612,-9.131381,-9.177800,-6.077860,-6.306617,4.444510,-8.980192,-7.339769,-9.490153,8.767304,4.431080,-8.262419,2.778898,-9.481154,-3.680798,-5.070484,-6.387419,-4.020496,0.520699,3.674291,-8.015585,-8.485253,2.436300,6.815588,-9.572882,-7.836698,-5.828998,7.001959,6.460773,5.607099,-3.886557,-5.589439,-1.775647,-2.454247,0.237363,0.091208,-8.541717,-6.753855,-7.585334,0.084572,-7.770643,-7.825825,9.814892,7.725052,-7.777879,-6.512502,-2.821624,9.047695,2.597558,-8.337605,8.669635,-4.695008,3.197398,3.147283,-3.862310,4.780356,-3.183373,-4.487992,8.215791,-4.942520,-6.046799,6.405801,5.622662,3.802163,-4.685256,-5.882793,6.361979,0.382812,2.395837,0.646877,8.170824,2.789228,-6.150891,8.354801,2.587607,7.099940,-9.576852,-7.461821,7.639212,-0.950056,4.305982,4.059161,7.991146,2.325769,-9.620359,0.741234,2.063342,9.538051,-2.679370,-3.724562,0.369732,6.104511,-5.104529,6.060374,8.063761,9.248983,-3.759692,2.517813,2.731431,0.960527,0.604538,2.827065,4.794240,3.219492,-1.848694,6.196304,2.807430,6.240346,-1.733204,-0.690799,3.656778,-5.263383,-9.604473,9.710814,-5.499863,2.862250,8.448708,6.419835,-9.491227,-4.091699,-5.460059,-1.675184,-0.537335,0.488169,-7.799846,-9.392540,3.384272,-0.706697,4.514103,4.533932,-9.931750,4.615215,2.786960,-5.883476,3.746828,-3.322870,-0.015030,-8.620266,1.885537,9.621959,4.432750,3.385190,-5.781930,-1.622639,6.046199,4.334450,7.618881,-3.642948,6.791280,-1.003614,8.342470,-0.254872,9.142166,0.903170,-7.258716,-2.311264,-6.265058,-9.178048,5.366229,-6.435339,-6.769611,-7.052197,4.973642,8.876309,8.659786,9.856993,-5.726285,-1.699435,-2.119163,-9.102489,-5.287203,-7.928343,-0.432091,4.726445,-0.049614,6.356478,-4.313144,-3.202444,-8.293880,-8.407054,4.432886,-4.086333,-5.518188,5.719254,-9.869621,4.325392,-3.546080,-0.529860,9.852804,8.312571,8.362242,-4.169571,-5.470272,1.652937,-4.237425,4.022950,-1.040745,-0.201607,-7.404414,8.204007,9.535125,-9.226407,7.027451,0.066035,-8.893064,-4.101119,9.853340,7.042229,2.754636,-9.825711,2.943740,0.873068,3.309835,-1.175092,1.195822,1.138683,-5.093076,-1.272526,-6.560242,-2.786646,-9.884492,-0.928276,-9.746568,-7.358503,0.536866,8.384139,-4.357845,-7.371793,-2.662470,9.410410,-2.709379,5.892057,-4.775929,-3.976397,0.880993,-4.013447,1.885828,3.349745,-3.435972,9.086944,-2.652024,-8.071582,6.249275,-5.287677,5.138233,5.990841,-4.224741,1.836968,1.230775,1.977377,-7.139316,-5.381794,7.842878,3.832374,4.564679,8.426154,-3.907920,-1.774719,-9.049900,8.879560,5.438501,6.120830,4.008903,-1.950203,9.705597,1.341998,9.663520,7.900683,7.331661,8.528346,-7.418339,-4.611526,-7.975474,-4.985042,-1.916355,9.644084,0.771241,1.107235,8.230937,4.158255,-6.954515,-7.615330,-5.593383,-8.889562,9.740002,8.504346,-4.325808,-9.864212,-2.928309,5.698659,-7.817149,-9.471825,1.747058,6.389639,-8.611258,6.584486,9.577916,-8.450010,-1.702379,-2.715731,-9.491225,4.166731,7.322147,-7.544356,-7.395464,-3.544453,-6.135337,-4.972982,0.779876,-2.418871,-8.724345,-9.743028,7.725663,-8.456412,3.194854,8.265565,-5.898638,-1.327411,-2.137662,8.757448,-7.511584,-4.948181,7.617561,-4.605361,-8.309021,-6.416894,5.233094,-6.825025,1.758075,-1.433837,6.599307,3.247152,-0.099300,-8.396259,-0.639746,3.555506,7.021920,1.442917,4.216126,0.340045,-2.902808,-4.752679,-5.946412,-2.133969,3.514656,-0.284506,5.700667,-5.305842,8.754543,-5.605131,2.876452,-6.491978,6.218969,9.607396,-1.902433,-9.006766,-4.495702,-9.097941,-8.555695,-2.049464,7.581772,-6.132828,-8.835128,-7.243986,5.943816,7.153536,-6.361252,-3.956601,1.786503,-3.934337,-7.818703,-1.175688,-6.851693,-2.565484,-9.910809,-4.772685,8.980307,-9.647536,-8.854714,-9.274189,9.744566,-4.475063,6.543658,-8.050509,-2.122672,-4.246779,3.216678,9.043913,1.074613,-8.372125,-9.585336,0.229201,-8.535920,-0.792687,-9.983962,-9.979032,-3.870660,-3.894399,3.854054,6.683428,4.946644,3.841562,-4.848337,-5.081963,-9.072146,0.342956,-9.249132,-3.336596,-2.819467,2.983075,4.865710,9.254283,-8.194645,-6.245573,-0.355170,7.971681,0.137500,-7.900047,1.789287,-7.445770,-7.813577,-6.130485,-2.479362,1.215742,0.842213,-2.554869,-9.017727,3.000113,1.171884,6.741145,3.509867,2.540137,5.377757,-4.779168,3.525168,-6.134352,6.557171,-4.531827,3.873351,-3.972645,-8.561599,-1.226805,-4.970058,7.208921,8.898175,4.001078,7.001810,4.923275,0.762958,8.401894,-7.872379,-5.699242,-2.803488,-3.519324,-2.377857,1.530890,6.302416,4.913022,2.143180,6.611967,4.109331,5.075308,3.987684,8.736799,-2.110074,0.578210,-3.504121,-5.779703,-6.626083,7.581698,-0.027413,2.679669,-9.924858,3.785663,9.596402,-5.806299,-4.995256,7.951012,-0.015790,-2.640505,0.852328,-8.562828,6.318689,1.423186,6.753411,-9.922946,3.371451,9.485344,-6.262427,8.352375,6.404986,9.888230,1.310519,5.344202,8.473401,-6.082225,-8.871644,7.727793,-8.412036,4.942904,6.703502,0.613245,-9.868047,-4.109574,7.185385,-2.631859,6.692871,-2.263048,2.877729,-6.101527,0.492937,4.429932,9.827743,3.342081,0.503451,0.413761,-6.004156,2.446613,7.816968,-0.071375,4.949276,9.417592,-0.904041,3.815644,-1.965042,-1.319583,0.756023,1.126703,-9.022977,-7.179901,3.969319,-8.549708,-1.141064,-0.266388,5.502703,-4.764400,-4.862192,0.318912,-7.098874,-7.380666,2.201486,-4.966377,-0.712512,8.497186,6.841298,7.570020,-6.553465,-0.619118,5.256407,-3.518990,7.668805,-3.756551,5.888725,-5.713142,-2.034564,-1.074864,-7.275793,-5.552371,-3.855409,3.300990,6.131817,-6.375016,8.946535,-7.357508,-5.107327,4.755654,-0.984664,7.492506,-1.767149,5.461188,-7.720145,-5.242547,-2.082033,8.035488,-2.060101,-7.677285,9.785590,0.451598,-7.719911,-1.649643,8.598030,-4.687087,4.836137,0.157556,-8.497040,-3.310318,-4.354628,1.150129,-3.353553,3.908141,1.145751,-5.655166,-7.866830,7.047135,-7.966851,4.733712,-9.739334,8.941945,8.235769,1.993161,1.262851,-0.518518,-3.292511,-9.850177,5.326568,9.753746,-3.737884,0.455291,-7.665622,0.809029,-3.825939,-1.193008,-5.107016,-6.178545,-9.497405,8.352650,-5.623945,5.089829,6.422817,8.294513,7.760410,-6.992626,-0.885417,-3.203594,-9.067548,8.196420,4.151212,2.219205,1.299849,2.166000,7.932003,0.869882,2.622411,-2.855814,4.752534,5.266082,5.600036,-5.711545,1.881933,-8.350765,-6.380851,8.708863,0.824350,8.904029,-3.462914,-7.955702,-6.647945,1.569917,-6.513906,-8.033693,0.060613,-1.554126,6.515907,7.252487,2.985938,5.160395,1.756625,1.135657,4.303443,-0.152271,-8.021165,-4.195457,-2.412267,-6.570865,5.808137,-9.314669,-2.580568,6.090571,7.916617,-4.808883,-4.068867,-7.267213,-3.161221,-8.021193,4.644315,-8.365567,2.423808,-4.718628,-6.223331,-9.755351,4.652424,6.494325,8.199777,-9.708887,5.131706,-3.647894,-4.824663,1.849729,-8.150248,-5.181589,-6.705816,4.496231,8.774648,-9.379746,-0.152797,-5.494451,1.684851,3.899225,-0.387238,-9.783521,8.844998,-3.035558,3.342095,-6.427541,8.170645,7.138599,6.474444,-8.894713,-1.970820,6.218483,8.007712,0.612582,3.361942,-7.447175,-0.176585,3.458177,0.557960,7.180647,0.566505,-5.285138,-5.828262,6.382330,4.651200,9.516178,-7.517900,-7.600145,-6.940461,-5.168303,9.547537,6.919324,8.499831,6.789753,-9.627408,-3.384629,-5.878309,3.256725,-5.257332,7.003666,-5.669051,-0.378436,2.114052,-5.886699,-9.812678,5.349102,6.707776,4.082174,0.651183,8.330474,8.013195,5.820839,1.206071,-0.773586,0.793438,5.340409,-3.796128,-6.412090,-9.900633,9.676548,-3.084610,-6.400610,-0.407638,-3.828272,-2.122807,4.293957,1.112740,-4.781229,0.992500,7.011957,-9.904619,-7.282968,-3.923244,-1.160491,-3.431461,0.741514,-4.868858,-6.375853,2.068647,-8.673557,9.515700,6.667719,-8.419139,7.695987,-2.433955,0.866944,9.848705,-6.570919,-4.055066,-6.688243,-2.348842,7.104993,-2.743674,1.462145,9.316838,4.191613,-1.585379,7.153340,-2.911576,-1.611026,1.026562,1.326958,-5.800127,-5.245165,-4.624491,0.585689,-0.929230,4.185798,-5.439134,-7.377938,-5.838058,-9.552337,-3.526050,-6.329022,-1.609531,-1.171709,-7.215318,-6.749290,2.489487,0.501636,-5.476202,-3.356955,-1.936822,3.215259,2.839267,-2.091923,4.174468,-8.485107,-0.895813,0.128208,0.378262,9.116452,5.184678,-6.765390,-8.837079,5.433022,-4.531812,-5.333186,0.032946,-7.879754,9.308258,6.320783,4.146143,0.604864,-3.641550,9.347012,-2.912535,6.781689,-0.772313], dtype = "float64")#candidate|8568|(2304,)|const|float64
call_8567 = relay.TupleGetItem(func_8118_call(relay.reshape(const_8568.astype('float64'), [768, 3])), 2)
call_8569 = relay.TupleGetItem(func_8120_call(relay.reshape(const_8568.astype('float64'), [768, 3])), 2)
output = relay.Tuple([call_8537,call_8556,const_8557,call_8567,const_8568,])
output2 = relay.Tuple([call_8538,call_8558,const_8557,call_8569,const_8568,])
func_8600 = relay.Function([], output)
mod['func_8600'] = func_8600
mod = relay.transform.InferType()(mod)
mutated_mod['func_8600'] = func_8600
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8600_call = mutated_mod.get_global_var('func_8600')
call_8601 = func_8600_call()
output = call_8601
func_8602 = relay.Function([], output)
mutated_mod['func_8602'] = func_8602
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8600_call = mod.get_global_var('func_8600')
func_8602_call = mutated_mod.get_global_var('func_8602')
call_8615 = relay.TupleGetItem(func_8600_call(), 2)
call_8616 = relay.TupleGetItem(func_8602_call(), 2)
func_4869_call = mod.get_global_var('func_4869')
func_4871_call = mutated_mod.get_global_var('func_4871')
call_8620 = relay.TupleGetItem(func_4869_call(), 2)
call_8621 = relay.TupleGetItem(func_4871_call(), 2)
func_7594_call = mod.get_global_var('func_7594')
func_7595_call = mutated_mod.get_global_var('func_7595')
call_8622 = func_7594_call()
call_8623 = func_7594_call()
output = relay.Tuple([call_8615,call_8620,call_8622,])
output2 = relay.Tuple([call_8616,call_8621,call_8623,])
func_8632 = relay.Function([], output)
mod['func_8632'] = func_8632
mod = relay.transform.InferType()(mod)
mutated_mod['func_8632'] = func_8632
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8632_call = mutated_mod.get_global_var('func_8632')
call_8633 = func_8632_call()
output = call_8633
func_8634 = relay.Function([], output)
mutated_mod['func_8634'] = func_8634
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6234_call = mod.get_global_var('func_6234')
func_6236_call = mutated_mod.get_global_var('func_6236')
call_8650 = relay.TupleGetItem(func_6234_call(), 1)
call_8651 = relay.TupleGetItem(func_6236_call(), 1)
output = call_8650
output2 = call_8651
func_8652 = relay.Function([], output)
mod['func_8652'] = func_8652
mod = relay.transform.InferType()(mod)
output = func_8652()
func_8653 = relay.Function([], output)
mutated_mod['func_8653'] = func_8653
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8670 = relay.var("var_8670", dtype = "float64", shape = (1, 4, 12))#candidate|8670|(1, 4, 12)|var|float64
uop_8671 = relay.acosh(var_8670.astype('float64')) # shape=(1, 4, 12)
bop_8678 = relay.floor_mod(uop_8671.astype('float64'), relay.reshape(var_8670.astype('float64'), relay.shape_of(uop_8671))) # shape=(1, 4, 12)
uop_8691 = relay.sinh(uop_8671.astype('float64')) # shape=(1, 4, 12)
output = relay.Tuple([bop_8678,uop_8691,])
output2 = relay.Tuple([bop_8678,uop_8691,])
func_8697 = relay.Function([var_8670,], output)
mod['func_8697'] = func_8697
mod = relay.transform.InferType()(mod)
mutated_mod['func_8697'] = func_8697
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8698 = relay.var("var_8698", dtype = "float64", shape = (1, 4, 12))#candidate|8698|(1, 4, 12)|var|float64
func_8697_call = mutated_mod.get_global_var('func_8697')
call_8699 = func_8697_call(var_8698)
output = call_8699
func_8700 = relay.Function([var_8698], output)
mutated_mod['func_8700'] = func_8700
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4679_call = mod.get_global_var('func_4679')
func_4681_call = mutated_mod.get_global_var('func_4681')
call_8702 = relay.TupleGetItem(func_4679_call(), 2)
call_8703 = relay.TupleGetItem(func_4681_call(), 2)
func_8632_call = mod.get_global_var('func_8632')
func_8634_call = mutated_mod.get_global_var('func_8634')
call_8704 = relay.TupleGetItem(func_8632_call(), 0)
call_8705 = relay.TupleGetItem(func_8634_call(), 0)
func_5504_call = mod.get_global_var('func_5504')
func_5507_call = mutated_mod.get_global_var('func_5507')
const_8727 = relay.const([-6.628760,-1.785448,-7.768832,3.356172,-3.506007,-8.085462,-8.100857,0.100203,-1.455426,-6.124324,-1.066631,-2.060607,0.065022,-4.535049,8.651726,2.016173,-5.712571,3.155293,6.649114,-8.449308,-4.532379,6.118738,-6.738532,6.032218,-0.174111,8.997635,2.640537,-7.573751,6.724783,7.549181,9.818213,-4.046423,-8.794510,-0.888557,-3.015382,2.470697,6.189670,-7.588325,-8.063700,-5.990981,0.071808,3.280381,8.570003,5.347626,-9.736912,-2.899822,0.028253,3.711024,-8.592164,-4.792342,-1.875655,2.665508,-1.296502,-7.991018,8.886969,0.050924,-0.277174,3.976962,-3.344515,-5.298602,-3.645950,0.161627,2.980647,4.398436,-0.598456,5.299254,-1.549481,1.970005,-9.211283,6.176719,-8.476589,-0.177642,5.281758,1.533333,-4.185290,-7.480388,-1.954677,-3.955171,-4.676130,6.970165,3.655969,-1.486613,6.111996,-7.191325,9.242382,3.082548,-5.879647,-9.317183,2.242821,-3.670393,1.707604,-4.252485,-9.592765,9.780715,2.974023,3.356914,5.763770,-2.996093,5.761243,-1.903285,-8.938534,3.837786,1.627046,-4.499898,2.031535,-3.607997,9.609599,-1.979120,-3.345443,-8.071493,-0.899260,-9.800911,0.845374,-8.850543,-2.867302,8.141037,-5.149130,8.686876,-1.065992,-3.261344,-9.127596,-1.376527,-5.505585,2.340666,0.573586,-9.005876,-6.892224,8.507513,0.402395,-6.926860,1.490461,-6.645184,-6.169437,4.558822,3.803503,-2.014602,4.709469,9.001531,9.435293,-8.088435,-5.823976,-9.828778,6.555872,7.645930,9.729571,-1.709306,3.431114,-7.025489,3.310525,5.726180,-9.963653,-5.176484,-1.800381,6.580775,6.575087,-0.535060,-9.472503,-0.622364,8.496201,-5.745880,3.863886,3.098507,8.416852,7.542165,3.324108,2.747537,-0.773641,5.218857], dtype = "float64")#candidate|8727|(168,)|const|float64
const_8728 = relay.const([-6,2,4,4,-4,5,-4,-9,-4,-3,5,10,-3,1,3,-1,-7,-4,-4,-10,-5,-4,4,7,10,10,10,-5,-6,-6,-6,-10,10,4,2,4,-1,-4,2,2,1,-7,-3,-4,1,-8,9,-10,9,4,-9,9,-5,-4,4,10,9,6,2,-1,-4,-9,-6,-3,-4,8,-5,3,10,8,-5,-1,6,8,-1,-8,-9,-9,6,4,9,3,-9,-4,8,-4,10,9,5,3,-6,3,8,2,4,-3,-8,-6,7,-7,-4,7,-8,-2,-4,1,6,7,5,-9,7,-1,10,-3,9,-3,-1,-1,-9,-4,-7,-4,8,-8,-3,2,-9,-5,2,10,-8,-8,-5,9,-1,-6,-7,-3,2,-2,6,-4,-8,-8,7,-4,10,3,9,7,5,10,2,9,-3,-8,6,8,1,4,1,-10,-8,-4,4,-8,-5,-1,10,-2,2,5,-1,1,8,-7,-3,-10,1,9,7,4,-8,2,6,2,-5,-5,-2,8,4,-9,-6,8,-2,3,-8,3,4,3,-9,-8,-4,1,-1,-3,6,-2,10,-10,-8,-4,-1,-2,4,5,-10,8,-5,-7,-9,1,-2,-10,2,-7,-4,-9,-9,2,-6,-7,-7,8,7,10,6,3,-6,-10,-4,1,7,-7,-2,-10,-3,3,-3,3,4,5,-5,-8,3,1,5,7,3,8,10,-4,-6,-4,7,6,1,3,-10,-8,1,10,1,-9,1,2,7,6,-4,-10,-8,-4,10,6,10,-4,-3,-6,4,-1,-3,8,-8,3,7,-2,-4,5,-6,5,-6,7,-5,-4,-10,-4,5,-5,8,-4,3,-1,4,10,-8,-6,-4,-4,7,8,2,-10,-5,1,-3,10,2,-3,-9,4,8,4,2,2,5,-7,-3,-5,2,-2,10,10,-5,-6,-4,4,2,-5,-7,4,-7,10,-7,-8,8,3,4,-9,6,3,-8,3,6,-4,7,6,8,3,10,6,1,-7,-5,-4,-4,1,6,9,4,-7,-1,4,-1,-7,-8,9,2,-4,4,8,-7,-7,-4,6,-10,-8,10,-2,-7,-9,10,4,-6,1,-8,-8,-7,-9,3,-9,-2,6,7,10,5,-10,-1,-10,-7,-9,-9,2,-3,-9,6,-1,-4,-10,-5,6,-10,-8,5,8,-9,6,5,8,-9,-4,4,3,2,-9,-4,6,5,6,2,-1,2,-2,5,5,-6,1,2,-8,-9,-9,3,-8,-1,-6,10,-5,7,9,5,8,-3,-1,-4,9,-5,-6,-6,-7,-9,-10,-10,-1,-10,1,-4,-9,7,-2,-1,4,-9,-6,-5,4,6,2,8,-5,6,8,-4,-9,-8,-1,1,-5,-4,-7,-4,2,6,-5], dtype = "int8")#candidate|8728|(512,)|const|int8
call_8726 = relay.TupleGetItem(func_5504_call(relay.reshape(const_8727.astype('float64'), [1, 168]), relay.reshape(const_8728.astype('int8'), [512,]), ), 0)
call_8729 = relay.TupleGetItem(func_5507_call(relay.reshape(const_8727.astype('float64'), [1, 168]), relay.reshape(const_8728.astype('int8'), [512,]), ), 0)
output = relay.Tuple([call_8702,call_8704,call_8726,const_8727,const_8728,])
output2 = relay.Tuple([call_8703,call_8705,call_8729,const_8727,const_8728,])
func_8731 = relay.Function([], output)
mod['func_8731'] = func_8731
mod = relay.transform.InferType()(mod)
output = func_8731()
func_8732 = relay.Function([], output)
mutated_mod['func_8732'] = func_8732
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8295_call = mod.get_global_var('func_8295')
func_8296_call = mutated_mod.get_global_var('func_8296')
call_8748 = relay.TupleGetItem(func_8295_call(), 0)
call_8749 = relay.TupleGetItem(func_8296_call(), 0)
var_8754 = relay.var("var_8754", dtype = "float32", shape = (10, 2, 15))#candidate|8754|(10, 2, 15)|var|float32
bop_8755 = relay.not_equal(call_8748.astype('bool'), relay.reshape(var_8754.astype('bool'), relay.shape_of(call_8748))) # shape=(10, 2, 15)
bop_8758 = relay.not_equal(call_8749.astype('bool'), relay.reshape(var_8754.astype('bool'), relay.shape_of(call_8749))) # shape=(10, 2, 15)
func_5782_call = mod.get_global_var('func_5782')
func_5783_call = mutated_mod.get_global_var('func_5783')
call_8760 = func_5782_call()
call_8761 = func_5782_call()
func_7378_call = mod.get_global_var('func_7378')
func_7382_call = mutated_mod.get_global_var('func_7382')
var_8769 = relay.var("var_8769", dtype = "int32", shape = (704,))#candidate|8769|(704,)|var|int32
var_8770 = relay.var("var_8770", dtype = "float32", shape = (96,))#candidate|8770|(96,)|var|float32
const_8771 = relay.const([[9.736487,-8.041864,3.881617,-3.004929,2.572922,-1.643293,3.125587,9.749827,-9.064455,0.616621,2.373965,0.557346,2.976019,5.224681,-2.585711,4.054376,-2.296844,-0.583427,6.657587,6.569047,-6.021706,9.746011,3.779492,-9.649448,-2.865663,4.353254,2.408452,-2.257417,-5.530969,-3.412119,-5.399357,-4.954242,-4.580503,-6.010088,0.145141,-2.832506,3.637306,2.084649,5.207891,-6.797061,7.799468,5.041157,-0.421875,-8.204061,9.342391,7.511050,-6.630829,-9.899553,0.223040,3.002020,2.151004,-9.182024,1.099958,0.204423,2.506322,-4.611499,-6.981982,8.926434,-4.966129,9.671037,8.928056,2.426269,-6.373010,-1.125654,-8.916371,-1.515710,8.032690,-5.951984,2.121042,8.847671,-1.101979,3.134084,0.489307,8.804940,-5.887599,7.925056,-4.237846,-6.656322,6.214670,-0.392830,-9.992866,7.330553,1.484071,-4.186767,8.945058,-1.963504,2.879317,-7.571865,-7.872086,-3.958300,-9.275828,-5.647350,-1.350407,1.266715,4.889146,8.344521,4.372992,-6.197416,7.606441,7.623061,-0.564154,-0.277700,4.519469,4.990185,-9.466616,0.002466,7.448275,4.403743,-5.902618,9.192401,-7.100780,1.268219,9.656283,1.036129,-3.819060,-7.227679,-9.172680,-2.485668,4.686214,5.022644,-6.164500,7.911428,7.621836,9.658964,4.360115,2.682207,-8.175391,2.370432,-3.036095,-9.217660,5.257411,-2.067862,0.699315,-7.050154,-9.838530,-4.020967,-0.496027,-5.830962,9.336417,1.501444,8.363939,-9.567508,5.153579,2.749951,-0.409541,-5.477035,-2.844833,4.507616,3.762894,8.074599,-5.086644,-3.897642,9.728807,-8.342955,6.088592,7.436682,-4.473671,-8.077439,-9.994437,-2.443935,0.677993,-7.803792,3.858188,2.551031,6.028005,-1.877538,-4.523531,-1.652570,1.322522,-6.274903,-9.083661,7.881824,-2.817284,-4.063699,-9.132638,4.344799,0.624037,3.690688,-7.475704,-5.180400,8.905210,3.339187,6.966389,0.742253,-1.409339,0.657373,-1.852239,8.165952,-2.464469,6.235281,-0.157649,-1.928273,-9.561388,-5.246171,-1.132721,2.987182,0.589249,-0.869251,-2.695498,-8.305662,8.283901,-4.151843,-3.601022,-6.829007,7.295247,9.048132,5.953469,-4.569886,-5.863808,-8.173825,2.098895,-8.466576,-4.862616,1.024002,5.197072,3.345659,-8.212022,-8.098859,8.905027,4.370624,-8.368900,9.440596,9.850242,1.371032,-4.575512,-7.138662,9.263814,2.705512,6.150495,6.363934,-3.976646,-0.013538,-5.500809,9.270209,5.432000,-1.932388,-0.290904,5.754175,0.083535,9.026830,-8.298452,6.732524,-6.793397,9.981660,-6.076359,-0.197041,1.358466,1.871979,6.904682,-5.995622,4.314487,-4.569553,-0.927561,7.560471,3.472032,7.203150,4.396000,1.679040,5.188363,1.071829,1.709659,-0.248762,-0.680781,-8.550403,8.181897,1.384158,-1.256286,-2.110440,5.955644,-6.118653,-4.234917,6.697291,9.659259,3.102503,6.976907,-0.030735,2.308592,-5.585920,-7.268871,9.765621,7.041189,-3.455783,0.615829,-5.372790,7.920963,1.025449,-0.896135,7.799930,5.555780,2.459880,5.831067,-0.964867,-3.427702,9.679329,7.698172,-9.355584,8.989177,-3.539902,3.385681,0.932225,-6.538041,-0.005325,3.188452,-8.520150,2.437205,-1.424280,1.088686,9.816432,9.865121,-9.323551,3.590572,6.922889,1.448463,6.101069,-2.338335,3.558597,1.956947,3.711741,5.175735,-7.205513,9.992238,-9.610246,1.017379,8.904704]], dtype = "float32")#candidate|8771|(1, 324)|const|float32
call_8768 = relay.TupleGetItem(func_7378_call(relay.reshape(var_8769.astype('int32'), [4, 16, 11]), relay.reshape(var_8770.astype('float32'), [96,]), relay.reshape(const_8771.astype('float32'), [324,]), ), 1)
call_8772 = relay.TupleGetItem(func_7382_call(relay.reshape(var_8769.astype('int32'), [4, 16, 11]), relay.reshape(var_8770.astype('float32'), [96,]), relay.reshape(const_8771.astype('float32'), [324,]), ), 1)
uop_8776 = relay.acosh(var_8769.astype('float32')) # shape=(704,)
output = relay.Tuple([bop_8755,call_8760,call_8768,var_8770,const_8771,uop_8776,])
output2 = relay.Tuple([bop_8758,call_8761,call_8772,var_8770,const_8771,uop_8776,])
func_8787 = relay.Function([var_8754,var_8769,var_8770,], output)
mod['func_8787'] = func_8787
mod = relay.transform.InferType()(mod)
mutated_mod['func_8787'] = func_8787
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8787_call = mutated_mod.get_global_var('func_8787')
var_8789 = relay.var("var_8789", dtype = "float32", shape = (10, 2, 15))#candidate|8789|(10, 2, 15)|var|float32
var_8790 = relay.var("var_8790", dtype = "int32", shape = (704,))#candidate|8790|(704,)|var|int32
var_8791 = relay.var("var_8791", dtype = "float32", shape = (96,))#candidate|8791|(96,)|var|float32
call_8788 = func_8787_call(var_8789,var_8790,var_8791,)
output = call_8788
func_8792 = relay.Function([var_8789,var_8790,var_8791,], output)
mutated_mod['func_8792'] = func_8792
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8731_call = mod.get_global_var('func_8731')
func_8732_call = mutated_mod.get_global_var('func_8732')
call_8828 = relay.TupleGetItem(func_8731_call(), 0)
call_8829 = relay.TupleGetItem(func_8732_call(), 0)
func_1923_call = mod.get_global_var('func_1923')
func_1927_call = mutated_mod.get_global_var('func_1927')
var_8833 = relay.var("var_8833", dtype = "float32", shape = (270,))#candidate|8833|(270,)|var|float32
var_8834 = relay.var("var_8834", dtype = "int8", shape = (512,))#candidate|8834|(512,)|var|int8
call_8832 = relay.TupleGetItem(func_1923_call(relay.reshape(var_8833.astype('float32'), [9, 5, 6]), relay.reshape(var_8834.astype('int8'), [512,]), ), 4)
call_8835 = relay.TupleGetItem(func_1927_call(relay.reshape(var_8833.astype('float32'), [9, 5, 6]), relay.reshape(var_8834.astype('int8'), [512,]), ), 4)
output = relay.Tuple([call_8828,call_8832,var_8833,var_8834,])
output2 = relay.Tuple([call_8829,call_8835,var_8833,var_8834,])
func_8839 = relay.Function([var_8833,var_8834,], output)
mod['func_8839'] = func_8839
mod = relay.transform.InferType()(mod)
var_8840 = relay.var("var_8840", dtype = "float32", shape = (270,))#candidate|8840|(270,)|var|float32
var_8841 = relay.var("var_8841", dtype = "int8", shape = (512,))#candidate|8841|(512,)|var|int8
output = func_8839(var_8840,var_8841,)
func_8842 = relay.Function([var_8840,var_8841,], output)
mutated_mod['func_8842'] = func_8842
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8922 = relay.var("var_8922", dtype = "float64", shape = (12, 8, 14))#candidate|8922|(12, 8, 14)|var|float64
uop_8923 = relay.log10(var_8922.astype('float64')) # shape=(12, 8, 14)
uop_8929 = relay.asinh(uop_8923.astype('float32')) # shape=(12, 8, 14)
bop_8935 = relay.maximum(uop_8929.astype('uint16'), relay.reshape(uop_8923.astype('uint16'), relay.shape_of(uop_8929))) # shape=(12, 8, 14)
func_5849_call = mod.get_global_var('func_5849')
func_5851_call = mutated_mod.get_global_var('func_5851')
call_8954 = relay.TupleGetItem(func_5849_call(), 0)
call_8955 = relay.TupleGetItem(func_5851_call(), 0)
uop_8968 = relay.sin(uop_8929.astype('float64')) # shape=(12, 8, 14)
func_1923_call = mod.get_global_var('func_1923')
func_1927_call = mutated_mod.get_global_var('func_1927')
const_8974 = relay.const([[2.638442,-2.359699,-8.219215,0.098489,-4.428347,6.208791,-9.966972,-8.562193,3.986309,2.585912,-3.339032,5.950783,-6.808689,6.343183,-5.882348,6.343843,6.082372,4.023692,2.947021,-0.840501,-6.123867,-3.261457,-6.804930,-4.751373,-0.506901,3.740239,-6.151633,-1.319950,8.768642,3.621260,-0.992661,1.877022,-8.370088,7.602620,0.231666,8.293291,6.599843,3.465723,6.073061,5.391602,8.835946,-6.389390,8.202016,1.836293,-1.804859,4.421109,9.776056,-1.243567,2.863427,-9.403057,-9.258270,-7.817853,6.095766,9.486981,-9.155429,-5.412842,8.950313,2.594099,1.826266,7.889123,-1.095527,-1.234990,9.201748,5.280708,-2.582548,-8.344004,-5.690857,5.267738,-5.744524,-5.459730,0.225352,-1.221932,3.371828,-7.146225,-0.928000,3.741243,-9.261044,3.774826,-5.845318,-7.760840,-6.759350,9.861740,-5.060706,-7.787680,-2.413157,5.721772,-0.275039,-8.345364,3.431449,-6.206057,4.428461,-9.572067,-8.194848,1.088772,4.029378,8.093447,-8.976081,-2.852316,1.926823,6.175666,8.447617,-7.390500,3.530828,1.680387,5.669640,-4.084454,3.192281,-3.641096,-6.202084,1.031470,2.042261,1.556572,8.829593,-2.410705,7.501530,-5.463298,-4.796757,-3.530528,-8.690027,1.357682,6.298045,-1.453336,-3.075719,-3.684027,-0.619940,-3.607556,9.615544,-6.026946,3.341206,6.805753,-3.131018,2.558542,-4.248397,-0.438431,-1.372790,-8.495053,-5.927037,-9.589024,8.060487,6.747283,-1.067582,-4.191645,-9.043820,1.259972,0.544424,-8.706771,-5.252956,8.651444,9.447889,1.621396,8.073716,6.896683,-5.828947,-0.434258,4.771257,-6.411819,-9.843319,6.506924,7.909385,-9.175672,8.275917,-1.634352,9.612554,5.185850,-7.480762,-2.477748,-0.410887,3.927358,2.122725,6.368700,3.557033,5.890392,-2.781276,-7.542982,7.330088,-7.200304,3.566710,-2.196092,-3.348040,0.981580,6.502336,-2.833822,-5.998211,-9.187795,-6.668614,-6.586985,3.423352,1.870393,-1.916876,8.786510,-4.570231,-1.464160,2.728893,-2.967339,-1.936686,-2.084860,7.408771,-3.894279,-7.940454,-0.849273,-5.678674,-5.866560,-3.795072,6.130279,-1.674431,-4.879424,-3.090432,-4.627519,8.054867,-9.248444,7.693783,7.135277,5.139394,-0.199525,0.497811,-3.935906,4.383515,4.228306,-7.211072,-7.899569,-3.087665,-3.921027,2.239373,-0.116208,4.470780,0.096462,2.578312,-4.673010,-4.038988,-9.069808,5.912985,9.767870,2.539306,-4.353815,8.315795,-1.312456,9.473560,-7.043289,-9.100429,6.883576,7.086510,-1.603740,-7.264711,-5.417914,2.818337,-6.195105,9.587450,9.572755,-1.176919,7.124298,-8.088552,5.110423,-7.037341,-3.472653,-7.054197,-1.302478,-8.138092,-8.788151,0.545014,6.766569,5.283884,8.958495,0.458587,-6.078324,-4.318855,0.519783,9.672308,-1.073209,8.596158,-9.753463]], dtype = "float32")#candidate|8974|(1, 270)|const|float32
const_8975 = relay.const([-5,8,7,-5,-3,-3,-4,9,-8,-4,-8,-5,-9,9,7,-9,10,-8,7,6,-4,4,-9,-10,5,10,-4,-4,-9,-4,3,-9,-3,10,10,-7,-4,-2,3,-10,7,2,4,4,-10,-10,-2,-4,7,4,-1,-2,3,7,-6,-4,4,-4,-3,4,5,-6,4,-1,-5,8,7,10,4,5,2,-4,-9,-7,-7,6,6,8,-2,-2,-5,3,-2,3,8,-7,9,-9,10,-1,-8,10,6,5,-8,-5,9,6,-10,-9,-6,1,10,4,-7,-8,9,-10,-5,-3,3,-9,-7,-6,-3,-5,3,-4,5,2,4,-6,7,10,-10,8,-4,-6,9,5,-6,1,-6,2,-7,-3,6,6,7,7,10,1,-10,4,-8,1,1,5,9,1,4,6,5,-5,-7,-2,-6,2,1,-7,-7,4,2,-7,9,-6,-4,-4,4,5,-2,8,-9,5,-8,-8,-3,-5,4,-8,4,9,-6,-8,4,2,10,5,-2,-1,5,7,4,4,6,2,-6,7,-3,2,8,-3,-4,10,-9,6,10,3,-5,-3,-7,-10,-7,-4,-2,10,-10,10,1,10,1,-5,1,-7,5,7,7,6,4,6,6,-6,9,10,6,-2,-8,-7,5,5,-4,-5,-10,4,-10,-8,4,-5,-9,-3,-5,-1,-1,1,-10,7,9,-2,-2,-10,7,-9,5,-4,-8,-9,-9,7,-9,-8,-7,3,-7,-4,3,3,6,-9,-5,5,-9,8,5,9,-6,-2,-4,-10,10,-1,-9,-1,6,6,-4,-7,-5,4,-2,5,2,2,2,8,-5,-3,5,1,-7,-5,8,-7,-8,-3,3,-8,-5,2,2,9,3,4,-7,1,2,6,-9,2,-3,-6,5,3,6,-7,-9,8,8,10,-8,3,7,9,2,3,-6,-4,-7,-1,4,1,-4,-5,-10,-10,-6,-8,2,-10,9,-4,6,-8,-4,-4,-6,-2,-2,3,-2,10,-7,2,8,-6,7,3,-7,-6,9,1,-5,-6,-10,10,-3,9,-1,-1,-4,7,8,-7,-3,8,-3,9,-2,2,5,5,2,-8,-6,3,8,5,2,-1,-3,8,5,-1,-2,10,-6,-7,-10,3,-6,10,-8,7,5,4,-4,5,10,8,-10,1,-5,8,5,-5,-10,2,10,-8,7,4,-4,3,-4,10,-1,-1,1,-4,-3,-5,4,10,9,10,8,7,2,10,3,1,2,10,1,10,-5,-6,-4,-4,2,9,7,-6,8,-4,-5,-4,-6,10,10,-3,5,-5,-4,4,-4,-10,10,7,-9,10,-5,10,-9,-9,10,-6,-1,-6,2,3,-4,7,6,-4,7,2,8,-3,4,-6,4,-1], dtype = "int8")#candidate|8975|(512,)|const|int8
call_8973 = relay.TupleGetItem(func_1923_call(relay.reshape(const_8974.astype('float32'), [9, 5, 6]), relay.reshape(const_8975.astype('int8'), [512,]), ), 2)
call_8976 = relay.TupleGetItem(func_1927_call(relay.reshape(const_8974.astype('float32'), [9, 5, 6]), relay.reshape(const_8975.astype('int8'), [512,]), ), 2)
bop_8981 = relay.logical_xor(uop_8968.astype('int32'), relay.reshape(bop_8935.astype('int32'), relay.shape_of(uop_8968))) # shape=(12, 8, 14)
func_5363_call = mod.get_global_var('func_5363')
func_5366_call = mutated_mod.get_global_var('func_5366')
const_8985 = relay.const([8.356202,0.140898,5.428914,1.198146,-4.124303,-5.373443,-1.548689,6.535126,-9.163560,9.611814,-3.048266,1.518225,3.370655,-4.738944,6.005505,-3.372700,-5.338553,-9.181517,-8.744861,-3.483628,-3.727065,3.165641,-2.170016,8.640165,-3.521609,-4.746388,6.419022,-1.071530,5.599940,5.789404,2.685670,2.277274,9.582407,-8.415643,1.043108,2.468450,8.965361,1.000840,7.106186,3.633991,5.780863,-0.217168,0.121347,6.285084,4.083037,-8.582524,2.347037,-6.523545,5.618733,-6.464661,-5.949598,-1.206278,-7.189124,2.123044,-6.611862,2.201031,-9.879039,-6.925388,-2.669959,-4.904906,1.047157,1.393457,-4.744387,2.487402,-8.761827,6.720740,2.320754,-6.791462,0.973701,6.389827,-0.470553,4.617495,-1.474500,9.418048,-6.727983,-7.732039,-2.775560,-9.754230,-0.848186,-7.873212,8.002303,7.765536,-3.119733,4.523871,6.511484,8.033663,0.150918,-9.262629,4.608649,0.034745,-0.292453,6.196565,2.253902,3.765123,5.947016,-0.961206,8.524827,-0.384469,9.042905,1.367605,-4.111076,4.716917,-2.755017,-7.771403,7.428760,5.096741,8.249762,-6.653058,-5.973041,-1.935292,8.398924,-8.997336,-6.582528,-3.774948,-8.033394,-0.303537,3.377514,9.956105,-3.256780,1.707770,0.697102,6.811105,3.822917,2.699641,3.065628,7.322324,-3.459064,-9.732584,-1.965198,-0.322766,-4.790954,-9.961541,-4.140678,6.147879,9.096894,-3.866343,4.341703,1.038881,0.627749,-0.702744,7.127375,-1.580432,-7.913539,-3.094963,6.100234,0.252680,-0.143205,9.695101,1.632769,7.539466,4.837652,6.368997,5.738380,7.740009,5.613133,8.767275,-3.553490,-3.326580,-7.812810,0.533874,-6.398754,-2.348496,-4.056725,6.558058,-8.877648,-6.539104,8.118617,2.633109,8.097306,7.881111,-2.301713,7.788033,-6.015246,7.407687,-9.395888,9.626339,-5.924941,0.161754,5.330142,-1.448663,0.643761,-1.603511,2.613904,3.426137,-9.031222,3.532180,-9.193634,9.104320,0.669338,1.158270,-5.172711,-7.542565,-7.317628,2.919477,-3.431274,-3.867440,6.922912,-5.714722,-4.113349,5.758928,2.054169,5.240103,4.973282,-9.201729,-3.121071,-2.606764,-8.489340,0.774129,5.679897,5.851551,-8.179571,2.376717,-9.290934,-4.754428,-7.420304,5.216361,2.279536,0.740143,-9.587761,7.496408,3.068906,7.794340,-1.462401,1.791727,5.552310,6.588641,-8.362636,5.002791,2.478096,1.651916,0.166949,7.583458,2.734439,5.153572,-6.304170,-8.914568,7.893771,-2.857161,-2.686940,1.540744,-3.844219,-1.982011,9.138948,0.451774,1.041412,-6.205789,0.055017,9.798356,-5.070637,-4.441551,1.869250,2.323069,-6.009993,-1.706907,1.904181,7.375477,8.270078,-4.084128,7.835243,0.807569,-2.905559,-6.112363,1.097213,-3.078588,-7.320700,-5.717600,-2.274214,-9.411232,4.551340,7.008853,-7.684874,-3.207031,-8.148077,5.328339,-7.885656,6.200459,-4.450298,4.749098,4.266206,-8.101329,-8.026024,-3.725159,-4.110813,-4.543760,9.759974,-3.067932,-2.968367,9.503265,4.006376,-4.887179,4.282630,-2.175941,8.521135,2.600637,7.434873,0.179214,6.741236,-4.329338,-9.911746,7.224510,7.292182,-1.458692,4.242072,-3.170680,-8.400977,-8.196506,-1.750337,6.553271,-2.881203,4.461671,-9.402914,-4.597183,-8.125279,3.036587,7.506581,-1.988201,-3.439576,-2.585768,7.876150,-4.826283,8.316160,6.768617,5.680217,-6.867939,-3.253621,-7.771265,-9.739685,-7.022193,3.028428,9.693181,-2.229685,5.795784,-9.329781,-7.346098,3.223892,7.569849,-4.727312,-8.838342,-7.099221,7.216208,-6.741877,5.422870,-5.706300,6.169830,-3.370997,-8.950123,3.437678,0.238329,0.388167,2.538431,7.990995,-6.805514,9.111528,0.988376,4.682928,-9.380545,-7.095712,-8.992541,7.197422,3.897064,-2.908534,1.303854,4.704102,-2.671517,-9.192884,2.284103,-2.406982,8.986566,1.998779,8.639087,-9.201453,-6.834681,-7.545486,8.867673,0.022130,8.484611,2.578570,5.128281,3.172885,0.191605,2.648511,9.240646,-4.844037,4.457448,-1.053058,-4.116911,2.279013,1.075053,9.675365,4.214968,6.962276,0.866501,9.128584,-9.465806,-4.367489,5.239607,-0.434952,5.996413,4.891810,-0.620054,-2.373677,-8.447464,-9.910840,2.694924,0.351804,-7.839615,8.407008,7.424880,-2.284952,3.641073,8.911619,-7.468066,-7.399550,4.278089,-1.077736,7.026417,-5.297334,-7.878226,6.211267,3.441861,0.311375,-7.046901,0.717029,8.615989,3.362228,-3.709176,5.220139,-9.064040,-5.433097,-9.452919,-2.466556,9.107128,3.193617,8.369878,4.581716,8.516695,-7.612866,3.464224,5.132617,3.428525,-6.471439,-7.647255,-7.421286,0.665398,-1.509465,4.330132,7.108094,2.867296,5.506209,5.010081,0.158197,3.873366,-4.865087,1.180456,9.764429,-8.313422,-5.556454,-0.709175,-9.678360,-4.664181,2.837978,3.743126,-5.084349,3.125996,9.369591,0.946321,-8.561622,-5.808941,6.835224,-2.305079,-8.584843,-3.601099,8.028178,9.177875,-2.163803,-7.224009,9.228664,-4.088918,6.496797,3.679313,5.766063,4.973938,2.639500,-5.739343,-6.653242,-4.344643,-7.812919,4.850921,4.966329,2.211059,-6.022167,3.439743,4.714502,-2.215711,1.433721,1.577444,-1.260304,-7.403880,-5.000497,-8.230732,-2.195042,0.218299,-5.039058,-3.382516,5.823611,8.140234,-8.177125,2.202710,6.811918,-4.306066,-5.882829,1.467758,-0.561577,-9.508312,-3.437882,0.523056,5.933281,1.301342,-8.732134,6.167389,7.851957,7.175647,0.916269,1.173776,-0.443119,-9.673785,8.532518,4.663384,8.612864,-5.776467,5.272368,-3.023542,-4.723924,-5.589607,-5.510351,-9.726187,-3.246612,7.290995,0.228050,-2.987962,-2.646379,-6.952223,-8.443607,3.367568,8.663266,-2.454311,-9.259092,-5.098318,-2.149429,6.121937,-0.468295,1.718720,7.005677,8.743659,3.130739,8.296414,-5.241846,-6.812437,5.514565,-2.683293,3.135658,8.125426,-5.132484,9.185130,-3.995582,4.439466,-3.472463,-7.301579,1.673329,-7.310819,4.492618,-9.884891,4.908579,6.304959,-4.847358,-9.470842,-2.534880,2.429417,7.220779,3.342468,0.547107,-0.388104,2.960772,-8.360302,-7.650053,-3.811327,-9.732506,5.589783,9.878858,-0.460876,9.626410,5.394391,8.650353,-5.979705,0.607932,-7.117225,-2.462793,7.429237,6.999236,-4.444202,-5.337990,-4.830244,1.711229,4.338555,-7.789404,-2.591448,-4.552271,3.681036,0.691323,-1.593089,6.178142,4.217751,8.886122,-2.377314,-0.351677,8.991184,4.131174,3.094701,9.901871,4.419469,4.007268,4.199852,6.054534,6.842577,-0.945767,-8.707160,-5.234185,4.176965,-1.555699,7.543556,-4.881693,7.983731,-8.842820,-6.208479,0.945669,3.891234,-5.499078,-5.268134,7.213003,-5.894788,6.549384,0.338748,-5.819882,-8.313588,-6.740308,-6.492522,-0.458867,-4.209375,-4.822431,-1.318789,-8.170006,-2.739766,5.873297,2.163003,-7.947028,-3.505158,-3.682171,-8.264341,6.010688,8.949990,-4.685538,-8.262780,7.736530,2.131965,-9.264761,-0.345320,6.151930,8.615052,0.791268,6.797429,-5.865628,-8.789911,9.731667,7.614770,6.724720,7.205507,-2.168777,-0.411935,-2.176619,-4.760875,6.255403,-1.657663,0.569048,5.331718,-8.589354,1.246339,6.066240,7.564637,-1.703830,3.452370,9.264492,1.219722,-5.781146,8.393220,4.274049,2.833313,-3.455592,0.632813,3.775084,3.998438,5.834557,-9.173738,-6.901627,1.180074,3.700906,-6.555201,4.384622,-8.432839,1.546566,5.737877,5.623173,1.029692,-2.225918,-1.725097,-8.666403,7.213966,-5.411093,-9.548353,6.563520,0.597367,-9.030805,4.357459,7.370574,1.802728,2.069787,8.419726,-5.956113,8.062668,1.064092,-9.175566,8.818949,6.790840,-3.760936,-3.204134,7.973103,-8.522481,6.626279,-4.862006,9.641080,4.793408,-3.786651,-1.265764,0.692354,2.826408,8.315525,-0.514517,2.756958,-5.619890,7.533791,7.227483,-0.264505,-1.366498,2.169452,-4.235699,2.513771,6.866947,-6.120570,-1.273132,0.492659,-5.616792,2.843564,8.865948,-9.421835,-0.324020,-5.755594,-5.046291,3.574244,-4.312851], dtype = "float32")#candidate|8985|(768,)|const|float32
call_8984 = relay.TupleGetItem(func_5363_call(relay.reshape(const_8985.astype('float32'), [768,])), 2)
call_8986 = relay.TupleGetItem(func_5366_call(relay.reshape(const_8985.astype('float32'), [768,])), 2)
func_4757_call = mod.get_global_var('func_4757')
func_4758_call = mutated_mod.get_global_var('func_4758')
call_8987 = relay.TupleGetItem(func_4757_call(), 1)
call_8988 = relay.TupleGetItem(func_4758_call(), 1)
output = relay.Tuple([call_8954,call_8973,const_8974,const_8975,bop_8981,call_8984,const_8985,call_8987,])
output2 = relay.Tuple([call_8955,call_8976,const_8974,const_8975,bop_8981,call_8986,const_8985,call_8988,])
func_8991 = relay.Function([var_8922,], output)
mod['func_8991'] = func_8991
mod = relay.transform.InferType()(mod)
var_8992 = relay.var("var_8992", dtype = "float64", shape = (12, 8, 14))#candidate|8992|(12, 8, 14)|var|float64
output = func_8991(var_8992)
func_8993 = relay.Function([var_8992], output)
mutated_mod['func_8993'] = func_8993
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4679_call = mod.get_global_var('func_4679')
func_4681_call = mutated_mod.get_global_var('func_4681')
call_9013 = relay.TupleGetItem(func_4679_call(), 0)
call_9014 = relay.TupleGetItem(func_4681_call(), 0)
func_7585_call = mod.get_global_var('func_7585')
func_7588_call = mutated_mod.get_global_var('func_7588')
var_9018 = relay.var("var_9018", dtype = "float32", shape = (832,))#candidate|9018|(832,)|var|float32
call_9017 = func_7585_call(relay.reshape(var_9018.astype('float32'), [13, 16, 4]))
call_9019 = func_7585_call(relay.reshape(var_9018.astype('float32'), [13, 16, 4]))
func_8260_call = mod.get_global_var('func_8260')
func_8262_call = mutated_mod.get_global_var('func_8262')
var_9030 = relay.var("var_9030", dtype = "float64", shape = ())#candidate|9030|()|var|float64
call_9029 = relay.TupleGetItem(func_8260_call(relay.reshape(var_9030.astype('float64'), [])), 1)
call_9031 = relay.TupleGetItem(func_8262_call(relay.reshape(var_9030.astype('float64'), [])), 1)
uop_9056 = relay.log10(call_9017.astype('float32')) # shape=(13, 16, 4)
uop_9058 = relay.log10(call_9019.astype('float32')) # shape=(13, 16, 4)
uop_9061 = relay.erf(uop_9056.astype('float64')) # shape=(13, 16, 4)
uop_9063 = relay.erf(uop_9058.astype('float64')) # shape=(13, 16, 4)
var_9086 = relay.var("var_9086", dtype = "float32", shape = (13, 16, 4))#candidate|9086|(13, 16, 4)|var|float32
bop_9087 = relay.power(uop_9056.astype('float32'), relay.reshape(var_9086.astype('float32'), relay.shape_of(uop_9056))) # shape=(13, 16, 4)
bop_9090 = relay.power(uop_9058.astype('float32'), relay.reshape(var_9086.astype('float32'), relay.shape_of(uop_9058))) # shape=(13, 16, 4)
func_5276_call = mod.get_global_var('func_5276')
func_5278_call = mutated_mod.get_global_var('func_5278')
const_9096 = relay.const([[-6,6,-8,-9,3,-7,-9,-6,3,-10,7,-7,4,-5,7,-5,2,-9,8,1,7,4,7,9,-6,-4,-10,5,-10,-3,6,7,1,8,-3,-3,-9,6,-7,-7,-3,-5,-3,-7,9,-9,7,-2,-4,-10,-1,9,7,5,2,6,4,-10,-10,-1,6,7,-8,4],[1,-10,4,-2,9,-7,-1,8,-2,2,5,4,-5,-9,-2,-6,-6,5,8,-2,-5,7,2,1,6,-10,7,4,-5,-5,-5,-9,-9,-10,-4,-3,-1,-4,10,9,-9,6,-2,-1,5,-5,-9,1,1,-5,4,-3,-10,10,-4,-5,5,-2,6,-4,-9,1,-3,4],[-4,6,-6,-4,8,8,2,-5,-7,-2,8,3,-4,5,-9,-1,7,2,8,2,2,8,-5,1,-1,6,10,7,6,-3,-1,9,-6,3,-10,2,7,6,-4,-6,1,-6,-3,-6,7,5,6,5,-6,-5,-5,8,8,4,2,-9,-3,-5,10,-5,-1,-4,-4,-10],[-9,-7,-4,6,9,-6,-9,-4,-1,-9,10,-5,-4,-9,-10,-1,4,3,10,-1,-9,-2,3,-1,4,-3,-5,5,-9,-10,-3,-8,-8,6,8,9,-2,6,-6,10,-8,-4,1,-4,6,-9,-4,8,6,2,-1,3,-3,-9,-7,-8,-1,-2,6,5,10,4,1,-8],[6,-2,2,-2,-6,3,-1,-2,7,-7,8,6,-7,5,-4,4,-4,9,-4,2,-2,-5,8,-5,1,-10,5,-10,8,-10,-8,-2,-3,-10,-2,10,7,-4,5,2,3,-7,-9,1,-2,-10,7,3,-5,-8,-5,-8,6,-9,-3,-6,-4,5,10,3,-6,2,-6,-3],[10,-5,-2,9,-7,6,1,6,-5,-3,6,-8,-8,6,-5,-5,2,10,-5,1,-9,-3,9,10,-8,-10,8,9,-8,1,3,10,8,-1,-1,8,-9,2,8,-3,-4,3,3,-7,-6,-8,-6,6,10,-10,10,-3,-7,-7,9,-3,5,7,7,-10,-4,-4,7,-6],[-7,-10,-4,-6,-9,8,-2,-5,9,4,-7,1,-3,6,4,8,8,-8,2,5,-6,-1,4,-5,9,-10,-6,-2,3,10,9,9,-8,2,-3,-3,-10,9,-2,8,6,8,7,10,7,9,9,-3,-5,9,2,8,8,-7,-2,2,2,-7,-1,3,8,-3,-10,-6],[-3,-4,6,-8,-7,-5,-1,4,-6,-6,-9,-4,-9,-6,7,-3,-4,7,8,4,-2,4,-5,-9,-1,-9,-4,-1,-2,-3,6,9,-2,2,2,5,7,9,10,-3,5,-3,-5,-3,1,5,-1,-7,-1,-4,5,8,9,-3,5,1,-8,-10,-9,1,8,-7,-2,-3]], dtype = "int8")#candidate|9096|(8, 64)|const|int8
call_9095 = relay.TupleGetItem(func_5276_call(relay.reshape(const_9096.astype('int8'), [512,])), 9)
call_9097 = relay.TupleGetItem(func_5278_call(relay.reshape(const_9096.astype('int8'), [512,])), 9)
output = relay.Tuple([call_9013,var_9018,call_9029,var_9030,uop_9061,bop_9087,call_9095,const_9096,])
output2 = relay.Tuple([call_9014,var_9018,call_9031,var_9030,uop_9063,bop_9090,call_9097,const_9096,])
func_9100 = relay.Function([var_9018,var_9030,var_9086,], output)
mod['func_9100'] = func_9100
mod = relay.transform.InferType()(mod)
var_9101 = relay.var("var_9101", dtype = "float32", shape = (832,))#candidate|9101|(832,)|var|float32
var_9102 = relay.var("var_9102", dtype = "float64", shape = ())#candidate|9102|()|var|float64
var_9103 = relay.var("var_9103", dtype = "float32", shape = (13, 16, 4))#candidate|9103|(13, 16, 4)|var|float32
output = func_9100(var_9101,var_9102,var_9103,)
func_9104 = relay.Function([var_9101,var_9102,var_9103,], output)
mutated_mod['func_9104'] = func_9104
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6234_call = mod.get_global_var('func_6234')
func_6236_call = mutated_mod.get_global_var('func_6236')
call_9106 = relay.TupleGetItem(func_6234_call(), 0)
call_9107 = relay.TupleGetItem(func_6236_call(), 0)
func_5738_call = mod.get_global_var('func_5738')
func_5740_call = mutated_mod.get_global_var('func_5740')
call_9125 = relay.TupleGetItem(func_5738_call(), 0)
call_9126 = relay.TupleGetItem(func_5740_call(), 0)
func_5083_call = mod.get_global_var('func_5083')
func_5085_call = mutated_mod.get_global_var('func_5085')
call_9127 = func_5083_call()
call_9128 = func_5083_call()
output = relay.Tuple([call_9106,call_9125,call_9127,])
output2 = relay.Tuple([call_9107,call_9126,call_9128,])
func_9145 = relay.Function([], output)
mod['func_9145'] = func_9145
mod = relay.transform.InferType()(mod)
mutated_mod['func_9145'] = func_9145
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9145_call = mutated_mod.get_global_var('func_9145')
call_9146 = func_9145_call()
output = call_9146
func_9147 = relay.Function([], output)
mutated_mod['func_9147'] = func_9147
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9219 = relay.var("var_9219", dtype = "float64", shape = (14, 16, 14))#candidate|9219|(14, 16, 14)|var|float64
uop_9220 = relay.cosh(var_9219.astype('float64')) # shape=(14, 16, 14)
output = uop_9220
output2 = uop_9220
func_9225 = relay.Function([var_9219,], output)
mod['func_9225'] = func_9225
mod = relay.transform.InferType()(mod)
mutated_mod['func_9225'] = func_9225
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9226 = relay.var("var_9226", dtype = "float64", shape = (14, 16, 14))#candidate|9226|(14, 16, 14)|var|float64
func_9225_call = mutated_mod.get_global_var('func_9225')
call_9227 = func_9225_call(var_9226)
output = call_9227
func_9228 = relay.Function([var_9226], output)
mutated_mod['func_9228'] = func_9228
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9290 = relay.var("var_9290", dtype = "float32", shape = (6, 4, 1))#candidate|9290|(6, 4, 1)|var|float32
uop_9291 = relay.sinh(var_9290.astype('float32')) # shape=(6, 4, 1)
bop_9294 = relay.left_shift(uop_9291.astype('int32'), relay.reshape(var_9290.astype('int32'), relay.shape_of(uop_9291))) # shape=(6, 4, 1)
func_9225_call = mod.get_global_var('func_9225')
func_9228_call = mutated_mod.get_global_var('func_9228')
var_9298 = relay.var("var_9298", dtype = "float64", shape = (3136,))#candidate|9298|(3136,)|var|float64
call_9297 = func_9225_call(relay.reshape(var_9298.astype('float64'), [14, 16, 14]))
call_9299 = func_9225_call(relay.reshape(var_9298.astype('float64'), [14, 16, 14]))
output = relay.Tuple([bop_9294,call_9297,var_9298,])
output2 = relay.Tuple([bop_9294,call_9299,var_9298,])
func_9306 = relay.Function([var_9290,var_9298,], output)
mod['func_9306'] = func_9306
mod = relay.transform.InferType()(mod)
mutated_mod['func_9306'] = func_9306
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9306_call = mutated_mod.get_global_var('func_9306')
var_9308 = relay.var("var_9308", dtype = "float32", shape = (6, 4, 1))#candidate|9308|(6, 4, 1)|var|float32
var_9309 = relay.var("var_9309", dtype = "float64", shape = (3136,))#candidate|9309|(3136,)|var|float64
call_9307 = func_9306_call(var_9308,var_9309,)
output = call_9307
func_9310 = relay.Function([var_9308,var_9309,], output)
mutated_mod['func_9310'] = func_9310
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9335 = relay.var("var_9335", dtype = "float32", shape = (5, 12, 8))#candidate|9335|(5, 12, 8)|var|float32
uop_9336 = relay.atanh(var_9335.astype('float32')) # shape=(5, 12, 8)
output = uop_9336
output2 = uop_9336
func_9338 = relay.Function([var_9335,], output)
mod['func_9338'] = func_9338
mod = relay.transform.InferType()(mod)
mutated_mod['func_9338'] = func_9338
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9339 = relay.var("var_9339", dtype = "float32", shape = (5, 12, 8))#candidate|9339|(5, 12, 8)|var|float32
func_9338_call = mutated_mod.get_global_var('func_9338')
call_9340 = func_9338_call(var_9339)
output = call_9340
func_9341 = relay.Function([var_9339], output)
mutated_mod['func_9341'] = func_9341
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7391_call = mod.get_global_var('func_7391')
func_7393_call = mutated_mod.get_global_var('func_7393')
call_9353 = func_7391_call()
call_9354 = func_7391_call()
func_5342_call = mod.get_global_var('func_5342')
func_5343_call = mutated_mod.get_global_var('func_5343')
call_9358 = relay.TupleGetItem(func_5342_call(), 0)
call_9359 = relay.TupleGetItem(func_5343_call(), 0)
output = relay.Tuple([call_9353,call_9358,])
output2 = relay.Tuple([call_9354,call_9359,])
func_9367 = relay.Function([], output)
mod['func_9367'] = func_9367
mod = relay.transform.InferType()(mod)
mutated_mod['func_9367'] = func_9367
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9367_call = mutated_mod.get_global_var('func_9367')
call_9368 = func_9367_call()
output = call_9368
func_9369 = relay.Function([], output)
mutated_mod['func_9369'] = func_9369
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6437_call = mod.get_global_var('func_6437')
func_6439_call = mutated_mod.get_global_var('func_6439')
call_9374 = relay.TupleGetItem(func_6437_call(), 0)
call_9375 = relay.TupleGetItem(func_6439_call(), 0)
output = relay.Tuple([call_9374,])
output2 = relay.Tuple([call_9375,])
func_9384 = relay.Function([], output)
mod['func_9384'] = func_9384
mod = relay.transform.InferType()(mod)
mutated_mod['func_9384'] = func_9384
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9384_call = mutated_mod.get_global_var('func_9384')
call_9385 = func_9384_call()
output = call_9385
func_9386 = relay.Function([], output)
mutated_mod['func_9386'] = func_9386
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9367_call = mod.get_global_var('func_9367')
func_9369_call = mutated_mod.get_global_var('func_9369')
call_9461 = relay.TupleGetItem(func_9367_call(), 0)
call_9462 = relay.TupleGetItem(func_9369_call(), 0)
output = relay.Tuple([call_9461,])
output2 = relay.Tuple([call_9462,])
func_9479 = relay.Function([], output)
mod['func_9479'] = func_9479
mod = relay.transform.InferType()(mod)
output = func_9479()
func_9480 = relay.Function([], output)
mutated_mod['func_9480'] = func_9480
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5083_call = mod.get_global_var('func_5083')
func_5085_call = mutated_mod.get_global_var('func_5085')
call_9496 = func_5083_call()
call_9497 = func_5083_call()
func_9100_call = mod.get_global_var('func_9100')
func_9104_call = mutated_mod.get_global_var('func_9104')
const_9510 = relay.const([-9.767472,1.620597,7.526878,1.988595,5.927675,1.716688,5.228260,3.779345,7.122875,5.658020,9.183456,3.881391,-5.712462,-4.340184,4.237851,-0.070725,5.688097,9.532980,-0.152045,-6.304524,3.369424,-7.139242,-5.356000,4.165429,2.898058,-3.080897,-5.291115,-3.440714,1.227307,-6.530147,-0.956501,-0.857418,-3.556461,-1.322257,1.253704,6.846871,-5.745602,5.284528,3.444127,-8.116069,-2.435334,9.606248,-6.643502,7.282441,-7.423578,7.558051,4.817983,5.648872,2.042911,-9.808868,-7.995337,-8.705893,1.393191,2.471183,-8.153418,-9.693803,-9.579597,-4.634701,1.465967,-5.990065,8.311127,-7.648189,9.321696,4.924881,3.885131,9.229094,5.489939,3.039960,-6.614553,3.552210,-5.262885,3.704830,6.751833,-8.453713,3.713903,9.693644,-5.846382,4.740563,3.781056,-3.614284,-1.936106,-0.594249,2.664977,7.724513,-7.501071,6.223755,-9.334626,0.386824,-9.214115,-9.835926,-0.400085,-1.982208,1.498256,-9.753961,-2.433105,1.015692,1.330774,-5.111851,5.066189,-9.568179,-3.319472,8.098726,-5.533578,7.389523,-5.108500,-6.837666,4.358617,1.868993,4.927983,4.811054,-5.092137,-1.284155,-9.162582,1.450110,-5.393073,4.565201,1.882264,3.239656,3.989851,-5.123381,-0.346062,-2.059817,2.597819,-4.657263,8.664904,1.206189,6.067709,1.237344,-2.433741,1.684906,-1.751774,-4.116084,5.427283,6.464834,-6.074096,-4.679395,0.220687,-1.808569,-0.519139,4.915131,-3.366942,-5.658662,-5.066065,0.270713,-5.682941,-0.879264,3.596716,-0.629609,-4.017449,4.268563,8.387968,-2.999566,-2.778912,9.246726,8.988872,-7.638119,6.907526,2.754750,8.533746,0.483180,-0.613012,-8.010243,-7.216671,-3.539309,0.502957,1.264262,-5.800141,9.183314,-1.552260,7.592832,6.030485,0.214785,-4.088992,-1.652544,3.165531,8.721851,9.996310,2.327779,-9.602920,2.114736,3.664271,-4.511032,-0.365048,-9.198786,0.333295,-3.617045,1.078491,6.860989,5.965660,1.816259,6.815718,-6.042503,4.376931,-5.293058,4.628619,5.225046,-3.280216,-6.149246,9.688682,3.262719,2.474161,6.384838,4.899652,-6.933975,-9.767086,9.701673,4.444520,9.404707,6.320116,-5.252718,3.082598,7.335497,-0.998899,-4.316268,-6.797908,-8.527157,1.999845,6.410167,-6.381696,0.446670,2.804697,9.136911,-3.606307,6.931672,-3.009418,2.961421,7.275109,-2.594833,-2.079053,8.661737,-7.550766,-4.937675,8.918361,1.546927,-9.068129,8.966911,1.373635,-2.267601,9.422779,-8.136705,2.349967,2.654706,-4.945533,-9.239169,-6.788155,-8.233878,1.145126,-8.190111,-5.865830,8.312762,9.819015,-2.169101,5.599348,-7.805722,7.881043,-7.314587,-8.043185,3.181215,0.753613,-1.913438,-6.244997,3.507834,5.281333,-6.632828,8.077915,-7.401139,-4.664511,6.323592,1.279483,-0.973063,-2.587543,-8.050230,-4.626935,-1.529870,2.900174,6.682269,5.823859,-6.579900,3.142654,-7.451158,-3.161452,2.237327,4.820137,-5.041086,-3.651967,0.355732,8.565944,-3.975798,-5.638778,-9.770676,6.311887,7.192502,-0.334995,1.395555,-4.417467,-9.721039,0.194034,-3.303563,-5.019534,7.418441,2.799370,-2.762058,-3.519995,0.798260,8.289223,1.287365,9.707905,8.782469,-5.396231,1.964417,-2.240814,0.073854,9.533722,-1.788967,-7.256397,3.504209,5.182432,-5.878668,-1.875227,-8.940457,0.616131,-5.646866,-1.639846,-8.667064,-1.470875,3.177131,0.855032,-8.205871,-6.951519,2.719796,4.237499,2.578101,-3.252455,-5.770711,1.804623,-7.360591,-9.265430,2.732499,-6.520900,9.921224,-5.308186,5.657519,9.506710,-0.871508,-9.551211,-3.463357,-1.454815,-2.520949,-8.492497,2.108959,5.468579,-0.156338,-7.074318,-3.171569,-4.500356,-4.700054,0.925457,-9.981246,7.766688,-2.481241,-2.798744,1.298730,-4.036132,8.025399,8.234583,-7.712456,-8.366592,-7.011186,3.435601,2.883834,4.621845,-6.527604,1.581854,9.651173,9.917096,9.454311,9.993559,3.042831,-2.892504,-7.380455,8.918943,7.176449,1.853450,4.195425,-8.241238,-0.451739,-7.578440,-4.310048,-5.949298,-5.702101,-2.438812,1.727999,9.754867,8.517497,-1.876728,0.345551,4.212273,3.661899,-4.584152,7.415228,-7.711782,-7.838445,-5.472284,-7.232034,0.394777,-2.182200,-3.589200,2.277598,-1.224720,-2.272655,-3.653685,2.431745,-1.856800,-8.676127,4.808086,0.337017,-2.188724,-4.100110,8.380638,4.452535,9.979888,-4.339191,8.367212,6.826058,-5.505505,-2.813992,1.883629,-4.583359,7.180978,3.030211,-0.162344,-1.022397,-4.961766,7.214451,1.073567,-1.954303,5.260436,5.356440,-5.221316,-9.793278,-7.911128,6.868801,-2.010988,6.318384,0.059158,-1.129283,6.346924,-5.853652,8.889771,3.765769,-6.183316,-5.215661,-9.589482,-3.605975,-7.948971,-5.939109,-5.486596,3.487116,1.700978,-1.771355,0.303585,6.194771,2.984651,-8.062451,5.562257,5.633948,-4.952060,5.470468,4.684383,1.121225,8.671981,-9.396478,-3.833533,-4.115376,-5.454423,-4.534445,-2.161648,6.764710,1.800799,-3.596532,6.376599,-0.590447,9.176748,4.943272,1.825660,7.587164,-4.779523,-9.457574,5.351694,-2.112364,6.340804,0.776829,-4.924994,5.417107,-4.092941,0.792916,-0.838608,1.050390,7.577847,-9.557377,-3.997943,1.890478,-1.945064,2.986650,9.665617,0.191649,-3.506235,-5.405616,2.272941,-8.463526,3.923770,-6.546362,7.092046,-4.895771,-0.033892,0.040265,-4.650252,0.588958,5.391560,-4.350084,-2.402930,1.770826,-8.563856,-8.234346,-9.112358,3.694038,-1.837139,8.899514,-9.912156,-0.211767,-3.364075,6.694463,1.039283,4.204004,2.871888,3.621330,-5.095327,-8.029944,-5.768228,-6.692451,0.035872,-6.241238,9.572001,7.518468,7.053311,-8.298042,1.324658,-8.765307,-8.544776,0.764781,8.865572,-1.284145,-6.894359,-9.712799,3.700513,9.776919,3.227074,-4.617845,5.575595,-5.170782,4.669863,-8.670028,-1.502696,8.875895,4.727270,-3.550428,9.875869,-7.788787,7.758382,-9.508442,4.136019,3.872491,-5.447321,-4.843978,3.172838,-1.221744,9.046624,2.366781,-0.858304,5.717912,-6.569108,-4.982135,-5.156561,4.645709,-8.649482,-2.651434,7.997743,-7.701674,3.791597,7.126813,7.308198,9.689603,-1.687058,-6.387557,-1.511483,-4.714307,5.463252,-5.310780,2.928185,8.353847,-8.816231,-0.919999,6.351060,1.863423,6.660813,1.695190,-7.960567,6.100490,9.698690,2.814431,6.903092,-9.892973,2.797463,-7.703423,-9.575111,-7.680618,5.554362,-2.830596,8.338282,3.941170,-8.380059,5.513552,-3.450866,-8.753677,-1.629803,3.063303,9.179994,-0.461644,-7.461933,-5.756371,-7.301317,6.386666,7.167187,-3.011939,1.493521,7.601377,-9.561912,9.209217,3.993979,-7.690550,5.775940,-9.016462,-1.123464,4.255029,6.217867,1.890878,-2.560315,-4.622454,8.594368,-0.278491,-6.169936,-2.441556,-3.390584,6.137998,7.613848,2.666524,0.628495,-3.230394,-1.377877,7.185432,1.526951,7.548561,5.523316,0.130206,-4.391132,-5.763796,2.453411,5.650445,-6.660494,8.929657,4.620665,-1.340387,-5.701803,-4.459386,2.360527,9.495696,-5.178188,-1.679003,-8.427221,-8.754808,-7.368165,8.729286,-8.687695,6.476619,-8.292554,-4.351633,-9.366114,-6.265914,6.882718,4.122353,-3.926077,9.127065,-5.076364,6.463357,8.100893,6.169504,-4.968664,7.771155,-2.363159,7.000819,-9.419463,-0.308485,-8.400518,9.373013,6.488821,-8.829878,6.228981,-5.509279,-0.828190,-5.474127,-0.250962,1.041771,2.190586,3.790518,1.384706,-2.470630,-2.954587,-9.508309,1.575797,6.104396,4.582320,9.681580,9.854638,-9.498503,9.213174,-5.137330,-0.348051,-6.098049,-0.514258,1.978672,-3.525821,0.523547,-2.860246,5.650820,-0.100461,-3.990250,8.861939,-2.328460,-3.152453,-8.764992,-1.255099,4.059442,-0.843513,-8.062182,2.312891,-6.821325,1.405172,-3.189315,-3.912615,2.939329,-4.683619,-8.469708,3.192758,1.075184,5.662534,3.192589,-7.862777,-2.940987,-2.450391,5.884664,9.256099,7.189018,-2.585246,-5.205898,-4.138042,6.048217,-8.134579,-2.755029,-8.175257,3.646570,5.078464,2.812815,2.387770,-1.880622,-7.631781,5.391292,0.277379,-5.185890,-2.264880,-8.478796,7.467752,-7.784570,8.468595,1.664866,-9.159082,8.881623,-8.143950,2.609496,6.786573,7.368566,5.158529,3.814169,-9.148055,-6.645791,-0.446486,5.144984,-5.934946,8.850881,-4.159843,-9.363189,7.459526,-9.302814,-3.388088,6.840000,5.189493,-6.255950,2.737429,7.099973,8.849027,3.576686,0.182121,4.521419,-2.899928,6.780834,-2.269225,5.657367,-8.652240,7.845919,5.044654,-8.813965,4.405652,0.279545,-7.675094,-5.041940,0.112786,0.256006,-1.816631,-1.397589,-4.972142,6.012279,9.513538,-8.270363], dtype = "float32")#candidate|9510|(832,)|const|float32
var_9511 = relay.var("var_9511", dtype = "float64", shape = ())#candidate|9511|()|var|float64
call_9509 = relay.TupleGetItem(func_9100_call(relay.reshape(const_9510.astype('float32'), [832,]), relay.reshape(var_9511.astype('float64'), []), relay.reshape(const_9510.astype('float32'), [13, 16, 4]), ), 3)
call_9512 = relay.TupleGetItem(func_9104_call(relay.reshape(const_9510.astype('float32'), [832,]), relay.reshape(var_9511.astype('float64'), []), relay.reshape(const_9510.astype('float32'), [13, 16, 4]), ), 3)
output = relay.Tuple([call_9496,call_9509,const_9510,var_9511,])
output2 = relay.Tuple([call_9497,call_9512,const_9510,var_9511,])
func_9521 = relay.Function([var_9511,], output)
mod['func_9521'] = func_9521
mod = relay.transform.InferType()(mod)
var_9522 = relay.var("var_9522", dtype = "float64", shape = ())#candidate|9522|()|var|float64
output = func_9521(var_9522)
func_9523 = relay.Function([var_9522], output)
mutated_mod['func_9523'] = func_9523
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6088_call = mod.get_global_var('func_6088')
func_6089_call = mutated_mod.get_global_var('func_6089')
call_9583 = relay.TupleGetItem(func_6088_call(), 4)
call_9584 = relay.TupleGetItem(func_6089_call(), 4)
func_4679_call = mod.get_global_var('func_4679')
func_4681_call = mutated_mod.get_global_var('func_4681')
call_9595 = relay.TupleGetItem(func_4679_call(), 0)
call_9596 = relay.TupleGetItem(func_4681_call(), 0)
func_4987_call = mod.get_global_var('func_4987')
func_4988_call = mutated_mod.get_global_var('func_4988')
call_9599 = relay.TupleGetItem(func_4987_call(), 0)
call_9600 = relay.TupleGetItem(func_4988_call(), 0)
var_9602 = relay.var("var_9602", dtype = "float64", shape = (768, 7))#candidate|9602|(768, 7)|var|float64
bop_9603 = relay.maximum(call_9599.astype('int32'), var_9602.astype('int32')) # shape=(768, 7)
bop_9606 = relay.maximum(call_9600.astype('int32'), var_9602.astype('int32')) # shape=(768, 7)
output = relay.Tuple([call_9583,call_9595,bop_9603,])
output2 = relay.Tuple([call_9584,call_9596,bop_9606,])
func_9612 = relay.Function([var_9602,], output)
mod['func_9612'] = func_9612
mod = relay.transform.InferType()(mod)
mutated_mod['func_9612'] = func_9612
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9613 = relay.var("var_9613", dtype = "float64", shape = (768, 7))#candidate|9613|(768, 7)|var|float64
func_9612_call = mutated_mod.get_global_var('func_9612')
call_9614 = func_9612_call(var_9613)
output = call_9614
func_9615 = relay.Function([var_9613], output)
mutated_mod['func_9615'] = func_9615
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9657 = relay.var("var_9657", dtype = "int8", shape = (10, 13, 9))#candidate|9657|(10, 13, 9)|var|int8
var_9658 = relay.var("var_9658", dtype = "int8", shape = (10, 13, 9))#candidate|9658|(10, 13, 9)|var|int8
bop_9659 = relay.less_equal(var_9657.astype('bool'), relay.reshape(var_9658.astype('bool'), relay.shape_of(var_9657))) # shape=(10, 13, 9)
func_6661_call = mod.get_global_var('func_6661')
func_6662_call = mutated_mod.get_global_var('func_6662')
call_9662 = func_6661_call()
call_9663 = func_6661_call()
var_9678 = relay.var("var_9678", dtype = "int8", shape = (10, 13, 9))#candidate|9678|(10, 13, 9)|var|int8
bop_9679 = relay.right_shift(var_9657.astype('uint8'), relay.reshape(var_9678.astype('uint8'), relay.shape_of(var_9657))) # shape=(10, 13, 9)
uop_9697 = relay.sigmoid(bop_9679.astype('float64')) # shape=(10, 13, 9)
output = relay.Tuple([bop_9659,call_9662,uop_9697,])
output2 = relay.Tuple([bop_9659,call_9663,uop_9697,])
func_9704 = relay.Function([var_9657,var_9658,var_9678,], output)
mod['func_9704'] = func_9704
mod = relay.transform.InferType()(mod)
var_9705 = relay.var("var_9705", dtype = "int8", shape = (10, 13, 9))#candidate|9705|(10, 13, 9)|var|int8
var_9706 = relay.var("var_9706", dtype = "int8", shape = (10, 13, 9))#candidate|9706|(10, 13, 9)|var|int8
var_9707 = relay.var("var_9707", dtype = "int8", shape = (10, 13, 9))#candidate|9707|(10, 13, 9)|var|int8
output = func_9704(var_9705,var_9706,var_9707,)
func_9708 = relay.Function([var_9705,var_9706,var_9707,], output)
mutated_mod['func_9708'] = func_9708
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5567_call = mod.get_global_var('func_5567')
func_5568_call = mutated_mod.get_global_var('func_5568')
call_9733 = func_5567_call()
call_9734 = func_5567_call()
func_7378_call = mod.get_global_var('func_7378')
func_7382_call = mutated_mod.get_global_var('func_7382')
var_9743 = relay.var("var_9743", dtype = "int32", shape = (704,))#candidate|9743|(704,)|var|int32
const_9744 = relay.const([6.043369,1.617279,4.072707,-8.999255,-9.726357,-4.474980,1.106795,-1.200632,-9.572069,-0.735458,9.559620,-7.206164,-7.659727,4.056007,-2.773723,6.842926,1.972919,-4.954196,1.158541,-8.679853,2.317990,-3.799500,5.678188,-7.076445,7.794456,5.403937,3.822399,-4.221588,-1.034249,2.645063,1.950492,-0.260627,4.728377,9.566751,8.748171,-6.764357,-5.363459,9.190920,7.394523,5.770709,7.512061,-5.410294,-9.165942,-2.091655,-7.043284,4.127371,-2.400043,-5.635576,1.709284,5.718148,4.304163,4.156607,-0.493608,9.534456,3.639007,-4.318019,5.048394,2.728526,-0.766747,-0.616399,7.856261,-4.869300,-2.366828,0.901125,-6.457622,-0.972710,-3.738846,1.109441,2.931046,-2.010118,8.966631,1.495384,4.149665,-0.370109,-0.100741,7.763301,5.004207,-9.938286,-1.991629,4.612139,-2.716686,4.719940,4.690440,3.469018,6.658807,7.063234,8.332474,-9.069084,7.245384,-2.856284,5.854711,1.762488,9.845547,-3.157784,3.457151,-1.377261], dtype = "float32")#candidate|9744|(96,)|const|float32
var_9745 = relay.var("var_9745", dtype = "float32", shape = (324,))#candidate|9745|(324,)|var|float32
call_9742 = relay.TupleGetItem(func_7378_call(relay.reshape(var_9743.astype('int32'), [4, 16, 11]), relay.reshape(const_9744.astype('float32'), [96,]), relay.reshape(var_9745.astype('float32'), [324,]), ), 0)
call_9746 = relay.TupleGetItem(func_7382_call(relay.reshape(var_9743.astype('int32'), [4, 16, 11]), relay.reshape(const_9744.astype('float32'), [96,]), relay.reshape(var_9745.astype('float32'), [324,]), ), 0)
output = relay.Tuple([call_9733,call_9742,var_9743,const_9744,var_9745,])
output2 = relay.Tuple([call_9734,call_9746,var_9743,const_9744,var_9745,])
func_9752 = relay.Function([var_9743,var_9745,], output)
mod['func_9752'] = func_9752
mod = relay.transform.InferType()(mod)
mutated_mod['func_9752'] = func_9752
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9752_call = mutated_mod.get_global_var('func_9752')
var_9754 = relay.var("var_9754", dtype = "int32", shape = (704,))#candidate|9754|(704,)|var|int32
var_9755 = relay.var("var_9755", dtype = "float32", shape = (324,))#candidate|9755|(324,)|var|float32
call_9753 = func_9752_call(var_9754,var_9755,)
output = call_9753
func_9756 = relay.Function([var_9754,var_9755,], output)
mutated_mod['func_9756'] = func_9756
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6876_call = mod.get_global_var('func_6876')
func_6877_call = mutated_mod.get_global_var('func_6877')
call_9805 = relay.TupleGetItem(func_6876_call(), 0)
call_9806 = relay.TupleGetItem(func_6877_call(), 0)
output = call_9805
output2 = call_9806
func_9823 = relay.Function([], output)
mod['func_9823'] = func_9823
mod = relay.transform.InferType()(mod)
mutated_mod['func_9823'] = func_9823
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9823_call = mutated_mod.get_global_var('func_9823')
call_9824 = func_9823_call()
output = call_9824
func_9825 = relay.Function([], output)
mutated_mod['func_9825'] = func_9825
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3754_call = mod.get_global_var('func_3754')
func_3756_call = mutated_mod.get_global_var('func_3756')
call_9834 = func_3754_call()
call_9835 = func_3754_call()
output = call_9834
output2 = call_9835
func_9836 = relay.Function([], output)
mod['func_9836'] = func_9836
mod = relay.transform.InferType()(mod)
output = func_9836()
func_9837 = relay.Function([], output)
mutated_mod['func_9837'] = func_9837
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3742_call = mod.get_global_var('func_3742')
func_3743_call = mutated_mod.get_global_var('func_3743')
call_9848 = relay.TupleGetItem(func_3742_call(), 0)
call_9849 = relay.TupleGetItem(func_3743_call(), 0)
output = call_9848
output2 = call_9849
func_9852 = relay.Function([], output)
mod['func_9852'] = func_9852
mod = relay.transform.InferType()(mod)
output = func_9852()
func_9853 = relay.Function([], output)
mutated_mod['func_9853'] = func_9853
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7999_call = mod.get_global_var('func_7999')
func_8001_call = mutated_mod.get_global_var('func_8001')
call_9862 = relay.TupleGetItem(func_7999_call(), 0)
call_9863 = relay.TupleGetItem(func_8001_call(), 0)
func_7286_call = mod.get_global_var('func_7286')
func_7287_call = mutated_mod.get_global_var('func_7287')
call_9872 = func_7286_call()
call_9873 = func_7286_call()
func_8509_call = mod.get_global_var('func_8509')
func_8511_call = mutated_mod.get_global_var('func_8511')
call_9891 = func_8509_call()
call_9892 = func_8509_call()
output = relay.Tuple([call_9862,call_9872,call_9891,])
output2 = relay.Tuple([call_9863,call_9873,call_9892,])
func_9945 = relay.Function([], output)
mod['func_9945'] = func_9945
mod = relay.transform.InferType()(mod)
output = func_9945()
func_9946 = relay.Function([], output)
mutated_mod['func_9946'] = func_9946
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3754_call = mod.get_global_var('func_3754')
func_3756_call = mutated_mod.get_global_var('func_3756')
call_9976 = func_3754_call()
call_9977 = func_3754_call()
output = call_9976
output2 = call_9977
func_9980 = relay.Function([], output)
mod['func_9980'] = func_9980
mod = relay.transform.InferType()(mod)
output = func_9980()
func_9981 = relay.Function([], output)
mutated_mod['func_9981'] = func_9981
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9982 = relay.const([[[2,3,5,-1,3],[-1,-4,1,10,1],[-2,5,8,8,-3],[-5,-9,7,4,10],[3,6,-2,9,6],[7,2,1,-9,-5],[-6,-7,9,-10,1],[-2,1,-2,-6,4],[-3,-1,6,5,1],[-8,-10,-1,-9,4],[10,4,4,6,-7]],[[4,-5,4,-7,9],[-9,-4,-1,8,7],[-10,5,-2,-10,-9],[-3,4,7,1,7],[1,-8,4,1,1],[-3,-7,-5,-7,9],[1,-8,10,-2,-1],[-3,-6,-9,-10,2],[10,-4,-4,-10,-3],[9,-9,-8,-4,1],[1,8,-5,-8,9]],[[8,-5,-10,1,-2],[-7,8,-9,6,-7],[9,-3,7,-3,-2],[-3,4,5,7,-2],[-2,-9,6,7,1],[10,-5,-6,10,-5],[4,7,6,-9,-7],[1,1,-10,-7,-2],[-2,-8,-7,7,-4],[2,-2,3,8,-2],[-7,6,4,7,-4]],[[10,1,-3,2,4],[4,-3,4,4,-10],[-8,-1,4,-2,-7],[-8,-2,-4,-7,-5],[-10,8,3,9,-5],[6,-5,10,10,-10],[8,-3,9,5,2],[9,-7,5,-1,9],[-5,-1,-2,10,3],[-1,10,-3,-9,-8],[-8,-5,6,-7,6]],[[4,3,-2,6,-8],[-3,-2,-3,3,3],[5,10,6,-9,2],[-3,7,-2,2,8],[-7,-9,6,-5,-3],[2,-10,7,-8,-3],[2,-7,-1,-5,-6],[-2,-5,-3,-2,2],[7,-5,-6,-4,-9],[-5,2,-9,4,5],[10,-5,10,-8,8]],[[-8,-5,5,5,6],[-8,-6,-6,3,-10],[9,8,7,-6,10],[6,-3,3,2,9],[4,2,8,-5,-7],[-1,-7,4,9,-10],[4,-9,6,-4,9],[-8,-1,-3,8,1],[-4,-4,3,6,6],[3,1,8,3,6],[7,7,6,-8,7]]], dtype = "int16")#candidate|9982|(6, 11, 5)|const|int16
var_9983 = relay.var("var_9983", dtype = "int16", shape = (6, 11, 5))#candidate|9983|(6, 11, 5)|var|int16
bop_9984 = relay.bitwise_or(const_9982.astype('int16'), relay.reshape(var_9983.astype('int16'), relay.shape_of(const_9982))) # shape=(6, 11, 5)
func_8118_call = mod.get_global_var('func_8118')
func_8120_call = mutated_mod.get_global_var('func_8120')
const_10003 = relay.const([-5.293104,-3.920545,-7.088835,-7.489700,6.559355,-7.460071,8.661865,9.482463,-4.440036,-7.473758,5.193564,1.521593,5.207087,1.852536,-6.936030,4.213275,8.485379,1.833819,6.939822,6.164800,6.361123,-2.243502,-0.896256,-8.300141,0.224723,-6.273618,9.783190,9.605875,-1.615801,3.147767,5.959233,0.900806,9.552317,-3.295499,-4.976467,5.678342,8.129208,-5.824227,2.810643,-4.876007,8.660614,-0.862164,-1.295199,-0.212436,-5.244427,6.277829,-1.912340,-4.613869,2.339620,-6.344775,-9.762375,6.878347,1.047700,2.855167,-5.435116,2.377625,-5.099863,-3.317690,2.204418,6.590106,8.155960,7.296135,-6.013986,7.255240,-7.972552,9.124081,1.188633,-8.086649,7.591184,-3.363301,7.366803,9.319066,3.158162,7.266959,-5.766833,-7.161781,8.311787,1.253738,8.065057,-2.277579,-4.618463,-4.271084,-5.059666,-0.520060,-7.066016,-9.130653,-6.588486,4.487979,8.505795,-6.000784,-6.178791,3.180240,-7.444798,2.868309,5.894839,8.531951,2.108247,-0.563057,-1.626245,4.137290,4.537131,6.383475,-2.874124,1.382351,3.458577,0.961275,-9.927744,9.431218,-6.783121,-3.299565,-9.503801,0.506046,7.407602,-3.908876,9.752150,-2.398067,6.492445,-7.980657,-6.683052,6.464629,-2.587970,8.299470,-2.705870,4.248118,9.349368,-0.525257,-5.573313,-4.769234,5.005574,5.333843,-0.661261,0.100075,0.714274,0.026481,3.921153,6.310270,-2.010871,-4.429985,-7.496364,7.188563,7.134086,0.963178,4.590219,2.613992,-6.987593,1.045082,-7.506829,-8.432929,4.091566,-7.174816,7.027338,-5.135415,-1.960555,-5.470955,-7.349368,4.405557,4.978113,6.657810,-0.354144,-2.679979,-0.156101,8.681265,-0.754430,-5.986571,-4.637060,9.139519,8.119465,3.330026,-7.065333,-3.170658,8.349896,2.724955,-7.721449,5.797178,0.192642,-1.904004,-0.638661,5.076250,8.265627,-1.861000,-9.012311,4.205298,5.076216,2.942396,-2.976669,-0.341449,2.849643,8.272625,0.654992,-1.150091,-6.876753,-0.107627,2.123351,5.561338,8.612844,-9.104099,8.195688,2.470334,-1.527870,0.339875,-1.343720,-5.453713,9.702698,-3.287420,-9.202506,2.770760,1.422609,7.558407,1.473406,0.166466,-6.236711,-3.610282,-5.062710,-8.196287,8.148321,8.446339,-9.418564,0.428489,7.057837,-7.507421,3.575685,-8.449820,7.341985,8.268835,2.511509,3.358775,-6.907806,4.089931,-1.980067,7.366857,7.673196,1.717063,-3.741087,3.050222,-7.555667,8.959392,-8.523579,-3.306252,-9.804835,-9.756258,5.829071,5.570671,-5.865125,-7.056269,4.743938,-6.718818,-1.086262,-2.038295,-4.049996,5.474140,0.585055,-4.199916,-2.286518,9.142281,-8.557070,-4.312294,1.763973,8.028943,9.983044,-4.043508,3.777427,3.473502,9.402936,-8.154182,-7.951042,-4.099775,7.362360,7.830775,-7.318414,-7.231786,-3.214209,-6.273337,-4.047237,3.564371,1.808253,-8.081344,-0.483928,-0.901334,1.980646,-6.796349,-6.830840,8.350488,7.442841,-8.990121,4.549062,0.258038,8.663483,-4.613985,9.505262,4.869384,4.437871,-3.039068,-1.766255,0.353391,4.557307,8.117864,0.184689,4.441347,5.807565,-9.709230,-2.057776,-8.232206,8.509489,-9.347504,0.627776,1.176694,1.481012,-3.475821,-2.909981,-0.583754,0.987645,-8.137841,-1.355110,-4.855540,8.393241,5.126575,-3.926186,5.733142,-7.738615,-9.327310,-6.250610,-2.373171,8.914702,4.472479,9.489260,-3.365133,1.744180,7.124828,-2.482245,2.432160,-9.986371,-9.226893,-9.518060,-2.137167,7.282442,-2.029273,-9.701161,6.791718,-8.447237,0.815786,-2.589161,-2.290110,-2.508805,-8.353392,6.105443,-9.705733,-1.995288,-5.849157,2.409004,1.771796,-8.043552,-0.602376,-6.838164,-2.225206,-4.947992,-0.281946,2.325044,-2.505067,-9.504003,3.649418,-7.410732,0.551463,-7.487406,2.633593,-3.566958,-0.454880,7.818689,2.374415,-3.856569,-4.910683,-3.710843,-1.238245,7.771023,9.490545,7.411712,-8.557330,3.361763,-7.672843,4.079326,5.375094,-2.898778,-1.216753,-1.480543,4.031048,-6.634898,3.338387,2.208177,-5.614132,-8.828964,-4.126947,-4.661809,9.987998,0.052189,1.963928,8.169684,-4.443006,-4.880276,2.021938,1.739451,-9.822369,-4.228342,-9.264382,6.300806,0.730167,-4.959858,9.155158,-2.926653,-6.277049,-0.778845,-5.550097,-1.291161,1.907500,-8.016995,7.934757,0.890967,7.634953,4.810766,9.129563,-4.988660,-1.269387,4.042237,-0.965645,-0.546254,0.292121,-5.338755,5.048834,-1.718973,-3.032403,2.258467,-9.186902,2.106384,4.176311,6.773539,6.553524,7.251450,1.312722,7.622803,-5.073672,-6.474739,-1.761822,5.461941,-3.480063,-0.574195,-9.863567,-9.274929,-1.565670,-1.344861,4.651957,7.280092,-1.490367,-6.781871,3.823634,6.044760,-1.246469,2.163343,-8.297615,-7.074478,-1.356540,4.924910,-1.223656,-8.642917,2.986792,-3.975785,-9.519577,3.371889,-2.733435,-6.280931,7.491588,0.364506,-2.034715,-8.386401,-9.339756,1.335331,7.144841,7.742517,-0.871038,9.724131,1.389762,-2.614297,7.691006,-1.154762,-6.294187,2.740692,-9.546442,0.874027,2.355669,7.281900,-0.961978,-8.163160,-6.381332,0.650705,5.215253,-2.870924,6.048582,9.174931,5.675662,-4.185150,-4.650664,0.393693,4.329850,5.382139,4.265221,-0.751847,4.596530,5.111550,-3.521135,8.078323,8.324855,-1.567815,-1.281845,8.640927,1.319491,1.324321,1.379569,-8.847057,8.080772,6.873590,4.219251,-7.245805,2.477185,-2.428207,7.441776,4.277274,8.424791,6.972498,4.575507,6.404205,-1.914327,7.818139,-2.425864,-5.348469,8.122731,-2.320029,6.223800,-0.815087,-4.754681,3.780720,-8.833937,0.179246,-5.156619,4.092350,0.298040,0.503578,-7.727219,-1.953306,-9.640028,-3.386902,-5.548503,-9.748581,-6.802044,-2.496998,7.039072,-3.479500,3.950613,-4.101955,-4.102012,4.934534,-3.676325,0.894122,7.715212,5.714115,3.128231,-0.753258,-4.570037,5.313859,4.449250,-2.483518,0.344493,-2.057357,-7.587883,8.572778,-6.332677,-4.194091,2.776450,9.568109,0.404953,-4.966913,3.788321,8.530701,-5.705496,-3.422146,-5.461699,-6.966889,4.402664,-8.243130,9.702732,-5.784647,2.113324,1.748422,-3.690243,5.873517,2.749683,-1.305682,-9.708143,4.534582,2.643763,-8.926271,-3.712267,7.480781,3.157715,8.062683,4.670715,6.359357,-6.985714,6.325637,3.392137,8.754300,6.792269,4.563260,5.520011,-2.588072,-2.375875,-0.688752,4.427014,-1.224464,-6.712487,-1.933066,7.370455,-1.882778,-1.242798,9.786278,-8.572506,-7.757169,-7.117597,-9.465697,-9.998906,-9.927136,4.685880,9.420741,8.581441,-1.783292,2.743345,8.292717,-5.262478,3.721470,-3.660138,-8.371230,4.916166,-9.075173,7.413271,2.906613,0.996366,-0.005903,-4.521249,1.335554,-1.586505,7.101836,-5.859123,-2.243469,-9.956952,6.026063,-5.361090,-2.207108,3.918646,-2.629507,6.400432,-6.722522,3.533751,8.327292,6.100959,7.252655,-2.819864,6.370961,-0.686596,5.961296,8.538836,4.415135,3.819831,2.234503,-3.913173,3.594008,2.776223,-8.639044,-8.975505,7.240118,-7.434652,3.978583,5.407095,-5.778773,0.302135,4.636534,-8.057141,-4.983091,-3.878186,-6.049293,0.306583,-3.085161,-4.386962,-9.823165,-6.371678,-8.425799,-1.985622,-1.084239,-9.918059,9.272749,-2.574088,0.195176,3.015398,-3.598274,4.925174,-9.841795,-6.799865,-0.438888,0.108215,-5.715424,-1.781885,8.094155,-4.386848,-8.626205,-9.812934,-7.153121,-5.231901,4.925223,-8.763002,4.908418,4.467402,-7.055878,-3.590023,-8.275837,7.799320,-7.946842,9.129558,4.227347,1.047133,-7.013011,0.707392,-1.598859,-2.898446,-4.488881,-8.933599,3.882478,1.919369,7.333656,-0.172572,-2.636622,-7.772000,1.857462,-4.475763,-9.602240,-3.229661,8.246289,9.289370,-3.128039,3.668165,-4.032155,-8.317388,5.188045,-2.067290,-1.435055,-7.286058,-0.563361,6.861536,-9.182567,-8.293629,8.215145,-4.550481,7.212691,-3.162214,3.620625,-1.661258,1.789991,3.722921,-6.069378,-0.210224,-6.707083,6.030584,4.737110,-0.909280,-2.841803,-8.100831,-1.400756,-7.094629,7.709437,6.181704,2.516963,-8.496977,-8.180505,8.404259,3.937216,8.839482,3.128056,5.426108,1.376594,-1.778401,-9.137183,9.904712,0.699800,-7.662741,7.592810,-2.227322,7.104728,2.101390,-7.725619,5.141639,-3.271740,-3.490071,0.999919,8.090062,4.296588,1.354261,-2.648161,-1.048095,-2.780797,-6.668182,-3.222891,-1.271026,-0.237231,-2.471605,3.786922,-4.815502,-3.974524,3.135919,-6.457231,4.322944,-0.736831,-5.530133,4.060685,3.477768,5.095486,3.146100,-8.181322,-4.173458,-6.032310,9.649589,-7.934150,4.908761,-8.607186,-1.459272,4.089293,7.147190,-2.674149,9.947755,-6.264175,-4.944581,-0.978027,-7.041707,6.290966,4.605003,9.873503,0.660416,3.466857,-7.819098,5.575499,-9.505389,-9.484296,3.478836,0.513698,2.835930,8.209466,-5.354725,6.337388,-9.630111,8.757325,-4.120030,-5.468085,-2.374409,9.059721,-1.405643,5.810174,7.239719,-8.241943,9.574148,5.637264,4.422380,-1.755898,1.627072,-1.839761,-5.728969,7.153796,-3.956476,3.606834,7.712756,-1.415194,8.063126,7.136892,5.873029,1.914596,0.849152,5.011177,0.061040,-2.879652,-8.104445,-9.832767,-3.167898,8.445387,-3.677353,6.215132,0.973566,1.307154,-4.690363,-0.097643,-3.071943,-2.002065,-5.417777,-3.793077,3.790894,-9.170736,-0.497552,-1.060136,0.786915,5.820102,-9.183904,5.615633,-9.092176,2.399311,0.291264,5.404527,9.513541,-9.149941,9.885787,-1.331701,7.979523,-8.996494,7.625236,7.183098,1.604152,-7.885447,1.815408,2.350956,-8.159662,-8.104987,-6.445914,8.078049,2.950474,-9.185495,7.859761,5.002497,1.192669,-4.659542,3.027018,8.062817,-6.313510,-1.887210,-8.730196,-8.823336,-3.576010,-5.900593,-3.863920,1.206677,9.098783,-9.908938,-4.665333,-2.340939,-5.370982,-3.149709,-8.266612,-5.202585,-6.272107,-4.909560,-4.208973,8.847401,-1.754772,-9.994588,-7.829771,-6.567809,3.222802,-7.700029,3.166458,6.762808,3.574496,1.033126,-0.312197,-7.365719,-8.354020,8.033014,3.167690,-4.539217,-9.781940,-1.393939,-3.623872,2.016704,-2.204261,2.662370,-8.750004,5.030531,-6.722033,3.137785,-9.807637,1.061858,-2.076794,9.843607,-4.777896,6.840084,-6.860142,4.174069,6.286142,-8.970696,-2.654094,9.130853,7.644378,-9.934186,1.366483,-6.533834,2.053291,-4.756173,-1.629109,-3.585787,1.627348,9.479922,2.517899,-1.185263,8.355234,-8.761334,-7.138320,-8.551201,-4.165749,-2.358877,-6.356769,1.715092,-5.361683,-3.628370,-8.416703,7.592675,-3.148220,9.403617,2.587817,-7.819356,1.419609,-1.566491,-6.197457,8.358654,3.894290,-0.955861,-9.099583,-2.283908,-6.588381,7.523982,5.067699,-8.344928,8.596728,7.588022,-4.785704,-8.255992,5.273566,1.207150,0.238425,-0.635238,-7.538172,0.590797,0.541464,-0.867694,-9.282428,-4.054101,-3.434674,8.856769,-5.452918,6.687709,6.089363,-1.019118,-2.564782,-7.517609,-9.179280,8.753228,-5.051591,8.882913,-8.811929,6.011809,5.896094,-2.913494,-1.159410,-8.739055,-5.738889,6.324486,4.560688,-4.976042,-7.619379,6.764199,-5.842495,8.918420,8.236510,-4.602523,-9.794349,-1.052460,6.101755,-1.836497,4.243797,-9.434103,-7.971606,3.600301,-3.748998,9.617727,-6.452714,8.318506,1.631431,3.415572,-1.348002,-6.564536,1.093656,-1.846637,1.242641,4.899464,3.334259,1.863287,8.693570,5.611096,-5.085599,-7.451528,-2.054410,7.376821,1.096479,-4.397609,-0.877138,-9.446635,-9.837139,-8.398871,7.273528,-4.349509,-1.395829,-4.956349,-8.745561,6.912983,7.049738,5.232433,2.709865,2.068306,-4.612040,-2.442979,6.840117,-4.269141,-4.072242,5.136012,-0.793924,-7.217335,0.439900,3.748117,3.267864,4.284509,-9.002320,-6.277242,7.011118,-1.414363,6.595578,2.817163,-6.638801,-7.200354,-5.822544,-3.001176,3.618254,6.643752,-8.679085,-8.864217,2.791452,-3.942578,8.557119,-9.365112,-5.392899,-0.765798,2.476505,-4.417991,2.524009,-6.604799,6.953217,1.041994,-5.166718,0.718066,3.453569,-8.937274,6.012716,-7.753457,5.219334,-0.368260,-3.109762,8.842589,-4.071231,5.610896,5.300007,3.629254,-6.176563,0.007608,-0.322461,3.525234,7.908342,-7.938975,-8.105430,0.133562,1.542088,-7.745776,-6.089412,-5.923547,6.216406,-4.829539,8.347735,5.540408,-6.894482,-1.610956,-0.717330,-1.483179,6.850682,-1.841368,-7.728063,7.839439,6.788054,9.853547,-0.004862,-2.601694,8.122194,-7.007888,2.820891,-3.566297,-8.327910,-3.485681,0.483743,-3.038015,6.002859,-0.478144,-3.946670,-3.562513,3.535836,9.692563,5.794457,-2.272730,2.061059,8.411899,-4.879803,-0.720978,3.494479,7.223770,-0.512915,7.839240,5.460063,4.554589,-4.505943,8.198977,5.274553,9.532132,9.320725,3.309238,-4.174819,7.843120,-0.209224,6.041720,-2.153952,-5.062399,2.815939,-2.230317,-0.136045,-7.318378,2.263079,-3.851291,6.903226,6.113260,3.567578,9.067039,-3.078500,9.008010,-2.803321,-8.650755,1.642899,8.716194,-4.147554,4.094342,2.223101,2.415139,-6.192498,8.840582,8.545416,-8.561975,7.636334,-5.093164,-5.856793,1.011782,3.587193,4.269650,-7.869110,1.577838,-3.585875,3.877871,-2.631949,7.370320,9.279968,-4.619090,5.540717,9.961047,-1.298407,-3.589573,0.777211,-7.141160,3.179947,-1.938967,-9.863987,0.406792,-7.056124,1.766783,9.993484,6.424488,1.164268,-2.618304,-5.793688,-0.055266,7.929612,0.686629,-3.334876,1.227332,6.741335,3.122754,6.348439,2.301137,-1.624062,1.496401,2.576477,-9.893781,-9.994713,6.804415,-7.088307,-9.964312,6.689633,1.160133,6.344093,5.050389,-8.916772,-9.703098,8.402088,9.410695,-0.161306,-7.672236,-3.167973,2.863898,1.235258,4.680077,-2.106986,0.881575,-0.623741,4.441251,-0.546496,-6.886738,1.762579,-1.504314,-8.045845,-4.374482,-9.152340,-5.217760,8.748384,-5.898092,5.415670,3.384255,4.840402,1.398384,9.856652,4.253659,8.998719,-0.467332,-0.020542,-4.060063,-0.547331,-1.390942,1.154175,6.978586,-9.778536,1.823105,-6.710817,9.291757,7.923862,3.633695,2.552243,-4.922305,-8.349446,0.342085,-0.300839,-3.603114,4.466866,3.732234,2.346984,0.889789,-6.681035,0.631167,0.822296,-2.726129,7.752107,0.933481,-8.816042,-1.427833,-1.458579,-5.032845,4.393949,-5.420849,5.525142,6.323645,-2.385407,-5.158218,7.012013,0.382279,-3.615279,6.984859,8.503275,-1.112359,0.881107,5.281820,-1.265958,-4.047932,-4.276417,-4.097814,-5.231017,-4.797542,9.817026,-3.871795,8.324109,4.349066,7.288556,4.163135,-9.846844,2.127864,-4.964932,8.203035,-2.099530,-2.460789,-7.742858,-1.532470,-7.699120,-4.442255,5.754031,-5.857103,-3.699342,-0.650753,6.318160,3.560178,8.725805,6.518060,5.272306,-1.221129,-3.449884,-9.568637,-4.838153,0.082592,1.106078,-1.293784,-0.869232,5.115295,-9.679642,6.473164,-8.741535,1.821089,5.607842,8.443547,-8.345432,-6.210660,8.718037,5.822981,4.393266,-0.051082,-9.213039,9.323302,-2.377035,-6.708810,-3.810919,-6.791066,-3.645768,-1.195548,-9.236885,-8.340198,2.343560,2.842510,0.819591,-4.251860,7.714249,2.618040,1.105900,5.491967,-1.286042,4.868816,5.313372,4.721298,9.359039,3.404952,9.579404,-2.546162,-6.953635,5.859659,0.536670,-4.111294,3.583401,-7.983780,-9.601801,-7.164598,9.309300,6.959779,5.243514,-8.404173,-0.266776,-4.428084,9.568751,-0.130809,-2.824049,8.501774,-5.321774,-3.887277,-3.633906,-7.347711,-8.194198,4.321231,-6.376518,-3.855440,1.228506,4.300321,-7.471091,2.354936,-3.602356,2.737932,-0.602437,-8.240119,-3.802128,-1.839606,-8.110629,6.781058,5.927452,-7.175663,1.226768,1.472353,-7.465290,-7.159834,-8.556011,-4.651910,-2.042660,6.718533,6.589172,7.515748,-9.922677,-5.277616,-5.125494,-6.137695,-1.696314,-5.829387,6.029957,-8.958522,-4.167522,7.319543,-0.694829,8.744549,6.814406,1.875575,5.486891,3.812821,-5.482773,-8.187625,3.935096,-6.448594,9.780089,-6.183395,-8.740898,-7.793586,7.821878,9.108059,-8.827927,-1.386945,5.651805,-2.185019,-0.381377,2.246990,0.784177,-8.712900,-6.124206,-1.114610,0.405571,-4.127516,9.667792,-5.399064,-9.249857,-2.650702,-8.012784,4.396188,7.447539,-0.238460,2.428201,-7.005813,5.474137,1.966044,-9.552293,-4.776323,-9.807116,2.455530,9.719792,3.670202,-8.912063,-6.365537,-0.029983,-9.973971,1.377328,-0.574136,-4.251442,1.815292,7.041015,2.281510,-1.451019,9.805710,2.031775,-9.918261,-5.325367,-7.045723,-5.275783,1.128300,-9.221845,-5.866546,8.880759,-0.717869,4.218347,0.824868,4.643521,-7.990959,-4.308849,-0.372772,2.779819,6.066881,-9.374951,-0.002905,-2.996095,-8.700217,6.278518,6.732734,2.975878,8.809869,3.545706,2.981051,9.143962,7.994763,2.985518,3.774238,-1.751175,-2.090266,1.763424,2.613105,-9.450010,-6.534755,-0.245325,-7.173593,-9.036465,0.660534,9.669701,-1.743613,-2.715760,-9.938986,7.306854,-4.863142,-9.823481,4.038011,9.394831,-5.538709,-4.053507,-2.218003,-5.114706,-1.846605,-0.708619,-7.308286,-2.359373,-0.825778,-2.324132,-6.981162,7.505607,-9.546859,4.741731,4.791193,-9.330876,-5.497134,-5.633329,-1.230417,-4.282810,0.619664,-9.726489,-8.139633,-9.701500,1.506309,4.453411,6.604016,0.345224,7.896518,0.754650,4.563529,-0.959764,-3.345792,-1.956937,7.761032,2.995823,5.477628,-5.124076,-3.479788,2.949479,-4.437970,7.397078,3.101524,3.598734,6.277693,7.608371,-9.576668,-2.322796,-9.017218,9.454682,2.243031,3.101629,-4.007587,-9.290772,-9.247009,2.832856,9.259938,-1.442112,0.435443,2.979762,-6.992738,0.947571,-5.032419,4.882757,0.849817,-3.975099,2.259123,7.561312,0.578350,-9.322575,2.846695,-0.494283,-4.884426,5.701316,-4.536980,-7.685150,5.536582,-7.119803,-5.482531,3.915372,-0.260251,-3.937228,2.981899,-8.405484,-2.534500,-8.938686,-6.155570,-6.856185,-4.265682,-7.068174,-7.450862,3.111646,-0.173421,8.272339,-9.246480,-0.991126,-0.193418,-9.946814,6.391489,-4.858633,-3.269283,2.426644,-4.966151,9.761764,-7.047758,0.990754,0.773276,-6.450608,-9.544378,-8.625392,-8.936169,-5.667319,9.992570,-9.040188,0.026043,-4.691945,-7.079224,-9.946441,2.172071,6.249495,0.861508,-1.347333,5.327397,-9.041225,-9.131981,-5.861257,-3.508915,3.021353,-9.690810,-1.132481,7.897591,9.218024,-5.582118,-0.642793,3.067633,9.461793,-2.380886,1.228028,3.327436,-4.713150,-6.930687,-1.918148,9.121798,8.382308,-5.912476,9.519033,-1.328472,2.323654,-2.564623,1.900580,1.005519,-4.475217,-6.966042,8.495288,9.633036,-9.347692,0.870973,-1.414033,-0.767078,-8.712194,8.265026,-9.537150,-5.626542,0.169521,5.932698,-4.882591,5.606422,4.276634,8.298476,8.676558,-6.891229,-4.232328,3.092826,-1.606886,-3.445999,-3.286004,-6.521734,-4.271708,-3.361890,8.638314,-0.939619,-1.752583,-8.391266,5.787561,-8.323026,-5.775523,-4.586060,-3.703553,-6.267404,-3.529892,7.434460,-1.400128,3.403010,-4.053825,-8.103530,-3.369033,-0.459407,6.596014,-6.228638,-6.807197,6.094720,5.231218,3.468236,9.414896,-2.283930,4.426812,-9.918309,6.876634,-6.491577,4.582366,2.135620,5.925696,-5.229735,-5.269401,4.703242,-8.122303,5.164576,3.388449,3.439202,-4.692444,-4.314942,-9.424790,-0.537866,-3.119941,7.844375,4.290999,7.848527,-6.243983,6.524873,-3.942677,4.007270,-3.660240,-5.152917,-5.985777,-3.281502,6.667842,-7.624394,-1.707892,3.969293,3.469208,-2.072849,6.070800,5.357834,-9.763576,-0.474307,4.314250,3.913540,4.215106,5.408632,7.364617,-9.775728,-5.023080,-6.929341,2.265082,-0.520239,2.937878,-1.798227,-9.189444,-1.206450,-3.973376,-5.157898,2.267775,9.878421,7.348368,-1.577665,5.577043,-6.793229,1.866195,-6.701584,-1.444183,3.739653,3.854974,6.145757,3.124299,-1.988554,-0.940341,5.583074,-8.411191,-9.079690,-8.232711,2.685942,-0.751571,9.847143,-4.478042,-6.838807,-2.958367,-0.562762,0.957854,-6.855809,-7.632997,1.628566,6.324042,-5.679922,2.513167,9.594274,7.764588,4.806097,-2.480557,3.414970,-0.848655,-7.331943,8.307100,3.754614,-8.042902,7.369442,-6.500773,0.173343,3.238759,-4.001079,7.691580,-1.376479,-3.051249,-5.196873,4.732804,8.257197,7.215126,-5.664637,8.029554,-5.257051,6.555957,-2.051790,-8.111148,5.342026,7.744406,-2.987441,-3.213835,1.938662,7.436119,0.506814,6.594260,-7.712832,-3.135851,7.113409,-8.297416,9.461292,5.671604,-8.532017,-1.948168,6.232112,0.878177,-2.768876,6.082886,-4.498200,8.137797,5.844518,-6.622468,5.881495,-1.049238,-6.210114,-0.752652,7.903345,5.052252,9.475596,9.116238,1.441877,3.005467,-0.354427,2.779458,4.429964,6.415797,1.071802,-4.818974,-4.587584,0.970099,-4.995790,3.693389,8.653711,7.585974,-8.976697,-1.723878,1.084524,9.292330,-0.718406,-8.315061,0.831193,-8.503699,6.496219,0.961391,2.890536,5.190088,3.564511,8.252048,3.929723,4.205633,-7.317228,-5.499912,4.307920,6.813163,-6.773947,7.002559,7.976534,1.262344,8.090581,4.097305,6.732737,-8.170354,0.072821,-0.441806,-3.391415,-9.249314,6.988786,-8.760401,-3.952087,-9.827398,8.715558,-7.404025,5.554136,9.798510,-6.485514,1.026805,3.570433,-8.846930,-7.994421,-5.298155,2.803887,4.914867,6.567516,9.177831,0.294303,-9.087100,-2.778270,-3.944720,-7.142504,-3.128228,-8.514407,1.066149,2.792971,-9.672428,-5.792274,-0.834198,3.237908,-4.292164,2.785253,-8.249115,5.351235,8.191223,4.293562,4.613514,9.931497,-8.685577,9.666148,-0.453017,-1.188233,-5.689965,9.036837,-5.558234,-4.140540,2.826454,-9.074155,9.759452,-7.012022,0.748509,-9.873046,-1.838553,-5.487267,5.836219,-8.400970,-4.998296,-5.973346,3.017902,0.810229,-8.324627,-2.242327,8.940711,8.096232,-4.454097,8.498994,8.661357,-7.300371,-9.744350,-8.660240,-7.817705,5.112170,1.103400,-1.758906,6.999967,-3.179955,3.829349,9.457319,-8.041821,7.289616,-9.625760,-6.288331,-7.934595,9.422230,-1.582710,-9.558101,-2.980412,4.914938,8.240835,-6.413397,-7.700201,-4.178974,5.133921,-3.126086,-8.963081,-8.111899,2.977204,-2.935381,3.621339,-6.905156,-8.071691,4.749769,-0.190387,-6.918213,-3.143959,-1.029839,-4.681027,-3.749213,-5.264481,9.032162,6.341284,1.519486,-5.180792,-0.828890,-9.084786,9.274043,-6.191418,5.523888,-8.596902,-6.487653,4.727427,2.633462,-4.393263,2.627400,-7.358193,3.190428,6.461456,-1.191911,8.539081,8.986864,5.130807,-3.040415,0.803668,-8.656392,7.717411,-4.490598,8.902518,-6.809277,-9.540183,-1.839978,-5.724575,-8.080144,2.271827,-6.450436,6.562801,-8.882707,-5.591171,-6.201420,-9.134356,2.315369,-6.819223,-6.184626,5.394895,8.320059,3.713633,5.094852,1.926593,4.922256,-3.801184,4.719837,4.941550,8.264016,-3.490940,-8.877562,-7.732043,4.495211,0.280915,1.027018,-4.226750,-3.832297,-0.358493,-2.584221,2.561475,-3.151582,6.523793,-7.470429,0.925654,-1.232557,1.357819,0.263380,4.477567,-3.605119,-4.526816,6.741144,-0.601352,-9.477986,5.481500,0.676727,-7.356671,6.540404,9.090979,8.211078,8.151864,6.214655,-9.624239,-0.768068,0.789679,-3.494513,-0.337070,-1.928976,-3.384712,-8.741891,4.883936,-1.248056,6.106270,4.070229,3.015246,-3.777960,0.537503,-4.736628,-0.007824,2.896067,9.938883,2.642524,2.285895,5.467340,8.637273,-5.315343,7.379874,-3.677487,-6.791764,9.955586,-1.635427,-0.601575,7.621314,3.839245,8.073361,4.557459,2.884808,6.417682,4.637821,-1.495046,-5.295224,1.085562,0.235168,-8.155248,-1.463408,-4.619758,9.685398,-6.134999,7.335519,-4.866574,-9.640448,3.099034,6.407736,-8.096056,3.991911,4.651316,1.060678,4.105471,-8.416631,-0.240377,-4.151830,-3.014956,6.797913,-6.539428,-3.392506,-0.842128,8.756354,-8.320169,-9.185860,7.290522,1.649741,1.853151,1.185359,-5.716808,-2.260567,-6.352503,9.369268], dtype = "float64")#candidate|10003|(2304,)|const|float64
call_10002 = relay.TupleGetItem(func_8118_call(relay.reshape(const_10003.astype('float64'), [768, 3])), 3)
call_10004 = relay.TupleGetItem(func_8120_call(relay.reshape(const_10003.astype('float64'), [768, 3])), 3)
var_10009 = relay.var("var_10009", dtype = "float32", shape = (162, 2))#candidate|10009|(162, 2)|var|float32
bop_10010 = relay.divide(call_10002.astype('float64'), relay.reshape(var_10009.astype('float64'), relay.shape_of(call_10002))) # shape=(162, 2)
bop_10013 = relay.divide(call_10004.astype('float64'), relay.reshape(var_10009.astype('float64'), relay.shape_of(call_10004))) # shape=(162, 2)
func_9704_call = mod.get_global_var('func_9704')
func_9708_call = mutated_mod.get_global_var('func_9708')
const_10016 = relay.const([-7,-7,-9,-3,-9,3,4,-5,-3,8,5,-9,10,4,10,-8,-6,-9,1,-7,9,-8,-3,1,-5,-7,-9,-7,-6,1,-6,2,-5,6,3,8,-7,-8,-1,-8,10,-7,4,5,6,-6,6,-4,-1,9,-8,-9,-7,-7,5,-5,1,-3,-7,-4,4,-7,10,-3,4,6,-3,8,3,8,-1,3,4,-8,4,-6,-2,1,4,4,8,-1,6,-10,-5,6,-1,9,-5,-8,8,7,9,-3,-4,3,8,4,3,4,-4,3,1,3,-8,-7,7,8,4,8,-8,-1,-5,10,-2,-6,-7,2,-3,-6,-5,7,6,7,5,-7,6,-9,4,-9,-6,-3,-5,2,9,9,10,-8,-9,6,10,-9,1,9,1,-6,-4,1,5,7,1,9,-2,-8,4,7,7,-2,7,-8,9,5,-2,-3,10,-10,-6,4,8,8,-6,-7,4,3,-1,10,-4,3,1,-10,4,4,1,-5,-10,2,-10,10,10,-5,-4,-1,10,-4,-8,2,4,-1,3,-7,-10,10,-10,4,-4,1,4,6,-5,-4,5,-4,-3,-8,-4,-9,4,4,8,3,9,-1,3,-8,8,-1,8,-3,-4,-7,-6,3,-4,3,7,5,8,-2,3,-1,-1,-5,-10,2,-1,-2,-5,-6,-2,-10,-5,-8,1,5,-9,5,1,-9,-10,8,-9,-8,-5,-3,7,9,-10,-6,6,-3,10,-3,7,5,-4,-9,-1,-7,-5,-5,-4,4,-1,5,2,2,-5,4,-8,1,9,-7,1,9,4,8,-8,2,-3,-7,-4,-8,4,2,10,-6,-5,1,6,-4,6,8,6,-3,6,5,-1,-8,-6,8,6,-3,8,-1,-6,3,-6,-3,-1,-1,-10,-7,-1,5,7,-1,7,8,-10,10,-1,-5,5,7,-8,-5,7,7,-8,5,-6,-10,2,10,4,-9,2,2,-6,5,1,2,1,8,-4,5,-9,4,-1,-7,-4,-2,2,4,-6,2,9,5,-5,-9,6,-8,-7,8,7,-6,4,7,-3,4,2,-5,1,-10,3,-5,3,5,4,-1,1,-1,-5,-2,9,-8,-3,-1,4,-1,1,5,-7,-6,-6,-3,-4,1,-1,10,9,1,10,8,-3,1,5,10,8,7,4,-8,-4,-10,4,-5,7,-4,-7,-10,-1,4,7,-2,-3,9,-8,-8,8,5,9,4,7,-2,2,5,-3,1,-5,6,-1,5,-4,10,-2,-3,-7,8,6,-8,-4,-2,-2,-10,8,-6,3,-6,6,-8,-3,3,9,-5,3,-3,-6,7,-2,8,-3,6,-8,2,10,-4,10,-4,9,3,-3,-3,5,-9,-7,4,-1,-7,-5,-3,-8,8,4,-6,-1,9,9,-5,1,9,10,9,6,-8,-4,5,-8,7,-3,9,4,-8,-9,7,-6,10,-2,5,5,-10,-6,9,6,-10,-1,-2,6,-7,-2,6,1,-4,-5,2,4,-6,-6,6,1,10,-4,8,-2,-4,-9,4,6,-6,9,-10,-1,5,1,7,9,5,-10,3,8,-10,-10,9,-4,-9,-5,6,-7,-1,-4,4,8,7,2,1,9,-9,8,7,4,-5,-6,5,1,4,6,7,7,1,-3,-1,8,1,9,7,3,2,-10,3,-5,-7,2,5,9,1,2,6,4,-5,-5,-8,-2,-6,-9,6,-5,-7,10,-8,-1,2,-5,-3,-6,-3,1,-7,-2,-9,-3,7,9,-5,-5,9,4,-9,-10,7,3,6,1,-8,8,6,-2,9,6,-2,9,-6,3,-3,8,-8,9,-4,9,3,-7,1,1,-3,-4,-7,6,-7,9,-9,-9,9,-3,8,4,9,4,3,8,2,10,-8,-5,3,-4,-10,-1,10,-1,-4,-4,6,-3,-3,4,-6,7,1,8,5,-6,4,5,1,-4,2,-10,-4,-9,3,-4,-8,-2,2,-2,-9,-5,8,-6,-7,6,8,10,-8,-9,-2,9,-4,8,-8,-7,1,-1,-4,-9,-7,2,10,9,9,-10,-3,-1,-9,-6,-3,5,5,-4,3,1,8,-7,-5,8,-6,-7,7,-5,8,3,-4,-5,6,-9,-3,-1,6,-9,6,-7,6,-1,-1,-7,-10,2,1,-3,9,6,-4,2,8,-3,1,-9,3,7,-8,4,-7,2,-6,-4,10,-6,10,-6,-9,5,10,-6,5,8,-10,-3,-9,-4,1,7,-2,8,10,10,-5,-1,10,8,1,-1,8,-7,-9,1,2,3,-2,-6,5,4,-5,-2,10,-2,-8,3,7,5,4,-5,-6,10,9,2,6,-1,1,-5,5,-4,-10,-1,9,-2,3,-7,8,-9,-5,-9,7,1,-5,-8,6,5,9,3,-3,-8,4,5,5,7,3,1,7,-7,-2,5,7,4,-8,-3,-3,5,-6,-9,4,-3,3,-8,-7,3,10,-7,-7,-2,-9,-6,-5,10,-1,4,-5,4,-10,8,-5,-7,8,1,-5,8,7,-8,5,4,7,3,3,-9,10,-2,-6,-2,-3,10,6,-5,4,-3,-1,6,5,9,-7,-2,-4,1,-1,6,6,5,-4,4,2,-6,6,-1,3,10,-6,6,5,4,4,4,-6,1,7,-9,-7,-2,-6,6,2,-1,8,-2,9,-3,-6,1,5,-1,1,3,-4,3,-9,1,-4,-2,10,-5,8,9,4,5,6,-2,-5,-5,2,-10,6,2,2,2,8,10,-7,9,9,-1,-9,1,9,-2,5,-4,3,-1,-2,6,2,5,5,1,9,10,-6,-3,-9,8,8,5,7,-6,-10,-8,-8,-10,-10,-6,4,8,-7,6,7,9,5,-5,-1,3,3,4,8,-4,-4,9,6,-7,-8,10,7,1,5,-4,6,10,1,-1,-7,-7,-7,10,-4,8,-9,9,10,-8,5,3,-1,1,8,-1,8,7,-6,9,-3,-6,-5,-8,3,10,-10,-1,8,3,5,1,3,7,5,3,-2,2,-2,-4,6,4,9,-7,7,-4,-5,6,-3,9,-10,7,1,-1,2,9,9,6,-9,6,-2,-10,5,4,8,9,-6,-10,-8,10,-6,7,-2,-5,5,-9,-2,-1,3,-7,1,-1,-2,3,-1,7,-2], dtype = "int8")#candidate|10016|(1170,)|const|int8
call_10015 = relay.TupleGetItem(func_9704_call(relay.reshape(const_10016.astype('int8'), [10, 13, 9]), relay.reshape(const_10016.astype('int8'), [10, 13, 9]), relay.reshape(const_10016.astype('int8'), [10, 13, 9]), ), 2)
call_10017 = relay.TupleGetItem(func_9708_call(relay.reshape(const_10016.astype('int8'), [10, 13, 9]), relay.reshape(const_10016.astype('int8'), [10, 13, 9]), relay.reshape(const_10016.astype('int8'), [10, 13, 9]), ), 2)
output = relay.Tuple([bop_9984,const_10003,bop_10010,call_10015,const_10016,])
output2 = relay.Tuple([bop_9984,const_10003,bop_10013,call_10017,const_10016,])
func_10040 = relay.Function([var_9983,var_10009,], output)
mod['func_10040'] = func_10040
mod = relay.transform.InferType()(mod)
var_10041 = relay.var("var_10041", dtype = "int16", shape = (6, 11, 5))#candidate|10041|(6, 11, 5)|var|int16
var_10042 = relay.var("var_10042", dtype = "float32", shape = (162, 2))#candidate|10042|(162, 2)|var|float32
output = func_10040(var_10041,var_10042,)
func_10043 = relay.Function([var_10041,var_10042,], output)
mutated_mod['func_10043'] = func_10043
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8485_call = mod.get_global_var('func_8485')
func_8486_call = mutated_mod.get_global_var('func_8486')
call_10148 = relay.TupleGetItem(func_8485_call(), 1)
call_10149 = relay.TupleGetItem(func_8486_call(), 1)
uop_10150 = relay.sin(call_10148.astype('float64')) # shape=(768, 1)
uop_10152 = relay.sin(call_10149.astype('float64')) # shape=(768, 1)
bop_10158 = relay.left_shift(call_10148.astype('uint16'), relay.reshape(uop_10150.astype('uint16'), relay.shape_of(call_10148))) # shape=(768, 1)
bop_10161 = relay.left_shift(call_10149.astype('uint16'), relay.reshape(uop_10152.astype('uint16'), relay.shape_of(call_10149))) # shape=(768, 1)
uop_10166 = relay.log(bop_10158.astype('float32')) # shape=(768, 1)
uop_10168 = relay.log(bop_10161.astype('float32')) # shape=(768, 1)
output = relay.Tuple([uop_10166,])
output2 = relay.Tuple([uop_10168,])
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

==========mod==========
#[version = "0.0.5"]
def @func_3812() -> (Tensor[(13, 7, 2), float32],) {
  %0 = @func_2193() /* ty=(Tensor[(13, 7, 2), float32],) */;
  %1 = %0.0;
  %2 = cast(%1, dtype="float32") /* ty=Tensor[(13, 7, 2), float32] */;
  %3 = exp(%2) /* ty=Tensor[(13, 7, 2), float32] */;
  (%3,)
}

def @func_5312(%var_5290: Tensor[(3, 9, 6), int32], %var_5291: Tensor[(3, 9, 6), int32]) -> (Tensor[(3, 9, 6), float64], Tensor[(3, 9, 6), float32]) {
  %4 = cast(%var_5291, dtype="int32") /* ty=Tensor[(3, 9, 6), int32] */;
  %5 = shape_of(%var_5290, dtype="int32") /* ty=Tensor[(3), int32] */;
  %6 = cast(%var_5290, dtype="int32") /* ty=Tensor[(3, 9, 6), int32] */;
  %7 = dyn.reshape(%4, %5, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %8 = bitwise_and(%6, %7) /* ty=Tensor[(3, 9, 6), int32] */;
  %9 = cast(%var_5290, dtype="float64") /* ty=Tensor[(3, 9, 6), float64] */;
  %10 = shape_of(%8, dtype="int32") /* ty=Tensor[(3), int32] */;
  %11 = cast(%8, dtype="float64") /* ty=Tensor[(3, 9, 6), float64] */;
  %12 = dyn.reshape(%9, %10, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %13 = cast(%var_5290, dtype="float32") /* ty=Tensor[(3, 9, 6), float32] */;
  %14 = mod(%11, %12) /* ty=Tensor[(3, 9, 6), float64] */;
  %15 = acosh(%13) /* ty=Tensor[(3, 9, 6), float32] */;
  (%14, %15)
}

def @func_1521(%var_1471: Tensor[(10, 7, 1), bool], %var_1472: Tensor[(10, 7, 10), bool], %var_1482: Tensor[(560, 2), int8], %var_1484: Tensor[(880), uint64], %var_1485: Tensor[(385), float64]) -> (Tensor[(10, 7, 10), bool], Tensor[(135), int16], int8, Tensor[(560, 2), int8], Tensor[(88), uint64], Tensor[(880), uint64], Tensor[(385), float64], Tensor[(6, 7, 12), bool], Tensor[(240), float32], Tensor[(15, 9, 13), float64], Tensor[(6, 7, 12), bool]) {
  %16 = cast(%var_1471, dtype="bool") /* ty=Tensor[(10, 7, 1), bool] */;
  %17 = cast(%var_1472, dtype="bool") /* ty=Tensor[(10, 7, 10), bool] */;
  %18 = cast(%var_1482, dtype="int8") /* ty=Tensor[(560, 2), int8] */;
  %19 = cast(%var_1482, dtype="int8") /* ty=Tensor[(560, 2), int8] */;
  %20 = cast(meta[relay.Constant][1] /* ty=Tensor[(88), uint64] */, dtype="uint64") /* ty=Tensor[(88), uint64] */;
  %21 = cast(%var_1484, dtype="uint64") /* ty=Tensor[(880), uint64] */;
  %22 = cast(%var_1485, dtype="float64") /* ty=Tensor[(385), float64] */;
  %23 = reshape(%18, newshape=[16, 14, 5]) /* ty=Tensor[(16, 14, 5), int8] */;
  %24 = reshape(%19, newshape=[16, 14, 5]) /* ty=Tensor[(16, 14, 5), int8] */;
  %25 = reshape(%20, newshape=[88]) /* ty=Tensor[(88), uint64] */;
  %26 = reshape(%21, newshape=[880]) /* ty=Tensor[(880), uint64] */;
  %27 = reshape(%22, newshape=[385]) /* ty=Tensor[(385), float64] */;
  %28 = @func_1035(%23, %24, %25, %26, %27) /* ty=(Tensor[(16, 14, 5), int8], int8, Tensor[(88), uint64], Tensor[(880), uint64], Tensor[(11, 5, 7), uint8], Tensor[(385), float64], Tensor[(504), float32], Tensor[(504), float64], Tensor[(11, 3, 9), int16], Tensor[(297), int16]) */;
  %29 = cast(meta[relay.Constant][2] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %30 = reshape(%29, newshape=[2, 15, 8]) /* ty=Tensor[(2, 15, 8), float32] */;
  %31 = @func_1343(%30) /* ty=(Tensor[(2, 15, 8), float32], Tensor[(6, 7, 12), bool], int8, Tensor[(504), int8]) */;
  %32 = cast(meta[relay.Constant][0] /* ty=Tensor[(135), int16] */, dtype="int16") /* ty=Tensor[(135), int16] */;
  %33 = reshape(%32, newshape=[15, 9, 1]) /* ty=Tensor[(15, 9, 1), int16] */;
  %34 = @func_1054(%33) /* ty=(Tensor[(15, 9, 13), int16],) */;
  %35 = %34.0;
  %36 = cast(%35, dtype="float64") /* ty=Tensor[(15, 9, 13), float64] */;
  %37 = cast(meta[relay.Constant][2] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %38 = reshape(%37, newshape=[2, 15, 8]) /* ty=Tensor[(2, 15, 8), float32] */;
  %39 = @func_1343(%38) /* ty=(Tensor[(2, 15, 8), float32], Tensor[(6, 7, 12), bool], int8, Tensor[(504), int8]) */;
  %40 = logical_and(%16, %17) /* ty=Tensor[(10, 7, 10), bool] */;
  %41 = %28.1;
  %42 = %31.1;
  %43 = erf(%36) /* ty=Tensor[(15, 9, 13), float64] */;
  %44 = %39.1;
  (%40, meta[relay.Constant][0] /* ty=Tensor[(135), int16] */, %41, %var_1482, meta[relay.Constant][1] /* ty=Tensor[(88), uint64] */, %var_1484, %var_1485, %42, meta[relay.Constant][2] /* ty=Tensor[(240), float32] */, %43, %44)
}

def @func_2945(%var_2925: Tensor[(13, 7, 2), float32], %var_2943: Tensor[(135), int16]) -> (Tensor[(13, 7, 2), float64], Tensor[(13, 7, 2), bool], Tensor[(135), int16], Tensor[(135), int16]) {
  %45 = @func_2410() /* ty=Tensor[(13, 7, 2), float32] */;
  %46 = cast(%var_2925, dtype="float64") /* ty=Tensor[(13, 7, 2), float64] */;
  %47 = shape_of(%45, dtype="int32") /* ty=Tensor[(3), int32] */;
  %48 = cast(%45, dtype="float64") /* ty=Tensor[(13, 7, 2), float64] */;
  %49 = dyn.reshape(%46, %47, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %50 = cast(%45, dtype="bool") /* ty=Tensor[(13, 7, 2), bool] */;
  %51 = shape_of(%var_2925, dtype="int32") /* ty=Tensor[(3), int32] */;
  %52 = cast(%var_2925, dtype="bool") /* ty=Tensor[(13, 7, 2), bool] */;
  %53 = dyn.reshape(%50, %51, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %54 = cast(%var_2943, dtype="int16") /* ty=Tensor[(135), int16] */;
  %55 = reshape(%54, newshape=[135]) /* ty=Tensor[(135), int16] */;
  %56 = @func_2338(%55) /* ty=(Tensor[(13, 7, 2), float32], Tensor[(135), int16], Tensor[(15, 9, 13), float64], Tensor[(11, 3, 9), int16], Tensor[(297), int16]) */;
  %57 = divide(%48, %49) /* ty=Tensor[(13, 7, 2), float64] */;
  %58 = not_equal(%52, %53) /* ty=Tensor[(13, 7, 2), bool] */;
  %59 = %56.1;
  (%57, %58, %59, %var_2943)
}

def @func_5183() -> Tensor[(2, 5, 7), bool] {
  %60 = @func_3465() /* ty=(Tensor[(2, 5, 7), bool],) */;
  %60.0
}

def @func_6169() -> (Tensor[(13, 7, 2), float32],) {
  %61 = @func_3828() /* ty=Tensor[(13, 7, 2), float32] */;
  (%61,)
}

def @func_5531(%var_5517: Tensor[(1, 15, 13), uint8], %var_5518: Tensor[(10, 15, 13), uint8]) -> (Tensor[(10, 15, 13), uint8], Tensor[(13, 7, 2), float32], Tensor[(13, 7, 2), float32]) {
  %62 = cast(%var_5517, dtype="uint8") /* ty=Tensor[(1, 15, 13), uint8] */;
  %63 = cast(%var_5518, dtype="uint8") /* ty=Tensor[(10, 15, 13), uint8] */;
  %64 = @func_2799() /* ty=(Tensor[(13, 7, 2), float32],) */;
  %65 = @func_3812() /* ty=(Tensor[(13, 7, 2), float32],) */;
  %66 = right_shift(%62, %63) /* ty=Tensor[(10, 15, 13), uint8] */;
  %67 = %64.0;
  %68 = %65.0;
  (%66, %67, %68)
}

def @func_204(%var_199: Tensor[(11, 3, 9), int16], %var_200: Tensor[(11, 3, 9), int16]) -> Tensor[(11, 3, 9), int16] {
  %69 = cast(%var_200, dtype="int16") /* ty=Tensor[(11, 3, 9), int16] */;
  %70 = shape_of(%var_199, dtype="int32") /* ty=Tensor[(3), int32] */;
  %71 = cast(%var_199, dtype="int16") /* ty=Tensor[(11, 3, 9), int16] */;
  %72 = dyn.reshape(%69, %70, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  left_shift(%71, %72) /* ty=Tensor[(11, 3, 9), int16] */
}

def @func_2799() -> (Tensor[(13, 7, 2), float32],) {
  %73 = @func_2410() /* ty=Tensor[(13, 7, 2), float32] */;
  (%73,)
}

def @func_3179(%var_3159: Tensor[(7, 8), float64]) -> (Tensor[(7, 8), float64],) {
  %74 = cast(%var_3159, dtype="float64") /* ty=Tensor[(7, 8), float64] */;
  %75 = acos(%74) /* ty=Tensor[(7, 8), float64] */;
  (%75,)
}

def @func_730(%var_724: int8, %var_725: Tensor[(6, 7, 12), int8]) -> Tensor[(6, 7, 12), bool] {
  %76 = cast(%var_724, dtype="bool") /* ty=bool */;
  %77 = cast(%var_725, dtype="bool") /* ty=Tensor[(6, 7, 12), bool] */;
  not_equal(%76, %77) /* ty=Tensor[(6, 7, 12), bool] */
}

def @func_2374(%var_2356: Tensor[(4, 8, 9), float64], %var_2363: Tensor[(70), bool], %var_2366: Tensor[(880), uint64]) -> (Tensor[(4, 8, 9), float64], Tensor[(15, 9, 13), float64], Tensor[(70), bool], Tensor[(700), bool], Tensor[(8, 140), int8], Tensor[(880), uint64], Tensor[(1, 385), float64]) {
  %78 = cast(%var_2356, dtype="float64") /* ty=Tensor[(4, 8, 9), float64] */;
  %79 = cast(%var_2363, dtype="bool") /* ty=Tensor[(70), bool] */;
  %80 = cast(meta[relay.Constant][3] /* ty=Tensor[(700), bool] */, dtype="bool") /* ty=Tensor[(700), bool] */;
  %81 = cast(meta[relay.Constant][4] /* ty=Tensor[(8, 140), int8] */, dtype="int8") /* ty=Tensor[(8, 140), int8] */;
  %82 = cast(%var_2366, dtype="uint64") /* ty=Tensor[(880), uint64] */;
  %83 = cast(meta[relay.Constant][5] /* ty=Tensor[(1, 385), float64] */, dtype="float64") /* ty=Tensor[(1, 385), float64] */;
  %84 = reshape(%79, newshape=[10, 7, 1]) /* ty=Tensor[(10, 7, 1), bool] */;
  %85 = reshape(%80, newshape=[10, 7, 10]) /* ty=Tensor[(10, 7, 10), bool] */;
  %86 = reshape(%81, newshape=[560, 2]) /* ty=Tensor[(560, 2), int8] */;
  %87 = reshape(%82, newshape=[880]) /* ty=Tensor[(880), uint64] */;
  %88 = reshape(%83, newshape=[385]) /* ty=Tensor[(385), float64] */;
  %89 = @func_1521(%84, %85, %86, %87, %88) /* ty=(Tensor[(10, 7, 10), bool], Tensor[(135), int16], int8, Tensor[(560, 2), int8], Tensor[(88), uint64], Tensor[(880), uint64], Tensor[(385), float64], Tensor[(6, 7, 12), bool], Tensor[(240), float32], Tensor[(15, 9, 13), float64], Tensor[(6, 7, 12), bool]) */;
  %90 = rsqrt(%78) /* ty=Tensor[(4, 8, 9), float64] */;
  %91 = %89.9;
  (%90, %91, %var_2363, meta[relay.Constant][3] /* ty=Tensor[(700), bool] */, meta[relay.Constant][4] /* ty=Tensor[(8, 140), int8] */, %var_2366, meta[relay.Constant][5] /* ty=Tensor[(1, 385), float64] */)
}

def @func_3207() -> (Tensor[(13, 7, 2), uint64], Tensor[(13, 7, 2), float32], Tensor[(13, 7, 2), float64]) {
  %92 = @func_2717() /* ty=(Tensor[(13, 7, 2), float32],) */;
  %93 = %92.0;
  %94 = cast(meta[relay.Constant][6] /* ty=Tensor[(13, 7, 2), float32] */, dtype="uint64") /* ty=Tensor[(13, 7, 2), uint64] */;
  %95 = shape_of(%93, dtype="int32") /* ty=Tensor[(3), int32] */;
  %96 = cast(%93, dtype="uint64") /* ty=Tensor[(13, 7, 2), uint64] */;
  %97 = dyn.reshape(%94, %95, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %98 = @func_2717() /* ty=(Tensor[(13, 7, 2), float32],) */;
  %99 = cast(meta[relay.Constant][6] /* ty=Tensor[(13, 7, 2), float32] */, dtype="float64") /* ty=Tensor[(13, 7, 2), float64] */;
  %100 = logical_xor(%96, %97) /* ty=Tensor[(13, 7, 2), uint64] */;
  %101 = %98.0;
  %102 = sqrt(%99) /* ty=Tensor[(13, 7, 2), float64] */;
  (%100, %101, %102)
}

def @func_1952(%var_1947: Tensor[(14, 11, 14), uint16], %var_1948: Tensor[(14, 11, 14), uint16]) -> (Tensor[(14, 11, 14), bool],) {
  %103 = cast(%var_1948, dtype="bool") /* ty=Tensor[(14, 11, 14), bool] */;
  %104 = shape_of(%var_1947, dtype="int32") /* ty=Tensor[(3), int32] */;
  %105 = cast(%var_1947, dtype="bool") /* ty=Tensor[(14, 11, 14), bool] */;
  %106 = dyn.reshape(%103, %104, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %107 = not_equal(%105, %106) /* ty=Tensor[(14, 11, 14), bool] */;
  (%107,)
}

def @func_3879() -> Tensor[(13, 7, 2), float32] {
  %108 = @func_2717() /* ty=(Tensor[(13, 7, 2), float32],) */;
  %108.0
}

def @func_3495() -> Tensor[(13, 7, 2), float32] {
  @func_2410() /* ty=Tensor[(13, 7, 2), float32] */
}

def @func_6391(%var_6382: Tensor[(180), bool]) -> (Tensor[(13, 7, 2), float32], bool, bool, Tensor[(180), bool], Tensor[(2, 720), int32]) {
  %109 = @func_3495() /* ty=Tensor[(13, 7, 2), float32] */;
  %110 = cast(%109, dtype="float32") /* ty=Tensor[(13, 7, 2), float32] */;
  %111 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %112 = cast(%var_6382, dtype="bool") /* ty=Tensor[(180), bool] */;
  %113 = cast(meta[relay.Constant][7] /* ty=Tensor[(2, 720), int32] */, dtype="int32") /* ty=Tensor[(2, 720), int32] */;
  %114 = reshape(%111, newshape=[]) /* ty=bool */;
  %115 = reshape(%112, newshape=[90, 2]) /* ty=Tensor[(90, 2), bool] */;
  %116 = reshape(%113, newshape=[720, 2]) /* ty=Tensor[(720, 2), int32] */;
  %117 = @func_6103(%114, %115, %116) /* ty=(Tensor[(12, 9, 4), float64], Tensor[(385), float64], Tensor[(1120), int8], Tensor[(88), uint64], Tensor[(880), uint64], Tensor[(385, 1), float64], Tensor[(12, ?, 15), uint64], bool, Tensor[(90, 2), bool], Tensor[(720, 2), int32], Tensor[(13, 7, 2), float32], Tensor[(13, 7, 2), float32]) */;
  %118 = asinh(%110) /* ty=Tensor[(13, 7, 2), float32] */;
  %119 = %117.7;
  (%118, %119, False /* ty=bool */, %var_6382, meta[relay.Constant][7] /* ty=Tensor[(2, 720), int32] */)
}

def @func_1054(%var_1047: Tensor[(15, 9, 1), int16]) -> (Tensor[(15, 9, 13), int16],) {
  %120 = cast(%var_1047, dtype="int16") /* ty=Tensor[(15, 9, 1), int16] */;
  %121 = cast(meta[relay.Constant][8] /* ty=Tensor[(15, 9, 13), int16] */, dtype="int16") /* ty=Tensor[(15, 9, 13), int16] */;
  %122 = maximum(%120, %121) /* ty=Tensor[(15, 9, 13), int16] */;
  (%122,)
}

def @func_5800() -> (Tensor[(13, 7, 2), float32],) {
  %123 = @func_3828() /* ty=Tensor[(13, 7, 2), float32] */;
  (%123,)
}

def @func_3775(%var_3769: Tensor[(240), float32]) -> (Tensor[(13, 7, 2), float32], int8, Tensor[(240), float32]) {
  %124 = @func_2799() /* ty=(Tensor[(13, 7, 2), float32],) */;
  %125 = cast(%var_3769, dtype="float32") /* ty=Tensor[(240), float32] */;
  %126 = reshape(%125, newshape=[2, 15, 8]) /* ty=Tensor[(2, 15, 8), float32] */;
  %127 = @func_1343(%126) /* ty=(Tensor[(2, 15, 8), float32], Tensor[(6, 7, 12), bool], int8, Tensor[(504), int8]) */;
  %128 = %124.0;
  %129 = %127.2;
  (%128, %129, %var_3769)
}

def @func_4667(%var_4642: Tensor[(156), int8], %var_4661: Tensor[(8, 70), bool]) -> (Tensor[(432), float32], Tensor[(6, 7, 12), bool], Tensor[(88), uint64], Tensor[(156), int8], Tensor[(14), float32], Tensor[(156), int8], Tensor[(880), uint64], Tensor[(288), float64], Tensor[(880), uint64], Tensor[(8, 70), bool]) {
  %130 = @func_3856() /* ty=(Tensor[(13, 7, 2), float32], Tensor[(12, 9, 4), float32], Tensor[(432), float32]) */;
  %131 = cast(meta[relay.Constant][9] /* ty=Tensor[(88), uint64] */, dtype="uint64") /* ty=Tensor[(88), uint64] */;
  %132 = reshape(%131, newshape=[2, 44]) /* ty=Tensor[(2, 44), uint64] */;
  %133 = @func_3305(%132) /* ty=(Tensor[(13, 7, 2), float32], Tensor[(6, 7, 12), bool], Tensor[(2, 44), uint64], Tensor[(880), uint64], Tensor[(504), int8]) */;
  %134 = cast(meta[relay.Constant][10] /* ty=Tensor[(14), float32] */, dtype="float32") /* ty=Tensor[(14), float32] */;
  %135 = cast(%var_4642, dtype="int8") /* ty=Tensor[(156), int8] */;
  %136 = reshape(%134, newshape=[7, 1, 2]) /* ty=Tensor[(7, 1, 2), float32] */;
  %137 = reshape(%135, newshape=[156]) /* ty=Tensor[(156), int8] */;
  %138 = @func_1638(%136, %137) /* ty=(Tensor[(11, 5, 7), uint8], Tensor[(385), float64], Tensor[(13, 4, 3), int8], Tensor[(156), int8], Tensor[(7, 1, 2), float64], Tensor[(7, ?, 2), float32], Tensor[(440, 2), uint64], int64, Tensor[(88), uint64]) */;
  %139 = cast(meta[relay.Constant][11] /* ty=Tensor[(288), float64] */, dtype="float64") /* ty=Tensor[(288), float64] */;
  %140 = cast(meta[relay.Constant][12] /* ty=Tensor[(1, 70), bool] */, dtype="bool") /* ty=Tensor[(1, 70), bool] */;
  %141 = cast(meta[relay.Constant][13] /* ty=Tensor[(880), uint64] */, dtype="uint64") /* ty=Tensor[(880), uint64] */;
  %142 = reshape(%139, newshape=[4, 8, 9]) /* ty=Tensor[(4, 8, 9), float64] */;
  %143 = reshape(%140, newshape=[70]) /* ty=Tensor[(70), bool] */;
  %144 = reshape(%141, newshape=[880]) /* ty=Tensor[(880), uint64] */;
  %145 = @func_2374(%142, %143, %144) /* ty=(Tensor[(4, 8, 9), float64], Tensor[(15, 9, 13), float64], Tensor[(70), bool], Tensor[(700), bool], Tensor[(8, 140), int8], Tensor[(880), uint64], Tensor[(1, 385), float64]) */;
  %146 = cast(meta[relay.Constant][12] /* ty=Tensor[(1, 70), bool] */, dtype="bool") /* ty=Tensor[(1, 70), bool] */;
  %147 = cast(%var_4661, dtype="bool") /* ty=Tensor[(8, 70), bool] */;
  %148 = %130.2;
  %149 = %133.1;
  %150 = %138.3;
  %151 = %145.5;
  %152 = greater(%146, %147) /* ty=Tensor[(8, 70), bool] */;
  (%148, %149, meta[relay.Constant][9] /* ty=Tensor[(88), uint64] */, %150, meta[relay.Constant][10] /* ty=Tensor[(14), float32] */, %var_4642, %151, meta[relay.Constant][11] /* ty=Tensor[(288), float64] */, meta[relay.Constant][13] /* ty=Tensor[(880), uint64] */, %152)
}

def @func_5017(%var_4997: Tensor[(9, 8, 13), float64], %var_4998: Tensor[(9, 8, 13), float64]) -> (Tensor[(9, 8, 13), float64], Tensor[(13, 7, 2), float32], Tensor[(182), float32]) {
  %153 = cast(%var_4998, dtype="float64") /* ty=Tensor[(9, 8, 13), float64] */;
  %154 = shape_of(%var_4997, dtype="int32") /* ty=Tensor[(3), int32] */;
  %155 = cast(%var_4997, dtype="float64") /* ty=Tensor[(9, 8, 13), float64] */;
  %156 = dyn.reshape(%153, %154, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %157 = cast(meta[relay.Constant][14] /* ty=Tensor[(182), float32] */, dtype="float32") /* ty=Tensor[(182), float32] */;
  %158 = reshape(%157, newshape=[13, 7, 2]) /* ty=Tensor[(13, 7, 2), float32] */;
  %159 = @func_3442(%158) /* ty=(Tensor[(13, 7, 2), float32],) */;
  %160 = floor_divide(%155, %156) /* ty=Tensor[(9, 8, 13), float64] */;
  %161 = %159.0;
  (%160, %161, meta[relay.Constant][14] /* ty=Tensor[(182), float32] */)
}

def @func_3672(%var_3669: Tensor[(12, 9, 4), float32]) -> Tensor[(12, 9, 4), float32] {
  %162 = cast(%var_3669, dtype="float32") /* ty=Tensor[(12, 9, 4), float32] */;
  log2(%162) /* ty=Tensor[(12, 9, 4), float32] */
}

def @func_4218() -> (Tensor[(2, 5, 7), bool],) {
  %163 = @func_3465() /* ty=(Tensor[(2, 5, 7), bool],) */;
  %164 = %163.0;
  (%164,)
}

def @func_2410() -> Tensor[(13, 7, 2), float32] {
  %165 = @func_2193() /* ty=(Tensor[(13, 7, 2), float32],) */;
  %166 = %165.0;
  %167 = cast(%166, dtype="float32") /* ty=Tensor[(13, 7, 2), float32] */;
  log(%167) /* ty=Tensor[(13, 7, 2), float32] */
}

def @func_40(%var_15: Tensor[(11, 5, 7), float64]) -> Tensor[(11, 5, 7), uint8] {
  %168 = cast(%var_15, dtype="float64") /* ty=Tensor[(11, 5, 7), float64] */;
  %169 = log2(%168) /* ty=Tensor[(11, 5, 7), float64] */;
  %170 = cast(%var_15, dtype="uint8") /* ty=Tensor[(11, 5, 7), uint8] */;
  %171 = shape_of(%169, dtype="int32") /* ty=Tensor[(3), int32] */;
  %172 = cast(%169, dtype="uint8") /* ty=Tensor[(11, 5, 7), uint8] */;
  %173 = dyn.reshape(%170, %171, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  logical_xor(%172, %173) /* ty=Tensor[(11, 5, 7), uint8] */
}

def @func_2696(%var_2668: Tensor[(9, 4, 16), float64], %var_2680: Tensor[(9, 4, 16), float64]) -> Tensor[(9, 4, 16), float64] {
  %174 = cast(%var_2668, dtype="float64") /* ty=Tensor[(9, 4, 16), float64] */;
  %175 = tan(%174) /* ty=Tensor[(9, 4, 16), float64] */;
  %176 = cast(%var_2680, dtype="float64") /* ty=Tensor[(9, 4, 16), float64] */;
  %177 = shape_of(%175, dtype="int32") /* ty=Tensor[(3), int32] */;
  %178 = cast(%175, dtype="float64") /* ty=Tensor[(9, 4, 16), float64] */;
  %179 = dyn.reshape(%176, %177, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  divide(%178, %179) /* ty=Tensor[(9, 4, 16), float64] */
}

def @func_4083(%var_4068: Tensor[(135), int16]) -> (Tensor[(13, 7, 2), float32], Tensor[(15, 9, 13), int16], Tensor[(135), int16], Tensor[(13, 7, 2), float32], Tensor[(13, 7, 2), uint64]) {
  %180 = @func_2799() /* ty=(Tensor[(13, 7, 2), float32],) */;
  %181 = cast(%var_4068, dtype="int16") /* ty=Tensor[(135), int16] */;
  %182 = reshape(%181, newshape=[15, 9, 1]) /* ty=Tensor[(15, 9, 1), int16] */;
  %183 = @func_1054(%182) /* ty=(Tensor[(15, 9, 13), int16],) */;
  %184 = @func_3207() /* ty=(Tensor[(13, 7, 2), uint64], Tensor[(13, 7, 2), float32], Tensor[(13, 7, 2), float64]) */;
  %185 = %184.1;
  %186 = cast(%185, dtype="float32") /* ty=Tensor[(13, 7, 2), float32] */;
  %187 = reshape(%186, newshape=[13, 7, 2]) /* ty=Tensor[(13, 7, 2), float32] */;
  %188 = @func_2659(%187) /* ty=(Tensor[(13, 7, 2), uint64],) */;
  %189 = %180.0;
  %190 = %183.0;
  %191 = %188.0;
  (%189, %190, %var_4068, %185, %191)
}

def @func_5954() -> (Tensor[(13, 7, 2), float32],) {
  %192 = @func_3812() /* ty=(Tensor[(13, 7, 2), float32],) */;
  %193 = %192.0;
  (%193,)
}

def @func_6431() -> (Tensor[(13, 7, 2), float32],) {
  %194 = @func_5954() /* ty=(Tensor[(13, 7, 2), float32],) */;
  %195 = %194.0;
  (%195,)
}

def @func_6598(%var_6546: Tensor[(2156), uint16], %var_6568: Tensor[(385), float64], %var_6574: Tensor[(700), bool], %var_6589: Tensor[(39, 4), int8]) -> (Tensor[(14, 11, 14), bool], Tensor[(2156), uint16], Tensor[(2, 5, 7), float64], Tensor[(13, 7, 2), float32], Tensor[(385), float64], Tensor[(576), float64], Tensor[(700), bool], Tensor[(440, 2), uint64], Tensor[(2, 5, 7), int8], Tensor[(11, 5, 7), uint8], Tensor[(14), float32], Tensor[(39, 4), int8]) {
  %196 = cast(%var_6546, dtype="uint16") /* ty=Tensor[(2156), uint16] */;
  %197 = cast(%var_6546, dtype="uint16") /* ty=Tensor[(2156), uint16] */;
  %198 = reshape(%196, newshape=[14, 11, 14]) /* ty=Tensor[(14, 11, 14), uint16] */;
  %199 = reshape(%197, newshape=[14, 11, 14]) /* ty=Tensor[(14, 11, 14), uint16] */;
  %200 = @func_1952(%198, %199) /* ty=(Tensor[(14, 11, 14), bool],) */;
  %201 = @func_4810() /* ty=Tensor[(2, 5, 7), bool] */;
  %202 = cast(%201, dtype="float64") /* ty=Tensor[(2, 5, 7), float64] */;
  %203 = asinh(%202) /* ty=Tensor[(2, 5, 7), float64] */;
  %204 = cast(%201, dtype="int64") /* ty=Tensor[(2, 5, 7), int64] */;
  %205 = shape_of(%203, dtype="int32") /* ty=Tensor[(3), int32] */;
  %206 = cast(%203, dtype="int64") /* ty=Tensor[(2, 5, 7), int64] */;
  %207 = dyn.reshape(%204, %205, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %208 = bitwise_xor(%206, %207) /* ty=Tensor[(2, 5, 7), int64] */;
  %209 = cast(%201, dtype="float64") /* ty=Tensor[(2, 5, 7), float64] */;
  %210 = shape_of(%208, dtype="int32") /* ty=Tensor[(3), int32] */;
  %211 = cast(%208, dtype="float64") /* ty=Tensor[(2, 5, 7), float64] */;
  %212 = dyn.reshape(%209, %210, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %213 = cast(%var_6568, dtype="float64") /* ty=Tensor[(385), float64] */;
  %214 = cast(%var_6568, dtype="uint8") /* ty=Tensor[(385), uint8] */;
  %215 = reshape(%213, newshape=[385]) /* ty=Tensor[(385), float64] */;
  %216 = reshape(%214, newshape=[11, 5, 7]) /* ty=Tensor[(11, 5, 7), uint8] */;
  %217 = @func_3601(%215, %216) /* ty=(Tensor[(13, 7, 2), float32], Tensor[(385), float64], Tensor[(11, 5, 7), float32], Tensor[(88), uint64], Tensor[(14), float32], Tensor[(156), int8]) */;
  %218 = cast(%var_6574, dtype="bool") /* ty=Tensor[(700), bool] */;
  %219 = cast(meta[relay.Constant][15] /* ty=Tensor[(440, 2), uint64] */, dtype="uint64") /* ty=Tensor[(440, 2), uint64] */;
  %220 = cast(%var_6568, dtype="float64") /* ty=Tensor[(385), float64] */;
  %221 = reshape(%218, newshape=[700]) /* ty=Tensor[(700), bool] */;
  %222 = reshape(%219, newshape=[880]) /* ty=Tensor[(880), uint64] */;
  %223 = reshape(%220, newshape=[385, 1]) /* ty=Tensor[(385, 1), float64] */;
  %224 = @func_4965(%221, %222, %223) /* ty=(Tensor[(13, 7, 2), float32], Tensor[(135), int16], Tensor[(7, 10), bool], Tensor[(700), bool], Tensor[(1120), int8], Tensor[(880), uint64], Tensor[(385, 1), float64], Tensor[(13, 7, 2), float32], Tensor[(576), float64]) */;
  %225 = cast(%201, dtype="bool") /* ty=Tensor[(2, 5, 7), bool] */;
  %226 = shape_of(%203, dtype="int32") /* ty=Tensor[(3), int32] */;
  %227 = cast(%203, dtype="bool") /* ty=Tensor[(2, 5, 7), bool] */;
  %228 = dyn.reshape(%225, %226, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %229 = less(%227, %228) /* ty=Tensor[(2, 5, 7), bool] */;
  %230 = cast(%229, dtype="int8") /* ty=Tensor[(2, 5, 7), int8] */;
  %231 = shape_of(%203, dtype="int32") /* ty=Tensor[(3), int32] */;
  %232 = cast(%203, dtype="int8") /* ty=Tensor[(2, 5, 7), int8] */;
  %233 = dyn.reshape(%230, %231, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %234 = cast(meta[relay.Constant][16] /* ty=Tensor[(14), float32] */, dtype="float32") /* ty=Tensor[(14), float32] */;
  %235 = cast(%var_6589, dtype="int8") /* ty=Tensor[(39, 4), int8] */;
  %236 = reshape(%234, newshape=[7, 1, 2]) /* ty=Tensor[(7, 1, 2), float32] */;
  %237 = reshape(%235, newshape=[156]) /* ty=Tensor[(156), int8] */;
  %238 = @func_1638(%236, %237) /* ty=(Tensor[(11, 5, 7), uint8], Tensor[(385), float64], Tensor[(13, 4, 3), int8], Tensor[(156), int8], Tensor[(7, 1, 2), float64], Tensor[(7, ?, 2), float32], Tensor[(440, 2), uint64], int64, Tensor[(88), uint64]) */;
  %239 = %200.0;
  %240 = power(%211, %212) /* ty=Tensor[(2, 5, 7), float64] */;
  %241 = %217.0;
  %242 = %224.8;
  %243 = multiply(%232, %233) /* ty=Tensor[(2, 5, 7), int8] */;
  %244 = %238.0;
  (%239, %var_6546, %240, %241, %var_6568, %242, %var_6574, meta[relay.Constant][15] /* ty=Tensor[(440, 2), uint64] */, %243, %244, meta[relay.Constant][16] /* ty=Tensor[(14), float32] */, %var_6589)
}

def @func_2767(%var_2758: Tensor[(16, 7, 8), uint64], %var_2759: Tensor[(16, 7, 8), uint64]) -> (Tensor[(16, 7, 8), uint64],) {
  %245 = cast(%var_2759, dtype="uint64") /* ty=Tensor[(16, 7, 8), uint64] */;
  %246 = shape_of(%var_2758, dtype="int32") /* ty=Tensor[(3), int32] */;
  %247 = cast(%var_2758, dtype="uint64") /* ty=Tensor[(16, 7, 8), uint64] */;
  %248 = dyn.reshape(%245, %246, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %249 = left_shift(%247, %248) /* ty=Tensor[(16, 7, 8), uint64] */;
  (%249,)
}

def @func_3601(%var_3564: Tensor[(385), float64], %var_3571: Tensor[(11, 5, 7), uint8]) -> (Tensor[(13, 7, 2), float32], Tensor[(385), float64], Tensor[(11, 5, 7), float32], Tensor[(88), uint64], Tensor[(14), float32], Tensor[(156), int8]) {
  %250 = cast(%var_3564, dtype="float64") /* ty=Tensor[(385), float64] */;
  %251 = reshape(%250, newshape=[11, 5, 7]) /* ty=Tensor[(11, 5, 7), float64] */;
  %252 = @func_40(%251) /* ty=Tensor[(11, 5, 7), uint8] */;
  %253 = cast(%var_3571, dtype="uint64") /* ty=Tensor[(11, 5, 7), uint64] */;
  %254 = shape_of(%252, dtype="int32") /* ty=Tensor[(3), int32] */;
  %255 = cast(%252, dtype="uint64") /* ty=Tensor[(11, 5, 7), uint64] */;
  %256 = dyn.reshape(%253, %254, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %257 = multiply(%255, %256) /* ty=Tensor[(11, 5, 7), uint64] */;
  %258 = cast(%257, dtype="float32") /* ty=Tensor[(11, 5, 7), float32] */;
  %259 = cast(meta[relay.Constant][17] /* ty=Tensor[(14), float32] */, dtype="float32") /* ty=Tensor[(14), float32] */;
  %260 = cast(meta[relay.Constant][18] /* ty=Tensor[(156), int8] */, dtype="int8") /* ty=Tensor[(156), int8] */;
  %261 = reshape(%259, newshape=[7, 1, 2]) /* ty=Tensor[(7, 1, 2), float32] */;
  %262 = reshape(%260, newshape=[156]) /* ty=Tensor[(156), int8] */;
  %263 = @func_1638(%261, %262) /* ty=(Tensor[(11, 5, 7), uint8], Tensor[(385), float64], Tensor[(13, 4, 3), int8], Tensor[(156), int8], Tensor[(7, 1, 2), float64], Tensor[(7, ?, 2), float32], Tensor[(440, 2), uint64], int64, Tensor[(88), uint64]) */;
  %264 = @func_3495() /* ty=Tensor[(13, 7, 2), float32] */;
  %265 = cosh(%258) /* ty=Tensor[(11, 5, 7), float32] */;
  %266 = %263.8;
  (%264, %var_3564, %265, %266, meta[relay.Constant][17] /* ty=Tensor[(14), float32] */, meta[relay.Constant][18] /* ty=Tensor[(156), int8] */)
}

def @func_4041(%var_3983: Tensor[(880), uint64], %var_3984: Tensor[(504), int8]) -> (Tensor[(13, 7, 2), float32], Tensor[(135), int16], Tensor[(88), uint64], Tensor[(504), int8], Tensor[(11, 8, 10), float64], Tensor[(13, 7, 2), float32], Tensor[(15, 9, 13), float64]) {
  %267 = @func_3207() /* ty=(Tensor[(13, 7, 2), uint64], Tensor[(13, 7, 2), float32], Tensor[(13, 7, 2), float64]) */;
  %268 = cast(meta[relay.Constant][20] /* ty=Tensor[(88), uint64] */, dtype="uint64") /* ty=Tensor[(88), uint64] */;
  %269 = cast(%var_3983, dtype="uint64") /* ty=Tensor[(880), uint64] */;
  %270 = cast(%var_3984, dtype="int8") /* ty=Tensor[(504), int8] */;
  %271 = reshape(%268, newshape=[11, 8, 1]) /* ty=Tensor[(11, 8, 1), uint64] */;
  %272 = reshape(%269, newshape=[11, 8, 10]) /* ty=Tensor[(11, 8, 10), uint64] */;
  %273 = reshape(%270, newshape=[504]) /* ty=Tensor[(504), int8] */;
  %274 = @func_953(%271, %272, %273) /* ty=(Tensor[(11, 8, 10), float32], Tensor[(6, 7, 12), bool], int8, Tensor[(504), int8]) */;
  %275 = %274.0;
  %276 = cast(%var_3983, dtype="float64") /* ty=Tensor[(880), float64] */;
  %277 = shape_of(%275, dtype="int32") /* ty=Tensor[(3), int32] */;
  %278 = cast(%275, dtype="float64") /* ty=Tensor[(11, 8, 10), float64] */;
  %279 = dyn.reshape(%276, %277, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %280 = @func_2193() /* ty=(Tensor[(13, 7, 2), float32],) */;
  %281 = cast(meta[relay.Constant][19] /* ty=Tensor[(135), int16] */, dtype="int16") /* ty=Tensor[(135), int16] */;
  %282 = reshape(%281, newshape=[15, 9, 1]) /* ty=Tensor[(15, 9, 1), int16] */;
  %283 = @func_1054(%282) /* ty=(Tensor[(15, 9, 13), int16],) */;
  %284 = %283.0;
  %285 = cast(%284, dtype="float64") /* ty=Tensor[(15, 9, 13), float64] */;
  %286 = %267.1;
  %287 = floor_divide(%278, %279) /* ty=Tensor[(11, 8, 10), float64] */;
  %288 = %280.0;
  %289 = sigmoid(%285) /* ty=Tensor[(15, 9, 13), float64] */;
  (%286, meta[relay.Constant][19] /* ty=Tensor[(135), int16] */, meta[relay.Constant][20] /* ty=Tensor[(88), uint64] */, %var_3984, %287, %288, %289)
}

def @func_5140() -> (Tensor[(13, 7, 2), float32], Tensor[(13, 7, 2), bool], Tensor[(2, 5, 7), float32]) {
  %290 = @func_2799() /* ty=(Tensor[(13, 7, 2), float32],) */;
  %291 = %290.0;
  %292 = cast(%291, dtype="float32") /* ty=Tensor[(13, 7, 2), float32] */;
  %293 = reshape(%292, newshape=[13, 7, 2]) /* ty=Tensor[(13, 7, 2), float32] */;
  %294 = @func_3745(%293) /* ty=(Tensor[(13, 7, 2), bool],) */;
  %295 = @func_4810() /* ty=Tensor[(2, 5, 7), bool] */;
  %296 = cast(%295, dtype="float32") /* ty=Tensor[(2, 5, 7), float32] */;
  %297 = %294.0;
  %298 = atanh(%296) /* ty=Tensor[(2, 5, 7), float32] */;
  (%291, %297, %298)
}

def @func_2448(%var_2440: Tensor[(2, 720), int32]) -> (Tensor[(13, 7, 2), float32], Tensor[(9, 16, 10), bool], Tensor[(2, 720), int32]) {
  %299 = @func_2193() /* ty=(Tensor[(13, 7, 2), float32],) */;
  %300 = cast(%var_2440, dtype="int32") /* ty=Tensor[(2, 720), int32] */;
  %301 = cast(%var_2440, dtype="int32") /* ty=Tensor[(2, 720), int32] */;
  %302 = reshape(%300, newshape=[9, 16, 10]) /* ty=Tensor[(9, 16, 10), int32] */;
  %303 = reshape(%301, newshape=[9, 16, 10]) /* ty=Tensor[(9, 16, 10), int32] */;
  %304 = %299.0;
  %305 = @func_1935(%302, %303) /* ty=Tensor[(9, 16, 10), bool] */;
  (%304, %305, %var_2440)
}

def @func_2338(%var_2302: Tensor[(135), int16]) -> (Tensor[(13, 7, 2), float32], Tensor[(135), int16], Tensor[(15, 9, 13), float64], Tensor[(11, 3, 9), int16], Tensor[(297), int16]) {
  %306 = @func_2193() /* ty=(Tensor[(13, 7, 2), float32],) */;
  %307 = cast(%var_2302, dtype="int16") /* ty=Tensor[(135), int16] */;
  %308 = reshape(%307, newshape=[15, 9, 1]) /* ty=Tensor[(15, 9, 1), int16] */;
  %309 = @func_1054(%308) /* ty=(Tensor[(15, 9, 13), int16],) */;
  %310 = %309.0;
  %311 = cast(%310, dtype="float64") /* ty=Tensor[(15, 9, 13), float64] */;
  %312 = cast(meta[relay.Constant][21] /* ty=Tensor[(297), int16] */, dtype="int16") /* ty=Tensor[(297), int16] */;
  %313 = cast(meta[relay.Constant][21] /* ty=Tensor[(297), int16] */, dtype="int16") /* ty=Tensor[(297), int16] */;
  %314 = reshape(%312, newshape=[11, 3, 9]) /* ty=Tensor[(11, 3, 9), int16] */;
  %315 = reshape(%313, newshape=[11, 3, 9]) /* ty=Tensor[(11, 3, 9), int16] */;
  %316 = %306.0;
  %317 = log10(%311) /* ty=Tensor[(15, 9, 13), float64] */;
  %318 = @func_204(%314, %315) /* ty=Tensor[(11, 3, 9), int16] */;
  (%316, %var_2302, %317, %318, meta[relay.Constant][21] /* ty=Tensor[(297), int16] */)
}

def @func_4589(%var_4583: Tensor[(10, 8), float64]) -> Tensor[(10, 8), float64] {
  %319 = cast(%var_4583, dtype="float64") /* ty=Tensor[(10, 8), float64] */;
  log(%319) /* ty=Tensor[(10, 8), float64] */
}

def @func_4886(%var_4869: Tensor[(880), uint64]) -> (Tensor[(13, 7, 2), float32], Tensor[(880), uint64], Tensor[(288), float64], Tensor[(70), bool], Tensor[(880), uint64], Tensor[(13, 7, 2), float32]) {
  %320 = @func_2717() /* ty=(Tensor[(13, 7, 2), float32],) */;
  %321 = cast(meta[relay.Constant][22] /* ty=Tensor[(288), float64] */, dtype="float64") /* ty=Tensor[(288), float64] */;
  %322 = cast(meta[relay.Constant][23] /* ty=Tensor[(70), bool] */, dtype="bool") /* ty=Tensor[(70), bool] */;
  %323 = cast(%var_4869, dtype="uint64") /* ty=Tensor[(880), uint64] */;
  %324 = reshape(%321, newshape=[4, 8, 9]) /* ty=Tensor[(4, 8, 9), float64] */;
  %325 = reshape(%322, newshape=[70]) /* ty=Tensor[(70), bool] */;
  %326 = reshape(%323, newshape=[880]) /* ty=Tensor[(880), uint64] */;
  %327 = @func_2374(%324, %325, %326) /* ty=(Tensor[(4, 8, 9), float64], Tensor[(15, 9, 13), float64], Tensor[(70), bool], Tensor[(700), bool], Tensor[(8, 140), int8], Tensor[(880), uint64], Tensor[(1, 385), float64]) */;
  %328 = @func_4317() /* ty=(Tensor[(13, 7, 2), float32],) */;
  %329 = %320.0;
  %330 = %327.5;
  %331 = %328.0;
  (%329, %330, meta[relay.Constant][22] /* ty=Tensor[(288), float64] */, meta[relay.Constant][23] /* ty=Tensor[(70), bool] */, %var_4869, %331)
}

def @func_5204() -> Tensor[(13, 7, 2), float32] {
  %332 = @func_3812() /* ty=(Tensor[(13, 7, 2), float32],) */;
  %332.0
}

def @func_3745(%var_3721: Tensor[(13, 7, 2), float32]) -> (Tensor[(13, 7, 2), bool],) {
  %333 = @func_2410() /* ty=Tensor[(13, 7, 2), float32] */;
  %334 = cast(%var_3721, dtype="bool") /* ty=Tensor[(13, 7, 2), bool] */;
  %335 = shape_of(%333, dtype="int32") /* ty=Tensor[(3), int32] */;
  %336 = cast(%333, dtype="bool") /* ty=Tensor[(13, 7, 2), bool] */;
  %337 = dyn.reshape(%334, %335, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %338 = equal(%336, %337) /* ty=Tensor[(13, 7, 2), bool] */;
  (%338,)
}

def @func_4253(%var_4240: Tensor[(2156), uint16]) -> (Tensor[(13, 7, 2), float32], Tensor[(88), uint64], Tensor[(2156), uint16], Tensor[(13, 7, 2), bool], Tensor[(13, 4, 3), int8], Tensor[(156), int8]) {
  %339 = @func_2799() /* ty=(Tensor[(13, 7, 2), float32],) */;
  %340 = cast(%var_4240, dtype="uint16") /* ty=Tensor[(2156), uint16] */;
  %341 = reshape(%340, newshape=[7, 308]) /* ty=Tensor[(7, 308), uint16] */;
  %342 = @func_2546(%341) /* ty=(Tensor[(13, 7, 2), float32], Tensor[(14, 11, 14), bool], Tensor[(7, 308), uint16], Tensor[(504), int8], Tensor[(88), uint64], Tensor[(40, 22), uint64], Tensor[(504), int8]) */;
  %343 = %339.0;
  %344 = cast(%343, dtype="float32") /* ty=Tensor[(13, 7, 2), float32] */;
  %345 = reshape(%344, newshape=[13, 7, 2]) /* ty=Tensor[(13, 7, 2), float32] */;
  %346 = @func_3745(%345) /* ty=(Tensor[(13, 7, 2), bool],) */;
  %347 = cast(meta[relay.Constant][24] /* ty=Tensor[(156), int8] */, dtype="int8") /* ty=Tensor[(156), int8] */;
  %348 = cast(meta[relay.Constant][24] /* ty=Tensor[(156), int8] */, dtype="int8") /* ty=Tensor[(156), int8] */;
  %349 = reshape(%347, newshape=[13, 4, 3]) /* ty=Tensor[(13, 4, 3), int8] */;
  %350 = reshape(%348, newshape=[13, 4, 3]) /* ty=Tensor[(13, 4, 3), int8] */;
  %351 = %342.4;
  %352 = %346.0;
  %353 = @func_1437(%349, %350) /* ty=Tensor[(13, 4, 3), int8] */;
  (%343, %351, %var_4240, %352, %353, meta[relay.Constant][24] /* ty=Tensor[(156), int8] */)
}

def @func_4484(%var_4391: Tensor[(7, 2), float32], %var_4419: Tensor[(880), uint64], %var_4420: Tensor[(504), int8], %var_4439: Tensor[(7, 4, 2), float64], %var_4474: Tensor[(7, 308), uint16], %var_4477: Tensor[(7, 10, 2), float64]) -> (Tensor[(13, 7, 2), float32], Tensor[(7, 2), float32], Tensor[(156), int8], Tensor[(13, 7, 2), float32], Tensor[(2, 5, 7), bool], Tensor[(88), uint64], Tensor[(880), uint64], Tensor[(504), int8], Tensor[(15, 9, 13), float64], Tensor[(11, 8, 10), float32], Tensor[(135), int16], Tensor[(1440), int32], Tensor[(504), int8], Tensor[(7, 4, 2), float64], Tensor[(13, 4, 3), int8], Tensor[(7, 308), uint16], Tensor[(7, 10, 2), int16]) {
  %354 = @func_3465() /* ty=(Tensor[(2, 5, 7), bool],) */;
  %355 = cast(%var_4419, dtype="uint64") /* ty=Tensor[(880), uint64] */;
  %356 = cast(%var_4420, dtype="int8") /* ty=Tensor[(504), int8] */;
  %357 = reshape(%355, newshape=[880]) /* ty=Tensor[(880), uint64] */;
  %358 = reshape(%356, newshape=[504]) /* ty=Tensor[(504), int8] */;
  %359 = @func_4041(%357, %358) /* ty=(Tensor[(13, 7, 2), float32], Tensor[(135), int16], Tensor[(88), uint64], Tensor[(504), int8], Tensor[(11, 8, 10), float64], Tensor[(13, 7, 2), float32], Tensor[(15, 9, 13), float64]) */;
  %360 = cast(%var_4419, dtype="uint64") /* ty=Tensor[(880), uint64] */;
  %361 = cast(%var_4420, dtype="int8") /* ty=Tensor[(504), int8] */;
  %362 = reshape(%360, newshape=[880]) /* ty=Tensor[(880), uint64] */;
  %363 = reshape(%361, newshape=[504]) /* ty=Tensor[(504), int8] */;
  %364 = @func_4041(%362, %363) /* ty=(Tensor[(13, 7, 2), float32], Tensor[(135), int16], Tensor[(88), uint64], Tensor[(504), int8], Tensor[(11, 8, 10), float64], Tensor[(13, 7, 2), float32], Tensor[(15, 9, 13), float64]) */;
  %365 = cast(meta[relay.Constant][26] /* ty=Tensor[(135), int16] */, dtype="int16") /* ty=Tensor[(135), int16] */;
  %366 = cast(%var_4420, dtype="int8") /* ty=Tensor[(504), int8] */;
  %367 = cast(meta[relay.Constant][27] /* ty=Tensor[(1440), int32] */, dtype="int32") /* ty=Tensor[(1440), int32] */;
  %368 = reshape(%365, newshape=[135]) /* ty=Tensor[(135), int16] */;
  %369 = reshape(%366, newshape=[504]) /* ty=Tensor[(504), int8] */;
  %370 = reshape(%367, newshape=[1440]) /* ty=Tensor[(1440), int32] */;
  %371 = @func_4159(%368, %369, %370) /* ty=(Tensor[(13, 7, 2), float32], Tensor[(15, 9, 13), int16], Tensor[(135), int16], Tensor[(11, 8, 10), float32], Tensor[(2, 44), uint64], Tensor[(1, 880), uint64], Tensor[(504), int8], Tensor[(9, 16, 10), bool], Tensor[(1440), int32], Tensor[(13, 7, 2), float32], Tensor[(16, 7, 8), uint64], Tensor[(896), uint64], Tensor[(13, 7, 2), float32], Tensor[(13, 7, 2), float32]) */;
  %372 = %359.2;
  %373 = cast(%372, dtype="uint64") /* ty=Tensor[(88), uint64] */;
  %374 = %371.3;
  %375 = cast(%374, dtype="uint64") /* ty=Tensor[(11, 8, 10), uint64] */;
  %376 = cast(%var_4420, dtype="int8") /* ty=Tensor[(504), int8] */;
  %377 = reshape(%373, newshape=[11, 8, 1]) /* ty=Tensor[(11, 8, 1), uint64] */;
  %378 = reshape(%375, newshape=[11, 8, 10]) /* ty=Tensor[(11, 8, 10), uint64] */;
  %379 = reshape(%376, newshape=[504]) /* ty=Tensor[(504), int8] */;
  %380 = @func_953(%377, %378, %379) /* ty=(Tensor[(11, 8, 10), float32], Tensor[(6, 7, 12), bool], int8, Tensor[(504), int8]) */;
  %381 = cast(%var_4391, dtype="float32") /* ty=Tensor[(7, 2), float32] */;
  %382 = cast(meta[relay.Constant][25] /* ty=Tensor[(156), int8] */, dtype="int8") /* ty=Tensor[(156), int8] */;
  %383 = reshape(%381, newshape=[7, 1, 2]) /* ty=Tensor[(7, 1, 2), float32] */;
  %384 = reshape(%382, newshape=[156]) /* ty=Tensor[(156), int8] */;
  %385 = @func_1638(%383, %384) /* ty=(Tensor[(11, 5, 7), uint8], Tensor[(385), float64], Tensor[(13, 4, 3), int8], Tensor[(156), int8], Tensor[(7, 1, 2), float64], Tensor[(7, ?, 2), float32], Tensor[(440, 2), uint64], int64, Tensor[(88), uint64]) */;
  %386 = %385.4;
  %387 = cast(%386, dtype="float64") /* ty=Tensor[(7, 1, 2), float64] */;
  %388 = acos(%387) /* ty=Tensor[(7, 1, 2), float64] */;
  %389 = cast(%388, dtype="float64") /* ty=Tensor[(7, 1, 2), float64] */;
  %390 = exp(%389) /* ty=Tensor[(7, 1, 2), float64] */;
  %391 = cast(%390, dtype="uint16") /* ty=Tensor[(7, 1, 2), uint16] */;
  %392 = cast(%var_4439, dtype="uint16") /* ty=Tensor[(7, 4, 2), uint16] */;
  %393 = maximum(%391, %392) /* ty=Tensor[(7, 4, 2), uint16] */;
  %394 = cast(%393, dtype="float64") /* ty=Tensor[(7, 4, 2), float64] */;
  %395 = cast(%var_4474, dtype="uint16") /* ty=Tensor[(7, 308), uint16] */;
  %396 = reshape(%395, newshape=[2156]) /* ty=Tensor[(2156), uint16] */;
  %397 = @func_4253(%396) /* ty=(Tensor[(13, 7, 2), float32], Tensor[(88), uint64], Tensor[(2156), uint16], Tensor[(13, 7, 2), bool], Tensor[(13, 4, 3), int8], Tensor[(156), int8]) */;
  %398 = cast(%390, dtype="int16") /* ty=Tensor[(7, 1, 2), int16] */;
  %399 = cast(%var_4477, dtype="int16") /* ty=Tensor[(7, 10, 2), int16] */;
  %400 = @func_3879() /* ty=Tensor[(13, 7, 2), float32] */;
  %401 = @func_3879() /* ty=Tensor[(13, 7, 2), float32] */;
  %402 = %354.0;
  %403 = %364.6;
  %404 = %380.3;
  %405 = acos(%394) /* ty=Tensor[(7, 4, 2), float64] */;
  %406 = %397.4;
  %407 = subtract(%398, %399) /* ty=Tensor[(7, 10, 2), int16] */;
  (%400, %var_4391, meta[relay.Constant][25] /* ty=Tensor[(156), int8] */, %401, %402, %372, %var_4419, %var_4420, %403, %374, meta[relay.Constant][26] /* ty=Tensor[(135), int16] */, meta[relay.Constant][27] /* ty=Tensor[(1440), int32] */, %404, %405, %406, %var_4474, %407)
}

def @main(%var_6674: float64, %var_6675: Tensor[(11, 5, 4), float64]) -> Tensor[(11, 5, 4), int32] {
  %408 = cast(%var_6674, dtype="float64") /* ty=float64 */;
  %409 = cast(%var_6675, dtype="float64") /* ty=Tensor[(11, 5, 4), float64] */;
  %410 = power(%408, %409) /* ty=Tensor[(11, 5, 4), float64] */;
  %411 = cast(%var_6675, dtype="bool") /* ty=Tensor[(11, 5, 4), bool] */;
  %412 = shape_of(%410, dtype="int32") /* ty=Tensor[(3), int32] */;
  %413 = cast(%410, dtype="bool") /* ty=Tensor[(11, 5, 4), bool] */;
  %414 = dyn.reshape(%411, %412, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %415 = logical_and(%413, %414) /* ty=Tensor[(11, 5, 4), bool] */;
  %416 = cast(%415, dtype="float32") /* ty=Tensor[(11, 5, 4), float32] */;
  %417 = rsqrt(%416) /* ty=Tensor[(11, 5, 4), float32] */;
  %418 = cast(%var_6675, dtype="int32") /* ty=Tensor[(11, 5, 4), int32] */;
  %419 = shape_of(%417, dtype="int32") /* ty=Tensor[(3), int32] */;
  %420 = cast(%417, dtype="int32") /* ty=Tensor[(11, 5, 4), int32] */;
  %421 = dyn.reshape(%418, %419, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  maximum(%420, %421) /* ty=Tensor[(11, 5, 4), int32] */
}

def @func_5439(%var_5430: Tensor[(12, 9, 4), float32], %var_5436: Tensor[(3, 99), int16]) -> (Tensor[(12, 9, 4), bool], Tensor[(11, 3, 9), int16], Tensor[(3, 99), int16]) {
  %422 = @func_3856() /* ty=(Tensor[(13, 7, 2), float32], Tensor[(12, 9, 4), float32], Tensor[(432), float32]) */;
  %423 = %422.1;
  %424 = cast(%var_5430, dtype="bool") /* ty=Tensor[(12, 9, 4), bool] */;
  %425 = shape_of(%423, dtype="int32") /* ty=Tensor[(3), int32] */;
  %426 = cast(%423, dtype="bool") /* ty=Tensor[(12, 9, 4), bool] */;
  %427 = dyn.reshape(%424, %425, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %428 = cast(%var_5436, dtype="int16") /* ty=Tensor[(3, 99), int16] */;
  %429 = cast(%var_5436, dtype="int16") /* ty=Tensor[(3, 99), int16] */;
  %430 = reshape(%428, newshape=[11, 3, 9]) /* ty=Tensor[(11, 3, 9), int16] */;
  %431 = reshape(%429, newshape=[11, 3, 9]) /* ty=Tensor[(11, 3, 9), int16] */;
  %432 = equal(%426, %427) /* ty=Tensor[(12, 9, 4), bool] */;
  %433 = @func_204(%430, %431) /* ty=Tensor[(11, 3, 9), int16] */;
  (%432, %433, %var_5436)
}

def @func_4523() -> Tensor[(13, 7, 2), float32] {
  %434 = @func_3812() /* ty=(Tensor[(13, 7, 2), float32],) */;
  %434.0
}

def @func_3132(%var_3077: Tensor[(1120), int8], %var_3078: Tensor[(88), uint64], %var_3079: Tensor[(880), uint64], %var_3080: Tensor[(385), float64], %var_3081: Tensor[(14), float32], %var_3090: Tensor[(1440), int32], %var_3116: Tensor[(156), int8]) -> (Tensor[(13, 7, 2), float32], Tensor[(144), float64], Tensor[(144), float64], Tensor[(1120), int8], Tensor[(88), uint64], Tensor[(880), uint64], Tensor[(385), float64], Tensor[(14), float32], Tensor[(1440), int32], Tensor[(2, 9, 8), float32], Tensor[(13, 4, 3), int8], Tensor[(156), int8], Tensor[(2, 720), float32]) {
  %435 = @func_2799() /* ty=(Tensor[(13, 7, 2), float32],) */;
  %436 = cast(meta[relay.Constant][28] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %437 = cast(%var_3077, dtype="int8") /* ty=Tensor[(1120), int8] */;
  %438 = cast(%var_3078, dtype="uint64") /* ty=Tensor[(88), uint64] */;
  %439 = cast(%var_3079, dtype="uint64") /* ty=Tensor[(880), uint64] */;
  %440 = cast(%var_3080, dtype="float64") /* ty=Tensor[(385), float64] */;
  %441 = cast(%var_3081, dtype="float32") /* ty=Tensor[(14), float32] */;
  %442 = reshape(%436, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %443 = reshape(%437, newshape=[1120]) /* ty=Tensor[(1120), int8] */;
  %444 = reshape(%438, newshape=[1, 88]) /* ty=Tensor[(1, 88), uint64] */;
  %445 = reshape(%439, newshape=[880]) /* ty=Tensor[(880), uint64] */;
  %446 = reshape(%440, newshape=[385]) /* ty=Tensor[(385), float64] */;
  %447 = reshape(%441, newshape=[14]) /* ty=Tensor[(14), float32] */;
  %448 = @func_2288(%442, %443, %444, %445, %446, %447) /* ty=(Tensor[(144), float64], Tensor[(2, 9, 8), float32], Tensor[(13, 7, 2), float32], Tensor[(11, 5, 7), uint8], Tensor[(1120), int8], Tensor[(1, 88), uint64], Tensor[(880), uint64], Tensor[(385), float64], Tensor[(11, 5, 7), uint8], Tensor[(14), float32], Tensor[(156), int8]) */;
  %449 = cast(meta[relay.Constant][28] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %450 = cast(%var_3077, dtype="int8") /* ty=Tensor[(1120), int8] */;
  %451 = cast(%var_3078, dtype="uint64") /* ty=Tensor[(88), uint64] */;
  %452 = cast(%var_3079, dtype="uint64") /* ty=Tensor[(880), uint64] */;
  %453 = cast(%var_3080, dtype="float64") /* ty=Tensor[(385), float64] */;
  %454 = cast(%var_3081, dtype="float32") /* ty=Tensor[(14), float32] */;
  %455 = reshape(%449, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %456 = reshape(%450, newshape=[1120]) /* ty=Tensor[(1120), int8] */;
  %457 = reshape(%451, newshape=[1, 88]) /* ty=Tensor[(1, 88), uint64] */;
  %458 = reshape(%452, newshape=[880]) /* ty=Tensor[(880), uint64] */;
  %459 = reshape(%453, newshape=[385]) /* ty=Tensor[(385), float64] */;
  %460 = reshape(%454, newshape=[14]) /* ty=Tensor[(14), float32] */;
  %461 = @func_2288(%455, %456, %457, %458, %459, %460) /* ty=(Tensor[(144), float64], Tensor[(2, 9, 8), float32], Tensor[(13, 7, 2), float32], Tensor[(11, 5, 7), uint8], Tensor[(1120), int8], Tensor[(1, 88), uint64], Tensor[(880), uint64], Tensor[(385), float64], Tensor[(11, 5, 7), uint8], Tensor[(14), float32], Tensor[(156), int8]) */;
  %462 = cast(%var_3116, dtype="int8") /* ty=Tensor[(156), int8] */;
  %463 = cast(%var_3116, dtype="int8") /* ty=Tensor[(156), int8] */;
  %464 = reshape(%462, newshape=[13, 4, 3]) /* ty=Tensor[(13, 4, 3), int8] */;
  %465 = reshape(%463, newshape=[13, 4, 3]) /* ty=Tensor[(13, 4, 3), int8] */;
  %466 = cast(%var_3090, dtype="int32") /* ty=Tensor[(1440), int32] */;
  %467 = reshape(%466, newshape=[2, 720]) /* ty=Tensor[(2, 720), int32] */;
  %468 = @func_2448(%467) /* ty=(Tensor[(13, 7, 2), float32], Tensor[(9, 16, 10), bool], Tensor[(2, 720), int32]) */;
  %469 = %468.2;
  %470 = cast(%469, dtype="float64") /* ty=Tensor[(2, 720), float64] */;
  %471 = asin(%470) /* ty=Tensor[(2, 720), float64] */;
  %472 = cast(%469, dtype="bool") /* ty=Tensor[(2, 720), bool] */;
  %473 = shape_of(%471, dtype="int32") /* ty=Tensor[(2), int32] */;
  %474 = cast(%471, dtype="bool") /* ty=Tensor[(2, 720), bool] */;
  %475 = dyn.reshape(%472, %473, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %476 = not_equal(%474, %475) /* ty=Tensor[(2, 720), bool] */;
  %477 = cast(%476, dtype="bool") /* ty=Tensor[(2, 720), bool] */;
  %478 = shape_of(%471, dtype="int32") /* ty=Tensor[(2), int32] */;
  %479 = cast(%471, dtype="bool") /* ty=Tensor[(2, 720), bool] */;
  %480 = dyn.reshape(%477, %478, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %481 = logical_or(%479, %480) /* ty=Tensor[(2, 720), bool] */;
  %482 = cast(meta[relay.Constant][29] /* ty=Tensor[(2, 720), bool] */, dtype="float32") /* ty=Tensor[(2, 720), float32] */;
  %483 = shape_of(%481, dtype="int32") /* ty=Tensor[(2), int32] */;
  %484 = cast(%481, dtype="float32") /* ty=Tensor[(2, 720), float32] */;
  %485 = dyn.reshape(%482, %483, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %486 = %435.0;
  %487 = %448.0;
  %488 = %461.1;
  %489 = @func_1437(%464, %465) /* ty=Tensor[(13, 4, 3), int8] */;
  %490 = floor_divide(%484, %485) /* ty=Tensor[(2, 720), float32] */;
  (%486, %487, meta[relay.Constant][28] /* ty=Tensor[(144), float64] */, %var_3077, %var_3078, %var_3079, %var_3080, %var_3081, %var_3090, %488, %489, %var_3116, %490)
}

def @func_3442(%var_3409: Tensor[(13, 7, 2), float32]) -> (Tensor[(13, 7, 2), float32],) {
  %491 = @func_2193() /* ty=(Tensor[(13, 7, 2), float32],) */;
  %492 = %491.0;
  %493 = cast(%var_3409, dtype="float32") /* ty=Tensor[(13, 7, 2), float32] */;
  %494 = shape_of(%492, dtype="int32") /* ty=Tensor[(3), int32] */;
  %495 = cast(%492, dtype="float32") /* ty=Tensor[(13, 7, 2), float32] */;
  %496 = dyn.reshape(%493, %494, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %497 = mod(%495, %496) /* ty=Tensor[(13, 7, 2), float32] */;
  (%497,)
}

def @func_2546(%var_2522: Tensor[(7, 308), uint16]) -> (Tensor[(13, 7, 2), float32], Tensor[(14, 11, 14), bool], Tensor[(7, 308), uint16], Tensor[(504), int8], Tensor[(88), uint64], Tensor[(40, 22), uint64], Tensor[(504), int8]) {
  %498 = cast(%var_2522, dtype="uint16") /* ty=Tensor[(7, 308), uint16] */;
  %499 = cast(%var_2522, dtype="uint16") /* ty=Tensor[(7, 308), uint16] */;
  %500 = reshape(%498, newshape=[14, 11, 14]) /* ty=Tensor[(14, 11, 14), uint16] */;
  %501 = reshape(%499, newshape=[14, 11, 14]) /* ty=Tensor[(14, 11, 14), uint16] */;
  %502 = @func_1952(%500, %501) /* ty=(Tensor[(14, 11, 14), bool],) */;
  %503 = cast(meta[relay.Constant][30] /* ty=Tensor[(88), uint64] */, dtype="uint64") /* ty=Tensor[(88), uint64] */;
  %504 = cast(meta[relay.Constant][31] /* ty=Tensor[(40, 22), uint64] */, dtype="uint64") /* ty=Tensor[(40, 22), uint64] */;
  %505 = cast(meta[relay.Constant][32] /* ty=Tensor[(504), int8] */, dtype="int8") /* ty=Tensor[(504), int8] */;
  %506 = reshape(%503, newshape=[11, 8, 1]) /* ty=Tensor[(11, 8, 1), uint64] */;
  %507 = reshape(%504, newshape=[11, 8, 10]) /* ty=Tensor[(11, 8, 10), uint64] */;
  %508 = reshape(%505, newshape=[504]) /* ty=Tensor[(504), int8] */;
  %509 = @func_953(%506, %507, %508) /* ty=(Tensor[(11, 8, 10), float32], Tensor[(6, 7, 12), bool], int8, Tensor[(504), int8]) */;
  %510 = @func_2410() /* ty=Tensor[(13, 7, 2), float32] */;
  %511 = %502.0;
  %512 = %509.3;
  (%510, %511, %var_2522, %512, meta[relay.Constant][30] /* ty=Tensor[(88), uint64] */, meta[relay.Constant][31] /* ty=Tensor[(40, 22), uint64] */, meta[relay.Constant][32] /* ty=Tensor[(504), int8] */)
}

def @func_1222(%var_1187: int64, %var_1188: Tensor[(13, 6, 2), int64], %var_1214: Tensor[(22, 4), uint64]) -> (Tensor[(13, 6, 2), int64], Tensor[(13, 6, 2), int8], Tensor[(6, 7, 12), bool], Tensor[(22, 4), uint64], Tensor[(440, 2), uint64], Tensor[(504), int8]) {
  %513 = cast(%var_1187, dtype="int64") /* ty=int64 */;
  %514 = cast(%var_1188, dtype="int64") /* ty=Tensor[(13, 6, 2), int64] */;
  %515 = cast(%var_1188, dtype="int8") /* ty=Tensor[(13, 6, 2), int8] */;
  %516 = cast(%var_1187, dtype="int8") /* ty=int8 */;
  %517 = cast(%var_1214, dtype="uint64") /* ty=Tensor[(22, 4), uint64] */;
  %518 = cast(meta[relay.Constant][33] /* ty=Tensor[(440, 2), uint64] */, dtype="uint64") /* ty=Tensor[(440, 2), uint64] */;
  %519 = cast(meta[relay.Constant][34] /* ty=Tensor[(504), int8] */, dtype="int8") /* ty=Tensor[(504), int8] */;
  %520 = reshape(%517, newshape=[11, 8, 1]) /* ty=Tensor[(11, 8, 1), uint64] */;
  %521 = reshape(%518, newshape=[11, 8, 10]) /* ty=Tensor[(11, 8, 10), uint64] */;
  %522 = reshape(%519, newshape=[504]) /* ty=Tensor[(504), int8] */;
  %523 = @func_953(%520, %521, %522) /* ty=(Tensor[(11, 8, 10), float32], Tensor[(6, 7, 12), bool], int8, Tensor[(504), int8]) */;
  %524 = bitwise_xor(%513, %514) /* ty=Tensor[(13, 6, 2), int64] */;
  %525 = left_shift(%515, %516) /* ty=Tensor[(13, 6, 2), int8] */;
  %526 = %523.1;
  (%524, %525, %526, %var_1214, meta[relay.Constant][33] /* ty=Tensor[(440, 2), uint64] */, meta[relay.Constant][34] /* ty=Tensor[(504), int8] */)
}

def @func_4317() -> (Tensor[(13, 7, 2), float32],) {
  %527 = @func_2410() /* ty=Tensor[(13, 7, 2), float32] */;
  (%527,)
}

def @func_2288(%var_2216: Tensor[(144), float64], %var_2260: Tensor[(1120), int8], %var_2261: Tensor[(1, 88), uint64], %var_2262: Tensor[(880), uint64], %var_2263: Tensor[(385), float64], %var_2277: Tensor[(14), float32]) -> (Tensor[(144), float64], Tensor[(2, 9, 8), float32], Tensor[(13, 7, 2), float32], Tensor[(11, 5, 7), uint8], Tensor[(1120), int8], Tensor[(1, 88), uint64], Tensor[(880), uint64], Tensor[(385), float64], Tensor[(11, 5, 7), uint8], Tensor[(14), float32], Tensor[(156), int8]) {
  %528 = cast(%var_2216, dtype="float64") /* ty=Tensor[(144), float64] */;
  %529 = cast(%var_2216, dtype="float64") /* ty=Tensor[(144), float64] */;
  %530 = reshape(%528, newshape=[2, 9, 8]) /* ty=Tensor[(2, 9, 8), float64] */;
  %531 = reshape(%529, newshape=[2, 9, 8]) /* ty=Tensor[(2, 9, 8), float64] */;
  %532 = @func_1465(%530, %531) /* ty=Tensor[(2, 9, 8), float64] */;
  %533 = cast(%532, dtype="float32") /* ty=Tensor[(2, 9, 8), float32] */;
  %534 = @func_2193() /* ty=(Tensor[(13, 7, 2), float32],) */;
  %535 = %534.0;
  %536 = cast(%535, dtype="float32") /* ty=Tensor[(13, 7, 2), float32] */;
  %537 = cast(%var_2260, dtype="int8") /* ty=Tensor[(1120), int8] */;
  %538 = cast(%var_2260, dtype="int8") /* ty=Tensor[(1120), int8] */;
  %539 = cast(%var_2261, dtype="uint64") /* ty=Tensor[(1, 88), uint64] */;
  %540 = cast(%var_2262, dtype="uint64") /* ty=Tensor[(880), uint64] */;
  %541 = cast(%var_2263, dtype="float64") /* ty=Tensor[(385), float64] */;
  %542 = reshape(%537, newshape=[16, 14, 5]) /* ty=Tensor[(16, 14, 5), int8] */;
  %543 = reshape(%538, newshape=[16, 14, 5]) /* ty=Tensor[(16, 14, 5), int8] */;
  %544 = reshape(%539, newshape=[88]) /* ty=Tensor[(88), uint64] */;
  %545 = reshape(%540, newshape=[880]) /* ty=Tensor[(880), uint64] */;
  %546 = reshape(%541, newshape=[385]) /* ty=Tensor[(385), float64] */;
  %547 = @func_1035(%542, %543, %544, %545, %546) /* ty=(Tensor[(16, 14, 5), int8], int8, Tensor[(88), uint64], Tensor[(880), uint64], Tensor[(11, 5, 7), uint8], Tensor[(385), float64], Tensor[(504), float32], Tensor[(504), float64], Tensor[(11, 3, 9), int16], Tensor[(297), int16]) */;
  %548 = cast(%var_2277, dtype="float32") /* ty=Tensor[(14), float32] */;
  %549 = cast(meta[relay.Constant][35] /* ty=Tensor[(156), int8] */, dtype="int8") /* ty=Tensor[(156), int8] */;
  %550 = reshape(%548, newshape=[7, 1, 2]) /* ty=Tensor[(7, 1, 2), float32] */;
  %551 = reshape(%549, newshape=[156]) /* ty=Tensor[(156), int8] */;
  %552 = @func_1638(%550, %551) /* ty=(Tensor[(11, 5, 7), uint8], Tensor[(385), float64], Tensor[(13, 4, 3), int8], Tensor[(156), int8], Tensor[(7, 1, 2), float64], Tensor[(7, ?, 2), float32], Tensor[(440, 2), uint64], int64, Tensor[(88), uint64]) */;
  %553 = exp(%533) /* ty=Tensor[(2, 9, 8), float32] */;
  %554 = cosh(%536) /* ty=Tensor[(13, 7, 2), float32] */;
  %555 = %547.4;
  %556 = %552.0;
  (%var_2216, %553, %554, %555, %var_2260, %var_2261, %var_2262, %var_2263, %556, %var_2277, meta[relay.Constant][35] /* ty=Tensor[(156), int8] */)
}

def @func_5656(%var_5641: Tensor[(2, 5, 7), bool]) -> (Tensor[(2, 5, 7), int32], Tensor[(2, 5, 7), bool]) {
  %557 = @func_3465() /* ty=(Tensor[(2, 5, 7), bool],) */;
  %558 = %557.0;
  %559 = cast(%var_5641, dtype="int32") /* ty=Tensor[(2, 5, 7), int32] */;
  %560 = shape_of(%558, dtype="int32") /* ty=Tensor[(3), int32] */;
  %561 = cast(%558, dtype="int32") /* ty=Tensor[(2, 5, 7), int32] */;
  %562 = dyn.reshape(%559, %560, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %563 = cast(%558, dtype="bool") /* ty=Tensor[(2, 5, 7), bool] */;
  %564 = shape_of(%var_5641, dtype="int32") /* ty=Tensor[(3), int32] */;
  %565 = cast(%var_5641, dtype="bool") /* ty=Tensor[(2, 5, 7), bool] */;
  %566 = dyn.reshape(%563, %564, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %567 = subtract(%561, %562) /* ty=Tensor[(2, 5, 7), int32] */;
  %568 = equal(%565, %566) /* ty=Tensor[(2, 5, 7), bool] */;
  (%567, %568)
}

def @func_1465(%var_1453: Tensor[(2, 9, 8), float64], %var_1461: Tensor[(2, 9, 8), float64]) -> Tensor[(2, 9, 8), float64] {
  %569 = cast(%var_1453, dtype="float64") /* ty=Tensor[(2, 9, 8), float64] */;
  %570 = sqrt(%569) /* ty=Tensor[(2, 9, 8), float64] */;
  %571 = cast(%var_1461, dtype="float64") /* ty=Tensor[(2, 9, 8), float64] */;
  %572 = shape_of(%570, dtype="int32") /* ty=Tensor[(3), int32] */;
  %573 = cast(%570, dtype="float64") /* ty=Tensor[(2, 9, 8), float64] */;
  %574 = dyn.reshape(%571, %572, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  power(%573, %574) /* ty=Tensor[(2, 9, 8), float64] */
}

def @func_5488(%var_5479: Tensor[(2, 5, 7), bool]) -> (Tensor[(13, 7, 2), float32], Tensor[(2, 5, 7), float32], Tensor[(2, 5, 7), float32]) {
  %575 = @func_3812() /* ty=(Tensor[(13, 7, 2), float32],) */;
  %576 = @func_5183() /* ty=Tensor[(2, 5, 7), bool] */;
  %577 = cast(%var_5479, dtype="float32") /* ty=Tensor[(2, 5, 7), float32] */;
  %578 = shape_of(%576, dtype="int32") /* ty=Tensor[(3), int32] */;
  %579 = cast(%576, dtype="float32") /* ty=Tensor[(2, 5, 7), float32] */;
  %580 = dyn.reshape(%577, %578, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %581 = cast(%576, dtype="float32") /* ty=Tensor[(2, 5, 7), float32] */;
  %582 = %575.0;
  %583 = floor_divide(%579, %580) /* ty=Tensor[(2, 5, 7), float32] */;
  %584 = atan(%581) /* ty=Tensor[(2, 5, 7), float32] */;
  (%582, %583, %584)
}

def @func_953(%var_932: Tensor[(11, 8, 1), uint64], %var_933: Tensor[(11, 8, 10), uint64], %var_949: Tensor[(504), int8]) -> (Tensor[(11, 8, 10), float32], Tensor[(6, 7, 12), bool], int8, Tensor[(504), int8]) {
  %585 = cast(%var_932, dtype="uint64") /* ty=Tensor[(11, 8, 1), uint64] */;
  %586 = cast(%var_933, dtype="uint64") /* ty=Tensor[(11, 8, 10), uint64] */;
  %587 = maximum(%585, %586) /* ty=Tensor[(11, 8, 10), uint64] */;
  %588 = cast(%587, dtype="float32") /* ty=Tensor[(11, 8, 10), float32] */;
  %589 = asin(%588) /* ty=Tensor[(11, 8, 10), float32] */;
  %590 = cast(%589, dtype="float32") /* ty=Tensor[(11, 8, 10), float32] */;
  %591 = cast(meta[relay.Constant][36] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %592 = cast(%var_949, dtype="int8") /* ty=Tensor[(504), int8] */;
  %593 = reshape(%591, newshape=[]) /* ty=int8 */;
  %594 = reshape(%592, newshape=[6, 7, 12]) /* ty=Tensor[(6, 7, 12), int8] */;
  %595 = acosh(%590) /* ty=Tensor[(11, 8, 10), float32] */;
  %596 = @func_730(%593, %594) /* ty=Tensor[(6, 7, 12), bool] */;
  (%595, %596, meta[relay.Constant][36] /* ty=int8 */, %var_949)
}

def @func_1638(%var_1603: Tensor[(7, 1, 2), float32], %var_1613: Tensor[(156), int8]) -> (Tensor[(11, 5, 7), uint8], Tensor[(385), float64], Tensor[(13, 4, 3), int8], Tensor[(156), int8], Tensor[(7, 1, 2), float64], Tensor[(7, ?, 2), float32], Tensor[(440, 2), uint64], int64, Tensor[(88), uint64]) {
  %597 = cast(meta[relay.Constant][37] /* ty=Tensor[(385), float64] */, dtype="float64") /* ty=Tensor[(385), float64] */;
  %598 = reshape(%597, newshape=[11, 5, 7]) /* ty=Tensor[(11, 5, 7), float64] */;
  %599 = cast(%var_1613, dtype="int8") /* ty=Tensor[(156), int8] */;
  %600 = cast(%var_1613, dtype="int8") /* ty=Tensor[(156), int8] */;
  %601 = reshape(%599, newshape=[13, 4, 3]) /* ty=Tensor[(13, 4, 3), int8] */;
  %602 = reshape(%600, newshape=[13, 4, 3]) /* ty=Tensor[(13, 4, 3), int8] */;
  %603 = cast(%var_1603, dtype="float32") /* ty=Tensor[(7, 1, 2), float32] */;
  %604 = asin(%603) /* ty=Tensor[(7, 1, 2), float32] */;
  %605 = cast(%604, dtype="float32") /* ty=Tensor[(7, 1, 2), float32] */;
  %606 = cos(%605) /* ty=Tensor[(7, 1, 2), float32] */;
  %607 = cast(%606, dtype="float64") /* ty=Tensor[(7, 1, 2), float64] */;
  %608 = cast(%var_1603, dtype="uint8") /* ty=Tensor[(7, 1, 2), uint8] */;
  %609 = shape_of(%604, dtype="int32") /* ty=Tensor[(3), int32] */;
  %610 = cast(%604, dtype="uint8") /* ty=Tensor[(7, 1, 2), uint8] */;
  %611 = dyn.reshape(%608, %609, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %612 = left_shift(%610, %611) /* ty=Tensor[(7, ?, 2), uint8] */;
  %613 = cast(%612, dtype="float32") /* ty=Tensor[(7, ?, 2), float32] */;
  %614 = cast(-6 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %615 = cast(%var_1613, dtype="int64") /* ty=Tensor[(156), int64] */;
  %616 = cast(meta[relay.Constant][38] /* ty=Tensor[(88), uint64] */, dtype="uint64") /* ty=Tensor[(88), uint64] */;
  %617 = reshape(%614, newshape=[]) /* ty=int64 */;
  %618 = reshape(%615, newshape=[13, 6, 2]) /* ty=Tensor[(13, 6, 2), int64] */;
  %619 = reshape(%616, newshape=[22, 4]) /* ty=Tensor[(22, 4), uint64] */;
  %620 = @func_1222(%617, %618, %619) /* ty=(Tensor[(13, 6, 2), int64], Tensor[(13, 6, 2), int8], Tensor[(6, 7, 12), bool], Tensor[(22, 4), uint64], Tensor[(440, 2), uint64], Tensor[(504), int8]) */;
  %621 = @func_40(%598) /* ty=Tensor[(11, 5, 7), uint8] */;
  %622 = @func_1437(%601, %602) /* ty=Tensor[(13, 4, 3), int8] */;
  %623 = asinh(%607) /* ty=Tensor[(7, 1, 2), float64] */;
  %624 = atan(%613) /* ty=Tensor[(7, ?, 2), float32] */;
  %625 = %620.4;
  (%621, meta[relay.Constant][37] /* ty=Tensor[(385), float64] */, %622, %var_1613, %623, %624, %625, -6 /* ty=int64 */, meta[relay.Constant][38] /* ty=Tensor[(88), uint64] */)
}

def @func_4546(%var_4539: Tensor[(15, 4, 13), float32]) -> Tensor[(15, 4, 13), float32] {
  %626 = cast(%var_4539, dtype="float32") /* ty=Tensor[(15, 4, 13), float32] */;
  acosh(%626) /* ty=Tensor[(15, 4, 13), float32] */
}

def @func_3465() -> (Tensor[(2, 5, 7), bool],) {
  %627 = cast(meta[relay.Constant][39] /* ty=uint16 */, dtype="bool") /* ty=bool */;
  %628 = cast(meta[relay.Constant][40] /* ty=Tensor[(2, 5, 7), uint16] */, dtype="bool") /* ty=Tensor[(2, 5, 7), bool] */;
  %629 = greater_equal(%627, %628) /* ty=Tensor[(2, 5, 7), bool] */;
  (%629,)
}

def @func_5574() -> Tensor[(2, 5, 7), bool] {
  @func_4810() /* ty=Tensor[(2, 5, 7), bool] */
}

def @func_4994() -> (Tensor[(13, 7, 2), float32],) {
  %630 = @func_3495() /* ty=Tensor[(13, 7, 2), float32] */;
  (%630,)
}

def @func_5231(%var_5217: Tensor[(1, 13, 11), uint64], %var_5218: Tensor[(15, 13, 11), uint64]) -> Tensor[(15, 13, 11), uint64] {
  %631 = cast(%var_5217, dtype="uint64") /* ty=Tensor[(1, 13, 11), uint64] */;
  %632 = cast(%var_5218, dtype="uint64") /* ty=Tensor[(15, 13, 11), uint64] */;
  multiply(%631, %632) /* ty=Tensor[(15, 13, 11), uint64] */
}

def @func_5901() -> Tensor[(13, 7, 2), float32] {
  %633 = @func_3812() /* ty=(Tensor[(13, 7, 2), float32],) */;
  %633.0
}

def @func_1035(%var_997: Tensor[(16, 14, 5), int8], %var_998: Tensor[(16, 14, 5), int8], %var_1003: Tensor[(88), uint64], %var_1004: Tensor[(880), uint64], %var_1008: Tensor[(385), float64]) -> (Tensor[(16, 14, 5), int8], int8, Tensor[(88), uint64], Tensor[(880), uint64], Tensor[(11, 5, 7), uint8], Tensor[(385), float64], Tensor[(504), float32], Tensor[(504), float64], Tensor[(11, 3, 9), int16], Tensor[(297), int16]) {
  %634 = cast(%var_998, dtype="int8") /* ty=Tensor[(16, 14, 5), int8] */;
  %635 = shape_of(%var_997, dtype="int32") /* ty=Tensor[(3), int32] */;
  %636 = cast(%var_997, dtype="int8") /* ty=Tensor[(16, 14, 5), int8] */;
  %637 = dyn.reshape(%634, %635, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %638 = cast(%var_1003, dtype="uint64") /* ty=Tensor[(88), uint64] */;
  %639 = cast(%var_1004, dtype="uint64") /* ty=Tensor[(880), uint64] */;
  %640 = cast(meta[relay.Constant][41] /* ty=Tensor[(504), int8] */, dtype="int8") /* ty=Tensor[(504), int8] */;
  %641 = reshape(%638, newshape=[11, 8, 1]) /* ty=Tensor[(11, 8, 1), uint64] */;
  %642 = reshape(%639, newshape=[11, 8, 10]) /* ty=Tensor[(11, 8, 10), uint64] */;
  %643 = reshape(%640, newshape=[504]) /* ty=Tensor[(504), int8] */;
  %644 = @func_953(%641, %642, %643) /* ty=(Tensor[(11, 8, 10), float32], Tensor[(6, 7, 12), bool], int8, Tensor[(504), int8]) */;
  %645 = cast(%var_1008, dtype="float64") /* ty=Tensor[(385), float64] */;
  %646 = reshape(%645, newshape=[11, 5, 7]) /* ty=Tensor[(11, 5, 7), float64] */;
  %647 = cast(meta[relay.Constant][41] /* ty=Tensor[(504), int8] */, dtype="float32") /* ty=Tensor[(504), float32] */;
  %648 = log(%647) /* ty=Tensor[(504), float32] */;
  %649 = cast(meta[relay.Constant][41] /* ty=Tensor[(504), int8] */, dtype="float32") /* ty=Tensor[(504), float32] */;
  %650 = shape_of(%648, dtype="int32") /* ty=Tensor[(1), int32] */;
  %651 = cast(%648, dtype="float32") /* ty=Tensor[(504), float32] */;
  %652 = dyn.reshape(%649, %650, newshape=[]) /* ty=Tensor[(?), float32] */;
  %653 = cast(%648, dtype="float64") /* ty=Tensor[(504), float64] */;
  %654 = cast(meta[relay.Constant][42] /* ty=Tensor[(297), int16] */, dtype="int16") /* ty=Tensor[(297), int16] */;
  %655 = cast(meta[relay.Constant][42] /* ty=Tensor[(297), int16] */, dtype="int16") /* ty=Tensor[(297), int16] */;
  %656 = reshape(%654, newshape=[11, 3, 9]) /* ty=Tensor[(11, 3, 9), int16] */;
  %657 = reshape(%655, newshape=[11, 3, 9]) /* ty=Tensor[(11, 3, 9), int16] */;
  %658 = bitwise_xor(%636, %637) /* ty=Tensor[(16, 14, 5), int8] */;
  %659 = %644.2;
  %660 = @func_40(%646) /* ty=Tensor[(11, 5, 7), uint8] */;
  %661 = floor_mod(%651, %652) /* ty=Tensor[(504), float32] */;
  %662 = log10(%653) /* ty=Tensor[(504), float64] */;
  %663 = @func_204(%656, %657) /* ty=Tensor[(11, 3, 9), int16] */;
  (%658, %659, %var_1003, %var_1004, %660, %var_1008, %661, %662, %663, meta[relay.Constant][42] /* ty=Tensor[(297), int16] */)
}

def @func_2659(%var_2654: Tensor[(13, 7, 2), float32]) -> (Tensor[(13, 7, 2), uint64],) {
  %664 = @func_2410() /* ty=Tensor[(13, 7, 2), float32] */;
  %665 = cast(%var_2654, dtype="uint64") /* ty=Tensor[(13, 7, 2), uint64] */;
  %666 = shape_of(%664, dtype="int32") /* ty=Tensor[(3), int32] */;
  %667 = cast(%664, dtype="uint64") /* ty=Tensor[(13, 7, 2), uint64] */;
  %668 = dyn.reshape(%665, %666, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %669 = multiply(%667, %668) /* ty=Tensor[(13, 7, 2), uint64] */;
  (%669,)
}

def @func_4788(%var_4770: Tensor[(576), float64]) -> (Tensor[(13, 7, 2), float32], Tensor[(240), float32], Tensor[(9, 4, 16), float64], Tensor[(576), float64], Tensor[(504), float64], Tensor[(13, 7, 2), float32]) {
  %670 = cast(%var_4770, dtype="float64") /* ty=Tensor[(576), float64] */;
  %671 = cast(%var_4770, dtype="float64") /* ty=Tensor[(576), float64] */;
  %672 = reshape(%670, newshape=[9, 4, 16]) /* ty=Tensor[(9, 4, 16), float64] */;
  %673 = reshape(%671, newshape=[9, 4, 16]) /* ty=Tensor[(9, 4, 16), float64] */;
  %674 = cast(meta[relay.Constant][43] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %675 = reshape(%674, newshape=[2, 15, 8]) /* ty=Tensor[(2, 15, 8), float32] */;
  %676 = @func_1343(%675) /* ty=(Tensor[(2, 15, 8), float32], Tensor[(6, 7, 12), bool], int8, Tensor[(504), int8]) */;
  %677 = %676.3;
  %678 = cast(%677, dtype="float64") /* ty=Tensor[(504), float64] */;
  %679 = @func_3879() /* ty=Tensor[(13, 7, 2), float32] */;
  %680 = @func_2696(%672, %673) /* ty=Tensor[(9, 4, 16), float64] */;
  %681 = asinh(%678) /* ty=Tensor[(504), float64] */;
  %682 = @func_4523() /* ty=Tensor[(13, 7, 2), float32] */;
  (%679, meta[relay.Constant][43] /* ty=Tensor[(240), float32] */, %680, %var_4770, %681, %682)
}

def @func_3305(%var_3296: Tensor[(2, 44), uint64]) -> (Tensor[(13, 7, 2), float32], Tensor[(6, 7, 12), bool], Tensor[(2, 44), uint64], Tensor[(880), uint64], Tensor[(504), int8]) {
  %683 = cast(%var_3296, dtype="uint64") /* ty=Tensor[(2, 44), uint64] */;
  %684 = cast(meta[relay.Constant][44] /* ty=Tensor[(880), uint64] */, dtype="uint64") /* ty=Tensor[(880), uint64] */;
  %685 = cast(meta[relay.Constant][45] /* ty=Tensor[(504), int8] */, dtype="int8") /* ty=Tensor[(504), int8] */;
  %686 = reshape(%683, newshape=[11, 8, 1]) /* ty=Tensor[(11, 8, 1), uint64] */;
  %687 = reshape(%684, newshape=[11, 8, 10]) /* ty=Tensor[(11, 8, 10), uint64] */;
  %688 = reshape(%685, newshape=[504]) /* ty=Tensor[(504), int8] */;
  %689 = @func_953(%686, %687, %688) /* ty=(Tensor[(11, 8, 10), float32], Tensor[(6, 7, 12), bool], int8, Tensor[(504), int8]) */;
  %690 = @func_2410() /* ty=Tensor[(13, 7, 2), float32] */;
  %691 = %689.1;
  (%690, %691, %var_3296, meta[relay.Constant][44] /* ty=Tensor[(880), uint64] */, meta[relay.Constant][45] /* ty=Tensor[(504), int8] */)
}

def @func_4965(%var_4946: Tensor[(700), bool], %var_4948: Tensor[(880), uint64], %var_4949: Tensor[(385, 1), float64]) -> (Tensor[(13, 7, 2), float32], Tensor[(135), int16], Tensor[(7, 10), bool], Tensor[(700), bool], Tensor[(1120), int8], Tensor[(880), uint64], Tensor[(385, 1), float64], Tensor[(13, 7, 2), float32], Tensor[(576), float64]) {
  %692 = @func_4317() /* ty=(Tensor[(13, 7, 2), float32],) */;
  %693 = cast(meta[relay.Constant][46] /* ty=Tensor[(7, 10), bool] */, dtype="bool") /* ty=Tensor[(7, 10), bool] */;
  %694 = cast(%var_4946, dtype="bool") /* ty=Tensor[(700), bool] */;
  %695 = cast(meta[relay.Constant][47] /* ty=Tensor[(1120), int8] */, dtype="int8") /* ty=Tensor[(1120), int8] */;
  %696 = cast(%var_4948, dtype="uint64") /* ty=Tensor[(880), uint64] */;
  %697 = cast(%var_4949, dtype="float64") /* ty=Tensor[(385, 1), float64] */;
  %698 = reshape(%693, newshape=[10, 7, 1]) /* ty=Tensor[(10, 7, 1), bool] */;
  %699 = reshape(%694, newshape=[10, 7, 10]) /* ty=Tensor[(10, 7, 10), bool] */;
  %700 = reshape(%695, newshape=[560, 2]) /* ty=Tensor[(560, 2), int8] */;
  %701 = reshape(%696, newshape=[880]) /* ty=Tensor[(880), uint64] */;
  %702 = reshape(%697, newshape=[385]) /* ty=Tensor[(385), float64] */;
  %703 = @func_1521(%698, %699, %700, %701, %702) /* ty=(Tensor[(10, 7, 10), bool], Tensor[(135), int16], int8, Tensor[(560, 2), int8], Tensor[(88), uint64], Tensor[(880), uint64], Tensor[(385), float64], Tensor[(6, 7, 12), bool], Tensor[(240), float32], Tensor[(15, 9, 13), float64], Tensor[(6, 7, 12), bool]) */;
  %704 = cast(meta[relay.Constant][48] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
  %705 = reshape(%704, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %706 = @func_4788(%705) /* ty=(Tensor[(13, 7, 2), float32], Tensor[(240), float32], Tensor[(9, 4, 16), float64], Tensor[(576), float64], Tensor[(504), float64], Tensor[(13, 7, 2), float32]) */;
  %707 = %692.0;
  %708 = %703.1;
  %709 = %706.5;
  (%707, %708, meta[relay.Constant][46] /* ty=Tensor[(7, 10), bool] */, %var_4946, meta[relay.Constant][47] /* ty=Tensor[(1120), int8] */, %var_4948, %var_4949, %709, meta[relay.Constant][48] /* ty=Tensor[(576), float64] */)
}

def @func_6348(%var_6337: Tensor[(2, 10, 13), uint8]) -> (Tensor[(2, 10, 13), uint8], Tensor[(2, 10, 13), float32]) {
  %710 = cast(meta[relay.Constant][49] /* ty=Tensor[(2, 10, 13), uint8] */, dtype="uint8") /* ty=Tensor[(2, 10, 13), uint8] */;
  %711 = shape_of(%var_6337, dtype="int32") /* ty=Tensor[(3), int32] */;
  %712 = cast(%var_6337, dtype="uint8") /* ty=Tensor[(2, 10, 13), uint8] */;
  %713 = dyn.reshape(%710, %711, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %714 = cast(%var_6337, dtype="float32") /* ty=Tensor[(2, 10, 13), float32] */;
  %715 = left_shift(%712, %713) /* ty=Tensor[(2, 10, 13), uint8] */;
  %716 = log(%714) /* ty=Tensor[(2, 10, 13), float32] */;
  (%715, %716)
}

def @func_1343(%var_1325: Tensor[(2, 15, 8), float32]) -> (Tensor[(2, 15, 8), float32], Tensor[(6, 7, 12), bool], int8, Tensor[(504), int8]) {
  %717 = cast(%var_1325, dtype="float32") /* ty=Tensor[(2, 15, 8), float32] */;
  %718 = cast(meta[relay.Constant][50] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %719 = cast(meta[relay.Constant][51] /* ty=Tensor[(504), int8] */, dtype="int8") /* ty=Tensor[(504), int8] */;
  %720 = reshape(%718, newshape=[]) /* ty=int8 */;
  %721 = reshape(%719, newshape=[6, 7, 12]) /* ty=Tensor[(6, 7, 12), int8] */;
  %722 = log2(%717) /* ty=Tensor[(2, 15, 8), float32] */;
  %723 = @func_730(%720, %721) /* ty=Tensor[(6, 7, 12), bool] */;
  (%722, %723, meta[relay.Constant][50] /* ty=int8 */, meta[relay.Constant][51] /* ty=Tensor[(504), int8] */)
}

def @func_2717() -> (Tensor[(13, 7, 2), float32],) {
  %724 = @func_2193() /* ty=(Tensor[(13, 7, 2), float32],) */;
  %725 = %724.0;
  (%725,)
}

def @func_6024() -> Tensor[(13, 7, 2), float32] {
  %726 = @func_2799() /* ty=(Tensor[(13, 7, 2), float32],) */;
  %726.0
}

def @func_3828() -> Tensor[(13, 7, 2), float32] {
  %727 = @func_3207() /* ty=(Tensor[(13, 7, 2), uint64], Tensor[(13, 7, 2), float32], Tensor[(13, 7, 2), float64]) */;
  %727.1
}

def @func_1437(%var_1429: Tensor[(13, 4, 3), int8], %var_1430: Tensor[(13, 4, 3), int8]) -> Tensor[(13, 4, 3), int8] {
  %728 = cast(%var_1430, dtype="int8") /* ty=Tensor[(13, 4, 3), int8] */;
  %729 = shape_of(%var_1429, dtype="int32") /* ty=Tensor[(3), int32] */;
  %730 = cast(%var_1429, dtype="int8") /* ty=Tensor[(13, 4, 3), int8] */;
  %731 = dyn.reshape(%728, %729, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  bitwise_and(%730, %731) /* ty=Tensor[(13, 4, 3), int8] */
}

def @func_4159(%var_4131: Tensor[(135), int16], %var_4138: Tensor[(504), int8], %var_4141: Tensor[(1440), int32]) -> (Tensor[(13, 7, 2), float32], Tensor[(15, 9, 13), int16], Tensor[(135), int16], Tensor[(11, 8, 10), float32], Tensor[(2, 44), uint64], Tensor[(1, 880), uint64], Tensor[(504), int8], Tensor[(9, 16, 10), bool], Tensor[(1440), int32], Tensor[(13, 7, 2), float32], Tensor[(16, 7, 8), uint64], Tensor[(896), uint64], Tensor[(13, 7, 2), float32], Tensor[(13, 7, 2), float32]) {
  %732 = cast(%var_4131, dtype="int16") /* ty=Tensor[(135), int16] */;
  %733 = reshape(%732, newshape=[15, 9, 1]) /* ty=Tensor[(15, 9, 1), int16] */;
  %734 = @func_1054(%733) /* ty=(Tensor[(15, 9, 13), int16],) */;
  %735 = cast(meta[relay.Constant][52] /* ty=Tensor[(2, 44), uint64] */, dtype="uint64") /* ty=Tensor[(2, 44), uint64] */;
  %736 = cast(meta[relay.Constant][53] /* ty=Tensor[(1, 880), uint64] */, dtype="uint64") /* ty=Tensor[(1, 880), uint64] */;
  %737 = cast(%var_4138, dtype="int8") /* ty=Tensor[(504), int8] */;
  %738 = reshape(%735, newshape=[11, 8, 1]) /* ty=Tensor[(11, 8, 1), uint64] */;
  %739 = reshape(%736, newshape=[11, 8, 10]) /* ty=Tensor[(11, 8, 10), uint64] */;
  %740 = reshape(%737, newshape=[504]) /* ty=Tensor[(504), int8] */;
  %741 = @func_953(%738, %739, %740) /* ty=(Tensor[(11, 8, 10), float32], Tensor[(6, 7, 12), bool], int8, Tensor[(504), int8]) */;
  %742 = cast(%var_4141, dtype="int32") /* ty=Tensor[(1440), int32] */;
  %743 = cast(%var_4141, dtype="int32") /* ty=Tensor[(1440), int32] */;
  %744 = reshape(%742, newshape=[9, 16, 10]) /* ty=Tensor[(9, 16, 10), int32] */;
  %745 = reshape(%743, newshape=[9, 16, 10]) /* ty=Tensor[(9, 16, 10), int32] */;
  %746 = cast(%var_4131, dtype="int16") /* ty=Tensor[(135), int16] */;
  %747 = reshape(%746, newshape=[135]) /* ty=Tensor[(135), int16] */;
  %748 = @func_4083(%747) /* ty=(Tensor[(13, 7, 2), float32], Tensor[(15, 9, 13), int16], Tensor[(135), int16], Tensor[(13, 7, 2), float32], Tensor[(13, 7, 2), uint64]) */;
  %749 = cast(meta[relay.Constant][54] /* ty=Tensor[(896), uint64] */, dtype="uint64") /* ty=Tensor[(896), uint64] */;
  %750 = cast(meta[relay.Constant][54] /* ty=Tensor[(896), uint64] */, dtype="uint64") /* ty=Tensor[(896), uint64] */;
  %751 = reshape(%749, newshape=[16, 7, 8]) /* ty=Tensor[(16, 7, 8), uint64] */;
  %752 = reshape(%750, newshape=[16, 7, 8]) /* ty=Tensor[(16, 7, 8), uint64] */;
  %753 = @func_2767(%751, %752) /* ty=(Tensor[(16, 7, 8), uint64],) */;
  %754 = @func_3812() /* ty=(Tensor[(13, 7, 2), float32],) */;
  %755 = @func_2717() /* ty=(Tensor[(13, 7, 2), float32],) */;
  %756 = @func_3828() /* ty=Tensor[(13, 7, 2), float32] */;
  %757 = %734.0;
  %758 = %741.0;
  %759 = @func_1935(%744, %745) /* ty=Tensor[(9, 16, 10), bool] */;
  %760 = %748.0;
  %761 = %753.0;
  %762 = %754.0;
  %763 = %755.0;
  (%756, %757, %var_4131, %758, meta[relay.Constant][52] /* ty=Tensor[(2, 44), uint64] */, meta[relay.Constant][53] /* ty=Tensor[(1, 880), uint64] */, %var_4138, %759, %var_4141, %760, %761, meta[relay.Constant][54] /* ty=Tensor[(896), uint64] */, %762, %763)
}

def @func_6311(%var_6273: Tensor[(880), uint64]) -> (Tensor[(13, 7, 2), float32], Tensor[(504), float32], Tensor[(88), uint64], Tensor[(880), uint64], Tensor[(13, 7, 2), uint64], Tensor[(13, 7, 2), float32]) {
  %764 = cast(meta[relay.Constant][55] /* ty=Tensor[(88), uint64] */, dtype="uint64") /* ty=Tensor[(88), uint64] */;
  %765 = cast(%var_6273, dtype="uint64") /* ty=Tensor[(880), uint64] */;
  %766 = reshape(%764, newshape=[88]) /* ty=Tensor[(88), uint64] */;
  %767 = reshape(%765, newshape=[880]) /* ty=Tensor[(880), uint64] */;
  %768 = @func_2642(%766, %767) /* ty=(Tensor[(13, 7, 2), float32], Tensor[(88), uint64], Tensor[(504), int8], Tensor[(880), bool], Tensor[(880), float32], Tensor[(504), float32]) */;
  %769 = @func_3207() /* ty=(Tensor[(13, 7, 2), uint64], Tensor[(13, 7, 2), float32], Tensor[(13, 7, 2), float64]) */;
  %770 = @func_2193() /* ty=(Tensor[(13, 7, 2), float32],) */;
  %771 = @func_2410() /* ty=Tensor[(13, 7, 2), float32] */;
  %772 = %768.5;
  %773 = %769.0;
  %774 = %770.0;
  (%771, %772, meta[relay.Constant][55] /* ty=Tensor[(88), uint64] */, %var_6273, %773, %774)
}

def @func_4810() -> Tensor[(2, 5, 7), bool] {
  %775 = @func_3465() /* ty=(Tensor[(2, 5, 7), bool],) */;
  %775.0
}

def @func_4368(%var_4356: Tensor[(13, 7, 2), float32]) -> (Tensor[(13, 7, 2), float32], Tensor[(13, 7, 2), uint64]) {
  %776 = @func_2717() /* ty=(Tensor[(13, 7, 2), float32],) */;
  %777 = @func_2193() /* ty=(Tensor[(13, 7, 2), float32],) */;
  %778 = %777.0;
  %779 = cast(%778, dtype="float32") /* ty=Tensor[(13, 7, 2), float32] */;
  %780 = cos(%779) /* ty=Tensor[(13, 7, 2), float32] */;
  %781 = cast(%var_4356, dtype="uint64") /* ty=Tensor[(13, 7, 2), uint64] */;
  %782 = shape_of(%780, dtype="int32") /* ty=Tensor[(3), int32] */;
  %783 = cast(%780, dtype="uint64") /* ty=Tensor[(13, 7, 2), uint64] */;
  %784 = dyn.reshape(%781, %782, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %785 = %776.0;
  %786 = bitwise_or(%783, %784) /* ty=Tensor[(13, 7, 2), uint64] */;
  (%785, %786)
}

def @func_3904(%var_3884: Tensor[(15, 13, 13), float32], %var_3899: Tensor[(288), float64], %var_3901: Tensor[(40, 22), uint64]) -> (Tensor[(15, 13, 13), float32], Tensor[(13, 7, 2), float32], Tensor[(8, 140), int8], Tensor[(288), float64], Tensor[(70), bool], Tensor[(40, 22), uint64]) {
  %787 = cast(%var_3884, dtype="float32") /* ty=Tensor[(15, 13, 13), float32] */;
  %788 = @func_2799() /* ty=(Tensor[(13, 7, 2), float32],) */;
  %789 = cast(%var_3899, dtype="float64") /* ty=Tensor[(288), float64] */;
  %790 = cast(meta[relay.Constant][56] /* ty=Tensor[(70), bool] */, dtype="bool") /* ty=Tensor[(70), bool] */;
  %791 = cast(%var_3901, dtype="uint64") /* ty=Tensor[(40, 22), uint64] */;
  %792 = reshape(%789, newshape=[4, 8, 9]) /* ty=Tensor[(4, 8, 9), float64] */;
  %793 = reshape(%790, newshape=[70]) /* ty=Tensor[(70), bool] */;
  %794 = reshape(%791, newshape=[880]) /* ty=Tensor[(880), uint64] */;
  %795 = @func_2374(%792, %793, %794) /* ty=(Tensor[(4, 8, 9), float64], Tensor[(15, 9, 13), float64], Tensor[(70), bool], Tensor[(700), bool], Tensor[(8, 140), int8], Tensor[(880), uint64], Tensor[(1, 385), float64]) */;
  %796 = erf(%787) /* ty=Tensor[(15, 13, 13), float32] */;
  %797 = %788.0;
  %798 = %795.4;
  (%796, %797, %798, %var_3899, meta[relay.Constant][56] /* ty=Tensor[(70), bool] */, %var_3901)
}

def @func_3856() -> (Tensor[(13, 7, 2), float32], Tensor[(12, 9, 4), float32], Tensor[(432), float32]) {
  %799 = cast(meta[relay.Constant][57] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
  %800 = reshape(%799, newshape=[12, 9, 4]) /* ty=Tensor[(12, 9, 4), float32] */;
  %801 = @func_3495() /* ty=Tensor[(13, 7, 2), float32] */;
  %802 = @func_3672(%800) /* ty=Tensor[(12, 9, 4), float32] */;
  (%801, %802, meta[relay.Constant][57] /* ty=Tensor[(432), float32] */)
}

def @func_6651(%var_6649: Tensor[(180), bool]) -> (Tensor[(15, 11, 15), float64], int8, Tensor[(240), float32], Tensor[(2, 720), int32], Tensor[(180), bool]) {
  %803 = cast(meta[relay.Constant][58] /* ty=Tensor[(15, 11, 15), float64] */, dtype="float64") /* ty=Tensor[(15, 11, 15), float64] */;
  %804 = cast(meta[relay.Constant][59] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %805 = reshape(%804, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %806 = @func_3775(%805) /* ty=(Tensor[(13, 7, 2), float32], int8, Tensor[(240), float32]) */;
  %807 = cast(%var_6649, dtype="bool") /* ty=Tensor[(180), bool] */;
  %808 = reshape(%807, newshape=[180]) /* ty=Tensor[(180), bool] */;
  %809 = @func_6391(%808) /* ty=(Tensor[(13, 7, 2), float32], bool, bool, Tensor[(180), bool], Tensor[(2, 720), int32]) */;
  %810 = sinh(%803) /* ty=Tensor[(15, 11, 15), float64] */;
  %811 = %806.1;
  %812 = %809.4;
  (%810, %811, meta[relay.Constant][59] /* ty=Tensor[(240), float32] */, %812, %var_6649)
}

def @func_5745(%var_5706: bool, %var_5707: Tensor[(12, 1, 15), bool], %var_5722: Tensor[(1440), int32]) -> (Tensor[(12, ?, 15), uint64], Tensor[(9, 16, 10), bool], Tensor[(1440), int32]) {
  %813 = cast(%var_5706, dtype="bool") /* ty=bool */;
  %814 = cast(%var_5707, dtype="bool") /* ty=Tensor[(12, 1, 15), bool] */;
  %815 = logical_and(%813, %814) /* ty=Tensor[(12, 1, 15), bool] */;
  %816 = cast(%var_5707, dtype="uint64") /* ty=Tensor[(12, 1, 15), uint64] */;
  %817 = shape_of(%815, dtype="int32") /* ty=Tensor[(3), int32] */;
  %818 = cast(%815, dtype="uint64") /* ty=Tensor[(12, 1, 15), uint64] */;
  %819 = dyn.reshape(%816, %817, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %820 = cast(%var_5722, dtype="int32") /* ty=Tensor[(1440), int32] */;
  %821 = cast(%var_5722, dtype="int32") /* ty=Tensor[(1440), int32] */;
  %822 = reshape(%820, newshape=[9, 16, 10]) /* ty=Tensor[(9, 16, 10), int32] */;
  %823 = reshape(%821, newshape=[9, 16, 10]) /* ty=Tensor[(9, 16, 10), int32] */;
  %824 = subtract(%818, %819) /* ty=Tensor[(12, ?, 15), uint64] */;
  %825 = @func_1935(%822, %823) /* ty=Tensor[(9, 16, 10), bool] */;
  (%824, %825, %var_5722)
}

def @func_6103(%var_6077: bool, %var_6078: Tensor[(90, 2), bool], %var_6079: Tensor[(720, 2), int32]) -> (Tensor[(12, 9, 4), float64], Tensor[(385), float64], Tensor[(1120), int8], Tensor[(88), uint64], Tensor[(880), uint64], Tensor[(385, 1), float64], Tensor[(12, ?, 15), uint64], bool, Tensor[(90, 2), bool], Tensor[(720, 2), int32], Tensor[(13, 7, 2), float32], Tensor[(13, 7, 2), float32]) {
  %826 = @func_3856() /* ty=(Tensor[(13, 7, 2), float32], Tensor[(12, 9, 4), float32], Tensor[(432), float32]) */;
  %827 = %826.1;
  %828 = cast(%827, dtype="float32") /* ty=Tensor[(12, 9, 4), float32] */;
  %829 = log(%828) /* ty=Tensor[(12, 9, 4), float32] */;
  %830 = cast(%829, dtype="float64") /* ty=Tensor[(12, 9, 4), float64] */;
  %831 = cast(meta[relay.Constant][60] /* ty=Tensor[(1120), int8] */, dtype="int8") /* ty=Tensor[(1120), int8] */;
  %832 = cast(meta[relay.Constant][60] /* ty=Tensor[(1120), int8] */, dtype="int8") /* ty=Tensor[(1120), int8] */;
  %833 = cast(meta[relay.Constant][61] /* ty=Tensor[(88), uint64] */, dtype="uint64") /* ty=Tensor[(88), uint64] */;
  %834 = cast(meta[relay.Constant][62] /* ty=Tensor[(880), uint64] */, dtype="uint64") /* ty=Tensor[(880), uint64] */;
  %835 = cast(meta[relay.Constant][63] /* ty=Tensor[(385, 1), float64] */, dtype="float64") /* ty=Tensor[(385, 1), float64] */;
  %836 = reshape(%831, newshape=[16, 14, 5]) /* ty=Tensor[(16, 14, 5), int8] */;
  %837 = reshape(%832, newshape=[16, 14, 5]) /* ty=Tensor[(16, 14, 5), int8] */;
  %838 = reshape(%833, newshape=[88]) /* ty=Tensor[(88), uint64] */;
  %839 = reshape(%834, newshape=[880]) /* ty=Tensor[(880), uint64] */;
  %840 = reshape(%835, newshape=[385]) /* ty=Tensor[(385), float64] */;
  %841 = @func_1035(%836, %837, %838, %839, %840) /* ty=(Tensor[(16, 14, 5), int8], int8, Tensor[(88), uint64], Tensor[(880), uint64], Tensor[(11, 5, 7), uint8], Tensor[(385), float64], Tensor[(504), float32], Tensor[(504), float64], Tensor[(11, 3, 9), int16], Tensor[(297), int16]) */;
  %842 = cast(%var_6077, dtype="bool") /* ty=bool */;
  %843 = cast(%var_6078, dtype="bool") /* ty=Tensor[(90, 2), bool] */;
  %844 = cast(%var_6079, dtype="int32") /* ty=Tensor[(720, 2), int32] */;
  %845 = reshape(%842, newshape=[]) /* ty=bool */;
  %846 = reshape(%843, newshape=[12, 1, 15]) /* ty=Tensor[(12, 1, 15), bool] */;
  %847 = reshape(%844, newshape=[1440]) /* ty=Tensor[(1440), int32] */;
  %848 = @func_5745(%845, %846, %847) /* ty=(Tensor[(12, ?, 15), uint64], Tensor[(9, 16, 10), bool], Tensor[(1440), int32]) */;
  %849 = @func_4317() /* ty=(Tensor[(13, 7, 2), float32],) */;
  %850 = cos(%830) /* ty=Tensor[(12, 9, 4), float64] */;
  %851 = %841.5;
  %852 = %848.0;
  %853 = %849.0;
  %854 = @func_5204() /* ty=Tensor[(13, 7, 2), float32] */;
  (%850, %851, meta[relay.Constant][60] /* ty=Tensor[(1120), int8] */, meta[relay.Constant][61] /* ty=Tensor[(88), uint64] */, meta[relay.Constant][62] /* ty=Tensor[(880), uint64] */, meta[relay.Constant][63] /* ty=Tensor[(385, 1), float64] */, %852, %var_6077, %var_6078, %var_6079, %853, %854)
}

def @func_5784(%var_5780: Tensor[(156), int8]) -> (Tensor[(2, 5, 7), bool], Tensor[(88), uint64], Tensor[(156), int8], Tensor[(560), bool]) {
  %855 = cast(%var_5780, dtype="int8") /* ty=Tensor[(156), int8] */;
  %856 = cast(meta[relay.Constant][64] /* ty=Tensor[(560), bool] */, dtype="bool") /* ty=Tensor[(560), bool] */;
  %857 = reshape(%855, newshape=[156]) /* ty=Tensor[(156), int8] */;
  %858 = reshape(%856, newshape=[8, 70]) /* ty=Tensor[(8, 70), bool] */;
  %859 = @func_4667(%857, %858) /* ty=(Tensor[(432), float32], Tensor[(6, 7, 12), bool], Tensor[(88), uint64], Tensor[(156), int8], Tensor[(14), float32], Tensor[(156), int8], Tensor[(880), uint64], Tensor[(288), float64], Tensor[(880), uint64], Tensor[(8, 70), bool]) */;
  %860 = @func_4810() /* ty=Tensor[(2, 5, 7), bool] */;
  %861 = %859.2;
  (%860, %861, %var_5780, meta[relay.Constant][64] /* ty=Tensor[(560), bool] */)
}

def @func_2642(%var_2605: Tensor[(88), uint64], %var_2609: Tensor[(880), uint64]) -> (Tensor[(13, 7, 2), float32], Tensor[(88), uint64], Tensor[(504), int8], Tensor[(880), bool], Tensor[(880), float32], Tensor[(504), float32]) {
  %862 = @func_2193() /* ty=(Tensor[(13, 7, 2), float32],) */;
  %863 = cast(%var_2609, dtype="bool") /* ty=Tensor[(880), bool] */;
  %864 = shape_of(meta[relay.Constant][66] /* ty=Tensor[(880), uint64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %865 = cast(meta[relay.Constant][66] /* ty=Tensor[(880), uint64] */, dtype="bool") /* ty=Tensor[(880), bool] */;
  %866 = dyn.reshape(%863, %864, newshape=[]) /* ty=Tensor[(?), bool] */;
  %867 = cast(meta[relay.Constant][66] /* ty=Tensor[(880), uint64] */, dtype="float32") /* ty=Tensor[(880), float32] */;
  %868 = cast(%var_2605, dtype="uint64") /* ty=Tensor[(88), uint64] */;
  %869 = cast(meta[relay.Constant][66] /* ty=Tensor[(880), uint64] */, dtype="uint64") /* ty=Tensor[(880), uint64] */;
  %870 = cast(meta[relay.Constant][65] /* ty=Tensor[(504), int8] */, dtype="int8") /* ty=Tensor[(504), int8] */;
  %871 = reshape(%868, newshape=[11, 8, 1]) /* ty=Tensor[(11, 8, 1), uint64] */;
  %872 = reshape(%869, newshape=[11, 8, 10]) /* ty=Tensor[(11, 8, 10), uint64] */;
  %873 = reshape(%870, newshape=[504]) /* ty=Tensor[(504), int8] */;
  %874 = @func_953(%871, %872, %873) /* ty=(Tensor[(11, 8, 10), float32], Tensor[(6, 7, 12), bool], int8, Tensor[(504), int8]) */;
  %875 = %874.3;
  %876 = cast(%875, dtype="float32") /* ty=Tensor[(504), float32] */;
  %877 = %862.0;
  %878 = greater_equal(%865, %866) /* ty=Tensor[(880), bool] */;
  %879 = acosh(%867) /* ty=Tensor[(880), float32] */;
  %880 = rsqrt(%876) /* ty=Tensor[(504), float32] */;
  (%877, %var_2605, meta[relay.Constant][65] /* ty=Tensor[(504), int8] */, %878, %879, %880)
}

def @func_1935(%var_1928: Tensor[(9, 16, 10), int32], %var_1929: Tensor[(9, 16, 10), int32]) -> Tensor[(9, 16, 10), bool] {
  %881 = cast(%var_1929, dtype="bool") /* ty=Tensor[(9, 16, 10), bool] */;
  %882 = shape_of(%var_1928, dtype="int32") /* ty=Tensor[(3), int32] */;
  %883 = cast(%var_1928, dtype="bool") /* ty=Tensor[(9, 16, 10), bool] */;
  %884 = dyn.reshape(%881, %882, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%883, %884) /* ty=Tensor[(9, 16, 10), bool] */
}

def @func_2193() -> (Tensor[(13, 7, 2), float32],) {
  %885 = cast(meta[relay.Constant][67] /* ty=Tensor[(13, 7, 2), float32] */, dtype="float32") /* ty=Tensor[(13, 7, 2), float32] */;
  %886 = erf(%885) /* ty=Tensor[(13, 7, 2), float32] */;
  (%886,)
}

def @func_5919(%var_5903: Tensor[(16, 8, 3), float32], %var_5904: Tensor[(16, 8, 3), float32]) -> (Tensor[(16, 8, 3), bool],) {
  %887 = cast(%var_5904, dtype="bool") /* ty=Tensor[(16, 8, 3), bool] */;
  %888 = shape_of(%var_5903, dtype="int32") /* ty=Tensor[(3), int32] */;
  %889 = cast(%var_5903, dtype="bool") /* ty=Tensor[(16, 8, 3), bool] */;
  %890 = dyn.reshape(%887, %888, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %891 = equal(%889, %890) /* ty=Tensor[(16, 8, 3), bool] */;
  (%891,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_6348(%var_6337: Tensor[(2, 10, 13), uint8]) -> (Tensor[(2, 10, 13), uint8], Tensor[(2, 10, 13), float32]) {
  %0 = cast(meta[relay.Constant][0] /* ty=Tensor[(2, 10, 13), uint8] */, dtype="uint8") /* ty=Tensor[(2, 10, 13), uint8] */;
  %1 = shape_of(%var_6337, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2 = cast(%var_6337, dtype="uint8") /* ty=Tensor[(2, 10, 13), uint8] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %4 = cast(%var_6337, dtype="float32") /* ty=Tensor[(2, 10, 13), float32] */;
  %5 = left_shift(%2, %3) /* ty=Tensor[(2, 10, 13), uint8] */;
  %6 = log(%4) /* ty=Tensor[(2, 10, 13), float32] */;
  (%5, %6)
}

def @func_4549(%var_4547: Tensor[(15, 4, 13), float32]) -> Tensor[(15, 4, 13), float32] {
  @func_4546(%var_4547) /* ty=Tensor[(15, 4, 13), float32] */
}

def @func_1222(%var_1187: int64, %var_1188: Tensor[(13, 6, 2), int64], %var_1214: Tensor[(22, 4), uint64]) -> (Tensor[(13, 6, 2), int64], Tensor[(13, 6, 2), int8], Tensor[(6, 7, 12), bool], Tensor[(22, 4), uint64], Tensor[(440, 2), uint64], Tensor[(504), int8]) {
  %7 = cast(%var_1187, dtype="int64") /* ty=int64 */;
  %8 = cast(%var_1188, dtype="int64") /* ty=Tensor[(13, 6, 2), int64] */;
  %9 = cast(%var_1188, dtype="int8") /* ty=Tensor[(13, 6, 2), int8] */;
  %10 = cast(%var_1187, dtype="int8") /* ty=int8 */;
  %11 = cast(%var_1214, dtype="uint64") /* ty=Tensor[(22, 4), uint64] */;
  %12 = cast(meta[relay.Constant][1] /* ty=Tensor[(440, 2), uint64] */, dtype="uint64") /* ty=Tensor[(440, 2), uint64] */;
  %13 = cast(meta[relay.Constant][2] /* ty=Tensor[(504), int8] */, dtype="int8") /* ty=Tensor[(504), int8] */;
  %14 = reshape(%11, newshape=[11, 8, 1]) /* ty=Tensor[(11, 8, 1), uint64] */;
  %15 = reshape(%12, newshape=[11, 8, 10]) /* ty=Tensor[(11, 8, 10), uint64] */;
  %16 = reshape(%13, newshape=[504]) /* ty=Tensor[(504), int8] */;
  %17 = @func_953(%14, %15, %16) /* ty=(Tensor[(11, 8, 10), float32], Tensor[(6, 7, 12), bool], int8, Tensor[(504), int8]) */;
  %18 = bitwise_xor(%7, %8) /* ty=Tensor[(13, 6, 2), int64] */;
  %19 = left_shift(%9, %10) /* ty=Tensor[(13, 6, 2), int8] */;
  %20 = %17.1;
  (%18, %19, %20, %var_1214, meta[relay.Constant][1] /* ty=Tensor[(440, 2), uint64] */, meta[relay.Constant][2] /* ty=Tensor[(504), int8] */)
}

def @func_2645(%var_2643: Tensor[(88), uint64], %var_2644: Tensor[(880), uint64]) -> (Tensor[(13, 7, 2), float32], Tensor[(88), uint64], Tensor[(504), int8], Tensor[(880), bool], Tensor[(880), float32], Tensor[(504), float32]) {
  %40 = fn (%var_2605: Tensor[(88), uint64], %var_2609: Tensor[(880), uint64]) -> (Tensor[(13, 7, 2), float32], Tensor[(88), uint64], Tensor[(504), int8], Tensor[(880), bool], Tensor[(880), float32], Tensor[(504), float32]) {
    %21 = @func_2193() /* ty=(Tensor[(13, 7, 2), float32],) */;
    %22 = cast(%var_2609, dtype="bool") /* ty=Tensor[(880), bool] */;
    %23 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(880), uint64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %24 = cast(meta[relay.Constant][4] /* ty=Tensor[(880), uint64] */, dtype="bool") /* ty=Tensor[(880), bool] */;
    %25 = dyn.reshape(%22, %23, newshape=[]) /* ty=Tensor[(?), bool] */;
    %26 = cast(meta[relay.Constant][4] /* ty=Tensor[(880), uint64] */, dtype="float32") /* ty=Tensor[(880), float32] */;
    %27 = cast(%var_2605, dtype="uint64") /* ty=Tensor[(88), uint64] */;
    %28 = cast(meta[relay.Constant][4] /* ty=Tensor[(880), uint64] */, dtype="uint64") /* ty=Tensor[(880), uint64] */;
    %29 = cast(meta[relay.Constant][3] /* ty=Tensor[(504), int8] */, dtype="int8") /* ty=Tensor[(504), int8] */;
    %30 = reshape(%27, newshape=[11, 8, 1]) /* ty=Tensor[(11, 8, 1), uint64] */;
    %31 = reshape(%28, newshape=[11, 8, 10]) /* ty=Tensor[(11, 8, 10), uint64] */;
    %32 = reshape(%29, newshape=[504]) /* ty=Tensor[(504), int8] */;
    %33 = @func_953(%30, %31, %32) /* ty=(Tensor[(11, 8, 10), float32], Tensor[(6, 7, 12), bool], int8, Tensor[(504), int8]) */;
    %34 = %33.3;
    %35 = cast(%34, dtype="float32") /* ty=Tensor[(504), float32] */;
    %36 = %21.0;
    %37 = greater_equal(%24, %25) /* ty=Tensor[(880), bool] */;
    %38 = acosh(%26) /* ty=Tensor[(880), float32] */;
    %39 = rsqrt(%35) /* ty=Tensor[(504), float32] */;
    (%36, %var_2605, meta[relay.Constant][3] /* ty=Tensor[(504), int8] */, %37, %38, %39)
  };
  %40(%var_2643, %var_2644) /* ty=(Tensor[(13, 7, 2), float32], Tensor[(88), uint64], Tensor[(504), int8], Tensor[(880), bool], Tensor[(880), float32], Tensor[(504), float32]) */
}

def @func_3497() -> Tensor[(13, 7, 2), float32] {
  @func_3495() /* ty=Tensor[(13, 7, 2), float32] */
}

def @func_2767(%var_2758: Tensor[(16, 7, 8), uint64], %var_2759: Tensor[(16, 7, 8), uint64]) -> (Tensor[(16, 7, 8), uint64],) {
  %41 = cast(%var_2759, dtype="uint64") /* ty=Tensor[(16, 7, 8), uint64] */;
  %42 = shape_of(%var_2758, dtype="int32") /* ty=Tensor[(3), int32] */;
  %43 = cast(%var_2758, dtype="uint64") /* ty=Tensor[(16, 7, 8), uint64] */;
  %44 = dyn.reshape(%41, %42, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %45 = left_shift(%43, %44) /* ty=Tensor[(16, 7, 8), uint64] */;
  (%45,)
}

def @func_4253(%var_4240: Tensor[(2156), uint16]) -> (Tensor[(13, 7, 2), float32], Tensor[(88), uint64], Tensor[(2156), uint16], Tensor[(13, 7, 2), bool], Tensor[(13, 4, 3), int8], Tensor[(156), int8]) {
  %46 = @func_2799() /* ty=(Tensor[(13, 7, 2), float32],) */;
  %47 = cast(%var_4240, dtype="uint16") /* ty=Tensor[(2156), uint16] */;
  %48 = reshape(%47, newshape=[7, 308]) /* ty=Tensor[(7, 308), uint16] */;
  %49 = @func_2546(%48) /* ty=(Tensor[(13, 7, 2), float32], Tensor[(14, 11, 14), bool], Tensor[(7, 308), uint16], Tensor[(504), int8], Tensor[(88), uint64], Tensor[(40, 22), uint64], Tensor[(504), int8]) */;
  %50 = %46.0;
  %51 = cast(%50, dtype="float32") /* ty=Tensor[(13, 7, 2), float32] */;
  %52 = reshape(%51, newshape=[13, 7, 2]) /* ty=Tensor[(13, 7, 2), float32] */;
  %53 = @func_3745(%52) /* ty=(Tensor[(13, 7, 2), bool],) */;
  %54 = cast(meta[relay.Constant][5] /* ty=Tensor[(156), int8] */, dtype="int8") /* ty=Tensor[(156), int8] */;
  %55 = cast(meta[relay.Constant][5] /* ty=Tensor[(156), int8] */, dtype="int8") /* ty=Tensor[(156), int8] */;
  %56 = reshape(%54, newshape=[13, 4, 3]) /* ty=Tensor[(13, 4, 3), int8] */;
  %57 = reshape(%55, newshape=[13, 4, 3]) /* ty=Tensor[(13, 4, 3), int8] */;
  %58 = %49.4;
  %59 = %53.0;
  %60 = @func_1437(%56, %57) /* ty=Tensor[(13, 4, 3), int8] */;
  (%50, %58, %var_4240, %59, %60, meta[relay.Constant][5] /* ty=Tensor[(156), int8] */)
}

def @func_207(%var_205: Tensor[(11, 3, 9), int16], %var_206: Tensor[(11, 3, 9), int16]) -> Tensor[(11, 3, 9), int16] {
  %65 = fn (%var_199: Tensor[(11, 3, 9), int16], %var_200: Tensor[(11, 3, 9), int16]) -> Tensor[(11, 3, 9), int16] {
    %61 = cast(%var_200, dtype="int16") /* ty=Tensor[(11, 3, 9), int16] */;
    %62 = shape_of(%var_199, dtype="int32") /* ty=Tensor[(3), int32] */;
    %63 = cast(%var_199, dtype="int16") /* ty=Tensor[(11, 3, 9), int16] */;
    %64 = dyn.reshape(%61, %62, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    left_shift(%63, %64) /* ty=Tensor[(11, 3, 9), int16] */
  };
  %65(%var_205, %var_206) /* ty=Tensor[(11, 3, 9), int16] */
}

def @func_4810() -> Tensor[(2, 5, 7), bool] {
  %66 = @func_3465() /* ty=(Tensor[(2, 5, 7), bool],) */;
  %66.0
}

def @func_6169() -> (Tensor[(13, 7, 2), float32],) {
  %67 = @func_3828() /* ty=Tensor[(13, 7, 2), float32] */;
  (%67,)
}

def @func_4546(%var_4539: Tensor[(15, 4, 13), float32]) -> Tensor[(15, 4, 13), float32] {
  %68 = cast(%var_4539, dtype="float32") /* ty=Tensor[(15, 4, 13), float32] */;
  acosh(%68) /* ty=Tensor[(15, 4, 13), float32] */
}

def @func_4667(%var_4642: Tensor[(156), int8], %var_4661: Tensor[(8, 70), bool]) -> (Tensor[(432), float32], Tensor[(6, 7, 12), bool], Tensor[(88), uint64], Tensor[(156), int8], Tensor[(14), float32], Tensor[(156), int8], Tensor[(880), uint64], Tensor[(288), float64], Tensor[(880), uint64], Tensor[(8, 70), bool]) {
  %69 = @func_3856() /* ty=(Tensor[(13, 7, 2), float32], Tensor[(12, 9, 4), float32], Tensor[(432), float32]) */;
  %70 = cast(meta[relay.Constant][6] /* ty=Tensor[(88), uint64] */, dtype="uint64") /* ty=Tensor[(88), uint64] */;
  %71 = reshape(%70, newshape=[2, 44]) /* ty=Tensor[(2, 44), uint64] */;
  %72 = @func_3305(%71) /* ty=(Tensor[(13, 7, 2), float32], Tensor[(6, 7, 12), bool], Tensor[(2, 44), uint64], Tensor[(880), uint64], Tensor[(504), int8]) */;
  %73 = cast(meta[relay.Constant][7] /* ty=Tensor[(14), float32] */, dtype="float32") /* ty=Tensor[(14), float32] */;
  %74 = cast(%var_4642, dtype="int8") /* ty=Tensor[(156), int8] */;
  %75 = reshape(%73, newshape=[7, 1, 2]) /* ty=Tensor[(7, 1, 2), float32] */;
  %76 = reshape(%74, newshape=[156]) /* ty=Tensor[(156), int8] */;
  %77 = @func_1638(%75, %76) /* ty=(Tensor[(11, 5, 7), uint8], Tensor[(385), float64], Tensor[(13, 4, 3), int8], Tensor[(156), int8], Tensor[(7, 1, 2), float64], Tensor[(7, ?, 2), float32], Tensor[(440, 2), uint64], int64, Tensor[(88), uint64]) */;
  %78 = cast(meta[relay.Constant][8] /* ty=Tensor[(288), float64] */, dtype="float64") /* ty=Tensor[(288), float64] */;
  %79 = cast(meta[relay.Constant][9] /* ty=Tensor[(1, 70), bool] */, dtype="bool") /* ty=Tensor[(1, 70), bool] */;
  %80 = cast(meta[relay.Constant][10] /* ty=Tensor[(880), uint64] */, dtype="uint64") /* ty=Tensor[(880), uint64] */;
  %81 = reshape(%78, newshape=[4, 8, 9]) /* ty=Tensor[(4, 8, 9), float64] */;
  %82 = reshape(%79, newshape=[70]) /* ty=Tensor[(70), bool] */;
  %83 = reshape(%80, newshape=[880]) /* ty=Tensor[(880), uint64] */;
  %84 = @func_2374(%81, %82, %83) /* ty=(Tensor[(4, 8, 9), float64], Tensor[(15, 9, 13), float64], Tensor[(70), bool], Tensor[(700), bool], Tensor[(8, 140), int8], Tensor[(880), uint64], Tensor[(1, 385), float64]) */;
  %85 = cast(meta[relay.Constant][9] /* ty=Tensor[(1, 70), bool] */, dtype="bool") /* ty=Tensor[(1, 70), bool] */;
  %86 = cast(%var_4661, dtype="bool") /* ty=Tensor[(8, 70), bool] */;
  %87 = %69.2;
  %88 = %72.1;
  %89 = %77.3;
  %90 = %84.5;
  %91 = greater(%85, %86) /* ty=Tensor[(8, 70), bool] */;
  (%87, %88, meta[relay.Constant][6] /* ty=Tensor[(88), uint64] */, %89, meta[relay.Constant][7] /* ty=Tensor[(14), float32] */, %var_4642, %90, meta[relay.Constant][8] /* ty=Tensor[(288), float64] */, meta[relay.Constant][10] /* ty=Tensor[(880), uint64] */, %91)
}

def @func_5955() -> (Tensor[(13, 7, 2), float32],) {
  %94 = fn () -> (Tensor[(13, 7, 2), float32],) {
    %92 = @func_3812() /* ty=(Tensor[(13, 7, 2), float32],) */;
    %93 = %92.0;
    (%93,)
  };
  %94() /* ty=(Tensor[(13, 7, 2), float32],) */
}

def @func_2296(%var_2290: Tensor[(144), float64], %var_2291: Tensor[(1120), int8], %var_2292: Tensor[(1, 88), uint64], %var_2293: Tensor[(880), uint64], %var_2294: Tensor[(385), float64], %var_2295: Tensor[(14), float32]) -> (Tensor[(144), float64], Tensor[(2, 9, 8), float32], Tensor[(13, 7, 2), float32], Tensor[(11, 5, 7), uint8], Tensor[(1120), int8], Tensor[(1, 88), uint64], Tensor[(880), uint64], Tensor[(385), float64], Tensor[(11, 5, 7), uint8], Tensor[(14), float32], Tensor[(156), int8]) {
  @func_2288(%var_2290, %var_2291, %var_2292, %var_2293, %var_2294, %var_2295) /* ty=(Tensor[(144), float64], Tensor[(2, 9, 8), float32], Tensor[(13, 7, 2), float32], Tensor[(11, 5, 7), uint8], Tensor[(1120), int8], Tensor[(1, 88), uint64], Tensor[(880), uint64], Tensor[(385), float64], Tensor[(11, 5, 7), uint8], Tensor[(14), float32], Tensor[(156), int8]) */
}

def @func_3909(%var_3906: Tensor[(15, 13, 13), float32], %var_3907: Tensor[(288), float64], %var_3908: Tensor[(40, 22), uint64]) -> (Tensor[(15, 13, 13), float32], Tensor[(13, 7, 2), float32], Tensor[(8, 140), int8], Tensor[(288), float64], Tensor[(70), bool], Tensor[(40, 22), uint64]) {
  @func_3904(%var_3906, %var_3907, %var_3908) /* ty=(Tensor[(15, 13, 13), float32], Tensor[(13, 7, 2), float32], Tensor[(8, 140), int8], Tensor[(288), float64], Tensor[(70), bool], Tensor[(40, 22), uint64]) */
}

def @func_4996() -> (Tensor[(13, 7, 2), float32],) {
  @func_4994() /* ty=(Tensor[(13, 7, 2), float32],) */
}

def @func_6433() -> (Tensor[(13, 7, 2), float32],) {
  @func_6431() /* ty=(Tensor[(13, 7, 2), float32],) */
}

def @func_2378(%var_2375: Tensor[(4, 8, 9), float64], %var_2376: Tensor[(70), bool], %var_2377: Tensor[(880), uint64]) -> (Tensor[(4, 8, 9), float64], Tensor[(15, 9, 13), float64], Tensor[(70), bool], Tensor[(700), bool], Tensor[(8, 140), int8], Tensor[(880), uint64], Tensor[(1, 385), float64]) {
  %109 = fn (%var_2356: Tensor[(4, 8, 9), float64], %var_2363: Tensor[(70), bool], %var_2366: Tensor[(880), uint64]) -> (Tensor[(4, 8, 9), float64], Tensor[(15, 9, 13), float64], Tensor[(70), bool], Tensor[(700), bool], Tensor[(8, 140), int8], Tensor[(880), uint64], Tensor[(1, 385), float64]) {
    %95 = cast(%var_2356, dtype="float64") /* ty=Tensor[(4, 8, 9), float64] */;
    %96 = cast(%var_2363, dtype="bool") /* ty=Tensor[(70), bool] */;
    %97 = cast(meta[relay.Constant][11] /* ty=Tensor[(700), bool] */, dtype="bool") /* ty=Tensor[(700), bool] */;
    %98 = cast(meta[relay.Constant][12] /* ty=Tensor[(8, 140), int8] */, dtype="int8") /* ty=Tensor[(8, 140), int8] */;
    %99 = cast(%var_2366, dtype="uint64") /* ty=Tensor[(880), uint64] */;
    %100 = cast(meta[relay.Constant][13] /* ty=Tensor[(1, 385), float64] */, dtype="float64") /* ty=Tensor[(1, 385), float64] */;
    %101 = reshape(%96, newshape=[10, 7, 1]) /* ty=Tensor[(10, 7, 1), bool] */;
    %102 = reshape(%97, newshape=[10, 7, 10]) /* ty=Tensor[(10, 7, 10), bool] */;
    %103 = reshape(%98, newshape=[560, 2]) /* ty=Tensor[(560, 2), int8] */;
    %104 = reshape(%99, newshape=[880]) /* ty=Tensor[(880), uint64] */;
    %105 = reshape(%100, newshape=[385]) /* ty=Tensor[(385), float64] */;
    %106 = @func_1521(%101, %102, %103, %104, %105) /* ty=(Tensor[(10, 7, 10), bool], Tensor[(135), int16], int8, Tensor[(560, 2), int8], Tensor[(88), uint64], Tensor[(880), uint64], Tensor[(385), float64], Tensor[(6, 7, 12), bool], Tensor[(240), float32], Tensor[(15, 9, 13), float64], Tensor[(6, 7, 12), bool]) */;
    %107 = rsqrt(%95) /* ty=Tensor[(4, 8, 9), float64] */;
    %108 = %106.9;
    (%107, %108, %var_2363, meta[relay.Constant][11] /* ty=Tensor[(700), bool] */, meta[relay.Constant][12] /* ty=Tensor[(8, 140), int8] */, %var_2366, meta[relay.Constant][13] /* ty=Tensor[(1, 385), float64] */)
  };
  %109(%var_2375, %var_2376, %var_2377) /* ty=(Tensor[(4, 8, 9), float64], Tensor[(15, 9, 13), float64], Tensor[(70), bool], Tensor[(700), bool], Tensor[(8, 140), int8], Tensor[(880), uint64], Tensor[(1, 385), float64]) */
}

def @func_3830() -> Tensor[(13, 7, 2), float32] {
  @func_3828() /* ty=Tensor[(13, 7, 2), float32] */
}

def @main(%var_6674: float64, %var_6675: Tensor[(11, 5, 4), float64]) -> Tensor[(11, 5, 4), int32] {
  %110 = cast(%var_6674, dtype="float64") /* ty=float64 */;
  %111 = cast(%var_6675, dtype="float64") /* ty=Tensor[(11, 5, 4), float64] */;
  %112 = power(%110, %111) /* ty=Tensor[(11, 5, 4), float64] */;
  %113 = cast(%var_6675, dtype="bool") /* ty=Tensor[(11, 5, 4), bool] */;
  %114 = shape_of(%112, dtype="int32") /* ty=Tensor[(3), int32] */;
  %115 = cast(%112, dtype="bool") /* ty=Tensor[(11, 5, 4), bool] */;
  %116 = dyn.reshape(%113, %114, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %117 = logical_and(%115, %116) /* ty=Tensor[(11, 5, 4), bool] */;
  %118 = cast(%117, dtype="float32") /* ty=Tensor[(11, 5, 4), float32] */;
  %119 = rsqrt(%118) /* ty=Tensor[(11, 5, 4), float32] */;
  %120 = cast(%var_6675, dtype="int32") /* ty=Tensor[(11, 5, 4), int32] */;
  %121 = shape_of(%119, dtype="int32") /* ty=Tensor[(3), int32] */;
  %122 = cast(%119, dtype="int32") /* ty=Tensor[(11, 5, 4), int32] */;
  %123 = dyn.reshape(%120, %121, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  maximum(%122, %123) /* ty=Tensor[(11, 5, 4), int32] */
}

def @func_4886(%var_4869: Tensor[(880), uint64]) -> (Tensor[(13, 7, 2), float32], Tensor[(880), uint64], Tensor[(288), float64], Tensor[(70), bool], Tensor[(880), uint64], Tensor[(13, 7, 2), float32]) {
  %124 = @func_2717() /* ty=(Tensor[(13, 7, 2), float32],) */;
  %125 = cast(meta[relay.Constant][14] /* ty=Tensor[(288), float64] */, dtype="float64") /* ty=Tensor[(288), float64] */;
  %126 = cast(meta[relay.Constant][15] /* ty=Tensor[(70), bool] */, dtype="bool") /* ty=Tensor[(70), bool] */;
  %127 = cast(%var_4869, dtype="uint64") /* ty=Tensor[(880), uint64] */;
  %128 = reshape(%125, newshape=[4, 8, 9]) /* ty=Tensor[(4, 8, 9), float64] */;
  %129 = reshape(%126, newshape=[70]) /* ty=Tensor[(70), bool] */;
  %130 = reshape(%127, newshape=[880]) /* ty=Tensor[(880), uint64] */;
  %131 = @func_2374(%128, %129, %130) /* ty=(Tensor[(4, 8, 9), float64], Tensor[(15, 9, 13), float64], Tensor[(70), bool], Tensor[(700), bool], Tensor[(8, 140), int8], Tensor[(880), uint64], Tensor[(1, 385), float64]) */;
  %132 = @func_4317() /* ty=(Tensor[(13, 7, 2), float32],) */;
  %133 = %124.0;
  %134 = %131.5;
  %135 = %132.0;
  (%133, %134, meta[relay.Constant][14] /* ty=Tensor[(288), float64] */, meta[relay.Constant][15] /* ty=Tensor[(70), bool] */, %var_4869, %135)
}

def @func_43(%var_41: Tensor[(11, 5, 7), float64]) -> Tensor[(11, 5, 7), uint8] {
  @func_40(%var_41) /* ty=Tensor[(11, 5, 7), uint8] */
}

def @func_2338(%var_2302: Tensor[(135), int16]) -> (Tensor[(13, 7, 2), float32], Tensor[(135), int16], Tensor[(15, 9, 13), float64], Tensor[(11, 3, 9), int16], Tensor[(297), int16]) {
  %136 = @func_2193() /* ty=(Tensor[(13, 7, 2), float32],) */;
  %137 = cast(%var_2302, dtype="int16") /* ty=Tensor[(135), int16] */;
  %138 = reshape(%137, newshape=[15, 9, 1]) /* ty=Tensor[(15, 9, 1), int16] */;
  %139 = @func_1054(%138) /* ty=(Tensor[(15, 9, 13), int16],) */;
  %140 = %139.0;
  %141 = cast(%140, dtype="float64") /* ty=Tensor[(15, 9, 13), float64] */;
  %142 = cast(meta[relay.Constant][16] /* ty=Tensor[(297), int16] */, dtype="int16") /* ty=Tensor[(297), int16] */;
  %143 = cast(meta[relay.Constant][16] /* ty=Tensor[(297), int16] */, dtype="int16") /* ty=Tensor[(297), int16] */;
  %144 = reshape(%142, newshape=[11, 3, 9]) /* ty=Tensor[(11, 3, 9), int16] */;
  %145 = reshape(%143, newshape=[11, 3, 9]) /* ty=Tensor[(11, 3, 9), int16] */;
  %146 = %136.0;
  %147 = log10(%141) /* ty=Tensor[(15, 9, 13), float64] */;
  %148 = @func_204(%144, %145) /* ty=Tensor[(11, 3, 9), int16] */;
  (%146, %var_2302, %147, %148, meta[relay.Constant][16] /* ty=Tensor[(297), int16] */)
}

def @func_6171() -> (Tensor[(13, 7, 2), float32],) {
  @func_6169() /* ty=(Tensor[(13, 7, 2), float32],) */
}

def @func_5140() -> (Tensor[(13, 7, 2), float32], Tensor[(13, 7, 2), bool], Tensor[(2, 5, 7), float32]) {
  %149 = @func_2799() /* ty=(Tensor[(13, 7, 2), float32],) */;
  %150 = %149.0;
  %151 = cast(%150, dtype="float32") /* ty=Tensor[(13, 7, 2), float32] */;
  %152 = reshape(%151, newshape=[13, 7, 2]) /* ty=Tensor[(13, 7, 2), float32] */;
  %153 = @func_3745(%152) /* ty=(Tensor[(13, 7, 2), bool],) */;
  %154 = @func_4810() /* ty=Tensor[(2, 5, 7), bool] */;
  %155 = cast(%154, dtype="float32") /* ty=Tensor[(2, 5, 7), float32] */;
  %156 = %153.0;
  %157 = atanh(%155) /* ty=Tensor[(2, 5, 7), float32] */;
  (%150, %156, %157)
}

def @func_6313(%var_6312: Tensor[(880), uint64]) -> (Tensor[(13, 7, 2), float32], Tensor[(504), float32], Tensor[(88), uint64], Tensor[(880), uint64], Tensor[(13, 7, 2), uint64], Tensor[(13, 7, 2), float32]) {
  %169 = fn (%var_6273: Tensor[(880), uint64]) -> (Tensor[(13, 7, 2), float32], Tensor[(504), float32], Tensor[(88), uint64], Tensor[(880), uint64], Tensor[(13, 7, 2), uint64], Tensor[(13, 7, 2), float32]) {
    %158 = cast(meta[relay.Constant][17] /* ty=Tensor[(88), uint64] */, dtype="uint64") /* ty=Tensor[(88), uint64] */;
    %159 = cast(%var_6273, dtype="uint64") /* ty=Tensor[(880), uint64] */;
    %160 = reshape(%158, newshape=[88]) /* ty=Tensor[(88), uint64] */;
    %161 = reshape(%159, newshape=[880]) /* ty=Tensor[(880), uint64] */;
    %162 = @func_2642(%160, %161) /* ty=(Tensor[(13, 7, 2), float32], Tensor[(88), uint64], Tensor[(504), int8], Tensor[(880), bool], Tensor[(880), float32], Tensor[(504), float32]) */;
    %163 = @func_3207() /* ty=(Tensor[(13, 7, 2), uint64], Tensor[(13, 7, 2), float32], Tensor[(13, 7, 2), float64]) */;
    %164 = @func_2193() /* ty=(Tensor[(13, 7, 2), float32],) */;
    %165 = @func_2410() /* ty=Tensor[(13, 7, 2), float32] */;
    %166 = %162.5;
    %167 = %163.0;
    %168 = %164.0;
    (%165, %166, meta[relay.Constant][17] /* ty=Tensor[(88), uint64] */, %var_6273, %167, %168)
  };
  %169(%var_6312) /* ty=(Tensor[(13, 7, 2), float32], Tensor[(504), float32], Tensor[(88), uint64], Tensor[(880), uint64], Tensor[(13, 7, 2), uint64], Tensor[(13, 7, 2), float32]) */
}

def @func_5784(%var_5780: Tensor[(156), int8]) -> (Tensor[(2, 5, 7), bool], Tensor[(88), uint64], Tensor[(156), int8], Tensor[(560), bool]) {
  %170 = cast(%var_5780, dtype="int8") /* ty=Tensor[(156), int8] */;
  %171 = cast(meta[relay.Constant][18] /* ty=Tensor[(560), bool] */, dtype="bool") /* ty=Tensor[(560), bool] */;
  %172 = reshape(%170, newshape=[156]) /* ty=Tensor[(156), int8] */;
  %173 = reshape(%171, newshape=[8, 70]) /* ty=Tensor[(8, 70), bool] */;
  %174 = @func_4667(%172, %173) /* ty=(Tensor[(432), float32], Tensor[(6, 7, 12), bool], Tensor[(88), uint64], Tensor[(156), int8], Tensor[(14), float32], Tensor[(156), int8], Tensor[(880), uint64], Tensor[(288), float64], Tensor[(880), uint64], Tensor[(8, 70), bool]) */;
  %175 = @func_4810() /* ty=Tensor[(2, 5, 7), bool] */;
  %176 = %174.2;
  (%175, %176, %var_5780, meta[relay.Constant][18] /* ty=Tensor[(560), bool] */)
}

def @func_3881() -> Tensor[(13, 7, 2), float32] {
  @func_3879() /* ty=Tensor[(13, 7, 2), float32] */
}

def @func_6025() -> Tensor[(13, 7, 2), float32] {
  %178 = fn () -> Tensor[(13, 7, 2), float32] {
    %177 = @func_2799() /* ty=(Tensor[(13, 7, 2), float32],) */;
    %177.0
  };
  %178() /* ty=Tensor[(13, 7, 2), float32] */
}

def @func_5800() -> (Tensor[(13, 7, 2), float32],) {
  %179 = @func_3828() /* ty=Tensor[(13, 7, 2), float32] */;
  (%179,)
}

def @func_5659(%var_5657: Tensor[(2, 5, 7), bool]) -> (Tensor[(2, 5, 7), int32], Tensor[(2, 5, 7), bool]) {
  @func_5656(%var_5657) /* ty=(Tensor[(2, 5, 7), int32], Tensor[(2, 5, 7), bool]) */
}

def @func_3132(%var_3077: Tensor[(1120), int8], %var_3078: Tensor[(88), uint64], %var_3079: Tensor[(880), uint64], %var_3080: Tensor[(385), float64], %var_3081: Tensor[(14), float32], %var_3090: Tensor[(1440), int32], %var_3116: Tensor[(156), int8]) -> (Tensor[(13, 7, 2), float32], Tensor[(144), float64], Tensor[(144), float64], Tensor[(1120), int8], Tensor[(88), uint64], Tensor[(880), uint64], Tensor[(385), float64], Tensor[(14), float32], Tensor[(1440), int32], Tensor[(2, 9, 8), float32], Tensor[(13, 4, 3), int8], Tensor[(156), int8], Tensor[(2, 720), float32]) {
  %180 = @func_2799() /* ty=(Tensor[(13, 7, 2), float32],) */;
  %181 = cast(meta[relay.Constant][19] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %182 = cast(%var_3077, dtype="int8") /* ty=Tensor[(1120), int8] */;
  %183 = cast(%var_3078, dtype="uint64") /* ty=Tensor[(88), uint64] */;
  %184 = cast(%var_3079, dtype="uint64") /* ty=Tensor[(880), uint64] */;
  %185 = cast(%var_3080, dtype="float64") /* ty=Tensor[(385), float64] */;
  %186 = cast(%var_3081, dtype="float32") /* ty=Tensor[(14), float32] */;
  %187 = reshape(%181, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %188 = reshape(%182, newshape=[1120]) /* ty=Tensor[(1120), int8] */;
  %189 = reshape(%183, newshape=[1, 88]) /* ty=Tensor[(1, 88), uint64] */;
  %190 = reshape(%184, newshape=[880]) /* ty=Tensor[(880), uint64] */;
  %191 = reshape(%185, newshape=[385]) /* ty=Tensor[(385), float64] */;
  %192 = reshape(%186, newshape=[14]) /* ty=Tensor[(14), float32] */;
  %193 = @func_2288(%187, %188, %189, %190, %191, %192) /* ty=(Tensor[(144), float64], Tensor[(2, 9, 8), float32], Tensor[(13, 7, 2), float32], Tensor[(11, 5, 7), uint8], Tensor[(1120), int8], Tensor[(1, 88), uint64], Tensor[(880), uint64], Tensor[(385), float64], Tensor[(11, 5, 7), uint8], Tensor[(14), float32], Tensor[(156), int8]) */;
  %194 = cast(meta[relay.Constant][19] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %195 = cast(%var_3077, dtype="int8") /* ty=Tensor[(1120), int8] */;
  %196 = cast(%var_3078, dtype="uint64") /* ty=Tensor[(88), uint64] */;
  %197 = cast(%var_3079, dtype="uint64") /* ty=Tensor[(880), uint64] */;
  %198 = cast(%var_3080, dtype="float64") /* ty=Tensor[(385), float64] */;
  %199 = cast(%var_3081, dtype="float32") /* ty=Tensor[(14), float32] */;
  %200 = reshape(%194, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %201 = reshape(%195, newshape=[1120]) /* ty=Tensor[(1120), int8] */;
  %202 = reshape(%196, newshape=[1, 88]) /* ty=Tensor[(1, 88), uint64] */;
  %203 = reshape(%197, newshape=[880]) /* ty=Tensor[(880), uint64] */;
  %204 = reshape(%198, newshape=[385]) /* ty=Tensor[(385), float64] */;
  %205 = reshape(%199, newshape=[14]) /* ty=Tensor[(14), float32] */;
  %206 = @func_2288(%200, %201, %202, %203, %204, %205) /* ty=(Tensor[(144), float64], Tensor[(2, 9, 8), float32], Tensor[(13, 7, 2), float32], Tensor[(11, 5, 7), uint8], Tensor[(1120), int8], Tensor[(1, 88), uint64], Tensor[(880), uint64], Tensor[(385), float64], Tensor[(11, 5, 7), uint8], Tensor[(14), float32], Tensor[(156), int8]) */;
  %207 = cast(%var_3116, dtype="int8") /* ty=Tensor[(156), int8] */;
  %208 = cast(%var_3116, dtype="int8") /* ty=Tensor[(156), int8] */;
  %209 = reshape(%207, newshape=[13, 4, 3]) /* ty=Tensor[(13, 4, 3), int8] */;
  %210 = reshape(%208, newshape=[13, 4, 3]) /* ty=Tensor[(13, 4, 3), int8] */;
  %211 = cast(%var_3090, dtype="int32") /* ty=Tensor[(1440), int32] */;
  %212 = reshape(%211, newshape=[2, 720]) /* ty=Tensor[(2, 720), int32] */;
  %213 = @func_2448(%212) /* ty=(Tensor[(13, 7, 2), float32], Tensor[(9, 16, 10), bool], Tensor[(2, 720), int32]) */;
  %214 = %213.2;
  %215 = cast(%214, dtype="float64") /* ty=Tensor[(2, 720), float64] */;
  %216 = asin(%215) /* ty=Tensor[(2, 720), float64] */;
  %217 = cast(%214, dtype="bool") /* ty=Tensor[(2, 720), bool] */;
  %218 = shape_of(%216, dtype="int32") /* ty=Tensor[(2), int32] */;
  %219 = cast(%216, dtype="bool") /* ty=Tensor[(2, 720), bool] */;
  %220 = dyn.reshape(%217, %218, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %221 = not_equal(%219, %220) /* ty=Tensor[(2, 720), bool] */;
  %222 = cast(%221, dtype="bool") /* ty=Tensor[(2, 720), bool] */;
  %223 = shape_of(%216, dtype="int32") /* ty=Tensor[(2), int32] */;
  %224 = cast(%216, dtype="bool") /* ty=Tensor[(2, 720), bool] */;
  %225 = dyn.reshape(%222, %223, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %226 = logical_or(%224, %225) /* ty=Tensor[(2, 720), bool] */;
  %227 = cast(meta[relay.Constant][20] /* ty=Tensor[(2, 720), bool] */, dtype="float32") /* ty=Tensor[(2, 720), float32] */;
  %228 = shape_of(%226, dtype="int32") /* ty=Tensor[(2), int32] */;
  %229 = cast(%226, dtype="float32") /* ty=Tensor[(2, 720), float32] */;
  %230 = dyn.reshape(%227, %228, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %231 = %180.0;
  %232 = %193.0;
  %233 = %206.1;
  %234 = @func_1437(%209, %210) /* ty=Tensor[(13, 4, 3), int8] */;
  %235 = floor_divide(%229, %230) /* ty=Tensor[(2, 720), float32] */;
  (%231, %232, meta[relay.Constant][19] /* ty=Tensor[(144), float64] */, %var_3077, %var_3078, %var_3079, %var_3080, %var_3081, %var_3090, %233, %234, %var_3116, %235)
}

def @func_4812() -> Tensor[(2, 5, 7), bool] {
  @func_4810() /* ty=Tensor[(2, 5, 7), bool] */
}

def @func_1528(%var_1523: Tensor[(10, 7, 1), bool], %var_1524: Tensor[(10, 7, 10), bool], %var_1525: Tensor[(560, 2), int8], %var_1526: Tensor[(880), uint64], %var_1527: Tensor[(385), float64]) -> (Tensor[(10, 7, 10), bool], Tensor[(135), int16], int8, Tensor[(560, 2), int8], Tensor[(88), uint64], Tensor[(880), uint64], Tensor[(385), float64], Tensor[(6, 7, 12), bool], Tensor[(240), float32], Tensor[(15, 9, 13), float64], Tensor[(6, 7, 12), bool]) {
  @func_1521(%var_1523, %var_1524, %var_1525, %var_1526, %var_1527) /* ty=(Tensor[(10, 7, 10), bool], Tensor[(135), int16], int8, Tensor[(560, 2), int8], Tensor[(88), uint64], Tensor[(880), uint64], Tensor[(385), float64], Tensor[(6, 7, 12), bool], Tensor[(240), float32], Tensor[(15, 9, 13), float64], Tensor[(6, 7, 12), bool]) */
}

def @func_1938(%var_1936: Tensor[(9, 16, 10), int32], %var_1937: Tensor[(9, 16, 10), int32]) -> Tensor[(9, 16, 10), bool] {
  %240 = fn (%var_1928: Tensor[(9, 16, 10), int32], %var_1929: Tensor[(9, 16, 10), int32]) -> Tensor[(9, 16, 10), bool] {
    %236 = cast(%var_1929, dtype="bool") /* ty=Tensor[(9, 16, 10), bool] */;
    %237 = shape_of(%var_1928, dtype="int32") /* ty=Tensor[(3), int32] */;
    %238 = cast(%var_1928, dtype="bool") /* ty=Tensor[(9, 16, 10), bool] */;
    %239 = dyn.reshape(%236, %237, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    greater(%238, %239) /* ty=Tensor[(9, 16, 10), bool] */
  };
  %240(%var_1936, %var_1937) /* ty=Tensor[(9, 16, 10), bool] */
}

def @func_3467() -> (Tensor[(2, 5, 7), bool],) {
  @func_3465() /* ty=(Tensor[(2, 5, 7), bool],) */
}

def @func_5534(%var_5532: Tensor[(1, 15, 13), uint8], %var_5533: Tensor[(10, 15, 13), uint8]) -> (Tensor[(10, 15, 13), uint8], Tensor[(13, 7, 2), float32], Tensor[(13, 7, 2), float32]) {
  %248 = fn (%var_5517: Tensor[(1, 15, 13), uint8], %var_5518: Tensor[(10, 15, 13), uint8]) -> (Tensor[(10, 15, 13), uint8], Tensor[(13, 7, 2), float32], Tensor[(13, 7, 2), float32]) {
    %241 = cast(%var_5517, dtype="uint8") /* ty=Tensor[(1, 15, 13), uint8] */;
    %242 = cast(%var_5518, dtype="uint8") /* ty=Tensor[(10, 15, 13), uint8] */;
    %243 = @func_2799() /* ty=(Tensor[(13, 7, 2), float32],) */;
    %244 = @func_3812() /* ty=(Tensor[(13, 7, 2), float32],) */;
    %245 = right_shift(%241, %242) /* ty=Tensor[(10, 15, 13), uint8] */;
    %246 = %243.0;
    %247 = %244.0;
    (%245, %246, %247)
  };
  %248(%var_5532, %var_5533) /* ty=(Tensor[(10, 15, 13), uint8], Tensor[(13, 7, 2), float32], Tensor[(13, 7, 2), float32]) */
}

def @func_1955(%var_1953: Tensor[(14, 11, 14), uint16], %var_1954: Tensor[(14, 11, 14), uint16]) -> (Tensor[(14, 11, 14), bool],) {
  %254 = fn (%var_1947: Tensor[(14, 11, 14), uint16], %var_1948: Tensor[(14, 11, 14), uint16]) -> (Tensor[(14, 11, 14), bool],) {
    %249 = cast(%var_1948, dtype="bool") /* ty=Tensor[(14, 11, 14), bool] */;
    %250 = shape_of(%var_1947, dtype="int32") /* ty=Tensor[(3), int32] */;
    %251 = cast(%var_1947, dtype="bool") /* ty=Tensor[(14, 11, 14), bool] */;
    %252 = dyn.reshape(%249, %250, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %253 = not_equal(%251, %252) /* ty=Tensor[(14, 11, 14), bool] */;
    (%253,)
  };
  %254(%var_1953, %var_1954) /* ty=(Tensor[(14, 11, 14), bool],) */
}

def @func_3308(%var_3306: Tensor[(2, 44), uint64]) -> (Tensor[(13, 7, 2), float32], Tensor[(6, 7, 12), bool], Tensor[(2, 44), uint64], Tensor[(880), uint64], Tensor[(504), int8]) {
  @func_3305(%var_3306) /* ty=(Tensor[(13, 7, 2), float32], Tensor[(6, 7, 12), bool], Tensor[(2, 44), uint64], Tensor[(880), uint64], Tensor[(504), int8]) */
}

def @func_4523() -> Tensor[(13, 7, 2), float32] {
  %255 = @func_3812() /* ty=(Tensor[(13, 7, 2), float32],) */;
  %255.0
}

def @func_5142() -> (Tensor[(13, 7, 2), float32], Tensor[(13, 7, 2), bool], Tensor[(2, 5, 7), float32]) {
  @func_5140() /* ty=(Tensor[(13, 7, 2), float32], Tensor[(13, 7, 2), bool], Tensor[(2, 5, 7), float32]) */
}

def @func_1469(%var_1467: Tensor[(2, 9, 8), float64], %var_1468: Tensor[(2, 9, 8), float64]) -> Tensor[(2, 9, 8), float64] {
  @func_1465(%var_1467, %var_1468) /* ty=Tensor[(2, 9, 8), float64] */
}

def @func_1638(%var_1603: Tensor[(7, 1, 2), float32], %var_1613: Tensor[(156), int8]) -> (Tensor[(11, 5, 7), uint8], Tensor[(385), float64], Tensor[(13, 4, 3), int8], Tensor[(156), int8], Tensor[(7, 1, 2), float64], Tensor[(7, ?, 2), float32], Tensor[(440, 2), uint64], int64, Tensor[(88), uint64]) {
  %256 = cast(meta[relay.Constant][21] /* ty=Tensor[(385), float64] */, dtype="float64") /* ty=Tensor[(385), float64] */;
  %257 = reshape(%256, newshape=[11, 5, 7]) /* ty=Tensor[(11, 5, 7), float64] */;
  %258 = cast(%var_1613, dtype="int8") /* ty=Tensor[(156), int8] */;
  %259 = cast(%var_1613, dtype="int8") /* ty=Tensor[(156), int8] */;
  %260 = reshape(%258, newshape=[13, 4, 3]) /* ty=Tensor[(13, 4, 3), int8] */;
  %261 = reshape(%259, newshape=[13, 4, 3]) /* ty=Tensor[(13, 4, 3), int8] */;
  %262 = cast(%var_1603, dtype="float32") /* ty=Tensor[(7, 1, 2), float32] */;
  %263 = asin(%262) /* ty=Tensor[(7, 1, 2), float32] */;
  %264 = cast(%263, dtype="float32") /* ty=Tensor[(7, 1, 2), float32] */;
  %265 = cos(%264) /* ty=Tensor[(7, 1, 2), float32] */;
  %266 = cast(%265, dtype="float64") /* ty=Tensor[(7, 1, 2), float64] */;
  %267 = cast(%var_1603, dtype="uint8") /* ty=Tensor[(7, 1, 2), uint8] */;
  %268 = shape_of(%263, dtype="int32") /* ty=Tensor[(3), int32] */;
  %269 = cast(%263, dtype="uint8") /* ty=Tensor[(7, 1, 2), uint8] */;
  %270 = dyn.reshape(%267, %268, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %271 = left_shift(%269, %270) /* ty=Tensor[(7, ?, 2), uint8] */;
  %272 = cast(%271, dtype="float32") /* ty=Tensor[(7, ?, 2), float32] */;
  %273 = cast(-6 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %274 = cast(%var_1613, dtype="int64") /* ty=Tensor[(156), int64] */;
  %275 = cast(meta[relay.Constant][22] /* ty=Tensor[(88), uint64] */, dtype="uint64") /* ty=Tensor[(88), uint64] */;
  %276 = reshape(%273, newshape=[]) /* ty=int64 */;
  %277 = reshape(%274, newshape=[13, 6, 2]) /* ty=Tensor[(13, 6, 2), int64] */;
  %278 = reshape(%275, newshape=[22, 4]) /* ty=Tensor[(22, 4), uint64] */;
  %279 = @func_1222(%276, %277, %278) /* ty=(Tensor[(13, 6, 2), int64], Tensor[(13, 6, 2), int8], Tensor[(6, 7, 12), bool], Tensor[(22, 4), uint64], Tensor[(440, 2), uint64], Tensor[(504), int8]) */;
  %280 = @func_40(%257) /* ty=Tensor[(11, 5, 7), uint8] */;
  %281 = @func_1437(%260, %261) /* ty=Tensor[(13, 4, 3), int8] */;
  %282 = asinh(%266) /* ty=Tensor[(7, 1, 2), float64] */;
  %283 = atan(%272) /* ty=Tensor[(7, ?, 2), float32] */;
  %284 = %279.4;
  (%280, meta[relay.Constant][21] /* ty=Tensor[(385), float64] */, %281, %var_1613, %282, %283, %284, -6 /* ty=int64 */, meta[relay.Constant][22] /* ty=Tensor[(88), uint64] */)
}

def @func_1227(%var_1224: int64, %var_1225: Tensor[(13, 6, 2), int64], %var_1226: Tensor[(22, 4), uint64]) -> (Tensor[(13, 6, 2), int64], Tensor[(13, 6, 2), int8], Tensor[(6, 7, 12), bool], Tensor[(22, 4), uint64], Tensor[(440, 2), uint64], Tensor[(504), int8]) {
  @func_1222(%var_1224, %var_1225, %var_1226) /* ty=(Tensor[(13, 6, 2), int64], Tensor[(13, 6, 2), int8], Tensor[(6, 7, 12), bool], Tensor[(22, 4), uint64], Tensor[(440, 2), uint64], Tensor[(504), int8]) */
}

def @func_3208() -> (Tensor[(13, 7, 2), uint64], Tensor[(13, 7, 2), float32], Tensor[(13, 7, 2), float64]) {
  %296 = fn () -> (Tensor[(13, 7, 2), uint64], Tensor[(13, 7, 2), float32], Tensor[(13, 7, 2), float64]) {
    %285 = @func_2717() /* ty=(Tensor[(13, 7, 2), float32],) */;
    %286 = %285.0;
    %287 = cast(meta[relay.Constant][23] /* ty=Tensor[(13, 7, 2), float32] */, dtype="uint64") /* ty=Tensor[(13, 7, 2), uint64] */;
    %288 = shape_of(%286, dtype="int32") /* ty=Tensor[(3), int32] */;
    %289 = cast(%286, dtype="uint64") /* ty=Tensor[(13, 7, 2), uint64] */;
    %290 = dyn.reshape(%287, %288, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %291 = @func_2717() /* ty=(Tensor[(13, 7, 2), float32],) */;
    %292 = cast(meta[relay.Constant][23] /* ty=Tensor[(13, 7, 2), float32] */, dtype="float64") /* ty=Tensor[(13, 7, 2), float64] */;
    %293 = logical_xor(%289, %290) /* ty=Tensor[(13, 7, 2), uint64] */;
    %294 = %291.0;
    %295 = sqrt(%292) /* ty=Tensor[(13, 7, 2), float64] */;
    (%293, %294, %295)
  };
  %296() /* ty=(Tensor[(13, 7, 2), uint64], Tensor[(13, 7, 2), float32], Tensor[(13, 7, 2), float64]) */
}

def @func_1465(%var_1453: Tensor[(2, 9, 8), float64], %var_1461: Tensor[(2, 9, 8), float64]) -> Tensor[(2, 9, 8), float64] {
  %297 = cast(%var_1453, dtype="float64") /* ty=Tensor[(2, 9, 8), float64] */;
  %298 = sqrt(%297) /* ty=Tensor[(2, 9, 8), float64] */;
  %299 = cast(%var_1461, dtype="float64") /* ty=Tensor[(2, 9, 8), float64] */;
  %300 = shape_of(%298, dtype="int32") /* ty=Tensor[(3), int32] */;
  %301 = cast(%298, dtype="float64") /* ty=Tensor[(2, 9, 8), float64] */;
  %302 = dyn.reshape(%299, %300, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  power(%301, %302) /* ty=Tensor[(2, 9, 8), float64] */
}

def @func_4256(%var_4254: Tensor[(2156), uint16]) -> (Tensor[(13, 7, 2), float32], Tensor[(88), uint64], Tensor[(2156), uint16], Tensor[(13, 7, 2), bool], Tensor[(13, 4, 3), int8], Tensor[(156), int8]) {
  @func_4253(%var_4254) /* ty=(Tensor[(13, 7, 2), float32], Tensor[(88), uint64], Tensor[(2156), uint16], Tensor[(13, 7, 2), bool], Tensor[(13, 4, 3), int8], Tensor[(156), int8]) */
}

def @func_4994() -> (Tensor[(13, 7, 2), float32],) {
  %303 = @func_3495() /* ty=Tensor[(13, 7, 2), float32] */;
  (%303,)
}

def @func_958(%var_955: Tensor[(11, 8, 1), uint64], %var_956: Tensor[(11, 8, 10), uint64], %var_957: Tensor[(504), int8]) -> (Tensor[(11, 8, 10), float32], Tensor[(6, 7, 12), bool], int8, Tensor[(504), int8]) {
  @func_953(%var_955, %var_956, %var_957) /* ty=(Tensor[(11, 8, 10), float32], Tensor[(6, 7, 12), bool], int8, Tensor[(504), int8]) */
}

def @func_4368(%var_4356: Tensor[(13, 7, 2), float32]) -> (Tensor[(13, 7, 2), float32], Tensor[(13, 7, 2), uint64]) {
  %304 = @func_2717() /* ty=(Tensor[(13, 7, 2), float32],) */;
  %305 = @func_2193() /* ty=(Tensor[(13, 7, 2), float32],) */;
  %306 = %305.0;
  %307 = cast(%306, dtype="float32") /* ty=Tensor[(13, 7, 2), float32] */;
  %308 = cos(%307) /* ty=Tensor[(13, 7, 2), float32] */;
  %309 = cast(%var_4356, dtype="uint64") /* ty=Tensor[(13, 7, 2), uint64] */;
  %310 = shape_of(%308, dtype="int32") /* ty=Tensor[(3), int32] */;
  %311 = cast(%308, dtype="uint64") /* ty=Tensor[(13, 7, 2), uint64] */;
  %312 = dyn.reshape(%309, %310, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %313 = %304.0;
  %314 = bitwise_or(%311, %312) /* ty=Tensor[(13, 7, 2), uint64] */;
  (%313, %314)
}

def @func_3465() -> (Tensor[(2, 5, 7), bool],) {
  %315 = cast(meta[relay.Constant][24] /* ty=uint16 */, dtype="bool") /* ty=bool */;
  %316 = cast(meta[relay.Constant][25] /* ty=Tensor[(2, 5, 7), uint16] */, dtype="bool") /* ty=Tensor[(2, 5, 7), bool] */;
  %317 = greater_equal(%315, %316) /* ty=Tensor[(2, 5, 7), bool] */;
  (%317,)
}

def @func_6598(%var_6546: Tensor[(2156), uint16], %var_6568: Tensor[(385), float64], %var_6574: Tensor[(700), bool], %var_6589: Tensor[(39, 4), int8]) -> (Tensor[(14, 11, 14), bool], Tensor[(2156), uint16], Tensor[(2, 5, 7), float64], Tensor[(13, 7, 2), float32], Tensor[(385), float64], Tensor[(576), float64], Tensor[(700), bool], Tensor[(440, 2), uint64], Tensor[(2, 5, 7), int8], Tensor[(11, 5, 7), uint8], Tensor[(14), float32], Tensor[(39, 4), int8]) {
  %318 = cast(%var_6546, dtype="uint16") /* ty=Tensor[(2156), uint16] */;
  %319 = cast(%var_6546, dtype="uint16") /* ty=Tensor[(2156), uint16] */;
  %320 = reshape(%318, newshape=[14, 11, 14]) /* ty=Tensor[(14, 11, 14), uint16] */;
  %321 = reshape(%319, newshape=[14, 11, 14]) /* ty=Tensor[(14, 11, 14), uint16] */;
  %322 = @func_1952(%320, %321) /* ty=(Tensor[(14, 11, 14), bool],) */;
  %323 = @func_4810() /* ty=Tensor[(2, 5, 7), bool] */;
  %324 = cast(%323, dtype="float64") /* ty=Tensor[(2, 5, 7), float64] */;
  %325 = asinh(%324) /* ty=Tensor[(2, 5, 7), float64] */;
  %326 = cast(%323, dtype="int64") /* ty=Tensor[(2, 5, 7), int64] */;
  %327 = shape_of(%325, dtype="int32") /* ty=Tensor[(3), int32] */;
  %328 = cast(%325, dtype="int64") /* ty=Tensor[(2, 5, 7), int64] */;
  %329 = dyn.reshape(%326, %327, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %330 = bitwise_xor(%328, %329) /* ty=Tensor[(2, 5, 7), int64] */;
  %331 = cast(%323, dtype="float64") /* ty=Tensor[(2, 5, 7), float64] */;
  %332 = shape_of(%330, dtype="int32") /* ty=Tensor[(3), int32] */;
  %333 = cast(%330, dtype="float64") /* ty=Tensor[(2, 5, 7), float64] */;
  %334 = dyn.reshape(%331, %332, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %335 = cast(%var_6568, dtype="float64") /* ty=Tensor[(385), float64] */;
  %336 = cast(%var_6568, dtype="uint8") /* ty=Tensor[(385), uint8] */;
  %337 = reshape(%335, newshape=[385]) /* ty=Tensor[(385), float64] */;
  %338 = reshape(%336, newshape=[11, 5, 7]) /* ty=Tensor[(11, 5, 7), uint8] */;
  %339 = @func_3601(%337, %338) /* ty=(Tensor[(13, 7, 2), float32], Tensor[(385), float64], Tensor[(11, 5, 7), float32], Tensor[(88), uint64], Tensor[(14), float32], Tensor[(156), int8]) */;
  %340 = cast(%var_6574, dtype="bool") /* ty=Tensor[(700), bool] */;
  %341 = cast(meta[relay.Constant][26] /* ty=Tensor[(440, 2), uint64] */, dtype="uint64") /* ty=Tensor[(440, 2), uint64] */;
  %342 = cast(%var_6568, dtype="float64") /* ty=Tensor[(385), float64] */;
  %343 = reshape(%340, newshape=[700]) /* ty=Tensor[(700), bool] */;
  %344 = reshape(%341, newshape=[880]) /* ty=Tensor[(880), uint64] */;
  %345 = reshape(%342, newshape=[385, 1]) /* ty=Tensor[(385, 1), float64] */;
  %346 = @func_4965(%343, %344, %345) /* ty=(Tensor[(13, 7, 2), float32], Tensor[(135), int16], Tensor[(7, 10), bool], Tensor[(700), bool], Tensor[(1120), int8], Tensor[(880), uint64], Tensor[(385, 1), float64], Tensor[(13, 7, 2), float32], Tensor[(576), float64]) */;
  %347 = cast(%323, dtype="bool") /* ty=Tensor[(2, 5, 7), bool] */;
  %348 = shape_of(%325, dtype="int32") /* ty=Tensor[(3), int32] */;
  %349 = cast(%325, dtype="bool") /* ty=Tensor[(2, 5, 7), bool] */;
  %350 = dyn.reshape(%347, %348, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %351 = less(%349, %350) /* ty=Tensor[(2, 5, 7), bool] */;
  %352 = cast(%351, dtype="int8") /* ty=Tensor[(2, 5, 7), int8] */;
  %353 = shape_of(%325, dtype="int32") /* ty=Tensor[(3), int32] */;
  %354 = cast(%325, dtype="int8") /* ty=Tensor[(2, 5, 7), int8] */;
  %355 = dyn.reshape(%352, %353, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %356 = cast(meta[relay.Constant][27] /* ty=Tensor[(14), float32] */, dtype="float32") /* ty=Tensor[(14), float32] */;
  %357 = cast(%var_6589, dtype="int8") /* ty=Tensor[(39, 4), int8] */;
  %358 = reshape(%356, newshape=[7, 1, 2]) /* ty=Tensor[(7, 1, 2), float32] */;
  %359 = reshape(%357, newshape=[156]) /* ty=Tensor[(156), int8] */;
  %360 = @func_1638(%358, %359) /* ty=(Tensor[(11, 5, 7), uint8], Tensor[(385), float64], Tensor[(13, 4, 3), int8], Tensor[(156), int8], Tensor[(7, 1, 2), float64], Tensor[(7, ?, 2), float32], Tensor[(440, 2), uint64], int64, Tensor[(88), uint64]) */;
  %361 = %322.0;
  %362 = power(%333, %334) /* ty=Tensor[(2, 5, 7), float64] */;
  %363 = %339.0;
  %364 = %346.8;
  %365 = multiply(%354, %355) /* ty=Tensor[(2, 5, 7), int8] */;
  %366 = %360.0;
  (%361, %var_6546, %362, %363, %var_6568, %364, %var_6574, meta[relay.Constant][26] /* ty=Tensor[(440, 2), uint64] */, %365, %366, meta[relay.Constant][27] /* ty=Tensor[(14), float32] */, %var_6589)
}

def @func_4969(%var_4966: Tensor[(700), bool], %var_4967: Tensor[(880), uint64], %var_4968: Tensor[(385, 1), float64]) -> (Tensor[(13, 7, 2), float32], Tensor[(135), int16], Tensor[(7, 10), bool], Tensor[(700), bool], Tensor[(1120), int8], Tensor[(880), uint64], Tensor[(385, 1), float64], Tensor[(13, 7, 2), float32], Tensor[(576), float64]) {
  %385 = fn (%var_4946: Tensor[(700), bool], %var_4948: Tensor[(880), uint64], %var_4949: Tensor[(385, 1), float64]) -> (Tensor[(13, 7, 2), float32], Tensor[(135), int16], Tensor[(7, 10), bool], Tensor[(700), bool], Tensor[(1120), int8], Tensor[(880), uint64], Tensor[(385, 1), float64], Tensor[(13, 7, 2), float32], Tensor[(576), float64]) {
    %367 = @func_4317() /* ty=(Tensor[(13, 7, 2), float32],) */;
    %368 = cast(meta[relay.Constant][28] /* ty=Tensor[(7, 10), bool] */, dtype="bool") /* ty=Tensor[(7, 10), bool] */;
    %369 = cast(%var_4946, dtype="bool") /* ty=Tensor[(700), bool] */;
    %370 = cast(meta[relay.Constant][29] /* ty=Tensor[(1120), int8] */, dtype="int8") /* ty=Tensor[(1120), int8] */;
    %371 = cast(%var_4948, dtype="uint64") /* ty=Tensor[(880), uint64] */;
    %372 = cast(%var_4949, dtype="float64") /* ty=Tensor[(385, 1), float64] */;
    %373 = reshape(%368, newshape=[10, 7, 1]) /* ty=Tensor[(10, 7, 1), bool] */;
    %374 = reshape(%369, newshape=[10, 7, 10]) /* ty=Tensor[(10, 7, 10), bool] */;
    %375 = reshape(%370, newshape=[560, 2]) /* ty=Tensor[(560, 2), int8] */;
    %376 = reshape(%371, newshape=[880]) /* ty=Tensor[(880), uint64] */;
    %377 = reshape(%372, newshape=[385]) /* ty=Tensor[(385), float64] */;
    %378 = @func_1521(%373, %374, %375, %376, %377) /* ty=(Tensor[(10, 7, 10), bool], Tensor[(135), int16], int8, Tensor[(560, 2), int8], Tensor[(88), uint64], Tensor[(880), uint64], Tensor[(385), float64], Tensor[(6, 7, 12), bool], Tensor[(240), float32], Tensor[(15, 9, 13), float64], Tensor[(6, 7, 12), bool]) */;
    %379 = cast(meta[relay.Constant][30] /* ty=Tensor[(576), float64] */, dtype="float64") /* ty=Tensor[(576), float64] */;
    %380 = reshape(%379, newshape=[576]) /* ty=Tensor[(576), float64] */;
    %381 = @func_4788(%380) /* ty=(Tensor[(13, 7, 2), float32], Tensor[(240), float32], Tensor[(9, 4, 16), float64], Tensor[(576), float64], Tensor[(504), float64], Tensor[(13, 7, 2), float32]) */;
    %382 = %367.0;
    %383 = %378.1;
    %384 = %381.5;
    (%382, %383, meta[relay.Constant][28] /* ty=Tensor[(7, 10), bool] */, %var_4946, meta[relay.Constant][29] /* ty=Tensor[(1120), int8] */, %var_4948, %var_4949, %384, meta[relay.Constant][30] /* ty=Tensor[(576), float64] */)
  };
  %385(%var_4966, %var_4967, %var_4968) /* ty=(Tensor[(13, 7, 2), float32], Tensor[(135), int16], Tensor[(7, 10), bool], Tensor[(700), bool], Tensor[(1120), int8], Tensor[(880), uint64], Tensor[(385, 1), float64], Tensor[(13, 7, 2), float32], Tensor[(576), float64]) */
}

def @func_733(%var_731: int8, %var_732: Tensor[(6, 7, 12), int8]) -> Tensor[(6, 7, 12), bool] {
  %388 = fn (%var_724: int8, %var_725: Tensor[(6, 7, 12), int8]) -> Tensor[(6, 7, 12), bool] {
    %386 = cast(%var_724, dtype="bool") /* ty=bool */;
    %387 = cast(%var_725, dtype="bool") /* ty=Tensor[(6, 7, 12), bool] */;
    not_equal(%386, %387) /* ty=Tensor[(6, 7, 12), bool] */
  };
  %388(%var_731, %var_732) /* ty=Tensor[(6, 7, 12), bool] */
}

def @func_2411() -> Tensor[(13, 7, 2), float32] {
  %392 = fn () -> Tensor[(13, 7, 2), float32] {
    %389 = @func_2193() /* ty=(Tensor[(13, 7, 2), float32],) */;
    %390 = %389.0;
    %391 = cast(%390, dtype="float32") /* ty=Tensor[(13, 7, 2), float32] */;
    log(%391) /* ty=Tensor[(13, 7, 2), float32] */
  };
  %392() /* ty=Tensor[(13, 7, 2), float32] */
}

def @func_3857() -> (Tensor[(13, 7, 2), float32], Tensor[(12, 9, 4), float32], Tensor[(432), float32]) {
  %397 = fn () -> (Tensor[(13, 7, 2), float32], Tensor[(12, 9, 4), float32], Tensor[(432), float32]) {
    %393 = cast(meta[relay.Constant][31] /* ty=Tensor[(432), float32] */, dtype="float32") /* ty=Tensor[(432), float32] */;
    %394 = reshape(%393, newshape=[12, 9, 4]) /* ty=Tensor[(12, 9, 4), float32] */;
    %395 = @func_3495() /* ty=Tensor[(13, 7, 2), float32] */;
    %396 = @func_3672(%394) /* ty=Tensor[(12, 9, 4), float32] */;
    (%395, %396, meta[relay.Constant][31] /* ty=Tensor[(432), float32] */)
  };
  %397() /* ty=(Tensor[(13, 7, 2), float32], Tensor[(12, 9, 4), float32], Tensor[(432), float32]) */
}

def @func_3305(%var_3296: Tensor[(2, 44), uint64]) -> (Tensor[(13, 7, 2), float32], Tensor[(6, 7, 12), bool], Tensor[(2, 44), uint64], Tensor[(880), uint64], Tensor[(504), int8]) {
  %398 = cast(%var_3296, dtype="uint64") /* ty=Tensor[(2, 44), uint64] */;
  %399 = cast(meta[relay.Constant][32] /* ty=Tensor[(880), uint64] */, dtype="uint64") /* ty=Tensor[(880), uint64] */;
  %400 = cast(meta[relay.Constant][33] /* ty=Tensor[(504), int8] */, dtype="int8") /* ty=Tensor[(504), int8] */;
  %401 = reshape(%398, newshape=[11, 8, 1]) /* ty=Tensor[(11, 8, 1), uint64] */;
  %402 = reshape(%399, newshape=[11, 8, 10]) /* ty=Tensor[(11, 8, 10), uint64] */;
  %403 = reshape(%400, newshape=[504]) /* ty=Tensor[(504), int8] */;
  %404 = @func_953(%401, %402, %403) /* ty=(Tensor[(11, 8, 10), float32], Tensor[(6, 7, 12), bool], int8, Tensor[(504), int8]) */;
  %405 = @func_2410() /* ty=Tensor[(13, 7, 2), float32] */;
  %406 = %404.1;
  (%405, %406, %var_3296, meta[relay.Constant][32] /* ty=Tensor[(880), uint64] */, meta[relay.Constant][33] /* ty=Tensor[(504), int8] */)
}

def @func_5315(%var_5313: Tensor[(3, 9, 6), int32], %var_5314: Tensor[(3, 9, 6), int32]) -> (Tensor[(3, 9, 6), float64], Tensor[(3, 9, 6), float32]) {
  %419 = fn (%var_5290: Tensor[(3, 9, 6), int32], %var_5291: Tensor[(3, 9, 6), int32]) -> (Tensor[(3, 9, 6), float64], Tensor[(3, 9, 6), float32]) {
    %407 = cast(%var_5291, dtype="int32") /* ty=Tensor[(3, 9, 6), int32] */;
    %408 = shape_of(%var_5290, dtype="int32") /* ty=Tensor[(3), int32] */;
    %409 = cast(%var_5290, dtype="int32") /* ty=Tensor[(3, 9, 6), int32] */;
    %410 = dyn.reshape(%407, %408, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %411 = bitwise_and(%409, %410) /* ty=Tensor[(3, 9, 6), int32] */;
    %412 = cast(%var_5290, dtype="float64") /* ty=Tensor[(3, 9, 6), float64] */;
    %413 = shape_of(%411, dtype="int32") /* ty=Tensor[(3), int32] */;
    %414 = cast(%411, dtype="float64") /* ty=Tensor[(3, 9, 6), float64] */;
    %415 = dyn.reshape(%412, %413, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %416 = cast(%var_5290, dtype="float32") /* ty=Tensor[(3, 9, 6), float32] */;
    %417 = mod(%414, %415) /* ty=Tensor[(3, 9, 6), float64] */;
    %418 = acosh(%416) /* ty=Tensor[(3, 9, 6), float32] */;
    (%417, %418)
  };
  %419(%var_5313, %var_5314) /* ty=(Tensor[(3, 9, 6), float64], Tensor[(3, 9, 6), float32]) */
}

def @func_3604(%var_3602: Tensor[(385), float64], %var_3603: Tensor[(11, 5, 7), uint8]) -> (Tensor[(13, 7, 2), float32], Tensor[(385), float64], Tensor[(11, 5, 7), float32], Tensor[(88), uint64], Tensor[(14), float32], Tensor[(156), int8]) {
  %437 = fn (%var_3564: Tensor[(385), float64], %var_3571: Tensor[(11, 5, 7), uint8]) -> (Tensor[(13, 7, 2), float32], Tensor[(385), float64], Tensor[(11, 5, 7), float32], Tensor[(88), uint64], Tensor[(14), float32], Tensor[(156), int8]) {
    %420 = cast(%var_3564, dtype="float64") /* ty=Tensor[(385), float64] */;
    %421 = reshape(%420, newshape=[11, 5, 7]) /* ty=Tensor[(11, 5, 7), float64] */;
    %422 = @func_40(%421) /* ty=Tensor[(11, 5, 7), uint8] */;
    %423 = cast(%var_3571, dtype="uint64") /* ty=Tensor[(11, 5, 7), uint64] */;
    %424 = shape_of(%422, dtype="int32") /* ty=Tensor[(3), int32] */;
    %425 = cast(%422, dtype="uint64") /* ty=Tensor[(11, 5, 7), uint64] */;
    %426 = dyn.reshape(%423, %424, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %427 = multiply(%425, %426) /* ty=Tensor[(11, 5, 7), uint64] */;
    %428 = cast(%427, dtype="float32") /* ty=Tensor[(11, 5, 7), float32] */;
    %429 = cast(meta[relay.Constant][34] /* ty=Tensor[(14), float32] */, dtype="float32") /* ty=Tensor[(14), float32] */;
    %430 = cast(meta[relay.Constant][35] /* ty=Tensor[(156), int8] */, dtype="int8") /* ty=Tensor[(156), int8] */;
    %431 = reshape(%429, newshape=[7, 1, 2]) /* ty=Tensor[(7, 1, 2), float32] */;
    %432 = reshape(%430, newshape=[156]) /* ty=Tensor[(156), int8] */;
    %433 = @func_1638(%431, %432) /* ty=(Tensor[(11, 5, 7), uint8], Tensor[(385), float64], Tensor[(13, 4, 3), int8], Tensor[(156), int8], Tensor[(7, 1, 2), float64], Tensor[(7, ?, 2), float32], Tensor[(440, 2), uint64], int64, Tensor[(88), uint64]) */;
    %434 = @func_3495() /* ty=Tensor[(13, 7, 2), float32] */;
    %435 = cosh(%428) /* ty=Tensor[(11, 5, 7), float32] */;
    %436 = %433.8;
    (%434, %var_3564, %435, %436, meta[relay.Constant][34] /* ty=Tensor[(14), float32] */, meta[relay.Constant][35] /* ty=Tensor[(156), int8] */)
  };
  %437(%var_3602, %var_3603) /* ty=(Tensor[(13, 7, 2), float32], Tensor[(385), float64], Tensor[(11, 5, 7), float32], Tensor[(88), uint64], Tensor[(14), float32], Tensor[(156), int8]) */
}

def @func_3674(%var_3673: Tensor[(12, 9, 4), float32]) -> Tensor[(12, 9, 4), float32] {
  %439 = fn (%var_3669: Tensor[(12, 9, 4), float32]) -> Tensor[(12, 9, 4), float32] {
    %438 = cast(%var_3669, dtype="float32") /* ty=Tensor[(12, 9, 4), float32] */;
    log2(%438) /* ty=Tensor[(12, 9, 4), float32] */
  };
  %439(%var_3673) /* ty=Tensor[(12, 9, 4), float32] */
}

def @func_5204() -> Tensor[(13, 7, 2), float32] {
  %440 = @func_3812() /* ty=(Tensor[(13, 7, 2), float32],) */;
  %440.0
}

def @func_5234(%var_5232: Tensor[(1, 13, 11), uint64], %var_5233: Tensor[(15, 13, 11), uint64]) -> Tensor[(15, 13, 11), uint64] {
  %443 = fn (%var_5217: Tensor[(1, 13, 11), uint64], %var_5218: Tensor[(15, 13, 11), uint64]) -> Tensor[(15, 13, 11), uint64] {
    %441 = cast(%var_5217, dtype="uint64") /* ty=Tensor[(1, 13, 11), uint64] */;
    %442 = cast(%var_5218, dtype="uint64") /* ty=Tensor[(15, 13, 11), uint64] */;
    multiply(%441, %442) /* ty=Tensor[(15, 13, 11), uint64] */
  };
  %443(%var_5232, %var_5233) /* ty=Tensor[(15, 13, 11), uint64] */
}

def @func_5902() -> Tensor[(13, 7, 2), float32] {
  %445 = fn () -> Tensor[(13, 7, 2), float32] {
    %444 = @func_3812() /* ty=(Tensor[(13, 7, 2), float32],) */;
    %444.0
  };
  %445() /* ty=Tensor[(13, 7, 2), float32] */
}

def @func_2341(%var_2339: Tensor[(135), int16]) -> (Tensor[(13, 7, 2), float32], Tensor[(135), int16], Tensor[(15, 9, 13), float64], Tensor[(11, 3, 9), int16], Tensor[(297), int16]) {
  @func_2338(%var_2339) /* ty=(Tensor[(13, 7, 2), float32], Tensor[(135), int16], Tensor[(15, 9, 13), float64], Tensor[(11, 3, 9), int16], Tensor[(297), int16]) */
}

def @func_3444(%var_3443: Tensor[(13, 7, 2), float32]) -> (Tensor[(13, 7, 2), float32],) {
  %453 = fn (%var_3409: Tensor[(13, 7, 2), float32]) -> (Tensor[(13, 7, 2), float32],) {
    %446 = @func_2193() /* ty=(Tensor[(13, 7, 2), float32],) */;
    %447 = %446.0;
    %448 = cast(%var_3409, dtype="float32") /* ty=Tensor[(13, 7, 2), float32] */;
    %449 = shape_of(%447, dtype="int32") /* ty=Tensor[(3), int32] */;
    %450 = cast(%447, dtype="float32") /* ty=Tensor[(13, 7, 2), float32] */;
    %451 = dyn.reshape(%448, %449, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %452 = mod(%450, %451) /* ty=Tensor[(13, 7, 2), float32] */;
    (%452,)
  };
  %453(%var_3443) /* ty=(Tensor[(13, 7, 2), float32],) */
}

def @func_3879() -> Tensor[(13, 7, 2), float32] {
  %454 = @func_2717() /* ty=(Tensor[(13, 7, 2), float32],) */;
  %454.0
}

def @func_5443(%var_5441: Tensor[(12, 9, 4), float32], %var_5442: Tensor[(3, 99), int16]) -> (Tensor[(12, 9, 4), bool], Tensor[(11, 3, 9), int16], Tensor[(3, 99), int16]) {
  @func_5439(%var_5441, %var_5442) /* ty=(Tensor[(12, 9, 4), bool], Tensor[(11, 3, 9), int16], Tensor[(3, 99), int16]) */
}

def @func_1521(%var_1471: Tensor[(10, 7, 1), bool], %var_1472: Tensor[(10, 7, 10), bool], %var_1482: Tensor[(560, 2), int8], %var_1484: Tensor[(880), uint64], %var_1485: Tensor[(385), float64]) -> (Tensor[(10, 7, 10), bool], Tensor[(135), int16], int8, Tensor[(560, 2), int8], Tensor[(88), uint64], Tensor[(880), uint64], Tensor[(385), float64], Tensor[(6, 7, 12), bool], Tensor[(240), float32], Tensor[(15, 9, 13), float64], Tensor[(6, 7, 12), bool]) {
  %455 = cast(%var_1471, dtype="bool") /* ty=Tensor[(10, 7, 1), bool] */;
  %456 = cast(%var_1472, dtype="bool") /* ty=Tensor[(10, 7, 10), bool] */;
  %457 = cast(%var_1482, dtype="int8") /* ty=Tensor[(560, 2), int8] */;
  %458 = cast(%var_1482, dtype="int8") /* ty=Tensor[(560, 2), int8] */;
  %459 = cast(meta[relay.Constant][37] /* ty=Tensor[(88), uint64] */, dtype="uint64") /* ty=Tensor[(88), uint64] */;
  %460 = cast(%var_1484, dtype="uint64") /* ty=Tensor[(880), uint64] */;
  %461 = cast(%var_1485, dtype="float64") /* ty=Tensor[(385), float64] */;
  %462 = reshape(%457, newshape=[16, 14, 5]) /* ty=Tensor[(16, 14, 5), int8] */;
  %463 = reshape(%458, newshape=[16, 14, 5]) /* ty=Tensor[(16, 14, 5), int8] */;
  %464 = reshape(%459, newshape=[88]) /* ty=Tensor[(88), uint64] */;
  %465 = reshape(%460, newshape=[880]) /* ty=Tensor[(880), uint64] */;
  %466 = reshape(%461, newshape=[385]) /* ty=Tensor[(385), float64] */;
  %467 = @func_1035(%462, %463, %464, %465, %466) /* ty=(Tensor[(16, 14, 5), int8], int8, Tensor[(88), uint64], Tensor[(880), uint64], Tensor[(11, 5, 7), uint8], Tensor[(385), float64], Tensor[(504), float32], Tensor[(504), float64], Tensor[(11, 3, 9), int16], Tensor[(297), int16]) */;
  %468 = cast(meta[relay.Constant][38] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %469 = reshape(%468, newshape=[2, 15, 8]) /* ty=Tensor[(2, 15, 8), float32] */;
  %470 = @func_1343(%469) /* ty=(Tensor[(2, 15, 8), float32], Tensor[(6, 7, 12), bool], int8, Tensor[(504), int8]) */;
  %471 = cast(meta[relay.Constant][36] /* ty=Tensor[(135), int16] */, dtype="int16") /* ty=Tensor[(135), int16] */;
  %472 = reshape(%471, newshape=[15, 9, 1]) /* ty=Tensor[(15, 9, 1), int16] */;
  %473 = @func_1054(%472) /* ty=(Tensor[(15, 9, 13), int16],) */;
  %474 = %473.0;
  %475 = cast(%474, dtype="float64") /* ty=Tensor[(15, 9, 13), float64] */;
  %476 = cast(meta[relay.Constant][38] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %477 = reshape(%476, newshape=[2, 15, 8]) /* ty=Tensor[(2, 15, 8), float32] */;
  %478 = @func_1343(%477) /* ty=(Tensor[(2, 15, 8), float32], Tensor[(6, 7, 12), bool], int8, Tensor[(504), int8]) */;
  %479 = logical_and(%455, %456) /* ty=Tensor[(10, 7, 10), bool] */;
  %480 = %467.1;
  %481 = %470.1;
  %482 = erf(%475) /* ty=Tensor[(15, 9, 13), float64] */;
  %483 = %478.1;
  (%479, meta[relay.Constant][36] /* ty=Tensor[(135), int16] */, %480, %var_1482, meta[relay.Constant][37] /* ty=Tensor[(88), uint64] */, %var_1484, %var_1485, %481, meta[relay.Constant][38] /* ty=Tensor[(240), float32] */, %482, %483)
}

def @func_40(%var_15: Tensor[(11, 5, 7), float64]) -> Tensor[(11, 5, 7), uint8] {
  %484 = cast(%var_15, dtype="float64") /* ty=Tensor[(11, 5, 7), float64] */;
  %485 = log2(%484) /* ty=Tensor[(11, 5, 7), float64] */;
  %486 = cast(%var_15, dtype="uint8") /* ty=Tensor[(11, 5, 7), uint8] */;
  %487 = shape_of(%485, dtype="int32") /* ty=Tensor[(3), int32] */;
  %488 = cast(%485, dtype="uint8") /* ty=Tensor[(11, 5, 7), uint8] */;
  %489 = dyn.reshape(%486, %487, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  logical_xor(%488, %489) /* ty=Tensor[(11, 5, 7), uint8] */
}

def @func_4790(%var_4789: Tensor[(576), float64]) -> (Tensor[(13, 7, 2), float32], Tensor[(240), float32], Tensor[(9, 4, 16), float64], Tensor[(576), float64], Tensor[(504), float64], Tensor[(13, 7, 2), float32]) {
  %503 = fn (%var_4770: Tensor[(576), float64]) -> (Tensor[(13, 7, 2), float32], Tensor[(240), float32], Tensor[(9, 4, 16), float64], Tensor[(576), float64], Tensor[(504), float64], Tensor[(13, 7, 2), float32]) {
    %490 = cast(%var_4770, dtype="float64") /* ty=Tensor[(576), float64] */;
    %491 = cast(%var_4770, dtype="float64") /* ty=Tensor[(576), float64] */;
    %492 = reshape(%490, newshape=[9, 4, 16]) /* ty=Tensor[(9, 4, 16), float64] */;
    %493 = reshape(%491, newshape=[9, 4, 16]) /* ty=Tensor[(9, 4, 16), float64] */;
    %494 = cast(meta[relay.Constant][39] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
    %495 = reshape(%494, newshape=[2, 15, 8]) /* ty=Tensor[(2, 15, 8), float32] */;
    %496 = @func_1343(%495) /* ty=(Tensor[(2, 15, 8), float32], Tensor[(6, 7, 12), bool], int8, Tensor[(504), int8]) */;
    %497 = %496.3;
    %498 = cast(%497, dtype="float64") /* ty=Tensor[(504), float64] */;
    %499 = @func_3879() /* ty=Tensor[(13, 7, 2), float32] */;
    %500 = @func_2696(%492, %493) /* ty=Tensor[(9, 4, 16), float64] */;
    %501 = asinh(%498) /* ty=Tensor[(504), float64] */;
    %502 = @func_4523() /* ty=Tensor[(13, 7, 2), float32] */;
    (%499, meta[relay.Constant][39] /* ty=Tensor[(240), float32] */, %500, %var_4770, %501, %502)
  };
  %503(%var_4789) /* ty=(Tensor[(13, 7, 2), float32], Tensor[(240), float32], Tensor[(9, 4, 16), float64], Tensor[(576), float64], Tensor[(504), float64], Tensor[(13, 7, 2), float32]) */
}

def @func_4371(%var_4369: Tensor[(13, 7, 2), float32]) -> (Tensor[(13, 7, 2), float32], Tensor[(13, 7, 2), uint64]) {
  @func_4368(%var_4369) /* ty=(Tensor[(13, 7, 2), float32], Tensor[(13, 7, 2), uint64]) */
}

def @func_2193() -> (Tensor[(13, 7, 2), float32],) {
  %504 = cast(meta[relay.Constant][40] /* ty=Tensor[(13, 7, 2), float32] */, dtype="float32") /* ty=Tensor[(13, 7, 2), float32] */;
  %505 = erf(%504) /* ty=Tensor[(13, 7, 2), float32] */;
  (%505,)
}

def @func_5656(%var_5641: Tensor[(2, 5, 7), bool]) -> (Tensor[(2, 5, 7), int32], Tensor[(2, 5, 7), bool]) {
  %506 = @func_3465() /* ty=(Tensor[(2, 5, 7), bool],) */;
  %507 = %506.0;
  %508 = cast(%var_5641, dtype="int32") /* ty=Tensor[(2, 5, 7), int32] */;
  %509 = shape_of(%507, dtype="int32") /* ty=Tensor[(3), int32] */;
  %510 = cast(%507, dtype="int32") /* ty=Tensor[(2, 5, 7), int32] */;
  %511 = dyn.reshape(%508, %509, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %512 = cast(%507, dtype="bool") /* ty=Tensor[(2, 5, 7), bool] */;
  %513 = shape_of(%var_5641, dtype="int32") /* ty=Tensor[(3), int32] */;
  %514 = cast(%var_5641, dtype="bool") /* ty=Tensor[(2, 5, 7), bool] */;
  %515 = dyn.reshape(%512, %513, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %516 = subtract(%510, %511) /* ty=Tensor[(2, 5, 7), int32] */;
  %517 = equal(%514, %515) /* ty=Tensor[(2, 5, 7), bool] */;
  (%516, %517)
}

def @func_3778(%var_3776: Tensor[(240), float32]) -> (Tensor[(13, 7, 2), float32], int8, Tensor[(240), float32]) {
  @func_3775(%var_3776) /* ty=(Tensor[(13, 7, 2), float32], int8, Tensor[(240), float32]) */
}

def @func_4671(%var_4669: Tensor[(156), int8], %var_4670: Tensor[(8, 70), bool]) -> (Tensor[(432), float32], Tensor[(6, 7, 12), bool], Tensor[(88), uint64], Tensor[(156), int8], Tensor[(14), float32], Tensor[(156), int8], Tensor[(880), uint64], Tensor[(288), float64], Tensor[(880), uint64], Tensor[(8, 70), bool]) {
  @func_4667(%var_4669, %var_4670) /* ty=(Tensor[(432), float32], Tensor[(6, 7, 12), bool], Tensor[(88), uint64], Tensor[(156), int8], Tensor[(14), float32], Tensor[(156), int8], Tensor[(880), uint64], Tensor[(288), float64], Tensor[(880), uint64], Tensor[(8, 70), bool]) */
}

def @func_2448(%var_2440: Tensor[(2, 720), int32]) -> (Tensor[(13, 7, 2), float32], Tensor[(9, 16, 10), bool], Tensor[(2, 720), int32]) {
  %518 = @func_2193() /* ty=(Tensor[(13, 7, 2), float32],) */;
  %519 = cast(%var_2440, dtype="int32") /* ty=Tensor[(2, 720), int32] */;
  %520 = cast(%var_2440, dtype="int32") /* ty=Tensor[(2, 720), int32] */;
  %521 = reshape(%519, newshape=[9, 16, 10]) /* ty=Tensor[(9, 16, 10), int32] */;
  %522 = reshape(%520, newshape=[9, 16, 10]) /* ty=Tensor[(9, 16, 10), int32] */;
  %523 = %518.0;
  %524 = @func_1935(%521, %522) /* ty=Tensor[(9, 16, 10), bool] */;
  (%523, %524, %var_2440)
}

def @func_2288(%var_2216: Tensor[(144), float64], %var_2260: Tensor[(1120), int8], %var_2261: Tensor[(1, 88), uint64], %var_2262: Tensor[(880), uint64], %var_2263: Tensor[(385), float64], %var_2277: Tensor[(14), float32]) -> (Tensor[(144), float64], Tensor[(2, 9, 8), float32], Tensor[(13, 7, 2), float32], Tensor[(11, 5, 7), uint8], Tensor[(1120), int8], Tensor[(1, 88), uint64], Tensor[(880), uint64], Tensor[(385), float64], Tensor[(11, 5, 7), uint8], Tensor[(14), float32], Tensor[(156), int8]) {
  %525 = cast(%var_2216, dtype="float64") /* ty=Tensor[(144), float64] */;
  %526 = cast(%var_2216, dtype="float64") /* ty=Tensor[(144), float64] */;
  %527 = reshape(%525, newshape=[2, 9, 8]) /* ty=Tensor[(2, 9, 8), float64] */;
  %528 = reshape(%526, newshape=[2, 9, 8]) /* ty=Tensor[(2, 9, 8), float64] */;
  %529 = @func_1465(%527, %528) /* ty=Tensor[(2, 9, 8), float64] */;
  %530 = cast(%529, dtype="float32") /* ty=Tensor[(2, 9, 8), float32] */;
  %531 = @func_2193() /* ty=(Tensor[(13, 7, 2), float32],) */;
  %532 = %531.0;
  %533 = cast(%532, dtype="float32") /* ty=Tensor[(13, 7, 2), float32] */;
  %534 = cast(%var_2260, dtype="int8") /* ty=Tensor[(1120), int8] */;
  %535 = cast(%var_2260, dtype="int8") /* ty=Tensor[(1120), int8] */;
  %536 = cast(%var_2261, dtype="uint64") /* ty=Tensor[(1, 88), uint64] */;
  %537 = cast(%var_2262, dtype="uint64") /* ty=Tensor[(880), uint64] */;
  %538 = cast(%var_2263, dtype="float64") /* ty=Tensor[(385), float64] */;
  %539 = reshape(%534, newshape=[16, 14, 5]) /* ty=Tensor[(16, 14, 5), int8] */;
  %540 = reshape(%535, newshape=[16, 14, 5]) /* ty=Tensor[(16, 14, 5), int8] */;
  %541 = reshape(%536, newshape=[88]) /* ty=Tensor[(88), uint64] */;
  %542 = reshape(%537, newshape=[880]) /* ty=Tensor[(880), uint64] */;
  %543 = reshape(%538, newshape=[385]) /* ty=Tensor[(385), float64] */;
  %544 = @func_1035(%539, %540, %541, %542, %543) /* ty=(Tensor[(16, 14, 5), int8], int8, Tensor[(88), uint64], Tensor[(880), uint64], Tensor[(11, 5, 7), uint8], Tensor[(385), float64], Tensor[(504), float32], Tensor[(504), float64], Tensor[(11, 3, 9), int16], Tensor[(297), int16]) */;
  %545 = cast(%var_2277, dtype="float32") /* ty=Tensor[(14), float32] */;
  %546 = cast(meta[relay.Constant][41] /* ty=Tensor[(156), int8] */, dtype="int8") /* ty=Tensor[(156), int8] */;
  %547 = reshape(%545, newshape=[7, 1, 2]) /* ty=Tensor[(7, 1, 2), float32] */;
  %548 = reshape(%546, newshape=[156]) /* ty=Tensor[(156), int8] */;
  %549 = @func_1638(%547, %548) /* ty=(Tensor[(11, 5, 7), uint8], Tensor[(385), float64], Tensor[(13, 4, 3), int8], Tensor[(156), int8], Tensor[(7, 1, 2), float64], Tensor[(7, ?, 2), float32], Tensor[(440, 2), uint64], int64, Tensor[(88), uint64]) */;
  %550 = exp(%530) /* ty=Tensor[(2, 9, 8), float32] */;
  %551 = cosh(%533) /* ty=Tensor[(13, 7, 2), float32] */;
  %552 = %544.4;
  %553 = %549.0;
  (%var_2216, %550, %551, %552, %var_2260, %var_2261, %var_2262, %var_2263, %553, %var_2277, meta[relay.Constant][41] /* ty=Tensor[(156), int8] */)
}

def @func_6108(%var_6105: bool, %var_6106: Tensor[(90, 2), bool], %var_6107: Tensor[(720, 2), int32]) -> (Tensor[(12, 9, 4), float64], Tensor[(385), float64], Tensor[(1120), int8], Tensor[(88), uint64], Tensor[(880), uint64], Tensor[(385, 1), float64], Tensor[(12, ?, 15), uint64], bool, Tensor[(90, 2), bool], Tensor[(720, 2), int32], Tensor[(13, 7, 2), float32], Tensor[(13, 7, 2), float32]) {
  @func_6103(%var_6105, %var_6106, %var_6107) /* ty=(Tensor[(12, 9, 4), float64], Tensor[(385), float64], Tensor[(1120), int8], Tensor[(88), uint64], Tensor[(880), uint64], Tensor[(385, 1), float64], Tensor[(12, ?, 15), uint64], bool, Tensor[(90, 2), bool], Tensor[(720, 2), int32], Tensor[(13, 7, 2), float32], Tensor[(13, 7, 2), float32]) */
}

def @func_1057(%var_1055: Tensor[(15, 9, 1), int16]) -> (Tensor[(15, 9, 13), int16],) {
  @func_1054(%var_1055) /* ty=(Tensor[(15, 9, 13), int16],) */
}

def @func_4889(%var_4887: Tensor[(880), uint64]) -> (Tensor[(13, 7, 2), float32], Tensor[(880), uint64], Tensor[(288), float64], Tensor[(70), bool], Tensor[(880), uint64], Tensor[(13, 7, 2), float32]) {
  @func_4886(%var_4887) /* ty=(Tensor[(13, 7, 2), float32], Tensor[(880), uint64], Tensor[(288), float64], Tensor[(70), bool], Tensor[(880), uint64], Tensor[(13, 7, 2), float32]) */
}

def @func_2945(%var_2925: Tensor[(13, 7, 2), float32], %var_2943: Tensor[(135), int16]) -> (Tensor[(13, 7, 2), float64], Tensor[(13, 7, 2), bool], Tensor[(135), int16], Tensor[(135), int16]) {
  %554 = @func_2410() /* ty=Tensor[(13, 7, 2), float32] */;
  %555 = cast(%var_2925, dtype="float64") /* ty=Tensor[(13, 7, 2), float64] */;
  %556 = shape_of(%554, dtype="int32") /* ty=Tensor[(3), int32] */;
  %557 = cast(%554, dtype="float64") /* ty=Tensor[(13, 7, 2), float64] */;
  %558 = dyn.reshape(%555, %556, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %559 = cast(%554, dtype="bool") /* ty=Tensor[(13, 7, 2), bool] */;
  %560 = shape_of(%var_2925, dtype="int32") /* ty=Tensor[(3), int32] */;
  %561 = cast(%var_2925, dtype="bool") /* ty=Tensor[(13, 7, 2), bool] */;
  %562 = dyn.reshape(%559, %560, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %563 = cast(%var_2943, dtype="int16") /* ty=Tensor[(135), int16] */;
  %564 = reshape(%563, newshape=[135]) /* ty=Tensor[(135), int16] */;
  %565 = @func_2338(%564) /* ty=(Tensor[(13, 7, 2), float32], Tensor[(135), int16], Tensor[(15, 9, 13), float64], Tensor[(11, 3, 9), int16], Tensor[(297), int16]) */;
  %566 = divide(%557, %558) /* ty=Tensor[(13, 7, 2), float64] */;
  %567 = not_equal(%561, %562) /* ty=Tensor[(13, 7, 2), bool] */;
  %568 = %565.1;
  (%566, %567, %568, %var_2943)
}

def @func_5439(%var_5430: Tensor[(12, 9, 4), float32], %var_5436: Tensor[(3, 99), int16]) -> (Tensor[(12, 9, 4), bool], Tensor[(11, 3, 9), int16], Tensor[(3, 99), int16]) {
  %569 = @func_3856() /* ty=(Tensor[(13, 7, 2), float32], Tensor[(12, 9, 4), float32], Tensor[(432), float32]) */;
  %570 = %569.1;
  %571 = cast(%var_5430, dtype="bool") /* ty=Tensor[(12, 9, 4), bool] */;
  %572 = shape_of(%570, dtype="int32") /* ty=Tensor[(3), int32] */;
  %573 = cast(%570, dtype="bool") /* ty=Tensor[(12, 9, 4), bool] */;
  %574 = dyn.reshape(%571, %572, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %575 = cast(%var_5436, dtype="int16") /* ty=Tensor[(3, 99), int16] */;
  %576 = cast(%var_5436, dtype="int16") /* ty=Tensor[(3, 99), int16] */;
  %577 = reshape(%575, newshape=[11, 3, 9]) /* ty=Tensor[(11, 3, 9), int16] */;
  %578 = reshape(%576, newshape=[11, 3, 9]) /* ty=Tensor[(11, 3, 9), int16] */;
  %579 = equal(%573, %574) /* ty=Tensor[(12, 9, 4), bool] */;
  %580 = @func_204(%577, %578) /* ty=Tensor[(11, 3, 9), int16] */;
  (%579, %580, %var_5436)
}

def @func_3181(%var_3180: Tensor[(7, 8), float64]) -> (Tensor[(7, 8), float64],) {
  %583 = fn (%var_3159: Tensor[(7, 8), float64]) -> (Tensor[(7, 8), float64],) {
    %581 = cast(%var_3159, dtype="float64") /* ty=Tensor[(7, 8), float64] */;
    %582 = acos(%581) /* ty=Tensor[(7, 8), float64] */;
    (%582,)
  };
  %583(%var_3180) /* ty=(Tensor[(7, 8), float64],) */
}

def @func_5576() -> Tensor[(2, 5, 7), bool] {
  @func_5574() /* ty=Tensor[(2, 5, 7), bool] */
}

def @func_2717() -> (Tensor[(13, 7, 2), float32],) {
  %584 = @func_2193() /* ty=(Tensor[(13, 7, 2), float32],) */;
  %585 = %584.0;
  (%585,)
}

def @func_4044(%var_4042: Tensor[(880), uint64], %var_4043: Tensor[(504), int8]) -> (Tensor[(13, 7, 2), float32], Tensor[(135), int16], Tensor[(88), uint64], Tensor[(504), int8], Tensor[(11, 8, 10), float64], Tensor[(13, 7, 2), float32], Tensor[(15, 9, 13), float64]) {
  %609 = fn (%var_3983: Tensor[(880), uint64], %var_3984: Tensor[(504), int8]) -> (Tensor[(13, 7, 2), float32], Tensor[(135), int16], Tensor[(88), uint64], Tensor[(504), int8], Tensor[(11, 8, 10), float64], Tensor[(13, 7, 2), float32], Tensor[(15, 9, 13), float64]) {
    %586 = @func_3207() /* ty=(Tensor[(13, 7, 2), uint64], Tensor[(13, 7, 2), float32], Tensor[(13, 7, 2), float64]) */;
    %587 = cast(meta[relay.Constant][43] /* ty=Tensor[(88), uint64] */, dtype="uint64") /* ty=Tensor[(88), uint64] */;
    %588 = cast(%var_3983, dtype="uint64") /* ty=Tensor[(880), uint64] */;
    %589 = cast(%var_3984, dtype="int8") /* ty=Tensor[(504), int8] */;
    %590 = reshape(%587, newshape=[11, 8, 1]) /* ty=Tensor[(11, 8, 1), uint64] */;
    %591 = reshape(%588, newshape=[11, 8, 10]) /* ty=Tensor[(11, 8, 10), uint64] */;
    %592 = reshape(%589, newshape=[504]) /* ty=Tensor[(504), int8] */;
    %593 = @func_953(%590, %591, %592) /* ty=(Tensor[(11, 8, 10), float32], Tensor[(6, 7, 12), bool], int8, Tensor[(504), int8]) */;
    %594 = %593.0;
    %595 = cast(%var_3983, dtype="float64") /* ty=Tensor[(880), float64] */;
    %596 = shape_of(%594, dtype="int32") /* ty=Tensor[(3), int32] */;
    %597 = cast(%594, dtype="float64") /* ty=Tensor[(11, 8, 10), float64] */;
    %598 = dyn.reshape(%595, %596, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %599 = @func_2193() /* ty=(Tensor[(13, 7, 2), float32],) */;
    %600 = cast(meta[relay.Constant][42] /* ty=Tensor[(135), int16] */, dtype="int16") /* ty=Tensor[(135), int16] */;
    %601 = reshape(%600, newshape=[15, 9, 1]) /* ty=Tensor[(15, 9, 1), int16] */;
    %602 = @func_1054(%601) /* ty=(Tensor[(15, 9, 13), int16],) */;
    %603 = %602.0;
    %604 = cast(%603, dtype="float64") /* ty=Tensor[(15, 9, 13), float64] */;
    %605 = %586.1;
    %606 = floor_divide(%597, %598) /* ty=Tensor[(11, 8, 10), float64] */;
    %607 = %599.0;
    %608 = sigmoid(%604) /* ty=Tensor[(15, 9, 13), float64] */;
    (%605, meta[relay.Constant][42] /* ty=Tensor[(135), int16] */, meta[relay.Constant][43] /* ty=Tensor[(88), uint64] */, %var_3984, %606, %607, %608)
  };
  %609(%var_4042, %var_4043) /* ty=(Tensor[(13, 7, 2), float32], Tensor[(135), int16], Tensor[(88), uint64], Tensor[(504), int8], Tensor[(11, 8, 10), float64], Tensor[(13, 7, 2), float32], Tensor[(15, 9, 13), float64]) */
}

def @func_5787(%var_5785: Tensor[(156), int8]) -> (Tensor[(2, 5, 7), bool], Tensor[(88), uint64], Tensor[(156), int8], Tensor[(560), bool]) {
  @func_5784(%var_5785) /* ty=(Tensor[(2, 5, 7), bool], Tensor[(88), uint64], Tensor[(156), int8], Tensor[(560), bool]) */
}

def @func_6431() -> (Tensor[(13, 7, 2), float32],) {
  %610 = @func_5954() /* ty=(Tensor[(13, 7, 2), float32],) */;
  %611 = %610.0;
  (%611,)
}

def @func_2451(%var_2449: Tensor[(2, 720), int32]) -> (Tensor[(13, 7, 2), float32], Tensor[(9, 16, 10), bool], Tensor[(2, 720), int32]) {
  @func_2448(%var_2449) /* ty=(Tensor[(13, 7, 2), float32], Tensor[(9, 16, 10), bool], Tensor[(2, 720), int32]) */
}

def @func_5490(%var_5489: Tensor[(2, 5, 7), bool]) -> (Tensor[(13, 7, 2), float32], Tensor[(2, 5, 7), float32], Tensor[(2, 5, 7), float32]) {
  %622 = fn (%var_5479: Tensor[(2, 5, 7), bool]) -> (Tensor[(13, 7, 2), float32], Tensor[(2, 5, 7), float32], Tensor[(2, 5, 7), float32]) {
    %612 = @func_3812() /* ty=(Tensor[(13, 7, 2), float32],) */;
    %613 = @func_5183() /* ty=Tensor[(2, 5, 7), bool] */;
    %614 = cast(%var_5479, dtype="float32") /* ty=Tensor[(2, 5, 7), float32] */;
    %615 = shape_of(%613, dtype="int32") /* ty=Tensor[(3), int32] */;
    %616 = cast(%613, dtype="float32") /* ty=Tensor[(2, 5, 7), float32] */;
    %617 = dyn.reshape(%614, %615, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %618 = cast(%613, dtype="float32") /* ty=Tensor[(2, 5, 7), float32] */;
    %619 = %612.0;
    %620 = floor_divide(%616, %617) /* ty=Tensor[(2, 5, 7), float32] */;
    %621 = atan(%618) /* ty=Tensor[(2, 5, 7), float32] */;
    (%619, %620, %621)
  };
  %622(%var_5489) /* ty=(Tensor[(13, 7, 2), float32], Tensor[(2, 5, 7), float32], Tensor[(2, 5, 7), float32]) */
}

def @func_2800() -> (Tensor[(13, 7, 2), float32],) {
  %624 = fn () -> (Tensor[(13, 7, 2), float32],) {
    %623 = @func_2410() /* ty=Tensor[(13, 7, 2), float32] */;
    (%623,)
  };
  %624() /* ty=(Tensor[(13, 7, 2), float32],) */
}

def @func_4219() -> (Tensor[(2, 5, 7), bool],) {
  %627 = fn () -> (Tensor[(2, 5, 7), bool],) {
    %625 = @func_3465() /* ty=(Tensor[(2, 5, 7), bool],) */;
    %626 = %625.0;
    (%626,)
  };
  %627() /* ty=(Tensor[(2, 5, 7), bool],) */
}

def @func_1054(%var_1047: Tensor[(15, 9, 1), int16]) -> (Tensor[(15, 9, 13), int16],) {
  %628 = cast(%var_1047, dtype="int16") /* ty=Tensor[(15, 9, 1), int16] */;
  %629 = cast(meta[relay.Constant][44] /* ty=Tensor[(15, 9, 13), int16] */, dtype="int16") /* ty=Tensor[(15, 9, 13), int16] */;
  %630 = maximum(%628, %629) /* ty=Tensor[(15, 9, 13), int16] */;
  (%630,)
}

def @func_2700(%var_2698: Tensor[(9, 4, 16), float64], %var_2699: Tensor[(9, 4, 16), float64]) -> Tensor[(9, 4, 16), float64] {
  @func_2696(%var_2698, %var_2699) /* ty=Tensor[(9, 4, 16), float64] */
}

def @func_5574() -> Tensor[(2, 5, 7), bool] {
  @func_4810() /* ty=Tensor[(2, 5, 7), bool] */
}

def @func_1041(%var_1036: Tensor[(16, 14, 5), int8], %var_1037: Tensor[(16, 14, 5), int8], %var_1038: Tensor[(88), uint64], %var_1039: Tensor[(880), uint64], %var_1040: Tensor[(385), float64]) -> (Tensor[(16, 14, 5), int8], int8, Tensor[(88), uint64], Tensor[(880), uint64], Tensor[(11, 5, 7), uint8], Tensor[(385), float64], Tensor[(504), float32], Tensor[(504), float64], Tensor[(11, 3, 9), int16], Tensor[(297), int16]) {
  %661 = fn (%var_997: Tensor[(16, 14, 5), int8], %var_998: Tensor[(16, 14, 5), int8], %var_1003: Tensor[(88), uint64], %var_1004: Tensor[(880), uint64], %var_1008: Tensor[(385), float64]) -> (Tensor[(16, 14, 5), int8], int8, Tensor[(88), uint64], Tensor[(880), uint64], Tensor[(11, 5, 7), uint8], Tensor[(385), float64], Tensor[(504), float32], Tensor[(504), float64], Tensor[(11, 3, 9), int16], Tensor[(297), int16]) {
    %631 = cast(%var_998, dtype="int8") /* ty=Tensor[(16, 14, 5), int8] */;
    %632 = shape_of(%var_997, dtype="int32") /* ty=Tensor[(3), int32] */;
    %633 = cast(%var_997, dtype="int8") /* ty=Tensor[(16, 14, 5), int8] */;
    %634 = dyn.reshape(%631, %632, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %635 = cast(%var_1003, dtype="uint64") /* ty=Tensor[(88), uint64] */;
    %636 = cast(%var_1004, dtype="uint64") /* ty=Tensor[(880), uint64] */;
    %637 = cast(meta[relay.Constant][45] /* ty=Tensor[(504), int8] */, dtype="int8") /* ty=Tensor[(504), int8] */;
    %638 = reshape(%635, newshape=[11, 8, 1]) /* ty=Tensor[(11, 8, 1), uint64] */;
    %639 = reshape(%636, newshape=[11, 8, 10]) /* ty=Tensor[(11, 8, 10), uint64] */;
    %640 = reshape(%637, newshape=[504]) /* ty=Tensor[(504), int8] */;
    %641 = @func_953(%638, %639, %640) /* ty=(Tensor[(11, 8, 10), float32], Tensor[(6, 7, 12), bool], int8, Tensor[(504), int8]) */;
    %642 = cast(%var_1008, dtype="float64") /* ty=Tensor[(385), float64] */;
    %643 = reshape(%642, newshape=[11, 5, 7]) /* ty=Tensor[(11, 5, 7), float64] */;
    %644 = cast(meta[relay.Constant][45] /* ty=Tensor[(504), int8] */, dtype="float32") /* ty=Tensor[(504), float32] */;
    %645 = log(%644) /* ty=Tensor[(504), float32] */;
    %646 = cast(meta[relay.Constant][45] /* ty=Tensor[(504), int8] */, dtype="float32") /* ty=Tensor[(504), float32] */;
    %647 = shape_of(%645, dtype="int32") /* ty=Tensor[(1), int32] */;
    %648 = cast(%645, dtype="float32") /* ty=Tensor[(504), float32] */;
    %649 = dyn.reshape(%646, %647, newshape=[]) /* ty=Tensor[(?), float32] */;
    %650 = cast(%645, dtype="float64") /* ty=Tensor[(504), float64] */;
    %651 = cast(meta[relay.Constant][46] /* ty=Tensor[(297), int16] */, dtype="int16") /* ty=Tensor[(297), int16] */;
    %652 = cast(meta[relay.Constant][46] /* ty=Tensor[(297), int16] */, dtype="int16") /* ty=Tensor[(297), int16] */;
    %653 = reshape(%651, newshape=[11, 3, 9]) /* ty=Tensor[(11, 3, 9), int16] */;
    %654 = reshape(%652, newshape=[11, 3, 9]) /* ty=Tensor[(11, 3, 9), int16] */;
    %655 = bitwise_xor(%633, %634) /* ty=Tensor[(16, 14, 5), int8] */;
    %656 = %641.2;
    %657 = @func_40(%643) /* ty=Tensor[(11, 5, 7), uint8] */;
    %658 = floor_mod(%648, %649) /* ty=Tensor[(504), float32] */;
    %659 = log10(%650) /* ty=Tensor[(504), float64] */;
    %660 = @func_204(%653, %654) /* ty=Tensor[(11, 3, 9), int16] */;
    (%655, %656, %var_1003, %var_1004, %657, %var_1008, %658, %659, %660, meta[relay.Constant][46] /* ty=Tensor[(297), int16] */)
  };
  %661(%var_1036, %var_1037, %var_1038, %var_1039, %var_1040) /* ty=(Tensor[(16, 14, 5), int8], int8, Tensor[(88), uint64], Tensor[(880), uint64], Tensor[(11, 5, 7), uint8], Tensor[(385), float64], Tensor[(504), float32], Tensor[(504), float64], Tensor[(11, 3, 9), int16], Tensor[(297), int16]) */
}

def @func_4484(%var_4391: Tensor[(7, 2), float32], %var_4419: Tensor[(880), uint64], %var_4420: Tensor[(504), int8], %var_4439: Tensor[(7, 4, 2), float64], %var_4474: Tensor[(7, 308), uint16], %var_4477: Tensor[(7, 10, 2), float64]) -> (Tensor[(13, 7, 2), float32], Tensor[(7, 2), float32], Tensor[(156), int8], Tensor[(13, 7, 2), float32], Tensor[(2, 5, 7), bool], Tensor[(88), uint64], Tensor[(880), uint64], Tensor[(504), int8], Tensor[(15, 9, 13), float64], Tensor[(11, 8, 10), float32], Tensor[(135), int16], Tensor[(1440), int32], Tensor[(504), int8], Tensor[(7, 4, 2), float64], Tensor[(13, 4, 3), int8], Tensor[(7, 308), uint16], Tensor[(7, 10, 2), int16]) {
  %662 = @func_3465() /* ty=(Tensor[(2, 5, 7), bool],) */;
  %663 = cast(%var_4419, dtype="uint64") /* ty=Tensor[(880), uint64] */;
  %664 = cast(%var_4420, dtype="int8") /* ty=Tensor[(504), int8] */;
  %665 = reshape(%663, newshape=[880]) /* ty=Tensor[(880), uint64] */;
  %666 = reshape(%664, newshape=[504]) /* ty=Tensor[(504), int8] */;
  %667 = @func_4041(%665, %666) /* ty=(Tensor[(13, 7, 2), float32], Tensor[(135), int16], Tensor[(88), uint64], Tensor[(504), int8], Tensor[(11, 8, 10), float64], Tensor[(13, 7, 2), float32], Tensor[(15, 9, 13), float64]) */;
  %668 = cast(%var_4419, dtype="uint64") /* ty=Tensor[(880), uint64] */;
  %669 = cast(%var_4420, dtype="int8") /* ty=Tensor[(504), int8] */;
  %670 = reshape(%668, newshape=[880]) /* ty=Tensor[(880), uint64] */;
  %671 = reshape(%669, newshape=[504]) /* ty=Tensor[(504), int8] */;
  %672 = @func_4041(%670, %671) /* ty=(Tensor[(13, 7, 2), float32], Tensor[(135), int16], Tensor[(88), uint64], Tensor[(504), int8], Tensor[(11, 8, 10), float64], Tensor[(13, 7, 2), float32], Tensor[(15, 9, 13), float64]) */;
  %673 = cast(meta[relay.Constant][48] /* ty=Tensor[(135), int16] */, dtype="int16") /* ty=Tensor[(135), int16] */;
  %674 = cast(%var_4420, dtype="int8") /* ty=Tensor[(504), int8] */;
  %675 = cast(meta[relay.Constant][49] /* ty=Tensor[(1440), int32] */, dtype="int32") /* ty=Tensor[(1440), int32] */;
  %676 = reshape(%673, newshape=[135]) /* ty=Tensor[(135), int16] */;
  %677 = reshape(%674, newshape=[504]) /* ty=Tensor[(504), int8] */;
  %678 = reshape(%675, newshape=[1440]) /* ty=Tensor[(1440), int32] */;
  %679 = @func_4159(%676, %677, %678) /* ty=(Tensor[(13, 7, 2), float32], Tensor[(15, 9, 13), int16], Tensor[(135), int16], Tensor[(11, 8, 10), float32], Tensor[(2, 44), uint64], Tensor[(1, 880), uint64], Tensor[(504), int8], Tensor[(9, 16, 10), bool], Tensor[(1440), int32], Tensor[(13, 7, 2), float32], Tensor[(16, 7, 8), uint64], Tensor[(896), uint64], Tensor[(13, 7, 2), float32], Tensor[(13, 7, 2), float32]) */;
  %680 = %667.2;
  %681 = cast(%680, dtype="uint64") /* ty=Tensor[(88), uint64] */;
  %682 = %679.3;
  %683 = cast(%682, dtype="uint64") /* ty=Tensor[(11, 8, 10), uint64] */;
  %684 = cast(%var_4420, dtype="int8") /* ty=Tensor[(504), int8] */;
  %685 = reshape(%681, newshape=[11, 8, 1]) /* ty=Tensor[(11, 8, 1), uint64] */;
  %686 = reshape(%683, newshape=[11, 8, 10]) /* ty=Tensor[(11, 8, 10), uint64] */;
  %687 = reshape(%684, newshape=[504]) /* ty=Tensor[(504), int8] */;
  %688 = @func_953(%685, %686, %687) /* ty=(Tensor[(11, 8, 10), float32], Tensor[(6, 7, 12), bool], int8, Tensor[(504), int8]) */;
  %689 = cast(%var_4391, dtype="float32") /* ty=Tensor[(7, 2), float32] */;
  %690 = cast(meta[relay.Constant][47] /* ty=Tensor[(156), int8] */, dtype="int8") /* ty=Tensor[(156), int8] */;
  %691 = reshape(%689, newshape=[7, 1, 2]) /* ty=Tensor[(7, 1, 2), float32] */;
  %692 = reshape(%690, newshape=[156]) /* ty=Tensor[(156), int8] */;
  %693 = @func_1638(%691, %692) /* ty=(Tensor[(11, 5, 7), uint8], Tensor[(385), float64], Tensor[(13, 4, 3), int8], Tensor[(156), int8], Tensor[(7, 1, 2), float64], Tensor[(7, ?, 2), float32], Tensor[(440, 2), uint64], int64, Tensor[(88), uint64]) */;
  %694 = %693.4;
  %695 = cast(%694, dtype="float64") /* ty=Tensor[(7, 1, 2), float64] */;
  %696 = acos(%695) /* ty=Tensor[(7, 1, 2), float64] */;
  %697 = cast(%696, dtype="float64") /* ty=Tensor[(7, 1, 2), float64] */;
  %698 = exp(%697) /* ty=Tensor[(7, 1, 2), float64] */;
  %699 = cast(%698, dtype="uint16") /* ty=Tensor[(7, 1, 2), uint16] */;
  %700 = cast(%var_4439, dtype="uint16") /* ty=Tensor[(7, 4, 2), uint16] */;
  %701 = maximum(%699, %700) /* ty=Tensor[(7, 4, 2), uint16] */;
  %702 = cast(%701, dtype="float64") /* ty=Tensor[(7, 4, 2), float64] */;
  %703 = cast(%var_4474, dtype="uint16") /* ty=Tensor[(7, 308), uint16] */;
  %704 = reshape(%703, newshape=[2156]) /* ty=Tensor[(2156), uint16] */;
  %705 = @func_4253(%704) /* ty=(Tensor[(13, 7, 2), float32], Tensor[(88), uint64], Tensor[(2156), uint16], Tensor[(13, 7, 2), bool], Tensor[(13, 4, 3), int8], Tensor[(156), int8]) */;
  %706 = cast(%698, dtype="int16") /* ty=Tensor[(7, 1, 2), int16] */;
  %707 = cast(%var_4477, dtype="int16") /* ty=Tensor[(7, 10, 2), int16] */;
  %708 = @func_3879() /* ty=Tensor[(13, 7, 2), float32] */;
  %709 = @func_3879() /* ty=Tensor[(13, 7, 2), float32] */;
  %710 = %662.0;
  %711 = %672.6;
  %712 = %688.3;
  %713 = acos(%702) /* ty=Tensor[(7, 4, 2), float64] */;
  %714 = %705.4;
  %715 = subtract(%706, %707) /* ty=Tensor[(7, 10, 2), int16] */;
  (%708, %var_4391, meta[relay.Constant][47] /* ty=Tensor[(156), int8] */, %709, %710, %680, %var_4419, %var_4420, %711, %682, meta[relay.Constant][48] /* ty=Tensor[(135), int16] */, meta[relay.Constant][49] /* ty=Tensor[(1440), int32] */, %712, %713, %714, %var_4474, %715)
}

def @func_4492(%var_4486: Tensor[(7, 2), float32], %var_4487: Tensor[(880), uint64], %var_4488: Tensor[(504), int8], %var_4489: Tensor[(7, 4, 2), float64], %var_4490: Tensor[(7, 308), uint16], %var_4491: Tensor[(7, 10, 2), float64]) -> (Tensor[(13, 7, 2), float32], Tensor[(7, 2), float32], Tensor[(156), int8], Tensor[(13, 7, 2), float32], Tensor[(2, 5, 7), bool], Tensor[(88), uint64], Tensor[(880), uint64], Tensor[(504), int8], Tensor[(15, 9, 13), float64], Tensor[(11, 8, 10), float32], Tensor[(135), int16], Tensor[(1440), int32], Tensor[(504), int8], Tensor[(7, 4, 2), float64], Tensor[(13, 4, 3), int8], Tensor[(7, 308), uint16], Tensor[(7, 10, 2), int16]) {
  @func_4484(%var_4486, %var_4487, %var_4488, %var_4489, %var_4490, %var_4491) /* ty=(Tensor[(13, 7, 2), float32], Tensor[(7, 2), float32], Tensor[(156), int8], Tensor[(13, 7, 2), float32], Tensor[(2, 5, 7), bool], Tensor[(88), uint64], Tensor[(880), uint64], Tensor[(504), int8], Tensor[(15, 9, 13), float64], Tensor[(11, 8, 10), float32], Tensor[(135), int16], Tensor[(1440), int32], Tensor[(504), int8], Tensor[(7, 4, 2), float64], Tensor[(13, 4, 3), int8], Tensor[(7, 308), uint16], Tensor[(7, 10, 2), int16]) */
}

def @func_5923(%var_5921: Tensor[(16, 8, 3), float32], %var_5922: Tensor[(16, 8, 3), float32]) -> (Tensor[(16, 8, 3), bool],) {
  @func_5919(%var_5921, %var_5922) /* ty=(Tensor[(16, 8, 3), bool],) */
}

def @func_4589(%var_4583: Tensor[(10, 8), float64]) -> Tensor[(10, 8), float64] {
  %716 = cast(%var_4583, dtype="float64") /* ty=Tensor[(10, 8), float64] */;
  log(%716) /* ty=Tensor[(10, 8), float64] */
}

def @func_6653(%var_6652: Tensor[(180), bool]) -> (Tensor[(15, 11, 15), float64], int8, Tensor[(240), float32], Tensor[(2, 720), int32], Tensor[(180), bool]) {
  %727 = fn (%var_6649: Tensor[(180), bool]) -> (Tensor[(15, 11, 15), float64], int8, Tensor[(240), float32], Tensor[(2, 720), int32], Tensor[(180), bool]) {
    %717 = cast(meta[relay.Constant][50] /* ty=Tensor[(15, 11, 15), float64] */, dtype="float64") /* ty=Tensor[(15, 11, 15), float64] */;
    %718 = cast(meta[relay.Constant][51] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
    %719 = reshape(%718, newshape=[240]) /* ty=Tensor[(240), float32] */;
    %720 = @func_3775(%719) /* ty=(Tensor[(13, 7, 2), float32], int8, Tensor[(240), float32]) */;
    %721 = cast(%var_6649, dtype="bool") /* ty=Tensor[(180), bool] */;
    %722 = reshape(%721, newshape=[180]) /* ty=Tensor[(180), bool] */;
    %723 = @func_6391(%722) /* ty=(Tensor[(13, 7, 2), float32], bool, bool, Tensor[(180), bool], Tensor[(2, 720), int32]) */;
    %724 = sinh(%717) /* ty=Tensor[(15, 11, 15), float64] */;
    %725 = %720.1;
    %726 = %723.4;
    (%724, %725, meta[relay.Constant][51] /* ty=Tensor[(240), float32] */, %726, %var_6649)
  };
  %727(%var_6652) /* ty=(Tensor[(15, 11, 15), float64], int8, Tensor[(240), float32], Tensor[(2, 720), int32], Tensor[(180), bool]) */
}

def @func_953(%var_932: Tensor[(11, 8, 1), uint64], %var_933: Tensor[(11, 8, 10), uint64], %var_949: Tensor[(504), int8]) -> (Tensor[(11, 8, 10), float32], Tensor[(6, 7, 12), bool], int8, Tensor[(504), int8]) {
  %728 = cast(%var_932, dtype="uint64") /* ty=Tensor[(11, 8, 1), uint64] */;
  %729 = cast(%var_933, dtype="uint64") /* ty=Tensor[(11, 8, 10), uint64] */;
  %730 = maximum(%728, %729) /* ty=Tensor[(11, 8, 10), uint64] */;
  %731 = cast(%730, dtype="float32") /* ty=Tensor[(11, 8, 10), float32] */;
  %732 = asin(%731) /* ty=Tensor[(11, 8, 10), float32] */;
  %733 = cast(%732, dtype="float32") /* ty=Tensor[(11, 8, 10), float32] */;
  %734 = cast(meta[relay.Constant][52] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %735 = cast(%var_949, dtype="int8") /* ty=Tensor[(504), int8] */;
  %736 = reshape(%734, newshape=[]) /* ty=int8 */;
  %737 = reshape(%735, newshape=[6, 7, 12]) /* ty=Tensor[(6, 7, 12), int8] */;
  %738 = acosh(%733) /* ty=Tensor[(11, 8, 10), float32] */;
  %739 = @func_730(%736, %737) /* ty=Tensor[(6, 7, 12), bool] */;
  (%738, %739, meta[relay.Constant][52] /* ty=int8 */, %var_949)
}

def @func_2195() -> (Tensor[(13, 7, 2), float32],) {
  @func_2193() /* ty=(Tensor[(13, 7, 2), float32],) */
}

def @func_3747(%var_3746: Tensor[(13, 7, 2), float32]) -> (Tensor[(13, 7, 2), bool],) {
  %746 = fn (%var_3721: Tensor[(13, 7, 2), float32]) -> (Tensor[(13, 7, 2), bool],) {
    %740 = @func_2410() /* ty=Tensor[(13, 7, 2), float32] */;
    %741 = cast(%var_3721, dtype="bool") /* ty=Tensor[(13, 7, 2), bool] */;
    %742 = shape_of(%740, dtype="int32") /* ty=Tensor[(3), int32] */;
    %743 = cast(%740, dtype="bool") /* ty=Tensor[(13, 7, 2), bool] */;
    %744 = dyn.reshape(%741, %742, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %745 = equal(%743, %744) /* ty=Tensor[(13, 7, 2), bool] */;
    (%745,)
  };
  %746(%var_3746) /* ty=(Tensor[(13, 7, 2), bool],) */
}

def @func_5919(%var_5903: Tensor[(16, 8, 3), float32], %var_5904: Tensor[(16, 8, 3), float32]) -> (Tensor[(16, 8, 3), bool],) {
  %747 = cast(%var_5904, dtype="bool") /* ty=Tensor[(16, 8, 3), bool] */;
  %748 = shape_of(%var_5903, dtype="int32") /* ty=Tensor[(3), int32] */;
  %749 = cast(%var_5903, dtype="bool") /* ty=Tensor[(16, 8, 3), bool] */;
  %750 = dyn.reshape(%747, %748, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %751 = equal(%749, %750) /* ty=Tensor[(16, 8, 3), bool] */;
  (%751,)
}

def @func_6103(%var_6077: bool, %var_6078: Tensor[(90, 2), bool], %var_6079: Tensor[(720, 2), int32]) -> (Tensor[(12, 9, 4), float64], Tensor[(385), float64], Tensor[(1120), int8], Tensor[(88), uint64], Tensor[(880), uint64], Tensor[(385, 1), float64], Tensor[(12, ?, 15), uint64], bool, Tensor[(90, 2), bool], Tensor[(720, 2), int32], Tensor[(13, 7, 2), float32], Tensor[(13, 7, 2), float32]) {
  %752 = @func_3856() /* ty=(Tensor[(13, 7, 2), float32], Tensor[(12, 9, 4), float32], Tensor[(432), float32]) */;
  %753 = %752.1;
  %754 = cast(%753, dtype="float32") /* ty=Tensor[(12, 9, 4), float32] */;
  %755 = log(%754) /* ty=Tensor[(12, 9, 4), float32] */;
  %756 = cast(%755, dtype="float64") /* ty=Tensor[(12, 9, 4), float64] */;
  %757 = cast(meta[relay.Constant][53] /* ty=Tensor[(1120), int8] */, dtype="int8") /* ty=Tensor[(1120), int8] */;
  %758 = cast(meta[relay.Constant][53] /* ty=Tensor[(1120), int8] */, dtype="int8") /* ty=Tensor[(1120), int8] */;
  %759 = cast(meta[relay.Constant][54] /* ty=Tensor[(88), uint64] */, dtype="uint64") /* ty=Tensor[(88), uint64] */;
  %760 = cast(meta[relay.Constant][55] /* ty=Tensor[(880), uint64] */, dtype="uint64") /* ty=Tensor[(880), uint64] */;
  %761 = cast(meta[relay.Constant][56] /* ty=Tensor[(385, 1), float64] */, dtype="float64") /* ty=Tensor[(385, 1), float64] */;
  %762 = reshape(%757, newshape=[16, 14, 5]) /* ty=Tensor[(16, 14, 5), int8] */;
  %763 = reshape(%758, newshape=[16, 14, 5]) /* ty=Tensor[(16, 14, 5), int8] */;
  %764 = reshape(%759, newshape=[88]) /* ty=Tensor[(88), uint64] */;
  %765 = reshape(%760, newshape=[880]) /* ty=Tensor[(880), uint64] */;
  %766 = reshape(%761, newshape=[385]) /* ty=Tensor[(385), float64] */;
  %767 = @func_1035(%762, %763, %764, %765, %766) /* ty=(Tensor[(16, 14, 5), int8], int8, Tensor[(88), uint64], Tensor[(880), uint64], Tensor[(11, 5, 7), uint8], Tensor[(385), float64], Tensor[(504), float32], Tensor[(504), float64], Tensor[(11, 3, 9), int16], Tensor[(297), int16]) */;
  %768 = cast(%var_6077, dtype="bool") /* ty=bool */;
  %769 = cast(%var_6078, dtype="bool") /* ty=Tensor[(90, 2), bool] */;
  %770 = cast(%var_6079, dtype="int32") /* ty=Tensor[(720, 2), int32] */;
  %771 = reshape(%768, newshape=[]) /* ty=bool */;
  %772 = reshape(%769, newshape=[12, 1, 15]) /* ty=Tensor[(12, 1, 15), bool] */;
  %773 = reshape(%770, newshape=[1440]) /* ty=Tensor[(1440), int32] */;
  %774 = @func_5745(%771, %772, %773) /* ty=(Tensor[(12, ?, 15), uint64], Tensor[(9, 16, 10), bool], Tensor[(1440), int32]) */;
  %775 = @func_4317() /* ty=(Tensor[(13, 7, 2), float32],) */;
  %776 = cos(%756) /* ty=Tensor[(12, 9, 4), float64] */;
  %777 = %767.5;
  %778 = %774.0;
  %779 = %775.0;
  %780 = @func_5204() /* ty=Tensor[(13, 7, 2), float32] */;
  (%776, %777, meta[relay.Constant][53] /* ty=Tensor[(1120), int8] */, meta[relay.Constant][54] /* ty=Tensor[(88), uint64] */, meta[relay.Constant][55] /* ty=Tensor[(880), uint64] */, meta[relay.Constant][56] /* ty=Tensor[(385, 1), float64] */, %778, %var_6077, %var_6078, %var_6079, %779, %780)
}

def @func_2771(%var_2769: Tensor[(16, 7, 8), uint64], %var_2770: Tensor[(16, 7, 8), uint64]) -> (Tensor[(16, 7, 8), uint64],) {
  @func_2767(%var_2769, %var_2770) /* ty=(Tensor[(16, 7, 8), uint64],) */
}

def @func_5183() -> Tensor[(2, 5, 7), bool] {
  %781 = @func_3465() /* ty=(Tensor[(2, 5, 7), bool],) */;
  %781.0
}

def @func_3904(%var_3884: Tensor[(15, 13, 13), float32], %var_3899: Tensor[(288), float64], %var_3901: Tensor[(40, 22), uint64]) -> (Tensor[(15, 13, 13), float32], Tensor[(13, 7, 2), float32], Tensor[(8, 140), int8], Tensor[(288), float64], Tensor[(70), bool], Tensor[(40, 22), uint64]) {
  %782 = cast(%var_3884, dtype="float32") /* ty=Tensor[(15, 13, 13), float32] */;
  %783 = @func_2799() /* ty=(Tensor[(13, 7, 2), float32],) */;
  %784 = cast(%var_3899, dtype="float64") /* ty=Tensor[(288), float64] */;
  %785 = cast(meta[relay.Constant][57] /* ty=Tensor[(70), bool] */, dtype="bool") /* ty=Tensor[(70), bool] */;
  %786 = cast(%var_3901, dtype="uint64") /* ty=Tensor[(40, 22), uint64] */;
  %787 = reshape(%784, newshape=[4, 8, 9]) /* ty=Tensor[(4, 8, 9), float64] */;
  %788 = reshape(%785, newshape=[70]) /* ty=Tensor[(70), bool] */;
  %789 = reshape(%786, newshape=[880]) /* ty=Tensor[(880), uint64] */;
  %790 = @func_2374(%787, %788, %789) /* ty=(Tensor[(4, 8, 9), float64], Tensor[(15, 9, 13), float64], Tensor[(70), bool], Tensor[(700), bool], Tensor[(8, 140), int8], Tensor[(880), uint64], Tensor[(1, 385), float64]) */;
  %791 = erf(%782) /* ty=Tensor[(15, 13, 13), float32] */;
  %792 = %783.0;
  %793 = %790.4;
  (%791, %792, %793, %var_3899, meta[relay.Constant][57] /* ty=Tensor[(70), bool] */, %var_3901)
}

def @func_3828() -> Tensor[(13, 7, 2), float32] {
  %794 = @func_3207() /* ty=(Tensor[(13, 7, 2), uint64], Tensor[(13, 7, 2), float32], Tensor[(13, 7, 2), float64]) */;
  %794.1
}

def @func_6351(%var_6349: Tensor[(2, 10, 13), uint8]) -> (Tensor[(2, 10, 13), uint8], Tensor[(2, 10, 13), float32]) {
  @func_6348(%var_6349) /* ty=(Tensor[(2, 10, 13), uint8], Tensor[(2, 10, 13), float32]) */
}

def @func_6604(%var_6600: Tensor[(2156), uint16], %var_6601: Tensor[(385), float64], %var_6602: Tensor[(700), bool], %var_6603: Tensor[(39, 4), int8]) -> (Tensor[(14, 11, 14), bool], Tensor[(2156), uint16], Tensor[(2, 5, 7), float64], Tensor[(13, 7, 2), float32], Tensor[(385), float64], Tensor[(576), float64], Tensor[(700), bool], Tensor[(440, 2), uint64], Tensor[(2, 5, 7), int8], Tensor[(11, 5, 7), uint8], Tensor[(14), float32], Tensor[(39, 4), int8]) {
  @func_6598(%var_6600, %var_6601, %var_6602, %var_6603) /* ty=(Tensor[(14, 11, 14), bool], Tensor[(2156), uint16], Tensor[(2, 5, 7), float64], Tensor[(13, 7, 2), float32], Tensor[(385), float64], Tensor[(576), float64], Tensor[(700), bool], Tensor[(440, 2), uint64], Tensor[(2, 5, 7), int8], Tensor[(11, 5, 7), uint8], Tensor[(14), float32], Tensor[(39, 4), int8]) */
}

def @func_2549(%var_2547: Tensor[(7, 308), uint16]) -> (Tensor[(13, 7, 2), float32], Tensor[(14, 11, 14), bool], Tensor[(7, 308), uint16], Tensor[(504), int8], Tensor[(88), uint64], Tensor[(40, 22), uint64], Tensor[(504), int8]) {
  @func_2546(%var_2547) /* ty=(Tensor[(13, 7, 2), float32], Tensor[(14, 11, 14), bool], Tensor[(7, 308), uint16], Tensor[(504), int8], Tensor[(88), uint64], Tensor[(40, 22), uint64], Tensor[(504), int8]) */
}

def @func_5185() -> Tensor[(2, 5, 7), bool] {
  @func_5183() /* ty=Tensor[(2, 5, 7), bool] */
}

def @func_4163(%var_4160: Tensor[(135), int16], %var_4161: Tensor[(504), int8], %var_4162: Tensor[(1440), int32]) -> (Tensor[(13, 7, 2), float32], Tensor[(15, 9, 13), int16], Tensor[(135), int16], Tensor[(11, 8, 10), float32], Tensor[(2, 44), uint64], Tensor[(1, 880), uint64], Tensor[(504), int8], Tensor[(9, 16, 10), bool], Tensor[(1440), int32], Tensor[(13, 7, 2), float32], Tensor[(16, 7, 8), uint64], Tensor[(896), uint64], Tensor[(13, 7, 2), float32], Tensor[(13, 7, 2), float32]) {
  %827 = fn (%var_4131: Tensor[(135), int16], %var_4138: Tensor[(504), int8], %var_4141: Tensor[(1440), int32]) -> (Tensor[(13, 7, 2), float32], Tensor[(15, 9, 13), int16], Tensor[(135), int16], Tensor[(11, 8, 10), float32], Tensor[(2, 44), uint64], Tensor[(1, 880), uint64], Tensor[(504), int8], Tensor[(9, 16, 10), bool], Tensor[(1440), int32], Tensor[(13, 7, 2), float32], Tensor[(16, 7, 8), uint64], Tensor[(896), uint64], Tensor[(13, 7, 2), float32], Tensor[(13, 7, 2), float32]) {
    %795 = cast(%var_4131, dtype="int16") /* ty=Tensor[(135), int16] */;
    %796 = reshape(%795, newshape=[15, 9, 1]) /* ty=Tensor[(15, 9, 1), int16] */;
    %797 = @func_1054(%796) /* ty=(Tensor[(15, 9, 13), int16],) */;
    %798 = cast(meta[relay.Constant][58] /* ty=Tensor[(2, 44), uint64] */, dtype="uint64") /* ty=Tensor[(2, 44), uint64] */;
    %799 = cast(meta[relay.Constant][59] /* ty=Tensor[(1, 880), uint64] */, dtype="uint64") /* ty=Tensor[(1, 880), uint64] */;
    %800 = cast(%var_4138, dtype="int8") /* ty=Tensor[(504), int8] */;
    %801 = reshape(%798, newshape=[11, 8, 1]) /* ty=Tensor[(11, 8, 1), uint64] */;
    %802 = reshape(%799, newshape=[11, 8, 10]) /* ty=Tensor[(11, 8, 10), uint64] */;
    %803 = reshape(%800, newshape=[504]) /* ty=Tensor[(504), int8] */;
    %804 = @func_953(%801, %802, %803) /* ty=(Tensor[(11, 8, 10), float32], Tensor[(6, 7, 12), bool], int8, Tensor[(504), int8]) */;
    %805 = cast(%var_4141, dtype="int32") /* ty=Tensor[(1440), int32] */;
    %806 = cast(%var_4141, dtype="int32") /* ty=Tensor[(1440), int32] */;
    %807 = reshape(%805, newshape=[9, 16, 10]) /* ty=Tensor[(9, 16, 10), int32] */;
    %808 = reshape(%806, newshape=[9, 16, 10]) /* ty=Tensor[(9, 16, 10), int32] */;
    %809 = cast(%var_4131, dtype="int16") /* ty=Tensor[(135), int16] */;
    %810 = reshape(%809, newshape=[135]) /* ty=Tensor[(135), int16] */;
    %811 = @func_4083(%810) /* ty=(Tensor[(13, 7, 2), float32], Tensor[(15, 9, 13), int16], Tensor[(135), int16], Tensor[(13, 7, 2), float32], Tensor[(13, 7, 2), uint64]) */;
    %812 = cast(meta[relay.Constant][60] /* ty=Tensor[(896), uint64] */, dtype="uint64") /* ty=Tensor[(896), uint64] */;
    %813 = cast(meta[relay.Constant][60] /* ty=Tensor[(896), uint64] */, dtype="uint64") /* ty=Tensor[(896), uint64] */;
    %814 = reshape(%812, newshape=[16, 7, 8]) /* ty=Tensor[(16, 7, 8), uint64] */;
    %815 = reshape(%813, newshape=[16, 7, 8]) /* ty=Tensor[(16, 7, 8), uint64] */;
    %816 = @func_2767(%814, %815) /* ty=(Tensor[(16, 7, 8), uint64],) */;
    %817 = @func_3812() /* ty=(Tensor[(13, 7, 2), float32],) */;
    %818 = @func_2717() /* ty=(Tensor[(13, 7, 2), float32],) */;
    %819 = @func_3828() /* ty=Tensor[(13, 7, 2), float32] */;
    %820 = %797.0;
    %821 = %804.0;
    %822 = @func_1935(%807, %808) /* ty=Tensor[(9, 16, 10), bool] */;
    %823 = %811.0;
    %824 = %816.0;
    %825 = %817.0;
    %826 = %818.0;
    (%819, %820, %var_4131, %821, meta[relay.Constant][58] /* ty=Tensor[(2, 44), uint64] */, meta[relay.Constant][59] /* ty=Tensor[(1, 880), uint64] */, %var_4138, %822, %var_4141, %823, %824, meta[relay.Constant][60] /* ty=Tensor[(896), uint64] */, %825, %826)
  };
  %827(%var_4160, %var_4161, %var_4162) /* ty=(Tensor[(13, 7, 2), float32], Tensor[(15, 9, 13), int16], Tensor[(135), int16], Tensor[(11, 8, 10), float32], Tensor[(2, 44), uint64], Tensor[(1, 880), uint64], Tensor[(504), int8], Tensor[(9, 16, 10), bool], Tensor[(1440), int32], Tensor[(13, 7, 2), float32], Tensor[(16, 7, 8), uint64], Tensor[(896), uint64], Tensor[(13, 7, 2), float32], Tensor[(13, 7, 2), float32]) */
}

def @func_1345(%var_1344: Tensor[(2, 15, 8), float32]) -> (Tensor[(2, 15, 8), float32], Tensor[(6, 7, 12), bool], int8, Tensor[(504), int8]) {
  %835 = fn (%var_1325: Tensor[(2, 15, 8), float32]) -> (Tensor[(2, 15, 8), float32], Tensor[(6, 7, 12), bool], int8, Tensor[(504), int8]) {
    %828 = cast(%var_1325, dtype="float32") /* ty=Tensor[(2, 15, 8), float32] */;
    %829 = cast(meta[relay.Constant][61] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %830 = cast(meta[relay.Constant][62] /* ty=Tensor[(504), int8] */, dtype="int8") /* ty=Tensor[(504), int8] */;
    %831 = reshape(%829, newshape=[]) /* ty=int8 */;
    %832 = reshape(%830, newshape=[6, 7, 12]) /* ty=Tensor[(6, 7, 12), int8] */;
    %833 = log2(%828) /* ty=Tensor[(2, 15, 8), float32] */;
    %834 = @func_730(%831, %832) /* ty=Tensor[(6, 7, 12), bool] */;
    (%833, %834, meta[relay.Constant][61] /* ty=int8 */, meta[relay.Constant][62] /* ty=Tensor[(504), int8] */)
  };
  %835(%var_1344) /* ty=(Tensor[(2, 15, 8), float32], Tensor[(6, 7, 12), bool], int8, Tensor[(504), int8]) */
}

def @func_5017(%var_4997: Tensor[(9, 8, 13), float64], %var_4998: Tensor[(9, 8, 13), float64]) -> (Tensor[(9, 8, 13), float64], Tensor[(13, 7, 2), float32], Tensor[(182), float32]) {
  %836 = cast(%var_4998, dtype="float64") /* ty=Tensor[(9, 8, 13), float64] */;
  %837 = shape_of(%var_4997, dtype="int32") /* ty=Tensor[(3), int32] */;
  %838 = cast(%var_4997, dtype="float64") /* ty=Tensor[(9, 8, 13), float64] */;
  %839 = dyn.reshape(%836, %837, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %840 = cast(meta[relay.Constant][63] /* ty=Tensor[(182), float32] */, dtype="float32") /* ty=Tensor[(182), float32] */;
  %841 = reshape(%840, newshape=[13, 7, 2]) /* ty=Tensor[(13, 7, 2), float32] */;
  %842 = @func_3442(%841) /* ty=(Tensor[(13, 7, 2), float32],) */;
  %843 = floor_divide(%838, %839) /* ty=Tensor[(9, 8, 13), float64] */;
  %844 = %842.0;
  (%843, %844, meta[relay.Constant][63] /* ty=Tensor[(182), float32] */)
}

def @func_5802() -> (Tensor[(13, 7, 2), float32],) {
  @func_5800() /* ty=(Tensor[(13, 7, 2), float32],) */
}

def @func_4318() -> (Tensor[(13, 7, 2), float32],) {
  %846 = fn () -> (Tensor[(13, 7, 2), float32],) {
    %845 = @func_2410() /* ty=Tensor[(13, 7, 2), float32] */;
    (%845,)
  };
  %846() /* ty=(Tensor[(13, 7, 2), float32],) */
}

def @func_3495() -> Tensor[(13, 7, 2), float32] {
  @func_2410() /* ty=Tensor[(13, 7, 2), float32] */
}

def @func_3813() -> (Tensor[(13, 7, 2), float32],) {
  %851 = fn () -> (Tensor[(13, 7, 2), float32],) {
    %847 = @func_2193() /* ty=(Tensor[(13, 7, 2), float32],) */;
    %848 = %847.0;
    %849 = cast(%848, dtype="float32") /* ty=Tensor[(13, 7, 2), float32] */;
    %850 = exp(%849) /* ty=Tensor[(13, 7, 2), float32] */;
    (%850,)
  };
  %851() /* ty=(Tensor[(13, 7, 2), float32],) */
}

def @func_3775(%var_3769: Tensor[(240), float32]) -> (Tensor[(13, 7, 2), float32], int8, Tensor[(240), float32]) {
  %852 = @func_2799() /* ty=(Tensor[(13, 7, 2), float32],) */;
  %853 = cast(%var_3769, dtype="float32") /* ty=Tensor[(240), float32] */;
  %854 = reshape(%853, newshape=[2, 15, 8]) /* ty=Tensor[(2, 15, 8), float32] */;
  %855 = @func_1343(%854) /* ty=(Tensor[(2, 15, 8), float32], Tensor[(6, 7, 12), bool], int8, Tensor[(504), int8]) */;
  %856 = %852.0;
  %857 = %855.2;
  (%856, %857, %var_3769)
}

def @func_2696(%var_2668: Tensor[(9, 4, 16), float64], %var_2680: Tensor[(9, 4, 16), float64]) -> Tensor[(9, 4, 16), float64] {
  %858 = cast(%var_2668, dtype="float64") /* ty=Tensor[(9, 4, 16), float64] */;
  %859 = tan(%858) /* ty=Tensor[(9, 4, 16), float64] */;
  %860 = cast(%var_2680, dtype="float64") /* ty=Tensor[(9, 4, 16), float64] */;
  %861 = shape_of(%859, dtype="int32") /* ty=Tensor[(3), int32] */;
  %862 = cast(%859, dtype="float64") /* ty=Tensor[(9, 4, 16), float64] */;
  %863 = dyn.reshape(%860, %861, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  divide(%862, %863) /* ty=Tensor[(9, 4, 16), float64] */
}

def @func_4085(%var_4084: Tensor[(135), int16]) -> (Tensor[(13, 7, 2), float32], Tensor[(15, 9, 13), int16], Tensor[(135), int16], Tensor[(13, 7, 2), float32], Tensor[(13, 7, 2), uint64]) {
  %876 = fn (%var_4068: Tensor[(135), int16]) -> (Tensor[(13, 7, 2), float32], Tensor[(15, 9, 13), int16], Tensor[(135), int16], Tensor[(13, 7, 2), float32], Tensor[(13, 7, 2), uint64]) {
    %864 = @func_2799() /* ty=(Tensor[(13, 7, 2), float32],) */;
    %865 = cast(%var_4068, dtype="int16") /* ty=Tensor[(135), int16] */;
    %866 = reshape(%865, newshape=[15, 9, 1]) /* ty=Tensor[(15, 9, 1), int16] */;
    %867 = @func_1054(%866) /* ty=(Tensor[(15, 9, 13), int16],) */;
    %868 = @func_3207() /* ty=(Tensor[(13, 7, 2), uint64], Tensor[(13, 7, 2), float32], Tensor[(13, 7, 2), float64]) */;
    %869 = %868.1;
    %870 = cast(%869, dtype="float32") /* ty=Tensor[(13, 7, 2), float32] */;
    %871 = reshape(%870, newshape=[13, 7, 2]) /* ty=Tensor[(13, 7, 2), float32] */;
    %872 = @func_2659(%871) /* ty=(Tensor[(13, 7, 2), uint64],) */;
    %873 = %864.0;
    %874 = %867.0;
    %875 = %872.0;
    (%873, %874, %var_4068, %869, %875)
  };
  %876(%var_4084) /* ty=(Tensor[(13, 7, 2), float32], Tensor[(15, 9, 13), int16], Tensor[(135), int16], Tensor[(13, 7, 2), float32], Tensor[(13, 7, 2), uint64]) */
}

def @func_2661(%var_2660: Tensor[(13, 7, 2), float32]) -> (Tensor[(13, 7, 2), uint64],) {
  %883 = fn (%var_2654: Tensor[(13, 7, 2), float32]) -> (Tensor[(13, 7, 2), uint64],) {
    %877 = @func_2410() /* ty=Tensor[(13, 7, 2), float32] */;
    %878 = cast(%var_2654, dtype="uint64") /* ty=Tensor[(13, 7, 2), uint64] */;
    %879 = shape_of(%877, dtype="int32") /* ty=Tensor[(3), int32] */;
    %880 = cast(%877, dtype="uint64") /* ty=Tensor[(13, 7, 2), uint64] */;
    %881 = dyn.reshape(%878, %879, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %882 = multiply(%880, %881) /* ty=Tensor[(13, 7, 2), uint64] */;
    (%882,)
  };
  %883(%var_2660) /* ty=(Tensor[(13, 7, 2), uint64],) */
}

def @func_5021(%var_5019: Tensor[(9, 8, 13), float64], %var_5020: Tensor[(9, 8, 13), float64]) -> (Tensor[(9, 8, 13), float64], Tensor[(13, 7, 2), float32], Tensor[(182), float32]) {
  @func_5017(%var_5019, %var_5020) /* ty=(Tensor[(9, 8, 13), float64], Tensor[(13, 7, 2), float32], Tensor[(182), float32]) */
}

def @func_5206() -> Tensor[(13, 7, 2), float32] {
  @func_5204() /* ty=Tensor[(13, 7, 2), float32] */
}

def @func_5749(%var_5746: bool, %var_5747: Tensor[(12, 1, 15), bool], %var_5748: Tensor[(1440), int32]) -> (Tensor[(12, ?, 15), uint64], Tensor[(9, 16, 10), bool], Tensor[(1440), int32]) {
  %897 = fn (%var_5706: bool, %var_5707: Tensor[(12, 1, 15), bool], %var_5722: Tensor[(1440), int32]) -> (Tensor[(12, ?, 15), uint64], Tensor[(9, 16, 10), bool], Tensor[(1440), int32]) {
    %884 = cast(%var_5706, dtype="bool") /* ty=bool */;
    %885 = cast(%var_5707, dtype="bool") /* ty=Tensor[(12, 1, 15), bool] */;
    %886 = logical_and(%884, %885) /* ty=Tensor[(12, 1, 15), bool] */;
    %887 = cast(%var_5707, dtype="uint64") /* ty=Tensor[(12, 1, 15), uint64] */;
    %888 = shape_of(%886, dtype="int32") /* ty=Tensor[(3), int32] */;
    %889 = cast(%886, dtype="uint64") /* ty=Tensor[(12, 1, 15), uint64] */;
    %890 = dyn.reshape(%887, %888, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %891 = cast(%var_5722, dtype="int32") /* ty=Tensor[(1440), int32] */;
    %892 = cast(%var_5722, dtype="int32") /* ty=Tensor[(1440), int32] */;
    %893 = reshape(%891, newshape=[9, 16, 10]) /* ty=Tensor[(9, 16, 10), int32] */;
    %894 = reshape(%892, newshape=[9, 16, 10]) /* ty=Tensor[(9, 16, 10), int32] */;
    %895 = subtract(%889, %890) /* ty=Tensor[(12, ?, 15), uint64] */;
    %896 = @func_1935(%893, %894) /* ty=Tensor[(9, 16, 10), bool] */;
    (%895, %896, %var_5722)
  };
  %897(%var_5746, %var_5747, %var_5748) /* ty=(Tensor[(12, ?, 15), uint64], Tensor[(9, 16, 10), bool], Tensor[(1440), int32]) */
}

def @func_1440(%var_1438: Tensor[(13, 4, 3), int8], %var_1439: Tensor[(13, 4, 3), int8]) -> Tensor[(13, 4, 3), int8] {
  %902 = fn (%var_1429: Tensor[(13, 4, 3), int8], %var_1430: Tensor[(13, 4, 3), int8]) -> Tensor[(13, 4, 3), int8] {
    %898 = cast(%var_1430, dtype="int8") /* ty=Tensor[(13, 4, 3), int8] */;
    %899 = shape_of(%var_1429, dtype="int32") /* ty=Tensor[(3), int32] */;
    %900 = cast(%var_1429, dtype="int8") /* ty=Tensor[(13, 4, 3), int8] */;
    %901 = dyn.reshape(%898, %899, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    bitwise_and(%900, %901) /* ty=Tensor[(13, 4, 3), int8] */
  };
  %902(%var_1438, %var_1439) /* ty=Tensor[(13, 4, 3), int8] */
}

def @func_2719() -> (Tensor[(13, 7, 2), float32],) {
  @func_2717() /* ty=(Tensor[(13, 7, 2), float32],) */
}

def @func_1642(%var_1640: Tensor[(7, 1, 2), float32], %var_1641: Tensor[(156), int8]) -> (Tensor[(11, 5, 7), uint8], Tensor[(385), float64], Tensor[(13, 4, 3), int8], Tensor[(156), int8], Tensor[(7, 1, 2), float64], Tensor[(7, ?, 2), float32], Tensor[(440, 2), uint64], int64, Tensor[(88), uint64]) {
  @func_1638(%var_1640, %var_1641) /* ty=(Tensor[(11, 5, 7), uint8], Tensor[(385), float64], Tensor[(13, 4, 3), int8], Tensor[(156), int8], Tensor[(7, 1, 2), float64], Tensor[(7, ?, 2), float32], Tensor[(440, 2), uint64], int64, Tensor[(88), uint64]) */
}

def @func_4525() -> Tensor[(13, 7, 2), float32] {
  @func_4523() /* ty=Tensor[(13, 7, 2), float32] */
}

def @func_2949(%var_2947: Tensor[(13, 7, 2), float32], %var_2948: Tensor[(135), int16]) -> (Tensor[(13, 7, 2), float64], Tensor[(13, 7, 2), bool], Tensor[(135), int16], Tensor[(135), int16]) {
  @func_2945(%var_2947, %var_2948) /* ty=(Tensor[(13, 7, 2), float64], Tensor[(13, 7, 2), bool], Tensor[(135), int16], Tensor[(135), int16]) */
}

def @func_3141(%var_3134: Tensor[(1120), int8], %var_3135: Tensor[(88), uint64], %var_3136: Tensor[(880), uint64], %var_3137: Tensor[(385), float64], %var_3138: Tensor[(14), float32], %var_3139: Tensor[(1440), int32], %var_3140: Tensor[(156), int8]) -> (Tensor[(13, 7, 2), float32], Tensor[(144), float64], Tensor[(144), float64], Tensor[(1120), int8], Tensor[(88), uint64], Tensor[(880), uint64], Tensor[(385), float64], Tensor[(14), float32], Tensor[(1440), int32], Tensor[(2, 9, 8), float32], Tensor[(13, 4, 3), int8], Tensor[(156), int8], Tensor[(2, 720), float32]) {
  @func_3132(%var_3134, %var_3135, %var_3136, %var_3137, %var_3138, %var_3139, %var_3140) /* ty=(Tensor[(13, 7, 2), float32], Tensor[(144), float64], Tensor[(144), float64], Tensor[(1120), int8], Tensor[(88), uint64], Tensor[(880), uint64], Tensor[(385), float64], Tensor[(14), float32], Tensor[(1440), int32], Tensor[(2, 9, 8), float32], Tensor[(13, 4, 3), int8], Tensor[(156), int8], Tensor[(2, 720), float32]) */
}

def @func_6393(%var_6392: Tensor[(180), bool]) -> (Tensor[(13, 7, 2), float32], bool, bool, Tensor[(180), bool], Tensor[(2, 720), int32]) {
  %914 = fn (%var_6382: Tensor[(180), bool]) -> (Tensor[(13, 7, 2), float32], bool, bool, Tensor[(180), bool], Tensor[(2, 720), int32]) {
    %903 = @func_3495() /* ty=Tensor[(13, 7, 2), float32] */;
    %904 = cast(%903, dtype="float32") /* ty=Tensor[(13, 7, 2), float32] */;
    %905 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
    %906 = cast(%var_6382, dtype="bool") /* ty=Tensor[(180), bool] */;
    %907 = cast(meta[relay.Constant][64] /* ty=Tensor[(2, 720), int32] */, dtype="int32") /* ty=Tensor[(2, 720), int32] */;
    %908 = reshape(%905, newshape=[]) /* ty=bool */;
    %909 = reshape(%906, newshape=[90, 2]) /* ty=Tensor[(90, 2), bool] */;
    %910 = reshape(%907, newshape=[720, 2]) /* ty=Tensor[(720, 2), int32] */;
    %911 = @func_6103(%908, %909, %910) /* ty=(Tensor[(12, 9, 4), float64], Tensor[(385), float64], Tensor[(1120), int8], Tensor[(88), uint64], Tensor[(880), uint64], Tensor[(385, 1), float64], Tensor[(12, ?, 15), uint64], bool, Tensor[(90, 2), bool], Tensor[(720, 2), int32], Tensor[(13, 7, 2), float32], Tensor[(13, 7, 2), float32]) */;
    %912 = asinh(%904) /* ty=Tensor[(13, 7, 2), float32] */;
    %913 = %911.7;
    (%912, %913, False /* ty=bool */, %var_6382, meta[relay.Constant][64] /* ty=Tensor[(2, 720), int32] */)
  };
  %914(%var_6392) /* ty=(Tensor[(13, 7, 2), float32], bool, bool, Tensor[(180), bool], Tensor[(2, 720), int32]) */
}

def @func_4592(%var_4590: Tensor[(10, 8), float64]) -> Tensor[(10, 8), float64] {
  @func_4589(%var_4590) /* ty=Tensor[(10, 8), float64] */
}

def @func_2546(%var_2522: Tensor[(7, 308), uint16]) -> (Tensor[(13, 7, 2), float32], Tensor[(14, 11, 14), bool], Tensor[(7, 308), uint16], Tensor[(504), int8], Tensor[(88), uint64], Tensor[(40, 22), uint64], Tensor[(504), int8]) {
  %915 = cast(%var_2522, dtype="uint16") /* ty=Tensor[(7, 308), uint16] */;
  %916 = cast(%var_2522, dtype="uint16") /* ty=Tensor[(7, 308), uint16] */;
  %917 = reshape(%915, newshape=[14, 11, 14]) /* ty=Tensor[(14, 11, 14), uint16] */;
  %918 = reshape(%916, newshape=[14, 11, 14]) /* ty=Tensor[(14, 11, 14), uint16] */;
  %919 = @func_1952(%917, %918) /* ty=(Tensor[(14, 11, 14), bool],) */;
  %920 = cast(meta[relay.Constant][65] /* ty=Tensor[(88), uint64] */, dtype="uint64") /* ty=Tensor[(88), uint64] */;
  %921 = cast(meta[relay.Constant][66] /* ty=Tensor[(40, 22), uint64] */, dtype="uint64") /* ty=Tensor[(40, 22), uint64] */;
  %922 = cast(meta[relay.Constant][67] /* ty=Tensor[(504), int8] */, dtype="int8") /* ty=Tensor[(504), int8] */;
  %923 = reshape(%920, newshape=[11, 8, 1]) /* ty=Tensor[(11, 8, 1), uint64] */;
  %924 = reshape(%921, newshape=[11, 8, 10]) /* ty=Tensor[(11, 8, 10), uint64] */;
  %925 = reshape(%922, newshape=[504]) /* ty=Tensor[(504), int8] */;
  %926 = @func_953(%923, %924, %925) /* ty=(Tensor[(11, 8, 10), float32], Tensor[(6, 7, 12), bool], int8, Tensor[(504), int8]) */;
  %927 = @func_2410() /* ty=Tensor[(13, 7, 2), float32] */;
  %928 = %919.0;
  %929 = %926.3;
  (%927, %928, %var_2522, %929, meta[relay.Constant][65] /* ty=Tensor[(88), uint64] */, meta[relay.Constant][66] /* ty=Tensor[(40, 22), uint64] */, meta[relay.Constant][67] /* ty=Tensor[(504), int8] */)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen29/build/output.py:2060: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen29/build/output.py", line 2065, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(220) tvmgen_default_fused_power_cast_cast_reshape_logical_and_cast_rsqrt_cast_cast_reshape_maximum_kernel0(int* __restrict__ T_maximum, double* __restrict__ placeholder, double* __restrict__ placeholder1) {
  T_maximum[(((int)threadIdx.x))] = max(((int)(1.000000e+00f / sqrtf(((float)(((bool)pow(placeholder[(0)], placeholder1[(((int)threadIdx.x))])) && ((bool)placeholder1[(((int)threadIdx.x))])))))), ((int)placeholder1[(((int)threadIdx.x))]));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


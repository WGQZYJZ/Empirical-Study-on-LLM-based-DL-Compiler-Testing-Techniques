==========mod==========
#[version = "0.0.5"]
def @func_9675() -> Tensor[(16, 5, 15), bool] {
  @func_6171() /* ty=Tensor[(16, 5, 15), bool] */
}

def @func_5315() -> Tensor[(8, 15, 4), float32] {
  @func_3759() /* ty=Tensor[(8, 15, 4), float32] */
}

def @func_6094() -> (Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float64], Tensor[(12, 3, 14), bool], Tensor[(504), float64]) {
  %0 = @func_3274() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %1 = @func_5042() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %2 = @func_5418() /* ty=(Tensor[(16, 5, 15), bool], Tensor[(8, 15, 4), float64]) */;
  %3 = cast(meta[relay.Constant][0] /* ty=Tensor[(504), float64] */, dtype="float64") /* ty=Tensor[(504), float64] */;
  %4 = cast(meta[relay.Constant][0] /* ty=Tensor[(504), float64] */, dtype="float64") /* ty=Tensor[(504), float64] */;
  %5 = cast(meta[relay.Constant][0] /* ty=Tensor[(504), float64] */, dtype="float64") /* ty=Tensor[(504), float64] */;
  %6 = reshape(%3, newshape=[12, 3, 14]) /* ty=Tensor[(12, 3, 14), float64] */;
  %7 = reshape(%4, newshape=[12, 3, 14]) /* ty=Tensor[(12, 3, 14), float64] */;
  %8 = reshape(%5, newshape=[12, 3, 14]) /* ty=Tensor[(12, 3, 14), float64] */;
  %9 = @func_2745(%6, %7, %8) /* ty=(Tensor[(12, 3, 14), bool], Tensor[(12, 3, 14), int64]) */;
  %10 = %0.0;
  %11 = %1.0;
  %12 = %2.1;
  %13 = %9.0;
  (%10, %11, %12, %13, meta[relay.Constant][0] /* ty=Tensor[(504), float64] */)
}

def @func_5082() -> Tensor[(12, 3, 14), float32] {
  %14 = @func_3314() /* ty=(Tensor[(16, 5, 15), bool], Tensor[(12, 3, 14), int64], Tensor[(504, 1), float64]) */;
  %15 = %14.1;
  %16 = cast(%15, dtype="float32") /* ty=Tensor[(12, 3, 14), float32] */;
  acosh(%16) /* ty=Tensor[(12, 3, 14), float32] */
}

def @func_7482() -> (Tensor[(16, 5, 15), bool], Tensor[(16, 5, 15), bool]) {
  %17 = @func_6243() /* ty=(Tensor[(16, 5, 15), bool],) */;
  %18 = %17.0;
  %19 = @func_6126() /* ty=Tensor[(16, 5, 15), bool] */;
  (%18, %19)
}

def @func_9405() -> (Tensor[(8, 15, 4), float32],) {
  %20 = @func_6933() /* ty=Tensor[(8, 15, 4), float32] */;
  (%20,)
}

def @func_3859() -> Tensor[(8, 15, 4), float64] {
  %21 = @func_3130() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %22 = %21.0;
  %23 = cast(%22, dtype="float32") /* ty=Tensor[(8, 15, 4), float32] */;
  %24 = log(%23) /* ty=Tensor[(8, 15, 4), float32] */;
  %25 = cast(%22, dtype="float64") /* ty=Tensor[(8, 15, 4), float64] */;
  %26 = shape_of(%24, dtype="int32") /* ty=Tensor[(3), int32] */;
  %27 = cast(%24, dtype="float64") /* ty=Tensor[(8, 15, 4), float64] */;
  %28 = dyn.reshape(%25, %26, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_divide(%27, %28) /* ty=Tensor[(8, 15, 4), float64] */
}

def @func_5927() -> (Tensor[(8, 15, 4), float32],) {
  %29 = @func_3274() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %30 = %29.0;
  (%30,)
}

def @func_6547(%var_6534: Tensor[(90), float64]) -> (Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float32], Tensor[(1152), uint64], Tensor[(8, 15, 4), bool], Tensor[(16, 5, 15), bool], Tensor[(12, 3, 14), float32], Tensor[(16, 5, 15), bool], Tensor[(90), float64], Tensor[(16, 5, 15), bool]) {
  %31 = @func_3274() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %32 = @func_5012() /* ty=(Tensor[(16, 5, 15), bool], Tensor[(12, 16, 6), uint64], Tensor[(1152), uint64], Tensor[(8, 15, 4), float64]) */;
  %33 = @func_4162() /* ty=(Tensor[(16, 5, 15), bool],) */;
  %34 = @func_5082() /* ty=Tensor[(12, 3, 14), float32] */;
  %35 = cast(%34, dtype="float32") /* ty=Tensor[(12, 3, 14), float32] */;
  %36 = cast(%var_6534, dtype="float64") /* ty=Tensor[(90), float64] */;
  %37 = %32.2;
  %38 = cast(%37, dtype="uint64") /* ty=Tensor[(1152), uint64] */;
  %39 = reshape(%36, newshape=[15, 6]) /* ty=Tensor[(15, 6), float64] */;
  %40 = reshape(%38, newshape=[1152]) /* ty=Tensor[(1152), uint64] */;
  %41 = @func_3950(%39, %40) /* ty=(Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), bool], Tensor[(16, 5, 15), bool], Tensor[(1512), float64], Tensor[(15, 6), float64], Tensor[(990), float64], Tensor[(126, 12), float64], Tensor[(168, 2), bool], Tensor[(672), bool], Tensor[(1152), uint64]) */;
  %42 = @func_6243() /* ty=(Tensor[(16, 5, 15), bool],) */;
  %43 = @func_5833() /* ty=Tensor[(8, 15, 4), float32] */;
  %44 = %31.0;
  %45 = @func_3896() /* ty=Tensor[(8, 15, 4), bool] */;
  %46 = %33.0;
  %47 = sqrt(%35) /* ty=Tensor[(12, 3, 14), float32] */;
  %48 = %41.2;
  %49 = %42.0;
  (%43, %44, %37, %45, %46, %47, %48, %var_6534, %49)
}

def @func_7696(%var_7687: Tensor[(90), float64], %var_7689: Tensor[(1512), float64], %var_7691: Tensor[(168, 4), bool]) -> (Tensor[(8, 15, 4), float64], Tensor[(16, 5, 15), bool], Tensor[(13, 4, 14), uint8], Tensor[(182, 4), uint8], Tensor[(1512), float64], Tensor[(90), float64], Tensor[(990), float64], Tensor[(1512), float64], Tensor[(336), bool], Tensor[(168, 4), bool], Tensor[(1152), uint64]) {
  %50 = cast(meta[relay.Constant][1] /* ty=Tensor[(182, 4), uint8] */, dtype="uint8") /* ty=Tensor[(182, 4), uint8] */;
  %51 = cast(meta[relay.Constant][1] /* ty=Tensor[(182, 4), uint8] */, dtype="uint8") /* ty=Tensor[(182, 4), uint8] */;
  %52 = reshape(%50, newshape=[13, 4, 14]) /* ty=Tensor[(13, 4, 14), uint8] */;
  %53 = reshape(%51, newshape=[13, 4, 14]) /* ty=Tensor[(13, 4, 14), uint8] */;
  %54 = @func_546(%52, %53) /* ty=(Tensor[(13, 4, 14), uint8], Tensor[(14, 9, 12), float64], Tensor[(1512), float64], Tensor[(14, 9, 12), float64], Tensor[(14, 9, 12), float64], Tensor[(14, 9, 12), float64]) */;
  %55 = cast(%var_7687, dtype="float64") /* ty=Tensor[(90), float64] */;
  %56 = cast(meta[relay.Constant][2] /* ty=Tensor[(990), float64] */, dtype="float64") /* ty=Tensor[(990), float64] */;
  %57 = cast(%var_7689, dtype="float64") /* ty=Tensor[(1512), float64] */;
  %58 = cast(meta[relay.Constant][3] /* ty=Tensor[(336), bool] */, dtype="bool") /* ty=Tensor[(336), bool] */;
  %59 = cast(%var_7691, dtype="bool") /* ty=Tensor[(168, 4), bool] */;
  %60 = cast(meta[relay.Constant][4] /* ty=Tensor[(1152), uint64] */, dtype="uint64") /* ty=Tensor[(1152), uint64] */;
  %61 = reshape(%55, newshape=[1, 10, 9]) /* ty=Tensor[(1, 10, 9), float64] */;
  %62 = reshape(%56, newshape=[11, 10, 9]) /* ty=Tensor[(11, 10, 9), float64] */;
  %63 = reshape(%57, newshape=[1512]) /* ty=Tensor[(1512), float64] */;
  %64 = reshape(%58, newshape=[4, 84]) /* ty=Tensor[(4, 84), bool] */;
  %65 = reshape(%59, newshape=[672]) /* ty=Tensor[(672), bool] */;
  %66 = reshape(%60, newshape=[1152]) /* ty=Tensor[(1152), uint64] */;
  %67 = @func_3727(%61, %62, %63, %64, %65, %66) /* ty=(Tensor[(?, 10, 9), bool], Tensor[(672), bool], Tensor[(1512), float64], Tensor[(4, 84), bool], Tensor[(672), bool], Tensor[(336), bool], Tensor[(11, 10, 9), float32], Tensor[(12, 16, 6), uint64], Tensor[(1152), uint64]) */;
  %68 = @func_5625() /* ty=Tensor[(8, 15, 4), float64] */;
  %69 = @func_5496() /* ty=Tensor[(16, 5, 15), bool] */;
  %70 = %54.0;
  %71 = %67.2;
  (%68, %69, %70, meta[relay.Constant][1] /* ty=Tensor[(182, 4), uint8] */, %71, %var_7687, meta[relay.Constant][2] /* ty=Tensor[(990), float64] */, %var_7689, meta[relay.Constant][3] /* ty=Tensor[(336), bool] */, %var_7691, meta[relay.Constant][4] /* ty=Tensor[(1152), uint64] */)
}

def @func_9788() -> (Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), uint16], Tensor[(16, 5, 15), int8], Tensor[(14, 14, 10), uint16]) {
  %72 = @func_5927() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %73 = @func_9102() /* ty=(Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float32], Tensor[(16, 5, 15), bool], Tensor[(11, 4, 12), float64], Tensor[(8, 15, 4), uint16]) */;
  %74 = @func_7482() /* ty=(Tensor[(16, 5, 15), bool], Tensor[(16, 5, 15), bool]) */;
  %75 = %74.1;
  %76 = cast(%75, dtype="float32") /* ty=Tensor[(16, 5, 15), float32] */;
  %77 = cosh(%76) /* ty=Tensor[(16, 5, 15), float32] */;
  %78 = cast(%75, dtype="int8") /* ty=Tensor[(16, 5, 15), int8] */;
  %79 = shape_of(%77, dtype="int32") /* ty=Tensor[(3), int32] */;
  %80 = cast(%77, dtype="int8") /* ty=Tensor[(16, 5, 15), int8] */;
  %81 = dyn.reshape(%78, %79, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %82 = %72.0;
  %83 = %73.4;
  %84 = left_shift(%80, %81) /* ty=Tensor[(16, 5, 15), int8] */;
  %85 = @func_6717() /* ty=Tensor[(14, 14, 10), uint16] */;
  (%82, %83, %84, %85)
}

def @func_10525() -> (Tensor[(8, 15, 4), float32],) {
  %86 = @func_8535() /* ty=Tensor[(8, 15, 4), float32] */;
  (%86,)
}

def @func_6933() -> Tensor[(8, 15, 4), float32] {
  @func_6309() /* ty=Tensor[(8, 15, 4), float32] */
}

def @func_10306() -> (Tensor[(11, 4, 12), float64],) {
  %87 = @func_7640() /* ty=(Tensor[(11, 4, 12), uint16], Tensor[(16, 5, 15), bool], Tensor[(11, 4, 12), float64]) */;
  %88 = %87.2;
  (%88,)
}

def @func_10767() -> (Tensor[(8, 15, 4), float32],) {
  %89 = @func_8535() /* ty=Tensor[(8, 15, 4), float32] */;
  (%89,)
}

def @func_4402(%var_4397: Tensor[(8, 15, 4), bool]) -> Tensor[(8, 15, 4), float32] {
  %90 = @func_3896() /* ty=Tensor[(8, 15, 4), bool] */;
  %91 = cast(%var_4397, dtype="float32") /* ty=Tensor[(8, 15, 4), float32] */;
  %92 = shape_of(%90, dtype="int32") /* ty=Tensor[(3), int32] */;
  %93 = cast(%90, dtype="float32") /* ty=Tensor[(8, 15, 4), float32] */;
  %94 = dyn.reshape(%91, %92, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  subtract(%93, %94) /* ty=Tensor[(8, 15, 4), float32] */
}

def @func_12248() -> Tensor[(8, 15, 4), float32] {
  %95 = @func_3274() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %95.0
}

def @func_12115() -> Tensor[(12, 16, 6), uint64] {
  %96 = @func_4068() /* ty=(Tensor[(8, 15, 4), float64], Tensor[(12, 16, 6), uint64], Tensor[(1152), uint64]) */;
  %96.1
}

def @func_10260(%var_10241: Tensor[(9, 14, 5), float64], %var_10242: Tensor[(9, 14, 5), float64], %var_10254: Tensor[(9, 14, 5), float64]) -> (Tensor[(9, 14, 5), float64], Tensor[(9, 14, 5), uint8]) {
  %97 = cast(%var_10242, dtype="float64") /* ty=Tensor[(9, 14, 5), float64] */;
  %98 = shape_of(%var_10241, dtype="int32") /* ty=Tensor[(3), int32] */;
  %99 = cast(%var_10241, dtype="float64") /* ty=Tensor[(9, 14, 5), float64] */;
  %100 = dyn.reshape(%97, %98, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %101 = cast(%var_10254, dtype="uint8") /* ty=Tensor[(9, 14, 5), uint8] */;
  %102 = shape_of(%var_10242, dtype="int32") /* ty=Tensor[(3), int32] */;
  %103 = cast(%var_10242, dtype="uint8") /* ty=Tensor[(9, 14, 5), uint8] */;
  %104 = dyn.reshape(%101, %102, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %105 = divide(%99, %100) /* ty=Tensor[(9, 14, 5), float64] */;
  %106 = minimum(%103, %104) /* ty=Tensor[(9, 14, 5), uint8] */;
  (%105, %106)
}

def @func_8463() -> Tensor[(8, 15, 4), float32] {
  @func_3182() /* ty=Tensor[(8, 15, 4), float32] */
}

def @func_12023(%var_11991: float64, %var_12016: Tensor[(2, 168), float64]) -> (Tensor[(8, 15, 4), float32], float64, Tensor[(40, 2), float64], Tensor[(2, 168), bool], Tensor[(12, 3, 14), float32]) {
  %107 = @func_10722() /* ty=(Tensor[(8, 15, 4), float32], Tensor[(13, 16, 7), float32], Tensor[(1456), float64]) */;
  %108 = cast(%var_11991, dtype="float64") /* ty=float64 */;
  %109 = cast(meta[relay.Constant][5] /* ty=Tensor[(40, 2), float64] */, dtype="float64") /* ty=Tensor[(40, 2), float64] */;
  %110 = reshape(%108, newshape=[]) /* ty=float64 */;
  %111 = reshape(%109, newshape=[2, 10, 4]) /* ty=Tensor[(2, 10, 4), float64] */;
  %112 = @func_2795(%110, %111) /* ty=(Tensor[(2, 10, 4), float64], Tensor[(14, 12, 2), bool], Tensor[(2, 168), bool], Tensor[(672), bool]) */;
  %113 = %112.2;
  %114 = cast(%113, dtype="float64") /* ty=Tensor[(2, 168), float64] */;
  %115 = exp(%114) /* ty=Tensor[(2, 168), float64] */;
  %116 = cast(%var_12016, dtype="bool") /* ty=Tensor[(2, 168), bool] */;
  %117 = shape_of(%115, dtype="int32") /* ty=Tensor[(2), int32] */;
  %118 = cast(%115, dtype="bool") /* ty=Tensor[(2, 168), bool] */;
  %119 = dyn.reshape(%116, %117, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %120 = %107.0;
  %121 = equal(%118, %119) /* ty=Tensor[(2, 168), bool] */;
  %122 = @func_5082() /* ty=Tensor[(12, 3, 14), float32] */;
  (%120, %var_11991, meta[relay.Constant][5] /* ty=Tensor[(40, 2), float64] */, %121, %122)
}

def @func_11243() -> Tensor[(14, 14, 10), float64] {
  %123 = @func_6786() /* ty=(Tensor[(14, 14, 10), float64],) */;
  %123.0
}

def @func_7430() -> (Tensor[(8, 15, 4), float32],) {
  %124 = @func_3759() /* ty=Tensor[(8, 15, 4), float32] */;
  (%124,)
}

def @func_12214(%var_12186: Tensor[(8, 8, 2), float64], %var_12193: uint16) -> (Tensor[(8, 8, 2), float64], Tensor[(8, 12, 11), bool], uint16, Tensor[(1056), uint16]) {
  %125 = cast(%var_12186, dtype="float64") /* ty=Tensor[(8, 8, 2), float64] */;
  %126 = cast(%var_12193, dtype="uint16") /* ty=uint16 */;
  %127 = cast(meta[relay.Constant][6] /* ty=Tensor[(1056), uint16] */, dtype="uint16") /* ty=Tensor[(1056), uint16] */;
  %128 = reshape(%126, newshape=[]) /* ty=uint16 */;
  %129 = reshape(%127, newshape=[8, 12, 11]) /* ty=Tensor[(8, 12, 11), uint16] */;
  %130 = @func_9146(%128, %129) /* ty=(Tensor[(8, 12, 11), bool], Tensor[(16, 5, 15), bool]) */;
  %131 = asinh(%125) /* ty=Tensor[(8, 8, 2), float64] */;
  %132 = %130.0;
  (%131, %132, %var_12193, meta[relay.Constant][6] /* ty=Tensor[(1056), uint16] */)
}

def @func_5625() -> Tensor[(8, 15, 4), float64] {
  %133 = @func_5418() /* ty=(Tensor[(16, 5, 15), bool], Tensor[(8, 15, 4), float64]) */;
  %133.1
}

def @func_7279() -> Tensor[(16, 5, 15), bool] {
  @func_4197() /* ty=Tensor[(16, 5, 15), bool] */
}

def @func_11651() -> (Tensor[(16, 5, 15), bool],) {
  %134 = @func_7482() /* ty=(Tensor[(16, 5, 15), bool], Tensor[(16, 5, 15), bool]) */;
  %135 = %134.1;
  (%135,)
}

def @func_4634() -> (Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float32]) {
  %136 = @func_4417() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %137 = %136.0;
  %138 = cast(%137, dtype="float32") /* ty=Tensor[(8, 15, 4), float32] */;
  %139 = reshape(%138, newshape=[8, 15, 4]) /* ty=Tensor[(8, 15, 4), float32] */;
  %140 = @func_4139(%139) /* ty=(Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), bool]) */;
  %141 = %140.0;
  (%137, %141)
}

def @func_758(%var_735: Tensor[(14, 11, 6), float64], %var_736: Tensor[(14, 11, 6), float64]) -> (Tensor[(14, 11, 6), float32],) {
  %142 = cast(%var_736, dtype="float64") /* ty=Tensor[(14, 11, 6), float64] */;
  %143 = shape_of(%var_735, dtype="int32") /* ty=Tensor[(3), int32] */;
  %144 = cast(%var_735, dtype="float64") /* ty=Tensor[(14, 11, 6), float64] */;
  %145 = dyn.reshape(%142, %143, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %146 = floor_mod(%144, %145) /* ty=Tensor[(14, 11, 6), float64] */;
  %147 = cast(%146, dtype="float32") /* ty=Tensor[(14, 11, 6), float32] */;
  %148 = sin(%147) /* ty=Tensor[(14, 11, 6), float32] */;
  (%148,)
}

def @func_2795(%var_2783: float64, %var_2784: Tensor[(2, 10, 4), float64]) -> (Tensor[(2, 10, 4), float64], Tensor[(14, 12, 2), bool], Tensor[(2, 168), bool], Tensor[(672), bool]) {
  %149 = cast(%var_2783, dtype="float64") /* ty=float64 */;
  %150 = cast(%var_2784, dtype="float64") /* ty=Tensor[(2, 10, 4), float64] */;
  %151 = cast(meta[relay.Constant][7] /* ty=Tensor[(2, 168), bool] */, dtype="bool") /* ty=Tensor[(2, 168), bool] */;
  %152 = cast(%var_2783, dtype="int32") /* ty=int32 */;
  %153 = cast(meta[relay.Constant][8] /* ty=Tensor[(672), bool] */, dtype="bool") /* ty=Tensor[(672), bool] */;
  %154 = reshape(%151, newshape=[7, 16, 3]) /* ty=Tensor[(7, 16, 3), bool] */;
  %155 = reshape(%152, newshape=[]) /* ty=int32 */;
  %156 = reshape(%153, newshape=[14, 16, 3]) /* ty=Tensor[(14, 16, 3), bool] */;
  %157 = @func_2477(%154, %155, %156) /* ty=(Tensor[(7, 16, 3), bool], Tensor[(14, 12, 2), bool], int32, Tensor[(14, 16, 3), bool]) */;
  %158 = power(%149, %150) /* ty=Tensor[(2, 10, 4), float64] */;
  %159 = %157.1;
  (%158, %159, meta[relay.Constant][7] /* ty=Tensor[(2, 168), bool] */, meta[relay.Constant][8] /* ty=Tensor[(672), bool] */)
}

def @func_9177(%var_9172: Tensor[(1152), uint64]) -> (Tensor[(8, 15, 4), float32], Tensor[(13, 4, 14), uint8], Tensor[(182, 4), uint8], Tensor[(1152), uint64], Tensor[(90), float64], Tensor[(1152), uint64]) {
  %160 = cast(meta[relay.Constant][9] /* ty=Tensor[(182, 4), uint8] */, dtype="uint8") /* ty=Tensor[(182, 4), uint8] */;
  %161 = cast(meta[relay.Constant][9] /* ty=Tensor[(182, 4), uint8] */, dtype="uint8") /* ty=Tensor[(182, 4), uint8] */;
  %162 = reshape(%160, newshape=[13, 4, 14]) /* ty=Tensor[(13, 4, 14), uint8] */;
  %163 = reshape(%161, newshape=[13, 4, 14]) /* ty=Tensor[(13, 4, 14), uint8] */;
  %164 = @func_7141(%162, %163) /* ty=(Tensor[(13, 4, 14), uint8],) */;
  %165 = cast(meta[relay.Constant][9] /* ty=Tensor[(182, 4), uint8] */, dtype="uint8") /* ty=Tensor[(182, 4), uint8] */;
  %166 = cast(meta[relay.Constant][10] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
  %167 = cast(%var_9172, dtype="uint64") /* ty=Tensor[(1152), uint64] */;
  %168 = reshape(%165, newshape=[728]) /* ty=Tensor[(728), uint8] */;
  %169 = reshape(%166, newshape=[90]) /* ty=Tensor[(90), float64] */;
  %170 = reshape(%167, newshape=[1152]) /* ty=Tensor[(1152), uint64] */;
  %171 = @func_5738(%168, %169, %170) /* ty=(Tensor[(8, 15, 4), float64], Tensor[(14, 9, 12), float64], Tensor[(728), uint8], Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), bool], Tensor[(15, 6), float64], Tensor[(90), float64], Tensor[(1152), uint64], Tensor[(8, 15, 4), float32], Tensor[(12, 16, 6), float64]) */;
  %172 = @func_5315() /* ty=Tensor[(8, 15, 4), float32] */;
  %173 = %164.0;
  %174 = %171.7;
  (%172, %173, meta[relay.Constant][9] /* ty=Tensor[(182, 4), uint8] */, %174, meta[relay.Constant][10] /* ty=Tensor[(90), float64] */, %var_9172)
}

def @func_3573(%var_3563: Tensor[(924), float64]) -> (Tensor[(8, 15, 4), float64], Tensor[(14, 11, 6), float32], Tensor[(924), float64]) {
  %175 = cast(%var_3563, dtype="float64") /* ty=Tensor[(924), float64] */;
  %176 = cast(%var_3563, dtype="float64") /* ty=Tensor[(924), float64] */;
  %177 = reshape(%175, newshape=[14, 11, 6]) /* ty=Tensor[(14, 11, 6), float64] */;
  %178 = reshape(%176, newshape=[14, 11, 6]) /* ty=Tensor[(14, 11, 6), float64] */;
  %179 = @func_758(%177, %178) /* ty=(Tensor[(14, 11, 6), float32],) */;
  %180 = @func_3536() /* ty=Tensor[(8, 15, 4), float64] */;
  %181 = %179.0;
  (%180, %181, %var_3563)
}

def @func_3472(%var_3461: int32, %var_3465: Tensor[(168, 2), int32]) -> (Tensor[(8, 15, 4), float32], Tensor[(9, 15, 10), float32], Tensor[(1350), float32], Tensor[(256), float32], int32, Tensor[(14, 12, 2), bool], Tensor[(168, 2), uint8]) {
  %182 = @func_3274() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %183 = cast(meta[relay.Constant][11] /* ty=Tensor[(1350), float32] */, dtype="float32") /* ty=Tensor[(1350), float32] */;
  %184 = cast(meta[relay.Constant][11] /* ty=Tensor[(1350), float32] */, dtype="float32") /* ty=Tensor[(1350), float32] */;
  %185 = reshape(%183, newshape=[9, 15, 10]) /* ty=Tensor[(9, 15, 10), float32] */;
  %186 = reshape(%184, newshape=[9, 15, 10]) /* ty=Tensor[(9, 15, 10), float32] */;
  %187 = @func_2874(%185, %186) /* ty=(Tensor[(9, 15, 10), float32],) */;
  %188 = cast(%var_3461, dtype="int32") /* ty=int32 */;
  %189 = cast(meta[relay.Constant][12] /* ty=Tensor[(256), float32] */, dtype="float32") /* ty=Tensor[(256), float32] */;
  %190 = cast(meta[relay.Constant][12] /* ty=Tensor[(256), float32] */, dtype="float32") /* ty=Tensor[(256), float32] */;
  %191 = cast(%var_3461, dtype="int32") /* ty=int32 */;
  %192 = reshape(%189, newshape=[8, 8, 4]) /* ty=Tensor[(8, 8, 4), float32] */;
  %193 = reshape(%190, newshape=[8, 8, 4]) /* ty=Tensor[(8, 8, 4), float32] */;
  %194 = reshape(%191, newshape=[]) /* ty=int32 */;
  %195 = @func_3036(%192, %193, %194) /* ty=(Tensor[(8, 8, 4), float32], Tensor[(14, 12, 2), bool], int32, Tensor[(168, 2), int32], Tensor[(8, 8, 4), uint8]) */;
  %196 = %195.3;
  %197 = cast(%196, dtype="int32") /* ty=Tensor[(168, 2), int32] */;
  %198 = reshape(%188, newshape=[]) /* ty=int32 */;
  %199 = reshape(%197, newshape=[14, 12, 2]) /* ty=Tensor[(14, 12, 2), int32] */;
  %200 = cast(%var_3465, dtype="uint8") /* ty=Tensor[(168, 2), uint8] */;
  %201 = shape_of(%196, dtype="int32") /* ty=Tensor[(2), int32] */;
  %202 = cast(%196, dtype="uint8") /* ty=Tensor[(168, 2), uint8] */;
  %203 = dyn.reshape(%200, %201, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %204 = %182.0;
  %205 = %187.0;
  %206 = @func_1445(%198, %199) /* ty=Tensor[(14, 12, 2), bool] */;
  %207 = bitwise_or(%202, %203) /* ty=Tensor[(168, 2), uint8] */;
  (%204, %205, meta[relay.Constant][11] /* ty=Tensor[(1350), float32] */, meta[relay.Constant][12] /* ty=Tensor[(256), float32] */, %var_3461, %206, %207)
}

def @func_546(%var_472: Tensor[(13, 4, 14), uint8], %var_473: Tensor[(13, 4, 14), uint8]) -> (Tensor[(13, 4, 14), uint8], Tensor[(14, 9, 12), float64], Tensor[(1512), float64], Tensor[(14, 9, 12), float64], Tensor[(14, 9, 12), float64], Tensor[(14, 9, 12), float64]) {
  %208 = cast(%var_473, dtype="uint8") /* ty=Tensor[(13, 4, 14), uint8] */;
  %209 = shape_of(%var_472, dtype="int32") /* ty=Tensor[(3), int32] */;
  %210 = cast(%var_472, dtype="uint8") /* ty=Tensor[(13, 4, 14), uint8] */;
  %211 = dyn.reshape(%208, %209, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %212 = cast(meta[relay.Constant][13] /* ty=Tensor[(1512), float64] */, dtype="float64") /* ty=Tensor[(1512), float64] */;
  %213 = reshape(%212, newshape=[14, 9, 12]) /* ty=Tensor[(14, 9, 12), float64] */;
  %214 = @func_424(%213) /* ty=(Tensor[(14, 9, 12), float64],) */;
  %215 = %214.0;
  %216 = cast(%215, dtype="float64") /* ty=Tensor[(14, 9, 12), float64] */;
  %217 = reshape(%216, newshape=[14, 9, 12]) /* ty=Tensor[(14, 9, 12), float64] */;
  %218 = @func_424(%217) /* ty=(Tensor[(14, 9, 12), float64],) */;
  %219 = cast(meta[relay.Constant][13] /* ty=Tensor[(1512), float64] */, dtype="float64") /* ty=Tensor[(1512), float64] */;
  %220 = reshape(%219, newshape=[14, 9, 12]) /* ty=Tensor[(14, 9, 12), float64] */;
  %221 = @func_424(%220) /* ty=(Tensor[(14, 9, 12), float64],) */;
  %222 = %221.0;
  %223 = cast(%222, dtype="float64") /* ty=Tensor[(14, 9, 12), float64] */;
  %224 = reshape(%223, newshape=[14, 9, 12]) /* ty=Tensor[(14, 9, 12), float64] */;
  %225 = @func_424(%224) /* ty=(Tensor[(14, 9, 12), float64],) */;
  %226 = left_shift(%210, %211) /* ty=Tensor[(13, 4, 14), uint8] */;
  %227 = %218.0;
  %228 = %225.0;
  (%226, %215, meta[relay.Constant][13] /* ty=Tensor[(1512), float64] */, %227, %222, %228)
}

def @func_1445(%var_1432: int32, %var_1433: Tensor[(14, 12, 2), int32]) -> Tensor[(14, 12, 2), bool] {
  %229 = cast(%var_1432, dtype="bool") /* ty=bool */;
  %230 = cast(%var_1433, dtype="bool") /* ty=Tensor[(14, 12, 2), bool] */;
  equal(%229, %230) /* ty=Tensor[(14, 12, 2), bool] */
}

def @func_5012() -> (Tensor[(16, 5, 15), bool], Tensor[(12, 16, 6), uint64], Tensor[(1152), uint64], Tensor[(8, 15, 4), float64]) {
  %231 = @func_4162() /* ty=(Tensor[(16, 5, 15), bool],) */;
  %232 = cast(meta[relay.Constant][14] /* ty=Tensor[(1152), uint64] */, dtype="uint64") /* ty=Tensor[(1152), uint64] */;
  %233 = cast(meta[relay.Constant][14] /* ty=Tensor[(1152), uint64] */, dtype="uint64") /* ty=Tensor[(1152), uint64] */;
  %234 = reshape(%232, newshape=[12, 16, 6]) /* ty=Tensor[(12, 16, 6), uint64] */;
  %235 = reshape(%233, newshape=[12, 16, 6]) /* ty=Tensor[(12, 16, 6), uint64] */;
  %236 = @func_4068() /* ty=(Tensor[(8, 15, 4), float64], Tensor[(12, 16, 6), uint64], Tensor[(1152), uint64]) */;
  %237 = %231.0;
  %238 = @func_2152(%234, %235) /* ty=Tensor[(12, 16, 6), uint64] */;
  %239 = %236.0;
  (%237, %238, meta[relay.Constant][14] /* ty=Tensor[(1152), uint64] */, %239)
}

def @func_4696(%var_4687: int16, %var_4688: Tensor[(11, 12, 7), int16]) -> Tensor[(11, 12, 7), int16] {
  %240 = cast(%var_4687, dtype="int16") /* ty=int16 */;
  %241 = cast(%var_4688, dtype="int16") /* ty=Tensor[(11, 12, 7), int16] */;
  minimum(%240, %241) /* ty=Tensor[(11, 12, 7), int16] */
}

def @func_5418() -> (Tensor[(16, 5, 15), bool], Tensor[(8, 15, 4), float64]) {
  %242 = @func_4162() /* ty=(Tensor[(16, 5, 15), bool],) */;
  %243 = %242.0;
  %244 = @func_3859() /* ty=Tensor[(8, 15, 4), float64] */;
  (%243, %244)
}

def @func_8784(%var_8781: Tensor[(462, 2), float64]) -> (Tensor[(16, 5, 15), bool], Tensor[(8, 15, 4), float64], Tensor[(462, 2), float64]) {
  %245 = @func_8655() /* ty=(Tensor[(16, 5, 15), bool],) */;
  %246 = cast(%var_8781, dtype="float64") /* ty=Tensor[(462, 2), float64] */;
  %247 = reshape(%246, newshape=[924]) /* ty=Tensor[(924), float64] */;
  %248 = @func_3573(%247) /* ty=(Tensor[(8, 15, 4), float64], Tensor[(14, 11, 6), float32], Tensor[(924), float64]) */;
  %249 = %245.0;
  %250 = %248.0;
  (%249, %250, %var_8781)
}

def @func_10034(%var_10010: Tensor[(924), float64]) -> (Tensor[(8, 15, 4), float64], Tensor[(8, 15, 4), bool], Tensor[(8, 15, 4), float32], Tensor[(16, 5, 15), bool], Tensor[(924), float64], Tensor[(14, 14, 10), uint16]) {
  %251 = @func_3859() /* ty=Tensor[(8, 15, 4), float64] */;
  %252 = cast(%251, dtype="bool") /* ty=Tensor[(8, 15, 4), bool] */;
  %253 = reshape(%252, newshape=[8, 15, 4]) /* ty=Tensor[(8, 15, 4), bool] */;
  %254 = @func_8816() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %255 = cast(%var_10010, dtype="float64") /* ty=Tensor[(924), float64] */;
  %256 = reshape(%255, newshape=[924]) /* ty=Tensor[(924), float64] */;
  %257 = @func_6010(%256) /* ty=(Tensor[(16, 5, 15), bool], Tensor[(154, 6), bool], Tensor[(1, 360), float64], Tensor[(924), float64]) */;
  %258 = @func_5128(%253) /* ty=Tensor[(8, 15, 4), bool] */;
  %259 = %254.0;
  %260 = %257.0;
  %261 = @func_6717() /* ty=Tensor[(14, 14, 10), uint16] */;
  (%251, %258, %259, %260, %var_10010, %261)
}

def @func_10479() -> (Tensor[(16, 5, 15), bool],) {
  %262 = @func_6243() /* ty=(Tensor[(16, 5, 15), bool],) */;
  %263 = %262.0;
  (%263,)
}

def @func_11468(%var_11460: bool, %var_11461: Tensor[(42), bool], %var_11464: Tensor[(728), uint8]) -> (Tensor[(8, 15, 4), float64], Tensor[(6, ?, 7), bool], bool, Tensor[(42), bool], Tensor[(15, 6), float64], Tensor[(728), uint8], Tensor[(90), float64], Tensor[(24, 48), uint64]) {
  %264 = cast(%var_11460, dtype="bool") /* ty=bool */;
  %265 = cast(%var_11461, dtype="bool") /* ty=Tensor[(42), bool] */;
  %266 = @func_5625() /* ty=Tensor[(8, 15, 4), float64] */;
  %267 = cast(%266, dtype="float32") /* ty=Tensor[(8, 15, 4), float32] */;
  %268 = cast(%var_11461, dtype="bool") /* ty=Tensor[(42), bool] */;
  %269 = cast(%266, dtype="float32") /* ty=Tensor[(8, 15, 4), float32] */;
  %270 = reshape(%264, newshape=[]) /* ty=bool */;
  %271 = reshape(%265, newshape=[6, 1, 7]) /* ty=Tensor[(6, 1, 7), bool] */;
  %272 = reshape(%267, newshape=[120, 4]) /* ty=Tensor[(120, 4), float32] */;
  %273 = reshape(%268, newshape=[6, 1, 7]) /* ty=Tensor[(6, 1, 7), bool] */;
  %274 = reshape(%269, newshape=[8, 15, 4]) /* ty=Tensor[(8, 15, 4), float32] */;
  %275 = @func_4895(%270, %271, %272, %273, %274) /* ty=(Tensor[(8, 15, 4), float64], Tensor[(120, 4), float64], Tensor[(6, ?, 7), bool], Tensor[(8, 15, 4), float32]) */;
  %276 = cast(%var_11464, dtype="uint8") /* ty=Tensor[(728), uint8] */;
  %277 = cast(meta[relay.Constant][15] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
  %278 = cast(meta[relay.Constant][16] /* ty=Tensor[(24, 48), uint64] */, dtype="uint64") /* ty=Tensor[(24, 48), uint64] */;
  %279 = reshape(%276, newshape=[728]) /* ty=Tensor[(728), uint8] */;
  %280 = reshape(%277, newshape=[3, 30]) /* ty=Tensor[(3, 30), float64] */;
  %281 = reshape(%278, newshape=[1152]) /* ty=Tensor[(1152), uint64] */;
  %282 = @func_8609(%279, %280, %281) /* ty=(Tensor[(16, 5, 15), bool], Tensor[(15, 6), float64], Tensor[(728), uint8], Tensor[(3, 30), float64], Tensor[(1152), uint64], Tensor[(8, 15, 4), float64]) */;
  %283 = %275.2;
  %284 = %282.1;
  (%266, %283, %var_11460, %var_11461, %284, %var_11464, meta[relay.Constant][15] /* ty=Tensor[(90), float64] */, meta[relay.Constant][16] /* ty=Tensor[(24, 48), uint64] */)
}

def @func_3759() -> Tensor[(8, 15, 4), float32] {
  @func_3182() /* ty=Tensor[(8, 15, 4), float32] */
}

def @func_9688(%var_9683: int8, %var_9684: Tensor[(10, 1, 9), int8]) -> (Tensor[(10, 1, 9), int8],) {
  %285 = cast(%var_9683, dtype="int8") /* ty=int8 */;
  %286 = cast(%var_9684, dtype="int8") /* ty=Tensor[(10, 1, 9), int8] */;
  %287 = right_shift(%285, %286) /* ty=Tensor[(10, 1, 9), int8] */;
  (%287,)
}

def @func_3896() -> Tensor[(8, 15, 4), bool] {
  %288 = @func_3759() /* ty=Tensor[(8, 15, 4), float32] */;
  %289 = cast(meta[relay.Constant][17] /* ty=Tensor[(8, 15, 4), float32] */, dtype="bool") /* ty=Tensor[(8, 15, 4), bool] */;
  %290 = shape_of(%288, dtype="int32") /* ty=Tensor[(3), int32] */;
  %291 = cast(%288, dtype="bool") /* ty=Tensor[(8, 15, 4), bool] */;
  %292 = dyn.reshape(%289, %290, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%291, %292) /* ty=Tensor[(8, 15, 4), bool] */
}

def @func_10953(%var_10942: Tensor[(924), float64]) -> (Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float32], Tensor[(924), float64]) {
  %293 = @func_5151() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %294 = cast(%var_10942, dtype="float64") /* ty=Tensor[(924), float64] */;
  %295 = reshape(%294, newshape=[1, 924]) /* ty=Tensor[(1, 924), float64] */;
  %296 = @func_7125(%295) /* ty=(Tensor[(8, 15, 4), float64], Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float32], Tensor[(14, 11, 6), float32], Tensor[(1, 924), float64]) */;
  %297 = %293.0;
  %298 = %296.2;
  (%297, %298, %var_10942)
}

def @func_12364() -> Tensor[(12, 3, 14), float32] {
  @func_5082() /* ty=Tensor[(12, 3, 14), float32] */
}

def @func_5879(%var_5838: int64) -> Tensor[(9, 12, 11), int64] {
  %299 = cast(%var_5838, dtype="int64") /* ty=int64 */;
  %300 = cast(meta[relay.Constant][18] /* ty=Tensor[(9, 12, 11), int64] */, dtype="int64") /* ty=Tensor[(9, 12, 11), int64] */;
  add(%299, %300) /* ty=Tensor[(9, 12, 11), int64] */
}

def @func_7596() -> (Tensor[(12, 16, 6), float64], Tensor[(14, 14, 10), float64]) {
  %301 = @func_4743() /* ty=(Tensor[(12, 16, 6), float64],) */;
  %302 = @func_6786() /* ty=(Tensor[(14, 14, 10), float64],) */;
  %303 = %302.0;
  %304 = cast(%303, dtype="float32") /* ty=Tensor[(14, 14, 10), float32] */;
  %305 = sqrt(%304) /* ty=Tensor[(14, 14, 10), float32] */;
  %306 = cast(%305, dtype="float64") /* ty=Tensor[(14, 14, 10), float64] */;
  %307 = %301.0;
  %308 = atanh(%306) /* ty=Tensor[(14, 14, 10), float64] */;
  (%307, %308)
}

def @func_6171() -> Tensor[(16, 5, 15), bool] {
  @func_5496() /* ty=Tensor[(16, 5, 15), bool] */
}

def @func_2152(%var_2124: Tensor[(12, 16, 6), uint64], %var_2125: Tensor[(12, 16, 6), uint64]) -> Tensor[(12, 16, 6), uint64] {
  %309 = cast(%var_2125, dtype="uint64") /* ty=Tensor[(12, 16, 6), uint64] */;
  %310 = shape_of(%var_2124, dtype="int32") /* ty=Tensor[(3), int32] */;
  %311 = cast(%var_2124, dtype="uint64") /* ty=Tensor[(12, 16, 6), uint64] */;
  %312 = dyn.reshape(%309, %310, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  right_shift(%311, %312) /* ty=Tensor[(12, 16, 6), uint64] */
}

def @func_11861() -> (Tensor[(8, 15, 4), float64], Tensor[(16, 5, 15), bool], Tensor[(1200, 1), bool]) {
  %313 = @func_5418() /* ty=(Tensor[(16, 5, 15), bool], Tensor[(8, 15, 4), float64]) */;
  %314 = %313.0;
  %315 = cast(%314, dtype="bool") /* ty=Tensor[(16, 5, 15), bool] */;
  %316 = reshape(%315, newshape=[1200, 1]) /* ty=Tensor[(1200, 1), bool] */;
  %317 = @func_7369(%316) /* ty=(Tensor[(14, 14, 10), float64], Tensor[(8, 15, 4), float32], Tensor[(16, 5, 15), float32], Tensor[(1200, 1), bool], Tensor[(13, 4, 14), uint8], Tensor[(728), uint8]) */;
  %318 = @func_5625() /* ty=Tensor[(8, 15, 4), float64] */;
  %319 = %317.3;
  (%318, %314, %319)
}

def @func_9726() -> (Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float64]) {
  %320 = @func_5012() /* ty=(Tensor[(16, 5, 15), bool], Tensor[(12, 16, 6), uint64], Tensor[(1152), uint64], Tensor[(8, 15, 4), float64]) */;
  %321 = @func_6309() /* ty=Tensor[(8, 15, 4), float32] */;
  %322 = %320.3;
  (%321, %322)
}

def @func_9374() -> (Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float64], Tensor[(8, 15, 4), float32]) {
  %323 = @func_7858() /* ty=(Tensor[(8, 15, 4), float64], Tensor[(8, 15, 4), int64]) */;
  %324 = @func_5151() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %325 = @func_5768() /* ty=Tensor[(8, 15, 4), float32] */;
  %326 = %323.0;
  %327 = %324.0;
  (%325, %326, %327)
}

def @func_5738(%var_5645: Tensor[(728), uint8], %var_5712: Tensor[(90), float64], %var_5713: Tensor[(1152), uint64]) -> (Tensor[(8, 15, 4), float64], Tensor[(14, 9, 12), float64], Tensor[(728), uint8], Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), bool], Tensor[(15, 6), float64], Tensor[(90), float64], Tensor[(1152), uint64], Tensor[(8, 15, 4), float32], Tensor[(12, 16, 6), float64]) {
  %328 = @func_5012() /* ty=(Tensor[(16, 5, 15), bool], Tensor[(12, 16, 6), uint64], Tensor[(1152), uint64], Tensor[(8, 15, 4), float64]) */;
  %329 = cast(%var_5645, dtype="uint8") /* ty=Tensor[(728), uint8] */;
  %330 = cast(%var_5645, dtype="uint8") /* ty=Tensor[(728), uint8] */;
  %331 = reshape(%329, newshape=[13, 4, 14]) /* ty=Tensor[(13, 4, 14), uint8] */;
  %332 = reshape(%330, newshape=[13, 4, 14]) /* ty=Tensor[(13, 4, 14), uint8] */;
  %333 = @func_546(%331, %332) /* ty=(Tensor[(13, 4, 14), uint8], Tensor[(14, 9, 12), float64], Tensor[(1512), float64], Tensor[(14, 9, 12), float64], Tensor[(14, 9, 12), float64], Tensor[(14, 9, 12), float64]) */;
  %334 = cast(%var_5712, dtype="float64") /* ty=Tensor[(90), float64] */;
  %335 = cast(%var_5713, dtype="uint64") /* ty=Tensor[(1152), uint64] */;
  %336 = reshape(%334, newshape=[15, 6]) /* ty=Tensor[(15, 6), float64] */;
  %337 = reshape(%335, newshape=[1152]) /* ty=Tensor[(1152), uint64] */;
  %338 = @func_3950(%336, %337) /* ty=(Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), bool], Tensor[(16, 5, 15), bool], Tensor[(1512), float64], Tensor[(15, 6), float64], Tensor[(990), float64], Tensor[(126, 12), float64], Tensor[(168, 2), bool], Tensor[(672), bool], Tensor[(1152), uint64]) */;
  %339 = @func_5042() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %340 = @func_4743() /* ty=(Tensor[(12, 16, 6), float64],) */;
  %341 = %328.3;
  %342 = %333.5;
  %343 = @func_5315() /* ty=Tensor[(8, 15, 4), float32] */;
  %344 = @func_3896() /* ty=Tensor[(8, 15, 4), bool] */;
  %345 = %338.4;
  %346 = %339.0;
  %347 = %340.0;
  (%341, %342, %var_5645, %343, %344, %345, %var_5712, %var_5713, %346, %347)
}

def @func_12539() -> Tensor[(8, 15, 4), float32] {
  %348 = @func_5927() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %348.0
}

def @func_8122() -> Tensor[(16, 5, 15), bool] {
  @func_7279() /* ty=Tensor[(16, 5, 15), bool] */
}

def @func_9920() -> (Tensor[(8, 15, 4), float64], Tensor[(16, 5, 15), float64], int16, Tensor[(11, 12, 7), float64], Tensor[(11, 12, 7), int16], Tensor[(14, 14, 10), float32]) {
  %349 = @func_8655() /* ty=(Tensor[(16, 5, 15), bool],) */;
  %350 = %349.0;
  %351 = cast(%350, dtype="float64") /* ty=Tensor[(16, 5, 15), float64] */;
  %352 = cast(meta[relay.Constant][19] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %353 = cast(meta[relay.Constant][20] /* ty=Tensor[(924), int16] */, dtype="int16") /* ty=Tensor[(924), int16] */;
  %354 = reshape(%352, newshape=[]) /* ty=int16 */;
  %355 = reshape(%353, newshape=[11, 12, 7]) /* ty=Tensor[(11, 12, 7), int16] */;
  %356 = @func_4696(%354, %355) /* ty=Tensor[(11, 12, 7), int16] */;
  %357 = cast(meta[relay.Constant][20] /* ty=Tensor[(924), int16] */, dtype="bool") /* ty=Tensor[(924), bool] */;
  %358 = shape_of(%356, dtype="int32") /* ty=Tensor[(3), int32] */;
  %359 = cast(%356, dtype="bool") /* ty=Tensor[(11, 12, 7), bool] */;
  %360 = dyn.reshape(%357, %358, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %361 = equal(%359, %360) /* ty=Tensor[(11, 12, 7), bool] */;
  %362 = cast(%361, dtype="float64") /* ty=Tensor[(11, 12, 7), float64] */;
  %363 = cast(meta[relay.Constant][19] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %364 = cast(%356, dtype="int16") /* ty=Tensor[(11, 12, 7), int16] */;
  %365 = reshape(%363, newshape=[]) /* ty=int16 */;
  %366 = reshape(%364, newshape=[11, 12, 7]) /* ty=Tensor[(11, 12, 7), int16] */;
  %367 = @func_9615() /* ty=(Tensor[(16, 5, 15), bool], Tensor[(14, 14, 10), float32]) */;
  %368 = @func_5583() /* ty=Tensor[(8, 15, 4), float64] */;
  %369 = tan(%351) /* ty=Tensor[(16, 5, 15), float64] */;
  %370 = sqrt(%362) /* ty=Tensor[(11, 12, 7), float64] */;
  %371 = @func_4696(%365, %366) /* ty=Tensor[(11, 12, 7), int16] */;
  %372 = %367.1;
  (%368, %369, meta[relay.Constant][19] /* ty=int16 */, %370, %371, %372)
}

def @func_5560(%var_5543: Tensor[(8, 15, 4), float64]) -> (Tensor[(672), bool], Tensor[(90), float64], Tensor[(1152), uint64], Tensor[(8, 15, 4), int64]) {
  %373 = cast(meta[relay.Constant][21] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
  %374 = cast(meta[relay.Constant][22] /* ty=Tensor[(1152), uint64] */, dtype="uint64") /* ty=Tensor[(1152), uint64] */;
  %375 = reshape(%373, newshape=[15, 6]) /* ty=Tensor[(15, 6), float64] */;
  %376 = reshape(%374, newshape=[1152]) /* ty=Tensor[(1152), uint64] */;
  %377 = @func_3950(%375, %376) /* ty=(Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), bool], Tensor[(16, 5, 15), bool], Tensor[(1512), float64], Tensor[(15, 6), float64], Tensor[(990), float64], Tensor[(126, 12), float64], Tensor[(168, 2), bool], Tensor[(672), bool], Tensor[(1152), uint64]) */;
  %378 = @func_3536() /* ty=Tensor[(8, 15, 4), float64] */;
  %379 = cast(%var_5543, dtype="int64") /* ty=Tensor[(8, 15, 4), int64] */;
  %380 = shape_of(%378, dtype="int32") /* ty=Tensor[(3), int32] */;
  %381 = cast(%378, dtype="int64") /* ty=Tensor[(8, 15, 4), int64] */;
  %382 = dyn.reshape(%379, %380, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %383 = %377.8;
  %384 = logical_xor(%381, %382) /* ty=Tensor[(8, 15, 4), int64] */;
  (%383, meta[relay.Constant][21] /* ty=Tensor[(90), float64] */, meta[relay.Constant][22] /* ty=Tensor[(1152), uint64] */, %384)
}

def @func_6895(%var_6884: Tensor[(924), float64]) -> (Tensor[(12, 3, 14), int64], Tensor[(14, 11, 6), float32], Tensor[(924), float64]) {
  %385 = @func_3314() /* ty=(Tensor[(16, 5, 15), bool], Tensor[(12, 3, 14), int64], Tensor[(504, 1), float64]) */;
  %386 = cast(%var_6884, dtype="float64") /* ty=Tensor[(924), float64] */;
  %387 = cast(%var_6884, dtype="float64") /* ty=Tensor[(924), float64] */;
  %388 = reshape(%386, newshape=[14, 11, 6]) /* ty=Tensor[(14, 11, 6), float64] */;
  %389 = reshape(%387, newshape=[14, 11, 6]) /* ty=Tensor[(14, 11, 6), float64] */;
  %390 = @func_758(%388, %389) /* ty=(Tensor[(14, 11, 6), float32],) */;
  %391 = %385.1;
  %392 = %390.0;
  (%391, %392, %var_6884)
}

def @func_1280(%var_1244: Tensor[(9, 10, 4), float64], %var_1254: Tensor[(154, 6), float64]) -> (Tensor[(9, 10, 4), float64], Tensor[(154, 6), bool]) {
  %393 = cast(%var_1244, dtype="float64") /* ty=Tensor[(9, 10, 4), float64] */;
  %394 = shape_of(meta[relay.Constant][23] /* ty=Tensor[(9, 10, 4), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %395 = cast(meta[relay.Constant][23] /* ty=Tensor[(9, 10, 4), float64] */, dtype="float64") /* ty=Tensor[(9, 10, 4), float64] */;
  %396 = dyn.reshape(%393, %394, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %397 = cast(%var_1254, dtype="float64") /* ty=Tensor[(154, 6), float64] */;
  %398 = atan(%397) /* ty=Tensor[(154, 6), float64] */;
  %399 = cast(%var_1254, dtype="float64") /* ty=Tensor[(154, 6), float64] */;
  %400 = cast(%var_1254, dtype="float64") /* ty=Tensor[(154, 6), float64] */;
  %401 = reshape(%399, newshape=[14, 11, 6]) /* ty=Tensor[(14, 11, 6), float64] */;
  %402 = reshape(%400, newshape=[14, 11, 6]) /* ty=Tensor[(14, 11, 6), float64] */;
  %403 = @func_758(%401, %402) /* ty=(Tensor[(14, 11, 6), float32],) */;
  %404 = %403.0;
  %405 = cast(%404, dtype="bool") /* ty=Tensor[(14, 11, 6), bool] */;
  %406 = shape_of(%398, dtype="int32") /* ty=Tensor[(2), int32] */;
  %407 = cast(%398, dtype="bool") /* ty=Tensor[(154, 6), bool] */;
  %408 = dyn.reshape(%405, %406, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %409 = floor_mod(%395, %396) /* ty=Tensor[(9, 10, 4), float64] */;
  %410 = less_equal(%407, %408) /* ty=Tensor[(154, 6), bool] */;
  (%409, %410)
}

def @func_8351() -> (Tensor[(8, 15, 4), float64], Tensor[(8, 15, 4), float32]) {
  %411 = @func_3274() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %412 = @func_5583() /* ty=Tensor[(8, 15, 4), float64] */;
  %413 = %411.0;
  (%412, %413)
}

def @func_5496() -> Tensor[(16, 5, 15), bool] {
  @func_4197() /* ty=Tensor[(16, 5, 15), bool] */
}

def @func_10431(%var_10405: Tensor[(924), float64]) -> (Tensor[(14, 14, 10), bool], Tensor[(16, 5, 15), bool], Tensor[(924), float64], Tensor[(14, 14, 10), int8]) {
  %414 = @func_7596() /* ty=(Tensor[(12, 16, 6), float64], Tensor[(14, 14, 10), float64]) */;
  %415 = %414.1;
  %416 = cast(meta[relay.Constant][24] /* ty=Tensor[(14, 14, 10), float64] */, dtype="bool") /* ty=Tensor[(14, 14, 10), bool] */;
  %417 = shape_of(%415, dtype="int32") /* ty=Tensor[(3), int32] */;
  %418 = cast(%415, dtype="bool") /* ty=Tensor[(14, 14, 10), bool] */;
  %419 = dyn.reshape(%416, %417, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %420 = cast(%var_10405, dtype="float64") /* ty=Tensor[(924), float64] */;
  %421 = reshape(%420, newshape=[462, 2]) /* ty=Tensor[(462, 2), float64] */;
  %422 = @func_8784(%421) /* ty=(Tensor[(16, 5, 15), bool], Tensor[(8, 15, 4), float64], Tensor[(462, 2), float64]) */;
  %423 = cast(meta[relay.Constant][25] /* ty=Tensor[(14, 14, 10), float64] */, dtype="int8") /* ty=Tensor[(14, 14, 10), int8] */;
  %424 = shape_of(%415, dtype="int32") /* ty=Tensor[(3), int32] */;
  %425 = cast(%415, dtype="int8") /* ty=Tensor[(14, 14, 10), int8] */;
  %426 = dyn.reshape(%423, %424, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %427 = greater_equal(%418, %419) /* ty=Tensor[(14, 14, 10), bool] */;
  %428 = %422.0;
  %429 = left_shift(%425, %426) /* ty=Tensor[(14, 14, 10), int8] */;
  (%427, %428, %var_10405, %429)
}

def @func_5289(%var_5272: Tensor[(1512), float64]) -> (Tensor[(1152), uint64], Tensor[(15, 6), float64], Tensor[(90), float64], Tensor[(8, 15, 4), float32], Tensor[(672), bool], Tensor[(1512), float64], Tensor[(8, 42), bool], Tensor[(672), bool]) {
  %430 = @func_4068() /* ty=(Tensor[(8, 15, 4), float64], Tensor[(12, 16, 6), uint64], Tensor[(1152), uint64]) */;
  %431 = cast(meta[relay.Constant][26] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
  %432 = %430.2;
  %433 = cast(%432, dtype="uint64") /* ty=Tensor[(1152), uint64] */;
  %434 = reshape(%431, newshape=[15, 6]) /* ty=Tensor[(15, 6), float64] */;
  %435 = reshape(%433, newshape=[1152]) /* ty=Tensor[(1152), uint64] */;
  %436 = @func_3950(%434, %435) /* ty=(Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), bool], Tensor[(16, 5, 15), bool], Tensor[(1512), float64], Tensor[(15, 6), float64], Tensor[(990), float64], Tensor[(126, 12), float64], Tensor[(168, 2), bool], Tensor[(672), bool], Tensor[(1152), uint64]) */;
  %437 = @func_4417() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %438 = cast(%var_5272, dtype="float64") /* ty=Tensor[(1512), float64] */;
  %439 = cast(meta[relay.Constant][27] /* ty=Tensor[(8, 42), bool] */, dtype="bool") /* ty=Tensor[(8, 42), bool] */;
  %440 = cast(meta[relay.Constant][28] /* ty=Tensor[(672), bool] */, dtype="bool") /* ty=Tensor[(672), bool] */;
  %441 = reshape(%438, newshape=[14, 9, 12]) /* ty=Tensor[(14, 9, 12), float64] */;
  %442 = reshape(%439, newshape=[336]) /* ty=Tensor[(336), bool] */;
  %443 = reshape(%440, newshape=[672]) /* ty=Tensor[(672), bool] */;
  %444 = @func_3391(%441, %442, %443) /* ty=(Tensor[(728), uint8], Tensor[(14, 9, 12), int16], Tensor[(8, 15, 4), float64], Tensor[(14, 12, 2), bool], Tensor[(336), bool], int32, Tensor[(672), bool]) */;
  %445 = %436.4;
  %446 = %437.0;
  %447 = %444.6;
  (%432, %445, meta[relay.Constant][26] /* ty=Tensor[(90), float64] */, %446, %447, %var_5272, meta[relay.Constant][27] /* ty=Tensor[(8, 42), bool] */, meta[relay.Constant][28] /* ty=Tensor[(672), bool] */)
}

def @func_6010(%var_6003: Tensor[(924), float64]) -> (Tensor[(16, 5, 15), bool], Tensor[(154, 6), bool], Tensor[(1, 360), float64], Tensor[(924), float64]) {
  %448 = cast(meta[relay.Constant][29] /* ty=Tensor[(1, 360), float64] */, dtype="float64") /* ty=Tensor[(1, 360), float64] */;
  %449 = cast(%var_6003, dtype="float64") /* ty=Tensor[(924), float64] */;
  %450 = reshape(%448, newshape=[9, 10, 4]) /* ty=Tensor[(9, 10, 4), float64] */;
  %451 = reshape(%449, newshape=[154, 6]) /* ty=Tensor[(154, 6), float64] */;
  %452 = @func_1280(%450, %451) /* ty=(Tensor[(9, 10, 4), float64], Tensor[(154, 6), bool]) */;
  %453 = @func_4197() /* ty=Tensor[(16, 5, 15), bool] */;
  %454 = %452.1;
  (%453, %454, meta[relay.Constant][29] /* ty=Tensor[(1, 360), float64] */, %var_6003)
}

def @func_8964(%var_8886: Tensor[(45, 2), float64], %var_8887: Tensor[(1152), uint64], %var_8892: Tensor[(198), float32], %var_8923: Tensor[(2, 336), bool], %var_8926: Tensor[(13, 4, 14), uint8], %var_8934: Tensor[(256), float32], %var_8935: int32, %var_8951: Tensor[(360), float64], %var_8960: Tensor[(2, 168), bool]) -> (Tensor[(14, 14, 10), float64], Tensor[(728), uint8], Tensor[(16, 5, 15), bool], Tensor[(13, 4, 14), uint8], Tensor[(14, 9, 12), float64], Tensor[(45, 2), float64], Tensor[(1152), uint64], Tensor[(9, 11, 2), float32], Tensor[(198), float32], Tensor[(90), float64], Tensor[(2, 336), bool], Tensor[(13, 4, 14), float32], Tensor[(8, 8, 4), uint8], Tensor[(256), float32], int32, Tensor[(9, 10, 4), float64], Tensor[(360), float64], Tensor[(7, 132), float64], Tensor[(672), bool], Tensor[(2, 168), bool]) {
  %455 = @func_6786() /* ty=(Tensor[(14, 14, 10), float64],) */;
  %456 = cast(meta[relay.Constant][30] /* ty=Tensor[(728), uint8] */, dtype="uint8") /* ty=Tensor[(728), uint8] */;
  %457 = cast(meta[relay.Constant][30] /* ty=Tensor[(728), uint8] */, dtype="uint8") /* ty=Tensor[(728), uint8] */;
  %458 = reshape(%456, newshape=[13, 4, 14]) /* ty=Tensor[(13, 4, 14), uint8] */;
  %459 = reshape(%457, newshape=[13, 4, 14]) /* ty=Tensor[(13, 4, 14), uint8] */;
  %460 = @func_546(%458, %459) /* ty=(Tensor[(13, 4, 14), uint8], Tensor[(14, 9, 12), float64], Tensor[(1512), float64], Tensor[(14, 9, 12), float64], Tensor[(14, 9, 12), float64], Tensor[(14, 9, 12), float64]) */;
  %461 = cast(meta[relay.Constant][30] /* ty=Tensor[(728), uint8] */, dtype="uint8") /* ty=Tensor[(728), uint8] */;
  %462 = cast(meta[relay.Constant][30] /* ty=Tensor[(728), uint8] */, dtype="uint8") /* ty=Tensor[(728), uint8] */;
  %463 = reshape(%461, newshape=[13, 4, 14]) /* ty=Tensor[(13, 4, 14), uint8] */;
  %464 = reshape(%462, newshape=[13, 4, 14]) /* ty=Tensor[(13, 4, 14), uint8] */;
  %465 = @func_7141(%463, %464) /* ty=(Tensor[(13, 4, 14), uint8],) */;
  %466 = %465.0;
  %467 = cast(%466, dtype="uint8") /* ty=Tensor[(13, 4, 14), uint8] */;
  %468 = cast(%var_8886, dtype="float64") /* ty=Tensor[(45, 2), float64] */;
  %469 = cast(%var_8887, dtype="uint64") /* ty=Tensor[(1152), uint64] */;
  %470 = reshape(%467, newshape=[728]) /* ty=Tensor[(728), uint8] */;
  %471 = reshape(%468, newshape=[90]) /* ty=Tensor[(90), float64] */;
  %472 = reshape(%469, newshape=[1152]) /* ty=Tensor[(1152), uint64] */;
  %473 = @func_5738(%470, %471, %472) /* ty=(Tensor[(8, 15, 4), float64], Tensor[(14, 9, 12), float64], Tensor[(728), uint8], Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), bool], Tensor[(15, 6), float64], Tensor[(90), float64], Tensor[(1152), uint64], Tensor[(8, 15, 4), float32], Tensor[(12, 16, 6), float64]) */;
  %474 = cast(%var_8892, dtype="float32") /* ty=Tensor[(198), float32] */;
  %475 = cast(%var_8892, dtype="float32") /* ty=Tensor[(198), float32] */;
  %476 = reshape(%474, newshape=[9, 11, 2]) /* ty=Tensor[(9, 11, 2), float32] */;
  %477 = reshape(%475, newshape=[9, 11, 2]) /* ty=Tensor[(9, 11, 2), float32] */;
  %478 = cast(%var_8886, dtype="float64") /* ty=Tensor[(45, 2), float64] */;
  %479 = %473.1;
  %480 = cast(%479, dtype="float64") /* ty=Tensor[(14, 9, 12), float64] */;
  %481 = cast(%var_8923, dtype="bool") /* ty=Tensor[(2, 336), bool] */;
  %482 = reshape(%478, newshape=[90]) /* ty=Tensor[(90), float64] */;
  %483 = reshape(%480, newshape=[1512]) /* ty=Tensor[(1512), float64] */;
  %484 = reshape(%481, newshape=[168, 4]) /* ty=Tensor[(168, 4), bool] */;
  %485 = @func_7696(%482, %483, %484) /* ty=(Tensor[(8, 15, 4), float64], Tensor[(16, 5, 15), bool], Tensor[(13, 4, 14), uint8], Tensor[(182, 4), uint8], Tensor[(1512), float64], Tensor[(90), float64], Tensor[(990), float64], Tensor[(1512), float64], Tensor[(336), bool], Tensor[(168, 4), bool], Tensor[(1152), uint64]) */;
  %486 = cast(%var_8926, dtype="float32") /* ty=Tensor[(13, 4, 14), float32] */;
  %487 = shape_of(%466, dtype="int32") /* ty=Tensor[(3), int32] */;
  %488 = cast(%466, dtype="float32") /* ty=Tensor[(13, 4, 14), float32] */;
  %489 = dyn.reshape(%486, %487, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %490 = cast(%var_8934, dtype="float32") /* ty=Tensor[(256), float32] */;
  %491 = cast(%var_8934, dtype="float32") /* ty=Tensor[(256), float32] */;
  %492 = cast(%var_8935, dtype="int32") /* ty=int32 */;
  %493 = reshape(%490, newshape=[8, 8, 4]) /* ty=Tensor[(8, 8, 4), float32] */;
  %494 = reshape(%491, newshape=[8, 8, 4]) /* ty=Tensor[(8, 8, 4), float32] */;
  %495 = reshape(%492, newshape=[]) /* ty=int32 */;
  %496 = @func_3036(%493, %494, %495) /* ty=(Tensor[(8, 8, 4), float32], Tensor[(14, 12, 2), bool], int32, Tensor[(168, 2), int32], Tensor[(8, 8, 4), uint8]) */;
  %497 = cast(%var_8951, dtype="float64") /* ty=Tensor[(360), float64] */;
  %498 = cast(meta[relay.Constant][31] /* ty=Tensor[(7, 132), float64] */, dtype="float64") /* ty=Tensor[(7, 132), float64] */;
  %499 = reshape(%497, newshape=[9, 10, 4]) /* ty=Tensor[(9, 10, 4), float64] */;
  %500 = reshape(%498, newshape=[154, 6]) /* ty=Tensor[(154, 6), float64] */;
  %501 = @func_1280(%499, %500) /* ty=(Tensor[(9, 10, 4), float64], Tensor[(154, 6), bool]) */;
  %502 = cast(%479, dtype="float64") /* ty=Tensor[(14, 9, 12), float64] */;
  %503 = cast(%var_8960, dtype="bool") /* ty=Tensor[(2, 168), bool] */;
  %504 = cast(%var_8887, dtype="uint64") /* ty=Tensor[(1152), uint64] */;
  %505 = cast(%var_8935, dtype="int32") /* ty=int32 */;
  %506 = reshape(%502, newshape=[1512]) /* ty=Tensor[(1512), float64] */;
  %507 = reshape(%503, newshape=[336]) /* ty=Tensor[(336), bool] */;
  %508 = reshape(%504, newshape=[1152]) /* ty=Tensor[(1152), uint64] */;
  %509 = reshape(%505, newshape=[]) /* ty=int32 */;
  %510 = @func_5389(%506, %507, %508, %509) /* ty=(Tensor[(8, 15, 4), float32], Tensor[(12, 3, 14), float32], Tensor[(672), bool], Tensor[(1512), float64], Tensor[(336), bool], Tensor[(168, 4), bool], Tensor[(1152), uint64], Tensor[(990, 90), bool], Tensor[(14, 12, 2), bool], int32) */;
  %511 = %455.0;
  %512 = @func_5496() /* ty=Tensor[(16, 5, 15), bool] */;
  %513 = %460.0;
  %514 = @func_7039(%476, %477) /* ty=Tensor[(9, 11, 2), float32] */;
  %515 = %485.5;
  %516 = mod(%488, %489) /* ty=Tensor[(13, 4, 14), float32] */;
  %517 = %496.4;
  %518 = %501.0;
  %519 = %510.2;
  (%511, meta[relay.Constant][30] /* ty=Tensor[(728), uint8] */, %512, %513, %479, %var_8886, %var_8887, %514, %var_8892, %515, %var_8923, %516, %517, %var_8934, %var_8935, %518, %var_8951, meta[relay.Constant][31] /* ty=Tensor[(7, 132), float64] */, %519, %var_8960)
}

def @func_11258() -> (Tensor[(8, 15, 4), float64],) {
  %520 = @func_5418() /* ty=(Tensor[(16, 5, 15), bool], Tensor[(8, 15, 4), float64]) */;
  %521 = %520.1;
  (%521,)
}

def @func_8565() -> Tensor[(8, 15, 4), float32] {
  @func_8535() /* ty=Tensor[(8, 15, 4), float32] */
}

def @func_12462() -> (Tensor[(8, 15, 4), float32], Tensor[(14, 14, 10), float32]) {
  %522 = @func_10722() /* ty=(Tensor[(8, 15, 4), float32], Tensor[(13, 16, 7), float32], Tensor[(1456), float64]) */;
  %523 = @func_10633() /* ty=(Tensor[(14, 14, 10), float32],) */;
  %524 = %522.0;
  %525 = %523.0;
  (%524, %525)
}

def @func_7125(%var_7123: Tensor[(1, 924), float64]) -> (Tensor[(8, 15, 4), float64], Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float32], Tensor[(14, 11, 6), float32], Tensor[(1, 924), float64]) {
  %526 = @func_3130() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %527 = @func_5583() /* ty=Tensor[(8, 15, 4), float64] */;
  %528 = cast(%527, dtype="float32") /* ty=Tensor[(8, 15, 4), float32] */;
  %529 = cast(%var_7123, dtype="float64") /* ty=Tensor[(1, 924), float64] */;
  %530 = reshape(%529, newshape=[924]) /* ty=Tensor[(924), float64] */;
  %531 = @func_3573(%530) /* ty=(Tensor[(8, 15, 4), float64], Tensor[(14, 11, 6), float32], Tensor[(924), float64]) */;
  %532 = @func_5625() /* ty=Tensor[(8, 15, 4), float64] */;
  %533 = %526.0;
  %534 = log10(%528) /* ty=Tensor[(8, 15, 4), float32] */;
  %535 = %531.1;
  (%532, %533, %534, %535, %var_7123)
}

def @func_12520() -> (Tensor[(16, 5, 15), bool],) {
  %536 = @func_9615() /* ty=(Tensor[(16, 5, 15), bool], Tensor[(14, 14, 10), float32]) */;
  %537 = %536.0;
  (%537,)
}

def @func_424(%var_389: Tensor[(14, 9, 12), float64]) -> (Tensor[(14, 9, 12), float64],) {
  %538 = cast(%var_389, dtype="float64") /* ty=Tensor[(14, 9, 12), float64] */;
  %539 = sin(%538) /* ty=Tensor[(14, 9, 12), float64] */;
  (%539,)
}

def @func_11114() -> (Tensor[(8, 15, 4), float64],) {
  %540 = @func_3536() /* ty=Tensor[(8, 15, 4), float64] */;
  (%540,)
}

def @func_6786() -> (Tensor[(14, 14, 10), float64],) {
  %541 = @func_6717() /* ty=Tensor[(14, 14, 10), uint16] */;
  %542 = cast(%541, dtype="float64") /* ty=Tensor[(14, 14, 10), float64] */;
  %543 = atan(%542) /* ty=Tensor[(14, 14, 10), float64] */;
  (%543,)
}

def @func_2745(%var_2730: Tensor[(12, 3, 14), float64], %var_2731: Tensor[(12, 3, 14), float64], %var_2737: Tensor[(12, 3, 14), float64]) -> (Tensor[(12, 3, 14), bool], Tensor[(12, 3, 14), int64]) {
  %544 = cast(%var_2731, dtype="bool") /* ty=Tensor[(12, 3, 14), bool] */;
  %545 = shape_of(%var_2730, dtype="int32") /* ty=Tensor[(3), int32] */;
  %546 = cast(%var_2730, dtype="bool") /* ty=Tensor[(12, 3, 14), bool] */;
  %547 = dyn.reshape(%544, %545, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %548 = cast(%var_2737, dtype="int64") /* ty=Tensor[(12, 3, 14), int64] */;
  %549 = shape_of(%var_2730, dtype="int32") /* ty=Tensor[(3), int32] */;
  %550 = cast(%var_2730, dtype="int64") /* ty=Tensor[(12, 3, 14), int64] */;
  %551 = dyn.reshape(%548, %549, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %552 = less_equal(%546, %547) /* ty=Tensor[(12, 3, 14), bool] */;
  %553 = subtract(%550, %551) /* ty=Tensor[(12, 3, 14), int64] */;
  (%552, %553)
}

def @func_8222() -> (Tensor[(8, 15, 4), float32],) {
  %554 = @func_7430() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %555 = %554.0;
  (%555,)
}

def @func_4504() -> (Tensor[(16, 5, 15), bool],) {
  %556 = @func_4197() /* ty=Tensor[(16, 5, 15), bool] */;
  (%556,)
}

def @main() -> (Tensor[(11, 15, 15), float64],) {
  %557 = cast(meta[relay.Constant][32] /* ty=Tensor[(11, 15, 15), float64] */, dtype="float64") /* ty=Tensor[(11, 15, 15), float64] */;
  %558 = cosh(%557) /* ty=Tensor[(11, 15, 15), float64] */;
  (%558,)
}

def @func_4817(%var_4813: Tensor[(90), float64]) -> (Tensor[(8, 15, 4), float32], Tensor[(12, 16, 6), uint64], Tensor[(4, 288), uint64], Tensor[(15, 6), float64], Tensor[(90), float64], Tensor[(8, 15, 4), float64]) {
  %559 = @func_4634() /* ty=(Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float32]) */;
  %560 = cast(meta[relay.Constant][33] /* ty=Tensor[(4, 288), uint64] */, dtype="uint64") /* ty=Tensor[(4, 288), uint64] */;
  %561 = cast(meta[relay.Constant][33] /* ty=Tensor[(4, 288), uint64] */, dtype="uint64") /* ty=Tensor[(4, 288), uint64] */;
  %562 = reshape(%560, newshape=[12, 16, 6]) /* ty=Tensor[(12, 16, 6), uint64] */;
  %563 = reshape(%561, newshape=[12, 16, 6]) /* ty=Tensor[(12, 16, 6), uint64] */;
  %564 = cast(%var_4813, dtype="float64") /* ty=Tensor[(90), float64] */;
  %565 = cast(meta[relay.Constant][33] /* ty=Tensor[(4, 288), uint64] */, dtype="uint64") /* ty=Tensor[(4, 288), uint64] */;
  %566 = reshape(%564, newshape=[15, 6]) /* ty=Tensor[(15, 6), float64] */;
  %567 = reshape(%565, newshape=[1152]) /* ty=Tensor[(1152), uint64] */;
  %568 = @func_3950(%566, %567) /* ty=(Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), bool], Tensor[(16, 5, 15), bool], Tensor[(1512), float64], Tensor[(15, 6), float64], Tensor[(990), float64], Tensor[(126, 12), float64], Tensor[(168, 2), bool], Tensor[(672), bool], Tensor[(1152), uint64]) */;
  %569 = %559.0;
  %570 = @func_2152(%562, %563) /* ty=Tensor[(12, 16, 6), uint64] */;
  %571 = %568.4;
  %572 = @func_3536() /* ty=Tensor[(8, 15, 4), float64] */;
  (%569, %570, meta[relay.Constant][33] /* ty=Tensor[(4, 288), uint64] */, %571, %var_4813, %572)
}

def @func_5768() -> Tensor[(8, 15, 4), float32] {
  @func_3759() /* ty=Tensor[(8, 15, 4), float32] */
}

def @func_5389(%var_5367: Tensor[(1512), float64], %var_5368: Tensor[(336), bool], %var_5370: Tensor[(1152), uint64], %var_5387: int32) -> (Tensor[(8, 15, 4), float32], Tensor[(12, 3, 14), float32], Tensor[(672), bool], Tensor[(1512), float64], Tensor[(336), bool], Tensor[(168, 4), bool], Tensor[(1152), uint64], Tensor[(990, 90), bool], Tensor[(14, 12, 2), bool], int32) {
  %573 = cast(meta[relay.Constant][34] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
  %574 = cast(meta[relay.Constant][35] /* ty=Tensor[(990, 1), float64] */, dtype="float64") /* ty=Tensor[(990, 1), float64] */;
  %575 = cast(%var_5367, dtype="float64") /* ty=Tensor[(1512), float64] */;
  %576 = cast(%var_5368, dtype="bool") /* ty=Tensor[(336), bool] */;
  %577 = cast(meta[relay.Constant][36] /* ty=Tensor[(168, 4), bool] */, dtype="bool") /* ty=Tensor[(168, 4), bool] */;
  %578 = cast(%var_5370, dtype="uint64") /* ty=Tensor[(1152), uint64] */;
  %579 = reshape(%573, newshape=[1, 10, 9]) /* ty=Tensor[(1, 10, 9), float64] */;
  %580 = reshape(%574, newshape=[11, 10, 9]) /* ty=Tensor[(11, 10, 9), float64] */;
  %581 = reshape(%575, newshape=[1512]) /* ty=Tensor[(1512), float64] */;
  %582 = reshape(%576, newshape=[4, 84]) /* ty=Tensor[(4, 84), bool] */;
  %583 = reshape(%577, newshape=[672]) /* ty=Tensor[(672), bool] */;
  %584 = reshape(%578, newshape=[1152]) /* ty=Tensor[(1152), uint64] */;
  %585 = @func_3727(%579, %580, %581, %582, %583, %584) /* ty=(Tensor[(?, 10, 9), bool], Tensor[(672), bool], Tensor[(1512), float64], Tensor[(4, 84), bool], Tensor[(672), bool], Tensor[(336), bool], Tensor[(11, 10, 9), float32], Tensor[(12, 16, 6), uint64], Tensor[(1152), uint64]) */;
  %586 = cast(meta[relay.Constant][34] /* ty=Tensor[(90), float64] */, dtype="bool") /* ty=Tensor[(90), bool] */;
  %587 = cast(meta[relay.Constant][35] /* ty=Tensor[(990, 1), float64] */, dtype="bool") /* ty=Tensor[(990, 1), bool] */;
  %588 = cast(%var_5387, dtype="int32") /* ty=int32 */;
  %589 = cast(%var_5368, dtype="int32") /* ty=Tensor[(336), int32] */;
  %590 = reshape(%588, newshape=[]) /* ty=int32 */;
  %591 = reshape(%589, newshape=[14, 12, 2]) /* ty=Tensor[(14, 12, 2), int32] */;
  %592 = @func_5315() /* ty=Tensor[(8, 15, 4), float32] */;
  %593 = @func_5082() /* ty=Tensor[(12, 3, 14), float32] */;
  %594 = %585.4;
  %595 = logical_or(%586, %587) /* ty=Tensor[(990, 90), bool] */;
  %596 = @func_1445(%590, %591) /* ty=Tensor[(14, 12, 2), bool] */;
  (%592, %593, %594, %var_5367, %var_5368, meta[relay.Constant][36] /* ty=Tensor[(168, 4), bool] */, %var_5370, %595, %596, %var_5387)
}

def @func_11772(%var_11757: Tensor[(198), float32], %var_11759: Tensor[(728), uint8], %var_11760: Tensor[(256), float32], %var_11761: int32) -> (Tensor[(16, 5, 15), bool], Tensor[(8, 15, 4), float64], Tensor[(14, 14, 10), float32], Tensor[(360), float64], Tensor[(90), float64], Tensor[(1152), uint64], Tensor[(198), float32], Tensor[(672), bool], Tensor[(728), uint8], Tensor[(256), float32], int32, Tensor[(360), float64], Tensor[(336), bool]) {
  %597 = @func_9615() /* ty=(Tensor[(16, 5, 15), bool], Tensor[(14, 14, 10), float32]) */;
  %598 = @func_11114() /* ty=(Tensor[(8, 15, 4), float64],) */;
  %599 = @func_10633() /* ty=(Tensor[(14, 14, 10), float32],) */;
  %600 = cast(meta[relay.Constant][37] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
  %601 = cast(meta[relay.Constant][38] /* ty=Tensor[(1152), uint64] */, dtype="uint64") /* ty=Tensor[(1152), uint64] */;
  %602 = cast(%var_11757, dtype="float32") /* ty=Tensor[(198), float32] */;
  %603 = cast(meta[relay.Constant][39] /* ty=Tensor[(672), bool] */, dtype="bool") /* ty=Tensor[(672), bool] */;
  %604 = cast(%var_11759, dtype="uint8") /* ty=Tensor[(728), uint8] */;
  %605 = cast(%var_11760, dtype="float32") /* ty=Tensor[(256), float32] */;
  %606 = cast(%var_11761, dtype="int32") /* ty=int32 */;
  %607 = cast(meta[relay.Constant][40] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %608 = cast(meta[relay.Constant][41] /* ty=Tensor[(336), bool] */, dtype="bool") /* ty=Tensor[(336), bool] */;
  %609 = reshape(%600, newshape=[45, 2]) /* ty=Tensor[(45, 2), float64] */;
  %610 = reshape(%601, newshape=[1152]) /* ty=Tensor[(1152), uint64] */;
  %611 = reshape(%602, newshape=[198]) /* ty=Tensor[(198), float32] */;
  %612 = reshape(%603, newshape=[2, 336]) /* ty=Tensor[(2, 336), bool] */;
  %613 = reshape(%604, newshape=[13, 4, 14]) /* ty=Tensor[(13, 4, 14), uint8] */;
  %614 = reshape(%605, newshape=[256]) /* ty=Tensor[(256), float32] */;
  %615 = reshape(%606, newshape=[]) /* ty=int32 */;
  %616 = reshape(%607, newshape=[360]) /* ty=Tensor[(360), float64] */;
  %617 = reshape(%608, newshape=[2, 168]) /* ty=Tensor[(2, 168), bool] */;
  %618 = @func_8964(%609, %610, %611, %612, %613, %614, %615, %616, %617) /* ty=(Tensor[(14, 14, 10), float64], Tensor[(728), uint8], Tensor[(16, 5, 15), bool], Tensor[(13, 4, 14), uint8], Tensor[(14, 9, 12), float64], Tensor[(45, 2), float64], Tensor[(1152), uint64], Tensor[(9, 11, 2), float32], Tensor[(198), float32], Tensor[(90), float64], Tensor[(2, 336), bool], Tensor[(13, 4, 14), float32], Tensor[(8, 8, 4), uint8], Tensor[(256), float32], int32, Tensor[(9, 10, 4), float64], Tensor[(360), float64], Tensor[(7, 132), float64], Tensor[(672), bool], Tensor[(2, 168), bool]) */;
  %619 = %597.0;
  %620 = %598.0;
  %621 = %599.0;
  %622 = %618.16;
  (%619, %620, %621, %622, meta[relay.Constant][37] /* ty=Tensor[(90), float64] */, meta[relay.Constant][38] /* ty=Tensor[(1152), uint64] */, %var_11757, meta[relay.Constant][39] /* ty=Tensor[(672), bool] */, %var_11759, %var_11760, %var_11761, meta[relay.Constant][40] /* ty=Tensor[(360), float64] */, meta[relay.Constant][41] /* ty=Tensor[(336), bool] */)
}

def @func_3182() -> Tensor[(8, 15, 4), float32] {
  %623 = @func_3130() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %623.0
}

def @func_9564() -> (Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float64], Tensor[(8, 15, 4), float64]) {
  %624 = @func_9374() /* ty=(Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float64], Tensor[(8, 15, 4), float32]) */;
  %625 = %624.2;
  %626 = cast(%625, dtype="float64") /* ty=Tensor[(8, 15, 4), float64] */;
  %627 = @func_5833() /* ty=Tensor[(8, 15, 4), float32] */;
  %628 = @func_3859() /* ty=Tensor[(8, 15, 4), float64] */;
  %629 = asinh(%626) /* ty=Tensor[(8, 15, 4), float64] */;
  (%627, %628, %629)
}

def @func_9747(%var_9741: Tensor[(12, 3, 14), float32]) -> (Tensor[(12, 3, 14), bool],) {
  %630 = @func_5082() /* ty=Tensor[(12, 3, 14), float32] */;
  %631 = cast(%var_9741, dtype="bool") /* ty=Tensor[(12, 3, 14), bool] */;
  %632 = shape_of(%630, dtype="int32") /* ty=Tensor[(3), int32] */;
  %633 = cast(%630, dtype="bool") /* ty=Tensor[(12, 3, 14), bool] */;
  %634 = dyn.reshape(%631, %632, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %635 = greater(%633, %634) /* ty=Tensor[(12, 3, 14), bool] */;
  (%635,)
}

def @func_4788(%var_4782: Tensor[(16, 5, 15), bool]) -> Tensor[(16, 5, 15), float32] {
  %636 = @func_3314() /* ty=(Tensor[(16, 5, 15), bool], Tensor[(12, 3, 14), int64], Tensor[(504, 1), float64]) */;
  %637 = %636.0;
  %638 = cast(%var_4782, dtype="float32") /* ty=Tensor[(16, 5, 15), float32] */;
  %639 = shape_of(%637, dtype="int32") /* ty=Tensor[(3), int32] */;
  %640 = cast(%637, dtype="float32") /* ty=Tensor[(16, 5, 15), float32] */;
  %641 = dyn.reshape(%638, %639, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%640, %641) /* ty=Tensor[(16, 5, 15), float32] */
}

def @func_4962() -> Tensor[(8, 15, 4), float32] {
  %642 = @func_3274() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %642.0
}

def @func_4197() -> Tensor[(16, 5, 15), bool] {
  %643 = @func_4162() /* ty=(Tensor[(16, 5, 15), bool],) */;
  %643.0
}

def @func_5833() -> Tensor[(8, 15, 4), float32] {
  %644 = @func_5315() /* ty=Tensor[(8, 15, 4), float32] */;
  %645 = cast(%644, dtype="float32") /* ty=Tensor[(8, 15, 4), float32] */;
  tan(%645) /* ty=Tensor[(8, 15, 4), float32] */
}

def @func_5583() -> Tensor[(8, 15, 4), float64] {
  @func_3536() /* ty=Tensor[(8, 15, 4), float64] */
}

def @func_6838() -> (Tensor[(8, 15, 4), float32],) {
  %646 = @func_5927() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %647 = %646.0;
  (%647,)
}

def @func_12640() -> (Tensor[(8, 15, 4), float32],) {
  %648 = @func_10767() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %649 = %648.0;
  (%649,)
}

def @func_9102() -> (Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float32], Tensor[(16, 5, 15), bool], Tensor[(11, 4, 12), float64], Tensor[(8, 15, 4), uint16]) {
  %650 = @func_4417() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %651 = @func_6243() /* ty=(Tensor[(16, 5, 15), bool],) */;
  %652 = @func_7640() /* ty=(Tensor[(11, 4, 12), uint16], Tensor[(16, 5, 15), bool], Tensor[(11, 4, 12), float64]) */;
  %653 = @func_6309() /* ty=Tensor[(8, 15, 4), float32] */;
  %654 = @func_3182() /* ty=Tensor[(8, 15, 4), float32] */;
  %655 = cast(%654, dtype="uint16") /* ty=Tensor[(8, 15, 4), uint16] */;
  %656 = shape_of(%653, dtype="int32") /* ty=Tensor[(3), int32] */;
  %657 = cast(%653, dtype="uint16") /* ty=Tensor[(8, 15, 4), uint16] */;
  %658 = dyn.reshape(%655, %656, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %659 = @func_8535() /* ty=Tensor[(8, 15, 4), float32] */;
  %660 = %650.0;
  %661 = %651.0;
  %662 = %652.2;
  %663 = maximum(%657, %658) /* ty=Tensor[(8, 15, 4), uint16] */;
  (%659, %660, %661, %662, %663)
}

def @func_7731(%var_7725: Tensor[(90), float64]) -> (Tensor[(504), float64], Tensor[(90), float64], Tensor[(90), float64]) {
  %664 = cast(%var_7725, dtype="float64") /* ty=Tensor[(90), float64] */;
  %665 = reshape(%664, newshape=[90]) /* ty=Tensor[(90), float64] */;
  %666 = @func_4817(%665) /* ty=(Tensor[(8, 15, 4), float32], Tensor[(12, 16, 6), uint64], Tensor[(4, 288), uint64], Tensor[(15, 6), float64], Tensor[(90), float64], Tensor[(8, 15, 4), float64]) */;
  %667 = @func_6387() /* ty=Tensor[(504), float64] */;
  %668 = %666.4;
  (%667, %668, %var_7725)
}

def @func_12723(%var_12720: Tensor[(504), float32]) -> (Tensor[(8, 15, 4), float32], Tensor[(12, 3, 14), bool], Tensor[(504), float32]) {
  %669 = cast(%var_12720, dtype="float32") /* ty=Tensor[(504), float32] */;
  %670 = reshape(%669, newshape=[12, 3, 14]) /* ty=Tensor[(12, 3, 14), float32] */;
  %671 = @func_9747(%670) /* ty=(Tensor[(12, 3, 14), bool],) */;
  %672 = @func_6309() /* ty=Tensor[(8, 15, 4), float32] */;
  %673 = %671.0;
  (%672, %673, %var_12720)
}

def @func_12931(%var_12871: Tensor[(924), float64]) -> (Tensor[(8, 15, 4), float32], Tensor[(924), float64], Tensor[(8, 15, 4), float32], Tensor[(14, 11, 6), float32]) {
  %674 = @func_8816() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %675 = @func_6838() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %676 = cast(%var_12871, dtype="float64") /* ty=Tensor[(924), float64] */;
  %677 = reshape(%676, newshape=[924]) /* ty=Tensor[(924), float64] */;
  %678 = @func_3573(%677) /* ty=(Tensor[(8, 15, 4), float64], Tensor[(14, 11, 6), float32], Tensor[(924), float64]) */;
  %679 = %678.1;
  %680 = cast(%679, dtype="float32") /* ty=Tensor[(14, 11, 6), float32] */;
  %681 = atanh(%680) /* ty=Tensor[(14, 11, 6), float32] */;
  %682 = cast(meta[relay.Constant][42] /* ty=Tensor[(14, 11, 6), float32] */, dtype="float32") /* ty=Tensor[(14, 11, 6), float32] */;
  %683 = shape_of(%681, dtype="int32") /* ty=Tensor[(3), int32] */;
  %684 = cast(%681, dtype="float32") /* ty=Tensor[(14, 11, 6), float32] */;
  %685 = dyn.reshape(%682, %683, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %686 = %674.0;
  %687 = %675.0;
  %688 = power(%684, %685) /* ty=Tensor[(14, 11, 6), float32] */;
  (%686, %var_12871, %687, %688)
}

def @func_2477(%var_2444: Tensor[(7, 16, 3), bool], %var_2461: int32, %var_2466: Tensor[(14, 16, 3), bool]) -> (Tensor[(7, 16, 3), bool], Tensor[(14, 12, 2), bool], int32, Tensor[(14, 16, 3), bool]) {
  %689 = cast(meta[relay.Constant][43] /* ty=Tensor[(1, 16, 3), bool] */, dtype="bool") /* ty=Tensor[(1, 16, 3), bool] */;
  %690 = cast(%var_2444, dtype="bool") /* ty=Tensor[(7, 16, 3), bool] */;
  %691 = cast(%var_2461, dtype="int32") /* ty=int32 */;
  %692 = cast(%var_2444, dtype="int32") /* ty=Tensor[(7, 16, 3), int32] */;
  %693 = reshape(%691, newshape=[]) /* ty=int32 */;
  %694 = reshape(%692, newshape=[14, 12, 2]) /* ty=Tensor[(14, 12, 2), int32] */;
  %695 = cast(meta[relay.Constant][43] /* ty=Tensor[(1, 16, 3), bool] */, dtype="bool") /* ty=Tensor[(1, 16, 3), bool] */;
  %696 = cast(%var_2466, dtype="bool") /* ty=Tensor[(14, 16, 3), bool] */;
  %697 = logical_and(%689, %690) /* ty=Tensor[(7, 16, 3), bool] */;
  %698 = @func_1445(%693, %694) /* ty=Tensor[(14, 12, 2), bool] */;
  %699 = less(%695, %696) /* ty=Tensor[(14, 16, 3), bool] */;
  (%697, %698, %var_2461, %699)
}

def @func_6309() -> Tensor[(8, 15, 4), float32] {
  %700 = @func_3130() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %700.0
}

def @func_3274() -> (Tensor[(8, 15, 4), float32],) {
  %701 = @func_3130() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %702 = %701.0;
  (%702,)
}

def @func_8756(%var_8726: Tensor[(12, 16, 9), int16], %var_8727: Tensor[(12, 16, 9), int16], %var_8746: Tensor[(12, 16, 9), float64]) -> (Tensor[(12, 16, 9), int16], Tensor[(12, 16, 9), bool]) {
  %703 = cast(%var_8727, dtype="int16") /* ty=Tensor[(12, 16, 9), int16] */;
  %704 = shape_of(%var_8726, dtype="int32") /* ty=Tensor[(3), int32] */;
  %705 = cast(%var_8726, dtype="int16") /* ty=Tensor[(12, 16, 9), int16] */;
  %706 = dyn.reshape(%703, %704, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %707 = cast(%var_8726, dtype="float64") /* ty=Tensor[(12, 16, 9), float64] */;
  %708 = asin(%707) /* ty=Tensor[(12, 16, 9), float64] */;
  %709 = cast(%var_8746, dtype="bool") /* ty=Tensor[(12, 16, 9), bool] */;
  %710 = shape_of(%708, dtype="int32") /* ty=Tensor[(3), int32] */;
  %711 = cast(%708, dtype="bool") /* ty=Tensor[(12, 16, 9), bool] */;
  %712 = dyn.reshape(%709, %710, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %713 = minimum(%705, %706) /* ty=Tensor[(12, 16, 9), int16] */;
  %714 = equal(%711, %712) /* ty=Tensor[(12, 16, 9), bool] */;
  (%713, %714)
}

def @func_9514(%var_9510: float64, %var_9511: Tensor[(2, 40), float64]) -> (Tensor[(8, 15, 4), float64], Tensor[(2, 168), bool], float64, Tensor[(2, 40), float64]) {
  %715 = cast(%var_9510, dtype="float64") /* ty=float64 */;
  %716 = cast(%var_9511, dtype="float64") /* ty=Tensor[(2, 40), float64] */;
  %717 = reshape(%715, newshape=[]) /* ty=float64 */;
  %718 = reshape(%716, newshape=[2, 10, 4]) /* ty=Tensor[(2, 10, 4), float64] */;
  %719 = @func_2795(%717, %718) /* ty=(Tensor[(2, 10, 4), float64], Tensor[(14, 12, 2), bool], Tensor[(2, 168), bool], Tensor[(672), bool]) */;
  %720 = @func_5583() /* ty=Tensor[(8, 15, 4), float64] */;
  %721 = %719.2;
  (%720, %721, %var_9510, %var_9511)
}

def @func_9962() -> Tensor[(8, 15, 4), float64] {
  %722 = @func_4068() /* ty=(Tensor[(8, 15, 4), float64], Tensor[(12, 16, 6), uint64], Tensor[(1152), uint64]) */;
  %722.0
}

def @func_6035(%var_6019: Tensor[(3, 6, 16), float64], %var_6027: Tensor[(90, 1), float64], %var_6028: Tensor[(24, 48), uint64]) -> (Tensor[(12, 16, 6), float64], Tensor[(728), uint8], Tensor[(90, 1), float64], Tensor[(24, 48), uint64], Tensor[(3, 6, 16), float64]) {
  %723 = cast(meta[relay.Constant][44] /* ty=Tensor[(728), uint8] */, dtype="uint8") /* ty=Tensor[(728), uint8] */;
  %724 = cast(%var_6027, dtype="float64") /* ty=Tensor[(90, 1), float64] */;
  %725 = cast(%var_6028, dtype="uint64") /* ty=Tensor[(24, 48), uint64] */;
  %726 = reshape(%723, newshape=[728]) /* ty=Tensor[(728), uint8] */;
  %727 = reshape(%724, newshape=[90]) /* ty=Tensor[(90), float64] */;
  %728 = reshape(%725, newshape=[1152]) /* ty=Tensor[(1152), uint64] */;
  %729 = @func_5738(%726, %727, %728) /* ty=(Tensor[(8, 15, 4), float64], Tensor[(14, 9, 12), float64], Tensor[(728), uint8], Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), bool], Tensor[(15, 6), float64], Tensor[(90), float64], Tensor[(1152), uint64], Tensor[(8, 15, 4), float32], Tensor[(12, 16, 6), float64]) */;
  %730 = cast(%var_6019, dtype="float64") /* ty=Tensor[(3, 6, 16), float64] */;
  %731 = log2(%730) /* ty=Tensor[(3, 6, 16), float64] */;
  %732 = cast(%731, dtype="float64") /* ty=Tensor[(3, 6, 16), float64] */;
  %733 = %729.9;
  %734 = acos(%732) /* ty=Tensor[(3, 6, 16), float64] */;
  (%733, meta[relay.Constant][44] /* ty=Tensor[(728), uint8] */, %var_6027, %var_6028, %734)
}

def @func_8609(%var_8601: Tensor[(728), uint8], %var_8602: Tensor[(3, 30), float64], %var_8603: Tensor[(1152), uint64]) -> (Tensor[(16, 5, 15), bool], Tensor[(15, 6), float64], Tensor[(728), uint8], Tensor[(3, 30), float64], Tensor[(1152), uint64], Tensor[(8, 15, 4), float64]) {
  %735 = cast(%var_8601, dtype="uint8") /* ty=Tensor[(728), uint8] */;
  %736 = cast(%var_8602, dtype="float64") /* ty=Tensor[(3, 30), float64] */;
  %737 = cast(%var_8603, dtype="uint64") /* ty=Tensor[(1152), uint64] */;
  %738 = reshape(%735, newshape=[728]) /* ty=Tensor[(728), uint8] */;
  %739 = reshape(%736, newshape=[90]) /* ty=Tensor[(90), float64] */;
  %740 = reshape(%737, newshape=[1152]) /* ty=Tensor[(1152), uint64] */;
  %741 = @func_5738(%738, %739, %740) /* ty=(Tensor[(8, 15, 4), float64], Tensor[(14, 9, 12), float64], Tensor[(728), uint8], Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), bool], Tensor[(15, 6), float64], Tensor[(90), float64], Tensor[(1152), uint64], Tensor[(8, 15, 4), float32], Tensor[(12, 16, 6), float64]) */;
  %742 = @func_6171() /* ty=Tensor[(16, 5, 15), bool] */;
  %743 = %741.5;
  %744 = @func_5625() /* ty=Tensor[(8, 15, 4), float64] */;
  (%742, %743, %var_8601, %var_8602, %var_8603, %744)
}

def @func_8318(%var_8296: Tensor[(90), float64], %var_8300: Tensor[(672), bool]) -> (Tensor[(1152), uint64], Tensor[(336), bool], Tensor[(90), float64], Tensor[(990), float64], Tensor[(8, 42), bool], Tensor[(672), bool], Tensor[(1512), float32], Tensor[(16, 5, 15), bool]) {
  %745 = @func_5012() /* ty=(Tensor[(16, 5, 15), bool], Tensor[(12, 16, 6), uint64], Tensor[(1152), uint64], Tensor[(8, 15, 4), float64]) */;
  %746 = cast(%var_8296, dtype="float64") /* ty=Tensor[(90), float64] */;
  %747 = cast(meta[relay.Constant][45] /* ty=Tensor[(990), float64] */, dtype="float64") /* ty=Tensor[(990), float64] */;
  %748 = cast(meta[relay.Constant][46] /* ty=Tensor[(1512), float64] */, dtype="float64") /* ty=Tensor[(1512), float64] */;
  %749 = cast(meta[relay.Constant][47] /* ty=Tensor[(8, 42), bool] */, dtype="bool") /* ty=Tensor[(8, 42), bool] */;
  %750 = cast(%var_8300, dtype="bool") /* ty=Tensor[(672), bool] */;
  %751 = %745.2;
  %752 = cast(%751, dtype="uint64") /* ty=Tensor[(1152), uint64] */;
  %753 = reshape(%746, newshape=[1, 10, 9]) /* ty=Tensor[(1, 10, 9), float64] */;
  %754 = reshape(%747, newshape=[11, 10, 9]) /* ty=Tensor[(11, 10, 9), float64] */;
  %755 = reshape(%748, newshape=[1512]) /* ty=Tensor[(1512), float64] */;
  %756 = reshape(%749, newshape=[4, 84]) /* ty=Tensor[(4, 84), bool] */;
  %757 = reshape(%750, newshape=[672]) /* ty=Tensor[(672), bool] */;
  %758 = reshape(%752, newshape=[1152]) /* ty=Tensor[(1152), uint64] */;
  %759 = @func_3727(%753, %754, %755, %756, %757, %758) /* ty=(Tensor[(?, 10, 9), bool], Tensor[(672), bool], Tensor[(1512), float64], Tensor[(4, 84), bool], Tensor[(672), bool], Tensor[(336), bool], Tensor[(11, 10, 9), float32], Tensor[(12, 16, 6), uint64], Tensor[(1152), uint64]) */;
  %760 = cast(meta[relay.Constant][46] /* ty=Tensor[(1512), float64] */, dtype="float32") /* ty=Tensor[(1512), float32] */;
  %761 = @func_7482() /* ty=(Tensor[(16, 5, 15), bool], Tensor[(16, 5, 15), bool]) */;
  %762 = %759.5;
  %763 = asin(%760) /* ty=Tensor[(1512), float32] */;
  %764 = %761.0;
  (%751, %762, %var_8296, meta[relay.Constant][45] /* ty=Tensor[(990), float64] */, meta[relay.Constant][47] /* ty=Tensor[(8, 42), bool] */, %var_8300, %763, %764)
}

def @func_6126() -> Tensor[(16, 5, 15), bool] {
  %765 = @func_4162() /* ty=(Tensor[(16, 5, 15), bool],) */;
  %765.0
}

def @func_5128(%var_5122: Tensor[(8, 15, 4), bool]) -> Tensor[(8, 15, 4), bool] {
  %766 = @func_3896() /* ty=Tensor[(8, 15, 4), bool] */;
  %767 = cast(%var_5122, dtype="bool") /* ty=Tensor[(8, 15, 4), bool] */;
  %768 = shape_of(%766, dtype="int32") /* ty=Tensor[(3), int32] */;
  %769 = cast(%766, dtype="bool") /* ty=Tensor[(8, 15, 4), bool] */;
  %770 = dyn.reshape(%767, %768, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%769, %770) /* ty=Tensor[(8, 15, 4), bool] */
}

def @func_7039(%var_7011: Tensor[(9, 11, 2), float32], %var_7012: Tensor[(9, 11, 2), float32]) -> Tensor[(9, 11, 2), float32] {
  %771 = cast(%var_7012, dtype="float32") /* ty=Tensor[(9, 11, 2), float32] */;
  %772 = shape_of(%var_7011, dtype="int32") /* ty=Tensor[(3), int32] */;
  %773 = cast(%var_7011, dtype="float32") /* ty=Tensor[(9, 11, 2), float32] */;
  %774 = dyn.reshape(%771, %772, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_mod(%773, %774) /* ty=Tensor[(9, 11, 2), float32] */
}

def @func_10633() -> (Tensor[(14, 14, 10), float32],) {
  %775 = @func_9920() /* ty=(Tensor[(8, 15, 4), float64], Tensor[(16, 5, 15), float64], int16, Tensor[(11, 12, 7), float64], Tensor[(11, 12, 7), int16], Tensor[(14, 14, 10), float32]) */;
  %776 = %775.5;
  (%776,)
}

def @func_3314() -> (Tensor[(16, 5, 15), bool], Tensor[(12, 3, 14), int64], Tensor[(504, 1), float64]) {
  %777 = cast(meta[relay.Constant][48] /* ty=Tensor[(16, 5, 15), float32] */, dtype="float32") /* ty=Tensor[(16, 5, 15), float32] */;
  %778 = sqrt(%777) /* ty=Tensor[(16, 5, 15), float32] */;
  %779 = cast(meta[relay.Constant][48] /* ty=Tensor[(16, 5, 15), float32] */, dtype="bool") /* ty=Tensor[(16, 5, 15), bool] */;
  %780 = shape_of(%778, dtype="int32") /* ty=Tensor[(3), int32] */;
  %781 = cast(%778, dtype="bool") /* ty=Tensor[(16, 5, 15), bool] */;
  %782 = dyn.reshape(%779, %780, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %783 = cast(meta[relay.Constant][49] /* ty=Tensor[(504, 1), float64] */, dtype="float64") /* ty=Tensor[(504, 1), float64] */;
  %784 = cast(meta[relay.Constant][49] /* ty=Tensor[(504, 1), float64] */, dtype="float64") /* ty=Tensor[(504, 1), float64] */;
  %785 = cast(meta[relay.Constant][49] /* ty=Tensor[(504, 1), float64] */, dtype="float64") /* ty=Tensor[(504, 1), float64] */;
  %786 = reshape(%783, newshape=[12, 3, 14]) /* ty=Tensor[(12, 3, 14), float64] */;
  %787 = reshape(%784, newshape=[12, 3, 14]) /* ty=Tensor[(12, 3, 14), float64] */;
  %788 = reshape(%785, newshape=[12, 3, 14]) /* ty=Tensor[(12, 3, 14), float64] */;
  %789 = @func_2745(%786, %787, %788) /* ty=(Tensor[(12, 3, 14), bool], Tensor[(12, 3, 14), int64]) */;
  %790 = less(%781, %782) /* ty=Tensor[(16, 5, 15), bool] */;
  %791 = %789.1;
  (%790, %791, meta[relay.Constant][49] /* ty=Tensor[(504, 1), float64] */)
}

def @func_9482() -> (Tensor[(16, 5, 15), bool], Tensor[(462, 2), float64], Tensor[(924), float64]) {
  %792 = @func_7640() /* ty=(Tensor[(11, 4, 12), uint16], Tensor[(16, 5, 15), bool], Tensor[(11, 4, 12), float64]) */;
  %793 = cast(meta[relay.Constant][50] /* ty=Tensor[(924), float64] */, dtype="float64") /* ty=Tensor[(924), float64] */;
  %794 = reshape(%793, newshape=[462, 2]) /* ty=Tensor[(462, 2), float64] */;
  %795 = @func_8784(%794) /* ty=(Tensor[(16, 5, 15), bool], Tensor[(8, 15, 4), float64], Tensor[(462, 2), float64]) */;
  %796 = %792.1;
  %797 = %795.2;
  (%796, %797, meta[relay.Constant][50] /* ty=Tensor[(924), float64] */)
}

def @func_9615() -> (Tensor[(16, 5, 15), bool], Tensor[(14, 14, 10), float32]) {
  %798 = @func_7482() /* ty=(Tensor[(16, 5, 15), bool], Tensor[(16, 5, 15), bool]) */;
  %799 = @func_7596() /* ty=(Tensor[(12, 16, 6), float64], Tensor[(14, 14, 10), float64]) */;
  %800 = %799.1;
  %801 = cast(%800, dtype="float32") /* ty=Tensor[(14, 14, 10), float32] */;
  %802 = %798.0;
  %803 = asin(%801) /* ty=Tensor[(14, 14, 10), float32] */;
  (%802, %803)
}

def @func_12078(%var_12052: Tensor[(1456), float64], %var_12058: Tensor[(1152), uint64], %var_12071: Tensor[(630), float64]) -> (Tensor[(8, 15, 4), float32], Tensor[(1456), float64], Tensor[(1456), float64], Tensor[(1152), uint64], Tensor[(90), float64], Tensor[(1152), uint64], Tensor[(9, 14, 5), float64], Tensor[(630), float64]) {
  %804 = cast(%var_12052, dtype="float64") /* ty=Tensor[(1456), float64] */;
  %805 = reshape(%804, newshape=[1456]) /* ty=Tensor[(1456), float64] */;
  %806 = @func_10834(%805) /* ty=(Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float64], Tensor[(924), float64], Tensor[(8, 15, 4), float32], Tensor[(1456), float64]) */;
  %807 = cast(meta[relay.Constant][51] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
  %808 = cast(%var_12058, dtype="uint64") /* ty=Tensor[(1152), uint64] */;
  %809 = reshape(%807, newshape=[15, 6]) /* ty=Tensor[(15, 6), float64] */;
  %810 = reshape(%808, newshape=[1152]) /* ty=Tensor[(1152), uint64] */;
  %811 = @func_3950(%809, %810) /* ty=(Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), bool], Tensor[(16, 5, 15), bool], Tensor[(1512), float64], Tensor[(15, 6), float64], Tensor[(990), float64], Tensor[(126, 12), float64], Tensor[(168, 2), bool], Tensor[(672), bool], Tensor[(1152), uint64]) */;
  %812 = cast(%var_12071, dtype="float64") /* ty=Tensor[(630), float64] */;
  %813 = cast(%var_12071, dtype="float64") /* ty=Tensor[(630), float64] */;
  %814 = cast(%var_12071, dtype="float64") /* ty=Tensor[(630), float64] */;
  %815 = reshape(%812, newshape=[9, 14, 5]) /* ty=Tensor[(9, 14, 5), float64] */;
  %816 = reshape(%813, newshape=[9, 14, 5]) /* ty=Tensor[(9, 14, 5), float64] */;
  %817 = reshape(%814, newshape=[9, 14, 5]) /* ty=Tensor[(9, 14, 5), float64] */;
  %818 = @func_10260(%815, %816, %817) /* ty=(Tensor[(9, 14, 5), float64], Tensor[(9, 14, 5), uint8]) */;
  %819 = @func_4962() /* ty=Tensor[(8, 15, 4), float32] */;
  %820 = %806.4;
  %821 = %811.9;
  %822 = %818.0;
  (%819, %820, %var_12052, %821, meta[relay.Constant][51] /* ty=Tensor[(90), float64] */, %var_12058, %822, %var_12071)
}

def @func_9319(%var_9301: Tensor[(13, 16, 7), float64]) -> (Tensor[(13, 16, 7), float32], Tensor[(13, 16, 7), uint16], Tensor[(8, 15, 4), float32]) {
  %823 = cast(%var_9301, dtype="float32") /* ty=Tensor[(13, 16, 7), float32] */;
  %824 = cast(%var_9301, dtype="float64") /* ty=Tensor[(13, 16, 7), float64] */;
  %825 = log2(%824) /* ty=Tensor[(13, 16, 7), float64] */;
  %826 = cast(%825, dtype="uint16") /* ty=Tensor[(13, 16, 7), uint16] */;
  %827 = shape_of(%var_9301, dtype="int32") /* ty=Tensor[(3), int32] */;
  %828 = cast(%var_9301, dtype="uint16") /* ty=Tensor[(13, 16, 7), uint16] */;
  %829 = dyn.reshape(%826, %827, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %830 = @func_8222() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %831 = sqrt(%823) /* ty=Tensor[(13, 16, 7), float32] */;
  %832 = right_shift(%828, %829) /* ty=Tensor[(13, 16, 7), uint16] */;
  %833 = %830.0;
  (%831, %832, %833)
}

def @func_3536() -> Tensor[(8, 15, 4), float64] {
  %834 = @func_3130() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %835 = %834.0;
  %836 = cast(%835, dtype="float64") /* ty=Tensor[(8, 15, 4), float64] */;
  sinh(%836) /* ty=Tensor[(8, 15, 4), float64] */
}

def @func_4475() -> (Tensor[(16, 5, 15), bool], Tensor[(8, 15, 4), float32]) {
  %837 = @func_4417() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %838 = @func_4197() /* ty=Tensor[(16, 5, 15), bool] */;
  %839 = %837.0;
  (%838, %839)
}

def @func_7782() -> Tensor[(8, 15, 4), bool] {
  @func_3896() /* ty=Tensor[(8, 15, 4), bool] */
}

def @func_8655() -> (Tensor[(16, 5, 15), bool],) {
  %840 = @func_6243() /* ty=(Tensor[(16, 5, 15), bool],) */;
  %841 = %840.0;
  (%841,)
}

def @func_11402() -> (Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float64]) {
  %842 = @func_11258() /* ty=(Tensor[(8, 15, 4), float64],) */;
  %843 = @func_4962() /* ty=Tensor[(8, 15, 4), float32] */;
  %844 = %842.0;
  (%843, %844)
}

def @func_3036(%var_3012: Tensor[(8, 8, 4), float32], %var_3013: Tensor[(8, 8, 4), float32], %var_3019: int32) -> (Tensor[(8, 8, 4), float32], Tensor[(14, 12, 2), bool], int32, Tensor[(168, 2), int32], Tensor[(8, 8, 4), uint8]) {
  %845 = cast(%var_3013, dtype="float32") /* ty=Tensor[(8, 8, 4), float32] */;
  %846 = shape_of(%var_3012, dtype="int32") /* ty=Tensor[(3), int32] */;
  %847 = cast(%var_3012, dtype="float32") /* ty=Tensor[(8, 8, 4), float32] */;
  %848 = dyn.reshape(%845, %846, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %849 = cast(%var_3019, dtype="int32") /* ty=int32 */;
  %850 = cast(meta[relay.Constant][52] /* ty=Tensor[(168, 2), int32] */, dtype="int32") /* ty=Tensor[(168, 2), int32] */;
  %851 = reshape(%849, newshape=[]) /* ty=int32 */;
  %852 = reshape(%850, newshape=[14, 12, 2]) /* ty=Tensor[(14, 12, 2), int32] */;
  %853 = cast(%var_3013, dtype="uint8") /* ty=Tensor[(8, 8, 4), uint8] */;
  %854 = shape_of(%var_3012, dtype="int32") /* ty=Tensor[(3), int32] */;
  %855 = cast(%var_3012, dtype="uint8") /* ty=Tensor[(8, 8, 4), uint8] */;
  %856 = dyn.reshape(%853, %854, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %857 = power(%847, %848) /* ty=Tensor[(8, 8, 4), float32] */;
  %858 = @func_1445(%851, %852) /* ty=Tensor[(14, 12, 2), bool] */;
  %859 = subtract(%855, %856) /* ty=Tensor[(8, 8, 4), uint8] */;
  (%857, %858, %var_3019, meta[relay.Constant][52] /* ty=Tensor[(168, 2), int32] */, %859)
}

def @func_9288() -> Tensor[(8, 15, 4), float32] {
  %860 = @func_3274() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %860.0
}

def @func_12107() -> (Tensor[(16, 5, 15), bool],) {
  %861 = @func_6126() /* ty=Tensor[(16, 5, 15), bool] */;
  (%861,)
}

def @func_3950(%var_3920: Tensor[(15, 6), float64], %var_3925: Tensor[(1152), uint64]) -> (Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), bool], Tensor[(16, 5, 15), bool], Tensor[(1512), float64], Tensor[(15, 6), float64], Tensor[(990), float64], Tensor[(126, 12), float64], Tensor[(168, 2), bool], Tensor[(672), bool], Tensor[(1152), uint64]) {
  %862 = @func_3274() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %863 = @func_3314() /* ty=(Tensor[(16, 5, 15), bool], Tensor[(12, 3, 14), int64], Tensor[(504, 1), float64]) */;
  %864 = cast(%var_3920, dtype="float64") /* ty=Tensor[(15, 6), float64] */;
  %865 = cast(meta[relay.Constant][53] /* ty=Tensor[(990), float64] */, dtype="float64") /* ty=Tensor[(990), float64] */;
  %866 = cast(meta[relay.Constant][54] /* ty=Tensor[(126, 12), float64] */, dtype="float64") /* ty=Tensor[(126, 12), float64] */;
  %867 = cast(meta[relay.Constant][55] /* ty=Tensor[(168, 2), bool] */, dtype="bool") /* ty=Tensor[(168, 2), bool] */;
  %868 = cast(meta[relay.Constant][56] /* ty=Tensor[(672), bool] */, dtype="bool") /* ty=Tensor[(672), bool] */;
  %869 = cast(%var_3925, dtype="uint64") /* ty=Tensor[(1152), uint64] */;
  %870 = reshape(%864, newshape=[1, 10, 9]) /* ty=Tensor[(1, 10, 9), float64] */;
  %871 = reshape(%865, newshape=[11, 10, 9]) /* ty=Tensor[(11, 10, 9), float64] */;
  %872 = reshape(%866, newshape=[1512]) /* ty=Tensor[(1512), float64] */;
  %873 = reshape(%867, newshape=[4, 84]) /* ty=Tensor[(4, 84), bool] */;
  %874 = reshape(%868, newshape=[672]) /* ty=Tensor[(672), bool] */;
  %875 = reshape(%869, newshape=[1152]) /* ty=Tensor[(1152), uint64] */;
  %876 = @func_3727(%870, %871, %872, %873, %874, %875) /* ty=(Tensor[(?, 10, 9), bool], Tensor[(672), bool], Tensor[(1512), float64], Tensor[(4, 84), bool], Tensor[(672), bool], Tensor[(336), bool], Tensor[(11, 10, 9), float32], Tensor[(12, 16, 6), uint64], Tensor[(1152), uint64]) */;
  %877 = %862.0;
  %878 = @func_3896() /* ty=Tensor[(8, 15, 4), bool] */;
  %879 = %863.0;
  %880 = %876.2;
  (%877, %878, %879, %880, %var_3920, meta[relay.Constant][53] /* ty=Tensor[(990), float64] */, meta[relay.Constant][54] /* ty=Tensor[(126, 12), float64] */, meta[relay.Constant][55] /* ty=Tensor[(168, 2), bool] */, meta[relay.Constant][56] /* ty=Tensor[(672), bool] */, %var_3925)
}

def @func_7258(%var_7210: Tensor[(672), bool], %var_7220: Tensor[(728), uint8]) -> (Tensor[(12, 3, 14), int64], Tensor[(8, 15, 4), float32], int32, Tensor[(1200), bool], Tensor[(336), bool], Tensor[(672), bool], Tensor[(13, 4, 14), uint8], Tensor[(728), uint8]) {
  %881 = @func_3314() /* ty=(Tensor[(16, 5, 15), bool], Tensor[(12, 3, 14), int64], Tensor[(504, 1), float64]) */;
  %882 = @func_5042() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %883 = cast(meta[relay.Constant][57] /* ty=Tensor[(1200), bool] */, dtype="bool") /* ty=Tensor[(1200), bool] */;
  %884 = cast(meta[relay.Constant][58] /* ty=Tensor[(336), bool] */, dtype="bool") /* ty=Tensor[(336), bool] */;
  %885 = cast(%var_7210, dtype="bool") /* ty=Tensor[(672), bool] */;
  %886 = reshape(%883, newshape=[16, 5, 15]) /* ty=Tensor[(16, 5, 15), bool] */;
  %887 = reshape(%884, newshape=[336]) /* ty=Tensor[(336), bool] */;
  %888 = reshape(%885, newshape=[56, 12]) /* ty=Tensor[(56, 12), bool] */;
  %889 = @func_4275(%886, %887, %888) /* ty=(Tensor[(16, 5, 15), bool], Tensor[(7, 16, 3), bool], Tensor[(336), bool], int32, Tensor[(56, 12), bool], Tensor[(8, 15, 4), float64], Tensor[(12, 16, 6), uint64], Tensor[(24, 48), uint64], Tensor[(8, 15, 4), float64]) */;
  %890 = cast(%var_7220, dtype="uint8") /* ty=Tensor[(728), uint8] */;
  %891 = cast(%var_7220, dtype="uint8") /* ty=Tensor[(728), uint8] */;
  %892 = reshape(%890, newshape=[13, 4, 14]) /* ty=Tensor[(13, 4, 14), uint8] */;
  %893 = reshape(%891, newshape=[13, 4, 14]) /* ty=Tensor[(13, 4, 14), uint8] */;
  %894 = @func_7141(%892, %893) /* ty=(Tensor[(13, 4, 14), uint8],) */;
  %895 = %881.1;
  %896 = %882.0;
  %897 = %889.3;
  %898 = %894.0;
  (%895, %896, %897, meta[relay.Constant][57] /* ty=Tensor[(1200), bool] */, meta[relay.Constant][58] /* ty=Tensor[(336), bool] */, %var_7210, %898, %var_7220)
}

def @func_7913() -> Tensor[(8, 15, 4), float32] {
  %899 = @func_3130() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %899.0
}

def @func_6243() -> (Tensor[(16, 5, 15), bool],) {
  %900 = @func_4504() /* ty=(Tensor[(16, 5, 15), bool],) */;
  %901 = %900.0;
  (%901,)
}

def @func_6717() -> Tensor[(14, 14, 10), uint16] {
  %902 = cast(meta[relay.Constant][59] /* ty=Tensor[(14, 14, 1), uint16] */, dtype="uint16") /* ty=Tensor[(14, 14, 1), uint16] */;
  %903 = cast(meta[relay.Constant][60] /* ty=Tensor[(14, 14, 10), uint16] */, dtype="uint16") /* ty=Tensor[(14, 14, 10), uint16] */;
  maximum(%902, %903) /* ty=Tensor[(14, 14, 10), uint16] */
}

def @func_12850() -> (Tensor[(8, 15, 4), float32],) {
  %904 = @func_8565() /* ty=Tensor[(8, 15, 4), float32] */;
  (%904,)
}

def @func_11365(%var_11357: int16) -> (Tensor[(12, 4, 1), int16],) {
  %905 = cast(%var_11357, dtype="int16") /* ty=int16 */;
  %906 = cast(meta[relay.Constant][61] /* ty=Tensor[(12, 4, 1), int16] */, dtype="int16") /* ty=Tensor[(12, 4, 1), int16] */;
  %907 = bitwise_and(%905, %906) /* ty=Tensor[(12, 4, 1), int16] */;
  (%907,)
}

def @func_6643() -> (Tensor[(8, 15, 4), float64], Tensor[(1350), float32], Tensor[(9, 15, 10), float32]) {
  %908 = cast(meta[relay.Constant][62] /* ty=Tensor[(1350), float32] */, dtype="float32") /* ty=Tensor[(1350), float32] */;
  %909 = cast(meta[relay.Constant][62] /* ty=Tensor[(1350), float32] */, dtype="float32") /* ty=Tensor[(1350), float32] */;
  %910 = reshape(%908, newshape=[9, 15, 10]) /* ty=Tensor[(9, 15, 10), float32] */;
  %911 = reshape(%909, newshape=[9, 15, 10]) /* ty=Tensor[(9, 15, 10), float32] */;
  %912 = @func_2874(%910, %911) /* ty=(Tensor[(9, 15, 10), float32],) */;
  %913 = %912.0;
  %914 = cast(%913, dtype="float32") /* ty=Tensor[(9, 15, 10), float32] */;
  %915 = @func_5625() /* ty=Tensor[(8, 15, 4), float64] */;
  %916 = sin(%914) /* ty=Tensor[(9, 15, 10), float32] */;
  (%915, meta[relay.Constant][62] /* ty=Tensor[(1350), float32] */, %916)
}

def @func_7858() -> (Tensor[(8, 15, 4), float64], Tensor[(8, 15, 4), int64]) {
  %917 = @func_5012() /* ty=(Tensor[(16, 5, 15), bool], Tensor[(12, 16, 6), uint64], Tensor[(1152), uint64], Tensor[(8, 15, 4), float64]) */;
  %918 = %917.3;
  %919 = cast(%918, dtype="float64") /* ty=Tensor[(8, 15, 4), float64] */;
  %920 = reshape(%919, newshape=[8, 15, 4]) /* ty=Tensor[(8, 15, 4), float64] */;
  %921 = @func_5560(%920) /* ty=(Tensor[(672), bool], Tensor[(90), float64], Tensor[(1152), uint64], Tensor[(8, 15, 4), int64]) */;
  %922 = %921.3;
  (%918, %922)
}

def @func_11351() -> (Tensor[(504), float64], Tensor[(728), uint8], Tensor[(90), float64], Tensor[(12, 16, 6), bool], Tensor[(90), float64], Tensor[(13, 16, 7), float32], Tensor[(8, 15, 4), float32]) {
  %923 = @func_8167() /* ty=(Tensor[(8, 15, 4), float32], Tensor[(504), float64]) */;
  %924 = cast(meta[relay.Constant][63] /* ty=Tensor[(728), uint8] */, dtype="uint8") /* ty=Tensor[(728), uint8] */;
  %925 = cast(meta[relay.Constant][64] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
  %926 = cast(meta[relay.Constant][65] /* ty=Tensor[(1152), uint64] */, dtype="uint64") /* ty=Tensor[(1152), uint64] */;
  %927 = reshape(%924, newshape=[728]) /* ty=Tensor[(728), uint8] */;
  %928 = reshape(%925, newshape=[90]) /* ty=Tensor[(90), float64] */;
  %929 = reshape(%926, newshape=[1152]) /* ty=Tensor[(1152), uint64] */;
  %930 = @func_5738(%927, %928, %929) /* ty=(Tensor[(8, 15, 4), float64], Tensor[(14, 9, 12), float64], Tensor[(728), uint8], Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), bool], Tensor[(15, 6), float64], Tensor[(90), float64], Tensor[(1152), uint64], Tensor[(8, 15, 4), float32], Tensor[(12, 16, 6), float64]) */;
  %931 = %930.9;
  %932 = cast(meta[relay.Constant][65] /* ty=Tensor[(1152), uint64] */, dtype="bool") /* ty=Tensor[(1152), bool] */;
  %933 = shape_of(%931, dtype="int32") /* ty=Tensor[(3), int32] */;
  %934 = cast(%931, dtype="bool") /* ty=Tensor[(12, 16, 6), bool] */;
  %935 = dyn.reshape(%932, %933, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %936 = cast(meta[relay.Constant][64] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
  %937 = reshape(%936, newshape=[90]) /* ty=Tensor[(90), float64] */;
  %938 = @func_7731(%937) /* ty=(Tensor[(504), float64], Tensor[(90), float64], Tensor[(90), float64]) */;
  %939 = @func_10722() /* ty=(Tensor[(8, 15, 4), float32], Tensor[(13, 16, 7), float32], Tensor[(1456), float64]) */;
  %940 = %923.1;
  %941 = less_equal(%934, %935) /* ty=Tensor[(12, 16, 6), bool] */;
  %942 = %938.2;
  %943 = %939.1;
  %944 = @func_8535() /* ty=Tensor[(8, 15, 4), float32] */;
  (%940, meta[relay.Constant][63] /* ty=Tensor[(728), uint8] */, meta[relay.Constant][64] /* ty=Tensor[(90), float64] */, %941, %942, %943, %944)
}

def @func_10604(%var_10550: Tensor[(42), bool], %var_10556: Tensor[(1152), uint64], %var_10585: Tensor[(360), float64], %var_10586: Tensor[(462, 2), float64]) -> (Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float64], bool, Tensor[(42), bool], Tensor[(12, 16, 6), uint64], Tensor[(1152), uint64], Tensor[(9, 10, 4), float64], Tensor[(360), float64], Tensor[(462, 2), float64], Tensor[(14, 14, 10), float32], Tensor[(16, 5, 15), bool]) {
  %945 = @func_7430() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %946 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %947 = cast(%var_10550, dtype="bool") /* ty=Tensor[(42), bool] */;
  %948 = %945.0;
  %949 = cast(%948, dtype="float32") /* ty=Tensor[(8, 15, 4), float32] */;
  %950 = cast(%var_10550, dtype="bool") /* ty=Tensor[(42), bool] */;
  %951 = cast(%948, dtype="float32") /* ty=Tensor[(8, 15, 4), float32] */;
  %952 = reshape(%946, newshape=[]) /* ty=bool */;
  %953 = reshape(%947, newshape=[6, 1, 7]) /* ty=Tensor[(6, 1, 7), bool] */;
  %954 = reshape(%949, newshape=[120, 4]) /* ty=Tensor[(120, 4), float32] */;
  %955 = reshape(%950, newshape=[6, 1, 7]) /* ty=Tensor[(6, 1, 7), bool] */;
  %956 = reshape(%951, newshape=[8, 15, 4]) /* ty=Tensor[(8, 15, 4), float32] */;
  %957 = @func_4895(%952, %953, %954, %955, %956) /* ty=(Tensor[(8, 15, 4), float64], Tensor[(120, 4), float64], Tensor[(6, ?, 7), bool], Tensor[(8, 15, 4), float32]) */;
  %958 = cast(%var_10556, dtype="uint64") /* ty=Tensor[(1152), uint64] */;
  %959 = cast(%var_10556, dtype="uint64") /* ty=Tensor[(1152), uint64] */;
  %960 = reshape(%958, newshape=[12, 16, 6]) /* ty=Tensor[(12, 16, 6), uint64] */;
  %961 = reshape(%959, newshape=[12, 16, 6]) /* ty=Tensor[(12, 16, 6), uint64] */;
  %962 = cast(%var_10585, dtype="float64") /* ty=Tensor[(360), float64] */;
  %963 = cast(%var_10586, dtype="float64") /* ty=Tensor[(462, 2), float64] */;
  %964 = reshape(%962, newshape=[9, 10, 4]) /* ty=Tensor[(9, 10, 4), float64] */;
  %965 = reshape(%963, newshape=[154, 6]) /* ty=Tensor[(154, 6), float64] */;
  %966 = @func_1280(%964, %965) /* ty=(Tensor[(9, 10, 4), float64], Tensor[(154, 6), bool]) */;
  %967 = @func_9615() /* ty=(Tensor[(16, 5, 15), bool], Tensor[(14, 14, 10), float32]) */;
  %968 = @func_7482() /* ty=(Tensor[(16, 5, 15), bool], Tensor[(16, 5, 15), bool]) */;
  %969 = %957.0;
  %970 = @func_2152(%960, %961) /* ty=Tensor[(12, 16, 6), uint64] */;
  %971 = %966.0;
  %972 = %967.1;
  %973 = %968.0;
  (%948, %969, False /* ty=bool */, %var_10550, %970, %var_10556, %971, %var_10585, %var_10586, %972, %973)
}

def @func_12771() -> (Tensor[(1200, 1), bool], Tensor[(16, 5, 15), bool]) {
  %974 = @func_11861() /* ty=(Tensor[(8, 15, 4), float64], Tensor[(16, 5, 15), bool], Tensor[(1200, 1), bool]) */;
  %975 = @func_4162() /* ty=(Tensor[(16, 5, 15), bool],) */;
  %976 = %974.2;
  %977 = %975.0;
  (%976, %977)
}

def @func_4275(%var_4218: Tensor[(16, 5, 15), bool], %var_4231: Tensor[(336), bool], %var_4233: Tensor[(56, 12), bool]) -> (Tensor[(16, 5, 15), bool], Tensor[(7, 16, 3), bool], Tensor[(336), bool], int32, Tensor[(56, 12), bool], Tensor[(8, 15, 4), float64], Tensor[(12, 16, 6), uint64], Tensor[(24, 48), uint64], Tensor[(8, 15, 4), float64]) {
  %978 = @func_4162() /* ty=(Tensor[(16, 5, 15), bool],) */;
  %979 = %978.0;
  %980 = cast(%var_4218, dtype="bool") /* ty=Tensor[(16, 5, 15), bool] */;
  %981 = shape_of(%979, dtype="int32") /* ty=Tensor[(3), int32] */;
  %982 = cast(%979, dtype="bool") /* ty=Tensor[(16, 5, 15), bool] */;
  %983 = dyn.reshape(%980, %981, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %984 = cast(%var_4231, dtype="bool") /* ty=Tensor[(336), bool] */;
  %985 = cast(9 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %986 = cast(%var_4233, dtype="bool") /* ty=Tensor[(56, 12), bool] */;
  %987 = reshape(%984, newshape=[7, 16, 3]) /* ty=Tensor[(7, 16, 3), bool] */;
  %988 = reshape(%985, newshape=[]) /* ty=int32 */;
  %989 = reshape(%986, newshape=[14, 16, 3]) /* ty=Tensor[(14, 16, 3), bool] */;
  %990 = @func_2477(%987, %988, %989) /* ty=(Tensor[(7, 16, 3), bool], Tensor[(14, 12, 2), bool], int32, Tensor[(14, 16, 3), bool]) */;
  %991 = cast(meta[relay.Constant][66] /* ty=Tensor[(24, 48), uint64] */, dtype="uint64") /* ty=Tensor[(24, 48), uint64] */;
  %992 = cast(meta[relay.Constant][66] /* ty=Tensor[(24, 48), uint64] */, dtype="uint64") /* ty=Tensor[(24, 48), uint64] */;
  %993 = reshape(%991, newshape=[12, 16, 6]) /* ty=Tensor[(12, 16, 6), uint64] */;
  %994 = reshape(%992, newshape=[12, 16, 6]) /* ty=Tensor[(12, 16, 6), uint64] */;
  %995 = @func_4068() /* ty=(Tensor[(8, 15, 4), float64], Tensor[(12, 16, 6), uint64], Tensor[(1152), uint64]) */;
  %996 = logical_or(%982, %983) /* ty=Tensor[(16, 5, 15), bool] */;
  %997 = %990.0;
  %998 = @func_3536() /* ty=Tensor[(8, 15, 4), float64] */;
  %999 = @func_2152(%993, %994) /* ty=Tensor[(12, 16, 6), uint64] */;
  %1000 = %995.0;
  (%996, %997, %var_4231, 9 /* ty=int32 */, %var_4233, %998, %999, meta[relay.Constant][66] /* ty=Tensor[(24, 48), uint64] */, %1000)
}

def @func_10834(%var_10826: Tensor[(1456), float64]) -> (Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float64], Tensor[(924), float64], Tensor[(8, 15, 4), float32], Tensor[(1456), float64]) {
  %1001 = cast(meta[relay.Constant][67] /* ty=Tensor[(924), float64] */, dtype="float64") /* ty=Tensor[(924), float64] */;
  %1002 = reshape(%1001, newshape=[462, 2]) /* ty=Tensor[(462, 2), float64] */;
  %1003 = @func_8784(%1002) /* ty=(Tensor[(16, 5, 15), bool], Tensor[(8, 15, 4), float64], Tensor[(462, 2), float64]) */;
  %1004 = cast(%var_10826, dtype="float64") /* ty=Tensor[(1456), float64] */;
  %1005 = reshape(%1004, newshape=[13, 16, 7]) /* ty=Tensor[(13, 16, 7), float64] */;
  %1006 = @func_9319(%1005) /* ty=(Tensor[(13, 16, 7), float32], Tensor[(13, 16, 7), uint16], Tensor[(8, 15, 4), float32]) */;
  %1007 = @func_3759() /* ty=Tensor[(8, 15, 4), float32] */;
  %1008 = %1003.1;
  %1009 = %1006.2;
  (%1007, %1008, meta[relay.Constant][67] /* ty=Tensor[(924), float64] */, %1009, %var_10826)
}

def @func_6592() -> (Tensor[(12, 16, 6), uint64], Tensor[(11, 12, 7), int16], int16, Tensor[(1, 924), int16]) {
  %1010 = @func_4068() /* ty=(Tensor[(8, 15, 4), float64], Tensor[(12, 16, 6), uint64], Tensor[(1152), uint64]) */;
  %1011 = cast(meta[relay.Constant][68] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %1012 = cast(meta[relay.Constant][69] /* ty=Tensor[(1, 924), int16] */, dtype="int16") /* ty=Tensor[(1, 924), int16] */;
  %1013 = reshape(%1011, newshape=[]) /* ty=int16 */;
  %1014 = reshape(%1012, newshape=[11, 12, 7]) /* ty=Tensor[(11, 12, 7), int16] */;
  %1015 = %1010.1;
  %1016 = @func_4696(%1013, %1014) /* ty=Tensor[(11, 12, 7), int16] */;
  (%1015, %1016, meta[relay.Constant][68] /* ty=int16 */, meta[relay.Constant][69] /* ty=Tensor[(1, 924), int16] */)
}

def @func_9261() -> Tensor[(8, 15, 4), float32] {
  %1017 = @func_5927() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %1017.0
}

def @func_3130() -> (Tensor[(8, 15, 4), float32],) {
  %1018 = cast(meta[relay.Constant][70] /* ty=Tensor[(8, 15, 4), float32] */, dtype="float32") /* ty=Tensor[(8, 15, 4), float32] */;
  %1019 = cos(%1018) /* ty=Tensor[(8, 15, 4), float32] */;
  (%1019,)
}

def @func_5151() -> (Tensor[(8, 15, 4), float32],) {
  %1020 = @func_4634() /* ty=(Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float32]) */;
  %1021 = %1020.0;
  (%1021,)
}

def @func_4139(%var_4123: Tensor[(8, 15, 4), float32]) -> (Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), bool]) {
  %1022 = @func_3130() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %1023 = %1022.0;
  %1024 = cast(%var_4123, dtype="float32") /* ty=Tensor[(8, 15, 4), float32] */;
  %1025 = shape_of(%1023, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1026 = cast(%1023, dtype="float32") /* ty=Tensor[(8, 15, 4), float32] */;
  %1027 = dyn.reshape(%1024, %1025, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1028 = divide(%1026, %1027) /* ty=Tensor[(8, 15, 4), float32] */;
  %1029 = @func_3896() /* ty=Tensor[(8, 15, 4), bool] */;
  (%1028, %1029)
}

def @func_3727(%var_3645: Tensor[(1, 10, 9), float64], %var_3670: Tensor[(11, 10, 9), float64], %var_3686: Tensor[(1512), float64], %var_3687: Tensor[(4, 84), bool], %var_3688: Tensor[(672), bool], %var_3713: Tensor[(1152), uint64]) -> (Tensor[(?, 10, 9), bool], Tensor[(672), bool], Tensor[(1512), float64], Tensor[(4, 84), bool], Tensor[(672), bool], Tensor[(336), bool], Tensor[(11, 10, 9), float32], Tensor[(12, 16, 6), uint64], Tensor[(1152), uint64]) {
  %1030 = cast(%var_3645, dtype="float64") /* ty=Tensor[(1, 10, 9), float64] */;
  %1031 = exp(%1030) /* ty=Tensor[(1, 10, 9), float64] */;
  %1032 = cast(%1031, dtype="float32") /* ty=Tensor[(1, 10, 9), float32] */;
  %1033 = shape_of(%var_3645, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1034 = cast(%var_3645, dtype="float32") /* ty=Tensor[(1, 10, 9), float32] */;
  %1035 = dyn.reshape(%1032, %1033, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1036 = add(%1034, %1035) /* ty=Tensor[(?, 10, 9), float32] */;
  %1037 = cast(%1031, dtype="bool") /* ty=Tensor[(1, 10, 9), bool] */;
  %1038 = shape_of(%1036, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1039 = cast(%1036, dtype="bool") /* ty=Tensor[(?, 10, 9), bool] */;
  %1040 = dyn.reshape(%1037, %1038, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1041 = cast(%var_3686, dtype="float64") /* ty=Tensor[(1512), float64] */;
  %1042 = cast(%var_3687, dtype="bool") /* ty=Tensor[(4, 84), bool] */;
  %1043 = cast(%var_3688, dtype="bool") /* ty=Tensor[(672), bool] */;
  %1044 = reshape(%1041, newshape=[14, 9, 12]) /* ty=Tensor[(14, 9, 12), float64] */;
  %1045 = reshape(%1042, newshape=[336]) /* ty=Tensor[(336), bool] */;
  %1046 = reshape(%1043, newshape=[672]) /* ty=Tensor[(672), bool] */;
  %1047 = @func_3391(%1044, %1045, %1046) /* ty=(Tensor[(728), uint8], Tensor[(14, 9, 12), int16], Tensor[(8, 15, 4), float64], Tensor[(14, 12, 2), bool], Tensor[(336), bool], int32, Tensor[(672), bool]) */;
  %1048 = cast(%var_3686, dtype="float64") /* ty=Tensor[(1512), float64] */;
  %1049 = cast(%var_3687, dtype="bool") /* ty=Tensor[(4, 84), bool] */;
  %1050 = %1047.6;
  %1051 = cast(%1050, dtype="bool") /* ty=Tensor[(672), bool] */;
  %1052 = reshape(%1048, newshape=[14, 9, 12]) /* ty=Tensor[(14, 9, 12), float64] */;
  %1053 = reshape(%1049, newshape=[336]) /* ty=Tensor[(336), bool] */;
  %1054 = reshape(%1051, newshape=[672]) /* ty=Tensor[(672), bool] */;
  %1055 = @func_3391(%1052, %1053, %1054) /* ty=(Tensor[(728), uint8], Tensor[(14, 9, 12), int16], Tensor[(8, 15, 4), float64], Tensor[(14, 12, 2), bool], Tensor[(336), bool], int32, Tensor[(672), bool]) */;
  %1056 = cast(%1031, dtype="uint16") /* ty=Tensor[(1, 10, 9), uint16] */;
  %1057 = cast(%var_3670, dtype="uint16") /* ty=Tensor[(11, 10, 9), uint16] */;
  %1058 = multiply(%1056, %1057) /* ty=Tensor[(11, 10, 9), uint16] */;
  %1059 = cast(%1058, dtype="float32") /* ty=Tensor[(11, 10, 9), float32] */;
  %1060 = cast(%var_3645, dtype="float32") /* ty=Tensor[(1, 10, 9), float32] */;
  %1061 = floor_mod(%1059, %1060) /* ty=Tensor[(11, 10, 9), float32] */;
  %1062 = cast(%1061, dtype="float32") /* ty=Tensor[(11, 10, 9), float32] */;
  %1063 = cast(%var_3713, dtype="uint64") /* ty=Tensor[(1152), uint64] */;
  %1064 = cast(%var_3713, dtype="uint64") /* ty=Tensor[(1152), uint64] */;
  %1065 = reshape(%1063, newshape=[12, 16, 6]) /* ty=Tensor[(12, 16, 6), uint64] */;
  %1066 = reshape(%1064, newshape=[12, 16, 6]) /* ty=Tensor[(12, 16, 6), uint64] */;
  %1067 = less_equal(%1039, %1040) /* ty=Tensor[(?, 10, 9), bool] */;
  %1068 = %1055.4;
  %1069 = cosh(%1062) /* ty=Tensor[(11, 10, 9), float32] */;
  %1070 = @func_2152(%1065, %1066) /* ty=Tensor[(12, 16, 6), uint64] */;
  (%1067, %1050, %var_3686, %var_3687, %var_3688, %1068, %1069, %1070, %var_3713)
}

def @func_4162() -> (Tensor[(16, 5, 15), bool],) {
  %1071 = @func_3314() /* ty=(Tensor[(16, 5, 15), bool], Tensor[(12, 3, 14), int64], Tensor[(504, 1), float64]) */;
  %1072 = %1071.0;
  %1073 = cast(meta[relay.Constant][71] /* ty=Tensor[(16, 5, 15), bool] */, dtype="bool") /* ty=Tensor[(16, 5, 15), bool] */;
  %1074 = shape_of(%1072, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1075 = cast(%1072, dtype="bool") /* ty=Tensor[(16, 5, 15), bool] */;
  %1076 = dyn.reshape(%1073, %1074, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1077 = less_equal(%1075, %1076) /* ty=Tensor[(16, 5, 15), bool] */;
  (%1077,)
}

def @func_10992() -> (Tensor[(12, 16, 6), float64], Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), int64], Tensor[(8, 15, 4), float64], Tensor[(12, 16, 6), float64]) {
  %1078 = @func_7596() /* ty=(Tensor[(12, 16, 6), float64], Tensor[(14, 14, 10), float64]) */;
  %1079 = %1078.0;
  %1080 = cast(meta[relay.Constant][72] /* ty=Tensor[(12, 16, 6), float64] */, dtype="float64") /* ty=Tensor[(12, 16, 6), float64] */;
  %1081 = shape_of(%1079, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1082 = cast(%1079, dtype="float64") /* ty=Tensor[(12, 16, 6), float64] */;
  %1083 = dyn.reshape(%1080, %1081, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1084 = @func_9374() /* ty=(Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float64], Tensor[(8, 15, 4), float32]) */;
  %1085 = @func_7858() /* ty=(Tensor[(8, 15, 4), float64], Tensor[(8, 15, 4), int64]) */;
  %1086 = @func_5012() /* ty=(Tensor[(16, 5, 15), bool], Tensor[(12, 16, 6), uint64], Tensor[(1152), uint64], Tensor[(8, 15, 4), float64]) */;
  %1087 = cast(%1079, dtype="float64") /* ty=Tensor[(12, 16, 6), float64] */;
  %1088 = mod(%1082, %1083) /* ty=Tensor[(12, 16, 6), float64] */;
  %1089 = %1084.0;
  %1090 = %1085.1;
  %1091 = %1086.3;
  %1092 = atan(%1087) /* ty=Tensor[(12, 16, 6), float64] */;
  (%1088, %1089, %1090, %1091, %1092)
}

def @func_8167() -> (Tensor[(8, 15, 4), float32], Tensor[(504), float64]) {
  %1093 = @func_4417() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %1094 = @func_6094() /* ty=(Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float64], Tensor[(12, 3, 14), bool], Tensor[(504), float64]) */;
  %1095 = %1093.0;
  %1096 = %1094.4;
  (%1095, %1096)
}

def @func_10895(%var_10884: Tensor[(8, 15, 4), float64], %var_10890: Tensor[(360), float64]) -> (Tensor[(14, 14, 10), float32], Tensor[(8, 15, 4), int8], Tensor[(9, 10, 4), float64], Tensor[(360), float64], Tensor[(924, 1), float64]) {
  %1097 = @func_10633() /* ty=(Tensor[(14, 14, 10), float32],) */;
  %1098 = @func_3536() /* ty=Tensor[(8, 15, 4), float64] */;
  %1099 = cast(%var_10884, dtype="int8") /* ty=Tensor[(8, 15, 4), int8] */;
  %1100 = shape_of(%1098, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1101 = cast(%1098, dtype="int8") /* ty=Tensor[(8, 15, 4), int8] */;
  %1102 = dyn.reshape(%1099, %1100, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1103 = cast(%var_10890, dtype="float64") /* ty=Tensor[(360), float64] */;
  %1104 = cast(meta[relay.Constant][73] /* ty=Tensor[(924, 1), float64] */, dtype="float64") /* ty=Tensor[(924, 1), float64] */;
  %1105 = reshape(%1103, newshape=[9, 10, 4]) /* ty=Tensor[(9, 10, 4), float64] */;
  %1106 = reshape(%1104, newshape=[154, 6]) /* ty=Tensor[(154, 6), float64] */;
  %1107 = @func_1280(%1105, %1106) /* ty=(Tensor[(9, 10, 4), float64], Tensor[(154, 6), bool]) */;
  %1108 = %1097.0;
  %1109 = bitwise_xor(%1101, %1102) /* ty=Tensor[(8, 15, 4), int8] */;
  %1110 = %1107.0;
  (%1108, %1109, %1110, %var_10890, meta[relay.Constant][73] /* ty=Tensor[(924, 1), float64] */)
}

def @func_5042() -> (Tensor[(8, 15, 4), float32],) {
  %1111 = @func_4962() /* ty=Tensor[(8, 15, 4), float32] */;
  (%1111,)
}

def @func_10848(%var_10838: Tensor[(9, 7, 3), int64], %var_10839: Tensor[(9, 7, 3), int64]) -> (Tensor[(9, 7, 3), int64], Tensor[(11, 4, 12), float64]) {
  %1112 = cast(%var_10839, dtype="int64") /* ty=Tensor[(9, 7, 3), int64] */;
  %1113 = shape_of(%var_10838, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1114 = cast(%var_10838, dtype="int64") /* ty=Tensor[(9, 7, 3), int64] */;
  %1115 = dyn.reshape(%1112, %1113, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1116 = @func_10306() /* ty=(Tensor[(11, 4, 12), float64],) */;
  %1117 = multiply(%1114, %1115) /* ty=Tensor[(9, 7, 3), int64] */;
  %1118 = %1116.0;
  (%1117, %1118)
}

def @func_11974(%var_11963: Tensor[(1512), float64], %var_11964: Tensor[(336), bool]) -> (Tensor[(8, 15, 4), float64], Tensor[(336), bool], Tensor[(1512), float64], Tensor[(336), bool], Tensor[(672), bool], Tensor[(8, 15, 4), float32]) {
  %1119 = @func_9564() /* ty=(Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float64], Tensor[(8, 15, 4), float64]) */;
  %1120 = cast(%var_11963, dtype="float64") /* ty=Tensor[(1512), float64] */;
  %1121 = cast(%var_11964, dtype="bool") /* ty=Tensor[(336), bool] */;
  %1122 = cast(meta[relay.Constant][74] /* ty=Tensor[(672), bool] */, dtype="bool") /* ty=Tensor[(672), bool] */;
  %1123 = reshape(%1120, newshape=[14, 9, 12]) /* ty=Tensor[(14, 9, 12), float64] */;
  %1124 = reshape(%1121, newshape=[336]) /* ty=Tensor[(336), bool] */;
  %1125 = reshape(%1122, newshape=[672]) /* ty=Tensor[(672), bool] */;
  %1126 = @func_3391(%1123, %1124, %1125) /* ty=(Tensor[(728), uint8], Tensor[(14, 9, 12), int16], Tensor[(8, 15, 4), float64], Tensor[(14, 12, 2), bool], Tensor[(336), bool], int32, Tensor[(672), bool]) */;
  %1127 = %1119.2;
  %1128 = %1126.4;
  %1129 = @func_8535() /* ty=Tensor[(8, 15, 4), float32] */;
  (%1127, %1128, %var_11963, %var_11964, meta[relay.Constant][74] /* ty=Tensor[(672), bool] */, %1129)
}

def @func_4743() -> (Tensor[(12, 16, 6), float64],) {
  %1130 = @func_4068() /* ty=(Tensor[(8, 15, 4), float64], Tensor[(12, 16, 6), uint64], Tensor[(1152), uint64]) */;
  %1131 = %1130.1;
  %1132 = cast(%1131, dtype="float64") /* ty=Tensor[(12, 16, 6), float64] */;
  %1133 = sinh(%1132) /* ty=Tensor[(12, 16, 6), float64] */;
  (%1133,)
}

def @func_8087(%var_8080: Tensor[(10, 7, 4), int8]) -> (Tensor[(10, 7, 4), int8],) {
  %1134 = cast(meta[relay.Constant][75] /* ty=Tensor[(1, 7, 4), int8] */, dtype="int8") /* ty=Tensor[(1, 7, 4), int8] */;
  %1135 = cast(%var_8080, dtype="int8") /* ty=Tensor[(10, 7, 4), int8] */;
  %1136 = minimum(%1134, %1135) /* ty=Tensor[(10, 7, 4), int8] */;
  (%1136,)
}

def @func_8535() -> Tensor[(8, 15, 4), float32] {
  %1137 = @func_6838() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %1137.0
}

def @func_9146(%var_9136: uint16, %var_9137: Tensor[(8, 12, 11), uint16]) -> (Tensor[(8, 12, 11), bool], Tensor[(16, 5, 15), bool]) {
  %1138 = cast(%var_9136, dtype="bool") /* ty=bool */;
  %1139 = cast(%var_9137, dtype="bool") /* ty=Tensor[(8, 12, 11), bool] */;
  %1140 = greater_equal(%1138, %1139) /* ty=Tensor[(8, 12, 11), bool] */;
  %1141 = @func_7279() /* ty=Tensor[(16, 5, 15), bool] */;
  (%1140, %1141)
}

def @func_10096() -> Tensor[(8, 15, 4), bool] {
  @func_3896() /* ty=Tensor[(8, 15, 4), bool] */
}

def @func_8808() -> (Tensor[(8, 15, 4), float32],) {
  %1142 = @func_6838() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %1143 = %1142.0;
  (%1143,)
}

def @func_2874(%var_2869: Tensor[(9, 15, 10), float32], %var_2870: Tensor[(9, 15, 10), float32]) -> (Tensor[(9, 15, 10), float32],) {
  %1144 = cast(%var_2870, dtype="float32") /* ty=Tensor[(9, 15, 10), float32] */;
  %1145 = shape_of(%var_2869, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1146 = cast(%var_2869, dtype="float32") /* ty=Tensor[(9, 15, 10), float32] */;
  %1147 = dyn.reshape(%1144, %1145, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1148 = mod(%1146, %1147) /* ty=Tensor[(9, 15, 10), float32] */;
  (%1148,)
}

def @func_4068() -> (Tensor[(8, 15, 4), float64], Tensor[(12, 16, 6), uint64], Tensor[(1152), uint64]) {
  %1149 = cast(meta[relay.Constant][76] /* ty=Tensor[(1152), uint64] */, dtype="uint64") /* ty=Tensor[(1152), uint64] */;
  %1150 = cast(meta[relay.Constant][76] /* ty=Tensor[(1152), uint64] */, dtype="uint64") /* ty=Tensor[(1152), uint64] */;
  %1151 = reshape(%1149, newshape=[12, 16, 6]) /* ty=Tensor[(12, 16, 6), uint64] */;
  %1152 = reshape(%1150, newshape=[12, 16, 6]) /* ty=Tensor[(12, 16, 6), uint64] */;
  %1153 = @func_3536() /* ty=Tensor[(8, 15, 4), float64] */;
  %1154 = @func_2152(%1151, %1152) /* ty=Tensor[(12, 16, 6), uint64] */;
  (%1153, %1154, meta[relay.Constant][76] /* ty=Tensor[(1152), uint64] */)
}

def @func_12294() -> Tensor[(8, 15, 4), float32] {
  %1155 = @func_5151() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %1155.0
}

def @func_4417() -> (Tensor[(8, 15, 4), float32],) {
  %1156 = @func_3759() /* ty=Tensor[(8, 15, 4), float32] */;
  (%1156,)
}

def @func_3391(%var_3367: Tensor[(14, 9, 12), float64], %var_3383: Tensor[(336), bool], %var_3385: Tensor[(672), bool]) -> (Tensor[(728), uint8], Tensor[(14, 9, 12), int16], Tensor[(8, 15, 4), float64], Tensor[(14, 12, 2), bool], Tensor[(336), bool], int32, Tensor[(672), bool]) {
  %1157 = cast(meta[relay.Constant][77] /* ty=Tensor[(728), uint8] */, dtype="uint8") /* ty=Tensor[(728), uint8] */;
  %1158 = cast(meta[relay.Constant][77] /* ty=Tensor[(728), uint8] */, dtype="uint8") /* ty=Tensor[(728), uint8] */;
  %1159 = reshape(%1157, newshape=[13, 4, 14]) /* ty=Tensor[(13, 4, 14), uint8] */;
  %1160 = reshape(%1158, newshape=[13, 4, 14]) /* ty=Tensor[(13, 4, 14), uint8] */;
  %1161 = @func_546(%1159, %1160) /* ty=(Tensor[(13, 4, 14), uint8], Tensor[(14, 9, 12), float64], Tensor[(1512), float64], Tensor[(14, 9, 12), float64], Tensor[(14, 9, 12), float64], Tensor[(14, 9, 12), float64]) */;
  %1162 = %1161.1;
  %1163 = cast(%var_3367, dtype="int16") /* ty=Tensor[(14, 9, 12), int16] */;
  %1164 = shape_of(%1162, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1165 = cast(%1162, dtype="int16") /* ty=Tensor[(14, 9, 12), int16] */;
  %1166 = dyn.reshape(%1163, %1164, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1167 = @func_3274() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %1168 = %1167.0;
  %1169 = cast(%1168, dtype="float64") /* ty=Tensor[(8, 15, 4), float64] */;
  %1170 = cast(%var_3383, dtype="bool") /* ty=Tensor[(336), bool] */;
  %1171 = cast(3 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %1172 = cast(%var_3385, dtype="bool") /* ty=Tensor[(672), bool] */;
  %1173 = reshape(%1170, newshape=[7, 16, 3]) /* ty=Tensor[(7, 16, 3), bool] */;
  %1174 = reshape(%1171, newshape=[]) /* ty=int32 */;
  %1175 = reshape(%1172, newshape=[14, 16, 3]) /* ty=Tensor[(14, 16, 3), bool] */;
  %1176 = @func_2477(%1173, %1174, %1175) /* ty=(Tensor[(7, 16, 3), bool], Tensor[(14, 12, 2), bool], int32, Tensor[(14, 16, 3), bool]) */;
  %1177 = right_shift(%1165, %1166) /* ty=Tensor[(14, 9, 12), int16] */;
  %1178 = erf(%1169) /* ty=Tensor[(8, 15, 4), float64] */;
  %1179 = %1176.1;
  (meta[relay.Constant][77] /* ty=Tensor[(728), uint8] */, %1177, %1178, %1179, %var_3383, 3 /* ty=int32 */, %var_3385)
}

def @func_6387() -> Tensor[(504), float64] {
  %1180 = @func_6094() /* ty=(Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float64], Tensor[(12, 3, 14), bool], Tensor[(504), float64]) */;
  %1180.4
}

def @func_7141(%var_7134: Tensor[(13, 4, 14), uint8], %var_7135: Tensor[(13, 4, 14), uint8]) -> (Tensor[(13, 4, 14), uint8],) {
  %1181 = cast(%var_7135, dtype="uint8") /* ty=Tensor[(13, 4, 14), uint8] */;
  %1182 = shape_of(%var_7134, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1183 = cast(%var_7134, dtype="uint8") /* ty=Tensor[(13, 4, 14), uint8] */;
  %1184 = dyn.reshape(%1181, %1182, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1185 = maximum(%1183, %1184) /* ty=Tensor[(13, 4, 14), uint8] */;
  (%1185,)
}

def @func_7640() -> (Tensor[(11, 4, 12), uint16], Tensor[(16, 5, 15), bool], Tensor[(11, 4, 12), float64]) {
  %1186 = cast(meta[relay.Constant][78] /* ty=Tensor[(11, 4, 12), float32] */, dtype="float32") /* ty=Tensor[(11, 4, 12), float32] */;
  %1187 = rsqrt(%1186) /* ty=Tensor[(11, 4, 12), float32] */;
  %1188 = cast(meta[relay.Constant][78] /* ty=Tensor[(11, 4, 12), float32] */, dtype="uint16") /* ty=Tensor[(11, 4, 12), uint16] */;
  %1189 = shape_of(%1187, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1190 = cast(%1187, dtype="uint16") /* ty=Tensor[(11, 4, 12), uint16] */;
  %1191 = dyn.reshape(%1188, %1189, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1192 = @func_4475() /* ty=(Tensor[(16, 5, 15), bool], Tensor[(8, 15, 4), float32]) */;
  %1193 = cast(meta[relay.Constant][78] /* ty=Tensor[(11, 4, 12), float32] */, dtype="float64") /* ty=Tensor[(11, 4, 12), float64] */;
  %1194 = maximum(%1190, %1191) /* ty=Tensor[(11, 4, 12), uint16] */;
  %1195 = %1192.0;
  %1196 = acosh(%1193) /* ty=Tensor[(11, 4, 12), float64] */;
  (%1194, %1195, %1196)
}

def @func_11894() -> (Tensor[(16, 5, 15), int8], Tensor[(8, 15, 4), float64]) {
  %1197 = @func_9788() /* ty=(Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), uint16], Tensor[(16, 5, 15), int8], Tensor[(14, 14, 10), uint16]) */;
  %1198 = @func_9374() /* ty=(Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float64], Tensor[(8, 15, 4), float32]) */;
  %1199 = %1197.2;
  %1200 = %1198.1;
  (%1199, %1200)
}

def @func_4895(%var_4846: bool, %var_4847: Tensor[(6, 1, 7), bool], %var_4852: Tensor[(120, 4), float32], %var_4874: Tensor[(6, 1, 7), bool], %var_4885: Tensor[(8, 15, 4), float32]) -> (Tensor[(8, 15, 4), float64], Tensor[(120, 4), float64], Tensor[(6, ?, 7), bool], Tensor[(8, 15, 4), float32]) {
  %1201 = cast(%var_4846, dtype="float64") /* ty=float64 */;
  %1202 = cast(%var_4852, dtype="float64") /* ty=Tensor[(120, 4), float64] */;
  %1203 = cast(%var_4846, dtype="bool") /* ty=bool */;
  %1204 = cast(%var_4847, dtype="bool") /* ty=Tensor[(6, 1, 7), bool] */;
  %1205 = logical_or(%1203, %1204) /* ty=Tensor[(6, 1, 7), bool] */;
  %1206 = cast(%var_4874, dtype="bool") /* ty=Tensor[(6, 1, 7), bool] */;
  %1207 = shape_of(%1205, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1208 = cast(%1205, dtype="bool") /* ty=Tensor[(6, 1, 7), bool] */;
  %1209 = dyn.reshape(%1206, %1207, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1210 = cast(%var_4852, dtype="float32") /* ty=Tensor[(120, 4), float32] */;
  %1211 = reshape(%1210, newshape=[8, 15, 4]) /* ty=Tensor[(8, 15, 4), float32] */;
  %1212 = @func_4139(%1211) /* ty=(Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), bool]) */;
  %1213 = %1212.0;
  %1214 = cast(%var_4885, dtype="float32") /* ty=Tensor[(8, 15, 4), float32] */;
  %1215 = shape_of(%1213, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1216 = cast(%1213, dtype="float32") /* ty=Tensor[(8, 15, 4), float32] */;
  %1217 = dyn.reshape(%1214, %1215, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1218 = @func_3859() /* ty=Tensor[(8, 15, 4), float64] */;
  %1219 = divide(%1201, %1202) /* ty=Tensor[(120, 4), float64] */;
  %1220 = less(%1208, %1209) /* ty=Tensor[(6, ?, 7), bool] */;
  %1221 = power(%1216, %1217) /* ty=Tensor[(8, 15, 4), float32] */;
  (%1218, %1219, %1220, %1221)
}

def @func_12686(%var_12679: Tensor[(462, 2), float64]) -> (Tensor[(16, 5, 15), bool], Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float64], Tensor[(462, 2), float64]) {
  %1222 = cast(%var_12679, dtype="float64") /* ty=Tensor[(462, 2), float64] */;
  %1223 = reshape(%1222, newshape=[462, 2]) /* ty=Tensor[(462, 2), float64] */;
  %1224 = @func_8784(%1223) /* ty=(Tensor[(16, 5, 15), bool], Tensor[(8, 15, 4), float64], Tensor[(462, 2), float64]) */;
  %1225 = @func_9675() /* ty=Tensor[(16, 5, 15), bool] */;
  %1226 = @func_12294() /* ty=Tensor[(8, 15, 4), float32] */;
  %1227 = %1224.1;
  (%1225, %1226, %1227, %var_12679)
}

def @func_8816() -> (Tensor[(8, 15, 4), float32],) {
  %1228 = @func_5833() /* ty=Tensor[(8, 15, 4), float32] */;
  (%1228,)
}

def @func_7369(%var_7346: Tensor[(1200, 1), bool]) -> (Tensor[(14, 14, 10), float64], Tensor[(8, 15, 4), float32], Tensor[(16, 5, 15), float32], Tensor[(1200, 1), bool], Tensor[(13, 4, 14), uint8], Tensor[(728), uint8]) {
  %1229 = @func_6786() /* ty=(Tensor[(14, 14, 10), float64],) */;
  %1230 = cast(%var_7346, dtype="bool") /* ty=Tensor[(1200, 1), bool] */;
  %1231 = reshape(%1230, newshape=[16, 5, 15]) /* ty=Tensor[(16, 5, 15), bool] */;
  %1232 = cast(meta[relay.Constant][79] /* ty=Tensor[(728), uint8] */, dtype="uint8") /* ty=Tensor[(728), uint8] */;
  %1233 = cast(meta[relay.Constant][79] /* ty=Tensor[(728), uint8] */, dtype="uint8") /* ty=Tensor[(728), uint8] */;
  %1234 = reshape(%1232, newshape=[13, 4, 14]) /* ty=Tensor[(13, 4, 14), uint8] */;
  %1235 = reshape(%1233, newshape=[13, 4, 14]) /* ty=Tensor[(13, 4, 14), uint8] */;
  %1236 = @func_7141(%1234, %1235) /* ty=(Tensor[(13, 4, 14), uint8],) */;
  %1237 = %1229.0;
  %1238 = @func_5768() /* ty=Tensor[(8, 15, 4), float32] */;
  %1239 = @func_4788(%1231) /* ty=Tensor[(16, 5, 15), float32] */;
  %1240 = %1236.0;
  (%1237, %1238, %1239, %var_7346, %1240, meta[relay.Constant][79] /* ty=Tensor[(728), uint8] */)
}

def @func_10722() -> (Tensor[(8, 15, 4), float32], Tensor[(13, 16, 7), float32], Tensor[(1456), float64]) {
  %1241 = cast(meta[relay.Constant][80] /* ty=Tensor[(1456), float64] */, dtype="float64") /* ty=Tensor[(1456), float64] */;
  %1242 = reshape(%1241, newshape=[13, 16, 7]) /* ty=Tensor[(13, 16, 7), float64] */;
  %1243 = @func_9319(%1242) /* ty=(Tensor[(13, 16, 7), float32], Tensor[(13, 16, 7), uint16], Tensor[(8, 15, 4), float32]) */;
  %1244 = @func_3182() /* ty=Tensor[(8, 15, 4), float32] */;
  %1245 = %1243.0;
  (%1244, %1245, meta[relay.Constant][80] /* ty=Tensor[(1456), float64] */)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_3859() -> Tensor[(8, 15, 4), float64] {
  %0 = @func_3130() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %1 = %0.0;
  %2 = cast(%1, dtype="float32") /* ty=Tensor[(8, 15, 4), float32] */;
  %3 = log(%2) /* ty=Tensor[(8, 15, 4), float32] */;
  %4 = cast(%1, dtype="float64") /* ty=Tensor[(8, 15, 4), float64] */;
  %5 = shape_of(%3, dtype="int32") /* ty=Tensor[(3), int32] */;
  %6 = cast(%3, dtype="float64") /* ty=Tensor[(8, 15, 4), float64] */;
  %7 = dyn.reshape(%4, %5, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_divide(%6, %7) /* ty=Tensor[(8, 15, 4), float64] */
}

def @func_7642() -> (Tensor[(11, 4, 12), uint16], Tensor[(16, 5, 15), bool], Tensor[(11, 4, 12), float64]) {
  @func_7640() /* ty=(Tensor[(11, 4, 12), uint16], Tensor[(16, 5, 15), bool], Tensor[(11, 4, 12), float64]) */
}

def @func_9177(%var_9172: Tensor[(1152), uint64]) -> (Tensor[(8, 15, 4), float32], Tensor[(13, 4, 14), uint8], Tensor[(182, 4), uint8], Tensor[(1152), uint64], Tensor[(90), float64], Tensor[(1152), uint64]) {
  %8 = cast(meta[relay.Constant][0] /* ty=Tensor[(182, 4), uint8] */, dtype="uint8") /* ty=Tensor[(182, 4), uint8] */;
  %9 = cast(meta[relay.Constant][0] /* ty=Tensor[(182, 4), uint8] */, dtype="uint8") /* ty=Tensor[(182, 4), uint8] */;
  %10 = reshape(%8, newshape=[13, 4, 14]) /* ty=Tensor[(13, 4, 14), uint8] */;
  %11 = reshape(%9, newshape=[13, 4, 14]) /* ty=Tensor[(13, 4, 14), uint8] */;
  %12 = @func_7141(%10, %11) /* ty=(Tensor[(13, 4, 14), uint8],) */;
  %13 = cast(meta[relay.Constant][0] /* ty=Tensor[(182, 4), uint8] */, dtype="uint8") /* ty=Tensor[(182, 4), uint8] */;
  %14 = cast(meta[relay.Constant][1] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
  %15 = cast(%var_9172, dtype="uint64") /* ty=Tensor[(1152), uint64] */;
  %16 = reshape(%13, newshape=[728]) /* ty=Tensor[(728), uint8] */;
  %17 = reshape(%14, newshape=[90]) /* ty=Tensor[(90), float64] */;
  %18 = reshape(%15, newshape=[1152]) /* ty=Tensor[(1152), uint64] */;
  %19 = @func_5738(%16, %17, %18) /* ty=(Tensor[(8, 15, 4), float64], Tensor[(14, 9, 12), float64], Tensor[(728), uint8], Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), bool], Tensor[(15, 6), float64], Tensor[(90), float64], Tensor[(1152), uint64], Tensor[(8, 15, 4), float32], Tensor[(12, 16, 6), float64]) */;
  %20 = @func_5315() /* ty=Tensor[(8, 15, 4), float32] */;
  %21 = %12.0;
  %22 = %19.7;
  (%20, %21, meta[relay.Constant][0] /* ty=Tensor[(182, 4), uint8] */, %22, meta[relay.Constant][1] /* ty=Tensor[(90), float64] */, %var_9172)
}

def @func_4819(%var_4818: Tensor[(90), float64]) -> (Tensor[(8, 15, 4), float32], Tensor[(12, 16, 6), uint64], Tensor[(4, 288), uint64], Tensor[(15, 6), float64], Tensor[(90), float64], Tensor[(8, 15, 4), float64]) {
  %37 = fn (%var_4813: Tensor[(90), float64]) -> (Tensor[(8, 15, 4), float32], Tensor[(12, 16, 6), uint64], Tensor[(4, 288), uint64], Tensor[(15, 6), float64], Tensor[(90), float64], Tensor[(8, 15, 4), float64]) {
    %23 = @func_4634() /* ty=(Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float32]) */;
    %24 = cast(meta[relay.Constant][2] /* ty=Tensor[(4, 288), uint64] */, dtype="uint64") /* ty=Tensor[(4, 288), uint64] */;
    %25 = cast(meta[relay.Constant][2] /* ty=Tensor[(4, 288), uint64] */, dtype="uint64") /* ty=Tensor[(4, 288), uint64] */;
    %26 = reshape(%24, newshape=[12, 16, 6]) /* ty=Tensor[(12, 16, 6), uint64] */;
    %27 = reshape(%25, newshape=[12, 16, 6]) /* ty=Tensor[(12, 16, 6), uint64] */;
    %28 = cast(%var_4813, dtype="float64") /* ty=Tensor[(90), float64] */;
    %29 = cast(meta[relay.Constant][2] /* ty=Tensor[(4, 288), uint64] */, dtype="uint64") /* ty=Tensor[(4, 288), uint64] */;
    %30 = reshape(%28, newshape=[15, 6]) /* ty=Tensor[(15, 6), float64] */;
    %31 = reshape(%29, newshape=[1152]) /* ty=Tensor[(1152), uint64] */;
    %32 = @func_3950(%30, %31) /* ty=(Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), bool], Tensor[(16, 5, 15), bool], Tensor[(1512), float64], Tensor[(15, 6), float64], Tensor[(990), float64], Tensor[(126, 12), float64], Tensor[(168, 2), bool], Tensor[(672), bool], Tensor[(1152), uint64]) */;
    %33 = %23.0;
    %34 = @func_2152(%26, %27) /* ty=Tensor[(12, 16, 6), uint64] */;
    %35 = %32.4;
    %36 = @func_3536() /* ty=Tensor[(8, 15, 4), float64] */;
    (%33, %34, meta[relay.Constant][2] /* ty=Tensor[(4, 288), uint64] */, %35, %var_4813, %36)
  };
  %37(%var_4818) /* ty=(Tensor[(8, 15, 4), float32], Tensor[(12, 16, 6), uint64], Tensor[(4, 288), uint64], Tensor[(15, 6), float64], Tensor[(90), float64], Tensor[(8, 15, 4), float64]) */
}

def @func_11116() -> (Tensor[(8, 15, 4), float64],) {
  @func_11114() /* ty=(Tensor[(8, 15, 4), float64],) */
}

def @func_9566() -> (Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float64], Tensor[(8, 15, 4), float64]) {
  @func_9564() /* ty=(Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float64], Tensor[(8, 15, 4), float64]) */
}

def @func_11473(%var_11470: bool, %var_11471: Tensor[(42), bool], %var_11472: Tensor[(728), uint8]) -> (Tensor[(8, 15, 4), float64], Tensor[(6, ?, 7), bool], bool, Tensor[(42), bool], Tensor[(15, 6), float64], Tensor[(728), uint8], Tensor[(90), float64], Tensor[(24, 48), uint64]) {
  @func_11468(%var_11470, %var_11471, %var_11472) /* ty=(Tensor[(8, 15, 4), float64], Tensor[(6, ?, 7), bool], bool, Tensor[(42), bool], Tensor[(15, 6), float64], Tensor[(728), uint8], Tensor[(90), float64], Tensor[(24, 48), uint64]) */
}

def @func_3476(%var_3474: int32, %var_3475: Tensor[(168, 2), int32]) -> (Tensor[(8, 15, 4), float32], Tensor[(9, 15, 10), float32], Tensor[(1350), float32], Tensor[(256), float32], int32, Tensor[(14, 12, 2), bool], Tensor[(168, 2), uint8]) {
  @func_3472(%var_3474, %var_3475) /* ty=(Tensor[(8, 15, 4), float32], Tensor[(9, 15, 10), float32], Tensor[(1350), float32], Tensor[(256), float32], int32, Tensor[(14, 12, 2), bool], Tensor[(168, 2), uint8]) */
}

def @func_9180(%var_9178: Tensor[(1152), uint64]) -> (Tensor[(8, 15, 4), float32], Tensor[(13, 4, 14), uint8], Tensor[(182, 4), uint8], Tensor[(1152), uint64], Tensor[(90), float64], Tensor[(1152), uint64]) {
  @func_9177(%var_9178) /* ty=(Tensor[(8, 15, 4), float32], Tensor[(13, 4, 14), uint8], Tensor[(182, 4), uint8], Tensor[(1152), uint64], Tensor[(90), float64], Tensor[(1152), uint64]) */
}

def @func_10431(%var_10405: Tensor[(924), float64]) -> (Tensor[(14, 14, 10), bool], Tensor[(16, 5, 15), bool], Tensor[(924), float64], Tensor[(14, 14, 10), int8]) {
  %38 = @func_7596() /* ty=(Tensor[(12, 16, 6), float64], Tensor[(14, 14, 10), float64]) */;
  %39 = %38.1;
  %40 = cast(meta[relay.Constant][3] /* ty=Tensor[(14, 14, 10), float64] */, dtype="bool") /* ty=Tensor[(14, 14, 10), bool] */;
  %41 = shape_of(%39, dtype="int32") /* ty=Tensor[(3), int32] */;
  %42 = cast(%39, dtype="bool") /* ty=Tensor[(14, 14, 10), bool] */;
  %43 = dyn.reshape(%40, %41, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %44 = cast(%var_10405, dtype="float64") /* ty=Tensor[(924), float64] */;
  %45 = reshape(%44, newshape=[462, 2]) /* ty=Tensor[(462, 2), float64] */;
  %46 = @func_8784(%45) /* ty=(Tensor[(16, 5, 15), bool], Tensor[(8, 15, 4), float64], Tensor[(462, 2), float64]) */;
  %47 = cast(meta[relay.Constant][4] /* ty=Tensor[(14, 14, 10), float64] */, dtype="int8") /* ty=Tensor[(14, 14, 10), int8] */;
  %48 = shape_of(%39, dtype="int32") /* ty=Tensor[(3), int32] */;
  %49 = cast(%39, dtype="int8") /* ty=Tensor[(14, 14, 10), int8] */;
  %50 = dyn.reshape(%47, %48, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %51 = greater_equal(%42, %43) /* ty=Tensor[(14, 14, 10), bool] */;
  %52 = %46.0;
  %53 = left_shift(%49, %50) /* ty=Tensor[(14, 14, 10), int8] */;
  (%51, %52, %var_10405, %53)
}

def @func_6547(%var_6534: Tensor[(90), float64]) -> (Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float32], Tensor[(1152), uint64], Tensor[(8, 15, 4), bool], Tensor[(16, 5, 15), bool], Tensor[(12, 3, 14), float32], Tensor[(16, 5, 15), bool], Tensor[(90), float64], Tensor[(16, 5, 15), bool]) {
  %54 = @func_3274() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %55 = @func_5012() /* ty=(Tensor[(16, 5, 15), bool], Tensor[(12, 16, 6), uint64], Tensor[(1152), uint64], Tensor[(8, 15, 4), float64]) */;
  %56 = @func_4162() /* ty=(Tensor[(16, 5, 15), bool],) */;
  %57 = @func_5082() /* ty=Tensor[(12, 3, 14), float32] */;
  %58 = cast(%57, dtype="float32") /* ty=Tensor[(12, 3, 14), float32] */;
  %59 = cast(%var_6534, dtype="float64") /* ty=Tensor[(90), float64] */;
  %60 = %55.2;
  %61 = cast(%60, dtype="uint64") /* ty=Tensor[(1152), uint64] */;
  %62 = reshape(%59, newshape=[15, 6]) /* ty=Tensor[(15, 6), float64] */;
  %63 = reshape(%61, newshape=[1152]) /* ty=Tensor[(1152), uint64] */;
  %64 = @func_3950(%62, %63) /* ty=(Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), bool], Tensor[(16, 5, 15), bool], Tensor[(1512), float64], Tensor[(15, 6), float64], Tensor[(990), float64], Tensor[(126, 12), float64], Tensor[(168, 2), bool], Tensor[(672), bool], Tensor[(1152), uint64]) */;
  %65 = @func_6243() /* ty=(Tensor[(16, 5, 15), bool],) */;
  %66 = @func_5833() /* ty=Tensor[(8, 15, 4), float32] */;
  %67 = %54.0;
  %68 = @func_3896() /* ty=Tensor[(8, 15, 4), bool] */;
  %69 = %56.0;
  %70 = sqrt(%58) /* ty=Tensor[(12, 3, 14), float32] */;
  %71 = %64.2;
  %72 = %65.0;
  (%66, %67, %60, %68, %69, %70, %71, %var_6534, %72)
}

def @func_3954(%var_3952: Tensor[(15, 6), float64], %var_3953: Tensor[(1152), uint64]) -> (Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), bool], Tensor[(16, 5, 15), bool], Tensor[(1512), float64], Tensor[(15, 6), float64], Tensor[(990), float64], Tensor[(126, 12), float64], Tensor[(168, 2), bool], Tensor[(672), bool], Tensor[(1152), uint64]) {
  @func_3950(%var_3952, %var_3953) /* ty=(Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), bool], Tensor[(16, 5, 15), bool], Tensor[(1512), float64], Tensor[(15, 6), float64], Tensor[(990), float64], Tensor[(126, 12), float64], Tensor[(168, 2), bool], Tensor[(672), bool], Tensor[(1152), uint64]) */
}

def @func_8656() -> (Tensor[(16, 5, 15), bool],) {
  %75 = fn () -> (Tensor[(16, 5, 15), bool],) {
    %73 = @func_6243() /* ty=(Tensor[(16, 5, 15), bool],) */;
    %74 = %73.0;
    (%74,)
  };
  %75() /* ty=(Tensor[(16, 5, 15), bool],) */
}

def @func_12248() -> Tensor[(8, 15, 4), float32] {
  %76 = @func_3274() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %76.0
}

def @func_6310() -> Tensor[(8, 15, 4), float32] {
  %78 = fn () -> Tensor[(8, 15, 4), float32] {
    %77 = @func_3130() /* ty=(Tensor[(8, 15, 4), float32],) */;
    %77.0
  };
  %78() /* ty=Tensor[(8, 15, 4), float32] */
}

def @func_4275(%var_4218: Tensor[(16, 5, 15), bool], %var_4231: Tensor[(336), bool], %var_4233: Tensor[(56, 12), bool]) -> (Tensor[(16, 5, 15), bool], Tensor[(7, 16, 3), bool], Tensor[(336), bool], int32, Tensor[(56, 12), bool], Tensor[(8, 15, 4), float64], Tensor[(12, 16, 6), uint64], Tensor[(24, 48), uint64], Tensor[(8, 15, 4), float64]) {
  %79 = @func_4162() /* ty=(Tensor[(16, 5, 15), bool],) */;
  %80 = %79.0;
  %81 = cast(%var_4218, dtype="bool") /* ty=Tensor[(16, 5, 15), bool] */;
  %82 = shape_of(%80, dtype="int32") /* ty=Tensor[(3), int32] */;
  %83 = cast(%80, dtype="bool") /* ty=Tensor[(16, 5, 15), bool] */;
  %84 = dyn.reshape(%81, %82, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %85 = cast(%var_4231, dtype="bool") /* ty=Tensor[(336), bool] */;
  %86 = cast(9 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %87 = cast(%var_4233, dtype="bool") /* ty=Tensor[(56, 12), bool] */;
  %88 = reshape(%85, newshape=[7, 16, 3]) /* ty=Tensor[(7, 16, 3), bool] */;
  %89 = reshape(%86, newshape=[]) /* ty=int32 */;
  %90 = reshape(%87, newshape=[14, 16, 3]) /* ty=Tensor[(14, 16, 3), bool] */;
  %91 = @func_2477(%88, %89, %90) /* ty=(Tensor[(7, 16, 3), bool], Tensor[(14, 12, 2), bool], int32, Tensor[(14, 16, 3), bool]) */;
  %92 = cast(meta[relay.Constant][5] /* ty=Tensor[(24, 48), uint64] */, dtype="uint64") /* ty=Tensor[(24, 48), uint64] */;
  %93 = cast(meta[relay.Constant][5] /* ty=Tensor[(24, 48), uint64] */, dtype="uint64") /* ty=Tensor[(24, 48), uint64] */;
  %94 = reshape(%92, newshape=[12, 16, 6]) /* ty=Tensor[(12, 16, 6), uint64] */;
  %95 = reshape(%93, newshape=[12, 16, 6]) /* ty=Tensor[(12, 16, 6), uint64] */;
  %96 = @func_4068() /* ty=(Tensor[(8, 15, 4), float64], Tensor[(12, 16, 6), uint64], Tensor[(1152), uint64]) */;
  %97 = logical_or(%83, %84) /* ty=Tensor[(16, 5, 15), bool] */;
  %98 = %91.0;
  %99 = @func_3536() /* ty=Tensor[(8, 15, 4), float64] */;
  %100 = @func_2152(%94, %95) /* ty=Tensor[(12, 16, 6), uint64] */;
  %101 = %96.0;
  (%97, %98, %var_4231, 9 /* ty=int32 */, %var_4233, %99, %100, meta[relay.Constant][5] /* ty=Tensor[(24, 48), uint64] */, %101)
}

def @func_11403() -> (Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float64]) {
  %105 = fn () -> (Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float64]) {
    %102 = @func_11258() /* ty=(Tensor[(8, 15, 4), float64],) */;
    %103 = @func_4962() /* ty=Tensor[(8, 15, 4), float32] */;
    %104 = %102.0;
    (%103, %104)
  };
  %105() /* ty=(Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float64]) */
}

def @func_8464() -> Tensor[(8, 15, 4), float32] {
  %106 = fn () -> Tensor[(8, 15, 4), float32] {
    @func_3182() /* ty=Tensor[(8, 15, 4), float32] */
  };
  %106() /* ty=Tensor[(8, 15, 4), float32] */
}

def @func_9920() -> (Tensor[(8, 15, 4), float64], Tensor[(16, 5, 15), float64], int16, Tensor[(11, 12, 7), float64], Tensor[(11, 12, 7), int16], Tensor[(14, 14, 10), float32]) {
  %107 = @func_8655() /* ty=(Tensor[(16, 5, 15), bool],) */;
  %108 = %107.0;
  %109 = cast(%108, dtype="float64") /* ty=Tensor[(16, 5, 15), float64] */;
  %110 = cast(meta[relay.Constant][6] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %111 = cast(meta[relay.Constant][7] /* ty=Tensor[(924), int16] */, dtype="int16") /* ty=Tensor[(924), int16] */;
  %112 = reshape(%110, newshape=[]) /* ty=int16 */;
  %113 = reshape(%111, newshape=[11, 12, 7]) /* ty=Tensor[(11, 12, 7), int16] */;
  %114 = @func_4696(%112, %113) /* ty=Tensor[(11, 12, 7), int16] */;
  %115 = cast(meta[relay.Constant][7] /* ty=Tensor[(924), int16] */, dtype="bool") /* ty=Tensor[(924), bool] */;
  %116 = shape_of(%114, dtype="int32") /* ty=Tensor[(3), int32] */;
  %117 = cast(%114, dtype="bool") /* ty=Tensor[(11, 12, 7), bool] */;
  %118 = dyn.reshape(%115, %116, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %119 = equal(%117, %118) /* ty=Tensor[(11, 12, 7), bool] */;
  %120 = cast(%119, dtype="float64") /* ty=Tensor[(11, 12, 7), float64] */;
  %121 = cast(meta[relay.Constant][6] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %122 = cast(%114, dtype="int16") /* ty=Tensor[(11, 12, 7), int16] */;
  %123 = reshape(%121, newshape=[]) /* ty=int16 */;
  %124 = reshape(%122, newshape=[11, 12, 7]) /* ty=Tensor[(11, 12, 7), int16] */;
  %125 = @func_9615() /* ty=(Tensor[(16, 5, 15), bool], Tensor[(14, 14, 10), float32]) */;
  %126 = @func_5583() /* ty=Tensor[(8, 15, 4), float64] */;
  %127 = tan(%109) /* ty=Tensor[(16, 5, 15), float64] */;
  %128 = sqrt(%120) /* ty=Tensor[(11, 12, 7), float64] */;
  %129 = @func_4696(%123, %124) /* ty=Tensor[(11, 12, 7), int16] */;
  %130 = %125.1;
  (%126, %127, meta[relay.Constant][6] /* ty=int16 */, %128, %129, %130)
}

def @func_12218(%var_12216: Tensor[(8, 8, 2), float64], %var_12217: uint16) -> (Tensor[(8, 8, 2), float64], Tensor[(8, 12, 11), bool], uint16, Tensor[(1056), uint16]) {
  @func_12214(%var_12216, %var_12217) /* ty=(Tensor[(8, 8, 2), float64], Tensor[(8, 12, 11), bool], uint16, Tensor[(1056), uint16]) */
}

def @func_4743() -> (Tensor[(12, 16, 6), float64],) {
  %131 = @func_4068() /* ty=(Tensor[(8, 15, 4), float64], Tensor[(12, 16, 6), uint64], Tensor[(1152), uint64]) */;
  %132 = %131.1;
  %133 = cast(%132, dtype="float64") /* ty=Tensor[(12, 16, 6), float64] */;
  %134 = sinh(%133) /* ty=Tensor[(12, 16, 6), float64] */;
  (%134,)
}

def @func_5044() -> (Tensor[(8, 15, 4), float32],) {
  @func_5042() /* ty=(Tensor[(8, 15, 4), float32],) */
}

def @func_7482() -> (Tensor[(16, 5, 15), bool], Tensor[(16, 5, 15), bool]) {
  %135 = @func_6243() /* ty=(Tensor[(16, 5, 15), bool],) */;
  %136 = %135.0;
  %137 = @func_6126() /* ty=Tensor[(16, 5, 15), bool] */;
  (%136, %137)
}

def @func_4404(%var_4403: Tensor[(8, 15, 4), bool]) -> Tensor[(8, 15, 4), float32] {
  %143 = fn (%var_4397: Tensor[(8, 15, 4), bool]) -> Tensor[(8, 15, 4), float32] {
    %138 = @func_3896() /* ty=Tensor[(8, 15, 4), bool] */;
    %139 = cast(%var_4397, dtype="float32") /* ty=Tensor[(8, 15, 4), float32] */;
    %140 = shape_of(%138, dtype="int32") /* ty=Tensor[(3), int32] */;
    %141 = cast(%138, dtype="float32") /* ty=Tensor[(8, 15, 4), float32] */;
    %142 = dyn.reshape(%139, %140, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    subtract(%141, %142) /* ty=Tensor[(8, 15, 4), float32] */
  };
  %143(%var_4403) /* ty=Tensor[(8, 15, 4), float32] */
}

def @func_9483() -> (Tensor[(16, 5, 15), bool], Tensor[(462, 2), float64], Tensor[(924), float64]) {
  %150 = fn () -> (Tensor[(16, 5, 15), bool], Tensor[(462, 2), float64], Tensor[(924), float64]) {
    %144 = @func_7640() /* ty=(Tensor[(11, 4, 12), uint16], Tensor[(16, 5, 15), bool], Tensor[(11, 4, 12), float64]) */;
    %145 = cast(meta[relay.Constant][8] /* ty=Tensor[(924), float64] */, dtype="float64") /* ty=Tensor[(924), float64] */;
    %146 = reshape(%145, newshape=[462, 2]) /* ty=Tensor[(462, 2), float64] */;
    %147 = @func_8784(%146) /* ty=(Tensor[(16, 5, 15), bool], Tensor[(8, 15, 4), float64], Tensor[(462, 2), float64]) */;
    %148 = %144.1;
    %149 = %147.2;
    (%148, %149, meta[relay.Constant][8] /* ty=Tensor[(924), float64] */)
  };
  %150() /* ty=(Tensor[(16, 5, 15), bool], Tensor[(462, 2), float64], Tensor[(924), float64]) */
}

def @func_11367(%var_11366: int16) -> (Tensor[(12, 4, 1), int16],) {
  %154 = fn (%var_11357: int16) -> (Tensor[(12, 4, 1), int16],) {
    %151 = cast(%var_11357, dtype="int16") /* ty=int16 */;
    %152 = cast(meta[relay.Constant][9] /* ty=Tensor[(12, 4, 1), int16] */, dtype="int16") /* ty=Tensor[(12, 4, 1), int16] */;
    %153 = bitwise_and(%151, %152) /* ty=Tensor[(12, 4, 1), int16] */;
    (%153,)
  };
  %154(%var_11366) /* ty=(Tensor[(12, 4, 1), int16],) */
}

def @func_12294() -> Tensor[(8, 15, 4), float32] {
  %155 = @func_5151() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %155.0
}

def @func_8975(%var_8966: Tensor[(45, 2), float64], %var_8967: Tensor[(1152), uint64], %var_8968: Tensor[(198), float32], %var_8969: Tensor[(2, 336), bool], %var_8970: Tensor[(13, 4, 14), uint8], %var_8971: Tensor[(256), float32], %var_8972: int32, %var_8973: Tensor[(360), float64], %var_8974: Tensor[(2, 168), bool]) -> (Tensor[(14, 14, 10), float64], Tensor[(728), uint8], Tensor[(16, 5, 15), bool], Tensor[(13, 4, 14), uint8], Tensor[(14, 9, 12), float64], Tensor[(45, 2), float64], Tensor[(1152), uint64], Tensor[(9, 11, 2), float32], Tensor[(198), float32], Tensor[(90), float64], Tensor[(2, 336), bool], Tensor[(13, 4, 14), float32], Tensor[(8, 8, 4), uint8], Tensor[(256), float32], int32, Tensor[(9, 10, 4), float64], Tensor[(360), float64], Tensor[(7, 132), float64], Tensor[(672), bool], Tensor[(2, 168), bool]) {
  @func_8964(%var_8966, %var_8967, %var_8968, %var_8969, %var_8970, %var_8971, %var_8972, %var_8973, %var_8974) /* ty=(Tensor[(14, 14, 10), float64], Tensor[(728), uint8], Tensor[(16, 5, 15), bool], Tensor[(13, 4, 14), uint8], Tensor[(14, 9, 12), float64], Tensor[(45, 2), float64], Tensor[(1152), uint64], Tensor[(9, 11, 2), float32], Tensor[(198), float32], Tensor[(90), float64], Tensor[(2, 336), bool], Tensor[(13, 4, 14), float32], Tensor[(8, 8, 4), uint8], Tensor[(256), float32], int32, Tensor[(9, 10, 4), float64], Tensor[(360), float64], Tensor[(7, 132), float64], Tensor[(672), bool], Tensor[(2, 168), bool]) */
}

def @func_12520() -> (Tensor[(16, 5, 15), bool],) {
  %156 = @func_9615() /* ty=(Tensor[(16, 5, 15), bool], Tensor[(14, 14, 10), float32]) */;
  %157 = %156.0;
  (%157,)
}

def @func_5496() -> Tensor[(16, 5, 15), bool] {
  @func_4197() /* ty=Tensor[(16, 5, 15), bool] */
}

def @func_9675() -> Tensor[(16, 5, 15), bool] {
  @func_6171() /* ty=Tensor[(16, 5, 15), bool] */
}

def @func_4069() -> (Tensor[(8, 15, 4), float64], Tensor[(12, 16, 6), uint64], Tensor[(1152), uint64]) {
  %164 = fn () -> (Tensor[(8, 15, 4), float64], Tensor[(12, 16, 6), uint64], Tensor[(1152), uint64]) {
    %158 = cast(meta[relay.Constant][10] /* ty=Tensor[(1152), uint64] */, dtype="uint64") /* ty=Tensor[(1152), uint64] */;
    %159 = cast(meta[relay.Constant][10] /* ty=Tensor[(1152), uint64] */, dtype="uint64") /* ty=Tensor[(1152), uint64] */;
    %160 = reshape(%158, newshape=[12, 16, 6]) /* ty=Tensor[(12, 16, 6), uint64] */;
    %161 = reshape(%159, newshape=[12, 16, 6]) /* ty=Tensor[(12, 16, 6), uint64] */;
    %162 = @func_3536() /* ty=Tensor[(8, 15, 4), float64] */;
    %163 = @func_2152(%160, %161) /* ty=Tensor[(12, 16, 6), uint64] */;
    (%162, %163, meta[relay.Constant][10] /* ty=Tensor[(1152), uint64] */)
  };
  %164() /* ty=(Tensor[(8, 15, 4), float64], Tensor[(12, 16, 6), uint64], Tensor[(1152), uint64]) */
}

def @func_3275() -> (Tensor[(8, 15, 4), float32],) {
  %167 = fn () -> (Tensor[(8, 15, 4), float32],) {
    %165 = @func_3130() /* ty=(Tensor[(8, 15, 4), float32],) */;
    %166 = %165.0;
    (%166,)
  };
  %167() /* ty=(Tensor[(8, 15, 4), float32],) */
}

def @func_8321(%var_8319: Tensor[(90), float64], %var_8320: Tensor[(672), bool]) -> (Tensor[(1152), uint64], Tensor[(336), bool], Tensor[(90), float64], Tensor[(990), float64], Tensor[(8, 42), bool], Tensor[(672), bool], Tensor[(1512), float32], Tensor[(16, 5, 15), bool]) {
  %188 = fn (%var_8296: Tensor[(90), float64], %var_8300: Tensor[(672), bool]) -> (Tensor[(1152), uint64], Tensor[(336), bool], Tensor[(90), float64], Tensor[(990), float64], Tensor[(8, 42), bool], Tensor[(672), bool], Tensor[(1512), float32], Tensor[(16, 5, 15), bool]) {
    %168 = @func_5012() /* ty=(Tensor[(16, 5, 15), bool], Tensor[(12, 16, 6), uint64], Tensor[(1152), uint64], Tensor[(8, 15, 4), float64]) */;
    %169 = cast(%var_8296, dtype="float64") /* ty=Tensor[(90), float64] */;
    %170 = cast(meta[relay.Constant][11] /* ty=Tensor[(990), float64] */, dtype="float64") /* ty=Tensor[(990), float64] */;
    %171 = cast(meta[relay.Constant][12] /* ty=Tensor[(1512), float64] */, dtype="float64") /* ty=Tensor[(1512), float64] */;
    %172 = cast(meta[relay.Constant][13] /* ty=Tensor[(8, 42), bool] */, dtype="bool") /* ty=Tensor[(8, 42), bool] */;
    %173 = cast(%var_8300, dtype="bool") /* ty=Tensor[(672), bool] */;
    %174 = %168.2;
    %175 = cast(%174, dtype="uint64") /* ty=Tensor[(1152), uint64] */;
    %176 = reshape(%169, newshape=[1, 10, 9]) /* ty=Tensor[(1, 10, 9), float64] */;
    %177 = reshape(%170, newshape=[11, 10, 9]) /* ty=Tensor[(11, 10, 9), float64] */;
    %178 = reshape(%171, newshape=[1512]) /* ty=Tensor[(1512), float64] */;
    %179 = reshape(%172, newshape=[4, 84]) /* ty=Tensor[(4, 84), bool] */;
    %180 = reshape(%173, newshape=[672]) /* ty=Tensor[(672), bool] */;
    %181 = reshape(%175, newshape=[1152]) /* ty=Tensor[(1152), uint64] */;
    %182 = @func_3727(%176, %177, %178, %179, %180, %181) /* ty=(Tensor[(?, 10, 9), bool], Tensor[(672), bool], Tensor[(1512), float64], Tensor[(4, 84), bool], Tensor[(672), bool], Tensor[(336), bool], Tensor[(11, 10, 9), float32], Tensor[(12, 16, 6), uint64], Tensor[(1152), uint64]) */;
    %183 = cast(meta[relay.Constant][12] /* ty=Tensor[(1512), float64] */, dtype="float32") /* ty=Tensor[(1512), float32] */;
    %184 = @func_7482() /* ty=(Tensor[(16, 5, 15), bool], Tensor[(16, 5, 15), bool]) */;
    %185 = %182.5;
    %186 = asin(%183) /* ty=Tensor[(1512), float32] */;
    %187 = %184.0;
    (%174, %185, %var_8296, meta[relay.Constant][11] /* ty=Tensor[(990), float64] */, meta[relay.Constant][13] /* ty=Tensor[(8, 42), bool] */, %var_8300, %186, %187)
  };
  %188(%var_8319, %var_8320) /* ty=(Tensor[(1152), uint64], Tensor[(336), bool], Tensor[(90), float64], Tensor[(990), float64], Tensor[(8, 42), bool], Tensor[(672), bool], Tensor[(1512), float32], Tensor[(16, 5, 15), bool]) */
}

def @func_7700(%var_7697: Tensor[(90), float64], %var_7698: Tensor[(1512), float64], %var_7699: Tensor[(168, 4), bool]) -> (Tensor[(8, 15, 4), float64], Tensor[(16, 5, 15), bool], Tensor[(13, 4, 14), uint8], Tensor[(182, 4), uint8], Tensor[(1512), float64], Tensor[(90), float64], Tensor[(990), float64], Tensor[(1512), float64], Tensor[(336), bool], Tensor[(168, 4), bool], Tensor[(1152), uint64]) {
  %211 = fn (%var_7687: Tensor[(90), float64], %var_7689: Tensor[(1512), float64], %var_7691: Tensor[(168, 4), bool]) -> (Tensor[(8, 15, 4), float64], Tensor[(16, 5, 15), bool], Tensor[(13, 4, 14), uint8], Tensor[(182, 4), uint8], Tensor[(1512), float64], Tensor[(90), float64], Tensor[(990), float64], Tensor[(1512), float64], Tensor[(336), bool], Tensor[(168, 4), bool], Tensor[(1152), uint64]) {
    %189 = cast(meta[relay.Constant][14] /* ty=Tensor[(182, 4), uint8] */, dtype="uint8") /* ty=Tensor[(182, 4), uint8] */;
    %190 = cast(meta[relay.Constant][14] /* ty=Tensor[(182, 4), uint8] */, dtype="uint8") /* ty=Tensor[(182, 4), uint8] */;
    %191 = reshape(%189, newshape=[13, 4, 14]) /* ty=Tensor[(13, 4, 14), uint8] */;
    %192 = reshape(%190, newshape=[13, 4, 14]) /* ty=Tensor[(13, 4, 14), uint8] */;
    %193 = @func_546(%191, %192) /* ty=(Tensor[(13, 4, 14), uint8], Tensor[(14, 9, 12), float64], Tensor[(1512), float64], Tensor[(14, 9, 12), float64], Tensor[(14, 9, 12), float64], Tensor[(14, 9, 12), float64]) */;
    %194 = cast(%var_7687, dtype="float64") /* ty=Tensor[(90), float64] */;
    %195 = cast(meta[relay.Constant][15] /* ty=Tensor[(990), float64] */, dtype="float64") /* ty=Tensor[(990), float64] */;
    %196 = cast(%var_7689, dtype="float64") /* ty=Tensor[(1512), float64] */;
    %197 = cast(meta[relay.Constant][16] /* ty=Tensor[(336), bool] */, dtype="bool") /* ty=Tensor[(336), bool] */;
    %198 = cast(%var_7691, dtype="bool") /* ty=Tensor[(168, 4), bool] */;
    %199 = cast(meta[relay.Constant][17] /* ty=Tensor[(1152), uint64] */, dtype="uint64") /* ty=Tensor[(1152), uint64] */;
    %200 = reshape(%194, newshape=[1, 10, 9]) /* ty=Tensor[(1, 10, 9), float64] */;
    %201 = reshape(%195, newshape=[11, 10, 9]) /* ty=Tensor[(11, 10, 9), float64] */;
    %202 = reshape(%196, newshape=[1512]) /* ty=Tensor[(1512), float64] */;
    %203 = reshape(%197, newshape=[4, 84]) /* ty=Tensor[(4, 84), bool] */;
    %204 = reshape(%198, newshape=[672]) /* ty=Tensor[(672), bool] */;
    %205 = reshape(%199, newshape=[1152]) /* ty=Tensor[(1152), uint64] */;
    %206 = @func_3727(%200, %201, %202, %203, %204, %205) /* ty=(Tensor[(?, 10, 9), bool], Tensor[(672), bool], Tensor[(1512), float64], Tensor[(4, 84), bool], Tensor[(672), bool], Tensor[(336), bool], Tensor[(11, 10, 9), float32], Tensor[(12, 16, 6), uint64], Tensor[(1152), uint64]) */;
    %207 = @func_5625() /* ty=Tensor[(8, 15, 4), float64] */;
    %208 = @func_5496() /* ty=Tensor[(16, 5, 15), bool] */;
    %209 = %193.0;
    %210 = %206.2;
    (%207, %208, %209, meta[relay.Constant][14] /* ty=Tensor[(182, 4), uint8] */, %210, %var_7687, meta[relay.Constant][15] /* ty=Tensor[(990), float64] */, %var_7689, meta[relay.Constant][16] /* ty=Tensor[(336), bool] */, %var_7691, meta[relay.Constant][17] /* ty=Tensor[(1152), uint64] */)
  };
  %211(%var_7697, %var_7698, %var_7699) /* ty=(Tensor[(8, 15, 4), float64], Tensor[(16, 5, 15), bool], Tensor[(13, 4, 14), uint8], Tensor[(182, 4), uint8], Tensor[(1512), float64], Tensor[(90), float64], Tensor[(990), float64], Tensor[(1512), float64], Tensor[(336), bool], Tensor[(168, 4), bool], Tensor[(1152), uint64]) */
}

def @func_5291(%var_5290: Tensor[(1512), float64]) -> (Tensor[(1152), uint64], Tensor[(15, 6), float64], Tensor[(90), float64], Tensor[(8, 15, 4), float32], Tensor[(672), bool], Tensor[(1512), float64], Tensor[(8, 42), bool], Tensor[(672), bool]) {
  %230 = fn (%var_5272: Tensor[(1512), float64]) -> (Tensor[(1152), uint64], Tensor[(15, 6), float64], Tensor[(90), float64], Tensor[(8, 15, 4), float32], Tensor[(672), bool], Tensor[(1512), float64], Tensor[(8, 42), bool], Tensor[(672), bool]) {
    %212 = @func_4068() /* ty=(Tensor[(8, 15, 4), float64], Tensor[(12, 16, 6), uint64], Tensor[(1152), uint64]) */;
    %213 = cast(meta[relay.Constant][18] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
    %214 = %212.2;
    %215 = cast(%214, dtype="uint64") /* ty=Tensor[(1152), uint64] */;
    %216 = reshape(%213, newshape=[15, 6]) /* ty=Tensor[(15, 6), float64] */;
    %217 = reshape(%215, newshape=[1152]) /* ty=Tensor[(1152), uint64] */;
    %218 = @func_3950(%216, %217) /* ty=(Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), bool], Tensor[(16, 5, 15), bool], Tensor[(1512), float64], Tensor[(15, 6), float64], Tensor[(990), float64], Tensor[(126, 12), float64], Tensor[(168, 2), bool], Tensor[(672), bool], Tensor[(1152), uint64]) */;
    %219 = @func_4417() /* ty=(Tensor[(8, 15, 4), float32],) */;
    %220 = cast(%var_5272, dtype="float64") /* ty=Tensor[(1512), float64] */;
    %221 = cast(meta[relay.Constant][19] /* ty=Tensor[(8, 42), bool] */, dtype="bool") /* ty=Tensor[(8, 42), bool] */;
    %222 = cast(meta[relay.Constant][20] /* ty=Tensor[(672), bool] */, dtype="bool") /* ty=Tensor[(672), bool] */;
    %223 = reshape(%220, newshape=[14, 9, 12]) /* ty=Tensor[(14, 9, 12), float64] */;
    %224 = reshape(%221, newshape=[336]) /* ty=Tensor[(336), bool] */;
    %225 = reshape(%222, newshape=[672]) /* ty=Tensor[(672), bool] */;
    %226 = @func_3391(%223, %224, %225) /* ty=(Tensor[(728), uint8], Tensor[(14, 9, 12), int16], Tensor[(8, 15, 4), float64], Tensor[(14, 12, 2), bool], Tensor[(336), bool], int32, Tensor[(672), bool]) */;
    %227 = %218.4;
    %228 = %219.0;
    %229 = %226.6;
    (%214, %227, meta[relay.Constant][18] /* ty=Tensor[(90), float64] */, %228, %229, %var_5272, meta[relay.Constant][19] /* ty=Tensor[(8, 42), bool] */, meta[relay.Constant][20] /* ty=Tensor[(672), bool] */)
  };
  %230(%var_5290) /* ty=(Tensor[(1152), uint64], Tensor[(15, 6), float64], Tensor[(90), float64], Tensor[(8, 15, 4), float32], Tensor[(672), bool], Tensor[(1512), float64], Tensor[(8, 42), bool], Tensor[(672), bool]) */
}

def @func_3575(%var_3574: Tensor[(924), float64]) -> (Tensor[(8, 15, 4), float64], Tensor[(14, 11, 6), float32], Tensor[(924), float64]) {
  %238 = fn (%var_3563: Tensor[(924), float64]) -> (Tensor[(8, 15, 4), float64], Tensor[(14, 11, 6), float32], Tensor[(924), float64]) {
    %231 = cast(%var_3563, dtype="float64") /* ty=Tensor[(924), float64] */;
    %232 = cast(%var_3563, dtype="float64") /* ty=Tensor[(924), float64] */;
    %233 = reshape(%231, newshape=[14, 11, 6]) /* ty=Tensor[(14, 11, 6), float64] */;
    %234 = reshape(%232, newshape=[14, 11, 6]) /* ty=Tensor[(14, 11, 6), float64] */;
    %235 = @func_758(%233, %234) /* ty=(Tensor[(14, 11, 6), float32],) */;
    %236 = @func_3536() /* ty=Tensor[(8, 15, 4), float64] */;
    %237 = %235.0;
    (%236, %237, %var_3563)
  };
  %238(%var_3574) /* ty=(Tensor[(8, 15, 4), float64], Tensor[(14, 11, 6), float32], Tensor[(924), float64]) */
}

def @func_6040(%var_6037: Tensor[(3, 6, 16), float64], %var_6038: Tensor[(90, 1), float64], %var_6039: Tensor[(24, 48), uint64]) -> (Tensor[(12, 16, 6), float64], Tensor[(728), uint8], Tensor[(90, 1), float64], Tensor[(24, 48), uint64], Tensor[(3, 6, 16), float64]) {
  @func_6035(%var_6037, %var_6038, %var_6039) /* ty=(Tensor[(12, 16, 6), float64], Tensor[(728), uint8], Tensor[(90, 1), float64], Tensor[(24, 48), uint64], Tensor[(3, 6, 16), float64]) */
}

def @func_7042(%var_7040: Tensor[(9, 11, 2), float32], %var_7041: Tensor[(9, 11, 2), float32]) -> Tensor[(9, 11, 2), float32] {
  %243 = fn (%var_7011: Tensor[(9, 11, 2), float32], %var_7012: Tensor[(9, 11, 2), float32]) -> Tensor[(9, 11, 2), float32] {
    %239 = cast(%var_7012, dtype="float32") /* ty=Tensor[(9, 11, 2), float32] */;
    %240 = shape_of(%var_7011, dtype="int32") /* ty=Tensor[(3), int32] */;
    %241 = cast(%var_7011, dtype="float32") /* ty=Tensor[(9, 11, 2), float32] */;
    %242 = dyn.reshape(%239, %240, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    floor_mod(%241, %242) /* ty=Tensor[(9, 11, 2), float32] */
  };
  %243(%var_7040, %var_7041) /* ty=Tensor[(9, 11, 2), float32] */
}

def @func_4963() -> Tensor[(8, 15, 4), float32] {
  %245 = fn () -> Tensor[(8, 15, 4), float32] {
    %244 = @func_3274() /* ty=(Tensor[(8, 15, 4), float32],) */;
    %244.0
  };
  %245() /* ty=Tensor[(8, 15, 4), float32] */
}

def @func_8613(%var_8610: Tensor[(728), uint8], %var_8611: Tensor[(3, 30), float64], %var_8612: Tensor[(1152), uint64]) -> (Tensor[(16, 5, 15), bool], Tensor[(15, 6), float64], Tensor[(728), uint8], Tensor[(3, 30), float64], Tensor[(1152), uint64], Tensor[(8, 15, 4), float64]) {
  %256 = fn (%var_8601: Tensor[(728), uint8], %var_8602: Tensor[(3, 30), float64], %var_8603: Tensor[(1152), uint64]) -> (Tensor[(16, 5, 15), bool], Tensor[(15, 6), float64], Tensor[(728), uint8], Tensor[(3, 30), float64], Tensor[(1152), uint64], Tensor[(8, 15, 4), float64]) {
    %246 = cast(%var_8601, dtype="uint8") /* ty=Tensor[(728), uint8] */;
    %247 = cast(%var_8602, dtype="float64") /* ty=Tensor[(3, 30), float64] */;
    %248 = cast(%var_8603, dtype="uint64") /* ty=Tensor[(1152), uint64] */;
    %249 = reshape(%246, newshape=[728]) /* ty=Tensor[(728), uint8] */;
    %250 = reshape(%247, newshape=[90]) /* ty=Tensor[(90), float64] */;
    %251 = reshape(%248, newshape=[1152]) /* ty=Tensor[(1152), uint64] */;
    %252 = @func_5738(%249, %250, %251) /* ty=(Tensor[(8, 15, 4), float64], Tensor[(14, 9, 12), float64], Tensor[(728), uint8], Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), bool], Tensor[(15, 6), float64], Tensor[(90), float64], Tensor[(1152), uint64], Tensor[(8, 15, 4), float32], Tensor[(12, 16, 6), float64]) */;
    %253 = @func_6171() /* ty=Tensor[(16, 5, 15), bool] */;
    %254 = %252.5;
    %255 = @func_5625() /* ty=Tensor[(8, 15, 4), float64] */;
    (%253, %254, %var_8601, %var_8602, %var_8603, %255)
  };
  %256(%var_8610, %var_8611, %var_8612) /* ty=(Tensor[(16, 5, 15), bool], Tensor[(15, 6), float64], Tensor[(728), uint8], Tensor[(3, 30), float64], Tensor[(1152), uint64], Tensor[(8, 15, 4), float64]) */
}

def @func_6128() -> Tensor[(16, 5, 15), bool] {
  @func_6126() /* ty=Tensor[(16, 5, 15), bool] */
}

def @func_12686(%var_12679: Tensor[(462, 2), float64]) -> (Tensor[(16, 5, 15), bool], Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float64], Tensor[(462, 2), float64]) {
  %257 = cast(%var_12679, dtype="float64") /* ty=Tensor[(462, 2), float64] */;
  %258 = reshape(%257, newshape=[462, 2]) /* ty=Tensor[(462, 2), float64] */;
  %259 = @func_8784(%258) /* ty=(Tensor[(16, 5, 15), bool], Tensor[(8, 15, 4), float64], Tensor[(462, 2), float64]) */;
  %260 = @func_9675() /* ty=Tensor[(16, 5, 15), bool] */;
  %261 = @func_12294() /* ty=Tensor[(8, 15, 4), float32] */;
  %262 = %259.1;
  (%260, %261, %262, %var_12679)
}

def @func_12522() -> (Tensor[(16, 5, 15), bool],) {
  @func_12520() /* ty=(Tensor[(16, 5, 15), bool],) */
}

def @func_4636() -> (Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float32]) {
  @func_4634() /* ty=(Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float32]) */
}

def @func_6717() -> Tensor[(14, 14, 10), uint16] {
  %263 = cast(meta[relay.Constant][21] /* ty=Tensor[(14, 14, 1), uint16] */, dtype="uint16") /* ty=Tensor[(14, 14, 1), uint16] */;
  %264 = cast(meta[relay.Constant][22] /* ty=Tensor[(14, 14, 10), uint16] */, dtype="uint16") /* ty=Tensor[(14, 14, 10), uint16] */;
  maximum(%263, %264) /* ty=Tensor[(14, 14, 10), uint16] */
}

def @func_9406() -> (Tensor[(8, 15, 4), float32],) {
  %266 = fn () -> (Tensor[(8, 15, 4), float32],) {
    %265 = @func_6933() /* ty=Tensor[(8, 15, 4), float32] */;
    (%265,)
  };
  %266() /* ty=(Tensor[(8, 15, 4), float32],) */
}

def @func_5042() -> (Tensor[(8, 15, 4), float32],) {
  %267 = @func_4962() /* ty=Tensor[(8, 15, 4), float32] */;
  (%267,)
}

def @func_8168() -> (Tensor[(8, 15, 4), float32], Tensor[(504), float64]) {
  %272 = fn () -> (Tensor[(8, 15, 4), float32], Tensor[(504), float64]) {
    %268 = @func_4417() /* ty=(Tensor[(8, 15, 4), float32],) */;
    %269 = @func_6094() /* ty=(Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float64], Tensor[(12, 3, 14), bool], Tensor[(504), float64]) */;
    %270 = %268.0;
    %271 = %269.4;
    (%270, %271)
  };
  %272() /* ty=(Tensor[(8, 15, 4), float32], Tensor[(504), float64]) */
}

def @func_11653() -> (Tensor[(16, 5, 15), bool],) {
  @func_11651() /* ty=(Tensor[(16, 5, 15), bool],) */
}

def @func_6934() -> Tensor[(8, 15, 4), float32] {
  %273 = fn () -> Tensor[(8, 15, 4), float32] {
    @func_6309() /* ty=Tensor[(8, 15, 4), float32] */
  };
  %273() /* ty=Tensor[(8, 15, 4), float32] */
}

def @func_11862() -> (Tensor[(8, 15, 4), float64], Tensor[(16, 5, 15), bool], Tensor[(1200, 1), bool]) {
  %281 = fn () -> (Tensor[(8, 15, 4), float64], Tensor[(16, 5, 15), bool], Tensor[(1200, 1), bool]) {
    %274 = @func_5418() /* ty=(Tensor[(16, 5, 15), bool], Tensor[(8, 15, 4), float64]) */;
    %275 = %274.0;
    %276 = cast(%275, dtype="bool") /* ty=Tensor[(16, 5, 15), bool] */;
    %277 = reshape(%276, newshape=[1200, 1]) /* ty=Tensor[(1200, 1), bool] */;
    %278 = @func_7369(%277) /* ty=(Tensor[(14, 14, 10), float64], Tensor[(8, 15, 4), float32], Tensor[(16, 5, 15), float32], Tensor[(1200, 1), bool], Tensor[(13, 4, 14), uint8], Tensor[(728), uint8]) */;
    %279 = @func_5625() /* ty=Tensor[(8, 15, 4), float64] */;
    %280 = %278.3;
    (%279, %275, %280)
  };
  %281() /* ty=(Tensor[(8, 15, 4), float64], Tensor[(16, 5, 15), bool], Tensor[(1200, 1), bool]) */
}

def @func_4696(%var_4687: int16, %var_4688: Tensor[(11, 12, 7), int16]) -> Tensor[(11, 12, 7), int16] {
  %282 = cast(%var_4687, dtype="int16") /* ty=int16 */;
  %283 = cast(%var_4688, dtype="int16") /* ty=Tensor[(11, 12, 7), int16] */;
  minimum(%282, %283) /* ty=Tensor[(11, 12, 7), int16] */
}

def @func_7640() -> (Tensor[(11, 4, 12), uint16], Tensor[(16, 5, 15), bool], Tensor[(11, 4, 12), float64]) {
  %284 = cast(meta[relay.Constant][23] /* ty=Tensor[(11, 4, 12), float32] */, dtype="float32") /* ty=Tensor[(11, 4, 12), float32] */;
  %285 = rsqrt(%284) /* ty=Tensor[(11, 4, 12), float32] */;
  %286 = cast(meta[relay.Constant][23] /* ty=Tensor[(11, 4, 12), float32] */, dtype="uint16") /* ty=Tensor[(11, 4, 12), uint16] */;
  %287 = shape_of(%285, dtype="int32") /* ty=Tensor[(3), int32] */;
  %288 = cast(%285, dtype="uint16") /* ty=Tensor[(11, 4, 12), uint16] */;
  %289 = dyn.reshape(%286, %287, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %290 = @func_4475() /* ty=(Tensor[(16, 5, 15), bool], Tensor[(8, 15, 4), float32]) */;
  %291 = cast(meta[relay.Constant][23] /* ty=Tensor[(11, 4, 12), float32] */, dtype="float64") /* ty=Tensor[(11, 4, 12), float64] */;
  %292 = maximum(%288, %289) /* ty=Tensor[(11, 4, 12), uint16] */;
  %293 = %290.0;
  %294 = acosh(%291) /* ty=Tensor[(11, 4, 12), float64] */;
  (%292, %293, %294)
}

def @func_549(%var_547: Tensor[(13, 4, 14), uint8], %var_548: Tensor[(13, 4, 14), uint8]) -> (Tensor[(13, 4, 14), uint8], Tensor[(14, 9, 12), float64], Tensor[(1512), float64], Tensor[(14, 9, 12), float64], Tensor[(14, 9, 12), float64], Tensor[(14, 9, 12), float64]) {
  %316 = fn (%var_472: Tensor[(13, 4, 14), uint8], %var_473: Tensor[(13, 4, 14), uint8]) -> (Tensor[(13, 4, 14), uint8], Tensor[(14, 9, 12), float64], Tensor[(1512), float64], Tensor[(14, 9, 12), float64], Tensor[(14, 9, 12), float64], Tensor[(14, 9, 12), float64]) {
    %295 = cast(%var_473, dtype="uint8") /* ty=Tensor[(13, 4, 14), uint8] */;
    %296 = shape_of(%var_472, dtype="int32") /* ty=Tensor[(3), int32] */;
    %297 = cast(%var_472, dtype="uint8") /* ty=Tensor[(13, 4, 14), uint8] */;
    %298 = dyn.reshape(%295, %296, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %299 = cast(meta[relay.Constant][24] /* ty=Tensor[(1512), float64] */, dtype="float64") /* ty=Tensor[(1512), float64] */;
    %300 = reshape(%299, newshape=[14, 9, 12]) /* ty=Tensor[(14, 9, 12), float64] */;
    %301 = @func_424(%300) /* ty=(Tensor[(14, 9, 12), float64],) */;
    %302 = %301.0;
    %303 = cast(%302, dtype="float64") /* ty=Tensor[(14, 9, 12), float64] */;
    %304 = reshape(%303, newshape=[14, 9, 12]) /* ty=Tensor[(14, 9, 12), float64] */;
    %305 = @func_424(%304) /* ty=(Tensor[(14, 9, 12), float64],) */;
    %306 = cast(meta[relay.Constant][24] /* ty=Tensor[(1512), float64] */, dtype="float64") /* ty=Tensor[(1512), float64] */;
    %307 = reshape(%306, newshape=[14, 9, 12]) /* ty=Tensor[(14, 9, 12), float64] */;
    %308 = @func_424(%307) /* ty=(Tensor[(14, 9, 12), float64],) */;
    %309 = %308.0;
    %310 = cast(%309, dtype="float64") /* ty=Tensor[(14, 9, 12), float64] */;
    %311 = reshape(%310, newshape=[14, 9, 12]) /* ty=Tensor[(14, 9, 12), float64] */;
    %312 = @func_424(%311) /* ty=(Tensor[(14, 9, 12), float64],) */;
    %313 = left_shift(%297, %298) /* ty=Tensor[(13, 4, 14), uint8] */;
    %314 = %305.0;
    %315 = %312.0;
    (%313, %302, meta[relay.Constant][24] /* ty=Tensor[(1512), float64] */, %314, %309, %315)
  };
  %316(%var_547, %var_548) /* ty=(Tensor[(13, 4, 14), uint8], Tensor[(14, 9, 12), float64], Tensor[(1512), float64], Tensor[(14, 9, 12), float64], Tensor[(14, 9, 12), float64], Tensor[(14, 9, 12), float64]) */
}

def @func_5768() -> Tensor[(8, 15, 4), float32] {
  @func_3759() /* ty=Tensor[(8, 15, 4), float32] */
}

def @func_3761() -> Tensor[(8, 15, 4), float32] {
  @func_3759() /* ty=Tensor[(8, 15, 4), float32] */
}

def @func_8535() -> Tensor[(8, 15, 4), float32] {
  %317 = @func_6838() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %317.0
}

def @func_8537() -> Tensor[(8, 15, 4), float32] {
  @func_8535() /* ty=Tensor[(8, 15, 4), float32] */
}

def @func_3898() -> Tensor[(8, 15, 4), bool] {
  @func_3896() /* ty=Tensor[(8, 15, 4), bool] */
}

def @func_11353() -> (Tensor[(504), float64], Tensor[(728), uint8], Tensor[(90), float64], Tensor[(12, 16, 6), bool], Tensor[(90), float64], Tensor[(13, 16, 7), float32], Tensor[(8, 15, 4), float32]) {
  @func_11351() /* ty=(Tensor[(504), float64], Tensor[(728), uint8], Tensor[(90), float64], Tensor[(12, 16, 6), bool], Tensor[(90), float64], Tensor[(13, 16, 7), float32], Tensor[(8, 15, 4), float32]) */
}

def @func_8124() -> Tensor[(16, 5, 15), bool] {
  @func_8122() /* ty=Tensor[(16, 5, 15), bool] */
}

def @func_5882(%var_5880: int64) -> Tensor[(9, 12, 11), int64] {
  @func_5879(%var_5880) /* ty=Tensor[(9, 12, 11), int64] */
}

def @func_762(%var_760: Tensor[(14, 11, 6), float64], %var_761: Tensor[(14, 11, 6), float64]) -> (Tensor[(14, 11, 6), float32],) {
  @func_758(%var_760, %var_761) /* ty=(Tensor[(14, 11, 6), float32],) */
}

def @func_5928() -> (Tensor[(8, 15, 4), float32],) {
  %320 = fn () -> (Tensor[(8, 15, 4), float32],) {
    %318 = @func_3274() /* ty=(Tensor[(8, 15, 4), float32],) */;
    %319 = %318.0;
    (%319,)
  };
  %320() /* ty=(Tensor[(8, 15, 4), float32],) */
}

def @func_7369(%var_7346: Tensor[(1200, 1), bool]) -> (Tensor[(14, 14, 10), float64], Tensor[(8, 15, 4), float32], Tensor[(16, 5, 15), float32], Tensor[(1200, 1), bool], Tensor[(13, 4, 14), uint8], Tensor[(728), uint8]) {
  %321 = @func_6786() /* ty=(Tensor[(14, 14, 10), float64],) */;
  %322 = cast(%var_7346, dtype="bool") /* ty=Tensor[(1200, 1), bool] */;
  %323 = reshape(%322, newshape=[16, 5, 15]) /* ty=Tensor[(16, 5, 15), bool] */;
  %324 = cast(meta[relay.Constant][25] /* ty=Tensor[(728), uint8] */, dtype="uint8") /* ty=Tensor[(728), uint8] */;
  %325 = cast(meta[relay.Constant][25] /* ty=Tensor[(728), uint8] */, dtype="uint8") /* ty=Tensor[(728), uint8] */;
  %326 = reshape(%324, newshape=[13, 4, 14]) /* ty=Tensor[(13, 4, 14), uint8] */;
  %327 = reshape(%325, newshape=[13, 4, 14]) /* ty=Tensor[(13, 4, 14), uint8] */;
  %328 = @func_7141(%326, %327) /* ty=(Tensor[(13, 4, 14), uint8],) */;
  %329 = %321.0;
  %330 = @func_5768() /* ty=Tensor[(8, 15, 4), float32] */;
  %331 = @func_4788(%323) /* ty=Tensor[(16, 5, 15), float32] */;
  %332 = %328.0;
  (%329, %330, %331, %var_7346, %332, meta[relay.Constant][25] /* ty=Tensor[(728), uint8] */)
}

def @func_5316() -> Tensor[(8, 15, 4), float32] {
  %333 = fn () -> Tensor[(8, 15, 4), float32] {
    @func_3759() /* ty=Tensor[(8, 15, 4), float32] */
  };
  %333() /* ty=Tensor[(8, 15, 4), float32] */
}

def @func_8761(%var_8758: Tensor[(12, 16, 9), int16], %var_8759: Tensor[(12, 16, 9), int16], %var_8760: Tensor[(12, 16, 9), float64]) -> (Tensor[(12, 16, 9), int16], Tensor[(12, 16, 9), bool]) {
  @func_8756(%var_8758, %var_8759, %var_8760) /* ty=(Tensor[(12, 16, 9), int16], Tensor[(12, 16, 9), bool]) */
}

def @func_7859() -> (Tensor[(8, 15, 4), float64], Tensor[(8, 15, 4), int64]) {
  %340 = fn () -> (Tensor[(8, 15, 4), float64], Tensor[(8, 15, 4), int64]) {
    %334 = @func_5012() /* ty=(Tensor[(16, 5, 15), bool], Tensor[(12, 16, 6), uint64], Tensor[(1152), uint64], Tensor[(8, 15, 4), float64]) */;
    %335 = %334.3;
    %336 = cast(%335, dtype="float64") /* ty=Tensor[(8, 15, 4), float64] */;
    %337 = reshape(%336, newshape=[8, 15, 4]) /* ty=Tensor[(8, 15, 4), float64] */;
    %338 = @func_5560(%337) /* ty=(Tensor[(672), bool], Tensor[(90), float64], Tensor[(1152), uint64], Tensor[(8, 15, 4), int64]) */;
    %339 = %338.3;
    (%335, %339)
  };
  %340() /* ty=(Tensor[(8, 15, 4), float64], Tensor[(8, 15, 4), int64]) */
}

def @func_12463() -> (Tensor[(8, 15, 4), float32], Tensor[(14, 14, 10), float32]) {
  %345 = fn () -> (Tensor[(8, 15, 4), float32], Tensor[(14, 14, 10), float32]) {
    %341 = @func_10722() /* ty=(Tensor[(8, 15, 4), float32], Tensor[(13, 16, 7), float32], Tensor[(1456), float64]) */;
    %342 = @func_10633() /* ty=(Tensor[(14, 14, 10), float32],) */;
    %343 = %341.0;
    %344 = %342.0;
    (%343, %344)
  };
  %345() /* ty=(Tensor[(8, 15, 4), float32], Tensor[(14, 14, 10), float32]) */
}

def @func_10610(%var_10606: Tensor[(42), bool], %var_10607: Tensor[(1152), uint64], %var_10608: Tensor[(360), float64], %var_10609: Tensor[(462, 2), float64]) -> (Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float64], bool, Tensor[(42), bool], Tensor[(12, 16, 6), uint64], Tensor[(1152), uint64], Tensor[(9, 10, 4), float64], Tensor[(360), float64], Tensor[(462, 2), float64], Tensor[(14, 14, 10), float32], Tensor[(16, 5, 15), bool]) {
  @func_10604(%var_10606, %var_10607, %var_10608, %var_10609) /* ty=(Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float64], bool, Tensor[(42), bool], Tensor[(12, 16, 6), uint64], Tensor[(1152), uint64], Tensor[(9, 10, 4), float64], Tensor[(360), float64], Tensor[(462, 2), float64], Tensor[(14, 14, 10), float32], Tensor[(16, 5, 15), bool]) */
}

def @func_9790() -> (Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), uint16], Tensor[(16, 5, 15), int8], Tensor[(14, 14, 10), uint16]) {
  @func_9788() /* ty=(Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), uint16], Tensor[(16, 5, 15), int8], Tensor[(14, 14, 10), uint16]) */
}

def @func_2155(%var_2153: Tensor[(12, 16, 6), uint64], %var_2154: Tensor[(12, 16, 6), uint64]) -> Tensor[(12, 16, 6), uint64] {
  %350 = fn (%var_2124: Tensor[(12, 16, 6), uint64], %var_2125: Tensor[(12, 16, 6), uint64]) -> Tensor[(12, 16, 6), uint64] {
    %346 = cast(%var_2125, dtype="uint64") /* ty=Tensor[(12, 16, 6), uint64] */;
    %347 = shape_of(%var_2124, dtype="int32") /* ty=Tensor[(3), int32] */;
    %348 = cast(%var_2124, dtype="uint64") /* ty=Tensor[(12, 16, 6), uint64] */;
    %349 = dyn.reshape(%346, %347, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    right_shift(%348, %349) /* ty=Tensor[(12, 16, 6), uint64] */
  };
  %350(%var_2153, %var_2154) /* ty=Tensor[(12, 16, 6), uint64] */
}

def @func_6788() -> (Tensor[(14, 14, 10), float64],) {
  @func_6786() /* ty=(Tensor[(14, 14, 10), float64],) */
}

def @func_10955(%var_10954: Tensor[(924), float64]) -> (Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float32], Tensor[(924), float64]) {
  %357 = fn (%var_10942: Tensor[(924), float64]) -> (Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float32], Tensor[(924), float64]) {
    %351 = @func_5151() /* ty=(Tensor[(8, 15, 4), float32],) */;
    %352 = cast(%var_10942, dtype="float64") /* ty=Tensor[(924), float64] */;
    %353 = reshape(%352, newshape=[1, 924]) /* ty=Tensor[(1, 924), float64] */;
    %354 = @func_7125(%353) /* ty=(Tensor[(8, 15, 4), float64], Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float32], Tensor[(14, 11, 6), float32], Tensor[(1, 924), float64]) */;
    %355 = %351.0;
    %356 = %354.2;
    (%355, %356, %var_10942)
  };
  %357(%var_10954) /* ty=(Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float32], Tensor[(924), float64]) */
}

def @func_10635() -> (Tensor[(14, 14, 10), float32],) {
  @func_10633() /* ty=(Tensor[(14, 14, 10), float32],) */
}

def @func_7784() -> Tensor[(8, 15, 4), bool] {
  @func_7782() /* ty=Tensor[(8, 15, 4), bool] */
}

def @func_10836(%var_10835: Tensor[(1456), float64]) -> (Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float64], Tensor[(924), float64], Tensor[(8, 15, 4), float32], Tensor[(1456), float64]) {
  %367 = fn (%var_10826: Tensor[(1456), float64]) -> (Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float64], Tensor[(924), float64], Tensor[(8, 15, 4), float32], Tensor[(1456), float64]) {
    %358 = cast(meta[relay.Constant][26] /* ty=Tensor[(924), float64] */, dtype="float64") /* ty=Tensor[(924), float64] */;
    %359 = reshape(%358, newshape=[462, 2]) /* ty=Tensor[(462, 2), float64] */;
    %360 = @func_8784(%359) /* ty=(Tensor[(16, 5, 15), bool], Tensor[(8, 15, 4), float64], Tensor[(462, 2), float64]) */;
    %361 = cast(%var_10826, dtype="float64") /* ty=Tensor[(1456), float64] */;
    %362 = reshape(%361, newshape=[13, 16, 7]) /* ty=Tensor[(13, 16, 7), float64] */;
    %363 = @func_9319(%362) /* ty=(Tensor[(13, 16, 7), float32], Tensor[(13, 16, 7), uint16], Tensor[(8, 15, 4), float32]) */;
    %364 = @func_3759() /* ty=Tensor[(8, 15, 4), float32] */;
    %365 = %360.1;
    %366 = %363.2;
    (%364, %365, meta[relay.Constant][26] /* ty=Tensor[(924), float64] */, %366, %var_10826)
  };
  %367(%var_10835) /* ty=(Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float64], Tensor[(924), float64], Tensor[(8, 15, 4), float32], Tensor[(1456), float64]) */
}

def @func_6897(%var_6896: Tensor[(924), float64]) -> (Tensor[(12, 3, 14), int64], Tensor[(14, 11, 6), float32], Tensor[(924), float64]) {
  %376 = fn (%var_6884: Tensor[(924), float64]) -> (Tensor[(12, 3, 14), int64], Tensor[(14, 11, 6), float32], Tensor[(924), float64]) {
    %368 = @func_3314() /* ty=(Tensor[(16, 5, 15), bool], Tensor[(12, 3, 14), int64], Tensor[(504, 1), float64]) */;
    %369 = cast(%var_6884, dtype="float64") /* ty=Tensor[(924), float64] */;
    %370 = cast(%var_6884, dtype="float64") /* ty=Tensor[(924), float64] */;
    %371 = reshape(%369, newshape=[14, 11, 6]) /* ty=Tensor[(14, 11, 6), float64] */;
    %372 = reshape(%370, newshape=[14, 11, 6]) /* ty=Tensor[(14, 11, 6), float64] */;
    %373 = @func_758(%371, %372) /* ty=(Tensor[(14, 11, 6), float32],) */;
    %374 = %368.1;
    %375 = %373.0;
    (%374, %375, %var_6884)
  };
  %376(%var_6896) /* ty=(Tensor[(12, 3, 14), int64], Tensor[(14, 11, 6), float32], Tensor[(924), float64]) */
}

def @func_6012(%var_6011: Tensor[(924), float64]) -> (Tensor[(16, 5, 15), bool], Tensor[(154, 6), bool], Tensor[(1, 360), float64], Tensor[(924), float64]) {
  %384 = fn (%var_6003: Tensor[(924), float64]) -> (Tensor[(16, 5, 15), bool], Tensor[(154, 6), bool], Tensor[(1, 360), float64], Tensor[(924), float64]) {
    %377 = cast(meta[relay.Constant][27] /* ty=Tensor[(1, 360), float64] */, dtype="float64") /* ty=Tensor[(1, 360), float64] */;
    %378 = cast(%var_6003, dtype="float64") /* ty=Tensor[(924), float64] */;
    %379 = reshape(%377, newshape=[9, 10, 4]) /* ty=Tensor[(9, 10, 4), float64] */;
    %380 = reshape(%378, newshape=[154, 6]) /* ty=Tensor[(154, 6), float64] */;
    %381 = @func_1280(%379, %380) /* ty=(Tensor[(9, 10, 4), float64], Tensor[(154, 6), bool]) */;
    %382 = @func_4197() /* ty=Tensor[(16, 5, 15), bool] */;
    %383 = %381.1;
    (%382, %383, meta[relay.Constant][27] /* ty=Tensor[(1, 360), float64] */, %var_6003)
  };
  %384(%var_6011) /* ty=(Tensor[(16, 5, 15), bool], Tensor[(154, 6), bool], Tensor[(1, 360), float64], Tensor[(924), float64]) */
}

def @func_8964(%var_8886: Tensor[(45, 2), float64], %var_8887: Tensor[(1152), uint64], %var_8892: Tensor[(198), float32], %var_8923: Tensor[(2, 336), bool], %var_8926: Tensor[(13, 4, 14), uint8], %var_8934: Tensor[(256), float32], %var_8935: int32, %var_8951: Tensor[(360), float64], %var_8960: Tensor[(2, 168), bool]) -> (Tensor[(14, 14, 10), float64], Tensor[(728), uint8], Tensor[(16, 5, 15), bool], Tensor[(13, 4, 14), uint8], Tensor[(14, 9, 12), float64], Tensor[(45, 2), float64], Tensor[(1152), uint64], Tensor[(9, 11, 2), float32], Tensor[(198), float32], Tensor[(90), float64], Tensor[(2, 336), bool], Tensor[(13, 4, 14), float32], Tensor[(8, 8, 4), uint8], Tensor[(256), float32], int32, Tensor[(9, 10, 4), float64], Tensor[(360), float64], Tensor[(7, 132), float64], Tensor[(672), bool], Tensor[(2, 168), bool]) {
  %385 = @func_6786() /* ty=(Tensor[(14, 14, 10), float64],) */;
  %386 = cast(meta[relay.Constant][28] /* ty=Tensor[(728), uint8] */, dtype="uint8") /* ty=Tensor[(728), uint8] */;
  %387 = cast(meta[relay.Constant][28] /* ty=Tensor[(728), uint8] */, dtype="uint8") /* ty=Tensor[(728), uint8] */;
  %388 = reshape(%386, newshape=[13, 4, 14]) /* ty=Tensor[(13, 4, 14), uint8] */;
  %389 = reshape(%387, newshape=[13, 4, 14]) /* ty=Tensor[(13, 4, 14), uint8] */;
  %390 = @func_546(%388, %389) /* ty=(Tensor[(13, 4, 14), uint8], Tensor[(14, 9, 12), float64], Tensor[(1512), float64], Tensor[(14, 9, 12), float64], Tensor[(14, 9, 12), float64], Tensor[(14, 9, 12), float64]) */;
  %391 = cast(meta[relay.Constant][28] /* ty=Tensor[(728), uint8] */, dtype="uint8") /* ty=Tensor[(728), uint8] */;
  %392 = cast(meta[relay.Constant][28] /* ty=Tensor[(728), uint8] */, dtype="uint8") /* ty=Tensor[(728), uint8] */;
  %393 = reshape(%391, newshape=[13, 4, 14]) /* ty=Tensor[(13, 4, 14), uint8] */;
  %394 = reshape(%392, newshape=[13, 4, 14]) /* ty=Tensor[(13, 4, 14), uint8] */;
  %395 = @func_7141(%393, %394) /* ty=(Tensor[(13, 4, 14), uint8],) */;
  %396 = %395.0;
  %397 = cast(%396, dtype="uint8") /* ty=Tensor[(13, 4, 14), uint8] */;
  %398 = cast(%var_8886, dtype="float64") /* ty=Tensor[(45, 2), float64] */;
  %399 = cast(%var_8887, dtype="uint64") /* ty=Tensor[(1152), uint64] */;
  %400 = reshape(%397, newshape=[728]) /* ty=Tensor[(728), uint8] */;
  %401 = reshape(%398, newshape=[90]) /* ty=Tensor[(90), float64] */;
  %402 = reshape(%399, newshape=[1152]) /* ty=Tensor[(1152), uint64] */;
  %403 = @func_5738(%400, %401, %402) /* ty=(Tensor[(8, 15, 4), float64], Tensor[(14, 9, 12), float64], Tensor[(728), uint8], Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), bool], Tensor[(15, 6), float64], Tensor[(90), float64], Tensor[(1152), uint64], Tensor[(8, 15, 4), float32], Tensor[(12, 16, 6), float64]) */;
  %404 = cast(%var_8892, dtype="float32") /* ty=Tensor[(198), float32] */;
  %405 = cast(%var_8892, dtype="float32") /* ty=Tensor[(198), float32] */;
  %406 = reshape(%404, newshape=[9, 11, 2]) /* ty=Tensor[(9, 11, 2), float32] */;
  %407 = reshape(%405, newshape=[9, 11, 2]) /* ty=Tensor[(9, 11, 2), float32] */;
  %408 = cast(%var_8886, dtype="float64") /* ty=Tensor[(45, 2), float64] */;
  %409 = %403.1;
  %410 = cast(%409, dtype="float64") /* ty=Tensor[(14, 9, 12), float64] */;
  %411 = cast(%var_8923, dtype="bool") /* ty=Tensor[(2, 336), bool] */;
  %412 = reshape(%408, newshape=[90]) /* ty=Tensor[(90), float64] */;
  %413 = reshape(%410, newshape=[1512]) /* ty=Tensor[(1512), float64] */;
  %414 = reshape(%411, newshape=[168, 4]) /* ty=Tensor[(168, 4), bool] */;
  %415 = @func_7696(%412, %413, %414) /* ty=(Tensor[(8, 15, 4), float64], Tensor[(16, 5, 15), bool], Tensor[(13, 4, 14), uint8], Tensor[(182, 4), uint8], Tensor[(1512), float64], Tensor[(90), float64], Tensor[(990), float64], Tensor[(1512), float64], Tensor[(336), bool], Tensor[(168, 4), bool], Tensor[(1152), uint64]) */;
  %416 = cast(%var_8926, dtype="float32") /* ty=Tensor[(13, 4, 14), float32] */;
  %417 = shape_of(%396, dtype="int32") /* ty=Tensor[(3), int32] */;
  %418 = cast(%396, dtype="float32") /* ty=Tensor[(13, 4, 14), float32] */;
  %419 = dyn.reshape(%416, %417, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %420 = cast(%var_8934, dtype="float32") /* ty=Tensor[(256), float32] */;
  %421 = cast(%var_8934, dtype="float32") /* ty=Tensor[(256), float32] */;
  %422 = cast(%var_8935, dtype="int32") /* ty=int32 */;
  %423 = reshape(%420, newshape=[8, 8, 4]) /* ty=Tensor[(8, 8, 4), float32] */;
  %424 = reshape(%421, newshape=[8, 8, 4]) /* ty=Tensor[(8, 8, 4), float32] */;
  %425 = reshape(%422, newshape=[]) /* ty=int32 */;
  %426 = @func_3036(%423, %424, %425) /* ty=(Tensor[(8, 8, 4), float32], Tensor[(14, 12, 2), bool], int32, Tensor[(168, 2), int32], Tensor[(8, 8, 4), uint8]) */;
  %427 = cast(%var_8951, dtype="float64") /* ty=Tensor[(360), float64] */;
  %428 = cast(meta[relay.Constant][29] /* ty=Tensor[(7, 132), float64] */, dtype="float64") /* ty=Tensor[(7, 132), float64] */;
  %429 = reshape(%427, newshape=[9, 10, 4]) /* ty=Tensor[(9, 10, 4), float64] */;
  %430 = reshape(%428, newshape=[154, 6]) /* ty=Tensor[(154, 6), float64] */;
  %431 = @func_1280(%429, %430) /* ty=(Tensor[(9, 10, 4), float64], Tensor[(154, 6), bool]) */;
  %432 = cast(%409, dtype="float64") /* ty=Tensor[(14, 9, 12), float64] */;
  %433 = cast(%var_8960, dtype="bool") /* ty=Tensor[(2, 168), bool] */;
  %434 = cast(%var_8887, dtype="uint64") /* ty=Tensor[(1152), uint64] */;
  %435 = cast(%var_8935, dtype="int32") /* ty=int32 */;
  %436 = reshape(%432, newshape=[1512]) /* ty=Tensor[(1512), float64] */;
  %437 = reshape(%433, newshape=[336]) /* ty=Tensor[(336), bool] */;
  %438 = reshape(%434, newshape=[1152]) /* ty=Tensor[(1152), uint64] */;
  %439 = reshape(%435, newshape=[]) /* ty=int32 */;
  %440 = @func_5389(%436, %437, %438, %439) /* ty=(Tensor[(8, 15, 4), float32], Tensor[(12, 3, 14), float32], Tensor[(672), bool], Tensor[(1512), float64], Tensor[(336), bool], Tensor[(168, 4), bool], Tensor[(1152), uint64], Tensor[(990, 90), bool], Tensor[(14, 12, 2), bool], int32) */;
  %441 = %385.0;
  %442 = @func_5496() /* ty=Tensor[(16, 5, 15), bool] */;
  %443 = %390.0;
  %444 = @func_7039(%406, %407) /* ty=Tensor[(9, 11, 2), float32] */;
  %445 = %415.5;
  %446 = mod(%418, %419) /* ty=Tensor[(13, 4, 14), float32] */;
  %447 = %426.4;
  %448 = %431.0;
  %449 = %440.2;
  (%441, meta[relay.Constant][28] /* ty=Tensor[(728), uint8] */, %442, %443, %409, %var_8886, %var_8887, %444, %var_8892, %445, %var_8923, %446, %447, %var_8934, %var_8935, %448, %var_8951, meta[relay.Constant][29] /* ty=Tensor[(7, 132), float64] */, %449, %var_8960)
}

def @func_8756(%var_8726: Tensor[(12, 16, 9), int16], %var_8727: Tensor[(12, 16, 9), int16], %var_8746: Tensor[(12, 16, 9), float64]) -> (Tensor[(12, 16, 9), int16], Tensor[(12, 16, 9), bool]) {
  %450 = cast(%var_8727, dtype="int16") /* ty=Tensor[(12, 16, 9), int16] */;
  %451 = shape_of(%var_8726, dtype="int32") /* ty=Tensor[(3), int32] */;
  %452 = cast(%var_8726, dtype="int16") /* ty=Tensor[(12, 16, 9), int16] */;
  %453 = dyn.reshape(%450, %451, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %454 = cast(%var_8726, dtype="float64") /* ty=Tensor[(12, 16, 9), float64] */;
  %455 = asin(%454) /* ty=Tensor[(12, 16, 9), float64] */;
  %456 = cast(%var_8746, dtype="bool") /* ty=Tensor[(12, 16, 9), bool] */;
  %457 = shape_of(%455, dtype="int32") /* ty=Tensor[(3), int32] */;
  %458 = cast(%455, dtype="bool") /* ty=Tensor[(12, 16, 9), bool] */;
  %459 = dyn.reshape(%456, %457, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %460 = minimum(%452, %453) /* ty=Tensor[(12, 16, 9), int16] */;
  %461 = equal(%458, %459) /* ty=Tensor[(12, 16, 9), bool] */;
  (%460, %461)
}

def @func_12109() -> (Tensor[(16, 5, 15), bool],) {
  @func_12107() /* ty=(Tensor[(16, 5, 15), bool],) */
}

def @func_2877(%var_2875: Tensor[(9, 15, 10), float32], %var_2876: Tensor[(9, 15, 10), float32]) -> (Tensor[(9, 15, 10), float32],) {
  %467 = fn (%var_2869: Tensor[(9, 15, 10), float32], %var_2870: Tensor[(9, 15, 10), float32]) -> (Tensor[(9, 15, 10), float32],) {
    %462 = cast(%var_2870, dtype="float32") /* ty=Tensor[(9, 15, 10), float32] */;
    %463 = shape_of(%var_2869, dtype="int32") /* ty=Tensor[(3), int32] */;
    %464 = cast(%var_2869, dtype="float32") /* ty=Tensor[(9, 15, 10), float32] */;
    %465 = dyn.reshape(%462, %463, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %466 = mod(%464, %465) /* ty=Tensor[(9, 15, 10), float32] */;
    (%466,)
  };
  %467(%var_2875, %var_2876) /* ty=(Tensor[(9, 15, 10), float32],) */
}

def @func_3131() -> (Tensor[(8, 15, 4), float32],) {
  %470 = fn () -> (Tensor[(8, 15, 4), float32],) {
    %468 = cast(meta[relay.Constant][30] /* ty=Tensor[(8, 15, 4), float32] */, dtype="float32") /* ty=Tensor[(8, 15, 4), float32] */;
    %469 = cos(%468) /* ty=Tensor[(8, 15, 4), float32] */;
    (%469,)
  };
  %470() /* ty=(Tensor[(8, 15, 4), float32],) */
}

def @func_4163() -> (Tensor[(16, 5, 15), bool],) {
  %478 = fn () -> (Tensor[(16, 5, 15), bool],) {
    %471 = @func_3314() /* ty=(Tensor[(16, 5, 15), bool], Tensor[(12, 3, 14), int64], Tensor[(504, 1), float64]) */;
    %472 = %471.0;
    %473 = cast(meta[relay.Constant][31] /* ty=Tensor[(16, 5, 15), bool] */, dtype="bool") /* ty=Tensor[(16, 5, 15), bool] */;
    %474 = shape_of(%472, dtype="int32") /* ty=Tensor[(3), int32] */;
    %475 = cast(%472, dtype="bool") /* ty=Tensor[(16, 5, 15), bool] */;
    %476 = dyn.reshape(%473, %474, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %477 = less_equal(%475, %476) /* ty=Tensor[(16, 5, 15), bool] */;
    (%477,)
  };
  %478() /* ty=(Tensor[(16, 5, 15), bool],) */
}

def @func_8122() -> Tensor[(16, 5, 15), bool] {
  @func_7279() /* ty=Tensor[(16, 5, 15), bool] */
}

def @func_3314() -> (Tensor[(16, 5, 15), bool], Tensor[(12, 3, 14), int64], Tensor[(504, 1), float64]) {
  %479 = cast(meta[relay.Constant][32] /* ty=Tensor[(16, 5, 15), float32] */, dtype="float32") /* ty=Tensor[(16, 5, 15), float32] */;
  %480 = sqrt(%479) /* ty=Tensor[(16, 5, 15), float32] */;
  %481 = cast(meta[relay.Constant][32] /* ty=Tensor[(16, 5, 15), float32] */, dtype="bool") /* ty=Tensor[(16, 5, 15), bool] */;
  %482 = shape_of(%480, dtype="int32") /* ty=Tensor[(3), int32] */;
  %483 = cast(%480, dtype="bool") /* ty=Tensor[(16, 5, 15), bool] */;
  %484 = dyn.reshape(%481, %482, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %485 = cast(meta[relay.Constant][33] /* ty=Tensor[(504, 1), float64] */, dtype="float64") /* ty=Tensor[(504, 1), float64] */;
  %486 = cast(meta[relay.Constant][33] /* ty=Tensor[(504, 1), float64] */, dtype="float64") /* ty=Tensor[(504, 1), float64] */;
  %487 = cast(meta[relay.Constant][33] /* ty=Tensor[(504, 1), float64] */, dtype="float64") /* ty=Tensor[(504, 1), float64] */;
  %488 = reshape(%485, newshape=[12, 3, 14]) /* ty=Tensor[(12, 3, 14), float64] */;
  %489 = reshape(%486, newshape=[12, 3, 14]) /* ty=Tensor[(12, 3, 14), float64] */;
  %490 = reshape(%487, newshape=[12, 3, 14]) /* ty=Tensor[(12, 3, 14), float64] */;
  %491 = @func_2745(%488, %489, %490) /* ty=(Tensor[(12, 3, 14), bool], Tensor[(12, 3, 14), int64]) */;
  %492 = less(%483, %484) /* ty=Tensor[(16, 5, 15), bool] */;
  %493 = %491.1;
  (%492, %493, meta[relay.Constant][33] /* ty=Tensor[(504, 1), float64] */)
}

def @func_6840() -> (Tensor[(8, 15, 4), float32],) {
  @func_6838() /* ty=(Tensor[(8, 15, 4), float32],) */
}

def @func_5498() -> Tensor[(16, 5, 15), bool] {
  @func_5496() /* ty=Tensor[(16, 5, 15), bool] */
}

def @func_7782() -> Tensor[(8, 15, 4), bool] {
  @func_3896() /* ty=Tensor[(8, 15, 4), bool] */
}

def @func_7372(%var_7370: Tensor[(1200, 1), bool]) -> (Tensor[(14, 14, 10), float64], Tensor[(8, 15, 4), float32], Tensor[(16, 5, 15), float32], Tensor[(1200, 1), bool], Tensor[(13, 4, 14), uint8], Tensor[(728), uint8]) {
  @func_7369(%var_7370) /* ty=(Tensor[(14, 14, 10), float64], Tensor[(8, 15, 4), float32], Tensor[(16, 5, 15), float32], Tensor[(1200, 1), bool], Tensor[(13, 4, 14), uint8], Tensor[(728), uint8]) */
}

def @func_11896() -> (Tensor[(16, 5, 15), int8], Tensor[(8, 15, 4), float64]) {
  @func_11894() /* ty=(Tensor[(16, 5, 15), int8], Tensor[(8, 15, 4), float64]) */
}

def @func_10525() -> (Tensor[(8, 15, 4), float32],) {
  %494 = @func_8535() /* ty=Tensor[(8, 15, 4), float32] */;
  (%494,)
}

def @func_6173() -> Tensor[(16, 5, 15), bool] {
  @func_6171() /* ty=Tensor[(16, 5, 15), bool] */
}

def @func_5743(%var_5740: Tensor[(728), uint8], %var_5741: Tensor[(90), float64], %var_5742: Tensor[(1152), uint64]) -> (Tensor[(8, 15, 4), float64], Tensor[(14, 9, 12), float64], Tensor[(728), uint8], Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), bool], Tensor[(15, 6), float64], Tensor[(90), float64], Tensor[(1152), uint64], Tensor[(8, 15, 4), float32], Tensor[(12, 16, 6), float64]) {
  @func_5738(%var_5740, %var_5741, %var_5742) /* ty=(Tensor[(8, 15, 4), float64], Tensor[(14, 9, 12), float64], Tensor[(728), uint8], Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), bool], Tensor[(15, 6), float64], Tensor[(90), float64], Tensor[(1152), uint64], Tensor[(8, 15, 4), float32], Tensor[(12, 16, 6), float64]) */
}

def @func_5560(%var_5543: Tensor[(8, 15, 4), float64]) -> (Tensor[(672), bool], Tensor[(90), float64], Tensor[(1152), uint64], Tensor[(8, 15, 4), int64]) {
  %495 = cast(meta[relay.Constant][34] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
  %496 = cast(meta[relay.Constant][35] /* ty=Tensor[(1152), uint64] */, dtype="uint64") /* ty=Tensor[(1152), uint64] */;
  %497 = reshape(%495, newshape=[15, 6]) /* ty=Tensor[(15, 6), float64] */;
  %498 = reshape(%496, newshape=[1152]) /* ty=Tensor[(1152), uint64] */;
  %499 = @func_3950(%497, %498) /* ty=(Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), bool], Tensor[(16, 5, 15), bool], Tensor[(1512), float64], Tensor[(15, 6), float64], Tensor[(990), float64], Tensor[(126, 12), float64], Tensor[(168, 2), bool], Tensor[(672), bool], Tensor[(1152), uint64]) */;
  %500 = @func_3536() /* ty=Tensor[(8, 15, 4), float64] */;
  %501 = cast(%var_5543, dtype="int64") /* ty=Tensor[(8, 15, 4), int64] */;
  %502 = shape_of(%500, dtype="int32") /* ty=Tensor[(3), int32] */;
  %503 = cast(%500, dtype="int64") /* ty=Tensor[(8, 15, 4), int64] */;
  %504 = dyn.reshape(%501, %502, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %505 = %499.8;
  %506 = logical_xor(%503, %504) /* ty=Tensor[(8, 15, 4), int64] */;
  (%505, meta[relay.Constant][34] /* ty=Tensor[(90), float64] */, meta[relay.Constant][35] /* ty=Tensor[(1152), uint64] */, %506)
}

def @func_6643() -> (Tensor[(8, 15, 4), float64], Tensor[(1350), float32], Tensor[(9, 15, 10), float32]) {
  %507 = cast(meta[relay.Constant][36] /* ty=Tensor[(1350), float32] */, dtype="float32") /* ty=Tensor[(1350), float32] */;
  %508 = cast(meta[relay.Constant][36] /* ty=Tensor[(1350), float32] */, dtype="float32") /* ty=Tensor[(1350), float32] */;
  %509 = reshape(%507, newshape=[9, 15, 10]) /* ty=Tensor[(9, 15, 10), float32] */;
  %510 = reshape(%508, newshape=[9, 15, 10]) /* ty=Tensor[(9, 15, 10), float32] */;
  %511 = @func_2874(%509, %510) /* ty=(Tensor[(9, 15, 10), float32],) */;
  %512 = %511.0;
  %513 = cast(%512, dtype="float32") /* ty=Tensor[(9, 15, 10), float32] */;
  %514 = @func_5625() /* ty=Tensor[(8, 15, 4), float64] */;
  %515 = sin(%513) /* ty=Tensor[(9, 15, 10), float32] */;
  (%514, meta[relay.Constant][36] /* ty=Tensor[(1350), float32] */, %515)
}

def @func_10264(%var_10261: Tensor[(9, 14, 5), float64], %var_10262: Tensor[(9, 14, 5), float64], %var_10263: Tensor[(9, 14, 5), float64]) -> (Tensor[(9, 14, 5), float64], Tensor[(9, 14, 5), uint8]) {
  %526 = fn (%var_10241: Tensor[(9, 14, 5), float64], %var_10242: Tensor[(9, 14, 5), float64], %var_10254: Tensor[(9, 14, 5), float64]) -> (Tensor[(9, 14, 5), float64], Tensor[(9, 14, 5), uint8]) {
    %516 = cast(%var_10242, dtype="float64") /* ty=Tensor[(9, 14, 5), float64] */;
    %517 = shape_of(%var_10241, dtype="int32") /* ty=Tensor[(3), int32] */;
    %518 = cast(%var_10241, dtype="float64") /* ty=Tensor[(9, 14, 5), float64] */;
    %519 = dyn.reshape(%516, %517, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %520 = cast(%var_10254, dtype="uint8") /* ty=Tensor[(9, 14, 5), uint8] */;
    %521 = shape_of(%var_10242, dtype="int32") /* ty=Tensor[(3), int32] */;
    %522 = cast(%var_10242, dtype="uint8") /* ty=Tensor[(9, 14, 5), uint8] */;
    %523 = dyn.reshape(%520, %521, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %524 = divide(%518, %519) /* ty=Tensor[(9, 14, 5), float64] */;
    %525 = minimum(%522, %523) /* ty=Tensor[(9, 14, 5), uint8] */;
    (%524, %525)
  };
  %526(%var_10261, %var_10262, %var_10263) /* ty=(Tensor[(9, 14, 5), float64], Tensor[(9, 14, 5), uint8]) */
}

def @func_7431() -> (Tensor[(8, 15, 4), float32],) {
  %528 = fn () -> (Tensor[(8, 15, 4), float32],) {
    %527 = @func_3759() /* ty=Tensor[(8, 15, 4), float32] */;
    (%527,)
  };
  %528() /* ty=(Tensor[(8, 15, 4), float32],) */
}

def @func_10481() -> (Tensor[(16, 5, 15), bool],) {
  @func_10479() /* ty=(Tensor[(16, 5, 15), bool],) */
}

def @func_4634() -> (Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float32]) {
  %529 = @func_4417() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %530 = %529.0;
  %531 = cast(%530, dtype="float32") /* ty=Tensor[(8, 15, 4), float32] */;
  %532 = reshape(%531, newshape=[8, 15, 4]) /* ty=Tensor[(8, 15, 4), float32] */;
  %533 = @func_4139(%532) /* ty=(Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), bool]) */;
  %534 = %533.0;
  (%530, %534)
}

def @func_6094() -> (Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float64], Tensor[(12, 3, 14), bool], Tensor[(504), float64]) {
  %535 = @func_3274() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %536 = @func_5042() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %537 = @func_5418() /* ty=(Tensor[(16, 5, 15), bool], Tensor[(8, 15, 4), float64]) */;
  %538 = cast(meta[relay.Constant][37] /* ty=Tensor[(504), float64] */, dtype="float64") /* ty=Tensor[(504), float64] */;
  %539 = cast(meta[relay.Constant][37] /* ty=Tensor[(504), float64] */, dtype="float64") /* ty=Tensor[(504), float64] */;
  %540 = cast(meta[relay.Constant][37] /* ty=Tensor[(504), float64] */, dtype="float64") /* ty=Tensor[(504), float64] */;
  %541 = reshape(%538, newshape=[12, 3, 14]) /* ty=Tensor[(12, 3, 14), float64] */;
  %542 = reshape(%539, newshape=[12, 3, 14]) /* ty=Tensor[(12, 3, 14), float64] */;
  %543 = reshape(%540, newshape=[12, 3, 14]) /* ty=Tensor[(12, 3, 14), float64] */;
  %544 = @func_2745(%541, %542, %543) /* ty=(Tensor[(12, 3, 14), bool], Tensor[(12, 3, 14), int64]) */;
  %545 = %535.0;
  %546 = %536.0;
  %547 = %537.1;
  %548 = %544.0;
  (%545, %546, %547, %548, meta[relay.Constant][37] /* ty=Tensor[(504), float64] */)
}

def @func_11772(%var_11757: Tensor[(198), float32], %var_11759: Tensor[(728), uint8], %var_11760: Tensor[(256), float32], %var_11761: int32) -> (Tensor[(16, 5, 15), bool], Tensor[(8, 15, 4), float64], Tensor[(14, 14, 10), float32], Tensor[(360), float64], Tensor[(90), float64], Tensor[(1152), uint64], Tensor[(198), float32], Tensor[(672), bool], Tensor[(728), uint8], Tensor[(256), float32], int32, Tensor[(360), float64], Tensor[(336), bool]) {
  %549 = @func_9615() /* ty=(Tensor[(16, 5, 15), bool], Tensor[(14, 14, 10), float32]) */;
  %550 = @func_11114() /* ty=(Tensor[(8, 15, 4), float64],) */;
  %551 = @func_10633() /* ty=(Tensor[(14, 14, 10), float32],) */;
  %552 = cast(meta[relay.Constant][38] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
  %553 = cast(meta[relay.Constant][39] /* ty=Tensor[(1152), uint64] */, dtype="uint64") /* ty=Tensor[(1152), uint64] */;
  %554 = cast(%var_11757, dtype="float32") /* ty=Tensor[(198), float32] */;
  %555 = cast(meta[relay.Constant][40] /* ty=Tensor[(672), bool] */, dtype="bool") /* ty=Tensor[(672), bool] */;
  %556 = cast(%var_11759, dtype="uint8") /* ty=Tensor[(728), uint8] */;
  %557 = cast(%var_11760, dtype="float32") /* ty=Tensor[(256), float32] */;
  %558 = cast(%var_11761, dtype="int32") /* ty=int32 */;
  %559 = cast(meta[relay.Constant][41] /* ty=Tensor[(360), float64] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %560 = cast(meta[relay.Constant][42] /* ty=Tensor[(336), bool] */, dtype="bool") /* ty=Tensor[(336), bool] */;
  %561 = reshape(%552, newshape=[45, 2]) /* ty=Tensor[(45, 2), float64] */;
  %562 = reshape(%553, newshape=[1152]) /* ty=Tensor[(1152), uint64] */;
  %563 = reshape(%554, newshape=[198]) /* ty=Tensor[(198), float32] */;
  %564 = reshape(%555, newshape=[2, 336]) /* ty=Tensor[(2, 336), bool] */;
  %565 = reshape(%556, newshape=[13, 4, 14]) /* ty=Tensor[(13, 4, 14), uint8] */;
  %566 = reshape(%557, newshape=[256]) /* ty=Tensor[(256), float32] */;
  %567 = reshape(%558, newshape=[]) /* ty=int32 */;
  %568 = reshape(%559, newshape=[360]) /* ty=Tensor[(360), float64] */;
  %569 = reshape(%560, newshape=[2, 168]) /* ty=Tensor[(2, 168), bool] */;
  %570 = @func_8964(%561, %562, %563, %564, %565, %566, %567, %568, %569) /* ty=(Tensor[(14, 14, 10), float64], Tensor[(728), uint8], Tensor[(16, 5, 15), bool], Tensor[(13, 4, 14), uint8], Tensor[(14, 9, 12), float64], Tensor[(45, 2), float64], Tensor[(1152), uint64], Tensor[(9, 11, 2), float32], Tensor[(198), float32], Tensor[(90), float64], Tensor[(2, 336), bool], Tensor[(13, 4, 14), float32], Tensor[(8, 8, 4), uint8], Tensor[(256), float32], int32, Tensor[(9, 10, 4), float64], Tensor[(360), float64], Tensor[(7, 132), float64], Tensor[(672), bool], Tensor[(2, 168), bool]) */;
  %571 = %549.0;
  %572 = %550.0;
  %573 = %551.0;
  %574 = %570.16;
  (%571, %572, %573, %574, meta[relay.Constant][38] /* ty=Tensor[(90), float64] */, meta[relay.Constant][39] /* ty=Tensor[(1152), uint64] */, %var_11757, meta[relay.Constant][40] /* ty=Tensor[(672), bool] */, %var_11759, %var_11760, %var_11761, meta[relay.Constant][41] /* ty=Tensor[(360), float64] */, meta[relay.Constant][42] /* ty=Tensor[(336), bool] */)
}

def @func_12689(%var_12687: Tensor[(462, 2), float64]) -> (Tensor[(16, 5, 15), bool], Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float64], Tensor[(462, 2), float64]) {
  @func_12686(%var_12687) /* ty=(Tensor[(16, 5, 15), bool], Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float64], Tensor[(462, 2), float64]) */
}

def @func_3472(%var_3461: int32, %var_3465: Tensor[(168, 2), int32]) -> (Tensor[(8, 15, 4), float32], Tensor[(9, 15, 10), float32], Tensor[(1350), float32], Tensor[(256), float32], int32, Tensor[(14, 12, 2), bool], Tensor[(168, 2), uint8]) {
  %575 = @func_3274() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %576 = cast(meta[relay.Constant][43] /* ty=Tensor[(1350), float32] */, dtype="float32") /* ty=Tensor[(1350), float32] */;
  %577 = cast(meta[relay.Constant][43] /* ty=Tensor[(1350), float32] */, dtype="float32") /* ty=Tensor[(1350), float32] */;
  %578 = reshape(%576, newshape=[9, 15, 10]) /* ty=Tensor[(9, 15, 10), float32] */;
  %579 = reshape(%577, newshape=[9, 15, 10]) /* ty=Tensor[(9, 15, 10), float32] */;
  %580 = @func_2874(%578, %579) /* ty=(Tensor[(9, 15, 10), float32],) */;
  %581 = cast(%var_3461, dtype="int32") /* ty=int32 */;
  %582 = cast(meta[relay.Constant][44] /* ty=Tensor[(256), float32] */, dtype="float32") /* ty=Tensor[(256), float32] */;
  %583 = cast(meta[relay.Constant][44] /* ty=Tensor[(256), float32] */, dtype="float32") /* ty=Tensor[(256), float32] */;
  %584 = cast(%var_3461, dtype="int32") /* ty=int32 */;
  %585 = reshape(%582, newshape=[8, 8, 4]) /* ty=Tensor[(8, 8, 4), float32] */;
  %586 = reshape(%583, newshape=[8, 8, 4]) /* ty=Tensor[(8, 8, 4), float32] */;
  %587 = reshape(%584, newshape=[]) /* ty=int32 */;
  %588 = @func_3036(%585, %586, %587) /* ty=(Tensor[(8, 8, 4), float32], Tensor[(14, 12, 2), bool], int32, Tensor[(168, 2), int32], Tensor[(8, 8, 4), uint8]) */;
  %589 = %588.3;
  %590 = cast(%589, dtype="int32") /* ty=Tensor[(168, 2), int32] */;
  %591 = reshape(%581, newshape=[]) /* ty=int32 */;
  %592 = reshape(%590, newshape=[14, 12, 2]) /* ty=Tensor[(14, 12, 2), int32] */;
  %593 = cast(%var_3465, dtype="uint8") /* ty=Tensor[(168, 2), uint8] */;
  %594 = shape_of(%589, dtype="int32") /* ty=Tensor[(2), int32] */;
  %595 = cast(%589, dtype="uint8") /* ty=Tensor[(168, 2), uint8] */;
  %596 = dyn.reshape(%593, %594, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %597 = %575.0;
  %598 = %580.0;
  %599 = @func_1445(%591, %592) /* ty=Tensor[(14, 12, 2), bool] */;
  %600 = bitwise_or(%595, %596) /* ty=Tensor[(168, 2), uint8] */;
  (%597, %598, meta[relay.Constant][43] /* ty=Tensor[(1350), float32] */, meta[relay.Constant][44] /* ty=Tensor[(256), float32] */, %var_3461, %599, %600)
}

def @func_3759() -> Tensor[(8, 15, 4), float32] {
  @func_3182() /* ty=Tensor[(8, 15, 4), float32] */
}

def @func_11114() -> (Tensor[(8, 15, 4), float64],) {
  %601 = @func_3536() /* ty=Tensor[(8, 15, 4), float64] */;
  (%601,)
}

def @func_5394(%var_5390: Tensor[(1512), float64], %var_5391: Tensor[(336), bool], %var_5392: Tensor[(1152), uint64], %var_5393: int32) -> (Tensor[(8, 15, 4), float32], Tensor[(12, 3, 14), float32], Tensor[(672), bool], Tensor[(1512), float64], Tensor[(336), bool], Tensor[(168, 4), bool], Tensor[(1152), uint64], Tensor[(990, 90), bool], Tensor[(14, 12, 2), bool], int32) {
  %626 = fn (%var_5367: Tensor[(1512), float64], %var_5368: Tensor[(336), bool], %var_5370: Tensor[(1152), uint64], %var_5387: int32) -> (Tensor[(8, 15, 4), float32], Tensor[(12, 3, 14), float32], Tensor[(672), bool], Tensor[(1512), float64], Tensor[(336), bool], Tensor[(168, 4), bool], Tensor[(1152), uint64], Tensor[(990, 90), bool], Tensor[(14, 12, 2), bool], int32) {
    %602 = cast(meta[relay.Constant][45] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
    %603 = cast(meta[relay.Constant][46] /* ty=Tensor[(990, 1), float64] */, dtype="float64") /* ty=Tensor[(990, 1), float64] */;
    %604 = cast(%var_5367, dtype="float64") /* ty=Tensor[(1512), float64] */;
    %605 = cast(%var_5368, dtype="bool") /* ty=Tensor[(336), bool] */;
    %606 = cast(meta[relay.Constant][47] /* ty=Tensor[(168, 4), bool] */, dtype="bool") /* ty=Tensor[(168, 4), bool] */;
    %607 = cast(%var_5370, dtype="uint64") /* ty=Tensor[(1152), uint64] */;
    %608 = reshape(%602, newshape=[1, 10, 9]) /* ty=Tensor[(1, 10, 9), float64] */;
    %609 = reshape(%603, newshape=[11, 10, 9]) /* ty=Tensor[(11, 10, 9), float64] */;
    %610 = reshape(%604, newshape=[1512]) /* ty=Tensor[(1512), float64] */;
    %611 = reshape(%605, newshape=[4, 84]) /* ty=Tensor[(4, 84), bool] */;
    %612 = reshape(%606, newshape=[672]) /* ty=Tensor[(672), bool] */;
    %613 = reshape(%607, newshape=[1152]) /* ty=Tensor[(1152), uint64] */;
    %614 = @func_3727(%608, %609, %610, %611, %612, %613) /* ty=(Tensor[(?, 10, 9), bool], Tensor[(672), bool], Tensor[(1512), float64], Tensor[(4, 84), bool], Tensor[(672), bool], Tensor[(336), bool], Tensor[(11, 10, 9), float32], Tensor[(12, 16, 6), uint64], Tensor[(1152), uint64]) */;
    %615 = cast(meta[relay.Constant][45] /* ty=Tensor[(90), float64] */, dtype="bool") /* ty=Tensor[(90), bool] */;
    %616 = cast(meta[relay.Constant][46] /* ty=Tensor[(990, 1), float64] */, dtype="bool") /* ty=Tensor[(990, 1), bool] */;
    %617 = cast(%var_5387, dtype="int32") /* ty=int32 */;
    %618 = cast(%var_5368, dtype="int32") /* ty=Tensor[(336), int32] */;
    %619 = reshape(%617, newshape=[]) /* ty=int32 */;
    %620 = reshape(%618, newshape=[14, 12, 2]) /* ty=Tensor[(14, 12, 2), int32] */;
    %621 = @func_5315() /* ty=Tensor[(8, 15, 4), float32] */;
    %622 = @func_5082() /* ty=Tensor[(12, 3, 14), float32] */;
    %623 = %614.4;
    %624 = logical_or(%615, %616) /* ty=Tensor[(990, 90), bool] */;
    %625 = @func_1445(%619, %620) /* ty=Tensor[(14, 12, 2), bool] */;
    (%621, %622, %623, %var_5367, %var_5368, meta[relay.Constant][47] /* ty=Tensor[(168, 4), bool] */, %var_5370, %624, %625, %var_5387)
  };
  %626(%var_5390, %var_5391, %var_5392, %var_5393) /* ty=(Tensor[(8, 15, 4), float32], Tensor[(12, 3, 14), float32], Tensor[(672), bool], Tensor[(1512), float64], Tensor[(336), bool], Tensor[(168, 4), bool], Tensor[(1152), uint64], Tensor[(990, 90), bool], Tensor[(14, 12, 2), bool], int32) */
}

def @func_8816() -> (Tensor[(8, 15, 4), float32],) {
  %627 = @func_5833() /* ty=Tensor[(8, 15, 4), float32] */;
  (%627,)
}

def @func_2798(%var_2796: float64, %var_2797: Tensor[(2, 10, 4), float64]) -> (Tensor[(2, 10, 4), float64], Tensor[(14, 12, 2), bool], Tensor[(2, 168), bool], Tensor[(672), bool]) {
  %639 = fn (%var_2783: float64, %var_2784: Tensor[(2, 10, 4), float64]) -> (Tensor[(2, 10, 4), float64], Tensor[(14, 12, 2), bool], Tensor[(2, 168), bool], Tensor[(672), bool]) {
    %628 = cast(%var_2783, dtype="float64") /* ty=float64 */;
    %629 = cast(%var_2784, dtype="float64") /* ty=Tensor[(2, 10, 4), float64] */;
    %630 = cast(meta[relay.Constant][48] /* ty=Tensor[(2, 168), bool] */, dtype="bool") /* ty=Tensor[(2, 168), bool] */;
    %631 = cast(%var_2783, dtype="int32") /* ty=int32 */;
    %632 = cast(meta[relay.Constant][49] /* ty=Tensor[(672), bool] */, dtype="bool") /* ty=Tensor[(672), bool] */;
    %633 = reshape(%630, newshape=[7, 16, 3]) /* ty=Tensor[(7, 16, 3), bool] */;
    %634 = reshape(%631, newshape=[]) /* ty=int32 */;
    %635 = reshape(%632, newshape=[14, 16, 3]) /* ty=Tensor[(14, 16, 3), bool] */;
    %636 = @func_2477(%633, %634, %635) /* ty=(Tensor[(7, 16, 3), bool], Tensor[(14, 12, 2), bool], int32, Tensor[(14, 16, 3), bool]) */;
    %637 = power(%628, %629) /* ty=Tensor[(2, 10, 4), float64] */;
    %638 = %636.1;
    (%637, %638, meta[relay.Constant][48] /* ty=Tensor[(2, 168), bool] */, meta[relay.Constant][49] /* ty=Tensor[(672), bool] */)
  };
  %639(%var_2796, %var_2797) /* ty=(Tensor[(2, 10, 4), float64], Tensor[(14, 12, 2), bool], Tensor[(2, 168), bool], Tensor[(672), bool]) */
}

def @func_12214(%var_12186: Tensor[(8, 8, 2), float64], %var_12193: uint16) -> (Tensor[(8, 8, 2), float64], Tensor[(8, 12, 11), bool], uint16, Tensor[(1056), uint16]) {
  %640 = cast(%var_12186, dtype="float64") /* ty=Tensor[(8, 8, 2), float64] */;
  %641 = cast(%var_12193, dtype="uint16") /* ty=uint16 */;
  %642 = cast(meta[relay.Constant][50] /* ty=Tensor[(1056), uint16] */, dtype="uint16") /* ty=Tensor[(1056), uint16] */;
  %643 = reshape(%641, newshape=[]) /* ty=uint16 */;
  %644 = reshape(%642, newshape=[8, 12, 11]) /* ty=Tensor[(8, 12, 11), uint16] */;
  %645 = @func_9146(%643, %644) /* ty=(Tensor[(8, 12, 11), bool], Tensor[(16, 5, 15), bool]) */;
  %646 = asinh(%640) /* ty=Tensor[(8, 8, 2), float64] */;
  %647 = %645.0;
  (%646, %647, %var_12193, meta[relay.Constant][50] /* ty=Tensor[(1056), uint16] */)
}

def @func_8787(%var_8785: Tensor[(462, 2), float64]) -> (Tensor[(16, 5, 15), bool], Tensor[(8, 15, 4), float64], Tensor[(462, 2), float64]) {
  @func_8784(%var_8785) /* ty=(Tensor[(16, 5, 15), bool], Tensor[(8, 15, 4), float64], Tensor[(462, 2), float64]) */
}

def @func_9750(%var_9748: Tensor[(12, 3, 14), float32]) -> (Tensor[(12, 3, 14), bool],) {
  @func_9747(%var_9748) /* ty=(Tensor[(12, 3, 14), bool],) */
}

def @func_7914() -> Tensor[(8, 15, 4), float32] {
  %649 = fn () -> Tensor[(8, 15, 4), float32] {
    %648 = @func_3130() /* ty=(Tensor[(8, 15, 4), float32],) */;
    %648.0
  };
  %649() /* ty=Tensor[(8, 15, 4), float32] */
}

def @func_5738(%var_5645: Tensor[(728), uint8], %var_5712: Tensor[(90), float64], %var_5713: Tensor[(1152), uint64]) -> (Tensor[(8, 15, 4), float64], Tensor[(14, 9, 12), float64], Tensor[(728), uint8], Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), bool], Tensor[(15, 6), float64], Tensor[(90), float64], Tensor[(1152), uint64], Tensor[(8, 15, 4), float32], Tensor[(12, 16, 6), float64]) {
  %650 = @func_5012() /* ty=(Tensor[(16, 5, 15), bool], Tensor[(12, 16, 6), uint64], Tensor[(1152), uint64], Tensor[(8, 15, 4), float64]) */;
  %651 = cast(%var_5645, dtype="uint8") /* ty=Tensor[(728), uint8] */;
  %652 = cast(%var_5645, dtype="uint8") /* ty=Tensor[(728), uint8] */;
  %653 = reshape(%651, newshape=[13, 4, 14]) /* ty=Tensor[(13, 4, 14), uint8] */;
  %654 = reshape(%652, newshape=[13, 4, 14]) /* ty=Tensor[(13, 4, 14), uint8] */;
  %655 = @func_546(%653, %654) /* ty=(Tensor[(13, 4, 14), uint8], Tensor[(14, 9, 12), float64], Tensor[(1512), float64], Tensor[(14, 9, 12), float64], Tensor[(14, 9, 12), float64], Tensor[(14, 9, 12), float64]) */;
  %656 = cast(%var_5712, dtype="float64") /* ty=Tensor[(90), float64] */;
  %657 = cast(%var_5713, dtype="uint64") /* ty=Tensor[(1152), uint64] */;
  %658 = reshape(%656, newshape=[15, 6]) /* ty=Tensor[(15, 6), float64] */;
  %659 = reshape(%657, newshape=[1152]) /* ty=Tensor[(1152), uint64] */;
  %660 = @func_3950(%658, %659) /* ty=(Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), bool], Tensor[(16, 5, 15), bool], Tensor[(1512), float64], Tensor[(15, 6), float64], Tensor[(990), float64], Tensor[(126, 12), float64], Tensor[(168, 2), bool], Tensor[(672), bool], Tensor[(1152), uint64]) */;
  %661 = @func_5042() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %662 = @func_4743() /* ty=(Tensor[(12, 16, 6), float64],) */;
  %663 = %650.3;
  %664 = %655.5;
  %665 = @func_5315() /* ty=Tensor[(8, 15, 4), float32] */;
  %666 = @func_3896() /* ty=Tensor[(8, 15, 4), bool] */;
  %667 = %660.4;
  %668 = %661.0;
  %669 = %662.0;
  (%663, %664, %var_5645, %665, %666, %667, %var_5712, %var_5713, %668, %669)
}

def @func_10097() -> Tensor[(8, 15, 4), bool] {
  %670 = fn () -> Tensor[(8, 15, 4), bool] {
    @func_3896() /* ty=Tensor[(8, 15, 4), bool] */
  };
  %670() /* ty=Tensor[(8, 15, 4), bool] */
}

def @func_9149(%var_9147: uint16, %var_9148: Tensor[(8, 12, 11), uint16]) -> (Tensor[(8, 12, 11), bool], Tensor[(16, 5, 15), bool]) {
  %675 = fn (%var_9136: uint16, %var_9137: Tensor[(8, 12, 11), uint16]) -> (Tensor[(8, 12, 11), bool], Tensor[(16, 5, 15), bool]) {
    %671 = cast(%var_9136, dtype="bool") /* ty=bool */;
    %672 = cast(%var_9137, dtype="bool") /* ty=Tensor[(8, 12, 11), bool] */;
    %673 = greater_equal(%671, %672) /* ty=Tensor[(8, 12, 11), bool] */;
    %674 = @func_7279() /* ty=Tensor[(16, 5, 15), bool] */;
    (%673, %674)
  };
  %675(%var_9147, %var_9148) /* ty=(Tensor[(8, 12, 11), bool], Tensor[(16, 5, 15), bool]) */
}

def @func_10479() -> (Tensor[(16, 5, 15), bool],) {
  %676 = @func_6243() /* ty=(Tensor[(16, 5, 15), bool],) */;
  %677 = %676.0;
  (%677,)
}

def @func_4745() -> (Tensor[(12, 16, 6), float64],) {
  @func_4743() /* ty=(Tensor[(12, 16, 6), float64],) */
}

def @func_10604(%var_10550: Tensor[(42), bool], %var_10556: Tensor[(1152), uint64], %var_10585: Tensor[(360), float64], %var_10586: Tensor[(462, 2), float64]) -> (Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float64], bool, Tensor[(42), bool], Tensor[(12, 16, 6), uint64], Tensor[(1152), uint64], Tensor[(9, 10, 4), float64], Tensor[(360), float64], Tensor[(462, 2), float64], Tensor[(14, 14, 10), float32], Tensor[(16, 5, 15), bool]) {
  %678 = @func_7430() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %679 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %680 = cast(%var_10550, dtype="bool") /* ty=Tensor[(42), bool] */;
  %681 = %678.0;
  %682 = cast(%681, dtype="float32") /* ty=Tensor[(8, 15, 4), float32] */;
  %683 = cast(%var_10550, dtype="bool") /* ty=Tensor[(42), bool] */;
  %684 = cast(%681, dtype="float32") /* ty=Tensor[(8, 15, 4), float32] */;
  %685 = reshape(%679, newshape=[]) /* ty=bool */;
  %686 = reshape(%680, newshape=[6, 1, 7]) /* ty=Tensor[(6, 1, 7), bool] */;
  %687 = reshape(%682, newshape=[120, 4]) /* ty=Tensor[(120, 4), float32] */;
  %688 = reshape(%683, newshape=[6, 1, 7]) /* ty=Tensor[(6, 1, 7), bool] */;
  %689 = reshape(%684, newshape=[8, 15, 4]) /* ty=Tensor[(8, 15, 4), float32] */;
  %690 = @func_4895(%685, %686, %687, %688, %689) /* ty=(Tensor[(8, 15, 4), float64], Tensor[(120, 4), float64], Tensor[(6, ?, 7), bool], Tensor[(8, 15, 4), float32]) */;
  %691 = cast(%var_10556, dtype="uint64") /* ty=Tensor[(1152), uint64] */;
  %692 = cast(%var_10556, dtype="uint64") /* ty=Tensor[(1152), uint64] */;
  %693 = reshape(%691, newshape=[12, 16, 6]) /* ty=Tensor[(12, 16, 6), uint64] */;
  %694 = reshape(%692, newshape=[12, 16, 6]) /* ty=Tensor[(12, 16, 6), uint64] */;
  %695 = cast(%var_10585, dtype="float64") /* ty=Tensor[(360), float64] */;
  %696 = cast(%var_10586, dtype="float64") /* ty=Tensor[(462, 2), float64] */;
  %697 = reshape(%695, newshape=[9, 10, 4]) /* ty=Tensor[(9, 10, 4), float64] */;
  %698 = reshape(%696, newshape=[154, 6]) /* ty=Tensor[(154, 6), float64] */;
  %699 = @func_1280(%697, %698) /* ty=(Tensor[(9, 10, 4), float64], Tensor[(154, 6), bool]) */;
  %700 = @func_9615() /* ty=(Tensor[(16, 5, 15), bool], Tensor[(14, 14, 10), float32]) */;
  %701 = @func_7482() /* ty=(Tensor[(16, 5, 15), bool], Tensor[(16, 5, 15), bool]) */;
  %702 = %690.0;
  %703 = @func_2152(%693, %694) /* ty=Tensor[(12, 16, 6), uint64] */;
  %704 = %699.0;
  %705 = %700.1;
  %706 = %701.0;
  (%681, %702, False /* ty=bool */, %var_10550, %703, %var_10556, %704, %var_10585, %var_10586, %705, %706)
}

def @func_9922() -> (Tensor[(8, 15, 4), float64], Tensor[(16, 5, 15), float64], int16, Tensor[(11, 12, 7), float64], Tensor[(11, 12, 7), int16], Tensor[(14, 14, 10), float32]) {
  @func_9920() /* ty=(Tensor[(8, 15, 4), float64], Tensor[(16, 5, 15), float64], int16, Tensor[(11, 12, 7), float64], Tensor[(11, 12, 7), int16], Tensor[(14, 14, 10), float32]) */
}

def @func_6096() -> (Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float64], Tensor[(12, 3, 14), bool], Tensor[(504), float64]) {
  @func_6094() /* ty=(Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float64], Tensor[(12, 3, 14), bool], Tensor[(504), float64]) */
}

def @func_12366() -> Tensor[(12, 3, 14), float32] {
  @func_12364() /* ty=Tensor[(12, 3, 14), float32] */
}

def @func_6035(%var_6019: Tensor[(3, 6, 16), float64], %var_6027: Tensor[(90, 1), float64], %var_6028: Tensor[(24, 48), uint64]) -> (Tensor[(12, 16, 6), float64], Tensor[(728), uint8], Tensor[(90, 1), float64], Tensor[(24, 48), uint64], Tensor[(3, 6, 16), float64]) {
  %707 = cast(meta[relay.Constant][51] /* ty=Tensor[(728), uint8] */, dtype="uint8") /* ty=Tensor[(728), uint8] */;
  %708 = cast(%var_6027, dtype="float64") /* ty=Tensor[(90, 1), float64] */;
  %709 = cast(%var_6028, dtype="uint64") /* ty=Tensor[(24, 48), uint64] */;
  %710 = reshape(%707, newshape=[728]) /* ty=Tensor[(728), uint8] */;
  %711 = reshape(%708, newshape=[90]) /* ty=Tensor[(90), float64] */;
  %712 = reshape(%709, newshape=[1152]) /* ty=Tensor[(1152), uint64] */;
  %713 = @func_5738(%710, %711, %712) /* ty=(Tensor[(8, 15, 4), float64], Tensor[(14, 9, 12), float64], Tensor[(728), uint8], Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), bool], Tensor[(15, 6), float64], Tensor[(90), float64], Tensor[(1152), uint64], Tensor[(8, 15, 4), float32], Tensor[(12, 16, 6), float64]) */;
  %714 = cast(%var_6019, dtype="float64") /* ty=Tensor[(3, 6, 16), float64] */;
  %715 = log2(%714) /* ty=Tensor[(3, 6, 16), float64] */;
  %716 = cast(%715, dtype="float64") /* ty=Tensor[(3, 6, 16), float64] */;
  %717 = %713.9;
  %718 = acos(%716) /* ty=Tensor[(3, 6, 16), float64] */;
  (%717, meta[relay.Constant][51] /* ty=Tensor[(728), uint8] */, %var_6027, %var_6028, %718)
}

def @func_7597() -> (Tensor[(12, 16, 6), float64], Tensor[(14, 14, 10), float64]) {
  %727 = fn () -> (Tensor[(12, 16, 6), float64], Tensor[(14, 14, 10), float64]) {
    %719 = @func_4743() /* ty=(Tensor[(12, 16, 6), float64],) */;
    %720 = @func_6786() /* ty=(Tensor[(14, 14, 10), float64],) */;
    %721 = %720.0;
    %722 = cast(%721, dtype="float32") /* ty=Tensor[(14, 14, 10), float32] */;
    %723 = sqrt(%722) /* ty=Tensor[(14, 14, 10), float32] */;
    %724 = cast(%723, dtype="float64") /* ty=Tensor[(14, 14, 10), float64] */;
    %725 = %719.0;
    %726 = atanh(%724) /* ty=Tensor[(14, 14, 10), float64] */;
    (%725, %726)
  };
  %727() /* ty=(Tensor[(12, 16, 6), float64], Tensor[(14, 14, 10), float64]) */
}

def @func_9691(%var_9689: int8, %var_9690: Tensor[(10, 1, 9), int8]) -> (Tensor[(10, 1, 9), int8],) {
  %731 = fn (%var_9683: int8, %var_9684: Tensor[(10, 1, 9), int8]) -> (Tensor[(10, 1, 9), int8],) {
    %728 = cast(%var_9683, dtype="int8") /* ty=int8 */;
    %729 = cast(%var_9684, dtype="int8") /* ty=Tensor[(10, 1, 9), int8] */;
    %730 = right_shift(%728, %729) /* ty=Tensor[(10, 1, 9), int8] */;
    (%730,)
  };
  %731(%var_9689, %var_9690) /* ty=(Tensor[(10, 1, 9), int8],) */
}

def @func_1448(%var_1446: int32, %var_1447: Tensor[(14, 12, 2), int32]) -> Tensor[(14, 12, 2), bool] {
  %734 = fn (%var_1432: int32, %var_1433: Tensor[(14, 12, 2), int32]) -> Tensor[(14, 12, 2), bool] {
    %732 = cast(%var_1432, dtype="bool") /* ty=bool */;
    %733 = cast(%var_1433, dtype="bool") /* ty=Tensor[(14, 12, 2), bool] */;
    equal(%732, %733) /* ty=Tensor[(14, 12, 2), bool] */
  };
  %734(%var_1446, %var_1447) /* ty=Tensor[(14, 12, 2), bool] */
}

def @func_4700(%var_4698: int16, %var_4699: Tensor[(11, 12, 7), int16]) -> Tensor[(11, 12, 7), int16] {
  @func_4696(%var_4698, %var_4699) /* ty=Tensor[(11, 12, 7), int16] */
}

def @func_11244() -> Tensor[(14, 14, 10), float64] {
  %736 = fn () -> Tensor[(14, 14, 10), float64] {
    %735 = @func_6786() /* ty=(Tensor[(14, 14, 10), float64],) */;
    %735.0
  };
  %736() /* ty=Tensor[(14, 14, 10), float64] */
}

def @func_9374() -> (Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float64], Tensor[(8, 15, 4), float32]) {
  %737 = @func_7858() /* ty=(Tensor[(8, 15, 4), float64], Tensor[(8, 15, 4), int64]) */;
  %738 = @func_5151() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %739 = @func_5768() /* ty=Tensor[(8, 15, 4), float32] */;
  %740 = %737.0;
  %741 = %738.0;
  (%739, %740, %741)
}

def @func_4790(%var_4789: Tensor[(16, 5, 15), bool]) -> Tensor[(16, 5, 15), float32] {
  %748 = fn (%var_4782: Tensor[(16, 5, 15), bool]) -> Tensor[(16, 5, 15), float32] {
    %742 = @func_3314() /* ty=(Tensor[(16, 5, 15), bool], Tensor[(12, 3, 14), int64], Tensor[(504, 1), float64]) */;
    %743 = %742.0;
    %744 = cast(%var_4782, dtype="float32") /* ty=Tensor[(16, 5, 15), float32] */;
    %745 = shape_of(%743, dtype="int32") /* ty=Tensor[(3), int32] */;
    %746 = cast(%743, dtype="float32") /* ty=Tensor[(16, 5, 15), float32] */;
    %747 = dyn.reshape(%744, %745, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    mod(%746, %747) /* ty=Tensor[(16, 5, 15), float32] */
  };
  %748(%var_4789) /* ty=Tensor[(16, 5, 15), float32] */
}

def @func_10434(%var_10432: Tensor[(924), float64]) -> (Tensor[(14, 14, 10), bool], Tensor[(16, 5, 15), bool], Tensor[(924), float64], Tensor[(14, 14, 10), int8]) {
  @func_10431(%var_10432) /* ty=(Tensor[(14, 14, 10), bool], Tensor[(16, 5, 15), bool], Tensor[(924), float64], Tensor[(14, 14, 10), int8]) */
}

def @func_5879(%var_5838: int64) -> Tensor[(9, 12, 11), int64] {
  %749 = cast(%var_5838, dtype="int64") /* ty=int64 */;
  %750 = cast(meta[relay.Constant][52] /* ty=Tensor[(9, 12, 11), int64] */, dtype="int64") /* ty=Tensor[(9, 12, 11), int64] */;
  add(%749, %750) /* ty=Tensor[(9, 12, 11), int64] */
}

def @func_10307() -> (Tensor[(11, 4, 12), float64],) {
  %753 = fn () -> (Tensor[(11, 4, 12), float64],) {
    %751 = @func_7640() /* ty=(Tensor[(11, 4, 12), uint16], Tensor[(16, 5, 15), bool], Tensor[(11, 4, 12), float64]) */;
    %752 = %751.2;
    (%752,)
  };
  %753() /* ty=(Tensor[(11, 4, 12), float64],) */
}

def @func_4504() -> (Tensor[(16, 5, 15), bool],) {
  %754 = @func_4197() /* ty=Tensor[(16, 5, 15), bool] */;
  (%754,)
}

def @func_11351() -> (Tensor[(504), float64], Tensor[(728), uint8], Tensor[(90), float64], Tensor[(12, 16, 6), bool], Tensor[(90), float64], Tensor[(13, 16, 7), float32], Tensor[(8, 15, 4), float32]) {
  %755 = @func_8167() /* ty=(Tensor[(8, 15, 4), float32], Tensor[(504), float64]) */;
  %756 = cast(meta[relay.Constant][53] /* ty=Tensor[(728), uint8] */, dtype="uint8") /* ty=Tensor[(728), uint8] */;
  %757 = cast(meta[relay.Constant][54] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
  %758 = cast(meta[relay.Constant][55] /* ty=Tensor[(1152), uint64] */, dtype="uint64") /* ty=Tensor[(1152), uint64] */;
  %759 = reshape(%756, newshape=[728]) /* ty=Tensor[(728), uint8] */;
  %760 = reshape(%757, newshape=[90]) /* ty=Tensor[(90), float64] */;
  %761 = reshape(%758, newshape=[1152]) /* ty=Tensor[(1152), uint64] */;
  %762 = @func_5738(%759, %760, %761) /* ty=(Tensor[(8, 15, 4), float64], Tensor[(14, 9, 12), float64], Tensor[(728), uint8], Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), bool], Tensor[(15, 6), float64], Tensor[(90), float64], Tensor[(1152), uint64], Tensor[(8, 15, 4), float32], Tensor[(12, 16, 6), float64]) */;
  %763 = %762.9;
  %764 = cast(meta[relay.Constant][55] /* ty=Tensor[(1152), uint64] */, dtype="bool") /* ty=Tensor[(1152), bool] */;
  %765 = shape_of(%763, dtype="int32") /* ty=Tensor[(3), int32] */;
  %766 = cast(%763, dtype="bool") /* ty=Tensor[(12, 16, 6), bool] */;
  %767 = dyn.reshape(%764, %765, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %768 = cast(meta[relay.Constant][54] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
  %769 = reshape(%768, newshape=[90]) /* ty=Tensor[(90), float64] */;
  %770 = @func_7731(%769) /* ty=(Tensor[(504), float64], Tensor[(90), float64], Tensor[(90), float64]) */;
  %771 = @func_10722() /* ty=(Tensor[(8, 15, 4), float32], Tensor[(13, 16, 7), float32], Tensor[(1456), float64]) */;
  %772 = %755.1;
  %773 = less_equal(%766, %767) /* ty=Tensor[(12, 16, 6), bool] */;
  %774 = %770.2;
  %775 = %771.1;
  %776 = @func_8535() /* ty=Tensor[(8, 15, 4), float32] */;
  (%772, meta[relay.Constant][53] /* ty=Tensor[(728), uint8] */, meta[relay.Constant][54] /* ty=Tensor[(90), float64] */, %773, %774, %775, %776)
}

def @func_5152() -> (Tensor[(8, 15, 4), float32],) {
  %779 = fn () -> (Tensor[(8, 15, 4), float32],) {
    %777 = @func_4634() /* ty=(Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float32]) */;
    %778 = %777.0;
    (%778,)
  };
  %779() /* ty=(Tensor[(8, 15, 4), float32],) */
}

def @func_6126() -> Tensor[(16, 5, 15), bool] {
  %780 = @func_4162() /* ty=(Tensor[(16, 5, 15), bool],) */;
  %780.0
}

def @func_12641() -> (Tensor[(8, 15, 4), float32],) {
  %783 = fn () -> (Tensor[(8, 15, 4), float32],) {
    %781 = @func_10767() /* ty=(Tensor[(8, 15, 4), float32],) */;
    %782 = %781.0;
    (%782,)
  };
  %783() /* ty=(Tensor[(8, 15, 4), float32],) */
}

def @func_12773() -> (Tensor[(1200, 1), bool], Tensor[(16, 5, 15), bool]) {
  @func_12771() /* ty=(Tensor[(1200, 1), bool], Tensor[(16, 5, 15), bool]) */
}

def @func_7733(%var_7732: Tensor[(90), float64]) -> (Tensor[(504), float64], Tensor[(90), float64], Tensor[(90), float64]) {
  %789 = fn (%var_7725: Tensor[(90), float64]) -> (Tensor[(504), float64], Tensor[(90), float64], Tensor[(90), float64]) {
    %784 = cast(%var_7725, dtype="float64") /* ty=Tensor[(90), float64] */;
    %785 = reshape(%784, newshape=[90]) /* ty=Tensor[(90), float64] */;
    %786 = @func_4817(%785) /* ty=(Tensor[(8, 15, 4), float32], Tensor[(12, 16, 6), uint64], Tensor[(4, 288), uint64], Tensor[(15, 6), float64], Tensor[(90), float64], Tensor[(8, 15, 4), float64]) */;
    %787 = @func_6387() /* ty=Tensor[(504), float64] */;
    %788 = %786.4;
    (%787, %788, %var_7725)
  };
  %789(%var_7732) /* ty=(Tensor[(504), float64], Tensor[(90), float64], Tensor[(90), float64]) */
}

def @func_12931(%var_12871: Tensor[(924), float64]) -> (Tensor[(8, 15, 4), float32], Tensor[(924), float64], Tensor[(8, 15, 4), float32], Tensor[(14, 11, 6), float32]) {
  %790 = @func_8816() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %791 = @func_6838() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %792 = cast(%var_12871, dtype="float64") /* ty=Tensor[(924), float64] */;
  %793 = reshape(%792, newshape=[924]) /* ty=Tensor[(924), float64] */;
  %794 = @func_3573(%793) /* ty=(Tensor[(8, 15, 4), float64], Tensor[(14, 11, 6), float32], Tensor[(924), float64]) */;
  %795 = %794.1;
  %796 = cast(%795, dtype="float32") /* ty=Tensor[(14, 11, 6), float32] */;
  %797 = atanh(%796) /* ty=Tensor[(14, 11, 6), float32] */;
  %798 = cast(meta[relay.Constant][56] /* ty=Tensor[(14, 11, 6), float32] */, dtype="float32") /* ty=Tensor[(14, 11, 6), float32] */;
  %799 = shape_of(%797, dtype="int32") /* ty=Tensor[(3), int32] */;
  %800 = cast(%797, dtype="float32") /* ty=Tensor[(14, 11, 6), float32] */;
  %801 = dyn.reshape(%798, %799, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %802 = %790.0;
  %803 = %791.0;
  %804 = power(%800, %801) /* ty=Tensor[(14, 11, 6), float32] */;
  (%802, %var_12871, %803, %804)
}

def @func_11894() -> (Tensor[(16, 5, 15), int8], Tensor[(8, 15, 4), float64]) {
  %805 = @func_9788() /* ty=(Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), uint16], Tensor[(16, 5, 15), int8], Tensor[(14, 14, 10), uint16]) */;
  %806 = @func_9374() /* ty=(Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float64], Tensor[(8, 15, 4), float32]) */;
  %807 = %805.2;
  %808 = %806.1;
  (%807, %808)
}

def @func_10722() -> (Tensor[(8, 15, 4), float32], Tensor[(13, 16, 7), float32], Tensor[(1456), float64]) {
  %809 = cast(meta[relay.Constant][57] /* ty=Tensor[(1456), float64] */, dtype="float64") /* ty=Tensor[(1456), float64] */;
  %810 = reshape(%809, newshape=[13, 16, 7]) /* ty=Tensor[(13, 16, 7), float64] */;
  %811 = @func_9319(%810) /* ty=(Tensor[(13, 16, 7), float32], Tensor[(13, 16, 7), uint16], Tensor[(8, 15, 4), float32]) */;
  %812 = @func_3182() /* ty=Tensor[(8, 15, 4), float32] */;
  %813 = %811.0;
  (%812, %813, meta[relay.Constant][57] /* ty=Tensor[(1456), float64] */)
}

def @func_2482(%var_2479: Tensor[(7, 16, 3), bool], %var_2480: int32, %var_2481: Tensor[(14, 16, 3), bool]) -> (Tensor[(7, 16, 3), bool], Tensor[(14, 12, 2), bool], int32, Tensor[(14, 16, 3), bool]) {
  @func_2477(%var_2479, %var_2480, %var_2481) /* ty=(Tensor[(7, 16, 3), bool], Tensor[(14, 12, 2), bool], int32, Tensor[(14, 16, 3), bool]) */
}

def @func_10037(%var_10035: Tensor[(924), float64]) -> (Tensor[(8, 15, 4), float64], Tensor[(8, 15, 4), bool], Tensor[(8, 15, 4), float32], Tensor[(16, 5, 15), bool], Tensor[(924), float64], Tensor[(14, 14, 10), uint16]) {
  @func_10034(%var_10035) /* ty=(Tensor[(8, 15, 4), float64], Tensor[(8, 15, 4), bool], Tensor[(8, 15, 4), float32], Tensor[(16, 5, 15), bool], Tensor[(924), float64], Tensor[(14, 14, 10), uint16]) */
}

def @func_11778(%var_11774: Tensor[(198), float32], %var_11775: Tensor[(728), uint8], %var_11776: Tensor[(256), float32], %var_11777: int32) -> (Tensor[(16, 5, 15), bool], Tensor[(8, 15, 4), float64], Tensor[(14, 14, 10), float32], Tensor[(360), float64], Tensor[(90), float64], Tensor[(1152), uint64], Tensor[(198), float32], Tensor[(672), bool], Tensor[(728), uint8], Tensor[(256), float32], int32, Tensor[(360), float64], Tensor[(336), bool]) {
  @func_11772(%var_11774, %var_11775, %var_11776, %var_11777) /* ty=(Tensor[(16, 5, 15), bool], Tensor[(8, 15, 4), float64], Tensor[(14, 14, 10), float32], Tensor[(360), float64], Tensor[(90), float64], Tensor[(1152), uint64], Tensor[(198), float32], Tensor[(672), bool], Tensor[(728), uint8], Tensor[(256), float32], int32, Tensor[(360), float64], Tensor[(336), bool]) */
}

def @func_7262(%var_7260: Tensor[(672), bool], %var_7261: Tensor[(728), uint8]) -> (Tensor[(12, 3, 14), int64], Tensor[(8, 15, 4), float32], int32, Tensor[(1200), bool], Tensor[(336), bool], Tensor[(672), bool], Tensor[(13, 4, 14), uint8], Tensor[(728), uint8]) {
  @func_7258(%var_7260, %var_7261) /* ty=(Tensor[(12, 3, 14), int64], Tensor[(8, 15, 4), float32], int32, Tensor[(1200), bool], Tensor[(336), bool], Tensor[(672), bool], Tensor[(13, 4, 14), uint8], Tensor[(728), uint8]) */
}

def @func_12023(%var_11991: float64, %var_12016: Tensor[(2, 168), float64]) -> (Tensor[(8, 15, 4), float32], float64, Tensor[(40, 2), float64], Tensor[(2, 168), bool], Tensor[(12, 3, 14), float32]) {
  %814 = @func_10722() /* ty=(Tensor[(8, 15, 4), float32], Tensor[(13, 16, 7), float32], Tensor[(1456), float64]) */;
  %815 = cast(%var_11991, dtype="float64") /* ty=float64 */;
  %816 = cast(meta[relay.Constant][58] /* ty=Tensor[(40, 2), float64] */, dtype="float64") /* ty=Tensor[(40, 2), float64] */;
  %817 = reshape(%815, newshape=[]) /* ty=float64 */;
  %818 = reshape(%816, newshape=[2, 10, 4]) /* ty=Tensor[(2, 10, 4), float64] */;
  %819 = @func_2795(%817, %818) /* ty=(Tensor[(2, 10, 4), float64], Tensor[(14, 12, 2), bool], Tensor[(2, 168), bool], Tensor[(672), bool]) */;
  %820 = %819.2;
  %821 = cast(%820, dtype="float64") /* ty=Tensor[(2, 168), float64] */;
  %822 = exp(%821) /* ty=Tensor[(2, 168), float64] */;
  %823 = cast(%var_12016, dtype="bool") /* ty=Tensor[(2, 168), bool] */;
  %824 = shape_of(%822, dtype="int32") /* ty=Tensor[(2), int32] */;
  %825 = cast(%822, dtype="bool") /* ty=Tensor[(2, 168), bool] */;
  %826 = dyn.reshape(%823, %824, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %827 = %814.0;
  %828 = equal(%825, %826) /* ty=Tensor[(2, 168), bool] */;
  %829 = @func_5082() /* ty=Tensor[(12, 3, 14), float32] */;
  (%827, %var_11991, meta[relay.Constant][58] /* ty=Tensor[(40, 2), float64] */, %828, %829)
}

def @func_8818() -> (Tensor[(8, 15, 4), float32],) {
  @func_8816() /* ty=(Tensor[(8, 15, 4), float32],) */
}

def @func_12364() -> Tensor[(12, 3, 14), float32] {
  @func_5082() /* ty=Tensor[(12, 3, 14), float32] */
}

def @func_11651() -> (Tensor[(16, 5, 15), bool],) {
  %830 = @func_7482() /* ty=(Tensor[(16, 5, 15), bool], Tensor[(16, 5, 15), bool]) */;
  %831 = %830.1;
  (%831,)
}

def @func_6645() -> (Tensor[(8, 15, 4), float64], Tensor[(1350), float32], Tensor[(9, 15, 10), float32]) {
  @func_6643() /* ty=(Tensor[(8, 15, 4), float64], Tensor[(1350), float32], Tensor[(9, 15, 10), float32]) */
}

def @func_9321(%var_9320: Tensor[(13, 16, 7), float64]) -> (Tensor[(13, 16, 7), float32], Tensor[(13, 16, 7), uint16], Tensor[(8, 15, 4), float32]) {
  %843 = fn (%var_9301: Tensor[(13, 16, 7), float64]) -> (Tensor[(13, 16, 7), float32], Tensor[(13, 16, 7), uint16], Tensor[(8, 15, 4), float32]) {
    %832 = cast(%var_9301, dtype="float32") /* ty=Tensor[(13, 16, 7), float32] */;
    %833 = cast(%var_9301, dtype="float64") /* ty=Tensor[(13, 16, 7), float64] */;
    %834 = log2(%833) /* ty=Tensor[(13, 16, 7), float64] */;
    %835 = cast(%834, dtype="uint16") /* ty=Tensor[(13, 16, 7), uint16] */;
    %836 = shape_of(%var_9301, dtype="int32") /* ty=Tensor[(3), int32] */;
    %837 = cast(%var_9301, dtype="uint16") /* ty=Tensor[(13, 16, 7), uint16] */;
    %838 = dyn.reshape(%835, %836, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %839 = @func_8222() /* ty=(Tensor[(8, 15, 4), float32],) */;
    %840 = sqrt(%832) /* ty=Tensor[(13, 16, 7), float32] */;
    %841 = right_shift(%837, %838) /* ty=Tensor[(13, 16, 7), uint16] */;
    %842 = %839.0;
    (%840, %841, %842)
  };
  %843(%var_9320) /* ty=(Tensor[(13, 16, 7), float32], Tensor[(13, 16, 7), uint16], Tensor[(8, 15, 4), float32]) */
}

def @func_5420() -> (Tensor[(16, 5, 15), bool], Tensor[(8, 15, 4), float64]) {
  @func_5418() /* ty=(Tensor[(16, 5, 15), bool], Tensor[(8, 15, 4), float64]) */
}

def @func_9788() -> (Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), uint16], Tensor[(16, 5, 15), int8], Tensor[(14, 14, 10), uint16]) {
  %844 = @func_5927() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %845 = @func_9102() /* ty=(Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float32], Tensor[(16, 5, 15), bool], Tensor[(11, 4, 12), float64], Tensor[(8, 15, 4), uint16]) */;
  %846 = @func_7482() /* ty=(Tensor[(16, 5, 15), bool], Tensor[(16, 5, 15), bool]) */;
  %847 = %846.1;
  %848 = cast(%847, dtype="float32") /* ty=Tensor[(16, 5, 15), float32] */;
  %849 = cosh(%848) /* ty=Tensor[(16, 5, 15), float32] */;
  %850 = cast(%847, dtype="int8") /* ty=Tensor[(16, 5, 15), int8] */;
  %851 = shape_of(%849, dtype="int32") /* ty=Tensor[(3), int32] */;
  %852 = cast(%849, dtype="int8") /* ty=Tensor[(16, 5, 15), int8] */;
  %853 = dyn.reshape(%850, %851, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %854 = %844.0;
  %855 = %845.4;
  %856 = left_shift(%852, %853) /* ty=Tensor[(16, 5, 15), int8] */;
  %857 = @func_6717() /* ty=Tensor[(14, 14, 10), uint16] */;
  (%854, %855, %856, %857)
}

def @func_8352() -> (Tensor[(8, 15, 4), float64], Tensor[(8, 15, 4), float32]) {
  %861 = fn () -> (Tensor[(8, 15, 4), float64], Tensor[(8, 15, 4), float32]) {
    %858 = @func_3274() /* ty=(Tensor[(8, 15, 4), float32],) */;
    %859 = @func_5583() /* ty=Tensor[(8, 15, 4), float64] */;
    %860 = %858.0;
    (%859, %860)
  };
  %861() /* ty=(Tensor[(8, 15, 4), float64], Tensor[(8, 15, 4), float32]) */
}

def @func_8567() -> Tensor[(8, 15, 4), float32] {
  @func_8565() /* ty=Tensor[(8, 15, 4), float32] */
}

def @func_5084() -> Tensor[(12, 3, 14), float32] {
  @func_5082() /* ty=Tensor[(12, 3, 14), float32] */
}

def @func_7144(%var_7142: Tensor[(13, 4, 14), uint8], %var_7143: Tensor[(13, 4, 14), uint8]) -> (Tensor[(13, 4, 14), uint8],) {
  %867 = fn (%var_7134: Tensor[(13, 4, 14), uint8], %var_7135: Tensor[(13, 4, 14), uint8]) -> (Tensor[(13, 4, 14), uint8],) {
    %862 = cast(%var_7135, dtype="uint8") /* ty=Tensor[(13, 4, 14), uint8] */;
    %863 = shape_of(%var_7134, dtype="int32") /* ty=Tensor[(3), int32] */;
    %864 = cast(%var_7134, dtype="uint8") /* ty=Tensor[(13, 4, 14), uint8] */;
    %865 = dyn.reshape(%862, %863, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %866 = maximum(%864, %865) /* ty=Tensor[(13, 4, 14), uint8] */;
    (%866,)
  };
  %867(%var_7142, %var_7143) /* ty=(Tensor[(13, 4, 14), uint8],) */
}

def @func_10633() -> (Tensor[(14, 14, 10), float32],) {
  %868 = @func_9920() /* ty=(Tensor[(8, 15, 4), float64], Tensor[(16, 5, 15), float64], int16, Tensor[(11, 12, 7), float64], Tensor[(11, 12, 7), int16], Tensor[(14, 14, 10), float32]) */;
  %869 = %868.5;
  (%869,)
}

def @func_9288() -> Tensor[(8, 15, 4), float32] {
  %870 = @func_3274() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %870.0
}

def @func_7484() -> (Tensor[(16, 5, 15), bool], Tensor[(16, 5, 15), bool]) {
  @func_7482() /* ty=(Tensor[(16, 5, 15), bool], Tensor[(16, 5, 15), bool]) */
}

def @func_6171() -> Tensor[(16, 5, 15), bool] {
  @func_5496() /* ty=Tensor[(16, 5, 15), bool] */
}

def @func_5833() -> Tensor[(8, 15, 4), float32] {
  %871 = @func_5315() /* ty=Tensor[(8, 15, 4), float32] */;
  %872 = cast(%871, dtype="float32") /* ty=Tensor[(8, 15, 4), float32] */;
  tan(%872) /* ty=Tensor[(8, 15, 4), float32] */
}

def @func_10895(%var_10884: Tensor[(8, 15, 4), float64], %var_10890: Tensor[(360), float64]) -> (Tensor[(14, 14, 10), float32], Tensor[(8, 15, 4), int8], Tensor[(9, 10, 4), float64], Tensor[(360), float64], Tensor[(924, 1), float64]) {
  %873 = @func_10633() /* ty=(Tensor[(14, 14, 10), float32],) */;
  %874 = @func_3536() /* ty=Tensor[(8, 15, 4), float64] */;
  %875 = cast(%var_10884, dtype="int8") /* ty=Tensor[(8, 15, 4), int8] */;
  %876 = shape_of(%874, dtype="int32") /* ty=Tensor[(3), int32] */;
  %877 = cast(%874, dtype="int8") /* ty=Tensor[(8, 15, 4), int8] */;
  %878 = dyn.reshape(%875, %876, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %879 = cast(%var_10890, dtype="float64") /* ty=Tensor[(360), float64] */;
  %880 = cast(meta[relay.Constant][59] /* ty=Tensor[(924, 1), float64] */, dtype="float64") /* ty=Tensor[(924, 1), float64] */;
  %881 = reshape(%879, newshape=[9, 10, 4]) /* ty=Tensor[(9, 10, 4), float64] */;
  %882 = reshape(%880, newshape=[154, 6]) /* ty=Tensor[(154, 6), float64] */;
  %883 = @func_1280(%881, %882) /* ty=(Tensor[(9, 10, 4), float64], Tensor[(154, 6), bool]) */;
  %884 = %873.0;
  %885 = bitwise_xor(%877, %878) /* ty=Tensor[(8, 15, 4), int8] */;
  %886 = %883.0;
  (%884, %885, %886, %var_10890, meta[relay.Constant][59] /* ty=Tensor[(924, 1), float64] */)
}

def @func_5418() -> (Tensor[(16, 5, 15), bool], Tensor[(8, 15, 4), float64]) {
  %887 = @func_4162() /* ty=(Tensor[(16, 5, 15), bool],) */;
  %888 = %887.0;
  %889 = @func_3859() /* ty=Tensor[(8, 15, 4), float64] */;
  (%888, %889)
}

def @func_9290() -> Tensor[(8, 15, 4), float32] {
  @func_9288() /* ty=Tensor[(8, 15, 4), float32] */
}

def @func_3950(%var_3920: Tensor[(15, 6), float64], %var_3925: Tensor[(1152), uint64]) -> (Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), bool], Tensor[(16, 5, 15), bool], Tensor[(1512), float64], Tensor[(15, 6), float64], Tensor[(990), float64], Tensor[(126, 12), float64], Tensor[(168, 2), bool], Tensor[(672), bool], Tensor[(1152), uint64]) {
  %890 = @func_3274() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %891 = @func_3314() /* ty=(Tensor[(16, 5, 15), bool], Tensor[(12, 3, 14), int64], Tensor[(504, 1), float64]) */;
  %892 = cast(%var_3920, dtype="float64") /* ty=Tensor[(15, 6), float64] */;
  %893 = cast(meta[relay.Constant][60] /* ty=Tensor[(990), float64] */, dtype="float64") /* ty=Tensor[(990), float64] */;
  %894 = cast(meta[relay.Constant][61] /* ty=Tensor[(126, 12), float64] */, dtype="float64") /* ty=Tensor[(126, 12), float64] */;
  %895 = cast(meta[relay.Constant][62] /* ty=Tensor[(168, 2), bool] */, dtype="bool") /* ty=Tensor[(168, 2), bool] */;
  %896 = cast(meta[relay.Constant][63] /* ty=Tensor[(672), bool] */, dtype="bool") /* ty=Tensor[(672), bool] */;
  %897 = cast(%var_3925, dtype="uint64") /* ty=Tensor[(1152), uint64] */;
  %898 = reshape(%892, newshape=[1, 10, 9]) /* ty=Tensor[(1, 10, 9), float64] */;
  %899 = reshape(%893, newshape=[11, 10, 9]) /* ty=Tensor[(11, 10, 9), float64] */;
  %900 = reshape(%894, newshape=[1512]) /* ty=Tensor[(1512), float64] */;
  %901 = reshape(%895, newshape=[4, 84]) /* ty=Tensor[(4, 84), bool] */;
  %902 = reshape(%896, newshape=[672]) /* ty=Tensor[(672), bool] */;
  %903 = reshape(%897, newshape=[1152]) /* ty=Tensor[(1152), uint64] */;
  %904 = @func_3727(%898, %899, %900, %901, %902, %903) /* ty=(Tensor[(?, 10, 9), bool], Tensor[(672), bool], Tensor[(1512), float64], Tensor[(4, 84), bool], Tensor[(672), bool], Tensor[(336), bool], Tensor[(11, 10, 9), float32], Tensor[(12, 16, 6), uint64], Tensor[(1152), uint64]) */;
  %905 = %890.0;
  %906 = @func_3896() /* ty=Tensor[(8, 15, 4), bool] */;
  %907 = %891.0;
  %908 = %904.2;
  (%905, %906, %907, %908, %var_3920, meta[relay.Constant][60] /* ty=Tensor[(990), float64] */, meta[relay.Constant][61] /* ty=Tensor[(126, 12), float64] */, meta[relay.Constant][62] /* ty=Tensor[(168, 2), bool] */, meta[relay.Constant][63] /* ty=Tensor[(672), bool] */, %var_3925)
}

def @func_12851() -> (Tensor[(8, 15, 4), float32],) {
  %910 = fn () -> (Tensor[(8, 15, 4), float32],) {
    %909 = @func_8565() /* ty=Tensor[(8, 15, 4), float32] */;
    (%909,)
  };
  %910() /* ty=(Tensor[(8, 15, 4), float32],) */
}

def @func_6244() -> (Tensor[(16, 5, 15), bool],) {
  %913 = fn () -> (Tensor[(16, 5, 15), bool],) {
    %911 = @func_4504() /* ty=(Tensor[(16, 5, 15), bool],) */;
    %912 = %911.0;
    (%912,)
  };
  %913() /* ty=(Tensor[(16, 5, 15), bool],) */
}

def @func_9376() -> (Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float64], Tensor[(8, 15, 4), float32]) {
  @func_9374() /* ty=(Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float64], Tensor[(8, 15, 4), float32]) */
}

def @func_4902(%var_4897: bool, %var_4898: Tensor[(6, 1, 7), bool], %var_4899: Tensor[(120, 4), float32], %var_4900: Tensor[(6, 1, 7), bool], %var_4901: Tensor[(8, 15, 4), float32]) -> (Tensor[(8, 15, 4), float64], Tensor[(120, 4), float64], Tensor[(6, ?, 7), bool], Tensor[(8, 15, 4), float32]) {
  @func_4895(%var_4897, %var_4898, %var_4899, %var_4900, %var_4901) /* ty=(Tensor[(8, 15, 4), float64], Tensor[(120, 4), float64], Tensor[(6, ?, 7), bool], Tensor[(8, 15, 4), float32]) */
}

def @func_9518(%var_9516: float64, %var_9517: Tensor[(2, 40), float64]) -> (Tensor[(8, 15, 4), float64], Tensor[(2, 168), bool], float64, Tensor[(2, 40), float64]) {
  @func_9514(%var_9516, %var_9517) /* ty=(Tensor[(8, 15, 4), float64], Tensor[(2, 168), bool], float64, Tensor[(2, 40), float64]) */
}

def @func_5626() -> Tensor[(8, 15, 4), float64] {
  %915 = fn () -> Tensor[(8, 15, 4), float64] {
    %914 = @func_5418() /* ty=(Tensor[(16, 5, 15), bool], Tensor[(8, 15, 4), float64]) */;
    %914.1
  };
  %915() /* ty=Tensor[(8, 15, 4), float64] */
}

def @func_3040(%var_3037: Tensor[(8, 8, 4), float32], %var_3038: Tensor[(8, 8, 4), float32], %var_3039: int32) -> (Tensor[(8, 8, 4), float32], Tensor[(14, 12, 2), bool], int32, Tensor[(168, 2), int32], Tensor[(8, 8, 4), uint8]) {
  %931 = fn (%var_3012: Tensor[(8, 8, 4), float32], %var_3013: Tensor[(8, 8, 4), float32], %var_3019: int32) -> (Tensor[(8, 8, 4), float32], Tensor[(14, 12, 2), bool], int32, Tensor[(168, 2), int32], Tensor[(8, 8, 4), uint8]) {
    %916 = cast(%var_3013, dtype="float32") /* ty=Tensor[(8, 8, 4), float32] */;
    %917 = shape_of(%var_3012, dtype="int32") /* ty=Tensor[(3), int32] */;
    %918 = cast(%var_3012, dtype="float32") /* ty=Tensor[(8, 8, 4), float32] */;
    %919 = dyn.reshape(%916, %917, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %920 = cast(%var_3019, dtype="int32") /* ty=int32 */;
    %921 = cast(meta[relay.Constant][64] /* ty=Tensor[(168, 2), int32] */, dtype="int32") /* ty=Tensor[(168, 2), int32] */;
    %922 = reshape(%920, newshape=[]) /* ty=int32 */;
    %923 = reshape(%921, newshape=[14, 12, 2]) /* ty=Tensor[(14, 12, 2), int32] */;
    %924 = cast(%var_3013, dtype="uint8") /* ty=Tensor[(8, 8, 4), uint8] */;
    %925 = shape_of(%var_3012, dtype="int32") /* ty=Tensor[(3), int32] */;
    %926 = cast(%var_3012, dtype="uint8") /* ty=Tensor[(8, 8, 4), uint8] */;
    %927 = dyn.reshape(%924, %925, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %928 = power(%918, %919) /* ty=Tensor[(8, 8, 4), float32] */;
    %929 = @func_1445(%922, %923) /* ty=Tensor[(14, 12, 2), bool] */;
    %930 = subtract(%926, %927) /* ty=Tensor[(8, 8, 4), uint8] */;
    (%928, %929, %var_3019, meta[relay.Constant][64] /* ty=Tensor[(168, 2), int32] */, %930)
  };
  %931(%var_3037, %var_3038, %var_3039) /* ty=(Tensor[(8, 8, 4), float32], Tensor[(14, 12, 2), bool], int32, Tensor[(168, 2), int32], Tensor[(8, 8, 4), uint8]) */
}

def @func_6550(%var_6548: Tensor[(90), float64]) -> (Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float32], Tensor[(1152), uint64], Tensor[(8, 15, 4), bool], Tensor[(16, 5, 15), bool], Tensor[(12, 3, 14), float32], Tensor[(16, 5, 15), bool], Tensor[(90), float64], Tensor[(16, 5, 15), bool]) {
  @func_6547(%var_6548) /* ty=(Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float32], Tensor[(1152), uint64], Tensor[(8, 15, 4), bool], Tensor[(16, 5, 15), bool], Tensor[(12, 3, 14), float32], Tensor[(16, 5, 15), bool], Tensor[(90), float64], Tensor[(16, 5, 15), bool]) */
}

def @func_11977(%var_11975: Tensor[(1512), float64], %var_11976: Tensor[(336), bool]) -> (Tensor[(8, 15, 4), float64], Tensor[(336), bool], Tensor[(1512), float64], Tensor[(336), bool], Tensor[(672), bool], Tensor[(8, 15, 4), float32]) {
  %943 = fn (%var_11963: Tensor[(1512), float64], %var_11964: Tensor[(336), bool]) -> (Tensor[(8, 15, 4), float64], Tensor[(336), bool], Tensor[(1512), float64], Tensor[(336), bool], Tensor[(672), bool], Tensor[(8, 15, 4), float32]) {
    %932 = @func_9564() /* ty=(Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float64], Tensor[(8, 15, 4), float64]) */;
    %933 = cast(%var_11963, dtype="float64") /* ty=Tensor[(1512), float64] */;
    %934 = cast(%var_11964, dtype="bool") /* ty=Tensor[(336), bool] */;
    %935 = cast(meta[relay.Constant][65] /* ty=Tensor[(672), bool] */, dtype="bool") /* ty=Tensor[(672), bool] */;
    %936 = reshape(%933, newshape=[14, 9, 12]) /* ty=Tensor[(14, 9, 12), float64] */;
    %937 = reshape(%934, newshape=[336]) /* ty=Tensor[(336), bool] */;
    %938 = reshape(%935, newshape=[672]) /* ty=Tensor[(672), bool] */;
    %939 = @func_3391(%936, %937, %938) /* ty=(Tensor[(728), uint8], Tensor[(14, 9, 12), int16], Tensor[(8, 15, 4), float64], Tensor[(14, 12, 2), bool], Tensor[(336), bool], int32, Tensor[(672), bool]) */;
    %940 = %932.2;
    %941 = %939.4;
    %942 = @func_8535() /* ty=Tensor[(8, 15, 4), float32] */;
    (%940, %941, %var_11963, %var_11964, meta[relay.Constant][65] /* ty=Tensor[(672), bool] */, %942)
  };
  %943(%var_11975, %var_11976) /* ty=(Tensor[(8, 15, 4), float64], Tensor[(336), bool], Tensor[(1512), float64], Tensor[(336), bool], Tensor[(672), bool], Tensor[(8, 15, 4), float32]) */
}

def @func_4418() -> (Tensor[(8, 15, 4), float32],) {
  %945 = fn () -> (Tensor[(8, 15, 4), float32],) {
    %944 = @func_3759() /* ty=Tensor[(8, 15, 4), float32] */;
    (%944,)
  };
  %945() /* ty=(Tensor[(8, 15, 4), float32],) */
}

def @func_8784(%var_8781: Tensor[(462, 2), float64]) -> (Tensor[(16, 5, 15), bool], Tensor[(8, 15, 4), float64], Tensor[(462, 2), float64]) {
  %946 = @func_8655() /* ty=(Tensor[(16, 5, 15), bool],) */;
  %947 = cast(%var_8781, dtype="float64") /* ty=Tensor[(462, 2), float64] */;
  %948 = reshape(%947, newshape=[924]) /* ty=Tensor[(924), float64] */;
  %949 = @func_3573(%948) /* ty=(Tensor[(8, 15, 4), float64], Tensor[(14, 11, 6), float32], Tensor[(924), float64]) */;
  %950 = %946.0;
  %951 = %949.0;
  (%950, %951, %var_8781)
}

def @func_4895(%var_4846: bool, %var_4847: Tensor[(6, 1, 7), bool], %var_4852: Tensor[(120, 4), float32], %var_4874: Tensor[(6, 1, 7), bool], %var_4885: Tensor[(8, 15, 4), float32]) -> (Tensor[(8, 15, 4), float64], Tensor[(120, 4), float64], Tensor[(6, ?, 7), bool], Tensor[(8, 15, 4), float32]) {
  %952 = cast(%var_4846, dtype="float64") /* ty=float64 */;
  %953 = cast(%var_4852, dtype="float64") /* ty=Tensor[(120, 4), float64] */;
  %954 = cast(%var_4846, dtype="bool") /* ty=bool */;
  %955 = cast(%var_4847, dtype="bool") /* ty=Tensor[(6, 1, 7), bool] */;
  %956 = logical_or(%954, %955) /* ty=Tensor[(6, 1, 7), bool] */;
  %957 = cast(%var_4874, dtype="bool") /* ty=Tensor[(6, 1, 7), bool] */;
  %958 = shape_of(%956, dtype="int32") /* ty=Tensor[(3), int32] */;
  %959 = cast(%956, dtype="bool") /* ty=Tensor[(6, 1, 7), bool] */;
  %960 = dyn.reshape(%957, %958, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %961 = cast(%var_4852, dtype="float32") /* ty=Tensor[(120, 4), float32] */;
  %962 = reshape(%961, newshape=[8, 15, 4]) /* ty=Tensor[(8, 15, 4), float32] */;
  %963 = @func_4139(%962) /* ty=(Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), bool]) */;
  %964 = %963.0;
  %965 = cast(%var_4885, dtype="float32") /* ty=Tensor[(8, 15, 4), float32] */;
  %966 = shape_of(%964, dtype="int32") /* ty=Tensor[(3), int32] */;
  %967 = cast(%964, dtype="float32") /* ty=Tensor[(8, 15, 4), float32] */;
  %968 = dyn.reshape(%965, %966, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %969 = @func_3859() /* ty=Tensor[(8, 15, 4), float64] */;
  %970 = divide(%952, %953) /* ty=Tensor[(120, 4), float64] */;
  %971 = less(%959, %960) /* ty=Tensor[(6, ?, 7), bool] */;
  %972 = power(%967, %968) /* ty=Tensor[(8, 15, 4), float32] */;
  (%969, %970, %971, %972)
}

def @func_9103() -> (Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float32], Tensor[(16, 5, 15), bool], Tensor[(11, 4, 12), float64], Tensor[(8, 15, 4), uint16]) {
  %987 = fn () -> (Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float32], Tensor[(16, 5, 15), bool], Tensor[(11, 4, 12), float64], Tensor[(8, 15, 4), uint16]) {
    %973 = @func_4417() /* ty=(Tensor[(8, 15, 4), float32],) */;
    %974 = @func_6243() /* ty=(Tensor[(16, 5, 15), bool],) */;
    %975 = @func_7640() /* ty=(Tensor[(11, 4, 12), uint16], Tensor[(16, 5, 15), bool], Tensor[(11, 4, 12), float64]) */;
    %976 = @func_6309() /* ty=Tensor[(8, 15, 4), float32] */;
    %977 = @func_3182() /* ty=Tensor[(8, 15, 4), float32] */;
    %978 = cast(%977, dtype="uint16") /* ty=Tensor[(8, 15, 4), uint16] */;
    %979 = shape_of(%976, dtype="int32") /* ty=Tensor[(3), int32] */;
    %980 = cast(%976, dtype="uint16") /* ty=Tensor[(8, 15, 4), uint16] */;
    %981 = dyn.reshape(%978, %979, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %982 = @func_8535() /* ty=Tensor[(8, 15, 4), float32] */;
    %983 = %973.0;
    %984 = %974.0;
    %985 = %975.2;
    %986 = maximum(%980, %981) /* ty=Tensor[(8, 15, 4), uint16] */;
    (%982, %983, %984, %985, %986)
  };
  %987() /* ty=(Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float32], Tensor[(16, 5, 15), bool], Tensor[(11, 4, 12), float64], Tensor[(8, 15, 4), uint16]) */
}

def @func_12250() -> Tensor[(8, 15, 4), float32] {
  @func_12248() /* ty=Tensor[(8, 15, 4), float32] */
}

def @func_5131(%var_5129: Tensor[(8, 15, 4), bool]) -> Tensor[(8, 15, 4), bool] {
  @func_5128(%var_5129) /* ty=Tensor[(8, 15, 4), bool] */
}

def @func_10768() -> (Tensor[(8, 15, 4), float32],) {
  %989 = fn () -> (Tensor[(8, 15, 4), float32],) {
    %988 = @func_8535() /* ty=Tensor[(8, 15, 4), float32] */;
    (%988,)
  };
  %989() /* ty=(Tensor[(8, 15, 4), float32],) */
}

def @func_758(%var_735: Tensor[(14, 11, 6), float64], %var_736: Tensor[(14, 11, 6), float64]) -> (Tensor[(14, 11, 6), float32],) {
  %990 = cast(%var_736, dtype="float64") /* ty=Tensor[(14, 11, 6), float64] */;
  %991 = shape_of(%var_735, dtype="int32") /* ty=Tensor[(3), int32] */;
  %992 = cast(%var_735, dtype="float64") /* ty=Tensor[(14, 11, 6), float64] */;
  %993 = dyn.reshape(%990, %991, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %994 = floor_mod(%992, %993) /* ty=Tensor[(14, 11, 6), float64] */;
  %995 = cast(%994, dtype="float32") /* ty=Tensor[(14, 11, 6), float32] */;
  %996 = sin(%995) /* ty=Tensor[(14, 11, 6), float32] */;
  (%996,)
}

def @func_9514(%var_9510: float64, %var_9511: Tensor[(2, 40), float64]) -> (Tensor[(8, 15, 4), float64], Tensor[(2, 168), bool], float64, Tensor[(2, 40), float64]) {
  %997 = cast(%var_9510, dtype="float64") /* ty=float64 */;
  %998 = cast(%var_9511, dtype="float64") /* ty=Tensor[(2, 40), float64] */;
  %999 = reshape(%997, newshape=[]) /* ty=float64 */;
  %1000 = reshape(%998, newshape=[2, 10, 4]) /* ty=Tensor[(2, 10, 4), float64] */;
  %1001 = @func_2795(%999, %1000) /* ty=(Tensor[(2, 10, 4), float64], Tensor[(14, 12, 2), bool], Tensor[(2, 168), bool], Tensor[(672), bool]) */;
  %1002 = @func_5583() /* ty=Tensor[(8, 15, 4), float64] */;
  %1003 = %1001.2;
  (%1002, %1003, %var_9510, %var_9511)
}

def @func_12726(%var_12724: Tensor[(504), float32]) -> (Tensor[(8, 15, 4), float32], Tensor[(12, 3, 14), bool], Tensor[(504), float32]) {
  @func_12723(%var_12724) /* ty=(Tensor[(8, 15, 4), float32], Tensor[(12, 3, 14), bool], Tensor[(504), float32]) */
}

def @func_9617() -> (Tensor[(16, 5, 15), bool], Tensor[(14, 14, 10), float32]) {
  @func_9615() /* ty=(Tensor[(16, 5, 15), bool], Tensor[(14, 14, 10), float32]) */
}

def @func_7125(%var_7123: Tensor[(1, 924), float64]) -> (Tensor[(8, 15, 4), float64], Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float32], Tensor[(14, 11, 6), float32], Tensor[(1, 924), float64]) {
  %1004 = @func_3130() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %1005 = @func_5583() /* ty=Tensor[(8, 15, 4), float64] */;
  %1006 = cast(%1005, dtype="float32") /* ty=Tensor[(8, 15, 4), float32] */;
  %1007 = cast(%var_7123, dtype="float64") /* ty=Tensor[(1, 924), float64] */;
  %1008 = reshape(%1007, newshape=[924]) /* ty=Tensor[(924), float64] */;
  %1009 = @func_3573(%1008) /* ty=(Tensor[(8, 15, 4), float64], Tensor[(14, 11, 6), float32], Tensor[(924), float64]) */;
  %1010 = @func_5625() /* ty=Tensor[(8, 15, 4), float64] */;
  %1011 = %1004.0;
  %1012 = log10(%1006) /* ty=Tensor[(8, 15, 4), float32] */;
  %1013 = %1009.1;
  (%1010, %1011, %1012, %1013, %var_7123)
}

def @func_7280() -> Tensor[(16, 5, 15), bool] {
  %1014 = fn () -> Tensor[(16, 5, 15), bool] {
    @func_4197() /* ty=Tensor[(16, 5, 15), bool] */
  };
  %1014() /* ty=Tensor[(16, 5, 15), bool] */
}

def @func_12723(%var_12720: Tensor[(504), float32]) -> (Tensor[(8, 15, 4), float32], Tensor[(12, 3, 14), bool], Tensor[(504), float32]) {
  %1015 = cast(%var_12720, dtype="float32") /* ty=Tensor[(504), float32] */;
  %1016 = reshape(%1015, newshape=[12, 3, 14]) /* ty=Tensor[(12, 3, 14), float32] */;
  %1017 = @func_9747(%1016) /* ty=(Tensor[(12, 3, 14), bool],) */;
  %1018 = @func_6309() /* ty=Tensor[(8, 15, 4), float32] */;
  %1019 = %1017.0;
  (%1018, %1019, %var_12720)
}

def @func_5013() -> (Tensor[(16, 5, 15), bool], Tensor[(12, 16, 6), uint64], Tensor[(1152), uint64], Tensor[(8, 15, 4), float64]) {
  %1029 = fn () -> (Tensor[(16, 5, 15), bool], Tensor[(12, 16, 6), uint64], Tensor[(1152), uint64], Tensor[(8, 15, 4), float64]) {
    %1020 = @func_4162() /* ty=(Tensor[(16, 5, 15), bool],) */;
    %1021 = cast(meta[relay.Constant][66] /* ty=Tensor[(1152), uint64] */, dtype="uint64") /* ty=Tensor[(1152), uint64] */;
    %1022 = cast(meta[relay.Constant][66] /* ty=Tensor[(1152), uint64] */, dtype="uint64") /* ty=Tensor[(1152), uint64] */;
    %1023 = reshape(%1021, newshape=[12, 16, 6]) /* ty=Tensor[(12, 16, 6), uint64] */;
    %1024 = reshape(%1022, newshape=[12, 16, 6]) /* ty=Tensor[(12, 16, 6), uint64] */;
    %1025 = @func_4068() /* ty=(Tensor[(8, 15, 4), float64], Tensor[(12, 16, 6), uint64], Tensor[(1152), uint64]) */;
    %1026 = %1020.0;
    %1027 = @func_2152(%1023, %1024) /* ty=Tensor[(12, 16, 6), uint64] */;
    %1028 = %1025.0;
    (%1026, %1027, meta[relay.Constant][66] /* ty=Tensor[(1152), uint64] */, %1028)
  };
  %1029() /* ty=(Tensor[(16, 5, 15), bool], Tensor[(12, 16, 6), uint64], Tensor[(1152), uint64], Tensor[(8, 15, 4), float64]) */
}

def @func_12540() -> Tensor[(8, 15, 4), float32] {
  %1031 = fn () -> Tensor[(8, 15, 4), float32] {
    %1030 = @func_5927() /* ty=(Tensor[(8, 15, 4), float32],) */;
    %1030.0
  };
  %1031() /* ty=Tensor[(8, 15, 4), float32] */
}

def @func_4506() -> (Tensor[(16, 5, 15), bool],) {
  @func_4504() /* ty=(Tensor[(16, 5, 15), bool],) */
}

def @func_9677() -> Tensor[(16, 5, 15), bool] {
  @func_9675() /* ty=Tensor[(16, 5, 15), bool] */
}

def @func_9747(%var_9741: Tensor[(12, 3, 14), float32]) -> (Tensor[(12, 3, 14), bool],) {
  %1032 = @func_5082() /* ty=Tensor[(12, 3, 14), float32] */;
  %1033 = cast(%var_9741, dtype="bool") /* ty=Tensor[(12, 3, 14), bool] */;
  %1034 = shape_of(%1032, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1035 = cast(%1032, dtype="bool") /* ty=Tensor[(12, 3, 14), bool] */;
  %1036 = dyn.reshape(%1033, %1034, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1037 = greater(%1035, %1036) /* ty=Tensor[(12, 3, 14), bool] */;
  (%1037,)
}

def @func_4476() -> (Tensor[(16, 5, 15), bool], Tensor[(8, 15, 4), float32]) {
  %1041 = fn () -> (Tensor[(16, 5, 15), bool], Tensor[(8, 15, 4), float32]) {
    %1038 = @func_4417() /* ty=(Tensor[(8, 15, 4), float32],) */;
    %1039 = @func_4197() /* ty=Tensor[(16, 5, 15), bool] */;
    %1040 = %1038.0;
    (%1039, %1040)
  };
  %1041() /* ty=(Tensor[(16, 5, 15), bool], Tensor[(8, 15, 4), float32]) */
}

def @func_8809() -> (Tensor[(8, 15, 4), float32],) {
  %1044 = fn () -> (Tensor[(8, 15, 4), float32],) {
    %1042 = @func_6838() /* ty=(Tensor[(8, 15, 4), float32],) */;
    %1043 = %1042.0;
    (%1043,)
  };
  %1044() /* ty=(Tensor[(8, 15, 4), float32],) */
}

def @func_5082() -> Tensor[(12, 3, 14), float32] {
  %1045 = @func_3314() /* ty=(Tensor[(16, 5, 15), bool], Tensor[(12, 3, 14), int64], Tensor[(504, 1), float64]) */;
  %1046 = %1045.1;
  %1047 = cast(%1046, dtype="float32") /* ty=Tensor[(12, 3, 14), float32] */;
  acosh(%1047) /* ty=Tensor[(12, 3, 14), float32] */
}

def @func_8565() -> Tensor[(8, 15, 4), float32] {
  @func_8535() /* ty=Tensor[(8, 15, 4), float32] */
}

def @func_6719() -> Tensor[(14, 14, 10), uint16] {
  @func_6717() /* ty=Tensor[(14, 14, 10), uint16] */
}

def @func_3183() -> Tensor[(8, 15, 4), float32] {
  %1049 = fn () -> Tensor[(8, 15, 4), float32] {
    %1048 = @func_3130() /* ty=(Tensor[(8, 15, 4), float32],) */;
    %1048.0
  };
  %1049() /* ty=Tensor[(8, 15, 4), float32] */
}

def @func_3861() -> Tensor[(8, 15, 4), float64] {
  @func_3859() /* ty=Tensor[(8, 15, 4), float64] */
}

def @func_6593() -> (Tensor[(12, 16, 6), uint64], Tensor[(11, 12, 7), int16], int16, Tensor[(1, 924), int16]) {
  %1057 = fn () -> (Tensor[(12, 16, 6), uint64], Tensor[(11, 12, 7), int16], int16, Tensor[(1, 924), int16]) {
    %1050 = @func_4068() /* ty=(Tensor[(8, 15, 4), float64], Tensor[(12, 16, 6), uint64], Tensor[(1152), uint64]) */;
    %1051 = cast(meta[relay.Constant][67] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %1052 = cast(meta[relay.Constant][68] /* ty=Tensor[(1, 924), int16] */, dtype="int16") /* ty=Tensor[(1, 924), int16] */;
    %1053 = reshape(%1051, newshape=[]) /* ty=int16 */;
    %1054 = reshape(%1052, newshape=[11, 12, 7]) /* ty=Tensor[(11, 12, 7), int16] */;
    %1055 = %1050.1;
    %1056 = @func_4696(%1053, %1054) /* ty=Tensor[(11, 12, 7), int16] */;
    (%1055, %1056, meta[relay.Constant][67] /* ty=int16 */, meta[relay.Constant][68] /* ty=Tensor[(1, 924), int16] */)
  };
  %1057() /* ty=(Tensor[(12, 16, 6), uint64], Tensor[(11, 12, 7), int16], int16, Tensor[(1, 924), int16]) */
}

def @func_10899(%var_10897: Tensor[(8, 15, 4), float64], %var_10898: Tensor[(360), float64]) -> (Tensor[(14, 14, 10), float32], Tensor[(8, 15, 4), int8], Tensor[(9, 10, 4), float64], Tensor[(360), float64], Tensor[(924, 1), float64]) {
  @func_10895(%var_10897, %var_10898) /* ty=(Tensor[(14, 14, 10), float32], Tensor[(8, 15, 4), int8], Tensor[(9, 10, 4), float64], Tensor[(360), float64], Tensor[(924, 1), float64]) */
}

def @func_3896() -> Tensor[(8, 15, 4), bool] {
  %1058 = @func_3759() /* ty=Tensor[(8, 15, 4), float32] */;
  %1059 = cast(meta[relay.Constant][69] /* ty=Tensor[(8, 15, 4), float32] */, dtype="bool") /* ty=Tensor[(8, 15, 4), bool] */;
  %1060 = shape_of(%1058, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1061 = cast(%1058, dtype="bool") /* ty=Tensor[(8, 15, 4), bool] */;
  %1062 = dyn.reshape(%1059, %1060, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%1061, %1062) /* ty=Tensor[(8, 15, 4), bool] */
}

def @func_3316() -> (Tensor[(16, 5, 15), bool], Tensor[(12, 3, 14), int64], Tensor[(504, 1), float64]) {
  @func_3314() /* ty=(Tensor[(16, 5, 15), bool], Tensor[(12, 3, 14), int64], Tensor[(504, 1), float64]) */
}

def @func_8223() -> (Tensor[(8, 15, 4), float32],) {
  %1065 = fn () -> (Tensor[(8, 15, 4), float32],) {
    %1063 = @func_7430() /* ty=(Tensor[(8, 15, 4), float32],) */;
    %1064 = %1063.0;
    (%1064,)
  };
  %1065() /* ty=(Tensor[(8, 15, 4), float32],) */
}

def @func_9728() -> (Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float64]) {
  @func_9726() /* ty=(Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float64]) */
}

def @func_12027(%var_12025: float64, %var_12026: Tensor[(2, 168), float64]) -> (Tensor[(8, 15, 4), float32], float64, Tensor[(40, 2), float64], Tensor[(2, 168), bool], Tensor[(12, 3, 14), float32]) {
  @func_12023(%var_12025, %var_12026) /* ty=(Tensor[(8, 15, 4), float32], float64, Tensor[(40, 2), float64], Tensor[(2, 168), bool], Tensor[(12, 3, 14), float32]) */
}

def @func_3727(%var_3645: Tensor[(1, 10, 9), float64], %var_3670: Tensor[(11, 10, 9), float64], %var_3686: Tensor[(1512), float64], %var_3687: Tensor[(4, 84), bool], %var_3688: Tensor[(672), bool], %var_3713: Tensor[(1152), uint64]) -> (Tensor[(?, 10, 9), bool], Tensor[(672), bool], Tensor[(1512), float64], Tensor[(4, 84), bool], Tensor[(672), bool], Tensor[(336), bool], Tensor[(11, 10, 9), float32], Tensor[(12, 16, 6), uint64], Tensor[(1152), uint64]) {
  %1066 = cast(%var_3645, dtype="float64") /* ty=Tensor[(1, 10, 9), float64] */;
  %1067 = exp(%1066) /* ty=Tensor[(1, 10, 9), float64] */;
  %1068 = cast(%1067, dtype="float32") /* ty=Tensor[(1, 10, 9), float32] */;
  %1069 = shape_of(%var_3645, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1070 = cast(%var_3645, dtype="float32") /* ty=Tensor[(1, 10, 9), float32] */;
  %1071 = dyn.reshape(%1068, %1069, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1072 = add(%1070, %1071) /* ty=Tensor[(?, 10, 9), float32] */;
  %1073 = cast(%1067, dtype="bool") /* ty=Tensor[(1, 10, 9), bool] */;
  %1074 = shape_of(%1072, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1075 = cast(%1072, dtype="bool") /* ty=Tensor[(?, 10, 9), bool] */;
  %1076 = dyn.reshape(%1073, %1074, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1077 = cast(%var_3686, dtype="float64") /* ty=Tensor[(1512), float64] */;
  %1078 = cast(%var_3687, dtype="bool") /* ty=Tensor[(4, 84), bool] */;
  %1079 = cast(%var_3688, dtype="bool") /* ty=Tensor[(672), bool] */;
  %1080 = reshape(%1077, newshape=[14, 9, 12]) /* ty=Tensor[(14, 9, 12), float64] */;
  %1081 = reshape(%1078, newshape=[336]) /* ty=Tensor[(336), bool] */;
  %1082 = reshape(%1079, newshape=[672]) /* ty=Tensor[(672), bool] */;
  %1083 = @func_3391(%1080, %1081, %1082) /* ty=(Tensor[(728), uint8], Tensor[(14, 9, 12), int16], Tensor[(8, 15, 4), float64], Tensor[(14, 12, 2), bool], Tensor[(336), bool], int32, Tensor[(672), bool]) */;
  %1084 = cast(%var_3686, dtype="float64") /* ty=Tensor[(1512), float64] */;
  %1085 = cast(%var_3687, dtype="bool") /* ty=Tensor[(4, 84), bool] */;
  %1086 = %1083.6;
  %1087 = cast(%1086, dtype="bool") /* ty=Tensor[(672), bool] */;
  %1088 = reshape(%1084, newshape=[14, 9, 12]) /* ty=Tensor[(14, 9, 12), float64] */;
  %1089 = reshape(%1085, newshape=[336]) /* ty=Tensor[(336), bool] */;
  %1090 = reshape(%1087, newshape=[672]) /* ty=Tensor[(672), bool] */;
  %1091 = @func_3391(%1088, %1089, %1090) /* ty=(Tensor[(728), uint8], Tensor[(14, 9, 12), int16], Tensor[(8, 15, 4), float64], Tensor[(14, 12, 2), bool], Tensor[(336), bool], int32, Tensor[(672), bool]) */;
  %1092 = cast(%1067, dtype="uint16") /* ty=Tensor[(1, 10, 9), uint16] */;
  %1093 = cast(%var_3670, dtype="uint16") /* ty=Tensor[(11, 10, 9), uint16] */;
  %1094 = multiply(%1092, %1093) /* ty=Tensor[(11, 10, 9), uint16] */;
  %1095 = cast(%1094, dtype="float32") /* ty=Tensor[(11, 10, 9), float32] */;
  %1096 = cast(%var_3645, dtype="float32") /* ty=Tensor[(1, 10, 9), float32] */;
  %1097 = floor_mod(%1095, %1096) /* ty=Tensor[(11, 10, 9), float32] */;
  %1098 = cast(%1097, dtype="float32") /* ty=Tensor[(11, 10, 9), float32] */;
  %1099 = cast(%var_3713, dtype="uint64") /* ty=Tensor[(1152), uint64] */;
  %1100 = cast(%var_3713, dtype="uint64") /* ty=Tensor[(1152), uint64] */;
  %1101 = reshape(%1099, newshape=[12, 16, 6]) /* ty=Tensor[(12, 16, 6), uint64] */;
  %1102 = reshape(%1100, newshape=[12, 16, 6]) /* ty=Tensor[(12, 16, 6), uint64] */;
  %1103 = less_equal(%1075, %1076) /* ty=Tensor[(?, 10, 9), bool] */;
  %1104 = %1091.4;
  %1105 = cosh(%1098) /* ty=Tensor[(11, 10, 9), float32] */;
  %1106 = @func_2152(%1101, %1102) /* ty=Tensor[(12, 16, 6), uint64] */;
  (%1103, %1086, %var_3686, %var_3687, %var_3688, %1104, %1105, %1106, %var_3713)
}

def @func_4141(%var_4140: Tensor[(8, 15, 4), float32]) -> (Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), bool]) {
  %1115 = fn (%var_4123: Tensor[(8, 15, 4), float32]) -> (Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), bool]) {
    %1107 = @func_3130() /* ty=(Tensor[(8, 15, 4), float32],) */;
    %1108 = %1107.0;
    %1109 = cast(%var_4123, dtype="float32") /* ty=Tensor[(8, 15, 4), float32] */;
    %1110 = shape_of(%1108, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1111 = cast(%1108, dtype="float32") /* ty=Tensor[(8, 15, 4), float32] */;
    %1112 = dyn.reshape(%1109, %1110, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1113 = divide(%1111, %1112) /* ty=Tensor[(8, 15, 4), float32] */;
    %1114 = @func_3896() /* ty=Tensor[(8, 15, 4), bool] */;
    (%1113, %1114)
  };
  %1115(%var_4140) /* ty=(Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), bool]) */
}

def @func_3537() -> Tensor[(8, 15, 4), float64] {
  %1119 = fn () -> Tensor[(8, 15, 4), float64] {
    %1116 = @func_3130() /* ty=(Tensor[(8, 15, 4), float32],) */;
    %1117 = %1116.0;
    %1118 = cast(%1117, dtype="float64") /* ty=Tensor[(8, 15, 4), float64] */;
    sinh(%1118) /* ty=Tensor[(8, 15, 4), float64] */
  };
  %1119() /* ty=Tensor[(8, 15, 4), float64] */
}

def @func_11468(%var_11460: bool, %var_11461: Tensor[(42), bool], %var_11464: Tensor[(728), uint8]) -> (Tensor[(8, 15, 4), float64], Tensor[(6, ?, 7), bool], bool, Tensor[(42), bool], Tensor[(15, 6), float64], Tensor[(728), uint8], Tensor[(90), float64], Tensor[(24, 48), uint64]) {
  %1120 = cast(%var_11460, dtype="bool") /* ty=bool */;
  %1121 = cast(%var_11461, dtype="bool") /* ty=Tensor[(42), bool] */;
  %1122 = @func_5625() /* ty=Tensor[(8, 15, 4), float64] */;
  %1123 = cast(%1122, dtype="float32") /* ty=Tensor[(8, 15, 4), float32] */;
  %1124 = cast(%var_11461, dtype="bool") /* ty=Tensor[(42), bool] */;
  %1125 = cast(%1122, dtype="float32") /* ty=Tensor[(8, 15, 4), float32] */;
  %1126 = reshape(%1120, newshape=[]) /* ty=bool */;
  %1127 = reshape(%1121, newshape=[6, 1, 7]) /* ty=Tensor[(6, 1, 7), bool] */;
  %1128 = reshape(%1123, newshape=[120, 4]) /* ty=Tensor[(120, 4), float32] */;
  %1129 = reshape(%1124, newshape=[6, 1, 7]) /* ty=Tensor[(6, 1, 7), bool] */;
  %1130 = reshape(%1125, newshape=[8, 15, 4]) /* ty=Tensor[(8, 15, 4), float32] */;
  %1131 = @func_4895(%1126, %1127, %1128, %1129, %1130) /* ty=(Tensor[(8, 15, 4), float64], Tensor[(120, 4), float64], Tensor[(6, ?, 7), bool], Tensor[(8, 15, 4), float32]) */;
  %1132 = cast(%var_11464, dtype="uint8") /* ty=Tensor[(728), uint8] */;
  %1133 = cast(meta[relay.Constant][70] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
  %1134 = cast(meta[relay.Constant][71] /* ty=Tensor[(24, 48), uint64] */, dtype="uint64") /* ty=Tensor[(24, 48), uint64] */;
  %1135 = reshape(%1132, newshape=[728]) /* ty=Tensor[(728), uint8] */;
  %1136 = reshape(%1133, newshape=[3, 30]) /* ty=Tensor[(3, 30), float64] */;
  %1137 = reshape(%1134, newshape=[1152]) /* ty=Tensor[(1152), uint64] */;
  %1138 = @func_8609(%1135, %1136, %1137) /* ty=(Tensor[(16, 5, 15), bool], Tensor[(15, 6), float64], Tensor[(728), uint8], Tensor[(3, 30), float64], Tensor[(1152), uint64], Tensor[(8, 15, 4), float64]) */;
  %1139 = %1131.2;
  %1140 = %1138.1;
  (%1122, %1139, %var_11460, %var_11461, %1140, %var_11464, meta[relay.Constant][70] /* ty=Tensor[(90), float64] */, meta[relay.Constant][71] /* ty=Tensor[(24, 48), uint64] */)
}

def @func_10527() -> (Tensor[(8, 15, 4), float32],) {
  @func_10525() /* ty=(Tensor[(8, 15, 4), float32],) */
}

def @func_3735(%var_3729: Tensor[(1, 10, 9), float64], %var_3730: Tensor[(11, 10, 9), float64], %var_3731: Tensor[(1512), float64], %var_3732: Tensor[(4, 84), bool], %var_3733: Tensor[(672), bool], %var_3734: Tensor[(1152), uint64]) -> (Tensor[(?, 10, 9), bool], Tensor[(672), bool], Tensor[(1512), float64], Tensor[(4, 84), bool], Tensor[(672), bool], Tensor[(336), bool], Tensor[(11, 10, 9), float32], Tensor[(12, 16, 6), uint64], Tensor[(1152), uint64]) {
  @func_3727(%var_3729, %var_3730, %var_3731, %var_3732, %var_3733, %var_3734) /* ty=(Tensor[(?, 10, 9), bool], Tensor[(672), bool], Tensor[(1512), float64], Tensor[(4, 84), bool], Tensor[(672), bool], Tensor[(336), bool], Tensor[(11, 10, 9), float32], Tensor[(12, 16, 6), uint64], Tensor[(1152), uint64]) */
}

def @func_5584() -> Tensor[(8, 15, 4), float64] {
  %1141 = fn () -> Tensor[(8, 15, 4), float64] {
    @func_3536() /* ty=Tensor[(8, 15, 4), float64] */
  };
  %1141() /* ty=Tensor[(8, 15, 4), float64] */
}

def @func_10034(%var_10010: Tensor[(924), float64]) -> (Tensor[(8, 15, 4), float64], Tensor[(8, 15, 4), bool], Tensor[(8, 15, 4), float32], Tensor[(16, 5, 15), bool], Tensor[(924), float64], Tensor[(14, 14, 10), uint16]) {
  %1142 = @func_3859() /* ty=Tensor[(8, 15, 4), float64] */;
  %1143 = cast(%1142, dtype="bool") /* ty=Tensor[(8, 15, 4), bool] */;
  %1144 = reshape(%1143, newshape=[8, 15, 4]) /* ty=Tensor[(8, 15, 4), bool] */;
  %1145 = @func_8816() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %1146 = cast(%var_10010, dtype="float64") /* ty=Tensor[(924), float64] */;
  %1147 = reshape(%1146, newshape=[924]) /* ty=Tensor[(924), float64] */;
  %1148 = @func_6010(%1147) /* ty=(Tensor[(16, 5, 15), bool], Tensor[(154, 6), bool], Tensor[(1, 360), float64], Tensor[(924), float64]) */;
  %1149 = @func_5128(%1144) /* ty=Tensor[(8, 15, 4), bool] */;
  %1150 = %1145.0;
  %1151 = %1148.0;
  %1152 = @func_6717() /* ty=Tensor[(14, 14, 10), uint16] */;
  (%1142, %1149, %1150, %1151, %var_10010, %1152)
}

def @main() -> (Tensor[(11, 15, 15), float64],) {
  %1153 = cast(meta[relay.Constant][72] /* ty=Tensor[(11, 15, 15), float64] */, dtype="float64") /* ty=Tensor[(11, 15, 15), float64] */;
  %1154 = cosh(%1153) /* ty=Tensor[(11, 15, 15), float64] */;
  (%1154,)
}

def @func_12107() -> (Tensor[(16, 5, 15), bool],) {
  %1155 = @func_6126() /* ty=Tensor[(16, 5, 15), bool] */;
  (%1155,)
}

def @func_7258(%var_7210: Tensor[(672), bool], %var_7220: Tensor[(728), uint8]) -> (Tensor[(12, 3, 14), int64], Tensor[(8, 15, 4), float32], int32, Tensor[(1200), bool], Tensor[(336), bool], Tensor[(672), bool], Tensor[(13, 4, 14), uint8], Tensor[(728), uint8]) {
  %1156 = @func_3314() /* ty=(Tensor[(16, 5, 15), bool], Tensor[(12, 3, 14), int64], Tensor[(504, 1), float64]) */;
  %1157 = @func_5042() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %1158 = cast(meta[relay.Constant][73] /* ty=Tensor[(1200), bool] */, dtype="bool") /* ty=Tensor[(1200), bool] */;
  %1159 = cast(meta[relay.Constant][74] /* ty=Tensor[(336), bool] */, dtype="bool") /* ty=Tensor[(336), bool] */;
  %1160 = cast(%var_7210, dtype="bool") /* ty=Tensor[(672), bool] */;
  %1161 = reshape(%1158, newshape=[16, 5, 15]) /* ty=Tensor[(16, 5, 15), bool] */;
  %1162 = reshape(%1159, newshape=[336]) /* ty=Tensor[(336), bool] */;
  %1163 = reshape(%1160, newshape=[56, 12]) /* ty=Tensor[(56, 12), bool] */;
  %1164 = @func_4275(%1161, %1162, %1163) /* ty=(Tensor[(16, 5, 15), bool], Tensor[(7, 16, 3), bool], Tensor[(336), bool], int32, Tensor[(56, 12), bool], Tensor[(8, 15, 4), float64], Tensor[(12, 16, 6), uint64], Tensor[(24, 48), uint64], Tensor[(8, 15, 4), float64]) */;
  %1165 = cast(%var_7220, dtype="uint8") /* ty=Tensor[(728), uint8] */;
  %1166 = cast(%var_7220, dtype="uint8") /* ty=Tensor[(728), uint8] */;
  %1167 = reshape(%1165, newshape=[13, 4, 14]) /* ty=Tensor[(13, 4, 14), uint8] */;
  %1168 = reshape(%1166, newshape=[13, 4, 14]) /* ty=Tensor[(13, 4, 14), uint8] */;
  %1169 = @func_7141(%1167, %1168) /* ty=(Tensor[(13, 4, 14), uint8],) */;
  %1170 = %1156.1;
  %1171 = %1157.0;
  %1172 = %1164.3;
  %1173 = %1169.0;
  (%1170, %1171, %1172, meta[relay.Constant][73] /* ty=Tensor[(1200), bool] */, meta[relay.Constant][74] /* ty=Tensor[(336), bool] */, %var_7210, %1173, %var_7220)
}

def @func_2477(%var_2444: Tensor[(7, 16, 3), bool], %var_2461: int32, %var_2466: Tensor[(14, 16, 3), bool]) -> (Tensor[(7, 16, 3), bool], Tensor[(14, 12, 2), bool], int32, Tensor[(14, 16, 3), bool]) {
  %1174 = cast(meta[relay.Constant][75] /* ty=Tensor[(1, 16, 3), bool] */, dtype="bool") /* ty=Tensor[(1, 16, 3), bool] */;
  %1175 = cast(%var_2444, dtype="bool") /* ty=Tensor[(7, 16, 3), bool] */;
  %1176 = cast(%var_2461, dtype="int32") /* ty=int32 */;
  %1177 = cast(%var_2444, dtype="int32") /* ty=Tensor[(7, 16, 3), int32] */;
  %1178 = reshape(%1176, newshape=[]) /* ty=int32 */;
  %1179 = reshape(%1177, newshape=[14, 12, 2]) /* ty=Tensor[(14, 12, 2), int32] */;
  %1180 = cast(meta[relay.Constant][75] /* ty=Tensor[(1, 16, 3), bool] */, dtype="bool") /* ty=Tensor[(1, 16, 3), bool] */;
  %1181 = cast(%var_2466, dtype="bool") /* ty=Tensor[(14, 16, 3), bool] */;
  %1182 = logical_and(%1174, %1175) /* ty=Tensor[(7, 16, 3), bool] */;
  %1183 = @func_1445(%1178, %1179) /* ty=Tensor[(14, 12, 2), bool] */;
  %1184 = less(%1180, %1181) /* ty=Tensor[(14, 16, 3), bool] */;
  (%1182, %1183, %var_2461, %1184)
}

def @func_426(%var_425: Tensor[(14, 9, 12), float64]) -> (Tensor[(14, 9, 12), float64],) {
  %1187 = fn (%var_389: Tensor[(14, 9, 12), float64]) -> (Tensor[(14, 9, 12), float64],) {
    %1185 = cast(%var_389, dtype="float64") /* ty=Tensor[(14, 9, 12), float64] */;
    %1186 = sin(%1185) /* ty=Tensor[(14, 9, 12), float64] */;
    (%1186,)
  };
  %1187(%var_425) /* ty=(Tensor[(14, 9, 12), float64],) */
}

def @func_5770() -> Tensor[(8, 15, 4), float32] {
  @func_5768() /* ty=Tensor[(8, 15, 4), float32] */
}

def @func_8089(%var_8088: Tensor[(10, 7, 4), int8]) -> (Tensor[(10, 7, 4), int8],) {
  %1191 = fn (%var_8080: Tensor[(10, 7, 4), int8]) -> (Tensor[(10, 7, 4), int8],) {
    %1188 = cast(meta[relay.Constant][76] /* ty=Tensor[(1, 7, 4), int8] */, dtype="int8") /* ty=Tensor[(1, 7, 4), int8] */;
    %1189 = cast(%var_8080, dtype="int8") /* ty=Tensor[(10, 7, 4), int8] */;
    %1190 = minimum(%1188, %1189) /* ty=Tensor[(10, 7, 4), int8] */;
    (%1190,)
  };
  %1191(%var_8088) /* ty=(Tensor[(10, 7, 4), int8],) */
}

def @func_9615() -> (Tensor[(16, 5, 15), bool], Tensor[(14, 14, 10), float32]) {
  %1192 = @func_7482() /* ty=(Tensor[(16, 5, 15), bool], Tensor[(16, 5, 15), bool]) */;
  %1193 = @func_7596() /* ty=(Tensor[(12, 16, 6), float64], Tensor[(14, 14, 10), float64]) */;
  %1194 = %1193.1;
  %1195 = cast(%1194, dtype="float32") /* ty=Tensor[(14, 14, 10), float32] */;
  %1196 = %1192.0;
  %1197 = asin(%1195) /* ty=Tensor[(14, 14, 10), float32] */;
  (%1196, %1197)
}

def @func_4280(%var_4277: Tensor[(16, 5, 15), bool], %var_4278: Tensor[(336), bool], %var_4279: Tensor[(56, 12), bool]) -> (Tensor[(16, 5, 15), bool], Tensor[(7, 16, 3), bool], Tensor[(336), bool], int32, Tensor[(56, 12), bool], Tensor[(8, 15, 4), float64], Tensor[(12, 16, 6), uint64], Tensor[(24, 48), uint64], Tensor[(8, 15, 4), float64]) {
  @func_4275(%var_4277, %var_4278, %var_4279) /* ty=(Tensor[(16, 5, 15), bool], Tensor[(7, 16, 3), bool], Tensor[(336), bool], int32, Tensor[(56, 12), bool], Tensor[(8, 15, 4), float64], Tensor[(12, 16, 6), uint64], Tensor[(24, 48), uint64], Tensor[(8, 15, 4), float64]) */
}

def @func_11259() -> (Tensor[(8, 15, 4), float64],) {
  %1200 = fn () -> (Tensor[(8, 15, 4), float64],) {
    %1198 = @func_5418() /* ty=(Tensor[(16, 5, 15), bool], Tensor[(8, 15, 4), float64]) */;
    %1199 = %1198.1;
    (%1199,)
  };
  %1200() /* ty=(Tensor[(8, 15, 4), float64],) */
}

def @func_9726() -> (Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float64]) {
  %1201 = @func_5012() /* ty=(Tensor[(16, 5, 15), bool], Tensor[(12, 16, 6), uint64], Tensor[(1152), uint64], Tensor[(8, 15, 4), float64]) */;
  %1202 = @func_6309() /* ty=Tensor[(8, 15, 4), float32] */;
  %1203 = %1201.3;
  (%1202, %1203)
}

def @func_10724() -> (Tensor[(8, 15, 4), float32], Tensor[(13, 16, 7), float32], Tensor[(1456), float64]) {
  @func_10722() /* ty=(Tensor[(8, 15, 4), float32], Tensor[(13, 16, 7), float32], Tensor[(1456), float64]) */
}

def @func_12082(%var_12079: Tensor[(1456), float64], %var_12080: Tensor[(1152), uint64], %var_12081: Tensor[(630), float64]) -> (Tensor[(8, 15, 4), float32], Tensor[(1456), float64], Tensor[(1456), float64], Tensor[(1152), uint64], Tensor[(90), float64], Tensor[(1152), uint64], Tensor[(9, 14, 5), float64], Tensor[(630), float64]) {
  %1223 = fn (%var_12052: Tensor[(1456), float64], %var_12058: Tensor[(1152), uint64], %var_12071: Tensor[(630), float64]) -> (Tensor[(8, 15, 4), float32], Tensor[(1456), float64], Tensor[(1456), float64], Tensor[(1152), uint64], Tensor[(90), float64], Tensor[(1152), uint64], Tensor[(9, 14, 5), float64], Tensor[(630), float64]) {
    %1204 = cast(%var_12052, dtype="float64") /* ty=Tensor[(1456), float64] */;
    %1205 = reshape(%1204, newshape=[1456]) /* ty=Tensor[(1456), float64] */;
    %1206 = @func_10834(%1205) /* ty=(Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float64], Tensor[(924), float64], Tensor[(8, 15, 4), float32], Tensor[(1456), float64]) */;
    %1207 = cast(meta[relay.Constant][77] /* ty=Tensor[(90), float64] */, dtype="float64") /* ty=Tensor[(90), float64] */;
    %1208 = cast(%var_12058, dtype="uint64") /* ty=Tensor[(1152), uint64] */;
    %1209 = reshape(%1207, newshape=[15, 6]) /* ty=Tensor[(15, 6), float64] */;
    %1210 = reshape(%1208, newshape=[1152]) /* ty=Tensor[(1152), uint64] */;
    %1211 = @func_3950(%1209, %1210) /* ty=(Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), bool], Tensor[(16, 5, 15), bool], Tensor[(1512), float64], Tensor[(15, 6), float64], Tensor[(990), float64], Tensor[(126, 12), float64], Tensor[(168, 2), bool], Tensor[(672), bool], Tensor[(1152), uint64]) */;
    %1212 = cast(%var_12071, dtype="float64") /* ty=Tensor[(630), float64] */;
    %1213 = cast(%var_12071, dtype="float64") /* ty=Tensor[(630), float64] */;
    %1214 = cast(%var_12071, dtype="float64") /* ty=Tensor[(630), float64] */;
    %1215 = reshape(%1212, newshape=[9, 14, 5]) /* ty=Tensor[(9, 14, 5), float64] */;
    %1216 = reshape(%1213, newshape=[9, 14, 5]) /* ty=Tensor[(9, 14, 5), float64] */;
    %1217 = reshape(%1214, newshape=[9, 14, 5]) /* ty=Tensor[(9, 14, 5), float64] */;
    %1218 = @func_10260(%1215, %1216, %1217) /* ty=(Tensor[(9, 14, 5), float64], Tensor[(9, 14, 5), uint8]) */;
    %1219 = @func_4962() /* ty=Tensor[(8, 15, 4), float32] */;
    %1220 = %1206.4;
    %1221 = %1211.9;
    %1222 = %1218.0;
    (%1219, %1220, %var_12052, %1221, meta[relay.Constant][77] /* ty=Tensor[(90), float64] */, %var_12058, %1222, %var_12071)
  };
  %1223(%var_12079, %var_12080, %var_12081) /* ty=(Tensor[(8, 15, 4), float32], Tensor[(1456), float64], Tensor[(1456), float64], Tensor[(1152), uint64], Tensor[(90), float64], Tensor[(1152), uint64], Tensor[(9, 14, 5), float64], Tensor[(630), float64]) */
}

def @func_10851(%var_10849: Tensor[(9, 7, 3), int64], %var_10850: Tensor[(9, 7, 3), int64]) -> (Tensor[(9, 7, 3), int64], Tensor[(11, 4, 12), float64]) {
  %1231 = fn (%var_10838: Tensor[(9, 7, 3), int64], %var_10839: Tensor[(9, 7, 3), int64]) -> (Tensor[(9, 7, 3), int64], Tensor[(11, 4, 12), float64]) {
    %1224 = cast(%var_10839, dtype="int64") /* ty=Tensor[(9, 7, 3), int64] */;
    %1225 = shape_of(%var_10838, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1226 = cast(%var_10838, dtype="int64") /* ty=Tensor[(9, 7, 3), int64] */;
    %1227 = dyn.reshape(%1224, %1225, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %1228 = @func_10306() /* ty=(Tensor[(11, 4, 12), float64],) */;
    %1229 = multiply(%1226, %1227) /* ty=Tensor[(9, 7, 3), int64] */;
    %1230 = %1228.0;
    (%1229, %1230)
  };
  %1231(%var_10849, %var_10850) /* ty=(Tensor[(9, 7, 3), int64], Tensor[(11, 4, 12), float64]) */
}

def @func_6786() -> (Tensor[(14, 14, 10), float64],) {
  %1232 = @func_6717() /* ty=Tensor[(14, 14, 10), uint16] */;
  %1233 = cast(%1232, dtype="float64") /* ty=Tensor[(14, 14, 10), float64] */;
  %1234 = atan(%1233) /* ty=Tensor[(14, 14, 10), float64] */;
  (%1234,)
}

def @func_5563(%var_5561: Tensor[(8, 15, 4), float64]) -> (Tensor[(672), bool], Tensor[(90), float64], Tensor[(1152), uint64], Tensor[(8, 15, 4), int64]) {
  @func_5560(%var_5561) /* ty=(Tensor[(672), bool], Tensor[(90), float64], Tensor[(1152), uint64], Tensor[(8, 15, 4), int64]) */
}

def @func_4199() -> Tensor[(16, 5, 15), bool] {
  @func_4197() /* ty=Tensor[(16, 5, 15), bool] */
}

def @func_5128(%var_5122: Tensor[(8, 15, 4), bool]) -> Tensor[(8, 15, 4), bool] {
  %1235 = @func_3896() /* ty=Tensor[(8, 15, 4), bool] */;
  %1236 = cast(%var_5122, dtype="bool") /* ty=Tensor[(8, 15, 4), bool] */;
  %1237 = shape_of(%1235, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1238 = cast(%1235, dtype="bool") /* ty=Tensor[(8, 15, 4), bool] */;
  %1239 = dyn.reshape(%1236, %1237, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%1238, %1239) /* ty=Tensor[(8, 15, 4), bool] */
}

def @func_12296() -> Tensor[(8, 15, 4), float32] {
  @func_12294() /* ty=Tensor[(8, 15, 4), float32] */
}

def @func_6838() -> (Tensor[(8, 15, 4), float32],) {
  %1240 = @func_5927() /* ty=(Tensor[(8, 15, 4), float32],) */;
  %1241 = %1240.0;
  (%1241,)
}

def @func_2749(%var_2746: Tensor[(12, 3, 14), float64], %var_2747: Tensor[(12, 3, 14), float64], %var_2748: Tensor[(12, 3, 14), float64]) -> (Tensor[(12, 3, 14), bool], Tensor[(12, 3, 14), int64]) {
  %1252 = fn (%var_2730: Tensor[(12, 3, 14), float64], %var_2731: Tensor[(12, 3, 14), float64], %var_2737: Tensor[(12, 3, 14), float64]) -> (Tensor[(12, 3, 14), bool], Tensor[(12, 3, 14), int64]) {
    %1242 = cast(%var_2731, dtype="bool") /* ty=Tensor[(12, 3, 14), bool] */;
    %1243 = shape_of(%var_2730, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1244 = cast(%var_2730, dtype="bool") /* ty=Tensor[(12, 3, 14), bool] */;
    %1245 = dyn.reshape(%1242, %1243, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1246 = cast(%var_2737, dtype="int64") /* ty=Tensor[(12, 3, 14), int64] */;
    %1247 = shape_of(%var_2730, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1248 = cast(%var_2730, dtype="int64") /* ty=Tensor[(12, 3, 14), int64] */;
    %1249 = dyn.reshape(%1246, %1247, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %1250 = less_equal(%1244, %1245) /* ty=Tensor[(12, 3, 14), bool] */;
    %1251 = subtract(%1248, %1249) /* ty=Tensor[(12, 3, 14), int64] */;
    (%1250, %1251)
  };
  %1252(%var_2746, %var_2747, %var_2748) /* ty=(Tensor[(12, 3, 14), bool], Tensor[(12, 3, 14), int64]) */
}

def @func_4197() -> Tensor[(16, 5, 15), bool] {
  %1253 = @func_4162() /* ty=(Tensor[(16, 5, 15), bool],) */;
  %1253.0
}

def @func_1283(%var_1281: Tensor[(9, 10, 4), float64], %var_1282: Tensor[(154, 6), float64]) -> (Tensor[(9, 10, 4), float64], Tensor[(154, 6), bool]) {
  %1272 = fn (%var_1244: Tensor[(9, 10, 4), float64], %var_1254: Tensor[(154, 6), float64]) -> (Tensor[(9, 10, 4), float64], Tensor[(154, 6), bool]) {
    %1254 = cast(%var_1244, dtype="float64") /* ty=Tensor[(9, 10, 4), float64] */;
    %1255 = shape_of(meta[relay.Constant][78] /* ty=Tensor[(9, 10, 4), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1256 = cast(meta[relay.Constant][78] /* ty=Tensor[(9, 10, 4), float64] */, dtype="float64") /* ty=Tensor[(9, 10, 4), float64] */;
    %1257 = dyn.reshape(%1254, %1255, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1258 = cast(%var_1254, dtype="float64") /* ty=Tensor[(154, 6), float64] */;
    %1259 = atan(%1258) /* ty=Tensor[(154, 6), float64] */;
    %1260 = cast(%var_1254, dtype="float64") /* ty=Tensor[(154, 6), float64] */;
    %1261 = cast(%var_1254, dtype="float64") /* ty=Tensor[(154, 6), float64] */;
    %1262 = reshape(%1260, newshape=[14, 11, 6]) /* ty=Tensor[(14, 11, 6), float64] */;
    %1263 = reshape(%1261, newshape=[14, 11, 6]) /* ty=Tensor[(14, 11, 6), float64] */;
    %1264 = @func_758(%1262, %1263) /* ty=(Tensor[(14, 11, 6), float32],) */;
    %1265 = %1264.0;
    %1266 = cast(%1265, dtype="bool") /* ty=Tensor[(14, 11, 6), bool] */;
    %1267 = shape_of(%1259, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1268 = cast(%1259, dtype="bool") /* ty=Tensor[(154, 6), bool] */;
    %1269 = dyn.reshape(%1266, %1267, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1270 = floor_mod(%1256, %1257) /* ty=Tensor[(9, 10, 4), float64] */;
    %1271 = less_equal(%1268, %1269) /* ty=Tensor[(154, 6), bool] */;
    (%1270, %1271)
  };
  %1272(%var_1281, %var_1282) /* ty=(Tensor[(9, 10, 4), float64], Tensor[(154, 6), bool]) */
}

def @func_12934(%var_12932: Tensor[(924), float64]) -> (Tensor[(8, 15, 4), float32], Tensor[(924), float64], Tensor[(8, 15, 4), float32], Tensor[(14, 11, 6), float32]) {
  @func_12931(%var_12932) /* ty=(Tensor[(8, 15, 4), float32], Tensor[(924), float64], Tensor[(8, 15, 4), float32], Tensor[(14, 11, 6), float32]) */
}

def @func_9564() -> (Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float64], Tensor[(8, 15, 4), float64]) {
  %1273 = @func_9374() /* ty=(Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float64], Tensor[(8, 15, 4), float32]) */;
  %1274 = %1273.2;
  %1275 = cast(%1274, dtype="float64") /* ty=Tensor[(8, 15, 4), float64] */;
  %1276 = @func_5833() /* ty=Tensor[(8, 15, 4), float32] */;
  %1277 = @func_3859() /* ty=Tensor[(8, 15, 4), float64] */;
  %1278 = asinh(%1275) /* ty=Tensor[(8, 15, 4), float64] */;
  (%1276, %1277, %1278)
}

def @func_9963() -> Tensor[(8, 15, 4), float64] {
  %1280 = fn () -> Tensor[(8, 15, 4), float64] {
    %1279 = @func_4068() /* ty=(Tensor[(8, 15, 4), float64], Tensor[(12, 16, 6), uint64], Tensor[(1152), uint64]) */;
    %1279.0
  };
  %1280() /* ty=Tensor[(8, 15, 4), float64] */
}

def @func_3395(%var_3392: Tensor[(14, 9, 12), float64], %var_3393: Tensor[(336), bool], %var_3394: Tensor[(672), bool]) -> (Tensor[(728), uint8], Tensor[(14, 9, 12), int16], Tensor[(8, 15, 4), float64], Tensor[(14, 12, 2), bool], Tensor[(336), bool], int32, Tensor[(672), bool]) {
  %1304 = fn (%var_3367: Tensor[(14, 9, 12), float64], %var_3383: Tensor[(336), bool], %var_3385: Tensor[(672), bool]) -> (Tensor[(728), uint8], Tensor[(14, 9, 12), int16], Tensor[(8, 15, 4), float64], Tensor[(14, 12, 2), bool], Tensor[(336), bool], int32, Tensor[(672), bool]) {
    %1281 = cast(meta[relay.Constant][79] /* ty=Tensor[(728), uint8] */, dtype="uint8") /* ty=Tensor[(728), uint8] */;
    %1282 = cast(meta[relay.Constant][79] /* ty=Tensor[(728), uint8] */, dtype="uint8") /* ty=Tensor[(728), uint8] */;
    %1283 = reshape(%1281, newshape=[13, 4, 14]) /* ty=Tensor[(13, 4, 14), uint8] */;
    %1284 = reshape(%1282, newshape=[13, 4, 14]) /* ty=Tensor[(13, 4, 14), uint8] */;
    %1285 = @func_546(%1283, %1284) /* ty=(Tensor[(13, 4, 14), uint8], Tensor[(14, 9, 12), float64], Tensor[(1512), float64], Tensor[(14, 9, 12), float64], Tensor[(14, 9, 12), float64], Tensor[(14, 9, 12), float64]) */;
    %1286 = %1285.1;
    %1287 = cast(%var_3367, dtype="int16") /* ty=Tensor[(14, 9, 12), int16] */;
    %1288 = shape_of(%1286, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1289 = cast(%1286, dtype="int16") /* ty=Tensor[(14, 9, 12), int16] */;
    %1290 = dyn.reshape(%1287, %1288, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %1291 = @func_3274() /* ty=(Tensor[(8, 15, 4), float32],) */;
    %1292 = %1291.0;
    %1293 = cast(%1292, dtype="float64") /* ty=Tensor[(8, 15, 4), float64] */;
    %1294 = cast(%var_3383, dtype="bool") /* ty=Tensor[(336), bool] */;
    %1295 = cast(3 /* ty=int32 */, dtype="int32") /* ty=int32 */;
    %1296 = cast(%var_3385, dtype="bool") /* ty=Tensor[(672), bool] */;
    %1297 = reshape(%1294, newshape=[7, 16, 3]) /* ty=Tensor[(7, 16, 3), bool] */;
    %1298 = reshape(%1295, newshape=[]) /* ty=int32 */;
    %1299 = reshape(%1296, newshape=[14, 16, 3]) /* ty=Tensor[(14, 16, 3), bool] */;
    %1300 = @func_2477(%1297, %1298, %1299) /* ty=(Tensor[(7, 16, 3), bool], Tensor[(14, 12, 2), bool], int32, Tensor[(14, 16, 3), bool]) */;
    %1301 = right_shift(%1289, %1290) /* ty=Tensor[(14, 9, 12), int16] */;
    %1302 = erf(%1293) /* ty=Tensor[(8, 15, 4), float64] */;
    %1303 = %1300.1;
    (meta[relay.Constant][79] /* ty=Tensor[(728), uint8] */, %1301, %1302, %1303, %var_3383, 3 /* ty=int32 */, %var_3385)
  };
  %1304(%var_3392, %var_3393, %var_3394) /* ty=(Tensor[(728), uint8], Tensor[(14, 9, 12), int16], Tensor[(8, 15, 4), float64], Tensor[(14, 12, 2), bool], Tensor[(336), bool], int32, Tensor[(672), bool]) */
}

def @func_10993() -> (Tensor[(12, 16, 6), float64], Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), int64], Tensor[(8, 15, 4), float64], Tensor[(12, 16, 6), float64]) {
  %1320 = fn () -> (Tensor[(12, 16, 6), float64], Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), int64], Tensor[(8, 15, 4), float64], Tensor[(12, 16, 6), float64]) {
    %1305 = @func_7596() /* ty=(Tensor[(12, 16, 6), float64], Tensor[(14, 14, 10), float64]) */;
    %1306 = %1305.0;
    %1307 = cast(meta[relay.Constant][80] /* ty=Tensor[(12, 16, 6), float64] */, dtype="float64") /* ty=Tensor[(12, 16, 6), float64] */;
    %1308 = shape_of(%1306, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1309 = cast(%1306, dtype="float64") /* ty=Tensor[(12, 16, 6), float64] */;
    %1310 = dyn.reshape(%1307, %1308, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1311 = @func_9374() /* ty=(Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float64], Tensor[(8, 15, 4), float32]) */;
    %1312 = @func_7858() /* ty=(Tensor[(8, 15, 4), float64], Tensor[(8, 15, 4), int64]) */;
    %1313 = @func_5012() /* ty=(Tensor[(16, 5, 15), bool], Tensor[(12, 16, 6), uint64], Tensor[(1152), uint64], Tensor[(8, 15, 4), float64]) */;
    %1314 = cast(%1306, dtype="float64") /* ty=Tensor[(12, 16, 6), float64] */;
    %1315 = mod(%1309, %1310) /* ty=Tensor[(12, 16, 6), float64] */;
    %1316 = %1311.0;
    %1317 = %1312.1;
    %1318 = %1313.3;
    %1319 = atan(%1314) /* ty=Tensor[(12, 16, 6), float64] */;
    (%1315, %1316, %1317, %1318, %1319)
  };
  %1320() /* ty=(Tensor[(12, 16, 6), float64], Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), int64], Tensor[(8, 15, 4), float64], Tensor[(12, 16, 6), float64]) */
}

def @func_9262() -> Tensor[(8, 15, 4), float32] {
  %1322 = fn () -> Tensor[(8, 15, 4), float32] {
    %1321 = @func_5927() /* ty=(Tensor[(8, 15, 4), float32],) */;
    %1321.0
  };
  %1322() /* ty=Tensor[(8, 15, 4), float32] */
}

def @func_5835() -> Tensor[(8, 15, 4), float32] {
  @func_5833() /* ty=Tensor[(8, 15, 4), float32] */
}

def @func_7128(%var_7126: Tensor[(1, 924), float64]) -> (Tensor[(8, 15, 4), float64], Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float32], Tensor[(14, 11, 6), float32], Tensor[(1, 924), float64]) {
  @func_7125(%var_7126) /* ty=(Tensor[(8, 15, 4), float64], Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float32], Tensor[(14, 11, 6), float32], Tensor[(1, 924), float64]) */
}

def @func_6388() -> Tensor[(504), float64] {
  %1324 = fn () -> Tensor[(504), float64] {
    %1323 = @func_6094() /* ty=(Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float32], Tensor[(8, 15, 4), float64], Tensor[(12, 3, 14), bool], Tensor[(504), float64]) */;
    %1323.4
  };
  %1324() /* ty=Tensor[(504), float64] */
}

def @func_12771() -> (Tensor[(1200, 1), bool], Tensor[(16, 5, 15), bool]) {
  %1325 = @func_11861() /* ty=(Tensor[(8, 15, 4), float64], Tensor[(16, 5, 15), bool], Tensor[(1200, 1), bool]) */;
  %1326 = @func_4162() /* ty=(Tensor[(16, 5, 15), bool],) */;
  %1327 = %1325.2;
  %1328 = %1326.0;
  (%1327, %1328)
}

def @func_12116() -> Tensor[(12, 16, 6), uint64] {
  %1330 = fn () -> Tensor[(12, 16, 6), uint64] {
    %1329 = @func_4068() /* ty=(Tensor[(8, 15, 4), float64], Tensor[(12, 16, 6), uint64], Tensor[(1152), uint64]) */;
    %1329.1
  };
  %1330() /* ty=Tensor[(12, 16, 6), uint64] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen521/build/output.py:3628: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen521/build/output.py:3633: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='cuda')
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen521/build/output.py:3652: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')

===================================
#[version = "0.0.5"]
def @main() -> ((Tensor[(11, 15, 15), float64],), ()) {
  let %x = meta[relay.Constant][0] /* ty=Tensor[(11, 15, 15), float64] */;
  let %x1 = zeros_like(%x);
  let %x2 = (%x,);
  %0 = zeros(shape=[11, 15, 15], dtype="float64");
  let %x3 = (%0,);
  %1 = ones(shape=[11, 15, 15], dtype="float64");
  %2 = (%1,);
  %3 = %2.0;
  %4 = (
    let %x4 = add(%x1, %3);
    ()
  );
  (%x2, %4)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen521/build/output.py", line 3657, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(1024) tvmgen_default_fused_zeros_kernel0(double* __restrict__ T_full) {
  if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 2475) {
    T_full[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = 0.000000e+00;
  }
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


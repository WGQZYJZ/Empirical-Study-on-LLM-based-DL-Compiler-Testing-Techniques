==========mod==========
#[version = "0.0.5"]
def @func_8388() -> (Tensor[(560, 4), float32], Tensor[(560, 4), float64]) {
  %0 = @func_7774() /* ty=(Tensor[(560, 4), float64], Tensor[(12, 5, 11), float64]) */;
  %1 = @func_7099() /* ty=Tensor[(560, 4), float32] */;
  %2 = %0.0;
  (%1, %2)
}

def @func_4411() -> Tensor[(12, 14, 14), bool] {
  %3 = @func_2528() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), bool]) */;
  %3.1
}

def @func_1727() -> (Tensor[(560, 4), float64],) {
  %4 = @func_1581() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), float64], Tensor[(56), float64], Tensor[(8, 7, 8), float64], Tensor[(560, 4), int64], Tensor[(975), float64]) */;
  %5 = %4.4;
  %6 = cast(meta[relay.Constant][0] /* ty=Tensor[(560, 4), int64] */, dtype="float64") /* ty=Tensor[(560, 4), float64] */;
  %7 = shape_of(%5, dtype="int32") /* ty=Tensor[(2), int32] */;
  %8 = cast(%5, dtype="float64") /* ty=Tensor[(560, 4), float64] */;
  %9 = dyn.reshape(%6, %7, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %10 = floor_mod(%8, %9) /* ty=Tensor[(560, 4), float64] */;
  (%10,)
}

def @func_7357() -> (Tensor[(560, 4), int64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), bool], Tensor[(12, 14, 14), float64], Tensor[(140, 16), int64], Tensor[(12, 5, 11), float64], Tensor[(660), float64]) {
  %11 = @func_2108() /* ty=(Tensor[(560, 4), int64],) */;
  %12 = @func_2649() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) */;
  %13 = @func_1627() /* ty=(Tensor[(12, 14, 14), bool], Tensor[(8, 7, 8), float64], Tensor[(12, 14, 14), float64]) */;
  %14 = @func_4957() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %15 = @func_6518() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(140, 16), int64], Tensor[(65, 15), float32], Tensor[(2240), int64], Tensor[(56, 1), float64]) */;
  %16 = cast(meta[relay.Constant][1] /* ty=Tensor[(660), float64] */, dtype="float64") /* ty=Tensor[(660), float64] */;
  %17 = reshape(%16, newshape=[12, 5, 11]) /* ty=Tensor[(12, 5, 11), float64] */;
  %18 = @func_3797(%17) /* ty=(Tensor[(12, 5, 11), float64], Tensor[(12, 14, 14), bool], Tensor[(2352), float64], Tensor[(12, 14, 14), bool]) */;
  %19 = %11.0;
  %20 = %12.0;
  %21 = %13.0;
  %22 = %14.0;
  %23 = %15.1;
  %24 = %18.0;
  (%19, %20, %21, %22, %23, %24, meta[relay.Constant][1] /* ty=Tensor[(660), float64] */)
}

def @func_3137(%var_3126: Tensor[(560, 4), float64]) -> (Tensor[(65, 15), float64], Tensor[(560, 4), bool]) {
  %25 = @func_1978() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(56), float64], Tensor[(2, 28), float64], Tensor[(2240), int64], Tensor[(65, 15), float64]) */;
  %26 = @func_1727() /* ty=(Tensor[(560, 4), float64],) */;
  %27 = %26.0;
  %28 = cast(%var_3126, dtype="bool") /* ty=Tensor[(560, 4), bool] */;
  %29 = shape_of(%27, dtype="int32") /* ty=Tensor[(2), int32] */;
  %30 = cast(%27, dtype="bool") /* ty=Tensor[(560, 4), bool] */;
  %31 = dyn.reshape(%28, %29, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %32 = %25.4;
  %33 = greater_equal(%30, %31) /* ty=Tensor[(560, 4), bool] */;
  (%32, %33)
}

def @func_6429() -> (Tensor[(140, 16), int64],) {
  %34 = @func_2984() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(10, 14, 16), int64], Tensor[(140, 16), int64]) */;
  %35 = %34.2;
  (%35,)
}

def @func_5888() -> (Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), bool], Tensor[(560, 4), int64]) {
  %36 = @func_3000() /* ty=(Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), int64]) */;
  %37 = @func_5767() /* ty=(Tensor[(12, 14, 14), bool], Tensor[(12, 14, 14), float64], Tensor[(560, 4), int64], Tensor[(2, 28), float64]) */;
  %38 = @func_5767() /* ty=(Tensor[(12, 14, 14), bool], Tensor[(12, 14, 14), float64], Tensor[(560, 4), int64], Tensor[(2, 28), float64]) */;
  %39 = %36.0;
  %40 = @func_2495() /* ty=Tensor[(12, 14, 14), float64] */;
  %41 = %37.0;
  %42 = %38.2;
  (%39, %40, %41, %42)
}

def @func_4802() -> (Tensor[(12, 14, 14), int64], Tensor[(13, 7, 7), int8], Tensor[(637), int8]) {
  %43 = @func_3757() /* ty=(Tensor[(12, 14, 14), int64],) */;
  %44 = cast(meta[relay.Constant][2] /* ty=Tensor[(637), int8] */, dtype="int8") /* ty=Tensor[(637), int8] */;
  %45 = cast(meta[relay.Constant][2] /* ty=Tensor[(637), int8] */, dtype="int8") /* ty=Tensor[(637), int8] */;
  %46 = reshape(%44, newshape=[13, 7, 7]) /* ty=Tensor[(13, 7, 7), int8] */;
  %47 = reshape(%45, newshape=[13, 7, 7]) /* ty=Tensor[(13, 7, 7), int8] */;
  %48 = @func_1814(%46, %47) /* ty=(Tensor[(13, 7, 7), int8],) */;
  %49 = %43.0;
  %50 = %48.0;
  (%49, %50, meta[relay.Constant][2] /* ty=Tensor[(637), int8] */)
}

def @func_11410() -> Tensor[(300), float64] {
  %51 = @func_4651() /* ty=(Tensor[(300), float64],) */;
  %51.0
}

def @func_4651() -> (Tensor[(300), float64],) {
  %52 = @func_3099() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(300), float64], Tensor[(5, 60), float64], Tensor[(12, 14, 14), float64]) */;
  %53 = %52.1;
  (%53,)
}

def @func_2294(%var_2288: Tensor[(56), float64]) -> (Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), float64], Tensor[(56), float64], Tensor[(2240), int64], Tensor[(1, 975), float64]) {
  %54 = @func_2199() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(2, 28), float32]) */;
  %55 = cast(%var_2288, dtype="float64") /* ty=Tensor[(56), float64] */;
  %56 = cast(meta[relay.Constant][3] /* ty=Tensor[(2240), int64] */, dtype="int64") /* ty=Tensor[(2240), int64] */;
  %57 = cast(meta[relay.Constant][4] /* ty=Tensor[(1, 975), float64] */, dtype="float64") /* ty=Tensor[(1, 975), float64] */;
  %58 = reshape(%55, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %59 = reshape(%56, newshape=[2240]) /* ty=Tensor[(2240), int64] */;
  %60 = reshape(%57, newshape=[975]) /* ty=Tensor[(975), float64] */;
  %61 = @func_1385(%58, %59, %60) /* ty=(Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), float64], Tensor[(56), float64], Tensor[(8, 7, 8), float64], Tensor[(2240), int64], Tensor[(10, 14, 16), int64], Tensor[(75), float64], Tensor[(975), float64]) */;
  %62 = %54.0;
  %63 = %61.3;
  (%62, %63, %var_2288, meta[relay.Constant][3] /* ty=Tensor[(2240), int64] */, meta[relay.Constant][4] /* ty=Tensor[(1, 975), float64] */)
}

def @func_9936() -> (Tensor[(12, 14, 14), float64],) {
  %64 = @func_4957() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %65 = %64.0;
  (%65,)
}

def @func_8727() -> (Tensor[(56), float64], Tensor[(12, 14, 14), float64]) {
  %66 = @func_1978() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(56), float64], Tensor[(2, 28), float64], Tensor[(2240), int64], Tensor[(65, 15), float64]) */;
  %67 = %66.1;
  %68 = @func_2917() /* ty=Tensor[(12, 14, 14), float64] */;
  (%67, %68)
}

def @func_7062() -> Tensor[(300), float64] {
  %69 = @func_6399() /* ty=(Tensor[(12, 14, 14), bool], Tensor[(300), float64], Tensor[(12, 14, 14), int64], Tensor[(8, 7, 8), float64]) */;
  %69.1
}

def @func_6820() -> (Tensor[(2, 28), float64],) {
  %70 = @func_5767() /* ty=(Tensor[(12, 14, 14), bool], Tensor[(12, 14, 14), float64], Tensor[(560, 4), int64], Tensor[(2, 28), float64]) */;
  %71 = %70.3;
  (%71,)
}

def @func_8864() -> Tensor[(12, 14, 14), float64] {
  %72 = @func_4825() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64]) */;
  %72.0
}

def @func_8820(%var_8800: Tensor[(6, 16, 16), float32]) -> (Tensor[(12, 14, 14), float64], Tensor[(6, 16, 16), float64]) {
  %73 = @func_5091() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) */;
  %74 = cast(meta[relay.Constant][5] /* ty=Tensor[(6, 16, 16), float32] */, dtype="float32") /* ty=Tensor[(6, 16, 16), float32] */;
  %75 = log2(%74) /* ty=Tensor[(6, 16, 16), float32] */;
  %76 = cast(%var_8800, dtype="float64") /* ty=Tensor[(6, 16, 16), float64] */;
  %77 = shape_of(%75, dtype="int32") /* ty=Tensor[(3), int32] */;
  %78 = cast(%75, dtype="float64") /* ty=Tensor[(6, 16, 16), float64] */;
  %79 = dyn.reshape(%76, %77, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %80 = %73.1;
  %81 = add(%78, %79) /* ty=Tensor[(6, 16, 16), float64] */;
  (%80, %81)
}

def @func_10312() -> (Tensor[(12, 14, 14), int64], Tensor[(2, 80), float64], Tensor[(8, 20), float64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) {
  %82 = @func_3000() /* ty=(Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), int64]) */;
  %83 = cast(meta[relay.Constant][6] /* ty=Tensor[(8, 20), float64] */, dtype="float64") /* ty=Tensor[(8, 20), float64] */;
  %84 = reshape(%83, newshape=[2, 80]) /* ty=Tensor[(2, 80), float64] */;
  %85 = @func_8521(%84) /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64], Tensor[(2, 80), float64]) */;
  %86 = @func_6053() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %87 = @func_7133() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %88 = %82.1;
  %89 = %85.3;
  %90 = %86.0;
  %91 = %87.0;
  (%88, %89, meta[relay.Constant][6] /* ty=Tensor[(8, 20), float64] */, %90, %91)
}

def @func_3894() -> (Tensor[(2, 28), bool],) {
  %92 = @func_2446() /* ty=(Tensor[(2, 28), bool], Tensor[(2, 28), float64], Tensor[(2, 28), int16]) */;
  %93 = %92.0;
  (%93,)
}

def @func_7598() -> (Tensor[(560, 4), bool], Tensor[(10, 16, 1), float64], Tensor[(160), float64]) {
  %94 = @func_5767() /* ty=(Tensor[(12, 14, 14), bool], Tensor[(12, 14, 14), float64], Tensor[(560, 4), int64], Tensor[(2, 28), float64]) */;
  %95 = %94.2;
  %96 = cast(%95, dtype="float64") /* ty=Tensor[(560, 4), float64] */;
  %97 = cos(%96) /* ty=Tensor[(560, 4), float64] */;
  %98 = cast(%95, dtype="bool") /* ty=Tensor[(560, 4), bool] */;
  %99 = shape_of(%97, dtype="int32") /* ty=Tensor[(2), int32] */;
  %100 = cast(%97, dtype="bool") /* ty=Tensor[(560, 4), bool] */;
  %101 = dyn.reshape(%98, %99, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %102 = cast(meta[relay.Constant][7] /* ty=Tensor[(160), float64] */, dtype="float64") /* ty=Tensor[(160), float64] */;
  %103 = reshape(%102, newshape=[10, 16, 1]) /* ty=Tensor[(10, 16, 1), float64] */;
  %104 = logical_and(%100, %101) /* ty=Tensor[(560, 4), bool] */;
  %105 = @func_1509(%103) /* ty=Tensor[(10, 16, 1), float64] */;
  (%104, %105, meta[relay.Constant][7] /* ty=Tensor[(160), float64] */)
}

def @func_9980() -> (Tensor[(65, 15), float64],) {
  %106 = @func_6518() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(140, 16), int64], Tensor[(65, 15), float32], Tensor[(2240), int64], Tensor[(56, 1), float64]) */;
  %107 = %106.2;
  %108 = cast(%107, dtype="float64") /* ty=Tensor[(65, 15), float64] */;
  %109 = sigmoid(%108) /* ty=Tensor[(65, 15), float64] */;
  (%109,)
}

def @func_9996() -> (Tensor[(12, 14, 14), int64],) {
  %110 = @func_2354() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64]) */;
  %111 = %110.1;
  (%111,)
}

def @func_2146() -> Tensor[(2240), int64] {
  %112 = @func_1978() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(56), float64], Tensor[(2, 28), float64], Tensor[(2240), int64], Tensor[(65, 15), float64]) */;
  %112.3
}

def @func_6304() -> (Tensor[(12, 14, 14), float64],) {
  %113 = @func_3246() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) */;
  %114 = %113.1;
  (%114,)
}

def @func_1888(%var_1872: Tensor[(3, 10, 1), float64], %var_1873: Tensor[(3, 10, 15), float64]) -> (Tensor[(3, 10, 15), float64],) {
  %115 = cast(%var_1872, dtype="float64") /* ty=Tensor[(3, 10, 1), float64] */;
  %116 = cast(%var_1873, dtype="float64") /* ty=Tensor[(3, 10, 15), float64] */;
  %117 = divide(%115, %116) /* ty=Tensor[(3, 10, 15), float64] */;
  (%117,)
}

def @func_1978() -> (Tensor[(12, 14, 14), float64], Tensor[(56), float64], Tensor[(2, 28), float64], Tensor[(2240), int64], Tensor[(65, 15), float64]) {
  %118 = @func_1180() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) */;
  %119 = cast(meta[relay.Constant][8] /* ty=Tensor[(2, 28), float64] */, dtype="float64") /* ty=Tensor[(2, 28), float64] */;
  %120 = cast(meta[relay.Constant][9] /* ty=Tensor[(2240), int64] */, dtype="int64") /* ty=Tensor[(2240), int64] */;
  %121 = cast(meta[relay.Constant][10] /* ty=Tensor[(65, 15), float64] */, dtype="float64") /* ty=Tensor[(65, 15), float64] */;
  %122 = reshape(%119, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %123 = reshape(%120, newshape=[2240]) /* ty=Tensor[(2240), int64] */;
  %124 = reshape(%121, newshape=[975]) /* ty=Tensor[(975), float64] */;
  %125 = @func_1385(%122, %123, %124) /* ty=(Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), float64], Tensor[(56), float64], Tensor[(8, 7, 8), float64], Tensor[(2240), int64], Tensor[(10, 14, 16), int64], Tensor[(75), float64], Tensor[(975), float64]) */;
  %126 = %118.0;
  %127 = %125.2;
  (%126, %127, meta[relay.Constant][8] /* ty=Tensor[(2, 28), float64] */, meta[relay.Constant][9] /* ty=Tensor[(2240), int64] */, meta[relay.Constant][10] /* ty=Tensor[(65, 15), float64] */)
}

def @func_10449() -> (Tensor[(12, 14, 14), float64],) {
  %128 = @func_10312() /* ty=(Tensor[(12, 14, 14), int64], Tensor[(2, 80), float64], Tensor[(8, 20), float64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) */;
  %129 = %128.3;
  (%129,)
}

def @func_4728() -> Tensor[(560, 4), float64] {
  %130 = @func_1727() /* ty=(Tensor[(560, 4), float64],) */;
  %130.0
}

def @func_9375() -> (Tensor[(12, 14, 14), float32], Tensor[(12, 14, 14), float64]) {
  %131 = @func_2528() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), bool]) */;
  %132 = @func_4402() /* ty=Tensor[(12, 14, 14), float32] */;
  %133 = %131.0;
  (%132, %133)
}

def @func_9599(%var_9478: Tensor[(160), float64], %var_9531: Tensor[(56), bool], %var_9551: Tensor[(560, 4), int64]) -> (Tensor[(12, 14, 14), float32], Tensor[(10, 16, 1), float64], Tensor[(160), float64], Tensor[(560, 4), float64], Tensor[(12, 14, 14), int64], Tensor[(56), bool], Tensor[(560, 4), float32]) {
  %134 = cast(%var_9478, dtype="float64") /* ty=Tensor[(160), float64] */;
  %135 = reshape(%134, newshape=[10, 16, 1]) /* ty=Tensor[(10, 16, 1), float64] */;
  %136 = @func_8319() /* ty=(Tensor[(560, 4), float64],) */;
  %137 = cast(%var_9531, dtype="bool") /* ty=Tensor[(56), bool] */;
  %138 = reshape(%137, newshape=[2, 28]) /* ty=Tensor[(2, 28), bool] */;
  %139 = @func_9336(%138) /* ty=(Tensor[(560, 4), int64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(2240), int64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64], Tensor[(2, 28), bool]) */;
  %140 = @func_7996() /* ty=(Tensor[(10, 14, 16), int64], Tensor[(56), float64], Tensor[(975), float64], Tensor[(560, 4), float32], Tensor[(12, 14, 14), float64], Tensor[(560, 4), int64], Tensor[(12, 14, 14), float64], Tensor[(560, 4), uint32]) */;
  %141 = %140.5;
  %142 = cast(%var_9551, dtype="float32") /* ty=Tensor[(560, 4), float32] */;
  %143 = shape_of(%141, dtype="int32") /* ty=Tensor[(2), int32] */;
  %144 = cast(%141, dtype="float32") /* ty=Tensor[(560, 4), float32] */;
  %145 = dyn.reshape(%142, %143, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %146 = @func_4402() /* ty=Tensor[(12, 14, 14), float32] */;
  %147 = @func_1509(%135) /* ty=Tensor[(10, 16, 1), float64] */;
  %148 = %136.0;
  %149 = %139.5;
  %150 = mod(%144, %145) /* ty=Tensor[(560, 4), float32] */;
  (%146, %147, %var_9478, %148, %149, %var_9531, %150)
}

def @func_2088() -> Tensor[(65, 15), float64] {
  %151 = @func_1978() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(56), float64], Tensor[(2, 28), float64], Tensor[(2240), int64], Tensor[(65, 15), float64]) */;
  %151.4
}

def @func_2199() -> (Tensor[(12, 14, 14), float64], Tensor[(2, 28), float32]) {
  %152 = @func_1180() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) */;
  %153 = @func_1978() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(56), float64], Tensor[(2, 28), float64], Tensor[(2240), int64], Tensor[(65, 15), float64]) */;
  %154 = %153.2;
  %155 = cast(%154, dtype="float32") /* ty=Tensor[(2, 28), float32] */;
  %156 = %152.0;
  %157 = atanh(%155) /* ty=Tensor[(2, 28), float32] */;
  (%156, %157)
}

def @func_2876(%var_2864: Tensor[(300), float64]) -> (Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), float64], Tensor[(300), float64], Tensor[(56), float64], Tensor[(6, 84), float64]) {
  %158 = @func_2241() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %159 = cast(%var_2864, dtype="float64") /* ty=Tensor[(300), float64] */;
  %160 = cast(meta[relay.Constant][11] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
  %161 = cast(meta[relay.Constant][12] /* ty=Tensor[(6, 84), float64] */, dtype="float64") /* ty=Tensor[(6, 84), float64] */;
  %162 = reshape(%159, newshape=[6, 10, 5]) /* ty=Tensor[(6, 10, 5), float64] */;
  %163 = reshape(%160, newshape=[56, 1]) /* ty=Tensor[(56, 1), float64] */;
  %164 = reshape(%161, newshape=[56, 9]) /* ty=Tensor[(56, 9), float64] */;
  %165 = @func_574(%162, %163, %164) /* ty=(Tensor[(8, 7, 8), float64], Tensor[(56, 9), uint32], Tensor[(8, 7, 8), float64], Tensor[(6, 10, 5), bool], Tensor[(6, 10, 5), float64]) */;
  %166 = %158.0;
  %167 = %165.0;
  (%166, %167, %var_2864, meta[relay.Constant][11] /* ty=Tensor[(56), float64] */, meta[relay.Constant][12] /* ty=Tensor[(6, 84), float64] */)
}

def @func_2049() -> Tensor[(12, 14, 14), float64] {
  %168 = @func_1105() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %168.0
}

def @func_1509(%var_1503: Tensor[(10, 16, 1), float64]) -> Tensor[(10, 16, 1), float64] {
  %169 = cast(%var_1503, dtype="float64") /* ty=Tensor[(10, 16, 1), float64] */;
  acosh(%169) /* ty=Tensor[(10, 16, 1), float64] */
}

def @func_3982() -> (Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), float64]) {
  %170 = @func_3000() /* ty=(Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), int64]) */;
  %171 = @func_2241() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %172 = %170.1;
  %173 = %171.0;
  (%172, %173)
}

def @func_7665() -> Tensor[(12, 14, 14), float64] {
  %174 = @func_3246() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) */;
  %174.1
}

def @func_2483() -> Tensor[(12, 14, 14), float64] {
  @func_2015() /* ty=Tensor[(12, 14, 14), float64] */
}

def @func_3000() -> (Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), int64]) {
  %175 = @func_2354() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64]) */;
  %176 = %175.1;
  %177 = cast(%176, dtype="float64") /* ty=Tensor[(12, 14, 14), float64] */;
  %178 = reshape(%177, newshape=[12, 14, 14]) /* ty=Tensor[(12, 14, 14), float64] */;
  %179 = @func_1469(%178) /* ty=(Tensor[(12, 14, 14), int64],) */;
  %180 = %179.0;
  (%176, %180)
}

def @func_6864() -> Tensor[(56), float64] {
  %181 = @func_1843() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(56), float64]) */;
  %181.1
}

def @func_6399() -> (Tensor[(12, 14, 14), bool], Tensor[(300), float64], Tensor[(12, 14, 14), int64], Tensor[(8, 7, 8), float64]) {
  %182 = @func_5767() /* ty=(Tensor[(12, 14, 14), bool], Tensor[(12, 14, 14), float64], Tensor[(560, 4), int64], Tensor[(2, 28), float64]) */;
  %183 = @func_4651() /* ty=(Tensor[(300), float64],) */;
  %184 = @func_1581() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), float64], Tensor[(56), float64], Tensor[(8, 7, 8), float64], Tensor[(560, 4), int64], Tensor[(975), float64]) */;
  %185 = %182.0;
  %186 = %183.0;
  %187 = @func_4356() /* ty=Tensor[(12, 14, 14), int64] */;
  %188 = %184.1;
  (%185, %186, %187, %188)
}

def @func_3736() -> (Tensor[(12, 14, 14), float64], Tensor[(560, 4), int64], Tensor[(12, 14, 14), bool]) {
  %189 = @func_3246() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) */;
  %190 = @func_2108() /* ty=(Tensor[(560, 4), int64],) */;
  %191 = @func_1627() /* ty=(Tensor[(12, 14, 14), bool], Tensor[(8, 7, 8), float64], Tensor[(12, 14, 14), float64]) */;
  %192 = %189.1;
  %193 = %190.0;
  %194 = %191.0;
  (%192, %193, %194)
}

def @func_2917() -> Tensor[(12, 14, 14), float64] {
  @func_2049() /* ty=Tensor[(12, 14, 14), float64] */
}

def @func_7841(%var_7822: Tensor[(2240), float64]) -> (Tensor[(12, 14, 14), float64], Tensor[(560, 4), int8]) {
  %195 = cast(%var_7822, dtype="float64") /* ty=Tensor[(2240), float64] */;
  %196 = reshape(%195, newshape=[560, 4]) /* ty=Tensor[(560, 4), float64] */;
  %197 = @func_3137(%196) /* ty=(Tensor[(65, 15), float64], Tensor[(560, 4), bool]) */;
  %198 = %197.1;
  %199 = cast(%var_7822, dtype="int8") /* ty=Tensor[(2240), int8] */;
  %200 = shape_of(%198, dtype="int32") /* ty=Tensor[(2), int32] */;
  %201 = cast(%198, dtype="int8") /* ty=Tensor[(560, 4), int8] */;
  %202 = dyn.reshape(%199, %200, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %203 = @func_4370() /* ty=Tensor[(12, 14, 14), float64] */;
  %204 = right_shift(%201, %202) /* ty=Tensor[(560, 4), int8] */;
  (%203, %204)
}

def @func_11034() -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), float64]) {
  %205 = @func_5888() /* ty=(Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), bool], Tensor[(560, 4), int64]) */;
  %206 = @func_6399() /* ty=(Tensor[(12, 14, 14), bool], Tensor[(300), float64], Tensor[(12, 14, 14), int64], Tensor[(8, 7, 8), float64]) */;
  %207 = @func_2241() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %208 = %205.1;
  %209 = %206.2;
  %210 = %207.0;
  (%208, %209, %210)
}

def @func_10032() -> Tensor[(12, 14, 14), int64] {
  %211 = @func_5647() /* ty=(Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), float64]) */;
  %211.0
}

def @func_4760() -> (Tensor[(56), float64],) {
  %212 = @func_1843() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(56), float64]) */;
  %213 = %212.1;
  (%213,)
}

def @func_1627() -> (Tensor[(12, 14, 14), bool], Tensor[(8, 7, 8), float64], Tensor[(12, 14, 14), float64]) {
  %214 = @func_1105() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %215 = %214.0;
  %216 = cast(meta[relay.Constant][13] /* ty=Tensor[(12, 14, 14), float64] */, dtype="bool") /* ty=Tensor[(12, 14, 14), bool] */;
  %217 = shape_of(%215, dtype="int32") /* ty=Tensor[(3), int32] */;
  %218 = cast(%215, dtype="bool") /* ty=Tensor[(12, 14, 14), bool] */;
  %219 = dyn.reshape(%216, %217, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %220 = @func_1581() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), float64], Tensor[(56), float64], Tensor[(8, 7, 8), float64], Tensor[(560, 4), int64], Tensor[(975), float64]) */;
  %221 = @func_1105() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %222 = equal(%218, %219) /* ty=Tensor[(12, 14, 14), bool] */;
  %223 = %220.1;
  %224 = %221.0;
  (%222, %223, %224)
}

def @func_5953() -> (Tensor[(12, 14, 14), float64], Tensor[(6, 10, 5), float64], Tensor[(300), float64], Tensor[(56), float64], Tensor[(504), float64]) {
  %225 = cast(meta[relay.Constant][14] /* ty=Tensor[(300), float64] */, dtype="float64") /* ty=Tensor[(300), float64] */;
  %226 = cast(meta[relay.Constant][15] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
  %227 = cast(meta[relay.Constant][16] /* ty=Tensor[(504), float64] */, dtype="float64") /* ty=Tensor[(504), float64] */;
  %228 = reshape(%225, newshape=[6, 10, 5]) /* ty=Tensor[(6, 10, 5), float64] */;
  %229 = reshape(%226, newshape=[56, 1]) /* ty=Tensor[(56, 1), float64] */;
  %230 = reshape(%227, newshape=[56, 9]) /* ty=Tensor[(56, 9), float64] */;
  %231 = @func_574(%228, %229, %230) /* ty=(Tensor[(8, 7, 8), float64], Tensor[(56, 9), uint32], Tensor[(8, 7, 8), float64], Tensor[(6, 10, 5), bool], Tensor[(6, 10, 5), float64]) */;
  %232 = @func_3625() /* ty=Tensor[(12, 14, 14), float64] */;
  %233 = %231.4;
  (%232, %233, meta[relay.Constant][14] /* ty=Tensor[(300), float64] */, meta[relay.Constant][15] /* ty=Tensor[(56), float64] */, meta[relay.Constant][16] /* ty=Tensor[(504), float64] */)
}

def @func_10329() -> Tensor[(2, 28), float32] {
  @func_5593() /* ty=Tensor[(2, 28), float32] */
}

def @func_11213(%var_11165: Tensor[(448), float64]) -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), bool], Tensor[(448), float64], Tensor[(12, 14, 14), float64]) {
  %234 = @func_3246() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) */;
  %235 = @func_3410() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %236 = cast(%var_11165, dtype="float64") /* ty=Tensor[(448), float64] */;
  %237 = reshape(%236, newshape=[8, 7, 8]) /* ty=Tensor[(8, 7, 8), float64] */;
  %238 = @func_3520(%237) /* ty=(Tensor[(8, 7, 8), bool], Tensor[(8, 7, 8), float64], Tensor[(12, 14, 14), bool], Tensor[(12, 14, 14), float64]) */;
  %239 = @func_7996() /* ty=(Tensor[(10, 14, 16), int64], Tensor[(56), float64], Tensor[(975), float64], Tensor[(560, 4), float32], Tensor[(12, 14, 14), float64], Tensor[(560, 4), int64], Tensor[(12, 14, 14), float64], Tensor[(560, 4), uint32]) */;
  %240 = %234.0;
  %241 = %235.0;
  %242 = %238.0;
  %243 = %239.4;
  (%240, %241, %242, %var_11165, %243)
}

def @func_1814(%var_1804: Tensor[(13, 7, 7), int8], %var_1805: Tensor[(13, 7, 7), int8]) -> (Tensor[(13, 7, 7), int8],) {
  %244 = cast(%var_1805, dtype="int8") /* ty=Tensor[(13, 7, 7), int8] */;
  %245 = shape_of(%var_1804, dtype="int32") /* ty=Tensor[(3), int32] */;
  %246 = cast(%var_1804, dtype="int8") /* ty=Tensor[(13, 7, 7), int8] */;
  %247 = dyn.reshape(%244, %245, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %248 = bitwise_xor(%246, %247) /* ty=Tensor[(13, 7, 7), int8] */;
  (%248,)
}

def @func_4825() -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64]) {
  %249 = @func_4232() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %250 = %249.0;
  %251 = @func_4356() /* ty=Tensor[(12, 14, 14), int64] */;
  (%250, %251)
}

def @func_2724(%var_2702: Tensor[(15, 16, 13), uint16]) -> (Tensor[(15, 16, 13), float32], Tensor[(15, 16, 13), float32]) {
  %252 = cast(%var_2702, dtype="uint16") /* ty=Tensor[(15, 16, 13), uint16] */;
  %253 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(15, 16, 13), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %254 = cast(meta[relay.Constant][17] /* ty=Tensor[(15, 16, 13), uint16] */, dtype="uint16") /* ty=Tensor[(15, 16, 13), uint16] */;
  %255 = dyn.reshape(%252, %253, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %256 = maximum(%254, %255) /* ty=Tensor[(15, 16, 13), uint16] */;
  %257 = cast(%256, dtype="float32") /* ty=Tensor[(15, 16, 13), float32] */;
  %258 = shape_of(%var_2702, dtype="int32") /* ty=Tensor[(3), int32] */;
  %259 = cast(%var_2702, dtype="float32") /* ty=Tensor[(15, 16, 13), float32] */;
  %260 = dyn.reshape(%257, %258, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %261 = cast(%var_2702, dtype="float32") /* ty=Tensor[(15, 16, 13), float32] */;
  %262 = floor_divide(%259, %260) /* ty=Tensor[(15, 16, 13), float32] */;
  %263 = acos(%261) /* ty=Tensor[(15, 16, 13), float32] */;
  (%262, %263)
}

def @func_1105() -> (Tensor[(12, 14, 14), float64],) {
  %264 = cast(meta[relay.Constant][18] /* ty=Tensor[(12, 14, 14), float64] */, dtype="float64") /* ty=Tensor[(12, 14, 14), float64] */;
  %265 = sqrt(%264) /* ty=Tensor[(12, 14, 14), float64] */;
  (%265,)
}

def @func_2649() -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) {
  %266 = @func_2528() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), bool]) */;
  %267 = @func_2528() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), bool]) */;
  %268 = %266.0;
  %269 = %267.0;
  (%268, %269)
}

def @func_7133() -> (Tensor[(12, 14, 14), float64],) {
  %270 = @func_5953() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(6, 10, 5), float64], Tensor[(300), float64], Tensor[(56), float64], Tensor[(504), float64]) */;
  %271 = %270.0;
  (%271,)
}

def @func_7996() -> (Tensor[(10, 14, 16), int64], Tensor[(56), float64], Tensor[(975), float64], Tensor[(560, 4), float32], Tensor[(12, 14, 14), float64], Tensor[(560, 4), int64], Tensor[(12, 14, 14), float64], Tensor[(560, 4), uint32]) {
  %272 = cast(meta[relay.Constant][19] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
  %273 = @func_7099() /* ty=Tensor[(560, 4), float32] */;
  %274 = cast(meta[relay.Constant][20] /* ty=Tensor[(560, 4), float32] */, dtype="bool") /* ty=Tensor[(560, 4), bool] */;
  %275 = shape_of(%273, dtype="int32") /* ty=Tensor[(2), int32] */;
  %276 = cast(%273, dtype="bool") /* ty=Tensor[(560, 4), bool] */;
  %277 = dyn.reshape(%274, %275, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %278 = not_equal(%276, %277) /* ty=Tensor[(560, 4), bool] */;
  %279 = cast(%278, dtype="float32") /* ty=Tensor[(560, 4), float32] */;
  %280 = sqrt(%279) /* ty=Tensor[(560, 4), float32] */;
  %281 = cast(%280, dtype="int64") /* ty=Tensor[(560, 4), int64] */;
  %282 = cast(meta[relay.Constant][21] /* ty=Tensor[(975), float64] */, dtype="float64") /* ty=Tensor[(975), float64] */;
  %283 = reshape(%272, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %284 = reshape(%281, newshape=[2240]) /* ty=Tensor[(2240), int64] */;
  %285 = reshape(%282, newshape=[975]) /* ty=Tensor[(975), float64] */;
  %286 = @func_1385(%283, %284, %285) /* ty=(Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), float64], Tensor[(56), float64], Tensor[(8, 7, 8), float64], Tensor[(2240), int64], Tensor[(10, 14, 16), int64], Tensor[(75), float64], Tensor[(975), float64]) */;
  %287 = cast(%273, dtype="float32") /* ty=Tensor[(560, 4), float32] */;
  %288 = @func_6221() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(560, 4), int64], Tensor[(14, 10, 13), float64]) */;
  %289 = @func_5091() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) */;
  %290 = cast(%273, dtype="bool") /* ty=Tensor[(560, 4), bool] */;
  %291 = shape_of(%280, dtype="int32") /* ty=Tensor[(2), int32] */;
  %292 = cast(%280, dtype="bool") /* ty=Tensor[(560, 4), bool] */;
  %293 = dyn.reshape(%290, %291, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %294 = equal(%292, %293) /* ty=Tensor[(560, 4), bool] */;
  %295 = cast(%294, dtype="uint32") /* ty=Tensor[(560, 4), uint32] */;
  %296 = shape_of(%280, dtype="int32") /* ty=Tensor[(2), int32] */;
  %297 = cast(%280, dtype="uint32") /* ty=Tensor[(560, 4), uint32] */;
  %298 = dyn.reshape(%295, %296, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %299 = %286.5;
  %300 = atan(%287) /* ty=Tensor[(560, 4), float32] */;
  %301 = @func_2015() /* ty=Tensor[(12, 14, 14), float64] */;
  %302 = %288.2;
  %303 = %289.0;
  %304 = left_shift(%297, %298) /* ty=Tensor[(560, 4), uint32] */;
  (%299, meta[relay.Constant][19] /* ty=Tensor[(56), float64] */, meta[relay.Constant][21] /* ty=Tensor[(975), float64] */, %300, %301, %302, %303, %304)
}

def @func_9653() -> Tensor[(12, 14, 14), float64] {
  %305 = @func_2354() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64]) */;
  %305.0
}

def @func_1220() -> (Tensor[(12, 14, 14), float64],) {
  %306 = @func_1105() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %307 = %306.0;
  (%307,)
}

def @func_11089(%var_11070: Tensor[(2, 1560), uint16]) -> (Tensor[(2, 28), float64], Tensor[(15, 16, 13), uint16]) {
  %308 = @func_6820() /* ty=(Tensor[(2, 28), float64],) */;
  %309 = cast(%var_11070, dtype="uint16") /* ty=Tensor[(2, 1560), uint16] */;
  %310 = reshape(%309, newshape=[15, 16, 13]) /* ty=Tensor[(15, 16, 13), uint16] */;
  %311 = @func_2724(%310) /* ty=(Tensor[(15, 16, 13), float32], Tensor[(15, 16, 13), float32]) */;
  %312 = %311.0;
  %313 = cast(%var_11070, dtype="uint16") /* ty=Tensor[(2, 1560), uint16] */;
  %314 = shape_of(%312, dtype="int32") /* ty=Tensor[(3), int32] */;
  %315 = cast(%312, dtype="uint16") /* ty=Tensor[(15, 16, 13), uint16] */;
  %316 = dyn.reshape(%313, %314, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %317 = %308.0;
  %318 = minimum(%315, %316) /* ty=Tensor[(15, 16, 13), uint16] */;
  (%317, %318)
}

def @func_6221() -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(560, 4), int64], Tensor[(14, 10, 13), float64]) {
  %319 = @func_3410() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %320 = %319.0;
  %321 = cast(%320, dtype="float64") /* ty=Tensor[(12, 14, 14), float64] */;
  %322 = @func_2241() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %323 = @func_5888() /* ty=(Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), bool], Tensor[(560, 4), int64]) */;
  %324 = @func_4621() /* ty=(Tensor[(14, 10, 13), float64], Tensor[(560, 4), int64], Tensor[(1, 300), float64], Tensor[(504), float64], Tensor[(12, 14, 14), float64]) */;
  %325 = tan(%321) /* ty=Tensor[(12, 14, 14), float64] */;
  %326 = %322.0;
  %327 = %323.3;
  %328 = %324.0;
  (%325, %326, %327, %328)
}

def @func_1581() -> (Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), float64], Tensor[(56), float64], Tensor[(8, 7, 8), float64], Tensor[(560, 4), int64], Tensor[(975), float64]) {
  %329 = @func_1180() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) */;
  %330 = %329.0;
  %331 = cast(%330, dtype="float64") /* ty=Tensor[(12, 14, 14), float64] */;
  %332 = cast(meta[relay.Constant][22] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
  %333 = reshape(%332, newshape=[8, 7, 1]) /* ty=Tensor[(8, 7, 1), float64] */;
  %334 = cast(meta[relay.Constant][22] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
  %335 = cast(meta[relay.Constant][23] /* ty=Tensor[(560, 4), int64] */, dtype="int64") /* ty=Tensor[(560, 4), int64] */;
  %336 = cast(meta[relay.Constant][24] /* ty=Tensor[(975), float64] */, dtype="float64") /* ty=Tensor[(975), float64] */;
  %337 = reshape(%334, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %338 = reshape(%335, newshape=[2240]) /* ty=Tensor[(2240), int64] */;
  %339 = reshape(%336, newshape=[975]) /* ty=Tensor[(975), float64] */;
  %340 = @func_1385(%337, %338, %339) /* ty=(Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), float64], Tensor[(56), float64], Tensor[(8, 7, 8), float64], Tensor[(2240), int64], Tensor[(10, 14, 16), int64], Tensor[(75), float64], Tensor[(975), float64]) */;
  %341 = log10(%331) /* ty=Tensor[(12, 14, 14), float64] */;
  %342 = @func_71(%333) /* ty=Tensor[(8, 7, 8), float64] */;
  %343 = %340.1;
  (%341, %342, meta[relay.Constant][22] /* ty=Tensor[(56), float64] */, %343, meta[relay.Constant][23] /* ty=Tensor[(560, 4), int64] */, meta[relay.Constant][24] /* ty=Tensor[(975), float64] */)
}

def @func_3658(%var_3653: Tensor[(1, 8, 3), float32]) -> Tensor[(1, 8, 3), float32] {
  %344 = cast(%var_3653, dtype="float32") /* ty=Tensor[(1, 8, 3), float32] */;
  asinh(%344) /* ty=Tensor[(1, 8, 3), float32] */
}

def @func_4621() -> (Tensor[(14, 10, 13), float64], Tensor[(560, 4), int64], Tensor[(1, 300), float64], Tensor[(504), float64], Tensor[(12, 14, 14), float64]) {
  %345 = cast(meta[relay.Constant][25] /* ty=Tensor[(14, 10, 13), float64] */, dtype="float64") /* ty=Tensor[(14, 10, 13), float64] */;
  %346 = sigmoid(%345) /* ty=Tensor[(14, 10, 13), float64] */;
  %347 = cast(%346, dtype="float64") /* ty=Tensor[(14, 10, 13), float64] */;
  %348 = @func_2108() /* ty=(Tensor[(560, 4), int64],) */;
  %349 = cast(meta[relay.Constant][26] /* ty=Tensor[(504), float64] */, dtype="float64") /* ty=Tensor[(504), float64] */;
  %350 = reshape(%349, newshape=[504]) /* ty=Tensor[(504), float64] */;
  %351 = @func_1786(%350) /* ty=(Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), float64], Tensor[(1, 300), float64], Tensor[(56), float64], Tensor[(504), float64]) */;
  %352 = @func_1105() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %353 = cos(%347) /* ty=Tensor[(14, 10, 13), float64] */;
  %354 = %348.0;
  %355 = %351.2;
  %356 = %352.0;
  (%353, %354, %355, meta[relay.Constant][26] /* ty=Tensor[(504), float64] */, %356)
}

def @func_3757() -> (Tensor[(12, 14, 14), int64],) {
  %357 = @func_3000() /* ty=(Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), int64]) */;
  %358 = %357.1;
  (%358,)
}

def @func_6940(%var_6930: Tensor[(540), float64]) -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), int64], Tensor[(2, 28), float32], Tensor[(6, 6, 15), bool], Tensor[(540), float64]) {
  %359 = @func_4333() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %360 = @func_3757() /* ty=(Tensor[(12, 14, 14), int64],) */;
  %361 = @func_4825() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64]) */;
  %362 = %361.1;
  %363 = cast(%362, dtype="float64") /* ty=Tensor[(12, 14, 14), float64] */;
  %364 = reshape(%363, newshape=[12, 14, 14]) /* ty=Tensor[(12, 14, 14), float64] */;
  %365 = @func_1469(%364) /* ty=(Tensor[(12, 14, 14), int64],) */;
  %366 = cast(%var_6930, dtype="float64") /* ty=Tensor[(540), float64] */;
  %367 = reshape(%366, newshape=[6, 6, 15]) /* ty=Tensor[(6, 6, 15), float64] */;
  %368 = @func_5272(%367) /* ty=(Tensor[(12, 14, 14), float64], Tensor[(6, 6, 15), bool]) */;
  %369 = %359.0;
  %370 = %360.0;
  %371 = %365.0;
  %372 = @func_5593() /* ty=Tensor[(2, 28), float32] */;
  %373 = %368.1;
  (%369, %370, %362, %371, %372, %373, %var_6930)
}

def @func_6526() -> (Tensor[(12, 14, 14), int64],) {
  %374 = @func_3757() /* ty=(Tensor[(12, 14, 14), int64],) */;
  %375 = %374.0;
  (%375,)
}

def @func_8920(%var_8908: float64, %var_8915: Tensor[(11, 1, 8), float64]) -> (Tensor[(11, ?, 8), bool],) {
  %376 = cast(%var_8908, dtype="float64") /* ty=float64 */;
  %377 = cast(meta[relay.Constant][27] /* ty=Tensor[(11, 1, 8), float64] */, dtype="float64") /* ty=Tensor[(11, 1, 8), float64] */;
  %378 = minimum(%376, %377) /* ty=Tensor[(11, 1, 8), float64] */;
  %379 = cast(%var_8915, dtype="bool") /* ty=Tensor[(11, 1, 8), bool] */;
  %380 = shape_of(%378, dtype="int32") /* ty=Tensor[(3), int32] */;
  %381 = cast(%378, dtype="bool") /* ty=Tensor[(11, 1, 8), bool] */;
  %382 = dyn.reshape(%379, %380, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %383 = less_equal(%381, %382) /* ty=Tensor[(11, ?, 8), bool] */;
  (%383,)
}

def @func_4483() -> Tensor[(12, 14, 14), float64] {
  %384 = @func_3246() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) */;
  %384.1
}

def @func_2137(%var_2129: Tensor[(12, 14, 14), float64]) -> Tensor[(12, 14, 14), bool] {
  %385 = @func_1105() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %386 = %385.0;
  %387 = cast(%var_2129, dtype="bool") /* ty=Tensor[(12, 14, 14), bool] */;
  %388 = shape_of(%386, dtype="int32") /* ty=Tensor[(3), int32] */;
  %389 = cast(%386, dtype="bool") /* ty=Tensor[(12, 14, 14), bool] */;
  %390 = dyn.reshape(%387, %388, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%389, %390) /* ty=Tensor[(12, 14, 14), bool] */
}

def @func_4356() -> Tensor[(12, 14, 14), int64] {
  %391 = @func_3757() /* ty=(Tensor[(12, 14, 14), int64],) */;
  %391.0
}

def @func_9259() -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) {
  %392 = @func_6304() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %393 = %392.0;
  %394 = @func_4483() /* ty=Tensor[(12, 14, 14), float64] */;
  (%393, %394)
}

def @func_8048(%var_8044: Tensor[(448), float64]) -> (Tensor[(12, 14, 14), bool], Tensor[(2240), int64], Tensor[(75), float64], Tensor[(975), float64], Tensor[(8, 7, 8), bool], Tensor[(448), float64]) {
  %395 = @func_5767() /* ty=(Tensor[(12, 14, 14), bool], Tensor[(12, 14, 14), float64], Tensor[(560, 4), int64], Tensor[(2, 28), float64]) */;
  %396 = cast(meta[relay.Constant][28] /* ty=Tensor[(75), float64] */, dtype="float64") /* ty=Tensor[(75), float64] */;
  %397 = cast(meta[relay.Constant][29] /* ty=Tensor[(975), float64] */, dtype="float64") /* ty=Tensor[(975), float64] */;
  %398 = reshape(%396, newshape=[15, 1, 5]) /* ty=Tensor[(15, 1, 5), float64] */;
  %399 = reshape(%397, newshape=[15, 13, 5]) /* ty=Tensor[(15, 13, 5), float64] */;
  %400 = @func_801(%398, %399) /* ty=(Tensor[(15, 13, 5), float64], Tensor[(10, 14, 16), int64], Tensor[(2240), int64], Tensor[(10, 14, 16), int64]) */;
  %401 = cast(%var_8044, dtype="float64") /* ty=Tensor[(448), float64] */;
  %402 = reshape(%401, newshape=[8, 7, 8]) /* ty=Tensor[(8, 7, 8), float64] */;
  %403 = @func_3520(%402) /* ty=(Tensor[(8, 7, 8), bool], Tensor[(8, 7, 8), float64], Tensor[(12, 14, 14), bool], Tensor[(12, 14, 14), float64]) */;
  %404 = %395.0;
  %405 = %400.2;
  %406 = %403.0;
  (%404, %405, meta[relay.Constant][28] /* ty=Tensor[(75), float64] */, meta[relay.Constant][29] /* ty=Tensor[(975), float64] */, %406, %var_8044)
}

def @func_10582() -> Tensor[(12, 14, 14), int64] {
  @func_10032() /* ty=Tensor[(12, 14, 14), int64] */
}

def @func_6702(%var_6667: Tensor[(8, 14, 16), int64], %var_6675: Tensor[(8, 14, 16), int64]) -> (Tensor[(8, 14, 16), int64], Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), bool]) {
  %407 = cast(8 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %408 = cast(%var_6667, dtype="int64") /* ty=Tensor[(8, 14, 16), int64] */;
  %409 = bitwise_or(%407, %408) /* ty=Tensor[(8, 14, 16), int64] */;
  %410 = cast(%var_6675, dtype="int64") /* ty=Tensor[(8, 14, 16), int64] */;
  %411 = shape_of(%409, dtype="int32") /* ty=Tensor[(3), int32] */;
  %412 = cast(%409, dtype="int64") /* ty=Tensor[(8, 14, 16), int64] */;
  %413 = dyn.reshape(%410, %411, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %414 = @func_4802() /* ty=(Tensor[(12, 14, 14), int64], Tensor[(13, 7, 7), int8], Tensor[(637), int8]) */;
  %415 = %414.0;
  %416 = cast(%415, dtype="float64") /* ty=Tensor[(12, 14, 14), float64] */;
  %417 = reshape(%416, newshape=[12, 14, 14]) /* ty=Tensor[(12, 14, 14), float64] */;
  %418 = right_shift(%412, %413) /* ty=Tensor[(8, 14, 16), int64] */;
  %419 = @func_2137(%417) /* ty=Tensor[(12, 14, 14), bool] */;
  (%418, %415, %419)
}

def @func_9336(%var_9328: Tensor[(2, 28), bool]) -> (Tensor[(560, 4), int64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(2240), int64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64], Tensor[(2, 28), bool]) {
  %420 = @func_2108() /* ty=(Tensor[(560, 4), int64],) */;
  %421 = @func_1105() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %422 = @func_1978() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(56), float64], Tensor[(2, 28), float64], Tensor[(2240), int64], Tensor[(65, 15), float64]) */;
  %423 = @func_6304() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %424 = %421.0;
  %425 = cast(%424, dtype="float64") /* ty=Tensor[(12, 14, 14), float64] */;
  %426 = reshape(%425, newshape=[2352]) /* ty=Tensor[(2352), float64] */;
  %427 = @func_5243(%426) /* ty=(Tensor[(56), float64], Tensor[(12, 14, 14), int64], Tensor[(2352), float64]) */;
  %428 = @func_3894() /* ty=(Tensor[(2, 28), bool],) */;
  %429 = %428.0;
  %430 = cast(%var_9328, dtype="bool") /* ty=Tensor[(2, 28), bool] */;
  %431 = shape_of(%429, dtype="int32") /* ty=Tensor[(2), int32] */;
  %432 = cast(%429, dtype="bool") /* ty=Tensor[(2, 28), bool] */;
  %433 = dyn.reshape(%430, %431, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %434 = %420.0;
  %435 = @func_4370() /* ty=Tensor[(12, 14, 14), float64] */;
  %436 = %422.3;
  %437 = %423.0;
  %438 = %427.1;
  %439 = greater_equal(%432, %433) /* ty=Tensor[(2, 28), bool] */;
  (%434, %435, %424, %436, %437, %438, %439)
}

def @func_4370() -> Tensor[(12, 14, 14), float64] {
  %440 = @func_2649() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) */;
  %440.1
}

def @func_7762(%var_7739: Tensor[(14, 4), float64]) -> (Tensor[(12, 14, 14), float64], Tensor[(8, ?, 7), uint16], Tensor[(14, 4), float64]) {
  %441 = cast(%var_7739, dtype="float64") /* ty=Tensor[(14, 4), float64] */;
  %442 = reshape(%441, newshape=[8, 1, 7]) /* ty=Tensor[(8, 1, 7), float64] */;
  %443 = @func_6774(%442) /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), float64], Tensor[(8, ?, 7), uint16]) */;
  %444 = @func_3625() /* ty=Tensor[(12, 14, 14), float64] */;
  %445 = %443.3;
  (%444, %445, %var_7739)
}

def @func_10649() -> (Tensor[(12, 14, 14), float64], Tensor[(75), float64], Tensor[(975), int16], Tensor[(975), float64], Tensor[(8, 7, 8), float64], Tensor[(975), int16], Tensor[(12, 14, 14), float64], Tensor[(2, 28), float32]) {
  %446 = @func_6038() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(2, 28), float32]) */;
  %447 = cast(meta[relay.Constant][30] /* ty=Tensor[(75), float64] */, dtype="float64") /* ty=Tensor[(75), float64] */;
  %448 = cast(meta[relay.Constant][31] /* ty=Tensor[(975), float64] */, dtype="float64") /* ty=Tensor[(975), float64] */;
  %449 = cast(meta[relay.Constant][31] /* ty=Tensor[(975), float64] */, dtype="float64") /* ty=Tensor[(975), float64] */;
  %450 = reshape(%447, newshape=[75]) /* ty=Tensor[(75), float64] */;
  %451 = reshape(%448, newshape=[975]) /* ty=Tensor[(975), float64] */;
  %452 = reshape(%449, newshape=[975]) /* ty=Tensor[(975), float64] */;
  %453 = @func_6285(%450, %451, %452) /* ty=(Tensor[(12, 14, 14), float64], Tensor[(10, 14, 16), int64], Tensor[(75), float64], Tensor[(975), bool]) */;
  %454 = %453.3;
  %455 = cast(meta[relay.Constant][31] /* ty=Tensor[(975), float64] */, dtype="int16") /* ty=Tensor[(975), int16] */;
  %456 = shape_of(%454, dtype="int32") /* ty=Tensor[(1), int32] */;
  %457 = cast(%454, dtype="int16") /* ty=Tensor[(975), int16] */;
  %458 = dyn.reshape(%455, %456, newshape=[]) /* ty=Tensor[(?), int16] */;
  %459 = @func_1581() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), float64], Tensor[(56), float64], Tensor[(8, 7, 8), float64], Tensor[(560, 4), int64], Tensor[(975), float64]) */;
  %460 = @func_3617() /* ty=(Tensor[(56), float64], Tensor[(8, 7, 8), float64], Tensor[(300), float64], Tensor[(12, 14, 14), bool], Tensor[(13, 7, 7), int8], Tensor[(1, 637), float64], Tensor[(65, 15), float64]) */;
  %461 = cast(meta[relay.Constant][31] /* ty=Tensor[(975), float64] */, dtype="int16") /* ty=Tensor[(975), int16] */;
  %462 = shape_of(%454, dtype="int32") /* ty=Tensor[(1), int32] */;
  %463 = cast(%454, dtype="int16") /* ty=Tensor[(975), int16] */;
  %464 = dyn.reshape(%461, %462, newshape=[]) /* ty=Tensor[(?), int16] */;
  %465 = @func_4825() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64]) */;
  %466 = %446.0;
  %467 = subtract(%457, %458) /* ty=Tensor[(975), int16] */;
  %468 = %459.5;
  %469 = %460.1;
  %470 = logical_xor(%463, %464) /* ty=Tensor[(975), int16] */;
  %471 = %465.0;
  %472 = @func_10329() /* ty=Tensor[(2, 28), float32] */;
  (%466, meta[relay.Constant][30] /* ty=Tensor[(75), float64] */, %467, %468, %469, %470, %471, %472)
}

def @func_2446() -> (Tensor[(2, 28), bool], Tensor[(2, 28), float64], Tensor[(2, 28), int16]) {
  %473 = @func_2199() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(2, 28), float32]) */;
  %474 = %473.1;
  %475 = cast(%474, dtype="float32") /* ty=Tensor[(2, 28), float32] */;
  %476 = sinh(%475) /* ty=Tensor[(2, 28), float32] */;
  %477 = cast(%474, dtype="bool") /* ty=Tensor[(2, 28), bool] */;
  %478 = shape_of(%476, dtype="int32") /* ty=Tensor[(2), int32] */;
  %479 = cast(%476, dtype="bool") /* ty=Tensor[(2, 28), bool] */;
  %480 = dyn.reshape(%477, %478, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %481 = cast(%476, dtype="float64") /* ty=Tensor[(2, 28), float64] */;
  %482 = cast(meta[relay.Constant][32] /* ty=Tensor[(2, 28), float32] */, dtype="int16") /* ty=Tensor[(2, 28), int16] */;
  %483 = shape_of(%474, dtype="int32") /* ty=Tensor[(2), int32] */;
  %484 = cast(%474, dtype="int16") /* ty=Tensor[(2, 28), int16] */;
  %485 = dyn.reshape(%482, %483, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %486 = greater(%479, %480) /* ty=Tensor[(2, 28), bool] */;
  %487 = asinh(%481) /* ty=Tensor[(2, 28), float64] */;
  %488 = logical_xor(%484, %485) /* ty=Tensor[(2, 28), int16] */;
  (%486, %487, %488)
}

def @func_11138(%var_11136: Tensor[(2240), float64]) -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(2240), float64]) {
  %489 = @func_1220() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %490 = cast(%var_11136, dtype="float64") /* ty=Tensor[(2240), float64] */;
  %491 = reshape(%490, newshape=[2240]) /* ty=Tensor[(2240), float64] */;
  %492 = @func_8088(%491) /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(2240), float64]) */;
  %493 = %489.0;
  %494 = %492.0;
  (%493, %494, %var_11136)
}

def @func_10784() -> Tensor[(12, 14, 14), float64] {
  %495 = @func_6304() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %495.0
}

def @func_416(%var_381: Tensor[(10, 14, 16), int64], %var_382: Tensor[(10, 14, 16), int64]) -> (Tensor[(10, 14, 16), int64], Tensor[(8, 7, 8), float64], Tensor[(56), float64]) {
  %496 = cast(%var_382, dtype="int64") /* ty=Tensor[(10, 14, 16), int64] */;
  %497 = shape_of(%var_381, dtype="int32") /* ty=Tensor[(3), int32] */;
  %498 = cast(%var_381, dtype="int64") /* ty=Tensor[(10, 14, 16), int64] */;
  %499 = dyn.reshape(%496, %497, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %500 = cast(meta[relay.Constant][33] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
  %501 = reshape(%500, newshape=[8, 7, 1]) /* ty=Tensor[(8, 7, 1), float64] */;
  %502 = add(%498, %499) /* ty=Tensor[(10, 14, 16), int64] */;
  %503 = @func_71(%501) /* ty=Tensor[(8, 7, 8), float64] */;
  (%502, %503, meta[relay.Constant][33] /* ty=Tensor[(56), float64] */)
}

def @func_7080() -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) {
  %504 = @func_5767() /* ty=(Tensor[(12, 14, 14), bool], Tensor[(12, 14, 14), float64], Tensor[(560, 4), int64], Tensor[(2, 28), float64]) */;
  %505 = %504.1;
  %506 = @func_3954() /* ty=Tensor[(12, 14, 14), float64] */;
  (%505, %506)
}

def @func_2528() -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), bool]) {
  %507 = @func_2199() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(2, 28), float32]) */;
  %508 = %507.0;
  %509 = cast(%508, dtype="float64") /* ty=Tensor[(12, 14, 14), float64] */;
  %510 = reshape(%509, newshape=[12, 14, 14]) /* ty=Tensor[(12, 14, 14), float64] */;
  %511 = @func_2137(%510) /* ty=Tensor[(12, 14, 14), bool] */;
  (%508, %511)
}

def @func_9424() -> Tensor[(12, 14, 14), float64] {
  %512 = @func_1220() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %512.0
}

def @func_1385(%var_1341: Tensor[(56), float64], %var_1346: Tensor[(2240), int64], %var_1375: Tensor[(975), float64]) -> (Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), float64], Tensor[(56), float64], Tensor[(8, 7, 8), float64], Tensor[(2240), int64], Tensor[(10, 14, 16), int64], Tensor[(75), float64], Tensor[(975), float64]) {
  %513 = @func_1105() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %514 = cast(%var_1341, dtype="float64") /* ty=Tensor[(56), float64] */;
  %515 = reshape(%514, newshape=[8, 7, 1]) /* ty=Tensor[(8, 7, 1), float64] */;
  %516 = cast(%var_1346, dtype="int64") /* ty=Tensor[(2240), int64] */;
  %517 = cast(%var_1346, dtype="int64") /* ty=Tensor[(2240), int64] */;
  %518 = reshape(%516, newshape=[10, 14, 16]) /* ty=Tensor[(10, 14, 16), int64] */;
  %519 = reshape(%517, newshape=[10, 14, 16]) /* ty=Tensor[(10, 14, 16), int64] */;
  %520 = @func_416(%518, %519) /* ty=(Tensor[(10, 14, 16), int64], Tensor[(8, 7, 8), float64], Tensor[(56), float64]) */;
  %521 = cast(meta[relay.Constant][34] /* ty=Tensor[(75), float64] */, dtype="float64") /* ty=Tensor[(75), float64] */;
  %522 = cast(%var_1375, dtype="float64") /* ty=Tensor[(975), float64] */;
  %523 = reshape(%521, newshape=[15, 1, 5]) /* ty=Tensor[(15, 1, 5), float64] */;
  %524 = reshape(%522, newshape=[15, 13, 5]) /* ty=Tensor[(15, 13, 5), float64] */;
  %525 = @func_801(%523, %524) /* ty=(Tensor[(15, 13, 5), float64], Tensor[(10, 14, 16), int64], Tensor[(2240), int64], Tensor[(10, 14, 16), int64]) */;
  %526 = %513.0;
  %527 = @func_71(%515) /* ty=Tensor[(8, 7, 8), float64] */;
  %528 = %520.1;
  %529 = %525.3;
  (%526, %527, %var_1341, %528, %var_1346, %529, meta[relay.Constant][34] /* ty=Tensor[(75), float64] */, %var_1375)
}

def @func_8362() -> (Tensor[(12, 14, 14), float64], Tensor[(65, 15), float64], Tensor[(2, 28), int16], Tensor[(2, 28), float32]) {
  %530 = @func_5091() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) */;
  %531 = @func_2446() /* ty=(Tensor[(2, 28), bool], Tensor[(2, 28), float64], Tensor[(2, 28), int16]) */;
  %532 = %530.1;
  %533 = @func_2088() /* ty=Tensor[(65, 15), float64] */;
  %534 = %531.2;
  %535 = @func_5593() /* ty=Tensor[(2, 28), float32] */;
  (%532, %533, %534, %535)
}

def @func_3099() -> (Tensor[(12, 14, 14), float64], Tensor[(300), float64], Tensor[(5, 60), float64], Tensor[(12, 14, 14), float64]) {
  %536 = @func_1105() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %537 = cast(meta[relay.Constant][35] /* ty=Tensor[(5, 60), float64] */, dtype="float64") /* ty=Tensor[(5, 60), float64] */;
  %538 = reshape(%537, newshape=[300]) /* ty=Tensor[(300), float64] */;
  %539 = @func_2876(%538) /* ty=(Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), float64], Tensor[(300), float64], Tensor[(56), float64], Tensor[(6, 84), float64]) */;
  %540 = @func_1105() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %541 = %536.0;
  %542 = %539.2;
  %543 = %540.0;
  (%541, %542, meta[relay.Constant][35] /* ty=Tensor[(5, 60), float64] */, %543)
}

def @func_10696(%var_10675: Tensor[(13, 4, 2), uint16]) -> (Tensor[(13, 4, 2), bool], Tensor[(12, 14, 14), int64]) {
  %544 = cast(%var_10675, dtype="bool") /* ty=Tensor[(13, 4, 2), bool] */;
  %545 = shape_of(meta[relay.Constant][36] /* ty=Tensor[(13, 4, 2), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %546 = cast(meta[relay.Constant][36] /* ty=Tensor[(13, 4, 2), uint16] */, dtype="bool") /* ty=Tensor[(13, 4, 2), bool] */;
  %547 = dyn.reshape(%544, %545, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %548 = @func_5647() /* ty=(Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), float64]) */;
  %549 = greater(%546, %547) /* ty=Tensor[(13, 4, 2), bool] */;
  %550 = %548.0;
  (%549, %550)
}

def @func_3520(%var_3474: Tensor[(8, 7, 8), float64]) -> (Tensor[(8, 7, 8), bool], Tensor[(8, 7, 8), float64], Tensor[(12, 14, 14), bool], Tensor[(12, 14, 14), float64]) {
  %551 = @func_1581() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), float64], Tensor[(56), float64], Tensor[(8, 7, 8), float64], Tensor[(560, 4), int64], Tensor[(975), float64]) */;
  %552 = %551.1;
  %553 = cast(%var_3474, dtype="bool") /* ty=Tensor[(8, 7, 8), bool] */;
  %554 = shape_of(%552, dtype="int32") /* ty=Tensor[(3), int32] */;
  %555 = cast(%552, dtype="bool") /* ty=Tensor[(8, 7, 8), bool] */;
  %556 = dyn.reshape(%553, %554, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %557 = cast(%var_3474, dtype="float64") /* ty=Tensor[(8, 7, 8), float64] */;
  %558 = @func_1105() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %559 = %558.0;
  %560 = cast(%559, dtype="float64") /* ty=Tensor[(12, 14, 14), float64] */;
  %561 = reshape(%560, newshape=[12, 14, 14]) /* ty=Tensor[(12, 14, 14), float64] */;
  %562 = @func_2137(%561) /* ty=Tensor[(12, 14, 14), bool] */;
  %563 = cast(%562, dtype="bool") /* ty=Tensor[(12, 14, 14), bool] */;
  %564 = shape_of(%559, dtype="int32") /* ty=Tensor[(3), int32] */;
  %565 = cast(%559, dtype="bool") /* ty=Tensor[(12, 14, 14), bool] */;
  %566 = dyn.reshape(%563, %564, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %567 = @func_1843() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(56), float64]) */;
  %568 = logical_or(%555, %556) /* ty=Tensor[(8, 7, 8), bool] */;
  %569 = sinh(%557) /* ty=Tensor[(8, 7, 8), float64] */;
  %570 = logical_or(%565, %566) /* ty=Tensor[(12, 14, 14), bool] */;
  %571 = %567.0;
  (%568, %569, %570, %571)
}

def @func_3625() -> Tensor[(12, 14, 14), float64] {
  @func_2495() /* ty=Tensor[(12, 14, 14), float64] */
}

def @func_7774() -> (Tensor[(560, 4), float64], Tensor[(12, 5, 11), float64]) {
  %572 = @func_7357() /* ty=(Tensor[(560, 4), int64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), bool], Tensor[(12, 14, 14), float64], Tensor[(140, 16), int64], Tensor[(12, 5, 11), float64], Tensor[(660), float64]) */;
  %573 = @func_4728() /* ty=Tensor[(560, 4), float64] */;
  %574 = %572.5;
  (%573, %574)
}

def @func_2495() -> Tensor[(12, 14, 14), float64] {
  %575 = @func_1627() /* ty=(Tensor[(12, 14, 14), bool], Tensor[(8, 7, 8), float64], Tensor[(12, 14, 14), float64]) */;
  %575.2
}

def @func_6053() -> (Tensor[(12, 14, 14), float64],) {
  %576 = @func_1978() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(56), float64], Tensor[(2, 28), float64], Tensor[(2240), int64], Tensor[(65, 15), float64]) */;
  %577 = %576.0;
  (%577,)
}

def @func_6092() -> Tensor[(560, 4), float32] {
  %578 = @func_1727() /* ty=(Tensor[(560, 4), float64],) */;
  %579 = %578.0;
  %580 = cast(%579, dtype="float32") /* ty=Tensor[(560, 4), float32] */;
  rsqrt(%580) /* ty=Tensor[(560, 4), float32] */
}

def @func_9891() -> (Tensor[(2240), int64],) {
  %581 = @func_2146() /* ty=Tensor[(2240), int64] */;
  (%581,)
}

def @func_2108() -> (Tensor[(560, 4), int64],) {
  %582 = @func_1581() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), float64], Tensor[(56), float64], Tensor[(8, 7, 8), float64], Tensor[(560, 4), int64], Tensor[(975), float64]) */;
  %583 = %582.4;
  (%583,)
}

def @func_11309() -> Tensor[(12, 14, 14), float64] {
  @func_2917() /* ty=Tensor[(12, 14, 14), float64] */
}

def @func_9725() -> (Tensor[(300), float64],) {
  %584 = @func_7062() /* ty=Tensor[(300), float64] */;
  (%584,)
}

def @func_7779() -> (Tensor[(560, 4), float32],) {
  %585 = @func_6092() /* ty=Tensor[(560, 4), float32] */;
  (%585,)
}

def @func_6518() -> (Tensor[(12, 14, 14), float64], Tensor[(140, 16), int64], Tensor[(65, 15), float32], Tensor[(2240), int64], Tensor[(56, 1), float64]) {
  %586 = @func_3982() /* ty=(Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), float64]) */;
  %587 = @func_6429() /* ty=(Tensor[(140, 16), int64],) */;
  %588 = @func_2088() /* ty=Tensor[(65, 15), float64] */;
  %589 = cast(%588, dtype="float32") /* ty=Tensor[(65, 15), float32] */;
  %590 = cast(meta[relay.Constant][37] /* ty=Tensor[(56, 1), float64] */, dtype="float64") /* ty=Tensor[(56, 1), float64] */;
  %591 = reshape(%590, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %592 = @func_2294(%591) /* ty=(Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), float64], Tensor[(56), float64], Tensor[(2240), int64], Tensor[(1, 975), float64]) */;
  %593 = %586.1;
  %594 = %587.0;
  %595 = acos(%589) /* ty=Tensor[(65, 15), float32] */;
  %596 = %592.3;
  (%593, %594, %595, %596, meta[relay.Constant][37] /* ty=Tensor[(56, 1), float64] */)
}

def @func_8681(%var_8645: Tensor[(14, 8, 3), float32]) -> (Tensor[(14, 8, 3), int16], Tensor[(560, 4), float32]) {
  %597 = cast(%var_8645, dtype="float32") /* ty=Tensor[(14, 8, 3), float32] */;
  %598 = cosh(%597) /* ty=Tensor[(14, 8, 3), float32] */;
  %599 = cast(%598, dtype="float64") /* ty=Tensor[(14, 8, 3), float64] */;
  %600 = atan(%599) /* ty=Tensor[(14, 8, 3), float64] */;
  %601 = cast(%598, dtype="int16") /* ty=Tensor[(14, 8, 3), int16] */;
  %602 = shape_of(%600, dtype="int32") /* ty=Tensor[(3), int32] */;
  %603 = cast(%600, dtype="int16") /* ty=Tensor[(14, 8, 3), int16] */;
  %604 = dyn.reshape(%601, %602, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %605 = bitwise_and(%603, %604) /* ty=Tensor[(14, 8, 3), int16] */;
  %606 = @func_7099() /* ty=Tensor[(560, 4), float32] */;
  (%605, %606)
}

def @func_574(%var_522: Tensor[(6, 10, 5), float64], %var_526: Tensor[(56, 1), float64], %var_528: Tensor[(56, 9), float64]) -> (Tensor[(8, 7, 8), float64], Tensor[(56, 9), uint32], Tensor[(8, 7, 8), float64], Tensor[(6, 10, 5), bool], Tensor[(6, 10, 5), float64]) {
  %607 = cast(%var_526, dtype="float64") /* ty=Tensor[(56, 1), float64] */;
  %608 = reshape(%607, newshape=[8, 7, 1]) /* ty=Tensor[(8, 7, 1), float64] */;
  %609 = cast(%var_526, dtype="uint32") /* ty=Tensor[(56, 1), uint32] */;
  %610 = cast(%var_528, dtype="uint32") /* ty=Tensor[(56, 9), uint32] */;
  %611 = cast(%var_526, dtype="float64") /* ty=Tensor[(56, 1), float64] */;
  %612 = reshape(%611, newshape=[8, 7, 1]) /* ty=Tensor[(8, 7, 1), float64] */;
  %613 = cast(%var_522, dtype="float64") /* ty=Tensor[(6, 10, 5), float64] */;
  %614 = sin(%613) /* ty=Tensor[(6, 10, 5), float64] */;
  %615 = cast(%var_522, dtype="float32") /* ty=Tensor[(6, 10, 5), float32] */;
  %616 = shape_of(%614, dtype="int32") /* ty=Tensor[(3), int32] */;
  %617 = cast(%614, dtype="float32") /* ty=Tensor[(6, 10, 5), float32] */;
  %618 = dyn.reshape(%615, %616, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %619 = power(%617, %618) /* ty=Tensor[(6, 10, 5), float32] */;
  %620 = cast(%619, dtype="bool") /* ty=Tensor[(6, 10, 5), bool] */;
  %621 = shape_of(%614, dtype="int32") /* ty=Tensor[(3), int32] */;
  %622 = cast(%614, dtype="bool") /* ty=Tensor[(6, 10, 5), bool] */;
  %623 = dyn.reshape(%620, %621, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %624 = cast(%619, dtype="float64") /* ty=Tensor[(6, 10, 5), float64] */;
  %625 = @func_71(%608) /* ty=Tensor[(8, 7, 8), float64] */;
  %626 = bitwise_xor(%609, %610) /* ty=Tensor[(56, 9), uint32] */;
  %627 = @func_71(%612) /* ty=Tensor[(8, 7, 8), float64] */;
  %628 = logical_and(%622, %623) /* ty=Tensor[(6, 10, 5), bool] */;
  %629 = asin(%624) /* ty=Tensor[(6, 10, 5), float64] */;
  (%625, %626, %627, %628, %629)
}

def @func_3400() -> Tensor[(2, 28), bool] {
  %630 = @func_2446() /* ty=(Tensor[(2, 28), bool], Tensor[(2, 28), float64], Tensor[(2, 28), int16]) */;
  %630.0
}

def @func_9210() -> (Tensor[(12, 14, 14), float64],) {
  %631 = @func_1220() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %632 = %631.0;
  (%632,)
}

def @func_1843() -> (Tensor[(12, 14, 14), float64], Tensor[(56), float64]) {
  %633 = @func_1627() /* ty=(Tensor[(12, 14, 14), bool], Tensor[(8, 7, 8), float64], Tensor[(12, 14, 14), float64]) */;
  %634 = @func_1581() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), float64], Tensor[(56), float64], Tensor[(8, 7, 8), float64], Tensor[(560, 4), int64], Tensor[(975), float64]) */;
  %635 = %633.2;
  %636 = %634.2;
  (%635, %636)
}

def @func_10814(%var_10799: Tensor[(56, 1), float64]) -> (Tensor[(12, 14, 14), float64], Tensor[(2, 28), int8], Tensor[(56, 1), float64], Tensor[(12, 14, 14), float64], Tensor[(140, 16), uint16]) {
  %637 = @func_4232() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %638 = cast(%var_10799, dtype="float64") /* ty=Tensor[(56, 1), float64] */;
  %639 = reshape(%638, newshape=[2, 28]) /* ty=Tensor[(2, 28), float64] */;
  %640 = @func_8585(%639) /* ty=(Tensor[(504), float64], Tensor[(2, 28), int8]) */;
  %641 = @func_9210() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %642 = @func_7357() /* ty=(Tensor[(560, 4), int64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), bool], Tensor[(12, 14, 14), float64], Tensor[(140, 16), int64], Tensor[(12, 5, 11), float64], Tensor[(660), float64]) */;
  %643 = %642.4;
  %644 = cast(meta[relay.Constant][38] /* ty=Tensor[(140, 16), int64] */, dtype="uint16") /* ty=Tensor[(140, 16), uint16] */;
  %645 = shape_of(%643, dtype="int32") /* ty=Tensor[(2), int32] */;
  %646 = cast(%643, dtype="uint16") /* ty=Tensor[(140, 16), uint16] */;
  %647 = dyn.reshape(%644, %645, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %648 = %637.0;
  %649 = %640.1;
  %650 = %641.0;
  %651 = left_shift(%646, %647) /* ty=Tensor[(140, 16), uint16] */;
  (%648, %649, %var_10799, %650, %651)
}

def @func_4505() -> (Tensor[(12, 14, 14), float64], Tensor[(560, 4), bool], Tensor[(2240), float64]) {
  %652 = @func_4333() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %653 = cast(meta[relay.Constant][39] /* ty=Tensor[(2240), float64] */, dtype="float64") /* ty=Tensor[(2240), float64] */;
  %654 = reshape(%653, newshape=[560, 4]) /* ty=Tensor[(560, 4), float64] */;
  %655 = @func_3137(%654) /* ty=(Tensor[(65, 15), float64], Tensor[(560, 4), bool]) */;
  %656 = %652.0;
  %657 = %655.1;
  (%656, %657, meta[relay.Constant][39] /* ty=Tensor[(2240), float64] */)
}

def @func_9018() -> (Tensor[(2, 28), uint8],) {
  %658 = @func_5044() /* ty=(Tensor[(2, 28), uint8],) */;
  %659 = %658.0;
  (%659,)
}

def @func_71(%var_46: Tensor[(8, 7, 1), float64]) -> Tensor[(8, 7, 8), float64] {
  %660 = cast(%var_46, dtype="float64") /* ty=Tensor[(8, 7, 1), float64] */;
  %661 = cast(meta[relay.Constant][40] /* ty=Tensor[(8, 7, 8), float64] */, dtype="float64") /* ty=Tensor[(8, 7, 8), float64] */;
  power(%660, %661) /* ty=Tensor[(8, 7, 8), float64] */
}

def @func_5044() -> (Tensor[(2, 28), uint8],) {
  %662 = @func_2199() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(2, 28), float32]) */;
  %663 = %662.1;
  %664 = cast(%663, dtype="float64") /* ty=Tensor[(2, 28), float64] */;
  %665 = sqrt(%664) /* ty=Tensor[(2, 28), float64] */;
  %666 = cast(%665, dtype="uint16") /* ty=Tensor[(2, 28), uint16] */;
  %667 = shape_of(%663, dtype="int32") /* ty=Tensor[(2), int32] */;
  %668 = cast(%663, dtype="uint16") /* ty=Tensor[(2, 28), uint16] */;
  %669 = dyn.reshape(%666, %667, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %670 = minimum(%668, %669) /* ty=Tensor[(2, 28), uint16] */;
  %671 = cast(%670, dtype="uint8") /* ty=Tensor[(2, 28), uint8] */;
  %672 = shape_of(%663, dtype="int32") /* ty=Tensor[(2), int32] */;
  %673 = cast(%663, dtype="uint8") /* ty=Tensor[(2, 28), uint8] */;
  %674 = dyn.reshape(%671, %672, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %675 = left_shift(%673, %674) /* ty=Tensor[(2, 28), uint8] */;
  (%675,)
}

def @func_1469(%var_1460: Tensor[(12, 14, 14), float64]) -> (Tensor[(12, 14, 14), int64],) {
  %676 = @func_1180() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) */;
  %677 = %676.1;
  %678 = cast(%var_1460, dtype="int64") /* ty=Tensor[(12, 14, 14), int64] */;
  %679 = shape_of(%677, dtype="int32") /* ty=Tensor[(3), int32] */;
  %680 = cast(%677, dtype="int64") /* ty=Tensor[(12, 14, 14), int64] */;
  %681 = dyn.reshape(%678, %679, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %682 = multiply(%680, %681) /* ty=Tensor[(12, 14, 14), int64] */;
  (%682,)
}

def @func_10918(%var_10910: Tensor[(2, 896), int64]) -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), bool], Tensor[(2, 896), bool], Tensor[(2, 896), float64]) {
  %683 = cast(meta[relay.Constant][41] /* ty=Tensor[(2, 896), int64] */, dtype="int64") /* ty=Tensor[(2, 896), int64] */;
  %684 = cast(meta[relay.Constant][41] /* ty=Tensor[(2, 896), int64] */, dtype="int64") /* ty=Tensor[(2, 896), int64] */;
  %685 = reshape(%683, newshape=[8, 14, 16]) /* ty=Tensor[(8, 14, 16), int64] */;
  %686 = reshape(%684, newshape=[8, 14, 16]) /* ty=Tensor[(8, 14, 16), int64] */;
  %687 = @func_6702(%685, %686) /* ty=(Tensor[(8, 14, 16), int64], Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), bool]) */;
  %688 = cast(%var_10910, dtype="bool") /* ty=Tensor[(2, 896), bool] */;
  %689 = shape_of(meta[relay.Constant][41] /* ty=Tensor[(2, 896), int64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %690 = cast(meta[relay.Constant][41] /* ty=Tensor[(2, 896), int64] */, dtype="bool") /* ty=Tensor[(2, 896), bool] */;
  %691 = dyn.reshape(%688, %689, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %692 = cast(%var_10910, dtype="float64") /* ty=Tensor[(2, 896), float64] */;
  %693 = @func_2483() /* ty=Tensor[(12, 14, 14), float64] */;
  %694 = %687.2;
  %695 = greater_equal(%690, %691) /* ty=Tensor[(2, 896), bool] */;
  %696 = cosh(%692) /* ty=Tensor[(2, 896), float64] */;
  (%693, %694, %695, %696)
}

def @func_5593() -> Tensor[(2, 28), float32] {
  %697 = @func_2199() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(2, 28), float32]) */;
  %697.1
}

def @func_8088(%var_8086: Tensor[(2240), float64]) -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(2240), float64]) {
  %698 = @func_5091() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) */;
  %699 = cast(%var_8086, dtype="float64") /* ty=Tensor[(2240), float64] */;
  %700 = reshape(%699, newshape=[2240]) /* ty=Tensor[(2240), float64] */;
  %701 = @func_7841(%700) /* ty=(Tensor[(12, 14, 14), float64], Tensor[(560, 4), int8]) */;
  %702 = %698.1;
  %703 = %701.0;
  (%702, %703, %var_8086)
}

def @func_6774(%var_6707: Tensor[(8, 1, 7), float64]) -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), float64], Tensor[(8, ?, 7), uint16]) {
  %704 = @func_5091() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) */;
  %705 = @func_5647() /* ty=(Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), float64]) */;
  %706 = @func_1180() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) */;
  %707 = cast(%var_6707, dtype="float64") /* ty=Tensor[(8, 1, 7), float64] */;
  %708 = exp(%707) /* ty=Tensor[(8, 1, 7), float64] */;
  %709 = cast(%708, dtype="int8") /* ty=Tensor[(8, 1, 7), int8] */;
  %710 = shape_of(%var_6707, dtype="int32") /* ty=Tensor[(3), int32] */;
  %711 = cast(%var_6707, dtype="int8") /* ty=Tensor[(8, 1, 7), int8] */;
  %712 = dyn.reshape(%709, %710, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %713 = multiply(%711, %712) /* ty=Tensor[(8, ?, 7), int8] */;
  %714 = cast(%713, dtype="int64") /* ty=Tensor[(8, ?, 7), int64] */;
  %715 = shape_of(%708, dtype="int32") /* ty=Tensor[(3), int32] */;
  %716 = cast(%708, dtype="int64") /* ty=Tensor[(8, 1, 7), int64] */;
  %717 = dyn.reshape(%714, %715, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %718 = add(%716, %717) /* ty=Tensor[(8, ?, 7), int64] */;
  %719 = @func_2446() /* ty=(Tensor[(2, 28), bool], Tensor[(2, 28), float64], Tensor[(2, 28), int16]) */;
  %720 = %719.0;
  %721 = cast(%720, dtype="uint16") /* ty=Tensor[(2, 28), uint16] */;
  %722 = shape_of(%718, dtype="int32") /* ty=Tensor[(3), int32] */;
  %723 = cast(%718, dtype="uint16") /* ty=Tensor[(8, ?, 7), uint16] */;
  %724 = dyn.reshape(%721, %722, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %725 = %704.0;
  %726 = %705.0;
  %727 = %706.0;
  %728 = subtract(%723, %724) /* ty=Tensor[(8, ?, 7), uint16] */;
  (%725, %726, %727, %728)
}

def @func_7262(%var_7198: Tensor[(560, 4), int32]) -> (Tensor[(560, 4), float64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), float64], Tensor[(140, 16), int64], Tensor[(560, 4), float32], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(560, 4), int32], Tensor[(56), float64], Tensor[(12, 14, 14), float64]) {
  %729 = @func_5091() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) */;
  %730 = @func_6429() /* ty=(Tensor[(140, 16), int64],) */;
  %731 = @func_7099() /* ty=Tensor[(560, 4), float32] */;
  %732 = cast(%731, dtype="float64") /* ty=Tensor[(560, 4), float64] */;
  %733 = atanh(%732) /* ty=Tensor[(560, 4), float64] */;
  %734 = cast(meta[relay.Constant][42] /* ty=Tensor[(560, 4), float64] */, dtype="int16") /* ty=Tensor[(560, 4), int16] */;
  %735 = shape_of(%733, dtype="int32") /* ty=Tensor[(2), int32] */;
  %736 = cast(%733, dtype="int16") /* ty=Tensor[(560, 4), int16] */;
  %737 = dyn.reshape(%734, %735, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %738 = minimum(%736, %737) /* ty=Tensor[(560, 4), int16] */;
  %739 = cast(%733, dtype="int32") /* ty=Tensor[(560, 4), int32] */;
  %740 = shape_of(%738, dtype="int32") /* ty=Tensor[(2), int32] */;
  %741 = cast(%738, dtype="int32") /* ty=Tensor[(560, 4), int32] */;
  %742 = dyn.reshape(%739, %740, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %743 = maximum(%741, %742) /* ty=Tensor[(560, 4), int32] */;
  %744 = cast(%var_7198, dtype="bool") /* ty=Tensor[(560, 4), bool] */;
  %745 = shape_of(%743, dtype="int32") /* ty=Tensor[(2), int32] */;
  %746 = cast(%743, dtype="bool") /* ty=Tensor[(560, 4), bool] */;
  %747 = dyn.reshape(%744, %745, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %748 = less_equal(%746, %747) /* ty=Tensor[(560, 4), bool] */;
  %749 = cast(%748, dtype="float32") /* ty=Tensor[(560, 4), float32] */;
  %750 = shape_of(%743, dtype="int32") /* ty=Tensor[(2), int32] */;
  %751 = cast(%743, dtype="float32") /* ty=Tensor[(560, 4), float32] */;
  %752 = dyn.reshape(%749, %750, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %753 = @func_4333() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %754 = @func_1180() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) */;
  %755 = cast(meta[relay.Constant][43] /* ty=Tensor[(560, 4), int16] */, dtype="int32") /* ty=Tensor[(560, 4), int32] */;
  %756 = shape_of(%738, dtype="int32") /* ty=Tensor[(2), int32] */;
  %757 = cast(%738, dtype="int32") /* ty=Tensor[(560, 4), int32] */;
  %758 = dyn.reshape(%755, %756, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %759 = @func_3246() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) */;
  %760 = @func_4728() /* ty=Tensor[(560, 4), float64] */;
  %761 = @func_4370() /* ty=Tensor[(12, 14, 14), float64] */;
  %762 = @func_4356() /* ty=Tensor[(12, 14, 14), int64] */;
  %763 = %729.1;
  %764 = %730.0;
  %765 = divide(%751, %752) /* ty=Tensor[(560, 4), float32] */;
  %766 = %753.0;
  %767 = %754.0;
  %768 = bitwise_and(%757, %758) /* ty=Tensor[(560, 4), int32] */;
  %769 = @func_6864() /* ty=Tensor[(56), float64] */;
  %770 = %759.0;
  (%760, %761, %762, %763, %764, %765, %766, %767, %768, %769, %770)
}

def @func_4198(%var_4184: Tensor[(975), float64]) -> (Tensor[(2, 28), bool], Tensor[(10, 14, 16), int64], Tensor[(75), float64], Tensor[(975), float64], Tensor[(2, 28), bool]) {
  %771 = cast(meta[relay.Constant][44] /* ty=Tensor[(75), float64] */, dtype="float64") /* ty=Tensor[(75), float64] */;
  %772 = cast(%var_4184, dtype="float64") /* ty=Tensor[(975), float64] */;
  %773 = reshape(%771, newshape=[15, 1, 5]) /* ty=Tensor[(15, 1, 5), float64] */;
  %774 = reshape(%772, newshape=[15, 13, 5]) /* ty=Tensor[(15, 13, 5), float64] */;
  %775 = @func_801(%773, %774) /* ty=(Tensor[(15, 13, 5), float64], Tensor[(10, 14, 16), int64], Tensor[(2240), int64], Tensor[(10, 14, 16), int64]) */;
  %776 = @func_3400() /* ty=Tensor[(2, 28), bool] */;
  %777 = %775.3;
  %778 = @func_3400() /* ty=Tensor[(2, 28), bool] */;
  (%776, %777, meta[relay.Constant][44] /* ty=Tensor[(75), float64] */, %var_4184, %778)
}

def @func_4837(%var_4827: Tensor[(3, 3, 12), float64]) -> Tensor[(3, 3, 12), float64] {
  %779 = cast(%var_4827, dtype="float64") /* ty=Tensor[(3, 3, 12), float64] */;
  sigmoid(%779) /* ty=Tensor[(3, 3, 12), float64] */
}

def @func_8319() -> (Tensor[(560, 4), float64],) {
  %780 = @func_7774() /* ty=(Tensor[(560, 4), float64], Tensor[(12, 5, 11), float64]) */;
  %781 = %780.0;
  (%781,)
}

def @func_11345() -> (Tensor[(300), float64], Tensor[(12, 14, 14), float64], Tensor[(14, 4), bool]) {
  %782 = @func_4651() /* ty=(Tensor[(300), float64],) */;
  %783 = cast(meta[relay.Constant][45] /* ty=Tensor[(14, 4), bool] */, dtype="bool") /* ty=Tensor[(14, 4), bool] */;
  %784 = reshape(%783, newshape=[2, 28]) /* ty=Tensor[(2, 28), bool] */;
  %785 = @func_9336(%784) /* ty=(Tensor[(560, 4), int64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(2240), int64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64], Tensor[(2, 28), bool]) */;
  %786 = %782.0;
  %787 = %785.2;
  (%786, %787, meta[relay.Constant][45] /* ty=Tensor[(14, 4), bool] */)
}

def @func_5091() -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) {
  %788 = @func_1581() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), float64], Tensor[(56), float64], Tensor[(8, 7, 8), float64], Tensor[(560, 4), int64], Tensor[(975), float64]) */;
  %789 = @func_2241() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %790 = %788.0;
  %791 = %789.0;
  (%790, %791)
}

def @func_10052() -> (Tensor[(12, 14, 14), float64],) {
  %792 = @func_2241() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %793 = %792.0;
  (%793,)
}

def @func_6038() -> (Tensor[(12, 14, 14), float64], Tensor[(2, 28), float32]) {
  %794 = @func_1105() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %795 = %794.0;
  %796 = @func_5593() /* ty=Tensor[(2, 28), float32] */;
  (%795, %796)
}

def @main(%var_11483: Tensor[(12, 14, 14), float64]) -> Tensor[(12, 14, 14), bool] {
  %797 = @func_3246() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) */;
  %798 = %797.1;
  %799 = cast(%var_11483, dtype="bool") /* ty=Tensor[(12, 14, 14), bool] */;
  %800 = shape_of(%798, dtype="int32") /* ty=Tensor[(3), int32] */;
  %801 = cast(%798, dtype="bool") /* ty=Tensor[(12, 14, 14), bool] */;
  %802 = dyn.reshape(%799, %800, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%801, %802) /* ty=Tensor[(12, 14, 14), bool] */
}

def @func_10528() -> (Tensor[(2, 28), bool], Tensor[(12, 14, 14), float64], Tensor[(2, 28), float32], Tensor[(2240), int64]) {
  %803 = @func_10329() /* ty=Tensor[(2, 28), float32] */;
  %804 = cast(meta[relay.Constant][46] /* ty=Tensor[(2, 28), float32] */, dtype="bool") /* ty=Tensor[(2, 28), bool] */;
  %805 = shape_of(%803, dtype="int32") /* ty=Tensor[(2), int32] */;
  %806 = cast(%803, dtype="bool") /* ty=Tensor[(2, 28), bool] */;
  %807 = dyn.reshape(%804, %805, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %808 = @func_10224() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %809 = cast(meta[relay.Constant][46] /* ty=Tensor[(2, 28), float32] */, dtype="float32") /* ty=Tensor[(2, 28), float32] */;
  %810 = cosh(%809) /* ty=Tensor[(2, 28), float32] */;
  %811 = cast(%810, dtype="float32") /* ty=Tensor[(2, 28), float32] */;
  %812 = not_equal(%806, %807) /* ty=Tensor[(2, 28), bool] */;
  %813 = %808.0;
  %814 = sin(%811) /* ty=Tensor[(2, 28), float32] */;
  %815 = @func_7544() /* ty=Tensor[(2240), int64] */;
  (%812, %813, %814, %815)
}

def @func_8369() -> Tensor[(2240), int64] {
  @func_2146() /* ty=Tensor[(2240), int64] */
}

def @func_4080(%var_4073: Tensor[(1, 300), float64]) -> (Tensor[(2240), float32], Tensor[(56), float64], Tensor[(1, 300), float64]) {
  %816 = @func_2146() /* ty=Tensor[(2240), int64] */;
  %817 = cast(%816, dtype="float64") /* ty=Tensor[(2240), float64] */;
  %818 = log(%817) /* ty=Tensor[(2240), float64] */;
  %819 = cast(%818, dtype="float32") /* ty=Tensor[(2240), float32] */;
  %820 = shape_of(%816, dtype="int32") /* ty=Tensor[(1), int32] */;
  %821 = cast(%816, dtype="float32") /* ty=Tensor[(2240), float32] */;
  %822 = dyn.reshape(%819, %820, newshape=[]) /* ty=Tensor[(?), float32] */;
  %823 = cast(%var_4073, dtype="float64") /* ty=Tensor[(1, 300), float64] */;
  %824 = reshape(%823, newshape=[300]) /* ty=Tensor[(300), float64] */;
  %825 = @func_2876(%824) /* ty=(Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), float64], Tensor[(300), float64], Tensor[(56), float64], Tensor[(6, 84), float64]) */;
  %826 = floor_mod(%821, %822) /* ty=Tensor[(2240), float32] */;
  %827 = %825.3;
  (%826, %827, %var_4073)
}

def @func_7099() -> Tensor[(560, 4), float32] {
  %828 = @func_4728() /* ty=Tensor[(560, 4), float64] */;
  %829 = cast(%828, dtype="float32") /* ty=Tensor[(560, 4), float32] */;
  cosh(%829) /* ty=Tensor[(560, 4), float32] */
}

def @func_2354() -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64]) {
  %830 = @func_2049() /* ty=Tensor[(12, 14, 14), float64] */;
  %831 = cast(%830, dtype="float64") /* ty=Tensor[(12, 14, 14), float64] */;
  %832 = reshape(%831, newshape=[12, 14, 14]) /* ty=Tensor[(12, 14, 14), float64] */;
  %833 = @func_1469(%832) /* ty=(Tensor[(12, 14, 14), int64],) */;
  %834 = %833.0;
  (%830, %834)
}

def @func_5549(%var_5401: Tensor[(12, 14, 14), bool], %var_5518: Tensor[(2, 28), float64]) -> (Tensor[(300), float64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(504, 56), bool], Tensor[(2, 28), int8], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float32]) {
  %835 = @func_3617() /* ty=(Tensor[(56), float64], Tensor[(8, 7, 8), float64], Tensor[(300), float64], Tensor[(12, 14, 14), bool], Tensor[(13, 7, 7), int8], Tensor[(1, 637), float64], Tensor[(65, 15), float64]) */;
  %836 = @func_4411() /* ty=Tensor[(12, 14, 14), bool] */;
  %837 = cast(%var_5401, dtype="float64") /* ty=Tensor[(12, 14, 14), float64] */;
  %838 = shape_of(%836, dtype="int32") /* ty=Tensor[(3), int32] */;
  %839 = cast(%836, dtype="float64") /* ty=Tensor[(12, 14, 14), float64] */;
  %840 = dyn.reshape(%837, %838, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %841 = cast(%836, dtype="float64") /* ty=Tensor[(12, 14, 14), float64] */;
  %842 = reshape(%841, newshape=[12, 14, 14]) /* ty=Tensor[(12, 14, 14), float64] */;
  %843 = @func_1469(%842) /* ty=(Tensor[(12, 14, 14), int64],) */;
  %844 = @func_3410() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %845 = cast(meta[relay.Constant][47] /* ty=Tensor[(504, 1), float64] */, dtype="float64") /* ty=Tensor[(504, 1), float64] */;
  %846 = reshape(%845, newshape=[504]) /* ty=Tensor[(504), float64] */;
  %847 = @func_1786(%846) /* ty=(Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), float64], Tensor[(1, 300), float64], Tensor[(56), float64], Tensor[(504), float64]) */;
  %848 = @func_3736() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(560, 4), int64], Tensor[(12, 14, 14), bool]) */;
  %849 = cast(meta[relay.Constant][47] /* ty=Tensor[(504, 1), float64] */, dtype="float64") /* ty=Tensor[(504, 1), float64] */;
  %850 = reshape(%849, newshape=[504]) /* ty=Tensor[(504), float64] */;
  %851 = @func_1786(%850) /* ty=(Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), float64], Tensor[(1, 300), float64], Tensor[(56), float64], Tensor[(504), float64]) */;
  %852 = %851.3;
  %853 = cast(%852, dtype="bool") /* ty=Tensor[(56), bool] */;
  %854 = cast(meta[relay.Constant][47] /* ty=Tensor[(504, 1), float64] */, dtype="bool") /* ty=Tensor[(504, 1), bool] */;
  %855 = @func_2446() /* ty=(Tensor[(2, 28), bool], Tensor[(2, 28), float64], Tensor[(2, 28), int16]) */;
  %856 = %855.1;
  %857 = cast(%var_5518, dtype="int8") /* ty=Tensor[(2, 28), int8] */;
  %858 = shape_of(%856, dtype="int32") /* ty=Tensor[(2), int32] */;
  %859 = cast(%856, dtype="int8") /* ty=Tensor[(2, 28), int8] */;
  %860 = dyn.reshape(%857, %858, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %861 = @func_3625() /* ty=Tensor[(12, 14, 14), float64] */;
  %862 = cast(meta[relay.Constant][48] /* ty=Tensor[(12, 14, 14), float64] */, dtype="float32") /* ty=Tensor[(12, 14, 14), float32] */;
  %863 = shape_of(%861, dtype="int32") /* ty=Tensor[(3), int32] */;
  %864 = cast(%861, dtype="float32") /* ty=Tensor[(12, 14, 14), float32] */;
  %865 = dyn.reshape(%862, %863, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %866 = %835.2;
  %867 = power(%839, %840) /* ty=Tensor[(12, 14, 14), float64] */;
  %868 = @func_3625() /* ty=Tensor[(12, 14, 14), float64] */;
  %869 = %843.0;
  %870 = %844.0;
  %871 = %847.0;
  %872 = %848.0;
  %873 = less(%853, %854) /* ty=Tensor[(504, 56), bool] */;
  %874 = bitwise_or(%859, %860) /* ty=Tensor[(2, 28), int8] */;
  %875 = @func_2015() /* ty=Tensor[(12, 14, 14), float64] */;
  %876 = floor_divide(%864, %865) /* ty=Tensor[(12, 14, 14), float32] */;
  (%866, %867, %868, %869, %870, %871, %872, %873, %874, %875, %876)
}

def @func_2616(%var_2592: Tensor[(160), float64]) -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(56), float64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(10, 16, 1), float64], Tensor[(160), float64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), bool], Tensor[(12, 14, 14), float64], Tensor[(13, 7, 7), int8], Tensor[(637), int8]) {
  %877 = @func_2495() /* ty=Tensor[(12, 14, 14), float64] */;
  %878 = cast(%877, dtype="float64") /* ty=Tensor[(12, 14, 14), float64] */;
  %879 = reshape(%878, newshape=[12, 14, 14]) /* ty=Tensor[(12, 14, 14), float64] */;
  %880 = @func_1469(%879) /* ty=(Tensor[(12, 14, 14), int64],) */;
  %881 = @func_2241() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %882 = @func_1978() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(56), float64], Tensor[(2, 28), float64], Tensor[(2240), int64], Tensor[(65, 15), float64]) */;
  %883 = @func_1105() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %884 = cast(%var_2592, dtype="float64") /* ty=Tensor[(160), float64] */;
  %885 = reshape(%884, newshape=[10, 16, 1]) /* ty=Tensor[(10, 16, 1), float64] */;
  %886 = @func_1220() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %887 = @func_1627() /* ty=(Tensor[(12, 14, 14), bool], Tensor[(8, 7, 8), float64], Tensor[(12, 14, 14), float64]) */;
  %888 = cast(meta[relay.Constant][49] /* ty=Tensor[(637), int8] */, dtype="int8") /* ty=Tensor[(637), int8] */;
  %889 = cast(meta[relay.Constant][49] /* ty=Tensor[(637), int8] */, dtype="int8") /* ty=Tensor[(637), int8] */;
  %890 = reshape(%888, newshape=[13, 7, 7]) /* ty=Tensor[(13, 7, 7), int8] */;
  %891 = reshape(%889, newshape=[13, 7, 7]) /* ty=Tensor[(13, 7, 7), int8] */;
  %892 = @func_1814(%890, %891) /* ty=(Tensor[(13, 7, 7), int8],) */;
  %893 = %880.0;
  %894 = @func_2495() /* ty=Tensor[(12, 14, 14), float64] */;
  %895 = %881.0;
  %896 = %882.1;
  %897 = @func_2015() /* ty=Tensor[(12, 14, 14), float64] */;
  %898 = %883.0;
  %899 = @func_1509(%885) /* ty=Tensor[(10, 16, 1), float64] */;
  %900 = %886.0;
  %901 = %887.0;
  %902 = @func_2495() /* ty=Tensor[(12, 14, 14), float64] */;
  %903 = %892.0;
  (%877, %893, %894, %895, %896, %897, %898, %899, %var_2592, %900, %901, %902, %903, meta[relay.Constant][49] /* ty=Tensor[(637), int8] */)
}

def @func_3797(%var_3770: Tensor[(12, 5, 11), float64]) -> (Tensor[(12, 5, 11), float64], Tensor[(12, 14, 14), bool], Tensor[(2352), float64], Tensor[(12, 14, 14), bool]) {
  %904 = cast(%var_3770, dtype="float64") /* ty=Tensor[(12, 5, 11), float64] */;
  %905 = cast(meta[relay.Constant][50] /* ty=Tensor[(2352), float64] */, dtype="float64") /* ty=Tensor[(2352), float64] */;
  %906 = reshape(%905, newshape=[12, 14, 14]) /* ty=Tensor[(12, 14, 14), float64] */;
  %907 = cast(meta[relay.Constant][50] /* ty=Tensor[(2352), float64] */, dtype="float64") /* ty=Tensor[(2352), float64] */;
  %908 = reshape(%907, newshape=[12, 14, 14]) /* ty=Tensor[(12, 14, 14), float64] */;
  %909 = log10(%904) /* ty=Tensor[(12, 5, 11), float64] */;
  %910 = @func_2137(%906) /* ty=Tensor[(12, 14, 14), bool] */;
  %911 = @func_2137(%908) /* ty=Tensor[(12, 14, 14), bool] */;
  (%909, %910, meta[relay.Constant][50] /* ty=Tensor[(2352), float64] */, %911)
}

def @func_4232() -> (Tensor[(12, 14, 14), float64],) {
  %912 = @func_2049() /* ty=Tensor[(12, 14, 14), float64] */;
  (%912,)
}

def @func_4673() -> (Tensor[(560, 4), int64],) {
  %913 = @func_4621() /* ty=(Tensor[(14, 10, 13), float64], Tensor[(560, 4), int64], Tensor[(1, 300), float64], Tensor[(504), float64], Tensor[(12, 14, 14), float64]) */;
  %914 = %913.1;
  (%914,)
}

def @func_6852() -> (Tensor[(12, 14, 14), int64],) {
  %915 = @func_3982() /* ty=(Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), float64]) */;
  %916 = %915.0;
  (%916,)
}

def @func_8984() -> (Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), float64]) {
  %917 = @func_4825() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64]) */;
  %918 = @func_7036() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64]) */;
  %919 = %917.1;
  %920 = %918.0;
  (%919, %920)
}

def @func_3860() -> Tensor[(12, 14, 14), float32] {
  %921 = @func_3246() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) */;
  %922 = %921.0;
  %923 = cast(%922, dtype="float32") /* ty=Tensor[(12, 14, 14), float32] */;
  sinh(%923) /* ty=Tensor[(12, 14, 14), float32] */
}

def @func_8189() -> Tensor[(12, 14, 14), float64] {
  %924 = @func_1180() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) */;
  %924.1
}

def @func_6647(%var_6643: Tensor[(160), float64]) -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64], Tensor[(10, 16, 1), float64], Tensor[(160), float64]) {
  %925 = @func_5091() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) */;
  %926 = @func_6053() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %927 = @func_3000() /* ty=(Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), int64]) */;
  %928 = cast(%var_6643, dtype="float64") /* ty=Tensor[(160), float64] */;
  %929 = reshape(%928, newshape=[10, 16, 1]) /* ty=Tensor[(10, 16, 1), float64] */;
  %930 = %925.0;
  %931 = %926.0;
  %932 = %927.1;
  %933 = @func_1509(%929) /* ty=Tensor[(10, 16, 1), float64] */;
  (%930, %931, %932, %933, %var_6643)
}

def @func_7544() -> Tensor[(2240), int64] {
  %934 = @func_6518() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(140, 16), int64], Tensor[(65, 15), float32], Tensor[(2240), int64], Tensor[(56, 1), float64]) */;
  %934.3
}

def @func_8179() -> (Tensor[(12, 14, 14), float32],) {
  %935 = @func_6852() /* ty=(Tensor[(12, 14, 14), int64],) */;
  %936 = %935.0;
  %937 = cast(%936, dtype="float32") /* ty=Tensor[(12, 14, 14), float32] */;
  %938 = erf(%937) /* ty=Tensor[(12, 14, 14), float32] */;
  (%938,)
}

def @func_3954() -> Tensor[(12, 14, 14), float64] {
  @func_2483() /* ty=Tensor[(12, 14, 14), float64] */
}

def @func_2984() -> (Tensor[(12, 14, 14), float64], Tensor[(10, 14, 16), int64], Tensor[(140, 16), int64]) {
  %939 = cast(meta[relay.Constant][51] /* ty=Tensor[(140, 16), int64] */, dtype="int64") /* ty=Tensor[(140, 16), int64] */;
  %940 = cast(meta[relay.Constant][51] /* ty=Tensor[(140, 16), int64] */, dtype="int64") /* ty=Tensor[(140, 16), int64] */;
  %941 = reshape(%939, newshape=[10, 14, 16]) /* ty=Tensor[(10, 14, 16), int64] */;
  %942 = reshape(%940, newshape=[10, 14, 16]) /* ty=Tensor[(10, 14, 16), int64] */;
  %943 = @func_416(%941, %942) /* ty=(Tensor[(10, 14, 16), int64], Tensor[(8, 7, 8), float64], Tensor[(56), float64]) */;
  %944 = @func_2015() /* ty=Tensor[(12, 14, 14), float64] */;
  %945 = %943.0;
  (%944, %945, meta[relay.Constant][51] /* ty=Tensor[(140, 16), int64] */)
}

def @func_3410() -> (Tensor[(12, 14, 14), float64],) {
  %946 = @func_2984() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(10, 14, 16), int64], Tensor[(140, 16), int64]) */;
  %947 = %946.0;
  (%947,)
}

def @func_5647() -> (Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), float64]) {
  %948 = @func_2354() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64]) */;
  %949 = @func_2241() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %950 = %948.1;
  %951 = %949.0;
  (%950, %951)
}

def @func_3246() -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) {
  %952 = @func_1220() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %953 = @func_2241() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %954 = %952.0;
  %955 = %953.0;
  (%954, %955)
}

def @func_1180() -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) {
  %956 = @func_1105() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %957 = %956.0;
  %958 = cast(%957, dtype="float64") /* ty=Tensor[(12, 14, 14), float64] */;
  %959 = exp(%958) /* ty=Tensor[(12, 14, 14), float64] */;
  %960 = cast(%959, dtype="float64") /* ty=Tensor[(12, 14, 14), float64] */;
  %961 = acos(%960) /* ty=Tensor[(12, 14, 14), float64] */;
  %962 = cast(%961, dtype="float64") /* ty=Tensor[(12, 14, 14), float64] */;
  %963 = @func_1105() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %964 = rsqrt(%962) /* ty=Tensor[(12, 14, 14), float64] */;
  %965 = %963.0;
  (%964, %965)
}

def @func_8238() -> (Tensor[(12, 14, 14), float64], Tensor[(504), float64]) {
  %966 = @func_5953() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(6, 10, 5), float64], Tensor[(300), float64], Tensor[(56), float64], Tensor[(504), float64]) */;
  %967 = @func_3954() /* ty=Tensor[(12, 14, 14), float64] */;
  %968 = %966.4;
  (%967, %968)
}

def @func_4402() -> Tensor[(12, 14, 14), float32] {
  @func_3860() /* ty=Tensor[(12, 14, 14), float32] */
}

def @func_7036() -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64]) {
  %969 = @func_2354() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64]) */;
  %970 = @func_5647() /* ty=(Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), float64]) */;
  %971 = %969.0;
  %972 = %970.0;
  (%971, %972)
}

def @func_5243(%var_5238: Tensor[(2352), float64]) -> (Tensor[(56), float64], Tensor[(12, 14, 14), int64], Tensor[(2352), float64]) {
  %973 = @func_4162() /* ty=(Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), float32], Tensor[(56), float64], Tensor[(50, 6), float64]) */;
  %974 = cast(%var_5238, dtype="float64") /* ty=Tensor[(2352), float64] */;
  %975 = reshape(%974, newshape=[12, 14, 14]) /* ty=Tensor[(12, 14, 14), float64] */;
  %976 = @func_1469(%975) /* ty=(Tensor[(12, 14, 14), int64],) */;
  %977 = %973.2;
  %978 = %976.0;
  (%977, %978, %var_5238)
}

def @func_6285(%var_6249: Tensor[(75), float64], %var_6250: Tensor[(975), float64], %var_6276: Tensor[(975), float64]) -> (Tensor[(12, 14, 14), float64], Tensor[(10, 14, 16), int64], Tensor[(75), float64], Tensor[(975), bool]) {
  %979 = cast(%var_6249, dtype="float64") /* ty=Tensor[(75), float64] */;
  %980 = cast(%var_6250, dtype="float64") /* ty=Tensor[(975), float64] */;
  %981 = reshape(%979, newshape=[15, 1, 5]) /* ty=Tensor[(15, 1, 5), float64] */;
  %982 = reshape(%980, newshape=[15, 13, 5]) /* ty=Tensor[(15, 13, 5), float64] */;
  %983 = @func_801(%981, %982) /* ty=(Tensor[(15, 13, 5), float64], Tensor[(10, 14, 16), int64], Tensor[(2240), int64], Tensor[(10, 14, 16), int64]) */;
  %984 = cast(%var_6276, dtype="bool") /* ty=Tensor[(975), bool] */;
  %985 = shape_of(%var_6250, dtype="int32") /* ty=Tensor[(1), int32] */;
  %986 = cast(%var_6250, dtype="bool") /* ty=Tensor[(975), bool] */;
  %987 = dyn.reshape(%984, %985, newshape=[]) /* ty=Tensor[(?), bool] */;
  %988 = @func_3625() /* ty=Tensor[(12, 14, 14), float64] */;
  %989 = %983.3;
  %990 = greater(%986, %987) /* ty=Tensor[(975), bool] */;
  (%988, %989, %var_6249, %990)
}

def @func_8585(%var_8578: Tensor[(2, 28), float64]) -> (Tensor[(504), float64], Tensor[(2, 28), int8]) {
  %991 = @func_4621() /* ty=(Tensor[(14, 10, 13), float64], Tensor[(560, 4), int64], Tensor[(1, 300), float64], Tensor[(504), float64], Tensor[(12, 14, 14), float64]) */;
  %992 = @func_6820() /* ty=(Tensor[(2, 28), float64],) */;
  %993 = %992.0;
  %994 = cast(%var_8578, dtype="int8") /* ty=Tensor[(2, 28), int8] */;
  %995 = shape_of(%993, dtype="int32") /* ty=Tensor[(2), int32] */;
  %996 = cast(%993, dtype="int8") /* ty=Tensor[(2, 28), int8] */;
  %997 = dyn.reshape(%994, %995, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %998 = %991.3;
  %999 = bitwise_and(%996, %997) /* ty=Tensor[(2, 28), int8] */;
  (%998, %999)
}

def @func_4957() -> (Tensor[(12, 14, 14), float64],) {
  %1000 = @func_2495() /* ty=Tensor[(12, 14, 14), float64] */;
  (%1000,)
}

def @func_8767() -> (Tensor[(12, 14, 14), float64], Tensor[(13, 7, 7), int8], Tensor[(637), int8]) {
  %1001 = @func_6053() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %1002 = cast(meta[relay.Constant][52] /* ty=Tensor[(637), int8] */, dtype="int8") /* ty=Tensor[(637), int8] */;
  %1003 = cast(meta[relay.Constant][52] /* ty=Tensor[(637), int8] */, dtype="int8") /* ty=Tensor[(637), int8] */;
  %1004 = reshape(%1002, newshape=[13, 7, 7]) /* ty=Tensor[(13, 7, 7), int8] */;
  %1005 = reshape(%1003, newshape=[13, 7, 7]) /* ty=Tensor[(13, 7, 7), int8] */;
  %1006 = @func_1814(%1004, %1005) /* ty=(Tensor[(13, 7, 7), int8],) */;
  %1007 = %1001.0;
  %1008 = %1006.0;
  (%1007, %1008, meta[relay.Constant][52] /* ty=Tensor[(637), int8] */)
}

def @func_8937() -> Tensor[(12, 14, 14), bool] {
  %1009 = @func_1627() /* ty=(Tensor[(12, 14, 14), bool], Tensor[(8, 7, 8), float64], Tensor[(12, 14, 14), float64]) */;
  %1009.0
}

def @func_5272(%var_5256: Tensor[(6, 6, 15), float64]) -> (Tensor[(12, 14, 14), float64], Tensor[(6, 6, 15), bool]) {
  %1010 = cast(%var_5256, dtype="float64") /* ty=Tensor[(6, 6, 15), float64] */;
  %1011 = log2(%1010) /* ty=Tensor[(6, 6, 15), float64] */;
  %1012 = cast(%1011, dtype="float64") /* ty=Tensor[(6, 6, 15), float64] */;
  %1013 = sinh(%1012) /* ty=Tensor[(6, 6, 15), float64] */;
  %1014 = cast(%var_5256, dtype="bool") /* ty=Tensor[(6, 6, 15), bool] */;
  %1015 = shape_of(%1013, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1016 = cast(%1013, dtype="bool") /* ty=Tensor[(6, 6, 15), bool] */;
  %1017 = dyn.reshape(%1014, %1015, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1018 = @func_2495() /* ty=Tensor[(12, 14, 14), float64] */;
  %1019 = logical_or(%1016, %1017) /* ty=Tensor[(6, 6, 15), bool] */;
  (%1018, %1019)
}

def @func_10224() -> (Tensor[(12, 14, 14), float64],) {
  %1020 = @func_1581() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), float64], Tensor[(56), float64], Tensor[(8, 7, 8), float64], Tensor[(560, 4), int64], Tensor[(975), float64]) */;
  %1021 = %1020.0;
  (%1021,)
}

def @func_1786(%var_1778: Tensor[(504), float64]) -> (Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), float64], Tensor[(1, 300), float64], Tensor[(56), float64], Tensor[(504), float64]) {
  %1022 = @func_1105() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %1023 = cast(meta[relay.Constant][53] /* ty=Tensor[(1, 300), float64] */, dtype="float64") /* ty=Tensor[(1, 300), float64] */;
  %1024 = cast(meta[relay.Constant][54] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
  %1025 = cast(%var_1778, dtype="float64") /* ty=Tensor[(504), float64] */;
  %1026 = reshape(%1023, newshape=[6, 10, 5]) /* ty=Tensor[(6, 10, 5), float64] */;
  %1027 = reshape(%1024, newshape=[56, 1]) /* ty=Tensor[(56, 1), float64] */;
  %1028 = reshape(%1025, newshape=[56, 9]) /* ty=Tensor[(56, 9), float64] */;
  %1029 = @func_574(%1026, %1027, %1028) /* ty=(Tensor[(8, 7, 8), float64], Tensor[(56, 9), uint32], Tensor[(8, 7, 8), float64], Tensor[(6, 10, 5), bool], Tensor[(6, 10, 5), float64]) */;
  %1030 = %1022.0;
  %1031 = %1029.0;
  (%1030, %1031, meta[relay.Constant][53] /* ty=Tensor[(1, 300), float64] */, meta[relay.Constant][54] /* ty=Tensor[(56), float64] */, %var_1778)
}

def @func_4333() -> (Tensor[(12, 14, 14), float64],) {
  %1032 = @func_3954() /* ty=Tensor[(12, 14, 14), float64] */;
  (%1032,)
}

def @func_4162() -> (Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), float32], Tensor[(56), float64], Tensor[(50, 6), float64]) {
  %1033 = @func_3000() /* ty=(Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), int64]) */;
  %1034 = cast(meta[relay.Constant][55] /* ty=Tensor[(50, 6), float64] */, dtype="float64") /* ty=Tensor[(50, 6), float64] */;
  %1035 = reshape(%1034, newshape=[300]) /* ty=Tensor[(300), float64] */;
  %1036 = @func_2876(%1035) /* ty=(Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), float64], Tensor[(300), float64], Tensor[(56), float64], Tensor[(6, 84), float64]) */;
  %1037 = %1033.1;
  %1038 = @func_3860() /* ty=Tensor[(12, 14, 14), float32] */;
  %1039 = %1036.3;
  (%1037, %1038, %1039, meta[relay.Constant][55] /* ty=Tensor[(50, 6), float64] */)
}

def @func_5767() -> (Tensor[(12, 14, 14), bool], Tensor[(12, 14, 14), float64], Tensor[(560, 4), int64], Tensor[(2, 28), float64]) {
  %1040 = @func_1627() /* ty=(Tensor[(12, 14, 14), bool], Tensor[(8, 7, 8), float64], Tensor[(12, 14, 14), float64]) */;
  %1041 = @func_4673() /* ty=(Tensor[(560, 4), int64],) */;
  %1042 = @func_2446() /* ty=(Tensor[(2, 28), bool], Tensor[(2, 28), float64], Tensor[(2, 28), int16]) */;
  %1043 = %1040.0;
  %1044 = @func_2015() /* ty=Tensor[(12, 14, 14), float64] */;
  %1045 = %1041.0;
  %1046 = %1042.1;
  (%1043, %1044, %1045, %1046)
}

def @func_3617() -> (Tensor[(56), float64], Tensor[(8, 7, 8), float64], Tensor[(300), float64], Tensor[(12, 14, 14), bool], Tensor[(13, 7, 7), int8], Tensor[(1, 637), float64], Tensor[(65, 15), float64]) {
  %1047 = @func_1843() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(56), float64]) */;
  %1048 = cast(meta[relay.Constant][56] /* ty=Tensor[(300), float64] */, dtype="float64") /* ty=Tensor[(300), float64] */;
  %1049 = reshape(%1048, newshape=[300]) /* ty=Tensor[(300), float64] */;
  %1050 = @func_2876(%1049) /* ty=(Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), float64], Tensor[(300), float64], Tensor[(56), float64], Tensor[(6, 84), float64]) */;
  %1051 = @func_1627() /* ty=(Tensor[(12, 14, 14), bool], Tensor[(8, 7, 8), float64], Tensor[(12, 14, 14), float64]) */;
  %1052 = cast(meta[relay.Constant][57] /* ty=Tensor[(1, 637), int8] */, dtype="int8") /* ty=Tensor[(1, 637), int8] */;
  %1053 = cast(meta[relay.Constant][57] /* ty=Tensor[(1, 637), int8] */, dtype="int8") /* ty=Tensor[(1, 637), int8] */;
  %1054 = reshape(%1052, newshape=[13, 7, 7]) /* ty=Tensor[(13, 7, 7), int8] */;
  %1055 = reshape(%1053, newshape=[13, 7, 7]) /* ty=Tensor[(13, 7, 7), int8] */;
  %1056 = @func_1814(%1054, %1055) /* ty=(Tensor[(13, 7, 7), int8],) */;
  %1057 = cast(meta[relay.Constant][57] /* ty=Tensor[(1, 637), int8] */, dtype="float64") /* ty=Tensor[(1, 637), float64] */;
  %1058 = %1047.1;
  %1059 = %1050.1;
  %1060 = %1051.0;
  %1061 = %1056.0;
  %1062 = asin(%1057) /* ty=Tensor[(1, 637), float64] */;
  %1063 = @func_2088() /* ty=Tensor[(65, 15), float64] */;
  (%1058, %1059, meta[relay.Constant][56] /* ty=Tensor[(300), float64] */, %1060, %1061, %1062, %1063)
}

def @func_8521(%var_8487: Tensor[(2, 80), float64]) -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64], Tensor[(2, 80), float64]) {
  %1064 = @func_2241() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %1065 = cast(%var_8487, dtype="float64") /* ty=Tensor[(2, 80), float64] */;
  %1066 = reshape(%1065, newshape=[160]) /* ty=Tensor[(160), float64] */;
  %1067 = @func_6647(%1066) /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64], Tensor[(10, 16, 1), float64], Tensor[(160), float64]) */;
  %1068 = %1067.1;
  %1069 = cast(%1068, dtype="float64") /* ty=Tensor[(12, 14, 14), float64] */;
  %1070 = reshape(%1069, newshape=[12, 14, 14]) /* ty=Tensor[(12, 14, 14), float64] */;
  %1071 = @func_1469(%1070) /* ty=(Tensor[(12, 14, 14), int64],) */;
  %1072 = cast(%var_8487, dtype="float64") /* ty=Tensor[(2, 80), float64] */;
  %1073 = %1064.0;
  %1074 = %1071.0;
  %1075 = cos(%1072) /* ty=Tensor[(2, 80), float64] */;
  (%1073, %1068, %1074, %1075)
}

def @func_2241() -> (Tensor[(12, 14, 14), float64],) {
  %1076 = @func_1105() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %1077 = %1076.0;
  (%1077,)
}

def @func_10132() -> (Tensor[(56), float64],) {
  %1078 = @func_4760() /* ty=(Tensor[(56), float64],) */;
  %1079 = %1078.0;
  (%1079,)
}

def @func_5719() -> (Tensor[(12, 14, 14), float64], Tensor[(560, 4), float64]) {
  %1080 = @func_4370() /* ty=Tensor[(12, 14, 14), float64] */;
  %1081 = @func_4728() /* ty=Tensor[(560, 4), float64] */;
  (%1080, %1081)
}

def @func_2015() -> Tensor[(12, 14, 14), float64] {
  %1082 = @func_1220() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %1082.0
}

def @func_8437() -> (Tensor[(560, 4), bool], Tensor[(12, 14, 14), float64]) {
  %1083 = @func_7598() /* ty=(Tensor[(560, 4), bool], Tensor[(10, 16, 1), float64], Tensor[(160), float64]) */;
  %1084 = @func_2649() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) */;
  %1085 = %1083.0;
  %1086 = %1084.1;
  (%1085, %1086)
}

def @func_801(%var_779: Tensor[(15, 1, 5), float64], %var_780: Tensor[(15, 13, 5), float64]) -> (Tensor[(15, 13, 5), float64], Tensor[(10, 14, 16), int64], Tensor[(2240), int64], Tensor[(10, 14, 16), int64]) {
  %1087 = cast(%var_779, dtype="float64") /* ty=Tensor[(15, 1, 5), float64] */;
  %1088 = cast(%var_780, dtype="float64") /* ty=Tensor[(15, 13, 5), float64] */;
  %1089 = cast(meta[relay.Constant][58] /* ty=Tensor[(2240), int64] */, dtype="int64") /* ty=Tensor[(2240), int64] */;
  %1090 = cast(meta[relay.Constant][58] /* ty=Tensor[(2240), int64] */, dtype="int64") /* ty=Tensor[(2240), int64] */;
  %1091 = reshape(%1089, newshape=[10, 14, 16]) /* ty=Tensor[(10, 14, 16), int64] */;
  %1092 = reshape(%1090, newshape=[10, 14, 16]) /* ty=Tensor[(10, 14, 16), int64] */;
  %1093 = @func_416(%1091, %1092) /* ty=(Tensor[(10, 14, 16), int64], Tensor[(8, 7, 8), float64], Tensor[(56), float64]) */;
  %1094 = %1093.0;
  %1095 = cast(%1094, dtype="int64") /* ty=Tensor[(10, 14, 16), int64] */;
  %1096 = cast(%1094, dtype="int64") /* ty=Tensor[(10, 14, 16), int64] */;
  %1097 = reshape(%1095, newshape=[10, 14, 16]) /* ty=Tensor[(10, 14, 16), int64] */;
  %1098 = reshape(%1096, newshape=[10, 14, 16]) /* ty=Tensor[(10, 14, 16), int64] */;
  %1099 = @func_416(%1097, %1098) /* ty=(Tensor[(10, 14, 16), int64], Tensor[(8, 7, 8), float64], Tensor[(56), float64]) */;
  %1100 = divide(%1087, %1088) /* ty=Tensor[(15, 13, 5), float64] */;
  %1101 = %1099.0;
  (%1100, %1094, meta[relay.Constant][58] /* ty=Tensor[(2240), int64] */, %1101)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_5593() -> Tensor[(2, 28), float32] {
  %0 = @func_2199() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(2, 28), float32]) */;
  %0.1
}

def @func_8822(%var_8821: Tensor[(6, 16, 16), float32]) -> (Tensor[(12, 14, 14), float64], Tensor[(6, 16, 16), float64]) {
  %10 = fn (%var_8800: Tensor[(6, 16, 16), float32]) -> (Tensor[(12, 14, 14), float64], Tensor[(6, 16, 16), float64]) {
    %1 = @func_5091() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) */;
    %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(6, 16, 16), float32] */, dtype="float32") /* ty=Tensor[(6, 16, 16), float32] */;
    %3 = log2(%2) /* ty=Tensor[(6, 16, 16), float32] */;
    %4 = cast(%var_8800, dtype="float64") /* ty=Tensor[(6, 16, 16), float64] */;
    %5 = shape_of(%3, dtype="int32") /* ty=Tensor[(3), int32] */;
    %6 = cast(%3, dtype="float64") /* ty=Tensor[(6, 16, 16), float64] */;
    %7 = dyn.reshape(%4, %5, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %8 = %1.1;
    %9 = add(%6, %7) /* ty=Tensor[(6, 16, 16), float64] */;
    (%8, %9)
  };
  %10(%var_8821) /* ty=(Tensor[(12, 14, 14), float64], Tensor[(6, 16, 16), float64]) */
}

def @func_4762() -> (Tensor[(56), float64],) {
  @func_4760() /* ty=(Tensor[(56), float64],) */
}

def @func_3625() -> Tensor[(12, 14, 14), float64] {
  @func_2495() /* ty=Tensor[(12, 14, 14), float64] */
}

def @func_1980() -> (Tensor[(12, 14, 14), float64], Tensor[(56), float64], Tensor[(2, 28), float64], Tensor[(2240), int64], Tensor[(65, 15), float64]) {
  @func_1978() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(56), float64], Tensor[(2, 28), float64], Tensor[(2240), int64], Tensor[(65, 15), float64]) */
}

def @func_3400() -> Tensor[(2, 28), bool] {
  %11 = @func_2446() /* ty=(Tensor[(2, 28), bool], Tensor[(2, 28), float64], Tensor[(2, 28), int16]) */;
  %11.0
}

def @func_2294(%var_2288: Tensor[(56), float64]) -> (Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), float64], Tensor[(56), float64], Tensor[(2240), int64], Tensor[(1, 975), float64]) {
  %12 = @func_2199() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(2, 28), float32]) */;
  %13 = cast(%var_2288, dtype="float64") /* ty=Tensor[(56), float64] */;
  %14 = cast(meta[relay.Constant][1] /* ty=Tensor[(2240), int64] */, dtype="int64") /* ty=Tensor[(2240), int64] */;
  %15 = cast(meta[relay.Constant][2] /* ty=Tensor[(1, 975), float64] */, dtype="float64") /* ty=Tensor[(1, 975), float64] */;
  %16 = reshape(%13, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %17 = reshape(%14, newshape=[2240]) /* ty=Tensor[(2240), int64] */;
  %18 = reshape(%15, newshape=[975]) /* ty=Tensor[(975), float64] */;
  %19 = @func_1385(%16, %17, %18) /* ty=(Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), float64], Tensor[(56), float64], Tensor[(8, 7, 8), float64], Tensor[(2240), int64], Tensor[(10, 14, 16), int64], Tensor[(75), float64], Tensor[(975), float64]) */;
  %20 = %12.0;
  %21 = %19.3;
  (%20, %21, %var_2288, meta[relay.Constant][1] /* ty=Tensor[(2240), int64] */, meta[relay.Constant][2] /* ty=Tensor[(1, 975), float64] */)
}

def @func_1472(%var_1470: Tensor[(12, 14, 14), float64]) -> (Tensor[(12, 14, 14), int64],) {
  @func_1469(%var_1470) /* ty=(Tensor[(12, 14, 14), int64],) */
}

def @func_8729() -> (Tensor[(56), float64], Tensor[(12, 14, 14), float64]) {
  @func_8727() /* ty=(Tensor[(56), float64], Tensor[(12, 14, 14), float64]) */
}

def @func_8319() -> (Tensor[(560, 4), float64],) {
  %22 = @func_7774() /* ty=(Tensor[(560, 4), float64], Tensor[(12, 5, 11), float64]) */;
  %23 = %22.0;
  (%23,)
}

def @func_9210() -> (Tensor[(12, 14, 14), float64],) {
  %24 = @func_1220() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %25 = %24.0;
  (%25,)
}

def @func_2147() -> Tensor[(2240), int64] {
  %27 = fn () -> Tensor[(2240), int64] {
    %26 = @func_1978() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(56), float64], Tensor[(2, 28), float64], Tensor[(2240), int64], Tensor[(65, 15), float64]) */;
    %26.3
  };
  %27() /* ty=Tensor[(2240), int64] */
}

def @func_2616(%var_2592: Tensor[(160), float64]) -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(56), float64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(10, 16, 1), float64], Tensor[(160), float64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), bool], Tensor[(12, 14, 14), float64], Tensor[(13, 7, 7), int8], Tensor[(637), int8]) {
  %28 = @func_2495() /* ty=Tensor[(12, 14, 14), float64] */;
  %29 = cast(%28, dtype="float64") /* ty=Tensor[(12, 14, 14), float64] */;
  %30 = reshape(%29, newshape=[12, 14, 14]) /* ty=Tensor[(12, 14, 14), float64] */;
  %31 = @func_1469(%30) /* ty=(Tensor[(12, 14, 14), int64],) */;
  %32 = @func_2241() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %33 = @func_1978() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(56), float64], Tensor[(2, 28), float64], Tensor[(2240), int64], Tensor[(65, 15), float64]) */;
  %34 = @func_1105() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %35 = cast(%var_2592, dtype="float64") /* ty=Tensor[(160), float64] */;
  %36 = reshape(%35, newshape=[10, 16, 1]) /* ty=Tensor[(10, 16, 1), float64] */;
  %37 = @func_1220() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %38 = @func_1627() /* ty=(Tensor[(12, 14, 14), bool], Tensor[(8, 7, 8), float64], Tensor[(12, 14, 14), float64]) */;
  %39 = cast(meta[relay.Constant][3] /* ty=Tensor[(637), int8] */, dtype="int8") /* ty=Tensor[(637), int8] */;
  %40 = cast(meta[relay.Constant][3] /* ty=Tensor[(637), int8] */, dtype="int8") /* ty=Tensor[(637), int8] */;
  %41 = reshape(%39, newshape=[13, 7, 7]) /* ty=Tensor[(13, 7, 7), int8] */;
  %42 = reshape(%40, newshape=[13, 7, 7]) /* ty=Tensor[(13, 7, 7), int8] */;
  %43 = @func_1814(%41, %42) /* ty=(Tensor[(13, 7, 7), int8],) */;
  %44 = %31.0;
  %45 = @func_2495() /* ty=Tensor[(12, 14, 14), float64] */;
  %46 = %32.0;
  %47 = %33.1;
  %48 = @func_2015() /* ty=Tensor[(12, 14, 14), float64] */;
  %49 = %34.0;
  %50 = @func_1509(%36) /* ty=Tensor[(10, 16, 1), float64] */;
  %51 = %37.0;
  %52 = %38.0;
  %53 = @func_2495() /* ty=Tensor[(12, 14, 14), float64] */;
  %54 = %43.0;
  (%28, %44, %45, %46, %47, %48, %49, %50, %var_2592, %51, %52, %53, %54, meta[relay.Constant][3] /* ty=Tensor[(637), int8] */)
}

def @func_7781() -> (Tensor[(560, 4), float32],) {
  @func_7779() /* ty=(Tensor[(560, 4), float32],) */
}

def @func_6650(%var_6648: Tensor[(160), float64]) -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64], Tensor[(10, 16, 1), float64], Tensor[(160), float64]) {
  @func_6647(%var_6648) /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64], Tensor[(10, 16, 1), float64], Tensor[(160), float64]) */
}

def @func_1814(%var_1804: Tensor[(13, 7, 7), int8], %var_1805: Tensor[(13, 7, 7), int8]) -> (Tensor[(13, 7, 7), int8],) {
  %55 = cast(%var_1805, dtype="int8") /* ty=Tensor[(13, 7, 7), int8] */;
  %56 = shape_of(%var_1804, dtype="int32") /* ty=Tensor[(3), int32] */;
  %57 = cast(%var_1804, dtype="int8") /* ty=Tensor[(13, 7, 7), int8] */;
  %58 = dyn.reshape(%55, %56, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %59 = bitwise_xor(%57, %58) /* ty=Tensor[(13, 7, 7), int8] */;
  (%59,)
}

def @func_801(%var_779: Tensor[(15, 1, 5), float64], %var_780: Tensor[(15, 13, 5), float64]) -> (Tensor[(15, 13, 5), float64], Tensor[(10, 14, 16), int64], Tensor[(2240), int64], Tensor[(10, 14, 16), int64]) {
  %60 = cast(%var_779, dtype="float64") /* ty=Tensor[(15, 1, 5), float64] */;
  %61 = cast(%var_780, dtype="float64") /* ty=Tensor[(15, 13, 5), float64] */;
  %62 = cast(meta[relay.Constant][4] /* ty=Tensor[(2240), int64] */, dtype="int64") /* ty=Tensor[(2240), int64] */;
  %63 = cast(meta[relay.Constant][4] /* ty=Tensor[(2240), int64] */, dtype="int64") /* ty=Tensor[(2240), int64] */;
  %64 = reshape(%62, newshape=[10, 14, 16]) /* ty=Tensor[(10, 14, 16), int64] */;
  %65 = reshape(%63, newshape=[10, 14, 16]) /* ty=Tensor[(10, 14, 16), int64] */;
  %66 = @func_416(%64, %65) /* ty=(Tensor[(10, 14, 16), int64], Tensor[(8, 7, 8), float64], Tensor[(56), float64]) */;
  %67 = %66.0;
  %68 = cast(%67, dtype="int64") /* ty=Tensor[(10, 14, 16), int64] */;
  %69 = cast(%67, dtype="int64") /* ty=Tensor[(10, 14, 16), int64] */;
  %70 = reshape(%68, newshape=[10, 14, 16]) /* ty=Tensor[(10, 14, 16), int64] */;
  %71 = reshape(%69, newshape=[10, 14, 16]) /* ty=Tensor[(10, 14, 16), int64] */;
  %72 = @func_416(%70, %71) /* ty=(Tensor[(10, 14, 16), int64], Tensor[(8, 7, 8), float64], Tensor[(56), float64]) */;
  %73 = divide(%60, %61) /* ty=Tensor[(15, 13, 5), float64] */;
  %74 = %72.0;
  (%73, %67, meta[relay.Constant][4] /* ty=Tensor[(2240), int64] */, %74)
}

def @func_4623() -> (Tensor[(14, 10, 13), float64], Tensor[(560, 4), int64], Tensor[(1, 300), float64], Tensor[(504), float64], Tensor[(12, 14, 14), float64]) {
  @func_4621() /* ty=(Tensor[(14, 10, 13), float64], Tensor[(560, 4), int64], Tensor[(1, 300), float64], Tensor[(504), float64], Tensor[(12, 14, 14), float64]) */
}

def @func_7100() -> Tensor[(560, 4), float32] {
  %77 = fn () -> Tensor[(560, 4), float32] {
    %75 = @func_4728() /* ty=Tensor[(560, 4), float64] */;
    %76 = cast(%75, dtype="float32") /* ty=Tensor[(560, 4), float32] */;
    cosh(%76) /* ty=Tensor[(560, 4), float32] */
  };
  %77() /* ty=Tensor[(560, 4), float32] */
}

def @func_7064() -> Tensor[(300), float64] {
  @func_7062() /* ty=Tensor[(300), float64] */
}

def @func_10816(%var_10815: Tensor[(56, 1), float64]) -> (Tensor[(12, 14, 14), float64], Tensor[(2, 28), int8], Tensor[(56, 1), float64], Tensor[(12, 14, 14), float64], Tensor[(140, 16), uint16]) {
  %93 = fn (%var_10799: Tensor[(56, 1), float64]) -> (Tensor[(12, 14, 14), float64], Tensor[(2, 28), int8], Tensor[(56, 1), float64], Tensor[(12, 14, 14), float64], Tensor[(140, 16), uint16]) {
    %78 = @func_4232() /* ty=(Tensor[(12, 14, 14), float64],) */;
    %79 = cast(%var_10799, dtype="float64") /* ty=Tensor[(56, 1), float64] */;
    %80 = reshape(%79, newshape=[2, 28]) /* ty=Tensor[(2, 28), float64] */;
    %81 = @func_8585(%80) /* ty=(Tensor[(504), float64], Tensor[(2, 28), int8]) */;
    %82 = @func_9210() /* ty=(Tensor[(12, 14, 14), float64],) */;
    %83 = @func_7357() /* ty=(Tensor[(560, 4), int64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), bool], Tensor[(12, 14, 14), float64], Tensor[(140, 16), int64], Tensor[(12, 5, 11), float64], Tensor[(660), float64]) */;
    %84 = %83.4;
    %85 = cast(meta[relay.Constant][5] /* ty=Tensor[(140, 16), int64] */, dtype="uint16") /* ty=Tensor[(140, 16), uint16] */;
    %86 = shape_of(%84, dtype="int32") /* ty=Tensor[(2), int32] */;
    %87 = cast(%84, dtype="uint16") /* ty=Tensor[(140, 16), uint16] */;
    %88 = dyn.reshape(%85, %86, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
    %89 = %78.0;
    %90 = %81.1;
    %91 = %82.0;
    %92 = left_shift(%87, %88) /* ty=Tensor[(140, 16), uint16] */;
    (%89, %90, %var_10799, %91, %92)
  };
  %93(%var_10815) /* ty=(Tensor[(12, 14, 14), float64], Tensor[(2, 28), int8], Tensor[(56, 1), float64], Tensor[(12, 14, 14), float64], Tensor[(140, 16), uint16]) */
}

def @func_6526() -> (Tensor[(12, 14, 14), int64],) {
  %94 = @func_3757() /* ty=(Tensor[(12, 14, 14), int64],) */;
  %95 = %94.0;
  (%95,)
}

def @func_10034() -> Tensor[(12, 14, 14), int64] {
  @func_10032() /* ty=Tensor[(12, 14, 14), int64] */
}

def @func_8521(%var_8487: Tensor[(2, 80), float64]) -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64], Tensor[(2, 80), float64]) {
  %96 = @func_2241() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %97 = cast(%var_8487, dtype="float64") /* ty=Tensor[(2, 80), float64] */;
  %98 = reshape(%97, newshape=[160]) /* ty=Tensor[(160), float64] */;
  %99 = @func_6647(%98) /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64], Tensor[(10, 16, 1), float64], Tensor[(160), float64]) */;
  %100 = %99.1;
  %101 = cast(%100, dtype="float64") /* ty=Tensor[(12, 14, 14), float64] */;
  %102 = reshape(%101, newshape=[12, 14, 14]) /* ty=Tensor[(12, 14, 14), float64] */;
  %103 = @func_1469(%102) /* ty=(Tensor[(12, 14, 14), int64],) */;
  %104 = cast(%var_8487, dtype="float64") /* ty=Tensor[(2, 80), float64] */;
  %105 = %96.0;
  %106 = %103.0;
  %107 = cos(%104) /* ty=Tensor[(2, 80), float64] */;
  (%105, %100, %106, %107)
}

def @func_7779() -> (Tensor[(560, 4), float32],) {
  %108 = @func_6092() /* ty=Tensor[(560, 4), float32] */;
  (%108,)
}

def @func_10053() -> (Tensor[(12, 14, 14), float64],) {
  %111 = fn () -> (Tensor[(12, 14, 14), float64],) {
    %109 = @func_2241() /* ty=(Tensor[(12, 14, 14), float64],) */;
    %110 = %109.0;
    (%110,)
  };
  %111() /* ty=(Tensor[(12, 14, 14), float64],) */
}

def @func_10032() -> Tensor[(12, 14, 14), int64] {
  %112 = @func_5647() /* ty=(Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), float64]) */;
  %112.0
}

def @func_10699(%var_10697: Tensor[(13, 4, 2), uint16]) -> (Tensor[(13, 4, 2), bool], Tensor[(12, 14, 14), int64]) {
  @func_10696(%var_10697) /* ty=(Tensor[(13, 4, 2), bool], Tensor[(12, 14, 14), int64]) */
}

def @main(%var_11483: Tensor[(12, 14, 14), float64]) -> Tensor[(12, 14, 14), bool] {
  %113 = @func_3248() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) */;
  %114 = %113.1;
  %115 = cast(%var_11483, dtype="bool") /* ty=Tensor[(12, 14, 14), bool] */;
  %116 = shape_of(%114, dtype="int32") /* ty=Tensor[(3), int32] */;
  %117 = cast(%114, dtype="bool") /* ty=Tensor[(12, 14, 14), bool] */;
  %118 = dyn.reshape(%115, %116, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%117, %118) /* ty=Tensor[(12, 14, 14), bool] */
}

def @func_5275(%var_5273: Tensor[(6, 6, 15), float64]) -> (Tensor[(12, 14, 14), float64], Tensor[(6, 6, 15), bool]) {
  @func_5272(%var_5273) /* ty=(Tensor[(12, 14, 14), float64], Tensor[(6, 6, 15), bool]) */
}

def @func_2241() -> (Tensor[(12, 14, 14), float64],) {
  %119 = @func_1105() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %120 = %119.0;
  (%120,)
}

def @func_9599(%var_9478: Tensor[(160), float64], %var_9531: Tensor[(56), bool], %var_9551: Tensor[(560, 4), int64]) -> (Tensor[(12, 14, 14), float32], Tensor[(10, 16, 1), float64], Tensor[(160), float64], Tensor[(560, 4), float64], Tensor[(12, 14, 14), int64], Tensor[(56), bool], Tensor[(560, 4), float32]) {
  %121 = cast(%var_9478, dtype="float64") /* ty=Tensor[(160), float64] */;
  %122 = reshape(%121, newshape=[10, 16, 1]) /* ty=Tensor[(10, 16, 1), float64] */;
  %123 = @func_8319() /* ty=(Tensor[(560, 4), float64],) */;
  %124 = cast(%var_9531, dtype="bool") /* ty=Tensor[(56), bool] */;
  %125 = reshape(%124, newshape=[2, 28]) /* ty=Tensor[(2, 28), bool] */;
  %126 = @func_9336(%125) /* ty=(Tensor[(560, 4), int64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(2240), int64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64], Tensor[(2, 28), bool]) */;
  %127 = @func_7996() /* ty=(Tensor[(10, 14, 16), int64], Tensor[(56), float64], Tensor[(975), float64], Tensor[(560, 4), float32], Tensor[(12, 14, 14), float64], Tensor[(560, 4), int64], Tensor[(12, 14, 14), float64], Tensor[(560, 4), uint32]) */;
  %128 = %127.5;
  %129 = cast(%var_9551, dtype="float32") /* ty=Tensor[(560, 4), float32] */;
  %130 = shape_of(%128, dtype="int32") /* ty=Tensor[(2), int32] */;
  %131 = cast(%128, dtype="float32") /* ty=Tensor[(560, 4), float32] */;
  %132 = dyn.reshape(%129, %130, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %133 = @func_4402() /* ty=Tensor[(12, 14, 14), float32] */;
  %134 = @func_1509(%122) /* ty=Tensor[(10, 16, 1), float64] */;
  %135 = %123.0;
  %136 = %126.5;
  %137 = mod(%131, %132) /* ty=Tensor[(560, 4), float32] */;
  (%133, %134, %var_9478, %135, %136, %var_9531, %137)
}

def @func_3983() -> (Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), float64]) {
  %142 = fn () -> (Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), float64]) {
    %138 = @func_3000() /* ty=(Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), int64]) */;
    %139 = @func_2241() /* ty=(Tensor[(12, 14, 14), float64],) */;
    %140 = %138.1;
    %141 = %139.0;
    (%140, %141)
  };
  %142() /* ty=(Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), float64]) */
}

def @func_2529() -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), bool]) {
  %148 = fn () -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), bool]) {
    %143 = @func_2199() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(2, 28), float32]) */;
    %144 = %143.0;
    %145 = cast(%144, dtype="float64") /* ty=Tensor[(12, 14, 14), float64] */;
    %146 = reshape(%145, newshape=[12, 14, 14]) /* ty=Tensor[(12, 14, 14), float64] */;
    %147 = @func_2137(%146) /* ty=Tensor[(12, 14, 14), bool] */;
    (%144, %147)
  };
  %148() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), bool]) */
}

def @func_2919() -> Tensor[(12, 14, 14), float64] {
  @func_2917() /* ty=Tensor[(12, 14, 14), float64] */
}

def @func_6040() -> (Tensor[(12, 14, 14), float64], Tensor[(2, 28), float32]) {
  @func_6038() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(2, 28), float32]) */
}

def @func_7665() -> Tensor[(12, 14, 14), float64] {
  %149 = @func_3246() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) */;
  %149.1
}

def @func_574(%var_522: Tensor[(6, 10, 5), float64], %var_526: Tensor[(56, 1), float64], %var_528: Tensor[(56, 9), float64]) -> (Tensor[(8, 7, 8), float64], Tensor[(56, 9), uint32], Tensor[(8, 7, 8), float64], Tensor[(6, 10, 5), bool], Tensor[(6, 10, 5), float64]) {
  %150 = cast(%var_526, dtype="float64") /* ty=Tensor[(56, 1), float64] */;
  %151 = reshape(%150, newshape=[8, 7, 1]) /* ty=Tensor[(8, 7, 1), float64] */;
  %152 = cast(%var_526, dtype="uint32") /* ty=Tensor[(56, 1), uint32] */;
  %153 = cast(%var_528, dtype="uint32") /* ty=Tensor[(56, 9), uint32] */;
  %154 = cast(%var_526, dtype="float64") /* ty=Tensor[(56, 1), float64] */;
  %155 = reshape(%154, newshape=[8, 7, 1]) /* ty=Tensor[(8, 7, 1), float64] */;
  %156 = cast(%var_522, dtype="float64") /* ty=Tensor[(6, 10, 5), float64] */;
  %157 = sin(%156) /* ty=Tensor[(6, 10, 5), float64] */;
  %158 = cast(%var_522, dtype="float32") /* ty=Tensor[(6, 10, 5), float32] */;
  %159 = shape_of(%157, dtype="int32") /* ty=Tensor[(3), int32] */;
  %160 = cast(%157, dtype="float32") /* ty=Tensor[(6, 10, 5), float32] */;
  %161 = dyn.reshape(%158, %159, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %162 = power(%160, %161) /* ty=Tensor[(6, 10, 5), float32] */;
  %163 = cast(%162, dtype="bool") /* ty=Tensor[(6, 10, 5), bool] */;
  %164 = shape_of(%157, dtype="int32") /* ty=Tensor[(3), int32] */;
  %165 = cast(%157, dtype="bool") /* ty=Tensor[(6, 10, 5), bool] */;
  %166 = dyn.reshape(%163, %164, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %167 = cast(%162, dtype="float64") /* ty=Tensor[(6, 10, 5), float64] */;
  %168 = @func_71(%151) /* ty=Tensor[(8, 7, 8), float64] */;
  %169 = bitwise_xor(%152, %153) /* ty=Tensor[(56, 9), uint32] */;
  %170 = @func_71(%155) /* ty=Tensor[(8, 7, 8), float64] */;
  %171 = logical_and(%165, %166) /* ty=Tensor[(6, 10, 5), bool] */;
  %172 = asin(%167) /* ty=Tensor[(6, 10, 5), float64] */;
  (%168, %169, %170, %171, %172)
}

def @func_2619(%var_2617: Tensor[(160), float64]) -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(56), float64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(10, 16, 1), float64], Tensor[(160), float64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), bool], Tensor[(12, 14, 14), float64], Tensor[(13, 7, 7), int8], Tensor[(637), int8]) {
  @func_2616(%var_2617) /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(56), float64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(10, 16, 1), float64], Tensor[(160), float64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), bool], Tensor[(12, 14, 14), float64], Tensor[(13, 7, 7), int8], Tensor[(637), int8]) */
}

def @func_7996() -> (Tensor[(10, 14, 16), int64], Tensor[(56), float64], Tensor[(975), float64], Tensor[(560, 4), float32], Tensor[(12, 14, 14), float64], Tensor[(560, 4), int64], Tensor[(12, 14, 14), float64], Tensor[(560, 4), uint32]) {
  %173 = cast(meta[relay.Constant][6] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
  %174 = @func_7099() /* ty=Tensor[(560, 4), float32] */;
  %175 = cast(meta[relay.Constant][7] /* ty=Tensor[(560, 4), float32] */, dtype="bool") /* ty=Tensor[(560, 4), bool] */;
  %176 = shape_of(%174, dtype="int32") /* ty=Tensor[(2), int32] */;
  %177 = cast(%174, dtype="bool") /* ty=Tensor[(560, 4), bool] */;
  %178 = dyn.reshape(%175, %176, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %179 = not_equal(%177, %178) /* ty=Tensor[(560, 4), bool] */;
  %180 = cast(%179, dtype="float32") /* ty=Tensor[(560, 4), float32] */;
  %181 = sqrt(%180) /* ty=Tensor[(560, 4), float32] */;
  %182 = cast(%181, dtype="int64") /* ty=Tensor[(560, 4), int64] */;
  %183 = cast(meta[relay.Constant][8] /* ty=Tensor[(975), float64] */, dtype="float64") /* ty=Tensor[(975), float64] */;
  %184 = reshape(%173, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %185 = reshape(%182, newshape=[2240]) /* ty=Tensor[(2240), int64] */;
  %186 = reshape(%183, newshape=[975]) /* ty=Tensor[(975), float64] */;
  %187 = @func_1385(%184, %185, %186) /* ty=(Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), float64], Tensor[(56), float64], Tensor[(8, 7, 8), float64], Tensor[(2240), int64], Tensor[(10, 14, 16), int64], Tensor[(75), float64], Tensor[(975), float64]) */;
  %188 = cast(%174, dtype="float32") /* ty=Tensor[(560, 4), float32] */;
  %189 = @func_6221() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(560, 4), int64], Tensor[(14, 10, 13), float64]) */;
  %190 = @func_5091() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) */;
  %191 = cast(%174, dtype="bool") /* ty=Tensor[(560, 4), bool] */;
  %192 = shape_of(%181, dtype="int32") /* ty=Tensor[(2), int32] */;
  %193 = cast(%181, dtype="bool") /* ty=Tensor[(560, 4), bool] */;
  %194 = dyn.reshape(%191, %192, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %195 = equal(%193, %194) /* ty=Tensor[(560, 4), bool] */;
  %196 = cast(%195, dtype="uint32") /* ty=Tensor[(560, 4), uint32] */;
  %197 = shape_of(%181, dtype="int32") /* ty=Tensor[(2), int32] */;
  %198 = cast(%181, dtype="uint32") /* ty=Tensor[(560, 4), uint32] */;
  %199 = dyn.reshape(%196, %197, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %200 = %187.5;
  %201 = atan(%188) /* ty=Tensor[(560, 4), float32] */;
  %202 = @func_2015() /* ty=Tensor[(12, 14, 14), float64] */;
  %203 = %189.2;
  %204 = %190.0;
  %205 = left_shift(%198, %199) /* ty=Tensor[(560, 4), uint32] */;
  (%200, meta[relay.Constant][6] /* ty=Tensor[(56), float64] */, meta[relay.Constant][8] /* ty=Tensor[(975), float64] */, %201, %202, %203, %204, %205)
}

def @func_2243() -> (Tensor[(12, 14, 14), float64],) {
  @func_2241() /* ty=(Tensor[(12, 14, 14), float64],) */
}

def @func_8388() -> (Tensor[(560, 4), float32], Tensor[(560, 4), float64]) {
  %206 = @func_7774() /* ty=(Tensor[(560, 4), float64], Tensor[(12, 5, 11), float64]) */;
  %207 = @func_7099() /* ty=Tensor[(560, 4), float32] */;
  %208 = %206.0;
  (%207, %208)
}

def @func_5246(%var_5244: Tensor[(2352), float64]) -> (Tensor[(56), float64], Tensor[(12, 14, 14), int64], Tensor[(2352), float64]) {
  @func_5243(%var_5244) /* ty=(Tensor[(56), float64], Tensor[(12, 14, 14), int64], Tensor[(2352), float64]) */
}

def @func_3758() -> (Tensor[(12, 14, 14), int64],) {
  %211 = fn () -> (Tensor[(12, 14, 14), int64],) {
    %209 = @func_3000() /* ty=(Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), int64]) */;
    %210 = %209.1;
    (%210,)
  };
  %211() /* ty=(Tensor[(12, 14, 14), int64],) */
}

def @func_3956() -> Tensor[(12, 14, 14), float64] {
  @func_3954() /* ty=Tensor[(12, 14, 14), float64] */
}

def @func_8438() -> (Tensor[(560, 4), bool], Tensor[(12, 14, 14), float64]) {
  %216 = fn () -> (Tensor[(560, 4), bool], Tensor[(12, 14, 14), float64]) {
    %212 = @func_7598() /* ty=(Tensor[(560, 4), bool], Tensor[(10, 16, 1), float64], Tensor[(160), float64]) */;
    %213 = @func_2649() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) */;
    %214 = %212.0;
    %215 = %213.1;
    (%214, %215)
  };
  %216() /* ty=(Tensor[(560, 4), bool], Tensor[(12, 14, 14), float64]) */
}

def @func_3411() -> (Tensor[(12, 14, 14), float64],) {
  %219 = fn () -> (Tensor[(12, 14, 14), float64],) {
    %217 = @func_2984() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(10, 14, 16), int64], Tensor[(140, 16), int64]) */;
    %218 = %217.0;
    (%218,)
  };
  %219() /* ty=(Tensor[(12, 14, 14), float64],) */
}

def @func_5721() -> (Tensor[(12, 14, 14), float64], Tensor[(560, 4), float64]) {
  @func_5719() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(560, 4), float64]) */
}

def @func_10530() -> (Tensor[(2, 28), bool], Tensor[(12, 14, 14), float64], Tensor[(2, 28), float32], Tensor[(2240), int64]) {
  @func_10528() /* ty=(Tensor[(2, 28), bool], Tensor[(12, 14, 14), float64], Tensor[(2, 28), float32], Tensor[(2240), int64]) */
}

def @func_5719() -> (Tensor[(12, 14, 14), float64], Tensor[(560, 4), float64]) {
  %220 = @func_4370() /* ty=Tensor[(12, 14, 14), float64] */;
  %221 = @func_4728() /* ty=Tensor[(560, 4), float64] */;
  (%220, %221)
}

def @func_1182() -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) {
  @func_1180() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) */
}

def @func_9426() -> Tensor[(12, 14, 14), float64] {
  @func_9424() /* ty=Tensor[(12, 14, 14), float64] */
}

def @func_2495() -> Tensor[(12, 14, 14), float64] {
  %222 = @func_1627() /* ty=(Tensor[(12, 14, 14), bool], Tensor[(8, 7, 8), float64], Tensor[(12, 14, 14), float64]) */;
  %222.2
}

def @func_2110() -> (Tensor[(560, 4), int64],) {
  @func_2108() /* ty=(Tensor[(560, 4), int64],) */
}

def @func_1978() -> (Tensor[(12, 14, 14), float64], Tensor[(56), float64], Tensor[(2, 28), float64], Tensor[(2240), int64], Tensor[(65, 15), float64]) {
  %223 = @func_1180() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) */;
  %224 = cast(meta[relay.Constant][9] /* ty=Tensor[(2, 28), float64] */, dtype="float64") /* ty=Tensor[(2, 28), float64] */;
  %225 = cast(meta[relay.Constant][10] /* ty=Tensor[(2240), int64] */, dtype="int64") /* ty=Tensor[(2240), int64] */;
  %226 = cast(meta[relay.Constant][11] /* ty=Tensor[(65, 15), float64] */, dtype="float64") /* ty=Tensor[(65, 15), float64] */;
  %227 = reshape(%224, newshape=[56]) /* ty=Tensor[(56), float64] */;
  %228 = reshape(%225, newshape=[2240]) /* ty=Tensor[(2240), int64] */;
  %229 = reshape(%226, newshape=[975]) /* ty=Tensor[(975), float64] */;
  %230 = @func_1385(%227, %228, %229) /* ty=(Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), float64], Tensor[(56), float64], Tensor[(8, 7, 8), float64], Tensor[(2240), int64], Tensor[(10, 14, 16), int64], Tensor[(75), float64], Tensor[(975), float64]) */;
  %231 = %223.0;
  %232 = %230.2;
  (%231, %232, meta[relay.Constant][9] /* ty=Tensor[(2, 28), float64] */, meta[relay.Constant][10] /* ty=Tensor[(2240), int64] */, meta[relay.Constant][11] /* ty=Tensor[(65, 15), float64] */)
}

def @func_4371() -> Tensor[(12, 14, 14), float64] {
  %234 = fn () -> Tensor[(12, 14, 14), float64] {
    %233 = @func_2649() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) */;
    %233.1
  };
  %234() /* ty=Tensor[(12, 14, 14), float64] */
}

def @func_1222() -> (Tensor[(12, 14, 14), float64],) {
  @func_1220() /* ty=(Tensor[(12, 14, 14), float64],) */
}

def @func_805(%var_803: Tensor[(15, 1, 5), float64], %var_804: Tensor[(15, 13, 5), float64]) -> (Tensor[(15, 13, 5), float64], Tensor[(10, 14, 16), int64], Tensor[(2240), int64], Tensor[(10, 14, 16), int64]) {
  @func_801(%var_803, %var_804) /* ty=(Tensor[(15, 13, 5), float64], Tensor[(10, 14, 16), int64], Tensor[(2240), int64], Tensor[(10, 14, 16), int64]) */
}

def @func_3660(%var_3659: Tensor[(1, 8, 3), float32]) -> Tensor[(1, 8, 3), float32] {
  %236 = fn (%var_3653: Tensor[(1, 8, 3), float32]) -> Tensor[(1, 8, 3), float32] {
    %235 = cast(%var_3653, dtype="float32") /* ty=Tensor[(1, 8, 3), float32] */;
    asinh(%235) /* ty=Tensor[(1, 8, 3), float32] */
  };
  %236(%var_3659) /* ty=Tensor[(1, 8, 3), float32] */
}

def @func_11091(%var_11090: Tensor[(2, 1560), uint16]) -> (Tensor[(2, 28), float64], Tensor[(15, 16, 13), uint16]) {
  %248 = fn (%var_11070: Tensor[(2, 1560), uint16]) -> (Tensor[(2, 28), float64], Tensor[(15, 16, 13), uint16]) {
    %237 = @func_6820() /* ty=(Tensor[(2, 28), float64],) */;
    %238 = cast(%var_11070, dtype="uint16") /* ty=Tensor[(2, 1560), uint16] */;
    %239 = reshape(%238, newshape=[15, 16, 13]) /* ty=Tensor[(15, 16, 13), uint16] */;
    %240 = @func_2724(%239) /* ty=(Tensor[(15, 16, 13), float32], Tensor[(15, 16, 13), float32]) */;
    %241 = %240.0;
    %242 = cast(%var_11070, dtype="uint16") /* ty=Tensor[(2, 1560), uint16] */;
    %243 = shape_of(%241, dtype="int32") /* ty=Tensor[(3), int32] */;
    %244 = cast(%241, dtype="uint16") /* ty=Tensor[(15, 16, 13), uint16] */;
    %245 = dyn.reshape(%242, %243, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %246 = %237.0;
    %247 = minimum(%244, %245) /* ty=Tensor[(15, 16, 13), uint16] */;
    (%246, %247)
  };
  %248(%var_11090) /* ty=(Tensor[(2, 28), float64], Tensor[(15, 16, 13), uint16]) */
}

def @func_3627() -> Tensor[(12, 14, 14), float64] {
  @func_3625() /* ty=Tensor[(12, 14, 14), float64] */
}

def @func_3001() -> (Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), int64]) {
  %255 = fn () -> (Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), int64]) {
    %249 = @func_2354() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64]) */;
    %250 = %249.1;
    %251 = cast(%250, dtype="float64") /* ty=Tensor[(12, 14, 14), float64] */;
    %252 = reshape(%251, newshape=[12, 14, 14]) /* ty=Tensor[(12, 14, 14), float64] */;
    %253 = @func_1469(%252) /* ty=(Tensor[(12, 14, 14), int64],) */;
    %254 = %253.0;
    (%250, %254)
  };
  %255() /* ty=(Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), int64]) */
}

def @func_6430() -> (Tensor[(140, 16), int64],) {
  %258 = fn () -> (Tensor[(140, 16), int64],) {
    %256 = @func_2984() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(10, 14, 16), int64], Tensor[(140, 16), int64]) */;
    %257 = %256.2;
    (%257,)
  };
  %258() /* ty=(Tensor[(140, 16), int64],) */
}

def @func_7844(%var_7842: Tensor[(2240), float64]) -> (Tensor[(12, 14, 14), float64], Tensor[(560, 4), int8]) {
  @func_7841(%var_7842) /* ty=(Tensor[(12, 14, 14), float64], Tensor[(560, 4), int8]) */
}

def @func_8684(%var_8682: Tensor[(14, 8, 3), float32]) -> (Tensor[(14, 8, 3), int16], Tensor[(560, 4), float32]) {
  @func_8681(%var_8682) /* ty=(Tensor[(14, 8, 3), int16], Tensor[(560, 4), float32]) */
}

def @func_1843() -> (Tensor[(12, 14, 14), float64], Tensor[(56), float64]) {
  %259 = @func_1627() /* ty=(Tensor[(12, 14, 14), bool], Tensor[(8, 7, 8), float64], Tensor[(12, 14, 14), float64]) */;
  %260 = @func_1581() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), float64], Tensor[(56), float64], Tensor[(8, 7, 8), float64], Tensor[(560, 4), int64], Tensor[(975), float64]) */;
  %261 = %259.2;
  %262 = %260.2;
  (%261, %262)
}

def @func_10451() -> (Tensor[(12, 14, 14), float64],) {
  @func_10449() /* ty=(Tensor[(12, 14, 14), float64],) */
}

def @func_4333() -> (Tensor[(12, 14, 14), float64],) {
  %263 = @func_3954() /* ty=Tensor[(12, 14, 14), float64] */;
  (%263,)
}

def @func_8390() -> (Tensor[(560, 4), float32], Tensor[(560, 4), float64]) {
  @func_8388() /* ty=(Tensor[(560, 4), float32], Tensor[(560, 4), float64]) */
}

def @func_7774() -> (Tensor[(560, 4), float64], Tensor[(12, 5, 11), float64]) {
  %264 = @func_7357() /* ty=(Tensor[(560, 4), int64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), bool], Tensor[(12, 14, 14), float64], Tensor[(140, 16), int64], Tensor[(12, 5, 11), float64], Tensor[(660), float64]) */;
  %265 = @func_4728() /* ty=Tensor[(560, 4), float64] */;
  %266 = %264.5;
  (%265, %266)
}

def @func_6221() -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(560, 4), int64], Tensor[(14, 10, 13), float64]) {
  %267 = @func_3410() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %268 = %267.0;
  %269 = cast(%268, dtype="float64") /* ty=Tensor[(12, 14, 14), float64] */;
  %270 = @func_2241() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %271 = @func_5888() /* ty=(Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), bool], Tensor[(560, 4), int64]) */;
  %272 = @func_4621() /* ty=(Tensor[(14, 10, 13), float64], Tensor[(560, 4), int64], Tensor[(1, 300), float64], Tensor[(504), float64], Tensor[(12, 14, 14), float64]) */;
  %273 = tan(%269) /* ty=Tensor[(12, 14, 14), float64] */;
  %274 = %270.0;
  %275 = %271.3;
  %276 = %272.0;
  (%273, %274, %275, %276)
}

def @func_5595() -> Tensor[(2, 28), float32] {
  @func_5593() /* ty=Tensor[(2, 28), float32] */
}

def @func_3737() -> (Tensor[(12, 14, 14), float64], Tensor[(560, 4), int64], Tensor[(12, 14, 14), bool]) {
  %283 = fn () -> (Tensor[(12, 14, 14), float64], Tensor[(560, 4), int64], Tensor[(12, 14, 14), bool]) {
    %277 = @func_3246() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) */;
    %278 = @func_2108() /* ty=(Tensor[(560, 4), int64],) */;
    %279 = @func_1627() /* ty=(Tensor[(12, 14, 14), bool], Tensor[(8, 7, 8), float64], Tensor[(12, 14, 14), float64]) */;
    %280 = %277.1;
    %281 = %278.0;
    %282 = %279.0;
    (%280, %281, %282)
  };
  %283() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(560, 4), int64], Tensor[(12, 14, 14), bool]) */
}

def @func_6820() -> (Tensor[(2, 28), float64],) {
  %284 = @func_5767() /* ty=(Tensor[(12, 14, 14), bool], Tensor[(12, 14, 14), float64], Tensor[(560, 4), int64], Tensor[(2, 28), float64]) */;
  %285 = %284.3;
  (%285,)
}

def @func_2727(%var_2725: Tensor[(15, 16, 13), uint16]) -> (Tensor[(15, 16, 13), float32], Tensor[(15, 16, 13), float32]) {
  @func_2724(%var_2725) /* ty=(Tensor[(15, 16, 13), float32], Tensor[(15, 16, 13), float32]) */
}

def @func_5890() -> (Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), bool], Tensor[(560, 4), int64]) {
  @func_5888() /* ty=(Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), bool], Tensor[(560, 4), int64]) */
}

def @func_1180() -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) {
  %286 = @func_1105() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %287 = %286.0;
  %288 = cast(%287, dtype="float64") /* ty=Tensor[(12, 14, 14), float64] */;
  %289 = exp(%288) /* ty=Tensor[(12, 14, 14), float64] */;
  %290 = cast(%289, dtype="float64") /* ty=Tensor[(12, 14, 14), float64] */;
  %291 = acos(%290) /* ty=Tensor[(12, 14, 14), float64] */;
  %292 = cast(%291, dtype="float64") /* ty=Tensor[(12, 14, 14), float64] */;
  %293 = @func_1105() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %294 = rsqrt(%292) /* ty=Tensor[(12, 14, 14), float64] */;
  %295 = %293.0;
  (%294, %295)
}

def @func_1728() -> (Tensor[(560, 4), float64],) {
  %303 = fn () -> (Tensor[(560, 4), float64],) {
    %296 = @func_1581() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), float64], Tensor[(56), float64], Tensor[(8, 7, 8), float64], Tensor[(560, 4), int64], Tensor[(975), float64]) */;
    %297 = %296.4;
    %298 = cast(meta[relay.Constant][12] /* ty=Tensor[(560, 4), int64] */, dtype="float64") /* ty=Tensor[(560, 4), float64] */;
    %299 = shape_of(%297, dtype="int32") /* ty=Tensor[(2), int32] */;
    %300 = cast(%297, dtype="float64") /* ty=Tensor[(560, 4), float64] */;
    %301 = dyn.reshape(%298, %299, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %302 = floor_mod(%300, %301) /* ty=Tensor[(560, 4), float64] */;
    (%302,)
  };
  %303() /* ty=(Tensor[(560, 4), float64],) */
}

def @func_8937() -> Tensor[(12, 14, 14), bool] {
  %304 = @func_1627() /* ty=(Tensor[(12, 14, 14), bool], Tensor[(8, 7, 8), float64], Tensor[(12, 14, 14), float64]) */;
  %304.0
}

def @func_4803() -> (Tensor[(12, 14, 14), int64], Tensor[(13, 7, 7), int8], Tensor[(637), int8]) {
  %313 = fn () -> (Tensor[(12, 14, 14), int64], Tensor[(13, 7, 7), int8], Tensor[(637), int8]) {
    %305 = @func_3757() /* ty=(Tensor[(12, 14, 14), int64],) */;
    %306 = cast(meta[relay.Constant][13] /* ty=Tensor[(637), int8] */, dtype="int8") /* ty=Tensor[(637), int8] */;
    %307 = cast(meta[relay.Constant][13] /* ty=Tensor[(637), int8] */, dtype="int8") /* ty=Tensor[(637), int8] */;
    %308 = reshape(%306, newshape=[13, 7, 7]) /* ty=Tensor[(13, 7, 7), int8] */;
    %309 = reshape(%307, newshape=[13, 7, 7]) /* ty=Tensor[(13, 7, 7), int8] */;
    %310 = @func_1814(%308, %309) /* ty=(Tensor[(13, 7, 7), int8],) */;
    %311 = %305.0;
    %312 = %310.0;
    (%311, %312, meta[relay.Constant][13] /* ty=Tensor[(637), int8] */)
  };
  %313() /* ty=(Tensor[(12, 14, 14), int64], Tensor[(13, 7, 7), int8], Tensor[(637), int8]) */
}

def @func_1582() -> (Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), float64], Tensor[(56), float64], Tensor[(8, 7, 8), float64], Tensor[(560, 4), int64], Tensor[(975), float64]) {
  %329 = fn () -> (Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), float64], Tensor[(56), float64], Tensor[(8, 7, 8), float64], Tensor[(560, 4), int64], Tensor[(975), float64]) {
    %314 = @func_1180() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) */;
    %315 = %314.0;
    %316 = cast(%315, dtype="float64") /* ty=Tensor[(12, 14, 14), float64] */;
    %317 = cast(meta[relay.Constant][14] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
    %318 = reshape(%317, newshape=[8, 7, 1]) /* ty=Tensor[(8, 7, 1), float64] */;
    %319 = cast(meta[relay.Constant][14] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
    %320 = cast(meta[relay.Constant][15] /* ty=Tensor[(560, 4), int64] */, dtype="int64") /* ty=Tensor[(560, 4), int64] */;
    %321 = cast(meta[relay.Constant][16] /* ty=Tensor[(975), float64] */, dtype="float64") /* ty=Tensor[(975), float64] */;
    %322 = reshape(%319, newshape=[56]) /* ty=Tensor[(56), float64] */;
    %323 = reshape(%320, newshape=[2240]) /* ty=Tensor[(2240), int64] */;
    %324 = reshape(%321, newshape=[975]) /* ty=Tensor[(975), float64] */;
    %325 = @func_1385(%322, %323, %324) /* ty=(Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), float64], Tensor[(56), float64], Tensor[(8, 7, 8), float64], Tensor[(2240), int64], Tensor[(10, 14, 16), int64], Tensor[(75), float64], Tensor[(975), float64]) */;
    %326 = log10(%316) /* ty=Tensor[(12, 14, 14), float64] */;
    %327 = @func_71(%318) /* ty=Tensor[(8, 7, 8), float64] */;
    %328 = %325.1;
    (%326, %327, meta[relay.Constant][14] /* ty=Tensor[(56), float64] */, %328, meta[relay.Constant][15] /* ty=Tensor[(560, 4), int64] */, meta[relay.Constant][16] /* ty=Tensor[(975), float64] */)
  };
  %329() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), float64], Tensor[(56), float64], Tensor[(8, 7, 8), float64], Tensor[(560, 4), int64], Tensor[(975), float64]) */
}

def @func_4651() -> (Tensor[(300), float64],) {
  %330 = @func_3099() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(300), float64], Tensor[(5, 60), float64], Tensor[(12, 14, 14), float64]) */;
  %331 = %330.1;
  (%331,)
}

def @func_4080(%var_4073: Tensor[(1, 300), float64]) -> (Tensor[(2240), float32], Tensor[(56), float64], Tensor[(1, 300), float64]) {
  %332 = @func_2146() /* ty=Tensor[(2240), int64] */;
  %333 = cast(%332, dtype="float64") /* ty=Tensor[(2240), float64] */;
  %334 = log(%333) /* ty=Tensor[(2240), float64] */;
  %335 = cast(%334, dtype="float32") /* ty=Tensor[(2240), float32] */;
  %336 = shape_of(%332, dtype="int32") /* ty=Tensor[(1), int32] */;
  %337 = cast(%332, dtype="float32") /* ty=Tensor[(2240), float32] */;
  %338 = dyn.reshape(%335, %336, newshape=[]) /* ty=Tensor[(?), float32] */;
  %339 = cast(%var_4073, dtype="float64") /* ty=Tensor[(1, 300), float64] */;
  %340 = reshape(%339, newshape=[300]) /* ty=Tensor[(300), float64] */;
  %341 = @func_2876(%340) /* ty=(Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), float64], Tensor[(300), float64], Tensor[(56), float64], Tensor[(6, 84), float64]) */;
  %342 = floor_mod(%337, %338) /* ty=Tensor[(2240), float32] */;
  %343 = %341.3;
  (%342, %343, %var_4073)
}

def @func_4163() -> (Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), float32], Tensor[(56), float64], Tensor[(50, 6), float64]) {
  %351 = fn () -> (Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), float32], Tensor[(56), float64], Tensor[(50, 6), float64]) {
    %344 = @func_3000() /* ty=(Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), int64]) */;
    %345 = cast(meta[relay.Constant][17] /* ty=Tensor[(50, 6), float64] */, dtype="float64") /* ty=Tensor[(50, 6), float64] */;
    %346 = reshape(%345, newshape=[300]) /* ty=Tensor[(300), float64] */;
    %347 = @func_2876(%346) /* ty=(Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), float64], Tensor[(300), float64], Tensor[(56), float64], Tensor[(6, 84), float64]) */;
    %348 = %344.1;
    %349 = @func_3860() /* ty=Tensor[(12, 14, 14), float32] */;
    %350 = %347.3;
    (%348, %349, %350, meta[relay.Constant][17] /* ty=Tensor[(50, 6), float64] */)
  };
  %351() /* ty=(Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), float32], Tensor[(56), float64], Tensor[(50, 6), float64]) */
}

def @func_5769() -> (Tensor[(12, 14, 14), bool], Tensor[(12, 14, 14), float64], Tensor[(560, 4), int64], Tensor[(2, 28), float64]) {
  @func_5767() /* ty=(Tensor[(12, 14, 14), bool], Tensor[(12, 14, 14), float64], Tensor[(560, 4), int64], Tensor[(2, 28), float64]) */
}

def @func_1105() -> (Tensor[(12, 14, 14), float64],) {
  %352 = cast(meta[relay.Constant][18] /* ty=Tensor[(12, 14, 14), float64] */, dtype="float64") /* ty=Tensor[(12, 14, 14), float64] */;
  %353 = sqrt(%352) /* ty=Tensor[(12, 14, 14), float64] */;
  (%353,)
}

def @func_7357() -> (Tensor[(560, 4), int64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), bool], Tensor[(12, 14, 14), float64], Tensor[(140, 16), int64], Tensor[(12, 5, 11), float64], Tensor[(660), float64]) {
  %354 = @func_2108() /* ty=(Tensor[(560, 4), int64],) */;
  %355 = @func_2649() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) */;
  %356 = @func_1627() /* ty=(Tensor[(12, 14, 14), bool], Tensor[(8, 7, 8), float64], Tensor[(12, 14, 14), float64]) */;
  %357 = @func_4957() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %358 = @func_6518() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(140, 16), int64], Tensor[(65, 15), float32], Tensor[(2240), int64], Tensor[(56, 1), float64]) */;
  %359 = cast(meta[relay.Constant][19] /* ty=Tensor[(660), float64] */, dtype="float64") /* ty=Tensor[(660), float64] */;
  %360 = reshape(%359, newshape=[12, 5, 11]) /* ty=Tensor[(12, 5, 11), float64] */;
  %361 = @func_3797(%360) /* ty=(Tensor[(12, 5, 11), float64], Tensor[(12, 14, 14), bool], Tensor[(2352), float64], Tensor[(12, 14, 14), bool]) */;
  %362 = %354.0;
  %363 = %355.0;
  %364 = %356.0;
  %365 = %357.0;
  %366 = %358.1;
  %367 = %361.0;
  (%362, %363, %364, %365, %366, %367, meta[relay.Constant][19] /* ty=Tensor[(660), float64] */)
}

def @func_2986() -> (Tensor[(12, 14, 14), float64], Tensor[(10, 14, 16), int64], Tensor[(140, 16), int64]) {
  @func_2984() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(10, 14, 16), int64], Tensor[(140, 16), int64]) */
}

def @func_9937() -> (Tensor[(12, 14, 14), float64],) {
  %370 = fn () -> (Tensor[(12, 14, 14), float64],) {
    %368 = @func_4957() /* ty=(Tensor[(12, 14, 14), float64],) */;
    %369 = %368.0;
    (%369,)
  };
  %370() /* ty=(Tensor[(12, 14, 14), float64],) */
}

def @func_7841(%var_7822: Tensor[(2240), float64]) -> (Tensor[(12, 14, 14), float64], Tensor[(560, 4), int8]) {
  %371 = cast(%var_7822, dtype="float64") /* ty=Tensor[(2240), float64] */;
  %372 = reshape(%371, newshape=[560, 4]) /* ty=Tensor[(560, 4), float64] */;
  %373 = @func_3137(%372) /* ty=(Tensor[(65, 15), float64], Tensor[(560, 4), bool]) */;
  %374 = %373.1;
  %375 = cast(%var_7822, dtype="int8") /* ty=Tensor[(2240), int8] */;
  %376 = shape_of(%374, dtype="int32") /* ty=Tensor[(2), int32] */;
  %377 = cast(%374, dtype="int8") /* ty=Tensor[(560, 4), int8] */;
  %378 = dyn.reshape(%375, %376, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %379 = @func_4370() /* ty=Tensor[(12, 14, 14), float64] */;
  %380 = right_shift(%377, %378) /* ty=Tensor[(560, 4), int8] */;
  (%379, %380)
}

def @func_7764(%var_7763: Tensor[(14, 4), float64]) -> (Tensor[(12, 14, 14), float64], Tensor[(8, ?, 7), uint16], Tensor[(14, 4), float64]) {
  %386 = fn (%var_7739: Tensor[(14, 4), float64]) -> (Tensor[(12, 14, 14), float64], Tensor[(8, ?, 7), uint16], Tensor[(14, 4), float64]) {
    %381 = cast(%var_7739, dtype="float64") /* ty=Tensor[(14, 4), float64] */;
    %382 = reshape(%381, newshape=[8, 1, 7]) /* ty=Tensor[(8, 1, 7), float64] */;
    %383 = @func_6774(%382) /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), float64], Tensor[(8, ?, 7), uint16]) */;
    %384 = @func_3625() /* ty=Tensor[(12, 14, 14), float64] */;
    %385 = %383.3;
    (%384, %385, %var_7739)
  };
  %386(%var_7763) /* ty=(Tensor[(12, 14, 14), float64], Tensor[(8, ?, 7), uint16], Tensor[(14, 4), float64]) */
}

def @func_9260() -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) {
  %390 = fn () -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) {
    %387 = @func_6304() /* ty=(Tensor[(12, 14, 14), float64],) */;
    %388 = %387.0;
    %389 = @func_4483() /* ty=Tensor[(12, 14, 14), float64] */;
    (%388, %389)
  };
  %390() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) */
}

def @func_4484() -> Tensor[(12, 14, 14), float64] {
  %392 = fn () -> Tensor[(12, 14, 14), float64] {
    %391 = @func_3246() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) */;
    %391.1
  };
  %392() /* ty=Tensor[(12, 14, 14), float64] */
}

def @func_6289(%var_6286: Tensor[(75), float64], %var_6287: Tensor[(975), float64], %var_6288: Tensor[(975), float64]) -> (Tensor[(12, 14, 14), float64], Tensor[(10, 14, 16), int64], Tensor[(75), float64], Tensor[(975), bool]) {
  %405 = fn (%var_6249: Tensor[(75), float64], %var_6250: Tensor[(975), float64], %var_6276: Tensor[(975), float64]) -> (Tensor[(12, 14, 14), float64], Tensor[(10, 14, 16), int64], Tensor[(75), float64], Tensor[(975), bool]) {
    %393 = cast(%var_6249, dtype="float64") /* ty=Tensor[(75), float64] */;
    %394 = cast(%var_6250, dtype="float64") /* ty=Tensor[(975), float64] */;
    %395 = reshape(%393, newshape=[15, 1, 5]) /* ty=Tensor[(15, 1, 5), float64] */;
    %396 = reshape(%394, newshape=[15, 13, 5]) /* ty=Tensor[(15, 13, 5), float64] */;
    %397 = @func_801(%395, %396) /* ty=(Tensor[(15, 13, 5), float64], Tensor[(10, 14, 16), int64], Tensor[(2240), int64], Tensor[(10, 14, 16), int64]) */;
    %398 = cast(%var_6276, dtype="bool") /* ty=Tensor[(975), bool] */;
    %399 = shape_of(%var_6250, dtype="int32") /* ty=Tensor[(1), int32] */;
    %400 = cast(%var_6250, dtype="bool") /* ty=Tensor[(975), bool] */;
    %401 = dyn.reshape(%398, %399, newshape=[]) /* ty=Tensor[(?), bool] */;
    %402 = @func_3625() /* ty=Tensor[(12, 14, 14), float64] */;
    %403 = %397.3;
    %404 = greater(%400, %401) /* ty=Tensor[(975), bool] */;
    (%402, %403, %var_6249, %404)
  };
  %405(%var_6286, %var_6287, %var_6288) /* ty=(Tensor[(12, 14, 14), float64], Tensor[(10, 14, 16), int64], Tensor[(75), float64], Tensor[(975), bool]) */
}

def @func_3140(%var_3138: Tensor[(560, 4), float64]) -> (Tensor[(65, 15), float64], Tensor[(560, 4), bool]) {
  @func_3137(%var_3138) /* ty=(Tensor[(65, 15), float64], Tensor[(560, 4), bool]) */
}

def @func_2876(%var_2864: Tensor[(300), float64]) -> (Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), float64], Tensor[(300), float64], Tensor[(56), float64], Tensor[(6, 84), float64]) {
  %406 = @func_2241() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %407 = cast(%var_2864, dtype="float64") /* ty=Tensor[(300), float64] */;
  %408 = cast(meta[relay.Constant][20] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
  %409 = cast(meta[relay.Constant][21] /* ty=Tensor[(6, 84), float64] */, dtype="float64") /* ty=Tensor[(6, 84), float64] */;
  %410 = reshape(%407, newshape=[6, 10, 5]) /* ty=Tensor[(6, 10, 5), float64] */;
  %411 = reshape(%408, newshape=[56, 1]) /* ty=Tensor[(56, 1), float64] */;
  %412 = reshape(%409, newshape=[56, 9]) /* ty=Tensor[(56, 9), float64] */;
  %413 = @func_574(%410, %411, %412) /* ty=(Tensor[(8, 7, 8), float64], Tensor[(56, 9), uint32], Tensor[(8, 7, 8), float64], Tensor[(6, 10, 5), bool], Tensor[(6, 10, 5), float64]) */;
  %414 = %406.0;
  %415 = %413.0;
  (%414, %415, %var_2864, meta[relay.Constant][20] /* ty=Tensor[(56), float64] */, meta[relay.Constant][21] /* ty=Tensor[(6, 84), float64] */)
}

def @func_4335() -> (Tensor[(12, 14, 14), float64],) {
  @func_4333() /* ty=(Tensor[(12, 14, 14), float64],) */
}

def @func_10528() -> (Tensor[(2, 28), bool], Tensor[(12, 14, 14), float64], Tensor[(2, 28), float32], Tensor[(2240), int64]) {
  %416 = @func_10329() /* ty=Tensor[(2, 28), float32] */;
  %417 = cast(meta[relay.Constant][22] /* ty=Tensor[(2, 28), float32] */, dtype="bool") /* ty=Tensor[(2, 28), bool] */;
  %418 = shape_of(%416, dtype="int32") /* ty=Tensor[(2), int32] */;
  %419 = cast(%416, dtype="bool") /* ty=Tensor[(2, 28), bool] */;
  %420 = dyn.reshape(%417, %418, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %421 = @func_10224() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %422 = cast(meta[relay.Constant][22] /* ty=Tensor[(2, 28), float32] */, dtype="float32") /* ty=Tensor[(2, 28), float32] */;
  %423 = cosh(%422) /* ty=Tensor[(2, 28), float32] */;
  %424 = cast(%423, dtype="float32") /* ty=Tensor[(2, 28), float32] */;
  %425 = not_equal(%419, %420) /* ty=Tensor[(2, 28), bool] */;
  %426 = %421.0;
  %427 = sin(%424) /* ty=Tensor[(2, 28), float32] */;
  %428 = @func_7544() /* ty=Tensor[(2240), int64] */;
  (%425, %426, %427, %428)
}

def @func_2483() -> Tensor[(12, 14, 14), float64] {
  @func_2015() /* ty=Tensor[(12, 14, 14), float64] */
}

def @func_5955() -> (Tensor[(12, 14, 14), float64], Tensor[(6, 10, 5), float64], Tensor[(300), float64], Tensor[(56), float64], Tensor[(504), float64]) {
  @func_5953() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(6, 10, 5), float64], Tensor[(300), float64], Tensor[(56), float64], Tensor[(504), float64]) */
}

def @func_4621() -> (Tensor[(14, 10, 13), float64], Tensor[(560, 4), int64], Tensor[(1, 300), float64], Tensor[(504), float64], Tensor[(12, 14, 14), float64]) {
  %429 = cast(meta[relay.Constant][23] /* ty=Tensor[(14, 10, 13), float64] */, dtype="float64") /* ty=Tensor[(14, 10, 13), float64] */;
  %430 = sigmoid(%429) /* ty=Tensor[(14, 10, 13), float64] */;
  %431 = cast(%430, dtype="float64") /* ty=Tensor[(14, 10, 13), float64] */;
  %432 = @func_2108() /* ty=(Tensor[(560, 4), int64],) */;
  %433 = cast(meta[relay.Constant][24] /* ty=Tensor[(504), float64] */, dtype="float64") /* ty=Tensor[(504), float64] */;
  %434 = reshape(%433, newshape=[504]) /* ty=Tensor[(504), float64] */;
  %435 = @func_1786(%434) /* ty=(Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), float64], Tensor[(1, 300), float64], Tensor[(56), float64], Tensor[(504), float64]) */;
  %436 = @func_1105() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %437 = cos(%431) /* ty=Tensor[(14, 10, 13), float64] */;
  %438 = %432.0;
  %439 = %435.2;
  %440 = %436.0;
  (%437, %438, %439, meta[relay.Constant][24] /* ty=Tensor[(504), float64] */, %440)
}

def @func_7545() -> Tensor[(2240), int64] {
  %442 = fn () -> Tensor[(2240), int64] {
    %441 = @func_6518() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(140, 16), int64], Tensor[(65, 15), float32], Tensor[(2240), int64], Tensor[(56, 1), float64]) */;
    %441.3
  };
  %442() /* ty=Tensor[(2240), int64] */
}

def @func_1511(%var_1510: Tensor[(10, 16, 1), float64]) -> Tensor[(10, 16, 1), float64] {
  %444 = fn (%var_1503: Tensor[(10, 16, 1), float64]) -> Tensor[(10, 16, 1), float64] {
    %443 = cast(%var_1503, dtype="float64") /* ty=Tensor[(10, 16, 1), float64] */;
    acosh(%443) /* ty=Tensor[(10, 16, 1), float64] */
  };
  %444(%var_1510) /* ty=Tensor[(10, 16, 1), float64] */
}

def @func_6305() -> (Tensor[(12, 14, 14), float64],) {
  %447 = fn () -> (Tensor[(12, 14, 14), float64],) {
    %445 = @func_3246() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) */;
    %446 = %445.1;
    (%446,)
  };
  %447() /* ty=(Tensor[(12, 14, 14), float64],) */
}

def @func_3248() -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) {
  @func_3246() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) */
}

def @func_10329() -> Tensor[(2, 28), float32] {
  @func_5593() /* ty=Tensor[(2, 28), float32] */
}

def @func_4083(%var_4081: Tensor[(1, 300), float64]) -> (Tensor[(2240), float32], Tensor[(56), float64], Tensor[(1, 300), float64]) {
  @func_4080(%var_4081) /* ty=(Tensor[(2240), float32], Tensor[(56), float64], Tensor[(1, 300), float64]) */
}

def @func_5272(%var_5256: Tensor[(6, 6, 15), float64]) -> (Tensor[(12, 14, 14), float64], Tensor[(6, 6, 15), bool]) {
  %448 = cast(%var_5256, dtype="float64") /* ty=Tensor[(6, 6, 15), float64] */;
  %449 = log2(%448) /* ty=Tensor[(6, 6, 15), float64] */;
  %450 = cast(%449, dtype="float64") /* ty=Tensor[(6, 6, 15), float64] */;
  %451 = sinh(%450) /* ty=Tensor[(6, 6, 15), float64] */;
  %452 = cast(%var_5256, dtype="bool") /* ty=Tensor[(6, 6, 15), bool] */;
  %453 = shape_of(%451, dtype="int32") /* ty=Tensor[(3), int32] */;
  %454 = cast(%451, dtype="bool") /* ty=Tensor[(6, 6, 15), bool] */;
  %455 = dyn.reshape(%452, %453, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %456 = @func_2495() /* ty=Tensor[(12, 14, 14), float64] */;
  %457 = logical_or(%454, %455) /* ty=Tensor[(6, 6, 15), bool] */;
  (%456, %457)
}

def @func_6519() -> (Tensor[(12, 14, 14), float64], Tensor[(140, 16), int64], Tensor[(65, 15), float32], Tensor[(2240), int64], Tensor[(56, 1), float64]) {
  %469 = fn () -> (Tensor[(12, 14, 14), float64], Tensor[(140, 16), int64], Tensor[(65, 15), float32], Tensor[(2240), int64], Tensor[(56, 1), float64]) {
    %458 = @func_3982() /* ty=(Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), float64]) */;
    %459 = @func_6429() /* ty=(Tensor[(140, 16), int64],) */;
    %460 = @func_2088() /* ty=Tensor[(65, 15), float64] */;
    %461 = cast(%460, dtype="float32") /* ty=Tensor[(65, 15), float32] */;
    %462 = cast(meta[relay.Constant][25] /* ty=Tensor[(56, 1), float64] */, dtype="float64") /* ty=Tensor[(56, 1), float64] */;
    %463 = reshape(%462, newshape=[56]) /* ty=Tensor[(56), float64] */;
    %464 = @func_2294(%463) /* ty=(Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), float64], Tensor[(56), float64], Tensor[(2240), int64], Tensor[(1, 975), float64]) */;
    %465 = %458.1;
    %466 = %459.0;
    %467 = acos(%461) /* ty=Tensor[(65, 15), float32] */;
    %468 = %464.3;
    (%465, %466, %467, %468, meta[relay.Constant][25] /* ty=Tensor[(56, 1), float64] */)
  };
  %469() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(140, 16), int64], Tensor[(65, 15), float32], Tensor[(2240), int64], Tensor[(56, 1), float64]) */
}

def @func_8369() -> Tensor[(2240), int64] {
  @func_2146() /* ty=Tensor[(2240), int64] */
}

def @func_9338(%var_9337: Tensor[(2, 28), bool]) -> (Tensor[(560, 4), int64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(2240), int64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64], Tensor[(2, 28), bool]) {
  %490 = fn (%var_9328: Tensor[(2, 28), bool]) -> (Tensor[(560, 4), int64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(2240), int64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64], Tensor[(2, 28), bool]) {
    %470 = @func_2108() /* ty=(Tensor[(560, 4), int64],) */;
    %471 = @func_1105() /* ty=(Tensor[(12, 14, 14), float64],) */;
    %472 = @func_1978() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(56), float64], Tensor[(2, 28), float64], Tensor[(2240), int64], Tensor[(65, 15), float64]) */;
    %473 = @func_6304() /* ty=(Tensor[(12, 14, 14), float64],) */;
    %474 = %471.0;
    %475 = cast(%474, dtype="float64") /* ty=Tensor[(12, 14, 14), float64] */;
    %476 = reshape(%475, newshape=[2352]) /* ty=Tensor[(2352), float64] */;
    %477 = @func_5243(%476) /* ty=(Tensor[(56), float64], Tensor[(12, 14, 14), int64], Tensor[(2352), float64]) */;
    %478 = @func_3894() /* ty=(Tensor[(2, 28), bool],) */;
    %479 = %478.0;
    %480 = cast(%var_9328, dtype="bool") /* ty=Tensor[(2, 28), bool] */;
    %481 = shape_of(%479, dtype="int32") /* ty=Tensor[(2), int32] */;
    %482 = cast(%479, dtype="bool") /* ty=Tensor[(2, 28), bool] */;
    %483 = dyn.reshape(%480, %481, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %484 = %470.0;
    %485 = @func_4370() /* ty=Tensor[(12, 14, 14), float64] */;
    %486 = %472.3;
    %487 = %473.0;
    %488 = %477.1;
    %489 = greater_equal(%482, %483) /* ty=Tensor[(2, 28), bool] */;
    (%484, %485, %474, %486, %487, %488, %489)
  };
  %490(%var_9337) /* ty=(Tensor[(560, 4), int64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(2240), int64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64], Tensor[(2, 28), bool]) */
}

def @func_2354() -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64]) {
  %491 = @func_2049() /* ty=Tensor[(12, 14, 14), float64] */;
  %492 = cast(%491, dtype="float64") /* ty=Tensor[(12, 14, 14), float64] */;
  %493 = reshape(%492, newshape=[12, 14, 14]) /* ty=Tensor[(12, 14, 14), float64] */;
  %494 = @func_1469(%493) /* ty=(Tensor[(12, 14, 14), int64],) */;
  %495 = %494.0;
  (%491, %495)
}

def @func_5647() -> (Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), float64]) {
  %496 = @func_2354() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64]) */;
  %497 = @func_2241() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %498 = %496.1;
  %499 = %497.0;
  (%498, %499)
}

def @func_3137(%var_3126: Tensor[(560, 4), float64]) -> (Tensor[(65, 15), float64], Tensor[(560, 4), bool]) {
  %500 = @func_1978() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(56), float64], Tensor[(2, 28), float64], Tensor[(2240), int64], Tensor[(65, 15), float64]) */;
  %501 = @func_1727() /* ty=(Tensor[(560, 4), float64],) */;
  %502 = %501.0;
  %503 = cast(%var_3126, dtype="bool") /* ty=Tensor[(560, 4), bool] */;
  %504 = shape_of(%502, dtype="int32") /* ty=Tensor[(2), int32] */;
  %505 = cast(%502, dtype="bool") /* ty=Tensor[(560, 4), bool] */;
  %506 = dyn.reshape(%503, %504, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %507 = %500.4;
  %508 = greater_equal(%505, %506) /* ty=Tensor[(560, 4), bool] */;
  (%507, %508)
}

def @func_2649() -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) {
  %509 = @func_2528() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), bool]) */;
  %510 = @func_2528() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), bool]) */;
  %511 = %509.0;
  %512 = %510.0;
  (%511, %512)
}

def @func_8923(%var_8921: float64, %var_8922: Tensor[(11, 1, 8), float64]) -> (Tensor[(11, ?, 8), bool],) {
  %521 = fn (%var_8908: float64, %var_8915: Tensor[(11, 1, 8), float64]) -> (Tensor[(11, ?, 8), bool],) {
    %513 = cast(%var_8908, dtype="float64") /* ty=float64 */;
    %514 = cast(meta[relay.Constant][26] /* ty=Tensor[(11, 1, 8), float64] */, dtype="float64") /* ty=Tensor[(11, 1, 8), float64] */;
    %515 = minimum(%513, %514) /* ty=Tensor[(11, 1, 8), float64] */;
    %516 = cast(%var_8915, dtype="bool") /* ty=Tensor[(11, 1, 8), bool] */;
    %517 = shape_of(%515, dtype="int32") /* ty=Tensor[(3), int32] */;
    %518 = cast(%515, dtype="bool") /* ty=Tensor[(11, 1, 8), bool] */;
    %519 = dyn.reshape(%516, %517, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %520 = less_equal(%518, %519) /* ty=Tensor[(11, ?, 8), bool] */;
    (%520,)
  };
  %521(%var_8921, %var_8922) /* ty=(Tensor[(11, ?, 8), bool],) */
}

def @func_6093() -> Tensor[(560, 4), float32] {
  %525 = fn () -> Tensor[(560, 4), float32] {
    %522 = @func_1727() /* ty=(Tensor[(560, 4), float64],) */;
    %523 = %522.0;
    %524 = cast(%523, dtype="float32") /* ty=Tensor[(560, 4), float32] */;
    rsqrt(%524) /* ty=Tensor[(560, 4), float32] */
  };
  %525() /* ty=Tensor[(560, 4), float32] */
}

def @func_9604(%var_9601: Tensor[(160), float64], %var_9602: Tensor[(56), bool], %var_9603: Tensor[(560, 4), int64]) -> (Tensor[(12, 14, 14), float32], Tensor[(10, 16, 1), float64], Tensor[(160), float64], Tensor[(560, 4), float64], Tensor[(12, 14, 14), int64], Tensor[(56), bool], Tensor[(560, 4), float32]) {
  @func_9599(%var_9601, %var_9602, %var_9603) /* ty=(Tensor[(12, 14, 14), float32], Tensor[(10, 16, 1), float64], Tensor[(160), float64], Tensor[(560, 4), float64], Tensor[(12, 14, 14), int64], Tensor[(56), bool], Tensor[(560, 4), float32]) */
}

def @func_3799(%var_3798: Tensor[(12, 5, 11), float64]) -> (Tensor[(12, 5, 11), float64], Tensor[(12, 14, 14), bool], Tensor[(2352), float64], Tensor[(12, 14, 14), bool]) {
  %534 = fn (%var_3770: Tensor[(12, 5, 11), float64]) -> (Tensor[(12, 5, 11), float64], Tensor[(12, 14, 14), bool], Tensor[(2352), float64], Tensor[(12, 14, 14), bool]) {
    %526 = cast(%var_3770, dtype="float64") /* ty=Tensor[(12, 5, 11), float64] */;
    %527 = cast(meta[relay.Constant][27] /* ty=Tensor[(2352), float64] */, dtype="float64") /* ty=Tensor[(2352), float64] */;
    %528 = reshape(%527, newshape=[12, 14, 14]) /* ty=Tensor[(12, 14, 14), float64] */;
    %529 = cast(meta[relay.Constant][27] /* ty=Tensor[(2352), float64] */, dtype="float64") /* ty=Tensor[(2352), float64] */;
    %530 = reshape(%529, newshape=[12, 14, 14]) /* ty=Tensor[(12, 14, 14), float64] */;
    %531 = log10(%526) /* ty=Tensor[(12, 5, 11), float64] */;
    %532 = @func_2137(%528) /* ty=Tensor[(12, 14, 14), bool] */;
    %533 = @func_2137(%530) /* ty=Tensor[(12, 14, 14), bool] */;
    (%531, %532, meta[relay.Constant][27] /* ty=Tensor[(2352), float64] */, %533)
  };
  %534(%var_3798) /* ty=(Tensor[(12, 5, 11), float64], Tensor[(12, 14, 14), bool], Tensor[(2352), float64], Tensor[(12, 14, 14), bool]) */
}

def @func_6866() -> Tensor[(56), float64] {
  @func_6864() /* ty=Tensor[(56), float64] */
}

def @func_6774(%var_6707: Tensor[(8, 1, 7), float64]) -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), float64], Tensor[(8, ?, 7), uint16]) {
  %535 = @func_5091() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) */;
  %536 = @func_5647() /* ty=(Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), float64]) */;
  %537 = @func_1180() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) */;
  %538 = cast(%var_6707, dtype="float64") /* ty=Tensor[(8, 1, 7), float64] */;
  %539 = exp(%538) /* ty=Tensor[(8, 1, 7), float64] */;
  %540 = cast(%539, dtype="int8") /* ty=Tensor[(8, 1, 7), int8] */;
  %541 = shape_of(%var_6707, dtype="int32") /* ty=Tensor[(3), int32] */;
  %542 = cast(%var_6707, dtype="int8") /* ty=Tensor[(8, 1, 7), int8] */;
  %543 = dyn.reshape(%540, %541, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %544 = multiply(%542, %543) /* ty=Tensor[(8, ?, 7), int8] */;
  %545 = cast(%544, dtype="int64") /* ty=Tensor[(8, ?, 7), int64] */;
  %546 = shape_of(%539, dtype="int32") /* ty=Tensor[(3), int32] */;
  %547 = cast(%539, dtype="int64") /* ty=Tensor[(8, 1, 7), int64] */;
  %548 = dyn.reshape(%545, %546, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %549 = add(%547, %548) /* ty=Tensor[(8, ?, 7), int64] */;
  %550 = @func_2446() /* ty=(Tensor[(2, 28), bool], Tensor[(2, 28), float64], Tensor[(2, 28), int16]) */;
  %551 = %550.0;
  %552 = cast(%551, dtype="uint16") /* ty=Tensor[(2, 28), uint16] */;
  %553 = shape_of(%549, dtype="int32") /* ty=Tensor[(3), int32] */;
  %554 = cast(%549, dtype="uint16") /* ty=Tensor[(8, ?, 7), uint16] */;
  %555 = dyn.reshape(%552, %553, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %556 = %535.0;
  %557 = %536.0;
  %558 = %537.0;
  %559 = subtract(%554, %555) /* ty=Tensor[(8, ?, 7), uint16] */;
  (%556, %557, %558, %559)
}

def @func_8371() -> Tensor[(2240), int64] {
  @func_8369() /* ty=Tensor[(2240), int64] */
}

def @func_8681(%var_8645: Tensor[(14, 8, 3), float32]) -> (Tensor[(14, 8, 3), int16], Tensor[(560, 4), float32]) {
  %560 = cast(%var_8645, dtype="float32") /* ty=Tensor[(14, 8, 3), float32] */;
  %561 = cosh(%560) /* ty=Tensor[(14, 8, 3), float32] */;
  %562 = cast(%561, dtype="float64") /* ty=Tensor[(14, 8, 3), float64] */;
  %563 = atan(%562) /* ty=Tensor[(14, 8, 3), float64] */;
  %564 = cast(%561, dtype="int16") /* ty=Tensor[(14, 8, 3), int16] */;
  %565 = shape_of(%563, dtype="int32") /* ty=Tensor[(3), int32] */;
  %566 = cast(%563, dtype="int16") /* ty=Tensor[(14, 8, 3), int16] */;
  %567 = dyn.reshape(%564, %565, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %568 = bitwise_and(%566, %567) /* ty=Tensor[(14, 8, 3), int16] */;
  %569 = @func_7099() /* ty=Tensor[(560, 4), float32] */;
  (%568, %569)
}

def @func_2016() -> Tensor[(12, 14, 14), float64] {
  %571 = fn () -> Tensor[(12, 14, 14), float64] {
    %570 = @func_1220() /* ty=(Tensor[(12, 14, 14), float64],) */;
    %570.0
  };
  %571() /* ty=Tensor[(12, 14, 14), float64] */
}

def @func_7262(%var_7198: Tensor[(560, 4), int32]) -> (Tensor[(560, 4), float64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), float64], Tensor[(140, 16), int64], Tensor[(560, 4), float32], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(560, 4), int32], Tensor[(56), float64], Tensor[(12, 14, 14), float64]) {
  %572 = @func_5091() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) */;
  %573 = @func_6429() /* ty=(Tensor[(140, 16), int64],) */;
  %574 = @func_7099() /* ty=Tensor[(560, 4), float32] */;
  %575 = cast(%574, dtype="float64") /* ty=Tensor[(560, 4), float64] */;
  %576 = atanh(%575) /* ty=Tensor[(560, 4), float64] */;
  %577 = cast(meta[relay.Constant][28] /* ty=Tensor[(560, 4), float64] */, dtype="int16") /* ty=Tensor[(560, 4), int16] */;
  %578 = shape_of(%576, dtype="int32") /* ty=Tensor[(2), int32] */;
  %579 = cast(%576, dtype="int16") /* ty=Tensor[(560, 4), int16] */;
  %580 = dyn.reshape(%577, %578, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %581 = minimum(%579, %580) /* ty=Tensor[(560, 4), int16] */;
  %582 = cast(%576, dtype="int32") /* ty=Tensor[(560, 4), int32] */;
  %583 = shape_of(%581, dtype="int32") /* ty=Tensor[(2), int32] */;
  %584 = cast(%581, dtype="int32") /* ty=Tensor[(560, 4), int32] */;
  %585 = dyn.reshape(%582, %583, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %586 = maximum(%584, %585) /* ty=Tensor[(560, 4), int32] */;
  %587 = cast(%var_7198, dtype="bool") /* ty=Tensor[(560, 4), bool] */;
  %588 = shape_of(%586, dtype="int32") /* ty=Tensor[(2), int32] */;
  %589 = cast(%586, dtype="bool") /* ty=Tensor[(560, 4), bool] */;
  %590 = dyn.reshape(%587, %588, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %591 = less_equal(%589, %590) /* ty=Tensor[(560, 4), bool] */;
  %592 = cast(%591, dtype="float32") /* ty=Tensor[(560, 4), float32] */;
  %593 = shape_of(%586, dtype="int32") /* ty=Tensor[(2), int32] */;
  %594 = cast(%586, dtype="float32") /* ty=Tensor[(560, 4), float32] */;
  %595 = dyn.reshape(%592, %593, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %596 = @func_4333() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %597 = @func_1180() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) */;
  %598 = cast(meta[relay.Constant][29] /* ty=Tensor[(560, 4), int16] */, dtype="int32") /* ty=Tensor[(560, 4), int32] */;
  %599 = shape_of(%581, dtype="int32") /* ty=Tensor[(2), int32] */;
  %600 = cast(%581, dtype="int32") /* ty=Tensor[(560, 4), int32] */;
  %601 = dyn.reshape(%598, %599, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %602 = @func_3246() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) */;
  %603 = @func_4728() /* ty=Tensor[(560, 4), float64] */;
  %604 = @func_4370() /* ty=Tensor[(12, 14, 14), float64] */;
  %605 = @func_4356() /* ty=Tensor[(12, 14, 14), int64] */;
  %606 = %572.1;
  %607 = %573.0;
  %608 = divide(%594, %595) /* ty=Tensor[(560, 4), float32] */;
  %609 = %596.0;
  %610 = %597.0;
  %611 = bitwise_and(%600, %601) /* ty=Tensor[(560, 4), int32] */;
  %612 = @func_6864() /* ty=Tensor[(56), float64] */;
  %613 = %602.0;
  (%603, %604, %605, %606, %607, %608, %609, %610, %611, %612, %613)
}

def @func_11141(%var_11139: Tensor[(2240), float64]) -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(2240), float64]) {
  @func_11138(%var_11139) /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(2240), float64]) */
}

def @func_3402() -> Tensor[(2, 28), bool] {
  @func_3400() /* ty=Tensor[(2, 28), bool] */
}

def @func_10920(%var_10919: Tensor[(2, 896), int64]) -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), bool], Tensor[(2, 896), bool], Tensor[(2, 896), float64]) {
  %628 = fn (%var_10910: Tensor[(2, 896), int64]) -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), bool], Tensor[(2, 896), bool], Tensor[(2, 896), float64]) {
    %614 = cast(meta[relay.Constant][30] /* ty=Tensor[(2, 896), int64] */, dtype="int64") /* ty=Tensor[(2, 896), int64] */;
    %615 = cast(meta[relay.Constant][30] /* ty=Tensor[(2, 896), int64] */, dtype="int64") /* ty=Tensor[(2, 896), int64] */;
    %616 = reshape(%614, newshape=[8, 14, 16]) /* ty=Tensor[(8, 14, 16), int64] */;
    %617 = reshape(%615, newshape=[8, 14, 16]) /* ty=Tensor[(8, 14, 16), int64] */;
    %618 = @func_6702(%616, %617) /* ty=(Tensor[(8, 14, 16), int64], Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), bool]) */;
    %619 = cast(%var_10910, dtype="bool") /* ty=Tensor[(2, 896), bool] */;
    %620 = shape_of(meta[relay.Constant][30] /* ty=Tensor[(2, 896), int64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %621 = cast(meta[relay.Constant][30] /* ty=Tensor[(2, 896), int64] */, dtype="bool") /* ty=Tensor[(2, 896), bool] */;
    %622 = dyn.reshape(%619, %620, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %623 = cast(%var_10910, dtype="float64") /* ty=Tensor[(2, 896), float64] */;
    %624 = @func_2483() /* ty=Tensor[(12, 14, 14), float64] */;
    %625 = %618.2;
    %626 = greater_equal(%621, %622) /* ty=Tensor[(2, 896), bool] */;
    %627 = cosh(%623) /* ty=Tensor[(2, 896), float64] */;
    (%624, %625, %626, %627)
  };
  %628(%var_10919) /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), bool], Tensor[(2, 896), bool], Tensor[(2, 896), float64]) */
}

def @func_2879(%var_2877: Tensor[(300), float64]) -> (Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), float64], Tensor[(300), float64], Tensor[(56), float64], Tensor[(6, 84), float64]) {
  @func_2876(%var_2877) /* ty=(Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), float64], Tensor[(300), float64], Tensor[(56), float64], Tensor[(6, 84), float64]) */
}

def @func_6038() -> (Tensor[(12, 14, 14), float64], Tensor[(2, 28), float32]) {
  %629 = @func_1105() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %630 = %629.0;
  %631 = @func_5593() /* ty=Tensor[(2, 28), float32] */;
  (%630, %631)
}

def @func_7062() -> Tensor[(300), float64] {
  %632 = @func_6399() /* ty=(Tensor[(12, 14, 14), bool], Tensor[(300), float64], Tensor[(12, 14, 14), int64], Tensor[(8, 7, 8), float64]) */;
  %632.1
}

def @func_2199() -> (Tensor[(12, 14, 14), float64], Tensor[(2, 28), float32]) {
  %633 = @func_1180() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) */;
  %634 = @func_1978() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(56), float64], Tensor[(2, 28), float64], Tensor[(2240), int64], Tensor[(65, 15), float64]) */;
  %635 = %634.2;
  %636 = cast(%635, dtype="float32") /* ty=Tensor[(2, 28), float32] */;
  %637 = %633.0;
  %638 = atanh(%636) /* ty=Tensor[(2, 28), float32] */;
  (%637, %638)
}

def @func_11215(%var_11214: Tensor[(448), float64]) -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), bool], Tensor[(448), float64], Tensor[(12, 14, 14), float64]) {
  %649 = fn (%var_11165: Tensor[(448), float64]) -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), bool], Tensor[(448), float64], Tensor[(12, 14, 14), float64]) {
    %639 = @func_3246() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) */;
    %640 = @func_3410() /* ty=(Tensor[(12, 14, 14), float64],) */;
    %641 = cast(%var_11165, dtype="float64") /* ty=Tensor[(448), float64] */;
    %642 = reshape(%641, newshape=[8, 7, 8]) /* ty=Tensor[(8, 7, 8), float64] */;
    %643 = @func_3520(%642) /* ty=(Tensor[(8, 7, 8), bool], Tensor[(8, 7, 8), float64], Tensor[(12, 14, 14), bool], Tensor[(12, 14, 14), float64]) */;
    %644 = @func_7996() /* ty=(Tensor[(10, 14, 16), int64], Tensor[(56), float64], Tensor[(975), float64], Tensor[(560, 4), float32], Tensor[(12, 14, 14), float64], Tensor[(560, 4), int64], Tensor[(12, 14, 14), float64], Tensor[(560, 4), uint32]) */;
    %645 = %639.0;
    %646 = %640.0;
    %647 = %643.0;
    %648 = %644.4;
    (%645, %646, %647, %var_11165, %648)
  };
  %649(%var_11214) /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), bool], Tensor[(448), float64], Tensor[(12, 14, 14), float64]) */
}

def @func_1786(%var_1778: Tensor[(504), float64]) -> (Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), float64], Tensor[(1, 300), float64], Tensor[(56), float64], Tensor[(504), float64]) {
  %650 = @func_1105() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %651 = cast(meta[relay.Constant][31] /* ty=Tensor[(1, 300), float64] */, dtype="float64") /* ty=Tensor[(1, 300), float64] */;
  %652 = cast(meta[relay.Constant][32] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
  %653 = cast(%var_1778, dtype="float64") /* ty=Tensor[(504), float64] */;
  %654 = reshape(%651, newshape=[6, 10, 5]) /* ty=Tensor[(6, 10, 5), float64] */;
  %655 = reshape(%652, newshape=[56, 1]) /* ty=Tensor[(56, 1), float64] */;
  %656 = reshape(%653, newshape=[56, 9]) /* ty=Tensor[(56, 9), float64] */;
  %657 = @func_574(%654, %655, %656) /* ty=(Tensor[(8, 7, 8), float64], Tensor[(56, 9), uint32], Tensor[(8, 7, 8), float64], Tensor[(6, 10, 5), bool], Tensor[(6, 10, 5), float64]) */;
  %658 = %650.0;
  %659 = %657.0;
  (%658, %659, meta[relay.Constant][31] /* ty=Tensor[(1, 300), float64] */, meta[relay.Constant][32] /* ty=Tensor[(56), float64] */, %var_1778)
}

def @func_9376() -> (Tensor[(12, 14, 14), float32], Tensor[(12, 14, 14), float64]) {
  %663 = fn () -> (Tensor[(12, 14, 14), float32], Tensor[(12, 14, 14), float64]) {
    %660 = @func_2528() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), bool]) */;
    %661 = @func_4402() /* ty=Tensor[(12, 14, 14), float32] */;
    %662 = %660.0;
    (%661, %662)
  };
  %663() /* ty=(Tensor[(12, 14, 14), float32], Tensor[(12, 14, 14), float64]) */
}

def @func_9981() -> (Tensor[(65, 15), float64],) {
  %668 = fn () -> (Tensor[(65, 15), float64],) {
    %664 = @func_6518() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(140, 16), int64], Tensor[(65, 15), float32], Tensor[(2240), int64], Tensor[(56, 1), float64]) */;
    %665 = %664.2;
    %666 = cast(%665, dtype="float64") /* ty=Tensor[(65, 15), float64] */;
    %667 = sigmoid(%666) /* ty=Tensor[(65, 15), float64] */;
    (%667,)
  };
  %668() /* ty=(Tensor[(65, 15), float64],) */
}

def @func_6401() -> (Tensor[(12, 14, 14), bool], Tensor[(300), float64], Tensor[(12, 14, 14), int64], Tensor[(8, 7, 8), float64]) {
  @func_6399() /* ty=(Tensor[(12, 14, 14), bool], Tensor[(300), float64], Tensor[(12, 14, 14), int64], Tensor[(8, 7, 8), float64]) */
}

def @func_3895() -> (Tensor[(2, 28), bool],) {
  %671 = fn () -> (Tensor[(2, 28), bool],) {
    %669 = @func_2446() /* ty=(Tensor[(2, 28), bool], Tensor[(2, 28), float64], Tensor[(2, 28), int16]) */;
    %670 = %669.0;
    (%670,)
  };
  %671() /* ty=(Tensor[(2, 28), bool],) */
}

def @func_3522(%var_3521: Tensor[(8, 7, 8), float64]) -> (Tensor[(8, 7, 8), bool], Tensor[(8, 7, 8), float64], Tensor[(12, 14, 14), bool], Tensor[(12, 14, 14), float64]) {
  %693 = fn (%var_3474: Tensor[(8, 7, 8), float64]) -> (Tensor[(8, 7, 8), bool], Tensor[(8, 7, 8), float64], Tensor[(12, 14, 14), bool], Tensor[(12, 14, 14), float64]) {
    %672 = @func_1581() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), float64], Tensor[(56), float64], Tensor[(8, 7, 8), float64], Tensor[(560, 4), int64], Tensor[(975), float64]) */;
    %673 = %672.1;
    %674 = cast(%var_3474, dtype="bool") /* ty=Tensor[(8, 7, 8), bool] */;
    %675 = shape_of(%673, dtype="int32") /* ty=Tensor[(3), int32] */;
    %676 = cast(%673, dtype="bool") /* ty=Tensor[(8, 7, 8), bool] */;
    %677 = dyn.reshape(%674, %675, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %678 = cast(%var_3474, dtype="float64") /* ty=Tensor[(8, 7, 8), float64] */;
    %679 = @func_1105() /* ty=(Tensor[(12, 14, 14), float64],) */;
    %680 = %679.0;
    %681 = cast(%680, dtype="float64") /* ty=Tensor[(12, 14, 14), float64] */;
    %682 = reshape(%681, newshape=[12, 14, 14]) /* ty=Tensor[(12, 14, 14), float64] */;
    %683 = @func_2137(%682) /* ty=Tensor[(12, 14, 14), bool] */;
    %684 = cast(%683, dtype="bool") /* ty=Tensor[(12, 14, 14), bool] */;
    %685 = shape_of(%680, dtype="int32") /* ty=Tensor[(3), int32] */;
    %686 = cast(%680, dtype="bool") /* ty=Tensor[(12, 14, 14), bool] */;
    %687 = dyn.reshape(%684, %685, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %688 = @func_1843() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(56), float64]) */;
    %689 = logical_or(%676, %677) /* ty=Tensor[(8, 7, 8), bool] */;
    %690 = sinh(%678) /* ty=Tensor[(8, 7, 8), float64] */;
    %691 = logical_or(%686, %687) /* ty=Tensor[(12, 14, 14), bool] */;
    %692 = %688.0;
    (%689, %690, %691, %692)
  };
  %693(%var_3521) /* ty=(Tensor[(8, 7, 8), bool], Tensor[(8, 7, 8), float64], Tensor[(12, 14, 14), bool], Tensor[(12, 14, 14), float64]) */
}

def @func_8090(%var_8089: Tensor[(2240), float64]) -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(2240), float64]) {
  %700 = fn (%var_8086: Tensor[(2240), float64]) -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(2240), float64]) {
    %694 = @func_5091() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) */;
    %695 = cast(%var_8086, dtype="float64") /* ty=Tensor[(2240), float64] */;
    %696 = reshape(%695, newshape=[2240]) /* ty=Tensor[(2240), float64] */;
    %697 = @func_7841(%696) /* ty=(Tensor[(12, 14, 14), float64], Tensor[(560, 4), int8]) */;
    %698 = %694.1;
    %699 = %697.0;
    (%698, %699, %var_8086)
  };
  %700(%var_8089) /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(2240), float64]) */
}

def @func_5767() -> (Tensor[(12, 14, 14), bool], Tensor[(12, 14, 14), float64], Tensor[(560, 4), int64], Tensor[(2, 28), float64]) {
  %701 = @func_1627() /* ty=(Tensor[(12, 14, 14), bool], Tensor[(8, 7, 8), float64], Tensor[(12, 14, 14), float64]) */;
  %702 = @func_4673() /* ty=(Tensor[(560, 4), int64],) */;
  %703 = @func_2446() /* ty=(Tensor[(2, 28), bool], Tensor[(2, 28), float64], Tensor[(2, 28), int16]) */;
  %704 = %701.0;
  %705 = @func_2015() /* ty=Tensor[(12, 14, 14), float64] */;
  %706 = %702.0;
  %707 = %703.1;
  (%704, %705, %706, %707)
}

def @func_8180() -> (Tensor[(12, 14, 14), float32],) {
  %712 = fn () -> (Tensor[(12, 14, 14), float32],) {
    %708 = @func_6852() /* ty=(Tensor[(12, 14, 14), int64],) */;
    %709 = %708.0;
    %710 = cast(%709, dtype="float32") /* ty=Tensor[(12, 14, 14), float32] */;
    %711 = erf(%710) /* ty=Tensor[(12, 14, 14), float32] */;
    (%711,)
  };
  %712() /* ty=(Tensor[(12, 14, 14), float32],) */
}

def @func_11310() -> Tensor[(12, 14, 14), float64] {
  %713 = fn () -> Tensor[(12, 14, 14), float64] {
    @func_2917() /* ty=Tensor[(12, 14, 14), float64] */
  };
  %713() /* ty=Tensor[(12, 14, 14), float64] */
}

def @func_6705(%var_6703: Tensor[(8, 14, 16), int64], %var_6704: Tensor[(8, 14, 16), int64]) -> (Tensor[(8, 14, 16), int64], Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), bool]) {
  %727 = fn (%var_6667: Tensor[(8, 14, 16), int64], %var_6675: Tensor[(8, 14, 16), int64]) -> (Tensor[(8, 14, 16), int64], Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), bool]) {
    %714 = cast(8 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %715 = cast(%var_6667, dtype="int64") /* ty=Tensor[(8, 14, 16), int64] */;
    %716 = bitwise_or(%714, %715) /* ty=Tensor[(8, 14, 16), int64] */;
    %717 = cast(%var_6675, dtype="int64") /* ty=Tensor[(8, 14, 16), int64] */;
    %718 = shape_of(%716, dtype="int32") /* ty=Tensor[(3), int32] */;
    %719 = cast(%716, dtype="int64") /* ty=Tensor[(8, 14, 16), int64] */;
    %720 = dyn.reshape(%717, %718, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %721 = @func_4802() /* ty=(Tensor[(12, 14, 14), int64], Tensor[(13, 7, 7), int8], Tensor[(637), int8]) */;
    %722 = %721.0;
    %723 = cast(%722, dtype="float64") /* ty=Tensor[(12, 14, 14), float64] */;
    %724 = reshape(%723, newshape=[12, 14, 14]) /* ty=Tensor[(12, 14, 14), float64] */;
    %725 = right_shift(%719, %720) /* ty=Tensor[(8, 14, 16), int64] */;
    %726 = @func_2137(%724) /* ty=Tensor[(12, 14, 14), bool] */;
    (%725, %722, %726)
  };
  %727(%var_6703, %var_6704) /* ty=(Tensor[(8, 14, 16), int64], Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), bool]) */
}

def @func_4201(%var_4199: Tensor[(975), float64]) -> (Tensor[(2, 28), bool], Tensor[(10, 14, 16), int64], Tensor[(75), float64], Tensor[(975), float64], Tensor[(2, 28), bool]) {
  @func_4198(%var_4199) /* ty=(Tensor[(2, 28), bool], Tensor[(10, 14, 16), int64], Tensor[(75), float64], Tensor[(975), float64], Tensor[(2, 28), bool]) */
}

def @func_10314() -> (Tensor[(12, 14, 14), int64], Tensor[(2, 80), float64], Tensor[(8, 20), float64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) {
  @func_10312() /* ty=(Tensor[(12, 14, 14), int64], Tensor[(2, 80), float64], Tensor[(8, 20), float64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) */
}

def @func_3860() -> Tensor[(12, 14, 14), float32] {
  %728 = @func_3246() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) */;
  %729 = %728.0;
  %730 = cast(%729, dtype="float32") /* ty=Tensor[(12, 14, 14), float32] */;
  sinh(%730) /* ty=Tensor[(12, 14, 14), float32] */
}

def @func_2485() -> Tensor[(12, 14, 14), float64] {
  @func_2483() /* ty=Tensor[(12, 14, 14), float64] */
}

def @func_8321() -> (Tensor[(560, 4), float64],) {
  @func_8319() /* ty=(Tensor[(560, 4), float64],) */
}

def @func_3954() -> Tensor[(12, 14, 14), float64] {
  @func_2483() /* ty=Tensor[(12, 14, 14), float64] */
}

def @func_7667() -> Tensor[(12, 14, 14), float64] {
  @func_7665() /* ty=Tensor[(12, 14, 14), float64] */
}

def @func_10696(%var_10675: Tensor[(13, 4, 2), uint16]) -> (Tensor[(13, 4, 2), bool], Tensor[(12, 14, 14), int64]) {
  %731 = cast(%var_10675, dtype="bool") /* ty=Tensor[(13, 4, 2), bool] */;
  %732 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(13, 4, 2), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %733 = cast(meta[relay.Constant][33] /* ty=Tensor[(13, 4, 2), uint16] */, dtype="bool") /* ty=Tensor[(13, 4, 2), bool] */;
  %734 = dyn.reshape(%731, %732, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %735 = @func_5647() /* ty=(Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), float64]) */;
  %736 = greater(%733, %734) /* ty=Tensor[(13, 4, 2), bool] */;
  %737 = %735.0;
  (%736, %737)
}

def @func_8362() -> (Tensor[(12, 14, 14), float64], Tensor[(65, 15), float64], Tensor[(2, 28), int16], Tensor[(2, 28), float32]) {
  %738 = @func_5091() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) */;
  %739 = @func_2446() /* ty=(Tensor[(2, 28), bool], Tensor[(2, 28), float64], Tensor[(2, 28), int16]) */;
  %740 = %738.1;
  %741 = @func_2088() /* ty=Tensor[(65, 15), float64] */;
  %742 = %739.2;
  %743 = @func_5593() /* ty=Tensor[(2, 28), float32] */;
  (%740, %741, %742, %743)
}

def @func_6054() -> (Tensor[(12, 14, 14), float64],) {
  %746 = fn () -> (Tensor[(12, 14, 14), float64],) {
    %744 = @func_1978() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(56), float64], Tensor[(2, 28), float64], Tensor[(2240), int64], Tensor[(65, 15), float64]) */;
    %745 = %744.0;
    (%745,)
  };
  %746() /* ty=(Tensor[(12, 14, 14), float64],) */
}

def @func_8986() -> (Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), float64]) {
  @func_8984() /* ty=(Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), float64]) */
}

def @func_4506() -> (Tensor[(12, 14, 14), float64], Tensor[(560, 4), bool], Tensor[(2240), float64]) {
  %753 = fn () -> (Tensor[(12, 14, 14), float64], Tensor[(560, 4), bool], Tensor[(2240), float64]) {
    %747 = @func_4333() /* ty=(Tensor[(12, 14, 14), float64],) */;
    %748 = cast(meta[relay.Constant][34] /* ty=Tensor[(2240), float64] */, dtype="float64") /* ty=Tensor[(2240), float64] */;
    %749 = reshape(%748, newshape=[560, 4]) /* ty=Tensor[(560, 4), float64] */;
    %750 = @func_3137(%749) /* ty=(Tensor[(65, 15), float64], Tensor[(560, 4), bool]) */;
    %751 = %747.0;
    %752 = %750.1;
    (%751, %752, meta[relay.Constant][34] /* ty=Tensor[(2240), float64] */)
  };
  %753() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(560, 4), bool], Tensor[(2240), float64]) */
}

def @func_3100() -> (Tensor[(12, 14, 14), float64], Tensor[(300), float64], Tensor[(5, 60), float64], Tensor[(12, 14, 14), float64]) {
  %762 = fn () -> (Tensor[(12, 14, 14), float64], Tensor[(300), float64], Tensor[(5, 60), float64], Tensor[(12, 14, 14), float64]) {
    %754 = @func_1105() /* ty=(Tensor[(12, 14, 14), float64],) */;
    %755 = cast(meta[relay.Constant][35] /* ty=Tensor[(5, 60), float64] */, dtype="float64") /* ty=Tensor[(5, 60), float64] */;
    %756 = reshape(%755, newshape=[300]) /* ty=Tensor[(300), float64] */;
    %757 = @func_2876(%756) /* ty=(Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), float64], Tensor[(300), float64], Tensor[(56), float64], Tensor[(6, 84), float64]) */;
    %758 = @func_1105() /* ty=(Tensor[(12, 14, 14), float64],) */;
    %759 = %754.0;
    %760 = %757.2;
    %761 = %758.0;
    (%759, %760, meta[relay.Constant][35] /* ty=Tensor[(5, 60), float64] */, %761)
  };
  %762() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(300), float64], Tensor[(5, 60), float64], Tensor[(12, 14, 14), float64]) */
}

def @func_10582() -> Tensor[(12, 14, 14), int64] {
  @func_10032() /* ty=Tensor[(12, 14, 14), int64] */
}

def @func_8769() -> (Tensor[(12, 14, 14), float64], Tensor[(13, 7, 7), int8], Tensor[(637), int8]) {
  @func_8767() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(13, 7, 7), int8], Tensor[(637), int8]) */
}

def @func_8238() -> (Tensor[(12, 14, 14), float64], Tensor[(504), float64]) {
  %763 = @func_5953() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(6, 10, 5), float64], Tensor[(300), float64], Tensor[(56), float64], Tensor[(504), float64]) */;
  %764 = @func_3954() /* ty=Tensor[(12, 14, 14), float64] */;
  %765 = %763.4;
  (%764, %765)
}

def @func_4826() -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64]) {
  %769 = fn () -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64]) {
    %766 = @func_4232() /* ty=(Tensor[(12, 14, 14), float64],) */;
    %767 = %766.0;
    %768 = @func_4356() /* ty=Tensor[(12, 14, 14), int64] */;
    (%767, %768)
  };
  %769() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64]) */
}

def @func_579(%var_576: Tensor[(6, 10, 5), float64], %var_577: Tensor[(56, 1), float64], %var_578: Tensor[(56, 9), float64]) -> (Tensor[(8, 7, 8), float64], Tensor[(56, 9), uint32], Tensor[(8, 7, 8), float64], Tensor[(6, 10, 5), bool], Tensor[(6, 10, 5), float64]) {
  @func_574(%var_576, %var_577, %var_578) /* ty=(Tensor[(8, 7, 8), float64], Tensor[(56, 9), uint32], Tensor[(8, 7, 8), float64], Tensor[(6, 10, 5), bool], Tensor[(6, 10, 5), float64]) */
}

def @func_10312() -> (Tensor[(12, 14, 14), int64], Tensor[(2, 80), float64], Tensor[(8, 20), float64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) {
  %770 = @func_3000() /* ty=(Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), int64]) */;
  %771 = cast(meta[relay.Constant][36] /* ty=Tensor[(8, 20), float64] */, dtype="float64") /* ty=Tensor[(8, 20), float64] */;
  %772 = reshape(%771, newshape=[2, 80]) /* ty=Tensor[(2, 80), float64] */;
  %773 = @func_8521(%772) /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64], Tensor[(2, 80), float64]) */;
  %774 = @func_6053() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %775 = @func_7133() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %776 = %770.1;
  %777 = %773.3;
  %778 = %774.0;
  %779 = %775.0;
  (%776, %777, meta[relay.Constant][36] /* ty=Tensor[(8, 20), float64] */, %778, %779)
}

def @func_8364() -> (Tensor[(12, 14, 14), float64], Tensor[(65, 15), float64], Tensor[(2, 28), int16], Tensor[(2, 28), float32]) {
  @func_8362() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(65, 15), float64], Tensor[(2, 28), int16], Tensor[(2, 28), float32]) */
}

def @func_5552(%var_5550: Tensor[(12, 14, 14), bool], %var_5551: Tensor[(2, 28), float64]) -> (Tensor[(300), float64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(504, 56), bool], Tensor[(2, 28), int8], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float32]) {
  %822 = fn (%var_5401: Tensor[(12, 14, 14), bool], %var_5518: Tensor[(2, 28), float64]) -> (Tensor[(300), float64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(504, 56), bool], Tensor[(2, 28), int8], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float32]) {
    %780 = @func_3617() /* ty=(Tensor[(56), float64], Tensor[(8, 7, 8), float64], Tensor[(300), float64], Tensor[(12, 14, 14), bool], Tensor[(13, 7, 7), int8], Tensor[(1, 637), float64], Tensor[(65, 15), float64]) */;
    %781 = @func_4411() /* ty=Tensor[(12, 14, 14), bool] */;
    %782 = cast(%var_5401, dtype="float64") /* ty=Tensor[(12, 14, 14), float64] */;
    %783 = shape_of(%781, dtype="int32") /* ty=Tensor[(3), int32] */;
    %784 = cast(%781, dtype="float64") /* ty=Tensor[(12, 14, 14), float64] */;
    %785 = dyn.reshape(%782, %783, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %786 = cast(%781, dtype="float64") /* ty=Tensor[(12, 14, 14), float64] */;
    %787 = reshape(%786, newshape=[12, 14, 14]) /* ty=Tensor[(12, 14, 14), float64] */;
    %788 = @func_1469(%787) /* ty=(Tensor[(12, 14, 14), int64],) */;
    %789 = @func_3410() /* ty=(Tensor[(12, 14, 14), float64],) */;
    %790 = cast(meta[relay.Constant][37] /* ty=Tensor[(504, 1), float64] */, dtype="float64") /* ty=Tensor[(504, 1), float64] */;
    %791 = reshape(%790, newshape=[504]) /* ty=Tensor[(504), float64] */;
    %792 = @func_1786(%791) /* ty=(Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), float64], Tensor[(1, 300), float64], Tensor[(56), float64], Tensor[(504), float64]) */;
    %793 = @func_3736() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(560, 4), int64], Tensor[(12, 14, 14), bool]) */;
    %794 = cast(meta[relay.Constant][37] /* ty=Tensor[(504, 1), float64] */, dtype="float64") /* ty=Tensor[(504, 1), float64] */;
    %795 = reshape(%794, newshape=[504]) /* ty=Tensor[(504), float64] */;
    %796 = @func_1786(%795) /* ty=(Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), float64], Tensor[(1, 300), float64], Tensor[(56), float64], Tensor[(504), float64]) */;
    %797 = %796.3;
    %798 = cast(%797, dtype="bool") /* ty=Tensor[(56), bool] */;
    %799 = cast(meta[relay.Constant][37] /* ty=Tensor[(504, 1), float64] */, dtype="bool") /* ty=Tensor[(504, 1), bool] */;
    %800 = @func_2446() /* ty=(Tensor[(2, 28), bool], Tensor[(2, 28), float64], Tensor[(2, 28), int16]) */;
    %801 = %800.1;
    %802 = cast(%var_5518, dtype="int8") /* ty=Tensor[(2, 28), int8] */;
    %803 = shape_of(%801, dtype="int32") /* ty=Tensor[(2), int32] */;
    %804 = cast(%801, dtype="int8") /* ty=Tensor[(2, 28), int8] */;
    %805 = dyn.reshape(%802, %803, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
    %806 = @func_3625() /* ty=Tensor[(12, 14, 14), float64] */;
    %807 = cast(meta[relay.Constant][38] /* ty=Tensor[(12, 14, 14), float64] */, dtype="float32") /* ty=Tensor[(12, 14, 14), float32] */;
    %808 = shape_of(%806, dtype="int32") /* ty=Tensor[(3), int32] */;
    %809 = cast(%806, dtype="float32") /* ty=Tensor[(12, 14, 14), float32] */;
    %810 = dyn.reshape(%807, %808, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %811 = %780.2;
    %812 = power(%784, %785) /* ty=Tensor[(12, 14, 14), float64] */;
    %813 = @func_3625() /* ty=Tensor[(12, 14, 14), float64] */;
    %814 = %788.0;
    %815 = %789.0;
    %816 = %792.0;
    %817 = %793.0;
    %818 = less(%798, %799) /* ty=Tensor[(504, 56), bool] */;
    %819 = bitwise_or(%804, %805) /* ty=Tensor[(2, 28), int8] */;
    %820 = @func_2015() /* ty=Tensor[(12, 14, 14), float64] */;
    %821 = floor_divide(%809, %810) /* ty=Tensor[(12, 14, 14), float32] */;
    (%811, %812, %813, %814, %815, %816, %817, %818, %819, %820, %821)
  };
  %822(%var_5550, %var_5551) /* ty=(Tensor[(300), float64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(504, 56), bool], Tensor[(2, 28), int8], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float32]) */
}

def @func_4403() -> Tensor[(12, 14, 14), float32] {
  %823 = fn () -> Tensor[(12, 14, 14), float32] {
    @func_3860() /* ty=Tensor[(12, 14, 14), float32] */
  };
  %823() /* ty=Tensor[(12, 14, 14), float32] */
}

def @func_5092() -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) {
  %828 = fn () -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) {
    %824 = @func_1581() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), float64], Tensor[(56), float64], Tensor[(8, 7, 8), float64], Tensor[(560, 4), int64], Tensor[(975), float64]) */;
    %825 = @func_2241() /* ty=(Tensor[(12, 14, 14), float64],) */;
    %826 = %824.0;
    %827 = %825.0;
    (%826, %827)
  };
  %828() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) */
}

def @func_10449() -> (Tensor[(12, 14, 14), float64],) {
  %829 = @func_10312() /* ty=(Tensor[(12, 14, 14), int64], Tensor[(2, 80), float64], Tensor[(8, 20), float64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) */;
  %830 = %829.3;
  (%830,)
}

def @func_5045() -> (Tensor[(2, 28), uint8],) {
  %845 = fn () -> (Tensor[(2, 28), uint8],) {
    %831 = @func_2199() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(2, 28), float32]) */;
    %832 = %831.1;
    %833 = cast(%832, dtype="float64") /* ty=Tensor[(2, 28), float64] */;
    %834 = sqrt(%833) /* ty=Tensor[(2, 28), float64] */;
    %835 = cast(%834, dtype="uint16") /* ty=Tensor[(2, 28), uint16] */;
    %836 = shape_of(%832, dtype="int32") /* ty=Tensor[(2), int32] */;
    %837 = cast(%832, dtype="uint16") /* ty=Tensor[(2, 28), uint16] */;
    %838 = dyn.reshape(%835, %836, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
    %839 = minimum(%837, %838) /* ty=Tensor[(2, 28), uint16] */;
    %840 = cast(%839, dtype="uint8") /* ty=Tensor[(2, 28), uint8] */;
    %841 = shape_of(%832, dtype="int32") /* ty=Tensor[(2), int32] */;
    %842 = cast(%832, dtype="uint8") /* ty=Tensor[(2, 28), uint8] */;
    %843 = dyn.reshape(%840, %841, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
    %844 = left_shift(%842, %843) /* ty=Tensor[(2, 28), uint8] */;
    (%844,)
  };
  %845() /* ty=(Tensor[(2, 28), uint8],) */
}

def @func_5953() -> (Tensor[(12, 14, 14), float64], Tensor[(6, 10, 5), float64], Tensor[(300), float64], Tensor[(56), float64], Tensor[(504), float64]) {
  %846 = cast(meta[relay.Constant][39] /* ty=Tensor[(300), float64] */, dtype="float64") /* ty=Tensor[(300), float64] */;
  %847 = cast(meta[relay.Constant][40] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
  %848 = cast(meta[relay.Constant][41] /* ty=Tensor[(504), float64] */, dtype="float64") /* ty=Tensor[(504), float64] */;
  %849 = reshape(%846, newshape=[6, 10, 5]) /* ty=Tensor[(6, 10, 5), float64] */;
  %850 = reshape(%847, newshape=[56, 1]) /* ty=Tensor[(56, 1), float64] */;
  %851 = reshape(%848, newshape=[56, 9]) /* ty=Tensor[(56, 9), float64] */;
  %852 = @func_574(%849, %850, %851) /* ty=(Tensor[(8, 7, 8), float64], Tensor[(56, 9), uint32], Tensor[(8, 7, 8), float64], Tensor[(6, 10, 5), bool], Tensor[(6, 10, 5), float64]) */;
  %853 = @func_3625() /* ty=Tensor[(12, 14, 14), float64] */;
  %854 = %852.4;
  (%853, %854, meta[relay.Constant][39] /* ty=Tensor[(300), float64] */, meta[relay.Constant][40] /* ty=Tensor[(56), float64] */, meta[relay.Constant][41] /* ty=Tensor[(504), float64] */)
}

def @func_4760() -> (Tensor[(56), float64],) {
  %855 = @func_1843() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(56), float64]) */;
  %856 = %855.1;
  (%856,)
}

def @func_9654() -> Tensor[(12, 14, 14), float64] {
  %858 = fn () -> Tensor[(12, 14, 14), float64] {
    %857 = @func_2354() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64]) */;
    %857.0
  };
  %858() /* ty=Tensor[(12, 14, 14), float64] */
}

def @func_6528() -> (Tensor[(12, 14, 14), int64],) {
  @func_6526() /* ty=(Tensor[(12, 14, 14), int64],) */
}

def @func_1818(%var_1816: Tensor[(13, 7, 7), int8], %var_1817: Tensor[(13, 7, 7), int8]) -> (Tensor[(13, 7, 7), int8],) {
  @func_1814(%var_1816, %var_1817) /* ty=(Tensor[(13, 7, 7), int8],) */
}

def @func_9726() -> (Tensor[(300), float64],) {
  %860 = fn () -> (Tensor[(300), float64],) {
    %859 = @func_7062() /* ty=Tensor[(300), float64] */;
    (%859,)
  };
  %860() /* ty=(Tensor[(300), float64],) */
}

def @func_9893() -> (Tensor[(2240), int64],) {
  @func_9891() /* ty=(Tensor[(2240), int64],) */
}

def @func_10224() -> (Tensor[(12, 14, 14), float64],) {
  %861 = @func_1581() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), float64], Tensor[(56), float64], Tensor[(8, 7, 8), float64], Tensor[(560, 4), int64], Tensor[(975), float64]) */;
  %862 = %861.0;
  (%862,)
}

def @func_9212() -> (Tensor[(12, 14, 14), float64],) {
  @func_9210() /* ty=(Tensor[(12, 14, 14), float64],) */
}

def @func_2984() -> (Tensor[(12, 14, 14), float64], Tensor[(10, 14, 16), int64], Tensor[(140, 16), int64]) {
  %863 = cast(meta[relay.Constant][42] /* ty=Tensor[(140, 16), int64] */, dtype="int64") /* ty=Tensor[(140, 16), int64] */;
  %864 = cast(meta[relay.Constant][42] /* ty=Tensor[(140, 16), int64] */, dtype="int64") /* ty=Tensor[(140, 16), int64] */;
  %865 = reshape(%863, newshape=[10, 14, 16]) /* ty=Tensor[(10, 14, 16), int64] */;
  %866 = reshape(%864, newshape=[10, 14, 16]) /* ty=Tensor[(10, 14, 16), int64] */;
  %867 = @func_416(%865, %866) /* ty=(Tensor[(10, 14, 16), int64], Tensor[(8, 7, 8), float64], Tensor[(56), float64]) */;
  %868 = @func_2015() /* ty=Tensor[(12, 14, 14), float64] */;
  %869 = %867.0;
  (%868, %869, meta[relay.Constant][42] /* ty=Tensor[(140, 16), int64] */)
}

def @func_4356() -> Tensor[(12, 14, 14), int64] {
  %870 = @func_3757() /* ty=(Tensor[(12, 14, 14), int64],) */;
  %870.0
}

def @func_6777(%var_6775: Tensor[(8, 1, 7), float64]) -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), float64], Tensor[(8, ?, 7), uint16]) {
  @func_6774(%var_6775) /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), float64], Tensor[(8, ?, 7), uint16]) */
}

def @func_11346() -> (Tensor[(300), float64], Tensor[(12, 14, 14), float64], Tensor[(14, 4), bool]) {
  %877 = fn () -> (Tensor[(300), float64], Tensor[(12, 14, 14), float64], Tensor[(14, 4), bool]) {
    %871 = @func_4651() /* ty=(Tensor[(300), float64],) */;
    %872 = cast(meta[relay.Constant][43] /* ty=Tensor[(14, 4), bool] */, dtype="bool") /* ty=Tensor[(14, 4), bool] */;
    %873 = reshape(%872, newshape=[2, 28]) /* ty=Tensor[(2, 28), bool] */;
    %874 = @func_9336(%873) /* ty=(Tensor[(560, 4), int64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(2240), int64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64], Tensor[(2, 28), bool]) */;
    %875 = %871.0;
    %876 = %874.2;
    (%875, %876, meta[relay.Constant][43] /* ty=Tensor[(14, 4), bool] */)
  };
  %877() /* ty=(Tensor[(300), float64], Tensor[(12, 14, 14), float64], Tensor[(14, 4), bool]) */
}

def @func_6853() -> (Tensor[(12, 14, 14), int64],) {
  %880 = fn () -> (Tensor[(12, 14, 14), int64],) {
    %878 = @func_3982() /* ty=(Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), float64]) */;
    %879 = %878.0;
    (%879,)
  };
  %880() /* ty=(Tensor[(12, 14, 14), int64],) */
}

def @func_5888() -> (Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), bool], Tensor[(560, 4), int64]) {
  %881 = @func_3000() /* ty=(Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), int64]) */;
  %882 = @func_5767() /* ty=(Tensor[(12, 14, 14), bool], Tensor[(12, 14, 14), float64], Tensor[(560, 4), int64], Tensor[(2, 28), float64]) */;
  %883 = @func_5767() /* ty=(Tensor[(12, 14, 14), bool], Tensor[(12, 14, 14), float64], Tensor[(560, 4), int64], Tensor[(2, 28), float64]) */;
  %884 = %881.0;
  %885 = @func_2495() /* ty=Tensor[(12, 14, 14), float64] */;
  %886 = %882.0;
  %887 = %883.2;
  (%884, %885, %886, %887)
}

def @func_2651() -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) {
  @func_2649() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) */
}

def @func_1220() -> (Tensor[(12, 14, 14), float64],) {
  %888 = @func_1105() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %889 = %888.0;
  (%889,)
}

def @func_6822() -> (Tensor[(2, 28), float64],) {
  @func_6820() /* ty=(Tensor[(2, 28), float64],) */
}

def @func_7359() -> (Tensor[(560, 4), int64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), bool], Tensor[(12, 14, 14), float64], Tensor[(140, 16), int64], Tensor[(12, 5, 11), float64], Tensor[(660), float64]) {
  @func_7357() /* ty=(Tensor[(560, 4), int64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), bool], Tensor[(12, 14, 14), float64], Tensor[(140, 16), int64], Tensor[(12, 5, 11), float64], Tensor[(660), float64]) */
}

def @func_9891() -> (Tensor[(2240), int64],) {
  %890 = @func_2146() /* ty=Tensor[(2240), int64] */;
  (%890,)
}

def @func_7265(%var_7263: Tensor[(560, 4), int32]) -> (Tensor[(560, 4), float64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), float64], Tensor[(140, 16), int64], Tensor[(560, 4), float32], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(560, 4), int32], Tensor[(56), float64], Tensor[(12, 14, 14), float64]) {
  @func_7262(%var_7263) /* ty=(Tensor[(560, 4), float64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), float64], Tensor[(140, 16), int64], Tensor[(560, 4), float32], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(560, 4), int32], Tensor[(56), float64], Tensor[(12, 14, 14), float64]) */
}

def @func_11138(%var_11136: Tensor[(2240), float64]) -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(2240), float64]) {
  %891 = @func_1220() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %892 = cast(%var_11136, dtype="float64") /* ty=Tensor[(2240), float64] */;
  %893 = reshape(%892, newshape=[2240]) /* ty=Tensor[(2240), float64] */;
  %894 = @func_8088(%893) /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(2240), float64]) */;
  %895 = %891.0;
  %896 = %894.0;
  (%895, %896, %var_11136)
}

def @func_10584() -> Tensor[(12, 14, 14), int64] {
  @func_10582() /* ty=Tensor[(12, 14, 14), int64] */
}

def @func_2139(%var_2138: Tensor[(12, 14, 14), float64]) -> Tensor[(12, 14, 14), bool] {
  %903 = fn (%var_2129: Tensor[(12, 14, 14), float64]) -> Tensor[(12, 14, 14), bool] {
    %897 = @func_1105() /* ty=(Tensor[(12, 14, 14), float64],) */;
    %898 = %897.0;
    %899 = cast(%var_2129, dtype="bool") /* ty=Tensor[(12, 14, 14), bool] */;
    %900 = shape_of(%898, dtype="int32") /* ty=Tensor[(3), int32] */;
    %901 = cast(%898, dtype="bool") /* ty=Tensor[(12, 14, 14), bool] */;
    %902 = dyn.reshape(%899, %900, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    greater(%901, %902) /* ty=Tensor[(12, 14, 14), bool] */
  };
  %903(%var_2138) /* ty=Tensor[(12, 14, 14), bool] */
}

def @func_4233() -> (Tensor[(12, 14, 14), float64],) {
  %905 = fn () -> (Tensor[(12, 14, 14), float64],) {
    %904 = @func_2049() /* ty=Tensor[(12, 14, 14), float64] */;
    (%904,)
  };
  %905() /* ty=(Tensor[(12, 14, 14), float64],) */
}

def @func_2917() -> Tensor[(12, 14, 14), float64] {
  @func_2049() /* ty=Tensor[(12, 14, 14), float64] */
}

def @func_10331() -> Tensor[(2, 28), float32] {
  @func_10329() /* ty=Tensor[(2, 28), float32] */
}

def @func_1385(%var_1341: Tensor[(56), float64], %var_1346: Tensor[(2240), int64], %var_1375: Tensor[(975), float64]) -> (Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), float64], Tensor[(56), float64], Tensor[(8, 7, 8), float64], Tensor[(2240), int64], Tensor[(10, 14, 16), int64], Tensor[(75), float64], Tensor[(975), float64]) {
  %906 = @func_1105() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %907 = cast(%var_1341, dtype="float64") /* ty=Tensor[(56), float64] */;
  %908 = reshape(%907, newshape=[8, 7, 1]) /* ty=Tensor[(8, 7, 1), float64] */;
  %909 = cast(%var_1346, dtype="int64") /* ty=Tensor[(2240), int64] */;
  %910 = cast(%var_1346, dtype="int64") /* ty=Tensor[(2240), int64] */;
  %911 = reshape(%909, newshape=[10, 14, 16]) /* ty=Tensor[(10, 14, 16), int64] */;
  %912 = reshape(%910, newshape=[10, 14, 16]) /* ty=Tensor[(10, 14, 16), int64] */;
  %913 = @func_416(%911, %912) /* ty=(Tensor[(10, 14, 16), int64], Tensor[(8, 7, 8), float64], Tensor[(56), float64]) */;
  %914 = cast(meta[relay.Constant][44] /* ty=Tensor[(75), float64] */, dtype="float64") /* ty=Tensor[(75), float64] */;
  %915 = cast(%var_1375, dtype="float64") /* ty=Tensor[(975), float64] */;
  %916 = reshape(%914, newshape=[15, 1, 5]) /* ty=Tensor[(15, 1, 5), float64] */;
  %917 = reshape(%915, newshape=[15, 13, 5]) /* ty=Tensor[(15, 13, 5), float64] */;
  %918 = @func_801(%916, %917) /* ty=(Tensor[(15, 13, 5), float64], Tensor[(10, 14, 16), int64], Tensor[(2240), int64], Tensor[(10, 14, 16), int64]) */;
  %919 = %906.0;
  %920 = @func_71(%908) /* ty=Tensor[(8, 7, 8), float64] */;
  %921 = %913.1;
  %922 = %918.3;
  (%919, %920, %var_1341, %921, %var_1346, %922, meta[relay.Constant][44] /* ty=Tensor[(75), float64] */, %var_1375)
}

def @func_2050() -> Tensor[(12, 14, 14), float64] {
  %924 = fn () -> Tensor[(12, 14, 14), float64] {
    %923 = @func_1105() /* ty=(Tensor[(12, 14, 14), float64],) */;
    %923.0
  };
  %924() /* ty=Tensor[(12, 14, 14), float64] */
}

def @func_8727() -> (Tensor[(56), float64], Tensor[(12, 14, 14), float64]) {
  %925 = @func_1978() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(56), float64], Tensor[(2, 28), float64], Tensor[(2240), int64], Tensor[(65, 15), float64]) */;
  %926 = %925.1;
  %927 = @func_2917() /* ty=Tensor[(12, 14, 14), float64] */;
  (%926, %927)
}

def @func_8524(%var_8522: Tensor[(2, 80), float64]) -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64], Tensor[(2, 80), float64]) {
  @func_8521(%var_8522) /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64], Tensor[(2, 80), float64]) */
}

def @func_10134() -> (Tensor[(56), float64],) {
  @func_10132() /* ty=(Tensor[(56), float64],) */
}

def @func_8048(%var_8044: Tensor[(448), float64]) -> (Tensor[(12, 14, 14), bool], Tensor[(2240), int64], Tensor[(75), float64], Tensor[(975), float64], Tensor[(8, 7, 8), bool], Tensor[(448), float64]) {
  %928 = @func_5767() /* ty=(Tensor[(12, 14, 14), bool], Tensor[(12, 14, 14), float64], Tensor[(560, 4), int64], Tensor[(2, 28), float64]) */;
  %929 = cast(meta[relay.Constant][45] /* ty=Tensor[(75), float64] */, dtype="float64") /* ty=Tensor[(75), float64] */;
  %930 = cast(meta[relay.Constant][46] /* ty=Tensor[(975), float64] */, dtype="float64") /* ty=Tensor[(975), float64] */;
  %931 = reshape(%929, newshape=[15, 1, 5]) /* ty=Tensor[(15, 1, 5), float64] */;
  %932 = reshape(%930, newshape=[15, 13, 5]) /* ty=Tensor[(15, 13, 5), float64] */;
  %933 = @func_801(%931, %932) /* ty=(Tensor[(15, 13, 5), float64], Tensor[(10, 14, 16), int64], Tensor[(2240), int64], Tensor[(10, 14, 16), int64]) */;
  %934 = cast(%var_8044, dtype="float64") /* ty=Tensor[(448), float64] */;
  %935 = reshape(%934, newshape=[8, 7, 8]) /* ty=Tensor[(8, 7, 8), float64] */;
  %936 = @func_3520(%935) /* ty=(Tensor[(8, 7, 8), bool], Tensor[(8, 7, 8), float64], Tensor[(12, 14, 14), bool], Tensor[(12, 14, 14), float64]) */;
  %937 = %928.0;
  %938 = %933.2;
  %939 = %936.0;
  (%937, %938, meta[relay.Constant][45] /* ty=Tensor[(75), float64] */, meta[relay.Constant][46] /* ty=Tensor[(975), float64] */, %939, %var_8044)
}

def @func_8865() -> Tensor[(12, 14, 14), float64] {
  %941 = fn () -> Tensor[(12, 14, 14), float64] {
    %940 = @func_4825() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64]) */;
    %940.0
  };
  %941() /* ty=Tensor[(12, 14, 14), float64] */
}

def @func_4837(%var_4827: Tensor[(3, 3, 12), float64]) -> Tensor[(3, 3, 12), float64] {
  %942 = cast(%var_4827, dtype="float64") /* ty=Tensor[(3, 3, 12), float64] */;
  sigmoid(%942) /* ty=Tensor[(3, 3, 12), float64] */
}

def @func_2497() -> Tensor[(12, 14, 14), float64] {
  @func_2495() /* ty=Tensor[(12, 14, 14), float64] */
}

def @func_1107() -> (Tensor[(12, 14, 14), float64],) {
  @func_1105() /* ty=(Tensor[(12, 14, 14), float64],) */
}

def @func_1628() -> (Tensor[(12, 14, 14), bool], Tensor[(8, 7, 8), float64], Tensor[(12, 14, 14), float64]) {
  %954 = fn () -> (Tensor[(12, 14, 14), bool], Tensor[(8, 7, 8), float64], Tensor[(12, 14, 14), float64]) {
    %943 = @func_1105() /* ty=(Tensor[(12, 14, 14), float64],) */;
    %944 = %943.0;
    %945 = cast(meta[relay.Constant][47] /* ty=Tensor[(12, 14, 14), float64] */, dtype="bool") /* ty=Tensor[(12, 14, 14), bool] */;
    %946 = shape_of(%944, dtype="int32") /* ty=Tensor[(3), int32] */;
    %947 = cast(%944, dtype="bool") /* ty=Tensor[(12, 14, 14), bool] */;
    %948 = dyn.reshape(%945, %946, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %949 = @func_1581() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), float64], Tensor[(56), float64], Tensor[(8, 7, 8), float64], Tensor[(560, 4), int64], Tensor[(975), float64]) */;
    %950 = @func_1105() /* ty=(Tensor[(12, 14, 14), float64],) */;
    %951 = equal(%947, %948) /* ty=Tensor[(12, 14, 14), bool] */;
    %952 = %949.1;
    %953 = %950.0;
    (%951, %952, %953)
  };
  %954() /* ty=(Tensor[(12, 14, 14), bool], Tensor[(8, 7, 8), float64], Tensor[(12, 14, 14), float64]) */
}

def @func_1845() -> (Tensor[(12, 14, 14), float64], Tensor[(56), float64]) {
  @func_1843() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(56), float64]) */
}

def @func_7776() -> (Tensor[(560, 4), float64], Tensor[(12, 5, 11), float64]) {
  @func_7774() /* ty=(Tensor[(560, 4), float64], Tensor[(12, 5, 11), float64]) */
}

def @func_11412() -> Tensor[(300), float64] {
  @func_11410() /* ty=Tensor[(300), float64] */
}

def @func_2724(%var_2702: Tensor[(15, 16, 13), uint16]) -> (Tensor[(15, 16, 13), float32], Tensor[(15, 16, 13), float32]) {
  %955 = cast(%var_2702, dtype="uint16") /* ty=Tensor[(15, 16, 13), uint16] */;
  %956 = shape_of(meta[relay.Constant][48] /* ty=Tensor[(15, 16, 13), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %957 = cast(meta[relay.Constant][48] /* ty=Tensor[(15, 16, 13), uint16] */, dtype="uint16") /* ty=Tensor[(15, 16, 13), uint16] */;
  %958 = dyn.reshape(%955, %956, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %959 = maximum(%957, %958) /* ty=Tensor[(15, 16, 13), uint16] */;
  %960 = cast(%959, dtype="float32") /* ty=Tensor[(15, 16, 13), float32] */;
  %961 = shape_of(%var_2702, dtype="int32") /* ty=Tensor[(3), int32] */;
  %962 = cast(%var_2702, dtype="float32") /* ty=Tensor[(15, 16, 13), float32] */;
  %963 = dyn.reshape(%960, %961, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %964 = cast(%var_2702, dtype="float32") /* ty=Tensor[(15, 16, 13), float32] */;
  %965 = floor_divide(%962, %963) /* ty=Tensor[(15, 16, 13), float32] */;
  %966 = acos(%964) /* ty=Tensor[(15, 16, 13), float32] */;
  (%965, %966)
}

def @func_3246() -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) {
  %967 = @func_1220() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %968 = @func_2241() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %969 = %967.0;
  %970 = %968.0;
  (%969, %970)
}

def @func_9019() -> (Tensor[(2, 28), uint8],) {
  %973 = fn () -> (Tensor[(2, 28), uint8],) {
    %971 = @func_5044() /* ty=(Tensor[(2, 28), uint8],) */;
    %972 = %971.0;
    (%972,)
  };
  %973() /* ty=(Tensor[(2, 28), uint8],) */
}

def @func_2447() -> (Tensor[(2, 28), bool], Tensor[(2, 28), float64], Tensor[(2, 28), int16]) {
  %990 = fn () -> (Tensor[(2, 28), bool], Tensor[(2, 28), float64], Tensor[(2, 28), int16]) {
    %974 = @func_2199() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(2, 28), float32]) */;
    %975 = %974.1;
    %976 = cast(%975, dtype="float32") /* ty=Tensor[(2, 28), float32] */;
    %977 = sinh(%976) /* ty=Tensor[(2, 28), float32] */;
    %978 = cast(%975, dtype="bool") /* ty=Tensor[(2, 28), bool] */;
    %979 = shape_of(%977, dtype="int32") /* ty=Tensor[(2), int32] */;
    %980 = cast(%977, dtype="bool") /* ty=Tensor[(2, 28), bool] */;
    %981 = dyn.reshape(%978, %979, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %982 = cast(%977, dtype="float64") /* ty=Tensor[(2, 28), float64] */;
    %983 = cast(meta[relay.Constant][49] /* ty=Tensor[(2, 28), float32] */, dtype="int16") /* ty=Tensor[(2, 28), int16] */;
    %984 = shape_of(%975, dtype="int32") /* ty=Tensor[(2), int32] */;
    %985 = cast(%975, dtype="int16") /* ty=Tensor[(2, 28), int16] */;
    %986 = dyn.reshape(%983, %984, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
    %987 = greater(%980, %981) /* ty=Tensor[(2, 28), bool] */;
    %988 = asinh(%982) /* ty=Tensor[(2, 28), float64] */;
    %989 = logical_xor(%985, %986) /* ty=Tensor[(2, 28), int16] */;
    (%987, %988, %989)
  };
  %990() /* ty=(Tensor[(2, 28), bool], Tensor[(2, 28), float64], Tensor[(2, 28), int16]) */
}

def @func_1789(%var_1787: Tensor[(504), float64]) -> (Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), float64], Tensor[(1, 300), float64], Tensor[(56), float64], Tensor[(504), float64]) {
  @func_1786(%var_1787) /* ty=(Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), float64], Tensor[(1, 300), float64], Tensor[(56), float64], Tensor[(504), float64]) */
}

def @func_10132() -> (Tensor[(56), float64],) {
  %991 = @func_4760() /* ty=(Tensor[(56), float64],) */;
  %992 = %991.0;
  (%992,)
}

def @func_7133() -> (Tensor[(12, 14, 14), float64],) {
  %993 = @func_5953() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(6, 10, 5), float64], Tensor[(300), float64], Tensor[(56), float64], Tensor[(504), float64]) */;
  %994 = %993.0;
  (%994,)
}

def @func_4958() -> (Tensor[(12, 14, 14), float64],) {
  %996 = fn () -> (Tensor[(12, 14, 14), float64],) {
    %995 = @func_2495() /* ty=Tensor[(12, 14, 14), float64] */;
    (%995,)
  };
  %996() /* ty=(Tensor[(12, 14, 14), float64],) */
}

def @func_2297(%var_2295: Tensor[(56), float64]) -> (Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), float64], Tensor[(56), float64], Tensor[(2240), int64], Tensor[(1, 975), float64]) {
  @func_2294(%var_2295) /* ty=(Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), float64], Tensor[(56), float64], Tensor[(2240), int64], Tensor[(1, 975), float64]) */
}

def @func_4198(%var_4184: Tensor[(975), float64]) -> (Tensor[(2, 28), bool], Tensor[(10, 14, 16), int64], Tensor[(75), float64], Tensor[(975), float64], Tensor[(2, 28), bool]) {
  %997 = cast(meta[relay.Constant][50] /* ty=Tensor[(75), float64] */, dtype="float64") /* ty=Tensor[(75), float64] */;
  %998 = cast(%var_4184, dtype="float64") /* ty=Tensor[(975), float64] */;
  %999 = reshape(%997, newshape=[15, 1, 5]) /* ty=Tensor[(15, 1, 5), float64] */;
  %1000 = reshape(%998, newshape=[15, 13, 5]) /* ty=Tensor[(15, 13, 5), float64] */;
  %1001 = @func_801(%999, %1000) /* ty=(Tensor[(15, 13, 5), float64], Tensor[(10, 14, 16), int64], Tensor[(2240), int64], Tensor[(10, 14, 16), int64]) */;
  %1002 = @func_3400() /* ty=Tensor[(2, 28), bool] */;
  %1003 = %1001.3;
  %1004 = @func_3400() /* ty=Tensor[(2, 28), bool] */;
  (%1002, %1003, meta[relay.Constant][50] /* ty=Tensor[(75), float64] */, %var_4184, %1004)
}

def @func_8190() -> Tensor[(12, 14, 14), float64] {
  %1006 = fn () -> Tensor[(12, 14, 14), float64] {
    %1005 = @func_1180() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) */;
    %1005.1
  };
  %1006() /* ty=Tensor[(12, 14, 14), float64] */
}

def @func_6399() -> (Tensor[(12, 14, 14), bool], Tensor[(300), float64], Tensor[(12, 14, 14), int64], Tensor[(8, 7, 8), float64]) {
  %1007 = @func_5767() /* ty=(Tensor[(12, 14, 14), bool], Tensor[(12, 14, 14), float64], Tensor[(560, 4), int64], Tensor[(2, 28), float64]) */;
  %1008 = @func_4651() /* ty=(Tensor[(300), float64],) */;
  %1009 = @func_1581() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), float64], Tensor[(56), float64], Tensor[(8, 7, 8), float64], Tensor[(560, 4), int64], Tensor[(975), float64]) */;
  %1010 = %1007.0;
  %1011 = %1008.0;
  %1012 = @func_4356() /* ty=Tensor[(12, 14, 14), int64] */;
  %1013 = %1009.1;
  (%1010, %1011, %1012, %1013)
}

def @func_6647(%var_6643: Tensor[(160), float64]) -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64], Tensor[(10, 16, 1), float64], Tensor[(160), float64]) {
  %1014 = @func_5091() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) */;
  %1015 = @func_6053() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %1016 = @func_3000() /* ty=(Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), int64]) */;
  %1017 = cast(%var_6643, dtype="float64") /* ty=Tensor[(160), float64] */;
  %1018 = reshape(%1017, newshape=[10, 16, 1]) /* ty=Tensor[(10, 16, 1), float64] */;
  %1019 = %1014.0;
  %1020 = %1015.0;
  %1021 = %1016.1;
  %1022 = @func_1509(%1018) /* ty=Tensor[(10, 16, 1), float64] */;
  (%1019, %1020, %1021, %1022, %var_6643)
}

def @func_416(%var_381: Tensor[(10, 14, 16), int64], %var_382: Tensor[(10, 14, 16), int64]) -> (Tensor[(10, 14, 16), int64], Tensor[(8, 7, 8), float64], Tensor[(56), float64]) {
  %1023 = cast(%var_382, dtype="int64") /* ty=Tensor[(10, 14, 16), int64] */;
  %1024 = shape_of(%var_381, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1025 = cast(%var_381, dtype="int64") /* ty=Tensor[(10, 14, 16), int64] */;
  %1026 = dyn.reshape(%1023, %1024, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1027 = cast(meta[relay.Constant][51] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
  %1028 = reshape(%1027, newshape=[8, 7, 1]) /* ty=Tensor[(8, 7, 1), float64] */;
  %1029 = add(%1025, %1026) /* ty=Tensor[(10, 14, 16), int64] */;
  %1030 = @func_71(%1028) /* ty=Tensor[(8, 7, 8), float64] */;
  (%1029, %1030, meta[relay.Constant][51] /* ty=Tensor[(56), float64] */)
}

def @func_5243(%var_5238: Tensor[(2352), float64]) -> (Tensor[(56), float64], Tensor[(12, 14, 14), int64], Tensor[(2352), float64]) {
  %1031 = @func_4162() /* ty=(Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), float32], Tensor[(56), float64], Tensor[(50, 6), float64]) */;
  %1032 = cast(%var_5238, dtype="float64") /* ty=Tensor[(2352), float64] */;
  %1033 = reshape(%1032, newshape=[12, 14, 14]) /* ty=Tensor[(12, 14, 14), float64] */;
  %1034 = @func_1469(%1033) /* ty=(Tensor[(12, 14, 14), int64],) */;
  %1035 = %1031.2;
  %1036 = %1034.0;
  (%1035, %1036, %var_5238)
}

def @func_8767() -> (Tensor[(12, 14, 14), float64], Tensor[(13, 7, 7), int8], Tensor[(637), int8]) {
  %1037 = @func_6053() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %1038 = cast(meta[relay.Constant][52] /* ty=Tensor[(637), int8] */, dtype="int8") /* ty=Tensor[(637), int8] */;
  %1039 = cast(meta[relay.Constant][52] /* ty=Tensor[(637), int8] */, dtype="int8") /* ty=Tensor[(637), int8] */;
  %1040 = reshape(%1038, newshape=[13, 7, 7]) /* ty=Tensor[(13, 7, 7), int8] */;
  %1041 = reshape(%1039, newshape=[13, 7, 7]) /* ty=Tensor[(13, 7, 7), int8] */;
  %1042 = @func_1814(%1040, %1041) /* ty=(Tensor[(13, 7, 7), int8],) */;
  %1043 = %1037.0;
  %1044 = %1042.0;
  (%1043, %1044, meta[relay.Constant][52] /* ty=Tensor[(637), int8] */)
}

def @func_8051(%var_8049: Tensor[(448), float64]) -> (Tensor[(12, 14, 14), bool], Tensor[(2240), int64], Tensor[(75), float64], Tensor[(975), float64], Tensor[(8, 7, 8), bool], Tensor[(448), float64]) {
  @func_8048(%var_8049) /* ty=(Tensor[(12, 14, 14), bool], Tensor[(2240), int64], Tensor[(75), float64], Tensor[(975), float64], Tensor[(8, 7, 8), bool], Tensor[(448), float64]) */
}

def @func_10785() -> Tensor[(12, 14, 14), float64] {
  %1046 = fn () -> Tensor[(12, 14, 14), float64] {
    %1045 = @func_6304() /* ty=(Tensor[(12, 14, 14), float64],) */;
    %1045.0
  };
  %1046() /* ty=Tensor[(12, 14, 14), float64] */
}

def @func_9424() -> Tensor[(12, 14, 14), float64] {
  %1047 = @func_1220() /* ty=(Tensor[(12, 14, 14), float64],) */;
  %1047.0
}

def @func_2356() -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64]) {
  @func_2354() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64]) */
}

def @func_10650() -> (Tensor[(12, 14, 14), float64], Tensor[(75), float64], Tensor[(975), int16], Tensor[(975), float64], Tensor[(8, 7, 8), float64], Tensor[(975), int16], Tensor[(12, 14, 14), float64], Tensor[(2, 28), float32]) {
  %1075 = fn () -> (Tensor[(12, 14, 14), float64], Tensor[(75), float64], Tensor[(975), int16], Tensor[(975), float64], Tensor[(8, 7, 8), float64], Tensor[(975), int16], Tensor[(12, 14, 14), float64], Tensor[(2, 28), float32]) {
    %1048 = @func_6038() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(2, 28), float32]) */;
    %1049 = cast(meta[relay.Constant][53] /* ty=Tensor[(75), float64] */, dtype="float64") /* ty=Tensor[(75), float64] */;
    %1050 = cast(meta[relay.Constant][54] /* ty=Tensor[(975), float64] */, dtype="float64") /* ty=Tensor[(975), float64] */;
    %1051 = cast(meta[relay.Constant][54] /* ty=Tensor[(975), float64] */, dtype="float64") /* ty=Tensor[(975), float64] */;
    %1052 = reshape(%1049, newshape=[75]) /* ty=Tensor[(75), float64] */;
    %1053 = reshape(%1050, newshape=[975]) /* ty=Tensor[(975), float64] */;
    %1054 = reshape(%1051, newshape=[975]) /* ty=Tensor[(975), float64] */;
    %1055 = @func_6285(%1052, %1053, %1054) /* ty=(Tensor[(12, 14, 14), float64], Tensor[(10, 14, 16), int64], Tensor[(75), float64], Tensor[(975), bool]) */;
    %1056 = %1055.3;
    %1057 = cast(meta[relay.Constant][54] /* ty=Tensor[(975), float64] */, dtype="int16") /* ty=Tensor[(975), int16] */;
    %1058 = shape_of(%1056, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1059 = cast(%1056, dtype="int16") /* ty=Tensor[(975), int16] */;
    %1060 = dyn.reshape(%1057, %1058, newshape=[]) /* ty=Tensor[(?), int16] */;
    %1061 = @func_1581() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), float64], Tensor[(56), float64], Tensor[(8, 7, 8), float64], Tensor[(560, 4), int64], Tensor[(975), float64]) */;
    %1062 = @func_3617() /* ty=(Tensor[(56), float64], Tensor[(8, 7, 8), float64], Tensor[(300), float64], Tensor[(12, 14, 14), bool], Tensor[(13, 7, 7), int8], Tensor[(1, 637), float64], Tensor[(65, 15), float64]) */;
    %1063 = cast(meta[relay.Constant][54] /* ty=Tensor[(975), float64] */, dtype="int16") /* ty=Tensor[(975), int16] */;
    %1064 = shape_of(%1056, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1065 = cast(%1056, dtype="int16") /* ty=Tensor[(975), int16] */;
    %1066 = dyn.reshape(%1063, %1064, newshape=[]) /* ty=Tensor[(?), int16] */;
    %1067 = @func_4825() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64]) */;
    %1068 = %1048.0;
    %1069 = subtract(%1059, %1060) /* ty=Tensor[(975), int16] */;
    %1070 = %1061.5;
    %1071 = %1062.1;
    %1072 = logical_xor(%1065, %1066) /* ty=Tensor[(975), int16] */;
    %1073 = %1067.0;
    %1074 = @func_10329() /* ty=Tensor[(2, 28), float32] */;
    (%1068, meta[relay.Constant][53] /* ty=Tensor[(75), float64] */, %1069, %1070, %1071, %1072, %1073, %1074)
  };
  %1075() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(75), float64], Tensor[(975), int16], Tensor[(975), float64], Tensor[(8, 7, 8), float64], Tensor[(975), int16], Tensor[(12, 14, 14), float64], Tensor[(2, 28), float32]) */
}

def @func_7081() -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) {
  %1079 = fn () -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) {
    %1076 = @func_5767() /* ty=(Tensor[(12, 14, 14), bool], Tensor[(12, 14, 14), float64], Tensor[(560, 4), int64], Tensor[(2, 28), float64]) */;
    %1077 = %1076.1;
    %1078 = @func_3954() /* ty=Tensor[(12, 14, 14), float64] */;
    (%1077, %1078)
  };
  %1079() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) */
}

def @func_8939() -> Tensor[(12, 14, 14), bool] {
  @func_8937() /* ty=Tensor[(12, 14, 14), bool] */
}

def @func_1469(%var_1460: Tensor[(12, 14, 14), float64]) -> (Tensor[(12, 14, 14), int64],) {
  %1080 = @func_1180() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64]) */;
  %1081 = %1080.1;
  %1082 = cast(%var_1460, dtype="int64") /* ty=Tensor[(12, 14, 14), int64] */;
  %1083 = shape_of(%1081, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1084 = cast(%1081, dtype="int64") /* ty=Tensor[(12, 14, 14), int64] */;
  %1085 = dyn.reshape(%1082, %1083, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1086 = multiply(%1084, %1085) /* ty=Tensor[(12, 14, 14), int64] */;
  (%1086,)
}

def @func_4358() -> Tensor[(12, 14, 14), int64] {
  @func_4356() /* ty=Tensor[(12, 14, 14), int64] */
}

def @func_4729() -> Tensor[(560, 4), float64] {
  %1088 = fn () -> Tensor[(560, 4), float64] {
    %1087 = @func_1727() /* ty=(Tensor[(560, 4), float64],) */;
    %1087.0
  };
  %1088() /* ty=Tensor[(560, 4), float64] */
}

def @func_420(%var_418: Tensor[(10, 14, 16), int64], %var_419: Tensor[(10, 14, 16), int64]) -> (Tensor[(10, 14, 16), int64], Tensor[(8, 7, 8), float64], Tensor[(56), float64]) {
  @func_416(%var_418, %var_419) /* ty=(Tensor[(10, 14, 16), int64], Tensor[(8, 7, 8), float64], Tensor[(56), float64]) */
}

def @func_6942(%var_6941: Tensor[(540), float64]) -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), int64], Tensor[(2, 28), float32], Tensor[(6, 6, 15), bool], Tensor[(540), float64]) {
  %1104 = fn (%var_6930: Tensor[(540), float64]) -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), int64], Tensor[(2, 28), float32], Tensor[(6, 6, 15), bool], Tensor[(540), float64]) {
    %1089 = @func_4333() /* ty=(Tensor[(12, 14, 14), float64],) */;
    %1090 = @func_3757() /* ty=(Tensor[(12, 14, 14), int64],) */;
    %1091 = @func_4825() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64]) */;
    %1092 = %1091.1;
    %1093 = cast(%1092, dtype="float64") /* ty=Tensor[(12, 14, 14), float64] */;
    %1094 = reshape(%1093, newshape=[12, 14, 14]) /* ty=Tensor[(12, 14, 14), float64] */;
    %1095 = @func_1469(%1094) /* ty=(Tensor[(12, 14, 14), int64],) */;
    %1096 = cast(%var_6930, dtype="float64") /* ty=Tensor[(540), float64] */;
    %1097 = reshape(%1096, newshape=[6, 6, 15]) /* ty=Tensor[(6, 6, 15), float64] */;
    %1098 = @func_5272(%1097) /* ty=(Tensor[(12, 14, 14), float64], Tensor[(6, 6, 15), bool]) */;
    %1099 = %1089.0;
    %1100 = %1090.0;
    %1101 = %1095.0;
    %1102 = @func_5593() /* ty=Tensor[(2, 28), float32] */;
    %1103 = %1098.1;
    (%1099, %1100, %1092, %1101, %1102, %1103, %var_6930)
  };
  %1104(%var_6941) /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), int64], Tensor[(2, 28), float32], Tensor[(6, 6, 15), bool], Tensor[(540), float64]) */
}

def @func_1891(%var_1889: Tensor[(3, 10, 1), float64], %var_1890: Tensor[(3, 10, 15), float64]) -> (Tensor[(3, 10, 15), float64],) {
  %1108 = fn (%var_1872: Tensor[(3, 10, 1), float64], %var_1873: Tensor[(3, 10, 15), float64]) -> (Tensor[(3, 10, 15), float64],) {
    %1105 = cast(%var_1872, dtype="float64") /* ty=Tensor[(3, 10, 1), float64] */;
    %1106 = cast(%var_1873, dtype="float64") /* ty=Tensor[(3, 10, 15), float64] */;
    %1107 = divide(%1105, %1106) /* ty=Tensor[(3, 10, 15), float64] */;
    (%1107,)
  };
  %1108(%var_1889, %var_1890) /* ty=(Tensor[(3, 10, 15), float64],) */
}

def @func_1390(%var_1387: Tensor[(56), float64], %var_1388: Tensor[(2240), int64], %var_1389: Tensor[(975), float64]) -> (Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), float64], Tensor[(56), float64], Tensor[(8, 7, 8), float64], Tensor[(2240), int64], Tensor[(10, 14, 16), int64], Tensor[(75), float64], Tensor[(975), float64]) {
  @func_1385(%var_1387, %var_1388, %var_1389) /* ty=(Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), float64], Tensor[(56), float64], Tensor[(8, 7, 8), float64], Tensor[(2240), int64], Tensor[(10, 14, 16), int64], Tensor[(75), float64], Tensor[(975), float64]) */
}

def @func_2108() -> (Tensor[(560, 4), int64],) {
  %1109 = @func_1581() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), float64], Tensor[(56), float64], Tensor[(8, 7, 8), float64], Tensor[(560, 4), int64], Tensor[(975), float64]) */;
  %1110 = %1109.4;
  (%1110,)
}

def @func_4675() -> (Tensor[(560, 4), int64],) {
  @func_4673() /* ty=(Tensor[(560, 4), int64],) */
}

def @func_71(%var_46: Tensor[(8, 7, 1), float64]) -> Tensor[(8, 7, 8), float64] {
  %1111 = cast(%var_46, dtype="float64") /* ty=Tensor[(8, 7, 1), float64] */;
  %1112 = cast(meta[relay.Constant][55] /* ty=Tensor[(8, 7, 8), float64] */, dtype="float64") /* ty=Tensor[(8, 7, 8), float64] */;
  power(%1111, %1112) /* ty=Tensor[(8, 7, 8), float64] */
}

def @func_5649() -> (Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), float64]) {
  @func_5647() /* ty=(Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), float64]) */
}

def @func_3618() -> (Tensor[(56), float64], Tensor[(8, 7, 8), float64], Tensor[(300), float64], Tensor[(12, 14, 14), bool], Tensor[(13, 7, 7), int8], Tensor[(1, 637), float64], Tensor[(65, 15), float64]) {
  %1130 = fn () -> (Tensor[(56), float64], Tensor[(8, 7, 8), float64], Tensor[(300), float64], Tensor[(12, 14, 14), bool], Tensor[(13, 7, 7), int8], Tensor[(1, 637), float64], Tensor[(65, 15), float64]) {
    %1113 = @func_1843() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(56), float64]) */;
    %1114 = cast(meta[relay.Constant][56] /* ty=Tensor[(300), float64] */, dtype="float64") /* ty=Tensor[(300), float64] */;
    %1115 = reshape(%1114, newshape=[300]) /* ty=Tensor[(300), float64] */;
    %1116 = @func_2876(%1115) /* ty=(Tensor[(12, 14, 14), float64], Tensor[(8, 7, 8), float64], Tensor[(300), float64], Tensor[(56), float64], Tensor[(6, 84), float64]) */;
    %1117 = @func_1627() /* ty=(Tensor[(12, 14, 14), bool], Tensor[(8, 7, 8), float64], Tensor[(12, 14, 14), float64]) */;
    %1118 = cast(meta[relay.Constant][57] /* ty=Tensor[(1, 637), int8] */, dtype="int8") /* ty=Tensor[(1, 637), int8] */;
    %1119 = cast(meta[relay.Constant][57] /* ty=Tensor[(1, 637), int8] */, dtype="int8") /* ty=Tensor[(1, 637), int8] */;
    %1120 = reshape(%1118, newshape=[13, 7, 7]) /* ty=Tensor[(13, 7, 7), int8] */;
    %1121 = reshape(%1119, newshape=[13, 7, 7]) /* ty=Tensor[(13, 7, 7), int8] */;
    %1122 = @func_1814(%1120, %1121) /* ty=(Tensor[(13, 7, 7), int8],) */;
    %1123 = cast(meta[relay.Constant][57] /* ty=Tensor[(1, 637), int8] */, dtype="float64") /* ty=Tensor[(1, 637), float64] */;
    %1124 = %1113.1;
    %1125 = %1116.1;
    %1126 = %1117.0;
    %1127 = %1122.0;
    %1128 = asin(%1123) /* ty=Tensor[(1, 637), float64] */;
    %1129 = @func_2088() /* ty=Tensor[(65, 15), float64] */;
    (%1124, %1125, meta[relay.Constant][56] /* ty=Tensor[(300), float64] */, %1126, %1127, %1128, %1129)
  };
  %1130() /* ty=(Tensor[(56), float64], Tensor[(8, 7, 8), float64], Tensor[(300), float64], Tensor[(12, 14, 14), bool], Tensor[(13, 7, 7), int8], Tensor[(1, 637), float64], Tensor[(65, 15), float64]) */
}

def @func_2201() -> (Tensor[(12, 14, 14), float64], Tensor[(2, 28), float32]) {
  @func_2199() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(2, 28), float32]) */
}

def @func_4673() -> (Tensor[(560, 4), int64],) {
  %1131 = @func_4621() /* ty=(Tensor[(14, 10, 13), float64], Tensor[(560, 4), int64], Tensor[(1, 300), float64], Tensor[(504), float64], Tensor[(12, 14, 14), float64]) */;
  %1132 = %1131.1;
  (%1132,)
}

def @func_7135() -> (Tensor[(12, 14, 14), float64],) {
  @func_7133() /* ty=(Tensor[(12, 14, 14), float64],) */
}

def @func_11035() -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), float64]) {
  %1139 = fn () -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), float64]) {
    %1133 = @func_5888() /* ty=(Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), bool], Tensor[(560, 4), int64]) */;
    %1134 = @func_6399() /* ty=(Tensor[(12, 14, 14), bool], Tensor[(300), float64], Tensor[(12, 14, 14), int64], Tensor[(8, 7, 8), float64]) */;
    %1135 = @func_2241() /* ty=(Tensor[(12, 14, 14), float64],) */;
    %1136 = %1133.1;
    %1137 = %1134.2;
    %1138 = %1135.0;
    (%1136, %1137, %1138)
  };
  %1139() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), float64]) */
}

def @func_6223() -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(560, 4), int64], Tensor[(14, 10, 13), float64]) {
  @func_6221() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), float64], Tensor[(560, 4), int64], Tensor[(14, 10, 13), float64]) */
}

def @func_6864() -> Tensor[(56), float64] {
  %1140 = @func_1843() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(56), float64]) */;
  %1140.1
}

def @func_4653() -> (Tensor[(300), float64],) {
  @func_4651() /* ty=(Tensor[(300), float64],) */
}

def @func_9997() -> (Tensor[(12, 14, 14), int64],) {
  %1143 = fn () -> (Tensor[(12, 14, 14), int64],) {
    %1141 = @func_2354() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64]) */;
    %1142 = %1141.1;
    (%1142,)
  };
  %1143() /* ty=(Tensor[(12, 14, 14), int64],) */
}

def @func_8240() -> (Tensor[(12, 14, 14), float64], Tensor[(504), float64]) {
  @func_8238() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(504), float64]) */
}

def @func_3862() -> Tensor[(12, 14, 14), float32] {
  @func_3860() /* ty=Tensor[(12, 14, 14), float32] */
}

def @func_11410() -> Tensor[(300), float64] {
  %1144 = @func_4651() /* ty=(Tensor[(300), float64],) */;
  %1144.0
}

def @func_8587(%var_8586: Tensor[(2, 28), float64]) -> (Tensor[(504), float64], Tensor[(2, 28), int8]) {
  %1154 = fn (%var_8578: Tensor[(2, 28), float64]) -> (Tensor[(504), float64], Tensor[(2, 28), int8]) {
    %1145 = @func_4621() /* ty=(Tensor[(14, 10, 13), float64], Tensor[(560, 4), int64], Tensor[(1, 300), float64], Tensor[(504), float64], Tensor[(12, 14, 14), float64]) */;
    %1146 = @func_6820() /* ty=(Tensor[(2, 28), float64],) */;
    %1147 = %1146.0;
    %1148 = cast(%var_8578, dtype="int8") /* ty=Tensor[(2, 28), int8] */;
    %1149 = shape_of(%1147, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1150 = cast(%1147, dtype="int8") /* ty=Tensor[(2, 28), int8] */;
    %1151 = dyn.reshape(%1148, %1149, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
    %1152 = %1145.3;
    %1153 = bitwise_and(%1150, %1151) /* ty=Tensor[(2, 28), int8] */;
    (%1152, %1153)
  };
  %1154(%var_8586) /* ty=(Tensor[(504), float64], Tensor[(2, 28), int8]) */
}

def @func_7037() -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64]) {
  %1159 = fn () -> (Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64]) {
    %1155 = @func_2354() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64]) */;
    %1156 = @func_5647() /* ty=(Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), float64]) */;
    %1157 = %1155.0;
    %1158 = %1156.0;
    (%1157, %1158)
  };
  %1159() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64]) */
}

def @func_8984() -> (Tensor[(12, 14, 14), int64], Tensor[(12, 14, 14), float64]) {
  %1160 = @func_4825() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64]) */;
  %1161 = @func_7036() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), int64]) */;
  %1162 = %1160.1;
  %1163 = %1161.0;
  (%1162, %1163)
}

def @func_4412() -> Tensor[(12, 14, 14), bool] {
  %1165 = fn () -> Tensor[(12, 14, 14), bool] {
    %1164 = @func_2528() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(12, 14, 14), bool]) */;
    %1164.1
  };
  %1165() /* ty=Tensor[(12, 14, 14), bool] */
}

def @func_7599() -> (Tensor[(560, 4), bool], Tensor[(10, 16, 1), float64], Tensor[(160), float64]) {
  %1178 = fn () -> (Tensor[(560, 4), bool], Tensor[(10, 16, 1), float64], Tensor[(160), float64]) {
    %1166 = @func_5767() /* ty=(Tensor[(12, 14, 14), bool], Tensor[(12, 14, 14), float64], Tensor[(560, 4), int64], Tensor[(2, 28), float64]) */;
    %1167 = %1166.2;
    %1168 = cast(%1167, dtype="float64") /* ty=Tensor[(560, 4), float64] */;
    %1169 = cos(%1168) /* ty=Tensor[(560, 4), float64] */;
    %1170 = cast(%1167, dtype="bool") /* ty=Tensor[(560, 4), bool] */;
    %1171 = shape_of(%1169, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1172 = cast(%1169, dtype="bool") /* ty=Tensor[(560, 4), bool] */;
    %1173 = dyn.reshape(%1170, %1171, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1174 = cast(meta[relay.Constant][58] /* ty=Tensor[(160), float64] */, dtype="float64") /* ty=Tensor[(160), float64] */;
    %1175 = reshape(%1174, newshape=[10, 16, 1]) /* ty=Tensor[(10, 16, 1), float64] */;
    %1176 = logical_and(%1172, %1173) /* ty=Tensor[(560, 4), bool] */;
    %1177 = @func_1509(%1175) /* ty=Tensor[(10, 16, 1), float64] */;
    (%1176, %1177, meta[relay.Constant][58] /* ty=Tensor[(160), float64] */)
  };
  %1178() /* ty=(Tensor[(560, 4), bool], Tensor[(10, 16, 1), float64], Tensor[(160), float64]) */
}

def @func_74(%var_72: Tensor[(8, 7, 1), float64]) -> Tensor[(8, 7, 8), float64] {
  @func_71(%var_72) /* ty=Tensor[(8, 7, 8), float64] */
}

def @func_7998() -> (Tensor[(10, 14, 16), int64], Tensor[(56), float64], Tensor[(975), float64], Tensor[(560, 4), float32], Tensor[(12, 14, 14), float64], Tensor[(560, 4), int64], Tensor[(12, 14, 14), float64], Tensor[(560, 4), uint32]) {
  @func_7996() /* ty=(Tensor[(10, 14, 16), int64], Tensor[(56), float64], Tensor[(975), float64], Tensor[(560, 4), float32], Tensor[(12, 14, 14), float64], Tensor[(560, 4), int64], Tensor[(12, 14, 14), float64], Tensor[(560, 4), uint32]) */
}

def @func_10226() -> (Tensor[(12, 14, 14), float64],) {
  @func_10224() /* ty=(Tensor[(12, 14, 14), float64],) */
}

def @func_2089() -> Tensor[(65, 15), float64] {
  %1180 = fn () -> Tensor[(65, 15), float64] {
    %1179 = @func_1978() /* ty=(Tensor[(12, 14, 14), float64], Tensor[(56), float64], Tensor[(2, 28), float64], Tensor[(2240), int64], Tensor[(65, 15), float64]) */;
    %1179.4
  };
  %1180() /* ty=Tensor[(65, 15), float64] */
}

def @func_4840(%var_4838: Tensor[(3, 3, 12), float64]) -> Tensor[(3, 3, 12), float64] {
  @func_4837(%var_4838) /* ty=Tensor[(3, 3, 12), float64] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

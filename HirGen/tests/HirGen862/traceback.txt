==========mod==========
#[version = "0.0.5"]
def @func_409(%var_407: Tensor[(2112), float32]) -> (Tensor[(5, 16, 10), int16], Tensor[(16, 12, 11), float32], Tensor[(2112), float32]) {
  %0 = cast(meta[relay.Constant][1] /* ty=Tensor[(5, 16, 10), int16] */, dtype="int16") /* ty=Tensor[(5, 16, 10), int16] */;
  %1 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(5, 16, 10), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(5, 16, 10), int16] */, dtype="int16") /* ty=Tensor[(5, 16, 10), int16] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %4 = cast(%var_407, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %5 = cast(%var_407, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %6 = reshape(%4, newshape=[16, 12, 11]) /* ty=Tensor[(16, 12, 11), float32] */;
  %7 = reshape(%5, newshape=[16, 12, 11]) /* ty=Tensor[(16, 12, 11), float32] */;
  %8 = @func_199(%6, %7) /* ty=(Tensor[(16, 12, 11), float32],) */;
  %9 = maximum(%2, %3) /* ty=Tensor[(5, 16, 10), int16] */;
  %10 = %8.0;
  (%9, %10, %var_407)
}

def @func_1695(%var_1691: Tensor[(15, 14, 4), float64]) -> (Tensor[(15, 14, 4), float64],) {
  %11 = cast(%var_1691, dtype="float64") /* ty=Tensor[(15, 14, 4), float64] */;
  %12 = cos(%11) /* ty=Tensor[(15, 14, 4), float64] */;
  (%12,)
}

def @func_7235() -> (Tensor[(15, 14, 4), float64],) {
  %13 = @func_4428() /* ty=(Tensor[(15, 14, 4), float64],) */;
  %14 = %13.0;
  (%14,)
}

def @func_7723() -> Tensor[(7, 8, ?), uint16] {
  %15 = @func_7426() /* ty=(Tensor[(7, 8, ?), int64],) */;
  %16 = %15.0;
  %17 = @func_5207() /* ty=Tensor[(7, 8, ?), bool] */;
  %18 = cast(%17, dtype="uint16") /* ty=Tensor[(7, 8, ?), uint16] */;
  %19 = shape_of(%16, dtype="int32") /* ty=Tensor[(3), int32] */;
  %20 = cast(%16, dtype="uint16") /* ty=Tensor[(7, 8, ?), uint16] */;
  %21 = dyn.reshape(%18, %19, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  subtract(%20, %21) /* ty=Tensor[(7, 8, ?), uint16] */
}

def @func_7594() -> (Tensor[(15, 14, 4), float64],) {
  %22 = @func_4428() /* ty=(Tensor[(15, 14, 4), float64],) */;
  %23 = %22.0;
  (%23,)
}

def @func_8448() -> Tensor[(15, 14, 4), float64] {
  %24 = @func_4428() /* ty=(Tensor[(15, 14, 4), float64],) */;
  %24.0
}

def @func_5542() -> Tensor[(7, 8, 1), float32] {
  @func_4298() /* ty=Tensor[(7, 8, 1), float32] */
}

def @func_7365() -> (Tensor[(7, 8, ?), float32], Tensor[(7, 8, 1), float32]) {
  %25 = @func_5465() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(7, 8, 1), float32]) */;
  %26 = @func_6641() /* ty=Tensor[(7, 8, ?), float32] */;
  %27 = %25.0;
  (%26, %27)
}

def @func_7676(%var_7655: Tensor[(7560), float64], %var_7670: float32, %var_7671: Tensor[(90), float32]) -> (Tensor[(7, 8, 1), float32], Tensor[(7560), float64], Tensor[(16, 12, 11), float32], Tensor[(7, 8, 1), float32], float32, Tensor[(90), float32], Tensor[(672), float32]) {
  %28 = @func_7383() /* ty=(Tensor[(1, 840), float64], Tensor[(7, 8, 1), float32]) */;
  %29 = cast(%var_7655, dtype="float64") /* ty=Tensor[(7560), float64] */;
  %30 = reshape(%29, newshape=[9, 840]) /* ty=Tensor[(9, 840), float64] */;
  %31 = @func_7291(%30) /* ty=(Tensor[(16, 12, 11), float32], Tensor[(9, 840), uint16], Tensor[(15, 14, 4), float64]) */;
  %32 = %31.0;
  %33 = cast(%32, dtype="float32") /* ty=Tensor[(16, 12, 11), float32] */;
  %34 = cast(%var_7670, dtype="float32") /* ty=float32 */;
  %35 = cast(%var_7671, dtype="float32") /* ty=Tensor[(90), float32] */;
  %36 = cast(meta[relay.Constant][2] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %37 = reshape(%34, newshape=[]) /* ty=float32 */;
  %38 = reshape(%35, newshape=[90]) /* ty=Tensor[(90), float32] */;
  %39 = reshape(%36, newshape=[168, 4]) /* ty=Tensor[(168, 4), float32] */;
  %40 = @func_5275(%37, %38, %39) /* ty=(Tensor[(7, 8, 1), float32], Tensor[(90), float32], float32, Tensor[(90), float32], Tensor[(7, 8, 12), bool], Tensor[(168, 4), float32], Tensor[(7, 8, 1), float32], Tensor[(7, 8, 1), float32], Tensor[(132, 16), float32]) */;
  %41 = %28.1;
  %42 = erf(%33) /* ty=Tensor[(16, 12, 11), float32] */;
  %43 = %40.0;
  (%41, %var_7655, %42, %43, %var_7670, %var_7671, meta[relay.Constant][2] /* ty=Tensor[(672), float32] */)
}

def @func_8572() -> (Tensor[(15, 14, 4), float64], Tensor[(5, 16, 10), int16], Tensor[(720), float32], Tensor[(7, 8, 1), float32]) {
  %44 = @func_7235() /* ty=(Tensor[(15, 14, 4), float64],) */;
  %45 = cast(meta[relay.Constant][3] /* ty=Tensor[(720), float32] */, dtype="float32") /* ty=Tensor[(720), float32] */;
  %46 = reshape(%45, newshape=[10, 9, 8]) /* ty=Tensor[(10, 9, 8), float32] */;
  %47 = @func_727(%46) /* ty=(Tensor[(5, 16, 10), int16], Tensor[(10, 9, 8), float32], Tensor[(2112), uint8], Tensor[(2112), float32], Tensor[(2112), bool]) */;
  %48 = %44.0;
  %49 = cast(%48, dtype="float64") /* ty=Tensor[(15, 14, 4), float64] */;
  %50 = reshape(%49, newshape=[6, 140]) /* ty=Tensor[(6, 140), float64] */;
  %51 = @func_7080(%50) /* ty=(Tensor[(7, 8, 1), float32], Tensor[(15, 14, 4), float64], Tensor[(6, 140), float64], Tensor[(7, 8, 1), float32], Tensor[(7, 3, 15), float32], Tensor[(315), float32]) */;
  %52 = %47.0;
  %53 = %51.3;
  (%48, %52, meta[relay.Constant][3] /* ty=Tensor[(720), float32] */, %53)
}

def @func_7496() -> Tensor[(7, 8, 1), float32] {
  %54 = @func_5465() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(7, 8, 1), float32]) */;
  %54.1
}

def @func_10642(%var_10518: Tensor[(1664), uint64], %var_10519: Tensor[(2112), float32]) -> (Tensor[(7, 8, 1), float64], Tensor[(7, 8, 1), float64], Tensor[(15, 14, 4), float64], Tensor[(840), float64], Tensor[(1664), uint64], Tensor[(2112), float32], Tensor[(12, 13, 16), float32], Tensor[(7, 8, 1), float32], Tensor[(7, 8, ?), bool], Tensor[(7, 8, 1), float32], Tensor[(15, 14, 4), float64], Tensor[(7, 8, 1), float32], Tensor[(12, 13, 16), bool], Tensor[(5, 16, 10), int16], Tensor[(7, 8, 1), float32], Tensor[(12, 13, 16), int32], Tensor[(12, 13, 16), bool]) {
  %55 = @func_10024() /* ty=(Tensor[(7, 8, 1), float64],) */;
  %56 = @func_6837() /* ty=(Tensor[(7, 8, 1), float64],) */;
  %57 = cast(meta[relay.Constant][4] /* ty=Tensor[(840), float64] */, dtype="float64") /* ty=Tensor[(840), float64] */;
  %58 = cast(%var_10518, dtype="uint64") /* ty=Tensor[(1664), uint64] */;
  %59 = cast(%var_10519, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %60 = reshape(%57, newshape=[2, 420]) /* ty=Tensor[(2, 420), float64] */;
  %61 = reshape(%58, newshape=[1664]) /* ty=Tensor[(1664), uint64] */;
  %62 = reshape(%59, newshape=[2112]) /* ty=Tensor[(2112), float32] */;
  %63 = @func_4706(%60, %61, %62) /* ty=(Tensor[(7, 8, 1), float32], Tensor[(16, 12, 11), float32], Tensor[(15, 14, 4), float64], Tensor[(2, 420), float64], Tensor[(2112), float32], Tensor[(1664), uint64], Tensor[(2112), int8]) */;
  %64 = cast(-7.11962f64 /* ty=float64 */, dtype="bool") /* ty=bool */;
  %65 = cast(meta[relay.Constant][5] /* ty=Tensor[(12, 13, 16), float64] */, dtype="bool") /* ty=Tensor[(12, 13, 16), bool] */;
  %66 = less(%64, %65) /* ty=Tensor[(12, 13, 16), bool] */;
  %67 = cast(%66, dtype="float64") /* ty=Tensor[(12, 13, 16), float64] */;
  %68 = sin(%67) /* ty=Tensor[(12, 13, 16), float64] */;
  %69 = cast(%68, dtype="float32") /* ty=Tensor[(12, 13, 16), float32] */;
  %70 = sqrt(%69) /* ty=Tensor[(12, 13, 16), float32] */;
  %71 = cast(%70, dtype="float64") /* ty=Tensor[(12, 13, 16), float64] */;
  %72 = atanh(%71) /* ty=Tensor[(12, 13, 16), float64] */;
  %73 = cast(%72, dtype="float32") /* ty=Tensor[(12, 13, 16), float32] */;
  %74 = @func_7365() /* ty=(Tensor[(7, 8, ?), float32], Tensor[(7, 8, 1), float32]) */;
  %75 = @func_7594() /* ty=(Tensor[(15, 14, 4), float64],) */;
  %76 = @func_4750() /* ty=(Tensor[(7, 8, 1), float32],) */;
  %77 = cast(%72, dtype="float64") /* ty=Tensor[(12, 13, 16), float64] */;
  %78 = log2(%77) /* ty=Tensor[(12, 13, 16), float64] */;
  %79 = cast(%72, dtype="bool") /* ty=Tensor[(12, 13, 16), bool] */;
  %80 = shape_of(%78, dtype="int32") /* ty=Tensor[(3), int32] */;
  %81 = cast(%78, dtype="bool") /* ty=Tensor[(12, 13, 16), bool] */;
  %82 = dyn.reshape(%79, %80, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %83 = @func_7962() /* ty=(Tensor[(5, 16, 10), int16],) */;
  %84 = cast(%70, dtype="int32") /* ty=Tensor[(12, 13, 16), int32] */;
  %85 = shape_of(%78, dtype="int32") /* ty=Tensor[(3), int32] */;
  %86 = cast(%78, dtype="int32") /* ty=Tensor[(12, 13, 16), int32] */;
  %87 = dyn.reshape(%84, %85, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %88 = cast(meta[relay.Constant][6] /* ty=Tensor[(12, 13, 16), float32] */, dtype="bool") /* ty=Tensor[(12, 13, 16), bool] */;
  %89 = shape_of(%70, dtype="int32") /* ty=Tensor[(3), int32] */;
  %90 = cast(%70, dtype="bool") /* ty=Tensor[(12, 13, 16), bool] */;
  %91 = dyn.reshape(%88, %89, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %92 = equal(%90, %91) /* ty=Tensor[(12, 13, 16), bool] */;
  %93 = cast(meta[relay.Constant][6] /* ty=Tensor[(12, 13, 16), float32] */, dtype="bool") /* ty=Tensor[(12, 13, 16), bool] */;
  %94 = shape_of(%92, dtype="int32") /* ty=Tensor[(3), int32] */;
  %95 = cast(%92, dtype="bool") /* ty=Tensor[(12, 13, 16), bool] */;
  %96 = dyn.reshape(%93, %94, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %97 = %55.0;
  %98 = %56.0;
  %99 = %63.2;
  %100 = log10(%73) /* ty=Tensor[(12, 13, 16), float32] */;
  %101 = @func_5542() /* ty=Tensor[(7, 8, 1), float32] */;
  %102 = @func_5207() /* ty=Tensor[(7, 8, ?), bool] */;
  %103 = %74.1;
  %104 = %75.0;
  %105 = %76.0;
  %106 = less_equal(%81, %82) /* ty=Tensor[(12, 13, 16), bool] */;
  %107 = %83.0;
  %108 = @func_7496() /* ty=Tensor[(7, 8, 1), float32] */;
  %109 = bitwise_xor(%86, %87) /* ty=Tensor[(12, 13, 16), int32] */;
  %110 = greater(%95, %96) /* ty=Tensor[(12, 13, 16), bool] */;
  (%97, %98, %99, meta[relay.Constant][4] /* ty=Tensor[(840), float64] */, %var_10518, %var_10519, %100, %101, %102, %103, %104, %105, %106, %107, %108, %109, %110)
}

def @func_6282(%var_6264: Tensor[(2112), float32]) -> (Tensor[(1, 840), float64], Tensor[(132, 16), float32], Tensor[(2112), float64]) {
  %111 = @func_4157() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(15, 14, 4), float64], Tensor[(1, 840), float64], Tensor[(7, 8, 1), float32]) */;
  %112 = cast(%var_6264, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %113 = reshape(%112, newshape=[132, 16]) /* ty=Tensor[(132, 16), float32] */;
  %114 = @func_6135(%113) /* ty=(Tensor[(7, 8, ?), float64], Tensor[(5, 16, 10), int16], Tensor[(132, 16), float32]) */;
  %115 = cast(%var_6264, dtype="float64") /* ty=Tensor[(2112), float64] */;
  %116 = %111.2;
  %117 = %114.2;
  %118 = sinh(%115) /* ty=Tensor[(2112), float64] */;
  (%116, %117, %118)
}

def @func_8141(%var_8055: Tensor[(9, 8, 10), float32], %var_8076: Tensor[(840), float64]) -> (Tensor[(15, 14, 4), float64], Tensor[(840), float64], Tensor[(13, 3, 12), uint16], uint16, Tensor[(468), uint16], Tensor[(9, 8, 10), bool]) {
  %119 = cast(%var_8076, dtype="float64") /* ty=Tensor[(840), float64] */;
  %120 = reshape(%119, newshape=[15, 14, 4]) /* ty=Tensor[(15, 14, 4), float64] */;
  %121 = @func_1695(%120) /* ty=(Tensor[(15, 14, 4), float64],) */;
  %122 = cast(meta[relay.Constant][7] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %123 = cast(meta[relay.Constant][8] /* ty=Tensor[(468), uint16] */, dtype="uint16") /* ty=Tensor[(468), uint16] */;
  %124 = reshape(%122, newshape=[]) /* ty=uint16 */;
  %125 = reshape(%123, newshape=[13, 3, 12]) /* ty=Tensor[(13, 3, 12), uint16] */;
  %126 = cast(%var_8055, dtype="float32") /* ty=Tensor[(9, 8, 10), float32] */;
  %127 = log10(%126) /* ty=Tensor[(9, 8, 10), float32] */;
  %128 = cast(%var_8055, dtype="bool") /* ty=Tensor[(9, 8, 10), bool] */;
  %129 = shape_of(%127, dtype="int32") /* ty=Tensor[(3), int32] */;
  %130 = cast(%127, dtype="bool") /* ty=Tensor[(9, 8, 10), bool] */;
  %131 = dyn.reshape(%128, %129, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %132 = %121.0;
  %133 = @func_2740(%124, %125) /* ty=Tensor[(13, 3, 12), uint16] */;
  %134 = greater_equal(%130, %131) /* ty=Tensor[(9, 8, 10), bool] */;
  (%132, %var_8076, %133, meta[relay.Constant][7] /* ty=uint16 */, meta[relay.Constant][8] /* ty=Tensor[(468), uint16] */, %134)
}

def @func_10077(%var_10048: Tensor[(2, 840), float64]) -> (Tensor[(2, 840), float32], Tensor[(16, 12, 11), float32], Tensor[(2, 840), float32]) {
  %135 = @func_4157() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(15, 14, 4), float64], Tensor[(1, 840), float64], Tensor[(7, 8, 1), float32]) */;
  %136 = %135.2;
  %137 = cast(%136, dtype="float32") /* ty=Tensor[(1, 840), float32] */;
  %138 = cast(%var_10048, dtype="float32") /* ty=Tensor[(2, 840), float32] */;
  %139 = @func_6056() /* ty=(Tensor[(16, 12, 11), float32],) */;
  %140 = cast(%136, dtype="float32") /* ty=Tensor[(1, 840), float32] */;
  %141 = cast(%var_10048, dtype="float32") /* ty=Tensor[(2, 840), float32] */;
  %142 = divide(%137, %138) /* ty=Tensor[(2, 840), float32] */;
  %143 = %139.0;
  %144 = maximum(%140, %141) /* ty=Tensor[(2, 840), float32] */;
  (%142, %143, %144)
}

def @func_6920(%var_6916: Tensor[(840), float64]) -> (Tensor[(7, 8, 1), float32], Tensor[(7, 8, ?), float64], Tensor[(12, 2, 5), uint32], Tensor[(120), uint32], Tensor[(16, 12, 11), float32], Tensor[(132, 16), float64], Tensor[(7, 8, 1), float32], Tensor[(840), float64]) {
  %145 = cast(meta[relay.Constant][9] /* ty=Tensor[(132, 16), float32] */, dtype="float32") /* ty=Tensor[(132, 16), float32] */;
  %146 = reshape(%145, newshape=[132, 16]) /* ty=Tensor[(132, 16), float32] */;
  %147 = @func_6135(%146) /* ty=(Tensor[(7, 8, ?), float64], Tensor[(5, 16, 10), int16], Tensor[(132, 16), float32]) */;
  %148 = cast(meta[relay.Constant][10] /* ty=Tensor[(120), uint32] */, dtype="uint32") /* ty=Tensor[(120), uint32] */;
  %149 = cast(meta[relay.Constant][10] /* ty=Tensor[(120), uint32] */, dtype="uint32") /* ty=Tensor[(120), uint32] */;
  %150 = reshape(%148, newshape=[12, 2, 5]) /* ty=Tensor[(12, 2, 5), uint32] */;
  %151 = reshape(%149, newshape=[12, 2, 5]) /* ty=Tensor[(12, 2, 5), uint32] */;
  %152 = @func_6484(%150, %151) /* ty=(Tensor[(12, 2, 5), uint32],) */;
  %153 = @func_6056() /* ty=(Tensor[(16, 12, 11), float32],) */;
  %154 = cast(meta[relay.Constant][9] /* ty=Tensor[(132, 16), float32] */, dtype="float64") /* ty=Tensor[(132, 16), float64] */;
  %155 = cast(%var_6916, dtype="float64") /* ty=Tensor[(840), float64] */;
  %156 = reshape(%155, newshape=[840]) /* ty=Tensor[(840), float64] */;
  %157 = @func_4325(%156) /* ty=(Tensor[(7, 8, 1), float32], Tensor[(15, 14, 4), float64], Tensor[(840), float64]) */;
  %158 = @func_4298() /* ty=Tensor[(7, 8, 1), float32] */;
  %159 = %147.0;
  %160 = %152.0;
  %161 = %153.0;
  %162 = sigmoid(%154) /* ty=Tensor[(132, 16), float64] */;
  %163 = %157.0;
  (%158, %159, %160, meta[relay.Constant][10] /* ty=Tensor[(120), uint32] */, %161, %162, %163, %var_6916)
}

def @func_6676() -> (Tensor[(7, 8, ?), int8], Tensor[(7, 8, ?), bool]) {
  %164 = @func_6631() /* ty=(Tensor[(7, 8, ?), int8],) */;
  %165 = %164.0;
  %166 = cast(%165, dtype="float32") /* ty=Tensor[(7, 8, ?), float32] */;
  %167 = reshape(%166, newshape=[7, 8, 1]) /* ty=Tensor[(7, 8, 1), float32] */;
  %168 = @func_5876(%167) /* ty=(Tensor[(7, 8, ?), bool], Tensor[(7, 8, 1), float32], int64, Tensor[(60), int64]) */;
  %169 = %168.0;
  (%165, %169)
}

def @func_10264() -> Tensor[(7, 8, 1), float32] {
  %170 = @func_6882() /* ty=(Tensor[(7, 8, 1), float32],) */;
  %170.0
}

def @func_5433() -> (Tensor[(7, 8, ?), float32], Tensor[(1694), uint64]) {
  %171 = @func_5207() /* ty=Tensor[(7, 8, ?), bool] */;
  %172 = cast(%171, dtype="float32") /* ty=Tensor[(7, 8, ?), float32] */;
  %173 = cast(meta[relay.Constant][11] /* ty=Tensor[(1694), float64] */, dtype="float64") /* ty=Tensor[(1694), float64] */;
  %174 = reshape(%173, newshape=[1694]) /* ty=Tensor[(1694), float64] */;
  %175 = @func_5341(%174) /* ty=(Tensor[(7, 8, 1), float32], Tensor[(11, 14, 11), float64], float64, Tensor[(1694), float64]) */;
  %176 = %175.2;
  %177 = cast(%176, dtype="uint64") /* ty=uint64 */;
  %178 = cast(meta[relay.Constant][11] /* ty=Tensor[(1694), float64] */, dtype="uint64") /* ty=Tensor[(1694), uint64] */;
  %179 = atan(%172) /* ty=Tensor[(7, 8, ?), float32] */;
  %180 = add(%177, %178) /* ty=Tensor[(1694), uint64] */;
  (%179, %180)
}

def @func_4477() -> (Tensor[(7, 8, 1), float32], Tensor[(7, 8, 1), float32], Tensor[(15, 14, 4), float64]) {
  %181 = @func_4298() /* ty=Tensor[(7, 8, 1), float32] */;
  %182 = cast(%181, dtype="float32") /* ty=Tensor[(7, 8, 1), float32] */;
  %183 = cast(%181, dtype="float32") /* ty=Tensor[(7, 8, 1), float32] */;
  %184 = @func_4157() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(15, 14, 4), float64], Tensor[(1, 840), float64], Tensor[(7, 8, 1), float32]) */;
  %185 = asin(%182) /* ty=Tensor[(7, 8, 1), float32] */;
  %186 = cosh(%183) /* ty=Tensor[(7, 8, 1), float32] */;
  %187 = %184.1;
  (%185, %186, %187)
}

def @func_7548() -> (Tensor[(7, 8, 1), float32],) {
  %188 = @func_6010() /* ty=(Tensor[(7, 8, ?), bool], Tensor[(7, 8, 1), float32]) */;
  %189 = %188.1;
  (%189,)
}

def @func_5039(%var_5030: float64, %var_5031: Tensor[(11, 14, 11), float64]) -> Tensor[(11, 14, 11), float64] {
  %190 = cast(%var_5030, dtype="float64") /* ty=float64 */;
  %191 = cast(%var_5031, dtype="float64") /* ty=Tensor[(11, 14, 11), float64] */;
  floor_divide(%190, %191) /* ty=Tensor[(11, 14, 11), float64] */
}

def @func_9192() -> Tensor[(15, 14, 4), float64] {
  %192 = @func_7594() /* ty=(Tensor[(15, 14, 4), float64],) */;
  %192.0
}

def @func_7383() -> (Tensor[(1, 840), float64], Tensor[(7, 8, 1), float32]) {
  %193 = @func_4157() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(15, 14, 4), float64], Tensor[(1, 840), float64], Tensor[(7, 8, 1), float32]) */;
  %194 = %193.2;
  %195 = @func_6495() /* ty=Tensor[(7, 8, 1), float32] */;
  (%194, %195)
}

def @func_3146(%var_3119: Tensor[(16, 8, 13), uint64], %var_3120: Tensor[(16, 8, 13), uint64]) -> (Tensor[(16, 8, 13), uint64], Tensor[(3, 5, 16), float32], Tensor[(2112), float32]) {
  %196 = cast(%var_3120, dtype="uint64") /* ty=Tensor[(16, 8, 13), uint64] */;
  %197 = shape_of(%var_3119, dtype="int32") /* ty=Tensor[(3), int32] */;
  %198 = cast(%var_3119, dtype="uint64") /* ty=Tensor[(16, 8, 13), uint64] */;
  %199 = dyn.reshape(%196, %197, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %200 = cast(meta[relay.Constant][12] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %201 = reshape(%200, newshape=[2112]) /* ty=Tensor[(2112), float32] */;
  %202 = @func_1150(%201) /* ty=(Tensor[(3, 5, 16), float64], Tensor[(3, 5, 16), float32], Tensor[(16, 12, 11), float32], Tensor[(2112), float32]) */;
  %203 = left_shift(%198, %199) /* ty=Tensor[(16, 8, 13), uint64] */;
  %204 = %202.1;
  (%203, %204, meta[relay.Constant][12] /* ty=Tensor[(2112), float32] */)
}

def @func_4706(%var_4674: Tensor[(2, 420), float64], %var_4681: Tensor[(1664), uint64], %var_4686: Tensor[(2112), float32]) -> (Tensor[(7, 8, 1), float32], Tensor[(16, 12, 11), float32], Tensor[(15, 14, 4), float64], Tensor[(2, 420), float64], Tensor[(2112), float32], Tensor[(1664), uint64], Tensor[(2112), int8]) {
  %205 = @func_4126() /* ty=(Tensor[(7, 8, 1), float32],) */;
  %206 = cast(meta[relay.Constant][13] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %207 = cast(meta[relay.Constant][13] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %208 = reshape(%206, newshape=[16, 12, 11]) /* ty=Tensor[(16, 12, 11), float32] */;
  %209 = reshape(%207, newshape=[16, 12, 11]) /* ty=Tensor[(16, 12, 11), float32] */;
  %210 = @func_199(%208, %209) /* ty=(Tensor[(16, 12, 11), float32],) */;
  %211 = cast(%var_4674, dtype="float64") /* ty=Tensor[(2, 420), float64] */;
  %212 = reshape(%211, newshape=[15, 14, 4]) /* ty=Tensor[(15, 14, 4), float64] */;
  %213 = @func_1695(%212) /* ty=(Tensor[(15, 14, 4), float64],) */;
  %214 = cast(%var_4681, dtype="uint64") /* ty=Tensor[(1664), uint64] */;
  %215 = cast(%var_4681, dtype="uint64") /* ty=Tensor[(1664), uint64] */;
  %216 = reshape(%214, newshape=[16, 8, 13]) /* ty=Tensor[(16, 8, 13), uint64] */;
  %217 = reshape(%215, newshape=[16, 8, 13]) /* ty=Tensor[(16, 8, 13), uint64] */;
  %218 = @func_3146(%216, %217) /* ty=(Tensor[(16, 8, 13), uint64], Tensor[(3, 5, 16), float32], Tensor[(2112), float32]) */;
  %219 = cast(meta[relay.Constant][13] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %220 = atan(%219) /* ty=Tensor[(2112), float32] */;
  %221 = cast(%var_4686, dtype="float64") /* ty=Tensor[(2112), float64] */;
  %222 = shape_of(%220, dtype="int32") /* ty=Tensor[(1), int32] */;
  %223 = cast(%220, dtype="float64") /* ty=Tensor[(2112), float64] */;
  %224 = dyn.reshape(%221, %222, newshape=[]) /* ty=Tensor[(?), float64] */;
  %225 = power(%223, %224) /* ty=Tensor[(2112), float64] */;
  %226 = cast(%220, dtype="int8") /* ty=Tensor[(2112), int8] */;
  %227 = shape_of(%225, dtype="int32") /* ty=Tensor[(1), int32] */;
  %228 = cast(%225, dtype="int8") /* ty=Tensor[(2112), int8] */;
  %229 = dyn.reshape(%226, %227, newshape=[]) /* ty=Tensor[(?), int8] */;
  %230 = %205.0;
  %231 = %210.0;
  %232 = %213.0;
  %233 = %218.2;
  %234 = bitwise_or(%228, %229) /* ty=Tensor[(2112), int8] */;
  (%230, %231, %232, %var_4674, %233, %var_4681, %234)
}

def @func_6135(%var_6126: Tensor[(132, 16), float32]) -> (Tensor[(7, 8, ?), float64], Tensor[(5, 16, 10), int16], Tensor[(132, 16), float32]) {
  %235 = @func_6010() /* ty=(Tensor[(7, 8, ?), bool], Tensor[(7, 8, 1), float32]) */;
  %236 = %235.0;
  %237 = cast(%236, dtype="float64") /* ty=Tensor[(7, 8, ?), float64] */;
  %238 = cast(%var_6126, dtype="float32") /* ty=Tensor[(132, 16), float32] */;
  %239 = reshape(%238, newshape=[2112]) /* ty=Tensor[(2112), float32] */;
  %240 = @func_409(%239) /* ty=(Tensor[(5, 16, 10), int16], Tensor[(16, 12, 11), float32], Tensor[(2112), float32]) */;
  %241 = log(%237) /* ty=Tensor[(7, 8, ?), float64] */;
  %242 = %240.0;
  (%241, %242, %var_6126)
}

def @func_5099() -> (Tensor[(7, 8, 1), float32],) {
  %243 = @func_4750() /* ty=(Tensor[(7, 8, 1), float32],) */;
  %244 = %243.0;
  (%244,)
}

def @func_6056() -> (Tensor[(16, 12, 11), float32],) {
  %245 = @func_4830() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(16, 12, 11), float32], Tensor[(44, 48), float32]) */;
  %246 = %245.1;
  (%246,)
}

def @func_8759() -> (Tensor[(7, 8, 1), float64],) {
  %247 = @func_4975() /* ty=(Tensor[(7, 8, 1), float64], Tensor[(7, 8, 1), float64]) */;
  %248 = %247.1;
  (%248,)
}

def @func_8782() -> (Tensor[(7, 8, 1), float32],) {
  %249 = @func_8759() /* ty=(Tensor[(7, 8, 1), float64],) */;
  %250 = %249.0;
  %251 = cast(%250, dtype="float32") /* ty=Tensor[(7, 8, 1), float32] */;
  %252 = acosh(%251) /* ty=Tensor[(7, 8, 1), float32] */;
  (%252,)
}

def @func_4975() -> (Tensor[(7, 8, 1), float64], Tensor[(7, 8, 1), float64]) {
  %253 = @func_4477() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(7, 8, 1), float32], Tensor[(15, 14, 4), float64]) */;
  %254 = %253.1;
  %255 = cast(%254, dtype="float64") /* ty=Tensor[(7, 8, 1), float64] */;
  %256 = cast(%254, dtype="float64") /* ty=Tensor[(7, 8, 1), float64] */;
  %257 = log2(%255) /* ty=Tensor[(7, 8, 1), float64] */;
  %258 = sinh(%256) /* ty=Tensor[(7, 8, 1), float64] */;
  (%257, %258)
}

def @func_10902() -> (Tensor[(7, 8, ?), bool], Tensor[(7, 8, 1), float64]) {
  %259 = @func_10377() /* ty=Tensor[(7, 8, ?), int64] */;
  %260 = @func_9156() /* ty=(Tensor[(7, 8, ?), bool], Tensor[(16, 12, 11), bool], Tensor[(11, 14, 11), float64], Tensor[(1694), float64]) */;
  %261 = %260.0;
  %262 = cast(%261, dtype="bool") /* ty=Tensor[(7, 8, ?), bool] */;
  %263 = shape_of(%259, dtype="int32") /* ty=Tensor[(3), int32] */;
  %264 = cast(%259, dtype="bool") /* ty=Tensor[(7, 8, ?), bool] */;
  %265 = dyn.reshape(%262, %263, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %266 = @func_4975() /* ty=(Tensor[(7, 8, 1), float64], Tensor[(7, 8, 1), float64]) */;
  %267 = not_equal(%264, %265) /* ty=Tensor[(7, 8, ?), bool] */;
  %268 = %266.0;
  (%267, %268)
}

def @func_9535() -> (Tensor[(7, 8, ?), int8],) {
  %269 = @func_6631() /* ty=(Tensor[(7, 8, ?), int8],) */;
  %270 = %269.0;
  (%270,)
}

def @func_8277() -> (Tensor[(616), bool], Tensor[(7, 8, ?), bool]) {
  %271 = @func_7106() /* ty=(Tensor[(15, 14, 4), float32], Tensor[(7, 8, 11), int8], Tensor[(616), float32]) */;
  %272 = %271.2;
  %273 = cast(meta[relay.Constant][14] /* ty=Tensor[(616), float32] */, dtype="bool") /* ty=Tensor[(616), bool] */;
  %274 = shape_of(%272, dtype="int32") /* ty=Tensor[(1), int32] */;
  %275 = cast(%272, dtype="bool") /* ty=Tensor[(616), bool] */;
  %276 = dyn.reshape(%273, %274, newshape=[]) /* ty=Tensor[(?), bool] */;
  %277 = equal(%275, %276) /* ty=Tensor[(616), bool] */;
  %278 = @func_5207() /* ty=Tensor[(7, 8, ?), bool] */;
  (%277, %278)
}

def @func_7812() -> (Tensor[(7, 8, 1), float64], Tensor[(7, 8, 1), float32]) {
  %279 = @func_6837() /* ty=(Tensor[(7, 8, 1), float64],) */;
  %280 = @func_5099() /* ty=(Tensor[(7, 8, 1), float32],) */;
  %281 = %279.0;
  %282 = %280.0;
  (%281, %282)
}

def @func_10329() -> (Tensor[(7, 8, 1), float32],) {
  %283 = @func_8512() /* ty=Tensor[(7, 8, 1), float32] */;
  (%283,)
}

def @func_4830() -> (Tensor[(7, 8, 1), float32], Tensor[(16, 12, 11), float32], Tensor[(44, 48), float32]) {
  %284 = @func_4126() /* ty=(Tensor[(7, 8, 1), float32],) */;
  %285 = cast(meta[relay.Constant][15] /* ty=Tensor[(44, 48), float32] */, dtype="float32") /* ty=Tensor[(44, 48), float32] */;
  %286 = cast(meta[relay.Constant][15] /* ty=Tensor[(44, 48), float32] */, dtype="float32") /* ty=Tensor[(44, 48), float32] */;
  %287 = reshape(%285, newshape=[16, 12, 11]) /* ty=Tensor[(16, 12, 11), float32] */;
  %288 = reshape(%286, newshape=[16, 12, 11]) /* ty=Tensor[(16, 12, 11), float32] */;
  %289 = @func_199(%287, %288) /* ty=(Tensor[(16, 12, 11), float32],) */;
  %290 = %284.0;
  %291 = %289.0;
  (%290, %291, meta[relay.Constant][15] /* ty=Tensor[(44, 48), float32] */)
}

def @func_10704(%var_10692: Tensor[(9, 9, 5), int32], %var_10693: Tensor[(9, 9, 5), int32], %var_10701: Tensor[(168, 4), float32]) -> (Tensor[(9, 9, 5), int32], Tensor[(7, 8, 12), bool], Tensor[(168, 4), float32]) {
  %292 = cast(%var_10693, dtype="int32") /* ty=Tensor[(9, 9, 5), int32] */;
  %293 = shape_of(%var_10692, dtype="int32") /* ty=Tensor[(3), int32] */;
  %294 = cast(%var_10692, dtype="int32") /* ty=Tensor[(9, 9, 5), int32] */;
  %295 = dyn.reshape(%292, %293, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %296 = cast(%var_10701, dtype="float32") /* ty=Tensor[(168, 4), float32] */;
  %297 = reshape(%296, newshape=[7, 8, 12]) /* ty=Tensor[(7, 8, 12), float32] */;
  %298 = bitwise_and(%294, %295) /* ty=Tensor[(9, 9, 5), int32] */;
  %299 = @func_4252(%297) /* ty=Tensor[(7, 8, 12), bool] */;
  (%298, %299, %var_10701)
}

def @func_6439(%var_6434: Tensor[(7, 8, 2), float32]) -> (Tensor[(7, 8, 2), int64],) {
  %300 = @func_5099() /* ty=(Tensor[(7, 8, 1), float32],) */;
  %301 = %300.0;
  %302 = cast(%301, dtype="int64") /* ty=Tensor[(7, 8, 1), int64] */;
  %303 = cast(%var_6434, dtype="int64") /* ty=Tensor[(7, 8, 2), int64] */;
  %304 = right_shift(%302, %303) /* ty=Tensor[(7, 8, 2), int64] */;
  (%304,)
}

def @func_4637(%var_4619: Tensor[(16, 15, 10), float64]) -> (Tensor[(16, 15, 10), float32], Tensor[(16, 12, 11), float32], Tensor[(2112), float32]) {
  %305 = cast(%var_4619, dtype="float64") /* ty=Tensor[(16, 15, 10), float64] */;
  %306 = log2(%305) /* ty=Tensor[(16, 15, 10), float64] */;
  %307 = cast(%306, dtype="float32") /* ty=Tensor[(16, 15, 10), float32] */;
  %308 = cast(meta[relay.Constant][16] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %309 = cast(meta[relay.Constant][16] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %310 = reshape(%308, newshape=[16, 12, 11]) /* ty=Tensor[(16, 12, 11), float32] */;
  %311 = reshape(%309, newshape=[16, 12, 11]) /* ty=Tensor[(16, 12, 11), float32] */;
  %312 = @func_199(%310, %311) /* ty=(Tensor[(16, 12, 11), float32],) */;
  %313 = asin(%307) /* ty=Tensor[(16, 15, 10), float32] */;
  %314 = %312.0;
  (%313, %314, meta[relay.Constant][16] /* ty=Tensor[(2112), float32] */)
}

def @func_7568(%var_7561: Tensor[(2112), float32]) -> (Tensor[(7, 8, 1), float64], Tensor[(2112), float32], Tensor[(2112), float32]) {
  %315 = @func_4975() /* ty=(Tensor[(7, 8, 1), float64], Tensor[(7, 8, 1), float64]) */;
  %316 = cast(%var_7561, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %317 = reshape(%316, newshape=[2112]) /* ty=Tensor[(2112), float32] */;
  %318 = @func_1150(%317) /* ty=(Tensor[(3, 5, 16), float64], Tensor[(3, 5, 16), float32], Tensor[(16, 12, 11), float32], Tensor[(2112), float32]) */;
  %319 = %315.0;
  %320 = %318.3;
  (%319, %320, %var_7561)
}

def @func_10809(%var_10771: Tensor[(48), uint16]) -> (Tensor[(7, 8, 1), float64], Tensor[(7, 8, ?), bool], Tensor[(48), uint16], Tensor[(16, 12, 11), bool], Tensor[(7, 8, 1), float32], Tensor[(7, 8, 1), float32], Tensor[(840), float64], Tensor[(1664), uint64]) {
  %321 = @func_10024() /* ty=(Tensor[(7, 8, 1), float64],) */;
  %322 = cast(%var_10771, dtype="uint16") /* ty=Tensor[(48), uint16] */;
  %323 = cast(%var_10771, dtype="uint16") /* ty=Tensor[(48), uint16] */;
  %324 = reshape(%322, newshape=[6, 2, 4]) /* ty=Tensor[(6, 2, 4), uint16] */;
  %325 = reshape(%323, newshape=[6, 2, 4]) /* ty=Tensor[(6, 2, 4), uint16] */;
  %326 = @func_9616(%324, %325) /* ty=(Tensor[(6, 2, 4), bool], Tensor[(6, 2, 4), float32], Tensor[(7, 8, ?), bool]) */;
  %327 = @func_9156() /* ty=(Tensor[(7, 8, ?), bool], Tensor[(16, 12, 11), bool], Tensor[(11, 14, 11), float64], Tensor[(1694), float64]) */;
  %328 = @func_5099() /* ty=(Tensor[(7, 8, 1), float32],) */;
  %329 = cast(meta[relay.Constant][17] /* ty=Tensor[(840), float64] */, dtype="float64") /* ty=Tensor[(840), float64] */;
  %330 = cast(meta[relay.Constant][18] /* ty=Tensor[(1664), uint64] */, dtype="uint64") /* ty=Tensor[(1664), uint64] */;
  %331 = %327.1;
  %332 = cast(%331, dtype="float32") /* ty=Tensor[(16, 12, 11), float32] */;
  %333 = reshape(%329, newshape=[2, 420]) /* ty=Tensor[(2, 420), float64] */;
  %334 = reshape(%330, newshape=[1664]) /* ty=Tensor[(1664), uint64] */;
  %335 = reshape(%332, newshape=[2112]) /* ty=Tensor[(2112), float32] */;
  %336 = @func_4706(%333, %334, %335) /* ty=(Tensor[(7, 8, 1), float32], Tensor[(16, 12, 11), float32], Tensor[(15, 14, 4), float64], Tensor[(2, 420), float64], Tensor[(2112), float32], Tensor[(1664), uint64], Tensor[(2112), int8]) */;
  %337 = %321.0;
  %338 = %326.2;
  %339 = %328.0;
  %340 = %336.0;
  (%337, %338, %var_10771, %331, %339, %340, meta[relay.Constant][17] /* ty=Tensor[(840), float64] */, meta[relay.Constant][18] /* ty=Tensor[(1664), uint64] */)
}

def @func_4204(%var_4189: int64, %var_4190: Tensor[(1, 15, 4), int64]) -> (Tensor[(1, 15, 4), int64], Tensor[(1, 15, 4), uint16], Tensor[(7, 8, 1), float32]) {
  %341 = cast(%var_4189, dtype="int64") /* ty=int64 */;
  %342 = cast(%var_4190, dtype="int64") /* ty=Tensor[(1, 15, 4), int64] */;
  %343 = cast(%var_4190, dtype="uint16") /* ty=Tensor[(1, 15, 4), uint16] */;
  %344 = cast(%var_4189, dtype="uint16") /* ty=uint16 */;
  %345 = @func_4183() /* ty=(Tensor[(7, 8, 1), float32],) */;
  %346 = multiply(%341, %342) /* ty=Tensor[(1, 15, 4), int64] */;
  %347 = logical_xor(%343, %344) /* ty=Tensor[(1, 15, 4), uint16] */;
  %348 = %345.0;
  (%346, %347, %348)
}

def @func_6882() -> (Tensor[(7, 8, 1), float32],) {
  %349 = @func_5099() /* ty=(Tensor[(7, 8, 1), float32],) */;
  %350 = %349.0;
  %351 = cast(%350, dtype="float32") /* ty=Tensor[(7, 8, 1), float32] */;
  %352 = log10(%351) /* ty=Tensor[(7, 8, 1), float32] */;
  %353 = cast(%352, dtype="float32") /* ty=Tensor[(7, 8, 1), float32] */;
  %354 = exp(%353) /* ty=Tensor[(7, 8, 1), float32] */;
  (%354,)
}

def @func_7614() -> Tensor[(16, 12, 11), float32] {
  %355 = @func_7036() /* ty=Tensor[(16, 12, 11), float32] */;
  %356 = cast(%355, dtype="float32") /* ty=Tensor[(16, 12, 11), float32] */;
  sigmoid(%356) /* ty=Tensor[(16, 12, 11), float32] */
}

def @func_7924(%var_7916: Tensor[(7, 8, 4), float32]) -> (Tensor[(7, 8, 4), float32],) {
  %357 = @func_4298() /* ty=Tensor[(7, 8, 1), float32] */;
  %358 = cast(%357, dtype="float32") /* ty=Tensor[(7, 8, 1), float32] */;
  %359 = cast(%var_7916, dtype="float32") /* ty=Tensor[(7, 8, 4), float32] */;
  %360 = floor_mod(%358, %359) /* ty=Tensor[(7, 8, 4), float32] */;
  (%360,)
}

def @func_7106() -> (Tensor[(15, 14, 4), float32], Tensor[(7, 8, 11), int8], Tensor[(616), float32]) {
  %361 = @func_5899() /* ty=Tensor[(15, 14, 4), float64] */;
  %362 = cast(%361, dtype="float32") /* ty=Tensor[(15, 14, 4), float32] */;
  %363 = cast(meta[relay.Constant][19] /* ty=Tensor[(616), float32] */, dtype="float32") /* ty=Tensor[(616), float32] */;
  %364 = reshape(%363, newshape=[7, 8, 11]) /* ty=Tensor[(7, 8, 11), float32] */;
  %365 = @func_5588(%364) /* ty=(Tensor[(7, 8, 1), float32], Tensor[(7, 8, 11), int8]) */;
  %366 = acos(%362) /* ty=Tensor[(15, 14, 4), float32] */;
  %367 = %365.1;
  (%366, %367, meta[relay.Constant][19] /* ty=Tensor[(616), float32] */)
}

def @func_10969(%var_10966: float64) -> (Tensor[(1, 840), float64], Tensor[(840), float64], float64) {
  %368 = @func_7383() /* ty=(Tensor[(1, 840), float64], Tensor[(7, 8, 1), float32]) */;
  %369 = cast(%var_10966, dtype="float64") /* ty=float64 */;
  %370 = reshape(%369, newshape=[]) /* ty=float64 */;
  %371 = @func_9750(%370) /* ty=(Tensor[(7, 8, 1), float32], Tensor[(7, 8, 1), float64], float64, Tensor[(1694), float64], Tensor[(15, 14, 4), float64], Tensor[(840), float64]) */;
  %372 = %368.0;
  %373 = %371.5;
  (%372, %373, %var_10966)
}

def @func_5662() -> Tensor[(7, 8, 1), float32] {
  @func_4298() /* ty=Tensor[(7, 8, 1), float32] */
}

def @func_453(%var_430: float32, %var_431: Tensor[(6, 15, 1), float32]) -> (Tensor[(6, 15, 1), float32], Tensor[(16, 12, 11), float32], Tensor[(2112), float32]) {
  %374 = cast(%var_430, dtype="float32") /* ty=float32 */;
  %375 = cast(%var_431, dtype="float32") /* ty=Tensor[(6, 15, 1), float32] */;
  %376 = cast(meta[relay.Constant][20] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %377 = cast(meta[relay.Constant][20] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %378 = reshape(%376, newshape=[16, 12, 11]) /* ty=Tensor[(16, 12, 11), float32] */;
  %379 = reshape(%377, newshape=[16, 12, 11]) /* ty=Tensor[(16, 12, 11), float32] */;
  %380 = @func_199(%378, %379) /* ty=(Tensor[(16, 12, 11), float32],) */;
  %381 = mod(%374, %375) /* ty=Tensor[(6, 15, 1), float32] */;
  %382 = %380.0;
  (%381, %382, meta[relay.Constant][20] /* ty=Tensor[(2112), float32] */)
}

def @func_199(%var_172: Tensor[(16, 12, 11), float32], %var_173: Tensor[(16, 12, 11), float32]) -> (Tensor[(16, 12, 11), float32],) {
  %383 = cast(%var_173, dtype="float32") /* ty=Tensor[(16, 12, 11), float32] */;
  %384 = shape_of(%var_172, dtype="int32") /* ty=Tensor[(3), int32] */;
  %385 = cast(%var_172, dtype="float32") /* ty=Tensor[(16, 12, 11), float32] */;
  %386 = dyn.reshape(%383, %384, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %387 = power(%385, %386) /* ty=Tensor[(16, 12, 11), float32] */;
  %388 = cast(%387, dtype="float32") /* ty=Tensor[(16, 12, 11), float32] */;
  %389 = acosh(%388) /* ty=Tensor[(16, 12, 11), float32] */;
  (%389,)
}

def @func_7150(%var_7115: Tensor[(52, 32), uint64]) -> (Tensor[(15, 14, 4), float64], Tensor[(16, 8, 13), uint64], Tensor[(52, 32), uint64], Tensor[(7, 8, 1), float32], Tensor[(16, 12, 11), float32]) {
  %390 = @func_4477() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(7, 8, 1), float32], Tensor[(15, 14, 4), float64]) */;
  %391 = cast(%var_7115, dtype="uint64") /* ty=Tensor[(52, 32), uint64] */;
  %392 = cast(%var_7115, dtype="uint64") /* ty=Tensor[(52, 32), uint64] */;
  %393 = reshape(%391, newshape=[16, 8, 13]) /* ty=Tensor[(16, 8, 13), uint64] */;
  %394 = reshape(%392, newshape=[16, 8, 13]) /* ty=Tensor[(16, 8, 13), uint64] */;
  %395 = @func_3146(%393, %394) /* ty=(Tensor[(16, 8, 13), uint64], Tensor[(3, 5, 16), float32], Tensor[(2112), float32]) */;
  %396 = @func_6882() /* ty=(Tensor[(7, 8, 1), float32],) */;
  %397 = @func_6056() /* ty=(Tensor[(16, 12, 11), float32],) */;
  %398 = %390.2;
  %399 = %395.0;
  %400 = %396.0;
  %401 = %397.0;
  (%398, %399, %var_7115, %400, %401)
}

def @func_9750(%var_9731: float64) -> (Tensor[(7, 8, 1), float32], Tensor[(7, 8, 1), float64], float64, Tensor[(1694), float64], Tensor[(15, 14, 4), float64], Tensor[(840), float64]) {
  %402 = @func_8180() /* ty=(Tensor[(7, 8, 1), float32],) */;
  %403 = cast(%var_9731, dtype="float64") /* ty=float64 */;
  %404 = cast(meta[relay.Constant][21] /* ty=Tensor[(1694), float64] */, dtype="float64") /* ty=Tensor[(1694), float64] */;
  %405 = cast(meta[relay.Constant][21] /* ty=Tensor[(1694), float64] */, dtype="float64") /* ty=Tensor[(1694), float64] */;
  %406 = reshape(%403, newshape=[]) /* ty=float64 */;
  %407 = reshape(%404, newshape=[1694]) /* ty=Tensor[(1694), float64] */;
  %408 = reshape(%405, newshape=[1694]) /* ty=Tensor[(1694), float64] */;
  %409 = @func_9453(%406, %407, %408) /* ty=(Tensor[(15, 14, 4), float64], Tensor[(11, 14, 11), float64], float64, Tensor[(2112), uint8], Tensor[(720), float32], Tensor[(16, 12, 11), float32], Tensor[(15, 14, 4), float64], Tensor[(15, 14, 4), float64], Tensor[(7, 8, 1), float32], Tensor[(1694), int32], Tensor[(7, 8, 1), float64], Tensor[(1694), float32]) */;
  %410 = cast(meta[relay.Constant][22] /* ty=Tensor[(840), float64] */, dtype="float64") /* ty=Tensor[(840), float64] */;
  %411 = reshape(%410, newshape=[15, 14, 4]) /* ty=Tensor[(15, 14, 4), float64] */;
  %412 = @func_1695(%411) /* ty=(Tensor[(15, 14, 4), float64],) */;
  %413 = %402.0;
  %414 = %409.10;
  %415 = %412.0;
  (%413, %414, %var_9731, meta[relay.Constant][21] /* ty=Tensor[(1694), float64] */, %415, meta[relay.Constant][22] /* ty=Tensor[(840), float64] */)
}

def @func_9639() -> (Tensor[(7, 8, 1), float32],) {
  %416 = @func_8782() /* ty=(Tensor[(7, 8, 1), float32],) */;
  %417 = %416.0;
  (%417,)
}

def @func_11063() -> (Tensor[(616), float32],) {
  %418 = @func_7106() /* ty=(Tensor[(15, 14, 4), float32], Tensor[(7, 8, 11), int8], Tensor[(616), float32]) */;
  %419 = %418.2;
  (%419,)
}

def @func_10681() -> (Tensor[(7, 8, 1), float32], Tensor[(2112), float64], Tensor[(2112), float32]) {
  %420 = @func_9639() /* ty=(Tensor[(7, 8, 1), float32],) */;
  %421 = cast(meta[relay.Constant][23] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %422 = reshape(%421, newshape=[2112]) /* ty=Tensor[(2112), float32] */;
  %423 = @func_6282(%422) /* ty=(Tensor[(1, 840), float64], Tensor[(132, 16), float32], Tensor[(2112), float64]) */;
  %424 = %420.0;
  %425 = %423.2;
  (%424, %425, meta[relay.Constant][23] /* ty=Tensor[(2112), float32] */)
}

def @func_6641() -> Tensor[(7, 8, ?), float32] {
  %426 = @func_5433() /* ty=(Tensor[(7, 8, ?), float32], Tensor[(1694), uint64]) */;
  %426.0
}

def @func_7291(%var_7269: Tensor[(9, 840), float64]) -> (Tensor[(16, 12, 11), float32], Tensor[(9, 840), uint16], Tensor[(15, 14, 4), float64]) {
  %427 = @func_4157() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(15, 14, 4), float64], Tensor[(1, 840), float64], Tensor[(7, 8, 1), float32]) */;
  %428 = %427.2;
  %429 = cast(%428, dtype="uint16") /* ty=Tensor[(1, 840), uint16] */;
  %430 = cast(%var_7269, dtype="uint16") /* ty=Tensor[(9, 840), uint16] */;
  %431 = cast(%428, dtype="float64") /* ty=Tensor[(1, 840), float64] */;
  %432 = reshape(%431, newshape=[15, 14, 4]) /* ty=Tensor[(15, 14, 4), float64] */;
  %433 = @func_1695(%432) /* ty=(Tensor[(15, 14, 4), float64],) */;
  %434 = @func_7036() /* ty=Tensor[(16, 12, 11), float32] */;
  %435 = minimum(%429, %430) /* ty=Tensor[(9, 840), uint16] */;
  %436 = %433.0;
  (%434, %435, %436)
}

def @func_7426() -> (Tensor[(7, 8, ?), int64],) {
  %437 = @func_4477() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(7, 8, 1), float32], Tensor[(15, 14, 4), float64]) */;
  %438 = %437.1;
  %439 = @func_6882() /* ty=(Tensor[(7, 8, 1), float32],) */;
  %440 = %439.0;
  %441 = cast(%440, dtype="int64") /* ty=Tensor[(7, 8, 1), int64] */;
  %442 = shape_of(%438, dtype="int32") /* ty=Tensor[(3), int32] */;
  %443 = cast(%438, dtype="int64") /* ty=Tensor[(7, 8, 1), int64] */;
  %444 = dyn.reshape(%441, %442, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %445 = bitwise_and(%443, %444) /* ty=Tensor[(7, 8, ?), int64] */;
  (%445,)
}

def @func_7008(%var_7005: Tensor[(840), float64]) -> (Tensor[(16, 12, 11), float32], Tensor[(840), float64], Tensor[(840), float64]) {
  %446 = @func_4830() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(16, 12, 11), float32], Tensor[(44, 48), float32]) */;
  %447 = cast(%var_7005, dtype="float64") /* ty=Tensor[(840), float64] */;
  %448 = reshape(%447, newshape=[840]) /* ty=Tensor[(840), float64] */;
  %449 = @func_6920(%448) /* ty=(Tensor[(7, 8, 1), float32], Tensor[(7, 8, ?), float64], Tensor[(12, 2, 5), uint32], Tensor[(120), uint32], Tensor[(16, 12, 11), float32], Tensor[(132, 16), float64], Tensor[(7, 8, 1), float32], Tensor[(840), float64]) */;
  %450 = %446.1;
  %451 = %449.7;
  (%450, %451, %var_7005)
}

def @func_8512() -> Tensor[(7, 8, 1), float32] {
  %452 = @func_7988() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(1, 840), float64], Tensor[(2112, 1), float32]) */;
  %452.0
}

def @func_7793(%var_7752: Tensor[(2112), float32]) -> (Tensor[(7, 8, 1), float32], Tensor[(1, 840), float64], Tensor[(7, 8, 2112), float32]) {
  %453 = @func_4183() /* ty=(Tensor[(7, 8, 1), float32],) */;
  %454 = cast(%var_7752, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %455 = reshape(%454, newshape=[2112]) /* ty=Tensor[(2112), float32] */;
  %456 = @func_6282(%455) /* ty=(Tensor[(1, 840), float64], Tensor[(132, 16), float32], Tensor[(2112), float64]) */;
  %457 = @func_5542() /* ty=Tensor[(7, 8, 1), float32] */;
  %458 = cast(%var_7752, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %459 = cast(%457, dtype="float32") /* ty=Tensor[(7, 8, 1), float32] */;
  %460 = %453.0;
  %461 = %456.0;
  %462 = minimum(%458, %459) /* ty=Tensor[(7, 8, 2112), float32] */;
  (%460, %461, %462)
}

def @func_8361() -> Tensor[(7, 8, ?), bool] {
  %463 = @func_6010() /* ty=(Tensor[(7, 8, ?), bool], Tensor[(7, 8, 1), float32]) */;
  %463.0
}

def @func_5341(%var_5330: Tensor[(1694), float64]) -> (Tensor[(7, 8, 1), float32], Tensor[(11, 14, 11), float64], float64, Tensor[(1694), float64]) {
  %464 = @func_4750() /* ty=(Tensor[(7, 8, 1), float32],) */;
  %465 = cast(-6.48126f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %466 = cast(%var_5330, dtype="float64") /* ty=Tensor[(1694), float64] */;
  %467 = reshape(%465, newshape=[]) /* ty=float64 */;
  %468 = reshape(%466, newshape=[11, 14, 11]) /* ty=Tensor[(11, 14, 11), float64] */;
  %469 = %464.0;
  %470 = @func_5039(%467, %468) /* ty=Tensor[(11, 14, 11), float64] */;
  (%469, %470, -6.48126f64 /* ty=float64 */, %var_5330)
}

def @func_1150(%var_1144: Tensor[(2112), float32]) -> (Tensor[(3, 5, 16), float64], Tensor[(3, 5, 16), float32], Tensor[(16, 12, 11), float32], Tensor[(2112), float32]) {
  %471 = cast(meta[relay.Constant][24] /* ty=Tensor[(3, 5, 16), float64] */, dtype="float64") /* ty=Tensor[(3, 5, 16), float64] */;
  %472 = cast(meta[relay.Constant][24] /* ty=Tensor[(3, 5, 16), float64] */, dtype="float32") /* ty=Tensor[(3, 5, 16), float32] */;
  %473 = cast(%var_1144, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %474 = cast(%var_1144, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %475 = reshape(%473, newshape=[16, 12, 11]) /* ty=Tensor[(16, 12, 11), float32] */;
  %476 = reshape(%474, newshape=[16, 12, 11]) /* ty=Tensor[(16, 12, 11), float32] */;
  %477 = @func_199(%475, %476) /* ty=(Tensor[(16, 12, 11), float32],) */;
  %478 = sinh(%471) /* ty=Tensor[(3, 5, 16), float64] */;
  %479 = acos(%472) /* ty=Tensor[(3, 5, 16), float32] */;
  %480 = %477.0;
  (%478, %479, %480, %var_1144)
}

def @func_4444(%var_4436: Tensor[(11, 11, 6), float32]) -> (Tensor[(11, 11, 6), float32],) {
  %481 = cast(%var_4436, dtype="float32") /* ty=Tensor[(11, 11, 6), float32] */;
  %482 = log(%481) /* ty=Tensor[(11, 11, 6), float32] */;
  (%482,)
}

def @main() -> (Tensor[(7, 8, ?), int64], Tensor[(840), float64], Tensor[(7, 8, ?), uint16], Tensor[(7, 8, ?), int8]) {
  %483 = @func_7426() /* ty=(Tensor[(7, 8, ?), int64],) */;
  %484 = @func_7812() /* ty=(Tensor[(7, 8, 1), float64], Tensor[(7, 8, 1), float32]) */;
  %485 = %484.1;
  %486 = cast(meta[relay.Constant][25] /* ty=Tensor[(840), float64] */, dtype="float64") /* ty=Tensor[(840), float64] */;
  %487 = %483.0;
  %488 = cast(%487, dtype="float32") /* ty=Tensor[(7, 8, ?), float32] */;
  %489 = reshape(%486, newshape=[840]) /* ty=Tensor[(840), float64] */;
  %490 = reshape(%488, newshape=[7, 8, 1]) /* ty=Tensor[(7, 8, 1), float32] */;
  %491 = @func_5792(%489, %490) /* ty=(Tensor[(15, 14, 4), float64], Tensor[(840), float64], Tensor[(7, 8, ?), float64]) */;
  %492 = %491.2;
  %493 = cast(%492, dtype="int8") /* ty=Tensor[(7, 8, ?), int8] */;
  %494 = shape_of(%485, dtype="int32") /* ty=Tensor[(3), int32] */;
  %495 = cast(%485, dtype="int8") /* ty=Tensor[(7, 8, 1), int8] */;
  %496 = dyn.reshape(%493, %494, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %497 = @func_7723() /* ty=Tensor[(7, 8, ?), uint16] */;
  %498 = right_shift(%495, %496) /* ty=Tensor[(7, 8, ?), int8] */;
  (%487, meta[relay.Constant][25] /* ty=Tensor[(840), float64] */, %497, %498)
}

def @func_9029(%var_9019: Tensor[(264, 8), float32]) -> (Tensor[(7, 8, 1), float32], Tensor[(2112), float32], Tensor[(264, 8), float32]) {
  %499 = @func_8921() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(7, 8, 1), float32]) */;
  %500 = cast(%var_9019, dtype="float32") /* ty=Tensor[(264, 8), float32] */;
  %501 = reshape(%500, newshape=[2112]) /* ty=Tensor[(2112), float32] */;
  %502 = @func_1150(%501) /* ty=(Tensor[(3, 5, 16), float64], Tensor[(3, 5, 16), float32], Tensor[(16, 12, 11), float32], Tensor[(2112), float32]) */;
  %503 = %499.1;
  %504 = %502.3;
  (%503, %504, %var_9019)
}

def @func_9327() -> (Tensor[(7, 8, 1), float32], Tensor[(7, 8, 3), float64], Tensor[(7, 8, 3), float32]) {
  %505 = @func_7383() /* ty=(Tensor[(1, 840), float64], Tensor[(7, 8, 1), float32]) */;
  %506 = @func_6641() /* ty=Tensor[(7, 8, ?), float32] */;
  %507 = cast(%506, dtype="float64") /* ty=Tensor[(7, 8, ?), float64] */;
  %508 = cast(meta[relay.Constant][26] /* ty=Tensor[(7, 8, 3), float32] */, dtype="float64") /* ty=Tensor[(7, 8, 3), float64] */;
  %509 = cast(meta[relay.Constant][26] /* ty=Tensor[(7, 8, 3), float32] */, dtype="float32") /* ty=Tensor[(7, 8, 3), float32] */;
  %510 = %505.1;
  %511 = floor_divide(%507, %508) /* ty=Tensor[(7, 8, 3), float64] */;
  %512 = sinh(%509) /* ty=Tensor[(7, 8, 3), float32] */;
  (%510, %511, %512)
}

def @func_7988() -> (Tensor[(7, 8, 1), float32], Tensor[(1, 840), float64], Tensor[(2112, 1), float32]) {
  %513 = @func_7548() /* ty=(Tensor[(7, 8, 1), float32],) */;
  %514 = cast(meta[relay.Constant][27] /* ty=Tensor[(2112, 1), float32] */, dtype="float32") /* ty=Tensor[(2112, 1), float32] */;
  %515 = reshape(%514, newshape=[2112]) /* ty=Tensor[(2112), float32] */;
  %516 = @func_7793(%515) /* ty=(Tensor[(7, 8, 1), float32], Tensor[(1, 840), float64], Tensor[(7, 8, 2112), float32]) */;
  %517 = %513.0;
  %518 = %516.1;
  (%517, %518, meta[relay.Constant][27] /* ty=Tensor[(2112, 1), float32] */)
}

def @func_7245(%var_7238: Tensor[(8, 16, 1), int32], %var_7239: Tensor[(8, 16, 15), int32]) -> Tensor[(8, 16, 15), int32] {
  %519 = cast(%var_7238, dtype="int32") /* ty=Tensor[(8, 16, 1), int32] */;
  %520 = cast(%var_7239, dtype="int32") /* ty=Tensor[(8, 16, 15), int32] */;
  left_shift(%519, %520) /* ty=Tensor[(8, 16, 15), int32] */
}

def @func_7223() -> (Tensor[(7, 8, ?), bool], Tensor[(7, 8, 1), float32], Tensor[(2112), float64], Tensor[(2112), float32]) {
  %521 = @func_6010() /* ty=(Tensor[(7, 8, ?), bool], Tensor[(7, 8, 1), float32]) */;
  %522 = @func_5465() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(7, 8, 1), float32]) */;
  %523 = cast(meta[relay.Constant][28] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %524 = reshape(%523, newshape=[2112]) /* ty=Tensor[(2112), float32] */;
  %525 = @func_6282(%524) /* ty=(Tensor[(1, 840), float64], Tensor[(132, 16), float32], Tensor[(2112), float64]) */;
  %526 = %521.0;
  %527 = %522.0;
  %528 = %525.2;
  (%526, %527, %528, meta[relay.Constant][28] /* ty=Tensor[(2112), float32] */)
}

def @func_8851() -> Tensor[(1, 840), float64] {
  %529 = @func_4157() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(15, 14, 4), float64], Tensor[(1, 840), float64], Tensor[(7, 8, 1), float32]) */;
  %530 = %529.2;
  %531 = cast(%530, dtype="float64") /* ty=Tensor[(1, 840), float64] */;
  cos(%531) /* ty=Tensor[(1, 840), float64] */
}

def @func_6837() -> (Tensor[(7, 8, 1), float64],) {
  %532 = @func_4975() /* ty=(Tensor[(7, 8, 1), float64], Tensor[(7, 8, 1), float64]) */;
  %533 = %532.1;
  (%533,)
}

def @func_6484(%var_6475: Tensor[(12, 2, 5), uint32], %var_6476: Tensor[(12, 2, 5), uint32]) -> (Tensor[(12, 2, 5), uint32],) {
  %534 = cast(%var_6476, dtype="uint32") /* ty=Tensor[(12, 2, 5), uint32] */;
  %535 = shape_of(%var_6475, dtype="int32") /* ty=Tensor[(3), int32] */;
  %536 = cast(%var_6475, dtype="uint32") /* ty=Tensor[(12, 2, 5), uint32] */;
  %537 = dyn.reshape(%534, %535, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %538 = bitwise_or(%536, %537) /* ty=Tensor[(12, 2, 5), uint32] */;
  (%538,)
}

def @func_10134() -> Tensor[(7, 8, 1), float32] {
  %539 = @func_4750() /* ty=(Tensor[(7, 8, 1), float32],) */;
  %539.0
}

def @func_4325(%var_4322: Tensor[(840), float64]) -> (Tensor[(7, 8, 1), float32], Tensor[(15, 14, 4), float64], Tensor[(840), float64]) {
  %540 = cast(%var_4322, dtype="float64") /* ty=Tensor[(840), float64] */;
  %541 = reshape(%540, newshape=[15, 14, 4]) /* ty=Tensor[(15, 14, 4), float64] */;
  %542 = @func_1695(%541) /* ty=(Tensor[(15, 14, 4), float64],) */;
  %543 = @func_4298() /* ty=Tensor[(7, 8, 1), float32] */;
  %544 = %542.0;
  (%543, %544, %var_4322)
}

def @func_5899() -> Tensor[(15, 14, 4), float64] {
  %545 = @func_4428() /* ty=(Tensor[(15, 14, 4), float64],) */;
  %545.0
}

def @func_10288() -> Tensor[(7, 8, 1), float32] {
  %546 = @func_8180() /* ty=(Tensor[(7, 8, 1), float32],) */;
  %546.0
}

def @func_10207() -> (Tensor[(16, 12, 11), float32], Tensor[(7, 8, 1664), bool]) {
  %547 = cast(meta[relay.Constant][29] /* ty=Tensor[(1664), uint64] */, dtype="uint64") /* ty=Tensor[(1664), uint64] */;
  %548 = reshape(%547, newshape=[52, 32]) /* ty=Tensor[(52, 32), uint64] */;
  %549 = @func_7150(%548) /* ty=(Tensor[(15, 14, 4), float64], Tensor[(16, 8, 13), uint64], Tensor[(52, 32), uint64], Tensor[(7, 8, 1), float32], Tensor[(16, 12, 11), float32]) */;
  %550 = @func_8702() /* ty=(Tensor[(7, 8, 2), bool], Tensor[(16, 12, 11), float32], Tensor[(7, 8, 1), float32], Tensor[(616), bool]) */;
  %551 = %550.2;
  %552 = cast(%551, dtype="bool") /* ty=Tensor[(7, 8, 1), bool] */;
  %553 = cast(meta[relay.Constant][29] /* ty=Tensor[(1664), uint64] */, dtype="bool") /* ty=Tensor[(1664), bool] */;
  %554 = %549.4;
  %555 = greater_equal(%552, %553) /* ty=Tensor[(7, 8, 1664), bool] */;
  (%554, %555)
}

def @func_7080(%var_7072: Tensor[(6, 140), float64]) -> (Tensor[(7, 8, 1), float32], Tensor[(15, 14, 4), float64], Tensor[(6, 140), float64], Tensor[(7, 8, 1), float32], Tensor[(7, 3, 15), float32], Tensor[(315), float32]) {
  %556 = @func_5099() /* ty=(Tensor[(7, 8, 1), float32],) */;
  %557 = cast(%var_7072, dtype="float64") /* ty=Tensor[(6, 140), float64] */;
  %558 = reshape(%557, newshape=[15, 14, 4]) /* ty=Tensor[(15, 14, 4), float64] */;
  %559 = @func_1695(%558) /* ty=(Tensor[(15, 14, 4), float64],) */;
  %560 = cast(meta[relay.Constant][30] /* ty=Tensor[(315), float32] */, dtype="float32") /* ty=Tensor[(315), float32] */;
  %561 = reshape(%560, newshape=[7, 3, 15]) /* ty=Tensor[(7, 3, 15), float32] */;
  %562 = @func_2846(%561) /* ty=(Tensor[(7, 3, 15), float32], Tensor[(7, 3, 15), float64]) */;
  %563 = %556.0;
  %564 = %559.0;
  %565 = @func_5542() /* ty=Tensor[(7, 8, 1), float32] */;
  %566 = %562.0;
  (%563, %564, %var_7072, %565, %566, meta[relay.Constant][30] /* ty=Tensor[(315), float32] */)
}

def @func_4252(%var_4234: Tensor[(7, 8, 12), float32]) -> Tensor[(7, 8, 12), bool] {
  %567 = @func_4183() /* ty=(Tensor[(7, 8, 1), float32],) */;
  %568 = %567.0;
  %569 = cast(%568, dtype="bool") /* ty=Tensor[(7, 8, 1), bool] */;
  %570 = cast(%var_4234, dtype="bool") /* ty=Tensor[(7, 8, 12), bool] */;
  %571 = greater(%569, %570) /* ty=Tensor[(7, 8, 12), bool] */;
  %572 = cast(%var_4234, dtype="bool") /* ty=Tensor[(7, 8, 12), bool] */;
  %573 = shape_of(%571, dtype="int32") /* ty=Tensor[(3), int32] */;
  %574 = cast(%571, dtype="bool") /* ty=Tensor[(7, 8, 12), bool] */;
  %575 = dyn.reshape(%572, %573, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %576 = less_equal(%574, %575) /* ty=Tensor[(7, 8, 12), bool] */;
  %577 = cast(%576, dtype="bool") /* ty=Tensor[(7, 8, 12), bool] */;
  %578 = shape_of(%571, dtype="int32") /* ty=Tensor[(3), int32] */;
  %579 = cast(%571, dtype="bool") /* ty=Tensor[(7, 8, 12), bool] */;
  %580 = dyn.reshape(%577, %578, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%579, %580) /* ty=Tensor[(7, 8, 12), bool] */
}

def @func_2343(%var_2311: Tensor[(528, 4), float32], %var_2323: float32, %var_2324: Tensor[(90), float32]) -> (Tensor[(16, 12, 11), float32], Tensor[(528, 4), float32], Tensor[(16, 12, 11), float32], float32, Tensor[(90), float32], Tensor[(7, 8, 9), float64]) {
  %581 = cast(%var_2311, dtype="float32") /* ty=Tensor[(528, 4), float32] */;
  %582 = cast(%var_2311, dtype="float32") /* ty=Tensor[(528, 4), float32] */;
  %583 = reshape(%581, newshape=[16, 12, 11]) /* ty=Tensor[(16, 12, 11), float32] */;
  %584 = reshape(%582, newshape=[16, 12, 11]) /* ty=Tensor[(16, 12, 11), float32] */;
  %585 = @func_199(%583, %584) /* ty=(Tensor[(16, 12, 11), float32],) */;
  %586 = cast(%var_2323, dtype="float32") /* ty=float32 */;
  %587 = cast(%var_2324, dtype="float32") /* ty=Tensor[(90), float32] */;
  %588 = reshape(%586, newshape=[]) /* ty=float32 */;
  %589 = reshape(%587, newshape=[6, 15, 1]) /* ty=Tensor[(6, 15, 1), float32] */;
  %590 = @func_453(%588, %589) /* ty=(Tensor[(6, 15, 1), float32], Tensor[(16, 12, 11), float32], Tensor[(2112), float32]) */;
  %591 = cast(meta[relay.Constant][31] /* ty=Tensor[(7, 8, 9), float64] */, dtype="float64") /* ty=Tensor[(7, 8, 9), float64] */;
  %592 = exp(%591) /* ty=Tensor[(7, 8, 9), float64] */;
  %593 = cast(%592, dtype="float64") /* ty=Tensor[(7, 8, 9), float64] */;
  %594 = %585.0;
  %595 = %590.1;
  %596 = sinh(%593) /* ty=Tensor[(7, 8, 9), float64] */;
  (%594, %var_2311, %595, %var_2323, %var_2324, %596)
}

def @func_9188() -> (Tensor[(7, 8, ?), uint16],) {
  %597 = @func_7723() /* ty=Tensor[(7, 8, ?), uint16] */;
  (%597,)
}

def @func_10024() -> (Tensor[(7, 8, 1), float64],) {
  %598 = @func_8759() /* ty=(Tensor[(7, 8, 1), float64],) */;
  %599 = %598.0;
  (%599,)
}

def @func_7036() -> Tensor[(16, 12, 11), float32] {
  %600 = @func_6056() /* ty=(Tensor[(16, 12, 11), float32],) */;
  %600.0
}

def @func_4898(%var_4877: Tensor[(720, 1), float32]) -> (Tensor[(7, 8, 1), float32], Tensor[(2112), uint8], Tensor[(720, 1), float32], Tensor[(13, 3, 12), uint16], uint16, Tensor[(468), uint16]) {
  %601 = @func_4126() /* ty=(Tensor[(7, 8, 1), float32],) */;
  %602 = cast(%var_4877, dtype="float32") /* ty=Tensor[(720, 1), float32] */;
  %603 = reshape(%602, newshape=[10, 9, 8]) /* ty=Tensor[(10, 9, 8), float32] */;
  %604 = @func_727(%603) /* ty=(Tensor[(5, 16, 10), int16], Tensor[(10, 9, 8), float32], Tensor[(2112), uint8], Tensor[(2112), float32], Tensor[(2112), bool]) */;
  %605 = cast(meta[relay.Constant][32] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %606 = cast(meta[relay.Constant][33] /* ty=Tensor[(468), uint16] */, dtype="uint16") /* ty=Tensor[(468), uint16] */;
  %607 = reshape(%605, newshape=[]) /* ty=uint16 */;
  %608 = reshape(%606, newshape=[13, 3, 12]) /* ty=Tensor[(13, 3, 12), uint16] */;
  %609 = %601.0;
  %610 = %604.2;
  %611 = @func_2740(%607, %608) /* ty=Tensor[(13, 3, 12), uint16] */;
  (%609, %610, %var_4877, %611, meta[relay.Constant][32] /* ty=uint16 */, meta[relay.Constant][33] /* ty=Tensor[(468), uint16] */)
}

def @func_4157() -> (Tensor[(7, 8, 1), float32], Tensor[(15, 14, 4), float64], Tensor[(1, 840), float64], Tensor[(7, 8, 1), float32]) {
  %612 = @func_4126() /* ty=(Tensor[(7, 8, 1), float32],) */;
  %613 = cast(meta[relay.Constant][34] /* ty=Tensor[(1, 840), float64] */, dtype="float64") /* ty=Tensor[(1, 840), float64] */;
  %614 = reshape(%613, newshape=[15, 14, 4]) /* ty=Tensor[(15, 14, 4), float64] */;
  %615 = @func_1695(%614) /* ty=(Tensor[(15, 14, 4), float64],) */;
  %616 = @func_4126() /* ty=(Tensor[(7, 8, 1), float32],) */;
  %617 = %612.0;
  %618 = %615.0;
  %619 = %616.0;
  (%617, %618, meta[relay.Constant][34] /* ty=Tensor[(1, 840), float64] */, %619)
}

def @func_5588(%var_5580: Tensor[(7, 8, 11), float32]) -> (Tensor[(7, 8, 1), float32], Tensor[(7, 8, 11), int8]) {
  %620 = @func_4126() /* ty=(Tensor[(7, 8, 1), float32],) */;
  %621 = %620.0;
  %622 = cast(%621, dtype="float32") /* ty=Tensor[(7, 8, 1), float32] */;
  %623 = cast(%621, dtype="int8") /* ty=Tensor[(7, 8, 1), int8] */;
  %624 = cast(%var_5580, dtype="int8") /* ty=Tensor[(7, 8, 11), int8] */;
  %625 = sqrt(%622) /* ty=Tensor[(7, 8, 1), float32] */;
  %626 = left_shift(%623, %624) /* ty=Tensor[(7, 8, 11), int8] */;
  (%625, %626)
}

def @func_4428() -> (Tensor[(15, 14, 4), float64],) {
  %627 = @func_4157() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(15, 14, 4), float64], Tensor[(1, 840), float64], Tensor[(7, 8, 1), float32]) */;
  %628 = %627.1;
  (%628,)
}

def @func_727(%var_626: Tensor[(10, 9, 8), float32]) -> (Tensor[(5, 16, 10), int16], Tensor[(10, 9, 8), float32], Tensor[(2112), uint8], Tensor[(2112), float32], Tensor[(2112), bool]) {
  %629 = cast(meta[relay.Constant][35] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %630 = reshape(%629, newshape=[2112]) /* ty=Tensor[(2112), float32] */;
  %631 = @func_409(%630) /* ty=(Tensor[(5, 16, 10), int16], Tensor[(16, 12, 11), float32], Tensor[(2112), float32]) */;
  %632 = cast(%var_626, dtype="float32") /* ty=Tensor[(10, 9, 8), float32] */;
  %633 = sqrt(%632) /* ty=Tensor[(10, 9, 8), float32] */;
  %634 = cast(%633, dtype="float32") /* ty=Tensor[(10, 9, 8), float32] */;
  %635 = cast(meta[relay.Constant][35] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %636 = reshape(%635, newshape=[2112]) /* ty=Tensor[(2112), float32] */;
  %637 = @func_409(%636) /* ty=(Tensor[(5, 16, 10), int16], Tensor[(16, 12, 11), float32], Tensor[(2112), float32]) */;
  %638 = %637.1;
  %639 = cast(%638, dtype="bool") /* ty=Tensor[(16, 12, 11), bool] */;
  %640 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(2112), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %641 = cast(meta[relay.Constant][35] /* ty=Tensor[(2112), float32] */, dtype="bool") /* ty=Tensor[(2112), bool] */;
  %642 = dyn.reshape(%639, %640, newshape=[]) /* ty=Tensor[(?), bool] */;
  %643 = not_equal(%641, %642) /* ty=Tensor[(2112), bool] */;
  %644 = cast(%643, dtype="uint8") /* ty=Tensor[(2112), uint8] */;
  %645 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(2112), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %646 = cast(meta[relay.Constant][35] /* ty=Tensor[(2112), float32] */, dtype="uint8") /* ty=Tensor[(2112), uint8] */;
  %647 = dyn.reshape(%644, %645, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %648 = cast(%643, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %649 = reshape(%648, newshape=[2112]) /* ty=Tensor[(2112), float32] */;
  %650 = @func_409(%649) /* ty=(Tensor[(5, 16, 10), int16], Tensor[(16, 12, 11), float32], Tensor[(2112), float32]) */;
  %651 = cast(%638, dtype="float32") /* ty=Tensor[(16, 12, 11), float32] */;
  %652 = cast(meta[relay.Constant][35] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %653 = reshape(%651, newshape=[16, 12, 11]) /* ty=Tensor[(16, 12, 11), float32] */;
  %654 = reshape(%652, newshape=[16, 12, 11]) /* ty=Tensor[(16, 12, 11), float32] */;
  %655 = @func_199(%653, %654) /* ty=(Tensor[(16, 12, 11), float32],) */;
  %656 = %655.0;
  %657 = cast(%656, dtype="bool") /* ty=Tensor[(16, 12, 11), bool] */;
  %658 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(2112), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %659 = cast(meta[relay.Constant][35] /* ty=Tensor[(2112), float32] */, dtype="bool") /* ty=Tensor[(2112), bool] */;
  %660 = dyn.reshape(%657, %658, newshape=[]) /* ty=Tensor[(?), bool] */;
  %661 = %631.0;
  %662 = cosh(%634) /* ty=Tensor[(10, 9, 8), float32] */;
  %663 = left_shift(%646, %647) /* ty=Tensor[(2112), uint8] */;
  %664 = %650.2;
  %665 = logical_and(%659, %660) /* ty=Tensor[(2112), bool] */;
  (%661, %662, %663, %664, %665)
}

def @func_2740(%var_2719: uint16, %var_2720: Tensor[(13, 3, 12), uint16]) -> Tensor[(13, 3, 12), uint16] {
  %666 = cast(%var_2719, dtype="uint16") /* ty=uint16 */;
  %667 = cast(%var_2720, dtype="uint16") /* ty=Tensor[(13, 3, 12), uint16] */;
  right_shift(%666, %667) /* ty=Tensor[(13, 3, 12), uint16] */
}

def @func_9890() -> (Tensor[(7, 8, 1), float64], Tensor[(15, 14, 4), float64], Tensor[(7, 8, ?), float64], Tensor[(2112), float32], Tensor[(2112), float32], Tensor[(7, 8, 1), float32]) {
  %668 = @func_7812() /* ty=(Tensor[(7, 8, 1), float64], Tensor[(7, 8, 1), float32]) */;
  %669 = cast(meta[relay.Constant][36] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %670 = reshape(%669, newshape=[132, 16]) /* ty=Tensor[(132, 16), float32] */;
  %671 = @func_6135(%670) /* ty=(Tensor[(7, 8, ?), float64], Tensor[(5, 16, 10), int16], Tensor[(132, 16), float32]) */;
  %672 = cast(meta[relay.Constant][36] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %673 = reshape(%672, newshape=[2112]) /* ty=Tensor[(2112), float32] */;
  %674 = @func_7568(%673) /* ty=(Tensor[(7, 8, 1), float64], Tensor[(2112), float32], Tensor[(2112), float32]) */;
  %675 = %668.0;
  %676 = @func_9192() /* ty=Tensor[(15, 14, 4), float64] */;
  %677 = %671.0;
  %678 = %674.2;
  %679 = @func_5542() /* ty=Tensor[(7, 8, 1), float32] */;
  (%675, %676, %677, meta[relay.Constant][36] /* ty=Tensor[(2112), float32] */, %678, %679)
}

def @func_9812() -> (Tensor[(15, 14, 4), float32], Tensor[(7, 8, 1), float32], Tensor[(616), float32]) {
  %680 = @func_7106() /* ty=(Tensor[(15, 14, 4), float32], Tensor[(7, 8, 11), int8], Tensor[(616), float32]) */;
  %681 = @func_5465() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(7, 8, 1), float32]) */;
  %682 = @func_7106() /* ty=(Tensor[(15, 14, 4), float32], Tensor[(7, 8, 11), int8], Tensor[(616), float32]) */;
  %683 = %680.0;
  %684 = %681.0;
  %685 = %682.2;
  (%683, %684, %685)
}

def @func_9156() -> (Tensor[(7, 8, ?), bool], Tensor[(16, 12, 11), bool], Tensor[(11, 14, 11), float64], Tensor[(1694), float64]) {
  %686 = @func_6010() /* ty=(Tensor[(7, 8, ?), bool], Tensor[(7, 8, 1), float32]) */;
  %687 = @func_7614() /* ty=Tensor[(16, 12, 11), float32] */;
  %688 = %686.0;
  %689 = cast(%688, dtype="float32") /* ty=Tensor[(7, 8, ?), float32] */;
  %690 = reshape(%689, newshape=[7, 8, 1]) /* ty=Tensor[(7, 8, 1), float32] */;
  %691 = @func_5876(%690) /* ty=(Tensor[(7, 8, ?), bool], Tensor[(7, 8, 1), float32], int64, Tensor[(60), int64]) */;
  %692 = %691.2;
  %693 = cast(%687, dtype="bool") /* ty=Tensor[(16, 12, 11), bool] */;
  %694 = cast(%692, dtype="bool") /* ty=bool */;
  %695 = cast(meta[relay.Constant][37] /* ty=Tensor[(1694), float64] */, dtype="float64") /* ty=Tensor[(1694), float64] */;
  %696 = reshape(%695, newshape=[1694]) /* ty=Tensor[(1694), float64] */;
  %697 = @func_5341(%696) /* ty=(Tensor[(7, 8, 1), float32], Tensor[(11, 14, 11), float64], float64, Tensor[(1694), float64]) */;
  %698 = greater_equal(%693, %694) /* ty=Tensor[(16, 12, 11), bool] */;
  %699 = %697.1;
  (%688, %698, %699, meta[relay.Constant][37] /* ty=Tensor[(1694), float64] */)
}

def @func_5727(%var_5714: uint16, %var_5715: Tensor[(14, 1, 10), uint16], %var_5725: Tensor[(2, 832), uint64]) -> (Tensor[(14, 1, 10), uint16], Tensor[(2112), float32], Tensor[(2, 832), uint64]) {
  %700 = cast(%var_5714, dtype="uint16") /* ty=uint16 */;
  %701 = cast(%var_5715, dtype="uint16") /* ty=Tensor[(14, 1, 10), uint16] */;
  %702 = cast(%var_5725, dtype="uint64") /* ty=Tensor[(2, 832), uint64] */;
  %703 = cast(%var_5725, dtype="uint64") /* ty=Tensor[(2, 832), uint64] */;
  %704 = reshape(%702, newshape=[16, 8, 13]) /* ty=Tensor[(16, 8, 13), uint64] */;
  %705 = reshape(%703, newshape=[16, 8, 13]) /* ty=Tensor[(16, 8, 13), uint64] */;
  %706 = @func_3146(%704, %705) /* ty=(Tensor[(16, 8, 13), uint64], Tensor[(3, 5, 16), float32], Tensor[(2112), float32]) */;
  %707 = logical_xor(%700, %701) /* ty=Tensor[(14, 1, 10), uint16] */;
  %708 = %706.2;
  (%707, %708, %var_5725)
}

def @func_9453(%var_9380: float64, %var_9381: Tensor[(1694), float64], %var_9428: Tensor[(1694), float64]) -> (Tensor[(15, 14, 4), float64], Tensor[(11, 14, 11), float64], float64, Tensor[(2112), uint8], Tensor[(720), float32], Tensor[(16, 12, 11), float32], Tensor[(15, 14, 4), float64], Tensor[(15, 14, 4), float64], Tensor[(7, 8, 1), float32], Tensor[(1694), int32], Tensor[(7, 8, 1), float64], Tensor[(1694), float32]) {
  %709 = @func_4428() /* ty=(Tensor[(15, 14, 4), float64],) */;
  %710 = cast(%var_9380, dtype="float64") /* ty=float64 */;
  %711 = cast(%var_9381, dtype="float64") /* ty=Tensor[(1694), float64] */;
  %712 = reshape(%710, newshape=[]) /* ty=float64 */;
  %713 = reshape(%711, newshape=[11, 14, 11]) /* ty=Tensor[(11, 14, 11), float64] */;
  %714 = cast(meta[relay.Constant][38] /* ty=Tensor[(720), float32] */, dtype="float32") /* ty=Tensor[(720), float32] */;
  %715 = reshape(%714, newshape=[10, 9, 8]) /* ty=Tensor[(10, 9, 8), float32] */;
  %716 = @func_727(%715) /* ty=(Tensor[(5, 16, 10), int16], Tensor[(10, 9, 8), float32], Tensor[(2112), uint8], Tensor[(2112), float32], Tensor[(2112), bool]) */;
  %717 = @func_6056() /* ty=(Tensor[(16, 12, 11), float32],) */;
  %718 = @func_7235() /* ty=(Tensor[(15, 14, 4), float64],) */;
  %719 = @func_8921() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(7, 8, 1), float32]) */;
  %720 = cast(%var_9381, dtype="float32") /* ty=Tensor[(1694), float32] */;
  %721 = rsqrt(%720) /* ty=Tensor[(1694), float32] */;
  %722 = cast(%721, dtype="float64") /* ty=Tensor[(1694), float64] */;
  %723 = exp(%722) /* ty=Tensor[(1694), float64] */;
  %724 = cast(%var_9428, dtype="bool") /* ty=Tensor[(1694), bool] */;
  %725 = shape_of(%723, dtype="int32") /* ty=Tensor[(1), int32] */;
  %726 = cast(%723, dtype="bool") /* ty=Tensor[(1694), bool] */;
  %727 = dyn.reshape(%724, %725, newshape=[]) /* ty=Tensor[(?), bool] */;
  %728 = not_equal(%726, %727) /* ty=Tensor[(1694), bool] */;
  %729 = cast(%721, dtype="float32") /* ty=Tensor[(1694), float32] */;
  %730 = log2(%729) /* ty=Tensor[(1694), float32] */;
  %731 = cast(%730, dtype="int32") /* ty=Tensor[(1694), int32] */;
  %732 = shape_of(%728, dtype="int32") /* ty=Tensor[(1), int32] */;
  %733 = cast(%728, dtype="int32") /* ty=Tensor[(1694), int32] */;
  %734 = dyn.reshape(%731, %732, newshape=[]) /* ty=Tensor[(?), int32] */;
  %735 = @func_4975() /* ty=(Tensor[(7, 8, 1), float64], Tensor[(7, 8, 1), float64]) */;
  %736 = cast(%728, dtype="float32") /* ty=Tensor[(1694), float32] */;
  %737 = shape_of(%721, dtype="int32") /* ty=Tensor[(1), int32] */;
  %738 = cast(%721, dtype="float32") /* ty=Tensor[(1694), float32] */;
  %739 = dyn.reshape(%736, %737, newshape=[]) /* ty=Tensor[(?), float32] */;
  %740 = %709.0;
  %741 = @func_5039(%712, %713) /* ty=Tensor[(11, 14, 11), float64] */;
  %742 = %716.2;
  %743 = %717.0;
  %744 = @func_8448() /* ty=Tensor[(15, 14, 4), float64] */;
  %745 = %718.0;
  %746 = %719.0;
  %747 = bitwise_xor(%733, %734) /* ty=Tensor[(1694), int32] */;
  %748 = %735.0;
  %749 = subtract(%738, %739) /* ty=Tensor[(1694), float32] */;
  (%740, %741, %var_9380, %742, meta[relay.Constant][38] /* ty=Tensor[(720), float32] */, %743, %744, %745, %746, %747, %748, %749)
}

def @func_7639() -> (Tensor[(7, 8, 1), float32],) {
  %750 = @func_5465() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(7, 8, 1), float32]) */;
  %751 = %750.1;
  (%751,)
}

def @func_8921() -> (Tensor[(7, 8, 1), float32], Tensor[(7, 8, 1), float32]) {
  %752 = @func_4477() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(7, 8, 1), float32], Tensor[(15, 14, 4), float64]) */;
  %753 = @func_8782() /* ty=(Tensor[(7, 8, 1), float32],) */;
  %754 = %752.0;
  %755 = %753.0;
  (%754, %755)
}

def @func_6010() -> (Tensor[(7, 8, ?), bool], Tensor[(7, 8, 1), float32]) {
  %756 = @func_4183() /* ty=(Tensor[(7, 8, 1), float32],) */;
  %757 = @func_5207() /* ty=Tensor[(7, 8, ?), bool] */;
  %758 = %756.0;
  (%757, %758)
}

def @func_6495() -> Tensor[(7, 8, 1), float32] {
  @func_4298() /* ty=Tensor[(7, 8, 1), float32] */
}

def @func_10377() -> Tensor[(7, 8, ?), int64] {
  %759 = @func_7426() /* ty=(Tensor[(7, 8, ?), int64],) */;
  %759.0
}

def @func_5275(%var_5238: float32, %var_5239: Tensor[(90), float32], %var_5259: Tensor[(168, 4), float32]) -> (Tensor[(7, 8, 1), float32], Tensor[(90), float32], float32, Tensor[(90), float32], Tensor[(7, 8, 12), bool], Tensor[(168, 4), float32], Tensor[(7, 8, 1), float32], Tensor[(7, 8, 1), float32], Tensor[(132, 16), float32]) {
  %760 = @func_4750() /* ty=(Tensor[(7, 8, 1), float32],) */;
  %761 = cast(meta[relay.Constant][39] /* ty=Tensor[(132, 16), float32] */, dtype="float32") /* ty=Tensor[(132, 16), float32] */;
  %762 = cast(%var_5238, dtype="float32") /* ty=float32 */;
  %763 = cast(%var_5239, dtype="float32") /* ty=Tensor[(90), float32] */;
  %764 = reshape(%761, newshape=[528, 4]) /* ty=Tensor[(528, 4), float32] */;
  %765 = reshape(%762, newshape=[]) /* ty=float32 */;
  %766 = reshape(%763, newshape=[90]) /* ty=Tensor[(90), float32] */;
  %767 = @func_2343(%764, %765, %766) /* ty=(Tensor[(16, 12, 11), float32], Tensor[(528, 4), float32], Tensor[(16, 12, 11), float32], float32, Tensor[(90), float32], Tensor[(7, 8, 9), float64]) */;
  %768 = cast(%var_5259, dtype="float32") /* ty=Tensor[(168, 4), float32] */;
  %769 = reshape(%768, newshape=[7, 8, 12]) /* ty=Tensor[(7, 8, 12), float32] */;
  %770 = @func_4830() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(16, 12, 11), float32], Tensor[(44, 48), float32]) */;
  %771 = @func_4830() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(16, 12, 11), float32], Tensor[(44, 48), float32]) */;
  %772 = cast(meta[relay.Constant][39] /* ty=Tensor[(132, 16), float32] */, dtype="float32") /* ty=Tensor[(132, 16), float32] */;
  %773 = %760.0;
  %774 = %767.4;
  %775 = @func_4252(%769) /* ty=Tensor[(7, 8, 12), bool] */;
  %776 = %770.0;
  %777 = %771.0;
  %778 = asin(%772) /* ty=Tensor[(132, 16), float32] */;
  (%773, %774, %var_5238, %var_5239, %775, %var_5259, %776, %777, %778)
}

def @func_4183() -> (Tensor[(7, 8, 1), float32],) {
  %779 = @func_4157() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(15, 14, 4), float64], Tensor[(1, 840), float64], Tensor[(7, 8, 1), float32]) */;
  %780 = %779.3;
  (%780,)
}

def @func_5876(%var_5853: Tensor[(7, 8, 1), float32]) -> (Tensor[(7, 8, ?), bool], Tensor[(7, 8, 1), float32], int64, Tensor[(60), int64]) {
  %781 = @func_5542() /* ty=Tensor[(7, 8, 1), float32] */;
  %782 = cast(%var_5853, dtype="bool") /* ty=Tensor[(7, 8, 1), bool] */;
  %783 = shape_of(%781, dtype="int32") /* ty=Tensor[(3), int32] */;
  %784 = cast(%781, dtype="bool") /* ty=Tensor[(7, 8, 1), bool] */;
  %785 = dyn.reshape(%782, %783, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %786 = cast(10 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %787 = cast(meta[relay.Constant][40] /* ty=Tensor[(60), int64] */, dtype="int64") /* ty=Tensor[(60), int64] */;
  %788 = reshape(%786, newshape=[]) /* ty=int64 */;
  %789 = reshape(%787, newshape=[1, 15, 4]) /* ty=Tensor[(1, 15, 4), int64] */;
  %790 = @func_4204(%788, %789) /* ty=(Tensor[(1, 15, 4), int64], Tensor[(1, 15, 4), uint16], Tensor[(7, 8, 1), float32]) */;
  %791 = logical_or(%784, %785) /* ty=Tensor[(7, 8, ?), bool] */;
  %792 = %790.2;
  (%791, %792, 10 /* ty=int64 */, meta[relay.Constant][40] /* ty=Tensor[(60), int64] */)
}

def @func_4298() -> Tensor[(7, 8, 1), float32] {
  %793 = @func_4126() /* ty=(Tensor[(7, 8, 1), float32],) */;
  %793.0
}

def @func_7962() -> (Tensor[(5, 16, 10), int16],) {
  %794 = @func_6734() /* ty=(Tensor[(16, 12, 11), float32], Tensor[(5, 16, 10), int16], Tensor[(7, 8, 1), float32], Tensor[(720), float32], Tensor[(15, 14, 4), float64]) */;
  %795 = %794.1;
  (%795,)
}

def @func_10246() -> (Tensor[(7, 8, ?), int8], Tensor[(7, 8, 11), int8], Tensor[(616), float32]) {
  %796 = @func_9535() /* ty=(Tensor[(7, 8, ?), int8],) */;
  %797 = cast(meta[relay.Constant][41] /* ty=Tensor[(616), float32] */, dtype="float32") /* ty=Tensor[(616), float32] */;
  %798 = reshape(%797, newshape=[7, 8, 11]) /* ty=Tensor[(7, 8, 11), float32] */;
  %799 = @func_5588(%798) /* ty=(Tensor[(7, 8, 1), float32], Tensor[(7, 8, 11), int8]) */;
  %800 = %796.0;
  %801 = %799.1;
  (%800, %801, meta[relay.Constant][41] /* ty=Tensor[(616), float32] */)
}

def @func_4582(%var_4558: Tensor[(2, 336), float32]) -> (Tensor[(15, 14, 4), uint32], Tensor[(15, 14, 4), float64], Tensor[(7, 8, 12), bool], Tensor[(2, 336), float32], Tensor[(7, 8, 1), float32]) {
  %802 = @func_4157() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(15, 14, 4), float64], Tensor[(1, 840), float64], Tensor[(7, 8, 1), float32]) */;
  %803 = %802.1;
  %804 = cast(meta[relay.Constant][42] /* ty=Tensor[(15, 14, 4), float64] */, dtype="uint32") /* ty=Tensor[(15, 14, 4), uint32] */;
  %805 = shape_of(%803, dtype="int32") /* ty=Tensor[(3), int32] */;
  %806 = cast(%803, dtype="uint32") /* ty=Tensor[(15, 14, 4), uint32] */;
  %807 = dyn.reshape(%804, %805, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %808 = cast(%803, dtype="float64") /* ty=Tensor[(15, 14, 4), float64] */;
  %809 = cast(%var_4558, dtype="float32") /* ty=Tensor[(2, 336), float32] */;
  %810 = reshape(%809, newshape=[7, 8, 12]) /* ty=Tensor[(7, 8, 12), float32] */;
  %811 = @func_4477() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(7, 8, 1), float32], Tensor[(15, 14, 4), float64]) */;
  %812 = logical_xor(%806, %807) /* ty=Tensor[(15, 14, 4), uint32] */;
  %813 = log10(%808) /* ty=Tensor[(15, 14, 4), float64] */;
  %814 = @func_4252(%810) /* ty=Tensor[(7, 8, 12), bool] */;
  %815 = %811.1;
  (%812, %813, %814, %var_4558, %815)
}

def @func_2846(%var_2834: Tensor[(7, 3, 15), float32]) -> (Tensor[(7, 3, 15), float32], Tensor[(7, 3, 15), float64]) {
  %816 = cast(%var_2834, dtype="float32") /* ty=Tensor[(7, 3, 15), float32] */;
  %817 = cast(%var_2834, dtype="float64") /* ty=Tensor[(7, 3, 15), float64] */;
  %818 = sin(%816) /* ty=Tensor[(7, 3, 15), float32] */;
  %819 = asinh(%817) /* ty=Tensor[(7, 3, 15), float64] */;
  (%818, %819)
}

def @func_5465() -> (Tensor[(7, 8, 1), float32], Tensor[(7, 8, 1), float32]) {
  %820 = @func_5099() /* ty=(Tensor[(7, 8, 1), float32],) */;
  %821 = @func_4750() /* ty=(Tensor[(7, 8, 1), float32],) */;
  %822 = %820.0;
  %823 = %821.0;
  (%822, %823)
}

def @func_9616(%var_9589: Tensor[(6, 2, 4), uint16], %var_9590: Tensor[(6, 2, 4), uint16]) -> (Tensor[(6, 2, 4), bool], Tensor[(6, 2, 4), float32], Tensor[(7, 8, ?), bool]) {
  %824 = cast(%var_9590, dtype="bool") /* ty=Tensor[(6, 2, 4), bool] */;
  %825 = shape_of(%var_9589, dtype="int32") /* ty=Tensor[(3), int32] */;
  %826 = cast(%var_9589, dtype="bool") /* ty=Tensor[(6, 2, 4), bool] */;
  %827 = dyn.reshape(%824, %825, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %828 = cast(%var_9589, dtype="float32") /* ty=Tensor[(6, 2, 4), float32] */;
  %829 = greater_equal(%826, %827) /* ty=Tensor[(6, 2, 4), bool] */;
  %830 = log2(%828) /* ty=Tensor[(6, 2, 4), float32] */;
  %831 = @func_5207() /* ty=Tensor[(7, 8, ?), bool] */;
  (%829, %830, %831)
}

def @func_6734() -> (Tensor[(16, 12, 11), float32], Tensor[(5, 16, 10), int16], Tensor[(7, 8, 1), float32], Tensor[(720), float32], Tensor[(15, 14, 4), float64]) {
  %832 = @func_6056() /* ty=(Tensor[(16, 12, 11), float32],) */;
  %833 = %832.0;
  %834 = cast(%833, dtype="float32") /* ty=Tensor[(16, 12, 11), float32] */;
  %835 = reshape(%834, newshape=[2112]) /* ty=Tensor[(2112), float32] */;
  %836 = @func_409(%835) /* ty=(Tensor[(5, 16, 10), int16], Tensor[(16, 12, 11), float32], Tensor[(2112), float32]) */;
  %837 = cast(meta[relay.Constant][43] /* ty=Tensor[(720), float32] */, dtype="float32") /* ty=Tensor[(720), float32] */;
  %838 = reshape(%837, newshape=[720, 1]) /* ty=Tensor[(720, 1), float32] */;
  %839 = @func_4898(%838) /* ty=(Tensor[(7, 8, 1), float32], Tensor[(2112), uint8], Tensor[(720, 1), float32], Tensor[(13, 3, 12), uint16], uint16, Tensor[(468), uint16]) */;
  %840 = @func_4157() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(15, 14, 4), float64], Tensor[(1, 840), float64], Tensor[(7, 8, 1), float32]) */;
  %841 = %836.0;
  %842 = %839.0;
  %843 = %840.1;
  (%833, %841, %842, meta[relay.Constant][43] /* ty=Tensor[(720), float32] */, %843)
}

def @func_8180() -> (Tensor[(7, 8, 1), float32],) {
  %844 = @func_5465() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(7, 8, 1), float32]) */;
  %845 = %844.0;
  (%845,)
}

def @func_10116() -> (Tensor[(7, 8, ?), float32],) {
  %846 = @func_9188() /* ty=(Tensor[(7, 8, ?), uint16],) */;
  %847 = %846.0;
  %848 = @func_5465() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(7, 8, 1), float32]) */;
  %849 = %848.1;
  %850 = cast(%849, dtype="float32") /* ty=Tensor[(7, 8, 1), float32] */;
  %851 = shape_of(%847, dtype="int32") /* ty=Tensor[(3), int32] */;
  %852 = cast(%847, dtype="float32") /* ty=Tensor[(7, 8, ?), float32] */;
  %853 = dyn.reshape(%850, %851, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %854 = floor_divide(%852, %853) /* ty=Tensor[(7, 8, ?), float32] */;
  (%854,)
}

def @func_4750() -> (Tensor[(7, 8, 1), float32],) {
  %855 = @func_4183() /* ty=(Tensor[(7, 8, 1), float32],) */;
  %856 = %855.0;
  (%856,)
}

def @func_5792(%var_5770: Tensor[(840), float64], %var_5781: Tensor[(7, 8, 1), float32]) -> (Tensor[(15, 14, 4), float64], Tensor[(840), float64], Tensor[(7, 8, ?), float64]) {
  %857 = cast(%var_5770, dtype="float64") /* ty=Tensor[(840), float64] */;
  %858 = reshape(%857, newshape=[840]) /* ty=Tensor[(840), float64] */;
  %859 = @func_4325(%858) /* ty=(Tensor[(7, 8, 1), float32], Tensor[(15, 14, 4), float64], Tensor[(840), float64]) */;
  %860 = @func_5662() /* ty=Tensor[(7, 8, 1), float32] */;
  %861 = cast(%var_5781, dtype="float64") /* ty=Tensor[(7, 8, 1), float64] */;
  %862 = shape_of(%860, dtype="int32") /* ty=Tensor[(3), int32] */;
  %863 = cast(%860, dtype="float64") /* ty=Tensor[(7, 8, 1), float64] */;
  %864 = dyn.reshape(%861, %862, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %865 = %859.1;
  %866 = power(%863, %864) /* ty=Tensor[(7, 8, ?), float64] */;
  (%865, %var_5770, %866)
}

def @func_9996(%var_9925: Tensor[(16, 12, 11), float32]) -> (Tensor[(16, 12, 11), uint8], Tensor[(15, 14, 4), float64], Tensor[(7, 8, 1), float64]) {
  %867 = @func_6056() /* ty=(Tensor[(16, 12, 11), float32],) */;
  %868 = %867.0;
  %869 = cast(%var_9925, dtype="bool") /* ty=Tensor[(16, 12, 11), bool] */;
  %870 = shape_of(%868, dtype="int32") /* ty=Tensor[(3), int32] */;
  %871 = cast(%868, dtype="bool") /* ty=Tensor[(16, 12, 11), bool] */;
  %872 = dyn.reshape(%869, %870, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %873 = less(%871, %872) /* ty=Tensor[(16, 12, 11), bool] */;
  %874 = cast(%868, dtype="uint8") /* ty=Tensor[(16, 12, 11), uint8] */;
  %875 = shape_of(%873, dtype="int32") /* ty=Tensor[(3), int32] */;
  %876 = cast(%873, dtype="uint8") /* ty=Tensor[(16, 12, 11), uint8] */;
  %877 = dyn.reshape(%874, %875, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %878 = cast(%868, dtype="float32") /* ty=Tensor[(16, 12, 11), float32] */;
  %879 = reshape(%878, newshape=[2112]) /* ty=Tensor[(2112), float32] */;
  %880 = @func_7568(%879) /* ty=(Tensor[(7, 8, 1), float64], Tensor[(2112), float32], Tensor[(2112), float32]) */;
  %881 = logical_xor(%876, %877) /* ty=Tensor[(16, 12, 11), uint8] */;
  %882 = @func_5899() /* ty=Tensor[(15, 14, 4), float64] */;
  %883 = %880.0;
  (%881, %882, %883)
}

def @func_6631() -> (Tensor[(7, 8, ?), int8],) {
  %884 = @func_4183() /* ty=(Tensor[(7, 8, 1), float32],) */;
  %885 = %884.0;
  %886 = @func_4477() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(7, 8, 1), float32], Tensor[(15, 14, 4), float64]) */;
  %887 = %886.0;
  %888 = cast(%887, dtype="int8") /* ty=Tensor[(7, 8, 1), int8] */;
  %889 = shape_of(%885, dtype="int32") /* ty=Tensor[(3), int32] */;
  %890 = cast(%885, dtype="int8") /* ty=Tensor[(7, 8, 1), int8] */;
  %891 = dyn.reshape(%888, %889, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %892 = multiply(%890, %891) /* ty=Tensor[(7, 8, ?), int8] */;
  (%892,)
}

def @func_11130() -> Tensor[(7, 8, ?), float32] {
  @func_6641() /* ty=Tensor[(7, 8, ?), float32] */
}

def @func_8702() -> (Tensor[(7, 8, 2), bool], Tensor[(16, 12, 11), float32], Tensor[(7, 8, 1), float32], Tensor[(616), bool]) {
  %893 = @func_4183() /* ty=(Tensor[(7, 8, 1), float32],) */;
  %894 = %893.0;
  %895 = cast(%894, dtype="bool") /* ty=Tensor[(7, 8, 1), bool] */;
  %896 = cast(meta[relay.Constant][44] /* ty=Tensor[(7, 8, 2), float32] */, dtype="bool") /* ty=Tensor[(7, 8, 2), bool] */;
  %897 = @func_6056() /* ty=(Tensor[(16, 12, 11), float32],) */;
  %898 = @func_8277() /* ty=(Tensor[(616), bool], Tensor[(7, 8, ?), bool]) */;
  %899 = less_equal(%895, %896) /* ty=Tensor[(7, 8, 2), bool] */;
  %900 = %897.0;
  %901 = @func_4298() /* ty=Tensor[(7, 8, 1), float32] */;
  %902 = %898.0;
  (%899, %900, %901, %902)
}

def @func_4126() -> (Tensor[(7, 8, 1), float32],) {
  %903 = cast(meta[relay.Constant][45] /* ty=Tensor[(7, 8, 1), float32] */, dtype="float32") /* ty=Tensor[(7, 8, 1), float32] */;
  %904 = rsqrt(%903) /* ty=Tensor[(7, 8, 1), float32] */;
  (%904,)
}

def @func_8409() -> Tensor[(7, 8, 1), float32] {
  %905 = @func_4750() /* ty=(Tensor[(7, 8, 1), float32],) */;
  %905.0
}

def @func_5207() -> Tensor[(7, 8, ?), bool] {
  %906 = @func_4126() /* ty=(Tensor[(7, 8, 1), float32],) */;
  %907 = %906.0;
  %908 = cast(%907, dtype="float32") /* ty=Tensor[(7, 8, 1), float32] */;
  %909 = tan(%908) /* ty=Tensor[(7, 8, 1), float32] */;
  %910 = cast(%909, dtype="bool") /* ty=Tensor[(7, 8, 1), bool] */;
  %911 = shape_of(%907, dtype="int32") /* ty=Tensor[(3), int32] */;
  %912 = cast(%907, dtype="bool") /* ty=Tensor[(7, 8, 1), bool] */;
  %913 = dyn.reshape(%910, %911, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%912, %913) /* ty=Tensor[(7, 8, ?), bool] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_4640(%var_4638: Tensor[(16, 15, 10), float64]) -> (Tensor[(16, 15, 10), float32], Tensor[(16, 12, 11), float32], Tensor[(2112), float32]) {
  @func_4637(%var_4638) /* ty=(Tensor[(16, 15, 10), float32], Tensor[(16, 12, 11), float32], Tensor[(2112), float32]) */
}

def @func_7596() -> (Tensor[(15, 14, 4), float64],) {
  @func_7594() /* ty=(Tensor[(15, 14, 4), float64],) */
}

def @func_5466() -> (Tensor[(7, 8, 1), float32], Tensor[(7, 8, 1), float32]) {
  %4 = fn () -> (Tensor[(7, 8, 1), float32], Tensor[(7, 8, 1), float32]) {
    %0 = @func_5099() /* ty=(Tensor[(7, 8, 1), float32],) */;
    %1 = @func_4750() /* ty=(Tensor[(7, 8, 1), float32],) */;
    %2 = %0.0;
    %3 = %1.0;
    (%2, %3)
  };
  %4() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(7, 8, 1), float32]) */
}

def @func_6677() -> (Tensor[(7, 8, ?), int8], Tensor[(7, 8, ?), bool]) {
  %11 = fn () -> (Tensor[(7, 8, ?), int8], Tensor[(7, 8, ?), bool]) {
    %5 = @func_6631() /* ty=(Tensor[(7, 8, ?), int8],) */;
    %6 = %5.0;
    %7 = cast(%6, dtype="float32") /* ty=Tensor[(7, 8, ?), float32] */;
    %8 = reshape(%7, newshape=[7, 8, 1]) /* ty=Tensor[(7, 8, 1), float32] */;
    %9 = @func_5876(%8) /* ty=(Tensor[(7, 8, ?), bool], Tensor[(7, 8, 1), float32], int64, Tensor[(60), int64]) */;
    %10 = %9.0;
    (%6, %10)
  };
  %11() /* ty=(Tensor[(7, 8, ?), int8], Tensor[(7, 8, ?), bool]) */
}

def @func_9814() -> (Tensor[(15, 14, 4), float32], Tensor[(7, 8, 1), float32], Tensor[(616), float32]) {
  @func_9812() /* ty=(Tensor[(15, 14, 4), float32], Tensor[(7, 8, 1), float32], Tensor[(616), float32]) */
}

def @func_10024() -> (Tensor[(7, 8, 1), float64],) {
  %12 = @func_8759() /* ty=(Tensor[(7, 8, 1), float64],) */;
  %13 = %12.0;
  (%13,)
}

def @func_4447(%var_4445: Tensor[(11, 11, 6), float32]) -> (Tensor[(11, 11, 6), float32],) {
  @func_4444(%var_4445) /* ty=(Tensor[(11, 11, 6), float32],) */
}

def @func_4900(%var_4899: Tensor[(720, 1), float32]) -> (Tensor[(7, 8, 1), float32], Tensor[(2112), uint8], Tensor[(720, 1), float32], Tensor[(13, 3, 12), uint16], uint16, Tensor[(468), uint16]) {
  %25 = fn (%var_4877: Tensor[(720, 1), float32]) -> (Tensor[(7, 8, 1), float32], Tensor[(2112), uint8], Tensor[(720, 1), float32], Tensor[(13, 3, 12), uint16], uint16, Tensor[(468), uint16]) {
    %14 = @func_4126() /* ty=(Tensor[(7, 8, 1), float32],) */;
    %15 = cast(%var_4877, dtype="float32") /* ty=Tensor[(720, 1), float32] */;
    %16 = reshape(%15, newshape=[10, 9, 8]) /* ty=Tensor[(10, 9, 8), float32] */;
    %17 = @func_727(%16) /* ty=(Tensor[(5, 16, 10), int16], Tensor[(10, 9, 8), float32], Tensor[(2112), uint8], Tensor[(2112), float32], Tensor[(2112), bool]) */;
    %18 = cast(meta[relay.Constant][0] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %19 = cast(meta[relay.Constant][1] /* ty=Tensor[(468), uint16] */, dtype="uint16") /* ty=Tensor[(468), uint16] */;
    %20 = reshape(%18, newshape=[]) /* ty=uint16 */;
    %21 = reshape(%19, newshape=[13, 3, 12]) /* ty=Tensor[(13, 3, 12), uint16] */;
    %22 = %14.0;
    %23 = %17.2;
    %24 = @func_2740(%20, %21) /* ty=Tensor[(13, 3, 12), uint16] */;
    (%22, %23, %var_4877, %24, meta[relay.Constant][0] /* ty=uint16 */, meta[relay.Constant][1] /* ty=Tensor[(468), uint16] */)
  };
  %25(%var_4899) /* ty=(Tensor[(7, 8, 1), float32], Tensor[(2112), uint8], Tensor[(720, 1), float32], Tensor[(13, 3, 12), uint16], uint16, Tensor[(468), uint16]) */
}

def @func_202(%var_200: Tensor[(16, 12, 11), float32], %var_201: Tensor[(16, 12, 11), float32]) -> (Tensor[(16, 12, 11), float32],) {
  %33 = fn (%var_172: Tensor[(16, 12, 11), float32], %var_173: Tensor[(16, 12, 11), float32]) -> (Tensor[(16, 12, 11), float32],) {
    %26 = cast(%var_173, dtype="float32") /* ty=Tensor[(16, 12, 11), float32] */;
    %27 = shape_of(%var_172, dtype="int32") /* ty=Tensor[(3), int32] */;
    %28 = cast(%var_172, dtype="float32") /* ty=Tensor[(16, 12, 11), float32] */;
    %29 = dyn.reshape(%26, %27, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %30 = power(%28, %29) /* ty=Tensor[(16, 12, 11), float32] */;
    %31 = cast(%30, dtype="float32") /* ty=Tensor[(16, 12, 11), float32] */;
    %32 = acosh(%31) /* ty=Tensor[(16, 12, 11), float32] */;
    (%32,)
  };
  %33(%var_200, %var_201) /* ty=(Tensor[(16, 12, 11), float32],) */
}

def @func_11130() -> Tensor[(7, 8, ?), float32] {
  @func_6641() /* ty=Tensor[(7, 8, ?), float32] */
}

def @func_4127() -> (Tensor[(7, 8, 1), float32],) {
  %36 = fn () -> (Tensor[(7, 8, 1), float32],) {
    %34 = cast(meta[relay.Constant][2] /* ty=Tensor[(7, 8, 1), float32] */, dtype="float32") /* ty=Tensor[(7, 8, 1), float32] */;
    %35 = rsqrt(%34) /* ty=Tensor[(7, 8, 1), float32] */;
    (%35,)
  };
  %36() /* ty=(Tensor[(7, 8, 1), float32],) */
}

def @func_10266() -> Tensor[(7, 8, 1), float32] {
  @func_10264() /* ty=Tensor[(7, 8, 1), float32] */
}

def @func_5732(%var_5729: uint16, %var_5730: Tensor[(14, 1, 10), uint16], %var_5731: Tensor[(2, 832), uint64]) -> (Tensor[(14, 1, 10), uint16], Tensor[(2112), float32], Tensor[(2, 832), uint64]) {
  @func_5727(%var_5729, %var_5730, %var_5731) /* ty=(Tensor[(14, 1, 10), uint16], Tensor[(2112), float32], Tensor[(2, 832), uint64]) */
}

def @func_730(%var_728: Tensor[(10, 9, 8), float32]) -> (Tensor[(5, 16, 10), int16], Tensor[(10, 9, 8), float32], Tensor[(2112), uint8], Tensor[(2112), float32], Tensor[(2112), bool]) {
  @func_727(%var_728) /* ty=(Tensor[(5, 16, 10), int16], Tensor[(10, 9, 8), float32], Tensor[(2112), uint8], Tensor[(2112), float32], Tensor[(2112), bool]) */
}

def @func_9535() -> (Tensor[(7, 8, ?), int8],) {
  %37 = @func_6631() /* ty=(Tensor[(7, 8, ?), int8],) */;
  %38 = %37.0;
  (%38,)
}

def @func_8784() -> (Tensor[(7, 8, 1), float32],) {
  @func_8782() /* ty=(Tensor[(7, 8, 1), float32],) */
}

def @func_10969(%var_10966: float64) -> (Tensor[(1, 840), float64], Tensor[(840), float64], float64) {
  %39 = @func_7383() /* ty=(Tensor[(1, 840), float64], Tensor[(7, 8, 1), float32]) */;
  %40 = cast(%var_10966, dtype="float64") /* ty=float64 */;
  %41 = reshape(%40, newshape=[]) /* ty=float64 */;
  %42 = @func_9750(%41) /* ty=(Tensor[(7, 8, 1), float32], Tensor[(7, 8, 1), float64], float64, Tensor[(1694), float64], Tensor[(15, 14, 4), float64], Tensor[(840), float64]) */;
  %43 = %39.0;
  %44 = %42.5;
  (%43, %44, %var_10966)
}

def @func_7594() -> (Tensor[(15, 14, 4), float64],) {
  %45 = @func_4428() /* ty=(Tensor[(15, 14, 4), float64],) */;
  %46 = %45.0;
  (%46,)
}

def @func_4637(%var_4619: Tensor[(16, 15, 10), float64]) -> (Tensor[(16, 15, 10), float32], Tensor[(16, 12, 11), float32], Tensor[(2112), float32]) {
  %47 = cast(%var_4619, dtype="float64") /* ty=Tensor[(16, 15, 10), float64] */;
  %48 = log2(%47) /* ty=Tensor[(16, 15, 10), float64] */;
  %49 = cast(%48, dtype="float32") /* ty=Tensor[(16, 15, 10), float32] */;
  %50 = cast(meta[relay.Constant][3] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %51 = cast(meta[relay.Constant][3] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %52 = reshape(%50, newshape=[16, 12, 11]) /* ty=Tensor[(16, 12, 11), float32] */;
  %53 = reshape(%51, newshape=[16, 12, 11]) /* ty=Tensor[(16, 12, 11), float32] */;
  %54 = @func_199(%52, %53) /* ty=(Tensor[(16, 12, 11), float32],) */;
  %55 = asin(%49) /* ty=Tensor[(16, 15, 10), float32] */;
  %56 = %54.0;
  (%55, %56, meta[relay.Constant][3] /* ty=Tensor[(2112), float32] */)
}

def @func_7571(%var_7569: Tensor[(2112), float32]) -> (Tensor[(7, 8, 1), float64], Tensor[(2112), float32], Tensor[(2112), float32]) {
  @func_7568(%var_7569) /* ty=(Tensor[(7, 8, 1), float64], Tensor[(2112), float32], Tensor[(2112), float32]) */
}

def @func_9753(%var_9751: float64) -> (Tensor[(7, 8, 1), float32], Tensor[(7, 8, 1), float64], float64, Tensor[(1694), float64], Tensor[(15, 14, 4), float64], Tensor[(840), float64]) {
  @func_9750(%var_9751) /* ty=(Tensor[(7, 8, 1), float32], Tensor[(7, 8, 1), float64], float64, Tensor[(1694), float64], Tensor[(15, 14, 4), float64], Tensor[(840), float64]) */
}

def @func_5341(%var_5330: Tensor[(1694), float64]) -> (Tensor[(7, 8, 1), float32], Tensor[(11, 14, 11), float64], float64, Tensor[(1694), float64]) {
  %57 = @func_4750() /* ty=(Tensor[(7, 8, 1), float32],) */;
  %58 = cast(-6.48126f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %59 = cast(%var_5330, dtype="float64") /* ty=Tensor[(1694), float64] */;
  %60 = reshape(%58, newshape=[]) /* ty=float64 */;
  %61 = reshape(%59, newshape=[11, 14, 11]) /* ty=Tensor[(11, 14, 11), float64] */;
  %62 = %57.0;
  %63 = @func_5039(%60, %61) /* ty=Tensor[(11, 14, 11), float64] */;
  (%62, %63, -6.48126f64 /* ty=float64 */, %var_5330)
}

def @func_7498() -> Tensor[(7, 8, 1), float32] {
  @func_7496() /* ty=Tensor[(7, 8, 1), float32] */
}

def @func_7080(%var_7072: Tensor[(6, 140), float64]) -> (Tensor[(7, 8, 1), float32], Tensor[(15, 14, 4), float64], Tensor[(6, 140), float64], Tensor[(7, 8, 1), float32], Tensor[(7, 3, 15), float32], Tensor[(315), float32]) {
  %64 = @func_5099() /* ty=(Tensor[(7, 8, 1), float32],) */;
  %65 = cast(%var_7072, dtype="float64") /* ty=Tensor[(6, 140), float64] */;
  %66 = reshape(%65, newshape=[15, 14, 4]) /* ty=Tensor[(15, 14, 4), float64] */;
  %67 = @func_1695(%66) /* ty=(Tensor[(15, 14, 4), float64],) */;
  %68 = cast(meta[relay.Constant][4] /* ty=Tensor[(315), float32] */, dtype="float32") /* ty=Tensor[(315), float32] */;
  %69 = reshape(%68, newshape=[7, 3, 15]) /* ty=Tensor[(7, 3, 15), float32] */;
  %70 = @func_2846(%69) /* ty=(Tensor[(7, 3, 15), float32], Tensor[(7, 3, 15), float64]) */;
  %71 = %64.0;
  %72 = %67.0;
  %73 = @func_5542() /* ty=Tensor[(7, 8, 1), float32] */;
  %74 = %70.0;
  (%71, %72, %var_7072, %73, %74, meta[relay.Constant][4] /* ty=Tensor[(315), float32] */)
}

def @func_5727(%var_5714: uint16, %var_5715: Tensor[(14, 1, 10), uint16], %var_5725: Tensor[(2, 832), uint64]) -> (Tensor[(14, 1, 10), uint16], Tensor[(2112), float32], Tensor[(2, 832), uint64]) {
  %75 = cast(%var_5714, dtype="uint16") /* ty=uint16 */;
  %76 = cast(%var_5715, dtype="uint16") /* ty=Tensor[(14, 1, 10), uint16] */;
  %77 = cast(%var_5725, dtype="uint64") /* ty=Tensor[(2, 832), uint64] */;
  %78 = cast(%var_5725, dtype="uint64") /* ty=Tensor[(2, 832), uint64] */;
  %79 = reshape(%77, newshape=[16, 8, 13]) /* ty=Tensor[(16, 8, 13), uint64] */;
  %80 = reshape(%78, newshape=[16, 8, 13]) /* ty=Tensor[(16, 8, 13), uint64] */;
  %81 = @func_3146(%79, %80) /* ty=(Tensor[(16, 8, 13), uint64], Tensor[(3, 5, 16), float32], Tensor[(2112), float32]) */;
  %82 = logical_xor(%75, %76) /* ty=Tensor[(14, 1, 10), uint16] */;
  %83 = %81.2;
  (%82, %83, %var_5725)
}

def @func_5899() -> Tensor[(15, 14, 4), float64] {
  %84 = @func_4428() /* ty=(Tensor[(15, 14, 4), float64],) */;
  %84.0
}

def @func_4204(%var_4189: int64, %var_4190: Tensor[(1, 15, 4), int64]) -> (Tensor[(1, 15, 4), int64], Tensor[(1, 15, 4), uint16], Tensor[(7, 8, 1), float32]) {
  %85 = cast(%var_4189, dtype="int64") /* ty=int64 */;
  %86 = cast(%var_4190, dtype="int64") /* ty=Tensor[(1, 15, 4), int64] */;
  %87 = cast(%var_4190, dtype="uint16") /* ty=Tensor[(1, 15, 4), uint16] */;
  %88 = cast(%var_4189, dtype="uint16") /* ty=uint16 */;
  %89 = @func_4183() /* ty=(Tensor[(7, 8, 1), float32],) */;
  %90 = multiply(%85, %86) /* ty=Tensor[(1, 15, 4), int64] */;
  %91 = logical_xor(%87, %88) /* ty=Tensor[(1, 15, 4), uint16] */;
  %92 = %89.0;
  (%90, %91, %92)
}

def @func_5099() -> (Tensor[(7, 8, 1), float32],) {
  %93 = @func_4750() /* ty=(Tensor[(7, 8, 1), float32],) */;
  %94 = %93.0;
  (%94,)
}

def @func_4254(%var_4253: Tensor[(7, 8, 12), float32]) -> Tensor[(7, 8, 12), bool] {
  %109 = fn (%var_4234: Tensor[(7, 8, 12), float32]) -> Tensor[(7, 8, 12), bool] {
    %95 = @func_4183() /* ty=(Tensor[(7, 8, 1), float32],) */;
    %96 = %95.0;
    %97 = cast(%96, dtype="bool") /* ty=Tensor[(7, 8, 1), bool] */;
    %98 = cast(%var_4234, dtype="bool") /* ty=Tensor[(7, 8, 12), bool] */;
    %99 = greater(%97, %98) /* ty=Tensor[(7, 8, 12), bool] */;
    %100 = cast(%var_4234, dtype="bool") /* ty=Tensor[(7, 8, 12), bool] */;
    %101 = shape_of(%99, dtype="int32") /* ty=Tensor[(3), int32] */;
    %102 = cast(%99, dtype="bool") /* ty=Tensor[(7, 8, 12), bool] */;
    %103 = dyn.reshape(%100, %101, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %104 = less_equal(%102, %103) /* ty=Tensor[(7, 8, 12), bool] */;
    %105 = cast(%104, dtype="bool") /* ty=Tensor[(7, 8, 12), bool] */;
    %106 = shape_of(%99, dtype="int32") /* ty=Tensor[(3), int32] */;
    %107 = cast(%99, dtype="bool") /* ty=Tensor[(7, 8, 12), bool] */;
    %108 = dyn.reshape(%105, %106, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    greater_equal(%107, %108) /* ty=Tensor[(7, 8, 12), bool] */
  };
  %109(%var_4253) /* ty=Tensor[(7, 8, 12), bool] */
}

def @func_5039(%var_5030: float64, %var_5031: Tensor[(11, 14, 11), float64]) -> Tensor[(11, 14, 11), float64] {
  %110 = cast(%var_5030, dtype="float64") /* ty=float64 */;
  %111 = cast(%var_5031, dtype="float64") /* ty=Tensor[(11, 14, 11), float64] */;
  floor_divide(%110, %111) /* ty=Tensor[(11, 14, 11), float64] */
}

def @func_5878(%var_5877: Tensor[(7, 8, 1), float32]) -> (Tensor[(7, 8, ?), bool], Tensor[(7, 8, 1), float32], int64, Tensor[(60), int64]) {
  %124 = fn (%var_5853: Tensor[(7, 8, 1), float32]) -> (Tensor[(7, 8, ?), bool], Tensor[(7, 8, 1), float32], int64, Tensor[(60), int64]) {
    %112 = @func_5542() /* ty=Tensor[(7, 8, 1), float32] */;
    %113 = cast(%var_5853, dtype="bool") /* ty=Tensor[(7, 8, 1), bool] */;
    %114 = shape_of(%112, dtype="int32") /* ty=Tensor[(3), int32] */;
    %115 = cast(%112, dtype="bool") /* ty=Tensor[(7, 8, 1), bool] */;
    %116 = dyn.reshape(%113, %114, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %117 = cast(10 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %118 = cast(meta[relay.Constant][5] /* ty=Tensor[(60), int64] */, dtype="int64") /* ty=Tensor[(60), int64] */;
    %119 = reshape(%117, newshape=[]) /* ty=int64 */;
    %120 = reshape(%118, newshape=[1, 15, 4]) /* ty=Tensor[(1, 15, 4), int64] */;
    %121 = @func_4204(%119, %120) /* ty=(Tensor[(1, 15, 4), int64], Tensor[(1, 15, 4), uint16], Tensor[(7, 8, 1), float32]) */;
    %122 = logical_or(%115, %116) /* ty=Tensor[(7, 8, ?), bool] */;
    %123 = %121.2;
    (%122, %123, 10 /* ty=int64 */, meta[relay.Constant][5] /* ty=Tensor[(60), int64] */)
  };
  %124(%var_5877) /* ty=(Tensor[(7, 8, ?), bool], Tensor[(7, 8, 1), float32], int64, Tensor[(60), int64]) */
}

def @func_4585(%var_4583: Tensor[(2, 336), float32]) -> (Tensor[(15, 14, 4), uint32], Tensor[(15, 14, 4), float64], Tensor[(7, 8, 12), bool], Tensor[(2, 336), float32], Tensor[(7, 8, 1), float32]) {
  @func_4582(%var_4583) /* ty=(Tensor[(15, 14, 4), uint32], Tensor[(15, 14, 4), float64], Tensor[(7, 8, 12), bool], Tensor[(2, 336), float32], Tensor[(7, 8, 1), float32]) */
}

def @func_6643() -> Tensor[(7, 8, ?), float32] {
  @func_6641() /* ty=Tensor[(7, 8, ?), float32] */
}

def @func_7549() -> (Tensor[(7, 8, 1), float32],) {
  %127 = fn () -> (Tensor[(7, 8, 1), float32],) {
    %125 = @func_6010() /* ty=(Tensor[(7, 8, ?), bool], Tensor[(7, 8, 1), float32]) */;
    %126 = %125.1;
    (%126,)
  };
  %127() /* ty=(Tensor[(7, 8, 1), float32],) */
}

def @func_6056() -> (Tensor[(16, 12, 11), float32],) {
  %128 = @func_4830() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(16, 12, 11), float32], Tensor[(44, 48), float32]) */;
  %129 = %128.1;
  (%129,)
}

def @func_2348(%var_2345: Tensor[(528, 4), float32], %var_2346: float32, %var_2347: Tensor[(90), float32]) -> (Tensor[(16, 12, 11), float32], Tensor[(528, 4), float32], Tensor[(16, 12, 11), float32], float32, Tensor[(90), float32], Tensor[(7, 8, 9), float64]) {
  @func_2343(%var_2345, %var_2346, %var_2347) /* ty=(Tensor[(16, 12, 11), float32], Tensor[(528, 4), float32], Tensor[(16, 12, 11), float32], float32, Tensor[(90), float32], Tensor[(7, 8, 9), float64]) */
}

def @func_7107() -> (Tensor[(15, 14, 4), float32], Tensor[(7, 8, 11), int8], Tensor[(616), float32]) {
  %137 = fn () -> (Tensor[(15, 14, 4), float32], Tensor[(7, 8, 11), int8], Tensor[(616), float32]) {
    %130 = @func_5899() /* ty=Tensor[(15, 14, 4), float64] */;
    %131 = cast(%130, dtype="float32") /* ty=Tensor[(15, 14, 4), float32] */;
    %132 = cast(meta[relay.Constant][6] /* ty=Tensor[(616), float32] */, dtype="float32") /* ty=Tensor[(616), float32] */;
    %133 = reshape(%132, newshape=[7, 8, 11]) /* ty=Tensor[(7, 8, 11), float32] */;
    %134 = @func_5588(%133) /* ty=(Tensor[(7, 8, 1), float32], Tensor[(7, 8, 11), int8]) */;
    %135 = acos(%131) /* ty=Tensor[(15, 14, 4), float32] */;
    %136 = %134.1;
    (%135, %136, meta[relay.Constant][6] /* ty=Tensor[(616), float32] */)
  };
  %137() /* ty=(Tensor[(15, 14, 4), float32], Tensor[(7, 8, 11), int8], Tensor[(616), float32]) */
}

def @func_8181() -> (Tensor[(7, 8, 1), float32],) {
  %140 = fn () -> (Tensor[(7, 8, 1), float32],) {
    %138 = @func_5465() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(7, 8, 1), float32]) */;
    %139 = %138.0;
    (%139,)
  };
  %140() /* ty=(Tensor[(7, 8, 1), float32],) */
}

def @func_8278() -> (Tensor[(616), bool], Tensor[(7, 8, ?), bool]) {
  %149 = fn () -> (Tensor[(616), bool], Tensor[(7, 8, ?), bool]) {
    %141 = @func_7106() /* ty=(Tensor[(15, 14, 4), float32], Tensor[(7, 8, 11), int8], Tensor[(616), float32]) */;
    %142 = %141.2;
    %143 = cast(meta[relay.Constant][7] /* ty=Tensor[(616), float32] */, dtype="bool") /* ty=Tensor[(616), bool] */;
    %144 = shape_of(%142, dtype="int32") /* ty=Tensor[(1), int32] */;
    %145 = cast(%142, dtype="bool") /* ty=Tensor[(616), bool] */;
    %146 = dyn.reshape(%143, %144, newshape=[]) /* ty=Tensor[(?), bool] */;
    %147 = equal(%145, %146) /* ty=Tensor[(616), bool] */;
    %148 = @func_5207() /* ty=Tensor[(7, 8, ?), bool] */;
    (%147, %148)
  };
  %149() /* ty=(Tensor[(616), bool], Tensor[(7, 8, ?), bool]) */
}

def @func_10904() -> (Tensor[(7, 8, ?), bool], Tensor[(7, 8, 1), float64]) {
  @func_10902() /* ty=(Tensor[(7, 8, ?), bool], Tensor[(7, 8, 1), float64]) */
}

def @func_10645(%var_10643: Tensor[(1664), uint64], %var_10644: Tensor[(2112), float32]) -> (Tensor[(7, 8, 1), float64], Tensor[(7, 8, 1), float64], Tensor[(15, 14, 4), float64], Tensor[(840), float64], Tensor[(1664), uint64], Tensor[(2112), float32], Tensor[(12, 13, 16), float32], Tensor[(7, 8, 1), float32], Tensor[(7, 8, ?), bool], Tensor[(7, 8, 1), float32], Tensor[(15, 14, 4), float64], Tensor[(7, 8, 1), float32], Tensor[(12, 13, 16), bool], Tensor[(5, 16, 10), int16], Tensor[(7, 8, 1), float32], Tensor[(12, 13, 16), int32], Tensor[(12, 13, 16), bool]) {
  %206 = fn (%var_10518: Tensor[(1664), uint64], %var_10519: Tensor[(2112), float32]) -> (Tensor[(7, 8, 1), float64], Tensor[(7, 8, 1), float64], Tensor[(15, 14, 4), float64], Tensor[(840), float64], Tensor[(1664), uint64], Tensor[(2112), float32], Tensor[(12, 13, 16), float32], Tensor[(7, 8, 1), float32], Tensor[(7, 8, ?), bool], Tensor[(7, 8, 1), float32], Tensor[(15, 14, 4), float64], Tensor[(7, 8, 1), float32], Tensor[(12, 13, 16), bool], Tensor[(5, 16, 10), int16], Tensor[(7, 8, 1), float32], Tensor[(12, 13, 16), int32], Tensor[(12, 13, 16), bool]) {
    %150 = @func_10024() /* ty=(Tensor[(7, 8, 1), float64],) */;
    %151 = @func_6837() /* ty=(Tensor[(7, 8, 1), float64],) */;
    %152 = cast(meta[relay.Constant][8] /* ty=Tensor[(840), float64] */, dtype="float64") /* ty=Tensor[(840), float64] */;
    %153 = cast(%var_10518, dtype="uint64") /* ty=Tensor[(1664), uint64] */;
    %154 = cast(%var_10519, dtype="float32") /* ty=Tensor[(2112), float32] */;
    %155 = reshape(%152, newshape=[2, 420]) /* ty=Tensor[(2, 420), float64] */;
    %156 = reshape(%153, newshape=[1664]) /* ty=Tensor[(1664), uint64] */;
    %157 = reshape(%154, newshape=[2112]) /* ty=Tensor[(2112), float32] */;
    %158 = @func_4706(%155, %156, %157) /* ty=(Tensor[(7, 8, 1), float32], Tensor[(16, 12, 11), float32], Tensor[(15, 14, 4), float64], Tensor[(2, 420), float64], Tensor[(2112), float32], Tensor[(1664), uint64], Tensor[(2112), int8]) */;
    %159 = cast(-7.11962f64 /* ty=float64 */, dtype="bool") /* ty=bool */;
    %160 = cast(meta[relay.Constant][9] /* ty=Tensor[(12, 13, 16), float64] */, dtype="bool") /* ty=Tensor[(12, 13, 16), bool] */;
    %161 = less(%159, %160) /* ty=Tensor[(12, 13, 16), bool] */;
    %162 = cast(%161, dtype="float64") /* ty=Tensor[(12, 13, 16), float64] */;
    %163 = sin(%162) /* ty=Tensor[(12, 13, 16), float64] */;
    %164 = cast(%163, dtype="float32") /* ty=Tensor[(12, 13, 16), float32] */;
    %165 = sqrt(%164) /* ty=Tensor[(12, 13, 16), float32] */;
    %166 = cast(%165, dtype="float64") /* ty=Tensor[(12, 13, 16), float64] */;
    %167 = atanh(%166) /* ty=Tensor[(12, 13, 16), float64] */;
    %168 = cast(%167, dtype="float32") /* ty=Tensor[(12, 13, 16), float32] */;
    %169 = @func_7365() /* ty=(Tensor[(7, 8, ?), float32], Tensor[(7, 8, 1), float32]) */;
    %170 = @func_7594() /* ty=(Tensor[(15, 14, 4), float64],) */;
    %171 = @func_4750() /* ty=(Tensor[(7, 8, 1), float32],) */;
    %172 = cast(%167, dtype="float64") /* ty=Tensor[(12, 13, 16), float64] */;
    %173 = log2(%172) /* ty=Tensor[(12, 13, 16), float64] */;
    %174 = cast(%167, dtype="bool") /* ty=Tensor[(12, 13, 16), bool] */;
    %175 = shape_of(%173, dtype="int32") /* ty=Tensor[(3), int32] */;
    %176 = cast(%173, dtype="bool") /* ty=Tensor[(12, 13, 16), bool] */;
    %177 = dyn.reshape(%174, %175, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %178 = @func_7962() /* ty=(Tensor[(5, 16, 10), int16],) */;
    %179 = cast(%165, dtype="int32") /* ty=Tensor[(12, 13, 16), int32] */;
    %180 = shape_of(%173, dtype="int32") /* ty=Tensor[(3), int32] */;
    %181 = cast(%173, dtype="int32") /* ty=Tensor[(12, 13, 16), int32] */;
    %182 = dyn.reshape(%179, %180, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %183 = cast(meta[relay.Constant][10] /* ty=Tensor[(12, 13, 16), float32] */, dtype="bool") /* ty=Tensor[(12, 13, 16), bool] */;
    %184 = shape_of(%165, dtype="int32") /* ty=Tensor[(3), int32] */;
    %185 = cast(%165, dtype="bool") /* ty=Tensor[(12, 13, 16), bool] */;
    %186 = dyn.reshape(%183, %184, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %187 = equal(%185, %186) /* ty=Tensor[(12, 13, 16), bool] */;
    %188 = cast(meta[relay.Constant][10] /* ty=Tensor[(12, 13, 16), float32] */, dtype="bool") /* ty=Tensor[(12, 13, 16), bool] */;
    %189 = shape_of(%187, dtype="int32") /* ty=Tensor[(3), int32] */;
    %190 = cast(%187, dtype="bool") /* ty=Tensor[(12, 13, 16), bool] */;
    %191 = dyn.reshape(%188, %189, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %192 = %150.0;
    %193 = %151.0;
    %194 = %158.2;
    %195 = log10(%168) /* ty=Tensor[(12, 13, 16), float32] */;
    %196 = @func_5542() /* ty=Tensor[(7, 8, 1), float32] */;
    %197 = @func_5207() /* ty=Tensor[(7, 8, ?), bool] */;
    %198 = %169.1;
    %199 = %170.0;
    %200 = %171.0;
    %201 = less_equal(%176, %177) /* ty=Tensor[(12, 13, 16), bool] */;
    %202 = %178.0;
    %203 = @func_7496() /* ty=Tensor[(7, 8, 1), float32] */;
    %204 = bitwise_xor(%181, %182) /* ty=Tensor[(12, 13, 16), int32] */;
    %205 = greater(%190, %191) /* ty=Tensor[(12, 13, 16), bool] */;
    (%192, %193, %194, meta[relay.Constant][8] /* ty=Tensor[(840), float64] */, %var_10518, %var_10519, %195, %196, %197, %198, %199, %200, %201, %202, %203, %204, %205)
  };
  %206(%var_10643, %var_10644) /* ty=(Tensor[(7, 8, 1), float64], Tensor[(7, 8, 1), float64], Tensor[(15, 14, 4), float64], Tensor[(840), float64], Tensor[(1664), uint64], Tensor[(2112), float32], Tensor[(12, 13, 16), float32], Tensor[(7, 8, 1), float32], Tensor[(7, 8, ?), bool], Tensor[(7, 8, 1), float32], Tensor[(15, 14, 4), float64], Tensor[(7, 8, 1), float32], Tensor[(12, 13, 16), bool], Tensor[(5, 16, 10), int16], Tensor[(7, 8, 1), float32], Tensor[(12, 13, 16), int32], Tensor[(12, 13, 16), bool]) */
}

def @func_7385() -> (Tensor[(1, 840), float64], Tensor[(7, 8, 1), float32]) {
  @func_7383() /* ty=(Tensor[(1, 840), float64], Tensor[(7, 8, 1), float32]) */
}

def @func_8450() -> Tensor[(15, 14, 4), float64] {
  @func_8448() /* ty=Tensor[(15, 14, 4), float64] */
}

def @func_10246() -> (Tensor[(7, 8, ?), int8], Tensor[(7, 8, 11), int8], Tensor[(616), float32]) {
  %207 = @func_9535() /* ty=(Tensor[(7, 8, ?), int8],) */;
  %208 = cast(meta[relay.Constant][11] /* ty=Tensor[(616), float32] */, dtype="float32") /* ty=Tensor[(616), float32] */;
  %209 = reshape(%208, newshape=[7, 8, 11]) /* ty=Tensor[(7, 8, 11), float32] */;
  %210 = @func_5588(%209) /* ty=(Tensor[(7, 8, 1), float32], Tensor[(7, 8, 11), int8]) */;
  %211 = %207.0;
  %212 = %210.1;
  (%211, %212, meta[relay.Constant][11] /* ty=Tensor[(616), float32] */)
}

def @func_7037() -> Tensor[(16, 12, 11), float32] {
  %214 = fn () -> Tensor[(16, 12, 11), float32] {
    %213 = @func_6056() /* ty=(Tensor[(16, 12, 11), float32],) */;
    %213.0
  };
  %214() /* ty=Tensor[(16, 12, 11), float32] */
}

def @func_5280(%var_5277: float32, %var_5278: Tensor[(90), float32], %var_5279: Tensor[(168, 4), float32]) -> (Tensor[(7, 8, 1), float32], Tensor[(90), float32], float32, Tensor[(90), float32], Tensor[(7, 8, 12), bool], Tensor[(168, 4), float32], Tensor[(7, 8, 1), float32], Tensor[(7, 8, 1), float32], Tensor[(132, 16), float32]) {
  @func_5275(%var_5277, %var_5278, %var_5279) /* ty=(Tensor[(7, 8, 1), float32], Tensor[(90), float32], float32, Tensor[(90), float32], Tensor[(7, 8, 12), bool], Tensor[(168, 4), float32], Tensor[(7, 8, 1), float32], Tensor[(7, 8, 1), float32], Tensor[(132, 16), float32]) */
}

def @func_8512() -> Tensor[(7, 8, 1), float32] {
  %215 = @func_7988() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(1, 840), float64], Tensor[(2112, 1), float32]) */;
  %215.0
}

def @func_9619(%var_9617: Tensor[(6, 2, 4), uint16], %var_9618: Tensor[(6, 2, 4), uint16]) -> (Tensor[(6, 2, 4), bool], Tensor[(6, 2, 4), float32], Tensor[(7, 8, ?), bool]) {
  %224 = fn (%var_9589: Tensor[(6, 2, 4), uint16], %var_9590: Tensor[(6, 2, 4), uint16]) -> (Tensor[(6, 2, 4), bool], Tensor[(6, 2, 4), float32], Tensor[(7, 8, ?), bool]) {
    %216 = cast(%var_9590, dtype="bool") /* ty=Tensor[(6, 2, 4), bool] */;
    %217 = shape_of(%var_9589, dtype="int32") /* ty=Tensor[(3), int32] */;
    %218 = cast(%var_9589, dtype="bool") /* ty=Tensor[(6, 2, 4), bool] */;
    %219 = dyn.reshape(%216, %217, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %220 = cast(%var_9589, dtype="float32") /* ty=Tensor[(6, 2, 4), float32] */;
    %221 = greater_equal(%218, %219) /* ty=Tensor[(6, 2, 4), bool] */;
    %222 = log2(%220) /* ty=Tensor[(6, 2, 4), float32] */;
    %223 = @func_5207() /* ty=Tensor[(7, 8, ?), bool] */;
    (%221, %222, %223)
  };
  %224(%var_9617, %var_9618) /* ty=(Tensor[(6, 2, 4), bool], Tensor[(6, 2, 4), float32], Tensor[(7, 8, ?), bool]) */
}

def @func_9031(%var_9030: Tensor[(264, 8), float32]) -> (Tensor[(7, 8, 1), float32], Tensor[(2112), float32], Tensor[(264, 8), float32]) {
  %231 = fn (%var_9019: Tensor[(264, 8), float32]) -> (Tensor[(7, 8, 1), float32], Tensor[(2112), float32], Tensor[(264, 8), float32]) {
    %225 = @func_8921() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(7, 8, 1), float32]) */;
    %226 = cast(%var_9019, dtype="float32") /* ty=Tensor[(264, 8), float32] */;
    %227 = reshape(%226, newshape=[2112]) /* ty=Tensor[(2112), float32] */;
    %228 = @func_1150(%227) /* ty=(Tensor[(3, 5, 16), float64], Tensor[(3, 5, 16), float32], Tensor[(16, 12, 11), float32], Tensor[(2112), float32]) */;
    %229 = %225.1;
    %230 = %228.3;
    (%229, %230, %var_9019)
  };
  %231(%var_9030) /* ty=(Tensor[(7, 8, 1), float32], Tensor[(2112), float32], Tensor[(264, 8), float32]) */
}

def @func_4429() -> (Tensor[(15, 14, 4), float64],) {
  %234 = fn () -> (Tensor[(15, 14, 4), float64],) {
    %232 = @func_4157() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(15, 14, 4), float64], Tensor[(1, 840), float64], Tensor[(7, 8, 1), float32]) */;
    %233 = %232.1;
    (%233,)
  };
  %234() /* ty=(Tensor[(15, 14, 4), float64],) */
}

def @func_6011() -> (Tensor[(7, 8, ?), bool], Tensor[(7, 8, 1), float32]) {
  %238 = fn () -> (Tensor[(7, 8, ?), bool], Tensor[(7, 8, 1), float32]) {
    %235 = @func_4183() /* ty=(Tensor[(7, 8, 1), float32],) */;
    %236 = @func_5207() /* ty=Tensor[(7, 8, ?), bool] */;
    %237 = %235.0;
    (%236, %237)
  };
  %238() /* ty=(Tensor[(7, 8, ?), bool], Tensor[(7, 8, 1), float32]) */
}

def @func_3149(%var_3147: Tensor[(16, 8, 13), uint64], %var_3148: Tensor[(16, 8, 13), uint64]) -> (Tensor[(16, 8, 13), uint64], Tensor[(3, 5, 16), float32], Tensor[(2112), float32]) {
  %248 = fn (%var_3119: Tensor[(16, 8, 13), uint64], %var_3120: Tensor[(16, 8, 13), uint64]) -> (Tensor[(16, 8, 13), uint64], Tensor[(3, 5, 16), float32], Tensor[(2112), float32]) {
    %239 = cast(%var_3120, dtype="uint64") /* ty=Tensor[(16, 8, 13), uint64] */;
    %240 = shape_of(%var_3119, dtype="int32") /* ty=Tensor[(3), int32] */;
    %241 = cast(%var_3119, dtype="uint64") /* ty=Tensor[(16, 8, 13), uint64] */;
    %242 = dyn.reshape(%239, %240, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %243 = cast(meta[relay.Constant][12] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
    %244 = reshape(%243, newshape=[2112]) /* ty=Tensor[(2112), float32] */;
    %245 = @func_1150(%244) /* ty=(Tensor[(3, 5, 16), float64], Tensor[(3, 5, 16), float32], Tensor[(16, 12, 11), float32], Tensor[(2112), float32]) */;
    %246 = left_shift(%241, %242) /* ty=Tensor[(16, 8, 13), uint64] */;
    %247 = %245.1;
    (%246, %247, meta[relay.Constant][12] /* ty=Tensor[(2112), float32] */)
  };
  %248(%var_3147, %var_3148) /* ty=(Tensor[(16, 8, 13), uint64], Tensor[(3, 5, 16), float32], Tensor[(2112), float32]) */
}

def @func_5043(%var_5041: float64, %var_5042: Tensor[(11, 14, 11), float64]) -> Tensor[(11, 14, 11), float64] {
  @func_5039(%var_5041, %var_5042) /* ty=Tensor[(11, 14, 11), float64] */
}

def @func_9639() -> (Tensor[(7, 8, 1), float32],) {
  %249 = @func_8782() /* ty=(Tensor[(7, 8, 1), float32],) */;
  %250 = %249.0;
  (%250,)
}

def @func_5433() -> (Tensor[(7, 8, ?), float32], Tensor[(1694), uint64]) {
  %251 = @func_5207() /* ty=Tensor[(7, 8, ?), bool] */;
  %252 = cast(%251, dtype="float32") /* ty=Tensor[(7, 8, ?), float32] */;
  %253 = cast(meta[relay.Constant][13] /* ty=Tensor[(1694), float64] */, dtype="float64") /* ty=Tensor[(1694), float64] */;
  %254 = reshape(%253, newshape=[1694]) /* ty=Tensor[(1694), float64] */;
  %255 = @func_5341(%254) /* ty=(Tensor[(7, 8, 1), float32], Tensor[(11, 14, 11), float64], float64, Tensor[(1694), float64]) */;
  %256 = %255.2;
  %257 = cast(%256, dtype="uint64") /* ty=uint64 */;
  %258 = cast(meta[relay.Constant][13] /* ty=Tensor[(1694), float64] */, dtype="uint64") /* ty=Tensor[(1694), uint64] */;
  %259 = atan(%252) /* ty=Tensor[(7, 8, ?), float32] */;
  %260 = add(%257, %258) /* ty=Tensor[(1694), uint64] */;
  (%259, %260)
}

def @func_4300() -> Tensor[(7, 8, 1), float32] {
  @func_4298() /* ty=Tensor[(7, 8, 1), float32] */
}

def @func_4328(%var_4326: Tensor[(840), float64]) -> (Tensor[(7, 8, 1), float32], Tensor[(15, 14, 4), float64], Tensor[(840), float64]) {
  @func_4325(%var_4326) /* ty=(Tensor[(7, 8, 1), float32], Tensor[(15, 14, 4), float64], Tensor[(840), float64]) */
}

def @func_5543() -> Tensor[(7, 8, 1), float32] {
  %261 = fn () -> Tensor[(7, 8, 1), float32] {
    @func_4298() /* ty=Tensor[(7, 8, 1), float32] */
  };
  %261() /* ty=Tensor[(7, 8, 1), float32] */
}

def @func_8514() -> Tensor[(7, 8, 1), float32] {
  @func_8512() /* ty=Tensor[(7, 8, 1), float32] */
}

def @func_4706(%var_4674: Tensor[(2, 420), float64], %var_4681: Tensor[(1664), uint64], %var_4686: Tensor[(2112), float32]) -> (Tensor[(7, 8, 1), float32], Tensor[(16, 12, 11), float32], Tensor[(15, 14, 4), float64], Tensor[(2, 420), float64], Tensor[(2112), float32], Tensor[(1664), uint64], Tensor[(2112), int8]) {
  %262 = @func_4126() /* ty=(Tensor[(7, 8, 1), float32],) */;
  %263 = cast(meta[relay.Constant][14] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %264 = cast(meta[relay.Constant][14] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %265 = reshape(%263, newshape=[16, 12, 11]) /* ty=Tensor[(16, 12, 11), float32] */;
  %266 = reshape(%264, newshape=[16, 12, 11]) /* ty=Tensor[(16, 12, 11), float32] */;
  %267 = @func_199(%265, %266) /* ty=(Tensor[(16, 12, 11), float32],) */;
  %268 = cast(%var_4674, dtype="float64") /* ty=Tensor[(2, 420), float64] */;
  %269 = reshape(%268, newshape=[15, 14, 4]) /* ty=Tensor[(15, 14, 4), float64] */;
  %270 = @func_1695(%269) /* ty=(Tensor[(15, 14, 4), float64],) */;
  %271 = cast(%var_4681, dtype="uint64") /* ty=Tensor[(1664), uint64] */;
  %272 = cast(%var_4681, dtype="uint64") /* ty=Tensor[(1664), uint64] */;
  %273 = reshape(%271, newshape=[16, 8, 13]) /* ty=Tensor[(16, 8, 13), uint64] */;
  %274 = reshape(%272, newshape=[16, 8, 13]) /* ty=Tensor[(16, 8, 13), uint64] */;
  %275 = @func_3146(%273, %274) /* ty=(Tensor[(16, 8, 13), uint64], Tensor[(3, 5, 16), float32], Tensor[(2112), float32]) */;
  %276 = cast(meta[relay.Constant][14] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %277 = atan(%276) /* ty=Tensor[(2112), float32] */;
  %278 = cast(%var_4686, dtype="float64") /* ty=Tensor[(2112), float64] */;
  %279 = shape_of(%277, dtype="int32") /* ty=Tensor[(1), int32] */;
  %280 = cast(%277, dtype="float64") /* ty=Tensor[(2112), float64] */;
  %281 = dyn.reshape(%278, %279, newshape=[]) /* ty=Tensor[(?), float64] */;
  %282 = power(%280, %281) /* ty=Tensor[(2112), float64] */;
  %283 = cast(%277, dtype="int8") /* ty=Tensor[(2112), int8] */;
  %284 = shape_of(%282, dtype="int32") /* ty=Tensor[(1), int32] */;
  %285 = cast(%282, dtype="int8") /* ty=Tensor[(2112), int8] */;
  %286 = dyn.reshape(%283, %284, newshape=[]) /* ty=Tensor[(?), int8] */;
  %287 = %262.0;
  %288 = %267.0;
  %289 = %270.0;
  %290 = %275.2;
  %291 = bitwise_or(%285, %286) /* ty=Tensor[(2112), int8] */;
  (%287, %288, %289, %var_4674, %290, %var_4681, %291)
}

def @func_4831() -> (Tensor[(7, 8, 1), float32], Tensor[(16, 12, 11), float32], Tensor[(44, 48), float32]) {
  %300 = fn () -> (Tensor[(7, 8, 1), float32], Tensor[(16, 12, 11), float32], Tensor[(44, 48), float32]) {
    %292 = @func_4126() /* ty=(Tensor[(7, 8, 1), float32],) */;
    %293 = cast(meta[relay.Constant][15] /* ty=Tensor[(44, 48), float32] */, dtype="float32") /* ty=Tensor[(44, 48), float32] */;
    %294 = cast(meta[relay.Constant][15] /* ty=Tensor[(44, 48), float32] */, dtype="float32") /* ty=Tensor[(44, 48), float32] */;
    %295 = reshape(%293, newshape=[16, 12, 11]) /* ty=Tensor[(16, 12, 11), float32] */;
    %296 = reshape(%294, newshape=[16, 12, 11]) /* ty=Tensor[(16, 12, 11), float32] */;
    %297 = @func_199(%295, %296) /* ty=(Tensor[(16, 12, 11), float32],) */;
    %298 = %292.0;
    %299 = %297.0;
    (%298, %299, meta[relay.Constant][15] /* ty=Tensor[(44, 48), float32] */)
  };
  %300() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(16, 12, 11), float32], Tensor[(44, 48), float32]) */
}

def @func_8703() -> (Tensor[(7, 8, 2), bool], Tensor[(16, 12, 11), float32], Tensor[(7, 8, 1), float32], Tensor[(616), bool]) {
  %311 = fn () -> (Tensor[(7, 8, 2), bool], Tensor[(16, 12, 11), float32], Tensor[(7, 8, 1), float32], Tensor[(616), bool]) {
    %301 = @func_4183() /* ty=(Tensor[(7, 8, 1), float32],) */;
    %302 = %301.0;
    %303 = cast(%302, dtype="bool") /* ty=Tensor[(7, 8, 1), bool] */;
    %304 = cast(meta[relay.Constant][16] /* ty=Tensor[(7, 8, 2), float32] */, dtype="bool") /* ty=Tensor[(7, 8, 2), bool] */;
    %305 = @func_6056() /* ty=(Tensor[(16, 12, 11), float32],) */;
    %306 = @func_8277() /* ty=(Tensor[(616), bool], Tensor[(7, 8, ?), bool]) */;
    %307 = less_equal(%303, %304) /* ty=Tensor[(7, 8, 2), bool] */;
    %308 = %305.0;
    %309 = @func_4298() /* ty=Tensor[(7, 8, 1), float32] */;
    %310 = %306.0;
    (%307, %308, %309, %310)
  };
  %311() /* ty=(Tensor[(7, 8, 2), bool], Tensor[(16, 12, 11), float32], Tensor[(7, 8, 1), float32], Tensor[(616), bool]) */
}

def @func_727(%var_626: Tensor[(10, 9, 8), float32]) -> (Tensor[(5, 16, 10), int16], Tensor[(10, 9, 8), float32], Tensor[(2112), uint8], Tensor[(2112), float32], Tensor[(2112), bool]) {
  %312 = cast(meta[relay.Constant][17] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %313 = reshape(%312, newshape=[2112]) /* ty=Tensor[(2112), float32] */;
  %314 = @func_409(%313) /* ty=(Tensor[(5, 16, 10), int16], Tensor[(16, 12, 11), float32], Tensor[(2112), float32]) */;
  %315 = cast(%var_626, dtype="float32") /* ty=Tensor[(10, 9, 8), float32] */;
  %316 = sqrt(%315) /* ty=Tensor[(10, 9, 8), float32] */;
  %317 = cast(%316, dtype="float32") /* ty=Tensor[(10, 9, 8), float32] */;
  %318 = cast(meta[relay.Constant][17] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %319 = reshape(%318, newshape=[2112]) /* ty=Tensor[(2112), float32] */;
  %320 = @func_409(%319) /* ty=(Tensor[(5, 16, 10), int16], Tensor[(16, 12, 11), float32], Tensor[(2112), float32]) */;
  %321 = %320.1;
  %322 = cast(%321, dtype="bool") /* ty=Tensor[(16, 12, 11), bool] */;
  %323 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(2112), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %324 = cast(meta[relay.Constant][17] /* ty=Tensor[(2112), float32] */, dtype="bool") /* ty=Tensor[(2112), bool] */;
  %325 = dyn.reshape(%322, %323, newshape=[]) /* ty=Tensor[(?), bool] */;
  %326 = not_equal(%324, %325) /* ty=Tensor[(2112), bool] */;
  %327 = cast(%326, dtype="uint8") /* ty=Tensor[(2112), uint8] */;
  %328 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(2112), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %329 = cast(meta[relay.Constant][17] /* ty=Tensor[(2112), float32] */, dtype="uint8") /* ty=Tensor[(2112), uint8] */;
  %330 = dyn.reshape(%327, %328, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %331 = cast(%326, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %332 = reshape(%331, newshape=[2112]) /* ty=Tensor[(2112), float32] */;
  %333 = @func_409(%332) /* ty=(Tensor[(5, 16, 10), int16], Tensor[(16, 12, 11), float32], Tensor[(2112), float32]) */;
  %334 = cast(%321, dtype="float32") /* ty=Tensor[(16, 12, 11), float32] */;
  %335 = cast(meta[relay.Constant][17] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %336 = reshape(%334, newshape=[16, 12, 11]) /* ty=Tensor[(16, 12, 11), float32] */;
  %337 = reshape(%335, newshape=[16, 12, 11]) /* ty=Tensor[(16, 12, 11), float32] */;
  %338 = @func_199(%336, %337) /* ty=(Tensor[(16, 12, 11), float32],) */;
  %339 = %338.0;
  %340 = cast(%339, dtype="bool") /* ty=Tensor[(16, 12, 11), bool] */;
  %341 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(2112), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %342 = cast(meta[relay.Constant][17] /* ty=Tensor[(2112), float32] */, dtype="bool") /* ty=Tensor[(2112), bool] */;
  %343 = dyn.reshape(%340, %341, newshape=[]) /* ty=Tensor[(?), bool] */;
  %344 = %314.0;
  %345 = cosh(%317) /* ty=Tensor[(10, 9, 8), float32] */;
  %346 = left_shift(%329, %330) /* ty=Tensor[(2112), uint8] */;
  %347 = %333.2;
  %348 = logical_and(%342, %343) /* ty=Tensor[(2112), bool] */;
  (%344, %345, %346, %347, %348)
}

def @func_6137(%var_6136: Tensor[(132, 16), float32]) -> (Tensor[(7, 8, ?), float64], Tensor[(5, 16, 10), int16], Tensor[(132, 16), float32]) {
  %357 = fn (%var_6126: Tensor[(132, 16), float32]) -> (Tensor[(7, 8, ?), float64], Tensor[(5, 16, 10), int16], Tensor[(132, 16), float32]) {
    %349 = @func_6010() /* ty=(Tensor[(7, 8, ?), bool], Tensor[(7, 8, 1), float32]) */;
    %350 = %349.0;
    %351 = cast(%350, dtype="float64") /* ty=Tensor[(7, 8, ?), float64] */;
    %352 = cast(%var_6126, dtype="float32") /* ty=Tensor[(132, 16), float32] */;
    %353 = reshape(%352, newshape=[2112]) /* ty=Tensor[(2112), float32] */;
    %354 = @func_409(%353) /* ty=(Tensor[(5, 16, 10), int16], Tensor[(16, 12, 11), float32], Tensor[(2112), float32]) */;
    %355 = log(%351) /* ty=Tensor[(7, 8, ?), float64] */;
    %356 = %354.0;
    (%355, %356, %var_6126)
  };
  %357(%var_6136) /* ty=(Tensor[(7, 8, ?), float64], Tensor[(5, 16, 10), int16], Tensor[(132, 16), float32]) */
}

def @func_4752() -> (Tensor[(7, 8, 1), float32],) {
  @func_4750() /* ty=(Tensor[(7, 8, 1), float32],) */
}

def @func_6484(%var_6475: Tensor[(12, 2, 5), uint32], %var_6476: Tensor[(12, 2, 5), uint32]) -> (Tensor[(12, 2, 5), uint32],) {
  %358 = cast(%var_6476, dtype="uint32") /* ty=Tensor[(12, 2, 5), uint32] */;
  %359 = shape_of(%var_6475, dtype="int32") /* ty=Tensor[(3), int32] */;
  %360 = cast(%var_6475, dtype="uint32") /* ty=Tensor[(12, 2, 5), uint32] */;
  %361 = dyn.reshape(%358, %359, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %362 = bitwise_or(%360, %361) /* ty=Tensor[(12, 2, 5), uint32] */;
  (%362,)
}

def @func_10809(%var_10771: Tensor[(48), uint16]) -> (Tensor[(7, 8, 1), float64], Tensor[(7, 8, ?), bool], Tensor[(48), uint16], Tensor[(16, 12, 11), bool], Tensor[(7, 8, 1), float32], Tensor[(7, 8, 1), float32], Tensor[(840), float64], Tensor[(1664), uint64]) {
  %363 = @func_10024() /* ty=(Tensor[(7, 8, 1), float64],) */;
  %364 = cast(%var_10771, dtype="uint16") /* ty=Tensor[(48), uint16] */;
  %365 = cast(%var_10771, dtype="uint16") /* ty=Tensor[(48), uint16] */;
  %366 = reshape(%364, newshape=[6, 2, 4]) /* ty=Tensor[(6, 2, 4), uint16] */;
  %367 = reshape(%365, newshape=[6, 2, 4]) /* ty=Tensor[(6, 2, 4), uint16] */;
  %368 = @func_9616(%366, %367) /* ty=(Tensor[(6, 2, 4), bool], Tensor[(6, 2, 4), float32], Tensor[(7, 8, ?), bool]) */;
  %369 = @func_9156() /* ty=(Tensor[(7, 8, ?), bool], Tensor[(16, 12, 11), bool], Tensor[(11, 14, 11), float64], Tensor[(1694), float64]) */;
  %370 = @func_5099() /* ty=(Tensor[(7, 8, 1), float32],) */;
  %371 = cast(meta[relay.Constant][18] /* ty=Tensor[(840), float64] */, dtype="float64") /* ty=Tensor[(840), float64] */;
  %372 = cast(meta[relay.Constant][19] /* ty=Tensor[(1664), uint64] */, dtype="uint64") /* ty=Tensor[(1664), uint64] */;
  %373 = %369.1;
  %374 = cast(%373, dtype="float32") /* ty=Tensor[(16, 12, 11), float32] */;
  %375 = reshape(%371, newshape=[2, 420]) /* ty=Tensor[(2, 420), float64] */;
  %376 = reshape(%372, newshape=[1664]) /* ty=Tensor[(1664), uint64] */;
  %377 = reshape(%374, newshape=[2112]) /* ty=Tensor[(2112), float32] */;
  %378 = @func_4706(%375, %376, %377) /* ty=(Tensor[(7, 8, 1), float32], Tensor[(16, 12, 11), float32], Tensor[(15, 14, 4), float64], Tensor[(2, 420), float64], Tensor[(2112), float32], Tensor[(1664), uint64], Tensor[(2112), int8]) */;
  %379 = %363.0;
  %380 = %368.2;
  %381 = %370.0;
  %382 = %378.0;
  (%379, %380, %var_10771, %373, %381, %382, meta[relay.Constant][18] /* ty=Tensor[(840), float64] */, meta[relay.Constant][19] /* ty=Tensor[(1664), uint64] */)
}

def @func_7614() -> Tensor[(16, 12, 11), float32] {
  %383 = @func_7036() /* ty=Tensor[(16, 12, 11), float32] */;
  %384 = cast(%383, dtype="float32") /* ty=Tensor[(16, 12, 11), float32] */;
  sigmoid(%384) /* ty=Tensor[(16, 12, 11), float32] */
}

def @func_8448() -> Tensor[(15, 14, 4), float64] {
  %385 = @func_4428() /* ty=(Tensor[(15, 14, 4), float64],) */;
  %385.0
}

def @func_10902() -> (Tensor[(7, 8, ?), bool], Tensor[(7, 8, 1), float64]) {
  %386 = @func_10377() /* ty=Tensor[(7, 8, ?), int64] */;
  %387 = @func_9156() /* ty=(Tensor[(7, 8, ?), bool], Tensor[(16, 12, 11), bool], Tensor[(11, 14, 11), float64], Tensor[(1694), float64]) */;
  %388 = %387.0;
  %389 = cast(%388, dtype="bool") /* ty=Tensor[(7, 8, ?), bool] */;
  %390 = shape_of(%386, dtype="int32") /* ty=Tensor[(3), int32] */;
  %391 = cast(%386, dtype="bool") /* ty=Tensor[(7, 8, ?), bool] */;
  %392 = dyn.reshape(%389, %390, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %393 = @func_4975() /* ty=(Tensor[(7, 8, 1), float64], Tensor[(7, 8, 1), float64]) */;
  %394 = not_equal(%391, %392) /* ty=Tensor[(7, 8, ?), bool] */;
  %395 = %393.0;
  (%394, %395)
}

def @func_6837() -> (Tensor[(7, 8, 1), float64],) {
  %396 = @func_4975() /* ty=(Tensor[(7, 8, 1), float64], Tensor[(7, 8, 1), float64]) */;
  %397 = %396.1;
  (%397,)
}

def @func_4750() -> (Tensor[(7, 8, 1), float32],) {
  %398 = @func_4183() /* ty=(Tensor[(7, 8, 1), float32],) */;
  %399 = %398.0;
  (%399,)
}

def @func_7568(%var_7561: Tensor[(2112), float32]) -> (Tensor[(7, 8, 1), float64], Tensor[(2112), float32], Tensor[(2112), float32]) {
  %400 = @func_4975() /* ty=(Tensor[(7, 8, 1), float64], Tensor[(7, 8, 1), float64]) */;
  %401 = cast(%var_7561, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %402 = reshape(%401, newshape=[2112]) /* ty=Tensor[(2112), float32] */;
  %403 = @func_1150(%402) /* ty=(Tensor[(3, 5, 16), float64], Tensor[(3, 5, 16), float32], Tensor[(16, 12, 11), float32], Tensor[(2112), float32]) */;
  %404 = %400.0;
  %405 = %403.3;
  (%404, %405, %var_7561)
}

def @func_4298() -> Tensor[(7, 8, 1), float32] {
  %406 = @func_4126() /* ty=(Tensor[(7, 8, 1), float32],) */;
  %406.0
}

def @func_6497() -> Tensor[(7, 8, 1), float32] {
  @func_6495() /* ty=Tensor[(7, 8, 1), float32] */
}

def @func_11065() -> (Tensor[(616), float32],) {
  @func_11063() /* ty=(Tensor[(616), float32],) */
}

def @func_8853() -> Tensor[(1, 840), float64] {
  @func_8851() /* ty=Tensor[(1, 840), float64] */
}

def @func_9189() -> (Tensor[(7, 8, ?), uint16],) {
  %408 = fn () -> (Tensor[(7, 8, ?), uint16],) {
    %407 = @func_7723() /* ty=Tensor[(7, 8, ?), uint16] */;
    (%407,)
  };
  %408() /* ty=(Tensor[(7, 8, ?), uint16],) */
}

def @func_4183() -> (Tensor[(7, 8, 1), float32],) {
  %409 = @func_4157() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(15, 14, 4), float64], Tensor[(1, 840), float64], Tensor[(7, 8, 1), float32]) */;
  %410 = %409.3;
  (%410,)
}

def @func_7383() -> (Tensor[(1, 840), float64], Tensor[(7, 8, 1), float32]) {
  %411 = @func_4157() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(15, 14, 4), float64], Tensor[(1, 840), float64], Tensor[(7, 8, 1), float32]) */;
  %412 = %411.2;
  %413 = @func_6495() /* ty=Tensor[(7, 8, 1), float32] */;
  (%412, %413)
}

def @func_9999(%var_9997: Tensor[(16, 12, 11), float32]) -> (Tensor[(16, 12, 11), uint8], Tensor[(15, 14, 4), float64], Tensor[(7, 8, 1), float64]) {
  @func_9996(%var_9997) /* ty=(Tensor[(16, 12, 11), uint8], Tensor[(15, 14, 4), float64], Tensor[(7, 8, 1), float64]) */
}

def @func_9453(%var_9380: float64, %var_9381: Tensor[(1694), float64], %var_9428: Tensor[(1694), float64]) -> (Tensor[(15, 14, 4), float64], Tensor[(11, 14, 11), float64], float64, Tensor[(2112), uint8], Tensor[(720), float32], Tensor[(16, 12, 11), float32], Tensor[(15, 14, 4), float64], Tensor[(15, 14, 4), float64], Tensor[(7, 8, 1), float32], Tensor[(1694), int32], Tensor[(7, 8, 1), float64], Tensor[(1694), float32]) {
  %414 = @func_4428() /* ty=(Tensor[(15, 14, 4), float64],) */;
  %415 = cast(%var_9380, dtype="float64") /* ty=float64 */;
  %416 = cast(%var_9381, dtype="float64") /* ty=Tensor[(1694), float64] */;
  %417 = reshape(%415, newshape=[]) /* ty=float64 */;
  %418 = reshape(%416, newshape=[11, 14, 11]) /* ty=Tensor[(11, 14, 11), float64] */;
  %419 = cast(meta[relay.Constant][20] /* ty=Tensor[(720), float32] */, dtype="float32") /* ty=Tensor[(720), float32] */;
  %420 = reshape(%419, newshape=[10, 9, 8]) /* ty=Tensor[(10, 9, 8), float32] */;
  %421 = @func_727(%420) /* ty=(Tensor[(5, 16, 10), int16], Tensor[(10, 9, 8), float32], Tensor[(2112), uint8], Tensor[(2112), float32], Tensor[(2112), bool]) */;
  %422 = @func_6056() /* ty=(Tensor[(16, 12, 11), float32],) */;
  %423 = @func_7235() /* ty=(Tensor[(15, 14, 4), float64],) */;
  %424 = @func_8921() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(7, 8, 1), float32]) */;
  %425 = cast(%var_9381, dtype="float32") /* ty=Tensor[(1694), float32] */;
  %426 = rsqrt(%425) /* ty=Tensor[(1694), float32] */;
  %427 = cast(%426, dtype="float64") /* ty=Tensor[(1694), float64] */;
  %428 = exp(%427) /* ty=Tensor[(1694), float64] */;
  %429 = cast(%var_9428, dtype="bool") /* ty=Tensor[(1694), bool] */;
  %430 = shape_of(%428, dtype="int32") /* ty=Tensor[(1), int32] */;
  %431 = cast(%428, dtype="bool") /* ty=Tensor[(1694), bool] */;
  %432 = dyn.reshape(%429, %430, newshape=[]) /* ty=Tensor[(?), bool] */;
  %433 = not_equal(%431, %432) /* ty=Tensor[(1694), bool] */;
  %434 = cast(%426, dtype="float32") /* ty=Tensor[(1694), float32] */;
  %435 = log2(%434) /* ty=Tensor[(1694), float32] */;
  %436 = cast(%435, dtype="int32") /* ty=Tensor[(1694), int32] */;
  %437 = shape_of(%433, dtype="int32") /* ty=Tensor[(1), int32] */;
  %438 = cast(%433, dtype="int32") /* ty=Tensor[(1694), int32] */;
  %439 = dyn.reshape(%436, %437, newshape=[]) /* ty=Tensor[(?), int32] */;
  %440 = @func_4975() /* ty=(Tensor[(7, 8, 1), float64], Tensor[(7, 8, 1), float64]) */;
  %441 = cast(%433, dtype="float32") /* ty=Tensor[(1694), float32] */;
  %442 = shape_of(%426, dtype="int32") /* ty=Tensor[(1), int32] */;
  %443 = cast(%426, dtype="float32") /* ty=Tensor[(1694), float32] */;
  %444 = dyn.reshape(%441, %442, newshape=[]) /* ty=Tensor[(?), float32] */;
  %445 = %414.0;
  %446 = @func_5039(%417, %418) /* ty=Tensor[(11, 14, 11), float64] */;
  %447 = %421.2;
  %448 = %422.0;
  %449 = @func_8448() /* ty=Tensor[(15, 14, 4), float64] */;
  %450 = %423.0;
  %451 = %424.0;
  %452 = bitwise_xor(%438, %439) /* ty=Tensor[(1694), int32] */;
  %453 = %440.0;
  %454 = subtract(%443, %444) /* ty=Tensor[(1694), float32] */;
  (%445, %446, %var_9380, %447, meta[relay.Constant][20] /* ty=Tensor[(720), float32] */, %448, %449, %450, %451, %452, %453, %454)
}

def @func_7680(%var_7677: Tensor[(7560), float64], %var_7678: float32, %var_7679: Tensor[(90), float32]) -> (Tensor[(7, 8, 1), float32], Tensor[(7560), float64], Tensor[(16, 12, 11), float32], Tensor[(7, 8, 1), float32], float32, Tensor[(90), float32], Tensor[(672), float32]) {
  %471 = fn (%var_7655: Tensor[(7560), float64], %var_7670: float32, %var_7671: Tensor[(90), float32]) -> (Tensor[(7, 8, 1), float32], Tensor[(7560), float64], Tensor[(16, 12, 11), float32], Tensor[(7, 8, 1), float32], float32, Tensor[(90), float32], Tensor[(672), float32]) {
    %455 = @func_7383() /* ty=(Tensor[(1, 840), float64], Tensor[(7, 8, 1), float32]) */;
    %456 = cast(%var_7655, dtype="float64") /* ty=Tensor[(7560), float64] */;
    %457 = reshape(%456, newshape=[9, 840]) /* ty=Tensor[(9, 840), float64] */;
    %458 = @func_7291(%457) /* ty=(Tensor[(16, 12, 11), float32], Tensor[(9, 840), uint16], Tensor[(15, 14, 4), float64]) */;
    %459 = %458.0;
    %460 = cast(%459, dtype="float32") /* ty=Tensor[(16, 12, 11), float32] */;
    %461 = cast(%var_7670, dtype="float32") /* ty=float32 */;
    %462 = cast(%var_7671, dtype="float32") /* ty=Tensor[(90), float32] */;
    %463 = cast(meta[relay.Constant][21] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
    %464 = reshape(%461, newshape=[]) /* ty=float32 */;
    %465 = reshape(%462, newshape=[90]) /* ty=Tensor[(90), float32] */;
    %466 = reshape(%463, newshape=[168, 4]) /* ty=Tensor[(168, 4), float32] */;
    %467 = @func_5275(%464, %465, %466) /* ty=(Tensor[(7, 8, 1), float32], Tensor[(90), float32], float32, Tensor[(90), float32], Tensor[(7, 8, 12), bool], Tensor[(168, 4), float32], Tensor[(7, 8, 1), float32], Tensor[(7, 8, 1), float32], Tensor[(132, 16), float32]) */;
    %468 = %455.1;
    %469 = erf(%460) /* ty=Tensor[(16, 12, 11), float32] */;
    %470 = %467.0;
    (%468, %var_7655, %469, %470, %var_7670, %var_7671, meta[relay.Constant][21] /* ty=Tensor[(672), float32] */)
  };
  %471(%var_7677, %var_7678, %var_7679) /* ty=(Tensor[(7, 8, 1), float32], Tensor[(7560), float64], Tensor[(16, 12, 11), float32], Tensor[(7, 8, 1), float32], float32, Tensor[(90), float32], Tensor[(672), float32]) */
}

def @func_8362() -> Tensor[(7, 8, ?), bool] {
  %473 = fn () -> Tensor[(7, 8, ?), bool] {
    %472 = @func_6010() /* ty=(Tensor[(7, 8, ?), bool], Tensor[(7, 8, 1), float32]) */;
    %472.0
  };
  %473() /* ty=Tensor[(7, 8, ?), bool] */
}

def @func_6641() -> Tensor[(7, 8, ?), float32] {
  %474 = @func_5433() /* ty=(Tensor[(7, 8, ?), float32], Tensor[(1694), uint64]) */;
  %474.0
}

def @func_10248() -> (Tensor[(7, 8, ?), int8], Tensor[(7, 8, 11), int8], Tensor[(616), float32]) {
  @func_10246() /* ty=(Tensor[(7, 8, ?), int8], Tensor[(7, 8, 11), int8], Tensor[(616), float32]) */
}

def @func_1698(%var_1696: Tensor[(15, 14, 4), float64]) -> (Tensor[(15, 14, 4), float64],) {
  @func_1695(%var_1696) /* ty=(Tensor[(15, 14, 4), float64],) */
}

def @func_4185() -> (Tensor[(7, 8, 1), float32],) {
  @func_4183() /* ty=(Tensor[(7, 8, 1), float32],) */
}

def @func_7237() -> (Tensor[(15, 14, 4), float64],) {
  @func_7235() /* ty=(Tensor[(15, 14, 4), float64],) */
}

def @func_7235() -> (Tensor[(15, 14, 4), float64],) {
  %475 = @func_4428() /* ty=(Tensor[(15, 14, 4), float64],) */;
  %476 = %475.0;
  (%476,)
}

def @func_4582(%var_4558: Tensor[(2, 336), float32]) -> (Tensor[(15, 14, 4), uint32], Tensor[(15, 14, 4), float64], Tensor[(7, 8, 12), bool], Tensor[(2, 336), float32], Tensor[(7, 8, 1), float32]) {
  %477 = @func_4157() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(15, 14, 4), float64], Tensor[(1, 840), float64], Tensor[(7, 8, 1), float32]) */;
  %478 = %477.1;
  %479 = cast(meta[relay.Constant][22] /* ty=Tensor[(15, 14, 4), float64] */, dtype="uint32") /* ty=Tensor[(15, 14, 4), uint32] */;
  %480 = shape_of(%478, dtype="int32") /* ty=Tensor[(3), int32] */;
  %481 = cast(%478, dtype="uint32") /* ty=Tensor[(15, 14, 4), uint32] */;
  %482 = dyn.reshape(%479, %480, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %483 = cast(%478, dtype="float64") /* ty=Tensor[(15, 14, 4), float64] */;
  %484 = cast(%var_4558, dtype="float32") /* ty=Tensor[(2, 336), float32] */;
  %485 = reshape(%484, newshape=[7, 8, 12]) /* ty=Tensor[(7, 8, 12), float32] */;
  %486 = @func_4477() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(7, 8, 1), float32], Tensor[(15, 14, 4), float64]) */;
  %487 = logical_xor(%481, %482) /* ty=Tensor[(15, 14, 4), uint32] */;
  %488 = log10(%483) /* ty=Tensor[(15, 14, 4), float64] */;
  %489 = @func_4252(%485) /* ty=Tensor[(7, 8, 12), bool] */;
  %490 = %486.1;
  (%487, %488, %489, %var_4558, %490)
}

def @func_6439(%var_6434: Tensor[(7, 8, 2), float32]) -> (Tensor[(7, 8, 2), int64],) {
  %491 = @func_5099() /* ty=(Tensor[(7, 8, 1), float32],) */;
  %492 = %491.0;
  %493 = cast(%492, dtype="int64") /* ty=Tensor[(7, 8, 1), int64] */;
  %494 = cast(%var_6434, dtype="int64") /* ty=Tensor[(7, 8, 2), int64] */;
  %495 = right_shift(%493, %494) /* ty=Tensor[(7, 8, 2), int64] */;
  (%495,)
}

def @func_2846(%var_2834: Tensor[(7, 3, 15), float32]) -> (Tensor[(7, 3, 15), float32], Tensor[(7, 3, 15), float64]) {
  %496 = cast(%var_2834, dtype="float32") /* ty=Tensor[(7, 3, 15), float32] */;
  %497 = cast(%var_2834, dtype="float64") /* ty=Tensor[(7, 3, 15), float64] */;
  %498 = sin(%496) /* ty=Tensor[(7, 3, 15), float32] */;
  %499 = asinh(%497) /* ty=Tensor[(7, 3, 15), float64] */;
  (%498, %499)
}

def @func_7926(%var_7925: Tensor[(7, 8, 4), float32]) -> (Tensor[(7, 8, 4), float32],) {
  %504 = fn (%var_7916: Tensor[(7, 8, 4), float32]) -> (Tensor[(7, 8, 4), float32],) {
    %500 = @func_4298() /* ty=Tensor[(7, 8, 1), float32] */;
    %501 = cast(%500, dtype="float32") /* ty=Tensor[(7, 8, 1), float32] */;
    %502 = cast(%var_7916, dtype="float32") /* ty=Tensor[(7, 8, 4), float32] */;
    %503 = floor_mod(%501, %502) /* ty=Tensor[(7, 8, 4), float32] */;
    (%503,)
  };
  %504(%var_7925) /* ty=(Tensor[(7, 8, 4), float32],) */
}

def @func_4444(%var_4436: Tensor[(11, 11, 6), float32]) -> (Tensor[(11, 11, 6), float32],) {
  %505 = cast(%var_4436, dtype="float32") /* ty=Tensor[(11, 11, 6), float32] */;
  %506 = log(%505) /* ty=Tensor[(11, 11, 6), float32] */;
  (%506,)
}

def @func_10681() -> (Tensor[(7, 8, 1), float32], Tensor[(2112), float64], Tensor[(2112), float32]) {
  %507 = @func_9639() /* ty=(Tensor[(7, 8, 1), float32],) */;
  %508 = cast(meta[relay.Constant][23] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %509 = reshape(%508, newshape=[2112]) /* ty=Tensor[(2112), float32] */;
  %510 = @func_6282(%509) /* ty=(Tensor[(1, 840), float64], Tensor[(132, 16), float32], Tensor[(2112), float64]) */;
  %511 = %507.0;
  %512 = %510.2;
  (%511, %512, meta[relay.Constant][23] /* ty=Tensor[(2112), float32] */)
}

def @func_10330() -> (Tensor[(7, 8, 1), float32],) {
  %514 = fn () -> (Tensor[(7, 8, 1), float32],) {
    %513 = @func_8512() /* ty=Tensor[(7, 8, 1), float32] */;
    (%513,)
  };
  %514() /* ty=(Tensor[(7, 8, 1), float32],) */
}

def @func_11063() -> (Tensor[(616), float32],) {
  %515 = @func_7106() /* ty=(Tensor[(15, 14, 4), float32], Tensor[(7, 8, 11), int8], Tensor[(616), float32]) */;
  %516 = %515.2;
  (%516,)
}

def @func_5344(%var_5342: Tensor[(1694), float64]) -> (Tensor[(7, 8, 1), float32], Tensor[(11, 14, 11), float64], float64, Tensor[(1694), float64]) {
  @func_5341(%var_5342) /* ty=(Tensor[(7, 8, 1), float32], Tensor[(11, 14, 11), float64], float64, Tensor[(1694), float64]) */
}

def @func_7083(%var_7081: Tensor[(6, 140), float64]) -> (Tensor[(7, 8, 1), float32], Tensor[(15, 14, 4), float64], Tensor[(6, 140), float64], Tensor[(7, 8, 1), float32], Tensor[(7, 3, 15), float32], Tensor[(315), float32]) {
  @func_7080(%var_7081) /* ty=(Tensor[(7, 8, 1), float32], Tensor[(15, 14, 4), float64], Tensor[(6, 140), float64], Tensor[(7, 8, 1), float32], Tensor[(7, 3, 15), float32], Tensor[(315), float32]) */
}

def @func_1150(%var_1144: Tensor[(2112), float32]) -> (Tensor[(3, 5, 16), float64], Tensor[(3, 5, 16), float32], Tensor[(16, 12, 11), float32], Tensor[(2112), float32]) {
  %517 = cast(meta[relay.Constant][24] /* ty=Tensor[(3, 5, 16), float64] */, dtype="float64") /* ty=Tensor[(3, 5, 16), float64] */;
  %518 = cast(meta[relay.Constant][24] /* ty=Tensor[(3, 5, 16), float64] */, dtype="float32") /* ty=Tensor[(3, 5, 16), float32] */;
  %519 = cast(%var_1144, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %520 = cast(%var_1144, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %521 = reshape(%519, newshape=[16, 12, 11]) /* ty=Tensor[(16, 12, 11), float32] */;
  %522 = reshape(%520, newshape=[16, 12, 11]) /* ty=Tensor[(16, 12, 11), float32] */;
  %523 = @func_199(%521, %522) /* ty=(Tensor[(16, 12, 11), float32],) */;
  %524 = sinh(%517) /* ty=Tensor[(3, 5, 16), float64] */;
  %525 = acos(%518) /* ty=Tensor[(3, 5, 16), float32] */;
  %526 = %523.0;
  (%524, %525, %526, %var_1144)
}

def @func_10812(%var_10810: Tensor[(48), uint16]) -> (Tensor[(7, 8, 1), float64], Tensor[(7, 8, ?), bool], Tensor[(48), uint16], Tensor[(16, 12, 11), bool], Tensor[(7, 8, 1), float32], Tensor[(7, 8, 1), float32], Tensor[(840), float64], Tensor[(1664), uint64]) {
  @func_10809(%var_10810) /* ty=(Tensor[(7, 8, 1), float64], Tensor[(7, 8, ?), bool], Tensor[(48), uint16], Tensor[(16, 12, 11), bool], Tensor[(7, 8, 1), float32], Tensor[(7, 8, 1), float32], Tensor[(840), float64], Tensor[(1664), uint64]) */
}

def @func_10972(%var_10970: float64) -> (Tensor[(1, 840), float64], Tensor[(840), float64], float64) {
  @func_10969(%var_10970) /* ty=(Tensor[(1, 840), float64], Tensor[(840), float64], float64) */
}

def @func_11132() -> Tensor[(7, 8, ?), float32] {
  @func_11130() /* ty=Tensor[(7, 8, ?), float32] */
}

def @func_1153(%var_1151: Tensor[(2112), float32]) -> (Tensor[(3, 5, 16), float64], Tensor[(3, 5, 16), float32], Tensor[(16, 12, 11), float32], Tensor[(2112), float32]) {
  @func_1150(%var_1151) /* ty=(Tensor[(3, 5, 16), float64], Tensor[(3, 5, 16), float32], Tensor[(16, 12, 11), float32], Tensor[(2112), float32]) */
}

def @func_8410() -> Tensor[(7, 8, 1), float32] {
  %528 = fn () -> Tensor[(7, 8, 1), float32] {
    %527 = @func_4750() /* ty=(Tensor[(7, 8, 1), float32],) */;
    %527.0
  };
  %528() /* ty=Tensor[(7, 8, 1), float32] */
}

def @func_6285(%var_6283: Tensor[(2112), float32]) -> (Tensor[(1, 840), float64], Tensor[(132, 16), float32], Tensor[(2112), float64]) {
  @func_6282(%var_6283) /* ty=(Tensor[(1, 840), float64], Tensor[(132, 16), float32], Tensor[(2112), float64]) */
}

def @func_7795(%var_7794: Tensor[(2112), float32]) -> (Tensor[(7, 8, 1), float32], Tensor[(1, 840), float64], Tensor[(7, 8, 2112), float32]) {
  %539 = fn (%var_7752: Tensor[(2112), float32]) -> (Tensor[(7, 8, 1), float32], Tensor[(1, 840), float64], Tensor[(7, 8, 2112), float32]) {
    %529 = @func_4183() /* ty=(Tensor[(7, 8, 1), float32],) */;
    %530 = cast(%var_7752, dtype="float32") /* ty=Tensor[(2112), float32] */;
    %531 = reshape(%530, newshape=[2112]) /* ty=Tensor[(2112), float32] */;
    %532 = @func_6282(%531) /* ty=(Tensor[(1, 840), float64], Tensor[(132, 16), float32], Tensor[(2112), float64]) */;
    %533 = @func_5542() /* ty=Tensor[(7, 8, 1), float32] */;
    %534 = cast(%var_7752, dtype="float32") /* ty=Tensor[(2112), float32] */;
    %535 = cast(%533, dtype="float32") /* ty=Tensor[(7, 8, 1), float32] */;
    %536 = %529.0;
    %537 = %532.0;
    %538 = minimum(%534, %535) /* ty=Tensor[(7, 8, 2112), float32] */;
    (%536, %537, %538)
  };
  %539(%var_7794) /* ty=(Tensor[(7, 8, 1), float32], Tensor[(1, 840), float64], Tensor[(7, 8, 2112), float32]) */
}

def @func_6442(%var_6440: Tensor[(7, 8, 2), float32]) -> (Tensor[(7, 8, 2), int64],) {
  @func_6439(%var_6440) /* ty=(Tensor[(7, 8, 2), int64],) */
}

def @func_2343(%var_2311: Tensor[(528, 4), float32], %var_2323: float32, %var_2324: Tensor[(90), float32]) -> (Tensor[(16, 12, 11), float32], Tensor[(528, 4), float32], Tensor[(16, 12, 11), float32], float32, Tensor[(90), float32], Tensor[(7, 8, 9), float64]) {
  %540 = cast(%var_2311, dtype="float32") /* ty=Tensor[(528, 4), float32] */;
  %541 = cast(%var_2311, dtype="float32") /* ty=Tensor[(528, 4), float32] */;
  %542 = reshape(%540, newshape=[16, 12, 11]) /* ty=Tensor[(16, 12, 11), float32] */;
  %543 = reshape(%541, newshape=[16, 12, 11]) /* ty=Tensor[(16, 12, 11), float32] */;
  %544 = @func_199(%542, %543) /* ty=(Tensor[(16, 12, 11), float32],) */;
  %545 = cast(%var_2323, dtype="float32") /* ty=float32 */;
  %546 = cast(%var_2324, dtype="float32") /* ty=Tensor[(90), float32] */;
  %547 = reshape(%545, newshape=[]) /* ty=float32 */;
  %548 = reshape(%546, newshape=[6, 15, 1]) /* ty=Tensor[(6, 15, 1), float32] */;
  %549 = @func_453(%547, %548) /* ty=(Tensor[(6, 15, 1), float32], Tensor[(16, 12, 11), float32], Tensor[(2112), float32]) */;
  %550 = cast(meta[relay.Constant][25] /* ty=Tensor[(7, 8, 9), float64] */, dtype="float64") /* ty=Tensor[(7, 8, 9), float64] */;
  %551 = exp(%550) /* ty=Tensor[(7, 8, 9), float64] */;
  %552 = cast(%551, dtype="float64") /* ty=Tensor[(7, 8, 9), float64] */;
  %553 = %544.0;
  %554 = %549.1;
  %555 = sinh(%552) /* ty=Tensor[(7, 8, 9), float64] */;
  (%553, %var_2311, %554, %var_2323, %var_2324, %555)
}

def @func_10136() -> Tensor[(7, 8, 1), float32] {
  @func_10134() /* ty=Tensor[(7, 8, 1), float32] */
}

def @func_8782() -> (Tensor[(7, 8, 1), float32],) {
  %556 = @func_8759() /* ty=(Tensor[(7, 8, 1), float64],) */;
  %557 = %556.0;
  %558 = cast(%557, dtype="float32") /* ty=Tensor[(7, 8, 1), float32] */;
  %559 = acosh(%558) /* ty=Tensor[(7, 8, 1), float32] */;
  (%559,)
}

def @func_7010(%var_7009: Tensor[(840), float64]) -> (Tensor[(16, 12, 11), float32], Tensor[(840), float64], Tensor[(840), float64]) {
  %566 = fn (%var_7005: Tensor[(840), float64]) -> (Tensor[(16, 12, 11), float32], Tensor[(840), float64], Tensor[(840), float64]) {
    %560 = @func_4830() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(16, 12, 11), float32], Tensor[(44, 48), float32]) */;
    %561 = cast(%var_7005, dtype="float64") /* ty=Tensor[(840), float64] */;
    %562 = reshape(%561, newshape=[840]) /* ty=Tensor[(840), float64] */;
    %563 = @func_6920(%562) /* ty=(Tensor[(7, 8, 1), float32], Tensor[(7, 8, ?), float64], Tensor[(12, 2, 5), uint32], Tensor[(120), uint32], Tensor[(16, 12, 11), float32], Tensor[(132, 16), float64], Tensor[(7, 8, 1), float32], Tensor[(840), float64]) */;
    %564 = %560.1;
    %565 = %563.7;
    (%564, %565, %var_7005)
  };
  %566(%var_7009) /* ty=(Tensor[(16, 12, 11), float32], Tensor[(840), float64], Tensor[(840), float64]) */
}

def @func_6735() -> (Tensor[(16, 12, 11), float32], Tensor[(5, 16, 10), int16], Tensor[(7, 8, 1), float32], Tensor[(720), float32], Tensor[(15, 14, 4), float64]) {
  %579 = fn () -> (Tensor[(16, 12, 11), float32], Tensor[(5, 16, 10), int16], Tensor[(7, 8, 1), float32], Tensor[(720), float32], Tensor[(15, 14, 4), float64]) {
    %567 = @func_6056() /* ty=(Tensor[(16, 12, 11), float32],) */;
    %568 = %567.0;
    %569 = cast(%568, dtype="float32") /* ty=Tensor[(16, 12, 11), float32] */;
    %570 = reshape(%569, newshape=[2112]) /* ty=Tensor[(2112), float32] */;
    %571 = @func_409(%570) /* ty=(Tensor[(5, 16, 10), int16], Tensor[(16, 12, 11), float32], Tensor[(2112), float32]) */;
    %572 = cast(meta[relay.Constant][26] /* ty=Tensor[(720), float32] */, dtype="float32") /* ty=Tensor[(720), float32] */;
    %573 = reshape(%572, newshape=[720, 1]) /* ty=Tensor[(720, 1), float32] */;
    %574 = @func_4898(%573) /* ty=(Tensor[(7, 8, 1), float32], Tensor[(2112), uint8], Tensor[(720, 1), float32], Tensor[(13, 3, 12), uint16], uint16, Tensor[(468), uint16]) */;
    %575 = @func_4157() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(15, 14, 4), float64], Tensor[(1, 840), float64], Tensor[(7, 8, 1), float32]) */;
    %576 = %571.0;
    %577 = %574.0;
    %578 = %575.1;
    (%568, %576, %577, meta[relay.Constant][26] /* ty=Tensor[(720), float32] */, %578)
  };
  %579() /* ty=(Tensor[(16, 12, 11), float32], Tensor[(5, 16, 10), int16], Tensor[(7, 8, 1), float32], Tensor[(720), float32], Tensor[(15, 14, 4), float64]) */
}

def @func_9996(%var_9925: Tensor[(16, 12, 11), float32]) -> (Tensor[(16, 12, 11), uint8], Tensor[(15, 14, 4), float64], Tensor[(7, 8, 1), float64]) {
  %580 = @func_6056() /* ty=(Tensor[(16, 12, 11), float32],) */;
  %581 = %580.0;
  %582 = cast(%var_9925, dtype="bool") /* ty=Tensor[(16, 12, 11), bool] */;
  %583 = shape_of(%581, dtype="int32") /* ty=Tensor[(3), int32] */;
  %584 = cast(%581, dtype="bool") /* ty=Tensor[(16, 12, 11), bool] */;
  %585 = dyn.reshape(%582, %583, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %586 = less(%584, %585) /* ty=Tensor[(16, 12, 11), bool] */;
  %587 = cast(%581, dtype="uint8") /* ty=Tensor[(16, 12, 11), uint8] */;
  %588 = shape_of(%586, dtype="int32") /* ty=Tensor[(3), int32] */;
  %589 = cast(%586, dtype="uint8") /* ty=Tensor[(16, 12, 11), uint8] */;
  %590 = dyn.reshape(%587, %588, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %591 = cast(%581, dtype="float32") /* ty=Tensor[(16, 12, 11), float32] */;
  %592 = reshape(%591, newshape=[2112]) /* ty=Tensor[(2112), float32] */;
  %593 = @func_7568(%592) /* ty=(Tensor[(7, 8, 1), float64], Tensor[(2112), float32], Tensor[(2112), float32]) */;
  %594 = logical_xor(%589, %590) /* ty=Tensor[(16, 12, 11), uint8] */;
  %595 = @func_5899() /* ty=Tensor[(15, 14, 4), float64] */;
  %596 = %593.0;
  (%594, %595, %596)
}

def @func_8922() -> (Tensor[(7, 8, 1), float32], Tensor[(7, 8, 1), float32]) {
  %601 = fn () -> (Tensor[(7, 8, 1), float32], Tensor[(7, 8, 1), float32]) {
    %597 = @func_4477() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(7, 8, 1), float32], Tensor[(15, 14, 4), float64]) */;
    %598 = @func_8782() /* ty=(Tensor[(7, 8, 1), float32],) */;
    %599 = %597.0;
    %600 = %598.0;
    (%599, %600)
  };
  %601() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(7, 8, 1), float32]) */
}

def @func_4977() -> (Tensor[(7, 8, 1), float64], Tensor[(7, 8, 1), float64]) {
  @func_4975() /* ty=(Tensor[(7, 8, 1), float64], Tensor[(7, 8, 1), float64]) */
}

def @func_10378() -> Tensor[(7, 8, ?), int64] {
  %603 = fn () -> Tensor[(7, 8, ?), int64] {
    %602 = @func_7426() /* ty=(Tensor[(7, 8, ?), int64],) */;
    %602.0
  };
  %603() /* ty=Tensor[(7, 8, ?), int64] */
}

def @func_2849(%var_2847: Tensor[(7, 3, 15), float32]) -> (Tensor[(7, 3, 15), float32], Tensor[(7, 3, 15), float64]) {
  @func_2846(%var_2847) /* ty=(Tensor[(7, 3, 15), float32], Tensor[(7, 3, 15), float64]) */
}

def @func_6882() -> (Tensor[(7, 8, 1), float32],) {
  %604 = @func_5099() /* ty=(Tensor[(7, 8, 1), float32],) */;
  %605 = %604.0;
  %606 = cast(%605, dtype="float32") /* ty=Tensor[(7, 8, 1), float32] */;
  %607 = log10(%606) /* ty=Tensor[(7, 8, 1), float32] */;
  %608 = cast(%607, dtype="float32") /* ty=Tensor[(7, 8, 1), float32] */;
  %609 = exp(%608) /* ty=Tensor[(7, 8, 1), float32] */;
  (%609,)
}

def @func_10288() -> Tensor[(7, 8, 1), float32] {
  %610 = @func_8180() /* ty=(Tensor[(7, 8, 1), float32],) */;
  %610.0
}

def @func_9750(%var_9731: float64) -> (Tensor[(7, 8, 1), float32], Tensor[(7, 8, 1), float64], float64, Tensor[(1694), float64], Tensor[(15, 14, 4), float64], Tensor[(840), float64]) {
  %611 = @func_8180() /* ty=(Tensor[(7, 8, 1), float32],) */;
  %612 = cast(%var_9731, dtype="float64") /* ty=float64 */;
  %613 = cast(meta[relay.Constant][27] /* ty=Tensor[(1694), float64] */, dtype="float64") /* ty=Tensor[(1694), float64] */;
  %614 = cast(meta[relay.Constant][27] /* ty=Tensor[(1694), float64] */, dtype="float64") /* ty=Tensor[(1694), float64] */;
  %615 = reshape(%612, newshape=[]) /* ty=float64 */;
  %616 = reshape(%613, newshape=[1694]) /* ty=Tensor[(1694), float64] */;
  %617 = reshape(%614, newshape=[1694]) /* ty=Tensor[(1694), float64] */;
  %618 = @func_9453(%615, %616, %617) /* ty=(Tensor[(15, 14, 4), float64], Tensor[(11, 14, 11), float64], float64, Tensor[(2112), uint8], Tensor[(720), float32], Tensor[(16, 12, 11), float32], Tensor[(15, 14, 4), float64], Tensor[(15, 14, 4), float64], Tensor[(7, 8, 1), float32], Tensor[(1694), int32], Tensor[(7, 8, 1), float64], Tensor[(1694), float32]) */;
  %619 = cast(meta[relay.Constant][28] /* ty=Tensor[(840), float64] */, dtype="float64") /* ty=Tensor[(840), float64] */;
  %620 = reshape(%619, newshape=[15, 14, 4]) /* ty=Tensor[(15, 14, 4), float64] */;
  %621 = @func_1695(%620) /* ty=(Tensor[(15, 14, 4), float64],) */;
  %622 = %611.0;
  %623 = %618.10;
  %624 = %621.0;
  (%622, %623, %var_9731, meta[relay.Constant][27] /* ty=Tensor[(1694), float64] */, %624, meta[relay.Constant][28] /* ty=Tensor[(840), float64] */)
}

def @func_7152(%var_7151: Tensor[(52, 32), uint64]) -> (Tensor[(15, 14, 4), float64], Tensor[(16, 8, 13), uint64], Tensor[(52, 32), uint64], Tensor[(7, 8, 1), float32], Tensor[(16, 12, 11), float32]) {
  %637 = fn (%var_7115: Tensor[(52, 32), uint64]) -> (Tensor[(15, 14, 4), float64], Tensor[(16, 8, 13), uint64], Tensor[(52, 32), uint64], Tensor[(7, 8, 1), float32], Tensor[(16, 12, 11), float32]) {
    %625 = @func_4477() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(7, 8, 1), float32], Tensor[(15, 14, 4), float64]) */;
    %626 = cast(%var_7115, dtype="uint64") /* ty=Tensor[(52, 32), uint64] */;
    %627 = cast(%var_7115, dtype="uint64") /* ty=Tensor[(52, 32), uint64] */;
    %628 = reshape(%626, newshape=[16, 8, 13]) /* ty=Tensor[(16, 8, 13), uint64] */;
    %629 = reshape(%627, newshape=[16, 8, 13]) /* ty=Tensor[(16, 8, 13), uint64] */;
    %630 = @func_3146(%628, %629) /* ty=(Tensor[(16, 8, 13), uint64], Tensor[(3, 5, 16), float32], Tensor[(2112), float32]) */;
    %631 = @func_6882() /* ty=(Tensor[(7, 8, 1), float32],) */;
    %632 = @func_6056() /* ty=(Tensor[(16, 12, 11), float32],) */;
    %633 = %625.2;
    %634 = %630.0;
    %635 = %631.0;
    %636 = %632.0;
    (%633, %634, %var_7115, %635, %636)
  };
  %637(%var_7151) /* ty=(Tensor[(15, 14, 4), float64], Tensor[(16, 8, 13), uint64], Tensor[(52, 32), uint64], Tensor[(7, 8, 1), float32], Tensor[(16, 12, 11), float32]) */
}

def @func_7224() -> (Tensor[(7, 8, ?), bool], Tensor[(7, 8, 1), float32], Tensor[(2112), float64], Tensor[(2112), float32]) {
  %646 = fn () -> (Tensor[(7, 8, ?), bool], Tensor[(7, 8, 1), float32], Tensor[(2112), float64], Tensor[(2112), float32]) {
    %638 = @func_6010() /* ty=(Tensor[(7, 8, ?), bool], Tensor[(7, 8, 1), float32]) */;
    %639 = @func_5465() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(7, 8, 1), float32]) */;
    %640 = cast(meta[relay.Constant][29] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
    %641 = reshape(%640, newshape=[2112]) /* ty=Tensor[(2112), float32] */;
    %642 = @func_6282(%641) /* ty=(Tensor[(1, 840), float64], Tensor[(132, 16), float32], Tensor[(2112), float64]) */;
    %643 = %638.0;
    %644 = %639.0;
    %645 = %642.2;
    (%643, %644, %645, meta[relay.Constant][29] /* ty=Tensor[(2112), float32] */)
  };
  %646() /* ty=(Tensor[(7, 8, ?), bool], Tensor[(7, 8, 1), float32], Tensor[(2112), float64], Tensor[(2112), float32]) */
}

def @func_10209() -> (Tensor[(16, 12, 11), float32], Tensor[(7, 8, 1664), bool]) {
  @func_10207() /* ty=(Tensor[(16, 12, 11), float32], Tensor[(7, 8, 1664), bool]) */
}

def @main() -> (Tensor[(7, 8, ?), int64], Tensor[(840), float64], Tensor[(7, 8, ?), uint16], Tensor[(7, 8, ?), int8]) {
  %647 = @func_7427() /* ty=(Tensor[(7, 8, ?), int64],) */;
  %648 = @func_7813() /* ty=(Tensor[(7, 8, 1), float64], Tensor[(7, 8, 1), float32]) */;
  %649 = %648.1;
  %650 = cast(meta[relay.Constant][30] /* ty=Tensor[(840), float64] */, dtype="float64") /* ty=Tensor[(840), float64] */;
  %651 = @func_7426() /* ty=(Tensor[(7, 8, ?), int64],) */;
  %652 = %651.0;
  %653 = cast(%652, dtype="float32") /* ty=Tensor[(7, 8, ?), float32] */;
  %654 = reshape(%650, newshape=[840]) /* ty=Tensor[(840), float64] */;
  %655 = reshape(%653, newshape=[7, 8, 1]) /* ty=Tensor[(7, 8, 1), float32] */;
  %656 = @func_5795(%654, %655) /* ty=(Tensor[(15, 14, 4), float64], Tensor[(840), float64], Tensor[(7, 8, ?), float64]) */;
  %657 = %656.2;
  %658 = cast(%657, dtype="int8") /* ty=Tensor[(7, 8, ?), int8] */;
  %659 = shape_of(%649, dtype="int32") /* ty=Tensor[(3), int32] */;
  %660 = cast(%649, dtype="int8") /* ty=Tensor[(7, 8, 1), int8] */;
  %661 = dyn.reshape(%658, %659, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %662 = %647.0;
  %663 = @func_7723() /* ty=Tensor[(7, 8, ?), uint16] */;
  %664 = right_shift(%660, %661) /* ty=Tensor[(7, 8, ?), int8] */;
  (%662, meta[relay.Constant][30] /* ty=Tensor[(840), float64] */, %663, %664)
}

def @func_9812() -> (Tensor[(15, 14, 4), float32], Tensor[(7, 8, 1), float32], Tensor[(616), float32]) {
  %665 = @func_7106() /* ty=(Tensor[(15, 14, 4), float32], Tensor[(7, 8, 11), int8], Tensor[(616), float32]) */;
  %666 = @func_5465() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(7, 8, 1), float32]) */;
  %667 = @func_7106() /* ty=(Tensor[(15, 14, 4), float32], Tensor[(7, 8, 11), int8], Tensor[(616), float32]) */;
  %668 = %665.0;
  %669 = %666.0;
  %670 = %667.2;
  (%668, %669, %670)
}

def @func_10704(%var_10692: Tensor[(9, 9, 5), int32], %var_10693: Tensor[(9, 9, 5), int32], %var_10701: Tensor[(168, 4), float32]) -> (Tensor[(9, 9, 5), int32], Tensor[(7, 8, 12), bool], Tensor[(168, 4), float32]) {
  %671 = cast(%var_10693, dtype="int32") /* ty=Tensor[(9, 9, 5), int32] */;
  %672 = shape_of(%var_10692, dtype="int32") /* ty=Tensor[(3), int32] */;
  %673 = cast(%var_10692, dtype="int32") /* ty=Tensor[(9, 9, 5), int32] */;
  %674 = dyn.reshape(%671, %672, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %675 = cast(%var_10701, dtype="float32") /* ty=Tensor[(168, 4), float32] */;
  %676 = reshape(%675, newshape=[7, 8, 12]) /* ty=Tensor[(7, 8, 12), float32] */;
  %677 = bitwise_and(%673, %674) /* ty=Tensor[(9, 9, 5), int32] */;
  %678 = @func_4252(%676) /* ty=Tensor[(7, 8, 12), bool] */;
  (%677, %678, %var_10701)
}

def @func_4478() -> (Tensor[(7, 8, 1), float32], Tensor[(7, 8, 1), float32], Tensor[(15, 14, 4), float64]) {
  %686 = fn () -> (Tensor[(7, 8, 1), float32], Tensor[(7, 8, 1), float32], Tensor[(15, 14, 4), float64]) {
    %679 = @func_4298() /* ty=Tensor[(7, 8, 1), float32] */;
    %680 = cast(%679, dtype="float32") /* ty=Tensor[(7, 8, 1), float32] */;
    %681 = cast(%679, dtype="float32") /* ty=Tensor[(7, 8, 1), float32] */;
    %682 = @func_4157() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(15, 14, 4), float64], Tensor[(1, 840), float64], Tensor[(7, 8, 1), float32]) */;
    %683 = asin(%680) /* ty=Tensor[(7, 8, 1), float32] */;
    %684 = cosh(%681) /* ty=Tensor[(7, 8, 1), float32] */;
    %685 = %682.1;
    (%683, %684, %685)
  };
  %686() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(7, 8, 1), float32], Tensor[(15, 14, 4), float64]) */
}

def @func_5590(%var_5589: Tensor[(7, 8, 11), float32]) -> (Tensor[(7, 8, 1), float32], Tensor[(7, 8, 11), int8]) {
  %694 = fn (%var_5580: Tensor[(7, 8, 11), float32]) -> (Tensor[(7, 8, 1), float32], Tensor[(7, 8, 11), int8]) {
    %687 = @func_4126() /* ty=(Tensor[(7, 8, 1), float32],) */;
    %688 = %687.0;
    %689 = cast(%688, dtype="float32") /* ty=Tensor[(7, 8, 1), float32] */;
    %690 = cast(%688, dtype="int8") /* ty=Tensor[(7, 8, 1), int8] */;
    %691 = cast(%var_5580, dtype="int8") /* ty=Tensor[(7, 8, 11), int8] */;
    %692 = sqrt(%689) /* ty=Tensor[(7, 8, 1), float32] */;
    %693 = left_shift(%690, %691) /* ty=Tensor[(7, 8, 11), int8] */;
    (%692, %693)
  };
  %694(%var_5589) /* ty=(Tensor[(7, 8, 1), float32], Tensor[(7, 8, 11), int8]) */
}

def @func_7639() -> (Tensor[(7, 8, 1), float32],) {
  %695 = @func_5465() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(7, 8, 1), float32]) */;
  %696 = %695.1;
  (%696,)
}

def @func_10207() -> (Tensor[(16, 12, 11), float32], Tensor[(7, 8, 1664), bool]) {
  %697 = cast(meta[relay.Constant][31] /* ty=Tensor[(1664), uint64] */, dtype="uint64") /* ty=Tensor[(1664), uint64] */;
  %698 = reshape(%697, newshape=[52, 32]) /* ty=Tensor[(52, 32), uint64] */;
  %699 = @func_7150(%698) /* ty=(Tensor[(15, 14, 4), float64], Tensor[(16, 8, 13), uint64], Tensor[(52, 32), uint64], Tensor[(7, 8, 1), float32], Tensor[(16, 12, 11), float32]) */;
  %700 = @func_8702() /* ty=(Tensor[(7, 8, 2), bool], Tensor[(16, 12, 11), float32], Tensor[(7, 8, 1), float32], Tensor[(616), bool]) */;
  %701 = %700.2;
  %702 = cast(%701, dtype="bool") /* ty=Tensor[(7, 8, 1), bool] */;
  %703 = cast(meta[relay.Constant][31] /* ty=Tensor[(1664), uint64] */, dtype="bool") /* ty=Tensor[(1664), bool] */;
  %704 = %699.4;
  %705 = greater_equal(%702, %703) /* ty=Tensor[(7, 8, 1664), bool] */;
  (%704, %705)
}

def @func_7989() -> (Tensor[(7, 8, 1), float32], Tensor[(1, 840), float64], Tensor[(2112, 1), float32]) {
  %712 = fn () -> (Tensor[(7, 8, 1), float32], Tensor[(1, 840), float64], Tensor[(2112, 1), float32]) {
    %706 = @func_7548() /* ty=(Tensor[(7, 8, 1), float32],) */;
    %707 = cast(meta[relay.Constant][32] /* ty=Tensor[(2112, 1), float32] */, dtype="float32") /* ty=Tensor[(2112, 1), float32] */;
    %708 = reshape(%707, newshape=[2112]) /* ty=Tensor[(2112), float32] */;
    %709 = @func_7793(%708) /* ty=(Tensor[(7, 8, 1), float32], Tensor[(1, 840), float64], Tensor[(7, 8, 2112), float32]) */;
    %710 = %706.0;
    %711 = %709.1;
    (%710, %711, meta[relay.Constant][32] /* ty=Tensor[(2112, 1), float32] */)
  };
  %712() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(1, 840), float64], Tensor[(2112, 1), float32]) */
}

def @func_5795(%var_5793: Tensor[(840), float64], %var_5794: Tensor[(7, 8, 1), float32]) -> (Tensor[(15, 14, 4), float64], Tensor[(840), float64], Tensor[(7, 8, ?), float64]) {
  %723 = fn (%var_5770: Tensor[(840), float64], %var_5781: Tensor[(7, 8, 1), float32]) -> (Tensor[(15, 14, 4), float64], Tensor[(840), float64], Tensor[(7, 8, ?), float64]) {
    %713 = cast(%var_5770, dtype="float64") /* ty=Tensor[(840), float64] */;
    %714 = reshape(%713, newshape=[840]) /* ty=Tensor[(840), float64] */;
    %715 = @func_4325(%714) /* ty=(Tensor[(7, 8, 1), float32], Tensor[(15, 14, 4), float64], Tensor[(840), float64]) */;
    %716 = @func_5662() /* ty=Tensor[(7, 8, 1), float32] */;
    %717 = cast(%var_5781, dtype="float64") /* ty=Tensor[(7, 8, 1), float64] */;
    %718 = shape_of(%716, dtype="int32") /* ty=Tensor[(3), int32] */;
    %719 = cast(%716, dtype="float64") /* ty=Tensor[(7, 8, 1), float64] */;
    %720 = dyn.reshape(%717, %718, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %721 = %715.1;
    %722 = power(%719, %720) /* ty=Tensor[(7, 8, ?), float64] */;
    (%721, %var_5770, %722)
  };
  %723(%var_5793, %var_5794) /* ty=(Tensor[(15, 14, 4), float64], Tensor[(840), float64], Tensor[(7, 8, ?), float64]) */
}

def @func_7964() -> (Tensor[(5, 16, 10), int16],) {
  @func_7962() /* ty=(Tensor[(5, 16, 10), int16],) */
}

def @func_9157() -> (Tensor[(7, 8, ?), bool], Tensor[(16, 12, 11), bool], Tensor[(11, 14, 11), float64], Tensor[(1694), float64]) {
  %738 = fn () -> (Tensor[(7, 8, ?), bool], Tensor[(16, 12, 11), bool], Tensor[(11, 14, 11), float64], Tensor[(1694), float64]) {
    %724 = @func_6010() /* ty=(Tensor[(7, 8, ?), bool], Tensor[(7, 8, 1), float32]) */;
    %725 = @func_7614() /* ty=Tensor[(16, 12, 11), float32] */;
    %726 = %724.0;
    %727 = cast(%726, dtype="float32") /* ty=Tensor[(7, 8, ?), float32] */;
    %728 = reshape(%727, newshape=[7, 8, 1]) /* ty=Tensor[(7, 8, 1), float32] */;
    %729 = @func_5876(%728) /* ty=(Tensor[(7, 8, ?), bool], Tensor[(7, 8, 1), float32], int64, Tensor[(60), int64]) */;
    %730 = %729.2;
    %731 = cast(%725, dtype="bool") /* ty=Tensor[(16, 12, 11), bool] */;
    %732 = cast(%730, dtype="bool") /* ty=bool */;
    %733 = cast(meta[relay.Constant][33] /* ty=Tensor[(1694), float64] */, dtype="float64") /* ty=Tensor[(1694), float64] */;
    %734 = reshape(%733, newshape=[1694]) /* ty=Tensor[(1694), float64] */;
    %735 = @func_5341(%734) /* ty=(Tensor[(7, 8, 1), float32], Tensor[(11, 14, 11), float64], float64, Tensor[(1694), float64]) */;
    %736 = greater_equal(%731, %732) /* ty=Tensor[(16, 12, 11), bool] */;
    %737 = %735.1;
    (%726, %736, %737, meta[relay.Constant][33] /* ty=Tensor[(1694), float64] */)
  };
  %738() /* ty=(Tensor[(7, 8, ?), bool], Tensor[(16, 12, 11), bool], Tensor[(11, 14, 11), float64], Tensor[(1694), float64]) */
}

def @func_9328() -> (Tensor[(7, 8, 1), float32], Tensor[(7, 8, 3), float64], Tensor[(7, 8, 3), float32]) {
  %747 = fn () -> (Tensor[(7, 8, 1), float32], Tensor[(7, 8, 3), float64], Tensor[(7, 8, 3), float32]) {
    %739 = @func_7383() /* ty=(Tensor[(1, 840), float64], Tensor[(7, 8, 1), float32]) */;
    %740 = @func_6641() /* ty=Tensor[(7, 8, ?), float32] */;
    %741 = cast(%740, dtype="float64") /* ty=Tensor[(7, 8, ?), float64] */;
    %742 = cast(meta[relay.Constant][34] /* ty=Tensor[(7, 8, 3), float32] */, dtype="float64") /* ty=Tensor[(7, 8, 3), float64] */;
    %743 = cast(meta[relay.Constant][34] /* ty=Tensor[(7, 8, 3), float32] */, dtype="float32") /* ty=Tensor[(7, 8, 3), float32] */;
    %744 = %739.1;
    %745 = floor_divide(%741, %742) /* ty=Tensor[(7, 8, 3), float64] */;
    %746 = sinh(%743) /* ty=Tensor[(7, 8, 3), float32] */;
    (%744, %745, %746)
  };
  %747() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(7, 8, 3), float64], Tensor[(7, 8, 3), float32]) */
}

def @func_8851() -> Tensor[(1, 840), float64] {
  %748 = @func_4157() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(15, 14, 4), float64], Tensor[(1, 840), float64], Tensor[(7, 8, 1), float32]) */;
  %749 = %748.2;
  %750 = cast(%749, dtype="float64") /* ty=Tensor[(1, 840), float64] */;
  cos(%750) /* ty=Tensor[(1, 840), float64] */
}

def @func_8760() -> (Tensor[(7, 8, 1), float64],) {
  %753 = fn () -> (Tensor[(7, 8, 1), float64],) {
    %751 = @func_4975() /* ty=(Tensor[(7, 8, 1), float64], Tensor[(7, 8, 1), float64]) */;
    %752 = %751.1;
    (%752,)
  };
  %753() /* ty=(Tensor[(7, 8, 1), float64],) */
}

def @func_5208() -> Tensor[(7, 8, ?), bool] {
  %762 = fn () -> Tensor[(7, 8, ?), bool] {
    %754 = @func_4126() /* ty=(Tensor[(7, 8, 1), float32],) */;
    %755 = %754.0;
    %756 = cast(%755, dtype="float32") /* ty=Tensor[(7, 8, 1), float32] */;
    %757 = tan(%756) /* ty=Tensor[(7, 8, 1), float32] */;
    %758 = cast(%757, dtype="bool") /* ty=Tensor[(7, 8, 1), bool] */;
    %759 = shape_of(%755, dtype="int32") /* ty=Tensor[(3), int32] */;
    %760 = cast(%755, dtype="bool") /* ty=Tensor[(7, 8, 1), bool] */;
    %761 = dyn.reshape(%758, %759, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    less(%760, %761) /* ty=Tensor[(7, 8, ?), bool] */
  };
  %762() /* ty=Tensor[(7, 8, ?), bool] */
}

def @func_7616() -> Tensor[(16, 12, 11), float32] {
  @func_7614() /* ty=Tensor[(16, 12, 11), float32] */
}

def @func_5435() -> (Tensor[(7, 8, ?), float32], Tensor[(1694), uint64]) {
  @func_5433() /* ty=(Tensor[(7, 8, ?), float32], Tensor[(1694), uint64]) */
}

def @func_9192() -> Tensor[(15, 14, 4), float64] {
  %763 = @func_7594() /* ty=(Tensor[(15, 14, 4), float64],) */;
  %763.0
}

def @func_6631() -> (Tensor[(7, 8, ?), int8],) {
  %764 = @func_4183() /* ty=(Tensor[(7, 8, 1), float32],) */;
  %765 = %764.0;
  %766 = @func_4477() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(7, 8, 1), float32], Tensor[(15, 14, 4), float64]) */;
  %767 = %766.0;
  %768 = cast(%767, dtype="int8") /* ty=Tensor[(7, 8, 1), int8] */;
  %769 = shape_of(%765, dtype="int32") /* ty=Tensor[(3), int32] */;
  %770 = cast(%765, dtype="int8") /* ty=Tensor[(7, 8, 1), int8] */;
  %771 = dyn.reshape(%768, %769, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %772 = multiply(%770, %771) /* ty=Tensor[(7, 8, ?), int8] */;
  (%772,)
}

def @func_4158() -> (Tensor[(7, 8, 1), float32], Tensor[(15, 14, 4), float64], Tensor[(1, 840), float64], Tensor[(7, 8, 1), float32]) {
  %781 = fn () -> (Tensor[(7, 8, 1), float32], Tensor[(15, 14, 4), float64], Tensor[(1, 840), float64], Tensor[(7, 8, 1), float32]) {
    %773 = @func_4126() /* ty=(Tensor[(7, 8, 1), float32],) */;
    %774 = cast(meta[relay.Constant][35] /* ty=Tensor[(1, 840), float64] */, dtype="float64") /* ty=Tensor[(1, 840), float64] */;
    %775 = reshape(%774, newshape=[15, 14, 4]) /* ty=Tensor[(15, 14, 4), float64] */;
    %776 = @func_1695(%775) /* ty=(Tensor[(15, 14, 4), float64],) */;
    %777 = @func_4126() /* ty=(Tensor[(7, 8, 1), float32],) */;
    %778 = %773.0;
    %779 = %776.0;
    %780 = %777.0;
    (%778, %779, meta[relay.Constant][35] /* ty=Tensor[(1, 840), float64] */, %780)
  };
  %781() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(15, 14, 4), float64], Tensor[(1, 840), float64], Tensor[(7, 8, 1), float32]) */
}

def @func_6495() -> Tensor[(7, 8, 1), float32] {
  @func_4298() /* ty=Tensor[(7, 8, 1), float32] */
}

def @func_7248(%var_7246: Tensor[(8, 16, 1), int32], %var_7247: Tensor[(8, 16, 15), int32]) -> Tensor[(8, 16, 15), int32] {
  %784 = fn (%var_7238: Tensor[(8, 16, 1), int32], %var_7239: Tensor[(8, 16, 15), int32]) -> Tensor[(8, 16, 15), int32] {
    %782 = cast(%var_7238, dtype="int32") /* ty=Tensor[(8, 16, 1), int32] */;
    %783 = cast(%var_7239, dtype="int32") /* ty=Tensor[(8, 16, 15), int32] */;
    left_shift(%782, %783) /* ty=Tensor[(8, 16, 15), int32] */
  };
  %784(%var_7246, %var_7247) /* ty=Tensor[(8, 16, 15), int32] */
}

def @func_10683() -> (Tensor[(7, 8, 1), float32], Tensor[(2112), float64], Tensor[(2112), float32]) {
  @func_10681() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(2112), float64], Tensor[(2112), float32]) */
}

def @func_6633() -> (Tensor[(7, 8, ?), int8],) {
  @func_6631() /* ty=(Tensor[(7, 8, ?), int8],) */
}

def @func_4711(%var_4708: Tensor[(2, 420), float64], %var_4709: Tensor[(1664), uint64], %var_4710: Tensor[(2112), float32]) -> (Tensor[(7, 8, 1), float32], Tensor[(16, 12, 11), float32], Tensor[(15, 14, 4), float64], Tensor[(2, 420), float64], Tensor[(2112), float32], Tensor[(1664), uint64], Tensor[(2112), int8]) {
  @func_4706(%var_4708, %var_4709, %var_4710) /* ty=(Tensor[(7, 8, 1), float32], Tensor[(16, 12, 11), float32], Tensor[(15, 14, 4), float64], Tensor[(2, 420), float64], Tensor[(2112), float32], Tensor[(1664), uint64], Tensor[(2112), int8]) */
}

def @func_453(%var_430: float32, %var_431: Tensor[(6, 15, 1), float32]) -> (Tensor[(6, 15, 1), float32], Tensor[(16, 12, 11), float32], Tensor[(2112), float32]) {
  %785 = cast(%var_430, dtype="float32") /* ty=float32 */;
  %786 = cast(%var_431, dtype="float32") /* ty=Tensor[(6, 15, 1), float32] */;
  %787 = cast(meta[relay.Constant][36] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %788 = cast(meta[relay.Constant][36] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %789 = reshape(%787, newshape=[16, 12, 11]) /* ty=Tensor[(16, 12, 11), float32] */;
  %790 = reshape(%788, newshape=[16, 12, 11]) /* ty=Tensor[(16, 12, 11), float32] */;
  %791 = @func_199(%789, %790) /* ty=(Tensor[(16, 12, 11), float32],) */;
  %792 = mod(%785, %786) /* ty=Tensor[(6, 15, 1), float32] */;
  %793 = %791.0;
  (%792, %793, meta[relay.Constant][36] /* ty=Tensor[(2112), float32] */)
}

def @func_6282(%var_6264: Tensor[(2112), float32]) -> (Tensor[(1, 840), float64], Tensor[(132, 16), float32], Tensor[(2112), float64]) {
  %794 = @func_4157() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(15, 14, 4), float64], Tensor[(1, 840), float64], Tensor[(7, 8, 1), float32]) */;
  %795 = cast(%var_6264, dtype="float32") /* ty=Tensor[(2112), float32] */;
  %796 = reshape(%795, newshape=[132, 16]) /* ty=Tensor[(132, 16), float32] */;
  %797 = @func_6135(%796) /* ty=(Tensor[(7, 8, ?), float64], Tensor[(5, 16, 10), int16], Tensor[(132, 16), float32]) */;
  %798 = cast(%var_6264, dtype="float64") /* ty=Tensor[(2112), float64] */;
  %799 = %794.2;
  %800 = %797.2;
  %801 = sinh(%798) /* ty=Tensor[(2112), float64] */;
  (%799, %800, %801)
}

def @func_6839() -> (Tensor[(7, 8, 1), float64],) {
  @func_6837() /* ty=(Tensor[(7, 8, 1), float64],) */
}

def @func_7293(%var_7292: Tensor[(9, 840), float64]) -> (Tensor[(16, 12, 11), float32], Tensor[(9, 840), uint16], Tensor[(15, 14, 4), float64]) {
  %812 = fn (%var_7269: Tensor[(9, 840), float64]) -> (Tensor[(16, 12, 11), float32], Tensor[(9, 840), uint16], Tensor[(15, 14, 4), float64]) {
    %802 = @func_4157() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(15, 14, 4), float64], Tensor[(1, 840), float64], Tensor[(7, 8, 1), float32]) */;
    %803 = %802.2;
    %804 = cast(%803, dtype="uint16") /* ty=Tensor[(1, 840), uint16] */;
    %805 = cast(%var_7269, dtype="uint16") /* ty=Tensor[(9, 840), uint16] */;
    %806 = cast(%803, dtype="float64") /* ty=Tensor[(1, 840), float64] */;
    %807 = reshape(%806, newshape=[15, 14, 4]) /* ty=Tensor[(15, 14, 4), float64] */;
    %808 = @func_1695(%807) /* ty=(Tensor[(15, 14, 4), float64],) */;
    %809 = @func_7036() /* ty=Tensor[(16, 12, 11), float32] */;
    %810 = minimum(%804, %805) /* ty=Tensor[(9, 840), uint16] */;
    %811 = %808.0;
    (%809, %810, %811)
  };
  %812(%var_7292) /* ty=(Tensor[(16, 12, 11), float32], Tensor[(9, 840), uint16], Tensor[(15, 14, 4), float64]) */
}

def @func_4325(%var_4322: Tensor[(840), float64]) -> (Tensor[(7, 8, 1), float32], Tensor[(15, 14, 4), float64], Tensor[(840), float64]) {
  %813 = cast(%var_4322, dtype="float64") /* ty=Tensor[(840), float64] */;
  %814 = reshape(%813, newshape=[15, 14, 4]) /* ty=Tensor[(15, 14, 4), float64] */;
  %815 = @func_1695(%814) /* ty=(Tensor[(15, 14, 4), float64],) */;
  %816 = @func_4298() /* ty=Tensor[(7, 8, 1), float32] */;
  %817 = %815.0;
  (%816, %817, %var_4322)
}

def @func_9641() -> (Tensor[(7, 8, 1), float32],) {
  @func_9639() /* ty=(Tensor[(7, 8, 1), float32],) */
}

def @func_10026() -> (Tensor[(7, 8, 1), float64],) {
  @func_10024() /* ty=(Tensor[(7, 8, 1), float64],) */
}

def @func_8145(%var_8143: Tensor[(9, 8, 10), float32], %var_8144: Tensor[(840), float64]) -> (Tensor[(15, 14, 4), float64], Tensor[(840), float64], Tensor[(13, 3, 12), uint16], uint16, Tensor[(468), uint16], Tensor[(9, 8, 10), bool]) {
  @func_8141(%var_8143, %var_8144) /* ty=(Tensor[(15, 14, 4), float64], Tensor[(840), float64], Tensor[(13, 3, 12), uint16], uint16, Tensor[(468), uint16], Tensor[(9, 8, 10), bool]) */
}

def @func_10117() -> (Tensor[(7, 8, ?), float32],) {
  %827 = fn () -> (Tensor[(7, 8, ?), float32],) {
    %818 = @func_9188() /* ty=(Tensor[(7, 8, ?), uint16],) */;
    %819 = %818.0;
    %820 = @func_5465() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(7, 8, 1), float32]) */;
    %821 = %820.1;
    %822 = cast(%821, dtype="float32") /* ty=Tensor[(7, 8, 1), float32] */;
    %823 = shape_of(%819, dtype="int32") /* ty=Tensor[(3), int32] */;
    %824 = cast(%819, dtype="float32") /* ty=Tensor[(7, 8, ?), float32] */;
    %825 = dyn.reshape(%822, %823, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %826 = floor_divide(%824, %825) /* ty=Tensor[(7, 8, ?), float32] */;
    (%826,)
  };
  %827() /* ty=(Tensor[(7, 8, ?), float32],) */
}

def @func_10290() -> Tensor[(7, 8, 1), float32] {
  @func_10288() /* ty=Tensor[(7, 8, 1), float32] */
}

def @func_4208(%var_4206: int64, %var_4207: Tensor[(1, 15, 4), int64]) -> (Tensor[(1, 15, 4), int64], Tensor[(1, 15, 4), uint16], Tensor[(7, 8, 1), float32]) {
  @func_4204(%var_4206, %var_4207) /* ty=(Tensor[(1, 15, 4), int64], Tensor[(1, 15, 4), uint16], Tensor[(7, 8, 1), float32]) */
}

def @func_9891() -> (Tensor[(7, 8, 1), float64], Tensor[(15, 14, 4), float64], Tensor[(7, 8, ?), float64], Tensor[(2112), float32], Tensor[(2112), float32], Tensor[(7, 8, 1), float32]) {
  %840 = fn () -> (Tensor[(7, 8, 1), float64], Tensor[(15, 14, 4), float64], Tensor[(7, 8, ?), float64], Tensor[(2112), float32], Tensor[(2112), float32], Tensor[(7, 8, 1), float32]) {
    %828 = @func_7812() /* ty=(Tensor[(7, 8, 1), float64], Tensor[(7, 8, 1), float32]) */;
    %829 = cast(meta[relay.Constant][37] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
    %830 = reshape(%829, newshape=[132, 16]) /* ty=Tensor[(132, 16), float32] */;
    %831 = @func_6135(%830) /* ty=(Tensor[(7, 8, ?), float64], Tensor[(5, 16, 10), int16], Tensor[(132, 16), float32]) */;
    %832 = cast(meta[relay.Constant][37] /* ty=Tensor[(2112), float32] */, dtype="float32") /* ty=Tensor[(2112), float32] */;
    %833 = reshape(%832, newshape=[2112]) /* ty=Tensor[(2112), float32] */;
    %834 = @func_7568(%833) /* ty=(Tensor[(7, 8, 1), float64], Tensor[(2112), float32], Tensor[(2112), float32]) */;
    %835 = %828.0;
    %836 = @func_9192() /* ty=Tensor[(15, 14, 4), float64] */;
    %837 = %831.0;
    %838 = %834.2;
    %839 = @func_5542() /* ty=Tensor[(7, 8, 1), float32] */;
    (%835, %836, %837, meta[relay.Constant][37] /* ty=Tensor[(2112), float32] */, %838, %839)
  };
  %840() /* ty=(Tensor[(7, 8, 1), float64], Tensor[(15, 14, 4), float64], Tensor[(7, 8, ?), float64], Tensor[(2112), float32], Tensor[(2112), float32], Tensor[(7, 8, 1), float32]) */
}

def @func_5662() -> Tensor[(7, 8, 1), float32] {
  @func_4298() /* ty=Tensor[(7, 8, 1), float32] */
}

def @func_10079(%var_10078: Tensor[(2, 840), float64]) -> (Tensor[(2, 840), float32], Tensor[(16, 12, 11), float32], Tensor[(2, 840), float32]) {
  %851 = fn (%var_10048: Tensor[(2, 840), float64]) -> (Tensor[(2, 840), float32], Tensor[(16, 12, 11), float32], Tensor[(2, 840), float32]) {
    %841 = @func_4157() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(15, 14, 4), float64], Tensor[(1, 840), float64], Tensor[(7, 8, 1), float32]) */;
    %842 = %841.2;
    %843 = cast(%842, dtype="float32") /* ty=Tensor[(1, 840), float32] */;
    %844 = cast(%var_10048, dtype="float32") /* ty=Tensor[(2, 840), float32] */;
    %845 = @func_6056() /* ty=(Tensor[(16, 12, 11), float32],) */;
    %846 = cast(%842, dtype="float32") /* ty=Tensor[(1, 840), float32] */;
    %847 = cast(%var_10048, dtype="float32") /* ty=Tensor[(2, 840), float32] */;
    %848 = divide(%843, %844) /* ty=Tensor[(2, 840), float32] */;
    %849 = %845.0;
    %850 = maximum(%846, %847) /* ty=Tensor[(2, 840), float32] */;
    (%848, %849, %850)
  };
  %851(%var_10078) /* ty=(Tensor[(2, 840), float32], Tensor[(16, 12, 11), float32], Tensor[(2, 840), float32]) */
}

def @func_7641() -> (Tensor[(7, 8, 1), float32],) {
  @func_7639() /* ty=(Tensor[(7, 8, 1), float32],) */
}

def @func_5664() -> Tensor[(7, 8, 1), float32] {
  @func_5662() /* ty=Tensor[(7, 8, 1), float32] */
}

def @func_9194() -> Tensor[(15, 14, 4), float64] {
  @func_9192() /* ty=Tensor[(15, 14, 4), float64] */
}

def @func_7427() -> (Tensor[(7, 8, ?), int64],) {
  %861 = fn () -> (Tensor[(7, 8, ?), int64],) {
    %852 = @func_4477() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(7, 8, 1), float32], Tensor[(15, 14, 4), float64]) */;
    %853 = %852.1;
    %854 = @func_6882() /* ty=(Tensor[(7, 8, 1), float32],) */;
    %855 = %854.0;
    %856 = cast(%855, dtype="int64") /* ty=Tensor[(7, 8, 1), int64] */;
    %857 = shape_of(%853, dtype="int32") /* ty=Tensor[(3), int32] */;
    %858 = cast(%853, dtype="int64") /* ty=Tensor[(7, 8, 1), int64] */;
    %859 = dyn.reshape(%856, %857, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %860 = bitwise_and(%858, %859) /* ty=Tensor[(7, 8, ?), int64] */;
    (%860,)
  };
  %861() /* ty=(Tensor[(7, 8, ?), int64],) */
}

def @func_8573() -> (Tensor[(15, 14, 4), float64], Tensor[(5, 16, 10), int16], Tensor[(720), float32], Tensor[(7, 8, 1), float32]) {
  %872 = fn () -> (Tensor[(15, 14, 4), float64], Tensor[(5, 16, 10), int16], Tensor[(720), float32], Tensor[(7, 8, 1), float32]) {
    %862 = @func_7235() /* ty=(Tensor[(15, 14, 4), float64],) */;
    %863 = cast(meta[relay.Constant][38] /* ty=Tensor[(720), float32] */, dtype="float32") /* ty=Tensor[(720), float32] */;
    %864 = reshape(%863, newshape=[10, 9, 8]) /* ty=Tensor[(10, 9, 8), float32] */;
    %865 = @func_727(%864) /* ty=(Tensor[(5, 16, 10), int16], Tensor[(10, 9, 8), float32], Tensor[(2112), uint8], Tensor[(2112), float32], Tensor[(2112), bool]) */;
    %866 = %862.0;
    %867 = cast(%866, dtype="float64") /* ty=Tensor[(15, 14, 4), float64] */;
    %868 = reshape(%867, newshape=[6, 140]) /* ty=Tensor[(6, 140), float64] */;
    %869 = @func_7080(%868) /* ty=(Tensor[(7, 8, 1), float32], Tensor[(15, 14, 4), float64], Tensor[(6, 140), float64], Tensor[(7, 8, 1), float32], Tensor[(7, 3, 15), float32], Tensor[(315), float32]) */;
    %870 = %865.0;
    %871 = %869.3;
    (%866, %870, meta[relay.Constant][38] /* ty=Tensor[(720), float32] */, %871)
  };
  %872() /* ty=(Tensor[(15, 14, 4), float64], Tensor[(5, 16, 10), int16], Tensor[(720), float32], Tensor[(7, 8, 1), float32]) */
}

def @func_10134() -> Tensor[(7, 8, 1), float32] {
  %873 = @func_4750() /* ty=(Tensor[(7, 8, 1), float32],) */;
  %873.0
}

def @func_6922(%var_6921: Tensor[(840), float64]) -> (Tensor[(7, 8, 1), float32], Tensor[(7, 8, ?), float64], Tensor[(12, 2, 5), uint32], Tensor[(120), uint32], Tensor[(16, 12, 11), float32], Tensor[(132, 16), float64], Tensor[(7, 8, 1), float32], Tensor[(840), float64]) {
  %893 = fn (%var_6916: Tensor[(840), float64]) -> (Tensor[(7, 8, 1), float32], Tensor[(7, 8, ?), float64], Tensor[(12, 2, 5), uint32], Tensor[(120), uint32], Tensor[(16, 12, 11), float32], Tensor[(132, 16), float64], Tensor[(7, 8, 1), float32], Tensor[(840), float64]) {
    %874 = cast(meta[relay.Constant][39] /* ty=Tensor[(132, 16), float32] */, dtype="float32") /* ty=Tensor[(132, 16), float32] */;
    %875 = reshape(%874, newshape=[132, 16]) /* ty=Tensor[(132, 16), float32] */;
    %876 = @func_6135(%875) /* ty=(Tensor[(7, 8, ?), float64], Tensor[(5, 16, 10), int16], Tensor[(132, 16), float32]) */;
    %877 = cast(meta[relay.Constant][40] /* ty=Tensor[(120), uint32] */, dtype="uint32") /* ty=Tensor[(120), uint32] */;
    %878 = cast(meta[relay.Constant][40] /* ty=Tensor[(120), uint32] */, dtype="uint32") /* ty=Tensor[(120), uint32] */;
    %879 = reshape(%877, newshape=[12, 2, 5]) /* ty=Tensor[(12, 2, 5), uint32] */;
    %880 = reshape(%878, newshape=[12, 2, 5]) /* ty=Tensor[(12, 2, 5), uint32] */;
    %881 = @func_6484(%879, %880) /* ty=(Tensor[(12, 2, 5), uint32],) */;
    %882 = @func_6056() /* ty=(Tensor[(16, 12, 11), float32],) */;
    %883 = cast(meta[relay.Constant][39] /* ty=Tensor[(132, 16), float32] */, dtype="float64") /* ty=Tensor[(132, 16), float64] */;
    %884 = cast(%var_6916, dtype="float64") /* ty=Tensor[(840), float64] */;
    %885 = reshape(%884, newshape=[840]) /* ty=Tensor[(840), float64] */;
    %886 = @func_4325(%885) /* ty=(Tensor[(7, 8, 1), float32], Tensor[(15, 14, 4), float64], Tensor[(840), float64]) */;
    %887 = @func_4298() /* ty=Tensor[(7, 8, 1), float32] */;
    %888 = %876.0;
    %889 = %881.0;
    %890 = %882.0;
    %891 = sigmoid(%883) /* ty=Tensor[(132, 16), float64] */;
    %892 = %886.0;
    (%887, %888, %889, meta[relay.Constant][40] /* ty=Tensor[(120), uint32] */, %890, %891, %892, %var_6916)
  };
  %893(%var_6921) /* ty=(Tensor[(7, 8, 1), float32], Tensor[(7, 8, ?), float64], Tensor[(12, 2, 5), uint32], Tensor[(120), uint32], Tensor[(16, 12, 11), float32], Tensor[(132, 16), float64], Tensor[(7, 8, 1), float32], Tensor[(840), float64]) */
}

def @func_2743(%var_2741: uint16, %var_2742: Tensor[(13, 3, 12), uint16]) -> Tensor[(13, 3, 12), uint16] {
  %896 = fn (%var_2719: uint16, %var_2720: Tensor[(13, 3, 12), uint16]) -> Tensor[(13, 3, 12), uint16] {
    %894 = cast(%var_2719, dtype="uint16") /* ty=uint16 */;
    %895 = cast(%var_2720, dtype="uint16") /* ty=Tensor[(13, 3, 12), uint16] */;
    right_shift(%894, %895) /* ty=Tensor[(13, 3, 12), uint16] */
  };
  %896(%var_2741, %var_2742) /* ty=Tensor[(13, 3, 12), uint16] */
}

def @func_9458(%var_9455: float64, %var_9456: Tensor[(1694), float64], %var_9457: Tensor[(1694), float64]) -> (Tensor[(15, 14, 4), float64], Tensor[(11, 14, 11), float64], float64, Tensor[(2112), uint8], Tensor[(720), float32], Tensor[(16, 12, 11), float32], Tensor[(15, 14, 4), float64], Tensor[(15, 14, 4), float64], Tensor[(7, 8, 1), float32], Tensor[(1694), int32], Tensor[(7, 8, 1), float64], Tensor[(1694), float32]) {
  @func_9453(%var_9455, %var_9456, %var_9457) /* ty=(Tensor[(15, 14, 4), float64], Tensor[(11, 14, 11), float64], float64, Tensor[(2112), uint8], Tensor[(720), float32], Tensor[(16, 12, 11), float32], Tensor[(15, 14, 4), float64], Tensor[(15, 14, 4), float64], Tensor[(7, 8, 1), float32], Tensor[(1694), int32], Tensor[(7, 8, 1), float64], Tensor[(1694), float32]) */
}

def @func_5101() -> (Tensor[(7, 8, 1), float32],) {
  @func_5099() /* ty=(Tensor[(7, 8, 1), float32],) */
}

def @func_411(%var_410: Tensor[(2112), float32]) -> (Tensor[(5, 16, 10), int16], Tensor[(16, 12, 11), float32], Tensor[(2112), float32]) {
  %908 = fn (%var_407: Tensor[(2112), float32]) -> (Tensor[(5, 16, 10), int16], Tensor[(16, 12, 11), float32], Tensor[(2112), float32]) {
    %897 = cast(meta[relay.Constant][42] /* ty=Tensor[(5, 16, 10), int16] */, dtype="int16") /* ty=Tensor[(5, 16, 10), int16] */;
    %898 = shape_of(meta[relay.Constant][41] /* ty=Tensor[(5, 16, 10), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %899 = cast(meta[relay.Constant][41] /* ty=Tensor[(5, 16, 10), int16] */, dtype="int16") /* ty=Tensor[(5, 16, 10), int16] */;
    %900 = dyn.reshape(%897, %898, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %901 = cast(%var_407, dtype="float32") /* ty=Tensor[(2112), float32] */;
    %902 = cast(%var_407, dtype="float32") /* ty=Tensor[(2112), float32] */;
    %903 = reshape(%901, newshape=[16, 12, 11]) /* ty=Tensor[(16, 12, 11), float32] */;
    %904 = reshape(%902, newshape=[16, 12, 11]) /* ty=Tensor[(16, 12, 11), float32] */;
    %905 = @func_199(%903, %904) /* ty=(Tensor[(16, 12, 11), float32],) */;
    %906 = maximum(%899, %900) /* ty=Tensor[(5, 16, 10), int16] */;
    %907 = %905.0;
    (%906, %907, %var_407)
  };
  %908(%var_410) /* ty=(Tensor[(5, 16, 10), int16], Tensor[(16, 12, 11), float32], Tensor[(2112), float32]) */
}

def @func_7962() -> (Tensor[(5, 16, 10), int16],) {
  %909 = @func_6734() /* ty=(Tensor[(16, 12, 11), float32], Tensor[(5, 16, 10), int16], Tensor[(7, 8, 1), float32], Tensor[(720), float32], Tensor[(15, 14, 4), float64]) */;
  %910 = %909.1;
  (%910,)
}

def @func_10709(%var_10706: Tensor[(9, 9, 5), int32], %var_10707: Tensor[(9, 9, 5), int32], %var_10708: Tensor[(168, 4), float32]) -> (Tensor[(9, 9, 5), int32], Tensor[(7, 8, 12), bool], Tensor[(168, 4), float32]) {
  @func_10704(%var_10706, %var_10707, %var_10708) /* ty=(Tensor[(9, 9, 5), int32], Tensor[(7, 8, 12), bool], Tensor[(168, 4), float32]) */
}

def @func_10264() -> Tensor[(7, 8, 1), float32] {
  %911 = @func_6882() /* ty=(Tensor[(7, 8, 1), float32],) */;
  %911.0
}

def @func_457(%var_455: float32, %var_456: Tensor[(6, 15, 1), float32]) -> (Tensor[(6, 15, 1), float32], Tensor[(16, 12, 11), float32], Tensor[(2112), float32]) {
  @func_453(%var_455, %var_456) /* ty=(Tensor[(6, 15, 1), float32], Tensor[(16, 12, 11), float32], Tensor[(2112), float32]) */
}

def @func_7496() -> Tensor[(7, 8, 1), float32] {
  %912 = @func_5465() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(7, 8, 1), float32]) */;
  %912.1
}

def @func_5275(%var_5238: float32, %var_5239: Tensor[(90), float32], %var_5259: Tensor[(168, 4), float32]) -> (Tensor[(7, 8, 1), float32], Tensor[(90), float32], float32, Tensor[(90), float32], Tensor[(7, 8, 12), bool], Tensor[(168, 4), float32], Tensor[(7, 8, 1), float32], Tensor[(7, 8, 1), float32], Tensor[(132, 16), float32]) {
  %913 = @func_4750() /* ty=(Tensor[(7, 8, 1), float32],) */;
  %914 = cast(meta[relay.Constant][43] /* ty=Tensor[(132, 16), float32] */, dtype="float32") /* ty=Tensor[(132, 16), float32] */;
  %915 = cast(%var_5238, dtype="float32") /* ty=float32 */;
  %916 = cast(%var_5239, dtype="float32") /* ty=Tensor[(90), float32] */;
  %917 = reshape(%914, newshape=[528, 4]) /* ty=Tensor[(528, 4), float32] */;
  %918 = reshape(%915, newshape=[]) /* ty=float32 */;
  %919 = reshape(%916, newshape=[90]) /* ty=Tensor[(90), float32] */;
  %920 = @func_2343(%917, %918, %919) /* ty=(Tensor[(16, 12, 11), float32], Tensor[(528, 4), float32], Tensor[(16, 12, 11), float32], float32, Tensor[(90), float32], Tensor[(7, 8, 9), float64]) */;
  %921 = cast(%var_5259, dtype="float32") /* ty=Tensor[(168, 4), float32] */;
  %922 = reshape(%921, newshape=[7, 8, 12]) /* ty=Tensor[(7, 8, 12), float32] */;
  %923 = @func_4830() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(16, 12, 11), float32], Tensor[(44, 48), float32]) */;
  %924 = @func_4830() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(16, 12, 11), float32], Tensor[(44, 48), float32]) */;
  %925 = cast(meta[relay.Constant][43] /* ty=Tensor[(132, 16), float32] */, dtype="float32") /* ty=Tensor[(132, 16), float32] */;
  %926 = %913.0;
  %927 = %920.4;
  %928 = @func_4252(%922) /* ty=Tensor[(7, 8, 12), bool] */;
  %929 = %923.0;
  %930 = %924.0;
  %931 = asin(%925) /* ty=Tensor[(132, 16), float32] */;
  (%926, %927, %var_5238, %var_5239, %928, %var_5259, %929, %930, %931)
}

def @func_6488(%var_6486: Tensor[(12, 2, 5), uint32], %var_6487: Tensor[(12, 2, 5), uint32]) -> (Tensor[(12, 2, 5), uint32],) {
  @func_6484(%var_6486, %var_6487) /* ty=(Tensor[(12, 2, 5), uint32],) */
}

def @func_7813() -> (Tensor[(7, 8, 1), float64], Tensor[(7, 8, 1), float32]) {
  %936 = fn () -> (Tensor[(7, 8, 1), float64], Tensor[(7, 8, 1), float32]) {
    %932 = @func_6837() /* ty=(Tensor[(7, 8, 1), float64],) */;
    %933 = @func_5099() /* ty=(Tensor[(7, 8, 1), float32],) */;
    %934 = %932.0;
    %935 = %933.0;
    (%934, %935)
  };
  %936() /* ty=(Tensor[(7, 8, 1), float64], Tensor[(7, 8, 1), float32]) */
}

def @func_8141(%var_8055: Tensor[(9, 8, 10), float32], %var_8076: Tensor[(840), float64]) -> (Tensor[(15, 14, 4), float64], Tensor[(840), float64], Tensor[(13, 3, 12), uint16], uint16, Tensor[(468), uint16], Tensor[(9, 8, 10), bool]) {
  %937 = cast(%var_8076, dtype="float64") /* ty=Tensor[(840), float64] */;
  %938 = reshape(%937, newshape=[15, 14, 4]) /* ty=Tensor[(15, 14, 4), float64] */;
  %939 = @func_1695(%938) /* ty=(Tensor[(15, 14, 4), float64],) */;
  %940 = cast(meta[relay.Constant][44] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %941 = cast(meta[relay.Constant][45] /* ty=Tensor[(468), uint16] */, dtype="uint16") /* ty=Tensor[(468), uint16] */;
  %942 = reshape(%940, newshape=[]) /* ty=uint16 */;
  %943 = reshape(%941, newshape=[13, 3, 12]) /* ty=Tensor[(13, 3, 12), uint16] */;
  %944 = cast(%var_8055, dtype="float32") /* ty=Tensor[(9, 8, 10), float32] */;
  %945 = log10(%944) /* ty=Tensor[(9, 8, 10), float32] */;
  %946 = cast(%var_8055, dtype="bool") /* ty=Tensor[(9, 8, 10), bool] */;
  %947 = shape_of(%945, dtype="int32") /* ty=Tensor[(3), int32] */;
  %948 = cast(%945, dtype="bool") /* ty=Tensor[(9, 8, 10), bool] */;
  %949 = dyn.reshape(%946, %947, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %950 = %939.0;
  %951 = @func_2740(%942, %943) /* ty=Tensor[(13, 3, 12), uint16] */;
  %952 = greater_equal(%948, %949) /* ty=Tensor[(9, 8, 10), bool] */;
  (%950, %var_8076, %951, meta[relay.Constant][44] /* ty=uint16 */, meta[relay.Constant][45] /* ty=Tensor[(468), uint16] */, %952)
}

def @func_4975() -> (Tensor[(7, 8, 1), float64], Tensor[(7, 8, 1), float64]) {
  %953 = @func_4477() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(7, 8, 1), float32], Tensor[(15, 14, 4), float64]) */;
  %954 = %953.1;
  %955 = cast(%954, dtype="float64") /* ty=Tensor[(7, 8, 1), float64] */;
  %956 = cast(%954, dtype="float64") /* ty=Tensor[(7, 8, 1), float64] */;
  %957 = log2(%955) /* ty=Tensor[(7, 8, 1), float64] */;
  %958 = sinh(%956) /* ty=Tensor[(7, 8, 1), float64] */;
  (%957, %958)
}

def @func_6884() -> (Tensor[(7, 8, 1), float32],) {
  @func_6882() /* ty=(Tensor[(7, 8, 1), float32],) */
}

def @func_1695(%var_1691: Tensor[(15, 14, 4), float64]) -> (Tensor[(15, 14, 4), float64],) {
  %959 = cast(%var_1691, dtype="float64") /* ty=Tensor[(15, 14, 4), float64] */;
  %960 = cos(%959) /* ty=Tensor[(15, 14, 4), float64] */;
  (%960,)
}

def @func_7724() -> Tensor[(7, 8, ?), uint16] {
  %968 = fn () -> Tensor[(7, 8, ?), uint16] {
    %961 = @func_7426() /* ty=(Tensor[(7, 8, ?), int64],) */;
    %962 = %961.0;
    %963 = @func_5207() /* ty=Tensor[(7, 8, ?), bool] */;
    %964 = cast(%963, dtype="uint16") /* ty=Tensor[(7, 8, ?), uint16] */;
    %965 = shape_of(%962, dtype="int32") /* ty=Tensor[(3), int32] */;
    %966 = cast(%962, dtype="uint16") /* ty=Tensor[(7, 8, ?), uint16] */;
    %967 = dyn.reshape(%964, %965, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    subtract(%966, %967) /* ty=Tensor[(7, 8, ?), uint16] */
  };
  %968() /* ty=Tensor[(7, 8, ?), uint16] */
}

def @func_5901() -> Tensor[(15, 14, 4), float64] {
  @func_5899() /* ty=Tensor[(15, 14, 4), float64] */
}

def @func_7366() -> (Tensor[(7, 8, ?), float32], Tensor[(7, 8, 1), float32]) {
  %972 = fn () -> (Tensor[(7, 8, ?), float32], Tensor[(7, 8, 1), float32]) {
    %969 = @func_5465() /* ty=(Tensor[(7, 8, 1), float32], Tensor[(7, 8, 1), float32]) */;
    %970 = @func_6641() /* ty=Tensor[(7, 8, ?), float32] */;
    %971 = %969.0;
    (%970, %971)
  };
  %972() /* ty=(Tensor[(7, 8, ?), float32], Tensor[(7, 8, 1), float32]) */
}

def @func_6058() -> (Tensor[(16, 12, 11), float32],) {
  @func_6056() /* ty=(Tensor[(16, 12, 11), float32],) */
}

def @func_9537() -> (Tensor[(7, 8, ?), int8],) {
  @func_9535() /* ty=(Tensor[(7, 8, ?), int8],) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

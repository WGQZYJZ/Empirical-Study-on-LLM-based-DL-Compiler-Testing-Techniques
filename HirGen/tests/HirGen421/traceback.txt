==========mod==========
#[version = "0.0.5"]
def @func_7576() -> Tensor[(14, 13, 4), float64] {
  @func_7522() /* ty=Tensor[(14, 13, 4), float64] */
}

def @func_8562() -> (Tensor[(4, 9, 8), float32],) {
  %0 = @func_6047() /* ty=Tensor[(4, 9, 8), float32] */;
  (%0,)
}

def @func_6145() -> (Tensor[(14, 13, 4), float64],) {
  %1 = @func_4323() /* ty=Tensor[(14, 13, 4), float64] */;
  (%1,)
}

def @func_4835() -> (Tensor[(14, 13, 4), float64],) {
  %2 = @func_4404() /* ty=Tensor[(14, 13, 4), float64] */;
  (%2,)
}

def @func_2641(%var_2636: Tensor[(16, 2, 6), float64]) -> (Tensor[(16, 2, 6), float64],) {
  %3 = cast(%var_2636, dtype="float64") /* ty=Tensor[(16, 2, 6), float64] */;
  %4 = sin(%3) /* ty=Tensor[(16, 2, 6), float64] */;
  (%4,)
}

def @func_4383(%var_4364: Tensor[(336), int32], %var_4366: Tensor[(120), bool]) -> (Tensor[(180), float32], Tensor[(336), int32], Tensor[(3360), int64], Tensor[(120), bool], Tensor[(180), float32], Tensor[(14, 13, 4), float64]) {
  %5 = cast(%var_4364, dtype="int32") /* ty=Tensor[(336), int32] */;
  %6 = cast(meta[relay.Constant][0] /* ty=Tensor[(3360), int64] */, dtype="int64") /* ty=Tensor[(3360), int64] */;
  %7 = cast(%var_4366, dtype="bool") /* ty=Tensor[(120), bool] */;
  %8 = cast(meta[relay.Constant][1] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %9 = reshape(%5, newshape=[7, 16, 3]) /* ty=Tensor[(7, 16, 3), int32] */;
  %10 = reshape(%6, newshape=[3360]) /* ty=Tensor[(3360), int64] */;
  %11 = reshape(%7, newshape=[60, 2]) /* ty=Tensor[(60, 2), bool] */;
  %12 = reshape(%8, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %13 = @func_3588(%9, %10, %11, %12) /* ty=(Tensor[(7, 16, 3), int32], Tensor[(16, 15, 14), int64], Tensor[(3360), int64], Tensor[(1080), float32], Tensor[(180), float32], Tensor[(480), float32], Tensor[(60, 2), float32]) */;
  %14 = @func_4111() /* ty=Tensor[(14, 13, 4), float64] */;
  %15 = cast(%14, dtype="float64") /* ty=Tensor[(14, 13, 4), float64] */;
  %16 = atanh(%15) /* ty=Tensor[(14, 13, 4), float64] */;
  %17 = cast(%16, dtype="float64") /* ty=Tensor[(14, 13, 4), float64] */;
  %18 = %13.4;
  %19 = rsqrt(%17) /* ty=Tensor[(14, 13, 4), float64] */;
  (%18, %var_4364, meta[relay.Constant][0] /* ty=Tensor[(3360), int64] */, %var_4366, meta[relay.Constant][1] /* ty=Tensor[(180), float32] */, %19)
}

def @func_665(%var_651: Tensor[(4, 12, 13), uint16], %var_663: Tensor[(1040), float64]) -> (Tensor[(4, 12, 13), uint64], Tensor[(13, 8, 10), float64], Tensor[(1040), float64]) {
  %20 = cast(%var_651, dtype="bool") /* ty=Tensor[(4, 12, 13), bool] */;
  %21 = shape_of(meta[relay.Constant][2] /* ty=Tensor[(4, 12, 13), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %22 = cast(meta[relay.Constant][2] /* ty=Tensor[(4, 12, 13), uint16] */, dtype="bool") /* ty=Tensor[(4, 12, 13), bool] */;
  %23 = dyn.reshape(%20, %21, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %24 = equal(%22, %23) /* ty=Tensor[(4, 12, 13), bool] */;
  %25 = cast(%24, dtype="uint64") /* ty=Tensor[(4, 12, 13), uint64] */;
  %26 = shape_of(meta[relay.Constant][2] /* ty=Tensor[(4, 12, 13), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %27 = cast(meta[relay.Constant][2] /* ty=Tensor[(4, 12, 13), uint16] */, dtype="uint64") /* ty=Tensor[(4, 12, 13), uint64] */;
  %28 = dyn.reshape(%25, %26, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %29 = cast(%var_663, dtype="float64") /* ty=Tensor[(1040), float64] */;
  %30 = reshape(%29, newshape=[13, 8, 10]) /* ty=Tensor[(13, 8, 10), float64] */;
  %31 = @func_486(%30) /* ty=(Tensor[(13, 8, 10), float64], Tensor[(1, 30), float64], Tensor[(1080), float32]) */;
  %32 = subtract(%27, %28) /* ty=Tensor[(4, 12, 13), uint64] */;
  %33 = %31.0;
  (%32, %33, %var_663)
}

def @func_6637() -> Tensor[(14, 13, 4), float64] {
  %34 = @func_4591() /* ty=(Tensor[(14, 13, 4), float64],) */;
  %34.0
}

def @func_5620(%var_5603: Tensor[(14, 13, 4), float64]) -> Tensor[(14, 13, 4), uint32] {
  %35 = @func_4591() /* ty=(Tensor[(14, 13, 4), float64],) */;
  %36 = %35.0;
  %37 = cast(%var_5603, dtype="uint32") /* ty=Tensor[(14, 13, 4), uint32] */;
  %38 = shape_of(%36, dtype="int32") /* ty=Tensor[(3), int32] */;
  %39 = cast(%36, dtype="uint32") /* ty=Tensor[(14, 13, 4), uint32] */;
  %40 = dyn.reshape(%37, %38, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  multiply(%39, %40) /* ty=Tensor[(14, 13, 4), uint32] */
}

def @func_7071() -> (Tensor[(14, 13, 4), float64],) {
  %41 = @func_5382() /* ty=Tensor[(14, 13, 4), float64] */;
  (%41,)
}

def @func_5740(%var_5717: Tensor[(15, 16, 5), float64], %var_5723: Tensor[(1056, 1), float64], %var_5735: Tensor[(3360), int64]) -> (Tensor[(1056), float64], Tensor[(1056, 1), float64], Tensor[(15, 16, 5), float32], Tensor[(16, 15, 14), int64], Tensor[(3360), int64]) {
  %42 = cast(%var_5723, dtype="float64") /* ty=Tensor[(1056, 1), float64] */;
  %43 = reshape(%42, newshape=[1056]) /* ty=Tensor[(1056), float64] */;
  %44 = @func_4900(%43) /* ty=(Tensor[(14, 13, 4), float64], Tensor[(11, 12, 8), float64], Tensor[(1056), float64], Tensor[(11, 12, 8), float64], Tensor[(14, 13, 4), float64]) */;
  %45 = cast(%var_5717, dtype="float64") /* ty=Tensor[(15, 16, 5), float64] */;
  %46 = sin(%45) /* ty=Tensor[(15, 16, 5), float64] */;
  %47 = cast(%46, dtype="float32") /* ty=Tensor[(15, 16, 5), float32] */;
  %48 = cast(%var_5735, dtype="int64") /* ty=Tensor[(3360), int64] */;
  %49 = reshape(%48, newshape=[16, 15, 14]) /* ty=Tensor[(16, 15, 14), int64] */;
  %50 = @func_1699(%49) /* ty=(Tensor[(16, 15, 14), int64],) */;
  %51 = %44.2;
  %52 = sigmoid(%47) /* ty=Tensor[(15, 16, 5), float32] */;
  %53 = %50.0;
  (%51, %var_5723, %52, %53, %var_5735)
}

def @func_4404() -> Tensor[(14, 13, 4), float64] {
  @func_4323() /* ty=Tensor[(14, 13, 4), float64] */
}

def @func_4285(%var_4257: Tensor[(3, 3, 4), int64], %var_4275: Tensor[(624), uint16], %var_4280: Tensor[(33), float64]) -> (Tensor[(3, 3, 4), bool], Tensor[(3360), int64], Tensor[(840), float32], Tensor[(624), uint16], Tensor[(3, 1, 11), float32], Tensor[(33), float64]) {
  %54 = cast(%var_4257, dtype="int64") /* ty=Tensor[(3, 3, 4), int64] */;
  %55 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(3, 3, 4), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %56 = cast(meta[relay.Constant][3] /* ty=Tensor[(3, 3, 4), int64] */, dtype="int64") /* ty=Tensor[(3, 3, 4), int64] */;
  %57 = dyn.reshape(%54, %55, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %58 = minimum(%56, %57) /* ty=Tensor[(3, 3, 4), int64] */;
  %59 = cast(%58, dtype="bool") /* ty=Tensor[(3, 3, 4), bool] */;
  %60 = shape_of(%var_4257, dtype="int32") /* ty=Tensor[(3), int32] */;
  %61 = cast(%var_4257, dtype="bool") /* ty=Tensor[(3, 3, 4), bool] */;
  %62 = dyn.reshape(%59, %60, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %63 = cast(meta[relay.Constant][4] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
  %64 = cast(%var_4275, dtype="uint16") /* ty=Tensor[(624), uint16] */;
  %65 = reshape(%63, newshape=[15, 8, 7]) /* ty=Tensor[(15, 8, 7), float32] */;
  %66 = reshape(%64, newshape=[624]) /* ty=Tensor[(624), uint16] */;
  %67 = @func_4172(%65, %66) /* ty=(Tensor[(15, 8, 7), float32], Tensor[(1040), float64], Tensor[(624), uint16], Tensor[(520, 2), float64], Tensor[(16, 15, 14), int64], Tensor[(3360), int64]) */;
  %68 = cast(%var_4280, dtype="float64") /* ty=Tensor[(33), float64] */;
  %69 = reshape(%68, newshape=[3, 1, 11]) /* ty=Tensor[(3, 1, 11), float64] */;
  %70 = @func_3347(%69) /* ty=(Tensor[(3, 1, 11), float32],) */;
  %71 = equal(%61, %62) /* ty=Tensor[(3, 3, 4), bool] */;
  %72 = %67.5;
  %73 = %70.0;
  (%71, %72, meta[relay.Constant][4] /* ty=Tensor[(840), float32] */, %var_4275, %73, %var_4280)
}

def @func_6714(%var_6700: Tensor[(1, 180), int8], %var_6706: Tensor[(11, 180), int8]) -> (Tensor[(14, 13, 4), float64], Tensor[(2, 6, 15), int8], Tensor[(11, 180), bool]) {
  %74 = cast(%var_6700, dtype="int8") /* ty=Tensor[(1, 180), int8] */;
  %75 = reshape(%74, newshape=[2, 6, 15]) /* ty=Tensor[(2, 6, 15), int8] */;
  %76 = cast(%var_6700, dtype="bool") /* ty=Tensor[(1, 180), bool] */;
  %77 = cast(%var_6706, dtype="bool") /* ty=Tensor[(11, 180), bool] */;
  %78 = @func_6637() /* ty=Tensor[(14, 13, 4), float64] */;
  %79 = @func_5101(%75) /* ty=Tensor[(2, 6, 15), int8] */;
  %80 = logical_or(%76, %77) /* ty=Tensor[(11, 180), bool] */;
  (%78, %79, %80)
}

def @func_5993() -> (Tensor[(4, 9, 8), uint64], Tensor[(14, 13, 4), float64]) {
  %81 = @func_4212() /* ty=Tensor[(4, 9, 8), uint64] */;
  %82 = @func_4404() /* ty=Tensor[(14, 13, 4), float64] */;
  (%81, %82)
}

def @main(%var_9281: Tensor[(7, 10, 4), float64]) -> Tensor[(7, 10, 4), float64] {
  %83 = cast(%var_9281, dtype="float64") /* ty=Tensor[(7, 10, 4), float64] */;
  atan(%83) /* ty=Tensor[(7, 10, 4), float64] */
}

def @func_4591() -> (Tensor[(14, 13, 4), float64],) {
  %84 = @func_4458() /* ty=(Tensor[(14, 13, 4), float64],) */;
  %85 = %84.0;
  %86 = cast(meta[relay.Constant][5] /* ty=Tensor[(14, 13, 4), float64] */, dtype="float64") /* ty=Tensor[(14, 13, 4), float64] */;
  %87 = shape_of(%85, dtype="int32") /* ty=Tensor[(3), int32] */;
  %88 = cast(%85, dtype="float64") /* ty=Tensor[(14, 13, 4), float64] */;
  %89 = dyn.reshape(%86, %87, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %90 = floor_mod(%88, %89) /* ty=Tensor[(14, 13, 4), float64] */;
  (%90,)
}

def @func_4323() -> Tensor[(14, 13, 4), float64] {
  @func_4111() /* ty=Tensor[(14, 13, 4), float64] */
}

def @func_8120() -> (Tensor[(14, 13, 4), float64],) {
  %91 = @func_5993() /* ty=(Tensor[(4, 9, 8), uint64], Tensor[(14, 13, 4), float64]) */;
  %92 = %91.1;
  (%92,)
}

def @func_7834(%var_7815: Tensor[(13, 1, 13), float32]) -> Tensor[(13, 1, 13), float32] {
  %93 = cast(%var_7815, dtype="float32") /* ty=Tensor[(13, 1, 13), float32] */;
  acos(%93) /* ty=Tensor[(13, 1, 13), float32] */
}

def @func_3781(%var_3776: Tensor[(15, 11, 6), int8], %var_3777: Tensor[(15, 11, 6), int8]) -> Tensor[(15, 11, 6), int8] {
  %94 = cast(%var_3777, dtype="int8") /* ty=Tensor[(15, 11, 6), int8] */;
  %95 = shape_of(%var_3776, dtype="int32") /* ty=Tensor[(3), int32] */;
  %96 = cast(%var_3776, dtype="int8") /* ty=Tensor[(15, 11, 6), int8] */;
  %97 = dyn.reshape(%94, %95, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  add(%96, %97) /* ty=Tensor[(15, 11, 6), int8] */
}

def @func_6047() -> Tensor[(4, 9, 8), float32] {
  %98 = @func_5783() /* ty=(Tensor[(4, 9, 8), float32],) */;
  %98.0
}

def @func_7331() -> (Tensor[(14, 13, 4), float64], Tensor[(9, 8, 10), float32]) {
  %99 = @func_7152() /* ty=(Tensor[(14, 13, 4), float64],) */;
  %100 = %99.0;
  %101 = cast(%100, dtype="float64") /* ty=Tensor[(14, 13, 4), float64] */;
  %102 = reshape(%101, newshape=[14, 13, 4]) /* ty=Tensor[(14, 13, 4), float64] */;
  %103 = @func_6971(%102) /* ty=(Tensor[(14, 13, 4), uint16], Tensor[(9, 8, 10), float32]) */;
  %104 = %103.1;
  (%100, %104)
}

def @func_6594(%var_6575: Tensor[(1056), float32], %var_6579: Tensor[(1056), float64]) -> (Tensor[(14, 13, 4), float64], Tensor[(11, 12, 8), float64], Tensor[(1056), float64], Tensor[(1056), int8]) {
  %105 = @func_4822() /* ty=(Tensor[(14, 13, 4), float64], Tensor[(14, 13, 4), float64]) */;
  %106 = cast(meta[relay.Constant][6] /* ty=Tensor[(1056), float64] */, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %107 = cast(meta[relay.Constant][6] /* ty=Tensor[(1056), float64] */, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %108 = reshape(%106, newshape=[11, 12, 8]) /* ty=Tensor[(11, 12, 8), float64] */;
  %109 = reshape(%107, newshape=[11, 12, 8]) /* ty=Tensor[(11, 12, 8), float64] */;
  %110 = cast(meta[relay.Constant][6] /* ty=Tensor[(1056), float64] */, dtype="float32") /* ty=Tensor[(1056), float32] */;
  %111 = erf(%110) /* ty=Tensor[(1056), float32] */;
  %112 = cast(%var_6575, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %113 = shape_of(%111, dtype="int32") /* ty=Tensor[(1), int32] */;
  %114 = cast(%111, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %115 = dyn.reshape(%112, %113, newshape=[]) /* ty=Tensor[(?), float64] */;
  %116 = cast(%111, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %117 = sinh(%116) /* ty=Tensor[(1056), float64] */;
  %118 = cast(%var_6579, dtype="int8") /* ty=Tensor[(1056), int8] */;
  %119 = shape_of(%117, dtype="int32") /* ty=Tensor[(1), int32] */;
  %120 = cast(%117, dtype="int8") /* ty=Tensor[(1056), int8] */;
  %121 = dyn.reshape(%118, %119, newshape=[]) /* ty=Tensor[(?), int8] */;
  %122 = %105.0;
  %123 = @func_4618(%108, %109) /* ty=Tensor[(11, 12, 8), float64] */;
  %124 = add(%114, %115) /* ty=Tensor[(1056), float64] */;
  %125 = left_shift(%120, %121) /* ty=Tensor[(1056), int8] */;
  (%122, %123, %124, %125)
}

def @func_6032(%var_6027: Tensor[(1040), float64]) -> (Tensor[(4, 9, 8), float32], Tensor[(14, 13, 4), float64], Tensor[(13, 8, 10), float64], Tensor[(1040), float64]) {
  %126 = @func_5783() /* ty=(Tensor[(4, 9, 8), float32],) */;
  %127 = @func_4822() /* ty=(Tensor[(14, 13, 4), float64], Tensor[(14, 13, 4), float64]) */;
  %128 = cast(%var_6027, dtype="float64") /* ty=Tensor[(1040), float64] */;
  %129 = reshape(%128, newshape=[13, 8, 10]) /* ty=Tensor[(13, 8, 10), float64] */;
  %130 = @func_486(%129) /* ty=(Tensor[(13, 8, 10), float64], Tensor[(1, 30), float64], Tensor[(1080), float32]) */;
  %131 = %126.0;
  %132 = %127.1;
  %133 = %130.0;
  (%131, %132, %133, %var_6027)
}

def @func_6451(%var_6414: Tensor[(192), float32], %var_6443: Tensor[(3, 40), bool]) -> (Tensor[(14, 13, 4), float64], Tensor[(117), float64], Tensor[(1404), float64], Tensor[(4, 4, 12), float32], Tensor[(1, 6, 5), float64], Tensor[(30), float64], Tensor[(4, 9, 8), float32], Tensor[(7, 16, 3), int32], Tensor[(360), float32], Tensor[(4, 84), int32], Tensor[(3, 40), bool]) {
  %134 = @func_6145() /* ty=(Tensor[(14, 13, 4), float64],) */;
  %135 = cast(meta[relay.Constant][7] /* ty=Tensor[(117), float64] */, dtype="float64") /* ty=Tensor[(117), float64] */;
  %136 = cast(meta[relay.Constant][8] /* ty=Tensor[(1404), float64] */, dtype="float64") /* ty=Tensor[(1404), float64] */;
  %137 = cast(%var_6414, dtype="float32") /* ty=Tensor[(192), float32] */;
  %138 = reshape(%135, newshape=[9, 1, 13]) /* ty=Tensor[(9, 1, 13), float64] */;
  %139 = reshape(%136, newshape=[9, 12, 13]) /* ty=Tensor[(9, 12, 13), float64] */;
  %140 = reshape(%137, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %141 = @func_2732(%138, %139, %140) /* ty=(Tensor[(9, 12, 13), float64], Tensor[(4, 4, 12), int8], Tensor[(192), float32]) */;
  %142 = %141.1;
  %143 = cast(%var_6414, dtype="float32") /* ty=Tensor[(192), float32] */;
  %144 = shape_of(%142, dtype="int32") /* ty=Tensor[(3), int32] */;
  %145 = cast(%142, dtype="float32") /* ty=Tensor[(4, 4, 12), float32] */;
  %146 = dyn.reshape(%143, %144, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %147 = cast(meta[relay.Constant][9] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
  %148 = reshape(%147, newshape=[1, 6, 5]) /* ty=Tensor[(1, 6, 5), float64] */;
  %149 = cast(meta[relay.Constant][10] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %150 = cast(meta[relay.Constant][11] /* ty=Tensor[(4, 84), int32] */, dtype="int32") /* ty=Tensor[(4, 84), int32] */;
  %151 = cast(%var_6443, dtype="bool") /* ty=Tensor[(3, 40), bool] */;
  %152 = reshape(%149, newshape=[5, 12, 6]) /* ty=Tensor[(5, 12, 6), float32] */;
  %153 = reshape(%150, newshape=[1, 336]) /* ty=Tensor[(1, 336), int32] */;
  %154 = reshape(%151, newshape=[120]) /* ty=Tensor[(120), bool] */;
  %155 = @func_6267(%152, %153, %154) /* ty=(Tensor[(5, 12, 6), float32], Tensor[(7, 16, 3), int32], Tensor[(1, 336), int32], Tensor[(3360), int64], Tensor[(120), bool], Tensor[(180), float32]) */;
  %156 = %134.0;
  %157 = power(%145, %146) /* ty=Tensor[(4, 4, 12), float32] */;
  %158 = @func_126(%148) /* ty=Tensor[(1, 6, 5), float64] */;
  %159 = @func_6047() /* ty=Tensor[(4, 9, 8), float32] */;
  %160 = %155.1;
  (%156, meta[relay.Constant][7] /* ty=Tensor[(117), float64] */, meta[relay.Constant][8] /* ty=Tensor[(1404), float64] */, %157, %158, meta[relay.Constant][9] /* ty=Tensor[(30), float64] */, %159, %160, meta[relay.Constant][10] /* ty=Tensor[(360), float32] */, meta[relay.Constant][11] /* ty=Tensor[(4, 84), int32] */, %var_6443)
}

def @func_7124(%var_7119: Tensor[(192), float32]) -> (Tensor[(4, 9, 8), float32], Tensor[(4, 4, 12), int8], Tensor[(192), float32]) {
  %161 = cast(%var_7119, dtype="float32") /* ty=Tensor[(192), float32] */;
  %162 = reshape(%161, newshape=[4, 4, 12]) /* ty=Tensor[(4, 4, 12), float32] */;
  %163 = @func_2205(%162) /* ty=(Tensor[(4, 4, 12), int8],) */;
  %164 = @func_6047() /* ty=Tensor[(4, 9, 8), float32] */;
  %165 = %163.0;
  (%164, %165, %var_7119)
}

def @func_296(%var_235: Tensor[(9, 12, 10), float32]) -> (Tensor[(1, 6, 5), float64], Tensor[(1, 30), float64], Tensor[(9, 12, 10), float64], Tensor[(1, 6, 5), float64], Tensor[(1, 6, 5), float64]) {
  %166 = cast(meta[relay.Constant][12] /* ty=Tensor[(1, 30), float64] */, dtype="float64") /* ty=Tensor[(1, 30), float64] */;
  %167 = reshape(%166, newshape=[1, 6, 5]) /* ty=Tensor[(1, 6, 5), float64] */;
  %168 = cast(%var_235, dtype="float32") /* ty=Tensor[(9, 12, 10), float32] */;
  %169 = log2(%168) /* ty=Tensor[(9, 12, 10), float32] */;
  %170 = cast(%169, dtype="float64") /* ty=Tensor[(9, 12, 10), float64] */;
  %171 = @func_126(%167) /* ty=Tensor[(1, 6, 5), float64] */;
  %172 = cast(%171, dtype="float64") /* ty=Tensor[(1, 6, 5), float64] */;
  %173 = reshape(%172, newshape=[1, 6, 5]) /* ty=Tensor[(1, 6, 5), float64] */;
  %174 = cast(%171, dtype="float64") /* ty=Tensor[(1, 6, 5), float64] */;
  %175 = reshape(%174, newshape=[1, 6, 5]) /* ty=Tensor[(1, 6, 5), float64] */;
  %176 = sqrt(%170) /* ty=Tensor[(9, 12, 10), float64] */;
  %177 = @func_126(%173) /* ty=Tensor[(1, 6, 5), float64] */;
  %178 = @func_126(%175) /* ty=Tensor[(1, 6, 5), float64] */;
  (%171, meta[relay.Constant][12] /* ty=Tensor[(1, 30), float64] */, %176, %177, %178)
}

def @func_7676() -> (Tensor[(14, 13, 4), float64], Tensor[(14, 13, 4), float64]) {
  %179 = @func_4591() /* ty=(Tensor[(14, 13, 4), float64],) */;
  %180 = %179.0;
  %181 = @func_4323() /* ty=Tensor[(14, 13, 4), float64] */;
  (%180, %181)
}

def @func_8538(%var_8519: Tensor[(120), bool], %var_8521: Tensor[(117), float64]) -> (Tensor[(9, 8, 10), float32], Tensor[(1404), float64], Tensor[(1080), float32], Tensor[(336), int32], Tensor[(120), bool], Tensor[(180), float32], Tensor[(117), float64]) {
  %182 = @func_7331() /* ty=(Tensor[(14, 13, 4), float64], Tensor[(9, 8, 10), float32]) */;
  %183 = cast(meta[relay.Constant][13] /* ty=Tensor[(1080), float32] */, dtype="float32") /* ty=Tensor[(1080), float32] */;
  %184 = cast(meta[relay.Constant][14] /* ty=Tensor[(336), int32] */, dtype="int32") /* ty=Tensor[(336), int32] */;
  %185 = cast(%var_8519, dtype="bool") /* ty=Tensor[(120), bool] */;
  %186 = cast(meta[relay.Constant][15] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %187 = cast(%var_8521, dtype="float64") /* ty=Tensor[(117), float64] */;
  %188 = reshape(%183, newshape=[270, 4]) /* ty=Tensor[(270, 4), float32] */;
  %189 = reshape(%184, newshape=[336]) /* ty=Tensor[(336), int32] */;
  %190 = reshape(%185, newshape=[120, 1]) /* ty=Tensor[(120, 1), bool] */;
  %191 = reshape(%186, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %192 = reshape(%187, newshape=[117]) /* ty=Tensor[(117), float64] */;
  %193 = @func_5276(%188, %189, %190, %191, %192) /* ty=(Tensor[(1, 6, 5), float64], Tensor[(270, 4), float32], Tensor[(14, 13, 4), float64], Tensor[(7, 16, 3), int32], Tensor[(336), int32], Tensor[(3360), int64], Tensor[(120, 1), bool], Tensor[(180), float32], Tensor[(4, 4, 12), int8], Tensor[(117), float64], Tensor[(1404), float64], Tensor[(192), float32], Tensor[(4, 9, 8), int8]) */;
  %194 = %182.1;
  %195 = %193.10;
  (%194, %195, meta[relay.Constant][13] /* ty=Tensor[(1080), float32] */, meta[relay.Constant][14] /* ty=Tensor[(336), int32] */, %var_8519, meta[relay.Constant][15] /* ty=Tensor[(180), float32] */, %var_8521)
}

def @func_5909(%var_5851: Tensor[(1, 840), float32], %var_5852: Tensor[(624), uint16]) -> (Tensor[(14, 13, 4), float64], Tensor[(1, 840), float32], Tensor[(624), uint16], Tensor[(1040), float32], Tensor[(1040), float64]) {
  %196 = @func_4835() /* ty=(Tensor[(14, 13, 4), float64],) */;
  %197 = cast(%var_5851, dtype="float32") /* ty=Tensor[(1, 840), float32] */;
  %198 = cast(%var_5852, dtype="uint16") /* ty=Tensor[(624), uint16] */;
  %199 = reshape(%197, newshape=[15, 8, 7]) /* ty=Tensor[(15, 8, 7), float32] */;
  %200 = reshape(%198, newshape=[624]) /* ty=Tensor[(624), uint16] */;
  %201 = @func_4172(%199, %200) /* ty=(Tensor[(15, 8, 7), float32], Tensor[(1040), float64], Tensor[(624), uint16], Tensor[(520, 2), float64], Tensor[(16, 15, 14), int64], Tensor[(3360), int64]) */;
  %202 = %201.1;
  %203 = cast(meta[relay.Constant][16] /* ty=Tensor[(1040), float64] */, dtype="float32") /* ty=Tensor[(1040), float32] */;
  %204 = shape_of(%202, dtype="int32") /* ty=Tensor[(1), int32] */;
  %205 = cast(%202, dtype="float32") /* ty=Tensor[(1040), float32] */;
  %206 = dyn.reshape(%203, %204, newshape=[]) /* ty=Tensor[(?), float32] */;
  %207 = cast(%202, dtype="float64") /* ty=Tensor[(1040), float64] */;
  %208 = %196.0;
  %209 = mod(%205, %206) /* ty=Tensor[(1040), float32] */;
  %210 = asin(%207) /* ty=Tensor[(1040), float64] */;
  (%208, %var_5851, %var_5852, %209, %210)
}

def @func_5958(%var_5946: Tensor[(4, 9, 8), uint64]) -> (Tensor[(4, 9, 8), int32],) {
  %211 = @func_4472() /* ty=Tensor[(4, 9, 8), uint64] */;
  %212 = cast(%var_5946, dtype="int32") /* ty=Tensor[(4, 9, 8), int32] */;
  %213 = shape_of(%211, dtype="int32") /* ty=Tensor[(3), int32] */;
  %214 = cast(%211, dtype="int32") /* ty=Tensor[(4, 9, 8), int32] */;
  %215 = dyn.reshape(%212, %213, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %216 = bitwise_xor(%214, %215) /* ty=Tensor[(4, 9, 8), int32] */;
  (%216,)
}

def @func_6771() -> (Tensor[(14, 13, 4), float64],) {
  %217 = @func_4835() /* ty=(Tensor[(14, 13, 4), float64],) */;
  %218 = %217.0;
  (%218,)
}

def @func_4111() -> Tensor[(14, 13, 4), float64] {
  %219 = cast(meta[relay.Constant][17] /* ty=Tensor[(14, 13, 4), float64] */, dtype="float64") /* ty=Tensor[(14, 13, 4), float64] */;
  acosh(%219) /* ty=Tensor[(14, 13, 4), float64] */
}

def @func_3040(%var_3033: Tensor[(3, 2, 10), float64], %var_3034: Tensor[(3, 2, 10), float64]) -> Tensor[(3, 2, 10), float64] {
  %220 = cast(%var_3034, dtype="float64") /* ty=Tensor[(3, 2, 10), float64] */;
  %221 = shape_of(%var_3033, dtype="int32") /* ty=Tensor[(3), int32] */;
  %222 = cast(%var_3033, dtype="float64") /* ty=Tensor[(3, 2, 10), float64] */;
  %223 = dyn.reshape(%220, %221, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  power(%222, %223) /* ty=Tensor[(3, 2, 10), float64] */
}

def @func_5559() -> (Tensor[(14, 13, 4), float64], Tensor[(30, 2), bool], Tensor[(14, 13, 4), float64]) {
  %224 = @func_4739() /* ty=(Tensor[(14, 13, 4), float64],) */;
  %225 = cast(meta[relay.Constant][18] /* ty=Tensor[(30, 2), float64] */, dtype="float64") /* ty=Tensor[(30, 2), float64] */;
  %226 = cast(meta[relay.Constant][18] /* ty=Tensor[(30, 2), float64] */, dtype="float64") /* ty=Tensor[(30, 2), float64] */;
  %227 = reshape(%225, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), float64] */;
  %228 = reshape(%226, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), float64] */;
  %229 = @func_3040(%227, %228) /* ty=Tensor[(3, 2, 10), float64] */;
  %230 = cast(%229, dtype="bool") /* ty=Tensor[(3, 2, 10), bool] */;
  %231 = shape_of(meta[relay.Constant][18] /* ty=Tensor[(30, 2), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %232 = cast(meta[relay.Constant][18] /* ty=Tensor[(30, 2), float64] */, dtype="bool") /* ty=Tensor[(30, 2), bool] */;
  %233 = dyn.reshape(%230, %231, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %234 = @func_4739() /* ty=(Tensor[(14, 13, 4), float64],) */;
  %235 = %224.0;
  %236 = less(%232, %233) /* ty=Tensor[(30, 2), bool] */;
  %237 = %234.0;
  (%235, %236, %237)
}

def @func_4172(%var_4155: Tensor[(15, 8, 7), float32], %var_4161: Tensor[(624), uint16]) -> (Tensor[(15, 8, 7), float32], Tensor[(1040), float64], Tensor[(624), uint16], Tensor[(520, 2), float64], Tensor[(16, 15, 14), int64], Tensor[(3360), int64]) {
  %238 = cast(%var_4155, dtype="float32") /* ty=Tensor[(15, 8, 7), float32] */;
  %239 = cast(%var_4161, dtype="uint16") /* ty=Tensor[(624), uint16] */;
  %240 = cast(meta[relay.Constant][19] /* ty=Tensor[(520, 2), float64] */, dtype="float64") /* ty=Tensor[(520, 2), float64] */;
  %241 = reshape(%239, newshape=[4, 12, 13]) /* ty=Tensor[(4, 12, 13), uint16] */;
  %242 = reshape(%240, newshape=[1040]) /* ty=Tensor[(1040), float64] */;
  %243 = @func_665(%241, %242) /* ty=(Tensor[(4, 12, 13), uint64], Tensor[(13, 8, 10), float64], Tensor[(1040), float64]) */;
  %244 = cast(meta[relay.Constant][20] /* ty=Tensor[(3360), int64] */, dtype="int64") /* ty=Tensor[(3360), int64] */;
  %245 = reshape(%244, newshape=[16, 15, 14]) /* ty=Tensor[(16, 15, 14), int64] */;
  %246 = @func_1699(%245) /* ty=(Tensor[(16, 15, 14), int64],) */;
  %247 = log10(%238) /* ty=Tensor[(15, 8, 7), float32] */;
  %248 = %243.2;
  %249 = %246.0;
  (%247, %248, %var_4161, meta[relay.Constant][19] /* ty=Tensor[(520, 2), float64] */, %249, meta[relay.Constant][20] /* ty=Tensor[(3360), int64] */)
}

def @func_5070(%var_4975: Tensor[(180), float32], %var_5051: Tensor[(990), int8]) -> (Tensor[(14, 13, 4), float64], Tensor[(315), float64], Tensor[(180), float32], Tensor[(1, 6, 5), float64], Tensor[(30), float64], Tensor[(15, 11, 6), int8], Tensor[(990), int8], Tensor[(4, 260), int8]) {
  %250 = @func_4591() /* ty=(Tensor[(14, 13, 4), float64],) */;
  %251 = cast(meta[relay.Constant][22] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
  %252 = reshape(%251, newshape=[1, 6, 5]) /* ty=Tensor[(1, 6, 5), float64] */;
  %253 = cast(%var_5051, dtype="int8") /* ty=Tensor[(990), int8] */;
  %254 = cast(%var_5051, dtype="int8") /* ty=Tensor[(990), int8] */;
  %255 = reshape(%253, newshape=[15, 11, 6]) /* ty=Tensor[(15, 11, 6), int8] */;
  %256 = reshape(%254, newshape=[15, 11, 6]) /* ty=Tensor[(15, 11, 6), int8] */;
  %257 = cast(meta[relay.Constant][21] /* ty=Tensor[(315), float64] */, dtype="float64") /* ty=Tensor[(315), float64] */;
  %258 = cast(%var_4975, dtype="float32") /* ty=Tensor[(180), float32] */;
  %259 = reshape(%257, newshape=[15, 7, 3]) /* ty=Tensor[(15, 7, 3), float64] */;
  %260 = reshape(%258, newshape=[1, 180]) /* ty=Tensor[(1, 180), float32] */;
  %261 = @func_844(%259, %260) /* ty=(Tensor[(15, 7, 3), float64], Tensor[(6, 5, 6), float64], Tensor[(1, 180), float32], Tensor[(4, 260), float64], Tensor[(1, 6, 5), float64], Tensor[(1080), float32], Tensor[(1080), float32]) */;
  %262 = %261.3;
  %263 = cast(%262, dtype="float32") /* ty=Tensor[(4, 260), float32] */;
  %264 = sqrt(%263) /* ty=Tensor[(4, 260), float32] */;
  %265 = cast(%262, dtype="float64") /* ty=Tensor[(4, 260), float64] */;
  %266 = shape_of(%264, dtype="int32") /* ty=Tensor[(2), int32] */;
  %267 = cast(%264, dtype="float64") /* ty=Tensor[(4, 260), float64] */;
  %268 = dyn.reshape(%265, %266, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %269 = add(%267, %268) /* ty=Tensor[(4, 260), float64] */;
  %270 = cast(%264, dtype="bool") /* ty=Tensor[(4, 260), bool] */;
  %271 = shape_of(%269, dtype="int32") /* ty=Tensor[(2), int32] */;
  %272 = cast(%269, dtype="bool") /* ty=Tensor[(4, 260), bool] */;
  %273 = dyn.reshape(%270, %271, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %274 = logical_and(%272, %273) /* ty=Tensor[(4, 260), bool] */;
  %275 = cast(%269, dtype="int8") /* ty=Tensor[(4, 260), int8] */;
  %276 = shape_of(%274, dtype="int32") /* ty=Tensor[(2), int32] */;
  %277 = cast(%274, dtype="int8") /* ty=Tensor[(4, 260), int8] */;
  %278 = dyn.reshape(%275, %276, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %279 = %250.0;
  %280 = @func_126(%252) /* ty=Tensor[(1, 6, 5), float64] */;
  %281 = @func_3781(%255, %256) /* ty=Tensor[(15, 11, 6), int8] */;
  %282 = maximum(%277, %278) /* ty=Tensor[(4, 260), int8] */;
  (%279, meta[relay.Constant][21] /* ty=Tensor[(315), float64] */, %var_4975, %280, meta[relay.Constant][22] /* ty=Tensor[(30), float64] */, %281, %var_5051, %282)
}

def @func_8185(%var_8173: Tensor[(1, 9, 6), uint64]) -> (Tensor[(1, 9, 6), uint64], Tensor[(11, 12, 8), float64], Tensor[(528, 2), float64]) {
  %283 = cast(meta[relay.Constant][23] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %284 = cast(%var_8173, dtype="uint64") /* ty=Tensor[(1, 9, 6), uint64] */;
  %285 = cast(meta[relay.Constant][24] /* ty=Tensor[(528, 2), float64] */, dtype="float64") /* ty=Tensor[(528, 2), float64] */;
  %286 = cast(meta[relay.Constant][24] /* ty=Tensor[(528, 2), float64] */, dtype="float64") /* ty=Tensor[(528, 2), float64] */;
  %287 = reshape(%285, newshape=[11, 12, 8]) /* ty=Tensor[(11, 12, 8), float64] */;
  %288 = reshape(%286, newshape=[11, 12, 8]) /* ty=Tensor[(11, 12, 8), float64] */;
  %289 = add(%283, %284) /* ty=Tensor[(1, 9, 6), uint64] */;
  %290 = @func_4618(%287, %288) /* ty=Tensor[(11, 12, 8), float64] */;
  (%289, %290, meta[relay.Constant][24] /* ty=Tensor[(528, 2), float64] */)
}

def @func_8721() -> Tensor[(14, 13, 4), float64] {
  %291 = @func_8329() /* ty=(Tensor[(14, 13, 4), float64],) */;
  %291.0
}

def @func_8843(%var_8800: Tensor[(14, 3, 13), float32]) -> (Tensor[(14, 3, 13), float32], Tensor[(1, 9, 6), uint64], Tensor[(54, 1), uint64], Tensor[(14, 13, 4), float64], Tensor[(14, 3, 13), bool]) {
  %292 = cast(meta[relay.Constant][25] /* ty=Tensor[(14, 3, 13), float32] */, dtype="float32") /* ty=Tensor[(14, 3, 13), float32] */;
  %293 = shape_of(%var_8800, dtype="int32") /* ty=Tensor[(3), int32] */;
  %294 = cast(%var_8800, dtype="float32") /* ty=Tensor[(14, 3, 13), float32] */;
  %295 = dyn.reshape(%292, %293, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %296 = cast(meta[relay.Constant][26] /* ty=Tensor[(54, 1), uint64] */, dtype="uint64") /* ty=Tensor[(54, 1), uint64] */;
  %297 = reshape(%296, newshape=[1, 9, 6]) /* ty=Tensor[(1, 9, 6), uint64] */;
  %298 = @func_8185(%297) /* ty=(Tensor[(1, 9, 6), uint64], Tensor[(11, 12, 8), float64], Tensor[(528, 2), float64]) */;
  %299 = @func_8127() /* ty=(Tensor[(14, 13, 4), float64],) */;
  %300 = cast(meta[relay.Constant][27] /* ty=Tensor[(14, 3, 13), float32] */, dtype="bool") /* ty=Tensor[(14, 3, 13), bool] */;
  %301 = shape_of(meta[relay.Constant][25] /* ty=Tensor[(14, 3, 13), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %302 = cast(meta[relay.Constant][25] /* ty=Tensor[(14, 3, 13), float32] */, dtype="bool") /* ty=Tensor[(14, 3, 13), bool] */;
  %303 = dyn.reshape(%300, %301, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %304 = floor_divide(%294, %295) /* ty=Tensor[(14, 3, 13), float32] */;
  %305 = %298.0;
  %306 = %299.0;
  %307 = greater_equal(%302, %303) /* ty=Tensor[(14, 3, 13), bool] */;
  (%304, %305, meta[relay.Constant][26] /* ty=Tensor[(54, 1), uint64] */, %306, %307)
}

def @func_6191(%var_6169: Tensor[(1040), float64], %var_6186: Tensor[(14, 30), float64]) -> (Tensor[(4, 9, 8), uint64], Tensor[(1040), float64], Tensor[(14, 30), float32]) {
  %308 = cast(%var_6169, dtype="float64") /* ty=Tensor[(1040), float64] */;
  %309 = reshape(%308, newshape=[13, 8, 10]) /* ty=Tensor[(13, 8, 10), float64] */;
  %310 = @func_486(%309) /* ty=(Tensor[(13, 8, 10), float64], Tensor[(1, 30), float64], Tensor[(1080), float32]) */;
  %311 = %310.1;
  %312 = cast(%311, dtype="float32") /* ty=Tensor[(1, 30), float32] */;
  %313 = cast(%var_6186, dtype="float32") /* ty=Tensor[(14, 30), float32] */;
  %314 = @func_4472() /* ty=Tensor[(4, 9, 8), uint64] */;
  %315 = divide(%312, %313) /* ty=Tensor[(14, 30), float32] */;
  (%314, %var_6169, %315)
}

def @func_4739() -> (Tensor[(14, 13, 4), float64],) {
  %316 = @func_4323() /* ty=Tensor[(14, 13, 4), float64] */;
  (%316,)
}

def @func_8407() -> (Tensor[(14, 13, 4), float64], Tensor[(14, 13, 4), float64], Tensor[(1040), float64], Tensor[(1, 1040), float64], Tensor[(420), float64]) {
  %317 = @func_4739() /* ty=(Tensor[(14, 13, 4), float64],) */;
  %318 = %317.0;
  %319 = cast(%318, dtype="float64") /* ty=Tensor[(14, 13, 4), float64] */;
  %320 = cast(meta[relay.Constant][28] /* ty=Tensor[(1, 1040), float64] */, dtype="float64") /* ty=Tensor[(1, 1040), float64] */;
  %321 = cast(meta[relay.Constant][29] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %322 = reshape(%320, newshape=[1040]) /* ty=Tensor[(1040), float64] */;
  %323 = reshape(%321, newshape=[14, 30]) /* ty=Tensor[(14, 30), float64] */;
  %324 = @func_6191(%322, %323) /* ty=(Tensor[(4, 9, 8), uint64], Tensor[(1040), float64], Tensor[(14, 30), float32]) */;
  %325 = @func_7492() /* ty=Tensor[(14, 13, 4), float64] */;
  %326 = cosh(%319) /* ty=Tensor[(14, 13, 4), float64] */;
  %327 = %324.1;
  (%325, %326, %327, meta[relay.Constant][28] /* ty=Tensor[(1, 1040), float64] */, meta[relay.Constant][29] /* ty=Tensor[(420), float64] */)
}

def @func_8300(%var_8284: Tensor[(2, 3, 5), float32]) -> (Tensor[(2, 3, 5), float32], Tensor[(14, 13, 4), float64], Tensor[(2, 3, 5), int16]) {
  %328 = cast(meta[relay.Constant][30] /* ty=Tensor[(2, 3, 5), float32] */, dtype="float32") /* ty=Tensor[(2, 3, 5), float32] */;
  %329 = @func_7618() /* ty=(Tensor[(14, 13, 4), float64],) */;
  %330 = cast(%var_8284, dtype="int16") /* ty=Tensor[(2, 3, 5), int16] */;
  %331 = shape_of(meta[relay.Constant][30] /* ty=Tensor[(2, 3, 5), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %332 = cast(meta[relay.Constant][30] /* ty=Tensor[(2, 3, 5), float32] */, dtype="int16") /* ty=Tensor[(2, 3, 5), int16] */;
  %333 = dyn.reshape(%330, %331, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %334 = atan(%328) /* ty=Tensor[(2, 3, 5), float32] */;
  %335 = %329.0;
  %336 = add(%332, %333) /* ty=Tensor[(2, 3, 5), int16] */;
  (%334, %335, %336)
}

def @func_5173(%var_5163: Tensor[(117), float64], %var_5165: Tensor[(192), float32]) -> (Tensor[(4, 9, 8), uint64], Tensor[(14, 13, 4), float64], Tensor[(9, 12, 13), float64], Tensor[(117), float64], Tensor[(1404), float64], Tensor[(192), float32]) {
  %337 = cast(%var_5163, dtype="float64") /* ty=Tensor[(117), float64] */;
  %338 = cast(meta[relay.Constant][31] /* ty=Tensor[(1404), float64] */, dtype="float64") /* ty=Tensor[(1404), float64] */;
  %339 = cast(%var_5165, dtype="float32") /* ty=Tensor[(192), float32] */;
  %340 = reshape(%337, newshape=[9, 1, 13]) /* ty=Tensor[(9, 1, 13), float64] */;
  %341 = reshape(%338, newshape=[9, 12, 13]) /* ty=Tensor[(9, 12, 13), float64] */;
  %342 = reshape(%339, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %343 = @func_2732(%340, %341, %342) /* ty=(Tensor[(9, 12, 13), float64], Tensor[(4, 4, 12), int8], Tensor[(192), float32]) */;
  %344 = @func_4472() /* ty=Tensor[(4, 9, 8), uint64] */;
  %345 = @func_4404() /* ty=Tensor[(14, 13, 4), float64] */;
  %346 = %343.0;
  (%344, %345, %346, %var_5163, meta[relay.Constant][31] /* ty=Tensor[(1404), float64] */, %var_5165)
}

def @func_8038() -> Tensor[(14, 13, 4), float64] {
  %347 = @func_6771() /* ty=(Tensor[(14, 13, 4), float64],) */;
  %347.0
}

def @func_4681(%var_4663: Tensor[(3360), int64]) -> (Tensor[(4, 9, 8), uint64], Tensor[(1, 6, 5), float64], Tensor[(1080), float32], Tensor[(16, 15, 14), int64], Tensor[(96), float32], Tensor[(3360), int64]) {
  %348 = cast(meta[relay.Constant][32] /* ty=Tensor[(1080), float32] */, dtype="float32") /* ty=Tensor[(1080), float32] */;
  %349 = reshape(%348, newshape=[9, 12, 10]) /* ty=Tensor[(9, 12, 10), float32] */;
  %350 = @func_296(%349) /* ty=(Tensor[(1, 6, 5), float64], Tensor[(1, 30), float64], Tensor[(9, 12, 10), float64], Tensor[(1, 6, 5), float64], Tensor[(1, 6, 5), float64]) */;
  %351 = cast(meta[relay.Constant][33] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
  %352 = cast(%var_4663, dtype="int64") /* ty=Tensor[(3360), int64] */;
  %353 = reshape(%351, newshape=[3, 2, 16]) /* ty=Tensor[(3, 2, 16), float32] */;
  %354 = reshape(%352, newshape=[3360]) /* ty=Tensor[(3360), int64] */;
  %355 = @func_2356(%353, %354) /* ty=(Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64], Tensor[(16, 15, 14), int64], Tensor[(3360), int64]) */;
  %356 = @func_4472() /* ty=Tensor[(4, 9, 8), uint64] */;
  %357 = %350.4;
  %358 = %355.2;
  (%356, %357, meta[relay.Constant][32] /* ty=Tensor[(1080), float32] */, %358, meta[relay.Constant][33] /* ty=Tensor[(96), float32] */, %var_4663)
}

def @func_8638() -> (Tensor[(14, 13, 4), float64], Tensor[(1, 30), float64], Tensor[(40, 26), uint16]) {
  %359 = @func_7331() /* ty=(Tensor[(14, 13, 4), float64], Tensor[(9, 8, 10), float32]) */;
  %360 = cast(meta[relay.Constant][34] /* ty=Tensor[(40, 26), float64] */, dtype="float64") /* ty=Tensor[(40, 26), float64] */;
  %361 = reshape(%360, newshape=[13, 8, 10]) /* ty=Tensor[(13, 8, 10), float64] */;
  %362 = @func_486(%361) /* ty=(Tensor[(13, 8, 10), float64], Tensor[(1, 30), float64], Tensor[(1080), float32]) */;
  %363 = cast(meta[relay.Constant][34] /* ty=Tensor[(40, 26), float64] */, dtype="float64") /* ty=Tensor[(40, 26), float64] */;
  %364 = sqrt(%363) /* ty=Tensor[(40, 26), float64] */;
  %365 = cast(meta[relay.Constant][34] /* ty=Tensor[(40, 26), float64] */, dtype="bool") /* ty=Tensor[(40, 26), bool] */;
  %366 = shape_of(%364, dtype="int32") /* ty=Tensor[(2), int32] */;
  %367 = cast(%364, dtype="bool") /* ty=Tensor[(40, 26), bool] */;
  %368 = dyn.reshape(%365, %366, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %369 = less(%367, %368) /* ty=Tensor[(40, 26), bool] */;
  %370 = cast(%369, dtype="uint16") /* ty=Tensor[(40, 26), uint16] */;
  %371 = shape_of(%364, dtype="int32") /* ty=Tensor[(2), int32] */;
  %372 = cast(%364, dtype="uint16") /* ty=Tensor[(40, 26), uint16] */;
  %373 = dyn.reshape(%370, %371, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %374 = %359.0;
  %375 = %362.1;
  %376 = right_shift(%372, %373) /* ty=Tensor[(40, 26), uint16] */;
  (%374, %375, %376)
}

def @func_9102(%var_9014: Tensor[(4, 11, 6), bool], %var_9015: Tensor[(4, 11, 6), bool]) -> (Tensor[(4, 11, 6), bool], Tensor[(14, 13, 4), float64], Tensor[(1, 6, 5), float64], Tensor[(315), float64], Tensor[(180), float32], Tensor[(14, 13, 4), float64], Tensor[(4, 11, 6), float64]) {
  %377 = cast(%var_9015, dtype="bool") /* ty=Tensor[(4, 11, 6), bool] */;
  %378 = shape_of(%var_9014, dtype="int32") /* ty=Tensor[(3), int32] */;
  %379 = cast(%var_9014, dtype="bool") /* ty=Tensor[(4, 11, 6), bool] */;
  %380 = dyn.reshape(%377, %378, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %381 = logical_or(%379, %380) /* ty=Tensor[(4, 11, 6), bool] */;
  %382 = cast(%var_9015, dtype="bool") /* ty=Tensor[(4, 11, 6), bool] */;
  %383 = shape_of(%381, dtype="int32") /* ty=Tensor[(3), int32] */;
  %384 = cast(%381, dtype="bool") /* ty=Tensor[(4, 11, 6), bool] */;
  %385 = dyn.reshape(%382, %383, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %386 = @func_7676() /* ty=(Tensor[(14, 13, 4), float64], Tensor[(14, 13, 4), float64]) */;
  %387 = cast(meta[relay.Constant][35] /* ty=Tensor[(315), float64] */, dtype="float64") /* ty=Tensor[(315), float64] */;
  %388 = cast(meta[relay.Constant][36] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %389 = reshape(%387, newshape=[15, 7, 3]) /* ty=Tensor[(15, 7, 3), float64] */;
  %390 = reshape(%388, newshape=[1, 180]) /* ty=Tensor[(1, 180), float32] */;
  %391 = @func_844(%389, %390) /* ty=(Tensor[(15, 7, 3), float64], Tensor[(6, 5, 6), float64], Tensor[(1, 180), float32], Tensor[(4, 260), float64], Tensor[(1, 6, 5), float64], Tensor[(1080), float32], Tensor[(1080), float32]) */;
  %392 = cast(meta[relay.Constant][36] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %393 = reshape(%392, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %394 = @func_8491(%393) /* ty=(Tensor[(14, 13, 4), float64], Tensor[(14, 13, 4), float64], Tensor[(40, 26), float64], bool, Tensor[(120), bool], Tensor[(180), float32], Tensor[(480), float32]) */;
  %395 = cast(%381, dtype="float64") /* ty=Tensor[(4, 11, 6), float64] */;
  %396 = greater_equal(%384, %385) /* ty=Tensor[(4, 11, 6), bool] */;
  %397 = %386.1;
  %398 = %391.4;
  %399 = %394.1;
  %400 = exp(%395) /* ty=Tensor[(4, 11, 6), float64] */;
  (%396, %397, %398, meta[relay.Constant][35] /* ty=Tensor[(315), float64] */, meta[relay.Constant][36] /* ty=Tensor[(180), float32] */, %399, %400)
}

def @func_9176(%var_9113: Tensor[(36), int64], %var_9114: Tensor[(8, 78), uint16]) -> (Tensor[(14, 13, 4), float64], Tensor[(624), uint16], Tensor[(8, 78), uint16], Tensor[(33), float64], Tensor[(36), float64], Tensor[(13, 1, 13), float32], Tensor[(169), float32]) {
  %401 = cast(%var_9113, dtype="int64") /* ty=Tensor[(36), int64] */;
  %402 = cast(%var_9114, dtype="uint16") /* ty=Tensor[(8, 78), uint16] */;
  %403 = cast(meta[relay.Constant][37] /* ty=Tensor[(33), float64] */, dtype="float64") /* ty=Tensor[(33), float64] */;
  %404 = reshape(%401, newshape=[3, 3, 4]) /* ty=Tensor[(3, 3, 4), int64] */;
  %405 = reshape(%402, newshape=[624]) /* ty=Tensor[(624), uint16] */;
  %406 = reshape(%403, newshape=[33]) /* ty=Tensor[(33), float64] */;
  %407 = @func_4285(%404, %405, %406) /* ty=(Tensor[(3, 3, 4), bool], Tensor[(3360), int64], Tensor[(840), float32], Tensor[(624), uint16], Tensor[(3, 1, 11), float32], Tensor[(33), float64]) */;
  %408 = cast(%var_9113, dtype="float64") /* ty=Tensor[(36), float64] */;
  %409 = cast(meta[relay.Constant][38] /* ty=Tensor[(169), float32] */, dtype="float32") /* ty=Tensor[(169), float32] */;
  %410 = reshape(%409, newshape=[13, 1, 13]) /* ty=Tensor[(13, 1, 13), float32] */;
  %411 = @func_7576() /* ty=Tensor[(14, 13, 4), float64] */;
  %412 = %407.3;
  %413 = log10(%408) /* ty=Tensor[(36), float64] */;
  %414 = @func_7834(%410) /* ty=Tensor[(13, 1, 13), float32] */;
  (%411, %412, %var_9114, meta[relay.Constant][37] /* ty=Tensor[(33), float64] */, %413, %414, meta[relay.Constant][38] /* ty=Tensor[(169), float32] */)
}

def @func_4900(%var_4862: Tensor[(1056), float64]) -> (Tensor[(14, 13, 4), float64], Tensor[(11, 12, 8), float64], Tensor[(1056), float64], Tensor[(11, 12, 8), float64], Tensor[(14, 13, 4), float64]) {
  %415 = cast(%var_4862, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %416 = cast(%var_4862, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %417 = reshape(%415, newshape=[11, 12, 8]) /* ty=Tensor[(11, 12, 8), float64] */;
  %418 = reshape(%416, newshape=[11, 12, 8]) /* ty=Tensor[(11, 12, 8), float64] */;
  %419 = @func_4618(%417, %418) /* ty=Tensor[(11, 12, 8), float64] */;
  %420 = cast(%419, dtype="float64") /* ty=Tensor[(11, 12, 8), float64] */;
  %421 = cast(%419, dtype="float64") /* ty=Tensor[(11, 12, 8), float64] */;
  %422 = reshape(%420, newshape=[11, 12, 8]) /* ty=Tensor[(11, 12, 8), float64] */;
  %423 = reshape(%421, newshape=[11, 12, 8]) /* ty=Tensor[(11, 12, 8), float64] */;
  %424 = @func_4822() /* ty=(Tensor[(14, 13, 4), float64], Tensor[(14, 13, 4), float64]) */;
  %425 = @func_4111() /* ty=Tensor[(14, 13, 4), float64] */;
  %426 = @func_4618(%422, %423) /* ty=Tensor[(11, 12, 8), float64] */;
  %427 = %424.0;
  (%425, %419, %var_4862, %426, %427)
}

def @func_4458() -> (Tensor[(14, 13, 4), float64],) {
  %428 = @func_4404() /* ty=Tensor[(14, 13, 4), float64] */;
  (%428,)
}

def @func_126(%var_123: Tensor[(1, 6, 5), float64]) -> Tensor[(1, 6, 5), float64] {
  %429 = cast(%var_123, dtype="float64") /* ty=Tensor[(1, 6, 5), float64] */;
  sinh(%429) /* ty=Tensor[(1, 6, 5), float64] */
}

def @func_4822() -> (Tensor[(14, 13, 4), float64], Tensor[(14, 13, 4), float64]) {
  %430 = @func_4458() /* ty=(Tensor[(14, 13, 4), float64],) */;
  %431 = @func_4404() /* ty=Tensor[(14, 13, 4), float64] */;
  %432 = %430.0;
  (%431, %432)
}

def @func_6971(%var_6950: Tensor[(14, 13, 4), float64]) -> (Tensor[(14, 13, 4), uint16], Tensor[(9, 8, 10), float32]) {
  %433 = @func_4111() /* ty=Tensor[(14, 13, 4), float64] */;
  %434 = cast(%var_6950, dtype="uint16") /* ty=Tensor[(14, 13, 4), uint16] */;
  %435 = shape_of(%433, dtype="int32") /* ty=Tensor[(3), int32] */;
  %436 = cast(%433, dtype="uint16") /* ty=Tensor[(14, 13, 4), uint16] */;
  %437 = dyn.reshape(%434, %435, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %438 = maximum(%436, %437) /* ty=Tensor[(14, 13, 4), uint16] */;
  %439 = @func_6497() /* ty=Tensor[(9, 8, 10), float32] */;
  (%438, %439)
}

def @func_5276(%var_5244: Tensor[(270, 4), float32], %var_5259: Tensor[(336), int32], %var_5261: Tensor[(120, 1), bool], %var_5262: Tensor[(180), float32], %var_5267: Tensor[(117), float64]) -> (Tensor[(1, 6, 5), float64], Tensor[(270, 4), float32], Tensor[(14, 13, 4), float64], Tensor[(7, 16, 3), int32], Tensor[(336), int32], Tensor[(3360), int64], Tensor[(120, 1), bool], Tensor[(180), float32], Tensor[(4, 4, 12), int8], Tensor[(117), float64], Tensor[(1404), float64], Tensor[(192), float32], Tensor[(4, 9, 8), int8]) {
  %440 = cast(%var_5244, dtype="float32") /* ty=Tensor[(270, 4), float32] */;
  %441 = reshape(%440, newshape=[9, 12, 10]) /* ty=Tensor[(9, 12, 10), float32] */;
  %442 = @func_296(%441) /* ty=(Tensor[(1, 6, 5), float64], Tensor[(1, 30), float64], Tensor[(9, 12, 10), float64], Tensor[(1, 6, 5), float64], Tensor[(1, 6, 5), float64]) */;
  %443 = @func_4458() /* ty=(Tensor[(14, 13, 4), float64],) */;
  %444 = cast(%var_5259, dtype="int32") /* ty=Tensor[(336), int32] */;
  %445 = cast(meta[relay.Constant][39] /* ty=Tensor[(3360), int64] */, dtype="int64") /* ty=Tensor[(3360), int64] */;
  %446 = cast(%var_5261, dtype="bool") /* ty=Tensor[(120, 1), bool] */;
  %447 = cast(%var_5262, dtype="float32") /* ty=Tensor[(180), float32] */;
  %448 = reshape(%444, newshape=[7, 16, 3]) /* ty=Tensor[(7, 16, 3), int32] */;
  %449 = reshape(%445, newshape=[3360]) /* ty=Tensor[(3360), int64] */;
  %450 = reshape(%446, newshape=[60, 2]) /* ty=Tensor[(60, 2), bool] */;
  %451 = reshape(%447, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %452 = @func_3588(%448, %449, %450, %451) /* ty=(Tensor[(7, 16, 3), int32], Tensor[(16, 15, 14), int64], Tensor[(3360), int64], Tensor[(1080), float32], Tensor[(180), float32], Tensor[(480), float32], Tensor[(60, 2), float32]) */;
  %453 = cast(%var_5267, dtype="float64") /* ty=Tensor[(117), float64] */;
  %454 = cast(meta[relay.Constant][40] /* ty=Tensor[(1404), float64] */, dtype="float64") /* ty=Tensor[(1404), float64] */;
  %455 = cast(meta[relay.Constant][41] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %456 = reshape(%453, newshape=[9, 1, 13]) /* ty=Tensor[(9, 1, 13), float64] */;
  %457 = reshape(%454, newshape=[9, 12, 13]) /* ty=Tensor[(9, 12, 13), float64] */;
  %458 = reshape(%455, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %459 = @func_2732(%456, %457, %458) /* ty=(Tensor[(9, 12, 13), float64], Tensor[(4, 4, 12), int8], Tensor[(192), float32]) */;
  %460 = @func_4472() /* ty=Tensor[(4, 9, 8), uint64] */;
  %461 = cast(meta[relay.Constant][42] /* ty=Tensor[(4, 9, 8), uint64] */, dtype="int32") /* ty=Tensor[(4, 9, 8), int32] */;
  %462 = shape_of(%460, dtype="int32") /* ty=Tensor[(3), int32] */;
  %463 = cast(%460, dtype="int32") /* ty=Tensor[(4, 9, 8), int32] */;
  %464 = dyn.reshape(%461, %462, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %465 = left_shift(%463, %464) /* ty=Tensor[(4, 9, 8), int32] */;
  %466 = cast(%460, dtype="int8") /* ty=Tensor[(4, 9, 8), int8] */;
  %467 = shape_of(%465, dtype="int32") /* ty=Tensor[(3), int32] */;
  %468 = cast(%465, dtype="int8") /* ty=Tensor[(4, 9, 8), int8] */;
  %469 = dyn.reshape(%466, %467, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %470 = %442.0;
  %471 = %443.0;
  %472 = %452.0;
  %473 = %459.1;
  %474 = bitwise_and(%468, %469) /* ty=Tensor[(4, 9, 8), int8] */;
  (%470, %var_5244, %471, %472, %var_5259, meta[relay.Constant][39] /* ty=Tensor[(3360), int64] */, %var_5261, %var_5262, %473, %var_5267, meta[relay.Constant][40] /* ty=Tensor[(1404), float64] */, meta[relay.Constant][41] /* ty=Tensor[(192), float32] */, %474)
}

def @func_8491(%var_8484: Tensor[(180), float32]) -> (Tensor[(14, 13, 4), float64], Tensor[(14, 13, 4), float64], Tensor[(40, 26), float64], bool, Tensor[(120), bool], Tensor[(180), float32], Tensor[(480), float32]) {
  %475 = @func_8127() /* ty=(Tensor[(14, 13, 4), float64],) */;
  %476 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %477 = cast(meta[relay.Constant][43] /* ty=Tensor[(120), bool] */, dtype="bool") /* ty=Tensor[(120), bool] */;
  %478 = cast(%var_8484, dtype="float32") /* ty=Tensor[(180), float32] */;
  %479 = cast(meta[relay.Constant][44] /* ty=Tensor[(480), float32] */, dtype="float32") /* ty=Tensor[(480), float32] */;
  %480 = reshape(%476, newshape=[]) /* ty=bool */;
  %481 = reshape(%477, newshape=[1, 10, 12]) /* ty=Tensor[(1, 10, 12), bool] */;
  %482 = reshape(%478, newshape=[180, 1]) /* ty=Tensor[(180, 1), float32] */;
  %483 = reshape(%479, newshape=[4, 10, 12]) /* ty=Tensor[(4, 10, 12), float32] */;
  %484 = @func_2136(%480, %481, %482, %483) /* ty=(Tensor[(1080), float32], Tensor[(40, 26), float64], Tensor[(1040), float64], Tensor[(180, 1), float32], Tensor[(1, 10, 12), float64], Tensor[(4, 10, 12), bool]) */;
  %485 = @func_7522() /* ty=Tensor[(14, 13, 4), float64] */;
  %486 = %475.0;
  %487 = %484.1;
  (%485, %486, %487, False /* ty=bool */, meta[relay.Constant][43] /* ty=Tensor[(120), bool] */, %var_8484, meta[relay.Constant][44] /* ty=Tensor[(480), float32] */)
}

def @func_8897(%var_8861: Tensor[(8, 8, 12), float32], %var_8887: Tensor[(8, 8, 12), float32]) -> (Tensor[(14, 13, 4), float64], Tensor[(8, 8, 12), uint8]) {
  %488 = cast(%var_8861, dtype="float32") /* ty=Tensor[(8, 8, 12), float32] */;
  %489 = asinh(%488) /* ty=Tensor[(8, 8, 12), float32] */;
  %490 = cast(%var_8887, dtype="uint8") /* ty=Tensor[(8, 8, 12), uint8] */;
  %491 = shape_of(%489, dtype="int32") /* ty=Tensor[(3), int32] */;
  %492 = cast(%489, dtype="uint8") /* ty=Tensor[(8, 8, 12), uint8] */;
  %493 = dyn.reshape(%490, %491, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %494 = @func_4404() /* ty=Tensor[(14, 13, 4), float64] */;
  %495 = left_shift(%492, %493) /* ty=Tensor[(8, 8, 12), uint8] */;
  (%494, %495)
}

def @func_2205(%var_2166: Tensor[(4, 4, 12), float32]) -> (Tensor[(4, 4, 12), int8],) {
  %496 = cast(%var_2166, dtype="float32") /* ty=Tensor[(4, 4, 12), float32] */;
  %497 = log10(%496) /* ty=Tensor[(4, 4, 12), float32] */;
  %498 = cast(%var_2166, dtype="bool") /* ty=Tensor[(4, 4, 12), bool] */;
  %499 = shape_of(%497, dtype="int32") /* ty=Tensor[(3), int32] */;
  %500 = cast(%497, dtype="bool") /* ty=Tensor[(4, 4, 12), bool] */;
  %501 = dyn.reshape(%498, %499, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %502 = not_equal(%500, %501) /* ty=Tensor[(4, 4, 12), bool] */;
  %503 = cast(%497, dtype="bool") /* ty=Tensor[(4, 4, 12), bool] */;
  %504 = shape_of(%502, dtype="int32") /* ty=Tensor[(3), int32] */;
  %505 = cast(%502, dtype="bool") /* ty=Tensor[(4, 4, 12), bool] */;
  %506 = dyn.reshape(%503, %504, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %507 = logical_or(%505, %506) /* ty=Tensor[(4, 4, 12), bool] */;
  %508 = cast(%507, dtype="int8") /* ty=Tensor[(4, 4, 12), int8] */;
  %509 = shape_of(%497, dtype="int32") /* ty=Tensor[(3), int32] */;
  %510 = cast(%497, dtype="int8") /* ty=Tensor[(4, 4, 12), int8] */;
  %511 = dyn.reshape(%508, %509, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %512 = bitwise_xor(%510, %511) /* ty=Tensor[(4, 4, 12), int8] */;
  (%512,)
}

def @func_5382() -> Tensor[(14, 13, 4), float64] {
  %513 = @func_4591() /* ty=(Tensor[(14, 13, 4), float64],) */;
  %513.0
}

def @func_7152() -> (Tensor[(14, 13, 4), float64],) {
  %514 = @func_5559() /* ty=(Tensor[(14, 13, 4), float64], Tensor[(30, 2), bool], Tensor[(14, 13, 4), float64]) */;
  %515 = %514.0;
  (%515,)
}

def @func_6365(%var_6307: Tensor[(14, 16, 4), float64], %var_6333: Tensor[(624), uint16], %var_6361: Tensor[(33), float64]) -> (Tensor[(14, 16, 4), float64], Tensor[(13, 8, 10), float64], Tensor[(1040, 624), bool], Tensor[(3360), int64], Tensor[(3360), int64], Tensor[(33), float64], Tensor[(36), int64], Tensor[(33), float64], Tensor[(14, 16, 4), float64]) {
  %516 = cast(%var_6307, dtype="float64") /* ty=Tensor[(14, 16, 4), float64] */;
  %517 = cast(%var_6333, dtype="uint16") /* ty=Tensor[(624), uint16] */;
  %518 = cast(meta[relay.Constant][45] /* ty=Tensor[(1040, 1), float64] */, dtype="float64") /* ty=Tensor[(1040, 1), float64] */;
  %519 = reshape(%517, newshape=[4, 12, 13]) /* ty=Tensor[(4, 12, 13), uint16] */;
  %520 = reshape(%518, newshape=[1040]) /* ty=Tensor[(1040), float64] */;
  %521 = @func_665(%519, %520) /* ty=(Tensor[(4, 12, 13), uint64], Tensor[(13, 8, 10), float64], Tensor[(1040), float64]) */;
  %522 = cast(meta[relay.Constant][45] /* ty=Tensor[(1040, 1), float64] */, dtype="float32") /* ty=Tensor[(1040, 1), float32] */;
  %523 = sin(%522) /* ty=Tensor[(1040, 1), float32] */;
  %524 = cast(%523, dtype="bool") /* ty=Tensor[(1040, 1), bool] */;
  %525 = cast(%var_6333, dtype="bool") /* ty=Tensor[(624), bool] */;
  %526 = cast(meta[relay.Constant][46] /* ty=Tensor[(3360), int64] */, dtype="int64") /* ty=Tensor[(3360), int64] */;
  %527 = reshape(%526, newshape=[3360]) /* ty=Tensor[(3360), int64] */;
  %528 = @func_4681(%527) /* ty=(Tensor[(4, 9, 8), uint64], Tensor[(1, 6, 5), float64], Tensor[(1080), float32], Tensor[(16, 15, 14), int64], Tensor[(96), float32], Tensor[(3360), int64]) */;
  %529 = cast(meta[relay.Constant][47] /* ty=Tensor[(36), int64] */, dtype="int64") /* ty=Tensor[(36), int64] */;
  %530 = cast(%var_6333, dtype="uint16") /* ty=Tensor[(624), uint16] */;
  %531 = cast(%var_6361, dtype="float64") /* ty=Tensor[(33), float64] */;
  %532 = reshape(%529, newshape=[3, 3, 4]) /* ty=Tensor[(3, 3, 4), int64] */;
  %533 = reshape(%530, newshape=[624]) /* ty=Tensor[(624), uint16] */;
  %534 = reshape(%531, newshape=[33]) /* ty=Tensor[(33), float64] */;
  %535 = @func_4285(%532, %533, %534) /* ty=(Tensor[(3, 3, 4), bool], Tensor[(3360), int64], Tensor[(840), float32], Tensor[(624), uint16], Tensor[(3, 1, 11), float32], Tensor[(33), float64]) */;
  %536 = cast(%var_6307, dtype="float64") /* ty=Tensor[(14, 16, 4), float64] */;
  %537 = cosh(%516) /* ty=Tensor[(14, 16, 4), float64] */;
  %538 = %521.1;
  %539 = not_equal(%524, %525) /* ty=Tensor[(1040, 624), bool] */;
  %540 = %528.5;
  %541 = %535.5;
  %542 = sqrt(%536) /* ty=Tensor[(14, 16, 4), float64] */;
  (%537, %538, %539, %540, meta[relay.Constant][46] /* ty=Tensor[(3360), int64] */, %541, meta[relay.Constant][47] /* ty=Tensor[(36), int64] */, %var_6361, %542)
}

def @func_8319() -> (Tensor[(14, 13, 4), float64], Tensor[(14, 13, 4), float64]) {
  %543 = @func_5559() /* ty=(Tensor[(14, 13, 4), float64], Tensor[(30, 2), bool], Tensor[(14, 13, 4), float64]) */;
  %544 = %543.0;
  %545 = @func_4404() /* ty=Tensor[(14, 13, 4), float64] */;
  (%544, %545)
}

def @func_4618(%var_4613: Tensor[(11, 12, 8), float64], %var_4614: Tensor[(11, 12, 8), float64]) -> Tensor[(11, 12, 8), float64] {
  %546 = cast(%var_4614, dtype="float64") /* ty=Tensor[(11, 12, 8), float64] */;
  %547 = shape_of(%var_4613, dtype="int32") /* ty=Tensor[(3), int32] */;
  %548 = cast(%var_4613, dtype="float64") /* ty=Tensor[(11, 12, 8), float64] */;
  %549 = dyn.reshape(%546, %547, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  mod(%548, %549) /* ty=Tensor[(11, 12, 8), float64] */
}

def @func_7876(%var_7860: Tensor[(15, 16, 6), uint32], %var_7869: Tensor[(117, 1), float64], %var_7870: Tensor[(1, 192), float32]) -> (Tensor[(15, 16, 6), bool], Tensor[(192), float32], Tensor[(117, 192), int64]) {
  %550 = cast(meta[relay.Constant][48] /* ty=Tensor[(15, 16, 6), uint32] */, dtype="bool") /* ty=Tensor[(15, 16, 6), bool] */;
  %551 = shape_of(%var_7860, dtype="int32") /* ty=Tensor[(3), int32] */;
  %552 = cast(%var_7860, dtype="bool") /* ty=Tensor[(15, 16, 6), bool] */;
  %553 = dyn.reshape(%550, %551, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %554 = cast(%var_7869, dtype="float64") /* ty=Tensor[(117, 1), float64] */;
  %555 = cast(%var_7870, dtype="float32") /* ty=Tensor[(1, 192), float32] */;
  %556 = reshape(%554, newshape=[117]) /* ty=Tensor[(117), float64] */;
  %557 = reshape(%555, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %558 = @func_5173(%556, %557) /* ty=(Tensor[(4, 9, 8), uint64], Tensor[(14, 13, 4), float64], Tensor[(9, 12, 13), float64], Tensor[(117), float64], Tensor[(1404), float64], Tensor[(192), float32]) */;
  %559 = cast(%var_7870, dtype="int64") /* ty=Tensor[(1, 192), int64] */;
  %560 = cast(%var_7869, dtype="int64") /* ty=Tensor[(117, 1), int64] */;
  %561 = not_equal(%552, %553) /* ty=Tensor[(15, 16, 6), bool] */;
  %562 = %558.5;
  %563 = minimum(%559, %560) /* ty=Tensor[(117, 192), int64] */;
  (%561, %562, %563)
}

def @func_9248() -> (Tensor[(14, 13, 4), float64], Tensor[(14, 13, 4), float64], Tensor[(1056), float32], Tensor[(14, 13, 4), float64]) {
  %564 = @func_7071() /* ty=(Tensor[(14, 13, 4), float64],) */;
  %565 = cast(meta[relay.Constant][49] /* ty=Tensor[(1056), float32] */, dtype="float32") /* ty=Tensor[(1056), float32] */;
  %566 = cast(meta[relay.Constant][49] /* ty=Tensor[(1056), float32] */, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %567 = reshape(%565, newshape=[1056]) /* ty=Tensor[(1056), float32] */;
  %568 = reshape(%566, newshape=[1056]) /* ty=Tensor[(1056), float64] */;
  %569 = @func_6594(%567, %568) /* ty=(Tensor[(14, 13, 4), float64], Tensor[(11, 12, 8), float64], Tensor[(1056), float64], Tensor[(1056), int8]) */;
  %570 = @func_8319() /* ty=(Tensor[(14, 13, 4), float64], Tensor[(14, 13, 4), float64]) */;
  %571 = %564.0;
  %572 = %569.0;
  %573 = %570.1;
  (%571, %572, meta[relay.Constant][49] /* ty=Tensor[(1056), float32] */, %573)
}

def @func_7618() -> (Tensor[(14, 13, 4), float64],) {
  %574 = @func_6637() /* ty=Tensor[(14, 13, 4), float64] */;
  (%574,)
}

def @func_5442(%var_5389: Tensor[(1, 8, 15), float64]) -> (Tensor[(1, 8, 15), float32], Tensor[(1, 8, 15), float64], Tensor[(3, 1, 11), float32], Tensor[(33), float64], Tensor[(?, 8, 15), uint16], Tensor[(?, 8, 15), uint32]) {
  %575 = cast(%var_5389, dtype="float32") /* ty=Tensor[(1, 8, 15), float32] */;
  %576 = cast(%var_5389, dtype="float64") /* ty=Tensor[(1, 8, 15), float64] */;
  %577 = cast(meta[relay.Constant][50] /* ty=Tensor[(33), float64] */, dtype="float64") /* ty=Tensor[(33), float64] */;
  %578 = reshape(%577, newshape=[3, 1, 11]) /* ty=Tensor[(3, 1, 11), float64] */;
  %579 = @func_3347(%578) /* ty=(Tensor[(3, 1, 11), float32],) */;
  %580 = cast(%var_5389, dtype="float64") /* ty=Tensor[(1, 8, 15), float64] */;
  %581 = acosh(%580) /* ty=Tensor[(1, 8, 15), float64] */;
  %582 = cast(%581, dtype="bool") /* ty=Tensor[(1, 8, 15), bool] */;
  %583 = shape_of(%var_5389, dtype="int32") /* ty=Tensor[(3), int32] */;
  %584 = cast(%var_5389, dtype="bool") /* ty=Tensor[(1, 8, 15), bool] */;
  %585 = dyn.reshape(%582, %583, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %586 = less_equal(%584, %585) /* ty=Tensor[(?, 8, 15), bool] */;
  %587 = cast(%586, dtype="float64") /* ty=Tensor[(?, 8, 15), float64] */;
  %588 = sigmoid(%587) /* ty=Tensor[(?, 8, 15), float64] */;
  %589 = cast(%var_5389, dtype="uint16") /* ty=Tensor[(1, 8, 15), uint16] */;
  %590 = shape_of(%588, dtype="int32") /* ty=Tensor[(3), int32] */;
  %591 = cast(%588, dtype="uint16") /* ty=Tensor[(?, 8, 15), uint16] */;
  %592 = dyn.reshape(%589, %590, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %593 = cast(%581, dtype="uint32") /* ty=Tensor[(1, 8, 15), uint32] */;
  %594 = shape_of(%588, dtype="int32") /* ty=Tensor[(3), int32] */;
  %595 = cast(%588, dtype="uint32") /* ty=Tensor[(?, 8, 15), uint32] */;
  %596 = dyn.reshape(%593, %594, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %597 = tan(%575) /* ty=Tensor[(1, 8, 15), float32] */;
  %598 = erf(%576) /* ty=Tensor[(1, 8, 15), float64] */;
  %599 = %579.0;
  %600 = maximum(%591, %592) /* ty=Tensor[(?, 8, 15), uint16] */;
  %601 = logical_xor(%595, %596) /* ty=Tensor[(?, 8, 15), uint32] */;
  (%597, %598, %599, meta[relay.Constant][50] /* ty=Tensor[(33), float64] */, %600, %601)
}

def @func_3347(%var_3330: Tensor[(3, 1, 11), float64]) -> (Tensor[(3, 1, 11), float32],) {
  %602 = cast(%var_3330, dtype="float64") /* ty=Tensor[(3, 1, 11), float64] */;
  %603 = acosh(%602) /* ty=Tensor[(3, 1, 11), float64] */;
  %604 = cast(%603, dtype="float32") /* ty=Tensor[(3, 1, 11), float32] */;
  %605 = sigmoid(%604) /* ty=Tensor[(3, 1, 11), float32] */;
  (%605,)
}

def @func_6755() -> Tensor[(14, 13, 4), float64] {
  %606 = @func_6145() /* ty=(Tensor[(14, 13, 4), float64],) */;
  %606.0
}

def @func_7492() -> Tensor[(14, 13, 4), float64] {
  %607 = @func_7071() /* ty=(Tensor[(14, 13, 4), float64],) */;
  %607.0
}

def @func_7796() -> (Tensor[(4, 9, 8), uint64], Tensor[(14, 13, 4), float64]) {
  %608 = @func_4472() /* ty=Tensor[(4, 9, 8), uint64] */;
  %609 = @func_7576() /* ty=Tensor[(14, 13, 4), float64] */;
  (%608, %609)
}

def @func_8156() -> (Tensor[(14, 13, 4), float64], Tensor[(14, 13, 4), float64], Tensor[(14, 13, 4), float64]) {
  %610 = @func_4739() /* ty=(Tensor[(14, 13, 4), float64],) */;
  %611 = @func_7331() /* ty=(Tensor[(14, 13, 4), float64], Tensor[(9, 8, 10), float32]) */;
  %612 = @func_8038() /* ty=Tensor[(14, 13, 4), float64] */;
  %613 = %610.0;
  %614 = %611.0;
  (%612, %613, %614)
}

def @func_6817() -> (Tensor[(14, 13, 4), float64], Tensor[(9, 12, 13), float64], Tensor[(117), float64], Tensor[(1404), float64], Tensor[(1, 192), float32]) {
  %615 = @func_4591() /* ty=(Tensor[(14, 13, 4), float64],) */;
  %616 = cast(meta[relay.Constant][51] /* ty=Tensor[(117), float64] */, dtype="float64") /* ty=Tensor[(117), float64] */;
  %617 = cast(meta[relay.Constant][52] /* ty=Tensor[(1404), float64] */, dtype="float64") /* ty=Tensor[(1404), float64] */;
  %618 = cast(meta[relay.Constant][53] /* ty=Tensor[(1, 192), float32] */, dtype="float32") /* ty=Tensor[(1, 192), float32] */;
  %619 = reshape(%616, newshape=[9, 1, 13]) /* ty=Tensor[(9, 1, 13), float64] */;
  %620 = reshape(%617, newshape=[9, 12, 13]) /* ty=Tensor[(9, 12, 13), float64] */;
  %621 = reshape(%618, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %622 = @func_2732(%619, %620, %621) /* ty=(Tensor[(9, 12, 13), float64], Tensor[(4, 4, 12), int8], Tensor[(192), float32]) */;
  %623 = %615.0;
  %624 = %622.0;
  (%623, %624, meta[relay.Constant][51] /* ty=Tensor[(117), float64] */, meta[relay.Constant][52] /* ty=Tensor[(1404), float64] */, meta[relay.Constant][53] /* ty=Tensor[(1, 192), float32] */)
}

def @func_6238() -> (Tensor[(14, 13, 4), float64], Tensor[(14, 13, 4), float64]) {
  %625 = @func_5559() /* ty=(Tensor[(14, 13, 4), float64], Tensor[(30, 2), bool], Tensor[(14, 13, 4), float64]) */;
  %626 = @func_5382() /* ty=Tensor[(14, 13, 4), float64] */;
  %627 = %625.0;
  (%626, %627)
}

def @func_6267(%var_6255: Tensor[(5, 12, 6), float32], %var_6261: Tensor[(1, 336), int32], %var_6263: Tensor[(120), bool]) -> (Tensor[(5, 12, 6), float32], Tensor[(7, 16, 3), int32], Tensor[(1, 336), int32], Tensor[(3360), int64], Tensor[(120), bool], Tensor[(180), float32]) {
  %628 = cast(%var_6255, dtype="float32") /* ty=Tensor[(5, 12, 6), float32] */;
  %629 = cast(%var_6261, dtype="int32") /* ty=Tensor[(1, 336), int32] */;
  %630 = cast(meta[relay.Constant][54] /* ty=Tensor[(3360), int64] */, dtype="int64") /* ty=Tensor[(3360), int64] */;
  %631 = cast(%var_6263, dtype="bool") /* ty=Tensor[(120), bool] */;
  %632 = cast(meta[relay.Constant][55] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %633 = reshape(%629, newshape=[7, 16, 3]) /* ty=Tensor[(7, 16, 3), int32] */;
  %634 = reshape(%630, newshape=[3360]) /* ty=Tensor[(3360), int64] */;
  %635 = reshape(%631, newshape=[60, 2]) /* ty=Tensor[(60, 2), bool] */;
  %636 = reshape(%632, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %637 = @func_3588(%633, %634, %635, %636) /* ty=(Tensor[(7, 16, 3), int32], Tensor[(16, 15, 14), int64], Tensor[(3360), int64], Tensor[(1080), float32], Tensor[(180), float32], Tensor[(480), float32], Tensor[(60, 2), float32]) */;
  %638 = rsqrt(%628) /* ty=Tensor[(5, 12, 6), float32] */;
  %639 = %637.0;
  (%638, %639, %var_6261, meta[relay.Constant][54] /* ty=Tensor[(3360), int64] */, %var_6263, meta[relay.Constant][55] /* ty=Tensor[(180), float32] */)
}

def @func_2136(%var_2087: bool, %var_2088: Tensor[(1, 10, 12), bool], %var_2123: Tensor[(180, 1), float32], %var_2130: Tensor[(4, 10, 12), float32]) -> (Tensor[(1080), float32], Tensor[(40, 26), float64], Tensor[(1040), float64], Tensor[(180, 1), float32], Tensor[(1, 10, 12), float64], Tensor[(4, 10, 12), bool]) {
  %640 = cast(meta[relay.Constant][56] /* ty=Tensor[(40, 26), float64] */, dtype="float64") /* ty=Tensor[(40, 26), float64] */;
  %641 = reshape(%640, newshape=[13, 8, 10]) /* ty=Tensor[(13, 8, 10), float64] */;
  %642 = @func_486(%641) /* ty=(Tensor[(13, 8, 10), float64], Tensor[(1, 30), float64], Tensor[(1080), float32]) */;
  %643 = cast(%var_2123, dtype="float32") /* ty=Tensor[(180, 1), float32] */;
  %644 = cast(meta[relay.Constant][56] /* ty=Tensor[(40, 26), float64] */, dtype="float64") /* ty=Tensor[(40, 26), float64] */;
  %645 = reshape(%643, newshape=[6, 5, 6]) /* ty=Tensor[(6, 5, 6), float32] */;
  %646 = reshape(%644, newshape=[1040]) /* ty=Tensor[(1040), float64] */;
  %647 = @func_782(%645, %646) /* ty=(Tensor[(6, 5, 6), float64], Tensor[(13, 8, 10), float64], Tensor[(1040), float64], Tensor[(1080), float32]) */;
  %648 = cast(%var_2087, dtype="bool") /* ty=bool */;
  %649 = cast(%var_2088, dtype="bool") /* ty=Tensor[(1, 10, 12), bool] */;
  %650 = logical_and(%648, %649) /* ty=Tensor[(1, 10, 12), bool] */;
  %651 = cast(%650, dtype="float32") /* ty=Tensor[(1, 10, 12), float32] */;
  %652 = sqrt(%651) /* ty=Tensor[(1, 10, 12), float32] */;
  %653 = cast(%652, dtype="float64") /* ty=Tensor[(1, 10, 12), float64] */;
  %654 = cast(%652, dtype="bool") /* ty=Tensor[(1, 10, 12), bool] */;
  %655 = cast(%var_2130, dtype="bool") /* ty=Tensor[(4, 10, 12), bool] */;
  %656 = %642.2;
  %657 = %647.2;
  %658 = cosh(%653) /* ty=Tensor[(1, 10, 12), float64] */;
  %659 = greater(%654, %655) /* ty=Tensor[(4, 10, 12), bool] */;
  (%656, meta[relay.Constant][56] /* ty=Tensor[(40, 26), float64] */, %657, %var_2123, %658, %659)
}

def @func_2732(%var_2711: Tensor[(9, 1, 13), float64], %var_2712: Tensor[(9, 12, 13), float64], %var_2728: Tensor[(192), float32]) -> (Tensor[(9, 12, 13), float64], Tensor[(4, 4, 12), int8], Tensor[(192), float32]) {
  %660 = cast(%var_2711, dtype="float64") /* ty=Tensor[(9, 1, 13), float64] */;
  %661 = cast(%var_2712, dtype="float64") /* ty=Tensor[(9, 12, 13), float64] */;
  %662 = cast(%var_2728, dtype="float32") /* ty=Tensor[(192), float32] */;
  %663 = reshape(%662, newshape=[4, 4, 12]) /* ty=Tensor[(4, 4, 12), float32] */;
  %664 = @func_2205(%663) /* ty=(Tensor[(4, 4, 12), int8],) */;
  %665 = divide(%660, %661) /* ty=Tensor[(9, 12, 13), float64] */;
  %666 = %664.0;
  (%665, %666, %var_2728)
}

def @func_8086(%var_8071: Tensor[(2, 14, 2), float64]) -> Tensor[(2, 14, 2), float32] {
  %667 = cast(%var_8071, dtype="float64") /* ty=Tensor[(2, 14, 2), float64] */;
  %668 = tan(%667) /* ty=Tensor[(2, 14, 2), float64] */;
  %669 = cast(%668, dtype="float32") /* ty=Tensor[(2, 14, 2), float32] */;
  sin(%669) /* ty=Tensor[(2, 14, 2), float32] */
}

def @func_5101(%var_5091: Tensor[(2, 6, 15), int8]) -> Tensor[(2, 6, 15), int8] {
  %670 = cast(%var_5091, dtype="int8") /* ty=Tensor[(2, 6, 15), int8] */;
  %671 = shape_of(meta[relay.Constant][57] /* ty=Tensor[(2, 6, 15), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %672 = cast(meta[relay.Constant][57] /* ty=Tensor[(2, 6, 15), int8] */, dtype="int8") /* ty=Tensor[(2, 6, 15), int8] */;
  %673 = dyn.reshape(%670, %671, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  bitwise_and(%672, %673) /* ty=Tensor[(2, 6, 15), int8] */
}

def @func_6497() -> Tensor[(9, 8, 10), float32] {
  %674 = cast(meta[relay.Constant][58] /* ty=Tensor[(9, 8, 10), float32] */, dtype="float32") /* ty=Tensor[(9, 8, 10), float32] */;
  cosh(%674) /* ty=Tensor[(9, 8, 10), float32] */
}

def @func_8127() -> (Tensor[(14, 13, 4), float64],) {
  %675 = @func_4111() /* ty=Tensor[(14, 13, 4), float64] */;
  (%675,)
}

def @func_2356(%var_2318: Tensor[(3, 2, 16), float32], %var_2343: Tensor[(3360), int64]) -> (Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64], Tensor[(16, 15, 14), int64], Tensor[(3360), int64]) {
  %676 = cast(%var_2318, dtype="float32") /* ty=Tensor[(3, 2, 16), float32] */;
  %677 = cast(%var_2318, dtype="float64") /* ty=Tensor[(3, 2, 16), float64] */;
  %678 = cast(%var_2343, dtype="int64") /* ty=Tensor[(3360), int64] */;
  %679 = reshape(%678, newshape=[16, 15, 14]) /* ty=Tensor[(16, 15, 14), int64] */;
  %680 = @func_1699(%679) /* ty=(Tensor[(16, 15, 14), int64],) */;
  %681 = sigmoid(%676) /* ty=Tensor[(3, 2, 16), float32] */;
  %682 = atan(%677) /* ty=Tensor[(3, 2, 16), float64] */;
  %683 = %680.0;
  (%681, %682, %683, %var_2343)
}

def @func_1699(%var_1677: Tensor[(16, 15, 14), int64]) -> (Tensor[(16, 15, 14), int64],) {
  %684 = cast(%var_1677, dtype="int64") /* ty=Tensor[(16, 15, 14), int64] */;
  %685 = shape_of(meta[relay.Constant][59] /* ty=Tensor[(16, 15, 14), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %686 = cast(meta[relay.Constant][59] /* ty=Tensor[(16, 15, 14), int64] */, dtype="int64") /* ty=Tensor[(16, 15, 14), int64] */;
  %687 = dyn.reshape(%684, %685, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %688 = multiply(%686, %687) /* ty=Tensor[(16, 15, 14), int64] */;
  (%688,)
}

def @func_4472() -> Tensor[(4, 9, 8), uint64] {
  @func_4212() /* ty=Tensor[(4, 9, 8), uint64] */
}

def @func_8329() -> (Tensor[(14, 13, 4), float64],) {
  %689 = @func_7796() /* ty=(Tensor[(4, 9, 8), uint64], Tensor[(14, 13, 4), float64]) */;
  %690 = %689.1;
  (%690,)
}

def @func_8590(%var_8580: Tensor[(16, 14, 3), uint8], %var_8581: Tensor[(16, 14, 3), uint8]) -> Tensor[(16, 14, 3), uint8] {
  %691 = cast(%var_8581, dtype="uint8") /* ty=Tensor[(16, 14, 3), uint8] */;
  %692 = shape_of(%var_8580, dtype="int32") /* ty=Tensor[(3), int32] */;
  %693 = cast(%var_8580, dtype="uint8") /* ty=Tensor[(16, 14, 3), uint8] */;
  %694 = dyn.reshape(%691, %692, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  minimum(%693, %694) /* ty=Tensor[(16, 14, 3), uint8] */
}

def @func_6683() -> (Tensor[(14, 13, 4), float64],) {
  %695 = @func_6649() /* ty=(Tensor[(14, 13, 4), float64], Tensor[(14, 13, 4), float64]) */;
  %696 = %695.1;
  (%696,)
}

def @func_8795(%var_8759: Tensor[(312, 2), uint16]) -> (Tensor[(14, 13, 4), float64], Tensor[(13, 8, 10), float64], Tensor[(1040), float64], Tensor[(312, 2), float64], Tensor[(14, 13, 4), float64], Tensor[(3, 2, 10), float64], Tensor[(60), float64]) {
  %697 = @func_4458() /* ty=(Tensor[(14, 13, 4), float64],) */;
  %698 = cast(meta[relay.Constant][60] /* ty=Tensor[(312, 2), uint16] */, dtype="uint16") /* ty=Tensor[(312, 2), uint16] */;
  %699 = cast(meta[relay.Constant][61] /* ty=Tensor[(1040), float64] */, dtype="float64") /* ty=Tensor[(1040), float64] */;
  %700 = reshape(%698, newshape=[4, 12, 13]) /* ty=Tensor[(4, 12, 13), uint16] */;
  %701 = reshape(%699, newshape=[1040]) /* ty=Tensor[(1040), float64] */;
  %702 = @func_665(%700, %701) /* ty=(Tensor[(4, 12, 13), uint64], Tensor[(13, 8, 10), float64], Tensor[(1040), float64]) */;
  %703 = cast(%var_8759, dtype="float64") /* ty=Tensor[(312, 2), float64] */;
  %704 = shape_of(meta[relay.Constant][60] /* ty=Tensor[(312, 2), uint16] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %705 = cast(meta[relay.Constant][60] /* ty=Tensor[(312, 2), uint16] */, dtype="float64") /* ty=Tensor[(312, 2), float64] */;
  %706 = dyn.reshape(%703, %704, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %707 = floor_mod(%705, %706) /* ty=Tensor[(312, 2), float64] */;
  %708 = cast(%707, dtype="float64") /* ty=Tensor[(312, 2), float64] */;
  %709 = @func_4835() /* ty=(Tensor[(14, 13, 4), float64],) */;
  %710 = cast(meta[relay.Constant][62] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %711 = cast(meta[relay.Constant][62] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %712 = reshape(%710, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), float64] */;
  %713 = reshape(%711, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), float64] */;
  %714 = %697.0;
  %715 = %702.1;
  %716 = erf(%708) /* ty=Tensor[(312, 2), float64] */;
  %717 = %709.0;
  %718 = @func_3040(%712, %713) /* ty=Tensor[(3, 2, 10), float64] */;
  (%714, %715, meta[relay.Constant][61] /* ty=Tensor[(1040), float64] */, %716, %717, %718, meta[relay.Constant][62] /* ty=Tensor[(60), float64] */)
}

def @func_782(%var_741: Tensor[(6, 5, 6), float32], %var_757: Tensor[(1040), float64]) -> (Tensor[(6, 5, 6), float64], Tensor[(13, 8, 10), float64], Tensor[(1040), float64], Tensor[(1080), float32]) {
  %719 = cast(%var_741, dtype="float32") /* ty=Tensor[(6, 5, 6), float32] */;
  %720 = acos(%719) /* ty=Tensor[(6, 5, 6), float32] */;
  %721 = cast(%var_741, dtype="int8") /* ty=Tensor[(6, 5, 6), int8] */;
  %722 = shape_of(%720, dtype="int32") /* ty=Tensor[(3), int32] */;
  %723 = cast(%720, dtype="int8") /* ty=Tensor[(6, 5, 6), int8] */;
  %724 = dyn.reshape(%721, %722, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %725 = add(%723, %724) /* ty=Tensor[(6, 5, 6), int8] */;
  %726 = cast(%725, dtype="float64") /* ty=Tensor[(6, 5, 6), float64] */;
  %727 = cast(%var_757, dtype="float64") /* ty=Tensor[(1040), float64] */;
  %728 = reshape(%727, newshape=[13, 8, 10]) /* ty=Tensor[(13, 8, 10), float64] */;
  %729 = @func_486(%728) /* ty=(Tensor[(13, 8, 10), float64], Tensor[(1, 30), float64], Tensor[(1080), float32]) */;
  %730 = %729.0;
  %731 = cast(%730, dtype="float64") /* ty=Tensor[(13, 8, 10), float64] */;
  %732 = reshape(%731, newshape=[13, 8, 10]) /* ty=Tensor[(13, 8, 10), float64] */;
  %733 = @func_486(%732) /* ty=(Tensor[(13, 8, 10), float64], Tensor[(1, 30), float64], Tensor[(1080), float32]) */;
  %734 = log10(%726) /* ty=Tensor[(6, 5, 6), float64] */;
  %735 = %733.2;
  (%734, %730, %var_757, %735)
}

def @func_5304(%var_5297: Tensor[(14, 13, 4), float64]) -> (Tensor[(14, 13, 4), bool],) {
  %736 = @func_4835() /* ty=(Tensor[(14, 13, 4), float64],) */;
  %737 = %736.0;
  %738 = cast(%var_5297, dtype="bool") /* ty=Tensor[(14, 13, 4), bool] */;
  %739 = shape_of(%737, dtype="int32") /* ty=Tensor[(3), int32] */;
  %740 = cast(%737, dtype="bool") /* ty=Tensor[(14, 13, 4), bool] */;
  %741 = dyn.reshape(%738, %739, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %742 = logical_and(%740, %741) /* ty=Tensor[(14, 13, 4), bool] */;
  (%742,)
}

def @func_6649() -> (Tensor[(14, 13, 4), float64], Tensor[(14, 13, 4), float64]) {
  %743 = @func_4835() /* ty=(Tensor[(14, 13, 4), float64],) */;
  %744 = %743.0;
  %745 = @func_4111() /* ty=Tensor[(14, 13, 4), float64] */;
  (%744, %745)
}

def @func_3588(%var_3541: Tensor[(7, 16, 3), int32], %var_3549: Tensor[(3360), int64], %var_3564: Tensor[(60, 2), bool], %var_3565: Tensor[(180), float32]) -> (Tensor[(7, 16, 3), int32], Tensor[(16, 15, 14), int64], Tensor[(3360), int64], Tensor[(1080), float32], Tensor[(180), float32], Tensor[(480), float32], Tensor[(60, 2), float32]) {
  %746 = cast(1 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %747 = cast(%var_3541, dtype="int32") /* ty=Tensor[(7, 16, 3), int32] */;
  %748 = cast(%var_3549, dtype="int64") /* ty=Tensor[(3360), int64] */;
  %749 = reshape(%748, newshape=[16, 15, 14]) /* ty=Tensor[(16, 15, 14), int64] */;
  %750 = @func_1699(%749) /* ty=(Tensor[(16, 15, 14), int64],) */;
  %751 = cast(1 /* ty=int32 */, dtype="bool") /* ty=bool */;
  %752 = cast(%var_3564, dtype="bool") /* ty=Tensor[(60, 2), bool] */;
  %753 = cast(%var_3565, dtype="float32") /* ty=Tensor[(180), float32] */;
  %754 = cast(meta[relay.Constant][63] /* ty=Tensor[(480), float32] */, dtype="float32") /* ty=Tensor[(480), float32] */;
  %755 = reshape(%751, newshape=[]) /* ty=bool */;
  %756 = reshape(%752, newshape=[1, 10, 12]) /* ty=Tensor[(1, 10, 12), bool] */;
  %757 = reshape(%753, newshape=[180, 1]) /* ty=Tensor[(180, 1), float32] */;
  %758 = reshape(%754, newshape=[4, 10, 12]) /* ty=Tensor[(4, 10, 12), float32] */;
  %759 = @func_2136(%755, %756, %757, %758) /* ty=(Tensor[(1080), float32], Tensor[(40, 26), float64], Tensor[(1040), float64], Tensor[(180, 1), float32], Tensor[(1, 10, 12), float64], Tensor[(4, 10, 12), bool]) */;
  %760 = cast(%var_3564, dtype="float32") /* ty=Tensor[(60, 2), float32] */;
  %761 = cast(1 /* ty=int32 */, dtype="float32") /* ty=float32 */;
  %762 = multiply(%746, %747) /* ty=Tensor[(7, 16, 3), int32] */;
  %763 = %750.0;
  %764 = %759.0;
  %765 = floor_mod(%760, %761) /* ty=Tensor[(60, 2), float32] */;
  (%762, %763, %var_3549, %764, %var_3565, meta[relay.Constant][63] /* ty=Tensor[(480), float32] */, %765)
}

def @func_4212() -> Tensor[(4, 9, 8), uint64] {
  %766 = cast(meta[relay.Constant][64] /* ty=Tensor[(4, 9, 1), uint64] */, dtype="uint64") /* ty=Tensor[(4, 9, 1), uint64] */;
  %767 = cast(meta[relay.Constant][65] /* ty=Tensor[(4, 9, 8), uint64] */, dtype="uint64") /* ty=Tensor[(4, 9, 8), uint64] */;
  right_shift(%766, %767) /* ty=Tensor[(4, 9, 8), uint64] */
}

def @func_486(%var_471: Tensor[(13, 8, 10), float64]) -> (Tensor[(13, 8, 10), float64], Tensor[(1, 30), float64], Tensor[(1080), float32]) {
  %768 = cast(%var_471, dtype="float64") /* ty=Tensor[(13, 8, 10), float64] */;
  %769 = cast(meta[relay.Constant][66] /* ty=Tensor[(1080), float32] */, dtype="float32") /* ty=Tensor[(1080), float32] */;
  %770 = reshape(%769, newshape=[9, 12, 10]) /* ty=Tensor[(9, 12, 10), float32] */;
  %771 = @func_296(%770) /* ty=(Tensor[(1, 6, 5), float64], Tensor[(1, 30), float64], Tensor[(9, 12, 10), float64], Tensor[(1, 6, 5), float64], Tensor[(1, 6, 5), float64]) */;
  %772 = sigmoid(%768) /* ty=Tensor[(13, 8, 10), float64] */;
  %773 = %771.1;
  (%772, %773, meta[relay.Constant][66] /* ty=Tensor[(1080), float32] */)
}

def @func_7522() -> Tensor[(14, 13, 4), float64] {
  @func_4323() /* ty=Tensor[(14, 13, 4), float64] */
}

def @func_5668() -> Tensor[(4, 9, 8), float64] {
  %774 = @func_4472() /* ty=Tensor[(4, 9, 8), uint64] */;
  %775 = cast(%774, dtype="float64") /* ty=Tensor[(4, 9, 8), float64] */;
  acos(%775) /* ty=Tensor[(4, 9, 8), float64] */
}

def @func_844(%var_798: Tensor[(15, 7, 3), float64], %var_828: Tensor[(1, 180), float32]) -> (Tensor[(15, 7, 3), float64], Tensor[(6, 5, 6), float64], Tensor[(1, 180), float32], Tensor[(4, 260), float64], Tensor[(1, 6, 5), float64], Tensor[(1080), float32], Tensor[(1080), float32]) {
  %776 = cast(%var_798, dtype="float64") /* ty=Tensor[(15, 7, 3), float64] */;
  %777 = cast(%var_828, dtype="float32") /* ty=Tensor[(1, 180), float32] */;
  %778 = cast(meta[relay.Constant][67] /* ty=Tensor[(4, 260), float64] */, dtype="float64") /* ty=Tensor[(4, 260), float64] */;
  %779 = reshape(%777, newshape=[6, 5, 6]) /* ty=Tensor[(6, 5, 6), float32] */;
  %780 = reshape(%778, newshape=[1040]) /* ty=Tensor[(1040), float64] */;
  %781 = @func_782(%779, %780) /* ty=(Tensor[(6, 5, 6), float64], Tensor[(13, 8, 10), float64], Tensor[(1040), float64], Tensor[(1080), float32]) */;
  %782 = cast(meta[relay.Constant][68] /* ty=Tensor[(1080), float32] */, dtype="float32") /* ty=Tensor[(1080), float32] */;
  %783 = reshape(%782, newshape=[9, 12, 10]) /* ty=Tensor[(9, 12, 10), float32] */;
  %784 = @func_296(%783) /* ty=(Tensor[(1, 6, 5), float64], Tensor[(1, 30), float64], Tensor[(9, 12, 10), float64], Tensor[(1, 6, 5), float64], Tensor[(1, 6, 5), float64]) */;
  %785 = cast(meta[relay.Constant][67] /* ty=Tensor[(4, 260), float64] */, dtype="float64") /* ty=Tensor[(4, 260), float64] */;
  %786 = reshape(%785, newshape=[13, 8, 10]) /* ty=Tensor[(13, 8, 10), float64] */;
  %787 = @func_486(%786) /* ty=(Tensor[(13, 8, 10), float64], Tensor[(1, 30), float64], Tensor[(1080), float32]) */;
  %788 = sigmoid(%776) /* ty=Tensor[(15, 7, 3), float64] */;
  %789 = %781.0;
  %790 = %784.3;
  %791 = %787.2;
  (%788, %789, %var_828, meta[relay.Constant][67] /* ty=Tensor[(4, 260), float64] */, %790, meta[relay.Constant][68] /* ty=Tensor[(1080), float32] */, %791)
}

def @func_5783() -> (Tensor[(4, 9, 8), float32],) {
  %792 = @func_4472() /* ty=Tensor[(4, 9, 8), uint64] */;
  %793 = cast(%792, dtype="float32") /* ty=Tensor[(4, 9, 8), float32] */;
  %794 = log10(%793) /* ty=Tensor[(4, 9, 8), float32] */;
  (%794,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_4900(%var_4862: Tensor[(1056), float64]) -> (Tensor[(14, 13, 4), float64], Tensor[(11, 12, 8), float64], Tensor[(1056), float64], Tensor[(11, 12, 8), float64], Tensor[(14, 13, 4), float64]) {
  %0 = cast(%var_4862, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %1 = cast(%var_4862, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %2 = reshape(%0, newshape=[11, 12, 8]) /* ty=Tensor[(11, 12, 8), float64] */;
  %3 = reshape(%1, newshape=[11, 12, 8]) /* ty=Tensor[(11, 12, 8), float64] */;
  %4 = @func_4618(%2, %3) /* ty=Tensor[(11, 12, 8), float64] */;
  %5 = cast(%4, dtype="float64") /* ty=Tensor[(11, 12, 8), float64] */;
  %6 = cast(%4, dtype="float64") /* ty=Tensor[(11, 12, 8), float64] */;
  %7 = reshape(%5, newshape=[11, 12, 8]) /* ty=Tensor[(11, 12, 8), float64] */;
  %8 = reshape(%6, newshape=[11, 12, 8]) /* ty=Tensor[(11, 12, 8), float64] */;
  %9 = @func_4822() /* ty=(Tensor[(14, 13, 4), float64], Tensor[(14, 13, 4), float64]) */;
  %10 = @func_4111() /* ty=Tensor[(14, 13, 4), float64] */;
  %11 = @func_4618(%7, %8) /* ty=Tensor[(11, 12, 8), float64] */;
  %12 = %9.0;
  (%10, %4, %var_4862, %11, %12)
}

def @func_2208(%var_2206: Tensor[(4, 4, 12), float32]) -> (Tensor[(4, 4, 12), int8],) {
  @func_2205(%var_2206) /* ty=(Tensor[(4, 4, 12), int8],) */
}

def @func_3784(%var_3782: Tensor[(15, 11, 6), int8], %var_3783: Tensor[(15, 11, 6), int8]) -> Tensor[(15, 11, 6), int8] {
  %17 = fn (%var_3776: Tensor[(15, 11, 6), int8], %var_3777: Tensor[(15, 11, 6), int8]) -> Tensor[(15, 11, 6), int8] {
    %13 = cast(%var_3777, dtype="int8") /* ty=Tensor[(15, 11, 6), int8] */;
    %14 = shape_of(%var_3776, dtype="int32") /* ty=Tensor[(3), int32] */;
    %15 = cast(%var_3776, dtype="int8") /* ty=Tensor[(15, 11, 6), int8] */;
    %16 = dyn.reshape(%13, %14, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    add(%15, %16) /* ty=Tensor[(15, 11, 6), int8] */
  };
  %17(%var_3782, %var_3783) /* ty=Tensor[(15, 11, 6), int8] */
}

def @func_4387(%var_4385: Tensor[(336), int32], %var_4386: Tensor[(120), bool]) -> (Tensor[(180), float32], Tensor[(336), int32], Tensor[(3360), int64], Tensor[(120), bool], Tensor[(180), float32], Tensor[(14, 13, 4), float64]) {
  @func_4383(%var_4385, %var_4386) /* ty=(Tensor[(180), float32], Tensor[(336), int32], Tensor[(3360), int64], Tensor[(120), bool], Tensor[(180), float32], Tensor[(14, 13, 4), float64]) */
}

def @func_6047() -> Tensor[(4, 9, 8), float32] {
  %18 = @func_5783() /* ty=(Tensor[(4, 9, 8), float32],) */;
  %18.0
}

def @func_7798() -> (Tensor[(4, 9, 8), uint64], Tensor[(14, 13, 4), float64]) {
  @func_7796() /* ty=(Tensor[(4, 9, 8), uint64], Tensor[(14, 13, 4), float64]) */
}

def @func_4621(%var_4619: Tensor[(11, 12, 8), float64], %var_4620: Tensor[(11, 12, 8), float64]) -> Tensor[(11, 12, 8), float64] {
  %23 = fn (%var_4613: Tensor[(11, 12, 8), float64], %var_4614: Tensor[(11, 12, 8), float64]) -> Tensor[(11, 12, 8), float64] {
    %19 = cast(%var_4614, dtype="float64") /* ty=Tensor[(11, 12, 8), float64] */;
    %20 = shape_of(%var_4613, dtype="int32") /* ty=Tensor[(3), int32] */;
    %21 = cast(%var_4613, dtype="float64") /* ty=Tensor[(11, 12, 8), float64] */;
    %22 = dyn.reshape(%19, %20, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    mod(%21, %22) /* ty=Tensor[(11, 12, 8), float64] */
  };
  %23(%var_4619, %var_4620) /* ty=Tensor[(11, 12, 8), float64] */
}

def @func_8493(%var_8492: Tensor[(180), float32]) -> (Tensor[(14, 13, 4), float64], Tensor[(14, 13, 4), float64], Tensor[(40, 26), float64], bool, Tensor[(120), bool], Tensor[(180), float32], Tensor[(480), float32]) {
  %37 = fn (%var_8484: Tensor[(180), float32]) -> (Tensor[(14, 13, 4), float64], Tensor[(14, 13, 4), float64], Tensor[(40, 26), float64], bool, Tensor[(120), bool], Tensor[(180), float32], Tensor[(480), float32]) {
    %24 = @func_8127() /* ty=(Tensor[(14, 13, 4), float64],) */;
    %25 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
    %26 = cast(meta[relay.Constant][0] /* ty=Tensor[(120), bool] */, dtype="bool") /* ty=Tensor[(120), bool] */;
    %27 = cast(%var_8484, dtype="float32") /* ty=Tensor[(180), float32] */;
    %28 = cast(meta[relay.Constant][1] /* ty=Tensor[(480), float32] */, dtype="float32") /* ty=Tensor[(480), float32] */;
    %29 = reshape(%25, newshape=[]) /* ty=bool */;
    %30 = reshape(%26, newshape=[1, 10, 12]) /* ty=Tensor[(1, 10, 12), bool] */;
    %31 = reshape(%27, newshape=[180, 1]) /* ty=Tensor[(180, 1), float32] */;
    %32 = reshape(%28, newshape=[4, 10, 12]) /* ty=Tensor[(4, 10, 12), float32] */;
    %33 = @func_2136(%29, %30, %31, %32) /* ty=(Tensor[(1080), float32], Tensor[(40, 26), float64], Tensor[(1040), float64], Tensor[(180, 1), float32], Tensor[(1, 10, 12), float64], Tensor[(4, 10, 12), bool]) */;
    %34 = @func_7522() /* ty=Tensor[(14, 13, 4), float64] */;
    %35 = %24.0;
    %36 = %33.1;
    (%34, %35, %36, False /* ty=bool */, meta[relay.Constant][0] /* ty=Tensor[(120), bool] */, %var_8484, meta[relay.Constant][1] /* ty=Tensor[(480), float32] */)
  };
  %37(%var_8492) /* ty=(Tensor[(14, 13, 4), float64], Tensor[(14, 13, 4), float64], Tensor[(40, 26), float64], bool, Tensor[(120), bool], Tensor[(180), float32], Tensor[(480), float32]) */
}

def @func_786(%var_784: Tensor[(6, 5, 6), float32], %var_785: Tensor[(1040), float64]) -> (Tensor[(6, 5, 6), float64], Tensor[(13, 8, 10), float64], Tensor[(1040), float64], Tensor[(1080), float32]) {
  @func_782(%var_784, %var_785) /* ty=(Tensor[(6, 5, 6), float64], Tensor[(13, 8, 10), float64], Tensor[(1040), float64], Tensor[(1080), float32]) */
}

def @func_9102(%var_9014: Tensor[(4, 11, 6), bool], %var_9015: Tensor[(4, 11, 6), bool]) -> (Tensor[(4, 11, 6), bool], Tensor[(14, 13, 4), float64], Tensor[(1, 6, 5), float64], Tensor[(315), float64], Tensor[(180), float32], Tensor[(14, 13, 4), float64], Tensor[(4, 11, 6), float64]) {
  %38 = cast(%var_9015, dtype="bool") /* ty=Tensor[(4, 11, 6), bool] */;
  %39 = shape_of(%var_9014, dtype="int32") /* ty=Tensor[(3), int32] */;
  %40 = cast(%var_9014, dtype="bool") /* ty=Tensor[(4, 11, 6), bool] */;
  %41 = dyn.reshape(%38, %39, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %42 = logical_or(%40, %41) /* ty=Tensor[(4, 11, 6), bool] */;
  %43 = cast(%var_9015, dtype="bool") /* ty=Tensor[(4, 11, 6), bool] */;
  %44 = shape_of(%42, dtype="int32") /* ty=Tensor[(3), int32] */;
  %45 = cast(%42, dtype="bool") /* ty=Tensor[(4, 11, 6), bool] */;
  %46 = dyn.reshape(%43, %44, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %47 = @func_7676() /* ty=(Tensor[(14, 13, 4), float64], Tensor[(14, 13, 4), float64]) */;
  %48 = cast(meta[relay.Constant][2] /* ty=Tensor[(315), float64] */, dtype="float64") /* ty=Tensor[(315), float64] */;
  %49 = cast(meta[relay.Constant][3] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %50 = reshape(%48, newshape=[15, 7, 3]) /* ty=Tensor[(15, 7, 3), float64] */;
  %51 = reshape(%49, newshape=[1, 180]) /* ty=Tensor[(1, 180), float32] */;
  %52 = @func_844(%50, %51) /* ty=(Tensor[(15, 7, 3), float64], Tensor[(6, 5, 6), float64], Tensor[(1, 180), float32], Tensor[(4, 260), float64], Tensor[(1, 6, 5), float64], Tensor[(1080), float32], Tensor[(1080), float32]) */;
  %53 = cast(meta[relay.Constant][3] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %54 = reshape(%53, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %55 = @func_8491(%54) /* ty=(Tensor[(14, 13, 4), float64], Tensor[(14, 13, 4), float64], Tensor[(40, 26), float64], bool, Tensor[(120), bool], Tensor[(180), float32], Tensor[(480), float32]) */;
  %56 = cast(%42, dtype="float64") /* ty=Tensor[(4, 11, 6), float64] */;
  %57 = greater_equal(%45, %46) /* ty=Tensor[(4, 11, 6), bool] */;
  %58 = %47.1;
  %59 = %52.4;
  %60 = %55.1;
  %61 = exp(%56) /* ty=Tensor[(4, 11, 6), float64] */;
  (%57, %58, %59, meta[relay.Constant][2] /* ty=Tensor[(315), float64] */, meta[relay.Constant][3] /* ty=Tensor[(180), float32] */, %60, %61)
}

def @func_4404() -> Tensor[(14, 13, 4), float64] {
  @func_4323() /* ty=Tensor[(14, 13, 4), float64] */
}

def @func_4684(%var_4682: Tensor[(3360), int64]) -> (Tensor[(4, 9, 8), uint64], Tensor[(1, 6, 5), float64], Tensor[(1080), float32], Tensor[(16, 15, 14), int64], Tensor[(96), float32], Tensor[(3360), int64]) {
  @func_4681(%var_4682) /* ty=(Tensor[(4, 9, 8), uint64], Tensor[(1, 6, 5), float64], Tensor[(1080), float32], Tensor[(16, 15, 14), int64], Tensor[(96), float32], Tensor[(3360), int64]) */
}

def @func_6146() -> (Tensor[(14, 13, 4), float64],) {
  %63 = fn () -> (Tensor[(14, 13, 4), float64],) {
    %62 = @func_4323() /* ty=Tensor[(14, 13, 4), float64] */;
    (%62,)
  };
  %63() /* ty=(Tensor[(14, 13, 4), float64],) */
}

def @func_5560() -> (Tensor[(14, 13, 4), float64], Tensor[(30, 2), bool], Tensor[(14, 13, 4), float64]) {
  %78 = fn () -> (Tensor[(14, 13, 4), float64], Tensor[(30, 2), bool], Tensor[(14, 13, 4), float64]) {
    %64 = @func_4739() /* ty=(Tensor[(14, 13, 4), float64],) */;
    %65 = cast(meta[relay.Constant][4] /* ty=Tensor[(30, 2), float64] */, dtype="float64") /* ty=Tensor[(30, 2), float64] */;
    %66 = cast(meta[relay.Constant][4] /* ty=Tensor[(30, 2), float64] */, dtype="float64") /* ty=Tensor[(30, 2), float64] */;
    %67 = reshape(%65, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), float64] */;
    %68 = reshape(%66, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), float64] */;
    %69 = @func_3040(%67, %68) /* ty=Tensor[(3, 2, 10), float64] */;
    %70 = cast(%69, dtype="bool") /* ty=Tensor[(3, 2, 10), bool] */;
    %71 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(30, 2), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %72 = cast(meta[relay.Constant][4] /* ty=Tensor[(30, 2), float64] */, dtype="bool") /* ty=Tensor[(30, 2), bool] */;
    %73 = dyn.reshape(%70, %71, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %74 = @func_4739() /* ty=(Tensor[(14, 13, 4), float64],) */;
    %75 = %64.0;
    %76 = less(%72, %73) /* ty=Tensor[(30, 2), bool] */;
    %77 = %74.0;
    (%75, %76, %77)
  };
  %78() /* ty=(Tensor[(14, 13, 4), float64], Tensor[(30, 2), bool], Tensor[(14, 13, 4), float64]) */
}

def @func_5383() -> Tensor[(14, 13, 4), float64] {
  %80 = fn () -> Tensor[(14, 13, 4), float64] {
    %79 = @func_4591() /* ty=(Tensor[(14, 13, 4), float64],) */;
    %79.0
  };
  %80() /* ty=Tensor[(14, 13, 4), float64] */
}

def @func_5306(%var_5305: Tensor[(14, 13, 4), float64]) -> (Tensor[(14, 13, 4), bool],) {
  %88 = fn (%var_5297: Tensor[(14, 13, 4), float64]) -> (Tensor[(14, 13, 4), bool],) {
    %81 = @func_4835() /* ty=(Tensor[(14, 13, 4), float64],) */;
    %82 = %81.0;
    %83 = cast(%var_5297, dtype="bool") /* ty=Tensor[(14, 13, 4), bool] */;
    %84 = shape_of(%82, dtype="int32") /* ty=Tensor[(3), int32] */;
    %85 = cast(%82, dtype="bool") /* ty=Tensor[(14, 13, 4), bool] */;
    %86 = dyn.reshape(%83, %84, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %87 = logical_and(%85, %86) /* ty=Tensor[(14, 13, 4), bool] */;
    (%87,)
  };
  %88(%var_5305) /* ty=(Tensor[(14, 13, 4), bool],) */
}

def @func_5994() -> (Tensor[(4, 9, 8), uint64], Tensor[(14, 13, 4), float64]) {
  %91 = fn () -> (Tensor[(4, 9, 8), uint64], Tensor[(14, 13, 4), float64]) {
    %89 = @func_4212() /* ty=Tensor[(4, 9, 8), uint64] */;
    %90 = @func_4404() /* ty=Tensor[(14, 13, 4), float64] */;
    (%89, %90)
  };
  %91() /* ty=(Tensor[(4, 9, 8), uint64], Tensor[(14, 13, 4), float64]) */
}

def @func_6756() -> Tensor[(14, 13, 4), float64] {
  %93 = fn () -> Tensor[(14, 13, 4), float64] {
    %92 = @func_6145() /* ty=(Tensor[(14, 13, 4), float64],) */;
    %92.0
  };
  %93() /* ty=Tensor[(14, 13, 4), float64] */
}

def @func_6771() -> (Tensor[(14, 13, 4), float64],) {
  %94 = @func_4835() /* ty=(Tensor[(14, 13, 4), float64],) */;
  %95 = %94.0;
  (%95,)
}

def @func_8723() -> Tensor[(14, 13, 4), float64] {
  @func_8721() /* ty=Tensor[(14, 13, 4), float64] */
}

def @func_6598(%var_6596: Tensor[(1056), float32], %var_6597: Tensor[(1056), float64]) -> (Tensor[(14, 13, 4), float64], Tensor[(11, 12, 8), float64], Tensor[(1056), float64], Tensor[(1056), int8]) {
  @func_6594(%var_6596, %var_6597) /* ty=(Tensor[(14, 13, 4), float64], Tensor[(11, 12, 8), float64], Tensor[(1056), float64], Tensor[(1056), int8]) */
}

def @func_6773() -> (Tensor[(14, 13, 4), float64],) {
  @func_6771() /* ty=(Tensor[(14, 13, 4), float64],) */
}

def @func_6454(%var_6452: Tensor[(192), float32], %var_6453: Tensor[(3, 40), bool]) -> (Tensor[(14, 13, 4), float64], Tensor[(117), float64], Tensor[(1404), float64], Tensor[(4, 4, 12), float32], Tensor[(1, 6, 5), float64], Tensor[(30), float64], Tensor[(4, 9, 8), float32], Tensor[(7, 16, 3), int32], Tensor[(360), float32], Tensor[(4, 84), int32], Tensor[(3, 40), bool]) {
  %123 = fn (%var_6414: Tensor[(192), float32], %var_6443: Tensor[(3, 40), bool]) -> (Tensor[(14, 13, 4), float64], Tensor[(117), float64], Tensor[(1404), float64], Tensor[(4, 4, 12), float32], Tensor[(1, 6, 5), float64], Tensor[(30), float64], Tensor[(4, 9, 8), float32], Tensor[(7, 16, 3), int32], Tensor[(360), float32], Tensor[(4, 84), int32], Tensor[(3, 40), bool]) {
    %96 = @func_6145() /* ty=(Tensor[(14, 13, 4), float64],) */;
    %97 = cast(meta[relay.Constant][5] /* ty=Tensor[(117), float64] */, dtype="float64") /* ty=Tensor[(117), float64] */;
    %98 = cast(meta[relay.Constant][6] /* ty=Tensor[(1404), float64] */, dtype="float64") /* ty=Tensor[(1404), float64] */;
    %99 = cast(%var_6414, dtype="float32") /* ty=Tensor[(192), float32] */;
    %100 = reshape(%97, newshape=[9, 1, 13]) /* ty=Tensor[(9, 1, 13), float64] */;
    %101 = reshape(%98, newshape=[9, 12, 13]) /* ty=Tensor[(9, 12, 13), float64] */;
    %102 = reshape(%99, newshape=[192]) /* ty=Tensor[(192), float32] */;
    %103 = @func_2732(%100, %101, %102) /* ty=(Tensor[(9, 12, 13), float64], Tensor[(4, 4, 12), int8], Tensor[(192), float32]) */;
    %104 = %103.1;
    %105 = cast(%var_6414, dtype="float32") /* ty=Tensor[(192), float32] */;
    %106 = shape_of(%104, dtype="int32") /* ty=Tensor[(3), int32] */;
    %107 = cast(%104, dtype="float32") /* ty=Tensor[(4, 4, 12), float32] */;
    %108 = dyn.reshape(%105, %106, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %109 = cast(meta[relay.Constant][7] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
    %110 = reshape(%109, newshape=[1, 6, 5]) /* ty=Tensor[(1, 6, 5), float64] */;
    %111 = cast(meta[relay.Constant][8] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
    %112 = cast(meta[relay.Constant][9] /* ty=Tensor[(4, 84), int32] */, dtype="int32") /* ty=Tensor[(4, 84), int32] */;
    %113 = cast(%var_6443, dtype="bool") /* ty=Tensor[(3, 40), bool] */;
    %114 = reshape(%111, newshape=[5, 12, 6]) /* ty=Tensor[(5, 12, 6), float32] */;
    %115 = reshape(%112, newshape=[1, 336]) /* ty=Tensor[(1, 336), int32] */;
    %116 = reshape(%113, newshape=[120]) /* ty=Tensor[(120), bool] */;
    %117 = @func_6267(%114, %115, %116) /* ty=(Tensor[(5, 12, 6), float32], Tensor[(7, 16, 3), int32], Tensor[(1, 336), int32], Tensor[(3360), int64], Tensor[(120), bool], Tensor[(180), float32]) */;
    %118 = %96.0;
    %119 = power(%107, %108) /* ty=Tensor[(4, 4, 12), float32] */;
    %120 = @func_126(%110) /* ty=Tensor[(1, 6, 5), float64] */;
    %121 = @func_6047() /* ty=Tensor[(4, 9, 8), float32] */;
    %122 = %117.1;
    (%118, meta[relay.Constant][5] /* ty=Tensor[(117), float64] */, meta[relay.Constant][6] /* ty=Tensor[(1404), float64] */, %119, %120, meta[relay.Constant][7] /* ty=Tensor[(30), float64] */, %121, %122, meta[relay.Constant][8] /* ty=Tensor[(360), float32] */, meta[relay.Constant][9] /* ty=Tensor[(4, 84), int32] */, %var_6443)
  };
  %123(%var_6452, %var_6453) /* ty=(Tensor[(14, 13, 4), float64], Tensor[(117), float64], Tensor[(1404), float64], Tensor[(4, 4, 12), float32], Tensor[(1, 6, 5), float64], Tensor[(30), float64], Tensor[(4, 9, 8), float32], Tensor[(7, 16, 3), int32], Tensor[(360), float32], Tensor[(4, 84), int32], Tensor[(3, 40), bool]) */
}

def @func_8408() -> (Tensor[(14, 13, 4), float64], Tensor[(14, 13, 4), float64], Tensor[(1040), float64], Tensor[(1, 1040), float64], Tensor[(420), float64]) {
  %135 = fn () -> (Tensor[(14, 13, 4), float64], Tensor[(14, 13, 4), float64], Tensor[(1040), float64], Tensor[(1, 1040), float64], Tensor[(420), float64]) {
    %124 = @func_4739() /* ty=(Tensor[(14, 13, 4), float64],) */;
    %125 = %124.0;
    %126 = cast(%125, dtype="float64") /* ty=Tensor[(14, 13, 4), float64] */;
    %127 = cast(meta[relay.Constant][10] /* ty=Tensor[(1, 1040), float64] */, dtype="float64") /* ty=Tensor[(1, 1040), float64] */;
    %128 = cast(meta[relay.Constant][11] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
    %129 = reshape(%127, newshape=[1040]) /* ty=Tensor[(1040), float64] */;
    %130 = reshape(%128, newshape=[14, 30]) /* ty=Tensor[(14, 30), float64] */;
    %131 = @func_6191(%129, %130) /* ty=(Tensor[(4, 9, 8), uint64], Tensor[(1040), float64], Tensor[(14, 30), float32]) */;
    %132 = @func_7492() /* ty=Tensor[(14, 13, 4), float64] */;
    %133 = cosh(%126) /* ty=Tensor[(14, 13, 4), float64] */;
    %134 = %131.1;
    (%132, %133, %134, meta[relay.Constant][10] /* ty=Tensor[(1, 1040), float64] */, meta[relay.Constant][11] /* ty=Tensor[(420), float64] */)
  };
  %135() /* ty=(Tensor[(14, 13, 4), float64], Tensor[(14, 13, 4), float64], Tensor[(1040), float64], Tensor[(1, 1040), float64], Tensor[(420), float64]) */
}

def @func_5913(%var_5911: Tensor[(1, 840), float32], %var_5912: Tensor[(624), uint16]) -> (Tensor[(14, 13, 4), float64], Tensor[(1, 840), float32], Tensor[(624), uint16], Tensor[(1040), float32], Tensor[(1040), float64]) {
  @func_5909(%var_5911, %var_5912) /* ty=(Tensor[(14, 13, 4), float64], Tensor[(1, 840), float32], Tensor[(624), uint16], Tensor[(1040), float32], Tensor[(1040), float64]) */
}

def @func_5744(%var_5741: Tensor[(15, 16, 5), float64], %var_5742: Tensor[(1056, 1), float64], %var_5743: Tensor[(3360), int64]) -> (Tensor[(1056), float64], Tensor[(1056, 1), float64], Tensor[(15, 16, 5), float32], Tensor[(16, 15, 14), int64], Tensor[(3360), int64]) {
  %148 = fn (%var_5717: Tensor[(15, 16, 5), float64], %var_5723: Tensor[(1056, 1), float64], %var_5735: Tensor[(3360), int64]) -> (Tensor[(1056), float64], Tensor[(1056, 1), float64], Tensor[(15, 16, 5), float32], Tensor[(16, 15, 14), int64], Tensor[(3360), int64]) {
    %136 = cast(%var_5723, dtype="float64") /* ty=Tensor[(1056, 1), float64] */;
    %137 = reshape(%136, newshape=[1056]) /* ty=Tensor[(1056), float64] */;
    %138 = @func_4900(%137) /* ty=(Tensor[(14, 13, 4), float64], Tensor[(11, 12, 8), float64], Tensor[(1056), float64], Tensor[(11, 12, 8), float64], Tensor[(14, 13, 4), float64]) */;
    %139 = cast(%var_5717, dtype="float64") /* ty=Tensor[(15, 16, 5), float64] */;
    %140 = sin(%139) /* ty=Tensor[(15, 16, 5), float64] */;
    %141 = cast(%140, dtype="float32") /* ty=Tensor[(15, 16, 5), float32] */;
    %142 = cast(%var_5735, dtype="int64") /* ty=Tensor[(3360), int64] */;
    %143 = reshape(%142, newshape=[16, 15, 14]) /* ty=Tensor[(16, 15, 14), int64] */;
    %144 = @func_1699(%143) /* ty=(Tensor[(16, 15, 14), int64],) */;
    %145 = %138.2;
    %146 = sigmoid(%141) /* ty=Tensor[(15, 16, 5), float32] */;
    %147 = %144.0;
    (%145, %var_5723, %146, %147, %var_5735)
  };
  %148(%var_5741, %var_5742, %var_5743) /* ty=(Tensor[(1056), float64], Tensor[(1056, 1), float64], Tensor[(15, 16, 5), float32], Tensor[(16, 15, 14), int64], Tensor[(3360), int64]) */
}

def @func_7493() -> Tensor[(14, 13, 4), float64] {
  %150 = fn () -> Tensor[(14, 13, 4), float64] {
    %149 = @func_7071() /* ty=(Tensor[(14, 13, 4), float64],) */;
    %149.0
  };
  %150() /* ty=Tensor[(14, 13, 4), float64] */
}

def @func_4474() -> Tensor[(4, 9, 8), uint64] {
  @func_4472() /* ty=Tensor[(4, 9, 8), uint64] */
}

def @func_844(%var_798: Tensor[(15, 7, 3), float64], %var_828: Tensor[(1, 180), float32]) -> (Tensor[(15, 7, 3), float64], Tensor[(6, 5, 6), float64], Tensor[(1, 180), float32], Tensor[(4, 260), float64], Tensor[(1, 6, 5), float64], Tensor[(1080), float32], Tensor[(1080), float32]) {
  %151 = cast(%var_798, dtype="float64") /* ty=Tensor[(15, 7, 3), float64] */;
  %152 = cast(%var_828, dtype="float32") /* ty=Tensor[(1, 180), float32] */;
  %153 = cast(meta[relay.Constant][12] /* ty=Tensor[(4, 260), float64] */, dtype="float64") /* ty=Tensor[(4, 260), float64] */;
  %154 = reshape(%152, newshape=[6, 5, 6]) /* ty=Tensor[(6, 5, 6), float32] */;
  %155 = reshape(%153, newshape=[1040]) /* ty=Tensor[(1040), float64] */;
  %156 = @func_782(%154, %155) /* ty=(Tensor[(6, 5, 6), float64], Tensor[(13, 8, 10), float64], Tensor[(1040), float64], Tensor[(1080), float32]) */;
  %157 = cast(meta[relay.Constant][13] /* ty=Tensor[(1080), float32] */, dtype="float32") /* ty=Tensor[(1080), float32] */;
  %158 = reshape(%157, newshape=[9, 12, 10]) /* ty=Tensor[(9, 12, 10), float32] */;
  %159 = @func_296(%158) /* ty=(Tensor[(1, 6, 5), float64], Tensor[(1, 30), float64], Tensor[(9, 12, 10), float64], Tensor[(1, 6, 5), float64], Tensor[(1, 6, 5), float64]) */;
  %160 = cast(meta[relay.Constant][12] /* ty=Tensor[(4, 260), float64] */, dtype="float64") /* ty=Tensor[(4, 260), float64] */;
  %161 = reshape(%160, newshape=[13, 8, 10]) /* ty=Tensor[(13, 8, 10), float64] */;
  %162 = @func_486(%161) /* ty=(Tensor[(13, 8, 10), float64], Tensor[(1, 30), float64], Tensor[(1080), float32]) */;
  %163 = sigmoid(%151) /* ty=Tensor[(15, 7, 3), float64] */;
  %164 = %156.0;
  %165 = %159.3;
  %166 = %162.2;
  (%163, %164, %var_828, meta[relay.Constant][12] /* ty=Tensor[(4, 260), float64] */, %165, meta[relay.Constant][13] /* ty=Tensor[(1080), float32] */, %166)
}

def @func_1701(%var_1700: Tensor[(16, 15, 14), int64]) -> (Tensor[(16, 15, 14), int64],) {
  %172 = fn (%var_1677: Tensor[(16, 15, 14), int64]) -> (Tensor[(16, 15, 14), int64],) {
    %167 = cast(%var_1677, dtype="int64") /* ty=Tensor[(16, 15, 14), int64] */;
    %168 = shape_of(meta[relay.Constant][14] /* ty=Tensor[(16, 15, 14), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %169 = cast(meta[relay.Constant][14] /* ty=Tensor[(16, 15, 14), int64] */, dtype="int64") /* ty=Tensor[(16, 15, 14), int64] */;
    %170 = dyn.reshape(%167, %168, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %171 = multiply(%169, %170) /* ty=Tensor[(16, 15, 14), int64] */;
    (%171,)
  };
  %172(%var_1700) /* ty=(Tensor[(16, 15, 14), int64],) */
}

def @func_8563() -> (Tensor[(4, 9, 8), float32],) {
  %174 = fn () -> (Tensor[(4, 9, 8), float32],) {
    %173 = @func_6047() /* ty=Tensor[(4, 9, 8), float32] */;
    (%173,)
  };
  %174() /* ty=(Tensor[(4, 9, 8), float32],) */
}

def @func_4591() -> (Tensor[(14, 13, 4), float64],) {
  %175 = @func_4458() /* ty=(Tensor[(14, 13, 4), float64],) */;
  %176 = %175.0;
  %177 = cast(meta[relay.Constant][15] /* ty=Tensor[(14, 13, 4), float64] */, dtype="float64") /* ty=Tensor[(14, 13, 4), float64] */;
  %178 = shape_of(%176, dtype="int32") /* ty=Tensor[(3), int32] */;
  %179 = cast(%176, dtype="float64") /* ty=Tensor[(14, 13, 4), float64] */;
  %180 = dyn.reshape(%177, %178, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %181 = floor_mod(%179, %180) /* ty=Tensor[(14, 13, 4), float64] */;
  (%181,)
}

def @func_4903(%var_4901: Tensor[(1056), float64]) -> (Tensor[(14, 13, 4), float64], Tensor[(11, 12, 8), float64], Tensor[(1056), float64], Tensor[(11, 12, 8), float64], Tensor[(14, 13, 4), float64]) {
  @func_4900(%var_4901) /* ty=(Tensor[(14, 13, 4), float64], Tensor[(11, 12, 8), float64], Tensor[(1056), float64], Tensor[(11, 12, 8), float64], Tensor[(14, 13, 4), float64]) */
}

def @func_6267(%var_6255: Tensor[(5, 12, 6), float32], %var_6261: Tensor[(1, 336), int32], %var_6263: Tensor[(120), bool]) -> (Tensor[(5, 12, 6), float32], Tensor[(7, 16, 3), int32], Tensor[(1, 336), int32], Tensor[(3360), int64], Tensor[(120), bool], Tensor[(180), float32]) {
  %182 = cast(%var_6255, dtype="float32") /* ty=Tensor[(5, 12, 6), float32] */;
  %183 = cast(%var_6261, dtype="int32") /* ty=Tensor[(1, 336), int32] */;
  %184 = cast(meta[relay.Constant][16] /* ty=Tensor[(3360), int64] */, dtype="int64") /* ty=Tensor[(3360), int64] */;
  %185 = cast(%var_6263, dtype="bool") /* ty=Tensor[(120), bool] */;
  %186 = cast(meta[relay.Constant][17] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %187 = reshape(%183, newshape=[7, 16, 3]) /* ty=Tensor[(7, 16, 3), int32] */;
  %188 = reshape(%184, newshape=[3360]) /* ty=Tensor[(3360), int64] */;
  %189 = reshape(%185, newshape=[60, 2]) /* ty=Tensor[(60, 2), bool] */;
  %190 = reshape(%186, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %191 = @func_3588(%187, %188, %189, %190) /* ty=(Tensor[(7, 16, 3), int32], Tensor[(16, 15, 14), int64], Tensor[(3360), int64], Tensor[(1080), float32], Tensor[(180), float32], Tensor[(480), float32], Tensor[(60, 2), float32]) */;
  %192 = rsqrt(%182) /* ty=Tensor[(5, 12, 6), float32] */;
  %193 = %191.0;
  (%192, %193, %var_6261, meta[relay.Constant][16] /* ty=Tensor[(3360), int64] */, %var_6263, meta[relay.Constant][17] /* ty=Tensor[(180), float32] */)
}

def @func_5103(%var_5102: Tensor[(2, 6, 15), int8]) -> Tensor[(2, 6, 15), int8] {
  %198 = fn (%var_5091: Tensor[(2, 6, 15), int8]) -> Tensor[(2, 6, 15), int8] {
    %194 = cast(%var_5091, dtype="int8") /* ty=Tensor[(2, 6, 15), int8] */;
    %195 = shape_of(meta[relay.Constant][18] /* ty=Tensor[(2, 6, 15), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %196 = cast(meta[relay.Constant][18] /* ty=Tensor[(2, 6, 15), int8] */, dtype="int8") /* ty=Tensor[(2, 6, 15), int8] */;
    %197 = dyn.reshape(%194, %195, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    bitwise_and(%196, %197) /* ty=Tensor[(2, 6, 15), int8] */
  };
  %198(%var_5102) /* ty=Tensor[(2, 6, 15), int8] */
}

def @func_6818() -> (Tensor[(14, 13, 4), float64], Tensor[(9, 12, 13), float64], Tensor[(117), float64], Tensor[(1404), float64], Tensor[(1, 192), float32]) {
  %209 = fn () -> (Tensor[(14, 13, 4), float64], Tensor[(9, 12, 13), float64], Tensor[(117), float64], Tensor[(1404), float64], Tensor[(1, 192), float32]) {
    %199 = @func_4591() /* ty=(Tensor[(14, 13, 4), float64],) */;
    %200 = cast(meta[relay.Constant][19] /* ty=Tensor[(117), float64] */, dtype="float64") /* ty=Tensor[(117), float64] */;
    %201 = cast(meta[relay.Constant][20] /* ty=Tensor[(1404), float64] */, dtype="float64") /* ty=Tensor[(1404), float64] */;
    %202 = cast(meta[relay.Constant][21] /* ty=Tensor[(1, 192), float32] */, dtype="float32") /* ty=Tensor[(1, 192), float32] */;
    %203 = reshape(%200, newshape=[9, 1, 13]) /* ty=Tensor[(9, 1, 13), float64] */;
    %204 = reshape(%201, newshape=[9, 12, 13]) /* ty=Tensor[(9, 12, 13), float64] */;
    %205 = reshape(%202, newshape=[192]) /* ty=Tensor[(192), float32] */;
    %206 = @func_2732(%203, %204, %205) /* ty=(Tensor[(9, 12, 13), float64], Tensor[(4, 4, 12), int8], Tensor[(192), float32]) */;
    %207 = %199.0;
    %208 = %206.0;
    (%207, %208, meta[relay.Constant][19] /* ty=Tensor[(117), float64] */, meta[relay.Constant][20] /* ty=Tensor[(1404), float64] */, meta[relay.Constant][21] /* ty=Tensor[(1, 192), float32] */)
  };
  %209() /* ty=(Tensor[(14, 13, 4), float64], Tensor[(9, 12, 13), float64], Tensor[(117), float64], Tensor[(1404), float64], Tensor[(1, 192), float32]) */
}

def @func_5622(%var_5621: Tensor[(14, 13, 4), float64]) -> Tensor[(14, 13, 4), uint32] {
  %216 = fn (%var_5603: Tensor[(14, 13, 4), float64]) -> Tensor[(14, 13, 4), uint32] {
    %210 = @func_4591() /* ty=(Tensor[(14, 13, 4), float64],) */;
    %211 = %210.0;
    %212 = cast(%var_5603, dtype="uint32") /* ty=Tensor[(14, 13, 4), uint32] */;
    %213 = shape_of(%211, dtype="int32") /* ty=Tensor[(3), int32] */;
    %214 = cast(%211, dtype="uint32") /* ty=Tensor[(14, 13, 4), uint32] */;
    %215 = dyn.reshape(%212, %213, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    multiply(%214, %215) /* ty=Tensor[(14, 13, 4), uint32] */
  };
  %216(%var_5621) /* ty=Tensor[(14, 13, 4), uint32] */
}

def @func_4822() -> (Tensor[(14, 13, 4), float64], Tensor[(14, 13, 4), float64]) {
  %217 = @func_4458() /* ty=(Tensor[(14, 13, 4), float64],) */;
  %218 = @func_4404() /* ty=Tensor[(14, 13, 4), float64] */;
  %219 = %217.0;
  (%218, %219)
}

def @func_6684() -> (Tensor[(14, 13, 4), float64],) {
  %222 = fn () -> (Tensor[(14, 13, 4), float64],) {
    %220 = @func_6649() /* ty=(Tensor[(14, 13, 4), float64], Tensor[(14, 13, 4), float64]) */;
    %221 = %220.1;
    (%221,)
  };
  %222() /* ty=(Tensor[(14, 13, 4), float64],) */
}

def @func_4739() -> (Tensor[(14, 13, 4), float64],) {
  %223 = @func_4323() /* ty=Tensor[(14, 13, 4), float64] */;
  (%223,)
}

def @func_2356(%var_2318: Tensor[(3, 2, 16), float32], %var_2343: Tensor[(3360), int64]) -> (Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64], Tensor[(16, 15, 14), int64], Tensor[(3360), int64]) {
  %224 = cast(%var_2318, dtype="float32") /* ty=Tensor[(3, 2, 16), float32] */;
  %225 = cast(%var_2318, dtype="float64") /* ty=Tensor[(3, 2, 16), float64] */;
  %226 = cast(%var_2343, dtype="int64") /* ty=Tensor[(3360), int64] */;
  %227 = reshape(%226, newshape=[16, 15, 14]) /* ty=Tensor[(16, 15, 14), int64] */;
  %228 = @func_1699(%227) /* ty=(Tensor[(16, 15, 14), int64],) */;
  %229 = sigmoid(%224) /* ty=Tensor[(3, 2, 16), float32] */;
  %230 = atan(%225) /* ty=Tensor[(3, 2, 16), float64] */;
  %231 = %228.0;
  (%229, %230, %231, %var_2343)
}

def @func_7677() -> (Tensor[(14, 13, 4), float64], Tensor[(14, 13, 4), float64]) {
  %235 = fn () -> (Tensor[(14, 13, 4), float64], Tensor[(14, 13, 4), float64]) {
    %232 = @func_4591() /* ty=(Tensor[(14, 13, 4), float64],) */;
    %233 = %232.0;
    %234 = @func_4323() /* ty=Tensor[(14, 13, 4), float64] */;
    (%233, %234)
  };
  %235() /* ty=(Tensor[(14, 13, 4), float64], Tensor[(14, 13, 4), float64]) */
}

def @func_5283(%var_5278: Tensor[(270, 4), float32], %var_5279: Tensor[(336), int32], %var_5280: Tensor[(120, 1), bool], %var_5281: Tensor[(180), float32], %var_5282: Tensor[(117), float64]) -> (Tensor[(1, 6, 5), float64], Tensor[(270, 4), float32], Tensor[(14, 13, 4), float64], Tensor[(7, 16, 3), int32], Tensor[(336), int32], Tensor[(3360), int64], Tensor[(120, 1), bool], Tensor[(180), float32], Tensor[(4, 4, 12), int8], Tensor[(117), float64], Tensor[(1404), float64], Tensor[(192), float32], Tensor[(4, 9, 8), int8]) {
  @func_5276(%var_5278, %var_5279, %var_5280, %var_5281, %var_5282) /* ty=(Tensor[(1, 6, 5), float64], Tensor[(270, 4), float32], Tensor[(14, 13, 4), float64], Tensor[(7, 16, 3), int32], Tensor[(336), int32], Tensor[(3360), int64], Tensor[(120, 1), bool], Tensor[(180), float32], Tensor[(4, 4, 12), int8], Tensor[(117), float64], Tensor[(1404), float64], Tensor[(192), float32], Tensor[(4, 9, 8), int8]) */
}

def @func_8901(%var_8899: Tensor[(8, 8, 12), float32], %var_8900: Tensor[(8, 8, 12), float32]) -> (Tensor[(14, 13, 4), float64], Tensor[(8, 8, 12), uint8]) {
  @func_8897(%var_8899, %var_8900) /* ty=(Tensor[(14, 13, 4), float64], Tensor[(8, 8, 12), uint8]) */
}

def @func_4472() -> Tensor[(4, 9, 8), uint64] {
  @func_4212() /* ty=Tensor[(4, 9, 8), uint64] */
}

def @func_4681(%var_4663: Tensor[(3360), int64]) -> (Tensor[(4, 9, 8), uint64], Tensor[(1, 6, 5), float64], Tensor[(1080), float32], Tensor[(16, 15, 14), int64], Tensor[(96), float32], Tensor[(3360), int64]) {
  %236 = cast(meta[relay.Constant][22] /* ty=Tensor[(1080), float32] */, dtype="float32") /* ty=Tensor[(1080), float32] */;
  %237 = reshape(%236, newshape=[9, 12, 10]) /* ty=Tensor[(9, 12, 10), float32] */;
  %238 = @func_296(%237) /* ty=(Tensor[(1, 6, 5), float64], Tensor[(1, 30), float64], Tensor[(9, 12, 10), float64], Tensor[(1, 6, 5), float64], Tensor[(1, 6, 5), float64]) */;
  %239 = cast(meta[relay.Constant][23] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
  %240 = cast(%var_4663, dtype="int64") /* ty=Tensor[(3360), int64] */;
  %241 = reshape(%239, newshape=[3, 2, 16]) /* ty=Tensor[(3, 2, 16), float32] */;
  %242 = reshape(%240, newshape=[3360]) /* ty=Tensor[(3360), int64] */;
  %243 = @func_2356(%241, %242) /* ty=(Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64], Tensor[(16, 15, 14), int64], Tensor[(3360), int64]) */;
  %244 = @func_4472() /* ty=Tensor[(4, 9, 8), uint64] */;
  %245 = %238.4;
  %246 = %243.2;
  (%244, %245, meta[relay.Constant][22] /* ty=Tensor[(1080), float32] */, %246, meta[relay.Constant][23] /* ty=Tensor[(96), float32] */, %var_4663)
}

def @func_4741() -> (Tensor[(14, 13, 4), float64],) {
  @func_4739() /* ty=(Tensor[(14, 13, 4), float64],) */
}

def @func_5958(%var_5946: Tensor[(4, 9, 8), uint64]) -> (Tensor[(4, 9, 8), int32],) {
  %247 = @func_4472() /* ty=Tensor[(4, 9, 8), uint64] */;
  %248 = cast(%var_5946, dtype="int32") /* ty=Tensor[(4, 9, 8), int32] */;
  %249 = shape_of(%247, dtype="int32") /* ty=Tensor[(3), int32] */;
  %250 = cast(%247, dtype="int32") /* ty=Tensor[(4, 9, 8), int32] */;
  %251 = dyn.reshape(%248, %249, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %252 = bitwise_xor(%250, %251) /* ty=Tensor[(4, 9, 8), int32] */;
  (%252,)
}

def @func_7834(%var_7815: Tensor[(13, 1, 13), float32]) -> Tensor[(13, 1, 13), float32] {
  %253 = cast(%var_7815, dtype="float32") /* ty=Tensor[(13, 1, 13), float32] */;
  acos(%253) /* ty=Tensor[(13, 1, 13), float32] */
}

def @func_5783() -> (Tensor[(4, 9, 8), float32],) {
  %254 = @func_4472() /* ty=Tensor[(4, 9, 8), uint64] */;
  %255 = cast(%254, dtype="float32") /* ty=Tensor[(4, 9, 8), float32] */;
  %256 = log10(%255) /* ty=Tensor[(4, 9, 8), float32] */;
  (%256,)
}

def @func_298(%var_297: Tensor[(9, 12, 10), float32]) -> (Tensor[(1, 6, 5), float64], Tensor[(1, 30), float64], Tensor[(9, 12, 10), float64], Tensor[(1, 6, 5), float64], Tensor[(1, 6, 5), float64]) {
  %270 = fn (%var_235: Tensor[(9, 12, 10), float32]) -> (Tensor[(1, 6, 5), float64], Tensor[(1, 30), float64], Tensor[(9, 12, 10), float64], Tensor[(1, 6, 5), float64], Tensor[(1, 6, 5), float64]) {
    %257 = cast(meta[relay.Constant][24] /* ty=Tensor[(1, 30), float64] */, dtype="float64") /* ty=Tensor[(1, 30), float64] */;
    %258 = reshape(%257, newshape=[1, 6, 5]) /* ty=Tensor[(1, 6, 5), float64] */;
    %259 = cast(%var_235, dtype="float32") /* ty=Tensor[(9, 12, 10), float32] */;
    %260 = log2(%259) /* ty=Tensor[(9, 12, 10), float32] */;
    %261 = cast(%260, dtype="float64") /* ty=Tensor[(9, 12, 10), float64] */;
    %262 = @func_126(%258) /* ty=Tensor[(1, 6, 5), float64] */;
    %263 = cast(%262, dtype="float64") /* ty=Tensor[(1, 6, 5), float64] */;
    %264 = reshape(%263, newshape=[1, 6, 5]) /* ty=Tensor[(1, 6, 5), float64] */;
    %265 = cast(%262, dtype="float64") /* ty=Tensor[(1, 6, 5), float64] */;
    %266 = reshape(%265, newshape=[1, 6, 5]) /* ty=Tensor[(1, 6, 5), float64] */;
    %267 = sqrt(%261) /* ty=Tensor[(9, 12, 10), float64] */;
    %268 = @func_126(%264) /* ty=Tensor[(1, 6, 5), float64] */;
    %269 = @func_126(%266) /* ty=Tensor[(1, 6, 5), float64] */;
    (%262, meta[relay.Constant][24] /* ty=Tensor[(1, 30), float64] */, %267, %268, %269)
  };
  %270(%var_297) /* ty=(Tensor[(1, 6, 5), float64], Tensor[(1, 30), float64], Tensor[(9, 12, 10), float64], Tensor[(1, 6, 5), float64], Tensor[(1, 6, 5), float64]) */
}

def @func_4325() -> Tensor[(14, 13, 4), float64] {
  @func_4323() /* ty=Tensor[(14, 13, 4), float64] */
}

def @func_3043(%var_3041: Tensor[(3, 2, 10), float64], %var_3042: Tensor[(3, 2, 10), float64]) -> Tensor[(3, 2, 10), float64] {
  %275 = fn (%var_3033: Tensor[(3, 2, 10), float64], %var_3034: Tensor[(3, 2, 10), float64]) -> Tensor[(3, 2, 10), float64] {
    %271 = cast(%var_3034, dtype="float64") /* ty=Tensor[(3, 2, 10), float64] */;
    %272 = shape_of(%var_3033, dtype="int32") /* ty=Tensor[(3), int32] */;
    %273 = cast(%var_3033, dtype="float64") /* ty=Tensor[(3, 2, 10), float64] */;
    %274 = dyn.reshape(%271, %272, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    power(%273, %274) /* ty=Tensor[(3, 2, 10), float64] */
  };
  %275(%var_3041, %var_3042) /* ty=Tensor[(3, 2, 10), float64] */
}

def @func_7073() -> (Tensor[(14, 13, 4), float64],) {
  @func_7071() /* ty=(Tensor[(14, 13, 4), float64],) */
}

def @func_6638() -> Tensor[(14, 13, 4), float64] {
  %277 = fn () -> Tensor[(14, 13, 4), float64] {
    %276 = @func_4591() /* ty=(Tensor[(14, 13, 4), float64],) */;
    %276.0
  };
  %277() /* ty=Tensor[(14, 13, 4), float64] */
}

def @func_7578() -> Tensor[(14, 13, 4), float64] {
  @func_7576() /* ty=Tensor[(14, 13, 4), float64] */
}

def @func_4113() -> Tensor[(14, 13, 4), float64] {
  @func_4111() /* ty=Tensor[(14, 13, 4), float64] */
}

def @func_782(%var_741: Tensor[(6, 5, 6), float32], %var_757: Tensor[(1040), float64]) -> (Tensor[(6, 5, 6), float64], Tensor[(13, 8, 10), float64], Tensor[(1040), float64], Tensor[(1080), float32]) {
  %278 = cast(%var_741, dtype="float32") /* ty=Tensor[(6, 5, 6), float32] */;
  %279 = acos(%278) /* ty=Tensor[(6, 5, 6), float32] */;
  %280 = cast(%var_741, dtype="int8") /* ty=Tensor[(6, 5, 6), int8] */;
  %281 = shape_of(%279, dtype="int32") /* ty=Tensor[(3), int32] */;
  %282 = cast(%279, dtype="int8") /* ty=Tensor[(6, 5, 6), int8] */;
  %283 = dyn.reshape(%280, %281, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %284 = add(%282, %283) /* ty=Tensor[(6, 5, 6), int8] */;
  %285 = cast(%284, dtype="float64") /* ty=Tensor[(6, 5, 6), float64] */;
  %286 = cast(%var_757, dtype="float64") /* ty=Tensor[(1040), float64] */;
  %287 = reshape(%286, newshape=[13, 8, 10]) /* ty=Tensor[(13, 8, 10), float64] */;
  %288 = @func_486(%287) /* ty=(Tensor[(13, 8, 10), float64], Tensor[(1, 30), float64], Tensor[(1080), float32]) */;
  %289 = %288.0;
  %290 = cast(%289, dtype="float64") /* ty=Tensor[(13, 8, 10), float64] */;
  %291 = reshape(%290, newshape=[13, 8, 10]) /* ty=Tensor[(13, 8, 10), float64] */;
  %292 = @func_486(%291) /* ty=(Tensor[(13, 8, 10), float64], Tensor[(1, 30), float64], Tensor[(1080), float32]) */;
  %293 = log10(%285) /* ty=Tensor[(6, 5, 6), float64] */;
  %294 = %292.2;
  (%293, %289, %var_757, %294)
}

def @func_6718(%var_6716: Tensor[(1, 180), int8], %var_6717: Tensor[(11, 180), int8]) -> (Tensor[(14, 13, 4), float64], Tensor[(2, 6, 15), int8], Tensor[(11, 180), bool]) {
  @func_6714(%var_6716, %var_6717) /* ty=(Tensor[(14, 13, 4), float64], Tensor[(2, 6, 15), int8], Tensor[(11, 180), bool]) */
}

def @func_7880(%var_7877: Tensor[(15, 16, 6), uint32], %var_7878: Tensor[(117, 1), float64], %var_7879: Tensor[(1, 192), float32]) -> (Tensor[(15, 16, 6), bool], Tensor[(192), float32], Tensor[(117, 192), int64]) {
  %309 = fn (%var_7860: Tensor[(15, 16, 6), uint32], %var_7869: Tensor[(117, 1), float64], %var_7870: Tensor[(1, 192), float32]) -> (Tensor[(15, 16, 6), bool], Tensor[(192), float32], Tensor[(117, 192), int64]) {
    %295 = cast(meta[relay.Constant][25] /* ty=Tensor[(15, 16, 6), uint32] */, dtype="bool") /* ty=Tensor[(15, 16, 6), bool] */;
    %296 = shape_of(%var_7860, dtype="int32") /* ty=Tensor[(3), int32] */;
    %297 = cast(%var_7860, dtype="bool") /* ty=Tensor[(15, 16, 6), bool] */;
    %298 = dyn.reshape(%295, %296, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %299 = cast(%var_7869, dtype="float64") /* ty=Tensor[(117, 1), float64] */;
    %300 = cast(%var_7870, dtype="float32") /* ty=Tensor[(1, 192), float32] */;
    %301 = reshape(%299, newshape=[117]) /* ty=Tensor[(117), float64] */;
    %302 = reshape(%300, newshape=[192]) /* ty=Tensor[(192), float32] */;
    %303 = @func_5173(%301, %302) /* ty=(Tensor[(4, 9, 8), uint64], Tensor[(14, 13, 4), float64], Tensor[(9, 12, 13), float64], Tensor[(117), float64], Tensor[(1404), float64], Tensor[(192), float32]) */;
    %304 = cast(%var_7870, dtype="int64") /* ty=Tensor[(1, 192), int64] */;
    %305 = cast(%var_7869, dtype="int64") /* ty=Tensor[(117, 1), int64] */;
    %306 = not_equal(%297, %298) /* ty=Tensor[(15, 16, 6), bool] */;
    %307 = %303.5;
    %308 = minimum(%304, %305) /* ty=Tensor[(117, 192), int64] */;
    (%306, %307, %308)
  };
  %309(%var_7877, %var_7878, %var_7879) /* ty=(Tensor[(15, 16, 6), bool], Tensor[(192), float32], Tensor[(117, 192), int64]) */
}

def @func_5173(%var_5163: Tensor[(117), float64], %var_5165: Tensor[(192), float32]) -> (Tensor[(4, 9, 8), uint64], Tensor[(14, 13, 4), float64], Tensor[(9, 12, 13), float64], Tensor[(117), float64], Tensor[(1404), float64], Tensor[(192), float32]) {
  %310 = cast(%var_5163, dtype="float64") /* ty=Tensor[(117), float64] */;
  %311 = cast(meta[relay.Constant][26] /* ty=Tensor[(1404), float64] */, dtype="float64") /* ty=Tensor[(1404), float64] */;
  %312 = cast(%var_5165, dtype="float32") /* ty=Tensor[(192), float32] */;
  %313 = reshape(%310, newshape=[9, 1, 13]) /* ty=Tensor[(9, 1, 13), float64] */;
  %314 = reshape(%311, newshape=[9, 12, 13]) /* ty=Tensor[(9, 12, 13), float64] */;
  %315 = reshape(%312, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %316 = @func_2732(%313, %314, %315) /* ty=(Tensor[(9, 12, 13), float64], Tensor[(4, 4, 12), int8], Tensor[(192), float32]) */;
  %317 = @func_4472() /* ty=Tensor[(4, 9, 8), uint64] */;
  %318 = @func_4404() /* ty=Tensor[(14, 13, 4), float64] */;
  %319 = %316.0;
  (%317, %318, %319, %var_5163, meta[relay.Constant][26] /* ty=Tensor[(1404), float64] */, %var_5165)
}

def @func_6191(%var_6169: Tensor[(1040), float64], %var_6186: Tensor[(14, 30), float64]) -> (Tensor[(4, 9, 8), uint64], Tensor[(1040), float64], Tensor[(14, 30), float32]) {
  %320 = cast(%var_6169, dtype="float64") /* ty=Tensor[(1040), float64] */;
  %321 = reshape(%320, newshape=[13, 8, 10]) /* ty=Tensor[(13, 8, 10), float64] */;
  %322 = @func_486(%321) /* ty=(Tensor[(13, 8, 10), float64], Tensor[(1, 30), float64], Tensor[(1080), float32]) */;
  %323 = %322.1;
  %324 = cast(%323, dtype="float32") /* ty=Tensor[(1, 30), float32] */;
  %325 = cast(%var_6186, dtype="float32") /* ty=Tensor[(14, 30), float32] */;
  %326 = @func_4472() /* ty=Tensor[(4, 9, 8), uint64] */;
  %327 = divide(%324, %325) /* ty=Tensor[(14, 30), float32] */;
  (%326, %var_6169, %327)
}

def @func_6238() -> (Tensor[(14, 13, 4), float64], Tensor[(14, 13, 4), float64]) {
  %328 = @func_5559() /* ty=(Tensor[(14, 13, 4), float64], Tensor[(30, 2), bool], Tensor[(14, 13, 4), float64]) */;
  %329 = @func_5382() /* ty=Tensor[(14, 13, 4), float64] */;
  %330 = %328.0;
  (%329, %330)
}

def @func_665(%var_651: Tensor[(4, 12, 13), uint16], %var_663: Tensor[(1040), float64]) -> (Tensor[(4, 12, 13), uint64], Tensor[(13, 8, 10), float64], Tensor[(1040), float64]) {
  %331 = cast(%var_651, dtype="bool") /* ty=Tensor[(4, 12, 13), bool] */;
  %332 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(4, 12, 13), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %333 = cast(meta[relay.Constant][27] /* ty=Tensor[(4, 12, 13), uint16] */, dtype="bool") /* ty=Tensor[(4, 12, 13), bool] */;
  %334 = dyn.reshape(%331, %332, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %335 = equal(%333, %334) /* ty=Tensor[(4, 12, 13), bool] */;
  %336 = cast(%335, dtype="uint64") /* ty=Tensor[(4, 12, 13), uint64] */;
  %337 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(4, 12, 13), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %338 = cast(meta[relay.Constant][27] /* ty=Tensor[(4, 12, 13), uint16] */, dtype="uint64") /* ty=Tensor[(4, 12, 13), uint64] */;
  %339 = dyn.reshape(%336, %337, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %340 = cast(%var_663, dtype="float64") /* ty=Tensor[(1040), float64] */;
  %341 = reshape(%340, newshape=[13, 8, 10]) /* ty=Tensor[(13, 8, 10), float64] */;
  %342 = @func_486(%341) /* ty=(Tensor[(13, 8, 10), float64], Tensor[(1, 30), float64], Tensor[(1080), float32]) */;
  %343 = subtract(%338, %339) /* ty=Tensor[(4, 12, 13), uint64] */;
  %344 = %342.0;
  (%343, %344, %var_663)
}

def @func_8300(%var_8284: Tensor[(2, 3, 5), float32]) -> (Tensor[(2, 3, 5), float32], Tensor[(14, 13, 4), float64], Tensor[(2, 3, 5), int16]) {
  %345 = cast(meta[relay.Constant][28] /* ty=Tensor[(2, 3, 5), float32] */, dtype="float32") /* ty=Tensor[(2, 3, 5), float32] */;
  %346 = @func_7618() /* ty=(Tensor[(14, 13, 4), float64],) */;
  %347 = cast(%var_8284, dtype="int16") /* ty=Tensor[(2, 3, 5), int16] */;
  %348 = shape_of(meta[relay.Constant][28] /* ty=Tensor[(2, 3, 5), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %349 = cast(meta[relay.Constant][28] /* ty=Tensor[(2, 3, 5), float32] */, dtype="int16") /* ty=Tensor[(2, 3, 5), int16] */;
  %350 = dyn.reshape(%347, %348, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %351 = atan(%345) /* ty=Tensor[(2, 3, 5), float32] */;
  %352 = %346.0;
  %353 = add(%349, %350) /* ty=Tensor[(2, 3, 5), int16] */;
  (%351, %352, %353)
}

def @func_8303(%var_8301: Tensor[(2, 3, 5), float32]) -> (Tensor[(2, 3, 5), float32], Tensor[(14, 13, 4), float64], Tensor[(2, 3, 5), int16]) {
  @func_8300(%var_8301) /* ty=(Tensor[(2, 3, 5), float32], Tensor[(14, 13, 4), float64], Tensor[(2, 3, 5), int16]) */
}

def @func_7837(%var_7835: Tensor[(13, 1, 13), float32]) -> Tensor[(13, 1, 13), float32] {
  @func_7834(%var_7835) /* ty=Tensor[(13, 1, 13), float32] */
}

def @func_669(%var_667: Tensor[(4, 12, 13), uint16], %var_668: Tensor[(1040), float64]) -> (Tensor[(4, 12, 13), uint64], Tensor[(13, 8, 10), float64], Tensor[(1040), float64]) {
  @func_665(%var_667, %var_668) /* ty=(Tensor[(4, 12, 13), uint64], Tensor[(13, 8, 10), float64], Tensor[(1040), float64]) */
}

def @func_4290(%var_4287: Tensor[(3, 3, 4), int64], %var_4288: Tensor[(624), uint16], %var_4289: Tensor[(33), float64]) -> (Tensor[(3, 3, 4), bool], Tensor[(3360), int64], Tensor[(840), float32], Tensor[(624), uint16], Tensor[(3, 1, 11), float32], Tensor[(33), float64]) {
  @func_4285(%var_4287, %var_4288, %var_4289) /* ty=(Tensor[(3, 3, 4), bool], Tensor[(3360), int64], Tensor[(840), float32], Tensor[(624), uint16], Tensor[(3, 1, 11), float32], Tensor[(33), float64]) */
}

def @func_2644(%var_2642: Tensor[(16, 2, 6), float64]) -> (Tensor[(16, 2, 6), float64],) {
  @func_2641(%var_2642) /* ty=(Tensor[(16, 2, 6), float64],) */
}

def @func_4285(%var_4257: Tensor[(3, 3, 4), int64], %var_4275: Tensor[(624), uint16], %var_4280: Tensor[(33), float64]) -> (Tensor[(3, 3, 4), bool], Tensor[(3360), int64], Tensor[(840), float32], Tensor[(624), uint16], Tensor[(3, 1, 11), float32], Tensor[(33), float64]) {
  %354 = cast(%var_4257, dtype="int64") /* ty=Tensor[(3, 3, 4), int64] */;
  %355 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(3, 3, 4), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %356 = cast(meta[relay.Constant][29] /* ty=Tensor[(3, 3, 4), int64] */, dtype="int64") /* ty=Tensor[(3, 3, 4), int64] */;
  %357 = dyn.reshape(%354, %355, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %358 = minimum(%356, %357) /* ty=Tensor[(3, 3, 4), int64] */;
  %359 = cast(%358, dtype="bool") /* ty=Tensor[(3, 3, 4), bool] */;
  %360 = shape_of(%var_4257, dtype="int32") /* ty=Tensor[(3), int32] */;
  %361 = cast(%var_4257, dtype="bool") /* ty=Tensor[(3, 3, 4), bool] */;
  %362 = dyn.reshape(%359, %360, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %363 = cast(meta[relay.Constant][30] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
  %364 = cast(%var_4275, dtype="uint16") /* ty=Tensor[(624), uint16] */;
  %365 = reshape(%363, newshape=[15, 8, 7]) /* ty=Tensor[(15, 8, 7), float32] */;
  %366 = reshape(%364, newshape=[624]) /* ty=Tensor[(624), uint16] */;
  %367 = @func_4172(%365, %366) /* ty=(Tensor[(15, 8, 7), float32], Tensor[(1040), float64], Tensor[(624), uint16], Tensor[(520, 2), float64], Tensor[(16, 15, 14), int64], Tensor[(3360), int64]) */;
  %368 = cast(%var_4280, dtype="float64") /* ty=Tensor[(33), float64] */;
  %369 = reshape(%368, newshape=[3, 1, 11]) /* ty=Tensor[(3, 1, 11), float64] */;
  %370 = @func_3347(%369) /* ty=(Tensor[(3, 1, 11), float32],) */;
  %371 = equal(%361, %362) /* ty=Tensor[(3, 3, 4), bool] */;
  %372 = %367.5;
  %373 = %370.0;
  (%371, %372, meta[relay.Constant][30] /* ty=Tensor[(840), float32] */, %var_4275, %373, %var_4280)
}

def @func_6714(%var_6700: Tensor[(1, 180), int8], %var_6706: Tensor[(11, 180), int8]) -> (Tensor[(14, 13, 4), float64], Tensor[(2, 6, 15), int8], Tensor[(11, 180), bool]) {
  %374 = cast(%var_6700, dtype="int8") /* ty=Tensor[(1, 180), int8] */;
  %375 = reshape(%374, newshape=[2, 6, 15]) /* ty=Tensor[(2, 6, 15), int8] */;
  %376 = cast(%var_6700, dtype="bool") /* ty=Tensor[(1, 180), bool] */;
  %377 = cast(%var_6706, dtype="bool") /* ty=Tensor[(11, 180), bool] */;
  %378 = @func_6637() /* ty=Tensor[(14, 13, 4), float64] */;
  %379 = @func_5101(%375) /* ty=Tensor[(2, 6, 15), int8] */;
  %380 = logical_or(%376, %377) /* ty=Tensor[(11, 180), bool] */;
  (%378, %379, %380)
}

def @func_9106(%var_9104: Tensor[(4, 11, 6), bool], %var_9105: Tensor[(4, 11, 6), bool]) -> (Tensor[(4, 11, 6), bool], Tensor[(14, 13, 4), float64], Tensor[(1, 6, 5), float64], Tensor[(315), float64], Tensor[(180), float32], Tensor[(14, 13, 4), float64], Tensor[(4, 11, 6), float64]) {
  @func_9102(%var_9104, %var_9105) /* ty=(Tensor[(4, 11, 6), bool], Tensor[(14, 13, 4), float64], Tensor[(1, 6, 5), float64], Tensor[(315), float64], Tensor[(180), float32], Tensor[(14, 13, 4), float64], Tensor[(4, 11, 6), float64]) */
}

def @func_6497() -> Tensor[(9, 8, 10), float32] {
  %381 = cast(meta[relay.Constant][31] /* ty=Tensor[(9, 8, 10), float32] */, dtype="float32") /* ty=Tensor[(9, 8, 10), float32] */;
  cosh(%381) /* ty=Tensor[(9, 8, 10), float32] */
}

def @func_6272(%var_6269: Tensor[(5, 12, 6), float32], %var_6270: Tensor[(1, 336), int32], %var_6271: Tensor[(120), bool]) -> (Tensor[(5, 12, 6), float32], Tensor[(7, 16, 3), int32], Tensor[(1, 336), int32], Tensor[(3360), int64], Tensor[(120), bool], Tensor[(180), float32]) {
  @func_6267(%var_6269, %var_6270, %var_6271) /* ty=(Tensor[(5, 12, 6), float32], Tensor[(7, 16, 3), int32], Tensor[(1, 336), int32], Tensor[(3360), int64], Tensor[(120), bool], Tensor[(180), float32]) */
}

def @func_8185(%var_8173: Tensor[(1, 9, 6), uint64]) -> (Tensor[(1, 9, 6), uint64], Tensor[(11, 12, 8), float64], Tensor[(528, 2), float64]) {
  %382 = cast(meta[relay.Constant][32] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %383 = cast(%var_8173, dtype="uint64") /* ty=Tensor[(1, 9, 6), uint64] */;
  %384 = cast(meta[relay.Constant][33] /* ty=Tensor[(528, 2), float64] */, dtype="float64") /* ty=Tensor[(528, 2), float64] */;
  %385 = cast(meta[relay.Constant][33] /* ty=Tensor[(528, 2), float64] */, dtype="float64") /* ty=Tensor[(528, 2), float64] */;
  %386 = reshape(%384, newshape=[11, 12, 8]) /* ty=Tensor[(11, 12, 8), float64] */;
  %387 = reshape(%385, newshape=[11, 12, 8]) /* ty=Tensor[(11, 12, 8), float64] */;
  %388 = add(%382, %383) /* ty=Tensor[(1, 9, 6), uint64] */;
  %389 = @func_4618(%386, %387) /* ty=Tensor[(11, 12, 8), float64] */;
  (%388, %389, meta[relay.Constant][33] /* ty=Tensor[(528, 2), float64] */)
}

def @main(%var_9281: Tensor[(7, 10, 4), float64]) -> Tensor[(7, 10, 4), float64] {
  %390 = cast(%var_9281, dtype="float64") /* ty=Tensor[(7, 10, 4), float64] */;
  atan(%390) /* ty=Tensor[(7, 10, 4), float64] */
}

def @func_2205(%var_2166: Tensor[(4, 4, 12), float32]) -> (Tensor[(4, 4, 12), int8],) {
  %391 = cast(%var_2166, dtype="float32") /* ty=Tensor[(4, 4, 12), float32] */;
  %392 = log10(%391) /* ty=Tensor[(4, 4, 12), float32] */;
  %393 = cast(%var_2166, dtype="bool") /* ty=Tensor[(4, 4, 12), bool] */;
  %394 = shape_of(%392, dtype="int32") /* ty=Tensor[(3), int32] */;
  %395 = cast(%392, dtype="bool") /* ty=Tensor[(4, 4, 12), bool] */;
  %396 = dyn.reshape(%393, %394, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %397 = not_equal(%395, %396) /* ty=Tensor[(4, 4, 12), bool] */;
  %398 = cast(%392, dtype="bool") /* ty=Tensor[(4, 4, 12), bool] */;
  %399 = shape_of(%397, dtype="int32") /* ty=Tensor[(3), int32] */;
  %400 = cast(%397, dtype="bool") /* ty=Tensor[(4, 4, 12), bool] */;
  %401 = dyn.reshape(%398, %399, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %402 = logical_or(%400, %401) /* ty=Tensor[(4, 4, 12), bool] */;
  %403 = cast(%402, dtype="int8") /* ty=Tensor[(4, 4, 12), int8] */;
  %404 = shape_of(%392, dtype="int32") /* ty=Tensor[(3), int32] */;
  %405 = cast(%392, dtype="int8") /* ty=Tensor[(4, 4, 12), int8] */;
  %406 = dyn.reshape(%403, %404, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %407 = bitwise_xor(%405, %406) /* ty=Tensor[(4, 4, 12), int8] */;
  (%407,)
}

def @func_8594(%var_8592: Tensor[(16, 14, 3), uint8], %var_8593: Tensor[(16, 14, 3), uint8]) -> Tensor[(16, 14, 3), uint8] {
  @func_8590(%var_8592, %var_8593) /* ty=Tensor[(16, 14, 3), uint8] */
}

def @func_4323() -> Tensor[(14, 13, 4), float64] {
  @func_4111() /* ty=Tensor[(14, 13, 4), float64] */
}

def @func_4175(%var_4173: Tensor[(15, 8, 7), float32], %var_4174: Tensor[(624), uint16]) -> (Tensor[(15, 8, 7), float32], Tensor[(1040), float64], Tensor[(624), uint16], Tensor[(520, 2), float64], Tensor[(16, 15, 14), int64], Tensor[(3360), int64]) {
  %420 = fn (%var_4155: Tensor[(15, 8, 7), float32], %var_4161: Tensor[(624), uint16]) -> (Tensor[(15, 8, 7), float32], Tensor[(1040), float64], Tensor[(624), uint16], Tensor[(520, 2), float64], Tensor[(16, 15, 14), int64], Tensor[(3360), int64]) {
    %408 = cast(%var_4155, dtype="float32") /* ty=Tensor[(15, 8, 7), float32] */;
    %409 = cast(%var_4161, dtype="uint16") /* ty=Tensor[(624), uint16] */;
    %410 = cast(meta[relay.Constant][34] /* ty=Tensor[(520, 2), float64] */, dtype="float64") /* ty=Tensor[(520, 2), float64] */;
    %411 = reshape(%409, newshape=[4, 12, 13]) /* ty=Tensor[(4, 12, 13), uint16] */;
    %412 = reshape(%410, newshape=[1040]) /* ty=Tensor[(1040), float64] */;
    %413 = @func_665(%411, %412) /* ty=(Tensor[(4, 12, 13), uint64], Tensor[(13, 8, 10), float64], Tensor[(1040), float64]) */;
    %414 = cast(meta[relay.Constant][35] /* ty=Tensor[(3360), int64] */, dtype="int64") /* ty=Tensor[(3360), int64] */;
    %415 = reshape(%414, newshape=[16, 15, 14]) /* ty=Tensor[(16, 15, 14), int64] */;
    %416 = @func_1699(%415) /* ty=(Tensor[(16, 15, 14), int64],) */;
    %417 = log10(%408) /* ty=Tensor[(15, 8, 7), float32] */;
    %418 = %413.2;
    %419 = %416.0;
    (%417, %418, %var_4161, meta[relay.Constant][34] /* ty=Tensor[(520, 2), float64] */, %419, meta[relay.Constant][35] /* ty=Tensor[(3360), int64] */)
  };
  %420(%var_4173, %var_4174) /* ty=(Tensor[(15, 8, 7), float32], Tensor[(1040), float64], Tensor[(624), uint16], Tensor[(520, 2), float64], Tensor[(16, 15, 14), int64], Tensor[(3360), int64]) */
}

def @func_126(%var_123: Tensor[(1, 6, 5), float64]) -> Tensor[(1, 6, 5), float64] {
  %421 = cast(%var_123, dtype="float64") /* ty=Tensor[(1, 6, 5), float64] */;
  sinh(%421) /* ty=Tensor[(1, 6, 5), float64] */
}

def @func_3349(%var_3348: Tensor[(3, 1, 11), float64]) -> (Tensor[(3, 1, 11), float32],) {
  %426 = fn (%var_3330: Tensor[(3, 1, 11), float64]) -> (Tensor[(3, 1, 11), float32],) {
    %422 = cast(%var_3330, dtype="float64") /* ty=Tensor[(3, 1, 11), float64] */;
    %423 = acosh(%422) /* ty=Tensor[(3, 1, 11), float64] */;
    %424 = cast(%423, dtype="float32") /* ty=Tensor[(3, 1, 11), float32] */;
    %425 = sigmoid(%424) /* ty=Tensor[(3, 1, 11), float32] */;
    (%425,)
  };
  %426(%var_3348) /* ty=(Tensor[(3, 1, 11), float32],) */
}

def @func_8320() -> (Tensor[(14, 13, 4), float64], Tensor[(14, 13, 4), float64]) {
  %430 = fn () -> (Tensor[(14, 13, 4), float64], Tensor[(14, 13, 4), float64]) {
    %427 = @func_5559() /* ty=(Tensor[(14, 13, 4), float64], Tensor[(30, 2), bool], Tensor[(14, 13, 4), float64]) */;
    %428 = %427.0;
    %429 = @func_4404() /* ty=Tensor[(14, 13, 4), float64] */;
    (%428, %429)
  };
  %430() /* ty=(Tensor[(14, 13, 4), float64], Tensor[(14, 13, 4), float64]) */
}

def @func_3594(%var_3590: Tensor[(7, 16, 3), int32], %var_3591: Tensor[(3360), int64], %var_3592: Tensor[(60, 2), bool], %var_3593: Tensor[(180), float32]) -> (Tensor[(7, 16, 3), int32], Tensor[(16, 15, 14), int64], Tensor[(3360), int64], Tensor[(1080), float32], Tensor[(180), float32], Tensor[(480), float32], Tensor[(60, 2), float32]) {
  @func_3588(%var_3590, %var_3591, %var_3592, %var_3593) /* ty=(Tensor[(7, 16, 3), int32], Tensor[(16, 15, 14), int64], Tensor[(3360), int64], Tensor[(1080), float32], Tensor[(180), float32], Tensor[(480), float32], Tensor[(60, 2), float32]) */
}

def @func_488(%var_487: Tensor[(13, 8, 10), float64]) -> (Tensor[(13, 8, 10), float64], Tensor[(1, 30), float64], Tensor[(1080), float32]) {
  %437 = fn (%var_471: Tensor[(13, 8, 10), float64]) -> (Tensor[(13, 8, 10), float64], Tensor[(1, 30), float64], Tensor[(1080), float32]) {
    %431 = cast(%var_471, dtype="float64") /* ty=Tensor[(13, 8, 10), float64] */;
    %432 = cast(meta[relay.Constant][36] /* ty=Tensor[(1080), float32] */, dtype="float32") /* ty=Tensor[(1080), float32] */;
    %433 = reshape(%432, newshape=[9, 12, 10]) /* ty=Tensor[(9, 12, 10), float32] */;
    %434 = @func_296(%433) /* ty=(Tensor[(1, 6, 5), float64], Tensor[(1, 30), float64], Tensor[(9, 12, 10), float64], Tensor[(1, 6, 5), float64], Tensor[(1, 6, 5), float64]) */;
    %435 = sigmoid(%431) /* ty=Tensor[(13, 8, 10), float64] */;
    %436 = %434.1;
    (%435, %436, meta[relay.Constant][36] /* ty=Tensor[(1080), float32] */)
  };
  %437(%var_487) /* ty=(Tensor[(13, 8, 10), float64], Tensor[(1, 30), float64], Tensor[(1080), float32]) */
}

def @func_7124(%var_7119: Tensor[(192), float32]) -> (Tensor[(4, 9, 8), float32], Tensor[(4, 4, 12), int8], Tensor[(192), float32]) {
  %438 = cast(%var_7119, dtype="float32") /* ty=Tensor[(192), float32] */;
  %439 = reshape(%438, newshape=[4, 4, 12]) /* ty=Tensor[(4, 4, 12), float32] */;
  %440 = @func_2205(%439) /* ty=(Tensor[(4, 4, 12), int8],) */;
  %441 = @func_6047() /* ty=Tensor[(4, 9, 8), float32] */;
  %442 = %440.0;
  (%441, %442, %var_7119)
}

def @func_8120() -> (Tensor[(14, 13, 4), float64],) {
  %443 = @func_5993() /* ty=(Tensor[(4, 9, 8), uint64], Tensor[(14, 13, 4), float64]) */;
  %444 = %443.1;
  (%444,)
}

def @func_6594(%var_6575: Tensor[(1056), float32], %var_6579: Tensor[(1056), float64]) -> (Tensor[(14, 13, 4), float64], Tensor[(11, 12, 8), float64], Tensor[(1056), float64], Tensor[(1056), int8]) {
  %445 = @func_4822() /* ty=(Tensor[(14, 13, 4), float64], Tensor[(14, 13, 4), float64]) */;
  %446 = cast(meta[relay.Constant][37] /* ty=Tensor[(1056), float64] */, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %447 = cast(meta[relay.Constant][37] /* ty=Tensor[(1056), float64] */, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %448 = reshape(%446, newshape=[11, 12, 8]) /* ty=Tensor[(11, 12, 8), float64] */;
  %449 = reshape(%447, newshape=[11, 12, 8]) /* ty=Tensor[(11, 12, 8), float64] */;
  %450 = cast(meta[relay.Constant][37] /* ty=Tensor[(1056), float64] */, dtype="float32") /* ty=Tensor[(1056), float32] */;
  %451 = erf(%450) /* ty=Tensor[(1056), float32] */;
  %452 = cast(%var_6575, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %453 = shape_of(%451, dtype="int32") /* ty=Tensor[(1), int32] */;
  %454 = cast(%451, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %455 = dyn.reshape(%452, %453, newshape=[]) /* ty=Tensor[(?), float64] */;
  %456 = cast(%451, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %457 = sinh(%456) /* ty=Tensor[(1056), float64] */;
  %458 = cast(%var_6579, dtype="int8") /* ty=Tensor[(1056), int8] */;
  %459 = shape_of(%457, dtype="int32") /* ty=Tensor[(1), int32] */;
  %460 = cast(%457, dtype="int8") /* ty=Tensor[(1056), int8] */;
  %461 = dyn.reshape(%458, %459, newshape=[]) /* ty=Tensor[(?), int8] */;
  %462 = %445.0;
  %463 = @func_4618(%448, %449) /* ty=Tensor[(11, 12, 8), float64] */;
  %464 = add(%454, %455) /* ty=Tensor[(1056), float64] */;
  %465 = left_shift(%460, %461) /* ty=Tensor[(1056), int8] */;
  (%462, %463, %464, %465)
}

def @func_8127() -> (Tensor[(14, 13, 4), float64],) {
  %466 = @func_4111() /* ty=Tensor[(14, 13, 4), float64] */;
  (%466,)
}

def @func_8156() -> (Tensor[(14, 13, 4), float64], Tensor[(14, 13, 4), float64], Tensor[(14, 13, 4), float64]) {
  %467 = @func_4739() /* ty=(Tensor[(14, 13, 4), float64],) */;
  %468 = @func_7331() /* ty=(Tensor[(14, 13, 4), float64], Tensor[(9, 8, 10), float32]) */;
  %469 = @func_8038() /* ty=Tensor[(14, 13, 4), float64] */;
  %470 = %467.0;
  %471 = %468.0;
  (%469, %470, %471)
}

def @func_9249() -> (Tensor[(14, 13, 4), float64], Tensor[(14, 13, 4), float64], Tensor[(1056), float32], Tensor[(14, 13, 4), float64]) {
  %482 = fn () -> (Tensor[(14, 13, 4), float64], Tensor[(14, 13, 4), float64], Tensor[(1056), float32], Tensor[(14, 13, 4), float64]) {
    %472 = @func_7071() /* ty=(Tensor[(14, 13, 4), float64],) */;
    %473 = cast(meta[relay.Constant][38] /* ty=Tensor[(1056), float32] */, dtype="float32") /* ty=Tensor[(1056), float32] */;
    %474 = cast(meta[relay.Constant][38] /* ty=Tensor[(1056), float32] */, dtype="float64") /* ty=Tensor[(1056), float64] */;
    %475 = reshape(%473, newshape=[1056]) /* ty=Tensor[(1056), float32] */;
    %476 = reshape(%474, newshape=[1056]) /* ty=Tensor[(1056), float64] */;
    %477 = @func_6594(%475, %476) /* ty=(Tensor[(14, 13, 4), float64], Tensor[(11, 12, 8), float64], Tensor[(1056), float64], Tensor[(1056), int8]) */;
    %478 = @func_8319() /* ty=(Tensor[(14, 13, 4), float64], Tensor[(14, 13, 4), float64]) */;
    %479 = %472.0;
    %480 = %477.0;
    %481 = %478.1;
    (%479, %480, meta[relay.Constant][38] /* ty=Tensor[(1056), float32] */, %481)
  };
  %482() /* ty=(Tensor[(14, 13, 4), float64], Tensor[(14, 13, 4), float64], Tensor[(1056), float32], Tensor[(14, 13, 4), float64]) */
}

def @func_7796() -> (Tensor[(4, 9, 8), uint64], Tensor[(14, 13, 4), float64]) {
  %483 = @func_4472() /* ty=Tensor[(4, 9, 8), uint64] */;
  %484 = @func_7576() /* ty=Tensor[(14, 13, 4), float64] */;
  (%483, %484)
}

def @func_5177(%var_5175: Tensor[(117), float64], %var_5176: Tensor[(192), float32]) -> (Tensor[(4, 9, 8), uint64], Tensor[(14, 13, 4), float64], Tensor[(9, 12, 13), float64], Tensor[(117), float64], Tensor[(1404), float64], Tensor[(192), float32]) {
  @func_5173(%var_5175, %var_5176) /* ty=(Tensor[(4, 9, 8), uint64], Tensor[(14, 13, 4), float64], Tensor[(9, 12, 13), float64], Tensor[(117), float64], Tensor[(1404), float64], Tensor[(192), float32]) */
}

def @func_8039() -> Tensor[(14, 13, 4), float64] {
  %486 = fn () -> Tensor[(14, 13, 4), float64] {
    %485 = @func_6771() /* ty=(Tensor[(14, 13, 4), float64],) */;
    %485.0
  };
  %486() /* ty=Tensor[(14, 13, 4), float64] */
}

def @func_5909(%var_5851: Tensor[(1, 840), float32], %var_5852: Tensor[(624), uint16]) -> (Tensor[(14, 13, 4), float64], Tensor[(1, 840), float32], Tensor[(624), uint16], Tensor[(1040), float32], Tensor[(1040), float64]) {
  %487 = @func_4835() /* ty=(Tensor[(14, 13, 4), float64],) */;
  %488 = cast(%var_5851, dtype="float32") /* ty=Tensor[(1, 840), float32] */;
  %489 = cast(%var_5852, dtype="uint16") /* ty=Tensor[(624), uint16] */;
  %490 = reshape(%488, newshape=[15, 8, 7]) /* ty=Tensor[(15, 8, 7), float32] */;
  %491 = reshape(%489, newshape=[624]) /* ty=Tensor[(624), uint16] */;
  %492 = @func_4172(%490, %491) /* ty=(Tensor[(15, 8, 7), float32], Tensor[(1040), float64], Tensor[(624), uint16], Tensor[(520, 2), float64], Tensor[(16, 15, 14), int64], Tensor[(3360), int64]) */;
  %493 = %492.1;
  %494 = cast(meta[relay.Constant][39] /* ty=Tensor[(1040), float64] */, dtype="float32") /* ty=Tensor[(1040), float32] */;
  %495 = shape_of(%493, dtype="int32") /* ty=Tensor[(1), int32] */;
  %496 = cast(%493, dtype="float32") /* ty=Tensor[(1040), float32] */;
  %497 = dyn.reshape(%494, %495, newshape=[]) /* ty=Tensor[(?), float32] */;
  %498 = cast(%493, dtype="float64") /* ty=Tensor[(1040), float64] */;
  %499 = %487.0;
  %500 = mod(%496, %497) /* ty=Tensor[(1040), float32] */;
  %501 = asin(%498) /* ty=Tensor[(1040), float64] */;
  (%499, %var_5851, %var_5852, %500, %501)
}

def @func_5070(%var_4975: Tensor[(180), float32], %var_5051: Tensor[(990), int8]) -> (Tensor[(14, 13, 4), float64], Tensor[(315), float64], Tensor[(180), float32], Tensor[(1, 6, 5), float64], Tensor[(30), float64], Tensor[(15, 11, 6), int8], Tensor[(990), int8], Tensor[(4, 260), int8]) {
  %502 = @func_4591() /* ty=(Tensor[(14, 13, 4), float64],) */;
  %503 = cast(meta[relay.Constant][41] /* ty=Tensor[(30), float64] */, dtype="float64") /* ty=Tensor[(30), float64] */;
  %504 = reshape(%503, newshape=[1, 6, 5]) /* ty=Tensor[(1, 6, 5), float64] */;
  %505 = cast(%var_5051, dtype="int8") /* ty=Tensor[(990), int8] */;
  %506 = cast(%var_5051, dtype="int8") /* ty=Tensor[(990), int8] */;
  %507 = reshape(%505, newshape=[15, 11, 6]) /* ty=Tensor[(15, 11, 6), int8] */;
  %508 = reshape(%506, newshape=[15, 11, 6]) /* ty=Tensor[(15, 11, 6), int8] */;
  %509 = cast(meta[relay.Constant][40] /* ty=Tensor[(315), float64] */, dtype="float64") /* ty=Tensor[(315), float64] */;
  %510 = cast(%var_4975, dtype="float32") /* ty=Tensor[(180), float32] */;
  %511 = reshape(%509, newshape=[15, 7, 3]) /* ty=Tensor[(15, 7, 3), float64] */;
  %512 = reshape(%510, newshape=[1, 180]) /* ty=Tensor[(1, 180), float32] */;
  %513 = @func_844(%511, %512) /* ty=(Tensor[(15, 7, 3), float64], Tensor[(6, 5, 6), float64], Tensor[(1, 180), float32], Tensor[(4, 260), float64], Tensor[(1, 6, 5), float64], Tensor[(1080), float32], Tensor[(1080), float32]) */;
  %514 = %513.3;
  %515 = cast(%514, dtype="float32") /* ty=Tensor[(4, 260), float32] */;
  %516 = sqrt(%515) /* ty=Tensor[(4, 260), float32] */;
  %517 = cast(%514, dtype="float64") /* ty=Tensor[(4, 260), float64] */;
  %518 = shape_of(%516, dtype="int32") /* ty=Tensor[(2), int32] */;
  %519 = cast(%516, dtype="float64") /* ty=Tensor[(4, 260), float64] */;
  %520 = dyn.reshape(%517, %518, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %521 = add(%519, %520) /* ty=Tensor[(4, 260), float64] */;
  %522 = cast(%516, dtype="bool") /* ty=Tensor[(4, 260), bool] */;
  %523 = shape_of(%521, dtype="int32") /* ty=Tensor[(2), int32] */;
  %524 = cast(%521, dtype="bool") /* ty=Tensor[(4, 260), bool] */;
  %525 = dyn.reshape(%522, %523, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %526 = logical_and(%524, %525) /* ty=Tensor[(4, 260), bool] */;
  %527 = cast(%521, dtype="int8") /* ty=Tensor[(4, 260), int8] */;
  %528 = shape_of(%526, dtype="int32") /* ty=Tensor[(2), int32] */;
  %529 = cast(%526, dtype="int8") /* ty=Tensor[(4, 260), int8] */;
  %530 = dyn.reshape(%527, %528, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %531 = %502.0;
  %532 = @func_126(%504) /* ty=Tensor[(1, 6, 5), float64] */;
  %533 = @func_3781(%507, %508) /* ty=Tensor[(15, 11, 6), int8] */;
  %534 = maximum(%529, %530) /* ty=Tensor[(4, 260), int8] */;
  (%531, meta[relay.Constant][40] /* ty=Tensor[(315), float64] */, %var_4975, %532, meta[relay.Constant][41] /* ty=Tensor[(30), float64] */, %533, %var_5051, %534)
}

def @func_8188(%var_8186: Tensor[(1, 9, 6), uint64]) -> (Tensor[(1, 9, 6), uint64], Tensor[(11, 12, 8), float64], Tensor[(528, 2), float64]) {
  @func_8185(%var_8186) /* ty=(Tensor[(1, 9, 6), uint64], Tensor[(11, 12, 8), float64], Tensor[(528, 2), float64]) */
}

def @func_6973(%var_6972: Tensor[(14, 13, 4), float64]) -> (Tensor[(14, 13, 4), uint16], Tensor[(9, 8, 10), float32]) {
  %542 = fn (%var_6950: Tensor[(14, 13, 4), float64]) -> (Tensor[(14, 13, 4), uint16], Tensor[(9, 8, 10), float32]) {
    %535 = @func_4111() /* ty=Tensor[(14, 13, 4), float64] */;
    %536 = cast(%var_6950, dtype="uint16") /* ty=Tensor[(14, 13, 4), uint16] */;
    %537 = shape_of(%535, dtype="int32") /* ty=Tensor[(3), int32] */;
    %538 = cast(%535, dtype="uint16") /* ty=Tensor[(14, 13, 4), uint16] */;
    %539 = dyn.reshape(%536, %537, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %540 = maximum(%538, %539) /* ty=Tensor[(14, 13, 4), uint16] */;
    %541 = @func_6497() /* ty=Tensor[(9, 8, 10), float32] */;
    (%540, %541)
  };
  %542(%var_6972) /* ty=(Tensor[(14, 13, 4), uint16], Tensor[(9, 8, 10), float32]) */
}

def @func_8590(%var_8580: Tensor[(16, 14, 3), uint8], %var_8581: Tensor[(16, 14, 3), uint8]) -> Tensor[(16, 14, 3), uint8] {
  %543 = cast(%var_8581, dtype="uint8") /* ty=Tensor[(16, 14, 3), uint8] */;
  %544 = shape_of(%var_8580, dtype="int32") /* ty=Tensor[(3), int32] */;
  %545 = cast(%var_8580, dtype="uint8") /* ty=Tensor[(16, 14, 3), uint8] */;
  %546 = dyn.reshape(%543, %544, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  minimum(%545, %546) /* ty=Tensor[(16, 14, 3), uint8] */
}

def @func_2141(%var_2137: bool, %var_2138: Tensor[(1, 10, 12), bool], %var_2139: Tensor[(180, 1), float32], %var_2140: Tensor[(4, 10, 12), float32]) -> (Tensor[(1080), float32], Tensor[(40, 26), float64], Tensor[(1040), float64], Tensor[(180, 1), float32], Tensor[(1, 10, 12), float64], Tensor[(4, 10, 12), bool]) {
  %567 = fn (%var_2087: bool, %var_2088: Tensor[(1, 10, 12), bool], %var_2123: Tensor[(180, 1), float32], %var_2130: Tensor[(4, 10, 12), float32]) -> (Tensor[(1080), float32], Tensor[(40, 26), float64], Tensor[(1040), float64], Tensor[(180, 1), float32], Tensor[(1, 10, 12), float64], Tensor[(4, 10, 12), bool]) {
    %547 = cast(meta[relay.Constant][42] /* ty=Tensor[(40, 26), float64] */, dtype="float64") /* ty=Tensor[(40, 26), float64] */;
    %548 = reshape(%547, newshape=[13, 8, 10]) /* ty=Tensor[(13, 8, 10), float64] */;
    %549 = @func_486(%548) /* ty=(Tensor[(13, 8, 10), float64], Tensor[(1, 30), float64], Tensor[(1080), float32]) */;
    %550 = cast(%var_2123, dtype="float32") /* ty=Tensor[(180, 1), float32] */;
    %551 = cast(meta[relay.Constant][42] /* ty=Tensor[(40, 26), float64] */, dtype="float64") /* ty=Tensor[(40, 26), float64] */;
    %552 = reshape(%550, newshape=[6, 5, 6]) /* ty=Tensor[(6, 5, 6), float32] */;
    %553 = reshape(%551, newshape=[1040]) /* ty=Tensor[(1040), float64] */;
    %554 = @func_782(%552, %553) /* ty=(Tensor[(6, 5, 6), float64], Tensor[(13, 8, 10), float64], Tensor[(1040), float64], Tensor[(1080), float32]) */;
    %555 = cast(%var_2087, dtype="bool") /* ty=bool */;
    %556 = cast(%var_2088, dtype="bool") /* ty=Tensor[(1, 10, 12), bool] */;
    %557 = logical_and(%555, %556) /* ty=Tensor[(1, 10, 12), bool] */;
    %558 = cast(%557, dtype="float32") /* ty=Tensor[(1, 10, 12), float32] */;
    %559 = sqrt(%558) /* ty=Tensor[(1, 10, 12), float32] */;
    %560 = cast(%559, dtype="float64") /* ty=Tensor[(1, 10, 12), float64] */;
    %561 = cast(%559, dtype="bool") /* ty=Tensor[(1, 10, 12), bool] */;
    %562 = cast(%var_2130, dtype="bool") /* ty=Tensor[(4, 10, 12), bool] */;
    %563 = %549.2;
    %564 = %554.2;
    %565 = cosh(%560) /* ty=Tensor[(1, 10, 12), float64] */;
    %566 = greater(%561, %562) /* ty=Tensor[(4, 10, 12), bool] */;
    (%563, meta[relay.Constant][42] /* ty=Tensor[(40, 26), float64] */, %564, %var_2123, %565, %566)
  };
  %567(%var_2137, %var_2138, %var_2139, %var_2140) /* ty=(Tensor[(1080), float32], Tensor[(40, 26), float64], Tensor[(1040), float64], Tensor[(180, 1), float32], Tensor[(1, 10, 12), float64], Tensor[(4, 10, 12), bool]) */
}

def @func_5074(%var_5072: Tensor[(180), float32], %var_5073: Tensor[(990), int8]) -> (Tensor[(14, 13, 4), float64], Tensor[(315), float64], Tensor[(180), float32], Tensor[(1, 6, 5), float64], Tensor[(30), float64], Tensor[(15, 11, 6), int8], Tensor[(990), int8], Tensor[(4, 260), int8]) {
  @func_5070(%var_5072, %var_5073) /* ty=(Tensor[(14, 13, 4), float64], Tensor[(315), float64], Tensor[(180), float32], Tensor[(1, 6, 5), float64], Tensor[(30), float64], Tensor[(15, 11, 6), int8], Tensor[(990), int8], Tensor[(4, 260), int8]) */
}

def @func_8122() -> (Tensor[(14, 13, 4), float64],) {
  @func_8120() /* ty=(Tensor[(14, 13, 4), float64],) */
}

def @func_4213() -> Tensor[(4, 9, 8), uint64] {
  %570 = fn () -> Tensor[(4, 9, 8), uint64] {
    %568 = cast(meta[relay.Constant][43] /* ty=Tensor[(4, 9, 1), uint64] */, dtype="uint64") /* ty=Tensor[(4, 9, 1), uint64] */;
    %569 = cast(meta[relay.Constant][44] /* ty=Tensor[(4, 9, 8), uint64] */, dtype="uint64") /* ty=Tensor[(4, 9, 8), uint64] */;
    right_shift(%568, %569) /* ty=Tensor[(4, 9, 8), uint64] */
  };
  %570() /* ty=Tensor[(4, 9, 8), uint64] */
}

def @func_6651() -> (Tensor[(14, 13, 4), float64], Tensor[(14, 13, 4), float64]) {
  @func_6649() /* ty=(Tensor[(14, 13, 4), float64], Tensor[(14, 13, 4), float64]) */
}

def @func_848(%var_846: Tensor[(15, 7, 3), float64], %var_847: Tensor[(1, 180), float32]) -> (Tensor[(15, 7, 3), float64], Tensor[(6, 5, 6), float64], Tensor[(1, 180), float32], Tensor[(4, 260), float64], Tensor[(1, 6, 5), float64], Tensor[(1080), float32], Tensor[(1080), float32]) {
  @func_844(%var_846, %var_847) /* ty=(Tensor[(15, 7, 3), float64], Tensor[(6, 5, 6), float64], Tensor[(1, 180), float32], Tensor[(4, 260), float64], Tensor[(1, 6, 5), float64], Tensor[(1080), float32], Tensor[(1080), float32]) */
}

def @func_2360(%var_2358: Tensor[(3, 2, 16), float32], %var_2359: Tensor[(3360), int64]) -> (Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64], Tensor[(16, 15, 14), int64], Tensor[(3360), int64]) {
  @func_2356(%var_2358, %var_2359) /* ty=(Tensor[(3, 2, 16), float32], Tensor[(3, 2, 16), float64], Tensor[(16, 15, 14), int64], Tensor[(3360), int64]) */
}

def @func_8542(%var_8540: Tensor[(120), bool], %var_8541: Tensor[(117), float64]) -> (Tensor[(9, 8, 10), float32], Tensor[(1404), float64], Tensor[(1080), float32], Tensor[(336), int32], Tensor[(120), bool], Tensor[(180), float32], Tensor[(117), float64]) {
  @func_8538(%var_8540, %var_8541) /* ty=(Tensor[(9, 8, 10), float32], Tensor[(1404), float64], Tensor[(1080), float32], Tensor[(336), int32], Tensor[(120), bool], Tensor[(180), float32], Tensor[(117), float64]) */
}

def @func_7576() -> Tensor[(14, 13, 4), float64] {
  @func_7522() /* ty=Tensor[(14, 13, 4), float64] */
}

def @func_8721() -> Tensor[(14, 13, 4), float64] {
  %571 = @func_8329() /* ty=(Tensor[(14, 13, 4), float64],) */;
  %571.0
}

def @func_7523() -> Tensor[(14, 13, 4), float64] {
  %572 = fn () -> Tensor[(14, 13, 4), float64] {
    @func_4323() /* ty=Tensor[(14, 13, 4), float64] */
  };
  %572() /* ty=Tensor[(14, 13, 4), float64] */
}

def @func_6499() -> Tensor[(9, 8, 10), float32] {
  @func_6497() /* ty=Tensor[(9, 8, 10), float32] */
}

def @func_8129() -> (Tensor[(14, 13, 4), float64],) {
  @func_8127() /* ty=(Tensor[(14, 13, 4), float64],) */
}

def @func_4459() -> (Tensor[(14, 13, 4), float64],) {
  %574 = fn () -> (Tensor[(14, 13, 4), float64],) {
    %573 = @func_4404() /* ty=Tensor[(14, 13, 4), float64] */;
    (%573,)
  };
  %574() /* ty=(Tensor[(14, 13, 4), float64],) */
}

def @func_4111() -> Tensor[(14, 13, 4), float64] {
  %575 = cast(meta[relay.Constant][45] /* ty=Tensor[(14, 13, 4), float64] */, dtype="float64") /* ty=Tensor[(14, 13, 4), float64] */;
  acosh(%575) /* ty=Tensor[(14, 13, 4), float64] */
}

def @func_7620() -> (Tensor[(14, 13, 4), float64],) {
  @func_7618() /* ty=(Tensor[(14, 13, 4), float64],) */
}

def @func_7127(%var_7125: Tensor[(192), float32]) -> (Tensor[(4, 9, 8), float32], Tensor[(4, 4, 12), int8], Tensor[(192), float32]) {
  @func_7124(%var_7125) /* ty=(Tensor[(4, 9, 8), float32], Tensor[(4, 4, 12), int8], Tensor[(192), float32]) */
}

def @func_8795(%var_8759: Tensor[(312, 2), uint16]) -> (Tensor[(14, 13, 4), float64], Tensor[(13, 8, 10), float64], Tensor[(1040), float64], Tensor[(312, 2), float64], Tensor[(14, 13, 4), float64], Tensor[(3, 2, 10), float64], Tensor[(60), float64]) {
  %576 = @func_4458() /* ty=(Tensor[(14, 13, 4), float64],) */;
  %577 = cast(meta[relay.Constant][46] /* ty=Tensor[(312, 2), uint16] */, dtype="uint16") /* ty=Tensor[(312, 2), uint16] */;
  %578 = cast(meta[relay.Constant][47] /* ty=Tensor[(1040), float64] */, dtype="float64") /* ty=Tensor[(1040), float64] */;
  %579 = reshape(%577, newshape=[4, 12, 13]) /* ty=Tensor[(4, 12, 13), uint16] */;
  %580 = reshape(%578, newshape=[1040]) /* ty=Tensor[(1040), float64] */;
  %581 = @func_665(%579, %580) /* ty=(Tensor[(4, 12, 13), uint64], Tensor[(13, 8, 10), float64], Tensor[(1040), float64]) */;
  %582 = cast(%var_8759, dtype="float64") /* ty=Tensor[(312, 2), float64] */;
  %583 = shape_of(meta[relay.Constant][46] /* ty=Tensor[(312, 2), uint16] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %584 = cast(meta[relay.Constant][46] /* ty=Tensor[(312, 2), uint16] */, dtype="float64") /* ty=Tensor[(312, 2), float64] */;
  %585 = dyn.reshape(%582, %583, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %586 = floor_mod(%584, %585) /* ty=Tensor[(312, 2), float64] */;
  %587 = cast(%586, dtype="float64") /* ty=Tensor[(312, 2), float64] */;
  %588 = @func_4835() /* ty=(Tensor[(14, 13, 4), float64],) */;
  %589 = cast(meta[relay.Constant][48] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %590 = cast(meta[relay.Constant][48] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %591 = reshape(%589, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), float64] */;
  %592 = reshape(%590, newshape=[3, 2, 10]) /* ty=Tensor[(3, 2, 10), float64] */;
  %593 = %576.0;
  %594 = %581.1;
  %595 = erf(%587) /* ty=Tensor[(312, 2), float64] */;
  %596 = %588.0;
  %597 = @func_3040(%591, %592) /* ty=Tensor[(3, 2, 10), float64] */;
  (%593, %594, meta[relay.Constant][47] /* ty=Tensor[(1040), float64] */, %595, %596, %597, meta[relay.Constant][48] /* ty=Tensor[(60), float64] */)
}

def @func_8158() -> (Tensor[(14, 13, 4), float64], Tensor[(14, 13, 4), float64], Tensor[(14, 13, 4), float64]) {
  @func_8156() /* ty=(Tensor[(14, 13, 4), float64], Tensor[(14, 13, 4), float64], Tensor[(14, 13, 4), float64]) */
}

def @func_5669() -> Tensor[(4, 9, 8), float64] {
  %600 = fn () -> Tensor[(4, 9, 8), float64] {
    %598 = @func_4472() /* ty=Tensor[(4, 9, 8), uint64] */;
    %599 = cast(%598, dtype="float64") /* ty=Tensor[(4, 9, 8), float64] */;
    acos(%599) /* ty=Tensor[(4, 9, 8), float64] */
  };
  %600() /* ty=Tensor[(4, 9, 8), float64] */
}

def @func_8639() -> (Tensor[(14, 13, 4), float64], Tensor[(1, 30), float64], Tensor[(40, 26), uint16]) {
  %619 = fn () -> (Tensor[(14, 13, 4), float64], Tensor[(1, 30), float64], Tensor[(40, 26), uint16]) {
    %601 = @func_7331() /* ty=(Tensor[(14, 13, 4), float64], Tensor[(9, 8, 10), float32]) */;
    %602 = cast(meta[relay.Constant][49] /* ty=Tensor[(40, 26), float64] */, dtype="float64") /* ty=Tensor[(40, 26), float64] */;
    %603 = reshape(%602, newshape=[13, 8, 10]) /* ty=Tensor[(13, 8, 10), float64] */;
    %604 = @func_486(%603) /* ty=(Tensor[(13, 8, 10), float64], Tensor[(1, 30), float64], Tensor[(1080), float32]) */;
    %605 = cast(meta[relay.Constant][49] /* ty=Tensor[(40, 26), float64] */, dtype="float64") /* ty=Tensor[(40, 26), float64] */;
    %606 = sqrt(%605) /* ty=Tensor[(40, 26), float64] */;
    %607 = cast(meta[relay.Constant][49] /* ty=Tensor[(40, 26), float64] */, dtype="bool") /* ty=Tensor[(40, 26), bool] */;
    %608 = shape_of(%606, dtype="int32") /* ty=Tensor[(2), int32] */;
    %609 = cast(%606, dtype="bool") /* ty=Tensor[(40, 26), bool] */;
    %610 = dyn.reshape(%607, %608, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %611 = less(%609, %610) /* ty=Tensor[(40, 26), bool] */;
    %612 = cast(%611, dtype="uint16") /* ty=Tensor[(40, 26), uint16] */;
    %613 = shape_of(%606, dtype="int32") /* ty=Tensor[(2), int32] */;
    %614 = cast(%606, dtype="uint16") /* ty=Tensor[(40, 26), uint16] */;
    %615 = dyn.reshape(%612, %613, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
    %616 = %601.0;
    %617 = %604.1;
    %618 = right_shift(%614, %615) /* ty=Tensor[(40, 26), uint16] */;
    (%616, %617, %618)
  };
  %619() /* ty=(Tensor[(14, 13, 4), float64], Tensor[(1, 30), float64], Tensor[(40, 26), uint16]) */
}

def @func_6034(%var_6033: Tensor[(1040), float64]) -> (Tensor[(4, 9, 8), float32], Tensor[(14, 13, 4), float64], Tensor[(13, 8, 10), float64], Tensor[(1040), float64]) {
  %628 = fn (%var_6027: Tensor[(1040), float64]) -> (Tensor[(4, 9, 8), float32], Tensor[(14, 13, 4), float64], Tensor[(13, 8, 10), float64], Tensor[(1040), float64]) {
    %620 = @func_5783() /* ty=(Tensor[(4, 9, 8), float32],) */;
    %621 = @func_4822() /* ty=(Tensor[(14, 13, 4), float64], Tensor[(14, 13, 4), float64]) */;
    %622 = cast(%var_6027, dtype="float64") /* ty=Tensor[(1040), float64] */;
    %623 = reshape(%622, newshape=[13, 8, 10]) /* ty=Tensor[(13, 8, 10), float64] */;
    %624 = @func_486(%623) /* ty=(Tensor[(13, 8, 10), float64], Tensor[(1, 30), float64], Tensor[(1080), float32]) */;
    %625 = %620.0;
    %626 = %621.1;
    %627 = %624.0;
    (%625, %626, %627, %var_6027)
  };
  %628(%var_6033) /* ty=(Tensor[(4, 9, 8), float32], Tensor[(14, 13, 4), float64], Tensor[(13, 8, 10), float64], Tensor[(1040), float64]) */
}

def @func_7152() -> (Tensor[(14, 13, 4), float64],) {
  %629 = @func_5559() /* ty=(Tensor[(14, 13, 4), float64], Tensor[(30, 2), bool], Tensor[(14, 13, 4), float64]) */;
  %630 = %629.0;
  (%630,)
}

def @func_8330() -> (Tensor[(14, 13, 4), float64],) {
  %633 = fn () -> (Tensor[(14, 13, 4), float64],) {
    %631 = @func_7796() /* ty=(Tensor[(4, 9, 8), uint64], Tensor[(14, 13, 4), float64]) */;
    %632 = %631.1;
    (%632,)
  };
  %633() /* ty=(Tensor[(14, 13, 4), float64],) */
}

def @func_8538(%var_8519: Tensor[(120), bool], %var_8521: Tensor[(117), float64]) -> (Tensor[(9, 8, 10), float32], Tensor[(1404), float64], Tensor[(1080), float32], Tensor[(336), int32], Tensor[(120), bool], Tensor[(180), float32], Tensor[(117), float64]) {
  %634 = @func_7331() /* ty=(Tensor[(14, 13, 4), float64], Tensor[(9, 8, 10), float32]) */;
  %635 = cast(meta[relay.Constant][50] /* ty=Tensor[(1080), float32] */, dtype="float32") /* ty=Tensor[(1080), float32] */;
  %636 = cast(meta[relay.Constant][51] /* ty=Tensor[(336), int32] */, dtype="int32") /* ty=Tensor[(336), int32] */;
  %637 = cast(%var_8519, dtype="bool") /* ty=Tensor[(120), bool] */;
  %638 = cast(meta[relay.Constant][52] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %639 = cast(%var_8521, dtype="float64") /* ty=Tensor[(117), float64] */;
  %640 = reshape(%635, newshape=[270, 4]) /* ty=Tensor[(270, 4), float32] */;
  %641 = reshape(%636, newshape=[336]) /* ty=Tensor[(336), int32] */;
  %642 = reshape(%637, newshape=[120, 1]) /* ty=Tensor[(120, 1), bool] */;
  %643 = reshape(%638, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %644 = reshape(%639, newshape=[117]) /* ty=Tensor[(117), float64] */;
  %645 = @func_5276(%640, %641, %642, %643, %644) /* ty=(Tensor[(1, 6, 5), float64], Tensor[(270, 4), float32], Tensor[(14, 13, 4), float64], Tensor[(7, 16, 3), int32], Tensor[(336), int32], Tensor[(3360), int64], Tensor[(120, 1), bool], Tensor[(180), float32], Tensor[(4, 4, 12), int8], Tensor[(117), float64], Tensor[(1404), float64], Tensor[(192), float32], Tensor[(4, 9, 8), int8]) */;
  %646 = %634.1;
  %647 = %645.10;
  (%646, %647, meta[relay.Constant][50] /* ty=Tensor[(1080), float32] */, meta[relay.Constant][51] /* ty=Tensor[(336), int32] */, %var_8519, meta[relay.Constant][52] /* ty=Tensor[(180), float32] */, %var_8521)
}

def @func_8088(%var_8087: Tensor[(2, 14, 2), float64]) -> Tensor[(2, 14, 2), float32] {
  %651 = fn (%var_8071: Tensor[(2, 14, 2), float64]) -> Tensor[(2, 14, 2), float32] {
    %648 = cast(%var_8071, dtype="float64") /* ty=Tensor[(2, 14, 2), float64] */;
    %649 = tan(%648) /* ty=Tensor[(2, 14, 2), float64] */;
    %650 = cast(%649, dtype="float32") /* ty=Tensor[(2, 14, 2), float32] */;
    sin(%650) /* ty=Tensor[(2, 14, 2), float32] */
  };
  %651(%var_8087) /* ty=Tensor[(2, 14, 2), float32] */
}

def @func_2736(%var_2733: Tensor[(9, 1, 13), float64], %var_2734: Tensor[(9, 12, 13), float64], %var_2735: Tensor[(192), float32]) -> (Tensor[(9, 12, 13), float64], Tensor[(4, 4, 12), int8], Tensor[(192), float32]) {
  %659 = fn (%var_2711: Tensor[(9, 1, 13), float64], %var_2712: Tensor[(9, 12, 13), float64], %var_2728: Tensor[(192), float32]) -> (Tensor[(9, 12, 13), float64], Tensor[(4, 4, 12), int8], Tensor[(192), float32]) {
    %652 = cast(%var_2711, dtype="float64") /* ty=Tensor[(9, 1, 13), float64] */;
    %653 = cast(%var_2712, dtype="float64") /* ty=Tensor[(9, 12, 13), float64] */;
    %654 = cast(%var_2728, dtype="float32") /* ty=Tensor[(192), float32] */;
    %655 = reshape(%654, newshape=[4, 4, 12]) /* ty=Tensor[(4, 4, 12), float32] */;
    %656 = @func_2205(%655) /* ty=(Tensor[(4, 4, 12), int8],) */;
    %657 = divide(%652, %653) /* ty=Tensor[(9, 12, 13), float64] */;
    %658 = %656.0;
    (%657, %658, %var_2728)
  };
  %659(%var_2733, %var_2734, %var_2735) /* ty=(Tensor[(9, 12, 13), float64], Tensor[(4, 4, 12), int8], Tensor[(192), float32]) */
}

def @func_6195(%var_6193: Tensor[(1040), float64], %var_6194: Tensor[(14, 30), float64]) -> (Tensor[(4, 9, 8), uint64], Tensor[(1040), float64], Tensor[(14, 30), float32]) {
  @func_6191(%var_6193, %var_6194) /* ty=(Tensor[(4, 9, 8), uint64], Tensor[(1040), float64], Tensor[(14, 30), float32]) */
}

def @func_8798(%var_8796: Tensor[(312, 2), uint16]) -> (Tensor[(14, 13, 4), float64], Tensor[(13, 8, 10), float64], Tensor[(1040), float64], Tensor[(312, 2), float64], Tensor[(14, 13, 4), float64], Tensor[(3, 2, 10), float64], Tensor[(60), float64]) {
  @func_8795(%var_8796) /* ty=(Tensor[(14, 13, 4), float64], Tensor[(13, 8, 10), float64], Tensor[(1040), float64], Tensor[(312, 2), float64], Tensor[(14, 13, 4), float64], Tensor[(3, 2, 10), float64], Tensor[(60), float64]) */
}

def @func_4593() -> (Tensor[(14, 13, 4), float64],) {
  @func_4591() /* ty=(Tensor[(14, 13, 4), float64],) */
}

def @func_6049() -> Tensor[(4, 9, 8), float32] {
  @func_6047() /* ty=Tensor[(4, 9, 8), float32] */
}

def @func_7618() -> (Tensor[(14, 13, 4), float64],) {
  %660 = @func_6637() /* ty=Tensor[(14, 13, 4), float64] */;
  (%660,)
}

def @func_6369(%var_6366: Tensor[(14, 16, 4), float64], %var_6367: Tensor[(624), uint16], %var_6368: Tensor[(33), float64]) -> (Tensor[(14, 16, 4), float64], Tensor[(13, 8, 10), float64], Tensor[(1040, 624), bool], Tensor[(3360), int64], Tensor[(3360), int64], Tensor[(33), float64], Tensor[(36), int64], Tensor[(33), float64], Tensor[(14, 16, 4), float64]) {
  %688 = fn (%var_6307: Tensor[(14, 16, 4), float64], %var_6333: Tensor[(624), uint16], %var_6361: Tensor[(33), float64]) -> (Tensor[(14, 16, 4), float64], Tensor[(13, 8, 10), float64], Tensor[(1040, 624), bool], Tensor[(3360), int64], Tensor[(3360), int64], Tensor[(33), float64], Tensor[(36), int64], Tensor[(33), float64], Tensor[(14, 16, 4), float64]) {
    %661 = cast(%var_6307, dtype="float64") /* ty=Tensor[(14, 16, 4), float64] */;
    %662 = cast(%var_6333, dtype="uint16") /* ty=Tensor[(624), uint16] */;
    %663 = cast(meta[relay.Constant][53] /* ty=Tensor[(1040, 1), float64] */, dtype="float64") /* ty=Tensor[(1040, 1), float64] */;
    %664 = reshape(%662, newshape=[4, 12, 13]) /* ty=Tensor[(4, 12, 13), uint16] */;
    %665 = reshape(%663, newshape=[1040]) /* ty=Tensor[(1040), float64] */;
    %666 = @func_665(%664, %665) /* ty=(Tensor[(4, 12, 13), uint64], Tensor[(13, 8, 10), float64], Tensor[(1040), float64]) */;
    %667 = cast(meta[relay.Constant][53] /* ty=Tensor[(1040, 1), float64] */, dtype="float32") /* ty=Tensor[(1040, 1), float32] */;
    %668 = sin(%667) /* ty=Tensor[(1040, 1), float32] */;
    %669 = cast(%668, dtype="bool") /* ty=Tensor[(1040, 1), bool] */;
    %670 = cast(%var_6333, dtype="bool") /* ty=Tensor[(624), bool] */;
    %671 = cast(meta[relay.Constant][54] /* ty=Tensor[(3360), int64] */, dtype="int64") /* ty=Tensor[(3360), int64] */;
    %672 = reshape(%671, newshape=[3360]) /* ty=Tensor[(3360), int64] */;
    %673 = @func_4681(%672) /* ty=(Tensor[(4, 9, 8), uint64], Tensor[(1, 6, 5), float64], Tensor[(1080), float32], Tensor[(16, 15, 14), int64], Tensor[(96), float32], Tensor[(3360), int64]) */;
    %674 = cast(meta[relay.Constant][55] /* ty=Tensor[(36), int64] */, dtype="int64") /* ty=Tensor[(36), int64] */;
    %675 = cast(%var_6333, dtype="uint16") /* ty=Tensor[(624), uint16] */;
    %676 = cast(%var_6361, dtype="float64") /* ty=Tensor[(33), float64] */;
    %677 = reshape(%674, newshape=[3, 3, 4]) /* ty=Tensor[(3, 3, 4), int64] */;
    %678 = reshape(%675, newshape=[624]) /* ty=Tensor[(624), uint16] */;
    %679 = reshape(%676, newshape=[33]) /* ty=Tensor[(33), float64] */;
    %680 = @func_4285(%677, %678, %679) /* ty=(Tensor[(3, 3, 4), bool], Tensor[(3360), int64], Tensor[(840), float32], Tensor[(624), uint16], Tensor[(3, 1, 11), float32], Tensor[(33), float64]) */;
    %681 = cast(%var_6307, dtype="float64") /* ty=Tensor[(14, 16, 4), float64] */;
    %682 = cosh(%661) /* ty=Tensor[(14, 16, 4), float64] */;
    %683 = %666.1;
    %684 = not_equal(%669, %670) /* ty=Tensor[(1040, 624), bool] */;
    %685 = %673.5;
    %686 = %680.5;
    %687 = sqrt(%681) /* ty=Tensor[(14, 16, 4), float64] */;
    (%682, %683, %684, %685, meta[relay.Constant][54] /* ty=Tensor[(3360), int64] */, %686, meta[relay.Constant][55] /* ty=Tensor[(36), int64] */, %var_6361, %687)
  };
  %688(%var_6366, %var_6367, %var_6368) /* ty=(Tensor[(14, 16, 4), float64], Tensor[(13, 8, 10), float64], Tensor[(1040, 624), bool], Tensor[(3360), int64], Tensor[(3360), int64], Tensor[(33), float64], Tensor[(36), int64], Tensor[(33), float64], Tensor[(14, 16, 4), float64]) */
}

def @func_7332() -> (Tensor[(14, 13, 4), float64], Tensor[(9, 8, 10), float32]) {
  %695 = fn () -> (Tensor[(14, 13, 4), float64], Tensor[(9, 8, 10), float32]) {
    %689 = @func_7152() /* ty=(Tensor[(14, 13, 4), float64],) */;
    %690 = %689.0;
    %691 = cast(%690, dtype="float64") /* ty=Tensor[(14, 13, 4), float64] */;
    %692 = reshape(%691, newshape=[14, 13, 4]) /* ty=Tensor[(14, 13, 4), float64] */;
    %693 = @func_6971(%692) /* ty=(Tensor[(14, 13, 4), uint16], Tensor[(9, 8, 10), float32]) */;
    %694 = %693.1;
    (%690, %694)
  };
  %695() /* ty=(Tensor[(14, 13, 4), float64], Tensor[(9, 8, 10), float32]) */
}

def @func_9179(%var_9177: Tensor[(36), int64], %var_9178: Tensor[(8, 78), uint16]) -> (Tensor[(14, 13, 4), float64], Tensor[(624), uint16], Tensor[(8, 78), uint16], Tensor[(33), float64], Tensor[(36), float64], Tensor[(13, 1, 13), float32], Tensor[(169), float32]) {
  %710 = fn (%var_9113: Tensor[(36), int64], %var_9114: Tensor[(8, 78), uint16]) -> (Tensor[(14, 13, 4), float64], Tensor[(624), uint16], Tensor[(8, 78), uint16], Tensor[(33), float64], Tensor[(36), float64], Tensor[(13, 1, 13), float32], Tensor[(169), float32]) {
    %696 = cast(%var_9113, dtype="int64") /* ty=Tensor[(36), int64] */;
    %697 = cast(%var_9114, dtype="uint16") /* ty=Tensor[(8, 78), uint16] */;
    %698 = cast(meta[relay.Constant][56] /* ty=Tensor[(33), float64] */, dtype="float64") /* ty=Tensor[(33), float64] */;
    %699 = reshape(%696, newshape=[3, 3, 4]) /* ty=Tensor[(3, 3, 4), int64] */;
    %700 = reshape(%697, newshape=[624]) /* ty=Tensor[(624), uint16] */;
    %701 = reshape(%698, newshape=[33]) /* ty=Tensor[(33), float64] */;
    %702 = @func_4285(%699, %700, %701) /* ty=(Tensor[(3, 3, 4), bool], Tensor[(3360), int64], Tensor[(840), float32], Tensor[(624), uint16], Tensor[(3, 1, 11), float32], Tensor[(33), float64]) */;
    %703 = cast(%var_9113, dtype="float64") /* ty=Tensor[(36), float64] */;
    %704 = cast(meta[relay.Constant][57] /* ty=Tensor[(169), float32] */, dtype="float32") /* ty=Tensor[(169), float32] */;
    %705 = reshape(%704, newshape=[13, 1, 13]) /* ty=Tensor[(13, 1, 13), float32] */;
    %706 = @func_7576() /* ty=Tensor[(14, 13, 4), float64] */;
    %707 = %702.3;
    %708 = log10(%703) /* ty=Tensor[(36), float64] */;
    %709 = @func_7834(%705) /* ty=Tensor[(13, 1, 13), float32] */;
    (%706, %707, %var_9114, meta[relay.Constant][56] /* ty=Tensor[(33), float64] */, %708, %709, meta[relay.Constant][57] /* ty=Tensor[(169), float32] */)
  };
  %710(%var_9177, %var_9178) /* ty=(Tensor[(14, 13, 4), float64], Tensor[(624), uint16], Tensor[(8, 78), uint16], Tensor[(33), float64], Tensor[(36), float64], Tensor[(13, 1, 13), float32], Tensor[(169), float32]) */
}

def @func_7154() -> (Tensor[(14, 13, 4), float64],) {
  @func_7152() /* ty=(Tensor[(14, 13, 4), float64],) */
}

def @func_129(%var_127: Tensor[(1, 6, 5), float64]) -> Tensor[(1, 6, 5), float64] {
  @func_126(%var_127) /* ty=Tensor[(1, 6, 5), float64] */
}

def @func_3588(%var_3541: Tensor[(7, 16, 3), int32], %var_3549: Tensor[(3360), int64], %var_3564: Tensor[(60, 2), bool], %var_3565: Tensor[(180), float32]) -> (Tensor[(7, 16, 3), int32], Tensor[(16, 15, 14), int64], Tensor[(3360), int64], Tensor[(1080), float32], Tensor[(180), float32], Tensor[(480), float32], Tensor[(60, 2), float32]) {
  %711 = cast(1 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %712 = cast(%var_3541, dtype="int32") /* ty=Tensor[(7, 16, 3), int32] */;
  %713 = cast(%var_3549, dtype="int64") /* ty=Tensor[(3360), int64] */;
  %714 = reshape(%713, newshape=[16, 15, 14]) /* ty=Tensor[(16, 15, 14), int64] */;
  %715 = @func_1699(%714) /* ty=(Tensor[(16, 15, 14), int64],) */;
  %716 = cast(1 /* ty=int32 */, dtype="bool") /* ty=bool */;
  %717 = cast(%var_3564, dtype="bool") /* ty=Tensor[(60, 2), bool] */;
  %718 = cast(%var_3565, dtype="float32") /* ty=Tensor[(180), float32] */;
  %719 = cast(meta[relay.Constant][58] /* ty=Tensor[(480), float32] */, dtype="float32") /* ty=Tensor[(480), float32] */;
  %720 = reshape(%716, newshape=[]) /* ty=bool */;
  %721 = reshape(%717, newshape=[1, 10, 12]) /* ty=Tensor[(1, 10, 12), bool] */;
  %722 = reshape(%718, newshape=[180, 1]) /* ty=Tensor[(180, 1), float32] */;
  %723 = reshape(%719, newshape=[4, 10, 12]) /* ty=Tensor[(4, 10, 12), float32] */;
  %724 = @func_2136(%720, %721, %722, %723) /* ty=(Tensor[(1080), float32], Tensor[(40, 26), float64], Tensor[(1040), float64], Tensor[(180, 1), float32], Tensor[(1, 10, 12), float64], Tensor[(4, 10, 12), bool]) */;
  %725 = cast(%var_3564, dtype="float32") /* ty=Tensor[(60, 2), float32] */;
  %726 = cast(1 /* ty=int32 */, dtype="float32") /* ty=float32 */;
  %727 = multiply(%711, %712) /* ty=Tensor[(7, 16, 3), int32] */;
  %728 = %715.0;
  %729 = %724.0;
  %730 = floor_mod(%725, %726) /* ty=Tensor[(60, 2), float32] */;
  (%727, %728, %var_3549, %729, %var_3565, meta[relay.Constant][58] /* ty=Tensor[(480), float32] */, %730)
}

def @func_6240() -> (Tensor[(14, 13, 4), float64], Tensor[(14, 13, 4), float64]) {
  @func_6238() /* ty=(Tensor[(14, 13, 4), float64], Tensor[(14, 13, 4), float64]) */
}

def @func_2641(%var_2636: Tensor[(16, 2, 6), float64]) -> (Tensor[(16, 2, 6), float64],) {
  %731 = cast(%var_2636, dtype="float64") /* ty=Tensor[(16, 2, 6), float64] */;
  %732 = sin(%731) /* ty=Tensor[(16, 2, 6), float64] */;
  (%732,)
}

def @func_4837() -> (Tensor[(14, 13, 4), float64],) {
  @func_4835() /* ty=(Tensor[(14, 13, 4), float64],) */
}

def @func_4406() -> Tensor[(14, 13, 4), float64] {
  @func_4404() /* ty=Tensor[(14, 13, 4), float64] */
}

def @func_4835() -> (Tensor[(14, 13, 4), float64],) {
  %733 = @func_4404() /* ty=Tensor[(14, 13, 4), float64] */;
  (%733,)
}

def @func_5785() -> (Tensor[(4, 9, 8), float32],) {
  @func_5783() /* ty=(Tensor[(4, 9, 8), float32],) */
}

def @func_7071() -> (Tensor[(14, 13, 4), float64],) {
  %734 = @func_5382() /* ty=Tensor[(14, 13, 4), float64] */;
  (%734,)
}

def @func_4824() -> (Tensor[(14, 13, 4), float64], Tensor[(14, 13, 4), float64]) {
  @func_4822() /* ty=(Tensor[(14, 13, 4), float64], Tensor[(14, 13, 4), float64]) */
}

def @func_4383(%var_4364: Tensor[(336), int32], %var_4366: Tensor[(120), bool]) -> (Tensor[(180), float32], Tensor[(336), int32], Tensor[(3360), int64], Tensor[(120), bool], Tensor[(180), float32], Tensor[(14, 13, 4), float64]) {
  %735 = cast(%var_4364, dtype="int32") /* ty=Tensor[(336), int32] */;
  %736 = cast(meta[relay.Constant][59] /* ty=Tensor[(3360), int64] */, dtype="int64") /* ty=Tensor[(3360), int64] */;
  %737 = cast(%var_4366, dtype="bool") /* ty=Tensor[(120), bool] */;
  %738 = cast(meta[relay.Constant][60] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %739 = reshape(%735, newshape=[7, 16, 3]) /* ty=Tensor[(7, 16, 3), int32] */;
  %740 = reshape(%736, newshape=[3360]) /* ty=Tensor[(3360), int64] */;
  %741 = reshape(%737, newshape=[60, 2]) /* ty=Tensor[(60, 2), bool] */;
  %742 = reshape(%738, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %743 = @func_3588(%739, %740, %741, %742) /* ty=(Tensor[(7, 16, 3), int32], Tensor[(16, 15, 14), int64], Tensor[(3360), int64], Tensor[(1080), float32], Tensor[(180), float32], Tensor[(480), float32], Tensor[(60, 2), float32]) */;
  %744 = @func_4111() /* ty=Tensor[(14, 13, 4), float64] */;
  %745 = cast(%744, dtype="float64") /* ty=Tensor[(14, 13, 4), float64] */;
  %746 = atanh(%745) /* ty=Tensor[(14, 13, 4), float64] */;
  %747 = cast(%746, dtype="float64") /* ty=Tensor[(14, 13, 4), float64] */;
  %748 = %743.4;
  %749 = rsqrt(%747) /* ty=Tensor[(14, 13, 4), float64] */;
  (%748, %var_4364, meta[relay.Constant][59] /* ty=Tensor[(3360), int64] */, %var_4366, meta[relay.Constant][60] /* ty=Tensor[(180), float32] */, %749)
}

def @func_5444(%var_5443: Tensor[(1, 8, 15), float64]) -> (Tensor[(1, 8, 15), float32], Tensor[(1, 8, 15), float64], Tensor[(3, 1, 11), float32], Tensor[(33), float64], Tensor[(?, 8, 15), uint16], Tensor[(?, 8, 15), uint32]) {
  %777 = fn (%var_5389: Tensor[(1, 8, 15), float64]) -> (Tensor[(1, 8, 15), float32], Tensor[(1, 8, 15), float64], Tensor[(3, 1, 11), float32], Tensor[(33), float64], Tensor[(?, 8, 15), uint16], Tensor[(?, 8, 15), uint32]) {
    %750 = cast(%var_5389, dtype="float32") /* ty=Tensor[(1, 8, 15), float32] */;
    %751 = cast(%var_5389, dtype="float64") /* ty=Tensor[(1, 8, 15), float64] */;
    %752 = cast(meta[relay.Constant][61] /* ty=Tensor[(33), float64] */, dtype="float64") /* ty=Tensor[(33), float64] */;
    %753 = reshape(%752, newshape=[3, 1, 11]) /* ty=Tensor[(3, 1, 11), float64] */;
    %754 = @func_3347(%753) /* ty=(Tensor[(3, 1, 11), float32],) */;
    %755 = cast(%var_5389, dtype="float64") /* ty=Tensor[(1, 8, 15), float64] */;
    %756 = acosh(%755) /* ty=Tensor[(1, 8, 15), float64] */;
    %757 = cast(%756, dtype="bool") /* ty=Tensor[(1, 8, 15), bool] */;
    %758 = shape_of(%var_5389, dtype="int32") /* ty=Tensor[(3), int32] */;
    %759 = cast(%var_5389, dtype="bool") /* ty=Tensor[(1, 8, 15), bool] */;
    %760 = dyn.reshape(%757, %758, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %761 = less_equal(%759, %760) /* ty=Tensor[(?, 8, 15), bool] */;
    %762 = cast(%761, dtype="float64") /* ty=Tensor[(?, 8, 15), float64] */;
    %763 = sigmoid(%762) /* ty=Tensor[(?, 8, 15), float64] */;
    %764 = cast(%var_5389, dtype="uint16") /* ty=Tensor[(1, 8, 15), uint16] */;
    %765 = shape_of(%763, dtype="int32") /* ty=Tensor[(3), int32] */;
    %766 = cast(%763, dtype="uint16") /* ty=Tensor[(?, 8, 15), uint16] */;
    %767 = dyn.reshape(%764, %765, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %768 = cast(%756, dtype="uint32") /* ty=Tensor[(1, 8, 15), uint32] */;
    %769 = shape_of(%763, dtype="int32") /* ty=Tensor[(3), int32] */;
    %770 = cast(%763, dtype="uint32") /* ty=Tensor[(?, 8, 15), uint32] */;
    %771 = dyn.reshape(%768, %769, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %772 = tan(%750) /* ty=Tensor[(1, 8, 15), float32] */;
    %773 = erf(%751) /* ty=Tensor[(1, 8, 15), float64] */;
    %774 = %754.0;
    %775 = maximum(%766, %767) /* ty=Tensor[(?, 8, 15), uint16] */;
    %776 = logical_xor(%770, %771) /* ty=Tensor[(?, 8, 15), uint32] */;
    (%772, %773, %774, meta[relay.Constant][61] /* ty=Tensor[(33), float64] */, %775, %776)
  };
  %777(%var_5443) /* ty=(Tensor[(1, 8, 15), float32], Tensor[(1, 8, 15), float64], Tensor[(3, 1, 11), float32], Tensor[(33), float64], Tensor[(?, 8, 15), uint16], Tensor[(?, 8, 15), uint32]) */
}

def @func_6649() -> (Tensor[(14, 13, 4), float64], Tensor[(14, 13, 4), float64]) {
  %778 = @func_4835() /* ty=(Tensor[(14, 13, 4), float64],) */;
  %779 = %778.0;
  %780 = @func_4111() /* ty=Tensor[(14, 13, 4), float64] */;
  (%779, %780)
}

def @func_5276(%var_5244: Tensor[(270, 4), float32], %var_5259: Tensor[(336), int32], %var_5261: Tensor[(120, 1), bool], %var_5262: Tensor[(180), float32], %var_5267: Tensor[(117), float64]) -> (Tensor[(1, 6, 5), float64], Tensor[(270, 4), float32], Tensor[(14, 13, 4), float64], Tensor[(7, 16, 3), int32], Tensor[(336), int32], Tensor[(3360), int64], Tensor[(120, 1), bool], Tensor[(180), float32], Tensor[(4, 4, 12), int8], Tensor[(117), float64], Tensor[(1404), float64], Tensor[(192), float32], Tensor[(4, 9, 8), int8]) {
  %781 = cast(%var_5244, dtype="float32") /* ty=Tensor[(270, 4), float32] */;
  %782 = reshape(%781, newshape=[9, 12, 10]) /* ty=Tensor[(9, 12, 10), float32] */;
  %783 = @func_296(%782) /* ty=(Tensor[(1, 6, 5), float64], Tensor[(1, 30), float64], Tensor[(9, 12, 10), float64], Tensor[(1, 6, 5), float64], Tensor[(1, 6, 5), float64]) */;
  %784 = @func_4458() /* ty=(Tensor[(14, 13, 4), float64],) */;
  %785 = cast(%var_5259, dtype="int32") /* ty=Tensor[(336), int32] */;
  %786 = cast(meta[relay.Constant][62] /* ty=Tensor[(3360), int64] */, dtype="int64") /* ty=Tensor[(3360), int64] */;
  %787 = cast(%var_5261, dtype="bool") /* ty=Tensor[(120, 1), bool] */;
  %788 = cast(%var_5262, dtype="float32") /* ty=Tensor[(180), float32] */;
  %789 = reshape(%785, newshape=[7, 16, 3]) /* ty=Tensor[(7, 16, 3), int32] */;
  %790 = reshape(%786, newshape=[3360]) /* ty=Tensor[(3360), int64] */;
  %791 = reshape(%787, newshape=[60, 2]) /* ty=Tensor[(60, 2), bool] */;
  %792 = reshape(%788, newshape=[180]) /* ty=Tensor[(180), float32] */;
  %793 = @func_3588(%789, %790, %791, %792) /* ty=(Tensor[(7, 16, 3), int32], Tensor[(16, 15, 14), int64], Tensor[(3360), int64], Tensor[(1080), float32], Tensor[(180), float32], Tensor[(480), float32], Tensor[(60, 2), float32]) */;
  %794 = cast(%var_5267, dtype="float64") /* ty=Tensor[(117), float64] */;
  %795 = cast(meta[relay.Constant][63] /* ty=Tensor[(1404), float64] */, dtype="float64") /* ty=Tensor[(1404), float64] */;
  %796 = cast(meta[relay.Constant][64] /* ty=Tensor[(192), float32] */, dtype="float32") /* ty=Tensor[(192), float32] */;
  %797 = reshape(%794, newshape=[9, 1, 13]) /* ty=Tensor[(9, 1, 13), float64] */;
  %798 = reshape(%795, newshape=[9, 12, 13]) /* ty=Tensor[(9, 12, 13), float64] */;
  %799 = reshape(%796, newshape=[192]) /* ty=Tensor[(192), float32] */;
  %800 = @func_2732(%797, %798, %799) /* ty=(Tensor[(9, 12, 13), float64], Tensor[(4, 4, 12), int8], Tensor[(192), float32]) */;
  %801 = @func_4472() /* ty=Tensor[(4, 9, 8), uint64] */;
  %802 = cast(meta[relay.Constant][65] /* ty=Tensor[(4, 9, 8), uint64] */, dtype="int32") /* ty=Tensor[(4, 9, 8), int32] */;
  %803 = shape_of(%801, dtype="int32") /* ty=Tensor[(3), int32] */;
  %804 = cast(%801, dtype="int32") /* ty=Tensor[(4, 9, 8), int32] */;
  %805 = dyn.reshape(%802, %803, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %806 = left_shift(%804, %805) /* ty=Tensor[(4, 9, 8), int32] */;
  %807 = cast(%801, dtype="int8") /* ty=Tensor[(4, 9, 8), int8] */;
  %808 = shape_of(%806, dtype="int32") /* ty=Tensor[(3), int32] */;
  %809 = cast(%806, dtype="int8") /* ty=Tensor[(4, 9, 8), int8] */;
  %810 = dyn.reshape(%807, %808, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %811 = %783.0;
  %812 = %784.0;
  %813 = %793.0;
  %814 = %800.1;
  %815 = bitwise_and(%809, %810) /* ty=Tensor[(4, 9, 8), int8] */;
  (%811, %var_5244, %812, %813, %var_5259, meta[relay.Constant][62] /* ty=Tensor[(3360), int64] */, %var_5261, %var_5262, %814, %var_5267, meta[relay.Constant][63] /* ty=Tensor[(1404), float64] */, meta[relay.Constant][64] /* ty=Tensor[(192), float32] */, %815)
}

def @func_5961(%var_5959: Tensor[(4, 9, 8), uint64]) -> (Tensor[(4, 9, 8), int32],) {
  @func_5958(%var_5959) /* ty=(Tensor[(4, 9, 8), int32],) */
}

def @func_8845(%var_8844: Tensor[(14, 3, 13), float32]) -> (Tensor[(14, 3, 13), float32], Tensor[(1, 9, 6), uint64], Tensor[(54, 1), uint64], Tensor[(14, 13, 4), float64], Tensor[(14, 3, 13), bool]) {
  %832 = fn (%var_8800: Tensor[(14, 3, 13), float32]) -> (Tensor[(14, 3, 13), float32], Tensor[(1, 9, 6), uint64], Tensor[(54, 1), uint64], Tensor[(14, 13, 4), float64], Tensor[(14, 3, 13), bool]) {
    %816 = cast(meta[relay.Constant][66] /* ty=Tensor[(14, 3, 13), float32] */, dtype="float32") /* ty=Tensor[(14, 3, 13), float32] */;
    %817 = shape_of(%var_8800, dtype="int32") /* ty=Tensor[(3), int32] */;
    %818 = cast(%var_8800, dtype="float32") /* ty=Tensor[(14, 3, 13), float32] */;
    %819 = dyn.reshape(%816, %817, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %820 = cast(meta[relay.Constant][67] /* ty=Tensor[(54, 1), uint64] */, dtype="uint64") /* ty=Tensor[(54, 1), uint64] */;
    %821 = reshape(%820, newshape=[1, 9, 6]) /* ty=Tensor[(1, 9, 6), uint64] */;
    %822 = @func_8185(%821) /* ty=(Tensor[(1, 9, 6), uint64], Tensor[(11, 12, 8), float64], Tensor[(528, 2), float64]) */;
    %823 = @func_8127() /* ty=(Tensor[(14, 13, 4), float64],) */;
    %824 = cast(meta[relay.Constant][68] /* ty=Tensor[(14, 3, 13), float32] */, dtype="bool") /* ty=Tensor[(14, 3, 13), bool] */;
    %825 = shape_of(meta[relay.Constant][66] /* ty=Tensor[(14, 3, 13), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %826 = cast(meta[relay.Constant][66] /* ty=Tensor[(14, 3, 13), float32] */, dtype="bool") /* ty=Tensor[(14, 3, 13), bool] */;
    %827 = dyn.reshape(%824, %825, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %828 = floor_divide(%818, %819) /* ty=Tensor[(14, 3, 13), float32] */;
    %829 = %822.0;
    %830 = %823.0;
    %831 = greater_equal(%826, %827) /* ty=Tensor[(14, 3, 13), bool] */;
    (%828, %829, meta[relay.Constant][67] /* ty=Tensor[(54, 1), uint64] */, %830, %831)
  };
  %832(%var_8844) /* ty=(Tensor[(14, 3, 13), float32], Tensor[(1, 9, 6), uint64], Tensor[(54, 1), uint64], Tensor[(14, 13, 4), float64], Tensor[(14, 3, 13), bool]) */
}

def @func_8897(%var_8861: Tensor[(8, 8, 12), float32], %var_8887: Tensor[(8, 8, 12), float32]) -> (Tensor[(14, 13, 4), float64], Tensor[(8, 8, 12), uint8]) {
  %833 = cast(%var_8861, dtype="float32") /* ty=Tensor[(8, 8, 12), float32] */;
  %834 = asinh(%833) /* ty=Tensor[(8, 8, 12), float32] */;
  %835 = cast(%var_8887, dtype="uint8") /* ty=Tensor[(8, 8, 12), uint8] */;
  %836 = shape_of(%834, dtype="int32") /* ty=Tensor[(3), int32] */;
  %837 = cast(%834, dtype="uint8") /* ty=Tensor[(8, 8, 12), uint8] */;
  %838 = dyn.reshape(%835, %836, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %839 = @func_4404() /* ty=Tensor[(14, 13, 4), float64] */;
  %840 = left_shift(%837, %838) /* ty=Tensor[(8, 8, 12), uint8] */;
  (%839, %840)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen421/build/output.py:2120: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen421/build/output.py", line 2125, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(280) tvmgen_default_fused_atan_kernel0(double* __restrict__ T_atan, double* __restrict__ placeholder) {
  T_atan[(((int)threadIdx.x))] = atan(placeholder[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


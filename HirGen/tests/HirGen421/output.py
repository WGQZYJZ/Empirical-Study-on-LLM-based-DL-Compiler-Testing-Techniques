import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_123 = relay.var("var_123", dtype = "float64", shape = (1, 6, 5))#candidate|123|(1, 6, 5)|var|float64
uop_124 = relay.sinh(var_123.astype('float64')) # shape=(1, 6, 5)
output = uop_124
output2 = uop_124
func_126 = relay.Function([var_123,], output)
mod['func_126'] = func_126
mod = relay.transform.InferType()(mod)
mutated_mod['func_126'] = func_126
mutated_mod = relay.transform.InferType()(mutated_mod)
var_127 = relay.var("var_127", dtype = "float64", shape = (1, 6, 5))#candidate|127|(1, 6, 5)|var|float64
func_126_call = mutated_mod.get_global_var('func_126')
call_128 = func_126_call(var_127)
output = call_128
func_129 = relay.Function([var_127], output)
mutated_mod['func_129'] = func_129
mutated_mod = relay.transform.InferType()(mutated_mod)
var_235 = relay.var("var_235", dtype = "float32", shape = (9, 12, 10))#candidate|235|(9, 12, 10)|var|float32
uop_236 = relay.log2(var_235.astype('float32')) # shape=(9, 12, 10)
func_126_call = mod.get_global_var('func_126')
func_129_call = mutated_mod.get_global_var('func_129')
const_241 = relay.const([[3.165452,6.266546,-2.570157,-5.255335,-3.921440,3.637090,5.811212,-2.667659,8.632672,-2.696963,8.539399,5.159644,5.111619,-3.728790,2.237829,7.029884,-6.285965,3.373496,2.947117,-5.505308,-9.231595,2.167642,-3.198241,1.421361,-2.073693,6.789272,0.072485,-9.979345,-6.203510,-7.117302]], dtype = "float64")#candidate|241|(1, 30)|const|float64
call_240 = func_126_call(relay.reshape(const_241.astype('float64'), [1, 6, 5]))
call_242 = func_126_call(relay.reshape(const_241.astype('float64'), [1, 6, 5]))
uop_257 = relay.sqrt(uop_236.astype('float64')) # shape=(9, 12, 10)
func_126_call = mod.get_global_var('func_126')
func_129_call = mutated_mod.get_global_var('func_129')
call_267 = func_126_call(relay.reshape(call_240.astype('float64'), [1, 6, 5]))
call_268 = func_126_call(relay.reshape(call_240.astype('float64'), [1, 6, 5]))
func_126_call = mod.get_global_var('func_126')
func_129_call = mutated_mod.get_global_var('func_129')
call_272 = func_126_call(relay.reshape(call_240.astype('float64'), [1, 6, 5]))
call_273 = func_126_call(relay.reshape(call_240.astype('float64'), [1, 6, 5]))
output = relay.Tuple([call_240,const_241,uop_257,call_267,call_272,])
output2 = relay.Tuple([call_242,const_241,uop_257,call_268,call_273,])
func_296 = relay.Function([var_235,], output)
mod['func_296'] = func_296
mod = relay.transform.InferType()(mod)
var_297 = relay.var("var_297", dtype = "float32", shape = (9, 12, 10))#candidate|297|(9, 12, 10)|var|float32
output = func_296(var_297)
func_298 = relay.Function([var_297], output)
mutated_mod['func_298'] = func_298
mutated_mod = relay.transform.InferType()(mutated_mod)
var_471 = relay.var("var_471", dtype = "float64", shape = (13, 8, 10))#candidate|471|(13, 8, 10)|var|float64
uop_472 = relay.sigmoid(var_471.astype('float64')) # shape=(13, 8, 10)
func_296_call = mod.get_global_var('func_296')
func_298_call = mutated_mod.get_global_var('func_298')
const_484 = relay.const([5.108328,3.413922,-9.055985,6.020707,-9.939667,6.970461,-6.617331,3.626177,-2.046367,5.927657,7.401093,-0.187877,-8.370948,6.572906,-3.484746,-3.286581,5.269524,-7.449161,3.868554,-9.550540,-1.977037,-4.552114,1.231706,-1.489636,7.297890,-2.671341,0.821311,2.636482,4.413435,-4.712267,7.934660,7.945548,-0.514195,2.235813,0.676697,-4.321271,4.980286,-0.946172,-8.126357,-7.243458,-8.504359,8.877866,3.368359,-5.699390,3.511157,-3.376807,6.872009,0.816363,5.724937,1.419422,2.212440,-7.337298,-8.343643,0.612076,-4.491287,-5.984162,1.814409,-6.951117,-8.192201,2.684635,2.383532,7.952219,2.910841,7.929554,6.944890,7.108659,-8.721505,5.172162,3.740189,2.966790,-4.621770,-2.260649,2.866925,2.303861,1.651667,7.148973,-9.527125,1.896664,-4.948193,9.745958,8.900053,-0.328102,-4.016053,-6.804816,-8.607741,4.245279,-2.561285,-2.788008,1.120487,0.043381,-8.781683,3.842900,5.412061,-8.937335,8.118952,3.794438,6.605490,-5.766412,2.835040,4.199489,7.162116,6.752462,-4.283093,7.519697,3.662869,9.185665,-9.574620,-8.578717,1.508229,7.627904,-2.630817,-5.343637,-9.930881,-6.033587,3.641792,5.012953,-3.650954,-4.776245,6.214303,-5.221258,3.608716,-3.745238,0.017989,3.614472,-1.328015,4.204825,-2.998764,-4.125295,9.104517,-6.808858,-0.261004,2.521760,-1.819640,4.433598,8.928673,-7.284440,6.494234,-1.136591,-3.796769,-8.720157,-7.356097,7.953950,4.429314,4.259853,-4.147174,4.829139,-0.029035,-5.310074,3.430223,-8.146820,5.349821,0.900744,1.526505,7.248957,1.419350,-0.008998,-5.590971,-5.254760,1.673603,-9.671060,-0.544012,-1.088552,-2.482018,6.931322,1.823929,-6.011520,8.146698,2.798989,-9.958153,-1.377065,-1.116345,5.898879,-3.841463,-1.206308,-4.947171,-8.780293,6.753131,4.439078,6.120756,7.496504,-5.526420,5.830640,9.296268,-0.462222,-0.849871,4.789898,-7.276652,5.360054,5.079545,-6.792632,-4.712005,-5.918233,-5.970357,7.869266,-5.152894,-8.240749,-7.223326,-4.665849,-9.941653,8.098144,0.714653,-8.278663,-1.657056,5.471261,9.422502,7.872331,-4.849622,2.572420,4.942841,-7.615197,3.758940,-7.884654,-5.981212,6.060294,3.294556,3.506972,-5.665907,-5.285956,4.319721,-1.136775,-3.652214,-2.907084,2.072391,7.395023,-0.787427,-1.734993,-1.706901,-1.688410,-1.186826,6.942560,-9.017791,-7.426965,-8.590023,6.087584,-7.099649,5.559548,2.263579,1.100838,5.928425,1.216992,-4.109008,-6.733182,-8.587805,-8.580411,-1.246243,3.514089,-0.133401,9.998401,-0.604056,0.648015,-0.359803,0.150445,-6.944362,-4.316736,2.815624,-2.940322,-0.079754,-2.338637,7.729453,2.389827,9.508032,-7.853185,-8.605119,-5.419391,7.123031,-4.080315,-5.140391,4.199242,-6.216690,6.822453,-3.821245,-0.263073,-7.402270,1.335891,0.935469,6.470406,6.244519,-1.483709,-9.271753,6.576147,-1.008654,1.510333,6.244590,-7.157547,5.242048,-0.192750,1.231408,-6.897887,7.092577,5.554573,-5.210002,0.578575,-4.852039,7.700184,6.950450,-9.128343,-0.963156,-5.374172,4.090313,-9.879306,-4.562825,-8.450845,7.029590,0.752977,-1.666294,1.300418,-4.724488,4.610693,-4.247465,8.061727,2.900952,-1.088122,4.449337,5.062311,0.278103,2.124592,-5.914259,8.719820,-6.192164,8.526558,4.103075,2.256308,9.350188,-4.957907,-6.482764,4.180939,-3.475408,5.909646,7.269220,-9.934931,-1.526263,-8.987967,5.571378,-7.964348,3.966710,-2.703768,-2.118622,-9.710756,-4.013892,-2.392094,-2.021942,-1.194905,6.730710,-5.262604,6.550305,0.831705,1.074425,-5.430532,8.876131,-0.559988,-8.786355,8.531961,5.876460,3.261334,-7.927200,-6.839471,9.566478,5.103870,-5.005414,4.655121,-3.786099,-9.042900,3.713749,-0.590516,1.553494,6.587237,-7.472289,8.843197,-4.707559,4.646177,-5.540665,1.695658,2.989852,-9.551263,-9.419032,7.606147,-8.224400,-5.968437,-9.796491,-6.829497,-5.376659,-9.172739,-0.019269,-7.461684,-0.074645,0.710327,6.695327,-5.346722,-0.821411,-1.106185,8.103714,7.121328,4.644782,0.709167,5.960844,-8.260455,9.343573,-5.938030,-3.223002,-9.277268,-9.341455,5.713599,-1.684224,-9.856293,-4.474015,5.882453,-6.803587,2.032719,3.461434,-4.918288,-5.149982,-8.374711,0.869758,8.475480,9.366003,-1.074207,6.464139,4.133080,7.165060,-3.430318,-7.933803,7.034148,5.344398,3.811126,7.757942,0.355064,-0.957098,1.627209,-9.507738,2.027399,-8.957394,4.327449,6.144827,3.453969,3.826915,-6.596700,-7.884464,-8.803574,-1.917244,-5.546643,4.330877,8.224235,0.334311,8.883782,3.293947,2.785318,-1.648769,1.207823,4.295306,4.072521,9.269269,-5.000589,3.498213,2.018835,-3.134346,-9.269784,7.036048,6.099145,-0.824141,-9.144900,6.656348,-2.393417,-9.876752,4.850250,-4.437068,-6.578140,-9.352096,5.367131,-2.643717,1.444045,-4.085186,-6.660365,0.112258,-1.594866,8.874948,4.228177,-2.952384,-7.697595,-1.525660,-3.580295,-4.989445,-1.343490,-9.946825,0.862471,-1.514949,7.903105,-8.636007,-9.785162,-3.004233,3.213868,3.264437,-7.337064,-9.730342,-5.058375,7.531088,-1.811787,-8.730704,-2.835983,-0.040684,9.902390,3.384014,-1.127566,-5.648242,2.558132,3.398518,-9.797564,-3.856870,4.240765,-9.074015,3.550853,-6.937491,5.661291,-4.542961,7.036564,2.591908,6.691430,-4.333722,-0.008592,-2.874392,8.193578,9.237598,-3.093522,-3.622725,-2.436354,6.297936,-4.736818,0.599327,-3.452379,-8.813169,0.978674,-9.612027,-5.270642,-5.334960,-0.328743,-4.829718,-4.154773,7.265261,9.897410,-7.457762,-6.647146,1.896971,-2.362649,1.152329,-8.678251,-2.719374,7.580227,-6.135470,0.697083,9.414364,2.782076,3.290533,0.065501,-4.917820,1.715410,-9.248126,2.342947,-5.785390,5.202259,-7.581915,1.286182,7.409123,-5.594592,-5.166421,-5.409675,5.507257,-4.452566,8.191075,2.607549,-9.163134,8.174231,3.299565,2.709042,-6.849603,0.059317,-6.815921,3.121980,2.947474,-7.094590,-4.435874,1.411653,-1.169307,-5.875678,4.006931,-5.157837,-0.548068,2.364783,-1.103306,-7.639405,4.875313,0.465343,-6.200546,9.164742,-4.801664,-2.260935,-3.896059,-3.022302,1.282891,-0.824881,7.850039,-8.085508,-2.001540,3.361187,-4.357494,5.818364,4.170743,-5.749127,-5.927831,1.818222,4.651106,1.260785,-5.618740,-6.202103,-0.606355,-2.306966,4.651416,-3.477613,-5.050844,-5.567374,1.802364,-4.085222,1.533315,-2.206467,-2.503138,-4.915966,6.020129,7.045883,-1.543040,9.172738,2.019966,-9.131960,2.747668,-0.681803,-7.001468,-3.759218,3.783598,-2.445105,4.445532,-7.221042,-2.192699,6.941978,-5.041044,2.728610,1.133441,6.516142,0.025832,4.072902,-0.322980,-3.743813,1.269141,-0.598739,-4.997050,2.220559,-1.720979,8.244769,-6.268476,-9.946022,-8.557231,5.498905,3.490175,-2.633923,-2.912679,9.771865,8.184158,0.014285,-4.996341,7.479152,-2.580893,1.085087,-3.144581,-7.412586,6.517714,2.814699,-4.020906,7.691947,-6.636096,-4.619198,-1.265476,2.529189,-4.878283,-8.114165,3.883180,4.782607,-8.072568,-5.712244,1.720814,4.964554,3.883482,-5.906599,-4.507278,8.170896,4.269283,3.863945,2.742447,-9.427392,-3.459845,7.516715,-6.622338,0.512453,2.815402,-7.718164,-7.087598,1.154893,-9.733812,-6.200878,-2.182503,2.283953,0.418583,5.040181,-3.829529,-3.236441,-4.627975,-0.106879,-2.812854,4.849429,6.550808,9.896308,1.499680,1.489704,-3.550208,-9.671413,-3.044335,5.359770,7.363583,-3.711673,-4.511096,-2.511235,-2.216976,9.160931,-1.371141,-9.802813,-6.432696,-1.801154,6.630625,-1.570187,3.745605,-7.691768,-4.986687,4.727945,-7.157285,6.057166,4.429602,2.831970,-8.604305,-6.815545,0.484580,-7.629430,-5.281386,6.380854,7.690407,-0.968390,8.717125,-2.222730,-5.073683,7.364960,0.603137,7.134864,-8.269337,8.510433,0.777027,3.625859,-4.431517,2.841984,-7.917620,-6.244719,-8.286235,-9.940084,2.888747,9.893039,4.823361,-3.213945,-6.083934,1.735664,-8.050054,0.836061,-1.862160,-3.132296,9.224676,-1.138180,8.425728,1.605098,3.917101,0.868279,-4.826264,-3.730312,4.648859,-5.739565,-5.415350,-0.545115,-4.868830,-5.900163,-7.490097,-2.202215,-8.928095,-8.921777,2.563996,4.904861,0.297171,-1.186124,-4.551043,1.867150,1.848597,6.359522,6.016783,6.499615,5.997914,7.163704,-4.382582,2.080862,-3.412231,-4.460012,1.841909,-3.429547,-2.936031,-8.855352,2.795955,-3.714619,-8.855237,-1.559244,6.957177,4.874075,1.197006,7.014957,-6.611047,1.229184,-7.450429,6.574296,0.628026,-5.629408,-4.180297,-0.807456,3.800953,-4.026410,-1.189188,8.795426,-7.626697,9.214345,3.553297,-4.905669,8.035811,-3.235588,6.119709,-9.689581,2.189230,4.098234,0.437851,8.080557,-0.075875,-8.899259,-6.333423,6.152170,2.887657,5.280738,4.388786,-0.078306,7.805775,-0.121037,-7.433229,9.197464,5.867668,8.565027,3.011289,2.132921,7.266211,-4.806627,-9.924846,-2.664365,-8.270739,-2.123912,8.181037,6.799437,-7.930728,-5.638023,-7.365728,-4.633593,-0.534754,-6.030416,8.098681,6.742653,-3.198110,-8.415357,8.754474,-4.597221,-7.065389,7.060584,6.038061,-8.442191,-3.010025,9.547753,5.875947,0.256993,4.176290,7.062681,0.636372,2.461711,-6.583108,-0.368733,4.647093,-0.148767,-9.683645,6.024055,-8.546911,9.852063,-3.577722,1.020340,-2.868639,3.944646,-5.906349,-4.867955,-0.088493,3.702989,-6.177141,-0.352149,-7.957459,1.363520,5.448071,5.594890,2.108500,-0.774895,5.209497,6.948935,-9.189014,5.440218,4.983559,8.998593,-5.753330,-4.528241,-8.785095,-8.464617,3.447433,8.752664,-8.134081,-6.063398,7.892334,-2.245037,-5.953753,7.463663,-3.931973,-8.140954,-5.800844,8.747227,-6.481043,6.009141,7.631350,-5.648359,-9.317607,9.570182,-9.878105,-9.914908,-3.559012,-8.611048,-1.463714,-5.626877,-8.393803,-6.751727,-3.183147,0.833073,4.122132,0.660299,-7.241781,-3.586747,-9.570192,-8.910252,3.036243,-2.020871,0.936357,6.486965,-6.703219,-2.794715,-1.864887,-8.869647,6.670047,7.291621,-0.926426,8.953974,-6.119224,7.895826,4.201144,1.610654,-7.249284,-8.390724,-6.144382,1.426541,2.530926,-9.568766,-0.224898,-8.646846,-9.585204,6.289436,0.436785,-0.820152,-5.016942,-2.515958,7.223709,-1.291918,4.145565,5.732847,-0.101975,6.344179,-0.278929,5.706873,-7.547396,-1.368185,-5.943278,5.199338,-7.180245,8.768160,-2.753363,-7.166303,-6.711187,4.798028,-6.462942,8.132805,-9.476083,-7.465266,-8.185185,9.172778,-7.809123,-0.324682,9.096416,-2.446466,8.307959,-4.101288,8.662970,5.765750,-8.416161,7.905903,8.997851,3.515361,8.102141,-5.139574,-7.370001,-8.597307,-4.279111,9.951437,1.044188,6.090939,0.352432,-8.216851,2.159188,-5.354172,-9.709725,-2.716347,7.846054,8.541674,6.913870,-0.499323,-8.785198,-0.966731,3.360162,-3.703162,4.561074,3.703550,-1.532406,0.968134,5.350086,4.695119,-8.750426,4.432221,4.388805,-2.548193,9.539640,-7.127221,-5.686037,-0.920764,-4.481755,-2.812586,-3.683819,7.910806,3.510395,-5.659235,-1.392912,-4.879739,6.720599,-7.022869,5.025342,-6.058692,-5.623304,-4.056570,2.649486,-0.864042], dtype = "float32")#candidate|484|(1080,)|const|float32
call_483 = relay.TupleGetItem(func_296_call(relay.reshape(const_484.astype('float32'), [9, 12, 10])), 1)
call_485 = relay.TupleGetItem(func_298_call(relay.reshape(const_484.astype('float32'), [9, 12, 10])), 1)
output = relay.Tuple([uop_472,call_483,const_484,])
output2 = relay.Tuple([uop_472,call_485,const_484,])
func_486 = relay.Function([var_471,], output)
mod['func_486'] = func_486
mod = relay.transform.InferType()(mod)
var_487 = relay.var("var_487", dtype = "float64", shape = (13, 8, 10))#candidate|487|(13, 8, 10)|var|float64
output = func_486(var_487)
func_488 = relay.Function([var_487], output)
mutated_mod['func_488'] = func_488
mutated_mod = relay.transform.InferType()(mutated_mod)
const_650 = relay.const([[[-5,5,-7,9,2,-4,8,9,9,9,-9,3,-3],[10,-3,7,4,-4,-8,10,-10,9,2,-9,6,-4],[-9,10,-7,-7,1,-10,9,6,9,-7,10,7,4],[3,-6,-6,-6,-6,9,7,9,-5,-3,6,-6,-3],[9,-10,-7,-2,4,7,8,-6,7,9,1,6,6],[8,-5,10,-2,-8,5,-4,-9,10,-4,-4,-10,-9],[-8,6,9,6,6,9,-6,1,-6,-4,-3,2,-1],[-8,-1,3,-4,-1,-5,-6,-3,-3,1,-2,-6,-1],[3,8,-10,-4,-5,-10,5,9,-6,-3,9,8,9],[-6,8,-5,1,-4,10,-3,6,4,-3,-3,2,-10],[3,3,-9,8,6,-10,-7,-9,-4,-3,-6,-4,-4],[9,-5,8,-8,2,10,7,-3,5,1,6,8,6]],[[10,2,6,-9,2,-1,-8,10,-2,4,-3,-3,4],[-8,3,-6,-1,-7,2,8,-5,6,3,-9,-2,10],[3,8,5,10,9,10,-4,6,5,2,4,-3,-6],[2,7,-3,-7,10,8,-1,7,6,-10,-9,-10,-7],[1,-3,-2,4,9,10,10,-8,-1,7,2,-9,-8],[9,9,2,6,6,-2,-5,-10,7,-6,-10,7,7],[1,-4,-6,6,-1,-7,6,2,6,1,6,-5,6],[-3,3,2,8,4,1,3,-10,8,4,6,-9,5],[6,10,-5,4,-3,-5,-2,-6,1,-4,10,1,-2],[-3,5,-6,7,-2,9,4,2,-2,10,-7,7,-4],[-1,-10,-3,4,10,8,8,-10,7,6,5,4,-5],[-6,2,7,4,-8,10,-4,6,6,3,-10,3,-8]],[[3,2,4,-8,10,2,3,-3,-6,3,-9,5,-6],[2,10,-8,3,10,-7,-6,6,-1,9,-1,-10,-6],[-3,3,-5,-9,-9,7,6,-9,-6,2,-2,2,-8],[8,-7,-9,7,-2,-8,-7,-9,-9,4,9,-5,-3],[-5,-10,-5,-9,5,5,-1,-4,9,6,-10,4,-4],[-3,6,-6,8,-2,-4,-7,10,-1,-10,-1,-8,8],[1,9,5,-4,7,-1,-6,8,-5,-9,9,-7,-4],[-10,5,-10,10,-2,3,-5,6,3,-1,9,8,-3],[7,9,-10,4,7,-2,5,-3,1,-9,5,8,5],[-2,-7,-1,6,-6,9,4,7,-6,-1,3,6,-9],[-5,7,-4,4,-5,-6,7,9,-5,3,-8,-4,-7],[-3,10,5,8,-7,2,-6,8,-10,-5,2,-4,1]],[[5,3,4,-6,5,-10,-3,5,-10,-4,2,-3,7],[-8,10,2,-5,-7,8,-3,-3,6,-2,5,4,2],[7,5,-1,-2,-2,-6,7,6,-5,8,4,7,-7],[-9,4,-10,-7,3,-10,6,-9,-7,-6,-2,1,-10],[-6,-2,1,-5,-3,6,-2,5,-3,-1,5,-9,-2],[3,-10,10,-4,-10,-4,-10,2,6,-2,-3,5,-7],[4,3,-6,-1,3,-4,-4,10,1,-6,5,-6,-6],[-1,-7,-3,-4,-8,5,9,-1,-3,-7,-6,2,-1],[5,-3,10,-3,-4,-7,3,9,5,3,10,2,8],[6,-1,8,-8,-8,-7,-3,-7,9,4,-7,-3,6],[6,-1,-7,8,-7,3,-9,2,-1,-7,5,-8,2],[-1,-6,10,-4,-8,-9,-6,-3,2,9,-8,-10,1]]], dtype = "uint16")#candidate|650|(4, 12, 13)|const|uint16
var_651 = relay.var("var_651", dtype = "uint16", shape = (4, 12, 13))#candidate|651|(4, 12, 13)|var|uint16
bop_652 = relay.equal(const_650.astype('bool'), relay.reshape(var_651.astype('bool'), relay.shape_of(const_650))) # shape=(4, 12, 13)
bop_659 = relay.subtract(const_650.astype('uint64'), relay.reshape(bop_652.astype('uint64'), relay.shape_of(const_650))) # shape=(4, 12, 13)
func_486_call = mod.get_global_var('func_486')
func_488_call = mutated_mod.get_global_var('func_488')
var_663 = relay.var("var_663", dtype = "float64", shape = (1040,))#candidate|663|(1040,)|var|float64
call_662 = relay.TupleGetItem(func_486_call(relay.reshape(var_663.astype('float64'), [13, 8, 10])), 0)
call_664 = relay.TupleGetItem(func_488_call(relay.reshape(var_663.astype('float64'), [13, 8, 10])), 0)
output = relay.Tuple([bop_659,call_662,var_663,])
output2 = relay.Tuple([bop_659,call_664,var_663,])
func_665 = relay.Function([var_651,var_663,], output)
mod['func_665'] = func_665
mod = relay.transform.InferType()(mod)
mutated_mod['func_665'] = func_665
mutated_mod = relay.transform.InferType()(mutated_mod)
func_665_call = mutated_mod.get_global_var('func_665')
var_667 = relay.var("var_667", dtype = "uint16", shape = (4, 12, 13))#candidate|667|(4, 12, 13)|var|uint16
var_668 = relay.var("var_668", dtype = "float64", shape = (1040,))#candidate|668|(1040,)|var|float64
call_666 = func_665_call(var_667,var_668,)
output = call_666
func_669 = relay.Function([var_667,var_668,], output)
mutated_mod['func_669'] = func_669
mutated_mod = relay.transform.InferType()(mutated_mod)
var_741 = relay.var("var_741", dtype = "float32", shape = (6, 5, 6))#candidate|741|(6, 5, 6)|var|float32
uop_742 = relay.acos(var_741.astype('float32')) # shape=(6, 5, 6)
bop_748 = relay.add(uop_742.astype('int8'), relay.reshape(var_741.astype('int8'), relay.shape_of(uop_742))) # shape=(6, 5, 6)
uop_752 = relay.log10(bop_748.astype('float64')) # shape=(6, 5, 6)
func_486_call = mod.get_global_var('func_486')
func_488_call = mutated_mod.get_global_var('func_488')
var_757 = relay.var("var_757", dtype = "float64", shape = (1040,))#candidate|757|(1040,)|var|float64
call_756 = relay.TupleGetItem(func_486_call(relay.reshape(var_757.astype('float64'), [13, 8, 10])), 0)
call_758 = relay.TupleGetItem(func_488_call(relay.reshape(var_757.astype('float64'), [13, 8, 10])), 0)
func_486_call = mod.get_global_var('func_486')
func_488_call = mutated_mod.get_global_var('func_488')
call_763 = relay.TupleGetItem(func_486_call(relay.reshape(call_756.astype('float64'), [13, 8, 10])), 2)
call_764 = relay.TupleGetItem(func_488_call(relay.reshape(call_756.astype('float64'), [13, 8, 10])), 2)
output = relay.Tuple([uop_752,call_756,var_757,call_763,])
output2 = relay.Tuple([uop_752,call_758,var_757,call_764,])
func_782 = relay.Function([var_741,var_757,], output)
mod['func_782'] = func_782
mod = relay.transform.InferType()(mod)
mutated_mod['func_782'] = func_782
mutated_mod = relay.transform.InferType()(mutated_mod)
func_782_call = mutated_mod.get_global_var('func_782')
var_784 = relay.var("var_784", dtype = "float32", shape = (6, 5, 6))#candidate|784|(6, 5, 6)|var|float32
var_785 = relay.var("var_785", dtype = "float64", shape = (1040,))#candidate|785|(1040,)|var|float64
call_783 = func_782_call(var_784,var_785,)
output = call_783
func_786 = relay.Function([var_784,var_785,], output)
mutated_mod['func_786'] = func_786
mutated_mod = relay.transform.InferType()(mutated_mod)
var_798 = relay.var("var_798", dtype = "float64", shape = (15, 7, 3))#candidate|798|(15, 7, 3)|var|float64
uop_799 = relay.sigmoid(var_798.astype('float64')) # shape=(15, 7, 3)
func_782_call = mod.get_global_var('func_782')
func_786_call = mutated_mod.get_global_var('func_786')
var_828 = relay.var("var_828", dtype = "float32", shape = (1, 180))#candidate|828|(1, 180)|var|float32
const_829 = relay.const([[-7.024760,-2.283920,-3.377149,-9.965066,0.872759,-8.072629,5.484794,4.316497,-9.611388,-3.734674,3.943250,-2.006842,-6.568542,7.180680,5.727996,8.009652,-8.257009,-1.388852,8.031914,9.581633,-5.001862,4.448498,-1.233062,2.058339,5.834683,6.386346,-8.744755,4.497364,9.783109,1.435039,2.875515,8.385806,-5.923573,-9.390132,-6.990595,9.228508,3.857422,2.584802,2.739416,-8.112043,-9.812996,3.790011,1.264119,-9.923192,-4.191247,1.733868,-8.815082,4.131767,-0.425227,-7.692587,6.922530,-6.164138,-0.576964,-7.711324,-2.490281,-3.586669,-7.578469,-5.759677,-2.086512,9.539684,-0.120004,-6.328311,6.939598,-0.698251,7.023130,-0.926552,-3.322964,-3.733537,-0.686158,-1.452076,4.063593,-9.658455,4.384822,-6.499606,4.670941,-4.868953,-9.507358,-9.842521,-3.651703,-0.290256,1.667064,-8.215976,4.817565,7.590444,0.391128,-7.693635,-5.426006,-2.476058,7.728047,-9.887699,-1.947865,0.762825,5.549533,-7.258226,-4.901594,-6.826696,-3.270501,4.865447,3.624368,8.327168,-0.257835,3.521443,-7.890867,-9.505210,-6.370582,-5.916080,5.905244,-9.534981,0.731545,-6.072228,6.360334,-6.466022,4.537260,7.372719,-7.910895,7.414491,-0.329976,4.014589,7.380404,3.393884,-7.424918,-1.488025,4.725420,2.319716,-9.590561,-3.203719,-8.489847,0.708683,-3.231590,-3.711756,0.295712,2.981204,-9.743095,0.379033,1.273727,-5.805115,-0.871633,2.944827,5.727315,6.895255,5.704600,8.633384,-7.888214,2.842010,7.503105,3.903582,-7.601156,-0.945004,8.166644,-4.432192,-3.080493,8.307705,9.908547,-7.810841,8.680802,-0.939598,6.883571,-2.693741,-9.339054,-0.646039,1.504290,9.780780,2.874771,-1.240941,3.393762,0.977164,2.689030,-6.326673,6.625998,1.401595,-2.379963,1.473017,9.949971,2.580849,-9.309841,6.048329,4.939804,1.348073,5.392104,-2.832530,-2.133819,-4.107978,-6.304362,-5.207726,-3.220966,-8.834718,-9.751581,-2.866764,5.411399,7.518447,-3.064078,3.568614,1.950030,-2.580252,-8.095911,9.961382,-2.308508,1.073213,0.074733,-4.617273,6.357969,-2.878476,5.629748,-9.226311,1.805447,-5.425395,-1.834460,6.341790,-5.088251,-4.589576,-3.923436,1.491445,-2.708433,1.113835,-3.071133,5.853876,-7.450801,5.957224,-1.851539,-4.615640,-2.602215,1.224193,-2.111461,-0.419299,-0.859359,-2.024598,3.094067,8.124668,-6.722468,9.541698,2.735496,-3.214008,-1.371446,5.903555,3.214208,-0.646234,-2.009853,4.753780,6.717492,7.601570,-0.835605,-3.311479,2.020591,3.449529,9.730155,-3.979133,1.690090,-0.971642,6.417568,1.664628,-1.425006,-3.759074,4.752819,6.878878,4.584900,9.189418,-8.373191,7.776906,1.161158,1.150908],[0.740696,6.696666,7.780894,0.381873,9.743070,8.105775,-8.405139,-2.877247,7.866528,-1.217621,-6.499571,7.339025,-2.843201,-1.810377,2.702756,-4.991951,-2.613993,-3.234203,8.193558,-2.505594,-1.859866,-8.438688,1.685243,-5.485672,7.294183,1.748279,-0.228903,-1.982281,-5.868361,1.227371,8.466644,-1.305632,0.201470,2.077340,-9.916734,-1.828591,9.811181,-6.234583,3.008429,-0.276829,4.730146,0.123230,-2.856351,-0.227007,-3.622101,-4.005705,8.664340,5.548906,2.169560,-2.783161,-0.760640,-7.682834,5.673197,-6.768588,-5.276619,9.867235,4.713335,6.164179,9.228100,-1.749409,3.919873,2.987844,6.739801,-6.893872,0.745343,1.144221,1.409827,0.576160,-3.265751,1.302290,-0.358726,-2.514751,3.052349,0.248537,-1.067401,3.102512,8.397111,-8.813402,1.093007,1.055676,5.042005,8.741302,2.152342,-1.862358,-1.107713,-7.226654,-1.486382,-5.315893,-8.171387,-4.173962,4.006743,6.212424,-3.958592,-0.329416,-2.351135,-2.997163,-0.905659,-3.606243,4.159491,1.310770,-7.909468,-2.245763,-7.975336,6.058538,4.988521,1.050746,0.105933,6.679213,4.435797,7.504035,8.547215,0.061465,2.626135,6.481371,-9.995051,8.731600,-0.853764,-7.089828,-9.133783,-1.675136,5.420781,2.945145,-5.059361,8.282604,-1.264571,6.202281,-0.235086,5.019307,-8.693260,-0.882178,2.173945,7.876005,-6.223727,-2.241896,5.031519,-2.179295,4.493687,9.361926,-4.646736,8.981320,-9.978463,-0.592475,4.668186,-3.317988,9.239693,8.118247,-2.481459,-6.314140,-6.276174,-9.349376,3.109702,-4.550414,-0.282014,-8.193675,-2.630973,1.173948,-6.177141,-2.312435,1.897566,6.466605,9.057978,3.316803,-8.664809,-7.668526,-9.108770,-6.396584,2.893459,-6.682051,4.227813,-4.036409,-0.099666,-2.170800,-1.943464,7.092983,8.628615,-0.653421,9.332870,3.474251,7.024655,-2.526052,-6.222108,-8.005336,7.772065,1.082265,2.259557,6.077108,4.442887,7.853604,-6.806273,8.975976,0.142096,-3.826209,7.755749,-9.160441,-4.545401,-6.054933,-1.104948,-8.775225,-4.324333,-7.481394,-7.246179,2.066646,6.497805,9.780129,9.033189,5.317256,-5.568112,7.007121,7.812384,-1.109976,-8.079553,-6.347875,2.888057,2.702701,-1.454588,-9.246632,5.554106,-8.568500,-4.896565,-0.531417,-5.555165,-9.729383,4.031340,-2.439274,-2.760496,-4.158632,-2.535527,6.405862,-8.608891,2.986698,-2.529861,6.372792,4.806539,-5.608665,2.462594,-1.731799,-1.523761,-1.821363,-3.088429,9.329454,3.518610,-9.160876,-4.698768,-4.626625,-5.660394,-8.725414,8.840005,-3.948306,5.224598,-2.446495,4.774748,8.621864,3.636499,9.604218,-6.697491,-6.260210,4.738412,5.901965,-4.977079,-8.331592],[6.927574,7.893658,-5.763254,-8.578398,-0.904916,-5.874912,4.944412,-0.256212,1.914958,-9.442891,-0.768506,2.857540,5.261095,4.215811,-3.472524,-3.495874,-8.572694,-3.696283,6.219148,7.428455,0.672698,8.413334,2.522172,-0.524210,-2.390886,-6.808615,3.504874,-1.637585,9.976260,9.134278,8.168496,5.725797,4.212912,-4.684572,-2.979030,8.335412,9.100888,-7.159679,-7.669340,6.051889,-0.585145,1.507964,1.732502,-0.269062,2.221142,7.053966,-8.389495,7.939066,-6.149000,-3.941251,2.509425,9.244677,4.678026,9.093477,-7.528285,-4.212317,-6.301731,-9.050393,6.248215,-6.795224,-3.884375,7.170691,5.925875,0.567382,-7.670330,-4.239858,4.880954,-3.982201,-6.366187,-2.224240,-3.853027,0.361601,-9.933251,-8.575995,-0.708597,-5.885194,-2.237987,0.091674,-1.872048,-6.483811,5.911266,-3.493076,-0.992299,9.301833,-4.126688,1.710497,-0.321374,-6.172939,-0.451461,-1.832308,6.015787,-5.706416,-4.227364,2.874657,-6.174997,8.856437,2.816958,-3.396311,-4.289942,-6.294992,3.380906,6.333329,-9.516171,-7.224378,-8.652638,6.823154,4.741861,-1.782505,-8.503748,4.991495,4.295472,-1.911827,-5.013587,-3.095954,-6.702620,-2.774146,-9.620524,3.091277,2.196408,6.464361,-0.560028,3.524594,-3.059807,8.588512,-0.414084,0.928116,1.192655,-9.229496,-1.502874,-5.126683,3.831718,-4.735259,-4.133362,-9.333424,5.898601,6.864141,-6.539332,-0.646303,-3.554705,5.364399,-7.190492,-9.365567,-0.940112,2.522684,9.488373,7.279292,-9.321985,-2.671253,4.099920,-7.165614,0.896218,-4.690138,4.517123,-4.662889,-0.546033,-1.902583,8.330200,-2.233459,7.697505,-2.767890,4.378482,4.176803,-2.896370,-0.281468,-7.413295,-4.389448,8.243195,4.283757,1.649633,-4.140191,-7.928632,-9.829840,-5.690034,9.748963,5.322981,-3.890299,-0.965044,-8.112967,-7.228731,-4.762815,-3.837684,-4.658134,-2.387926,-2.253646,5.241003,3.743539,1.916984,3.737621,7.219190,7.495179,6.528385,2.527373,3.174948,-9.291757,2.277712,-1.148116,8.519757,7.124067,-4.602443,-5.853034,-1.061645,9.865164,0.646044,7.198438,-3.358145,2.419093,4.727094,5.145987,4.132165,-8.539264,-9.841423,-0.106728,0.329572,6.919442,3.070244,6.281845,-5.393960,2.181877,-0.535173,-7.488427,8.285252,-7.185647,-6.966048,9.592759,8.434537,-7.691492,-2.102294,8.335351,-8.774216,0.196754,-9.478370,-2.984550,-1.899440,5.447898,-1.866898,1.164163,3.743656,-4.119735,1.390623,1.173123,1.655470,-1.480381,-5.881004,0.770406,4.068816,-3.304309,-7.301104,-5.080796,-3.743991,5.401596,9.105549,-6.635198,-8.044002,-6.833179,-9.622349,-6.013224,-8.201423,8.405543,-9.745161,5.939201],[-0.922666,-0.268423,-6.923908,8.310442,-0.019268,-8.614051,4.883770,-6.908717,5.272895,4.653976,1.675540,-4.040535,-6.889792,-5.770233,-1.403252,-8.305627,-9.402064,6.069770,5.181539,8.426295,9.200192,9.778352,4.330315,-7.229015,4.199187,-7.260821,9.791870,-7.831950,9.175917,5.675756,-1.338727,-4.603322,-6.958661,-3.989769,-6.780143,7.374709,0.673366,-8.750465,-5.775654,0.516907,-4.186721,-2.373757,-8.853200,3.204485,-6.485472,-3.688038,7.519793,3.356555,-8.920691,9.192252,0.416379,9.293616,-4.483443,6.058869,-5.388927,-8.552563,6.861923,4.994833,4.673202,9.757230,9.934250,-1.478112,-2.437068,-1.824122,5.764021,9.194521,-4.626898,1.377807,-7.318814,3.894712,-8.307397,4.056708,5.283068,6.522427,2.809226,-8.321052,-5.501989,3.401613,-3.583490,-3.208655,-2.252235,-5.987495,-0.219243,3.350854,8.160569,4.910639,-3.360383,8.930152,0.762129,-9.279418,2.349370,1.866941,0.282798,-1.327848,-0.084806,-1.163593,-9.120112,1.322385,-1.706411,6.874501,-1.466227,0.376962,2.587120,-6.763183,-7.582796,2.791497,7.982737,7.223533,-9.694522,-7.528501,-4.244563,1.143547,5.804233,1.076601,4.662285,3.050598,-1.360300,-0.185611,2.301556,-7.552484,1.296308,6.324880,3.428386,9.088205,-7.553982,-3.086435,-9.647757,3.668396,1.098935,-4.662098,0.732789,-9.706083,-1.549579,6.470180,5.544030,1.484198,-7.173664,1.676653,-0.353785,2.413765,-4.436983,6.424801,9.123052,-7.321449,-2.836613,0.423815,0.334221,7.824542,-1.753648,0.416786,-8.345517,-9.496540,-7.451712,-9.638525,-6.587960,0.183524,-3.044740,-6.832447,-1.295257,-1.879067,6.777342,-1.646488,7.443179,-5.277015,0.178222,7.295727,0.209713,-8.447604,8.681990,-3.789412,-4.286161,-4.282829,-9.987583,-6.319152,1.640861,4.428344,-6.716414,0.111690,7.110897,4.910928,-5.136923,5.211384,-6.868280,6.245720,-9.909530,4.220055,4.166607,4.856160,-1.716461,-9.411036,-4.739289,-0.832833,-8.014251,-8.097591,-4.568057,-8.082777,-5.733743,-1.158531,6.142850,-2.382109,0.988026,-3.086665,4.925459,-6.009455,5.928998,-0.346703,4.550072,-9.130436,-4.194944,9.767418,-2.013421,6.680037,8.633661,2.366868,2.946368,4.537295,6.356093,-1.014068,3.439739,8.401263,8.263183,8.451537,-5.823396,-5.070335,-2.796024,8.120138,2.034455,-6.029024,-3.472982,4.400015,9.878343,-9.998674,-9.679580,-4.247304,-8.697622,-5.003744,2.976973,-6.103812,7.959991,-2.074181,-7.822611,-5.166910,1.329377,2.408805,-4.119216,1.628743,9.097529,9.427965,-0.692911,6.833748,7.568241,0.045814,4.017660,-1.702915,-1.875344,5.990557,5.992384,6.690812,-7.291623,-9.962137]], dtype = "float64")#candidate|829|(4, 260)|const|float64
call_827 = relay.TupleGetItem(func_782_call(relay.reshape(var_828.astype('float32'), [6, 5, 6]), relay.reshape(const_829.astype('float64'), [1040,]), ), 0)
call_830 = relay.TupleGetItem(func_786_call(relay.reshape(var_828.astype('float32'), [6, 5, 6]), relay.reshape(const_829.astype('float64'), [1040,]), ), 0)
func_296_call = mod.get_global_var('func_296')
func_298_call = mutated_mod.get_global_var('func_298')
const_835 = relay.const([9.143648,4.772009,-4.197448,9.779375,-2.587552,-0.778195,9.997553,-7.931143,3.369390,-5.554218,-7.704437,9.107797,-0.649818,2.966999,1.323439,1.985147,7.323052,-7.780860,6.415711,3.629749,-3.360200,-9.243515,-2.267716,8.788798,-2.093513,-9.822454,0.083575,-2.651532,-0.385649,-4.624369,8.003753,-0.943260,-8.107696,-7.665463,-4.972405,2.870700,3.054802,-8.622185,8.363936,9.975260,-6.725352,-6.367578,-1.483699,0.802448,6.023719,-6.509221,0.863425,0.234075,7.361178,0.078162,0.658637,-9.413965,5.516441,-7.726357,-1.043560,-6.480758,7.613960,-9.077048,0.686581,-6.201692,1.755131,9.908969,-1.918885,6.589366,-9.591385,2.064693,0.908472,-5.349930,3.086729,6.219432,8.452817,-5.958502,0.245422,-9.455866,-2.091014,9.132889,7.218065,4.246904,7.332700,1.562875,4.093452,6.443171,-6.870404,5.474399,4.456399,1.728121,4.690337,3.716642,-1.046110,6.755281,7.123306,0.336897,-4.685212,-1.010230,4.380100,4.178187,-8.059297,0.075656,6.189626,-6.072842,-8.952187,1.072594,6.546706,-9.089887,-9.349023,2.600826,-2.122056,-3.055112,2.383782,-6.708389,-6.002821,4.303708,-5.949554,8.203749,-2.942387,-8.476449,7.141549,-1.236028,0.053150,-6.572980,-3.080458,9.363418,-2.044603,1.554923,-5.148425,-0.408539,-5.535968,5.265952,5.291767,-4.565829,1.128604,-3.851799,-9.145547,7.313884,3.756007,4.779616,3.639383,-2.179855,-7.835009,8.906599,0.676238,0.448092,-5.373480,-1.808448,5.865337,0.251318,-7.575482,2.120897,-5.228685,-6.682040,-2.323853,5.567627,-6.334156,-3.951944,-0.825722,8.245436,1.593711,0.347930,3.214521,2.603226,-3.006411,3.235847,-2.251528,1.962233,-9.018831,-9.809207,6.281208,-6.744437,4.253335,-3.643414,9.591765,4.573450,-4.674779,-8.391286,6.419921,-0.780796,-0.895199,-1.983963,-0.240069,1.497705,0.271976,3.947363,6.910839,-6.794196,-5.231954,-1.946162,-1.771024,0.937155,-7.381722,-6.697798,0.618572,8.934649,4.436314,7.047033,4.786013,-4.238269,-3.580246,8.611877,3.211253,1.031880,-8.275944,6.628073,3.801138,6.538817,-0.700847,2.357065,-4.498108,3.060496,-4.283467,9.654103,8.292632,-5.976880,-7.223801,-1.299693,1.287244,3.494740,6.911157,-6.825866,6.052486,1.797551,-0.874749,-0.574051,4.592842,-6.627652,-1.879847,-1.046229,5.345495,4.228530,-7.047860,1.481738,1.460412,-3.221525,-2.387132,-4.797118,-4.967779,6.498406,-2.599256,-3.324776,-8.815882,-4.455488,-8.478679,-9.077398,7.596770,6.478463,9.011197,-1.238303,-5.399321,-3.543761,2.254030,-5.865270,-9.864098,-3.533517,1.737179,-9.019790,6.146703,-1.861844,4.327781,9.041607,9.005447,1.959534,-9.720343,7.863115,-7.769783,5.745137,-3.721226,8.009175,0.096476,-4.795167,-8.059194,-7.820681,9.411438,-7.668482,-1.390360,6.917256,-2.407099,-3.144752,-5.085182,2.980981,7.561870,6.368573,5.140957,-1.118865,-4.400790,0.674174,-4.419340,8.638921,1.446475,-5.036146,3.613802,8.369852,-5.082402,-4.618923,3.854647,3.919833,-5.773015,3.235950,-0.621973,9.275789,-1.100949,2.827590,-0.649832,-6.704897,-7.778616,3.810088,-7.137961,-8.878174,7.055043,-7.341294,-8.804765,6.379713,-1.508330,-7.653805,0.232502,3.952684,1.248682,-6.477555,8.440642,4.218995,0.477942,-8.949404,1.613069,4.098975,2.758867,3.043729,7.374482,0.894264,3.441632,-3.695201,8.989005,-0.734750,5.478681,-7.174513,4.906601,-1.129543,9.252471,5.939166,9.922936,0.514837,-7.212743,9.868008,4.725780,1.081189,-1.034177,2.145834,7.784181,-0.893157,-9.121711,-8.848153,-1.835583,2.095526,3.344376,-1.277551,5.353434,9.473875,7.219699,6.854756,7.125400,5.688713,0.282243,8.743079,9.134206,2.222628,6.206941,7.358866,-1.418062,2.631235,6.359598,7.728217,3.916888,-9.248037,4.291998,1.596036,-3.676612,-6.808819,-4.788716,7.176321,-2.487227,8.453926,-7.813055,2.370111,5.608257,-1.507797,7.242999,3.751748,-8.710572,1.204727,-7.640577,9.507685,9.450927,-3.410145,2.054232,6.169670,-2.136594,2.230198,-5.664441,1.928815,3.917989,-1.401719,4.142533,3.837423,-8.562021,3.749960,-1.586534,5.145425,1.457728,9.289292,7.539498,-7.502446,4.687781,-6.948502,-7.928058,-6.127926,4.335934,-2.166960,-4.644768,8.155926,-9.729768,5.792314,2.894602,2.444490,-6.881018,3.038885,6.619235,3.066287,-1.227234,-9.874914,-4.367301,-3.506195,-2.458700,-5.009080,9.697997,9.505359,6.325328,-5.479760,6.776813,9.397126,-9.860055,-2.635991,-6.560359,-7.080524,6.786867,4.747966,6.892233,-0.947906,6.824254,8.630367,-4.070771,-0.847975,9.186430,-0.456888,-9.534202,9.295552,-6.247236,1.423975,6.768002,6.540276,-7.932055,-0.699702,5.836548,2.496474,-5.948373,1.820193,0.090850,-4.940146,-7.684424,-7.013215,-4.502434,1.452228,9.450566,4.443294,-8.937623,8.179223,3.353784,3.106936,-0.962910,9.226612,4.597914,5.440366,6.734448,2.209322,-0.707959,-8.967465,3.283707,-1.221815,-4.096264,-7.503185,-2.318152,-4.309001,9.126398,-1.355972,-9.763665,-5.041336,-5.569393,4.132387,9.885272,6.957606,-3.569122,-7.740435,4.609405,-9.496964,-9.065330,7.451422,-5.073511,1.600318,1.594062,-2.474589,8.339994,3.127135,-0.895427,1.582029,4.540001,-0.657946,8.893047,-2.188246,7.368136,-6.551351,7.964077,-9.538749,6.269802,4.867692,-5.627408,3.359260,3.806323,8.964600,8.883669,2.251729,-4.101232,-4.626356,8.189075,-1.043282,5.532638,-2.227243,-0.653329,-4.967497,-2.000789,-1.595411,7.116483,9.003233,-1.871322,5.118725,2.467920,0.890916,-6.111073,9.138217,-5.245179,-2.579893,2.296969,-0.884254,8.197502,9.002959,-6.792058,-9.180456,2.510238,-9.082672,6.468951,7.641809,8.874487,-2.912803,-7.189805,1.778334,1.943643,-6.411487,-6.798698,5.800320,-9.627834,-8.379390,-3.900264,-4.589904,-2.293748,-7.051390,-5.727170,-6.681780,-9.373952,1.465843,8.178973,7.050660,-0.897207,1.529462,-8.598568,6.649746,0.161351,8.443985,-7.329559,-2.075040,9.760617,-2.749009,-5.431247,8.402934,7.157598,-7.471653,0.415824,-3.120269,7.599776,-7.791132,-3.868381,-2.207412,9.126903,6.155354,-8.046162,-9.255088,-7.652876,8.707237,-6.924878,5.853862,-2.364727,-5.441732,2.024707,1.029983,-2.513540,-3.646295,6.530179,-7.797687,7.971385,2.726377,9.154676,3.822354,-2.058930,6.874299,8.092085,9.451432,-6.616298,8.043969,-5.780473,-7.291888,-3.115523,4.705738,-0.625159,8.968825,8.469476,2.098194,-6.570025,8.008714,5.613599,9.247644,7.515643,-9.382984,-9.191576,-3.132321,4.241799,8.814446,8.585547,4.000410,9.114707,1.569523,1.539214,2.106323,2.833944,4.898644,2.884898,2.186330,0.457978,-9.992514,9.517807,-8.371263,-0.354528,3.769165,-0.550992,5.100327,8.509048,-8.911028,2.887738,-3.475147,-8.669636,6.441006,3.976591,0.843541,1.803832,-3.456135,-5.275086,3.100380,3.216939,-6.259261,3.516017,8.963872,0.615221,-0.728531,0.545408,2.452090,-5.816069,-1.713356,-6.098447,-0.695053,2.844330,-8.985783,7.814569,-1.593627,-3.842662,-1.782083,-9.893101,-1.578499,2.482290,-8.013390,-0.403849,5.502202,8.881028,-3.036017,7.861200,3.416234,2.266659,-4.209464,8.998681,9.441160,7.349807,0.070368,2.910597,7.819558,-1.495314,-4.692053,-4.654001,5.917904,8.026960,0.076815,-5.497701,1.852865,-9.912023,-4.326214,1.201535,-1.536292,5.901531,-4.966590,6.896088,-0.632351,-5.271418,-6.097270,-4.073993,-2.004514,5.387196,-7.397840,-4.255932,-8.994312,3.209898,-8.704479,-6.739651,2.650775,-7.842209,0.262656,-2.427513,-8.103973,-4.444985,1.546040,-6.155470,-9.391532,1.482442,-8.331723,-7.684856,-1.918057,5.545538,-7.454636,1.656166,-7.781554,-2.875719,-3.947668,6.430098,5.956571,7.196461,-2.869665,-6.351577,-0.996884,7.606381,1.464995,9.657063,8.618487,-8.211985,-0.047304,9.115138,1.080172,-9.060613,-7.213066,-5.610027,4.509442,-3.686394,-7.856312,-0.903671,-2.262992,3.505962,-9.123546,-4.372039,2.736062,2.178513,-9.827035,-2.006144,-4.761898,0.355333,-4.646309,-3.631601,-0.508451,5.225745,3.326122,8.751732,6.117175,3.369666,8.714401,4.723058,-6.938165,-9.787520,-2.582655,2.346821,-8.584926,7.230973,-4.826607,-2.147056,2.477234,7.386144,-0.290255,-8.590797,7.748249,7.770140,5.735871,-1.672582,4.143667,9.657731,9.771501,4.014889,5.288211,8.236878,-4.730888,-7.467007,3.278707,0.225691,-2.058264,-9.609725,6.949781,-1.268160,-9.380112,8.627705,-6.844649,2.748863,2.399764,8.536365,-4.675639,-2.145218,-5.742503,-1.459666,6.562819,5.355014,6.963241,3.971844,5.015952,-2.877464,-4.418363,-8.505832,-8.200938,7.178545,-1.383383,-2.034442,0.616818,5.340905,-8.240824,2.716471,6.975020,1.314242,-8.276996,-8.766926,8.088090,-1.475943,-7.140269,-7.753104,-3.370887,-2.518609,-5.955045,6.536199,6.509536,1.723450,-9.675961,4.770288,-8.839917,9.461077,-0.218789,-1.290660,-4.411515,2.049781,1.666893,1.165958,2.272246,-1.858734,-7.637202,2.830125,3.877841,6.673643,-9.989724,4.456114,-7.352783,2.708847,-2.730999,-2.047519,-4.250018,1.889152,4.921735,-5.401632,-4.531531,-9.513963,-5.051218,9.315412,-6.389241,-8.441935,4.819531,4.979496,-1.530091,-6.316529,1.297057,1.046446,4.990411,7.090811,4.953007,3.319034,5.399755,-5.884031,-5.123586,5.747235,0.091656,2.415661,6.175622,-9.178776,3.378805,2.408113,2.288985,1.332288,3.105575,9.585741,-7.876806,0.671126,-9.459392,2.187411,2.899100,0.224957,-3.115972,8.041441,-0.719586,3.296001,3.375838,-8.945711,1.539435,9.053353,-8.972306,9.688165,4.010445,-4.488413,4.308598,-9.179057,-5.867496,1.670275,-0.158379,6.543915,-9.476741,9.287929,3.108065,-8.959189,2.550359,2.447296,-9.265278,-6.146272,9.246858,7.620710,-9.307179,3.051715,9.813339,-7.848819,-7.138981,-5.897785,-6.489359,-9.759725,1.085282,0.765948,-7.797904,4.798565,2.750298,-8.756633,-2.130438,0.827672,-3.453954,-5.562827,0.024480,0.796708,-4.642154,-4.708638,2.984866,-8.758888,6.976104,9.702248,-9.399598,-4.721954,-4.876614,2.157240,-3.774728,-4.906236,8.359477,1.402654,3.479215,-2.999376,-4.282855,-2.090681,3.530392,5.673339,-9.775958,-5.016489,0.934481,0.611384,-0.301278,-4.772088,5.528422,4.128249,1.340138,-5.606083,4.506121,-6.513570,1.947258,-2.922093,3.126332,-8.531759,-9.866909,7.853455,6.664957,-7.795619,6.688785,5.455452,1.739860,7.580305,4.790122,1.210450,7.742557,-5.499391,-7.772466,9.452570,-2.173697,-0.583202,6.526653,-4.111210,-9.031961,-9.468457,-3.446843,-7.238743,-7.449316,-9.100599,5.591852,-2.770090,-1.484998,-5.638643,3.748860,-1.457114,6.330794,3.338294,-2.155716,5.780104,-8.960361,-9.351578,3.300294,-2.110189,0.161690,2.705585,-7.529318,1.432435,0.151647,5.929243,3.219240,-3.590091,-8.783131,6.936381,-4.755484,3.878101,-4.086329,1.967529,4.297977,6.985502,-5.797671,3.492558,7.247008,7.250673,-5.871015,9.864401,0.762430,-3.783743,8.080825,-0.783166,6.487736,-1.417304,-1.468756,9.399823,9.936272,-1.371734,-6.360701], dtype = "float32")#candidate|835|(1080,)|const|float32
call_834 = relay.TupleGetItem(func_296_call(relay.reshape(const_835.astype('float32'), [9, 12, 10])), 3)
call_836 = relay.TupleGetItem(func_298_call(relay.reshape(const_835.astype('float32'), [9, 12, 10])), 3)
func_486_call = mod.get_global_var('func_486')
func_488_call = mutated_mod.get_global_var('func_488')
call_842 = relay.TupleGetItem(func_486_call(relay.reshape(const_829.astype('float64'), [13, 8, 10])), 2)
call_843 = relay.TupleGetItem(func_488_call(relay.reshape(const_829.astype('float64'), [13, 8, 10])), 2)
output = relay.Tuple([uop_799,call_827,var_828,const_829,call_834,const_835,call_842,])
output2 = relay.Tuple([uop_799,call_830,var_828,const_829,call_836,const_835,call_843,])
func_844 = relay.Function([var_798,var_828,], output)
mod['func_844'] = func_844
mod = relay.transform.InferType()(mod)
mutated_mod['func_844'] = func_844
mutated_mod = relay.transform.InferType()(mutated_mod)
func_844_call = mutated_mod.get_global_var('func_844')
var_846 = relay.var("var_846", dtype = "float64", shape = (15, 7, 3))#candidate|846|(15, 7, 3)|var|float64
var_847 = relay.var("var_847", dtype = "float32", shape = (1, 180))#candidate|847|(1, 180)|var|float32
call_845 = func_844_call(var_846,var_847,)
output = call_845
func_848 = relay.Function([var_846,var_847,], output)
mutated_mod['func_848'] = func_848
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1676 = relay.const([[[5,9,1,4,-10,8,5,3,6,4,2,6,8,3],[-1,-8,-2,-4,4,6,4,4,-4,5,-6,3,-9,-6],[-6,7,-7,-6,9,1,-7,-7,-2,10,-8,3,4,-2],[7,-1,6,-2,2,3,7,7,10,7,-7,-8,-2,6],[1,8,-5,-10,-9,-5,10,4,-1,-3,7,5,-9,-8],[5,8,4,-3,6,-2,-6,10,5,5,-7,7,8,-9],[-6,-9,-4,5,2,-9,-3,-5,-7,7,9,6,-8,-1],[6,5,-10,2,-1,2,-7,2,-1,9,2,-8,5,8],[-8,4,-2,5,-5,-3,-6,-8,5,2,-6,2,6,10],[3,-9,-10,4,-3,-1,-7,-3,-1,-5,2,2,10,-8],[3,10,-8,6,3,10,-10,4,-7,-2,9,-7,-7,-9],[-3,5,-4,2,5,2,10,4,4,7,7,2,-9,9],[7,2,6,6,4,4,5,-7,-9,-5,3,6,3,7],[8,5,3,-5,-7,-9,-6,10,10,-8,-10,-9,7,4],[5,10,-7,-7,6,-9,3,-2,2,2,-9,10,3,6]],[[-7,10,10,-3,6,-7,-4,-5,-6,-7,9,2,-10,-1],[2,-3,-6,10,4,4,7,-4,10,9,-6,-8,-4,5],[3,-8,-5,-3,-5,-8,-6,1,-4,4,2,-1,10,3],[10,-9,-8,-5,10,-4,10,-6,-4,2,9,1,-9,-2],[-4,2,-5,-4,-8,5,-8,4,1,-6,4,1,4,-7],[-8,4,5,5,-9,-4,9,-6,8,-5,-8,2,-9,-9],[8,-7,-6,8,7,1,2,4,5,-8,-7,-2,6,-1],[8,7,8,10,-5,5,-2,9,-4,-3,2,-3,-6,6],[-10,6,-8,4,9,10,-4,7,5,-10,-10,7,-6,-10],[7,4,-6,-7,-5,10,7,-7,9,9,-1,-1,1,10],[-10,10,10,-7,6,9,-7,5,-1,6,-8,3,3,-8],[-4,2,3,-3,7,7,6,-7,7,6,6,-9,7,2],[6,6,2,-5,-1,-8,-10,6,-3,8,4,-9,6,-3],[-9,-4,-8,-4,8,5,-8,2,8,-4,8,10,-6,2],[-8,-4,1,10,8,-10,-3,-8,6,9,-7,-4,4,8]],[[-4,1,-7,-8,5,-8,4,-9,-2,8,-8,-3,-1,-1],[2,5,4,-9,1,9,-5,-8,8,-6,6,-10,2,-1],[-4,-7,4,4,8,-8,9,6,8,-3,-1,7,-4,2],[-2,-10,-5,-3,-3,-8,-10,-1,-8,5,8,4,-10,9],[-10,1,-3,-8,-1,9,10,4,-8,3,1,1,7,-1],[6,10,-8,-8,5,1,-9,-8,2,2,-7,5,2,-7],[3,7,-5,-5,-1,6,-3,10,1,-2,9,2,-9,-4],[-3,2,-9,5,-10,-9,-5,7,-5,-1,-4,-9,7,3],[-8,-8,7,9,3,-2,-6,3,9,1,-6,10,5,7],[3,-7,6,-4,-7,1,-8,-2,5,8,-5,9,9,-3],[1,8,9,-6,3,10,-4,-10,5,7,-7,-5,3,-4],[-3,9,-7,9,2,-1,-5,5,-1,4,-6,7,7,6],[5,-4,-6,-4,10,7,9,9,8,-7,-10,2,-3,9],[-10,-10,4,-7,7,-1,5,2,-7,-9,-6,1,-7,-2],[-3,-10,8,2,-6,-2,10,-1,-5,-10,6,7,-8,-8]],[[5,-7,4,3,-9,-4,6,7,1,-3,-3,-9,6,10],[6,1,9,10,-7,-5,-10,9,-5,3,6,-4,-1,-5],[9,-3,3,-6,3,-6,-9,-7,10,-6,-2,-2,-7,7],[-9,6,-10,-5,-2,7,-5,8,-4,4,10,-10,8,-3],[10,2,-4,9,7,1,5,9,-1,-5,-9,-10,8,1],[3,3,-6,5,5,-6,-8,-4,-4,-2,-7,3,-5,-4],[4,10,-1,-1,8,-9,-9,-7,-3,-9,-3,4,-7,7],[10,2,-1,1,5,-1,9,-8,-6,-5,-6,-5,-5,-1],[6,2,-3,9,-9,8,-2,7,-10,10,-7,-6,-7,-2],[-2,5,-2,3,3,7,-2,-6,-5,-6,5,2,10,7],[-9,-2,-1,-8,-5,-8,2,-10,2,9,-6,-4,-2,7],[4,-1,-2,-5,-9,-7,3,3,-3,-2,-9,-2,-9,-10],[-3,-2,10,2,-6,6,-10,-10,-8,-10,7,6,4,-3],[-4,-3,9,-4,1,-10,2,2,8,-5,-6,9,-9,-1],[3,-10,-8,-6,10,-5,-7,-8,10,-1,4,7,2,-5]],[[-9,8,2,-10,10,-9,-5,3,-9,1,1,-8,-7,-4],[10,-4,8,2,-9,-4,6,9,-8,-5,3,6,7,8],[-8,-5,-6,7,10,-7,2,7,-5,-1,-9,9,2,8],[9,5,10,8,-10,9,-4,8,8,-4,-4,-3,3,6],[7,-5,10,6,2,6,-8,-4,1,-8,9,-1,9,7],[8,-7,7,-3,-4,9,-2,-7,-1,-5,-3,3,-7,7],[8,1,-7,-1,2,5,3,-1,-8,7,1,2,-7,8],[-9,3,8,3,10,-4,-8,-10,3,-5,-2,-2,4,-1],[-1,6,-5,-5,-1,-2,2,5,5,10,9,-10,-8,5],[6,-5,-6,-7,8,-6,2,-1,-2,-6,-4,-6,10,5],[8,-1,8,3,9,-5,-2,7,6,10,-6,6,1,-2],[-8,2,-7,-2,1,8,-3,-6,-3,1,-2,-9,5,8],[-7,-10,9,3,-5,2,-8,5,-3,-10,-7,-4,-2,-7],[8,5,-10,-2,-7,5,-10,9,7,-1,6,-5,-2,1],[-3,1,8,9,-10,-6,-8,10,-8,-5,-2,5,10,2]],[[8,8,-6,3,4,9,-4,3,-6,9,-10,10,3,-2],[5,8,9,-7,4,8,-3,-4,-4,9,9,-5,-2,-3],[-2,1,10,3,3,6,-9,5,-1,-8,-5,-6,-5,-5],[8,2,-6,-9,2,8,1,5,10,3,9,8,-8,-10],[5,-10,7,5,6,-10,6,-6,-5,7,10,-7,-1,5],[-9,-2,2,7,5,3,-6,2,2,-6,-6,2,-5,5],[6,-5,6,-9,-1,-6,-8,10,1,-5,7,-1,8,-10],[-6,9,6,-7,3,-1,-10,-3,-7,4,4,-2,-3,-5],[-10,-2,-2,8,-6,10,-9,-6,-9,9,3,-3,-5,7],[2,8,8,8,-2,-8,9,8,9,9,4,-4,-3,3],[4,5,3,-5,3,9,-10,-4,4,-9,7,-3,-5,-7],[5,-8,9,4,9,2,-3,-7,-7,3,4,-8,-7,-1],[9,-3,-7,3,6,-9,7,7,2,6,-7,-3,-1,4],[-2,-2,-3,7,-8,10,-10,-9,2,-8,3,4,-4,-3],[-7,-3,-1,10,-10,8,7,-3,6,-3,-9,-3,-8,-4]],[[-5,5,5,-1,-3,-2,7,-4,-7,1,-9,4,-9,4],[-5,8,-7,-1,1,9,-10,10,1,4,-8,-5,-1,-9],[-5,8,1,-1,-10,-1,2,-8,2,-2,9,3,2,6],[-7,6,8,-6,-1,-7,7,4,7,4,8,-4,-1,-6],[-5,6,9,-7,-7,8,-8,-9,-3,4,4,1,3,1],[-4,-7,-9,-2,5,7,-2,10,-10,-5,-3,-4,5,9],[3,-2,-4,6,1,4,-9,10,6,9,10,-8,3,9],[9,7,-7,9,-7,-7,-4,6,3,-5,7,-6,8,-1],[-8,-8,-8,1,4,-9,6,9,10,-3,1,-2,2,5],[-4,2,7,-8,-4,2,-8,1,8,4,-5,-1,-5,-5],[2,8,8,-7,9,-2,4,-3,7,-8,3,-5,9,3],[10,4,9,10,-1,2,2,-4,-10,-1,-2,3,1,4],[-3,-7,-6,-9,-2,-2,-5,4,10,8,-9,-6,9,8],[7,-3,10,5,10,3,-4,6,3,1,-10,-5,7,1],[1,8,-3,10,9,-1,1,1,-1,7,7,-9,-4,-7]],[[6,-6,9,-6,-3,8,-4,-2,-5,2,-2,-1,-4,7],[3,-10,-1,-5,-10,-3,-9,-8,-9,10,5,-1,-9,-5],[5,3,-3,-6,-9,5,5,-4,-8,-7,-3,3,7,5],[10,-10,-2,-2,6,-1,10,6,-3,-10,-3,10,-4,-5],[8,-8,10,3,5,-8,5,7,5,-3,-4,-9,-9,-4],[-3,3,-9,-2,-3,2,2,8,-7,-5,8,3,8,-10],[1,10,-3,7,-6,-2,6,6,1,-5,6,-3,5,-8],[-7,10,4,-4,-2,10,2,8,5,-3,-5,7,6,8],[7,4,6,-4,5,7,10,7,9,-7,-9,-1,9,-8],[1,8,-3,1,-8,8,-4,-3,2,4,7,-6,-4,-1],[-6,-9,4,-4,-10,6,10,3,1,-6,-8,-4,6,1],[6,2,-10,10,6,3,-9,-8,-5,10,-9,-8,-9,-1],[-10,-4,4,-2,-4,-8,-6,-8,2,-1,7,4,10,-4],[-2,-5,-9,3,-4,8,5,10,-9,-6,4,-9,-1,-8],[4,-1,9,1,4,1,-6,5,7,5,-4,8,-10,-1]],[[-9,-3,3,9,1,-9,-1,2,9,1,3,-1,-8,-6],[-5,1,-6,-7,8,2,-6,-4,-1,-6,-6,-8,6,-7],[-10,5,8,9,10,-6,2,8,8,6,-10,2,1,4],[-1,4,-4,5,4,-7,-2,1,-8,3,-2,-7,-1,-8],[-9,4,5,-1,6,10,-2,2,-9,-9,5,5,10,10],[1,6,4,9,-7,-10,-6,2,-9,-1,1,-5,1,4],[2,-3,-5,2,-10,-1,-1,1,-5,-5,-9,-3,8,7],[-10,1,4,-4,6,8,-8,4,-2,-7,1,-1,2,-1],[4,2,-8,7,-8,10,-8,9,-9,-5,9,10,-8,10],[-7,-10,8,8,-4,7,7,-3,6,-10,6,-6,9,-5],[-6,-7,-8,5,-1,-2,-7,7,6,8,-4,7,-8,-5],[8,4,-6,9,9,2,7,7,4,-8,5,-4,-8,1],[3,-3,-9,-7,9,1,-1,10,-6,4,2,-2,-1,8],[-5,-5,6,-1,4,-9,5,-3,-2,6,9,-10,3,-7],[-8,4,-3,-4,-7,-1,-5,6,-8,-8,-1,10,4,10]],[[-10,2,10,-1,-2,-2,-2,-2,1,8,-6,-2,1,-6],[2,4,2,9,-1,5,-9,-4,9,-7,5,-2,2,-9],[-7,-1,2,-10,3,-6,-4,-8,9,-2,-10,-1,-6,6],[-8,-2,2,4,1,8,-5,-10,7,-10,2,5,4,-6],[8,8,-9,-2,8,-4,-2,-4,-7,6,4,10,-1,-9],[8,5,9,1,8,10,-1,-6,9,10,6,-9,3,6],[4,-8,1,8,1,-10,5,4,4,-9,-1,8,4,-8],[7,-2,1,3,7,4,3,6,1,3,9,-8,-8,8],[6,-10,9,-5,-4,-4,10,-9,-1,-10,-3,8,3,-2],[4,7,-5,-4,1,-7,-8,7,1,2,9,2,4,-5],[8,2,-9,-4,7,3,9,-4,2,-6,7,5,-7,1],[-9,-10,8,-10,10,3,4,-5,5,10,3,2,-2,-10],[-4,-4,-7,-1,-6,-2,-7,-4,-1,1,-2,-7,7,-7],[-6,1,7,-4,-10,9,-6,-2,8,-3,7,-8,9,4],[-3,-6,-7,9,-10,8,8,6,10,10,-6,-8,-8,-3]],[[-10,-2,9,1,5,-10,5,-5,-7,10,10,5,2,10],[10,9,-10,4,-9,7,-7,8,-7,8,7,1,-7,-3],[2,2,-7,-1,-2,-8,9,6,2,-1,-9,1,6,-3],[-10,5,8,-1,8,3,6,2,5,-5,-2,-6,-3,6],[10,-4,6,10,5,-10,-5,3,-2,-1,3,-6,10,5],[-8,7,-10,6,-10,-1,-8,-10,-2,6,-9,3,-1,-4],[-10,8,-10,3,6,6,-6,1,-8,8,-3,5,1,4],[8,5,-7,-3,-8,6,8,7,1,-9,-8,-8,-1,-3],[-3,-4,-4,-9,4,9,10,5,9,3,2,8,9,1],[1,2,-10,4,-7,-7,7,-2,-3,-9,1,-4,-2,-10],[-10,-2,-4,2,-1,10,-3,1,-4,1,2,-2,9,-3],[-8,-3,6,9,10,-6,2,-2,-4,5,6,5,-5,8],[-3,-7,5,-1,-5,-1,-4,9,4,8,-2,5,-10,-5],[-9,9,5,-7,3,-1,10,7,-10,9,6,1,-2,-8],[-1,7,6,-4,-9,-1,-2,-3,6,-8,6,8,7,-2]],[[8,-1,-2,8,2,1,6,-6,-6,-1,-10,-7,-8,-8],[6,2,-1,4,-1,1,6,-7,-6,1,1,-4,-2,-7],[8,3,-9,-10,10,-2,-6,-6,-7,-7,7,6,-1,-9],[3,-3,-5,-7,-5,-3,-2,-8,1,5,9,2,-9,4],[-9,4,2,5,8,-2,-10,8,3,2,-1,2,8,-8],[2,-10,-8,5,4,7,-3,-2,7,8,-7,-4,9,2],[7,6,-3,-4,-1,-1,10,-4,1,7,10,-8,6,-7],[7,2,-9,-5,5,5,8,-8,6,-1,-1,-6,6,8],[-7,6,-4,8,-7,10,-4,-7,-3,-1,10,-7,-4,2],[9,1,4,-10,6,-6,2,-8,-2,-9,1,-3,3,9],[-3,7,-10,-7,-6,5,-6,-8,8,5,8,-5,3,9],[8,-3,-1,-4,-7,-5,10,6,2,4,-9,-10,-2,-7],[2,3,5,2,6,-7,9,-7,-4,4,-8,-8,9,3],[2,8,-7,-6,7,-8,-6,-6,-7,-5,-8,6,9,-5],[3,-2,10,-1,-1,9,6,2,10,-8,-3,-7,2,-8]],[[-1,-1,-3,-9,5,9,-8,-5,-4,8,-5,3,9,-10],[7,-6,-3,3,2,-8,-4,6,-5,-10,-7,7,7,1],[-3,-9,-1,1,3,-1,-5,-3,-5,-3,-9,-1,1,10],[9,-4,-4,-3,7,2,-5,7,1,-1,9,1,6,4],[-2,-5,-8,1,1,1,-7,8,-6,-4,-4,-7,10,1],[-10,3,-3,-2,7,-5,1,-6,8,2,10,-3,2,9],[8,10,-7,1,-1,-3,8,7,-5,-8,7,-7,8,1],[-1,-4,2,-8,-6,1,4,6,-1,1,-5,8,-1,-9],[6,8,2,-8,-5,3,5,-9,-7,1,9,3,3,8],[-6,-2,8,-4,2,-7,8,8,-6,-2,-5,9,7,10],[3,5,-4,6,6,6,-1,9,-5,-3,-6,-1,10,-5],[-4,-6,-10,8,7,-9,3,-5,8,-6,-10,1,-5,-7],[4,1,-6,5,-9,3,7,3,7,4,3,-8,8,1],[4,10,9,-8,-10,2,-5,9,6,2,1,7,-6,7],[6,9,5,10,1,-10,10,-4,8,5,-5,-5,2,10]],[[-9,-2,-4,-7,-10,-2,6,6,7,-8,-3,-7,9,5],[-8,-9,-2,3,2,5,-8,5,-1,7,10,3,10,2],[-3,-1,1,-7,-1,-9,2,-8,-2,-6,5,3,1,-7],[-5,10,-7,9,1,3,10,-6,7,-5,-9,4,-4,-7],[10,-6,6,-2,-7,1,1,-1,-5,3,2,-2,9,-5],[10,6,10,4,-9,7,9,5,1,3,6,-9,-6,-3],[5,-5,-2,5,-4,7,7,-1,-1,10,-6,-9,9,-3],[7,7,4,8,-5,-7,4,-4,8,-1,4,1,4,-4],[-8,-7,3,-10,8,-4,-3,-5,4,1,-7,-1,4,2],[-3,-1,3,9,-4,4,7,6,-8,-8,-2,-4,-1,-9],[8,3,8,-2,3,-7,-10,-8,9,-6,7,-1,3,6],[-2,-1,8,10,7,5,5,7,-2,-10,-9,2,-2,-2],[2,-1,7,-3,-5,1,8,3,7,-7,-3,4,7,9],[-8,-6,-1,5,10,-2,-2,8,8,-1,9,6,9,5],[3,-5,7,3,8,-5,-7,-5,10,9,5,5,-10,-8]],[[-8,-4,9,5,-3,-1,8,1,-4,4,-10,-2,-5,-8],[7,-5,-9,7,2,-3,4,-8,-1,-8,5,-1,-9,7],[1,10,-1,2,-7,9,4,-4,7,1,-9,5,2,-9],[8,-4,3,-6,8,4,8,5,-5,-10,-1,2,-9,5],[10,2,-2,-8,10,-9,1,-8,-9,3,-1,8,-4,-3],[-5,4,-4,5,5,-1,5,-7,-3,7,7,-6,3,-2],[4,9,4,7,2,-4,-3,-3,-4,7,3,-9,-6,-1],[-1,-5,6,4,-7,-10,3,5,-8,6,-7,9,-9,-2],[-5,3,4,1,-3,-2,8,-9,-5,-8,-1,6,9,1],[4,-2,-6,7,4,4,4,8,-9,4,-1,8,9,1],[-9,-6,6,4,-5,-6,10,6,7,8,1,9,-6,-4],[-10,3,-7,-4,6,-7,-2,10,4,-6,10,-4,-7,2],[9,-8,-1,10,-7,3,6,-6,2,8,2,6,7,-2],[4,-8,2,-3,7,10,-2,9,2,4,-9,-1,-8,4],[6,2,10,2,7,4,1,-10,-9,-10,-4,7,9,-6]],[[-7,-6,6,3,-9,-9,-2,-2,9,7,9,-8,-2,-6],[-5,9,3,-4,-3,-5,4,9,-7,1,3,3,-3,-4],[-8,-7,-5,4,2,-6,-7,-7,5,4,-9,7,3,3],[-2,1,1,2,4,5,8,-1,4,-3,-6,-2,-4,-4],[-10,-2,-5,-2,-1,-4,4,1,3,-4,-9,-8,6,9],[-1,-6,3,-3,1,7,-2,6,-2,-8,8,4,1,-4],[3,6,10,7,9,4,-7,-1,1,7,-2,-8,6,-10],[3,-3,-1,2,-10,7,-1,9,-1,9,6,7,10,2],[9,-1,8,-1,-3,-2,-2,-4,1,10,-6,8,-6,1],[2,10,-5,-4,-6,-4,7,-4,7,1,1,-2,2,-10],[4,-4,5,8,6,-5,-6,-1,-6,-2,-3,3,-6,-3],[-2,9,-4,-2,7,-9,1,-5,-4,2,1,5,8,-10],[-10,3,3,7,4,-6,-9,-4,-10,9,-5,-4,-4,-2],[6,7,6,7,3,-7,-5,-8,10,7,2,4,5,-8],[8,3,4,9,9,9,3,-1,-1,-5,2,10,7,3]]], dtype = "int64")#candidate|1676|(16, 15, 14)|const|int64
var_1677 = relay.var("var_1677", dtype = "int64", shape = (16, 15, 14))#candidate|1677|(16, 15, 14)|var|int64
bop_1678 = relay.multiply(const_1676.astype('int64'), relay.reshape(var_1677.astype('int64'), relay.shape_of(const_1676))) # shape=(16, 15, 14)
output = relay.Tuple([bop_1678,])
output2 = relay.Tuple([bop_1678,])
func_1699 = relay.Function([var_1677,], output)
mod['func_1699'] = func_1699
mod = relay.transform.InferType()(mod)
var_1700 = relay.var("var_1700", dtype = "int64", shape = (16, 15, 14))#candidate|1700|(16, 15, 14)|var|int64
output = func_1699(var_1700)
func_1701 = relay.Function([var_1700], output)
mutated_mod['func_1701'] = func_1701
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2087 = relay.var("var_2087", dtype = "bool", shape = ())#candidate|2087|()|var|bool
var_2088 = relay.var("var_2088", dtype = "bool", shape = (1, 10, 12))#candidate|2088|(1, 10, 12)|var|bool
bop_2089 = relay.logical_and(var_2087.astype('bool'), var_2088.astype('bool')) # shape=(1, 10, 12)
func_486_call = mod.get_global_var('func_486')
func_488_call = mutated_mod.get_global_var('func_488')
const_2107 = relay.const([[-2.060415,2.436083,-5.664278,4.159546,5.073961,-8.197996,9.411679,-2.119409,4.628963,-5.536728,-6.997655,8.262482,-0.601357,6.751312,5.649526,4.975087,-6.075365,-7.694433,8.504327,-2.336294,8.460632,4.385848,-1.406031,5.104554,4.043788,-5.988735],[8.342349,7.757612,-2.673623,-6.585079,-2.859418,1.805260,4.596410,5.328393,9.907953,7.983541,5.286988,6.063637,-5.821445,4.558706,9.391520,7.555442,3.718885,-3.283228,2.534648,3.683296,9.787938,0.108605,9.351427,7.857666,-2.180375,0.082180],[1.575472,8.990766,-4.862989,-2.613821,-0.079982,-0.058334,-5.177598,8.801161,-5.394395,9.428489,9.168102,-6.026906,-7.472707,4.581913,-7.210820,-1.600865,-3.735308,0.190141,-1.297131,-5.899964,3.127269,-2.838070,8.682726,8.878310,5.791351,1.285489],[1.390279,4.425010,-9.535694,8.386839,1.017698,-4.438294,4.811066,-4.896714,9.837592,4.344502,-9.154683,-3.499604,4.886809,1.886376,1.200261,-4.052846,-4.762910,-0.974873,-8.539505,8.762160,5.908435,9.036942,3.255477,-4.039056,-6.463441,0.452861],[5.235702,6.373380,1.214394,1.236349,4.470176,-4.676846,2.796274,-1.138909,-9.925350,-5.242614,-2.525192,-6.430584,0.950583,-0.642843,-3.318024,-3.157717,-3.315519,2.776022,-8.912903,-4.484944,-7.186121,1.649262,7.915490,8.597645,8.894860,1.103294],[-5.289766,4.706794,-9.859738,4.943930,9.728520,-5.800982,0.229024,-2.147389,1.990839,-4.685214,5.148565,3.884564,5.923954,-4.172317,-3.203502,-7.082763,6.785861,3.513887,-6.950770,7.482370,-9.576991,9.995489,5.510981,-6.498108,-7.794305,-7.531173],[-7.635688,-5.568475,-6.178115,1.181261,-7.187006,9.963816,2.983342,6.194198,-5.164330,-3.012812,-7.443752,-1.891562,9.438288,-3.800656,0.507592,7.216486,4.750911,-1.777374,-0.064949,-2.078313,7.498794,-6.914288,-1.925649,-3.004766,-8.132634,-5.749194],[-4.736093,-2.689394,8.017994,7.854171,1.265422,-9.033842,-1.795909,2.461498,-2.564067,4.303271,1.373544,5.736685,3.883335,-0.708910,-0.072490,8.449599,-9.775547,-2.430831,-6.165614,-8.560485,-4.170677,-8.501533,6.187691,2.206286,-8.692443,-8.084190],[-1.960944,4.324436,4.742593,-1.764516,-3.149088,3.677716,3.336229,-8.471157,1.585270,-5.269304,-5.140389,4.187279,-4.752439,2.572266,9.063507,-8.054848,5.377496,-7.160282,-5.268159,-2.947209,-8.092874,3.105848,5.595819,2.803394,-5.490242,-4.017576],[3.676970,5.088751,-1.017029,-6.180175,-2.642253,-5.271531,-9.653982,-2.051396,8.155832,-7.148703,-2.395504,0.113104,2.078379,2.388064,-2.755269,-4.498750,9.098105,0.422729,6.251365,1.187527,8.845614,3.388660,-1.415005,-9.526074,3.569620,1.471764],[-2.573637,9.893040,-6.841592,0.487905,5.464222,-9.083565,3.056496,-9.014211,2.156271,-2.155077,1.796500,-8.892186,-0.247840,9.951352,7.681273,5.463777,-3.344185,-6.580531,1.951010,5.146803,9.294587,2.047274,-2.796309,6.808973,-6.104997,-2.424083],[-1.773228,6.029823,5.808813,-2.993980,-6.762987,-8.686610,-7.578527,5.382713,-5.000197,-5.187136,-0.551729,3.199129,-6.810883,-6.849187,-7.066147,-4.236443,8.915244,9.482502,0.122797,-7.539393,-7.967101,-9.689247,2.804464,-3.121537,-3.692031,1.661391],[4.710579,6.109577,-6.084735,-4.010640,-7.024217,5.678809,-4.154826,-5.958170,-6.750213,0.281372,1.830497,3.244978,9.159466,2.170256,2.481269,-5.250779,0.969490,-3.346968,7.882174,-2.553494,1.056499,-7.062854,7.919604,7.623186,1.786165,-5.120228],[-8.764175,9.507430,3.033741,-7.757249,5.394672,9.851063,-5.803735,-6.025675,-8.818270,-9.992770,-0.600535,-0.827955,5.783466,4.064919,-0.040786,-4.157350,-7.167819,4.286451,-5.360391,-9.016175,-8.707367,-5.150353,1.106529,1.588192,4.530405,2.944958],[-2.130981,6.125076,-2.639312,-7.543585,-5.568546,2.174326,-8.868404,6.757378,-8.378268,-6.049868,5.509572,-0.857734,-5.534091,9.594572,8.742929,3.864553,-7.030640,5.120101,-4.847572,6.809026,-0.303536,2.413181,8.326793,5.283356,-2.566804,0.498116],[-2.943550,-7.047868,2.531582,5.372631,-0.028356,-6.241189,4.703399,8.044848,3.989842,5.220464,-2.033509,-8.851289,9.115085,9.077505,6.101321,8.569851,-8.260684,-7.515461,2.230343,-4.251983,6.870945,-2.652341,6.672401,-6.950823,4.925148,-8.089573],[-0.205420,0.569962,7.837855,0.195286,1.987164,-8.362141,-5.329695,8.657390,-9.129720,3.676300,-2.885309,9.044830,-3.693395,-3.781519,8.620750,0.158281,8.122387,7.017968,6.931314,-8.181479,5.511222,1.570813,1.316745,-0.583351,-8.442664,6.925909],[1.667068,-4.786090,-6.516702,3.212024,-9.460370,7.320445,-2.322684,-4.341787,0.434473,-4.115447,5.351104,-0.254369,6.973966,8.378934,5.297840,-8.982548,8.694833,-4.261911,-9.149615,0.848484,-4.302680,-3.378674,5.605484,-8.229197,2.596597,5.890709],[-4.971342,-6.096665,-7.047111,-8.218057,-6.868950,7.296433,5.126913,-6.174556,0.936425,-9.600676,-0.484466,-6.114124,9.273387,8.133424,-2.512431,-2.083315,-5.783318,-4.326783,-9.379151,-4.948091,6.303661,-9.541612,7.175580,-3.407153,-0.940571,-8.985626],[-8.216072,-3.207089,-9.068516,-3.629326,-0.287184,2.264552,3.534781,-4.339650,-0.118916,2.091539,-8.028385,9.198055,-4.752808,-5.878773,-5.302678,1.232878,-9.280574,3.993352,1.567190,5.575857,-9.996652,2.370076,-1.793508,1.775342,-2.692200,-1.064939],[-8.441866,2.971733,-5.978296,7.467783,-5.427660,7.229805,-6.022931,6.675071,-7.869597,7.757227,-0.242411,5.034704,-5.106502,6.703705,7.078006,3.942723,5.620059,-8.249752,6.056242,1.285490,-8.046012,-9.791795,9.174975,3.069012,-6.684796,-6.817414],[1.362231,7.296072,-5.170874,-7.576439,-9.390012,5.096891,-8.117157,4.562427,9.898307,-3.149269,1.275836,-1.682046,-4.270560,7.623425,-7.231852,9.652983,8.987644,-7.105653,-6.041492,2.894810,-0.549977,-2.574646,-4.327418,-9.040332,-1.408617,2.454874],[9.121898,-0.583200,5.988015,-5.436437,0.738866,5.197827,-2.240172,-6.052326,0.114043,-1.079922,-5.287739,-2.078999,-4.554262,-5.029156,1.346964,2.424766,4.610438,6.160258,5.077327,5.380038,9.379693,3.461661,-3.213286,-1.223098,6.735427,5.768107],[-5.887429,-3.447017,9.371019,2.997025,-6.164845,0.897093,5.244934,9.783948,9.966315,8.102483,5.220741,-7.380052,5.471692,8.783566,9.772979,-2.553449,3.119345,2.225747,-5.215300,2.511654,7.218741,-0.644785,4.327970,6.528297,-8.100966,-5.923506],[1.426625,7.446850,9.562503,3.530659,-0.884723,-0.018859,-4.785741,-4.780223,0.117611,3.862616,-2.223184,2.484390,3.419511,-6.292931,2.533326,-3.678617,-7.596341,8.620954,-8.601501,-3.590229,8.101076,-9.440010,-2.431046,-9.964140,3.851696,-7.574369],[8.749993,2.707611,-5.325713,0.915548,-9.292250,-0.294672,1.165341,9.714081,-1.068418,-8.944837,-3.412841,5.742010,8.737656,-6.739280,-5.682510,0.424370,-6.753323,-5.185957,-1.254775,8.287430,1.242658,1.231587,4.679215,1.271680,7.737446,9.884328],[-2.255571,-9.790482,-6.667211,-9.670601,-6.129165,6.522240,8.538520,8.918178,8.598817,-0.484001,8.749548,3.864105,-0.902763,-0.041860,1.856698,-1.882218,6.843981,4.538669,2.104165,-9.130893,5.663356,5.788113,6.437690,9.285359,4.305443,-4.391903],[7.089189,8.030497,-3.575919,9.874411,-2.191451,0.023637,4.035743,1.067135,0.463948,-6.638622,1.878741,3.069481,-9.804944,0.751945,-8.702290,-7.799949,-7.243914,-7.353152,-6.936426,-0.503032,5.615616,-1.914730,-2.440184,2.896944,0.927922,5.564331],[1.096710,8.663196,0.128049,6.022481,-9.332641,1.156514,-2.689637,8.098895,-2.662878,3.612676,-4.990925,-0.199465,0.101390,-8.717311,7.879164,-2.295664,-9.283859,-6.701542,-4.406694,6.128649,-8.755066,4.249514,-8.170873,6.307321,-4.779140,-7.309941],[-7.849412,-2.624844,4.500959,-7.791523,-7.125858,2.224776,-6.265788,-2.295195,-5.344501,-1.920256,-5.064774,8.631609,-3.087364,7.657744,5.680757,5.720573,-2.640240,6.649934,-5.201637,-6.167601,-5.100615,8.927317,-6.397055,-5.136802,-8.470618,7.445719],[-3.620503,1.806839,2.873848,-6.447539,0.976909,-2.444317,3.589159,0.576192,8.808546,-3.905439,1.170513,-8.235760,6.297507,-4.665470,3.170097,-0.352323,-4.096676,3.574200,6.828998,-4.068686,7.405202,-3.418511,7.644843,8.335335,-7.067633,-8.813467],[7.259716,8.410492,1.535995,-2.735535,1.257529,7.302367,3.817445,7.373550,-0.132189,2.749347,-1.526517,-2.545805,7.111732,-2.214586,8.437050,9.126983,5.292177,4.089137,1.395734,-6.029987,-4.019416,-9.495508,-7.056231,-6.190782,-7.952593,-5.519537],[-4.075720,-8.178698,-9.017800,6.904822,8.048339,3.449332,9.441914,-0.820954,-0.545488,4.702542,-5.828997,-5.162162,7.521680,0.257718,-0.500357,-9.319424,-3.883938,-9.737377,4.749228,-6.613786,4.775339,6.340674,-7.764848,7.782758,-6.462221,2.430061],[-7.320510,0.415998,7.269552,9.232372,5.473742,-8.408139,-8.173662,-4.409348,-8.266170,1.910781,-2.454392,-6.231813,-5.875794,-1.243366,-8.551628,7.305527,2.622601,-9.899905,7.506507,5.759451,3.027855,-3.500205,-6.775223,3.783565,9.625582,-6.444163],[3.482796,-9.441657,-1.468736,8.639488,-9.048769,-9.344423,3.457710,-5.714380,-1.313303,6.466815,8.603896,-5.806532,5.518290,-5.507159,-0.792172,-2.353303,3.081858,5.200792,8.466417,-9.578085,3.080651,-9.120451,2.795593,0.118302,-9.969612,6.771351],[-9.551358,9.793999,6.071337,-7.371443,3.722119,-0.612392,7.214157,-6.392558,-2.933270,-4.038807,9.680043,-3.821661,-1.559039,5.785112,0.766826,-0.911780,-8.058790,8.799189,-2.521160,1.273985,-5.931092,-9.875385,0.896792,3.320503,-7.988201,8.795393],[-7.619022,-8.937978,5.140260,0.036952,4.365937,-7.429500,7.640949,8.235545,0.711761,1.358927,-5.814581,7.306547,1.275540,9.997583,-3.928084,0.256610,3.507765,8.503662,8.403382,4.562594,1.283264,-7.071674,4.587361,-2.038431,-8.755059,-8.113005],[6.225792,-0.180214,-4.060797,-1.191709,-2.247811,0.617252,-4.318117,-5.391660,2.375745,-6.950183,9.992605,-5.402057,-1.880662,4.412875,-9.458521,-6.801847,6.896202,-1.258837,-7.632697,5.842096,5.007113,-6.619023,2.117555,3.904993,-8.930284,6.715036],[9.370812,-5.419288,-6.160854,-1.962393,-3.012940,9.197772,-7.357671,9.460688,-3.317205,1.618395,-5.509803,0.451345,7.248417,-1.901792,-7.724395,8.193142,7.911280,-5.324738,-3.859694,7.462390,9.290757,-3.284353,-4.277313,-1.577923,-0.412234,-2.742415],[-2.981300,8.263093,6.382448,8.805041,5.310683,7.968840,5.583768,4.602203,-2.977959,-8.211133,3.483491,3.908039,-7.673043,-8.531587,-6.282183,6.052112,5.801849,-3.030294,7.456991,-4.292875,-6.612498,2.890434,6.033380,6.553149,6.516228,4.954982]], dtype = "float64")#candidate|2107|(40, 26)|const|float64
call_2106 = relay.TupleGetItem(func_486_call(relay.reshape(const_2107.astype('float64'), [13, 8, 10])), 2)
call_2108 = relay.TupleGetItem(func_488_call(relay.reshape(const_2107.astype('float64'), [13, 8, 10])), 2)
uop_2118 = relay.sqrt(bop_2089.astype('float32')) # shape=(1, 10, 12)
func_782_call = mod.get_global_var('func_782')
func_786_call = mutated_mod.get_global_var('func_786')
var_2123 = relay.var("var_2123", dtype = "float32", shape = (180, 1))#candidate|2123|(180, 1)|var|float32
call_2122 = relay.TupleGetItem(func_782_call(relay.reshape(var_2123.astype('float32'), [6, 5, 6]), relay.reshape(const_2107.astype('float64'), [1040,]), ), 2)
call_2124 = relay.TupleGetItem(func_786_call(relay.reshape(var_2123.astype('float32'), [6, 5, 6]), relay.reshape(const_2107.astype('float64'), [1040,]), ), 2)
uop_2127 = relay.cosh(uop_2118.astype('float64')) # shape=(1, 10, 12)
var_2130 = relay.var("var_2130", dtype = "float32", shape = (4, 10, 12))#candidate|2130|(4, 10, 12)|var|float32
bop_2131 = relay.greater(uop_2118.astype('bool'), var_2130.astype('bool')) # shape=(4, 10, 12)
output = relay.Tuple([call_2106,const_2107,call_2122,var_2123,uop_2127,bop_2131,])
output2 = relay.Tuple([call_2108,const_2107,call_2124,var_2123,uop_2127,bop_2131,])
func_2136 = relay.Function([var_2087,var_2088,var_2123,var_2130,], output)
mod['func_2136'] = func_2136
mod = relay.transform.InferType()(mod)
var_2137 = relay.var("var_2137", dtype = "bool", shape = ())#candidate|2137|()|var|bool
var_2138 = relay.var("var_2138", dtype = "bool", shape = (1, 10, 12))#candidate|2138|(1, 10, 12)|var|bool
var_2139 = relay.var("var_2139", dtype = "float32", shape = (180, 1))#candidate|2139|(180, 1)|var|float32
var_2140 = relay.var("var_2140", dtype = "float32", shape = (4, 10, 12))#candidate|2140|(4, 10, 12)|var|float32
output = func_2136(var_2137,var_2138,var_2139,var_2140,)
func_2141 = relay.Function([var_2137,var_2138,var_2139,var_2140,], output)
mutated_mod['func_2141'] = func_2141
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2166 = relay.var("var_2166", dtype = "float32", shape = (4, 4, 12))#candidate|2166|(4, 4, 12)|var|float32
uop_2167 = relay.log10(var_2166.astype('float32')) # shape=(4, 4, 12)
bop_2177 = relay.not_equal(uop_2167.astype('bool'), relay.reshape(var_2166.astype('bool'), relay.shape_of(uop_2167))) # shape=(4, 4, 12)
bop_2189 = relay.logical_or(bop_2177.astype('bool'), relay.reshape(uop_2167.astype('bool'), relay.shape_of(bop_2177))) # shape=(4, 4, 12)
bop_2202 = relay.bitwise_xor(uop_2167.astype('int8'), relay.reshape(bop_2189.astype('int8'), relay.shape_of(uop_2167))) # shape=(4, 4, 12)
output = relay.Tuple([bop_2202,])
output2 = relay.Tuple([bop_2202,])
func_2205 = relay.Function([var_2166,], output)
mod['func_2205'] = func_2205
mod = relay.transform.InferType()(mod)
mutated_mod['func_2205'] = func_2205
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2206 = relay.var("var_2206", dtype = "float32", shape = (4, 4, 12))#candidate|2206|(4, 4, 12)|var|float32
func_2205_call = mutated_mod.get_global_var('func_2205')
call_2207 = func_2205_call(var_2206)
output = call_2207
func_2208 = relay.Function([var_2206], output)
mutated_mod['func_2208'] = func_2208
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2318 = relay.var("var_2318", dtype = "float32", shape = (3, 2, 16))#candidate|2318|(3, 2, 16)|var|float32
uop_2319 = relay.sigmoid(var_2318.astype('float32')) # shape=(3, 2, 16)
uop_2329 = relay.atan(var_2318.astype('float64')) # shape=(3, 2, 16)
func_1699_call = mod.get_global_var('func_1699')
func_1701_call = mutated_mod.get_global_var('func_1701')
var_2343 = relay.var("var_2343", dtype = "int64", shape = (3360,))#candidate|2343|(3360,)|var|int64
call_2342 = relay.TupleGetItem(func_1699_call(relay.reshape(var_2343.astype('int64'), [16, 15, 14])), 0)
call_2344 = relay.TupleGetItem(func_1701_call(relay.reshape(var_2343.astype('int64'), [16, 15, 14])), 0)
output = relay.Tuple([uop_2319,uop_2329,call_2342,var_2343,])
output2 = relay.Tuple([uop_2319,uop_2329,call_2344,var_2343,])
func_2356 = relay.Function([var_2318,var_2343,], output)
mod['func_2356'] = func_2356
mod = relay.transform.InferType()(mod)
mutated_mod['func_2356'] = func_2356
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2356_call = mutated_mod.get_global_var('func_2356')
var_2358 = relay.var("var_2358", dtype = "float32", shape = (3, 2, 16))#candidate|2358|(3, 2, 16)|var|float32
var_2359 = relay.var("var_2359", dtype = "int64", shape = (3360,))#candidate|2359|(3360,)|var|int64
call_2357 = func_2356_call(var_2358,var_2359,)
output = call_2357
func_2360 = relay.Function([var_2358,var_2359,], output)
mutated_mod['func_2360'] = func_2360
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2636 = relay.var("var_2636", dtype = "float64", shape = (16, 2, 6))#candidate|2636|(16, 2, 6)|var|float64
uop_2637 = relay.sin(var_2636.astype('float64')) # shape=(16, 2, 6)
output = relay.Tuple([uop_2637,])
output2 = relay.Tuple([uop_2637,])
func_2641 = relay.Function([var_2636,], output)
mod['func_2641'] = func_2641
mod = relay.transform.InferType()(mod)
mutated_mod['func_2641'] = func_2641
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2642 = relay.var("var_2642", dtype = "float64", shape = (16, 2, 6))#candidate|2642|(16, 2, 6)|var|float64
func_2641_call = mutated_mod.get_global_var('func_2641')
call_2643 = func_2641_call(var_2642)
output = call_2643
func_2644 = relay.Function([var_2642], output)
mutated_mod['func_2644'] = func_2644
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2711 = relay.var("var_2711", dtype = "float64", shape = (9, 1, 13))#candidate|2711|(9, 1, 13)|var|float64
var_2712 = relay.var("var_2712", dtype = "float64", shape = (9, 12, 13))#candidate|2712|(9, 12, 13)|var|float64
bop_2713 = relay.divide(var_2711.astype('float64'), var_2712.astype('float64')) # shape=(9, 12, 13)
func_2205_call = mod.get_global_var('func_2205')
func_2208_call = mutated_mod.get_global_var('func_2208')
var_2728 = relay.var("var_2728", dtype = "float32", shape = (192,))#candidate|2728|(192,)|var|float32
call_2727 = relay.TupleGetItem(func_2205_call(relay.reshape(var_2728.astype('float32'), [4, 4, 12])), 0)
call_2729 = relay.TupleGetItem(func_2208_call(relay.reshape(var_2728.astype('float32'), [4, 4, 12])), 0)
output = relay.Tuple([bop_2713,call_2727,var_2728,])
output2 = relay.Tuple([bop_2713,call_2729,var_2728,])
func_2732 = relay.Function([var_2711,var_2712,var_2728,], output)
mod['func_2732'] = func_2732
mod = relay.transform.InferType()(mod)
var_2733 = relay.var("var_2733", dtype = "float64", shape = (9, 1, 13))#candidate|2733|(9, 1, 13)|var|float64
var_2734 = relay.var("var_2734", dtype = "float64", shape = (9, 12, 13))#candidate|2734|(9, 12, 13)|var|float64
var_2735 = relay.var("var_2735", dtype = "float32", shape = (192,))#candidate|2735|(192,)|var|float32
output = func_2732(var_2733,var_2734,var_2735,)
func_2736 = relay.Function([var_2733,var_2734,var_2735,], output)
mutated_mod['func_2736'] = func_2736
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3033 = relay.var("var_3033", dtype = "float64", shape = (3, 2, 10))#candidate|3033|(3, 2, 10)|var|float64
var_3034 = relay.var("var_3034", dtype = "float64", shape = (3, 2, 10))#candidate|3034|(3, 2, 10)|var|float64
bop_3035 = relay.power(var_3033.astype('float64'), relay.reshape(var_3034.astype('float64'), relay.shape_of(var_3033))) # shape=(3, 2, 10)
output = bop_3035
output2 = bop_3035
func_3040 = relay.Function([var_3033,var_3034,], output)
mod['func_3040'] = func_3040
mod = relay.transform.InferType()(mod)
var_3041 = relay.var("var_3041", dtype = "float64", shape = (3, 2, 10))#candidate|3041|(3, 2, 10)|var|float64
var_3042 = relay.var("var_3042", dtype = "float64", shape = (3, 2, 10))#candidate|3042|(3, 2, 10)|var|float64
output = func_3040(var_3041,var_3042,)
func_3043 = relay.Function([var_3041,var_3042,], output)
mutated_mod['func_3043'] = func_3043
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3330 = relay.var("var_3330", dtype = "float64", shape = (3, 1, 11))#candidate|3330|(3, 1, 11)|var|float64
uop_3331 = relay.acosh(var_3330.astype('float64')) # shape=(3, 1, 11)
uop_3335 = relay.sigmoid(uop_3331.astype('float32')) # shape=(3, 1, 11)
output = relay.Tuple([uop_3335,])
output2 = relay.Tuple([uop_3335,])
func_3347 = relay.Function([var_3330,], output)
mod['func_3347'] = func_3347
mod = relay.transform.InferType()(mod)
var_3348 = relay.var("var_3348", dtype = "float64", shape = (3, 1, 11))#candidate|3348|(3, 1, 11)|var|float64
output = func_3347(var_3348)
func_3349 = relay.Function([var_3348], output)
mutated_mod['func_3349'] = func_3349
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3540 = relay.const(1, dtype = "int32")#candidate|3540|()|const|int32
var_3541 = relay.var("var_3541", dtype = "int32", shape = (7, 16, 3))#candidate|3541|(7, 16, 3)|var|int32
bop_3542 = relay.multiply(const_3540.astype('int32'), var_3541.astype('int32')) # shape=(7, 16, 3)
func_1699_call = mod.get_global_var('func_1699')
func_1701_call = mutated_mod.get_global_var('func_1701')
var_3549 = relay.var("var_3549", dtype = "int64", shape = (3360,))#candidate|3549|(3360,)|var|int64
call_3548 = relay.TupleGetItem(func_1699_call(relay.reshape(var_3549.astype('int64'), [16, 15, 14])), 0)
call_3550 = relay.TupleGetItem(func_1701_call(relay.reshape(var_3549.astype('int64'), [16, 15, 14])), 0)
func_2136_call = mod.get_global_var('func_2136')
func_2141_call = mutated_mod.get_global_var('func_2141')
var_3564 = relay.var("var_3564", dtype = "bool", shape = (60, 2))#candidate|3564|(60, 2)|var|bool
var_3565 = relay.var("var_3565", dtype = "float32", shape = (180,))#candidate|3565|(180,)|var|float32
const_3566 = relay.const([-3.927497,9.864845,-7.135897,-5.809755,-0.834169,-5.603027,6.562310,9.175996,9.896385,-2.657808,2.397298,-5.225357,-0.535230,0.717629,-7.968829,6.478136,3.914194,8.396256,-4.525393,7.974120,-6.310416,4.123956,-8.161553,7.001255,4.218002,0.115035,2.901630,-8.667573,-9.004854,7.611445,-6.545308,7.713990,-7.649161,-8.502986,9.948578,4.210895,1.548032,6.051731,4.314363,5.906698,2.508857,-6.510343,-1.152722,-8.138985,-7.644143,-0.528334,0.731575,9.265312,-5.815034,-7.846205,8.320385,0.810807,-6.274812,-1.381791,0.098904,-4.874784,-1.984032,5.165808,3.193581,-1.316585,9.544513,2.452442,-6.930714,-9.041757,-9.404116,-4.088250,-8.333369,-1.027325,0.025725,4.331379,-3.373191,9.297743,-8.490269,-0.575929,-9.008020,6.559243,2.332754,-6.976848,2.730736,-8.451845,9.409504,-1.004311,-3.022708,2.282330,5.538412,-5.467531,-2.957163,5.524761,-8.648354,3.798789,-3.744771,-5.002302,6.269441,6.953869,-4.738822,-0.686067,6.205485,4.262072,1.616603,3.270740,6.390122,-7.332366,6.942335,-4.414787,7.942448,-5.965834,6.785393,5.437111,-3.262302,1.893469,-7.944367,-9.523127,-4.473108,8.986963,-8.792423,6.544299,-0.383557,-5.265578,5.011831,0.360548,-8.290152,-6.399952,9.220319,-8.944635,-2.500932,-7.593220,3.502044,-2.694342,-8.713370,1.417358,-9.057620,1.204006,-0.608046,-2.950834,-6.592796,5.270077,-1.863516,-2.438164,4.719923,0.977971,4.532584,1.382987,-8.095562,-5.573582,2.753807,-7.215811,-1.066059,1.898842,8.473805,-2.179228,5.194643,-4.043761,4.968292,3.987786,8.365732,6.359785,-6.970117,2.780218,-8.124468,-2.269179,5.806492,-8.360410,-4.553300,-0.842320,2.686137,3.835177,-3.417797,-8.938847,3.339000,0.099370,-4.021269,0.450780,5.861503,-2.409994,-0.902331,1.091346,3.382968,-9.103030,8.639189,8.290065,1.976719,-2.404972,-4.511238,-1.330709,-3.540031,-8.276901,-9.635743,-0.434997,-2.659750,3.987409,8.243446,-1.695013,-2.676045,-9.739043,1.445342,3.866095,-2.771577,1.039915,-3.537324,-6.323226,5.952396,-3.734826,-4.118391,7.246490,3.103541,-9.198458,3.399327,8.396824,7.319054,-0.695933,2.076851,5.342312,5.338475,-7.266016,-2.590571,-7.984791,3.175556,0.775213,5.734622,-7.215969,-8.562840,5.954235,4.409427,0.005113,-3.018893,7.351187,8.589641,-7.728697,4.854606,2.522793,2.013048,1.414838,-3.788602,7.047343,4.597547,-3.792881,-2.587736,-6.754113,-8.338661,-5.488499,3.206792,-2.336453,-7.330432,1.828975,7.332652,-0.015810,-4.067970,9.935840,-9.716770,7.163607,-5.803248,1.118115,4.690998,-7.660057,-5.027232,6.236544,-9.457663,-8.115053,-0.122840,3.194846,-4.891087,-9.775830,8.082210,3.427519,-0.910703,-7.139421,-2.263972,9.460955,1.618213,2.402849,-7.362310,3.064258,-6.727749,-7.480126,0.741637,-6.545760,8.962158,-8.202258,-8.612926,-5.818658,-6.663402,1.292168,3.890507,3.671831,-5.161590,-4.151790,8.328563,-7.448695,9.277488,-9.076501,-5.694526,8.565202,7.008299,-9.610489,2.053075,2.130975,4.090485,4.885855,9.673004,1.861647,0.533350,0.075191,1.855384,7.724960,-9.646330,9.975907,-1.152310,-9.336257,7.413777,-3.578764,7.285534,-7.453670,-5.413716,1.315394,-6.356136,-1.448883,-3.715087,-8.062575,7.739400,4.873819,2.012889,-9.146287,8.399415,-7.860441,1.023327,0.451684,-2.581571,-7.291123,5.267871,-2.000896,-6.515713,-2.721856,-7.730685,8.634384,-9.013511,4.183546,5.628893,3.752031,-1.127048,4.510212,-1.120469,6.312798,2.925342,-7.075843,2.230573,-9.567490,3.592978,3.359212,-0.269689,2.175638,4.193329,-3.123632,-1.160671,8.864187,4.623020,-5.655118,0.906715,-2.355902,7.323842,-8.447029,-2.015361,2.127123,1.256352,1.614322,9.325744,-1.066218,-7.166103,2.724016,-7.270420,8.377654,-3.671422,-3.746948,7.138738,-4.519101,6.702725,-8.652521,3.432650,1.118832,-0.388971,-8.593493,9.673381,-9.831975,-6.386256,-4.819634,-4.482872,-0.481757,1.025016,-3.642289,-6.631745,-9.187490,6.241176,2.627099,-6.329743,9.628205,0.876506,-3.538259,-3.197128,-8.924835,-8.712918,-7.293426,3.388471,4.105064,9.052537,8.117194,-1.289984,8.509101,-8.826646,8.074927,2.325695,3.817517,-6.931555,6.286768,-5.919486,7.584708,-0.046856,8.905028,8.326114,-7.130863,0.547978,-7.951320,1.192030,0.448224,-3.899708,-9.971490,-2.353409,-6.892694,3.452359,3.399893,-2.778971,4.192835,-8.120947,-6.321500,4.305052,-4.010151,-9.868331,0.146573,-4.521213,-4.725702,9.788857,-6.946665,-1.486244,-3.194534,-9.187861,-7.391664,4.919474,5.404696,-0.540936,9.077630,5.409228,-7.652814,-2.344230,7.445597,2.226642,0.469952,1.301562,-3.699662,-8.743148,4.772994,-3.967590,1.047499,8.728554,-5.012675,-7.215871,-3.680691,9.231857,-5.679284,-7.069014,6.784547,8.291260,-1.097733,-0.537660,-0.946570,9.499031,-9.177882,5.987049,4.421497,-3.228904,6.369657,2.552179,-5.306291], dtype = "float32")#candidate|3566|(480,)|const|float32
call_3563 = relay.TupleGetItem(func_2136_call(relay.reshape(const_3540.astype('bool'), []), relay.reshape(var_3564.astype('bool'), [1, 10, 12]), relay.reshape(var_3565.astype('float32'), [180, 1]), relay.reshape(const_3566.astype('float32'), [4, 10, 12]), ), 0)
call_3567 = relay.TupleGetItem(func_2141_call(relay.reshape(const_3540.astype('bool'), []), relay.reshape(var_3564.astype('bool'), [1, 10, 12]), relay.reshape(var_3565.astype('float32'), [180, 1]), relay.reshape(const_3566.astype('float32'), [4, 10, 12]), ), 0)
bop_3579 = relay.floor_mod(var_3564.astype('float32'), const_3540.astype('float32')) # shape=(60, 2)
output = relay.Tuple([bop_3542,call_3548,var_3549,call_3563,var_3565,const_3566,bop_3579,])
output2 = relay.Tuple([bop_3542,call_3550,var_3549,call_3567,var_3565,const_3566,bop_3579,])
func_3588 = relay.Function([var_3541,var_3549,var_3564,var_3565,], output)
mod['func_3588'] = func_3588
mod = relay.transform.InferType()(mod)
mutated_mod['func_3588'] = func_3588
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3588_call = mutated_mod.get_global_var('func_3588')
var_3590 = relay.var("var_3590", dtype = "int32", shape = (7, 16, 3))#candidate|3590|(7, 16, 3)|var|int32
var_3591 = relay.var("var_3591", dtype = "int64", shape = (3360,))#candidate|3591|(3360,)|var|int64
var_3592 = relay.var("var_3592", dtype = "bool", shape = (60, 2))#candidate|3592|(60, 2)|var|bool
var_3593 = relay.var("var_3593", dtype = "float32", shape = (180,))#candidate|3593|(180,)|var|float32
call_3589 = func_3588_call(var_3590,var_3591,var_3592,var_3593,)
output = call_3589
func_3594 = relay.Function([var_3590,var_3591,var_3592,var_3593,], output)
mutated_mod['func_3594'] = func_3594
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3776 = relay.var("var_3776", dtype = "int8", shape = (15, 11, 6))#candidate|3776|(15, 11, 6)|var|int8
var_3777 = relay.var("var_3777", dtype = "int8", shape = (15, 11, 6))#candidate|3777|(15, 11, 6)|var|int8
bop_3778 = relay.add(var_3776.astype('int8'), relay.reshape(var_3777.astype('int8'), relay.shape_of(var_3776))) # shape=(15, 11, 6)
output = bop_3778
output2 = bop_3778
func_3781 = relay.Function([var_3776,var_3777,], output)
mod['func_3781'] = func_3781
mod = relay.transform.InferType()(mod)
var_3782 = relay.var("var_3782", dtype = "int8", shape = (15, 11, 6))#candidate|3782|(15, 11, 6)|var|int8
var_3783 = relay.var("var_3783", dtype = "int8", shape = (15, 11, 6))#candidate|3783|(15, 11, 6)|var|int8
output = func_3781(var_3782,var_3783,)
func_3784 = relay.Function([var_3782,var_3783,], output)
mutated_mod['func_3784'] = func_3784
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4100 = relay.const([[[-1.232186,-0.885186,-0.752011,-3.959297],[-3.535178,-5.107156,-5.689913,9.847713],[-7.693921,-6.256261,-5.470847,3.314543],[3.732870,3.125932,9.755988,-1.949146],[-6.917042,-5.786277,7.113037,2.351492],[4.783754,3.034992,2.440035,-2.514791],[8.607177,9.471896,1.509269,-5.022882],[1.907967,-1.210684,-0.059907,-7.705991],[9.758816,-9.004950,-3.023440,9.876338],[2.657186,5.525999,4.740830,-2.412302],[-5.902565,-6.439133,-8.336766,8.040687],[-3.610334,8.269360,-1.888783,7.190298],[-3.242915,-7.172511,1.192351,-7.745452]],[[-5.274129,1.674605,1.980036,-9.520882],[5.346781,8.254738,6.319140,4.846721],[-0.078672,8.868834,-9.766599,-9.192831],[-0.050355,8.539100,-5.826688,-3.515040],[5.352913,-3.623719,-8.007038,1.897023],[1.546987,7.041184,2.132289,-0.908708],[9.515113,-1.778238,-0.694636,-5.116083],[2.995231,-3.282478,0.347195,-5.637647],[-9.123890,8.121524,-2.494289,-4.095414],[7.409376,-9.681407,-3.621359,-5.034430],[-5.915617,-4.206104,-5.776116,2.916492],[-4.538107,5.279792,1.377581,2.249993],[3.236748,-8.158284,2.787889,1.171572]],[[-2.174843,8.300143,3.994631,3.225450],[-9.783254,-8.844391,-0.802111,-7.822782],[-3.621439,3.321363,6.254031,0.307121],[0.609763,-1.153021,7.579491,-6.529057],[-6.162483,-9.670180,3.944813,5.629654],[1.369028,-3.577530,-0.242435,8.664020],[6.772411,-2.191222,1.864534,6.551847],[1.056314,8.336288,8.793645,-4.454801],[2.674761,0.398770,-4.923017,-9.453621],[0.862471,-9.061788,1.733603,-9.469072],[-2.279468,9.004421,-4.054493,-2.815589],[9.922840,-9.217995,7.594861,-1.452350],[-2.546172,-4.866151,-1.959923,-0.085445]],[[8.639284,8.130849,-4.302372,9.068304],[-4.627214,-3.149746,5.409283,-1.316991],[-4.434980,-9.962491,-0.990641,-4.998282],[-0.530710,1.674241,6.973543,-1.382718],[-4.328916,4.236200,5.779693,9.365359],[-0.037671,3.428877,4.706160,-5.158288],[-2.942413,4.099488,1.779334,3.544386],[-4.101719,-1.783517,4.606875,9.582649],[5.682802,-2.296978,8.936761,-2.449461],[-4.396762,-8.341363,-4.738491,4.435808],[6.021951,8.159700,7.013278,-4.135951],[4.374298,0.459520,-7.739807,8.381821],[-4.147262,-4.318462,9.166468,7.364401]],[[-0.257806,7.213972,-8.853311,-0.381984],[-9.386626,-1.880988,-0.622222,8.690394],[4.361985,-0.025182,7.397897,6.209254],[-2.977067,-3.451197,8.625466,8.064562],[3.561004,-5.167611,6.714710,6.131645],[-0.077963,1.047306,-7.947341,-2.112010],[-7.669197,3.497401,-9.820787,4.107300],[1.961232,8.393950,1.578102,-5.539469],[1.346208,-0.578644,9.721639,-5.416878],[3.054579,8.894315,8.819718,2.414454],[-6.468778,8.038824,-2.900134,7.437375],[-4.849873,-4.836063,4.897736,-8.953697],[7.114467,-1.351907,-7.989910,-7.663212]],[[-7.258842,-1.263454,8.705192,0.789858],[-3.641028,8.396125,6.685098,-4.911596],[2.645866,1.981777,-9.569051,2.007673],[-1.629820,-5.326284,7.746937,-9.183897],[-5.132454,9.255269,3.759136,-3.117698],[1.920928,-0.301664,-0.962962,1.045615],[0.218869,3.188660,-1.304560,6.577258],[-5.041222,-1.897032,-5.520693,4.154196],[2.206646,-5.255363,-5.587836,-3.156090],[-9.561056,-7.366146,-7.468555,-1.603036],[4.376608,3.922030,9.045055,-9.706640],[-9.027531,3.258762,-6.968704,-4.252162],[3.863041,-0.998025,9.199164,8.119866]],[[4.645837,-6.469040,5.012327,0.378322],[-6.868177,5.716792,1.487254,6.511452],[-8.246714,-7.897657,-9.290923,-0.447993],[7.547821,8.460460,1.769944,5.597677],[-3.983975,-9.739864,-0.742618,-8.482682],[-4.385835,-3.858671,-8.783053,-6.978943],[-0.828550,8.179412,2.560279,-9.425594],[-0.363840,9.290039,9.450474,-4.003043],[-9.098365,3.356808,-7.083522,-6.545843],[5.136186,-7.140974,-1.562296,-5.176314],[7.915636,8.366029,6.870371,0.452174],[7.208154,-6.422805,2.863331,2.052316],[2.423291,7.102382,-2.198256,1.068600]],[[-1.725372,1.372772,-2.834866,-4.323904],[6.975265,-0.265447,6.757121,-6.377936],[-7.840569,0.636302,7.986912,4.628613],[-7.242665,-8.705510,-5.587506,-4.083039],[6.281337,-4.899271,-7.482561,8.370969],[-6.664622,-4.581677,-3.256650,6.846046],[4.889498,-6.817568,6.946588,-5.588536],[-0.585871,-6.926745,-3.644568,-8.522127],[6.450712,3.501828,1.755280,3.976982],[-7.347610,0.680175,6.832560,3.505562],[-1.096401,6.221805,5.439184,1.038095],[7.579355,7.889307,-4.368146,2.723323],[-3.660095,9.347160,-2.069063,9.867956]],[[5.668665,2.191328,4.877200,6.796325],[-3.197138,1.474227,-4.264363,-9.688878],[0.028357,3.168667,2.881632,0.889313],[6.316409,4.293681,4.643540,-0.639743],[6.564206,3.629119,-1.668634,-5.937489],[-0.731782,7.624217,-5.507693,-5.375641],[1.686930,-9.586263,-6.296073,-9.562942],[-4.922058,4.630058,-1.942805,-1.233180],[6.143936,7.157295,6.819389,6.869202],[6.160418,-1.491856,-3.507965,6.950142],[7.866055,-2.892210,2.071990,5.673697],[-3.381901,-4.234679,1.052661,-9.269782],[-9.291496,-0.840080,-6.986613,1.478673]],[[-2.911200,3.583832,-8.186176,-1.199070],[-0.867631,-7.155268,4.908531,-2.092789],[-9.987595,0.171653,4.131615,1.466101],[2.553106,3.233555,8.039080,5.736439],[2.488342,-6.719228,-5.204491,3.737751],[5.501998,-4.153749,8.445171,-0.318321],[6.708497,2.067761,9.557196,4.545771],[9.937805,-1.162301,4.528408,-6.606424],[4.745445,9.238447,-4.854588,-7.864604],[-5.150065,-7.087618,8.728179,0.702604],[-4.405962,-6.415839,2.777362,-0.573277],[-5.931981,6.838013,8.848286,-8.122507],[-0.608181,-4.199377,-7.589594,-6.981312]],[[0.664225,7.464100,6.613031,-4.113167],[0.365559,-1.407865,-9.302291,5.998993],[0.058904,-0.623552,0.823425,8.114356],[-2.563158,-1.099483,3.026340,6.846604],[5.922413,1.452770,-6.193821,9.981957],[-0.179602,-2.703316,-1.463885,-5.413832],[5.408035,-4.696934,1.675181,-0.265120],[3.199092,4.485432,-9.750520,-7.756674],[2.868209,-5.300285,6.827771,4.938227],[9.085196,-6.600324,-7.580862,-4.094580],[2.163986,-5.060041,-3.196974,8.322356],[6.858083,-7.755556,7.075863,0.562944],[1.885485,-4.255675,3.136480,-6.845881]],[[-3.907561,3.326873,8.318336,-7.077648],[-1.279488,-1.709202,6.089219,1.537863],[-0.375042,-6.810478,-5.590621,-1.647559],[-0.758734,-9.253799,-5.161420,-4.332854],[2.012841,6.159363,8.029256,7.680983],[-4.040374,1.066365,5.493952,-5.375413],[-0.209139,-8.143827,6.867843,-2.974438],[1.809618,7.998170,-7.893844,-9.007349],[0.884802,-5.854554,7.821048,6.142734],[4.191639,-8.155011,8.350162,-4.205883],[5.871024,-4.595743,5.931526,-4.492416],[2.470997,5.669295,-8.788870,6.534044],[0.966267,-8.076885,5.498352,0.806073]],[[-2.339292,-7.750005,-3.054116,-0.290439],[1.441075,-8.307380,5.046187,4.928359],[1.501925,-8.844954,4.773650,1.418990],[-1.600510,7.613805,7.159219,-6.867270],[-0.673644,9.893589,-6.784528,2.793228],[-3.712974,-4.715463,-3.380806,-6.155394],[-0.261194,6.128180,-7.500610,5.372500],[6.243646,6.942274,1.155270,-8.235271],[-1.113882,-5.584889,3.493374,-1.674533],[-1.154156,-4.683842,-4.141101,-2.613857],[3.931807,-3.793143,-7.123705,-0.116872],[9.816701,4.201271,-6.882951,-3.050397],[6.157238,2.367778,-8.552486,3.940607]],[[-0.907115,-2.528164,-9.570992,-0.012903],[-1.702104,-8.415796,-4.272648,-9.573202],[-7.924321,-6.199006,-7.951122,0.836127],[6.179892,-2.781432,-8.095657,-9.806899],[4.659385,4.741066,8.345154,-7.615308],[1.236149,4.315516,3.425802,0.022694],[8.731349,-7.129269,-0.176921,4.787618],[-7.428158,-9.237804,0.459772,-1.230274],[9.982009,3.573811,8.625279,-8.343314],[-6.609084,-4.217335,-9.843489,5.584429],[6.224305,6.403186,0.786442,7.408645],[-7.171232,-5.411554,1.160225,4.259118],[-8.995642,6.807796,-6.936342,-9.611857]]], dtype = "float64")#candidate|4100|(14, 13, 4)|const|float64
uop_4101 = relay.acosh(const_4100.astype('float64')) # shape=(14, 13, 4)
output = uop_4101
output2 = uop_4101
func_4111 = relay.Function([], output)
mod['func_4111'] = func_4111
mod = relay.transform.InferType()(mod)
mutated_mod['func_4111'] = func_4111
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4111_call = mutated_mod.get_global_var('func_4111')
call_4112 = func_4111_call()
output = call_4112
func_4113 = relay.Function([], output)
mutated_mod['func_4113'] = func_4113
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4155 = relay.var("var_4155", dtype = "float32", shape = (15, 8, 7))#candidate|4155|(15, 8, 7)|var|float32
uop_4156 = relay.log10(var_4155.astype('float32')) # shape=(15, 8, 7)
func_665_call = mod.get_global_var('func_665')
func_669_call = mutated_mod.get_global_var('func_669')
var_4161 = relay.var("var_4161", dtype = "uint16", shape = (624,))#candidate|4161|(624,)|var|uint16
const_4162 = relay.const([[4.083565,3.795553],[4.263491,2.660033],[-6.278168,-0.831255],[5.794969,9.826191],[-7.582669,-9.027818],[-3.810944,-3.164600],[7.516971,-2.475719],[-0.321477,2.235637],[-4.922245,9.403211],[-6.542130,-3.777974],[-9.598879,3.131653],[-4.963569,-1.954028],[-9.245209,2.269933],[4.048414,-3.386221],[-3.897517,-1.004117],[-6.995207,-2.798689],[-3.118103,3.172784],[-0.432490,9.527360],[-1.653390,-9.672736],[5.908330,6.299017],[8.515395,0.467296],[-8.695245,-6.656507],[-8.403984,9.770983],[-7.364180,-4.957324],[1.398782,9.313732],[3.234091,7.154821],[-5.377553,-9.668790],[-5.279343,9.102052],[0.815412,2.960522],[8.740726,-7.150425],[-9.875620,-5.040109],[2.708978,-3.425479],[-6.975873,-2.050851],[-6.176683,-0.516919],[8.834948,8.945477],[-0.216719,1.751182],[4.788310,-8.356226],[-7.086884,-6.065956],[-9.912665,-0.010501],[5.523220,8.871125],[-5.436785,0.957863],[0.994369,8.843816],[6.418506,-3.744054],[-2.831014,2.180261],[-6.356867,-1.893754],[-1.245028,-9.103360],[8.135099,-3.967569],[1.532530,2.815595],[1.420204,-9.772881],[-6.971423,1.728165],[-9.189627,7.342066],[3.164051,-5.004818],[-2.003837,9.194513],[-8.201233,-7.117829],[-8.689042,-3.298798],[-1.332289,6.137207],[3.590236,-2.230676],[-4.011225,6.558022],[5.587667,6.880306],[4.759882,2.404436],[-1.680380,-1.257703],[-3.078385,-4.873757],[4.812927,-0.721812],[-4.300545,7.155258],[3.466914,8.921266],[8.670414,6.960560],[-4.557248,6.554070],[-2.486035,7.094072],[9.161748,7.648378],[-0.098841,-4.114632],[1.465625,6.386560],[1.654245,1.081274],[-2.581632,-5.992840],[4.997681,9.705775],[-5.401459,3.251545],[0.558963,7.202156],[-5.601291,-4.223814],[-0.044098,-9.713166],[2.185012,-0.964552],[-6.587212,8.590871],[-3.216000,-3.908492],[4.434493,8.034489],[-6.828763,9.905270],[-8.618976,9.615788],[4.037261,9.500333],[-0.433363,2.955505],[-0.152464,-8.060357],[4.773483,0.865854],[1.277229,7.501612],[2.172203,-0.097965],[6.249462,7.042479],[-6.022140,-6.042743],[-6.041364,-0.166255],[5.977249,-9.830039],[5.904653,-9.687982],[4.624763,-3.904620],[5.583100,1.219760],[9.478071,4.229668],[6.465125,-5.874323],[5.371085,-5.031055],[-6.643028,-9.400451],[-4.502003,6.266526],[-9.608152,0.044159],[-6.647671,-3.818655],[6.016591,-0.566494],[-0.754865,-7.106083],[8.413502,6.571041],[6.430821,-6.672509],[-0.836020,-2.476394],[-6.292572,-5.843820],[3.084205,-4.618435],[-2.932988,-1.668819],[-1.540390,-0.625954],[-3.248709,0.370339],[2.664065,-1.029205],[-2.721919,-2.984548],[8.706888,3.486181],[0.447365,-2.398511],[1.722098,-7.767549],[-9.126983,-9.043420],[2.336770,8.768750],[2.910296,2.277503],[8.122378,6.346810],[5.641267,5.860724],[-1.884271,-2.372920],[-9.599294,5.718136],[0.031613,8.436101],[-2.671764,-6.505551],[-0.756997,0.097417],[-4.856940,-9.978337],[-2.106339,3.078299],[-5.357452,-4.410298],[-2.168842,-0.404281],[-5.394380,-8.026715],[7.831883,0.452272],[4.436363,9.052641],[6.005346,5.500364],[-7.939128,2.286999],[-3.205269,-8.389236],[5.601509,9.811307],[4.308320,4.923437],[7.235805,0.853854],[9.647010,-8.107823],[-0.197930,8.029576],[-3.102814,-5.833029],[-5.684287,3.672376],[-6.925811,4.731602],[7.450163,8.692903],[-8.058372,-6.172199],[7.092805,-8.559688],[-2.090500,0.875160],[3.071658,-6.463344],[-0.600206,-5.640861],[-5.040623,9.414755],[0.521437,0.795718],[0.739206,5.024805],[6.504474,-5.878973],[4.900803,3.868167],[8.606482,-7.373704],[3.481498,7.323977],[6.058741,6.079125],[9.826373,6.833070],[9.144406,8.558077],[3.775901,1.853570],[-4.104350,8.122829],[-7.401156,3.856448],[-3.821533,-1.465257],[-9.863841,4.674126],[5.485357,-6.518795],[9.805116,8.243024],[-3.911402,1.925787],[1.870320,-1.008010],[-3.072396,4.697428],[-3.546415,2.364683],[0.133955,9.483125],[4.568244,8.302037],[5.794420,0.283596],[5.857636,7.209160],[-5.424073,-7.855688],[6.897414,7.258100],[-2.665078,3.628114],[-6.978638,8.657287],[-9.479462,1.343956],[8.687149,1.843032],[-6.358347,7.485029],[1.637674,1.290831],[-0.626402,-4.845741],[-8.231567,5.944941],[-3.200463,-9.795787],[4.011462,-8.004212],[-0.868387,6.425240],[6.410297,-9.658082],[-2.918892,1.876920],[-5.319074,2.360293],[-9.736730,6.462607],[0.475541,-3.137716],[1.982937,-6.001547],[-9.034393,-9.149023],[0.861204,6.139718],[-3.913041,-9.464930],[5.514288,8.409141],[5.764858,-1.106030],[-6.322740,-8.825331],[4.715745,1.841514],[6.394253,0.677975],[2.481831,-9.378716],[-8.242358,9.765643],[6.095861,6.402815],[6.386036,9.246586],[6.349663,6.685568],[2.740440,7.731928],[-1.487401,2.738012],[3.002380,9.111751],[-2.397923,9.965388],[9.699808,-1.673477],[-6.765542,-1.681990],[-8.290708,-4.354424],[3.502477,8.885668],[-2.837078,8.110228],[4.511436,-4.816128],[-5.466507,6.261472],[-2.493141,5.962832],[3.429543,-4.845493],[8.184160,-1.428832],[-6.385055,3.568604],[-8.408426,-8.930620],[8.147825,6.844668],[-8.856142,3.403779],[4.490964,-4.586943],[0.349636,-9.131871],[3.355099,1.513459],[9.609809,-8.266928],[-1.081176,4.730421],[-1.471783,5.506713],[-6.903545,-6.786392],[8.185103,0.809575],[2.277476,-9.345650],[3.603025,0.866612],[9.411549,2.710774],[-1.927968,3.878589],[7.200638,1.820365],[-5.358119,2.806273],[0.715319,-2.833627],[-3.958328,-1.893913],[6.097057,-2.730327],[0.145161,3.084122],[-1.498857,3.686824],[-6.319623,-4.900748],[4.816724,7.351507],[-2.869623,-0.868909],[-3.603146,-1.499772],[-2.010341,-2.687111],[6.662551,-1.288390],[1.709775,-6.363617],[-8.624826,-8.318045],[-2.736289,-9.951065],[1.922779,4.640090],[7.637482,4.950757],[-3.311856,-0.482601],[-7.495608,-7.170093],[8.735984,-8.103214],[-3.548960,9.485496],[-3.156010,3.034870],[-3.768610,2.307866],[3.960817,2.482865],[-5.363523,6.523615],[8.357229,-9.724826],[-1.435654,4.712478],[7.621795,-3.653628],[-4.911018,7.352862],[-3.604636,7.809304],[-9.180487,-4.579488],[-6.737764,-3.362262],[-8.009464,3.865131],[9.490069,-3.668205],[9.540821,-9.277477],[6.187368,-0.615885],[-4.759298,0.415192],[1.318643,9.567094],[0.393566,6.433412],[0.743614,-2.088427],[9.696306,3.659885],[8.674282,5.381823],[-6.537228,-3.194628],[-7.394076,5.501778],[-9.765554,3.273014],[-5.540353,7.351895],[-9.566008,0.381617],[8.542761,-7.357918],[7.263806,8.003283],[4.591275,6.794749],[-5.781020,5.109510],[9.144106,1.163963],[5.991251,1.175284],[2.620058,6.333544],[1.059088,-9.462947],[5.689810,-0.562356],[-7.335587,8.285758],[-0.608506,5.593717],[-4.450185,1.790032],[-8.338198,7.779032],[-5.283197,1.933601],[-4.933101,9.597031],[5.347690,-8.827265],[-2.196056,5.608052],[-1.282245,-4.724407],[-1.618312,-4.240653],[3.162767,-9.590920],[-0.815136,7.404344],[-6.802240,6.402057],[-6.274828,-0.623118],[-0.787993,-7.008225],[7.971502,0.204499],[-5.789570,-9.032407],[-0.567396,-6.272219],[5.532017,3.747091],[-2.267231,-0.850395],[9.382773,5.496007],[-3.561022,2.777904],[-2.063154,-9.763284],[1.336024,-1.188713],[4.738155,-3.585311],[8.773557,7.464241],[3.849429,-3.350373],[-1.169851,-5.755292],[-0.184489,8.635580],[-9.448364,7.655179],[-3.446126,-2.174454],[-1.220023,0.213856],[-0.382220,7.364882],[-1.143997,-3.897803],[6.766044,-2.973797],[8.023148,3.308986],[-9.421416,-4.179431],[9.710602,-9.314309],[6.244311,1.336165],[3.490407,-8.107375],[5.278058,7.598150],[-5.098792,0.154437],[-7.566746,4.091810],[5.767374,-4.563252],[7.168361,-7.849068],[-4.425725,-8.473078],[8.474251,9.078472],[4.638917,-9.139298],[2.735998,-0.229666],[9.049572,1.532384],[5.634973,6.559995],[0.527724,0.659903],[0.743804,3.688317],[-1.600222,1.087787],[-5.518317,-9.397856],[-9.641742,-7.412879],[-2.164338,-4.316257],[-4.983434,8.533199],[-3.906372,-5.392905],[-7.065180,1.170009],[5.176408,-9.340825],[-8.732449,-0.443795],[-6.419371,-9.210655],[6.815621,0.648454],[-6.745700,-7.972732],[7.628364,-6.324619],[-6.855785,-8.391765],[-3.457407,-2.319738],[-0.204854,2.888863],[8.130758,0.595447],[-3.112263,-1.736697],[-1.674321,0.997458],[8.323632,-8.792269],[-4.571574,3.986489],[8.512947,7.171424],[0.356915,-7.660738],[-4.542164,-0.678510],[9.131974,-1.628366],[-1.385258,5.712068],[-9.919473,1.550961],[-8.134693,-2.032416],[-4.638121,-5.220044],[2.511806,-6.384279],[5.697361,4.543274],[-3.771205,6.930463],[2.425630,-2.163089],[5.222460,1.334741],[-5.304936,0.936536],[-4.477961,2.923334],[6.016771,-4.552351],[-5.120087,1.622069],[9.107384,9.729238],[7.328536,0.210895],[-5.788995,-8.417789],[-4.339417,7.332655],[-6.456604,2.755362],[4.703277,5.875264],[-5.055586,5.446723],[-1.336208,8.023408],[9.928485,-0.632347],[2.943155,-4.655139],[2.643511,5.281146],[-2.811590,-3.046157],[-6.843786,9.608951],[5.659183,-2.194807],[-1.652441,-3.237879],[8.887656,3.160131],[-5.418120,7.121482],[8.945094,-2.407466],[-6.816703,-7.882678],[-9.231306,4.926810],[8.182908,-1.926466],[4.169382,-0.725854],[3.986770,4.744736],[-0.831786,5.414941],[-3.860829,8.756973],[-9.233164,-2.678133],[0.237141,8.608116],[0.461086,-4.671797],[0.584649,7.458878],[-8.838617,2.431798],[-4.543091,-4.339155],[2.829943,-6.953045],[-4.406971,8.980669],[9.286841,0.310179],[1.943712,-2.734217],[4.777012,3.465779],[-0.047789,9.041681],[-0.760756,-6.393572],[4.801030,-3.566059],[-8.402350,-4.615306],[-5.868141,-9.675469],[7.279472,-9.972123],[-1.067891,-9.553692],[-1.562967,1.060831],[-8.400252,6.193517],[5.598579,-0.771937],[-6.883964,4.183151],[2.820746,9.205734],[9.876314,9.513060],[8.304563,8.777355],[-4.205922,5.614744],[3.295974,5.799723],[8.645778,8.037368],[-0.009201,-0.475156],[-2.134182,-4.830367],[2.125225,6.970322],[1.718667,-7.848396],[-9.476346,-1.058103],[4.996917,4.982812],[-6.675694,-8.530818],[2.801422,-7.936236],[9.661484,-9.845641],[-0.409040,5.569994],[-6.934395,7.959169],[3.718030,-0.063557],[0.971663,2.472997],[-4.028222,-4.568589],[5.537463,2.325980],[-7.036635,4.104784],[-9.604179,6.720362],[-3.016422,-0.903281],[3.670841,-8.441984],[5.470025,-9.376198],[6.649729,9.725323],[9.993479,5.881353],[7.994097,9.263408],[-1.154257,8.924522],[6.255581,-9.086660],[-9.848122,-0.419718],[-6.789441,-6.307489],[-8.645826,-2.205366],[-5.012885,6.983620],[6.604265,5.000539],[0.667977,-2.262311],[4.006358,-8.209600],[-7.802153,-8.609861],[-0.880138,-2.119447],[5.366180,-8.180997],[-5.834562,4.828446],[4.501494,-4.769535],[4.002853,4.219462],[-1.761880,9.602504],[0.456909,-7.288904],[-0.556740,-4.194244],[-1.147611,1.982303],[-3.432813,8.148238],[-8.299325,5.987066],[5.374638,8.471209],[8.560373,-3.562292],[-4.461935,0.960136],[7.433357,-1.953471],[-7.370296,-8.604796],[9.325062,-4.064791],[-8.024644,-1.035465],[6.549421,-7.337020],[9.748146,7.359890],[-3.994753,0.358701],[0.703061,-1.452202],[-2.166709,-2.058173],[-2.172721,1.927806],[-4.259351,5.270090],[0.451511,-1.022427],[4.289208,-5.237422],[-4.178514,-7.897858],[4.226793,0.608439],[-5.290830,4.759804],[-6.142841,-8.741081],[1.075726,9.878628],[2.620765,-8.751062],[-8.034740,0.533522],[9.780894,1.504891],[-7.312634,-4.350762],[5.053412,-6.410100],[3.600016,-1.936116],[-8.074349,-7.893657],[4.306339,5.033858],[-9.451976,8.999582],[-4.652616,9.547127],[-8.506828,7.329625],[-5.972836,-2.744877],[-5.201227,4.600514],[5.222017,2.860282]], dtype = "float64")#candidate|4162|(520, 2)|const|float64
call_4160 = relay.TupleGetItem(func_665_call(relay.reshape(var_4161.astype('uint16'), [4, 12, 13]), relay.reshape(const_4162.astype('float64'), [1040,]), ), 2)
call_4163 = relay.TupleGetItem(func_669_call(relay.reshape(var_4161.astype('uint16'), [4, 12, 13]), relay.reshape(const_4162.astype('float64'), [1040,]), ), 2)
func_1699_call = mod.get_global_var('func_1699')
func_1701_call = mutated_mod.get_global_var('func_1701')
const_4169 = relay.const([-2,7,-6,-8,7,4,1,-7,2,-3,-1,4,-4,6,-4,7,4,6,9,4,5,-3,-1,-3,6,7,-3,-3,-8,2,-8,7,-1,3,-6,7,4,-6,-10,-9,4,-4,-6,6,7,-5,-7,6,-7,9,7,-5,-5,5,9,-2,9,4,2,-9,-9,6,1,3,3,1,9,-1,8,-10,2,-2,9,-6,7,3,-4,-2,-1,2,9,3,1,10,2,6,5,4,-5,6,6,6,8,-4,2,-4,1,-7,-3,-2,1,8,-8,-10,3,-5,-7,10,8,4,-1,-1,8,-5,-6,-6,6,3,-6,-7,2,1,-2,5,-6,9,7,-8,-9,6,1,-4,-5,1,3,4,9,-5,6,-2,-8,10,3,2,4,-9,9,-1,2,8,1,1,5,2,5,-6,5,10,-5,-9,-10,3,4,2,6,-3,1,-7,-9,10,1,7,-3,3,9,8,-2,7,-4,2,-10,-9,1,7,-4,-4,-4,-2,-9,-4,7,-6,-2,-5,-5,-8,-3,5,-2,-4,1,3,2,-2,-10,-7,-8,-6,-9,1,-9,6,6,8,6,-6,1,-2,-5,-3,-1,-2,7,-3,10,-8,-3,-4,8,8,-3,10,-4,-8,9,1,-4,-10,2,5,7,2,-8,10,-8,9,-5,-7,5,7,7,-3,3,-1,-9,9,-10,10,7,3,10,-7,4,3,1,3,-10,-10,2,-9,8,8,7,5,10,1,3,-5,4,-8,2,5,-10,4,-8,4,9,5,2,3,-1,1,2,3,-8,3,4,1,-4,-9,-7,2,9,-5,-9,-2,-3,-4,-1,-3,2,8,-3,-4,-5,3,6,-10,-3,7,-5,10,-3,3,5,-4,1,5,-2,-4,1,-9,-1,3,5,-5,8,8,-2,-7,10,-6,-7,6,-9,8,-6,-9,7,-2,-10,3,-2,1,-6,5,-2,-7,-3,10,-3,-3,3,-7,-2,3,6,1,-10,4,-3,-2,-9,5,3,-3,2,-7,-8,7,3,-3,7,9,-8,-3,-1,7,-5,-1,6,7,1,-2,8,8,-9,-2,-7,-4,-3,8,-4,-5,5,-9,9,-8,-10,9,10,-9,10,-5,-4,2,4,1,-4,8,2,10,-3,-4,-9,-1,2,-5,-3,9,-7,-5,2,-10,-4,-6,6,-10,4,-4,-8,-1,-6,3,7,9,7,-9,-3,7,-9,-4,1,-4,7,-8,-4,3,5,3,2,-8,-7,-9,-7,-8,1,1,-5,7,-4,4,5,-8,-7,-4,5,9,-10,4,7,4,-3,8,-10,9,3,2,3,8,-2,-9,6,-9,-6,-6,5,9,-4,8,-5,8,10,-3,1,-3,6,10,-9,8,3,8,-3,10,7,3,-4,-9,-2,-9,6,8,3,-3,8,-8,5,-1,-5,8,-8,4,-2,10,5,-9,-1,-2,2,5,-7,2,-8,-2,3,-5,-1,-5,-9,-8,-6,5,1,-2,-3,4,-1,-3,9,-2,-7,3,5,2,-7,-8,7,-10,1,3,8,-5,6,-8,5,-7,-8,-10,-2,-6,-3,2,8,-8,4,4,-1,-3,-8,3,-2,8,5,-4,2,-8,6,5,-1,-4,6,-9,8,-5,-2,4,1,7,-1,4,2,-10,-1,-4,-10,1,6,-3,1,-5,-8,-8,-10,-6,-7,6,-2,10,3,-10,-10,-9,1,5,3,5,-8,2,-10,-8,-1,-6,3,8,8,9,9,6,-3,1,10,7,1,-5,8,-5,2,-1,5,-10,-9,3,-8,-7,-2,5,4,-2,-9,-5,-2,5,-2,-8,-6,-2,-7,3,5,-4,-8,-9,-1,7,-7,9,5,-5,2,5,-2,-5,1,-4,-7,1,9,8,-10,4,-1,9,8,-10,9,-10,-2,10,2,2,-2,7,-5,-3,-1,-4,-9,8,-1,8,4,9,-5,-1,-2,-6,-6,-6,-9,-7,6,-3,-6,-2,9,-5,2,-1,4,1,5,-10,2,3,5,-2,-1,5,7,-6,-1,-1,6,7,-6,-6,10,3,2,-3,-7,-9,9,-8,5,-5,5,-9,-8,1,-7,-4,-4,8,6,-4,-4,1,-7,2,-3,8,2,10,-6,-3,-1,9,-5,-9,8,-4,-6,-8,4,-7,-8,8,2,8,-1,10,-10,-5,-8,8,10,8,6,9,7,-8,10,-3,-4,-4,-3,-6,5,-8,8,7,-7,-3,1,5,-9,1,1,-4,4,-1,-2,10,10,10,-3,7,-2,-4,-2,2,-2,-1,-6,7,4,-9,-6,-6,6,-8,5,-10,6,1,-1,-9,6,5,8,-6,-3,-3,-3,-7,6,-9,-9,-9,2,-4,5,-5,5,4,5,8,-6,-7,9,-9,7,6,-8,-2,-5,1,-10,-10,8,2,6,1,10,-3,10,-6,2,5,-6,-10,3,-8,10,2,6,3,-4,3,2,5,-10,9,2,1,10,7,-5,-8,7,-6,4,4,-6,1,3,-8,-6,4,-2,6,-10,-7,9,1,7,-8,9,-8,9,2,5,6,8,9,-8,-4,-7,-3,-10,4,-4,-10,-6,-9,-8,-10,1,-4,9,1,-8,6,-5,4,3,-3,-2,-3,9,-5,1,10,3,-2,-7,8,7,-9,-2,8,-10,-4,3,-1,9,1,-3,-5,5,7,-10,7,8,10,8,-7,10,-3,1,7,-3,-2,-1,1,4,-8,-2,4,1,-1,-3,-9,10,-5,-9,-10,3,7,7,-8,5,-7,-10,-8,-6,-2,-7,-1,-5,7,1,6,-9,5,-2,-9,2,-5,-9,-5,-2,-4,-10,-6,-3,10,-10,9,-1,5,9,10,2,-4,-8,3,-6,9,-2,-10,7,1,8,7,4,1,-8,5,-6,-10,-9,-4,-10,2,9,-8,-2,6,-7,-9,6,4,-1,-3,-1,-9,8,7,6,1,-1,-4,8,-5,10,5,4,-10,-10,1,-10,2,-4,7,8,7,-8,4,-8,10,3,-6,9,-1,2,2,2,1,5,-10,-5,2,-8,9,5,8,7,4,-3,-6,-7,-9,2,-7,-6,-10,3,-6,10,9,-7,5,10,-1,-6,-7,3,2,-6,10,5,4,-2,9,6,-9,-4,6,-6,6,-1,-5,-1,-8,9,8,8,1,4,3,-9,-2,9,-6,2,6,-9,8,1,6,5,-3,-9,4,8,1,10,-10,-1,3,-2,-9,-2,-10,6,-3,1,-4,10,-4,-5,-6,10,3,6,-5,7,-9,4,1,7,-10,10,9,-2,-10,7,4,-6,9,5,10,1,-10,-3,4,7,-10,-8,10,-3,-8,8,10,-9,6,4,-5,-7,7,-7,2,4,2,-1,1,3,-4,1,3,-2,3,4,8,-4,5,-7,9,7,3,-4,-1,4,-9,1,5,10,-9,8,10,-4,5,-10,-5,6,6,-4,8,-6,3,9,-1,7,-7,-7,9,2,5,8,10,9,7,-6,-3,2,-10,-7,-3,-10,9,9,-9,4,4,5,8,-1,9,-10,2,10,6,-4,2,-1,-1,1,-1,3,6,9,-2,-1,-2,5,4,7,-5,-10,6,9,2,-7,-4,-8,8,8,-10,1,9,-7,1,4,-6,2,6,9,-3,2,-7,-10,8,5,7,3,1,-1,-3,-8,-7,-2,4,-2,-8,-6,5,-9,6,-2,-9,-10,-4,-1,-4,-7,-3,-8,10,6,2,-4,10,9,-7,-2,7,-5,3,-9,8,1,-5,-8,7,-5,-8,8,-2,5,-2,-8,-8,-2,-10,9,-7,7,9,8,-1,-9,-4,6,-7,-7,-7,10,7,-8,10,-5,10,-10,-9,-9,3,-9,4,-3,4,10,5,1,-9,-9,8,10,9,-1,8,9,5,-10,-3,1,-5,1,10,-3,10,-10,7,-10,-9,5,8,-1,-3,-3,-4,-4,-5,10,-6,4,5,6,-3,-10,-7,2,-10,10,3,-10,8,-9,-10,8,-2,-3,8,2,-8,-6,7,2,-2,-1,-6,4,-4,10,-2,1,3,-10,5,-4,4,10,9,-9,4,6,10,7,2,7,6,-7,-1,-7,1,-9,-3,-6,-1,-3,-2,5,8,-5,7,-6,9,-1,-10,-7,2,-6,7,7,-7,-10,-9,1,7,10,10,-9,9,9,10,2,6,-5,2,-8,2,7,5,1,-6,9,6,4,10,7,-1,-10,-9,-7,-8,-9,5,4,-6,5,7,-5,-2,10,-2,9,-8,-10,7,9,6,-8,5,-2,-8,-10,-9,-7,6,4,-4,1,4,-8,-3,-6,4,10,7,-10,-9,1,-7,-2,8,9,8,4,5,5,-1,-5,-7,4,-8,-3,5,8,4,3,3,4,5,-7,1,6,-5,7,-7,7,5,4,-6,2,-10,2,8,-9,5,3,8,-8,-2,6,-5,-7,-5,-10,3,10,6,1,7,7,5,-8,9,9,-2,-1,8,-7,8,3,-9,7,7,1,7,6,8,-7,9,-10,-1,-7,-8,-1,6,-8,-10,-2,10,-9,-1,-10,-8,-8,3,7,9,-2,-10,3,-10,1,-5,-5,6,5,8,8,10,-4,-6,-8,6,-3,-4,4,-9,-4,-10,3,-2,3,2,7,-7,-9,-1,-7,-7,-5,7,7,-4,2,9,-10,-4,4,-4,9,3,4,5,2,2,-4,-7,-4,-1,5,-2,2,9,1,8,-5,-8,-4,-10,4,6,-10,-1,3,3,-4,4,2,-4,7,4,3,-2,-2,5,-4,-6,-1,-1,8,2,-10,10,2,-6,7,2,2,7,6,-2,3,7,2,10,-3,-4,3,-4,9,1,-9,-6,-6,-5,-8,-3,4,7,-7,7,-3,2,4,-8,-7,1,-3,7,1,-2,-10,10,-6,-9,7,-4,7,-6,-3,8,-5,-7,5,10,9,-6,8,2,-6,8,9,4,7,8,4,1,4,-2,4,-6,-5,-2,10,-10,5,10,9,9,-3,7,3,-1,-5,-8,6,-4,8,-7,-7,5,-2,-3,6,-6,-9,8,-10,-10,1,-6,4,9,3,10,-10,2,-7,-2,9,4,10,1,-1,5,-9,-1,8,-6,-4,2,1,-8,9,3,-10,7,9,10,-8,-3,5,-1,4,5,-4,-3,-1,3,-3,-9,3,10,1,-5,-4,-6,-2,3,6,5,-5,5,9,7,6,2,-1,3,-6,-10,9,-1,-5,-9,2,-1,2,4,-5,3,6,-1,2,6,-2,-8,4,-2,-2,2,-4,-3,-10,-10,-6,4,-8,9,-9,-8,3,4,3,-10,8,1,6,10,8,3,-3,-6,-4,-3,-9,-5,-6,4,6,4,-6,8,6,-2,-8,-10,1,-1,2,7,-4,-6,3,10,3,-3,-1,-3,-1,-3,7,9,1,3,6,5,-4,2,10,-5,8,-2,-1,7,-9,10,-6,-3,10,10,-8,8,5,-7,4,8,4,-2,-4,-8,3,-6,-8,6,7,-6,9,6,5,-9,-5,-2,6,3,-7,10,10,9,-8,-8,10,-1,9,5,1,5,-2,7,5,7,-3,-9,6,1,-2,-1,4,-3,9,10,-3,-8,-6,-4,-4,-10,-7,-2,-7,-7,3,-5,-9,-3,-8,10,10,8,-10,-4,3,-5,-4,-3,9,2,-9,-2,-5,7,-10,7,-5,-5,-9,-3,-4,3,3,-1,-8,-8,-9,-5,7,-10,-1,6,-3,-10,1,-5,2,-5,5,-1,8,-10,-10,-3,-9,4,9,-5,-1,7,10,1,9,9,1,-7,-9,-9,-3,8,5,-3,9,1,7,-4,-7,9,10,-9,9,-3,4,7,-4,1,-6,6,-6,-7,-2,-10,-5,-6,-8,-7,1,-5,-2,4,9,7,-2,9,9,-3,-7,1,-3,-9,2,-9,-8,9,7,7,-9,-9,9,-10,-6,-1,-5,6,-1,-8,1,-7,-2,-10,-10,-4,3,-1,-5,-1,4,-5,6,7,-6,-10,4,7,-6,4,-8,-6,-4,-3,7,-2,-6,2,-8,-9,5,3,-9,-5,1,-2,8,8,-2,-10,5,-4,9,-2,4,-3,-1,10,9,6,3,-9,-3,-2,7,7,-4,-4,-4,9,-8,-9,-1,10,4,-9,1,7,-4,10,-1,-7,6,7,8,2,-10,-6,1,2,1,2,9,5,-6,-7,3,-3,5,-1,-8,10,5,1,-3,9,4,5,1,-9,6,6,-1,-10,-1,-3,5,8,-1,-4,-4,8,6,-3,3,6,1,-1,-2,-1,2,-1,7,-5,-2,5,-3,6,-6,6,3,9,5,6,-10,8,1,9,3,-8,-4,-1,-4,8,-5,9,8,4,9,9,-9,3,8,-9,7,-6,-10,10,3,4,-4,-8,5,6,-1,5,-5,9,-2,4,6,2,6,-10,2,9,-10,-10,10,-9,4,3,4,-3,-10,6,7,-4,10,2,-9,-9,9,-2,-9,1,4,-3,6,5,-2,-4,8,2,1,1,-4,-6,4,-3,8,-6,-6,3,6,-9,-8,7,-10,-6,-2,10,-9,-10,-4,-6,5,-7,3,-2,-7,-7,-4,10,1,5,-3,9,1,5,-10,-10,-4,-7,-8,-8,-10,1,-7,-7,9,4,-9,5,4,-7,-2,-1,-5,-7,-5,-7,8,-8,9,5,-9,9,4,6,-4,2,10,-6,10,-8,-6,2,3,1,5,-1,7,-2,3,-6,-3,-7,-10,7,-6,-6,10,-8,-8,-6,-9,9,6,-4,1,10,-8,6,9,9,10,10,3,-4,9,6,-6,1,-6,3,-8,-1,1,6,1,-5,-1,3,-3,5,-7,-9,7,7,8,1,2,-2,-7,2,4,-1,4,-10,-10,-10,-7,-2,-10,8,-6,2,10,2,2,7,3,10,-3,6,-7,-2,5,7,-10,3,-3,-7,-1,-2,5,9,-9,-7,1,-8,10,-3,4,2,6,-2,-2,-3,10,-6,-7,2,5,-10,3,-7,8,7,1,-7,-5,-7,10,2,7,4,2,-10,7,5,8,10,1,9,9,8,-5,-2,7,6,1,-6,9,-2,-5,-6,-9,8,-6,-4,3,8,9,4,2,-7,-3,6,10,8,-6,-6,-1,-7,-1,9,-2,-3,-6,6,8,-1,-8,-3,-4,2,5,7,4,2,-4,1,-9,9,-3,3,8,-4,-10,3,-10,-6,-4,-9,-6,6,-2,-9,3,-6,3,-10,1,7,3,-7,-6,-5,5,-1,-7,-2,5,-1,9,3,-7,1,6,-9,-8,1,-9,-6,-2,-5,3,-1,-9,7,10,-10,-2,4,8,9,10,-2,6,-3,-5,9,-6,-6,-3,-4,2,1,-4,-6,-8,10,2,-7,10,-9,8,2,-10,-2,-3,9,2,-3,-3,-1,-3,9,5,-8,-7,9,-6,-3,3,-1,-4,6,-8,-4,-8,-4,-8,-10,10,-7,4,-6,8,7,5,-10,6,-6,-4,7,-5,-7,-5,-5,5,-6,9,9,1,1,-2,6,-6,4,3,6,-6,3,9,8,2,-3,6,-10,-8,3,-1,-9,3,9,-9,-6,-7,6,-8,10,-10,3,-6,3,2,-5,-6,2,-10,-7,-5,3,1,7,-6,9,1,2,-5,-3,-2,9,-3,-9,-3,1,7,-9,-3,-10,-5,-5,-3,6,-1,-4,-7,10,6,-2,-8,-5,7,5,-2,9,4,-8,8,-2,4,1,-10,9,4,3,4,-7,5,1,7,-7,-3,-7,-10,1,6,3,-4,-2,-6,8,-4,-3,7,6,-3,6,-9,-10,-3,-1,2,6,10,6,-2,6,-1,5,-2,-3,-4,-4,1,2,-2,2,-8,-3,6,-4,4,-4,-10,5,10,8,7,6,3,-2,2,-2,2,-9,-5,-7,-3,-5,10,5,-8,-3,-5,4,9,-7,-10,1,4,-2,-3,9,-2,8,-4,3,8,-8,-6,-2,-8,8,-8,10,1,3,3,-1,-6,-6,-4,4,-6,6,7,-9,-9,-3,-9,10,-6,-5,3,-3,-5,-9,9,-2,6,-7,7,7,4,-2,-4,-3,5,9,-6,-9,3,-1,-1,-9,10,-1,-1,-5,-10,-8,-1,-5,10,6,-8,6,-5,6,-9,-5,1,10,-6,-9,-1,-1,9,-9,-1,7,-10,-3,-2,-10,-5,4,3,-10,-6,-7,5,9,3,-6,-3,-4,-8,9,-7,2,6,-10,1,-9,-6,-6,-2,6,3,2,5,-10,-4,-4,7,-4,4,-1,-1,-2,7,-7,-2,-6,5,2,5,-2,10,9,1,-2,7,-10,4,-5,-3,-1,7,2,5,-9,-8,1,-6,7,6,-2,3,-3,-7,7,3,5,-5,-10,-2,5,2,8,-6,3,2,-5,9,-1,6,-6,-8,-1,-7,7,1,-7,-6,9,10,2,-9,-9,6,-7,-2,3,4,-4,4,10,3,-8,-4,9,-3,8,-1,-2,-8,9,-2,1,4,-8,-7,6,8,9,3,8,2,-7,6,7,-10,6,-9,-9,2,-3,-8,1,3,9,-9,-3,4,1,1,4,6,-3,-6,-8,-2,9,8,-5,7,8,-9,-6,-2,5,-9,-5,10,10,2,4,8,1,3,-10,10,-8,-8,-3,3,4,-6,7,-6,-2,6,2,1,-2,1,-5,-10,9,-9,-10,2,-4,-2,-4,9,-1,-4,-9,-8,7,4,2,7,4,6,10,-8,6,-7,-2,-8,1,6,5,2,-5,6,-10,9,-10,-10,4,-5,9,3,-10,6,3,3,8,-1,-4,10,-1,10,5,4,-7,2,-2,-1,7,6,-9,-9,-4,10,9,-4,9,4,3,3,-8,7,-9,-4,4,-6,7,-10,6,-1,-9,5,-8,-2,-8,10,-8,-8,5,-3,10,-4,7,-1,5,9,-6,2,5,6,8,9,-5,3,7,-1,-7,7,10,-8,10,10,4,-4,5,10,8,-9,4,-2,-2,-9,7,-5,-4,3,10,1,-5,-3,-5,-6,-2,-5,-1,-9,-10,-3,6,6,-1,-5,-2,7,3,10,2,-4,-4,-3,6], dtype = "int64")#candidate|4169|(3360,)|const|int64
call_4168 = relay.TupleGetItem(func_1699_call(relay.reshape(const_4169.astype('int64'), [16, 15, 14])), 0)
call_4170 = relay.TupleGetItem(func_1701_call(relay.reshape(const_4169.astype('int64'), [16, 15, 14])), 0)
output = relay.Tuple([uop_4156,call_4160,var_4161,const_4162,call_4168,const_4169,])
output2 = relay.Tuple([uop_4156,call_4163,var_4161,const_4162,call_4170,const_4169,])
func_4172 = relay.Function([var_4155,var_4161,], output)
mod['func_4172'] = func_4172
mod = relay.transform.InferType()(mod)
var_4173 = relay.var("var_4173", dtype = "float32", shape = (15, 8, 7))#candidate|4173|(15, 8, 7)|var|float32
var_4174 = relay.var("var_4174", dtype = "uint16", shape = (624,))#candidate|4174|(624,)|var|uint16
output = func_4172(var_4173,var_4174,)
func_4175 = relay.Function([var_4173,var_4174,], output)
mutated_mod['func_4175'] = func_4175
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4200 = relay.const([[[-7],[-5],[-2],[-2],[3],[4],[3],[-2],[1]],[[-7],[9],[-9],[-9],[6],[-7],[5],[-1],[-8]],[[-9],[3],[-2],[-5],[-6],[-5],[1],[8],[-10]],[[-1],[-9],[4],[1],[2],[2],[-8],[-10],[4]]], dtype = "uint64")#candidate|4200|(4, 9, 1)|const|uint64
const_4201 = relay.const([[[9,8,-5,-8,1,7,8,-10],[-4,4,6,5,8,6,9,3],[6,-4,2,-1,1,-6,5,-5],[-8,6,6,7,9,6,-1,-8],[2,-5,5,7,5,-8,9,1],[2,-1,-1,2,4,-9,-1,-4],[-10,-7,-7,2,-6,-4,4,4],[5,6,-8,5,10,-8,3,-4],[-1,10,3,-1,4,6,3,6]],[[5,-5,2,-4,-5,3,-4,-3],[-6,-4,6,-8,1,10,3,-1],[10,3,5,6,2,8,-4,3],[-3,-9,-2,-1,2,-6,-9,-7],[-2,-3,-10,9,-6,-9,7,2],[-1,-2,9,-8,7,8,-1,-7],[7,-4,-8,-10,9,9,-3,9],[-2,-9,-4,-10,10,-9,4,6],[5,-10,-2,-1,10,-8,-1,-1]],[[5,1,-8,2,-10,-1,-6,-8],[8,6,-8,10,7,5,4,-8],[-7,-10,-2,4,-5,8,3,-2],[6,2,5,6,-1,-9,-8,-4],[7,-1,-8,3,-2,-5,-1,-8],[5,2,6,-3,8,2,2,-10],[-1,10,-6,5,5,4,6,-4],[-4,2,-4,-6,10,10,-3,-3],[-3,-6,-7,8,-10,10,4,9]],[[-10,-7,8,9,-1,-4,-1,-9],[-1,5,5,-1,-6,2,-5,-8],[-4,7,10,1,-7,6,-3,2],[1,1,-1,-4,5,6,9,-3],[1,-4,-10,-2,2,-4,-4,-9],[6,-4,4,3,-4,-9,3,5],[-6,4,-5,-2,4,-4,-4,7],[2,-8,-9,-8,-2,-7,3,-8],[10,4,10,-4,3,5,10,-7]]], dtype = "uint64")#candidate|4201|(4, 9, 8)|const|uint64
bop_4202 = relay.right_shift(const_4200.astype('uint64'), const_4201.astype('uint64')) # shape=(4, 9, 8)
output = bop_4202
output2 = bop_4202
func_4212 = relay.Function([], output)
mod['func_4212'] = func_4212
mod = relay.transform.InferType()(mod)
output = func_4212()
func_4213 = relay.Function([], output)
mutated_mod['func_4213'] = func_4213
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4256 = relay.const([[[-2,4,9,-6],[-9,-9,-10,9],[-8,-2,-2,-1]],[[-7,2,8,-7],[-10,8,6,4],[-10,-4,-3,4]],[[1,-2,9,9],[-8,2,-7,-6],[-2,8,10,-5]]], dtype = "int64")#candidate|4256|(3, 3, 4)|const|int64
var_4257 = relay.var("var_4257", dtype = "int64", shape = (3, 3, 4))#candidate|4257|(3, 3, 4)|var|int64
bop_4258 = relay.minimum(const_4256.astype('int64'), relay.reshape(var_4257.astype('int64'), relay.shape_of(const_4256))) # shape=(3, 3, 4)
bop_4266 = relay.equal(var_4257.astype('bool'), relay.reshape(bop_4258.astype('bool'), relay.shape_of(var_4257))) # shape=(3, 3, 4)
func_4172_call = mod.get_global_var('func_4172')
func_4175_call = mutated_mod.get_global_var('func_4175')
const_4274 = relay.const([6.940851,-7.137753,-9.441506,-8.776746,6.121256,-0.415565,-2.284962,-4.326955,2.280980,8.171919,0.203085,-7.532352,1.584678,5.261374,4.369965,-5.412593,1.846724,4.384009,2.053780,-7.497484,-7.821082,-3.679905,4.786020,0.462695,-8.522909,7.745917,5.237676,0.033592,-5.482043,-2.299557,-0.585391,-6.386572,8.792520,8.757740,2.367178,1.960025,-4.554719,-3.131413,2.915290,-3.095505,-8.075524,9.114738,4.989967,-9.852239,1.424232,-0.531081,-5.590908,2.451161,-3.386730,-2.106122,-7.024258,5.782326,-7.384404,9.417905,7.047231,6.362273,1.425019,-8.613507,-3.975636,-6.028997,1.939175,8.434461,6.799888,4.058471,2.022195,6.279955,6.091502,-8.459220,-3.662147,5.296703,8.289491,3.150068,9.750530,-1.024450,6.166354,5.271847,8.578381,-5.350239,-0.267602,-4.270772,2.124167,4.219155,-8.733192,-4.593977,8.303047,-4.566754,6.274102,7.824404,5.896501,-1.710805,-4.437790,4.307109,-7.689370,-0.585696,4.581561,-5.983517,-1.468678,-7.364051,1.854848,9.271552,-3.252177,2.062269,-4.219408,8.905985,-7.356895,-5.904487,0.554561,-2.686306,2.732469,-3.743995,0.428667,4.558199,0.726668,-5.363343,2.636578,1.273591,-9.977754,4.446895,-9.001261,-4.795006,-8.596674,6.224199,9.196980,3.484445,6.076733,0.679579,-0.703874,-5.143931,-4.914945,-7.212516,5.469357,-3.506509,-4.902771,-2.896777,-8.701517,-5.765510,6.349904,-4.382451,0.774648,3.215121,-3.771229,-3.124760,9.915948,-6.717640,2.775432,6.639210,-8.771919,-1.183353,1.636446,1.245633,-9.470538,-1.188637,-1.134358,-6.819080,-2.068830,-6.144071,-4.855468,8.483585,2.083646,-4.885400,-6.353432,2.558055,2.213970,-5.362888,-9.313547,-3.726080,7.426551,-6.590506,3.997486,3.340933,-2.444593,-2.346031,-7.442225,3.212440,2.660556,4.601982,2.392473,6.127403,-9.695653,-0.223990,7.951830,9.096071,4.925623,-0.980906,-1.092836,1.255436,3.683255,-6.249632,0.367308,-7.863274,8.428230,2.157533,-3.727446,4.431387,-3.034240,-1.534028,-1.298619,-3.905261,6.559526,-7.277300,-6.815672,9.426993,-5.351398,-9.676423,2.574288,-9.049953,-5.372044,4.526331,-2.403517,6.720308,-7.977226,8.696116,-9.895666,8.098766,-8.461085,8.931221,8.969430,4.636013,-3.594332,6.842065,-8.122939,-5.062919,5.130095,5.389793,-3.916626,-9.147691,-8.508244,4.402012,1.992218,3.889790,3.271161,8.999009,1.579851,-1.651080,-0.758097,1.494704,1.945422,3.186743,4.485515,8.440388,0.193145,8.950686,1.254244,-5.622305,2.751152,-3.160327,3.517329,1.878994,-5.372792,-0.979736,6.822688,7.831184,-6.403650,-1.728814,-9.916780,6.478584,7.592564,6.474263,-3.391095,-7.999504,8.726993,-7.810332,-4.497889,5.995650,3.398083,8.022793,3.677602,1.935662,8.659399,-0.863638,5.440833,8.253706,-8.831054,1.961690,9.477967,-6.246446,4.605798,3.702342,-9.387262,-8.114590,-9.684444,-0.148904,5.695069,8.340560,1.636876,-8.626988,-9.845291,-7.545797,-3.476465,2.150538,9.539185,2.885143,-2.898400,-9.305547,8.106794,-3.815985,-1.433584,-9.470810,-9.041603,-7.712953,8.452901,6.363313,-2.277377,-7.884608,7.317127,-1.953638,0.337122,9.810014,-2.186382,-2.886344,6.020459,-8.715364,2.612216,0.765797,-9.158407,-9.991291,-4.157025,3.210151,6.055966,8.146846,7.122968,0.903066,1.703907,-7.032727,-5.384674,-5.244373,8.642580,0.748410,3.561170,6.105306,-9.940735,3.813251,8.989619,9.773072,-2.358952,4.272837,6.765488,-6.140915,-7.675799,-5.038893,2.086856,-7.067019,5.593337,2.730744,-3.066868,8.353862,-4.152264,0.392374,7.517330,-1.330474,8.162204,-8.583290,-5.386305,-7.150020,1.990164,8.811452,2.166364,-9.497791,3.168954,7.976077,-5.685766,-1.317787,7.479915,-5.496555,8.920560,-9.079627,-6.371934,0.153369,0.494480,4.113622,-2.350768,1.977027,-3.679670,1.695146,9.303229,9.790351,7.187763,2.767143,1.589641,8.211987,-2.840519,-0.789578,-8.562063,-5.686505,7.409974,9.450773,-5.307060,5.154046,-4.607613,7.644772,4.176219,7.721446,-4.755645,4.384271,-1.043647,-5.865795,-2.643057,1.522503,-8.692764,-0.328323,-3.588142,-7.375677,-0.821699,8.619262,-0.450688,-1.867254,-5.086589,-4.085208,-7.115707,-9.397222,-9.381306,-1.396437,6.534435,-9.635406,1.710971,9.033027,-5.768513,-2.975176,2.460499,3.506347,-0.955028,1.142177,7.490786,-9.387230,4.381019,-3.483048,7.715376,-9.291219,-0.568157,1.964746,5.777215,6.330321,-2.726016,-9.430559,-7.894426,3.313132,-5.503149,4.071581,-4.015038,7.418920,-5.377185,0.340880,-2.392556,6.216680,-0.501873,-7.203790,3.101354,0.907165,-2.658491,-2.216432,4.803264,4.017816,-7.990338,1.931174,-6.317667,5.571966,-1.894106,9.748305,-7.971247,-5.183216,6.129903,9.891590,-9.060054,-8.066519,-9.912586,5.482595,-6.443743,3.871336,8.307298,8.481696,-5.164523,8.704663,3.406332,8.275916,6.193753,2.362957,8.542179,7.777580,4.895072,-1.424185,-0.758207,-8.703816,-2.293384,-8.178711,-4.410128,-0.655620,-2.931629,-3.073374,-3.364152,3.272425,5.460185,-3.921633,1.794342,-9.852600,0.576684,4.625084,9.044002,-4.093508,7.250346,9.670863,-8.043303,-3.595050,7.390116,-9.658677,4.142567,6.804147,-8.359631,3.504930,-1.555126,9.093487,-2.511390,9.707899,-1.547605,7.606910,-0.927309,4.773416,-3.131232,4.073843,-7.056993,5.826445,-3.717415,-1.584137,-1.226101,-8.621752,-7.206108,-0.058753,-8.423632,-5.575899,2.493219,9.123086,-3.082174,-2.708194,-9.591805,6.538480,-3.930608,-1.372112,0.128720,5.334845,-9.510628,-0.633082,1.285511,2.288863,0.205474,-0.346763,-1.428555,-3.884477,6.716880,5.353621,5.672234,-0.702460,-9.573896,-4.867628,-5.135438,1.155450,6.535050,1.117853,7.458506,4.106417,-1.653570,9.397688,6.914909,0.689143,1.849370,-6.614199,3.978960,-2.762762,-7.275021,-7.079623,-7.811628,4.516194,4.886368,7.628460,-4.334623,3.644223,-0.729547,3.309067,1.141401,-7.779712,6.894099,1.317610,-2.429188,-0.916197,-4.627018,4.099255,9.657608,-2.371806,2.922145,3.678459,-8.600061,-7.639848,6.578975,-6.707051,-2.183562,3.438920,-4.215343,2.305249,-2.135739,1.303089,-9.881167,-0.633421,2.615439,-9.999676,-9.987088,-8.511403,1.955170,5.879882,-6.446649,6.357520,1.686590,9.102804,5.798562,-5.532890,-0.702089,-8.718349,-0.872194,-7.020259,0.596275,-0.941892,-3.048042,2.553414,5.411977,6.595658,-4.739386,-9.575965,8.338884,4.728420,-9.684279,2.252963,4.480908,6.738380,-5.575016,-0.555616,5.006663,5.517626,7.413602,8.455893,2.094028,2.725727,4.001540,6.191446,4.154050,7.619808,-2.093295,-9.204966,-9.828451,2.136748,-2.686567,-1.871761,-1.299742,7.472106,-6.091791,-1.920863,1.773509,-1.760913,-0.385115,-6.106948,-6.141571,3.149261,-1.025244,4.466639,-2.049505,2.620473,-0.730999,-8.135948,0.972388,-1.411756,-8.544038,9.634663,-1.334020,-6.493400,-2.844819,-4.787202,-4.096480,4.819928,-9.865439,5.454760,-8.942423,2.608395,-2.087261,1.173110,0.831515,-1.790278,8.984904,-0.767611,4.868724,-3.107213,2.452962,-8.736665,-2.005930,-0.559810,-0.067147,6.880852,-8.203827,8.608090,-4.592359,-6.717379,0.699755,7.936336,-9.375540,-4.462511,-6.123099,3.513445,-7.345734,6.593829,-2.698737,8.314500,1.670717,2.125985,3.339772,9.364939,1.568488,5.560539,-5.341181,6.169781,-9.610040,-1.358868,-5.594550,-4.139979,6.998884,-4.912702,4.324355,1.766998,-7.615890,-9.751124,3.290326,-3.539638,0.661946,9.236619,-4.413654,6.910764,6.659639,-1.057545,6.262703,-4.731883,-4.920238,-8.136426,-3.912120,3.772303,-2.786298,-3.161467,8.132497,0.804693,-9.216562,-1.810180,1.654148,-4.756821,1.265890,9.523943,0.820718,0.917842,-2.236067,-8.004628,4.541792,8.404984,4.568338,-5.807158,-6.409986,-6.018375,-8.425526,-4.191683,-2.384195,-4.469631,9.584208,-2.606025,5.166451,-0.073720,-9.404253,-8.337771,-1.693432,2.471792,4.183490,-9.339181,2.894919,0.159474,0.338864,-5.926685,-6.156652,4.304791,-9.209380,-3.824687,-0.839376,0.613713,9.338972,-3.167983,3.986093,-7.690450,4.678100,3.543400,6.465436,7.612116,-4.245016,-0.275671,-7.476029,-2.455206,2.352774,7.028381,5.017891,-8.956032,-1.812513,3.393629,6.475090,9.638062,-0.747238,4.658211,8.058542,4.082357,-2.844773,-2.171823,6.496609,0.300727,8.563853,-9.341360,7.040019,-4.784762,-9.915165,-3.484961,2.395158,-5.452868,-5.000806,8.438224,-2.035346,7.249221,-5.446969,-8.004484,-4.064998,-5.564127,-8.535413,-1.426293,-2.318693,2.067739,-7.130542,-9.081924,2.400504,-6.574770,-2.048549,5.848169,-2.107178,-6.756825,-7.148491,-9.552592], dtype = "float32")#candidate|4274|(840,)|const|float32
var_4275 = relay.var("var_4275", dtype = "uint16", shape = (624,))#candidate|4275|(624,)|var|uint16
call_4273 = relay.TupleGetItem(func_4172_call(relay.reshape(const_4274.astype('float32'), [15, 8, 7]), relay.reshape(var_4275.astype('uint16'), [624,]), ), 5)
call_4276 = relay.TupleGetItem(func_4175_call(relay.reshape(const_4274.astype('float32'), [15, 8, 7]), relay.reshape(var_4275.astype('uint16'), [624,]), ), 5)
func_3347_call = mod.get_global_var('func_3347')
func_3349_call = mutated_mod.get_global_var('func_3349')
var_4280 = relay.var("var_4280", dtype = "float64", shape = (33,))#candidate|4280|(33,)|var|float64
call_4279 = relay.TupleGetItem(func_3347_call(relay.reshape(var_4280.astype('float64'), [3, 1, 11])), 0)
call_4281 = relay.TupleGetItem(func_3349_call(relay.reshape(var_4280.astype('float64'), [3, 1, 11])), 0)
output = relay.Tuple([bop_4266,call_4273,const_4274,var_4275,call_4279,var_4280,])
output2 = relay.Tuple([bop_4266,call_4276,const_4274,var_4275,call_4281,var_4280,])
func_4285 = relay.Function([var_4257,var_4275,var_4280,], output)
mod['func_4285'] = func_4285
mod = relay.transform.InferType()(mod)
mutated_mod['func_4285'] = func_4285
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4285_call = mutated_mod.get_global_var('func_4285')
var_4287 = relay.var("var_4287", dtype = "int64", shape = (3, 3, 4))#candidate|4287|(3, 3, 4)|var|int64
var_4288 = relay.var("var_4288", dtype = "uint16", shape = (624,))#candidate|4288|(624,)|var|uint16
var_4289 = relay.var("var_4289", dtype = "float64", shape = (33,))#candidate|4289|(33,)|var|float64
call_4286 = func_4285_call(var_4287,var_4288,var_4289,)
output = call_4286
func_4290 = relay.Function([var_4287,var_4288,var_4289,], output)
mutated_mod['func_4290'] = func_4290
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4111_call = mod.get_global_var('func_4111')
func_4113_call = mutated_mod.get_global_var('func_4113')
call_4311 = func_4111_call()
call_4312 = func_4111_call()
output = call_4311
output2 = call_4312
func_4323 = relay.Function([], output)
mod['func_4323'] = func_4323
mod = relay.transform.InferType()(mod)
mutated_mod['func_4323'] = func_4323
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4323_call = mutated_mod.get_global_var('func_4323')
call_4324 = func_4323_call()
output = call_4324
func_4325 = relay.Function([], output)
mutated_mod['func_4325'] = func_4325
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4111_call = mod.get_global_var('func_4111')
func_4113_call = mutated_mod.get_global_var('func_4113')
call_4329 = func_4111_call()
call_4330 = func_4111_call()
uop_4342 = relay.atanh(call_4329.astype('float64')) # shape=(14, 13, 4)
uop_4344 = relay.atanh(call_4330.astype('float64')) # shape=(14, 13, 4)
func_3588_call = mod.get_global_var('func_3588')
func_3594_call = mutated_mod.get_global_var('func_3594')
var_4364 = relay.var("var_4364", dtype = "int32", shape = (336,))#candidate|4364|(336,)|var|int32
const_4365 = relay.const([-9,-1,2,-10,-3,-10,-3,-9,10,-2,8,3,7,-3,1,3,8,4,1,6,1,5,8,-10,7,-7,9,7,3,1,7,-6,9,4,6,-6,-7,-8,6,-1,2,-10,-9,-9,6,-8,3,9,-6,3,-2,-6,9,-1,-5,-8,2,10,-4,6,8,-6,-8,2,-9,-3,-4,-9,6,-6,4,-8,3,-10,6,10,7,-4,10,-8,-2,9,3,-9,-9,8,10,-2,3,-1,-7,4,4,1,-7,-4,-4,-7,2,-4,2,2,9,8,-5,2,7,-6,-5,8,7,-2,-6,8,4,6,-5,1,-2,5,-5,1,-4,-6,5,-2,5,-5,-3,-8,-4,-5,3,-2,-5,4,5,-4,2,1,-4,-2,-7,2,8,8,-2,-1,-9,2,2,-5,-3,8,-1,-3,-4,-3,-1,-10,3,-3,1,2,8,5,1,-9,-9,8,-5,-4,-7,9,-2,-7,9,1,-3,-1,8,3,5,2,6,-3,-4,-2,-4,8,-2,-2,-6,-2,-8,4,-10,-5,-6,1,6,4,1,-10,-9,-4,7,3,-10,6,1,-4,-4,5,6,1,10,-4,3,9,-4,4,-6,7,-3,6,1,-4,8,5,5,-8,1,-7,5,6,-6,3,7,-10,2,-6,-5,-10,-10,-7,-10,2,-6,-8,5,-10,-4,5,-4,-4,10,-1,-10,9,7,7,-10,3,-9,9,-4,-5,4,2,4,6,5,10,-10,9,5,-7,6,3,10,7,10,4,1,-4,1,-10,7,4,-1,7,9,-2,-5,-10,6,-10,-1,-4,8,1,8,-6,3,2,-2,-9,4,-8,6,-3,9,-3,-6,7,5,-3,-9,-9,10,-4,2,-5,-5,-3,-5,5,10,6,-5,9,-9,4,-3,10,-6,-6,-10,-3,6,-5,-4,4,-8,-9,-3,6,3,10,5,-9,-6,7,6,10,10,2,8,8,-10,1,-7,5,-9,8,-7,-2,2,9,-3,-9,-4,7,-10,-8,-3,-4,-7,4,6,-9,9,-5,5,10,-1,-1,3,-9,-2,-3,-7,7,8,2,-3,6,-4,-4,5,7,2,-4,-3,-8,-9,1,-10,2,10,-1,-4,-5,-1,7,3,-3,1,10,10,10,8,5,-8,5,10,-10,-4,7,4,-1,-10,-9,-4,5,-6,-5,-4,2,7,1,3,6,-6,1,6,4,8,5,4,-8,-4,-5,-3,-2,4,2,5,-3,10,9,-7,2,-10,-1,-8,7,4,-2,-10,-1,-10,-10,-10,5,8,-6,1,-4,6,7,6,7,9,9,6,4,3,-10,-10,3,-1,4,-8,2,6,7,7,-4,-5,-6,2,-8,7,-6,-5,4,7,-9,-10,8,-2,8,2,6,4,10,-3,9,-10,-4,5,2,-7,8,4,3,-2,5,-2,3,2,-2,-6,2,5,3,-5,-1,-8,10,-6,5,-6,3,-1,6,2,8,-8,-3,8,4,-1,-6,3,-8,-10,6,-5,-6,5,-2,9,-2,10,-1,-9,2,9,6,5,-2,9,3,-6,10,2,-8,-2,9,8,-10,4,-7,-1,4,9,5,5,-1,8,4,-3,-10,-5,-7,-8,9,1,4,3,10,-5,1,2,2,-5,-9,-9,5,9,-8,-1,10,5,3,-3,9,7,-9,-1,-10,-5,5,9,9,-2,-8,6,-4,-3,8,-2,-3,6,-10,3,3,1,4,-8,2,2,2,6,-8,2,5,2,3,-2,-4,2,-4,5,-5,-3,-2,6,2,9,3,5,-5,7,-6,10,-5,9,-7,5,9,10,-2,9,-8,-5,10,-8,10,5,-4,8,-7,-9,5,-8,-4,8,-5,-4,-5,-4,1,-4,-7,7,-1,-3,3,-5,-7,-3,-3,9,-9,-3,-9,1,-10,3,1,-1,6,-5,5,7,4,3,10,7,2,-4,-10,-5,2,-10,-5,-7,6,-9,-1,4,-6,-5,10,8,4,5,8,4,5,3,6,2,-4,-4,-9,2,-5,2,9,-7,1,-8,-3,9,8,-1,-3,-6,-6,-4,9,8,3,1,-9,6,4,1,8,-5,-1,3,-9,-5,-1,10,6,-6,-8,-2,7,9,4,9,9,10,-10,7,2,-6,10,-3,-4,7,7,-2,-9,-8,-10,-7,-10,-10,10,4,9,4,-6,8,-7,-3,-4,3,-8,10,-7,-9,-4,9,-6,7,-3,-5,-10,-8,-7,5,7,-7,-8,-3,4,10,-10,-5,2,-4,-2,3,-3,3,5,3,6,7,9,-7,-3,-4,-7,-1,-10,3,5,8,-8,-8,-8,5,3,6,-5,6,1,2,8,7,10,1,-10,3,-7,1,4,-9,-1,10,7,3,-5,-6,-2,-2,-4,10,-2,-4,-4,4,2,-6,8,8,-1,3,-7,2,3,4,6,3,-6,7,-1,-9,-6,-5,-2,-2,-5,-10,4,-4,5,6,1,-1,6,9,1,-10,5,-1,-10,10,8,8,4,-10,-1,2,6,10,-1,9,1,7,7,-2,1,-2,4,2,5,6,-8,9,10,-6,-10,-3,6,-8,-9,2,4,10,8,-5,6,9,10,8,9,2,-2,-2,-4,3,-1,-5,3,-3,9,-3,1,-9,-2,-2,-4,2,-9,6,3,1,6,-8,-3,-9,-9,9,6,1,-6,9,-7,-8,5,4,-3,1,2,6,10,-10,-10,9,7,-4,-2,5,-5,-10,6,8,8,7,-9,-5,-10,8,-4,-6,4,3,6,-5,-2,-9,8,6,-7,8,-7,4,10,9,-8,4,-8,8,-7,-3,8,7,-1,4,7,-5,6,6,-3,9,-2,3,-10,-2,-4,5,-8,9,-7,-9,-6,-1,-4,-10,1,-8,2,3,-10,10,1,-7,-10,-8,9,9,2,2,6,2,-3,10,-10,9,7,6,-7,-7,-7,-1,-2,6,2,-1,7,-6,4,6,-7,5,-6,-2,-4,-7,-3,9,-1,-1,-10,1,-8,10,1,7,2,-3,-3,-1,-1,-9,-7,2,-3,2,7,-5,-10,-6,-10,2,5,2,8,6,-2,-6,5,-8,4,4,-3,6,-3,-8,-5,8,-6,9,-2,5,-10,-2,10,-3,-9,-6,7,8,6,6,-8,1,-3,-8,-5,-10,6,10,-3,2,4,-6,2,3,-2,9,-1,4,1,2,4,3,-5,8,7,-10,8,4,-2,9,-3,-3,-1,2,-8,-9,4,4,4,7,-10,4,5,-1,4,8,-8,-4,8,2,8,-8,-3,4,-2,1,-8,-3,5,-7,-2,6,7,-3,-6,1,-8,6,9,1,1,-5,-8,-1,2,2,6,-6,-6,8,-5,5,5,-5,3,8,-7,-4,-1,10,4,9,-7,-5,-5,-6,1,2,-3,2,2,-10,5,5,-9,-1,-6,7,5,-8,-4,-9,-4,-2,-9,-4,6,-9,10,-9,9,-3,10,8,-1,-6,-1,-9,7,5,-8,6,-5,-5,6,-3,3,10,8,-9,-6,-4,-1,3,4,5,-7,6,-5,-4,-4,-8,4,2,-7,9,-7,10,5,7,1,3,-2,-7,-1,-8,9,4,5,5,7,7,8,2,-1,7,1,-8,-1,10,8,-9,-7,2,8,-3,-3,1,-8,-7,3,10,5,9,-5,-8,-10,-1,9,-8,-3,4,-3,-7,7,9,9,-6,-9,10,5,-8,6,-1,-5,2,9,-3,-8,-3,-6,8,4,-10,10,-7,-8,1,4,-9,-10,6,6,2,-2,10,7,-3,-4,4,-1,-1,5,4,-4,10,-3,-3,-10,2,10,-9,-2,10,5,9,4,-6,-2,10,-3,-7,-1,-5,5,-2,-1,-4,5,-8,5,-8,-7,-9,7,4,2,-6,2,-3,-1,2,7,-3,-9,3,-10,4,-5,8,-2,2,4,6,-1,4,5,-4,-1,5,9,5,-6,7,-2,3,-9,-8,5,2,-5,10,2,2,-10,-5,-2,-8,-9,-10,-4,-3,-10,-8,6,-2,4,-1,-7,-2,-10,6,7,-2,3,-5,9,-9,-10,-5,-7,-7,1,9,-3,-5,-8,-8,-8,-1,-4,-5,-6,-1,1,5,5,9,4,-3,9,-1,-10,-1,-9,7,-1,-8,9,5,7,6,-4,7,-2,-4,-6,-9,-3,-5,5,6,6,-2,5,-5,-7,-4,5,-10,10,10,-10,4,-9,6,3,-9,9,-6,-9,7,-1,9,-2,6,5,-10,5,10,5,10,-9,-8,10,-3,4,-5,10,-2,-2,-2,4,-4,6,-5,-10,-8,5,7,10,6,-9,9,-6,-2,9,7,-6,4,-5,-4,5,-3,-7,-10,2,9,9,-1,-8,3,-6,1,-3,5,-6,-10,10,3,-4,2,-1,7,10,-4,10,-6,-10,-10,3,-1,-4,-2,-4,10,8,-4,-5,-8,1,-5,-1,-1,9,-6,-7,-3,-5,3,-10,7,-7,6,6,-8,7,-1,-4,9,-2,-8,-9,-7,-6,6,-5,3,-8,3,6,-2,-3,-1,-3,-10,5,-5,-9,-3,-5,10,-1,-2,-5,-2,4,-3,-5,2,5,7,10,-8,-6,-3,-9,-3,-7,1,7,2,-7,6,9,2,-2,6,2,-10,-7,1,7,8,6,3,-1,3,-9,-10,1,-4,4,6,8,-4,10,-10,-9,10,-6,-9,9,6,2,-8,-9,-7,-6,9,-8,8,-10,6,5,-3,8,-9,-3,-7,-1,10,-1,5,8,1,8,-6,6,-6,-8,1,2,-5,4,-1,-10,7,8,7,5,-5,-5,-9,-5,-3,3,-10,-5,9,-8,-4,-3,-8,-2,-8,4,8,-6,-2,2,-3,9,-10,-10,-4,1,-7,-1,-5,1,-10,7,-6,-4,4,-4,-9,-2,-9,-7,-9,3,3,2,-8,1,9,5,3,-6,3,5,4,2,8,-8,-10,-6,6,-10,10,-2,3,6,5,6,1,2,9,-1,-5,-7,-10,9,10,10,-5,10,-10,-6,6,4,3,5,2,-10,-2,4,-9,-8,6,-8,-2,9,-3,-6,-8,8,-6,7,8,-7,-4,4,5,2,-2,2,-9,4,7,2,-10,-1,5,4,-3,4,1,-3,-10,10,7,5,-3,7,1,-5,2,-7,4,-8,4,6,-2,4,8,-5,3,1,1,6,-9,-4,9,-6,5,-9,8,4,8,1,9,-1,7,8,9,-9,7,9,-5,6,-1,-8,-4,-8,-8,6,-6,-10,8,1,4,-8,-5,4,6,-9,8,-7,-8,3,-5,-3,-8,3,5,-5,-4,-7,-4,9,4,6,-5,-2,-7,1,6,2,-1,9,-7,-2,-9,-1,1,-10,10,-4,-8,-10,-3,-6,8,-2,3,2,6,-4,-4,-8,5,-1,6,1,-4,-1,-5,6,7,10,-9,-1,-10,-2,9,1,-9,-10,10,1,4,2,10,-3,-8,-8,-7,4,5,-4,-9,10,-9,-5,4,2,-9,-9,2,10,5,9,-9,1,-10,-8,-2,-6,-3,-10,8,-6,6,-10,9,10,-7,8,-1,-10,6,1,10,-8,10,-1,10,7,-5,8,-4,8,7,-9,-6,3,-1,-1,4,4,-7,-2,2,-7,-4,-1,-3,-4,-4,1,4,-4,-8,7,-2,6,6,10,-7,7,10,-2,6,3,10,1,-8,10,10,8,8,3,1,-6,-10,10,10,5,9,-7,4,7,-5,-9,-4,-8,10,10,7,-10,8,7,3,3,1,-2,-8,-6,6,7,-2,-4,-6,-6,10,-10,-5,4,8,-9,-7,-4,8,9,7,3,3,-6,4,2,7,10,-8,1,4,-6,10,10,-4,-3,-7,2,6,8,1,1,3,-1,10,10,-3,6,8,3,-7,5,-5,-5,-5,8,-7,6,-4,1,-1,7,7,7,-1,9,7,3,3,2,3,5,-2,-9,6,-8,1,10,1,7,-8,-2,-2,-8,5,2,1,-7,6,9,6,-10,-5,6,8,9,-4,10,8,-1,-9,10,-2,-2,2,4,-1,6,-5,-3,8,8,5,-7,7,5,-3,-5,-1,-5,10,-1,-4,-8,-1,-1,-5,10,8,-2,-5,8,-1,5,1,6,-7,-4,-6,-9,5,6,8,1,-3,-10,1,8,-2,5,1,7,-2,9,3,-7,-8,10,8,4,4,2,2,9,-3,9,8,3,7,10,-10,2,-1,-5,-2,2,3,-3,-4,-10,7,-2,-7,8,7,-8,6,-6,-10,6,10,-2,-2,9,-7,6,10,10,-2,-3,-6,-7,-9,-9,-4,5,-3,-8,-1,-2,5,2,-5,-3,3,-6,-7,5,-6,6,-9,5,-7,-8,9,7,-9,1,5,1,-2,-9,1,-6,8,6,-3,1,3,8,-9,-8,-4,-2,-7,-9,1,-9,-1,9,6,-9,6,9,-7,-3,-10,5,-4,-4,-2,-9,2,7,-2,5,2,7,3,-1,-10,9,7,-7,4,9,6,-9,5,-4,-2,5,2,-6,-5,-7,1,-7,3,9,-9,3,8,4,8,10,-6,6,4,-6,6,6,-1,-8,-10,2,-5,3,-7,-7,-6,6,2,1,-5,9,-10,1,-9,-8,3,-6,-4,-4,-7,-7,7,-6,-9,-9,4,6,-2,-7,-5,7,4,-8,2,9,-2,4,-4,-10,-9,-5,-6,7,9,6,9,-4,7,-1,-6,2,-1,-7,9,5,-8,-1,3,-2,-1,6,2,-3,4,9,8,-5,-10,-1,-2,6,-1,6,-2,6,-7,-5,4,1,4,7,-3,-1,9,-1,10,-2,-2,-5,-7,2,-7,6,-5,-1,-6,10,-3,2,3,-2,9,-6,-2,-9,-1,-6,6,-2,-8,-1,-1,4,4,-5,-9,1,-3,-1,7,-6,1,-9,-6,9,3,-8,10,8,10,-2,2,-9,10,10,1,8,-9,-6,-7,9,-4,-4,-1,-10,-6,1,8,3,-9,-7,-10,-10,-1,6,-3,8,3,4,4,6,8,10,-5,-6,-7,-7,-8,-7,-7,-7,-7,-8,6,-2,-7,10,6,-1,-4,-7,10,7,-3,6,-5,-10,9,3,-1,-8,3,-6,-10,2,-4,5,5,1,-6,7,2,-4,-9,-8,3,-1,-4,5,-3,-7,8,-10,-4,10,-6,1,-6,8,-3,-6,-2,3,3,1,-7,-1,-10,7,-2,6,-5,5,-4,-7,-1,5,1,1,-8,-9,1,-9,3,-9,-2,-2,-1,-8,-9,-4,-9,6,-7,-5,-9,9,6,-5,5,-3,-8,-3,9,-4,6,1,-6,-9,-3,-7,9,-4,-5,4,-2,6,2,-9,-1,-1,2,4,10,1,10,-8,4,-3,-1,-7,-6,3,2,-8,8,10,3,7,9,-1,-6,7,-8,-6,-9,-4,-8,10,-10,1,-10,-7,6,8,-2,4,5,7,-4,-6,8,8,6,5,6,5,8,-9,-4,2,8,-5,9,-8,-4,6,4,-1,-1,8,4,-5,5,-7,-3,-6,-4,3,2,-6,8,10,5,-4,-8,6,-8,-4,-7,2,1,8,-1,-1,-4,7,1,4,1,-6,2,10,-5,3,-5,-9,-4,-2,-1,6,-1,7,-4,-10,1,-1,8,-3,6,-4,-10,7,-3,9,-3,-7,-9,8,9,6,6,3,1,-8,3,-7,-6,-8,-3,-10,1,-3,-4,-4,1,-3,1,10,5,6,1,-10,8,-3,-5,9,10,8,5,9,4,-2,9,7,-3,1,-8,8,-10,-9,3,1,-2,-9,1,-4,1,1,1,3,3,-5,-6,-9,3,1,5,-9,-3,5,-8,10,-6,-7,-1,10,-6,-8,-9,9,2,6,-4,-4,5,2,8,-3,4,-3,2,-2,-10,1,7,1,-1,-9,-4,-3,-4,-4,-6,-9,9,-7,7,9,2,-9,9,-8,-9,-7,-2,5,3,8,-6,-2,-1,8,-2,7,7,3,-8,-8,10,9,6,-5,3,10,10,-6,3,-9,1,9,4,5,4,6,-1,-5,-10,5,6,5,-9,7,7,9,3,-5,1,-8,5,9,10,-10,6,4,-3,8,-1,4,-10,-5,10,-10,10,-5,2,1,-10,4,8,-8,8,3,-10,9,-9,-2,4,1,2,9,4,7,10,-1,-1,9,4,1,8,-5,6,-7,1,-4,-6,8,2,-5,7,3,5,-9,4,7,2,9,9,-8,-8,3,7,5,7,4,-5,3,-8,3,4,2,-9,-6,10,9,8,1,5,5,-7,-7,-5,-4,-3,-3,-6,5,-7,-4,-6,-7,6,8,-6,-3,-1,5,1,6,-4,-2,-3,6,9,1,6,10,7,-3,-2,-6,-9,8,10,-5,-5,7,-4,-10,-4,10,10,-1,-1,-10,5,7,-6,-3,1,3,4,3,-4,5,-5,-7,7,2,6,-3,7,-4,-7,1,6,-3,7,-10,-3,8,-10,-5,-5,-8,-8,-2,3,7,-7,-9,6,5,1,2,-10,2,-7,10,-3,-5,-1,3,6,-7,2,-6,-1,-2,6,-4,6,10,-4,-9,3,5,4,-10,-2,3,-5,2,10,8,-8,6,-10,-9,-1,1,-4,-7,-6,7,6,-2,1,-6,-6,10,-9,-9,-5,3,-9,-7,3,-9,1,-7,-8,-9,-2,1,-1,3,-7,9,3,7,6,-2,8,-8,-1,-7,5,-9,10,5,9,1,10,-8,-2,4,-9,-7,-10,-5,1,2,-7,-2,-1,10,7,-7,-1,-2,10,-1,2,5,4,-5,-3,10,5,10,-1,5,-4,-4,7,-10,-2,5,10,6,-9,10,7,3,3,8,-4,1,7,-2,3,-1,-4,1,-6,7,-9,9,-8,7,-4,7,-10,-5,-6,-3,-9,-6,-3,-7,5,6,3,-7,8,4,1,-1,10,9,-2,-6,7,6,-10,-8,-8,-8,-2,4,3,3,9,-4,-1,-4,-3,6,6,-9,6,3,2,5,-10,-3,6,4,1,4,-9,4,1,-4,-3,-3,-10,3,10,5,8,3,-7,9,5,1,2,-7,-7,-7], dtype = "int64")#candidate|4365|(3360,)|const|int64
var_4366 = relay.var("var_4366", dtype = "bool", shape = (120,))#candidate|4366|(120,)|var|bool
const_4367 = relay.const([9.802022,8.897827,-0.419632,-9.035423,1.438380,-1.552128,-1.189410,-6.327450,4.630952,-7.792396,8.794632,4.615466,-8.004142,6.103965,-1.066400,-6.868837,8.437243,-5.753595,-3.835608,-7.173249,-9.654501,-0.592551,1.882306,1.524570,-1.696309,-9.224226,-7.264853,6.258491,2.045612,-1.178699,9.145671,7.213767,4.604796,-8.038920,-4.513477,6.958686,-1.682355,3.059901,4.251027,-8.968555,7.250654,2.134500,-7.555693,-5.929653,2.584663,3.849837,4.991005,-4.279690,6.615024,-4.947688,4.497454,-6.555359,5.713448,-7.090165,-5.588755,-6.846592,8.461203,0.541039,-6.456654,8.552076,1.821504,7.800759,3.917389,2.490316,-9.623744,-7.016074,8.538850,7.223066,-0.919674,0.124213,-1.987248,-1.854728,2.345799,-8.562620,9.606893,-9.010660,-9.026105,8.394061,0.723307,-9.307864,-4.982640,0.490031,-2.396582,3.407835,-9.170502,7.899004,-4.067563,-0.324319,-0.580216,-4.569961,-8.727252,-5.836081,-3.233765,-3.582920,-8.569407,8.722218,7.614605,-5.491096,-8.280303,6.563673,4.118156,3.332474,-7.585820,2.856084,-1.578351,5.124538,-4.155980,-7.683889,8.928997,-4.143959,0.990186,4.699396,7.127331,-6.631986,1.379052,-6.044839,1.520039,-7.281600,-8.171506,-1.256951,9.746282,3.667114,2.746441,-5.697048,3.833118,-2.561313,1.884451,7.414401,2.160192,-1.741150,8.433175,9.941357,-0.240101,3.538277,-1.111229,-2.462037,1.947425,3.226641,2.718340,1.173928,4.501447,1.395300,4.699679,0.561932,3.671829,0.351642,-3.420361,8.350095,1.131638,1.392255,-1.861831,9.575590,-1.270291,-7.616460,3.396781,-8.660490,7.051041,4.832538,-3.624726,4.829784,-0.407391,8.747386,-2.806754,5.917980,8.593849,5.079531,-0.977939,2.688910,4.146363,-5.346572,1.849547,6.673834,1.384621,-2.987007,0.749327,7.966414,-2.345875,2.111507,5.756215,-9.654924], dtype = "float32")#candidate|4367|(180,)|const|float32
call_4363 = relay.TupleGetItem(func_3588_call(relay.reshape(var_4364.astype('int32'), [7, 16, 3]), relay.reshape(const_4365.astype('int64'), [3360,]), relay.reshape(var_4366.astype('bool'), [60, 2]), relay.reshape(const_4367.astype('float32'), [180,]), ), 4)
call_4368 = relay.TupleGetItem(func_3594_call(relay.reshape(var_4364.astype('int32'), [7, 16, 3]), relay.reshape(const_4365.astype('int64'), [3360,]), relay.reshape(var_4366.astype('bool'), [60, 2]), relay.reshape(const_4367.astype('float32'), [180,]), ), 4)
uop_4376 = relay.rsqrt(uop_4342.astype('float64')) # shape=(14, 13, 4)
uop_4378 = relay.rsqrt(uop_4344.astype('float64')) # shape=(14, 13, 4)
output = relay.Tuple([call_4363,var_4364,const_4365,var_4366,const_4367,uop_4376,])
output2 = relay.Tuple([call_4368,var_4364,const_4365,var_4366,const_4367,uop_4378,])
func_4383 = relay.Function([var_4364,var_4366,], output)
mod['func_4383'] = func_4383
mod = relay.transform.InferType()(mod)
mutated_mod['func_4383'] = func_4383
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4383_call = mutated_mod.get_global_var('func_4383')
var_4385 = relay.var("var_4385", dtype = "int32", shape = (336,))#candidate|4385|(336,)|var|int32
var_4386 = relay.var("var_4386", dtype = "bool", shape = (120,))#candidate|4386|(120,)|var|bool
call_4384 = func_4383_call(var_4385,var_4386,)
output = call_4384
func_4387 = relay.Function([var_4385,var_4386,], output)
mutated_mod['func_4387'] = func_4387
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4323_call = mod.get_global_var('func_4323')
func_4325_call = mutated_mod.get_global_var('func_4325')
call_4399 = func_4323_call()
call_4400 = func_4323_call()
output = call_4399
output2 = call_4400
func_4404 = relay.Function([], output)
mod['func_4404'] = func_4404
mod = relay.transform.InferType()(mod)
mutated_mod['func_4404'] = func_4404
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4404_call = mutated_mod.get_global_var('func_4404')
call_4405 = func_4404_call()
output = call_4405
func_4406 = relay.Function([], output)
mutated_mod['func_4406'] = func_4406
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4404_call = mod.get_global_var('func_4404')
func_4406_call = mutated_mod.get_global_var('func_4406')
call_4456 = func_4404_call()
call_4457 = func_4404_call()
output = relay.Tuple([call_4456,])
output2 = relay.Tuple([call_4457,])
func_4458 = relay.Function([], output)
mod['func_4458'] = func_4458
mod = relay.transform.InferType()(mod)
output = func_4458()
func_4459 = relay.Function([], output)
mutated_mod['func_4459'] = func_4459
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4212_call = mod.get_global_var('func_4212')
func_4213_call = mutated_mod.get_global_var('func_4213')
call_4466 = func_4212_call()
call_4467 = func_4212_call()
output = call_4466
output2 = call_4467
func_4472 = relay.Function([], output)
mod['func_4472'] = func_4472
mod = relay.transform.InferType()(mod)
mutated_mod['func_4472'] = func_4472
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4472_call = mutated_mod.get_global_var('func_4472')
call_4473 = func_4472_call()
output = call_4473
func_4474 = relay.Function([], output)
mutated_mod['func_4474'] = func_4474
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4458_call = mod.get_global_var('func_4458')
func_4459_call = mutated_mod.get_global_var('func_4459')
call_4540 = relay.TupleGetItem(func_4458_call(), 0)
call_4541 = relay.TupleGetItem(func_4459_call(), 0)
const_4582 = relay.const([[[-8.180359,-5.380623,1.112720,-6.029491],[9.565882,9.760866,-0.517745,9.630498],[-1.155819,-0.943792,7.260287,3.500292],[3.139713,9.968679,8.602903,9.534368],[-3.585983,-7.702461,-5.878583,-4.971717],[2.688471,8.199702,-6.261620,5.149175],[5.955159,-1.899264,4.803717,-5.585891],[2.500581,0.540079,-8.380027,-6.491896],[-4.860340,-4.894488,7.885759,-2.796280],[-5.595095,7.104226,-6.734530,-9.370817],[-0.243336,-3.059884,-7.254961,-4.876419],[9.228506,-9.711446,-2.586184,-5.343096],[6.021675,-7.226591,5.181429,3.849147]],[[-3.031916,6.934098,8.548488,0.671874],[-1.463906,5.451642,-6.744818,-3.071124],[0.570220,-2.867559,8.804757,-9.119212],[4.226214,-0.715737,9.155228,9.717316],[-6.729302,-0.913109,-7.677699,8.961645],[-5.007848,2.241144,-6.104916,-1.346351],[-3.499578,3.683749,8.938958,3.811905],[-0.646587,3.265459,9.854597,-0.978054],[3.296644,-3.165181,-6.162031,2.564162],[-9.890749,2.569856,-9.127043,5.997614],[-2.982172,6.701118,-6.919454,6.758444],[-8.162508,6.877339,9.922674,5.703605],[-8.217867,-5.712520,0.030068,6.731618]],[[-8.245672,-7.860695,-5.758859,8.756275],[-6.006432,-2.636380,6.149909,-8.420258],[0.485891,-7.018110,2.770374,7.093201],[9.831599,-7.179822,9.864778,-7.019548],[-7.458977,5.690470,-7.876611,-5.625694],[7.796741,-7.656198,-9.640730,-3.433903],[-7.626316,-5.197152,-8.142473,0.205647],[5.824399,-2.630644,-1.869188,-8.488761],[3.510597,9.356280,-9.850694,-7.972425],[5.940656,7.078765,5.863154,6.257500],[-7.838591,9.380061,3.247452,-7.851697],[-7.923310,-8.012078,7.020344,-9.799400],[-4.293962,3.017467,3.591729,-8.440273]],[[-0.890701,-9.523524,1.556292,4.585376],[3.176846,-9.222122,8.452363,6.966728],[8.352395,-9.789553,-5.653782,4.831226],[0.089677,2.136029,-4.763850,9.108571],[7.509725,3.550282,5.783274,-2.143313],[9.144045,2.965292,6.267156,5.368504],[-7.306438,-3.811792,-1.051570,8.113813],[-2.999090,-2.769616,-1.477813,9.123084],[4.315031,-8.850757,2.776071,5.781992],[8.087409,1.441532,3.656133,8.691142],[1.600908,-4.005920,2.992614,9.976428],[-7.532442,8.073057,9.912688,3.043957],[8.449895,7.649027,-3.501385,5.069723]],[[0.356008,8.702691,6.607016,6.038526],[-5.747416,-1.193536,6.411283,2.305463],[5.831838,8.800963,2.008438,2.111284],[-3.758316,8.002848,7.438429,8.555431],[8.182745,2.858876,1.618623,5.310587],[-1.186639,-3.460033,8.175132,-8.408648],[-9.213543,6.922143,-3.651407,-3.059968],[3.180098,8.982624,-9.742728,-7.305167],[8.652361,7.393705,-1.296009,-1.270410],[-7.880915,-5.218793,-3.369709,4.473040],[-7.062161,-1.193415,3.145926,-7.164383],[-6.757330,-1.460099,-1.511173,6.679930],[-0.329925,-2.512464,1.432821,-5.041390]],[[6.193398,-2.868134,6.906784,-6.485704],[-9.720422,-6.425805,8.097442,0.978181],[-1.545079,1.090793,-3.032018,5.529365],[7.323399,5.404394,-8.128151,-6.187130],[-4.113829,-1.874080,-7.773025,-3.779180],[7.354828,3.540397,8.364979,6.101277],[-7.363765,-4.163863,3.837006,2.981059],[8.150804,4.385825,-3.782193,-9.739879],[-0.911838,-8.615345,0.643409,-4.373725],[5.567056,-7.517454,-7.696933,1.860381],[-6.304283,8.524116,0.691349,-9.096294],[9.008574,-9.096602,7.634857,-9.704461],[4.229129,7.203574,4.206900,-2.827404]],[[5.279589,9.172325,-6.204364,-0.307855],[-1.834861,-6.050336,-5.782814,3.046568],[-6.812701,-6.928595,-9.355002,-4.616849],[2.251941,-1.771259,3.134517,-9.825303],[0.895630,-8.213299,-3.054900,-0.145036],[-7.547404,-5.004158,0.052721,-4.362203],[7.398416,-5.392388,3.217766,-4.085790],[-8.453108,-0.075150,0.082743,-4.135591],[-2.173300,-9.182192,5.532847,-2.492936],[2.923969,-1.646410,-4.555953,-2.479642],[1.473646,3.677693,4.809680,-6.361376],[-1.565698,0.880102,2.451552,5.348086],[-8.004420,-8.142771,-8.226744,1.905233]],[[2.859956,7.835993,-4.917355,8.121068],[-6.334264,4.442893,-4.518672,3.638149],[-0.790989,-6.590282,-6.637882,5.606196],[8.856582,-7.741474,-9.368106,6.273521],[3.851728,0.095039,5.694176,-2.328535],[6.870841,8.361148,0.196365,7.448035],[-0.110701,4.611285,1.021505,0.298380],[-8.571096,-7.152272,-3.632949,-6.532170],[-6.408319,3.530847,-3.971383,3.391912],[5.769110,-8.117153,0.180915,-3.193004],[4.359414,-6.815513,0.400862,-1.435699],[4.794278,-3.466091,-2.439276,-3.032675],[1.525905,-9.408845,6.280796,8.966615]],[[5.482496,5.573765,1.839819,-9.932052],[6.027685,9.573301,-7.336478,-9.844205],[3.625007,0.947679,3.991341,-0.737853],[-5.179466,-7.994950,5.490066,-5.537148],[1.658165,4.026161,-7.096409,-8.266846],[3.574216,-3.674029,0.791266,4.561222],[8.834723,-2.962501,-2.391222,4.377198],[-1.773313,-1.850929,-3.108922,-5.122912],[-4.084503,-0.895630,4.306342,-4.342756],[5.014179,-7.011024,1.081711,9.558021],[7.777863,8.309166,-0.298569,-3.671454],[3.635702,-4.529258,5.983200,8.190217],[8.416724,-6.021888,-7.291086,1.735195]],[[7.960606,-9.981983,9.691074,-8.758628],[-8.261982,7.279500,-5.341996,9.095723],[-0.467562,2.679506,-9.339316,-6.810137],[0.872556,-3.396477,4.322272,4.424082],[6.054480,-3.854440,8.364593,9.419138],[-7.200031,-2.375053,-4.154496,-8.432075],[-0.834029,0.887074,3.575097,-6.422111],[-5.505632,-7.232497,-7.684070,7.923984],[-8.604278,-8.649388,-6.594565,7.063951],[-7.787552,1.464039,4.059216,-4.800353],[-4.942457,-5.560501,5.319804,-9.337253],[4.683126,7.172973,-3.203755,3.759190],[-7.067246,-2.007162,-5.827147,-9.337611]],[[2.760672,0.101207,4.187579,-1.567848],[7.608185,0.627731,3.402129,3.161247],[5.952720,-7.427328,3.477520,-4.998260],[-4.833836,-0.829657,-0.332361,9.161393],[-8.775372,-5.650298,-1.672968,9.082032],[3.024823,-0.149984,-8.372418,0.966229],[1.416123,8.966474,7.745235,-5.679457],[-6.898765,-7.780128,0.857611,6.993896],[1.853693,-9.953166,-1.401621,1.496620],[-3.327326,2.563522,1.980364,-4.619094],[-4.355471,2.294562,3.746198,5.243437],[-7.444952,-8.339115,-9.932739,-4.433431],[9.061738,9.925287,-3.360839,5.054510]],[[4.189769,-5.411666,3.785566,5.639328],[-4.211929,-4.647516,-9.222592,-5.874615],[3.655958,4.272493,-5.669825,2.278241],[-5.574395,2.562271,-6.675558,4.472258],[6.642451,-5.369337,7.987191,3.684928],[7.872956,0.873205,1.468019,-8.464979],[8.245836,-5.956557,5.663308,6.669462],[5.334657,9.390272,-1.418655,6.227977],[-3.264303,-9.915154,0.107442,1.607098],[3.015643,-0.295774,-2.275827,-5.509219],[-9.025331,9.210058,-7.523236,4.014067],[-4.312064,7.440903,-1.109287,-2.353737],[7.027039,-0.509864,-3.119088,3.569754]],[[-8.159587,5.870733,-0.022287,-8.670648],[-2.710583,1.629979,7.339694,-8.518551],[0.748994,-0.254604,-6.608558,-4.448458],[7.810031,-7.710380,-5.579128,-7.270097],[-7.678540,-8.655491,2.847675,8.204437],[-1.548442,-1.139273,-2.941136,9.336602],[3.488985,1.492319,2.757876,6.020698],[-0.942865,-1.546628,3.520205,0.157880],[-6.614397,-1.338341,8.615009,-1.389285],[-1.540950,9.418729,6.548215,-4.326178],[-6.382503,1.868218,7.506229,-2.809338],[-2.966394,8.255444,6.215127,4.905425],[-0.775954,5.771666,-0.079474,9.137397]],[[0.892744,4.019723,-7.374821,5.194281],[6.391642,-9.925696,5.659308,-9.860076],[1.118731,3.144782,-1.935722,9.379681],[-5.081289,-8.655994,-2.058462,-8.002758],[-7.313259,-5.701471,9.933262,4.182029],[-8.210407,-4.934673,5.847097,-2.152845],[-6.918396,1.639355,-2.488061,7.966330],[-6.085749,2.094780,6.155933,-3.551132],[1.455119,-7.837957,-9.136665,9.481891],[3.119344,-4.099799,-4.075737,-8.928385],[-3.469534,-1.127748,-9.701087,1.984537],[6.642450,6.762459,-1.794564,7.792901],[-9.225321,4.380187,1.485312,-4.270096]]], dtype = "float64")#candidate|4582|(14, 13, 4)|const|float64
bop_4583 = relay.floor_mod(call_4540.astype('float64'), relay.reshape(const_4582.astype('float64'), relay.shape_of(call_4540))) # shape=(14, 13, 4)
bop_4586 = relay.floor_mod(call_4541.astype('float64'), relay.reshape(const_4582.astype('float64'), relay.shape_of(call_4541))) # shape=(14, 13, 4)
output = relay.Tuple([bop_4583,])
output2 = relay.Tuple([bop_4586,])
func_4591 = relay.Function([], output)
mod['func_4591'] = func_4591
mod = relay.transform.InferType()(mod)
mutated_mod['func_4591'] = func_4591
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4591_call = mutated_mod.get_global_var('func_4591')
call_4592 = func_4591_call()
output = call_4592
func_4593 = relay.Function([], output)
mutated_mod['func_4593'] = func_4593
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4613 = relay.var("var_4613", dtype = "float64", shape = (11, 12, 8))#candidate|4613|(11, 12, 8)|var|float64
var_4614 = relay.var("var_4614", dtype = "float64", shape = (11, 12, 8))#candidate|4614|(11, 12, 8)|var|float64
bop_4615 = relay.mod(var_4613.astype('float64'), relay.reshape(var_4614.astype('float64'), relay.shape_of(var_4613))) # shape=(11, 12, 8)
output = bop_4615
output2 = bop_4615
func_4618 = relay.Function([var_4613,var_4614,], output)
mod['func_4618'] = func_4618
mod = relay.transform.InferType()(mod)
var_4619 = relay.var("var_4619", dtype = "float64", shape = (11, 12, 8))#candidate|4619|(11, 12, 8)|var|float64
var_4620 = relay.var("var_4620", dtype = "float64", shape = (11, 12, 8))#candidate|4620|(11, 12, 8)|var|float64
output = func_4618(var_4619,var_4620,)
func_4621 = relay.Function([var_4619,var_4620,], output)
mutated_mod['func_4621'] = func_4621
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4472_call = mod.get_global_var('func_4472')
func_4474_call = mutated_mod.get_global_var('func_4474')
call_4623 = func_4472_call()
call_4624 = func_4472_call()
func_296_call = mod.get_global_var('func_296')
func_298_call = mutated_mod.get_global_var('func_298')
const_4640 = relay.const([8.793310,5.037505,7.906039,-6.075088,8.129166,-3.646162,-3.354292,8.001026,4.457605,2.813237,8.799037,-2.086914,4.565936,8.212288,-1.555545,-7.208604,-2.498704,5.177249,5.958287,0.407979,6.636122,8.831190,-8.395102,4.215831,1.454651,7.545132,4.730375,-4.206619,2.543194,2.434454,8.804514,3.189270,0.130241,2.131010,-7.395766,6.981445,-6.131784,-5.942537,4.103054,-5.724237,-1.713088,-7.427517,-5.845555,6.465580,-7.025275,2.331864,-5.625676,2.916784,6.179163,2.230683,-1.950014,4.516752,6.768897,4.219404,-3.946930,0.910213,3.894902,-9.343473,6.362195,5.580277,-2.632482,1.542306,4.403400,-6.663231,4.321055,0.903274,-1.490530,0.692451,-1.122815,1.572961,-5.519346,2.727211,-0.505799,6.847785,3.873726,0.576443,-9.368113,4.477300,3.834531,-9.803130,4.208037,-2.413956,2.214111,3.185866,0.277124,-3.337830,-8.165428,8.999730,6.058443,-4.598480,-0.975578,-5.115290,-4.452971,-5.852680,8.115160,-9.548855,-1.546567,-8.650157,-7.320485,2.656727,-5.153561,-6.175909,-4.088920,6.285889,-4.157020,-4.847484,2.101403,8.607181,-0.518586,-9.704096,5.538079,-0.936887,8.894485,3.102601,1.015397,9.640149,-0.414354,-9.889263,-7.948250,-9.966408,1.071477,1.357171,6.669778,-1.915350,-4.403730,1.407026,9.967916,-4.071536,-5.423980,6.299660,-8.726338,-7.192495,-5.001934,3.953251,-4.380921,0.005453,7.157826,8.529261,-9.209377,-8.234306,-5.539772,-5.311259,-0.332365,-3.146737,-4.431979,-8.665595,2.144057,0.140924,1.684969,-8.926325,-6.369231,5.122858,-2.141035,-3.916443,-3.181029,4.624483,-9.871258,-5.939092,-5.476627,2.219927,-0.720634,-9.353265,-4.343263,8.571041,-6.060721,-0.794456,-5.626689,-8.386603,-6.692853,1.284409,-3.962541,4.419762,-6.760279,3.825451,-6.429057,7.476503,-9.889883,-4.444444,4.064529,-7.509887,7.058956,-5.854065,-3.170853,-9.199088,3.802112,4.520963,9.346539,-5.353552,-5.809534,-1.432986,-5.799363,-7.636039,9.431066,-8.818053,-4.602552,0.925085,8.053725,1.818622,-2.883548,-3.897554,5.827007,2.494467,-9.629417,-8.857908,6.869738,3.007500,-0.381921,-9.606783,4.953462,-9.496147,2.580145,3.635377,2.341748,-1.481382,7.058075,7.306230,-4.208649,4.390735,-9.144918,-1.270451,-5.644694,-0.776697,6.385467,9.977401,2.108211,-6.007020,8.559099,8.139982,7.980768,-0.815677,-5.795992,8.328472,7.631849,7.883108,1.859787,2.127317,7.550783,-1.531496,4.683537,1.683572,-7.968752,6.485755,-6.250176,-3.811143,2.963750,-6.088819,1.091397,-7.816854,-1.107834,-2.148555,1.287066,2.484129,0.759235,3.208489,2.711554,1.280985,6.006528,8.838550,4.919395,8.833227,9.640783,-6.431526,9.122428,8.381894,-4.638483,8.812392,8.010493,3.025566,0.773927,7.706437,7.514984,-9.784757,-7.092536,-9.995283,8.485186,-7.671642,9.650275,0.639493,3.277674,-5.929516,1.910970,-2.356400,1.243849,3.646883,-7.654696,3.587776,-8.662499,-8.402950,-8.815636,-0.371540,-7.367176,-9.513513,-8.050828,8.409222,-0.140001,9.854396,9.061462,-2.634252,9.952575,0.538395,3.181020,-7.293583,-2.143262,-3.754793,0.951897,5.413167,6.406478,-3.901742,9.224839,0.646780,9.821423,8.968257,-0.484557,9.506075,-5.296965,-5.438698,-3.816430,3.071362,9.549136,3.584419,-1.537336,7.960395,-4.294565,8.591425,3.529787,2.624109,-2.337257,4.304129,-9.676782,-1.393221,-7.572054,-3.317047,3.412079,8.450851,6.716644,-3.758552,2.822667,2.477233,7.496942,-0.691004,-3.348883,1.769699,-2.571015,0.519746,-6.761725,4.428513,-5.310879,1.947000,8.646194,8.739725,1.576396,4.600092,6.383121,-4.270596,8.649249,2.331815,-8.852434,-6.807757,9.391601,3.797785,-0.789781,-5.503960,5.051206,-6.196323,3.032504,4.772741,0.160564,9.782318,-5.510141,6.020742,-0.241067,4.476472,-3.982559,-1.764866,5.851067,4.785347,-1.786712,1.500742,2.612543,3.902234,5.102407,3.049574,3.559495,8.977953,-4.738565,0.620630,2.381547,7.468623,5.342142,4.575067,9.731049,-7.660746,9.853748,6.054022,4.840525,2.624990,-0.916299,-1.758613,3.064028,1.244260,-0.445703,4.932541,2.176084,3.497264,-8.877041,2.881576,3.536818,5.021847,5.077710,9.995031,9.658433,5.340754,3.149891,4.643640,1.279613,-2.994718,-4.235401,1.271000,-0.512147,-9.221053,-6.329845,5.061411,8.564962,-6.067459,7.739016,6.509857,-0.214896,-2.509241,-0.295643,-7.917653,-6.067773,-5.340750,-5.764760,-6.547857,-9.985697,3.408860,8.641851,6.858525,-9.211946,1.110677,6.237710,-7.138302,-0.487586,-6.982642,8.756007,-7.702061,6.904333,-3.045895,7.933375,4.238957,6.216721,-3.192392,6.464498,2.911345,1.911968,3.070611,5.050191,-1.080786,0.520604,1.844915,3.630715,-1.593663,-9.172602,4.068103,-6.488300,3.748194,2.917057,-3.647378,6.673598,-6.444566,-8.568206,-7.152984,-4.416444,0.860906,4.952786,-7.168188,8.980501,5.275961,5.579876,5.376372,3.240396,4.898467,-3.945170,0.979416,2.778486,-1.038982,-2.966471,3.233380,9.008090,-9.073098,2.799201,5.554680,8.684941,-7.160089,6.393192,-0.087503,1.220399,-9.934027,8.386608,7.346639,6.380700,6.624021,-1.256698,-9.738590,9.422109,-8.696516,6.758143,8.865483,4.799746,9.775614,3.794623,5.952445,7.920683,-1.880787,-5.087187,2.203979,5.644260,1.707434,-8.160242,0.747285,-9.291523,-7.779044,-7.813469,-4.451201,-0.008970,-9.234989,-3.110313,-5.654359,6.505768,-1.252550,-7.991248,-3.826716,-6.543592,-4.938157,4.961096,0.048472,7.388904,-7.084552,4.820999,4.903343,-2.219435,-2.097593,-3.332346,6.477145,4.975243,7.742393,6.649810,-3.351431,4.514612,-3.346795,-0.111862,-5.323855,-7.447004,3.367472,2.776498,0.618045,7.802193,-3.024354,-8.155289,3.334222,-7.776451,8.707160,-1.821277,8.769308,-1.785768,0.104332,9.385872,3.012550,-1.123691,-2.320294,7.467359,2.130803,5.247292,-1.633437,8.116215,5.264313,-2.082464,-3.610358,-6.342806,-9.560168,3.968992,-9.937709,1.051483,-0.221729,-3.814605,-4.521956,-0.869145,-4.963423,7.174651,2.970668,9.374142,-9.123382,-6.501010,-2.394692,2.955206,0.874170,-8.844237,0.067028,5.593187,0.511353,-6.545605,-2.697746,-6.721644,-4.816466,1.237037,-4.759814,2.286910,2.292617,2.396535,-2.197494,-2.322888,-4.083455,6.138981,9.569245,5.557716,7.402398,-8.859208,6.309416,-8.310250,-1.644476,8.387857,-0.675225,-1.926887,-1.294283,-5.462050,-0.817552,2.042160,7.233079,-2.027429,7.278254,-0.247691,-1.384483,-6.222307,8.775553,0.295505,5.991678,-2.980328,8.695298,3.697003,9.650662,7.827678,-0.756870,-0.814737,6.694720,-6.925125,-5.143185,5.015668,2.312395,-5.952930,3.041994,1.330130,4.226392,-7.037599,-8.544937,-8.101710,4.863529,4.339827,-0.631446,-8.676165,-6.567481,6.263805,5.931292,6.703041,-5.612882,6.901778,-4.296402,-1.771856,-0.273519,-6.015133,-0.574413,-5.478538,-8.306922,-0.929625,3.902968,4.316864,4.530184,8.984707,9.101292,-5.567747,-7.525215,0.684995,-7.285022,-6.588759,3.361589,3.660487,-9.887761,0.794182,5.908829,2.826392,-9.453022,-0.956131,2.603034,-9.656482,9.342982,4.159982,-1.583845,-4.070265,-7.759490,-7.813337,5.163033,-0.570906,9.142028,1.095017,2.913007,-7.400088,9.446822,5.943503,-5.919800,9.802650,-7.271842,6.313915,-9.231385,5.586161,7.534040,-2.664059,7.816776,-9.682598,-9.725763,6.705991,-2.864327,-6.606542,7.594992,0.185155,7.445188,7.378784,6.215888,7.970830,-7.765011,-9.280780,-2.674711,-0.015708,2.542535,-2.114736,-0.330445,0.059745,5.888162,-4.488303,-5.389007,-8.206972,8.015422,2.056736,0.504759,-3.138749,-9.566273,4.777705,6.895617,-4.192122,-8.650918,-3.957192,7.843003,1.427402,3.893594,3.504626,3.036982,-0.833648,1.454589,0.877394,-3.124030,-6.540027,9.042200,4.137787,6.353983,8.883311,-0.344763,3.356946,-9.081847,3.953814,-7.827992,2.372307,-3.727814,-9.958104,3.405724,-1.710925,1.082482,-1.865023,-1.454222,5.659927,-2.997437,9.799476,5.695687,-5.210729,-8.316475,5.910544,-8.581550,-8.515343,-6.742607,-0.833538,0.779496,8.702408,9.823991,3.051296,6.523286,4.375451,3.510171,0.582937,6.461804,-5.201565,0.108493,7.894604,-4.744620,-8.173123,-5.522794,4.757499,-3.532936,6.766946,-2.231709,2.323725,6.781475,2.584354,-6.706146,5.827604,-4.939496,2.300294,-0.909600,1.361719,-7.951968,5.276113,-6.610499,-7.660879,-2.816365,-4.982385,-3.075730,-0.149062,7.622133,4.445572,-6.585841,9.910442,-4.115984,-5.435231,1.086373,-5.415530,-1.820801,9.450047,-2.801837,8.686090,8.724032,0.705499,8.841654,8.434903,-7.245619,-0.599306,-9.937087,9.988089,-6.702390,2.308309,-4.726862,-8.442704,5.681750,0.963717,4.254127,-3.420725,0.699438,9.083016,-6.906374,6.040273,7.081166,3.404363,6.430582,-7.700063,5.744170,-5.577847,4.202038,-7.562930,-6.651690,-0.799453,-3.059459,-8.949490,6.972096,-7.369991,-0.176368,-7.653076,-0.759093,4.353319,-7.731732,5.816958,1.256020,0.973697,-2.199890,-2.629800,-1.627737,1.700691,0.914521,-7.707707,9.472234,-7.040781,-8.529555,0.772943,1.095375,-1.534404,-5.649825,7.471168,9.459317,5.412256,-9.438351,-4.299425,-2.821468,3.682299,1.887201,-4.005785,-2.736888,4.869675,0.933622,9.262216,0.184119,5.384918,-8.856642,-1.943790,3.750632,5.755406,8.709491,-0.663990,7.275133,2.150326,8.298398,7.377514,9.158802,-3.058107,0.024564,6.416156,-8.606064,7.422978,9.223003,-3.949255,2.840181,-5.612780,-2.737276,-0.469515,-4.749252,-4.416785,-6.399678,6.778717,-5.331817,-8.960407,-2.590218,8.211029,-9.723585,0.923045,-2.757488,1.905281,3.741172,-4.809979,-6.861297,-4.373483,-2.126299,9.666338,-8.311749,-9.271006,-6.668834,8.002402,-6.058712,0.884546,5.945982,-2.310696,0.084572,0.789984,5.515420,-9.597849,-6.477258,-2.726146,0.299029,1.703344,1.181677,7.290673,7.961057,-9.912175,4.425952,-1.440195,-9.830025,-1.214482,-1.650270,-2.782268,1.985603,-9.681399,6.964214,-9.648596,-3.534106,7.215555,-6.765176,3.662715,7.371325,5.350416,-9.734153,6.902789,6.494837,-4.855798,4.066240,3.655991,5.437528,-5.536389,9.360065,4.002245,2.642431,1.297866,1.540489,0.297820,-0.073689,9.696537,-3.555439,6.790948,-0.425325,-1.166288,-3.249642,-5.225351,5.780724,4.215986,-0.851369,-5.698493,0.268972,3.062616,-2.649815,5.283475,6.168873,9.401448,8.415584,7.833639,-2.027024,9.039743,-5.914562,-7.285433,-9.760472,-1.912443,3.564642,-4.681238,-8.209921,0.685545,-5.527158,6.250409,-0.854411,-1.819407,8.733537,2.170489,8.639559,-9.640049,2.235959,0.023138,-7.792245,-4.749294,-7.908647,-5.195136,-8.788775,5.719904,-4.178682,-6.231189,-7.938583,-4.135648,8.112305,6.930082,-6.599980,-2.716086,7.736609,-0.045932,7.844151,5.129131,2.723575,-8.554727,2.059028,3.289831,-0.119168,-6.767057,-8.216965,-0.764857,1.173672,-7.222401,5.648605,8.020371,-0.235485,4.276575,-9.253133,7.123750,-5.788881,3.909803,9.336716,-7.600482,-0.969268,-1.129785,8.213733,-4.451163,3.554939,9.995071,3.187861], dtype = "float32")#candidate|4640|(1080,)|const|float32
call_4639 = relay.TupleGetItem(func_296_call(relay.reshape(const_4640.astype('float32'), [9, 12, 10])), 4)
call_4641 = relay.TupleGetItem(func_298_call(relay.reshape(const_4640.astype('float32'), [9, 12, 10])), 4)
func_2356_call = mod.get_global_var('func_2356')
func_2360_call = mutated_mod.get_global_var('func_2360')
const_4662 = relay.const([9.268803,-8.296744,1.474307,-4.311692,-2.934230,7.681141,8.161855,3.945965,-7.724751,8.856065,-5.048439,-2.934794,6.066969,-1.481357,-7.019134,-4.077759,8.069485,-2.220007,4.622194,9.454923,1.654119,-3.109123,8.045579,-7.437565,3.443864,-7.773518,-6.644872,-9.306363,-6.452580,-5.346764,-7.536717,-7.287010,3.346956,-5.974916,-9.062443,-0.013412,-5.762773,-4.255534,-7.120897,0.847001,-9.194543,-8.015519,-6.379586,-8.820343,4.068049,9.460072,6.227321,8.411316,4.428562,1.100289,5.258391,7.317373,8.029595,-1.334008,-0.643572,8.718640,1.914186,2.946926,-8.491810,-2.497183,-6.814789,-0.213425,-2.336097,-7.695260,6.152565,0.901644,8.118517,5.893533,-9.740173,9.549885,7.279404,1.214282,-2.644105,6.962590,-8.320413,-9.401015,8.133952,9.930950,-8.304098,3.616359,2.406659,3.645208,3.438555,2.016673,-9.647158,7.221952,4.494515,-0.498260,0.268842,3.794219,5.408891,7.421129,-8.304442,-4.254808,-1.567402,-7.955959], dtype = "float32")#candidate|4662|(96,)|const|float32
var_4663 = relay.var("var_4663", dtype = "int64", shape = (3360,))#candidate|4663|(3360,)|var|int64
call_4661 = relay.TupleGetItem(func_2356_call(relay.reshape(const_4662.astype('float32'), [3, 2, 16]), relay.reshape(var_4663.astype('int64'), [3360,]), ), 2)
call_4664 = relay.TupleGetItem(func_2360_call(relay.reshape(const_4662.astype('float32'), [3, 2, 16]), relay.reshape(var_4663.astype('int64'), [3360,]), ), 2)
output = relay.Tuple([call_4623,call_4639,const_4640,call_4661,const_4662,var_4663,])
output2 = relay.Tuple([call_4624,call_4641,const_4640,call_4664,const_4662,var_4663,])
func_4681 = relay.Function([var_4663,], output)
mod['func_4681'] = func_4681
mod = relay.transform.InferType()(mod)
mutated_mod['func_4681'] = func_4681
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4682 = relay.var("var_4682", dtype = "int64", shape = (3360,))#candidate|4682|(3360,)|var|int64
func_4681_call = mutated_mod.get_global_var('func_4681')
call_4683 = func_4681_call(var_4682)
output = call_4683
func_4684 = relay.Function([var_4682], output)
mutated_mod['func_4684'] = func_4684
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4323_call = mod.get_global_var('func_4323')
func_4325_call = mutated_mod.get_global_var('func_4325')
call_4715 = func_4323_call()
call_4716 = func_4323_call()
output = relay.Tuple([call_4715,])
output2 = relay.Tuple([call_4716,])
func_4739 = relay.Function([], output)
mod['func_4739'] = func_4739
mod = relay.transform.InferType()(mod)
mutated_mod['func_4739'] = func_4739
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4739_call = mutated_mod.get_global_var('func_4739')
call_4740 = func_4739_call()
output = call_4740
func_4741 = relay.Function([], output)
mutated_mod['func_4741'] = func_4741
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4404_call = mod.get_global_var('func_4404')
func_4406_call = mutated_mod.get_global_var('func_4406')
call_4813 = func_4404_call()
call_4814 = func_4404_call()
func_4458_call = mod.get_global_var('func_4458')
func_4459_call = mutated_mod.get_global_var('func_4459')
call_4819 = relay.TupleGetItem(func_4458_call(), 0)
call_4820 = relay.TupleGetItem(func_4459_call(), 0)
output = relay.Tuple([call_4813,call_4819,])
output2 = relay.Tuple([call_4814,call_4820,])
func_4822 = relay.Function([], output)
mod['func_4822'] = func_4822
mod = relay.transform.InferType()(mod)
mutated_mod['func_4822'] = func_4822
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4822_call = mutated_mod.get_global_var('func_4822')
call_4823 = func_4822_call()
output = call_4823
func_4824 = relay.Function([], output)
mutated_mod['func_4824'] = func_4824
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4404_call = mod.get_global_var('func_4404')
func_4406_call = mutated_mod.get_global_var('func_4406')
call_4830 = func_4404_call()
call_4831 = func_4404_call()
output = relay.Tuple([call_4830,])
output2 = relay.Tuple([call_4831,])
func_4835 = relay.Function([], output)
mod['func_4835'] = func_4835
mod = relay.transform.InferType()(mod)
mutated_mod['func_4835'] = func_4835
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4835_call = mutated_mod.get_global_var('func_4835')
call_4836 = func_4835_call()
output = call_4836
func_4837 = relay.Function([], output)
mutated_mod['func_4837'] = func_4837
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4111_call = mod.get_global_var('func_4111')
func_4113_call = mutated_mod.get_global_var('func_4113')
call_4844 = func_4111_call()
call_4845 = func_4111_call()
func_4618_call = mod.get_global_var('func_4618')
func_4621_call = mutated_mod.get_global_var('func_4621')
var_4862 = relay.var("var_4862", dtype = "float64", shape = (1056,))#candidate|4862|(1056,)|var|float64
call_4861 = func_4618_call(relay.reshape(var_4862.astype('float64'), [11, 12, 8]), relay.reshape(var_4862.astype('float64'), [11, 12, 8]), )
call_4863 = func_4618_call(relay.reshape(var_4862.astype('float64'), [11, 12, 8]), relay.reshape(var_4862.astype('float64'), [11, 12, 8]), )
func_4618_call = mod.get_global_var('func_4618')
func_4621_call = mutated_mod.get_global_var('func_4621')
call_4888 = func_4618_call(relay.reshape(call_4861.astype('float64'), [11, 12, 8]), relay.reshape(call_4861.astype('float64'), [11, 12, 8]), )
call_4889 = func_4618_call(relay.reshape(call_4861.astype('float64'), [11, 12, 8]), relay.reshape(call_4861.astype('float64'), [11, 12, 8]), )
func_4822_call = mod.get_global_var('func_4822')
func_4824_call = mutated_mod.get_global_var('func_4824')
call_4891 = relay.TupleGetItem(func_4822_call(), 0)
call_4892 = relay.TupleGetItem(func_4824_call(), 0)
output = relay.Tuple([call_4844,call_4861,var_4862,call_4888,call_4891,])
output2 = relay.Tuple([call_4845,call_4863,var_4862,call_4889,call_4892,])
func_4900 = relay.Function([var_4862,], output)
mod['func_4900'] = func_4900
mod = relay.transform.InferType()(mod)
mutated_mod['func_4900'] = func_4900
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4901 = relay.var("var_4901", dtype = "float64", shape = (1056,))#candidate|4901|(1056,)|var|float64
func_4900_call = mutated_mod.get_global_var('func_4900')
call_4902 = func_4900_call(var_4901)
output = call_4902
func_4903 = relay.Function([var_4901], output)
mutated_mod['func_4903'] = func_4903
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4591_call = mod.get_global_var('func_4591')
func_4593_call = mutated_mod.get_global_var('func_4593')
call_4947 = relay.TupleGetItem(func_4591_call(), 0)
call_4948 = relay.TupleGetItem(func_4593_call(), 0)
func_844_call = mod.get_global_var('func_844')
func_848_call = mutated_mod.get_global_var('func_848')
const_4974 = relay.const([-5.256095,-4.522468,1.973207,2.843293,4.957341,-8.118806,0.728528,2.439484,-1.930487,-8.301404,-2.902991,-8.085266,9.660444,-2.424794,1.959742,2.610286,-2.056806,3.958501,-3.206462,-6.035027,1.985260,9.925348,0.501310,1.660133,4.919302,6.396536,7.262552,5.889401,2.121302,-5.525117,-5.975229,-9.585659,5.287385,-9.442116,-6.767907,3.798320,9.454464,-8.064601,1.211654,9.299028,-8.085393,-7.319012,-4.328921,-5.161420,8.340107,-1.829100,-4.578966,-6.804263,7.459097,4.121438,-7.177204,9.428069,5.112129,-7.782593,2.299238,-2.040154,-5.069673,5.029999,-6.251641,-9.825614,-7.025777,4.300305,9.483734,-0.731670,2.591022,-6.050548,-4.001725,0.941908,-1.887338,-1.530052,6.409173,2.172284,3.490182,-2.642559,-5.267688,0.765089,-1.283440,-3.548000,9.602384,-1.901203,-7.027704,-0.073896,-0.415652,1.856767,4.950831,-1.077471,-4.368344,2.241571,-5.564760,4.809579,-5.953082,-0.346307,3.888769,3.499496,4.604526,6.602994,-9.718183,8.956920,-9.478833,1.556528,-6.224947,-1.427577,5.179240,8.201142,-9.453156,5.888788,2.669176,1.586846,-7.892695,0.891408,-7.450613,0.302318,-5.766761,4.384314,0.631672,8.762790,-2.135347,-1.021669,4.004859,9.510450,-7.512399,-3.438616,-0.779414,6.559614,-5.684579,4.522844,4.128698,-0.287677,0.592038,-4.881154,-6.576384,-3.247010,-2.241724,7.059228,-4.695911,1.063667,2.384365,9.395518,8.273216,-3.871347,7.873232,-4.151535,-4.096385,9.332660,-3.764142,4.081193,5.742260,0.048450,-0.805055,0.939516,6.940298,-4.670683,-7.610733,8.610124,-2.974801,-8.916065,8.643749,-9.093305,8.048845,9.778096,-7.714233,-9.942150,-7.457498,4.539775,-8.365228,-7.064540,7.718183,-0.163390,-0.145014,0.104913,5.017253,-8.180748,-8.853638,9.717952,-6.564118,1.327407,1.798735,-3.506887,9.665868,-6.796461,-2.618696,7.608151,0.383200,-9.724336,7.901275,-0.464982,3.283276,1.746178,-7.177076,8.717385,2.435181,9.799901,-3.370467,9.462892,2.388532,-8.775576,-4.127226,9.517918,9.420180,5.644450,1.593038,-2.123363,-6.706245,-3.630366,-6.810997,-6.039180,-5.519848,-3.363529,9.399511,-0.596298,1.615800,7.191837,-6.427940,-5.660674,-2.726358,5.778779,2.698621,-6.430322,0.030015,-3.907910,-1.783097,-5.178883,-7.952747,0.168094,-2.560447,-4.300368,-5.119983,0.788133,-8.431150,2.486149,7.635681,-9.284019,-1.795903,-9.754807,1.442487,7.743294,3.179699,-2.082370,-4.983275,-9.579310,1.232739,-1.569895,-6.774667,4.821085,1.113494,5.712830,4.937378,-6.065444,-3.444127,5.865333,2.951973,9.713937,-8.123220,5.457715,6.037871,8.900849,-6.637292,8.723292,5.700108,-3.419690,1.502194,8.074930,2.361915,-6.500871,8.287870,-6.563245,-9.547900,9.179280,8.778074,6.598380,-3.071954,-5.427935,-6.830412,7.372151,-3.209580,7.533817,5.646269,-4.973412,-4.077985,-9.197154,-4.239378,-7.557939,-9.981660,-6.853775,-0.164103,5.269174,-9.938408,-6.455938,8.186660,7.097372,0.824000,1.012393,2.173988,8.030784,-6.060301,1.697825,-9.705711,0.871833,-3.439084,3.242183,3.088330,6.032622,-1.685281,-4.061672,-9.501242,6.632921,-8.940024,-0.076102,-5.368327,4.192981,-6.721576,1.213555,7.389881,5.514227,-4.162187], dtype = "float64")#candidate|4974|(315,)|const|float64
var_4975 = relay.var("var_4975", dtype = "float32", shape = (180,))#candidate|4975|(180,)|var|float32
call_4973 = relay.TupleGetItem(func_844_call(relay.reshape(const_4974.astype('float64'), [15, 7, 3]), relay.reshape(var_4975.astype('float32'), [1, 180]), ), 3)
call_4976 = relay.TupleGetItem(func_848_call(relay.reshape(const_4974.astype('float64'), [15, 7, 3]), relay.reshape(var_4975.astype('float32'), [1, 180]), ), 3)
uop_5001 = relay.sqrt(call_4973.astype('float32')) # shape=(4, 260)
uop_5003 = relay.sqrt(call_4976.astype('float32')) # shape=(4, 260)
bop_5004 = relay.add(uop_5001.astype('float64'), relay.reshape(call_4973.astype('float64'), relay.shape_of(uop_5001))) # shape=(4, 260)
bop_5007 = relay.add(uop_5003.astype('float64'), relay.reshape(call_4976.astype('float64'), relay.shape_of(uop_5003))) # shape=(4, 260)
bop_5015 = relay.logical_and(bop_5004.astype('bool'), relay.reshape(uop_5001.astype('bool'), relay.shape_of(bop_5004))) # shape=(4, 260)
bop_5018 = relay.logical_and(bop_5007.astype('bool'), relay.reshape(uop_5003.astype('bool'), relay.shape_of(bop_5007))) # shape=(4, 260)
func_126_call = mod.get_global_var('func_126')
func_129_call = mutated_mod.get_global_var('func_129')
const_5024 = relay.const([3.435473,7.435477,-0.515410,-2.973814,-0.105086,2.056540,-6.375327,6.948534,6.813411,5.053504,-0.216068,6.844974,3.694823,1.827197,3.045842,-1.664466,-4.927245,2.605018,2.096961,-9.314139,-1.671121,-2.959032,8.581738,0.753397,-0.554578,9.466528,6.862514,4.489761,9.797587,2.814890], dtype = "float64")#candidate|5024|(30,)|const|float64
call_5023 = func_126_call(relay.reshape(const_5024.astype('float64'), [1, 6, 5]))
call_5025 = func_126_call(relay.reshape(const_5024.astype('float64'), [1, 6, 5]))
func_3781_call = mod.get_global_var('func_3781')
func_3784_call = mutated_mod.get_global_var('func_3784')
var_5051 = relay.var("var_5051", dtype = "int8", shape = (990,))#candidate|5051|(990,)|var|int8
call_5050 = func_3781_call(relay.reshape(var_5051.astype('int8'), [15, 11, 6]), relay.reshape(var_5051.astype('int8'), [15, 11, 6]), )
call_5052 = func_3781_call(relay.reshape(var_5051.astype('int8'), [15, 11, 6]), relay.reshape(var_5051.astype('int8'), [15, 11, 6]), )
bop_5056 = relay.maximum(bop_5015.astype('int8'), relay.reshape(bop_5004.astype('int8'), relay.shape_of(bop_5015))) # shape=(4, 260)
bop_5059 = relay.maximum(bop_5018.astype('int8'), relay.reshape(bop_5007.astype('int8'), relay.shape_of(bop_5018))) # shape=(4, 260)
output = relay.Tuple([call_4947,const_4974,var_4975,call_5023,const_5024,call_5050,var_5051,bop_5056,])
output2 = relay.Tuple([call_4948,const_4974,var_4975,call_5025,const_5024,call_5052,var_5051,bop_5059,])
func_5070 = relay.Function([var_4975,var_5051,], output)
mod['func_5070'] = func_5070
mod = relay.transform.InferType()(mod)
mutated_mod['func_5070'] = func_5070
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5070_call = mutated_mod.get_global_var('func_5070')
var_5072 = relay.var("var_5072", dtype = "float32", shape = (180,))#candidate|5072|(180,)|var|float32
var_5073 = relay.var("var_5073", dtype = "int8", shape = (990,))#candidate|5073|(990,)|var|int8
call_5071 = func_5070_call(var_5072,var_5073,)
output = call_5071
func_5074 = relay.Function([var_5072,var_5073,], output)
mutated_mod['func_5074'] = func_5074
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5090 = relay.const([[[3,-5,-6,-6,10,-4,-9,-5,9,6,-10,-4,-7,9,-8],[-3,6,5,-7,-5,-9,7,5,-6,-3,6,-5,8,-5,-9],[7,8,-2,-3,4,-3,7,10,-4,-8,-1,10,7,9,-5],[9,-2,5,-9,-10,-8,-3,7,-1,-2,-7,5,8,-5,8],[-9,4,-1,5,9,3,10,-4,-1,-7,-6,-7,-10,-5,-4],[-7,-7,4,9,-9,7,-8,10,-4,-1,-6,-5,-7,8,2]],[[-2,-4,-1,10,10,-10,1,-3,-4,-4,10,-1,2,2,10],[3,4,-3,-8,6,-2,4,-6,6,6,6,-7,2,5,-1],[-7,-6,-10,7,2,5,-10,7,5,-8,3,-6,-9,10,-2],[6,3,-2,1,-4,-1,-4,7,-6,7,3,6,-10,8,8],[3,9,7,3,-1,10,-4,-2,10,-3,-10,6,-6,2,8],[-3,-7,7,6,-2,4,8,10,9,5,-6,-8,2,9,-7]]], dtype = "int8")#candidate|5090|(2, 6, 15)|const|int8
var_5091 = relay.var("var_5091", dtype = "int8", shape = (2, 6, 15))#candidate|5091|(2, 6, 15)|var|int8
bop_5092 = relay.bitwise_and(const_5090.astype('int8'), relay.reshape(var_5091.astype('int8'), relay.shape_of(const_5090))) # shape=(2, 6, 15)
output = bop_5092
output2 = bop_5092
func_5101 = relay.Function([var_5091,], output)
mod['func_5101'] = func_5101
mod = relay.transform.InferType()(mod)
var_5102 = relay.var("var_5102", dtype = "int8", shape = (2, 6, 15))#candidate|5102|(2, 6, 15)|var|int8
output = func_5101(var_5102)
func_5103 = relay.Function([var_5102], output)
mutated_mod['func_5103'] = func_5103
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4472_call = mod.get_global_var('func_4472')
func_4474_call = mutated_mod.get_global_var('func_4474')
call_5113 = func_4472_call()
call_5114 = func_4472_call()
func_4404_call = mod.get_global_var('func_4404')
func_4406_call = mutated_mod.get_global_var('func_4406')
call_5143 = func_4404_call()
call_5144 = func_4404_call()
func_2732_call = mod.get_global_var('func_2732')
func_2736_call = mutated_mod.get_global_var('func_2736')
var_5163 = relay.var("var_5163", dtype = "float64", shape = (117,))#candidate|5163|(117,)|var|float64
const_5164 = relay.const([-1.747419,0.256823,2.861337,-3.219803,5.334361,6.652889,-1.749458,7.610214,8.146435,-5.871358,-0.056515,6.798479,-3.840600,9.689604,-6.253557,8.698756,0.328942,5.367974,2.197450,-8.581662,-0.322750,2.994124,-9.763634,0.205056,9.292042,7.565019,6.729954,-5.951956,-0.856507,-7.014663,-4.539960,9.198186,-2.413570,-4.706667,-8.036568,2.617336,6.081495,-4.992246,1.806807,7.013669,9.561514,-9.055162,5.352421,-0.196661,0.649560,-1.734855,-2.597743,9.370089,-9.923885,2.340589,-0.032178,4.816700,7.676434,6.659627,-6.899880,1.039738,5.586746,-0.598235,-4.576634,-9.053248,3.645622,-2.879139,-8.654739,9.636204,8.133569,-9.318501,7.150230,3.131275,8.019640,6.146644,4.936382,4.815014,4.863119,0.275779,-8.061243,0.772132,-5.021381,8.530375,4.169673,-8.770423,0.870793,-1.867229,-2.872633,6.515659,-2.026972,9.933465,7.749851,-8.656363,3.205338,4.177674,-1.760406,1.731478,-6.401761,7.923906,8.597966,-2.881927,-3.054482,7.765347,3.317518,-4.852287,-4.874165,2.988048,-7.991495,-9.168457,-4.733397,7.101744,-6.140462,3.505832,-2.886174,-5.018502,-1.374997,-4.065090,7.546417,-2.287683,2.155498,-4.877254,-5.900867,9.172846,0.531527,-8.678560,2.934791,-7.030043,8.477674,-5.587616,0.167231,8.712264,-4.219743,-4.601032,-9.622713,-8.302882,-3.498389,6.330481,-9.928265,4.650895,-4.352402,3.970576,-3.819297,8.782331,-5.443110,6.985519,-4.904347,4.497797,-7.039004,-2.856207,-3.157470,-6.680859,8.741682,-7.058767,2.161202,8.691652,9.909391,4.309260,1.307251,4.724816,6.931034,1.748818,-1.427370,-2.082168,-3.615587,0.972764,9.145109,1.072248,1.691486,-7.919244,-1.043573,-1.850554,7.462586,6.215372,-5.882115,-5.636298,9.533689,1.158698,-2.395334,-7.241757,-7.458352,-3.693331,-1.161369,-2.441456,0.954048,-3.961474,-3.981121,5.241434,-2.793375,-3.155893,-4.140578,-6.327660,-6.876152,1.146417,9.605839,-2.037808,4.295251,8.697998,-2.707414,1.669530,3.532205,3.479915,-4.011065,3.022696,6.911103,7.572484,-2.048038,5.282918,0.934851,9.008706,4.462986,-7.298910,-8.280940,-4.351190,3.429498,-3.408991,0.901286,-0.811655,5.697757,-7.688833,-2.547680,-4.632719,-8.557903,4.260920,-9.140826,-8.719109,-7.380210,-2.762957,9.883766,-3.992252,-9.362348,7.355155,-4.553334,4.292992,9.505680,7.548115,8.750110,-3.419875,4.610175,0.239257,-6.238427,5.550199,-1.290249,-1.821511,-7.319234,-8.927197,5.117137,-2.738155,2.695668,7.842374,-3.549880,-9.098710,-6.561556,6.160253,9.911831,4.761975,-5.106806,-4.607405,-3.990461,-1.115644,8.426458,5.442519,-8.846733,7.662249,2.720887,-7.749921,4.799647,8.566519,3.924622,6.972813,5.516101,7.326937,-8.042572,-5.909761,-4.357623,9.407682,1.258795,-9.268231,4.326121,-8.230325,5.251599,-0.634637,5.619193,-5.642284,-5.801782,1.516949,7.305288,8.195093,1.036596,-8.847866,7.880448,2.414297,8.850896,-9.885232,2.501991,1.548026,-8.676152,6.195230,-5.633813,-3.941617,-5.953106,-0.345663,-4.910785,2.584890,-3.904351,8.800041,3.267987,-4.702048,0.956224,2.014805,7.021056,9.302589,-0.772787,-2.167690,-3.976458,0.812603,-9.418802,-9.945781,-2.998105,-6.340039,-6.040896,-7.292720,7.403220,-8.217973,6.771157,0.494729,-2.841341,-4.081446,-3.122815,3.660802,-0.650528,4.902066,7.266188,8.264263,1.337639,-9.550189,-4.131721,6.228103,9.016337,-3.731213,-0.443081,-8.300678,-8.491618,1.027529,1.767399,3.451380,-4.012395,-2.383385,1.937604,3.413945,-8.279835,-2.803138,-4.576580,-3.749526,0.531410,-0.772309,-0.336581,-3.553892,-8.880146,1.980470,6.456127,2.739501,5.207863,7.697237,5.223308,1.981227,-2.931008,-7.184335,-2.742209,-1.900731,1.958494,9.260688,6.751320,-7.050864,3.407258,9.767037,0.815178,-3.233132,5.349586,1.697255,-4.026034,-5.565711,-3.343244,0.083179,7.985723,-4.429015,5.287114,-2.178997,1.648122,-6.225751,5.001377,3.266352,-1.882858,6.480036,4.517292,-4.903616,-3.499562,-0.795189,-7.802217,3.487582,-7.100862,-4.428725,2.989568,-7.367659,-8.239341,5.528039,1.915543,-7.661902,6.443802,0.866283,-6.760172,-3.261093,-2.201686,5.311025,1.056565,-5.855141,-8.394916,8.910099,1.191479,-3.748760,-6.951142,7.817646,2.353682,9.500202,-3.690656,3.931426,-2.142835,3.642504,8.400592,2.767468,4.299961,-1.198585,8.831210,5.016326,4.285660,-7.553483,8.177191,0.169504,1.960633,0.834538,5.123600,-4.338783,0.968196,-9.438226,-3.966035,4.756797,9.611785,6.084497,4.610524,-9.170463,-3.607856,-9.020177,-2.870840,-3.150725,-5.824798,3.721777,9.930909,2.707394,7.585102,6.029423,-2.058895,2.750788,-5.943857,-4.137746,7.979668,-3.847873,3.311522,-1.084191,6.125874,2.820106,-1.995971,1.678611,-7.798401,-4.732876,2.656829,7.290748,-1.048616,8.487120,0.051367,-3.057929,-2.304691,-3.353029,2.003061,-7.329615,-1.177174,-0.421337,-8.662997,-3.053427,7.289335,8.394718,-1.330138,-1.686724,6.719050,4.582648,0.015231,-9.789440,-0.212124,1.505657,4.125688,-6.712435,8.710918,-9.528843,7.811741,-0.408231,-5.269125,2.507540,-5.327488,8.851164,7.929436,-6.505281,0.766685,2.196330,6.999095,0.953766,-4.038653,-5.157777,5.906488,3.310328,2.387880,4.858836,2.778656,-3.517231,-9.678834,-5.490884,-7.495674,-6.250146,1.516689,-6.085009,-1.189443,5.899502,4.618450,-8.127959,-7.770981,0.710761,9.301577,1.547785,9.327828,-1.252686,-8.297646,-3.254766,2.242537,-6.117077,-7.794721,7.680545,-4.609598,9.118068,4.775460,-6.959672,0.794365,2.381554,-7.262851,-2.689738,4.555211,4.767990,2.082755,-7.620763,-1.342839,9.070594,2.845611,3.165127,1.183941,-3.524490,-0.800203,-2.031689,-7.654640,-4.283970,6.074108,8.539153,5.352583,-2.455707,-3.978219,2.591988,4.537790,7.989041,-8.349432,-9.553855,7.848733,-9.717568,-9.905898,1.920665,-1.078634,2.080273,-6.435045,-5.038168,-8.782603,-2.111339,-1.750973,4.292500,-3.165779,-1.633852,-6.245346,-0.522413,1.397584,6.495379,-0.754293,8.108089,9.718595,-7.762663,3.065067,5.332686,2.891789,-3.645840,-6.445610,8.652369,-7.414219,0.859926,-5.533316,-1.053413,-8.009953,5.226416,-2.761378,4.519794,-6.713251,-2.285461,6.366744,8.666176,3.082135,-0.935705,8.819656,4.394912,8.928804,-1.028245,-2.482980,-8.950819,3.214997,8.864872,-9.111373,6.460289,-3.562483,-2.025716,6.596905,-7.120981,9.622806,-5.898522,-1.391735,-4.728089,-8.348532,-2.973574,7.905363,3.365626,-0.665226,-8.030632,-7.533430,5.916082,1.937443,-0.601332,3.992231,-7.116148,0.809031,-9.510907,-7.816862,6.107368,5.029379,7.819256,-8.880268,1.170941,-1.090596,6.073403,2.197783,3.865502,-2.690082,-9.333891,7.419748,-1.066551,1.692470,-0.592675,4.801474,6.467814,2.592702,8.938931,4.389965,0.110939,7.510009,-5.198267,7.984772,6.743380,0.264165,-4.622941,-8.223565,2.427488,9.214324,6.111589,-6.638222,6.189228,-6.386437,7.065173,-2.708507,6.797368,-0.581737,-3.326178,2.248501,4.721624,0.004147,2.127864,8.602669,-0.842161,1.490629,6.817534,-3.033192,8.966237,-9.754661,-5.760050,4.387863,-2.059973,-5.423869,-0.029878,-9.264041,-1.154262,0.179892,-8.143257,8.962919,8.224885,-7.013679,-8.160379,8.029439,0.966950,-4.023238,-4.604899,1.091262,9.031435,-0.975286,-1.911394,-6.306749,-0.846729,-1.530531,-7.697585,1.337972,-2.303389,-6.172672,-4.497226,0.477143,5.297714,-6.052455,5.271662,-8.612854,3.611915,-1.446102,-6.799053,-0.709159,-6.633652,1.701097,-9.842969,-4.372403,-8.846872,0.122708,8.894143,8.683565,9.461043,-1.389760,2.014032,1.695485,1.609470,-8.265634,-8.760629,9.743282,-9.363073,7.667756,3.320003,7.811653,1.909714,6.377231,7.565653,8.579261,-6.739493,-3.321940,9.766257,-1.871290,7.372891,-8.701386,3.929580,2.295510,-0.629563,7.969920,-5.751285,0.398127,6.161656,-7.387577,8.066970,0.916412,-2.231583,-3.653495,-4.726026,-5.103129,0.862414,5.494186,-3.776141,-3.557535,-4.952007,3.333695,4.393304,-4.560945,0.632724,9.070571,-1.447756,-0.423497,-4.441074,-3.833706,8.499782,0.311210,5.544087,0.473145,6.827962,-3.050734,1.054449,-0.656599,6.840621,-4.060889,-7.162168,6.987925,-4.506165,9.433530,-1.398885,3.604450,-5.502762,3.978652,-1.781099,-7.821482,-9.323433,7.093446,-0.145249,-2.124112,-9.058274,-5.883538,2.852896,6.983378,4.596880,-4.228645,8.918795,2.036890,-4.895894,1.339046,8.574935,-1.720451,8.042032,-4.299433,-9.260557,2.986994,6.640622,9.880335,1.603924,-1.764861,5.263099,8.673990,7.969269,-3.162662,6.250886,-6.351131,0.405381,-9.735309,-9.892629,-0.407947,-3.292072,9.923467,0.234548,-1.698854,0.066730,6.667955,1.438992,5.945153,0.977335,4.225951,-5.907869,-9.396662,-1.750395,-5.811810,2.177132,1.793506,-2.870649,0.114211,3.119748,-0.509601,-3.514677,2.894639,-7.140062,-7.566010,5.330745,-9.667825,8.192440,3.595187,-9.543871,-3.620563,7.452870,3.651312,-5.999671,7.944574,-3.786870,4.213500,-6.007702,-3.482612,3.019057,-0.288669,-0.680624,-8.800258,9.799573,-6.458420,2.623349,0.491566,-7.664266,-3.486163,1.071846,8.806880,-1.150308,9.769455,1.420155,6.295557,-8.841686,1.361232,5.478866,3.941436,-2.534532,-7.473067,-8.146261,-7.728287,-4.043546,-4.533699,-2.020918,2.862215,-5.751530,1.738637,-3.641864,-1.037219,1.381810,-5.419555,-9.023985,2.459031,9.260380,-8.042024,-4.159387,-8.649367,-6.361204,-6.680348,-0.383474,3.739318,-0.623134,8.422908,0.836824,-5.795669,1.623024,5.032777,-8.928276,-6.291054,-6.603197,5.801805,0.747624,0.782144,-2.496289,6.608325,8.300441,6.767673,5.937723,1.389529,9.984538,0.636143,-7.118664,-9.499893,-6.068427,-7.517635,3.555167,8.440564,9.250525,-2.444453,-2.467936,8.416877,-3.219604,-3.730577,1.392246,4.301946,5.438460,0.119463,9.509321,-9.513806,8.000989,6.437508,-5.051668,4.661216,5.396722,-4.074353,4.233541,-8.175839,-1.898017,-9.624056,-4.313508,-2.057344,-0.562737,7.851035,2.663356,4.542030,-7.312377,-3.221274,2.948756,-5.213017,0.567773,4.339907,-4.568266,0.670937,-9.074619,-9.810091,2.988443,-1.648306,4.067597,2.274332,8.571276,3.685254,3.382802,-5.370766,9.488986,-3.506337,7.543886,-1.128879,6.432966,6.070665,6.407243,-8.225861,-1.319878,-8.652366,-1.976852,8.428481,7.614287,6.880425,-0.458089,4.893060,-8.447862,-5.109670,8.370613,-9.430122,-0.895304,-1.376390,1.610816,-1.477614,0.343703,0.800917,7.060951,5.539440,0.894997,2.665943,4.827085,-7.712446,-5.483605,3.770022,2.879934,-4.273354,2.500223,8.312593,1.229272,7.342675,-3.397254,-1.728139,9.244342,-1.083820,-2.255320,-1.930116,8.391900,-7.820178,7.465616,0.098310,0.947595,1.212993,9.460983,8.163718,-4.525324,6.596575,-5.665618,-2.914335,-9.422767,-1.786767,0.193603,-1.712396,0.363276,-7.021956,-6.718179,1.154457,-2.482223,5.759335,5.614221,-1.496462,9.506218,4.735816,-7.290895,2.637721,-9.260111,2.587613,-8.840430,-6.679841,-2.210180,-0.328928,8.713944,-0.696289,-9.486622,3.802106,5.175422,-3.778583,7.750059,-8.096313,2.863044,-0.181498,9.716647,4.005190,6.200887,-0.101863,8.612538,4.059311,-0.293044,-7.067200,1.783817,6.643655,5.548839,4.587980,4.956139,-7.708528,8.248968,-7.476024,6.542888,-9.447534,-9.335113,-7.260860,1.929575,-3.885882,-2.639082,3.443702,-0.100287,-4.037820,-5.842028,-9.462546,5.214987,-0.856053,-4.114910,4.504592,7.183963,-6.517763,-6.828928,6.155530,-1.431755,-9.677168,-3.859929,-0.636284,-7.225323,-2.086954,-9.655514,-9.553547,-0.995242,-3.218318,9.890091,-5.183850,7.634889,-1.073424,9.050961,-0.236358,9.099354,-8.397703,-7.198936,-3.853695,8.685739,6.166577,-4.407531,0.161669,-6.243341,2.597970,-4.384890,-8.861181,-0.116439,4.804280,-2.414588,-0.336090,-0.558617,6.914063,1.243567,3.353748,7.262221,4.230734,-0.208053,-7.873617,-3.661017,2.507881,2.713278,4.613100,-7.539870,9.839800,-5.857246,1.314414,8.650879,1.185758,-8.846788,3.880746,7.464518,7.662227,-3.790021,-9.049366,8.323672,4.475925,-8.159248,2.430540,7.268682,4.049744,-3.596915,0.944768,-6.556740,-8.153932,1.524511,-4.203721,-3.048632,7.716425,2.759295,-6.793814,8.650707,6.511380,-3.432789,-6.243222,9.289418,4.483242,-2.219109,9.453936,7.454609,-0.201992,-4.027538,2.473926,-3.132655,2.452936,-4.436256,6.230104,7.155359,1.221978,4.952119,0.373458,-4.451623,-0.179821,8.953689,6.308624,8.962890,-6.805691,-4.815262,4.779906,-5.204349,-8.886128,-9.324154,-6.179462,-1.192769,4.113523,2.793626,-8.584103,7.490533,6.744923,0.646160,5.195971,-2.403346,-7.394686,1.981277,0.252957,-2.458093,-1.656445,8.614678,-7.069747,1.470162,7.466656,-6.253443,-2.585409,-8.782800,3.078776,-0.783664,4.540184,-8.489040,0.507327,9.067444,8.506785,-5.665694,-9.097842,-8.572853,6.684127,-8.624943,-5.325101,-8.731669,-7.355584,-1.522986,-4.104578,-3.568452,8.615753,0.021174,-8.959659,-1.392881,-2.832309,5.918414,-8.024217,0.351805,0.422181,6.129410,3.762081,-2.791231,-4.959494,5.628220,3.099630,-4.696889,-4.887210,0.663645,-2.190875,-2.952594,-7.909682,6.926997,2.929222,-1.302956,-4.226274,-7.519732,-4.163872,5.541846,-6.601582,3.611760,-5.865902,-9.927884,-0.412038,6.700913,0.812659,2.783414,-4.398169,6.430431,-8.811806,-8.158066,9.014448,-6.165863,-3.680848,-4.853691,-1.810128,-9.495767,-6.454044,7.573434,3.330631,2.335535,-0.301085,-9.127199,-1.863838,-2.240932,-1.120793,9.220374,0.791474,8.259092,-4.680131,-2.701108,6.253678,4.702859,-9.887768,-9.178304,-4.449916,-3.589523,0.859506,1.762689,-9.743434,-4.815883,-9.871450,-8.932961,1.713082,2.510206,-9.380137,-9.932106,2.168670,8.937691,-6.233620,7.125759,8.335497,7.571000,-3.957786,-8.013855,-1.491881,2.613594,4.894878,-6.055157,4.017689,-6.960930,-7.832980,-8.089108,-2.354624,2.081865,1.123233,9.537588,-4.088422,4.169290,1.895766,-3.557252,-2.319075,7.810689,4.398824,-9.552957,0.205571,-8.349860,1.957353,8.993303,-5.076030,-6.728692,5.130190,8.891178,-1.719751,3.802427,-2.986989,7.387497,2.997412,-0.199767,3.243801,-6.423469,6.922414,-7.348747,7.645575,9.415329,-7.684811,5.556752,5.709229,4.865999,-8.893116,-6.762394,-8.574496,8.844608,-0.357064,9.628627,5.881716,-0.299380], dtype = "float64")#candidate|5164|(1404,)|const|float64
var_5165 = relay.var("var_5165", dtype = "float32", shape = (192,))#candidate|5165|(192,)|var|float32
call_5162 = relay.TupleGetItem(func_2732_call(relay.reshape(var_5163.astype('float64'), [9, 1, 13]), relay.reshape(const_5164.astype('float64'), [9, 12, 13]), relay.reshape(var_5165.astype('float32'), [192,]), ), 0)
call_5166 = relay.TupleGetItem(func_2736_call(relay.reshape(var_5163.astype('float64'), [9, 1, 13]), relay.reshape(const_5164.astype('float64'), [9, 12, 13]), relay.reshape(var_5165.astype('float32'), [192,]), ), 0)
output = relay.Tuple([call_5113,call_5143,call_5162,var_5163,const_5164,var_5165,])
output2 = relay.Tuple([call_5114,call_5144,call_5166,var_5163,const_5164,var_5165,])
func_5173 = relay.Function([var_5163,var_5165,], output)
mod['func_5173'] = func_5173
mod = relay.transform.InferType()(mod)
mutated_mod['func_5173'] = func_5173
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5173_call = mutated_mod.get_global_var('func_5173')
var_5175 = relay.var("var_5175", dtype = "float64", shape = (117,))#candidate|5175|(117,)|var|float64
var_5176 = relay.var("var_5176", dtype = "float32", shape = (192,))#candidate|5176|(192,)|var|float32
call_5174 = func_5173_call(var_5175,var_5176,)
output = call_5174
func_5177 = relay.Function([var_5175,var_5176,], output)
mutated_mod['func_5177'] = func_5177
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4472_call = mod.get_global_var('func_4472')
func_4474_call = mutated_mod.get_global_var('func_4474')
call_5229 = func_4472_call()
call_5230 = func_4472_call()
const_5231 = relay.const([[[-6,8,-4,5,-3,-6,-3,9],[-8,8,7,8,2,6,1,-4],[7,-8,-4,-2,-9,-4,-3,6],[-5,7,-2,6,6,-4,5,3],[-1,-10,-3,-1,-3,5,-7,9],[7,-8,2,3,-7,6,-4,-2],[9,-9,6,-5,7,5,2,10],[2,8,-9,4,7,-7,-9,5],[3,-10,-8,-8,-6,-10,10,8]],[[5,8,5,1,-3,5,9,10],[6,1,-9,-8,5,-1,-8,-7],[-5,9,6,-3,2,1,-8,3],[2,-7,-4,-6,-10,2,-8,-1],[3,-2,-3,7,3,-7,8,-2],[-6,3,-3,-9,-8,1,1,6],[5,2,-4,-5,5,-5,-4,7],[-7,9,1,-3,10,-4,9,4],[9,5,-3,10,4,4,6,9]],[[-2,-3,8,-10,1,1,4,-7],[-1,8,-3,-5,6,9,9,-5],[-8,-3,-4,7,9,-9,-3,-7],[9,10,6,10,-5,3,-7,-6],[-7,-3,4,-8,10,-5,6,-9],[9,-6,5,6,5,3,-8,-8],[7,-5,3,-1,5,-6,-10,-3],[-4,-2,4,-6,-7,-2,-7,-9],[-4,-3,-2,-10,2,5,2,-1]],[[-6,5,2,3,-2,6,7,-4],[-2,10,5,10,-7,-1,2,5],[-6,-1,6,10,9,7,-3,-7],[-10,-8,6,-2,2,3,-5,3],[-1,-10,8,-4,9,-1,4,7],[6,1,-3,6,-6,1,-7,3],[-9,-6,-6,-4,-4,5,-4,4],[-8,-3,-5,8,9,-3,4,-6],[-10,9,-3,-8,9,-4,8,4]]], dtype = "uint64")#candidate|5231|(4, 9, 8)|const|uint64
bop_5232 = relay.left_shift(call_5229.astype('int32'), relay.reshape(const_5231.astype('int32'), relay.shape_of(call_5229))) # shape=(4, 9, 8)
bop_5235 = relay.left_shift(call_5230.astype('int32'), relay.reshape(const_5231.astype('int32'), relay.shape_of(call_5230))) # shape=(4, 9, 8)
func_296_call = mod.get_global_var('func_296')
func_298_call = mutated_mod.get_global_var('func_298')
var_5244 = relay.var("var_5244", dtype = "float32", shape = (270, 4))#candidate|5244|(270, 4)|var|float32
call_5243 = relay.TupleGetItem(func_296_call(relay.reshape(var_5244.astype('float32'), [9, 12, 10])), 0)
call_5245 = relay.TupleGetItem(func_298_call(relay.reshape(var_5244.astype('float32'), [9, 12, 10])), 0)
func_4458_call = mod.get_global_var('func_4458')
func_4459_call = mutated_mod.get_global_var('func_4459')
call_5255 = relay.TupleGetItem(func_4458_call(), 0)
call_5256 = relay.TupleGetItem(func_4459_call(), 0)
func_3588_call = mod.get_global_var('func_3588')
func_3594_call = mutated_mod.get_global_var('func_3594')
var_5259 = relay.var("var_5259", dtype = "int32", shape = (336,))#candidate|5259|(336,)|var|int32
const_5260 = relay.const([1,1,9,-2,-2,-9,7,-10,5,-10,-5,7,3,-10,6,4,-9,1,2,4,2,8,3,8,-4,-5,3,9,-9,7,-2,-3,6,8,-1,2,8,-3,-10,1,9,2,-7,-8,-2,6,-5,-7,-4,9,-9,-9,2,10,-10,5,8,-1,-10,5,-3,-8,-9,7,1,-1,10,-9,-1,-2,3,-2,7,-8,-2,1,-4,-2,-5,8,-9,-8,8,-9,10,2,3,6,7,6,-7,-5,-9,5,7,2,4,-5,9,3,-9,3,-9,9,3,7,6,2,-10,7,-2,-5,9,1,6,-9,9,7,3,3,-3,7,-4,-5,9,2,-3,10,-7,-1,-4,-7,4,-10,10,-4,-6,4,-3,-4,1,4,1,7,4,8,-10,-1,-9,-3,4,3,10,2,6,-6,10,-2,-3,-8,7,-4,-2,-1,-6,3,-2,2,6,7,-9,-1,-2,-1,-4,-5,6,-7,-6,1,-5,-4,1,-10,1,8,-10,-1,4,1,-9,-10,-6,3,-7,4,1,8,-5,8,6,7,5,-10,8,-8,10,3,-4,7,-3,1,10,-5,-8,2,6,-9,5,-1,-5,-1,-6,-10,-3,10,-2,9,10,9,-6,1,-10,7,4,-10,9,-5,-8,-5,-3,-6,-8,7,10,8,-6,-1,3,-4,8,-7,9,-3,-6,7,-5,-2,-9,-5,-4,-8,5,-9,-7,-7,-8,3,-6,-4,5,2,6,7,7,-6,-6,-3,2,-1,-6,-6,-5,-4,5,5,-1,2,-5,1,-10,2,1,-10,7,4,10,-10,10,5,-1,-5,-9,10,-7,-5,7,-4,-3,3,-6,3,-8,-10,-6,4,-7,-2,10,-2,2,-4,7,9,-2,9,-9,3,-7,8,10,-3,-4,7,6,9,-9,10,10,-3,4,-10,6,2,8,7,3,5,4,1,1,1,-4,-5,10,7,-10,9,-2,-7,3,8,-3,-5,-7,8,-8,-8,-10,5,1,-6,-2,-6,7,5,-7,-8,-8,-9,9,2,8,10,-3,10,8,4,2,-6,-3,-1,-6,3,1,-8,1,10,10,-7,-6,8,2,5,1,-5,2,7,4,-1,-3,-9,-1,-4,-10,7,-8,1,-6,-6,-8,1,6,10,-7,-6,2,-5,-4,-7,1,-10,6,1,-10,8,1,-9,-7,-8,10,5,1,8,-8,-10,6,8,-3,-3,-9,10,10,6,6,2,-9,-1,-6,6,3,-2,7,-2,-10,-3,6,8,3,-3,-9,-7,3,-9,-9,10,-2,-1,-4,-1,-8,3,10,-1,-9,-3,1,-9,10,-1,4,10,-6,6,4,4,4,5,1,8,-10,8,-3,-6,-6,3,-10,5,6,8,1,-1,9,10,9,2,8,-3,-7,-5,5,3,3,-3,-1,8,-3,6,2,-4,3,4,-5,4,3,-7,9,6,-9,-10,10,-4,-6,4,6,1,-3,-9,-10,-2,-2,5,-10,3,2,2,3,4,6,-5,8,-10,-1,-1,3,7,-6,-9,3,-8,7,-6,7,8,-10,6,1,10,6,-6,-7,-4,-5,-1,-5,3,10,2,9,-1,-5,8,-4,1,-2,-8,-9,-3,-7,5,3,6,7,-1,10,-7,10,4,-8,1,-1,10,-1,-8,-7,-10,9,4,-4,2,8,10,7,-9,6,-4,10,10,-8,2,1,8,10,6,8,9,-9,3,10,10,3,-6,7,4,6,3,-10,7,-2,3,1,5,10,6,9,7,-10,-4,-10,-4,-6,4,-5,-3,4,-6,-9,-4,8,-10,-6,10,-9,4,-3,-8,3,-5,2,5,8,-10,-4,-8,8,1,5,1,8,-5,-2,-9,4,-3,-4,2,-2,8,9,-10,4,-3,5,-6,7,-3,6,-2,-8,7,-5,-3,-1,3,-9,-9,4,-5,-3,-1,4,-7,-8,1,6,-7,4,8,-4,-7,1,9,7,-4,5,-1,1,-9,1,-2,-7,9,-2,-1,5,-1,-4,-4,4,-1,5,-10,-2,-5,1,9,8,-1,5,1,10,6,2,-6,10,-7,-1,-1,-6,-5,4,4,4,-6,-9,-6,-9,-4,-4,1,-8,-9,5,-2,-8,9,5,-6,1,5,-9,1,-7,2,5,-5,2,-2,8,10,-4,-10,4,-5,9,9,3,7,4,1,-3,-10,4,3,-9,10,4,10,5,5,7,10,-1,-10,-8,-2,-9,5,-8,5,-1,-9,-4,-1,6,1,-9,3,-9,4,-4,-8,1,-6,2,-6,-6,-8,-4,9,6,-3,-10,4,7,-7,-6,-4,10,8,1,7,-9,-10,-5,-4,9,-5,-2,-8,-8,-2,4,3,-5,-8,-7,6,1,8,6,-6,-9,-4,1,-2,1,-5,-1,8,1,4,2,-3,-7,8,3,10,6,-3,-8,-8,-10,-5,-3,-6,-1,-4,10,8,8,-5,-4,3,1,-7,-2,9,7,-10,6,-5,-6,-2,6,-8,-9,-7,9,3,5,-8,-6,-8,2,-3,6,5,-9,-2,10,9,-4,2,-6,3,6,10,-10,-7,8,1,10,-10,7,-3,-6,6,-9,-3,-5,6,-10,5,7,-4,-4,1,-3,4,-4,8,-9,10,-5,1,-3,-5,-5,7,-4,7,6,-3,-8,2,4,-4,4,-9,10,3,8,8,-10,-5,6,6,7,-2,6,1,-3,1,10,8,-1,-5,1,-2,8,7,9,-5,-3,-3,2,9,10,5,-1,2,-6,-10,-10,-7,-2,-2,8,-7,-6,-9,6,-6,-7,6,3,-1,7,-3,-8,7,5,-10,7,-3,10,3,-2,-4,-9,-9,10,-9,-3,-4,-5,10,-10,-4,-10,2,-10,7,6,-1,4,5,-9,-3,-1,3,7,7,-2,6,9,-3,7,-3,1,-7,-3,1,1,6,10,-9,3,-6,-8,-8,-4,-9,10,3,-5,8,-5,2,2,7,9,1,-1,-8,3,7,4,-8,6,-6,4,-1,-3,-4,-2,9,4,-3,8,3,7,1,-5,-8,2,4,-7,4,7,-7,8,2,5,-6,-7,4,-8,7,-6,6,8,4,4,-7,8,2,9,8,9,7,-5,-4,-8,8,-6,1,-4,-3,-5,-1,-4,10,9,7,4,-6,5,-1,10,4,-4,2,-10,-8,5,1,-4,-5,1,-3,-4,-3,8,1,-5,-6,9,-9,-4,7,6,-9,9,5,5,-4,-6,7,4,6,2,8,-1,-2,4,4,-7,2,8,3,-5,2,7,9,-7,1,-6,-1,-8,2,4,1,1,-5,-1,2,-9,-1,-4,-8,-3,10,-9,-6,6,6,6,-1,-1,5,9,1,-2,6,1,6,-2,3,9,-8,-7,-7,4,-9,-6,-8,-4,7,-1,3,-7,-8,-7,-2,-10,1,7,-2,6,5,-6,9,3,-7,8,-8,10,6,9,-4,-10,-8,-1,-7,4,10,-6,1,4,-6,7,-9,-2,-6,5,-9,3,2,-8,2,1,-1,1,-6,1,1,-6,6,-5,6,-10,-5,-2,10,3,3,4,-1,-7,1,-9,-5,3,2,4,8,-4,-1,-9,10,3,-8,-9,-1,7,4,4,-10,3,-7,-3,4,-7,6,6,-9,-7,-3,7,-3,-5,2,-10,-8,-6,1,9,7,-10,3,-6,2,-1,-2,-8,5,-3,7,-1,8,10,-7,5,-5,8,1,-10,9,-10,10,-7,-5,1,-6,5,-10,-5,3,4,7,4,5,-2,3,-7,-2,-7,-7,-7,3,-6,8,-1,-1,7,-6,-7,4,5,-1,-2,7,8,-10,-6,8,5,5,-6,-2,6,5,8,3,9,-8,-7,-2,10,3,-6,-9,-8,8,3,-7,5,4,-1,9,-3,3,-1,-8,-7,-6,-1,-6,1,2,-4,-7,-1,2,-8,-4,-7,2,1,8,10,-3,-1,1,-2,8,-4,-5,-5,-10,10,-5,-10,5,-6,1,7,10,-2,-9,-6,10,-3,-8,2,1,-2,8,-5,5,-6,-9,10,-10,-2,7,-10,-9,-10,1,-7,-5,-1,2,6,7,-6,2,8,8,-4,10,-2,5,8,-7,10,-3,-4,5,4,9,-2,6,4,-2,1,-2,-8,6,-5,-10,-4,4,-10,6,-4,-4,8,6,5,2,-7,10,3,3,8,1,-6,8,7,-10,10,7,7,2,1,-10,8,8,-4,9,4,-4,6,-8,7,-2,-3,7,-2,4,2,-6,1,-4,-4,-9,-3,-1,-6,-10,9,3,10,-4,8,-10,9,3,-9,-7,9,3,2,9,-3,4,-2,5,-5,-6,4,-3,9,5,2,1,9,-1,8,-10,2,4,-8,-6,8,6,-8,-5,5,-7,1,6,3,-2,1,5,-5,-7,-10,10,5,-7,6,-3,9,8,9,-1,-5,-7,-4,-10,-1,-6,10,-8,1,-1,7,-6,4,-8,9,-9,-2,-1,-7,7,-7,-1,-6,-3,6,4,8,2,5,6,1,8,-2,-2,-1,-8,-4,5,-8,9,-4,7,-4,-3,3,4,-7,-9,-3,-7,-2,1,2,5,6,-3,-6,2,1,8,-5,8,-3,10,-8,10,-9,-7,9,-10,6,7,6,-2,5,9,-10,-1,-3,-1,-7,4,-2,-9,-3,-7,-4,10,4,-7,10,8,-4,-5,1,8,6,5,3,10,3,-4,4,7,6,8,1,-7,6,-9,-5,6,-1,9,5,9,-9,-4,-6,2,6,-9,-5,-1,-8,7,-9,7,3,5,7,5,6,-10,2,-6,3,7,-2,10,-9,3,9,-10,-6,-10,9,-1,-5,-9,3,9,-1,-6,5,2,3,3,-5,-4,-8,-6,-10,-3,-7,5,-6,-8,1,9,-9,9,6,2,5,-6,2,9,8,10,4,7,-10,-8,-8,6,-8,7,-8,-9,9,-5,7,5,-8,1,2,2,1,-4,9,-6,8,-2,4,-9,-7,6,-10,9,7,10,6,-3,3,7,9,8,-9,-4,-4,-10,7,4,6,-5,-1,-2,8,7,-5,3,10,-1,-4,5,-8,-8,8,2,3,-7,-2,-3,-6,-2,-5,-5,8,5,9,-9,-3,-1,1,5,3,-10,2,-7,-4,-1,6,3,10,-6,-7,5,6,-3,1,10,-3,-1,4,5,-9,-8,-10,8,10,-8,-9,-9,3,1,-1,10,-1,-10,10,-4,2,3,2,4,5,1,7,10,-3,3,-2,-9,-5,10,4,6,8,10,3,4,-7,4,2,-3,-5,-8,-3,-9,-5,6,7,-7,-3,4,2,4,10,3,-1,8,7,10,4,8,2,-1,6,-3,7,-3,-5,6,4,-9,8,-1,-7,2,-4,-1,4,5,-1,7,6,-7,-8,8,2,8,-7,4,-2,5,9,-2,9,-3,6,8,-1,-2,-8,2,8,-2,1,-8,6,-10,-9,-10,-10,1,-2,-9,-6,1,-1,-3,-4,-5,5,-7,7,6,10,6,-10,7,8,4,-6,7,9,-8,7,8,-7,2,2,1,5,-3,6,6,5,7,8,-1,-4,-2,2,-2,4,-4,4,-10,5,-6,3,-7,4,2,-8,1,-1,4,2,4,-1,-2,-4,-6,6,-1,5,-9,-4,3,1,-5,-8,8,6,-5,10,4,2,4,3,8,3,-9,6,8,-7,-2,1,-4,-1,4,8,5,7,9,5,7,3,-7,-7,8,8,-8,1,-6,1,-4,-7,1,8,-5,7,3,8,-1,-6,9,-1,5,-9,6,2,-2,-9,-4,-5,2,-10,4,-6,5,5,6,-2,-8,3,-4,-4,-7,-9,1,-9,-8,9,-1,6,-9,-1,-7,-7,8,8,8,-6,4,3,1,-10,4,-8,6,-10,-7,1,6,8,9,-5,8,9,9,7,7,9,-7,-6,-5,10,-9,-3,-9,10,6,5,9,4,-8,-7,8,-6,-7,2,9,1,2,-5,-4,3,2,-4,3,-6,8,-6,3,5,-2,-9,8,-9,5,-5,10,-9,-5,-1,10,7,-5,8,5,-6,-10,-8,-7,9,10,1,2,-2,4,3,-3,3,3,3,-5,-5,-6,-3,7,-4,-8,8,-6,6,4,-5,-10,-4,-2,-1,8,1,-8,-8,10,3,-9,-7,3,-7,3,-5,-2,7,4,10,5,-5,-8,7,6,-6,-5,2,-8,-5,2,-3,-7,-6,-10,4,-10,8,3,-5,-7,4,6,10,-6,7,4,-10,-2,-5,-5,-8,9,4,-1,-3,-2,2,4,3,6,-5,10,3,-6,-4,7,-7,-10,-2,-9,-1,3,-10,7,6,5,-8,-9,-9,-1,-7,7,-7,-4,-7,-4,-4,6,-4,9,-8,1,9,7,6,-3,6,-6,6,-2,3,-3,-2,2,2,4,-6,-4,-7,-5,6,-8,7,-5,-4,-5,-2,-5,-7,-10,10,7,-1,5,1,-4,7,9,-6,4,-1,8,-7,-8,9,3,4,-7,2,-6,1,10,-2,9,-1,-7,-4,-6,7,9,-3,-7,-4,-3,-6,9,-1,-5,-8,-8,-1,-1,-1,10,-2,3,-1,2,5,-2,-8,-8,10,9,-2,-6,3,8,6,-1,-6,4,3,1,-5,8,-3,-2,4,10,-10,8,8,9,-3,2,3,7,4,-3,-10,-2,-9,-8,8,8,-6,1,-2,8,9,5,8,9,9,-2,-2,3,-1,-6,-1,-4,9,-1,-8,-6,-10,10,-4,-9,10,3,-8,-5,9,7,-4,-7,8,3,8,2,2,-6,-10,1,-8,4,-3,4,-10,10,-2,8,4,6,1,-9,-10,1,-2,10,7,8,2,-1,-5,-6,-7,-8,8,-4,10,3,-10,9,-9,4,10,-5,5,5,-7,8,-7,-5,-8,3,-4,-7,-3,6,5,7,3,-8,-7,2,-1,-8,-7,-3,-3,5,3,2,10,5,10,-1,-3,3,1,4,6,-2,4,-9,10,-4,10,8,-4,7,6,-4,8,-10,3,-1,-5,-1,6,8,6,10,8,5,-2,3,-2,-8,-6,-7,4,7,9,-10,8,1,-10,9,9,-9,8,-1,-8,-9,9,3,-2,-3,-8,7,3,-9,9,2,-4,2,-10,10,-4,-4,5,-6,-8,9,4,-4,-4,-1,-3,-4,3,-8,-9,-2,-7,5,2,10,-2,7,-7,-2,-4,-5,-7,3,-2,-10,-9,-5,-9,-10,-4,2,-1,2,10,8,-9,10,-9,4,1,-6,8,-7,-2,9,-7,-1,-2,6,-7,5,-5,-1,-5,10,9,-6,-7,-6,-10,-6,8,5,10,-1,6,-2,8,-7,-6,-10,-5,6,9,-1,-6,8,-4,-3,6,1,9,-5,5,-3,1,10,10,-5,5,-2,5,-7,2,-5,-4,-10,-10,-4,-7,9,-8,3,2,-9,-6,-10,-10,3,-8,2,-5,-7,-7,1,7,3,7,-5,6,8,6,4,-6,10,5,6,-4,6,-5,7,-7,9,-6,4,10,-3,-1,-4,6,-3,-4,3,-5,9,-4,-1,-7,-4,7,-5,10,-3,5,-2,-1,-3,5,3,3,-9,6,-9,-2,-6,-10,4,-8,-5,-6,5,-3,2,-2,-7,5,-3,5,6,4,-6,4,8,-1,-7,1,4,-10,-1,3,9,-5,-1,-4,-10,10,7,-6,-5,10,-3,4,7,6,-8,8,-7,10,3,-8,6,-9,-3,2,3,2,4,-5,-1,9,-10,-7,-9,-8,4,-7,3,5,-10,-5,-8,-9,2,3,5,-3,8,5,-8,10,-8,-2,3,-8,-6,-8,-10,7,10,-5,2,3,7,-7,-2,9,-6,-2,10,-3,-3,-3,7,4,9,-6,7,-3,9,3,9,-3,3,-5,7,3,9,4,-5,-7,10,-7,5,3,-10,-7,-8,-5,8,-6,-7,9,-5,4,-3,-4,6,-10,-1,-5,9,9,4,10,3,-7,5,6,8,9,3,-4,7,10,-9,9,8,-5,4,-2,-3,7,6,-9,-5,8,4,-7,-6,-8,-3,-2,9,-1,7,9,-4,-8,-4,-5,-5,-9,4,1,2,-6,-10,-5,-10,-9,-10,4,9,-4,-9,3,9,5,7,-5,7,5,-2,6,7,-6,8,-10,-4,-9,1,-6,-2,-6,-9,10,-4,5,5,5,-9,-8,-5,-3,3,9,-3,-6,8,-6,5,-4,10,5,3,7,5,8,-4,-6,-2,-8,-1,-10,10,-7,3,-6,-5,8,2,-1,-1,-6,9,-9,-8,3,-5,10,10,-10,3,8,6,-5,3,5,6,-10,-3,3,10,-1,-1,-8,-10,-8,4,-10,-1,-1,2,10,-7,-10,-1,-2,-1,6,3,6,4,-6,-9,-3,3,7,-9,-3,9,-7,-10,-1,-1,4,-3,-7,6,9,2,-6,-5,-2,9,-1,1,-1,6,-2,1,10,8,-4,5,-10,5,-3,8,-3,1,7,3,-4,2,-3,-2,8,2,-6,3,-3,-3,-9,4,-10,-7,8,7,-6,-8,1,-5,1,8,4,5,-2,-8,1,-2,-6,10,-8,5,-7,6,-4,6,8,-5,7,-4,8,9,-1,-10,3,-2,-8,-6,10,2,5,-9,2,-9,-4,2,-4,-1,4,-1,-3,8,10,8,-8,-5,-8,7,-8,1,-9,2,-3,-8,6,6,4,3,-9,-5,-1,1,-5,-9,5,3,-4,7,9,8,7,-7,7,-5,10,5,-10,-9,5,8,-10,5,-7,3,8,-1,5,-3,7,1,10,9,4,-7,-7,-10,5,3,6,7,-9,-8,-6,9,1,-3,7,2,-9,10,-3,5,4,9,-7,-5,-7,-1,7,10,-9,10,-2,-7,1,-9,6,2,3,1,2,-6,-2,-3,4,-9,-6,-9,3,-1,3,-9,-3,10,-4,8,10,4,1,-3,3,-10,-2,9,-4,10,-10,8,-9,1,-9,9,1,1,3,6,5,6,6,-3,-6,10,1,9,-4,3,-7,5,6,-1,10,-6,3,4,-7,-10,9,9,7,10,-6,7,7,-3,-9,-3], dtype = "int64")#candidate|5260|(3360,)|const|int64
var_5261 = relay.var("var_5261", dtype = "bool", shape = (120, 1))#candidate|5261|(120, 1)|var|bool
var_5262 = relay.var("var_5262", dtype = "float32", shape = (180,))#candidate|5262|(180,)|var|float32
call_5258 = relay.TupleGetItem(func_3588_call(relay.reshape(var_5259.astype('int32'), [7, 16, 3]), relay.reshape(const_5260.astype('int64'), [3360,]), relay.reshape(var_5261.astype('bool'), [60, 2]), relay.reshape(var_5262.astype('float32'), [180,]), ), 0)
call_5263 = relay.TupleGetItem(func_3594_call(relay.reshape(var_5259.astype('int32'), [7, 16, 3]), relay.reshape(const_5260.astype('int64'), [3360,]), relay.reshape(var_5261.astype('bool'), [60, 2]), relay.reshape(var_5262.astype('float32'), [180,]), ), 0)
func_2732_call = mod.get_global_var('func_2732')
func_2736_call = mutated_mod.get_global_var('func_2736')
var_5267 = relay.var("var_5267", dtype = "float64", shape = (117,))#candidate|5267|(117,)|var|float64
const_5268 = relay.const([4.770989,-5.817016,-0.796459,-1.132683,9.871190,-8.870534,4.665037,-0.764932,5.655680,4.391253,-4.875129,5.494147,-9.567587,4.982967,3.217821,0.312143,3.213725,-7.809745,2.206640,4.675612,5.259117,-2.181221,3.950963,4.458153,3.018828,3.743547,-1.501061,-2.562810,4.077212,-5.704450,4.335678,-0.100343,-1.951738,8.825004,2.827033,-3.057882,-3.581783,-4.106165,5.753167,-9.772977,-9.178228,6.325241,-6.844394,4.163918,5.480726,3.581904,2.544034,7.691290,-5.320944,-4.169289,5.118833,-1.897068,1.531544,9.272681,-3.383936,-7.153644,-2.428920,3.846282,9.655895,-7.398503,5.798955,-9.198042,3.112348,-2.393523,-9.662208,-5.822593,7.243704,9.931263,0.116540,5.063189,-0.506702,-1.071857,8.565277,5.749214,-5.980241,0.193255,4.121301,2.810259,2.912367,-4.666764,-8.006992,6.612147,3.322125,-2.360854,-2.239989,-1.929350,1.814981,6.572809,1.217181,-4.902347,-1.621060,2.039949,0.027481,8.487929,-9.232966,-6.831124,-3.289011,-5.021128,-1.526269,-0.726772,-0.066575,0.181222,6.275410,7.145313,5.845208,-9.910707,0.590650,-8.158312,-1.808445,-1.845616,6.682996,0.040302,-8.811576,-2.044839,6.373241,9.322744,7.337412,3.546861,7.143156,8.839406,-9.563547,5.423082,6.124840,-7.456482,0.566016,-1.747628,7.428382,-1.785506,6.823785,-5.737817,1.135310,1.503537,-2.836965,3.982323,3.801346,5.658212,-6.404146,3.266711,-2.560151,-0.170345,-6.288193,-5.478046,-6.796146,-8.246715,7.265557,-0.047940,-2.762854,-1.499715,4.384544,8.500409,-3.354240,-1.843153,4.202047,5.080062,-5.192172,2.019383,-5.801025,-5.991103,-8.724095,8.015056,-2.502194,-3.523525,4.422601,4.617158,-0.976003,1.827614,1.406940,6.172378,6.211998,-0.294167,-8.649755,1.854593,-0.174633,-1.855009,-6.839036,-2.939978,4.402517,5.444393,9.762226,1.128839,7.557807,0.834616,9.492410,4.320274,9.924124,-7.570477,6.894837,-3.770314,6.430194,-6.884368,-0.211637,-1.629064,9.335102,-2.872637,9.961704,-2.303004,-0.941206,5.604897,7.718964,4.609592,6.239090,-4.296913,6.335363,-9.351130,6.904229,-9.111361,4.276137,-4.942886,-2.157404,-0.353732,-5.445471,4.695528,-7.214827,-9.389909,3.065961,-6.152792,2.844483,-0.193378,8.765483,-6.030505,0.612645,8.132681,4.360003,-4.619948,-1.234948,9.833122,1.999544,-8.103209,-2.178004,8.172444,-8.620889,-7.516133,5.938454,-8.931231,1.765968,0.889573,0.147577,5.284680,-4.285522,-6.428984,-3.096971,-3.723158,-6.379803,1.136702,1.245943,7.626038,-1.489178,-8.457024,-1.123375,3.328291,0.101383,-0.555162,5.817174,4.363605,1.568354,-9.556883,-4.694561,-8.271895,3.157475,8.628170,-6.098522,-5.402834,-3.094017,-1.885429,2.799995,-8.234793,8.291625,9.891114,-9.895746,-4.033590,1.738542,-9.394349,6.207461,-8.539997,-6.244230,-2.759446,-4.420507,-1.279872,1.582785,7.167416,-3.907872,9.404668,9.620747,-1.858749,4.337764,4.982111,4.937227,-7.043720,-2.725811,-9.446578,-0.976646,-6.649798,5.087214,9.372121,5.596897,-2.623730,-1.556329,3.359949,-8.646157,-8.603994,6.199925,-7.091716,3.021510,8.130201,-6.701696,-3.093711,-2.144024,8.024145,7.467522,-6.767403,-3.928819,-2.135261,-5.850234,-1.401814,8.540990,7.878123,-2.953286,-1.777231,-8.631536,-2.977042,0.773587,-9.000003,7.220609,8.147128,-9.254668,1.569496,-2.881085,-2.376759,-8.069287,-5.100089,4.020700,-1.658719,3.718249,7.383512,-9.389608,-4.308424,-6.729518,-6.857959,0.631540,3.941215,1.192768,-5.420147,-0.907364,5.172407,6.901142,8.018316,2.115536,-7.479286,-4.381116,-0.847810,6.608437,-2.606902,8.944088,3.862147,-2.838526,0.069292,-0.811439,-0.944981,-1.932958,1.038349,3.595003,-4.846403,-1.048669,9.913147,-3.199346,7.441973,2.306006,6.383867,-3.114723,0.522358,9.173816,1.419788,-9.391076,9.586895,0.302653,-7.376956,6.007751,3.482099,1.339761,-7.017706,-6.972292,-9.111529,3.586000,2.940155,-3.033458,-7.658035,0.643523,4.234680,6.007236,-7.643618,1.577842,7.856227,7.857634,-0.960554,-5.835336,-0.853675,8.290427,-7.591426,-5.195705,-9.271241,-9.398082,4.939301,-7.937350,4.850190,6.429032,-2.524791,-6.507418,1.590137,-7.951881,-9.542062,-4.476465,-1.105555,2.961266,-1.799393,-7.375934,2.566159,6.579453,-1.133284,9.130833,-0.391076,2.831032,-0.693637,-4.874439,0.688316,3.624810,7.879393,-2.639400,1.098212,-2.869523,7.463953,9.436851,6.780830,8.769747,-9.609420,2.945924,8.126255,-4.279465,-1.464450,7.942139,2.556138,-4.156856,-8.931992,-5.462592,-0.853260,6.618288,9.392795,-3.857264,-1.350817,-3.197616,3.619578,4.308797,-9.412972,-3.754404,-1.677315,-4.875910,-4.825161,1.039745,9.127970,1.027193,-8.095004,-1.462248,3.485532,1.825530,-8.621869,-4.489200,2.026280,1.782924,7.184653,4.621941,4.057401,-8.966208,-5.247180,9.271925,5.901246,8.085356,1.863911,-2.460361,1.489920,-6.406019,8.178510,1.271223,-0.062455,7.282322,-5.887281,-2.085897,-0.182600,3.883197,-5.820984,3.538283,2.456431,7.303910,-8.697435,0.010010,0.835778,4.443868,6.375056,-6.270353,4.654082,0.007407,-6.787953,-7.540467,-3.122390,5.395439,-4.744524,6.056465,8.357178,-4.205925,-1.938769,0.606252,-9.364610,-7.010549,7.855513,5.312588,-1.424118,-2.344647,-0.201023,-8.624985,4.189057,1.543192,-5.991220,7.636268,-7.531977,2.065257,-1.329651,-4.858914,2.417270,-8.798172,5.331949,-7.467981,-3.239871,-5.634822,0.085987,-0.080597,-7.102489,-8.762192,-9.024639,4.423161,4.923321,5.482209,1.924767,-7.853328,-5.369331,-1.618414,0.697753,-1.235431,9.637957,-0.140989,0.102644,0.349745,9.546988,-5.543280,-3.686510,-0.378897,-0.421946,1.027951,8.363314,-9.064810,-9.947864,-1.256648,3.520085,7.009834,4.757672,7.685778,-9.137253,6.729692,-4.340173,2.226294,2.542809,3.499897,6.727821,6.755158,-4.197253,2.333250,-0.704723,-5.495816,-6.678324,2.181752,-9.926042,-0.124614,8.830815,-1.185717,8.292262,-4.796120,2.056895,-4.506414,-7.693132,1.285319,1.091437,5.345206,-1.899451,-2.866745,-8.361467,6.125635,-0.570787,2.578642,3.167865,-2.742658,-8.921824,1.622691,-5.079926,-4.726864,6.422450,4.304502,-7.348938,2.956408,6.142213,1.216395,1.615808,-7.621249,-5.983625,3.286229,8.899043,-2.737604,2.429865,8.995235,3.165529,-5.273371,1.231643,-6.859959,6.191250,5.421689,8.512580,-9.065757,8.485628,-8.658990,-0.015701,3.599964,9.506963,4.881700,0.167826,-4.455450,3.910121,8.245604,4.764555,-3.859724,9.956793,7.759645,7.195413,5.523390,-6.795599,-8.876910,-9.954618,-7.186365,-9.533398,-7.638391,-1.406960,-3.492389,8.870628,-5.383231,1.630012,2.252934,-7.357289,7.229237,-6.072972,-6.305443,3.424267,-5.034011,-2.895958,7.510715,-8.340720,-8.978313,2.436602,-6.950399,2.605400,6.622252,-3.300327,5.877988,2.205543,-4.205502,-2.956776,-1.531745,2.427543,2.090445,3.863332,-6.925669,-6.936931,-8.677148,-1.431554,-0.713987,7.943400,-6.436071,9.111940,3.833079,8.646047,-9.449746,-5.614493,6.261767,0.571253,-0.353849,3.381465,6.754720,5.863166,8.143084,-8.965208,0.716623,6.142350,8.186794,-0.611568,7.665827,-9.271400,7.445282,-8.074157,3.535715,4.020305,-1.883583,-7.115832,-3.011115,5.667157,9.887932,6.377537,-1.653133,0.521933,9.641617,-3.793598,1.476230,1.231316,6.062781,2.324953,2.322074,-6.473186,2.438315,8.607086,2.571300,-1.310931,5.617293,1.413440,-7.967671,5.647994,-1.666579,2.258923,1.349332,-7.302644,-5.464886,0.640849,-6.969626,-7.178294,-2.356033,6.626921,-8.754069,4.645135,-4.184276,5.955171,1.092420,-2.204765,-7.432895,7.145373,-8.138567,4.219050,2.269711,1.258860,-1.310575,9.950820,1.712887,-6.854676,-1.311001,7.608258,3.080198,-1.654356,-9.595119,-6.254773,-4.937228,-0.805293,-5.834908,4.116455,-8.631468,6.632457,-7.993254,3.636207,-9.676429,-9.950213,5.734164,3.333107,-3.179946,6.743229,-3.000185,-9.917808,6.807977,-3.322021,-7.300408,6.358994,-5.538122,9.661205,-7.895580,-3.616110,1.110263,9.551513,0.280947,6.314698,-7.336943,-2.190506,-1.873657,6.267511,9.720628,3.490803,-3.838711,-6.527593,-2.305053,2.843553,-9.534208,8.043547,-4.175695,8.771506,5.687045,-6.043051,8.537546,-6.557057,0.938593,-8.181940,8.395169,-9.755024,-1.106683,-5.370480,-4.884591,4.460903,-7.847752,-3.138388,-1.197348,-5.722145,-0.119127,6.115748,1.151014,-1.945613,-5.464010,7.869017,-1.243660,2.205305,-5.368669,3.020718,6.667789,3.423021,0.201115,1.086043,4.358843,2.265469,-5.582049,-7.082725,4.442961,-8.086244,3.987799,3.004923,9.487963,-3.161971,9.569671,-8.174218,3.582693,-6.419850,-8.491429,-0.235522,7.811212,8.292885,-5.869308,2.338198,-3.502320,2.253247,8.074165,-8.677513,9.590373,-8.647088,-8.922972,-6.879913,-8.208578,4.427828,-0.995147,5.762339,3.648425,4.558813,-4.930894,1.246109,-3.965341,-8.969807,-2.549114,-4.272983,0.663110,-9.571583,2.907111,2.933018,8.071756,-0.178196,-1.605388,1.881371,7.049664,-3.226269,8.693959,-8.224508,-2.845709,0.371544,1.987947,9.565275,-5.081104,7.411235,-9.016706,4.760089,0.445851,8.771502,1.192958,8.711403,5.548800,-4.120547,-0.263608,-6.504124,6.409484,1.585571,7.320341,-7.214738,-8.758038,4.289684,-2.113140,-9.350383,8.884469,-1.813153,-3.041533,4.052802,1.224494,-3.661233,-5.737283,-1.177345,-1.557552,0.340647,-3.764388,9.854219,0.011023,5.428095,0.639337,0.313302,0.491985,-0.227319,2.292375,6.274953,7.952988,-7.406668,-6.495519,-4.151110,-4.949446,-4.897388,6.675674,5.214125,9.067809,-7.290028,-9.727795,3.046085,6.510843,0.117395,6.072949,6.226211,-1.874427,-0.197801,5.047717,7.301409,-5.730604,-9.163549,2.276813,-6.163801,0.704496,-3.642887,-1.015716,1.810253,1.192486,5.079648,-2.175105,0.730830,-6.308089,9.886445,-0.977353,-2.480630,7.997740,-6.506124,-9.880835,4.052269,-1.560959,-8.658084,8.241524,-5.477353,-2.999302,3.865437,6.886156,-0.252971,-4.630923,1.047735,-1.629489,-3.221520,-3.701044,5.444020,6.180655,-6.798369,-6.549670,0.701223,3.809937,-0.773733,4.913365,-0.726080,-1.436588,-4.712545,-0.595935,-3.555524,4.393323,-4.048094,3.117578,7.437851,-3.683677,-7.065820,-1.293183,-9.014228,-7.080439,2.770954,-4.498420,-5.057266,-6.588108,-6.048153,-2.800748,-7.965492,2.359133,6.148569,-6.548567,9.225365,1.176098,8.400614,1.691329,4.557443,-5.295661,8.741302,-8.396371,8.084438,6.084984,9.978364,-2.056465,9.949441,2.060562,3.853400,7.438111,-1.672198,-0.249166,-0.127945,-7.489332,6.518987,9.943624,3.334694,-9.712499,-9.477514,-0.283104,1.284069,3.548338,-4.902945,-6.791629,-8.317201,2.997736,-6.301073,-8.431184,5.154487,-1.513203,3.361458,-6.761767,5.646726,-1.014222,-2.147523,2.517146,6.854080,-9.563501,9.558357,8.338107,2.262745,4.283105,1.315921,-6.332083,-2.744970,0.130076,-0.056659,-8.988107,1.896291,-9.336781,-1.281969,7.332351,-2.700546,8.602085,-8.625179,-2.654700,0.646112,0.266207,5.141160,-3.456659,-2.634764,-5.378145,0.143462,-6.828845,4.792046,-8.109682,5.723387,3.206350,9.565337,6.603634,-5.302132,2.285737,2.632609,-8.829540,9.319625,-5.318537,-8.324025,-9.542248,-1.253583,-8.028807,8.231818,5.806912,7.736021,2.042032,1.727537,-2.393388,-4.974078,-1.450846,9.580049,-5.547096,6.738309,-4.993343,9.881456,2.470263,-7.106640,1.135086,-1.312047,-6.618294,-7.620046,-7.579217,-3.574234,5.932095,4.160002,3.603740,-1.887890,0.277567,-6.014679,0.793115,-9.149376,2.708186,8.871245,4.167608,7.698638,6.348620,6.842932,-9.096085,-0.413389,-7.902248,9.215981,-8.196841,4.487509,3.611099,-4.425268,-3.457944,2.548159,0.059062,-2.900914,-2.810173,-8.529658,4.792373,5.785600,8.747951,6.792153,9.390859,0.012152,-5.520277,8.372508,6.507995,7.339817,5.746089,4.482280,3.948576,6.897304,-2.060484,0.796496,3.768077,0.717571,-5.746028,-2.977058,5.096615,-5.793143,-6.734323,3.784602,7.393899,8.250841,4.721158,2.954866,5.038677,-6.022917,-9.755019,4.471237,-3.400349,-2.332717,-7.521404,6.519079,7.493415,0.420887,7.212607,0.383489,3.724855,5.005315,4.198230,3.265331,2.446325,-0.708817,8.195964,0.340270,-4.090667,7.009520,-4.867196,-1.315811,-6.337651,-1.089104,-2.138482,-2.693948,-8.977484,-0.056835,-0.698821,-6.756903,9.226654,1.292105,3.460635,8.322510,-5.097941,-7.797496,4.407994,-1.518099,-1.579617,0.640830,-5.183191,6.531870,-9.270345,4.592589,2.311655,-3.378159,-1.589745,-4.082242,3.540025,-8.428859,-4.678552,-8.633064,9.161697,7.334333,5.088649,5.178510,-0.249503,7.183113,-4.114021,3.274997,-3.974080,5.500793,4.930639,-1.495950,3.699824,-0.505169,4.999975,8.804798,-5.860084,4.421622,2.661212,9.096925,2.358019,-4.086622,4.829285,6.195220,-7.857806,3.298484,-2.998608,-9.427403,-6.463749,4.760919,7.982965,-4.699062,2.255817,-8.021203,-2.786613,-4.822907,-0.476658,-7.662847,-2.925023,0.672883,-8.074730,-3.714259,0.198983,-5.037126,-9.186915,7.392611,-0.488110,8.847440,2.152374,-9.331430,5.760579,2.838862,-3.965570,-8.728922,-9.659229,2.601634,-5.865030,4.526925,-5.736575,6.394375,-4.825626,-4.385533,-3.687636,-3.682118,7.870308,-1.427192,-3.372535,-9.578660,8.598018,9.733030,5.597920,-1.383884,3.217473,9.484343,6.237235,-8.615651,3.057646,-3.822896,-5.172024,-9.597935,4.598845,-2.715174,-3.392655,-6.117789,9.161438,6.091807,-7.356235,-4.906851,-4.000973,4.125803,-2.903085,3.849439,3.985281,-8.085866,-1.904077,5.605501,7.887360,5.641054,6.790338,6.835977,-3.924198,8.946803,-9.365329,-3.122300,1.756576,-9.786373,0.121320,9.209371,7.320014,-1.166324,-0.156003,8.378954,2.995178,-6.559905,5.740758,-5.370223,-1.690823,-0.716500,4.857810,1.075348,6.690261,2.413942,5.487707,7.641034,-6.660979,5.352657,5.987227,-9.867275,3.629037,4.454041,-3.211410,-0.503480,8.290219,4.837022,0.381227,4.158735,-1.085609,8.717028,-0.584137,-2.490314,-0.810164,1.985469,-4.902366,0.195301,-6.425990,-2.914469,-2.910527,-8.332358,-8.789456,-9.670354,-1.590376,-7.004091,-2.116663,7.181850,-4.464839,5.315700,5.841162,-9.994668,-5.712839,0.699912,8.188975,1.769183,0.721499,1.022158,9.924566,3.544384,-5.887136,-2.773134,-8.693369,5.549002,2.857599,7.342917,0.739157,6.819728], dtype = "float64")#candidate|5268|(1404,)|const|float64
const_5269 = relay.const([-3.984214,-5.659097,-8.867624,0.705336,-4.755571,1.852829,-9.789788,8.569913,9.628483,6.885228,-6.142868,1.151493,8.482423,4.182539,-4.827084,1.195934,-9.031485,-7.563615,0.060274,-7.576656,-3.552550,-9.324754,-6.383997,4.323577,-1.538676,-3.409959,-2.823966,8.001877,-5.987428,-1.533257,1.926694,-2.602808,-3.666836,-3.621966,-2.926914,1.961729,-2.930310,-4.343964,5.781815,8.606942,-5.504626,-6.041193,3.988470,-7.584483,4.526256,-8.285854,-9.849373,-1.429397,0.190748,4.964951,5.567001,2.583152,-4.828662,-7.634805,9.721759,-0.479624,-8.055733,-0.921412,-5.728583,1.934552,-4.107238,-5.560941,-1.737328,3.066473,0.205990,-4.724302,3.820387,-8.868030,6.998132,0.652677,-8.552853,-3.327881,2.558396,1.667712,-2.038565,9.223177,-8.617682,5.347622,-5.983518,5.150841,5.125127,-5.598920,3.685122,6.886082,-0.842274,7.991935,-7.339419,9.313780,8.635894,2.925978,1.484973,-5.549014,-1.004601,6.425080,-7.771553,-7.384303,-7.831650,-3.788467,1.228637,-6.381416,-7.413707,9.080790,3.442514,-3.923168,1.025451,-5.195328,-6.797314,-8.030426,1.092197,0.413020,-9.488087,7.874113,9.594484,-9.571325,6.714932,-4.474202,0.389061,-4.766274,-0.529910,1.346871,-9.378909,-9.250176,-7.550710,9.008628,-0.690814,8.963071,-7.307037,5.608110,-4.633510,1.999807,-1.688863,9.749302,8.117997,3.700445,6.098017,5.391571,-1.857457,-6.889445,-9.812925,-5.920578,8.180927,-3.068212,7.861903,6.340000,6.248934,7.162246,-0.151724,1.831779,2.801082,8.105018,2.599864,-7.299087,-4.286713,-4.543865,4.093144,-8.363679,-5.677521,-6.261847,-6.520928,8.403372,-7.424611,-1.259922,-2.268862,-9.665969,-6.003405,-5.689625,-9.915981,1.278823,6.855023,-9.625958,5.814100,7.397440,5.978109,0.909484,6.599116,6.920475,0.895844,-9.709422,-2.046317,7.185261,-9.315062,-3.710609,1.693642,-4.576357,-5.743702,2.527662,6.499902,7.974506,-2.141968,-3.030417,-1.087641,-1.973065], dtype = "float32")#candidate|5269|(192,)|const|float32
call_5266 = relay.TupleGetItem(func_2732_call(relay.reshape(var_5267.astype('float64'), [9, 1, 13]), relay.reshape(const_5268.astype('float64'), [9, 12, 13]), relay.reshape(const_5269.astype('float32'), [192,]), ), 1)
call_5270 = relay.TupleGetItem(func_2736_call(relay.reshape(var_5267.astype('float64'), [9, 1, 13]), relay.reshape(const_5268.astype('float64'), [9, 12, 13]), relay.reshape(const_5269.astype('float32'), [192,]), ), 1)
bop_5271 = relay.bitwise_and(bop_5232.astype('int8'), relay.reshape(call_5229.astype('int8'), relay.shape_of(bop_5232))) # shape=(4, 9, 8)
bop_5274 = relay.bitwise_and(bop_5235.astype('int8'), relay.reshape(call_5230.astype('int8'), relay.shape_of(bop_5235))) # shape=(4, 9, 8)
output = relay.Tuple([call_5243,var_5244,call_5255,call_5258,var_5259,const_5260,var_5261,var_5262,call_5266,var_5267,const_5268,const_5269,bop_5271,])
output2 = relay.Tuple([call_5245,var_5244,call_5256,call_5263,var_5259,const_5260,var_5261,var_5262,call_5270,var_5267,const_5268,const_5269,bop_5274,])
func_5276 = relay.Function([var_5244,var_5259,var_5261,var_5262,var_5267,], output)
mod['func_5276'] = func_5276
mod = relay.transform.InferType()(mod)
mutated_mod['func_5276'] = func_5276
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5276_call = mutated_mod.get_global_var('func_5276')
var_5278 = relay.var("var_5278", dtype = "float32", shape = (270, 4))#candidate|5278|(270, 4)|var|float32
var_5279 = relay.var("var_5279", dtype = "int32", shape = (336,))#candidate|5279|(336,)|var|int32
var_5280 = relay.var("var_5280", dtype = "bool", shape = (120, 1))#candidate|5280|(120, 1)|var|bool
var_5281 = relay.var("var_5281", dtype = "float32", shape = (180,))#candidate|5281|(180,)|var|float32
var_5282 = relay.var("var_5282", dtype = "float64", shape = (117,))#candidate|5282|(117,)|var|float64
call_5277 = func_5276_call(var_5278,var_5279,var_5280,var_5281,var_5282,)
output = call_5277
func_5283 = relay.Function([var_5278,var_5279,var_5280,var_5281,var_5282,], output)
mutated_mod['func_5283'] = func_5283
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4835_call = mod.get_global_var('func_4835')
func_4837_call = mutated_mod.get_global_var('func_4837')
call_5289 = relay.TupleGetItem(func_4835_call(), 0)
call_5290 = relay.TupleGetItem(func_4837_call(), 0)
var_5297 = relay.var("var_5297", dtype = "float64", shape = (14, 13, 4))#candidate|5297|(14, 13, 4)|var|float64
bop_5298 = relay.logical_and(call_5289.astype('bool'), relay.reshape(var_5297.astype('bool'), relay.shape_of(call_5289))) # shape=(14, 13, 4)
bop_5301 = relay.logical_and(call_5290.astype('bool'), relay.reshape(var_5297.astype('bool'), relay.shape_of(call_5290))) # shape=(14, 13, 4)
output = relay.Tuple([bop_5298,])
output2 = relay.Tuple([bop_5301,])
func_5304 = relay.Function([var_5297,], output)
mod['func_5304'] = func_5304
mod = relay.transform.InferType()(mod)
var_5305 = relay.var("var_5305", dtype = "float64", shape = (14, 13, 4))#candidate|5305|(14, 13, 4)|var|float64
output = func_5304(var_5305)
func_5306 = relay.Function([var_5305], output)
mutated_mod['func_5306'] = func_5306
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4591_call = mod.get_global_var('func_4591')
func_4593_call = mutated_mod.get_global_var('func_4593')
call_5356 = relay.TupleGetItem(func_4591_call(), 0)
call_5357 = relay.TupleGetItem(func_4593_call(), 0)
output = call_5356
output2 = call_5357
func_5382 = relay.Function([], output)
mod['func_5382'] = func_5382
mod = relay.transform.InferType()(mod)
output = func_5382()
func_5383 = relay.Function([], output)
mutated_mod['func_5383'] = func_5383
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5389 = relay.var("var_5389", dtype = "float64", shape = (1, 8, 15))#candidate|5389|(1, 8, 15)|var|float64
uop_5390 = relay.acosh(var_5389.astype('float64')) # shape=(1, 8, 15)
uop_5398 = relay.tan(var_5389.astype('float32')) # shape=(1, 8, 15)
bop_5401 = relay.less_equal(var_5389.astype('bool'), relay.reshape(uop_5390.astype('bool'), relay.shape_of(var_5389))) # shape=(1, 8, 15)
uop_5404 = relay.erf(var_5389.astype('float64')) # shape=(1, 8, 15)
uop_5407 = relay.sigmoid(bop_5401.astype('float64')) # shape=(1, 8, 15)
func_3347_call = mod.get_global_var('func_3347')
func_3349_call = mutated_mod.get_global_var('func_3349')
const_5420 = relay.const([0.959710,4.035959,-1.498741,-9.749557,-2.247802,6.760528,6.921273,-2.620660,-0.122568,5.395602,9.936986,-1.684141,-2.993481,-0.372939,-7.035512,4.459046,-5.392597,2.307254,-1.190600,-5.824405,8.690960,3.924645,-9.712025,-8.239406,-0.303809,3.984664,-2.212716,-7.153090,2.686862,-8.512916,-0.482656,1.009721,5.836262], dtype = "float64")#candidate|5420|(33,)|const|float64
call_5419 = relay.TupleGetItem(func_3347_call(relay.reshape(const_5420.astype('float64'), [3, 1, 11])), 0)
call_5421 = relay.TupleGetItem(func_3349_call(relay.reshape(const_5420.astype('float64'), [3, 1, 11])), 0)
bop_5427 = relay.maximum(uop_5407.astype('uint16'), relay.reshape(var_5389.astype('uint16'), relay.shape_of(uop_5407))) # shape=(1, 8, 15)
bop_5430 = relay.logical_xor(uop_5407.astype('uint32'), relay.reshape(uop_5390.astype('uint32'), relay.shape_of(uop_5407))) # shape=(1, 8, 15)
output = relay.Tuple([uop_5398,uop_5404,call_5419,const_5420,bop_5427,bop_5430,])
output2 = relay.Tuple([uop_5398,uop_5404,call_5421,const_5420,bop_5427,bop_5430,])
func_5442 = relay.Function([var_5389,], output)
mod['func_5442'] = func_5442
mod = relay.transform.InferType()(mod)
var_5443 = relay.var("var_5443", dtype = "float64", shape = (1, 8, 15))#candidate|5443|(1, 8, 15)|var|float64
output = func_5442(var_5443)
func_5444 = relay.Function([var_5443], output)
mutated_mod['func_5444'] = func_5444
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4739_call = mod.get_global_var('func_4739')
func_4741_call = mutated_mod.get_global_var('func_4741')
call_5535 = relay.TupleGetItem(func_4739_call(), 0)
call_5536 = relay.TupleGetItem(func_4741_call(), 0)
func_3040_call = mod.get_global_var('func_3040')
func_3043_call = mutated_mod.get_global_var('func_3043')
const_5550 = relay.const([[-7.541403,5.293283],[9.985650,-0.686736],[4.247299,2.072593],[7.120567,-6.100220],[-2.464346,5.108821],[-8.687564,8.812101],[-6.618986,-0.888331],[2.584687,4.473678],[-5.683644,-5.791504],[2.883801,-8.313345],[6.524014,5.893751],[-7.010204,-6.207719],[-6.903525,5.099361],[1.351987,-8.781968],[8.239554,-5.027957],[-3.217582,2.326081],[7.045078,-2.749019],[-7.869542,0.503847],[4.708122,-8.557686],[-4.798620,-0.315699],[-8.382707,5.799239],[-8.749967,-2.282909],[8.470429,-1.334134],[-6.558582,-1.930242],[2.469806,-1.407468],[-7.180630,-3.089353],[-3.267436,0.892059],[2.921826,-8.538460],[9.740830,7.106375],[7.578293,5.158941]], dtype = "float64")#candidate|5550|(30, 2)|const|float64
call_5549 = func_3040_call(relay.reshape(const_5550.astype('float64'), [3, 2, 10]), relay.reshape(const_5550.astype('float64'), [3, 2, 10]), )
call_5551 = func_3040_call(relay.reshape(const_5550.astype('float64'), [3, 2, 10]), relay.reshape(const_5550.astype('float64'), [3, 2, 10]), )
bop_5552 = relay.less(const_5550.astype('bool'), relay.reshape(call_5549.astype('bool'), relay.shape_of(const_5550))) # shape=(30, 2)
bop_5555 = relay.less(const_5550.astype('bool'), relay.reshape(call_5551.astype('bool'), relay.shape_of(const_5550))) # shape=(30, 2)
func_4739_call = mod.get_global_var('func_4739')
func_4741_call = mutated_mod.get_global_var('func_4741')
call_5557 = relay.TupleGetItem(func_4739_call(), 0)
call_5558 = relay.TupleGetItem(func_4741_call(), 0)
output = relay.Tuple([call_5535,bop_5552,call_5557,])
output2 = relay.Tuple([call_5536,bop_5555,call_5558,])
func_5559 = relay.Function([], output)
mod['func_5559'] = func_5559
mod = relay.transform.InferType()(mod)
output = func_5559()
func_5560 = relay.Function([], output)
mutated_mod['func_5560'] = func_5560
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4591_call = mod.get_global_var('func_4591')
func_4593_call = mutated_mod.get_global_var('func_4593')
call_5570 = relay.TupleGetItem(func_4591_call(), 0)
call_5571 = relay.TupleGetItem(func_4593_call(), 0)
var_5603 = relay.var("var_5603", dtype = "float64", shape = (14, 13, 4))#candidate|5603|(14, 13, 4)|var|float64
bop_5604 = relay.multiply(call_5570.astype('uint32'), relay.reshape(var_5603.astype('uint32'), relay.shape_of(call_5570))) # shape=(14, 13, 4)
bop_5607 = relay.multiply(call_5571.astype('uint32'), relay.reshape(var_5603.astype('uint32'), relay.shape_of(call_5571))) # shape=(14, 13, 4)
output = bop_5604
output2 = bop_5607
func_5620 = relay.Function([var_5603,], output)
mod['func_5620'] = func_5620
mod = relay.transform.InferType()(mod)
var_5621 = relay.var("var_5621", dtype = "float64", shape = (14, 13, 4))#candidate|5621|(14, 13, 4)|var|float64
output = func_5620(var_5621)
func_5622 = relay.Function([var_5621], output)
mutated_mod['func_5622'] = func_5622
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4472_call = mod.get_global_var('func_4472')
func_4474_call = mutated_mod.get_global_var('func_4474')
call_5635 = func_4472_call()
call_5636 = func_4472_call()
uop_5663 = relay.acos(call_5635.astype('float64')) # shape=(4, 9, 8)
uop_5665 = relay.acos(call_5636.astype('float64')) # shape=(4, 9, 8)
output = uop_5663
output2 = uop_5665
func_5668 = relay.Function([], output)
mod['func_5668'] = func_5668
mod = relay.transform.InferType()(mod)
output = func_5668()
func_5669 = relay.Function([], output)
mutated_mod['func_5669'] = func_5669
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5717 = relay.var("var_5717", dtype = "float64", shape = (15, 16, 5))#candidate|5717|(15, 16, 5)|var|float64
uop_5718 = relay.sin(var_5717.astype('float64')) # shape=(15, 16, 5)
func_4900_call = mod.get_global_var('func_4900')
func_4903_call = mutated_mod.get_global_var('func_4903')
var_5723 = relay.var("var_5723", dtype = "float64", shape = (1056, 1))#candidate|5723|(1056, 1)|var|float64
call_5722 = relay.TupleGetItem(func_4900_call(relay.reshape(var_5723.astype('float64'), [1056,])), 2)
call_5724 = relay.TupleGetItem(func_4903_call(relay.reshape(var_5723.astype('float64'), [1056,])), 2)
uop_5729 = relay.sigmoid(uop_5718.astype('float32')) # shape=(15, 16, 5)
func_1699_call = mod.get_global_var('func_1699')
func_1701_call = mutated_mod.get_global_var('func_1701')
var_5735 = relay.var("var_5735", dtype = "int64", shape = (3360,))#candidate|5735|(3360,)|var|int64
call_5734 = relay.TupleGetItem(func_1699_call(relay.reshape(var_5735.astype('int64'), [16, 15, 14])), 0)
call_5736 = relay.TupleGetItem(func_1701_call(relay.reshape(var_5735.astype('int64'), [16, 15, 14])), 0)
output = relay.Tuple([call_5722,var_5723,uop_5729,call_5734,var_5735,])
output2 = relay.Tuple([call_5724,var_5723,uop_5729,call_5736,var_5735,])
func_5740 = relay.Function([var_5717,var_5723,var_5735,], output)
mod['func_5740'] = func_5740
mod = relay.transform.InferType()(mod)
var_5741 = relay.var("var_5741", dtype = "float64", shape = (15, 16, 5))#candidate|5741|(15, 16, 5)|var|float64
var_5742 = relay.var("var_5742", dtype = "float64", shape = (1056, 1))#candidate|5742|(1056, 1)|var|float64
var_5743 = relay.var("var_5743", dtype = "int64", shape = (3360,))#candidate|5743|(3360,)|var|int64
output = func_5740(var_5741,var_5742,var_5743,)
func_5744 = relay.Function([var_5741,var_5742,var_5743,], output)
mutated_mod['func_5744'] = func_5744
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4472_call = mod.get_global_var('func_4472')
func_4474_call = mutated_mod.get_global_var('func_4474')
call_5769 = func_4472_call()
call_5770 = func_4472_call()
uop_5780 = relay.log10(call_5769.astype('float32')) # shape=(4, 9, 8)
uop_5782 = relay.log10(call_5770.astype('float32')) # shape=(4, 9, 8)
output = relay.Tuple([uop_5780,])
output2 = relay.Tuple([uop_5782,])
func_5783 = relay.Function([], output)
mod['func_5783'] = func_5783
mod = relay.transform.InferType()(mod)
mutated_mod['func_5783'] = func_5783
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5783_call = mutated_mod.get_global_var('func_5783')
call_5784 = func_5783_call()
output = call_5784
func_5785 = relay.Function([], output)
mutated_mod['func_5785'] = func_5785
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4835_call = mod.get_global_var('func_4835')
func_4837_call = mutated_mod.get_global_var('func_4837')
call_5815 = relay.TupleGetItem(func_4835_call(), 0)
call_5816 = relay.TupleGetItem(func_4837_call(), 0)
func_4172_call = mod.get_global_var('func_4172')
func_4175_call = mutated_mod.get_global_var('func_4175')
var_5851 = relay.var("var_5851", dtype = "float32", shape = (1, 840))#candidate|5851|(1, 840)|var|float32
var_5852 = relay.var("var_5852", dtype = "uint16", shape = (624,))#candidate|5852|(624,)|var|uint16
call_5850 = relay.TupleGetItem(func_4172_call(relay.reshape(var_5851.astype('float32'), [15, 8, 7]), relay.reshape(var_5852.astype('uint16'), [624,]), ), 1)
call_5853 = relay.TupleGetItem(func_4175_call(relay.reshape(var_5851.astype('float32'), [15, 8, 7]), relay.reshape(var_5852.astype('uint16'), [624,]), ), 1)
const_5856 = relay.const([2.963786,8.554237,6.694825,-3.731897,7.800224,1.741312,-6.691672,7.745939,0.140667,9.069682,-6.078859,-0.929643,-1.750656,0.387272,3.325356,6.246751,-1.615304,-1.632678,-5.875088,-2.427820,0.869827,-7.666275,-7.063651,9.818629,-0.169677,-2.592538,-4.380194,-5.345888,2.571616,8.444786,-7.820881,1.623445,2.016383,-5.386693,4.131919,0.733584,7.077303,-6.535721,-2.286615,3.612803,8.921589,8.872626,-0.765499,-0.448778,-2.384690,4.995854,-2.116971,7.720944,-1.417344,3.726709,-1.156597,-0.808355,-9.111733,9.054460,-5.554908,7.689382,-5.686512,-7.262800,-4.362098,0.484641,-3.905278,6.294398,8.359435,8.870946,5.526804,0.309474,5.800203,3.492538,1.034182,-2.229558,5.924723,6.536632,3.991439,-8.299359,-6.149768,-2.066692,-4.732405,8.799412,-3.268875,-9.984053,9.339348,-9.431467,1.537849,7.014886,-2.948045,8.470439,6.863075,-0.714565,-2.793717,6.998379,-9.444752,6.033017,9.378261,-3.022844,1.290673,9.560708,7.333803,-0.192292,8.083817,0.171905,6.199993,6.501851,9.863306,2.073905,5.313205,-7.835640,-5.398075,-0.041611,-7.104540,-7.711402,7.049297,-6.266927,4.361436,-2.572927,-6.326777,-5.270938,-5.360273,5.218122,8.835674,1.189913,4.117586,-0.724941,8.318975,8.088290,-4.351851,-9.256741,-3.613694,-2.447639,7.133911,-1.399934,-5.539371,8.299263,2.488498,-6.948125,-2.478256,2.012957,6.208413,8.728295,-7.066240,-1.434928,-1.866136,1.809829,9.222080,-3.667934,-2.282210,5.687980,-3.860167,4.422704,6.094600,-3.175243,4.176123,2.011892,-6.640283,9.395861,7.528280,1.792081,-4.419013,-8.123717,-4.444028,-8.382483,-7.144845,7.699715,4.940959,-9.589711,-5.061523,-6.835583,-8.783167,-3.170651,-5.745418,0.733112,4.097914,-0.158072,2.961916,0.019633,6.088171,-3.567630,5.952448,-5.188564,-4.546767,2.823280,-0.004698,-7.276820,9.895812,9.263158,7.948436,-5.512650,8.359950,-2.302734,6.881123,-9.019786,-4.385728,-4.339639,-7.536195,-0.764312,8.906189,4.870559,6.248158,-5.602404,-5.290661,-0.852860,3.273981,-9.966059,5.904983,8.432846,-5.241724,-5.096125,6.428517,8.127068,0.016979,-3.780181,4.092451,-7.172736,-5.672991,-0.856423,-1.147975,-9.079949,5.970582,-6.331358,0.271203,6.389960,9.291183,-6.003749,7.967326,-0.715607,3.610239,4.719165,-5.828058,0.719186,2.236242,5.598702,5.820632,3.299932,-3.392786,3.611236,5.381607,-9.558171,-1.289447,7.238396,-5.079172,1.848447,3.199713,-7.127357,-2.899546,-0.399951,3.738335,-5.282586,9.615689,7.669170,4.622841,7.455794,-0.136609,-3.588625,3.284843,-5.593105,2.196356,2.349740,-6.324144,1.991411,-4.734904,-0.825653,2.215429,-5.526532,-6.394784,8.907536,-8.420773,3.642208,-8.526527,-9.916807,4.505388,0.517761,-2.892501,4.803590,-1.721956,8.329471,-6.298141,3.619949,-1.560930,-9.631527,8.036687,4.516385,9.090212,-6.391573,-1.520589,4.268602,5.765773,-7.103017,0.124909,2.542210,-4.607109,-0.616405,-4.484972,2.294231,3.693118,-9.442032,3.251157,8.258643,-1.980277,-8.596158,-8.843932,-2.978701,-0.136858,1.892261,4.229206,5.642328,6.486102,-4.423266,1.623483,1.345429,-3.883314,-3.975520,2.346978,-0.365604,8.242226,-2.499968,-9.171428,-7.789352,9.890531,-7.857177,-8.005582,1.062754,-3.052695,6.024496,8.756415,-5.905519,-1.087034,4.295065,-0.844125,4.572069,-2.385130,2.731279,7.712791,4.033658,5.434665,8.795017,1.647163,-6.088870,-2.162703,-6.087288,-7.120980,6.935126,7.856738,-4.372781,-3.474087,6.020622,8.420055,2.162171,-8.891074,2.475249,6.875187,7.505811,8.562384,-3.736038,-9.460863,8.417030,0.234754,3.438570,1.483453,8.904034,-6.363735,-4.922139,4.920118,-1.560312,-1.988570,-6.367804,-7.232814,3.380338,7.763881,2.472278,-8.850185,-0.265197,-2.601283,-0.434904,6.151737,2.034185,-4.659951,3.762065,-8.953404,-6.606744,0.180579,-1.182230,-7.833591,-6.670359,9.358588,8.280895,-1.407358,0.686252,-5.979949,5.973440,1.663808,5.437287,-8.994298,-4.074423,-6.598325,-5.415162,1.327183,8.310795,-4.974996,9.124872,8.629098,5.848959,-0.095877,-5.890990,-8.961280,-1.831377,3.707589,3.759347,-2.327024,-3.158035,-5.406786,-8.773040,9.795851,-0.307039,1.322490,5.101916,-4.020258,8.222648,3.513817,3.878541,2.465778,-0.088007,4.931907,-6.986272,0.478730,-5.650015,8.909466,3.087539,-1.467380,-8.447665,4.969680,3.837176,-5.833551,-0.470261,-4.506508,0.724625,9.615389,-5.499967,-7.105098,-1.243699,2.245336,6.842187,2.381053,5.105164,-2.032695,-9.598074,0.994495,-4.055876,-7.353094,-2.119198,-2.751679,-9.634670,2.678387,5.284301,8.132530,4.739275,-8.397924,-4.340102,8.110412,-4.563687,2.480234,2.858059,-3.258719,5.785821,-3.752475,2.085731,8.376021,-1.672941,2.544981,-4.578994,5.168994,4.013779,2.377705,1.248689,-3.112448,-4.740146,-4.298894,-1.652016,4.544812,1.660011,2.176427,1.134364,-5.230134,3.962690,5.466895,3.771999,9.022139,-3.327744,-5.411044,6.252686,3.064073,-4.090194,3.397846,-0.821661,-0.003782,-4.982510,7.981484,1.602346,2.941942,5.017818,-2.123640,1.537711,1.913392,-7.642977,-6.111224,-0.615747,-3.132843,4.137837,-5.878974,-7.706360,-7.191775,-4.216038,-5.625610,0.324983,8.192127,-8.378538,5.936119,7.955994,-9.832248,-5.340032,-2.155107,-9.023859,-1.766112,-3.418218,-8.242182,5.517401,-9.678222,-9.969627,8.097549,-3.836791,-9.975450,1.261580,0.755996,-9.625031,-7.722170,-5.316417,-4.784406,3.237927,-8.293295,3.564804,9.119826,0.081429,-4.471553,-9.132140,-2.024824,-6.499844,-7.717243,-9.165004,0.432679,3.332290,-1.615673,-2.301685,-1.310886,3.066868,4.990191,5.656307,0.258153,-3.857159,-2.526854,-6.638871,-8.242159,1.915586,-5.332294,-5.080699,3.006079,8.587704,3.160066,-5.807170,-5.551087,-6.826831,-0.452752,-4.711012,6.505603,8.661143,4.060290,-5.063451,7.558481,-8.821192,2.171124,7.734659,-3.922482,-4.434096,-7.186929,-7.951344,-1.332240,-9.771944,-4.856930,6.782120,-3.747860,-1.669755,-7.711606,6.008171,-3.431622,6.573447,-3.322990,-5.121694,3.514260,-3.703931,5.502904,-8.496913,1.281729,-2.684894,5.574934,3.243529,5.106677,-4.202744,-9.969795,7.683782,4.035390,0.158303,4.266393,5.611116,-0.700561,-4.944914,-2.198506,-7.395654,5.041947,1.341987,-8.792503,-8.228010,-3.254143,0.305400,-6.683783,-8.092637,3.813978,4.711922,9.602015,5.549717,-0.462647,-5.799031,5.026118,5.725703,6.978121,5.069480,1.315148,7.683830,-9.287770,0.650929,0.272212,7.303423,6.195975,4.576581,8.955777,-7.309164,-6.609719,-7.373364,3.584876,1.937961,-4.561705,-6.231104,-6.092570,-3.424720,-6.690184,-5.594330,4.878313,-8.730433,-7.267817,8.677962,7.889723,-2.548253,-3.255887,6.006546,-9.372602,6.424070,2.883839,-2.646079,7.551051,8.492630,-8.548331,-2.447452,0.064710,-8.286605,-5.989135,9.368228,-0.967218,-2.950403,-0.757912,-2.191553,-4.542466,2.552215,-3.532204,7.248908,-0.131524,4.048030,-3.625513,-2.277987,0.626246,-9.897241,2.324059,2.396872,9.117239,-0.541354,8.251521,-1.235802,-3.242016,9.724197,8.858650,4.709995,0.633481,7.971180,-5.648725,1.248442,-7.982982,1.029022,7.398668,3.434616,-6.615558,-0.411538,0.899857,8.556932,3.381812,-8.083601,-4.802205,-3.946391,-9.812713,9.325478,-5.029832,-8.189389,-2.448048,-3.904394,-9.816557,-1.187821,6.961372,-8.263800,3.381359,8.535130,1.105150,-3.204577,5.522829,9.354621,-9.707876,-0.908219,-0.997918,8.774988,-9.144588,-5.846195,-5.485626,-0.510976,-6.449405,-3.699791,-6.707556,-6.886442,5.902232,9.439280,9.500043,-1.371824,-1.408908,-7.360676,-9.880938,3.814041,5.935047,9.458186,6.343887,-1.307658,9.279886,1.547735,-0.935537,2.235717,-0.584448,-0.372189,4.179774,3.420343,2.551106,-7.233407,-2.937500,-0.362867,-9.507709,5.794191,5.343224,8.948075,-5.192875,2.038455,-0.563220,-7.040498,2.020700,-5.415921,6.884645,-4.276084,-8.006592,-2.296378,4.196904,-2.388264,8.198156,8.995811,8.932122,8.970179,3.677765,-3.433630,3.437505,4.899950,7.986305,6.388188,0.899929,9.150223,7.976199,-7.676754,3.114323,-6.521682,-6.300718,7.384243,-6.904851,4.577363,1.823145,2.361919,-5.169449,-0.245885,-9.782623,3.023825,8.196295,4.763367,-4.668874,5.004363,4.894340,-9.876662,8.374878,9.632050,-9.089866,-1.396815,9.859399,-1.997709,-2.016235,1.317783,9.756598,-2.437044,-9.460005,0.638189,-5.295696,-2.261587,-0.681964,2.451643,-5.211570,0.330369,-5.888968,8.937038,5.533435,4.545495,-3.202536,-3.276266,1.765310,-0.179082,0.616598,1.429063,7.750705,2.005596,-7.415469,8.006997,5.883361,-2.593671,-8.225965,8.661475,5.782888,2.030442,-7.869907,9.669445,0.174584,8.453516,5.197438,-8.363950,-6.788991,-2.405576,-4.266471,7.975331,-7.984604,8.900518,6.715750,-0.038977,-0.708416,-6.421005,-9.885838,-2.205364,-5.413564,-5.094989,-0.088703,-4.336970,-7.837534,-0.193616,-3.043184,-4.356257,0.720885,-1.886470,0.340234,6.443396,-7.138862,-7.815058,-2.169798,-5.256244,-9.590822,-0.626978,7.905480,5.222274,-4.101553,7.961570,3.560361,0.293711,0.451680,-3.983591,5.120296,-5.403912,6.928883,-9.310265,-6.242681,-6.115966,4.029988,6.153146,4.507336,-8.390977,-4.890430,4.839725,8.560170,-6.462276,-9.928572,0.637274,6.554528,2.676867,-3.710456,-6.954148,8.757192,2.808017,7.491630,2.322420,9.319548,-8.404518,0.561036,-0.580592,0.586575,-2.012841,4.985880,1.066853,1.735541,9.810210,-1.734033,-1.654318,0.217539,-3.699537,2.674919,1.270531,3.600201,-1.232118,7.919831,1.395363,-5.397900,-6.750744,-0.698216,-9.519578,2.534093,4.653213,9.306960,1.568961,-7.484163,6.215155,6.175134,-4.094112,1.109598,-5.386544,4.281357,6.718647,1.503853,8.385827,7.007078,7.430775,-9.124521,-4.262195,6.456583,-6.001319,7.971424,9.385855,-4.740605,5.431436,-9.487326,3.132464,2.790783,9.457159,-4.341342,-7.310978,-8.886991,-5.053370,0.919987,-2.563289,-8.574662,-9.836619,2.888159,8.289965,0.942254,8.693219,-4.890503,-3.584533,7.275532,-4.475718,-6.122564,2.807542,-1.823700,5.747256,-9.278669,-2.273970,-1.403336,-3.718614,-0.442510,-8.410258,-9.481601,-4.963653,-4.487122,-6.229387,-6.677136,1.787898,-7.828122,-9.422583,8.631174,-7.995662,6.141105,-4.059957,8.343650,2.039385,-0.680218,7.086989,0.739053,9.835926,-2.467446,6.558682,-5.191131,-4.980173,4.770199,-1.986518,-7.116911,-0.507178,5.737541,-9.391755,3.312843,6.019093,8.718500,-1.577550,-5.387240,-2.589656,-2.786813,4.751475,-4.747252,4.717950,-5.937097,-9.637824,-5.631007,9.054654,-1.128451,-1.244778], dtype = "float64")#candidate|5856|(1040,)|const|float64
bop_5857 = relay.mod(call_5850.astype('float32'), relay.reshape(const_5856.astype('float32'), relay.shape_of(call_5850))) # shape=(1040,)
bop_5860 = relay.mod(call_5853.astype('float32'), relay.reshape(const_5856.astype('float32'), relay.shape_of(call_5853))) # shape=(1040,)
uop_5894 = relay.asin(call_5850.astype('float64')) # shape=(1040,)
uop_5896 = relay.asin(call_5853.astype('float64')) # shape=(1040,)
output = relay.Tuple([call_5815,var_5851,var_5852,bop_5857,uop_5894,])
output2 = relay.Tuple([call_5816,var_5851,var_5852,bop_5860,uop_5896,])
func_5909 = relay.Function([var_5851,var_5852,], output)
mod['func_5909'] = func_5909
mod = relay.transform.InferType()(mod)
mutated_mod['func_5909'] = func_5909
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5909_call = mutated_mod.get_global_var('func_5909')
var_5911 = relay.var("var_5911", dtype = "float32", shape = (1, 840))#candidate|5911|(1, 840)|var|float32
var_5912 = relay.var("var_5912", dtype = "uint16", shape = (624,))#candidate|5912|(624,)|var|uint16
call_5910 = func_5909_call(var_5911,var_5912,)
output = call_5910
func_5913 = relay.Function([var_5911,var_5912,], output)
mutated_mod['func_5913'] = func_5913
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4472_call = mod.get_global_var('func_4472')
func_4474_call = mutated_mod.get_global_var('func_4474')
call_5917 = func_4472_call()
call_5918 = func_4472_call()
var_5946 = relay.var("var_5946", dtype = "uint64", shape = (4, 9, 8))#candidate|5946|(4, 9, 8)|var|uint64
bop_5947 = relay.bitwise_xor(call_5917.astype('int32'), relay.reshape(var_5946.astype('int32'), relay.shape_of(call_5917))) # shape=(4, 9, 8)
bop_5950 = relay.bitwise_xor(call_5918.astype('int32'), relay.reshape(var_5946.astype('int32'), relay.shape_of(call_5918))) # shape=(4, 9, 8)
output = relay.Tuple([bop_5947,])
output2 = relay.Tuple([bop_5950,])
func_5958 = relay.Function([var_5946,], output)
mod['func_5958'] = func_5958
mod = relay.transform.InferType()(mod)
mutated_mod['func_5958'] = func_5958
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5959 = relay.var("var_5959", dtype = "uint64", shape = (4, 9, 8))#candidate|5959|(4, 9, 8)|var|uint64
func_5958_call = mutated_mod.get_global_var('func_5958')
call_5960 = func_5958_call(var_5959)
output = call_5960
func_5961 = relay.Function([var_5959], output)
mutated_mod['func_5961'] = func_5961
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4212_call = mod.get_global_var('func_4212')
func_4213_call = mutated_mod.get_global_var('func_4213')
call_5963 = func_4212_call()
call_5964 = func_4212_call()
func_4404_call = mod.get_global_var('func_4404')
func_4406_call = mutated_mod.get_global_var('func_4406')
call_5966 = func_4404_call()
call_5967 = func_4404_call()
output = relay.Tuple([call_5963,call_5966,])
output2 = relay.Tuple([call_5964,call_5967,])
func_5993 = relay.Function([], output)
mod['func_5993'] = func_5993
mod = relay.transform.InferType()(mod)
output = func_5993()
func_5994 = relay.Function([], output)
mutated_mod['func_5994'] = func_5994
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5783_call = mod.get_global_var('func_5783')
func_5785_call = mutated_mod.get_global_var('func_5785')
call_6001 = relay.TupleGetItem(func_5783_call(), 0)
call_6002 = relay.TupleGetItem(func_5785_call(), 0)
func_4822_call = mod.get_global_var('func_4822')
func_4824_call = mutated_mod.get_global_var('func_4824')
call_6006 = relay.TupleGetItem(func_4822_call(), 1)
call_6007 = relay.TupleGetItem(func_4824_call(), 1)
func_486_call = mod.get_global_var('func_486')
func_488_call = mutated_mod.get_global_var('func_488')
var_6027 = relay.var("var_6027", dtype = "float64", shape = (1040,))#candidate|6027|(1040,)|var|float64
call_6026 = relay.TupleGetItem(func_486_call(relay.reshape(var_6027.astype('float64'), [13, 8, 10])), 0)
call_6028 = relay.TupleGetItem(func_488_call(relay.reshape(var_6027.astype('float64'), [13, 8, 10])), 0)
output = relay.Tuple([call_6001,call_6006,call_6026,var_6027,])
output2 = relay.Tuple([call_6002,call_6007,call_6028,var_6027,])
func_6032 = relay.Function([var_6027,], output)
mod['func_6032'] = func_6032
mod = relay.transform.InferType()(mod)
var_6033 = relay.var("var_6033", dtype = "float64", shape = (1040,))#candidate|6033|(1040,)|var|float64
output = func_6032(var_6033)
func_6034 = relay.Function([var_6033], output)
mutated_mod['func_6034'] = func_6034
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5783_call = mod.get_global_var('func_5783')
func_5785_call = mutated_mod.get_global_var('func_5785')
call_6041 = relay.TupleGetItem(func_5783_call(), 0)
call_6042 = relay.TupleGetItem(func_5785_call(), 0)
output = call_6041
output2 = call_6042
func_6047 = relay.Function([], output)
mod['func_6047'] = func_6047
mod = relay.transform.InferType()(mod)
mutated_mod['func_6047'] = func_6047
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6047_call = mutated_mod.get_global_var('func_6047')
call_6048 = func_6047_call()
output = call_6048
func_6049 = relay.Function([], output)
mutated_mod['func_6049'] = func_6049
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4323_call = mod.get_global_var('func_4323')
func_4325_call = mutated_mod.get_global_var('func_4325')
call_6139 = func_4323_call()
call_6140 = func_4323_call()
output = relay.Tuple([call_6139,])
output2 = relay.Tuple([call_6140,])
func_6145 = relay.Function([], output)
mod['func_6145'] = func_6145
mod = relay.transform.InferType()(mod)
output = func_6145()
func_6146 = relay.Function([], output)
mutated_mod['func_6146'] = func_6146
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4472_call = mod.get_global_var('func_4472')
func_4474_call = mutated_mod.get_global_var('func_4474')
call_6163 = func_4472_call()
call_6164 = func_4472_call()
func_486_call = mod.get_global_var('func_486')
func_488_call = mutated_mod.get_global_var('func_488')
var_6169 = relay.var("var_6169", dtype = "float64", shape = (1040,))#candidate|6169|(1040,)|var|float64
call_6168 = relay.TupleGetItem(func_486_call(relay.reshape(var_6169.astype('float64'), [13, 8, 10])), 1)
call_6170 = relay.TupleGetItem(func_488_call(relay.reshape(var_6169.astype('float64'), [13, 8, 10])), 1)
var_6186 = relay.var("var_6186", dtype = "float64", shape = (14, 30))#candidate|6186|(14, 30)|var|float64
bop_6187 = relay.divide(call_6168.astype('float32'), var_6186.astype('float32')) # shape=(14, 30)
bop_6190 = relay.divide(call_6170.astype('float32'), var_6186.astype('float32')) # shape=(14, 30)
output = relay.Tuple([call_6163,var_6169,bop_6187,])
output2 = relay.Tuple([call_6164,var_6169,bop_6190,])
func_6191 = relay.Function([var_6169,var_6186,], output)
mod['func_6191'] = func_6191
mod = relay.transform.InferType()(mod)
mutated_mod['func_6191'] = func_6191
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6191_call = mutated_mod.get_global_var('func_6191')
var_6193 = relay.var("var_6193", dtype = "float64", shape = (1040,))#candidate|6193|(1040,)|var|float64
var_6194 = relay.var("var_6194", dtype = "float64", shape = (14, 30))#candidate|6194|(14, 30)|var|float64
call_6192 = func_6191_call(var_6193,var_6194,)
output = call_6192
func_6195 = relay.Function([var_6193,var_6194,], output)
mutated_mod['func_6195'] = func_6195
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5382_call = mod.get_global_var('func_5382')
func_5383_call = mutated_mod.get_global_var('func_5383')
call_6220 = func_5382_call()
call_6221 = func_5382_call()
func_5559_call = mod.get_global_var('func_5559')
func_5560_call = mutated_mod.get_global_var('func_5560')
call_6230 = relay.TupleGetItem(func_5559_call(), 0)
call_6231 = relay.TupleGetItem(func_5560_call(), 0)
output = relay.Tuple([call_6220,call_6230,])
output2 = relay.Tuple([call_6221,call_6231,])
func_6238 = relay.Function([], output)
mod['func_6238'] = func_6238
mod = relay.transform.InferType()(mod)
mutated_mod['func_6238'] = func_6238
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6238_call = mutated_mod.get_global_var('func_6238')
call_6239 = func_6238_call()
output = call_6239
func_6240 = relay.Function([], output)
mutated_mod['func_6240'] = func_6240
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6255 = relay.var("var_6255", dtype = "float32", shape = (5, 12, 6))#candidate|6255|(5, 12, 6)|var|float32
uop_6256 = relay.rsqrt(var_6255.astype('float32')) # shape=(5, 12, 6)
func_3588_call = mod.get_global_var('func_3588')
func_3594_call = mutated_mod.get_global_var('func_3594')
var_6261 = relay.var("var_6261", dtype = "int32", shape = (1, 336))#candidate|6261|(1, 336)|var|int32
const_6262 = relay.const([-6,-1,-6,10,6,10,-5,4,-9,-3,-3,-10,8,5,2,-9,5,-9,-6,-4,-3,10,9,7,8,-6,4,-7,-10,2,-8,-2,-3,-3,2,-9,-10,-4,-2,8,3,-5,2,7,6,-3,2,-5,-4,4,-6,2,4,6,7,8,-7,-6,6,-10,5,-5,7,-4,2,9,-2,5,-7,2,6,5,-4,4,-6,-2,-6,-2,9,-3,3,-9,3,1,-7,-7,2,8,-4,-5,5,-3,-4,-3,10,-2,-10,-10,-6,-6,-3,-8,6,2,-8,-10,2,-5,8,-9,-8,3,-3,2,5,4,10,4,8,5,3,-3,9,-3,-8,5,-5,-3,-3,-10,2,6,-8,7,10,-3,7,10,-4,3,7,-5,10,5,-2,2,10,5,2,-3,-3,-5,-2,8,-10,-7,1,-3,9,-4,4,-4,-6,2,2,8,4,10,8,4,-7,7,3,10,-8,5,-10,6,-2,4,6,1,-5,5,-9,5,10,-5,-4,4,-9,5,10,5,-10,5,-1,5,9,1,-1,-5,8,3,-5,5,-8,5,-2,1,9,9,6,6,-5,5,-5,6,-10,-7,-8,1,3,-5,4,8,-3,3,-10,-5,10,-1,-8,-10,8,5,2,-3,10,1,-3,9,-5,-5,3,-9,10,8,9,-6,7,-4,-7,-7,4,-3,8,-4,4,7,-9,-10,6,-7,-8,-3,-4,8,-1,-8,-3,-3,3,-4,-7,6,-7,5,6,10,6,-1,-10,4,1,8,3,7,-9,2,-1,-3,5,-2,1,7,7,8,6,-3,-5,3,2,-3,8,-6,6,-7,-9,-5,3,6,7,-1,7,10,-3,-10,-2,6,2,8,3,-10,4,-1,-7,-9,4,-7,-2,-4,1,-1,-9,-2,-3,1,-6,8,-8,7,7,-10,-5,-3,8,-3,-1,2,5,1,4,4,4,-10,-1,6,2,-1,4,6,-1,-9,-7,-2,-6,-8,6,-10,4,-3,-6,2,-4,7,-7,8,-5,-10,-1,-5,-9,5,7,-8,-5,5,-9,-1,10,-10,2,4,-6,-10,-9,4,-7,5,-6,2,-1,5,4,2,-8,10,10,-7,-8,-5,-1,-7,8,2,-3,5,3,-4,8,10,8,-5,-6,7,3,-3,1,-5,-1,10,3,-8,7,-5,9,10,7,-8,-2,-9,6,-9,3,5,1,8,3,10,9,7,-3,7,-6,5,9,1,9,4,2,-7,-7,6,-2,-1,4,-1,7,-6,-5,9,4,-3,9,-4,9,5,8,-7,8,3,8,-6,4,-9,3,-6,9,-2,7,3,-9,3,8,8,-1,-9,-7,-5,-8,-1,-4,8,6,-6,-5,-10,-5,-2,4,10,-2,-4,3,9,6,2,9,-7,-1,-8,10,-3,-1,-10,6,10,-9,7,6,3,10,-3,-7,-3,-3,-5,9,10,4,6,-9,7,1,-2,-2,10,-10,10,-3,-6,-6,-9,-8,6,10,1,10,-9,-4,7,-6,1,-10,-3,-5,-9,-9,-5,-1,10,-5,-1,3,-6,-1,-4,-2,10,5,6,4,3,8,-2,-1,10,-7,2,1,6,5,-6,6,-10,1,3,5,-9,-3,2,7,-1,1,4,-3,1,-10,-4,2,7,2,-9,5,-10,2,2,3,4,9,5,6,-2,4,-3,4,2,-2,-4,10,3,5,-1,-1,4,3,-5,-7,5,5,-10,10,4,4,8,4,-7,-9,9,5,1,5,7,3,5,-4,6,8,7,-1,-9,-6,-4,-7,4,-6,-10,-1,5,10,3,-7,-7,2,-1,9,-6,6,-10,2,-5,-9,9,3,-5,4,-7,10,7,10,-4,8,1,-1,7,5,4,-8,-5,9,-3,1,-5,4,2,2,10,-10,-5,4,-4,5,-4,-3,3,-10,-4,-6,9,-2,3,-8,5,-8,9,-4,2,3,4,6,9,-6,6,-3,-4,-7,-1,2,5,8,-3,-8,-4,2,8,-7,-3,-9,7,-3,7,7,-6,-3,10,-4,-6,9,-5,9,-10,-10,1,1,1,8,5,5,-6,-2,-4,9,-9,9,1,9,4,6,1,1,3,-10,-5,-2,7,-7,-10,-8,-7,5,5,-9,3,4,5,6,7,8,4,4,4,10,-8,-5,9,4,5,-3,-1,2,4,-3,5,2,-9,-1,-8,7,3,-2,3,4,-9,8,-6,5,-10,1,-8,-7,1,-10,-10,6,10,-4,6,-2,-9,-5,3,-6,-8,2,-2,-3,-8,-4,1,-2,10,7,-7,10,-9,2,-7,-7,-9,-9,8,6,8,-4,9,-1,3,-2,-8,8,-7,1,1,9,7,-1,-1,-2,-6,-9,4,4,9,-10,8,4,8,-1,5,9,9,8,-8,8,-7,-10,8,-8,10,4,4,5,-3,-1,8,10,-1,-7,9,2,4,-8,-6,9,-4,5,-9,2,-9,-10,-4,-2,9,3,-7,-5,-8,1,-9,9,-3,3,-5,6,9,-10,-8,-7,4,-6,-6,-9,-4,-8,3,10,4,-2,10,4,5,2,8,10,-9,2,7,-10,4,-6,7,-6,9,9,-5,-9,-7,-4,10,7,-8,7,-2,6,6,6,-10,-2,8,10,-4,-6,8,6,-1,9,3,7,-4,-3,7,-4,2,5,9,5,-4,4,10,2,-4,3,7,-5,2,-3,-7,-3,-3,9,6,5,7,-2,1,8,-4,-5,10,-6,-7,-9,-6,-3,5,-2,8,-2,9,1,9,7,10,-6,1,-1,1,-3,4,-7,-10,1,6,-4,-7,-7,2,-10,6,-3,10,-5,5,9,6,10,4,-5,-5,7,1,8,8,8,-4,10,8,-6,-5,-4,-10,6,-10,-6,9,-6,-7,-6,2,8,-8,1,-8,-8,-3,-4,1,-9,-3,5,-6,4,5,8,-5,-3,-9,-8,-3,-9,-3,9,5,4,-3,-9,9,-4,-3,-4,-3,3,3,-8,-8,-3,10,-4,2,-2,-8,-3,6,3,-2,-10,-4,-6,4,5,10,2,10,6,5,-6,-1,-2,-8,8,2,6,3,-4,5,9,-5,-5,1,8,9,1,-7,-9,-7,-7,-9,2,-3,8,-6,-3,-2,-8,10,-8,-2,-3,1,-3,2,-5,3,2,-6,5,-9,-2,9,-3,8,9,10,8,-5,10,-3,6,-2,5,1,9,8,-1,3,-5,-5,10,8,7,-3,9,-1,3,5,3,-7,8,-8,-4,2,10,6,5,2,-7,10,-10,-3,6,2,-6,4,6,-10,2,2,1,4,3,-9,-8,8,-10,2,1,-7,-4,-8,2,-3,-3,-8,4,-2,7,-9,10,4,10,-8,-9,5,-6,4,-2,4,-1,-10,4,1,-5,6,-10,5,-8,1,6,3,-1,-1,3,8,6,10,-2,-3,3,-2,2,5,2,9,1,1,-8,-7,-6,6,5,-3,-9,5,6,7,7,-9,-5,9,10,-8,-10,9,1,9,-1,6,1,-2,-1,6,-10,-8,-3,10,7,-2,-4,5,8,3,8,-1,-1,5,-3,-9,-6,-5,6,-2,5,1,7,-7,10,4,7,5,8,9,3,-4,9,-7,7,7,7,3,2,7,-10,-9,8,-5,6,-10,4,-7,3,7,7,-4,-9,-6,-9,-4,6,5,9,-2,8,5,6,-4,-8,-1,-4,-9,3,8,10,2,5,-2,9,-1,-4,8,8,8,-4,3,5,-5,-7,4,-4,5,-4,-6,-9,-10,3,4,2,1,3,8,-4,-10,-5,-8,9,-8,10,-5,-1,3,-3,-9,-9,2,2,1,2,-9,-4,-6,10,-7,10,-1,-7,6,1,8,6,1,-2,6,-4,3,-1,2,-4,4,-2,-4,-9,-2,6,8,10,9,-4,5,7,-7,-6,-10,9,-2,-8,2,7,-6,2,4,-7,-3,6,-10,-6,1,-9,2,-6,-1,-3,2,4,4,5,-9,8,3,2,7,2,9,1,-9,6,-1,-4,-10,2,6,1,-10,-9,-3,6,-8,9,2,-9,-5,3,-5,-1,-5,8,-10,9,7,3,-9,-1,-9,-2,-10,-2,-7,3,1,-6,4,-10,-4,6,-6,-3,-8,-10,7,-10,5,2,-8,-4,8,5,-8,8,-5,3,-1,-6,1,10,10,-4,1,-8,10,7,-4,10,9,-3,-2,6,5,4,8,3,-5,4,3,-4,6,3,-6,-5,10,-9,-6,-8,5,-6,-8,-2,6,-7,-9,-5,4,8,-10,-3,1,-5,-7,6,4,4,3,-5,3,9,4,-9,-4,8,-8,-6,-3,5,-5,1,-3,3,2,-4,-9,6,-8,4,10,8,3,6,-7,7,2,-1,-4,2,2,10,2,9,-9,-4,2,-8,5,2,-6,4,-8,6,1,7,-5,-7,3,9,-8,2,4,-7,-3,-1,-8,9,-1,-8,-3,8,-4,-7,10,10,10,7,9,2,-3,-2,-7,-8,6,-1,-1,-8,-3,-3,-2,10,-2,-5,3,6,10,8,9,-6,-2,-3,-5,9,4,10,4,10,-6,-8,2,-4,9,10,10,2,-2,-6,-4,4,8,5,-3,-7,-10,8,6,-6,8,5,-3,-9,-2,3,-1,-5,10,-2,-5,-4,3,-8,-5,-5,10,10,-9,-8,5,6,-8,-6,10,-1,-6,-1,6,7,-4,6,-4,-7,5,-1,-7,-8,-7,3,-2,-4,1,9,-7,-9,-9,-4,1,-6,-9,9,-6,-2,1,10,-4,-6,-10,-10,-1,7,-6,-5,-6,-7,9,-2,-3,8,2,1,-4,10,-2,-10,-1,-3,10,6,-10,-1,-9,4,9,-9,-1,8,-7,-9,9,4,-8,7,-4,4,-7,2,9,-1,-7,-1,1,2,-6,-1,-10,-2,-9,-8,3,-8,8,10,4,-6,-2,-1,-6,2,-6,4,-5,4,-9,-10,4,-5,-6,2,6,2,6,-2,-8,2,-7,-8,7,10,-6,-10,-6,7,-2,3,6,8,1,-4,-6,1,-7,10,4,-1,10,-5,6,2,10,8,3,9,7,4,-10,-9,-5,2,-8,-4,-2,-7,-10,8,6,-5,3,-4,-5,-6,-5,-3,-3,-2,8,1,4,10,-9,-3,4,4,9,-10,8,1,-2,-4,1,-7,-3,-1,-8,-10,-9,2,8,-3,-5,3,-10,5,-1,6,-6,-3,1,3,-6,8,5,-1,7,-1,-8,6,-9,1,-3,-5,9,-5,3,4,2,-5,2,-3,1,-3,-8,-8,-3,10,5,2,-3,-6,4,8,-2,6,-8,-4,3,-7,-8,2,1,5,5,-9,4,-9,-7,-8,-9,-4,-3,5,8,9,-8,-7,-10,4,-10,8,-10,4,-3,8,-7,8,-1,-6,-6,6,5,-4,6,4,2,-1,8,-2,10,-2,10,-8,4,1,10,-5,-1,-2,6,-2,-10,1,-10,1,-2,-8,-3,-5,-10,-9,6,-7,-3,-1,-7,-5,9,6,-10,-1,2,-5,6,3,8,6,8,-8,-4,-9,-5,-9,2,-4,-4,3,4,4,7,6,1,-7,9,9,-6,4,3,-6,9,-5,4,-3,-5,-10,4,8,-2,-4,2,-2,-2,-10,10,-9,-5,-5,4,1,3,-4,9,-2,-8,-2,2,9,-2,8,-4,-4,3,1,-5,9,-6,-5,-4,8,5,-2,-5,10,9,-3,5,5,-5,5,9,-10,-6,1,-3,-2,8,5,5,3,1,9,1,4,-10,-8,3,-5,-2,-9,-5,3,-8,-7,4,-9,5,-3,-1,2,7,4,7,-9,8,-4,-10,4,-7,-1,10,8,-7,2,1,1,8,-6,-7,-4,2,5,6,1,2,-6,3,2,8,-8,-9,-5,-6,-2,5,-5,-3,-2,-4,4,-7,2,6,-10,7,-1,8,-5,-6,-7,-2,-1,-7,-8,8,-8,-2,-4,2,3,1,8,-10,6,-10,1,7,1,-7,-6,-10,-9,-3,-1,7,6,7,-9,-7,-7,10,-8,-1,3,-7,2,-1,10,-6,-3,-4,-2,3,10,-6,6,6,-3,5,3,-4,9,-8,1,9,-4,3,6,7,3,-4,9,2,-4,-9,9,6,7,7,5,-2,-9,-6,10,-8,9,1,-1,-2,-10,-6,2,-6,-5,1,-9,2,7,-10,3,9,1,2,2,10,4,-2,-7,9,3,5,-2,-9,-5,7,6,-2,7,10,-9,-3,6,3,-8,-9,-2,-3,9,5,-1,-4,10,6,1,7,8,-2,7,-10,-8,6,-3,-6,2,-10,4,10,1,9,5,1,6,-8,1,-8,6,8,-2,4,6,7,-8,-3,-4,-1,10,2,7,9,-5,6,-10,3,-9,-5,10,4,-8,7,9,3,-1,-5,3,6,-10,3,7,1,-2,-10,8,-10,-10,10,-8,9,8,-10,8,10,8,-10,-9,10,5,4,3,10,5,-3,3,-2,7,-1,-6,5,-4,1,-5,-5,-3,6,4,-9,5,2,5,-8,-4,9,10,7,10,5,1,8,10,-1,-9,3,-4,2,9,-4,-9,-6,-9,-2,1,6,9,5,5,4,-8,-8,4,-4,3,9,-2,-2,-7,2,2,-9,10,-10,2,9,-1,-2,8,-9,3,3,-2,-8,9,-9,8,4,4,2,-10,-5,1,-7,3,-10,-5,-4,1,-7,2,3,-4,7,-3,-5,4,-3,7,-4,7,7,-8,-8,-2,9,-9,-1,1,2,-9,-6,-6,5,-10,-4,-2,6,1,-1,9,7,6,2,8,-1,10,1,8,-7,-7,-5,1,3,5,7,7,3,-3,-1,8,1,1,4,-10,-10,-2,-5,6,9,3,-5,-1,2,-3,7,6,1,-8,9,-6,4,-3,2,-9,3,8,-2,6,3,8,-5,5,-2,-1,-2,9,4,5,3,9,-7,4,6,-5,3,6,-6,2,-6,8,-9,-2,-10,10,-4,-9,-8,10,5,2,7,-4,10,2,10,-2,8,1,-4,3,-4,6,-7,7,-2,-8,6,5,-9,-2,8,7,9,-7,-2,10,5,7,4,4,2,6,-3,6,9,-2,-3,6,8,6,4,-6,-1,2,7,-3,5,9,-2,1,-2,-10,-1,-6,10,9,-5,4,7,3,-10,-5,8,7,6,1,1,2,8,1,7,3,-4,-1,-2,7,3,-9,3,-10,5,6,3,-10,-5,10,-2,5,9,-8,-2,-3,6,-5,9,9,-5,2,2,-10,4,8,-2,-3,-1,-1,8,8,-7,5,6,-2,9,-2,3,-8,3,-2,-1,7,-7,-4,2,9,5,-7,-9,6,10,-1,-2,-1,-6,-2,-9,-10,-5,1,8,-9,7,-6,5,-4,-1,-2,-3,8,8,-6,-6,3,-1,-1,8,4,7,2,3,9,-9,7,-3,-1,4,6,-6,-3,7,7,-7,-3,-2,-6,-8,-1,5,-1,2,7,-1,-7,-6,-3,-6,10,-1,8,5,8,-9,4,-6,2,7,5,-6,5,3,-5,-10,2,6,-5,-2,-6,-4,8,-3,10,-2,10,-7,8,-4,-1,-5,-6,-1,-2,7,-7,-8,3,-5,-3,-1,-3,-9,10,-3,8,4,-3,-6,-9,4,-4,-10,4,-3,2,-4,-2,-7,8,3,-2,-1,-3,9,-8,9,3,-10,-7,-8,4,-6,-6,-9,3,-2,1,7,10,6,-8,9,-6,-10,1,2,1,2,-8,-6,6,-7,3,3,-1,9,-5,1,-9,-2,3,6,9,3,-2,10,9,5,1,-3,-8,-10,-3,2,-3,2,6,10,-7,-5,-6,-5,10,4,1,-4,2,-9,4,-8,-4,5,-8,9,1,-4,-9,-9,2,-10,3,-9,-9,-9,-10,2,-7,7,-3,3,-8,-9,8,6,3,3,2,-10,-10,6,10,-5,-4,-4,-7,-10,-6,4,9,3,7,-8,8,2,1,-10,-5,-7,5,7,-8,9,-6,-9,-2,-8,10,2,6,-8,1,9,2,8,-7,9,1,-1,-10,3,3,-3,-7,-1,-8,-3,8,6,6,-7,-8,-2,6,-8,-4,-8,-4,1,3,-8,2,9,-1,-10,-10,4,5,9,-9,-8,1,1,-7,9,-6,-1,8,10,7,-8,9,7,8,-5,-4,-10,-1,10,-5,7,8,2,8,-7,2,-3,9,-2,5,-2,4,-2,4,2,3,-3,-7,-8,6,3,-1,6,-6,5,-10,10,10,9,-6,-5,10,1,-4,-4,6,-8,-4,7,7,-1,2,2,-5,-7,-2,3,2,-1,5,-7,-5,-8,-3,10,8,8,-5,1,1,-3,10,-7,2,-9,7,7,-4,2,-1,-9,2,-10,-8,-6,-1,-4,-7,-5,10,5,3,1,9,7,4,1,-3,-4,6,-10,1,1,-6,6,-2,3,-4,-5,8,5,7,-7,-8,1,-2,-2,6,10,10,8,-6,-1,7,-3,7,-6,-3,7,5,7,3,-2,-5,-1,-8,-8,1,-7,5,-5,8,-1,6,4,7,3,-3,9,7,4,10,-2,-3,-1,-8,5,8,9,-3,9,6,-10,-7,8,10,9,-4,-2,9,7,10,5,7,5,-9,-2,6,-4,2,7,4,3,-9,4,8,7,-3,-7,-8,-10,9,-2,5,-10,-7,-10,-2,-8,-10,9,6,-8,-10,-1,9,5,-5,-3,-2,7,9,-10,-10,4,-3,-10,8,-9,-6,7,2,-3,9,-5,-8,-10,-10,10,1,2,4,4,-1,-2,-1,-4,1,10,-3,10,-7,-10,5,9,-3,-9,-4,-1,-5,-3,4,-9,-5,6,6,-1,8,-2,-3,-8,-3,-3,9,-3,9,-3,3,7,-3,-6,-8,-3,-8,9,9,8,-4,8,-5,2,-7,8,-6,-6,7,-9,-8,-3,-9,-10,2,10,-8,-1,-7,10,7,4,2,-2,3,-6,-6,-9,-5,-5,8,-3,4,-1,9,5,-9,9,8,-2,5,-1,-9,7,-1,1,8,8,-1,2,-2,6,-7,-3], dtype = "int64")#candidate|6262|(3360,)|const|int64
var_6263 = relay.var("var_6263", dtype = "bool", shape = (120,))#candidate|6263|(120,)|var|bool
const_6264 = relay.const([0.870388,-1.639434,7.459898,7.760748,6.761279,-1.993564,3.431368,9.100706,4.104643,5.753946,3.866201,-0.112765,5.514180,-2.142715,-4.892982,-1.694720,-8.529331,4.018681,-6.162671,6.420729,8.778922,2.803457,5.668180,5.925149,5.058684,1.798534,0.691617,-5.334986,9.592491,8.619916,-8.757048,8.612983,-1.754164,-8.891786,8.531539,-0.842813,7.045460,5.085869,1.803909,5.408975,-6.112133,3.845683,-4.755663,-9.619776,6.757081,9.097706,7.030795,-2.594238,-5.420582,6.948548,-9.598439,-0.169277,9.069108,0.141065,-0.446915,2.576417,7.778595,-3.137429,6.680990,3.504948,2.657647,-9.920772,2.338388,-1.417841,1.604537,1.766920,-9.465083,-8.842093,-3.455854,-5.541484,-3.916331,0.644007,-9.065172,-0.450158,-5.995845,-0.960289,-8.147963,3.610080,0.515518,1.325168,5.713021,6.726168,-8.723042,5.193544,1.632943,-8.277210,-0.486788,8.221251,6.640274,-0.435878,-5.267655,8.434267,0.870608,-6.428982,8.464564,1.848446,6.316729,-3.818055,-4.846704,-8.624934,7.435100,-9.064073,-7.958933,-8.721905,7.276426,4.280417,-1.925416,-7.138001,4.084883,-6.904913,0.066613,2.341152,-7.734647,-4.414980,-7.114285,-6.562997,6.590093,2.148838,9.148279,-6.196590,-4.987033,-7.909287,-5.277618,-8.141698,1.452124,-3.186758,-0.731490,4.624411,9.228304,-2.424891,-6.461550,2.290632,8.406309,9.888195,8.097503,3.827488,-9.789779,-7.573158,-0.652004,-7.086001,5.220929,-8.848404,8.726161,9.300969,-5.011371,-8.432495,-7.486406,-6.121166,-5.479522,-6.862993,2.516299,7.134172,9.719489,9.354269,-5.441441,-3.413472,-8.693753,3.524092,-5.118741,7.046438,-3.604689,-8.526074,6.112757,-4.451975,-6.128416,8.260053,-6.371107,8.597704,-5.417457,-4.396348,5.683235,1.089383,6.972364,1.462922,0.830367,-4.184260,-5.915813,-4.738937,-1.115544,0.290585], dtype = "float32")#candidate|6264|(180,)|const|float32
call_6260 = relay.TupleGetItem(func_3588_call(relay.reshape(var_6261.astype('int32'), [7, 16, 3]), relay.reshape(const_6262.astype('int64'), [3360,]), relay.reshape(var_6263.astype('bool'), [60, 2]), relay.reshape(const_6264.astype('float32'), [180,]), ), 0)
call_6265 = relay.TupleGetItem(func_3594_call(relay.reshape(var_6261.astype('int32'), [7, 16, 3]), relay.reshape(const_6262.astype('int64'), [3360,]), relay.reshape(var_6263.astype('bool'), [60, 2]), relay.reshape(const_6264.astype('float32'), [180,]), ), 0)
output = relay.Tuple([uop_6256,call_6260,var_6261,const_6262,var_6263,const_6264,])
output2 = relay.Tuple([uop_6256,call_6265,var_6261,const_6262,var_6263,const_6264,])
func_6267 = relay.Function([var_6255,var_6261,var_6263,], output)
mod['func_6267'] = func_6267
mod = relay.transform.InferType()(mod)
mutated_mod['func_6267'] = func_6267
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6267_call = mutated_mod.get_global_var('func_6267')
var_6269 = relay.var("var_6269", dtype = "float32", shape = (5, 12, 6))#candidate|6269|(5, 12, 6)|var|float32
var_6270 = relay.var("var_6270", dtype = "int32", shape = (1, 336))#candidate|6270|(1, 336)|var|int32
var_6271 = relay.var("var_6271", dtype = "bool", shape = (120,))#candidate|6271|(120,)|var|bool
call_6268 = func_6267_call(var_6269,var_6270,var_6271,)
output = call_6268
func_6272 = relay.Function([var_6269,var_6270,var_6271,], output)
mutated_mod['func_6272'] = func_6272
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6307 = relay.var("var_6307", dtype = "float64", shape = (14, 16, 4))#candidate|6307|(14, 16, 4)|var|float64
uop_6308 = relay.cosh(var_6307.astype('float64')) # shape=(14, 16, 4)
func_665_call = mod.get_global_var('func_665')
func_669_call = mutated_mod.get_global_var('func_669')
var_6333 = relay.var("var_6333", dtype = "uint16", shape = (624,))#candidate|6333|(624,)|var|uint16
const_6334 = relay.const([[4.562615],[3.955036],[-1.887203],[1.825808],[3.639979],[-0.120339],[2.710658],[-7.668585],[9.637862],[2.635583],[-0.351989],[-0.660449],[-6.930526],[-8.179645],[-0.095188],[5.133979],[4.634921],[-3.959023],[2.445359],[-6.220502],[-8.975901],[-2.450988],[5.278895],[-2.014864],[-8.221010],[9.009096],[-1.536009],[9.590483],[1.581323],[9.879111],[8.600893],[-8.569402],[-0.126745],[2.213402],[-9.378136],[-3.989631],[-8.027186],[1.571835],[9.751020],[5.562229],[3.591145],[-8.484173],[-8.252256],[-6.065757],[4.125943],[4.351247],[-8.149722],[-5.032834],[-1.087402],[2.905101],[3.469853],[0.131205],[-2.091411],[3.157453],[5.051535],[5.519832],[9.170257],[-0.246646],[-5.905488],[9.849127],[-1.365945],[-9.074062],[-1.634776],[0.056686],[-8.381574],[-0.861105],[-5.552673],[-8.664301],[-9.999326],[-6.129623],[-5.930195],[-5.140501],[-9.593360],[8.006924],[-6.594242],[-1.148162],[-6.301447],[5.760047],[6.461391],[6.538734],[4.787567],[0.479883],[-5.880155],[-5.962267],[6.810065],[-0.118321],[5.336417],[6.923959],[0.170419],[-9.341834],[-3.913430],[-6.017773],[8.632558],[9.134335],[0.790768],[4.573430],[-3.634278],[-6.623338],[-6.287872],[3.999699],[-6.947383],[8.625772],[2.314309],[9.669492],[5.812736],[-0.150321],[-1.555275],[-4.001018],[-5.878140],[7.419005],[4.657432],[0.491420],[1.399515],[-1.052214],[-5.692158],[-1.723978],[8.574323],[-2.299774],[-2.373061],[4.894994],[2.408381],[4.821296],[-3.762343],[-1.796721],[-8.470618],[-1.934964],[-8.486307],[0.173405],[-8.801511],[4.068457],[-3.301648],[4.498551],[5.572269],[-9.751618],[2.792842],[1.044912],[2.900172],[-5.574488],[6.963247],[-5.910073],[-3.094296],[2.435335],[-1.864449],[6.225099],[-3.098785],[-3.673252],[-6.390675],[-7.074302],[7.603716],[3.656632],[-3.059833],[-0.750020],[-7.896393],[7.356256],[1.459227],[4.258016],[1.310778],[-8.840694],[1.735072],[-3.663132],[-4.733963],[-2.925552],[-6.836772],[-9.316096],[0.506135],[-6.177221],[-2.918052],[1.275475],[5.306716],[-5.621905],[3.714117],[6.782795],[-9.728998],[-5.542662],[0.795616],[8.674870],[4.196190],[-7.024732],[-7.221518],[-7.805756],[-2.495407],[7.703169],[7.234445],[3.972188],[-7.212434],[8.790363],[2.038752],[-1.473625],[-9.473186],[-2.103430],[7.973898],[3.661243],[5.600582],[-0.523012],[-1.992231],[-7.959869],[0.420788],[2.547116],[-3.943274],[4.533108],[4.277457],[-4.319580],[2.827659],[-2.300898],[-4.181721],[4.193968],[6.240555],[-5.507198],[-0.144621],[-2.051767],[0.968529],[-1.121280],[6.982820],[7.321658],[-8.482036],[-3.543447],[7.181476],[6.637723],[7.317317],[-1.776610],[-6.841181],[3.471630],[-3.210991],[-3.929335],[-3.798715],[0.500832],[4.416134],[-0.871290],[-1.600412],[7.158434],[-1.942457],[-5.106610],[-9.768376],[9.748076],[0.623725],[8.248730],[4.360424],[7.527701],[9.207339],[5.572958],[3.286708],[7.963651],[-2.887411],[0.421836],[-4.089333],[0.188708],[-8.186007],[-1.601151],[9.380958],[-5.932324],[-5.852842],[-0.715231],[-4.127435],[3.256552],[-1.002011],[9.771742],[-8.043400],[-7.429666],[-3.062167],[6.895243],[-0.514431],[4.014985],[-2.469372],[-0.338736],[2.164593],[-0.986857],[-9.786108],[-2.939962],[1.405801],[-2.007943],[-5.454453],[2.585101],[8.447788],[2.541118],[1.980340],[-1.264168],[7.757742],[-8.140089],[4.502348],[-9.682337],[1.490997],[-9.436405],[7.406099],[-6.694970],[2.978573],[-6.300461],[-5.556288],[-3.715988],[-3.100994],[2.643816],[-5.775873],[7.917636],[2.439466],[2.301676],[-4.966637],[-4.023756],[-2.911867],[-7.176620],[5.424831],[-1.119639],[1.611544],[-5.898089],[-7.242172],[7.559622],[-7.211764],[-9.569083],[-6.384119],[-8.456320],[5.269601],[7.832871],[9.596909],[4.964945],[-1.759722],[-3.653564],[-9.844505],[-9.991920],[2.493591],[6.396323],[6.597523],[-5.295080],[4.682393],[-9.807930],[3.444709],[-2.631235],[-9.501698],[-0.044613],[0.736910],[-7.481027],[3.710812],[1.580636],[9.246964],[-0.838264],[-0.453790],[1.861538],[-7.382312],[3.490376],[-7.988739],[-4.603684],[-9.399565],[7.510054],[-5.011832],[1.050417],[1.743094],[6.495948],[-3.247938],[7.566279],[7.517563],[-1.034586],[3.236117],[1.691003],[-4.229410],[-1.937356],[4.314988],[-7.712442],[9.914367],[-7.837766],[4.237991],[4.580542],[8.498690],[-6.391669],[6.044355],[-0.229333],[6.712048],[-0.991570],[-8.762871],[-9.371034],[-1.174216],[5.714906],[9.428414],[6.048634],[1.150195],[-5.636127],[8.927328],[-9.353873],[3.097024],[-1.273294],[-0.983642],[5.206015],[-5.708993],[-2.675582],[3.110539],[1.255317],[9.446728],[0.795905],[-6.284148],[8.009551],[8.176625],[-3.409467],[6.078207],[8.719100],[7.153348],[5.374855],[-4.209672],[7.355888],[-9.505844],[3.565287],[6.786136],[2.869728],[-6.697515],[7.818084],[-8.393688],[-2.961008],[6.407527],[-6.482404],[6.749340],[0.479997],[-4.434762],[-5.038522],[6.470933],[1.249685],[-9.798424],[7.511062],[3.204534],[-4.364559],[-5.159832],[-6.768774],[3.078117],[-6.409705],[7.160496],[3.802723],[-9.823448],[-6.736006],[-1.558433],[-0.972026],[-8.957833],[1.346724],[-2.071540],[-3.225579],[-0.557244],[2.646768],[0.720746],[6.086447],[1.177260],[2.410870],[-6.482727],[2.953151],[8.310399],[3.363221],[8.830788],[3.551693],[5.614283],[-0.541486],[6.942782],[0.462649],[5.366729],[-6.446952],[-5.816460],[1.521634],[9.997679],[1.538697],[-1.945502],[1.551389],[-5.130574],[0.532814],[-7.666647],[5.977340],[0.781082],[0.032744],[2.293563],[-9.645761],[-4.791264],[1.821204],[-9.739550],[-8.775090],[1.814169],[-6.184758],[-7.233503],[7.068762],[-9.886308],[-5.787598],[5.174259],[3.860934],[7.526542],[2.659583],[5.272295],[-7.599731],[4.737590],[4.288752],[-2.743275],[6.971720],[6.785457],[1.589036],[3.758720],[-8.855467],[6.308798],[-1.934984],[-4.087036],[-6.930383],[7.820958],[-8.511385],[5.524390],[-6.015280],[-0.666947],[6.942484],[1.637017],[-0.565549],[-6.395874],[-1.115131],[-3.156022],[2.980286],[-3.232143],[-2.408009],[2.791559],[-7.163045],[5.020756],[-6.108573],[8.701843],[7.408801],[-8.518757],[9.932706],[8.171225],[-6.173669],[2.924622],[-6.146906],[6.356251],[-3.203091],[4.214300],[-2.255345],[4.702132],[1.565753],[-1.396663],[8.788239],[-2.771996],[2.690543],[6.420019],[-2.011510],[5.589108],[-0.167322],[-7.659160],[-5.843727],[2.752704],[5.687381],[-2.903533],[8.721466],[-0.209317],[-5.011904],[-0.903729],[1.992573],[-7.212984],[6.261037],[5.535315],[-6.853628],[-1.236899],[6.055905],[7.010691],[-5.971421],[-0.933193],[-9.744817],[-8.450462],[-7.184599],[-0.942770],[5.364766],[7.536869],[-7.217519],[4.062574],[6.381603],[0.275687],[3.920994],[8.510158],[-4.335674],[4.480338],[5.828110],[-7.375750],[-4.093494],[0.148335],[-5.407008],[1.206891],[5.442407],[-3.153273],[-5.556005],[7.213272],[-6.122101],[7.957202],[5.178008],[-1.308815],[-8.941889],[-2.319228],[-7.268788],[4.596273],[7.380431],[1.704205],[-2.143330],[5.402847],[8.740657],[1.155186],[-0.209667],[-2.998361],[-5.947393],[-9.134148],[-4.067175],[4.446547],[-0.240260],[-9.097511],[2.900931],[8.462066],[-2.398621],[-3.434781],[1.012857],[-1.543015],[0.478733],[-3.533533],[5.416775],[-8.728065],[2.050527],[6.427595],[6.481048],[-3.356402],[-8.916030],[-4.190939],[-9.217279],[3.256260],[8.520784],[2.049902],[5.339255],[9.369317],[-8.411165],[-3.176255],[-9.445658],[1.197637],[-2.613865],[6.789154],[3.579422],[4.561998],[-2.549422],[5.955333],[-4.966821],[-4.857210],[-7.364951],[-7.447458],[1.009259],[-8.259729],[-0.859170],[2.210466],[4.411604],[-9.604401],[7.837648],[-9.021472],[8.066304],[4.704191],[6.758610],[-3.243737],[8.401323],[5.321882],[-3.277240],[4.151271],[-6.974472],[5.881002],[5.744500],[3.342525],[6.335668],[-5.776307],[-0.044573],[-8.199475],[-3.120312],[2.829646],[-4.695379],[4.152140],[-1.785687],[-7.092544],[3.695332],[8.975264],[1.973555],[-7.804855],[0.789586],[-9.089247],[0.454816],[-2.036686],[3.210818],[8.893439],[-7.434308],[2.503902],[-3.985169],[-1.745096],[-8.577117],[9.007287],[-5.894160],[5.913958],[-4.963680],[-9.210262],[0.789935],[-0.408846],[6.253280],[-9.034948],[1.608526],[3.115681],[6.704538],[2.854937],[1.317895],[-0.578143],[-9.820315],[4.341477],[-9.491266],[-1.023274],[-3.249445],[1.185515],[4.882594],[-7.454009],[-2.882312],[8.516029],[-4.551835],[5.275427],[-7.628858],[6.762699],[-6.516926],[2.999559],[-6.371972],[4.246009],[7.957607],[3.568685],[1.023206],[5.188926],[-7.954180],[9.071167],[9.196456],[1.575581],[3.476163],[7.998203],[0.501616],[-3.255169],[-8.471272],[-9.908426],[-3.861651],[-7.404030],[7.016051],[-2.055498],[-5.183781],[-9.732076],[2.043077],[8.594394],[-7.373014],[6.295684],[6.772352],[3.494032],[4.172633],[-6.907369],[3.050456],[-5.014114],[-8.316147],[3.808584],[-0.093662],[-1.164506],[-6.516173],[-7.073460],[2.579975],[-5.518908],[-5.889443],[5.196943],[-1.876411],[-2.526549],[-4.928819],[1.594569],[9.843946],[-4.917106],[-5.326247],[9.810201],[7.012572],[3.539123],[-9.787030],[2.681648],[7.988357],[-5.582655],[9.675438],[7.372965],[-1.641271],[-1.094492],[-6.138772],[7.119913],[3.771497],[-6.420512],[4.583805],[0.209299],[1.126829],[-7.416610],[-5.105372],[0.922739],[6.085583],[0.221597],[-0.555732],[-1.635943],[-1.222822],[7.197862],[3.371253],[-3.275621],[-7.503459],[-9.037681],[-5.110380],[-1.934261],[9.127052],[-6.907873],[0.783212],[3.109481],[1.548528],[1.046287],[-7.814218],[-2.303285],[-3.128479],[9.918001],[-6.551751],[7.961623],[-2.147087],[9.777897],[9.967202],[9.664345],[-7.914582],[-7.808682],[3.954816],[4.443517],[-7.525929],[-7.708036],[-1.686367],[5.091638],[3.303888],[-3.959369],[-2.668182],[-2.951350],[-8.722925],[0.918596],[-3.572619],[-6.049223],[-7.054548],[-1.009598],[-6.326183],[-9.004030],[-4.275756],[4.393204],[-9.861510],[-4.836328],[-3.847164],[6.177808],[-6.872649],[4.968019],[4.772484],[-8.456300],[1.793026],[4.821713],[0.236088],[-6.480340],[4.785418],[-2.900523],[3.981933],[-5.953745],[-9.617237],[7.683069],[-2.857955],[4.856950],[0.430166],[1.085517],[6.768339],[-5.529232],[-5.395733],[7.141193],[3.113212],[4.707319],[-9.181475],[-9.375093],[-1.454597],[7.319857],[6.465300],[9.788145],[-7.925651],[-2.153728],[1.205464],[-7.830354],[0.225831],[-0.358844],[-5.669758],[1.271744],[7.879856],[-4.964629],[-2.516319],[8.812853],[-5.641664],[6.230591],[-5.403493],[2.117131],[5.774231],[-8.906766],[2.712903],[-5.795692],[1.219159],[-3.248070],[-3.249509],[3.346791],[-9.904163],[6.109748],[-9.565472],[8.072447],[-4.603450],[2.444122],[8.457956],[0.641170],[-5.272209],[-9.034950],[-0.996702],[7.517547],[0.802847],[-1.668082],[3.681167],[7.308029],[6.930780],[1.154614],[5.899217],[-1.779879],[2.983617],[-4.100885],[-2.946567],[-9.975530],[2.026418],[-7.677275],[9.688428],[6.317010],[4.396843],[-1.947133],[0.999599],[3.548337],[-5.093587],[1.225593],[0.360078],[7.748528],[5.664281],[-1.990620],[3.683995],[-1.602280],[6.422146],[7.149911],[-5.200747],[3.182890],[-5.402808],[8.401113],[6.513934],[-6.790133],[2.981078],[9.999821],[-1.733085],[3.975101],[6.688700],[5.423415],[-6.733372],[6.728803],[7.410715],[-8.952993],[-2.598448],[6.353033],[9.627299],[-5.381406],[5.735046],[9.282666],[-0.631147],[-2.961807],[1.092964],[-3.994618],[6.205621],[-9.660172],[-3.752348],[8.318194],[-5.422892],[2.550906],[0.698248],[0.732315],[2.424588],[8.207472],[-4.463545],[6.530718],[9.911159],[6.167498],[-2.659582],[2.204498],[-7.399493],[1.761552],[-1.903231],[-1.425349],[9.867140],[9.583225],[-5.524935],[0.290114],[-2.206475],[0.334418],[3.087502],[-6.792339],[-1.055385],[-2.446269],[9.698445],[-9.934134],[3.365373],[-5.373097],[-3.499147],[-1.258869],[0.198325],[-9.623234],[-7.340633],[3.058446],[-6.322242],[1.609511],[-8.915671],[-1.082626],[-7.911368],[3.302673],[5.822222],[1.301366],[0.230726],[-8.965636],[-5.908758],[0.676209],[-5.742748],[8.984909],[-5.035695],[1.135224],[9.397946],[-6.938905],[-8.165188],[-9.220355],[8.537701],[7.049369],[8.575324],[3.890859],[-6.152712],[-6.928452],[-7.004379],[-5.686545],[7.244840],[4.622953],[4.876436],[-2.430252],[-7.016484],[-2.588207],[-5.329821],[7.986047],[-9.399606],[-8.497157],[7.347668],[-1.283363],[3.152087],[-2.236011],[0.374416],[-7.504124],[-1.828256],[-8.882266],[-5.086346],[0.584399],[3.238100]], dtype = "float64")#candidate|6334|(1040, 1)|const|float64
call_6332 = relay.TupleGetItem(func_665_call(relay.reshape(var_6333.astype('uint16'), [4, 12, 13]), relay.reshape(const_6334.astype('float64'), [1040,]), ), 1)
call_6335 = relay.TupleGetItem(func_669_call(relay.reshape(var_6333.astype('uint16'), [4, 12, 13]), relay.reshape(const_6334.astype('float64'), [1040,]), ), 1)
uop_6338 = relay.sin(const_6334.astype('float32')) # shape=(1040, 1)
bop_6342 = relay.not_equal(uop_6338.astype('bool'), var_6333.astype('bool')) # shape=(1040, 624)
func_4681_call = mod.get_global_var('func_4681')
func_4684_call = mutated_mod.get_global_var('func_4684')
const_6351 = relay.const([7,-1,-2,-5,3,10,-9,-9,3,3,2,-5,1,5,4,-4,9,-5,10,-4,2,-4,5,3,-7,9,-8,2,-8,5,8,3,7,-8,8,10,6,-4,9,-8,8,6,4,3,-5,-3,8,-10,-6,1,-10,7,-7,6,-10,2,4,2,-8,-9,5,-5,2,9,-4,5,5,8,2,-8,8,2,10,9,1,10,-4,3,10,3,4,8,9,-1,-1,7,9,-3,-3,6,4,2,-2,-3,6,-8,5,10,-3,-9,10,-8,-5,-9,-5,4,2,9,-2,-6,-10,1,-10,1,3,-10,8,-3,8,1,10,5,3,8,6,-6,-8,-2,-9,6,7,-9,3,-7,-6,6,-8,-10,3,-8,1,5,-10,-2,2,-5,1,3,5,-6,-10,7,-1,9,-4,-5,1,-6,7,-4,-3,7,2,-9,1,8,-8,-1,3,-5,7,1,9,2,3,-4,-4,2,2,5,-9,-9,9,7,10,-8,-3,-6,6,8,-6,8,5,8,-3,3,5,10,9,-5,-1,-7,-1,7,-3,-5,-9,-10,2,2,-8,-7,6,-6,-5,6,-3,-10,-8,-10,-4,-1,-9,-7,-7,-6,3,-10,3,6,7,3,4,4,2,4,-10,-1,4,-10,7,9,-1,9,-5,1,-6,3,10,4,3,2,-3,-10,2,-1,8,-1,9,3,4,7,10,1,-1,-6,3,6,10,4,-8,3,2,-2,-3,-4,-3,-6,-5,5,-2,-8,8,10,2,1,8,5,-9,1,-4,-8,10,-1,1,-8,-6,7,-4,3,-10,5,10,9,7,-9,7,-9,1,9,-6,4,-7,6,-7,-7,-3,6,2,-1,5,1,7,-10,-8,2,-8,-7,-9,-6,2,-5,6,8,-7,7,1,6,6,8,-7,-9,9,1,9,-4,1,-7,9,2,-6,-9,-7,-5,-1,8,-5,2,-2,-2,10,-3,-3,5,6,9,-8,-7,3,7,-6,3,-3,5,-10,6,1,1,10,10,-5,5,7,-10,5,8,4,3,8,3,-7,10,-10,3,-8,3,-2,-1,-10,1,8,-7,1,-10,-9,1,-1,5,-3,-9,-1,-6,-1,-2,-8,8,-2,-8,6,6,-8,3,-7,1,7,10,-4,-3,-3,-10,7,9,-5,-6,5,-8,6,-4,-2,-2,-7,-6,-9,10,3,-5,7,4,8,-3,-2,6,2,3,-5,2,-5,4,9,-8,-1,-5,-4,10,-8,7,-4,10,-2,-10,5,-10,-4,6,6,6,-6,8,3,-6,-1,-3,-5,-2,5,8,6,2,-10,-3,-4,-8,1,2,5,7,2,-2,-10,-6,6,4,-1,2,-9,-10,4,-5,3,1,7,6,7,-6,2,-3,-5,-10,5,10,9,-7,7,9,9,-7,-9,6,1,-2,-4,-1,2,-7,-5,1,6,-8,7,-2,9,-5,-4,-4,-10,8,-1,-5,2,10,-1,-1,10,-8,7,5,1,6,-8,-10,7,4,-7,-1,-3,6,5,-10,7,1,-10,-3,6,-6,-8,-5,-4,-4,-2,-8,9,8,1,8,8,5,-6,8,-8,8,-3,-2,4,8,1,10,9,-4,7,-10,1,-10,-6,1,-5,9,-4,6,6,-3,-9,-9,-2,-1,-6,4,8,6,-6,-5,6,10,-4,-7,10,7,4,8,-10,-6,1,4,8,3,-7,-7,-4,-2,-3,9,10,3,-4,1,-1,10,1,-1,-4,-4,-5,-5,-6,-9,7,-4,-4,2,-7,1,3,10,-5,-4,-7,9,7,-5,10,-4,10,5,-3,3,9,-10,7,-6,-2,1,-9,5,4,-9,-2,3,-2,-7,3,-7,-5,-7,-8,5,5,1,-6,-10,-6,7,5,-1,6,2,-1,-6,-7,-9,7,-4,9,6,2,6,-8,-8,-10,-10,1,10,2,-8,-8,-3,-2,7,4,7,-3,6,3,-4,4,-3,-5,-5,-8,5,2,1,7,-3,5,-7,-2,-10,6,10,-8,-5,6,10,-2,2,-3,8,-4,10,-3,-6,7,-10,9,-5,2,8,9,-6,2,-7,-2,6,-5,5,-1,-3,-6,3,2,10,7,4,7,9,9,-6,-10,-8,7,5,4,-8,8,8,1,-5,-8,-6,-10,-4,-10,1,3,7,3,-9,9,-9,-1,6,-5,-2,-10,7,3,9,2,-3,1,4,-3,3,10,-6,9,3,-5,-8,-3,-6,-6,10,-7,10,5,2,-7,-8,6,-8,-10,-2,7,-1,-3,-7,-4,-7,-9,8,3,4,4,-8,7,-7,8,3,7,8,-1,-1,1,5,-6,-6,1,-8,-1,5,-4,-7,2,-10,6,-1,10,-1,9,-10,8,-4,7,6,-2,-8,-3,-9,-6,6,-6,8,-8,-8,4,-5,-6,-3,-5,-1,-2,-1,5,-2,10,1,-4,5,-8,2,-1,-6,6,-1,10,7,-2,-9,-10,-8,-8,8,7,-7,-6,-7,-5,-7,-4,-3,-2,-8,-9,-3,-7,-1,9,-8,-5,-9,3,-10,-1,-1,-7,3,5,8,-10,2,2,-2,-5,9,-5,-2,6,-9,1,4,-4,-7,-10,-2,-6,8,10,-2,2,4,2,10,-8,-7,-8,-4,7,1,8,8,10,3,7,4,7,-9,-3,-6,-7,-1,3,-5,-9,-10,2,1,5,1,-9,1,4,-4,-10,-10,-3,-2,-6,-7,-5,-4,-4,-8,-8,10,5,-5,5,6,10,-2,6,-7,3,9,-10,7,-7,4,-6,-3,8,-10,7,-8,-1,-8,-6,-1,-9,-7,3,-7,-8,4,-7,-5,-6,8,10,-10,8,-9,-5,1,1,4,-1,2,4,-1,4,-8,10,6,1,2,4,-4,-10,-2,3,4,-9,-1,-2,-5,-10,-9,-8,2,-10,1,-6,2,9,6,10,-4,-8,-3,9,9,1,-2,2,10,-10,6,5,-1,-2,4,9,-2,-5,7,2,-3,-5,-4,3,-9,-5,7,2,2,-5,5,-4,-10,1,3,5,-10,5,7,6,-8,-10,-10,-3,6,9,-1,-8,4,-10,7,-4,-4,-9,-6,-9,-7,-9,3,9,1,1,-1,-5,-10,-1,-8,4,-4,5,1,4,2,4,9,-5,9,2,-4,-6,-10,1,-2,4,-9,5,4,7,5,3,5,2,-3,6,1,-4,-7,-1,-2,-4,-5,-1,8,-6,9,5,-7,-8,3,-10,5,5,8,10,2,-1,3,-7,9,-2,-3,10,5,-2,1,-3,3,8,-6,3,2,-7,7,-4,9,5,-4,-4,5,7,8,-10,-8,4,7,-3,3,-6,6,-7,7,-9,-8,-1,-10,9,-10,1,-9,3,-4,7,-6,10,-2,-1,10,1,6,3,10,-6,-2,10,3,7,8,9,-6,10,-5,-6,-2,4,-9,-3,-8,-1,5,-10,-3,-10,-3,-8,5,7,-10,4,10,-9,-5,-9,-1,-1,-2,-9,-10,-9,-5,9,5,-1,-9,-7,2,-9,8,10,-10,8,-4,8,-3,6,-4,-9,5,5,6,4,-8,7,-10,-7,-9,-2,-1,8,9,-3,3,3,-3,-1,-2,9,5,-8,-2,-7,10,-4,2,-5,10,-6,-2,-10,-9,6,-3,3,-10,6,8,2,3,-8,-10,5,-5,-2,10,-3,-10,-10,5,-4,4,4,-3,9,4,10,4,-3,-8,5,-6,7,-9,-10,10,-9,4,-6,10,3,-5,-8,-10,-8,-8,8,-1,-2,4,7,8,10,-9,-10,-4,-5,-8,9,-5,-8,-8,-9,-1,-1,4,9,-2,-5,7,-2,-8,1,-9,4,7,-7,8,6,-6,6,-5,-2,-6,-1,-2,-4,-7,6,5,-2,-4,7,-6,3,2,-1,-6,7,10,5,-9,2,-1,-6,8,9,8,6,-1,-7,10,-1,3,-10,-5,6,-1,-2,7,-9,5,-9,-3,6,-5,6,-10,-4,4,7,7,3,-2,-2,-4,-3,8,3,-6,7,3,7,-2,-8,4,-6,-9,-3,-8,9,6,3,4,9,-9,1,2,7,10,-10,3,9,7,-2,-7,-8,-2,8,9,6,-6,1,-7,-9,6,-3,-7,10,4,-10,-4,3,9,2,1,-9,-6,-2,-9,-10,-2,1,-5,5,4,8,4,-1,-5,3,2,-2,2,-9,-6,-5,2,-10,-10,4,-10,9,-6,-9,5,8,5,6,-5,-10,4,3,-5,10,-8,7,-9,-4,-9,9,-6,-1,-8,-8,-2,5,-4,-1,-1,-2,7,9,-8,-4,-7,-10,1,-1,10,3,-8,7,9,2,-1,1,6,6,6,-10,5,5,3,7,7,-5,-10,-8,-2,-3,5,-1,-5,-4,8,-3,3,-9,3,-8,-5,5,5,8,-6,-10,-4,-1,-7,9,8,-8,-9,-5,-4,3,6,-7,-5,-8,-4,1,9,-7,6,4,10,-3,1,-3,1,-4,-6,-7,4,2,-4,-7,3,-9,-2,3,5,2,5,10,-1,-2,5,-8,5,-8,2,-9,-1,-6,-1,8,-6,-3,6,-7,-8,-6,8,-4,5,-9,-1,-2,7,7,8,4,-6,6,-10,10,10,3,-9,9,2,1,-8,-4,-2,5,-8,7,-5,7,4,5,5,-1,6,-8,-10,10,1,-5,6,-6,-8,-10,4,10,7,3,3,6,-6,6,3,-5,9,-7,1,-1,6,6,9,9,9,-7,4,10,8,-5,1,5,-4,-6,8,6,9,4,-5,-5,5,-9,-7,-8,-6,-6,-6,8,5,-5,-3,7,-10,-9,3,3,6,-8,10,8,2,-4,6,6,-8,-4,-1,-5,1,-8,-8,4,-3,-8,8,-9,-1,7,-9,-9,-6,-9,4,-8,8,9,6,-1,-6,2,-7,4,-7,7,6,2,1,-8,5,-9,-3,6,-4,10,6,-5,4,2,10,7,7,9,1,4,7,-7,-6,2,2,1,4,2,5,1,-3,-5,-8,-2,-4,-2,-4,1,-2,1,5,-1,-9,-10,6,2,-10,4,1,-6,4,8,-7,-9,4,-4,-3,-9,-7,-9,-2,4,7,-9,-4,7,-5,8,-4,2,7,8,-10,-2,-7,1,3,-3,-5,-1,9,9,-3,-5,-3,6,10,10,2,-8,5,8,9,8,-4,-3,7,7,10,-6,9,-1,-5,-1,-4,-7,10,-7,-7,-3,4,-7,9,-8,6,-1,7,5,4,-10,-7,-7,2,-6,-7,-3,-6,-9,-4,3,4,-6,8,4,7,10,10,-9,-9,5,-5,-6,-9,-7,5,-5,-5,-9,-2,5,-8,-1,2,3,8,-9,6,-5,4,10,-1,-10,7,9,4,-9,1,-9,2,6,9,5,3,-2,10,-8,-10,5,-8,9,10,-2,-7,-4,4,1,5,1,-5,-7,-7,-6,-1,-4,-7,1,-10,6,4,10,-10,-3,8,3,7,8,4,2,-5,4,-1,7,8,1,-3,-1,-4,8,-6,-5,10,10,-7,9,1,4,-8,5,6,9,-9,-4,3,-6,2,6,5,6,-8,-4,10,-5,10,-6,8,-8,4,-3,-4,7,-8,-10,9,-5,-2,-8,-10,3,-2,8,2,10,-10,4,10,1,-4,-3,6,-10,8,1,10,9,2,-4,5,-2,-5,-2,10,4,-4,-9,-6,9,6,3,-5,-7,-10,-1,5,2,2,6,7,7,9,-2,-6,9,10,-9,-2,1,-9,9,-6,3,-6,1,9,5,-6,2,-7,-4,-1,-1,1,-7,4,2,8,9,4,-7,8,2,-8,-5,-3,1,4,-1,6,5,3,-10,-3,-6,9,-2,9,10,-8,2,6,7,9,-6,5,5,-9,2,-3,10,4,-8,6,10,-5,-7,-10,-2,4,2,-7,1,1,7,2,6,9,-8,-2,-1,5,-7,-6,-1,-4,2,-9,7,-4,6,4,-1,5,-8,-2,-1,8,-9,6,-5,-3,4,-9,4,7,-9,-1,4,2,1,2,10,-2,6,-10,-10,9,-9,-7,10,-2,-5,-1,-6,-2,8,1,-5,10,-2,-4,5,8,-10,6,9,10,8,-4,8,-3,1,8,-8,-9,9,7,-5,-8,10,-8,10,6,1,6,5,8,3,3,-4,-6,-4,-7,-7,-7,-6,7,-2,8,2,-5,-3,-6,8,-10,10,3,8,-4,-4,-4,-3,-6,6,8,-8,-7,-5,7,-2,6,-4,5,-1,-9,-9,3,3,-7,-5,-7,2,-6,-8,-2,2,10,9,10,-4,4,9,7,1,1,1,-1,-3,-9,9,-9,9,7,-5,-9,5,4,1,5,5,9,5,8,6,7,1,6,-5,10,-9,1,-2,-7,-6,4,10,9,3,1,9,5,-4,-9,-4,-9,10,7,6,-5,-8,-8,-4,4,-6,-7,5,-4,2,9,4,9,9,6,-1,2,1,10,8,-5,2,-1,5,-7,-1,-5,4,1,-1,1,-1,5,-4,9,10,-6,7,9,-5,1,1,-2,-9,8,-3,3,-3,-6,-3,9,-1,6,-4,-10,-3,6,-6,-1,-5,-6,-10,-2,7,-2,-5,6,7,1,-10,2,-3,-9,1,3,-9,-4,-8,-5,-6,-7,-7,-4,8,-8,8,2,-10,-10,9,7,-4,10,-9,7,2,-6,-1,-3,-8,7,-3,-9,10,-4,-5,-10,3,-1,4,10,5,7,8,5,3,4,-3,-8,2,-3,-4,8,-4,2,8,-6,-7,1,4,-9,-9,4,-6,6,-4,-9,-3,-6,7,-5,-9,9,5,-1,-5,-8,5,-10,-4,-1,7,-9,-6,-7,4,-7,4,-8,6,-10,2,-7,1,8,-4,-6,-8,3,-9,-6,-2,-5,-10,7,-4,9,4,3,-3,-3,-1,-10,-3,2,3,6,-4,6,-7,10,-10,7,4,1,2,-8,2,-1,-3,8,4,5,-6,2,4,5,2,7,-4,7,2,-1,5,1,7,-6,-7,9,-10,9,4,7,5,-3,-4,-7,6,-3,9,9,-7,-7,3,-8,-6,8,-10,-5,9,-8,-6,9,2,-3,8,-7,4,-9,-9,-4,5,-4,-7,2,4,-8,4,4,-1,-8,-10,4,-10,-3,-2,-3,-6,-4,5,8,-5,-2,4,-6,5,-4,9,-9,2,8,-10,3,-8,-1,-2,-2,5,-5,-2,-6,4,-3,9,-4,7,-9,2,3,10,3,-2,8,-1,-10,5,-3,7,4,10,-9,9,-2,-9,-3,8,10,2,-9,2,-7,5,-7,-8,8,-8,-4,4,-8,-2,3,-6,2,-2,3,2,2,2,10,8,-7,-7,-3,-7,-4,-9,-1,-10,5,5,6,7,-5,-5,8,-4,-10,-8,-10,4,-5,10,10,-10,2,2,-1,3,-8,2,2,5,-5,-6,7,10,3,-10,2,7,-3,9,7,-1,-8,5,9,3,2,-10,9,2,1,-6,-2,-4,-3,-1,5,-7,5,5,1,-7,-7,-1,8,-8,-5,-2,1,-2,-1,5,4,-10,-4,-4,-3,8,-9,-6,-2,6,1,4,5,6,-8,-3,5,-3,8,-5,-8,1,-4,4,3,3,9,-6,3,2,5,4,-1,-8,-6,-10,-6,2,5,-5,-8,-2,6,-3,2,-8,5,6,1,-4,6,1,-2,3,-3,-8,7,-9,-2,1,10,-2,5,10,1,-3,6,1,1,9,-2,-4,-9,-3,-5,-4,6,-9,-3,7,3,-10,-5,8,3,-9,-4,-4,-6,-3,-3,-6,-2,-10,-8,-6,-10,-1,-7,1,6,-5,-3,-5,-5,-9,-3,7,-4,10,-5,-2,-5,10,-1,2,-2,-10,-3,5,-1,-8,1,-4,4,6,2,-6,10,9,-10,-9,-7,9,-3,-9,9,1,-5,-7,-8,-10,-1,-9,4,-2,-10,-7,9,-6,8,-7,5,9,4,8,-8,-4,7,-10,1,3,5,8,-6,6,-10,-3,2,6,7,-8,4,-2,3,-2,-5,8,7,-4,8,8,-3,-6,2,-1,-6,4,10,1,-9,10,7,6,3,6,-9,1,7,9,9,-8,10,5,9,5,-8,-4,2,1,-1,7,3,-4,-7,-10,6,1,2,-5,-3,-9,-5,8,-4,-3,7,-4,9,-1,-4,3,8,5,-10,-1,1,4,4,3,2,-2,7,-1,8,3,10,-10,-7,-10,-5,10,10,4,-7,-1,-3,9,-1,-6,-2,-8,4,3,-5,8,4,6,3,10,-6,-10,4,-1,-2,3,-6,6,-1,1,4,7,-9,-3,-2,-4,-4,1,6,4,-9,-1,9,6,8,7,-9,9,-7,2,-5,-10,-3,-6,3,6,-6,10,6,-7,-3,6,7,2,10,-5,-10,-6,8,-1,-4,4,6,7,-7,-6,-7,4,10,1,-10,8,1,-5,10,1,-5,-5,-8,10,-7,8,1,-9,8,4,6,7,8,8,8,-3,6,-1,-10,-2,9,2,-3,-4,3,-8,10,6,-7,-7,6,7,7,6,1,6,-7,-4,9,1,4,1,-5,3,5,-9,9,3,-4,-5,7,6,10,-6,8,3,9,7,2,7,1,8,-2,7,-2,-2,6,4,-10,8,-8,-9,6,-10,-7,8,5,-9,9,-4,10,9,-5,-5,3,-2,-4,-7,-8,-1,-8,-2,-4,-9,-7,-3,8,-7,5,6,5,9,1,-2,-7,-4,1,-7,7,8,-10,2,-1,10,1,3,6,-7,-2,-5,-1,3,7,7,-7,-7,-3,4,10,-9,-10,8,6,4,-2,4,-10,-5,8,-10,-6,3,-7,-3,-3,-9,5,-10,3,-9,-2,10,4,8,9,9,6,5,3,2,8,-8,9,6,-9,-6,-9,-3,-4,-5,9,-8,-9,8,-9,-5,-2,-2,10,-2,4,-10,-6,8,-3,3,-8,-9,-4,-7,7,-9,-5,-1,-2,4,5,-1,-6,-1,3,-3,6,9,8,10,10,-6,2,-1,-4,-2,-8,10,-3,5,6,8,1,-10,3,-6,-1,9,-2,10,3,5,-5,7,5,-6,1,4,1], dtype = "int64")#candidate|6351|(3360,)|const|int64
call_6350 = relay.TupleGetItem(func_4681_call(relay.reshape(const_6351.astype('int64'), [3360,])), 5)
call_6352 = relay.TupleGetItem(func_4684_call(relay.reshape(const_6351.astype('int64'), [3360,])), 5)
func_4285_call = mod.get_global_var('func_4285')
func_4290_call = mutated_mod.get_global_var('func_4290')
const_6360 = relay.const([-3,-1,5,1,1,9,-9,-7,-5,5,-5,9,-4,4,-8,-7,3,-5,10,-6,-3,-6,-10,-5,7,2,8,-9,-10,6,-10,-1,3,-3,-2,-3], dtype = "int64")#candidate|6360|(36,)|const|int64
var_6361 = relay.var("var_6361", dtype = "float64", shape = (33,))#candidate|6361|(33,)|var|float64
call_6359 = relay.TupleGetItem(func_4285_call(relay.reshape(const_6360.astype('int64'), [3, 3, 4]), relay.reshape(var_6333.astype('uint16'), [624,]), relay.reshape(var_6361.astype('float64'), [33,]), ), 5)
call_6362 = relay.TupleGetItem(func_4290_call(relay.reshape(const_6360.astype('int64'), [3, 3, 4]), relay.reshape(var_6333.astype('uint16'), [624,]), relay.reshape(var_6361.astype('float64'), [33,]), ), 5)
uop_6363 = relay.sqrt(var_6307.astype('float64')) # shape=(14, 16, 4)
output = relay.Tuple([uop_6308,call_6332,bop_6342,call_6350,const_6351,call_6359,const_6360,var_6361,uop_6363,])
output2 = relay.Tuple([uop_6308,call_6335,bop_6342,call_6352,const_6351,call_6362,const_6360,var_6361,uop_6363,])
func_6365 = relay.Function([var_6307,var_6333,var_6361,], output)
mod['func_6365'] = func_6365
mod = relay.transform.InferType()(mod)
var_6366 = relay.var("var_6366", dtype = "float64", shape = (14, 16, 4))#candidate|6366|(14, 16, 4)|var|float64
var_6367 = relay.var("var_6367", dtype = "uint16", shape = (624,))#candidate|6367|(624,)|var|uint16
var_6368 = relay.var("var_6368", dtype = "float64", shape = (33,))#candidate|6368|(33,)|var|float64
output = func_6365(var_6366,var_6367,var_6368,)
func_6369 = relay.Function([var_6366,var_6367,var_6368,], output)
mutated_mod['func_6369'] = func_6369
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6145_call = mod.get_global_var('func_6145')
func_6146_call = mutated_mod.get_global_var('func_6146')
call_6394 = relay.TupleGetItem(func_6145_call(), 0)
call_6395 = relay.TupleGetItem(func_6146_call(), 0)
func_2732_call = mod.get_global_var('func_2732')
func_2736_call = mutated_mod.get_global_var('func_2736')
const_6412 = relay.const([4.930401,9.700988,8.085989,1.312111,-0.041377,7.050018,8.637225,-5.733006,-3.630036,3.872312,-0.072683,8.632815,1.151648,1.047651,8.762218,5.606239,2.011722,-1.087970,-0.820472,-2.518134,-6.014965,0.967966,-9.646075,6.473829,0.451723,-4.238541,1.119801,-9.956735,5.202050,1.002389,-8.486437,6.767118,2.809175,-2.487838,9.553421,7.567593,-8.889308,0.698856,-1.199760,5.565956,-6.083698,0.243897,-1.492887,-4.222152,-8.231526,-9.984859,-8.713896,-0.686859,2.957539,3.910717,-8.397760,-6.080151,9.900880,7.669564,-1.764798,2.413906,-5.743624,-2.551913,1.211256,-9.052388,9.804177,-5.509239,-4.709091,2.739471,3.812936,9.032432,7.841987,-5.701076,8.387933,-6.776252,3.283951,-7.091858,8.752692,-8.406727,-1.739396,-0.420277,2.630311,4.199330,4.299736,7.084258,-1.261303,-0.285872,9.470504,-6.563025,2.901978,-9.637548,4.840243,-0.890854,-1.821403,6.856830,-1.196805,-6.806052,-9.900839,0.529959,-9.842826,-3.421299,5.128442,4.604907,3.585899,-3.822207,-7.559416,8.981895,4.924961,-4.089045,-1.305169,-4.970234,1.350363,-5.000351,6.061692,-9.861323,4.753222,-7.552242,2.675503,6.274937,7.662955,4.389928,-9.528512], dtype = "float64")#candidate|6412|(117,)|const|float64
const_6413 = relay.const([1.219787,7.445508,-7.405703,-6.125503,-0.513430,-5.396741,-0.701658,8.839881,5.667180,-2.347179,-5.719627,-3.772667,3.764440,-1.263250,-0.611159,7.793162,-0.202954,-1.796952,6.864046,1.737554,-8.904120,-5.552245,1.344336,8.805603,6.552902,5.035673,7.281596,9.817704,0.331549,-6.525294,7.615651,1.546650,-1.979922,-7.205215,2.809305,-1.755163,-3.190767,-6.561142,-5.428991,-9.565095,4.853137,0.845864,8.212863,7.687133,9.648369,-8.092530,4.786493,-4.529210,6.953398,-9.796008,-6.059500,-5.653718,6.244597,3.884377,-7.357298,3.522471,8.421907,4.727094,-5.699206,4.141255,-8.868902,-5.483818,-7.024447,9.039109,-4.027671,-1.827887,-6.046473,5.566987,6.824524,-2.064444,-0.368339,3.944246,-7.899867,-2.806364,1.761543,-6.816417,7.550158,-5.253562,8.790990,-6.574741,3.314191,1.767782,3.433151,7.028067,3.900355,5.758757,-0.732668,3.085867,1.734681,2.014158,-4.890594,-6.226981,-0.707606,7.337513,-5.823740,2.878454,-5.799908,-0.059462,9.761127,-1.011695,2.920981,-1.612836,-8.732240,-9.841875,4.111420,-3.639793,-4.872461,-9.241820,3.012246,-5.140756,5.594950,5.008304,-3.017475,0.066315,-4.520499,-0.730178,0.279471,6.792739,8.816609,8.216962,7.285454,-6.395718,-7.670078,-8.735125,-9.260819,-2.344024,0.866897,9.153861,7.776856,7.905423,-5.575176,2.985882,0.198330,0.948274,-7.812309,0.156313,-5.894158,1.853278,-5.885211,2.808915,1.507636,-4.131781,3.321313,-1.813042,8.682272,-7.200601,-9.760908,6.397887,-2.662294,-5.327707,-1.016397,-9.968433,6.521771,8.309684,-3.085982,-9.301029,-0.886235,-7.729923,-0.703822,-9.677261,-1.447826,8.192221,-3.103136,-9.531419,1.720775,-6.539447,3.536100,-2.352777,-2.623910,-7.758580,-0.117154,-4.750198,-4.625555,4.174195,-5.279254,-6.685165,-2.536001,2.241883,-0.698018,-3.439676,-0.359196,5.466131,1.730088,-9.717433,-2.724662,-4.845194,3.755248,1.836748,1.720241,-4.515608,1.734179,0.856045,-5.938866,-6.665105,-6.781502,-9.493256,4.464971,-5.518129,2.761958,5.800669,-2.330265,6.668062,-2.014672,8.008518,0.017143,2.167096,-5.673009,-8.499996,0.209685,3.369112,2.989133,-4.722086,-4.009176,-6.696941,3.496418,7.948834,7.753740,5.285053,9.059392,-4.546020,-2.747986,5.215599,-0.593901,3.636951,4.282511,8.046000,-3.021607,9.196280,0.891305,2.611732,2.388311,-1.271267,8.871853,8.847129,-7.879853,7.703536,0.846137,3.401720,-7.772531,-9.708613,4.950292,6.476792,4.506732,-3.795475,-7.125531,-0.140262,-9.930176,-2.071106,-5.073169,9.058152,6.032922,-2.687656,3.373481,-0.779158,-9.870462,4.978549,8.985768,-9.853387,-6.015832,6.140757,-9.309659,-4.680387,-3.757582,-5.879810,-9.875743,1.204856,-8.526312,3.146731,0.056945,4.945522,-8.878973,6.313711,9.086222,-0.906542,4.020546,-8.874896,2.027713,-6.653857,-3.619845,2.744973,-3.110865,-4.278753,-5.685280,3.542074,-5.872721,0.925530,6.748471,-1.575467,-2.818444,-6.272637,-2.380591,2.470679,-6.173985,6.299032,-0.314701,9.541415,9.820711,6.050375,9.317610,0.340323,-7.140455,-0.622541,8.066541,-0.168551,-9.779334,1.953901,-7.444144,-3.535494,2.094001,4.288670,-1.104006,-4.570217,-2.406567,9.414872,-1.236774,3.177043,-0.185831,5.178061,-7.194465,4.365725,-1.323202,3.826629,-7.029979,6.933690,9.087274,2.295080,-5.397275,9.285637,-2.540172,-9.387071,0.945288,7.523782,-1.879532,-3.001893,-6.475620,4.006412,-9.076167,6.977144,-3.995159,-1.957864,8.647228,-1.578096,-1.189235,6.913812,-9.573723,4.779934,1.884701,6.846699,7.947073,5.042484,-7.886227,6.486129,0.942280,8.036685,4.025606,-2.513255,7.841857,-1.872350,-1.164872,-5.325000,-1.651072,9.010354,-7.458815,4.901558,-4.703315,-8.227796,9.326404,5.364010,-6.439644,-6.395906,1.737150,7.522258,1.801059,-1.048818,6.529558,0.973396,-7.792565,2.318303,5.441992,3.538263,9.652851,-1.358061,6.050769,-7.885354,-5.385374,7.252564,6.841484,6.311888,8.719349,-4.428694,-7.824541,-5.416113,-3.461052,-8.641845,-9.927605,7.800763,7.511956,-2.642771,-2.572993,-7.088945,2.909214,-3.454240,-9.392881,-0.911849,0.621549,-4.871475,-6.676280,-2.917777,3.731469,-9.016010,-4.879147,8.505531,-2.638344,-4.211258,-1.576083,2.297173,6.830667,-1.931741,9.125140,3.630664,-0.385046,2.507386,-8.663383,4.412293,-7.027064,4.578042,-9.377132,-9.488817,-2.399845,5.452223,4.937814,-3.207183,-6.584547,2.420851,7.421829,-1.395740,-8.084637,-9.547213,8.949248,-4.896437,-0.571298,5.260010,6.016644,0.719434,-0.446475,-7.376317,3.868713,-9.047531,-6.543840,-1.149189,-1.745992,7.570279,-6.573480,7.277001,2.250422,2.971917,1.003516,-0.108653,-5.909557,-4.172286,-8.712063,-8.030281,-8.995885,8.837650,-0.819502,-0.568725,-3.100982,-9.007928,-3.304223,6.674363,2.190089,8.589940,1.730806,2.441971,3.173794,-9.851150,7.121037,4.468403,-1.511468,-9.772759,-2.945753,0.682226,-8.373963,9.427540,-5.404454,-6.376320,4.053496,-0.656831,-8.263119,-4.043078,-8.581121,1.898856,-7.534670,9.181740,-1.682918,2.351534,-4.906691,5.147656,-6.353643,3.583616,1.376427,6.137861,0.854513,4.170256,1.893118,2.631918,6.433058,9.573922,-8.486495,-2.798928,-3.653346,1.971468,-0.435030,4.618640,-1.660220,5.359544,9.323246,-0.998529,8.319105,-6.792786,-6.951138,-2.625808,-6.513519,5.284762,-5.086330,9.184093,1.048883,1.866524,-4.556357,5.542583,-1.984201,-4.673728,1.026250,-2.754445,9.549328,3.604204,0.428558,0.578169,-2.858945,-5.088259,-6.174813,7.203762,-8.844744,6.422664,-9.096277,2.688269,-0.451521,-8.557168,9.713449,-3.006770,9.799556,-0.876662,7.985844,-7.940409,-6.565552,-3.760196,3.348131,-8.034777,-0.080403,-2.964315,-1.987194,5.991274,0.580572,-5.893959,2.634178,5.272552,4.612445,7.683678,3.585813,-7.602530,-0.532732,-6.604912,-9.853215,1.265441,7.466324,5.188824,-6.368072,-8.476531,-2.869361,-4.281590,6.083015,-7.014194,9.032650,9.806843,-4.185328,-0.109119,-6.452378,-7.013884,7.665569,2.146971,4.241392,4.863015,-3.178228,6.550233,-6.180478,-5.253769,-8.011182,-2.233827,-9.901812,-9.031899,6.685630,4.996659,-8.844712,5.190119,6.929710,-0.529671,4.975814,-2.968962,9.460092,7.618068,8.505199,9.657959,-4.219693,1.973182,2.586574,9.204854,-3.202884,-2.374130,-0.144472,0.272649,-4.879956,-0.806641,3.820665,9.432312,6.937939,-0.893583,-5.613173,-8.733031,-3.393280,7.166386,2.375219,-9.401931,9.334491,-7.137555,-2.221328,-8.869399,7.770490,3.409356,2.374011,0.466869,1.352787,-4.586750,1.152248,-7.520659,-7.674364,4.233064,9.495509,-9.379430,-7.196924,-3.335442,-5.346600,-4.261425,-0.797208,-7.453239,-3.921669,-8.522650,3.387561,-1.904494,5.248010,-2.254614,-8.051918,5.687072,-2.614870,0.166091,2.197089,6.040616,-8.092207,6.689002,2.795536,-0.586655,-2.448290,8.200173,8.316029,-4.216737,2.591299,2.333714,4.038381,6.428906,-1.548642,-6.209034,-8.418114,1.589445,4.924176,3.308500,-1.277992,8.295672,-4.371469,-9.991199,-0.662650,-2.185484,-3.443688,6.727394,9.945116,7.252096,1.683389,3.223463,5.401670,-4.817979,8.581377,-9.300140,-3.363732,-2.028653,-8.015574,-6.244746,-2.274908,-3.833420,-6.958262,-7.256298,-9.275146,5.940959,8.672252,-2.135461,4.288730,-3.119462,-9.058105,-3.911481,-2.393489,-6.887871,-5.846587,7.033256,4.429732,8.629773,8.428557,0.710882,6.227613,-9.979159,1.642363,4.689283,3.982346,-4.496812,-0.404933,-6.425032,0.620569,-5.820048,-9.881470,-2.101087,2.825682,2.412391,3.605697,4.031798,-1.882226,-4.411442,-1.614953,-4.376704,0.638284,8.344332,-0.909609,-6.982078,-2.143384,6.268898,-2.538229,0.674923,0.541264,-9.521548,4.353743,4.144644,9.946127,-1.011173,3.630319,-9.948823,8.162986,9.682370,6.853959,2.824229,-9.214495,-7.908029,0.988562,-0.686704,7.113823,6.203094,-1.662600,-9.226047,-0.857291,4.751956,7.002315,-9.843806,-4.110927,-9.973087,6.173103,5.688525,-8.040026,-8.908725,3.511861,-1.503935,-4.690834,-9.455413,-9.140231,-4.704260,9.928122,7.020052,7.083510,1.794180,5.539297,-0.958600,8.112989,-4.121790,5.800507,6.294236,6.595597,8.864558,-2.739889,1.359486,-0.965912,1.000758,8.239995,8.244397,5.879076,-0.132695,-7.103698,4.265127,9.051570,-7.285421,1.025704,1.890007,6.190114,-9.668060,-8.509971,7.106857,6.598716,-5.240219,6.652761,-5.049456,-7.972425,1.194626,2.101531,9.495141,-7.388893,9.665551,9.233266,-2.787549,-8.659172,-4.947694,-8.213912,2.103365,2.349703,4.184977,2.880605,2.155547,-7.826408,6.064101,3.267750,-0.411781,-7.167202,4.452793,9.170792,-8.696590,-4.317162,-1.182499,-2.221417,3.801176,-2.668576,-1.302896,-6.539868,8.472807,-7.205145,-3.511953,3.759094,2.007912,-6.180506,-7.029072,3.640544,9.916616,1.370806,-7.384322,-0.957437,4.611187,-2.651863,-4.304880,7.753603,-1.102231,-8.222415,-1.672727,8.574269,2.828230,-5.653036,5.940099,8.367459,-8.502751,9.239110,-4.138394,-2.775729,-8.957142,-3.698386,6.668538,-7.507260,2.693128,-5.136074,6.043035,-7.490119,9.530321,-4.054169,-1.480561,-0.655030,-8.223677,4.917127,5.203322,5.542881,6.382453,-2.853815,0.194106,-6.194307,-8.967995,-0.398185,-7.403929,-0.350316,-3.846696,0.007539,-7.849733,7.853440,4.992996,-5.685518,-9.812171,-0.617069,1.797797,-3.105690,5.836331,8.976914,8.200544,4.194509,-0.636685,4.879929,-1.806281,5.091315,-8.057073,-8.858716,-3.538277,-2.034079,-2.395494,-0.637069,-8.283506,-6.631347,4.125727,5.565432,-5.942357,-3.093241,-3.407664,0.197565,-8.823672,-2.023074,0.153502,-0.713999,0.501796,-5.221711,9.172559,3.419284,2.516234,-7.045592,2.096232,9.773287,-2.370230,6.120571,0.607332,-3.410803,2.771864,2.215712,2.794069,-9.381497,-3.685016,-0.324398,3.670467,0.099064,2.632865,6.480344,1.205288,-6.577284,0.682466,1.497585,-1.363049,-9.887231,-3.388634,-8.675912,-8.471523,-1.769328,9.162049,-3.026278,-8.350612,3.478154,3.944729,-1.525798,5.943426,1.488667,-8.588873,-7.747956,-5.032551,2.293286,-0.363502,-8.821015,-8.786826,8.087664,2.707823,7.589878,-2.666921,3.939258,3.100958,-9.984912,6.847207,8.064927,-2.030282,-0.442313,1.549720,0.043600,-7.926295,-4.643797,-4.572228,-5.204104,8.686048,1.504164,8.076368,-4.646378,5.994412,5.941063,-6.932954,-3.555899,-1.745262,4.114772,-2.144352,3.714914,-0.774046,-4.114148,-9.543328,-0.301664,-2.866643,4.258215,-2.125168,-7.336149,-8.736434,-4.061722,5.517770,-8.452039,-5.471726,6.802032,-6.750201,8.506650,-6.874821,-0.191441,-8.193857,-0.858279,-7.859517,-1.390092,2.693067,-3.483069,8.883965,-3.377439,-4.918936,-0.246286,-7.591819,2.045290,3.534621,4.636532,-4.796865,-4.332683,-0.829088,6.928877,-3.923175,-9.369379,4.238128,1.287636,8.549361,8.105228,-1.968915,-1.260605,9.528873,-3.971656,-4.542880,-2.400557,9.483689,-0.182474,1.749303,-7.074471,4.477724,-4.440462,-0.400817,0.574913,5.588777,2.517317,5.481329,8.544737,5.483250,9.225253,3.322166,2.350239,-5.719157,8.492986,8.260252,5.185089,-0.726032,9.108317,0.489108,-6.889799,3.555818,1.558056,-9.794496,6.871347,-8.557424,0.199467,-2.887780,-2.281634,-9.153723,7.503377,7.375738,5.441001,-8.257497,-8.766481,6.897075,-0.565621,-4.090050,7.480235,-5.449453,0.137345,5.613592,0.296136,7.205099,-0.103187,4.938148,4.681284,-1.650597,-5.708851,-3.307715,3.193976,7.238259,-4.002959,4.433825,-6.115437,7.681973,-5.638901,9.594820,-1.288845,1.524033,-2.618343,-8.977164,4.452641,-8.653751,9.181443,9.557284,9.959335,1.898167,-2.013464,9.097170,-2.649764,-3.154638,-5.588581,-9.410825,-1.465510,3.898921,-3.026304,4.232461,4.417153,4.956391,-8.379271,7.784654,-2.190157,3.140343,2.684584,9.635674,0.286625,-8.740569,2.026193,8.780932,-1.024034,4.961590,-3.196830,-4.643076,-0.313555,8.315291,-3.777521,-0.780679,5.264816,-3.173484,1.883058,-6.850152,2.918438,-8.329458,-4.996065,6.842121,-0.600937,5.671429,2.507433,-0.800696,-5.084011,-7.802463,-9.119795,8.495033,-4.474442,-1.268979,6.401626,0.069722,1.237814,-5.315804,0.010916,-3.195668,-9.671932,-0.366493,-9.231819,7.780930,-3.143104,2.432767,5.621600,-5.115856,-2.375533,7.474360,-0.201329,5.041173,-7.031253,9.523099,9.700860,8.173231,9.380610,1.925653,3.711528,-4.245318,-3.264303,-0.276114,-8.195817,5.845753,-1.628370,2.696593,6.666683,-4.524945,-1.795332,3.841690,-2.423092,7.376800,8.101663,0.583720,7.075363,-1.183607,0.087527,8.311230,-4.153360,8.882250,9.520695,3.023044,0.486219,-4.875457,8.193817,6.794105,1.782045,7.984881,8.363715,8.219542,4.347402,-2.555796,-0.929852,-9.473428,-4.379282,2.397059,-8.671771,6.250026,4.731508,5.589991,3.559136,-9.856930,0.739032,6.703832,-7.167776,-9.611639,3.202159,-4.325672,-7.557903,-8.994277,-6.766804,9.647781,-3.610583,-5.695623,-1.101898,-0.398240,-5.562466,-3.493065,-0.589014,-8.714445,-8.679793,-6.137065,3.657226,-7.886525,-9.415524,5.489969,-0.988023,6.992207,6.324370,-3.544305,-5.616735,7.003465,4.589679,-0.208468,-1.206040,-1.093783,8.796339,-2.646791,-4.666288,0.843588,5.630315,3.193366,7.002039,-0.217015,6.677641,-4.901558,5.710793,-4.465318,-3.734450,-4.387335,-4.189606,8.885114,-2.352149,-9.841502,-8.299387,1.031694,-6.992205,-2.214208,2.524274,-8.829819,2.409877,-7.574116,2.196551,-8.991974,-1.952240,-4.522627,6.525045,-8.944183,1.817014,-9.698597,-2.554450,1.844137,9.346156,-7.661886,-9.550619,6.957175,-5.098366,-4.576591,-8.515034,4.998359,7.965630,9.525233,5.671175,-7.481478,0.807647,5.819822,-4.018572,-7.651321,-1.612825,6.766889,-3.038480,-4.555361,-7.106834,-6.000703,4.242833,3.294132,9.146934,-4.319998,4.120679,2.265972,7.490978,-1.994443,2.081342,7.540428,-0.138893,-0.098483,6.249000,3.643154,6.904009,6.693726,1.645401,1.024170,7.733556,3.419410,0.384560,3.613427,5.766159,-2.297817,6.020733,-0.706725,-3.905862,-8.538016,-7.558285,-1.660734,0.587981,-3.244171,-8.567725,2.226365,5.776187,-0.974856,6.238953,-4.936697,-7.889116,5.968320,-0.247225,2.716461,-9.792321,8.697400,0.925322,-2.800931,5.722798,1.015149,-0.803233,5.089350,0.292548,-4.224098,-2.238943,-2.979157,-4.225829,-1.648522,7.102572,1.674885,8.437502,-4.249112], dtype = "float64")#candidate|6413|(1404,)|const|float64
var_6414 = relay.var("var_6414", dtype = "float32", shape = (192,))#candidate|6414|(192,)|var|float32
call_6411 = relay.TupleGetItem(func_2732_call(relay.reshape(const_6412.astype('float64'), [9, 1, 13]), relay.reshape(const_6413.astype('float64'), [9, 12, 13]), relay.reshape(var_6414.astype('float32'), [192,]), ), 1)
call_6415 = relay.TupleGetItem(func_2736_call(relay.reshape(const_6412.astype('float64'), [9, 1, 13]), relay.reshape(const_6413.astype('float64'), [9, 12, 13]), relay.reshape(var_6414.astype('float32'), [192,]), ), 1)
bop_6428 = relay.power(call_6411.astype('float32'), relay.reshape(var_6414.astype('float32'), relay.shape_of(call_6411))) # shape=(4, 4, 12)
bop_6431 = relay.power(call_6415.astype('float32'), relay.reshape(var_6414.astype('float32'), relay.shape_of(call_6415))) # shape=(4, 4, 12)
func_126_call = mod.get_global_var('func_126')
func_129_call = mutated_mod.get_global_var('func_129')
const_6433 = relay.const([1.317171,-3.408215,-5.772017,4.335593,-5.557922,-1.996286,-1.248053,1.541308,6.995484,-0.543266,2.455054,5.949177,4.562343,-0.485312,1.367596,2.542370,6.506589,9.583219,1.202036,5.231307,4.546212,0.208497,-2.665873,-2.516817,-8.881360,-3.939871,-4.227561,2.090445,-9.164433,-2.275661], dtype = "float64")#candidate|6433|(30,)|const|float64
call_6432 = func_126_call(relay.reshape(const_6433.astype('float64'), [1, 6, 5]))
call_6434 = func_126_call(relay.reshape(const_6433.astype('float64'), [1, 6, 5]))
func_6047_call = mod.get_global_var('func_6047')
func_6049_call = mutated_mod.get_global_var('func_6049')
call_6438 = func_6047_call()
call_6439 = func_6047_call()
func_6267_call = mod.get_global_var('func_6267')
func_6272_call = mutated_mod.get_global_var('func_6272')
const_6441 = relay.const([5.805095,-6.646276,6.520127,3.941255,3.520781,6.387589,-0.587788,-7.317519,9.591140,1.795204,-7.448296,2.252767,-9.771532,5.418718,8.026338,7.006765,-7.298078,4.489016,-0.805927,5.677685,-9.223840,6.788612,0.606654,8.282299,1.845370,2.142927,-1.379015,-8.488877,-4.060335,-8.827734,7.962365,-8.725936,1.464720,-7.057911,-0.646013,-6.992999,-4.113614,2.340680,7.763255,9.273380,-0.831556,-1.878300,4.162079,2.057184,-9.444506,7.410705,6.469844,3.525930,0.665422,-3.524272,0.699157,-6.946038,3.111350,-2.057973,7.572764,6.077885,-9.653750,-1.232776,-4.371999,-0.672386,-4.293325,1.702952,6.925779,-3.703498,-2.818263,1.286250,6.338613,2.250403,4.628837,2.293305,5.252323,-5.125373,-6.307200,4.178757,3.241591,3.185430,0.796483,1.118623,-6.330717,1.075920,5.651712,-8.779294,1.847790,1.271515,7.330918,3.437117,9.622684,2.175463,-5.650299,7.548041,-4.322067,6.507529,3.370478,-5.068464,1.424340,-8.383309,-6.223346,3.445265,-7.469342,8.990150,-1.395458,7.212718,-0.107042,2.857441,5.788322,-6.778675,-4.293403,-7.973760,0.034053,4.817162,-3.018738,0.617965,-8.920400,-6.797740,0.303967,7.143913,-0.477810,2.061841,5.028938,-9.851863,4.106985,-0.932213,-0.833950,6.695609,3.048207,-3.518059,-2.163787,1.907929,8.116495,-9.522177,8.493790,-3.477457,-4.845085,-4.061679,-6.111423,-7.084207,-2.719407,1.958083,5.684553,-0.109644,5.958391,1.436872,-2.457423,4.023113,-3.443790,-9.178644,1.375065,-7.028302,-0.482945,1.065821,7.033728,7.083588,-0.817116,-6.224440,6.819805,-7.730416,-8.203718,2.307879,-9.324280,-4.531128,-0.493205,-8.711784,6.129580,9.462681,-9.876029,-5.742584,-4.418344,8.827239,9.787963,9.276766,-4.733544,3.033506,0.384005,8.067275,4.964947,-6.385237,-3.295165,9.694443,2.714215,9.595618,2.137896,8.767120,6.171661,-1.906047,2.106491,-0.912964,-4.401398,-3.154262,-2.959862,1.924756,0.662670,2.034336,6.635217,0.018918,1.555441,-5.129707,-2.338551,-4.254946,-4.852375,-9.449685,-7.952918,4.463524,1.290783,-4.094054,6.836112,2.942193,-4.912476,-7.852571,-7.655545,-0.373447,-4.480925,-8.231827,8.723380,6.384695,-8.388676,8.133976,-5.082638,7.170113,-4.623148,4.376134,7.116675,-5.017343,2.384752,1.999523,-9.530649,9.466116,-0.184020,9.325906,-0.222076,2.516402,5.221784,-6.636071,7.523755,3.954640,1.410969,3.054574,7.312833,-9.653655,-3.649137,-5.575866,-1.555986,-5.473575,-0.522676,-9.797459,-2.594526,5.782442,-1.978683,2.735012,2.619943,6.734508,5.766385,5.898439,-0.247507,9.181666,-9.744842,7.717698,0.346071,6.888251,3.477904,-8.958662,-0.830814,3.261096,6.391343,-6.286461,0.309669,-2.944234,0.410592,-1.536311,0.958988,-0.885964,1.652409,-0.398570,8.607929,-9.556273,2.112570,-2.706491,-4.694485,-5.257620,-4.048598,-1.101543,-2.889628,-2.791059,3.227077,3.409933,-9.490226,-7.156213,1.433592,-9.898777,-0.761713,-8.345110,-1.302802,8.115386,-0.654820,-0.318360,4.555799,2.113582,8.430686,5.305973,-9.668090,-3.162126,-8.725007,-1.510646,9.595947,2.583981,-9.154372,-1.949771,-8.836555,6.928502,9.668789,-8.454220,8.544856,8.752597,6.782428,3.023052,1.744112,1.894597,-4.000895,-7.343037,-1.078163,1.555443,1.696596,7.595228,-2.538160,-0.366026,3.949336,-9.382287,-4.574650,3.772821,-4.717452,3.082136,-8.762604,7.558018,1.818271,3.085980,1.217009,-8.396483,-9.097380,1.125688,-1.164443,-8.470972,-2.632550,-6.634156,-8.854884,-2.371388,-7.966395,8.760009,-5.113437,7.256618,-3.908713,-7.170512,-2.185713,-7.153736,-7.008622,6.187949,5.601202,-2.561195,-6.706101,7.334877,6.513239,5.695239], dtype = "float32")#candidate|6441|(360,)|const|float32
const_6442 = relay.const([[-3,-4,-5,4,3,-10,-7,2,9,-8,-10,-3,5,8,7,-6,5,1,-2,-1,7,9,-10,7,6,-4,-6,5,-4,9,-6,-4,-6,1,4,-4,5,4,-4,-9,-8,-9,10,8,-10,7,-4,7,8,8,3,-2,5,6,-8,-2,-7,-1,-6,1,5,-1,9,-9,-7,-8,8,1,-5,-5,-1,9,7,-5,6,10,-3,2,-1,10,7,10,-7,1],[5,7,2,-4,-6,3,-4,-5,5,3,-8,4,3,5,3,4,-3,-6,6,5,10,4,-2,-2,-6,-3,-10,-2,-10,-4,2,-3,-8,-9,10,6,1,-3,-1,-9,2,1,-8,-4,9,-3,6,5,6,10,-5,7,8,-8,7,-6,-7,10,10,-4,-1,-10,-3,-3,-7,7,1,8,6,-8,3,-1,-1,-6,4,-9,-8,-2,-2,-10,-1,-2,10,4],[6,-8,-8,-9,-9,-9,8,-8,9,-5,-8,-1,-3,1,-3,-1,9,-9,-10,3,5,4,3,8,-5,-2,-10,-2,-6,-8,10,-9,9,-3,6,10,-1,5,-8,4,9,-6,9,-4,3,-5,1,1,1,9,-1,9,3,5,-8,-5,-7,8,9,4,-3,-2,-2,-4,-6,-10,-2,-10,-4,8,-6,-1,-4,-10,2,-2,2,9,6,6,-8,10,7,7],[-4,3,8,2,4,2,5,-1,9,-10,-5,8,5,3,7,-3,-5,-3,-4,-2,7,4,-1,9,-7,4,7,5,-1,6,-8,-10,-9,5,-8,-2,2,-8,-3,2,8,-3,-9,1,-7,-9,7,-10,-2,8,2,6,-5,9,-1,-7,-9,6,-7,8,-3,2,8,-6,7,-2,-3,-4,-3,4,4,-3,-10,-8,7,4,5,-9,8,-5,9,-3,-6,-1]], dtype = "int32")#candidate|6442|(4, 84)|const|int32
var_6443 = relay.var("var_6443", dtype = "bool", shape = (3, 40))#candidate|6443|(3, 40)|var|bool
call_6440 = relay.TupleGetItem(func_6267_call(relay.reshape(const_6441.astype('float32'), [5, 12, 6]), relay.reshape(const_6442.astype('int32'), [1, 336]), relay.reshape(var_6443.astype('bool'), [120,]), ), 1)
call_6444 = relay.TupleGetItem(func_6272_call(relay.reshape(const_6441.astype('float32'), [5, 12, 6]), relay.reshape(const_6442.astype('int32'), [1, 336]), relay.reshape(var_6443.astype('bool'), [120,]), ), 1)
output = relay.Tuple([call_6394,const_6412,const_6413,bop_6428,call_6432,const_6433,call_6438,call_6440,const_6441,const_6442,var_6443,])
output2 = relay.Tuple([call_6395,const_6412,const_6413,bop_6431,call_6434,const_6433,call_6439,call_6444,const_6441,const_6442,var_6443,])
func_6451 = relay.Function([var_6414,var_6443,], output)
mod['func_6451'] = func_6451
mod = relay.transform.InferType()(mod)
var_6452 = relay.var("var_6452", dtype = "float32", shape = (192,))#candidate|6452|(192,)|var|float32
var_6453 = relay.var("var_6453", dtype = "bool", shape = (3, 40))#candidate|6453|(3, 40)|var|bool
output = func_6451(var_6452,var_6453,)
func_6454 = relay.Function([var_6452,var_6453,], output)
mutated_mod['func_6454'] = func_6454
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6493 = relay.const([[[6.355664,-2.835579,2.727282,-1.766751,9.918150,1.191797,-7.244254,1.002850,5.997471,7.623998],[-6.148042,-8.496437,-7.293694,4.607751,5.466617,-7.809540,4.955645,7.180221,0.126055,-1.232612],[7.206522,7.083141,-6.931320,3.449807,4.815211,1.771874,-0.870539,9.480992,-5.598664,4.262675],[-6.274153,7.345381,-6.686789,-4.423903,-1.786394,-6.377739,-4.815712,-3.543454,-3.035213,-7.260996],[-1.082013,-3.227996,1.200069,7.714635,-8.406241,9.209221,-2.234870,-5.834460,-4.650764,2.975847],[5.240608,-2.880818,6.411518,5.042402,5.249192,4.765681,7.691110,-0.948588,5.503184,0.745100],[7.567006,-9.486639,7.915460,-6.784175,2.887094,-8.398463,-2.966019,-9.209560,5.788811,9.076128],[0.956670,-5.087326,-6.129485,5.133026,5.032897,-8.675735,-5.888040,-9.185224,9.314818,3.135619]],[[-3.171074,-3.396713,-4.102803,-4.231386,-0.543849,-8.320845,-2.277638,-5.079152,-8.312102,4.271927],[-6.318775,-6.395217,-6.581053,-1.721764,7.462705,9.025540,-9.639542,-8.993708,-1.246033,-8.579569],[0.707516,5.120176,-2.941917,-6.244316,5.656929,-4.146880,2.213826,-3.252214,3.902473,-1.720092],[-5.287340,2.714150,4.201222,-8.817478,-6.802793,-0.458570,8.322936,-5.028542,7.352259,-4.447594],[-6.013096,9.896951,1.693431,7.671356,-8.901648,-4.700891,9.079408,0.895162,9.922367,8.878231],[3.545398,1.727227,4.500038,-9.449390,2.508048,5.285936,6.792146,7.233751,8.966562,4.477260],[-4.101250,-6.467623,9.339501,-3.506455,4.739397,8.741600,9.713092,-6.758089,-6.846783,-3.949887],[1.143198,1.478722,-9.229325,-5.778255,4.685120,2.457410,7.326632,-0.596120,-6.258617,7.502658]],[[-8.089723,-6.797495,-9.277200,-1.376662,9.272847,-9.257461,-1.899134,5.799618,-9.718661,-6.090881],[1.766342,-3.927392,-1.515718,-8.534688,9.669887,-6.045464,-2.186308,-1.512730,0.457400,3.867570],[1.509815,-1.106240,4.157385,-2.462040,2.552749,6.356552,-2.806189,2.497895,-8.508750,3.032628],[0.680606,5.969044,-7.420210,-2.737901,-3.728841,-8.404617,7.445932,-1.989959,-8.075290,2.708265],[8.429736,2.267272,-8.302058,-8.148543,-7.144256,-7.172818,-4.984138,1.355495,7.150436,-0.928836],[7.073565,4.498009,2.862531,2.392240,-3.140011,5.129258,5.644099,-9.110097,6.155762,8.457963],[-0.689169,-6.816350,4.851259,-0.373815,5.719091,3.591130,9.119276,-5.893852,-1.998699,5.709062],[-8.767776,-1.521105,3.549677,8.331915,-1.685145,-4.401202,-1.037217,4.845154,-5.291649,5.798747]],[[-4.310824,-1.582466,5.172227,3.569575,-2.498868,3.585630,6.841842,-9.626032,-6.522131,-7.846553],[-7.798253,1.745854,4.186745,5.870152,-0.655433,2.695140,5.250142,1.855419,-5.970246,-6.660730],[2.190465,8.846453,5.361455,3.076848,1.614074,-8.672433,-3.983387,0.388838,-8.157089,6.949362],[2.168362,-6.522001,-7.003932,7.979873,-7.839952,3.608733,7.737000,-1.957731,-8.543788,-1.503190],[4.403444,-6.476341,1.545976,1.859826,-8.781674,-1.568087,-1.214192,-9.342866,-0.888456,8.064667],[4.195195,-2.562948,-6.867107,9.689894,-3.968640,-4.322116,9.430357,2.039140,-3.875244,-2.305729],[9.770394,-1.350093,6.680465,-0.389334,3.096723,-2.503281,-8.068943,9.102115,-0.868014,-3.836688],[6.146240,-4.009283,3.242246,0.565681,7.690154,-8.169691,-6.510955,-1.139318,4.689161,-6.966361]],[[-0.622042,7.060185,8.272378,6.744904,9.530870,1.094449,0.133785,7.231601,6.603093,-9.064830],[3.840117,-3.852387,-3.794427,2.220374,1.722649,-2.844841,7.587802,2.721700,-4.048348,-5.544969],[-8.369399,-1.875352,7.623294,-3.133350,-2.271807,5.247792,8.968896,-9.518186,-8.649384,7.836882],[6.583478,-9.640833,9.010256,3.238246,-7.169878,6.820754,0.311504,-2.295161,-1.520709,-4.450047],[-6.112249,-3.777540,4.564391,4.567470,-9.538021,8.809618,-7.467544,-9.253460,3.187234,5.475122],[0.168794,-7.610329,5.858675,-1.792296,7.073237,-6.606710,-0.702579,6.643124,1.525153,-6.224793],[1.640701,7.247035,1.827495,4.033812,-0.728343,-6.091456,-0.182842,-8.871498,-7.504571,3.551890],[2.065760,0.582899,-0.504478,7.106477,3.049213,8.979665,-1.972569,-4.843690,6.238354,-6.769058]],[[-4.511419,7.880091,-6.738478,-3.524590,-0.197307,-5.444458,-6.046438,-1.881803,3.240087,-9.167432],[4.650982,7.546343,0.034826,1.781650,-3.388952,-0.532692,-0.402263,4.470776,6.196724,0.370919],[7.917087,-9.467578,3.403790,-8.482001,-4.270431,1.835909,-3.823999,3.834922,-6.795864,-6.993500],[6.237705,-1.837523,9.482613,-6.319257,0.550552,-5.969105,9.216515,-9.612678,6.387358,5.074013],[-2.557921,2.271432,-2.838298,-8.683111,7.618338,0.373138,7.977504,9.929756,5.714151,5.808481],[6.343074,5.077146,-1.272962,-6.196295,-4.605394,-5.059335,-0.409007,3.849187,-0.202649,-3.768933],[1.173879,-5.056823,7.212117,6.375956,7.300439,9.810616,-2.604008,-5.864910,5.196845,3.093118],[-4.295858,-3.366611,8.834033,4.841777,4.465947,-2.033384,6.408574,2.014451,-8.911203,4.039316]],[[6.045422,-6.743950,6.495534,8.537007,0.821558,-7.564639,-9.654396,5.780277,2.933454,9.073396],[-0.589772,5.286060,9.454000,-6.913439,9.254595,0.269332,-3.223112,-1.760389,-2.596402,-5.135629],[-2.983775,-7.041787,1.456827,7.810545,-8.733471,7.693548,-6.859902,6.202478,9.925781,3.664229],[6.711657,-5.253575,-3.129555,-8.425881,-6.899306,2.303631,6.924244,3.112182,0.446002,1.886385],[0.146865,-1.132821,0.805187,0.461090,5.259883,0.206268,-4.186926,-3.877712,3.931524,5.590680],[-5.511455,-2.944307,-6.898783,-0.377030,-0.238386,-6.691368,8.526515,6.570641,-4.913390,0.321897],[9.923553,-7.147423,-8.709759,3.145467,8.645125,4.145804,1.716867,-1.404939,7.533637,7.913304],[-9.307304,-0.720985,-1.591179,6.422215,-4.514248,-5.065812,0.514460,6.585810,5.222772,3.566419]],[[-5.097846,-4.722107,8.499335,0.392652,-5.181814,-6.600134,-3.056493,-0.043984,0.734105,5.217080],[-6.241134,3.806785,3.241158,-5.183235,1.544789,1.755750,-7.666311,7.906724,-1.248642,8.237791],[3.730165,-7.443930,-9.790956,-7.812561,-1.442712,8.929740,4.671122,-0.402772,-1.113568,-2.213402],[4.137606,9.717498,5.526739,1.029649,6.266883,-2.448590,-6.242330,6.113417,4.876657,-9.791911],[6.478484,8.392162,7.471190,0.098031,-4.557871,5.186025,-1.547840,0.824822,-8.275347,5.555463],[0.581617,-4.614639,-8.806039,-2.234905,-4.005747,6.843279,3.935094,-0.486456,3.277090,-6.471447],[4.219412,5.203107,-6.560987,-1.910500,7.963522,-3.364518,7.683673,-0.668575,-1.738108,-2.633528],[-5.953990,3.754777,-6.265267,-9.875936,1.248829,2.953287,-3.562137,-6.721756,5.398547,8.134088]],[[1.398613,-8.521643,5.530287,-2.290967,4.376810,-0.043698,5.745612,4.686511,9.663882,1.677292],[-6.662325,-4.013168,9.796705,2.598974,1.469300,9.094151,0.605345,7.329938,-5.595093,-7.218039],[-0.120976,8.837044,-6.936956,4.801969,-7.046628,1.582217,7.819581,-6.634047,-5.556562,-7.907671],[-6.088032,-5.909808,4.720580,-9.518932,-4.287366,5.982798,5.666653,-2.918470,-2.270355,-3.260025],[-4.933596,8.898721,3.349101,-6.172196,-4.364845,2.791053,-5.696458,-5.660973,3.607197,7.830290],[2.757391,2.643849,-0.967158,4.511698,2.479789,3.250666,4.352661,-1.399771,-4.091473,-1.700732],[4.371972,-0.574866,-9.739241,9.343527,6.758394,1.048321,0.519344,-4.283647,-0.876662,-5.337951],[0.532064,9.511669,7.979253,8.475003,-6.595681,-3.767092,5.416950,8.005452,9.030428,6.049755]]], dtype = "float32")#candidate|6493|(9, 8, 10)|const|float32
uop_6494 = relay.cosh(const_6493.astype('float32')) # shape=(9, 8, 10)
output = uop_6494
output2 = uop_6494
func_6497 = relay.Function([], output)
mod['func_6497'] = func_6497
mod = relay.transform.InferType()(mod)
mutated_mod['func_6497'] = func_6497
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6497_call = mutated_mod.get_global_var('func_6497')
call_6498 = func_6497_call()
output = call_6498
func_6499 = relay.Function([], output)
mutated_mod['func_6499'] = func_6499
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4822_call = mod.get_global_var('func_4822')
func_4824_call = mutated_mod.get_global_var('func_4824')
call_6531 = relay.TupleGetItem(func_4822_call(), 0)
call_6532 = relay.TupleGetItem(func_4824_call(), 0)
func_4618_call = mod.get_global_var('func_4618')
func_4621_call = mutated_mod.get_global_var('func_4621')
const_6551 = relay.const([-6.703480,-7.121057,5.493636,-7.245410,7.878098,-3.210319,-3.925981,-9.413465,-3.780979,-9.851004,6.072460,-4.919781,-6.574234,2.765473,-6.802394,1.467406,-0.823965,-0.941852,2.911657,2.128766,6.455299,-6.071050,2.699647,-2.713625,4.312073,6.143114,-3.049546,8.808881,9.285839,5.830500,-8.503273,-5.953994,-6.015578,0.367296,5.513822,-8.145875,-7.284873,-8.003296,-8.497136,-9.122742,-5.149850,-5.287302,6.541617,5.907873,-5.614208,-2.885957,2.394048,4.728288,0.170875,5.962402,-1.396959,-4.380204,1.715471,-8.238725,5.942752,4.523917,-7.902435,-0.010804,9.330360,4.559554,-3.763926,4.039296,-9.894599,5.438293,0.354952,0.179990,8.860343,-3.692235,-2.406849,-5.137557,2.636377,7.004219,6.239210,5.363621,-8.401615,-0.286951,7.600645,-7.876980,2.839672,0.750152,9.342908,-2.700751,-2.342709,1.706247,9.960958,-0.859339,4.661464,-0.693033,-1.476266,7.389232,-3.883408,6.906574,0.499388,-6.400391,-6.457334,2.632980,-8.643345,-0.203034,4.978387,8.648814,0.082593,6.602761,-7.131509,7.324992,-3.742049,0.658155,-2.024487,-3.051103,-2.464557,-6.553562,-0.575186,-5.586858,1.046646,-4.052113,-9.576548,6.135446,5.894012,-4.349245,6.902000,-3.561631,9.776612,-8.953621,5.000966,1.926303,0.936211,-8.030011,-2.521969,-7.533512,5.870469,-6.208999,6.964805,2.990102,-2.023622,-8.340805,7.978240,2.334812,-6.650496,-3.763415,-1.018781,4.729099,-4.258123,-8.193638,5.144105,-7.820186,0.787467,-5.685084,2.316556,3.920252,-6.917104,5.119700,9.092781,-3.577731,-6.227349,9.375850,-2.796390,0.635674,-8.196563,1.150161,-0.871033,-7.229889,-7.207953,-5.247438,-5.795512,-4.037835,7.838671,-4.466246,-7.098388,-2.382096,5.018589,-5.698748,4.136384,-4.842448,9.720784,6.386933,-0.076287,6.620217,-4.232363,-0.239746,7.342662,2.900781,-2.992906,3.288465,-5.776244,0.457351,1.573098,-1.872160,0.261039,-5.232579,-9.447526,0.398448,5.014741,-8.617063,-4.545395,-7.906332,0.031141,1.907638,9.556989,-3.808149,-7.120790,-9.608130,0.750729,-2.808360,5.283311,6.642173,-6.330985,-5.074170,6.895003,-8.477605,7.406655,-1.010009,-6.332466,-0.509451,-2.087304,-1.145481,9.387510,9.365140,1.691713,2.283552,-3.541009,-0.951138,1.771628,2.697301,7.272288,8.319732,-3.984935,5.966521,4.956052,4.474969,7.729432,-8.617045,-1.931066,0.561851,-7.502316,-6.129733,-9.000262,2.851002,-3.381921,-2.757271,-1.972459,-5.820736,4.058128,-1.712148,-5.761982,1.764224,9.882589,-8.699613,6.261111,9.561799,-0.294767,-9.653097,-0.852209,4.701971,-4.894537,6.969822,7.150638,-3.597603,5.096630,9.387919,-2.810123,1.981918,-3.923569,8.981611,-5.672407,0.433403,-1.139096,1.974228,-4.433190,9.117978,-5.989208,1.302849,1.412969,9.463446,-5.705098,-2.433173,2.721278,-8.118300,8.850071,1.004363,-3.285694,-5.766341,-5.532162,-6.835329,-1.911405,-8.735313,-2.070532,-5.001157,5.254717,-1.941422,-2.565346,-2.823723,7.241927,-3.573046,-6.835545,-2.936292,-4.484504,0.897083,-8.592032,3.407161,-9.435460,9.335853,-1.348370,-6.269319,4.008562,0.067949,5.351528,0.005609,1.714864,9.145500,1.151531,-7.862125,-7.008101,7.886937,4.780056,-0.376149,-6.629388,-3.409642,5.508657,-1.992570,-5.527734,0.998751,9.203482,-2.992645,-1.990760,-6.941118,8.839463,8.919079,-4.898605,-7.761004,-3.867118,4.420634,-3.200656,4.332136,-3.276074,7.479530,0.389283,-8.955651,8.568293,8.122436,-9.605795,-0.716617,0.689217,-1.495100,-6.628370,1.486872,0.958907,3.677273,5.074874,0.055827,-2.928958,-3.230864,3.778321,-1.549682,5.843481,-2.869608,8.238783,6.055390,6.237744,-5.020189,-5.934209,-9.653379,4.467885,3.479281,-5.129592,-6.468671,8.032693,-4.188663,-4.276712,-2.641461,7.635195,2.893684,5.020756,4.678467,-3.703191,-1.302135,6.262588,-5.602286,-3.985211,1.983272,5.473806,7.807047,-5.718305,6.026186,-1.530937,-4.988697,5.256708,-6.258872,-3.987047,6.803716,1.644360,8.385577,-3.386640,0.956767,-0.553277,9.244242,7.787017,-2.244257,-8.357958,-3.247649,8.273084,-8.314996,-2.628388,3.417545,-1.384109,-3.850220,-2.786876,6.790030,2.979581,8.492035,6.811930,1.234871,7.971419,3.045118,-9.769968,-1.461784,-6.866398,-3.007118,8.963207,-3.359102,-4.366438,-3.524656,-5.345746,5.974325,-2.552063,7.332148,9.051726,-1.109938,5.241082,-3.748276,5.928551,7.652709,-6.423067,5.963037,-0.608290,8.438898,-2.146797,7.744208,9.550173,-2.873701,-0.759319,-2.227925,5.353409,-6.772874,-6.418757,-0.432168,-6.027114,6.992130,3.883209,-2.498535,-9.121679,-0.773873,1.478851,-0.439648,-1.861324,3.191371,-8.381626,-3.581402,-4.005103,-6.690021,3.840687,7.625515,0.678135,-6.508200,7.340218,-6.931448,1.834075,-9.838038,-4.488979,2.619579,9.222116,8.434134,-8.984741,2.087427,0.048738,3.854931,-2.132716,-0.149479,-2.035872,-8.700774,0.097554,3.706777,0.243335,-8.241768,-5.204808,-8.270507,-8.775478,-2.247602,8.017162,5.968429,6.598401,-0.348898,2.146362,3.287742,0.888631,8.678155,-6.848578,0.903294,-0.821750,-5.002814,-2.864377,3.624871,-0.252276,0.328911,6.377294,-1.276733,-5.167052,0.524007,0.029890,3.162031,-4.723822,-6.117599,1.442098,7.820658,1.356487,7.057803,-5.169635,-6.066896,-8.431521,1.383788,-4.996633,-0.227659,-5.465813,2.549907,2.746436,-2.052386,6.474770,-2.590841,0.164982,8.041905,2.975151,-7.270893,6.643337,1.996360,-6.759824,0.807325,-2.048375,4.084413,7.207681,5.521747,8.241309,2.286401,-5.957074,-4.958870,6.029760,-7.737458,-5.070239,-2.566809,1.213609,0.531664,-4.638515,-2.935430,-4.392547,0.212932,-9.801885,-1.288887,9.711424,3.206930,-9.157368,9.097422,1.376389,-2.184068,-2.111632,6.384774,-9.013933,8.108604,9.259517,-9.116528,-8.018722,-3.883186,-8.740214,-3.251032,-4.735994,6.810725,4.031337,-4.764045,-1.154141,-2.648720,7.814374,-5.358071,-9.714953,1.481436,8.275503,-7.324614,8.115467,2.769323,6.477256,6.462208,6.238057,-1.717994,8.671664,1.235836,-3.725053,-6.316225,3.846726,5.335767,7.179027,2.215025,-3.686652,-7.077066,-9.645704,3.031821,1.067129,9.333166,2.987353,-2.153071,-0.930615,-0.797597,4.689391,8.701025,3.253819,2.300780,0.277607,-3.407138,-6.657184,5.173204,-1.521454,-3.361671,-7.608584,-0.811557,-9.665561,-6.814992,-2.645760,6.094010,-5.280391,-3.643693,7.947870,-0.754585,-5.189183,0.335009,9.990745,-8.253677,2.045580,5.277294,-8.432015,-7.392306,-5.445317,-3.325456,1.639241,4.869776,-0.275030,-1.111941,5.138475,-5.428099,9.029916,-4.775187,-9.175861,-2.190128,1.860420,7.239502,0.012960,-8.451496,9.065244,-7.665728,-3.088979,-5.246885,4.527816,1.475778,3.218536,-6.672542,0.778059,0.738995,8.788667,3.737866,0.351832,7.882754,-9.597210,6.067044,-8.931375,6.528341,3.085721,4.091448,-0.608314,0.561398,-1.185773,-7.149505,-1.608880,8.602945,4.808733,-9.408073,-0.850513,5.206592,-8.457587,-5.979678,-9.205098,3.880651,9.892462,-5.366740,7.723146,2.070832,6.023604,2.172708,6.586186,-8.499689,-4.398868,7.286006,-4.161957,3.536868,6.930091,4.725874,9.223947,5.661796,3.559325,-3.272367,4.720163,-3.392954,0.446177,-8.448180,-4.463511,7.858494,-6.716000,0.481678,1.194272,2.658451,-6.487082,-1.883227,1.202222,-2.860608,6.795827,-2.890643,-7.997396,-7.590584,-1.920588,-6.998473,1.077463,6.917713,1.687538,-9.375255,-1.119188,0.903143,-8.580485,-4.234016,-7.355364,-9.655853,-5.735539,-0.571563,8.179671,-4.267570,-4.765532,-5.221811,9.235425,5.896932,8.824518,9.814302,8.012611,-4.239733,2.892401,9.852638,-4.776864,6.693874,-2.747228,4.069081,-0.326985,-4.906848,8.433009,-2.051082,-6.149285,4.265349,8.885898,4.080190,6.909721,-2.746812,3.965730,-8.923385,5.727458,-1.411529,-6.914154,4.294527,7.139381,7.380233,7.047565,3.468023,3.543865,2.031032,-7.129119,0.793110,-6.245747,-6.253444,3.352556,7.898964,-8.416791,9.272194,-7.061952,-7.669560,-0.910834,-9.065838,8.934706,6.213028,-1.486990,-0.262173,-4.592233,-4.949360,6.176437,-7.873478,-0.993169,-2.065886,7.895871,6.308664,-3.891328,4.075108,4.384115,-2.487373,-8.224714,9.489338,-4.142400,2.024624,9.705498,-7.945371,-6.281347,7.991899,-0.186676,2.532819,0.274788,1.646072,-7.601563,-1.289371,-8.954550,9.311870,1.331011,7.037523,-5.399023,-7.216540,3.584168,-3.352993,0.155624,-8.011497,3.605017,5.473681,-6.186018,7.452976,9.398159,-1.413570,-4.133888,-6.898313,-5.070011,-2.107463,-3.313522,-1.456510,7.103203,3.807718,-1.694658,-2.798782,-5.709518,6.636524,6.315924,7.369843,-4.089030,-9.915344,9.379049,-6.311929,6.810621,-8.621015,2.105490,5.653967,-2.730051,5.525959,-2.557446,-1.053135,2.815716,7.312571,-5.665525,-7.256721,-0.559892,-7.110455,6.655506,2.914304,6.889508,4.588190,-4.414018,2.435527,9.964233,4.014370,-2.010700,-5.437484,1.940587,-9.385699,7.696235,0.366699,-6.983525,8.463707,-9.015934,-4.397796,9.211387,9.304415,-9.572972,-7.325872,0.530312,5.682577,8.234139,-7.137054,6.868304,8.413689,7.114182,-6.072441,-3.224510,4.556451,-5.727680,-7.546849,3.744812,1.148111,-6.542704,-4.737611,9.370727,2.947571,8.049731,-5.364912,1.074704,7.497992,-6.111805,-7.282578,-5.283429,1.545600,4.020734,-8.758271,1.628795,-0.134370,3.714293,-3.196491,-1.079494,6.575158,0.659510,-8.521171,5.414054,8.507800,6.604464,-0.445921,5.010121,-2.565328,0.929024,-8.732448,-1.265056,-8.344962,8.533215,-4.781703,6.578496,7.016059,5.965042,1.190096,-5.975895,-1.366558,-2.900015,0.090083,8.437919,-0.971787,-1.346527,8.966614,4.436057,-8.216018,-7.124665,-8.711512,-5.230505,-6.272938,1.088113,6.552359,-1.301946,3.305048,-0.954260,3.902227,-6.536067,1.359456,-2.659758,2.828696,-6.744872,-4.175951,-0.030148,-1.336268,-0.617437,1.657815,-6.654980,6.118695,-5.473840,2.942226,8.796149,-8.331881,-0.425910,-5.312608,1.952145,-8.994057,3.564973,-6.482621,5.694942,8.518340,-4.838399,7.227085,9.964861,3.347104,6.990324,-4.113904,2.321955,-2.847753,-8.204308,-4.747754,-8.049447,-1.494682,5.574833,-5.075806,9.174165,7.519096,-9.329068,2.420224,2.099726,5.819755,3.738293,-6.297071,4.373021,2.947365,8.561873,9.082541,-7.882374,-5.262225,-0.094329,2.033967,-6.945315,1.175033,1.307818,-3.977755,-7.135140,-1.428429,0.277206,-5.074773,0.319205,3.496000,-5.149422,4.372901,-5.651554,-8.363170,-0.838878,-2.227359,-0.439407,7.559904,-4.662388,6.078759,3.732551,3.255862,-5.247975,5.802830,8.457287,-9.642672,6.185157,-7.913600,2.845784,2.115456,-8.556344,-3.816847,3.441588,9.504273,8.922720,-1.385726,-1.498454,-6.653162,-2.216253,-7.041660,-7.913746,8.327240,-9.021644,7.497950,-1.660668,6.492680], dtype = "float64")#candidate|6551|(1056,)|const|float64
call_6550 = func_4618_call(relay.reshape(const_6551.astype('float64'), [11, 12, 8]), relay.reshape(const_6551.astype('float64'), [11, 12, 8]), )
call_6552 = func_4618_call(relay.reshape(const_6551.astype('float64'), [11, 12, 8]), relay.reshape(const_6551.astype('float64'), [11, 12, 8]), )
uop_6558 = relay.erf(const_6551.astype('float32')) # shape=(1056,)
uop_6571 = relay.sinh(uop_6558.astype('float64')) # shape=(1056,)
var_6575 = relay.var("var_6575", dtype = "float32", shape = (1056,))#candidate|6575|(1056,)|var|float32
bop_6576 = relay.add(uop_6558.astype('float64'), relay.reshape(var_6575.astype('float64'), relay.shape_of(uop_6558))) # shape=(1056,)
var_6579 = relay.var("var_6579", dtype = "float64", shape = (1056,))#candidate|6579|(1056,)|var|float64
bop_6580 = relay.left_shift(uop_6571.astype('int8'), relay.reshape(var_6579.astype('int8'), relay.shape_of(uop_6571))) # shape=(1056,)
output = relay.Tuple([call_6531,call_6550,bop_6576,bop_6580,])
output2 = relay.Tuple([call_6532,call_6552,bop_6576,bop_6580,])
func_6594 = relay.Function([var_6575,var_6579,], output)
mod['func_6594'] = func_6594
mod = relay.transform.InferType()(mod)
mutated_mod['func_6594'] = func_6594
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6594_call = mutated_mod.get_global_var('func_6594')
var_6596 = relay.var("var_6596", dtype = "float32", shape = (1056,))#candidate|6596|(1056,)|var|float32
var_6597 = relay.var("var_6597", dtype = "float64", shape = (1056,))#candidate|6597|(1056,)|var|float64
call_6595 = func_6594_call(var_6596,var_6597,)
output = call_6595
func_6598 = relay.Function([var_6596,var_6597,], output)
mutated_mod['func_6598'] = func_6598
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4591_call = mod.get_global_var('func_4591')
func_4593_call = mutated_mod.get_global_var('func_4593')
call_6632 = relay.TupleGetItem(func_4591_call(), 0)
call_6633 = relay.TupleGetItem(func_4593_call(), 0)
output = call_6632
output2 = call_6633
func_6637 = relay.Function([], output)
mod['func_6637'] = func_6637
mod = relay.transform.InferType()(mod)
output = func_6637()
func_6638 = relay.Function([], output)
mutated_mod['func_6638'] = func_6638
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4835_call = mod.get_global_var('func_4835')
func_4837_call = mutated_mod.get_global_var('func_4837')
call_6639 = relay.TupleGetItem(func_4835_call(), 0)
call_6640 = relay.TupleGetItem(func_4837_call(), 0)
func_4111_call = mod.get_global_var('func_4111')
func_4113_call = mutated_mod.get_global_var('func_4113')
call_6647 = func_4111_call()
call_6648 = func_4111_call()
output = relay.Tuple([call_6639,call_6647,])
output2 = relay.Tuple([call_6640,call_6648,])
func_6649 = relay.Function([], output)
mod['func_6649'] = func_6649
mod = relay.transform.InferType()(mod)
mutated_mod['func_6649'] = func_6649
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6649_call = mutated_mod.get_global_var('func_6649')
call_6650 = func_6649_call()
output = call_6650
func_6651 = relay.Function([], output)
mutated_mod['func_6651'] = func_6651
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6649_call = mod.get_global_var('func_6649')
func_6651_call = mutated_mod.get_global_var('func_6651')
call_6665 = relay.TupleGetItem(func_6649_call(), 1)
call_6666 = relay.TupleGetItem(func_6651_call(), 1)
output = relay.Tuple([call_6665,])
output2 = relay.Tuple([call_6666,])
func_6683 = relay.Function([], output)
mod['func_6683'] = func_6683
mod = relay.transform.InferType()(mod)
output = func_6683()
func_6684 = relay.Function([], output)
mutated_mod['func_6684'] = func_6684
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6637_call = mod.get_global_var('func_6637')
func_6638_call = mutated_mod.get_global_var('func_6638')
call_6693 = func_6637_call()
call_6694 = func_6637_call()
func_5101_call = mod.get_global_var('func_5101')
func_5103_call = mutated_mod.get_global_var('func_5103')
var_6700 = relay.var("var_6700", dtype = "int8", shape = (1, 180))#candidate|6700|(1, 180)|var|int8
call_6699 = func_5101_call(relay.reshape(var_6700.astype('int8'), [2, 6, 15]))
call_6701 = func_5101_call(relay.reshape(var_6700.astype('int8'), [2, 6, 15]))
var_6706 = relay.var("var_6706", dtype = "int8", shape = (11, 180))#candidate|6706|(11, 180)|var|int8
bop_6707 = relay.logical_or(var_6700.astype('bool'), var_6706.astype('bool')) # shape=(11, 180)
output = relay.Tuple([call_6693,call_6699,bop_6707,])
output2 = relay.Tuple([call_6694,call_6701,bop_6707,])
func_6714 = relay.Function([var_6700,var_6706,], output)
mod['func_6714'] = func_6714
mod = relay.transform.InferType()(mod)
mutated_mod['func_6714'] = func_6714
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6714_call = mutated_mod.get_global_var('func_6714')
var_6716 = relay.var("var_6716", dtype = "int8", shape = (1, 180))#candidate|6716|(1, 180)|var|int8
var_6717 = relay.var("var_6717", dtype = "int8", shape = (11, 180))#candidate|6717|(11, 180)|var|int8
call_6715 = func_6714_call(var_6716,var_6717,)
output = call_6715
func_6718 = relay.Function([var_6716,var_6717,], output)
mutated_mod['func_6718'] = func_6718
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6145_call = mod.get_global_var('func_6145')
func_6146_call = mutated_mod.get_global_var('func_6146')
call_6732 = relay.TupleGetItem(func_6145_call(), 0)
call_6733 = relay.TupleGetItem(func_6146_call(), 0)
output = call_6732
output2 = call_6733
func_6755 = relay.Function([], output)
mod['func_6755'] = func_6755
mod = relay.transform.InferType()(mod)
output = func_6755()
func_6756 = relay.Function([], output)
mutated_mod['func_6756'] = func_6756
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4835_call = mod.get_global_var('func_4835')
func_4837_call = mutated_mod.get_global_var('func_4837')
call_6761 = relay.TupleGetItem(func_4835_call(), 0)
call_6762 = relay.TupleGetItem(func_4837_call(), 0)
output = relay.Tuple([call_6761,])
output2 = relay.Tuple([call_6762,])
func_6771 = relay.Function([], output)
mod['func_6771'] = func_6771
mod = relay.transform.InferType()(mod)
mutated_mod['func_6771'] = func_6771
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6771_call = mutated_mod.get_global_var('func_6771')
call_6772 = func_6771_call()
output = call_6772
func_6773 = relay.Function([], output)
mutated_mod['func_6773'] = func_6773
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4591_call = mod.get_global_var('func_4591')
func_4593_call = mutated_mod.get_global_var('func_4593')
call_6797 = relay.TupleGetItem(func_4591_call(), 0)
call_6798 = relay.TupleGetItem(func_4593_call(), 0)
func_2732_call = mod.get_global_var('func_2732')
func_2736_call = mutated_mod.get_global_var('func_2736')
const_6811 = relay.const([3.974833,-9.937343,-0.693473,-5.115126,-5.781904,-4.306952,6.830341,-6.102212,3.675787,2.653142,2.429303,-4.305446,7.479021,-5.359916,8.961807,-4.045627,6.239416,2.990364,3.470941,-6.523896,5.761896,4.763736,4.244889,1.456201,6.133907,-0.400553,3.865754,-0.345419,-4.034953,5.998295,-7.515404,-6.237988,-8.699193,4.058604,1.571674,4.219035,2.392568,3.919954,-3.994496,3.046640,4.410785,1.864528,-8.955699,-5.595687,-2.038090,-3.068079,0.346381,-6.289212,-3.916230,9.479052,9.746284,-0.921067,-4.714194,1.479456,-7.925985,-9.529425,2.787948,-6.211591,4.797010,-2.179372,-0.629178,-7.285286,2.842982,2.554960,2.147976,-1.038990,9.115732,0.714092,-8.390436,6.523680,3.551608,9.331099,1.391020,-9.842315,-2.990591,-3.131955,-4.526335,-3.287502,1.889729,7.646497,-6.920920,2.806135,4.997433,2.645982,-6.111373,-9.591684,-6.948049,-8.381332,-2.719031,7.446523,8.059518,5.821006,-9.210479,3.586508,-6.222580,-6.219854,-5.528717,-4.036482,-4.974150,-3.362619,-7.348537,-1.647711,-8.582615,-8.580391,-0.054327,9.174501,7.526382,3.820468,-8.698800,0.054272,8.931925,8.543450,-2.497154,1.862009,-7.537770,6.239175,7.440731], dtype = "float64")#candidate|6811|(117,)|const|float64
const_6812 = relay.const([-5.289813,2.679477,-7.470921,-0.649462,6.119926,-1.264501,5.959077,-2.943802,-1.462943,5.720176,-1.034444,4.194714,-7.271905,1.028688,-3.478797,-2.811765,-6.519208,-4.282536,-7.613830,-9.088715,7.641550,7.786783,4.605817,3.576834,-8.122795,5.607440,-2.390983,-1.323435,6.305373,1.562624,2.841550,-4.021223,2.154989,-1.124080,-0.444666,9.144744,1.209256,-4.499461,3.992249,-9.131376,-4.882897,-3.166423,-9.356428,-2.377468,-0.573543,0.913729,1.540620,-5.408231,-8.687751,-7.776428,5.538433,-4.181441,-9.675016,0.863916,9.273303,6.592558,-9.042825,-4.227197,-1.599225,-9.957337,-4.839685,-3.467005,-6.044681,1.185502,2.765012,4.504373,3.945625,-7.159443,-3.449029,9.335947,4.766397,-9.387101,-2.809621,8.126205,4.257591,-5.766398,5.211363,7.396745,3.684338,4.940817,-7.666737,3.263558,-0.818513,-2.979633,-2.956888,-8.994002,-4.645491,8.074931,-7.311847,-2.711472,-5.412805,8.082047,6.211541,7.174163,8.326028,-6.801914,9.182115,-3.492496,3.004832,2.989277,-4.793123,1.308896,-3.053314,-6.754948,4.674281,-9.755843,7.308296,-3.473044,-0.723358,3.812316,-7.126336,2.486919,3.496010,9.663221,-5.582220,-3.835345,3.259884,-8.365849,-7.090588,-2.634184,5.628117,-1.035537,-0.217020,4.544590,-5.805984,7.665114,-5.667370,3.442016,-3.538785,-8.084384,9.096092,0.782174,4.292455,-2.059983,-5.705818,2.870534,4.374782,-2.780884,-9.413437,-0.757657,-4.659763,5.138411,-3.428418,1.039971,-0.028687,-8.316827,-0.862315,-1.010930,5.557459,-4.001475,6.323891,0.406672,3.303227,-3.647805,3.102619,-8.078223,-8.676519,5.312969,-8.160050,4.849987,-3.781594,-8.689625,-8.914468,-6.838752,8.082437,9.941403,4.030189,9.263702,2.651314,-3.610875,-4.530638,-8.803797,9.430197,-0.774570,-8.213383,-4.213060,2.931810,-7.808361,4.922054,1.238188,5.030320,7.143695,9.707993,3.627501,-4.543374,8.855613,-3.310494,-6.400590,2.174191,-1.746705,-5.640197,8.308175,1.559129,1.294592,-6.491318,-1.112742,-7.281029,-4.778802,-6.303687,-3.846694,-8.233563,-5.196912,1.013851,-6.607877,5.112493,0.478552,2.323391,4.282307,-1.435455,4.918727,2.993811,-3.960007,7.196953,8.093897,-5.523215,-5.139401,6.657167,7.105547,5.125850,-8.176285,-0.534772,1.634050,-8.650257,3.684950,1.713226,3.723627,-6.447088,-8.932168,0.333148,1.808146,3.349688,-4.438851,-0.254325,-6.273530,0.535682,-9.780482,-7.809770,9.533242,-6.017380,5.111936,5.416528,-8.473166,-8.396040,5.800110,-0.611148,1.848623,-6.637967,0.174893,2.929106,0.626582,-5.201225,2.645941,8.464488,7.376719,2.015287,3.452983,5.477039,-8.526816,9.637804,4.125384,-1.900620,6.494383,-4.803827,-6.278133,-6.688066,-5.548082,3.026715,0.058161,-6.619329,4.244086,9.515308,-3.695386,-8.644549,-6.024754,-7.650630,-9.070505,-0.519954,-8.514089,-2.878778,7.991320,-6.949000,5.168768,0.316398,-9.466751,8.330785,1.972053,-4.008226,3.440788,-4.742528,-7.445379,-8.125074,2.426009,5.942390,0.829449,-8.402119,-3.635568,4.124886,5.956469,1.052769,-3.685523,1.425292,3.940498,-8.817516,-8.106145,0.077352,1.528537,8.706752,-8.508795,-3.276619,-3.709515,-8.696599,9.996461,-1.786346,-0.902384,-2.689041,-1.927968,-2.659451,-1.217004,6.524476,5.086718,3.399778,-6.412214,-2.283251,2.225016,-6.493242,5.098048,1.031394,-0.958228,3.696521,2.675174,-9.469257,0.733608,6.596059,6.660927,7.815239,5.986251,9.470370,3.285693,2.799968,0.416252,6.351236,-0.553877,3.950769,-7.835350,-3.016244,4.889977,-4.545908,9.426836,-7.566612,-9.332677,-0.401637,-4.616048,5.978406,2.712592,7.708630,-2.777062,7.771760,4.771704,-3.909707,-4.626327,7.477735,5.623059,-8.927565,6.358629,7.130028,-9.108794,-6.375083,8.296211,6.822696,-5.482505,5.663424,6.859470,9.328646,-8.195253,-1.775245,-2.238420,-5.642079,6.099114,1.965926,8.525245,-8.419260,-2.904418,-9.946323,-5.480894,-2.047760,-6.952562,-1.964193,-8.918080,-0.439958,3.571225,2.199523,-8.392394,2.864538,4.440120,4.193809,4.464892,-4.224257,-1.373062,1.936621,-0.129654,8.410900,-5.856826,-6.097969,9.700993,5.672431,-4.110034,7.379114,-8.374545,-1.608348,2.842814,-9.288487,-3.779324,-2.763654,1.800479,0.854382,7.690441,8.269445,-3.719293,-5.430718,-9.160289,-1.368453,2.588217,-3.744307,-7.963136,5.983813,-9.822987,-9.017868,-3.603943,9.275482,0.760032,-7.828811,1.250969,-0.025109,6.558192,8.379150,-3.916643,-4.059733,1.057515,0.669442,-7.385197,4.278605,-8.057967,6.534727,-0.402214,-4.919139,6.941341,-9.813532,-4.697108,0.131399,-0.498481,-5.413850,-5.033077,-7.649187,2.493141,-5.510946,-0.226687,-8.647224,9.220029,6.576344,-0.655860,5.778625,-0.220365,-8.713401,-7.399420,9.164960,-1.460154,1.648764,-4.794459,2.098909,6.637145,4.769748,2.106752,-0.135761,7.462664,5.628470,-5.214511,-1.498652,-0.711320,4.256058,-5.324990,7.361413,-4.478828,4.243361,-7.545844,-0.813709,-4.480405,7.377550,2.329327,8.415607,-6.041388,-0.570812,6.098567,9.439277,8.850629,4.393980,3.880936,7.837814,2.944666,8.203314,9.943226,-9.733247,9.155026,7.993929,9.890665,-7.851379,6.813445,-4.039804,5.279459,2.749294,9.355884,-6.069562,3.168281,-6.850206,-8.967837,5.043204,-7.997747,-4.411693,4.711935,-9.571983,-4.044238,-6.640067,-2.108898,-6.330900,2.166859,-8.425962,-4.075288,4.706424,-5.051504,5.084186,5.180715,-2.961766,-5.505112,-8.690136,0.360212,-4.344850,5.607378,2.831620,-4.348023,3.988763,7.670641,-4.462398,-4.450249,-1.613216,3.793560,5.760751,-0.409959,-3.845418,-5.070074,-8.247548,-4.332971,1.002894,-3.139866,5.488302,9.151671,-9.362732,-2.712585,-5.278505,-8.177610,-2.450559,-9.747900,9.795640,2.617328,5.623886,-5.673384,3.429655,2.408681,-5.115958,-3.308340,-2.579337,-4.672719,-1.775192,0.693395,5.130035,0.978208,4.935148,9.608074,-2.868627,6.936320,5.353491,-7.387602,-2.906496,5.178578,4.828299,-2.826346,3.232651,-9.077718,0.424374,7.097521,0.299096,-8.611380,-3.077400,5.188170,2.849231,3.501629,-4.092819,8.893308,3.448241,2.657281,-2.206329,-1.929490,-4.931410,-3.730341,-5.281301,-9.637063,-4.562148,-1.271537,8.640531,-5.331861,-0.815637,6.870705,2.149087,1.833335,0.151087,3.725018,-9.807060,-0.684419,-5.227992,0.423917,-8.179793,-8.324116,-1.537244,8.060696,6.371952,-8.276670,9.109616,-9.490242,7.469455,8.353171,0.899865,-5.222986,-6.996743,-6.982078,1.878628,3.672369,-7.987767,8.931461,1.771446,-6.150354,-9.823856,-1.172385,-1.664920,-3.678364,4.883118,-8.671214,-2.270126,-4.494018,6.119251,7.695586,-2.801989,-2.900827,-9.019991,-9.897779,5.313153,-8.450616,4.643871,0.238380,-7.373916,3.218965,-5.100173,-9.504932,3.552756,3.680850,6.916765,0.752286,-8.669312,-2.149257,5.442477,-9.171389,2.436698,-5.442003,6.911641,-7.725526,4.851285,5.688463,-3.963733,-7.744302,1.771162,-1.627508,-0.030508,-0.370612,-6.023726,-8.323989,8.767841,-0.349793,6.553173,-1.568745,-4.607585,-0.198853,-8.503784,6.115302,8.475826,-9.188922,-9.485794,-2.496876,8.092131,6.072927,1.810781,2.872554,-4.951097,-0.259921,2.886900,-7.764125,5.530985,9.141259,4.161061,-1.999997,5.454395,9.308913,-7.733464,-3.492398,-8.214498,8.634680,8.895483,4.726844,-7.883808,-0.713118,-1.624660,6.621065,3.364555,0.637158,-2.845877,-1.908046,7.580054,3.430583,8.689546,6.438245,8.838624,9.372395,5.881635,-6.398524,-9.685275,5.112844,3.467747,0.615733,-5.445754,8.825305,-9.177956,-4.405600,1.882457,8.982273,8.384314,9.611368,9.321136,-6.005047,2.686243,-1.540812,9.850786,-5.972063,6.182010,5.882932,-9.629274,-2.540603,-0.543854,-7.075749,-4.784339,-3.632657,-7.576493,-7.766231,4.438620,9.439109,6.476982,-6.865136,7.255864,0.946851,-2.902603,-3.972583,-6.038235,-3.509683,0.441770,-9.743568,-2.660565,-2.277343,-0.847994,4.072062,7.116184,-0.654513,-6.257800,6.059889,8.556654,-1.612510,0.478582,6.250355,5.235820,9.749865,-6.073517,-6.365605,-1.605203,-1.325653,1.760044,-3.899089,-7.140716,3.950617,-3.072465,-8.543490,-4.447695,4.529137,-3.495866,0.648797,-3.841379,-4.438648,-3.020859,-6.663859,3.764975,-2.145912,-4.822631,4.602891,4.988500,0.350551,0.062604,-2.386562,9.338380,-0.939800,-3.895713,1.804530,-0.455215,0.899487,8.086101,0.534884,-7.099789,6.443207,6.704754,4.582031,-5.372512,-4.379384,3.701359,0.796942,-5.402880,-3.067911,6.365640,-2.966020,4.937926,-5.074725,6.495126,-2.834384,6.771189,-9.507041,-2.056487,-3.585078,-5.715929,6.261483,1.978312,-9.205883,-7.780111,-9.337468,7.704930,2.300386,-3.500509,5.465640,1.945877,-8.255708,8.310600,5.603636,-8.044945,-1.879996,-5.566452,-6.701191,-1.893491,-2.429379,7.823206,-0.038794,8.192818,-0.487784,-7.003815,1.280826,1.340525,-6.420354,-1.945812,-4.641741,9.877068,3.520417,-4.354957,5.197909,3.845326,3.310771,-4.354614,5.762536,0.056790,-8.919150,1.143045,-1.745421,0.131896,7.878853,-8.145114,-8.259800,8.909158,-4.233217,-7.184444,-2.509345,7.289164,-7.277953,-0.209149,0.966887,5.844032,2.676969,4.694162,1.805020,-2.802422,-4.246703,0.073742,2.659585,-8.754775,-4.862686,9.080208,-6.836381,0.992118,4.267121,-8.460907,7.582816,-3.552783,-9.376748,-0.467571,-7.360524,5.695498,-3.323474,2.364183,7.490603,5.371724,-6.862365,-1.611968,9.604244,-8.594019,8.750191,4.849670,-4.455795,2.595070,7.086215,6.015080,0.504000,-7.772417,2.275596,1.511011,1.172732,-5.225799,8.806374,5.929036,-3.421829,0.711633,-2.250316,1.826566,-3.216931,-3.248395,-5.982083,6.853377,-2.325648,3.965358,-9.978276,-4.949327,4.266800,0.934682,4.872504,3.257503,-0.951914,-2.851741,5.983813,-9.147474,-8.181669,8.258461,-1.501032,-5.739215,-9.000931,-4.383696,-9.831315,4.908661,8.143284,3.498096,9.737222,5.765173,0.297445,-3.966861,9.637360,8.420300,0.944744,-3.080598,8.076054,-9.808861,5.776770,-6.721752,0.606332,0.604534,0.520802,-9.394098,-1.256967,-3.677577,7.382779,-7.076676,9.058330,-9.347012,2.279733,-5.680523,-9.049729,-5.312505,5.040805,8.112328,-6.081688,-0.518908,5.868575,-7.512075,-0.687738,-6.159184,-1.088006,-6.764690,-6.331191,-8.586189,1.198507,-2.890988,-1.936275,8.488080,-8.398104,-1.289662,-1.478449,-3.544944,2.975845,1.999313,6.497355,4.393942,-0.991376,-2.726264,6.305122,-7.712240,9.631322,-0.556699,-3.502394,-5.461120,-0.090966,1.270043,4.028275,0.398376,3.882252,-4.525257,-4.620772,-0.876043,8.670938,6.845350,7.057676,3.903802,-2.702487,-7.242928,-1.728320,0.050456,-4.608586,0.909763,-4.165634,-1.011942,0.061167,4.525654,6.936901,-1.242767,-4.962934,1.769842,-4.661875,-8.185731,-4.941724,6.830167,5.766579,9.601039,7.727503,2.626103,1.308653,7.091230,-9.705150,-8.389571,-9.622927,-5.429690,-6.279398,6.772280,1.341370,-3.841396,-4.159382,-0.338904,-6.607665,6.259276,-3.303979,-4.847492,9.266899,-7.636180,-4.750219,4.210468,7.783027,6.897003,5.373141,-7.698074,-3.814805,-8.741610,-4.618416,2.527006,-9.196282,6.041984,2.618957,5.820544,2.527773,6.537674,-6.088456,6.276894,-7.043150,-8.593080,4.671279,-3.604870,1.281948,-3.348352,0.649016,-3.394621,2.548810,-1.328145,4.626739,2.455040,7.985553,-8.605048,6.583634,-0.907684,-3.728420,3.320440,4.724471,-6.710491,-5.008460,0.517717,-3.552614,5.478131,3.078924,-8.469157,9.403497,0.088205,-7.103581,0.636330,6.628115,-4.908067,-3.011206,8.891174,0.813422,-4.019205,4.125740,-3.128903,1.039359,9.985330,7.223098,-3.065342,3.650078,-7.869227,4.249336,0.833115,2.943833,6.623055,2.194573,1.963850,-2.549651,-6.265623,9.571216,6.458242,-7.175537,6.546510,-9.563611,9.533572,-7.334226,-2.223460,8.270405,-2.153028,6.609945,-1.496712,5.407480,4.700598,1.502944,3.927832,-7.400055,7.732442,9.496121,7.755853,-5.757387,5.813918,-4.829812,2.811130,0.030948,-6.106561,0.471191,8.080920,-3.382278,-0.704480,-9.945375,3.825844,-0.788675,4.389211,6.628840,1.120076,4.698341,-4.734561,-9.229291,8.173320,-6.163927,-3.804255,-0.505557,-1.982044,7.604766,-6.237737,-2.114824,-9.538571,9.860430,-3.071148,-1.380863,-7.294425,-5.716415,3.900723,-4.327042,-3.593405,-1.218086,-3.905471,-9.946490,-0.040397,5.896565,6.513845,-9.819072,-7.180971,7.466860,-9.117242,9.741188,-5.025448,-7.483834,-9.615634,-7.436399,9.405910,-4.036552,-5.854206,-6.819310,-8.417618,5.209395,5.935473,8.758129,4.780317,-8.868697,0.526451,6.356305,5.288497,8.492334,-5.366680,-3.724133,1.444787,-8.782470,0.587173,-0.812904,-2.109282,2.503716,2.401629,-1.590374,7.228178,-2.543134,-3.464486,-3.266574,6.680507,1.035389,-8.517762,9.056901,-1.833228,3.721380,-5.533330,0.711934,8.623894,-7.938103,-8.672507,-8.048438,4.318254,-0.310601,-3.351267,5.963194,-2.417551,2.420783,-7.798700,-4.814899,-4.718105,-3.009429,9.576351,-5.072105,-1.859045,2.326615,3.990156,4.046327,2.795377,-6.483065,-8.368253,5.356304,-8.659152,7.946052,-6.045833,-9.282372,9.346390,6.549295,-5.940275,-1.557733,9.235784,8.940130,7.128691,5.244260,-0.620686,-2.401066,-1.851345,-7.183018,-4.889156,9.177366,1.172670,-3.321242,0.064957,-3.825530,2.330992,-9.228776,-8.394988,5.907229,-9.890341,-4.791612,-2.912870,-2.800428,8.520364,0.919763,-2.728849,-3.823527,-8.698414,3.021477,-5.716857,-1.868318,-4.320158,-8.905052,-9.145175,-4.796178,4.355031,-9.177581,6.138569,-0.993011,2.173421,-8.422499,-0.102610,1.790749,4.704760,-0.575892,-9.315427,9.073525,-6.286069,-8.940406,8.338170,9.066682,7.901706,-5.348868,-6.760733,5.757038,6.330444,-3.920312,-2.294575,-7.274345,-6.604782,-3.123960,1.289932,2.869038,0.112907,9.997488,-2.030132,4.800573,-2.802126,-2.620223,-9.579935,-6.225688,2.587723,-7.875351,-8.039196,-9.653691,9.558400,-3.800364,-0.606795,-0.452323,9.866452,7.369343,6.832849,7.861981,-8.370157,-7.020803,-9.905616,-2.136908,2.939975,5.962033,-5.049893,-0.949197,-8.388285,-0.964136,-6.292622,0.761689,-5.394021,0.094534,7.297056,6.677738,-8.265458,6.170148,-3.014104,8.377217,-3.780762,-6.990115,-4.666597,-6.265248,0.367013,1.456368,-8.134837,6.894786,1.872630,-4.668330,7.103456,4.431549,6.649233,-0.373556,-7.461376,-1.177598,7.303893,5.757639], dtype = "float64")#candidate|6812|(1404,)|const|float64
const_6813 = relay.const([[5.340102,-3.063163,-2.326900,3.263646,7.579738,1.039941,8.453336,5.949361,-0.611834,2.123009,-3.047076,2.574824,-9.761575,4.238900,2.465031,-5.082609,-8.122675,7.881793,7.910311,8.796433,-8.483160,1.503535,-6.105335,4.757868,-7.294564,0.049806,7.607620,3.857391,8.488205,4.553170,7.027076,7.008458,-2.849596,-1.174399,-0.543751,-9.218485,-6.603480,-9.336727,-1.399805,-6.012346,-6.248349,1.763303,-8.102502,7.655485,-6.391808,4.441123,-9.553263,2.590303,6.587137,-3.192749,-0.157547,-6.997923,-9.245321,0.651723,9.584471,-8.047609,5.160426,2.414449,-3.632417,0.336125,9.828429,-8.295654,-0.635369,4.516292,9.710809,5.611363,-3.149265,6.808503,-5.321073,-0.735672,-0.755866,4.234817,-4.412729,9.022693,9.966395,7.012039,3.645804,-0.687975,-6.038466,-3.587541,-8.980114,5.746408,5.349817,9.040177,5.994193,8.049773,-2.172652,2.727539,-6.532109,9.802398,7.773168,-8.546127,-3.892812,-1.865484,-3.334291,1.069156,-1.618685,-1.040382,9.627512,4.976211,4.908788,-0.734241,0.795309,-0.764764,-8.899943,1.607464,4.707758,3.658357,2.908715,-8.866829,-9.705135,-2.106806,-8.765476,-9.270785,-9.514688,-9.410371,2.732378,-4.819634,-5.163900,-8.359694,-4.364382,-9.301036,7.939546,-5.814704,-9.273235,8.348994,-7.714362,6.169101,-9.947097,-7.227617,-0.632818,-2.371568,3.949465,-8.287064,7.426545,-8.130717,3.768605,0.159445,-4.509226,1.461292,-3.357480,7.214680,-2.904536,4.943971,3.808889,6.617370,-5.285166,8.803188,-8.689480,4.903053,-8.883507,-0.650569,0.092651,-8.293878,9.864459,-3.767556,-2.311214,-0.226672,-0.585118,1.567726,1.598339,8.445871,-8.698617,9.603399,8.816799,1.043203,-4.811704,6.696754,2.517641,-2.296607,3.890982,6.719633,-1.252358,-6.313989,1.686469,-2.091877,-5.193423,2.726138,-2.340877,-2.207706,6.454602,4.336511,4.414336,5.596250,2.291680,8.658521,-3.834587,-8.865194,-5.567578,-4.593500,1.043870,-9.565497]], dtype = "float32")#candidate|6813|(1, 192)|const|float32
call_6810 = relay.TupleGetItem(func_2732_call(relay.reshape(const_6811.astype('float64'), [9, 1, 13]), relay.reshape(const_6812.astype('float64'), [9, 12, 13]), relay.reshape(const_6813.astype('float32'), [192,]), ), 0)
call_6814 = relay.TupleGetItem(func_2736_call(relay.reshape(const_6811.astype('float64'), [9, 1, 13]), relay.reshape(const_6812.astype('float64'), [9, 12, 13]), relay.reshape(const_6813.astype('float32'), [192,]), ), 0)
output = relay.Tuple([call_6797,call_6810,const_6811,const_6812,const_6813,])
output2 = relay.Tuple([call_6798,call_6814,const_6811,const_6812,const_6813,])
func_6817 = relay.Function([], output)
mod['func_6817'] = func_6817
mod = relay.transform.InferType()(mod)
output = func_6817()
func_6818 = relay.Function([], output)
mutated_mod['func_6818'] = func_6818
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4111_call = mod.get_global_var('func_4111')
func_4113_call = mutated_mod.get_global_var('func_4113')
call_6944 = func_4111_call()
call_6945 = func_4111_call()
var_6950 = relay.var("var_6950", dtype = "float64", shape = (14, 13, 4))#candidate|6950|(14, 13, 4)|var|float64
bop_6951 = relay.maximum(call_6944.astype('uint16'), relay.reshape(var_6950.astype('uint16'), relay.shape_of(call_6944))) # shape=(14, 13, 4)
bop_6954 = relay.maximum(call_6945.astype('uint16'), relay.reshape(var_6950.astype('uint16'), relay.shape_of(call_6945))) # shape=(14, 13, 4)
func_6497_call = mod.get_global_var('func_6497')
func_6499_call = mutated_mod.get_global_var('func_6499')
call_6956 = func_6497_call()
call_6957 = func_6497_call()
output = relay.Tuple([bop_6951,call_6956,])
output2 = relay.Tuple([bop_6954,call_6957,])
func_6971 = relay.Function([var_6950,], output)
mod['func_6971'] = func_6971
mod = relay.transform.InferType()(mod)
var_6972 = relay.var("var_6972", dtype = "float64", shape = (14, 13, 4))#candidate|6972|(14, 13, 4)|var|float64
output = func_6971(var_6972)
func_6973 = relay.Function([var_6972], output)
mutated_mod['func_6973'] = func_6973
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5382_call = mod.get_global_var('func_5382')
func_5383_call = mutated_mod.get_global_var('func_5383')
call_7067 = func_5382_call()
call_7068 = func_5382_call()
output = relay.Tuple([call_7067,])
output2 = relay.Tuple([call_7068,])
func_7071 = relay.Function([], output)
mod['func_7071'] = func_7071
mod = relay.transform.InferType()(mod)
mutated_mod['func_7071'] = func_7071
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7071_call = mutated_mod.get_global_var('func_7071')
call_7072 = func_7071_call()
output = call_7072
func_7073 = relay.Function([], output)
mutated_mod['func_7073'] = func_7073
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6047_call = mod.get_global_var('func_6047')
func_6049_call = mutated_mod.get_global_var('func_6049')
call_7084 = func_6047_call()
call_7085 = func_6047_call()
func_2205_call = mod.get_global_var('func_2205')
func_2208_call = mutated_mod.get_global_var('func_2208')
var_7119 = relay.var("var_7119", dtype = "float32", shape = (192,))#candidate|7119|(192,)|var|float32
call_7118 = relay.TupleGetItem(func_2205_call(relay.reshape(var_7119.astype('float32'), [4, 4, 12])), 0)
call_7120 = relay.TupleGetItem(func_2208_call(relay.reshape(var_7119.astype('float32'), [4, 4, 12])), 0)
output = relay.Tuple([call_7084,call_7118,var_7119,])
output2 = relay.Tuple([call_7085,call_7120,var_7119,])
func_7124 = relay.Function([var_7119,], output)
mod['func_7124'] = func_7124
mod = relay.transform.InferType()(mod)
mutated_mod['func_7124'] = func_7124
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7125 = relay.var("var_7125", dtype = "float32", shape = (192,))#candidate|7125|(192,)|var|float32
func_7124_call = mutated_mod.get_global_var('func_7124')
call_7126 = func_7124_call(var_7125)
output = call_7126
func_7127 = relay.Function([var_7125], output)
mutated_mod['func_7127'] = func_7127
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5559_call = mod.get_global_var('func_5559')
func_5560_call = mutated_mod.get_global_var('func_5560')
call_7145 = relay.TupleGetItem(func_5559_call(), 0)
call_7146 = relay.TupleGetItem(func_5560_call(), 0)
output = relay.Tuple([call_7145,])
output2 = relay.Tuple([call_7146,])
func_7152 = relay.Function([], output)
mod['func_7152'] = func_7152
mod = relay.transform.InferType()(mod)
mutated_mod['func_7152'] = func_7152
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7152_call = mutated_mod.get_global_var('func_7152')
call_7153 = func_7152_call()
output = call_7153
func_7154 = relay.Function([], output)
mutated_mod['func_7154'] = func_7154
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7152_call = mod.get_global_var('func_7152')
func_7154_call = mutated_mod.get_global_var('func_7154')
call_7322 = relay.TupleGetItem(func_7152_call(), 0)
call_7323 = relay.TupleGetItem(func_7154_call(), 0)
func_6971_call = mod.get_global_var('func_6971')
func_6973_call = mutated_mod.get_global_var('func_6973')
call_7326 = relay.TupleGetItem(func_6971_call(relay.reshape(call_7322.astype('float64'), [14, 13, 4])), 1)
call_7327 = relay.TupleGetItem(func_6973_call(relay.reshape(call_7322.astype('float64'), [14, 13, 4])), 1)
output = relay.Tuple([call_7322,call_7326,])
output2 = relay.Tuple([call_7323,call_7327,])
func_7331 = relay.Function([], output)
mod['func_7331'] = func_7331
mod = relay.transform.InferType()(mod)
output = func_7331()
func_7332 = relay.Function([], output)
mutated_mod['func_7332'] = func_7332
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7071_call = mod.get_global_var('func_7071')
func_7073_call = mutated_mod.get_global_var('func_7073')
call_7483 = relay.TupleGetItem(func_7071_call(), 0)
call_7484 = relay.TupleGetItem(func_7073_call(), 0)
output = call_7483
output2 = call_7484
func_7492 = relay.Function([], output)
mod['func_7492'] = func_7492
mod = relay.transform.InferType()(mod)
output = func_7492()
func_7493 = relay.Function([], output)
mutated_mod['func_7493'] = func_7493
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4323_call = mod.get_global_var('func_4323')
func_4325_call = mutated_mod.get_global_var('func_4325')
call_7514 = func_4323_call()
call_7515 = func_4323_call()
output = call_7514
output2 = call_7515
func_7522 = relay.Function([], output)
mod['func_7522'] = func_7522
mod = relay.transform.InferType()(mod)
output = func_7522()
func_7523 = relay.Function([], output)
mutated_mod['func_7523'] = func_7523
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7522_call = mod.get_global_var('func_7522')
func_7523_call = mutated_mod.get_global_var('func_7523')
call_7571 = func_7522_call()
call_7572 = func_7522_call()
output = call_7571
output2 = call_7572
func_7576 = relay.Function([], output)
mod['func_7576'] = func_7576
mod = relay.transform.InferType()(mod)
mutated_mod['func_7576'] = func_7576
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7576_call = mutated_mod.get_global_var('func_7576')
call_7577 = func_7576_call()
output = call_7577
func_7578 = relay.Function([], output)
mutated_mod['func_7578'] = func_7578
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6637_call = mod.get_global_var('func_6637')
func_6638_call = mutated_mod.get_global_var('func_6638')
call_7607 = func_6637_call()
call_7608 = func_6637_call()
output = relay.Tuple([call_7607,])
output2 = relay.Tuple([call_7608,])
func_7618 = relay.Function([], output)
mod['func_7618'] = func_7618
mod = relay.transform.InferType()(mod)
mutated_mod['func_7618'] = func_7618
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7618_call = mutated_mod.get_global_var('func_7618')
call_7619 = func_7618_call()
output = call_7619
func_7620 = relay.Function([], output)
mutated_mod['func_7620'] = func_7620
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4591_call = mod.get_global_var('func_4591')
func_4593_call = mutated_mod.get_global_var('func_4593')
call_7644 = relay.TupleGetItem(func_4591_call(), 0)
call_7645 = relay.TupleGetItem(func_4593_call(), 0)
func_4323_call = mod.get_global_var('func_4323')
func_4325_call = mutated_mod.get_global_var('func_4325')
call_7651 = func_4323_call()
call_7652 = func_4323_call()
output = relay.Tuple([call_7644,call_7651,])
output2 = relay.Tuple([call_7645,call_7652,])
func_7676 = relay.Function([], output)
mod['func_7676'] = func_7676
mod = relay.transform.InferType()(mod)
output = func_7676()
func_7677 = relay.Function([], output)
mutated_mod['func_7677'] = func_7677
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4472_call = mod.get_global_var('func_4472')
func_4474_call = mutated_mod.get_global_var('func_4474')
call_7786 = func_4472_call()
call_7787 = func_4472_call()
func_7576_call = mod.get_global_var('func_7576')
func_7578_call = mutated_mod.get_global_var('func_7578')
call_7792 = func_7576_call()
call_7793 = func_7576_call()
output = relay.Tuple([call_7786,call_7792,])
output2 = relay.Tuple([call_7787,call_7793,])
func_7796 = relay.Function([], output)
mod['func_7796'] = func_7796
mod = relay.transform.InferType()(mod)
mutated_mod['func_7796'] = func_7796
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7796_call = mutated_mod.get_global_var('func_7796')
call_7797 = func_7796_call()
output = call_7797
func_7798 = relay.Function([], output)
mutated_mod['func_7798'] = func_7798
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7815 = relay.var("var_7815", dtype = "float32", shape = (13, 1, 13))#candidate|7815|(13, 1, 13)|var|float32
uop_7816 = relay.acos(var_7815.astype('float32')) # shape=(13, 1, 13)
output = uop_7816
output2 = uop_7816
func_7834 = relay.Function([var_7815,], output)
mod['func_7834'] = func_7834
mod = relay.transform.InferType()(mod)
mutated_mod['func_7834'] = func_7834
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7835 = relay.var("var_7835", dtype = "float32", shape = (13, 1, 13))#candidate|7835|(13, 1, 13)|var|float32
func_7834_call = mutated_mod.get_global_var('func_7834')
call_7836 = func_7834_call(var_7835)
output = call_7836
func_7837 = relay.Function([var_7835], output)
mutated_mod['func_7837'] = func_7837
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7860 = relay.var("var_7860", dtype = "uint32", shape = (15, 16, 6))#candidate|7860|(15, 16, 6)|var|uint32
const_7861 = relay.const([[[3,5,-1,-3,2,-8],[6,2,-8,-1,2,1],[-3,3,-7,7,-4,-9],[-3,7,2,6,-1,-3],[-7,-6,-4,-4,-9,10],[10,8,-8,-9,1,-8],[-1,2,5,3,-10,10],[7,4,-4,3,-10,6],[-10,-2,-2,6,5,7],[1,-1,-10,-8,-8,4],[5,-6,10,6,8,1],[-8,-5,-2,10,-2,-8],[-5,-3,9,5,-5,-2],[2,5,5,1,-10,4],[-9,-7,9,-7,-4,-9],[8,-8,4,7,7,9]],[[-7,-5,7,1,8,-8],[5,-3,-6,3,-6,-6],[-10,-8,7,1,8,-3],[9,-2,3,-6,-7,-9],[-3,8,5,10,9,4],[-7,-1,1,3,-9,-9],[-7,1,5,-9,-4,6],[1,5,-7,-9,2,-1],[-6,-4,-9,5,7,-2],[-8,1,-7,1,4,-9],[5,-5,-8,3,-3,8],[10,-10,3,-1,4,-5],[8,1,4,-3,10,7],[4,-3,-6,1,-8,7],[4,2,-10,10,-5,-10],[-5,-7,10,-6,-5,-3]],[[1,9,4,1,-5,-7],[10,-3,-2,-1,7,-3],[-5,3,-7,-10,-2,-10],[-4,6,3,-4,-5,-5],[3,6,-7,7,8,-9],[8,-7,-8,-7,-7,-4],[8,-1,-7,2,4,10],[-6,1,-6,-1,10,3],[5,2,4,-10,6,-7],[-10,2,6,-3,-6,-8],[-5,-7,9,4,-1,-7],[2,9,-1,-10,-7,2],[4,-10,10,-5,9,1],[-3,5,1,8,9,1],[4,-8,-6,6,6,2],[-4,-4,-10,-4,-9,-4]],[[-8,6,-10,5,2,6],[-4,8,8,7,-9,-6],[5,10,8,-8,8,4],[-3,-3,4,3,-4,9],[2,-4,8,-10,2,1],[-5,6,1,3,-1,-10],[-6,5,3,1,-2,6],[9,-5,5,-8,-2,-4],[-4,-8,-3,-10,-9,-8],[8,10,8,-10,-2,-5],[10,7,-10,5,-8,-1],[-1,-10,7,-7,-1,7],[-2,4,1,-1,5,-2],[-1,-10,-10,-9,-3,3],[9,7,6,-9,10,-2],[-3,3,-3,6,10,2]],[[-9,2,2,-4,-7,2],[2,2,5,2,-7,9],[-9,-3,-10,-10,-7,-3],[-2,-3,7,-2,7,2],[10,-9,10,-8,-2,8],[9,3,2,7,4,-3],[-5,1,-1,-3,8,9],[-1,-6,7,5,4,1],[5,-2,-8,-9,1,7],[4,4,-2,-9,-7,6],[-9,-1,-10,-10,2,3],[8,5,5,-3,1,-10],[-8,8,5,3,-6,8],[-7,-2,-10,-1,8,-8],[-9,9,-8,-3,-9,4],[-4,10,9,7,-6,-7]],[[3,-7,-5,1,5,1],[2,-10,4,6,8,9],[2,7,6,-6,-1,9],[7,-9,-1,-6,8,-5],[9,-2,5,-8,9,7],[-9,-2,6,-8,3,-5],[-2,7,-8,-2,-4,-6],[6,-6,-9,-10,-3,-9],[-6,-2,-4,3,-2,6],[5,-9,-2,7,-10,5],[-5,-6,-9,-9,-1,6],[-10,1,-3,3,5,-6],[8,-5,6,6,6,10],[-8,-4,10,4,1,5],[4,-2,10,6,-3,6],[4,3,-5,-7,3,-2]],[[1,4,-5,6,9,-10],[5,-8,-8,10,-6,2],[-7,4,10,3,-4,-3],[-8,-8,-6,5,-4,-2],[5,4,4,-3,-7,-10],[-3,-8,2,5,10,-6],[-2,8,3,-8,-1,-2],[-10,-9,-1,4,4,2],[5,5,-3,-4,3,10],[-3,6,5,-2,-2,2],[9,-1,1,-8,-3,4],[3,2,1,2,2,-9],[-6,2,1,5,-3,3],[-10,-10,4,-10,1,5],[-5,7,6,4,6,-4],[-1,9,3,-6,2,7]],[[-10,-5,10,5,10,3],[-8,10,3,3,10,6],[3,-8,9,-3,6,-2],[-9,-2,-8,4,1,10],[-7,8,2,-3,-9,1],[8,-9,-3,9,-7,-2],[-7,9,-10,2,1,-5],[7,9,8,-3,6,-9],[10,-3,-10,-2,-3,4],[1,3,9,4,-7,-9],[-4,1,2,-1,1,-1],[-10,7,5,7,1,-7],[-9,4,5,10,6,1],[3,-2,5,7,-10,1],[8,-3,-9,9,3,-3],[-7,-10,-8,2,-3,8]],[[-10,5,9,-5,-3,6],[-9,9,8,-2,7,-7],[3,6,4,3,-9,5],[-4,5,-1,7,-5,3],[10,-8,7,2,7,-7],[-2,-8,-9,-8,-3,10],[3,-3,-6,4,2,-3],[-9,1,2,8,8,-6],[-7,2,7,-6,-1,-1],[-7,-3,6,10,-10,3],[10,-8,7,7,-10,8],[3,8,-4,1,1,-10],[9,-6,10,-2,5,1],[6,10,9,1,-1,-5],[7,6,-9,9,-4,-8],[-6,-7,10,5,-5,2]],[[-10,-5,-2,-7,6,9],[8,3,2,-8,-2,1],[4,8,8,5,-2,10],[1,-5,1,-2,1,-10],[-9,-3,-7,10,10,-1],[7,8,-8,-3,6,-8],[1,3,-7,7,5,-4],[-4,-4,-4,5,-2,-1],[9,-1,-4,-1,9,9],[9,10,5,6,10,-8],[-4,-6,-3,-9,2,9],[-7,1,4,-9,-5,7],[-5,-3,-3,-1,-1,-5],[3,9,2,-1,10,-4],[-5,7,6,-2,-7,7],[-4,-8,3,-1,7,-4]],[[-2,9,-1,4,8,6],[5,4,-4,3,7,-5],[3,1,-10,9,1,3],[1,-8,1,2,3,-10],[-6,5,2,-6,-7,-7],[3,10,3,6,1,4],[9,7,-9,10,-10,1],[-6,9,3,2,-1,9],[-4,-10,10,-6,-8,-4],[-10,4,-9,1,1,9],[-5,9,-1,-2,5,9],[-5,-8,-8,4,7,7],[5,9,8,-2,-9,9],[-1,-3,4,-4,7,-2],[6,-10,-5,9,4,6],[8,-5,8,4,-6,6]],[[1,8,5,10,5,-4],[-6,8,1,-2,-9,5],[-2,7,-8,-7,-4,-4],[5,10,-5,-10,-7,2],[4,8,-2,3,4,3],[4,10,7,8,-9,3],[3,4,4,10,10,5],[1,-8,-7,-8,3,10],[-1,1,7,3,-7,-1],[-2,3,9,8,4,-6],[6,-4,1,8,-4,-3],[3,4,2,5,6,-10],[3,-4,3,-2,5,10],[3,7,9,10,-5,-3],[8,5,-5,-9,-2,-9],[-7,7,-8,8,-7,9]],[[-7,9,1,-1,2,-7],[2,7,-10,-10,-7,9],[-6,-5,3,10,-2,2],[-10,6,-10,9,6,-7],[-2,3,5,-5,8,5],[-5,-1,-3,2,-7,-7],[9,10,-4,4,-5,-7],[1,-3,-5,10,5,-7],[-4,2,-5,-2,-5,-2],[1,-6,4,-7,7,-4],[10,2,-7,4,8,-7],[-6,-9,-1,-1,6,-9],[1,5,-7,8,-5,5],[-9,-5,4,10,-1,3],[8,6,-3,4,2,2],[8,-1,10,7,2,6]],[[4,-9,5,-8,-8,-8],[-9,5,-2,3,6,-7],[7,-8,7,-8,-10,-7],[9,-1,-8,-7,1,-10],[-8,-7,8,-3,-9,5],[-4,7,8,-10,-7,-3],[10,-4,4,8,-9,-10],[-10,-2,-3,2,-10,3],[1,4,-6,5,-10,1],[-4,-8,3,-8,1,9],[-6,3,-10,-3,-2,2],[-7,8,-7,1,-5,4],[5,10,-3,9,-1,-7],[-9,-5,1,-10,4,6],[-6,-5,-6,-8,3,8],[-8,9,-9,4,9,10]],[[-5,-8,8,-2,-1,-5],[6,-9,-3,6,3,-5],[-2,-10,-6,-10,-1,-2],[2,-3,-9,-1,4,-5],[-8,10,-4,4,2,6],[-4,-1,-5,-4,-6,-2],[-9,-1,7,-10,5,-4],[3,-7,-2,4,-9,1],[-7,1,-5,-8,9,7],[-3,9,-7,9,3,-6],[8,10,-7,9,7,-7],[4,7,5,9,1,8],[-3,7,-2,8,4,-7],[-9,7,8,-8,-9,6],[-7,2,3,5,4,1],[-4,5,-6,-3,9,-1]]], dtype = "uint32")#candidate|7861|(15, 16, 6)|const|uint32
bop_7862 = relay.not_equal(var_7860.astype('bool'), relay.reshape(const_7861.astype('bool'), relay.shape_of(var_7860))) # shape=(15, 16, 6)
func_5173_call = mod.get_global_var('func_5173')
func_5177_call = mutated_mod.get_global_var('func_5177')
var_7869 = relay.var("var_7869", dtype = "float64", shape = (117, 1))#candidate|7869|(117, 1)|var|float64
var_7870 = relay.var("var_7870", dtype = "float32", shape = (1, 192))#candidate|7870|(1, 192)|var|float32
call_7868 = relay.TupleGetItem(func_5173_call(relay.reshape(var_7869.astype('float64'), [117,]), relay.reshape(var_7870.astype('float32'), [192,]), ), 5)
call_7871 = relay.TupleGetItem(func_5177_call(relay.reshape(var_7869.astype('float64'), [117,]), relay.reshape(var_7870.astype('float32'), [192,]), ), 5)
bop_7873 = relay.minimum(var_7870.astype('int64'), var_7869.astype('int64')) # shape=(117, 192)
output = relay.Tuple([bop_7862,call_7868,bop_7873,])
output2 = relay.Tuple([bop_7862,call_7871,bop_7873,])
func_7876 = relay.Function([var_7860,var_7869,var_7870,], output)
mod['func_7876'] = func_7876
mod = relay.transform.InferType()(mod)
var_7877 = relay.var("var_7877", dtype = "uint32", shape = (15, 16, 6))#candidate|7877|(15, 16, 6)|var|uint32
var_7878 = relay.var("var_7878", dtype = "float64", shape = (117, 1))#candidate|7878|(117, 1)|var|float64
var_7879 = relay.var("var_7879", dtype = "float32", shape = (1, 192))#candidate|7879|(1, 192)|var|float32
output = func_7876(var_7877,var_7878,var_7879,)
func_7880 = relay.Function([var_7877,var_7878,var_7879,], output)
mutated_mod['func_7880'] = func_7880
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6771_call = mod.get_global_var('func_6771')
func_6773_call = mutated_mod.get_global_var('func_6773')
call_8016 = relay.TupleGetItem(func_6771_call(), 0)
call_8017 = relay.TupleGetItem(func_6773_call(), 0)
output = call_8016
output2 = call_8017
func_8038 = relay.Function([], output)
mod['func_8038'] = func_8038
mod = relay.transform.InferType()(mod)
output = func_8038()
func_8039 = relay.Function([], output)
mutated_mod['func_8039'] = func_8039
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8071 = relay.var("var_8071", dtype = "float64", shape = (2, 14, 2))#candidate|8071|(2, 14, 2)|var|float64
uop_8072 = relay.tan(var_8071.astype('float64')) # shape=(2, 14, 2)
uop_8075 = relay.sin(uop_8072.astype('float32')) # shape=(2, 14, 2)
output = uop_8075
output2 = uop_8075
func_8086 = relay.Function([var_8071,], output)
mod['func_8086'] = func_8086
mod = relay.transform.InferType()(mod)
var_8087 = relay.var("var_8087", dtype = "float64", shape = (2, 14, 2))#candidate|8087|(2, 14, 2)|var|float64
output = func_8086(var_8087)
func_8088 = relay.Function([var_8087], output)
mutated_mod['func_8088'] = func_8088
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5993_call = mod.get_global_var('func_5993')
func_5994_call = mutated_mod.get_global_var('func_5994')
call_8092 = relay.TupleGetItem(func_5993_call(), 1)
call_8093 = relay.TupleGetItem(func_5994_call(), 1)
output = relay.Tuple([call_8092,])
output2 = relay.Tuple([call_8093,])
func_8120 = relay.Function([], output)
mod['func_8120'] = func_8120
mod = relay.transform.InferType()(mod)
mutated_mod['func_8120'] = func_8120
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8120_call = mutated_mod.get_global_var('func_8120')
call_8121 = func_8120_call()
output = call_8121
func_8122 = relay.Function([], output)
mutated_mod['func_8122'] = func_8122
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4111_call = mod.get_global_var('func_4111')
func_4113_call = mutated_mod.get_global_var('func_4113')
call_8123 = func_4111_call()
call_8124 = func_4111_call()
output = relay.Tuple([call_8123,])
output2 = relay.Tuple([call_8124,])
func_8127 = relay.Function([], output)
mod['func_8127'] = func_8127
mod = relay.transform.InferType()(mod)
mutated_mod['func_8127'] = func_8127
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8127_call = mutated_mod.get_global_var('func_8127')
call_8128 = func_8127_call()
output = call_8128
func_8129 = relay.Function([], output)
mutated_mod['func_8129'] = func_8129
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8038_call = mod.get_global_var('func_8038')
func_8039_call = mutated_mod.get_global_var('func_8039')
call_8134 = func_8038_call()
call_8135 = func_8038_call()
func_4739_call = mod.get_global_var('func_4739')
func_4741_call = mutated_mod.get_global_var('func_4741')
call_8140 = relay.TupleGetItem(func_4739_call(), 0)
call_8141 = relay.TupleGetItem(func_4741_call(), 0)
func_7331_call = mod.get_global_var('func_7331')
func_7332_call = mutated_mod.get_global_var('func_7332')
call_8154 = relay.TupleGetItem(func_7331_call(), 0)
call_8155 = relay.TupleGetItem(func_7332_call(), 0)
output = relay.Tuple([call_8134,call_8140,call_8154,])
output2 = relay.Tuple([call_8135,call_8141,call_8155,])
func_8156 = relay.Function([], output)
mod['func_8156'] = func_8156
mod = relay.transform.InferType()(mod)
mutated_mod['func_8156'] = func_8156
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8156_call = mutated_mod.get_global_var('func_8156')
call_8157 = func_8156_call()
output = call_8157
func_8158 = relay.Function([], output)
mutated_mod['func_8158'] = func_8158
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8172 = relay.const(-9, dtype = "uint64")#candidate|8172|()|const|uint64
var_8173 = relay.var("var_8173", dtype = "uint64", shape = (1, 9, 6))#candidate|8173|(1, 9, 6)|var|uint64
bop_8174 = relay.add(const_8172.astype('uint64'), var_8173.astype('uint64')) # shape=(1, 9, 6)
func_4618_call = mod.get_global_var('func_4618')
func_4621_call = mutated_mod.get_global_var('func_4621')
const_8183 = relay.const([[-9.343701,-4.759203],[-4.364884,-4.609488],[-7.666187,-8.816477],[1.649696,4.716257],[-6.527534,-5.148539],[2.237150,6.055749],[-8.689696,-8.590161],[-8.936823,7.077426],[9.005995,7.184784],[-5.022953,9.821427],[1.781472,2.297916],[4.169470,8.183880],[8.994651,-6.166887],[-0.847710,1.580938],[-8.538824,2.311977],[-0.419248,3.770284],[-3.281234,4.574533],[-6.581257,2.094726],[-7.632047,-7.960256],[4.305547,7.880326],[-0.749261,-5.422327],[-5.581478,8.589122],[7.183883,1.753906],[-7.810664,6.111267],[2.948137,6.116925],[8.587078,8.274021],[6.880700,6.025568],[-4.436203,8.583064],[7.804955,4.672237],[-5.897613,-1.363897],[0.372351,5.619187],[3.668894,-0.926995],[9.200527,-1.883309],[-4.684757,2.408308],[-1.444105,9.052757],[1.390014,9.961980],[-4.503820,-8.888574],[0.992595,-8.408869],[-5.344855,-6.188577],[-0.370207,6.162323],[-6.961811,-9.980687],[6.690339,-8.349389],[-2.202538,-8.415966],[9.292455,-3.674341],[-1.137437,-2.363403],[-7.343531,-1.640066],[-0.633832,-6.200843],[2.421922,-0.088598],[9.186150,7.907939],[-0.636289,-9.055760],[9.518331,7.064966],[-5.129238,-2.330303],[-0.163294,2.868499],[9.718541,-1.636579],[-1.807041,-5.953342],[-4.674156,-8.844593],[8.834494,-4.085268],[3.030458,-5.429714],[-2.500885,9.062896],[-2.566424,2.610432],[-1.775201,5.857977],[1.825017,6.233931],[-3.067657,6.973743],[7.839288,-6.218232],[4.370821,-0.900596],[-8.445709,8.531971],[-8.645161,7.492842],[-8.988048,-3.009871],[6.749260,-2.380796],[1.457327,2.914334],[9.333236,-1.418764],[-0.201553,2.782291],[7.153676,-6.188642],[5.542629,-3.522294],[5.318733,-8.640838],[2.718108,-6.306258],[-6.732506,9.079893],[9.895815,6.593245],[9.138659,5.818197],[-6.120904,-9.139827],[-1.708447,6.592566],[-1.264182,-2.730537],[-4.318874,-9.409498],[3.323916,-4.942690],[5.797560,8.270053],[-1.719155,-0.609664],[-5.950808,1.877516],[-7.444238,-6.831660],[2.325793,-9.097556],[-0.711967,8.367171],[3.924367,-6.914184],[-2.419271,-8.807730],[-3.089224,-0.666457],[-8.855034,-3.864829],[-2.085489,-7.622683],[7.182574,-1.980359],[-4.987072,5.745407],[1.275919,9.136084],[-1.031754,6.123954],[6.560169,-7.425287],[7.279160,-5.845008],[6.169769,-9.112816],[2.428209,6.797502],[9.413029,7.510375],[-2.691667,-0.779374],[9.675651,3.898705],[4.708834,-5.700140],[-8.986918,-9.897729],[-7.757013,-6.353636],[-4.161365,5.016946],[7.065425,-9.205807],[-6.948084,-8.479177],[-7.844201,-5.021636],[2.317650,0.580220],[-6.986982,1.778022],[7.687660,-0.396891],[-9.849182,8.207966],[7.884692,-6.289911],[9.144252,-3.358207],[-5.406802,7.930568],[6.310540,-8.391336],[2.763633,-9.665189],[-1.426788,-1.999933],[1.473251,2.421311],[5.133129,-1.137710],[8.854339,3.300254],[-4.032676,7.805596],[7.234655,7.599882],[-0.511518,9.853049],[-2.887173,-9.405347],[3.445879,-0.614918],[6.829646,-4.028993],[-9.083666,-9.180132],[-4.133583,2.371639],[5.042118,9.169931],[7.559323,4.606442],[6.779865,7.326710],[-6.606952,-2.798146],[-8.817653,4.828645],[-1.123576,5.487775],[-5.567856,-5.268164],[4.045556,7.742038],[-3.043959,6.246461],[-3.109494,-3.412648],[8.764442,1.183282],[3.356819,4.583710],[-8.273215,8.181801],[4.737625,4.875091],[-0.027860,-9.126563],[3.984547,-0.981350],[-6.041185,6.438480],[6.821668,-0.148823],[5.141708,-3.404044],[9.356186,6.849709],[-0.917105,-0.471984],[6.780320,-4.361185],[-7.136638,0.833588],[-0.811314,6.618087],[-8.065363,8.649676],[-3.780977,-9.298697],[8.325658,-1.436765],[0.070731,-2.224863],[1.863473,8.904028],[8.592715,-8.202558],[-2.792156,8.022338],[-7.174829,9.739698],[-8.578485,-3.960083],[8.507711,-7.460606],[2.127697,7.738012],[-0.840575,3.762400],[2.401965,-1.614249],[-5.612106,-5.452750],[6.981017,6.251178],[-4.197885,-7.675386],[-8.527565,-7.003612],[4.156802,-9.381499],[4.808951,8.163966],[-5.227091,3.526532],[6.643021,-7.777235],[5.627815,-7.840041],[-0.580215,-7.091865],[6.105373,8.229730],[4.014983,4.908561],[1.367854,7.677230],[5.197810,-7.673623],[7.958633,7.753812],[-3.732560,-0.415531],[-7.137821,-6.780355],[8.161637,-5.773657],[1.884963,-4.317286],[1.481397,2.625657],[9.099644,5.083581],[-4.976217,-7.973970],[-2.091959,-6.187723],[1.368730,-9.599832],[-8.344170,2.247938],[7.829250,-0.986164],[4.773899,1.195994],[-2.349105,3.830251],[2.519497,-9.684892],[3.871326,-9.512915],[2.529462,-6.581251],[2.198016,-4.408133],[4.292173,3.670938],[0.733209,1.981895],[-1.161277,1.652566],[9.982722,5.628221],[-2.482016,-3.676635],[-5.809277,8.840929],[-2.401832,8.547137],[-8.974860,9.425346],[2.039819,-7.741010],[-6.924225,6.866924],[-7.122615,4.707617],[-1.608658,-2.608404],[-1.427194,-5.128724],[7.007702,-8.173742],[7.152301,-5.842741],[-8.605911,2.882007],[-3.114443,-6.408499],[5.049452,-3.392205],[5.239512,6.696044],[-6.993843,-5.569053],[8.643427,7.515585],[-8.622634,-6.036262],[9.972755,7.300045],[-1.888233,8.136525],[-4.819989,3.832910],[-6.210781,9.775791],[4.477338,5.734417],[-1.456383,-9.306241],[-8.345721,6.121705],[-1.550973,-8.232034],[-7.153531,2.643586],[-5.161255,7.714347],[-6.106914,-6.605832],[-6.344377,-9.334076],[-9.462732,0.685145],[4.406903,-1.448926],[-8.951311,-5.790315],[6.562863,-4.734333],[-1.233210,-0.123925],[9.124451,9.597693],[-0.266966,-0.828485],[4.612892,-6.855242],[-3.676044,7.745735],[-3.295829,6.535744],[0.833255,3.581756],[-6.942719,-3.349940],[3.175058,0.324026],[-3.606790,-1.219273],[-9.636741,-6.431711],[-9.112005,1.348173],[-4.985005,-5.511564],[0.595615,0.611969],[-0.044173,9.276739],[7.487551,4.158814],[2.063800,6.108024],[-7.563206,-2.813100],[-4.232184,-0.831122],[-5.017388,7.501426],[-7.189784,0.337956],[7.786208,-5.203471],[1.343867,-2.911677],[6.460979,2.001582],[-8.178232,1.666217],[-3.286266,4.863593],[-3.603824,8.072528],[4.075224,8.168841],[4.933223,3.555123],[-8.344086,-7.791187],[-8.945222,-5.854440],[-7.027119,-8.601746],[-2.806741,0.199147],[3.878523,8.855901],[6.082683,-3.831344],[5.230167,-7.463503],[-0.871290,4.538121],[-3.671505,-1.713356],[-4.939090,-5.525425],[-0.446923,5.554727],[-4.945876,-9.979343],[4.320677,6.946798],[-3.968987,2.817069],[-2.240405,-0.264772],[-9.008740,4.885543],[5.770298,0.920915],[-8.486016,2.510036],[-7.893189,8.533051],[9.950728,-2.700759],[0.692681,8.629246],[-1.849767,7.108846],[9.149121,2.102709],[7.280992,-8.060723],[9.286201,-2.086153],[8.994640,-4.036257],[-6.210035,1.448366],[2.557224,-7.876545],[4.333220,3.652500],[-7.341721,-1.926818],[-1.077724,4.312412],[-2.524371,8.077100],[5.866147,6.156038],[9.698271,-7.447137],[7.575584,0.952214],[-8.096504,2.103892],[-2.404891,8.430424],[6.163431,-4.449703],[9.713479,4.476580],[2.114819,6.277349],[-0.562884,6.411882],[6.393627,4.772073],[8.853543,7.461741],[-9.052119,-9.907772],[8.307655,-2.359032],[9.569468,6.922295],[-0.312494,5.948027],[7.804320,5.609035],[4.217475,7.534502],[-7.491062,-7.957865],[3.583903,5.717795],[-7.289942,-8.635838],[5.871149,2.855580],[8.270754,-2.965564],[2.948233,1.266466],[-4.000138,6.374267],[-4.272678,-0.726623],[2.181453,-0.465589],[9.307255,3.316725],[8.532415,1.098904],[-6.180415,-6.884978],[3.022159,6.475250],[-5.341882,7.207278],[8.306095,-9.918073],[5.314306,1.109769],[1.315005,-5.305585],[5.292687,7.848725],[5.540865,-6.163472],[9.688080,-5.776844],[0.103848,8.036242],[-2.551346,-1.073670],[0.139106,4.932158],[-3.754146,-8.681781],[5.922753,-6.850450],[-2.322475,1.264063],[-8.588540,9.212443],[-5.043631,2.795452],[2.210968,4.325166],[1.954816,-2.679306],[4.070894,-6.604731],[-4.873984,6.918036],[0.044488,-7.762679],[5.849203,2.616277],[3.717766,4.479801],[-3.202254,9.545173],[-7.818391,-2.793737],[5.849280,-9.575596],[-3.324158,-6.679099],[1.320170,-0.241510],[9.703526,-1.862322],[8.725872,-6.193423],[-3.603693,-3.364177],[-2.519513,6.122664],[2.702221,4.210337],[-8.301329,8.475293],[-9.252868,5.686665],[9.727455,-6.711463],[-6.478772,-0.964156],[-3.900940,4.945034],[-4.371021,-0.006759],[2.949282,5.196472],[8.829545,1.269988],[4.269908,-8.479515],[-0.760774,5.472047],[-3.767040,-8.116363],[1.635887,-4.793813],[-0.856953,-2.669907],[1.447802,3.556407],[-3.038106,9.552587],[3.608254,6.621893],[2.097349,-4.854870],[6.516221,-8.321193],[2.200694,4.590058],[2.646192,9.564657],[8.244820,-5.370464],[-3.663220,2.040088],[1.943922,-8.719363],[-6.311006,8.910650],[1.044227,7.492375],[1.290208,-6.552252],[9.451878,6.869091],[4.794064,-8.229456],[9.091859,-1.053231],[-1.002139,-8.879231],[-4.748785,9.939492],[3.495091,6.737065],[-0.378176,4.759074],[-1.800549,8.058295],[5.428142,-1.718491],[8.418009,9.538957],[2.040578,-1.840370],[-4.055525,5.118236],[1.612569,4.754722],[7.143300,3.716345],[8.801014,-8.809704],[6.002238,8.572590],[-6.123425,8.376717],[-5.237710,-5.667809],[-4.485498,-5.255509],[-3.020392,-0.298815],[-8.609293,-8.590725],[-9.527840,2.532599],[-1.993089,6.996023],[5.578278,2.996566],[-9.737773,8.567525],[1.778993,-8.960810],[-8.449754,-0.612132],[5.416344,-7.837002],[-5.282968,8.061423],[0.208721,0.052421],[-8.326287,6.423482],[1.313903,-8.418554],[0.890583,5.953113],[2.837202,5.032527],[-1.345579,-7.930111],[-1.468838,0.690036],[9.385141,5.868933],[8.446072,2.792228],[5.064838,-5.731971],[0.504200,-6.847671],[-5.120751,0.336900],[0.293734,-5.091172],[4.070650,6.854246],[3.330939,-1.369289],[-8.555878,8.073365],[-9.959560,1.070716],[5.868454,5.539969],[-8.802426,-6.047959],[9.483314,4.597754],[-2.450719,-2.018328],[-0.997428,4.287250],[-3.531536,3.150067],[0.504066,-9.953253],[9.611017,2.733825],[3.640261,4.391283],[-7.998198,4.787659],[5.206676,-9.288357],[-2.554189,1.394132],[3.373212,-5.710723],[4.357459,-4.385283],[5.057726,-4.572249],[-3.105929,8.669521],[-6.637262,-9.251557],[-6.576669,-0.469894],[-8.910582,2.057203],[9.415955,1.810471],[6.860559,-7.213749],[6.856244,0.053340],[-5.632570,7.053610],[5.815263,-2.402103],[7.633112,-8.674913],[-7.041427,-6.419844],[-3.766436,5.824232],[-1.281632,-6.438564],[8.387421,-8.880610],[6.132610,4.247311],[-3.511842,-0.910808],[5.100439,6.786110],[0.365642,9.995801],[0.073261,-2.261107],[7.822152,1.140744],[1.664556,-2.255346],[7.085607,0.811848],[-6.418878,-2.714040],[-5.768074,5.686102],[5.494719,-5.571933],[-4.327368,5.533393],[9.319490,4.313333],[2.082150,6.816534],[-7.341825,2.142200],[-4.333244,-9.946236],[6.944046,7.896594],[-8.227826,-9.660255],[-4.507089,-9.879505],[-0.046378,-5.063452],[-0.088148,-7.761372],[-6.238882,-0.970695],[4.894840,-4.482277],[-6.932522,3.695799],[9.226648,3.158169],[7.113508,-2.205597],[3.929421,-1.460246],[-1.027765,0.951712],[2.925374,-7.638030],[6.920279,-1.369014],[5.003102,0.350169],[-3.325824,6.604619],[5.489638,6.664550],[-3.687361,-7.735638],[-6.503919,4.755630],[2.118323,6.288646],[4.061828,0.431074],[-2.921189,4.586661],[-7.966817,-2.172281],[4.358705,2.111824],[-1.510388,5.339546],[-5.895475,-3.094519],[0.369428,4.489237],[2.685679,5.793330],[-6.780793,3.088238],[-5.736943,-0.245625],[6.079466,5.550900],[9.602147,-1.740886],[1.737958,-4.719560],[8.872494,2.390277],[8.072971,-6.422841],[6.233758,1.195212],[-7.627723,9.137530],[2.417614,8.394199],[-7.522957,-3.565275],[2.315758,7.077795],[-3.751382,-9.974705],[4.642347,-7.478278],[-0.348568,0.677580],[-8.988492,-8.749628],[0.393151,-8.567705],[8.787950,-0.454307],[-3.064841,9.038854]], dtype = "float64")#candidate|8183|(528, 2)|const|float64
call_8182 = func_4618_call(relay.reshape(const_8183.astype('float64'), [11, 12, 8]), relay.reshape(const_8183.astype('float64'), [11, 12, 8]), )
call_8184 = func_4618_call(relay.reshape(const_8183.astype('float64'), [11, 12, 8]), relay.reshape(const_8183.astype('float64'), [11, 12, 8]), )
output = relay.Tuple([bop_8174,call_8182,const_8183,])
output2 = relay.Tuple([bop_8174,call_8184,const_8183,])
func_8185 = relay.Function([var_8173,], output)
mod['func_8185'] = func_8185
mod = relay.transform.InferType()(mod)
mutated_mod['func_8185'] = func_8185
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8186 = relay.var("var_8186", dtype = "uint64", shape = (1, 9, 6))#candidate|8186|(1, 9, 6)|var|uint64
func_8185_call = mutated_mod.get_global_var('func_8185')
call_8187 = func_8185_call(var_8186)
output = call_8187
func_8188 = relay.Function([var_8186], output)
mutated_mod['func_8188'] = func_8188
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8246 = relay.const([[[2.437232,-4.671449,-6.558845,-3.362411,0.859099],[-7.442921,0.930285,7.057217,-0.773092,-4.482397],[-7.948307,-8.847303,-3.573791,-2.084734,8.202541]],[[1.697477,9.164783,2.684303,-0.809929,7.978723],[-9.453908,0.012725,7.845352,6.444733,-7.160536],[3.023785,-9.739660,6.454942,6.701810,0.260803]]], dtype = "float32")#candidate|8246|(2, 3, 5)|const|float32
uop_8247 = relay.atan(const_8246.astype('float32')) # shape=(2, 3, 5)
func_7618_call = mod.get_global_var('func_7618')
func_7620_call = mutated_mod.get_global_var('func_7620')
call_8262 = relay.TupleGetItem(func_7618_call(), 0)
call_8263 = relay.TupleGetItem(func_7620_call(), 0)
var_8284 = relay.var("var_8284", dtype = "float32", shape = (2, 3, 5))#candidate|8284|(2, 3, 5)|var|float32
bop_8285 = relay.add(const_8246.astype('int16'), relay.reshape(var_8284.astype('int16'), relay.shape_of(const_8246))) # shape=(2, 3, 5)
output = relay.Tuple([uop_8247,call_8262,bop_8285,])
output2 = relay.Tuple([uop_8247,call_8263,bop_8285,])
func_8300 = relay.Function([var_8284,], output)
mod['func_8300'] = func_8300
mod = relay.transform.InferType()(mod)
mutated_mod['func_8300'] = func_8300
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8301 = relay.var("var_8301", dtype = "float32", shape = (2, 3, 5))#candidate|8301|(2, 3, 5)|var|float32
func_8300_call = mutated_mod.get_global_var('func_8300')
call_8302 = func_8300_call(var_8301)
output = call_8302
func_8303 = relay.Function([var_8301], output)
mutated_mod['func_8303'] = func_8303
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5559_call = mod.get_global_var('func_5559')
func_5560_call = mutated_mod.get_global_var('func_5560')
call_8308 = relay.TupleGetItem(func_5559_call(), 0)
call_8309 = relay.TupleGetItem(func_5560_call(), 0)
func_4404_call = mod.get_global_var('func_4404')
func_4406_call = mutated_mod.get_global_var('func_4406')
call_8310 = func_4404_call()
call_8311 = func_4404_call()
output = relay.Tuple([call_8308,call_8310,])
output2 = relay.Tuple([call_8309,call_8311,])
func_8319 = relay.Function([], output)
mod['func_8319'] = func_8319
mod = relay.transform.InferType()(mod)
output = func_8319()
func_8320 = relay.Function([], output)
mutated_mod['func_8320'] = func_8320
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7796_call = mod.get_global_var('func_7796')
func_7798_call = mutated_mod.get_global_var('func_7798')
call_8326 = relay.TupleGetItem(func_7796_call(), 1)
call_8327 = relay.TupleGetItem(func_7798_call(), 1)
output = relay.Tuple([call_8326,])
output2 = relay.Tuple([call_8327,])
func_8329 = relay.Function([], output)
mod['func_8329'] = func_8329
mod = relay.transform.InferType()(mod)
output = func_8329()
func_8330 = relay.Function([], output)
mutated_mod['func_8330'] = func_8330
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7492_call = mod.get_global_var('func_7492')
func_7493_call = mutated_mod.get_global_var('func_7493')
call_8348 = func_7492_call()
call_8349 = func_7492_call()
func_4739_call = mod.get_global_var('func_4739')
func_4741_call = mutated_mod.get_global_var('func_4741')
call_8356 = relay.TupleGetItem(func_4739_call(), 0)
call_8357 = relay.TupleGetItem(func_4741_call(), 0)
uop_8367 = relay.cosh(call_8356.astype('float64')) # shape=(14, 13, 4)
uop_8369 = relay.cosh(call_8357.astype('float64')) # shape=(14, 13, 4)
func_6191_call = mod.get_global_var('func_6191')
func_6195_call = mutated_mod.get_global_var('func_6195')
const_8384 = relay.const([[9.260349,7.920797,-3.794739,-8.929499,-4.730991,9.983568,-5.577296,3.463052,2.631904,-5.119745,4.764030,2.276856,-5.815682,-9.409112,8.017793,9.722294,-2.128660,7.172571,-6.037915,-5.432235,-5.219916,-9.021699,7.402279,1.171667,-9.204040,-7.202577,4.412539,-7.201417,-3.510144,-7.642093,9.034802,8.270330,-7.093362,-4.652411,-5.304633,-9.945119,-9.143386,2.692309,-8.137383,-9.988691,5.590571,-5.605070,1.262126,-2.272749,1.221890,2.601872,2.667724,-8.280437,3.961373,-6.983093,-1.736728,-4.345030,0.382454,-2.169525,-2.750505,2.462239,1.465312,-1.746540,-3.251798,4.080581,0.921689,-4.142988,4.266355,0.279569,6.403639,-7.191911,-8.345518,-7.041726,6.624751,6.843226,4.090724,6.999409,-6.516463,9.720362,-6.840428,8.265522,3.414655,-7.459618,-4.335068,-9.578713,3.336234,5.742945,1.640278,-7.860704,2.870104,1.848902,-0.839037,7.879832,-6.323564,0.007248,4.872497,0.100028,-2.684625,6.307935,1.932763,-4.194939,7.928719,-1.484979,4.556669,5.146061,-8.377780,4.957018,9.854746,2.213185,-8.157654,-0.271971,6.471051,-8.120864,-4.981221,7.051888,2.701850,-1.078086,4.323462,-6.977874,1.970719,4.022258,-0.860707,-3.846739,-3.086239,0.803421,-4.482899,-1.928091,6.570918,9.668114,7.353945,5.688409,-5.023640,7.953942,-1.986505,-9.347930,8.415726,2.190121,6.095381,8.602135,-4.725934,-9.125148,-1.043103,-9.640039,7.290694,3.679157,-4.446052,-2.573571,3.141148,4.979661,5.267870,3.639837,9.292255,-0.558681,9.499856,-5.655353,-6.447875,-7.554514,-8.145504,8.445427,0.936462,-1.650616,8.446125,-0.687175,-7.672938,4.605295,-9.750994,-0.869919,1.345529,-3.629753,-9.462185,-0.148977,5.849385,2.168550,-3.712556,4.580895,-6.695038,0.483807,-5.884771,-0.873823,4.866394,-4.020568,-7.869446,-3.024855,2.800901,-4.574063,6.389435,2.078485,-4.862391,-7.030250,1.759076,-6.053156,4.454946,0.877173,7.309614,-1.091530,1.959209,-5.880806,1.921135,-5.102293,6.315406,-4.778336,6.659750,6.244129,1.146848,-4.632290,-4.360093,-2.208181,1.680445,1.158656,4.876813,5.657649,2.105953,-5.543348,-2.812324,4.544516,-1.158463,2.079516,8.868300,3.275281,-7.227770,1.932168,-9.007386,1.161933,-7.708693,-4.156395,-1.986607,-0.715343,-4.739170,5.974030,1.978665,-8.547106,-3.667310,-0.922552,9.609012,-1.680098,3.149188,-2.157179,0.138605,7.571781,-9.492115,5.599160,-0.896782,-1.597515,7.578987,3.025249,8.863361,-4.229413,7.415350,9.359196,-0.380924,5.280460,-2.681984,1.090168,3.126528,2.160729,-0.767761,-2.899305,-9.883071,3.563941,-0.330620,0.341135,1.001934,-8.321889,-0.468367,9.991448,5.268025,-1.338574,-7.989338,-9.771119,9.025691,0.223442,-4.077560,-8.375356,9.482111,-0.190087,-4.000784,8.745304,8.670774,8.126882,2.078314,-9.248862,4.020165,-8.457897,-5.368451,3.138228,-6.361640,-2.004822,-5.256288,-1.644056,-4.691714,-8.611890,-2.512282,-5.021079,9.057170,3.861256,-7.517390,1.788192,-5.851792,4.373086,-4.019914,-9.799840,-2.109518,-0.965854,7.296225,-1.299239,7.616997,1.919309,-0.160234,-0.434629,2.058894,-0.048935,3.884500,7.782620,-2.436707,4.694969,2.594431,7.771369,-4.731530,-4.386305,-8.950815,2.776433,9.574248,2.383271,9.501841,9.483996,6.296801,-5.787898,-5.698669,9.311155,4.497609,3.910977,-5.910788,-8.779989,-9.066907,9.979015,7.630114,1.705651,2.855649,-9.588138,-0.755265,3.399910,9.582977,-2.210157,8.599331,-4.073627,-5.439279,2.806752,4.090270,6.052437,-9.193048,-6.278488,-8.757313,1.229679,0.950952,-4.541654,7.689782,1.477111,0.495104,-2.016357,9.701070,7.599978,6.418474,5.380555,-2.446135,-4.790913,4.762872,-9.956177,-4.013336,3.454385,8.400774,7.086922,2.379236,-7.379072,0.871104,3.439854,3.941185,-7.243985,1.029225,9.040057,6.350090,-5.534985,2.292718,-9.907808,-6.040093,9.832915,4.902208,6.077380,2.808949,7.176982,-8.976382,-3.376693,-1.669317,-0.827861,-0.055050,0.636819,-8.715478,-5.784092,4.550516,3.469051,-8.455298,8.970862,-2.267539,-6.410232,-7.554221,-9.322027,-6.257124,3.332672,4.577769,-4.677381,0.434786,3.768431,9.134590,2.185871,-6.812016,3.083316,2.913350,-2.252813,5.304531,-8.857151,9.368172,-2.689767,9.219507,-1.945565,-4.825647,-7.869127,-1.774476,2.804684,1.581012,-3.812797,8.718105,-8.611078,4.628034,-0.812752,0.838271,-2.802070,6.112999,-3.428545,-8.438478,-3.477485,6.383322,3.297472,-1.679511,9.903630,6.919622,-6.178048,2.050074,-4.813126,7.155057,2.726248,0.307535,9.726446,7.424653,8.086100,-6.441383,-3.175868,-8.849002,-9.741514,-8.890890,-2.130447,2.113607,-5.632502,3.230621,1.052784,-2.053444,9.208853,8.223466,-6.077147,-7.455244,-5.969455,8.703757,-7.525013,-8.311090,9.523788,-1.086794,9.975659,-5.765835,7.954902,-4.699895,-3.364575,4.813908,-3.130299,9.315622,8.523267,-0.177976,-5.781297,-0.369142,5.584837,6.772979,9.427250,-5.747743,-8.194791,7.840409,-2.276399,-0.933494,-4.963727,-3.354594,-8.021625,4.503785,8.187526,-5.475878,-3.495076,-0.573957,7.462898,-7.613342,1.394639,8.867967,4.682478,0.832925,-6.204317,-9.261805,-8.542531,4.769562,-8.866109,-7.324026,-5.188585,-8.860989,-0.539172,-2.098170,-3.997276,-6.032302,1.405636,3.439379,-3.233352,-9.778054,4.456753,4.151541,0.330163,-7.797969,-3.432234,2.665143,8.640349,1.821046,-7.449046,-8.564784,-9.852583,6.155437,-8.620278,-4.028146,7.812756,-7.512151,1.271511,-4.723838,-1.869356,4.875273,-6.358827,-9.797896,-9.684799,4.313337,7.322500,8.588609,-7.202633,-0.565187,-5.638145,-1.207522,4.870967,-3.076670,-5.118627,-4.534512,8.830406,0.192156,-6.945280,-8.674613,9.242913,-7.410558,8.438236,-5.209682,-3.645710,-1.013030,3.204312,-8.009573,6.723427,-2.518383,-7.389778,5.789229,-2.924605,5.589123,-5.217417,6.550226,3.743247,-3.952726,6.334354,-7.939414,6.167618,-1.746542,4.573971,-9.181657,7.991001,2.848374,6.363999,-2.679149,2.060152,-9.904318,9.374149,-3.761029,7.414164,6.443443,0.354530,-9.703938,-7.176911,-6.849176,-8.990594,6.776257,1.121334,7.395208,7.049120,-8.240017,5.169345,-0.329090,-4.286114,5.293684,9.173309,-2.950456,-7.809299,-2.803846,-8.229855,9.117108,5.175995,-2.607573,4.910656,2.694531,6.685021,6.905577,-3.014679,0.769814,-2.465198,6.687828,9.728696,8.779558,-0.309127,3.323875,-0.621604,3.827328,1.562902,-8.298745,0.646446,0.345660,2.276074,3.514036,-0.647424,-8.607904,8.526532,-1.709441,2.643545,4.355048,8.290539,-6.381942,3.098497,0.346107,-2.018426,5.856685,1.293943,-7.754559,5.886395,4.023217,5.982643,1.709910,1.531065,1.104696,9.214948,-9.389751,3.723802,-4.700051,4.611757,2.391944,5.073993,1.611843,6.464017,7.852135,-0.265871,-3.072177,-7.221068,-4.698982,-2.902371,-1.182713,-3.159105,-1.113835,-9.563820,-7.700230,1.451680,9.172293,-5.236502,0.963784,-1.173407,3.422046,6.768732,-7.891471,3.197798,0.857729,2.774290,9.132724,5.802432,3.273400,-2.226746,5.436504,-5.890588,-3.541097,7.430705,-2.443469,-8.335734,-2.513505,-4.650633,4.194667,-1.489595,5.119594,-6.844311,3.374395,-1.861820,1.396675,3.471299,-3.172839,2.748407,-4.180689,6.958414,5.994405,-6.516408,3.182669,-8.261671,-1.320852,-2.922515,-2.145438,-1.482976,-6.845591,6.329581,5.593399,-7.203570,-7.890363,-4.002326,-2.780548,7.291891,0.629335,-4.922707,-4.497823,3.592587,9.093323,-4.224516,0.137190,0.713658,-5.194750,8.749849,9.305706,0.033954,-6.156727,2.976206,6.798766,-9.022556,-6.752546,-0.512231,0.780680,-3.410667,5.258595,9.730991,0.264884,-8.955847,0.137218,-1.918359,4.593294,-1.089881,0.139680,-3.727415,-0.966398,-1.126853,8.374774,-0.996152,-3.739903,0.780877,9.951974,-8.149381,-9.618225,-3.108990,5.411439,-9.403789,3.766760,-0.157574,-2.621807,1.208592,0.869894,-5.583434,-0.939359,4.447569,8.321367,-6.776205,7.609391,3.545912,0.102000,5.557661,-0.550564,0.124531,-5.868659,9.353039,0.509813,-5.605545,-7.375874,1.479047,6.951107,3.660489,-6.102554,7.580477,8.921775,5.225760,3.733342,2.899716,-1.752954,1.388745,-1.917238,-7.734249,2.052560,-1.888446,1.613132,4.147610,-2.809364,5.646242,-3.674494,4.360199,4.015485,0.429392,6.600652,7.725986,9.895519,4.597575,1.881730,9.888348,-9.174163,-1.427427,-5.052866,-9.176218,-1.692908,9.958843,-5.289135,-5.582402,1.704724,-6.312672,-5.049183,-5.850849,-7.447737,2.923215,3.226097,5.901812,-9.501847,9.762197,1.387313,-5.478432,0.275036,-5.403108,-6.975957,-0.761015,-5.338245,-8.986224,-4.162301,5.446166,-4.086575,-9.136580,1.711705,9.916206,6.681797,-1.185700,-4.304143,-9.098958,-6.869715,-0.718525,-9.383806,-8.213675,4.025691,8.317892,-6.377705,4.485466,-3.717801,-7.492810,6.109431,3.760512,3.879000,8.402889,-1.344868,7.956628,-1.385072,4.668731,-6.558589,-5.472946,4.570790,9.083717,-5.899522,-2.300236,-1.006331,-4.943559,1.728861,-7.191902,-1.649487,-2.329461,-2.150884,2.934842,4.680354,8.130900,2.414006,-1.178720,6.595286,-3.308944,-0.174203,-5.662303,4.040260,-5.173110,9.820753,5.810086,-8.642656,-6.600631,-7.373108,6.591898,0.626093,7.043412,-0.045650,3.075917,-4.162166,4.758766,-7.480097,2.485491,2.509349,-5.651948,3.911972,-5.858674,-8.755959,-2.494445,-3.040633,-9.153330,-5.554572,-1.899635,1.856042,-7.638127,6.202455,-7.530005,-0.805767,-3.858836,6.007967,-1.287751,-0.370283,-4.080946,4.267423,3.588185,3.249347,2.197680,-1.555430,-8.321470,5.608699,8.005114,3.493353,6.412646,0.206456,0.223655,-7.130995,6.457775,-8.954700,7.827393,-0.231425,7.920914,3.908751,7.764745,6.372815,4.323812,6.852373,7.621555,8.924557,-3.938033,-1.156167,7.827083,4.023144,-1.550666,4.688598,8.554785,-3.273941,4.228812,-3.419819,5.778762,-1.863819,-4.130771,3.135308,-4.604549,-3.466766,-4.273023,-9.472564,-6.543533,-4.974051,9.495487,-0.187048,-7.595660,-2.705507,-9.189804,-8.987601,-2.726679,2.285500,-2.231761,-6.571599,3.845671,5.167145,-1.661361,6.616142,5.136410,5.339393,8.690190,-0.928721,-5.949858,9.538650,8.805968,2.472334,6.873271,-2.851856,5.571299,-6.437607,-0.061042,-7.854045,-9.287762,0.838250,-9.760391,-1.875342,-4.702662,4.877241,0.907104,-9.616215,-0.618266,-7.864725,-0.016539,-3.767194,-6.913362,-7.885957,-0.100091,3.739453,-0.921781,8.124458,4.218042,0.639003,-0.819885,-1.073129,7.525649,-0.558382,-3.233505,7.086259,4.636506,4.116842,0.205903,-8.711141,-2.325993,-7.372695,-4.590853,5.677799,7.520328,-8.274926,9.685491,-0.365557,5.341377]], dtype = "float64")#candidate|8384|(1, 1040)|const|float64
const_8385 = relay.const([-1.727540,-2.172252,-4.653337,1.385439,3.314649,-5.148558,-1.660276,9.708508,-6.433643,-3.652310,-4.927687,-0.242553,0.605187,6.991576,6.269911,2.534771,-5.819177,3.372371,6.796049,8.793419,2.964006,-4.087738,6.666365,4.662649,0.171698,-3.616926,-9.282776,-9.642802,-5.773584,-6.130639,-9.485588,0.643203,1.592546,-6.228317,7.682363,2.837539,8.749652,-7.893474,-0.588211,7.463945,-3.843493,9.126769,-9.029478,-4.320486,-7.080114,-6.173367,-7.671324,2.353594,9.519340,8.250003,1.007618,5.096332,-5.594559,1.756169,5.425585,-3.812658,-2.518635,-4.317899,5.595446,8.262061,7.759755,4.043261,4.964088,7.205524,-9.513417,3.013501,-7.463971,-9.086729,1.040485,0.032418,-2.134486,-3.223978,6.155138,7.157316,9.915496,-4.709788,6.099110,-8.339401,-1.084648,9.820309,-8.990069,3.456471,2.848267,-0.153824,6.360648,0.397110,7.375555,7.027298,9.538971,-0.720817,5.141395,3.062248,-6.028861,-9.795928,-3.470189,8.000752,-1.218656,1.737711,-0.676201,-8.838158,4.588170,-1.142529,8.201769,7.650098,-2.080689,2.988175,7.330833,-6.900582,7.603243,-2.216628,-2.404934,-9.933314,-5.808332,-5.834248,4.603294,1.200566,9.969804,-5.116307,6.319011,8.187157,4.288712,5.769951,9.262156,-9.341994,-2.720027,-4.683027,-2.726011,-7.702441,-3.289789,6.711332,1.004136,-2.357261,-7.855004,-0.711427,1.317167,-0.792828,-4.217683,1.298892,4.010938,-1.293231,-9.486599,0.533827,-9.532682,-6.713882,-4.471408,-4.794796,-0.945190,-3.223032,5.429074,-9.504069,-6.310176,3.973673,-0.620267,7.015372,-6.136281,-8.072069,-3.627818,7.804033,3.282679,-6.849485,-5.113188,0.168369,1.573270,5.047756,-1.935889,9.178099,-6.294095,-2.577829,7.179409,8.727250,0.136846,0.456641,1.989704,-3.398006,-5.757147,-7.360915,-2.000067,5.985883,-2.381719,-9.936746,-9.935577,8.639410,5.369661,1.265847,3.674465,-9.311939,-2.502432,2.249486,6.711214,-0.489121,-7.201243,-3.621093,4.113937,-4.677045,-7.365803,-7.696674,5.703293,-7.620968,8.304081,1.690797,-4.051004,-3.294857,2.597883,-8.608157,5.322612,-5.312026,4.806527,-8.021482,-2.005059,-2.803597,-7.320541,4.112600,7.001465,-4.651080,-2.292289,3.403340,3.960594,4.016466,9.710107,6.091291,9.967759,-9.491940,-9.858967,6.007407,-5.392386,-0.759808,-9.732076,-5.664019,8.033951,1.478749,-6.484657,-3.465805,-8.421453,8.184015,1.268219,-7.280684,-5.198202,5.170572,-3.233992,-1.299906,8.660885,0.827711,-8.010425,7.789436,-3.055801,2.045343,1.373188,-1.146393,-9.692334,-4.204764,3.132520,-5.618317,2.191104,-2.132285,-6.505957,-1.619432,0.257432,6.332106,2.301719,7.704263,4.524707,4.319255,-1.177455,-8.724186,0.991424,-6.077570,-6.298158,-3.838377,6.110002,4.423786,1.686267,6.813595,5.726242,7.101925,3.978983,-6.423042,6.048029,2.030352,1.369687,-1.723590,-0.929816,3.375777,2.482708,8.992249,1.988758,-7.518976,-3.720738,5.569463,8.636189,1.590661,-5.200911,8.113069,7.817456,7.203973,2.680914,3.627909,2.987740,-7.184524,-0.238268,8.868590,-5.848210,4.876322,9.552840,-0.938171,7.707616,0.808637,1.203237,9.008662,4.272116,1.786330,9.193067,9.820752,-7.209472,5.742762,1.944577,-9.555094,8.923006,-5.839032,-9.777180,5.399610,-1.816780,4.794086,7.150153,-3.460797,-7.562988,3.078811,-5.442087,-9.827030,-1.858232,-1.594322,-0.784105,3.677268,-8.631114,-9.551890,-5.758613,-2.550637,-1.480420,-1.083085,-4.720270,-3.690758,5.274092,-3.535229,-0.101769,-5.511300,7.886057,-2.787051,2.035475,8.857873,-7.906389,-1.437413,8.734545,2.481705,9.654671,2.971994,8.218781,-9.340736,-6.988629,-7.848361,7.090786,3.082757,0.271543,-4.428514,-6.544910,-5.781782,1.282163,4.108548,0.358347,-9.189961,5.474083,9.019571,9.685617,1.367619,-6.619422,6.616168,-2.506805,-0.218972,-7.513627,-0.467827,-6.662655,0.298396,0.377745,-6.772092,-9.837704,5.348140,4.079843,-6.816355,-0.897851,-5.287533,3.912796,-5.860625,-9.865179,-9.397776,4.640132,3.019125,7.524119,0.254355,-8.398704,-1.252711,-9.683858,-5.552362,-5.269542,4.871017,-6.731619,9.835579,8.085467,3.294357,6.279599,-7.682883,-6.467108,-2.206905,8.006247,-4.187247,-7.029852,-4.318492,2.331948,-1.202007,8.440055,-1.684249,2.091478,0.754884], dtype = "float64")#candidate|8385|(420,)|const|float64
call_8383 = relay.TupleGetItem(func_6191_call(relay.reshape(const_8384.astype('float64'), [1040,]), relay.reshape(const_8385.astype('float64'), [14, 30]), ), 1)
call_8386 = relay.TupleGetItem(func_6195_call(relay.reshape(const_8384.astype('float64'), [1040,]), relay.reshape(const_8385.astype('float64'), [14, 30]), ), 1)
output = relay.Tuple([call_8348,uop_8367,call_8383,const_8384,const_8385,])
output2 = relay.Tuple([call_8349,uop_8369,call_8386,const_8384,const_8385,])
func_8407 = relay.Function([], output)
mod['func_8407'] = func_8407
mod = relay.transform.InferType()(mod)
output = func_8407()
func_8408 = relay.Function([], output)
mutated_mod['func_8408'] = func_8408
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7522_call = mod.get_global_var('func_7522')
func_7523_call = mutated_mod.get_global_var('func_7523')
call_8433 = func_7522_call()
call_8434 = func_7522_call()
func_8127_call = mod.get_global_var('func_8127')
func_8129_call = mutated_mod.get_global_var('func_8129')
call_8451 = relay.TupleGetItem(func_8127_call(), 0)
call_8452 = relay.TupleGetItem(func_8129_call(), 0)
func_2136_call = mod.get_global_var('func_2136')
func_2141_call = mutated_mod.get_global_var('func_2141')
const_8482 = relay.const(False, dtype = "bool")#candidate|8482|()|const|bool
const_8483 = relay.const([False,True,False,True,False,False,False,True,False,False,False,False,False,False,True,True,True,True,False,False,False,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,True,False,True,True,False,True,True,False,False,True,True,True,False,False,False,False,False,False,True,True,False,True,True,False,False,False,False,False,False,False,False,True,False,False,False,True,True,False,True,True,True,True,True,True,True,True,False,True,True,True,False,True,True,False,True,True,False,True,True,False,False,True,False,False,True,False,True,True,False,True,False,True,False,True,True,True,False,True,False,True,False,True,False,True], dtype = "bool")#candidate|8483|(120,)|const|bool
var_8484 = relay.var("var_8484", dtype = "float32", shape = (180,))#candidate|8484|(180,)|var|float32
const_8485 = relay.const([-4.825018,-8.495386,-5.679889,-1.430086,-8.478541,-5.363299,-0.450715,3.381822,7.307278,-9.341858,-8.464617,9.464011,8.853736,0.856061,6.693824,8.100924,-8.937026,-5.749911,-8.056122,2.730938,5.259772,-5.374842,-5.662310,0.460799,6.341982,5.322637,8.830124,-0.213507,-8.341267,1.285916,0.959542,0.151810,0.464211,9.577531,-6.498062,-4.477054,-3.590059,-0.067035,-5.653158,-7.517299,2.396960,-1.017564,0.865202,6.418834,-1.128695,8.320511,9.014814,6.885560,-7.005474,-1.095443,4.596060,-9.652957,8.517888,7.723728,-8.479230,-2.187722,4.923286,-8.948254,1.763204,-7.582431,2.600085,-0.926621,4.059400,4.626303,-7.759220,-7.678992,-9.936677,4.464221,9.858881,6.857441,8.049015,2.221914,-1.346141,1.611934,3.538049,7.823735,8.934385,7.889985,-2.263563,-8.836685,-0.642979,-7.064318,9.079505,5.148318,-4.644651,-1.086259,-5.383212,-2.937001,-8.049208,-2.101302,-4.764806,-2.556180,7.264936,-8.003338,-3.822051,-6.000983,0.825394,0.768798,1.652093,-8.082537,3.176636,8.774568,-8.916470,1.565873,9.967782,0.825005,7.432914,1.191954,6.018665,-5.179351,-7.983906,3.907156,-3.957216,-3.571190,2.660929,8.726935,4.480759,-1.951311,5.143583,-0.956218,1.278479,-2.003744,4.789312,-2.678291,5.643891,-9.917850,3.408656,8.235321,-1.057428,7.615756,-2.085549,6.184182,8.113311,-1.247502,6.474844,0.596655,-9.516356,9.391242,5.446697,-1.022805,1.996425,-7.240936,-5.697220,-7.656515,3.114822,-7.812609,-8.001417,-7.035009,6.637857,-0.033373,5.118236,-3.306469,6.594116,-1.861983,7.502092,3.849392,8.453661,4.058948,-1.878772,9.779069,-9.023298,7.786671,3.262506,-3.559794,-0.959505,6.448681,2.306824,4.155925,5.297214,9.636869,8.601135,2.843946,7.711721,-0.242801,-0.685458,1.029888,-4.666028,-0.141462,-4.823907,-2.246914,3.896805,8.175402,4.026476,-9.316786,-0.200717,8.472991,-8.704358,-0.338422,-4.356731,1.901942,-1.642285,9.809867,-6.678600,-9.800461,-8.719257,4.302484,-7.810477,-2.046567,-3.262596,7.234776,7.467789,-3.298773,0.884725,7.340935,9.965654,0.679114,6.063758,-9.527471,-7.584937,4.493363,-8.944414,-1.004679,8.285532,-6.346011,6.496282,-7.514892,8.029143,6.597319,5.622266,-2.858231,6.570168,2.534518,-1.531238,-7.574532,-3.603681,1.886484,7.434382,-3.374927,9.502079,-6.056165,-4.723758,1.224001,7.564010,-8.718612,6.500334,8.600731,-8.232183,5.103743,6.393284,1.314148,4.618425,-6.224221,1.469505,2.648735,9.096975,3.556861,-4.570911,8.454395,7.416899,2.215895,-6.884975,-9.851131,5.758838,4.428036,0.141712,-6.702693,-2.792430,7.095749,5.065042,-4.500056,-5.900541,-0.687087,-5.229923,-5.228585,-7.436465,-3.364928,5.309290,5.506843,-6.874428,7.214465,-8.767595,0.173176,-7.318401,-9.233282,8.775020,-7.115200,-4.340918,2.235757,5.368450,2.862050,0.505840,-9.861829,-8.885507,0.741048,3.888812,-8.283371,-0.517669,-7.178156,7.537709,4.791282,1.763004,-8.881620,-8.976162,-4.037779,-7.625794,5.248115,4.170586,-3.789869,-3.068896,-3.932449,-6.718602,7.105569,-9.219604,5.268526,-6.641277,5.565053,-4.766904,7.876009,9.794049,-0.258629,0.215517,4.233230,-5.071628,-8.363958,3.921442,-3.498976,-6.362811,-3.943901,9.253105,-5.475975,-3.268158,7.094794,4.002221,-7.590471,-8.514842,-6.904550,-3.132028,-0.872808,2.020349,2.967639,5.207939,-2.883697,3.927311,7.982678,-7.479535,-4.794577,6.531624,-7.113465,2.875618,6.165631,9.693989,3.696336,0.005353,-2.654390,8.263857,0.135946,4.559967,-9.391667,-6.951356,1.041170,0.769797,-4.254979,0.512429,4.925277,6.054316,-7.132604,3.477748,-3.572452,4.597896,4.403807,9.539176,-0.985126,5.083484,9.007925,-8.525655,-3.604907,0.898018,-7.567097,4.911315,2.265937,-5.600900,-8.165976,8.674212,-7.165558,7.868551,2.093156,-1.756300,-0.455040,-8.041818,1.487824,-4.238896,-6.716201,-1.431768,9.922149,3.019948,-6.855375,-1.083486,1.906987,-7.875427,1.098636,4.329739,-6.096800,-6.777683,3.870392,-8.139005,9.753101,5.109578,-2.597549,-1.030580,7.370683,-7.868020,9.214587,-5.314515,4.093418,-8.384445,4.408949,3.841871,2.769938,-6.569590,6.046736,9.994354,6.429681,-3.560873,2.029477,1.816042,-5.559659,-9.899410,4.170464,-0.816849,1.708977,9.928831,2.882637,-8.751022,-9.131971,8.005555,-6.506274,-1.913205,6.354295,0.919845,9.613465,-6.600878,9.631311,8.371429,6.834566,8.461437,-8.777188,8.620342,2.090339,-1.712834,-9.794748,1.299148,-6.286688,0.357737,7.823513,-8.716129,7.016472,-3.443197,-1.357168,1.169839,-9.139366,-4.732525,0.118850,-8.428723,-9.319202,-8.093697,-0.575176,0.163926,3.155480,6.916602,3.869180,3.730181,-1.400311,1.932786,2.393090,-6.549945,5.441364,-0.788496,1.896137,-1.017532,5.993734,-5.924040,-9.531444,0.508693,-1.165188,-2.042276,-0.355351,2.904159,-8.131124,1.056549,8.437804], dtype = "float32")#candidate|8485|(480,)|const|float32
call_8481 = relay.TupleGetItem(func_2136_call(relay.reshape(const_8482.astype('bool'), []), relay.reshape(const_8483.astype('bool'), [1, 10, 12]), relay.reshape(var_8484.astype('float32'), [180, 1]), relay.reshape(const_8485.astype('float32'), [4, 10, 12]), ), 1)
call_8486 = relay.TupleGetItem(func_2141_call(relay.reshape(const_8482.astype('bool'), []), relay.reshape(const_8483.astype('bool'), [1, 10, 12]), relay.reshape(var_8484.astype('float32'), [180, 1]), relay.reshape(const_8485.astype('float32'), [4, 10, 12]), ), 1)
output = relay.Tuple([call_8433,call_8451,call_8481,const_8482,const_8483,var_8484,const_8485,])
output2 = relay.Tuple([call_8434,call_8452,call_8486,const_8482,const_8483,var_8484,const_8485,])
func_8491 = relay.Function([var_8484,], output)
mod['func_8491'] = func_8491
mod = relay.transform.InferType()(mod)
var_8492 = relay.var("var_8492", dtype = "float32", shape = (180,))#candidate|8492|(180,)|var|float32
output = func_8491(var_8492)
func_8493 = relay.Function([var_8492], output)
mutated_mod['func_8493'] = func_8493
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7331_call = mod.get_global_var('func_7331')
func_7332_call = mutated_mod.get_global_var('func_7332')
call_8511 = relay.TupleGetItem(func_7331_call(), 1)
call_8512 = relay.TupleGetItem(func_7332_call(), 1)
func_5276_call = mod.get_global_var('func_5276')
func_5283_call = mutated_mod.get_global_var('func_5283')
const_8517 = relay.const([8.123595,-6.395379,8.970925,-0.443415,1.382358,8.228544,6.592441,9.097078,-9.219892,-1.334991,-3.502030,0.912144,-4.108522,7.309058,-9.567358,3.848844,2.848203,6.923196,8.962748,7.319084,3.230864,0.843019,-7.868994,-3.098145,-1.398030,-1.996468,8.908860,-9.200704,-1.566523,-8.242226,3.599147,6.787943,1.087134,-7.490593,-7.552977,6.700847,-1.125351,-1.633536,6.662126,9.968462,3.380386,-8.367952,-4.987394,-0.966378,4.622019,2.797871,-7.495191,6.202521,9.888011,9.378756,0.776248,-6.565053,3.131078,-4.542071,5.660446,-3.305422,1.239338,-5.105684,1.298821,-6.310543,2.842080,-8.903247,-9.674395,9.697347,6.685908,-2.478518,-7.281400,-6.250703,5.378190,-5.674574,-6.085973,-0.550371,-8.251947,2.651489,9.220422,-4.851987,7.148083,2.065636,-1.970838,-2.619235,9.269490,-5.754954,9.554366,7.003211,8.485917,7.638289,-0.182686,7.207326,-6.902599,1.161494,-5.825727,-8.002246,-7.192407,-6.382181,9.931286,-8.692614,0.595662,-9.480465,8.250721,0.575795,7.818453,-6.721689,-4.190535,-3.023426,0.654371,0.047474,3.018662,6.109097,6.678530,-8.719777,-0.480449,8.415391,5.305203,-5.802852,7.239540,5.355066,0.575884,-0.132266,5.079765,-5.749458,-0.002389,7.183845,-3.862560,1.535860,-2.809168,-4.546862,-4.781438,-1.215959,7.040916,-9.853016,-6.493213,8.445625,-2.797590,-8.271009,1.074265,-6.495180,-5.401798,8.988829,-8.903666,-5.805099,8.646888,-3.738276,-6.607051,2.399083,9.059449,-9.954818,-0.719498,1.745460,5.831471,-3.288106,7.862790,1.684608,-6.102083,-7.007953,0.680320,3.097862,9.951106,6.741432,-6.963854,0.045826,-5.057401,-8.200161,4.194079,8.093683,8.499696,5.295218,-3.234165,-3.998201,-3.834443,-0.006462,4.791554,-4.812328,9.535579,-2.030367,-9.970928,5.944832,3.677343,1.794929,-4.261441,9.863361,5.860866,-2.495609,3.486208,-5.585864,8.796117,-5.632832,9.451858,5.111488,-3.482916,-1.720302,0.925433,7.126916,7.505400,2.144247,-7.082665,7.608512,-0.859455,5.011682,-8.506316,1.096158,-6.147961,-5.957036,-5.170658,-7.963367,9.982629,8.712879,1.327103,4.194748,-1.229682,-1.439690,-1.909516,-8.500361,8.164447,-1.729656,8.324573,9.910635,9.540394,2.709732,4.245359,-6.305642,8.048361,5.034676,2.241614,4.427272,9.812369,-6.117571,-5.254369,-1.512590,-3.022829,8.660245,-3.087780,-3.243166,2.775144,1.692373,8.813062,1.891650,-8.423545,7.119747,-0.528857,0.821470,-8.823840,1.739598,-9.602876,-1.486410,-2.841225,-9.169851,-1.718316,5.525619,1.291444,-3.182733,-4.346954,2.318015,-0.658905,-2.040701,9.529868,4.090817,6.321440,-7.203923,-5.850218,3.598476,6.042367,-4.489193,-9.790854,7.743662,-4.752001,-4.278719,4.264395,0.637632,3.153506,-2.957406,3.787239,-1.888656,-4.654209,-8.250568,-1.258698,-2.987674,-9.478551,8.768615,-8.867111,-6.801902,6.138672,2.633554,-0.228579,-3.112539,7.346699,-4.296005,-8.313715,9.481464,-1.528322,-2.253976,4.625883,-8.228488,5.496264,-2.784089,-0.166467,-9.222324,-7.641031,-9.077039,1.269536,-2.732325,-2.795289,3.451733,4.016107,0.396566,4.484059,-8.469733,-7.907702,-3.150498,4.259784,2.112740,1.612017,2.644204,-7.762257,-3.576565,-2.243829,-4.026393,1.711057,-5.482578,-5.010022,-9.462381,8.020690,5.376417,7.249011,1.067073,-0.241530,-3.954776,-4.920024,2.920749,-2.817339,-6.338438,-5.570978,5.682957,1.917568,4.455187,9.138566,2.910717,-6.415319,6.209609,-0.564154,-4.761006,4.576816,-1.866635,-6.251976,-4.079672,2.492323,-6.289886,7.008303,7.234786,4.235585,6.426070,4.558851,3.334409,1.741373,8.800032,6.258464,-6.844540,0.586314,-2.522969,9.312963,-0.788469,-6.443040,-3.151334,-0.722050,-1.128766,-6.686281,-9.472015,-1.503562,-3.710523,-7.320127,9.066852,5.345943,4.854886,-9.316143,8.599674,-0.188838,-7.365517,-2.318165,8.241105,-7.169003,-1.598901,7.012382,-0.531203,-3.541241,3.168140,9.686721,-1.440359,-3.151833,6.253779,0.585330,-8.037975,-4.246878,-6.118161,-2.267631,8.708920,2.447209,7.203336,-2.157573,-6.081525,-2.265379,-4.399434,-0.365734,2.009698,-6.151208,4.352510,0.517724,9.075190,-5.319591,-9.507941,0.868880,-1.948872,7.702023,1.599195,3.193704,-2.241148,1.543951,3.104151,4.564136,8.949793,5.103136,9.596095,-8.218542,-7.428965,5.474327,3.083185,-6.763985,2.826313,-0.534236,-6.303428,6.082541,0.922045,9.267231,-0.062872,5.509016,-3.080716,1.618807,7.064810,-0.728127,-7.926544,-8.382963,8.493595,9.475560,-4.556312,0.585356,-8.137313,8.233063,-8.359836,-7.829556,4.045270,-8.418748,6.991578,-8.775393,6.058372,-8.478203,-8.122349,-4.178442,-6.679569,-9.039593,4.156916,0.295991,-8.057422,3.770773,8.588612,-3.480849,-3.295323,-0.149582,-6.645240,-8.685663,5.222596,7.467758,-7.659623,6.875572,-6.740392,5.210261,-2.104517,0.983842,-8.025614,3.042015,-7.267573,-1.174571,-0.638759,-9.217387,9.837142,-1.063388,-9.598391,-2.175784,9.303600,7.199006,-6.397341,5.697886,1.820074,1.093020,-8.422169,8.456212,-4.201394,7.429880,-1.009757,8.250905,-0.637527,-3.555278,-1.793048,2.470496,0.333528,7.709588,-7.665300,-4.039605,1.812609,1.211395,-6.091451,-4.093787,-6.497222,6.894410,-3.709776,7.974373,-2.249767,2.007478,-9.835747,1.511408,7.737431,9.629469,4.611852,2.845260,-6.884131,-1.261198,6.263275,0.458713,-1.202017,-9.893778,-4.626163,-8.345745,5.523368,7.604002,-9.948635,5.337937,3.744201,0.202611,-2.262765,0.347655,2.211696,4.434821,-4.589225,9.055612,1.066688,4.682529,4.025730,6.917317,8.310648,-6.666203,7.026919,0.305335,2.608215,6.387209,5.560016,-5.763611,5.006675,4.105053,-1.423297,-9.957064,-1.061512,0.917036,3.477377,4.794423,0.421206,8.141252,4.748190,2.559214,5.449033,5.830395,0.567558,-6.821924,0.616841,9.596410,-1.723280,-4.666589,9.519841,-5.324221,-8.709455,-4.123872,0.433876,-5.070328,-9.880085,2.570020,-2.112212,6.381203,-1.692477,-9.203444,0.356632,-6.337314,-2.102908,8.124778,-4.892845,-1.156385,7.514123,9.524800,-1.848821,1.386032,5.394297,0.802032,2.997048,-1.483180,-3.841216,-6.874273,-4.161097,9.830908,2.231267,-0.206950,-9.605626,-2.637301,2.611415,-4.487532,5.770002,0.483410,5.243414,-7.381082,7.025183,-7.578000,-2.611616,8.545266,5.170158,4.061223,6.076162,5.244100,-9.639760,2.913666,0.212758,-8.962622,-4.007442,4.387179,-8.085344,-3.521380,-9.899541,4.477364,9.606257,6.036438,1.574877,6.301112,0.292757,-9.247383,-4.353732,4.985188,9.532044,-8.392291,2.847982,8.283284,-7.708454,2.223478,6.549824,4.339802,-4.297815,7.609418,1.983295,-2.739705,4.128784,-9.166391,6.706308,5.679450,2.100397,-7.477774,-8.987474,-8.376392,1.282934,0.966637,-5.034156,-7.028341,-2.343903,-5.671886,-1.191771,-9.723534,6.523263,-8.250138,-8.444674,-6.575917,9.511306,0.676457,-7.496039,-7.317904,9.276232,-6.214183,-8.376542,-9.744538,4.500823,-0.814455,-5.790591,4.296332,-7.299531,-2.275145,-9.789981,-4.079781,8.684605,9.712581,-8.896427,9.067851,6.142977,8.362691,-6.811292,-6.206599,4.068714,-0.295174,4.938777,9.464384,9.601028,3.554410,-7.387092,8.233552,5.228069,-8.714974,6.443863,5.852643,1.292001,-9.490534,3.628949,3.924661,-2.011357,-5.038655,-9.625214,0.934857,2.024654,2.770481,-0.300318,1.956732,2.084240,3.196193,2.140605,6.064589,-8.775657,9.736785,7.815419,-5.809697,-4.922161,6.932183,-6.787906,-3.322233,9.502908,-4.318313,-7.650149,3.422251,2.627408,-5.557230,-1.800579,8.119644,-0.365224,-7.101477,-2.428902,5.892216,7.750684,8.950411,7.783082,5.470016,2.735208,-2.390146,9.632124,1.504880,5.905692,4.556279,6.814000,-9.789803,0.052064,2.255849,7.595884,-5.882092,-9.555204,-6.750538,6.191413,-8.697967,2.777455,4.969965,2.367784,5.306346,-2.473939,-7.378031,-7.440505,4.827271,8.929240,7.031834,6.563002,9.859207,8.077539,5.961151,9.641443,7.204875,6.592547,4.358337,6.265045,4.186629,3.972622,6.415739,-9.352346,-4.353441,-4.474317,-1.413166,3.514557,7.044303,6.108039,-5.110504,-1.951105,-1.483098,-5.252200,-2.210626,-0.345825,0.788094,7.121949,9.283813,-5.815827,8.522365,1.903512,-1.756872,5.909074,3.448190,3.973194,2.498373,6.604122,6.456825,6.413397,5.895241,9.516782,-9.731041,-7.246336,-3.236570,3.646391,5.930264,2.359392,5.368924,4.367987,4.920459,-5.664780,-9.127557,-0.727777,4.510002,-4.682577,-3.613922,-6.395244,-4.227039,-1.144167,0.058540,0.100133,3.010682,-0.493438,5.877761,0.776082,-5.972980,-5.846078,-3.866847,-9.470353,-2.431095,-2.330623,-6.276232,8.160373,4.391430,4.794243,0.740302,3.578319,0.559580,-1.706717,2.538626,-3.571391,3.587551,8.051049,6.308585,-5.645804,-3.746080,-3.075111,4.409887,0.397968,-1.164101,9.730670,2.822911,-1.906273,-5.961975,-6.565998,-6.263837,-9.044901,6.625304,9.654517,0.183858,-9.170784,4.418924,5.993363,6.620146,2.497995,9.898517,8.388730,-1.407043,-1.655143,-8.010604,-9.234779,9.181678,0.043810,-1.950750,0.600580,-6.205503,0.162878,4.361845,-1.237680,-0.400247,-1.121498,-8.285630,-4.869787,3.406151,9.667782,2.989847,-5.913866,-5.702822,6.102504,0.055022,6.539542,5.982904,3.758667,3.080455,5.110184,8.778692,8.088621,6.707415,-8.787783,-5.205652,2.687914,-2.289517,-9.277083,1.939161,6.219956,6.086060,-4.154560,-6.191608,4.364336,4.543063,0.848760,-8.059978,-6.510047,-2.070638,-0.671876,-5.503963,8.464573,9.675226,-3.827549,5.696117,3.438207,-5.280573,1.238764,8.399125,-7.401180,4.550967,-5.982027,-8.580601,-7.684026,0.670685,-2.526928,-8.716746,-8.079165,7.986290,-5.498638,9.741766,3.339549,9.405733,-3.345610,2.805248,5.658788,-5.373997,-9.509968,-4.763744,8.282606,6.196422,0.855251,9.354445,-1.803436,-7.997243,-2.567876,-2.892998,3.432225,-7.539703,9.691625,-5.643973,5.774363,-3.606302,-7.198870,-8.023123,-7.636584,4.537902,2.026523,-7.424713,3.988813,-6.585026,-3.463268,-2.942058,-2.845393,4.043925,-5.844092,-6.316923,-1.614609,-2.498038,9.021846,-4.200375,-7.010704,2.394864,1.217562,9.826068,5.964543,-2.901389,7.874134,6.686999,6.069513,1.358024,7.704843,0.206522,-3.614783,-1.079386,-2.182440,4.693852,-6.861941,-5.164012,-7.973146,-0.042665,2.479924,3.043807,6.908334,-1.482778,4.871929,1.446064,8.783483,-6.964497,-7.838461,1.163741,-6.687195,4.025469,-5.607547,-3.052787,-3.659132,-6.825889,6.588687,-0.404432,-7.107904,2.619028,-4.375515,-6.391562,-7.494606,6.035705,6.789435,2.970133,8.741982,-4.589138,1.129926,2.246207,-4.777998,5.205197,3.793630,-6.611078,4.510434,-1.576778,-9.177814,7.591512,4.718061,9.114117,-2.781263,-1.904447,-8.252275,4.141669,8.768087,1.778922,-1.770716,7.000740,-2.713470,5.719782,-4.275086,9.047581,6.378714,2.285697,9.835847,7.172091,4.369330,2.001359,3.504260,5.106515,9.380572,-5.634220,-6.088089,-2.388100,4.944804,-3.564113,8.512970,7.632038,-0.646599,3.562758,7.244905], dtype = "float32")#candidate|8517|(1080,)|const|float32
const_8518 = relay.const([2,-7,-8,3,5,1,9,-7,-3,-2,1,-5,7,-7,-1,2,-2,-6,5,10,-3,-3,-6,3,-9,6,-7,6,-2,4,3,9,-5,6,4,10,-6,2,-3,1,9,1,-8,-8,10,-4,-8,-6,7,2,9,-9,-5,7,5,10,-7,8,8,6,9,-8,-2,-9,8,10,-3,2,-9,6,9,8,6,3,-5,1,10,1,6,3,-3,-1,2,-6,2,-7,-7,1,4,-7,-5,-10,-8,7,3,7,-4,2,-2,9,10,7,10,3,1,2,10,1,5,1,-9,-3,7,-9,6,4,-3,-7,8,8,2,5,3,10,-3,7,-9,5,10,6,-1,3,-1,6,10,1,3,4,2,-6,-4,7,5,-1,5,2,10,-7,-8,2,-4,-2,9,-2,9,-5,3,6,3,5,-7,-1,2,7,10,8,4,-2,-5,5,-4,-6,-2,5,10,-3,-4,-5,4,-6,3,10,-1,10,7,-9,6,8,-8,5,-2,6,-7,-4,-2,5,2,3,-8,-1,-10,5,-6,8,-7,-1,-5,7,-7,-1,1,4,-1,-1,2,3,-2,2,3,-1,4,3,10,-9,3,6,10,-9,7,-10,-4,2,3,-6,-1,1,1,-5,4,-8,8,10,1,8,3,-6,-3,3,-2,6,-7,1,9,-9,-1,-1,-10,-4,-2,1,-10,-2,-7,1,-5,-5,2,-10,-3,5,7,-3,-6,-10,-9,6,7,-2,-5,6,-10,10,-8,-4,-9,-6,-4,3,-6,-2,1,-6,-6,-7,-3,-10,-5,-4,1,7,-6,6,2,2,2,4,-2,6,-1,10,7,7,-2,-6,-1,-5,-5,-9,-2,-4,-6,10,1,7,-8,-7,9,-8,7,6,-8,-4,-1,10,5,8], dtype = "int32")#candidate|8518|(336,)|const|int32
var_8519 = relay.var("var_8519", dtype = "bool", shape = (120,))#candidate|8519|(120,)|var|bool
const_8520 = relay.const([4.446072,-0.212093,-7.268564,-3.402587,7.617230,0.153061,2.344470,7.925360,8.717334,-7.871506,4.461337,5.114094,-1.908092,-0.208184,1.638638,2.954946,1.518980,5.808274,-6.965411,2.932305,-4.087423,8.662468,1.621161,1.601497,-8.969789,-7.452667,1.259574,8.471689,-3.217333,3.413882,1.805621,-7.845624,-1.839757,-2.954726,0.143065,6.307648,-0.022497,3.464416,6.510379,8.651579,-4.606300,5.409244,5.829232,1.981162,-9.756484,-3.129725,3.292021,-0.543742,-9.370832,0.157421,8.713674,6.837961,9.207193,0.446160,9.211552,-7.685856,5.676031,4.009210,3.287331,-1.389892,-0.246674,2.718405,-8.847006,7.463923,-9.104038,-2.918595,7.814962,-3.131395,6.838161,-0.468457,-4.259353,-0.119253,-6.257150,-0.901775,5.866371,-7.703140,2.430270,1.255373,0.789882,-1.406058,9.906285,1.646366,0.520493,-8.941052,-7.861902,5.189804,9.638107,-1.426874,-3.857209,2.386921,0.329810,9.366160,8.428334,-1.410437,8.295621,0.657775,-7.278366,-8.261317,-0.227788,-7.597010,7.024634,8.253179,6.541428,-1.433046,-9.362007,1.790537,5.130672,8.827510,-0.880995,-2.037465,-9.048640,-1.020449,-8.223278,-6.790678,2.911987,0.568055,1.080184,-6.518419,-6.208817,-5.974891,-5.758960,2.837480,-0.303856,3.992268,-4.517736,-7.177346,4.481930,7.362960,4.286568,-0.918206,-8.833798,8.836944,-9.764761,9.973349,4.675554,8.417679,1.611089,3.842100,8.157960,-6.435532,-0.495559,9.148702,-2.231867,-3.587512,-4.465436,-3.198427,-5.002587,-6.268472,1.429753,-7.427842,8.730286,4.965531,-3.197841,-7.755644,2.032484,4.474315,-3.552506,9.267936,-8.060163,-7.895862,-2.667820,3.820673,8.632054,6.854254,0.227712,0.440160,0.116098,-2.786886,7.084842,-5.654927,3.646129,3.866961,-6.633180,-5.835904,-2.595601,5.412805,-2.052718,1.822058,6.323300,-3.681880], dtype = "float32")#candidate|8520|(180,)|const|float32
var_8521 = relay.var("var_8521", dtype = "float64", shape = (117,))#candidate|8521|(117,)|var|float64
call_8516 = relay.TupleGetItem(func_5276_call(relay.reshape(const_8517.astype('float32'), [270, 4]), relay.reshape(const_8518.astype('int32'), [336,]), relay.reshape(var_8519.astype('bool'), [120, 1]), relay.reshape(const_8520.astype('float32'), [180,]), relay.reshape(var_8521.astype('float64'), [117,]), ), 10)
call_8522 = relay.TupleGetItem(func_5283_call(relay.reshape(const_8517.astype('float32'), [270, 4]), relay.reshape(const_8518.astype('int32'), [336,]), relay.reshape(var_8519.astype('bool'), [120, 1]), relay.reshape(const_8520.astype('float32'), [180,]), relay.reshape(var_8521.astype('float64'), [117,]), ), 10)
output = relay.Tuple([call_8511,call_8516,const_8517,const_8518,var_8519,const_8520,var_8521,])
output2 = relay.Tuple([call_8512,call_8522,const_8517,const_8518,var_8519,const_8520,var_8521,])
func_8538 = relay.Function([var_8519,var_8521,], output)
mod['func_8538'] = func_8538
mod = relay.transform.InferType()(mod)
mutated_mod['func_8538'] = func_8538
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8538_call = mutated_mod.get_global_var('func_8538')
var_8540 = relay.var("var_8540", dtype = "bool", shape = (120,))#candidate|8540|(120,)|var|bool
var_8541 = relay.var("var_8541", dtype = "float64", shape = (117,))#candidate|8541|(117,)|var|float64
call_8539 = func_8538_call(var_8540,var_8541,)
output = call_8539
func_8542 = relay.Function([var_8540,var_8541,], output)
mutated_mod['func_8542'] = func_8542
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6047_call = mod.get_global_var('func_6047')
func_6049_call = mutated_mod.get_global_var('func_6049')
call_8549 = func_6047_call()
call_8550 = func_6047_call()
output = relay.Tuple([call_8549,])
output2 = relay.Tuple([call_8550,])
func_8562 = relay.Function([], output)
mod['func_8562'] = func_8562
mod = relay.transform.InferType()(mod)
output = func_8562()
func_8563 = relay.Function([], output)
mutated_mod['func_8563'] = func_8563
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8580 = relay.var("var_8580", dtype = "uint8", shape = (16, 14, 3))#candidate|8580|(16, 14, 3)|var|uint8
var_8581 = relay.var("var_8581", dtype = "uint8", shape = (16, 14, 3))#candidate|8581|(16, 14, 3)|var|uint8
bop_8582 = relay.minimum(var_8580.astype('uint8'), relay.reshape(var_8581.astype('uint8'), relay.shape_of(var_8580))) # shape=(16, 14, 3)
output = bop_8582
output2 = bop_8582
func_8590 = relay.Function([var_8580,var_8581,], output)
mod['func_8590'] = func_8590
mod = relay.transform.InferType()(mod)
mutated_mod['func_8590'] = func_8590
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8590_call = mutated_mod.get_global_var('func_8590')
var_8592 = relay.var("var_8592", dtype = "uint8", shape = (16, 14, 3))#candidate|8592|(16, 14, 3)|var|uint8
var_8593 = relay.var("var_8593", dtype = "uint8", shape = (16, 14, 3))#candidate|8593|(16, 14, 3)|var|uint8
call_8591 = func_8590_call(var_8592,var_8593,)
output = call_8591
func_8594 = relay.Function([var_8592,var_8593,], output)
mutated_mod['func_8594'] = func_8594
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7331_call = mod.get_global_var('func_7331')
func_7332_call = mutated_mod.get_global_var('func_7332')
call_8602 = relay.TupleGetItem(func_7331_call(), 0)
call_8603 = relay.TupleGetItem(func_7332_call(), 0)
func_486_call = mod.get_global_var('func_486')
func_488_call = mutated_mod.get_global_var('func_488')
const_8611 = relay.const([[8.710711,8.661253,0.151639,6.443322,1.221595,-2.852300,0.565064,8.868087,4.184710,2.005688,-1.745765,-2.476879,-3.928607,5.072147,-8.996642,8.371008,9.064943,6.126993,-1.430194,-1.024211,-3.315381,-3.843626,-2.170112,-7.014989,3.985326,0.831867],[-5.840136,3.960897,-9.209565,2.155732,-9.840876,-9.566255,5.592395,-1.406215,1.444732,4.420382,-0.252701,2.108982,-3.619136,-0.696493,-9.458991,5.072199,5.338432,4.787430,2.006689,-4.615942,5.619586,0.287922,9.730227,-5.236707,-3.259940,-0.860988],[3.117624,-0.061751,-5.199360,1.846888,-0.748996,0.009616,9.234178,9.817887,4.975641,-4.096811,8.471569,2.971396,-3.334211,7.907474,-7.198084,7.835608,6.727337,9.637213,-9.069952,-8.171314,1.917052,-1.309804,-1.555794,2.181759,-8.587116,-0.537005],[1.451199,-7.085093,5.249512,0.884537,9.019358,-3.981380,-0.913797,-3.120296,-8.872621,0.651852,-0.278859,5.353820,-0.906623,-9.349477,-5.885428,-7.315225,8.632463,9.565099,-5.978015,-2.012726,6.692808,-7.140899,-3.472583,-6.946400,-2.405677,-3.930679],[-3.938324,4.328007,-7.310161,1.884091,6.921895,-3.851860,-0.709917,8.658744,-3.975836,-4.874693,-3.622280,6.761746,-5.688873,-9.485942,-3.185076,6.717697,-6.622468,6.835523,7.470879,7.086784,-8.871279,7.248060,-4.892372,4.570478,-8.058191,-5.553405],[-1.089932,2.583146,-1.762631,4.183557,-1.311424,6.313962,-0.282770,2.648936,6.246202,-0.446492,-9.224961,-1.952795,-3.739267,-7.489662,6.039600,-7.691720,-5.213012,-8.139810,4.532311,8.046257,7.417739,-5.173193,1.762062,7.967111,-5.641639,-1.742203],[0.654228,4.123997,-6.372637,-6.259153,2.903181,-8.278610,-7.557764,-7.643605,-7.491190,5.815128,-0.693824,6.176420,7.160875,-8.858400,-7.804539,-1.868668,6.363707,-2.638981,2.417875,2.901191,4.412798,6.687888,4.479702,3.586987,8.626916,7.172817],[-7.637828,-3.119260,4.613777,7.948730,5.632717,5.341754,-1.098057,0.838941,-4.642970,-2.687588,-5.945410,9.985187,6.385639,6.262722,8.799488,-8.466678,-1.586128,5.166851,7.571748,9.266256,-5.867097,5.334726,-2.550449,3.308065,1.899398,-3.224247],[5.558873,6.034945,-0.840390,4.355284,1.049823,1.488680,-0.783885,1.173871,-0.526153,9.896940,8.517604,2.584504,3.751823,-5.064753,-5.847217,-0.181441,-0.658765,-5.722732,-7.125673,-7.556499,8.538696,5.069454,-8.825631,6.866227,-2.623874,-5.311323],[4.317263,9.127757,-2.539133,0.567844,6.654744,-1.573983,-4.459657,-9.473088,-7.015311,-6.116326,2.352763,-9.629029,4.945513,-5.552109,-1.950091,3.900163,-6.703588,-0.409042,3.942945,0.636292,4.594949,-9.777935,-7.366657,-9.197794,-2.139526,-1.313170],[3.336651,8.211329,-2.741749,-0.868878,-1.051445,-7.644045,-4.230076,8.762322,-9.092546,-4.068985,-2.335168,2.902602,-9.741188,-3.169336,1.773993,-9.349757,9.713727,6.789204,0.193503,-9.675427,2.543482,-2.415875,7.199706,9.941210,-2.017210,0.740847],[6.826853,3.071942,-1.199847,-4.384575,-2.890008,-8.237034,-6.721411,3.173394,0.029491,-8.543577,-2.678168,2.898449,-1.755108,7.551006,-1.346264,-9.164385,-6.495705,9.729439,4.926541,-2.200467,-5.636320,5.667078,-4.243690,-1.767271,-7.625273,-0.196090],[2.372799,-1.953725,9.335518,-8.186895,-8.890242,1.922917,-6.989468,0.876863,-9.841359,5.452581,0.001437,4.008115,0.455839,1.885967,-2.054585,-1.594153,2.103738,-8.012032,4.222432,4.095989,3.418909,-4.488766,7.587153,9.461056,4.488037,4.957544],[9.539307,-0.664269,-1.128977,-9.802977,0.983611,6.110181,6.829326,5.158905,-5.199920,-0.866288,1.585184,-8.260040,-9.038499,-9.289719,-6.733580,-5.828084,6.159439,6.783929,6.019861,-0.329446,-6.327742,1.728635,0.601708,-3.145273,8.927525,5.009200],[6.775110,-1.206885,8.679361,6.122611,-5.089779,1.792056,-2.134754,4.432131,-5.694925,1.962972,6.306500,-0.099631,3.284523,3.625500,4.013632,-1.167875,-0.815110,1.346879,3.527031,5.483060,-4.880988,6.161805,7.822583,-2.429013,2.211064,5.572327],[1.692674,5.646807,-2.177769,4.968198,-1.163215,1.430615,-2.895101,-0.084826,6.566333,9.745787,1.870900,8.524397,-8.557414,-7.008292,3.205539,-5.755131,-2.464694,6.121970,-7.895362,-9.612241,-5.102703,2.191865,-1.408701,0.534422,-5.292830,-4.233710],[3.264278,-6.198669,7.231769,0.405136,-0.009505,2.650137,-5.858130,-6.258928,-1.170455,7.212097,-5.817041,9.128671,-2.719134,-8.066767,-5.586625,-8.812355,-5.750407,9.600380,-9.290760,-9.730391,-0.423418,7.561091,5.526966,-3.391506,-4.398155,-0.065933],[-0.499742,-3.058192,-3.826765,7.038290,4.784230,0.026294,8.372449,4.375264,0.968885,-8.841127,-2.001505,-6.429187,2.156455,1.362075,-7.189502,-9.040634,0.939783,-2.203302,-3.987328,-6.621069,1.421919,2.816510,-6.279654,-0.287461,7.718121,-8.013410],[-7.590557,6.755216,0.831453,-9.642469,-9.488213,-6.550637,7.489758,-7.852889,6.295212,9.212935,-7.672570,8.116907,8.712470,-7.323150,-7.153963,-0.856611,-2.966521,0.566091,-7.622105,7.236431,-7.721144,1.941165,-7.257320,8.221459,-1.412922,4.623823],[-1.829108,-5.084112,-0.392229,-7.472981,3.580414,-1.560710,-6.583209,2.062069,4.888483,7.493429,-7.375481,1.360147,-1.789793,-2.545802,1.759743,4.290723,-5.078428,2.036154,3.591841,-3.321650,8.230784,-5.495230,-0.006994,-8.143175,-7.271614,1.740134],[-3.799853,-9.661904,-2.755639,-5.086101,-8.767194,0.178629,3.753707,2.747227,-5.881986,6.946318,-8.281454,8.424653,1.112350,-1.899513,8.334183,-5.526173,-0.012034,5.168637,-9.642726,-5.892502,9.047280,6.137745,1.131165,3.709014,-6.607440,6.606548],[-8.261730,1.370971,-2.230695,-2.009032,-4.847108,-2.256287,0.532901,2.463199,5.944008,-7.136567,9.660779,3.142164,-2.612566,-2.419627,3.397810,-5.238690,-2.841583,0.467593,2.010150,-1.417336,-2.687169,6.824698,-7.647833,8.056566,-7.435260,2.038759],[-7.289171,-7.877029,2.823207,8.502844,-3.773724,1.794658,-8.609412,-1.485682,-2.979553,6.920160,9.117480,-0.479393,7.798417,3.721362,2.869175,1.018512,4.989619,-5.966962,-8.972663,9.805719,2.925400,2.139218,4.867200,-8.100557,-9.603677,-6.500262],[-2.893698,-1.495070,5.448833,8.245021,-6.177728,-1.122395,2.250711,-7.448866,-5.072425,-7.000014,-3.145530,6.247436,2.597531,4.983195,7.904118,0.647485,-5.688987,4.730080,6.740430,-0.474383,1.006111,2.269294,-3.330414,-3.894335,2.001451,-0.158386],[-1.554308,7.440332,6.861681,-6.880623,2.371402,-5.672468,0.341454,7.996857,4.757771,-8.532654,-2.204508,7.783415,0.428626,0.282904,-4.926792,4.184015,-3.394152,2.822674,2.168790,-2.629134,3.221947,5.512134,6.192198,-0.763830,-5.607447,4.920027],[-5.320248,4.234478,1.950861,4.876315,4.224030,-0.722986,1.924985,9.100336,1.635076,8.846513,7.195163,3.799922,0.674209,4.528970,-5.294496,-0.725152,3.385928,5.618184,2.718045,-4.846262,9.192675,-3.570339,-0.839852,2.000117,6.161008,5.855314],[3.628132,3.674286,-0.203837,7.528213,-0.714704,0.463430,9.519175,-7.316495,1.052901,2.110255,5.917753,-0.810246,-7.340511,-2.551882,-8.394984,-9.801489,-5.626919,3.130733,-1.009005,-9.529975,-7.814116,-4.855373,-1.598496,-4.720813,2.859145,-3.760776],[6.754415,2.987183,-0.162207,-4.734332,8.043013,0.391533,-7.502832,-7.467526,9.304348,2.868528,-0.715295,8.695291,-0.745186,0.841189,-3.424082,4.724131,-2.130899,9.823694,-6.700085,7.113061,-4.501843,9.209524,0.827737,1.486010,-2.156375,2.328260],[-2.074205,7.052039,-7.019316,-5.099771,-8.311138,8.469809,-9.060211,-4.614543,-4.508386,-7.832340,-6.067916,5.819141,2.794889,-4.410122,-5.643740,6.006116,-9.813947,6.273788,7.867362,2.859007,7.747520,-4.817949,0.410826,-7.211924,-8.271902,-4.592993],[1.709406,6.207448,-7.799550,-7.194548,6.961879,8.013958,1.585827,-2.090302,1.203698,-2.629784,-5.160751,-5.349046,2.734772,2.438364,-0.677912,-0.037266,-3.523693,-5.947579,3.713072,8.897435,-0.410425,5.385840,0.557704,-7.809456,0.875543,-6.827611],[1.662881,-1.797233,1.459046,2.320370,7.564062,8.652145,0.310155,5.659905,6.877900,5.210207,0.051920,5.480426,-5.753332,0.477242,-7.279634,-2.349789,3.451930,4.033558,-9.068868,-1.363365,-7.132956,9.929500,8.215877,5.718493,3.622703,5.633942],[8.296815,-2.195276,-5.165871,4.993076,6.734265,1.304150,-9.230347,6.812119,7.606499,6.203250,-2.505166,5.260145,2.205925,-0.641462,1.542052,1.330601,-8.161863,-6.314462,-8.253351,5.412432,2.938853,-0.266844,3.886400,3.582049,1.024558,6.423235],[2.047740,4.622579,4.014802,-6.828570,7.409435,2.594906,4.338485,2.909189,3.889288,3.990357,3.960423,3.395567,4.076433,4.230417,1.511818,-4.809595,8.195123,1.868346,5.758856,5.057754,8.438172,-6.624055,-0.606977,-9.179718,2.112926,2.140129],[7.877738,9.188723,1.101652,4.162275,5.548467,6.571961,-3.838796,4.811782,-3.948196,-0.270151,6.268072,-9.801238,-6.743409,-7.222619,-9.131105,-1.007484,-3.900059,9.704336,-4.860292,-0.725898,-4.064104,-2.082898,-3.396958,6.225778,-0.987216,-1.365189],[-8.158836,-0.553657,-1.054478,-0.102031,-5.733965,-3.165490,8.978665,-6.351987,7.621169,7.742832,-0.739891,-1.222360,-1.516301,-6.447266,3.128460,-2.044254,9.087487,5.815128,5.729979,0.194462,-6.183042,-9.804579,1.135345,-8.774309,5.978975,-2.465777],[0.148469,-2.895830,-3.724148,7.750956,-5.524412,-8.547172,-1.090823,0.475866,7.437490,1.884422,-3.427328,9.170246,-9.995020,-6.819488,-1.631468,2.717539,3.894052,0.442321,-4.735118,-5.685792,-0.327626,1.758794,-5.948541,4.515505,4.444922,0.005853],[-5.852392,3.639092,-6.275300,6.859933,-1.942322,9.134783,-2.399317,-6.777710,1.307233,1.047955,2.601813,-1.796268,6.325629,2.382192,-8.461280,3.098425,-6.051197,2.447791,-1.386361,0.614816,7.123038,3.152736,3.235532,2.870654,-7.627933,-6.522825],[2.275281,9.006206,-7.749240,8.174372,3.037010,-6.190785,2.029939,9.947120,-3.811415,-6.439617,1.890989,3.705422,7.238328,6.932389,-6.740168,7.199152,-1.444149,-7.025661,-7.967189,3.194027,-7.147256,7.811264,5.371493,-9.555894,8.197738,1.898051],[-2.827475,9.606470,9.354055,8.171248,-5.080303,8.414841,6.042507,-3.559639,8.060268,9.394861,0.902614,1.632879,1.344911,-3.799072,7.820286,5.197897,-1.207934,6.379263,0.623223,0.396753,-4.362424,-7.423027,5.783523,5.155100,-6.894676,-6.509602],[7.664170,-4.680525,1.417584,7.169062,7.912245,-1.793568,7.508759,1.430984,-3.161658,-7.180385,-5.853954,-0.597955,1.911435,-7.681112,2.220650,2.655631,3.749132,2.856330,-4.546521,5.868700,-2.926591,-2.366993,2.758166,-8.763434,-9.780122,-7.326183]], dtype = "float64")#candidate|8611|(40, 26)|const|float64
call_8610 = relay.TupleGetItem(func_486_call(relay.reshape(const_8611.astype('float64'), [13, 8, 10])), 1)
call_8612 = relay.TupleGetItem(func_488_call(relay.reshape(const_8611.astype('float64'), [13, 8, 10])), 1)
uop_8618 = relay.sqrt(const_8611.astype('float64')) # shape=(40, 26)
bop_8624 = relay.less(uop_8618.astype('bool'), relay.reshape(const_8611.astype('bool'), relay.shape_of(uop_8618))) # shape=(40, 26)
bop_8631 = relay.right_shift(uop_8618.astype('uint16'), relay.reshape(bop_8624.astype('uint16'), relay.shape_of(uop_8618))) # shape=(40, 26)
output = relay.Tuple([call_8602,call_8610,bop_8631,])
output2 = relay.Tuple([call_8603,call_8612,bop_8631,])
func_8638 = relay.Function([], output)
mod['func_8638'] = func_8638
mod = relay.transform.InferType()(mod)
output = func_8638()
func_8639 = relay.Function([], output)
mutated_mod['func_8639'] = func_8639
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8329_call = mod.get_global_var('func_8329')
func_8330_call = mutated_mod.get_global_var('func_8330')
call_8698 = relay.TupleGetItem(func_8329_call(), 0)
call_8699 = relay.TupleGetItem(func_8330_call(), 0)
output = call_8698
output2 = call_8699
func_8721 = relay.Function([], output)
mod['func_8721'] = func_8721
mod = relay.transform.InferType()(mod)
mutated_mod['func_8721'] = func_8721
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8721_call = mutated_mod.get_global_var('func_8721')
call_8722 = func_8721_call()
output = call_8722
func_8723 = relay.Function([], output)
mutated_mod['func_8723'] = func_8723
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4458_call = mod.get_global_var('func_4458')
func_4459_call = mutated_mod.get_global_var('func_4459')
call_8737 = relay.TupleGetItem(func_4458_call(), 0)
call_8738 = relay.TupleGetItem(func_4459_call(), 0)
func_665_call = mod.get_global_var('func_665')
func_669_call = mutated_mod.get_global_var('func_669')
const_8751 = relay.const([[4,-6],[10,-3],[1,-7],[7,2],[2,1],[-4,-2],[-8,4],[8,-5],[-3,-1],[3,9],[3,-5],[-4,4],[-6,-9],[-1,-1],[-6,2],[-2,-8],[-2,-5],[1,8],[-2,6],[-10,3],[5,-8],[3,-5],[4,-4],[-6,1],[-1,4],[-2,8],[5,-9],[4,3],[-4,-6],[-10,-9],[-8,-1],[7,-4],[-8,-10],[1,4],[2,3],[3,-5],[-6,-7],[2,1],[1,4],[-5,6],[-9,6],[6,7],[3,-4],[-7,5],[-10,10],[-8,-9],[6,-7],[-6,-8],[1,6],[-6,-3],[-5,5],[-6,7],[-5,-5],[1,-4],[-1,-10],[3,-3],[-2,2],[-2,-4],[4,10],[2,-5],[8,9],[-7,-6],[3,-7],[-2,5],[-7,-1],[-1,-5],[4,6],[-5,-4],[2,2],[-8,10],[-4,2],[-5,-9],[1,3],[-3,-9],[-6,-5],[-8,3],[4,-9],[-4,4],[4,-4],[-10,-3],[-1,6],[-5,-4],[-2,1],[10,7],[-1,-4],[5,-3],[-5,-2],[-7,7],[3,3],[8,8],[-8,7],[-5,10],[3,1],[6,-9],[-8,-6],[-5,-5],[6,-6],[-7,2],[5,3],[-6,-6],[-1,-6],[-10,5],[-5,-2],[-2,9],[-7,2],[-9,-1],[-6,4],[9,10],[6,4],[1,3],[10,6],[-4,-10],[8,-7],[8,1],[10,5],[-7,9],[1,9],[-3,-9],[8,5],[-10,5],[8,-7],[7,10],[7,-9],[10,-8],[-1,6],[9,-7],[1,-1],[8,3],[7,4],[-9,-3],[10,1],[-2,-5],[-7,-9],[6,-5],[9,-10],[-1,4],[-2,-2],[-3,-1],[9,-4],[-2,5],[10,6],[-1,3],[-7,6],[-5,-8],[9,1],[-6,-6],[4,-9],[-9,-6],[10,4],[-10,-1],[1,9],[-10,-6],[6,2],[10,1],[7,2],[4,-6],[-7,6],[-9,-8],[-2,6],[-1,-10],[2,3],[9,-7],[3,4],[-7,-2],[3,4],[4,-2],[-7,10],[-3,-9],[4,6],[-5,2],[2,7],[-8,-6],[8,-3],[-9,9],[-3,6],[-9,8],[6,-9],[-7,-10],[6,-10],[6,-5],[5,-7],[3,2],[4,10],[4,7],[2,-4],[-6,9],[2,8],[7,-4],[-1,7],[-6,-8],[7,-4],[-5,-3],[-8,7],[-1,-5],[8,-3],[-7,5],[10,4],[3,6],[1,2],[-2,3],[4,-3],[-6,8],[-4,-9],[9,-10],[8,-5],[-5,2],[1,-2],[-9,-3],[6,-7],[-6,6],[-7,-10],[-1,-5],[2,1],[-9,3],[-4,-4],[-9,7],[-3,-8],[1,-1],[-9,5],[1,10],[-8,-3],[3,-10],[9,4],[-9,1],[-5,-4],[-3,5],[6,-3],[-7,-2],[-5,5],[-1,6],[7,5],[-1,1],[-5,4],[-10,1],[8,4],[-8,-2],[3,2],[-2,-3],[-10,-8],[-5,1],[-2,10],[-4,9],[-7,-9],[3,-2],[1,-10],[4,-6],[2,-5],[1,-8],[1,-6],[-1,10],[9,-6],[3,9],[-10,8],[2,8],[8,-10],[-1,1],[-10,-8],[-5,10],[-8,-8],[-4,4],[8,8],[6,4],[1,-2],[-4,-4],[-1,7],[1,-1],[4,9],[-6,2],[4,4],[9,-5],[-3,3],[-9,4],[-1,9],[-8,2],[-8,2],[5,8],[5,3],[-7,4],[-5,-7],[-6,-8],[2,1],[-6,2],[6,-7],[-7,2],[4,-7],[2,-3],[10,1],[3,-5],[7,-4],[8,4],[-1,7],[-6,3],[-2,5],[2,3],[9,10],[-5,8],[-10,2],[10,4],[-9,-1],[-7,8],[-5,-5],[10,8],[4,-3],[2,9],[-4,10],[9,5],[-4,-4],[1,2],[5,-2],[7,-8],[10,10],[-3,-4]], dtype = "uint16")#candidate|8751|(312, 2)|const|uint16
const_8752 = relay.const([-8.610285,1.911209,2.296469,4.772918,2.979774,-8.198789,-8.908660,-4.789735,7.051682,-1.101551,4.044050,9.799401,-0.669294,7.043998,0.799448,5.560175,-0.129090,0.711458,2.986573,-9.554777,7.995469,-1.169778,-7.867714,-2.155698,4.129872,-1.051941,9.313553,-4.223472,4.087778,9.546732,-9.296391,-2.337575,-0.967313,-5.194362,-1.682219,-2.106743,7.678583,4.496987,-9.522036,4.424755,-8.784021,-0.160988,1.506930,9.051255,-7.741257,5.505119,5.307458,6.900615,-6.663616,-9.683716,-2.352607,-7.586218,3.390796,3.455310,1.725837,4.573020,-6.322852,4.817455,-9.711483,-7.631882,8.302698,0.488110,-1.794409,-0.134518,-5.830184,6.846338,-2.753663,-7.479234,-0.938458,6.793223,8.765714,2.180203,-3.148885,6.561701,-4.287387,4.569726,-2.835718,-0.804821,6.625744,6.060186,4.337603,6.945360,-8.783311,-7.188221,3.450293,-6.508490,-1.998134,1.661601,-3.470142,-1.687750,-6.860976,-9.767164,-8.402265,2.127885,-3.157237,-5.147242,-6.770607,1.762050,1.121541,7.642125,3.187228,7.118063,7.879097,-6.421684,-1.418094,-8.393869,-3.488310,7.065461,-1.340416,-3.258322,4.572369,-9.775052,-3.088095,-1.737415,4.776346,4.543460,5.401934,3.519102,1.018060,-7.871520,-7.559504,-1.136177,4.534260,0.074350,0.430309,-3.904821,-7.734093,-9.303336,-9.726772,7.447926,-6.645995,-0.333723,9.273320,-9.238803,7.385057,-3.809078,-4.292309,-2.344312,-2.124344,0.964930,-0.233472,-3.545005,-7.821455,2.532433,0.340497,5.407929,4.471273,4.036348,0.511310,3.979019,-3.350279,-5.937604,9.621027,3.129357,-0.048721,5.631537,-2.405627,-1.743576,-5.134512,-7.807176,-5.860838,8.999476,6.096320,-1.846610,-8.475621,-6.495552,-4.234905,8.162532,7.082007,8.684197,5.633670,-2.316610,6.944970,4.749157,0.568483,5.165208,2.335134,1.594662,-1.182807,7.521389,-3.762365,2.161774,-0.297829,-8.473124,5.551757,8.707864,-3.080083,9.908018,-2.419331,6.484280,-2.215891,5.873725,9.335119,-8.485905,0.934905,-9.543030,0.949306,-8.820956,8.476837,-1.712215,-5.264795,9.319980,7.192280,-7.369945,4.892449,2.964873,8.806337,1.511002,-1.681126,-9.498838,8.043014,6.726743,-7.256944,-1.389761,-0.594593,5.518626,9.730770,3.378800,7.196577,-9.082185,5.384830,-5.343628,7.193210,5.860633,2.922916,2.359392,-7.134093,-0.573642,-4.169422,-3.984471,2.345784,3.912939,2.558652,7.318855,9.068312,5.631583,-7.688581,8.539222,-3.769462,8.568763,-5.146850,-1.510204,2.483456,4.388221,-7.290213,-9.547887,9.595926,-7.913970,-1.521408,4.809099,2.007999,-6.880284,-4.446118,1.347309,-2.718564,8.596900,1.847082,0.562913,-3.361936,-4.781138,0.012688,-0.957763,1.877194,1.286636,-3.600854,4.242998,9.226409,7.192767,7.975446,-6.944412,8.515437,-3.833677,-2.148853,8.582443,-1.924272,0.989456,-7.542491,2.443234,-6.448711,0.149308,2.746066,-7.858532,-8.085145,0.550716,4.466090,6.166606,9.218930,6.742255,-0.706433,-5.729529,5.476898,-2.445169,8.236210,0.862884,-3.940845,-5.793772,1.764387,-7.328593,0.319132,3.725829,-2.927868,4.540394,-2.070061,0.294208,-3.437847,3.538614,3.655484,6.896275,2.446613,-6.795938,-0.241268,-0.765589,4.243593,3.873544,-3.504698,7.154261,-0.140043,-8.550744,-8.709785,5.242436,3.765903,-6.129866,-0.362690,4.701681,-8.792738,1.670953,-1.410877,-2.344373,-0.344823,-5.867946,-9.051430,8.121384,5.095646,6.813971,2.807370,-5.314318,4.042935,6.982424,-6.013024,-9.961873,-1.457671,0.273466,6.268725,0.886011,-7.745328,-1.493647,5.810217,8.103759,4.190591,-8.627695,4.968292,2.953793,4.561602,-1.706665,5.061922,-5.449962,-4.919857,-2.138154,7.487716,2.384619,-5.116905,-7.873441,-4.672436,-1.394164,-4.675202,-6.067433,1.454421,4.098086,1.248167,-5.520360,-5.589617,-1.892106,0.359586,-0.199178,-5.294217,-7.870745,7.679537,2.912477,-8.573760,9.057549,-8.791203,-9.555644,1.431490,8.699647,1.325487,1.614802,-1.404768,-5.218885,-5.634746,4.645715,-4.920728,8.414014,-1.063416,0.289331,-9.482874,-2.986812,0.042806,-2.119741,-2.750625,5.950296,-1.617927,8.340763,-0.739371,-5.462912,-9.575628,-2.195682,9.690019,-6.802664,-3.161764,-1.351332,-1.866649,6.890871,8.833481,-3.782823,9.683228,5.430836,-6.477656,9.455218,-7.433176,3.889037,1.295848,3.171968,-9.088773,-5.927692,-9.588375,9.106034,5.657462,-6.735351,2.578927,-3.645233,-1.611182,-2.334244,-3.401574,3.948996,5.620062,0.808843,-5.886486,3.093443,-8.428161,8.135561,-3.665758,7.968907,-2.552140,-0.820966,-0.541290,-6.032997,-5.112498,8.266580,-0.462596,1.905119,-0.904627,-8.199430,9.185631,0.682747,-3.805857,-2.535675,1.287969,-1.991687,7.445334,5.070612,-7.044755,-9.110641,-6.689513,5.982617,5.727542,-2.874429,-8.737842,-5.258326,-3.962000,9.289504,1.893221,5.510505,-6.438859,-9.064922,-3.425356,7.283335,5.364383,8.982073,-0.618493,4.003781,4.206566,5.728829,-9.010410,-1.599050,0.269693,1.675372,7.410198,0.616783,1.344004,-7.640468,-1.674578,-6.107854,6.321800,2.792727,-6.833622,4.463787,7.923810,4.990234,9.630022,-5.266787,-0.427244,6.561415,6.751130,0.576214,-2.838507,-2.251803,0.973841,-1.886151,0.815366,-4.743886,-7.811683,2.983979,-9.248879,-5.243892,-1.331369,-4.984772,-3.208010,7.084976,8.484597,-0.976724,-5.201027,-9.134009,8.072492,-8.801367,-5.644917,6.673869,4.588329,-2.350163,6.523415,0.092972,-6.749208,-2.813636,2.838928,-6.646857,-1.018572,-1.480366,9.635763,3.506735,2.411728,5.410183,-9.006124,9.744886,-4.226327,-7.715679,-4.945816,8.407495,8.131714,4.868043,9.291766,0.643810,3.429098,-2.104054,-2.002015,7.988508,-3.435792,-6.293812,2.342855,-7.032072,6.431318,-9.702097,-2.651724,-4.518010,4.863819,-5.838933,2.900991,9.599225,6.532486,-2.347917,3.062666,7.524422,-8.340868,-8.139557,9.456989,9.129523,0.184952,-7.095702,-3.839532,-9.257951,2.998003,-4.367953,-5.075532,9.212117,-3.652346,-8.155247,1.879814,9.683667,3.859152,-4.808597,-5.903784,5.451284,4.146306,5.749110,1.648927,4.447217,-5.761036,1.128957,0.100150,-7.041456,-1.113022,1.448910,-8.747889,-5.381757,6.095439,6.012080,-3.234133,5.495372,-2.648472,3.476730,-4.798722,-5.997425,8.997450,-2.752927,-0.137590,-6.470515,6.847288,8.922540,-6.800567,9.201657,-6.894994,8.038397,9.865219,-8.607929,2.956583,1.497035,-4.054764,-9.983097,-1.584538,3.340074,0.645713,5.095076,8.585070,-5.599717,-7.134463,4.837373,-1.761690,-1.982586,-0.915036,-7.440760,-9.441524,1.442274,5.591756,-9.142940,-0.722922,0.562530,4.381610,-6.790100,9.899337,-4.400611,-1.287195,-8.799254,-5.496606,5.695069,7.134890,-7.044973,8.467137,-6.260835,9.257688,-1.490149,-5.392336,4.868641,1.323803,0.105502,4.210239,-5.121337,3.388679,-7.133616,5.758605,-3.626785,5.249261,6.845654,4.266013,-2.252993,-3.456437,-7.530391,-3.055287,2.624114,-9.764118,-7.901161,-7.263493,4.350693,9.050716,-1.221883,9.553319,1.199257,6.970751,-6.453564,-3.640811,-6.880804,5.536895,-3.313827,-9.089888,8.464803,-2.300958,-3.834284,5.796374,-2.151339,-5.421492,4.058531,-2.786268,-1.566783,0.555152,-2.324225,0.836019,7.374029,2.321331,-2.335189,4.984013,-7.476914,0.576469,-6.223387,8.135121,9.996733,6.473208,8.749694,2.806032,-5.623199,-8.651004,2.909196,1.399698,3.392274,-7.302849,-2.803939,5.275985,7.989767,-7.189696,7.326131,-5.352531,7.691678,-6.974245,5.506501,-2.100008,-8.251759,-3.877358,1.827352,-1.927963,7.599611,-3.389714,-0.767627,-8.878083,7.756688,-5.240226,-3.583468,4.611213,-4.299426,1.163843,-8.502515,4.191174,-8.761994,-5.800305,6.140994,-5.314011,8.220175,9.500950,4.920991,0.657259,-3.098276,2.286948,-7.066090,-4.293604,-8.284071,3.961768,2.281056,-4.307020,-4.200563,7.442886,7.714767,-7.176905,1.933658,8.879816,-2.408978,2.017917,-0.682629,3.821620,2.160861,7.573761,5.571060,-8.370898,-2.638868,4.335780,6.042161,-9.203258,-0.111257,6.989541,-9.484352,-0.526111,7.165075,4.831739,0.996510,9.720336,-6.757967,-9.670615,1.261781,6.951971,7.959848,-6.365218,9.873797,-3.448043,-4.455160,0.953242,-5.174453,0.485395,0.242061,9.464882,7.620610,-6.980446,4.823433,-7.295862,0.085115,-3.788360,-6.358160,-0.518377,-7.085829,9.809417,-9.393916,0.818355,9.170106,8.413423,-7.147071,3.791905,9.743452,1.171989,-9.363334,6.551505,4.478529,6.053811,-0.494181,-9.526864,-3.781582,9.161908,-2.954946,6.501977,5.034327,2.495184,1.866498,-5.787072,-8.218115,1.524525,1.378937,-4.283365,7.374804,-9.304340,9.778510,-1.013710,-6.400060,0.591596,-8.259430,-1.420770,2.006142,0.224911,-6.426207,0.879148,-6.822539,-7.441814,8.613583,-6.157630,-2.140156,-2.007884,7.920776,6.634947,3.415670,5.045435,0.304029,7.258711,8.640047,0.964445,-5.615256,-3.363111,7.643505,-8.640077,4.709201,2.878800,9.629961,-7.251730,-0.171617,2.802927,-5.242052,-2.315923,-0.739525,-7.099666,-7.999191,-0.631369,-1.246754,2.392279,5.343356,-4.932896,8.640749,-2.858332,0.955712,7.422147,-8.406202,3.022943,7.528823,-3.573918,-7.596630,6.339089,-8.862564,2.814789,-1.848754,-1.142232,9.900401,9.372381,6.294201,5.730415,-4.441488,-1.927183,0.766276,3.344511,1.232624,4.866127,-9.384522,6.770033,-1.033466,4.905422,6.933828,-4.752771,-8.100916,7.974740,9.352036,-2.148363,-9.014144,-7.134021,3.417150,-5.233544,5.309876,-9.382002,6.926614,-1.067739,-3.704684,-1.159266,5.003211,-4.531683,-5.482857,9.256763,1.715916,2.819997,9.484063,8.002317,4.453147,5.913031,7.452869,-7.663965,5.420933,-2.689242,-7.589840,-8.325272,0.863827,5.712475,-0.769169,6.484580,1.847065,3.963007,-0.106860,4.264809,5.473930,-9.017958,-8.760846,6.828331,4.771834,1.510289,-6.435746,-9.934117,6.215855,-8.125217,-1.378972,8.254072,-1.095450,-0.760354,0.014351,6.957821,1.206544,-2.077590,-3.585621,6.191122,6.578017,-3.829354,-4.193862,-0.660751,-8.456670,-2.204890,-7.121418,-2.613007,-4.789515,-3.440174,-2.617869,-1.415062,7.760666,7.013763,-3.802085,-3.255801,-5.268918,-7.303628,1.845652,-7.724593,2.501851,-7.544277,-5.023664,-0.980288,-6.973626,-7.468101,-2.235616,-4.113045,0.881880,-9.920516,-6.430812,-1.949329,2.910961,-4.105241,4.156286,-4.076594,5.537879,-0.314280,-1.257713,-7.958883,1.500972,1.512078,-5.017674,-1.069117,-6.363361,5.351223,2.281441,7.676545,-7.554475,9.104101,-5.276592,-2.487965,-6.796908,1.557940,-0.262850,3.730631,-7.632933,2.250169,-1.616287,6.744547,-0.843823,-3.983136,-4.972147,-8.163718,0.751512,-6.349738,-8.362605], dtype = "float64")#candidate|8752|(1040,)|const|float64
call_8750 = relay.TupleGetItem(func_665_call(relay.reshape(const_8751.astype('uint16'), [4, 12, 13]), relay.reshape(const_8752.astype('float64'), [1040,]), ), 1)
call_8753 = relay.TupleGetItem(func_669_call(relay.reshape(const_8751.astype('uint16'), [4, 12, 13]), relay.reshape(const_8752.astype('float64'), [1040,]), ), 1)
var_8759 = relay.var("var_8759", dtype = "uint16", shape = (312, 2))#candidate|8759|(312, 2)|var|uint16
bop_8760 = relay.floor_mod(const_8751.astype('float64'), relay.reshape(var_8759.astype('float64'), relay.shape_of(const_8751))) # shape=(312, 2)
uop_8765 = relay.erf(bop_8760.astype('float64')) # shape=(312, 2)
func_4835_call = mod.get_global_var('func_4835')
func_4837_call = mutated_mod.get_global_var('func_4837')
call_8777 = relay.TupleGetItem(func_4835_call(), 0)
call_8778 = relay.TupleGetItem(func_4837_call(), 0)
func_3040_call = mod.get_global_var('func_3040')
func_3043_call = mutated_mod.get_global_var('func_3043')
const_8793 = relay.const([-2.618230,3.084400,1.504193,8.897399,0.331829,-5.585259,8.129624,-8.576601,-9.405438,-1.634472,3.719774,5.095529,9.866357,7.963862,-2.456254,9.771968,-6.868773,-3.712827,-5.348432,-1.284863,-6.805327,7.540023,-7.192096,-8.581835,-9.956324,3.705492,-0.278539,8.328855,8.590467,9.810027,5.109948,8.423800,0.662344,2.874018,1.554399,7.391373,-8.851345,-5.143884,-3.468218,9.800656,9.436381,2.717880,2.985485,0.827551,1.219764,-7.971085,6.518581,-3.547145,-8.665565,-9.676916,4.844153,7.790543,8.010531,3.709074,3.230118,-7.004778,2.433150,-1.792503,-8.084768,1.454916], dtype = "float64")#candidate|8793|(60,)|const|float64
call_8792 = func_3040_call(relay.reshape(const_8793.astype('float64'), [3, 2, 10]), relay.reshape(const_8793.astype('float64'), [3, 2, 10]), )
call_8794 = func_3040_call(relay.reshape(const_8793.astype('float64'), [3, 2, 10]), relay.reshape(const_8793.astype('float64'), [3, 2, 10]), )
output = relay.Tuple([call_8737,call_8750,const_8752,uop_8765,call_8777,call_8792,const_8793,])
output2 = relay.Tuple([call_8738,call_8753,const_8752,uop_8765,call_8778,call_8794,const_8793,])
func_8795 = relay.Function([var_8759,], output)
mod['func_8795'] = func_8795
mod = relay.transform.InferType()(mod)
mutated_mod['func_8795'] = func_8795
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8796 = relay.var("var_8796", dtype = "uint16", shape = (312, 2))#candidate|8796|(312, 2)|var|uint16
func_8795_call = mutated_mod.get_global_var('func_8795')
call_8797 = func_8795_call(var_8796)
output = call_8797
func_8798 = relay.Function([var_8796], output)
mutated_mod['func_8798'] = func_8798
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8800 = relay.var("var_8800", dtype = "float32", shape = (14, 3, 13))#candidate|8800|(14, 3, 13)|var|float32
const_8801 = relay.const([[[6.134942,-9.871508,-4.891882,0.357240,-2.199601,1.828808,6.051321,3.550535,-2.863343,-4.056271,-1.554736,1.644333,-7.460137],[-2.920649,8.531942,6.140591,-4.524019,-0.544532,-7.786060,-1.991423,-6.856143,8.590900,2.837704,7.079230,-4.938707,-3.378761],[8.894761,-7.683865,-2.480376,-8.675811,6.935616,-4.360818,5.994962,-7.444322,-5.603939,-7.187466,-3.838073,-3.867474,-5.654876]],[[-6.947100,9.774011,8.007952,-4.384992,1.823799,-8.899854,-9.426585,9.250097,7.238011,3.608652,2.781593,8.862447,-6.648069],[1.880102,5.586968,4.884195,6.350115,-6.323577,2.160770,-9.754208,1.822394,-3.294559,-5.566908,-4.534236,-6.742604,9.995750],[3.238637,5.103057,1.451568,-8.435791,-5.629426,-3.247892,-9.013621,0.277739,7.737144,-5.756274,-8.411177,-3.362421,7.686783]],[[6.345207,-7.085032,5.409588,5.744775,-1.319975,3.850638,0.312418,-7.263825,5.706541,-2.927392,-5.064807,9.490655,-3.489819],[6.122575,-1.732929,4.605349,-0.163935,3.618065,2.430316,-5.655128,7.411299,-4.543369,6.603729,-6.175079,5.980465,1.380176],[-0.550988,0.573404,9.596994,6.734714,6.002253,8.628998,-1.276026,8.312054,9.371623,8.937589,3.154016,4.987361,-1.950686]],[[-7.208119,-7.576584,6.783174,-6.750870,4.699879,8.384800,1.760516,4.267554,-0.650085,0.900302,2.963039,8.161058,4.733134],[-8.052442,-8.699052,-9.935286,-4.651599,-1.768893,3.341686,-6.697125,-8.843165,8.410986,-8.212046,-3.921159,9.238614,-9.743849],[-3.757972,4.660515,4.286825,-7.160622,9.351586,-3.420994,9.711735,8.551453,7.187586,6.583381,-7.154997,0.421899,1.978290]],[[9.741182,-3.334561,5.042590,-8.480500,-4.236196,-2.737886,4.155468,-7.179007,-2.769545,-3.778927,-4.821192,0.819031,-1.142735],[1.355425,3.042803,7.707138,3.218098,-3.605480,3.631768,5.891500,-9.887126,-2.141679,7.682133,5.734123,5.714548,-1.773582],[7.851477,0.801689,6.861549,-0.409584,-0.935597,1.820052,9.403530,-9.919629,-3.345783,-6.660276,-6.184290,-8.113375,6.308475]],[[3.790368,-8.919550,5.914944,5.676133,3.323791,9.709984,3.672277,9.426407,3.929817,3.729915,1.510059,4.615472,-3.921312],[1.452142,-6.373219,1.857076,9.125009,6.770461,3.484851,8.860036,1.226121,-3.776877,-9.780837,0.875941,-8.566408,-4.291204],[4.975407,-8.278011,0.869020,-7.701489,-1.133049,0.180455,3.896020,-2.409311,6.749373,7.550030,-6.818408,-8.801076,-4.214387]],[[-8.922648,-8.437542,-4.202846,8.159191,4.588161,-6.413130,-2.033233,2.417065,-1.254823,-2.904017,-9.990071,6.339971,-3.780322],[6.377336,-2.626581,-5.377799,3.035409,1.941274,-9.015563,-6.665218,7.896675,-0.055798,1.545735,7.747571,-3.462320,3.154985],[-9.713940,3.886788,-1.448393,3.047088,-1.322612,-9.484839,-4.951652,5.796407,-8.450165,-2.484097,0.337321,1.998352,9.140705]],[[-7.396434,-1.462051,-2.123834,-1.019468,7.181910,-9.607688,-3.126789,-6.687630,-2.114476,-1.463170,-9.407264,8.564390,6.779160],[5.571045,-8.535085,6.476952,-1.364049,-7.808373,-2.461476,-4.885356,8.374044,-6.269766,8.013146,-0.391187,0.759769,-0.099746],[2.889603,8.312702,-6.687114,3.810595,3.501225,0.050321,-6.559411,-0.622279,8.087514,-9.804627,1.205257,-4.779754,-2.370353]],[[9.919445,4.198197,9.127284,8.443587,6.035645,6.362733,-1.365935,-2.888979,-9.344584,6.274161,3.309811,-2.441529,-3.652388],[0.602992,-6.930849,6.388141,5.285432,1.909045,-3.899948,3.294236,-2.888056,-9.813786,7.667935,3.062746,-4.546744,-0.365945],[0.955441,8.874138,9.886171,-7.618479,-0.675114,6.462780,-0.895124,-1.887367,5.557752,6.014449,-4.677609,6.667207,-3.047928]],[[-4.528813,6.340855,-9.598161,0.681860,-3.475142,-9.233200,-6.985162,2.442257,1.239710,0.658846,-5.702688,7.349762,-9.180279],[6.625557,-6.544820,-5.340347,-1.541683,5.697207,-0.492200,1.800913,2.950182,5.305428,-3.755833,6.001338,2.916536,-0.961209],[-0.434766,5.244551,0.909144,-8.685489,-0.999740,-3.811208,-4.924660,9.116046,-6.861326,-6.501083,3.380831,-1.747946,-8.644423]],[[0.306539,-5.980849,2.979962,2.392789,3.447787,5.198821,-6.321812,1.745802,4.454187,7.834227,-8.229611,6.342181,4.677895],[8.126180,-6.644989,-8.880635,4.238193,6.862332,0.890014,1.403787,-7.569858,-5.930630,-9.725977,9.596424,3.384841,-4.304544],[3.219954,-5.780374,-1.856618,-6.759114,4.623600,-4.778225,6.044522,9.746307,4.107339,3.850254,-6.330450,-1.291128,3.994358]],[[-7.668547,-0.304675,1.734746,-2.527135,8.116828,8.841044,9.127234,-5.991762,1.269960,-8.216764,-7.926622,6.152215,6.319645],[7.969728,-2.422372,1.997966,1.093837,7.434101,2.751763,1.506029,9.562933,-7.762953,4.292106,-7.954454,-3.485249,-8.768029],[-0.323980,8.439158,5.946234,-3.318537,5.313096,-5.548721,7.671993,0.129438,0.423978,3.897636,0.109531,7.014729,-6.245098]],[[1.333057,-9.040016,3.146344,2.411513,-4.736320,2.692541,-9.130714,0.710719,-1.779344,3.509779,4.500177,-5.882220,3.266001],[5.136809,-2.489304,-2.456578,-0.672571,6.787962,-3.248879,-9.739011,7.624005,8.801889,0.771784,-9.784439,1.932002,9.503246],[-4.299169,-7.464846,-9.172002,4.101295,0.053474,-3.473914,-9.878980,-1.230321,6.519208,-6.156138,-2.289519,-2.121625,-4.647305]],[[2.322085,-4.320245,-2.820082,-6.265985,-1.076646,-2.339023,-1.210104,-9.616675,-5.210824,-7.129120,5.715953,7.131532,1.006062],[4.894468,3.598168,-3.023861,0.152662,-6.204033,-3.372581,-7.882512,6.862154,-1.094194,4.136075,-9.256959,3.361793,-4.978431],[-2.526602,-6.041303,1.002174,-0.870599,0.089795,-5.863752,5.449273,2.011675,6.616830,9.888983,-5.865943,-6.371534,-7.112918]]], dtype = "float32")#candidate|8801|(14, 3, 13)|const|float32
bop_8802 = relay.floor_divide(var_8800.astype('float32'), relay.reshape(const_8801.astype('float32'), relay.shape_of(var_8800))) # shape=(14, 3, 13)
func_8185_call = mod.get_global_var('func_8185')
func_8188_call = mutated_mod.get_global_var('func_8188')
const_8815 = relay.const([[-7],[3],[-7],[-10],[6],[-1],[-1],[-6],[-8],[10],[-8],[5],[-10],[-7],[-8],[-7],[2],[-1],[-5],[-6],[-5],[1],[1],[-7],[-6],[4],[3],[1],[-8],[10],[-7],[-1],[9],[8],[4],[-6],[2],[-5],[7],[-1],[-8],[10],[-2],[5],[-1],[-6],[-5],[9],[-10],[9],[2],[1],[5],[6]], dtype = "uint64")#candidate|8815|(54, 1)|const|uint64
call_8814 = relay.TupleGetItem(func_8185_call(relay.reshape(const_8815.astype('uint64'), [1, 9, 6])), 0)
call_8816 = relay.TupleGetItem(func_8188_call(relay.reshape(const_8815.astype('uint64'), [1, 9, 6])), 0)
func_8127_call = mod.get_global_var('func_8127')
func_8129_call = mutated_mod.get_global_var('func_8129')
call_8822 = relay.TupleGetItem(func_8127_call(), 0)
call_8823 = relay.TupleGetItem(func_8129_call(), 0)
const_8838 = relay.const([[[-6.884139,-1.532622,-5.456074,-8.708105,-7.256673,-0.859964,1.851260,9.163076,2.378169,-6.359650,-9.436093,6.339688,-6.478591],[-0.695160,-8.669311,4.730729,8.291784,-5.853078,-2.241152,-5.323574,-5.017086,-0.411652,9.844085,-8.387932,-5.428345,-1.364362],[2.440077,8.449824,7.501552,9.570964,6.953061,-6.923236,-2.841800,0.776722,-4.282640,4.202121,-5.639123,-5.670383,8.103312]],[[-0.277795,3.434238,1.075121,6.451305,-4.978869,-8.488977,-3.124905,-6.761485,-9.638476,1.415575,1.756768,-6.638658,5.278525],[-9.243418,-1.565804,-1.047185,5.308086,3.098610,-8.045655,-4.124013,2.416682,8.821157,-7.246563,-8.817572,-5.870862,-6.969159],[0.592498,4.183026,5.896618,-5.471385,0.521127,7.523904,-5.556313,3.687197,7.176557,-7.503075,2.323114,-6.201659,3.179268]],[[-1.278545,0.743002,-8.564467,3.092953,6.993125,9.812589,-9.270670,-3.206364,-2.670840,-5.531818,3.311275,3.990907,-0.440581],[9.506599,-2.456670,-9.569186,9.196234,-9.742939,-7.552955,5.687278,-3.612818,-7.704986,6.244832,-8.835406,0.619608,-0.520048],[-6.903254,-1.151877,-4.609671,-0.348679,2.347143,1.833646,-6.756102,-6.526517,-4.542634,-1.021464,-8.864768,5.372543,3.827422]],[[6.158260,4.639127,3.951305,7.370069,-2.219609,-0.759726,2.291718,8.717451,-3.799493,-0.954656,1.171571,-7.704340,7.538164],[-8.356793,-3.540774,7.210282,-3.528470,9.199133,-2.276266,-9.673880,-0.725275,2.064682,-8.286671,9.675216,-7.608975,8.986598],[-2.883705,6.421294,-3.253265,-2.519303,1.792149,4.954054,-6.525477,-8.639453,6.861000,-3.755999,5.612765,5.219845,-1.414698]],[[-2.834137,-0.656437,-8.061866,8.241087,9.648136,2.000877,-3.786154,9.889582,4.193498,0.898409,-3.642037,-9.683961,-2.566088],[1.741114,6.723800,-0.125562,-0.789155,0.967188,6.656649,1.839508,-9.959730,3.498456,1.193139,-9.591540,-2.502524,-8.114220],[4.549089,5.904750,-3.090870,2.900053,1.061995,1.278510,5.510909,-8.481715,5.738305,6.556792,0.182626,4.581843,5.183175]],[[7.919248,2.026858,-9.256660,-3.879996,-8.678288,-0.208317,-0.044306,-4.837545,-9.875818,-2.145352,-1.402945,-5.588570,2.359044],[-6.754623,-4.781932,7.986420,-3.672332,-5.008894,1.267430,-2.286518,4.884774,6.472074,-4.234007,-2.885650,9.873993,-8.739686],[-8.677299,8.111223,-6.717430,-5.546396,2.319828,-9.856472,-4.835094,2.967885,6.062933,-6.224805,-1.157569,-8.507181,1.140533]],[[8.482796,6.971305,-4.826992,-9.726074,9.859328,-7.163898,-0.530183,4.020838,0.760363,8.808974,1.717109,-4.715343,4.000442],[-3.146510,-3.047454,-9.297530,-2.631753,7.101261,-3.819475,8.195489,-8.043025,7.556975,7.431618,3.206177,4.791385,1.503741],[7.499444,-9.278104,4.566504,-0.023300,-7.013836,9.568651,-1.406903,3.281536,8.496171,-3.928336,-1.720647,-6.227235,8.131302]],[[-4.790408,-7.685979,5.594881,-7.009204,-3.752853,-3.920539,2.204120,-1.809374,-9.911059,3.384977,3.990067,-3.691288,-3.893651],[8.038053,-0.641583,-0.683393,5.025810,5.850198,-6.691916,-7.838219,5.132524,3.850484,3.514776,5.013787,-3.395186,-2.742636],[3.633014,8.516592,0.705011,-3.555515,7.525552,9.963595,9.250173,-3.446460,-3.785552,0.336914,5.587794,-0.776753,-1.843036]],[[-0.188628,-0.028239,-4.942566,5.216874,4.187319,-3.041965,7.109858,-2.416918,0.914024,4.733013,7.088242,-1.039540,4.199379],[2.134473,0.147125,4.433392,-4.102711,-6.644260,-1.258915,-0.987065,-0.192997,1.329562,8.232466,-7.387110,-3.669800,-5.031946],[0.945007,-0.590015,-5.949623,-9.993507,1.395675,-8.171463,6.056231,-6.326643,-8.386353,3.540621,7.466768,-7.597700,-0.753284]],[[1.944113,-3.271929,-5.218989,9.978644,-3.386937,-6.116633,4.387647,9.969911,0.223988,-5.492246,-3.419923,4.905647,4.421462],[-9.047902,5.844215,5.714788,6.992582,-2.967567,6.870565,-1.410180,6.236188,7.717873,-8.183997,-0.241216,4.119544,3.849022],[-4.854361,-9.847972,-2.443414,9.795272,0.330856,-7.938049,9.844444,8.499443,-8.852345,-8.636998,-3.498762,-7.883114,-7.941312]],[[8.291953,6.738465,2.178301,7.852951,-6.009898,2.893430,2.420782,-4.622186,9.850941,-3.694187,-9.807379,4.173621,-2.221683],[-4.731480,-5.467402,-6.405912,8.138873,4.108758,4.745544,-3.481810,-5.707701,7.705281,-7.518135,2.799423,0.779031,-8.205054],[8.176345,0.460041,-4.845227,-9.251985,-1.602943,-3.572231,9.220008,3.504279,-6.935141,-5.284142,4.879934,-7.276531,6.385634]],[[8.731072,5.995703,-4.336371,8.599693,-1.178380,-0.682057,4.498795,9.766567,-9.273055,9.364258,0.479422,8.082125,-0.886605],[-2.903113,-2.305699,-5.591732,-7.760783,-0.931580,-1.800164,-6.283680,9.217399,-7.104920,-0.412624,-0.553059,-8.507065,-4.311506],[3.821221,8.267631,-3.838912,-0.976752,5.476573,-1.881193,-8.308769,-6.115581,9.296702,7.103359,0.615290,4.482829,-7.019344]],[[-1.724986,7.721562,-7.649108,-5.211882,-2.933862,9.743600,-7.767459,5.607300,6.006220,0.432184,1.477576,-6.838264,5.894856],[-7.788188,0.066253,-7.911249,7.689104,-6.804354,-5.473089,4.676514,3.807004,9.145673,7.552040,9.995630,-8.197585,-2.425317],[1.285241,-8.278207,0.300817,5.524022,8.040431,-7.960838,7.096446,5.179613,-6.659611,-6.475935,8.732634,0.230597,-7.697002]],[[0.791536,4.449526,-1.911459,5.115252,2.054441,6.905003,0.982662,-6.926822,7.295593,4.276871,0.183014,8.405348,2.990457],[9.876939,7.651085,5.590738,-3.876062,8.151297,1.016247,6.630294,3.317224,1.441732,-3.216742,-4.319227,8.930336,-8.812699],[9.027281,-9.689003,-3.011956,7.292138,-9.129412,8.706794,8.088724,7.524750,3.695000,7.493633,-2.756218,1.644909,-3.842521]]], dtype = "float32")#candidate|8838|(14, 3, 13)|const|float32
bop_8839 = relay.greater_equal(const_8801.astype('bool'), relay.reshape(const_8838.astype('bool'), relay.shape_of(const_8801))) # shape=(14, 3, 13)
output = relay.Tuple([bop_8802,call_8814,const_8815,call_8822,bop_8839,])
output2 = relay.Tuple([bop_8802,call_8816,const_8815,call_8823,bop_8839,])
func_8843 = relay.Function([var_8800,], output)
mod['func_8843'] = func_8843
mod = relay.transform.InferType()(mod)
var_8844 = relay.var("var_8844", dtype = "float32", shape = (14, 3, 13))#candidate|8844|(14, 3, 13)|var|float32
output = func_8843(var_8844)
func_8845 = relay.Function([var_8844], output)
mutated_mod['func_8845'] = func_8845
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8861 = relay.var("var_8861", dtype = "float32", shape = (8, 8, 12))#candidate|8861|(8, 8, 12)|var|float32
uop_8862 = relay.asinh(var_8861.astype('float32')) # shape=(8, 8, 12)
func_4404_call = mod.get_global_var('func_4404')
func_4406_call = mutated_mod.get_global_var('func_4406')
call_8884 = func_4404_call()
call_8885 = func_4404_call()
var_8887 = relay.var("var_8887", dtype = "float32", shape = (8, 8, 12))#candidate|8887|(8, 8, 12)|var|float32
bop_8888 = relay.left_shift(uop_8862.astype('uint8'), relay.reshape(var_8887.astype('uint8'), relay.shape_of(uop_8862))) # shape=(8, 8, 12)
output = relay.Tuple([call_8884,bop_8888,])
output2 = relay.Tuple([call_8885,bop_8888,])
func_8897 = relay.Function([var_8861,var_8887,], output)
mod['func_8897'] = func_8897
mod = relay.transform.InferType()(mod)
mutated_mod['func_8897'] = func_8897
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8897_call = mutated_mod.get_global_var('func_8897')
var_8899 = relay.var("var_8899", dtype = "float32", shape = (8, 8, 12))#candidate|8899|(8, 8, 12)|var|float32
var_8900 = relay.var("var_8900", dtype = "float32", shape = (8, 8, 12))#candidate|8900|(8, 8, 12)|var|float32
call_8898 = func_8897_call(var_8899,var_8900,)
output = call_8898
func_8901 = relay.Function([var_8899,var_8900,], output)
mutated_mod['func_8901'] = func_8901
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9014 = relay.var("var_9014", dtype = "bool", shape = (4, 11, 6))#candidate|9014|(4, 11, 6)|var|bool
var_9015 = relay.var("var_9015", dtype = "bool", shape = (4, 11, 6))#candidate|9015|(4, 11, 6)|var|bool
bop_9016 = relay.logical_or(var_9014.astype('bool'), relay.reshape(var_9015.astype('bool'), relay.shape_of(var_9014))) # shape=(4, 11, 6)
bop_9027 = relay.greater_equal(bop_9016.astype('bool'), relay.reshape(var_9015.astype('bool'), relay.shape_of(bop_9016))) # shape=(4, 11, 6)
func_7676_call = mod.get_global_var('func_7676')
func_7677_call = mutated_mod.get_global_var('func_7677')
call_9036 = relay.TupleGetItem(func_7676_call(), 1)
call_9037 = relay.TupleGetItem(func_7677_call(), 1)
func_844_call = mod.get_global_var('func_844')
func_848_call = mutated_mod.get_global_var('func_848')
const_9057 = relay.const([-0.976585,-3.003985,-4.556274,8.256742,-2.331519,9.558733,-1.189698,2.477918,5.533654,-3.179623,0.602237,7.572616,-1.072899,1.428341,0.296071,-0.810441,3.817870,6.764229,6.360909,3.317030,3.281289,6.525800,1.987461,8.942713,-4.484166,-7.282465,8.438988,-5.340348,1.599220,4.497311,-4.387478,-7.607891,4.580509,5.956713,-6.197792,-3.696520,-7.052983,2.090379,-8.614899,-4.677474,-8.197906,-2.120233,0.482560,0.548601,9.063084,0.242225,4.880339,4.259930,9.036821,4.379741,6.766118,1.551192,8.777048,3.292969,3.246645,4.258490,6.204618,-5.976746,-5.212845,3.163363,-6.040722,0.683015,0.574674,-6.090380,4.790285,-8.189581,5.351816,-1.603319,1.089158,-1.075151,-5.396636,-8.192063,-4.275000,-9.063634,4.882744,-8.781467,-2.805480,5.510831,-7.545025,7.475266,1.961350,-2.951533,5.022308,-2.424218,3.176443,-6.393396,-0.700024,1.355400,9.742605,5.113440,0.127547,-2.987602,5.314946,5.270540,-5.354564,5.689047,9.904900,-9.625369,7.460315,0.225658,-5.007001,-2.471402,-0.503771,2.482297,0.983128,-2.319755,-8.517010,-6.323901,-5.210674,6.394258,-2.880636,3.753527,-6.048916,6.257204,-1.173534,-6.223343,-3.402255,3.823326,-6.988917,-5.724766,4.206626,0.988424,6.464155,8.035541,9.754984,-9.018921,4.411540,7.825554,-3.677597,5.439770,3.584214,7.545639,-2.671236,4.557338,9.054210,-1.827210,-9.844309,-8.087121,-2.456454,-6.369383,-5.782472,0.914525,-1.436937,0.566997,4.498299,7.580033,8.030825,-6.440666,7.464981,-8.731525,7.609089,4.981829,-0.320223,-3.410724,3.088768,7.648175,3.474019,2.938005,3.675189,-0.762555,-7.352971,-1.340528,-9.967784,8.511721,-6.472871,-9.858596,4.935201,5.095892,2.000505,-1.357613,-5.862268,-4.696358,-6.624497,7.361734,4.397026,2.935260,6.123891,9.474443,-9.047317,6.258140,-5.485235,1.237145,0.059732,-5.707533,-6.982945,8.418467,-3.504261,-6.088419,-3.593096,-2.038851,-4.355841,6.784879,2.529851,1.355988,8.252516,-4.567700,6.193214,5.455769,5.679407,9.720631,-8.797773,-3.179396,9.111557,-3.619180,2.222271,0.949480,-9.544075,6.695039,3.454315,7.544865,-0.513673,-1.504978,3.891326,-1.289204,7.819792,-7.568249,5.592942,-1.539421,-7.536310,-8.872361,-2.668796,8.551331,-4.081609,-7.939596,4.746407,-4.697008,-1.739245,4.457596,4.174228,-8.468903,-0.307944,-0.308780,6.556317,-2.413890,3.590755,2.294548,-8.070795,-5.077413,-4.437743,-3.553236,6.213554,7.778093,6.241627,3.385166,-3.774998,-9.410802,2.857672,-5.665662,9.599293,-4.395405,7.974743,-3.348974,-1.895953,-8.943512,-2.329972,-8.855890,-3.194537,0.245149,6.133976,-3.746828,-4.845688,-5.529164,7.296748,-5.859699,4.301593,-5.920932,2.367525,-1.122114,5.027526,-9.792633,4.330941,0.588892,-0.315872,2.104519,-3.657264,5.939688,-7.465876,-8.511664,2.254181,5.821473,4.933621,1.928601,-6.209499,-9.264253,1.929944,5.597030,3.265604,-4.217525,4.894432,0.023336,6.022037,-9.757665,-3.707654,4.868909,-9.139428,-5.694032,-8.182306,-2.151246,8.109689,0.118362,9.512181,2.968696,8.591409,-5.455976,-0.434771,-1.269556,-8.958502,0.307263,9.190703,-9.056340,8.328336,2.190976,3.601443,0.577338,-8.915922], dtype = "float64")#candidate|9057|(315,)|const|float64
const_9058 = relay.const([9.686227,-2.986380,-1.257423,8.219373,-9.936153,8.828901,3.053101,-8.110194,-6.471289,-1.445166,-5.562822,6.461216,4.881678,-6.573910,7.467424,1.440462,-6.790101,-4.864300,-3.738593,-1.536399,-3.527965,8.234945,-7.787423,2.717660,8.115956,9.998678,8.022835,2.479326,-0.268621,0.148863,-7.024258,-3.319688,-0.567185,3.833294,4.174530,0.724947,9.899005,5.759665,2.768844,0.869947,-6.590015,-4.898038,6.438175,-8.151831,9.807348,-8.083434,9.144222,-7.381725,7.561058,-5.751062,5.782366,-9.201992,-8.079414,6.222304,3.411386,2.780103,2.409434,8.020355,5.329582,-8.522867,-0.723244,-1.396752,-4.410625,4.218987,-3.061827,-5.398093,-3.999107,5.404147,-3.888317,-0.426996,4.203632,2.118193,1.452878,6.725259,1.869567,0.259917,-0.210417,8.775486,-6.144114,6.862698,-6.713044,3.275906,-4.251640,-9.628696,5.761739,-9.370550,-0.780043,8.465057,3.963389,-6.461024,-6.073833,-6.634897,-1.427833,1.369527,-7.816321,0.312167,-4.823599,0.437479,4.447866,2.441804,-8.704226,7.005742,-6.937606,-8.327457,-3.228624,-1.262150,-3.628473,6.814453,-6.119828,-5.069379,0.147903,7.243869,-1.472059,8.065400,-3.679625,-3.486167,-8.541408,7.986763,-1.814133,-5.294285,2.211571,7.927097,9.150519,-8.363781,-4.537599,9.884474,-1.596871,6.137710,4.303669,3.207836,-7.451012,2.794505,2.557458,2.692684,-6.410185,-9.628586,-9.374462,-5.231599,5.104701,7.764883,7.469650,5.262918,8.618895,-3.960507,2.081278,9.545688,8.536697,0.973926,0.335799,-4.913650,-8.630028,9.382880,-9.258020,5.778000,-8.965786,2.229648,5.013001,-2.126467,-2.882639,7.431092,-7.385206,1.371810,3.746825,-9.824462,9.941940,7.066769,-2.506985,-6.374348,-6.548546,-4.536146,-0.056052,-0.263200,-2.876127,-8.223053,6.166523,7.901484,-1.688684,9.958635,6.180386,9.731608], dtype = "float32")#candidate|9058|(180,)|const|float32
call_9056 = relay.TupleGetItem(func_844_call(relay.reshape(const_9057.astype('float64'), [15, 7, 3]), relay.reshape(const_9058.astype('float32'), [1, 180]), ), 4)
call_9059 = relay.TupleGetItem(func_848_call(relay.reshape(const_9057.astype('float64'), [15, 7, 3]), relay.reshape(const_9058.astype('float32'), [1, 180]), ), 4)
func_8491_call = mod.get_global_var('func_8491')
func_8493_call = mutated_mod.get_global_var('func_8493')
call_9061 = relay.TupleGetItem(func_8491_call(relay.reshape(const_9058.astype('float32'), [180,])), 1)
call_9062 = relay.TupleGetItem(func_8493_call(relay.reshape(const_9058.astype('float32'), [180,])), 1)
uop_9095 = relay.exp(bop_9016.astype('float64')) # shape=(4, 11, 6)
output = relay.Tuple([bop_9027,call_9036,call_9056,const_9057,const_9058,call_9061,uop_9095,])
output2 = relay.Tuple([bop_9027,call_9037,call_9059,const_9057,const_9058,call_9062,uop_9095,])
func_9102 = relay.Function([var_9014,var_9015,], output)
mod['func_9102'] = func_9102
mod = relay.transform.InferType()(mod)
mutated_mod['func_9102'] = func_9102
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9102_call = mutated_mod.get_global_var('func_9102')
var_9104 = relay.var("var_9104", dtype = "bool", shape = (4, 11, 6))#candidate|9104|(4, 11, 6)|var|bool
var_9105 = relay.var("var_9105", dtype = "bool", shape = (4, 11, 6))#candidate|9105|(4, 11, 6)|var|bool
call_9103 = func_9102_call(var_9104,var_9105,)
output = call_9103
func_9106 = relay.Function([var_9104,var_9105,], output)
mutated_mod['func_9106'] = func_9106
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7576_call = mod.get_global_var('func_7576')
func_7578_call = mutated_mod.get_global_var('func_7578')
call_9108 = func_7576_call()
call_9109 = func_7576_call()
func_4285_call = mod.get_global_var('func_4285')
func_4290_call = mutated_mod.get_global_var('func_4290')
var_9113 = relay.var("var_9113", dtype = "int64", shape = (36,))#candidate|9113|(36,)|var|int64
var_9114 = relay.var("var_9114", dtype = "uint16", shape = (8, 78))#candidate|9114|(8, 78)|var|uint16
const_9115 = relay.const([-8.249889,-8.356295,9.696172,5.988570,8.609534,-3.531786,9.549572,-1.592271,-2.431069,-8.860806,-9.521235,-6.978143,-6.005743,-8.010828,-0.410780,-0.019563,-1.493266,-3.684897,-5.286659,-7.922377,7.356736,6.061844,4.013228,9.167743,-4.937269,8.422070,-7.125840,0.336099,5.573451,-7.386659,8.450953,-9.753769,9.425652], dtype = "float64")#candidate|9115|(33,)|const|float64
call_9112 = relay.TupleGetItem(func_4285_call(relay.reshape(var_9113.astype('int64'), [3, 3, 4]), relay.reshape(var_9114.astype('uint16'), [624,]), relay.reshape(const_9115.astype('float64'), [33,]), ), 3)
call_9116 = relay.TupleGetItem(func_4290_call(relay.reshape(var_9113.astype('int64'), [3, 3, 4]), relay.reshape(var_9114.astype('uint16'), [624,]), relay.reshape(const_9115.astype('float64'), [33,]), ), 3)
uop_9150 = relay.log10(var_9113.astype('float64')) # shape=(36,)
func_7834_call = mod.get_global_var('func_7834')
func_7837_call = mutated_mod.get_global_var('func_7837')
const_9154 = relay.const([9.896756,-9.133573,1.228718,-9.284738,9.725031,3.832966,-5.861332,-6.961647,-8.831777,5.667771,-6.421988,-7.911356,8.328664,-7.613968,-2.740015,-8.347107,4.591222,-1.764069,-6.876525,7.395763,-2.042249,-2.211207,-5.693168,6.226364,1.069509,-4.372083,9.724722,-2.828151,6.902177,0.631923,-7.596676,6.585953,5.606880,-7.618499,-1.067179,6.893847,-6.217999,7.518133,-4.169903,-9.518217,-0.467448,8.159133,2.078842,-8.101898,-0.761966,-9.720966,5.661774,7.521869,7.716219,0.688263,1.165565,-3.064096,-5.480870,-9.887483,2.486721,-9.493625,-8.694487,6.913004,8.142230,-0.024261,-5.806889,-0.002694,-1.649740,-0.470609,-7.582318,-8.603685,-5.686584,8.298996,-6.026229,-9.492154,-7.209962,5.292035,-7.785843,0.261518,7.687657,-4.274858,-0.940584,1.393607,-8.135245,4.259931,5.891727,-3.603981,-1.341461,-4.400909,8.034750,-8.585916,2.907570,-8.492707,0.473433,4.402976,7.087320,-1.579218,1.045223,5.018521,3.439245,-3.840768,-9.684003,-6.931555,-5.251984,1.066434,1.452073,-1.565357,-2.760109,7.907129,-6.406393,-3.321186,-0.638435,0.844228,-6.875978,4.002095,2.769844,3.902725,-0.313681,0.970885,-5.823195,-0.784277,-1.440152,9.013117,-3.678170,-1.498546,9.951476,-4.129854,2.065360,9.350614,-7.599941,4.909422,-2.419456,1.694470,8.184086,-7.386217,-9.014148,6.302213,9.257315,3.540571,6.745719,-0.696967,-1.968535,-5.609441,-4.097327,5.069385,-4.748724,7.742425,3.678324,2.445239,4.692858,2.472390,5.830319,-8.669768,6.134156,-4.911294,-1.393826,0.136178,4.067896,-7.056810,-3.408211,3.279114,0.093289,0.436059,5.433728,1.077035,-3.625158,-3.274061,1.130023,-0.578363,-4.434941,-5.590222,8.324567,0.854593,2.265855], dtype = "float32")#candidate|9154|(169,)|const|float32
call_9153 = func_7834_call(relay.reshape(const_9154.astype('float32'), [13, 1, 13]))
call_9155 = func_7834_call(relay.reshape(const_9154.astype('float32'), [13, 1, 13]))
output = relay.Tuple([call_9108,call_9112,var_9114,const_9115,uop_9150,call_9153,const_9154,])
output2 = relay.Tuple([call_9109,call_9116,var_9114,const_9115,uop_9150,call_9155,const_9154,])
func_9176 = relay.Function([var_9113,var_9114,], output)
mod['func_9176'] = func_9176
mod = relay.transform.InferType()(mod)
var_9177 = relay.var("var_9177", dtype = "int64", shape = (36,))#candidate|9177|(36,)|var|int64
var_9178 = relay.var("var_9178", dtype = "uint16", shape = (8, 78))#candidate|9178|(8, 78)|var|uint16
output = func_9176(var_9177,var_9178,)
func_9179 = relay.Function([var_9177,var_9178,], output)
mutated_mod['func_9179'] = func_9179
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7071_call = mod.get_global_var('func_7071')
func_7073_call = mutated_mod.get_global_var('func_7073')
call_9230 = relay.TupleGetItem(func_7071_call(), 0)
call_9231 = relay.TupleGetItem(func_7073_call(), 0)
func_6594_call = mod.get_global_var('func_6594')
func_6598_call = mutated_mod.get_global_var('func_6598')
const_9235 = relay.const([6.065355,-6.852607,6.555418,-2.278678,5.571408,-8.197194,9.242716,7.673337,7.330860,-7.596740,6.596513,-0.770207,-2.991047,8.375683,5.654734,0.702098,-3.131605,0.116692,-4.627357,-1.698408,-6.490736,-6.541454,-7.023723,5.450152,-6.325832,-9.213100,6.738240,-5.519887,-7.376773,9.135051,-6.479562,-6.388840,-0.114015,-1.406764,-8.471494,-4.418703,5.056331,-6.453052,-7.855128,-4.883966,0.131448,5.709653,4.921500,0.253361,6.482244,3.454767,8.796465,-1.530456,-2.586832,7.649275,4.018160,4.449251,-6.094038,-5.153098,-3.254603,4.936698,-0.864403,-8.455367,-2.015451,0.655461,-5.750881,1.094890,0.590449,6.529095,8.681125,-8.022723,4.616158,5.508286,5.779811,-1.337683,-6.000770,6.454788,-0.501312,8.263080,0.872017,2.648681,7.966564,-7.720623,-8.350448,-9.619673,-2.122915,6.755901,6.117593,2.379148,-7.446772,-8.656348,-1.643593,4.547211,0.486235,7.786886,-0.089811,-6.823572,-5.921040,-6.761572,-0.360840,-3.110070,6.923862,-4.571382,-5.407509,3.776114,-7.693832,-2.687787,7.066686,8.144580,-4.978988,-8.279770,7.272559,-1.009288,0.497130,3.390055,-3.588262,-2.559681,7.047535,-1.386413,-5.659556,-2.240743,1.278472,5.393182,9.413500,7.789959,-9.595053,-8.181792,-9.013627,9.215960,3.716236,5.199594,-3.669064,4.674533,4.121681,3.594668,4.229093,-3.852000,-9.595958,8.366892,-4.954738,4.870858,-4.177615,1.209752,8.243542,-3.879948,6.643163,-7.615418,2.415572,8.002847,0.106190,5.354097,-2.891414,4.333456,1.089403,-8.491109,3.290833,-8.693808,5.087315,-0.952069,-2.209329,2.909468,-5.587141,5.298368,7.439023,-9.291605,-0.087052,7.702155,6.713563,3.539103,-5.880374,1.788899,-3.198913,2.422436,6.256713,-7.015252,5.479122,0.043987,0.164157,0.407020,0.588721,0.121853,1.421754,-0.332506,1.757438,-1.908499,-2.650010,1.964630,7.364813,-1.801582,-5.850465,3.278207,5.842716,6.571729,5.662070,0.235186,1.328425,-4.734583,-6.839536,3.830212,9.776202,6.199215,4.498758,-3.674390,1.957734,1.880662,5.425299,1.703508,1.113865,0.463797,-4.533805,7.214631,7.135257,-2.133253,4.596183,3.696467,9.913826,-0.122587,7.879538,-1.240478,6.704673,-9.439972,-8.586932,7.655561,-9.695708,-3.549953,-4.103314,-9.724176,-0.334756,9.652853,9.130953,-4.660859,3.992198,3.535925,8.461490,9.673191,-4.892841,3.996219,-1.519742,-7.244597,6.485889,8.129387,1.614291,0.132131,-5.624515,7.740668,0.857490,9.500442,-5.655220,1.313430,-6.643804,-3.866766,-4.208251,2.617353,4.748176,0.678486,-3.507506,-0.703578,2.941519,9.849737,-0.474588,0.133916,-7.844485,-7.552159,0.999667,-8.689814,-5.409433,-4.306924,-8.243327,4.647579,-6.212865,-0.706593,1.149546,-6.832721,-5.165393,2.055360,-2.116051,-3.782290,5.426505,0.712292,-8.639235,-1.264560,-3.174674,3.790195,-5.148408,-8.462912,-3.816740,8.038371,4.582403,-9.094670,-8.581417,-6.965856,-0.198501,8.680874,9.487348,-0.454685,4.095376,3.205517,-4.115733,-1.874702,7.387258,5.050239,-3.024878,-8.602233,-2.839179,7.348067,-6.232837,6.181493,6.933634,-4.302953,7.774148,-3.340412,9.305090,-7.888504,0.930501,-3.417321,-6.568306,-5.979587,-2.730289,-3.570897,0.435430,9.400084,-6.326549,-4.328001,-0.576664,-7.977012,9.537923,-9.220407,-7.805575,-0.633914,7.200592,1.626116,-8.335502,-0.616441,-1.306622,0.474014,3.316302,3.829278,8.730023,5.837668,-0.306012,5.869893,-5.524533,-4.016941,7.150756,-7.649864,3.557390,-1.008550,2.861994,-3.556047,2.217220,2.381410,4.986483,-4.692736,-8.162517,-1.234340,-1.174002,4.885267,6.456536,2.947470,-9.830208,8.489601,3.312094,-3.542737,7.688434,-3.706275,-7.183352,7.157379,-9.391646,4.721196,8.087779,0.008830,5.111628,-1.381235,-7.526126,6.427900,-0.636247,-0.954259,-8.967321,-4.136398,-5.347539,1.885597,1.678352,-2.982620,-3.511629,-9.871330,8.217218,6.612960,-2.798029,2.273370,-5.617550,-2.541505,5.548317,-7.907441,8.433900,0.702602,-6.620123,-2.620731,5.863209,3.521847,-6.101161,0.568630,-1.450603,2.989595,4.541026,9.554148,7.126996,-9.950129,7.744470,7.550185,8.603217,-7.277587,3.998374,5.142938,0.090601,-8.315939,0.849904,5.524894,6.218474,-4.463631,0.219200,-7.556107,7.540800,6.295271,2.337018,0.924354,-6.805804,-5.066391,6.328646,-7.162123,0.075649,-8.288841,1.900419,-8.436769,-3.404775,1.703382,-7.655910,1.761821,-9.115097,-7.494237,3.103976,-9.615207,3.255413,4.040028,3.965491,6.204461,-3.241254,2.843832,5.120647,-8.764495,-0.085284,3.826814,1.847283,3.805777,-2.737452,-6.614510,2.715364,4.167573,0.168314,4.008360,-7.226527,4.385552,9.099677,-1.617158,-9.892880,-5.820351,-0.555017,-1.055067,-5.856066,3.053343,1.695890,-3.276265,8.506007,-6.687493,-8.484461,1.774199,-4.105189,-5.238552,1.937517,1.533239,7.239531,-5.459677,9.902748,-1.250053,-7.408950,-7.906924,7.064914,6.828627,-9.337009,2.999409,0.253280,-6.766599,-8.127537,5.404495,1.047295,7.623724,0.480174,6.984380,-6.033280,-6.952531,2.677047,5.863003,-7.087874,2.735645,-4.040392,8.282817,2.084067,1.690761,-0.748977,3.911866,7.494416,5.431470,4.407375,-2.849065,-0.962410,-8.385614,0.441627,-4.892525,-3.034131,2.112207,-4.466782,6.122609,-4.802394,7.299001,2.890458,-9.348274,-6.400306,5.430846,-0.016390,7.323309,0.983926,1.932764,9.991782,-7.637824,4.333727,-3.927073,-7.242912,-9.053925,2.176001,-2.385196,-1.515568,2.091154,-5.137228,-2.141450,-0.795519,7.159233,-5.150087,8.502774,-9.770643,3.463182,6.288858,4.500908,6.885259,-7.326347,-6.552135,-9.192858,0.047121,6.357712,-0.993383,0.136311,8.105425,-5.742328,9.714919,-0.377332,8.524483,9.073183,0.906200,8.580804,-2.563234,9.421875,-2.960198,-2.138985,-1.306209,6.978431,8.086644,0.436371,8.380802,-3.081706,3.894343,-9.916802,3.593912,2.807969,-8.145103,7.558732,-1.429790,1.298423,-2.832821,0.366488,2.628983,-9.708227,2.387646,-7.647497,0.824159,2.582154,6.605081,-6.844367,4.901344,2.874750,-5.277756,3.067684,-8.141112,4.976294,-6.159744,2.473129,5.154338,-3.055749,6.411843,1.860644,-5.598018,-0.835638,-4.339108,-9.032222,-5.532132,4.534279,-3.676718,-5.400402,-6.022319,-2.959377,-1.743114,-5.108541,0.691293,-1.059261,6.381395,5.642441,-5.854867,2.770586,-2.458346,-3.159225,-9.108001,2.541216,-8.099379,8.995819,3.973150,7.507198,4.660883,4.860489,3.856223,0.843050,0.052385,-6.287578,-3.600528,-2.638220,1.321431,-3.765477,5.889820,-1.661901,6.682175,-6.181445,7.582562,-4.942681,2.412330,9.061274,0.353734,-5.798667,-3.246937,-7.273388,-0.689831,8.913734,6.238989,1.958448,-4.778349,7.950525,5.265515,-6.197583,4.032294,8.402562,6.451054,3.079406,-9.215139,2.589381,-8.347285,7.102038,2.714530,-4.220267,-6.728042,5.973305,-8.351365,-6.886250,-5.515443,-8.249899,9.368893,-8.599214,7.755412,4.663669,3.383370,-0.790274,-6.337672,7.063993,-7.432746,8.389218,1.386755,6.161481,5.337250,-7.381344,4.307996,6.144292,-2.808162,8.478463,-0.217396,3.528173,1.333955,2.969387,-1.576587,7.143380,7.522943,7.072423,8.963504,-3.477861,6.182665,-2.467541,2.342813,8.915701,-6.101120,4.296405,-0.489508,-4.055522,-9.629469,8.271270,-8.429996,-5.308652,5.915035,3.784526,-5.214959,9.664888,-1.005741,-3.455684,-3.264646,4.072205,-7.626439,6.652816,-4.845308,8.709063,4.027499,5.324820,0.427155,2.611417,8.888820,-1.619860,-8.547827,3.905402,6.589312,1.137946,-6.312210,-0.946097,4.584831,3.875972,-7.322868,4.363569,1.119901,7.385240,-8.945587,-9.451804,0.338914,5.299119,-6.340315,-4.422290,4.931595,2.540165,7.347369,-1.458306,2.077804,-4.669556,-1.713295,-0.174099,-4.855805,0.078853,-4.424880,-3.866064,-8.944207,-5.550390,5.324179,-7.558134,-5.487914,-2.921868,-1.468285,-0.147054,-5.432336,0.057349,-2.746980,-5.839865,9.933241,0.128187,1.504293,-3.425633,-4.804666,2.684220,0.550626,-6.793942,1.316693,8.389699,9.709999,-7.530246,-3.135691,5.043166,1.676505,3.235270,0.891286,-1.637187,0.606117,-3.044667,3.590233,1.105763,2.917334,-1.163385,-6.745300,-0.988350,-8.079697,9.138001,-4.203836,2.884416,-5.973964,3.964219,-2.154724,0.217218,-0.298683,0.445371,2.604448,-5.091913,-5.581324,2.287645,0.821130,-4.245625,-1.099302,-4.301368,-5.405562,-4.302025,9.148487,-7.239316,-4.793706,0.674273,6.084479,-6.775184,8.682924,-7.032748,-9.656013,-7.700118,3.206686,9.950766,-6.852023,7.738565,6.294742,5.942987,3.164990,-8.476184,7.555099,-0.389365,-9.825103,7.632492,3.904111,2.322303,-0.048778,4.574525,0.894774,9.948348,6.801951,-8.649742,1.183460,3.050505,-0.552865,-4.194344,9.554035,-4.098038,7.074400,7.628044,8.951766,-5.049189,-9.369804,-0.411131,-3.350637,0.328825,-2.420063,2.206098,1.358056,-8.700861,-3.078724,-9.317645,7.680838,-5.955099,-6.955424,0.777968,-9.716165,7.401164,-5.104229,-2.769608,-7.593856,-5.029396,-1.360462,-6.511722,-5.666816,1.220506,6.162940,-1.907144,-1.633010,8.827008,-4.720847,2.275671,6.078629,3.963575,-1.946732,-7.385451,6.966679,9.816101,-3.621727,5.214034,-3.758980,-4.976724,-7.667364,-8.200124,2.727261,-6.202028,-4.570121,-0.930520,-1.490870,6.232913,-6.981361,6.085581,-2.353087,4.023668,-6.159602,9.849209,6.439977,-7.214488,-1.299897,-7.658545,8.046974,5.618664,-0.485383,2.029168,5.412153,1.683677,-2.232338,0.525630,5.880913,-5.156398,-4.251144,-3.494864,1.912417,0.021407,1.153419,4.088864,-9.649908,1.824289,-2.977993,-9.397849,9.573892,7.906946,-4.776843,5.942477,2.114865,-2.872680,5.319091,5.445834,3.823162,3.492181,1.886739,7.712983,7.600159,-3.250493,1.566647,-5.174900,9.171205,7.637605,-6.885404,1.342661,-6.998522,6.569308,3.435082,-7.760330,-4.533143,3.787587,-7.039845,1.517839,5.830014,1.925035,-9.754866,-3.890882,-2.342454,-0.483843,-3.609953,-9.712717,9.594816,-2.981168,3.535808,9.918568,-3.665733,8.559061,-1.547897,0.863567,-9.154920,-5.634858,-0.400566,-9.411304,-0.817988,5.528136,9.340574,9.305418,-5.819372,0.600545,-7.705781,3.458056,1.516426,6.184770,6.694712,-1.342576,-7.940042,4.977504,6.269072,4.311781,-3.949440,-0.712009,-1.620568,-1.607138,6.546440,-7.777023,-7.110509,1.156248,-3.394843,1.845622,5.345907,-9.452955,6.011458,-7.193595,3.206692,-1.475210,-2.439743,8.001435,9.886747,4.382230,0.134867,-2.555832,6.871568,-5.740233,4.208714,-2.987666,3.532279,-0.139439,-3.868058,5.356500,-0.641672,2.398645,-6.024237,2.354422,-4.489934,-4.156948,2.584294,2.195202,-7.299434,-1.532703,-0.698178,-5.171089,2.565454,-3.083283,2.472547,-9.163881,6.521832,7.410212,-2.135173,7.216927,1.594409,7.607262,0.725933,-6.338041], dtype = "float32")#candidate|9235|(1056,)|const|float32
call_9234 = relay.TupleGetItem(func_6594_call(relay.reshape(const_9235.astype('float32'), [1056,]), relay.reshape(const_9235.astype('float64'), [1056,]), ), 0)
call_9236 = relay.TupleGetItem(func_6598_call(relay.reshape(const_9235.astype('float32'), [1056,]), relay.reshape(const_9235.astype('float64'), [1056,]), ), 0)
func_8319_call = mod.get_global_var('func_8319')
func_8320_call = mutated_mod.get_global_var('func_8320')
call_9246 = relay.TupleGetItem(func_8319_call(), 1)
call_9247 = relay.TupleGetItem(func_8320_call(), 1)
output = relay.Tuple([call_9230,call_9234,const_9235,call_9246,])
output2 = relay.Tuple([call_9231,call_9236,const_9235,call_9247,])
func_9248 = relay.Function([], output)
mod['func_9248'] = func_9248
mod = relay.transform.InferType()(mod)
output = func_9248()
func_9249 = relay.Function([], output)
mutated_mod['func_9249'] = func_9249
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9281 = relay.var("var_9281", dtype = "float64", shape = (7, 10, 4))#candidate|9281|(7, 10, 4)|var|float64
uop_9282 = relay.atan(var_9281.astype('float64')) # shape=(7, 10, 4)
output = uop_9282
output2 = uop_9282
F = relay.Function([var_9281,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_9281,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
	relay.transform.ToBasicBlockNormalForm(),
	relay.transform.FuseOps(3),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_217 = relay.var("var_217", dtype = "float32", shape = (16, 6, 3))#candidate|217|(16, 6, 3)|var|float32
var_218 = relay.var("var_218", dtype = "float32", shape = (16, 6, 3))#candidate|218|(16, 6, 3)|var|float32
bop_219 = relay.divide(var_217.astype('float32'), relay.reshape(var_218.astype('float32'), relay.shape_of(var_217))) # shape=(16, 6, 3)
output = bop_219
output2 = bop_219
func_229 = relay.Function([var_217,var_218,], output)
mod['func_229'] = func_229
mod = relay.transform.InferType()(mod)
mutated_mod['func_229'] = func_229
mutated_mod = relay.transform.InferType()(mutated_mod)
func_229_call = mutated_mod.get_global_var('func_229')
var_231 = relay.var("var_231", dtype = "float32", shape = (16, 6, 3))#candidate|231|(16, 6, 3)|var|float32
var_232 = relay.var("var_232", dtype = "float32", shape = (16, 6, 3))#candidate|232|(16, 6, 3)|var|float32
call_230 = func_229_call(var_231,var_232,)
output = call_230
func_233 = relay.Function([var_231,var_232,], output)
mutated_mod['func_233'] = func_233
mutated_mod = relay.transform.InferType()(mutated_mod)
var_417 = relay.var("var_417", dtype = "float32", shape = (13, 15, 12))#candidate|417|(13, 15, 12)|var|float32
uop_418 = relay.sqrt(var_417.astype('float32')) # shape=(13, 15, 12)
uop_420 = relay.sigmoid(var_417.astype('float64')) # shape=(13, 15, 12)
output = relay.Tuple([uop_418,uop_420,])
output2 = relay.Tuple([uop_418,uop_420,])
func_424 = relay.Function([var_417,], output)
mod['func_424'] = func_424
mod = relay.transform.InferType()(mod)
var_425 = relay.var("var_425", dtype = "float32", shape = (13, 15, 12))#candidate|425|(13, 15, 12)|var|float32
output = func_424(var_425)
func_426 = relay.Function([var_425], output)
mutated_mod['func_426'] = func_426
mutated_mod = relay.transform.InferType()(mutated_mod)
var_533 = relay.var("var_533", dtype = "int8", shape = (1, 6, 2))#candidate|533|(1, 6, 2)|var|int8
const_534 = relay.const([[[-6,2],[-4,6],[8,-5],[5,8],[1,10],[-7,5]],[[4,2],[6,3],[4,4],[2,1],[-6,-2],[6,9]]], dtype = "int8")#candidate|534|(2, 6, 2)|const|int8
bop_535 = relay.bitwise_xor(var_533.astype('int8'), const_534.astype('int8')) # shape=(2, 6, 2)
output = relay.Tuple([bop_535,])
output2 = relay.Tuple([bop_535,])
func_545 = relay.Function([var_533,], output)
mod['func_545'] = func_545
mod = relay.transform.InferType()(mod)
mutated_mod['func_545'] = func_545
mutated_mod = relay.transform.InferType()(mutated_mod)
var_546 = relay.var("var_546", dtype = "int8", shape = (1, 6, 2))#candidate|546|(1, 6, 2)|var|int8
func_545_call = mutated_mod.get_global_var('func_545')
call_547 = func_545_call(var_546)
output = call_547
func_548 = relay.Function([var_546], output)
mutated_mod['func_548'] = func_548
mutated_mod = relay.transform.InferType()(mutated_mod)
var_908 = relay.var("var_908", dtype = "float32", shape = (1, 1, 2))#candidate|908|(1, 1, 2)|var|float32
uop_909 = relay.sigmoid(var_908.astype('float32')) # shape=(1, 1, 2)
func_424_call = mod.get_global_var('func_424')
func_426_call = mutated_mod.get_global_var('func_426')
const_917 = relay.const([-8.664424,1.334283,-1.670877,6.053031,7.509357,9.296302,1.844879,-8.755254,-2.652766,6.139547,-7.532245,7.102854,-5.250233,4.445920,-2.548906,-0.735686,7.195863,-8.542083,1.759990,7.875353,5.603943,-4.754459,7.603450,-9.002181,4.617549,-1.667238,5.354887,-1.210151,2.737513,5.764434,-1.086589,-7.629892,2.983562,0.765501,-4.175551,8.458903,5.752280,-2.040792,7.473364,-4.061307,-2.799214,-2.075333,-6.811983,-2.692156,-7.737205,3.632186,0.492076,-2.445196,-8.071583,-6.278713,7.737084,-3.432952,1.159606,9.504917,7.609017,5.933050,-7.237228,5.593938,-1.214412,1.409893,-7.260542,-8.939566,-2.739294,-2.246025,-8.795599,-9.211820,6.016550,1.646652,5.735203,2.051605,-9.193598,4.223347,-4.241888,-7.179219,-4.693895,8.732855,-9.049023,-1.586192,-7.235085,-2.180370,1.026469,-6.148990,9.723514,0.707578,2.610269,-0.252197,-1.189555,-5.173154,-6.285720,3.395054,-3.404349,1.302978,-3.613566,-1.280294,5.735827,-7.710642,4.411958,3.885962,-3.979268,0.769737,9.255178,7.044806,8.212989,-4.662596,-5.502460,-8.433197,-7.797594,-7.303067,-7.059234,5.349921,6.671281,-6.090610,7.257132,6.675799,8.264028,0.182231,-3.605090,-3.831802,-8.946318,-7.097669,-7.946458,-9.267436,-7.054356,-9.387194,6.234811,-4.919124,5.679994,2.893396,-3.072577,-7.426511,6.776386,-4.680004,-1.882655,-9.457565,7.772927,-8.061024,2.681482,-3.889609,2.803623,-7.338695,2.848341,4.743313,-8.026310,0.316268,7.533535,-9.619627,3.302713,4.559718,3.478144,-4.373963,-3.368865,-4.488100,2.123037,8.066059,0.394046,2.477287,0.074646,7.471313,4.256184,-8.450824,-7.218315,-4.626455,-1.084275,-7.454664,1.005583,-9.613782,9.683015,5.949401,-8.685492,9.015060,8.769680,-0.109590,0.018910,-1.392303,-3.209261,4.639771,1.904612,-9.669929,1.153134,5.714315,9.828423,-7.104151,-2.037588,-2.983959,3.839138,6.459615,-5.535910,1.242150,4.390694,1.471095,-8.993448,7.117615,-3.877454,4.423821,-5.935434,-0.549587,9.601949,-0.281652,-4.698858,-2.566246,-4.615939,-2.543233,2.431677,-7.394875,8.937791,-0.184486,-8.585854,1.615091,6.784292,0.574026,4.074685,7.735574,-7.238818,1.980504,-5.237860,-7.153215,4.221719,-9.259664,-6.360200,6.696927,-0.246532,-4.882775,8.334076,8.911517,-9.724492,-6.155879,-9.898834,-9.420901,1.911392,8.374260,8.981661,-2.894099,8.129495,9.227653,6.228372,2.593532,-4.369283,0.410800,-2.145669,-5.498818,0.878077,-4.658605,2.000496,-3.626275,-2.835012,-6.196588,-0.552464,-1.371966,9.050698,1.251058,8.767275,-0.678378,-4.060619,6.566942,-3.124468,-3.164043,3.982305,5.211455,0.095235,3.136774,-6.066679,-0.447433,4.030368,-2.160932,-3.867023,5.285299,-2.738200,-3.125240,5.502034,1.397578,9.175520,9.670930,2.304190,8.777164,6.908540,-3.068236,7.778805,-9.702729,-6.592394,3.773519,-3.694176,-6.201021,2.409502,-8.220688,-3.029865,-4.264270,0.894251,-7.628622,4.842197,8.231022,8.409437,-8.506566,-5.368315,9.120095,5.099401,-5.649853,9.439630,-7.456013,7.675179,-2.613281,2.404160,0.639945,-5.657328,3.680276,-8.228039,-3.504468,-2.883862,-4.874928,2.875753,0.618319,-1.961197,1.595358,-1.726676,-1.357946,-3.232479,-3.796985,-2.544287,-4.556291,8.077001,-3.560641,-3.329847,0.112849,9.563467,-1.139708,9.671772,7.626804,8.516109,-6.610141,-4.303362,1.787571,3.464703,-1.584289,2.515258,-7.140055,-8.042585,-3.985203,-3.624188,-6.613218,7.030726,-3.909526,-2.239033,1.530586,-4.098847,-6.328505,-2.510819,4.355486,1.398649,7.000149,-6.753208,5.753598,-2.558991,-1.075212,-2.127298,-9.349083,8.355690,-0.464100,-6.158003,2.536668,2.630221,-9.649380,5.803118,8.227194,8.139978,1.643402,4.855338,1.659862,0.703335,-8.301945,-3.932923,9.732686,8.467711,5.483209,4.462656,2.062799,-3.328771,6.800839,3.279156,-3.545030,0.974676,2.043223,2.429092,8.764583,-1.837269,-5.034085,-5.703327,-7.563882,4.223215,-5.911503,-5.840749,-5.163360,4.989282,-0.656401,-9.263108,6.883081,-4.878694,-0.730331,3.582862,-5.846044,8.569223,-0.493887,8.631440,-4.962767,1.184367,3.380501,-8.731445,-8.808987,1.624132,-3.961913,-2.536807,-0.890929,-0.628216,-6.532281,-4.617287,2.595226,6.425293,9.584413,-3.485283,0.312617,-2.823243,8.160645,-7.485810,-4.043938,-8.171772,-1.755156,6.705290,-9.139184,3.939118,2.804192,8.286958,-2.017155,6.617767,2.780340,3.159356,8.238198,-7.693483,-6.663256,-9.683957,-1.664945,8.861887,6.002542,2.631678,1.926830,-5.148125,-8.275237,4.020467,-5.349463,8.536031,4.137152,0.558589,-3.782582,7.479622,-5.724440,-8.850269,5.164000,3.555178,-5.178013,-3.522284,-7.004634,-9.276919,-1.223183,2.362361,-8.453979,7.374634,9.954474,-4.183907,-5.045655,-5.111154,-8.222114,6.744977,-8.146468,-8.052226,-9.586419,-3.726933,-7.337861,4.760467,7.820600,5.500074,5.344373,3.339957,7.820075,6.021190,7.882541,7.259973,-5.165271,3.070668,8.806226,1.951442,-7.632778,-9.190330,-3.846755,-5.232865,-4.879920,-8.241194,-8.221619,-2.982270,0.940974,6.303113,8.037723,-7.665846,7.889977,5.366715,-6.719671,-8.545071,-9.134670,8.754704,3.648082,-2.130556,0.853689,5.077902,-8.862357,-1.618092,5.897235,8.674596,-7.265597,-1.984699,5.559952,-3.561505,-5.498885,3.728401,-5.824857,-1.670616,-0.240561,5.573496,8.973138,5.034164,4.442832,2.221197,2.015803,6.505538,2.932697,4.735660,7.619706,-0.488773,4.416466,7.485004,-9.269450,6.762269,-0.710584,-6.722338,2.876355,-9.638031,2.011379,-5.555067,-5.626589,-2.313418,4.726912,-9.919964,-7.732899,8.466670,-8.245325,9.053540,-1.377128,6.709277,9.488928,-5.232013,5.582621,3.370219,-7.402847,1.684814,-9.776866,-3.603973,-5.492502,-0.853742,1.502330,-9.000755,-2.585749,-4.748403,-0.598039,-8.592821,-2.388216,-1.243894,8.702395,-2.515838,4.827918,-2.852542,-4.564881,-9.907238,4.254660,9.618317,-2.632417,0.011484,3.672373,4.590841,0.493745,8.733322,-1.971747,-1.647874,-8.956309,5.229999,-1.757430,0.078669,0.453113,3.651934,-3.466211,7.543214,-5.624929,-1.665499,5.911727,2.122599,6.531698,-4.981237,5.283094,9.075277,8.755857,6.506761,-3.002354,-1.473480,-6.267069,-5.198296,-9.552057,1.339014,-2.140911,-8.675420,8.565950,6.151967,8.520962,-1.651157,-1.015813,-1.185077,3.006914,7.493471,-1.625580,5.631932,-1.742294,8.753088,9.639783,8.018252,-0.188850,3.256123,-2.035927,-7.508465,-3.271614,-1.991585,-3.200531,3.983004,-7.181080,2.313433,-1.794942,-6.294327,6.919211,-1.216000,-2.407923,-6.807665,7.706654,7.666701,-4.510995,9.477315,-5.518990,2.556301,-2.822736,-6.331952,-8.628951,8.282833,-0.131686,5.217615,-6.991425,4.567579,4.425576,1.727329,8.894262,-9.374685,7.922183,3.108171,6.742391,-2.108862,7.053871,2.878726,3.312724,-0.073344,-9.596892,2.186844,5.854503,0.779778,-4.480283,-1.998719,6.499037,-4.639250,-7.483694,3.335775,-3.220579,-5.121337,-9.599808,0.119808,-6.112735,-0.080534,7.463220,3.248893,-9.819762,-1.843965,-0.766910,-7.276629,3.865380,-1.259329,-3.345845,-9.734336,3.367887,-0.919336,-3.525856,3.881429,-2.024359,2.542506,3.434280,-6.276059,3.551344,9.349168,1.975236,-7.043450,-9.347185,4.216376,-0.861736,5.405653,-7.788899,8.549316,-4.620085,8.664206,-0.708283,-4.500086,-5.754391,9.746845,3.356680,2.967733,6.368837,-0.810237,-2.934404,-5.204537,7.835485,-8.876804,-3.144383,-0.759314,6.293037,6.205689,-1.769048,3.467103,-6.472037,-7.589460,6.367231,5.417581,8.406756,-0.728485,7.152985,-8.443733,3.982412,-8.374859,1.028994,-1.888682,-4.404501,-3.201082,1.243168,1.043885,2.685844,-0.724329,1.784683,3.382344,4.129213,-4.127528,-5.918043,2.291536,-4.079696,6.876158,-9.440586,-8.656046,5.387353,3.822499,-6.609381,1.906052,-2.983188,7.358785,6.672919,2.133147,-7.934154,7.275324,-4.411618,-8.952181,-6.783759,-6.304551,5.437975,4.616747,-1.768137,-7.390757,-7.614188,-2.256139,6.184162,-7.455368,-8.392376,5.441691,-4.669649,2.179187,9.182822,0.923418,-7.585135,-3.062999,-2.761058,-7.108287,-8.795951,2.195597,-9.822554,7.543543,5.644704,-6.463277,6.140502,1.785586,-9.633043,3.560099,-2.258212,4.520814,-1.380339,0.297946,-1.818490,2.943556,-7.940670,0.175881,-0.279910,-8.969185,-6.718740,5.900950,-2.007800,3.012229,-9.108913,-1.078188,3.331557,9.666694,3.239848,-2.598403,-0.647068,-6.623343,7.368920,-2.114942,-1.402295,0.969209,1.739462,1.119374,9.579758,6.780484,7.639679,7.018888,7.183101,-8.706873,4.921859,-2.897555,1.341753,-2.379232,-3.373642,-7.040259,3.200799,-7.142014,8.457974,-4.467271,-0.550683,-8.761864,7.470508,0.026061,-0.195840,7.545523,-8.286332,4.501034,-2.713205,-1.778021,-7.054507,6.618790,7.705563,5.066102,7.233421,9.866991,6.274182,7.804802,7.503409,4.266081,3.938860,9.936725,0.803305,7.775758,-6.940563,-1.872930,-8.514322,-4.304331,1.595277,-3.251462,9.640140,1.460179,6.776548,9.254633,8.513708,-0.180215,7.890836,-9.712099,1.882808,-0.495497,-6.235025,-5.824025,9.950127,-3.025792,-1.515261,1.658287,-0.857107,-5.003053,-5.042241,4.647800,5.211939,-9.041313,3.214375,7.489761,-4.855157,2.850063,-0.840637,7.959475,-8.114109,2.827851,3.172128,0.889228,0.975579,0.244578,8.438182,3.534845,6.307758,-2.368125,-9.899750,0.959685,9.281507,3.241158,-2.387985,2.451120,-5.942759,-1.169610,-1.627051,-5.249519,0.072886,9.707832,-1.342317,0.218018,-1.764115,-1.360678,6.743826,2.066847,-4.942055,6.597688,1.932008,-3.516685,6.512865,1.954658,-3.932097,5.396223,-4.794236,-8.304387,4.154335,-3.441325,5.819755,-8.177649,-3.913208,-6.961316,5.255753,8.928791,-8.180540,-1.793278,-7.929622,5.688954,7.077770,9.934868,6.648435,-5.056545,5.769934,-9.830810,-9.905870,-8.695428,-7.216462,9.924360,-0.053056,5.073698,-8.845280,-5.106985,1.079550,6.616999,-0.240678,-1.781075,3.837634,-8.100253,2.551324,9.938091,5.579888,-6.222517,-9.993156,8.041219,4.182837,-0.683700,6.446891,-7.943702,-9.165722,7.130282,-5.710589,1.803481,5.379490,2.411155,-8.072162,-6.049301,-3.025501,-5.397586,-4.208475,2.226377,-5.449049,-4.240801,-6.823181,-3.013680,-8.502750,9.674804,-2.652543,-2.585807,-8.335932,-7.115059,2.429400,-0.068609,-7.925091,-9.497846,0.637849,-6.665875,9.556344,7.190354,4.496639,6.254658,8.583908,9.081435,7.363822,9.282782,2.809578,-7.903532,-5.528296,-8.875601,5.098622,-7.548285,-6.385676,-9.241731,6.907611,9.044708,-9.957663,-3.227272,3.447400,5.172837,-4.118650,-2.313892,-3.507037,-5.210993,8.947451,6.010880,4.839992,4.590476,-7.134633,-7.862465,0.922422,8.448455,-6.501710,-0.352258,3.360964,-9.656152,-5.640255,2.665799,5.178343,-1.144757,-8.730148,-3.411830,7.929198,8.443751,4.705178,6.775977,4.454178,-7.039656,-6.417957,9.984415,-1.396550,8.248961,-5.480846,-5.346730,-3.425131,-5.211544,-4.302463,8.516653,7.565280,-1.748768,-1.725894,7.237659,-4.538737,4.288109,-3.679290,-3.632002,-8.236599,-5.049809,-8.747374,-6.699655,6.482526,9.407316,0.155432,5.436542,0.891361,-7.489228,2.848455,1.974354,0.563928,-5.694762,6.923558,4.562409,7.355440,-2.198525,-1.325021,-5.476027,1.179323,8.186639,-4.242819,8.450894,-9.890998,0.417110,-8.454391,6.171405,7.671747,9.424733,-5.543066,-6.632793,-9.279532,3.922591,-4.804072,-4.309102,2.163887,-6.633824,-9.449780,5.726484,0.374202,-7.633621,7.368290,-1.681612,-6.643591,5.854896,-6.229574,-2.064373,-1.155118,2.553766,2.906238,6.347098,5.912135,8.088607,4.991019,9.950734,0.602748,-9.619916,5.451003,-8.793448,3.450080,8.075451,9.295415,-3.000601,3.799343,-5.326788,-1.232882,-3.428637,-7.690759,1.559173,-9.398477,-9.989476,1.142210,3.969232,4.426779,-3.290145,8.458852,-4.122664,7.636572,6.223586,-3.856368,4.145296,4.782487,1.225987,9.211763,9.532222,9.705856,-5.313841,5.752476,2.208624,2.391658,1.647933,9.948004,0.703965,-3.774040,-2.626170,2.069051,9.541509,8.078075,-3.432304,-7.564123,-4.060242,5.902208,-1.241624,-4.110011,-6.929307,2.147238,1.744130,7.766629,0.019282,1.102556,4.147673,8.363214,2.503974,6.371247,-8.603923,6.719709,8.312066,3.254041,2.348384,0.364792,4.218434,6.811017,-9.111721,1.842059,7.702315,7.833315,4.968543,7.949340,1.408263,-1.783000,-2.554186,-8.839440,4.487066,0.785302,-9.948015,-2.521092,2.163427,-1.834970,-7.579663,9.146374,-6.446591,-4.990570,-6.037044,-3.739224,-7.194263,0.626224,-4.180100,-7.891903,8.457236,2.052862,7.068494,2.461451,4.274169,-1.224917,3.840908,7.295854,-8.218567,-7.654854,-9.124475,-1.958842,0.184772,1.646356,1.845478,2.076344,-9.138550,-8.409404,-9.141331,-5.074356,2.494912,-4.050934,1.800059,-0.737272,6.496065,-2.363329,5.333346,0.670639,-1.205576,7.484969,-7.508203,-4.553790,8.700131,-2.931645,-8.797912,6.860934,8.922827,-7.588984,-1.721673,-5.554563,4.665695,8.178722,3.971386,-6.306098,5.380791,-7.430892,-0.013066,-9.228428,1.528111,-1.510541,-1.448953,-7.786079,2.047446,-1.416457,0.233079,3.398100,6.473080,-3.188940,0.491979,-4.089413,-2.326364,5.411126,8.333340,-3.606641,-4.747441,-9.850135,-4.509545,3.940865,2.037689,8.384446,-9.370583,-8.925269,5.754776,7.253307,5.585936,-8.981097,-6.316984,-4.127157,4.921075,-5.246710,8.207415,-3.418416,5.338396,3.755325,9.213903,-6.898534,-1.868308,0.850822,1.212855,-6.860561,-6.183098,-6.023419,-3.037190,-3.220059,0.559269,-8.544792,6.166415,-6.676278,-4.217469,-8.148845,0.623572,3.444167,8.280380,9.925468,3.892016,2.782177,-3.787198,-4.666895,-6.745326,0.459216,-7.328910,9.936347,-8.398010,-3.543764,1.530185,7.629790,3.131900,-0.235335,6.606641,2.002184,-7.613378,5.263176,-7.957531,5.772930,-2.714564,-5.537114,-3.099675,8.382185,-1.413165,3.805363,-7.973650,-5.107089,-0.851752,-0.218509,-2.913942,-6.457975,-4.604487,-0.925047,-3.533062,3.392347,-5.922465,6.894494,7.547986,0.923646,-7.186391,-8.734376,4.688043,1.816119,5.341231,-1.504383,7.978993,-9.510385,-1.106823,1.364937,5.023667,8.224536,-9.697154,-2.725818,0.845704,1.174089,1.397669,-7.920404,-5.992630,-0.216458,4.659575,-5.906229,5.704282,-6.967485,0.690355,-1.029055,1.908183,-8.041522,-8.925587,0.955389,-6.929606,-1.932715,-1.719854,9.289730,-6.811980,3.778552,-4.100030,-5.162632,-2.613378,5.181712,-3.759742,-2.608896,9.685199,-8.772762,-3.814128,-6.178353,-9.440943,-0.743521,7.178570,-9.436676,5.887621,-2.710348,2.207375,0.783768,6.655644,8.895445,8.037633,1.838675,-5.381563,-4.778781,-7.212660,2.524438,9.678991,6.244656,1.261263,-4.103584,9.317790,-2.568753,-2.843068,6.689474,-4.912810,1.604155,-4.545834,5.767473,-2.193715,6.249901,-4.637166,-1.309036,-8.871270,-4.143121,2.520828,-7.108287,8.276474,0.080114,0.411103,-0.369555,9.431569,2.601465,-7.115507,-5.035633,-0.801858,2.874130,-8.030885,4.420846,-3.984443,3.648350,-2.343097,-6.787296,-3.833588,2.870926,-4.050235,-8.887879,-7.420370,-2.616159,-1.461070,9.253214,-2.313106,2.687487,-3.126316,-9.653003,-8.646221,-6.866344,8.987477,7.206311,-6.008685,4.539259,-1.030180,-4.709344,9.973474,5.003911,0.865022,7.686143,-6.702904,5.686474,9.446731,4.082457,5.099082,-8.855318,-3.109515,-0.118993,0.236846,-8.218529,4.709542,-3.055995,0.885040,-9.698020,-5.531418,-5.445299,-0.517666,-8.754158,3.706875,-5.984177,7.661779,-7.484479,-3.510234,9.037406,-1.569510,5.122728,-1.519166,7.223096,2.039685,0.854644,6.446346,-6.803626,2.350735,2.709320,-5.028110,9.398166,-2.222069,-1.909281,-0.566486,-2.602168,4.469316,5.689153,4.598999,8.855013,-3.933535,1.961625,-3.834822,-8.487516,-4.325042,1.166798,6.549431,-6.602587,-1.933151,-2.086259,-5.051426,2.778123,-1.815250,-0.035247,7.948818,-2.180232,-8.103796,2.157116,-9.771246,-4.937646,1.409282,3.482810,-2.529156,6.697911,-8.074537,4.439057,-8.155416,-0.245588,2.095875,0.643334,-5.058500,0.962041,7.362284,-6.441641,-1.401212,-2.554945,-0.603292,-8.090113,8.637734,0.012501,4.861019,1.674867,0.991956,-3.552509,-8.650206,-4.684133,1.845127,4.592894,-3.471906,-1.574416,-0.647725,5.586651,4.484346,5.734711,4.040578,-7.131223,1.142060,-8.845636,-0.669918,-7.387120,-3.513372,8.938788,-5.129347,-2.720481,-2.446324,4.140457,9.253476,0.362226,-5.435370,-6.305581,7.914810,-8.517521,-7.450685,-1.444876,2.175488,3.966785,3.100646,7.049361,0.722120,-4.272253,8.233145,-4.379384,-4.486339,0.816750,-8.526611,-7.218652,-8.487680,-7.987030,-3.809083,0.001601,7.928238,2.345444,-4.515322,-7.382817,9.746170,8.752459,-5.619489,7.900340,-4.596024,8.315736,-8.314445,-8.849477,-9.278696,6.640113,3.916752,-2.547091,6.198588,8.734559,9.312833,2.264754,2.164964,3.957522,-2.311214,-2.670064,7.965101,3.961835,-2.122374,-6.429517,4.484171,2.248401,6.717483,4.634591,3.670691,-1.532078,9.977419,0.379096,-7.985481,-2.356589,-9.106310,4.814926,6.116309,9.176097,0.367374,-6.236386,-0.286713,6.265984,-5.231437,-3.115821,-4.876233,-4.444115,2.137376,-7.300293,-9.811829,-2.862695,6.967165,-0.202213,8.757637,-6.579242,0.758615,4.243458,-8.961577,4.500382,3.017599,2.131647,-8.969953,5.381432,9.564219,-6.527392,4.370494,-4.220678,-1.189262,9.791472,7.768822,-1.279020,-8.105135,-2.055370,6.760864,1.995267,4.504216,-6.351500,-9.117652,2.734309,1.488933,7.219775,4.578659,6.072891,-6.464810,2.575643,2.949808,4.430025,4.566580,-0.691299,1.280588,2.232224,-7.062217,0.967910,-2.022974,6.405338,-2.371990,-6.461761,-3.429130,5.336287,-5.401698,-5.005287,0.740600,3.308286,4.476194,5.195365,-0.515431,-9.763668,-7.688012,6.765393,-9.158200,-2.116673,-6.351206,-3.368558,-0.678890,4.849681,-7.328237,-6.434668,9.676690,-0.372297,-8.895536,-4.096348,9.799685,1.440529,-7.879937,-2.747676,3.126810,6.328745,7.344822,5.137567,0.396248,-7.263644,-1.318332,6.110976,-8.281756,8.511675,7.324985,1.367471,-8.572638,-7.657941,-5.460214,9.029032,2.285599,9.313206,4.037778,5.115856,4.372671,-6.907208,-3.959178,-5.808037,-9.982317,5.538176,6.572399,-8.515914,-5.478097,-2.499941,5.731293,-4.013318,-1.357616,8.554114,-9.015291,-2.206847,-0.856956,-0.180883,2.410413,4.081008,-4.320939,3.805342,-1.215078,6.304350,6.482497,1.957650,3.028927,5.794253,2.353166,8.356147,8.546214,0.503888,8.456062,2.554425,-6.706810,-3.273127,9.809366,-8.967953,9.450442,-6.012023,5.798215,1.369847,-9.964566,-8.644364,0.128874,5.643930,-5.729650,-8.638943,-9.527939,-4.903934,-5.293701,7.814144,-3.631260,2.619255,4.939135,-9.100581,8.540571,-3.002571,4.588678,6.019336,-8.474742,0.166568,-4.469879,-9.588585,0.515611,0.989950,9.695365,-8.059468,1.285737,3.975178,9.384313,0.425723,9.827377,-0.059936,8.494458,0.342115,7.205460,-6.485989,-9.920340,-7.274888,3.806367,-7.628455,5.784933,-0.527704,-7.019419,2.735708,-8.205287,8.359074,-1.066870,-9.731056,0.590646,-8.786283,-1.125580,-3.079815,2.430823,4.410110,7.427064,-3.348211,-6.430704,7.000220,-6.507011,-3.398411,4.216072,6.540682,-6.471284,6.242150,9.335704,-6.182349,-6.031965,6.598130,0.774132,-0.593193,-1.578913,7.074043,-1.059150,5.125230,-1.663729,6.954572,8.502901,3.474506,-9.289675,-4.630777,-5.790149,3.233151,5.305468,2.506343,5.609711,1.435810,-8.629086,-0.996107,6.303768,5.504290,-4.762245,-7.368509,1.676781,1.758470,-9.638593,-0.458788,-1.217595,-3.687720,-9.378669,-3.236663,3.045391,9.327482,6.463468,-7.556666,0.650211,-6.977273,-7.616706,-5.637536,-5.211772,9.738054,8.312442,-8.779858,-7.178081,2.220633,-3.194284,-6.232981,-3.127862,0.208942,-4.291547,-7.973453,4.282100,5.168119,7.734219,-6.779015,0.020447,4.125680,4.569087,-5.820571,-1.492221,-4.628976,1.031389,-6.502301,-5.718955,3.248918,-4.140782,-9.788881,-9.402993,8.619205,5.878467,-5.582137,-6.639984,0.260685,1.558017,5.490847,-4.541410,-0.541620,-6.080425,4.255414,-3.492776,8.254916,-2.281270,-6.016203,8.032702,4.586690,0.519209,2.598556,6.660403,9.644108,-0.314232,-3.855485,-2.090024,6.345718,8.273734,5.837795,3.899419,-5.335294,6.778241,8.925161,2.524101,7.090998,-7.741705,-6.127546,-3.727303,-6.320338,-5.393856,4.379174,1.610454,0.115248,1.958202,-5.458460,-4.583749,-4.715976,7.961158,-4.991921,-3.168789,-0.818089,4.692783,-5.170965,-2.206913,-8.609941,1.703823,-8.675768,-7.833667,-1.415890,-1.938665,8.758101,7.461414,-3.998794,4.387900,2.278554,0.158443,-8.709204,-2.412671,-6.218136,6.199694,3.336691,-1.836409,4.077573,-8.731130,-8.496158,-6.680138,4.856555,8.256688,-3.112889,-9.543452,3.661695,8.671226,-7.642800,-9.348611,7.568390,-1.550741,0.054778,-3.845002,3.040226,-8.440817,5.560646,4.250454,-7.624938,5.397010,4.977386,9.362743,5.053013,-5.893776,-7.948134,-3.278882,-0.579682,3.161572,0.209785,-8.636776,-6.333944,-3.254387,6.362567,-4.401880,-6.382647,5.544362,7.221495,-4.149375,9.848054,3.694159,-4.636835,6.871905,-9.088456,-0.034369,-4.082722,-5.630317,6.748702,9.278646,7.827940,-2.134624,2.661878,2.684174,-0.572321,1.427010,0.208201,-6.177449,-3.096173,-4.461704,-1.854228,-9.467459,-3.817265,3.876902,7.389308,-5.642501,-5.274077,-7.137086,-6.743629,-4.295982,-6.225424,6.105415,-3.604172,4.631075,4.930515,9.811091,-6.742116,4.760385,0.651527,-3.068953,2.469566,8.986593,8.373316,5.334230,8.350926,4.533525,8.507451,9.098665,-7.863102,-0.729510,1.662955,1.836935,9.836069,-4.830556,1.014776,3.116034,3.769312,-8.167810,-7.675908,6.990740,6.376547,9.706884,9.080543,4.909608,2.093495,6.041101,3.129990,-1.503129,0.279283,2.828546,8.208666,6.422077,9.646664,-2.873007,5.980941,-6.183384,-1.215438,3.521466,-1.239644,9.259605,-9.542013,-9.707429,1.033115,-0.564864,0.063316,1.304724,-0.158266,-6.081443,-0.993361,-9.662733,-2.296331,-0.024560,-3.109051,-2.920580,-4.459566,1.407101,-3.858639,9.472289,-6.384571,0.843976,2.247702,2.631044,6.624223,-5.105129,-7.300925,-4.501573,9.970575,0.913837,-1.333639,-8.041326,5.605332,-8.819199,-4.563452,3.647716,7.596403,-7.890592,9.428353,2.347077,8.743525,-2.381489,-5.735251,-6.660916,5.349262,0.500339,2.445140,0.247381,0.100959,5.913722,8.037179,2.658332,2.207411,6.496773,7.049717,9.308104,-8.837718,-8.532310,-5.708106,-4.420386,-1.575812,-3.323864,-7.700922,-1.279169,8.575532,0.743376,-1.137455,9.007740,-3.450893,-9.171649,3.026673,9.273121,2.487804,-1.476313,-4.993319,9.827383,0.773243,6.570070,8.313717,6.478409,3.089328,1.545326,9.190363,8.144450,-7.189071,6.317024,4.641315,5.344153,-2.617021,7.014577,9.187188,9.493954,-8.762805,-2.617434,-8.320910,-6.892957,-1.451931,2.146682,-9.964520,4.038227,-6.206078,7.116885,9.703379,-5.150484,-3.039417,6.845297,4.026434,-6.511561,7.466193,6.063336,7.286187,3.349505,-0.244291,7.465406,8.415346,2.729673,-0.968413,1.346478,6.468668,4.201712,7.895407,0.442121,-2.674049,-1.019974,-3.761417,9.530296,4.619923,2.793406,-9.589406,4.536589,-1.596766,2.156902,5.258764,-6.295601,8.474911,-6.338237,-6.038592,1.587549,-1.577619,-8.444897,0.327045,-1.659387,-2.269530,-5.771359,-7.405006,-9.861358,-1.452122,0.078825,4.598168,6.999197,-4.519165,7.906191,0.183187,6.123874,6.677400,0.198415,6.416436,5.843160,9.446190,-8.190017,8.399719,-8.680510,5.374957,4.574345,-4.947680,5.508666,8.976522,2.190597,4.854196,-4.570440,9.523787,9.994199,1.003920,-9.479694,3.823671,-3.382321,-4.655267,-8.252737,0.695037,-3.042074,-1.312449,-1.376377,-6.640783,9.433397,-6.411832,-9.683008,1.583587,-7.473559,1.050292,5.318553,-3.895016,5.964974,3.133694,-4.187933,-6.652396], dtype = "float32")#candidate|917|(2340,)|const|float32
call_916 = relay.TupleGetItem(func_424_call(relay.reshape(const_917.astype('float32'), [13, 15, 12])), 1)
call_918 = relay.TupleGetItem(func_426_call(relay.reshape(const_917.astype('float32'), [13, 15, 12])), 1)
output = relay.Tuple([uop_909,call_916,const_917,])
output2 = relay.Tuple([uop_909,call_918,const_917,])
func_921 = relay.Function([var_908,], output)
mod['func_921'] = func_921
mod = relay.transform.InferType()(mod)
var_922 = relay.var("var_922", dtype = "float32", shape = (1, 1, 2))#candidate|922|(1, 1, 2)|var|float32
output = func_921(var_922)
func_923 = relay.Function([var_922], output)
mutated_mod['func_923'] = func_923
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1058 = relay.var("var_1058", dtype = "float32", shape = (2, 1, 12))#candidate|1058|(2, 1, 12)|var|float32
uop_1059 = relay.acos(var_1058.astype('float32')) # shape=(2, 1, 12)
bop_1067 = relay.bitwise_and(var_1058.astype('uint8'), relay.reshape(uop_1059.astype('uint8'), relay.shape_of(var_1058))) # shape=(2, 1, 12)
uop_1070 = relay.log(bop_1067.astype('float32')) # shape=(2, 1, 12)
output = uop_1070
output2 = uop_1070
func_1077 = relay.Function([var_1058,], output)
mod['func_1077'] = func_1077
mod = relay.transform.InferType()(mod)
mutated_mod['func_1077'] = func_1077
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1078 = relay.var("var_1078", dtype = "float32", shape = (2, 1, 12))#candidate|1078|(2, 1, 12)|var|float32
func_1077_call = mutated_mod.get_global_var('func_1077')
call_1079 = func_1077_call(var_1078)
output = call_1079
func_1080 = relay.Function([var_1078], output)
mutated_mod['func_1080'] = func_1080
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1176 = relay.var("var_1176", dtype = "float64", shape = (6, 2, 15))#candidate|1176|(6, 2, 15)|var|float64
uop_1177 = relay.log10(var_1176.astype('float64')) # shape=(6, 2, 15)
func_921_call = mod.get_global_var('func_921')
func_923_call = mutated_mod.get_global_var('func_923')
var_1183 = relay.var("var_1183", dtype = "float32", shape = (2,))#candidate|1183|(2,)|var|float32
call_1182 = relay.TupleGetItem(func_921_call(relay.reshape(var_1183.astype('float32'), [1, 1, 2])), 2)
call_1184 = relay.TupleGetItem(func_923_call(relay.reshape(var_1183.astype('float32'), [1, 1, 2])), 2)
uop_1185 = relay.cosh(uop_1177.astype('float32')) # shape=(6, 2, 15)
output = relay.Tuple([call_1182,var_1183,uop_1185,])
output2 = relay.Tuple([call_1184,var_1183,uop_1185,])
func_1191 = relay.Function([var_1176,var_1183,], output)
mod['func_1191'] = func_1191
mod = relay.transform.InferType()(mod)
mutated_mod['func_1191'] = func_1191
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1191_call = mutated_mod.get_global_var('func_1191')
var_1193 = relay.var("var_1193", dtype = "float64", shape = (6, 2, 15))#candidate|1193|(6, 2, 15)|var|float64
var_1194 = relay.var("var_1194", dtype = "float32", shape = (2,))#candidate|1194|(2,)|var|float32
call_1192 = func_1191_call(var_1193,var_1194,)
output = call_1192
func_1195 = relay.Function([var_1193,var_1194,], output)
mutated_mod['func_1195'] = func_1195
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1446 = relay.const([[[9,-2,9,2,4],[1,4,-10,-10,-6],[10,-4,-2,8,-4],[-7,-7,3,2,-3],[9,10,8,6,1],[-4,7,-10,6,10],[-2,-3,7,4,-1],[-8,3,-6,7,8],[5,1,-1,-10,8],[6,-6,-9,-7,6],[10,-2,1,-3,-1]],[[6,-4,-5,-7,-1],[-6,7,8,-7,-8],[4,-7,10,-4,6],[-5,-1,-1,-3,5],[5,1,-3,7,3],[-3,3,3,9,8],[5,10,-4,6,9],[-1,1,8,2,-4],[-1,2,-8,-7,6],[-4,1,-9,-7,2],[4,-2,-7,9,-6]],[[-4,9,-10,3,-5],[5,10,-5,2,-3],[8,8,-4,-10,4],[-5,2,-4,-10,2],[-6,7,4,4,-4],[10,6,-1,5,-1],[-7,9,10,-2,2],[10,-10,5,-8,9],[8,3,-9,2,4],[-5,2,10,7,4],[5,-1,-10,-2,7]],[[-2,3,9,-8,6],[-6,4,-2,10,6],[3,10,10,-10,10],[-4,-2,-8,8,10],[7,-2,-4,5,8],[-9,-5,-2,-3,-5],[-10,7,-5,1,-8],[-5,8,6,-6,5],[-4,-4,7,2,-10],[3,8,-10,-3,-6],[1,-8,3,-1,6]],[[-4,4,9,-5,9],[10,3,-2,-10,-3],[7,-10,-5,10,-1],[-3,7,2,-9,9],[-2,2,8,10,10],[-6,1,4,8,-1],[-10,-1,-4,-5,10],[10,2,9,5,-9],[5,6,1,4,-3],[6,1,-2,-2,5],[10,6,-7,-1,-6]],[[-1,-6,-9,-6,4],[-7,-3,-10,3,-10],[6,8,-4,-8,-9],[-7,-5,9,10,6],[3,6,4,-8,8],[9,-10,7,-2,-8],[9,-3,-8,10,-8],[-2,2,4,2,4],[2,5,2,7,-8],[7,2,-2,4,8],[8,10,6,7,8]],[[1,7,-3,9,-3],[6,-2,9,9,-8],[5,7,-8,-1,-2],[-8,-10,-8,-6,-4],[-3,8,-1,3,-2],[8,-7,-5,5,-1],[5,-9,-6,10,5],[-10,6,-8,-5,-8],[-2,-6,-9,-5,5],[3,-5,4,3,-1],[8,1,-9,3,-9]],[[-5,-9,-1,2,-5],[2,-8,4,8,6],[6,-3,1,5,10],[-7,7,3,-6,-4],[1,-1,-4,-1,-10],[6,-4,-2,-2,1],[1,4,5,5,-4],[2,-8,-4,-6,7],[-3,-2,1,-4,-1],[5,-4,-9,8,-10],[-7,-8,5,-7,7]],[[9,-8,-1,-4,-2],[-9,-6,-5,3,3],[6,4,-4,5,10],[-7,4,-9,-4,9],[10,4,2,-5,5],[-8,7,-4,-3,-4],[1,-3,9,-1,6],[9,-9,-6,-4,-7],[8,-7,-7,7,10],[-4,-5,5,8,-6],[-5,4,10,6,-2]],[[1,8,6,1,-7],[5,1,10,-3,-1],[5,-4,1,-1,-5],[9,3,-6,-5,4],[-7,5,8,-3,4],[-8,1,9,3,10],[-1,6,6,-4,-10],[-5,7,6,-3,-6],[4,-5,-5,8,2],[-8,6,-8,-7,-5],[1,5,-8,-3,9]]], dtype = "uint32")#candidate|1446|(10, 11, 5)|const|uint32
var_1447 = relay.var("var_1447", dtype = "uint32", shape = (10, 11, 5))#candidate|1447|(10, 11, 5)|var|uint32
bop_1448 = relay.less(const_1446.astype('bool'), relay.reshape(var_1447.astype('bool'), relay.shape_of(const_1446))) # shape=(10, 11, 5)
output = bop_1448
output2 = bop_1448
func_1458 = relay.Function([var_1447,], output)
mod['func_1458'] = func_1458
mod = relay.transform.InferType()(mod)
var_1459 = relay.var("var_1459", dtype = "uint32", shape = (10, 11, 5))#candidate|1459|(10, 11, 5)|var|uint32
output = func_1458(var_1459)
func_1460 = relay.Function([var_1459], output)
mutated_mod['func_1460'] = func_1460
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1479 = relay.var("var_1479", dtype = "uint64", shape = ())#candidate|1479|()|var|uint64
var_1480 = relay.var("var_1480", dtype = "uint64", shape = (13, 2, 11))#candidate|1480|(13, 2, 11)|var|uint64
bop_1481 = relay.right_shift(var_1479.astype('uint64'), var_1480.astype('uint64')) # shape=(13, 2, 11)
output = relay.Tuple([bop_1481,])
output2 = relay.Tuple([bop_1481,])
func_1487 = relay.Function([var_1479,var_1480,], output)
mod['func_1487'] = func_1487
mod = relay.transform.InferType()(mod)
var_1488 = relay.var("var_1488", dtype = "uint64", shape = ())#candidate|1488|()|var|uint64
var_1489 = relay.var("var_1489", dtype = "uint64", shape = (13, 2, 11))#candidate|1489|(13, 2, 11)|var|uint64
output = func_1487(var_1488,var_1489,)
func_1490 = relay.Function([var_1488,var_1489,], output)
mutated_mod['func_1490'] = func_1490
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1497 = relay.const(-8, dtype = "uint32")#candidate|1497|()|const|uint32
var_1498 = relay.var("var_1498", dtype = "uint32", shape = (1, 5, 7))#candidate|1498|(1, 5, 7)|var|uint32
bop_1499 = relay.not_equal(const_1497.astype('bool'), var_1498.astype('bool')) # shape=(1, 5, 7)
func_1458_call = mod.get_global_var('func_1458')
func_1460_call = mutated_mod.get_global_var('func_1460')
var_1503 = relay.var("var_1503", dtype = "uint32", shape = (550,))#candidate|1503|(550,)|var|uint32
call_1502 = func_1458_call(relay.reshape(var_1503.astype('uint32'), [10, 11, 5]))
call_1504 = func_1458_call(relay.reshape(var_1503.astype('uint32'), [10, 11, 5]))
bop_1505 = relay.right_shift(bop_1499.astype('uint64'), relay.reshape(var_1498.astype('uint64'), relay.shape_of(bop_1499))) # shape=(1, 5, 7)
bop_1521 = relay.greater(call_1502.astype('bool'), relay.reshape(var_1503.astype('bool'), relay.shape_of(call_1502))) # shape=(10, 11, 5)
bop_1524 = relay.greater(call_1504.astype('bool'), relay.reshape(var_1503.astype('bool'), relay.shape_of(call_1504))) # shape=(10, 11, 5)
uop_1526 = relay.rsqrt(call_1502.astype('float32')) # shape=(10, 11, 5)
uop_1528 = relay.rsqrt(call_1504.astype('float32')) # shape=(10, 11, 5)
func_1487_call = mod.get_global_var('func_1487')
func_1490_call = mutated_mod.get_global_var('func_1490')
var_1532 = relay.var("var_1532", dtype = "uint64", shape = (286,))#candidate|1532|(286,)|var|uint64
call_1531 = relay.TupleGetItem(func_1487_call(relay.reshape(const_1497.astype('uint64'), []), relay.reshape(var_1532.astype('uint64'), [13, 2, 11]), ), 0)
call_1533 = relay.TupleGetItem(func_1490_call(relay.reshape(const_1497.astype('uint64'), []), relay.reshape(var_1532.astype('uint64'), [13, 2, 11]), ), 0)
func_424_call = mod.get_global_var('func_424')
func_426_call = mutated_mod.get_global_var('func_426')
const_1551 = relay.const([-3.064133,0.315307,2.774518,4.225185,-6.571024,3.448689,-2.346738,8.998033,-7.122263,-9.477818,-0.406751,9.281537,-5.914370,-3.927942,-8.584839,-9.035926,0.303443,5.038621,9.646282,6.515593,0.174257,8.337293,-8.205968,-2.799598,-1.546567,-5.979470,4.572748,4.907266,-5.611782,-9.396498,7.955871,7.016043,-3.001475,2.531476,3.678608,-1.701702,0.998387,-0.685115,-6.764982,-3.529070,8.374638,-9.334573,-1.875177,-6.719395,8.002693,0.077339,-6.298423,-6.348243,-6.401645,-2.950058,-5.566340,-8.313805,-9.907741,1.308463,9.217122,3.894113,-9.871949,-0.429004,3.981911,0.890925,4.885843,3.193243,9.511206,-1.065343,-3.078433,8.102902,8.216519,-9.943251,-8.345658,7.380519,-3.606012,-8.084898,-9.832510,2.509268,-7.069817,-4.973475,-9.066006,8.047322,0.233664,3.729449,-5.842464,-8.101502,-9.019713,-4.608252,-5.843473,-2.131441,-9.948423,-4.366162,6.946450,6.270007,-6.344010,9.798825,3.761973,3.177918,2.280832,-8.610366,7.502712,2.405001,-8.441734,9.012543,1.745584,9.106259,-2.771575,-1.156518,2.195058,3.306081,-0.117759,-6.925446,8.654635,-8.637868,-6.805407,6.270073,-2.010747,1.716497,-4.949082,1.475461,3.621185,8.131783,-5.168474,2.836462,0.230024,-0.944853,-1.636092,-2.871567,-0.586914,-8.670324,0.209048,-8.446872,-7.406590,-3.006758,-0.525709,4.767301,-7.838030,-5.600997,-1.634823,9.293495,-8.512900,3.097315,-9.160063,4.287518,8.871906,-1.949337,8.185444,-4.830293,-3.666364,-4.613428,-3.899373,-8.928158,-5.575772,-0.491290,3.035011,1.527466,5.368561,-6.423861,-7.295482,-4.328063,0.740740,-8.825458,8.235374,-5.737361,-2.265848,3.110883,-4.770338,5.834501,-3.683847,-9.915489,7.347283,0.058701,-1.195345,2.534190,1.795175,-9.441880,-8.731724,3.665927,4.978761,8.293078,-2.634566,4.899434,0.591442,-2.219928,-9.384320,4.162316,-6.749197,-8.924788,-6.839224,7.011460,6.775855,-9.004572,-8.948399,9.689632,1.194629,3.213464,1.072048,7.872810,-5.379032,-2.230483,-3.573489,-7.813464,9.734306,0.245377,-5.174922,5.840431,3.097223,0.227959,-7.451556,9.825412,-9.626135,0.857792,1.188938,-2.071139,-1.302235,-8.217122,-8.251383,0.618500,0.877813,9.371378,0.332327,5.282239,-1.116752,3.491268,-5.451853,-2.040075,0.908732,-7.391916,-6.493297,-2.819610,-5.338590,4.002672,-5.711077,-0.408580,-1.880695,5.088611,-8.672016,-5.058326,-3.894671,0.496639,-7.630837,3.707538,-5.606893,2.504742,-9.074196,1.800800,-8.810190,5.203799,-5.597847,3.269082,5.797860,-0.145787,6.747610,-3.060847,-9.146176,-8.316315,8.031606,9.735898,-9.777414,5.553792,-3.871400,8.355485,1.523051,6.655662,-8.479338,-1.669453,-0.062959,5.813938,5.603269,8.464777,-7.558569,5.086061,1.650913,7.367567,8.723035,-3.324086,2.103493,-8.191135,-2.349704,-6.449255,-7.329356,-4.850909,-8.262709,1.257255,3.456587,9.616913,-8.012545,7.441754,6.028499,2.920009,6.411750,7.634262,5.310279,-7.608838,2.664167,-7.455743,9.375688,-0.039163,4.895204,-8.164827,-0.143446,-5.120177,-4.418211,-8.904451,-3.361669,-0.210994,6.027821,-5.812798,8.177205,-0.845537,-4.571627,4.045781,4.170805,4.035458,7.257052,4.274035,5.346694,-2.623004,-9.734963,-9.351710,4.720926,-7.864805,-8.802340,9.428036,1.264186,-0.195229,5.142827,-8.422173,-2.710960,8.311080,2.349315,9.180214,-8.271685,-7.534474,8.288998,2.637260,0.119308,2.580663,-2.215721,2.649656,6.354605,4.802485,6.301268,0.495589,5.232075,7.347479,-2.826761,-3.459372,3.697565,2.971506,7.606338,0.961781,-6.172180,-6.257331,2.356300,5.893917,6.041626,5.295579,-6.707663,-0.694311,6.841992,-5.727980,3.640903,-8.884701,8.582361,3.087873,-7.310950,4.213349,7.674527,-0.728502,1.663204,4.233477,-7.230600,-0.314360,-5.409230,7.772680,-0.472669,6.710435,-1.230529,-5.284053,2.813663,-7.703460,-5.607210,-4.871738,2.830562,9.055223,-8.162097,9.711757,3.188894,5.843438,1.240440,-3.748675,-0.258331,1.710395,8.489033,-8.494489,5.529945,0.459661,-5.255656,7.357114,-5.221664,4.546148,-5.747193,0.228547,-8.212569,8.531763,6.789789,5.599499,8.490534,-2.266316,6.969361,5.316915,8.236183,-1.433251,-8.099777,6.832691,-2.196628,-9.764536,-4.969757,5.331313,-5.446272,-1.407099,-3.497139,-4.482664,-1.331483,-5.470238,5.992987,-1.979146,-8.247037,5.530539,-2.713275,7.279484,5.520908,9.609293,-6.815422,-9.182824,2.619741,-1.440523,-3.339992,9.112570,-2.545374,-4.799365,2.411758,-3.043852,-8.977743,2.123092,6.472780,3.064291,-7.787862,-2.489623,0.076456,9.632893,5.994254,-1.748645,-2.189805,-5.837168,-3.363160,3.846752,9.406555,4.640378,0.603321,-6.589025,-1.818257,7.405695,4.582020,5.004747,-0.753136,0.755984,-3.899505,2.101195,-3.408657,9.979857,3.988317,-6.431827,3.100008,-4.895466,-7.196047,5.892779,-7.040451,7.219323,-7.012546,3.996839,-9.813550,-5.773103,-3.298587,3.793389,1.169808,7.153979,5.895578,4.718689,-7.390361,5.345931,-0.818012,6.928554,6.300604,-4.181926,2.755200,-6.655465,8.827547,-3.342799,7.664862,-4.288514,7.052225,6.454659,3.213913,4.368603,-9.426997,5.205745,7.255132,2.715987,0.650485,-0.831345,3.291999,-2.852404,7.074652,1.750033,4.897662,6.900024,2.385827,1.599665,1.086948,-0.020733,-1.569456,-8.018867,-3.115083,-6.006758,-5.502144,-6.250583,-3.302644,-0.046163,-8.337931,-6.729867,2.992684,-3.461442,-0.900524,9.880092,-0.875649,6.911124,1.587168,-5.210943,2.399853,-4.480706,4.222542,-2.383177,4.438269,8.625389,-9.099205,9.283671,9.898776,-0.632957,-6.351579,6.600124,-7.264486,9.457510,-3.084380,0.004925,-2.829238,0.992826,3.566965,8.942957,-9.047879,-0.016797,-2.831137,-0.565937,3.066280,4.986028,0.173500,-3.119934,4.949373,0.951185,8.683225,-5.934988,-6.355404,8.336346,2.862514,4.686925,3.713060,-8.756990,1.297565,0.213132,5.416334,-0.308340,8.272104,-7.028911,-6.935517,-8.258696,8.785952,-5.833607,6.892926,0.275500,-1.047481,-3.203201,-3.148492,-9.021486,-0.460575,-8.742654,-9.155672,-1.379916,4.846537,5.487241,-1.704547,0.581522,-9.614498,-5.269616,8.403691,-9.762344,-2.488062,5.553063,1.733104,-1.215771,5.972385,8.175971,-1.903410,9.999342,6.737708,4.594102,-1.009062,0.534766,-8.351588,-1.664440,5.088084,-6.176101,-4.870903,-5.901289,8.806265,1.050306,1.312505,-7.226406,-2.059960,1.628408,-4.233732,3.310709,1.706872,2.368041,-5.589159,8.308160,-5.054265,4.543211,2.754454,-9.189199,8.444442,0.850229,7.697677,-7.043852,0.612704,9.762799,-7.999031,-5.674119,3.937136,-6.932181,-5.072657,7.429001,3.492749,7.032559,-7.193671,4.188666,5.325806,-4.427320,-5.807578,-2.996824,-0.970343,-3.786711,-0.282951,-9.919740,-3.488920,-1.223761,-6.991576,-3.330334,-7.470846,-5.990659,3.148259,-7.959312,-6.616046,0.269929,7.933584,-2.935995,3.975069,3.847454,2.446698,2.128070,-3.542290,-6.224001,1.339714,-8.786072,-9.954245,-6.429904,-5.712358,-1.836643,9.720279,7.269102,8.266464,-6.495913,-3.439725,3.092623,3.616492,-5.214555,-7.094113,-5.519584,0.999705,6.852335,6.855462,1.113867,1.557719,-7.585554,-0.138849,3.231829,9.853809,-2.762252,9.492649,-5.206385,4.246035,-2.684157,6.557601,0.382308,9.332718,9.057959,9.280286,-2.879557,-4.691079,5.295733,7.646814,3.630197,5.588938,-6.427638,4.125755,0.865067,6.253320,-9.532926,6.064504,1.013371,-4.548442,8.068676,-6.103462,-8.114185,3.706258,9.792260,2.844567,3.588465,-8.648374,3.965135,-3.267361,-6.268047,2.768420,8.039785,6.164131,4.341621,8.420377,3.455710,4.801412,-9.208961,1.895709,6.809245,-6.691839,0.414567,-5.035986,-7.586023,-7.331180,3.727679,5.338376,-5.686461,8.470121,2.234057,-1.429777,-0.090243,-2.033816,-5.065818,-9.696083,-1.743680,3.175074,-6.380966,2.386531,-6.118458,5.653258,3.409689,-1.116424,7.982346,2.266606,-1.394481,9.292320,1.612710,-1.252159,-5.236149,5.014633,9.991139,-9.133880,5.339529,6.423244,4.288562,9.686927,5.484845,-6.606825,8.871411,1.918955,-6.560223,0.063074,0.394821,6.378220,-7.404285,-7.396989,8.950296,7.592201,-4.588618,1.194844,-3.682489,-4.580802,-7.761902,-8.390070,6.050441,-8.585303,7.887728,6.966201,8.140530,-3.802302,-0.320845,7.821113,6.664174,-4.897081,6.127102,-8.829756,-0.517935,-1.194278,9.999088,-5.536387,-0.775423,-1.505589,-0.558545,-2.402746,0.092238,-5.133365,-0.866159,7.742319,-1.275232,7.024258,0.553374,9.840425,2.156941,9.024295,6.882645,9.541045,-3.984687,4.252480,7.250355,-4.013648,-5.057702,-9.540879,-7.181352,-5.037268,4.224894,2.312738,7.754950,-9.400310,-6.330012,-0.161785,-1.923903,5.703687,5.230116,6.204583,4.911316,6.041900,-5.396156,-7.988008,-2.515372,-2.290023,-5.874698,-7.252554,-5.988707,-0.312555,-8.373864,-7.614583,-9.800478,0.218394,-1.981245,6.819542,-0.709632,8.362526,-3.102166,-3.572820,4.669867,6.829872,-8.003262,9.769089,-9.506375,7.546104,-3.171357,8.591776,2.041805,1.760641,-7.130200,9.265013,6.933342,3.982937,-7.985789,-9.996253,-6.870970,-6.773404,-3.433231,-8.388744,1.128211,0.518561,0.807654,1.296874,-2.846890,8.386965,5.727626,8.737105,7.086789,-8.041370,-7.259605,1.815017,-4.220654,7.323560,-3.672857,-9.787934,8.444402,7.833827,-6.909891,-8.369883,0.649786,3.175799,-1.611474,-8.401685,-8.128306,-0.635559,4.035883,1.206808,5.448523,-0.496782,-3.109709,7.639482,9.602072,7.693232,3.541234,-9.431724,3.251289,0.913038,-5.668513,0.784012,3.467451,-2.987452,-5.849162,-5.478677,-5.924334,5.998938,6.931437,9.561788,0.221925,6.183438,-4.368547,-0.184316,6.585136,7.838768,5.026012,-9.115941,-0.042253,1.326331,1.010319,-8.201701,4.036263,-0.244135,2.571183,7.370875,-4.689051,9.662640,-6.797506,-2.503348,-6.314264,2.914394,0.796069,-5.126691,-3.250553,-9.624177,7.357347,-4.201248,-6.458280,-4.852624,-4.511320,-2.767446,-1.910174,5.180386,6.724021,-9.927340,1.349707,5.238751,-1.079999,4.792955,-3.905017,-6.487278,-6.785407,-3.778364,7.045410,-5.691441,-5.698948,1.485353,6.478192,4.402768,-3.440461,-5.612821,8.666776,-9.411746,3.763286,5.698026,0.327328,7.332181,-3.178544,-6.928768,-4.805685,1.101728,-5.065728,9.444397,6.971127,-5.667680,2.910243,8.785553,2.268479,-9.009597,6.200085,-5.578866,4.469413,4.606120,4.688996,5.883193,-2.634530,-5.495272,1.582523,-6.595643,-4.773786,8.959423,0.901785,-2.578450,-2.417529,3.999193,-5.498194,3.033802,-0.701860,2.704031,-1.125502,3.729624,6.961660,4.516928,-7.626616,1.015993,1.143948,-4.330882,-5.612851,8.137799,9.654373,-2.679767,-8.462134,0.686909,-2.237053,-1.300495,7.806710,-4.979064,7.593983,-2.094504,1.037252,-2.326232,-5.401354,-6.484845,2.046434,0.987237,-8.019865,7.821880,1.333944,6.346317,0.867696,7.434049,-8.299854,-4.613785,0.470877,9.374244,-7.910682,2.588603,-0.770076,4.881404,2.218323,-0.785214,4.357461,-0.252002,-9.837987,-2.011345,4.161030,-5.207763,3.981903,9.916688,2.101348,-4.303220,-3.137239,-6.098009,5.424623,9.847428,7.565561,-9.904550,0.658471,2.857222,8.197560,7.704503,2.575922,-5.198237,-6.277944,-6.174204,-3.633626,-4.617116,-3.793260,1.430006,-8.212274,6.515805,-4.340877,-1.296963,-9.929451,2.761863,-4.313050,1.824866,-8.162967,-3.771692,9.612005,1.449719,6.733376,3.366102,-2.843090,6.666133,3.376031,-1.574531,4.762808,4.841403,1.357400,0.079063,8.792135,2.654534,-5.713379,0.170768,-5.880220,1.079728,-3.675109,-7.126435,4.388798,6.483699,-3.349635,-5.396407,3.371990,4.002532,-5.487222,-6.467035,1.548347,1.311064,5.368231,-8.049291,4.540584,-4.892168,-9.335571,5.273659,-2.331314,-7.984757,-7.004589,-2.560390,-0.323723,-7.679787,-1.074879,-7.615156,6.731212,0.239944,-2.915282,-5.877538,8.480466,3.981429,8.475858,6.462020,-5.488278,-8.405222,-9.769018,-5.858688,6.225447,4.609102,4.082681,4.251343,-7.522310,1.296332,-4.703972,-8.352815,-5.800124,9.151570,-7.573522,-2.773828,-0.235248,-0.841140,6.113102,9.575058,9.906650,2.373626,1.691355,0.751976,1.242458,-7.227710,5.902363,-6.540406,8.011301,8.485329,-2.866638,-9.362730,8.034255,-4.967247,2.656515,0.557093,-6.546582,8.367816,4.051732,1.669457,9.601405,6.227672,6.818294,0.581738,7.694326,-9.745554,-0.150651,5.719101,2.834197,-7.156678,1.263417,-4.949236,-4.566912,9.113847,-7.744579,6.407936,8.002915,-3.601524,-2.720003,4.867814,1.869617,7.916137,-4.988980,0.911818,-6.636346,-2.846641,6.398191,-9.152479,-1.205407,5.994491,-3.749515,-0.339511,8.678529,-1.323279,-3.773039,-3.300361,-7.915271,9.091788,-9.443116,-6.511145,1.938329,-1.398526,1.741653,-5.972669,2.360013,8.943695,-7.214306,4.091061,-9.528627,7.889446,5.747240,-7.039761,-4.398893,-6.300671,-8.068065,5.472750,4.059344,-0.837074,-7.656895,-1.658076,9.754656,-5.128635,9.785208,3.214545,8.836722,4.746583,-6.463598,-9.167886,4.941441,1.554626,-2.276444,1.871535,9.170668,-2.408243,5.819138,3.073512,-1.529564,-3.521817,9.799990,-7.857849,7.177628,2.222768,0.957610,-5.050357,-1.528851,5.320209,-3.437562,-3.512172,-1.982493,-6.027410,9.659214,-5.624817,8.347275,6.282075,9.703151,6.273235,1.101694,-0.831199,3.310487,-4.169486,7.330309,-0.164173,-0.298757,7.816725,0.108174,-5.353723,6.178423,3.961725,-2.712395,0.949060,-2.004372,-7.303217,0.886602,-5.091079,4.411205,-3.704866,-9.368611,-1.517287,6.847080,-7.759379,9.389689,4.338718,4.556217,6.282075,8.272283,4.914410,-2.509311,-9.972348,1.205778,-7.909198,7.891989,2.178760,6.772299,-6.563161,6.572346,7.302827,-5.167549,1.421007,9.963000,4.681743,8.637901,-9.535083,-8.766796,9.619339,-6.036932,-5.316537,-6.454818,3.661838,2.851685,-6.056643,-3.933591,-9.523447,-4.789373,8.979885,-7.947146,-4.109094,1.760815,4.934312,7.017555,6.037651,-0.325844,3.737306,0.763555,-6.666491,9.468286,8.086552,7.144908,-4.929074,6.520224,6.746198,-5.240597,4.446691,2.193615,5.190814,0.021328,-9.166887,-8.710122,-8.821594,-5.135987,-6.270515,6.751157,-5.332358,8.164796,-0.971154,-4.944214,6.112055,-1.655562,-1.086813,8.717701,-9.845493,4.310502,4.880404,3.946524,0.922557,-5.525631,2.598252,-4.076866,-2.461539,-6.994534,-2.111917,8.481950,1.424150,6.977580,8.146739,4.175531,4.739259,-0.621778,-3.207631,6.854147,2.254729,4.386095,4.129197,-8.985359,-1.046430,2.804936,8.289190,-7.683340,-1.597651,1.481861,-8.461465,9.616073,1.836238,-1.843342,6.179332,2.163498,-6.124367,7.771255,-3.471056,3.617373,-0.923231,-6.764812,4.304226,-9.290066,-4.346646,3.237356,-4.745189,-7.474233,-7.405418,4.960567,-1.582527,7.148889,-2.505637,0.826726,-0.090308,0.842706,2.149918,3.095591,-1.910020,-5.398997,1.547906,5.784443,-6.590749,2.087724,7.645693,4.046862,1.004068,-8.471830,8.523093,1.072391,-4.952087,5.896193,-9.825745,3.753793,-6.354248,6.833475,6.414078,-5.053960,-8.213826,8.700945,-0.959662,-1.504183,1.222495,8.717404,-8.744065,-1.095785,1.612006,-0.495116,-0.627161,-1.221859,2.135025,-5.655418,4.954745,-3.412969,-3.915367,4.360665,-4.445275,0.993548,-5.349372,6.367847,6.185878,1.215360,3.891572,-8.392558,9.352766,-0.772637,-3.203089,-8.840373,6.855854,7.348432,-2.069179,5.905560,-7.660906,-5.002246,9.503057,8.139233,8.758384,-6.717776,-8.154643,0.399878,0.545254,-5.721438,-3.403165,9.031819,-3.514892,-2.962453,3.429290,3.005009,-5.323917,-4.838391,6.617770,-4.145376,7.932416,6.573358,4.740119,2.171637,6.446761,-9.692671,-1.436933,2.326321,-6.004029,7.696464,1.541522,-4.042849,-6.052632,-8.114821,-5.581149,6.474658,5.925962,-4.650379,7.822127,4.188047,4.641146,-1.974326,-6.687980,-5.701307,1.535982,-2.155568,1.477393,-6.323351,-2.893772,1.407981,9.022475,-2.680488,-0.883645,6.284338,-8.175235,-1.588009,-4.708948,-2.448266,-0.064283,-1.926237,-4.676485,2.890300,4.203976,-2.568906,-3.205704,-2.248132,-1.930297,-6.205269,9.084528,-4.511391,-5.464526,-0.048449,2.475297,5.160716,6.048003,-0.476819,3.387241,2.324712,5.558420,-8.588940,-1.959372,-5.393847,8.012560,3.541857,-5.772148,-3.663354,-2.225952,-0.689326,8.021076,0.376915,7.660165,8.525039,5.226079,9.407595,-0.303893,-1.136616,-3.020402,0.506137,1.959092,4.054604,-5.393182,5.095366,-2.066963,-7.507266,4.402360,-9.708192,3.951415,0.916592,3.732684,-0.121470,-9.035864,-7.636932,0.684180,-8.538018,-7.834152,-3.035252,-4.203130,6.047480,4.089029,-1.737860,3.213072,7.494318,-6.393346,-6.566588,4.017507,5.455360,9.822718,0.673307,2.782635,-2.809391,3.754962,-5.223339,-0.241008,-2.640967,-3.233512,-4.572728,6.852981,-0.927533,1.719910,0.404678,7.905610,-4.516163,-5.589953,5.939098,-9.470463,4.908819,6.267621,4.401599,1.320011,6.337183,-5.407022,-1.802327,-4.074683,-9.351461,7.248790,-7.112977,-5.191142,1.716577,-9.186893,0.517787,-0.657660,-8.705822,-3.607006,0.425938,0.502467,4.819276,5.881684,-5.916390,6.597155,2.479413,-0.254964,2.094463,-0.187702,-9.583450,-5.192986,0.624913,-5.203054,-6.290905,9.189175,7.560242,-4.896000,9.343488,-1.365494,7.373987,-7.835899,-6.107125,5.754313,4.838708,-9.715517,-5.895665,1.494284,-3.765391,-0.197392,7.123772,-4.307497,-7.745955,3.891749,-0.445362,2.525655,9.969989,-9.373898,8.509725,-2.814598,-8.768288,-1.042615,7.330705,-4.998250,9.771677,-7.253580,7.250481,5.336863,3.826654,4.454968,-0.717454,-9.753121,-5.661358,5.779953,-3.875784,-7.034732,1.839167,2.010133,1.532719,-6.636793,-8.237526,3.569159,7.670718,-9.180333,2.179362,7.761636,-2.884815,-3.837559,-3.298592,-1.296570,1.767081,7.387458,7.556826,1.056084,5.582336,-6.871952,-0.682268,7.263216,-3.999021,-0.609666,9.891737,-9.217057,9.481054,-7.364196,-2.474159,-1.400779,4.883860,-0.508345,1.615624,8.735863,1.142602,-9.770572,1.612391,-5.531463,2.157809,-7.974853,-8.332298,6.093694,6.069427,7.408136,-7.494819,4.682724,-5.114587,6.301147,1.807516,-7.258401,-1.349306,-1.676322,-4.978159,2.044240,2.679149,-5.939453,-5.809412,-8.660741,7.482804,-3.538692,8.400394,2.140911,8.091971,8.023334,-4.976797,-9.355922,0.393562,-9.455968,7.464264,0.633349,0.243325,-2.504577,3.303981,5.711108,-7.342329,4.887825,8.402984,7.885932,5.989905,4.042499,-8.511964,-1.207352,-4.653572,4.093014,-3.130439,3.067713,-6.458533,-6.199647,-5.125061,-5.145802,2.454362,-8.912099,6.641776,4.072110,4.519017,-7.473785,-0.197057,5.922080,6.848871,-1.989705,5.768336,-8.658604,9.073047,-8.772655,-7.709509,9.205658,-5.180738,3.909027,9.078417,-4.796696,0.145475,9.063404,8.769371,5.042970,1.103034,-1.032498,2.821270,8.100262,9.029467,-1.541828,-3.471713,5.858375,0.704556,-4.432054,-9.977501,4.684630,0.829338,2.960607,7.391560,-5.046922,4.619517,-3.412382,7.377897,2.768775,2.516188,-3.660434,5.406955,-7.021735,-9.752526,-6.209890,6.199954,6.566119,-8.272110,1.764606,7.910355,-8.636012,-8.394040,5.842878,-8.691361,7.045078,-0.532280,-9.847824,1.987426,-3.854356,0.850972,-4.419868,8.740736,-0.601524,4.173120,1.083701,9.144076,5.279894,-6.540019,4.374247,3.219871,-6.863625,-8.724912,-4.025948,8.357152,-7.198595,5.439511,5.397087,-3.106125,-7.389526,0.045361,-0.959454,7.378348,5.287954,-6.831950,6.085837,0.570669,7.420324,-1.911191,0.856734,-7.196880,-6.316123,2.752673,-3.753448,7.350991,0.553100,7.830572,1.206314,8.523026,-4.969792,7.152730,2.405812,-2.427971,1.072853,-9.940818,-2.703863,-7.646632,-2.021706,8.740282,5.552845,0.733426,5.361373,-1.828713,-2.241765,8.491476,5.082434,-3.570149,2.111830,3.567986,3.253120,-7.339972,-2.764778,-8.288290,-5.628754,-2.968956,9.164378,-7.509917,-4.463661,2.244765,-0.448389,7.789185,-9.994768,-6.639750,-2.053212,-6.791471,-2.391660,-2.063882,7.430160,0.382453,-4.116970,1.804813,-1.696319,-1.808039,-9.891499,7.646319,2.425988,-8.241470,-8.362925,3.781688,-7.263438,-3.629800,-8.591477,4.212848,2.386180,3.101108,-9.416491,1.280967,-6.317441,5.757291,-0.532328,6.557091,-3.235032,9.838314,4.764462,3.115208,-6.175387,-6.201132,-8.661453,-9.642987,-4.293227,9.324040,-1.909588,3.118649,3.650419,3.490386,7.142883,0.525107,-6.803776,-8.646111,6.413346,7.983774,4.267664,1.941501,6.708146,-2.200226,9.479947,2.083425,-1.630817,5.105051,6.589707,8.562619,3.651576,-6.639634,2.688461,5.180032,8.793945,-2.543839,-0.554886,-8.196115,6.922375,-8.874980,4.678119,-4.697493,-6.286172,2.812593,-9.022877,7.159680,9.901264,7.757649,-9.904437,7.492483,4.506010,3.906850,4.765542,-0.580305,-1.510962,-5.777532,-3.886893,7.458569,-7.230510,-4.775181,-0.926678,-7.460800,-3.339383,-4.422117,9.379894,-0.565752,-9.224913,-7.970042,2.878436,-4.048934,3.317312,0.535080,-9.248789,8.112855,8.347477,2.094388,8.226679,2.951219,-5.378062,-4.049883,-4.939256,-4.909156,-0.489448,-3.297542,0.830891,2.759816,7.445869,-3.662538,-1.444867,-5.427433,-9.164267,0.941155,-3.147528,7.198049,-9.056108,-1.294923,-5.342614,5.811621,6.646148,-9.884399,3.971219,-9.705928,0.075264,-9.725633,-4.856452,7.027396,-0.679834,-5.383163,-6.905943,7.971358,9.619455,7.200468,3.395049,0.232646,-0.564539,0.160894,0.445047,1.997761,9.672668,-2.998981,-7.552777,-4.096388,-1.673792,9.487126,-6.349567,-3.245473,-6.267607,4.889594,-1.388976,4.948126,-7.801254,-1.286607,-9.523899,-2.112637,6.126271,3.136685,2.180034,6.421565,-9.028274,-8.242194,1.474097,-7.283109,-5.788929,8.286527,-7.182909,6.045442,-6.295477,4.380411,4.464647,-7.785056,-2.165434,1.210952,2.524501,-2.518317,0.600031,-0.600223,8.829670,2.590182,-2.139570,-6.481835,2.578879,1.063948,-3.820619,-3.966874,2.258376,-1.224850,-7.549750,6.175928,-2.450906,2.983334,-7.547938,1.246924,-4.537625,4.890906,5.597279,-5.213256,9.849300,-6.320897,-5.842559,-4.921411,6.748879,3.114358,-3.176055,7.361200,-7.631882,-2.895982,-9.186444,-1.643655,-3.730579,4.434510,-8.036891,-4.286034,-9.957653,0.561144,0.497844,-6.988339,-7.384035,-4.515961,-8.065053,-1.257235,-0.069636,1.483196,-7.982778,-1.390929,6.423375,-9.792389,3.544129,1.448459,-2.743422,-4.644749,-4.705901,-1.032175,-3.446096,3.061977,4.643803,-4.817671,4.262914,-3.315982,6.463075,-0.428490,2.807293,-8.797349,-0.240593,-6.324224,-9.142611,-3.366210,5.513511,-4.208693,-0.781253,-9.973273,6.579678,9.714099,-8.508624,-6.972789,-2.416200,-1.947467,6.012047,-7.810989,-6.997492,-6.384716,9.617791,-2.264049,-8.374524,7.722309,-5.516768,-6.611012,-6.765198,-1.698758,3.189130,-8.728801,-5.785813,8.821241,-6.403654,5.440969,-3.642370,6.800372,-7.991849,-3.569193,-7.799778,6.193205,9.859602,-4.818900,-0.837867,-0.334456,1.338117,1.274075,0.726416,-1.993839,5.416437,9.803507,8.572705,3.631221,-2.027961,-0.955520,3.371693,3.906826,3.997545,-2.127008,7.910579,-5.294534,-0.716364,-8.106608,-9.797820,6.215261,-8.933381,-0.875652,1.737098,1.175662,1.476949,6.311572,-1.286837,-3.058375,-6.420433,3.418429,6.296136,7.588171,6.224047,-1.797172,-8.533440,3.565446,-8.388750,-4.096314,-6.995588,3.092157,-0.913695,-3.142949,2.887075,-5.887966,-1.373957,6.450489,3.434779,7.862458,-0.451831,3.981672,1.088117,0.362885,-6.976257,3.813401,-1.123900,-0.625405,2.751701,8.967412,2.156362,2.326999,2.268077,-8.965747,0.885048,6.460868,7.119512,-8.067053,-2.638911,-6.957516,5.692490,7.550503,-2.718458,-1.671248,-6.537175,-2.028612,-2.183447,6.805955,2.221320,-7.486772,5.166163,-0.878269,-0.529139,3.475068,5.576779,9.866201,-3.986136,-3.998025,9.008140,-4.146264,-5.490977,2.675448,-1.249528,-7.635058,-6.033658,-8.364797,-2.243239,-3.736691,3.146286,4.799146], dtype = "float32")#candidate|1551|(2340,)|const|float32
call_1550 = relay.TupleGetItem(func_424_call(relay.reshape(const_1551.astype('float32'), [13, 15, 12])), 1)
call_1552 = relay.TupleGetItem(func_426_call(relay.reshape(const_1551.astype('float32'), [13, 15, 12])), 1)
output = relay.Tuple([bop_1505,bop_1521,uop_1526,call_1531,var_1532,call_1550,const_1551,])
output2 = relay.Tuple([bop_1505,bop_1524,uop_1528,call_1533,var_1532,call_1552,const_1551,])
func_1559 = relay.Function([var_1498,var_1503,var_1532,], output)
mod['func_1559'] = func_1559
mod = relay.transform.InferType()(mod)
mutated_mod['func_1559'] = func_1559
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1559_call = mutated_mod.get_global_var('func_1559')
var_1561 = relay.var("var_1561", dtype = "uint32", shape = (1, 5, 7))#candidate|1561|(1, 5, 7)|var|uint32
var_1562 = relay.var("var_1562", dtype = "uint32", shape = (550,))#candidate|1562|(550,)|var|uint32
var_1563 = relay.var("var_1563", dtype = "uint64", shape = (286,))#candidate|1563|(286,)|var|uint64
call_1560 = func_1559_call(var_1561,var_1562,var_1563,)
output = call_1560
func_1564 = relay.Function([var_1561,var_1562,var_1563,], output)
mutated_mod['func_1564'] = func_1564
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1716 = relay.const([[[9,6,3,-7,2,-3,-6,6,9,1,-3,-9,-7]]], dtype = "uint16")#candidate|1716|(1, 1, 13)|const|uint16
var_1717 = relay.var("var_1717", dtype = "uint16", shape = (3, 7, 13))#candidate|1717|(3, 7, 13)|var|uint16
bop_1718 = relay.logical_xor(const_1716.astype('uint16'), var_1717.astype('uint16')) # shape=(3, 7, 13)
output = bop_1718
output2 = bop_1718
func_1731 = relay.Function([var_1717,], output)
mod['func_1731'] = func_1731
mod = relay.transform.InferType()(mod)
mutated_mod['func_1731'] = func_1731
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1732 = relay.var("var_1732", dtype = "uint16", shape = (3, 7, 13))#candidate|1732|(3, 7, 13)|var|uint16
func_1731_call = mutated_mod.get_global_var('func_1731')
call_1733 = func_1731_call(var_1732)
output = call_1733
func_1734 = relay.Function([var_1732], output)
mutated_mod['func_1734'] = func_1734
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1796 = relay.var("var_1796", dtype = "float32", shape = (3, 12))#candidate|1796|(3, 12)|var|float32
uop_1797 = relay.acosh(var_1796.astype('float32')) # shape=(3, 12)
func_229_call = mod.get_global_var('func_229')
func_233_call = mutated_mod.get_global_var('func_233')
const_1801 = relay.const([[7.795472,5.283544,-4.394264,6.652705,-5.943969,7.697565,2.449195,6.886836,-1.512571,-7.253360,5.517415,8.779995,-5.145842,0.968502,2.847665,1.542801,-8.282190,-4.218436,8.091767,8.875730,8.636273,-1.738777,-1.273716,6.592931,-8.160944,-9.973918,-6.053725,-8.191440,-3.230641,7.383384,-9.753607,4.455524,-4.507973,0.941873,1.664309,4.297917,-7.085060,-1.281880,7.774556,4.838830,6.300441,7.015982,0.522242,-5.906173,6.754117,7.976527,-7.366530,-4.287178,-5.243482,1.513363,-7.318186,2.341227,-4.825800,0.492589,7.907437,9.337573,-6.468274,1.105738,-6.736158,-7.009787,4.658830,3.980965,-8.026148,-6.146377,-0.653083,-5.189107,-3.500763,9.230006,7.676816,6.661467,3.516874,-5.449317,2.063121,7.405159,9.072677,-2.857464,5.374276,5.237396,3.595389,8.355322,2.543930,0.660365,1.950638,-1.729422,8.332589,6.621413,-1.637788,2.467335,4.686918,5.034935,-8.977761,-0.703742,4.905735,4.595380,2.721417,-9.676466,-0.406569,8.838618,-0.823539,0.440945,3.259035,-0.347579,-3.132591,9.521808,-4.639575,-5.607343,-0.087283,8.704955,-3.957415,1.685345,5.485413,-8.029865,6.604309,1.337321,0.148693,9.397396,4.959834,-2.142065,4.100505,-9.514206,-2.733931,-1.887426,0.887535,6.923779,-2.269413,6.091096,-5.561737,-7.316475,4.093517,-6.327251,-7.893674,6.050272,0.226316,5.933043,-9.599608,8.614208,-4.772912,6.618701,3.959723,-5.268243,0.243004,6.610659,7.140807,9.917221,2.283685,-5.657585,-9.378638,6.734083,9.945057,-3.643702,-1.615913,9.139481,-0.800385,-5.599012,6.316649,5.547194,8.111869,-1.725433,-4.067720,0.471836,7.409311,0.841263,-0.409403,-0.753949,8.695062,6.774266,-0.882652,4.747709,6.266472,-4.364307,-8.157758,-2.367170,-3.186571,-6.758354,-1.014554,-2.647714,9.216504,5.725243,-8.945746,-7.474966,5.277068,-8.705568,-9.453564,-7.479550,0.591025,-7.914683,-9.460526,9.171282,0.449752,-0.610872,-0.338701,-0.566698,-8.656144,2.764739,3.943218,7.747538,2.950576,-9.403718,2.802613,0.863754,0.175279,-8.669888,-5.173734,-5.996696,4.218813,-2.123973,6.778317,-1.581303,-5.265856,-7.048566,1.947878,-2.126726,1.108778,-2.125582,2.170450,-1.134726,1.260398,0.880910,-4.010109,4.912832,-7.073055,2.688752,-6.324788,3.429933,6.605401,-6.710870,1.854539,4.801835,5.398268,5.900664,-0.456973,0.358955,-2.995078,5.576606,-4.666663,8.240780,-4.192584,-8.665390,-5.784972,-1.286752,-4.278350,-0.260503,7.592809,-9.274662,4.613626,-0.834809,5.384961,3.621812,-2.076776,8.524877,5.277253,3.658045,5.185980,0.614605,9.047435,-3.899798,-1.218840,-5.566855,-9.876073,2.437184,-5.735066,5.987392,2.358166,-1.088224,-5.678349,6.056236,-6.383076,1.684900,-7.059735,1.876453,-6.213809,3.743382,-8.867840,2.143599,0.816500,-4.872588,-8.018906,3.481065,-4.487413,6.131653,3.187736,-1.166384,9.652304,-2.048753,-6.977910,8.332152,4.459091,-8.509467]], dtype = "float32")#candidate|1801|(1, 288)|const|float32
call_1800 = func_229_call(relay.reshape(const_1801.astype('float32'), [16, 6, 3]), relay.reshape(const_1801.astype('float32'), [16, 6, 3]), )
call_1802 = func_229_call(relay.reshape(const_1801.astype('float32'), [16, 6, 3]), relay.reshape(const_1801.astype('float32'), [16, 6, 3]), )
func_1559_call = mod.get_global_var('func_1559')
func_1564_call = mutated_mod.get_global_var('func_1564')
const_1810 = relay.const([-8,-2,-7,7,-3,-2,1,-6,1,8,-7,-5,4,1,6,3,-8,4,-3,5,-10,-2,2,-8,1,4,1,-8,9,-10,-9,9,-1,5,6], dtype = "uint32")#candidate|1810|(35,)|const|uint32
const_1811 = relay.const([-6,6,10,-3,-10,-10,-8,-5,8,-4,-10,6,-9,-5,-10,10,-7,4,-2,8,-5,2,9,-2,7,-5,10,10,4,-4,-2,-10,3,-8,-2,7,-7,3,-8,-4,-1,-2,2,-8,-9,-1,-9,2,7,-4,-8,-8,-2,2,4,-7,-5,-5,2,5,8,-2,7,6,6,4,-5,-1,-1,-8,-9,1,-3,2,2,7,-5,6,5,-7,5,6,-2,-6,-8,-2,-9,-2,1,-8,-3,-4,3,10,5,-8,-9,-10,-1,-5,-3,7,-10,-2,5,6,4,6,-2,-5,6,-7,10,-5,8,-2,-9,-10,-10,-1,-4,-2,-7,-6,-7,-5,-8,5,4,3,-1,2,3,-8,6,-7,6,-9,-10,-3,-9,9,3,-9,5,10,6,6,5,2,3,4,-9,-4,1,5,6,-9,-7,7,-10,-5,-10,-6,5,10,9,9,8,-6,-9,-1,4,-3,8,-2,8,7,-8,-4,-2,3,8,-1,7,7,10,-2,-8,7,6,8,-5,-1,9,10,-2,5,6,8,5,1,3,-2,-8,-9,-6,-8,2,-8,7,-2,-10,8,-3,1,-2,-3,-4,6,-2,6,-3,-1,-4,-4,6,7,-3,3,-1,-1,-9,-8,7,-6,-2,-9,7,-8,8,1,9,9,4,5,-8,-8,1,1,3,-9,8,-10,7,-7,1,6,-9,-10,-8,-10,-3,5,-6,6,-2,6,4,-6,-1,5,-2,-2,7,-5,10,3,-4,9,-5,-1,1,-8,3,-3,8,8,10,-2,-3,2,-2,7,5,8,-1,6,8,7,9,-6,10,8,4,-7,-9,-8,-5,-7,-3,10,-5,5,2,3,-4,8,-10,1,10,-1,-10,2,-6,-8,3,2,-4,-1,1,-8,10,-6,-6,-6,-9,-5,-8,4,5,4,10,8,-4,-2,1,-9,-8,5,6,-10,10,3,2,3,-9,-7,-4,-7,-4,-3,-9,-9,-1,-10,-6,1,-6,6,-2,-7,-8,2,-1,-10,7,1,-10,-2,-3,-8,-3,-6,1,-6,3,-6,8,-4,-6,-4,-2,9,-5,2,3,8,-7,6,-8,-3,-6,3,4,4,4,2,-3,5,-2,-6,7,3,-10,-5,3,-9,-4,4,-2,9,6,-9,2,5,-2,-1,6,-4,4,3,7,6,-6,1,-9,-1,4,4,-5,2,-1,-6,-6,1,2,-7,10,10,6,-4,-4,1,-9,5,-5,9,1,-3,10,9,2,8,-9,-7,-10,1,-10,-3,9,-10,7,10,-9,-5,1,-8,9,-2,-4,5,-2,1,1,8,4,-2,-9,10,-9,4,10,10,8,10,-3,-10,-3,4,7,-4,1,-5,-10,8,-4,9,4,5,-3,8,4,-8,10,-3,-7,-1,2,-9,-3,-4,-9,2,2,9,-6,1,6,-9,5,-7,-6,1,4,-2,6,3,7,-3,5,-6,1,-1,9,7,-9,-4,-3,-4], dtype = "uint32")#candidate|1811|(550,)|const|uint32
var_1812 = relay.var("var_1812", dtype = "uint64", shape = (13, 22))#candidate|1812|(13, 22)|var|uint64
call_1809 = relay.TupleGetItem(func_1559_call(relay.reshape(const_1810.astype('uint32'), [1, 5, 7]), relay.reshape(const_1811.astype('uint32'), [550,]), relay.reshape(var_1812.astype('uint64'), [286,]), ), 4)
call_1813 = relay.TupleGetItem(func_1564_call(relay.reshape(const_1810.astype('uint32'), [1, 5, 7]), relay.reshape(const_1811.astype('uint32'), [550,]), relay.reshape(var_1812.astype('uint64'), [286,]), ), 4)
func_1731_call = mod.get_global_var('func_1731')
func_1734_call = mutated_mod.get_global_var('func_1734')
var_1815 = relay.var("var_1815", dtype = "uint16", shape = (273,))#candidate|1815|(273,)|var|uint16
call_1814 = func_1731_call(relay.reshape(var_1815.astype('uint16'), [3, 7, 13]))
call_1816 = func_1731_call(relay.reshape(var_1815.astype('uint16'), [3, 7, 13]))
func_1077_call = mod.get_global_var('func_1077')
func_1080_call = mutated_mod.get_global_var('func_1080')
const_1828 = relay.const([[1.213397,9.696030,1.144969,-5.689529],[-4.483883,3.433408,8.507385,9.430310],[-3.987790,6.067922,7.319602,8.105198],[-7.499630,9.539770,-1.418999,5.519869],[-6.387564,-0.959967,8.298917,-1.030959],[4.230302,2.425144,-7.336817,-0.102912]], dtype = "float32")#candidate|1828|(6, 4)|const|float32
call_1827 = func_1077_call(relay.reshape(const_1828.astype('float32'), [2, 1, 12]))
call_1829 = func_1077_call(relay.reshape(const_1828.astype('float32'), [2, 1, 12]))
uop_1849 = relay.cosh(call_1809.astype('float64')) # shape=(286,)
uop_1851 = relay.cosh(call_1813.astype('float64')) # shape=(286,)
uop_1858 = relay.asin(const_1801.astype('float64')) # shape=(1, 288)
bop_1868 = relay.bitwise_xor(uop_1858.astype('uint32'), relay.reshape(const_1801.astype('uint32'), relay.shape_of(uop_1858))) # shape=(1, 288)
output = relay.Tuple([uop_1797,call_1800,const_1810,const_1811,var_1812,call_1814,var_1815,call_1827,const_1828,uop_1849,bop_1868,])
output2 = relay.Tuple([uop_1797,call_1802,const_1810,const_1811,var_1812,call_1816,var_1815,call_1829,const_1828,uop_1851,bop_1868,])
func_1876 = relay.Function([var_1796,var_1812,var_1815,], output)
mod['func_1876'] = func_1876
mod = relay.transform.InferType()(mod)
var_1877 = relay.var("var_1877", dtype = "float32", shape = (3, 12))#candidate|1877|(3, 12)|var|float32
var_1878 = relay.var("var_1878", dtype = "uint64", shape = (13, 22))#candidate|1878|(13, 22)|var|uint64
var_1879 = relay.var("var_1879", dtype = "uint16", shape = (273,))#candidate|1879|(273,)|var|uint16
output = func_1876(var_1877,var_1878,var_1879,)
func_1880 = relay.Function([var_1877,var_1878,var_1879,], output)
mutated_mod['func_1880'] = func_1880
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1967 = relay.var("var_1967", dtype = "float32", shape = (12, 4, 13))#candidate|1967|(12, 4, 13)|var|float32
uop_1968 = relay.sinh(var_1967.astype('float32')) # shape=(12, 4, 13)
uop_1981 = relay.cosh(uop_1968.astype('float32')) # shape=(12, 4, 13)
output = relay.Tuple([uop_1981,])
output2 = relay.Tuple([uop_1981,])
func_1988 = relay.Function([var_1967,], output)
mod['func_1988'] = func_1988
mod = relay.transform.InferType()(mod)
var_1989 = relay.var("var_1989", dtype = "float32", shape = (12, 4, 13))#candidate|1989|(12, 4, 13)|var|float32
output = func_1988(var_1989)
func_1990 = relay.Function([var_1989], output)
mutated_mod['func_1990'] = func_1990
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2535 = relay.var("var_2535", dtype = "float32", shape = (6, 15, 7))#candidate|2535|(6, 15, 7)|var|float32
uop_2536 = relay.sinh(var_2535.astype('float32')) # shape=(6, 15, 7)
bop_2542 = relay.less(uop_2536.astype('bool'), relay.reshape(var_2535.astype('bool'), relay.shape_of(uop_2536))) # shape=(6, 15, 7)
uop_2547 = relay.asinh(uop_2536.astype('float64')) # shape=(6, 15, 7)
func_921_call = mod.get_global_var('func_921')
func_923_call = mutated_mod.get_global_var('func_923')
const_2556 = relay.const([-4.613389,-8.559842], dtype = "float32")#candidate|2556|(2,)|const|float32
call_2555 = relay.TupleGetItem(func_921_call(relay.reshape(const_2556.astype('float32'), [1, 1, 2])), 0)
call_2557 = relay.TupleGetItem(func_923_call(relay.reshape(const_2556.astype('float32'), [1, 1, 2])), 0)
func_424_call = mod.get_global_var('func_424')
func_426_call = mutated_mod.get_global_var('func_426')
var_2563 = relay.var("var_2563", dtype = "float32", shape = (90, 26))#candidate|2563|(90, 26)|var|float32
call_2562 = relay.TupleGetItem(func_424_call(relay.reshape(var_2563.astype('float32'), [13, 15, 12])), 1)
call_2564 = relay.TupleGetItem(func_426_call(relay.reshape(var_2563.astype('float32'), [13, 15, 12])), 1)
func_1458_call = mod.get_global_var('func_1458')
func_1460_call = mutated_mod.get_global_var('func_1460')
const_2568 = relay.const([2,-5,-9,4,-10,-3,5,1,2,5,-7,10,1,6,-1,-9,3,8,5,-3,-4,-1,-8,10,-4,-8,8,-10,-1,-6,-5,5,-1,9,-4,2,1,-8,6,10,5,-3,-6,-1,-3,-9,-4,-6,7,10,10,-9,7,-9,-7,5,7,-4,-2,7,-4,4,1,2,5,-9,-5,-3,8,-5,1,7,-5,10,-6,3,-5,7,-4,4,-2,-4,3,-9,-1,8,-2,9,-5,-7,8,-10,-4,9,-9,-9,7,-8,-3,5,-9,8,-7,-9,8,3,5,-6,-2,10,9,-4,5,9,9,3,-7,9,10,6,5,1,-3,-10,-4,-8,-10,-9,4,-4,-4,-9,8,6,-10,-3,10,-5,-2,7,7,-9,8,1,-6,3,2,2,3,-5,10,6,-3,-2,9,-3,7,-1,-7,-6,-9,-6,4,10,-8,8,6,-8,8,6,-1,2,-8,-4,-7,-2,1,9,8,1,-8,-3,-5,-3,-3,8,7,-4,3,4,6,10,3,-3,1,-4,4,-3,-10,-10,7,-9,-8,-1,-8,-4,-10,4,-4,-2,-2,3,-6,3,-5,1,2,6,10,2,-2,-6,1,-6,8,9,4,6,-10,-6,-3,-7,-6,5,-2,-5,3,9,-1,10,-2,-9,-3,-8,3,10,-2,1,1,5,-2,2,-4,-1,7,-6,10,-9,2,6,3,3,4,-5,-9,10,3,-9,4,-3,9,2,-7,-2,8,6,5,-9,3,-6,6,-4,-10,5,-2,5,-10,-3,-7,5,5,7,3,1,-1,8,2,6,4,-6,-2,8,-9,8,-5,1,6,-2,-3,-5,-1,-2,5,-5,-1,-7,-3,2,7,-5,-3,-6,4,8,-2,-4,3,4,-5,-1,1,7,7,3,9,10,-6,-3,-2,-10,1,7,-1,6,-1,10,6,-7,9,9,-10,2,-3,6,5,2,-9,1,-2,-4,3,7,1,4,-4,10,4,-9,8,-4,9,-8,-7,-6,4,-1,4,-8,-10,7,-7,-7,10,8,9,-8,10,-7,-4,7,5,-7,-6,7,9,-1,2,7,-3,-9,-9,-3,4,-7,6,-6,-1,-1,-8,-4,-2,-3,-2,4,5,8,-2,-2,-2,3,-4,9,2,4,-6,-6,5,3,-10,-3,-2,-9,-3,-9,2,4,-2,3,3,-5,6,-9,3,-8,-9,-9,3,3,1,-2,-3,8,9,1,-9,-1,8,-7,2,-3,6,1,-10,-5,6,3,-4,-7,2,-3,4,9,-5,-2,-2,7,-7,-9,-3,-7,4,10,-10,-8,-7,-5,-6,3,-1,-8,10,-4,4,-7,10,5,3,-1,-4,-5,-2,2,-7,3,9,-10,7,-9,9,-7,9,4,-7,5,6,2,2,-9,-8,6,4,-8,2,-3,1,-10,1,-2,-1,-10,7,-8,-6,10,9,-3,4,5,9,6,9,-2,-2,-9,-1,3,-10,1,-5,-4], dtype = "uint32")#candidate|2568|(550,)|const|uint32
call_2567 = func_1458_call(relay.reshape(const_2568.astype('uint32'), [10, 11, 5]))
call_2569 = func_1458_call(relay.reshape(const_2568.astype('uint32'), [10, 11, 5]))
output = relay.Tuple([bop_2542,uop_2547,call_2555,const_2556,call_2562,var_2563,call_2567,const_2568,])
output2 = relay.Tuple([bop_2542,uop_2547,call_2557,const_2556,call_2564,var_2563,call_2569,const_2568,])
func_2582 = relay.Function([var_2535,var_2563,], output)
mod['func_2582'] = func_2582
mod = relay.transform.InferType()(mod)
mutated_mod['func_2582'] = func_2582
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2582_call = mutated_mod.get_global_var('func_2582')
var_2584 = relay.var("var_2584", dtype = "float32", shape = (6, 15, 7))#candidate|2584|(6, 15, 7)|var|float32
var_2585 = relay.var("var_2585", dtype = "float32", shape = (90, 26))#candidate|2585|(90, 26)|var|float32
call_2583 = func_2582_call(var_2584,var_2585,)
output = call_2583
func_2586 = relay.Function([var_2584,var_2585,], output)
mutated_mod['func_2586'] = func_2586
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2851 = relay.var("var_2851", dtype = "uint32", shape = ())#candidate|2851|()|var|uint32
var_2852 = relay.var("var_2852", dtype = "uint32", shape = (13, 14, 16))#candidate|2852|(13, 14, 16)|var|uint32
bop_2853 = relay.bitwise_or(var_2851.astype('uint32'), var_2852.astype('uint32')) # shape=(13, 14, 16)
func_1077_call = mod.get_global_var('func_1077')
func_1080_call = mutated_mod.get_global_var('func_1080')
const_2859 = relay.const([-4.316017,9.395209,-1.681293,-8.078622,5.154423,-5.456993,-1.219579,-3.539827,0.766416,-9.174656,3.655496,-7.199458,-5.985815,-6.808989,-1.476284,1.291404,-7.397179,-6.134336,2.010136,-8.884089,-6.545525,-1.772717,-2.068480,4.474909], dtype = "float32")#candidate|2859|(24,)|const|float32
call_2858 = func_1077_call(relay.reshape(const_2859.astype('float32'), [2, 1, 12]))
call_2860 = func_1077_call(relay.reshape(const_2859.astype('float32'), [2, 1, 12]))
output = relay.Tuple([bop_2853,call_2858,const_2859,])
output2 = relay.Tuple([bop_2853,call_2860,const_2859,])
func_2870 = relay.Function([var_2851,var_2852,], output)
mod['func_2870'] = func_2870
mod = relay.transform.InferType()(mod)
mutated_mod['func_2870'] = func_2870
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2870_call = mutated_mod.get_global_var('func_2870')
var_2872 = relay.var("var_2872", dtype = "uint32", shape = ())#candidate|2872|()|var|uint32
var_2873 = relay.var("var_2873", dtype = "uint32", shape = (13, 14, 16))#candidate|2873|(13, 14, 16)|var|uint32
call_2871 = func_2870_call(var_2872,var_2873,)
output = call_2871
func_2874 = relay.Function([var_2872,var_2873,], output)
mutated_mod['func_2874'] = func_2874
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3027 = relay.var("var_3027", dtype = "float32", shape = (13, 9, 9))#candidate|3027|(13, 9, 9)|var|float32
uop_3028 = relay.sinh(var_3027.astype('float32')) # shape=(13, 9, 9)
func_1458_call = mod.get_global_var('func_1458')
func_1460_call = mutated_mod.get_global_var('func_1460')
const_3033 = relay.const([-4,6,-4,3,-9,-5,4,-4,9,-9,6,6,-1,10,-9,-2,-1,-4,1,-5,10,-3,7,1,5,-5,-1,-2,10,-4,10,1,4,6,-5,-6,-2,-9,6,-9,10,-3,4,5,-7,2,5,-9,-9,6,8,8,3,-9,9,-2,-1,-2,-8,9,-4,-3,6,-1,6,8,-1,4,-6,-3,-10,-4,7,5,10,3,7,-4,7,-8,5,7,-4,10,-3,-3,-7,5,10,1,8,-4,9,9,-7,9,5,-8,6,-7,2,-3,4,10,1,-3,-5,-5,-7,10,-3,6,4,5,3,-8,-1,-1,-8,10,-4,10,2,-6,10,-2,7,-9,1,9,-7,8,-8,4,4,7,6,1,-3,-6,-5,3,6,2,-7,3,8,3,-4,3,-10,-8,-8,-6,-6,-3,1,-4,10,-8,7,-3,5,-10,-3,-9,-3,-9,5,-1,8,-3,-10,9,3,8,-1,4,7,6,-6,2,9,-2,9,-7,-9,-7,9,10,-5,9,-1,1,6,-9,10,4,3,6,-1,-8,-5,-1,2,6,4,-3,-10,-5,10,1,-3,1,-2,7,-2,-6,-1,1,10,1,5,-9,8,1,5,-10,-6,-6,10,4,2,8,8,-7,9,4,-3,6,6,9,-1,2,10,8,5,1,-3,-1,8,-3,7,8,-10,-1,-4,-10,1,-2,1,-2,-3,4,-2,1,2,-5,-9,8,1,-8,2,-2,1,4,6,-10,9,-7,8,10,-1,-10,-10,-2,10,8,7,6,3,-9,8,-10,-3,7,-6,-1,2,7,-2,4,8,-5,-1,-2,3,-5,-1,7,5,-5,-10,8,-10,7,4,5,5,-9,-2,-3,2,-3,5,9,3,1,-2,9,-3,-5,8,-1,3,9,10,-8,10,-7,3,-2,-10,4,-1,-4,-9,-3,3,2,-3,9,3,-4,-3,7,-7,-4,2,-6,1,7,-3,9,-4,9,-1,1,-8,-4,-5,8,-10,8,-10,-6,8,-3,4,4,2,-7,4,5,-2,4,2,1,4,-5,-6,9,4,5,-5,-8,-2,10,-3,-9,-5,-6,5,-10,-9,-5,-4,10,-8,6,4,10,10,-2,-6,10,4,-10,-5,9,-5,-2,-1,-7,-7,-2,-8,7,-2,-1,-1,-10,8,3,-8,9,9,2,-6,-6,-3,-6,-1,-7,3,9,-8,1,7,-1,-8,-10,-4,4,-3,-6,1,5,4,-2,1,-5,10,-7,9,6,10,4,-10,7,1,2,-3,3,-1,6,-8,-1,6,7,-7,5,-9,-1,-9,6,2,-3,5,2,-3,-9,1,9,-7,-5,7,2,-8,9,-3,-1,-3,10,2,-7,2,6,-6,-3,9,-7,-7,-4,-4,-6,10,-2,4,2,-3,1,-2,1,1,-1,3,9,-9,-6,-8,1,-2,10,6,1,8,7,10,10,-3,2,-10,-7,-3,-5,-7,-10,1,4], dtype = "uint32")#candidate|3033|(550,)|const|uint32
call_3032 = func_1458_call(relay.reshape(const_3033.astype('uint32'), [10, 11, 5]))
call_3034 = func_1458_call(relay.reshape(const_3033.astype('uint32'), [10, 11, 5]))
output = relay.Tuple([uop_3028,call_3032,const_3033,])
output2 = relay.Tuple([uop_3028,call_3034,const_3033,])
func_3046 = relay.Function([var_3027,], output)
mod['func_3046'] = func_3046
mod = relay.transform.InferType()(mod)
mutated_mod['func_3046'] = func_3046
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3047 = relay.var("var_3047", dtype = "float32", shape = (13, 9, 9))#candidate|3047|(13, 9, 9)|var|float32
func_3046_call = mutated_mod.get_global_var('func_3046')
call_3048 = func_3046_call(var_3047)
output = call_3048
func_3049 = relay.Function([var_3047], output)
mutated_mod['func_3049'] = func_3049
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3609 = relay.const([[[7.179592,-7.355834,3.725253,-2.891544,-1.300668,5.129609,6.757707,5.321847,-0.045388],[4.323123,9.532632,-7.423254,0.044492,7.887847,9.690154,-4.077139,-4.693000,0.345972],[2.446629,-4.340517,0.670982,9.862898,-9.656011,-5.480908,2.590667,-5.216731,9.694790],[-6.606520,5.638206,4.450568,-8.664468,1.005580,-6.051145,-3.224316,-8.361642,0.624865],[-2.426098,-1.167377,7.888395,8.129920,4.114577,9.149105,0.522979,2.158534,-0.121740],[0.564103,-2.419126,6.859035,6.341733,-1.313989,-1.087398,9.876671,-2.734193,2.213343],[-5.783900,-6.536165,-6.608876,-9.313718,5.261977,-3.261560,-7.546550,-5.507918,-8.393420],[1.294924,0.421699,6.030496,-1.765127,1.975465,1.873155,-8.305996,5.789529,3.425849],[9.585308,1.310946,2.725067,-0.187887,6.294278,-0.257832,-2.414189,-7.840080,-4.162196],[-7.613115,-4.999830,4.541087,-2.458230,-9.145194,2.152081,-3.758596,1.737642,4.166946]],[[6.893863,5.521108,0.337380,0.723050,0.483409,8.675126,8.966252,-3.798785,9.692843],[7.304198,-9.720027,-3.162210,3.168179,-5.545714,-4.046052,1.541782,2.869359,4.414956],[6.626166,-1.535515,-0.878936,-1.998870,4.147226,0.550056,-2.896984,0.094851,-9.195465],[-7.229409,-1.653302,1.522438,0.578500,-4.283983,4.765929,6.704837,-9.007291,4.958333],[5.014614,0.879315,1.447479,-0.617381,6.769099,-6.398572,2.154868,-1.357433,0.781528],[-1.279545,-4.737120,0.159117,-0.783185,-4.867766,-2.586917,0.892100,3.549228,4.132662],[-4.401682,7.689672,7.511993,3.609153,-6.312162,-4.464155,8.508800,-1.902161,1.172960],[6.262546,-2.779826,5.920154,-1.134081,8.563246,6.996335,-8.246486,-2.947703,7.515360],[4.457128,-1.152982,-2.712801,6.681256,8.613149,-0.261780,0.379792,8.048830,8.899306],[-4.371903,9.127789,-2.702994,-3.660895,-7.129977,-1.882529,-3.669141,1.408093,2.032076]],[[9.548296,4.927699,1.924561,-5.304578,-1.653704,-3.924258,-7.879109,8.765355,-2.889297],[-9.787796,-7.505641,9.809231,-2.028799,-7.886247,-9.956392,-6.109015,-8.803832,4.715280],[0.161368,-1.538693,4.245384,0.813533,8.147266,1.324803,-4.081279,4.851569,9.169169],[0.869121,-9.607982,1.421021,-3.022048,9.023806,0.571355,-9.831094,-6.845809,-0.303532],[4.102911,6.347445,-4.634580,8.472453,-4.552939,8.077561,1.310583,7.985048,-8.239333],[0.754025,-2.839193,4.648986,9.076207,-9.728439,-2.654156,3.614468,4.236476,1.596420],[9.528986,-3.437607,2.773167,7.425755,0.770916,-3.975779,4.997017,-8.831300,-5.144470],[-0.686059,0.629286,7.296805,9.207424,4.691938,6.173170,2.284037,7.519654,-4.732703],[4.409611,-4.895210,4.156992,2.870999,-9.128385,-6.120167,4.812193,-2.724355,-9.134725],[8.179458,-1.399744,-2.410688,6.525407,-0.134636,8.371917,5.173903,9.843686,7.717597]],[[-0.784216,9.915741,-2.765280,-0.474562,-4.964418,-8.323637,-8.384334,2.227918,6.764621],[4.011164,2.268760,2.832800,-5.579922,7.769149,-1.326000,-8.404635,3.856825,6.909946],[-7.398913,-7.227533,-0.395733,2.090360,-8.671326,3.259348,-6.758528,-3.315799,6.253753],[-7.301038,-4.288698,8.397850,4.423507,4.633062,5.995725,-4.742753,-2.909263,2.137122],[-2.907272,-9.480958,2.135840,-6.509840,-1.684338,1.658234,-2.850181,4.730263,2.259905],[-8.602466,8.000789,-8.975138,-9.328495,-4.488000,2.707302,-9.710991,-2.826733,-8.174993],[-3.812318,9.972024,7.278057,-7.701594,-7.435306,-7.621496,-4.874999,-5.455413,-0.207447],[1.240657,-5.486169,-5.892265,5.963418,6.962668,5.099079,5.363183,-5.639985,-2.609447],[8.987340,2.905071,-1.323658,8.552634,-7.502670,-3.783712,-8.950025,-1.743133,4.493502],[-8.880114,6.436993,-6.308636,3.436184,-6.899716,-0.989924,3.608209,-6.848908,-3.557259]],[[-0.725166,0.604625,3.571233,-1.955628,8.483791,-8.701250,2.754525,6.358625,-3.790659],[4.996896,5.902372,6.533815,-8.809044,9.322845,-2.950984,5.909683,-0.514577,3.695043],[2.500412,4.815351,-7.231764,5.974890,9.123979,-4.635783,1.397126,1.954892,-2.044518],[-0.953843,-0.703950,8.877940,9.925426,7.735411,2.975987,-9.274346,-8.682326,-3.560409],[8.809214,-6.537461,-6.231370,0.420800,-0.858124,5.158292,9.365965,7.873640,4.335857],[-0.837911,-9.364985,-2.181305,4.142230,-6.665836,6.831980,-3.749084,-1.633223,5.768229],[-8.521992,-4.176365,5.127630,2.722808,-4.313357,-1.190440,3.592637,-9.109061,9.111887],[2.720441,5.205543,-7.362077,-6.350065,-2.925729,-5.810282,-7.625881,-2.132693,6.646644],[-7.451836,-3.832843,-3.084402,-8.986368,-8.965397,5.945102,-1.936140,-9.236974,-3.509973],[-3.648871,8.903719,6.006630,-3.705691,-4.350906,0.835593,-4.013045,-5.284868,-2.223567]],[[-0.529361,-2.272159,3.814455,-5.336074,2.767844,-2.478948,7.034593,-3.424315,1.894346],[-8.370202,3.688150,-8.810223,6.917906,-9.741303,7.013254,-7.032652,-2.137835,-0.132787],[-9.172390,4.563199,3.144282,8.408672,-0.575372,-4.226909,9.627245,8.616507,4.821060],[7.243323,-2.156131,3.668497,-7.766946,6.915616,-2.239646,5.701382,-8.422764,-6.086456],[-5.126000,3.308527,-6.638307,-7.702964,-7.409070,-2.766919,7.063360,-4.078054,-8.932069],[4.464886,9.431921,0.554654,7.376876,-5.721842,8.599791,6.285660,-9.495576,-8.854841],[-1.901900,8.820107,-8.444689,8.336663,4.055444,7.248351,8.892472,2.592021,-3.032405],[-5.653057,5.773241,6.003896,-5.838433,-3.517925,7.969076,0.380172,9.981330,0.330687],[-2.206526,4.595678,-4.546359,1.102428,6.193912,1.151027,7.523535,1.073091,-9.825369],[7.125029,-2.784979,-3.999952,-8.975701,8.219319,-4.886942,9.058355,5.348743,-9.429861]],[[-7.399258,1.326111,-7.913556,1.822196,5.748355,-4.660316,6.918499,-8.041870,2.919245],[-0.079820,-1.305864,3.373294,-5.056901,6.109784,6.218530,2.724856,-0.717126,-0.222100],[0.288160,-0.373129,-4.443841,9.137750,3.218523,9.806478,-9.035899,-9.127032,-3.549676],[8.987606,6.481886,-0.327240,-5.349060,-5.522197,6.498566,-2.672406,-2.566372,0.458210],[4.534616,-7.616668,-2.217247,-1.345405,8.776692,5.691424,-3.928769,-8.869908,5.317307],[7.036496,0.630500,-9.754268,-9.170803,6.873834,-4.309885,9.496245,5.991157,-7.374738],[-5.387923,-1.827202,9.057777,0.866286,-7.013968,7.151305,-5.039288,-2.021988,-0.495658],[-1.854777,7.460139,2.013710,-1.145094,0.382761,5.295925,0.095681,-5.559297,1.763604],[4.012935,-8.965790,0.027438,-0.548713,-3.462886,1.100124,2.670967,6.543736,2.243591],[-4.425524,0.265145,-5.488520,8.489119,-3.453733,9.171742,-0.714448,-9.765528,2.256193]],[[-4.687798,-4.116035,-1.688331,-3.845324,7.613569,-8.026087,-8.560762,7.743131,-0.374431],[-0.425342,5.210564,-5.313232,0.048645,-4.047298,1.089343,6.538000,5.343422,-9.656447],[8.250138,6.503394,-7.896866,2.112981,3.505599,-8.859119,-6.706021,0.774604,-1.655049],[1.011781,-3.390051,0.235306,8.314053,-2.834079,-0.001883,-0.847781,5.496513,1.563503],[5.845425,-5.181907,8.882361,-3.502946,-9.085124,9.937672,2.307273,-4.911154,-6.251520],[1.743264,-7.433792,-1.810734,-6.489826,-4.229585,1.453052,7.558263,-2.367977,4.182802],[3.988653,-7.662009,5.906806,-7.228880,-0.486267,2.555795,-4.993321,-1.282586,-3.765594],[-2.557126,4.433477,-7.052180,-1.397583,2.875419,2.803495,-7.354258,-9.854557,-4.237851],[-0.804647,2.201368,0.747128,-8.989771,9.874938,-7.862694,9.316859,2.738388,1.574205],[0.131126,0.495940,1.353184,6.741825,9.215572,-1.533210,-7.287946,-6.791015,9.462692]],[[-5.941297,-9.874684,-4.956313,6.615011,3.410829,-0.058881,-6.474030,-9.076900,-2.481952],[-4.747605,6.582142,1.511628,-8.300811,-3.709863,2.072783,-2.246961,5.353361,-6.618899],[-5.031680,-4.861228,-7.958568,-8.895887,-5.709835,-9.252647,-7.730551,7.928489,2.194809],[5.108034,-6.905714,-5.762443,6.979306,1.568985,7.309432,-4.131699,3.297919,6.313920],[7.026262,-4.326032,-5.337374,-7.415468,9.079788,-8.312698,7.214388,-8.967466,-1.430462],[9.221968,-8.429786,-3.664671,-5.715265,9.525951,1.254552,1.432217,-2.542548,8.988106],[7.576709,-1.511104,3.998290,8.982580,-0.071697,-6.347351,-7.587725,3.771669,-9.963128],[2.173334,-8.773655,-5.454896,7.465163,4.189650,8.176393,7.738231,-6.564755,2.680192],[-2.334837,-0.694289,0.207280,0.699989,7.305864,-1.984871,6.953583,-2.961183,-6.040387],[5.362830,1.052932,6.834487,4.993111,8.469720,-7.884433,7.195903,4.898099,-5.614829]],[[-7.455005,-6.957738,-2.292810,8.704528,-3.889415,5.141225,-7.053066,6.195867,5.786040],[-5.494776,3.299755,5.744947,5.280581,-7.375840,-8.476323,7.750316,6.984232,-2.778916],[-6.042155,6.761744,-2.024155,5.313212,4.254789,-1.488129,1.453928,-0.576323,-2.737917],[3.508737,-9.893733,-3.727292,-5.556921,-3.785634,0.424321,3.270892,-0.947589,4.020389],[1.566241,-1.862774,8.205080,-1.245287,1.019325,2.086850,-5.097873,2.421425,-6.082651],[6.418115,6.056187,-8.506994,9.057076,-2.484828,-8.428625,-5.008662,-1.361859,6.512608],[5.840714,1.912840,-0.516991,-3.796521,0.001321,2.940069,5.076721,-3.203363,-9.031414],[6.342457,-3.158229,-9.021684,7.118175,-3.575007,5.977806,4.117636,0.172564,4.466581],[5.011862,-8.678000,-4.231352,1.648827,7.717413,-8.616466,-5.997615,2.572658,-8.694364],[-6.758715,-3.363057,3.476634,-0.362191,-9.244406,6.398413,8.058956,2.190103,7.442593]],[[9.833631,4.511961,-9.091719,3.976331,7.207090,6.170405,-9.790646,-8.405291,0.754489],[-0.980469,-5.497765,3.295693,-0.728417,8.874390,6.126883,3.634507,8.105082,0.205879],[6.078840,-8.778009,1.400511,-1.871535,7.198056,-2.123638,-0.425621,-2.629224,3.892817],[6.710924,-8.239668,3.922926,1.814975,8.646813,1.036546,0.487660,4.607358,0.995769],[4.054245,-4.389811,-6.560313,3.947590,6.194741,-8.575537,-1.891319,-6.335589,-3.130838],[-6.433322,2.571646,-8.383954,-3.759058,6.584471,7.460512,-6.597711,-8.943584,-9.581072],[2.228448,8.342088,7.997027,5.059443,8.936606,4.943704,1.057864,-8.788572,6.108918],[5.029475,-8.665319,2.388703,7.303439,-3.034095,-5.564527,8.765169,9.440716,-1.063880],[-8.762388,-8.880342,7.057877,2.665873,4.221156,9.131974,-5.364285,-9.716268,5.961814],[-2.230430,1.470231,-5.350939,4.492922,6.125218,6.056428,-5.015732,6.762169,9.986286]],[[-7.135370,9.168493,-4.331461,-0.479877,0.614866,1.997646,-1.444421,5.918890,9.540490],[5.847506,0.776434,8.164286,-6.644948,-9.970997,-7.181206,-6.606498,-8.237332,-3.058540],[1.379408,7.199545,6.096734,1.893826,0.807319,6.382553,4.341289,9.104809,0.177601],[1.181580,-9.940571,1.569160,6.773324,4.596748,6.041823,0.346255,-4.622323,2.961165],[3.432375,5.853490,8.716405,7.852723,1.051461,-1.610753,2.351857,-6.163590,8.974440],[-3.466341,-7.692755,7.107325,6.781093,-4.422381,6.635125,3.727549,-7.475454,3.312494],[5.907640,-7.233204,-4.197590,4.855841,-9.335120,1.518811,2.436233,0.211899,-7.301705],[9.730746,3.494959,8.984027,5.655231,2.437563,-7.363419,-1.805997,-6.979317,-0.762421],[3.899509,-9.368512,-9.085974,2.820151,-3.970533,7.162113,6.870570,-2.646431,-9.908199],[-2.477473,7.302014,3.111713,-8.666146,8.623207,6.788991,7.656687,-4.316018,-5.478996]],[[-9.850167,-4.328653,-2.483126,1.577019,1.930699,-4.657310,2.191879,2.589345,7.238851],[-3.296450,-2.153955,-7.696769,-7.368925,-4.675665,7.057866,6.713499,7.277291,-3.662042],[9.857066,6.151868,-4.856237,-3.895367,-7.580426,-3.926334,-3.984567,-4.149415,-6.434295],[-8.075454,-5.888949,2.394477,-8.962793,9.119902,8.047067,4.147474,4.980904,2.287531],[5.792874,-6.830605,3.881961,7.371825,3.078696,1.041682,-3.083230,-9.246063,-7.645276],[-9.925738,-8.846062,-9.522945,-1.629586,-2.913637,6.706682,9.985724,4.288216,-7.839057],[-3.678550,0.605459,4.670484,0.034542,-7.830438,9.876064,-3.015682,8.281860,7.268380],[-6.615170,-8.191872,-0.049610,-1.264042,-1.709493,1.225055,-6.068318,-7.684579,5.878130],[-6.725800,6.141783,3.564638,-3.655428,-1.202452,-5.424874,0.667285,7.233952,-0.898968],[3.781032,0.335808,-6.123037,1.554305,-0.280203,-6.975347,2.590973,0.782428,-2.402657]],[[7.851510,-4.513751,-2.240787,-8.192179,9.476569,9.960195,1.187904,-9.154603,-7.839267],[3.990975,5.244608,9.783538,7.684360,8.322658,4.999206,4.699783,-9.747953,4.548860],[1.205761,-6.569666,0.644419,-6.707572,9.156182,-7.235734,1.743316,0.829055,9.760230],[3.355634,2.283409,8.284503,-9.892173,-2.997321,-9.745468,5.745566,1.463312,-8.239526],[-7.163782,2.972969,0.759107,7.174316,1.922100,-4.822203,-6.819042,8.446530,-0.718517],[-8.239646,-1.089512,8.986798,-5.426014,-8.443280,-1.847412,0.919642,8.044118,-8.491521],[-1.594697,9.383311,-4.963630,-3.467151,4.087356,3.406753,6.128329,-1.966082,-9.973828],[-9.582499,0.802165,-2.243229,-1.215008,-1.698416,-9.279552,-1.895254,-6.820965,-0.156209],[7.578614,7.014420,-8.156474,-6.316042,1.476124,3.571970,-6.627008,-7.537540,-1.262223],[-5.938380,-5.711976,-5.512526,3.352385,0.670616,0.536075,8.018641,0.213796,4.314197]]], dtype = "float64")#candidate|3609|(14, 10, 9)|const|float64
uop_3610 = relay.rsqrt(const_3609.astype('float64')) # shape=(14, 10, 9)
func_2870_call = mod.get_global_var('func_2870')
func_2874_call = mutated_mod.get_global_var('func_2874')
var_3613 = relay.var("var_3613", dtype = "uint32", shape = ())#candidate|3613|()|var|uint32
const_3614 = relay.const([-3,10,9,-7,10,8,2,8,-3,2,-2,-7,8,10,-5,7,-7,-5,-2,1,-8,3,4,-10,2,3,4,4,-2,-5,3,-6,8,7,4,3,-6,1,-8,7,4,3,-3,-7,1,-3,5,-7,1,-2,1,-6,-2,8,-6,1,8,8,-2,8,9,10,-1,5,-10,-4,4,9,-4,7,2,2,3,1,4,-9,-1,7,5,-1,-8,-5,6,8,10,2,3,-4,-5,-2,-6,-2,-1,8,-10,10,-3,-2,-10,9,-10,-4,6,-1,-4,-9,-5,9,1,-1,-4,3,-5,-8,-7,-5,-9,-10,-8,7,-4,-4,9,-5,9,-3,9,2,-1,9,9,-7,-4,5,-7,-5,9,2,-3,2,4,-6,-1,7,1,2,-3,-10,5,10,-8,-5,-6,-8,-5,-2,-6,-2,-7,1,-8,-9,1,9,-5,-1,3,1,-4,-8,-9,-8,9,4,-2,7,7,10,-5,7,7,4,-4,1,4,-7,-2,-10,6,8,-6,-7,-10,4,-5,7,8,3,-6,10,-6,7,-1,-8,8,6,-8,10,1,5,-4,9,4,2,8,2,-8,-9,-5,-7,-2,10,7,10,-1,-5,7,-4,7,1,-9,-7,-3,5,5,2,6,-9,-1,4,-4,-6,4,10,-8,-7,5,4,-4,7,-5,-7,2,-6,3,-4,9,-7,-9,-6,-7,4,9,-3,8,-10,-10,6,3,4,3,4,-5,-7,-8,-1,-4,-9,4,-5,4,9,-4,-6,6,4,8,-3,9,-1,-1,-1,9,9,4,10,-9,1,-2,2,-9,-9,-4,-3,-10,-9,-7,7,2,1,-8,-5,-8,2,-3,1,-1,-10,3,-8,-8,-6,-7,2,9,-7,-2,3,9,3,-10,-6,5,5,-3,-2,10,-7,3,8,3,-8,-10,-7,8,10,2,-10,6,-4,-8,10,-6,-5,-6,-2,8,4,-1,-6,-10,-1,-6,1,6,-1,-4,4,-7,3,-2,2,3,10,8,-6,-4,-5,8,2,-3,-8,-3,-9,1,-6,6,-5,-8,4,-10,-6,-7,-7,-7,7,-4,-7,9,-9,-9,-5,5,-2,4,-8,-6,1,7,8,-6,4,-2,-7,8,-3,-3,9,-6,-10,9,-7,4,10,-5,-5,-3,-3,9,-8,-7,3,-7,7,-7,6,-5,-3,-10,-10,3,-5,4,3,-7,-2,10,-4,10,-4,8,-3,2,4,2,4,1,4,-7,-9,-6,9,-6,6,-4,-3,8,-7,-5,-2,-7,4,8,-1,7,-1,1,-10,3,-3,4,-1,-5,7,-7,10,-9,-10,-4,-4,-1,3,-5,8,-9,-4,8,-9,4,-4,-7,7,-1,-3,-9,6,-9,3,2,-1,2,-7,-3,-5,4,-7,6,-7,10,1,-8,-1,-4,3,4,10,-1,8,3,2,7,-10,-5,9,10,7,5,-5,10,8,3,-4,2,10,-7,7,-2,-6,-6,2,-5,2,-7,-2,6,-5,-5,-3,2,4,-4,5,8,4,-8,-9,-5,4,9,-1,3,4,-4,7,-10,7,-4,3,4,5,4,-7,-7,3,7,3,-9,-10,-5,10,7,-1,-10,2,-2,5,3,4,-3,5,10,-1,-4,5,5,-5,5,-5,2,8,-4,-7,7,6,10,-1,7,3,-3,3,6,-2,5,5,-5,-9,-5,8,2,3,5,-4,8,-6,-6,8,-8,-2,-10,-8,9,5,-8,8,-9,9,7,-6,1,-3,-2,10,3,-1,-8,-9,-10,10,9,5,-1,10,10,-2,-10,9,-5,-10,-10,3,-3,4,7,1,-4,-2,3,-2,9,-5,6,-9,-10,3,-1,7,-7,9,-4,9,-9,2,4,4,-5,-10,-2,6,-9,3,5,8,-10,7,-7,2,1,7,-8,-1,-1,-8,2,-6,-4,3,-8,1,-7,-10,9,10,7,-5,10,2,9,-6,-5,-1,1,6,6,5,-10,-8,8,6,5,2,9,9,-3,8,5,-7,-5,6,-2,3,-8,10,-8,3,10,-1,1,-7,-2,4,-6,6,4,1,4,10,6,10,-6,9,10,5,1,10,8,-3,-5,-4,-4,6,2,10,6,3,-2,-8,-6,6,6,1,9,6,4,2,-6,5,-6,7,-2,-4,5,-7,-4,8,-8,-3,2,9,-1,5,-1,7,-5,1,-7,2,-6,2,-3,-1,-9,7,4,-9,-9,4,7,9,-8,-9,-5,6,1,1,-8,2,7,-9,5,7,4,-6,-7,-1,7,-9,-1,2,-2,-6,7,8,-7,-4,6,-10,7,1,3,8,-2,-2,1,-6,9,5,-10,-8,9,3,7,6,-9,9,-9,-4,5,7,-10,-9,3,-4,7,1,-8,-3,-8,-1,8,-1,-7,9,10,8,-8,-10,-2,-5,-6,7,1,-1,1,-5,1,7,10,-2,1,-10,-8,2,-5,-9,3,7,7,6,9,8,-9,2,10,-10,3,-2,2,-10,-10,10,-6,9,4,-5,7,6,8,-5,-9,3,-9,-2,-8,-8,1,2,-4,3,6,-4,1,1,8,-10,-5,1,-8,4,5,-2,9,-6,-7,-2,8,8,-6,1,-6,-10,-3,-4,-6,-7,-10,7,-5,2,-5,4,10,3,4,-9,4,-3,2,2,-4,9,9,3,1,7,10,9,5,6,-7,-10,-6,-2,10,4,-2,-10,-1,7,8,9,-5,-10,2,2,2,-10,6,-7,-5,-2,6,-8,-7,-8,-10,5,-7,8,4,9,-1,-6,-3,3,4,5,-9,6,9,-1,2,4,4,7,9,5,4,-9,2,5,1,-7,-2,-6,-6,-9,6,8,-5,-9,-10,6,-6,1,9,6,-5,-10,-6,9,5,2,1,-3,-2,1,-7,-6,-4,-10,4,-2,-1,-7,1,10,-3,-9,-10,-1,3,6,10,2,10,8,-2,-4,-5,1,-8,3,-3,8,-5,8,2,7,-6,8,2,4,8,-6,-1,-10,10,-2,6,-6,8,8,-8,2,5,-1,-7,3,-3,8,-8,4,-2,2,-6,-10,2,4,4,-5,-7,-9,3,10,3,-1,6,10,2,7,-10,-2,-4,6,4,8,8,-8,1,7,3,6,5,-7,-8,5,-1,4,-5,3,2,3,-1,2,-6,-6,9,10,8,1,4,-5,4,10,10,1,7,1,-2,1,-2,-8,-9,-2,-8,4,-8,-6,-8,2,-2,-9,6,8,-1,-7,-6,-3,-3,-3,-6,4,-5,6,7,-1,-2,7,-10,-5,3,-5,7,7,1,-5,-4,2,-7,3,8,-2,-6,-10,3,-9,-9,9,-4,-8,-6,-3,1,-10,-6,4,-8,-6,-7,-3,4,-9,8,-9,-6,-9,-1,3,-10,10,-5,-1,3,9,6,10,-4,2,-1,-6,7,9,8,8,6,-3,6,-6,-5,-9,-5,-2,-10,-2,-3,-7,-4,8,10,-9,8,7,-9,-3,8,-7,2,3,-4,-4,5,-9,10,2,-5,-8,6,5,10,10,-9,-10,-6,5,-8,-7,10,4,3,-4,9,-9,9,10,3,7,7,-5,10,3,8,-3,-5,-10,4,-7,6,-6,4,-4,6,-1,1,-7,7,-1,9,-3,2,5,9,-7,-9,-2,10,2,-9,8,10,-1,5,-1,-7,-3,2,-4,-1,8,5,5,-7,-1,9,-6,-5,5,8,-8,-2,3,8,-5,-8,1,2,-9,10,-3,9,7,6,-6,7,9,-5,-3,10,4,-10,1,10,9,8,-10,-3,1,-10,-6,-2,-8,9,-4,9,7,4,9,8,7,-2,-2,-5,-4,1,1,7,2,1,7,3,-9,-3,-2,-8,6,-5,5,-3,-4,1,2,7,5,10,-7,-5,-2,7,-9,3,5,6,-10,8,-7,-1,8,3,-5,-3,-7,-1,9,3,4,-5,-7,-8,-2,-3,9,6,-4,-9,3,3,2,-9,3,1,9,8,-5,-3,7,5,-1,-1,1,4,-4,4,-3,9,4,-3,3,10,-10,-6,8,2,6,2,3,-1,-3,5,7,-1,-3,5,8,8,6,-6,7,6,9,-1,6,-3,9,4,-1,5,3,-4,5,10,7,-8,4,-10,-1,-9,-4,-5,-8,7,8,-7,-3,-4,4,10,2,8,3,10,8,1,10,3,7,-1,-3,5,-1,4,3,-7,-5,10,2,2,-7,-9,10,-9,3,3,-8,4,9,7,4,-6,10,5,-8,-9,9,-4,-4,-6,-2,-5,-9,-2,-6,10,-4,9,4,5,2,-9,-5,-9,-5,-6,-6,-9,-1,-1,1,-7,10,8,-1,-8,-8,3,9,10,9,-2,10,-7,-2,6,-2,8,-10,-5,-9,3,9,9,-9,1,9,-10,5,-8,10,10,-10,3,5,10,-3,3,10,-10,-3,7,-4,-8,6,6,1,-9,4,-10,2,-5,6,6,10,-5,7,-4,8,-10,10,-2,1,4,5,-6,-8,1,7,-10,-1,9,-6,9,-4,10,-6,-9,-6,-4,-8,8,-9,8,6,4,-2,7,7,3,6,7,8,9,-8,-6,3,-2,7,-2,-9,-2,1,-10,9,10,-7,-7,5,-10,1,9,2,-8,-1,-1,7,1,5,4,5,9,-3,6,4,-10,1,-1,-1,1,-1,2,8,-6,5,6,4,-9,-4,4,10,-7,3,4,-8,6,9,-7,-9,9,3,-3,5,-5,-6,8,-4,7,-4,-1,-7,-4,-3,5,-4,-8,-2,-3,5,-7,-8,7,2,9,-8,-10,7,3,-5,-6,3,-5,6,-3,7,-2,-6,8,6,4,8,-8,8,-7,-8,-3,8,5,7,5,-7,-10,7,-1,-5,-6,10,10,-3,-2,-3,-1,2,-4,-5,2,7,7,10,-8,2,10,8,-10,10,-4,-9,-1,-3,10,6,-4,-6,9,-8,8,3,-3,-9,-1,-7,9,10,-6,7,-4,10,7,6,9,-5,5,-9,6,-1,7,4,3,8,-8,7,-7,8,2,-10,-10,-2,-2,1,-8,-6,2,1,-3,-5,1,5,-1,-3,-8,8,7,-3,10,8,-8,-3,4,6,-10,-10,-4,-2,-7,10,8,-3,7,-6,2,6,-8,-2,2,10,8,-6,5,7,-1,-9,-4,-5,-10,9,7,-4,6,-9,-2,4,-1,4,8,-9,-8,-9,-1,-5,-9,3,-2,3,2,10,-1,4,7,-9,9,6,-4,-2,-1,-6,-3,-6,-5,-7,-3,1,-3,7,4,5,-1,3,-5,-2,1,-9,-8,-1,6,-2,-3,2,-9,-6,-4,-6,-3,4,-3,-6,-4,-9,2,7,-6,-6,1,6,8,3,-6,-8,-8,-7,-9,-5,8,7,-4,9,-5,-2,4,6,-2,5,-8,7,5,4,8,9,3,-7,2,10,8,4,10,5,9,-1,3,2,3,2,-7,-7,-8,-1,8,-8,1,-10,1,6,5,8,7,-6,8,-10,-10,9,-9,8,10,-6,9,-6,1,-4,-9,-4,4,5,-5,-9,1,-3,-8,10,9,1,-1,-2,-6,9,-9,-2,-3,5,3,3,1,8,8,-7,3,-9,-4,-7,7,6,10,-9,6,-1,7,6,-1,-9,-10,10,-6,-10,-1,-1,-4,4,-6,7,6,-4,3,5,2,-6,2,-8,6,9,6,6,8,5,3,-7,-1,4,-10,-1,2,-9,-5,5,6,9,-3,-1,6,-4,-10,-10,5,-7,10,9,5,-8,-4,10,-4,-9,5,-7,-8,2,5,8,-3,-5,3,6,-10,6,5,4,-8,-10,5,-6,10,8,9,5,3,8,2,3,8,7,-7,7,-4,-10,4,-9,-3,10,-4,-7,-5,-2,9,-10,-5,2,-6,7,6,6,-3,-4,3,-10,9,4,2,-10,1,8,6,8,-9,-1,-2,4,-3,4,2,-3,-1,4,4,4,3,3,-2,-1,-6,5,-1,-7,-7,10,-5,10,-1,9,10,3,5,-5,7,-5,10,4,1,6,10,-7,9,1,4,7,3,-1,6,-3,-4,7,-2,-7,-2,-9,7,7,5,-7,-10,-5,6,3,-2,6,-7,-3,-6,2,-1,10,8,5,-7,-2,-9,-2,-5,-9,-1,4,-8,1,-5,-9,5,-6,9,6,-6,-5,-7,9,3,-8,3,-6,-9,4,-7,2,-4,-5,-2,1,1,-4,-4,-10,-3,3,2,-6,6,7,-6,-7,9,-5,3,8,3,-4,-7,8,-5,-5,-10,-10,-10,2,-7,-6,1,5,9,-9,9,3,-10,-5,2,5,-8,8,1,-6,9,5,7,-3,7,-1,7,-10,5,-3,-5,8,-3,-3,-6,-5,5,4,-9,-6,-9,3,-3,3,8,2,6,9,6,-6,-3,7,2,-7,10,-7,4,-5,3,-2,7,8,-4,3,-9,4,1,-9,5,-3,-3,4,-2,-4,-8,-8,2,8,-3,8,9,3,5,2,1,-5,-8,4,9,-5,-4,-1,8,-2,10,2,-2,-1,10,7,1,-6,10,-8,-7,5,5,8,7,6,-2,9,5,10,-5,7,-8,6,-4,-8,-7,-4,1,8,4,5,6,9,-6,-7,6,9,-8,6,1,-4,-9,1,-10,7,-6,-7,6,4,-7,-3,6,8,8,7,-10,-8,-7,8,-9,-9,-7,7,-4,-5,1,-3,1,10,-7,-9,-6,-3,-5,10,6,-10,8,6,6,3,9,-6,-7,-10,-3,-1,-5,4,5,-5,-3,-4,10,-3,1,-6,1,-3,-8,3,1,2,8,7,10,-6,6,-6,-2,-7,-4,-5,4,-3,10,-6,8,10,-6,9,10,-2,7,-5,8,4,-4,7,7,-4,6,10,10,9,-7,-5,-6,-3,5,-4,7,-5,6,-1,-1,-10,5,-2,7,2,-2,1,3,4,10,-9,5,10,-5,2,7,5,-9,-8,10,10,-8,1,5,-7,3,-3,-1,10,5,-4,-4,-4,-7,1,2,-1,-4,-2,-8,-3,-7,9,-1,-4,1,-9,-10,-9,-7,6,4,2,10,9,2,-8,10,5,-6,-8,-8,3,-3,-6,-3,-10,8,8,-5,-5,-9,-4,-10,-10,1,-5,-6,6,1,10,4,4,3,9,9,4,5,-6,-8,-3,-6,-7,-9,4,7,-5,-5,3,2,-5,-4,-8,-9,-5,-3,-8,-9,1,-2,-7,10,-9,2,2,-4,5,-10,-6,-9,7,-1,1,2,7,9,-2,-7,-4,5,-5,7,-6,4,3,4,5,7,-3,-2,-4,4,1,-8,-2,-3,1,-8,-4,-8,-4,-10,-6,-7,-5,-9,1,4,-9,-7,5,-10,9,-3,8,3,-2,3,10,-8,10,-6,3,2,-4,4,8,-8,-10,1,2,2,-9,-1,6,5,-9,8,1,-5,-9,-6,1,-4,-5,-10,3,1,8,10,-3,1,-6,-3,9,3,7,4,5,10,7,7,4,1,-3,-8,-7,-8,10,-1,-1,6,4,-5,-10,-9,7,-6,-7,4,9,6,-1,-9,8,-9,-4,7,8,9,1,4,5,10,8,-1,6,-3,2,7,1,8,-4,5,1,10,3,1,-6,1,-6,3,10,10,-7,1,-4,7,-8,-10,8,10,-3,-1,-1,-3,5,-9,-1,6,-6,9,-9,-10,9,-5,-9,6,3,1,10,-1,1,1,-6,1,5,2,6,-1,1,10,1,1,3,-10,-7,9,10,1,8,-8,4,7,3,3,-3,3,8,8,8,-8,8,5,9,1,-10,8,-10,-1,2,6,-6,-7,-5,-8,2,7,3,-5,-10,8,7], dtype = "uint32")#candidate|3614|(2912,)|const|uint32
call_3612 = relay.TupleGetItem(func_2870_call(relay.reshape(var_3613.astype('uint32'), []), relay.reshape(const_3614.astype('uint32'), [13, 14, 16]), ), 2)
call_3615 = relay.TupleGetItem(func_2874_call(relay.reshape(var_3613.astype('uint32'), []), relay.reshape(const_3614.astype('uint32'), [13, 14, 16]), ), 2)
output = relay.Tuple([uop_3610,call_3612,var_3613,const_3614,])
output2 = relay.Tuple([uop_3610,call_3615,var_3613,const_3614,])
func_3616 = relay.Function([var_3613,], output)
mod['func_3616'] = func_3616
mod = relay.transform.InferType()(mod)
mutated_mod['func_3616'] = func_3616
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3617 = relay.var("var_3617", dtype = "uint32", shape = ())#candidate|3617|()|var|uint32
func_3616_call = mutated_mod.get_global_var('func_3616')
call_3618 = func_3616_call(var_3617)
output = call_3618
func_3619 = relay.Function([var_3617], output)
mutated_mod['func_3619'] = func_3619
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3803 = relay.var("var_3803", dtype = "bool", shape = (1, 11, 15))#candidate|3803|(1, 11, 15)|var|bool
var_3804 = relay.var("var_3804", dtype = "bool", shape = (15, 11, 15))#candidate|3804|(15, 11, 15)|var|bool
bop_3805 = relay.logical_and(var_3803.astype('bool'), var_3804.astype('bool')) # shape=(15, 11, 15)
func_1988_call = mod.get_global_var('func_1988')
func_1990_call = mutated_mod.get_global_var('func_1990')
const_3812 = relay.const([[-1.331613,9.339738,-3.560102,0.962932,0.377214,4.408274,8.968244,-4.280978,1.978193,0.345354,1.064758,-9.540750,3.821536,6.978450,7.435783,8.536232,-8.745512,-4.018799,6.473120,1.582185,9.968986,8.284178,-5.553942,4.280434,-7.236305,8.859302,-5.506170,-8.648861,3.829886,1.109439,1.632047,-4.089298,8.949179,8.951021,1.627423,-3.999633,0.276309,4.453650,1.548366,-2.369023,-9.726097,-0.593517,6.841306,-2.066984,-0.251362,-9.060479,1.590816,5.602541,9.194475,6.499182,0.698719,0.473724,-1.783897,-7.132404,2.753561,1.196801,-7.932490,-3.862737,-0.283017,1.298807,9.334319,-9.478256,-0.029399,8.883451,-5.319578,-0.748692,-1.885278,7.981492,7.208877,0.448461,-4.913491,-5.114357,-2.216189,-2.417775,2.349853,7.914541,1.224247,6.673345,-5.083752,-5.328132,-1.937222,-4.525291,-5.520391,5.650725,-8.417617,9.852912,3.594015,8.080620,-8.044169,-2.277289,4.449934,-2.241150,6.701296,5.158944,9.389455,5.282604,-3.375300,-4.200279,2.109725,-7.489728,-7.552900,-5.321702,0.467098,8.139662,6.388559,-1.483265,-9.111965,-5.151064,-7.725254,1.118737,9.880651,7.563758,-9.590826,-0.186348,8.622237,8.684007,-6.479383,1.471382,-4.611223,-2.111271,-4.674330,-9.479457,9.130156,2.930747,-1.690225,5.017260,7.871150,-1.131892,1.268465,9.956546,9.721698,-1.198067,-5.376073,-1.866080,3.747679,-8.189645,0.547455,-9.153254,8.942755,-4.045463,-8.552060,7.422160,7.292142,7.676024,6.149758,9.699816,-1.413161,-7.662317,-1.731228,1.749537,1.633709,5.422225,-7.481171,-0.975036,9.019935,-3.740986,-9.942422,9.991945,9.775736,-5.883239,1.713210,3.712329,-1.824143,-0.154816,-0.743001,-1.007449,-2.018108,-8.687291,6.574253,-5.379705,-5.845220,-9.609545,3.809077,-2.046775,-7.430985,4.121578,-3.348854,2.927337,-7.078282,2.787617,2.286178,8.159806,-8.203052,1.803136,-9.983795,-0.449043,-7.009122,8.540045,9.610076,-9.239067,3.304921,5.326282,-8.025396,-0.773325,8.199635,-9.598131,0.213090,-8.522272,5.061975,9.592388,5.492833,-9.081740,-4.440205,5.391694,5.474980,1.553989,7.252546,1.317860,-3.694280,1.024024,4.248864,-8.168691,7.769784,-1.335895,-0.618268,-5.102941,-3.477349,6.738962,-6.207001,-6.481662,-6.339114,-9.264325,-1.856931,-7.247723,9.536115,-1.073193,3.894191,0.680925,9.194408,8.747452,3.284974,-7.014098,8.305130,-1.062135,-7.904515,0.092640,2.901753,1.447817,6.727720,-9.622433,2.201942,-3.365489,0.968059,8.418215,8.107602,0.749024,-7.288801,-4.620591,9.965770,9.062072,9.249245,2.180573,8.818110,4.983726,-2.277902,0.686766,-8.490762,-8.665452,-2.364610,3.561117,-1.410658,-9.123157,-7.243270,-1.991171,-5.516381,2.974902,7.125914,-3.184234,7.601251,0.535532,1.610173,6.935853,-9.187272,8.621406,2.990611,4.949916,4.647706,-8.881813,-2.961367,-3.438042,5.940386,7.991281,-7.684130,4.359532,0.830943,7.386020,7.335883,-7.010809,-5.917356,-6.955573,-0.650788,7.144770,-5.502416,8.343538,2.332310,5.265253,-9.698516,7.479721,-6.203531,-8.893387,5.233232,-8.114883,3.278155,1.360158,-3.476571,6.125066,1.466392,6.050944,1.690642,-5.491634,-3.865681,5.058290],[-3.003731,7.794587,8.617188,-5.416296,0.122375,7.964889,-9.590442,-5.762783,6.333123,5.408240,-0.516286,-6.574202,-8.416019,-5.723852,-6.449725,0.564863,-8.177552,4.085558,-4.591058,9.575620,-4.801451,-5.408513,7.588865,2.379336,9.255038,0.011807,8.508539,2.822512,-8.135327,-9.407009,8.244816,-2.073870,-8.058849,9.851353,5.929898,-3.961057,8.160597,-4.885931,9.629509,4.154890,1.341540,5.081102,-2.436398,-1.903990,-0.990672,5.744127,-8.246083,-7.031155,3.594044,4.895679,-0.414874,-1.712638,6.168152,-7.206715,2.387763,9.927211,-7.432726,5.607563,7.810669,8.545429,7.988223,9.269915,-0.594628,-4.473609,0.760028,9.741956,-5.030712,1.389040,-0.039732,-1.100951,-2.625232,-6.988558,-6.414087,9.644907,5.424620,-3.066261,-6.592235,-2.833379,5.342159,-0.501229,3.411492,-3.149064,-5.329209,4.450163,2.017805,-5.294534,3.118362,-3.876784,-1.970095,7.545186,-0.911880,-8.318875,7.967867,-6.932514,-2.597413,8.463292,-0.292836,0.007228,7.020399,6.556601,-7.228148,-8.410026,1.754617,-0.333275,0.389662,2.616170,0.916738,-9.466494,6.732954,8.906593,6.667605,0.383318,-6.503216,-4.979399,7.499531,-1.034247,1.147055,8.047150,4.298447,9.969770,3.138236,-3.382601,-3.141611,0.982692,6.991654,1.894352,9.838569,-1.750579,6.950773,0.461260,3.619104,7.227497,2.572921,4.921838,-3.170815,4.617261,1.284365,-7.449456,-7.353511,1.011443,-5.092260,-8.098411,1.671948,4.381925,-2.683610,5.972936,-3.175126,-1.637969,6.220423,-2.315507,-8.464188,4.764292,8.693223,-1.019981,9.058449,-7.178137,-4.530492,0.138630,3.052313,1.846721,-0.465576,6.332285,8.249782,-7.875445,4.240899,-2.638499,-2.253514,-7.776661,0.677992,3.846639,-8.005654,-4.163088,-3.172443,6.888098,-5.798183,1.297576,0.737284,8.931410,3.617432,-2.397642,-0.114765,-4.540719,-5.342515,-5.175461,9.255200,8.247020,8.454160,1.933057,6.446162,-6.323356,3.655180,-5.842671,-0.875958,2.886113,4.848101,0.563296,-0.535300,-5.110186,-0.557619,-3.364725,-0.475348,1.127760,8.785701,-2.850180,0.303447,-4.725855,-4.241128,-6.250575,-6.202617,-4.456952,2.472599,1.596339,-8.106987,-2.439526,-8.354855,-6.274331,-4.823228,7.079876,-3.231957,4.125137,-1.958315,-1.707334,-6.364005,0.251925,-7.806959,7.378851,6.146334,3.660896,-3.878060,-1.693032,-2.384834,-0.712719,7.654404,-4.868344,9.614445,4.268760,8.718008,-4.243440,-8.669015,-3.038757,-6.242960,-7.798282,-7.480589,5.631989,-2.568100,-3.009956,-6.927803,8.597549,-6.182519,-4.097062,6.796224,9.354389,9.214206,7.172789,4.518374,0.715424,0.340972,-7.425708,4.047690,-3.413884,7.781729,7.940293,8.786180,2.252051,-8.893834,8.802551,-2.522029,7.513599,2.281750,6.533562,-0.070722,-1.643516,1.840513,-7.973696,-1.262881,-7.932801,1.016472,1.132703,-1.841026,-8.019158,-9.248172,3.825099,-0.276548,3.794612,5.342402,-2.181488,7.738047,5.882237,2.439712,4.837667,-7.457103,-0.971254,3.008120,7.942297,-3.260204,8.720561,8.479619,7.828497,7.491945,6.821016,-0.403876,-2.423413,-6.637457,-3.879231,1.450469,5.881075,6.628261,2.829038,-9.600066,-7.576115,-2.368072,7.380989]], dtype = "float32")#candidate|3812|(2, 312)|const|float32
call_3811 = relay.TupleGetItem(func_1988_call(relay.reshape(const_3812.astype('float32'), [12, 4, 13])), 0)
call_3813 = relay.TupleGetItem(func_1990_call(relay.reshape(const_3812.astype('float32'), [12, 4, 13])), 0)
func_229_call = mod.get_global_var('func_229')
func_233_call = mutated_mod.get_global_var('func_233')
var_3819 = relay.var("var_3819", dtype = "float32", shape = (288,))#candidate|3819|(288,)|var|float32
call_3818 = func_229_call(relay.reshape(var_3819.astype('float32'), [16, 6, 3]), relay.reshape(var_3819.astype('float32'), [16, 6, 3]), )
call_3820 = func_229_call(relay.reshape(var_3819.astype('float32'), [16, 6, 3]), relay.reshape(var_3819.astype('float32'), [16, 6, 3]), )
bop_3822 = relay.maximum(var_3803.astype('float64'), bop_3805.astype('float64')) # shape=(15, 11, 15)
uop_3837 = relay.asinh(bop_3822.astype('float64')) # shape=(15, 11, 15)
uop_3871 = relay.atan(uop_3837.astype('float64')) # shape=(15, 11, 15)
var_3874 = relay.var("var_3874", dtype = "float64", shape = (15, 11, 15))#candidate|3874|(15, 11, 15)|var|float64
bop_3875 = relay.right_shift(uop_3871.astype('int16'), relay.reshape(var_3874.astype('int16'), relay.shape_of(uop_3871))) # shape=(15, 11, 15)
uop_3886 = relay.atanh(uop_3837.astype('float32')) # shape=(15, 11, 15)
output = relay.Tuple([call_3811,const_3812,call_3818,var_3819,bop_3875,uop_3886,])
output2 = relay.Tuple([call_3813,const_3812,call_3820,var_3819,bop_3875,uop_3886,])
func_3891 = relay.Function([var_3803,var_3804,var_3819,var_3874,], output)
mod['func_3891'] = func_3891
mod = relay.transform.InferType()(mod)
mutated_mod['func_3891'] = func_3891
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3891_call = mutated_mod.get_global_var('func_3891')
var_3893 = relay.var("var_3893", dtype = "bool", shape = (1, 11, 15))#candidate|3893|(1, 11, 15)|var|bool
var_3894 = relay.var("var_3894", dtype = "bool", shape = (15, 11, 15))#candidate|3894|(15, 11, 15)|var|bool
var_3895 = relay.var("var_3895", dtype = "float32", shape = (288,))#candidate|3895|(288,)|var|float32
var_3896 = relay.var("var_3896", dtype = "float64", shape = (15, 11, 15))#candidate|3896|(15, 11, 15)|var|float64
call_3892 = func_3891_call(var_3893,var_3894,var_3895,var_3896,)
output = call_3892
func_3897 = relay.Function([var_3893,var_3894,var_3895,var_3896,], output)
mutated_mod['func_3897'] = func_3897
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4177 = relay.const([[[-7.883327,-1.094521,3.319435,-3.279067,-9.125371,-0.813954,-9.022584,8.201244,5.967788],[-8.214939,-7.742068,-5.973906,9.539988,-5.970671,-6.887417,-2.919120,-2.938797,0.493577],[6.126449,6.399944,-7.005954,5.866453,2.910156,-7.322145,6.336655,-3.927201,3.531743],[-5.192542,-2.160495,0.253033,-5.407244,-6.554754,-4.018239,-8.502487,9.692961,-6.696682],[4.506327,-9.962031,-8.400378,1.560052,8.346112,-2.045078,-2.701862,-2.453299,3.202497],[5.318258,0.902038,-2.491289,3.462087,0.461756,6.943896,2.522757,6.811595,8.904467],[-5.962922,1.464660,-6.685175,-8.108513,-0.729396,-7.914814,5.606029,3.383017,1.905725],[-9.066214,-4.223404,8.521081,7.092570,-5.241323,-7.012488,2.750014,-5.358117,-9.489519],[-9.018348,3.021697,5.162848,-5.636098,-2.574236,4.701040,7.307894,-0.852200,-4.559082],[1.438438,-8.401546,-8.334740,-4.473691,8.445520,8.669769,4.994598,8.249660,-5.456842],[-5.191663,2.502438,6.952439,-5.753234,-5.986251,-3.437876,-2.170219,1.570258,-6.262354],[7.436534,8.711791,5.509614,9.852935,-7.685582,-9.686407,2.901178,0.710901,7.006180],[-1.466250,7.387127,-1.744208,7.034845,-0.385380,-1.297570,-7.537873,8.382867,-4.501480],[-2.409492,4.499493,-9.866670,-5.244562,2.999294,-4.977824,-2.768211,-2.225943,-3.338955],[2.885595,-9.339827,-6.079858,-9.913475,-5.766485,-1.160258,6.487833,-0.923812,2.703146]],[[-3.385027,7.757577,3.459483,-4.774332,-6.187285,6.692030,2.178803,-4.822108,-8.485047],[-2.236056,7.281809,-4.408897,-1.490503,7.367570,2.860857,9.879741,-7.343556,4.976774],[0.334107,1.137262,-4.076287,-5.331676,8.580571,4.515602,5.154236,1.987241,1.779198],[-7.526995,3.872264,-5.137830,-0.436831,-3.633648,-4.501554,-2.568404,3.049900,9.103454],[-9.850097,9.062285,-1.540662,-9.596687,1.298601,1.711204,0.377539,-1.533744,7.416130],[6.543908,-2.530677,-1.435510,5.687327,-9.054798,-1.579249,3.775381,6.276405,-5.915512],[8.454968,2.961034,-5.542611,4.807515,-2.171254,-1.632664,3.907718,0.994361,1.607856],[-3.046557,-7.752445,4.248222,2.786941,-1.924268,-4.222480,-3.888407,7.416303,-5.869199],[-5.452643,7.007572,2.913812,-0.939355,-5.715696,-7.000249,7.934979,-7.526486,-9.675614],[-3.731008,-4.214899,-5.810251,-6.428522,3.980257,1.858752,0.363769,6.683406,-4.300254],[3.773772,5.545669,6.776047,2.569823,5.747409,-5.798624,-5.788631,3.650468,7.569411],[0.419301,-1.875564,3.122850,-5.378267,-5.155151,-2.708676,-8.265434,4.609184,0.576125],[8.309738,-3.396778,-0.654041,-4.402391,4.179591,-1.440197,-4.363897,-7.841276,-1.511723],[-2.925565,7.363223,-2.796936,4.303750,0.467200,7.364620,1.528368,9.455220,2.128252],[2.853142,-6.147807,4.393750,2.569584,-1.237930,-9.071582,-8.548461,4.368389,7.700637]],[[3.997740,-9.126638,-7.359397,8.034855,6.731917,1.510536,-8.631961,-1.622343,2.878400],[5.000546,2.400781,9.134682,-5.665992,-3.453937,2.247911,-1.537153,9.391846,8.407960],[-1.643308,2.524637,6.948927,-9.547518,0.617066,1.241801,-7.210741,-3.425814,-7.720722],[6.949783,9.286732,8.199029,-7.602546,0.089777,-4.057278,9.104118,4.819904,-8.093588],[6.332656,-4.686916,-7.321230,0.185423,7.632993,-0.498806,4.682863,-9.571655,-2.092797],[0.407651,8.496172,-0.127404,8.421498,-8.993763,-3.218283,-1.528263,1.635335,0.466204],[-6.967870,-1.642778,-2.334895,5.863208,8.795865,-1.213100,3.362527,-3.781625,-9.426942],[8.964981,-6.918644,-6.509380,-2.112099,-7.921706,4.343163,8.498340,-2.334116,2.340131],[7.325847,2.185225,9.599284,-0.646519,7.060321,5.537854,4.625794,-5.941170,1.033744],[-3.813635,0.817135,7.134003,-8.389138,-2.250701,4.063601,2.096516,-8.395163,3.012158],[-0.877347,1.561213,-5.466037,7.496359,7.845309,0.989434,-6.146441,-0.500621,-1.140524],[6.667794,4.714395,1.757072,5.287464,6.647336,0.309671,5.512779,-0.146125,-8.248945],[-6.832502,-2.073207,6.012212,-7.164561,4.300261,9.437729,-2.043586,9.051043,-7.698011],[-0.869136,7.176184,6.142627,-4.481971,1.782369,9.001288,7.488938,5.740141,9.515948],[5.191841,7.050664,0.432900,-2.305337,9.534991,5.012348,3.907569,7.232630,1.390779]],[[1.659731,-6.579455,-2.034716,-3.473817,6.580732,8.985195,-0.187699,-9.537434,2.697975],[-5.489011,0.268580,1.940972,6.745947,5.454708,-4.319389,-4.168747,-1.510812,-3.396947],[-5.809693,9.237886,-7.090907,2.371331,1.005135,-8.011436,2.532530,3.020261,-5.687924],[0.553019,2.038312,7.357131,5.741471,9.910285,-2.589060,-1.096932,8.714751,-6.876514],[-8.290967,-0.248280,8.507214,-3.470103,-1.393145,5.073875,2.430490,-9.882745,0.407814],[-3.740061,7.509961,3.098172,1.312238,3.131641,4.997714,-8.275952,0.119936,7.934804],[-8.920371,7.026497,6.333096,4.320375,4.810898,0.794096,5.207310,0.287853,-7.858695],[-2.046699,-2.240365,-2.666186,3.037811,9.847457,9.184583,9.994887,-3.606022,-5.470837],[-2.200027,-5.320893,-1.620819,-0.491843,3.149543,-8.254884,-6.182638,0.687374,-0.293113],[-7.987280,5.283212,-3.460967,1.962181,-1.352785,-4.614714,6.733270,-1.131771,-4.888534],[-0.814178,7.103964,-9.102014,4.465401,-4.931587,5.476793,-8.603838,7.383235,4.620387],[-1.596173,6.734707,2.719917,-1.678218,-7.666584,-5.939908,5.002852,-5.861962,8.428656],[-3.768810,9.513313,3.076501,-7.550495,5.504010,0.724338,0.758367,1.609545,-6.349587],[3.460716,8.220007,-6.440136,-5.363624,-0.152089,-1.898409,-1.337571,-1.042637,6.815584],[-7.911294,4.400492,4.283468,9.355348,1.931166,-5.544924,1.349001,-6.619929,8.381458]],[[-2.040672,-5.440447,-9.984900,-5.501077,9.142135,2.522789,1.509528,-8.368920,4.158409],[3.826712,9.001842,8.654118,5.597075,3.652285,7.796010,-6.300099,-5.732455,9.777295],[3.047526,2.032377,-6.393094,1.932594,6.871055,2.559771,-9.461441,6.078734,0.910718],[4.898785,6.216611,-0.703086,1.352408,-4.867564,5.307728,9.653874,-2.276608,9.137581],[3.880303,-8.253355,1.649319,2.743151,-6.327429,6.457289,4.331468,-6.159749,7.444721],[6.272204,8.579523,-5.426774,6.118556,5.311454,7.197085,4.023799,-3.240158,5.400255],[5.523110,2.070949,7.152823,6.231533,2.181631,1.024185,-3.717353,2.462227,-8.560345],[-1.600934,6.292449,7.047414,-3.762493,2.159592,-8.714818,-3.345324,3.535309,-5.979753],[-0.071761,5.256776,5.634285,-2.467242,-5.383657,-2.950998,-6.920271,-4.019910,-7.647984],[-1.649953,-1.278690,8.046217,-0.223056,-3.424072,3.155403,-6.953322,-0.578538,2.037924],[-2.446464,9.467790,-8.704209,6.148600,-8.539073,-4.524383,-0.385924,-3.251093,4.361095],[1.653488,3.758297,2.377539,-9.924233,8.559693,-2.137005,4.029679,-2.803032,3.923099],[-8.893402,5.472582,-3.915006,5.337152,-9.188574,-1.786518,-9.867598,1.670473,0.064034],[-5.925631,-8.767911,0.396151,8.272124,5.873419,1.025830,-0.792428,-7.623845,3.308788],[9.641285,8.131249,-0.802742,1.221941,2.060234,-1.062094,-6.176536,0.535129,-2.072353]],[[9.113068,0.463064,-9.825669,9.714539,-0.680579,-3.952367,-6.781717,-9.452829,-3.064538],[8.671941,9.697003,-7.354530,-1.172579,1.630027,-5.822749,-9.371871,9.982172,-9.407134],[-1.614399,-5.255437,0.720592,-0.831707,-0.312256,7.548445,0.092140,9.266960,-6.248547],[5.822588,-6.882931,-5.118612,-7.383417,-1.027395,-7.585780,5.188905,-8.767657,0.791689],[9.260710,2.403316,-8.980665,-3.209238,-3.515910,8.462961,3.851834,0.204743,0.612913],[-2.299919,-7.536918,0.260592,-3.409675,3.633183,-0.926127,-3.742838,5.218521,3.701758],[3.790747,9.082270,9.656723,-1.011303,9.860205,-3.525956,8.980742,1.705881,4.938043],[-3.451242,3.965716,-5.525972,-0.283520,1.886276,4.580003,4.267097,-4.554449,-7.745185],[8.861999,0.287556,-2.594413,8.717346,-0.855579,9.027654,2.046970,9.799356,4.085101],[-0.586860,1.772252,1.513901,9.965190,0.249702,-3.151743,6.505596,-6.514358,-0.604377],[9.408090,-6.434648,-8.643881,3.240189,1.747710,3.936111,7.038723,-7.570119,1.459854],[2.433801,-8.301580,3.305171,-2.471448,1.635027,1.476970,3.633121,1.647557,-1.755672],[9.798897,-9.676499,7.567317,4.846366,0.354757,5.245115,-0.142251,4.425285,7.350511],[1.317934,-6.263796,-6.751317,-2.903790,-6.591450,4.806132,-2.962173,-1.776606,2.926715],[-9.873348,-5.113066,-1.539567,-6.023018,-6.901508,1.487593,-5.521428,9.842388,1.861439]],[[-5.683110,5.491943,-9.814409,-3.462349,6.685595,7.386250,-9.219786,-5.086733,4.036815],[-6.481550,5.983008,-2.304684,-4.956414,1.180672,9.528341,4.222773,-6.004257,-3.154690],[6.507097,7.508758,0.125366,6.699071,-5.877674,2.604442,-5.917606,-5.124611,-6.294232],[-3.003330,7.009717,9.393497,9.362825,4.213282,4.539029,-8.011392,-7.664202,-8.594661],[-9.045443,2.153888,1.503862,-3.859005,-4.182980,2.944222,4.555339,4.306135,8.014124],[3.303647,0.724713,-4.712422,-4.369374,0.855315,5.010591,3.593362,0.047243,-5.894590],[5.725509,-5.893044,0.422361,-3.967818,6.811950,-9.517621,-0.147108,5.423994,-1.399554],[7.110022,-7.338504,0.575230,-2.031357,3.599936,0.302905,-9.933038,3.265135,-9.712731],[-1.850521,6.387066,-1.292728,-1.143264,-6.892551,-1.166341,4.959811,8.093900,-5.125269],[9.953194,9.251871,-4.157336,0.177532,0.959213,4.341272,2.366681,2.808818,2.058683],[-6.548738,-6.808812,-9.399072,8.869077,-8.287837,7.115823,1.806787,4.931873,-4.184878],[0.531306,-6.372596,-3.681173,-7.766769,1.088716,-7.914537,4.594335,-6.578950,8.427382],[-1.876087,6.585105,-0.235902,3.128603,8.057706,-7.708977,-5.911654,2.003264,4.764949],[-4.118372,-7.153993,2.440671,2.689091,3.285382,-9.177887,-0.445938,-0.632394,-7.974387],[-6.734289,-9.302251,-0.627606,2.948824,0.963968,-3.877600,-4.129956,-5.928375,-7.809645]],[[-2.551758,0.026191,-1.422466,-7.073437,-3.970278,-7.657135,8.791208,6.233193,-2.075698],[4.988869,-5.233026,3.124970,4.165753,-6.520924,-6.840811,5.140232,-7.397634,-0.388018],[-6.710098,6.602843,5.127293,7.995867,-5.383056,9.875631,7.612946,2.495618,4.545737],[-0.229667,-3.340345,-2.078700,9.272344,3.789252,-8.514488,-8.763339,5.902765,-0.607995],[3.986033,9.819024,-7.509047,5.725915,3.454360,2.531899,0.841760,1.779808,-2.537858],[-2.296486,7.470926,1.891686,6.030041,1.414472,3.367195,-7.439995,6.797598,5.968983],[-0.284205,1.361291,7.860766,-1.172509,-0.164108,-3.829955,6.402820,3.069200,5.211484],[1.397388,-5.601225,1.825736,-5.891577,8.362999,7.467309,1.959632,2.055381,-5.978422],[3.339991,9.071379,-4.596144,0.623683,-3.242145,8.604768,3.435632,-2.916020,1.354680],[-8.281899,6.319751,6.722145,-9.821743,-0.081995,-2.746179,-6.991209,3.602466,9.991456],[0.384724,-1.123767,4.543318,4.901822,-1.862293,8.832329,9.573859,7.060714,6.223545],[-0.994449,2.806345,1.018432,7.892584,2.473747,3.329131,-2.667339,1.835434,-8.597345],[-8.928544,-8.181714,3.119190,-8.776199,5.340071,-0.251109,3.179515,-6.613388,6.622677],[-0.141298,0.995308,-8.601372,-3.338046,9.039273,9.968752,1.633096,-7.434832,-3.046895],[5.870985,-1.757857,-2.232452,4.068155,6.358152,-8.114914,3.352840,7.118817,-3.585554]]], dtype = "float64")#candidate|4177|(8, 15, 9)|const|float64
uop_4178 = relay.asinh(const_4177.astype('float64')) # shape=(8, 15, 9)
output = uop_4178
output2 = uop_4178
func_4182 = relay.Function([], output)
mod['func_4182'] = func_4182
mod = relay.transform.InferType()(mod)
mutated_mod['func_4182'] = func_4182
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4182_call = mutated_mod.get_global_var('func_4182')
call_4183 = func_4182_call()
output = call_4183
func_4184 = relay.Function([], output)
mutated_mod['func_4184'] = func_4184
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4182_call = mod.get_global_var('func_4182')
func_4184_call = mutated_mod.get_global_var('func_4184')
call_4204 = func_4182_call()
call_4205 = func_4182_call()
output = relay.Tuple([call_4204,])
output2 = relay.Tuple([call_4205,])
func_4219 = relay.Function([], output)
mod['func_4219'] = func_4219
mod = relay.transform.InferType()(mod)
mutated_mod['func_4219'] = func_4219
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4219_call = mutated_mod.get_global_var('func_4219')
call_4220 = func_4219_call()
output = call_4220
func_4221 = relay.Function([], output)
mutated_mod['func_4221'] = func_4221
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4182_call = mod.get_global_var('func_4182')
func_4184_call = mutated_mod.get_global_var('func_4184')
call_4222 = func_4182_call()
call_4223 = func_4182_call()
const_4257 = relay.const([[[-6.748102,-2.806592,-1.567588,-4.563205,1.214326,-5.677258,6.345392,0.801154,-4.623320],[2.918995,6.521944,-4.251296,8.539915,5.591618,3.039170,3.614313,-0.953178,-7.356776],[-7.532228,2.170496,-1.049719,-3.639654,3.307078,2.809674,-6.334180,-6.026496,2.720304],[6.004695,-7.821520,-2.870244,3.583241,3.620915,8.071675,2.013654,-0.905791,4.503709],[-8.706440,-9.990539,4.667930,1.179834,3.330895,3.720600,-2.334783,2.127872,-7.258701],[-2.216267,-4.086779,2.523923,7.752157,9.482321,5.790227,-3.605362,-5.769005,-0.238397],[-5.428900,-6.423376,8.590507,-0.509300,-6.248519,-5.737454,4.806000,5.024520,-6.074601],[0.061447,0.791867,-3.009489,-5.113770,-3.303135,0.043182,-5.260540,-7.677525,9.526347],[4.473609,0.519817,-9.423701,-9.547505,-2.460810,3.634522,-2.824506,-7.649062,2.053744],[-9.505269,0.797376,0.968693,6.733642,-1.589652,-6.668140,5.638243,8.530123,6.553887],[-6.151914,-3.884957,6.137648,-6.961312,-3.180729,9.242157,5.071431,4.327343,-4.474847],[3.447208,6.814242,0.824618,-0.689070,7.200553,0.975566,1.162831,-9.781590,-0.807577],[9.388528,9.566808,5.668448,8.896904,-8.394053,1.041225,4.588075,9.206889,-5.163126],[-2.035698,1.244375,4.550735,5.888566,6.779632,-6.339005,9.380320,-3.452321,8.719015],[-9.466363,-8.941889,-4.502140,6.000897,-1.654730,-0.007302,-8.615000,1.140795,-5.284689]],[[-1.320425,9.515818,7.914381,-0.167283,0.625825,4.291282,-2.520662,-2.137382,-3.983010],[5.322937,-3.361218,-2.742097,-2.925101,-8.108084,4.083145,-9.170166,-6.150483,2.838813],[7.195873,-8.075308,-7.385381,-7.268565,9.619705,6.479016,2.435848,-6.941304,-4.147055],[-6.522675,9.278404,0.546248,8.536069,-1.861554,3.441656,7.243259,5.908414,-7.036333],[0.764367,1.902393,9.606029,-9.475166,3.554582,-2.501862,-5.652916,-9.768758,9.114047],[-9.056243,-8.421953,-2.712536,-4.027944,-2.191334,-5.502613,7.122466,2.640630,-2.810455],[1.612538,4.596613,3.672702,-1.904737,-0.111289,3.156117,-0.365291,-8.085236,0.318204],[5.908704,-6.689893,3.149358,-0.203839,-1.416737,3.774225,-8.925690,-9.363750,6.882821],[1.345026,7.443735,4.908204,-7.127262,-8.608122,-6.196836,2.762220,6.842336,6.351740],[-2.898331,7.353317,-6.439431,-2.833791,0.144853,-8.720094,-9.708877,-3.447067,-1.983029],[6.674915,-4.493268,4.641665,4.574987,-0.285882,9.383836,3.287776,3.776791,-8.468581],[-5.200761,-5.090830,6.682953,-5.852105,-4.824894,3.994820,-9.461013,9.988504,-0.832155],[0.556655,-4.581361,-9.923750,-8.501987,8.573637,-1.503049,4.212566,-3.643440,-1.196204],[-2.696274,-7.022923,-5.929428,8.994024,-3.814296,0.837237,-0.788469,-5.510658,-8.543570],[-8.535326,-0.785366,-8.403564,9.539346,7.415953,0.924410,-6.345116,2.259334,-1.542109]],[[-3.046312,-4.319733,1.984717,-0.324325,3.450582,-1.777718,3.096856,-0.390845,-5.222189],[4.028041,-6.052846,-6.278675,-1.246030,3.209126,3.356184,1.256037,-6.664200,-2.124957],[2.188280,6.808215,1.858436,-6.344642,-5.239867,-3.396781,1.456422,-6.303718,2.883127],[6.730719,6.022359,0.288447,8.156243,1.107115,-8.421334,0.981568,-4.497773,-8.455621],[-0.491941,-9.275809,4.820415,3.613629,-1.788072,-6.329070,-0.546135,-5.190495,8.556654],[-7.032985,-4.163401,-8.162736,0.536404,3.305859,-5.447602,8.436935,-6.068008,5.021468],[2.507050,8.513576,-5.967193,9.536807,1.208971,0.813045,8.323496,2.220423,8.744040],[-4.250978,6.190266,-9.170673,-6.080861,-6.940133,8.302361,-1.965721,0.363783,7.672922],[-0.448140,-5.597833,-5.028792,-6.389169,-3.374225,4.367629,0.459563,-0.858966,9.156439],[-1.421747,9.750044,0.687341,-3.210925,3.711681,5.482673,3.592847,1.024527,4.410514],[6.837735,7.394050,-7.289034,1.663281,-2.751825,-7.691435,-9.014934,3.620178,-4.293030],[1.178472,5.608617,-0.482088,4.848112,-7.697770,0.634855,-4.303759,4.356721,-1.746606],[-1.602554,7.602245,-0.516492,3.757974,-9.816577,-6.499961,8.140530,0.161160,-3.015455],[5.546918,6.002190,-5.444658,2.917885,-4.662672,-1.627297,-3.940883,-6.839938,2.922360],[-0.474585,-4.179201,-2.841863,8.408292,-3.375436,-5.535716,-0.166536,-2.930603,6.687202]],[[-1.095301,3.443862,0.777321,-2.588307,-2.750467,3.020860,1.078548,-5.553464,-4.253877],[-3.293508,-0.084319,-6.471723,6.773734,-3.456048,-3.826756,-6.823436,8.660112,9.918577],[0.604707,-6.926126,8.809971,0.763280,4.806671,-9.070362,-0.986062,3.170850,2.892994],[3.380554,-7.634595,-3.318500,5.076802,-6.614265,-5.321436,2.458476,2.171392,7.902673],[6.407584,9.812451,5.231079,-7.334850,-5.157349,-7.678381,5.040368,-3.224771,-2.326083],[1.016612,0.492634,-7.029768,7.838388,6.462659,0.139388,4.151910,4.560975,-6.121191],[-8.553197,6.149564,-9.834005,-1.419108,0.144325,-8.409068,0.224104,-6.099844,9.465441],[-1.245539,-5.568587,1.108181,1.058397,3.999489,0.644446,6.552075,-6.587373,-1.894373],[-5.614852,1.963816,9.884700,1.701012,1.421480,1.687960,-1.257631,7.706479,8.012115],[3.395229,-7.910222,9.060598,-9.682391,8.135047,4.395762,6.496114,9.676614,-7.556555],[-0.474207,5.898789,7.582947,-4.692047,5.471996,-3.045774,-4.943988,6.863439,-7.491589],[-6.265541,0.426742,-2.091105,6.370401,-5.906329,-7.444741,6.055883,9.615135,-9.743435],[8.247647,-7.291578,-2.819775,4.902947,-9.442026,1.572789,-0.658994,8.051978,-9.737875],[-7.041476,-5.980853,-6.088218,0.748801,4.493640,-9.041679,5.386250,2.048899,-5.803982],[5.763619,-4.549173,-6.648612,-0.783100,-5.463139,-0.290276,1.570251,-1.926655,-1.211580]],[[-6.595906,3.455639,-3.243038,4.567434,5.017678,4.322559,3.511140,-9.166874,1.824461],[0.930531,0.638984,2.625358,-5.792418,-5.433111,-0.117344,2.946833,9.855080,4.947073],[1.581897,4.918039,2.575183,-4.425135,1.442217,-6.962771,-6.310634,2.775813,8.736641],[8.171354,7.865770,5.397309,-9.271750,0.334670,2.167420,0.630451,1.697421,2.802209],[-2.403417,1.068436,-4.947533,-9.322937,-8.693206,-7.038365,-2.899931,1.177705,-6.031874],[-2.799071,-3.544654,-1.774778,-1.561776,-3.971869,-0.480209,-7.650579,7.039684,1.516999],[8.126755,-3.026824,6.990845,-6.344014,3.641032,5.352004,-1.554445,-6.545792,7.848350],[-7.072177,1.640181,-2.012832,-2.199586,-9.998422,-7.073755,-3.345427,5.185454,0.982714],[0.053164,-0.510881,-6.436838,-1.036338,2.315483,2.034386,5.328816,-8.208257,-0.919175],[5.107098,1.467794,-0.042883,0.318253,-9.796255,-0.507255,5.946249,6.512146,-1.661994],[0.778694,-5.267698,3.589622,-4.115975,3.633165,7.145228,1.508717,-8.668599,-4.550947],[-0.351511,3.647753,-9.263277,2.672556,-1.927027,-9.766050,-6.098001,8.458109,-9.921495],[-9.278617,-5.577635,-8.998956,7.664323,-0.065825,-4.635642,-8.488137,-9.998531,4.444620],[6.287296,-8.709481,1.685914,-7.699760,-6.945867,-8.758916,9.479631,6.105025,-4.033867],[4.795916,3.315619,-8.799245,8.634829,0.258364,-2.070465,-3.244490,3.653527,0.125040]],[[4.601977,-3.280683,-8.787961,7.053233,6.175224,4.904646,-8.177532,3.129058,-8.968488],[7.486907,-4.599498,0.835635,-5.783798,4.430098,-2.241805,-3.335593,-9.274997,0.824834],[-3.446739,-0.432095,-8.066680,6.520164,9.684618,-1.490053,-4.880790,2.365971,-8.876492],[-9.475720,-4.702485,-6.168113,-7.466545,5.655352,9.487998,0.297440,1.015423,1.712776],[3.930342,-9.086229,9.007397,-7.233090,-3.305896,7.592353,-9.572311,4.586233,1.787956],[6.587492,8.125228,-6.541215,-1.378767,-9.711536,-7.799440,8.366223,-9.945766,-8.438705],[-2.778767,-6.876102,-5.274320,-8.826457,4.121122,6.878018,7.303256,-5.107976,7.898983],[-7.180083,4.181793,1.536592,-2.844845,2.902417,-6.184266,2.838211,4.238684,-3.491600],[6.221879,-4.622703,-4.838636,7.378348,8.021607,-8.825053,-7.617104,-3.733173,0.877339],[2.567281,-1.898098,0.121580,-8.913426,2.776922,-7.259032,2.535994,-9.461616,-8.616166],[-5.348479,3.270011,1.610490,-0.018665,-4.554666,1.524131,5.193641,4.790003,-3.422940],[-4.668521,8.106913,-2.228590,3.061197,8.681443,1.161759,0.778209,0.578686,0.871781],[-7.640514,2.654177,-5.553399,9.113866,1.990849,9.162574,1.267956,2.970331,-6.907116],[-0.959480,4.824466,9.462991,4.597513,-7.188698,4.588224,0.048272,-8.122670,-0.783895],[-4.186796,-4.921593,8.868199,8.866090,1.924743,2.487998,-1.661731,-2.693203,-9.769120]],[[-0.642548,-3.875881,-3.702665,9.125574,8.727792,-1.845094,-0.945840,1.898542,4.506795],[9.165007,8.063853,8.961516,-9.168673,-2.864674,5.344914,-2.119960,-2.004399,3.497215],[2.799758,4.702625,-9.309720,-0.212226,-8.218019,9.814820,-4.819384,-1.005580,4.639815],[2.652529,7.049973,-8.968091,-7.404217,-1.876516,1.843669,2.833821,-3.482986,-7.131260],[4.894852,-6.032482,-6.434344,2.041200,-1.043281,5.890079,8.739298,7.784748,-3.806831],[3.525317,-2.398716,-2.968080,4.045645,-9.336606,-6.184745,-1.254982,-2.439045,2.563478],[-4.188743,6.269533,-3.861041,3.390321,2.941466,-6.231438,-0.919645,-0.032215,6.454583],[5.778076,5.136185,3.980626,-4.531378,7.150152,-2.881630,0.417309,0.830083,8.386134],[5.466798,5.664930,6.172627,6.578488,6.237842,-0.832749,-4.737129,-5.877359,-1.235748],[9.367966,6.556160,9.823215,6.083675,3.119456,8.505833,-6.943666,2.998307,-8.969217],[1.337595,-7.307568,9.308073,5.664067,-5.355001,5.375749,1.433055,1.391550,0.323862],[-1.145998,-8.039607,4.301283,-0.948529,-5.322464,4.660073,-4.593363,-1.505538,-8.486134],[-5.472211,8.351024,6.823362,1.195322,9.528485,1.729845,6.382336,5.171138,6.405048],[5.712157,-3.020904,2.271448,-8.445127,-1.770173,7.021119,7.141274,5.123321,-2.711406],[0.804983,2.466926,1.298799,-1.903473,5.711701,-5.676050,-5.130225,-2.446677,6.538504]],[[2.123580,-7.538465,6.822671,-0.982173,8.375506,2.829279,-4.965618,4.965516,-5.308777],[-0.709702,0.221152,-6.992140,7.373151,0.374422,-7.368447,5.761126,2.980779,7.918434],[6.211271,5.096149,7.354525,6.114897,1.310703,-7.917648,6.181620,-0.950717,-9.142622],[-5.372216,-2.785406,5.781239,-1.217473,-3.770046,-8.704922,-7.858611,2.945139,-7.460432],[0.741940,-7.550533,-7.622346,-1.411559,5.425497,-2.821420,8.509390,2.393471,6.947774],[-2.703695,-5.059723,5.206401,9.896875,-2.477308,3.801115,8.119339,-7.285051,8.768453],[-4.434019,-3.469250,3.845870,6.553532,5.970974,-4.329870,-8.263158,4.687948,5.994483],[1.026369,-0.367613,9.929329,2.827507,-7.184341,-1.630265,-0.633543,1.280636,-7.711455],[-3.867889,-5.502077,4.173590,-1.489549,2.904050,-1.052871,-3.354331,5.821727,9.099368],[-6.532353,-1.408865,7.447021,-6.722274,6.326586,-3.240382,-4.931280,-4.139008,1.898105],[2.687366,9.792337,8.775283,6.492995,4.889790,-0.289636,5.154713,2.062577,-4.702362],[-5.485994,5.003007,-0.878974,-6.655593,-0.849890,1.198618,-3.989152,8.712360,-3.613816],[2.210224,-6.549039,-0.507687,3.951729,5.276296,2.105371,7.468489,-3.473988,-0.992836],[0.831582,-1.894764,9.164253,3.967876,-8.943654,5.828827,5.498226,2.572640,0.124219],[-1.877171,7.790216,-6.142374,6.585256,5.640405,-3.510080,7.933981,-5.763726,6.482389]]], dtype = "float64")#candidate|4257|(8, 15, 9)|const|float64
bop_4258 = relay.mod(call_4222.astype('float64'), relay.reshape(const_4257.astype('float64'), relay.shape_of(call_4222))) # shape=(8, 15, 9)
bop_4261 = relay.mod(call_4223.astype('float64'), relay.reshape(const_4257.astype('float64'), relay.shape_of(call_4223))) # shape=(8, 15, 9)
output = bop_4258
output2 = bop_4261
func_4262 = relay.Function([], output)
mod['func_4262'] = func_4262
mod = relay.transform.InferType()(mod)
output = func_4262()
func_4263 = relay.Function([], output)
mutated_mod['func_4263'] = func_4263
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4262_call = mod.get_global_var('func_4262')
func_4263_call = mutated_mod.get_global_var('func_4263')
call_4280 = func_4262_call()
call_4281 = func_4262_call()
func_1191_call = mod.get_global_var('func_1191')
func_1195_call = mutated_mod.get_global_var('func_1195')
const_4292 = relay.const([1.834208,8.294177,-2.898973,3.086858,8.686896,9.243706,-3.609361,-6.022020,9.742755,1.003515,4.759206,-5.981099,9.015595,6.144330,3.984156,-0.456749,4.198227,4.863439,-2.660624,1.854123,-8.938937,-5.248087,-1.569040,-4.084250,-1.414461,9.387037,-0.213623,4.289264,2.027124,-2.079877,2.399388,8.844810,-1.105325,-7.094801,2.168802,-7.270546,-1.695100,-3.730756,-5.196096,-1.729284,-1.574844,-3.431976,7.188466,-3.085258,4.657539,9.283274,-3.546132,4.745737,0.538347,9.276303,1.401406,8.240663,-0.937223,-8.721200,-6.235284,4.752735,2.861836,4.122432,2.751308,5.272743,-9.993719,6.496253,9.844915,-2.932902,-6.594597,6.498904,8.270011,3.131469,-6.087974,-4.926018,7.946799,-1.221719,-8.209187,2.373911,5.039549,-1.879472,-4.811173,-7.345050,-9.268494,-0.832627,-7.166459,0.455291,-1.903311,0.868946,-1.737727,1.015875,8.943499,-9.620286,4.476883,6.294284,-6.050036,7.743432,5.792713,-8.107174,-4.797446,-8.361273,-9.670314,-5.001026,9.576883,-7.807222,-4.062420,5.784885,6.266454,2.299315,9.697348,9.724628,-6.764144,-2.718847,0.950179,8.035708,-8.629019,-0.717756,9.476735,5.891602,6.390067,5.372575,-3.480190,3.019368,-5.559929,-5.205241,-5.473726,-5.251873,-6.488364,-2.886237,5.810520,1.620420,-3.272715,2.743079,3.434423,-1.230949,-6.764434,-3.124302,-5.727824,-4.079751,-8.158103,-8.742707,-5.649925,6.362068,-7.502538,-6.211400,1.065872,0.914687,-2.886089,-3.804448,3.318527,-9.020182,-7.918252,-2.336905,-4.506103,7.517220,-5.400913,0.604006,-8.416497,2.693117,2.241456,6.298367,-7.445381,-9.175233,7.103770,-0.687587,2.771893,-6.842040,7.902572,-0.353875,5.148322,-5.650087,3.767153,-6.799325,-3.811903,-3.023784,-4.460294,-0.938292,-9.885802,8.881709,3.467845,4.509249,-8.318809,-5.425124,-4.485484,1.196675], dtype = "float64")#candidate|4292|(180,)|const|float64
const_4293 = relay.const([-0.844426,-6.436109], dtype = "float32")#candidate|4293|(2,)|const|float32
call_4291 = relay.TupleGetItem(func_1191_call(relay.reshape(const_4292.astype('float64'), [6, 2, 15]), relay.reshape(const_4293.astype('float32'), [2,]), ), 0)
call_4294 = relay.TupleGetItem(func_1195_call(relay.reshape(const_4292.astype('float64'), [6, 2, 15]), relay.reshape(const_4293.astype('float32'), [2,]), ), 0)
func_424_call = mod.get_global_var('func_424')
func_426_call = mutated_mod.get_global_var('func_426')
call_4311 = relay.TupleGetItem(func_424_call(relay.reshape(call_4291.astype('float32'), [13, 15, 12])), 1)
call_4312 = relay.TupleGetItem(func_426_call(relay.reshape(call_4291.astype('float32'), [13, 15, 12])), 1)
output = relay.Tuple([call_4280,call_4291,const_4292,const_4293,call_4311,])
output2 = relay.Tuple([call_4281,call_4294,const_4292,const_4293,call_4312,])
func_4335 = relay.Function([], output)
mod['func_4335'] = func_4335
mod = relay.transform.InferType()(mod)
output = func_4335()
func_4336 = relay.Function([], output)
mutated_mod['func_4336'] = func_4336
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4219_call = mod.get_global_var('func_4219')
func_4221_call = mutated_mod.get_global_var('func_4221')
call_4337 = relay.TupleGetItem(func_4219_call(), 0)
call_4338 = relay.TupleGetItem(func_4221_call(), 0)
func_4219_call = mod.get_global_var('func_4219')
func_4221_call = mutated_mod.get_global_var('func_4221')
call_4368 = relay.TupleGetItem(func_4219_call(), 0)
call_4369 = relay.TupleGetItem(func_4221_call(), 0)
func_1191_call = mod.get_global_var('func_1191')
func_1195_call = mutated_mod.get_global_var('func_1195')
const_4379 = relay.const([[-9.452694,8.519387,8.088747,-9.811962,-1.936921,8.307779,-1.344650,2.390884,-9.166615,-7.091320,-5.282207,9.580260,1.471936,-3.084830,-0.010152,-3.155991,6.847310,-8.264469,-1.606756,3.614799,-2.609910,5.182680,5.308940,7.967130,-7.285823,4.526028,-6.768264,3.360288,2.152105,5.741076,8.409347,-9.660260,8.699227,-5.657269,5.618280,-3.215481,-3.048627,4.810201,-0.745229,8.987031,-3.755989,0.123112,9.084657,-3.969393,-1.858218,8.522289,1.935993,8.277895,-4.206003,-4.746182,8.624907,4.714522,-8.904206,4.198093,-7.912019,2.241039,5.027227,1.996133,4.537927,3.052596,7.983809,-3.719568,-8.514950,8.523738,1.354089,-9.631533,-2.414912,-9.125328,-6.351835,-7.588261,-9.200840,9.226924,-4.894733,9.802712,-6.612353,-2.719581,7.841021,-5.051074,-2.411439,-9.565542,-1.719617,-7.904120,8.615108,7.260820,-0.985184,-1.097298,-2.293423,-4.247404,-5.782204,-5.626462,-5.303988,-0.517738,8.132582,1.021895,-6.408602,9.600663,-5.277544,0.262535,-9.548805,-6.034289,-1.584505,-9.957098,-3.477971,-4.815543,-8.356666,-3.010796,8.219348,-4.871905,9.348393,-1.794764,9.750617,-7.174565,2.070098,7.207238,1.580549,-3.638795,-6.089625,-1.627233,2.403880,1.690568,2.851032,-0.613929,-2.011187,-9.700418,-6.828492,9.147495,-1.498337,6.928169,-8.526255,-2.578106,-3.453219,6.353222,6.233144,-8.830813,-4.411115,-1.608556,6.082605,-4.010946,3.168968,6.291143,4.539370,2.123980,4.509477,5.819704,-8.168811,5.605337,-4.891726,8.363830,-2.721927,-5.793515,-7.344585,-8.109285,1.887935,5.444529,4.223109,-8.591031,-5.552971,6.121164,5.018586,0.487826,-1.197258,-1.027812,6.184419,-5.542794,3.991632,1.453539,5.806706,4.170521,-5.794256,4.496529,-9.754182,3.041009,6.768177,-8.541422,1.484097,-5.027505,-3.608986,1.685209,5.914898,7.720169]], dtype = "float64")#candidate|4379|(1, 180)|const|float64
var_4380 = relay.var("var_4380", dtype = "float32", shape = (2, 1))#candidate|4380|(2, 1)|var|float32
call_4378 = relay.TupleGetItem(func_1191_call(relay.reshape(const_4379.astype('float64'), [6, 2, 15]), relay.reshape(var_4380.astype('float32'), [2,]), ), 1)
call_4381 = relay.TupleGetItem(func_1195_call(relay.reshape(const_4379.astype('float64'), [6, 2, 15]), relay.reshape(var_4380.astype('float32'), [2,]), ), 1)
output = relay.Tuple([call_4337,call_4368,call_4378,const_4379,var_4380,])
output2 = relay.Tuple([call_4338,call_4369,call_4381,const_4379,var_4380,])
func_4406 = relay.Function([var_4380,], output)
mod['func_4406'] = func_4406
mod = relay.transform.InferType()(mod)
var_4407 = relay.var("var_4407", dtype = "float32", shape = (2, 1))#candidate|4407|(2, 1)|var|float32
output = func_4406(var_4407)
func_4408 = relay.Function([var_4407], output)
mutated_mod['func_4408'] = func_4408
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4335_call = mod.get_global_var('func_4335')
func_4336_call = mutated_mod.get_global_var('func_4336')
call_4464 = relay.TupleGetItem(func_4335_call(), 0)
call_4465 = relay.TupleGetItem(func_4336_call(), 0)
uop_4481 = relay.rsqrt(call_4464.astype('float32')) # shape=(8, 15, 9)
uop_4483 = relay.rsqrt(call_4465.astype('float32')) # shape=(8, 15, 9)
var_4488 = relay.var("var_4488", dtype = "float32", shape = (8, 15, 9))#candidate|4488|(8, 15, 9)|var|float32
bop_4489 = relay.logical_xor(uop_4481.astype('uint16'), relay.reshape(var_4488.astype('uint16'), relay.shape_of(uop_4481))) # shape=(8, 15, 9)
bop_4492 = relay.logical_xor(uop_4483.astype('uint16'), relay.reshape(var_4488.astype('uint16'), relay.shape_of(uop_4483))) # shape=(8, 15, 9)
output = bop_4489
output2 = bop_4492
func_4497 = relay.Function([var_4488,], output)
mod['func_4497'] = func_4497
mod = relay.transform.InferType()(mod)
mutated_mod['func_4497'] = func_4497
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4498 = relay.var("var_4498", dtype = "float32", shape = (8, 15, 9))#candidate|4498|(8, 15, 9)|var|float32
func_4497_call = mutated_mod.get_global_var('func_4497')
call_4499 = func_4497_call(var_4498)
output = call_4499
func_4500 = relay.Function([var_4498], output)
mutated_mod['func_4500'] = func_4500
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4262_call = mod.get_global_var('func_4262')
func_4263_call = mutated_mod.get_global_var('func_4263')
call_4588 = func_4262_call()
call_4589 = func_4262_call()
var_4607 = relay.var("var_4607", dtype = "float64", shape = (8, 15, 9))#candidate|4607|(8, 15, 9)|var|float64
bop_4608 = relay.not_equal(call_4588.astype('bool'), relay.reshape(var_4607.astype('bool'), relay.shape_of(call_4588))) # shape=(8, 15, 9)
bop_4611 = relay.not_equal(call_4589.astype('bool'), relay.reshape(var_4607.astype('bool'), relay.shape_of(call_4589))) # shape=(8, 15, 9)
output = bop_4608
output2 = bop_4611
func_4613 = relay.Function([var_4607,], output)
mod['func_4613'] = func_4613
mod = relay.transform.InferType()(mod)
mutated_mod['func_4613'] = func_4613
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4614 = relay.var("var_4614", dtype = "float64", shape = (8, 15, 9))#candidate|4614|(8, 15, 9)|var|float64
func_4613_call = mutated_mod.get_global_var('func_4613')
call_4615 = func_4613_call(var_4614)
output = call_4615
func_4616 = relay.Function([var_4614], output)
mutated_mod['func_4616'] = func_4616
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4638 = relay.const([[[3.873652,-5.834345,-0.518073,-4.386214,0.303500,1.050816,5.006195,-6.741713,8.599251,-7.420076,-4.013195,7.391230,-9.189985,3.713783],[-2.294774,-7.434545,-4.083616,-2.740980,-9.699316,0.441353,1.011090,-4.928416,-6.684300,5.342736,7.018082,-1.961331,-8.861511,1.973644],[9.996015,6.363526,3.898328,6.590694,8.091559,6.514968,-5.588287,6.129375,9.302517,0.302257,3.075208,4.405943,-6.931387,-3.066061],[1.089129,3.494323,1.753827,5.996947,-6.766064,-6.541166,-5.458678,-5.978124,7.356339,-6.044945,7.701519,-7.087914,-8.281629,9.792949],[4.101290,-4.514559,7.921980,6.257023,-2.859917,-1.522216,2.722692,-6.752363,-8.946164,0.007901,7.099619,-3.509650,8.672947,7.583560],[-0.896797,-7.196385,-7.743055,6.553970,0.945585,-3.472655,0.871306,-9.989792,-1.234189,-6.797443,3.904573,-3.301079,0.621366,7.282481],[4.460138,0.956055,-7.464331,1.209553,-3.292922,-1.364212,7.247410,4.955501,2.641742,6.992996,7.046606,-7.385872,6.912313,9.187599],[1.621321,8.788515,2.047505,0.140473,2.501980,-5.323089,3.106550,5.567780,-6.482530,7.407292,-3.145449,8.142355,-0.798526,1.421774],[-0.301214,-0.492614,9.834378,-6.454948,-3.907313,-0.403633,-8.607457,1.534921,-0.625549,-7.298614,-5.583400,-3.352997,-6.417379,-2.111882],[-6.180666,1.136088,-6.280117,-5.899488,5.778948,-7.964087,-7.138785,9.197748,8.132399,-4.127402,5.432117,-2.861727,-0.350129,6.635771]],[[-6.711774,1.206043,9.631429,8.798856,6.013262,6.526115,-3.790172,-0.216361,5.163840,6.216321,6.742622,-8.559415,-9.260388,-4.041724],[1.645677,-1.076990,3.694754,-4.866758,-9.914075,-1.935584,-4.173923,-7.309358,9.902586,8.317750,4.287166,6.730160,5.850121,9.714892],[8.926808,-6.211849,1.233937,-4.521675,9.598621,1.513045,2.855418,4.558917,-7.000539,-0.649511,-1.139970,-3.064399,4.835825,-0.437207],[1.548148,-8.628860,1.394211,0.935119,3.791612,2.009105,6.579157,-6.580697,-5.779098,-0.876166,-9.749147,-8.055817,-0.576886,-8.774173],[4.628422,-2.616872,-3.997870,4.544569,-2.419471,7.921968,-9.979152,-5.677528,2.595858,-8.046518,-4.802622,-2.119931,-5.459300,1.412795],[9.135765,-1.287435,4.426271,9.856231,0.081211,5.979998,-4.633517,-7.102099,-4.796200,-8.134874,4.745735,1.576672,4.892180,-7.537333],[1.184492,-9.195282,0.034819,1.176191,-8.748457,5.370584,7.094386,4.155675,4.996023,-8.943953,-1.661187,3.510292,-0.860476,1.869683],[5.820069,8.544180,1.934914,5.396405,-1.116719,3.035710,-3.961037,-8.950622,-1.165539,9.766667,8.640711,3.765851,-6.178463,-9.720475],[2.305217,-7.694865,3.846901,6.203580,5.652990,-0.427806,0.357496,-1.780164,-1.916687,6.042253,-1.673146,-5.581871,1.093658,5.030638],[-4.324767,-0.416299,3.276947,-5.769800,-6.491064,-6.227796,2.604424,9.271964,-4.278754,-6.819544,-8.765010,3.440224,-6.657821,1.751419]],[[2.023369,3.900204,-7.481317,-1.861180,-6.533560,-0.936291,-4.361357,-5.753506,5.077641,8.948313,-8.661189,-3.149130,9.033799,3.096769],[0.432503,9.815422,-6.122025,0.812217,-1.752473,-0.007885,-5.554181,6.134775,7.471829,-2.034581,9.366879,8.053857,8.645666,7.066608],[3.406421,-6.188347,0.424452,-4.059467,-6.190435,-0.513164,1.190705,2.680299,7.160749,-5.266792,7.409112,-0.441767,-4.039212,-0.069837],[0.578123,1.141828,-8.965226,-8.309979,8.028370,8.072984,-7.525175,6.980160,5.519348,8.190120,0.552799,3.720900,2.126047,-7.162374],[0.217069,4.782878,-8.262382,-2.402787,7.474405,-1.281770,8.273518,-0.298691,2.334775,3.683212,7.320676,8.909503,-6.507788,4.721055],[-7.105860,-4.082281,-5.790354,4.772148,-5.397722,6.416569,-4.745131,-8.624955,-1.103301,9.462997,-7.017561,-0.592312,7.684357,5.465511],[-7.003909,7.324133,-8.882979,0.591078,-1.511092,8.674559,-0.615713,-4.705000,-8.033089,-0.938474,2.653675,-3.019461,-3.752604,0.366313],[-1.957029,2.000692,7.230096,-5.963783,-3.900294,-5.535887,-8.239760,3.343279,3.971173,8.272697,4.886444,-7.834244,7.985112,-3.770889],[3.809037,0.562478,-1.360483,-2.968359,-1.479515,3.872222,-3.338202,9.308360,3.604907,8.582228,-1.368079,-7.126875,-7.955947,-1.702011],[7.024905,4.859088,4.474842,2.037272,-9.703364,1.184546,-5.131479,8.428982,4.921529,5.488861,-7.712057,3.251199,9.226513,-9.917602]],[[-5.267707,2.162530,7.271629,-8.543396,6.748974,9.651351,6.492393,-2.320225,7.827076,7.516070,-2.423067,-4.820133,6.842226,0.313632],[4.416842,4.911888,6.908780,-5.519912,9.500663,4.672701,-6.014667,-1.303547,1.835203,6.684909,3.524128,5.833936,3.735224,-9.596807],[9.406893,2.930361,8.451698,-4.227961,8.378196,6.877250,2.991243,7.447331,0.774664,-2.358799,0.875398,-1.503715,-0.959492,-0.078932],[9.379210,-9.735980,2.000188,5.531663,-1.392560,8.868963,-8.695651,0.962842,6.319553,3.900136,-2.076864,2.156822,4.580244,-7.495698],[-9.302559,3.390940,3.682803,-9.208768,6.943637,9.984252,-6.060306,5.639857,-1.184074,-1.766202,-1.751011,-5.390424,2.407415,-3.209725],[3.921640,-3.357985,2.024886,3.636471,-4.412609,1.182167,-1.357459,6.102741,7.677496,9.194973,7.631524,4.604419,-7.037909,4.468906],[-1.489033,-7.271868,-3.857146,3.497575,2.157899,6.799945,-9.589172,8.793535,5.248002,2.638251,-7.715407,-7.423660,2.208079,9.566221],[-2.079493,1.836724,-4.839634,-3.430131,5.337755,-9.317258,5.383707,-1.077363,9.209130,-5.174010,-9.728173,7.198897,-1.253265,6.703490],[-8.472807,6.110923,4.559364,9.365703,4.914131,-1.335821,4.480692,6.113049,-1.220423,-5.613890,8.440877,8.687782,5.623495,-0.987648],[-2.021699,4.610704,-1.667711,2.485048,4.475593,2.497061,2.066935,1.832647,8.156602,5.058353,-3.650316,0.895072,-8.154263,-0.823096]],[[4.647520,5.057874,-0.313596,-9.648144,-2.303684,-9.817693,-9.927777,-8.005508,7.259988,-4.892412,-9.840512,0.138968,-2.160684,-2.081967],[2.561429,-2.179607,-5.425657,-6.868348,-8.965628,4.380042,7.545288,-4.436596,-1.562076,1.584863,2.404829,-7.308576,1.894387,-3.976069],[-8.658994,-9.479100,6.277107,-0.699229,-0.613302,-5.302039,-1.039898,0.492336,3.858509,5.345360,-3.999531,-6.430633,6.599923,9.528497],[-5.269249,-3.420029,4.323342,-5.826115,7.624206,-9.890365,7.364676,-6.334109,-7.158383,3.666643,6.644324,7.820940,5.300970,6.445769],[-8.610729,3.486196,1.935394,4.414747,-4.814875,7.735884,6.593543,-4.827838,3.656820,-5.284550,-3.419764,5.412752,-1.696240,-4.114091],[-9.129264,-4.016839,-0.469100,1.996497,3.622862,-2.790223,-6.951657,3.219542,8.194310,4.188411,-7.643946,9.503753,6.774095,2.814001],[4.397697,-7.889189,4.355161,0.674980,-5.628013,8.050236,2.981544,-0.018480,-3.752294,8.487436,2.058311,-2.834965,-8.726357,-3.362119],[-6.019604,-5.552073,8.083709,-0.993592,8.949774,9.340290,-5.113811,-7.500207,-0.345928,-5.063420,-0.558835,6.689094,-5.413108,-1.653277],[3.803391,-2.057869,-8.295555,0.431443,3.760187,-6.245800,4.265109,6.244583,2.525569,-3.818707,-1.304660,-7.131609,-5.217084,-9.020139],[5.320200,-9.429928,9.459877,-9.106554,9.162705,-3.540016,4.886489,4.659192,-1.097331,2.797553,-8.078891,6.236457,-2.266868,-1.213664]],[[2.353271,4.299721,4.140070,2.721918,-0.501958,-3.505325,-8.181619,5.808904,2.164122,-5.095309,3.605286,8.930399,1.321871,-1.123035],[-8.399016,4.640154,6.774953,-4.386371,-7.505926,0.637186,-2.940526,-0.592007,-8.603369,-4.962742,-0.200500,8.141873,-4.168274,-5.668890],[-7.959297,6.568764,1.710982,-4.793722,9.560050,9.910450,1.906742,9.346350,-0.566135,-6.302965,3.906388,-8.132110,5.395158,9.820765],[6.389756,-8.435378,-0.958793,-0.570369,-2.442887,-3.401208,-4.036605,1.431774,-2.895915,1.084011,-4.775590,-6.264052,-7.191334,7.098671],[-6.801078,-3.226153,-0.617525,3.738077,-3.303776,-2.489742,0.883993,2.096320,-7.962011,5.709848,6.131714,1.220263,-6.730257,6.210842],[2.811264,-8.217328,7.068467,5.326047,6.030045,-0.347844,-6.279981,-7.893966,1.199437,9.156246,-8.816141,-3.973864,9.381794,9.557171],[9.138290,3.206115,-9.922979,3.309471,-4.458644,4.999039,2.767341,1.186485,9.375904,2.955430,7.889893,-9.743280,8.026186,4.956381],[4.899432,-7.763355,4.207010,5.741760,-5.790735,5.650176,1.436804,-3.666705,-5.211947,-2.967614,-5.067469,-2.857660,1.311635,2.459812],[-2.627563,9.880156,-2.030470,-4.565090,9.074720,3.646524,-0.943966,-1.302547,1.238699,4.866870,3.834547,5.640564,0.899010,0.106749],[3.796004,-0.475751,-3.125963,8.858328,0.225782,-6.045503,1.785949,-6.822271,4.104624,7.144016,-9.412912,-8.275633,-6.134780,5.531408]],[[-9.766676,-7.061551,0.843198,2.383354,5.893789,-6.432953,-6.400280,5.576858,-8.380788,-4.425672,6.478805,4.632939,-1.302432,2.092086],[1.499015,-0.751176,6.579911,0.258876,0.723771,-9.699053,3.501162,-8.213219,-0.390754,9.953319,1.456585,-1.136482,9.415698,-9.345038],[5.026297,7.515667,-9.600142,-5.516315,-6.050472,5.530424,-8.799986,-1.969638,-6.442866,-3.159048,7.750904,-3.577533,2.375043,1.651993],[-6.606541,-7.706251,8.975121,-4.098298,9.127568,3.892184,4.630843,-7.690197,3.153335,9.359990,3.276091,-1.446710,-3.003929,9.918906],[4.527287,-6.227266,4.780571,3.263978,-1.621485,-4.200702,4.114312,-9.741240,-6.846669,-6.876227,6.395539,-0.519921,0.672202,4.870572],[6.659228,6.186382,9.345104,-6.950917,-9.585284,2.656826,8.168723,7.049533,-6.208410,5.039042,-4.009462,-7.215820,-4.360404,-3.039466],[4.732483,0.717385,-0.955027,4.878391,-1.261058,-8.275245,4.038205,-4.974736,-9.320514,1.300684,3.250994,1.282215,1.721966,0.429586],[-9.937297,3.806700,-3.576329,-7.474439,-9.012829,-9.054511,9.767754,5.739344,4.803609,-6.572629,6.851601,-4.387352,-8.695364,-6.110456],[0.583880,5.633208,6.207395,2.592017,1.168350,8.121279,9.103591,1.251217,-0.923845,9.830919,-2.386462,2.654176,-8.978214,-6.828925],[-2.970615,-4.337210,-6.628624,4.459851,-7.385753,3.040119,3.813997,0.212384,2.088776,8.204472,-2.081812,4.420706,-1.262389,-2.544033]],[[-1.268065,-5.233582,-6.627126,-6.297817,-4.035316,-5.929663,-9.038194,2.411826,-2.837693,-3.682833,2.377238,-8.006415,-6.184906,-4.561172],[-9.706567,4.589511,4.474753,9.274149,-8.607949,-0.951440,-9.035748,-0.124883,0.127096,-7.271811,-4.227641,5.398127,-1.257630,9.412212],[4.028595,-0.536092,8.904267,-8.605365,7.009818,-2.036038,6.836867,-5.795202,5.200669,-0.326332,-4.784309,7.679763,3.587395,-1.052502],[-4.328390,-1.785792,1.400016,5.537232,3.843408,2.917723,-4.176693,-7.119169,8.612325,5.424462,4.418097,7.924646,-5.969734,5.253173],[5.792163,1.139697,8.072480,8.965139,-6.031232,9.898604,-8.164012,-9.137392,-9.603970,-8.352855,-4.547874,0.349453,2.550623,5.345973],[4.086413,1.058078,9.365395,-6.903832,-6.207393,2.359305,-8.373816,-2.943288,-6.559901,8.422575,-0.425516,-0.703629,9.651786,-8.217903],[-7.519674,-8.395525,-2.887481,-8.315986,2.721435,0.687773,-6.514902,-5.109394,9.028406,8.130992,-5.667808,0.293719,-2.220402,6.678177],[8.881187,-5.983043,8.704701,6.409343,-3.463573,9.881913,-5.085823,4.331312,-6.831556,5.500763,0.067467,8.220455,-6.341126,-4.286815],[-5.835833,-6.260721,7.857997,1.348782,-7.784332,3.942667,-7.392126,-4.527315,6.593618,9.388391,9.859838,8.845114,5.188751,-1.670387],[6.568041,-9.684220,-3.858598,2.468791,5.231724,6.354391,8.420258,-7.352067,3.938328,-5.844567,-4.137994,-4.370462,3.903524,-7.898166]]], dtype = "float64")#candidate|4638|(8, 10, 14)|const|float64
var_4639 = relay.var("var_4639", dtype = "float64", shape = (8, 10, 14))#candidate|4639|(8, 10, 14)|var|float64
bop_4640 = relay.add(const_4638.astype('float64'), relay.reshape(var_4639.astype('float64'), relay.shape_of(const_4638))) # shape=(8, 10, 14)
func_1988_call = mod.get_global_var('func_1988')
func_1990_call = mutated_mod.get_global_var('func_1990')
const_4650 = relay.const([9.741871,0.773236,-5.683121,-6.290463,3.462310,1.561707,4.941409,-1.271601,-7.167208,-2.964108,-7.111007,-2.214646,-6.676907,-7.005024,-2.464354,1.253572,3.337396,-4.938007,-9.668885,-9.828462,8.807773,-1.635521,6.740186,3.961215,8.248495,-0.711030,-0.235977,-6.927724,0.325856,-5.201277,-2.223445,4.848308,6.949419,-4.938133,-7.257898,5.052578,-3.670886,-6.983869,-3.893230,4.576498,3.396434,3.522889,-1.276535,9.754664,8.373426,-3.800077,9.472722,2.036881,7.342600,-4.014860,-7.972077,6.125855,5.682862,3.014552,0.718284,1.932991,-7.305845,1.553579,8.914090,-6.090151,-0.289318,-3.044448,-6.688867,-1.143503,7.667942,6.584788,-5.540576,-3.697272,-7.138172,-3.260908,-2.697326,-7.316065,-4.176574,-6.779197,-9.389261,-6.293946,5.220907,-4.788245,-8.232846,3.151102,6.097149,-0.490925,-5.154266,-5.126524,-7.752808,-8.541082,-2.241834,0.125319,-9.246647,-3.279108,-5.706373,-6.361352,-6.106098,3.416215,3.319383,-1.341034,5.330284,8.608473,-3.686402,-0.221352,-7.155680,8.537462,3.773650,4.704818,-1.450556,3.188700,6.400077,-9.609562,-4.867685,-6.931880,9.417408,1.777660,4.849753,-3.662731,-0.762077,-7.830220,9.436866,1.442650,-3.590940,2.093354,2.532726,0.103158,-6.632530,-0.263107,9.210667,-1.244303,0.405695,1.156507,-1.720840,-5.429801,-6.580939,3.166798,0.825963,8.938100,-0.631299,-8.907387,4.284646,-7.635104,-8.585156,-1.155491,5.578449,-3.855460,-7.529402,-6.283693,5.487555,0.435699,8.322993,6.936859,-0.030584,3.239439,9.004703,-0.402710,4.412467,-1.041113,1.993679,-0.426668,-2.022880,9.827805,-7.353755,9.062646,3.793858,-6.259159,-1.297118,1.589804,-5.325652,2.895255,-1.584899,-7.254924,-2.045008,8.652526,8.495784,-5.622969,-3.359873,9.008209,3.917056,-6.696883,5.233428,-1.806584,7.838703,-7.620556,-5.674535,5.067439,5.970770,-4.299625,3.001420,0.485603,3.474190,-7.556022,-8.810464,2.640095,-3.630512,-8.937905,-9.622326,5.124830,-0.179987,4.632328,5.984294,7.444790,-6.638608,-4.890401,-2.060646,-6.155448,-2.387997,7.477596,-2.125489,-5.218619,2.441760,0.156583,2.523532,1.949022,-6.349203,-6.365304,4.070342,5.969535,-0.814037,9.945008,1.849538,-8.429722,-5.625781,-7.994426,-7.518924,-4.352859,3.334179,2.418937,-0.530620,-0.169125,9.899372,1.079499,4.580535,-9.152882,-6.747533,-2.457317,-3.108573,2.932150,-7.814749,5.329005,1.364504,-8.878705,5.528953,0.398074,-6.056963,0.931310,5.174098,2.801441,2.679314,-0.336925,8.420949,6.705788,6.292085,6.919458,5.944784,1.575145,-2.379231,2.257275,5.651212,1.638654,7.857836,-9.930674,9.648683,7.703577,5.172158,4.071325,-4.210856,-1.220731,9.408027,7.204140,4.732268,4.104974,9.409038,0.905607,-0.733027,-4.675682,9.918113,-3.860494,-5.313671,4.149647,1.902749,1.842554,-5.648494,9.596736,1.994172,-7.778101,2.727895,-0.659722,-4.081637,-4.264339,-7.472331,-6.394193,2.995537,0.197535,-6.801624,0.586390,7.454441,3.166153,6.518022,1.256756,-2.874886,6.857940,-0.632085,-8.520481,6.984447,6.118129,6.874911,-4.187081,-6.760385,9.872401,-4.145650,-6.576113,8.839944,1.908453,-6.702462,0.238984,-3.407883,3.850286,-2.718213,-7.613614,-6.384396,3.748092,3.052839,-6.520465,5.730482,9.021655,-7.622392,3.576382,8.001227,-0.370529,-6.237314,-2.481599,-1.164540,9.310445,5.119168,2.515804,5.099219,-6.561802,-8.204542,-2.580625,-6.182081,4.248705,6.714820,-0.204545,-6.650876,-9.277689,-6.117082,7.460977,-3.643813,5.570161,-9.711457,6.459009,7.869401,2.006959,-7.433947,-2.635710,5.435395,-6.448008,-4.665166,3.609565,0.562167,1.065981,0.564694,6.859557,5.479786,1.053592,3.419773,6.835950,-9.692442,-0.927068,-9.845357,4.996076,-2.255946,-0.347143,-0.910000,1.843742,-3.376042,9.222189,-7.501034,0.392115,2.522307,7.946964,-1.397575,-0.461446,9.644069,2.919152,3.434425,0.452857,-7.665531,-1.958443,-1.851684,1.786711,4.892879,-7.577086,3.269925,4.344335,-9.513622,7.728009,-6.404430,-0.377916,-2.797844,0.211814,-5.456059,6.791046,5.523729,-4.640252,-3.280685,-0.595527,-9.647515,7.761685,-2.630541,3.208176,6.100596,1.058816,-1.362260,-9.083522,-1.664662,-4.392909,-4.361686,3.543846,6.779318,1.844217,6.414945,2.321840,-1.242594,1.104559,-3.141072,-2.745415,0.244961,2.603159,6.044469,-3.313107,9.090423,-5.079813,5.575952,8.332389,0.663133,-1.518776,-9.215683,3.439960,-8.590067,-5.837540,5.468139,-6.403411,-2.496632,-0.794191,7.952394,9.174487,6.380109,3.639682,-1.951649,0.342270,4.040629,-1.580177,-6.890377,2.185856,5.313041,2.652992,-3.582456,1.865443,0.519612,-9.259319,2.670151,0.350288,9.154261,4.406180,-7.265182,-1.403438,-4.706783,8.833438,-8.271665,6.812638,-5.863427,-4.846874,-4.257239,-5.958173,7.802344,0.569718,-4.863109,2.737719,2.779560,6.644680,0.515681,1.582596,5.612944,-7.802678,8.429407,9.724959,-2.108548,-7.034056,9.337350,-5.840327,6.021726,5.939317,1.772294,-7.053025,1.129346,-9.630292,4.351599,-8.919244,-4.219056,-2.621040,-7.254856,-0.424289,4.382665,-8.398271,3.192275,1.354768,-2.680604,-5.137804,8.623912,-7.411118,9.488006,4.715907,-5.661837,0.158935,5.603367,2.222181,7.587448,-9.059744,-9.055471,2.989395,-3.701879,5.550153,-6.481589,-5.044191,-4.098508,-0.909606,0.277515,-0.756697,-7.749410,-2.085230,3.972678,6.532910,0.521182,4.030493,-7.592735,2.585415,0.373263,9.037826,5.193693,9.299872,-5.842750,7.024836,8.528276,-4.883363,4.526289,9.824184,-9.862642,1.581407,8.823326,9.299475,6.653607,-6.329973,6.774984,-8.423994,2.286742,-2.929416,-8.335596,5.507877,7.554988,1.301006,-4.813253,5.373877,9.947218,9.628419,1.108109,0.406839,9.763294,1.089104,0.505473,9.866177,4.169590,0.039436,9.903618,-4.318672,-1.674673,0.787587,-2.127257,1.649005,9.089037,-8.893095,0.758279,-0.297475,8.951489,-8.188312,7.071927,9.839377,2.988830,-1.391882,7.316005,-8.845132,-2.306758,4.443499,-2.543392,2.815102,2.193714,5.176793,2.750805,2.700519,8.896280,0.133990,-8.006055,-8.266733,2.876010,-6.812307,6.057113,-0.413457,1.110996,-9.131254,-5.503661,0.405293,-6.637946,3.068016,-6.405010,-7.732744,-2.297223,0.494162,4.710205,-2.136618,-6.830028,3.333883,2.448619,-2.311597,6.293518,1.800307,-1.286505,1.064592], dtype = "float32")#candidate|4650|(624,)|const|float32
call_4649 = relay.TupleGetItem(func_1988_call(relay.reshape(const_4650.astype('float32'), [12, 4, 13])), 0)
call_4651 = relay.TupleGetItem(func_1990_call(relay.reshape(const_4650.astype('float32'), [12, 4, 13])), 0)
output = relay.Tuple([bop_4640,call_4649,const_4650,])
output2 = relay.Tuple([bop_4640,call_4651,const_4650,])
func_4654 = relay.Function([var_4639,], output)
mod['func_4654'] = func_4654
mod = relay.transform.InferType()(mod)
var_4655 = relay.var("var_4655", dtype = "float64", shape = (8, 10, 14))#candidate|4655|(8, 10, 14)|var|float64
output = func_4654(var_4655)
func_4656 = relay.Function([var_4655], output)
mutated_mod['func_4656'] = func_4656
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4182_call = mod.get_global_var('func_4182')
func_4184_call = mutated_mod.get_global_var('func_4184')
call_4679 = func_4182_call()
call_4680 = func_4182_call()
output = call_4679
output2 = call_4680
func_4694 = relay.Function([], output)
mod['func_4694'] = func_4694
mod = relay.transform.InferType()(mod)
mutated_mod['func_4694'] = func_4694
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4694_call = mutated_mod.get_global_var('func_4694')
call_4695 = func_4694_call()
output = call_4695
func_4696 = relay.Function([], output)
mutated_mod['func_4696'] = func_4696
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4219_call = mod.get_global_var('func_4219')
func_4221_call = mutated_mod.get_global_var('func_4221')
call_4713 = relay.TupleGetItem(func_4219_call(), 0)
call_4714 = relay.TupleGetItem(func_4221_call(), 0)
func_3046_call = mod.get_global_var('func_3046')
func_3049_call = mutated_mod.get_global_var('func_3049')
var_4738 = relay.var("var_4738", dtype = "float32", shape = (1053,))#candidate|4738|(1053,)|var|float32
call_4737 = relay.TupleGetItem(func_3046_call(relay.reshape(var_4738.astype('float32'), [13, 9, 9])), 1)
call_4739 = relay.TupleGetItem(func_3049_call(relay.reshape(var_4738.astype('float32'), [13, 9, 9])), 1)
func_1988_call = mod.get_global_var('func_1988')
func_1990_call = mutated_mod.get_global_var('func_1990')
const_4755 = relay.const([[-0.489981,6.330257,-5.307297,-1.289089,4.173248,-7.924313,-7.756587,-2.054903,-8.643024,0.761255,-2.394810,-6.772349,-1.479109,-9.899822,5.880788,-9.780075,-3.480614,-7.167572,5.065514,-7.704734,-5.830413,5.462482,0.790515,-6.756903,-9.905978,-5.018071,7.670756,-6.202991,8.289122,-5.627687,-3.179434,-9.453739,-0.761576,-0.920481,-0.742297,0.427853,8.557394,7.821043,-8.085702,3.238815,9.033468,3.749402,-3.842021,8.117191,-7.599711,-0.332636,-9.804091,0.798533,4.840302,-5.089408,6.607091,-6.692238,-2.557937,2.352075,5.926174,-8.043908,-4.497437,1.111712,7.088380,-2.827848,0.667642,-2.729112,-0.129523,-8.828577,1.716451,6.251987,-7.379165,-6.896044,2.417854,6.730653,-5.242434,3.491060,2.574361,5.325702,8.325155,5.321361,8.643259,1.280068,7.461982,3.060177,-0.839954,2.084894,0.739755,-4.758912,6.027779,1.398725,8.528444,2.947442,-0.026019,0.027368,-1.732022,-7.336186,-7.806544,0.064290,2.155340,7.001263,8.235201,0.971652,-9.566994,2.951557,5.630306,8.712105,-4.763102,-3.549484,8.874547,-8.544112,-3.166505,9.045367,-1.079321,-1.392667,-0.661579,-5.443668,1.757595,-5.815547,3.374442,6.040255,-3.570510,9.242561,7.393362,4.536668,3.485443,9.983026,-8.727088,-7.912076,6.597626,8.547896,-3.359498,-1.024586,5.813292,9.259272,-3.489961,8.863662,9.379448,5.737323,-8.447299,-2.016242,8.745495,2.777282,-0.617552,-6.178614,1.497742,5.222993,4.385840,5.092862,-1.739078,6.429698,8.802189,-2.524833,8.936136,-7.252378,-1.472078,5.653268,-0.856149,-2.933068,6.129481,-1.813798,-0.027781,-9.193777,2.278481,-5.395418,3.696782,2.086758,-0.100375,2.127283,5.046231,-8.983947,-0.364196,0.899544,-5.701077,-2.224821,9.840803,-3.292855,-1.559225,5.338188,-0.276281,-3.694033,-6.071935,6.132870,1.957052,-6.404156,-8.772775,-4.575694,4.888779,7.776344,8.509553,7.943186,-7.582089,-9.309367,-6.196287,5.893915,6.497154,-8.748083,1.766664,7.747570,4.539558,4.248722,-4.759487,-8.742016,-3.817047,1.246650,5.920044,-4.581095,2.155896,3.471084,-3.815778,-0.578494,-1.129221,1.539236,-6.477387,-5.052238,7.462248,8.579640,0.732999,5.720828,4.780624,-3.039268,9.798641,7.580661,1.404888,-1.325505,7.209322,-2.770764,-2.928699,1.689910,-5.488885,-7.738735,7.654570,5.759330,3.702081,-7.011353,1.582329,-5.513535,9.180434,4.107166,-9.845708,5.678400,4.630880,8.950852,6.328493,-0.328643,-3.246837,3.685122,2.790887,-6.553783,1.426584,6.937111,6.442122,9.804608,3.494610,-9.241304,0.938945,5.134443,0.785195,-4.318879,8.151575,-6.845889,6.682815,-3.752600,-6.081220,8.695857,6.615319,-2.715679,-3.786069,-8.185455,9.748715,8.455990,-3.246179,4.360719,0.692711,-0.213636,-3.119692,-8.352747,8.438762,-9.760827,-3.250953,7.868386,6.319750,-1.560368,-6.463600,4.676578,2.998108,-3.065287,-3.188267,0.459261,8.479807,-3.389709,-2.428541,0.829958,4.737007,0.672209,2.656584,-8.605948,8.679462,2.761399,7.707003,7.149932,3.701068,-9.460690,3.053697,-3.797257,9.381324,-7.795491,1.203979,2.227704,-9.923473,-5.801531,-9.585990,-5.527243,-9.518446,8.944456,-8.927087,-5.581520,-1.165109,0.421556,4.741709,-6.305390,2.200126,-6.452191,-4.917160,5.125291,7.755204,-9.400170,-7.856614,8.192468,-6.188743,-6.830483,2.293117,9.039954,3.925861,9.089462,-4.645527,-9.148822,-0.146397,-8.253036,-2.397019,1.690712,-3.625837,3.384708,-2.171039,2.305973,1.175283,-0.762621,-2.723349,-9.194068,-4.256066,-7.346911,5.321824,-2.309740,-5.228755,-1.551565,6.899046,-7.274943,-0.014544,-8.234836,-0.497985,1.419885,-8.834531,-1.218319,9.299823,-6.989481,-6.057740,-7.993449,0.739440,0.452235,-4.083384,7.770437,-6.696440,4.458740,2.887044,1.713252,7.109404,-0.985792,-7.325745,-9.499829,8.536241,-0.251263,-0.413762,-0.651779,6.088981,1.581538,5.586889,3.829655,-0.570503,-9.376404,1.714382,1.974700,9.137916,-8.582978,-3.089501,6.538551,7.599523,5.500906,8.025085,-9.115101,1.661724,-3.011813,-9.784605,-4.846324,-8.735842,-9.888798,9.401157,-0.271397,4.106634,-9.682472,5.610722,-7.743580,3.031887,-9.305938,7.784008,-0.100216,-5.865603,1.142193,-0.486527,4.795460,2.309905,-3.939966,5.273297,3.370526,7.868702,-0.015504,2.550081,-7.364141,-9.217462,8.831079,5.153527,9.252624,-7.435347,-8.473211,-4.519546,5.987466,3.152158,-7.970605,-8.719480,-2.948791,-5.611560,0.959108,0.681495,-4.892734,-2.006577,5.497091,6.471379,-7.121082,9.889577,8.760185,-4.624612,9.936124,-8.169418,8.440591,3.728174,3.274989,-0.807049,-9.581835,-4.856569,-8.980767,-6.068439,-8.176142,-6.059537,-0.012076,4.044193,8.702790,-2.821087,5.626947,5.278929,-6.932125,-4.189843,-5.207726,-4.203856,-7.780766,6.869768,5.617184,-6.941697,-6.483444,-3.652487,7.851742,-7.527882,-8.912661,6.543784,3.556365,-1.030928,-4.488337,5.818484,0.204472,1.484113,-4.249696,-4.393730,-8.746263,7.443664,1.408860,8.972479,9.566188,-6.806829,0.706327,-7.605015,-3.163726,-9.972168,7.209494,5.369782,2.094759,5.622432,2.956994,0.732049,-8.273092,-2.910634,0.363608,-6.199106,2.153674,-3.371370,1.893548,-7.648791,0.775697,-9.245971,-1.065801,0.691951,-3.870872,-5.315431,1.649676,0.049171,-0.468559,3.674532,-6.968412,2.851084,-8.349157,-4.756792,-5.060620,6.934561,6.774637,-0.885832,9.966143,1.818919,-6.427352,-6.614148,2.979536,-0.797082,8.443546,9.609569,0.072476,-0.598138,-9.100558,1.834556,9.957820,-9.155308,-1.403917,-9.011090,9.240236,5.493084,4.777638,5.113877,-6.265809,3.027023,4.774671,5.761744,3.191416,7.995154,-5.853270,-7.430812,5.981345,-6.536011,8.924395,-8.818144,-6.205149,6.160147,2.060068,-9.695806,-6.360290,4.032323,8.257680,-4.394162,-9.229647,-1.693303,2.937998,-3.510655,-5.494192,-2.949016,-8.412323,-2.026845,7.098468,-9.300920,-9.240643,-8.103641,-4.417581,-1.109025,-2.254162,-2.816665,-8.614813,3.038951,2.932930,8.416711,-0.340503,-5.943884,-9.965919,8.014564,-2.850719,-6.747415,-1.630564,0.828109,-6.358737,-4.361415,-5.001866,-2.293994,-4.243560,-2.764133,7.342195,2.504085,-1.870803,-0.556549,-8.806555,-3.140154,-9.792407,2.725619,5.940949,2.226487,-6.022116,-8.904810,6.891500,-0.821510,-2.914251,3.742782,-2.668525,0.274147,-3.332849,7.240971,3.414836,0.314634,-3.323093]], dtype = "float32")#candidate|4755|(1, 624)|const|float32
call_4754 = relay.TupleGetItem(func_1988_call(relay.reshape(const_4755.astype('float32'), [12, 4, 13])), 0)
call_4756 = relay.TupleGetItem(func_1990_call(relay.reshape(const_4755.astype('float32'), [12, 4, 13])), 0)
var_4758 = relay.var("var_4758", dtype = "float32", shape = (1053,))#candidate|4758|(1053,)|var|float32
bop_4759 = relay.floor_divide(var_4738.astype('float64'), relay.reshape(var_4758.astype('float64'), relay.shape_of(var_4738))) # shape=(1053,)
func_4613_call = mod.get_global_var('func_4613')
func_4616_call = mutated_mod.get_global_var('func_4616')
call_4769 = func_4613_call(relay.reshape(call_4713.astype('float64'), [8, 15, 9]))
call_4770 = func_4613_call(relay.reshape(call_4713.astype('float64'), [8, 15, 9]))
func_2582_call = mod.get_global_var('func_2582')
func_2586_call = mutated_mod.get_global_var('func_2586')
var_4780 = relay.var("var_4780", dtype = "float32", shape = (630,))#candidate|4780|(630,)|var|float32
var_4781 = relay.var("var_4781", dtype = "float32", shape = (2340,))#candidate|4781|(2340,)|var|float32
call_4779 = relay.TupleGetItem(func_2582_call(relay.reshape(var_4780.astype('float32'), [6, 15, 7]), relay.reshape(var_4781.astype('float32'), [90, 26]), ), 0)
call_4782 = relay.TupleGetItem(func_2586_call(relay.reshape(var_4780.astype('float32'), [6, 15, 7]), relay.reshape(var_4781.astype('float32'), [90, 26]), ), 0)
func_4406_call = mod.get_global_var('func_4406')
func_4408_call = mutated_mod.get_global_var('func_4408')
const_4792 = relay.const([-2.168047,-9.171950], dtype = "float32")#candidate|4792|(2,)|const|float32
call_4791 = relay.TupleGetItem(func_4406_call(relay.reshape(const_4792.astype('float32'), [2, 1])), 3)
call_4793 = relay.TupleGetItem(func_4408_call(relay.reshape(const_4792.astype('float32'), [2, 1])), 3)
bop_4798 = relay.not_equal(const_4755.astype('bool'), relay.reshape(call_4754.astype('bool'), relay.shape_of(const_4755))) # shape=(1, 624)
bop_4801 = relay.not_equal(const_4755.astype('bool'), relay.reshape(call_4756.astype('bool'), relay.shape_of(const_4755))) # shape=(1, 624)
output = relay.Tuple([call_4713,call_4737,bop_4759,call_4769,call_4779,var_4780,var_4781,call_4791,const_4792,bop_4798,])
output2 = relay.Tuple([call_4714,call_4739,bop_4759,call_4770,call_4782,var_4780,var_4781,call_4793,const_4792,bop_4801,])
func_4802 = relay.Function([var_4738,var_4758,var_4780,var_4781,], output)
mod['func_4802'] = func_4802
mod = relay.transform.InferType()(mod)
var_4803 = relay.var("var_4803", dtype = "float32", shape = (1053,))#candidate|4803|(1053,)|var|float32
var_4804 = relay.var("var_4804", dtype = "float32", shape = (1053,))#candidate|4804|(1053,)|var|float32
var_4805 = relay.var("var_4805", dtype = "float32", shape = (630,))#candidate|4805|(630,)|var|float32
var_4806 = relay.var("var_4806", dtype = "float32", shape = (2340,))#candidate|4806|(2340,)|var|float32
output = func_4802(var_4803,var_4804,var_4805,var_4806,)
func_4807 = relay.Function([var_4803,var_4804,var_4805,var_4806,], output)
mutated_mod['func_4807'] = func_4807
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4335_call = mod.get_global_var('func_4335')
func_4336_call = mutated_mod.get_global_var('func_4336')
call_4812 = relay.TupleGetItem(func_4335_call(), 0)
call_4813 = relay.TupleGetItem(func_4336_call(), 0)
func_545_call = mod.get_global_var('func_545')
func_548_call = mutated_mod.get_global_var('func_548')
var_4816 = relay.var("var_4816", dtype = "int8", shape = (12,))#candidate|4816|(12,)|var|int8
call_4815 = relay.TupleGetItem(func_545_call(relay.reshape(var_4816.astype('int8'), [1, 6, 2])), 0)
call_4817 = relay.TupleGetItem(func_548_call(relay.reshape(var_4816.astype('int8'), [1, 6, 2])), 0)
output = relay.Tuple([call_4812,call_4815,var_4816,])
output2 = relay.Tuple([call_4813,call_4817,var_4816,])
func_4836 = relay.Function([var_4816,], output)
mod['func_4836'] = func_4836
mod = relay.transform.InferType()(mod)
mutated_mod['func_4836'] = func_4836
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4837 = relay.var("var_4837", dtype = "int8", shape = (12,))#candidate|4837|(12,)|var|int8
func_4836_call = mutated_mod.get_global_var('func_4836')
call_4838 = func_4836_call(var_4837)
output = call_4838
func_4839 = relay.Function([var_4837], output)
mutated_mod['func_4839'] = func_4839
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4335_call = mod.get_global_var('func_4335')
func_4336_call = mutated_mod.get_global_var('func_4336')
call_4861 = relay.TupleGetItem(func_4335_call(), 1)
call_4862 = relay.TupleGetItem(func_4336_call(), 1)
output = relay.Tuple([call_4861,])
output2 = relay.Tuple([call_4862,])
func_4866 = relay.Function([], output)
mod['func_4866'] = func_4866
mod = relay.transform.InferType()(mod)
mutated_mod['func_4866'] = func_4866
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4866_call = mutated_mod.get_global_var('func_4866')
call_4867 = func_4866_call()
output = call_4867
func_4868 = relay.Function([], output)
mutated_mod['func_4868'] = func_4868
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4866_call = mod.get_global_var('func_4866')
func_4868_call = mutated_mod.get_global_var('func_4868')
call_4894 = relay.TupleGetItem(func_4866_call(), 0)
call_4895 = relay.TupleGetItem(func_4868_call(), 0)
func_3616_call = mod.get_global_var('func_3616')
func_3619_call = mutated_mod.get_global_var('func_3619')
var_4901 = relay.var("var_4901", dtype = "uint32", shape = ())#candidate|4901|()|var|uint32
call_4900 = relay.TupleGetItem(func_3616_call(relay.reshape(var_4901.astype('uint32'), [])), 1)
call_4902 = relay.TupleGetItem(func_3619_call(relay.reshape(var_4901.astype('uint32'), [])), 1)
func_4866_call = mod.get_global_var('func_4866')
func_4868_call = mutated_mod.get_global_var('func_4868')
call_4915 = relay.TupleGetItem(func_4866_call(), 0)
call_4916 = relay.TupleGetItem(func_4868_call(), 0)
func_4836_call = mod.get_global_var('func_4836')
func_4839_call = mutated_mod.get_global_var('func_4839')
const_4930 = relay.const([10,-7,1,8,7,-10,7,-1,-6,9,-8,-7], dtype = "int8")#candidate|4930|(12,)|const|int8
call_4929 = relay.TupleGetItem(func_4836_call(relay.reshape(const_4930.astype('int8'), [12,])), 2)
call_4931 = relay.TupleGetItem(func_4839_call(relay.reshape(const_4930.astype('int8'), [12,])), 2)
func_4406_call = mod.get_global_var('func_4406')
func_4408_call = mutated_mod.get_global_var('func_4408')
const_4945 = relay.const([-5.430923,-1.356174], dtype = "float32")#candidate|4945|(2,)|const|float32
call_4944 = relay.TupleGetItem(func_4406_call(relay.reshape(const_4945.astype('float32'), [2, 1])), 0)
call_4946 = relay.TupleGetItem(func_4408_call(relay.reshape(const_4945.astype('float32'), [2, 1])), 0)
output = relay.Tuple([call_4894,call_4900,var_4901,call_4915,call_4929,const_4930,call_4944,const_4945,])
output2 = relay.Tuple([call_4895,call_4902,var_4901,call_4916,call_4931,const_4930,call_4946,const_4945,])
func_4953 = relay.Function([var_4901,], output)
mod['func_4953'] = func_4953
mod = relay.transform.InferType()(mod)
var_4954 = relay.var("var_4954", dtype = "uint32", shape = ())#candidate|4954|()|var|uint32
output = func_4953(var_4954)
func_4955 = relay.Function([var_4954], output)
mutated_mod['func_4955'] = func_4955
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5032 = relay.const([[[-10,6,7,-7,3,-1,-5,-2,10,-6,-2,-8],[-3,-4,6,10,2,-6,-1,4,-3,6,7,10],[6,10,7,9,-3,-10,4,5,-7,9,-5,3],[-5,5,-9,-9,-1,2,-7,9,5,-10,-9,-9],[5,-4,8,-8,8,-4,10,-1,2,-10,6,10],[-9,2,-3,-4,-6,1,-8,6,-4,-3,4,7],[9,7,-9,7,-5,-7,10,9,2,10,10,-7]],[[8,1,6,-10,-7,8,-3,-3,-6,7,4,1],[-7,-7,9,-1,4,9,-2,-4,-7,7,9,-8],[-10,8,2,-9,2,-6,-10,6,-9,-7,-5,1],[3,-9,8,7,4,-2,-7,-5,-1,-10,8,-6],[-10,-9,3,-6,-8,1,4,-3,-7,7,10,-5],[-5,-1,-8,1,9,4,9,-10,-4,-2,1,7],[10,4,-5,8,-1,-2,-5,8,2,10,9,-10]],[[-3,1,6,3,-1,-6,3,6,-5,4,3,8],[5,9,-5,9,1,-3,-8,-5,-1,-5,8,-10],[-2,-5,-10,10,-8,-1,10,-3,10,10,-10,8],[7,-8,7,-8,-6,-3,5,-2,-4,5,3,-5],[-4,2,1,7,-5,4,5,-10,6,-7,-7,-1],[-2,-3,6,9,-4,-6,-4,4,10,-1,10,5],[-3,7,1,-10,-8,-9,2,6,2,-10,7,-4]],[[-2,9,6,-9,6,10,-8,4,1,10,-3,1],[8,-2,7,-1,2,-2,6,9,9,-1,8,-3],[-9,4,9,9,-7,2,8,-3,-3,-1,8,1],[9,-6,-9,8,2,-2,-9,8,-4,2,-4,-4],[-1,8,-7,9,-2,5,-6,1,-6,8,-4,3],[-7,-9,7,-9,-10,-8,-5,5,3,-1,4,6],[-3,-7,-9,4,-3,-8,-6,-1,-6,-5,7,10]],[[-1,-9,-1,9,7,10,6,5,-6,-2,-2,9],[3,10,-4,-1,9,4,-5,5,-8,-10,-10,-6],[8,9,4,-9,-1,-8,-9,-4,9,10,10,3],[-2,-4,8,1,9,-9,7,9,-6,5,-6,-4],[6,6,-9,3,4,6,-9,-1,6,-3,-7,-10],[-1,-10,3,-1,-8,-2,8,10,5,7,4,4],[7,10,-2,-8,-5,-10,-2,5,10,9,-7,1]]], dtype = "int16")#candidate|5032|(5, 7, 12)|const|int16
const_5033 = relay.const([[[7,2,3,3,2,2,6,8,6,-7,1,7],[7,7,5,7,-8,-7,8,-2,7,-4,1,9],[7,-4,-3,-10,6,-10,-9,-4,-3,9,-10,-6],[6,1,2,-5,-5,-9,1,-1,-9,7,-7,7],[1,-5,-7,-1,9,-2,-2,-9,-5,7,10,-2],[-10,-8,-9,7,3,4,-3,4,-7,-2,-5,-7],[-1,-6,-4,-9,7,-1,6,-8,-10,-8,-7,4]],[[1,4,8,6,-6,8,3,4,9,-8,-3,-2],[1,7,-4,-4,8,-3,-9,-4,3,7,-1,6],[6,5,-10,-6,8,-9,-6,-9,10,1,-1,4],[-8,8,2,9,7,9,10,-8,-1,-1,1,1],[2,-1,-8,-6,6,6,-9,-7,-1,-2,4,-1],[1,3,-2,5,8,-8,3,-1,-10,-8,-5,3],[-3,-9,9,5,-2,3,-3,-1,-8,-5,4,3]],[[-6,3,8,-7,5,2,-6,5,3,5,10,-5],[4,1,-10,4,-5,-7,-4,-6,10,4,-2,7],[1,-1,7,-9,-8,9,-5,3,-9,-3,-5,-4],[6,5,1,1,-4,-10,8,2,-2,-5,-3,6],[-1,8,9,-2,-2,-1,9,-4,6,-3,-5,-4],[5,1,8,-3,8,4,3,-2,-5,9,-9,-8],[-9,1,6,-9,5,-9,1,3,-3,-9,-6,-3]],[[-6,-6,7,9,-5,-8,-8,-9,10,9,2,-1],[10,1,-10,7,-9,8,5,10,10,10,-8,10],[-1,-9,10,7,-1,5,5,5,3,9,-3,-9],[-8,10,1,4,-10,4,5,1,4,-5,-8,-2],[-8,-2,-10,5,-1,6,4,4,4,-5,1,-5],[1,-3,-2,1,-6,2,-3,5,-1,-8,2,-10],[-9,-5,10,5,-2,4,3,-6,8,6,5,7]],[[-4,-1,-6,3,8,6,-10,3,9,-5,-3,-3],[1,4,3,-1,6,-5,5,-6,8,10,2,9],[1,8,-7,4,-10,-3,8,2,-8,-4,7,-5],[-3,2,-10,-1,-6,-4,-7,10,-5,-2,7,-8],[-3,9,4,2,10,-5,8,3,4,-9,-4,-10],[-2,-5,-8,-5,5,10,7,-1,9,-7,-1,-3],[8,7,10,2,-2,2,-9,-3,-2,-8,-7,6]]], dtype = "int16")#candidate|5033|(5, 7, 12)|const|int16
bop_5034 = relay.minimum(const_5032.astype('int16'), relay.reshape(const_5033.astype('int16'), relay.shape_of(const_5032))) # shape=(5, 7, 12)
bop_5037 = relay.subtract(const_5032.astype('float64'), relay.reshape(const_5033.astype('float64'), relay.shape_of(const_5032))) # shape=(5, 7, 12)
uop_5042 = relay.asinh(const_5033.astype('float32')) # shape=(5, 7, 12)
func_1487_call = mod.get_global_var('func_1487')
func_1490_call = mutated_mod.get_global_var('func_1490')
var_5067 = relay.var("var_5067", dtype = "uint64", shape = ())#candidate|5067|()|var|uint64
var_5068 = relay.var("var_5068", dtype = "uint64", shape = (286,))#candidate|5068|(286,)|var|uint64
call_5066 = relay.TupleGetItem(func_1487_call(relay.reshape(var_5067.astype('uint64'), []), relay.reshape(var_5068.astype('uint64'), [13, 2, 11]), ), 0)
call_5069 = relay.TupleGetItem(func_1490_call(relay.reshape(var_5067.astype('uint64'), []), relay.reshape(var_5068.astype('uint64'), [13, 2, 11]), ), 0)
output = relay.Tuple([bop_5034,bop_5037,uop_5042,call_5066,var_5067,var_5068,])
output2 = relay.Tuple([bop_5034,bop_5037,uop_5042,call_5069,var_5067,var_5068,])
func_5072 = relay.Function([var_5067,var_5068,], output)
mod['func_5072'] = func_5072
mod = relay.transform.InferType()(mod)
mutated_mod['func_5072'] = func_5072
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5072_call = mutated_mod.get_global_var('func_5072')
var_5074 = relay.var("var_5074", dtype = "uint64", shape = ())#candidate|5074|()|var|uint64
var_5075 = relay.var("var_5075", dtype = "uint64", shape = (286,))#candidate|5075|(286,)|var|uint64
call_5073 = func_5072_call(var_5074,var_5075,)
output = call_5073
func_5076 = relay.Function([var_5074,var_5075,], output)
mutated_mod['func_5076'] = func_5076
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4335_call = mod.get_global_var('func_4335')
func_4336_call = mutated_mod.get_global_var('func_4336')
call_5091 = relay.TupleGetItem(func_4335_call(), 0)
call_5092 = relay.TupleGetItem(func_4336_call(), 0)
output = relay.Tuple([call_5091,])
output2 = relay.Tuple([call_5092,])
func_5095 = relay.Function([], output)
mod['func_5095'] = func_5095
mod = relay.transform.InferType()(mod)
mutated_mod['func_5095'] = func_5095
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5095_call = mutated_mod.get_global_var('func_5095')
call_5096 = func_5095_call()
output = call_5096
func_5097 = relay.Function([], output)
mutated_mod['func_5097'] = func_5097
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4694_call = mod.get_global_var('func_4694')
func_4696_call = mutated_mod.get_global_var('func_4696')
call_5109 = func_4694_call()
call_5110 = func_4694_call()
uop_5121 = relay.tan(call_5109.astype('float64')) # shape=(8, 15, 9)
uop_5123 = relay.tan(call_5110.astype('float64')) # shape=(8, 15, 9)
output = uop_5121
output2 = uop_5123
func_5132 = relay.Function([], output)
mod['func_5132'] = func_5132
mod = relay.transform.InferType()(mod)
output = func_5132()
func_5133 = relay.Function([], output)
mutated_mod['func_5133'] = func_5133
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4694_call = mod.get_global_var('func_4694')
func_4696_call = mutated_mod.get_global_var('func_4696')
call_5151 = func_4694_call()
call_5152 = func_4694_call()
output = relay.Tuple([call_5151,])
output2 = relay.Tuple([call_5152,])
func_5179 = relay.Function([], output)
mod['func_5179'] = func_5179
mod = relay.transform.InferType()(mod)
output = func_5179()
func_5180 = relay.Function([], output)
mutated_mod['func_5180'] = func_5180
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5208 = relay.const([[[-5.994030,-2.445400,-3.585810,9.718850,-6.825505,-9.778338,-9.948377,0.888246,-2.322458,-6.218284,0.645783,2.201396,6.227288,8.662253,8.586177],[-7.249826,-6.519016,0.726191,-7.707361,8.368128,-7.551238,5.257117,-1.011703,-6.590513,-4.375715,-2.643591,8.130475,2.207287,-5.661617,6.390631],[8.337004,2.871094,-0.461385,-2.126824,1.747699,-6.743486,5.747202,-6.659324,-8.350534,-3.161121,8.595100,-1.667350,-1.201499,8.316179,-4.506319],[1.001185,3.967690,4.160108,2.010920,-9.303549,1.371698,-4.095792,6.182386,0.067191,-8.103369,-8.459960,-6.877679,-9.858885,-2.921512,7.018997],[6.625184,-1.387415,6.560928,-6.958536,4.404002,-2.149102,7.633818,5.426906,2.293990,6.713298,9.488622,-4.014043,-7.225306,-0.690443,-5.549923],[-5.751882,-7.011341,-5.260237,-3.083873,-1.527315,-0.047720,7.825526,-2.538439,-8.840311,5.602209,8.581940,4.898442,-5.675986,-6.214419,3.280772],[8.784753,-0.078040,-2.058207,0.557364,-9.855426,1.406423,-0.481013,-3.768761,5.584522,4.363785,-2.682104,0.483317,-6.564841,-2.891053,3.508166],[5.524682,8.668388,-4.970136,2.803162,-9.383237,-5.882350,-4.720662,-9.001734,7.515151,2.443870,-0.979523,5.112341,8.684689,-5.591378,-0.385290],[7.981580,-7.633027,-4.822644,1.252564,-8.277459,8.828451,5.193849,-6.815540,-3.356266,6.941238,-5.410186,-3.747667,-1.195977,1.734709,9.937283],[-1.745152,4.522199,8.952406,1.942307,6.438086,-1.981965,-1.842527,-7.574340,-1.152576,-4.769261,-9.737818,2.920624,-8.188053,9.625859,-5.427334],[-6.189657,1.686741,6.514557,5.563307,7.092917,2.678129,5.799974,6.171873,-9.420138,-7.635558,-7.726618,4.148799,7.725151,7.732402,7.173670],[9.049022,-0.167091,6.689333,1.836499,-8.442390,-2.883606,9.858577,-1.566540,8.334553,-1.793158,1.427165,8.866596,-5.979159,1.655349,1.295684],[-7.202140,-1.847297,2.465518,-1.110062,-7.603759,-0.135038,-3.536994,-4.961600,-6.615380,3.539484,9.435809,8.561850,0.548453,-5.930411,1.384801],[2.128335,-4.449202,-6.486595,-6.972762,1.973901,-0.523057,9.483154,1.641517,3.302348,6.712081,-6.776763,8.257171,5.977167,5.080379,1.566403],[5.898238,-7.019368,-7.028742,-8.832978,-0.226694,6.343631,8.797066,5.007942,-8.026286,-9.507664,-4.761650,4.186742,7.903994,-4.134848,-0.650993],[3.551327,3.562207,5.680687,6.974462,-4.901490,2.949482,-0.416494,-8.928564,6.381261,-4.678047,-3.048749,-6.525278,-5.060623,9.695692,5.139219]],[[3.898455,8.563713,-1.129901,-7.442270,-3.278294,5.413661,3.501789,-2.249347,-1.771318,-4.667102,-7.202240,7.613703,-0.701016,-1.966694,-3.661732],[4.195202,-9.749557,-9.081627,-4.499698,-2.611440,9.740299,-4.111186,8.628838,-6.291955,1.899513,-4.621701,-5.802508,-2.343833,-7.292010,-6.608322],[-7.634992,-8.888986,-4.266150,-9.323288,9.309475,-8.792487,-8.882536,9.978953,2.424928,1.561301,5.746125,-0.666320,5.877190,-7.566254,8.311083],[7.768691,6.248028,4.009042,-0.604830,-6.155444,-6.584636,6.442983,4.355974,3.265885,-5.295231,4.407152,-8.078345,9.216417,7.861492,3.677861],[-0.985832,-1.967457,-9.368962,-9.396209,0.673234,4.262314,5.300228,4.374784,2.240283,9.685475,9.997810,1.692119,8.170843,-5.666323,9.312707],[6.024053,-6.148502,6.752212,2.920339,7.674793,-2.456625,0.570350,2.860800,-8.429789,7.184549,4.487652,3.385826,-7.732630,9.873817,2.934100],[8.198408,5.748944,-7.162869,-9.721458,-3.536791,6.023305,-5.486524,-8.296925,5.104830,0.733434,-0.715255,2.719374,1.102312,-2.552873,-0.039304],[3.306328,5.178110,0.230426,5.035782,6.578820,-0.363432,-5.004129,8.372553,-5.427139,-6.636052,1.587805,-0.180000,-0.160863,3.751761,2.822750],[-4.412713,3.679923,6.342012,7.335011,-2.583503,-9.142508,2.986914,-2.062587,4.653156,0.740824,-1.320680,-9.820781,-1.786752,-0.567719,-1.621510],[4.285106,4.453683,-7.183068,-0.129076,5.790847,-9.704824,5.656952,0.363822,5.510735,-3.543034,-3.585713,1.471523,-6.140066,0.587536,5.659338],[-1.630221,-6.760132,0.278364,-0.780107,-0.710008,1.938819,4.019626,6.163625,-9.525814,9.670642,3.873522,4.906794,-8.522291,-2.031977,-4.872314],[2.114298,4.310678,-5.954650,-6.253728,-3.941088,2.420849,-0.996382,-6.058155,8.201656,-0.970890,1.235455,-8.954109,-6.213618,-5.813943,-3.306235],[9.842577,6.913683,0.365808,4.200577,-7.715471,-0.836449,6.927505,-4.851879,-6.353046,-1.880562,-1.614468,5.296727,-5.539756,-5.296845,-5.540003],[-8.986406,-7.234766,-8.610484,8.784911,-6.762801,7.841262,9.193377,4.579878,-4.971567,3.297064,-1.256399,6.122494,-1.126146,2.656479,-0.527912],[8.874091,4.177618,6.034122,6.551444,-4.252848,-2.693432,7.833709,-0.990422,-0.032587,-4.661091,-2.815101,0.434866,-2.233160,8.408992,-5.633800],[-8.647127,-1.374487,-4.512499,6.474166,3.347945,4.397550,-1.676701,3.795362,3.188062,5.435127,-5.986188,-1.828322,5.136694,6.539511,-1.379894]],[[0.876518,-7.195898,3.183654,6.173195,-1.066264,-7.835660,-4.455214,-8.720576,4.629926,2.851855,-6.153670,-2.095867,-5.674967,6.794616,2.432833],[7.827458,-5.470467,-2.675562,-5.831725,3.512916,-8.271219,-8.163205,-5.559915,4.137639,-5.702623,-5.955116,-7.724450,0.087258,9.283063,-1.816451],[2.404571,7.643923,8.510919,1.222371,4.099571,7.786329,-5.417337,-1.557761,-3.549887,-6.598385,1.963447,2.541261,-3.081702,-0.487923,-0.544693],[-1.810125,-3.428400,8.707334,8.704734,-8.956868,3.091805,8.635573,4.850169,-7.167133,3.203226,8.972597,-8.095550,-1.322621,5.592143,-1.133016],[3.835893,5.564256,-1.429011,-2.473736,9.380937,-4.169015,-2.371802,-7.144484,5.044645,1.194008,-7.448904,0.972251,-9.364023,0.157619,-1.567244],[1.294016,-9.263205,-4.012210,6.555368,-4.600618,6.806542,-0.202848,-1.355427,6.548324,5.041430,-3.984674,6.242976,-7.113085,7.779707,-3.984106],[7.691905,-7.170728,-5.855652,-4.831113,9.426759,4.092408,7.048273,-3.283471,-3.592334,-1.590793,-4.526622,3.722927,-4.351202,1.963717,1.002368],[-3.762691,1.138833,-4.477939,3.299139,-2.667102,-4.600051,6.890640,8.457344,1.540953,8.744139,9.955769,6.611803,-2.585892,8.555889,0.995204],[1.486366,4.550523,-4.092814,-8.837763,3.586421,-1.502117,-9.823940,4.636523,6.176259,-9.526136,-7.941483,8.967262,-4.083196,-1.475581,2.594842],[5.539659,9.985568,-3.932289,-5.584060,9.548206,2.502350,1.867191,0.599391,5.115569,-2.559222,0.829928,4.963483,-1.894240,-4.440365,7.550643],[-0.837909,-7.333577,-9.309047,-4.916412,-5.712415,-9.762348,4.492807,7.906736,-5.637810,-5.038366,-4.188626,-9.923911,-8.193893,-2.156810,6.684608],[-9.196407,-7.280286,3.947844,0.047575,1.499197,2.035279,3.344394,-8.856115,9.952278,5.371948,5.320169,4.143165,-2.851289,-9.964872,6.962292],[-4.090680,2.238851,-4.545712,6.725906,-9.274117,2.553003,-3.446744,2.310956,-2.538032,-3.875358,-2.070498,8.464795,8.271170,0.791842,-9.101425],[6.920540,-6.862201,5.828634,2.310731,7.006672,-4.741793,2.666675,8.355235,5.544129,7.705471,-4.101323,5.290502,1.090831,8.985662,-9.022229],[9.097381,-9.495857,-2.411435,3.247829,8.478233,-4.174712,7.356012,-7.094627,-9.330403,-6.906174,9.123622,5.022734,2.918408,6.035663,3.396145],[-2.647925,3.709521,-3.589634,5.443579,9.500318,-5.096958,-7.121654,9.931999,8.053307,-8.717943,3.351234,-5.729512,-7.154577,-8.556188,-4.315860]],[[8.616171,-4.133014,3.634401,-7.020368,-5.923929,7.130833,6.410564,2.309875,8.858882,-0.154683,-7.170928,6.951838,-5.756622,-8.378286,-5.873075],[-6.342136,-5.582073,-4.891785,-4.516118,-7.397184,3.142022,8.301649,9.248080,4.211198,9.502564,-0.215905,-4.721979,-1.511677,5.897822,2.013495],[3.029262,8.785468,-4.593411,-3.600465,-8.282453,-4.529342,-1.512026,5.550201,-5.647355,-3.711929,-3.838567,3.368427,0.294109,-5.234148,0.804266],[-5.989616,4.512003,-8.477467,2.035428,-0.620516,8.462852,6.367716,4.707978,0.068048,-4.538593,4.942062,-1.517083,0.885093,6.826130,-4.105952],[6.529241,3.998863,-1.349590,-6.530129,-6.795083,9.631467,9.729868,-5.749129,4.416214,-0.093176,0.834036,8.203060,0.759364,2.891990,-0.540157],[7.120009,-0.276828,-1.568737,-2.261554,4.650761,-9.958270,-7.096646,4.097295,-3.442728,-3.001244,-4.847396,-8.238389,5.732752,-4.212274,-2.099999],[-0.730789,-4.991355,8.566666,5.092994,-5.428601,-9.379645,9.079394,-6.434927,8.095994,-1.132593,-8.134616,-1.539260,-2.272073,-8.689118,-7.314770],[3.040028,-0.494469,-2.101720,-9.388891,5.952610,-2.901610,0.753278,-0.229223,-9.443605,-2.562605,5.272581,-0.947671,-4.768711,8.134055,7.234746],[3.793917,-6.005134,2.523157,9.865142,-4.725594,-0.893125,4.450205,-1.561745,6.286852,2.262461,0.245344,-3.092071,-5.670381,-0.393671,1.031999],[-2.594673,-6.631391,-2.271669,5.185816,-6.160591,-4.229504,-5.225114,-3.757939,2.599671,7.123088,-6.086521,7.385443,-1.391728,8.914900,7.211253],[6.467792,2.869534,-9.040663,8.840368,-4.728222,1.388985,-9.695653,-9.030877,7.883825,-5.117134,-4.761329,0.450493,-9.815646,-4.629894,1.602561],[-7.110512,7.379521,-8.399668,-5.201462,4.254997,8.030565,0.432912,-2.212366,6.481713,-7.560348,-8.829192,-5.200878,-7.967531,-3.307533,-2.576107],[4.679716,-9.652363,-5.714129,-9.519473,-9.319757,3.477397,0.402854,9.838759,-8.531447,5.146465,-0.184802,-1.917879,5.974357,6.469821,8.694871],[2.382714,0.754443,6.570716,5.968853,-7.745183,2.787516,6.934860,-0.806423,-8.632014,7.074551,4.488135,7.087536,-1.814811,5.440848,-7.595212],[4.499964,6.483735,5.675368,7.107699,-3.092509,-3.177675,8.660303,-1.642016,-8.381438,5.133191,-9.203746,-3.198331,-1.250635,4.162189,-7.777113],[-8.829985,1.515185,-9.094324,-5.964946,1.947247,0.960061,-4.548049,-7.956443,4.330391,7.319642,-7.502597,8.880693,0.798722,-2.705785,3.065784]],[[0.473119,-1.285172,7.920396,8.539375,-9.134570,9.623475,8.944978,9.184392,-6.157856,-0.821560,9.769600,-0.347395,9.737701,-8.092050,-3.381655],[1.038615,0.711921,-8.391445,-6.294776,-0.178431,0.317309,9.526472,8.723982,-6.426939,6.221208,6.219435,9.562183,5.914937,8.360318,-6.383235],[-6.158509,4.135606,-8.936603,-1.242093,-2.530471,7.104889,-4.403659,-4.597055,4.027978,-4.226697,5.169110,0.610240,1.563609,-7.732045,-2.744761],[-1.794818,-2.522869,-6.591310,3.913608,7.850990,6.082228,5.029698,0.091315,3.876178,-7.945236,7.839097,5.418863,9.911183,-5.666414,-8.910294],[-0.950762,6.039337,-1.466077,4.301951,-1.865466,6.454560,-3.124720,-1.811219,-8.592079,-3.102816,1.755065,5.295901,4.939365,2.072908,-6.924271],[-5.866018,-9.885625,6.889963,-3.449560,-5.676114,2.303447,-1.742145,1.635119,-2.887732,3.988540,-4.881214,-3.628214,8.021367,-0.826419,1.447972],[-7.042261,-1.411116,4.211429,-0.441434,-4.246101,3.667097,-0.414783,2.128694,-7.193490,-6.449182,0.235291,-8.923712,-9.953424,8.400702,-6.134019],[0.404584,-2.362775,2.441210,3.630025,9.679538,-2.238144,9.749524,6.238853,-7.859033,-9.790736,1.940953,-7.236447,-6.135020,8.216900,5.213022],[-4.587480,0.840222,-5.151428,4.010902,-1.735483,-3.753223,5.932377,3.096765,-9.845735,-6.551728,-7.668783,-7.874227,5.059186,8.087725,-2.126412],[-7.166742,0.456601,-1.675759,-5.671006,4.692104,-2.898199,6.047244,-1.525128,-5.717378,9.143495,3.853294,-8.777861,-9.072735,-1.135259,7.502061],[-1.368803,-7.905711,7.499915,-6.642419,-4.906501,-8.769212,6.330588,-5.288486,-3.515610,-0.612819,7.411694,-0.727396,-7.398137,8.870364,-1.296658],[1.268394,-2.346338,9.740939,-7.481467,1.922231,2.945817,-0.070335,1.359524,-1.887632,0.174563,3.202903,9.516062,0.543824,-0.579791,-4.260525],[5.664887,-0.791208,8.175471,2.388667,2.837542,-4.391892,-4.802993,6.791025,9.243916,4.943865,-3.529635,9.429754,-4.384660,5.426109,8.280205],[-4.500115,-3.697257,-9.357465,-6.980288,6.993575,-3.747344,-6.498415,-0.978209,0.589168,-2.205542,2.040970,0.847329,-7.391284,0.448456,2.806053],[9.843522,6.940810,-0.217750,-1.760155,6.903224,-0.298572,0.589350,-9.099189,-7.364400,-2.443062,-5.005923,1.198521,-8.179023,-1.847303,-8.282179],[9.014414,4.184714,6.413117,-4.034676,-5.248837,5.945746,-0.381003,7.130048,0.418512,-6.903613,-6.785019,3.924967,-1.466899,3.467140,1.025788]],[[-3.972397,-3.191519,9.271813,0.984496,9.105117,3.219950,-3.229939,5.012808,-3.083040,3.527268,-8.661059,1.598545,-9.268727,-9.000050,-8.276685],[2.896985,-7.487831,-3.324774,9.929684,9.012878,4.094081,7.529038,-1.742132,-5.376540,2.598640,8.375976,9.968170,2.043643,9.920015,-7.454240],[5.210244,-4.403386,7.274274,1.100325,1.720164,7.461128,8.821366,-7.614491,9.482647,-3.959877,1.431838,5.146199,1.312242,-0.220551,-9.832057],[-5.190300,-6.475854,6.877555,-5.266654,-6.123541,9.612237,-1.097552,-2.119607,2.643182,9.013817,3.134145,7.727092,-8.101122,0.166447,2.251841],[6.625011,-7.622185,9.682218,0.901469,-3.540478,2.316179,1.085247,4.929560,-5.980687,4.976741,-1.145535,-4.122840,0.426971,-1.790727,8.318859],[-8.462253,-7.355626,-4.401751,-9.582235,1.490779,3.944755,4.455999,-1.232122,7.775834,5.243477,3.508362,6.245413,6.409205,-6.471300,2.084062],[-1.554045,-7.523865,-8.143118,-8.229607,-4.336954,-7.213729,-0.409554,-4.090412,-4.113795,7.069696,-8.841742,2.729970,1.978158,4.017496,6.589801],[3.429239,-7.506144,-3.259630,1.191461,-8.642025,-0.195513,4.994884,-5.078983,2.219566,1.296271,-3.034006,9.323693,5.099894,-7.632907,-3.763175],[-7.566866,5.578801,0.905241,4.025494,-5.594973,-8.675866,-1.352928,4.646513,4.658689,6.355338,-9.804459,6.819389,-9.948206,-2.643238,6.207680],[-0.823427,-2.240531,-1.242522,2.439236,-7.539841,9.609371,-8.066322,6.216968,-9.559518,-9.834640,7.432785,9.677591,7.532443,-1.880619,7.396627],[-2.259058,0.296550,7.095791,6.104733,0.638212,5.233517,-9.540837,7.514925,4.602811,6.537481,7.265484,-7.533650,1.467366,-6.168504,2.975512],[4.929043,6.519411,2.371231,-7.459501,4.614733,-1.745687,7.772674,-6.109122,-0.204583,-6.141143,-0.819113,2.785779,5.683127,-5.766939,-6.258575],[7.228690,7.940233,-3.226337,7.578724,3.089818,-5.618693,4.307541,9.447961,-4.334760,-3.139325,1.000645,1.733653,6.334841,3.612176,-8.166021],[-0.343021,8.661659,9.739723,-8.985449,-9.529964,4.143742,6.646811,-9.592099,7.240704,6.128528,-1.090633,-3.161096,1.779709,-7.829097,1.924628],[-0.247869,-2.444150,2.742377,6.178931,-9.684344,-7.730710,-7.151662,0.482113,-8.528034,-1.872102,-0.577995,-5.387590,-5.905082,-6.075074,-2.733078],[7.446413,1.542553,-0.062706,8.379105,-9.999214,9.628508,-3.230795,6.333670,9.347209,-7.549906,4.071682,-3.850747,5.358521,8.477349,5.801985]],[[1.928199,-2.339566,-4.939856,1.543630,-5.369998,0.614742,-8.015071,9.686525,2.172935,7.515052,-8.639123,-8.379059,-8.700736,6.920620,-3.116576],[4.154554,-2.808673,-7.771326,-7.212003,-6.376676,-3.578131,0.951347,5.024882,-8.701844,6.235151,-2.161851,-1.243102,-6.787627,-5.310019,-0.332924],[-6.772581,-0.861243,8.254133,5.162239,7.950714,-2.318341,7.539884,-5.721203,-1.979534,-1.158110,1.073283,-0.203421,5.280927,-1.119119,-1.347731],[-6.081416,1.893412,6.825449,-9.494385,-8.000896,2.233873,0.260286,-9.383925,9.491196,-0.604639,-5.442667,3.503884,4.727557,2.502083,-2.945985],[-7.292991,-5.979793,-1.733206,-3.348176,-8.206335,-7.799589,3.617784,2.263495,8.509749,-1.844010,-5.869983,2.698335,2.231971,-0.751134,8.969150],[4.956519,-9.155559,8.025842,9.427492,5.900631,-2.419460,6.229891,0.700802,-7.717903,-0.196194,-5.762765,7.358468,-6.515737,-3.412388,-9.126278],[1.796475,4.618539,6.427446,-4.309050,-2.863203,1.864408,0.311535,-8.277845,7.333106,-5.197714,9.428465,-6.145460,-3.133491,-6.812487,3.858908],[-8.247098,-4.464180,-4.360999,-7.759451,-4.495807,-3.831373,-1.542671,4.840116,-9.015336,2.746217,-2.176284,4.494670,9.834124,8.512895,-8.040080],[-7.757481,2.068416,-1.684557,6.233288,1.343854,2.072428,8.173063,8.344502,-7.841256,2.815087,-5.035223,7.010149,-0.445952,-2.624922,-1.398381],[-7.512234,9.963103,7.482528,-8.821244,1.121816,-0.526807,0.088356,-6.626426,-6.481165,0.398710,-8.253954,5.439663,6.518140,-2.494338,9.910315],[6.117972,-2.590047,-8.515250,-7.871072,-6.614528,-3.565185,1.186613,-9.867051,-0.448815,-0.068921,-6.482608,-7.639408,-6.443328,9.424646,4.812914],[9.060350,-4.208606,8.517927,5.235249,4.979378,7.065638,1.396811,-9.480524,-7.392183,-9.350415,-4.605854,6.018289,2.601965,-5.647602,2.818357],[6.789520,-3.981077,-7.363545,-3.796603,-0.630787,8.932735,5.072331,-7.125776,-1.841329,6.111012,1.604746,3.796145,-4.570703,3.443458,9.270082],[-2.981938,9.937407,-5.739937,-1.212391,-7.414564,8.326830,0.957794,-8.424915,-8.028098,-9.270596,1.832452,2.453981,7.089279,5.125027,-2.307172],[6.065816,-2.840559,-7.616380,-2.603941,5.692143,5.670848,-8.312739,-7.236880,-4.484674,1.686567,-7.475881,-8.404720,7.793990,1.013723,-8.190162],[4.568819,-6.458024,6.841925,-6.762680,0.431995,-9.845089,-0.647648,0.514170,9.077932,5.097252,6.893590,4.092580,6.382913,4.588596,-7.311319]],[[5.215509,6.842108,6.313775,-1.065247,-0.989790,5.248680,-0.527397,7.702846,-5.738548,4.941082,2.958526,1.778702,-7.863047,8.054889,3.262561],[-3.458580,0.937393,-4.783823,-0.848358,-3.465902,3.175057,4.005010,-8.593133,0.212137,2.658798,-0.525593,0.758177,4.168661,4.300319,1.769265],[-0.241681,7.987679,7.625455,-9.873581,-0.507955,-3.115181,1.742714,4.961634,-2.668413,-5.125747,2.729051,-0.603821,8.255812,-3.708836,-2.398030],[6.271623,2.828091,-8.486613,5.241409,-4.426730,-2.633366,0.768719,-6.449908,6.301274,1.564669,-1.513171,-8.594269,-4.939245,6.296433,-4.755308],[-9.262881,-2.355850,-8.096417,6.071249,-7.096031,8.192535,-6.856058,-9.254429,8.296152,-5.905876,0.096879,5.808209,0.662815,6.734290,9.497919],[9.872940,-7.724258,1.881051,-5.222398,-2.328427,6.060417,8.185885,-1.939819,-0.683198,4.653185,-2.936952,-9.992249,0.744399,4.548326,-8.623121],[-6.778309,1.615452,5.315630,-6.098832,7.984975,-0.901316,-4.041446,-4.299001,2.060437,7.587558,1.624776,-8.522814,3.585672,-9.684550,-4.351377],[5.388459,-4.280348,2.123699,-6.347594,9.874662,-4.152258,-0.387326,-7.492628,2.650135,9.857558,-5.460104,2.595130,-4.165362,-9.675001,5.151369],[0.812049,-4.752506,9.416589,-8.778945,5.306993,3.229100,3.843480,-5.556601,8.130685,-3.453799,-5.637682,3.509077,0.197483,2.498759,-6.541473],[-1.935333,1.846354,1.696196,8.289579,-8.980263,-4.623837,-3.017626,3.484646,0.348958,5.369976,-5.815610,-7.493964,9.362639,9.652151,-9.101238],[1.050378,-7.519346,3.986467,-2.381368,0.814607,5.178688,-6.118290,5.238302,-3.298126,-7.900761,-4.458927,-9.698420,1.713900,-7.433518,-2.223739],[-7.580551,-6.741002,-4.038595,1.541906,-4.194954,-3.350723,-6.440676,8.895742,-7.499701,-4.918656,1.259548,0.268422,6.181070,8.784712,-5.720549],[-5.819800,-1.699771,3.139581,-9.108259,4.169012,1.154172,-9.475343,-4.568323,5.040537,-4.914509,-6.278752,5.172640,8.159992,-8.402852,-4.596099],[-4.504177,7.130293,8.540005,8.987700,3.019693,-9.524134,-3.634688,-1.191654,1.033294,-5.246088,4.318229,2.678985,-3.039865,-3.113483,-3.404109],[4.224123,8.796779,7.259437,7.730028,4.444411,2.732344,1.111363,-5.994584,-6.039002,-8.940409,6.937751,0.902005,-2.810301,3.531369,-6.485264],[9.197227,-1.607582,6.214912,-6.896782,8.800156,7.238441,3.362707,-2.966492,7.097215,7.325410,9.635573,0.971892,-6.184110,0.722029,-8.935213]],[[6.983683,4.412314,2.583150,5.702389,-1.424405,8.745537,0.645441,-1.746590,-9.463215,-7.293212,4.827863,6.501883,9.313349,-9.655051,8.695055],[-0.295434,9.523313,9.719040,-8.359454,-5.840550,6.838469,2.225377,-5.109845,-3.769029,9.378581,1.238108,2.883746,4.931886,-2.658726,6.544664],[9.397534,-4.826153,4.101493,0.394011,-0.449716,-0.835103,5.568164,-5.772416,-6.839535,-4.989992,8.640558,-8.852382,-0.467923,3.491756,-0.264746],[1.055934,1.464695,-1.971233,0.783291,-0.555122,7.071110,5.117610,-5.036659,-3.299382,-9.492704,-9.245729,-8.958638,-2.610261,7.539550,2.555209],[-3.613617,6.292784,-4.636054,7.083106,4.039120,6.682147,-0.610904,5.700859,-0.386453,7.181518,-1.095455,5.205014,0.382681,-1.794004,8.744168],[-7.612711,-1.629467,8.857225,5.312257,-3.846559,7.167700,6.295454,-0.922752,-4.256162,-2.512303,3.593953,-6.428198,-7.226711,1.680208,-7.061334],[-1.435990,-6.116221,-9.561869,-0.790186,-8.303049,-1.516540,-6.733782,-4.959926,-6.451389,-4.789471,-2.207412,8.983105,-8.511191,-6.571982,-2.102824],[-5.571300,8.981380,0.377866,3.106880,1.877695,-0.370499,3.517185,8.089583,9.574254,-1.203129,4.787715,-3.406446,2.789134,-2.036388,-4.253563],[-4.941850,1.398200,9.373135,9.118894,-4.696762,9.169321,-9.797058,-1.242862,-5.457801,0.398859,7.112875,8.759454,-7.896670,-1.488933,4.613495],[4.385043,3.532083,1.932278,-5.575127,0.919068,-5.412978,4.793561,8.906401,-4.507447,-2.559426,5.626430,-4.373494,7.141082,1.390430,7.685810],[-3.981905,8.450848,-6.777883,-1.897543,0.505946,8.462644,-6.370315,0.431671,-9.602599,9.530397,4.667864,-9.119204,-5.615040,-6.122006,2.243713],[-9.810431,7.240145,-5.660326,-5.977097,-3.674247,-5.008750,8.091066,-1.827684,9.014989,2.473599,4.594329,8.144218,-2.625464,5.074842,7.580684],[1.478351,-7.062976,0.873811,-6.551110,-5.247852,-9.839535,-7.148964,4.303460,-4.441264,-0.634322,-4.034753,-2.432396,3.618490,0.211057,-6.378826],[-0.334941,-9.965990,-9.860343,5.543255,4.193359,7.104474,-5.038503,-0.409508,-8.861598,-9.723580,-7.165166,9.750372,-8.912081,7.288144,6.524054],[3.594816,5.324530,8.141098,6.877497,-7.771819,-8.381163,-2.426116,-2.780142,-2.887547,7.529736,0.429545,7.873541,4.820122,4.712013,3.578194],[-3.263770,-6.758022,-1.420158,0.825287,-7.910419,0.155465,3.395714,-8.688876,-6.767068,-7.848939,7.190696,9.136784,-4.452086,1.941262,5.339003]],[[4.672680,4.339948,-8.327928,9.868046,7.366976,8.290356,-7.121874,2.956037,-2.976231,4.449840,2.306415,-7.875129,-9.199380,1.478845,1.956799],[-8.082413,-8.921516,-1.000237,-7.191446,-2.127457,-0.424562,-1.524834,-2.717991,5.173784,5.517027,-6.200794,0.594057,7.499737,3.084523,6.902128],[6.534585,6.976460,3.609140,-4.714137,2.323457,-8.093606,0.259905,-6.501833,-3.205622,-6.319066,7.403696,-7.594706,-4.518146,-7.996273,5.363089],[-4.358724,4.238378,-0.165041,3.922429,-2.848767,-2.372487,-7.948292,7.814612,3.326259,-2.953774,6.433628,-7.675659,1.796283,6.027648,7.319583],[1.630103,-7.928131,5.487465,-1.813894,2.117060,-1.030071,4.865818,8.656757,6.394134,-8.024234,1.632951,4.508911,2.090451,-5.243922,-8.377438],[9.716725,7.766953,6.057493,8.848068,6.744259,-4.678125,-1.808222,2.766829,8.152332,-0.387512,-0.302713,6.850246,-1.369846,-4.996234,-6.668941],[-0.121817,6.193228,1.830677,-6.162096,-8.276373,2.246889,7.923633,-6.393665,-8.374641,-3.018668,5.416700,-8.203248,-6.938227,8.226153,6.663631],[-1.443971,-5.331141,2.027619,-1.671482,-4.449989,4.397565,6.327232,8.310816,5.646059,5.679772,-1.385063,0.296369,-8.482525,1.722006,-7.920643],[9.640280,-4.020489,-9.664585,1.259168,-0.804684,9.757183,2.069832,-2.285430,-3.408698,-4.148544,3.292423,-7.765167,3.754536,5.756406,0.090250],[0.188167,-7.953162,-4.440300,2.890810,3.901749,0.088142,-0.563525,2.453100,1.869319,-3.886743,-2.086743,-5.018588,-3.558905,5.945653,4.705560],[-4.455346,7.771860,-2.340203,4.509164,5.091665,9.318207,-7.023399,7.347693,1.221164,7.770863,5.568234,0.937488,1.683645,3.158874,8.763697],[1.621230,-9.598018,-8.341430,-5.441700,-5.735159,-7.410291,-3.520079,7.083032,3.583144,-6.986116,2.435934,-8.500843,7.165268,-7.251350,-1.618022],[0.382499,6.890693,-5.348168,8.255185,-9.654780,-4.847396,7.057999,0.189153,-3.258932,6.062835,9.753278,-8.285458,-5.319464,6.734594,7.955946],[-8.337439,8.811630,-5.754282,-1.354984,-6.115629,5.641810,6.497710,6.067588,-0.839190,1.714696,-7.832081,-7.429097,-5.630827,6.797588,1.268737],[8.409508,1.223267,-5.908199,-7.096905,6.826205,8.740896,3.364482,-1.737698,3.662405,1.563005,-0.982075,3.038631,-8.734952,5.732930,-0.015945],[-8.629888,8.171117,-8.194111,1.046738,-8.533828,-5.452155,-9.193088,-7.443369,-5.164044,5.323510,9.024458,-0.867012,-1.966252,-1.753363,-0.226605]],[[-0.725773,3.414843,-8.099969,3.891499,-8.255139,0.105641,0.767941,7.951801,-5.087137,0.996463,4.569664,3.008474,-5.619620,-3.474194,-7.181503],[2.107821,-5.189118,-7.861896,-5.071519,-8.134231,7.851818,4.448066,2.676490,-4.078266,4.955340,4.249174,-8.352477,-9.413179,-3.813268,-2.453916],[8.886185,-7.598197,-2.470252,-2.132926,-5.603447,0.599495,-9.982048,6.751561,1.733077,1.627169,9.198063,9.117594,-1.850023,-2.024715,6.308631],[5.138652,-8.167098,-5.618946,-4.112629,-9.732807,9.131441,-1.030611,-4.890046,-5.408021,9.125743,-4.401178,-3.874741,9.624303,8.105281,-6.535812],[-1.396283,1.393558,3.481052,7.043966,9.095582,-3.808502,1.754104,-2.551485,-8.449914,-2.060482,8.731526,3.703177,-0.240970,-0.818585,-3.476331],[-9.358214,-3.577400,-9.011725,6.406086,9.054377,3.397156,-5.495613,-4.430430,-3.076202,2.225794,-5.028120,-8.920485,-4.471199,-8.563444,-3.527668],[6.613089,2.716683,4.084550,6.002380,0.295939,1.190002,7.777871,-0.934340,-6.652165,-6.604355,2.429516,-4.783262,-5.850338,-9.016077,5.509669],[-3.534014,-3.002544,-3.827455,0.955690,-7.372527,-0.468564,8.222814,9.695071,8.695977,-1.195391,4.629582,2.004858,6.172006,4.083756,-0.581557],[4.799503,2.099137,4.651158,6.902680,-3.871258,8.193964,5.924121,-9.172646,-9.231621,-1.775998,9.537868,-9.610786,-2.084065,9.570398,-3.010471],[-1.625487,-2.586558,2.734847,-6.733044,-9.360086,-7.287454,3.051479,-8.632035,9.651885,-9.067753,4.998658,1.547702,-3.805606,-8.614619,2.845239],[7.971200,-6.716050,-5.710707,0.447882,-2.290120,8.124827,-8.923924,-2.527713,-5.143721,9.330863,0.797893,-5.744775,1.347062,-6.128906,-6.971202],[-8.725431,-7.310178,7.233059,-1.257526,3.293022,-8.464799,8.237128,2.078327,3.503226,2.498822,-4.128833,-2.417041,-9.349435,9.527905,5.680849],[-4.157424,-7.655012,-6.101507,3.445747,-7.932621,0.730675,0.502490,9.430604,-5.089984,-5.535012,-8.562427,-5.206340,-3.915136,-7.879674,-3.701098],[3.817959,4.573385,8.806740,-1.063683,-1.584706,8.999890,4.981999,-2.623507,7.202378,-7.425053,9.436343,5.088603,3.287872,-0.863365,0.321946],[9.093558,7.975403,-8.570705,-6.958402,-7.998496,-1.218207,-2.676023,-6.194781,-7.804104,0.471747,-1.686099,4.661228,-5.253829,4.403364,-8.232664],[6.893847,4.567552,-2.132099,8.495651,-4.665652,6.772396,5.329664,6.137702,2.297026,-0.066043,-7.387990,8.364897,-5.563177,-7.345146,-3.509299]],[[-6.264974,-8.565047,-9.990118,-3.328835,5.284479,5.448708,7.569523,-8.924187,5.374979,-3.557164,-4.196921,-9.209524,4.634213,8.186050,-9.424912],[-1.267591,-6.024522,-9.426702,-6.550658,-7.719669,-5.248311,-3.081602,3.483769,-7.783121,-4.147157,-8.768265,4.589246,-9.918338,9.480624,-6.658132],[2.999182,-7.727229,3.019274,1.977579,2.870724,1.584490,6.365761,4.611638,-5.929622,9.999092,8.873960,6.154944,-3.471503,8.606643,8.312836],[8.059285,-2.043938,-4.290901,1.554032,7.615488,-7.047204,-7.134053,7.007452,-6.024695,9.187322,-7.466200,4.911928,2.624044,-7.508327,9.149503],[-1.707560,-4.311490,-4.202337,-4.802982,-4.563426,1.399923,-7.709076,4.459684,3.711768,7.929604,8.701200,8.119283,1.596017,1.056166,7.049090],[4.518934,7.499522,4.640532,2.866526,6.317762,0.136101,-3.178224,-1.454450,7.270848,1.390917,-5.779265,7.511746,7.303117,-5.670633,-9.159832],[5.434928,5.426665,2.202168,-7.345327,-7.994272,9.884975,-8.109414,1.886761,7.941694,8.781666,5.083644,9.483524,6.215499,0.226252,9.204174],[-5.782784,-5.226989,-3.238888,-4.661685,-1.761180,-4.306843,-8.120213,0.028156,-2.862898,3.286757,9.359904,2.607970,4.167169,9.983429,9.921460],[-5.233546,1.335902,2.486046,-9.421228,-5.037773,1.023256,-1.969309,-0.389933,3.011197,-0.988554,-4.505450,-4.338879,2.081957,-7.484013,-6.590536],[6.371719,7.943490,9.516690,-9.277408,-1.461137,-0.636714,-4.356175,-6.922206,-0.379970,4.390456,-3.499287,-7.789766,3.112111,-5.179062,-4.301682],[9.443785,3.209810,-6.563526,-0.713064,-5.651595,-2.170791,-5.027633,-1.293407,6.002313,-2.485503,5.814125,-0.523228,6.525544,6.531409,2.743810],[4.109798,-0.603030,-7.409883,2.760269,1.829025,6.561112,0.658968,-1.938010,-2.659110,-9.347210,-1.655364,4.515823,-3.096558,2.296015,-9.174121],[0.565761,4.397844,-7.304380,5.493053,-6.117768,-8.949572,-5.982925,0.357979,6.512081,-9.946459,1.620975,6.414311,3.037807,8.911204,-5.935332],[7.754169,7.933898,1.094626,-2.456018,-5.803823,3.853700,0.393592,-9.761111,4.524150,-7.865114,3.694882,-5.347709,7.623878,-4.488510,-3.296777],[-5.265764,9.391398,8.718036,-3.515007,9.482462,-2.963032,1.830859,-3.765195,7.803366,8.186285,2.239381,1.447262,9.093788,0.625504,0.547571],[-8.849763,2.442656,-7.190909,-4.185526,3.586156,3.579915,5.968931,3.389430,-2.899572,4.950992,-1.188105,-8.490651,-7.525112,-4.935141,-6.087209]],[[-8.885725,-5.888854,-1.682150,-8.948699,3.490134,-3.227989,6.656790,2.828307,7.357660,8.430983,9.649105,2.695196,0.036167,1.535890,6.736458],[-5.494187,8.128660,7.034772,5.324997,-7.449145,8.489923,6.555283,-0.387537,1.134159,-5.170635,-3.801982,2.120377,0.294904,-5.426104,-9.862523],[-3.664541,9.220166,8.063593,2.151083,-4.023168,9.350388,-0.046206,-8.296435,6.876311,-1.744383,5.635844,8.023784,-6.218425,1.019749,-0.501299],[-6.219079,-8.447151,-4.478026,7.625409,-7.736902,5.926158,9.909382,-2.231830,3.466008,-1.591995,4.945807,-2.128637,-3.661312,-0.749979,5.092712],[1.782304,7.263497,6.792290,-8.099070,-5.011935,-8.336005,-6.466906,1.699745,-4.331191,1.511577,6.679931,-0.258208,5.320950,-7.103258,-9.432031],[-7.636204,-3.507260,-8.386884,8.770781,-9.318497,6.689893,-8.968540,-3.989704,1.170388,-0.136308,3.291556,5.453721,1.336334,-1.108085,-4.228101],[-2.521729,8.080989,8.667242,-4.337111,-3.347633,-4.753514,-6.201826,8.066936,-2.498114,7.672904,1.278216,-8.215545,-1.015920,-3.450194,-7.346554],[2.201126,3.369965,7.179304,-2.375271,-2.537138,-7.297949,7.587137,7.606589,3.217080,5.464727,-1.017929,-5.023493,7.388917,-0.160184,6.906908],[0.131819,0.281078,2.402684,8.931085,1.463823,-9.653851,-7.628287,-0.865230,1.734210,7.102869,-4.173362,9.393595,4.453667,2.687727,-2.537519],[-9.182042,2.172490,5.269293,-9.813803,8.004509,-0.340423,7.313605,4.235338,-7.970148,4.342463,6.224917,3.663765,-5.159314,8.372183,-5.885277],[3.543697,3.152529,6.274235,0.181396,9.889196,2.558379,5.423829,-7.677020,-2.172613,0.809264,5.208108,1.073517,4.791646,5.762296,6.188654],[2.573110,-2.811304,0.604362,9.069744,8.397852,3.881308,-7.670308,9.504844,1.811853,0.903407,1.934822,1.694561,0.819848,1.748982,-6.357910],[-0.962553,7.998163,-9.429004,-1.423046,3.644853,1.521670,-5.843084,2.289771,-6.399092,4.130354,5.500747,-2.801611,8.033092,-8.956918,-4.306368],[3.811592,-2.392674,7.079558,-2.824411,-2.048054,1.920236,-3.793695,3.698202,3.320210,6.979277,2.268834,-1.171222,8.382992,0.823376,-2.667259],[-3.578502,-4.443667,-0.331924,-2.245849,-1.228966,-6.989372,-1.372601,7.892022,8.774210,2.476334,-6.598429,1.063459,0.182107,-9.741516,-8.659012],[-1.221960,2.189648,9.611327,6.627702,-6.495558,-6.998142,2.576731,0.563187,-6.423656,-0.995504,3.387087,-0.053358,1.710697,-6.335830,-9.232362]],[[-6.575906,1.899451,-9.739474,9.304197,-4.499518,1.528410,-8.542206,4.021831,7.281684,-4.134602,-8.525801,-2.636586,8.049482,-7.228170,-8.824785],[-0.921103,1.300756,-7.496113,1.213692,0.005351,1.906496,-8.866165,-2.753969,9.581293,-3.497748,9.937296,-2.203070,4.275358,7.765893,5.133150],[5.952282,-8.388945,8.929001,-2.034271,-3.656811,6.684135,-2.752161,0.198372,9.292975,-9.591792,0.413434,-7.256001,-2.874674,7.160624,8.953067],[8.434313,-3.416500,-1.457991,-2.994371,-0.306048,-8.112356,-8.963250,-8.348705,6.413250,-3.804013,6.598414,8.534613,5.801450,1.903791,9.852584],[8.411639,0.732238,-8.450061,-4.894263,-0.011600,1.925282,-1.681391,5.044583,-5.198507,-5.160691,2.196245,-8.163300,-3.795402,-8.176928,-4.555647],[-0.110830,-6.175904,0.555331,2.711494,4.138103,9.056017,9.673130,-3.923542,-4.295306,7.781483,2.069656,-7.391534,-2.602079,-9.130501,-6.019290],[-8.346112,-3.029549,7.600915,-6.977163,1.125446,-2.994237,-8.452615,-7.043697,6.905399,0.838748,-6.323433,5.538694,-5.626182,8.382982,-5.122807],[7.763214,-9.886335,3.419302,-5.224712,4.150675,7.276163,-9.790518,6.114406,-3.236603,6.041596,7.942325,-9.702327,-1.496080,-2.078086,7.547543],[3.296460,-0.988864,1.909612,8.972981,8.212412,7.317087,2.198205,-8.597776,0.489334,3.395008,8.025580,-8.617099,6.625707,-3.042593,-8.090567],[-3.293364,7.346443,2.443664,-9.400836,-8.107655,9.405223,-8.894128,4.554136,4.134972,9.843272,7.855655,-3.434741,-5.960172,-2.125177,8.876885],[3.471443,-5.982758,-8.015349,5.306927,3.647720,-7.536676,0.638941,5.082314,-6.263438,4.968106,5.813280,-0.787472,-8.868964,9.869910,0.589695],[4.859151,-4.353754,7.628151,-4.739210,5.271322,-4.954618,-8.449482,-1.928942,-8.141030,0.803045,-7.164448,-3.059144,-6.220094,0.447872,6.153011],[-3.526040,5.291511,0.034777,-8.617146,0.917713,5.296276,6.110289,-2.492822,4.995882,-2.359509,-9.022185,7.824113,7.354121,-9.275639,9.752369],[-3.641036,-9.404632,-1.723541,-0.216503,5.788261,-6.367520,-5.953648,4.552971,2.788799,2.178923,1.387804,-2.360556,1.957963,-2.526468,-8.179273],[3.769701,2.471967,6.631943,6.761760,-8.366164,1.887286,4.982176,7.531441,-7.993958,3.707776,-5.390673,-7.530964,2.912585,1.624199,8.513108],[3.615693,-1.421679,-2.793076,-8.857242,5.177066,8.215791,9.300758,-4.060827,5.690217,4.962739,8.788433,8.737775,-2.804683,6.644127,-5.632498]],[[-8.075943,2.087620,-9.898100,-2.856236,-5.257662,-1.930910,-5.912693,-2.188907,-4.816522,-1.293070,8.016958,5.747811,5.847561,6.594165,0.565837],[6.410711,-6.228206,-0.369757,-2.014274,7.033006,5.015314,-4.395676,-0.487619,-5.405535,-3.431733,-9.207652,-1.353188,-0.786799,-9.335024,-0.268512],[2.836843,2.836356,8.903442,3.732286,-3.367382,-5.351955,-4.181850,3.439596,5.331618,6.393894,-2.202339,0.806715,3.591045,-5.586975,-1.324584],[-0.360450,-0.181125,3.689262,5.688610,-5.169209,3.363454,1.403271,9.229104,-5.007620,7.005410,4.456548,-7.061502,-7.875985,-1.738284,7.634323],[-1.080852,0.036624,7.917257,-7.820068,5.083677,-2.952425,6.945070,-6.659720,-1.437730,3.802441,-9.614422,-8.581429,-9.750526,-9.001280,1.701692],[8.567905,4.552381,6.396407,2.197768,-1.443289,-0.813213,1.548629,-0.946193,-9.849402,4.308744,-9.290929,-3.111035,-9.119707,-5.805568,-0.009768],[-1.996706,4.084008,-0.114110,-5.017959,-8.582849,-9.836851,5.820645,-9.960196,4.557860,-2.018550,-9.888229,-5.721500,2.871199,3.009827,0.494153],[-6.029283,4.516628,-8.724265,-0.851645,0.143776,0.235459,6.950603,-4.698768,-0.093407,-7.768485,-1.589085,-7.244260,-4.838513,2.778702,8.807179],[6.420821,-6.579343,4.079100,-9.759477,4.189041,-6.812920,6.373984,4.044840,9.073404,5.965883,-5.568763,-7.605145,-0.957425,2.190861,9.984474],[-9.135033,-8.035446,3.463463,5.503679,4.007944,-4.440924,4.429187,8.942088,1.215203,2.022366,-2.361190,-8.551609,-5.378105,3.342926,-3.967390],[-8.876922,9.604832,3.959025,-8.790055,-2.278064,1.808114,6.276672,-2.122919,0.213150,6.399728,-5.679213,-2.853641,-3.291693,1.812856,-3.673181],[-6.884543,5.539114,8.007541,8.362968,7.798989,0.937948,-6.438475,-2.637944,4.003678,-8.481958,-9.440827,5.374816,4.062279,5.846461,4.611707],[-6.509355,-9.598298,-5.749351,-2.242984,4.862301,0.544905,-6.254878,3.366200,8.898483,-2.595160,1.693008,-8.971754,2.433979,-8.064922,0.027117],[8.649750,-2.597361,9.437009,0.556017,-8.368840,4.455952,-1.261633,5.612830,-4.395402,-3.381032,-9.472049,7.687385,-9.023079,-2.433008,0.562818],[8.974211,6.703798,-0.835477,-4.896749,-6.749360,-5.278978,-5.831142,5.206250,-4.740173,-3.543423,-2.430367,-4.766647,-6.500519,-7.111052,-5.523565],[-3.043585,-8.716531,5.186657,-9.420039,6.242740,-5.881464,-4.511590,-0.164179,-0.657697,-2.186165,3.179808,2.301468,-6.748761,1.863909,-3.867278]]], dtype = "float64")#candidate|5208|(15, 16, 15)|const|float64
uop_5209 = relay.asinh(const_5208.astype('float64')) # shape=(15, 16, 15)
func_1458_call = mod.get_global_var('func_1458')
func_1460_call = mutated_mod.get_global_var('func_1460')
const_5214 = relay.const([[10,10,-3,10,5,-2,-2,-8,8,-8],[10,-9,-10,10,8,9,-1,1,-5,5],[-10,-8,4,5,-3,-1,6,-3,-8,4],[-8,-3,5,3,6,-9,-7,-9,2,-2],[-6,9,3,-8,2,9,8,-8,-8,10],[-1,10,-7,-6,2,3,1,2,3,-6],[-4,6,-7,-5,-7,8,-6,-3,-9,2],[-9,1,-9,3,-5,-9,-2,-2,-9,-3],[-2,4,1,-10,8,-4,-9,6,-8,-1],[10,3,-5,2,-4,2,-7,-5,-6,1],[-9,3,-9,-5,2,1,6,-5,-1,-6],[-3,2,-9,-10,-1,10,-7,-7,4,3],[-8,7,10,-6,8,-7,-4,-10,-5,-7],[3,-6,10,7,7,-1,8,-10,9,-1],[-8,7,7,-5,10,-9,-9,3,10,5],[-2,2,-6,8,8,4,10,-10,-1,-1],[6,3,-7,-5,8,4,-10,-10,1,-4],[9,-7,-1,6,-3,-4,7,4,-6,2],[-1,-4,5,7,-5,-6,-1,3,-3,6],[8,-5,-7,-10,8,-7,-8,-1,-8,-10],[-1,7,-1,-6,1,-10,-1,-5,-2,5],[9,-2,-4,2,3,-7,8,8,4,6],[5,-6,9,-9,8,-2,6,4,6,4],[-5,6,4,-7,-10,-8,6,-3,7,5],[-6,10,10,-3,-9,-6,9,10,-7,-4],[7,-2,-5,-8,-7,-6,2,6,-2,-8],[8,-5,-5,-10,3,9,-3,-5,-6,-1],[-7,-7,-4,1,-1,-7,3,6,1,2],[8,-4,-2,9,3,10,-6,-9,9,-8],[-10,-9,-9,3,-9,-5,-6,-7,-9,6],[-6,-4,-3,-3,-4,3,6,-7,5,8],[-4,-10,-2,-1,-5,5,-5,-4,-1,-3],[7,-10,-7,1,-6,-5,-2,3,4,-6],[-2,10,9,8,-10,6,-6,-4,3,5],[4,10,-9,-9,8,3,6,7,-7,5],[7,-9,-8,-8,-8,-8,4,-8,2,5],[-3,-8,-10,-4,4,-6,-1,-6,8,7],[4,8,-5,9,6,-5,-2,7,2,1],[-9,6,4,8,-3,-9,10,5,6,3],[9,10,-5,-3,6,-2,3,-6,10,-8],[-9,-10,-4,6,-10,-1,-1,2,8,4],[1,1,-3,-10,3,6,5,-2,-2,1],[1,2,-5,-9,-10,-8,-8,5,-8,-2],[5,2,3,-10,-2,6,-7,5,-3,-4],[7,3,1,-5,-3,9,-7,7,-2,-7],[-10,-8,-3,8,9,-8,5,2,-9,6],[-5,9,3,4,-3,-2,5,-1,-4,4],[-2,-10,4,-5,-8,-5,6,-7,-10,-6],[3,7,7,8,-8,7,-5,-8,-10,3],[6,2,-2,2,-1,6,-4,6,2,5],[6,-9,-10,1,-2,9,-4,1,-10,-7],[-9,7,-7,-9,6,-8,-5,-5,-6,6],[-3,-5,3,-3,8,8,-5,3,9,-1],[-5,9,-6,4,3,7,4,-2,-9,-2],[7,4,-4,-3,10,-7,-3,-4,1,10]], dtype = "uint32")#candidate|5214|(55, 10)|const|uint32
call_5213 = func_1458_call(relay.reshape(const_5214.astype('uint32'), [10, 11, 5]))
call_5215 = func_1458_call(relay.reshape(const_5214.astype('uint32'), [10, 11, 5]))
uop_5218 = relay.sin(uop_5209.astype('float64')) # shape=(15, 16, 15)
uop_5222 = relay.atanh(uop_5209.astype('float64')) # shape=(15, 16, 15)
output = relay.Tuple([call_5213,const_5214,uop_5218,uop_5222,])
output2 = relay.Tuple([call_5215,const_5214,uop_5218,uop_5222,])
func_5244 = relay.Function([], output)
mod['func_5244'] = func_5244
mod = relay.transform.InferType()(mod)
mutated_mod['func_5244'] = func_5244
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5244_call = mutated_mod.get_global_var('func_5244')
call_5245 = func_5244_call()
output = call_5245
func_5246 = relay.Function([], output)
mutated_mod['func_5246'] = func_5246
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5095_call = mod.get_global_var('func_5095')
func_5097_call = mutated_mod.get_global_var('func_5097')
call_5305 = relay.TupleGetItem(func_5095_call(), 0)
call_5306 = relay.TupleGetItem(func_5097_call(), 0)
func_5132_call = mod.get_global_var('func_5132')
func_5133_call = mutated_mod.get_global_var('func_5133')
call_5309 = func_5132_call()
call_5310 = func_5132_call()
output = relay.Tuple([call_5305,call_5309,])
output2 = relay.Tuple([call_5306,call_5310,])
func_5311 = relay.Function([], output)
mod['func_5311'] = func_5311
mod = relay.transform.InferType()(mod)
mutated_mod['func_5311'] = func_5311
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5311_call = mutated_mod.get_global_var('func_5311')
call_5312 = func_5311_call()
output = call_5312
func_5313 = relay.Function([], output)
mutated_mod['func_5313'] = func_5313
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4262_call = mod.get_global_var('func_4262')
func_4263_call = mutated_mod.get_global_var('func_4263')
call_5354 = func_4262_call()
call_5355 = func_4262_call()
var_5358 = relay.var("var_5358", dtype = "float64", shape = (8, 15, 9))#candidate|5358|(8, 15, 9)|var|float64
bop_5359 = relay.bitwise_and(call_5354.astype('int64'), relay.reshape(var_5358.astype('int64'), relay.shape_of(call_5354))) # shape=(8, 15, 9)
bop_5362 = relay.bitwise_and(call_5355.astype('int64'), relay.reshape(var_5358.astype('int64'), relay.shape_of(call_5355))) # shape=(8, 15, 9)
output = bop_5359
output2 = bop_5362
func_5382 = relay.Function([var_5358,], output)
mod['func_5382'] = func_5382
mod = relay.transform.InferType()(mod)
var_5383 = relay.var("var_5383", dtype = "float64", shape = (8, 15, 9))#candidate|5383|(8, 15, 9)|var|float64
output = func_5382(var_5383)
func_5384 = relay.Function([var_5383], output)
mutated_mod['func_5384'] = func_5384
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4219_call = mod.get_global_var('func_4219')
func_4221_call = mutated_mod.get_global_var('func_4221')
call_5417 = relay.TupleGetItem(func_4219_call(), 0)
call_5418 = relay.TupleGetItem(func_4221_call(), 0)
uop_5425 = relay.acos(call_5417.astype('float32')) # shape=(8, 15, 9)
uop_5427 = relay.acos(call_5418.astype('float32')) # shape=(8, 15, 9)
output = relay.Tuple([uop_5425,])
output2 = relay.Tuple([uop_5427,])
func_5435 = relay.Function([], output)
mod['func_5435'] = func_5435
mod = relay.transform.InferType()(mod)
output = func_5435()
func_5436 = relay.Function([], output)
mutated_mod['func_5436'] = func_5436
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5435_call = mod.get_global_var('func_5435')
func_5436_call = mutated_mod.get_global_var('func_5436')
call_5443 = relay.TupleGetItem(func_5435_call(), 0)
call_5444 = relay.TupleGetItem(func_5436_call(), 0)
uop_5446 = relay.erf(call_5443.astype('float64')) # shape=(8, 15, 9)
uop_5448 = relay.erf(call_5444.astype('float64')) # shape=(8, 15, 9)
output = relay.Tuple([uop_5446,])
output2 = relay.Tuple([uop_5448,])
func_5449 = relay.Function([], output)
mod['func_5449'] = func_5449
mod = relay.transform.InferType()(mod)
mutated_mod['func_5449'] = func_5449
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5449_call = mutated_mod.get_global_var('func_5449')
call_5450 = func_5449_call()
output = call_5450
func_5451 = relay.Function([], output)
mutated_mod['func_5451'] = func_5451
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5435_call = mod.get_global_var('func_5435')
func_5436_call = mutated_mod.get_global_var('func_5436')
call_5475 = relay.TupleGetItem(func_5435_call(), 0)
call_5476 = relay.TupleGetItem(func_5436_call(), 0)
output = relay.Tuple([call_5475,])
output2 = relay.Tuple([call_5476,])
func_5485 = relay.Function([], output)
mod['func_5485'] = func_5485
mod = relay.transform.InferType()(mod)
output = func_5485()
func_5486 = relay.Function([], output)
mutated_mod['func_5486'] = func_5486
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5179_call = mod.get_global_var('func_5179')
func_5180_call = mutated_mod.get_global_var('func_5180')
call_5602 = relay.TupleGetItem(func_5179_call(), 0)
call_5603 = relay.TupleGetItem(func_5180_call(), 0)
output = relay.Tuple([call_5602,])
output2 = relay.Tuple([call_5603,])
func_5630 = relay.Function([], output)
mod['func_5630'] = func_5630
mod = relay.transform.InferType()(mod)
output = func_5630()
func_5631 = relay.Function([], output)
mutated_mod['func_5631'] = func_5631
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4182_call = mod.get_global_var('func_4182')
func_4184_call = mutated_mod.get_global_var('func_4184')
call_5642 = func_4182_call()
call_5643 = func_4182_call()
func_921_call = mod.get_global_var('func_921')
func_923_call = mutated_mod.get_global_var('func_923')
const_5662 = relay.const([7.208421,-2.904083], dtype = "float32")#candidate|5662|(2,)|const|float32
call_5661 = relay.TupleGetItem(func_921_call(relay.reshape(const_5662.astype('float32'), [1, 1, 2])), 2)
call_5663 = relay.TupleGetItem(func_923_call(relay.reshape(const_5662.astype('float32'), [1, 1, 2])), 2)
output = relay.Tuple([call_5642,call_5661,const_5662,])
output2 = relay.Tuple([call_5643,call_5663,const_5662,])
func_5668 = relay.Function([], output)
mod['func_5668'] = func_5668
mod = relay.transform.InferType()(mod)
output = func_5668()
func_5669 = relay.Function([], output)
mutated_mod['func_5669'] = func_5669
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5668_call = mod.get_global_var('func_5668')
func_5669_call = mutated_mod.get_global_var('func_5669')
call_5723 = relay.TupleGetItem(func_5668_call(), 0)
call_5724 = relay.TupleGetItem(func_5669_call(), 0)
output = relay.Tuple([call_5723,])
output2 = relay.Tuple([call_5724,])
func_5754 = relay.Function([], output)
mod['func_5754'] = func_5754
mod = relay.transform.InferType()(mod)
mutated_mod['func_5754'] = func_5754
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5754_call = mutated_mod.get_global_var('func_5754')
call_5755 = func_5754_call()
output = call_5755
func_5756 = relay.Function([], output)
mutated_mod['func_5756'] = func_5756
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5668_call = mod.get_global_var('func_5668')
func_5669_call = mutated_mod.get_global_var('func_5669')
call_5785 = relay.TupleGetItem(func_5668_call(), 0)
call_5786 = relay.TupleGetItem(func_5669_call(), 0)
output = call_5785
output2 = call_5786
func_5805 = relay.Function([], output)
mod['func_5805'] = func_5805
mod = relay.transform.InferType()(mod)
mutated_mod['func_5805'] = func_5805
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5805_call = mutated_mod.get_global_var('func_5805')
call_5806 = func_5805_call()
output = call_5806
func_5807 = relay.Function([], output)
mutated_mod['func_5807'] = func_5807
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5435_call = mod.get_global_var('func_5435')
func_5436_call = mutated_mod.get_global_var('func_5436')
call_5830 = relay.TupleGetItem(func_5435_call(), 0)
call_5831 = relay.TupleGetItem(func_5436_call(), 0)
uop_5832 = relay.cosh(call_5830.astype('float32')) # shape=(8, 15, 9)
uop_5834 = relay.cosh(call_5831.astype('float32')) # shape=(8, 15, 9)
output = uop_5832
output2 = uop_5834
func_5854 = relay.Function([], output)
mod['func_5854'] = func_5854
mod = relay.transform.InferType()(mod)
mutated_mod['func_5854'] = func_5854
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5854_call = mutated_mod.get_global_var('func_5854')
call_5855 = func_5854_call()
output = call_5855
func_5856 = relay.Function([], output)
mutated_mod['func_5856'] = func_5856
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5179_call = mod.get_global_var('func_5179')
func_5180_call = mutated_mod.get_global_var('func_5180')
call_5877 = relay.TupleGetItem(func_5179_call(), 0)
call_5878 = relay.TupleGetItem(func_5180_call(), 0)
output = relay.Tuple([call_5877,])
output2 = relay.Tuple([call_5878,])
func_5915 = relay.Function([], output)
mod['func_5915'] = func_5915
mod = relay.transform.InferType()(mod)
output = func_5915()
func_5916 = relay.Function([], output)
mutated_mod['func_5916'] = func_5916
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5754_call = mod.get_global_var('func_5754')
func_5756_call = mutated_mod.get_global_var('func_5756')
call_5948 = relay.TupleGetItem(func_5754_call(), 0)
call_5949 = relay.TupleGetItem(func_5756_call(), 0)
uop_5954 = relay.sigmoid(call_5948.astype('float32')) # shape=(8, 15, 9)
uop_5956 = relay.sigmoid(call_5949.astype('float32')) # shape=(8, 15, 9)
func_1731_call = mod.get_global_var('func_1731')
func_1734_call = mutated_mod.get_global_var('func_1734')
var_5966 = relay.var("var_5966", dtype = "uint16", shape = (273,))#candidate|5966|(273,)|var|uint16
call_5965 = func_1731_call(relay.reshape(var_5966.astype('uint16'), [3, 7, 13]))
call_5967 = func_1731_call(relay.reshape(var_5966.astype('uint16'), [3, 7, 13]))
output = relay.Tuple([uop_5954,call_5965,var_5966,])
output2 = relay.Tuple([uop_5956,call_5967,var_5966,])
func_5968 = relay.Function([var_5966,], output)
mod['func_5968'] = func_5968
mod = relay.transform.InferType()(mod)
mutated_mod['func_5968'] = func_5968
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5969 = relay.var("var_5969", dtype = "uint16", shape = (273,))#candidate|5969|(273,)|var|uint16
func_5968_call = mutated_mod.get_global_var('func_5968')
call_5970 = func_5968_call(var_5969)
output = call_5970
func_5971 = relay.Function([var_5969], output)
mutated_mod['func_5971'] = func_5971
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4694_call = mod.get_global_var('func_4694')
func_4696_call = mutated_mod.get_global_var('func_4696')
call_5973 = func_4694_call()
call_5974 = func_4694_call()
var_5995 = relay.var("var_5995", dtype = "float64", shape = (8, 15, 9))#candidate|5995|(8, 15, 9)|var|float64
bop_5996 = relay.greater_equal(call_5973.astype('bool'), relay.reshape(var_5995.astype('bool'), relay.shape_of(call_5973))) # shape=(8, 15, 9)
bop_5999 = relay.greater_equal(call_5974.astype('bool'), relay.reshape(var_5995.astype('bool'), relay.shape_of(call_5974))) # shape=(8, 15, 9)
output = bop_5996
output2 = bop_5999
func_6003 = relay.Function([var_5995,], output)
mod['func_6003'] = func_6003
mod = relay.transform.InferType()(mod)
mutated_mod['func_6003'] = func_6003
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6004 = relay.var("var_6004", dtype = "float64", shape = (8, 15, 9))#candidate|6004|(8, 15, 9)|var|float64
func_6003_call = mutated_mod.get_global_var('func_6003')
call_6005 = func_6003_call(var_6004)
output = call_6005
func_6006 = relay.Function([var_6004], output)
mutated_mod['func_6006'] = func_6006
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6098 = relay.var("var_6098", dtype = "float64", shape = (14, 2, 2))#candidate|6098|(14, 2, 2)|var|float64
uop_6099 = relay.log10(var_6098.astype('float64')) # shape=(14, 2, 2)
uop_6101 = relay.erf(uop_6099.astype('float32')) # shape=(14, 2, 2)
output = uop_6101
output2 = uop_6101
func_6104 = relay.Function([var_6098,], output)
mod['func_6104'] = func_6104
mod = relay.transform.InferType()(mod)
var_6105 = relay.var("var_6105", dtype = "float64", shape = (14, 2, 2))#candidate|6105|(14, 2, 2)|var|float64
output = func_6104(var_6105)
func_6106 = relay.Function([var_6105], output)
mutated_mod['func_6106'] = func_6106
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5179_call = mod.get_global_var('func_5179')
func_5180_call = mutated_mod.get_global_var('func_5180')
call_6167 = relay.TupleGetItem(func_5179_call(), 0)
call_6168 = relay.TupleGetItem(func_5180_call(), 0)
func_4866_call = mod.get_global_var('func_4866')
func_4868_call = mutated_mod.get_global_var('func_4868')
call_6186 = relay.TupleGetItem(func_4866_call(), 0)
call_6187 = relay.TupleGetItem(func_4868_call(), 0)
output = relay.Tuple([call_6167,call_6186,])
output2 = relay.Tuple([call_6168,call_6187,])
func_6211 = relay.Function([], output)
mod['func_6211'] = func_6211
mod = relay.transform.InferType()(mod)
output = func_6211()
func_6212 = relay.Function([], output)
mutated_mod['func_6212'] = func_6212
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5485_call = mod.get_global_var('func_5485')
func_5486_call = mutated_mod.get_global_var('func_5486')
call_6254 = relay.TupleGetItem(func_5485_call(), 0)
call_6255 = relay.TupleGetItem(func_5486_call(), 0)
output = relay.Tuple([call_6254,])
output2 = relay.Tuple([call_6255,])
func_6340 = relay.Function([], output)
mod['func_6340'] = func_6340
mod = relay.transform.InferType()(mod)
mutated_mod['func_6340'] = func_6340
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6340_call = mutated_mod.get_global_var('func_6340')
call_6341 = func_6340_call()
output = call_6341
func_6342 = relay.Function([], output)
mutated_mod['func_6342'] = func_6342
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5311_call = mod.get_global_var('func_5311')
func_5313_call = mutated_mod.get_global_var('func_5313')
call_6345 = relay.TupleGetItem(func_5311_call(), 0)
call_6346 = relay.TupleGetItem(func_5313_call(), 0)
output = relay.Tuple([call_6345,])
output2 = relay.Tuple([call_6346,])
func_6347 = relay.Function([], output)
mod['func_6347'] = func_6347
mod = relay.transform.InferType()(mod)
output = func_6347()
func_6348 = relay.Function([], output)
mutated_mod['func_6348'] = func_6348
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5485_call = mod.get_global_var('func_5485')
func_5486_call = mutated_mod.get_global_var('func_5486')
call_6357 = relay.TupleGetItem(func_5485_call(), 0)
call_6358 = relay.TupleGetItem(func_5486_call(), 0)
output = call_6357
output2 = call_6358
func_6363 = relay.Function([], output)
mod['func_6363'] = func_6363
mod = relay.transform.InferType()(mod)
mutated_mod['func_6363'] = func_6363
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6363_call = mutated_mod.get_global_var('func_6363')
call_6364 = func_6363_call()
output = call_6364
func_6365 = relay.Function([], output)
mutated_mod['func_6365'] = func_6365
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5244_call = mod.get_global_var('func_5244')
func_5246_call = mutated_mod.get_global_var('func_5246')
call_6424 = relay.TupleGetItem(func_5244_call(), 2)
call_6425 = relay.TupleGetItem(func_5246_call(), 2)
output = call_6424
output2 = call_6425
func_6446 = relay.Function([], output)
mod['func_6446'] = func_6446
mod = relay.transform.InferType()(mod)
output = func_6446()
func_6447 = relay.Function([], output)
mutated_mod['func_6447'] = func_6447
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5244_call = mod.get_global_var('func_5244')
func_5246_call = mutated_mod.get_global_var('func_5246')
call_6448 = relay.TupleGetItem(func_5244_call(), 2)
call_6449 = relay.TupleGetItem(func_5246_call(), 2)
func_5915_call = mod.get_global_var('func_5915')
func_5916_call = mutated_mod.get_global_var('func_5916')
call_6455 = relay.TupleGetItem(func_5915_call(), 0)
call_6456 = relay.TupleGetItem(func_5916_call(), 0)
output = relay.Tuple([call_6448,call_6455,])
output2 = relay.Tuple([call_6449,call_6456,])
func_6459 = relay.Function([], output)
mod['func_6459'] = func_6459
mod = relay.transform.InferType()(mod)
output = func_6459()
func_6460 = relay.Function([], output)
mutated_mod['func_6460'] = func_6460
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5435_call = mod.get_global_var('func_5435')
func_5436_call = mutated_mod.get_global_var('func_5436')
call_6546 = relay.TupleGetItem(func_5435_call(), 0)
call_6547 = relay.TupleGetItem(func_5436_call(), 0)
uop_6564 = relay.acosh(call_6546.astype('float64')) # shape=(8, 15, 9)
uop_6566 = relay.acosh(call_6547.astype('float64')) # shape=(8, 15, 9)
func_3891_call = mod.get_global_var('func_3891')
func_3897_call = mutated_mod.get_global_var('func_3897')
const_6578 = relay.const([True,False,False,False,False,True,True,False,False,False,True,True,False,True,False,False,False,False,True,False,False,True,True,True,False,False,True,False,True,True,False,True,True,True,True,False,False,False,False,False,False,False,False,True,True,False,True,True,False,False,False,True,True,True,False,False,True,True,False,True,False,False,False,False,True,True,False,True,False,False,False,False,False,False,True,False,False,False,True,True,False,True,False,False,True,False,False,False,False,False,True,False,False,True,False,False,True,False,True,True,True,True,True,True,True,True,True,False,True,True,True,False,False,True,False,True,True,False,False,True,False,True,False,False,True,False,False,False,True,False,True,False,True,False,True,True,True,True,True,True,False,False,True,False,True,True,False,False,True,False,False,True,True,False,True,False,False,False,False,True,False,True,True,True,False], dtype = "bool")#candidate|6578|(165,)|const|bool
var_6579 = relay.var("var_6579", dtype = "bool", shape = (2475,))#candidate|6579|(2475,)|var|bool
var_6580 = relay.var("var_6580", dtype = "float32", shape = (288,))#candidate|6580|(288,)|var|float32
call_6577 = relay.TupleGetItem(func_3891_call(relay.reshape(const_6578.astype('bool'), [1, 11, 15]), relay.reshape(var_6579.astype('bool'), [15, 11, 15]), relay.reshape(var_6580.astype('float32'), [288,]), relay.reshape(var_6579.astype('float64'), [15, 11, 15]), ), 1)
call_6581 = relay.TupleGetItem(func_3897_call(relay.reshape(const_6578.astype('bool'), [1, 11, 15]), relay.reshape(var_6579.astype('bool'), [15, 11, 15]), relay.reshape(var_6580.astype('float32'), [288,]), relay.reshape(var_6579.astype('float64'), [15, 11, 15]), ), 1)
output = relay.Tuple([uop_6564,call_6577,const_6578,var_6579,var_6580,])
output2 = relay.Tuple([uop_6566,call_6581,const_6578,var_6579,var_6580,])
func_6582 = relay.Function([var_6579,var_6580,], output)
mod['func_6582'] = func_6582
mod = relay.transform.InferType()(mod)
mutated_mod['func_6582'] = func_6582
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6582_call = mutated_mod.get_global_var('func_6582')
var_6584 = relay.var("var_6584", dtype = "bool", shape = (2475,))#candidate|6584|(2475,)|var|bool
var_6585 = relay.var("var_6585", dtype = "float32", shape = (288,))#candidate|6585|(288,)|var|float32
call_6583 = func_6582_call(var_6584,var_6585,)
output = call_6583
func_6586 = relay.Function([var_6584,var_6585,], output)
mutated_mod['func_6586'] = func_6586
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5244_call = mod.get_global_var('func_5244')
func_5246_call = mutated_mod.get_global_var('func_5246')
call_6612 = relay.TupleGetItem(func_5244_call(), 1)
call_6613 = relay.TupleGetItem(func_5246_call(), 1)
output = call_6612
output2 = call_6613
func_6619 = relay.Function([], output)
mod['func_6619'] = func_6619
mod = relay.transform.InferType()(mod)
mutated_mod['func_6619'] = func_6619
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6619_call = mutated_mod.get_global_var('func_6619')
call_6620 = func_6619_call()
output = call_6620
func_6621 = relay.Function([], output)
mutated_mod['func_6621'] = func_6621
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6640 = relay.const([[[-3,8,-5,5,5,4,-4,-6,-8],[-4,-5,2,10,-2,-9,1,-1,1],[3,-8,7,-4,6,-10,1,7,-10],[-7,-5,3,3,-5,3,2,4,-8],[-2,2,10,-4,3,9,2,-4,-7],[2,-1,6,-5,-3,6,7,-2,8],[10,5,3,1,-1,4,-1,8,3],[7,-2,-4,4,8,4,-9,6,-2],[-9,-4,-5,8,5,8,-10,8,9],[-10,-7,8,4,6,3,-9,-10,-5],[-3,10,7,-10,7,8,-9,-9,-7],[-8,6,3,1,-4,-6,5,-1,1]],[[-7,6,-6,9,3,4,5,-2,-5],[10,6,-8,-4,4,-9,5,4,9],[-4,-7,-4,-10,2,-10,7,-4,6],[7,-6,7,-4,3,-2,9,-1,-6],[9,6,5,10,-7,-7,8,-5,3],[-2,-4,6,-9,3,-3,-9,-2,6],[2,-1,4,-6,-2,-9,-4,-3,-9],[-6,5,-10,-8,-1,-5,-10,-4,-8],[1,-1,6,1,10,-10,-4,-7,6],[5,8,4,2,-10,5,3,3,-2],[-3,-1,-6,3,-7,-6,10,5,-7],[9,3,6,-9,-5,-4,-1,9,-1]],[[3,2,4,3,9,-2,-6,-8,10],[6,-4,2,-9,4,-7,10,8,-1],[10,-8,9,5,-1,-4,-6,2,3],[-7,-9,10,-5,7,2,6,2,-1],[4,-8,-1,-7,5,7,5,2,-5],[1,5,-3,-8,1,5,-10,-1,5],[3,9,3,-7,1,4,4,-8,-5],[-7,2,-10,-1,-9,1,2,-7,-3],[8,3,-9,-3,-2,1,-2,10,-8],[4,-3,10,6,-9,5,-7,1,-2],[7,-5,-8,8,-7,-5,-9,2,3],[-7,8,-4,-7,7,1,8,5,-8]],[[-2,-3,3,1,9,5,9,-1,-7],[9,-7,3,4,-7,7,-1,2,-7],[4,-8,-3,-4,-4,-9,-3,-6,-7],[-10,10,-1,5,-5,8,3,-2,-4],[3,-9,-7,7,-9,10,-1,10,-8],[-10,4,9,9,-3,-2,-6,-7,3],[3,3,2,-9,-4,6,-9,4,-4],[-5,-6,4,7,4,-4,1,-6,9],[-8,2,-9,-3,-5,-4,-1,-1,-9],[-4,4,-4,4,6,-10,7,-5,-9],[7,3,-8,-10,7,-5,-8,-7,-8],[3,-4,3,3,-1,10,3,1,-9]],[[6,-9,3,-1,4,5,7,-3,6],[7,7,2,-8,-3,2,10,-1,10],[3,-7,7,9,10,7,10,-9,-9],[-2,-5,-8,9,6,-6,-6,-6,-8],[-4,9,10,4,-7,7,-4,-5,-6],[-8,10,6,10,7,-4,-3,1,-4],[5,3,1,-7,2,5,-4,4,-9],[-8,-2,-9,9,5,-1,4,-7,9],[8,-4,-10,8,-4,-6,3,-3,10],[-1,1,10,7,9,3,-3,-4,1],[5,-7,-4,-1,-10,1,-4,10,10],[-9,-6,-2,-6,9,-1,-3,-2,5]],[[-5,2,-1,-7,7,2,9,-8,-10],[5,-5,-6,-5,-5,1,-2,6,-4],[-8,4,8,5,-7,-4,3,-1,-6],[-7,7,-9,-1,9,-6,6,3,1],[4,-1,-1,6,-8,4,-7,4,-4],[4,-3,-5,-3,-7,1,-10,-6,-5],[-9,2,-1,9,1,2,6,3,7],[10,-10,-10,5,-7,-2,9,-7,-1],[7,-6,3,4,-4,-9,-8,2,-8],[-1,2,-3,2,10,-2,6,8,8],[2,1,2,6,10,7,2,-10,-8],[1,-4,-9,-9,-8,9,-10,-9,-4]],[[4,-2,-9,4,-9,-8,-7,6,9],[10,10,-8,-3,9,-3,4,4,4],[6,-7,-10,1,3,1,-5,-3,-8],[-6,-1,-4,10,2,5,-9,3,6],[-2,-3,8,-8,-6,8,4,-6,10],[9,-1,6,-8,8,3,-5,3,-10],[1,-4,9,-2,7,-7,-1,7,-9],[9,-7,7,5,5,-9,8,2,-8],[5,3,-9,9,9,3,8,-5,10],[-7,5,2,-6,3,-4,1,10,-3],[6,-10,-7,-3,4,-4,-10,-9,2],[9,6,7,5,-1,-4,6,4,5]],[[9,-10,3,-7,-4,8,-10,5,-10],[-5,-10,2,1,-4,-3,8,-4,-5],[2,-2,8,2,8,5,-2,3,-7],[6,2,-4,-8,9,3,-2,5,3],[5,-3,-5,-1,9,8,8,3,-5],[-6,-1,6,-8,9,4,7,7,2],[-6,-8,-6,10,-2,5,2,-10,-8],[-7,7,-10,-9,-10,-6,-10,-3,9],[7,-5,-6,6,-4,3,5,8,5],[4,-6,-10,-5,7,1,1,-9,10],[-7,-3,5,2,-3,3,-8,-4,1],[9,6,-6,-3,-8,-3,6,-5,10]],[[-5,3,3,-8,2,5,7,9,-9],[-4,-2,-7,-1,5,-3,9,7,6],[5,-1,5,2,2,-7,8,5,4],[-7,6,2,-6,5,-10,-5,4,-5],[4,1,1,-6,7,-3,5,7,-1],[-1,7,-2,9,-3,-5,-2,-8,-2],[-10,9,2,-10,1,8,-6,1,-7],[2,2,6,6,4,-2,-2,-9,-2],[5,9,9,8,-8,-9,-3,10,-8],[1,-6,-7,-5,9,-10,-6,2,10],[3,-7,8,6,8,-5,2,-10,4],[7,6,5,8,2,-5,3,4,-10]]], dtype = "uint64")#candidate|6640|(9, 12, 9)|const|uint64
const_6641 = relay.const([[[-5,-7,-8,-5,-5,9,10,-9,6],[-5,-1,-4,-8,9,-3,-9,3,-1],[10,7,-1,-9,8,10,-6,-4,1],[3,10,1,1,2,-6,5,8,-3],[-10,-10,10,4,-6,6,-4,-9,9],[8,1,-7,10,7,6,7,-2,-4],[-10,10,-5,-5,5,5,-7,-7,-2],[7,6,2,-2,6,7,-8,-8,-4],[5,4,-3,-6,-2,9,7,8,10],[3,-8,-7,1,-3,-4,-4,4,10],[6,10,-1,4,8,9,-1,-3,-3],[5,6,5,-4,-2,4,8,10,-2]],[[10,6,9,6,-10,-10,-9,-9,2],[8,10,6,2,5,-5,-2,4,-1],[-7,-2,7,-10,-6,3,10,6,9],[-5,8,-4,9,-8,-6,-6,9,10],[8,10,8,4,5,7,3,-7,-3],[6,7,-5,-4,-7,-6,6,-6,10],[2,-3,7,10,-3,-1,-8,-8,-2],[9,1,8,5,-3,-2,7,10,-10],[-2,-7,7,-1,6,9,2,3,-6],[-3,4,-3,3,-10,-2,10,-1,10],[4,1,3,-7,8,10,-10,6,-1],[10,-1,-4,3,8,10,1,9,3]],[[4,7,-1,-7,-10,-5,-1,2,7],[6,2,5,-2,-8,-10,3,3,5],[8,5,4,6,4,7,6,5,-7],[-1,-9,-10,-2,-3,6,8,-2,10],[10,-3,-6,10,-6,-1,5,2,3],[-5,8,9,-7,-5,-10,7,5,-8],[10,4,-5,9,-8,-6,-4,7,8],[-3,5,-4,-7,6,-10,-2,4,-6],[-10,9,-5,-1,5,-10,-6,-7,-3],[5,-3,1,-9,6,6,2,-9,5],[5,3,-6,4,8,-2,-4,2,-9],[-5,-3,-2,2,-8,-5,5,1,-2]],[[2,6,7,2,6,-1,6,-5,-6],[1,-1,9,2,-5,-1,-9,-3,7],[-4,3,5,-6,1,-2,-8,-5,4],[4,7,8,-6,-2,-1,-1,10,-4],[8,-5,-1,4,-4,8,-2,-1,-2],[6,7,9,9,-4,3,-1,9,-10],[7,-10,6,6,-10,6,7,2,-1],[1,-2,-8,-2,-8,7,1,-5,-4],[9,-8,8,-3,-5,10,-7,-6,7],[-5,-3,1,-2,-5,-5,5,-10,5],[6,-4,2,-7,-8,-9,6,-3,7],[-10,-8,6,-7,-9,6,4,1,-3]],[[5,-5,2,7,8,-9,-6,3,-6],[-7,-2,10,10,9,6,-8,1,-4],[-5,-3,1,-9,-10,10,3,-1,-4],[2,6,7,5,-3,-7,1,7,9],[3,4,-10,9,2,6,-10,-1,-2],[-8,-4,-3,-9,-6,-8,2,-1,-5],[1,-2,-6,8,-1,-4,-7,-9,-7],[-3,9,-1,-4,-8,-9,6,9,-2],[8,-2,-9,1,-1,9,5,4,-3],[2,-8,-2,5,9,-6,8,-9,5],[9,5,8,-9,8,-8,-8,8,-3],[5,6,10,2,-10,-10,-10,10,-10]],[[1,-3,3,-2,2,-9,8,-10,7],[-10,10,2,4,-9,-1,-5,8,-3],[-9,-2,-5,-7,4,-9,9,-1,-9],[1,7,2,-10,-10,6,1,-10,-8],[5,-8,-3,1,-6,5,7,1,-7],[-2,1,-9,-7,2,-5,-2,6,-1],[-5,-4,-7,8,-4,-8,3,2,-3],[-3,-1,-10,7,-7,10,-5,2,-7],[6,-5,-6,5,-2,-7,6,-5,-7],[3,7,-9,10,3,1,5,7,2],[-10,5,2,6,2,-6,8,-4,-9],[-1,7,3,4,-9,-5,-4,-8,8]],[[1,-9,-9,3,-2,2,10,-2,-5],[-6,4,-10,6,5,-3,3,1,8],[-5,-9,7,-2,-5,5,1,1,-9],[-4,4,-9,6,-10,4,-9,8,9],[1,2,6,-6,-1,4,-7,-6,-2],[6,9,-7,6,3,5,-9,3,-2],[1,10,4,-3,-4,10,6,-4,-5],[-9,8,-3,5,-9,3,9,-1,7],[5,-6,1,-3,-3,-3,7,-9,3],[7,-6,-6,10,-5,8,-6,-4,-2],[-8,3,3,10,-7,6,-3,-9,1],[-9,3,-4,8,4,10,-8,-10,-2]],[[10,-2,2,-8,-10,5,-2,-4,8],[6,8,9,-5,-8,1,-5,-1,7],[-6,8,2,9,8,1,-3,-4,-6],[-9,-2,-5,7,2,-8,1,6,1],[-5,-3,6,-10,2,8,-7,-8,-5],[1,-4,2,-4,7,-6,-7,9,-5],[4,1,-1,4,7,-8,7,-8,2],[5,5,-5,8,-4,-2,1,-6,3],[-1,-5,1,5,-3,-10,-3,1,7],[-10,8,4,-3,-7,7,-6,7,9],[7,7,-4,-4,-2,-4,-3,-5,-8],[-2,-4,-2,6,-9,3,10,-9,9]],[[4,10,-2,-6,-1,-5,-10,2,5],[4,5,-4,-9,-6,1,-4,1,-10],[10,-8,-7,-10,2,-10,7,8,-5],[-8,-1,5,-2,-7,-4,-7,-5,5],[-10,6,6,-8,-9,-3,-3,9,9],[-5,4,5,-1,10,9,-7,-10,-10],[-10,-9,9,3,7,5,7,-7,4],[-9,-6,10,-6,-2,-1,-5,3,9],[-8,-3,4,10,-9,-2,-9,-9,-2],[8,-7,6,-5,8,5,-9,8,9],[-3,5,4,-7,10,7,7,2,6],[-2,7,8,-7,-6,-10,-9,3,-4]]], dtype = "uint64")#candidate|6641|(9, 12, 9)|const|uint64
bop_6642 = relay.less_equal(const_6640.astype('bool'), relay.reshape(const_6641.astype('bool'), relay.shape_of(const_6640))) # shape=(9, 12, 9)
func_1559_call = mod.get_global_var('func_1559')
func_1564_call = mutated_mod.get_global_var('func_1564')
const_6649 = relay.const([7,8,7,-7,5,4,-4,9,6,-3,-1,10,-10,1,7,9,-9,-3,9,9,-8,7,1,-8,-3,5,-4,7,-1,8,-4,3,-4,-4,-6], dtype = "uint32")#candidate|6649|(35,)|const|uint32
var_6650 = relay.var("var_6650", dtype = "uint32", shape = (550,))#candidate|6650|(550,)|var|uint32
const_6651 = relay.const([8,8,-5,6,7,7,4,10,-8,-8,10,5,2,6,-9,-10,8,-2,-1,3,8,9,7,-5,6,4,-5,1,-4,7,9,-2,-5,2,-3,-3,-4,-5,4,6,5,-7,10,-10,-6,-10,4,1,-6,-7,-7,-2,-3,-2,8,10,-7,-4,6,3,-8,-4,-7,-4,-10,-2,3,8,2,4,7,3,-2,2,10,-7,-10,-3,-10,2,9,-6,9,-8,-3,2,8,-3,2,-6,3,-1,8,2,2,-7,7,3,7,-8,8,2,5,6,-3,2,-8,10,8,6,-7,10,6,1,-7,-8,9,10,-7,3,-9,-7,7,-4,1,-4,-3,-2,10,-4,4,-3,-2,-9,9,9,7,6,-3,-1,-10,-3,-1,-2,10,-7,10,7,3,10,-10,-10,5,2,-6,-4,-2,-9,-2,4,-9,-6,3,10,9,-9,-9,7,5,-5,4,9,-6,9,-1,2,3,8,1,-3,-10,-1,-1,4,-10,9,8,-10,-6,4,1,7,4,-4,-5,-9,-9,-5,-9,-8,-8,2,7,-2,-2,-2,2,1,-7,3,1,-9,2,-1,-3,-1,6,-8,-7,7,7,-4,-9,7,1,-9,9,1,2,-4,10,7,-1,10,5,9,5,3,10,9,7,4,-6,9,8,2,-1,4,3,-9,-1,10,-2,9,10,-3,-8,5,1,-3,-9,5,-5,1,-6,6,-9,-3,-1,2,2,10,-2,3,1,10,-2,-2,-7,3,-5,1,7,-4,-6,-10], dtype = "uint64")#candidate|6651|(286,)|const|uint64
call_6648 = relay.TupleGetItem(func_1559_call(relay.reshape(const_6649.astype('uint32'), [1, 5, 7]), relay.reshape(var_6650.astype('uint32'), [550,]), relay.reshape(const_6651.astype('uint64'), [286,]), ), 6)
call_6652 = relay.TupleGetItem(func_1564_call(relay.reshape(const_6649.astype('uint32'), [1, 5, 7]), relay.reshape(var_6650.astype('uint32'), [550,]), relay.reshape(const_6651.astype('uint64'), [286,]), ), 6)
output = relay.Tuple([bop_6642,call_6648,const_6649,var_6650,const_6651,])
output2 = relay.Tuple([bop_6642,call_6652,const_6649,var_6650,const_6651,])
func_6656 = relay.Function([var_6650,], output)
mod['func_6656'] = func_6656
mod = relay.transform.InferType()(mod)
var_6657 = relay.var("var_6657", dtype = "uint32", shape = (550,))#candidate|6657|(550,)|var|uint32
output = func_6656(var_6657)
func_6658 = relay.Function([var_6657], output)
mutated_mod['func_6658'] = func_6658
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4219_call = mod.get_global_var('func_4219')
func_4221_call = mutated_mod.get_global_var('func_4221')
call_6681 = relay.TupleGetItem(func_4219_call(), 0)
call_6682 = relay.TupleGetItem(func_4221_call(), 0)
output = relay.Tuple([call_6681,])
output2 = relay.Tuple([call_6682,])
func_6684 = relay.Function([], output)
mod['func_6684'] = func_6684
mod = relay.transform.InferType()(mod)
mutated_mod['func_6684'] = func_6684
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6684_call = mutated_mod.get_global_var('func_6684')
call_6685 = func_6684_call()
output = call_6685
func_6686 = relay.Function([], output)
mutated_mod['func_6686'] = func_6686
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6684_call = mod.get_global_var('func_6684')
func_6686_call = mutated_mod.get_global_var('func_6686')
call_6706 = relay.TupleGetItem(func_6684_call(), 0)
call_6707 = relay.TupleGetItem(func_6686_call(), 0)
func_4866_call = mod.get_global_var('func_4866')
func_4868_call = mutated_mod.get_global_var('func_4868')
call_6719 = relay.TupleGetItem(func_4866_call(), 0)
call_6720 = relay.TupleGetItem(func_4868_call(), 0)
func_4802_call = mod.get_global_var('func_4802')
func_4807_call = mutated_mod.get_global_var('func_4807')
var_6724 = relay.var("var_6724", dtype = "float32", shape = (1053,))#candidate|6724|(1053,)|var|float32
var_6725 = relay.var("var_6725", dtype = "float32", shape = (10, 63))#candidate|6725|(10, 63)|var|float32
call_6723 = relay.TupleGetItem(func_4802_call(relay.reshape(var_6724.astype('float32'), [1053,]), relay.reshape(var_6724.astype('float32'), [1053,]), relay.reshape(var_6725.astype('float32'), [630,]), relay.reshape(call_6719.astype('float32'), [2340,]), ), 5)
call_6726 = relay.TupleGetItem(func_4807_call(relay.reshape(var_6724.astype('float32'), [1053,]), relay.reshape(var_6724.astype('float32'), [1053,]), relay.reshape(var_6725.astype('float32'), [630,]), relay.reshape(call_6719.astype('float32'), [2340,]), ), 5)
output = relay.Tuple([call_6706,call_6719,call_6723,var_6724,var_6725,])
output2 = relay.Tuple([call_6707,call_6720,call_6726,var_6724,var_6725,])
func_6734 = relay.Function([var_6724,var_6725,], output)
mod['func_6734'] = func_6734
mod = relay.transform.InferType()(mod)
var_6735 = relay.var("var_6735", dtype = "float32", shape = (1053,))#candidate|6735|(1053,)|var|float32
var_6736 = relay.var("var_6736", dtype = "float32", shape = (10, 63))#candidate|6736|(10, 63)|var|float32
output = func_6734(var_6735,var_6736,)
func_6737 = relay.Function([var_6735,var_6736,], output)
mutated_mod['func_6737'] = func_6737
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4219_call = mod.get_global_var('func_4219')
func_4221_call = mutated_mod.get_global_var('func_4221')
call_6741 = relay.TupleGetItem(func_4219_call(), 0)
call_6742 = relay.TupleGetItem(func_4221_call(), 0)
func_5968_call = mod.get_global_var('func_5968')
func_5971_call = mutated_mod.get_global_var('func_5971')
const_6747 = relay.const([[-1,-9,-4,-8,-9,8,-7],[-5,1,10,3,8,5,-10],[9,10,-9,-6,5,-1,8],[-6,-2,-2,2,10,-3,9],[-4,-8,3,2,9,6,3],[10,9,-4,9,-5,-10,-10],[3,-9,-8,-9,-7,2,-8],[1,8,-3,-7,7,5,-1],[-6,5,2,-4,3,1,6],[-7,4,8,-9,-8,-9,4],[-8,10,8,1,1,10,3],[-5,5,-3,-10,-10,1,-5],[2,6,-6,3,-2,-4,4],[-9,5,3,-6,10,7,-4],[5,-3,-3,-8,5,-5,-8],[4,-4,6,-8,1,7,-1],[1,-7,7,5,8,8,-7],[-4,3,6,2,-9,4,4],[3,-8,-1,3,6,7,-3],[1,10,-6,3,2,-5,6],[3,1,-5,2,-5,-3,3],[4,7,-8,1,3,6,-1],[-8,-8,-5,9,-9,6,-4],[-4,-1,4,4,-8,-4,10],[6,-10,-6,-7,9,-3,-7],[-2,-7,9,-5,-7,-5,-5],[-6,10,6,-8,10,5,3],[8,6,2,-8,-1,-6,-3],[3,-9,-3,-1,-8,-1,-4],[8,4,-7,9,4,-2,10],[5,-8,-9,9,5,1,9],[-2,8,-2,7,3,-1,-1],[1,-1,-3,7,6,-6,-8],[-4,8,-1,5,9,3,8],[-8,-6,-10,-7,8,9,-4],[6,-1,-8,-4,5,4,-1],[-7,-2,-8,6,-7,-5,1],[-10,-8,-4,5,-7,-4,-10],[8,7,10,2,8,-10,-1]], dtype = "uint16")#candidate|6747|(39, 7)|const|uint16
call_6746 = relay.TupleGetItem(func_5968_call(relay.reshape(const_6747.astype('uint16'), [273,])), 2)
call_6748 = relay.TupleGetItem(func_5971_call(relay.reshape(const_6747.astype('uint16'), [273,])), 2)
output = relay.Tuple([call_6741,call_6746,const_6747,])
output2 = relay.Tuple([call_6742,call_6748,const_6747,])
func_6759 = relay.Function([], output)
mod['func_6759'] = func_6759
mod = relay.transform.InferType()(mod)
mutated_mod['func_6759'] = func_6759
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6759_call = mutated_mod.get_global_var('func_6759')
call_6760 = func_6759_call()
output = call_6760
func_6761 = relay.Function([], output)
mutated_mod['func_6761'] = func_6761
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6784 = relay.var("var_6784", dtype = "float32", shape = (8, 8, 4))#candidate|6784|(8, 8, 4)|var|float32
uop_6785 = relay.log2(var_6784.astype('float32')) # shape=(8, 8, 4)
func_6211_call = mod.get_global_var('func_6211')
func_6212_call = mutated_mod.get_global_var('func_6212')
call_6787 = relay.TupleGetItem(func_6211_call(), 0)
call_6788 = relay.TupleGetItem(func_6212_call(), 0)
output = relay.Tuple([uop_6785,call_6787,])
output2 = relay.Tuple([uop_6785,call_6788,])
func_6789 = relay.Function([var_6784,], output)
mod['func_6789'] = func_6789
mod = relay.transform.InferType()(mod)
var_6790 = relay.var("var_6790", dtype = "float32", shape = (8, 8, 4))#candidate|6790|(8, 8, 4)|var|float32
output = func_6789(var_6790)
func_6791 = relay.Function([var_6790], output)
mutated_mod['func_6791'] = func_6791
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6619_call = mod.get_global_var('func_6619')
func_6621_call = mutated_mod.get_global_var('func_6621')
call_6804 = func_6619_call()
call_6805 = func_6619_call()
output = relay.Tuple([call_6804,])
output2 = relay.Tuple([call_6805,])
func_6818 = relay.Function([], output)
mod['func_6818'] = func_6818
mod = relay.transform.InferType()(mod)
mutated_mod['func_6818'] = func_6818
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6818_call = mutated_mod.get_global_var('func_6818')
call_6819 = func_6818_call()
output = call_6819
func_6820 = relay.Function([], output)
mutated_mod['func_6820'] = func_6820
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6907 = relay.const([[[-8.475903,-2.888525,-4.451395,-3.832776,5.831219,-0.733295,2.326498,3.872595,3.711325,-9.021999],[2.493650,-6.869742,1.891378,-6.875115,5.563028,-1.586274,9.541480,-6.154855,-2.062783,5.764764],[-5.126845,-4.642724,0.715492,-7.283730,-3.776833,0.296962,5.008361,-7.236118,-0.592142,-9.416986],[9.281699,1.649109,-4.279182,-2.007653,-6.625216,-0.816996,-8.014421,-3.216250,-8.284819,-1.884083],[-1.584732,8.896484,8.555920,-1.532479,-9.128372,0.354689,9.174186,-4.899159,5.154054,6.988760],[-9.290076,-0.286429,-2.556506,-7.240400,7.321450,8.971189,9.893555,-3.569458,-7.483090,-3.828976],[2.966097,-5.203768,-3.099227,-2.901154,-3.455783,6.037853,4.747151,6.755329,-4.611934,2.357629],[-0.709998,0.312621,9.018497,2.876700,-6.339967,-0.256342,8.949417,5.601413,7.132141,3.614797],[5.904757,-9.245811,9.621449,-0.371279,3.184145,1.500308,-5.345285,1.084520,-3.594902,1.938606],[-7.969456,2.276322,4.520835,8.788857,-5.108724,-9.658417,6.917101,5.923131,-7.958771,8.946964],[2.026612,6.674456,6.170462,6.315565,4.674322,6.348195,-0.143670,-7.184621,7.991455,-9.268779],[-7.071849,6.344116,9.222140,-5.112049,-3.872146,1.366658,3.474718,2.686492,-5.372316,-2.694629],[9.639476,4.879028,-5.762147,2.930968,-2.936021,-2.533008,-5.492925,-7.335679,-0.227082,5.561357],[-5.085703,-0.745603,-5.990373,9.805916,-8.463912,-9.949262,3.223269,3.727574,0.797274,6.870999],[-2.526797,4.917050,4.637063,-3.711073,-8.662461,-5.942890,-4.627099,-1.005137,-4.351974,3.910484]],[[-1.866143,-3.484318,-7.878092,4.871699,9.137938,6.020494,-8.090440,-5.782807,-2.133054,7.497560],[7.710579,-2.376556,-7.111243,-9.937155,-7.083301,5.566043,4.390486,-5.004816,0.048186,-5.790494],[-6.891803,-7.699772,-8.694139,-4.301721,8.986424,3.418920,6.629947,2.208627,4.098190,-4.032412],[4.092690,-4.933735,9.970994,-5.328772,-8.615303,8.709760,-7.791581,-9.393552,6.864279,-6.706932],[-7.377164,3.276853,3.206360,-0.117125,-5.664431,-7.327103,-1.268188,-5.701943,6.577837,2.727884],[0.406401,-9.275755,-7.872341,-5.526113,6.943372,9.570170,5.362389,7.574794,6.715672,8.948953],[-8.799558,2.454731,-3.175307,-2.221138,8.095339,6.998934,9.551793,-7.267644,-4.894126,9.648596],[1.948429,-9.427063,7.660779,7.188711,3.817652,-2.607506,-9.284612,-9.381512,6.470086,-7.551214],[-9.648049,-5.582933,0.902500,-7.680523,0.812434,1.514467,-2.124001,6.187076,1.475310,-0.447518],[3.674454,-3.715431,-8.694582,-6.103735,-1.744811,-6.801401,1.552337,-0.742755,-0.679225,-1.310752],[-0.993629,-3.038532,4.432803,-0.415183,0.315457,8.876780,7.826978,-2.261912,3.634790,1.334984],[-3.830786,-3.672991,-3.479966,-5.889711,9.191999,4.161289,7.238135,-6.612039,6.464431,6.165407],[5.434817,-6.716494,4.188891,5.437690,9.986606,-2.041387,-8.726031,2.556096,0.161487,4.567876],[7.924097,-8.727541,2.629936,8.161750,5.238485,4.156092,-4.085192,0.376471,-0.383189,-5.849858],[4.193973,2.807250,0.647901,8.202690,3.907510,-7.673796,2.747945,8.771682,9.700267,1.932031]],[[6.458386,-9.655935,-9.480171,5.462504,-7.492240,8.183259,-6.802208,5.169276,9.834656,-6.274610],[-4.028818,9.098179,3.486599,-0.838815,-9.378404,2.960156,-3.227802,0.537149,4.902266,7.447158],[-6.767836,-3.129276,-0.457279,-4.631545,-0.737544,-9.783196,4.119609,-7.711196,-1.421001,-0.544443],[-5.264172,-7.932749,0.445241,-0.650448,0.344159,-9.251184,-8.862422,-8.789857,-1.531008,-6.946041],[-4.138256,1.697708,2.099346,-0.984390,-8.945738,-3.960419,8.841044,2.642656,-4.516863,7.702542],[-5.239869,7.754206,-5.499781,7.591218,-7.045301,2.773999,-9.088859,0.687841,-8.153563,7.260558],[-8.547621,-6.187550,-9.065463,-8.624643,9.390758,-9.688638,4.717585,-3.256939,-2.219986,-2.196365],[5.495101,0.951832,5.003863,8.741596,-1.926654,-6.503344,-5.032232,-1.583314,2.938795,2.182672],[4.708568,-9.249124,0.502922,-8.255689,-9.610171,5.052891,5.471807,5.372635,9.042115,-2.059227],[1.222592,-7.525641,9.551684,-4.711503,4.483392,4.657308,-5.343326,1.450858,-5.970424,1.448696],[-9.915479,7.905273,4.788263,-2.682821,2.713169,-2.868025,-7.204288,6.353989,-2.253861,-0.553379],[2.771692,-2.417318,6.717101,-2.540523,7.060096,-0.750393,-7.720436,3.274232,-8.757174,-8.816303],[8.482835,-0.312773,3.169442,2.479372,9.231866,2.733661,-4.396178,-1.819894,1.364553,6.771767],[-8.200521,-3.074365,2.822614,-3.880453,-8.211083,-2.346995,-7.650753,0.378144,-2.582159,4.343718],[-3.058435,-8.943617,-0.460489,-1.742801,5.284711,-3.789172,7.757571,-7.456771,3.540123,-4.824320]],[[1.098290,4.278615,4.839611,9.367805,7.844872,2.011899,7.768782,-5.011362,9.618280,7.771421],[5.654216,-7.409884,5.648116,3.586183,-1.531006,-5.814533,-2.851450,5.220620,-9.085784,7.094047],[3.067354,0.312864,6.509746,-8.463595,-5.251907,1.171937,2.245552,-4.613045,1.425700,2.045735],[0.663561,6.160086,7.947378,3.323632,-2.347971,-0.008444,0.196434,-6.729998,3.551822,1.010996],[8.574966,6.264891,9.903478,8.470190,-8.113479,-3.443412,-8.877523,1.606225,-5.545352,5.308408],[-5.966761,-2.200681,4.957606,-3.608414,7.214972,-6.660660,-1.432842,7.114476,5.681538,-0.397749],[-0.122308,2.768206,9.800995,-5.818982,0.739338,-6.132724,3.864134,0.521025,4.592960,-2.878283],[-9.702080,1.036606,-6.343219,-0.738511,3.206693,2.975385,9.160514,-8.611017,-3.441462,-5.073523],[-8.039189,9.655575,2.297803,-1.648671,-0.744861,6.471457,7.444822,7.498149,9.377108,1.448090],[0.597199,-4.253874,6.615915,7.530916,-1.406438,5.978987,-1.787357,-1.443650,-4.362687,-2.344475],[9.923966,8.967764,4.226234,5.858894,-7.625297,4.956874,5.912385,-5.206065,7.827647,-1.826682],[5.002052,-8.935778,-2.775316,6.618560,-6.413541,4.778435,5.779900,-5.524605,-4.446423,8.215279],[7.385340,-2.856470,1.843030,3.376745,-5.970712,-3.202614,-8.532850,8.780324,6.380298,4.154059],[-1.136856,-9.828514,7.447904,-8.730139,-2.267504,-4.012981,1.377679,-6.910569,3.185146,6.989446],[-8.570229,2.351579,-9.768806,2.907101,6.485624,8.169787,-1.878230,0.857313,2.070527,1.670868]],[[6.659682,7.781556,-3.926143,4.815091,2.844202,2.624556,-5.377911,-0.707000,0.903267,3.248189],[-8.525265,-9.529279,-4.433136,-7.370031,-3.371256,8.760013,7.590545,-4.058476,-2.849960,6.377507],[-7.768499,5.261732,0.951224,2.687896,-1.673922,8.363443,-1.118800,7.406034,8.585392,-7.867137],[2.474871,-1.686454,-5.873375,-1.731795,-8.764146,-9.449146,-1.192842,-1.963367,-4.415137,-6.832416],[-8.949619,8.892557,1.309548,0.941914,4.560180,-1.875308,8.348843,6.384059,0.153084,-0.181905],[-9.114650,-3.307748,3.709955,-8.135407,5.744311,-1.399435,8.617155,-5.278160,-5.231365,6.860429],[3.317260,-1.330478,-3.277045,-3.751916,1.529865,-5.577262,0.762777,-1.859395,4.429588,-2.218628],[5.013142,-0.285148,8.241836,6.321899,-3.788083,7.674164,8.859052,-1.394592,6.337199,5.411384],[8.576921,-8.800144,7.488616,7.706244,-3.061906,4.825017,-1.231716,-8.520719,-6.131797,9.243879],[-7.380483,-1.539376,-4.935701,-0.144539,8.846052,-7.980453,7.389288,6.297107,3.266639,1.494575],[8.187517,9.521378,-2.265661,9.262814,-6.171133,7.301690,1.771577,-7.378124,-3.276311,3.766880],[-1.670801,-9.574841,4.139122,-2.630616,2.869076,-9.110228,-1.093796,-5.826489,9.488650,3.625299],[7.413926,-0.682223,-8.402561,-5.000988,3.443085,-2.313477,-5.188522,5.357879,6.303903,-7.691153],[8.081395,8.099252,6.421906,-6.175597,7.695509,-2.596589,-6.070376,0.588878,5.762242,7.897844],[4.811711,-5.225072,7.540432,7.999123,-8.494846,1.478534,-7.725994,0.765871,-4.068899,-9.398050]],[[-5.102932,-3.215548,-1.254762,7.019230,-1.426877,-8.095332,1.993975,7.839882,1.355254,3.320416],[-2.475971,3.100285,6.090383,-8.068880,3.148759,5.661485,5.840567,-8.663761,8.941930,5.970303],[0.752667,0.690470,1.873926,5.042086,-3.104873,-3.319895,0.224875,7.756344,-3.676363,-9.908213],[4.694331,9.722468,-2.268016,-8.111896,-6.224801,6.554702,6.831572,-7.371313,7.174904,1.233912],[-1.026455,-2.256561,-0.813117,-5.485399,-5.206192,-7.593559,-9.713301,-2.921213,8.561642,-0.145165],[3.733896,1.039718,-8.871104,2.577512,8.402504,4.468649,-9.847676,6.658164,-7.731932,6.643807],[0.903612,-6.766086,-8.878723,-9.938933,3.018850,6.730390,-8.531534,3.437295,-3.923063,-0.137044],[-1.773294,6.668436,3.954587,2.029337,-1.561751,-2.332242,-9.556786,5.586532,-8.615659,-8.662808],[-7.945252,-2.550670,7.617652,3.700627,-8.672276,0.845791,-7.213769,6.412259,-7.519048,8.057962],[9.446571,-5.606722,-6.810973,-8.687011,6.235608,-4.827360,-0.827444,-7.342553,-5.783375,1.208865],[5.301886,8.125028,8.454622,8.500940,4.597334,-9.110833,4.723811,-3.304068,-7.161694,-2.805940],[-3.249528,9.497687,2.934471,-5.645724,-4.460481,-2.904767,-7.258708,4.761670,-4.478348,5.622107],[8.954235,-8.859298,-0.450687,-2.300049,-0.403979,-3.371051,1.688655,5.711752,5.104044,-7.595230],[-9.647042,0.989536,8.807081,-7.970407,-2.101266,7.266046,-6.451427,-6.632433,4.944760,6.457902],[6.773395,-4.583035,-3.216018,5.506967,9.856117,9.453492,-7.881491,-0.753679,1.339495,7.558059]],[[1.326278,7.769214,-0.761282,-1.848284,-5.885106,3.788758,-9.801741,-5.791422,-1.306392,-6.929430],[4.929583,6.287429,8.692915,1.114609,-7.318640,-2.273978,-2.291898,3.895749,9.409358,-3.549117],[-4.384735,3.322651,3.557266,0.798562,8.441777,7.600913,5.874510,-0.905428,-0.424862,1.574990],[-7.381945,-0.730193,2.870428,4.635330,-7.656957,-3.372357,-4.371007,5.507317,5.742546,1.507160],[-8.479752,6.416721,1.696434,-5.035210,-3.195306,-8.074960,3.432733,3.543562,8.209583,8.667602],[-7.068877,-8.407640,5.095318,-6.403980,-6.769238,0.723462,-6.784758,-0.218395,-8.097789,5.565485],[-1.008479,7.268923,5.517385,-7.109750,-3.221043,-2.985049,3.607896,2.915341,-3.624365,6.980223],[2.633054,1.585744,3.685643,5.105501,1.138511,-0.167870,-0.360481,1.827510,-5.305414,-7.949447],[-3.108974,1.300800,6.957927,-0.561987,-8.129145,-9.904518,0.352097,9.488864,6.529557,-4.477105],[-3.494054,-5.759683,8.672431,-5.259571,8.259730,-9.469783,7.965464,5.268062,-5.723578,-7.602151],[3.280476,-2.072240,-5.867919,-4.725764,-8.844147,-8.830038,4.636224,9.848258,0.734753,8.258013],[8.156070,-1.821717,6.755170,6.829389,6.002829,3.152417,0.093156,3.840259,3.989054,2.094720],[8.428642,-8.162256,8.517105,9.872892,3.219331,6.500247,-2.797729,6.963164,-8.823335,8.035080],[-8.964598,-2.973073,-3.778496,-7.146592,3.797702,9.598514,3.917681,-4.689375,7.770475,7.797719],[-8.075556,9.812388,-4.851158,-3.553206,-2.670470,7.737093,-8.951853,-3.641059,6.827746,5.634570]]], dtype = "float64")#candidate|6907|(7, 15, 10)|const|float64
var_6908 = relay.var("var_6908", dtype = "float64", shape = (7, 15, 10))#candidate|6908|(7, 15, 10)|var|float64
bop_6909 = relay.floor_divide(const_6907.astype('float64'), relay.reshape(var_6908.astype('float64'), relay.shape_of(const_6907))) # shape=(7, 15, 10)
var_6916 = relay.var("var_6916", dtype = "float64", shape = (7, 15, 10))#candidate|6916|(7, 15, 10)|var|float64
bop_6917 = relay.equal(var_6908.astype('bool'), relay.reshape(var_6916.astype('bool'), relay.shape_of(var_6908))) # shape=(7, 15, 10)
output = relay.Tuple([bop_6909,bop_6917,])
output2 = relay.Tuple([bop_6909,bop_6917,])
func_6923 = relay.Function([var_6908,var_6916,], output)
mod['func_6923'] = func_6923
mod = relay.transform.InferType()(mod)
var_6924 = relay.var("var_6924", dtype = "float64", shape = (7, 15, 10))#candidate|6924|(7, 15, 10)|var|float64
var_6925 = relay.var("var_6925", dtype = "float64", shape = (7, 15, 10))#candidate|6925|(7, 15, 10)|var|float64
output = func_6923(var_6924,var_6925,)
func_6926 = relay.Function([var_6924,var_6925,], output)
mutated_mod['func_6926'] = func_6926
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6211_call = mod.get_global_var('func_6211')
func_6212_call = mutated_mod.get_global_var('func_6212')
call_6928 = relay.TupleGetItem(func_6211_call(), 1)
call_6929 = relay.TupleGetItem(func_6212_call(), 1)
output = relay.Tuple([call_6928,])
output2 = relay.Tuple([call_6929,])
func_6932 = relay.Function([], output)
mod['func_6932'] = func_6932
mod = relay.transform.InferType()(mod)
mutated_mod['func_6932'] = func_6932
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6932_call = mutated_mod.get_global_var('func_6932')
call_6933 = func_6932_call()
output = call_6933
func_6934 = relay.Function([], output)
mutated_mod['func_6934'] = func_6934
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6347_call = mod.get_global_var('func_6347')
func_6348_call = mutated_mod.get_global_var('func_6348')
call_7004 = relay.TupleGetItem(func_6347_call(), 0)
call_7005 = relay.TupleGetItem(func_6348_call(), 0)
func_921_call = mod.get_global_var('func_921')
func_923_call = mutated_mod.get_global_var('func_923')
const_7034 = relay.const([8.077680,1.215767], dtype = "float32")#candidate|7034|(2,)|const|float32
call_7033 = relay.TupleGetItem(func_921_call(relay.reshape(const_7034.astype('float32'), [1, 1, 2])), 2)
call_7035 = relay.TupleGetItem(func_923_call(relay.reshape(const_7034.astype('float32'), [1, 1, 2])), 2)
const_7041 = relay.const([-3.739238,-7.729028,-5.198649,8.484517,3.797375,8.854987,0.143937,-6.378445,3.790428,-2.090226,9.355024,7.018889,-3.470452,-8.246566,-5.235824,0.752208,-3.601614,0.877496,0.984822,-6.138459,-5.899173,3.754679,-4.770675,3.970314,8.217133,-5.927902,2.449730,-4.260183,-5.362564,-9.544436,-7.079828,-6.754508,-2.637505,9.526782,-4.345739,-7.732636,7.228338,-9.088678,2.044648,-4.168181,4.716763,3.843507,-3.414394,-3.855357,7.020349,3.360872,5.116965,-5.791594,7.914953,4.503430,8.625725,-6.314059,-1.098405,-7.134027,-4.368815,-1.484367,-0.485772,-5.797720,9.040080,6.008930,-9.248922,8.491528,-3.836949,9.770019,5.473064,9.480700,-9.866338,-9.504341,-9.576730,-8.827645,1.100032,-4.977316,5.689941,-0.933554,-0.082611,9.623153,-0.206318,-9.802872,-1.995243,-5.310051,-7.599569,4.072432,1.575536,0.137192,-0.231311,0.477530,0.680438,6.280097,-2.962318,9.860323,-0.358289,4.354383,8.344716,1.882206,7.946265,-4.738575,-8.200685,-6.034262,7.943436,6.129651,-7.691535,1.131947,2.710856,-3.369733,-9.694041,-2.958295,-0.383580,2.689994,9.372656,9.235571,-8.289134,-6.334311,8.011656,-6.217836,4.979456,0.631781,-5.423433,0.641404,7.345197,-7.156156,6.734535,-6.850908,-2.245490,-1.023006,3.421389,9.395419,3.659667,-1.546175,-9.789886,5.845557,-9.624901,6.081175,9.986229,-1.317481,-9.267821,-7.338146,2.314837,2.597291,-9.149788,4.730224,-5.376766,2.135006,5.968521,-5.299300,-0.076446,7.996372,-8.399485,-4.642291,4.940107,7.532650,4.132903,1.697407,-0.130786,-6.157172,-1.806822,-8.672632,-0.137669,-4.230571,6.645347,-1.988229,-0.208957,7.557328,-5.986670,-5.747361,-4.395219,-0.468394,1.895812,4.425685,-4.685622,-0.515373,8.919536,6.998981,-4.851000,2.171469,9.746137,-3.844994,1.865399,-2.112424,3.640920,4.048887,-6.151783,6.214512,-7.436313,-3.530905,-7.451080,8.886397,8.927367,-8.003194,5.212259,-8.960381,2.266456,-1.305423,-8.942159,-1.009017,-4.553255,6.363756,4.798223,-6.915167,3.296479,0.142597,-7.924304,-5.235928,5.893190,9.500343,-1.020633,5.526542,-3.738150,6.012501,2.090005,-4.479251,0.001915,-4.753240,-1.499998,-5.999117,1.553152,-9.518485,7.571635,-1.775090,3.603070,1.790184,4.843981,8.334638,-4.071313,-3.784756,-7.002101,7.817679,-9.115503,6.020418,3.372901,7.417047,0.272660,-7.981130,-3.009070,9.289478,-2.459489,2.132435,-2.070651,-0.067730,0.116071,-6.396158,0.197131,-2.982653,6.114183,5.560642,3.614727,-6.459062,-5.244375,2.470503,1.707782,-3.916556,3.829475,5.472436,-2.450145,5.654264,-5.107233,6.573581,2.940257,6.667294,5.189390,9.984913,5.243592,6.205129,-3.288909,-6.752602,-5.389624,-5.970539,1.583352,4.213969,9.470941,4.382680,-3.397508,6.807267,-0.396702,-5.425387,7.744944,5.285659,8.290449,-7.189980,0.879526,9.437348,7.551807,-8.764550,6.690468,-4.740263,-3.564705,-7.955906,3.370356,-3.454091,5.781833,3.460793,2.170683,4.625922,-8.686114,-7.956509,4.943381,5.660407,7.352279,5.575298,5.081121,9.070326,1.415678,-1.799242,-0.118166,5.982870,5.805137,-8.377016,9.582719,-5.578123,-7.051522,6.471316,-0.219568,-4.701053,-2.137376,6.504864,-7.300543,6.097224,-0.979935,-8.886897,9.475719,-2.620524,-0.892390,5.792722,1.716694,8.320821,-7.183943,5.018502,4.852795,9.073935,7.806579,7.487880,2.631222,4.543945,-7.550403,-2.553878,7.578472,7.953504,-1.627840,3.309397,-9.974070,9.017386,-4.547537,7.894027,-4.371213,0.431192,2.785166,0.950540,-6.957526,9.360167,-1.300198,-5.881162,-2.092136,-8.736052,-2.403959,-8.095855,-5.533459,1.227841,-2.311871,3.670775,8.618840,-2.674757,9.931910,-3.412477,5.391323,7.484417,9.448510,1.672985,3.965456,-9.679669,-8.886250,-2.833426,-3.086669,5.384712,-7.122044,-1.937214,1.572070,3.672020,-1.697961,-8.468098,7.871889,-2.664031,5.743676,-6.350804,5.089980,-3.316553,-1.411199,-1.864387,1.828354,0.365399,-0.828706,1.835641,3.423271,7.832573,-3.589245,9.037817,6.237462,7.178041,4.557931,4.330217,-5.483834,-4.119519,-8.518478,-8.521231,-0.459260,6.870117,2.066899,6.464751,3.377849,-4.881520,-4.287892,5.316201,3.346629,5.402786,9.026386,0.708410,-2.481858,-8.262649,8.474003,-0.370139,-0.882729,-5.856143,0.254887,-5.040362,-2.077832,-8.632625,-8.549599,-5.276075,-4.821729,2.231228,-9.139290,-2.003928,-5.396606,9.583692,1.606448,-7.610992,-0.033791,7.226271,-5.432975,-3.484356,-2.302899,5.380122,3.235687,0.223325,9.780497,8.481708,1.409650,7.045916,-0.097549,1.477627,-7.687416,5.309874,6.107308,-8.770262,5.839678,-3.774089,-4.113258,-0.551347,-4.746538,2.390926,-4.469076,5.052327,-6.692384,-7.417458,-6.310182,-3.369977,0.535240,6.518258,-0.273660,-9.281613,-1.671898,-9.995195,-2.180121,-2.909689,-5.557420,2.281092,-6.108311,-3.832661,2.845467,9.653376,2.795040,-5.794003,-4.442269,2.371653,-6.955453,-5.493527,-0.223473,2.014169,9.174213,2.627393,3.142231,7.572255,-5.547879,6.585091,-9.331642,4.333354,-6.148499,-9.355934,5.114499,-0.404578,4.169176,-9.617107,6.627739,-3.509866,-0.220516,-8.802715,-9.184959,9.566258,6.608293,-4.524112,-5.303807,1.004869,-0.903611,6.619137,5.453828,8.057398,-8.138489,9.226451,7.548443,-0.435053,0.185719,1.432785,-7.193912,-1.406846,6.679358,7.292925,-7.843091,5.906865,-1.545664,-4.330855,-2.939742,-4.645759,-5.259800,-1.681744,-9.400704,5.987372,9.187587,0.168772,8.305348,1.008563,1.969679,-9.985307,-1.279910,-8.190952,-4.878846,-1.877316,-0.624160,9.964235,-1.255841,-5.849930,2.988138,6.635977,-2.564830,-0.715835,-4.362689,7.338642,8.655819,-2.951585,5.923527,-5.011113,5.885805,-1.837149,-1.105631,-0.999458,6.972115,2.645095,-1.238805,0.864386,8.511722,8.205369,0.503667,8.029168,-8.814656,-4.137116,-5.269775,-6.745650,-1.046679,3.709241,-8.919363,4.284384,-4.297718,-2.108303,9.875507,-3.739563,-8.486965,9.948478,-7.683745,-8.799668,-9.733653,-0.110254,3.625763,-0.746425,1.853405,-7.015992,-2.723501,1.382327,-8.602244,1.908654,9.719384,0.699340,1.378133,4.091658,5.909880,9.320899,7.135240,4.973786,-2.225837,-3.394459,5.025055,8.121565,-1.511086,9.670358,9.603245,7.770604,-7.827275,-6.361357,2.748852,4.530537,4.079248,-9.402272,-2.297385,8.841254,4.380523,-5.749351,6.238277,-3.599116,-6.379066,-7.691725,8.563808,-5.726752,-4.309458,7.471055,-4.025092,7.272991,2.894997,-6.872592,4.756109,-4.014774,8.965743,6.366176,2.448802,3.680460,2.629727,7.123712,7.104930,-7.340453,-9.891601,2.278785,-8.495657,-1.317622,-2.361442,5.592139,-3.004467,-1.923302,-4.117841,-9.042680,-3.098145,9.188254,-0.865163,-3.049106,-9.504203,2.859613,-0.493557,-2.222985,6.344249,5.553741,3.022833,6.893903,-5.908665,-2.812264,-6.607922,-4.211625,-6.308815,-8.851417,-2.589057,-9.665007,-1.502256,5.122798,-4.175130,6.472268,-8.069783,4.822861,-1.852099,-3.892382,-4.168194,1.713099,1.246782,0.427754,-4.012672,-4.022093,-2.566598,1.546551,2.684999,-4.206399,-1.190284,9.942130,-3.382022,5.176908,-8.232478,2.551006,-0.423775,4.918977,1.905669,2.117926,-6.391135,-7.588099,-2.289440,6.003720,1.466377,6.605856,-5.176181,-2.721378,5.141270,5.813658,6.443628,-5.630715,8.579447,-7.477730,8.203498,-4.891346,8.699902,-4.398302,2.280114,3.979817,7.681320,-1.049725,-9.596369,-4.011284,-3.765761,5.764227,7.747762,4.102778,0.461036,2.040833,5.194935,-4.343820,-6.616111,-8.938618,6.562545,-1.861051,-0.669360,-2.590637,-7.968708,-4.603256,-8.041616,-8.253458,-3.444296,-6.594790,9.505503,-8.573569,-9.820591,-9.843156,2.682342,-3.728861,-2.151107,-0.128482,0.973141,1.218726,7.858361,2.794665,2.645030,5.892260,5.406702,3.674872,7.278492,-1.887662,8.572536,3.309377,8.088544,8.957778,-6.458237,8.016260,-0.510746,2.153617,-3.731207,4.113461,2.345442,0.745661,-7.444479,4.626456,-1.819368,0.992906,-8.978822,7.377710,-6.180593,-8.856017,-1.388236,2.004545,-8.644995,-3.367236,3.408264,3.595129,4.113700,3.437276,6.335452,4.027335,-2.021694,8.028603,8.536685,8.803804,5.560611,6.345339,4.128785,-9.407540,6.929017,-4.327330,-8.916317,6.463807,9.730127,-1.133331,-7.802307,-6.798542,-8.657031,2.942789,-2.238511,-1.643056,-1.467920,0.976457,-4.736997,-6.867056,4.358313,-7.457082,-6.374714,2.077707,-9.014340,-6.676485,4.561311,-0.192214,0.491892,-5.895469,-8.417129,8.214881,-7.648994,-0.151052,5.258122,-4.392667,2.486241,-2.006050,6.554009,1.927751,7.136104,-7.772047,8.081547,5.242415,-0.926100,-9.492906,-7.983758,-1.944358,3.110506,7.372870,0.644344,1.048981,-6.456256,-4.965839,4.270122,5.729630,6.377004,0.631267,-5.883443,3.572184,-5.642115,9.193007,-2.679994,8.019548,-0.408459,-2.567093,5.363135,2.556336,0.145179,7.332688,6.935474,-7.348492,-7.361973,8.783747,-6.132958,0.075707,0.976851,6.313153,-4.916965,5.696253,0.191323,-0.427610,7.113112,-2.061126,3.865734,0.025672,-0.532937,-6.338857,0.549102,-2.847404,-4.715632,4.515149,-7.703848,3.412860,1.429769,-5.548841,-6.357652,2.668691,-3.722024,9.664012,6.935771,-0.603801,-4.074268,-2.751054,6.825507,3.978583,1.966082,5.878443,3.314314,-7.913251,6.245076,7.451732,-7.923179,0.169893,-9.864322,-2.286711,6.474229,4.940658,6.215557,4.102224,-7.855751,0.207654,4.284767,-3.695215,8.105733,-1.873368,0.243326,1.993222,-5.377661,-0.845928,2.080649,5.330600,5.703239,-7.692139,-6.897372,5.268237,-8.274797,-0.576306,1.424571,-3.843429,-1.411832,6.770876,-7.890870,8.701816,2.201234,2.477340,-2.828161,7.472127,5.043978,8.557714,-2.173571,3.305044,2.901540,-6.176317,-0.241298,0.067620,9.527592,-2.613452,7.732394,0.023854,4.327387,5.824073,6.541122,2.782725,-0.177359,-8.124081,-0.478092,8.977761,-9.861881,-3.694648,-8.021786,8.603849,6.204116,5.077010,5.495544,5.804585,2.880921,-4.722721,-1.321663,-4.716991,-9.608463,3.342015,-0.446674,-6.309512,-3.875978,3.713564,9.529160,2.219269,-2.093430,8.917895,8.342033,-7.918371,-1.578724,1.823776,-7.516578,7.321505,-7.317577,9.733977,-0.313066,6.986541,9.233173,6.524981,2.007518,6.467578,-8.911816,3.229248,0.333807,-1.483108,6.278406,-5.664658,9.696880,-8.425979,-5.292730,-4.162912,-1.848583,-4.729929,-5.312893,-6.124446,-3.877840,2.573012,-3.700512,-8.155556,-5.793200,9.181123,-9.842038,-0.567560,-5.894410,5.155211,-5.208690,4.797569,-0.969791,-1.755906,8.779533,-8.930315,-7.137311,-4.801647,6.646315,6.100441,-5.697094,4.817809,-9.575201,-9.921380,-8.002186,-6.756982,-3.642970,0.816193,2.847517,8.228470,-0.912255,-8.401763,-2.666253,-1.408546,0.932347,8.116044,-0.431983,-2.406301,-2.942000,0.453878,-1.087060,-4.369698,9.854005,8.572846,0.673547,-9.506980,9.915184,3.007694,7.578699,9.265452,3.567176,-4.357527,2.466504,-9.888308,-3.898035,-9.604516,3.546471,4.412859,8.605643,1.031698,5.516309,-7.394308,-5.345388,-9.543686,5.744314,-7.992081,3.930301,0.131622,2.694170,-1.037005,0.217160,2.014719,5.480091,-9.967036,6.566098,-7.411716,8.642843,7.170999,-5.856389,1.687210,8.194439,-3.746597,1.940919,9.606436,3.752216,-5.459608,6.753084,-1.412174,-0.676503,9.118249,-4.957703,-1.458409,-9.928128,-9.099170,-1.675853,8.402266,0.502909,-9.292670,1.764262,-3.986970,2.398999,5.478717,-3.060627,-8.051696,-8.416402,-8.676977,5.411328,-5.577034,3.600820,-7.136391,9.415691,0.805986,1.553784,3.403556,-5.883568,1.304703,-5.107953,-1.605769,-9.732269,6.096986,-5.171839,-4.014863,-8.465692,7.860426,7.490794,1.023751,3.916262,3.838677,-8.906082,4.810655,-4.380630,9.061296,-6.288347,5.136654,-5.718552,4.178047,0.827587,-9.610234,6.885717,9.905155,2.597261,5.226312,1.518796,9.662515,3.427925,-7.538353,7.484811,-5.076411,1.079768,2.185504,-7.402950,-1.097892,-7.826761,2.617320,0.238609,-2.848753,-7.531058,8.377253,-5.310998,2.300894,-4.501620,-5.463710,5.066658,1.329917,-3.790585,-8.958697,1.049959,-6.834509,0.564862,7.385904,-5.355309,6.978595,5.024945,1.583050,3.889202,3.190396,-9.643204,-3.114381,-6.955687,0.592389,-0.412244,0.937467,-6.969474,7.276844,-6.133951,-8.267657,-8.363207,2.636780,4.433519,1.479039,1.171349,-6.468873,-5.114060,-6.526501,-4.931832,-6.183075,2.880476,-3.719207,9.083110,-6.554125,6.818182,5.551139,-6.466628,0.287124,3.207366,9.637537,-9.976202,-3.720129,-2.008937,1.907355,-5.801258,4.018515,-5.408523,-5.325189,4.409541,5.921055,5.995145,-9.517925,2.946965,3.083105,-1.251211,3.159394,-7.991754,-4.996468,-7.951203,7.470158,3.578099,0.057444,1.192884,7.161843,-1.248930,3.608827,9.586850,6.478349,9.358917,6.293094,4.646834,-1.467909,3.894614,-1.835707,7.204603,-2.322284,-8.493665,-2.712325,7.672250,-1.792217,-0.520008,-4.694941,2.111430,-2.471087,-9.916571,6.471183,-2.176835,-3.175318,-7.581559,-6.005212,-6.519748,-7.437839,-7.358942,-4.682001,-5.557760,8.841974,-9.029101,8.983524,0.765537,5.437749,0.825274,-6.986827,-3.179579,9.747590,2.732304,-9.111668,1.779919,0.466173,6.410805,0.981738,-6.636413,-3.867628,-4.754550,9.585966,5.424502,-6.324414,9.842507,3.334901,8.420230,-5.265521,-6.609062,-5.582249,7.749673,7.444092,-6.335438,-3.370409,6.385186,4.753260,-8.790668,2.455269,5.137239,1.181630,-0.420816,9.276406,4.276979,7.666268,-7.271543,1.534270,8.263347,4.135926,-8.927888,-2.107842,-5.801760,6.497144,-0.982390,4.794091,-0.784673,-9.689446,8.209184,-9.244109,9.662816,-6.156471,-6.504129,8.705614,-8.336729,6.386142,5.055320,-4.454970,9.629765,-8.641043,-9.368284,-1.751444,-7.168989,-8.815173,-4.916182,9.306129,-1.033078,9.757234,8.210882,-3.202237,6.981631,-2.347784,8.278682,2.989136,5.755315,9.762848,1.433006,-2.841141,-5.580858,4.997581,-5.202233,7.886564,-3.830681,1.193914,6.799673,9.559738,6.271289,8.551703,-7.344690,3.466917,1.813187,8.328424,-8.564540,-2.287219,-5.730744,5.095633,-0.017475,5.307061,-7.170815,7.518158,-6.083718,-0.842893,-4.648172,6.318468,-2.676226,-1.626519,7.329478,-1.959777,-6.569121,-6.155338,-9.836459,2.986162,-1.398225,3.994796,0.521273,4.891235,1.014547,2.302561,2.591372,-5.898782,5.941775,8.317732,8.255998,7.802931,0.075262,-1.769415,8.498297,-0.346292,3.385626,-7.786429,-6.267110,-6.113012,-7.686262,-5.977785,-9.936779,3.862176,7.430773,-8.545090,8.520213,-5.361913,-7.709321,-3.512332,-4.379551,9.837628,8.916695,-7.093514,4.259064,8.127450,-2.144314,-1.771405,2.749359,3.353875,-2.395294,6.803929,4.698256,-7.485384,-5.628111,2.834732,-2.605963,-6.801155,4.865745,0.194799,-9.382267,-2.419434,-0.882015,2.037386,-7.223590,6.930368,2.317595,-1.659397,-3.870430,-1.756420,-0.817173,-0.188968,-9.714185,-9.379564,1.089376,6.550711,-4.694893,6.688261,-4.211270,-8.029761,5.759098,4.610058,-0.117698,7.148122,0.811542,-6.859690,0.887906,-1.289846,8.337893,6.720749,-2.405080,-0.367133,-6.874261,-1.591684,1.755003,-1.542945,-3.673876,4.610176,0.416138,1.057115,-2.984596,-1.387469,-3.161736,6.902426,2.926938,5.728695,8.591185,6.167520,5.650950,-8.958277,-0.448792,5.608358,9.098647,-5.764681,3.608073,2.069877,1.828517,8.537282,-0.662195,1.713445,-3.736135,5.439498,2.247543,1.212522,-0.059121,8.103532,-5.278144,8.655374,9.550572,2.234197,-8.461452,-1.300397,-3.312885,8.919905,-3.645140,6.065134,7.074724,9.760643,0.835280,1.770012,-3.763966,-9.873743,8.305101,-3.046035,3.675281,9.531020,-5.860005,1.091623,-4.275622,1.075376,-6.199104,6.957143,-2.860492,-2.738050,7.005719,2.764551,-8.555823,5.534325,-6.168693,-5.559182,9.634632,5.241931,8.939475,-3.982291,6.749713,-1.124440,-9.502539,-3.968858,-5.589108,-4.632565,-2.284792,-5.879213,-0.042877,6.063016,9.530064,-3.075323,0.080069,9.524539,8.426899,-3.792503,2.240422,-1.461351,-4.724715,-3.632301,0.241267,5.362876,2.037991,-4.768694,6.722363,-7.973978,7.490135,3.277180,-0.670146,2.748977,-6.625101,-4.288783,-7.803164,-9.567154,1.102350,-9.530136,1.865684,5.268637,1.168928,-5.514357,1.394757,9.788982,-4.103627,6.353792,8.024605,-7.062716,1.150951,-7.357846,4.744791,-2.982172,0.979766,9.039862,-5.051490,4.911403,-7.709219,-1.133987,-2.986861,-7.255015,-6.749626,4.195081,-8.847333,-1.183359,8.706078,9.563683,1.903948,1.105162,-5.152043,2.588794,3.379028,-5.946790,4.297298,9.039864,1.999701,-8.041500,-0.256853,3.949956,0.239571,-0.021524,-5.958204,6.074627,9.533372,1.747398,3.734797,3.699413,7.547723,-7.865177,-1.129686,9.729868,5.453831,-5.633094,9.530234,-8.945922,9.291967,1.804424,-1.545365,8.310363,-3.811996,-7.925162,4.499460,-9.439177,6.298186,4.894462,5.878651,5.736798,-3.764509,-8.925504,-9.045707,-5.859584,4.434387,3.975558,-7.680408,5.276500,7.617957,-1.992613,9.071067,-2.684377,7.553536,8.273730,-2.665470,4.620557,-7.672357,-3.577311,-6.405072,-1.721010,7.554205,-8.382166,-0.436570,-6.061938,7.863521,-2.865902,0.121523,8.465163,7.364397,1.195025,-3.148958,-6.395489,-9.184265,6.290798,-6.338082,-8.680313,9.271572,3.464853,9.804053,-2.677198,6.335747,3.801116,5.636337,2.947926,9.679645,-1.084276,-1.896766,-6.763732,7.956842,3.264989,1.688498,9.583831,-1.692858,-6.188368,-2.187807,-3.025449,-5.020740,4.894484,1.527679,-5.949796,8.285099,-8.989583,9.636700,1.798964,-4.850949,-1.704885,-0.095466,-3.786209,4.805434,-1.284290,9.656930,3.458348,3.916333,0.427357,9.719777,8.891883,-4.774813,-2.360889,3.635310,3.065291,2.423280,0.457517,3.224230,-2.168005,3.950046,1.902481,-9.683888,-4.992455,8.373262,-6.360555,3.325811,9.773021,6.769985,9.985491,5.104984,-5.497633,2.792332,8.766915,1.377528,2.933164,-4.648197,-8.587071,4.443818,-0.686936,-4.335956,2.413055,9.773470,-7.331539,7.565410,9.880673,-1.914813,9.070936,5.184909,-5.825393,-8.764313,1.474519,-7.305358,0.095560,-0.824118,-0.895512,-9.400416,-4.890312,4.267177,-4.801182,3.258723,4.262390,5.417069,8.172461,5.378143,-1.679995,9.426963,0.074269,9.374469,0.904498,-5.623961,-3.704966,3.185807,-2.137793,2.038008,7.849818,-4.763018,-8.972266,9.517583,8.177652,-4.497740,8.456552,9.439293,0.595598,6.790903,3.671019,2.668102,3.677814,-9.946001,5.667895,-2.415186,-8.102938,9.576327,9.472705,-1.637448,-3.871473,-8.980730,-8.641525,-8.612118,-5.023052,-9.891565,8.187175,9.007220,4.078812,9.842624,-1.693629,4.765302,-7.474067,0.040255,-9.462395,-6.762718,-9.818065,-8.664018,4.287544,4.525532,-0.107804,6.240775,7.996509,-8.659878,-2.619298,9.888661,-4.319108,-7.495370,2.666665,-7.177112,5.718715,-2.001139,4.795225,4.093397,1.134203,-4.236775,-2.282002,-6.413690,-8.736319,-1.081685,-4.174190,9.766724,5.471594,0.744634,-1.625485,-7.921177,1.748343,6.669422,7.687633,8.064018,2.752331,-3.056889,6.601282,0.830377,-2.843383,-4.075075,8.550383,8.344761,6.391322,-4.495053,-7.827472,-6.551885,5.901173,-4.962705,-5.360689,-8.530130,8.702773,6.994316,7.325868,-0.114440,0.837308,-9.102458,9.502853,4.858773,-6.153747,-5.348275,-1.480914,-4.278454,-0.646317,-8.002877,-8.403455,9.671868,1.249587,-5.259471,6.842275,-5.778959,-4.301977,-8.078109,-7.081668,-0.495296,0.219680,2.030059,3.614462,7.793786,-7.437166,-5.491084,-0.459400,-5.090848,1.500675,-9.291712,-0.236369,0.959842,5.743020,-4.192876,8.761637,0.009516,0.879777,-8.646992,-5.289658,-2.569253,1.217325,-8.886985,-4.560712,2.436248,4.756943,8.657474,4.422240,-0.292195,-2.745049,-8.828334,-0.473709,-3.061399,4.151551,-9.479031,-5.964250,-1.221666,-5.649002,-3.064283,-2.553582,-6.064669,1.472101,3.295670,-9.771792,-0.769357,-0.120079,-2.414809,-4.049070,-7.833373,0.125012,0.483498,1.179217,1.662750,-5.651081,8.706939,5.424494,7.615140,6.528135,3.260346,-4.642675,-3.207182,5.333335,3.177540,5.410241,4.129777,5.507207,-2.927686,-6.686052,-7.273065,3.300812,4.669593,2.829201,-8.209281,3.524032,-5.853055,8.731591,-5.732999,7.522944,-1.070888,9.385899,9.305827,-0.067891,-7.549266,9.376727,-4.625547,-1.661879,2.446311,-2.639547,-3.832501,-6.717934,9.231985,9.168397,-0.955504,-9.364688,6.168499,-4.733818,-5.265651,-0.034892,6.847250,9.795367,7.802128,-5.626937,8.260278,-8.949613,-5.873321,-9.340745,-7.301097,-8.445534,-2.697227,6.760831,-5.403375,-9.926416,-5.354144,2.973017,-3.555079,9.568641,-9.717727,-3.188373,-7.193242,1.779045,1.892304,5.721238,5.356568,-2.434601,-1.984765,5.533175,5.615009,8.453915,0.493624,-7.674506,8.573693,4.465630,7.291985,0.114485,-0.407095,-1.684702,-3.849390,3.962996,8.256055,1.880982,9.265356,9.155642,-3.334243,-9.481103,7.654763,5.579412,7.651070,3.862047,-0.845321,-1.871484,8.404115,8.777356,-3.469112,-5.836836,-2.426513,3.061769,-7.057977,3.476416,8.471410,-4.628110,-5.452130,9.039361,-4.150586,-3.273006,5.394342,1.709478,6.579547,-5.210848,2.313812,-8.623772,-1.512863,3.734504,-2.529046,8.817128,7.035697,-3.221003,1.350476,9.068790,-8.425042,6.758445,-8.185212,0.452872,6.417960,-8.373244,-0.197845,-5.199113,-4.111194,5.638937,-4.614906,3.909000,5.128368,2.706792,8.195412,-0.072297,-9.922082,-9.562646,7.643714,6.516110,3.498231,9.582849,-6.791130,8.530629,-6.254014,3.966058,6.158409,-1.347431,-5.509076,-2.569444,-3.361722,-4.096656,-3.088356,4.711536,-8.392039,-9.237107,-6.650302,0.511908,5.018691,-5.208525,6.418242,2.427067,-4.369451,7.765007,9.265833,-3.810842,3.032339,1.692299,6.391767,9.191675,8.441949,-4.557199,3.322253,-8.558720,-4.874177,-2.462624,-5.125755,-6.693380,5.809163,3.407871,9.129235,-1.816871,-8.120961,-1.797708,4.194140,0.481717,3.196135,-0.394005,7.035093,-2.771435,0.816850,-9.691069,-1.165830,-9.461173,-4.433202,-5.743391,-7.534226,-8.700949,-6.963205,-7.552590,-2.443859,-0.826730,1.470557,5.968820,3.090636,-1.017733,-5.747498,-1.574161,-5.967437,5.136671,0.204733,-8.152391,-6.411686,-1.548789,-5.722110,-6.455682,2.623299,-2.172968,-5.546018,1.922578,5.334473,-9.333975,-5.739728,-8.243138,-8.556083,-5.459791,-3.416006,0.092857,9.899069,8.442684,-2.350379,3.224625,5.963148,8.219803,4.716847,7.328004,-4.136932,-5.716842,8.063300,1.030304,-0.271001,4.428486,9.016789,-2.156730,-9.954532,-7.919275,1.006895,-9.503204,0.247399,-1.243649,1.558272,-0.281888,-6.696538,-6.402735,3.713800,1.069848,3.666995,-1.407905,4.518948,-7.459415,5.784232,-6.675494,-5.365876,1.090198,-3.556191,-7.334613,8.097431,-3.006718,6.766517,9.516573,-7.647018,0.082852,2.292813,-0.697156,-8.227465,0.334891,8.399975,-8.842382,-6.407025,-6.169863,-3.228578,-1.566551,4.759525,7.134304,-6.930833,9.110137,6.169263,-2.803057,3.741844,3.297467,4.799712,7.625333,-0.649048,-0.386802,5.294537,-3.717532,7.918301,2.303295,5.721910,-0.415728,-9.376980,-6.882891,-8.657261,-6.301117,-5.285309,1.870596,-7.447209,-6.316167,-0.183365,-9.506991,8.845419,7.845006,9.475305,5.889881,6.130280,-0.608797,-5.240202,3.106515,-2.476229,-9.059348,6.239999,-4.582889,-9.814983,4.482001,-4.553458,-4.901873,-0.611832,-4.300822,-2.632704,-8.786492,0.823057,2.564558,7.796098,-2.737918,7.487789,-8.600818,-4.706927,-3.391265,-2.396994,-8.407005,3.208682,-5.496766,-6.005393,-7.511706,3.387347,7.230931,1.878006,-6.223542,2.413133,-8.106108,1.715560,-7.974435,-1.476731,-5.426816,-6.325569,5.429100,0.983157,4.551612,-5.302979,-2.200852,-9.740880,5.665506,1.495052,-0.655792,-8.082789,4.444942,-3.492268,-1.559595,-0.192244,3.705155,4.115611,7.010948,-2.283728,-5.412057,-7.537208,-5.989712,-2.131084,-1.845301,4.087433,8.993930,-2.153570,4.779089], dtype = "float32")#candidate|7041|(2340,)|const|float32
bop_7042 = relay.subtract(call_7033.astype('float64'), relay.reshape(const_7041.astype('float64'), relay.shape_of(call_7033))) # shape=(2340,)
bop_7045 = relay.subtract(call_7035.astype('float64'), relay.reshape(const_7041.astype('float64'), relay.shape_of(call_7035))) # shape=(2340,)
func_6619_call = mod.get_global_var('func_6619')
func_6621_call = mutated_mod.get_global_var('func_6621')
call_7046 = func_6619_call()
call_7047 = func_6619_call()
func_5072_call = mod.get_global_var('func_5072')
func_5076_call = mutated_mod.get_global_var('func_5076')
var_7060 = relay.var("var_7060", dtype = "uint64", shape = ())#candidate|7060|()|var|uint64
const_7061 = relay.const([-9,-2,3,-5,1,-1,3,-3,2,4,7,-3,4,-10,-4,-7,-5,-5,6,-9,-9,-3,-2,9,6,-2,-1,-1,-2,-1,7,-7,-10,-3,4,5,-4,-6,-7,-2,10,-3,10,-3,4,-9,5,5,10,-2,-10,6,7,10,-6,-6,-6,-7,-2,9,6,9,5,7,-2,10,9,-7,9,-10,-10,3,-5,4,-1,-5,4,8,-8,5,-7,-1,2,-3,-5,-5,-1,-5,-9,6,-4,6,-7,-7,3,-4,-8,7,4,2,4,6,-8,-4,2,6,2,-5,-8,1,-6,-10,-1,6,-6,5,-8,5,-4,2,10,-1,9,1,-8,-7,-9,-1,-7,-4,-7,-4,1,-2,8,-2,-9,-1,1,-6,-4,3,3,4,3,2,8,-7,-5,6,3,4,-1,2,6,-10,2,-4,9,4,5,-4,-2,-3,-1,2,7,8,2,-9,-8,1,-4,5,-4,-5,-5,-3,1,-5,5,6,3,1,2,6,-10,-1,1,-10,-7,3,6,-10,-3,9,2,1,9,-3,-1,2,3,10,1,10,-4,1,-10,-9,8,1,5,-7,4,-7,8,-10,5,8,7,4,-10,3,8,5,2,-7,-7,-1,-6,-8,10,-9,6,-2,3,6,3,-7,3,-6,-7,-2,-7,7,-3,-10,-1,-9,4,1,7,5,9,2,4,-7,-1,5,-3,-5,-5,1,-2,6,4,-7,5,3,-4,5,3,8,10,5,-6,-10,-5,-9,-5,-5,2,-2,-4,2], dtype = "uint64")#candidate|7061|(286,)|const|uint64
call_7059 = relay.TupleGetItem(func_5072_call(relay.reshape(var_7060.astype('uint64'), []), relay.reshape(const_7061.astype('uint64'), [286,]), ), 0)
call_7062 = relay.TupleGetItem(func_5076_call(relay.reshape(var_7060.astype('uint64'), []), relay.reshape(const_7061.astype('uint64'), [286,]), ), 0)
output = relay.Tuple([call_7004,const_7034,bop_7042,call_7046,call_7059,var_7060,const_7061,])
output2 = relay.Tuple([call_7005,const_7034,bop_7045,call_7047,call_7062,var_7060,const_7061,])
func_7065 = relay.Function([var_7060,], output)
mod['func_7065'] = func_7065
mod = relay.transform.InferType()(mod)
mutated_mod['func_7065'] = func_7065
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7066 = relay.var("var_7066", dtype = "uint64", shape = ())#candidate|7066|()|var|uint64
func_7065_call = mutated_mod.get_global_var('func_7065')
call_7067 = func_7065_call(var_7066)
output = call_7067
func_7068 = relay.Function([var_7066], output)
mutated_mod['func_7068'] = func_7068
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5854_call = mod.get_global_var('func_5854')
func_5856_call = mutated_mod.get_global_var('func_5856')
call_7073 = func_5854_call()
call_7074 = func_5854_call()
output = relay.Tuple([call_7073,])
output2 = relay.Tuple([call_7074,])
func_7092 = relay.Function([], output)
mod['func_7092'] = func_7092
mod = relay.transform.InferType()(mod)
mutated_mod['func_7092'] = func_7092
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7092_call = mutated_mod.get_global_var('func_7092')
call_7093 = func_7092_call()
output = call_7093
func_7094 = relay.Function([], output)
mutated_mod['func_7094'] = func_7094
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7122 = relay.var("var_7122", dtype = "int8", shape = (15, 3, 7))#candidate|7122|(15, 3, 7)|var|int8
var_7123 = relay.var("var_7123", dtype = "int8", shape = (15, 3, 7))#candidate|7123|(15, 3, 7)|var|int8
bop_7124 = relay.multiply(var_7122.astype('int8'), relay.reshape(var_7123.astype('int8'), relay.shape_of(var_7122))) # shape=(15, 3, 7)
bop_7130 = relay.less(var_7123.astype('bool'), relay.reshape(bop_7124.astype('bool'), relay.shape_of(var_7123))) # shape=(15, 3, 7)
bop_7133 = relay.bitwise_or(bop_7130.astype('uint8'), relay.reshape(bop_7124.astype('uint8'), relay.shape_of(bop_7130))) # shape=(15, 3, 7)
uop_7152 = relay.atanh(bop_7133.astype('float32')) # shape=(15, 3, 7)
func_6734_call = mod.get_global_var('func_6734')
func_6737_call = mutated_mod.get_global_var('func_6737')
const_7192 = relay.const([-1.322613,-8.914955,-3.835739,0.331695,5.153484,0.274882,1.340851,3.943182,-0.943544,3.869664,8.956678,-6.463641,9.102818,-2.771371,-9.759445,-0.604520,4.006163,-1.383825,-2.194228,6.202636,6.830040,-2.027225,-2.213400,-0.207190,-4.546089,-9.341948,-1.036272,-7.762330,6.493889,4.477150,3.116753,-1.849540,-3.530868,-6.007954,-9.224594,5.118602,-2.747686,-9.569248,8.367427,1.240796,-8.589303,-7.995721,-9.337200,-3.458039,2.552624,8.251895,7.554534,2.807332,5.453698,-9.070538,-2.085092,7.009548,1.813498,6.014277,6.397243,-4.141250,-1.015690,-1.215878,-5.281776,-6.484043,-4.259083,-8.022832,2.949230,-2.971918,6.684473,-8.491121,-0.160091,-0.824497,-9.781621,-4.179306,-4.077014,9.460039,3.786816,-1.291150,2.982048,-1.949628,-4.159806,3.583602,-8.878094,-6.167563,9.080939,7.897629,0.159369,7.888699,-5.445157,3.161394,3.592492,5.832076,-1.770825,-9.219620,5.602673,-3.803393,3.956724,5.558790,3.483672,9.416739,7.444213,-9.843809,-8.467765,-2.322281,5.398489,7.270073,-3.682136,-1.537417,-3.121192,-7.803151,1.053779,-7.275928,6.768006,-4.666416,6.672016,8.369870,4.481746,3.629581,8.823354,-8.332967,5.481356,4.900224,-4.039438,1.826401,-9.836738,-4.210605,-9.088393,-7.648795,4.268423,-1.680923,-5.398603,4.501504,6.021691,4.563799,-0.201151,2.718526,-0.563596,0.453368,-4.837153,7.530157,3.942884,-6.327690,-2.918318,1.589893,-9.507741,3.431531,2.663419,-0.022819,2.078143,0.707779,7.933266,-8.476008,-7.113276,-5.740404,-5.359219,0.054486,-9.474262,7.895796,4.252609,-5.926589,-3.447900,-7.854384,-3.751032,-8.920796,7.787617,0.814111,-4.552992,-6.871102,0.682514,-1.616260,-7.507022,7.334749,7.059196,-6.760744,2.138296,-4.677226,-0.608447,0.214703,6.445312,-1.802883,-8.035714,2.885165,5.288894,8.635387,2.661431,-5.853959,2.183978,-4.227427,-0.002382,5.897225,9.021353,2.912182,9.371069,-5.644735,-9.622935,0.794820,-1.721835,-8.432488,-6.727786,-7.873163,3.352066,7.735050,8.959276,0.291261,-7.509947,5.498028,9.423824,8.930614,-8.073123,1.803326,7.844350,0.088992,-7.758078,1.915578,1.280025,-2.070103,9.508780,1.025664,3.023442,-4.930817,-5.869147,3.330849,5.357598,-0.089531,-4.451092,-9.739127,-8.692481,8.371455,7.722840,6.072247,-3.577291,3.680363,6.898287,-5.701491,-6.915819,3.604847,0.210143,-7.888944,8.563415,-9.969848,-5.707175,6.580810,-9.097038,0.928754,-7.707398,-6.991460,-7.231174,-0.945817,-3.296731,-9.348579,7.618644,7.119529,-9.673826,7.578014,-0.585200,6.638685,0.031788,4.392606,7.599855,3.805797,1.106744,7.551892,-2.373379,-1.365549,-0.675185,0.087767,-3.791517,-1.366310,-3.009994,-9.318790,8.290367,2.911769,6.325434,-4.581341,-2.768281,-7.137900,8.695293,2.974540,2.679952,4.755699,8.918694,4.533687,1.536313,-6.534711,-8.328278,7.080174,8.225931,-9.817964,6.235091,9.235873,-2.505976,-2.264258,7.912467,4.456556,9.481438,1.043163,9.051858,-7.818233,-9.786968,-9.226790,1.110528,8.446061,8.374729,0.292449,-6.980438,-9.697677,-8.994711,0.636910,-6.619585,-3.628112,9.133575,-7.591896,2.781424,8.250940,-5.319029,-1.070242,4.198862,-1.595024,5.743899,-1.262380,-7.829127,-2.414736,0.108748,1.522887,9.078356,4.026499,2.404337,7.897230,-1.213700,-4.248063,1.468117,-7.807027,-3.133519,0.800131,6.155652,-7.199969,-5.698444,-9.997830,-6.632173,4.528535,-6.728425,-2.010894,4.296638,-5.843646,-5.883553,-0.754181,6.513131,1.122861,4.314025,5.336941,-8.739519,-1.658873,-0.462586,-6.647980,-0.193340,-9.550996,-8.143507,-1.891658,0.458096,0.868805,-9.396023,9.120215,-0.827023,3.907803,9.793764,-9.575326,-6.412596,-1.477830,-9.885761,1.239425,-6.935888,7.105368,-9.831371,-2.814377,-9.635600,-1.391876,5.521857,-6.885673,-1.894522,4.105807,-4.506523,3.935789,0.571378,6.195967,-2.865308,-2.365482,2.566922,2.800836,-6.164661,8.755407,7.041355,6.546238,9.265374,-6.830056,0.441956,4.653662,-6.074972,1.214577,-6.181241,9.271798,9.187905,4.111323,1.140543,2.888835,6.699176,-7.368840,-1.661300,2.347791,6.549501,1.101416,-4.836152,-4.619325,6.349795,-9.765909,-3.962244,-2.554166,4.895239,-9.122435,-0.582820,-2.896867,-8.822057,-4.950103,-3.492735,-1.510654,1.110599,4.473242,-2.909497,-2.949119,5.295873,5.150162,-7.809394,2.719622,-2.445187,-0.160009,1.474069,-0.548630,5.023520,-7.125331,-7.438604,2.328534,-1.907282,4.475606,-4.020209,-1.509781,-2.464813,-3.684331,2.844757,4.462878,5.131155,-7.560505,-7.039687,0.180001,8.610537,-7.530661,-2.117500,-0.095306,-4.388968,-5.014956,2.885261,-3.516354,-4.754872,5.165844,-1.781661,8.136070,-7.729261,1.283597,-5.933761,5.114687,-8.499685,-6.476244,8.777234,-6.856862,-1.095201,6.586088,0.778370,-0.463364,-5.276733,-8.786250,-0.348677,-9.989893,3.704563,7.403587,-4.946575,-0.470999,-4.806428,-7.736650,8.566009,5.830620,0.311681,1.298810,-7.872218,-1.011747,7.477546,-5.822234,6.093431,0.797940,-8.129809,-5.205990,7.612925,0.415055,0.167885,9.537247,-4.195636,2.046915,5.447524,5.109278,-2.047968,-0.333234,-0.650767,6.853648,-8.914698,-7.328504,1.560432,3.475063,3.949170,7.733704,-7.554706,8.164006,9.084786,-2.044967,-5.857602,9.011112,-0.950631,-4.182069,-6.399736,-3.252524,-4.822415,2.561415,4.995007,-0.177229,6.379462,-0.632405,7.234724,8.436387,-6.321933,1.097873,2.588119,2.854067,0.232786,-2.700879,7.495163,-2.439615,7.704711,4.527871,-7.672635,-2.937481,3.384261,-3.710202,-5.053228,-5.938535,9.416386,7.580460,-4.549286,-3.572056,3.616728,2.397823,5.285418,-9.732781,3.745419,-8.317169,-9.135771,3.035215,3.786195,-6.432839,0.409412,-0.405622,-9.183935,5.471409,-8.033774,-0.049082,-9.268484,-5.404666,5.360637,2.267002,-2.738406,9.464055,-8.561937,6.409076,-0.743989,9.794564,-7.679006,-5.311611,-7.884182,2.812751,-8.349598,-7.476978,8.951255,-6.858351,7.054355,2.600166,9.175272,-8.110154,8.899940,9.494869,4.525620,-6.951242,-7.332475,3.452027,-3.658117,5.575387,-1.325581,-5.456167,-8.026277,2.663360,-7.474724,-9.590215,4.361010,5.205566,-8.752590,-8.300209,3.483371,7.459514,7.586711,-8.773704,6.343123,-6.865620,8.686842,1.670259,-8.977253,-5.734663,4.079270,-5.902793,4.237831,9.671647,3.249132,-7.401928,-8.319992,-6.685734,-9.497756,-5.609254,4.166026,9.260534,2.878839,-9.473757,8.547782,-1.057350,0.455007,1.548392,-6.147364,-6.945599,-2.345243,-8.753951,-1.933963,5.245236,-1.240316,-5.460441,-5.380419,-2.589588,-5.892214,6.777708,1.959749,-9.799754,2.008887,-4.033573,8.289125,4.709207,8.530143,-8.141742,-7.582775,-2.773129,4.476331,-7.379972,-4.281249,7.770926,-6.153159,5.901018,-2.211832,-6.754699,5.395537,0.425442,-7.571966,7.670926,5.048728,4.094480,2.790633,-8.917556,8.139402,-2.038310,3.600970,-1.826580,8.240977,-0.921020,-5.239990,4.110799,6.341176,-5.891305,7.755613,2.208732,8.723628,-0.502712,-7.292157,-8.622984,-3.506542,3.768142,-0.056542,1.429238,9.792222,-4.034427,-9.975702,-2.158101,-3.144114,6.878212,-7.492156,-6.443976,-1.112533,-9.789198,4.182122,-3.154507,7.751513,-1.469486,7.463980,5.470427,0.158446,-6.236999,9.509729,7.447453,9.709832,9.725236,2.990640,-2.321573,7.373080,-0.431882,9.526429,-1.551925,-5.071738,-6.701606,-1.539291,3.426735,8.920988,5.185606,-5.224393,4.668983,-2.600634,1.169663,-6.319513,8.322305,-7.757226,2.314142,-7.875036,-8.361645,-7.222190,-6.318078,3.323975,-3.011742,-6.485010,6.383934,-3.976567,-4.927456,-5.814196,-9.598352,2.267855,-2.473816,0.409000,8.750496,8.135867,-5.747985,5.330571,-1.712714,-6.200633,5.025027,-7.195043,1.275122,6.409772,1.840980,6.078634,5.535898,0.147553,-8.299614,6.235642,-2.858011,-6.870851,-0.928565,-9.239254,-6.302945,5.877742,8.354228,-0.691066,-3.490272,-6.121928,7.817627,9.462587,5.278490,-7.294179,8.551744,2.488942,-4.972370,-6.829132,0.695941,3.257921,-2.628959,-4.235672,5.085922,-4.062293,-8.507382,8.015142,2.934408,-2.623984,-4.349737,-7.037648,-7.507276,0.052666,9.600650,6.334982,-6.530535,-0.520772,4.289647,-7.932036,-2.558297,-2.001521,-8.375284,-7.558272,-6.086750,-1.533598,-1.627235,-2.044399,-6.016867,4.370310,-7.751827,7.227064,-4.801492,6.482422,-2.671216,-6.395951,-8.273453,9.929385,-1.904404,-8.647994,3.165638,0.813526,-0.996974,-3.882061,-0.883330,-7.951709,8.347021,7.341234,-1.907267,4.371555,2.137493,7.323097,8.670499,-4.055776,-2.100123,-6.032083,6.083770,9.616022,-8.066505,-7.632871,-6.792021,6.545782,-7.824280,9.412578,0.960649,3.974184,-9.431246,-4.284675,-6.062904,5.429588,-1.445435,-9.254634,-2.296095,7.453918,2.845320,0.464506,-6.861473,1.996779,9.598630,5.560298,-2.146915,9.504450,1.216602,-2.288665,-9.956551,1.150256,3.197399,-7.637307,8.264081,-4.955279,-7.453471,-3.161886,-4.091612,4.913936,-8.196706,-1.530702,-3.738228,7.792082,-5.332916,6.034102,-1.570366,6.473233,-7.298998,8.757546,7.623784,-8.588527,0.500105,-0.008300,4.710323,3.395904,6.744340,-5.398222,-4.319630,9.102338,2.982911,8.977546,4.545572,9.855079,3.743598,-6.759240,2.965609,-9.969253,1.534348,-7.273192,-2.522564,2.307685,-4.344118,6.711090,6.093906,0.704757,2.089557,-3.771211,6.159977,-8.540044,-0.125069,9.986957,-9.629069,-2.034990,-3.780501,-6.599182,7.674601,-5.186497,7.511532,-9.582392,2.004673,0.919311,-5.980230,5.850305,1.878075,-1.285083,-4.848655,5.568274,3.219421,9.173900,4.322251,2.617651,6.172633,-7.711251,5.811643,4.253496,-6.744016,-9.179140,4.924948,-3.517478,1.889607,-4.457317,-4.294509,-0.841589,-0.873566,1.018490,9.963298,-8.136163,5.627312,1.712366,4.523284,7.455488,8.616517,-1.772652,6.681756,-9.075450,-5.910964,2.393445,-4.062459,-9.539167,2.838762,-0.381731,-3.377197,1.623824,6.923745,1.363299,0.063155,-4.805266,-0.730473,8.118489,4.872646,-4.141540,9.624629,-0.320739,-9.686765,-1.067218,8.404839,-4.313789,8.464606,6.080295,0.699107,0.083757,7.343160,9.474279,-8.663846,9.941546,-4.409150,2.384570,5.001383,-1.313755,2.981154,8.141754,7.398519,-5.001413,9.246454,-6.273035,-4.248378,-6.892366,2.763343,8.438562,-7.602459,-3.589458,0.756437,-7.553935,7.178541,-7.425689,9.034615,7.930051,3.939712,2.248517,3.970059,1.272924,3.992779,4.808608,-9.588640,4.157199,-6.869740,4.834481,8.023728,-1.790562,-0.140589,5.963991,0.822193,3.316522,1.291544,4.657891,-8.238065,-0.490485,-2.089815,-4.238841,0.541898,-8.941520,5.822051,0.229417,3.607503,-4.036881,-1.622016,-2.782584,-5.514751,-1.456953,-5.813408,2.325659,3.361502,7.753019,3.963853,-8.094242], dtype = "float32")#candidate|7192|(1053,)|const|float32
const_7193 = relay.const([-8.125793,2.346186,-1.101030,-7.471705,-2.178692,-3.928363,-2.582515,-8.631208,-0.594688,2.594668,2.956266,-2.255247,-5.845412,1.276010,9.522982,1.053976,4.952974,8.002375,-5.917686,-7.906089,-8.032874,8.876715,-9.958129,-0.484152,6.763246,-7.815436,-7.557696,-7.561378,9.740235,-9.769963,3.895401,-3.333051,-2.270575,-9.933870,2.536137,4.157358,7.255588,-4.445712,-1.133168,0.673928,-2.940832,8.382792,-3.753751,-2.562837,3.358183,-5.219322,-7.056085,-4.143450,-6.836228,0.384950,1.924482,-9.742398,8.429139,-9.686915,9.026574,-8.589394,4.033151,-1.383735,6.042759,4.351517,9.564956,3.392381,4.107412,-6.888956,7.121483,2.402570,0.136369,2.211612,5.180566,-0.850884,5.327021,-5.521292,-6.686433,-7.384943,7.898557,5.764302,6.446487,-9.787810,-9.551209,5.729559,-7.906160,-7.454757,-3.585241,0.665577,-2.621120,-8.126570,-0.266058,-8.134947,1.798589,-5.281913,8.036644,6.671102,-3.400396,7.637927,-8.068132,-6.092357,5.448001,-0.337119,6.028807,6.257929,-3.779629,4.063073,3.272503,8.015354,3.253804,9.685481,8.329961,8.362956,9.017675,-5.145127,4.580080,-0.151000,-5.706423,-1.304541,-3.457881,5.839105,5.027791,9.340990,-9.419838,8.495417,-6.217483,-9.938864,1.950165,-4.924365,-9.268900,9.431603,4.401377,9.108312,-1.263404,3.747826,0.429561,0.299943,-6.767074,2.936424,-5.065449,-0.530884,-7.742191,-2.698136,-4.742048,-8.394388,-8.644783,6.485633,8.355249,4.100971,-7.898844,9.512208,7.534432,6.350871,5.774790,-1.358824,7.106734,2.828642,-1.445947,-5.724456,-8.564880,6.748517,-7.825781,-1.199213,2.648564,4.099964,2.425475,-0.514820,-0.832877,-7.645572,-2.197411,1.115446,0.997789,4.369034,-6.634700,-3.418045,-2.995019,7.734476,-5.100815,1.756714,4.607857,-2.046337,1.209576,6.468830,-5.644763,2.601694,2.098600,-2.737829,4.307368,-0.535893,5.220024,-8.693982,-1.381639,-3.383499,-0.716595,2.541380,1.527550,-9.512559,-2.165473,-9.536666,0.564026,8.974530,-8.860525,3.880714,-9.384100,2.782663,-0.233046,6.159922,-8.543430,-7.594536,3.165639,-0.118540,9.883108,2.001519,6.563806,-0.162358,-6.617982,1.761681,8.225226,-1.514349,-3.987894,-5.058784,-8.338761,3.893934,7.521646,1.302654,7.873361,0.102562,-1.098580,-1.032406,-2.498994,-6.745918,2.281620,5.176062,-6.913351,-1.781786,-7.632676,9.400345,-3.958743,5.468038,-9.000550,9.876707,-2.907280,-6.270893,3.693388,-6.123571,7.832457,-0.819553,-6.647110,-7.929763,-4.117793,3.583594,6.053991,1.555962,-0.472945,5.023932,2.624328,-0.379717,-7.329536,-5.744192,-6.612305,3.864036,1.428456,-6.046586,-5.798152,-6.570115,7.607323,9.759130,-5.150348,-8.744580,3.043082,-2.227667,-8.895789,-6.765617,6.465100,6.558424,-0.785449,-0.149663,-9.262054,0.766285,7.293168,5.735467,-4.261481,1.271602,2.029598,8.254207,6.987280,9.889282,-5.687604,-2.472388,-9.800624,8.463434,0.159434,-0.829943,-5.629596,-4.718720,8.431346,-7.134775,-7.644859,8.405036,-5.012257,-0.453844,-1.319866,8.171030,9.175352,-6.356223,7.570631,-7.761439,9.803621,8.632267,6.006155,1.496536,0.625400,-8.628775,7.337895,-1.914973,-8.674895,-2.289765,-6.882584,8.359717,0.528000,-9.797554,-6.300460,4.324857,8.724191,2.479720,-9.134724,-0.357157,8.749444,6.835987,-9.174434,-8.673450,-6.298342,9.568836,-8.111915,3.441945,-8.550380,9.935159,-3.179690,1.058584,7.974613,-6.202742,4.164113,4.643240,8.335627,-0.683915,-9.348087,-8.223127,9.299868,-0.396635,8.419159,2.506695,7.067057,-8.111268,-9.181504,9.641168,-1.139223,9.853729,-8.822536,-0.283628,-9.765494,1.381043,4.684962,5.908475,4.489116,8.404254,5.099057,3.586534,4.433357,6.269228,6.820770,1.278625,-1.034979,6.307419,1.344916,7.703788,-6.077815,0.695556,-0.398062,-0.058524,-1.181435,-7.258616,3.687668,-5.349480,8.005023,-3.770742,-8.365043,0.024524,-4.677625,-8.998896,-2.281818,0.458195,-9.123713,9.529266,-8.201942,4.602101,5.949563,-7.316018,6.323315,1.455556,-9.174394,5.322120,0.870398,-4.897016,8.401464,8.520629,-7.948225,3.030049,7.890790,1.940640,-4.049121,-6.232096,4.534953,-3.976104,8.129908,1.681918,2.459612,4.670791,5.717998,1.859659,-2.916383,8.721610,1.229768,5.227928,4.850377,-3.978731,5.716009,2.524525,-6.593489,4.125715,6.331154,0.143188,5.287991,4.640015,-0.790992,-0.481602,1.214651,4.304354,-5.895116,-5.369707,-3.649627,0.333485,6.578950,-8.565828,5.494258,-2.023689,-2.991796,8.569471,-4.821280,1.330795,8.531350,9.722155,4.246715,-1.877528,5.793271,4.601163,7.148100,-2.842720,1.473403,-1.116988,-1.054281,7.158541,3.724431,9.514807,9.042869,-2.472373,-4.548204,5.072743,5.254088,9.249497,-6.041259,-1.390527,7.705466,4.013037,9.188022,2.048266,-4.513813,-0.879125,-2.341006,2.827082,-5.236784,-7.504394,8.435906,-1.026244,6.202947,6.280129,-3.451533,-9.708202,-6.670951,-8.002834,9.181977,-7.984494,-1.668886,9.896647,-7.016874,-5.666308,0.822945,7.330548,8.551290,3.964028,3.235840,-3.179496,-4.966688,4.319919,-8.792544,-6.504733,-5.135857,8.264054,9.819681,6.188070,6.328766,3.333612,-4.027577,0.032266,-8.373725,3.095337,-2.425217,-8.312504,-5.846721,6.127013,9.238146,-6.258181,-4.959946,5.414927,0.504215,2.158392,-8.168808,5.905916,7.874224,-2.272940,0.497759,5.648380,-6.008419,-0.881198,-1.828587,3.172356,9.725528,6.250725,-9.944187,8.601656,3.358936,-4.325474,6.613300,-8.052366,8.952260,7.399451,-3.270274,-7.747086,-9.896894,1.377785,-2.493241,-4.765220,3.397295,-6.378399,-6.392054,1.008282,-4.853499,-6.608537,4.290186,0.467823,7.878830,4.581808,1.069115,-3.569686,-5.776648,-1.928780,6.198983,-1.604745,-9.425611,-6.350575,-4.435703,-5.169278,9.064184,5.484707,-8.543645,4.100667,1.774875,4.700373,-1.925683,-0.152489,-4.743588,-7.573614,3.536134,-6.462381,1.074025,4.608914,-5.747164,-9.841599,-6.195232,-5.883054,-9.798862,-2.126931,-4.708451,5.290797,-9.905435,5.296840,-9.176150,-6.436658,-7.902081,-4.566045,1.541376,7.929425,7.395497,9.346505,4.754665,-0.433339,-7.782878,0.016383,2.889801,1.347961,-4.408504,-8.574350,-4.368004,1.065805,2.311712,-4.169522,8.806441,-0.763041,-8.050000,-8.148417,1.773780,5.056344,5.932041,-2.739100,2.630419,-3.989458,-2.422174,4.393209,7.960197,0.857618,-3.637360,9.157947,3.291239,-1.724762,-5.256584,-1.202518], dtype = "float32")#candidate|7193|(630,)|const|float32
call_7191 = relay.TupleGetItem(func_6734_call(relay.reshape(const_7192.astype('float32'), [1053,]), relay.reshape(const_7193.astype('float32'), [10, 63]), ), 2)
call_7194 = relay.TupleGetItem(func_6737_call(relay.reshape(const_7192.astype('float32'), [1053,]), relay.reshape(const_7193.astype('float32'), [10, 63]), ), 2)
output = relay.Tuple([uop_7152,call_7191,const_7192,const_7193,])
output2 = relay.Tuple([uop_7152,call_7194,const_7192,const_7193,])
func_7209 = relay.Function([var_7122,var_7123,], output)
mod['func_7209'] = func_7209
mod = relay.transform.InferType()(mod)
mutated_mod['func_7209'] = func_7209
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7209_call = mutated_mod.get_global_var('func_7209')
var_7211 = relay.var("var_7211", dtype = "int8", shape = (15, 3, 7))#candidate|7211|(15, 3, 7)|var|int8
var_7212 = relay.var("var_7212", dtype = "int8", shape = (15, 3, 7))#candidate|7212|(15, 3, 7)|var|int8
call_7210 = func_7209_call(var_7211,var_7212,)
output = call_7210
func_7213 = relay.Function([var_7211,var_7212,], output)
mutated_mod['func_7213'] = func_7213
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5915_call = mod.get_global_var('func_5915')
func_5916_call = mutated_mod.get_global_var('func_5916')
call_7218 = relay.TupleGetItem(func_5915_call(), 0)
call_7219 = relay.TupleGetItem(func_5916_call(), 0)
func_4497_call = mod.get_global_var('func_4497')
func_4500_call = mutated_mod.get_global_var('func_4500')
call_7220 = func_4497_call(relay.reshape(call_7218.astype('float32'), [8, 15, 9]))
call_7221 = func_4497_call(relay.reshape(call_7218.astype('float32'), [8, 15, 9]))
uop_7229 = relay.log10(call_7220.astype('float64')) # shape=(8, 15, 9)
uop_7231 = relay.log10(call_7221.astype('float64')) # shape=(8, 15, 9)
output = relay.Tuple([call_7218,uop_7229,])
output2 = relay.Tuple([call_7219,uop_7231,])
func_7232 = relay.Function([], output)
mod['func_7232'] = func_7232
mod = relay.transform.InferType()(mod)
mutated_mod['func_7232'] = func_7232
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7232_call = mutated_mod.get_global_var('func_7232')
call_7233 = func_7232_call()
output = call_7233
func_7234 = relay.Function([], output)
mutated_mod['func_7234'] = func_7234
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6363_call = mod.get_global_var('func_6363')
func_6365_call = mutated_mod.get_global_var('func_6365')
call_7235 = func_6363_call()
call_7236 = func_6363_call()
func_4654_call = mod.get_global_var('func_4654')
func_4656_call = mutated_mod.get_global_var('func_4656')
var_7253 = relay.var("var_7253", dtype = "float64", shape = (1120,))#candidate|7253|(1120,)|var|float64
call_7252 = relay.TupleGetItem(func_4654_call(relay.reshape(var_7253.astype('float64'), [8, 10, 14])), 2)
call_7254 = relay.TupleGetItem(func_4656_call(relay.reshape(var_7253.astype('float64'), [8, 10, 14])), 2)
var_7273 = relay.var("var_7273", dtype = "float32", shape = (8, 15, 9))#candidate|7273|(8, 15, 9)|var|float32
bop_7274 = relay.power(call_7235.astype('float64'), relay.reshape(var_7273.astype('float64'), relay.shape_of(call_7235))) # shape=(8, 15, 9)
bop_7277 = relay.power(call_7236.astype('float64'), relay.reshape(var_7273.astype('float64'), relay.shape_of(call_7236))) # shape=(8, 15, 9)
var_7278 = relay.var("var_7278", dtype = "float32", shape = (624,))#candidate|7278|(624,)|var|float32
bop_7279 = relay.floor_mod(call_7252.astype('float64'), relay.reshape(var_7278.astype('float64'), relay.shape_of(call_7252))) # shape=(624,)
bop_7282 = relay.floor_mod(call_7254.astype('float64'), relay.reshape(var_7278.astype('float64'), relay.shape_of(call_7254))) # shape=(624,)
output = relay.Tuple([var_7253,bop_7274,bop_7279,])
output2 = relay.Tuple([var_7253,bop_7277,bop_7282,])
func_7285 = relay.Function([var_7253,var_7273,var_7278,], output)
mod['func_7285'] = func_7285
mod = relay.transform.InferType()(mod)
mutated_mod['func_7285'] = func_7285
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7285_call = mutated_mod.get_global_var('func_7285')
var_7287 = relay.var("var_7287", dtype = "float64", shape = (1120,))#candidate|7287|(1120,)|var|float64
var_7288 = relay.var("var_7288", dtype = "float32", shape = (8, 15, 9))#candidate|7288|(8, 15, 9)|var|float32
var_7289 = relay.var("var_7289", dtype = "float32", shape = (624,))#candidate|7289|(624,)|var|float32
call_7286 = func_7285_call(var_7287,var_7288,var_7289,)
output = call_7286
func_7290 = relay.Function([var_7287,var_7288,var_7289,], output)
mutated_mod['func_7290'] = func_7290
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5449_call = mod.get_global_var('func_5449')
func_5451_call = mutated_mod.get_global_var('func_5451')
call_7312 = relay.TupleGetItem(func_5449_call(), 0)
call_7313 = relay.TupleGetItem(func_5451_call(), 0)
func_2870_call = mod.get_global_var('func_2870')
func_2874_call = mutated_mod.get_global_var('func_2874')
const_7318 = relay.const(9, dtype = "uint32")#candidate|7318|()|const|uint32
const_7319 = relay.const([6,-1,8,-7,-2,-6,-5,6,6,9,5,4,2,-5,-5,-8,-2,-9,4,-9,-5,1,-9,-1,4,-9,-9,-4,3,3,-10,9,10,10,-4,-2,-7,2,9,-3,3,-2,2,-5,-5,-3,9,-7,-9,-5,-8,-5,10,-3,3,2,5,-10,9,-2,-6,-1,6,-6,-7,-2,-7,-1,6,-6,9,5,-1,1,-10,6,9,-1,-7,3,-9,10,4,5,-5,-9,8,-8,-6,-10,-3,4,-6,-8,3,7,-6,8,-8,10,-3,-10,10,9,-7,6,-5,-4,5,-4,-1,10,9,7,-10,-3,-7,-3,10,-5,-9,9,-3,-5,-2,7,-1,3,5,-9,1,10,-4,-5,3,1,2,5,2,-4,-10,-2,-7,3,6,-9,-4,5,1,2,9,-5,-5,6,2,-4,10,3,2,1,8,7,8,1,1,1,-9,10,-1,-1,-8,-5,-2,8,-4,4,-7,-7,-2,-2,2,-2,4,-4,2,-5,-4,-9,-9,-2,5,9,8,7,-4,4,4,8,-10,2,2,2,-2,-4,-9,-5,4,-6,-10,4,-2,2,4,6,6,6,9,-4,1,1,-8,-4,-2,7,-3,-8,9,3,-1,7,-10,5,-1,10,1,-3,10,1,8,-6,9,6,-3,9,-7,-3,-9,6,-9,3,-10,7,4,3,-6,-4,4,-10,8,-3,8,-2,4,9,6,3,8,9,-10,5,3,10,9,4,-1,-2,5,-6,-4,4,8,-8,-1,-10,9,-6,7,10,6,-5,5,6,3,-10,-8,7,-4,-4,-1,-6,2,-5,-6,8,2,-8,1,6,-5,-1,3,-1,-4,-1,-9,-9,9,-3,2,-8,5,1,8,-1,8,-8,-1,-7,3,-2,-5,5,-7,-10,2,-3,-1,-4,-6,6,7,2,-2,-3,-8,-9,-7,8,7,-3,5,-5,-2,7,-1,1,-6,6,-3,7,5,6,-2,-4,-2,7,4,-6,-8,6,8,9,-2,6,-3,9,-8,-8,9,1,-2,1,-8,-2,-1,-8,-6,5,-2,-3,3,-3,-7,3,-6,7,3,-3,6,9,-4,8,-6,5,-5,2,-10,-1,7,-3,10,-10,10,6,-9,-5,4,10,-10,5,-5,3,4,-4,-10,6,9,-3,-9,6,5,-10,7,-8,-7,2,2,9,1,-8,2,-3,10,-1,6,-9,-9,10,3,4,-1,-3,-4,-8,8,10,-10,1,8,10,-9,2,10,-7,10,-2,-10,3,-7,-2,6,7,2,7,1,-3,6,10,9,-8,1,-9,5,6,2,-9,10,6,3,4,-1,-4,-6,3,-6,-4,9,7,-5,5,2,8,9,6,7,8,10,-5,8,2,6,-10,-3,-8,1,8,9,-7,-9,-2,4,-6,-4,1,-8,-6,2,1,5,4,5,1,-5,4,-1,4,-8,2,-3,4,5,-8,-7,2,10,-10,-5,1,-9,-6,3,8,10,1,-2,-5,-4,5,1,3,-1,-6,-6,-8,4,-7,-4,8,4,9,4,-4,8,10,-5,1,-8,4,-6,8,8,6,-2,-8,-4,6,-1,-6,8,-8,-9,-2,-8,2,1,-5,-7,1,-5,-10,5,7,-4,7,-9,8,-4,6,9,7,7,-8,-4,6,9,-10,-9,4,-2,-7,4,8,6,-1,1,4,1,-2,3,6,-1,-10,-5,-4,-3,-7,-8,4,-10,-10,4,-7,-8,-10,5,4,-4,6,7,8,3,-7,-2,-7,-10,3,1,-9,-9,9,-6,-9,7,4,7,4,-9,3,5,-4,-4,-9,7,3,6,9,3,6,3,-6,2,-2,-2,-4,4,-4,-7,5,-8,9,8,-9,5,-3,-7,-1,-10,2,8,10,4,-10,4,4,-4,9,-8,-5,6,-1,8,2,5,-1,-9,-4,-5,-3,-2,5,9,-9,2,2,-3,-9,-7,10,-4,-4,2,-6,-6,7,6,-3,-4,2,6,4,-6,-2,-3,-6,1,-9,-10,1,-4,2,-8,2,7,10,7,3,-8,-8,-7,-7,4,3,-3,-10,1,-6,8,5,-2,-1,10,6,-10,8,-9,-6,-2,-9,-3,3,-2,5,5,-7,6,9,3,3,-10,-1,-5,-3,7,-6,-2,4,-6,-4,-8,1,3,9,3,-1,10,-3,-10,6,8,-6,8,4,9,-8,-1,1,7,9,-2,7,2,-9,-6,-10,6,7,-7,10,1,5,5,7,7,-5,6,-1,2,3,-4,2,-8,-3,-10,-1,1,2,-3,9,4,-9,6,3,1,-3,6,4,-6,6,-2,-8,4,-8,-10,-7,10,7,7,1,-3,-4,2,2,6,6,9,-8,4,10,-2,-8,-4,-6,4,-10,2,7,-1,-3,-9,5,-1,-10,9,-8,-8,3,1,2,9,-4,5,6,-2,-3,6,-10,-10,-1,-10,-2,-5,-10,-6,-4,8,7,-3,1,2,8,-1,6,-1,-4,7,-1,3,-3,-6,6,-6,7,-6,7,-2,7,-5,7,-9,7,7,10,-9,-10,9,9,9,-7,4,-2,-10,2,-1,1,1,7,6,-9,10,2,-5,7,8,-8,9,-1,-10,-4,1,10,3,-10,-5,-6,8,6,-10,7,8,-10,-7,8,3,10,-7,-6,10,-9,-4,-9,4,6,-8,-2,8,5,-5,5,-5,2,7,-2,5,-9,-6,-3,-4,4,2,10,10,-5,8,-2,7,5,-3,9,8,-7,10,7,-9,-8,9,-8,5,7,-7,8,-5,8,-2,6,-8,-8,-4,-2,8,-3,10,-7,9,10,-4,-10,3,-7,-8,7,-9,-4,-10,8,-8,4,-2,-3,-6,7,-3,-9,6,3,10,-9,5,-3,-2,4,10,8,-10,5,3,-5,10,5,9,-1,8,-9,-5,-9,-1,-5,-10,5,3,7,1,-4,-6,-8,-7,-8,-6,7,9,-8,-10,3,5,3,9,6,1,-2,9,6,6,-10,-10,6,6,2,-7,9,5,10,1,4,7,3,-4,3,-2,2,1,-3,-2,-4,-2,-10,2,-8,7,-5,6,2,6,9,10,3,-1,-10,-3,-3,5,9,5,-10,-9,-9,-4,6,8,-9,-9,2,1,3,6,9,9,-9,-9,-9,6,5,10,-2,-7,9,-5,5,4,-10,-4,-2,-10,9,9,-8,-3,5,-4,-2,-9,-6,3,-10,9,-7,-10,-10,-9,-8,5,5,8,-3,-8,3,7,10,3,9,10,7,-7,10,5,8,5,8,-3,6,-6,-9,-10,-5,10,5,1,2,8,-6,10,-3,-7,-10,3,-4,-5,-4,-5,-8,-2,-7,-4,1,-10,6,-10,7,-1,-10,1,3,-8,-2,5,-7,2,2,-10,-9,1,-10,-4,10,4,-10,-1,-2,2,-1,-4,6,2,-4,-10,-3,-10,-1,2,2,9,-10,6,1,-7,-5,-1,-9,-6,5,5,6,-3,-2,8,2,5,-10,-5,9,3,3,4,7,4,-5,-10,-6,7,1,-3,5,-6,-1,7,-2,-3,-8,-6,8,-7,-1,-3,1,7,7,6,8,-10,10,8,-10,7,-1,-3,3,1,8,-2,-5,-2,9,-8,-7,-7,-6,8,-7,5,8,-6,-7,-4,10,-3,-7,9,2,-4,-6,5,7,7,8,1,-10,-6,3,-4,-10,-7,-4,4,6,5,10,-3,5,10,-1,-1,9,10,9,-4,-2,7,-9,-10,-10,6,-6,8,8,5,10,-10,3,-10,5,3,-5,1,-1,1,-7,3,4,5,9,1,5,-2,-3,-1,8,-6,-4,9,10,-9,4,2,-3,-2,-6,4,4,10,-8,-8,6,-1,10,8,-7,1,-8,3,-2,4,8,1,-5,3,-3,2,-2,-4,3,4,-8,5,-8,7,-3,-9,-10,5,1,-1,-7,-8,5,3,3,-10,-2,6,3,-1,-4,-7,1,10,-2,-10,3,9,-9,8,10,10,-2,4,-10,2,-7,8,3,-4,10,-3,2,-3,-4,3,-10,8,1,-7,-10,5,-10,-7,-3,-5,5,-6,-9,9,1,-1,-7,2,4,-1,10,4,-8,-2,-2,-4,6,5,10,-1,6,-3,-3,-2,-6,-9,-8,-8,-4,9,-7,4,-6,9,2,6,-3,4,-4,1,9,10,-5,-8,-1,6,2,1,8,4,1,-2,1,-10,-2,8,-3,1,-7,8,5,-5,-5,-5,-8,4,10,-6,2,7,9,5,4,-3,-4,8,-6,-6,-1,3,-3,1,-5,-6,6,-10,9,-8,-1,5,-1,-5,-7,-7,4,-10,-1,10,-1,-2,2,-4,7,-5,3,4,-2,-1,9,-1,-8,-10,5,4,8,3,-7,-10,-8,-3,-4,5,3,7,1,-7,-9,9,-8,-10,-10,8,-1,-4,-3,10,-5,5,10,-1,10,-2,-4,-2,8,3,-8,-9,-1,-8,1,4,-2,3,-1,-2,2,-9,-9,-3,7,-4,8,2,8,6,9,-5,-8,-2,5,-9,2,-5,1,5,-5,10,2,-3,-3,10,-8,4,5,5,2,7,4,-2,-2,-2,7,8,-8,-2,9,-5,-6,3,5,-3,3,-10,2,1,-10,-10,-9,-8,9,-9,1,5,1,1,5,-4,4,5,-7,-9,-1,5,7,-6,3,-7,9,4,-10,-7,-8,5,-6,-7,9,3,-5,10,2,-10,-1,-1,-9,-2,9,5,-2,-9,-1,3,-2,-9,-5,-3,-5,5,-10,-8,-1,-5,2,10,-2,-4,5,2,4,-6,-2,-7,2,5,-6,10,-5,-10,6,-3,-8,1,2,1,-7,-4,-6,8,-3,-1,-7,-8,5,-1,9,9,-1,-1,6,-1,-8,3,-6,-5,5,-9,6,-7,7,-4,-4,-6,-5,-7,8,3,-3,-4,-7,-9,5,-7,5,-4,3,-9,-2,3,-1,-8,8,-6,10,-1,9,1,8,-6,3,-5,9,5,-10,-1,-9,-1,4,10,-5,3,3,-7,4,-3,-5,-3,-6,-8,-5,9,-1,10,6,-9,3,7,8,6,-9,-8,9,9,-8,-2,-7,6,1,-5,-8,-10,-8,6,10,7,10,4,-5,-7,-1,7,-9,-7,-10,7,-7,-10,1,1,5,5,-5,7,3,4,-2,-3,3,3,-4,-5,7,-6,-1,-4,-6,4,-5,3,4,3,6,8,7,7,2,-4,5,-9,-8,-5,-9,8,-9,-3,6,-10,3,-6,-1,-4,2,2,-8,6,-2,-10,9,7,9,-2,8,-9,-1,-3,-7,3,-7,-9,-8,10,-7,2,-10,-3,-9,-4,-6,-7,-2,-9,-9,10,-9,-10,-5,6,-3,-7,7,2,4,2,2,9,2,-3,-10,9,-2,-6,-1,9,3,7,-4,6,6,2,-1,-2,-8,-6,-5,-10,3,-4,-10,-6,-6,3,-3,-2,8,9,-4,2,3,2,2,3,-10,8,9,-5,1,7,-8,5,2,5,2,-9,7,10,-7,-5,-1,9,10,-7,1,-5,2,4,3,-1,1,9,-3,-9,6,-9,8,-9,1,1,9,-10,-7,6,-6,-6,-8,6,6,4,-1,10,-1,10,-6,-6,7,7,-2,6,1,6,-7,-3,-10,-4,7,2,5,-10,5,6,-3,7,-6,-3,3,8,-4,2,5,-6,-9,2,2,-3,-9,-8,1,-6,-8,-6,10,10,3,9,7,-2,-4,10,-6,3,-3,-8,6,-1,-2,-5,9,8,7,-1,5,-1,-6,6,-6,-9,-10,3,-10,-10,1,7,-1,1,-6,-10,-6,9,2,5,-4,8,3,10,6,-6,-5,7,9,4,2,6,5,-9,-1,-6,3,9,-5,-7,-10,6,-7,-3,-2,-2,1,2,5,6,10,-3,7,-6,2,1,-6,9,-3,2,9,2,3,-7,-7,-4,-4,7,10,4,-7,-6,-6,-10,9,-4,5,-2,10,-7,-2,-2,-10,8,4,-4,8,8,8,3,-8,-8,3,-1,9,9,-9,-10,2,10,1,-7,-7,3,2,3,-10,-1,2,5,-10,-5,-7,-1,-4,-5,7,3,8,7,9,10,-2,-4,4,8,-6,-4,-7,-4,-6,-3,2,6,2,-1,-5,2,-1,4,10,9,6,-10,10,3,2,8,-3,-5,-10,-6,5,-6,6,2,-3,-1,8,-1,5,4,-9,-3,-9,-7,-5,5,3,-6,3,-7,3,-5,-1,-7,10,8,-4,-2,-9,1,4,-4,9,-9,10,-9,6,-3,-2,-7,-2,2,4,-10,-4,7,-8,6,10,10,-1,-4,4,-6,-10,9,-6,9,-8,2,-9,-2,9,6,5,-9,6,-3,-3,-9,2,4,-8,7,-1,9,-8,-10,-9,6,4,-10,3,3,2,6,7,-1,2,-2,-7,-6,2,-3,2,-6,-9,7,2,5,-9,10,-2,2,9,8,6,4,-7,10,-8,-6,-5,-6,-10,-10,3,-6,1,10,5,-7,-1,-1,-7,10,7,2,-8,8,-1,-8,10,-1,3,2,-7,-8,-9,-9,-10,-2,4,1,-4,9,-9,2,-2,-10,-2,4,3,-2,-3,-9,-9,-1,4,-6,-1,4,5,-9,8,-1,-4,-2,6,-9,4,-1,-8,-9,-2,-3,-3,3,4,2,-3,-4,7,-4,-1,-2,-1,-1,3,3,6,-10,-2,4,5,10,2,-5,-10,-4,3,8,-8,5,7,-9,-4,2,2,-4,6,4,-7,-5,-1,-10,4,2,-6,-5,5,-8,5,-4,7,-5,-3,-9,2,-9,-4,9,6,-1,-8,-5,-4,-9,4,7,3,-2,-1,-7,8,5,-5,-1,-8,3,-1,-7,3,4,-1,-9,-1,3,6,6,-3,6,-9,-1,7,1,4,3,-5,-7,5,5,10,1,-5,8,2,-10,-8,8,-4,-5,8,-8,-2,3,4,5,-5,8,5,-2,1,-8,10,8,4,4,1,6,8,3,7,-6,4,2,3,6,5,-4,-9,-1,-4,-6,-9,-10,-2,-1,-1,-1,2,-6,-7,-6,6,7,10,10,-3,1,-1,-8,-4,-1,-5,-9,4,-1,-8,5,-7,-1,10,-5,2,-4,-8,3,3,-6,4,7,-9,-3,5,2,8,-1,7,-3,1,-1,4,-3,-7,7,-2,-1,1,1,2,8,-7,10,4,-4,-3,-7,6,-3,-7,-4,3,4,-1,-1,-6,-3,-1,-8,6,-1,-4,3,-8,-5,-5,6,8,5,4,-2,-9,5,6,5,5,9,6,-1,8,-9,-9,-4,-4,-6,-7,9,1,-5,7,-9,8,10,-1,8,1,6,-4,-4,-9,7,7,1,-9,-7,6,7,-7,8,1,9,5,9,8,-8,-4,-3,10,-10,-10,-7,4,-10,4,9,6,-7,-5,-10,2,10,-2,8,6,-5,7,-3,-6,4,-3,-5,-2,1,1,-2,9,8,6,-7,5,9,4,5,-6,-1,-1,-7,-1,4,-10,-4,10,-4,9,9,3,-8,-1,-8,3,4,-8,-10,-9,-2,1,-10,9,7,3,-5,-3,5,7,9,-3,-7,5,-1,-10,-3,-10,-1,-7,10,-2,8,8,-9,7,9,10,10,-1,-2,-5,-1,-10,-3,-1,-6,-7,-10,6,-4,-7,2,6,5,-4,-8,3,-3,4,-9,8,-9,10,2,9,10,8,5,5,-1,8,7,9,-6,5,-7,1,-9,-5,6,8,10,-7,10,-7,-8,-8,-6,-2,-9,8,-9,2,-7,-3,-3,-8,-7,-7,4,5,9,-8,2,7,-8,-9,-1,6,-10,-2,10,-5,4,1,8,-1,-1,1,-8,7,3,-4,-9,-4,-9,-1,6,-5,1,-10], dtype = "uint32")#candidate|7319|(2912,)|const|uint32
call_7317 = relay.TupleGetItem(func_2870_call(relay.reshape(const_7318.astype('uint32'), []), relay.reshape(const_7319.astype('uint32'), [13, 14, 16]), ), 1)
call_7320 = relay.TupleGetItem(func_2874_call(relay.reshape(const_7318.astype('uint32'), []), relay.reshape(const_7319.astype('uint32'), [13, 14, 16]), ), 1)
var_7329 = relay.var("var_7329", dtype = "uint32", shape = (2912,))#candidate|7329|(2912,)|var|uint32
bop_7330 = relay.add(const_7319.astype('int64'), relay.reshape(var_7329.astype('int64'), relay.shape_of(const_7319))) # shape=(2912,)
var_7333 = relay.var("var_7333", dtype = "float32", shape = (2, 4, 12))#candidate|7333|(2, 4, 12)|var|float32
bop_7334 = relay.add(call_7317.astype('uint32'), var_7333.astype('uint32')) # shape=(2, 4, 12)
bop_7337 = relay.add(call_7320.astype('uint32'), var_7333.astype('uint32')) # shape=(2, 4, 12)
func_1988_call = mod.get_global_var('func_1988')
func_1990_call = mutated_mod.get_global_var('func_1990')
const_7343 = relay.const([7.914597,-1.263459,-0.836783,-8.231947,0.117204,-8.648772,-2.140622,-6.920205,2.042491,2.903511,6.808465,9.611933,-6.587455,-0.015017,-7.095073,-9.304843,-2.670894,1.366167,6.717611,-1.680058,-3.864293,-4.206789,-9.871862,9.979005,-9.008062,-1.278497,7.799458,2.766670,-5.492707,-5.570238,-2.223385,-0.258744,9.285897,1.087450,5.774651,3.585219,-0.668679,-5.559697,-6.140248,3.446558,-0.890003,6.484582,2.244291,-9.374572,-9.150559,7.701244,6.861132,-3.874404,2.922630,0.669960,8.036587,-2.746967,9.307295,-0.084184,6.073319,-7.563682,5.962035,2.864583,-2.527140,-4.804689,-0.973940,5.802100,6.200410,-2.267745,-4.782580,-1.325439,1.421374,0.293456,9.412313,-6.028377,9.043144,2.888322,-7.660745,-6.351347,-9.082498,-9.488537,-0.191208,-9.462605,0.668062,-4.393937,-7.258789,8.062272,-4.469968,-1.300596,-1.037361,-8.152921,3.895544,-6.614160,-5.688464,8.139683,-0.984288,-4.326054,3.115869,-8.381063,8.529218,-9.288515,9.473861,3.129526,7.557945,-6.925304,0.902756,5.202163,-4.713901,-9.373616,-9.610022,6.631267,5.632263,3.035418,-7.002956,7.628133,6.370658,4.447359,2.151796,-4.880537,3.146271,-0.560217,0.785648,4.367439,-5.611881,-9.465615,2.682262,4.733617,9.871717,-5.255158,-7.668703,-3.297004,5.229207,2.443558,-9.790653,0.596771,-7.042822,-5.677053,-1.333024,5.448028,-8.294208,9.493196,0.689120,-6.035988,-4.196711,-5.379857,3.369160,-1.978320,-4.937110,9.862208,7.240604,-2.789028,9.344999,3.459841,4.262644,-7.696955,-8.841463,8.244550,-0.041761,8.504886,-8.634058,2.085976,-5.934195,4.708261,7.208912,4.891697,7.333946,-6.376875,3.653111,-0.677597,-5.305158,-9.213090,5.021843,-5.245061,6.788001,-9.601854,5.894690,9.905253,4.686244,7.240456,-6.746676,7.152201,-8.766156,-2.423205,0.875438,-9.967915,0.268847,-6.448045,6.221723,-7.214345,-6.150545,-4.988493,-4.958478,3.585818,-4.819948,7.756250,-0.198090,0.773755,-0.480692,-1.432000,-0.221467,-6.854809,0.657028,-2.639598,7.599800,2.682094,6.747075,-5.876916,-4.232188,8.585320,-1.504233,3.519799,1.328339,6.265868,-2.707890,4.204435,7.549277,-0.536456,0.471239,9.712914,8.481143,-8.316311,-0.900614,-7.738904,7.754719,-1.617041,-1.278582,-9.072228,-6.821557,-0.369009,3.614554,0.053420,0.534106,4.317812,8.532819,0.909699,7.859042,5.873766,-7.948039,-1.093389,-9.051672,3.286189,-2.821115,-4.285049,-6.331322,0.239264,4.708858,-7.562341,-2.448436,1.281915,-7.005778,-9.689635,-2.651360,8.415077,-0.826651,-2.923803,-2.767922,2.258404,8.957917,6.481557,-7.788007,9.297263,-0.449178,-5.924478,3.793893,-4.585402,9.115378,-0.009680,-8.189506,-4.154949,3.219065,0.927309,3.409452,5.635685,8.204285,-7.677708,0.726314,5.568730,1.574296,2.014729,9.786370,-6.868045,-9.168502,-7.949368,-3.963130,3.020145,-4.923663,-8.601521,-0.143109,-9.638196,-0.462196,7.916263,6.554967,6.393478,2.655700,5.777728,-8.295305,3.613036,-7.135797,-6.104401,-5.078868,7.009698,-2.025327,-8.549142,2.874815,-1.653482,7.892778,3.271504,-5.587135,1.013117,2.163509,-6.176034,-5.132469,6.635659,-4.820462,-9.384464,4.252991,9.068311,4.248149,-0.168293,-0.602265,-9.691602,4.669963,-3.360944,6.005576,6.903048,9.160196,-4.653423,5.976159,-7.687171,1.636383,-4.489753,-7.319486,5.242525,-3.236647,-0.537295,-0.046219,-3.565199,6.500736,-5.047758,0.757549,8.239957,8.557882,-4.596640,0.736795,-9.928339,9.017434,-5.616049,-2.600784,5.150332,0.564214,-9.246407,5.782459,3.892486,7.403714,4.740618,6.133302,5.855846,-5.619409,7.050545,0.005669,1.577510,9.526315,-3.520006,1.509123,-1.189945,-5.979221,-7.202760,3.646794,-8.877276,1.883904,1.484628,-9.740061,-0.507228,2.729380,9.130784,2.257808,2.249570,-5.640052,8.052590,-2.110001,-8.332563,-6.622524,-9.805253,8.631941,-5.346284,-7.798275,2.295006,3.967368,4.034762,-1.528020,4.408200,2.845105,-1.800173,-8.233300,8.629420,0.664981,5.728018,6.002709,0.928638,-7.509572,8.543179,-4.284744,-6.881906,-2.749069,-5.176637,-4.723056,6.521746,-6.830071,1.323589,1.896248,3.405647,-1.026843,-3.109530,-5.877335,-9.258361,0.742065,0.634408,7.554125,6.926713,-4.739789,-0.197322,3.764404,-6.428027,5.752439,3.713667,6.147358,6.676327,4.983482,9.777308,7.720080,6.574108,6.874850,-1.367143,-8.692823,8.143314,9.633303,0.844439,8.010449,7.066211,8.460512,4.863563,9.189212,-0.570660,-9.598986,7.425674,-4.719438,-4.651845,8.025077,-4.466315,1.325199,-8.780260,1.009234,4.048814,-0.655538,2.350863,9.148789,-2.721719,1.935075,-1.466950,-0.949334,6.875756,-9.062221,-9.511716,0.593760,5.418610,-4.451787,9.397778,2.098276,-1.701728,3.551309,2.481432,-6.108935,-4.852181,-9.039864,1.427838,-5.122541,0.383424,3.056197,-8.483320,-7.067036,0.036891,-6.914720,-7.390270,8.007383,8.632061,-4.295573,-2.212736,-8.721738,-8.367661,6.471326,4.272413,3.647872,-0.578574,-7.399617,7.770640,-2.081437,-7.043808,9.765807,-3.622597,1.455537,-8.704775,-8.126645,8.708040,7.985482,4.423643,7.864118,-5.201212,-8.108942,3.624499,5.808653,9.978997,6.766653,-6.321721,4.455602,-5.176601,-8.312889,-0.908216,9.376247,4.898573,-8.411452,2.212916,0.539862,-3.946542,-1.444612,2.716861,-8.800030,2.529031,-6.110399,-3.444720,-8.461741,-1.250994,0.880311,0.069541,-1.875034,3.818261,6.407022,9.441900,-2.881350,-3.926449,5.308396,3.071235,0.174186,-0.682551,-5.946659,4.004595,6.643799,-1.890281,-0.119899,6.949027,-5.921156,7.464434,5.889824,4.700726,-4.340676,-1.685281,1.326991,8.784606,-8.876991,-0.866927,6.619492,7.684754,7.505762,2.624976,7.510237,0.120674,-1.078066,7.838064,0.106848,4.128301,6.453503,6.326477,5.545887,5.313246,-6.117322,1.242979,0.730149,-0.051730,-4.969659,-6.101553,-8.279873,4.055977,5.644956,-0.941284,2.278565,-2.765159,4.436792,1.043509,7.042153,-8.485409,-3.597960,7.179962,-8.853165,2.568928,4.308880,-5.010241,3.139117,-6.862660,4.012813,0.225590,2.039730,2.822492,3.345540,1.013774,8.812836,4.715524,2.513581,2.627595,-6.323152,-0.120726,-1.621942,-0.375074,5.748572,-0.473085,2.324054,1.862610,-0.237340,-0.425827,-4.469574,-0.103097,7.109576,1.562755,-0.903184,4.006951,2.530284,-2.440260,-0.148540,5.471143,-8.432132,-1.983153], dtype = "float32")#candidate|7343|(624,)|const|float32
call_7342 = relay.TupleGetItem(func_1988_call(relay.reshape(const_7343.astype('float32'), [12, 4, 13])), 0)
call_7344 = relay.TupleGetItem(func_1990_call(relay.reshape(const_7343.astype('float32'), [12, 4, 13])), 0)
func_921_call = mod.get_global_var('func_921')
func_923_call = mutated_mod.get_global_var('func_923')
var_7346 = relay.var("var_7346", dtype = "float32", shape = (2,))#candidate|7346|(2,)|var|float32
call_7345 = relay.TupleGetItem(func_921_call(relay.reshape(var_7346.astype('float32'), [1, 1, 2])), 0)
call_7347 = relay.TupleGetItem(func_923_call(relay.reshape(var_7346.astype('float32'), [1, 1, 2])), 0)
bop_7359 = relay.bitwise_xor(bop_7334.astype('int16'), const_7318.astype('int16')) # shape=(2, 4, 12)
bop_7362 = relay.bitwise_xor(bop_7337.astype('int16'), const_7318.astype('int16')) # shape=(2, 4, 12)
output = relay.Tuple([call_7312,bop_7330,call_7342,const_7343,call_7345,var_7346,bop_7359,])
output2 = relay.Tuple([call_7313,bop_7330,call_7344,const_7343,call_7347,var_7346,bop_7362,])
func_7364 = relay.Function([var_7329,var_7333,var_7346,], output)
mod['func_7364'] = func_7364
mod = relay.transform.InferType()(mod)
mutated_mod['func_7364'] = func_7364
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7364_call = mutated_mod.get_global_var('func_7364')
var_7366 = relay.var("var_7366", dtype = "uint32", shape = (2912,))#candidate|7366|(2912,)|var|uint32
var_7367 = relay.var("var_7367", dtype = "float32", shape = (2, 4, 12))#candidate|7367|(2, 4, 12)|var|float32
var_7368 = relay.var("var_7368", dtype = "float32", shape = (2,))#candidate|7368|(2,)|var|float32
call_7365 = func_7364_call(var_7366,var_7367,var_7368,)
output = call_7365
func_7369 = relay.Function([var_7366,var_7367,var_7368,], output)
mutated_mod['func_7369'] = func_7369
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4262_call = mod.get_global_var('func_4262')
func_4263_call = mutated_mod.get_global_var('func_4263')
call_7410 = func_4262_call()
call_7411 = func_4262_call()
var_7424 = relay.var("var_7424", dtype = "float64", shape = (8, 15, 9))#candidate|7424|(8, 15, 9)|var|float64
bop_7425 = relay.greater(call_7410.astype('bool'), relay.reshape(var_7424.astype('bool'), relay.shape_of(call_7410))) # shape=(8, 15, 9)
bop_7428 = relay.greater(call_7411.astype('bool'), relay.reshape(var_7424.astype('bool'), relay.shape_of(call_7411))) # shape=(8, 15, 9)
func_6818_call = mod.get_global_var('func_6818')
func_6820_call = mutated_mod.get_global_var('func_6820')
call_7431 = relay.TupleGetItem(func_6818_call(), 0)
call_7432 = relay.TupleGetItem(func_6820_call(), 0)
output = relay.Tuple([bop_7425,call_7431,])
output2 = relay.Tuple([bop_7428,call_7432,])
func_7443 = relay.Function([var_7424,], output)
mod['func_7443'] = func_7443
mod = relay.transform.InferType()(mod)
var_7444 = relay.var("var_7444", dtype = "float64", shape = (8, 15, 9))#candidate|7444|(8, 15, 9)|var|float64
output = func_7443(var_7444)
func_7445 = relay.Function([var_7444], output)
mutated_mod['func_7445'] = func_7445
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5095_call = mod.get_global_var('func_5095')
func_5097_call = mutated_mod.get_global_var('func_5097')
call_7457 = relay.TupleGetItem(func_5095_call(), 0)
call_7458 = relay.TupleGetItem(func_5097_call(), 0)
func_6656_call = mod.get_global_var('func_6656')
func_6658_call = mutated_mod.get_global_var('func_6658')
const_7475 = relay.const([-8,6,9,4,2,-1,7,6,6,1,-1,6,-9,2,-9,-2,-8,-8,-4,4,-4,-4,4,-10,-5,6,7,-2,4,8,9,-10,-8,-5,9,-8,-6,-5,2,1,-8,3,-8,6,7,5,3,4,-4,-4,10,-7,6,-7,9,6,-4,5,-4,-5,-4,-8,10,8,2,-8,-8,9,8,2,3,-5,9,-10,-2,3,-7,-4,-6,2,6,10,-6,-8,6,-10,-2,-5,-4,3,2,-1,-10,8,9,3,10,1,-4,-10,9,-9,-6,1,9,-7,3,-2,5,8,-9,-1,-4,-7,-1,9,9,-2,-2,7,8,-4,2,-5,-7,-10,4,9,4,-10,-5,5,-9,-8,-10,4,-9,-3,6,7,-1,-2,-8,6,-7,5,5,5,-6,7,-10,-6,-1,7,6,-3,-10,-5,7,10,-10,-5,6,-1,5,-8,6,1,4,-5,3,-7,-4,-3,6,3,8,-10,-10,-7,-6,-7,1,-2,-7,3,-4,4,5,-8,-9,-6,1,-1,7,-3,3,7,-7,8,3,-5,-4,-6,-6,-1,-5,4,-2,-6,-3,2,-8,-1,-6,-2,-2,10,6,6,-2,7,-5,5,7,8,10,-7,1,-5,9,-7,-4,7,-5,-2,-4,-4,3,8,-1,-10,-6,-9,-9,3,-2,8,-1,6,2,5,-10,-4,-8,-10,9,-10,-1,4,-3,-7,-9,-1,-4,8,-6,1,-2,8,7,1,-10,-1,-9,-10,-1,-7,3,-3,-6,4,-2,9,-10,-3,7,-1,4,9,-6,-8,-7,7,5,-9,-1,-7,8,6,-3,4,-5,-8,-6,4,7,9,7,3,6,-6,-5,-9,-9,10,5,3,-1,-1,-9,1,7,7,5,-7,-2,-9,6,-1,-2,8,-6,-9,3,6,-5,5,6,-7,3,-4,-8,5,1,-8,8,-2,6,-1,-1,10,-3,-9,8,4,1,8,2,-3,9,6,9,2,-1,-6,-2,-10,9,6,5,-1,-9,-8,-4,4,4,1,-9,-3,-7,-3,-3,-6,2,2,-3,6,3,2,4,-1,5,-6,-6,-7,7,-2,2,-5,-9,4,9,3,-3,-9,9,9,-1,-2,-5,-2,8,-3,1,5,-2,-3,10,-4,8,-3,-3,-3,-7,-3,-2,5,10,-10,-3,-2,-5,-9,-10,-1,-8,5,7,8,-3,-8,-8,6,-10,-1,-5,-7,8,7,-9,-4,3,8,9,5,1,-10,-6,-8,-5,7,-10,10,2,-5,8,-10,1,10,-8,-4,8,-7,-2,-1,2,9,-6,-1,8,1,-7,6,3,-10,3,-9,9,5,2,10,-6,7,8,10,6,-10,4,-1,-4,-9,6,-7,-5,6,-8,1,-5,-6,8,7,-7,7,4,2,10,4,1,-2,-4,6,-5,8,7,1,9,-9,6,2,7,-10,7,-4,-5,-7,-5,3,-1,-1,4,-4,-1,-3,-3,9,-9,7,-2,6], dtype = "uint32")#candidate|7475|(550,)|const|uint32
call_7474 = relay.TupleGetItem(func_6656_call(relay.reshape(const_7475.astype('uint32'), [550,])), 0)
call_7476 = relay.TupleGetItem(func_6658_call(relay.reshape(const_7475.astype('uint32'), [550,])), 0)
output = relay.Tuple([call_7457,call_7474,const_7475,])
output2 = relay.Tuple([call_7458,call_7476,const_7475,])
func_7479 = relay.Function([], output)
mod['func_7479'] = func_7479
mod = relay.transform.InferType()(mod)
mutated_mod['func_7479'] = func_7479
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7479_call = mutated_mod.get_global_var('func_7479')
call_7480 = func_7479_call()
output = call_7480
func_7481 = relay.Function([], output)
mutated_mod['func_7481'] = func_7481
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7526 = relay.const([[[4,-7,-5,-10,5,-7,-6,-8,5,1,8,-9,-5,8],[1,-5,1,7,1,3,9,8,-4,10,2,3,9,9],[-3,8,-2,-8,5,2,-3,3,-5,-7,9,8,-9,3],[5,3,-8,9,-2,-2,-2,-4,-9,5,9,-5,-1,10],[-4,-9,-7,-6,-1,-7,-1,1,-5,-8,-1,-10,-9,1],[-8,2,-5,2,3,-9,2,-7,-4,10,-5,-4,3,9],[1,-4,10,-2,8,9,9,-4,-5,-7,3,-8,6,-7],[10,-5,-7,-9,-6,3,2,-3,-1,5,10,-5,-9,-3],[9,-8,-5,9,1,-10,6,10,7,-2,-2,4,-6,7]],[[6,-2,10,-3,2,-7,-9,-9,10,6,5,-6,2,1],[3,-5,7,-3,7,2,-9,2,7,6,3,5,-7,-4],[-2,-8,2,3,3,8,3,9,10,1,-5,5,6,-5],[-2,3,6,1,7,1,10,-9,-9,7,2,-7,3,-6],[-3,-6,-3,-8,-10,-9,3,-6,9,-5,6,10,-10,-8],[8,-5,-6,-5,-10,10,-4,-9,-10,9,2,10,8,7],[-6,10,-10,6,-4,5,-3,-5,3,-3,7,-4,8,7],[5,-1,-1,-6,5,-7,2,4,6,-4,1,3,9,-9],[3,-10,-1,9,1,-3,7,7,1,-7,-1,7,8,2]],[[-9,-4,-6,-1,7,-1,7,-7,5,6,-7,4,-3,2],[2,1,-6,4,-1,-10,-8,9,6,-10,1,-6,8,-10],[10,-4,-7,-6,10,-4,-6,9,7,9,-3,-4,-6,7],[-2,-7,-9,7,-6,9,-2,6,9,-3,-5,-2,3,5],[8,-5,8,-1,3,-5,10,6,8,1,9,-8,6,5],[5,9,3,-2,-6,-10,-2,9,-10,3,6,9,-7,2],[-4,3,6,-3,-5,-9,-9,-1,7,-4,-4,-7,10,-8],[3,-10,-6,10,-6,8,-9,4,10,-10,5,4,-10,2],[8,-7,-1,-2,4,6,7,3,2,4,5,7,-8,1]],[[-3,-8,-6,-6,5,-3,-1,9,4,-4,1,8,-1,-6],[-7,9,-2,5,-5,5,10,-9,9,-1,-9,-9,2,-6],[4,4,-3,-5,1,2,-2,5,7,5,1,-8,10,3],[-5,-4,3,2,4,-2,7,2,3,1,1,-7,-3,-5],[10,-4,-8,-6,10,-8,3,-9,4,-10,-9,8,-9,4],[-7,5,-8,-4,9,7,8,-2,-5,-3,-2,-7,-4,-3],[-7,-4,-8,4,10,-2,10,8,7,10,3,-1,6,8],[-3,2,-7,-6,9,-1,-10,10,4,-9,-10,-3,2,-9],[-3,8,-7,-6,9,9,4,9,-3,-7,6,6,-6,-10]],[[4,-7,-8,3,-7,10,-2,6,-9,1,1,-8,3,5],[-4,10,-8,-5,1,-2,8,6,10,-6,-4,-8,-7,4],[-10,-1,-5,4,-7,-10,6,9,-3,-6,7,-10,10,-10],[6,-9,4,-3,-1,2,6,6,-3,8,10,-9,-5,-1],[-8,-4,-6,3,2,-9,-2,9,-3,10,10,4,-1,10],[-1,-4,4,3,10,-10,-1,3,7,9,-7,-8,8,-8],[2,-8,-10,3,-10,-4,2,3,10,-7,8,-9,-7,-3],[-8,6,2,4,-8,-6,3,9,3,-9,7,-3,3,3],[8,7,-10,5,-10,-2,6,-5,9,4,-7,6,-10,1]],[[1,-5,10,7,8,-2,3,-5,3,7,5,3,-4,-5],[9,10,-10,1,1,-1,-9,5,6,-10,1,10,-7,-9],[-3,-7,-2,4,-6,-5,-4,3,-9,5,2,6,-1,1],[-1,-10,9,-9,-6,7,10,8,8,7,-2,7,-8,-7],[-9,-8,3,7,5,4,-10,5,3,-6,-5,-2,-5,-2],[10,-3,-10,-1,7,6,3,5,-3,5,-4,-10,-4,-7],[-9,-4,-10,2,-6,-6,1,8,4,-9,-6,4,7,-10],[-6,2,7,8,4,9,3,6,-7,-9,-8,7,-7,3],[-5,-7,-9,8,-8,5,-6,-2,2,-4,10,2,-4,-1]],[[2,-6,-4,-9,3,-3,4,1,-4,9,-2,-7,-6,2],[7,-2,-7,5,-3,-6,-2,7,7,-5,4,-9,7,-9],[-4,-5,-6,10,-7,-5,-1,-7,2,-10,4,3,1,4],[-7,-3,6,4,6,5,10,6,-3,-4,-8,7,2,-8],[2,-3,5,-2,5,-2,9,-6,7,10,-6,-8,-9,-4],[3,-3,6,-3,-3,3,-2,-3,-4,10,3,-5,4,-1],[6,-1,-1,-3,-2,7,3,7,9,-6,9,6,6,2],[3,-1,1,8,-8,-7,7,-8,-8,-6,5,9,6,7],[-5,1,2,-6,6,5,5,6,9,-2,9,3,-10,7]],[[8,-7,2,-2,2,9,2,-1,7,-8,-3,5,-10,5],[1,-5,7,3,-2,8,-10,3,3,8,-3,-8,1,-8],[2,-1,7,-3,10,6,8,7,2,-10,3,-5,-8,-3],[-4,10,-4,8,-6,6,4,9,7,-2,5,-4,-1,7],[9,6,2,-1,6,-10,2,-10,9,10,5,-6,3,-1],[8,2,1,-1,6,1,-3,6,-6,-2,6,-2,-2,-3],[10,-9,-3,6,-3,-9,10,10,-9,-9,-5,-2,2,1],[-6,-1,10,5,-3,7,7,-2,6,-10,-2,-1,-9,7],[-9,-7,5,-1,8,-8,6,-4,1,-2,1,3,-1,10]],[[7,3,-8,-3,8,9,2,4,3,3,-5,-3,6,-10],[10,9,7,-5,2,-9,-2,6,-6,-3,10,4,-10,-2],[3,-5,1,-10,8,5,-3,-10,-5,-10,9,-1,-1,4],[4,-8,-7,-1,7,-9,7,6,-2,-7,-5,9,2,10],[-7,-5,-10,7,5,8,-1,8,-4,-10,-1,5,-3,9],[-4,-9,5,1,6,-3,-8,-7,-9,-9,-1,9,-5,9],[7,-3,9,4,-5,-9,3,-4,-4,-1,9,-4,-8,-4],[5,3,3,7,-8,-6,-3,6,9,-8,4,-4,9,1],[10,10,-9,1,9,-4,8,1,-6,-9,10,6,9,5]],[[9,-5,3,6,10,-6,5,7,-1,-5,9,2,5,1],[9,2,-6,-6,-4,-1,-10,-3,-8,-8,-3,5,-1,9],[-4,-10,8,10,-8,-3,9,-7,2,3,2,-8,-8,-7],[10,5,-8,-7,-4,2,-3,4,-10,10,3,-3,-9,-10],[-4,4,-4,-9,3,-9,-5,10,-6,2,5,10,-9,3],[-4,3,-3,-1,7,7,8,-10,9,-10,6,2,6,-9],[5,-1,8,-4,-2,-6,-6,2,1,6,-1,6,8,9],[10,-9,4,1,-5,-3,-1,-7,-5,1,-10,-7,-3,10],[-3,-7,9,-7,5,6,-4,-6,-1,-3,3,-4,3,6]],[[6,-7,-5,1,10,10,7,-5,7,7,-4,6,-6,-10],[4,5,2,-9,6,-4,8,-4,-9,8,-10,-6,5,2],[2,10,-10,6,-7,-2,4,1,-9,9,-2,4,1,-6],[1,8,2,9,-3,5,-9,10,2,-9,4,8,6,8],[3,-4,4,8,-9,9,4,-9,10,8,3,-2,7,7],[-2,-3,-10,1,-8,-9,8,1,1,-6,-3,2,4,-5],[2,6,-6,10,3,-10,-10,2,-9,9,2,1,-10,1],[7,-6,-7,-6,9,-9,-7,7,-9,7,-9,10,-4,9],[5,9,-6,-2,5,-4,-4,-1,3,10,7,2,6,9]],[[4,-3,8,3,-4,4,3,-8,-2,-7,6,-9,-5,-9],[2,8,-6,6,-2,5,-4,-9,-9,-3,5,8,-7,6],[-9,-2,3,-8,2,2,-3,-2,-5,3,8,-9,-5,-6],[-5,4,-7,4,6,-10,7,4,6,8,-7,-9,6,9],[6,-4,10,-4,4,-9,-3,-1,-9,-2,-1,8,1,2],[-7,1,-8,6,-4,-7,10,1,4,-4,6,-8,6,4],[7,-7,9,-8,6,7,4,-8,-9,-10,10,-6,9,3],[3,-5,5,3,-1,-3,4,-8,-5,5,-7,6,10,-6],[-7,-6,-8,1,2,-7,6,1,1,10,-8,-9,3,-2]],[[9,-2,7,-9,9,-6,3,-6,-7,-10,-8,4,9,-9],[-3,3,-7,10,-3,6,-8,-2,10,-9,7,-7,2,-9],[7,1,-8,-3,1,8,-4,-7,1,-3,-9,9,-4,1],[8,-4,9,-6,-10,-4,4,-7,10,-1,3,-3,-8,8],[-9,-5,10,-3,-5,-6,9,7,3,2,-8,-4,8,-3],[2,-8,2,-7,5,9,-10,-8,-8,2,1,-5,-8,-9],[-10,5,-8,2,-8,-10,10,6,8,-7,-9,8,-5,-8],[-5,9,3,-7,9,-1,-8,-2,4,-8,-10,-9,-6,-10],[9,3,-8,9,-6,-2,-6,2,6,2,-1,-2,-5,-1]],[[-7,1,-2,-2,-7,-2,7,-10,9,-7,-5,4,-9,-7],[5,-7,-3,-8,5,5,-1,6,1,1,9,2,6,2],[-2,2,-8,-10,1,6,-10,-7,8,-8,-1,-6,6,-6],[5,8,6,-5,-10,7,-4,7,-6,2,-10,-10,1,1],[7,8,5,9,7,-8,-10,-8,10,6,-10,7,-1,10],[6,-9,-9,4,4,-7,-9,10,2,2,3,-7,10,-2],[-2,5,4,-2,1,-10,9,-8,2,8,7,-5,1,5],[7,-2,-10,8,1,8,6,-8,5,5,-3,-3,-6,1],[10,9,-3,-8,-10,-8,4,2,6,-7,6,-10,5,-1]],[[2,8,-10,-1,10,10,6,10,8,2,-3,-6,-10,-10],[-2,6,5,-7,-1,-9,-10,10,7,-7,-3,8,7,3],[-2,2,3,7,-4,-4,7,-5,-2,-2,-6,-3,-8,-2],[-7,-2,-9,-3,4,2,-4,-2,-10,7,-3,-1,10,7],[7,2,-6,2,-1,-2,5,-1,-10,10,-10,-2,-8,4],[-8,-5,-2,-10,-5,6,7,1,1,3,-4,3,-1,-1],[-9,6,-5,2,-2,-6,5,1,1,6,-3,-5,-3,5],[5,-3,-8,-2,2,2,8,-8,-1,9,-2,-4,-5,4],[-9,-1,4,9,-3,-6,-6,-8,8,1,9,-3,-6,-8]]], dtype = "uint16")#candidate|7526|(15, 9, 14)|const|uint16
var_7527 = relay.var("var_7527", dtype = "uint16", shape = (15, 9, 14))#candidate|7527|(15, 9, 14)|var|uint16
bop_7528 = relay.multiply(const_7526.astype('uint16'), relay.reshape(var_7527.astype('uint16'), relay.shape_of(const_7526))) # shape=(15, 9, 14)
func_3046_call = mod.get_global_var('func_3046')
func_3049_call = mutated_mod.get_global_var('func_3049')
const_7532 = relay.const([5.689075,2.168204,9.128983,8.547759,5.574120,-1.561057,-7.326511,-4.507318,-9.659391,9.802106,6.592355,3.626782,1.541642,-4.621921,8.031254,5.884389,-9.044736,-7.059621,6.579578,2.325976,1.915351,2.792715,-2.134073,1.231975,-5.242086,-3.494265,-8.283285,2.361678,2.774009,-9.608793,-2.883983,2.304896,4.520945,-8.732798,9.360166,3.149231,-1.455973,8.862149,3.715468,5.459333,0.918401,7.163036,5.664579,2.455007,-3.905142,0.932671,1.003117,0.931725,-3.614998,-7.594005,-8.874084,4.668639,-0.132104,4.545831,9.364166,0.285764,0.229213,-0.609573,2.325849,5.527925,-9.301921,-7.033223,-5.946955,-7.326621,-8.200092,-3.501222,-1.981473,3.191933,-2.440896,-9.321366,0.566572,0.817943,0.618552,8.981412,9.274999,-0.397646,9.837462,-5.479490,6.551777,4.862752,6.552419,-5.329719,4.039678,-4.962100,-1.299542,1.454543,-8.451236,-4.488908,-4.625441,-2.997022,3.622228,7.093372,-6.387125,-9.681661,-4.311509,6.357237,2.184561,-5.635951,3.940919,8.130182,5.272857,3.426348,4.002716,0.170395,9.969285,0.522812,5.635064,6.248813,-7.294208,9.705754,1.073599,-1.905212,-9.575667,4.088268,6.519906,7.984386,0.693277,-7.903544,9.138170,3.311187,-1.521876,5.852593,7.972288,6.363281,-1.402276,2.265097,8.702688,-5.358658,-9.867525,2.823278,-1.451387,-9.489002,4.299134,-8.494832,7.370577,0.588182,6.221466,8.612555,1.353968,-2.645594,7.123672,-7.917123,-8.877128,-8.554003,-2.029960,-3.970676,-6.341572,3.658103,-1.691491,-6.722483,8.898803,0.259254,-0.873069,6.038445,0.078576,9.027737,6.088588,4.059893,9.461026,-3.605520,5.034184,-1.253141,-7.882560,5.919287,-2.188021,-0.234257,7.602890,-6.904720,-6.962782,6.754391,3.082639,-5.096035,-5.096699,-1.413885,6.591427,-4.066280,-7.982860,-0.927986,-8.490833,7.097387,-3.661310,-2.114216,2.283759,3.557782,-1.001629,8.374494,-1.588081,1.424555,9.820734,-7.838035,-1.569847,5.384210,9.233773,6.667952,0.515560,-4.898186,-8.348402,1.660160,7.422708,4.506289,2.880083,-6.696861,-5.904456,9.614639,3.150733,-7.262687,-2.293178,-3.755311,-9.811077,9.086534,-1.883007,1.888508,-2.323394,-8.927267,5.703235,5.448603,-7.177671,-8.615520,2.042048,-8.758812,0.012035,6.084299,-7.185565,-8.856241,7.452423,-4.206552,8.064495,8.716176,-7.923643,-4.529560,6.745149,4.525021,0.331391,8.192161,6.464806,1.486706,-6.579081,-0.842000,1.233585,7.549820,-8.183162,-4.908474,6.859027,4.982723,-7.218136,-0.177214,8.436021,7.798233,4.187845,-8.007460,2.464940,-5.799074,-5.191056,-7.272222,7.884087,-8.301836,-5.620423,4.402726,-4.271424,1.925435,-4.195590,9.137964,2.747517,-8.532542,2.097858,6.948913,1.650173,-6.726029,-0.552634,0.541353,2.988755,5.834876,-5.283772,5.397873,4.706808,8.736398,-0.797213,-1.368928,-9.704097,4.205828,0.443344,-6.997467,-2.546073,-3.977067,1.043573,-1.596581,3.042776,-5.205003,-8.246934,3.878122,5.714975,-8.047581,4.328760,1.341565,4.990067,0.585510,-3.722908,7.241285,-3.119124,1.236299,3.627421,-5.759691,-8.936133,7.273556,4.329001,-5.129332,8.569038,-1.669905,6.877800,-2.384488,-4.690370,3.109238,5.024405,1.545087,-7.749433,-5.388604,-0.528241,6.397727,7.694547,-0.500899,0.090770,2.956995,6.688507,2.130765,-1.273650,4.857622,1.923760,9.446126,-0.193711,-0.518920,5.623645,-1.006886,-6.005668,-0.368503,-2.674274,-5.258176,-1.936487,3.104669,6.716039,-8.191022,-1.979126,7.940343,9.972982,0.653283,6.340621,-4.844056,-7.428298,9.082559,-8.676943,-1.039836,-2.310270,-4.450741,0.279143,-6.770913,-7.126899,-7.544999,-7.576414,-0.865364,-5.298385,0.039162,-1.939712,-9.588345,1.128541,6.329000,-5.169451,-7.174584,-0.843241,5.277132,-1.499317,-8.182805,-9.904806,-7.440973,-5.354128,-6.686799,-7.943755,4.919637,-0.255060,1.212358,9.874400,8.391476,-3.858077,-7.733258,5.500122,-4.038570,0.282616,-9.106785,6.870289,-5.675553,-3.145311,-4.284350,5.636933,9.129696,-4.308469,6.899186,3.191360,8.410561,-8.916791,-1.847820,7.189764,-3.940884,8.677714,-6.515379,9.800336,2.781247,-0.321793,-2.279008,3.729771,1.068215,-5.133033,4.776133,7.166943,3.280257,-7.171981,3.977969,9.610665,-4.596037,5.516550,4.345027,4.549027,-1.586506,0.785608,0.751688,-4.838361,-8.770852,2.541037,-3.329478,-4.512509,9.675815,0.768019,-5.623824,-4.303101,2.498602,5.210426,-8.349628,2.605489,-2.766550,8.509083,9.978143,-7.384926,-8.673069,6.433797,3.686421,-6.592903,-9.689451,0.874940,-2.347227,8.793330,1.057942,2.369883,-3.944157,-5.596591,4.840115,-1.710040,6.806370,-8.442697,8.360639,-3.131500,4.498955,5.993348,-2.717943,-1.441578,-0.936536,8.377339,-7.795182,3.133073,8.193761,-4.666523,0.532176,-7.919299,8.233329,-2.774741,-3.430764,6.309692,7.586099,-3.685071,-4.451987,9.492649,-0.412954,-0.325113,0.306256,0.468130,-7.324431,4.865770,7.244282,-3.057606,-1.646171,7.334941,-2.203276,-3.248225,2.486817,2.096396,7.500457,-6.444192,2.009083,-8.894949,-8.022680,-7.678302,6.846854,-1.753400,3.530897,-2.366499,1.466332,-7.357602,-6.166069,0.711218,3.268278,3.880826,7.791420,4.762637,1.121115,7.020023,8.905807,-6.967657,7.245231,9.272925,8.722175,-8.401840,7.565646,-6.914239,0.375999,4.892194,5.579692,4.637416,-1.772628,1.071847,0.916482,4.926098,-7.460707,2.345292,-3.424382,-6.940006,-3.147462,-4.606103,-0.930986,-2.405573,6.851512,-5.731248,-1.159714,2.427330,-0.224416,-8.170516,-2.965767,1.541358,1.290146,-4.521942,7.357425,-0.396799,-1.448765,-5.479151,4.831655,-8.523871,-2.467547,0.141220,6.486656,-7.456759,-5.263547,2.030212,-8.833033,9.544960,9.863075,-4.415396,5.321991,8.554497,7.628119,-0.122018,-2.095152,1.869822,0.352561,4.059031,-9.773928,2.666323,2.307537,7.190373,4.033280,1.118000,-9.715635,1.219328,-3.506655,2.815538,-0.936251,4.165859,6.555640,-7.134838,0.745443,1.009574,5.879273,-3.841661,0.916398,-1.713405,0.786863,9.783331,9.888404,0.536194,0.211207,-7.483781,-2.103231,-0.943186,-2.700547,-4.641463,4.966027,8.548977,-8.423966,3.163742,1.286788,-7.107894,4.241315,2.245934,8.251477,8.439390,1.367401,-2.066082,2.957142,2.238695,8.864226,2.653256,3.623956,6.245932,9.483975,5.894250,6.568863,0.145292,-7.314928,9.527010,1.215600,-0.204563,-0.326440,-2.733523,-5.935810,-2.519625,0.593451,-2.707198,-2.573321,0.047555,-7.152200,7.223394,-5.063405,-8.297686,1.900765,-2.523910,-9.065209,7.229456,-9.205443,-6.433032,-2.385583,-9.280640,0.306375,-3.059930,3.199098,9.973321,6.290545,4.171758,5.559158,-4.129199,1.792754,1.103251,5.491904,5.654484,-1.603715,-6.728393,-7.151545,-1.958380,2.162671,6.005371,-9.914947,-3.366748,0.587464,-3.324627,-4.821634,0.031072,6.550828,7.820976,-2.011052,-2.444186,8.223334,8.524229,-2.393259,2.580879,-7.921955,-2.388775,8.528610,-1.900574,-3.431426,8.447517,3.070142,-2.144509,8.842698,-2.583130,-9.812232,-6.774871,6.166169,1.218861,0.750943,-0.371429,-2.634405,5.580605,1.724974,-1.610527,-5.918497,-1.448138,2.154554,-7.166749,2.432307,-9.315394,-8.249124,0.250340,-5.354160,5.795600,0.266682,9.564231,-7.441437,9.140287,5.808685,6.111252,4.192351,7.755812,-7.555596,8.572916,-7.920416,-8.202566,-5.486385,3.952214,-0.666659,-9.120694,-3.839393,6.652992,-3.452778,-9.595190,2.996808,2.121220,-1.702911,0.255347,8.332765,-1.182945,-0.611175,-4.409067,-8.263711,3.918985,-2.364179,-4.266705,0.971719,1.053647,-9.939320,1.450987,5.613927,-9.351900,-1.144645,-1.456758,-1.232871,7.393886,9.538872,2.322234,7.534349,4.747143,-6.965376,-4.573790,6.351844,-5.403398,-3.123301,3.524620,-4.401684,3.866150,4.520942,-2.180374,-4.239750,-8.890026,4.209301,6.911263,-1.033648,-2.344261,-0.306608,2.420462,-5.307718,1.075717,0.169473,-7.136349,-5.535466,-1.210751,-8.696268,4.914781,2.388469,-8.544128,3.839298,8.581419,-7.154472,-9.450547,4.007191,1.306633,0.486684,-8.144109,7.998140,9.003892,-6.447309,-5.449578,-9.373555,1.778565,1.297533,4.672287,5.874395,5.126943,-3.092020,-5.952120,4.278953,-3.999999,-9.676986,9.961629,1.042315,4.068109,3.463821,-3.599529,2.835845,7.172768,-3.954370,8.957071,7.464950,4.379754,-4.764131,8.324843,1.731123,9.699471,-6.071309,-8.654870,3.846211,2.284672,4.798431,-6.348540,5.551983,3.626591,-9.359210,8.445148,0.056245,-6.325695,-2.914843,3.618798,1.014741,2.267339,-6.393726,6.792254,4.382521,-8.559476,6.166190,0.523134,-7.810105,-1.837069,1.306483,-9.949215,-7.462637,0.065111,8.957381,5.031252,7.480883,-5.193997,-5.198748,9.007483,6.213941,-9.561762,-2.175752,1.363175,-7.196234,-8.272926,-7.018707,1.153614,4.882249,8.086332,8.987356,5.411123,-9.970008,-7.055058,0.823724,-0.276280,4.860935,8.593130,0.160239,-1.718797,-4.464400,1.711653,-8.129111,-1.016079,9.154048,-8.391109,-2.248247,1.045441,3.985213,1.455783,0.047869,4.188922,-4.742369,8.619942,-4.261812,7.695061,-5.880079,5.785354,7.473494,-4.096061,5.143822,-9.853079,-3.896033,-3.695946,5.688123,-2.307006,-7.117934,-0.832288,9.204537,-3.274173,9.105207,-1.739969,-6.596271,-1.436969,9.048503,2.949480,6.739218,-9.165720,3.483195,-0.591426,-2.100048,-0.372044,-2.923464,7.140381,-7.786171,4.350003,-4.437147,4.950725,9.512609,-6.053288,-1.871255,-9.035465,0.943578,7.696559,1.380234,-3.677562,-5.432716,-4.559304,0.432562,-6.625763,3.764480,8.347833,-2.496616,6.969571,0.971524,-2.185481,2.063849,3.700530,-1.846987,0.500152,-8.643091,9.719454,-2.546583,-9.175443,-9.751430,7.484609,-0.476912,4.425157,8.685345,4.536192,-8.333733,-5.572899,-8.399212,0.321313,-0.184718,-2.749829,-6.812752,-6.204663,-8.688246,-4.350699,5.213074,-3.403000,-0.903455,-4.703672,-9.585959,-4.682574,-7.089563,-3.835556,1.615231,9.595168,4.392479,-0.396088,0.173450,-5.498411,0.486108,-6.439616,3.501389,6.866566,-9.986771,6.493726,5.337132,-2.058046,5.753669,-4.032842,-4.203868,-9.321539,0.103731,3.891531,7.059912,-4.439484,-5.554688,-4.270322,-6.909350,2.784226,8.693382,0.432045,0.282281,-9.549781,4.358354,8.472860,-9.230214,4.960675,-9.236080,9.333523,-0.774441,2.343616,-9.877020,-1.860256,8.445243,-2.680114,5.266648,0.460376,1.864777,7.541886,-5.735915,-6.448638,-3.682035,-5.821166,-1.487197,6.146130,-2.975854,0.042062,-9.493993,9.642731,6.561348,-6.612735,3.748893,2.168228,-3.411263,2.030501,5.387749,5.292060,1.005435,6.289344,9.314770,6.844365,2.649369,1.468945,-1.733666,6.712467,-6.263495,-9.492304,8.115321,-7.690842,-0.123183,-6.960534,8.310466,-6.639111,2.714101,-4.029537], dtype = "float32")#candidate|7532|(1053,)|const|float32
call_7531 = relay.TupleGetItem(func_3046_call(relay.reshape(const_7532.astype('float32'), [13, 9, 9])), 2)
call_7533 = relay.TupleGetItem(func_3049_call(relay.reshape(const_7532.astype('float32'), [13, 9, 9])), 2)
output = relay.Tuple([bop_7528,call_7531,const_7532,])
output2 = relay.Tuple([bop_7528,call_7533,const_7532,])
func_7538 = relay.Function([var_7527,], output)
mod['func_7538'] = func_7538
mod = relay.transform.InferType()(mod)
mutated_mod['func_7538'] = func_7538
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7539 = relay.var("var_7539", dtype = "uint16", shape = (15, 9, 14))#candidate|7539|(15, 9, 14)|var|uint16
func_7538_call = mutated_mod.get_global_var('func_7538')
call_7540 = func_7538_call(var_7539)
output = call_7540
func_7541 = relay.Function([var_7539], output)
mutated_mod['func_7541'] = func_7541
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7563 = relay.var("var_7563", dtype = "float32", shape = (13, 11, 9))#candidate|7563|(13, 11, 9)|var|float32
uop_7564 = relay.asinh(var_7563.astype('float32')) # shape=(13, 11, 9)
uop_7583 = relay.exp(uop_7564.astype('float64')) # shape=(13, 11, 9)
uop_7590 = relay.acos(uop_7564.astype('float32')) # shape=(13, 11, 9)
func_6619_call = mod.get_global_var('func_6619')
func_6621_call = mutated_mod.get_global_var('func_6621')
call_7596 = func_6619_call()
call_7597 = func_6619_call()
func_4219_call = mod.get_global_var('func_4219')
func_4221_call = mutated_mod.get_global_var('func_4221')
call_7599 = relay.TupleGetItem(func_4219_call(), 0)
call_7600 = relay.TupleGetItem(func_4221_call(), 0)
output = relay.Tuple([uop_7583,uop_7590,call_7596,call_7599,])
output2 = relay.Tuple([uop_7583,uop_7590,call_7597,call_7600,])
func_7603 = relay.Function([var_7563,], output)
mod['func_7603'] = func_7603
mod = relay.transform.InferType()(mod)
var_7604 = relay.var("var_7604", dtype = "float32", shape = (13, 11, 9))#candidate|7604|(13, 11, 9)|var|float32
output = func_7603(var_7604)
func_7605 = relay.Function([var_7604], output)
mutated_mod['func_7605'] = func_7605
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6619_call = mod.get_global_var('func_6619')
func_6621_call = mutated_mod.get_global_var('func_6621')
call_7631 = func_6619_call()
call_7632 = func_6619_call()
const_7637 = relay.const([[3,-2,2,-3,-6,-4,1,-3,-5,-6],[-3,-6,3,6,-1,3,10,4,-7,-8],[3,10,-1,-6,1,7,-4,5,-4,-3],[-4,9,-10,-6,8,-1,-6,-7,-3,5],[7,-2,-4,8,5,-3,6,3,-2,4],[-4,5,6,-9,8,-7,-6,6,5,8],[-3,-9,10,4,4,6,-3,-10,-4,1],[2,7,-8,-10,6,1,6,10,-5,-1],[-4,-8,7,-7,-8,-5,8,-10,6,7],[5,-3,1,10,10,4,-8,1,10,-8],[-8,-1,-6,5,1,4,-2,-9,-10,1],[-10,-4,-9,4,4,-10,-9,-1,1,7],[-7,-8,-9,6,-7,9,-1,-6,7,2],[5,6,-10,-9,2,-3,-6,-2,1,4],[4,-7,-8,7,-6,9,-10,5,1,-3],[9,-5,-10,-10,6,8,9,7,10,-3],[5,-8,-6,-7,5,1,7,-9,-3,-7],[-6,9,2,-3,9,9,-7,-9,9,9],[5,10,-5,10,-1,-7,3,2,-1,10],[-10,-6,-7,9,10,-2,7,-8,2,-10],[-6,-7,2,-6,4,-5,-6,-3,-3,-9],[-2,7,-4,2,4,6,-9,-8,-4,-6],[-10,-3,9,9,8,-6,-10,10,9,-7],[-5,2,8,7,-6,-10,-3,3,9,-5],[-2,7,-3,8,-10,6,10,1,9,1],[10,-4,-6,-4,-10,2,-9,8,10,5],[-10,7,-8,9,-6,-5,-4,9,5,-5],[-4,1,-7,-5,-2,7,9,4,-10,-7],[7,-5,2,-1,9,3,10,-5,2,4],[-10,8,4,-9,6,3,9,-4,-9,-7],[10,2,-6,9,-8,-2,3,-8,-1,-1],[4,-4,-9,-5,3,9,-3,-5,9,-7],[-6,-5,-8,-6,-1,-9,1,9,10,-2],[-5,-8,3,9,7,9,4,2,9,10],[7,7,1,-1,10,-7,4,7,-1,9],[10,-1,2,-6,-3,10,-6,-9,-3,-9],[4,9,-1,5,-3,-10,-2,9,8,4],[-10,3,-1,4,-5,-6,8,6,4,-3],[-6,1,-6,4,4,5,-2,3,-3,7],[7,-6,1,-6,3,-3,10,9,-4,2],[-2,-3,7,8,-2,-7,-10,-6,5,7],[9,9,4,7,-2,8,-6,-8,9,-3],[3,-10,5,4,-5,-1,1,-6,-9,-2],[4,3,-1,2,-9,10,9,4,3,-5],[9,5,-8,-4,5,-6,-6,-8,-1,6],[7,1,4,-1,3,9,4,1,-6,6],[1,-10,-2,3,-9,3,-4,4,-10,-7],[3,-9,2,8,7,1,8,4,-10,-5],[-5,-6,3,-9,7,7,3,-8,6,-7],[1,-10,9,-1,2,-7,2,-5,5,9],[-9,-5,-4,1,8,4,6,-10,-9,-4],[-7,-7,-6,6,-8,7,-3,2,-5,9],[1,-7,-7,-1,-10,-7,-6,7,-7,-7],[-2,-4,7,2,9,7,5,6,-1,-8],[10,7,10,-1,-9,-3,5,5,3,3]], dtype = "uint32")#candidate|7637|(55, 10)|const|uint32
bop_7638 = relay.logical_and(call_7631.astype('bool'), relay.reshape(const_7637.astype('bool'), relay.shape_of(call_7631))) # shape=(55, 10)
bop_7641 = relay.logical_and(call_7632.astype('bool'), relay.reshape(const_7637.astype('bool'), relay.shape_of(call_7632))) # shape=(55, 10)
uop_7645 = relay.tan(const_7637.astype('float64')) # shape=(55, 10)
var_7647 = relay.var("var_7647", dtype = "float64", shape = (55, 10))#candidate|7647|(55, 10)|var|float64
bop_7648 = relay.add(uop_7645.astype('uint16'), relay.reshape(var_7647.astype('uint16'), relay.shape_of(uop_7645))) # shape=(55, 10)
func_4262_call = mod.get_global_var('func_4262')
func_4263_call = mutated_mod.get_global_var('func_4263')
call_7655 = func_4262_call()
call_7656 = func_4262_call()
output = relay.Tuple([bop_7638,bop_7648,call_7655,])
output2 = relay.Tuple([bop_7641,bop_7648,call_7656,])
func_7667 = relay.Function([var_7647,], output)
mod['func_7667'] = func_7667
mod = relay.transform.InferType()(mod)
var_7668 = relay.var("var_7668", dtype = "float64", shape = (55, 10))#candidate|7668|(55, 10)|var|float64
output = func_7667(var_7668)
func_7669 = relay.Function([var_7668], output)
mutated_mod['func_7669'] = func_7669
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5311_call = mod.get_global_var('func_5311')
func_5313_call = mutated_mod.get_global_var('func_5313')
call_7674 = relay.TupleGetItem(func_5311_call(), 1)
call_7675 = relay.TupleGetItem(func_5313_call(), 1)
func_7667_call = mod.get_global_var('func_7667')
func_7669_call = mutated_mod.get_global_var('func_7669')
var_7690 = relay.var("var_7690", dtype = "float64", shape = (550,))#candidate|7690|(550,)|var|float64
call_7689 = relay.TupleGetItem(func_7667_call(relay.reshape(var_7690.astype('float64'), [55, 10])), 2)
call_7691 = relay.TupleGetItem(func_7669_call(relay.reshape(var_7690.astype('float64'), [55, 10])), 2)
output = relay.Tuple([call_7674,call_7689,var_7690,])
output2 = relay.Tuple([call_7675,call_7691,var_7690,])
func_7696 = relay.Function([var_7690,], output)
mod['func_7696'] = func_7696
mod = relay.transform.InferType()(mod)
var_7697 = relay.var("var_7697", dtype = "float64", shape = (550,))#candidate|7697|(550,)|var|float64
output = func_7696(var_7697)
func_7698 = relay.Function([var_7697], output)
mutated_mod['func_7698'] = func_7698
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6818_call = mod.get_global_var('func_6818')
func_6820_call = mutated_mod.get_global_var('func_6820')
call_7700 = relay.TupleGetItem(func_6818_call(), 0)
call_7701 = relay.TupleGetItem(func_6820_call(), 0)
func_5754_call = mod.get_global_var('func_5754')
func_5756_call = mutated_mod.get_global_var('func_5756')
call_7711 = relay.TupleGetItem(func_5754_call(), 0)
call_7712 = relay.TupleGetItem(func_5756_call(), 0)
output = relay.Tuple([call_7700,call_7711,])
output2 = relay.Tuple([call_7701,call_7712,])
func_7716 = relay.Function([], output)
mod['func_7716'] = func_7716
mod = relay.transform.InferType()(mod)
output = func_7716()
func_7717 = relay.Function([], output)
mutated_mod['func_7717'] = func_7717
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7751 = relay.var("var_7751", dtype = "float32", shape = (7, 13, 1))#candidate|7751|(7, 13, 1)|var|float32
uop_7752 = relay.sqrt(var_7751.astype('float32')) # shape=(7, 13, 1)
bop_7765 = relay.bitwise_or(var_7751.astype('uint16'), relay.reshape(uop_7752.astype('uint16'), relay.shape_of(var_7751))) # shape=(7, 13, 1)
output = bop_7765
output2 = bop_7765
func_7768 = relay.Function([var_7751,], output)
mod['func_7768'] = func_7768
mod = relay.transform.InferType()(mod)
mutated_mod['func_7768'] = func_7768
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7769 = relay.var("var_7769", dtype = "float32", shape = (7, 13, 1))#candidate|7769|(7, 13, 1)|var|float32
func_7768_call = mutated_mod.get_global_var('func_7768')
call_7770 = func_7768_call(var_7769)
output = call_7770
func_7771 = relay.Function([var_7769], output)
mutated_mod['func_7771'] = func_7771
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7822 = relay.var("var_7822", dtype = "float64", shape = ())#candidate|7822|()|var|float64
const_7823 = relay.const([[0.302045],[-2.895245],[-5.127628],[-8.331208],[1.222343],[2.804200],[4.113877],[-1.411970]], dtype = "float64")#candidate|7823|(8, 1)|const|float64
bop_7824 = relay.floor_divide(var_7822.astype('float64'), const_7823.astype('float64')) # shape=(8, 1)
func_3046_call = mod.get_global_var('func_3046')
func_3049_call = mutated_mod.get_global_var('func_3049')
var_7829 = relay.var("var_7829", dtype = "float32", shape = (1053,))#candidate|7829|(1053,)|var|float32
call_7828 = relay.TupleGetItem(func_3046_call(relay.reshape(var_7829.astype('float32'), [13, 9, 9])), 2)
call_7830 = relay.TupleGetItem(func_3049_call(relay.reshape(var_7829.astype('float32'), [13, 9, 9])), 2)
var_7835 = relay.var("var_7835", dtype = "uint32", shape = (550,))#candidate|7835|(550,)|var|uint32
bop_7836 = relay.less_equal(call_7828.astype('bool'), relay.reshape(var_7835.astype('bool'), relay.shape_of(call_7828))) # shape=(550,)
bop_7839 = relay.less_equal(call_7830.astype('bool'), relay.reshape(var_7835.astype('bool'), relay.shape_of(call_7830))) # shape=(550,)
output = relay.Tuple([bop_7824,var_7829,bop_7836,])
output2 = relay.Tuple([bop_7824,var_7829,bop_7839,])
func_7840 = relay.Function([var_7822,var_7829,var_7835,], output)
mod['func_7840'] = func_7840
mod = relay.transform.InferType()(mod)
var_7841 = relay.var("var_7841", dtype = "float64", shape = ())#candidate|7841|()|var|float64
var_7842 = relay.var("var_7842", dtype = "float32", shape = (1053,))#candidate|7842|(1053,)|var|float32
var_7843 = relay.var("var_7843", dtype = "uint32", shape = (550,))#candidate|7843|(550,)|var|uint32
output = func_7840(var_7841,var_7842,var_7843,)
func_7844 = relay.Function([var_7841,var_7842,var_7843,], output)
mutated_mod['func_7844'] = func_7844
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7479_call = mod.get_global_var('func_7479')
func_7481_call = mutated_mod.get_global_var('func_7481')
call_7873 = relay.TupleGetItem(func_7479_call(), 0)
call_7874 = relay.TupleGetItem(func_7481_call(), 0)
uop_7876 = relay.log(call_7873.astype('float64')) # shape=(8, 15, 9)
uop_7878 = relay.log(call_7874.astype('float64')) # shape=(8, 15, 9)
output = uop_7876
output2 = uop_7878
func_7879 = relay.Function([], output)
mod['func_7879'] = func_7879
mod = relay.transform.InferType()(mod)
mutated_mod['func_7879'] = func_7879
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7879_call = mutated_mod.get_global_var('func_7879')
call_7880 = func_7879_call()
output = call_7880
func_7881 = relay.Function([], output)
mutated_mod['func_7881'] = func_7881
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6446_call = mod.get_global_var('func_6446')
func_6447_call = mutated_mod.get_global_var('func_6447')
call_7891 = func_6446_call()
call_7892 = func_6446_call()
output = relay.Tuple([call_7891,])
output2 = relay.Tuple([call_7892,])
func_7896 = relay.Function([], output)
mod['func_7896'] = func_7896
mod = relay.transform.InferType()(mod)
mutated_mod['func_7896'] = func_7896
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7896_call = mutated_mod.get_global_var('func_7896')
call_7897 = func_7896_call()
output = call_7897
func_7898 = relay.Function([], output)
mutated_mod['func_7898'] = func_7898
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6459_call = mod.get_global_var('func_6459')
func_6460_call = mutated_mod.get_global_var('func_6460')
call_7910 = relay.TupleGetItem(func_6459_call(), 1)
call_7911 = relay.TupleGetItem(func_6460_call(), 1)
func_7538_call = mod.get_global_var('func_7538')
func_7541_call = mutated_mod.get_global_var('func_7541')
var_7920 = relay.var("var_7920", dtype = "uint16", shape = (1890,))#candidate|7920|(1890,)|var|uint16
call_7919 = relay.TupleGetItem(func_7538_call(relay.reshape(var_7920.astype('uint16'), [15, 9, 14])), 2)
call_7921 = relay.TupleGetItem(func_7541_call(relay.reshape(var_7920.astype('uint16'), [15, 9, 14])), 2)
output = relay.Tuple([call_7910,call_7919,var_7920,])
output2 = relay.Tuple([call_7911,call_7921,var_7920,])
func_7929 = relay.Function([var_7920,], output)
mod['func_7929'] = func_7929
mod = relay.transform.InferType()(mod)
mutated_mod['func_7929'] = func_7929
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7930 = relay.var("var_7930", dtype = "uint16", shape = (1890,))#candidate|7930|(1890,)|var|uint16
func_7929_call = mutated_mod.get_global_var('func_7929')
call_7931 = func_7929_call(var_7930)
output = call_7931
func_7932 = relay.Function([var_7930], output)
mutated_mod['func_7932'] = func_7932
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7232_call = mod.get_global_var('func_7232')
func_7234_call = mutated_mod.get_global_var('func_7234')
call_7942 = relay.TupleGetItem(func_7232_call(), 0)
call_7943 = relay.TupleGetItem(func_7234_call(), 0)
func_4497_call = mod.get_global_var('func_4497')
func_4500_call = mutated_mod.get_global_var('func_4500')
call_7948 = func_4497_call(relay.reshape(call_7942.astype('float32'), [8, 15, 9]))
call_7949 = func_4497_call(relay.reshape(call_7942.astype('float32'), [8, 15, 9]))
func_5915_call = mod.get_global_var('func_5915')
func_5916_call = mutated_mod.get_global_var('func_5916')
call_7960 = relay.TupleGetItem(func_5915_call(), 0)
call_7961 = relay.TupleGetItem(func_5916_call(), 0)
func_1988_call = mod.get_global_var('func_1988')
func_1990_call = mutated_mod.get_global_var('func_1990')
var_7966 = relay.var("var_7966", dtype = "float32", shape = (624,))#candidate|7966|(624,)|var|float32
call_7965 = relay.TupleGetItem(func_1988_call(relay.reshape(var_7966.astype('float32'), [12, 4, 13])), 0)
call_7967 = relay.TupleGetItem(func_1990_call(relay.reshape(var_7966.astype('float32'), [12, 4, 13])), 0)
output = relay.Tuple([call_7942,call_7948,call_7960,call_7965,var_7966,])
output2 = relay.Tuple([call_7943,call_7949,call_7961,call_7967,var_7966,])
func_7970 = relay.Function([var_7966,], output)
mod['func_7970'] = func_7970
mod = relay.transform.InferType()(mod)
mutated_mod['func_7970'] = func_7970
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7971 = relay.var("var_7971", dtype = "float32", shape = (624,))#candidate|7971|(624,)|var|float32
func_7970_call = mutated_mod.get_global_var('func_7970')
call_7972 = func_7970_call(var_7971)
output = call_7972
func_7973 = relay.Function([var_7971], output)
mutated_mod['func_7973'] = func_7973
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8038 = relay.var("var_8038", dtype = "float32", shape = (6, 5, 16))#candidate|8038|(6, 5, 16)|var|float32
uop_8039 = relay.asin(var_8038.astype('float32')) # shape=(6, 5, 16)
output = relay.Tuple([uop_8039,])
output2 = relay.Tuple([uop_8039,])
func_8067 = relay.Function([var_8038,], output)
mod['func_8067'] = func_8067
mod = relay.transform.InferType()(mod)
var_8068 = relay.var("var_8068", dtype = "float32", shape = (6, 5, 16))#candidate|8068|(6, 5, 16)|var|float32
output = func_8067(var_8068)
func_8069 = relay.Function([var_8068], output)
mutated_mod['func_8069'] = func_8069
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8073 = relay.var("var_8073", dtype = "float64", shape = (9, 10, 10))#candidate|8073|(9, 10, 10)|var|float64
var_8074 = relay.var("var_8074", dtype = "float64", shape = (9, 10, 10))#candidate|8074|(9, 10, 10)|var|float64
bop_8075 = relay.divide(var_8073.astype('float64'), relay.reshape(var_8074.astype('float64'), relay.shape_of(var_8073))) # shape=(9, 10, 10)
func_5968_call = mod.get_global_var('func_5968')
func_5971_call = mutated_mod.get_global_var('func_5971')
var_8083 = relay.var("var_8083", dtype = "uint16", shape = (273,))#candidate|8083|(273,)|var|uint16
call_8082 = relay.TupleGetItem(func_5968_call(relay.reshape(var_8083.astype('uint16'), [273,])), 1)
call_8084 = relay.TupleGetItem(func_5971_call(relay.reshape(var_8083.astype('uint16'), [273,])), 1)
output = relay.Tuple([bop_8075,call_8082,var_8083,])
output2 = relay.Tuple([bop_8075,call_8084,var_8083,])
func_8090 = relay.Function([var_8073,var_8074,var_8083,], output)
mod['func_8090'] = func_8090
mod = relay.transform.InferType()(mod)
var_8091 = relay.var("var_8091", dtype = "float64", shape = (9, 10, 10))#candidate|8091|(9, 10, 10)|var|float64
var_8092 = relay.var("var_8092", dtype = "float64", shape = (9, 10, 10))#candidate|8092|(9, 10, 10)|var|float64
var_8093 = relay.var("var_8093", dtype = "uint16", shape = (273,))#candidate|8093|(273,)|var|uint16
output = func_8090(var_8091,var_8092,var_8093,)
func_8094 = relay.Function([var_8091,var_8092,var_8093,], output)
mutated_mod['func_8094'] = func_8094
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5244_call = mod.get_global_var('func_5244')
func_5246_call = mutated_mod.get_global_var('func_5246')
call_8163 = relay.TupleGetItem(func_5244_call(), 1)
call_8164 = relay.TupleGetItem(func_5246_call(), 1)
output = relay.Tuple([call_8163,])
output2 = relay.Tuple([call_8164,])
func_8170 = relay.Function([], output)
mod['func_8170'] = func_8170
mod = relay.transform.InferType()(mod)
mutated_mod['func_8170'] = func_8170
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8170_call = mutated_mod.get_global_var('func_8170')
call_8171 = func_8170_call()
output = call_8171
func_8172 = relay.Function([], output)
mutated_mod['func_8172'] = func_8172
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6684_call = mod.get_global_var('func_6684')
func_6686_call = mutated_mod.get_global_var('func_6686')
call_8192 = relay.TupleGetItem(func_6684_call(), 0)
call_8193 = relay.TupleGetItem(func_6686_call(), 0)
output = relay.Tuple([call_8192,])
output2 = relay.Tuple([call_8193,])
func_8213 = relay.Function([], output)
mod['func_8213'] = func_8213
mod = relay.transform.InferType()(mod)
output = func_8213()
func_8214 = relay.Function([], output)
mutated_mod['func_8214'] = func_8214
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5485_call = mod.get_global_var('func_5485')
func_5486_call = mutated_mod.get_global_var('func_5486')
call_8243 = relay.TupleGetItem(func_5485_call(), 0)
call_8244 = relay.TupleGetItem(func_5486_call(), 0)
func_1458_call = mod.get_global_var('func_1458')
func_1460_call = mutated_mod.get_global_var('func_1460')
var_8246 = relay.var("var_8246", dtype = "uint32", shape = (275, 2))#candidate|8246|(275, 2)|var|uint32
call_8245 = func_1458_call(relay.reshape(var_8246.astype('uint32'), [10, 11, 5]))
call_8247 = func_1458_call(relay.reshape(var_8246.astype('uint32'), [10, 11, 5]))
output = relay.Tuple([call_8243,call_8245,var_8246,])
output2 = relay.Tuple([call_8244,call_8247,var_8246,])
func_8249 = relay.Function([var_8246,], output)
mod['func_8249'] = func_8249
mod = relay.transform.InferType()(mod)
mutated_mod['func_8249'] = func_8249
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8250 = relay.var("var_8250", dtype = "uint32", shape = (275, 2))#candidate|8250|(275, 2)|var|uint32
func_8249_call = mutated_mod.get_global_var('func_8249')
call_8251 = func_8249_call(var_8250)
output = call_8251
func_8252 = relay.Function([var_8250], output)
mutated_mod['func_8252'] = func_8252
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4219_call = mod.get_global_var('func_4219')
func_4221_call = mutated_mod.get_global_var('func_4221')
call_8273 = relay.TupleGetItem(func_4219_call(), 0)
call_8274 = relay.TupleGetItem(func_4221_call(), 0)
func_1191_call = mod.get_global_var('func_1191')
func_1195_call = mutated_mod.get_global_var('func_1195')
const_8276 = relay.const([1.695533,5.073871,5.015597,9.965402,1.817970,-5.577352,-8.678746,-0.328277,2.508058,1.198350,4.299510,8.698696,7.272256,-6.890708,9.667738,-5.820021,-3.663531,7.547582,-5.880875,7.617214,-3.216868,-6.814895,-9.445567,5.494438,-5.115407,-3.434618,-7.344508,-8.789389,2.550835,-1.467468,-7.143645,7.491885,-2.755897,4.878721,-1.981129,6.890033,-5.097232,5.406029,-4.898818,-7.474729,9.688195,-4.861096,7.373399,6.979129,8.808248,0.823203,-8.177470,-8.443969,8.005089,-8.838406,6.026863,-3.696985,0.537124,-9.791111,-4.147899,-8.281855,-2.931897,4.578372,-6.154979,-3.293820,4.085661,7.407202,-2.341308,-1.681669,6.779306,9.278964,-9.890338,8.920970,0.741247,6.218690,-7.511218,6.132137,-1.923065,-7.479150,-5.763930,3.610880,-2.620144,8.079709,-8.492780,-4.788241,-5.425239,-3.507995,9.490455,-2.441513,-4.421357,9.678195,-5.181225,8.780787,1.159654,5.905609,-1.281706,9.831802,9.461337,3.207761,3.913671,-6.849481,-1.062923,-7.229238,-1.349035,-5.112790,6.860846,4.281402,6.821879,-6.413168,2.750055,-4.165021,-3.447174,-6.427045,-1.343814,-1.068677,-8.280522,-3.515298,3.189962,-3.300804,3.646228,-8.658891,-9.972727,-6.896936,-8.367412,4.296852,-8.077365,4.918778,9.519211,2.205480,-2.435739,7.422842,-7.908120,8.031871,7.188978,0.486943,-9.999992,4.559929,1.423837,-0.768660,-4.773045,3.776339,6.349756,-2.622622,6.002582,9.610185,2.525864,-3.186258,-3.933334,4.068105,3.043076,-2.255034,6.517732,8.113936,-0.097434,-8.553053,6.586113,6.683085,4.843143,2.031172,6.353290,-1.424151,-4.342286,-5.749314,-6.884061,-2.041828,-0.270179,2.112699,-9.813742,0.430355,4.759702,4.528708,6.227975,6.284006,-8.453905,1.356374,3.701123,-0.479601,-9.783097,-5.069850,9.758673,1.425681,-3.355529,2.032049,6.065942,3.432429], dtype = "float64")#candidate|8276|(180,)|const|float64
var_8277 = relay.var("var_8277", dtype = "float32", shape = (2,))#candidate|8277|(2,)|var|float32
call_8275 = relay.TupleGetItem(func_1191_call(relay.reshape(const_8276.astype('float64'), [6, 2, 15]), relay.reshape(var_8277.astype('float32'), [2,]), ), 1)
call_8278 = relay.TupleGetItem(func_1195_call(relay.reshape(const_8276.astype('float64'), [6, 2, 15]), relay.reshape(var_8277.astype('float32'), [2,]), ), 1)
func_8213_call = mod.get_global_var('func_8213')
func_8214_call = mutated_mod.get_global_var('func_8214')
call_8283 = relay.TupleGetItem(func_8213_call(), 0)
call_8284 = relay.TupleGetItem(func_8214_call(), 0)
func_7479_call = mod.get_global_var('func_7479')
func_7481_call = mutated_mod.get_global_var('func_7481')
call_8289 = relay.TupleGetItem(func_7479_call(), 2)
call_8290 = relay.TupleGetItem(func_7481_call(), 2)
output = relay.Tuple([call_8273,call_8275,const_8276,var_8277,call_8283,call_8289,])
output2 = relay.Tuple([call_8274,call_8278,const_8276,var_8277,call_8284,call_8290,])
func_8292 = relay.Function([var_8277,], output)
mod['func_8292'] = func_8292
mod = relay.transform.InferType()(mod)
var_8293 = relay.var("var_8293", dtype = "float32", shape = (2,))#candidate|8293|(2,)|var|float32
output = func_8292(var_8293)
func_8294 = relay.Function([var_8293], output)
mutated_mod['func_8294'] = func_8294
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4866_call = mod.get_global_var('func_4866')
func_4868_call = mutated_mod.get_global_var('func_4868')
call_8328 = relay.TupleGetItem(func_4866_call(), 0)
call_8329 = relay.TupleGetItem(func_4868_call(), 0)
func_8213_call = mod.get_global_var('func_8213')
func_8214_call = mutated_mod.get_global_var('func_8214')
call_8330 = relay.TupleGetItem(func_8213_call(), 0)
call_8331 = relay.TupleGetItem(func_8214_call(), 0)
func_7716_call = mod.get_global_var('func_7716')
func_7717_call = mutated_mod.get_global_var('func_7717')
call_8356 = relay.TupleGetItem(func_7716_call(), 1)
call_8357 = relay.TupleGetItem(func_7717_call(), 1)
output = relay.Tuple([call_8328,call_8330,call_8356,])
output2 = relay.Tuple([call_8329,call_8331,call_8357,])
func_8387 = relay.Function([], output)
mod['func_8387'] = func_8387
mod = relay.transform.InferType()(mod)
mutated_mod['func_8387'] = func_8387
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8387_call = mutated_mod.get_global_var('func_8387')
call_8388 = func_8387_call()
output = call_8388
func_8389 = relay.Function([], output)
mutated_mod['func_8389'] = func_8389
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8394 = relay.var("var_8394", dtype = "float64", shape = (7, 14, 10))#candidate|8394|(7, 14, 10)|var|float64
uop_8395 = relay.cos(var_8394.astype('float64')) # shape=(7, 14, 10)
func_7929_call = mod.get_global_var('func_7929')
func_7932_call = mutated_mod.get_global_var('func_7932')
var_8402 = relay.var("var_8402", dtype = "uint16", shape = (1890,))#candidate|8402|(1890,)|var|uint16
call_8401 = relay.TupleGetItem(func_7929_call(relay.reshape(var_8402.astype('uint16'), [1890,])), 0)
call_8403 = relay.TupleGetItem(func_7932_call(relay.reshape(var_8402.astype('uint16'), [1890,])), 0)
func_7065_call = mod.get_global_var('func_7065')
func_7068_call = mutated_mod.get_global_var('func_7068')
const_8408 = relay.const(8, dtype = "uint64")#candidate|8408|()|const|uint64
call_8407 = relay.TupleGetItem(func_7065_call(relay.reshape(const_8408.astype('uint64'), [])), 3)
call_8409 = relay.TupleGetItem(func_7068_call(relay.reshape(const_8408.astype('uint64'), [])), 3)
output = relay.Tuple([uop_8395,call_8401,var_8402,call_8407,const_8408,])
output2 = relay.Tuple([uop_8395,call_8403,var_8402,call_8409,const_8408,])
func_8412 = relay.Function([var_8394,var_8402,], output)
mod['func_8412'] = func_8412
mod = relay.transform.InferType()(mod)
mutated_mod['func_8412'] = func_8412
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8412_call = mutated_mod.get_global_var('func_8412')
var_8414 = relay.var("var_8414", dtype = "float64", shape = (7, 14, 10))#candidate|8414|(7, 14, 10)|var|float64
var_8415 = relay.var("var_8415", dtype = "uint16", shape = (1890,))#candidate|8415|(1890,)|var|uint16
call_8413 = func_8412_call(var_8414,var_8415,)
output = call_8413
func_8416 = relay.Function([var_8414,var_8415,], output)
mutated_mod['func_8416'] = func_8416
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4866_call = mod.get_global_var('func_4866')
func_4868_call = mutated_mod.get_global_var('func_4868')
call_8418 = relay.TupleGetItem(func_4866_call(), 0)
call_8419 = relay.TupleGetItem(func_4868_call(), 0)
func_6363_call = mod.get_global_var('func_6363')
func_6365_call = mutated_mod.get_global_var('func_6365')
call_8431 = func_6363_call()
call_8432 = func_6363_call()
output = relay.Tuple([call_8418,call_8431,])
output2 = relay.Tuple([call_8419,call_8432,])
func_8435 = relay.Function([], output)
mod['func_8435'] = func_8435
mod = relay.transform.InferType()(mod)
output = func_8435()
func_8436 = relay.Function([], output)
mutated_mod['func_8436'] = func_8436
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6363_call = mod.get_global_var('func_6363')
func_6365_call = mutated_mod.get_global_var('func_6365')
call_8476 = func_6363_call()
call_8477 = func_6363_call()
output = call_8476
output2 = call_8477
func_8478 = relay.Function([], output)
mod['func_8478'] = func_8478
mod = relay.transform.InferType()(mod)
output = func_8478()
func_8479 = relay.Function([], output)
mutated_mod['func_8479'] = func_8479
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7896_call = mod.get_global_var('func_7896')
func_7898_call = mutated_mod.get_global_var('func_7898')
call_8535 = relay.TupleGetItem(func_7896_call(), 0)
call_8536 = relay.TupleGetItem(func_7898_call(), 0)
var_8537 = relay.var("var_8537", dtype = "float64", shape = (15, 16, 15))#candidate|8537|(15, 16, 15)|var|float64
bop_8538 = relay.logical_xor(call_8535.astype('int32'), relay.reshape(var_8537.astype('int32'), relay.shape_of(call_8535))) # shape=(15, 16, 15)
bop_8541 = relay.logical_xor(call_8536.astype('int32'), relay.reshape(var_8537.astype('int32'), relay.shape_of(call_8536))) # shape=(15, 16, 15)
func_8090_call = mod.get_global_var('func_8090')
func_8094_call = mutated_mod.get_global_var('func_8094')
var_8546 = relay.var("var_8546", dtype = "float64", shape = (450, 2))#candidate|8546|(450, 2)|var|float64
const_8547 = relay.const([7,1,8,-9,-6,8,2,1,7,-9,5,-4,3,-10,-9,4,2,-1,-7,-9,-9,2,5,7,1,9,-1,-1,-1,5,1,-3,-3,1,7,3,-9,7,10,-7,10,-9,9,7,-10,-7,2,-3,-6,-4,-6,-9,2,10,10,3,3,10,9,-1,2,1,10,8,10,-9,9,-3,3,-2,-3,4,-6,-8,-6,5,7,-3,-2,4,-2,-8,10,1,7,8,-8,-5,-9,-9,-2,-2,-2,7,-5,-4,4,8,-3,9,2,-9,-2,-5,7,-5,-10,-9,1,6,9,-2,4,-6,1,-9,5,-5,2,7,6,8,8,-2,-5,6,10,6,-8,-3,10,-1,-7,1,8,9,-9,-4,4,7,-4,-5,10,8,-6,8,2,4,-8,1,4,-2,6,-3,1,2,-2,10,10,4,1,-5,-3,-4,-3,-9,-6,-1,8,-3,-3,-4,3,9,-4,-9,-4,7,3,-8,-8,-3,-9,-7,6,4,8,-6,-2,4,7,10,-8,-1,-10,-7,-8,-5,5,-4,3,-10,-5,-9,1,-4,9,-2,-1,-7,-3,-1,5,6,7,10,-7,8,9,3,-3,10,9,8,-6,2,1,10,1,-7,7,8,-10,-10,-8,-10,-7,2,4,-7,4,10,5,3,-6,-6,-8,9,-5,-8,9,3,-8,-6,-2,1,-4,-3,-2,7,-7,-3,9,6,10,-6,-1,6,1,-10,-5,-1,3], dtype = "uint16")#candidate|8547|(273,)|const|uint16
call_8545 = relay.TupleGetItem(func_8090_call(relay.reshape(var_8546.astype('float64'), [9, 10, 10]), relay.reshape(var_8546.astype('float64'), [9, 10, 10]), relay.reshape(const_8547.astype('uint16'), [273,]), ), 2)
call_8548 = relay.TupleGetItem(func_8094_call(relay.reshape(var_8546.astype('float64'), [9, 10, 10]), relay.reshape(var_8546.astype('float64'), [9, 10, 10]), relay.reshape(const_8547.astype('uint16'), [273,]), ), 2)
uop_8550 = relay.log10(const_8547.astype('float64')) # shape=(273,)
output = relay.Tuple([bop_8538,call_8545,var_8546,uop_8550,])
output2 = relay.Tuple([bop_8541,call_8548,var_8546,uop_8550,])
func_8554 = relay.Function([var_8537,var_8546,], output)
mod['func_8554'] = func_8554
mod = relay.transform.InferType()(mod)
mutated_mod['func_8554'] = func_8554
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8554_call = mutated_mod.get_global_var('func_8554')
var_8556 = relay.var("var_8556", dtype = "float64", shape = (15, 16, 15))#candidate|8556|(15, 16, 15)|var|float64
var_8557 = relay.var("var_8557", dtype = "float64", shape = (450, 2))#candidate|8557|(450, 2)|var|float64
call_8555 = func_8554_call(var_8556,var_8557,)
output = call_8555
func_8558 = relay.Function([var_8556,var_8557,], output)
mutated_mod['func_8558'] = func_8558
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8664 = relay.var("var_8664", dtype = "int64", shape = ())#candidate|8664|()|var|int64
var_8665 = relay.var("var_8665", dtype = "int64", shape = (6, 16, 1))#candidate|8665|(6, 16, 1)|var|int64
bop_8666 = relay.left_shift(var_8664.astype('int64'), var_8665.astype('int64')) # shape=(6, 16, 1)
func_7443_call = mod.get_global_var('func_7443')
func_7445_call = mutated_mod.get_global_var('func_7445')
var_8676 = relay.var("var_8676", dtype = "float64", shape = (1080,))#candidate|8676|(1080,)|var|float64
call_8675 = relay.TupleGetItem(func_7443_call(relay.reshape(var_8676.astype('float64'), [8, 15, 9])), 1)
call_8677 = relay.TupleGetItem(func_7445_call(relay.reshape(var_8676.astype('float64'), [8, 15, 9])), 1)
uop_8678 = relay.acosh(bop_8666.astype('float32')) # shape=(6, 16, 1)
func_1077_call = mod.get_global_var('func_1077')
func_1080_call = mutated_mod.get_global_var('func_1080')
const_8689 = relay.const([-3.371416,-5.571266,-4.375322,4.660311,2.504364,2.189101,-4.673350,6.359944,-5.419819,5.262930,-0.442354,-7.364487,9.921718,5.625003,7.582362,3.689194,5.867575,1.741808,-4.907738,-3.110923,-3.878882,7.593170,-9.765392,4.994224], dtype = "float32")#candidate|8689|(24,)|const|float32
call_8688 = func_1077_call(relay.reshape(const_8689.astype('float32'), [2, 1, 12]))
call_8690 = func_1077_call(relay.reshape(const_8689.astype('float32'), [2, 1, 12]))
func_3616_call = mod.get_global_var('func_3616')
func_3619_call = mutated_mod.get_global_var('func_3619')
call_8697 = relay.TupleGetItem(func_3616_call(relay.reshape(var_8664.astype('uint32'), [])), 2)
call_8698 = relay.TupleGetItem(func_3619_call(relay.reshape(var_8664.astype('uint32'), [])), 2)
bop_8700 = relay.add(uop_8678.astype('float32'), const_8689.astype('float32')) # shape=(6, 16, 24)
output = relay.Tuple([call_8675,var_8676,call_8688,call_8697,bop_8700,])
output2 = relay.Tuple([call_8677,var_8676,call_8690,call_8698,bop_8700,])
func_8706 = relay.Function([var_8664,var_8665,var_8676,], output)
mod['func_8706'] = func_8706
mod = relay.transform.InferType()(mod)
mutated_mod['func_8706'] = func_8706
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8706_call = mutated_mod.get_global_var('func_8706')
var_8708 = relay.var("var_8708", dtype = "int64", shape = ())#candidate|8708|()|var|int64
var_8709 = relay.var("var_8709", dtype = "int64", shape = (6, 16, 1))#candidate|8709|(6, 16, 1)|var|int64
var_8710 = relay.var("var_8710", dtype = "float64", shape = (1080,))#candidate|8710|(1080,)|var|float64
call_8707 = func_8706_call(var_8708,var_8709,var_8710,)
output = call_8707
func_8711 = relay.Function([var_8708,var_8709,var_8710,], output)
mutated_mod['func_8711'] = func_8711
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5311_call = mod.get_global_var('func_5311')
func_5313_call = mutated_mod.get_global_var('func_5313')
call_8737 = relay.TupleGetItem(func_5311_call(), 1)
call_8738 = relay.TupleGetItem(func_5313_call(), 1)
func_921_call = mod.get_global_var('func_921')
func_923_call = mutated_mod.get_global_var('func_923')
var_8751 = relay.var("var_8751", dtype = "float32", shape = (2,))#candidate|8751|(2,)|var|float32
call_8750 = relay.TupleGetItem(func_921_call(relay.reshape(var_8751.astype('float32'), [1, 1, 2])), 1)
call_8752 = relay.TupleGetItem(func_923_call(relay.reshape(var_8751.astype('float32'), [1, 1, 2])), 1)
func_7768_call = mod.get_global_var('func_7768')
func_7771_call = mutated_mod.get_global_var('func_7771')
var_8757 = relay.var("var_8757", dtype = "float32", shape = (91,))#candidate|8757|(91,)|var|float32
call_8756 = func_7768_call(relay.reshape(var_8757.astype('float32'), [7, 13, 1]))
call_8758 = func_7768_call(relay.reshape(var_8757.astype('float32'), [7, 13, 1]))
output = relay.Tuple([call_8737,call_8750,var_8751,call_8756,var_8757,])
output2 = relay.Tuple([call_8738,call_8752,var_8751,call_8758,var_8757,])
func_8793 = relay.Function([var_8751,var_8757,], output)
mod['func_8793'] = func_8793
mod = relay.transform.InferType()(mod)
mutated_mod['func_8793'] = func_8793
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8793_call = mutated_mod.get_global_var('func_8793')
var_8795 = relay.var("var_8795", dtype = "float32", shape = (2,))#candidate|8795|(2,)|var|float32
var_8796 = relay.var("var_8796", dtype = "float32", shape = (91,))#candidate|8796|(91,)|var|float32
call_8794 = func_8793_call(var_8795,var_8796,)
output = call_8794
func_8797 = relay.Function([var_8795,var_8796,], output)
mutated_mod['func_8797'] = func_8797
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6459_call = mod.get_global_var('func_6459')
func_6460_call = mutated_mod.get_global_var('func_6460')
call_8847 = relay.TupleGetItem(func_6459_call(), 1)
call_8848 = relay.TupleGetItem(func_6460_call(), 1)
output = call_8847
output2 = call_8848
func_8859 = relay.Function([], output)
mod['func_8859'] = func_8859
mod = relay.transform.InferType()(mod)
output = func_8859()
func_8860 = relay.Function([], output)
mutated_mod['func_8860'] = func_8860
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8876 = relay.var("var_8876", dtype = "float64", shape = (16, 3, 15))#candidate|8876|(16, 3, 15)|var|float64
uop_8877 = relay.acos(var_8876.astype('float64')) # shape=(16, 3, 15)
func_4182_call = mod.get_global_var('func_4182')
func_4184_call = mutated_mod.get_global_var('func_4184')
call_8889 = func_4182_call()
call_8890 = func_4182_call()
output = relay.Tuple([uop_8877,call_8889,])
output2 = relay.Tuple([uop_8877,call_8890,])
func_8898 = relay.Function([var_8876,], output)
mod['func_8898'] = func_8898
mod = relay.transform.InferType()(mod)
mutated_mod['func_8898'] = func_8898
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8899 = relay.var("var_8899", dtype = "float64", shape = (16, 3, 15))#candidate|8899|(16, 3, 15)|var|float64
func_8898_call = mutated_mod.get_global_var('func_8898')
call_8900 = func_8898_call(var_8899)
output = call_8900
func_8901 = relay.Function([var_8899], output)
mutated_mod['func_8901'] = func_8901
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4262_call = mod.get_global_var('func_4262')
func_4263_call = mutated_mod.get_global_var('func_4263')
call_8939 = func_4262_call()
call_8940 = func_4262_call()
output = call_8939
output2 = call_8940
func_8965 = relay.Function([], output)
mod['func_8965'] = func_8965
mod = relay.transform.InferType()(mod)
mutated_mod['func_8965'] = func_8965
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8965_call = mutated_mod.get_global_var('func_8965')
call_8966 = func_8965_call()
output = call_8966
func_8967 = relay.Function([], output)
mutated_mod['func_8967'] = func_8967
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6363_call = mod.get_global_var('func_6363')
func_6365_call = mutated_mod.get_global_var('func_6365')
call_8973 = func_6363_call()
call_8974 = func_6363_call()
func_7929_call = mod.get_global_var('func_7929')
func_7932_call = mutated_mod.get_global_var('func_7932')
const_8987 = relay.const([[2,-5,-1,10,4,1,9,4,2,5,1,4,-2,2,2,-4,-3,-1,2,8,7,-1,-1,10,-8,-9,-7,-9,-10,1,-8,-6,1,-5,9,10,-5,6,9,-1,3,8,-3,-10,-1,-6,-5,-9,-10,-1,10,-8,-6,10,2,-2,9,6,-8,-4,-9,-7,-3,-5,1,-5,-9,3,-7,1],[-4,6,-5,-5,1,4,-2,-6,-7,9,9,6,-4,5,4,3,-9,1,-3,8,10,4,5,8,-3,10,8,9,-7,-7,10,-8,1,4,-10,8,6,-1,-3,5,-5,-7,-2,-8,3,-9,5,4,9,-10,2,-8,-1,1,9,10,-10,-8,7,1,-1,-3,-8,-6,2,-5,-5,5,3,10],[2,7,-8,6,10,5,8,2,2,-4,-4,-1,1,5,-1,-5,4,7,-6,7,-2,9,-8,-7,-1,-7,9,5,3,3,4,7,7,-2,-8,-9,1,10,3,2,-10,10,-8,-9,-5,-6,-10,9,-8,-10,-9,-9,-1,2,8,-9,-6,8,-3,6,1,9,7,-9,-10,-5,10,-1,-3,-6],[-8,9,-1,7,-8,-4,-7,8,-2,2,6,2,9,6,6,-3,6,-6,3,-2,8,-7,10,10,-2,5,8,-1,-9,-9,10,9,3,4,-1,-6,4,-4,9,-10,6,7,3,1,9,-8,1,7,-5,2,7,4,9,10,4,9,5,4,-5,3,6,-5,1,4,2,1,-2,-3,-5,-1],[2,8,5,7,-8,8,-2,-4,-4,8,-2,5,3,7,2,-4,-7,2,-4,-3,-9,-8,-3,-3,-9,-3,9,-7,8,10,-9,4,9,-7,5,7,3,5,10,-3,9,1,5,-10,-9,5,-7,5,5,8,4,-5,3,-4,-8,-1,4,4,-10,-6,-7,9,10,-9,-8,8,-2,-10,1,-7],[1,-5,-10,8,-5,8,-5,-3,1,-1,-9,-10,10,-8,-3,1,3,-3,-4,10,5,-9,-5,5,-6,-4,5,-10,3,7,4,-2,-3,7,-5,-7,5,1,2,-5,-4,7,-2,-4,4,-4,9,-5,-2,2,-1,10,-6,-7,8,-7,2,10,9,-10,-7,-3,-10,-1,-3,2,3,-2,-2,5],[1,-2,4,-9,-8,-9,-3,3,3,8,8,-9,-3,-10,-8,-6,-5,-3,2,5,1,9,6,-1,-8,4,10,-9,-2,9,3,2,4,8,-9,10,-7,-6,-10,4,8,6,-9,3,5,1,5,-6,1,9,-9,10,7,-10,4,5,-10,-10,-9,10,4,1,-7,10,-3,5,-9,7,-2,-3],[1,-6,2,-9,10,-4,-3,6,4,-5,7,10,-7,-10,-3,5,2,4,9,4,3,6,4,5,7,4,1,10,10,9,4,9,5,-9,-9,6,10,7,5,10,3,8,10,4,-7,-7,-4,6,-10,-6,7,-10,-5,8,10,-3,-4,6,8,-5,-2,-5,-9,-8,7,9,-7,8,-7,-5],[4,9,-9,-3,-5,-10,-1,5,-8,-8,-10,-9,-5,10,-1,8,-3,5,-1,6,7,5,5,-5,-5,-9,1,4,5,9,-1,3,-3,5,-7,2,-1,1,6,-10,-2,-10,9,8,-7,9,-3,1,3,1,-1,5,9,9,-3,-10,9,7,-3,-9,-1,8,1,1,9,5,5,1,5,3],[8,4,-5,-3,-5,9,-1,1,8,7,3,7,-9,6,-10,-3,-4,6,-9,8,-3,1,5,7,1,3,3,4,10,-7,8,-9,-8,-2,5,-10,-6,-2,4,-4,-3,-1,-7,-10,2,9,9,2,4,6,-3,-10,9,8,3,-8,-9,5,-3,-4,4,5,-3,3,-1,1,-5,-3,-4,8],[2,-6,-7,10,-5,5,10,-5,10,-2,-6,5,3,8,8,5,-3,3,-3,10,-7,-9,8,2,1,9,5,1,-1,-5,4,-8,-4,-7,-6,-5,5,-2,8,-10,-5,8,-4,-10,-5,-3,9,-6,-4,8,-1,3,-6,10,6,-5,-9,-3,-10,-8,-7,6,2,-7,-6,-4,-9,-4,1,-1],[3,8,-8,7,-1,5,-5,6,-2,2,9,4,5,4,-1,3,-2,-6,-9,10,-7,1,-5,-9,-9,4,9,7,7,9,8,-2,10,-1,-2,-2,6,-10,8,10,10,-7,-4,-2,8,9,-3,6,-10,6,-10,10,2,6,7,9,-2,8,-3,-6,-4,-6,-7,-4,-1,-6,1,-4,-4,-4],[8,2,-2,-5,3,-5,-6,5,5,-10,-4,-5,2,9,-4,9,-8,4,-1,6,-10,-2,4,-2,9,-5,-8,-7,4,6,-8,-9,-8,-10,-2,5,-9,-10,4,-4,-4,7,1,-10,-1,2,1,-8,6,10,-4,2,1,8,4,10,1,9,1,-7,-6,-4,2,-8,9,8,2,-1,-10,8],[-1,3,6,-7,1,-1,-5,-6,6,7,3,-1,3,-7,10,-8,-6,6,1,10,7,9,-6,-9,10,-10,-9,-7,4,5,9,-5,-4,-6,-4,9,10,1,4,10,6,-4,-2,7,-4,10,-8,8,-7,7,3,-1,3,-8,-2,8,10,-10,4,8,2,3,2,9,8,-1,3,1,-3,-2],[7,10,-3,-10,2,7,6,1,3,-7,8,-1,7,-7,-3,5,9,9,-10,3,9,-3,1,-10,7,-9,-5,-8,-4,-5,3,1,7,-8,-3,8,-10,-4,8,9,-3,-10,9,-3,2,4,-7,-9,-8,-3,7,-10,4,-10,-8,-6,9,9,4,3,-9,-9,-3,-3,5,-10,9,9,-4,8],[10,-4,9,-7,3,-9,8,-1,8,1,-3,-6,-3,-8,6,10,9,6,-7,-1,6,5,7,4,1,9,-10,-6,1,-1,-7,6,-7,4,-7,6,-4,-7,6,-6,-1,-1,-1,-6,-1,9,10,-6,8,-2,-6,10,9,10,-1,6,-3,-4,6,-5,5,-6,1,-3,-3,-8,5,-8,-5,4],[7,9,7,-4,-1,9,-7,4,-1,9,-4,-5,-2,5,-3,5,-7,2,10,-4,-7,9,-9,3,10,4,-6,-4,1,-10,-8,-6,1,-8,8,-2,-8,10,-3,-7,-3,-10,-1,-1,-4,9,-8,-9,-7,-2,1,-9,-6,-6,1,4,8,5,8,4,-7,-6,-9,5,-1,10,-10,1,-7,-5],[-4,-2,-4,-2,5,6,8,-6,-4,5,-8,9,6,-2,-9,-3,9,-3,-4,-7,10,2,3,7,9,-5,8,4,4,-1,4,-5,-3,8,-3,8,-6,3,8,-9,1,3,7,-5,3,3,-2,-2,5,4,-5,-3,-1,-2,-6,6,-6,9,8,4,2,1,-4,-10,-5,10,5,2,-10,4],[7,5,1,-5,-8,10,-6,5,-8,-8,-9,6,2,1,4,1,-7,3,8,7,-8,-7,2,4,-7,6,3,-2,-9,8,-10,3,5,5,7,-9,-3,-1,8,-6,8,-3,-3,7,-9,5,5,-7,5,2,-8,-9,9,7,-5,-4,-6,-5,1,-10,6,10,-3,-10,10,2,-6,8,-1,3],[-7,-1,4,-3,6,7,-9,3,-3,4,-8,-9,9,10,-2,6,-1,-4,2,2,-1,2,-4,-5,2,10,6,-6,7,-5,-10,8,-9,-8,10,-1,-7,-2,-9,-9,6,3,-7,9,5,-2,-6,-8,-3,-7,4,-1,-2,3,-1,4,-10,-9,6,-2,3,-7,4,-5,-2,7,2,-9,4,8],[2,1,1,-10,10,-7,8,2,-9,-9,9,9,8,8,7,5,9,3,10,6,-7,-4,9,7,3,1,5,-7,-7,3,10,5,-8,9,4,-7,-8,-6,-7,7,10,-5,-9,8,-7,9,-2,7,5,-5,1,1,-5,8,-1,-3,4,-8,2,6,8,9,4,-8,-3,-9,7,4,7,3],[7,-9,-5,4,2,9,7,-9,-3,1,2,-10,8,-10,-6,-2,-10,-7,-7,-4,-1,10,10,-1,6,1,-2,10,5,-4,4,5,7,3,-3,5,-2,3,2,-7,8,10,-8,-9,-10,-3,8,-10,-2,-1,10,8,-8,-5,7,-3,-9,4,-3,8,5,-10,1,-2,-5,-5,-8,8,-6,-8],[-3,9,-6,-9,7,4,1,6,6,-5,10,5,-5,-4,3,7,5,-10,-10,-1,8,-10,9,-3,4,5,9,2,2,6,-1,3,-10,6,4,6,3,3,2,7,3,1,-2,6,2,1,-7,-7,9,-7,-3,7,9,-7,7,6,-6,3,-2,3,-3,7,-9,6,-10,-1,6,-8,-9,5],[-9,-7,1,-6,-1,9,5,5,-8,2,-4,2,4,-6,-5,10,-5,2,6,-9,6,2,-1,5,-6,1,3,-3,-1,9,-1,1,-5,9,10,-10,-7,-10,-7,-10,-4,-6,-2,4,-7,3,-4,-3,-9,2,-2,10,5,8,6,7,-6,-9,-2,-6,-7,-7,3,-10,2,-4,4,-6,1,-1],[9,-7,2,7,-10,-5,2,-10,1,7,-1,10,2,-4,-9,2,-6,-6,6,4,-6,4,10,3,3,-7,-1,-10,2,-10,1,-8,2,5,7,5,-8,-1,3,10,-6,-8,5,-3,-2,-7,-6,9,-10,5,2,3,9,8,2,5,6,-6,-3,-7,2,7,-10,-6,-1,-2,-1,4,-10,1],[2,-9,-1,-9,-4,9,-10,-3,-5,5,-10,-8,1,-2,-6,-3,8,7,7,-6,-2,-6,-3,7,10,3,-10,-4,3,-3,8,7,10,-7,-2,9,-8,-10,-5,-9,10,6,3,10,3,-6,1,-9,9,-9,9,-7,-4,9,4,4,-2,-4,10,4,1,-6,-5,-5,-1,5,4,-10,-9,-6],[9,-8,10,-7,-10,-4,10,3,-5,10,-5,-7,-9,5,-5,2,3,-4,-4,5,-3,4,1,1,-8,-1,7,1,-6,-3,-1,5,-7,-9,2,-4,5,10,-7,-1,1,-9,-1,-2,9,9,2,-6,-7,-9,-10,-5,1,2,-4,5,4,-2,4,-3,-1,5,-8,-2,7,-3,-4,-4,4,5]], dtype = "uint16")#candidate|8987|(27, 70)|const|uint16
call_8986 = relay.TupleGetItem(func_7929_call(relay.reshape(const_8987.astype('uint16'), [1890,])), 1)
call_8988 = relay.TupleGetItem(func_7932_call(relay.reshape(const_8987.astype('uint16'), [1890,])), 1)
uop_8993 = relay.acos(const_8987.astype('float64')) # shape=(27, 70)
func_5095_call = mod.get_global_var('func_5095')
func_5097_call = mutated_mod.get_global_var('func_5097')
call_9003 = relay.TupleGetItem(func_5095_call(), 0)
call_9004 = relay.TupleGetItem(func_5097_call(), 0)
func_7929_call = mod.get_global_var('func_7929')
func_7932_call = mutated_mod.get_global_var('func_7932')
call_9005 = relay.TupleGetItem(func_7929_call(relay.reshape(const_8987.astype('uint16'), [1890,])), 2)
call_9006 = relay.TupleGetItem(func_7932_call(relay.reshape(const_8987.astype('uint16'), [1890,])), 2)
func_1731_call = mod.get_global_var('func_1731')
func_1734_call = mutated_mod.get_global_var('func_1734')
var_9012 = relay.var("var_9012", dtype = "uint16", shape = (273,))#candidate|9012|(273,)|var|uint16
call_9011 = func_1731_call(relay.reshape(var_9012.astype('uint16'), [3, 7, 13]))
call_9013 = func_1731_call(relay.reshape(var_9012.astype('uint16'), [3, 7, 13]))
output = relay.Tuple([call_8973,call_8986,uop_8993,call_9003,call_9005,call_9011,var_9012,])
output2 = relay.Tuple([call_8974,call_8988,uop_8993,call_9004,call_9006,call_9013,var_9012,])
func_9015 = relay.Function([var_9012,], output)
mod['func_9015'] = func_9015
mod = relay.transform.InferType()(mod)
mutated_mod['func_9015'] = func_9015
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9016 = relay.var("var_9016", dtype = "uint16", shape = (273,))#candidate|9016|(273,)|var|uint16
func_9015_call = mutated_mod.get_global_var('func_9015')
call_9017 = func_9015_call(var_9016)
output = call_9017
func_9018 = relay.Function([var_9016], output)
mutated_mod['func_9018'] = func_9018
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9025 = relay.var("var_9025", dtype = "int8", shape = (8, 6, 15))#candidate|9025|(8, 6, 15)|var|int8
var_9026 = relay.var("var_9026", dtype = "int8", shape = (8, 6, 15))#candidate|9026|(8, 6, 15)|var|int8
bop_9027 = relay.greater_equal(var_9025.astype('bool'), relay.reshape(var_9026.astype('bool'), relay.shape_of(var_9025))) # shape=(8, 6, 15)
func_9015_call = mod.get_global_var('func_9015')
func_9018_call = mutated_mod.get_global_var('func_9018')
var_9038 = relay.var("var_9038", dtype = "uint16", shape = (13, 21))#candidate|9038|(13, 21)|var|uint16
call_9037 = relay.TupleGetItem(func_9015_call(relay.reshape(var_9038.astype('uint16'), [273,])), 2)
call_9039 = relay.TupleGetItem(func_9018_call(relay.reshape(var_9038.astype('uint16'), [273,])), 2)
output = relay.Tuple([bop_9027,call_9037,var_9038,])
output2 = relay.Tuple([bop_9027,call_9039,var_9038,])
func_9079 = relay.Function([var_9025,var_9026,var_9038,], output)
mod['func_9079'] = func_9079
mod = relay.transform.InferType()(mod)
mutated_mod['func_9079'] = func_9079
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9079_call = mutated_mod.get_global_var('func_9079')
var_9081 = relay.var("var_9081", dtype = "int8", shape = (8, 6, 15))#candidate|9081|(8, 6, 15)|var|int8
var_9082 = relay.var("var_9082", dtype = "int8", shape = (8, 6, 15))#candidate|9082|(8, 6, 15)|var|int8
var_9083 = relay.var("var_9083", dtype = "uint16", shape = (13, 21))#candidate|9083|(13, 21)|var|uint16
call_9080 = func_9079_call(var_9081,var_9082,var_9083,)
output = call_9080
func_9084 = relay.Function([var_9081,var_9082,var_9083,], output)
mutated_mod['func_9084'] = func_9084
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6459_call = mod.get_global_var('func_6459')
func_6460_call = mutated_mod.get_global_var('func_6460')
call_9176 = relay.TupleGetItem(func_6459_call(), 1)
call_9177 = relay.TupleGetItem(func_6460_call(), 1)
func_6104_call = mod.get_global_var('func_6104')
func_6106_call = mutated_mod.get_global_var('func_6106')
const_9182 = relay.const([[3.335323,-9.377861],[-2.762892,3.213433],[-5.093011,-2.449889],[-1.046707,-9.139459],[-7.423254,0.820135],[0.690409,-1.358170],[4.004024,0.175100],[3.973085,-7.606679],[-4.566139,-0.543982],[-2.983447,0.446434],[7.841326,9.327340],[1.866825,-6.928509],[5.068375,-0.920675],[-6.303546,6.236549],[-7.882169,0.688726],[6.554654,7.365699],[-8.085302,9.187706],[5.900328,-7.619928],[-7.541202,8.689426],[1.667977,-7.151178],[5.676289,7.393589],[0.524539,4.167967],[2.173607,3.688087],[-6.994735,-0.787208],[7.775522,9.015908],[-0.392597,6.991726],[-7.609179,-7.607379],[-7.397840,-4.078910]], dtype = "float64")#candidate|9182|(28, 2)|const|float64
call_9181 = func_6104_call(relay.reshape(const_9182.astype('float64'), [14, 2, 2]))
call_9183 = func_6104_call(relay.reshape(const_9182.astype('float64'), [14, 2, 2]))
output = relay.Tuple([call_9176,call_9181,const_9182,])
output2 = relay.Tuple([call_9177,call_9183,const_9182,])
func_9192 = relay.Function([], output)
mod['func_9192'] = func_9192
mod = relay.transform.InferType()(mod)
output = func_9192()
func_9193 = relay.Function([], output)
mutated_mod['func_9193'] = func_9193
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6932_call = mod.get_global_var('func_6932')
func_6934_call = mutated_mod.get_global_var('func_6934')
call_9198 = relay.TupleGetItem(func_6932_call(), 0)
call_9199 = relay.TupleGetItem(func_6934_call(), 0)
output = relay.Tuple([call_9198,])
output2 = relay.Tuple([call_9199,])
func_9204 = relay.Function([], output)
mod['func_9204'] = func_9204
mod = relay.transform.InferType()(mod)
output = func_9204()
func_9205 = relay.Function([], output)
mutated_mod['func_9205'] = func_9205
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9204_call = mod.get_global_var('func_9204')
func_9205_call = mutated_mod.get_global_var('func_9205')
call_9211 = relay.TupleGetItem(func_9204_call(), 0)
call_9212 = relay.TupleGetItem(func_9205_call(), 0)
func_4497_call = mod.get_global_var('func_4497')
func_4500_call = mutated_mod.get_global_var('func_4500')
const_9214 = relay.const([-2.261266,9.905276,6.319199,2.052369,6.459132,-3.359269,-8.500569,-1.696092,-6.867603,6.743047,-0.381190,0.619370,-3.685138,-9.535386,2.813073,7.716129,7.032006,0.201167,-7.791817,-7.565928,5.029355,5.285701,9.445946,-4.683122,0.367430,-9.556276,-8.040937,9.651987,-0.375163,9.805542,-7.359234,-0.276492,7.721351,-9.601974,-2.487772,7.101449,-4.402506,1.256275,7.238309,0.828791,7.242184,-5.234940,7.435472,7.969748,-2.706995,3.291459,6.609138,-3.452684,1.066286,-4.051904,0.675038,9.726929,3.685311,3.062029,6.711000,6.642445,-9.155183,-3.550594,3.675057,6.827902,-7.442174,-1.788166,-0.537806,-1.568380,-3.663425,-5.898681,3.867833,2.133031,-8.733373,4.955771,4.469255,4.837987,-2.850490,9.335143,3.602939,0.119558,5.842886,6.613779,-3.777208,5.108083,-2.809848,-4.873336,-2.609612,-1.219587,-0.762443,-2.173256,-1.373046,4.159307,7.210386,8.855092,-9.980241,3.301098,-4.309869,1.176608,-6.030319,2.429894,-0.943700,-7.874558,8.558016,-7.554060,-6.078891,1.339391,-4.172370,-2.434204,8.291263,-9.268800,-9.226401,0.678128,-8.511368,-9.940074,-9.820385,3.434828,7.513617,2.880991,4.333939,0.099337,-9.677064,-1.611051,2.157443,-5.965404,-6.165130,-4.478625,-5.426924,-4.110588,9.819649,-3.782660,-5.005551,-5.779304,4.152340,7.914098,7.948519,4.223448,1.612508,-5.850736,-1.601035,-3.828095,1.741677,5.525074,-2.558487,-4.174067,-0.127397,7.806001,8.714417,7.598790,6.557810,0.104313,3.644404,-6.098393,-9.936134,1.630366,-9.665755,-0.524894,9.904073,3.414175,9.743695,8.148043,-5.281452,-3.602303,-9.591396,1.768313,-3.573431,5.272230,7.909500,4.916483,-7.662788,-5.959035,-2.628463,7.395649,-7.521391,4.231959,-1.665573,-7.689653,-7.112961,-4.605868,-3.073769,-5.631555,-3.651728,-7.289433,-8.098675,-5.790483,-1.931255,4.699586,7.604949,-1.778842,3.070993,8.280482,-9.070405,9.108117,-8.131562,-0.445104,8.327286,-3.511378,-5.296779,8.239156,-0.798877,9.965570,-2.160408,6.420988,9.541754,9.695841,3.226367,7.220320,-3.920837,-2.789001,-6.195124,7.887930,-1.498626,-8.043738,-8.727735,8.588164,0.387154,-3.755903,8.470065,6.312154,3.877847,8.294748,6.402725,8.434752,5.979180,-9.522154,-8.761534,4.657985,2.543761,8.030821,4.875737,-1.093877,2.225405,-6.925377,-0.446192,-6.765092,8.725075,5.298446,-1.019638,-8.082216,-8.878941,2.451634,6.518653,0.063155,-2.955516,-7.963026,5.239126,-1.861160,7.225507,5.119262,-8.785680,-3.983799,-3.122868,-4.241915,-8.895567,-3.628002,-2.609930,8.867382,8.045220,-2.627589,3.221126,4.768780,-4.836218,5.424709,5.085910,0.599989,-1.507360,9.124413,1.604177,5.030774,-8.169571,4.851043,-5.966241,-5.117697,4.182199,0.003018,-3.250415,-9.433414,3.670815,-5.972424,-8.791746,-5.996753,0.340201,7.469683,-2.230507,-0.202336,1.839564,7.065940,-8.314166,3.997928,-2.718911,-7.629314,0.118323,4.784271,8.585032,7.455339,-3.157018,-3.868979,8.059000,-8.424709,4.179483,0.024149,-8.062348,-6.391120,-7.666879,4.942801,-2.189349,5.519014,-9.849436,-3.141137,3.873891,0.604766,-0.740669,7.221947,-4.039755,2.663735,4.640702,-2.915423,7.868752,-2.984116,-1.794196,-7.967588,-9.189140,-2.288550,8.388159,-8.961349,8.017298,-9.056022,1.346348,0.503440,8.307358,5.360503,6.843069,4.427250,-9.190967,1.747178,2.597206,-1.753553,9.531557,-4.016807,7.815841,8.237734,-7.276428,-1.355214,-0.942089,6.998344,-3.361395,-2.324603,-6.754550,-0.705885,6.502228,2.886730,-5.559606,-3.034366,1.668683,-3.467255,6.620129,3.969414,1.202748,-9.208331,9.889887,4.366586,-0.256902,-8.708948,2.838058,-6.346347,-7.089508,2.424300,9.658243,-9.992682,-1.030312,8.301893,4.327794,-5.587058,0.842766,-6.509739,-2.760135,-0.754006,1.850230,-6.775463,-4.525276,5.738231,-9.676640,1.338304,7.146719,-0.066781,-8.256942,1.296855,-0.477425,-2.263382,-1.574389,1.126466,-8.020616,-6.375595,-3.735957,9.841282,3.604876,2.198578,8.446504,5.904037,-5.184266,2.542945,6.096059,-9.249021,-7.715829,7.351178,1.887269,4.759592,5.861554,8.257649,-4.659357,-8.481621,-9.879389,-7.998705,-7.760633,-1.097472,8.266252,7.457880,-4.669417,7.395726,-6.750219,-1.007359,8.720024,5.066883,1.385826,-1.003761,1.106735,1.026103,-0.013687,-3.715231,6.352243,1.402628,-3.143589,6.789362,6.280371,6.629875,-3.153496,1.335121,2.915349,-8.193215,-8.711430,1.775977,3.000958,5.852296,-7.577457,-7.545789,-5.046550,-8.481435,-0.754362,5.720201,-0.117912,0.123835,-8.528778,-0.830621,4.193694,-9.090125,8.316548,-0.771522,-0.796594,-0.982711,0.255226,-4.196126,1.015337,-3.396023,4.317948,4.810052,-0.705207,-8.688737,2.634405,-6.802819,4.782876,-7.104702,-8.793199,7.563447,-0.414944,2.502304,-5.323752,2.781904,2.857015,6.388814,-5.111600,-1.388530,7.610836,4.283907,-4.334438,8.751051,9.039495,-8.549528,-1.958806,-2.438824,-2.683803,-1.696806,-6.367211,-8.339723,2.034608,-7.669461,-3.525877,-2.533243,8.898389,-8.563255,-4.079825,7.491652,-8.626107,6.144604,8.424894,7.807396,-9.364081,-8.499653,-8.366253,-0.014428,-3.471663,8.688300,5.447115,-9.460354,7.622474,-2.642377,-0.416990,0.279991,-5.330908,-3.097652,7.577427,7.664058,6.717069,-5.509322,-7.341985,-4.483540,4.686360,2.225660,9.098299,5.063710,-8.084972,-3.886025,8.006006,7.470533,1.495020,6.487268,-2.959188,-6.155476,-4.484670,2.867819,6.646065,7.971553,5.052825,8.238810,-8.292786,1.567340,0.035551,0.893896,-8.215971,-7.221652,-8.962907,-8.909289,-1.303363,5.006965,6.757312,6.835250,-1.144966,7.349163,6.346120,-6.192921,3.660596,-8.589731,-4.163459,4.763495,6.342968,-6.885808,5.181144,-7.635663,5.479106,-5.207885,-4.640129,8.285814,-5.867005,-0.089167,4.953800,1.183918,-2.761199,8.027748,2.563146,8.026779,-0.862933,8.374285,-1.328022,1.946169,1.690856,-5.957345,5.725005,-6.769298,-4.831720,2.903811,7.777443,-5.014475,2.653358,-0.115249,-4.157396,0.118007,5.536620,-0.625573,-5.881040,1.107677,3.434124,0.322648,1.091798,-3.343236,-2.305441,-3.766216,-5.893707,8.025329,-2.024156,4.709879,-1.410608,-8.455146,7.617602,5.536801,-9.953137,9.149535,3.514655,6.354050,-7.165951,-6.763035,2.053172,-1.705735,-6.274001,7.548406,-9.664791,1.133172,7.611969,-7.440342,4.692898,-7.492970,0.388735,3.801580,-1.319167,4.540978,8.962535,0.852366,-3.103665,-9.218426,-1.905676,-9.631502,-6.138367,9.296708,6.015871,-8.683868,2.980214,-9.670270,-2.610967,2.252519,-2.518701,8.253902,1.365753,9.386302,0.558217,-9.398786,6.692789,-7.414092,-6.402265,-2.658597,7.758206,-1.492418,3.163988,1.570472,7.813246,8.758269,-3.482256,5.493134,9.042771,3.461944,-7.070048,-6.758521,-8.950375,-8.696300,-6.925192,-5.281110,5.555143,6.692312,-6.398534,3.363315,6.153616,9.245607,0.115017,7.165310,3.858516,6.113908,-3.750205,-6.683102,-4.710364,-8.470593,1.655608,4.425813,2.097749,2.206244,2.376838,2.489935,2.060574,-0.284093,0.506299,-6.066717,6.599866,5.402279,7.389300,-3.277371,-3.650863,3.476912,-4.770950,-4.052406,4.616919,3.051327,-7.899267,6.710717,6.415641,0.862793,-6.202961,-2.833804,6.734007,8.778818,5.716820,8.152889,-5.139660,6.728855,7.112753,1.503819,1.071872,8.814808,9.264586,-0.306467,2.439484,-9.479651,7.568619,2.555464,-2.688865,0.515173,-4.036078,2.318310,0.659420,8.042715,-3.215168,5.090288,9.569160,-2.822814,-5.840835,-2.774106,-9.139259,3.551207,3.880644,-0.387455,0.422884,5.805826,-0.166535,0.055625,9.166918,-1.506691,0.967666,2.631003,2.895038,3.684389,-5.262629,8.169419,-3.489034,-6.488915,2.452466,6.454337,0.820630,-2.316289,3.667697,9.664339,2.680805,9.442401,-7.770797,0.481707,-1.900758,4.653141,-2.349829,1.523065,3.079827,-5.760988,-3.563382,7.123538,-5.400616,-0.874413,2.486644,-7.133170,0.805216,1.436080,5.266052,9.125962,-1.504049,-2.169607,3.421314,0.341018,-5.116457,0.747226,-9.966632,-4.856851,5.556449,-8.290428,-0.418569,2.638014,-1.671237,3.407170,0.812573,9.008674,8.779098,1.332398,8.805543,6.609992,-2.425141,2.595644,-3.239726,-4.402478,-8.708759,-8.323663,0.529296,-7.943795,9.690349,2.772618,0.095225,-9.671333,9.026638,2.440502,-9.588548,-6.541558,-6.924576,7.183618,7.261569,-3.546596,7.902553,-1.686330,-3.331277,-2.845270,7.973474,-9.085925,2.968772,7.014535,-1.208359,0.370376,-2.602328,-7.513505,5.643940,8.167659,4.284847,-6.996512,-7.815425,7.471580,-4.402344,-9.125582,-9.989725,-8.628410,7.156386,-6.895439,-0.750645,6.750637,8.761582,9.696292,6.336190,7.367886,-3.694949,1.129975,-7.325430,5.334220,5.116296,-0.119245,7.618062,7.900590,3.336847,-6.660658,5.066207,-7.916181,7.187984,-8.697182,-1.163483,0.088561,7.577483,5.487278,-4.886870,-2.966149,2.403051,1.016728,6.430478,5.261680,-7.514145,4.281833,9.888133,-9.881011,9.360080,-0.754289,-1.125097,0.023965,-8.802338,2.095351,8.122301,-2.496280,1.250167,9.584215,-0.878253,5.110389,2.643430,0.244880,-8.668988,5.139359,-2.100752,1.273329,-0.219154,-8.090674,3.125906,9.459622,-0.871804,7.053111,8.940549,-8.800707,-3.026934,-6.226289,-6.927664,-0.200960,5.626162,7.375526,6.724705,-5.343713,0.426878,1.116567,-5.165713,1.672657,-9.572289,-5.212888,-2.914467,-1.730800,-1.825162,-4.106880,-2.744831,0.338739,-0.482947,9.820733,9.154506,8.425411,-1.654372,-3.030771,5.978533,7.877912,-1.991914,3.188194,7.487114,1.393694,-4.260636,-2.372188,6.177384,-0.352516,-4.660736,1.018717,0.460978,-9.394612,9.503976,2.226212,1.039945,9.877530,-3.025581,-5.248200,-1.557000,-7.094800,9.501417,0.161920,-5.297193,-4.353675,0.998304,2.044259,0.323314,-9.256578,-3.603641,8.744556,9.720468,6.998427,-2.879921,0.950068,-3.904567,4.541564,-6.601614,-5.028014,0.587871,-3.397760,-3.239698,8.445558,5.027607,7.948827,5.119188,7.514508,0.303021,2.679120,-2.284492,-0.765701,-1.068196,-6.990140,-0.571348,1.033280,-4.362721,-2.349989,5.262424,-8.545113,1.060932,-0.848550,-2.940554,1.028914,6.037373,1.704192,0.191336,-0.129190,-4.923468,2.786495,1.713230,-0.047808,-2.070803,-8.565343,-3.217760,-1.913096,-4.480342,3.452997,2.213197,-2.214375,4.927292,-4.207602,8.127499,-1.515363,-5.817858,-4.908579,-7.434889,9.511283,0.989328,6.935279,-8.322107,-0.423555,-9.061277,6.135973,-6.022993,-7.009895,-8.672193,5.797473,4.843245,8.748807,7.332916,7.935666,-1.264349,-8.802116,2.395509,9.523157,1.958985,-5.041278,1.203918,8.557871,-6.503673,5.701386,1.828055,-3.829207,-0.919199,-4.099222,-7.903885,-1.116390,-4.053830,-0.047216,-1.153309,0.910913,3.530214,1.606662,8.475747,3.999584,8.997814,-6.849740,8.425852,6.819992,-1.902350,3.826074,-8.759658,3.687834,-0.691744,-4.905483,-8.604512,-8.143688,7.705468,-4.057530,9.214323,-1.072870,1.387746,8.005433,-8.172103,-7.621475,-5.500158,2.677116,9.466836,5.589518], dtype = "float32")#candidate|9214|(1080,)|const|float32
call_9213 = func_4497_call(relay.reshape(const_9214.astype('float32'), [8, 15, 9]))
call_9215 = func_4497_call(relay.reshape(const_9214.astype('float32'), [8, 15, 9]))
func_4866_call = mod.get_global_var('func_4866')
func_4868_call = mutated_mod.get_global_var('func_4868')
call_9217 = relay.TupleGetItem(func_4866_call(), 0)
call_9218 = relay.TupleGetItem(func_4868_call(), 0)
output = relay.Tuple([call_9211,call_9213,const_9214,call_9217,])
output2 = relay.Tuple([call_9212,call_9215,const_9214,call_9218,])
func_9224 = relay.Function([], output)
mod['func_9224'] = func_9224
mod = relay.transform.InferType()(mod)
output = func_9224()
func_9225 = relay.Function([], output)
mutated_mod['func_9225'] = func_9225
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5630_call = mod.get_global_var('func_5630')
func_5631_call = mutated_mod.get_global_var('func_5631')
call_9260 = relay.TupleGetItem(func_5630_call(), 0)
call_9261 = relay.TupleGetItem(func_5631_call(), 0)
func_5630_call = mod.get_global_var('func_5630')
func_5631_call = mutated_mod.get_global_var('func_5631')
call_9262 = relay.TupleGetItem(func_5630_call(), 0)
call_9263 = relay.TupleGetItem(func_5631_call(), 0)
func_8090_call = mod.get_global_var('func_8090')
func_8094_call = mutated_mod.get_global_var('func_8094')
const_9277 = relay.const([[-3.047111,-7.853066,4.539469,8.248198,-9.154613,-3.138145,-2.266659,-5.670417,3.937178,7.646810,-3.181647,9.735128,8.936515,-5.939503,8.170716,1.614194,-7.323260,5.011087,9.771294,9.321699,7.062904,-6.121179,6.133630,-5.822198,5.122632,4.362492,-5.964516,-5.371718,-0.502383,-8.257645,-4.021601,9.906398,3.780219,-2.012257,1.021648,-4.490562,-8.199596,-3.353198,2.807300,-0.827529,-0.864718,-2.012772,0.347495,7.946116,8.359590,8.945697,3.617053,4.110567,8.142209,8.882641],[2.635103,7.342194,-8.905924,-1.981801,4.719774,3.610244,-2.437004,-4.583454,-1.868001,5.160029,4.134650,0.166031,2.701040,8.059774,-2.368225,6.898282,-8.087221,4.941375,3.853794,3.536805,7.151224,-7.291388,-0.575141,0.827413,-9.665040,2.845192,0.992143,-2.793988,2.312248,-8.733737,2.686113,5.183433,-0.176096,-7.214800,-6.277317,-3.835121,-6.628959,-3.856522,-5.250612,1.872103,-2.948573,-0.610981,7.859240,6.393914,9.507389,1.678516,8.079766,-3.379795,1.983603,8.543597],[-0.608865,9.299967,0.415899,-4.195332,3.306217,-6.036872,-3.572854,-6.492171,-3.396000,-7.823805,5.406864,-2.477727,-0.641976,-9.506014,2.489942,-3.875241,-2.423248,5.160269,2.179790,1.153496,2.882478,-1.990712,-2.641417,-1.310778,-5.878327,-3.451560,-1.752666,2.992677,-7.280426,-4.344064,2.491047,3.734858,8.441689,5.029161,-5.738991,8.627855,9.263231,5.907652,-4.277859,-6.485387,-5.688603,-6.555094,1.543915,-5.902024,-8.135375,2.816493,0.822307,7.326510,2.432146,9.460050],[3.450218,-5.915351,-3.303461,-5.441207,5.171305,-6.377933,-0.261673,-7.878730,-9.045688,9.367750,8.427584,-8.918927,5.408319,6.475701,6.015007,4.778213,-6.867708,6.388010,3.973340,0.492080,-1.731191,1.039031,1.259661,-6.006143,-5.081027,-6.518760,-8.329354,-2.562564,-0.714191,2.247985,-3.994486,-4.328845,-1.106368,1.539861,8.721483,-9.609436,-9.724757,-6.323092,4.871337,0.082760,-7.072956,7.383724,1.822916,6.752190,-1.382489,2.725847,2.262831,2.145280,5.738113,1.018058],[2.696860,-3.605984,7.064130,9.318265,5.680175,-4.407139,-5.938234,-9.210200,8.401871,2.505850,-8.778302,-9.106747,-6.585118,8.037496,7.085985,1.555122,-1.990693,-6.349323,-6.777498,-6.600073,5.452818,-0.558471,0.416468,1.487624,-7.959176,-2.785956,2.895232,-8.518553,-9.514377,7.823966,-6.141186,-6.895292,-8.439327,4.003547,5.750594,-2.336551,-5.413592,-1.922549,6.122907,1.892859,4.789216,3.295688,-2.536409,-3.026825,7.695388,-7.057532,-2.939990,9.538267,-8.440634,-5.493712],[-1.792791,-8.533811,4.987305,-1.900491,-2.182505,-2.795741,8.010698,-7.469757,4.330057,-2.586959,-7.602142,-9.022570,-4.034084,4.366203,-8.944598,-8.461969,-9.766755,-5.567996,7.618173,-3.977768,-6.939595,3.462223,-5.835396,5.029307,7.615054,1.541088,5.769224,-7.898825,9.990107,-7.669637,8.609208,-4.884146,6.789819,4.586842,-5.191960,-6.661944,-6.140131,-2.014376,7.519251,-9.981346,-5.960136,-7.136659,-1.513495,4.273026,-8.417010,6.002461,-7.645888,8.815092,-5.499610,-2.027792],[-8.267795,4.287210,3.590568,-9.612720,-2.520111,8.750457,-0.648327,-2.144663,-6.400885,-2.598597,2.106608,2.663013,9.556405,6.256556,0.460752,-8.053691,-9.355356,2.850053,-0.153996,-4.982993,-6.135332,8.654883,2.408649,6.053623,2.227135,-1.128021,-4.166791,-6.296366,-2.870700,0.740000,1.903919,1.723374,-6.028604,3.386568,-0.994797,1.902655,3.361903,0.969802,-7.790936,8.864478,-4.803046,-4.134488,4.440179,2.677471,-0.945351,8.098063,-8.377104,5.221642,3.610283,1.369838],[-7.017913,3.893925,6.713444,-4.541875,2.371339,1.594954,5.073321,-7.692990,-4.481360,-1.604510,7.527576,0.788767,-5.717062,-5.787919,6.858290,-1.075265,-6.339612,-4.645530,-9.573843,9.807737,-0.603786,-8.516143,-0.185354,-9.273232,-0.336432,3.633165,-1.663219,1.409491,5.563686,7.377116,-0.763976,-8.441687,1.145871,-3.482314,5.243742,1.476938,0.846247,9.090375,3.435901,-3.900691,-5.689525,9.864201,-5.814572,7.673461,-9.399176,9.861553,-5.535892,1.336582,-9.435204,-6.510745],[5.259333,8.895574,2.705593,-9.343602,-9.706127,-5.187644,-1.426686,4.677247,-5.009270,-3.641349,7.371654,3.375148,6.261446,7.482267,9.183298,1.394846,-0.386488,0.529924,4.842554,-9.493070,-2.260103,-3.987648,-6.741578,-0.729994,-2.193544,2.932973,-4.428823,-0.693625,0.675246,0.181083,8.322194,5.683063,6.089208,1.481745,-8.970762,-5.583166,-2.435549,7.252818,-0.170569,9.421126,-8.873049,7.725261,-7.015089,-1.729285,9.731867,-7.799834,-7.991329,-7.632994,-4.607264,-0.823977],[6.826373,7.020059,9.753775,-7.098541,-9.920152,-2.303687,-8.831096,7.027402,9.488942,-4.711908,3.913464,3.087215,-7.157677,8.844607,5.787491,0.301373,-9.257780,-6.451735,9.959666,-2.829876,3.665800,-1.849787,-0.636286,-9.075100,8.932251,-3.478312,6.632342,-6.978508,-8.087012,-6.160225,8.050521,-9.007566,-6.053834,6.836303,-7.467753,-3.399656,8.692460,1.026352,-7.042652,6.679218,9.875765,1.601723,-7.453337,-8.901009,6.516435,-5.516032,9.582496,0.144468,-1.974980,2.063623],[-8.588331,-6.628542,2.847474,7.555395,4.763292,2.630348,-1.314690,5.686160,2.417444,6.573678,-4.581942,2.631081,8.418486,8.787287,-1.469321,-5.342322,-7.532769,-9.154294,-7.803491,-4.936858,-7.211175,-6.096115,-4.474461,3.423569,-3.224503,-4.778562,8.411495,-0.795374,-7.184382,-8.449217,-9.430924,7.967195,2.842705,-4.457609,8.036527,6.914886,6.770860,2.631946,8.441819,7.255986,2.569358,-0.718238,5.595649,9.782624,-3.451687,-1.799766,-3.045617,-9.111461,1.239247,-6.920788],[1.208962,8.770701,0.624938,-9.162397,6.637995,-6.435614,1.827408,9.615219,3.633549,5.419944,-8.104894,4.290612,8.082892,-7.504813,-1.493800,-9.325704,-4.235263,-9.847695,-2.458170,-0.086182,-3.251720,-1.936495,6.805491,6.860520,9.918294,3.743241,-3.202989,-0.982243,-4.341438,8.777026,3.639173,-8.059531,6.274669,-1.121794,1.213744,2.338851,1.316012,9.326359,-2.894829,-3.885662,1.298152,2.144731,-5.289123,-9.210037,4.185212,3.093798,3.541223,-0.931521,3.542955,-4.597037],[-1.411184,-7.107267,8.708591,-5.847866,-9.108093,8.099829,-9.956443,-5.611970,6.131070,4.850239,-9.375562,8.461240,-2.832771,-3.030484,-5.129765,-6.637094,-9.569823,9.399548,9.719839,2.787802,-0.240314,5.677666,-3.131336,5.301959,-4.483763,-9.031233,1.349970,-6.247385,2.960330,2.661990,3.553702,-9.395560,2.074804,-4.775021,-6.701224,-0.138842,-8.946952,1.585253,6.517310,-0.861382,-6.608318,-1.500864,1.251613,4.653315,9.190170,-8.288577,2.917540,4.050447,-6.135200,5.127716],[5.897810,3.851280,2.434169,-2.349329,8.199895,5.014217,8.421041,-1.664879,-2.813052,-5.371213,-9.632953,8.912709,6.826264,-2.684019,-3.684113,-4.729082,-1.464703,5.538554,8.833995,-7.443380,8.101833,-6.901223,-0.539216,0.466492,-7.886532,-3.274035,-5.390901,-5.047358,-2.438428,-4.889755,-3.694219,0.180608,-8.723466,4.148013,-1.565665,2.322780,8.720801,1.648722,-2.081116,-4.047455,-0.727576,2.955980,-7.756477,-5.803213,6.266209,3.230489,-3.617122,-8.225913,-5.250962,-7.626762],[9.748910,-8.126190,2.851650,-3.158106,-5.577019,-2.252053,-9.466228,4.761656,-4.965207,0.534743,-7.450271,4.198279,9.671411,-4.805549,1.327278,9.117236,-8.059872,7.046739,3.432374,9.281974,7.516043,-8.473399,2.254973,-4.315230,7.597202,6.593227,5.722418,-3.190703,-6.618829,-6.876239,9.229970,9.925204,2.850003,5.382818,-8.088301,-7.935938,2.015324,7.342009,-3.304418,-2.388290,-2.374070,-7.151131,-4.631376,-8.741185,5.294234,6.357275,-1.235050,-2.259897,5.630707,-9.359405],[-3.669939,8.746770,1.985389,-0.246099,6.298199,-3.129816,0.806279,0.003405,4.614677,-4.704547,-6.909993,-2.532063,-6.993860,-0.206897,-5.144925,-5.205842,1.788794,-3.924034,-3.663353,-3.980441,8.993318,9.082967,1.989164,1.112509,5.009140,2.172850,8.154649,-2.730098,-6.714277,3.458129,-1.367788,1.826695,-7.729189,-0.514625,6.385624,-9.276455,3.673109,1.574137,-9.695906,-8.183730,-4.522602,0.474629,0.217855,-0.157149,-7.780596,-9.405020,8.580887,-4.982897,-2.432708,-2.848679],[1.336164,-8.794363,4.472058,-6.205051,-2.162132,8.584650,-6.110516,-2.002488,-4.892604,-7.917970,2.380503,4.470530,-4.519239,-2.301351,9.853976,-8.679227,6.614473,4.105075,-5.922061,-9.279382,-5.406720,-2.307067,-0.017906,-0.377025,6.669791,8.189828,-4.981327,3.408583,-8.408198,7.418314,-0.403635,-1.057401,-6.257885,-1.064519,2.345023,-8.093549,-9.333510,9.704615,5.047305,-5.065033,-6.095001,4.019226,-4.965724,7.766873,-0.234068,-7.322975,5.891758,-3.511313,4.677641,-2.416285],[7.284874,-8.237377,1.174595,-3.480156,-6.320451,0.127639,-8.947075,7.893598,9.654484,9.943808,4.911622,2.378442,2.880776,-9.057105,-1.232257,0.987895,0.061981,-5.639996,0.091270,-5.129531,4.898222,-4.246049,-6.374559,-3.060886,5.443406,-4.416378,-5.081764,5.582233,1.404846,-9.137388,-1.709462,-4.455094,5.044516,3.565785,6.594944,-1.714513,4.150499,8.060813,-6.436846,-3.481064,3.574918,-1.953924,-7.490014,9.101044,-0.319529,9.209233,-6.619531,-4.158619,-2.037300,-2.619189]], dtype = "float64")#candidate|9277|(18, 50)|const|float64
var_9278 = relay.var("var_9278", dtype = "uint16", shape = (273,))#candidate|9278|(273,)|var|uint16
call_9276 = relay.TupleGetItem(func_8090_call(relay.reshape(const_9277.astype('float64'), [9, 10, 10]), relay.reshape(const_9277.astype('float64'), [9, 10, 10]), relay.reshape(var_9278.astype('uint16'), [273,]), ), 2)
call_9279 = relay.TupleGetItem(func_8094_call(relay.reshape(const_9277.astype('float64'), [9, 10, 10]), relay.reshape(const_9277.astype('float64'), [9, 10, 10]), relay.reshape(var_9278.astype('uint16'), [273,]), ), 2)
func_5854_call = mod.get_global_var('func_5854')
func_5856_call = mutated_mod.get_global_var('func_5856')
call_9283 = func_5854_call()
call_9284 = func_5854_call()
func_7479_call = mod.get_global_var('func_7479')
func_7481_call = mutated_mod.get_global_var('func_7481')
call_9286 = relay.TupleGetItem(func_7479_call(), 0)
call_9287 = relay.TupleGetItem(func_7481_call(), 0)
func_7929_call = mod.get_global_var('func_7929')
func_7932_call = mutated_mod.get_global_var('func_7932')
const_9307 = relay.const([3,-3,4,3,-10,2,-10,-8,-8,-2,-5,-1,6,-9,4,-8,-5,-8,-8,3,-7,-4,9,-3,-5,10,-5,2,-8,6,1,9,-6,7,9,2,6,-10,-7,4,2,-1,8,-8,4,-6,-7,-1,3,7,-9,-5,-6,-1,-2,5,10,-8,-9,5,-10,8,-8,-8,-8,-1,5,-3,-5,-4,-1,8,2,2,-4,-5,-7,-2,2,6,-5,9,4,-1,-6,5,-1,-1,-3,-6,-7,3,-4,1,-5,7,3,-9,10,8,-2,-5,8,-6,8,-9,-3,-1,7,4,-8,-1,-1,-9,-10,-6,2,5,-9,4,-7,4,-7,-8,8,6,4,-6,10,5,4,4,5,7,-4,-3,4,-10,2,-5,9,6,-3,-8,8,6,-7,10,-2,7,-10,7,-6,6,5,10,-7,7,9,-4,1,2,10,1,1,-8,-6,4,1,4,1,10,-10,-7,-4,-9,1,-4,-3,3,-1,-4,5,1,-10,-2,8,-1,8,-9,-1,7,10,-4,-6,-9,-7,6,-1,-10,9,-1,5,-7,-10,-5,-5,-4,6,1,5,1,-1,6,1,2,-1,8,7,-8,2,-7,-8,5,8,-5,4,-5,-2,-8,10,-4,-4,-4,6,7,5,-6,-6,-6,4,5,9,2,4,2,-9,2,9,-4,10,-4,7,10,8,6,-7,-2,3,-6,4,-1,-6,-6,-3,-1,-2,-9,-4,2,5,6,1,8,1,-2,-6,6,8,-9,4,3,5,-7,-1,1,-7,7,6,-3,-1,-10,8,1,9,4,-1,1,10,-5,7,8,4,3,3,6,10,3,3,-1,-7,8,-3,4,-9,6,-6,1,10,-1,-1,-8,-5,7,8,-2,5,3,-1,3,7,-5,2,4,-1,6,3,2,-9,-6,9,2,-8,-3,-1,10,-6,10,2,-1,-2,-6,4,-5,-7,2,8,1,8,-6,10,8,10,3,5,-6,2,-1,10,-9,-6,-4,-4,2,-8,-4,6,-2,1,10,-9,10,10,10,-7,8,10,8,8,-8,10,-3,-4,-1,-2,1,-9,5,-4,9,3,-7,-3,9,-4,-8,-10,1,7,1,4,3,4,-1,2,-2,-1,-10,-3,-4,9,-3,4,-5,5,10,-9,-1,2,3,-5,-1,-5,9,-1,7,6,8,-4,-10,-8,-8,-7,2,-4,3,10,-4,-4,-5,9,-4,-5,-6,7,10,8,4,9,-5,9,-2,10,7,2,-7,-5,-5,-5,-9,-9,-8,7,2,-8,-8,-5,-7,8,-6,-6,-3,-8,-1,-1,3,-9,7,-5,-9,8,-9,10,7,-1,-2,8,8,-4,-8,1,-5,6,-4,10,3,3,-10,-1,-4,-10,9,-10,5,-8,-10,-6,-7,4,-1,-5,4,-8,2,1,-2,-2,10,-8,7,8,4,2,-6,1,3,-4,5,-1,-3,-4,-5,6,10,2,9,-7,-6,4,-5,9,-2,-5,9,5,10,9,-4,3,-10,-3,5,-3,7,10,2,-10,-6,-3,-2,-1,6,10,-6,5,-5,4,-8,-10,-2,-9,-2,1,5,-5,2,9,-5,-9,-1,-6,5,-8,-6,-10,-9,-5,7,10,-1,10,2,-1,-10,9,-7,8,4,-4,4,-1,2,-3,5,2,-10,-9,-2,1,-1,3,-5,9,-7,-4,-9,-4,-2,-2,10,-2,8,3,2,-2,-4,2,-6,-1,-7,5,-9,-7,-6,9,-4,-6,-2,2,1,-8,1,-4,-2,1,9,5,5,-10,-2,-6,-10,1,-9,8,9,7,-6,8,-8,-7,-4,-5,-4,-1,2,5,10,-3,-10,-1,7,-10,8,2,6,-3,2,1,-2,4,-10,7,-6,-6,-1,7,4,-10,-7,10,-2,6,-2,-1,9,-10,6,-6,-8,-1,1,7,-9,-2,9,-2,7,-6,4,3,5,-2,-1,-7,3,7,8,-3,-1,3,-9,3,-2,-4,8,-2,3,6,-4,-2,-1,-3,3,7,-3,7,5,9,-9,-6,2,-2,1,6,10,-4,-9,1,-5,9,9,3,4,-5,-4,-1,-10,1,2,-9,-7,5,-10,-7,7,6,-2,3,-8,10,-9,10,6,3,9,10,4,2,-6,-10,7,-10,-2,6,1,-6,8,2,-7,2,6,4,1,-6,8,-9,-2,5,-4,-6,6,-9,-9,-8,7,-4,6,-7,-7,2,-6,2,4,2,8,-4,1,9,-6,8,-9,-10,-4,9,-7,7,-6,1,-8,-7,-4,-1,6,-7,-8,-8,9,1,-3,3,5,-3,-2,-10,-1,5,8,10,-5,-4,2,-10,-10,-4,-5,-2,8,-1,4,-1,6,10,-3,8,9,-2,6,2,5,8,3,-2,9,-3,5,-8,9,7,-10,9,8,10,3,9,-8,-10,9,3,-5,1,-10,1,6,-1,-4,4,2,-6,-6,7,-2,-4,-8,10,-5,3,9,5,3,-2,6,7,-9,-7,7,-10,8,1,3,1,-4,3,8,9,-4,8,-6,-10,-7,-2,10,5,-8,-5,-10,8,9,-7,9,-10,-6,3,-3,-7,-1,-5,2,10,-8,10,-1,2,-10,-9,-5,-10,-7,-3,9,1,10,10,7,4,4,3,-4,5,4,-3,-3,9,9,10,-1,-7,-8,5,-8,1,4,-7,-9,-2,-10,-1,9,5,-10,-5,6,4,-8,1,9,-10,-6,-1,3,5,10,6,-5,-9,-6,8,6,-7,-2,-10,10,3,-7,10,-10,3,10,3,-10,2,7,-9,-3,-5,5,-5,-7,3,-3,-6,-6,6,8,-5,2,-4,9,-9,-10,-9,-4,-1,1,7,-5,-8,1,10,1,-8,3,1,-3,-6,7,-7,-10,-3,2,-4,2,1,5,-3,-7,1,-2,5,5,10,7,-4,-8,7,-7,-1,6,-4,-5,9,-7,3,-5,7,-10,-3,-4,5,3,2,-6,3,-4,2,6,-1,-4,-4,-5,-8,-6,5,7,2,3,-4,-8,8,3,-1,-1,-4,9,3,-9,-8,-1,4,2,-2,1,-3,-2,-1,10,6,4,-8,7,6,2,10,-8,5,-4,6,-2,6,-9,1,-9,-3,-8,-10,10,-3,-4,10,-1,4,10,1,-9,6,-6,-7,5,-1,-1,-9,7,-5,-7,2,10,3,6,-3,-3,-10,7,3,7,6,3,1,9,10,1,-4,-8,2,-3,6,4,-4,-5,-5,-10,-2,-8,4,9,5,-8,10,6,-9,-6,4,2,1,4,4,6,-7,-9,4,-7,-7,-8,10,-10,2,5,-6,-3,-8,4,10,-8,-6,8,-4,-7,-9,-1,-8,9,6,7,2,-10,6,10,4,3,-4,10,-7,2,-3,-6,-3,2,-8,3,10,10,-7,-1,8,-3,-8,-4,-1,10,1,-4,10,8,-6,8,6,1,8,-6,-10,3,-3,1,-5,-5,-9,-3,-6,7,-3,9,2,-5,-4,9,2,-1,10,7,5,4,-3,-4,-9,5,5,1,4,10,-9,-3,2,3,8,-7,-4,-8,1,9,3,2,-8,5,-1,1,5,-8,-9,-7,5,-1,-7,9,1,8,4,1,-6,-5,3,-6,1,3,7,7,6,-2,-7,2,8,9,1,3,8,2,-5,10,-4,-6,-5,-4,10,-7,-6,-2,-9,8,3,-7,9,-2,10,10,7,5,-6,-6,-7,-1,1,9,8,-2,-9,2,10,2,-10,-4,-6,-10,9,1,10,-1,7,5,-7,6,7,4,4,7,-10,-10,9,-3,9,-6,-7,-1,7,10,2,10,6,7,3,5,-5,2,-8,-4,-8,-7,5,9,-4,6,7,-7,3,6,-8,-9,-9,-6,-5,-3,1,8,-7,-10,8,-9,3,1,-2,1,-9,4,3,-4,-2,-3,-6,-9,-8,4,-4,-2,-10,2,-1,1,-5,-7,-5,-7,5,-8,-1,-3,-5,-6,1,5,-2,-3,-1,-4,-9,5,9,1,-1,6,-7,10,10,-2,-5,-2,5,3,-10,-4,-5,1,10,9,-4,-3,8,4,1,-8,-2,-7,-6,4,-5,-4,-7,6,8,9,2,2,5,-7,9,-5,8,9,10,9,-4,-8,8,10,-9,8,3,1,-6,-6,-4,8,-1,-5,2,8,8,7,-10,-4,6,-10,3,-6,-2,6,3,9,10,-7,-9,-6,-1,-3,-10,9,10,-2,5,-2,2,4,-1,-9,6,-3,1,1,4,2,-2,7,-2,-5,-1,-3,-4,-8,9,-5,-5,9,-8,9,-6,-6,-4,10,-6,-3,3,-1,3,3,-9,7,7,-2,-6,-8,4,1,-1,-3,8,-3,2,-2,-5,8,-3,8,9,-6,-2,7,10,-1,-1,-7,10,1,-6,-10,-8,-5,-1,1,-4,7,3,4,-4,-4,1,3,5,-5,9,-2,-4,-7,1,-7,7,4,9,-3,3,7,1,5,-6,-7,-8,3,7,6,-8,-4,6,2,4,-6,5,10,5,-3,10,7,10,-7,-10,2,6,2,4,5,1,6,7,3,-5,-5,8,-10,-2,3,2,7,-3,-9,-2,6,8,-1,-2,-8,-3,-10,3,-7,-1,-6,-8,-2,-1,-10,7,-8,10,1,8,-8,10,-1,-10,-9,-3,-3,-7,1,-5,-3,-9,-7,-2,2,8,10,8,3,4,-10,-9,7,7,4,-1,4,9,10,2,3,3,-7,9,-10,4,-7,2,-8,1,3,-2,3,-2,5,6,1,-3,10,-10,4,-2,-6,-6,5,10,-1,-7,-4,-7,3,8,5,-4,-3,7,8,-10,-4,-1,-6,-9,3,-1,-6,-5,4,-3,-5,5,-9,9,2,4,-8,6,-7,-10,10,-7,-2,5,8,-6,-5,2,3,-3,-3,-2,-1,-4,5,9,9,-2,-8,8,3,8,-5,3,-4,-5,-1,-7,-7,-3,6,8,7,6,-4,-3,8,-6,4,1,6,-4,-4,1,1,-2,5,-4,-9,-8,-7,-2,2,10,-9,-5,-8,2,-7,1,-9,5,-4,-6,1,6,5,-3,-9,-7,5,-1,-9,4,8,-4,-2,-10,-9,-9,-10,-8,-6], dtype = "uint16")#candidate|9307|(1890,)|const|uint16
call_9306 = relay.TupleGetItem(func_7929_call(relay.reshape(const_9307.astype('uint16'), [1890,])), 0)
call_9308 = relay.TupleGetItem(func_7932_call(relay.reshape(const_9307.astype('uint16'), [1890,])), 0)
output = relay.Tuple([call_9260,call_9262,call_9276,const_9277,var_9278,call_9283,call_9286,call_9306,const_9307,])
output2 = relay.Tuple([call_9261,call_9263,call_9279,const_9277,var_9278,call_9284,call_9287,call_9308,const_9307,])
func_9310 = relay.Function([var_9278,], output)
mod['func_9310'] = func_9310
mod = relay.transform.InferType()(mod)
var_9311 = relay.var("var_9311", dtype = "uint16", shape = (273,))#candidate|9311|(273,)|var|uint16
output = func_9310(var_9311)
func_9312 = relay.Function([var_9311], output)
mutated_mod['func_9312'] = func_9312
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6932_call = mod.get_global_var('func_6932')
func_6934_call = mutated_mod.get_global_var('func_6934')
call_9340 = relay.TupleGetItem(func_6932_call(), 0)
call_9341 = relay.TupleGetItem(func_6934_call(), 0)
func_4262_call = mod.get_global_var('func_4262')
func_4263_call = mutated_mod.get_global_var('func_4263')
call_9367 = func_4262_call()
call_9368 = func_4262_call()
func_5382_call = mod.get_global_var('func_5382')
func_5384_call = mutated_mod.get_global_var('func_5384')
call_9371 = func_5382_call(relay.reshape(call_9367.astype('float64'), [8, 15, 9]))
call_9372 = func_5382_call(relay.reshape(call_9367.astype('float64'), [8, 15, 9]))
output = relay.Tuple([call_9340,call_9367,call_9371,])
output2 = relay.Tuple([call_9341,call_9368,call_9372,])
func_9377 = relay.Function([], output)
mod['func_9377'] = func_9377
mod = relay.transform.InferType()(mod)
mutated_mod['func_9377'] = func_9377
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9377_call = mutated_mod.get_global_var('func_9377')
call_9378 = func_9377_call()
output = call_9378
func_9379 = relay.Function([], output)
mutated_mod['func_9379'] = func_9379
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9432 = relay.const([[[-8.673562,5.244055,-0.394599,4.489915,9.579901,-0.763282],[-0.281843,1.924610,7.071040,-9.938333,7.303964,-7.765535],[3.337077,-0.702443,-6.958725,9.102485,2.207728,5.109485],[1.311559,6.250934,-2.639876,-4.336710,3.674401,-9.048910],[1.984341,5.634511,-0.809299,5.174995,1.767604,8.672285],[0.949296,-6.095155,8.521155,-5.726027,-1.517356,4.728818],[1.035844,-3.148649,6.125982,-6.211657,8.575741,-2.856756],[1.908085,2.610091,0.044723,-3.806334,-8.244512,3.887451],[2.077754,-1.310404,9.429071,-1.759884,5.855922,-6.413399],[1.499688,-5.684969,-6.831745,-1.833553,-5.098458,9.928300],[-1.233434,-0.710365,-9.255030,-9.290456,0.565898,-6.281127],[2.651819,-1.454093,9.091802,4.338691,3.785418,3.658444],[-4.029238,1.634113,5.950094,-4.411471,-5.293622,-4.271979]],[[6.227919,-5.415631,-9.643989,3.382850,9.139123,-7.960008],[-4.827567,-6.974034,8.994351,-4.439247,6.342114,-7.595360],[-4.462804,6.148279,6.692189,2.690851,-4.524486,-1.791045],[-2.876281,-6.111350,6.999598,-4.620207,7.711188,1.663398],[-4.227699,-9.113393,3.951452,1.481052,-2.176073,-3.681993],[-5.389886,-1.388104,-2.553686,4.980812,-3.353190,-8.176787],[0.598803,-6.782557,6.493092,4.986320,8.760972,-2.467356],[4.087117,-8.922324,-9.716222,8.934877,-5.556483,9.540774],[-7.305616,-3.803058,4.531396,-2.953797,5.094623,9.639427],[-7.672840,1.823733,-1.827930,-8.385528,0.737396,5.457319],[-8.381552,-7.504046,-6.084782,3.256018,0.369557,-5.627574],[-0.479950,7.604357,7.880795,8.126599,9.463019,2.900178],[-8.717678,5.615841,-3.577770,9.873110,-2.221913,6.985854]]], dtype = "float64")#candidate|9432|(2, 13, 6)|const|float64
uop_9433 = relay.cosh(const_9432.astype('float64')) # shape=(2, 13, 6)
func_7479_call = mod.get_global_var('func_7479')
func_7481_call = mutated_mod.get_global_var('func_7481')
call_9435 = relay.TupleGetItem(func_7479_call(), 2)
call_9436 = relay.TupleGetItem(func_7481_call(), 2)
uop_9442 = relay.log(uop_9433.astype('float64')) # shape=(2, 13, 6)
output = relay.Tuple([call_9435,uop_9442,])
output2 = relay.Tuple([call_9436,uop_9442,])
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
	relay.transform.ToBasicBlockNormalForm(),
	relay.transform.FuseOps(3),
	relay.transform.DefuseOps(),
	relay.transform.SimplifyExpr(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_328 = relay.var("var_328", dtype = "float64", shape = (11, 5, 11))#candidate|328|(11, 5, 11)|var|float64
uop_329 = relay.sigmoid(var_328.astype('float64')) # shape=(11, 5, 11)
output = relay.Tuple([uop_329,])
output2 = relay.Tuple([uop_329,])
func_339 = relay.Function([var_328,], output)
mod['func_339'] = func_339
mod = relay.transform.InferType()(mod)
mutated_mod['func_339'] = func_339
mutated_mod = relay.transform.InferType()(mutated_mod)
var_340 = relay.var("var_340", dtype = "float64", shape = (11, 5, 11))#candidate|340|(11, 5, 11)|var|float64
func_339_call = mutated_mod.get_global_var('func_339')
call_341 = func_339_call(var_340)
output = call_341
func_342 = relay.Function([var_340], output)
mutated_mod['func_342'] = func_342
mutated_mod = relay.transform.InferType()(mutated_mod)
const_465 = relay.const([[[-2.478405,7.184309,9.474442,-2.301762,9.460610,-0.332345,-6.663641,3.342523]],[[5.691947,-7.490777,-9.749152,4.944695,-0.411712,-2.969700,-0.914151,4.947955]]], dtype = "float64")#candidate|465|(2, 1, 8)|const|float64
var_466 = relay.var("var_466", dtype = "float64", shape = (2, 12, 8))#candidate|466|(2, 12, 8)|var|float64
bop_467 = relay.power(const_465.astype('float64'), var_466.astype('float64')) # shape=(2, 12, 8)
output = bop_467
output2 = bop_467
func_484 = relay.Function([var_466,], output)
mod['func_484'] = func_484
mod = relay.transform.InferType()(mod)
mutated_mod['func_484'] = func_484
mutated_mod = relay.transform.InferType()(mutated_mod)
var_485 = relay.var("var_485", dtype = "float64", shape = (2, 12, 8))#candidate|485|(2, 12, 8)|var|float64
func_484_call = mutated_mod.get_global_var('func_484')
call_486 = func_484_call(var_485)
output = call_486
func_487 = relay.Function([var_485], output)
mutated_mod['func_487'] = func_487
mutated_mod = relay.transform.InferType()(mutated_mod)
var_661 = relay.var("var_661", dtype = "float32", shape = (11, 4, 16))#candidate|661|(11, 4, 16)|var|float32
uop_662 = relay.asinh(var_661.astype('float32')) # shape=(11, 4, 16)
var_666 = relay.var("var_666", dtype = "float32", shape = (11, 4, 16))#candidate|666|(11, 4, 16)|var|float32
bop_667 = relay.less(uop_662.astype('bool'), relay.reshape(var_666.astype('bool'), relay.shape_of(uop_662))) # shape=(11, 4, 16)
output = bop_667
output2 = bop_667
func_674 = relay.Function([var_661,var_666,], output)
mod['func_674'] = func_674
mod = relay.transform.InferType()(mod)
mutated_mod['func_674'] = func_674
mutated_mod = relay.transform.InferType()(mutated_mod)
func_674_call = mutated_mod.get_global_var('func_674')
var_676 = relay.var("var_676", dtype = "float32", shape = (11, 4, 16))#candidate|676|(11, 4, 16)|var|float32
var_677 = relay.var("var_677", dtype = "float32", shape = (11, 4, 16))#candidate|677|(11, 4, 16)|var|float32
call_675 = func_674_call(var_676,var_677,)
output = call_675
func_678 = relay.Function([var_676,var_677,], output)
mutated_mod['func_678'] = func_678
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1101 = relay.var("var_1101", dtype = "float64", shape = (1, 3, 2))#candidate|1101|(1, 3, 2)|var|float64
var_1102 = relay.var("var_1102", dtype = "float64", shape = (16, 3, 2))#candidate|1102|(16, 3, 2)|var|float64
bop_1103 = relay.floor_divide(var_1101.astype('float64'), var_1102.astype('float64')) # shape=(16, 3, 2)
func_339_call = mod.get_global_var('func_339')
func_342_call = mutated_mod.get_global_var('func_342')
var_1107 = relay.var("var_1107", dtype = "float64", shape = (11, 55))#candidate|1107|(11, 55)|var|float64
call_1106 = relay.TupleGetItem(func_339_call(relay.reshape(var_1107.astype('float64'), [11, 5, 11])), 0)
call_1108 = relay.TupleGetItem(func_342_call(relay.reshape(var_1107.astype('float64'), [11, 5, 11])), 0)
output = relay.Tuple([bop_1103,call_1106,var_1107,])
output2 = relay.Tuple([bop_1103,call_1108,var_1107,])
func_1110 = relay.Function([var_1101,var_1102,var_1107,], output)
mod['func_1110'] = func_1110
mod = relay.transform.InferType()(mod)
var_1111 = relay.var("var_1111", dtype = "float64", shape = (1, 3, 2))#candidate|1111|(1, 3, 2)|var|float64
var_1112 = relay.var("var_1112", dtype = "float64", shape = (16, 3, 2))#candidate|1112|(16, 3, 2)|var|float64
var_1113 = relay.var("var_1113", dtype = "float64", shape = (11, 55))#candidate|1113|(11, 55)|var|float64
output = func_1110(var_1111,var_1112,var_1113,)
func_1114 = relay.Function([var_1111,var_1112,var_1113,], output)
mutated_mod['func_1114'] = func_1114
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1195 = relay.var("var_1195", dtype = "float32", shape = (2, 14, 4))#candidate|1195|(2, 14, 4)|var|float32
uop_1196 = relay.atanh(var_1195.astype('float32')) # shape=(2, 14, 4)
func_1110_call = mod.get_global_var('func_1110')
func_1114_call = mutated_mod.get_global_var('func_1114')
const_1205 = relay.const([2.030985,-7.291177,-7.925856,-4.275828,9.772050,8.168738], dtype = "float64")#candidate|1205|(6,)|const|float64
const_1206 = relay.const([-0.103597,-1.132385,-1.050768,8.890798,-9.262358,-5.595305,9.545472,6.428790,-1.571519,8.814878,9.794891,-8.646034,-4.790669,-7.126386,1.518044,-2.217664,-5.013148,0.088563,4.217754,8.453035,-9.048763,9.321443,3.823319,-2.355601,6.635824,-6.614430,5.194993,4.395401,-5.301655,3.489684,-1.433147,9.955206,3.126859,-0.301025,6.945135,-5.105544,0.095965,2.177534,-6.178406,-9.978182,-1.795406,-7.241862,-1.862785,9.422539,6.594570,-7.023881,-8.820922,-1.228799,-0.531809,8.703757,7.364374,7.822888,7.396228,9.079931,4.240905,1.881453,-4.766057,6.587162,-6.525255,7.120292,-7.736536,3.399163,7.943882,-6.705770,-4.994490,9.071334,8.882827,1.712275,6.784999,-8.223173,-5.831613,-4.952359,7.886881,2.188573,0.394817,7.411041,-7.952072,-6.912621,-2.430853,-9.591650,-8.370609,-7.671308,-0.536172,9.663341,-0.698359,-2.103140,0.206552,5.832336,2.413546,-2.686484,7.100301,-3.770100,0.354086,5.268416,9.617572,-1.912683], dtype = "float64")#candidate|1206|(96,)|const|float64
const_1207 = relay.const([-0.595884,-3.907214,-7.134748,-9.823487,1.396056,-1.700032,-7.954087,9.107884,-1.753053,-7.629830,5.529099,8.189552,4.748710,-7.785493,3.491867,-3.062495,-9.793159,-1.499310,-2.689076,3.174992,3.479400,-6.897047,-3.944568,2.639934,8.580185,-7.426712,-5.841571,5.555671,-6.009673,-3.334467,8.702637,1.602531,8.934603,-4.311720,-1.897389,-3.056745,4.871873,-6.717936,-1.268402,-9.350194,3.643331,-9.396218,-6.309762,4.332304,-5.711414,-0.730189,-4.143446,6.876861,-2.287382,2.248809,0.199963,-6.520564,-8.415554,0.832849,-3.718727,-8.659081,-7.105472,2.977243,-0.829356,8.995855,2.739786,-6.674601,-2.758677,6.983725,3.928658,4.410923,-1.260761,5.482909,-2.403843,-4.639635,-9.298710,-2.193242,2.310002,-0.192158,-0.014025,-1.018721,8.232476,-1.663936,1.507586,-8.851667,-0.859450,5.092762,5.899859,-8.746571,4.872492,5.366471,7.911311,9.933546,9.585900,1.837089,7.131373,9.069834,-3.189993,-5.128442,-0.145572,8.580605,8.574833,7.145615,5.663048,-4.717926,-3.309763,1.239335,-1.195796,6.363503,-3.853912,8.819027,-7.010048,-5.563979,-6.545029,-5.126603,-0.762287,-1.511545,0.119239,-0.759658,3.453344,0.040898,-4.985540,0.006554,7.612000,2.659400,9.841331,-2.655218,7.441816,6.328573,2.679274,-2.789819,3.109760,8.719741,1.125893,5.623181,5.825069,-2.498670,0.310829,-8.237523,-7.706758,-1.291346,-0.486656,-9.606253,-9.747426,-4.774021,1.049072,6.974981,7.826631,6.426482,-1.314289,5.829828,-4.025433,-8.993791,0.353830,-1.976538,-4.893927,-9.890720,8.738960,-6.063845,-1.953083,-1.002335,-6.729258,-8.577368,-3.477943,-6.321336,-2.729885,-7.109206,4.555910,6.723860,6.041011,2.303894,-1.561728,5.855784,-1.616515,0.867666,-3.968041,-8.317402,2.352390,-7.109384,4.652265,6.018668,-2.377433,-8.627465,-6.345320,-4.159597,7.120372,3.273583,1.171592,-0.802491,-3.407655,-3.347683,3.434361,6.180372,5.946013,-9.717667,-6.121393,7.789703,-5.794505,4.904955,9.884943,-3.029713,6.535301,-8.506798,-0.916498,-3.059490,7.189611,8.754827,0.392554,3.845566,-9.679671,3.612214,5.518948,5.064964,-2.137716,-2.116586,8.383522,0.236953,-2.323346,2.508158,-7.531216,-5.127614,5.516351,-7.362185,-4.700690,2.338512,7.190654,-1.167813,2.723669,-1.373853,-9.976699,4.637097,-0.388146,-1.078828,0.686026,3.995993,6.770221,9.556578,-3.224238,6.663522,2.426634,1.481869,-6.497220,-9.438737,-6.370676,6.502869,6.650373,-0.682174,0.786753,0.155994,-9.546840,-0.938231,-8.645749,-0.724382,4.367303,1.957780,5.537056,-1.306632,-7.026075,5.374512,9.371594,0.591969,-5.744845,-2.374834,-0.745981,-5.182416,3.186276,-1.769229,-0.009351,-3.743320,6.228951,-9.168593,-4.625291,-4.747725,4.839522,9.755280,-0.684113,-3.620707,-6.991526,5.726842,-0.976288,-5.476483,-4.278309,2.931586,7.413637,7.123991,5.823692,9.079584,-8.183072,9.227691,-7.118918,-8.595900,7.745201,4.749169,-7.407981,2.344040,-2.970168,-8.629566,-6.790959,3.846674,6.138427,-9.633145,-6.231269,-9.328167,7.894936,0.473749,4.685290,7.639755,-1.061783,-7.047679,5.162887,0.506602,5.061077,-5.602905,0.683087,-0.698666,-7.223590,9.735792,-8.775266,7.750039,8.547299,9.976131,6.274895,-7.656937,8.337868,-3.360697,-0.034718,-2.714942,8.067092,2.962880,-1.506522,5.554323,7.901063,-3.506347,-2.974313,7.279950,-0.473942,-2.213883,5.455661,9.250463,-6.139000,6.080298,6.676827,-3.606582,0.416957,4.126524,3.691165,-2.307396,9.984001,9.403747,9.156362,-2.352638,0.724365,5.551338,7.640464,-5.597307,-5.993509,-1.906857,1.594883,-8.367977,-8.760162,9.015355,-8.270548,-1.456641,-0.972862,3.890460,6.552598,7.997523,6.904733,1.880345,9.159580,-3.518328,-7.703834,6.229872,5.191780,-9.248712,8.302640,-8.552217,2.915319,7.709381,-8.546021,7.624661,-4.865045,-4.321351,1.408050,-7.200043,7.716060,-8.147217,5.064719,-0.037112,5.754419,8.186241,-1.628811,-6.528587,-5.311784,6.180934,1.253558,-4.499305,3.486731,9.128000,3.634149,4.669258,-6.270234,-2.012105,0.271382,-6.411040,0.339925,7.096063,2.753865,1.725066,5.344548,-3.496568,-5.244772,9.774983,-0.375520,-5.406611,-4.120628,-6.863486,-5.130073,0.496329,9.822068,-7.058865,8.331644,-9.561516,-4.452975,-2.072472,-0.642185,-3.921821,-7.549078,-6.792190,-0.419355,-7.119438,-0.536734,1.500684,3.596131,-1.216839,-6.424150,2.468448,-0.656636,9.790353,7.391588,1.619748,-0.173307,-0.303340,3.308373,3.594255,-2.501399,-2.791903,1.884559,4.690655,-9.818027,5.414429,-5.934268,-1.674586,1.419834,1.036549,-2.172014,-6.491913,-2.734263,8.807248,-4.660136,1.561107,-1.015896,8.676406,5.378285,-7.400820,5.562129,5.079728,-2.550115,-2.508414,2.160900,-7.428730,-4.688898,-1.194997,-5.998682,-0.464175,4.406482,2.803078,-0.587081,2.118864,8.446262,6.880269,2.761176,-0.116692,0.224682,8.079611,3.057240,-3.787871,7.098765,-7.900176,-2.166870,-4.987445,9.432420,9.304729,-9.201738,4.698469,-1.041931,-9.459879,5.066557,9.389267,-0.899709,7.360312,-3.616439,6.817903,6.809236,7.034113,5.621869,7.999060,5.037251,-3.360866,5.004469,3.114138,-6.265621,5.122331,6.162407,-3.098090,-0.259598,2.353438,3.149023,-8.113966,-1.379854,-6.264230,9.717604,-1.473464,-4.065044,-8.879323,1.480800,2.802342,-5.559312,7.489031,5.135928,4.442065,-9.209532,3.267327,9.029019,-2.415448,3.040922,2.562813,-7.731072,-8.702316,-8.500351,-2.802599,-5.532009,-2.650437,-3.153842,-7.729219,3.856640,9.672077,-4.785282,-6.157786,-1.572129,-6.019787,5.066787,-2.364620,2.368813,2.213019,-6.945464,1.080401,7.284914,5.385216,-9.613713,-7.789471,7.135404,3.327004,-8.914199,5.748520,-9.685802,-9.453447,-0.591123,3.566578,2.828698,8.529746,-1.830286,9.590917,-0.179479,2.245095,-3.379722,7.288482,-9.416157,-7.581275,-2.568531,7.524750,0.528811,-5.926341,7.624230,4.875306,-6.493412,-3.506013,-4.427134,3.669849,-1.017543,6.040649,-4.687931,-9.466574,8.225050,9.533881,-9.578359,-1.618928,-1.558801,5.807983,-7.382109,8.919876,-5.608066,5.636786,1.427191,4.248336,1.821666,-7.191561,4.800793,-3.193012,5.462543], dtype = "float64")#candidate|1207|(605,)|const|float64
call_1204 = relay.TupleGetItem(func_1110_call(relay.reshape(const_1205.astype('float64'), [1, 3, 2]), relay.reshape(const_1206.astype('float64'), [16, 3, 2]), relay.reshape(const_1207.astype('float64'), [11, 55]), ), 1)
call_1208 = relay.TupleGetItem(func_1114_call(relay.reshape(const_1205.astype('float64'), [1, 3, 2]), relay.reshape(const_1206.astype('float64'), [16, 3, 2]), relay.reshape(const_1207.astype('float64'), [11, 55]), ), 1)
func_1110_call = mod.get_global_var('func_1110')
func_1114_call = mutated_mod.get_global_var('func_1114')
call_1216 = relay.TupleGetItem(func_1110_call(relay.reshape(const_1205.astype('float64'), [1, 3, 2]), relay.reshape(const_1206.astype('float64'), [16, 3, 2]), relay.reshape(const_1207.astype('float64'), [11, 55]), ), 0)
call_1217 = relay.TupleGetItem(func_1114_call(relay.reshape(const_1205.astype('float64'), [1, 3, 2]), relay.reshape(const_1206.astype('float64'), [16, 3, 2]), relay.reshape(const_1207.astype('float64'), [11, 55]), ), 0)
func_339_call = mod.get_global_var('func_339')
func_342_call = mutated_mod.get_global_var('func_342')
call_1227 = relay.TupleGetItem(func_339_call(relay.reshape(const_1207.astype('float64'), [11, 5, 11])), 0)
call_1228 = relay.TupleGetItem(func_342_call(relay.reshape(const_1207.astype('float64'), [11, 5, 11])), 0)
uop_1230 = relay.rsqrt(uop_1196.astype('float64')) # shape=(2, 14, 4)
output = relay.Tuple([call_1204,const_1205,const_1206,const_1207,call_1216,call_1227,uop_1230,])
output2 = relay.Tuple([call_1208,const_1205,const_1206,const_1207,call_1217,call_1228,uop_1230,])
func_1241 = relay.Function([var_1195,], output)
mod['func_1241'] = func_1241
mod = relay.transform.InferType()(mod)
var_1242 = relay.var("var_1242", dtype = "float32", shape = (2, 14, 4))#candidate|1242|(2, 14, 4)|var|float32
output = func_1241(var_1242)
func_1243 = relay.Function([var_1242], output)
mutated_mod['func_1243'] = func_1243
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1702 = relay.var("var_1702", dtype = "float32", shape = (2, 5, 10))#candidate|1702|(2, 5, 10)|var|float32
var_1703 = relay.var("var_1703", dtype = "float32", shape = (2, 5, 10))#candidate|1703|(2, 5, 10)|var|float32
bop_1704 = relay.equal(var_1702.astype('bool'), relay.reshape(var_1703.astype('bool'), relay.shape_of(var_1702))) # shape=(2, 5, 10)
func_484_call = mod.get_global_var('func_484')
func_487_call = mutated_mod.get_global_var('func_487')
const_1713 = relay.const([5.474284,-5.270001,6.569961,1.942669,8.850389,9.560323,-7.655288,-2.176547,-0.237050,9.612987,-5.110618,-9.778323,-3.145481,-4.215932,-7.847880,-1.001427,0.674633,2.850750,3.571804,0.951712,-6.805347,3.482873,-0.180266,3.558492,1.069962,-0.216249,-7.721828,-8.148467,3.778879,-5.476542,-3.368369,-3.924186,7.127367,-7.253106,-0.197432,6.721375,2.133485,-4.502267,2.270727,-5.633301,-6.019496,-5.716345,-3.341579,1.660447,1.469578,8.912848,-8.779211,7.463382,6.080440,-3.019240,-9.528024,-5.103391,5.186272,9.961726,-2.506303,4.082795,-2.260924,-4.824553,-5.321048,5.731960,3.983939,1.345102,-6.172700,-9.075437,4.452536,6.037493,-5.001328,6.150326,-6.148647,-0.039625,-2.909989,6.316021,-9.778058,5.458911,1.111404,-5.661347,-0.228197,9.804854,2.142574,-4.491524,-9.485209,-4.327872,-8.112647,-9.992955,-5.318621,5.851450,-6.734665,-0.698233,-3.977302,7.371854,-5.566784,6.413650,-5.539088,0.274041,-4.497680,-9.813458,5.222183,9.166344,-8.612513,4.086076,3.648347,8.538172,0.244224,-1.027190,-7.109593,-9.049099,6.412282,7.608214,-6.051581,6.073909,-0.268682,9.183224,-5.317776,7.167212,2.899598,-5.401415,-5.862535,-3.358711,9.361054,6.831139,7.639261,-7.393240,4.732551,-7.809601,-2.606883,-2.046946,7.316501,-1.019147,2.832998,-9.548370,-2.070170,2.728421,-1.248615,3.164482,-6.974799,8.197210,-9.756883,-2.962814,9.890082,6.602554,3.574785,0.050834,1.564136,-5.801179,0.021431,0.350189,0.855544,-8.664439,6.016615,9.275313,8.829710,2.115606,-3.104241,6.807486,-8.831332,1.663462,6.385282,-9.942618,9.653560,5.145988,0.689556,-3.408785,1.706088,-7.592694,-9.912580,-4.310046,3.588833,1.675815,4.739815,9.681660,9.985757,8.616517,7.389035,-6.354406,5.956109,-1.929033,-4.193642,7.909197,0.581638,-3.903267,-6.862958,1.866962,-0.563827,9.205050,-5.641204,3.072571,-4.446727,-0.920652,-5.781228,-4.913368,-1.551908,-7.754283], dtype = "float64")#candidate|1713|(192,)|const|float64
call_1712 = func_484_call(relay.reshape(const_1713.astype('float64'), [2, 12, 8]))
call_1714 = func_484_call(relay.reshape(const_1713.astype('float64'), [2, 12, 8]))
output = relay.Tuple([bop_1704,call_1712,const_1713,])
output2 = relay.Tuple([bop_1704,call_1714,const_1713,])
func_1735 = relay.Function([var_1702,var_1703,], output)
mod['func_1735'] = func_1735
mod = relay.transform.InferType()(mod)
mutated_mod['func_1735'] = func_1735
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1735_call = mutated_mod.get_global_var('func_1735')
var_1737 = relay.var("var_1737", dtype = "float32", shape = (2, 5, 10))#candidate|1737|(2, 5, 10)|var|float32
var_1738 = relay.var("var_1738", dtype = "float32", shape = (2, 5, 10))#candidate|1738|(2, 5, 10)|var|float32
call_1736 = func_1735_call(var_1737,var_1738,)
output = call_1736
func_1739 = relay.Function([var_1737,var_1738,], output)
mutated_mod['func_1739'] = func_1739
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2470 = relay.var("var_2470", dtype = "uint16", shape = (1, 5, 16))#candidate|2470|(1, 5, 16)|var|uint16
var_2471 = relay.var("var_2471", dtype = "uint16", shape = (1, 5, 16))#candidate|2471|(1, 5, 16)|var|uint16
bop_2472 = relay.subtract(var_2470.astype('uint16'), relay.reshape(var_2471.astype('uint16'), relay.shape_of(var_2470))) # shape=(1, 5, 16)
output = bop_2472
output2 = bop_2472
func_2475 = relay.Function([var_2470,var_2471,], output)
mod['func_2475'] = func_2475
mod = relay.transform.InferType()(mod)
mutated_mod['func_2475'] = func_2475
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2475_call = mutated_mod.get_global_var('func_2475')
var_2477 = relay.var("var_2477", dtype = "uint16", shape = (1, 5, 16))#candidate|2477|(1, 5, 16)|var|uint16
var_2478 = relay.var("var_2478", dtype = "uint16", shape = (1, 5, 16))#candidate|2478|(1, 5, 16)|var|uint16
call_2476 = func_2475_call(var_2477,var_2478,)
output = call_2476
func_2479 = relay.Function([var_2477,var_2478,], output)
mutated_mod['func_2479'] = func_2479
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2489 = relay.var("var_2489", dtype = "float32", shape = (12, 4, 11))#candidate|2489|(12, 4, 11)|var|float32
uop_2490 = relay.cosh(var_2489.astype('float32')) # shape=(12, 4, 11)
output = uop_2490
output2 = uop_2490
func_2502 = relay.Function([var_2489,], output)
mod['func_2502'] = func_2502
mod = relay.transform.InferType()(mod)
var_2503 = relay.var("var_2503", dtype = "float32", shape = (12, 4, 11))#candidate|2503|(12, 4, 11)|var|float32
output = func_2502(var_2503)
func_2504 = relay.Function([var_2503], output)
mutated_mod['func_2504'] = func_2504
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3491 = relay.var("var_3491", dtype = "float64", shape = (10, 3, 4))#candidate|3491|(10, 3, 4)|var|float64
uop_3492 = relay.cos(var_3491.astype('float64')) # shape=(10, 3, 4)
func_1241_call = mod.get_global_var('func_1241')
func_1243_call = mutated_mod.get_global_var('func_1243')
const_3496 = relay.const([-2.597738,1.509188,2.582567,-5.481577,2.291522,4.060007,7.749071,-4.046638,6.604634,-8.535053,-1.082126,-6.918401,-2.050794,7.875602,-8.471459,-4.206202,-3.319658,-1.972733,8.513424,4.974540,-1.523703,5.508148,-6.670817,-5.932524,3.364603,-0.408531,2.464739,5.399774,-7.064527,-7.850419,5.570730,-2.984105,-6.361647,0.216285,8.279832,-3.866094,-7.069140,8.689912,3.626290,-0.068107,1.202735,-2.983685,9.872192,-6.910039,6.299276,-1.817655,3.312481,-3.904520,5.463893,3.013217,-4.392141,-5.756297,7.531795,-9.960083,6.780657,4.580411,7.320462,0.623485,-8.274738,4.370466,-3.499459,-9.903428,-4.479200,5.580509,-1.120540,-6.091600,-4.933743,1.352594,8.653829,-8.898092,-1.314940,5.671576,-3.629934,-4.867054,-4.529334,-9.018593,8.350997,3.814190,7.242101,9.513121,2.296141,6.942701,-2.398508,-1.841186,-8.865645,-5.947203,-4.772075,-6.553383,8.663338,5.091145,-2.613009,-8.623066,-1.776592,1.714378,6.116241,-0.934280,9.171613,-6.613980,-7.495737,1.337518,-0.634149,-8.225702,9.917895,7.691347,9.830194,-4.635598,-6.686311,-1.670728,-3.415524,-6.111755,-1.271909,5.412810], dtype = "float32")#candidate|3496|(112,)|const|float32
call_3495 = relay.TupleGetItem(func_1241_call(relay.reshape(const_3496.astype('float32'), [2, 14, 4])), 4)
call_3497 = relay.TupleGetItem(func_1243_call(relay.reshape(const_3496.astype('float32'), [2, 14, 4])), 4)
func_484_call = mod.get_global_var('func_484')
func_487_call = mutated_mod.get_global_var('func_487')
var_3499 = relay.var("var_3499", dtype = "float64", shape = (192,))#candidate|3499|(192,)|var|float64
call_3498 = func_484_call(relay.reshape(var_3499.astype('float64'), [2, 12, 8]))
call_3500 = func_484_call(relay.reshape(var_3499.astype('float64'), [2, 12, 8]))
func_484_call = mod.get_global_var('func_484')
func_487_call = mutated_mod.get_global_var('func_487')
call_3503 = func_484_call(relay.reshape(var_3499.astype('float64'), [2, 12, 8]))
call_3504 = func_484_call(relay.reshape(var_3499.astype('float64'), [2, 12, 8]))
func_339_call = mod.get_global_var('func_339')
func_342_call = mutated_mod.get_global_var('func_342')
const_3518 = relay.const([4.523126,2.360101,6.022035,3.245786,6.327061,3.722559,-5.500274,-7.784463,-7.480860,8.287601,1.615330,2.176595,-1.710762,-1.274227,-5.324262,-8.061115,-4.612404,-9.453908,-9.302920,2.254211,-8.106137,-1.722183,-4.193638,-4.134519,1.421470,-5.883820,1.944010,5.042550,9.982756,-4.545637,-2.734652,4.359036,-5.488288,-0.056851,0.745400,-7.038068,8.139470,5.085249,1.337794,-2.030415,1.404697,-6.444938,-3.063660,8.642984,1.607957,0.398652,-2.713468,-6.331884,-1.540231,9.119215,5.086921,0.673092,2.977480,-1.893316,-3.212409,7.016270,-7.034645,5.339702,4.971487,-0.111376,-0.090637,-6.927301,-1.790260,9.169574,-8.407561,6.240336,-1.299551,-1.712584,2.136488,0.544549,4.956103,1.267794,-0.574332,-6.749407,5.869555,-8.525058,-8.145619,-8.178128,7.068303,-3.381978,0.735620,7.154851,-8.209798,1.496236,9.595930,-8.721838,4.042512,-6.600543,-3.827956,8.341269,0.995459,5.078921,7.704549,-4.192956,4.296606,-2.711237,-0.205250,-9.278709,3.044996,-3.248537,-4.331595,8.046758,6.980033,9.296888,-7.792923,3.628745,-8.490165,5.433594,1.134155,0.356680,-9.987142,4.691606,2.573795,-8.640151,8.676938,7.500073,8.524835,2.013469,-9.359551,-0.249031,1.223744,-5.363437,-3.320218,1.594041,-2.968158,-9.840931,-7.392823,7.206557,0.205971,-1.196360,1.577426,5.791016,-1.985824,3.971524,7.886725,1.258637,8.468342,3.099425,-4.512465,9.871430,6.814507,1.126119,2.349978,3.763764,-7.626856,3.823447,-1.338556,-3.498304,6.951053,5.420887,6.288775,-2.960009,0.653042,-9.976369,-4.945512,-6.780319,6.629463,-9.442845,-2.097382,-5.177099,3.111603,-2.718674,-7.342831,2.857056,-8.799896,-9.595773,5.293623,1.355240,-4.726693,-5.416474,7.480306,-6.327221,4.589292,-1.008004,9.315601,-0.466819,-6.427766,-1.123064,-6.457052,8.331996,-5.497270,-1.991586,-0.596718,-0.110506,-0.072943,1.322595,5.540770,-6.533846,-9.946310,7.862118,3.574516,4.715612,-7.675958,-5.631433,6.695192,-4.180898,-1.595887,0.981543,-9.872800,1.317616,8.891490,-7.308119,9.493906,4.822096,0.205566,0.177149,-9.054763,7.509655,-0.021729,7.054260,8.009894,4.893859,7.125601,-8.534774,8.411141,-3.912091,-2.075514,4.761839,8.656488,-3.206081,2.306938,-7.406833,-7.847618,8.498798,3.054657,-1.424854,-9.878246,-9.418156,-1.316310,3.010086,0.814727,-6.900784,-1.681589,6.469429,-3.363720,4.678922,6.404552,-0.177929,2.053093,-7.109884,-2.787005,1.268564,-3.588644,-4.091358,-2.603603,-2.260040,5.859663,5.836188,1.005776,-3.409749,-3.818686,6.897546,2.375762,4.320800,5.377026,6.445769,-5.979893,-9.343665,0.307932,-9.890520,-5.468175,3.900842,2.765235,-1.282410,9.632086,1.622044,-8.889997,3.810696,-0.235444,-9.801758,-1.226789,0.099602,-0.521125,2.801901,9.548886,9.365289,5.427963,2.875900,8.707700,9.509543,-6.223088,4.599913,0.279208,-2.018399,7.070223,-2.551173,8.619275,1.818460,7.352154,0.334512,-8.032653,2.060773,0.108351,-3.962823,-1.273755,3.578832,-5.068127,6.840651,8.359155,8.268421,-5.420484,-9.013245,-9.820383,0.735749,-9.914451,-4.940222,1.298713,-0.728610,-9.630880,8.145581,-3.447682,-4.778409,5.467761,8.718824,8.222319,-8.612557,-3.225762,0.643960,-8.861778,-1.725771,6.808430,6.474235,-4.345970,0.541846,-7.105765,2.171977,9.147871,-3.660073,5.589504,3.690087,-0.917754,-4.509733,-5.703218,2.545195,-5.596869,-3.102493,-4.422614,-5.619442,7.657793,-0.459631,7.141474,4.364364,5.452101,6.465950,6.390939,0.941271,-7.714426,-2.582188,-4.536848,6.675911,5.734174,-4.187521,0.321671,1.211896,5.675272,6.050024,8.789622,3.075478,-9.809818,-9.020165,-4.773378,7.685255,9.004825,4.666582,-3.458014,4.157453,-5.128823,1.867596,-3.494806,1.069814,-1.421053,-6.181656,9.328512,-1.420428,5.203398,9.847924,7.178802,-2.549746,-4.356602,-3.981939,4.824036,-4.591883,0.146008,0.715007,-2.352315,2.443942,2.353567,1.367849,-8.377887,-5.585257,-5.907765,2.679463,5.759817,-9.775186,4.584987,-5.282130,-8.661428,0.058325,-0.885013,-1.902287,3.311572,-8.168852,0.534639,5.398356,3.318502,1.688429,4.150976,4.527045,8.450445,-5.984774,-1.182359,4.524682,0.958974,2.182648,8.145120,2.865029,5.659122,-0.809644,4.674539,-8.772970,7.719562,-7.645357,-9.243646,2.365660,9.562962,2.062911,-3.075621,2.778560,5.267642,-9.169249,-5.409915,2.262592,5.183345,-8.016612,7.590710,5.030032,5.574386,4.191051,-3.405370,5.776633,-3.961038,0.329749,0.729833,-0.206230,2.725616,3.186454,-3.760860,-4.663093,-9.991194,-4.584172,7.931428,3.169853,1.322565,4.904185,0.141992,-0.533490,7.746505,9.020473,-1.496224,2.955883,-2.387078,3.254172,2.641827,-1.492235,-7.880555,1.975953,-2.225212,-1.247252,2.042112,1.103805,-1.726062,-9.782954,-8.106046,-6.088670,2.177476,-1.779433,7.210394,7.156263,0.753095,-7.789448,-2.619191,-5.892328,-1.691758,0.081234,-6.099656,0.061429,-3.460733,-3.800626,7.022675,4.740167,-0.572257,-3.764903,0.606105,-8.567915,9.161605,-1.812583,-9.462618,-6.030471,-6.956317,-2.080535,4.230038,2.684924,1.866170,-8.453690,9.645863,1.065498,6.858138,4.116090,9.735388,-2.545235,-3.210248,5.145836,4.114701,-1.628352,4.689489,-3.659276,-0.324690,-8.643669,4.388250,-7.117852,-7.350158,-0.743721,5.257073,-6.510325,9.733104,7.588072,5.363839,-6.045007,-5.123221,-9.170322,1.774323,-8.390086,3.554800,8.752745,2.372680,8.286287,6.058431,-9.265700,6.067808,-6.189709,3.215859,-7.291223,-0.845133,3.962578,6.457340,-1.222116,-2.713391,-8.891918,3.315253,-9.511405,3.059241,-7.975782,0.211466,3.813225,2.914817,1.304658,2.015100,3.318050,-9.970699,6.908481,6.409283,-0.180863,-6.787051,1.023959,-7.364073,8.122124,2.292780,-5.871019,-2.380820,1.470931,4.632417,-5.059991,-5.299030,-5.193099,-5.148847,1.551738,4.221877,8.463863,-2.395564,8.580996,-0.996094,0.138676,-4.819880,-5.360935,2.382824,-9.637774,-9.067232,-0.977342,3.278959,1.300678,-4.908562,6.196251,-2.761861,8.336196,4.388449,8.604682,5.091070,1.160381,-9.088751,-9.657132,4.390930,1.806380,5.832933,-5.119953,-0.621502], dtype = "float64")#candidate|3518|(605,)|const|float64
call_3517 = relay.TupleGetItem(func_339_call(relay.reshape(const_3518.astype('float64'), [11, 5, 11])), 0)
call_3519 = relay.TupleGetItem(func_342_call(relay.reshape(const_3518.astype('float64'), [11, 5, 11])), 0)
output = relay.Tuple([uop_3492,call_3495,const_3496,call_3498,var_3499,call_3503,call_3517,const_3518,])
output2 = relay.Tuple([uop_3492,call_3497,const_3496,call_3500,var_3499,call_3504,call_3519,const_3518,])
func_3521 = relay.Function([var_3491,var_3499,], output)
mod['func_3521'] = func_3521
mod = relay.transform.InferType()(mod)
mutated_mod['func_3521'] = func_3521
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3521_call = mutated_mod.get_global_var('func_3521')
var_3523 = relay.var("var_3523", dtype = "float64", shape = (10, 3, 4))#candidate|3523|(10, 3, 4)|var|float64
var_3524 = relay.var("var_3524", dtype = "float64", shape = (192,))#candidate|3524|(192,)|var|float64
call_3522 = func_3521_call(var_3523,var_3524,)
output = call_3522
func_3525 = relay.Function([var_3523,var_3524,], output)
mutated_mod['func_3525'] = func_3525
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3602 = relay.var("var_3602", dtype = "uint64", shape = (11, 10, 10))#candidate|3602|(11, 10, 10)|var|uint64
const_3603 = relay.const([[[5,-8,-9,6,4,8,7,6,-7,-10],[-5,-4,-10,4,-9,9,-6,7,-1,-7],[-8,-8,-8,-2,-1,2,1,-6,-6,-10],[-5,9,6,-9,8,4,10,-2,8,-3],[-6,5,-1,-6,-5,-2,-5,-4,-6,10],[8,9,-5,4,4,-4,-2,-6,2,-10],[10,7,-4,8,3,-1,9,-9,-2,10],[10,-6,5,-7,-6,5,-10,3,7,-3],[9,-3,5,-5,-7,-5,-2,-1,-5,-7],[-5,8,9,1,-3,6,8,2,-1,2]],[[-5,5,10,-6,4,5,-8,-7,4,-10],[-10,-1,-6,-2,4,-3,3,-8,-3,7],[10,7,6,-4,9,9,10,8,7,-3],[5,9,3,8,-2,3,8,-1,-1,-7],[8,-10,10,-4,-9,7,2,-2,3,-3],[7,-8,-4,-1,3,7,-8,10,6,-4],[-3,-1,-6,4,-2,-6,-2,4,-5,-3],[5,-10,7,-10,5,10,-6,5,-3,-1],[5,-2,4,-5,2,-7,-7,1,-6,1],[-8,9,3,4,-4,-8,4,6,-7,9]],[[10,-10,5,-3,6,-10,4,-6,5,2],[7,-8,10,-1,6,8,-9,3,2,3],[-9,-10,-4,1,-6,-9,-2,4,-1,-9],[-8,-3,5,-1,3,3,-10,-8,-1,6],[-1,-10,1,5,10,1,10,7,1,2],[-1,-7,-10,-5,-3,8,-5,-8,-4,-8],[-6,-4,-2,-2,8,-6,-1,-2,-7,1],[10,-5,10,3,6,-8,-2,-1,-5,7],[6,-2,8,7,-3,-5,-2,7,-4,5],[2,4,-10,-8,7,6,-3,-2,4,-4]],[[10,9,-10,5,9,-5,5,-4,-4,10],[2,-7,-6,-3,10,7,-9,-3,5,4],[-8,-4,10,-10,2,8,-5,6,5,10],[-9,5,-5,10,6,3,-4,-9,-5,-9],[-8,-9,-3,2,4,-3,-3,2,9,-8],[-7,1,8,-4,-10,7,9,10,-9,-9],[-8,-8,1,9,-4,-4,-7,-2,6,7],[-8,-3,8,-8,10,2,8,-1,1,-8],[8,-8,9,-2,-6,1,3,9,-1,-10],[4,1,3,-2,3,-3,-4,-7,-1,-7]],[[8,-8,-2,-2,-6,4,-4,4,8,-4],[-8,3,8,-4,-9,-5,-7,-9,2,1],[-4,9,-9,-7,-3,-7,10,2,10,-6],[-8,-9,5,-5,-1,-6,1,-5,2,-7],[-5,-3,-6,4,4,-8,-2,-7,-7,4],[7,3,7,8,1,4,4,2,4,-10],[7,-9,5,8,6,-9,3,-3,-1,-10],[10,8,-1,6,8,6,-3,4,10,-1],[-3,-3,2,7,-9,-6,2,5,-4,-1],[-6,-8,1,-5,6,-1,-6,-7,2,-4]],[[2,-2,-1,8,-7,-10,5,9,1,-8],[2,6,-6,8,7,-9,-9,-3,-7,8],[9,6,-7,9,9,-3,-9,-10,-1,2],[-8,7,1,10,9,1,-7,2,-2,-1],[10,-3,-4,5,9,3,8,7,-8,-9],[-6,-6,7,-8,-3,-9,5,-4,-5,4],[6,-3,7,-6,-8,5,5,-10,1,3],[-9,9,-4,-4,-1,3,6,-6,6,10],[-6,10,8,6,-8,-5,1,2,6,6],[-4,7,-5,-5,-4,6,1,3,-6,9]],[[8,-2,8,6,-9,1,1,3,2,8],[-4,8,-2,5,10,3,-9,-10,-10,1],[9,3,10,10,4,8,4,-3,6,4],[3,-5,2,-9,2,-2,-2,4,10,5],[-2,4,-10,-10,-5,2,10,2,3,-6],[3,-7,-2,-8,5,-8,6,-10,-9,3],[-5,-3,4,-10,-9,3,2,-5,-3,9],[-6,-4,9,1,8,-3,10,-9,3,1],[-4,4,-4,-4,-1,6,10,-4,-6,8],[-10,7,8,2,5,-5,-8,9,-7,-1]],[[-4,10,9,-4,8,8,-2,5,3,5],[-3,-1,9,-6,-10,7,-6,-9,-10,9],[-2,5,6,-8,-9,8,-1,-6,-6,-9],[1,-2,4,3,2,-1,1,-2,5,-5],[-1,8,-10,4,-9,4,-8,7,6,3],[2,-6,-1,-1,8,-1,-8,3,-5,6],[8,4,-6,8,-10,2,7,8,-6,-4],[-4,-3,8,-10,3,-9,-6,8,3,-4],[7,9,-3,3,6,4,-6,10,-3,9],[6,6,10,-6,10,-5,5,2,-1,-7]],[[-6,-4,-10,-8,-7,-8,6,7,-9,-6],[10,-5,-7,4,4,6,-4,6,-7,8],[3,8,-1,-5,7,-7,-5,3,9,-2],[9,-7,-10,-9,-7,-2,-3,2,-5,-2],[8,-9,-2,-7,-10,-6,-8,-5,3,-5],[9,3,-8,-5,1,3,-9,-4,-7,-1],[-1,7,9,-10,-6,-7,4,8,-4,-5],[10,-4,-10,-9,-1,-5,9,-4,4,5],[10,-6,1,-6,-4,-9,9,-5,-4,-8],[-7,7,-5,-6,-4,-10,4,-9,-9,-1]],[[-6,-9,-6,7,-7,4,8,-9,4,-5],[-10,-3,2,-9,-8,3,-3,-10,5,8],[2,5,5,6,-1,8,-5,-6,-2,7],[-7,4,3,6,3,9,8,-7,9,-4],[4,4,2,8,4,4,8,-1,5,-8],[-3,-4,-2,-6,6,-3,-10,2,6,-6],[7,-4,-9,5,-2,10,1,-6,7,-4],[-2,5,-6,3,-9,4,8,-3,5,-1],[-3,2,-7,7,-2,10,9,-3,-2,-7],[-5,7,1,2,-1,4,-6,-10,-7,-10]],[[9,3,5,3,2,6,-2,-5,-6,10],[-2,1,-3,4,9,10,-3,-6,-9,-6],[8,2,-9,-3,-4,2,9,5,-6,3],[4,-3,-6,-7,-5,-8,5,3,7,-8],[-10,10,-6,1,-5,-7,-8,7,-9,-1],[-5,7,10,-5,7,1,-4,5,5,3],[-10,8,3,4,-8,-6,7,-7,5,-6],[-5,-10,-6,-10,10,-1,-6,-8,4,10],[-8,-7,2,-2,5,-1,-4,9,5,1],[3,-6,10,-9,-8,6,-9,-3,-8,10]]], dtype = "uint64")#candidate|3603|(11, 10, 10)|const|uint64
bop_3604 = relay.bitwise_and(var_3602.astype('uint64'), relay.reshape(const_3603.astype('uint64'), relay.shape_of(var_3602))) # shape=(11, 10, 10)
output = bop_3604
output2 = bop_3604
func_3620 = relay.Function([var_3602,], output)
mod['func_3620'] = func_3620
mod = relay.transform.InferType()(mod)
var_3621 = relay.var("var_3621", dtype = "uint64", shape = (11, 10, 10))#candidate|3621|(11, 10, 10)|var|uint64
output = func_3620(var_3621)
func_3622 = relay.Function([var_3621], output)
mutated_mod['func_3622'] = func_3622
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3780 = relay.var("var_3780", dtype = "float64", shape = (5, 2, 5))#candidate|3780|(5, 2, 5)|var|float64
uop_3781 = relay.rsqrt(var_3780.astype('float64')) # shape=(5, 2, 5)
output = uop_3781
output2 = uop_3781
func_3786 = relay.Function([var_3780,], output)
mod['func_3786'] = func_3786
mod = relay.transform.InferType()(mod)
mutated_mod['func_3786'] = func_3786
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3787 = relay.var("var_3787", dtype = "float64", shape = (5, 2, 5))#candidate|3787|(5, 2, 5)|var|float64
func_3786_call = mutated_mod.get_global_var('func_3786')
call_3788 = func_3786_call(var_3787)
output = call_3788
func_3789 = relay.Function([var_3787], output)
mutated_mod['func_3789'] = func_3789
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3791 = relay.const([[[7,-10,5,-8,-8,7,3],[-10,-6,5,-7,5,-9,7]],[[1,7,-7,-8,-1,-3,7],[6,10,9,9,3,-2,-9]],[[7,4,1,-7,-8,-3,3],[-5,-8,10,-9,3,3,-3]],[[6,-6,10,-10,-3,9,4],[-8,8,9,6,-5,8,-2]],[[-5,8,9,-6,-5,-9,-3],[-8,10,6,-1,5,4,-2]]], dtype = "int64")#candidate|3791|(5, 2, 7)|const|int64
const_3792 = relay.const([[[6,6,-10,-9,-3,-1,-7],[-3,-7,7,-7,6,-2,6]],[[5,-3,-2,1,7,-7,9],[1,6,-4,-9,8,7,9]],[[8,3,5,-4,-5,9,7],[4,5,-3,-3,5,-7,-8]],[[-9,-4,-2,10,-2,-4,-9],[9,-10,-3,10,7,2,5]],[[-7,2,8,4,-2,7,1],[1,4,-8,-4,-1,-7,-8]]], dtype = "int64")#candidate|3792|(5, 2, 7)|const|int64
bop_3793 = relay.less_equal(const_3791.astype('bool'), relay.reshape(const_3792.astype('bool'), relay.shape_of(const_3791))) # shape=(5, 2, 7)
uop_3806 = relay.tan(bop_3793.astype('float32')) # shape=(5, 2, 7)
bop_3812 = relay.add(bop_3793.astype('int8'), relay.reshape(uop_3806.astype('int8'), relay.shape_of(bop_3793))) # shape=(5, 2, 7)
func_3620_call = mod.get_global_var('func_3620')
func_3622_call = mutated_mod.get_global_var('func_3622')
var_3817 = relay.var("var_3817", dtype = "uint64", shape = (110, 10))#candidate|3817|(110, 10)|var|uint64
call_3816 = func_3620_call(relay.reshape(var_3817.astype('uint64'), [11, 10, 10]))
call_3818 = func_3620_call(relay.reshape(var_3817.astype('uint64'), [11, 10, 10]))
func_2475_call = mod.get_global_var('func_2475')
func_2479_call = mutated_mod.get_global_var('func_2479')
var_3825 = relay.var("var_3825", dtype = "uint16", shape = (80,))#candidate|3825|(80,)|var|uint16
call_3824 = func_2475_call(relay.reshape(var_3825.astype('uint16'), [1, 5, 16]), relay.reshape(var_3825.astype('uint16'), [1, 5, 16]), )
call_3826 = func_2475_call(relay.reshape(var_3825.astype('uint16'), [1, 5, 16]), relay.reshape(var_3825.astype('uint16'), [1, 5, 16]), )
var_3831 = relay.var("var_3831", dtype = "uint64", shape = (110, 10))#candidate|3831|(110, 10)|var|uint64
bop_3832 = relay.right_shift(var_3817.astype('uint64'), relay.reshape(var_3831.astype('uint64'), relay.shape_of(var_3817))) # shape=(110, 10)
output = relay.Tuple([bop_3812,call_3816,call_3824,var_3825,bop_3832,])
output2 = relay.Tuple([bop_3812,call_3818,call_3826,var_3825,bop_3832,])
func_3838 = relay.Function([var_3817,var_3825,var_3831,], output)
mod['func_3838'] = func_3838
mod = relay.transform.InferType()(mod)
var_3839 = relay.var("var_3839", dtype = "uint64", shape = (110, 10))#candidate|3839|(110, 10)|var|uint64
var_3840 = relay.var("var_3840", dtype = "uint16", shape = (80,))#candidate|3840|(80,)|var|uint16
var_3841 = relay.var("var_3841", dtype = "uint64", shape = (110, 10))#candidate|3841|(110, 10)|var|uint64
output = func_3838(var_3839,var_3840,var_3841,)
func_3842 = relay.Function([var_3839,var_3840,var_3841,], output)
mutated_mod['func_3842'] = func_3842
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3967 = relay.const(True, dtype = "bool")#candidate|3967|()|const|bool
var_3968 = relay.var("var_3968", dtype = "bool", shape = (9, 16, 16))#candidate|3968|(9, 16, 16)|var|bool
bop_3969 = relay.logical_or(const_3967.astype('bool'), var_3968.astype('bool')) # shape=(9, 16, 16)
func_674_call = mod.get_global_var('func_674')
func_678_call = mutated_mod.get_global_var('func_678')
const_3974 = relay.const([[4.560346],[-3.960668],[-5.779117],[-0.495842],[-8.167216],[7.364475],[4.834083],[1.187252],[6.830656],[-3.496743],[-4.869659],[-6.320350],[-1.691840],[-1.485795],[-7.558654],[7.428611],[-1.949305],[3.178399],[-1.756493],[8.877100],[-5.869196],[-7.959875],[6.554737],[-4.295675],[1.193213],[4.431121],[-6.700226],[-9.376672],[7.511705],[3.140124],[1.152929],[7.832868],[-0.210855],[-3.570262],[3.600478],[-7.756920],[3.294423],[9.932456],[-9.699435],[2.110293],[8.330651],[7.537020],[9.513618],[-0.840738],[-5.299765],[-9.113005],[3.174541],[8.817635],[-8.191520],[-0.172460],[6.074882],[7.966586],[-3.632854],[1.317444],[-4.123000],[-1.105179],[7.560603],[2.487354],[0.993759],[-3.578627],[5.688165],[1.646028],[-1.701701],[9.654211],[5.269002],[-9.348509],[-4.772272],[9.744039],[4.479968],[9.896644],[4.817312],[4.462466],[8.612701],[5.975754],[-7.349782],[-4.395348],[-5.375630],[-9.250915],[-2.593429],[2.995484],[-0.833945],[-3.919099],[-1.336661],[0.341985],[-4.573137],[0.059362],[-0.728334],[-0.770810],[-9.513413],[1.524983],[8.698631],[-0.554885],[5.365135],[1.623828],[-3.644128],[5.126551],[-8.030693],[9.550737],[0.973696],[-6.551599],[5.718640],[-3.356639],[-6.263098],[9.287372],[-8.499288],[-4.088162],[-0.148232],[-9.722859],[3.415518],[7.913394],[-1.790264],[-6.283451],[-4.584136],[9.879484],[-0.385396],[9.541809],[-9.221247],[-1.565879],[8.706860],[3.200922],[-2.269145],[7.857204],[-2.451449],[-4.788652],[1.274823],[-7.571192],[3.345244],[1.399958],[-1.391991],[5.891063],[-1.789659],[8.606105],[-9.900535],[-5.761693],[1.980038],[-6.858327],[9.439040],[0.917481],[1.642866],[5.489251],[9.006394],[-6.017553],[1.654461],[9.562162],[4.329568],[-9.686956],[2.214099],[-7.983307],[7.683763],[5.598403],[-1.318888],[-0.001853],[-2.760102],[9.984864],[-2.985207],[-0.876054],[-0.022745],[-2.951512],[-7.752240],[-8.532077],[-2.934953],[-8.635211],[-8.880881],[-8.577144],[8.816575],[-8.755133],[9.687471],[1.550915],[-0.820198],[5.847816],[2.170228],[2.702110],[-2.552638],[4.251048],[7.807628],[-2.222003],[3.419273],[6.813010],[3.201812],[4.593335],[-6.251151],[-3.214786],[0.255674],[2.908353],[5.930107],[-8.798167],[-8.934332],[-0.789328],[0.480015],[-7.004009],[1.802701],[-4.132043],[8.128093],[-3.214156],[9.893919],[8.131046],[-9.095424],[5.585161],[9.483526],[3.328511],[2.728297],[7.490387],[4.163989],[5.230700],[-0.028601],[5.714668],[-8.265503],[-0.279219],[-2.198432],[7.736189],[-6.533454],[8.355861],[-8.686038],[-7.031096],[0.846791],[-5.762521],[9.666743],[-4.481118],[-3.249474],[4.318480],[9.925296],[-4.753158],[9.329696],[6.126106],[-3.341207],[9.067604],[4.322358],[5.781553],[-6.509724],[2.829858],[6.734853],[-2.264952],[-9.714187],[-9.667049],[-4.942868],[6.938418],[-8.859535],[-2.863258],[-0.948940],[6.493572],[-5.936995],[4.118672],[7.793747],[2.890713],[4.417159],[0.997579],[3.398421],[7.961218],[5.513278],[-8.518235],[-1.712279],[5.019769],[8.578508],[-3.764697],[-9.352189],[-2.811173],[-2.807227],[-0.226599],[-2.937655],[5.290412],[8.630032],[3.140100],[7.605123],[-8.331668],[-4.259161],[-8.384919],[-6.559216],[8.910270],[5.819134],[8.393101],[-4.934725],[-2.573967],[0.809140],[-7.417271],[1.690724],[8.761655],[6.809079],[7.532490],[-7.724908],[1.361191],[-4.038381],[8.696617],[6.460336],[-9.591365],[-7.193185],[-6.985458],[-7.814151],[0.302039],[-6.745445],[2.895275],[-6.221409],[-6.260695],[6.979952],[-0.295089],[5.080815],[-7.654221],[3.102404],[-1.475120],[7.830142],[-7.928902],[-6.143435],[-9.622912],[5.641816],[-2.076893],[4.975752],[0.884792],[5.324123],[6.826770],[4.979125],[-8.063370],[7.778130],[-9.275088],[-4.580275],[-6.811862],[-3.351995],[6.816712],[9.045745],[4.539444],[5.756760],[-1.275868],[1.058514],[-5.557930],[3.235245],[-6.402401],[8.515792],[3.196537],[1.422077],[-5.677779],[-7.388357],[0.889819],[3.507963],[2.483775],[-2.508495],[7.158775],[5.058741],[7.379930],[-7.293740],[6.281278],[6.229749],[-7.148096],[-4.985483],[-6.199168],[-5.697583],[8.652078],[7.725466],[0.587187],[1.000985],[9.806681],[6.003374],[9.383951],[1.001719],[8.584384],[7.267978],[2.563075],[-4.663702],[4.174251],[-1.512857],[7.896498],[-2.733078],[0.822293],[0.821231],[-7.311348],[-2.311579],[6.420750],[8.277856],[-5.283158],[1.897496],[-4.636311],[-1.779905],[8.855511],[6.058272],[1.523195],[-0.592031],[-7.889842],[0.968382],[-8.114228],[-4.779828],[6.597046],[4.768598],[-7.533182],[7.270977],[4.544752],[2.972370],[0.600781],[8.834164],[-1.553130],[-4.021439],[-0.406018],[-5.921720],[5.566100],[3.972918],[7.099671],[3.383727],[-1.367875],[2.940012],[5.461842],[3.017011],[0.110910],[-4.319988],[-4.619510],[4.588691],[-0.485977],[-5.125384],[5.188757],[-8.790533],[-2.645525],[-5.289981],[8.833168],[-6.464174],[-4.245564],[5.861183],[-1.373489],[-9.137610],[7.507285],[0.342893],[0.573872],[-2.636458],[-4.152435],[-3.367498],[-1.762757],[-1.427083],[-6.672236],[-7.644432],[-8.986496],[2.616405],[-1.257504],[-2.680415],[6.031134],[-3.747593],[6.614212],[-1.273024],[-0.829656],[9.167257],[4.723439],[-4.491983],[-2.488443],[-1.359555],[-7.074471],[-3.213477],[5.768059],[1.938427],[-1.374935],[5.589532],[1.951736],[-0.649746],[4.222754],[3.065756],[-6.812037],[-9.049860],[-2.358043],[4.774456],[3.700644],[-8.345509],[-1.005087],[1.164887],[-6.671354],[6.167367],[-5.530674],[3.186755],[-4.383507],[5.360866],[-7.775451],[7.940853],[5.275685],[3.191249],[9.031589],[-0.633067],[-5.815857],[-9.878351],[9.212078],[2.251507],[-6.648876],[5.299428],[0.758422],[-0.671799],[-3.373076],[8.773499],[-4.849730],[8.000103],[-8.539497],[-8.818383],[3.055175],[-6.853402],[2.963624],[-4.269623],[-2.716679],[-8.058460],[-1.049454],[-0.117374],[-1.454024],[8.522275],[-7.177304],[-3.331686],[-7.147988],[-2.469490],[-6.178423],[-5.075837],[5.520442],[4.628479],[4.835354],[3.787174],[4.427943],[-2.475177],[8.315202],[0.113361],[-8.220971],[2.505595],[3.479952],[6.888072],[0.447017],[-0.398883],[-8.422807],[-8.325807],[-4.238749],[-7.702570],[8.102354],[6.255260],[-9.340975],[5.801248],[-2.591919],[3.085697],[1.310957],[5.426669],[-8.101498],[-8.281698],[-8.046006],[0.315161],[3.441090],[-8.725859],[-8.846985],[0.873892],[9.017632],[-5.455786],[0.044323],[3.486704],[1.797513],[-8.436324],[9.635969],[0.222672],[-7.759765],[-3.533954],[5.015266],[-6.568655],[3.466595],[-2.056496],[4.938236],[7.609274],[-3.496971],[-1.541536],[6.633664],[-7.983169],[9.569019],[-5.675192],[-4.915540],[-2.431770],[3.575294],[-0.080284],[9.232480],[-9.486369],[4.270852],[-8.520001],[-2.206095],[8.283735],[9.140017],[-6.196471],[-6.808701],[4.783453],[4.719746],[-1.000062],[-9.751672],[1.543588],[6.015500],[-4.013965],[-5.308061],[0.938255],[6.977276],[-5.929986],[-3.448616],[-2.566334],[-1.908833],[-8.155872],[5.835171],[-5.805497],[2.533200],[6.970011],[9.705230],[-7.080846],[-5.301371],[0.251543],[6.809849],[-0.823915],[-6.860101],[-5.168586],[2.276974],[2.181513],[-7.443147],[-7.243926],[0.719790],[-2.379466],[7.347020],[-3.956228],[-2.799897],[-5.724500],[7.983479],[6.282903],[-7.670282],[8.817202],[2.831834],[8.364585],[9.057417],[-1.046088],[9.692801],[6.497300],[9.310583],[4.780021],[4.802159],[4.662931],[-0.610093],[-0.405147],[-1.716778],[-8.768346],[-7.352609],[3.191563],[-1.965735],[-0.568968],[0.206483],[7.759882],[1.369239],[-2.443472],[-9.064535],[5.042431],[2.291907],[-6.566799],[-9.048027],[-0.276867],[-6.580445],[-8.529908],[-8.465224],[-3.598564],[-2.159009],[-9.888591],[0.589647],[-9.640130],[7.214914],[7.390338],[7.076733],[6.036560],[-4.538684],[-5.149771],[1.584022],[8.378348],[-7.328677],[-1.577737],[4.054640],[6.592016],[6.141783],[-0.657707],[4.807109],[1.818744],[3.624117],[-1.937923],[2.063908],[6.951353],[6.800433],[0.388701],[-9.008272],[4.338807],[-0.223745],[-4.249475],[-8.251585],[9.471294],[1.569910],[6.900382],[1.324011],[8.670292],[4.456237],[3.172993],[-2.590854],[-9.173592],[-2.096791],[-9.412919],[-8.257028],[3.275446],[2.159259],[2.291289],[0.964357],[7.960731],[-7.007854],[0.964846],[0.515076],[-0.148753],[2.055525],[8.632034],[-1.834870],[1.384946],[1.846926],[-0.014373],[0.575725],[-2.446261],[6.052066],[3.099887],[4.827545],[2.948564],[9.762318]], dtype = "float32")#candidate|3974|(704, 1)|const|float32
call_3973 = func_674_call(relay.reshape(const_3974.astype('float32'), [11, 4, 16]), relay.reshape(const_3974.astype('float32'), [11, 4, 16]), )
call_3975 = func_674_call(relay.reshape(const_3974.astype('float32'), [11, 4, 16]), relay.reshape(const_3974.astype('float32'), [11, 4, 16]), )
output = relay.Tuple([bop_3969,call_3973,const_3974,])
output2 = relay.Tuple([bop_3969,call_3975,const_3974,])
func_3978 = relay.Function([var_3968,], output)
mod['func_3978'] = func_3978
mod = relay.transform.InferType()(mod)
var_3979 = relay.var("var_3979", dtype = "bool", shape = (9, 16, 16))#candidate|3979|(9, 16, 16)|var|bool
output = func_3978(var_3979)
func_3980 = relay.Function([var_3979], output)
mutated_mod['func_3980'] = func_3980
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3996 = relay.var("var_3996", dtype = "uint32", shape = (14, 15, 14))#candidate|3996|(14, 15, 14)|var|uint32
var_3997 = relay.var("var_3997", dtype = "uint32", shape = (14, 15, 14))#candidate|3997|(14, 15, 14)|var|uint32
bop_3998 = relay.not_equal(var_3996.astype('bool'), relay.reshape(var_3997.astype('bool'), relay.shape_of(var_3996))) # shape=(14, 15, 14)
output = bop_3998
output2 = bop_3998
func_4004 = relay.Function([var_3996,var_3997,], output)
mod['func_4004'] = func_4004
mod = relay.transform.InferType()(mod)
var_4005 = relay.var("var_4005", dtype = "uint32", shape = (14, 15, 14))#candidate|4005|(14, 15, 14)|var|uint32
var_4006 = relay.var("var_4006", dtype = "uint32", shape = (14, 15, 14))#candidate|4006|(14, 15, 14)|var|uint32
output = func_4004(var_4005,var_4006,)
func_4007 = relay.Function([var_4005,var_4006,], output)
mutated_mod['func_4007'] = func_4007
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4264 = relay.var("var_4264", dtype = "float32", shape = (15, 14, 3))#candidate|4264|(15, 14, 3)|var|float32
uop_4265 = relay.acos(var_4264.astype('float32')) # shape=(15, 14, 3)
output = uop_4265
output2 = uop_4265
func_4285 = relay.Function([var_4264,], output)
mod['func_4285'] = func_4285
mod = relay.transform.InferType()(mod)
mutated_mod['func_4285'] = func_4285
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4286 = relay.var("var_4286", dtype = "float32", shape = (15, 14, 3))#candidate|4286|(15, 14, 3)|var|float32
func_4285_call = mutated_mod.get_global_var('func_4285')
call_4287 = func_4285_call(var_4286)
output = call_4287
func_4288 = relay.Function([var_4286], output)
mutated_mod['func_4288'] = func_4288
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4492 = relay.var("var_4492", dtype = "int64", shape = ())#candidate|4492|()|var|int64
var_4493 = relay.var("var_4493", dtype = "int64", shape = (12, 8, 15))#candidate|4493|(12, 8, 15)|var|int64
bop_4494 = relay.logical_xor(var_4492.astype('int64'), var_4493.astype('int64')) # shape=(12, 8, 15)
output = bop_4494
output2 = bop_4494
func_4499 = relay.Function([var_4492,var_4493,], output)
mod['func_4499'] = func_4499
mod = relay.transform.InferType()(mod)
mutated_mod['func_4499'] = func_4499
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4499_call = mutated_mod.get_global_var('func_4499')
var_4501 = relay.var("var_4501", dtype = "int64", shape = ())#candidate|4501|()|var|int64
var_4502 = relay.var("var_4502", dtype = "int64", shape = (12, 8, 15))#candidate|4502|(12, 8, 15)|var|int64
call_4500 = func_4499_call(var_4501,var_4502,)
output = call_4500
func_4503 = relay.Function([var_4501,var_4502,], output)
mutated_mod['func_4503'] = func_4503
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4822 = relay.var("var_4822", dtype = "float32", shape = (8, 13, 3))#candidate|4822|(8, 13, 3)|var|float32
var_4823 = relay.var("var_4823", dtype = "float32", shape = (8, 13, 3))#candidate|4823|(8, 13, 3)|var|float32
bop_4824 = relay.floor_mod(var_4822.astype('float32'), relay.reshape(var_4823.astype('float32'), relay.shape_of(var_4822))) # shape=(8, 13, 3)
func_3620_call = mod.get_global_var('func_3620')
func_3622_call = mutated_mod.get_global_var('func_3622')
var_4828 = relay.var("var_4828", dtype = "uint64", shape = (10, 110))#candidate|4828|(10, 110)|var|uint64
call_4827 = func_3620_call(relay.reshape(var_4828.astype('uint64'), [11, 10, 10]))
call_4829 = func_3620_call(relay.reshape(var_4828.astype('uint64'), [11, 10, 10]))
func_3620_call = mod.get_global_var('func_3620')
func_3622_call = mutated_mod.get_global_var('func_3622')
call_4836 = func_3620_call(relay.reshape(call_4827.astype('uint64'), [11, 10, 10]))
call_4837 = func_3620_call(relay.reshape(call_4827.astype('uint64'), [11, 10, 10]))
output = relay.Tuple([bop_4824,call_4827,var_4828,call_4836,])
output2 = relay.Tuple([bop_4824,call_4829,var_4828,call_4837,])
func_4838 = relay.Function([var_4822,var_4823,var_4828,], output)
mod['func_4838'] = func_4838
mod = relay.transform.InferType()(mod)
var_4839 = relay.var("var_4839", dtype = "float32", shape = (8, 13, 3))#candidate|4839|(8, 13, 3)|var|float32
var_4840 = relay.var("var_4840", dtype = "float32", shape = (8, 13, 3))#candidate|4840|(8, 13, 3)|var|float32
var_4841 = relay.var("var_4841", dtype = "uint64", shape = (10, 110))#candidate|4841|(10, 110)|var|uint64
output = func_4838(var_4839,var_4840,var_4841,)
func_4842 = relay.Function([var_4839,var_4840,var_4841,], output)
mutated_mod['func_4842'] = func_4842
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4992 = relay.const(-6, dtype = "int64")#candidate|4992|()|const|int64
var_4993 = relay.var("var_4993", dtype = "int64", shape = (13, 10, 13))#candidate|4993|(13, 10, 13)|var|int64
bop_4994 = relay.greater_equal(const_4992.astype('bool'), var_4993.astype('bool')) # shape=(13, 10, 13)
uop_5008 = relay.atan(bop_4994.astype('float32')) # shape=(13, 10, 13)
output = uop_5008
output2 = uop_5008
func_5015 = relay.Function([var_4993,], output)
mod['func_5015'] = func_5015
mod = relay.transform.InferType()(mod)
var_5016 = relay.var("var_5016", dtype = "int64", shape = (13, 10, 13))#candidate|5016|(13, 10, 13)|var|int64
output = func_5015(var_5016)
func_5017 = relay.Function([var_5016], output)
mutated_mod['func_5017'] = func_5017
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5472 = relay.var("var_5472", dtype = "float32", shape = (6, 3, 4))#candidate|5472|(6, 3, 4)|var|float32
uop_5473 = relay.atanh(var_5472.astype('float32')) # shape=(6, 3, 4)
output = relay.Tuple([uop_5473,])
output2 = relay.Tuple([uop_5473,])
func_5480 = relay.Function([var_5472,], output)
mod['func_5480'] = func_5480
mod = relay.transform.InferType()(mod)
mutated_mod['func_5480'] = func_5480
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5481 = relay.var("var_5481", dtype = "float32", shape = (6, 3, 4))#candidate|5481|(6, 3, 4)|var|float32
func_5480_call = mutated_mod.get_global_var('func_5480')
call_5482 = func_5480_call(var_5481)
output = call_5482
func_5483 = relay.Function([var_5481], output)
mutated_mod['func_5483'] = func_5483
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5580 = relay.var("var_5580", dtype = "float32", shape = (11, 15, 5))#candidate|5580|(11, 15, 5)|var|float32
uop_5581 = relay.asin(var_5580.astype('float32')) # shape=(11, 15, 5)
output = relay.Tuple([uop_5581,])
output2 = relay.Tuple([uop_5581,])
func_5587 = relay.Function([var_5580,], output)
mod['func_5587'] = func_5587
mod = relay.transform.InferType()(mod)
mutated_mod['func_5587'] = func_5587
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5588 = relay.var("var_5588", dtype = "float32", shape = (11, 15, 5))#candidate|5588|(11, 15, 5)|var|float32
func_5587_call = mutated_mod.get_global_var('func_5587')
call_5589 = func_5587_call(var_5588)
output = call_5589
func_5590 = relay.Function([var_5588], output)
mutated_mod['func_5590'] = func_5590
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5645 = relay.var("var_5645", dtype = "uint64", shape = ())#candidate|5645|()|var|uint64
var_5646 = relay.var("var_5646", dtype = "uint64", shape = (11, 10, 9))#candidate|5646|(11, 10, 9)|var|uint64
bop_5647 = relay.bitwise_and(var_5645.astype('uint64'), var_5646.astype('uint64')) # shape=(11, 10, 9)
output = relay.Tuple([bop_5647,])
output2 = relay.Tuple([bop_5647,])
func_5666 = relay.Function([var_5645,var_5646,], output)
mod['func_5666'] = func_5666
mod = relay.transform.InferType()(mod)
mutated_mod['func_5666'] = func_5666
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5666_call = mutated_mod.get_global_var('func_5666')
var_5668 = relay.var("var_5668", dtype = "uint64", shape = ())#candidate|5668|()|var|uint64
var_5669 = relay.var("var_5669", dtype = "uint64", shape = (11, 10, 9))#candidate|5669|(11, 10, 9)|var|uint64
call_5667 = func_5666_call(var_5668,var_5669,)
output = call_5667
func_5670 = relay.Function([var_5668,var_5669,], output)
mutated_mod['func_5670'] = func_5670
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5797 = relay.const([[[-9.179796],[-4.725423],[-4.213122],[5.109261],[5.035754],[-7.060065],[-3.638005],[0.938683],[7.674199],[-5.912799]],[[6.036220],[9.548739],[7.192695],[8.036102],[-1.174528],[-2.092105],[-6.311634],[7.316023],[-4.699207],[8.447531]],[[-3.121468],[-0.185304],[-9.144211],[1.005152],[4.909588],[0.554675],[-5.829928],[-5.990803],[0.518289],[-5.411765]],[[-9.807573],[-4.294863],[-2.493227],[-0.348554],[2.403669],[-6.296324],[1.800042],[-2.606195],[-8.357862],[-4.301324]],[[6.161609],[-1.223186],[-2.070217],[3.456449],[-2.233890],[9.734440],[-5.683948],[-6.204822],[8.987681],[-0.899960]],[[-5.529000],[-2.786928],[7.329915],[0.946984],[-6.958464],[0.258560],[9.217999],[9.728831],[-2.668509],[6.054851]],[[-5.051183],[8.976710],[3.734282],[8.944957],[-2.613663],[1.828082],[3.180950],[3.568923],[-9.481276],[-9.766530]],[[-8.595813],[1.715706],[-2.170721],[1.454419],[4.026985],[8.645556],[8.267511],[8.607250],[-3.679810],[1.618673]],[[-3.303488],[8.863271],[-0.275274],[-8.968882],[7.317940],[1.645006],[-8.181701],[-2.654140],[6.926013],[7.177378]],[[-6.201815],[-0.677217],[7.090257],[-4.451443],[0.681857],[4.218670],[-8.874799],[6.590137],[4.946655],[-4.739222]]], dtype = "float32")#candidate|5797|(10, 10, 1)|const|float32
uop_5798 = relay.tan(const_5797.astype('float32')) # shape=(10, 10, 1)
func_5015_call = mod.get_global_var('func_5015')
func_5017_call = mutated_mod.get_global_var('func_5017')
var_5805 = relay.var("var_5805", dtype = "int64", shape = (1690,))#candidate|5805|(1690,)|var|int64
call_5804 = func_5015_call(relay.reshape(var_5805.astype('int64'), [13, 10, 13]))
call_5806 = func_5015_call(relay.reshape(var_5805.astype('int64'), [13, 10, 13]))
var_5817 = relay.var("var_5817", dtype = "float32", shape = (10, 10, 10))#candidate|5817|(10, 10, 10)|var|float32
bop_5818 = relay.logical_or(uop_5798.astype('bool'), var_5817.astype('bool')) # shape=(10, 10, 10)
uop_5822 = relay.cosh(bop_5818.astype('float32')) # shape=(10, 10, 10)
func_4285_call = mod.get_global_var('func_4285')
func_4288_call = mutated_mod.get_global_var('func_4288')
var_5826 = relay.var("var_5826", dtype = "float32", shape = (630,))#candidate|5826|(630,)|var|float32
call_5825 = func_4285_call(relay.reshape(var_5826.astype('float32'), [15, 14, 3]))
call_5827 = func_4285_call(relay.reshape(var_5826.astype('float32'), [15, 14, 3]))
output = relay.Tuple([call_5804,var_5805,uop_5822,call_5825,var_5826,])
output2 = relay.Tuple([call_5806,var_5805,uop_5822,call_5827,var_5826,])
func_5828 = relay.Function([var_5805,var_5817,var_5826,], output)
mod['func_5828'] = func_5828
mod = relay.transform.InferType()(mod)
var_5829 = relay.var("var_5829", dtype = "int64", shape = (1690,))#candidate|5829|(1690,)|var|int64
var_5830 = relay.var("var_5830", dtype = "float32", shape = (10, 10, 10))#candidate|5830|(10, 10, 10)|var|float32
var_5831 = relay.var("var_5831", dtype = "float32", shape = (630,))#candidate|5831|(630,)|var|float32
output = func_5828(var_5829,var_5830,var_5831,)
func_5832 = relay.Function([var_5829,var_5830,var_5831,], output)
mutated_mod['func_5832'] = func_5832
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5912 = relay.var("var_5912", dtype = "float32", shape = (14, 10, 3))#candidate|5912|(14, 10, 3)|var|float32
const_5913 = relay.const([[[0.057943,-4.046764,-8.468496],[7.546091,5.626275,4.414298],[-2.494317,8.472510,2.169693],[-7.759749,9.183337,0.251956],[-6.919884,-3.711838,-6.233770],[-5.845028,0.654964,-3.222596],[-5.843142,-0.161506,-0.011946],[-2.920717,-5.156456,1.992719],[7.751997,6.192231,-0.630727],[-2.736348,-7.520000,-3.449839]],[[-0.250248,-0.925017,9.169109],[-2.488192,-5.709546,0.287998],[-7.383707,6.584282,6.699770],[-5.858151,6.025382,9.620326],[-2.258117,-0.437968,-1.112997],[9.730016,2.634909,-8.458062],[-9.661384,-3.467830,-3.644990],[5.043778,6.650640,0.988150],[-5.961485,1.003901,8.128507],[0.650389,-3.601235,-5.005605]],[[-0.797014,-6.104962,4.498684],[-5.804244,2.844639,9.173317],[-6.432206,-9.906462,4.231781],[-8.431262,-2.330667,4.698586],[-8.263378,9.004418,-1.264017],[8.365083,-3.956790,-7.615596],[0.299561,9.171079,9.821024],[-8.676276,-1.385506,5.398748],[-7.195354,4.385608,5.266206],[-5.658522,6.678148,3.318402]],[[-5.901978,3.668295,-1.201271],[-8.317425,-9.223983,-4.319280],[-4.701769,-5.967428,9.012364],[4.046854,5.430576,-2.244346],[5.213276,1.729407,9.973990],[7.810818,9.268518,-6.884909],[-1.389422,1.467275,-8.565854],[7.711874,-0.059858,4.825457],[6.668306,9.103563,8.617980],[-5.303848,1.241330,-8.142144]],[[-8.185064,-0.287080,-5.491279],[2.526086,6.086929,8.369008],[-0.663735,2.466552,-6.839237],[-8.259216,3.171188,7.653404],[-5.695777,0.140370,7.168389],[-2.916220,7.564385,4.853424],[5.611565,0.036978,-6.970664],[-1.025108,2.065066,3.970613],[4.397241,4.323183,-0.622914],[2.856805,-5.567171,-5.443557]],[[-2.631899,3.525147,7.340289],[4.803516,0.571631,7.265474],[-2.325952,-0.858398,4.900992],[2.486677,-2.096063,6.863224],[2.695517,6.837170,-8.225846],[5.570603,-9.637180,-5.363789],[-4.298785,-5.775624,-6.309092],[2.048898,6.833640,-8.243665],[2.899835,1.025098,6.843039],[-9.040770,-7.862473,-8.270083]],[[0.860269,4.714019,9.520906],[5.906088,-6.709060,2.113121],[-4.326636,7.632131,2.276122],[-4.633334,9.982191,-1.020318],[8.822017,-7.640176,-3.634513],[-0.129748,-1.422546,5.094503],[7.381667,8.029779,-9.568391],[4.543749,6.510250,-6.909633],[-2.048914,-5.141079,2.664324],[-1.286478,5.453716,-3.149753]],[[-6.557267,-2.023928,-2.663863],[-4.938803,-8.236862,0.472298],[-7.969426,0.302782,6.413939],[-2.491667,8.364438,-8.046710],[9.374614,9.773573,7.971358],[-5.909228,-0.028971,-9.492662],[-1.230350,-6.040411,9.892670],[5.024151,-4.500901,4.787294],[5.631429,-8.301564,-2.982688],[9.679492,3.764393,6.581408]],[[-7.130496,-6.147024,-0.484526],[6.463344,5.808906,1.495616],[-2.484382,8.597601,-3.349148],[-7.137938,-5.343301,-3.510974],[0.165237,5.689005,-0.487345],[9.584065,-2.632907,4.083768],[7.577807,-6.459873,-4.865008],[9.927219,-2.172110,-5.658703],[5.763025,-4.645225,4.459391],[3.649986,-5.920462,2.789494]],[[0.438846,6.639316,4.446703],[-3.392098,-9.955669,1.604630],[-4.270217,0.762084,1.943732],[1.783268,-6.885424,1.512174],[-2.648868,2.448476,6.393903],[0.130538,0.642436,-5.864170],[1.971683,4.856847,2.625116],[8.373444,0.288130,2.133634],[-5.248118,-7.691563,-3.016472],[-9.747171,-5.354876,-2.360269]],[[-0.013220,-7.051311,-1.150399],[-8.083396,9.147391,1.788387],[7.945852,-6.961171,7.613258],[0.650718,8.642627,3.522630],[4.022330,-3.744705,7.121674],[1.934831,8.314242,7.019216],[5.888159,5.039105,-3.394952],[5.073499,9.598541,-6.328023],[1.843035,-7.929923,1.310199],[5.581110,1.915043,-9.898728]],[[-2.166502,0.547424,8.725284],[3.557393,-4.822575,9.560112],[-3.960482,-6.166770,3.981649],[-3.706164,1.243838,5.920485],[-2.811924,7.695630,-9.538682],[-7.789970,-4.348280,-6.039387],[7.686164,-8.441793,0.039264],[-9.888419,-7.734627,6.461294],[6.333432,6.867422,1.780756],[-8.317470,3.185174,0.016369]],[[0.021918,-1.721433,7.379369],[-9.587515,-7.371918,0.362612],[-7.923916,7.225964,-4.992637],[-3.851460,3.917991,-5.372613],[-4.711915,-2.203454,1.104412],[-9.377434,-7.986681,-0.835808],[2.258093,-5.255783,8.161733],[6.577908,3.114315,-5.923510],[-8.184637,6.965749,-9.434803],[-8.247898,-6.548946,-8.310724]],[[-7.044715,6.848057,2.249807],[9.430705,-4.634322,8.275236],[5.664216,8.815707,0.504850],[-3.521053,1.135653,3.546092],[-9.316990,-1.170667,9.662922],[-2.148635,3.692692,-1.106480],[9.660427,-6.264531,2.997199],[3.933145,-7.744172,3.232314],[-5.634475,0.374971,0.117740],[-3.888623,-1.535198,8.767485]]], dtype = "float32")#candidate|5913|(14, 10, 3)|const|float32
bop_5914 = relay.floor_divide(var_5912.astype('float32'), relay.reshape(const_5913.astype('float32'), relay.shape_of(var_5912))) # shape=(14, 10, 3)
output = relay.Tuple([bop_5914,])
output2 = relay.Tuple([bop_5914,])
func_5921 = relay.Function([var_5912,], output)
mod['func_5921'] = func_5921
mod = relay.transform.InferType()(mod)
mutated_mod['func_5921'] = func_5921
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5922 = relay.var("var_5922", dtype = "float32", shape = (14, 10, 3))#candidate|5922|(14, 10, 3)|var|float32
func_5921_call = mutated_mod.get_global_var('func_5921')
call_5923 = func_5921_call(var_5922)
output = call_5923
func_5924 = relay.Function([var_5922], output)
mutated_mod['func_5924'] = func_5924
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6458 = relay.const([[[-5,-9],[7,-5],[-4,-4],[-10,7],[-5,5],[-1,7]]], dtype = "uint64")#candidate|6458|(1, 6, 2)|const|uint64
var_6459 = relay.var("var_6459", dtype = "uint64", shape = (12, 6, 2))#candidate|6459|(12, 6, 2)|var|uint64
bop_6460 = relay.right_shift(const_6458.astype('uint64'), var_6459.astype('uint64')) # shape=(12, 6, 2)
func_5666_call = mod.get_global_var('func_5666')
func_5670_call = mutated_mod.get_global_var('func_5670')
const_6467 = relay.const(-3, dtype = "uint64")#candidate|6467|()|const|uint64
const_6468 = relay.const([[-6,7,1],[8,-10,-5],[-6,6,-5],[1,2,-4],[6,6,3],[-7,6,-8],[-6,2,-9],[-9,-3,8],[6,3,7],[-10,3,8],[10,4,-9],[-5,-7,1],[4,-1,-6],[5,2,10],[7,10,-8],[5,4,-5],[10,-8,-9],[-4,-2,9],[6,10,6],[-5,9,-5],[4,6,9],[-10,3,7],[10,4,6],[10,1,-10],[-9,2,-2],[7,-6,3],[4,6,5],[9,7,-9],[-1,7,-8],[-9,-1,5],[7,-9,-4],[-10,-10,-6],[-2,-2,2],[-3,8,-3],[8,3,2],[-3,1,1],[6,4,8],[1,-8,-10],[-4,-1,7],[-1,7,-4],[-4,-7,-1],[-10,10,5],[5,9,-10],[-4,-3,9],[1,5,-5],[-9,6,-4],[4,5,10],[-3,7,8],[10,4,-9],[5,2,-9],[9,-6,4],[5,3,-4],[-2,-8,1],[-8,10,-6],[2,8,-5],[1,-5,-10],[-6,-10,5],[-10,3,7],[3,-4,-5],[1,-6,-3],[8,-5,-2],[3,-10,-5],[-9,3,4],[-5,-5,-10],[-3,-8,-2],[10,-7,-2],[-9,-5,9],[7,6,1],[10,-8,7],[5,-1,-9],[-6,-2,5],[9,10,-5],[7,-9,2],[4,-8,-6],[10,-6,-4],[1,-5,2],[6,4,-9],[-7,2,9],[5,-7,4],[9,5,-5],[10,1,-9],[-5,-6,3],[1,2,-5],[9,-2,5],[10,-2,-9],[5,2,-5],[9,-10,-3],[2,2,-9],[-5,-6,-7],[-7,-5,1],[3,-3,2],[-10,10,-7],[10,10,5],[8,10,-9],[5,1,4],[-3,-7,-3],[-4,9,-2],[10,-8,-5],[-10,5,9],[6,-9,-5],[10,-9,4],[-6,-7,-6],[-1,-1,7],[-4,-1,6],[2,-3,8],[5,5,4],[7,2,3],[3,4,-7],[-1,5,-9],[-1,10,5],[3,-5,3],[10,7,6],[-9,8,-4],[-2,5,1],[8,-6,-6],[-10,10,-9],[-5,4,10],[4,8,3],[-6,-1,4],[-6,3,-5],[-2,10,-10],[-4,8,9],[-6,9,6],[10,-9,-4],[2,-7,9],[-6,7,-2],[6,2,-3],[-4,-5,-7],[-9,2,9],[-2,3,7],[-3,4,10],[-7,-3,10],[1,7,9],[4,2,-7],[-1,1,8],[7,-1,-1],[6,-7,10],[-6,-3,6],[8,1,7],[10,-7,-3],[9,8,2],[2,1,8],[-9,4,-9],[6,-2,9],[7,9,-2],[-2,-6,-4],[-2,-6,-8],[-4,-9,10],[9,-9,-7],[10,10,9],[-6,5,-9],[-8,-5,-4],[9,1,6],[-9,-7,6],[5,-7,9],[-8,-7,7],[-2,-9,-9],[2,-2,-7],[-4,5,-5],[7,-1,6],[2,-3,7],[-9,4,7],[-2,5,-4],[6,1,3],[-4,-5,-7],[-3,2,-2],[-9,-7,-8],[8,5,-7],[8,-9,5],[-2,-4,-4],[-5,-2,6],[-8,-6,7],[9,-5,1],[-5,5,5],[-8,1,-3],[3,-3,-8],[2,5,1],[1,9,6],[1,-8,-7],[-8,-1,7],[3,5,8],[8,-9,7],[5,10,7],[4,1,-4],[-5,5,1],[-2,-5,-2],[-10,2,-3],[9,-10,-4],[9,5,-1],[8,1,-4],[5,-9,-2],[-3,3,-2],[-8,-6,2],[-5,9,-10],[-9,6,2],[-4,-5,9],[-6,-2,10],[5,6,6],[5,-10,-1],[5,-9,-4],[3,7,-1],[-7,-1,-5],[-4,-10,-6],[-2,-8,-3],[3,1,-1],[2,-2,-1],[-7,1,-9],[8,-9,-6],[7,-3,-2],[-5,8,-8],[2,-10,9],[9,-10,-4],[9,4,2],[-4,-10,5],[-5,7,-10],[-2,-5,9],[4,1,-10],[-4,-9,-8],[8,2,-9],[10,-1,9],[3,4,-2],[1,-10,-1],[-9,9,1],[1,-9,7],[-3,-6,-5],[-4,4,6],[8,3,2],[-8,9,9],[7,1,-4],[-8,7,-9],[-6,-1,-10],[8,4,8],[9,7,3],[10,-5,-10],[1,-3,-1],[-9,5,7],[6,-5,-1],[6,-9,8],[6,-4,10],[9,-1,10],[-7,8,10],[9,-5,6],[-7,5,-5],[8,2,-4],[9,6,6],[-3,-6,6],[8,-1,10],[-10,10,-3],[-10,-6,-6],[-9,-2,4],[-10,2,7],[1,3,-10],[-9,-10,-6],[2,7,-10],[-6,9,-3],[-9,-1,8],[-9,5,3],[5,-6,9],[-1,7,8],[-2,-6,4],[5,2,-4],[-5,-3,7],[6,6,-10],[-3,5,-8],[9,7,4],[-7,-5,-4],[-1,-6,-9],[-8,4,6],[-10,-4,1],[8,-5,-5],[8,-7,-1],[4,9,-6],[-2,3,2],[-1,-8,-7],[-8,-9,2],[3,6,-3],[-10,-10,-8],[9,-5,-9],[2,9,-6],[9,1,-8],[-1,-3,10],[5,4,10],[4,-5,2],[5,-3,-7],[3,4,5],[-7,2,5],[-7,-1,-10],[6,-10,4],[-2,-9,-5],[5,-2,2],[-10,4,-10],[-3,3,-9],[-4,-6,5],[-6,1,3],[10,4,8],[1,-6,1],[6,-4,-7],[-2,9,5],[10,-2,-7],[-6,6,2],[5,-1,8],[6,5,5],[-6,-2,6],[10,1,6],[-8,6,2],[5,1,8],[-9,3,8],[-7,6,-9],[9,10,-1],[7,-9,-3],[-2,10,-6],[3,5,-1],[-6,7,-10],[-6,-8,-8],[-1,10,1],[-2,-2,6],[-1,5,-5],[-10,7,-4],[-8,5,-5],[6,-9,7],[-8,2,-1],[9,-5,9],[3,2,-9],[-6,-5,4],[3,9,4],[3,-6,3],[-1,-1,-9],[8,-2,-1],[-7,9,-7],[3,2,-5]], dtype = "uint64")#candidate|6468|(330, 3)|const|uint64
call_6466 = relay.TupleGetItem(func_5666_call(relay.reshape(const_6467.astype('uint64'), []), relay.reshape(const_6468.astype('uint64'), [11, 10, 9]), ), 0)
call_6469 = relay.TupleGetItem(func_5670_call(relay.reshape(const_6467.astype('uint64'), []), relay.reshape(const_6468.astype('uint64'), [11, 10, 9]), ), 0)
output = relay.Tuple([bop_6460,call_6466,const_6467,const_6468,])
output2 = relay.Tuple([bop_6460,call_6469,const_6467,const_6468,])
func_6473 = relay.Function([var_6459,], output)
mod['func_6473'] = func_6473
mod = relay.transform.InferType()(mod)
var_6474 = relay.var("var_6474", dtype = "uint64", shape = (12, 6, 2))#candidate|6474|(12, 6, 2)|var|uint64
output = func_6473(var_6474)
func_6475 = relay.Function([var_6474], output)
mutated_mod['func_6475'] = func_6475
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6512 = relay.var("var_6512", dtype = "float32", shape = (9, 11, 1))#candidate|6512|(9, 11, 1)|var|float32
uop_6513 = relay.sinh(var_6512.astype('float32')) # shape=(9, 11, 1)
bop_6521 = relay.equal(uop_6513.astype('bool'), relay.reshape(var_6512.astype('bool'), relay.shape_of(uop_6513))) # shape=(9, 11, 1)
func_2475_call = mod.get_global_var('func_2475')
func_2479_call = mutated_mod.get_global_var('func_2479')
var_6544 = relay.var("var_6544", dtype = "uint16", shape = (80,))#candidate|6544|(80,)|var|uint16
call_6543 = func_2475_call(relay.reshape(var_6544.astype('uint16'), [1, 5, 16]), relay.reshape(var_6544.astype('uint16'), [1, 5, 16]), )
call_6545 = func_2475_call(relay.reshape(var_6544.astype('uint16'), [1, 5, 16]), relay.reshape(var_6544.astype('uint16'), [1, 5, 16]), )
output = relay.Tuple([bop_6521,call_6543,var_6544,])
output2 = relay.Tuple([bop_6521,call_6545,var_6544,])
func_6556 = relay.Function([var_6512,var_6544,], output)
mod['func_6556'] = func_6556
mod = relay.transform.InferType()(mod)
var_6557 = relay.var("var_6557", dtype = "float32", shape = (9, 11, 1))#candidate|6557|(9, 11, 1)|var|float32
var_6558 = relay.var("var_6558", dtype = "uint16", shape = (80,))#candidate|6558|(80,)|var|uint16
output = func_6556(var_6557,var_6558,)
func_6559 = relay.Function([var_6557,var_6558,], output)
mutated_mod['func_6559'] = func_6559
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7085 = relay.var("var_7085", dtype = "float32", shape = (11, 8, 9))#candidate|7085|(11, 8, 9)|var|float32
var_7086 = relay.var("var_7086", dtype = "float32", shape = (11, 8, 9))#candidate|7086|(11, 8, 9)|var|float32
bop_7087 = relay.maximum(var_7085.astype('float32'), relay.reshape(var_7086.astype('float32'), relay.shape_of(var_7085))) # shape=(11, 8, 9)
bop_7090 = relay.logical_and(var_7085.astype('bool'), relay.reshape(bop_7087.astype('bool'), relay.shape_of(var_7085))) # shape=(11, 8, 9)
func_1735_call = mod.get_global_var('func_1735')
func_1739_call = mutated_mod.get_global_var('func_1739')
const_7094 = relay.const([3.403595,6.692506,-9.102168,3.509098,-5.324193,-3.805351,-3.543983,6.431172,-0.973225,-4.162265,-6.410067,-8.546514,9.144161,5.872827,-4.426082,-8.742475,4.882999,-4.114327,8.393817,-6.686922,-8.863020,-6.068140,-9.673869,1.900657,-6.486356,-5.783379,-8.137016,-3.393834,-6.304968,-6.392451,7.039759,-2.675950,-9.217732,-7.878205,5.349587,2.613096,7.484926,-7.288230,4.640868,-8.419897,8.132945,-6.379938,4.347310,0.919655,-0.135359,-2.920529,4.315440,5.993984,-0.958069,4.846032,-9.449333,8.590329,-4.974557,3.035229,6.313832,5.634057,-4.902780,-4.531051,9.702483,0.564113,4.161261,6.994971,3.977648,6.718733,-8.227037,6.609886,7.114080,3.184127,-4.744304,-1.518606,-6.641694,-7.552594,5.229925,0.717520,-0.282567,4.720327,-6.723890,-5.737396,1.666171,9.137499,-3.537636,-1.564711,7.437155,-0.332176,-2.814459,-3.371422,-6.418778,1.100791,6.216432,-0.233680,9.050878,-9.041341,-3.934972,1.243627,-1.548110,-6.449427,0.886079,-4.190550,-9.971242,-0.707257], dtype = "float32")#candidate|7094|(100,)|const|float32
call_7093 = relay.TupleGetItem(func_1735_call(relay.reshape(const_7094.astype('float32'), [2, 5, 10]), relay.reshape(const_7094.astype('float32'), [2, 5, 10]), ), 2)
call_7095 = relay.TupleGetItem(func_1739_call(relay.reshape(const_7094.astype('float32'), [2, 5, 10]), relay.reshape(const_7094.astype('float32'), [2, 5, 10]), ), 2)
output = relay.Tuple([bop_7090,call_7093,const_7094,])
output2 = relay.Tuple([bop_7090,call_7095,const_7094,])
func_7098 = relay.Function([var_7085,var_7086,], output)
mod['func_7098'] = func_7098
mod = relay.transform.InferType()(mod)
mutated_mod['func_7098'] = func_7098
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7098_call = mutated_mod.get_global_var('func_7098')
var_7100 = relay.var("var_7100", dtype = "float32", shape = (11, 8, 9))#candidate|7100|(11, 8, 9)|var|float32
var_7101 = relay.var("var_7101", dtype = "float32", shape = (11, 8, 9))#candidate|7101|(11, 8, 9)|var|float32
call_7099 = func_7098_call(var_7100,var_7101,)
output = call_7099
func_7102 = relay.Function([var_7100,var_7101,], output)
mutated_mod['func_7102'] = func_7102
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7274 = relay.var("var_7274", dtype = "uint8", shape = ())#candidate|7274|()|var|uint8
var_7275 = relay.var("var_7275", dtype = "uint8", shape = (6, 1, 8))#candidate|7275|(6, 1, 8)|var|uint8
bop_7276 = relay.less(var_7274.astype('bool'), var_7275.astype('bool')) # shape=(6, 1, 8)
output = bop_7276
output2 = bop_7276
func_7287 = relay.Function([var_7274,var_7275,], output)
mod['func_7287'] = func_7287
mod = relay.transform.InferType()(mod)
var_7288 = relay.var("var_7288", dtype = "uint8", shape = ())#candidate|7288|()|var|uint8
var_7289 = relay.var("var_7289", dtype = "uint8", shape = (6, 1, 8))#candidate|7289|(6, 1, 8)|var|uint8
output = func_7287(var_7288,var_7289,)
func_7290 = relay.Function([var_7288,var_7289,], output)
mutated_mod['func_7290'] = func_7290
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7496 = relay.var("var_7496", dtype = "int64", shape = (10, 13, 10))#candidate|7496|(10, 13, 10)|var|int64
const_7497 = relay.const([[[5,2,-10,7,-3,6,2,9,9,-5],[6,10,9,4,8,-9,3,-4,-4,-9],[-5,8,4,1,9,-10,5,9,-9,1],[2,-2,-3,-10,-7,-3,3,2,-1,3],[-8,-4,-2,-8,-6,2,-8,5,-1,8],[3,2,7,5,6,7,-10,10,4,5],[-6,-9,1,6,6,-10,7,5,8,1],[8,10,1,-10,-8,4,-1,-8,7,-2],[10,-2,-6,3,8,7,-4,-2,7,-9],[-6,-8,-7,9,2,7,-5,-3,7,-4],[1,-1,-8,-7,4,3,8,8,8,9],[7,4,-4,-3,-2,-6,-8,-8,-9,-3],[-1,-6,8,6,9,7,-1,10,-9,-6]],[[9,6,10,-4,-10,-5,-5,-2,3,10],[3,-10,10,10,2,-4,10,8,5,1],[1,6,7,9,-6,-3,-6,-3,-2,8],[9,-5,-4,-8,-5,4,-7,1,6,7],[9,-1,3,-1,-7,7,3,-4,4,-5],[3,6,10,7,9,10,-3,5,6,-1],[5,10,3,-6,-6,-8,2,2,-5,-2],[4,-4,-4,5,5,7,-7,9,-1,-6],[7,7,-10,-3,-9,-9,6,1,10,-4],[-3,4,-7,9,9,-4,-9,-4,-3,2],[-2,6,4,-8,1,-1,2,-4,10,5],[-9,4,2,-7,-6,7,-9,4,10,8],[-3,-8,4,-3,5,4,9,-2,-7,-7]],[[7,9,-9,-9,-6,-10,6,5,10,-4],[8,-1,-5,1,1,3,4,-3,-6,9],[9,-2,-7,-5,-4,2,-9,2,-5,6],[-1,-5,4,7,2,1,-9,-8,-9,-3],[-4,-9,-9,8,4,-1,4,1,6,7],[7,-9,10,-3,2,4,-3,10,-3,-6],[-10,-3,3,-2,3,-6,9,7,5,-10],[5,5,-8,10,1,10,2,-8,9,-5],[1,-5,9,2,1,10,-8,6,10,-9],[1,-2,3,2,-4,-4,-8,-7,-10,-8],[-1,-9,-5,-6,10,-4,5,7,-10,1],[4,8,6,-7,-4,-9,7,-5,2,7],[-9,4,9,-5,8,2,3,4,-5,8]],[[-9,-6,5,-9,5,7,-7,9,2,-6],[9,-2,9,-2,10,6,6,-6,-3,8],[-2,-1,7,6,3,-8,1,-3,-10,5],[-8,9,-10,7,-1,3,-9,2,-4,3],[-10,8,-3,-10,-9,-10,5,-10,-6,10],[1,9,-10,6,-9,1,-10,-3,-3,7],[-9,8,-8,-10,-7,-10,-6,8,1,-9],[-1,-4,-1,-5,9,4,-10,-3,-3,1],[-5,-8,-1,8,8,-4,8,-3,4,-1],[9,2,-2,-8,-10,-6,-1,8,3,-5],[3,-2,-9,10,-3,8,-10,3,-7,-6],[-9,2,9,3,-5,-2,2,-9,-9,4],[-2,5,-3,4,9,-7,-4,-10,10,-4]],[[-4,3,-10,-6,-1,-10,3,9,-4,-9],[4,-1,6,3,5,-9,6,4,4,7],[-2,-2,-4,2,3,1,7,10,-5,9],[2,10,2,6,-6,3,1,3,-8,3],[8,1,-6,-9,5,1,-8,9,-7,-5],[-7,-10,-6,4,-8,5,9,-1,10,7],[10,5,9,5,9,8,10,6,1,-8],[-5,4,1,-10,-9,-6,-5,6,-7,1],[-3,-5,8,-7,-9,9,9,9,-1,3],[-8,-9,-4,-8,-6,-10,-1,-1,4,8],[-4,7,-10,-7,7,-3,1,-7,-4,7],[-5,10,9,5,-9,7,1,7,2,4],[-4,-4,6,-1,6,2,-6,-9,4,-8]],[[-8,6,-3,-9,-9,-4,-10,9,10,6],[-9,-9,-3,-9,2,-9,4,-8,-10,-4],[1,-3,6,7,-3,6,-3,8,3,4],[7,-8,1,-10,6,-2,-1,8,-9,7],[-9,-8,8,-10,-5,8,10,-5,-3,-5],[-10,-6,4,-2,8,-8,10,1,4,-9],[-8,3,5,10,-4,5,-2,6,-4,2],[8,10,6,6,-5,-8,-3,2,8,6],[-6,7,1,-5,-4,10,7,-7,-3,2],[9,-2,1,-2,5,3,8,-1,-5,-5],[-5,8,5,4,10,8,6,-6,2,-7],[6,8,10,-5,8,-2,7,3,-7,1],[-3,-9,-7,-7,10,7,4,10,-7,-6]],[[4,-7,10,-4,9,4,-4,-2,-9,1],[-2,5,-6,-9,1,1,5,-8,-10,-4],[8,2,3,3,2,1,-4,2,-5,-6],[-8,4,5,-2,4,5,-6,-6,-10,10],[4,-7,-2,-10,-2,5,-3,5,3,-2],[-3,-1,-3,-7,5,-6,3,-7,4,3],[-4,-8,-7,5,-2,7,6,-4,4,-4],[3,7,-3,10,-2,5,-1,-4,-8,10],[-8,7,6,4,7,10,6,-5,-4,6],[7,-3,-6,1,-6,6,-8,7,-6,-6],[9,-10,-5,-3,9,-4,-3,-7,2,3],[-8,3,3,10,10,-10,-9,-3,-5,-3],[6,-1,4,7,7,-5,10,1,-7,1]],[[-6,-8,1,-1,-8,1,10,2,-1,2],[-1,-4,-3,6,-7,-9,10,-8,-7,-9],[1,-8,1,9,-10,-1,5,4,4,8],[-7,-2,2,-9,-9,5,-6,5,4,-1],[-2,-7,-2,5,-1,5,9,6,-9,4],[1,2,-4,-7,2,5,2,2,-3,10],[-1,-3,-4,6,3,-3,-1,6,-3,-6],[-10,-8,-4,-8,7,-4,-3,-1,-5,-10],[4,7,-8,1,-3,-4,-9,-9,3,4],[5,8,-5,7,-3,10,-10,-5,7,10],[6,-7,8,-9,-5,-3,-1,10,-10,-5],[4,4,-2,2,8,3,10,8,8,-1],[10,-5,4,6,4,9,-9,-2,4,4]],[[10,6,9,-7,1,2,-1,4,-6,-1],[6,-8,5,-7,8,2,9,7,10,-7],[-4,-6,-9,10,3,-6,3,3,8,6],[-1,5,6,10,-7,-9,-7,6,7,1],[-1,-8,-1,-2,-3,6,-7,-2,2,-9],[10,-2,4,2,5,-1,10,-1,-4,-1],[-1,9,-7,-1,4,10,9,-10,9,6],[7,2,-1,-10,6,-2,-10,5,3,-8],[7,2,9,10,-5,-4,6,-10,9,-3],[-5,9,5,3,-9,6,9,1,9,-6],[10,7,-5,4,-10,10,2,-9,3,-5],[-2,-10,9,7,-7,-2,-4,-4,7,5],[-6,3,4,5,3,-4,10,-6,-7,7]],[[-7,-10,8,-1,5,4,-1,-9,8,-6],[3,8,4,-4,-8,-3,-10,7,1,6],[-4,-7,-7,1,2,6,7,-1,-9,-2],[-6,3,9,5,-8,6,-1,-6,-9,4],[4,7,8,-2,2,4,-8,5,5,-7],[-1,4,6,-10,6,-4,-8,4,8,-10],[10,10,1,7,-3,8,9,-8,1,-10],[4,1,-5,-7,-1,-7,1,10,3,7],[-4,-2,6,-6,7,-5,-9,2,-1,1],[4,-6,-5,8,-4,4,1,-10,3,5],[1,-1,-6,6,-10,1,5,2,4,8],[6,-7,-5,3,1,9,9,4,-1,-5],[9,8,5,-4,9,-8,-3,9,10,-7]]], dtype = "int64")#candidate|7497|(10, 13, 10)|const|int64
bop_7498 = relay.equal(var_7496.astype('bool'), relay.reshape(const_7497.astype('bool'), relay.shape_of(var_7496))) # shape=(10, 13, 10)
func_5587_call = mod.get_global_var('func_5587')
func_5590_call = mutated_mod.get_global_var('func_5590')
var_7502 = relay.var("var_7502", dtype = "float32", shape = (825, 1))#candidate|7502|(825, 1)|var|float32
call_7501 = relay.TupleGetItem(func_5587_call(relay.reshape(var_7502.astype('float32'), [11, 15, 5])), 0)
call_7503 = relay.TupleGetItem(func_5590_call(relay.reshape(var_7502.astype('float32'), [11, 15, 5])), 0)
func_1110_call = mod.get_global_var('func_1110')
func_1114_call = mutated_mod.get_global_var('func_1114')
const_7511 = relay.const([[1.859841],[-8.657963],[6.096011],[-2.525821],[2.434028],[-0.966877]], dtype = "float64")#candidate|7511|(6, 1)|const|float64
const_7512 = relay.const([2.645587,4.796812,-3.676290,-5.420797,5.431185,-0.260652,-4.799291,9.887567,-0.890847,-0.257562,7.417780,5.109462,-0.727789,9.554843,7.986383,-8.093894,4.170710,6.566182,6.134564,2.351961,4.672274,-7.099531,9.849895,-2.534953,2.599101,-5.192673,4.792435,-3.947537,9.492087,7.124896,-7.475931,-9.790868,8.590149,3.512791,4.102412,4.198721,-4.260635,4.373527,0.322893,-8.154317,-7.420834,8.206593,-1.199342,-1.054200,2.059148,6.601740,8.987425,6.210625,3.851015,4.925307,2.256633,1.872016,-7.792977,-6.218726,-8.021397,4.563735,5.912442,-1.318711,-8.103714,0.529947,-6.738002,1.253789,-9.628851,-0.049277,2.531539,4.374230,-1.682536,-9.005325,8.132312,-8.501867,6.242338,-6.501890,-9.298779,0.613930,6.705269,-4.049717,2.813107,-0.475663,4.306811,6.386896,-1.536891,0.793979,3.388233,-0.046598,-3.171567,4.321227,-4.799551,-2.326027,-9.356402,5.876381,5.774652,-4.857296,2.282668,-2.437006,2.713628,3.164877], dtype = "float64")#candidate|7512|(96,)|const|float64
var_7513 = relay.var("var_7513", dtype = "float64", shape = (605,))#candidate|7513|(605,)|var|float64
call_7510 = relay.TupleGetItem(func_1110_call(relay.reshape(const_7511.astype('float64'), [1, 3, 2]), relay.reshape(const_7512.astype('float64'), [16, 3, 2]), relay.reshape(var_7513.astype('float64'), [11, 55]), ), 1)
call_7514 = relay.TupleGetItem(func_1114_call(relay.reshape(const_7511.astype('float64'), [1, 3, 2]), relay.reshape(const_7512.astype('float64'), [16, 3, 2]), relay.reshape(var_7513.astype('float64'), [11, 55]), ), 1)
output = relay.Tuple([bop_7498,call_7501,var_7502,call_7510,const_7511,const_7512,var_7513,])
output2 = relay.Tuple([bop_7498,call_7503,var_7502,call_7514,const_7511,const_7512,var_7513,])
func_7548 = relay.Function([var_7496,var_7502,var_7513,], output)
mod['func_7548'] = func_7548
mod = relay.transform.InferType()(mod)
var_7549 = relay.var("var_7549", dtype = "int64", shape = (10, 13, 10))#candidate|7549|(10, 13, 10)|var|int64
var_7550 = relay.var("var_7550", dtype = "float32", shape = (825, 1))#candidate|7550|(825, 1)|var|float32
var_7551 = relay.var("var_7551", dtype = "float64", shape = (605,))#candidate|7551|(605,)|var|float64
output = func_7548(var_7549,var_7550,var_7551,)
func_7552 = relay.Function([var_7549,var_7550,var_7551,], output)
mutated_mod['func_7552'] = func_7552
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7556 = relay.var("var_7556", dtype = "float32", shape = (15, 13, 3))#candidate|7556|(15, 13, 3)|var|float32
var_7557 = relay.var("var_7557", dtype = "float32", shape = (15, 13, 3))#candidate|7557|(15, 13, 3)|var|float32
bop_7558 = relay.floor_divide(var_7556.astype('float32'), relay.reshape(var_7557.astype('float32'), relay.shape_of(var_7556))) # shape=(15, 13, 3)
output = relay.Tuple([bop_7558,])
output2 = relay.Tuple([bop_7558,])
func_7573 = relay.Function([var_7556,var_7557,], output)
mod['func_7573'] = func_7573
mod = relay.transform.InferType()(mod)
var_7574 = relay.var("var_7574", dtype = "float32", shape = (15, 13, 3))#candidate|7574|(15, 13, 3)|var|float32
var_7575 = relay.var("var_7575", dtype = "float32", shape = (15, 13, 3))#candidate|7575|(15, 13, 3)|var|float32
output = func_7573(var_7574,var_7575,)
func_7576 = relay.Function([var_7574,var_7575,], output)
mutated_mod['func_7576'] = func_7576
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7786 = relay.var("var_7786", dtype = "uint64", shape = (13, 11, 2))#candidate|7786|(13, 11, 2)|var|uint64
var_7787 = relay.var("var_7787", dtype = "uint64", shape = (13, 11, 2))#candidate|7787|(13, 11, 2)|var|uint64
bop_7788 = relay.right_shift(var_7786.astype('uint64'), relay.reshape(var_7787.astype('uint64'), relay.shape_of(var_7786))) # shape=(13, 11, 2)
func_1735_call = mod.get_global_var('func_1735')
func_1739_call = mutated_mod.get_global_var('func_1739')
var_7799 = relay.var("var_7799", dtype = "float32", shape = (100,))#candidate|7799|(100,)|var|float32
call_7798 = relay.TupleGetItem(func_1735_call(relay.reshape(var_7799.astype('float32'), [2, 5, 10]), relay.reshape(var_7799.astype('float32'), [2, 5, 10]), ), 1)
call_7800 = relay.TupleGetItem(func_1739_call(relay.reshape(var_7799.astype('float32'), [2, 5, 10]), relay.reshape(var_7799.astype('float32'), [2, 5, 10]), ), 1)
func_3521_call = mod.get_global_var('func_3521')
func_3525_call = mutated_mod.get_global_var('func_3525')
var_7825 = relay.var("var_7825", dtype = "float64", shape = (120,))#candidate|7825|(120,)|var|float64
call_7824 = relay.TupleGetItem(func_3521_call(relay.reshape(var_7825.astype('float64'), [10, 3, 4]), relay.reshape(call_7798.astype('float64'), [192,]), ), 2)
call_7826 = relay.TupleGetItem(func_3525_call(relay.reshape(var_7825.astype('float64'), [10, 3, 4]), relay.reshape(call_7798.astype('float64'), [192,]), ), 2)
func_7548_call = mod.get_global_var('func_7548')
func_7552_call = mutated_mod.get_global_var('func_7552')
const_7839 = relay.const([-8,5,-6,-3,-7,6,-8,3,-4,-5,3,-9,2,-10,-3,-2,-5,-7,3,-4,2,8,1,-6,-2,-1,3,-6,3,7,4,-6,-8,1,-2,-2,5,8,3,-4,-5,10,4,-2,-1,-2,10,-3,1,-10,1,9,3,-5,-1,1,-3,-3,-6,-3,-6,1,2,-6,10,-6,-1,-8,-4,9,9,1,-1,-8,-3,-6,-7,-7,-3,-10,3,3,-4,-8,-3,4,-7,3,-3,-8,3,5,3,6,7,8,-5,3,3,6,8,-7,6,6,-10,-6,-8,-2,3,6,4,-1,6,-8,5,4,-5,10,-10,1,-1,-4,7,10,2,1,10,6,-6,-5,-8,4,-2,7,9,4,6,-8,2,5,6,1,-10,3,1,6,-9,-5,5,2,1,-5,-4,9,3,-1,4,6,-8,1,-7,3,9,6,1,9,8,8,-9,7,3,-2,9,-2,-6,-10,-9,-8,10,-2,6,2,5,5,9,7,-9,10,8,-4,-2,-9,7,7,3,-10,-1,2,-4,-4,-6,-4,2,2,-5,-6,3,8,-3,7,6,-5,-2,5,-4,9,-1,-5,-1,5,-5,3,-8,-8,-7,7,4,10,-8,4,-3,-2,-9,7,7,-6,-5,-2,9,4,-7,-9,4,9,-4,4,9,2,-6,-8,3,7,4,-2,9,8,6,7,7,-4,10,-8,5,-6,1,5,-1,-5,-10,-7,3,-5,5,1,-7,-2,-2,-5,-2,-9,9,8,-6,3,10,-5,5,3,1,1,8,4,-4,6,-1,9,-9,-8,-2,1,10,6,-7,5,-5,-5,-10,3,-1,9,6,-2,9,-9,2,4,7,7,-10,-1,9,-8,-8,-4,-9,-1,-3,9,-4,2,10,5,-5,-1,-7,2,10,-6,10,-9,2,-4,-2,6,1,9,-3,9,1,5,-4,-3,-6,7,6,2,4,1,-1,2,-5,5,9,8,-6,5,9,-8,-4,8,9,-8,-10,-10,7,2,5,2,1,-2,-2,-9,-5,-5,-10,-1,-6,3,-1,4,-7,2,4,-5,-1,-2,-4,-5,5,-1,2,5,2,-4,5,1,-6,3,4,-5,-5,-1,5,1,3,-7,4,4,4,-9,8,10,-10,4,-2,-2,-5,9,6,-9,10,5,-2,9,9,-6,7,-10,10,4,4,-1,8,6,8,4,-5,-3,10,-4,2,-5,-5,-8,1,-7,8,4,7,-10,7,-6,-3,-1,3,-1,3,-3,-10,-3,3,-8,9,-6,1,-5,10,-5,10,-7,1,-9,-3,-3,5,6,8,-10,-5,7,-10,8,-4,4,-9,9,8,-4,-2,6,5,-7,7,9,-4,9,9,-6,10,-8,-1,-7,-7,-10,8,-8,7,5,5,-5,2,-6,1,3,4,-10,-10,-5,-8,8,2,-10,-3,4,-10,-8,-5,5,-6,9,2,4,4,9,-6,-9,-4,9,5,5,2,-10,-8,5,3,-4,1,7,1,9,-4,6,-9,-5,-6,-2,4,7,4,7,-4,-2,-3,10,4,1,-10,-4,-2,5,-9,-8,6,-8,7,-8,10,-6,9,-7,7,-9,-5,-8,-3,-6,-8,9,10,-6,5,-8,6,-8,-9,-5,2,-5,-10,3,6,10,-4,9,6,-10,1,-6,9,-9,-6,7,10,-5,3,-6,7,-4,-4,-4,-8,1,-2,6,8,2,-10,2,-8,-2,6,1,-3,6,-8,6,-7,-7,2,10,9,-4,10,-10,-6,1,-10,7,9,-9,-6,-5,3,-9,5,5,-1,2,-8,10,-7,-5,-5,-10,-8,3,5,-6,-10,-3,6,9,-8,1,-7,9,-3,-1,-9,-5,10,-4,8,3,-6,-4,-4,-2,-6,-8,3,7,4,-6,-8,1,-1,-5,4,6,6,-2,3,-3,-4,-5,10,5,-1,6,-4,-9,3,-3,-4,7,-8,-10,-3,-3,-8,6,-10,2,1,-1,5,9,4,5,2,-7,10,-3,-4,10,3,-8,6,-4,-7,4,-5,-10,-7,-8,-4,9,-4,-7,-9,10,10,6,-7,-4,5,6,3,8,10,8,3,-10,-10,-7,1,-2,3,-8,8,7,-2,-3,9,-4,1,7,-1,-1,3,1,-5,-6,3,-1,5,-6,10,-3,-3,2,-1,8,-3,5,8,9,-1,2,-10,-4,-2,4,-10,-5,-4,-8,3,6,-6,-3,7,10,10,1,-6,4,5,-1,3,-9,2,-1,-5,4,-6,-10,10,10,-3,-9,5,-8,-9,7,-5,-10,-6,-2,6,6,3,-6,7,5,8,-8,7,-7,-3,2,-1,-4,1,-1,2,-10,5,-1,3,-10,-2,-8,-2,-9,9,4,-2,-10,4,10,1,2,8,-8,-3,-4,9,-6,-8,8,4,7,10,-1,-9,2,-10,7,10,-1,-6,-8,8,7,-8,-3,-9,-10,-10,-5,1,10,-4,1,4,6,8,6,9,4,-2,-4,9,-4,-5,7,-6,1,-4,5,6,-10,7,-10,3,8,3,8,5,9,1,-8,-3,-7,3,8,3,-4,6,-1,-10,-6,-8,-4,-6,-3,-1,4,-1,-2,4,6,10,2,-3,-6,-1,-7,9,-1,6,-2,8,10,8,6,4,1,-9,1,-5,9,9,4,9,3,-1,2,-2,9,-6,5,-6,-5,1,-10,-3,2,-9,10,-2,-5,1,-2,-2,6,-7,-2,-7,-1,1,5,-2,-5,-3,-9,1,8,1,-6,1,3,-3,5,1,10,-7,5,-2,-2,-9,-10,5,4,-5,1,2,-8,-8,-7,-6,1,4,7,-10,10,8,-10,7,-10,-4,-10,4,3,8,-3,1,-2,-1,10,5,-1,-10,-7,4,-9,10,-7,7,8,-4,-2,4,7,-10,-7,6,10,-8,5,6,-2,-5,-1,-3,-10,2,1,5,-3,6,1,-9,-10,-8,1,-10,10,-4,-8,2,3,9,1,-3,-10,-8,2,4,6,-8,-7,2,2,8,4,-7,5,-2,-1,-3,-5,-5,-8,-9,-2,3,-3,-7,-4,6,-9,6,2,-10,-6,-5,-2,6,-1,4,1,-3,4,-3,6,-6,-4,-9,-2,-9,-2,9,-7,3,1,-1,9,-9,5,1,1,8,-10,4,-6,4,9,3,10,8,-5,6,-5,7,8,5,5,-7,-2,1,-5,-7,8,-4,6,-8,1,7,10,7,-1,-7,6,3,6,8,-9,-8,5,-3,-2,-3,6,8,-5,-4,-5,-5,7,-1,-4,-4,5,9,-2,10,5,6,5,-9,-8,9,4,-6,-3,-3,7,-9,-7,-2,-3,4,10,-3,-5,5,5,-7,-7,-9,-2,-7,-8,-1,7,6,8,1,-2,-2,5,8,-3,-1,10,3,2,10,8,-7,-7,-6,6,2,10,-5,-1,-6,-10,5,7,-1,-7,1,4,-2,-4,3,-8,8,-9,4,5,-4,-9,6,-8,8,-8,3,-8,3,5,-4,3,10,4], dtype = "int64")#candidate|7839|(1300,)|const|int64
const_7840 = relay.const([[1.881321,-1.232386,-9.120106,-6.542757,2.876795,-3.420312,-5.107040,0.179162,4.756979,-0.278623,-0.803806,4.302561,-8.638974,-6.408884,-1.130098],[4.642233,-7.132169,9.401248,-1.689956,3.782128,-4.022550,6.550308,4.030505,-1.935765,5.734081,9.574741,6.575864,1.618305,2.514966,-7.769478],[-5.383318,6.648430,3.439471,6.581306,4.094446,-6.014871,-3.695032,-5.060132,-2.790051,4.005695,9.766353,2.508324,2.943311,-5.579936,-5.382404],[-5.451649,-0.473519,-1.305600,-3.550811,2.348524,-8.238303,7.073280,-5.683183,-9.539199,-9.853463,-2.217644,-6.688206,-0.792782,-7.101272,-7.603993],[-8.797875,-5.411850,6.948856,-1.619870,-3.382950,3.747901,3.214766,-5.043051,-9.290205,-5.296122,-0.432639,-4.478481,-7.623420,-5.669466,6.369596],[-6.178341,6.262891,-0.195896,0.203356,6.067976,4.058803,-9.774395,7.679618,-1.807836,4.866668,2.725803,7.676619,-4.226333,-2.605162,-2.925919],[0.317904,0.683803,5.290975,3.860926,2.532079,8.008398,3.682037,3.834752,-6.986227,-4.561412,0.245305,1.703629,7.841642,-8.283356,-3.209423],[8.436451,5.440887,-9.471315,1.856758,7.552122,-0.130367,5.837366,-8.657489,8.155620,-8.097693,-4.608623,9.016493,-0.762906,6.319335,-8.271120],[1.701720,-0.118670,8.880962,-3.081609,-8.682088,0.316559,-4.013239,1.253329,1.242852,1.401631,-2.004217,8.651443,4.341768,8.401290,4.468671],[-7.688487,3.471650,1.007268,8.119233,2.198115,-5.266705,2.066601,8.884152,5.176888,1.092700,-5.098284,8.474852,7.325856,5.897561,2.830967],[-5.399834,-5.630726,-4.631045,-9.035656,2.799761,-0.116840,-2.493014,-6.378573,-1.755295,4.635514,-4.547382,5.204906,7.675489,-2.166982,2.124851],[4.409409,4.374437,-0.381277,-4.467405,5.129820,-4.744174,3.505218,4.307284,4.373404,6.858414,4.718012,-8.084161,5.235202,7.843544,4.088917],[-5.341076,6.349093,-7.248946,0.784238,-3.070109,-8.813220,-8.676706,-6.406082,1.803617,8.223967,-2.540999,-8.229212,-0.944399,-0.313393,7.869560],[-9.922129,2.337434,4.001146,3.237952,-2.732148,2.690326,2.574363,-5.628536,-2.730368,4.746975,-7.886225,-8.675188,-1.020484,9.771800,2.758639],[-5.148387,-3.961197,6.764331,1.984295,-8.052244,-8.728439,-8.473700,-4.808864,2.210363,-0.879718,-0.730601,-8.422643,7.610918,1.648343,-0.717306],[3.413995,2.979091,-9.515058,5.625915,1.163960,0.656698,-9.815717,9.458114,-2.316643,1.844632,4.428408,4.021364,-1.706622,2.975783,3.905332],[-4.922808,-4.503856,-8.418665,-1.797512,0.867643,-7.591168,-4.698676,-1.286049,5.641707,-3.779479,-2.772762,-6.108679,-0.175821,-5.606547,0.529924],[7.855578,4.665537,8.498460,-0.289796,6.718768,5.704943,-2.253133,-4.287293,-7.368445,1.579984,-6.578774,-5.210324,1.890622,-7.130142,-9.401396],[-2.866196,2.771271,-2.641079,8.917369,2.156875,-2.033211,-4.158721,-3.030408,6.659271,-4.287624,8.192145,-8.537460,-9.914200,-7.650841,-7.856751],[-8.610050,-6.166921,-2.620536,-6.611793,6.579842,-4.493392,-6.245184,-8.680292,-7.638718,9.288042,-0.612729,7.652091,5.727715,6.014532,-0.090913],[-3.759590,-7.386363,7.710960,7.955044,-2.337045,6.242873,-2.193910,-6.041668,-5.745532,0.692101,9.535947,-9.419444,-5.625445,-7.712191,-7.119435],[3.927668,3.973241,2.239233,-9.403743,-6.821706,-4.155603,-2.951390,-4.492834,0.912193,3.940058,-5.460820,4.274228,1.835778,-6.483763,4.941369],[1.880298,-4.902333,-6.875547,0.865700,-6.093161,1.903173,8.899453,-2.413586,-7.127187,-5.548056,-9.092507,4.409370,4.000308,1.792103,-2.794727],[-2.703462,-1.168489,1.608162,3.260517,7.104252,-8.116429,-0.721820,-6.667303,3.805322,-8.563177,-6.990167,3.662865,-3.090706,4.621162,-3.135388],[-9.710463,0.070924,9.494683,1.630357,6.096526,9.061864,-3.341307,6.406344,-6.950777,6.862045,-5.575748,8.106520,0.276846,-8.260251,3.557106],[2.401772,-8.109300,-1.659545,8.036760,-7.776255,9.585337,-2.963877,4.185230,-0.577601,2.414980,-9.692898,-5.652779,0.708017,-0.798229,-5.524699],[-9.277435,1.830979,-5.915738,0.535149,-1.487843,-1.286578,5.708555,9.456425,-6.126032,-1.509148,1.382673,4.479605,-2.952957,-9.065800,-5.690839],[-1.889995,-9.248106,4.014032,-5.730282,-9.129834,-9.592280,-5.472180,3.745418,-3.852846,2.178564,2.224835,-0.150197,-7.210847,7.624087,1.265755],[3.150937,6.256931,9.305627,-6.749711,2.375365,-0.877183,6.262452,8.356216,-5.239464,-4.426225,-4.272557,9.607615,-0.940123,5.229046,-6.760946],[-0.773168,-0.623024,1.650481,-2.747899,4.151936,-2.838569,-9.549071,-7.264289,-5.418750,8.989823,2.120376,3.910255,-2.409071,-3.894643,7.074567],[-7.368654,1.569506,5.772568,8.707351,-3.327226,9.633362,-8.642592,2.141881,8.954921,-2.803466,-9.823958,-0.375848,-1.378550,-2.047999,-3.934787],[2.044087,7.732598,-8.812060,7.804273,-2.075952,-2.828295,-2.218508,9.295896,-3.497930,7.023513,-1.457776,-0.390126,6.016160,6.205789,5.393228],[-5.897710,2.064188,5.048197,-1.979234,8.978642,2.769432,7.306759,-0.697771,2.661023,5.033212,0.772745,-2.157485,6.447733,-2.985747,2.103743],[-5.048881,-8.732242,6.637948,5.665251,-2.100229,6.571651,7.822080,2.281307,7.893911,-5.360199,-2.635341,-0.641039,0.315262,-0.705805,0.471071],[4.281127,2.981871,6.075688,-9.732137,9.580313,7.710915,-1.759053,4.185185,-7.909466,-5.780708,1.566484,9.303583,1.571581,0.313944,-6.508279],[-0.615151,3.476578,-8.668272,-8.359649,2.581886,1.177384,-3.188244,2.508219,-0.323634,3.614597,-4.724031,5.147620,-2.738855,-1.765122,-8.528816],[-3.370504,9.440675,4.309309,-8.713579,-6.494825,3.368011,-6.647494,6.938805,5.201721,-1.854003,-7.886855,4.061056,-8.131836,-0.465037,-3.718814],[4.427017,9.448855,-6.622723,-6.144644,9.522253,-9.918876,2.148355,-7.018638,0.026446,-6.756452,-8.159838,-6.952997,-0.200071,-8.725348,-7.115379],[5.569472,9.107169,-4.990572,1.031831,2.933713,2.362036,8.568990,-4.884261,0.474150,7.555622,0.479035,-5.094860,-6.605595,-7.937950,5.848064],[0.039253,8.125566,-9.067043,-8.574045,-1.164240,-0.876296,5.753572,-5.130468,2.316632,0.880269,9.740443,1.449939,4.482504,-5.712601,-0.583102],[-8.004428,1.234191,-2.881081,1.518849,2.210365,-4.761982,1.603705,-2.613314,-6.902458,8.835456,-5.808032,-2.236872,-9.097512,7.689055,-6.209577],[-4.868021,3.150425,-3.989971,7.139164,-9.508829,9.022912,-0.953518,3.170251,5.732101,6.868462,2.211593,5.932592,7.593935,5.254943,4.921402],[-8.342049,-6.699414,4.007442,6.260872,-9.306799,6.293112,5.883712,-3.716363,-1.624371,-7.489407,-1.218821,-7.331487,5.159311,0.957690,-4.779054],[-0.046338,3.735946,1.199104,7.374454,6.640839,-3.024188,-1.004194,1.582673,-7.712739,-4.099637,5.501897,1.306238,-1.451662,6.852491,9.323467],[-7.716204,-4.013097,8.113406,-6.912227,-5.691826,-5.760458,2.238017,-0.945943,-0.816721,-0.092169,2.160855,8.956407,8.115018,-8.701031,-6.715037],[5.845295,4.160199,-4.315738,2.871764,-7.768074,-1.034754,-2.438281,1.586948,-8.831958,-9.477672,-3.025133,-0.140227,-4.120780,3.229397,-7.788692],[-0.814648,0.905647,3.930811,-5.217726,-8.468015,1.120899,-5.653740,-6.261742,-8.128760,0.023657,-6.270348,9.082794,5.823438,-6.610941,-6.123115],[-2.459055,-8.117229,-1.482105,3.035869,-2.028023,3.336559,8.677356,-3.643913,1.225926,-8.474411,0.570760,-8.709311,-2.781785,-5.774874,3.560377],[3.192764,6.072485,2.951115,-6.399518,4.631459,-2.286809,-1.316715,-4.010327,-0.674649,7.223164,-8.370783,3.539172,7.304838,-3.753882,-3.029802],[-8.270099,-4.314922,-2.943679,-7.205673,-3.829447,0.397883,-7.409160,-2.987266,-6.370941,5.163606,-9.653976,-8.003190,-3.146436,8.351886,9.360120],[-4.124767,1.231807,-1.368591,-5.786150,-6.082760,-0.576446,-8.902550,4.877036,9.441529,6.933934,-3.084079,-3.977028,4.232104,-9.335547,0.144200],[-6.564639,-3.516117,-5.203966,6.906900,4.827861,-8.890098,-7.643091,-3.335825,9.117928,2.367859,-5.428034,-0.155411,7.427958,-5.638249,-7.723065],[4.795791,3.509719,1.610899,-3.977110,2.158855,-2.216715,2.298288,-2.321881,7.064569,0.039294,-2.066466,-9.687225,-2.649778,-9.202904,1.791434],[3.217142,4.808991,-3.033466,-2.551792,-2.734189,-2.940117,5.133937,5.919094,-4.350648,-2.861329,2.250113,8.838016,3.047770,5.784710,-3.278479],[0.279362,-8.773283,8.051176,4.657946,1.997535,8.319905,-2.402001,-5.415381,-6.670234,-5.659412,-0.287246,7.220422,3.237859,-9.094243,-6.923249]], dtype = "float32")#candidate|7840|(55, 15)|const|float32
var_7841 = relay.var("var_7841", dtype = "float64", shape = (11, 55))#candidate|7841|(11, 55)|var|float64
call_7838 = relay.TupleGetItem(func_7548_call(relay.reshape(const_7839.astype('int64'), [10, 13, 10]), relay.reshape(const_7840.astype('float32'), [825, 1]), relay.reshape(var_7841.astype('float64'), [605,]), ), 6)
call_7842 = relay.TupleGetItem(func_7552_call(relay.reshape(const_7839.astype('int64'), [10, 13, 10]), relay.reshape(const_7840.astype('float32'), [825, 1]), relay.reshape(var_7841.astype('float64'), [605,]), ), 6)
bop_7846 = relay.power(bop_7788.astype('float64'), relay.reshape(var_7787.astype('float64'), relay.shape_of(bop_7788))) # shape=(13, 11, 2)
func_674_call = mod.get_global_var('func_674')
func_678_call = mutated_mod.get_global_var('func_678')
const_7882 = relay.const([[-5.859802,9.695036,-2.606538,-0.974753],[-4.205094,2.514155,8.711461,9.951333],[-5.009743,5.811371,-5.974512,-5.497860],[-4.118228,7.268661,-9.538984,-6.361871],[-1.966405,-4.402757,-2.362982,7.894122],[0.515240,4.668729,-2.625432,-6.679592],[-9.848244,6.895045,-0.029276,-0.720079],[5.492395,5.366309,7.725731,1.135043],[1.755080,6.010066,-1.284253,-3.353390],[1.044069,8.533933,-9.692792,-7.873510],[0.676992,-0.861938,5.901267,-3.105545],[-9.317387,6.130721,5.114050,-7.178057],[-8.653618,-3.304983,-3.129046,-6.262130],[2.768032,5.528358,5.149194,-7.464328],[-9.561846,-7.915840,-4.364513,-0.763575],[-7.426027,-9.447077,-8.535492,-5.829842],[-2.623343,-3.516684,-4.635684,1.654540],[-9.620006,3.698337,-5.651302,-2.834216],[-2.289291,3.233238,0.926994,-7.882409],[6.933312,4.026819,1.040400,-2.837846],[-3.153431,-1.045130,4.152511,-0.105532],[-5.298072,4.096407,-4.755159,0.596391],[7.741791,2.078654,9.508528,-1.288956],[-7.652065,-9.942574,-1.255141,-1.183117],[2.582989,1.012463,-6.123349,-6.226608],[5.765366,8.526604,8.480630,3.168565],[8.296441,4.337961,-3.445604,4.486641],[4.960679,-6.793142,-8.803236,8.566539],[0.133781,-7.798295,-0.592022,-5.686066],[1.755233,0.108884,9.124119,5.577378],[6.615144,2.334733,-9.896993,5.921621],[-4.889855,0.085954,-0.470064,2.246495],[9.293063,4.841574,-2.472647,-0.414779],[7.983636,0.814390,-0.498923,-7.775488],[7.658026,6.974757,-8.518608,-4.322693],[-3.875610,-1.303801,-1.876479,-7.938548],[0.174712,8.233564,1.748406,3.584466],[-7.761293,4.691564,1.796566,-8.504799],[3.403664,7.122732,-8.515750,3.957684],[7.221324,0.154963,8.720510,-3.951570],[6.035154,-8.318129,8.664683,-1.677441],[-6.365987,-7.454912,8.965295,2.405049],[-3.832459,-7.352314,-7.108448,7.078516],[5.819561,6.932446,-8.857188,-3.712431],[5.108330,-4.285440,-2.504199,-1.793458],[2.579136,6.925014,-5.238542,8.192413],[6.935269,8.866577,9.570875,7.971172],[-6.567731,7.398343,-2.410734,-8.455751],[3.308755,-4.909359,8.131780,-3.110719],[6.575763,2.230452,-3.749015,-1.961507],[0.100264,6.191421,-2.417594,2.225703],[3.654091,6.038385,-6.515710,-6.723214],[2.201058,-8.581167,5.804538,9.973891],[-7.136888,-2.914123,8.998747,-4.621453],[7.584906,-0.157207,-5.116745,-3.378609],[-2.445245,-1.871137,8.994712,-0.115124],[8.831835,-8.988314,-9.070208,-3.388353],[-3.221759,6.246008,4.707815,-9.830012],[-5.586752,7.752066,2.606321,-3.598743],[7.731032,-7.986562,4.575544,0.410079],[8.449089,-0.204580,6.023720,-5.766110],[8.758353,-7.416073,9.310280,5.006883],[1.105197,3.227564,-5.922879,-5.454814],[-0.811963,4.233718,-0.268092,-8.463271],[-0.432428,2.511479,8.539792,0.046553],[0.761336,-4.333086,6.040170,-9.539889],[-8.782245,2.829537,-7.184007,-7.213499],[-7.617910,-9.224215,5.500004,7.620923],[9.855969,9.978947,-7.716733,-2.736478],[-2.203937,2.965552,-7.087173,-4.617451],[2.859703,-7.956156,-6.583887,-3.835246],[-6.688944,1.202601,3.285361,7.562417],[1.233111,-3.370459,6.474041,5.590653],[1.233337,0.278367,2.627593,-4.525915],[8.722714,-8.941398,7.666325,8.220713],[0.644710,8.681130,4.077095,-1.600684],[-7.813008,-7.673023,5.586125,4.153984],[-5.843678,-1.537004,3.274124,-5.019592],[0.489250,-3.134665,1.768947,-1.810749],[-7.170862,-5.700023,-5.378836,-4.029146],[6.356284,9.576702,-3.316601,6.540868],[1.726397,-7.805265,-7.348385,-8.260485],[6.235923,-3.884817,-0.650622,-7.787262],[3.397266,-7.604073,3.070812,-0.947622],[2.128228,9.401307,-4.307535,3.737196],[-5.852936,-1.657929,-7.261492,0.393381],[2.256008,7.902251,-7.124327,-7.624809],[-8.044184,-1.436219,5.298583,-9.852779],[-1.401744,0.585168,-6.733075,-6.219866],[-9.059425,6.008757,9.383496,0.982529],[-1.584626,-8.545935,-5.456003,-8.085684],[2.385471,-4.539544,3.838246,-3.138194],[-7.605597,1.687589,-3.955493,3.856799],[-0.270561,0.915497,3.658082,4.385906],[7.362383,4.002602,-0.902859,-2.503333],[-8.823279,9.538308,0.909815,2.947482],[5.693185,-1.007185,-3.014473,-4.277409],[-5.967187,7.711652,-5.318523,-9.803639],[-3.112647,4.440884,2.729212,5.739304],[-2.890627,-9.719653,-5.568371,0.630320],[-5.989789,0.909056,-0.060263,4.263238],[4.578610,-5.864899,4.305347,-2.837881],[-1.557299,8.674447,7.124223,2.386350],[3.843172,-7.723301,4.587904,3.934064],[6.408315,2.686136,-3.987442,2.814450],[6.395662,-8.068363,-3.815919,-5.011653],[-7.245121,-0.213430,-8.244257,-6.345084],[9.331066,5.040197,-9.649418,-3.256938],[0.759105,6.684678,7.424413,-4.030469],[2.315329,1.935573,7.491507,-9.570024],[2.053926,9.703779,9.451054,2.293263],[-1.462272,7.880403,8.233302,7.731470],[0.120073,8.787187,5.485651,3.661058],[-4.869696,-1.950647,7.808719,4.607278],[9.824095,-4.138417,-3.532331,-9.406937],[1.000112,-6.096294,6.508095,0.865910],[-8.325396,7.529005,-1.496075,-1.009368],[-1.856570,-8.170249,-1.539646,-8.444891],[0.879598,-7.652946,8.391096,-8.440710],[-9.638154,9.476176,-7.457815,9.146220],[9.058464,-4.284493,8.582002,-1.112205],[5.997281,3.952052,3.581060,-0.592974],[0.238081,-8.502391,2.092255,1.756350],[7.382010,7.885501,8.756285,5.989937],[-9.394495,4.268496,-3.812988,8.754894],[-0.869953,4.104318,-9.376169,-6.132937],[-3.693344,-1.721937,-3.713901,-5.684558],[5.301266,7.697939,-7.608925,9.439309],[4.986577,-7.874467,8.985222,4.344237],[3.824748,7.499747,-1.385675,7.937286],[-3.697078,-4.644661,4.791598,8.960720],[0.047994,0.326402,9.612437,-0.418560],[9.438314,-6.142242,-1.425390,5.124898],[9.330619,2.964652,-8.224232,-3.505943],[3.478782,3.559061,1.697139,5.763478],[-2.952015,-2.327801,7.120426,-5.345142],[-8.641908,5.648554,-1.513971,-1.634882],[8.526674,-4.500963,-5.234078,1.983463],[9.747286,-9.212218,1.405416,8.639929],[-1.589287,7.879755,-5.973587,8.018816],[-9.150978,8.985400,5.862475,-8.872509],[-6.378570,-8.321114,-0.849942,-9.331872],[9.894943,-9.321118,-5.202251,-1.983291],[-2.429201,-7.566612,9.736003,2.655251],[8.071551,-3.909779,-4.551707,3.546530],[9.351809,2.775685,4.465677,-9.957659],[-5.848915,7.282753,-3.025864,1.350694],[9.439288,-2.819624,1.720853,5.789144],[-5.254478,0.038250,-0.874245,3.852191],[7.912695,9.323711,-6.084011,3.780981],[2.862611,7.506233,-9.886644,-2.060537],[4.617770,-8.236973,-9.606158,1.369494],[8.850880,1.391572,6.478730,-7.236127],[3.227208,-7.347526,4.080097,-9.400596],[-2.212963,-0.449744,-7.158640,2.255866],[9.178418,5.709422,4.865609,2.177463],[4.685364,-4.479111,0.921298,8.784904],[7.731778,8.400966,2.775597,3.375481],[4.988805,-3.799022,-6.946979,2.666315],[5.100579,7.392810,2.659455,-1.592583],[4.062013,-3.791049,1.852729,0.045971],[5.999166,7.236041,-4.629386,-8.407142],[-3.416956,2.347773,-6.406054,0.112367],[8.808223,-5.436349,9.832584,-2.766189],[-1.958660,9.144899,-1.021732,-4.113933],[3.895666,5.990487,-3.537782,-9.828105],[-5.416600,3.261590,-9.725299,1.749439],[7.160887,7.592456,-9.515186,2.981358],[-9.168245,-1.422078,1.691053,-8.748931],[-4.438312,-8.827583,3.032519,7.186492],[-4.916383,2.746780,0.078877,8.928928],[-0.247413,8.363747,-0.044473,5.940773],[-0.072151,1.027484,-5.290431,-9.994385],[9.010252,3.054961,6.944716,4.479008],[6.430013,5.785201,5.376119,4.555097],[9.128235,-5.588634,5.044765,-2.180514]], dtype = "float32")#candidate|7882|(176, 4)|const|float32
call_7881 = func_674_call(relay.reshape(const_7882.astype('float32'), [11, 4, 16]), relay.reshape(const_7882.astype('float32'), [11, 4, 16]), )
call_7883 = func_674_call(relay.reshape(const_7882.astype('float32'), [11, 4, 16]), relay.reshape(const_7882.astype('float32'), [11, 4, 16]), )
func_6473_call = mod.get_global_var('func_6473')
func_6475_call = mutated_mod.get_global_var('func_6475')
const_7888 = relay.const([5,-2,-3,-2,-2,-2,1,5,5,6,10,-6,5,-6,5,1,-3,2,10,6,-8,-5,10,-8,10,10,2,-8,-1,9,-4,-6,3,-2,-6,5,9,-5,-1,-3,7,-2,-9,-7,-7,-8,7,7,-6,3,1,5,9,6,3,1,-1,8,-5,2,-1,10,-8,6,-10,-3,-8,-9,-10,-6,-4,-2,2,-5,-5,7,-1,4,8,1,-10,8,-5,-6,2,8,9,-1,10,-7,6,4,3,-5,9,-8,2,-8,5,-2,6,-2,-9,-7,2,-7,8,-4,-9,-3,-6,-7,8,-5,-9,-9,6,1,8,-6,10,7,-5,2,-3,-10,5,-9,-5,6,-3,9,10,-5,-8,7,6,-7,-8,-5,-3,1,-2,-10], dtype = "uint64")#candidate|7888|(144,)|const|uint64
call_7887 = relay.TupleGetItem(func_6473_call(relay.reshape(const_7888.astype('uint64'), [12, 6, 2])), 2)
call_7889 = relay.TupleGetItem(func_6475_call(relay.reshape(const_7888.astype('uint64'), [12, 6, 2])), 2)
output = relay.Tuple([call_7798,var_7799,call_7824,var_7825,call_7838,const_7839,const_7840,var_7841,bop_7846,call_7881,const_7882,call_7887,const_7888,])
output2 = relay.Tuple([call_7800,var_7799,call_7826,var_7825,call_7842,const_7839,const_7840,var_7841,bop_7846,call_7883,const_7882,call_7889,const_7888,])
func_7904 = relay.Function([var_7786,var_7787,var_7799,var_7825,var_7841,], output)
mod['func_7904'] = func_7904
mod = relay.transform.InferType()(mod)
mutated_mod['func_7904'] = func_7904
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7904_call = mutated_mod.get_global_var('func_7904')
var_7906 = relay.var("var_7906", dtype = "uint64", shape = (13, 11, 2))#candidate|7906|(13, 11, 2)|var|uint64
var_7907 = relay.var("var_7907", dtype = "uint64", shape = (13, 11, 2))#candidate|7907|(13, 11, 2)|var|uint64
var_7908 = relay.var("var_7908", dtype = "float32", shape = (100,))#candidate|7908|(100,)|var|float32
var_7909 = relay.var("var_7909", dtype = "float64", shape = (120,))#candidate|7909|(120,)|var|float64
var_7910 = relay.var("var_7910", dtype = "float64", shape = (11, 55))#candidate|7910|(11, 55)|var|float64
call_7905 = func_7904_call(var_7906,var_7907,var_7908,var_7909,var_7910,)
output = call_7905
func_7911 = relay.Function([var_7906,var_7907,var_7908,var_7909,var_7910,], output)
mutated_mod['func_7911'] = func_7911
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8251 = relay.const([[[7.559133,9.961384,-2.738865,2.139000,4.788970,0.580185],[-9.270803,5.082186,5.215880,1.795826,2.852604,9.335032],[-4.833866,-7.136689,-2.306677,-7.228648,8.301521,1.237581],[6.565552,-2.599892,-7.556971,-0.159159,-9.771680,1.682250],[-6.710687,-6.190091,-4.480927,9.187983,-8.988837,6.280105],[4.451600,-9.658243,1.774485,-9.428158,-3.093893,-4.469323],[-3.974445,5.427562,-6.729360,-0.534330,9.055228,-7.340186],[-8.758291,6.855915,6.882219,-2.322132,-3.272962,-3.764983],[-3.074417,2.402082,2.341743,8.674122,-9.320230,-4.044141],[6.950538,2.095207,-7.635450,-3.116268,2.863911,2.938911],[-1.815911,2.491366,-8.532608,-4.535163,-5.983273,6.693720],[8.233016,-7.676144,2.779925,-6.165941,7.543211,5.115490]],[[5.595903,2.382868,6.779114,-9.729369,-0.875295,8.881766],[7.546728,8.423180,7.541479,3.050173,7.724295,-9.741626],[-1.690489,4.370165,-3.974939,9.953681,-2.472363,9.743626],[1.078345,4.823807,2.802053,-0.936738,-7.038043,2.810936],[-8.326882,6.963304,-4.077263,-2.910388,-6.430812,-2.167593],[2.517880,9.714178,-9.107553,5.267124,-4.645738,3.913641],[0.606305,-6.405706,3.740640,2.990085,-0.218748,1.528690],[-2.533792,7.382056,5.683811,-9.012521,-4.496451,-7.325067],[-1.608630,-7.776854,-5.387834,-2.554399,-3.707253,-0.238496],[-6.677666,9.926003,-0.317371,1.860575,7.658809,3.878698],[4.254358,8.512738,1.981824,-3.512641,5.003824,-6.470383],[1.872017,-2.640690,2.590580,6.817644,-8.086136,-8.498284]],[[-8.127850,-5.641589,9.084414,-8.207265,0.867342,-9.256682],[-1.932857,-4.186362,6.868905,7.335231,1.016754,-3.398886],[-8.040524,0.900473,7.115180,9.752278,4.401878,0.474653],[-1.938177,8.147811,2.340660,-2.079327,1.775870,3.761894],[-1.497259,6.640980,-8.005952,-9.028262,0.981167,-1.180227],[-2.103222,-4.455139,4.069237,-4.950767,-3.050863,9.782072],[0.830255,1.817210,-5.126011,4.120577,4.050635,-3.406644],[5.740566,8.363127,-9.538059,9.943767,7.893714,7.315626],[4.881911,-0.431478,9.031675,6.025965,-6.817056,6.440428],[3.616162,7.798256,6.415612,2.142707,-6.863371,-8.353753],[-6.663697,4.824239,6.277932,-9.308034,-0.087703,-2.002527],[-2.027787,-0.712486,-8.993215,6.038383,0.557759,5.474129]],[[-4.425935,5.228434,5.544505,-2.444322,8.509099,6.579780],[-3.787206,0.153173,3.060860,-6.176417,1.623005,-2.930581],[1.135977,8.924019,-4.197957,8.415316,5.786860,7.475962],[-0.427753,-6.619312,-6.990623,3.765810,7.347130,5.243368],[-0.042004,-5.428655,1.784122,-2.449443,-7.718046,5.557235],[-7.808220,-1.543422,3.271669,-1.871681,9.478063,1.175277],[-6.855423,-5.019605,0.724979,-0.783285,7.044963,6.291634],[6.078098,2.006197,1.757353,-4.199780,-1.222407,-7.745051],[6.875536,8.307966,3.252418,-7.060541,2.182658,-3.691722],[-5.468928,7.387546,6.176041,-6.054797,-2.512014,3.621306],[-8.003330,0.151212,-2.203107,-8.897534,-9.986862,-1.266903],[-7.218513,3.044446,9.541749,-8.583231,9.081292,1.225723]],[[-8.488581,0.139327,-1.509477,9.976833,3.602423,0.178370],[-1.473446,3.830938,2.823302,-6.020873,-7.347455,-9.834052],[4.285680,9.561803,-4.916227,-4.856027,3.649789,1.558765],[-7.837403,-2.152160,0.291870,4.418309,-9.790717,-7.142859],[-3.340789,9.322252,-6.094748,-8.246105,3.889697,-9.720695],[-7.924494,-3.116882,3.911010,5.150798,-7.479929,3.760088],[3.780007,3.113984,9.399942,-3.236207,6.507270,-0.917460],[0.997462,2.021322,-9.922703,-1.631484,-5.417734,-5.552614],[-6.423712,7.593195,-2.426390,-7.345538,9.183215,2.707228],[3.731345,-8.899544,9.160394,-6.356461,8.923313,4.145865],[-2.832978,6.891343,9.376355,-6.596338,1.511951,-9.699466],[-6.317156,-5.792436,6.631740,-6.629560,8.800033,9.284950]],[[6.249215,3.275022,6.784140,-1.147298,-9.015644,8.501283],[-3.232283,4.186418,4.971765,4.790399,-9.619869,-8.707016],[3.796289,-9.159384,3.749610,5.898561,1.063546,-8.871695],[-0.238548,-2.275963,-3.935541,-4.305913,3.506184,-8.371627],[4.999366,-8.797385,3.284698,2.643707,2.242939,4.877018],[6.447043,0.286301,8.723014,-4.722938,6.009546,-7.993989],[-6.144240,-7.191719,-4.679858,-8.395194,-1.070385,9.754305],[3.171601,-5.877648,-9.920662,-2.028107,-4.935854,9.744162],[5.881964,0.128153,-4.070747,-9.277537,-2.765008,0.992587],[7.777073,9.430837,-9.362047,-7.857203,6.151448,3.144065],[-4.342098,-4.888322,1.761412,0.219371,4.509026,2.994856],[-7.649919,-7.892961,-2.188053,-6.364645,1.295184,4.161322]],[[-2.526881,-2.199693,-1.196019,-7.645252,5.110794,-1.378542],[-2.491725,0.798807,-0.795615,6.787716,-8.105467,-7.034528],[5.408153,-5.952420,-0.174006,5.211347,0.112830,-2.721473],[6.384642,7.231538,9.545151,4.877366,7.144409,9.768079],[-5.268996,-0.986020,-8.153425,4.782182,9.763941,0.839353],[-4.582298,5.612148,-4.060187,7.186655,-1.230002,-9.168651],[-9.039971,0.438855,-9.316423,-9.112318,5.347078,3.544923],[5.380860,-7.669026,-5.397089,-0.218576,-9.489337,6.926244],[6.317533,-8.784941,4.345837,-6.572362,-7.426738,6.037169],[-0.513131,9.519186,-7.020906,-2.989748,-2.470753,4.815667],[-1.062272,3.511666,1.274946,5.709086,3.674565,-4.062528],[-9.876461,0.153874,-4.147411,4.203460,-5.372498,-2.831827]],[[7.773640,-6.894661,6.554837,-1.830686,6.578081,-7.219804],[-1.272484,3.116783,8.329286,-4.813659,-8.481308,6.351123],[-8.147237,-6.370220,8.147668,-1.358992,6.371914,-6.404371],[-8.580345,-6.982379,-2.505092,-4.399345,-8.426755,2.368492],[6.839454,9.602107,0.682222,-9.930516,5.630164,-7.679819],[2.892837,6.142373,5.080330,-4.928758,-4.633769,1.656619],[7.777051,-6.572374,9.331566,-6.913881,3.439214,9.822829],[-4.467296,9.563866,-2.122671,-1.123628,-0.138990,-6.016708],[-2.689133,0.262046,6.147537,0.564142,-0.270463,-7.648764],[8.943153,-6.420983,-0.422575,9.550722,1.395352,-1.564243],[-1.846397,1.703194,-2.468719,-8.323621,-6.069036,9.344047],[-9.511163,9.332046,-4.071702,4.653109,-4.628703,5.746697]],[[0.222414,4.418929,7.246913,-0.441625,-0.564908,-6.970476],[8.577772,7.709360,-6.639886,9.097215,-2.386773,9.397651],[-3.100259,-2.070814,-0.426131,9.675367,3.505025,-5.874269],[-9.053328,-0.186381,-4.077670,5.416467,-4.133705,-9.532933],[3.991886,4.109033,-6.013883,5.885239,1.608457,7.929360],[0.774424,8.542961,5.264472,4.590651,-7.237324,-6.805400],[-0.381605,-3.747036,1.715228,0.782104,-7.203917,-7.752418],[9.623617,1.873994,4.460924,-4.508168,1.315210,8.263741],[2.047763,-3.002233,1.123911,-4.185880,-6.008805,-5.025854],[7.877453,5.338450,-4.665375,-3.516640,2.519053,6.152586],[-7.322222,0.521753,5.294890,-8.911624,0.668193,7.994595],[-0.358515,-6.268304,-1.513095,-3.377135,-8.757472,-8.338304]],[[6.913089,-2.706626,-5.961398,2.342011,3.207110,7.933689],[-5.672080,1.755672,-3.416290,-2.612700,-0.143023,-2.152731],[4.133717,8.170883,-7.337507,-1.469535,-4.707321,-0.478449],[-3.110162,-9.023497,-7.215029,3.711445,8.779691,-8.900183],[3.882917,-2.784444,4.046767,-9.564383,9.142932,-6.268386],[8.515145,0.015142,0.426796,1.950794,-0.316932,5.888410],[7.760701,7.487554,1.682600,-7.911197,-0.826432,-5.179326],[9.970859,-0.213955,-9.449243,-0.521623,6.458498,-4.918746],[1.309408,3.067956,1.134653,-8.326586,8.750453,2.299712],[4.543989,8.857247,7.332345,3.508658,-0.571466,3.412243],[-8.727769,6.448443,-8.381346,-5.384651,1.788828,2.672942],[-3.248493,9.228514,2.696306,-4.448112,-2.115666,-4.078790]],[[-4.120616,1.398249,9.045878,8.886244,-4.778393,1.762243],[-9.779685,6.101680,0.239600,-6.665729,-7.350920,8.529359],[4.191493,8.903601,5.578027,9.282647,0.846167,2.852560],[0.061428,5.579341,9.876857,-0.976325,-3.287965,1.597774],[-3.395216,-2.094082,0.345883,-9.597042,5.291735,-5.498020],[7.975615,-3.053491,-1.458304,3.807949,0.867148,-8.742217],[-9.257457,-9.401245,-2.196622,-1.620196,-2.800420,0.397067],[6.945739,-8.365465,9.575595,9.714862,-1.270289,-9.504750],[2.088014,-8.274656,-3.122754,4.840276,-7.334953,2.269541],[3.392087,4.942915,-2.189326,4.329970,2.277992,1.009008],[3.556294,1.464600,-1.135224,-2.036950,-5.166985,-8.470864],[4.376381,0.301179,-5.896249,-1.786761,-9.952661,2.423272]]], dtype = "float64")#candidate|8251|(11, 12, 6)|const|float64
uop_8252 = relay.erf(const_8251.astype('float64')) # shape=(11, 12, 6)
func_7573_call = mod.get_global_var('func_7573')
func_7576_call = mutated_mod.get_global_var('func_7576')
const_8258 = relay.const([-8.875288,7.344060,-0.977209,0.006274,-8.796263,1.921150,4.260893,7.895746,-6.348308,8.173495,6.579275,-3.926837,-3.291366,-6.351575,3.456164,-1.480101,-2.891354,-4.319439,2.451346,-7.846913,5.823888,-2.337208,-6.502789,-6.870432,9.431896,6.963184,-5.965031,3.888256,-4.374979,3.395686,9.960772,-4.745230,7.555217,0.668692,-3.106430,-1.540944,4.660931,4.606643,7.103032,-1.058814,2.478628,5.827151,-0.733984,-5.829859,0.645925,-5.859283,-5.269031,-1.604059,0.954858,-2.625228,9.481684,3.909620,3.453435,8.622847,-3.939151,8.718731,5.392349,-6.146926,-8.351301,7.335485,-0.438591,-9.406766,-3.325054,-0.395580,-6.356355,2.549232,4.027721,-9.281853,9.460674,7.182948,-8.141084,8.570943,-9.812599,8.602184,8.379107,-0.530648,-6.160416,-6.911744,8.939950,-5.368165,3.114773,-6.239119,7.502145,6.877448,-4.652791,-7.293577,6.742102,-1.212148,0.044066,-2.719118,-6.974148,-8.622577,-4.191261,7.197501,3.508405,0.501296,-9.514713,-8.483403,8.669201,-1.903336,-0.151583,-4.694575,2.806258,5.041446,-4.812654,0.764138,-6.635686,5.513109,-4.989177,2.838722,-9.837349,-5.463385,-7.392978,-4.983630,-5.439621,7.592726,-3.676795,-8.352524,-6.440350,-4.585477,-6.957403,-9.362740,-1.177884,7.460565,-2.854203,-1.397494,8.253840,6.979117,3.953482,2.746575,1.074057,1.451625,-4.568815,7.272356,1.735226,5.971340,9.401542,6.348247,9.027571,-0.652982,4.698141,7.304082,8.397726,-8.993252,-9.755691,-0.015561,-3.277580,4.627436,3.293709,6.183888,7.547005,-7.291951,-1.079741,-8.870055,-0.603196,-0.614446,6.918747,2.172323,-8.524890,-8.796376,2.165291,-7.019679,-9.738274,9.914769,-4.579632,-2.003498,6.998295,-0.374567,-0.227533,-7.403504,7.175367,-4.081661,-0.506208,3.195849,2.305223,8.084365,-4.264108,-8.030360,-5.223111,9.307820,2.688583,-4.722539,-8.469750,-2.637870,4.343390,-5.008727,4.824888,9.123341,-3.477248,9.303330,-7.393620,-4.225468,-8.861151,9.511261,-7.394126,-8.493366,8.855747,5.958875,9.161985,-1.072244,-4.960992,-4.378293,-7.255575,9.379433,-5.733786,-4.153437,0.852901,-7.420856,-7.394888,-3.671974,-3.900035,-4.555878,0.454278,4.057515,5.420910,5.369863,-5.068425,-3.915201,-1.274138,8.817894,-4.216888,1.071579,8.148256,9.336469,-0.683897,-7.070677,-9.299084,-1.073102,-0.677669,5.481062,2.032223,5.357160,-0.398962,-6.028254,0.853665,8.787760,-9.214009,-5.347351,-5.306893,6.507639,2.946220,1.326667,-9.709035,-8.664325,-4.531691,-9.826518,-3.299780,0.037674,8.597760,6.794105,-7.608259,-0.158745,-9.550890,-6.585213,8.277110,5.679109,0.107480,-5.293845,-5.848849,0.760414,-4.777410,-0.341849,0.428843,4.322097,-0.077696,-5.734308,-9.438371,3.262939,0.951982,2.433780,2.715754,8.339823,-0.617997,-7.694549,-8.037324,4.820296,1.663266,-4.741590,6.692022,-6.023732,-7.961601,-5.942572,1.917970,0.059528,4.107617,9.946587,3.471888,-3.054026,5.036245,-5.206371,-4.667669,-0.557302,-4.923411,-1.838407,2.877951,0.601153,9.281496,-9.363431,5.809441,3.127497,-4.131581,1.242416,-9.136568,9.143615,-6.185532,8.126296,5.453342,-2.486640,-5.521198,-7.391302,7.799516,-8.316592,0.325124,-3.300333,-5.478769,-1.715069,-4.523139,6.379930,9.356590,-4.412742,-6.870049,-5.872209,-0.344037,3.544592,1.613645,-7.944723,7.615028,-0.796191,7.152736,0.382674,-1.479789,-7.076659,6.541047,4.423251,5.971922,-1.959512,-8.024175,8.109697,-7.356202,2.763971,-1.095463,-4.041394,-0.609588,8.546894,9.214021,-8.479627,-7.456577,5.497686,-9.001682,-8.730030,-3.087006,6.718185,8.910264,1.149804,-5.137668,7.222109,-4.640807,-7.991571,-5.874555,-3.276984,8.293158,-7.842940,-3.921176,4.635250,-7.809188,-0.541369,9.074815,9.556971,-2.796678,-0.145910,-9.022520,-0.877551,5.994895,7.514776,-0.120464,-3.889219,-5.706071,1.216481,-0.716500,2.248888,-6.107569,4.241523,-0.756198,-8.649809,-6.112604,3.900476,-4.261248,0.974477,-1.180255,-2.722746,5.383748,-8.343015,9.976741,-1.877777,0.730797,-0.162794,6.097667,2.634404,6.743714,-7.996128,-4.290791,-9.467478,6.719456,-9.032443,-5.171523,-1.951822,7.538690,-1.233853,-7.690960,-1.403792,-6.160239,1.126788,2.093602,3.462260,-5.052066,-5.892088,5.444278,-0.532076,-2.694073,8.508663,4.949937,-4.610506,-9.047682,7.045691,6.549827,-0.358356,-0.135585,0.311549,-5.442346,-1.415378,3.395225,7.564605,9.939427,9.979884,3.835286,8.213358,9.582123,9.730971,-5.857257,-2.480249,4.328252,9.819478,3.364987,9.523647,-0.323613,-5.753151,-0.436852,-2.702001,2.809926,2.983286,-6.916055,4.229235,2.170191,-0.943950,0.102629,9.640025,1.055665,8.382094,-6.580338,1.286974,-0.523214,-4.865694,6.777864,0.104535,-1.519830,9.675370,6.886890,-1.787081,-7.410545,-9.853244,-7.810553,-5.554300,-8.524586,-5.315716,-7.011852,3.368277,4.233498,3.956438,9.087583,-2.268473,8.109183,-2.024604,-6.731636,1.429601,8.828871,7.561668,-6.521794,-6.425821,4.180041,5.097871,-4.763280,-1.699842,-9.674539,-7.338215,-4.256020,5.685073,2.188717,-8.450067,7.552847,-3.871059,2.902834,-8.192867,0.873921,9.852971,4.452424,-5.921161,4.213819,3.061771,-1.170416,8.794126,-5.970380,-8.076033,0.601386,-0.352197,5.713902,4.807539,-0.167023,-9.143899,-5.363118,-4.896802,-1.207281,7.720651,6.428507,4.202020,4.415672,3.667661,9.265469,6.210578,-2.227306,6.528335,-4.501613,0.581956,-5.395697,-0.481915,5.486816,-6.705475,3.172222,0.874794,7.259448,-6.111812,-8.767908,-9.117973,5.085337,-5.976855,2.228177,0.043311,-3.907739,-7.571725,-4.383585,-5.635833,7.672490,2.602399,-8.173628,-2.083992,9.236794,-6.373775,-6.783961,-9.547368,-8.639606,1.417242,-9.267022,0.557162,1.712509,-8.554904,-7.829210,8.973517,2.915573,-3.052699,-9.905921,8.587731,3.692860,6.521909,2.966854,-1.900419,-7.643830,6.690146,-0.819519,4.008986,2.556638,-4.234267,-2.976377,3.740713,-2.548590,-2.807436,-4.952220], dtype = "float32")#candidate|8258|(585,)|const|float32
call_8257 = relay.TupleGetItem(func_7573_call(relay.reshape(const_8258.astype('float32'), [15, 13, 3]), relay.reshape(const_8258.astype('float32'), [15, 13, 3]), ), 0)
call_8259 = relay.TupleGetItem(func_7576_call(relay.reshape(const_8258.astype('float32'), [15, 13, 3]), relay.reshape(const_8258.astype('float32'), [15, 13, 3]), ), 0)
func_3786_call = mod.get_global_var('func_3786')
func_3789_call = mutated_mod.get_global_var('func_3789')
const_8262 = relay.const([-5.145394,0.981755,3.185037,8.546493,-7.726068,-3.590058,6.317381,6.079303,-6.042421,6.980225,-8.102756,6.027228,-2.947627,5.976515,9.618876,-6.720008,-6.703170,0.493462,-0.956124,-8.678792,-7.819243,-5.118746,-9.271731,-0.309401,-7.834058,0.854336,-7.504053,5.747484,1.265904,4.780347,8.561397,4.333105,8.496695,8.083630,2.880738,-3.313769,-7.952415,9.125112,-2.284045,2.860377,-1.670237,5.358432,5.832923,2.914050,-2.118806,2.764505,-7.258406,9.653603,9.666172,6.523729], dtype = "float64")#candidate|8262|(50,)|const|float64
call_8261 = func_3786_call(relay.reshape(const_8262.astype('float64'), [5, 2, 5]))
call_8263 = func_3786_call(relay.reshape(const_8262.astype('float64'), [5, 2, 5]))
output = relay.Tuple([uop_8252,call_8257,const_8258,call_8261,const_8262,])
output2 = relay.Tuple([uop_8252,call_8259,const_8258,call_8263,const_8262,])
func_8265 = relay.Function([], output)
mod['func_8265'] = func_8265
mod = relay.transform.InferType()(mod)
mutated_mod['func_8265'] = func_8265
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8265_call = mutated_mod.get_global_var('func_8265')
call_8266 = func_8265_call()
output = call_8266
func_8267 = relay.Function([], output)
mutated_mod['func_8267'] = func_8267
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8265_call = mod.get_global_var('func_8265')
func_8267_call = mutated_mod.get_global_var('func_8267')
call_8270 = relay.TupleGetItem(func_8265_call(), 3)
call_8271 = relay.TupleGetItem(func_8267_call(), 3)
output = call_8270
output2 = call_8271
func_8274 = relay.Function([], output)
mod['func_8274'] = func_8274
mod = relay.transform.InferType()(mod)
mutated_mod['func_8274'] = func_8274
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8274_call = mutated_mod.get_global_var('func_8274')
call_8275 = func_8274_call()
output = call_8275
func_8276 = relay.Function([], output)
mutated_mod['func_8276'] = func_8276
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8265_call = mod.get_global_var('func_8265')
func_8267_call = mutated_mod.get_global_var('func_8267')
call_8287 = relay.TupleGetItem(func_8265_call(), 0)
call_8288 = relay.TupleGetItem(func_8267_call(), 0)
func_4499_call = mod.get_global_var('func_4499')
func_4503_call = mutated_mod.get_global_var('func_4503')
var_8293 = relay.var("var_8293", dtype = "int64", shape = ())#candidate|8293|()|var|int64
var_8294 = relay.var("var_8294", dtype = "int64", shape = (1440,))#candidate|8294|(1440,)|var|int64
call_8292 = func_4499_call(relay.reshape(var_8293.astype('int64'), []), relay.reshape(var_8294.astype('int64'), [12, 8, 15]), )
call_8295 = func_4499_call(relay.reshape(var_8293.astype('int64'), []), relay.reshape(var_8294.astype('int64'), [12, 8, 15]), )
func_1110_call = mod.get_global_var('func_1110')
func_1114_call = mutated_mod.get_global_var('func_1114')
var_8297 = relay.var("var_8297", dtype = "float64", shape = (6,))#candidate|8297|(6,)|var|float64
const_8298 = relay.const([-9.681628,0.108482,0.248076,-5.738744,5.384267,6.888773,4.888283,0.135975,8.203695,-5.209981,-2.266395,4.288261,7.668738,7.572467,-7.827829,-9.056912,5.501330,-4.622070,5.369858,-3.766612,-1.156337,-3.320588,9.372237,-7.870154,-5.768257,-8.034598,9.590492,5.598337,-6.590854,8.666611,6.810405,6.473356,2.089455,1.830639,1.917540,-2.614784,6.775783,0.812665,-8.994253,9.838952,4.889898,-9.648711,8.258820,0.067849,-7.543119,-9.297074,-6.569179,0.448086,-7.199411,7.760373,-1.738063,7.246024,-8.696633,-4.663814,-3.570983,6.032085,-8.670745,-7.635142,5.206580,8.214709,-1.816198,5.484922,-3.751402,6.932101,6.111273,-0.877937,-9.238747,9.592798,-6.963328,9.466248,-8.400934,-9.245207,-7.914921,-4.730963,-8.689146,-0.268881,-4.786524,-7.122507,-3.508478,0.903565,-7.509437,0.827808,3.202995,5.121157,-7.106544,-9.056899,-9.490121,4.354231,-9.404379,-9.402954,-7.655452,2.461423,6.303858,6.163907,5.070161,0.052982], dtype = "float64")#candidate|8298|(96,)|const|float64
var_8299 = relay.var("var_8299", dtype = "float64", shape = (605,))#candidate|8299|(605,)|var|float64
call_8296 = relay.TupleGetItem(func_1110_call(relay.reshape(var_8297.astype('float64'), [1, 3, 2]), relay.reshape(const_8298.astype('float64'), [16, 3, 2]), relay.reshape(var_8299.astype('float64'), [11, 55]), ), 2)
call_8300 = relay.TupleGetItem(func_1114_call(relay.reshape(var_8297.astype('float64'), [1, 3, 2]), relay.reshape(const_8298.astype('float64'), [16, 3, 2]), relay.reshape(var_8299.astype('float64'), [11, 55]), ), 2)
output = relay.Tuple([call_8287,call_8292,var_8293,var_8294,call_8296,var_8297,const_8298,var_8299,])
output2 = relay.Tuple([call_8288,call_8295,var_8293,var_8294,call_8300,var_8297,const_8298,var_8299,])
func_8305 = relay.Function([var_8293,var_8294,var_8297,var_8299,], output)
mod['func_8305'] = func_8305
mod = relay.transform.InferType()(mod)
var_8306 = relay.var("var_8306", dtype = "int64", shape = ())#candidate|8306|()|var|int64
var_8307 = relay.var("var_8307", dtype = "int64", shape = (1440,))#candidate|8307|(1440,)|var|int64
var_8308 = relay.var("var_8308", dtype = "float64", shape = (6,))#candidate|8308|(6,)|var|float64
var_8309 = relay.var("var_8309", dtype = "float64", shape = (605,))#candidate|8309|(605,)|var|float64
output = func_8305(var_8306,var_8307,var_8308,var_8309,)
func_8310 = relay.Function([var_8306,var_8307,var_8308,var_8309,], output)
mutated_mod['func_8310'] = func_8310
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8274_call = mod.get_global_var('func_8274')
func_8276_call = mutated_mod.get_global_var('func_8276')
call_8350 = func_8274_call()
call_8351 = func_8274_call()
func_8305_call = mod.get_global_var('func_8305')
func_8310_call = mutated_mod.get_global_var('func_8310')
var_8355 = relay.var("var_8355", dtype = "int64", shape = ())#candidate|8355|()|var|int64
var_8356 = relay.var("var_8356", dtype = "int64", shape = (1440,))#candidate|8356|(1440,)|var|int64
var_8357 = relay.var("var_8357", dtype = "float64", shape = (3, 2))#candidate|8357|(3, 2)|var|float64
const_8358 = relay.const([5.979828,0.294683,-2.621005,-3.674643,7.193370,-7.566180,-6.076555,-5.737553,8.843202,-4.805967,-9.914317,-8.398048,7.418174,-9.343140,7.454030,7.399442,-7.197931,4.213316,9.564317,-9.956703,-3.904107,-1.320637,3.471238,3.291460,8.132804,1.997541,-8.231558,-0.288720,5.821147,-6.381633,0.911116,5.609260,0.577019,-4.014012,-5.063992,6.312866,9.823336,8.315058,-9.637554,-9.880089,5.000048,-2.964877,8.487453,6.912188,9.652117,0.573622,5.945264,6.629624,-9.690509,-3.431347,-0.738695,0.494404,8.303990,-0.494339,-9.342200,7.310589,-7.628585,7.028260,3.198456,-5.222523,9.420294,2.230263,-6.785300,3.941001,-8.525698,-9.105178,3.571645,5.453657,-3.841523,-4.707518,-8.626512,-0.969604,7.691470,-6.311561,8.087233,-7.413681,9.409654,3.399717,-5.027101,-9.315796,-1.889277,4.841164,-8.689589,-1.827560,-7.425342,5.003551,9.316482,5.184590,-3.939877,0.221899,-5.361985,-6.812197,5.482268,4.856932,-9.139816,-7.397853,-3.105399,-3.466807,-0.555939,-8.207978,5.282189,5.239646,7.217581,-0.301532,8.269757,0.984140,0.846237,7.207050,-0.306992,-2.949912,-4.079246,0.965914,-5.317947,4.675874,3.679152,4.328575,-4.035813,7.186357,7.530873,3.587197,6.494686,-2.401797,-2.945249,3.230241,-1.078403,1.864133,-2.864373,-8.384403,-5.976920,-5.694105,7.804105,-0.895958,-9.398414,7.540437,0.299254,-7.249472,-6.895542,1.467404,-0.987502,1.225302,-7.142480,4.378441,3.207463,4.996444,-4.502865,4.951049,4.563985,4.310128,0.700701,8.713371,8.590066,8.686557,-7.294977,-5.499458,1.029235,-1.924988,-1.088349,2.101867,6.550092,5.193696,-9.588645,2.696447,-0.098580,8.279678,8.630466,8.905697,0.791145,-4.863253,3.680141,-6.084316,-4.952848,2.702714,6.431066,1.670252,7.219610,-0.295691,5.159366,-3.330739,-9.069674,-2.070257,-9.776621,-1.583789,-4.242874,-9.002704,1.887951,3.548578,8.614427,-1.599844,3.667281,1.667097,-5.128450,-6.526368,1.922808,4.337830,-4.079975,7.311135,7.121073,-7.586758,7.842617,-4.728423,-3.684865,-7.617425,-2.335085,-2.176408,-9.191517,-9.104525,2.453062,9.533551,5.025682,-0.996624,-3.329416,6.742518,1.310061,4.010663,-8.816429,8.089931,5.396632,-1.458871,-8.811845,9.163469,-4.382047,9.067377,-4.908003,-4.300525,2.109657,-7.179497,-4.901989,-1.342437,7.116170,-6.038566,6.621575,-9.241473,-5.805824,-8.069581,8.831116,5.269638,4.636553,8.613433,3.329841,-2.964479,-2.978591,-2.552042,-6.105459,-4.286588,9.538180,5.349265,-8.858671,8.475062,-2.159879,9.165224,-8.438318,1.558103,0.494132,8.861929,-1.796818,-9.556984,-4.621876,7.575781,9.186675,4.779752,5.484395,3.384876,-6.331737,-5.004724,-2.183642,5.407316,-6.753515,-9.966209,2.829267,9.239811,0.121662,1.199809,-9.591523,-7.490432,-6.946468,-2.273666,-5.154009,-9.065127,0.469062,5.141166,-2.216688,-2.433353,6.227110,4.627833,-7.135892,-9.460625,-4.074326,-6.135868,5.952965,-2.437755,-6.595648,4.635195,-2.218932,9.720683,-1.664279,2.773186,1.365263,6.224443,-0.692829,-9.086706,7.504000,6.037765,-0.387748,9.232113,-5.177474,3.849274,-1.268764,-7.180410,-4.609418,-0.470484,-9.251109,-8.789704,0.359806,8.869562,-4.997283,1.460822,-6.582124,1.038567,-1.980912,-2.030995,-1.925074,3.773098,-1.915228,3.766526,7.960540,7.513757,2.404780,-3.487004,-7.167305,-8.195081,5.063296,-4.576172,-6.208653,-4.883743,-3.221537,-7.502866,-2.120036,-2.321371,1.162194,-8.547541,5.162615,-5.823220,8.656755,-8.846239,-7.278616,-8.890982,-7.686988,-8.022157,-4.357080,6.564674,6.903578,6.850401,3.213525,0.267144,9.438712,8.826011,2.214388,0.419356,-8.214096,-1.449060,-2.068609,-3.117149,-1.296382,-8.045953,6.591261,8.995751,2.165368,9.065297,-5.456454,5.635812,-1.226892,1.902499,-8.371943,-1.774418,-4.140959,-4.612963,5.569886,1.040723,8.039443,-9.863212,0.988659,4.654586,-5.146241,3.678831,0.093742,-4.880440,3.251309,-0.380277,-0.620490,4.096237,6.770738,5.577511,-1.324434,-1.958305,-2.642732,3.943003,0.933702,-0.513915,1.966587,-6.552367,-6.193811,-1.469968,-0.528273,-8.435627,0.612517,9.800533,2.310601,1.613429,1.617719,0.813814,-7.760368,0.208985,6.510919,8.505500,8.589975,-5.448707,-0.203071,-9.670958,4.626225,8.871294,-5.427819,6.552776,6.303156,0.108811,1.019592,6.348096,2.253294,8.564725,-5.319935,8.478290,-5.526153,-0.444952,-8.435390,-7.192799,4.258594,-3.608288,-3.161793,4.377756,-5.093139,6.450263,6.596863,0.951641,1.639291,1.429845,6.273165,-5.359960,-0.423371,-1.362512,9.105212,-6.237922,-6.374238,-9.083380,9.314451,8.473034,-6.644665,0.107393,4.859607,6.421761,5.161444,-5.989148,8.231119,-0.842758,1.043678,9.370262,0.462608,2.671501,-1.498841,4.869977,8.762287,-9.157557,4.744444,6.119892,-2.225038,4.845509,-8.825852,5.581693,-2.054884,3.941355,-6.040521,-3.540580,5.424414,-9.754089,6.022064,8.667235,-1.749250,4.745552,8.807405,-5.334314,6.044833,3.231099,7.564508,6.703138,-4.027086,-6.281694,3.481863,4.279627,-1.182607,0.278209,5.580190,1.692630,-9.266948,5.855832,6.162632,3.698345,9.463172,-0.495691,6.681811,8.416829,3.075324,5.048873,-0.785029,1.967414,-7.846930,0.671464,1.613936,0.176662,8.062114,6.638860,-9.083764,3.897730,5.450075,-0.998678,3.995141,-8.637064,6.859375,-0.628828,-4.724898,7.005380,-7.727352,-7.614535,2.807817,6.264592,-5.635021,8.131093,0.231657,1.146706,2.387180,-6.125715,8.032939,4.977628,-1.253698,-1.878199,6.291053,1.309597,-3.280868,1.832335,8.943958,-9.622084,5.456945,-6.228337,-6.533822,9.927706,7.710325,8.187712,-7.515161,-8.559827,-5.179027,-4.107814,-4.603398,5.061665,0.285825,-3.126084,3.380373,5.007162,-3.356935,2.051009,8.815911,-3.349698,-6.123176,4.155470,-3.540117,0.240182,-4.874991,-8.637311,1.211918,-6.876356,-6.472822,6.331568,0.628159,-5.003700,-3.678160,3.100412,-0.908478,6.142453,4.632854,-8.313738,-1.270106,-8.920213,6.739097,0.652604,-4.834965,9.512160,-3.380215,-0.966666,7.537949,2.381022,-0.545012,5.722572,9.369540,-8.013850,3.389207,-9.171548,-3.288148,5.518797,-6.413174], dtype = "float64")#candidate|8358|(605,)|const|float64
call_8354 = relay.TupleGetItem(func_8305_call(relay.reshape(var_8355.astype('int64'), []), relay.reshape(var_8356.astype('int64'), [1440,]), relay.reshape(var_8357.astype('float64'), [6,]), relay.reshape(const_8358.astype('float64'), [605,]), ), 5)
call_8359 = relay.TupleGetItem(func_8310_call(relay.reshape(var_8355.astype('int64'), []), relay.reshape(var_8356.astype('int64'), [1440,]), relay.reshape(var_8357.astype('float64'), [6,]), relay.reshape(const_8358.astype('float64'), [605,]), ), 5)
func_7904_call = mod.get_global_var('func_7904')
func_7911_call = mutated_mod.get_global_var('func_7911')
const_8371 = relay.const([1,4,-6,2,10,-10,-2,2,5,9,1,7,-6,1,4,-3,-5,10,5,7,-9,-4,-7,8,4,-2,-5,-4,-3,-8,-9,3,-8,-3,7,10,-5,5,-3,-4,10,-4,4,-8,5,4,-7,-5,-10,-7,6,-2,-4,-5,-2,3,-2,9,-7,2,4,-3,5,-5,-6,-3,-4,5,4,4,-6,7,6,-5,4,-2,-5,9,-2,-6,-1,-3,6,2,8,5,4,6,-10,10,8,2,8,-3,8,-9,8,3,-9,-3,10,5,-4,4,1,9,8,3,3,-6,-3,1,6,5,-10,6,-8,3,-1,-7,-3,-2,-6,-6,-10,3,7,7,7,-3,-2,-8,-10,-4,10,-7,-6,3,-5,4,-1,-1,10,-4,-1,5,-5,-8,3,-10,-1,-5,6,-10,7,6,-10,8,6,6,-8,5,-3,-2,4,9,-1,-4,-2,-7,10,-9,-4,-10,-9,-10,-9,-4,-7,-7,10,-8,-2,-7,-9,-5,2,1,1,6,10,-8,-2,-1,9,-2,6,2,-2,-2,5,-10,-1,3,-4,1,7,-5,2,-10,6,1,-1,9,2,-4,9,2,-9,-2,-3,9,2,9,-9,-4,10,-8,8,6,-1,5,-6,-1,-3,8,-8,8,-10,-6,5,-6,7,5,3,5,2,5,-6,-5,-1,-7,-9,-3,-1,7,-2,10,-9,5,6,8,-10,10,-1,-9,7,5,10,-4,-8,-6,6,-2,-10,-6,8,8,7,6,-4,-2,8,8,7,10], dtype = "uint64")#candidate|8371|(286,)|const|uint64
const_8372 = relay.const([-0.890789,0.930395,9.460302,2.692764,-0.173902,-2.138462,-1.441098,7.264546,0.253438,4.655595,9.063766,-4.099073,4.280353,4.383188,1.253535,9.556432,7.484891,-2.805384,9.052177,-0.248309,1.275117,8.220814,-2.108868,3.638337,9.136446,-7.411736,-0.360940,7.159875,-3.764357,-8.985129,-9.443345,4.625757,-9.302267,-4.185796,0.463560,1.642504,3.843749,8.809839,-6.672087,-3.291476,8.948784,-3.103184,1.787584,2.283661,-0.069251,4.392892,4.296997,-5.054176,-8.037714,1.772641,-9.399331,-4.279607,2.566872,9.036707,-7.873648,-8.222986,-5.173158,1.860386,-4.542256,-5.793899,-9.801196,-5.850086,-4.471388,7.974631,9.119953,3.584334,5.156882,-4.173443,5.853099,-2.242220,9.209663,0.172338,9.176082,2.559876,9.061891,6.014177,1.816435,0.212749,-9.893757,-4.305130,-3.743805,1.664651,2.877805,-4.539036,3.798336,-6.620008,9.643751,9.655162,-6.542710,8.681986,-9.234446,0.906939,-3.069050,6.883576,4.698943,-8.929577,8.608185,3.019767,3.360830,5.122274], dtype = "float32")#candidate|8372|(100,)|const|float32
const_8373 = relay.const([2.997436,3.476214,0.861844,0.946206,3.964726,5.466121,-7.051284,8.814600,-7.520313,0.026237,4.033267,-3.688620,-5.243555,-9.359648,8.998608,7.283786,-9.167594,-3.134205,5.868533,5.563978,-2.981173,-5.222962,1.618816,-8.112016,8.703930,-0.159343,1.712264,-3.663985,-3.386996,7.342457,-5.593638,6.865903,1.157241,3.155060,7.012812,-5.492288,0.399649,-3.669966,-2.172988,1.257460,-5.263480,-4.016503,-8.969634,-3.318676,3.397425,5.674582,-4.993997,-9.524931,-9.603998,-4.825831,-1.216738,-8.189854,3.455063,2.951305,3.782023,6.625327,-7.118148,9.109938,-2.040542,4.930499,1.051645,-6.712711,8.197916,-3.405380,-7.788860,-8.930488,3.576198,-2.613796,4.219322,-8.120878,-3.705991,3.006770,7.177160,-7.964325,-3.827278,-4.599930,-2.847925,9.877858,4.828168,6.155159,-4.530562,1.816965,-2.911876,-9.103146,4.413677,6.081541,-2.866405,-4.949180,2.601631,-4.261797,-3.881821,-2.869890,8.127836,8.458008,2.255079,-4.001462,-7.744354,5.043454,1.651035,-3.868813,-6.924858,6.392005,-8.904618,-7.725329,-0.323791,6.990442,1.279718,3.276636,0.706705,-9.695186,4.603424,-4.966700,-9.058190,3.595744,2.997721,-2.258544,6.038723,2.472105,2.973549,8.035147], dtype = "float64")#candidate|8373|(120,)|const|float64
call_8370 = relay.TupleGetItem(func_7904_call(relay.reshape(const_8371.astype('uint64'), [13, 11, 2]), relay.reshape(const_8371.astype('uint64'), [13, 11, 2]), relay.reshape(const_8372.astype('float32'), [100,]), relay.reshape(const_8373.astype('float64'), [120,]), relay.reshape(const_8358.astype('float64'), [11, 55]), ), 11)
call_8374 = relay.TupleGetItem(func_7911_call(relay.reshape(const_8371.astype('uint64'), [13, 11, 2]), relay.reshape(const_8371.astype('uint64'), [13, 11, 2]), relay.reshape(const_8372.astype('float32'), [100,]), relay.reshape(const_8373.astype('float64'), [120,]), relay.reshape(const_8358.astype('float64'), [11, 55]), ), 11)
output = relay.Tuple([call_8350,call_8354,var_8355,var_8356,var_8357,const_8358,call_8370,const_8371,const_8372,const_8373,])
output2 = relay.Tuple([call_8351,call_8359,var_8355,var_8356,var_8357,const_8358,call_8374,const_8371,const_8372,const_8373,])
func_8378 = relay.Function([var_8355,var_8356,var_8357,], output)
mod['func_8378'] = func_8378
mod = relay.transform.InferType()(mod)
mutated_mod['func_8378'] = func_8378
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8378_call = mutated_mod.get_global_var('func_8378')
var_8380 = relay.var("var_8380", dtype = "int64", shape = ())#candidate|8380|()|var|int64
var_8381 = relay.var("var_8381", dtype = "int64", shape = (1440,))#candidate|8381|(1440,)|var|int64
var_8382 = relay.var("var_8382", dtype = "float64", shape = (3, 2))#candidate|8382|(3, 2)|var|float64
call_8379 = func_8378_call(var_8380,var_8381,var_8382,)
output = call_8379
func_8383 = relay.Function([var_8380,var_8381,var_8382,], output)
mutated_mod['func_8383'] = func_8383
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8265_call = mod.get_global_var('func_8265')
func_8267_call = mutated_mod.get_global_var('func_8267')
call_8396 = relay.TupleGetItem(func_8265_call(), 1)
call_8397 = relay.TupleGetItem(func_8267_call(), 1)
output = relay.Tuple([call_8396,])
output2 = relay.Tuple([call_8397,])
func_8402 = relay.Function([], output)
mod['func_8402'] = func_8402
mod = relay.transform.InferType()(mod)
mutated_mod['func_8402'] = func_8402
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8402_call = mutated_mod.get_global_var('func_8402')
call_8403 = func_8402_call()
output = call_8403
func_8404 = relay.Function([], output)
mutated_mod['func_8404'] = func_8404
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8409 = relay.const(6.156268, dtype = "float32")#candidate|8409|()|const|float32
const_8410 = relay.const([[[-0.739895,-2.301807,-3.569127],[3.756757,8.808313,0.334744],[5.873777,0.467465,3.279407],[-9.146738,3.254551,3.260356]]], dtype = "float32")#candidate|8410|(1, 4, 3)|const|float32
bop_8411 = relay.greater_equal(const_8409.astype('bool'), const_8410.astype('bool')) # shape=(1, 4, 3)
func_2475_call = mod.get_global_var('func_2475')
func_2479_call = mutated_mod.get_global_var('func_2479')
const_8422 = relay.const([10,1,-1,-2,5,7,-3,7,-10,8,-5,-5,-3,8,-1,-4,-5,4,1,2,8,-2,-6,6,-7,6,-7,7,-1,-4,2,-5,2,-6,5,-1,-5,-6,3,-7,-6,4,-3,-5,-6,7,6,6,1,-1,7,-1,-6,-5,9,-9,2,8,4,10,-2,-9,-8,6,-8,10,-10,10,-8,-3,7,-1,5,4,5,-3,-10,-7,9,2], dtype = "uint16")#candidate|8422|(80,)|const|uint16
call_8421 = func_2475_call(relay.reshape(const_8422.astype('uint16'), [1, 5, 16]), relay.reshape(const_8422.astype('uint16'), [1, 5, 16]), )
call_8423 = func_2475_call(relay.reshape(const_8422.astype('uint16'), [1, 5, 16]), relay.reshape(const_8422.astype('uint16'), [1, 5, 16]), )
func_5015_call = mod.get_global_var('func_5015')
func_5017_call = mutated_mod.get_global_var('func_5017')
var_8425 = relay.var("var_8425", dtype = "int64", shape = (1690,))#candidate|8425|(1690,)|var|int64
call_8424 = func_5015_call(relay.reshape(var_8425.astype('int64'), [13, 10, 13]))
call_8426 = func_5015_call(relay.reshape(var_8425.astype('int64'), [13, 10, 13]))
output = relay.Tuple([bop_8411,call_8421,const_8422,call_8424,var_8425,])
output2 = relay.Tuple([bop_8411,call_8423,const_8422,call_8426,var_8425,])
func_8436 = relay.Function([var_8425,], output)
mod['func_8436'] = func_8436
mod = relay.transform.InferType()(mod)
mutated_mod['func_8436'] = func_8436
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8437 = relay.var("var_8437", dtype = "int64", shape = (1690,))#candidate|8437|(1690,)|var|int64
func_8436_call = mutated_mod.get_global_var('func_8436')
call_8438 = func_8436_call(var_8437)
output = call_8438
func_8439 = relay.Function([var_8437], output)
mutated_mod['func_8439'] = func_8439
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8274_call = mod.get_global_var('func_8274')
func_8276_call = mutated_mod.get_global_var('func_8276')
call_8445 = func_8274_call()
call_8446 = func_8274_call()
var_8453 = relay.var("var_8453", dtype = "float64", shape = (5, 2, 5))#candidate|8453|(5, 2, 5)|var|float64
bop_8454 = relay.greater(call_8445.astype('bool'), relay.reshape(var_8453.astype('bool'), relay.shape_of(call_8445))) # shape=(5, 2, 5)
bop_8457 = relay.greater(call_8446.astype('bool'), relay.reshape(var_8453.astype('bool'), relay.shape_of(call_8446))) # shape=(5, 2, 5)
uop_8461 = relay.sinh(bop_8454.astype('float32')) # shape=(5, 2, 5)
uop_8463 = relay.sinh(bop_8457.astype('float32')) # shape=(5, 2, 5)
bop_8464 = relay.equal(uop_8461.astype('bool'), relay.reshape(bop_8454.astype('bool'), relay.shape_of(uop_8461))) # shape=(5, 2, 5)
bop_8467 = relay.equal(uop_8463.astype('bool'), relay.reshape(bop_8457.astype('bool'), relay.shape_of(uop_8463))) # shape=(5, 2, 5)
func_5015_call = mod.get_global_var('func_5015')
func_5017_call = mutated_mod.get_global_var('func_5017')
var_8470 = relay.var("var_8470", dtype = "int64", shape = (1690,))#candidate|8470|(1690,)|var|int64
call_8469 = func_5015_call(relay.reshape(var_8470.astype('int64'), [13, 10, 13]))
call_8471 = func_5015_call(relay.reshape(var_8470.astype('int64'), [13, 10, 13]))
output = relay.Tuple([bop_8464,call_8469,var_8470,])
output2 = relay.Tuple([bop_8467,call_8471,var_8470,])
func_8476 = relay.Function([var_8453,var_8470,], output)
mod['func_8476'] = func_8476
mod = relay.transform.InferType()(mod)
var_8477 = relay.var("var_8477", dtype = "float64", shape = (5, 2, 5))#candidate|8477|(5, 2, 5)|var|float64
var_8478 = relay.var("var_8478", dtype = "int64", shape = (1690,))#candidate|8478|(1690,)|var|int64
output = func_8476(var_8477,var_8478,)
func_8479 = relay.Function([var_8477,var_8478,], output)
mutated_mod['func_8479'] = func_8479
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8265_call = mod.get_global_var('func_8265')
func_8267_call = mutated_mod.get_global_var('func_8267')
call_8494 = relay.TupleGetItem(func_8265_call(), 2)
call_8495 = relay.TupleGetItem(func_8267_call(), 2)
output = call_8494
output2 = call_8495
func_8501 = relay.Function([], output)
mod['func_8501'] = func_8501
mod = relay.transform.InferType()(mod)
output = func_8501()
func_8502 = relay.Function([], output)
mutated_mod['func_8502'] = func_8502
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8274_call = mod.get_global_var('func_8274')
func_8276_call = mutated_mod.get_global_var('func_8276')
call_8506 = func_8274_call()
call_8507 = func_8274_call()
func_4838_call = mod.get_global_var('func_4838')
func_4842_call = mutated_mod.get_global_var('func_4842')
var_8509 = relay.var("var_8509", dtype = "float32", shape = (312,))#candidate|8509|(312,)|var|float32
const_8510 = relay.const([-8,-10,4,-8,3,2,-3,-9,-10,-2,8,-6,-9,-5,2,-7,-2,5,-9,10,9,1,7,-6,8,-9,-2,-9,5,8,-9,-8,-3,7,-5,5,9,7,-7,2,-3,-4,-4,-7,-6,-8,9,-5,10,4,9,1,-9,-3,-1,2,5,-8,8,10,10,10,-4,2,9,9,-7,-5,9,3,-2,-4,2,8,7,5,-5,-9,-9,5,8,5,6,-4,-9,-5,-1,-10,10,4,-7,5,3,3,4,10,-3,7,-7,4,-7,7,-5,2,4,-3,4,-2,-1,-9,-4,6,5,7,-6,8,-8,-5,1,-8,-3,5,-8,-2,-4,5,9,-5,7,-6,3,-10,6,-5,3,3,6,-3,7,-3,-6,8,10,-10,7,3,8,2,9,5,3,-9,-8,-3,-8,5,-7,-9,-10,5,5,-9,1,10,-3,3,-3,-4,5,-5,6,-6,6,-9,6,-4,-1,-5,8,-6,10,-6,-4,-3,10,9,-7,10,-10,-10,2,-7,-8,-9,10,7,7,-3,4,1,4,-9,-6,-4,7,-3,7,3,-6,4,-10,-6,-2,1,6,9,1,-1,-6,-3,7,3,-10,1,-3,-2,4,1,8,4,-3,4,-3,-8,9,4,-9,-2,-5,3,-6,10,-4,7,-4,-5,-6,-10,-5,-7,-2,-10,8,-10,-5,-1,-9,-2,-2,4,-2,3,-10,-8,-3,-7,8,6,9,8,-10,-6,10,1,-9,-7,3,-10,3,8,-2,3,-4,5,6,9,4,4,-3,5,-9,2,2,-7,-1,3,1,5,-4,9,8,3,-5,-6,-1,8,-3,3,4,2,-6,1,10,3,6,3,1,-6,4,-3,-2,6,5,3,-1,7,10,3,3,6,-9,5,-7,-6,-4,-8,4,-4,-5,-8,-1,-4,-4,3,-4,-9,7,2,-7,-5,-9,-9,-8,10,1,-10,5,-5,2,6,-6,6,1,7,8,8,8,-8,2,2,8,-6,-7,-3,1,-2,6,-2,7,4,-3,3,-10,10,9,-5,-5,1,4,-10,5,3,1,8,-5,3,3,-1,-7,6,4,-2,-2,10,8,2,1,5,-1,10,-3,3,-1,2,-7,3,-10,10,-9,-10,2,10,-7,5,-8,-1,-2,-9,-1,8,-9,-7,5,1,-10,10,-2,5,-5,-9,-7,-4,-7,1,-5,-3,-1,5,10,9,6,-1,-2,-10,-7,10,9,5,10,-3,-7,3,-9,-6,-2,-8,-6,7,-3,5,-5,-8,-10,10,10,-6,10,-9,-6,7,-7,8,-3,-1,1,-10,10,1,-2,-1,6,3,9,-4,-4,4,-9,-7,7,-3,-4,9,3,-6,-2,-9,-6,-4,-4,-1,3,-2,-8,-5,6,7,2,-8,5,10,-2,-6,1,5,-10,4,2,6,-4,6,10,4,9,-7,-5,-4,3,-7,-1,8,7,-7,-7,-10,3,-2,9,-6,-5,5,-7,-7,2,-5,-6,-6,-6,-3,-5,3,-7,2,-1,6,-1,-8,-1,-9,10,-8,8,9,-7,8,-5,10,7,10,10,6,9,10,-10,5,-4,4,6,-7,-8,-7,-5,7,-10,-2,4,-4,3,-5,4,2,-2,1,2,3,2,-2,-6,10,7,6,1,4,-3,-6,-6,4,-5,-6,-2,4,8,2,-7,7,6,3,5,-1,6,-7,6,-2,8,-7,-8,4,-8,-9,-9,-9,2,-2,1,7,-1,-4,8,7,6,6,-6,2,-7,1,7,-10,-3,-10,-6,-6,1,-5,5,-7,-7,-7,-3,8,-9,-7,10,9,-2,10,4,-4,-5,8,-10,-3,5,-1,-10,-10,8,7,-5,-1,-3,-4,6,-6,8,3,8,-6,-7,-1,3,-7,-9,1,9,2,3,-1,-5,-2,-10,10,2,-10,2,-9,5,8,-8,-1,-10,-1,8,-4,8,7,-2,5,-2,6,-8,-8,10,-8,-6,-7,1,-1,-9,-3,2,6,-6,9,-8,1,1,1,-7,2,-10,-2,-7,10,-8,5,-5,-4,-4,9,10,-9,1,-4,1,-4,5,1,-8,1,6,-6,7,-9,4,2,-8,-7,-1,9,-7,2,-8,-7,4,4,4,-8,-1,3,-7,-9,7,3,-7,9,-5,7,4,4,1,-7,-10,-7,3,6,4,2,9,9,-8,-1,1,-8,3,-4,-10,3,-5,-10,-8,-6,-10,-4,-6,9,3,-8,-10,-1,8,9,-4,7,3,-8,4,5,-4,6,-4,-3,3,-3,-8,7,-10,4,-9,5,-10,4,7,-7,10,1,8,-3,7,-5,-2,1,-9,6,-9,1,-6,-1,-6,-5,4,2,-10,-3,3,-2,-10,-5,-1,6,-3,-7,-2,1,-9,-4,-2,4,-3,9,-7,-1,7,4,8,-5,-9,-2,-5,8,-9,6,3,5,9,2,-8,-2,10,10,8,-10,2,-7,-5,10,1,7,-7,10,10,-3,6,3,3,-5,-3,-9,5,1,-3,5,-6,-10,7,-1,5,-5,-9,-8,-2,-3,-7,9,8,-3,-10,9,-3,10,-10,-6,7,7,-2,8,7,10,-6,8,-8,9,1,5,-6,3,8,-10,-3,-2,-1,8,4,3,-6,5,4,-3,1,-9,4,10,3,8,-6,-10,3,-4,7,-8,-10,6,-9,9,6,-5,-1,-2,-7,-10,-1,2,8,10,5,8,-2,-9,5,1,9,-2,4,-5,-6,-6,5,2,5,-1,-1,4,-5,-4,-3,2,2,-2,-7,7,-10,-10,-2,8,-6,6,10,-1,-4,-5,-2,1,-10,2,8,3,-4,-4,-7,4,3,-1,3,-8,-8,8,-10,6,9,-9,7,8,-9,10,7,9,5,3,-1,6,1,-9,-2,3,1,10,-6,-1,-1,2,4,-7,3,-10,-10,4,-10,-2,-8,-4,7,-8,2,-9,-10,-10,2,7,9,10,4,1], dtype = "uint64")#candidate|8510|(1100,)|const|uint64
call_8508 = relay.TupleGetItem(func_4838_call(relay.reshape(var_8509.astype('float32'), [8, 13, 3]), relay.reshape(var_8509.astype('float32'), [8, 13, 3]), relay.reshape(const_8510.astype('uint64'), [10, 110]), ), 2)
call_8511 = relay.TupleGetItem(func_4842_call(relay.reshape(var_8509.astype('float32'), [8, 13, 3]), relay.reshape(var_8509.astype('float32'), [8, 13, 3]), relay.reshape(const_8510.astype('uint64'), [10, 110]), ), 2)
var_8518 = relay.var("var_8518", dtype = "uint64", shape = (10, 110))#candidate|8518|(10, 110)|var|uint64
bop_8519 = relay.logical_or(call_8508.astype('bool'), relay.reshape(var_8518.astype('bool'), relay.shape_of(call_8508))) # shape=(10, 110)
bop_8522 = relay.logical_or(call_8511.astype('bool'), relay.reshape(var_8518.astype('bool'), relay.shape_of(call_8511))) # shape=(10, 110)
func_6556_call = mod.get_global_var('func_6556')
func_6559_call = mutated_mod.get_global_var('func_6559')
var_8527 = relay.var("var_8527", dtype = "float32", shape = (11, 9))#candidate|8527|(11, 9)|var|float32
const_8528 = relay.const([[7,3,7,7,-9,5,-7,-4,1,6,5,-7,-2,5,-6,1,6,-1,5,-8],[8,-6,-4,8,8,-9,5,9,2,-7,-10,-2,-4,7,10,6,9,-7,-10,6],[-6,-1,10,-2,4,3,-10,8,7,-3,-1,6,-1,-2,-7,-9,5,6,9,-10],[-7,-7,-7,9,2,-8,3,4,-7,2,-5,7,-10,7,-2,4,-1,6,-10,9]], dtype = "uint16")#candidate|8528|(4, 20)|const|uint16
call_8526 = relay.TupleGetItem(func_6556_call(relay.reshape(var_8527.astype('float32'), [9, 11, 1]), relay.reshape(const_8528.astype('uint16'), [80,]), ), 1)
call_8529 = relay.TupleGetItem(func_6559_call(relay.reshape(var_8527.astype('float32'), [9, 11, 1]), relay.reshape(const_8528.astype('uint16'), [80,]), ), 1)
func_8436_call = mod.get_global_var('func_8436')
func_8439_call = mutated_mod.get_global_var('func_8439')
var_8537 = relay.var("var_8537", dtype = "int64", shape = (1690,))#candidate|8537|(1690,)|var|int64
call_8536 = relay.TupleGetItem(func_8436_call(relay.reshape(var_8537.astype('int64'), [1690,])), 0)
call_8538 = relay.TupleGetItem(func_8439_call(relay.reshape(var_8537.astype('int64'), [1690,])), 0)
output = relay.Tuple([call_8506,var_8509,const_8510,bop_8519,call_8526,var_8527,const_8528,call_8536,var_8537,])
output2 = relay.Tuple([call_8507,var_8509,const_8510,bop_8522,call_8529,var_8527,const_8528,call_8538,var_8537,])
func_8546 = relay.Function([var_8509,var_8518,var_8527,var_8537,], output)
mod['func_8546'] = func_8546
mod = relay.transform.InferType()(mod)
var_8547 = relay.var("var_8547", dtype = "float32", shape = (312,))#candidate|8547|(312,)|var|float32
var_8548 = relay.var("var_8548", dtype = "uint64", shape = (10, 110))#candidate|8548|(10, 110)|var|uint64
var_8549 = relay.var("var_8549", dtype = "float32", shape = (11, 9))#candidate|8549|(11, 9)|var|float32
var_8550 = relay.var("var_8550", dtype = "int64", shape = (1690,))#candidate|8550|(1690,)|var|int64
output = func_8546(var_8547,var_8548,var_8549,var_8550,)
func_8551 = relay.Function([var_8547,var_8548,var_8549,var_8550,], output)
mutated_mod['func_8551'] = func_8551
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8274_call = mod.get_global_var('func_8274')
func_8276_call = mutated_mod.get_global_var('func_8276')
call_8639 = func_8274_call()
call_8640 = func_8274_call()
uop_8647 = relay.sigmoid(call_8639.astype('float64')) # shape=(5, 2, 5)
uop_8649 = relay.sigmoid(call_8640.astype('float64')) # shape=(5, 2, 5)
func_7287_call = mod.get_global_var('func_7287')
func_7290_call = mutated_mod.get_global_var('func_7290')
const_8659 = relay.const(2, dtype = "uint8")#candidate|8659|()|const|uint8
const_8660 = relay.const([[-4,-8],[8,-1],[-9,2],[6,7],[-6,-8],[4,2],[-7,2],[7,-3],[2,9],[-9,10],[-5,3],[-2,9],[-1,-4],[-2,4],[3,1],[-7,-4],[10,-7],[-4,-6],[1,-10],[2,-3],[-8,-7],[-3,-10],[-8,-10],[-7,-1]], dtype = "uint8")#candidate|8660|(24, 2)|const|uint8
call_8658 = func_7287_call(relay.reshape(const_8659.astype('uint8'), []), relay.reshape(const_8660.astype('uint8'), [6, 1, 8]), )
call_8661 = func_7287_call(relay.reshape(const_8659.astype('uint8'), []), relay.reshape(const_8660.astype('uint8'), [6, 1, 8]), )
func_7548_call = mod.get_global_var('func_7548')
func_7552_call = mutated_mod.get_global_var('func_7552')
var_8667 = relay.var("var_8667", dtype = "int64", shape = (1300,))#candidate|8667|(1300,)|var|int64
var_8668 = relay.var("var_8668", dtype = "float32", shape = (825,))#candidate|8668|(825,)|var|float32
var_8669 = relay.var("var_8669", dtype = "float64", shape = (605,))#candidate|8669|(605,)|var|float64
call_8666 = relay.TupleGetItem(func_7548_call(relay.reshape(var_8667.astype('int64'), [10, 13, 10]), relay.reshape(var_8668.astype('float32'), [825, 1]), relay.reshape(var_8669.astype('float64'), [605,]), ), 5)
call_8670 = relay.TupleGetItem(func_7552_call(relay.reshape(var_8667.astype('int64'), [10, 13, 10]), relay.reshape(var_8668.astype('float32'), [825, 1]), relay.reshape(var_8669.astype('float64'), [605,]), ), 5)
func_1241_call = mod.get_global_var('func_1241')
func_1243_call = mutated_mod.get_global_var('func_1243')
const_8678 = relay.const([7.018887,-9.360688,9.721329,7.777664,-3.690363,-2.119461,-9.462837,-2.429943,-8.666535,-1.862309,-6.581500,-8.333755,-8.808921,9.858344,-5.149593,6.108160,2.393581,-8.423224,5.251751,-3.869943,9.689676,7.942385,-8.307230,3.637931,-4.834864,-6.327284,7.770191,-7.432559,-0.951530,5.015744,-0.317439,8.150858,-2.019627,8.266534,3.223843,-3.246876,-8.774674,-8.425661,1.131976,5.021474,6.786759,-2.927412,-2.904000,1.423223,-1.456302,7.695498,7.721653,-6.719581,5.376693,9.181658,0.819296,0.054627,2.920503,-6.265484,3.846146,9.246613,-4.720913,-7.129871,-4.845393,4.109131,-9.220553,5.514133,8.463265,-9.114055,8.638850,-7.509882,3.016569,8.913478,6.895152,1.180327,2.823192,-9.414752,-2.754518,2.938399,-3.004765,-9.769696,4.601525,-9.003328,3.054263,5.072490,-8.362945,-4.071794,0.674300,2.515331,3.434986,-1.970551,7.233375,-0.249352,1.583068,-5.181803,4.884283,-6.056320,-0.106259,6.207464,8.186913,6.096992,-7.989687,6.815721,0.242694,1.862733,2.737982,0.136434,-8.485525,2.810722,7.531485,7.959798,-5.004658,-2.771880,-6.700691,-3.500981,-2.385723,1.055966], dtype = "float32")#candidate|8678|(112,)|const|float32
call_8677 = relay.TupleGetItem(func_1241_call(relay.reshape(const_8678.astype('float32'), [2, 14, 4])), 1)
call_8679 = relay.TupleGetItem(func_1243_call(relay.reshape(const_8678.astype('float32'), [2, 14, 4])), 1)
bop_8685 = relay.greater_equal(call_8658.astype('bool'), const_8659.astype('bool')) # shape=(6, 1, 8)
bop_8688 = relay.greater_equal(call_8661.astype('bool'), const_8659.astype('bool')) # shape=(6, 1, 8)
func_6473_call = mod.get_global_var('func_6473')
func_6475_call = mutated_mod.get_global_var('func_6475')
const_8692 = relay.const([-5,-5,-3,4,-5,7,-7,-3,-4,1,8,-4,1,-1,-8,-6,5,-5,4,-6,-4,4,1,-8,-4,10,-4,-10,4,4,2,-6,-1,-9,-2,-4,7,8,9,5,-4,5,9,-6,9,-6,2,-9,-7,-8,5,-5,-3,-2,-10,6,-2,-3,8,-6,1,-7,-6,-6,7,1,-7,4,-9,2,3,-5,-1,-6,10,-6,-3,-4,9,3,-3,8,1,9,8,3,-9,8,7,-9,-5,-7,-7,-9,-2,-4,7,6,2,1,-7,3,3,6,-7,-6,-7,1,8,2,-4,-7,-6,2,10,-10,-10,-5,-8,2,3,6,-10,3,10,-8,-10,7,1,6,7,-10,-2,-9,-3,4,6,5,-10,6,4,4,10,-9], dtype = "uint64")#candidate|8692|(144,)|const|uint64
call_8691 = relay.TupleGetItem(func_6473_call(relay.reshape(const_8692.astype('uint64'), [12, 6, 2])), 1)
call_8693 = relay.TupleGetItem(func_6475_call(relay.reshape(const_8692.astype('uint64'), [12, 6, 2])), 1)
func_8274_call = mod.get_global_var('func_8274')
func_8276_call = mutated_mod.get_global_var('func_8276')
call_8694 = func_8274_call()
call_8695 = func_8274_call()
output = relay.Tuple([uop_8647,const_8660,call_8666,var_8667,var_8668,var_8669,call_8677,const_8678,bop_8685,call_8691,const_8692,call_8694,])
output2 = relay.Tuple([uop_8649,const_8660,call_8670,var_8667,var_8668,var_8669,call_8679,const_8678,bop_8688,call_8693,const_8692,call_8695,])
func_8717 = relay.Function([var_8667,var_8668,var_8669,], output)
mod['func_8717'] = func_8717
mod = relay.transform.InferType()(mod)
var_8718 = relay.var("var_8718", dtype = "int64", shape = (1300,))#candidate|8718|(1300,)|var|int64
var_8719 = relay.var("var_8719", dtype = "float32", shape = (825,))#candidate|8719|(825,)|var|float32
var_8720 = relay.var("var_8720", dtype = "float64", shape = (605,))#candidate|8720|(605,)|var|float64
output = func_8717(var_8718,var_8719,var_8720,)
func_8721 = relay.Function([var_8718,var_8719,var_8720,], output)
mutated_mod['func_8721'] = func_8721
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8274_call = mod.get_global_var('func_8274')
func_8276_call = mutated_mod.get_global_var('func_8276')
call_8740 = func_8274_call()
call_8741 = func_8274_call()
output = relay.Tuple([call_8740,])
output2 = relay.Tuple([call_8741,])
func_8760 = relay.Function([], output)
mod['func_8760'] = func_8760
mod = relay.transform.InferType()(mod)
output = func_8760()
func_8761 = relay.Function([], output)
mutated_mod['func_8761'] = func_8761
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8402_call = mod.get_global_var('func_8402')
func_8404_call = mutated_mod.get_global_var('func_8404')
call_8779 = relay.TupleGetItem(func_8402_call(), 0)
call_8780 = relay.TupleGetItem(func_8404_call(), 0)
uop_8787 = relay.rsqrt(call_8779.astype('float32')) # shape=(15, 13, 3)
uop_8789 = relay.rsqrt(call_8780.astype('float32')) # shape=(15, 13, 3)
output = relay.Tuple([uop_8787,])
output2 = relay.Tuple([uop_8789,])
func_8803 = relay.Function([], output)
mod['func_8803'] = func_8803
mod = relay.transform.InferType()(mod)
output = func_8803()
func_8804 = relay.Function([], output)
mutated_mod['func_8804'] = func_8804
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8803_call = mod.get_global_var('func_8803')
func_8804_call = mutated_mod.get_global_var('func_8804')
call_8812 = relay.TupleGetItem(func_8803_call(), 0)
call_8813 = relay.TupleGetItem(func_8804_call(), 0)
func_5921_call = mod.get_global_var('func_5921')
func_5924_call = mutated_mod.get_global_var('func_5924')
var_8815 = relay.var("var_8815", dtype = "float32", shape = (420,))#candidate|8815|(420,)|var|float32
call_8814 = relay.TupleGetItem(func_5921_call(relay.reshape(var_8815.astype('float32'), [14, 10, 3])), 0)
call_8816 = relay.TupleGetItem(func_5924_call(relay.reshape(var_8815.astype('float32'), [14, 10, 3])), 0)
uop_8823 = relay.sinh(call_8812.astype('float64')) # shape=(15, 13, 3)
uop_8825 = relay.sinh(call_8813.astype('float64')) # shape=(15, 13, 3)
func_5480_call = mod.get_global_var('func_5480')
func_5483_call = mutated_mod.get_global_var('func_5483')
const_8837 = relay.const([3.366510,-4.826978,2.069139,1.397112,6.514337,9.435074,-8.756506,1.301090,-3.334903,7.887525,-3.691033,6.984712,-1.901702,-2.324333,4.985918,3.619987,4.023667,-7.942660,-0.335853,-4.750432,-1.298442,9.674612,7.853798,-5.086678,-5.778909,4.192976,7.442472,1.625983,2.053843,6.066540,-1.257710,0.902833,-7.740134,-1.934890,1.182754,-1.261821,-6.598484,-1.750814,5.394606,7.263800,-0.852994,-1.311173,4.027064,6.195617,3.388969,4.135494,7.098838,-9.814208,-4.442829,-6.919803,9.879357,-9.542752,-9.145749,9.973546,0.486548,-8.196654,5.325429,4.161670,-3.628211,8.573015,7.502821,8.847380,1.051380,7.674575,-4.416964,0.122969,-1.026175,4.616374,-8.833904,-9.640598,3.154322,5.134988], dtype = "float32")#candidate|8837|(72,)|const|float32
call_8836 = relay.TupleGetItem(func_5480_call(relay.reshape(const_8837.astype('float32'), [6, 3, 4])), 0)
call_8838 = relay.TupleGetItem(func_5483_call(relay.reshape(const_8837.astype('float32'), [6, 3, 4])), 0)
output = relay.Tuple([call_8814,var_8815,uop_8823,call_8836,const_8837,])
output2 = relay.Tuple([call_8816,var_8815,uop_8825,call_8838,const_8837,])
func_8843 = relay.Function([var_8815,], output)
mod['func_8843'] = func_8843
mod = relay.transform.InferType()(mod)
mutated_mod['func_8843'] = func_8843
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8844 = relay.var("var_8844", dtype = "float32", shape = (420,))#candidate|8844|(420,)|var|float32
func_8843_call = mutated_mod.get_global_var('func_8843')
call_8845 = func_8843_call(var_8844)
output = call_8845
func_8846 = relay.Function([var_8844], output)
mutated_mod['func_8846'] = func_8846
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8861 = relay.const([[[-8,-2,-10,1,-9,2,-9,10,2,-9,-2,-9,8,-9,5],[-8,8,-1,4,10,10,-7,-4,-5,2,-9,-8,-5,10,-5],[-4,9,5,-8,3,-4,-2,1,2,2,10,8,-10,2,-9],[-4,-10,-4,-4,-3,4,1,10,4,6,6,9,-3,7,8],[2,10,6,6,8,-10,-9,-8,1,-3,-10,-4,-2,-8,2]],[[-6,10,6,-2,10,4,-2,-9,3,4,8,4,-5,-8,-5],[10,5,-9,-8,7,-1,-5,5,-3,5,-6,-1,4,-5,8],[-3,5,-8,2,5,3,-10,9,6,6,9,-4,-10,-8,-3],[9,7,-5,-8,5,6,-1,10,-2,2,-8,9,5,10,-6],[-4,-8,-9,-9,10,2,2,2,3,-6,3,-10,-6,2,10]]], dtype = "uint64")#candidate|8861|(2, 5, 15)|const|uint64
const_8862 = relay.const([[[5,-8,-1,-5,3,10,-10,3,6,-8,4,3,-10,-8,-10],[-6,-10,-2,-7,10,8,-9,4,10,2,6,-3,-1,-8,8],[7,4,8,-8,6,-4,9,-3,-7,-5,-2,4,-10,6,5],[-7,-8,8,1,-9,-6,-3,6,6,-8,-2,-1,-6,1,-10],[-6,9,-10,-9,4,1,-3,-5,-8,-4,-3,7,-3,5,-4]],[[2,-2,5,-1,6,-2,-5,9,6,10,-6,-6,-7,5,-7],[-8,3,4,-3,-10,-10,4,-9,-5,2,7,-8,-10,-4,-8],[-6,-1,-6,6,-8,8,3,3,-7,-9,4,7,-8,9,-4],[4,5,10,10,3,-2,-8,-5,7,9,-2,-1,-7,6,3],[-6,9,-2,-5,4,-2,2,-1,1,10,-5,7,3,-9,1]]], dtype = "uint64")#candidate|8862|(2, 5, 15)|const|uint64
bop_8863 = relay.greater(const_8861.astype('bool'), relay.reshape(const_8862.astype('bool'), relay.shape_of(const_8861))) # shape=(2, 5, 15)
func_8803_call = mod.get_global_var('func_8803')
func_8804_call = mutated_mod.get_global_var('func_8804')
call_8893 = relay.TupleGetItem(func_8803_call(), 0)
call_8894 = relay.TupleGetItem(func_8804_call(), 0)
func_4004_call = mod.get_global_var('func_4004')
func_4007_call = mutated_mod.get_global_var('func_4007')
var_8903 = relay.var("var_8903", dtype = "uint32", shape = (2940,))#candidate|8903|(2940,)|var|uint32
call_8902 = func_4004_call(relay.reshape(var_8903.astype('uint32'), [14, 15, 14]), relay.reshape(var_8903.astype('uint32'), [14, 15, 14]), )
call_8904 = func_4004_call(relay.reshape(var_8903.astype('uint32'), [14, 15, 14]), relay.reshape(var_8903.astype('uint32'), [14, 15, 14]), )
output = relay.Tuple([bop_8863,call_8893,call_8902,var_8903,])
output2 = relay.Tuple([bop_8863,call_8894,call_8904,var_8903,])
func_8909 = relay.Function([var_8903,], output)
mod['func_8909'] = func_8909
mod = relay.transform.InferType()(mod)
mutated_mod['func_8909'] = func_8909
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8910 = relay.var("var_8910", dtype = "uint32", shape = (2940,))#candidate|8910|(2940,)|var|uint32
func_8909_call = mutated_mod.get_global_var('func_8909')
call_8911 = func_8909_call(var_8910)
output = call_8911
func_8912 = relay.Function([var_8910], output)
mutated_mod['func_8912'] = func_8912
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8803_call = mod.get_global_var('func_8803')
func_8804_call = mutated_mod.get_global_var('func_8804')
call_8914 = relay.TupleGetItem(func_8803_call(), 0)
call_8915 = relay.TupleGetItem(func_8804_call(), 0)
uop_8940 = relay.atan(call_8914.astype('float64')) # shape=(15, 13, 3)
uop_8942 = relay.atan(call_8915.astype('float64')) # shape=(15, 13, 3)
func_7904_call = mod.get_global_var('func_7904')
func_7911_call = mutated_mod.get_global_var('func_7911')
var_8952 = relay.var("var_8952", dtype = "uint64", shape = (286,))#candidate|8952|(286,)|var|uint64
const_8953 = relay.const([-4.320253,6.887745,2.985258,-6.552536,-0.033203,6.862271,-1.660513,1.573084,6.107044,8.228337,-5.278607,8.719965,-8.450375,8.625938,9.247885,-5.426385,-8.139274,-9.602902,5.582127,3.830156,3.884940,-4.482112,3.485229,-9.877295,6.372139,4.372934,6.610865,-1.004919,5.157214,6.379249,-2.239474,2.994593,-3.050787,8.247182,-8.251811,1.565472,6.058110,0.737418,9.402095,9.430523,0.926557,-2.994439,5.983357,-3.319678,5.885464,-1.662727,5.721893,-4.006363,7.455135,6.549444,-7.599951,-2.532370,-5.635775,-1.505098,5.949447,-7.536156,-0.042568,5.024958,9.842764,7.006531,-2.420496,2.833846,7.448769,3.887463,8.805386,-2.837001,2.161564,6.323338,-4.377083,-5.165279,-7.753014,-2.782930,6.340403,-5.552517,2.169682,5.954099,3.713964,6.906178,3.366552,-8.116322,9.763657,-6.508015,6.710034,-9.623229,-0.945887,6.477719,8.457282,7.036831,0.587986,-2.045852,8.143204,-0.390813,-0.944666,6.914335,-9.561855,-0.476538,-1.796012,9.494836,-8.010571,9.849085], dtype = "float32")#candidate|8953|(100,)|const|float32
var_8954 = relay.var("var_8954", dtype = "float64", shape = (120,))#candidate|8954|(120,)|var|float64
var_8955 = relay.var("var_8955", dtype = "float64", shape = (605,))#candidate|8955|(605,)|var|float64
call_8951 = relay.TupleGetItem(func_7904_call(relay.reshape(var_8952.astype('uint64'), [13, 11, 2]), relay.reshape(var_8952.astype('uint64'), [13, 11, 2]), relay.reshape(const_8953.astype('float32'), [100,]), relay.reshape(var_8954.astype('float64'), [120,]), relay.reshape(var_8955.astype('float64'), [11, 55]), ), 10)
call_8956 = relay.TupleGetItem(func_7911_call(relay.reshape(var_8952.astype('uint64'), [13, 11, 2]), relay.reshape(var_8952.astype('uint64'), [13, 11, 2]), relay.reshape(const_8953.astype('float32'), [100,]), relay.reshape(var_8954.astype('float64'), [120,]), relay.reshape(var_8955.astype('float64'), [11, 55]), ), 10)
output = relay.Tuple([uop_8940,call_8951,var_8952,const_8953,var_8954,var_8955,])
output2 = relay.Tuple([uop_8942,call_8956,var_8952,const_8953,var_8954,var_8955,])
func_8965 = relay.Function([var_8952,var_8954,var_8955,], output)
mod['func_8965'] = func_8965
mod = relay.transform.InferType()(mod)
var_8966 = relay.var("var_8966", dtype = "uint64", shape = (286,))#candidate|8966|(286,)|var|uint64
var_8967 = relay.var("var_8967", dtype = "float64", shape = (120,))#candidate|8967|(120,)|var|float64
var_8968 = relay.var("var_8968", dtype = "float64", shape = (605,))#candidate|8968|(605,)|var|float64
output = func_8965(var_8966,var_8967,var_8968,)
func_8969 = relay.Function([var_8966,var_8967,var_8968,], output)
mutated_mod['func_8969'] = func_8969
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8265_call = mod.get_global_var('func_8265')
func_8267_call = mutated_mod.get_global_var('func_8267')
call_9028 = relay.TupleGetItem(func_8265_call(), 1)
call_9029 = relay.TupleGetItem(func_8267_call(), 1)
func_674_call = mod.get_global_var('func_674')
func_678_call = mutated_mod.get_global_var('func_678')
var_9043 = relay.var("var_9043", dtype = "float32", shape = (704,))#candidate|9043|(704,)|var|float32
call_9042 = func_674_call(relay.reshape(var_9043.astype('float32'), [11, 4, 16]), relay.reshape(var_9043.astype('float32'), [11, 4, 16]), )
call_9044 = func_674_call(relay.reshape(var_9043.astype('float32'), [11, 4, 16]), relay.reshape(var_9043.astype('float32'), [11, 4, 16]), )
uop_9064 = relay.asin(call_9028.astype('float64')) # shape=(15, 13, 3)
uop_9066 = relay.asin(call_9029.astype('float64')) # shape=(15, 13, 3)
func_8717_call = mod.get_global_var('func_8717')
func_8721_call = mutated_mod.get_global_var('func_8721')
var_9071 = relay.var("var_9071", dtype = "int64", shape = (130, 10))#candidate|9071|(130, 10)|var|int64
const_9072 = relay.const([4.685433,8.371633,4.571544,-4.911995,2.618843,5.858121,1.208460,-1.917574,3.806249,6.858725,2.300651,-4.835236,-7.945119,1.576446,-5.692739,-8.165143,-2.647084,-5.808386,-1.323127,3.092080,-5.221343,4.022650,-4.301032,-4.933626,-0.348677,-9.083358,-1.341229,3.251447,5.869626,-1.005765,-1.176404,5.300865,-6.166982,-5.699375,6.483471,-2.722180,-2.212572,9.611598,7.452723,-8.090149,3.144472,-7.766513,2.885840,-9.989569,-4.648160,6.790584,2.251932,6.169609,-2.685126,-5.521821,7.969954,7.427198,-8.093258,5.221504,-0.863059,-5.519999,-0.436916,9.224008,-9.113946,1.416384,-4.882044,3.076411,7.558747,-4.757887,-9.670204,5.810972,9.654419,-5.687235,5.399276,-0.237940,3.879858,7.289877,7.718570,-7.608238,-5.316785,-2.352004,-4.409429,-0.559061,-6.556108,4.902987,-3.987704,9.885388,2.948792,3.039433,7.510072,-3.324097,-7.002890,-3.188939,4.519244,-2.810085,-1.206062,-2.517786,-7.043039,6.872957,8.087122,-5.585748,0.092242,-0.894134,7.996706,-3.661202,2.205623,3.443769,-0.601492,3.022570,-3.937107,-7.046911,-4.505669,9.161915,1.214375,6.137045,4.564667,-9.188932,0.484071,1.966879,2.565711,4.233414,5.429685,-4.578202,0.409265,1.174980,0.724866,-5.189735,-5.490371,9.041964,-4.283943,3.618510,-5.217810,1.661640,-7.951491,-5.662185,-0.526895,-8.667613,-1.125641,6.650319,-5.248308,-6.438930,-7.039382,9.296680,-3.233766,1.976465,7.786767,6.516173,-4.062822,-3.864669,6.677264,-2.870262,-7.202145,0.306882,-8.461115,-7.448503,3.909630,-1.112530,-4.152982,5.630913,-9.926353,5.983063,3.112459,1.471867,2.962916,-5.608181,-6.651024,-8.052249,6.175308,-1.149935,3.460642,-5.014768,4.652714,-3.175335,-9.375265,-1.076476,-2.982062,-9.048698,-4.949928,-1.597399,5.038710,2.772143,2.886589,3.208261,3.341773,-7.453253,-2.181966,-6.862665,-1.220423,0.896461,-5.971051,4.481076,-3.372664,-9.522946,-7.316661,-1.507291,4.911753,5.111975,-7.733202,0.649907,-6.237487,-7.640920,-7.011136,-8.796296,9.567363,0.354956,-1.274817,6.873596,-3.657535,5.485167,-4.484067,2.890461,1.599959,-9.204554,1.694916,-3.042054,-8.357151,-3.740742,4.764142,7.991480,4.885536,-0.142328,5.574377,-3.863722,5.913994,-4.965250,2.677494,2.283813,5.132107,-3.373888,8.386132,-0.473025,3.071890,-6.711258,-2.561035,-5.968405,-7.275117,5.590093,-2.849862,6.366053,0.891320,7.971029,3.355338,-5.969293,-6.176318,6.638696,2.208833,6.024124,2.587966,8.246588,1.788505,8.513439,-8.813330,-1.467512,-8.613519,-3.330224,4.306880,-4.520868,-7.266569,6.774196,-7.590569,-7.656208,6.718269,-0.401177,6.516638,-1.477835,0.190487,-3.731712,-6.847087,-2.433876,-0.654983,-2.089376,-5.195708,5.827894,5.613414,-4.566840,9.667863,7.996144,-0.059153,5.037918,3.531159,3.938921,2.220236,-3.870783,-7.803559,-9.628613,0.804036,-8.232849,-2.465518,-4.794851,9.526964,8.124449,8.576858,4.684110,-8.461825,8.331295,-3.920822,3.087344,-3.665896,6.681871,-8.553411,-9.160100,-0.873475,-9.261808,-7.204382,2.496810,3.291854,-5.483242,7.478305,-8.010487,7.237160,-5.387860,-0.972849,5.066199,9.613481,4.778611,8.562090,-2.779074,9.983060,-3.838344,9.749383,3.496544,-4.859776,-4.734237,3.284380,5.180981,-6.572743,-7.867856,0.341442,-1.873320,-5.002038,4.424827,3.130913,2.082441,-9.057818,-9.150875,6.504142,-7.487317,9.686272,-7.218513,0.241691,5.246371,6.677325,9.288228,-7.950510,8.175083,3.128135,-8.200174,-6.023962,8.591347,6.860050,4.622876,3.178273,-7.321765,-1.149579,2.589179,-7.025335,8.464647,-8.154167,6.244757,-2.853725,7.555232,1.815204,-4.809565,-4.697760,-8.721595,2.869002,-7.310919,9.504727,-9.824105,3.574521,0.777447,-1.652027,7.608285,9.666659,3.523263,-8.615561,-9.855159,-1.577615,3.833281,-6.195243,-1.819281,5.030884,0.935708,6.173544,-8.469252,2.332548,7.534899,2.005657,3.612994,8.330390,-5.927191,6.822543,9.234934,-3.803363,-3.570064,-4.207788,-8.285664,-6.866564,-5.072458,9.500002,-0.748118,-0.979333,2.999428,7.218538,6.808856,8.464603,-5.664554,-0.843967,4.177460,-0.731261,7.182549,-1.138969,3.370986,4.530331,3.714862,-9.090342,-8.464134,9.680207,-9.367617,-4.193695,2.811075,-8.192491,-6.361189,5.310610,2.480176,-1.926006,-0.535725,-6.084558,8.308987,8.771801,3.389945,-5.422424,-6.624232,6.902107,-0.557533,-1.367635,8.281262,6.379417,8.960498,8.086737,3.913334,-0.304660,9.310188,8.624331,-0.104436,5.819177,-2.338374,1.952546,6.137571,-9.269766,-1.546702,3.206220,6.285495,-5.272470,8.957548,8.358245,9.310734,-5.158599,-2.468290,4.538179,-7.472174,-1.088317,-0.971892,0.801236,-9.979410,-9.175219,0.772053,9.244724,-2.894337,6.403262,2.023674,-1.333823,-4.411514,4.804401,-3.950546,-7.361287,0.784152,-8.933904,-8.821246,2.036032,8.151883,-6.283226,4.296569,2.145615,3.416508,5.885440,2.305657,9.236669,-7.126011,-9.410395,4.060386,0.020254,-4.428212,-3.637282,-4.645328,0.195080,4.955464,-9.336633,3.417049,8.483516,-3.344980,-6.119781,-5.628456,-7.430930,-6.949424,-3.455335,2.177219,7.043691,1.811763,-2.099631,9.055146,0.998809,2.404194,-1.330739,6.333250,1.132179,-0.672089,6.587428,3.284590,-1.963267,-0.951229,5.025861,-8.381425,4.302588,6.410506,3.201585,-7.255822,7.024026,-0.768048,-3.568744,9.354020,-0.966297,5.832336,0.261587,1.846491,8.422598,-6.159457,1.789193,5.389128,-3.879894,-5.814499,0.511190,-6.912919,2.669684,-8.941777,-0.466033,5.831888,-1.962263,-9.767828,-7.023902,4.886482,1.777121,-1.548473,-3.449162,-8.542501,-4.548831,2.081843,2.016167,5.793056,-6.393223,-4.985850,0.679032,0.613232,6.053401,3.115171,5.369857,2.708997,-1.715463,5.146742,9.731731,5.040922,0.055401,0.127799,-4.056663,2.172157,6.310938,0.295851,9.428539,-7.541684,-1.717983,-7.006962,-4.689909,6.265826,-2.371384,4.618165,-6.975457,6.566723,3.148644,-7.826212,6.542519,4.798041,0.016982,-9.318489,2.699588,3.811162,-8.003983,-3.274635,4.463203,-8.646546,-8.773249,6.713582,-1.469599,-5.194492,-9.657214,-7.704248,-3.561821,-1.712902,-3.561012,8.257209,7.844531,-4.432088,-0.055199,-6.570468,-3.444725,2.527728,-4.424009,7.113568,-0.336740,5.861652,-9.105232,-2.406781,9.110726,-3.044709,3.628343,3.111097,6.740092,0.261961,-4.961758,7.197630,-6.214783,-9.100236,-2.244420,5.654169,5.509646,1.626060,-5.694757,1.151721,-8.903556,-2.884949,7.075031,-1.464778,5.436070,-1.449503,6.174090,-2.810768,8.560145,-1.865162,-8.236037,-9.911676,-7.863629,3.431383,9.852868,-2.929554,-7.231396,-9.871610,3.362677,-1.370787,-4.911829,-8.525134,1.750223,7.039627,3.887115,-9.841899,5.760008,-6.667891,-4.996205,3.286821,-0.387110,1.356530,-7.339919,-8.284042,-1.401344,-4.133915,1.292095,-1.539092,0.977822,1.197931,7.530098,-3.346912,-9.866501,8.131280,-4.807885,3.640364,-8.347439,1.672641,-2.020362,-4.019271,8.632097,9.189620,-4.227712,1.831417,4.284456,-5.125032,-2.109251,3.142283,8.542313,2.730117,3.649423,-1.969795,9.106858,-6.602035,7.456138,-0.547004,9.043956,-8.403007,3.740462,4.962023,-8.538416,0.166738,-1.778094,-4.301992,4.257148,3.387272,-7.721111,4.277078,-9.118585,8.598256,-7.864566,-7.232009,5.101794,2.635660,-7.018625,2.445766,2.523585,6.932661,9.682910,7.985026,5.308667,-3.014982,7.771792,5.861891,3.393363,8.147528,-1.890529,-0.495849,-8.908981,-9.191141,-1.322637,-0.852339,-5.697032,-6.928106,9.296064,9.666014,-5.796773,-8.156164,0.934920,5.433143,-1.692001,-8.905900,-0.141586,-5.793822,6.111134,6.118774,-9.433580,9.459813,1.331859,-3.256978,8.679743,4.326206,8.565431,3.835647,5.710650,-5.190635,-3.372536,-6.355424,0.896989,1.738771,9.811556,-1.955053,-9.300280,2.690044,7.389228,-5.712048,2.856037,1.397077,7.125021,5.442743,1.544681,-7.973110,-3.734717,0.364627,9.746372,-1.507765,9.825934,-2.122574,-3.552487,-5.701177,-8.885893,2.280871,-9.507724,-9.361667,2.892911,0.306182,6.583574,-0.981035,-3.040709,2.139337,4.600705,3.447527,6.494358,-7.318586,0.919896,6.668076,-6.705581,8.916250,9.094211,-2.210624,2.681192,-0.010155,-5.612182,-9.216342,-6.043384,-2.005761,-4.816239,-9.252263,-3.109591,9.160062,7.250331,1.201722,8.484194,8.132170,-1.366528,-8.625585,8.421436,2.703780,8.803148,-6.291142,3.386516,1.250015,-9.353092], dtype = "float32")#candidate|9072|(825,)|const|float32
const_9073 = relay.const([-0.544012,-3.494553,-3.035690,-0.647650,-6.980304,4.879918,-2.502601,2.544472,-1.879860,-3.290215,-3.581839,-8.217003,3.163659,-4.600732,2.958214,3.308144,-7.469496,6.866022,-7.567240,-2.289322,-7.752129,1.330196,-2.257670,-8.896029,8.031403,-9.314801,3.806331,-6.474232,4.542644,8.174144,-4.759564,0.596124,-2.246230,2.919436,-9.636799,-0.763202,0.375891,-8.612278,-0.376731,2.426395,9.794587,-4.154183,-9.230440,2.452743,2.695030,-3.355612,7.663705,-4.620920,-3.993730,-3.578710,-6.052530,6.354716,-9.496973,3.383366,7.663530,1.418373,-9.392862,4.891337,-2.584705,3.058806,7.972145,5.232473,8.528770,7.124091,0.449005,-9.328243,-0.224804,2.172920,0.343699,8.576767,2.543321,2.807840,-3.705610,-8.865081,0.602834,-9.016163,7.034558,-5.681103,-7.934050,-4.752022,7.262769,5.456555,0.921775,5.575421,1.342778,4.127032,4.727883,6.687113,4.544056,-1.585528,5.733605,4.114171,-3.029278,8.523835,2.088589,-9.308296,-2.437219,-4.398072,-4.819349,8.431325,6.891327,3.310288,8.173905,-2.085013,-4.364960,-5.243870,-7.154917,7.450440,4.439227,3.740889,-2.766931,3.422331,1.051069,-3.733658,8.497499,7.367595,-1.325024,4.908173,5.363705,-7.721219,-3.222445,5.077410,7.836144,5.469067,3.397140,4.526240,-0.979146,9.265281,6.590347,-1.511431,5.455285,5.409536,-6.848688,4.824488,-0.491614,9.912478,-2.091809,7.612117,1.903670,-6.471071,3.734710,1.981963,6.115661,0.456893,-9.504433,7.145084,-1.693522,-7.445094,-2.010179,-9.151938,9.296791,0.650285,4.707548,0.811532,-4.481520,1.706262,-3.103580,2.625083,5.314068,-8.577888,-7.232463,1.474896,-2.347232,3.304135,-3.079623,4.125328,-6.936454,6.521891,-6.641435,-5.845992,5.067205,-1.278876,-7.327660,4.756541,1.974310,-3.824601,6.333732,-8.912140,6.130913,-3.863593,0.981146,9.372512,5.150474,8.105686,-9.318635,-3.882287,-1.976199,6.815732,-2.690262,-7.618902,-3.132701,-3.895397,4.112196,6.663730,-5.277055,-1.754579,4.500953,8.685465,-6.954016,-5.718549,6.281912,-0.324893,-7.654644,-9.211885,-3.765471,-7.818233,9.013376,8.599645,5.687898,9.458530,-8.019057,0.490946,-1.277534,-3.842380,-1.166105,1.138241,9.967882,0.102311,0.455291,3.716966,-9.555121,-3.141641,-4.355542,-0.980694,-5.927904,8.505607,5.200769,-7.812796,-0.522674,1.902955,-1.240034,-7.944795,-5.937855,3.715792,9.362101,-9.764046,-4.636687,-1.571732,-3.364389,-2.853740,-4.021723,1.769687,-1.560492,8.837352,4.127087,8.045179,9.333846,2.272676,4.037934,7.378353,6.263617,0.803134,-9.478520,-9.179633,-8.091537,9.376740,2.318496,3.792716,8.516767,-0.492258,8.973120,-3.740251,2.668689,-8.815091,-1.139397,3.352932,3.554854,6.273199,-4.093742,-2.700328,-2.231626,-0.936755,5.322843,6.235313,-7.643119,0.423322,-2.081290,1.050467,2.712390,-7.510438,0.054889,-9.385047,-6.785612,0.106968,6.119556,-3.814097,4.120152,8.224035,-3.194716,7.073226,-8.271292,-0.190140,-7.415463,-8.616430,2.714605,2.255298,3.513186,-5.006100,0.711266,-3.016240,8.706370,-0.385957,4.237498,5.016106,7.488264,0.135084,2.423415,-3.236084,7.705746,-4.606171,7.850838,0.929988,5.107278,6.394113,8.443652,3.311822,-8.802838,-8.484531,-0.107984,5.435434,-0.433784,4.843881,-0.627868,-9.355610,5.357463,-0.662310,-8.962022,6.912051,4.161101,4.507835,-5.949084,-6.377757,-1.217970,6.984405,-8.130941,-7.400526,4.304380,2.806670,8.315523,9.803003,-5.185750,-8.026839,5.923722,-3.157449,-8.184234,-7.754807,-4.204800,7.504947,3.013004,1.478632,8.505362,-0.561864,-4.837541,-4.954615,8.654153,-8.346520,3.858773,6.104458,-1.760258,-0.903107,4.189722,3.777441,9.629623,-1.730826,4.475111,-3.422716,-7.456855,8.098465,-1.657221,-9.511749,6.604343,7.069658,4.775924,-3.544551,-4.633913,-9.692633,2.341688,-8.867741,-2.017420,3.619492,-4.893056,-2.938622,-1.739839,5.571918,4.640505,9.801780,-4.068812,-1.350005,2.918709,0.642644,3.191832,0.879922,-9.095612,1.966748,-0.924820,-2.059887,-6.277235,2.981094,3.047191,-9.929377,9.376069,0.026001,-5.079611,8.192666,-8.464000,-7.036079,3.415619,-9.035079,8.061379,-4.198672,-2.146441,-5.011981,-8.747447,-0.878389,7.339043,-9.053781,-4.067401,-5.082538,8.076120,-6.464184,0.915454,9.247513,-9.721275,-8.454075,6.217959,0.306539,9.257767,1.358552,-1.212752,9.470297,-6.597229,-4.355472,-7.188175,7.388640,-0.439386,4.011156,-7.872053,-4.324426,2.640222,-1.990109,-6.974857,-1.146038,-9.752720,3.365005,5.899977,-5.684020,-4.037371,-5.733797,9.297500,9.302509,6.284585,1.220616,3.601759,-4.712611,-2.936039,-7.131585,1.489108,2.311833,-9.570728,-3.614324,8.177881,0.247643,0.756679,-9.092736,5.173885,-0.457201,7.314198,2.032281,-2.705738,0.078917,-7.064469,6.402493,-8.987751,3.335588,9.506580,9.813931,-5.432634,-7.203284,-1.077657,9.600145,-5.903166,5.879265,5.408942,6.170766,-1.076421,6.611726,-5.977228,-6.912658,6.775813,4.514103,0.230357,9.988901,2.129293,0.256441,4.019807,2.464304,7.208359,3.283402,9.150725,-4.255616,0.716330,5.742956,-3.437020,-2.024946,7.773049,-7.254281,-8.820827,2.741608,3.871420,-4.657665,0.667279,4.684829,-9.846931,7.231683,2.920979,8.012393,0.929375,-8.989791,9.832358,6.489536,-7.500730,2.926372,-8.821081,-1.866341,-0.067484,-9.057881,-2.417352,-3.196313,-9.220253,2.581988,8.949600,-7.140457,9.025509,-1.648815,4.770115,5.984880,8.499159,4.104910,9.218574,3.816067,-2.592856,0.231765,3.830662,7.036817,-0.459347,3.943158,6.635426,-1.334501,-8.996330,0.006171,5.060271,1.429413,-4.356108,-2.594738,-0.090471,6.018374,2.024773,-9.139942,-3.118357,-6.638466,-8.516708,-6.395939,7.724493,-3.570571,1.081127,4.752967,-2.426942,2.070535,2.965867,6.219818,1.161071,-6.053236,2.090687,-3.292648,-6.628167,-8.967298,-9.147565,8.031700,-5.091702,-6.577652,8.271815,-2.226737,-2.766222,-0.372448,2.202807,-1.630801,-0.091253,1.840801,3.369785,8.635868,-5.447820,-6.996320,-6.810984,-7.619311,4.151028,-3.938189,-7.194944,-9.852736,-6.323791,9.631693,-6.983679,2.122631,-2.487247,6.166489,-8.217718], dtype = "float64")#candidate|9073|(605,)|const|float64
call_9070 = relay.TupleGetItem(func_8717_call(relay.reshape(var_9071.astype('int64'), [1300,]), relay.reshape(const_9072.astype('float32'), [825,]), relay.reshape(const_9073.astype('float64'), [605,]), ), 2)
call_9074 = relay.TupleGetItem(func_8721_call(relay.reshape(var_9071.astype('int64'), [1300,]), relay.reshape(const_9072.astype('float32'), [825,]), relay.reshape(const_9073.astype('float64'), [605,]), ), 2)
func_6473_call = mod.get_global_var('func_6473')
func_6475_call = mutated_mod.get_global_var('func_6475')
const_9090 = relay.const([10,-10,-4,6,6,6,7,-5,-1,1,-5,8,-8,6,-8,3,-6,7,-7,-2,6,-7,7,9,2,4,8,-3,-6,6,-7,-4,-9,4,3,-3,4,-2,-9,1,-3,-9,8,9,-10,-10,1,9,-4,-10,-9,-5,-10,-5,8,-2,-2,5,-2,6,9,-10,-9,-2,4,-7,4,9,1,-3,-2,1,6,6,10,4,9,10,3,-10,-6,1,10,-4,-3,-9,1,-9,-6,9,-8,-5,-4,-4,9,-5,10,4,5,-9,6,5,10,6,-10,1,-5,4,3,8,1,-6,-9,-9,8,-5,7,-4,6,2,5,4,2,-9,8,-7,-1,8,-5,4,-8,-10,9,-2,1,10,1,-6,-6,10,-4,-2,1,-3], dtype = "uint64")#candidate|9090|(144,)|const|uint64
call_9089 = relay.TupleGetItem(func_6473_call(relay.reshape(const_9090.astype('uint64'), [12, 6, 2])), 3)
call_9091 = relay.TupleGetItem(func_6475_call(relay.reshape(const_9090.astype('uint64'), [12, 6, 2])), 3)
func_8760_call = mod.get_global_var('func_8760')
func_8761_call = mutated_mod.get_global_var('func_8761')
call_9096 = relay.TupleGetItem(func_8760_call(), 0)
call_9097 = relay.TupleGetItem(func_8761_call(), 0)
output = relay.Tuple([call_9042,var_9043,uop_9064,call_9070,var_9071,const_9072,const_9073,call_9089,const_9090,call_9096,])
output2 = relay.Tuple([call_9044,var_9043,uop_9066,call_9074,var_9071,const_9072,const_9073,call_9091,const_9090,call_9097,])
func_9100 = relay.Function([var_9043,var_9071,], output)
mod['func_9100'] = func_9100
mod = relay.transform.InferType()(mod)
mutated_mod['func_9100'] = func_9100
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9100_call = mutated_mod.get_global_var('func_9100')
var_9102 = relay.var("var_9102", dtype = "float32", shape = (704,))#candidate|9102|(704,)|var|float32
var_9103 = relay.var("var_9103", dtype = "int64", shape = (130, 10))#candidate|9103|(130, 10)|var|int64
call_9101 = func_9100_call(var_9102,var_9103,)
output = call_9101
func_9104 = relay.Function([var_9102,var_9103,], output)
mutated_mod['func_9104'] = func_9104
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8803_call = mod.get_global_var('func_8803')
func_8804_call = mutated_mod.get_global_var('func_8804')
call_9130 = relay.TupleGetItem(func_8803_call(), 0)
call_9131 = relay.TupleGetItem(func_8804_call(), 0)
output = relay.Tuple([call_9130,])
output2 = relay.Tuple([call_9131,])
func_9132 = relay.Function([], output)
mod['func_9132'] = func_9132
mod = relay.transform.InferType()(mod)
output = func_9132()
func_9133 = relay.Function([], output)
mutated_mod['func_9133'] = func_9133
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8402_call = mod.get_global_var('func_8402')
func_8404_call = mutated_mod.get_global_var('func_8404')
call_9155 = relay.TupleGetItem(func_8402_call(), 0)
call_9156 = relay.TupleGetItem(func_8404_call(), 0)
func_8501_call = mod.get_global_var('func_8501')
func_8502_call = mutated_mod.get_global_var('func_8502')
call_9161 = func_8501_call()
call_9162 = func_8501_call()
func_2475_call = mod.get_global_var('func_2475')
func_2479_call = mutated_mod.get_global_var('func_2479')
const_9164 = relay.const([5,-9,-4,-7,2,6,2,-6,7,9,-2,8,-10,-9,2,-8,6,6,-4,7,-9,-3,10,4,-5,-7,-9,-6,-9,-6,1,-8,3,-6,-6,-1,4,6,7,3,4,-6,-6,4,7,6,3,-4,-9,1,3,-2,10,-3,7,-7,-10,8,7,-3,1,4,-5,-10,9,10,7,-1,10,-4,-3,-2,5,-9,1,7,-1,-5,9,1], dtype = "uint16")#candidate|9164|(80,)|const|uint16
call_9163 = func_2475_call(relay.reshape(const_9164.astype('uint16'), [1, 5, 16]), relay.reshape(const_9164.astype('uint16'), [1, 5, 16]), )
call_9165 = func_2475_call(relay.reshape(const_9164.astype('uint16'), [1, 5, 16]), relay.reshape(const_9164.astype('uint16'), [1, 5, 16]), )
output = relay.Tuple([call_9155,call_9161,call_9163,const_9164,])
output2 = relay.Tuple([call_9156,call_9162,call_9165,const_9164,])
func_9199 = relay.Function([], output)
mod['func_9199'] = func_9199
mod = relay.transform.InferType()(mod)
output = func_9199()
func_9200 = relay.Function([], output)
mutated_mod['func_9200'] = func_9200
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8274_call = mod.get_global_var('func_8274')
func_8276_call = mutated_mod.get_global_var('func_8276')
call_9214 = func_8274_call()
call_9215 = func_8274_call()
output = relay.Tuple([call_9214,])
output2 = relay.Tuple([call_9215,])
func_9223 = relay.Function([], output)
mod['func_9223'] = func_9223
mod = relay.transform.InferType()(mod)
mutated_mod['func_9223'] = func_9223
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9223_call = mutated_mod.get_global_var('func_9223')
call_9224 = func_9223_call()
output = call_9224
func_9225 = relay.Function([], output)
mutated_mod['func_9225'] = func_9225
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8760_call = mod.get_global_var('func_8760')
func_8761_call = mutated_mod.get_global_var('func_8761')
call_9230 = relay.TupleGetItem(func_8760_call(), 0)
call_9231 = relay.TupleGetItem(func_8761_call(), 0)
var_9234 = relay.var("var_9234", dtype = "float64", shape = (5, 2, 5))#candidate|9234|(5, 2, 5)|var|float64
bop_9235 = relay.floor_divide(call_9230.astype('float32'), relay.reshape(var_9234.astype('float32'), relay.shape_of(call_9230))) # shape=(5, 2, 5)
bop_9238 = relay.floor_divide(call_9231.astype('float32'), relay.reshape(var_9234.astype('float32'), relay.shape_of(call_9231))) # shape=(5, 2, 5)
output = bop_9235
output2 = bop_9238
func_9248 = relay.Function([var_9234,], output)
mod['func_9248'] = func_9248
mod = relay.transform.InferType()(mod)
var_9249 = relay.var("var_9249", dtype = "float64", shape = (5, 2, 5))#candidate|9249|(5, 2, 5)|var|float64
output = func_9248(var_9249)
func_9250 = relay.Function([var_9249], output)
mutated_mod['func_9250'] = func_9250
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8274_call = mod.get_global_var('func_8274')
func_8276_call = mutated_mod.get_global_var('func_8276')
call_9259 = func_8274_call()
call_9260 = func_8274_call()
func_8717_call = mod.get_global_var('func_8717')
func_8721_call = mutated_mod.get_global_var('func_8721')
const_9263 = relay.const([-10,-1,-8,3,-7,-7,2,-8,-2,5,-10,6,-9,-7,6,4,9,-6,4,-6,-4,3,10,8,4,-3,10,-2,4,10,7,6,3,3,-1,-6,4,10,-3,-4,-2,1,6,2,3,10,8,-6,-7,-6,-7,-5,6,-5,-2,5,-5,7,-2,-5,-1,-6,10,9,10,8,-10,10,-8,4,-3,-5,5,-4,-1,1,4,2,-1,3,-8,1,-6,3,-6,-4,-6,-1,-1,10,-4,7,-10,1,-1,5,7,-7,-8,7,-9,-5,1,10,1,-5,10,-2,-10,4,-9,-1,6,9,10,8,-8,8,2,-3,-7,7,-2,-10,4,-6,-2,9,-6,-1,-6,-8,5,6,-4,-8,9,8,6,6,3,-3,8,2,2,-10,4,5,-6,5,-1,-2,-2,-4,10,10,-1,-8,-7,-2,-6,9,2,9,4,9,1,-6,4,3,9,9,8,-8,2,6,-2,-9,-9,-2,4,-8,5,-6,-3,6,2,-1,-7,-7,-7,-8,-10,-3,5,3,9,2,7,-6,9,-2,9,3,-2,-4,5,-8,-7,5,-8,-9,2,-2,1,9,2,-3,5,-7,-8,6,3,10,6,-3,-4,3,6,-4,5,-9,7,8,-1,8,5,3,-9,9,-8,2,-5,-9,2,9,9,6,1,-7,-8,2,-1,1,-7,7,-3,9,-4,8,-2,-5,5,8,-5,10,1,7,8,6,-10,-3,2,10,8,5,-5,4,10,-7,6,8,-1,3,-5,-5,4,8,9,3,6,-9,8,10,-5,3,-6,3,6,-7,5,-5,-9,4,-1,-7,-6,-7,-2,-2,-5,10,-8,9,9,6,-7,4,4,-5,-6,3,9,-6,-8,-9,3,-6,-2,-6,2,-6,1,-6,9,-9,6,-9,-1,-7,3,-3,5,9,4,-10,-7,5,8,4,-7,-6,-6,-7,10,-7,-9,-3,-10,2,8,-2,10,-5,-3,8,2,10,-7,-5,2,-3,-2,5,-9,-8,1,-3,9,9,-7,-9,-9,4,-9,-6,-9,-2,-5,3,-8,-4,10,9,-5,1,-5,10,-3,-3,-1,3,-10,-3,6,1,-8,2,-4,9,-9,-3,3,2,6,-8,6,9,10,3,9,-9,-2,-4,10,-6,-4,-7,10,2,-7,-5,4,1,7,10,-1,-4,8,7,-1,-8,2,1,5,10,-2,6,-10,-9,-2,-4,8,8,-5,-5,-10,1,-8,-3,-4,4,-9,-3,7,5,-3,-4,8,8,-9,-2,-3,10,-5,-4,-8,-8,-9,6,-5,9,2,10,7,5,-10,-2,10,-6,-7,-6,1,1,-5,9,-8,1,-2,-9,-10,3,-1,-4,-9,10,3,8,-1,7,6,7,2,1,8,3,6,9,4,-10,4,-6,7,-4,-5,-4,4,-4,-9,4,-6,-5,-4,-2,8,1,4,-2,3,7,4,10,3,8,-10,-9,-9,1,-9,-4,-6,10,4,1,5,-9,1,8,-3,6,-9,2,-1,3,-5,-8,4,3,9,7,-5,-4,-6,-2,1,4,5,7,-8,-6,1,-6,-2,-5,4,-5,-8,5,3,5,-5,5,-5,-6,7,8,7,-3,2,10,-9,4,5,-3,7,6,5,4,4,-4,5,6,-5,-1,-8,2,-5,7,6,-10,-6,-8,8,2,5,2,8,-2,-1,-10,1,6,-8,7,1,-10,-6,9,-10,7,-6,3,-8,-7,-7,8,6,-3,-7,2,-10,6,-9,-9,5,-4,4,7,4,1,-8,9,-2,-2,-5,-6,7,10,-6,-6,-6,4,-10,3,2,7,-4,-5,9,5,10,-8,3,4,10,10,2,5,2,8,-4,3,-9,4,4,3,-1,2,10,1,5,3,3,9,-8,9,-2,-9,1,-1,3,10,7,-7,-7,7,10,-1,-10,8,9,-1,2,-4,-3,9,-2,-1,-2,-6,-5,-2,2,7,6,-1,5,-8,2,-9,10,3,8,9,-2,-8,7,-1,-3,-1,4,-6,4,5,7,-4,-3,-8,-3,-10,1,2,-7,-7,9,-1,-9,-3,2,-2,-1,5,3,6,10,1,-5,-9,5,-5,3,-9,-5,-7,8,6,-6,-7,4,-5,1,-8,-8,-1,5,7,-3,2,9,-7,-9,-10,5,5,3,4,7,-2,-8,-10,-8,1,-5,1,4,-3,-10,9,-10,-5,-4,9,-10,8,4,3,5,5,-8,-4,-4,-5,-9,10,-9,-4,-3,-4,-2,2,-10,-9,-10,-5,-9,-9,7,7,-10,-7,1,2,2,8,-10,-1,-7,5,5,4,-8,-8,8,-3,2,7,-1,9,7,-9,-8,-7,-3,10,2,-3,-10,-7,6,-9,10,-4,-7,6,10,10,8,-1,-2,2,-9,-4,5,7,3,-2,4,-6,10,-4,7,-8,-5,-9,-4,-9,-3,-9,-6,2,4,2,1,-6,10,-1,8,-2,-10,8,-2,-4,1,3,-2,7,-10,-2,9,-2,-2,5,-4,-10,10,8,-4,4,10,3,4,-7,-10,-5,-1,-7,-2,10,1,-2,-8,10,-7,-7,6,8,-9,6,6,-10,10,9,-10,-10,10,2,4,-2,-8,5,-1,6,10,1,3,4,-9,-7,-3,-9,-9,-3,-3,-4,-7,5,-4,10,-2,9,-4,-1,3,1,-3,10,-1,6,9,-7,1,-6,4,6,-9,-3,7,6,-10,-7,-9,-8,10,-6,-6,-7,6,9,-1,6,-1,3,-3,-7,5,-7,-10,5,-10,1,6,10,-3,-2,7,2,-6,-3,5,-3,3,5,6,-5,4,2,-6,-2,3,-1,3,-6,10,10,-1,-4,-3,-2,-2,5,3,-4,10,-5,-1,3,2,4,1,5,-9,10,9,-2,7,5,-5,-10,-8,-9,-3,-4,2,-5,6,-6,-1,8,6,-1,7,6,8,8,1,6,10,9,1,-2,3,1,-4,-4,-9,5,2,10,7,5,-7,-2,-2,-6,4,-10,-8,1,-10,-2,9,-6,9,8,-8,-6,5,-10,10,7,-6,10,-10,5,5,10,7,4,6,3,-6,-6,8,7,-4,1,3,-5,4,4,9,5,2,1,-3,9,-5,2,3,-1,-6,-8,-4,4,2,1,-2,5,-8,-1,5,2,-6,-3,-4,5,-5,-2,5,10,6,7,8,3,2,-6,-5,-7,3,-10,-4,-10,10,-1,8,10,-3,-1,3,-8,9,2,-4,-4,10,-5,-1,-5,-7,-3,8,-8,-2,-1,-4,-2,4,-4,4,5,-2,-10,5,1,2,8,9,8,-4,8,9,-8,3,-1,-2,3,-7,6,-8,6,4,7,-8,7,-7,2,7,9,4,9,4,-1,-6,-3,-5,-4,2,4,-8,2,8,-1,5,-6,-8,6,-8,-5,3,1,-8,9,-6,-8,4,8,-5,6,9,-1,-9,-10,-4,-3,4,7,9,-10,8,7,-1,3,-6,-7,3,3,-5,-10,10,5], dtype = "int64")#candidate|9263|(1300,)|const|int64
const_9264 = relay.const([-9.130061,3.962757,1.115952,8.260411,9.630823,5.335073,6.417945,1.938399,9.374259,7.570963,4.746639,-9.500498,9.015826,-9.911531,9.584692,5.188370,6.692935,7.391306,-2.507852,5.899521,3.568560,-1.072601,-0.178872,5.534887,8.319315,0.796720,2.150092,0.200828,-3.762401,0.023980,-0.323194,1.076685,-9.349166,-5.082674,7.159362,-9.092284,-9.876434,1.895519,-0.091022,9.722929,9.663480,-9.055469,-9.074827,9.336999,0.116803,-2.944379,1.235676,6.897020,9.132989,-9.572940,1.362821,1.454596,1.149774,4.086916,6.707629,6.051862,7.555443,5.024131,-2.841658,-3.324179,-1.766573,5.190920,-7.676022,7.831004,-3.483016,-4.224796,-8.255356,-7.743644,-9.341108,4.012125,-5.403272,-8.255722,4.540658,4.387285,-5.971475,3.416584,-2.430379,7.356669,-9.386867,-0.751966,-4.612895,-8.227216,3.660015,7.794673,-0.931553,3.549453,7.399833,2.602708,-2.709744,-7.529122,-0.769074,6.217923,-2.652558,-6.173727,3.220095,-7.264639,8.275152,-8.108400,7.819676,1.141932,-4.408544,-7.845990,-1.463991,-4.690798,-5.563301,-0.327813,6.862701,6.628159,-2.507368,-2.192201,9.045345,0.285672,3.823119,6.540423,6.386121,3.671830,7.960944,-7.351807,7.619005,-2.820771,8.228263,-8.830409,-5.452357,9.327418,6.246763,-2.281909,-4.281468,-4.374968,6.928316,-5.670981,-1.691667,7.088779,8.653520,2.698177,-4.593035,-4.415682,-2.233718,-7.769770,-5.415945,6.076487,2.082687,-8.498564,-1.151917,-5.292130,-2.045967,-8.779743,-2.793905,2.007839,2.610327,-4.509027,-1.849738,-1.967195,5.292894,-4.957299,-1.797858,-4.773617,0.006875,7.532616,9.493833,-9.427288,-4.993758,-9.457838,-3.852345,-5.155147,-8.430577,8.190428,4.924152,-6.587209,3.266375,-9.950481,-5.792418,7.403107,-4.689295,8.278235,-1.479260,7.427770,6.553607,8.249123,4.543079,0.001055,-6.796635,8.214242,-5.997373,0.244836,-0.777551,8.459833,-2.870326,-5.300658,3.752073,-4.886428,0.321002,-1.859581,3.340605,-3.378092,6.885708,-1.351209,8.980587,7.094706,1.747438,9.711052,8.579038,3.690104,5.874632,-7.388616,3.645830,3.252903,-0.947656,6.456522,2.496885,2.846471,-7.784175,1.814516,3.290040,1.394642,7.389761,-6.130007,-4.970401,-6.333321,2.829251,-7.633881,3.992885,-5.313027,-3.531497,9.717812,7.667597,-0.180101,-9.527011,6.070718,8.403305,1.793467,5.948265,4.988490,8.700785,-5.359128,-5.356202,2.225385,-5.880655,1.170665,-1.557897,-2.794301,6.380148,4.204967,-1.717917,5.418850,5.663162,-7.052433,-7.572013,-5.736521,4.905040,4.270570,-1.971974,7.344306,-5.265768,8.206141,2.054399,-7.267952,-5.416517,9.383998,5.484969,-5.001956,2.137096,3.542077,-6.109895,6.996996,-0.242020,3.373103,7.707131,7.290633,-6.566769,-6.521609,7.225361,-5.795934,-3.396536,-2.048630,3.286942,8.148675,-5.731427,-8.195529,-5.193464,-6.234061,-3.336847,3.339858,1.111096,8.338887,3.491968,9.863595,2.718559,5.541592,2.614487,9.517636,-1.538904,8.128794,9.581842,-8.532608,9.675406,0.575257,-8.587316,-6.641871,7.859775,2.377336,0.476190,9.500764,2.911064,3.129225,0.138877,9.896440,6.413800,-5.899697,-9.095857,-8.334141,2.451341,-9.667343,9.474904,1.061494,-1.962037,3.443912,-2.336769,-6.124690,6.219448,-1.289026,-4.870115,3.621740,8.145755,6.109666,-4.779544,3.852386,8.284205,6.633779,-6.617976,4.067541,-8.411234,3.658214,-3.710538,-1.674441,2.397916,-2.983378,-6.363567,6.539856,4.315353,2.403278,-3.513231,6.642814,-5.228458,-0.205036,-0.289964,-9.072787,0.359576,1.078129,1.392021,0.414235,-1.547705,2.242975,2.352276,-7.088017,0.930191,-4.612967,3.355422,2.549180,5.197006,-0.738269,4.086845,-1.843603,-4.316662,-2.990601,9.322753,-0.847851,0.485738,-1.736429,-2.449769,8.738135,-9.694507,-6.227465,-6.411873,-3.698678,0.121745,8.489574,5.675883,8.450464,1.667417,6.719634,-9.688386,-1.518717,3.489781,-9.499743,-7.346690,9.960423,-1.711341,-7.747044,4.457561,-8.291789,8.123357,-3.377895,7.316020,3.915584,1.420372,4.346603,-3.760026,-3.550018,-2.485548,-2.485217,-6.110321,0.131563,9.267698,1.102500,-6.730024,8.877154,1.729599,-4.933867,-6.531759,6.859880,5.279575,7.322641,4.639233,6.828846,-7.236104,-2.255723,-7.649471,7.035917,4.198853,-9.996374,-6.132317,9.674160,5.133617,-9.218566,8.189846,-2.658872,-2.728520,9.233190,2.442310,3.694948,-2.440984,-9.197610,-4.789202,-5.538614,2.194589,5.340301,-2.288848,6.535145,0.515555,1.593636,-1.858371,6.951279,8.102187,-1.368385,4.956370,2.214742,2.967661,-2.130321,1.096784,2.888747,-1.867614,2.629277,5.141017,-3.371587,-7.829811,-7.464367,7.495839,-3.524429,-9.428359,6.451267,-6.350865,2.156907,9.118046,9.848587,-9.640518,3.894524,-8.367558,4.343120,4.991179,-2.534613,-0.493409,-5.353279,-1.560777,-6.391915,7.118122,-0.627306,-1.288596,3.310230,-0.772022,1.255460,7.648111,1.257675,1.043046,-3.495091,-5.568360,-7.522025,4.396008,9.327271,2.057421,-5.697591,7.769821,8.206062,-0.884882,8.998485,2.744235,0.813384,2.337596,-0.038603,3.265649,-9.637218,1.553421,-4.814646,0.997154,-5.216465,-5.798117,-1.497502,-4.351423,5.801882,-0.857773,0.360731,4.241271,4.945535,7.444582,7.163454,-6.773229,-4.148855,1.822999,-4.865845,-7.524635,6.632854,1.114570,8.184618,6.412971,-1.202276,3.579304,-4.221758,-0.654320,-5.575918,7.051134,-6.955764,5.042483,-4.948543,-6.446188,4.638973,6.481893,8.994807,-3.725083,-2.773586,1.012349,-1.495831,-9.179829,-4.583148,-9.315546,-1.013037,-3.096619,4.960201,-6.246249,-8.577246,-8.747297,5.864884,5.827681,-0.032251,1.298666,9.319713,4.442112,-6.324756,-2.781380,-6.716259,5.376098,9.514833,1.768199,0.243092,-4.252694,-1.274256,5.849355,-7.005456,-4.060552,9.576249,-1.395984,7.697468,-4.087695,2.614027,-8.675193,3.599480,6.510196,0.755158,8.462191,-9.589377,8.317311,-4.363185,-5.267645,0.115380,1.147097,8.193024,2.629514,2.510972,-9.912823,4.468834,-0.249929,-3.319379,3.235565,-6.394486,-8.410867,-0.637680,-9.497129,-3.101043,1.275210,5.330233,-9.039283,-0.845123,1.898573,0.741115,9.112330,-8.313250,2.624750,0.941912,8.283861,2.127411,-5.912603,2.605982,-0.408471,1.622269,7.784672,-6.541671,5.868911,1.477965,-6.365838,-8.882060,9.854322,4.737069,4.396169,9.526867,9.192258,-3.085738,-6.145181,-3.368513,-7.079854,8.977282,-8.402660,0.537118,-2.712571,4.374904,-7.101786,-2.890562,-3.930436,-0.660833,-4.218737,-2.021597,9.902806,5.229139,-9.746297,-1.115450,-3.178417,-8.162503,-9.148717,-8.280060,1.779629,2.124208,-2.976724,5.041972,-4.598007,-4.897617,-7.212231,-3.662367,-6.697342,0.592022,5.742919,1.030182,3.734078,-5.014412,7.893948,8.813429,-4.002197,-3.631343,-7.295390,-5.316258,-8.481087,-6.233067,4.146157,-0.966836,-6.409067,2.449913,2.437152,8.735817,-6.829852,-4.878545,3.331601,-1.143697,0.031628,-0.532756,1.457274,-5.048522,9.729624,-3.048473,5.730116,-6.414691,-0.875996,3.186130,-5.421539,8.393111,-3.461386,3.924175,1.053845,-3.736441,-8.994282,-2.550494,9.831927,9.925043,5.811416,0.699978,-2.268644,1.672697,2.100144,1.707254,2.503165,6.379585,-2.852481,3.117592,-8.390607,-9.843525,-3.394779,-1.470639,3.409918,8.212109,0.648933,3.199014,-4.227207,2.764247,2.210053,-7.651149,2.107915,4.419359,-7.382192,5.047670,-8.214861,5.595885,-7.862007,-8.447872,-9.829015,9.441694,-0.011405,9.876083,8.723389,3.695021,6.658220,5.411696,2.839864,6.607465,-3.961602,-8.235185,-2.851563,5.141593,-4.051330,3.096039,7.113580,-8.157216,4.096130,0.510194,-2.418396,-1.561400,-9.652740,-8.418391,-4.329034,9.545089,-2.834229,2.400424,2.592188,-3.310925,-5.816821,-0.825314,-6.292997,9.674494,9.771812,-3.778820,8.818231,7.363251,-9.935538,5.888285,3.750728,6.654429,2.129075,5.282981,-8.382773,-6.325187,8.935323,-4.101050,8.088705,0.456059,-8.418574,5.140066,-3.348993,7.270634,-7.123719,9.166488,4.742882,-9.584235,8.486621,-9.919473,7.232741,-5.860961,4.474026,-1.348636,6.884129,0.636899,7.960284,3.893391,-6.811468,-6.306597,-3.598388,-0.851200,4.296503,-6.695207,-2.732534,-3.944709,5.542937,-8.908391,4.191942,3.321490,2.938921,8.058435,9.587000,-2.669986,2.169506,5.577738,6.073233,-9.409835,-4.958738,6.441439,9.942072,-8.302586,5.486401,4.525829,5.115098,0.937584,-6.729655], dtype = "float32")#candidate|9264|(825,)|const|float32
const_9265 = relay.const([0.825616,-1.944444,-1.394481,-9.590979,-4.703632,8.484055,-9.897409,7.430380,6.361220,8.618739,-5.696804,-9.206103,3.843120,-3.639975,-4.424924,9.384820,-7.732484,-9.046594,6.682199,9.995987,1.270989,5.959132,5.627558,-9.841188,2.132966,-5.903335,-3.125221,3.453784,9.131885,-1.377656,-5.785885,8.860439,-5.020574,5.753082,-4.655404,7.658652,-7.185781,0.332200,-3.564791,-1.283137,-1.455785,4.711411,6.807186,-7.248289,-4.653788,5.647648,-3.893066,9.540574,-0.446166,-8.240031,-1.621617,2.213758,9.263882,-2.719624,-2.329779,1.192389,0.069958,-7.005948,-6.069040,4.500649,3.715952,6.951326,2.215825,-5.863018,3.753078,5.655293,6.181612,-6.828024,7.194829,-3.443099,-6.929688,-9.722590,-7.072161,-0.731007,-2.600953,0.461798,-8.620430,6.482854,4.222321,-3.562288,8.772662,-7.068987,-3.073396,5.417845,-1.731585,1.032192,5.045563,-7.631699,-6.238575,-8.748561,6.761937,9.683847,-7.090725,7.337460,-3.873232,6.007379,5.541075,-0.619386,-0.885751,-0.768605,1.366771,2.597414,5.414294,-8.959009,4.687095,-5.621382,-2.965092,-8.921348,7.356628,7.403145,3.588548,1.723078,-9.223361,-6.351807,2.175270,4.215066,6.022409,3.244544,8.175283,-6.852194,5.096917,5.130853,-1.676867,-7.060671,4.617842,-2.269187,-8.476532,-8.085897,4.699766,-8.499884,8.501442,-5.946512,-5.428726,0.286191,7.495445,-6.168244,4.234555,3.306008,-2.867960,2.872170,0.141827,-6.014332,4.068052,-6.233934,-0.519144,7.245740,1.229645,-7.583179,2.350753,9.418075,8.873348,9.290234,3.829499,9.601600,6.058213,4.803665,-1.319958,-6.882215,-3.231839,-5.330033,8.268091,-4.609066,7.837417,1.224162,2.381435,-7.010694,-8.223250,7.503362,-4.610527,0.525560,0.569220,-8.846411,7.166032,6.358184,2.740860,-0.118414,8.206813,4.319248,6.724285,3.261968,9.936251,9.627098,-9.491438,9.158482,4.553071,-4.217890,-8.751543,-6.927628,4.019910,8.974904,-0.668638,-5.385127,1.945929,-9.241538,-7.032163,3.585053,5.569905,6.891724,5.684024,-9.876275,-9.770158,2.121915,3.268810,-9.481504,7.998875,-2.033832,0.244761,2.998856,-0.378665,8.514208,1.265004,6.896327,2.299379,-5.371767,0.734215,-7.625778,7.795756,-1.209499,2.515158,-4.908948,7.586247,-7.102334,9.927306,3.412041,-6.074092,-9.456635,6.192637,-7.187714,-2.785354,9.932600,-1.484830,9.820111,0.239436,-2.577590,-4.751100,6.589234,1.091000,-8.837378,5.016411,0.982837,-4.112969,4.803073,7.329972,4.776677,1.330641,0.889909,-5.133562,9.957814,8.665721,-3.856091,-2.393227,4.423957,-5.545354,-5.652501,9.025222,4.759607,3.495939,0.355458,-2.574656,9.897481,2.960454,9.741145,2.402530,6.709380,3.317180,5.533000,5.110128,6.514607,-4.607777,4.070807,1.498778,-0.586723,5.545267,9.083566,-7.170919,4.430634,-6.523219,4.053860,-9.453260,-5.109086,-8.146242,5.700558,-8.241516,4.155406,5.632981,-5.774350,3.716862,9.113519,-7.466082,7.562165,1.875879,-8.074242,0.312131,-0.284889,-0.731691,1.037090,-0.450595,-7.560374,-4.012952,4.282253,-7.526313,-8.398494,-1.031367,-1.063313,2.492442,3.150181,2.073865,-6.991711,0.424047,-6.429524,8.255522,8.271520,-4.525976,-0.672055,8.884291,-0.948355,6.520162,-5.902303,7.396449,-1.809880,-7.263623,5.784511,0.964422,-5.674127,-9.489248,-4.622303,5.627125,5.069380,5.592560,-8.474881,-5.300067,-2.980817,9.890122,1.704359,3.240045,6.714816,-8.261509,4.387158,-8.754113,-9.480295,-8.822520,-5.239789,-5.300330,-5.393333,9.955674,2.253633,9.857349,3.860047,-9.189185,9.141123,-2.141785,9.644852,-4.802056,-7.385721,-9.245907,4.020048,4.183526,-0.195503,-9.472284,6.061109,3.253682,1.638322,-3.909454,-4.182926,3.561351,4.151464,-3.588219,-1.369353,5.884634,-0.733128,-8.324915,3.871481,5.142126,4.529558,-7.038284,-0.376743,2.799330,-7.267524,-5.540075,-1.877602,5.556073,-9.613740,-0.220726,-5.202093,2.135290,-4.518891,-9.870554,-0.681460,9.255803,5.339160,-1.088108,-1.718853,4.522299,-5.813111,9.302542,-9.639700,-9.970425,-7.384268,6.612639,-2.890191,5.282171,-0.657182,-1.846222,-5.296995,6.481118,2.009949,2.759323,1.869116,6.960207,-7.494707,8.263202,0.772037,4.654135,-2.101519,-4.693522,-2.347390,2.091292,2.067396,7.630687,-0.820243,-9.007334,-0.849470,4.544742,-1.370644,4.837593,0.195632,6.157824,-5.180925,-7.338970,-8.892338,-6.125269,0.567256,6.265474,9.290692,-0.589304,5.166875,-3.074064,-8.768771,-0.644364,-2.192541,4.522130,-9.850067,-4.117654,-7.288398,6.150234,9.261655,1.978418,-7.562975,9.994900,3.561221,6.769676,-0.138674,-3.348862,1.226859,-3.649941,8.029701,5.006592,-4.270082,-9.885333,-7.963135,6.145745,3.813520,-1.957785,-1.107698,-9.987563,1.449126,-1.874999,9.769747,-6.956328,6.965126,-7.889372,8.633943,-0.728212,5.748272,-5.888123,6.499595,2.177566,-8.070512,-1.682187,1.956254,-5.971618,-6.044636,6.273618,6.111823,-8.682555,-3.118461,6.737130,-8.943371,5.178267,9.559497,8.837269,-0.551325,9.885346,8.382406,1.509248,-8.384992,9.063131,-1.068879,-2.362466,3.900269,0.267209,1.667415,9.964814,-1.571742,9.877551,-2.106058,-8.655971,2.373011,8.468553,0.185777,-1.029241,-8.159297,-2.479645,-9.440289,-5.840906,1.658269,5.601373,0.750758,-0.021541,4.740309,4.641569,4.052199,-2.434734,6.689271,1.917227,-3.863901,0.740389,4.377159,-7.630315,-4.287042,7.017539,-5.685237,9.680849,7.678731,0.688204,3.123557,-0.818492,0.754025,-8.710904,-6.135884,9.761220,0.706836,8.662836,0.656367,-7.414301,2.156276,1.360520,-7.933381,9.910321,9.601785,-0.647686,6.990707,7.512204,-2.283761,3.467174,8.056333,3.532900,1.273563,8.208004,-8.540911,3.655710,-5.195128,6.905466,0.762969,-3.673491,-7.801144,3.262166,-7.255937,-4.686710,-3.177410,6.021837,-5.996926,-3.602257,-7.717558,-1.018519,1.373781,-5.863947,7.066516,-6.835813,-8.556709,3.916963,-8.966575,-8.762886,8.318674,4.735630,-8.534513,0.245604,1.383352,6.424090,1.055048,4.241709,8.596632,-1.509815,1.607351,0.900843,-7.512210,-1.133955,0.179398,9.986732,5.146295,1.891612,3.664835,5.577516,-1.281877,-5.349196], dtype = "float64")#candidate|9265|(605,)|const|float64
call_9262 = relay.TupleGetItem(func_8717_call(relay.reshape(const_9263.astype('int64'), [1300,]), relay.reshape(const_9264.astype('float32'), [825,]), relay.reshape(const_9265.astype('float64'), [605,]), ), 10)
call_9266 = relay.TupleGetItem(func_8721_call(relay.reshape(const_9263.astype('int64'), [1300,]), relay.reshape(const_9264.astype('float32'), [825,]), relay.reshape(const_9265.astype('float64'), [605,]), ), 10)
func_8436_call = mod.get_global_var('func_8436')
func_8439_call = mutated_mod.get_global_var('func_8439')
const_9273 = relay.const([-3,-8,-2,-1,-10,7,-10,4,-8,1,4,-2,2,2,6,-6,2,7,8,-9,1,-8,-1,-3,5,-9,-9,1,4,9,-9,-8,8,-5,3,7,-9,7,7,9,5,-3,8,6,-9,4,10,1,1,-4,-9,10,-6,-10,-8,9,8,8,7,-9,-10,6,-9,8,2,-4,-3,-9,-1,3,7,-3,-5,-10,-6,1,-4,-6,2,2,-5,5,3,6,10,-3,1,-1,-8,9,9,-10,6,7,9,4,-8,-10,10,4,7,-8,-5,5,1,7,-5,-5,2,-9,-1,-5,-1,-1,2,2,7,8,-10,-5,-8,-10,-9,3,7,4,-4,-1,3,5,-9,5,-8,8,-5,-10,-7,-5,7,10,10,4,-3,9,8,3,3,-5,-10,-1,-8,-7,3,-3,-2,6,9,7,6,-9,-2,-4,-2,-7,4,7,-1,6,8,4,-4,-1,-2,-4,4,5,-8,2,9,-2,7,4,-4,10,10,2,-6,-7,-1,9,6,5,4,-4,5,6,3,-10,10,1,-5,4,-5,-4,-1,6,-6,1,-8,-4,1,7,-10,3,6,-2,6,-6,6,-1,-10,4,8,7,10,-1,3,-5,4,7,-1,-2,-4,7,-6,-6,-7,-4,6,3,5,5,1,-5,7,4,8,2,-2,-1,-9,-5,-5,-1,10,-7,9,5,1,4,9,-5,-2,10,-7,-10,-5,-5,4,3,2,-9,1,1,-5,9,1,-2,10,6,-2,-8,-3,-1,-10,1,4,3,5,9,-8,-3,-4,-1,6,4,6,-4,4,4,-10,6,-4,-3,-2,8,-1,-9,3,-1,-7,-6,8,2,5,-6,2,1,10,4,6,-3,2,-4,-10,-5,-10,10,2,10,9,-4,-9,-6,1,-4,-3,-6,7,-9,4,5,-6,4,8,-5,3,5,-6,-2,2,-4,10,-7,9,-5,-1,-9,-5,5,8,-10,9,4,8,-2,1,-3,-3,2,-8,5,5,-8,-8,6,1,8,3,7,7,2,-5,-2,7,2,-9,7,-10,8,8,-5,-10,-10,4,-4,9,10,-1,6,-4,-5,5,1,-7,-5,-1,-3,-1,3,4,-6,-3,9,-7,-10,-3,-6,-7,6,-5,10,-1,-8,9,8,1,6,-8,-6,2,-8,2,-7,-2,-6,4,-5,-10,7,-8,-1,-9,-1,-4,4,4,4,9,-7,-4,9,9,-3,1,-6,-7,6,-6,4,7,-5,-3,8,-10,-4,10,-2,-1,5,9,1,-2,1,-5,7,5,4,3,-10,9,-5,9,-7,4,-2,-5,8,-9,5,-6,-7,-4,-8,5,8,-4,-2,-2,-3,10,1,8,5,8,3,-2,-4,-3,3,-10,1,-6,7,3,6,7,1,5,-7,7,7,-2,6,-3,3,-10,9,1,-3,10,-10,-7,4,-8,-6,-3,-4,4,-10,9,-4,2,-6,-1,-7,-10,-8,9,-8,-5,4,7,-2,-10,-10,8,1,-7,-2,5,7,-6,2,-9,4,7,1,-8,7,-5,-8,-10,10,-5,6,-2,5,8,-5,2,-10,-7,-2,-3,-2,5,1,8,-3,-6,3,1,-7,-7,-5,-2,-7,5,-4,10,5,8,3,9,-9,4,-10,9,-4,-10,7,-4,-2,6,7,4,3,10,-7,9,-4,5,-8,1,-3,2,4,-6,7,4,10,-10,7,-7,10,10,1,-8,-10,-2,2,4,-2,-4,-2,4,6,5,3,10,9,7,-5,-2,4,9,10,3,4,10,8,8,-10,-9,-4,-8,9,5,-8,9,1,-9,-3,-4,2,3,-9,-5,-5,-2,3,3,5,4,-5,7,-2,8,1,-2,-5,4,-9,3,-3,-2,4,8,3,5,6,-5,-10,-4,6,-5,-3,7,6,-6,4,5,5,-1,5,8,10,10,8,-3,1,7,5,-6,3,-1,-3,-7,2,-7,-4,10,10,-3,5,-5,2,-8,8,-9,9,-8,-10,3,2,1,-6,-7,-3,7,8,2,-5,-8,-8,4,9,-2,-6,1,4,2,-4,-6,-3,3,-2,1,7,10,8,-3,-5,-6,-9,-7,-10,10,-1,-9,7,4,-8,1,-6,-9,7,3,-6,-3,7,-5,-10,-3,3,-5,-5,-2,-8,6,-5,10,8,2,-2,8,-6,8,-10,-8,2,-5,-4,10,1,-4,1,-6,7,3,-4,1,-6,7,2,10,9,-3,-4,3,-6,-2,2,6,-8,1,9,-4,-4,10,-6,-2,-6,6,-5,-5,-7,-10,5,-8,-6,-4,2,-2,9,-2,4,10,6,-10,-6,-4,4,-9,1,-1,-8,-3,-5,7,-7,-10,3,-3,-5,-10,9,-1,-7,1,2,6,-9,2,-4,-9,-8,-3,7,9,-8,3,2,-10,8,8,3,10,3,-5,3,-1,3,1,10,3,1,-7,2,2,1,8,4,-10,-1,5,1,4,-9,-3,7,1,4,10,7,3,-4,6,10,6,-10,-5,6,-4,-4,-6,-5,-8,-4,4,-2,3,-2,3,-4,-5,-1,-7,8,4,10,-3,-8,5,-9,5,-10,7,-7,3,-1,-8,-9,-3,-6,-10,-8,3,-6,-10,-7,-8,5,-8,8,-6,2,-5,-8,-9,-5,3,6,9,-4,8,-6,-10,-2,3,-2,10,2,-6,-4,-7,5,-2,7,2,-10,5,-9,-7,3,-2,7,-8,9,-1,10,2,9,-8,-3,8,-3,1,7,-2,6,-5,7,-3,-1,9,-2,7,-3,8,5,3,-8,-9,-4,5,-4,4,8,-8,-10,10,-8,-3,-2,-10,6,7,8,9,7,-2,6,10,3,-3,-5,-7,10,5,-9,-2,-6,9,5,8,1,2,-7,-1,10,-5,7,-9,10,-10,7,-5,1,1,-1,-7,-10,-10,-1,7,-5,6,2,8,9,4,9,1,5,-5,10,1,-9,4,3,1,4,9,-5,2,8,10,-5,-7,-10,9,4,-9,-10,-3,6,1,3,10,1,-2,5,-6,10,3,6,9,9,-3,2,-3,1,-10,6,-4,9,-7,5,-9,9,-6,-1,4,-4,-10,-2,5,-7,-10,5,3,10,-10,-5,2,8,-6,-5,-10,7,7,1,3,-7,2,-6,5,6,1,-4,-3,2,-3,10,-8,-1,6,-7,1,-3,5,1,5,5,7,10,-2,-9,-9,-8,8,2,-3,-5,2,-1,-7,-6,8,-10,-1,-2,3,9,2,1,-9,4,-3,-8,4,3,-2,4,10,-4,4,-3,-9,1,10,-1,-6,-10,-3,5,10,9,-6,-1,-8,-7,-2,9,3,-5,3,-1,-3,9,3,-3,3,4,-8,-6,-3,9,1,9,10,-8,-1,2,-2,-10,-5,10,7,-7,-3,1,6,-9,8,3,-1,-10,10,8,3,8,1,5,-2,-2,5,-8,1,-8,-7,-8,-1,-3,-8,-10,-9,8,6,7,-6,-2,-10,4,10,-4,-4,-7,9,-4,3,10,4,-9,1,-8,-4,-2,1,-10,7,-9,-6,-3,-8,-4,3,-2,-1,-7,8,-1,-6,-7,-8,-9,10,-5,-6,-1,-7,5,8,9,8,-2,-1,-9,6,5,2,9,2,8,6,2,4,-5,7,-2,10,-1,6,8,-5,-6,-5,-3,-10,-8,-2,-10,-10,-1,-9,-1,-4,9,-4,2,8,-8,-2,3,-2,8,1,-2,-3,7,-3,-2,-3,-9,-10,6,-8,4,-7,-1,7,-5,-5,1,-8,-3,-9,10,-10,8,-9,-7,-1,6,-9,9,4,6,10,1,-8,-1,-1,-10,1,10,-6,-8,9,7,10,-6,1,-8,-9,-1,3,-7,-4,-7,7,-8,4,2,-1,-3,-6,-5,-9,7,2,-9,9,-1,-3,1,-4,4,4,-3,-6,6,-5,8,6,4,-3,-2,10,-7,-2,4,-5,3,-6,-4,5,4,-3,-4,10,-4,2,5,-9,-5,-1,6,9,7,10,-6,3,2,4,2,5,-7,4,-1,4,-4,6,1,1,-1,-1,-5,8,-8,-3,-6,-6,7,5,-3,-3,6,-8,7,6,2,4,2,5,4,-10,-8,5,8,-1,-3,-1,6,-7,-3,-10,10,2,-5,2,5,-4,-2,-8,1,5,-6,2,-8,-6,1,5,9,3,-4,-3,-1,-4,6,-5,-1,-10,9,-2,10,-9,3,2,1,6,-2,-6,6,6,-2,-8,3,4,1,-8,-6,-1,1,1,-9,-1,7,-4,7,-4,2,4,1,7,3,-4,4,-8,-1,1,7,2,7,-7,-7,5,-5,3,4,10,7,4,1,6,-2,-1,9,3,9,-2,10,-4,-4,-3,-8,6,8,5,-2,9,-10,-3,2,-4,-7,-7,-2,2,-9,4,9,-3,10,4,10,7,4,8,-7,8,9,-1,-8,8,-9,7,10,4,-7,-1,-2,9,-8,3,-1,9,10,-2,-2,-6,-3,-8,-2,-3,1,-7,2,-2,-7,8,-7,10,5,-6,4,-10,6,10,-10,-8,-8,-7,-3,3,-3,-7,-5], dtype = "int64")#candidate|9273|(1690,)|const|int64
call_9272 = relay.TupleGetItem(func_8436_call(relay.reshape(const_9273.astype('int64'), [1690,])), 0)
call_9274 = relay.TupleGetItem(func_8439_call(relay.reshape(const_9273.astype('int64'), [1690,])), 0)
func_8760_call = mod.get_global_var('func_8760')
func_8761_call = mutated_mod.get_global_var('func_8761')
call_9275 = relay.TupleGetItem(func_8760_call(), 0)
call_9276 = relay.TupleGetItem(func_8761_call(), 0)
func_1110_call = mod.get_global_var('func_1110')
func_1114_call = mutated_mod.get_global_var('func_1114')
const_9288 = relay.const([-8.027083,2.249360,4.665507,4.624480,7.652679,2.085778], dtype = "float64")#candidate|9288|(6,)|const|float64
const_9289 = relay.const([-2.994106,1.577164,8.953778,-3.901953,-0.842266,2.479873,7.291778,-2.038708,8.959099,-1.351005,3.941407,0.822759,1.388414,8.917444,-7.832897,1.992677,7.167683,7.746607,6.243090,-4.741709,-4.632131,8.561009,-2.523279,7.952648,1.902357,2.582643,-6.559435,1.206342,5.309002,-2.345213,9.548750,-6.042113,-3.195924,-0.592732,5.041029,0.351735,-7.024682,5.189341,-8.922914,-0.065572,6.930195,-7.227017,0.363365,9.792684,0.074897,-2.459762,3.208137,1.565121,-0.057827,2.182574,-0.516248,4.094432,4.007598,-0.274428,-5.692337,5.629996,-8.726954,2.096882,-1.512188,-3.969669,-3.795356,-2.859957,1.333532,-2.392483,7.465583,7.986444,-1.809165,-1.793505,-3.875293,-5.165631,-4.827865,-1.550053,7.500962,-7.276234,-4.609970,8.897845,4.911786,-4.445347,9.344688,-5.731577,1.135710,9.698438,-7.061822,6.840718,-5.122099,9.230116,-4.894661,5.758292,5.878374,0.315949,-1.564588,9.724140,-2.206582,-9.568738,-7.628670,5.984324], dtype = "float64")#candidate|9289|(96,)|const|float64
call_9287 = relay.TupleGetItem(func_1110_call(relay.reshape(const_9288.astype('float64'), [1, 3, 2]), relay.reshape(const_9289.astype('float64'), [16, 3, 2]), relay.reshape(const_9265.astype('float64'), [11, 55]), ), 2)
call_9290 = relay.TupleGetItem(func_1114_call(relay.reshape(const_9288.astype('float64'), [1, 3, 2]), relay.reshape(const_9289.astype('float64'), [16, 3, 2]), relay.reshape(const_9265.astype('float64'), [11, 55]), ), 2)
output = relay.Tuple([call_9259,call_9262,const_9263,const_9264,const_9265,call_9272,const_9273,call_9275,call_9287,const_9288,const_9289,])
output2 = relay.Tuple([call_9260,call_9266,const_9263,const_9264,const_9265,call_9274,const_9273,call_9276,call_9290,const_9288,const_9289,])
func_9293 = relay.Function([], output)
mod['func_9293'] = func_9293
mod = relay.transform.InferType()(mod)
mutated_mod['func_9293'] = func_9293
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9293_call = mutated_mod.get_global_var('func_9293')
call_9294 = func_9293_call()
output = call_9294
func_9295 = relay.Function([], output)
mutated_mod['func_9295'] = func_9295
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9293_call = mod.get_global_var('func_9293')
func_9295_call = mutated_mod.get_global_var('func_9295')
call_9301 = relay.TupleGetItem(func_9293_call(), 2)
call_9302 = relay.TupleGetItem(func_9295_call(), 2)
func_8265_call = mod.get_global_var('func_8265')
func_8267_call = mutated_mod.get_global_var('func_8267')
call_9325 = relay.TupleGetItem(func_8265_call(), 0)
call_9326 = relay.TupleGetItem(func_8267_call(), 0)
output = relay.Tuple([call_9301,call_9325,])
output2 = relay.Tuple([call_9302,call_9326,])
func_9339 = relay.Function([], output)
mod['func_9339'] = func_9339
mod = relay.transform.InferType()(mod)
output = func_9339()
func_9340 = relay.Function([], output)
mutated_mod['func_9340'] = func_9340
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8402_call = mod.get_global_var('func_8402')
func_8404_call = mutated_mod.get_global_var('func_8404')
call_9408 = relay.TupleGetItem(func_8402_call(), 0)
call_9409 = relay.TupleGetItem(func_8404_call(), 0)
func_9199_call = mod.get_global_var('func_9199')
func_9200_call = mutated_mod.get_global_var('func_9200')
call_9421 = relay.TupleGetItem(func_9199_call(), 1)
call_9422 = relay.TupleGetItem(func_9200_call(), 1)
func_8965_call = mod.get_global_var('func_8965')
func_8969_call = mutated_mod.get_global_var('func_8969')
const_9436 = relay.const([9,-6,-9,1,9,3,-5,-1,-2,9,-8,8,8,3,8,-3,-8,-3,-2,-2,6,-2,10,3,2,9,-3,-5,-4,-8,-10,9,-2,6,-7,-6,-8,6,-4,10,-3,6,-8,8,-1,4,9,-1,8,-4,-8,7,-1,-5,-2,-10,6,2,7,5,8,1,-5,-10,-2,7,7,7,7,-10,7,-3,-8,-8,-4,-4,4,-10,8,1,6,-9,10,-8,9,5,2,10,2,4,3,-8,3,-4,-10,2,-1,-9,-8,9,9,-5,3,-8,5,2,-1,-3,-10,7,3,8,-4,-6,-7,10,-10,-6,10,9,9,-3,4,5,4,8,5,1,4,-2,4,-9,-8,-1,-1,4,-4,10,-3,-3,-9,2,6,1,-3,-3,4,-5,-6,-1,-9,-9,-3,2,-4,-3,-6,6,10,-4,-10,-4,-8,9,7,3,6,-8,10,5,7,-6,-4,-6,2,9,-8,10,-2,-10,-8,5,-6,3,3,8,5,-4,10,3,-2,6,5,-6,7,-6,-2,1,3,1,-1,7,-5,-6,1,-9,-2,-2,2,-6,5,-4,-4,-2,8,-5,2,-6,1,4,-1,-2,9,-10,2,-10,9,-4,10,9,9,6,4,-2,5,-8,10,-9,-5,-10,4,-4,5,-5,-3,-2,8,8,1,8,6,2,5,-7,-10,-7,-8,-7,-10,9,-7,-8,8,-7,-5,-4,-1,9,8,8,4,2,8,-6,-2,-4,3,-1,9,1,-3,7,3,-1,3,-9], dtype = "uint64")#candidate|9436|(286,)|const|uint64
const_9437 = relay.const([-4.057514,-8.951916,-6.331113,8.363993,1.363154,7.540218,-9.676784,-4.715498,-5.929419,-1.261095,-8.906805,2.274697,3.913620,-2.728258,7.094286,4.882878,3.487513,6.379512,-7.345555,6.878295,2.805924,2.194998,2.862233,-9.789545,-1.549910,0.858907,-6.283069,-8.704254,-6.434851,-3.087168,-2.512667,5.773324,7.824574,5.290245,3.218797,-9.768077,-4.998293,-2.034259,7.848718,3.631775,1.664873,5.411873,7.776973,5.018731,-9.848240,-7.626084,7.057525,-1.385352,-9.014668,-6.461398,-9.682442,7.680478,-5.688473,-9.786901,-1.822942,-8.065751,-3.038008,4.008453,9.976793,2.837456,-9.428343,-8.272194,9.299246,-0.547615,3.349305,1.141773,7.100224,-1.880818,-8.461893,-3.504712,-9.804750,-1.774596,-1.242103,0.422947,-4.369962,3.970906,-2.405146,-6.295949,3.375382,3.411712,-4.872468,-8.495299,4.399447,7.102230,-7.816545,-1.198159,-1.009451,3.672894,-7.887290,2.665405,-4.183532,0.524259,-3.819638,-0.819258,9.171115,-0.030923,1.834143,7.388229,7.357098,-6.779349,-9.886232,3.172509,-3.291556,7.284086,4.112699,3.402147,-4.112448,-4.335327,6.012184,-0.285716,-0.953306,-7.406993,2.917151,8.117773,-4.793738,-2.266952,-9.194026,-1.016239,1.733533,-7.618067], dtype = "float64")#candidate|9437|(120,)|const|float64
var_9438 = relay.var("var_9438", dtype = "float64", shape = (605,))#candidate|9438|(605,)|var|float64
call_9435 = relay.TupleGetItem(func_8965_call(relay.reshape(const_9436.astype('uint64'), [286,]), relay.reshape(const_9437.astype('float64'), [120,]), relay.reshape(var_9438.astype('float64'), [605,]), ), 3)
call_9439 = relay.TupleGetItem(func_8969_call(relay.reshape(const_9436.astype('uint64'), [286,]), relay.reshape(const_9437.astype('float64'), [120,]), relay.reshape(var_9438.astype('float64'), [605,]), ), 3)
output = relay.Tuple([call_9408,call_9421,call_9435,const_9436,const_9437,var_9438,])
output2 = relay.Tuple([call_9409,call_9422,call_9439,const_9436,const_9437,var_9438,])
func_9450 = relay.Function([var_9438,], output)
mod['func_9450'] = func_9450
mod = relay.transform.InferType()(mod)
var_9451 = relay.var("var_9451", dtype = "float64", shape = (605,))#candidate|9451|(605,)|var|float64
output = func_9450(var_9451)
func_9452 = relay.Function([var_9451], output)
mutated_mod['func_9452'] = func_9452
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9199_call = mod.get_global_var('func_9199')
func_9200_call = mutated_mod.get_global_var('func_9200')
call_9456 = relay.TupleGetItem(func_9199_call(), 0)
call_9457 = relay.TupleGetItem(func_9200_call(), 0)
func_8546_call = mod.get_global_var('func_8546')
func_8551_call = mutated_mod.get_global_var('func_8551')
var_9465 = relay.var("var_9465", dtype = "float32", shape = (312,))#candidate|9465|(312,)|var|float32
const_9466 = relay.const([[5,-10,-2,5,-6,10,-8,5,-10,10,9,6,-2,5,-2,-3,-10,-7,-6,10,7,-6,-4,5,-9,-7,9,-2,-10,7,2,10,3,-4,2,-4,1,-3,1,1,1,6,-9,-2,-7,-2,-1,1,-2,6,7,2,-8,-5,3,8,-3,-5,-5,3,8,-3,10,2,6,-3,-7,-3,1,5,7,9,10,-2,1,-8,-3,-7,-2,-2,-8,-5,1,10,-7,8,-8,4,1,4,-3,2,-1,8,9,-6,-6,-1,-9,3,-8,10,7,6,1,-1,-10,10,-1,9,-10,-6,3,7,10,10,10,6,5,3,-9,10,-7,-3,9,-8,-6,-7,-2,1,-4,-2,10,-10,-9,10,-9,-7,9,3,-1,-8,5,-8,-8,3,-9,-6,2,-5,-1,8,3,4,-7,-1,2,-7,-5,-6,-3,6,-5,-4,-8,-7,-2,-9,-2,1,4,10,-3,2,2,-10,-8,-9,-1,-9,10,10,-1,-10,-5,-2,5,2,-9,-4,4,-7,4,-5,-9,-6,10,-4,6,-6,7,10,2,-7,-8,-3,9,-7,6,-8,8,-3,-9,-1,-2,-5,-7,-8,7,-1,8,-9,3,-2,8,1,3,6,2,-8,-6,-1,10,-3,7,-3,-7,-4,6,7,-5,2,4,-9,-5,3,1,-4,5,7,-1,-9,-3,-7,8,-7,-4,-8,-6,7,5,5,-3,-9,6,10,-6,-6,-1,-10,-10,-9,-5,-5,7,4,-1,10,-8,4,-6,-3,-3,-3,-5,3,-9,10,-3,-7,-6,-4,2,2,-4,-5,-1,3,1,-10,9,4,8,-2,-10,3,9,-4,3,2,2,-6,-8,-5,-2,-7,-8,9,-6,1,1,3,-3,-3,-3,-2,2,6,-6,9,7,9,9,-3,10,-3,10,-10,-3,7,-8,10,6,10,-8,10,-6,-3,10,2,-2,10,8,-2,5,-6,-10,-4,4,-8,4,-10,-10,7,-10,9,-1,1,3,10,-5,-2,5,-1,2,3,-9,6,7,9,-2,7,-9,3,-4,-1,-1,1,-1,-7,2,-6,-7,2,6,9,-2,-1,7,-5,9,9,1,8,-2,2,8,-7,-10,7,10,6,-4,-7,1,1,9,1,-10,1,-7,6,-1,-2,-1,9,-7,-5,1,4,-5,-3,-7,-4,5,-10,8,-10,8,10,-1,3,1,10,10,-6,-9,9,3,-4,1,-3,-10,8,4,-9,6,-2,-10,10,6,-4,3,2,9,4,-10,8,9,1,-3,-10,-2,7,7,-9,3,10,9,4,10,7,-7,3,3,1,4,-5,4,-6,9,-3,-1,8,7,-7,10,-10,-10,-2,6,-9,5,-5,-7,-7,8,-1,-5,8,-3,-10,2,-9,-2,5,6,-6,-9,-7,2,5,6,-1,-4,-4,6,1,1,-10,3,-8,-3,-10,-7,-1,5,-1,1,-3,-10,4,-8,-4,5,3,-3,-8,7,-9,7,3,5,4,-3,4,1,-1,-3,9,1,9,-2,10,-7,4,-10,-7,-3,2,-7,1,-6,-8,-7,10,-10,4,6,-3,-7,-8,-6,-2,5,6,4,-1,-10,-9,7,-9,-8,8,8,-6,10,10,8,-6,-9,6,-2,4,-3,10,-2,-6,-1,2,-6,4,2,-4,9,-5,2,2,8,7,8,-3,8,1,-4,1,-3,7,-1,8,-9,-8,6,-7,7,6,-3,6,-8,3,1,-1,-10,-2,7,1,-4,-9,1,5,-1,-1,-1,10,-5,-1,-8,1,-1,7,4,8,-6,-10,-4,-5,7,-3,-5,8,-5,-8,-1,9,3,-4,3,-5,-8,6,-10,-10,8,-5,-4,5,-2,-2,-4,-5,-6,-4,-10,10,5,-1,-8,4,-2,-9,4,8,8,8,-3,-9,-1,-10,3,8,-7,-3,-8,10,-7,-8,6,-8,-8,-4,-7,-9,-5,9,8,-6,-6,9,7,4,2,-9,-2,1,-1,-10,-10,-9,6,3,-5,9,9,5,-1,3,5,-2,-9,4,9,-8,-2,4,-7,4,-7,3,-2,5,1,5,-10,-2,1,6,-1,7,-3,1,-9,2,-7,3,7,-1,3,-4,-4,-1,2,2,-4,-7,1,9,-3,7,7,-7,7,-3,-5,-5,-3,5,6,9,8,8,-3,1,-7,-6,-8,9,3,6,-10,9,7,-9,1,2,-3,1,7,-4,2,-9,2,-6,3,-3,4,6,-7,-8,-2,-10,-3,3,-4,-4,-4,9,-4,-1,10,10,9,7,1,-4,8,-8,-4,-10,-7,-5,9,6,-10,2,2,-3,-8,-7,-8,1,-3,-4,9,5,8,6,-5,-3,-3,4,9,-6,-10,5,4,-3,-5,3,-2,-2,2,10,-4,2,-9,3,-6,4,-2,5,7,2,-8,7,-5,10,9,-5,-2,8,-7,-9,10,10,-2,-9,-4,2,7,-2,2,-10,-10,4,5,-5,-5,-5,6,10,-2,-1,-9,8,4,-10,2,7,-6,5,-7,4,-5,-10,6,-10,-6,-5,-4,2,-5,-4,4,-10,-4,-4,5,4,8,-10,-3,-3,1,-5,4,-3,-2,7,-10,-10,2,-7,3,7,-7,-6,-9,-9,-10,5,4,3,7,-5,7,-1,-7,-5,2,-2,1,9,-8,10,1,-1,5,4,-6,-9,2,9,10,2,8,-3,3,-8,-8,-8,-6,-5,-5,-3,8,1,1,9,-5,-5,4,-3,8,5,-2,7,4,-8,-1,-9,2,8,3,5,8,-3,6,7,-7,-1,9,-6,-10,-3,7,1,-3,1,6,-4,-5,-5,2,6,6,8,-3,-10,3,3,5,-7,3,-4,3,-3,4,-9,2,6,1,7,2,-9,9,3,8,-4,-8,-9,-8,-9,-2,9,-6,-6,-2,-2,-10,-1,3,-5,-4,1,9,4,4,-10,-4,4,7,-6,5,-5,-1,4,-10,4,-7,-5]], dtype = "uint64")#candidate|9466|(1, 1100)|const|uint64
var_9467 = relay.var("var_9467", dtype = "float32", shape = (99,))#candidate|9467|(99,)|var|float32
var_9468 = relay.var("var_9468", dtype = "int64", shape = (169, 10))#candidate|9468|(169, 10)|var|int64
call_9464 = relay.TupleGetItem(func_8546_call(relay.reshape(var_9465.astype('float32'), [312,]), relay.reshape(const_9466.astype('uint64'), [10, 110]), relay.reshape(var_9467.astype('float32'), [11, 9]), relay.reshape(var_9468.astype('int64'), [1690,]), ), 6)
call_9469 = relay.TupleGetItem(func_8551_call(relay.reshape(var_9465.astype('float32'), [312,]), relay.reshape(const_9466.astype('uint64'), [10, 110]), relay.reshape(var_9467.astype('float32'), [11, 9]), relay.reshape(var_9468.astype('int64'), [1690,]), ), 6)
func_5921_call = mod.get_global_var('func_5921')
func_5924_call = mutated_mod.get_global_var('func_5924')
const_9473 = relay.const([6.691764,-7.596579,-2.223960,8.101805,6.573765,0.819285,8.155877,-7.490400,-4.275279,-9.405550,8.924268,6.192452,6.699693,9.451120,-0.168218,3.691020,3.280103,1.182103,-8.783539,6.953095,1.634992,-7.095296,-2.166370,-2.061877,3.040563,6.144595,1.141813,0.390106,1.802594,9.632749,5.039470,-0.951230,-9.728219,0.368043,-7.431268,-1.314797,2.448532,9.698796,-2.877795,7.155152,-4.806607,-5.040816,0.662347,1.112149,-9.305769,-1.942077,1.126995,5.356225,-4.037262,-9.495036,5.789834,-6.688026,1.051785,7.529219,8.588844,6.950238,2.791338,9.988506,-6.424820,-1.519702,0.361429,-6.391646,9.526307,3.540780,-1.918002,-2.973853,-3.192343,6.648025,-0.275555,8.561177,3.101206,-1.991864,-3.587193,0.529408,-7.816964,-9.191156,-8.420213,-5.569295,-6.903026,9.323046,8.933066,-9.698661,-0.115273,7.210149,-6.897425,-3.656354,4.703820,7.656582,-6.675146,-1.246488,-1.390550,-5.967534,-7.843308,-6.669964,-6.274530,0.153000,5.375483,-0.250935,4.807115,8.071575,-9.358708,1.068969,-0.956684,-1.760819,3.207532,7.286705,4.221025,-6.596186,-9.993082,-8.792670,-8.032885,-0.563934,4.365419,2.867780,-6.918303,5.167161,-7.681618,-8.276926,4.909418,4.958937,-5.989990,-7.647621,0.851091,1.964495,5.911741,-6.024178,7.097718,0.703242,6.324399,-9.582440,7.267002,3.406533,-0.947476,-1.080735,-3.723674,1.817729,-6.530775,-6.625962,-7.142352,7.464486,8.241531,-1.549501,-1.684304,8.137401,-5.980072,1.144290,0.847631,-4.808457,7.617936,6.642798,-7.165275,-5.944048,-8.246813,-6.759925,-9.261637,-2.277224,-8.611315,-0.584141,9.899445,-5.943268,3.487609,3.651259,-0.911188,9.669315,2.798579,1.663341,5.155260,-4.662577,-1.066633,-9.471682,9.529251,-3.397875,2.851623,-6.755053,5.450844,7.403923,7.649319,0.642649,-6.698928,0.230008,-6.496022,3.179305,-9.309625,1.863898,0.810622,2.124372,3.679847,-1.864329,-0.955827,3.229459,1.593029,5.997020,8.681398,9.441198,4.412781,6.709850,2.656852,4.289388,6.055658,8.386401,-4.882848,1.850560,-5.652766,9.519716,-3.114692,-6.439584,1.693039,-1.707502,7.465501,-0.992090,-2.408064,-8.306661,-9.470016,4.169096,-0.199772,-2.461615,5.702822,-1.043409,2.863930,2.900983,-6.342708,-9.388924,7.882713,0.082039,-0.025251,0.156799,3.817970,-5.079661,9.416606,8.297253,-7.596607,-2.654762,3.623844,-8.003729,-1.858052,0.957323,0.860872,-2.915475,-6.326109,0.058835,0.001058,-3.736589,-6.289165,5.577112,-4.494327,-3.842032,-9.493715,3.641254,4.325595,1.250220,4.030380,7.141910,-1.819716,0.151088,6.356322,1.981064,3.767720,6.069907,-8.777242,0.554885,-7.667411,-9.991273,-9.766325,-7.396815,3.916869,-8.650269,-1.204861,9.094598,6.390097,-1.771250,-1.825819,-9.393536,2.302616,3.654342,-1.670661,-2.976352,-8.634402,3.748166,-7.273208,2.271768,9.012040,-7.950968,9.527509,-7.489462,-5.217702,3.086738,-9.208374,-8.457613,0.469949,-7.524173,-6.013985,-6.121024,7.664848,-1.213511,-8.281936,4.036127,0.747157,0.672192,8.034360,1.726096,-3.326973,-8.430655,-9.983949,-3.390268,0.903264,4.920352,-5.868316,-3.153222,-3.448738,3.385830,-3.884133,-1.199084,7.535514,-2.050746,-4.851492,-5.243595,-8.652971,1.483699,-9.982411,2.658401,-8.818058,5.895938,-6.489919,-1.097990,-0.148649,7.083908,-0.417996,-3.839137,-5.788550,2.981588,6.076495,8.991710,-8.960826,-7.631488,9.282262,-8.008648,5.210169,-7.354935,-5.881328,-7.482437,-1.064293,9.307641,3.684774,-3.782297,9.540831,-2.779280,-4.189841,-7.168940,8.689811,8.708046,-2.814096,-4.334547,9.428471,-4.673722,-9.461017,0.738988,-7.504303,5.033538,-8.593376,6.205295,7.129015,-6.189797,-1.947786,4.957673,-1.568227,-8.575987,-4.069783,-7.659340,3.827585,7.581816,8.895931,-9.205384,-2.639226,8.528791,-7.723398,-2.583634,7.630396,6.135554,6.150145,6.613978,6.384261,6.140196,-1.113805,2.973139,-7.626804,2.036577,8.510951,7.353234,-3.365873,0.689505,-6.283295,-4.460226,-3.386346,8.188584,-3.290802,8.993402,-0.941113,-2.163127,-7.911427,-0.537284,-0.849597,-9.586067,5.653215,2.225680,1.241864,-9.811029,-6.396534,7.705773,-3.079737,5.348927,5.866439,-9.184102,6.807651,-3.109570,3.226143,-4.862742,9.173222,8.417181,-8.396391,-8.019253], dtype = "float32")#candidate|9473|(420,)|const|float32
call_9472 = relay.TupleGetItem(func_5921_call(relay.reshape(const_9473.astype('float32'), [14, 10, 3])), 0)
call_9474 = relay.TupleGetItem(func_5924_call(relay.reshape(const_9473.astype('float32'), [14, 10, 3])), 0)
func_9293_call = mod.get_global_var('func_9293')
func_9295_call = mutated_mod.get_global_var('func_9295')
call_9487 = relay.TupleGetItem(func_9293_call(), 7)
call_9488 = relay.TupleGetItem(func_9295_call(), 7)
output = relay.Tuple([call_9456,call_9464,var_9465,const_9466,var_9467,var_9468,call_9472,const_9473,call_9487,])
output2 = relay.Tuple([call_9457,call_9469,var_9465,const_9466,var_9467,var_9468,call_9474,const_9473,call_9488,])
func_9489 = relay.Function([var_9465,var_9467,var_9468,], output)
mod['func_9489'] = func_9489
mod = relay.transform.InferType()(mod)
var_9490 = relay.var("var_9490", dtype = "float32", shape = (312,))#candidate|9490|(312,)|var|float32
var_9491 = relay.var("var_9491", dtype = "float32", shape = (99,))#candidate|9491|(99,)|var|float32
var_9492 = relay.var("var_9492", dtype = "int64", shape = (169, 10))#candidate|9492|(169, 10)|var|int64
output = func_9489(var_9490,var_9491,var_9492,)
func_9493 = relay.Function([var_9490,var_9491,var_9492,], output)
mutated_mod['func_9493'] = func_9493
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9132_call = mod.get_global_var('func_9132')
func_9133_call = mutated_mod.get_global_var('func_9133')
call_9504 = relay.TupleGetItem(func_9132_call(), 0)
call_9505 = relay.TupleGetItem(func_9133_call(), 0)
func_4499_call = mod.get_global_var('func_4499')
func_4503_call = mutated_mod.get_global_var('func_4503')
var_9509 = relay.var("var_9509", dtype = "int64", shape = ())#candidate|9509|()|var|int64
const_9510 = relay.const([[-9,2,4,3,-7,1,3,-5,-1,-3,4,-3,-1,-9,-4,-1,-6,10,-8,4,-7,-9,2,-1,-7,-7,-10,-9,5,-1,3,-6,7,-6,7,4,-6,-4,7,3,-4,4,1,7,1,6,2,-2,-8,-5,10,-8,-2,-5,10,2,-8,-5,10,-4,-10,7,-4,2,-5,6,-6,-2,-7,-7,2,-8,-6,9,5,-8,-8,8,2,-4,6,-4,4,-1,10,-7,-7,-5,10,-8,-9,-1,-9,-9,-10,10,4,-8,-10,9,-9,4,-3,-7,-3,7,9,-1,8,1,-4,4,5,-6,3,4,-4,-7,9,10,-9,6,-5,-10,8,9,-4,-9,6,-5,3,-2,10,-7,-3,1,-2,-2,3,-9,5,2,-2,-8],[8,-9,3,-1,-1,1,3,-6,8,-5,-3,-1,-4,-6,6,5,9,7,5,6,4,10,7,6,5,6,4,6,2,4,-8,-2,-5,1,-6,-6,4,10,1,7,-5,-3,2,-9,-3,-4,4,-10,-4,-8,9,1,-9,5,6,5,-8,-2,-10,-7,-6,6,7,-8,6,-1,2,-6,-4,-1,4,-2,8,3,5,-3,-8,-10,2,8,-3,-2,-3,-6,-1,5,-4,-8,-1,2,-2,8,3,-7,-5,4,-3,5,-5,3,9,-3,-7,7,3,-5,-6,7,10,-6,-6,-2,-9,5,9,9,-7,1,3,-1,9,3,10,5,-1,-4,-3,8,-7,-5,-4,-2,-9,5,3,10,4,9,3,-6,7,5,-8,4],[-7,-2,5,2,-9,6,2,7,-9,-10,10,-9,5,9,-7,1,-1,-5,-6,-8,3,-10,10,-9,-2,3,4,-1,4,-6,-2,-6,-9,7,9,2,-1,-7,10,2,-6,5,5,-10,-5,-1,-3,-10,-10,-10,4,1,6,8,3,-1,-5,10,4,10,-8,6,9,-6,5,-8,-9,6,-6,-3,-4,-9,-1,-10,10,-4,-4,10,8,-4,1,4,2,5,-6,-8,-5,1,5,2,-1,4,9,-9,-9,2,7,-9,-7,7,-5,6,-4,-7,-8,4,5,7,9,5,-8,-7,-4,-4,-1,8,9,-9,1,-2,4,10,-4,-7,2,-3,8,7,-6,-7,-5,-6,-9,7,-10,-10,-7,-6,-9,5,5,-4,-10,7],[6,-7,-8,-7,-10,8,-5,4,1,4,3,9,-1,-10,-6,9,10,-4,10,7,6,-10,2,-7,-6,-2,2,6,6,6,-5,-5,2,-5,-1,-4,6,1,10,2,9,-2,5,6,-5,5,-9,7,10,-6,4,7,6,1,-6,-9,-7,5,10,-5,-6,-7,9,-6,5,9,4,1,-3,-5,7,3,-4,8,-2,10,-1,2,-10,10,-10,7,6,3,2,10,1,-3,-4,10,-2,-5,-9,7,-5,7,8,9,-3,3,2,7,7,-8,-1,-6,-9,9,7,-7,3,-8,-7,-4,1,8,-1,7,-4,-10,3,9,-6,-10,-4,-5,-1,9,2,-10,1,6,-2,-1,-8,-1,-8,3,-9,-8,1,10,-8,2],[2,-1,-2,6,-2,10,9,-8,-2,-2,-3,-5,-6,6,6,2,-2,3,-3,-7,10,-2,-9,-8,1,-5,2,9,-5,-2,5,-10,-10,-10,-2,6,4,-10,8,5,10,4,-10,-10,7,5,-7,-8,8,7,-5,-3,-1,-4,-5,-8,9,-4,2,3,7,1,4,8,9,5,8,-5,-3,10,7,10,8,4,-2,-1,-6,-1,-4,-2,6,-7,5,5,-2,-5,-3,-7,-3,-2,8,3,6,4,-5,-2,-4,-5,-2,9,7,3,1,2,-10,8,-10,4,5,7,-4,10,6,9,8,-2,-1,7,-4,7,-7,-6,6,-2,-7,2,6,1,7,-1,-7,-2,-9,-10,9,-9,-4,1,4,-2,4,2,6,-3],[-3,-6,9,-9,-6,-1,8,-1,-4,2,-8,9,-8,4,-4,7,-3,-6,-2,1,3,4,2,4,10,4,-2,-1,-1,6,-2,-3,-5,-7,3,4,-2,9,-6,9,-9,-3,3,-1,9,-2,-10,7,-5,4,-4,5,-9,-7,-9,8,-9,-9,6,-9,-9,9,-7,5,-1,-1,9,9,2,10,4,7,2,-6,-8,-5,-9,8,-1,9,4,-4,-5,9,-1,-7,9,-6,4,1,-10,-10,-1,4,-3,-3,-10,8,-2,-3,7,5,5,-9,5,2,-6,-4,-3,8,-9,1,-10,7,7,2,-9,4,-10,7,-2,-3,-3,5,3,-10,-6,4,-3,7,-10,-5,-8,6,-1,5,2,-10,-5,9,-10,-4,3,4],[8,5,2,8,-1,10,-7,-5,-5,4,-2,9,3,10,-1,1,6,9,7,6,4,-2,-2,-2,4,8,8,-9,3,4,-2,5,-10,-3,-4,7,-8,-2,7,-9,7,-6,5,5,-5,-1,-5,-6,-1,-4,-2,4,9,10,10,-7,-5,2,-10,-7,8,-3,-4,-8,10,1,-2,-9,3,-8,-9,9,-10,7,10,7,3,10,9,-4,9,-8,-2,-5,8,-7,-10,4,-9,-2,-4,8,-6,-5,-10,3,-4,-2,10,9,-1,-7,-3,1,-10,3,-9,-1,3,2,-5,-3,-6,5,-2,-5,1,6,-3,-7,9,8,3,6,5,9,3,-9,7,-8,-8,-4,5,6,6,-4,5,4,1,-6,-8,-10,-9,3],[-5,-6,3,4,1,-7,-3,-3,-3,8,7,-4,-1,7,3,5,-10,-1,-1,1,6,9,9,10,9,7,4,-2,-6,-6,-10,5,1,10,-2,6,-1,7,-8,-3,7,-4,3,-9,-6,6,-5,5,8,10,8,-9,-2,10,-5,9,-3,6,-1,-5,-9,3,3,-2,5,4,-9,-4,-9,-2,-5,8,-6,-6,-9,-3,1,4,6,-8,7,6,-2,6,-3,6,9,-10,10,9,-6,-10,2,4,10,-1,-3,-3,-7,6,7,-2,8,1,-7,-7,-7,-3,-3,-9,8,-9,8,7,3,7,-7,-6,10,-5,8,-1,1,3,10,6,-1,10,9,5,3,1,1,-7,5,-8,-5,9,1,-9,-4,-1,-10,-6],[-8,-10,-5,3,6,-8,3,5,3,4,-6,6,-8,8,-8,6,7,9,6,-9,3,5,-1,5,-4,1,2,1,4,7,-4,-8,-10,3,10,-10,9,-10,-6,8,4,2,-7,-7,4,3,-10,1,9,-5,7,-9,-1,-9,-3,-8,4,-4,-7,-2,-6,1,7,5,-7,2,-8,-10,-1,7,-6,1,-7,1,-8,4,-9,2,-6,-1,-9,-7,-5,5,8,9,7,1,7,-7,-8,-2,6,4,-3,5,7,1,10,7,-10,-1,-8,-10,-6,-1,5,-3,7,3,10,4,-3,-9,-10,3,3,-4,4,-8,-2,7,4,8,-5,3,-10,-5,9,8,-2,-9,2,-10,9,9,8,-9,-7,-6,-2,10,-6,-7],[-2,-6,3,-3,-1,3,8,-1,9,-9,-1,-1,-3,-4,-7,-6,5,5,-9,3,1,10,-10,-8,-3,7,1,6,8,-5,-3,6,-4,6,-1,-3,-8,4,4,-9,8,-2,6,4,-9,1,-1,2,9,-1,8,5,-7,-4,-10,9,-2,6,8,-10,-1,3,-7,9,2,8,-4,-5,-1,-1,5,6,10,3,-4,-8,-5,8,3,-10,7,-6,3,3,2,3,-5,-7,5,-4,-5,5,-3,-4,10,3,3,8,3,-8,-7,-4,-1,7,1,4,-6,-5,-2,9,-4,1,4,-3,-3,1,3,-10,6,-2,-1,-2,7,-7,-8,-3,9,-10,-5,9,6,-6,5,7,5,8,-6,-10,10,4,-4,-8,10,7]], dtype = "int64")#candidate|9510|(10, 144)|const|int64
call_9508 = func_4499_call(relay.reshape(var_9509.astype('int64'), []), relay.reshape(const_9510.astype('int64'), [12, 8, 15]), )
call_9511 = func_4499_call(relay.reshape(var_9509.astype('int64'), []), relay.reshape(const_9510.astype('int64'), [12, 8, 15]), )
func_9132_call = mod.get_global_var('func_9132')
func_9133_call = mutated_mod.get_global_var('func_9133')
call_9512 = relay.TupleGetItem(func_9132_call(), 0)
call_9513 = relay.TupleGetItem(func_9133_call(), 0)
func_8546_call = mod.get_global_var('func_8546')
func_8551_call = mutated_mod.get_global_var('func_8551')
var_9524 = relay.var("var_9524", dtype = "float32", shape = (78, 4))#candidate|9524|(78, 4)|var|float32
var_9525 = relay.var("var_9525", dtype = "uint64", shape = (1100,))#candidate|9525|(1100,)|var|uint64
var_9526 = relay.var("var_9526", dtype = "float32", shape = (99,))#candidate|9526|(99,)|var|float32
const_9527 = relay.const([8,-2,5,4,-6,2,7,2,-8,10,-2,-8,-3,8,8,2,1,9,-8,9,-9,3,-10,-2,1,-8,-1,1,5,-9,-5,9,5,-1,-10,-8,-3,7,-7,2,2,-2,6,-9,3,6,-9,5,2,6,6,10,-6,-3,-5,2,6,-10,-7,5,-7,9,3,-7,-2,6,-8,9,3,-6,6,-8,1,-5,7,10,1,1,5,-1,-2,7,3,-3,-8,5,-6,-8,-10,-7,5,4,-9,1,2,1,9,1,3,-6,-2,5,-5,7,8,-4,-3,8,-3,6,-1,7,-4,-9,2,-10,-8,2,-7,-1,-5,7,-3,-10,4,-2,-2,2,-9,4,10,-8,8,2,-1,2,7,-5,-4,9,-10,2,3,-7,7,-6,5,5,-5,1,-1,-3,-2,-3,3,6,-6,-7,-2,-1,-8,-8,-10,6,-4,-1,-10,7,5,10,-1,-3,-5,-6,-5,-8,4,5,10,9,-8,1,7,4,8,-9,-10,-8,1,2,10,6,-7,-8,-2,-3,9,2,3,-7,-10,2,7,5,-1,-3,-8,-7,-1,3,3,-6,3,-10,4,7,-4,-1,8,-10,-4,2,-3,8,3,9,-9,-2,-3,-9,2,8,-7,-8,9,-4,2,-7,-4,-10,8,6,-4,-2,-3,-3,-8,-2,4,-10,9,-7,9,-7,-9,-3,-8,-4,7,1,-6,-4,9,-1,-5,7,-4,-4,-6,-7,10,2,9,4,2,8,4,-6,10,-8,-6,-9,-9,5,-4,2,4,-3,2,1,-5,-5,10,1,-7,-5,6,-7,-4,2,-7,-3,-2,4,-8,-9,-3,-9,4,-3,1,-5,-9,-1,5,3,2,2,6,8,-2,-6,-1,-8,-7,7,-6,-4,-7,9,2,3,-10,8,5,-10,2,2,3,8,10,9,-8,-10,-9,6,-1,-7,-5,8,10,-7,-6,-6,10,8,-7,-5,-9,9,-3,3,-3,-6,-3,10,-2,6,7,-6,5,-6,-10,-9,-5,-1,3,-4,-2,7,-5,-1,-6,-7,-10,-2,7,-9,-9,8,-7,2,-10,-6,-7,10,-2,10,-9,-2,10,-3,-4,-7,-1,4,-3,7,3,8,6,1,-8,-5,8,5,3,-8,-2,-9,10,-2,2,-8,3,-4,-5,-7,5,-9,1,-4,6,3,-7,-3,-8,1,4,-4,7,-8,-2,-5,-6,2,10,4,-8,-6,-9,-1,5,6,1,-8,5,-9,8,-4,10,-4,1,-8,4,1,2,8,-4,-7,-4,3,9,-6,8,3,-7,-8,-4,-5,-8,-2,10,8,-4,-9,1,8,6,9,6,-1,1,-1,-4,3,-3,-4,7,-7,8,9,-9,-9,5,-8,10,-5,-9,-5,-3,6,-5,8,-6,-3,2,6,-3,6,-5,-8,-6,-5,9,9,-2,7,9,9,4,-10,8,-8,10,-8,10,9,10,2,-8,1,-8,-9,-8,10,2,8,7,2,2,4,7,10,1,-7,3,-9,8,7,6,-8,9,-10,-4,6,2,9,-5,-7,1,5,1,4,-4,7,-8,10,-3,-8,5,-2,-5,-4,-10,-7,4,4,8,7,6,-1,1,4,4,-2,5,5,4,10,-2,-6,1,-4,-5,2,-6,-8,6,10,5,8,5,1,3,-7,10,-1,-1,-1,-5,8,8,8,-9,4,2,3,7,1,5,5,1,-8,1,9,-2,9,2,-6,10,4,-3,-3,10,10,-4,-3,-1,7,10,-9,-2,4,8,6,9,-1,-6,-3,-10,4,-6,-9,5,10,-10,10,9,-8,4,-6,2,5,2,6,1,-6,-6,5,-10,9,-3,-4,2,1,5,-9,5,-7,-4,-2,3,-1,2,-8,-10,-2,5,7,-7,-3,6,-9,10,1,-7,8,-1,-6,-4,5,3,-6,3,-8,-2,1,5,-2,-4,-10,5,2,8,1,4,3,-3,-8,4,5,6,-7,-5,-7,-3,-1,-4,6,-1,-3,3,4,7,-10,-5,9,2,2,5,8,6,-8,-2,-4,1,10,5,8,6,-5,3,-2,-9,2,-6,4,10,6,-6,7,-8,-1,-10,7,9,9,-7,8,-7,-2,1,-9,-7,4,-5,-3,9,8,-5,7,6,-7,-9,10,7,1,7,-10,-4,8,-7,-2,4,-8,-4,2,-3,4,-6,-7,6,1,-9,8,5,-1,-8,1,-3,-1,-5,9,-6,9,-7,2,-6,7,-4,-9,2,1,4,-1,2,6,-9,-7,-7,-4,5,-8,-1,-6,-9,-3,-4,-8,-8,-7,-3,8,-7,-4,3,9,-5,9,-9,10,2,8,10,6,4,-8,8,6,3,10,-7,-4,-5,10,-1,-3,-4,9,-6,1,10,-7,-7,6,3,8,6,-6,-6,-8,-7,-10,-3,-6,-5,8,-6,4,8,-5,-7,-4,-4,5,-5,9,-3,4,7,4,6,-7,-7,-8,-2,-9,-6,1,3,2,-8,-1,-7,8,4,-5,-4,-7,-7,9,9,-8,8,7,-7,1,-9,8,-7,1,8,6,-2,4,-7,7,-8,-3,8,10,-8,-1,-3,-4,-5,4,2,-5,10,-2,-2,-2,-7,9,-4,9,1,-10,10,5,-8,-9,8,5,-5,4,7,10,-3,-9,9,9,-9,4,-3,-5,7,-9,9,-2,2,-4,6,-3,4,-5,2,-4,-3,10,-7,-6,10,9,1,6,1,-2,-5,-5,-9,-3,-4,-3,5,-4,-2,-7,8,-2,9,-2,-7,5,-9,2,-1,-2,1,-2,1,-9,8,5,-1,-3,-2,-9,9,-2,6,-10,-10,10,8,-10,-9,3,-4,-3,3,3,3,6,-8,2,-6,-9,-3,-10,2,-1,10,10,2,8,9,3,-5,-4,9,7,8,-2,6,3,1,-10,-10,4,6,-5,5,-7,-7,3,8,-3,-7,-1,-6,-2,-10,7,-5,-10,-5,5,5,10,4,-1,-5,-3,7,7,10,-10,4,-2,2,-9,9,7,-8,9,4,8,-4,4,-7,-5,-8,9,6,-10,-3,5,5,-7,1,-8,-8,4,9,3,7,-5,5,-9,-3,-9,-10,-10,6,-9,-5,-2,3,-3,2,-10,-6,-5,7,1,-5,-10,-5,-9,8,-8,4,8,-5,-2,8,7,-7,4,8,-7,8,-7,6,3,-3,10,10,7,-8,-2,2,-8,-4,4,8,5,9,-8,-6,-10,2,8,-8,7,5,10,-7,-8,-3,-2,-6,-8,9,-1,-8,5,2,4,-10,4,8,-5,-6,-7,7,-9,-6,-9,10,-3,-10,-10,4,2,3,-9,2,6,-7,5,2,-1,9,-7,-10,9,1,-4,-3,6,2,5,-1,2,-5,4,-10,-10,-4,2,-7,6,2,10,-4,-9,6,-10,6,3,-8,-1,-1,-9,-7,-9,-4,10,-2,-9,-1,-5,-4,-1,9,-2,-2,-7,-3,10,-7,-4,-3,-7,7,5,4,-4,-7,9,-1,-2,5,8,8,-9,6,-6,-10,-5,-10,-4,10,-3,2,-2,-4,-6,8,8,-1,-10,2,7,10,-8,2,-3,9,1,7,-2,2,9,-1,3,-5,8,-9,-9,9,-9,9,-5,-9,8,2,8,-10,-3,3,-3,-10,-8,-8,-8,-6,7,-1,2,9,-6,3,-6,-1,4,-6,4,9,-5,-3,-3,-1,2,3,2,7,-4,3,3,-10,8,3,-3,8,-9,-4,7,3,9,-5,-7,-10,3,2,5,-3,9,7,-6,10,5,6,-9,-3,-4,-9,3,3,-1,3,6,-1,10,4,6,-1,-10,-4,7,-9,-8,-1,8,-8,-8,8,-5,-6,-8,2,6,4,-2,7,8,10,4,6,7,4,-4,-7,1,5,4,5,1,-10,-10,2,-2,-1,-6,-2,-2,8,9,7,9,-1,-1,4,6,7,-10,-3,3,-1,-2,2,1,9,5,10,-10,-6,-7,-3,6,-10,-8,9,4,10,6,9,-4,-7,-4,1,-10,-3,9,2,7,-10,-3,-8,-2,5,4,5,-2,-5,1,-10,-2,8,10,-7,-9,4,9,-1,2,-10,9,2,-10,-8,4,-10,1,-10,-7,10,3,10,-5,2,6,-6,7,-6,7,-8,2,-7,-5,5,-3,7,-8,7,-9,-5,-1,10,8,-5,-2,8,-10,-8,-2,-6,-8,1,2,-1,7,6,6,-5,5,-3,-4,10,6,10,1,-2,-1,-4,3,5,-3,7,8,6,-6,10,-8,6,8,-3,-2,-7,10,-5,9,2,-3,-1,-10,4,-6,8,7,-9,9,-6,-8,3,4,-10,10,-5,10,-3,3,-8,6,-4,-9,-9,-4,9,-8,2,10,7,6,4,7,8,-9,-10,4,7,6,2,-1,-4,3,10,-7,-5,10,9,-9,9,3,10,-1,1,-2,-7,-3,-1,6,10,-10,-4,-6,-8,-10,-10,4,2,-8,-5,5,-3,-3,-5,-10,2,-9,10,1,-10,-7,-6,10,-8,-1,9,5,4,-8,8,-1,-8,7,8,10,-9,-6,-9,2,-7,2,-9,-9], dtype = "int64")#candidate|9527|(1690,)|const|int64
call_9523 = relay.TupleGetItem(func_8546_call(relay.reshape(var_9524.astype('float32'), [312,]), relay.reshape(var_9525.astype('uint64'), [10, 110]), relay.reshape(var_9526.astype('float32'), [11, 9]), relay.reshape(const_9527.astype('int64'), [1690,]), ), 2)
call_9528 = relay.TupleGetItem(func_8551_call(relay.reshape(var_9524.astype('float32'), [312,]), relay.reshape(var_9525.astype('uint64'), [10, 110]), relay.reshape(var_9526.astype('float32'), [11, 9]), relay.reshape(const_9527.astype('int64'), [1690,]), ), 2)
output = relay.Tuple([call_9504,call_9508,var_9509,const_9510,call_9512,call_9523,var_9524,var_9525,var_9526,const_9527,])
output2 = relay.Tuple([call_9505,call_9511,var_9509,const_9510,call_9513,call_9528,var_9524,var_9525,var_9526,const_9527,])
func_9534 = relay.Function([var_9509,var_9524,var_9525,var_9526,], output)
mod['func_9534'] = func_9534
mod = relay.transform.InferType()(mod)
mutated_mod['func_9534'] = func_9534
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9534_call = mutated_mod.get_global_var('func_9534')
var_9536 = relay.var("var_9536", dtype = "int64", shape = ())#candidate|9536|()|var|int64
var_9537 = relay.var("var_9537", dtype = "float32", shape = (78, 4))#candidate|9537|(78, 4)|var|float32
var_9538 = relay.var("var_9538", dtype = "uint64", shape = (1100,))#candidate|9538|(1100,)|var|uint64
var_9539 = relay.var("var_9539", dtype = "float32", shape = (99,))#candidate|9539|(99,)|var|float32
call_9535 = func_9534_call(var_9536,var_9537,var_9538,var_9539,)
output = call_9535
func_9540 = relay.Function([var_9536,var_9537,var_9538,var_9539,], output)
mutated_mod['func_9540'] = func_9540
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9561 = relay.var("var_9561", dtype = "float64", shape = (1, 4, 3))#candidate|9561|(1, 4, 3)|var|float64
uop_9562 = relay.atan(var_9561.astype('float64')) # shape=(1, 4, 3)
output = relay.Tuple([uop_9562,])
output2 = relay.Tuple([uop_9562,])
func_9564 = relay.Function([var_9561,], output)
mod['func_9564'] = func_9564
mod = relay.transform.InferType()(mod)
mutated_mod['func_9564'] = func_9564
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9565 = relay.var("var_9565", dtype = "float64", shape = (1, 4, 3))#candidate|9565|(1, 4, 3)|var|float64
func_9564_call = mutated_mod.get_global_var('func_9564')
call_9566 = func_9564_call(var_9565)
output = call_9566
func_9567 = relay.Function([var_9565], output)
mutated_mod['func_9567'] = func_9567
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9132_call = mod.get_global_var('func_9132')
func_9133_call = mutated_mod.get_global_var('func_9133')
call_9591 = relay.TupleGetItem(func_9132_call(), 0)
call_9592 = relay.TupleGetItem(func_9133_call(), 0)
func_3786_call = mod.get_global_var('func_3786')
func_3789_call = mutated_mod.get_global_var('func_3789')
var_9597 = relay.var("var_9597", dtype = "float64", shape = (50,))#candidate|9597|(50,)|var|float64
call_9596 = func_3786_call(relay.reshape(var_9597.astype('float64'), [5, 2, 5]))
call_9598 = func_3786_call(relay.reshape(var_9597.astype('float64'), [5, 2, 5]))
func_4004_call = mod.get_global_var('func_4004')
func_4007_call = mutated_mod.get_global_var('func_4007')
const_9617 = relay.const([[6,-2,-4,-2,-6,1,-10,3,6,2,-6,9,4,-9],[-3,-10,6,-2,6,7,1,-9,6,-5,-6,2,-3,3],[8,-4,6,-10,7,5,7,5,-3,-9,6,3,2,8],[-6,-3,-3,-3,-2,-3,4,2,3,1,10,5,5,10],[1,3,6,-2,-6,10,-10,8,-3,7,-6,2,-8,3],[-4,1,10,-5,-1,-7,-3,-6,10,-9,4,10,4,-7],[-8,-6,-7,6,-10,-6,-7,9,-10,5,8,-6,1,2],[8,10,4,-6,2,8,4,-4,-9,-3,7,-10,3,7],[1,-1,-3,-3,-8,7,3,-1,-1,8,-7,8,8,-7],[5,-6,5,5,2,-6,9,10,1,6,8,2,4,7],[10,-4,-2,-1,-2,7,-6,-4,-4,-4,-6,9,-4,-9],[-2,10,-2,9,9,-1,8,-2,-8,-9,1,-9,6,10],[8,-8,-8,2,-5,4,-3,-4,2,5,-4,-6,10,1],[5,7,3,-6,6,-10,1,6,8,4,5,4,6,4],[7,-3,9,8,5,-2,1,3,-6,7,6,6,1,-3],[-9,-6,-2,-9,-8,10,8,-6,4,5,6,-3,-3,6],[-8,2,5,6,-6,-8,-1,-10,2,1,3,3,-6,-2],[5,3,-8,-3,-3,-2,-5,5,-1,-4,-9,9,1,-9],[-10,5,2,1,5,5,-4,-8,9,2,6,-3,2,-5],[5,9,-7,-1,4,-9,7,-8,-2,9,-10,3,8,1],[9,-3,3,10,-6,-9,4,-9,5,-1,4,10,10,9],[3,-7,9,-9,-2,2,-1,-8,10,-5,3,-4,5,-10],[-1,-2,-3,7,1,-2,-4,-10,-5,9,6,-4,9,7],[-4,-8,7,7,2,-2,9,-7,10,7,6,5,-9,10],[-7,-1,-3,5,-10,-2,8,5,-1,2,2,9,5,-9],[-10,-4,7,9,-6,-1,-1,-1,8,8,-10,1,10,-9],[3,-1,10,-2,-3,-6,7,7,2,-9,-6,2,-9,-8],[-4,-4,-9,-9,-10,-4,4,-2,-9,1,9,-4,6,2],[10,4,9,10,-5,-4,2,10,10,-8,-2,-10,8,-5],[9,-2,7,4,6,-3,5,-7,-7,-4,8,-4,1,-1],[-8,-5,-6,-8,3,-3,8,-1,3,-1,-3,-7,-6,-1],[-5,-6,-3,-1,-10,-5,3,-3,4,-5,9,7,-8,5],[7,1,-2,-6,9,-5,-8,-1,8,1,7,-9,1,-10],[-2,3,5,-3,10,-2,-7,-6,-1,4,-1,1,3,6],[-10,5,3,3,-1,-5,-6,-1,-7,-5,-4,-8,-8,-4],[-1,-6,-7,2,8,-8,-2,3,-9,10,-1,-2,6,1],[9,6,4,-10,3,-10,9,-4,-10,-8,9,-5,-5,-5],[-9,4,2,1,-1,8,4,7,-6,6,-7,-7,4,-7],[10,-7,-8,10,-10,5,-1,7,3,-9,-6,4,-1,10],[-2,-4,8,-3,4,-6,4,8,-6,-1,3,-7,6,2],[4,-3,-8,-1,8,-3,-7,9,-10,-7,5,5,-7,-7],[-6,10,-3,-6,-10,7,1,2,-9,-9,9,-7,-1,10],[-7,-1,-6,-10,-6,9,-3,3,8,-10,-8,10,-5,2],[1,6,-9,-2,-9,-5,9,10,2,-4,1,-9,-4,-6],[8,-7,-2,-9,-3,7,3,9,-5,4,2,-8,-3,-4],[6,8,-10,4,-9,2,-6,-3,10,-3,-1,-2,6,-8],[9,-9,-3,-10,1,2,9,-1,-4,3,6,-1,-4,2],[5,10,3,8,6,7,-1,9,-5,-4,7,-3,5,2],[8,-1,5,6,1,-1,3,-6,9,4,-6,-2,-8,-5],[-2,-4,10,-5,7,2,7,-6,-3,5,-8,5,7,-4],[-4,-10,8,9,9,5,-5,-3,10,3,2,3,-6,3],[-8,2,7,-10,-6,-5,3,1,6,-10,-5,-8,-10,-6],[-1,-2,7,-3,-6,9,2,-6,-3,2,-3,6,7,5],[-6,6,2,-8,-1,-3,-4,8,-8,2,1,1,-8,2],[-10,5,-9,-3,6,-2,-2,4,9,3,-6,9,1,-3],[-8,6,-3,-5,-9,-3,-10,4,10,-8,-9,6,-8,-5],[8,1,3,5,-10,8,7,-8,8,8,9,-9,-9,-6],[-2,9,8,-6,-9,9,-9,1,-10,-4,-9,8,-10,-8],[2,9,4,-3,-8,-5,10,-8,-3,-7,-6,-3,5,6],[-8,4,8,-3,-1,-5,7,-8,6,-8,-5,-1,-5,-9],[-6,6,9,4,-5,-10,-3,-7,-4,9,-3,8,9,-2],[-6,7,-5,-5,-2,2,6,-4,-6,3,-6,-10,7,-8],[9,-3,10,-8,2,1,-4,1,-4,1,6,10,6,2],[7,-2,-9,-5,4,7,-9,-1,-1,3,9,-5,-9,8],[4,9,-1,2,-5,-10,8,-6,-6,-10,-1,-4,8,-7],[4,-2,-7,-2,1,8,-8,-4,8,5,-7,10,-7,-8],[4,4,1,6,7,4,-1,4,3,-8,-6,-6,8,-10],[-10,2,4,-4,1,10,-8,-8,1,10,7,-6,9,-9],[7,3,-8,3,-10,8,7,-3,-4,-7,4,8,3,6],[5,-10,5,-2,-8,-8,2,-4,-3,7,10,4,-9,-5],[6,6,-7,6,2,8,2,10,9,4,-1,-1,3,2],[8,6,-1,7,-1,-1,-10,-4,-4,-8,-8,-6,3,9],[1,-10,1,2,2,-9,4,-7,10,9,-6,8,7,-3],[1,8,3,10,-8,5,6,5,5,-4,-3,-10,10,-3],[2,-9,7,-7,-7,-6,3,-7,7,-9,-1,-7,8,5],[5,-6,3,-2,-5,3,-5,-9,2,7,5,2,-9,-2],[8,4,7,-4,5,3,4,2,-6,-8,-6,-10,1,8],[-4,-8,10,-8,3,-9,8,10,9,3,-4,6,6,-10],[-9,-8,1,-5,-9,9,-7,-2,-10,8,6,-5,-2,10],[-8,-6,3,7,-9,6,-9,8,3,2,-2,-3,4,9],[-2,4,3,4,-4,-7,-5,-9,-8,-10,-8,-4,-5,-1],[8,4,10,7,-10,7,-4,-6,-7,-5,5,6,10,-6],[-9,-5,-6,7,9,-7,-7,-4,9,1,-9,3,-2,7],[-8,-8,-1,-6,-1,3,8,-10,4,-5,-4,-1,5,-6],[2,10,8,9,-10,-6,-7,-1,-1,-10,-5,-10,-3,3],[-6,6,2,-7,3,-2,8,-6,-9,2,9,4,8,4],[-6,1,4,9,-3,-8,10,-1,-8,-7,-3,-6,10,-6],[-6,2,-7,-6,-10,7,-1,10,-5,-2,-6,-1,-8,3],[6,8,2,-4,5,-8,-4,6,1,7,-7,-2,-9,-3],[-7,9,-6,5,-9,6,10,-8,-2,8,-2,-1,5,1],[-6,3,1,-9,10,-6,5,-4,-8,9,-9,-3,-3,10],[-10,4,-5,1,10,2,6,-9,-10,7,-5,9,-3,-5],[-9,-6,5,-6,6,8,-9,-6,-10,5,-7,-9,-9,4],[-1,8,-3,-10,4,-1,-5,-4,9,1,-4,9,-1,4],[7,1,9,7,-6,2,-4,10,-10,-6,-6,-8,5,4],[4,-5,-7,8,-8,8,1,-3,3,-4,10,3,1,6],[7,-2,-5,-3,-5,-8,5,8,8,-10,-5,-5,6,-8],[-7,3,-4,4,-5,-4,7,3,2,7,3,10,-2,2],[2,7,6,-3,6,-2,6,1,-9,-5,-6,-10,10,6],[6,-9,9,6,-5,-6,8,-4,-3,10,-9,-3,-9,-3],[-3,-8,6,7,-3,-1,-4,3,-4,-6,2,-10,-3,6],[-6,-9,-8,9,-6,9,9,-10,-6,5,-10,8,-9,2],[1,-3,7,-9,-1,-8,3,8,7,5,3,-1,2,-4],[10,-2,4,-10,-7,5,-7,5,-10,4,-1,9,10,4],[3,-1,-3,-4,8,7,4,3,5,-3,-1,2,-7,-3],[-5,9,6,-9,-4,-8,-6,8,-9,1,-1,10,-3,-3],[7,7,4,10,-5,10,1,-4,3,8,4,-5,-6,-8],[-9,-9,-6,8,4,9,6,-1,-7,3,6,3,3,-9],[-5,5,-6,10,-5,-2,-4,-10,-2,7,-7,-1,-4,-7],[4,-3,10,3,-6,-10,1,10,2,-6,-5,6,-3,-7],[3,3,7,-6,-6,5,-2,-3,-6,8,4,-4,9,1],[9,1,1,7,10,6,-4,7,7,-1,-4,-3,-5,9],[9,7,7,7,-2,7,8,9,4,8,-10,4,-7,2],[4,-7,-1,-8,-10,6,1,-5,7,-1,-4,2,-9,5],[5,-10,-9,1,-1,8,-6,-3,-10,-6,-4,7,9,9],[-8,-5,-4,-2,-2,-2,-6,4,9,-8,10,3,4,-4],[-3,-10,9,-6,10,5,2,7,-2,-9,10,7,5,6],[3,-10,-2,7,-6,4,2,-8,-9,-4,5,9,3,7],[-7,7,2,-6,10,6,6,-1,-9,5,-5,-8,-2,-10],[-2,-3,10,9,-9,-6,8,-4,10,-7,4,7,-10,-2],[2,7,8,5,2,-2,10,-10,8,7,7,6,-5,-5],[-10,7,-10,7,6,8,9,1,-5,-2,-4,2,-4,-5],[3,-3,-8,6,3,-5,-9,-9,2,10,10,2,-2,5],[5,4,-1,-3,-5,8,6,1,6,-6,9,-8,9,-2],[6,-8,9,-9,8,3,2,-5,3,-4,5,1,-7,2],[-1,-10,2,-8,-1,-5,-8,4,8,-8,5,-3,-3,2],[-5,9,-9,-5,-6,-3,-1,-6,5,-10,-9,-5,2,3],[-2,7,-9,3,5,8,10,-10,10,-9,6,-7,8,9],[9,7,-7,9,3,4,8,1,3,-9,7,-7,7,-10],[-7,-5,1,10,-6,-5,-8,9,3,6,-1,-1,4,3],[-4,-8,-10,-1,-7,-10,-9,4,-6,-7,-2,6,-9,4],[-7,-7,-10,3,-10,-2,7,-1,-6,6,-7,10,-6,-3],[-3,8,-3,-10,2,2,10,-10,-5,3,-8,-3,2,6],[-10,-4,-7,-3,-9,-3,8,2,1,-3,3,-10,-7,-7],[6,8,4,1,4,2,-8,-4,-2,4,-6,-10,5,3],[-2,-2,6,4,-1,1,-8,-1,-10,5,-9,3,-8,-8],[2,-4,2,1,-5,7,-2,3,3,-8,-7,3,2,3],[1,-2,1,-7,1,10,-5,-3,-7,-8,-10,-3,9,-5],[6,-2,1,9,-9,6,4,-7,-3,5,9,-10,10,-8],[-3,-2,2,3,-6,-5,9,-9,7,4,-8,-2,2,6],[7,-1,-6,9,-6,9,-7,9,8,-8,3,7,-1,-8],[10,5,7,-10,-2,9,1,2,-6,1,8,-1,3,4],[-4,7,8,3,-1,-6,-10,-10,7,-9,2,7,3,-3],[-3,-10,-9,4,10,-3,-10,5,6,-3,5,5,3,-7],[9,1,-7,10,-10,3,2,3,5,-4,-1,-3,8,-6],[-10,-5,5,1,-9,-7,-7,-8,-8,-1,-7,3,1,-8],[4,7,-9,10,-8,-7,4,-3,6,-10,-2,-7,-5,9],[-6,4,-1,3,3,5,8,8,7,3,-5,-8,-3,6],[-7,5,-1,3,-7,-3,2,2,3,-2,-3,4,7,5],[-8,9,5,9,2,-8,-10,1,-3,4,5,6,10,-8],[-3,8,-3,7,10,3,-9,2,6,-3,-6,-4,-2,1],[-8,10,1,5,6,1,9,9,7,-7,-5,-1,-9,4],[-5,5,3,7,7,7,3,9,-1,1,-2,-10,-1,9],[-6,-1,-7,4,-6,-3,2,-4,7,-8,4,6,-8,-2],[-7,-8,4,-6,8,3,3,-4,-8,-10,4,1,5,-3],[-4,-1,5,-4,9,-2,-9,10,10,7,-6,3,4,9],[1,-4,6,4,5,2,9,2,6,-10,-7,6,-3,-3],[-3,6,-4,-9,-6,-4,2,-6,8,8,1,2,-4,-1],[-7,4,7,-4,-2,3,-7,-10,3,-1,-3,4,-9,-2],[-7,10,9,4,5,9,10,-7,9,5,3,-10,6,-2],[2,-10,9,3,-5,4,-4,7,-4,-10,-2,-2,2,3],[8,5,-9,1,4,-8,10,8,4,7,-2,1,-3,-6],[5,-4,-5,6,-3,-4,10,7,3,-1,3,-4,-4,-6],[8,-3,3,9,-8,2,2,10,7,10,-3,6,7,-10],[7,-8,-9,-1,8,-10,4,10,9,6,7,3,-6,-7],[-9,6,2,2,-6,-4,2,3,-6,-2,4,1,5,-3],[-3,6,7,9,-7,-1,-1,-9,8,8,6,-9,9,2],[-3,5,-5,-7,4,-4,-6,-5,-1,-1,8,-3,1,-3],[-1,4,-9,-2,-9,-9,-5,-3,-1,8,-5,-8,-8,5],[4,-10,2,1,-3,6,-1,7,1,7,-10,-1,-1,6],[-4,9,-9,-3,10,-10,8,-7,4,-5,3,6,-6,-6],[10,6,-3,9,1,2,-9,-4,-2,-8,-4,1,6,1],[-6,6,-1,9,-7,-7,-4,10,5,2,5,-4,-2,6],[-2,-9,4,-6,8,-8,-4,3,-5,-1,7,8,3,2],[-6,-5,-3,-9,-10,1,-2,4,5,-6,-10,-3,-2,10],[-2,3,1,8,-2,3,4,3,3,2,7,-2,-4,-6],[5,-2,-10,-5,-2,-7,10,10,1,7,-1,6,6,-4],[1,5,-8,5,1,-1,2,9,7,5,-3,4,3,9],[-7,10,-3,-6,-3,10,-10,6,8,-6,-7,3,-5,-3],[6,-10,6,-3,-6,-9,9,-2,10,-2,5,1,9,1],[10,6,7,1,5,-2,4,-9,-3,-3,-1,9,-5,8],[-6,-9,5,6,-1,-5,2,9,-1,8,-1,4,8,-8],[6,6,-6,-10,-2,7,5,2,-1,1,1,-3,2,6],[3,-2,1,2,-7,-10,-1,2,9,1,-7,2,-4,2],[-2,-8,2,5,10,-1,-2,-5,8,-8,3,8,4,8],[3,-5,-6,-2,-3,-2,-6,9,3,-2,-1,-9,10,4],[5,5,2,5,-3,6,3,8,-10,7,10,4,10,6],[1,5,2,4,-9,1,5,9,-7,9,-5,1,-6,7],[-10,-7,2,7,-3,9,-1,6,-8,-5,-6,-4,-1,-6],[-2,4,-7,5,2,-5,-4,-6,5,-10,-9,-9,9,7],[10,6,8,6,-10,7,2,8,-8,-10,8,-7,-6,5],[-2,3,6,4,9,1,10,3,2,9,-8,5,10,7],[10,1,-2,4,6,-4,-1,-6,5,-4,-3,-8,-1,-8],[-5,-8,5,-9,-4,5,-2,-6,-3,5,-4,-4,-1,9],[-5,4,2,-7,1,-5,8,4,-10,4,-5,-3,7,7],[2,-9,-4,7,6,4,1,-2,-1,10,9,5,2,-4],[-7,-4,-6,6,-9,-8,8,-4,-1,-7,-5,2,-10,9],[-6,10,3,-2,8,-10,10,3,10,-6,-6,-1,-9,-6],[-3,10,7,5,-3,-10,5,-1,-8,5,-4,8,6,-10],[4,4,10,-7,6,-8,10,-2,-9,-2,-9,-6,-9,-2],[4,10,9,-5,9,-9,-5,4,6,10,10,6,-10,2],[-7,-2,8,8,5,-10,5,-1,-6,-6,2,-10,10,4],[8,-7,2,-5,1,-2,7,3,9,4,9,-10,8,7],[-7,7,-9,-10,6,-3,-7,5,7,7,2,-3,-1,-3],[-6,8,1,9,-2,1,4,-4,1,6,7,-5,-5,1],[-5,7,-7,5,10,10,-4,-9,6,-1,5,6,1,3],[4,-3,10,-10,-5,-7,-2,-9,7,-5,3,2,3,2],[-1,-1,-6,-6,4,-3,3,-6,-4,-1,6,6,4,-9],[-7,-3,3,3,-10,-8,-7,5,-1,-4,7,10,3,-5],[3,4,-5,8,2,-1,-2,-7,10,-8,-5,9,-8,-7]], dtype = "uint32")#candidate|9617|(210, 14)|const|uint32
call_9616 = func_4004_call(relay.reshape(const_9617.astype('uint32'), [14, 15, 14]), relay.reshape(const_9617.astype('uint32'), [14, 15, 14]), )
call_9618 = func_4004_call(relay.reshape(const_9617.astype('uint32'), [14, 15, 14]), relay.reshape(const_9617.astype('uint32'), [14, 15, 14]), )
output = relay.Tuple([call_9591,call_9596,var_9597,call_9616,const_9617,])
output2 = relay.Tuple([call_9592,call_9598,var_9597,call_9618,const_9617,])
func_9619 = relay.Function([var_9597,], output)
mod['func_9619'] = func_9619
mod = relay.transform.InferType()(mod)
var_9620 = relay.var("var_9620", dtype = "float64", shape = (50,))#candidate|9620|(50,)|var|float64
output = func_9619(var_9620)
func_9621 = relay.Function([var_9620], output)
mutated_mod['func_9621'] = func_9621
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9339_call = mod.get_global_var('func_9339')
func_9340_call = mutated_mod.get_global_var('func_9340')
call_9625 = relay.TupleGetItem(func_9339_call(), 1)
call_9626 = relay.TupleGetItem(func_9340_call(), 1)
uop_9636 = relay.exp(call_9625.astype('float32')) # shape=(11, 12, 6)
uop_9638 = relay.exp(call_9626.astype('float32')) # shape=(11, 12, 6)
func_9199_call = mod.get_global_var('func_9199')
func_9200_call = mutated_mod.get_global_var('func_9200')
call_9651 = relay.TupleGetItem(func_9199_call(), 3)
call_9652 = relay.TupleGetItem(func_9200_call(), 3)
func_5587_call = mod.get_global_var('func_5587')
func_5590_call = mutated_mod.get_global_var('func_5590')
var_9656 = relay.var("var_9656", dtype = "float32", shape = (825,))#candidate|9656|(825,)|var|float32
call_9655 = relay.TupleGetItem(func_5587_call(relay.reshape(var_9656.astype('float32'), [11, 15, 5])), 0)
call_9657 = relay.TupleGetItem(func_5590_call(relay.reshape(var_9656.astype('float32'), [11, 15, 5])), 0)
func_8843_call = mod.get_global_var('func_8843')
func_8846_call = mutated_mod.get_global_var('func_8846')
const_9676 = relay.const([5.601220,-5.367543,4.869494,3.198153,9.836623,-6.645253,8.773206,-9.307565,0.232403,-3.509454,-5.214538,5.143740,-7.589765,-8.686062,9.163805,6.882024,9.825526,3.631260,-3.455424,4.205611,5.738932,2.944614,-0.326895,1.606476,1.578614,-1.663603,-2.254850,1.370431,-0.085830,0.179275,1.310525,-7.271670,-5.235186,5.082863,-8.999808,-8.016767,-6.104126,-1.932448,6.792027,0.019823,3.361120,-0.109559,5.900753,-5.493162,-9.734539,7.727812,7.696014,-6.505314,8.187995,-6.516173,-0.643114,7.874044,-5.251181,-6.959406,0.125504,-8.241474,9.183875,3.306908,-5.917543,-4.134092,8.565602,-9.310686,4.791070,-4.375430,-0.939964,4.656445,-9.481853,3.914891,-2.741122,-9.525377,5.679613,3.267062,-6.382520,9.249800,-6.443603,8.075191,6.124739,-8.101007,-8.088285,-7.559901,1.821475,4.610130,-2.872858,-9.835612,-7.732673,6.850561,3.792038,-8.930129,1.898527,-3.294264,2.397890,2.664534,1.123598,-7.156572,-5.624989,-0.358657,-0.269824,7.649578,0.864632,3.369347,4.675093,3.381909,3.693914,-6.078341,-2.250635,4.782085,-4.203242,-6.212610,-6.064421,8.843320,7.967138,4.547200,1.897157,4.752619,-6.543096,2.428573,5.932377,5.444990,-9.133713,8.122817,-9.994218,7.036312,5.431788,8.245396,-4.706963,-5.695373,-6.948611,9.979065,6.126277,-2.751835,5.002390,3.058668,5.948371,-0.714287,-8.700398,-5.759191,-8.671633,5.419757,2.847281,0.941064,1.243457,-6.736589,4.855111,6.577234,-0.439585,3.049291,7.157018,-0.015621,0.812870,5.709521,-6.583257,-8.618682,1.263424,-6.325293,-5.749055,-8.618463,7.344591,-0.811566,-3.531632,5.853984,6.666865,-0.844221,5.786629,6.592330,9.710203,-8.103903,-8.483402,-1.323399,-4.167649,5.450715,2.453677,-5.509485,-0.827974,8.787365,5.910028,5.591711,4.192129,4.982384,-5.837913,6.806837,1.515825,3.763966,0.156519,8.579141,-1.163140,-0.855045,-2.692475,-8.354670,5.675296,8.305584,3.715737,-0.840652,4.805931,5.339141,-4.300483,4.936511,9.034832,-8.729288,6.410429,-0.912033,-8.022106,5.453552,-6.011694,1.823650,6.901674,-0.196945,7.252881,-7.701475,-6.537221,-1.336465,-3.399001,2.509825,-0.241954,-0.382489,0.005599,8.931604,-4.801201,2.131295,-0.460572,-5.593937,0.772899,-1.914403,5.349142,0.742087,2.752159,2.104194,-5.777971,2.688491,-2.318175,-3.796157,-3.993589,2.055161,-6.331964,2.340264,8.763639,-4.835249,-9.127171,7.103489,8.439144,-1.388949,-4.081297,4.024956,-4.480970,3.030000,-5.066231,-4.829581,6.940293,0.586375,-4.326622,-3.981574,4.497482,1.273242,-0.868900,2.489714,2.335941,-2.163619,7.075220,-3.152714,-3.969681,-0.082965,5.938054,7.615636,-4.799460,-9.125409,-9.134147,-1.869133,-3.877191,3.451166,-7.166737,-4.362876,-2.662124,4.251189,-6.547989,9.860900,6.455987,-6.535371,5.795383,5.764596,-8.536942,-2.822282,5.846172,-7.260064,-1.217264,-0.713474,7.226909,0.956423,5.820583,8.014804,-6.759884,-2.517780,2.461930,5.879552,-0.637548,-6.080128,-4.524477,6.472755,-4.325504,0.597088,-3.217912,5.292116,4.060655,7.683789,-5.624376,-1.564540,-4.637074,-9.398701,9.940458,-0.858429,2.486850,8.121669,4.089927,6.794352,-5.160502,0.013316,-6.303614,-7.164760,2.782388,-4.242648,4.453935,-3.151357,6.100683,6.155661,-8.665625,-9.357740,-2.204511,-3.432178,0.182254,8.360201,-3.043497,-1.482215,-0.431660,-7.970407,-6.595588,8.242193,-0.714071,7.473863,-2.578167,-9.199093,-2.883952,-4.490733,-3.092984,2.391276,-2.868464,-9.296512,3.960423,1.226769,1.142329,5.501228,-4.329401,0.388103,-5.659799,-4.580564,8.137234,-0.923461,-0.718964,6.154806,9.260918,-1.716237,6.677656,-7.407550,9.290271,-8.531650,-5.980660,-5.654929,-8.898617,2.385196,8.263139,-9.527999,-6.523418,-9.631040,2.010598,-9.795339,-0.363255,0.129723,2.869270,-5.045996,7.502559,2.552585,-0.131492,9.944468,-3.519589,-7.945879,-8.152596,-6.927513,2.169012,5.117775,-6.067791,2.244962,-0.425099,1.506938,-8.862344,-6.898659,-2.962981,3.312161,-0.356654,-1.489166,6.819575,-1.685977,0.251375,3.482018,3.735271,4.036633,-1.632458,2.670369,3.282964,-6.620379,-8.889828,-5.009670,-5.194339,-5.620831,-2.215559,6.865322,2.653128,5.187317,1.228756,3.096064,-0.953380,-6.551704,7.670860,9.205570], dtype = "float32")#candidate|9676|(420,)|const|float32
call_9675 = relay.TupleGetItem(func_8843_call(relay.reshape(const_9676.astype('float32'), [420,])), 3)
call_9677 = relay.TupleGetItem(func_8846_call(relay.reshape(const_9676.astype('float32'), [420,])), 3)
output = relay.Tuple([uop_9636,call_9651,call_9655,var_9656,call_9675,const_9676,])
output2 = relay.Tuple([uop_9638,call_9652,call_9657,var_9656,call_9677,const_9676,])
func_9685 = relay.Function([var_9656,], output)
mod['func_9685'] = func_9685
mod = relay.transform.InferType()(mod)
mutated_mod['func_9685'] = func_9685
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9686 = relay.var("var_9686", dtype = "float32", shape = (825,))#candidate|9686|(825,)|var|float32
func_9685_call = mutated_mod.get_global_var('func_9685')
call_9687 = func_9685_call(var_9686)
output = call_9687
func_9688 = relay.Function([var_9686], output)
mutated_mod['func_9688'] = func_9688
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8760_call = mod.get_global_var('func_8760')
func_8761_call = mutated_mod.get_global_var('func_8761')
call_9772 = relay.TupleGetItem(func_8760_call(), 0)
call_9773 = relay.TupleGetItem(func_8761_call(), 0)
func_9132_call = mod.get_global_var('func_9132')
func_9133_call = mutated_mod.get_global_var('func_9133')
call_9801 = relay.TupleGetItem(func_9132_call(), 0)
call_9802 = relay.TupleGetItem(func_9133_call(), 0)
func_5015_call = mod.get_global_var('func_5015')
func_5017_call = mutated_mod.get_global_var('func_5017')
const_9806 = relay.const([10,-9,9,10,-1,7,6,1,1,3,-7,-6,2,-8,-1,-5,6,9,-9,-1,6,10,-10,-2,-7,1,-8,8,7,8,10,-10,9,-6,-8,9,-4,8,9,7,4,1,-6,-9,6,-2,-3,7,-4,10,-9,-8,9,-9,7,-6,3,-3,8,-4,1,3,10,4,2,-6,5,3,1,4,-7,8,-10,1,-3,2,-10,-8,6,4,7,8,5,6,3,-3,10,2,-4,-6,7,3,-5,-6,2,-9,-10,-1,-8,3,6,-4,9,4,1,2,-2,-5,-7,-9,3,-10,-5,-9,9,-4,8,-1,8,-2,-9,-8,3,-9,-4,-9,-6,-1,-1,2,10,5,6,7,-3,-2,7,-3,-3,9,1,-6,9,6,8,2,-5,-8,-2,6,7,-6,-8,-3,1,10,-3,9,-4,4,4,-9,-2,4,5,-7,-8,5,4,-8,-1,9,3,-8,4,8,-7,-10,6,-10,2,1,4,7,-7,5,1,4,3,-2,3,6,9,-8,10,5,-7,3,6,9,2,1,-9,9,6,-8,3,8,2,6,6,-5,10,6,7,-7,-9,-4,3,10,-5,8,-4,10,4,9,7,-5,-1,1,6,7,-6,4,4,-7,-4,-9,-1,6,4,5,1,-6,-9,-10,-5,-10,8,8,-10,1,10,-4,-8,4,8,-3,9,9,6,-3,-6,2,9,-4,-5,-4,-6,5,9,-7,-9,5,-10,8,-6,9,-5,6,10,-2,-6,9,-5,7,4,-10,-4,2,9,-2,-2,7,-1,-1,4,6,-2,-3,1,-10,3,9,6,1,-5,10,-3,3,9,-5,-9,-4,-9,-9,-8,5,-10,-1,10,-2,9,10,-9,8,-9,3,-5,1,8,4,9,-9,6,3,-6,-8,-7,6,3,5,8,-2,-5,-9,-10,-10,2,8,-1,-3,8,-1,2,-10,-1,7,-3,4,-9,-2,4,8,1,-6,-6,1,-2,8,10,-9,5,2,-4,-5,-7,-3,-6,1,-6,-2,-5,8,-3,-1,6,-6,5,-8,-6,1,-7,6,-5,3,-3,-8,7,-8,-4,-5,-9,1,1,-1,2,10,-8,5,5,-7,-4,-1,-10,-1,-7,7,7,8,-7,5,-2,-9,5,-4,-3,-1,5,-9,-2,-1,7,5,-6,-4,-3,-4,-5,-5,-8,-1,1,1,-5,-3,9,5,4,9,-2,-4,-1,-2,-3,7,8,-6,1,5,6,-2,-5,-2,-7,-10,-6,-6,5,3,4,1,9,1,3,-5,-5,7,-4,-1,-9,-9,-5,2,-2,-10,-7,8,-8,-6,-4,-1,10,1,6,4,-2,2,10,9,-1,10,-10,5,-5,9,6,10,-8,9,-2,-1,7,-2,-5,1,-8,5,-9,-5,5,-6,4,4,-9,-7,-5,-3,-10,-3,6,3,7,3,2,2,2,8,-4,-7,5,-3,-10,5,3,-5,4,-6,-7,6,-7,-7,-6,4,-5,-4,4,-3,6,-4,-9,-10,8,3,5,7,10,2,6,8,6,6,-9,-4,-8,-4,1,10,-1,7,4,9,-5,-10,6,6,9,-2,10,1,-8,5,-10,9,9,9,-9,9,-9,6,-6,9,-4,-4,-9,-2,-2,4,-3,-3,-8,-8,-1,2,-6,9,-1,-9,-9,9,10,5,-10,3,-2,6,1,9,-10,5,-9,2,-3,7,8,10,-7,9,1,-1,-2,-7,10,8,6,10,8,-7,6,2,2,-9,6,6,-2,2,-3,-9,-6,-7,-10,8,-10,10,-1,-10,-6,-1,9,-10,6,4,-3,-4,-10,1,-1,-8,6,-9,-2,-9,7,1,-9,6,-6,-5,-5,-10,-2,-3,-2,4,-2,-6,-1,5,6,4,8,1,2,3,-6,10,-3,-3,-7,4,9,4,-6,-7,-4,10,-1,-3,8,10,-10,2,-5,-10,-1,10,4,-9,2,5,-9,5,7,-2,-6,6,3,1,4,-8,4,6,-3,-10,-3,10,-1,1,-5,-10,-7,8,8,-8,9,-7,8,-4,-8,-6,1,-2,-1,8,-8,-6,9,-5,-3,7,-10,8,-8,9,-7,7,-10,-10,-2,6,9,2,-6,-4,9,3,-6,7,3,9,10,-8,5,-1,6,-4,9,-2,-7,6,-8,7,-1,-9,2,-6,6,-3,2,5,-1,-3,-8,-5,-3,-1,1,-8,-4,-9,-5,-9,9,-1,5,-8,-8,5,10,-1,3,6,1,8,-1,10,-4,-8,-10,-3,-6,1,4,9,6,-6,1,-4,-8,-8,1,-4,8,5,2,2,1,-9,9,-8,8,-5,8,3,-2,-2,2,8,-9,-7,3,6,-5,6,2,3,7,-1,9,-10,7,-6,9,9,6,-10,7,10,2,-8,-9,-6,-10,3,9,10,5,-2,-9,4,-9,2,-10,-10,8,7,-10,4,-8,-7,10,4,5,-10,7,8,6,-1,-2,-7,10,8,6,8,-10,-4,6,6,2,-6,9,8,-5,2,-2,6,4,2,5,-8,8,-5,-8,6,6,2,7,1,-8,9,-1,-2,8,-6,3,-10,-4,5,-6,1,-6,-9,10,7,10,-8,9,-7,1,2,7,-6,4,2,-6,-4,-5,-5,3,-5,-8,-6,-2,-5,-8,8,6,-6,-7,4,1,-6,-1,3,5,-8,10,9,9,-4,9,-2,-8,-7,7,10,9,4,9,5,7,4,-7,9,6,-3,-7,-10,-3,2,8,8,10,-9,-1,-4,6,-6,-10,1,8,1,-10,10,9,5,-6,5,7,8,6,6,7,-9,7,-4,-7,-10,-5,-2,2,2,-10,-7,-10,-5,-4,-10,-5,9,10,-8,-8,4,9,-10,5,3,6,4,-3,-2,-4,-10,-3,2,2,-10,10,-6,2,-2,-7,-6,-4,-10,-1,-4,7,3,-2,-3,7,-7,-7,-6,10,-8,2,1,-4,3,-5,2,2,2,-2,-10,-6,6,3,-4,9,-1,4,8,-3,5,9,-10,5,-5,-4,-8,2,-6,5,8,-2,6,3,5,-7,3,-10,-7,4,-3,-8,3,-4,-7,-10,2,5,7,-2,-3,-3,-4,-9,7,4,-6,-1,-2,-7,-4,3,-9,4,6,8,-6,6,-5,1,-10,4,-7,4,-1,-8,8,-1,-2,4,-4,7,-5,-9,8,4,7,6,6,3,9,-2,-7,-5,-9,-8,1,-2,8,9,-9,6,3,-10,-9,6,-8,-8,-1,-5,2,-5,9,-1,7,3,-5,4,10,-8,-8,-1,-3,3,-2,6,2,-8,7,7,3,9,-2,5,6,-3,8,-1,10,4,-2,7,10,-6,9,10,-5,8,-4,9,8,4,-5,8,-9,-9,-3,-7,-6,-1,-6,6,1,-1,9,-3,-4,-7,-4,-8,5,5,6,2,-7,-6,3,-8,-6,-7,1,-5,9,-7,5,7,3,-10,6,-10,3,7,7,-8,4,-9,-7,1,-6,-8,-4,-1,-9,-7,-2,-7,2,-1,-7,2,-6,6,5,1,10,2,-6,-2,-5,9,5,-2,-2,-5,-4,2,-8,-7,-10,6,-10,3,-1,-1,1,4,10,2,-9,-2,-6,6,5,-8,-2,2,-3,7,9,10,2,7,-8,-3,-7,-3,-9,6,-2,8,9,5,-6,-5,2,6,-9,-3,3,-5,3,3,7,-8,6,-1,8,8,-8,-9,-10,2,10,-6,3,5,-9,8,10,3,1,-2,1,3,4,-8,6,4,7,-9,1,-6,4,8,-9,-9,-6,9,4,-5,-3,3,-4,7,6,2,10,2,4,-8,-1,-5,-2,4,-6,4,-3,1,3,1,-4,1,-2,9,-2,-1,6,10,10,-1,3,8,-2,5,8,7,2,-7,-2,10,-3,-5,-7,-4,8,-3,-3,-9,1,10,-4,1,-8,8,-5,2,-1,7,-3,-5,8,-4,-3,6,8,5,-7,-8,5,5,-8,9,5,7,7,-8,4,-6,6,-10,9,8,2,-1,4,8,-2,-1,-3,4,2,6,8,2,-5,-10,-6,2,-8,6,8,4,-2,-8,5,6,-8,5,4,1,8,6,4,5,-1,-2,6,3,-2,3,-7,-5,1,10,-5,-7,-2,10,-10,-8,5,-4,-7,-9,9,4,-2,10,9,9,1,-1,-6,1,-6,-9,-8,-10,-9,1,2,2,8,-5,2,-3,9,-7,4,5,6,1,-6,-6,9,-2,7,-4,8,2,-5,-4,-10,3,9,-4,-1,-7,-5,1,4,-6,7,-6,9,-4,4,1,9,9,-2,-2,-9,10,-6,9,-4,3,-5,6,-8,10,-8,-7,7,-4,-9,3,-7,-2,-4,5,8,-9,6,8,-4,9,1,9,-1,8,1,-8,4,3,10,6,-5,-10,-8,8,-9,6,-2,10,7,-3,-7,9,10,-9,-2,-10,-10,10,3,2,7,-1,-10,-2,9,7,6,-7,-8,1,-3,-8,3,1,-8,-7,-10,3,1,8,3,-6,-3,-7,1,-10,-9,9,6,10,-2,10,7,-1,1], dtype = "int64")#candidate|9806|(1690,)|const|int64
call_9805 = func_5015_call(relay.reshape(const_9806.astype('int64'), [13, 10, 13]))
call_9807 = func_5015_call(relay.reshape(const_9806.astype('int64'), [13, 10, 13]))
output = relay.Tuple([call_9772,call_9801,call_9805,const_9806,])
output2 = relay.Tuple([call_9773,call_9802,call_9807,const_9806,])
func_9814 = relay.Function([], output)
mod['func_9814'] = func_9814
mod = relay.transform.InferType()(mod)
output = func_9814()
func_9815 = relay.Function([], output)
mutated_mod['func_9815'] = func_9815
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8274_call = mod.get_global_var('func_8274')
func_8276_call = mutated_mod.get_global_var('func_8276')
call_9818 = func_8274_call()
call_9819 = func_8274_call()
uop_9824 = relay.asin(call_9818.astype('float32')) # shape=(5, 2, 5)
uop_9826 = relay.asin(call_9819.astype('float32')) # shape=(5, 2, 5)
output = uop_9824
output2 = uop_9826
func_9843 = relay.Function([], output)
mod['func_9843'] = func_9843
mod = relay.transform.InferType()(mod)
mutated_mod['func_9843'] = func_9843
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9843_call = mutated_mod.get_global_var('func_9843')
call_9844 = func_9843_call()
output = call_9844
func_9845 = relay.Function([], output)
mutated_mod['func_9845'] = func_9845
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9223_call = mod.get_global_var('func_9223')
func_9225_call = mutated_mod.get_global_var('func_9225')
call_9864 = relay.TupleGetItem(func_9223_call(), 0)
call_9865 = relay.TupleGetItem(func_9225_call(), 0)
func_8803_call = mod.get_global_var('func_8803')
func_8804_call = mutated_mod.get_global_var('func_8804')
call_9866 = relay.TupleGetItem(func_8803_call(), 0)
call_9867 = relay.TupleGetItem(func_8804_call(), 0)
func_4838_call = mod.get_global_var('func_4838')
func_4842_call = mutated_mod.get_global_var('func_4842')
const_9872 = relay.const([[-7.319642,4.539760],[5.574877,2.552596],[4.059827,-0.200031],[5.244094,0.506331],[-9.987066,-5.687167],[2.049227,-0.710896],[-7.811248,-1.997533],[8.900367,5.901024],[-4.372888,8.890905],[9.532698,1.564063],[-7.469366,0.597652],[-4.525206,4.864653],[7.521153,2.493440],[8.253048,-6.151603],[-0.540307,-2.132807],[3.831445,6.499491],[-6.629769,3.511495],[2.404350,-9.134429],[-6.833919,3.224942],[-2.652984,7.530546],[-8.312174,-5.875205],[-8.566232,9.253897],[-9.908973,-8.777342],[-7.188754,1.722706],[-6.818249,-4.815156],[3.128039,8.697355],[-4.322755,-0.020460],[0.535509,1.639651],[5.532041,5.309161],[-7.376706,-4.186634],[-6.050267,-8.900779],[-7.812103,4.272187],[-7.584713,8.295659],[-1.884715,6.550069],[5.071169,4.234287],[0.817907,1.361648],[3.481609,-1.448346],[2.392204,-6.633700],[6.748348,-6.879361],[-4.432637,-4.849006],[-9.923444,3.126636],[-0.496905,5.894427],[-2.458011,-9.987359],[4.942870,-1.197207],[-1.128675,2.693221],[3.470018,3.191012],[-9.907684,3.052795],[0.830930,-9.636987],[4.156085,-4.539767],[-6.300490,6.367985],[5.173699,9.450250],[5.986698,0.422106],[-8.331596,-6.445565],[-4.446930,6.512726],[3.820466,3.417303],[-9.312043,-8.579122],[0.444629,-8.783079],[4.497581,8.719714],[8.605864,4.130474],[-4.089584,0.609369],[0.048545,5.615044],[2.888497,1.732659],[4.487381,-9.422716],[-2.806183,6.662469],[6.040403,6.166610],[1.613084,9.235365],[2.954977,-3.037241],[2.283819,5.952342],[3.287284,-6.308331],[8.664078,4.811142],[3.866703,-1.187075],[1.976009,2.970702],[0.048953,2.242132],[3.200091,-1.787525],[5.725679,2.888987],[-3.875405,-4.522424],[8.158522,-2.606237],[-8.805114,5.677659],[6.590909,5.469319],[6.695811,-8.852923],[4.760708,5.116859],[-7.273364,-8.953864],[-9.206125,2.705147],[-4.487146,-0.260332],[-6.804812,-5.455509],[8.859208,-5.766416],[4.166983,1.082720],[3.217808,-8.321458],[1.855328,3.848326],[3.887881,2.860123],[0.765566,-2.192104],[-1.105677,1.790730],[9.142410,6.703166],[4.285563,-7.284002],[1.281470,3.197041],[6.245366,-2.000084],[-8.727615,-3.284615],[2.028146,4.423299],[-2.747234,-2.138876],[8.727689,-9.348869],[4.744703,8.394837],[7.722226,9.020073],[1.375670,4.826618],[-4.900148,0.187989],[-2.817299,-0.572634],[0.481868,-6.687178],[5.771562,3.431808],[5.967099,-7.937718],[0.683915,3.674336],[2.567391,-6.562444],[-2.185243,2.143078],[1.006293,2.651396],[-3.534628,4.337272],[4.897233,-9.173620],[-7.889891,6.695028],[3.648625,-8.433129],[4.838622,6.710398],[-2.456943,2.536542],[-7.802932,-6.075298],[2.377731,7.477296],[5.837124,-0.987564],[-1.990157,-3.377656],[-2.521706,-3.108695],[6.504796,-5.606461],[5.845806,1.698149],[5.635230,-9.934497],[6.232722,6.450268],[-0.238968,-1.591892],[1.860628,-0.996144],[2.128286,-0.340928],[0.883845,5.369781],[8.210617,0.991336],[-4.565054,8.640854],[-5.974492,1.018488],[-4.091755,-9.694003],[7.074665,-4.136581],[2.397989,-0.022151],[7.464938,-7.853430],[-6.964079,7.665071],[-9.257022,-5.679300],[6.351076,-1.211698],[1.091650,9.553086],[4.606077,-7.096164],[5.264235,4.425176],[7.485897,6.597153],[7.640046,6.682542],[-7.805907,2.887779],[-1.899721,6.992959],[1.865349,5.725254],[6.353781,-8.031508],[-8.558166,6.106280],[-0.429705,3.271000],[-0.676439,-2.210461],[-7.818366,0.689062],[0.910469,5.380150],[-4.456899,3.740004]], dtype = "float32")#candidate|9872|(156, 2)|const|float32
var_9873 = relay.var("var_9873", dtype = "uint64", shape = (1, 1100))#candidate|9873|(1, 1100)|var|uint64
call_9871 = relay.TupleGetItem(func_4838_call(relay.reshape(const_9872.astype('float32'), [8, 13, 3]), relay.reshape(const_9872.astype('float32'), [8, 13, 3]), relay.reshape(var_9873.astype('uint64'), [10, 110]), ), 1)
call_9874 = relay.TupleGetItem(func_4842_call(relay.reshape(const_9872.astype('float32'), [8, 13, 3]), relay.reshape(const_9872.astype('float32'), [8, 13, 3]), relay.reshape(var_9873.astype('uint64'), [10, 110]), ), 1)
uop_9882 = relay.log10(call_9871.astype('float64')) # shape=(11, 10, 10)
uop_9884 = relay.log10(call_9874.astype('float64')) # shape=(11, 10, 10)
const_9896 = relay.const([[[6.289742,-3.594364,5.420380,-1.138643,3.518940,7.945402,-1.348863,-3.784484,-1.681135,-6.100233],[-9.302398,-7.517465,-6.428337,4.863450,-8.309437,-3.698102,9.306800,-5.353092,4.720788,4.814070],[-1.832295,-6.019248,-4.465174,-3.641263,-4.142068,-7.974665,-1.667270,-7.515979,9.109869,7.286342],[-6.248699,9.997593,3.003659,-0.453255,-8.230084,6.453742,-1.556866,5.573468,-2.600708,-8.977442],[-4.896476,5.286688,4.899537,7.458896,2.591826,-7.718004,9.702876,9.201864,4.446688,9.753236],[-0.548507,-3.995450,-9.807727,6.499516,-0.556603,-9.747454,-9.383735,2.105616,4.244214,-7.966288],[-6.226780,-0.280334,0.975636,-0.565299,5.183322,-8.140389,-2.798135,-9.649911,5.507645,4.366540],[5.868871,-3.242791,8.397518,2.826916,1.504492,3.430530,-7.941692,7.545064,5.414993,-5.436395],[3.034309,-2.033498,-8.805898,4.974701,5.582695,5.776857,-4.104392,-4.301904,8.123627,-6.785189],[-3.150800,-3.589006,6.800040,-8.286494,5.880815,1.762976,6.083204,-4.197672,-1.115983,2.857677]],[[-9.517509,9.667231,4.240399,-1.274923,9.178705,0.690448,-3.587374,9.920452,6.724650,6.162667],[-9.567438,7.542168,-8.460615,0.066037,8.504929,-9.486405,6.790832,-0.194706,-3.903979,-5.225512],[2.664986,0.069212,4.075808,2.215990,-0.243711,-7.912385,5.142799,-1.747243,7.064094,1.588224],[5.380559,1.422517,4.900242,2.988221,-8.499165,0.161859,8.464728,-2.828524,2.300782,0.056078],[-9.270196,9.780446,7.344950,2.957362,9.320447,-8.184178,8.893123,-5.496539,0.044322,-4.104737],[4.027003,-7.018441,-9.208563,0.766523,-3.222815,1.132301,-4.434414,4.061352,-0.397393,3.464326],[9.854802,-8.725895,4.361932,3.578015,-1.118212,-7.560911,3.478070,-1.492639,0.884329,-9.740350],[-9.803321,-4.461822,-8.559669,1.728823,5.489655,-2.834143,-1.647812,7.209892,0.464910,-1.552934],[-1.997173,2.628744,5.298461,6.761367,-8.987488,1.888163,3.898017,4.649206,6.165014,-0.118287],[4.601731,7.431838,-0.518598,2.832866,4.073383,9.364989,3.661372,7.888537,0.174134,1.059126]],[[-0.273524,-7.351729,6.306579,7.079362,-9.834782,6.149547,4.672541,3.124014,1.218741,4.763572],[1.602460,-1.453538,-9.103273,5.232417,-8.152033,0.132661,4.335238,-4.462413,5.265853,6.280143],[8.680365,-5.946074,0.807801,-3.609665,-8.249062,2.002704,7.204929,-6.826954,-5.456242,8.927120],[3.692782,4.419235,-6.150837,3.017917,-8.703238,-1.432846,0.588201,-5.392901,-0.763054,3.210508],[-7.527900,-0.268814,-9.117169,2.702906,5.799553,4.174074,8.874364,5.537911,-4.241313,-1.348433],[-3.474097,-4.974107,5.346974,-1.474999,-1.782224,-0.833872,4.600964,-0.315528,-2.341027,-2.014437],[-6.697268,-4.610918,-5.343687,3.460534,-6.238851,1.679127,-3.249710,-7.411449,-7.462058,-2.194609],[-6.877427,-4.752093,6.918878,1.345998,-3.086380,6.470459,2.197761,6.034027,-5.577683,-0.377323],[-1.963739,1.874611,4.981220,-9.263573,-7.703555,-5.733510,4.099849,-1.735113,9.055826,-0.893469],[0.223200,-8.873413,2.694538,8.172925,4.408178,-9.426811,0.454530,-8.406476,6.432393,5.714262]],[[0.051712,-5.959878,-4.928692,-7.916664,-6.176871,6.280334,-5.456158,-0.935007,5.878645,3.449918],[2.414312,-2.324013,7.294680,-6.811447,6.076524,3.462994,5.591271,-7.932310,-3.082630,-5.753839],[0.995410,9.027685,1.791216,-4.221414,5.709472,9.730659,3.854852,8.658596,1.187459,-1.058878],[2.748074,0.290488,6.388610,-7.705208,-5.204533,3.030847,0.085644,-4.497187,-9.848568,9.880463],[-1.627464,4.136347,9.285263,0.410612,-3.038901,1.937801,5.895169,-5.477682,-9.525012,-1.287337],[0.367100,7.673233,-0.587584,-5.056261,-7.816506,-9.776331,-2.803619,-1.861933,6.095238,-0.305308],[4.479285,9.604640,3.447159,-6.307311,3.195187,-1.681618,-9.073827,7.296474,6.020680,5.818183],[8.821106,8.626211,8.510559,0.380427,5.795422,-0.342120,-9.854300,5.750894,-4.605552,3.442551],[-3.695970,-2.983564,6.294932,-1.300805,7.692213,-6.941023,7.398196,4.098918,-4.789625,4.651299],[-6.742188,-5.344930,-2.935946,-3.240620,1.180727,-4.138678,-6.985753,-8.389174,-5.993167,-3.214249]],[[2.626501,-4.339753,-9.870505,7.541060,9.298372,-4.626920,0.857372,-4.341724,-7.947118,-2.270404],[-6.651879,-7.924133,9.088527,6.303147,5.908517,-9.404429,-6.913051,2.099352,-3.576519,5.850375],[-9.877412,7.081413,2.535697,0.440162,0.539380,5.201602,-6.524590,-6.413444,0.163037,2.163795],[6.245520,9.371997,-1.390468,8.570355,0.721836,-2.208789,-2.622942,7.266431,1.859112,-0.330542],[-4.564076,7.086616,1.555383,9.511121,4.046601,7.448230,-7.457232,-2.306902,0.855199,2.008748],[2.126572,-9.830905,5.011938,3.371206,-1.177880,4.013957,3.954676,0.090558,-1.955108,1.062236],[8.535361,5.351047,9.969879,6.118425,5.150509,-8.690241,-1.895179,-4.571722,-3.174615,2.021136],[8.332266,-6.379401,0.764489,5.573713,-0.569779,4.450943,1.174576,7.884779,-9.831884,-7.298616],[9.132362,-5.091116,8.778356,4.644027,-8.075754,1.109247,-7.947795,9.479617,1.994461,5.899367],[7.292986,-2.443836,4.735569,-4.740234,-5.090694,5.676005,5.944842,4.557097,3.973991,-9.741653]],[[5.150336,7.479279,7.679624,7.508514,-5.230217,-9.732937,7.039651,-2.137534,-0.829866,7.038264],[7.033014,-2.291533,-2.351449,-7.591572,1.398701,-6.578277,-7.699663,-4.860390,-2.134027,-7.315020],[-4.830117,-5.923545,3.378524,9.587540,0.693641,-9.428889,1.400555,3.375428,1.893822,9.266468],[8.765242,3.850667,-9.377845,4.751959,-3.381003,7.236642,7.596177,-9.387859,-8.245973,-6.833770],[-9.720699,5.528721,-5.691195,-6.841936,-6.060221,-5.552578,4.009463,6.379376,2.659371,-2.171274],[-2.117507,-8.141925,0.563483,4.676453,-5.960200,-7.144530,-1.920747,7.642888,-5.477313,-0.375968],[8.165038,-5.432736,1.918961,-9.869534,9.656969,-7.691224,-4.631236,5.110234,5.641635,-2.393326],[-4.393835,5.814621,-6.715915,0.588767,-7.484710,4.314207,-6.615426,-7.063911,2.237146,-8.508944],[8.320910,-0.360149,-2.292607,2.367206,-1.271211,5.975595,-1.152474,-5.931345,7.492506,-7.481548],[3.841197,-6.476400,7.396129,4.172462,9.338497,0.150482,-5.076499,6.906853,8.708074,4.351287]],[[-9.956601,5.338241,8.386196,1.948302,9.399312,-1.500163,2.575931,7.869748,5.879524,0.592122],[-3.008330,5.061002,-3.743561,0.839126,0.907422,-9.039740,-6.614297,7.888280,1.293776,-5.929725],[-5.946059,2.225692,1.487849,-7.986222,-8.710622,-1.714768,3.657101,2.328498,-2.988295,7.180948],[1.239665,0.792780,8.639645,2.820838,3.595465,-5.007180,-8.916239,5.635073,-6.359577,-8.145249],[8.829313,9.804013,-3.364853,-5.421025,-7.230084,4.302313,0.280169,6.716704,3.543350,6.314597],[-6.429242,-5.413035,-4.151498,0.429333,2.258653,4.446447,-6.310306,9.713218,1.198885,1.501867],[-3.247481,-9.844280,2.681150,-4.543683,-3.225226,0.759273,2.338269,-2.278374,5.237424,-6.310572],[1.419258,2.460457,7.386420,6.020992,-5.584347,-2.288801,8.105708,5.376267,-4.781358,7.550901],[8.641327,4.505468,-4.970701,-5.355446,3.497761,-6.979327,-7.329373,-8.919488,0.768033,2.751889],[-6.953810,-6.212621,-2.054954,-7.100278,2.549319,2.331958,-8.791148,-0.727077,-6.235696,-9.698060]],[[3.278140,1.620042,-9.905907,3.905043,5.040474,-0.761068,-9.935184,5.717994,-0.332190,9.137338],[4.966953,-1.621265,-7.380393,-3.372042,-4.921682,-6.745960,8.902560,2.758166,-4.878313,2.599522],[8.089310,2.109220,-3.277223,-4.363593,4.003326,5.032187,8.810595,-3.857967,-7.176284,-0.850307],[-2.318401,-7.559082,-4.962748,2.158271,5.970542,-8.547205,-5.890880,-3.608333,-5.602275,5.290917],[4.576176,-3.502622,8.161233,-2.493572,7.175917,-2.619326,3.448646,-1.691264,-7.385378,-1.903728],[-0.244557,0.168215,7.755871,-9.427502,-1.094459,5.013247,-6.602965,-7.033973,-6.912954,2.985280],[-8.014017,3.652021,-1.978463,7.854503,-6.215946,-1.834635,8.769885,1.544923,-2.566638,-7.742444],[-4.258447,-5.287636,-2.303294,-9.244389,5.055839,-0.474474,8.283534,7.225888,4.384970,-8.302117],[3.875075,8.062842,-8.274070,4.333158,-8.255006,-6.512781,9.724666,1.187237,3.496615,-4.770997],[1.405474,-1.297496,3.424332,-9.782658,1.266834,-1.954603,-4.887515,2.845971,-9.738400,0.305335]],[[-0.590815,5.025985,-8.807363,0.099106,-6.076120,-6.127207,6.594795,-0.496034,-9.771845,2.585769],[-3.804441,-2.989498,7.578607,3.142717,-5.344352,-7.337335,-8.131864,-3.322819,-9.506034,2.250801],[-4.987242,-5.071635,-3.182823,-0.147390,-9.894450,-2.641055,2.364584,8.892129,-2.811585,-9.600972],[5.982752,-3.302094,1.296850,-0.133104,-9.260934,-4.980298,8.600994,-1.225021,-2.393401,-9.194809],[5.014326,2.811511,-6.988887,4.915339,8.368048,3.139361,9.514772,6.859114,1.848549,-4.351063],[9.667271,-6.471110,-1.990566,-9.184720,6.506991,0.358508,-6.132424,8.061708,2.107493,5.348350],[-7.314356,3.120501,-6.724680,-8.345854,-6.298662,-1.107475,-2.490390,-5.688735,6.776944,4.197140],[2.686180,3.754084,0.265305,-5.767184,-1.940455,9.899305,0.516894,-2.678278,9.342189,0.831282],[1.992319,2.046848,-7.528842,-9.473018,5.039406,-8.424755,-6.280172,-4.974565,-3.531786,-7.827711],[-1.489450,3.636264,-9.054439,-0.443864,8.212850,9.532761,8.676130,-4.963616,-0.823495,1.234451]],[[-5.713856,0.659567,-2.283035,-5.174377,-1.064858,4.082979,-7.707944,-7.631746,-5.607290,1.578371],[-3.088707,-8.520819,4.523658,1.393302,-6.592053,9.193658,-7.998503,5.158177,-7.750424,3.938910],[2.525358,-6.571200,-0.173306,-7.662372,8.452309,-6.897807,8.445455,1.407428,5.199018,-5.020082],[8.081112,-8.185671,-7.819505,-5.897408,4.019513,-5.124499,-9.551099,-6.140586,0.717527,8.309198],[-0.666173,5.099341,0.145187,6.124011,2.181591,-1.646408,5.749385,5.425736,-1.737649,3.358618],[9.318707,-8.509083,-6.943563,-0.276631,-0.055631,-2.698319,9.232262,-1.943647,-7.792706,3.700971],[3.352150,-4.262318,-0.856084,6.230964,-5.919789,-4.891967,-8.336025,0.271880,-7.869241,-8.140354],[-3.042399,1.503249,-6.742239,-1.894871,1.824532,4.208722,8.961509,-2.545484,6.725878,-5.572157],[-7.719635,5.014181,-1.765523,1.547490,8.893796,8.870300,-3.115649,3.237472,-6.317459,5.969125],[-9.772938,-6.342691,-0.531165,0.560618,-1.713191,1.191702,6.603937,2.753315,-3.705157,-8.585363]],[[5.001257,5.387992,-5.700440,-2.256453,-3.665894,1.048840,-4.828091,-0.488264,-4.334455,-5.528574],[4.878958,5.174016,3.201350,-4.557486,9.270369,4.143010,-6.006521,-0.683631,6.312504,3.218312],[-3.604086,-3.815983,4.792151,3.531976,6.770065,-1.284527,-9.619510,3.969635,4.457967,2.802281],[-5.584648,4.788686,5.416696,1.471503,-6.605287,-3.297976,9.477809,-0.407514,5.943435,-2.963771],[9.592964,2.357831,-1.399032,9.753610,9.696124,-7.225962,8.511729,-6.287588,4.956668,-2.967139],[1.217683,-4.520468,6.629227,1.244179,2.989685,9.678417,-8.282345,-5.445442,9.972978,-0.871477],[-8.996005,-7.385524,-8.161980,-2.344798,0.170226,-6.982830,1.454879,4.978107,5.966414,1.747302],[8.610318,4.203354,7.832555,-3.159944,-1.220458,5.527308,-1.439470,-3.446561,3.110707,-2.093289],[1.511639,2.519016,-8.095989,-4.026048,3.222010,-4.691424,-6.104021,-0.477445,4.514620,6.616037],[-3.775246,-8.171321,-9.793101,4.413605,8.169998,-5.226236,-7.992003,6.765826,9.388088,-0.167746]]], dtype = "float64")#candidate|9896|(11, 10, 10)|const|float64
bop_9897 = relay.subtract(uop_9882.astype('int16'), relay.reshape(const_9896.astype('int16'), relay.shape_of(uop_9882))) # shape=(11, 10, 10)
bop_9900 = relay.subtract(uop_9884.astype('int16'), relay.reshape(const_9896.astype('int16'), relay.shape_of(uop_9884))) # shape=(11, 10, 10)
func_4499_call = mod.get_global_var('func_4499')
func_4503_call = mutated_mod.get_global_var('func_4503')
var_9907 = relay.var("var_9907", dtype = "int64", shape = ())#candidate|9907|()|var|int64
var_9908 = relay.var("var_9908", dtype = "int64", shape = (1440,))#candidate|9908|(1440,)|var|int64
call_9906 = func_4499_call(relay.reshape(var_9907.astype('int64'), []), relay.reshape(var_9908.astype('int64'), [12, 8, 15]), )
call_9909 = func_4499_call(relay.reshape(var_9907.astype('int64'), []), relay.reshape(var_9908.astype('int64'), [12, 8, 15]), )
func_1110_call = mod.get_global_var('func_1110')
func_1114_call = mutated_mod.get_global_var('func_1114')
var_9921 = relay.var("var_9921", dtype = "float64", shape = (6,))#candidate|9921|(6,)|var|float64
var_9922 = relay.var("var_9922", dtype = "float64", shape = (96,))#candidate|9922|(96,)|var|float64
var_9923 = relay.var("var_9923", dtype = "float64", shape = (605,))#candidate|9923|(605,)|var|float64
call_9920 = relay.TupleGetItem(func_1110_call(relay.reshape(var_9921.astype('float64'), [1, 3, 2]), relay.reshape(var_9922.astype('float64'), [16, 3, 2]), relay.reshape(var_9923.astype('float64'), [11, 55]), ), 1)
call_9924 = relay.TupleGetItem(func_1114_call(relay.reshape(var_9921.astype('float64'), [1, 3, 2]), relay.reshape(var_9922.astype('float64'), [16, 3, 2]), relay.reshape(var_9923.astype('float64'), [11, 55]), ), 1)
func_5828_call = mod.get_global_var('func_5828')
func_5832_call = mutated_mod.get_global_var('func_5832')
const_9937 = relay.const([[7,8,7,-8,-8,1,5,3,-1,-4,7,3,-9,-4,-4,6,-2,9,8,6,-6,-1,10,-5,-6,-3,-8,6,-7,-8,5,-2,8,6,-1,-1,7,7,5,6,3,-4,-6,-10,3,3,2,4,-7,6,-1,4,-7,5,5,3,3,-8,-10,-3,6,2,1,8,6,-7,-8,-7,4,-9,7,6,1,-10,-4,-5,-1,8,3,-2,-9,6,-4,4,-6,8,7,5,7,1,10,-2,3,5,-8,-4,7,-4,-4,-10,5,6,-9,-2,-8,-10,10,-1,3,-8,-4,8,4,-2,-2,1,-10,1,-9,8,7,6,-9,10,-5,-3,-1,-10,-2,-3],[7,-4,-2,6,2,-7,-1,6,-3,4,-7,7,-7,-2,9,5,-1,3,-6,5,3,6,-6,-8,1,7,10,-5,-10,7,-4,7,3,-9,9,8,-7,-9,-9,1,8,7,3,6,8,-3,6,-8,-10,-10,10,-2,-2,-9,8,10,-2,-6,8,-6,-5,-9,-7,-4,3,-5,-1,1,9,-6,-1,-5,-3,6,2,10,-1,10,7,6,-7,-4,-1,4,4,-7,6,10,10,5,-7,1,5,9,-7,-3,-7,5,-1,-8,-8,-1,-4,8,-6,7,-7,5,-2,-3,9,-3,2,-4,6,-9,4,1,-3,-3,-9,4,9,-9,4,-9,-7,-7,10,-3],[3,9,5,7,-6,-7,-1,2,-2,10,-4,-7,3,1,7,-8,-7,10,-6,8,-5,8,9,5,-4,7,6,-8,-10,-2,2,-9,-4,10,6,-3,-4,7,4,7,9,-3,-8,5,9,-8,7,9,6,3,-9,5,9,9,5,9,-9,-10,3,-6,-5,3,-4,3,-4,-4,-3,8,-8,-5,-2,9,-9,10,-8,-4,3,-5,4,4,6,-2,-6,1,9,9,10,-3,-6,-1,-9,7,6,8,-2,9,2,-7,4,-2,-3,6,-6,-4,-4,-7,2,5,-6,10,-5,5,4,6,9,-3,-7,-10,8,7,9,-4,-8,10,4,-3,1,-8,10,-3],[10,-3,-4,1,-7,3,10,8,6,3,8,-1,-4,5,1,-2,5,9,10,-1,-6,-4,2,8,10,10,-7,-8,-7,6,-3,10,-6,5,-9,-5,-1,-5,1,-10,7,2,10,7,-4,-7,1,-3,10,-5,4,-6,-8,-9,6,-3,-9,7,4,-9,6,5,5,6,-6,4,10,-9,3,-1,-7,-4,-9,8,-6,2,-2,9,5,-3,-4,-2,-9,5,9,2,10,4,8,3,-10,-4,-3,2,-8,-10,-3,9,5,5,1,10,5,1,8,5,-10,-10,4,3,-6,6,-7,-3,-10,6,6,-5,10,6,1,-5,2,3,9,10,1,7,3,-10],[-6,6,-2,7,-6,-1,-4,-7,-4,-2,8,-10,-10,-7,-5,-5,3,7,2,-7,-6,-7,-5,-7,-7,-3,3,-6,-8,-5,1,-8,-3,10,-8,6,-5,4,-7,2,2,-9,-7,-7,9,10,1,-6,4,10,5,7,8,2,2,1,7,8,-6,-1,-8,7,-10,4,9,5,9,-3,-3,6,1,1,7,4,-6,-2,-9,-4,2,-4,-3,6,-2,10,-8,-1,4,-6,3,8,-8,-6,9,-7,-9,3,-9,3,-10,7,1,-4,1,-8,2,4,6,7,9,6,5,9,10,7,4,5,-3,-10,1,-9,-8,4,-4,-1,7,2,-9,-7,-2,9],[10,1,5,10,-1,-10,5,-3,5,5,-3,3,7,-1,8,-4,3,6,7,3,-6,-7,9,1,5,-7,2,-10,-3,7,-10,10,8,-1,-1,-5,9,7,3,3,3,-8,-9,-3,1,4,2,-5,9,7,2,8,-3,1,-4,-6,4,1,2,8,3,-3,5,7,-5,7,-4,1,1,-5,-8,-3,5,-8,7,8,-7,4,2,7,6,7,8,-9,-1,7,7,4,5,7,-9,3,-10,7,10,7,7,-6,-1,-5,1,-4,3,8,-9,1,4,3,2,-3,-3,6,6,4,-9,2,2,-6,-3,4,-3,-1,10,8,5,2,-4,7,-2,-7],[-3,-9,-2,-1,-3,-8,-1,-3,4,-2,-5,-6,-5,-6,5,6,-2,-2,-3,-1,7,3,10,-8,-7,5,9,8,-4,10,10,7,4,6,2,4,-9,-7,2,5,-10,-1,2,2,8,5,-10,7,6,1,-3,7,-3,10,4,5,8,2,9,-5,-7,-4,7,-3,9,10,1,1,-4,7,10,3,-2,-5,-8,-8,3,2,-7,10,8,-5,7,-3,1,-10,-4,7,7,-6,4,-8,8,-4,4,1,4,-3,4,-4,5,-3,9,6,-6,1,-8,7,-10,1,5,-7,7,-1,-7,-5,-1,3,10,5,10,6,-4,4,-3,9,-8,-8,8,8],[-6,-8,-1,8,10,7,-9,10,5,-7,-10,6,-5,-6,6,8,5,1,-9,-9,-4,9,-1,-9,2,3,-4,-1,-5,-2,1,5,6,-3,-6,-1,1,4,-8,8,-8,-3,2,-1,-1,10,-1,-9,10,3,6,-6,6,9,-2,-6,-10,3,3,10,7,7,4,6,-7,2,4,10,-8,4,6,2,-8,-9,-9,4,-1,-3,-6,3,-9,-7,-2,1,-6,10,6,9,7,7,-8,-3,4,6,-6,-3,3,-5,7,-5,-4,6,-6,-6,-4,2,-3,-3,-10,7,7,10,10,-2,-5,1,-1,1,-5,-4,-1,-2,-1,3,3,7,10,9,7,10],[-10,3,-9,1,-5,-4,1,-3,3,4,-6,8,-10,-9,-10,-1,9,2,-2,1,-9,-4,-10,-3,-2,9,-9,5,5,8,-2,-8,5,-8,-4,-4,3,5,4,-8,-6,6,5,-5,-5,8,6,-8,-5,-9,5,-3,-1,4,8,-2,1,10,-1,-8,9,-6,9,5,-8,4,8,-4,6,4,3,10,6,-2,4,3,-6,-10,3,-1,-10,8,2,6,-1,-4,8,8,2,1,2,3,5,4,-9,-10,-10,8,10,10,6,-6,7,-8,-6,7,5,5,-3,9,-4,2,9,5,-6,3,-10,6,-4,6,-5,9,5,1,3,-2,3,10,-6,3],[10,5,6,-5,8,-2,6,-5,5,1,-10,-4,8,6,7,-9,-5,6,8,2,3,-10,-7,-4,-3,-10,-1,-5,-8,-5,10,3,8,7,-1,3,6,6,8,-4,6,-5,10,-6,-1,-7,-4,-6,-10,-10,5,6,7,-3,-2,10,-2,-5,-3,3,1,-4,-10,9,5,-10,5,10,-6,8,1,-5,1,5,10,-9,-8,10,-5,-10,10,-1,-6,8,-5,1,6,-8,8,2,-3,-3,-6,-3,-3,1,2,10,-4,-1,7,-6,-10,10,10,-7,5,-8,-2,1,-3,-9,-4,-3,9,9,6,7,-10,5,10,-6,4,5,-4,-3,9,-2,-3,3],[-8,6,-8,3,1,-1,-10,6,-9,-1,-7,10,8,-3,6,3,-10,2,-3,7,1,-6,5,8,-3,8,3,8,-1,-2,-6,-3,-5,4,7,5,1,2,1,9,9,6,5,-5,6,3,4,10,-10,1,-8,-9,6,-3,3,3,-9,-6,-2,3,2,-1,4,8,-6,3,-3,-2,-6,-8,-7,1,-9,-2,-1,10,-1,-10,2,8,6,1,4,2,6,-8,-10,-9,-9,-1,-6,-6,4,1,-5,-2,-10,4,-6,-5,4,-7,6,5,-9,-10,9,-1,1,9,-10,-8,-5,6,7,-4,-9,-7,-9,2,3,2,-5,7,6,3,6,-6,-4,-10],[6,-3,-7,9,5,5,-3,-9,1,-6,1,-2,-3,-8,5,-7,4,-7,10,-10,-7,-4,1,1,-1,-8,8,-9,-10,-7,5,-5,2,1,-8,-1,-5,7,8,7,-7,-2,-4,-8,-6,-9,-7,-9,6,4,-2,-9,10,10,-6,-7,-1,-1,-10,1,-2,-8,-7,-1,-8,7,10,6,3,-7,-4,-3,-5,-1,-3,-4,3,5,8,2,-3,-7,-4,4,-8,8,7,-6,8,-1,10,-6,-5,4,1,3,-7,-8,3,10,-4,3,2,6,-9,-8,10,3,-9,1,4,-1,-4,2,2,9,10,7,-3,1,8,10,-7,5,1,3,2,6,4,3],[10,2,-6,-6,-2,3,-8,9,-10,-9,-10,6,-8,-10,-2,10,7,-6,1,-3,8,-2,-1,-2,-3,1,5,9,-2,8,10,-10,10,-1,5,-3,-2,-9,-5,-3,4,-4,-3,-2,10,3,-6,10,-6,-6,-4,5,-3,8,-7,-6,7,8,3,-7,8,6,10,1,-6,8,-5,4,9,-3,3,7,-1,9,7,-8,5,-10,-1,-10,7,5,-3,7,10,-8,1,-10,2,-6,-5,-5,-10,5,7,8,-5,3,3,2,2,-6,-7,5,8,-10,6,5,-10,9,8,-1,-2,3,-6,9,-6,3,3,-3,-9,-4,-8,-5,9,-8,-3,2,-3,5]], dtype = "int64")#candidate|9937|(13, 130)|const|int64
const_9938 = relay.const([0.646630,-9.898187,-5.938557,3.689713,-9.542738,1.796403,-2.764956,-6.788689,-6.910303,-1.587616,-5.351887,1.064362,-2.195103,4.625443,2.772958,-9.728661,-2.529532,6.535714,-8.456278,8.396148,2.521048,9.991783,9.924820,-6.756840,5.075468,3.366194,9.301432,6.400933,6.110071,5.430493,1.724893,-5.063888,-0.914441,-3.328999,-5.626105,-5.035577,-5.953982,1.081718,0.728800,-2.747919,0.652776,-2.127251,-4.900350,-2.074367,8.836374,-4.108212,5.010500,-1.746530,7.673847,-3.260870,3.839642,1.111488,-7.716465,1.976268,-6.690110,-3.461856,0.592432,-4.381240,-3.237227,-9.945127,-1.781857,-5.196411,8.942771,8.526632,-5.400774,-1.930371,-1.200221,1.371869,2.082459,7.810102,-4.544847,0.789537,-0.322049,-0.141986,-5.646442,-4.349763,1.448067,-9.810695,-9.237879,1.292165,7.152708,-6.364250,1.262265,2.675224,-1.823989,-2.317968,-7.032927,-9.698391,8.348929,-0.706975,8.410410,-2.553254,0.111239,0.012767,3.045442,-3.713346,9.029557,-0.341638,7.238409,5.656613,-9.407888,-8.174868,3.854793,-7.425649,2.003368,-2.607930,9.656670,-9.665735,3.878487,-1.182632,-4.905200,8.675741,1.407834,8.170637,0.944513,-5.372746,-1.958000,1.592660,-4.345553,0.917572,-4.690219,-6.945433,-9.578910,-1.316195,2.951149,-8.659770,-9.495617,9.701287,-4.307410,-9.165617,2.822620,4.922938,3.475379,3.548980,-4.937760,-1.569382,-5.567777,8.970434,5.610715,-9.980950,-0.678642,-1.739177,-1.647523,4.431127,-6.019494,3.135296,-6.198821,-7.499435,8.336797,4.969335,-5.938586,-4.061515,2.968424,9.737700,5.967085,5.321828,1.835761,-8.477537,0.986838,-2.286441,6.588365,7.258639,-7.222089,-6.179230,5.116560,-3.960107,6.293263,-2.516966,-8.860124,1.549181,7.731160,3.726154,-4.655104,-7.553496,2.303095,-5.821800,-5.973284,9.366223,0.099028,-0.649904,6.714917,-2.028423,4.125484,4.789188,-7.227009,-2.718684,9.906859,-2.997839,0.491907,6.748281,3.714554,-6.954424,4.122129,5.633407,5.907740,5.051048,-1.544538,6.649968,-5.886271,6.912504,7.463312,-8.244801,6.578707,-1.692515,-4.079318,-0.374545,2.009434,4.773828,-9.326110,8.019602,0.106828,-8.286740,-5.257540,9.679889,3.963498,-5.231044,-7.053386,0.207219,4.562487,9.950582,-7.674868,-0.904771,-0.898375,-3.509185,-9.842940,-8.322015,4.456544,5.347564,-3.035071,-0.729760,4.055285,-1.630247,-4.186436,8.453887,3.213567,9.088234,-5.426458,-6.545244,3.488823,2.365393,-0.163080,0.997032,8.289461,-6.954524,-8.994732,9.996290,7.483924,0.323885,7.019466,9.625952,3.563800,-1.734122,-6.696286,-8.913193,-1.633776,8.035045,4.191721,-0.537453,7.216543,-7.122804,5.144142,9.610505,8.577606,-6.265116,-9.211061,-7.935445,-8.313906,0.326539,3.806804,5.352459,-4.038438,-0.260427,7.302772,-0.356451,1.261272,-5.579758,-5.881910,0.794989,4.419958,-1.575778,-6.412079,7.906570,-8.875902,7.932648,8.552102,3.643417,-6.770754,3.071776,-4.268363,-2.510428,5.086808,-1.925584,3.843749,2.283618,-5.798595,-1.003090,-8.540210,4.777589,-7.863606,-2.456787,7.082082,1.899259,-2.538997,-3.411179,-5.719737,-9.517240,6.221043,6.571163,1.217352,9.066419,8.515168,-3.369115,-9.438519,-0.855206,-3.792559,-5.371280,-2.854312,3.712998,-9.490767,1.412815,8.523721,-0.140770,-3.034652,4.426405,8.440645,9.607490,-9.245909,-3.603199,-3.434047,4.113877,-6.829069,-3.842542,-8.261388,4.918891,1.451217,7.143209,-3.578919,-6.453858,-4.456571,-2.564283,-7.960266,-5.544201,8.970752,3.415626,6.634121,4.336336,-8.374133,-9.032990,0.382892,-2.467856,-5.565451,4.678094,3.117959,0.678336,6.990191,4.827093,-6.388298,-7.113114,4.182050,7.052614,1.873156,-1.707887,-9.157360,-5.588764,-7.519800,1.379898,-7.113953,9.284890,-8.521257,8.720457,6.360147,2.253539,-9.793403,1.942162,-4.373379,-5.203838,0.862116,3.515371,6.578676,-8.220861,-9.777617,-2.677307,-3.398864,0.076578,7.493674,6.034213,1.436368,-3.040482,-6.912114,1.257412,-1.344598,-9.489504,-3.416169,4.540940,8.131415,6.420601,1.642448,6.013352,-5.590508,-2.445012,4.746993,-9.576623,4.710872,7.117030,-3.857544,-6.630417,-1.941562,2.004693,-2.488946,0.354010,-1.336298,-1.919437,-6.485516,1.705930,-5.555119,-0.933032,9.572768,-2.014230,0.667988,0.837203,7.831265,-8.343139,-3.198235,-6.038221,6.936046,5.849796,7.669628,5.053269,6.004874,-9.747602,4.829302,3.847175,1.174993,0.603507,1.786116,-9.629402,-6.078931,2.828972,-2.883890,4.802942,1.729649,1.301774,-7.481439,-2.913481,-4.682857,1.526212,-9.486649,-0.807789,2.360331,-5.100961,-4.400702,2.079473,-3.887222,-8.938129,-5.226016,-8.063295,-9.490687,-4.757181,-9.364847,-6.725760,3.705566,-6.086351,-9.672332,5.598314,-2.623716,1.449356,4.215469,1.279240,1.064114,-4.046829,-9.110142,3.594859,1.131858,8.693845,-7.105772,-9.720155,-6.026738,6.502378,4.351534,-1.144218,7.049496,5.176210,-2.886194,-8.129791,-0.922082,9.746259,2.428374,3.775539,9.219971,-4.461411,-7.466330,3.074074,-0.506775,6.596689,-4.692504,0.932549,9.883198,-4.388695,-9.321702,1.001149,2.878378,2.607286,1.193419,1.769947,4.979988,8.390964,-2.213589,-8.950070,7.091232,3.683889,9.797645,7.572972,8.029596,-0.531946,-9.390623,-1.198697,4.716175,-1.768010,-2.107111,0.313987,-1.209280,6.847804,1.236992,4.397552,5.246271,-2.484567,7.220336,-0.546222,7.614609,-4.785816,-0.924091,-6.626964,-4.766991,9.788914,-1.664565,0.956658,7.412826,-9.870239,-8.371991,9.336291,-7.198403,2.084266,-0.704972,-6.494557,-6.122069,3.069129,2.103030,-1.934966,5.506493,-8.701171,-4.792815,-2.968713,-7.038400,3.108440,-5.993683,-8.588336,-8.487564,-9.944626,7.532466,3.771531,-2.286902,0.596070,-5.234158,4.082081,4.834725,6.676338,3.572792,1.778316,-4.805533,5.185314,6.579938,3.241262,9.252503,-0.405160,-8.124743,-2.480272,8.092255,-0.195766,-2.104793,2.105383,0.407919,8.255696,-8.661557,-5.835818,7.794794,6.492061,-8.293915,0.101750,-9.291667,-8.970666,9.999559,3.963181,-1.771496,-2.207358,-1.341937,-4.854863,-4.634265,-6.708244,-3.367107,-6.648862,-0.835225,5.860351,-0.642149,-9.138457,-5.778527,-7.498641,-3.850049,-8.881370,4.675974,2.799112,-4.943552,-8.291275,0.811715,5.821811,9.202798,-2.074636,2.051059,-1.538375,-1.504837,1.416738,-6.263462,-7.905160,0.455778,3.302459,3.981951,-8.438201,3.213382,-1.375821,-4.917590,-1.480416,0.024194,3.295797,-0.870861,5.784543,6.845378,-3.787971,-9.687891,-2.579880,6.306367,-3.756527,-3.517983,7.662857,1.453617,-5.086527,6.503256,-1.693155,1.747684,-9.822903,1.132643,-7.980730,-4.710559,-0.985738,7.143871,-6.501006,8.454040,1.953142,-0.714120,1.373927,0.225573,4.499606,-5.010310,9.645183,6.194503,-1.880698,6.428091,5.232035,9.389462,-3.943232,-9.595873,0.448463,-4.878272,0.877755,3.725506,-5.120104,6.551879,-3.019507,4.924440,3.241861,1.841629,-5.576029,8.383063,-8.187146,8.641491,7.931132,7.494410,4.798296,-1.348711,-0.338941,0.255210,-0.473569,-2.918561,6.468638,-9.023833,0.450965,-4.829473,5.471106,5.788467,-8.718211,-5.700669,9.138913,-6.462329,7.759139,3.190407,6.764236,5.525874,2.091409,-2.477376,2.473140,-3.382186,-6.510383,-9.260578,-7.736015,5.364314,8.084291,-1.418786,2.316847,6.917630,2.356760,4.322938,-1.110811,-6.683571,-6.469737,-3.515775,-6.229517,-2.451527,7.651426,-2.934132,2.908727,-1.261576,7.327341,7.930123,2.281707,-8.080996,7.659258,7.494163,-5.438361,-7.693937,-5.372422,-0.029817,3.312087,7.797140,-4.044228,-2.622886,8.165125,-7.824047,3.877212,-9.569766,-9.767686,-9.744647,-5.494562,3.200721,2.345060,4.106656,-8.887583,-6.042854,1.439181,-6.896547,4.244701,8.664591,9.912547,-4.315951,3.008544,-9.105110,5.370919,2.024875,-5.243954,-0.868303,-5.368942,-9.035169,5.975061,-7.574308,-6.670886,-5.653119,9.635658,1.003815,8.796973,-9.002986,-7.497467,8.908471,4.423021,2.551814,9.780444,3.178893,7.036392,0.508246,6.913483,5.289711,-2.279899,8.794622,5.345561,6.304849,-8.912939,1.969419,-2.867420,-5.750388,-7.068795,0.628899,0.589064,8.959603,-7.041801,-8.745095,3.220255,-4.018125,8.079705,6.494595,-5.829828,-9.724442,-8.004375,7.007007,-7.786146,-1.668009,9.748509,-7.981800,3.729358,8.024308,-5.565395,2.527284,-5.831623,-4.017430,7.146485,-0.303132,-8.868871,2.763646,4.953417,9.002538,-0.776159,-6.923684,9.964502,4.502945,-4.047361,9.236038,-7.352193,-9.734891,-7.620431,-9.606690,9.007854,7.374368,7.681136,-4.006366,0.183158,-3.700880,-1.718971,1.344184,-6.698700,-2.708541,7.470311,8.235083,-3.464359,-9.482354,-9.156314,-5.818208,-2.724590,9.522801,-8.605995,-4.812946,2.915730,-7.510994,6.474823,-1.481532,-8.033454,-6.631893,-6.566810,8.121762,-1.768015,7.864171,-5.029477,-4.080026,7.375858,7.556070,3.689790,4.203222,-9.172314,-2.111880,8.055363,0.296968,9.455063,5.717948,-8.161143,-3.619054,2.775348,2.390576,-4.858731,-5.151603,-8.156549,3.019769,9.277026,-8.072584,-5.710747,6.212036,3.255536,8.480621,-4.917046,-1.335251,6.707609,0.728366,-9.708354,7.625003,-9.226284,-7.177835,4.602617,6.523925,-7.118822,-1.573649,-9.764324,-2.255680,7.037605,9.554671,7.999960,-3.160558,-8.773528,5.194708,-9.550855,7.654991,-4.938009,1.704740,-4.508590,-6.393301,1.274472,9.315225,-5.027155,0.162755,-0.318767,6.314061,3.117028,-0.882883,-2.024362,-1.943724,-6.413308,1.230732,-1.034116,-4.807955,5.594856,6.678222,-1.694555,3.728069,7.989527,-2.174636,1.230360,2.431954,8.434292,-4.790775,3.048464,-2.355370,3.877832,-4.375002,4.359984,-5.529365,9.580565,3.093160,-2.054571,-8.146652,3.935885,8.207548,-3.588202,3.843064,6.832225,1.240641,8.122550,-2.815345,-5.058382,-4.235160,-1.630700,-9.241452,-0.482665,8.262144,-2.721965,-9.833800,-4.006313,-0.887228,-2.982280,-2.079664,-4.363044,-9.391554,1.609509,-6.669329,3.767422,3.199203,9.331788,9.588587,8.846145,-6.389434,-6.636001,-3.557227,2.926421,-9.723507,-5.700418,7.194680,-3.100528,-8.608340,-4.899094,6.457925,2.810703,7.829955,1.093971,8.303425,4.019934,-3.426101,-0.498860,-5.235568,-4.753504], dtype = "float32")#candidate|9938|(1000,)|const|float32
var_9939 = relay.var("var_9939", dtype = "float32", shape = (630,))#candidate|9939|(630,)|var|float32
call_9936 = relay.TupleGetItem(func_5828_call(relay.reshape(const_9937.astype('int64'), [1690,]), relay.reshape(const_9938.astype('float32'), [10, 10, 10]), relay.reshape(var_9939.astype('float32'), [630,]), ), 3)
call_9940 = relay.TupleGetItem(func_5832_call(relay.reshape(const_9937.astype('int64'), [1690,]), relay.reshape(const_9938.astype('float32'), [10, 10, 10]), relay.reshape(var_9939.astype('float32'), [630,]), ), 3)
output = relay.Tuple([call_9864,call_9866,const_9872,var_9873,bop_9897,call_9906,var_9907,var_9908,call_9920,var_9921,var_9922,var_9923,call_9936,const_9937,const_9938,var_9939,])
output2 = relay.Tuple([call_9865,call_9867,const_9872,var_9873,bop_9900,call_9909,var_9907,var_9908,call_9924,var_9921,var_9922,var_9923,call_9940,const_9937,const_9938,var_9939,])
func_9942 = relay.Function([var_9873,var_9907,var_9908,var_9921,var_9922,var_9923,var_9939,], output)
mod['func_9942'] = func_9942
mod = relay.transform.InferType()(mod)
var_9943 = relay.var("var_9943", dtype = "uint64", shape = (1, 1100))#candidate|9943|(1, 1100)|var|uint64
var_9944 = relay.var("var_9944", dtype = "int64", shape = ())#candidate|9944|()|var|int64
var_9945 = relay.var("var_9945", dtype = "int64", shape = (1440,))#candidate|9945|(1440,)|var|int64
var_9946 = relay.var("var_9946", dtype = "float64", shape = (6,))#candidate|9946|(6,)|var|float64
var_9947 = relay.var("var_9947", dtype = "float64", shape = (96,))#candidate|9947|(96,)|var|float64
var_9948 = relay.var("var_9948", dtype = "float64", shape = (605,))#candidate|9948|(605,)|var|float64
var_9949 = relay.var("var_9949", dtype = "float32", shape = (630,))#candidate|9949|(630,)|var|float32
output = func_9942(var_9943,var_9944,var_9945,var_9946,var_9947,var_9948,var_9949,)
func_9950 = relay.Function([var_9943,var_9944,var_9945,var_9946,var_9947,var_9948,var_9949,], output)
mutated_mod['func_9950'] = func_9950
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9975 = relay.var("var_9975", dtype = "float32", shape = (7, 2, 3))#candidate|9975|(7, 2, 3)|var|float32
uop_9976 = relay.asin(var_9975.astype('float32')) # shape=(7, 2, 3)
func_7287_call = mod.get_global_var('func_7287')
func_7290_call = mutated_mod.get_global_var('func_7290')
const_9979 = relay.const(9, dtype = "uint8")#candidate|9979|()|const|uint8
const_9980 = relay.const([[-4,6,10,1],[5,10,-5,-4],[5,-10,5,-9],[6,-2,-5,9],[7,1,7,7],[-5,8,10,-6],[-9,8,-8,-7],[-4,-1,-7,-8],[10,-4,-3,-6],[9,-10,-5,4],[1,-10,-10,5],[-7,-2,-9,-1]], dtype = "uint8")#candidate|9980|(12, 4)|const|uint8
call_9978 = func_7287_call(relay.reshape(const_9979.astype('uint8'), []), relay.reshape(const_9980.astype('uint8'), [6, 1, 8]), )
call_9981 = func_7287_call(relay.reshape(const_9979.astype('uint8'), []), relay.reshape(const_9980.astype('uint8'), [6, 1, 8]), )
func_674_call = mod.get_global_var('func_674')
func_678_call = mutated_mod.get_global_var('func_678')
var_9986 = relay.var("var_9986", dtype = "float32", shape = (704,))#candidate|9986|(704,)|var|float32
call_9985 = func_674_call(relay.reshape(var_9986.astype('float32'), [11, 4, 16]), relay.reshape(var_9986.astype('float32'), [11, 4, 16]), )
call_9987 = func_674_call(relay.reshape(var_9986.astype('float32'), [11, 4, 16]), relay.reshape(var_9986.astype('float32'), [11, 4, 16]), )
output = relay.Tuple([uop_9976,call_9978,const_9979,const_9980,call_9985,var_9986,])
output2 = relay.Tuple([uop_9976,call_9981,const_9979,const_9980,call_9987,var_9986,])
func_9998 = relay.Function([var_9975,var_9986,], output)
mod['func_9998'] = func_9998
mod = relay.transform.InferType()(mod)
mutated_mod['func_9998'] = func_9998
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9998_call = mutated_mod.get_global_var('func_9998')
var_10000 = relay.var("var_10000", dtype = "float32", shape = (7, 2, 3))#candidate|10000|(7, 2, 3)|var|float32
var_10001 = relay.var("var_10001", dtype = "float32", shape = (704,))#candidate|10001|(704,)|var|float32
call_9999 = func_9998_call(var_10000,var_10001,)
output = call_9999
func_10002 = relay.Function([var_10000,var_10001,], output)
mutated_mod['func_10002'] = func_10002
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10091 = relay.var("var_10091", dtype = "uint16", shape = (13, 5, 13))#candidate|10091|(13, 5, 13)|var|uint16
const_10092 = relay.const([[[1,-4,7,-4,-9,-10,-8,-4,-6,-4,-7,-1,-3],[-9,2,4,-9,-2,2,3,-4,-10,-6,7,-7,4],[-9,3,7,2,-1,1,-7,-6,1,-10,-4,9,5],[5,-8,-5,1,-9,-9,8,-7,2,3,3,-9,1],[3,5,-6,7,-7,-1,10,9,-2,1,-5,5,3]],[[2,-1,5,-10,10,-3,4,-1,2,-6,3,7,7],[-9,10,10,-3,-4,5,-3,2,3,-7,10,6,-8],[3,-2,-7,-3,-4,8,6,-8,-6,5,6,-3,-4],[10,-8,-8,-6,-1,3,10,1,-5,-8,5,3,-1],[9,1,6,3,2,6,4,-2,5,6,-10,10,-5]],[[1,6,8,5,-3,3,-6,9,-4,9,-2,8,10],[-1,5,7,6,9,3,3,6,1,-2,3,-3,-4],[9,-5,9,9,-1,-1,2,-1,3,-8,-2,10,-9],[-2,5,9,9,5,9,-3,10,5,5,6,2,4],[3,9,-6,8,8,-7,1,-4,-6,9,2,-8,4]],[[4,8,-1,3,6,-3,-1,2,-8,2,1,1,-3],[-8,2,7,-7,4,-9,-7,6,-9,-1,-9,-4,-10],[-8,-7,-4,6,-4,-1,-9,8,-4,2,7,9,2],[4,8,1,5,-8,2,6,-4,-8,6,10,-2,-1],[4,6,9,-2,-6,-4,-10,1,-4,-9,-5,-3,4]],[[2,6,7,-7,-5,-7,-5,9,-5,2,10,-4,-8],[7,-2,7,-9,1,-4,-10,-7,8,-9,3,-6,9],[-3,-5,2,4,-3,9,-3,-7,-9,8,6,-1,-2],[1,1,4,-3,-5,-2,-10,-10,-6,-9,2,4,7],[-5,-4,-3,7,-7,8,-1,-6,1,-10,4,6,3]],[[-5,-7,6,1,2,-7,7,-9,3,-7,-7,-6,1],[-4,-5,-4,-5,-3,6,-3,7,5,-3,1,6,-6],[8,9,1,-8,-2,9,7,8,-5,10,-10,-7,1],[10,6,2,5,-7,9,-5,10,-10,-5,10,9,3],[5,4,-8,5,8,9,-3,4,-2,2,-2,-8,-1]],[[10,-8,-1,4,1,10,5,-7,3,-1,-9,5,-6],[4,-5,-2,-6,7,5,5,-3,-6,-2,5,1,4],[10,3,-6,9,3,6,4,-1,5,7,-10,6,-5],[1,6,10,-3,-1,-10,-10,-2,4,-10,-6,-10,2],[-5,-6,-9,8,10,-3,-9,-4,5,-5,2,2,6]],[[-6,-1,8,7,6,-1,-1,-10,-6,9,1,-5,10],[6,9,1,10,-6,-8,2,-8,10,-4,4,-1,-1],[6,9,-3,-7,8,-10,10,7,-10,3,2,9,-6],[-7,5,-1,3,-6,-8,-9,-3,-5,6,2,-2,5],[-10,1,7,-3,7,-3,6,7,2,-10,-6,7,-8]],[[-9,6,6,8,2,-7,-8,-10,5,10,-10,7,-7],[-5,-4,-3,-5,6,-7,-1,10,5,-2,-10,-3,-6],[-3,2,-3,-4,2,-9,8,-10,-2,5,9,-1,-7],[8,1,4,7,4,5,-9,7,5,5,-10,6,-10],[-5,8,2,-3,-9,7,-5,8,-10,6,-6,1,-6]],[[-8,-6,1,-9,-5,-4,6,-7,9,-3,-9,-3,8],[-6,1,-2,6,9,-1,-6,-3,-5,4,-9,4,-2],[-5,-8,6,-6,7,8,-7,-1,-9,-5,7,-9,-1],[-6,2,-8,6,-4,3,9,-9,1,8,-4,-9,7],[-10,7,-5,-6,2,6,3,10,9,6,-10,1,1]],[[3,6,-3,6,-8,4,10,2,-4,5,3,-5,9],[5,1,7,5,-6,10,10,-7,-3,-10,2,-2,-8],[-10,-1,8,10,4,-7,-3,-9,7,2,-4,10,2],[6,2,6,-8,-2,4,10,-1,9,10,-8,5,-2],[7,-3,-7,-2,4,10,4,2,1,-8,-1,-8,-4]],[[9,-8,-10,-4,-5,-1,-9,-4,1,-8,-10,7,3],[6,8,-10,1,9,-7,2,5,1,-10,-2,7,-4],[-10,4,6,7,-1,-2,-6,-2,5,5,7,3,-2],[-8,4,3,-2,9,8,3,-2,-2,5,1,7,-9],[1,4,6,10,8,6,-2,-10,-1,-2,10,-1,-5]],[[7,8,8,8,3,-6,8,6,-3,-8,-1,-8,6],[-4,-4,-9,2,-7,-9,2,10,2,-3,-1,7,9],[-2,10,6,-5,2,9,3,4,-10,-1,6,10,4],[-6,-3,-10,4,3,3,-8,1,-8,-3,6,9,-8],[3,-2,9,9,-5,-9,6,-6,-9,3,-4,-8,-5]]], dtype = "uint16")#candidate|10092|(13, 5, 13)|const|uint16
bop_10093 = relay.equal(var_10091.astype('bool'), relay.reshape(const_10092.astype('bool'), relay.shape_of(var_10091))) # shape=(13, 5, 13)
output = relay.Tuple([bop_10093,])
output2 = relay.Tuple([bop_10093,])
func_10105 = relay.Function([var_10091,], output)
mod['func_10105'] = func_10105
mod = relay.transform.InferType()(mod)
var_10106 = relay.var("var_10106", dtype = "uint16", shape = (13, 5, 13))#candidate|10106|(13, 5, 13)|var|uint16
output = func_10105(var_10106)
func_10107 = relay.Function([var_10106], output)
mutated_mod['func_10107'] = func_10107
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9814_call = mod.get_global_var('func_9814')
func_9815_call = mutated_mod.get_global_var('func_9815')
call_10112 = relay.TupleGetItem(func_9814_call(), 2)
call_10113 = relay.TupleGetItem(func_9815_call(), 2)
output = relay.Tuple([call_10112,])
output2 = relay.Tuple([call_10113,])
func_10123 = relay.Function([], output)
mod['func_10123'] = func_10123
mod = relay.transform.InferType()(mod)
mutated_mod['func_10123'] = func_10123
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10123_call = mutated_mod.get_global_var('func_10123')
call_10124 = func_10123_call()
output = call_10124
func_10125 = relay.Function([], output)
mutated_mod['func_10125'] = func_10125
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8760_call = mod.get_global_var('func_8760')
func_8761_call = mutated_mod.get_global_var('func_8761')
call_10180 = relay.TupleGetItem(func_8760_call(), 0)
call_10181 = relay.TupleGetItem(func_8761_call(), 0)
uop_10186 = relay.acos(call_10180.astype('float32')) # shape=(5, 2, 5)
uop_10188 = relay.acos(call_10181.astype('float32')) # shape=(5, 2, 5)
func_3978_call = mod.get_global_var('func_3978')
func_3980_call = mutated_mod.get_global_var('func_3980')
var_10191 = relay.var("var_10191", dtype = "bool", shape = (2304,))#candidate|10191|(2304,)|var|bool
call_10190 = relay.TupleGetItem(func_3978_call(relay.reshape(var_10191.astype('bool'), [9, 16, 16])), 2)
call_10192 = relay.TupleGetItem(func_3980_call(relay.reshape(var_10191.astype('bool'), [9, 16, 16])), 2)
output = relay.Tuple([uop_10186,call_10190,var_10191,])
output2 = relay.Tuple([uop_10188,call_10192,var_10191,])
func_10196 = relay.Function([var_10191,], output)
mod['func_10196'] = func_10196
mod = relay.transform.InferType()(mod)
var_10197 = relay.var("var_10197", dtype = "bool", shape = (2304,))#candidate|10197|(2304,)|var|bool
output = func_10196(var_10197)
func_10198 = relay.Function([var_10197], output)
mutated_mod['func_10198'] = func_10198
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8265_call = mod.get_global_var('func_8265')
func_8267_call = mutated_mod.get_global_var('func_8267')
call_10210 = relay.TupleGetItem(func_8265_call(), 0)
call_10211 = relay.TupleGetItem(func_8267_call(), 0)
func_5015_call = mod.get_global_var('func_5015')
func_5017_call = mutated_mod.get_global_var('func_5017')
const_10224 = relay.const([-9,-10,8,-9,9,1,2,-6,-5,9,2,6,5,2,3,6,2,8,-3,8,1,-1,-7,-10,-2,10,-2,8,6,-9,-5,-3,-4,-8,-8,-9,6,-9,-7,-5,8,2,2,7,-2,-6,-5,6,8,6,-10,4,-5,9,4,10,9,-1,-2,6,-7,2,1,-1,2,6,2,-8,-5,-8,8,10,-8,8,-1,5,-9,2,-5,-1,-2,-8,9,1,10,-10,7,-8,2,6,-2,-3,-6,-1,8,9,-10,-4,3,-10,7,3,-1,9,-9,-7,6,2,-5,-4,-6,4,-9,5,-6,-7,7,8,-3,3,4,4,2,-1,-8,1,-9,10,-5,-2,-9,7,10,-6,-4,6,-1,-5,6,-9,2,-2,8,1,-6,6,3,-3,-9,-8,8,-9,6,-1,2,1,-1,-7,5,-2,-2,-8,4,-9,-10,5,3,-8,-10,3,8,-7,5,10,5,-2,-10,1,-2,6,7,4,5,-9,1,-8,6,-10,3,-2,1,3,-4,7,7,10,5,6,-5,7,-8,5,-2,6,6,-4,-2,10,3,2,1,6,5,9,6,6,-3,-8,7,-2,4,9,3,3,-7,8,8,-5,3,-3,-10,-2,9,9,6,8,-7,7,6,-8,5,-10,-9,6,-9,-10,7,5,6,3,-7,-3,9,8,9,10,-1,9,-5,3,-5,6,-7,-1,5,6,-8,-8,-8,-4,-2,5,5,5,-10,-8,1,10,-3,4,4,1,8,10,-6,5,9,1,-3,-5,-7,9,-5,8,7,-7,2,4,7,-6,-8,-1,10,-2,10,-7,8,-5,-2,-2,-4,1,-9,6,10,-1,4,7,5,6,-7,-2,-8,10,1,8,-3,1,-7,-9,10,7,-3,-5,-4,-4,7,-5,-5,4,7,1,-2,-1,1,6,-2,-3,-7,-3,-3,-1,-5,3,9,5,-9,5,1,2,8,3,-3,6,7,1,10,-10,8,6,1,5,-10,-5,8,2,7,7,2,-10,-7,-8,-4,-4,2,-4,-3,-6,1,5,9,5,-5,-6,10,-5,-8,3,-1,-6,9,7,1,7,5,1,-1,1,-3,-4,-4,9,4,-6,1,10,-4,-3,10,-8,4,-2,6,-3,-2,-1,8,10,5,6,10,7,-3,-10,2,10,7,-3,5,3,4,6,5,-3,2,6,7,7,-4,3,-6,2,-6,6,2,1,-5,-8,-10,1,-10,3,10,7,8,-2,4,-8,10,2,-5,-5,-9,-1,4,1,8,-1,-8,4,10,-10,1,-5,-2,-4,1,5,2,8,-7,2,-7,-4,3,8,-6,-8,-6,10,1,5,3,1,-8,-3,-10,-8,2,-9,-2,8,7,4,10,-5,8,-4,-4,8,6,6,-10,2,-8,7,-9,-7,3,-4,-7,-8,1,-8,1,-4,1,4,6,-1,8,-4,5,5,-3,2,8,-5,-4,-1,-8,1,-6,-1,2,9,-2,-6,4,-4,10,7,8,8,-4,8,-7,1,5,-8,-4,6,7,2,3,8,-3,-5,6,6,2,2,-2,-3,-7,-3,-7,8,1,7,7,1,-2,-3,-10,10,1,-1,7,10,-8,-4,4,-9,1,10,3,7,6,6,1,7,-8,-6,6,-8,1,-9,3,9,-6,-1,10,6,10,-3,-10,4,3,-2,8,-3,-3,3,2,9,2,-1,-7,-10,1,-9,-6,-8,3,-7,-1,7,7,-9,5,-9,9,1,6,-5,7,-7,-5,1,6,-8,-2,-2,-6,-8,-10,-7,-6,5,10,-1,1,9,3,-5,-9,6,7,-8,9,-5,-4,6,-3,-4,-10,-9,10,-9,9,2,9,7,7,1,3,7,-8,-7,-3,-3,5,5,1,10,10,-8,-1,-4,-4,6,-9,-5,5,10,-5,2,5,7,3,-8,9,-9,2,-1,-8,-4,-2,-6,2,-9,-8,-9,10,1,-3,-4,6,5,9,-4,6,4,8,-7,3,-9,6,-4,-4,-10,5,-9,1,8,-1,7,-2,-7,10,-1,7,5,-8,4,5,8,1,-2,-3,-2,-5,-4,-9,-5,3,1,-6,7,-5,-5,-6,2,-10,8,7,10,9,8,4,-5,1,-1,2,10,-9,-10,8,10,8,-3,-10,-8,-6,-4,-2,-9,5,-10,8,-6,5,-3,10,10,3,-5,-6,-1,9,-5,4,-4,4,8,3,2,-2,2,-8,1,8,6,1,8,-3,-1,-7,-8,8,-4,1,-1,-10,-6,7,-4,5,1,-7,6,-10,-9,-3,-9,-4,-1,10,10,7,10,5,-1,4,-8,10,3,2,-8,-8,5,-9,-8,10,-9,-6,-1,3,-3,3,-1,5,3,-5,-2,6,-6,-6,4,-4,1,1,3,3,4,7,-6,-9,-2,10,7,3,-10,10,3,6,8,-5,5,8,3,-5,10,10,8,7,-5,-3,-7,9,-8,3,6,6,-7,1,2,3,-1,5,2,-7,10,1,2,9,-9,-6,2,6,-8,1,4,5,6,5,2,4,1,-1,-7,2,3,-1,-2,4,6,2,-1,3,5,-5,7,8,5,10,-10,-10,-10,7,7,-2,9,3,10,-5,-4,-1,2,-1,-1,-10,3,3,10,5,-1,2,-10,-8,-1,-5,-5,-7,10,-3,1,1,3,9,-3,-3,-3,2,10,-4,-5,7,7,-9,4,-7,5,-6,1,-4,-10,-7,-9,-6,9,1,1,5,2,7,6,-8,2,-3,-1,-7,1,-6,5,1,-4,-9,10,4,-10,7,-5,-10,1,1,-8,5,-6,-2,-4,6,-5,2,-3,-7,-7,10,9,2,1,6,-6,9,-3,-5,-3,-3,-8,-2,-3,-5,-3,-4,-4,6,2,5,2,-1,6,-2,-7,-5,-1,-7,8,-7,-6,5,9,-3,3,10,3,-2,5,8,-2,8,-10,10,-4,8,7,-10,-5,9,3,5,1,7,-3,8,7,-1,-1,-6,-5,7,-10,-10,1,4,7,2,-7,3,-1,7,9,5,-6,-6,-7,-5,-1,-1,2,-6,3,8,6,-1,-6,-5,6,-6,-2,7,7,-4,7,-9,-1,2,5,-5,3,8,-8,-4,-6,9,5,7,8,-8,-9,7,-4,-3,9,7,-7,3,9,-10,-10,-3,6,6,-3,2,1,-1,8,-3,-3,-1,7,-8,3,-3,8,9,6,-10,10,-9,9,8,-6,-6,-3,-1,-3,1,6,3,8,10,7,-2,-9,-8,3,-8,6,7,-3,2,-9,5,6,1,-10,-7,10,4,10,-2,9,-1,-5,6,9,5,-2,-3,-8,2,7,7,-9,-9,-4,-4,-10,-7,3,5,3,10,-2,-2,7,-10,-3,2,-5,-5,-1,-1,-3,-7,2,-8,4,10,1,8,-8,-4,3,-7,8,-1,-10,-1,-1,-1,2,9,9,4,5,-10,10,8,-4,6,-6,3,9,2,4,-4,5,4,7,4,10,7,-9,-5,-1,-7,8,-4,5,7,-9,8,6,-8,10,5,7,1,-8,-9,9,-5,-5,6,-4,3,-5,7,-5,-6,-6,-6,-4,9,7,-10,-5,5,-5,1,-5,-3,5,4,7,-4,3,-6,-9,1,-4,-2,8,-8,-10,2,-5,-6,7,10,-9,8,6,-1,10,1,-4,2,4,-5,-3,10,2,-8,-5,4,5,-8,-8,6,-10,4,3,8,-10,-10,7,-10,-5,9,-9,3,-9,-2,1,-6,8,7,-10,7,-5,2,8,-3,2,-2,-9,2,-8,-6,6,-10,-4,4,-1,3,-1,-9,8,-1,-6,-1,1,-4,2,8,1,-2,6,-10,-8,-2,-7,9,3,-6,-4,7,-2,4,2,-10,1,-10,10,3,-3,9,6,-7,-8,1,2,9,8,6,7,-4,9,-5,-4,-9,1,-8,5,-7,10,7,5,-6,9,-4,-1,5,2,1,6,4,-5,6,10,3,3,-4,5,-5,3,3,10,5,7,10,5,5,-6,2,-6,8,4,-10,-1,7,6,9,9,-8,2,-4,-9,7,-9,3,-3,-7,-10,-7,-3,6,-6,3,-9,-4,6,5,4,-5,2,-10,-9,-3,-5,-2,7,-6,-1,10,2,10,-1,-7,1,-10,10,-8,-9,9,-1,10,9,3,-9,-1,-7,10,9,3,-9,-1,-4,-9,-9,-7,-9,10,-7,1,6,-6,4,10,-3,-1,9,1,-2,8,-9,4,4,-8,-9,-4,1,-9,-5,-8,4,-1,3,8,-2,-9,-1,-9,-6,-5,-5,9,10,3,-7,-4,-2,5,8,-5,10,-3,6,6,-10,7,2,3,6,-7,-9,-5,7,8,-3,-8,-6,4,5,-4,-2,2,8,4,-1,10,-2,-3,-7,6,4,5,-7,2,10,8,-6,6,6,-2,2,7,9,5,-10,7,7,6,10,7,-3,-2,5,-6,9,-8,-10,-5,4,6,-10,-2,5,-2,-5,5,-4,-8,6,-10,10,5,2,10,9,3,-10,-8,-2,-2,-9], dtype = "int64")#candidate|10224|(1690,)|const|int64
call_10223 = func_5015_call(relay.reshape(const_10224.astype('int64'), [13, 10, 13]))
call_10225 = func_5015_call(relay.reshape(const_10224.astype('int64'), [13, 10, 13]))
func_5666_call = mod.get_global_var('func_5666')
func_5670_call = mutated_mod.get_global_var('func_5670')
const_10241 = relay.const(9, dtype = "uint64")#candidate|10241|()|const|uint64
const_10242 = relay.const([[-8,-1,-3,-9,-3,9,7,5,10,-8,-1,2,-3,-10,2,8,4,-1,2,1,5,9,3,-2,4,-1,-2,4,9,-4,5,-3,9,5,3,9,3,8,5,-10,9,3,6,7,-3,-6,-2,9,-2,5,8,1,-5,1,10,9,5,-3,1,-6,-10,5,1,3,8,-7,3,10,-1,-8,-2,-4,-10,8,6,6,-6,8,-4,-1,1,9,-9,4,1,3,-10,10,2,1,-4,6,7,9,4,-6,-9,-9,-5,8,-6,9,8,7,-1,-9,-5,-9,8,-4,10,-7,4,-7,10,6,6,3,-7,5,-9,3,9,6,9,-10,-1,-10,-5,-5,2,-3,7,4,8,-1,2,-3,-7,-8,1,7,-5,9,4,4,-7,6,-5,-7,-8,2,-4,2,-3,8,-6,-8,-2,10,-2,1,3,3,-8,3,-1,-7,-9,4,7,8,7,-6,-4,4,-3,7,-4,6,-3,7,1,6,-3,1,-4,-7,6,1,-2,-8,-4,2,5,10,-4,-1,3,4,8,9,-6,-5,2,2,3,-10,5,2,10,8,-1,9,-6,3,10,-8,-10,9,-8,-7,-1,5,1,-7,-3,2,-6,9,8,8,6,6,-8,8,-8,-7,4,-6,-3,-3,-10,10,10,7,-3,-5,2,5,-8,8,-9,-6,8,9,7,-6,9,-2,-7,-6,-8,9,4,-10,10,8,-2,4,8,-1,-5,1,-5,4,6,2,3,-1,-7,9,8,7,-4,10,-6,7,8,-7,3,-2,-3,10,-6,-5,4,2,-3,-2,2,1,2,9,-7,2,-2,-10,9,-3,3,-9,3,-8,10,5,3,10,-5,-5,9,-4,-2,-8,-4,-7,10,-5,9,9,-7,-3,-10,4,-4,-10,6,6,8,-6,-4,1,-1,6,4,-1,-10,9,-9,-7,-4,8,1,-6,7,-1,-7,4,3,-9,-5,-7,-7,5,1,-1,-9,5,-2,-8,2,-9,-4,-8,2,3,10,-2,-8,4,-3,4,-3,-1,-9,5,8,2,-8,-8,-10,10,3,-8,3,10,-7,7,3,-7,6,-4,8,8,-6,10,9,7,-4,-1,-7,10,-5,-5,6,1,-4,8,-10,-9,3,2,9,-2,-4,-9,-3,-8,7,-7,3,-5,-2,10,7,8,-9,10,2,1,4,-9,-9,7,10,9,3,-2,-4,9,-2,-1,-9,-10,-2,7,1,5,4,-7,8,-8,9,6,-2,5,3,-6,-7,-3,5,7,7,7,-3,-6,8,10,3,1,2,-9,1,7,-10,-7,10,3,5,9,-4,-9,-8,-2,-6,6,8,-4,1,-9,10,9,9,7,4,1,10,2,10,1,-6,3,2,-5,9,-7,-1,10,10,5,5,2,8,5,8,2,-5,-10,-4,-2,-8,-3,5,8,-1,9,-10,3,-5,-6,6,-8,4,-8,2,3,-10,8,8,-1,10,-6,3,8,10,2,1,7,-8,6,-6,10,3,-1,6,1,4,-6,-9,-4,8,6,-7,-5,-9,-5,-7,-1,4,3,-6,6,2,-6,6,-1,-9,2,-10,-1,7,4,-2,6,8,6,6,5,-1,10,-2,-10,5,-7,10,-4,5,-2,-6,4,10,10,-9,-5,-8,8,3,3,1,-5,-9,9,-8,2,3,-9,-4,-10,-6,3,-7,5,8,-2,-9,1,5,-1,-5,10,-1,-3,-10,7,-8,-1,3,7,-4,-2,5,1,7,6,7,10,-2,2,-5,-7,3,-6,-4,8,1,2,-5,-7,-7,4,6,3,-6,2,-7,-2,9,-5,-2,-2,4,10,-9,2,9,-1,2,7,-10,-9,7,7,1,8,6,-8,-6,-10,7,-10,-9,-3,6,9,8,4,1,-3,5,6,3,-2,6,3,-3,2,-5,-3,7,-8,-1,-2,6,-5,-1,2,6,-3,5,8,9,8,-8,-7,-4,-2,7,-7,1,6,2,-6,-4,-3,-6,-5,-10,1,5,-3,-10,5,-8,4,4,-3,-10,7,9,2,-8,10,-1,7,8,-6,4,-8,4,4,-4,4,-6,-7,-10,10,-8,-9,-1,5,-6,-8,2,5,-9,-4,7,-8,-1,-8,6,1,8,2,-4,-9,-10,3,4,-8,8,-8,1,8,1,-1,5,10,1,3,1,-8,-8,4,10,6,5,-4,2,-8,-9,-9,-2,8,-2,-9,-2,3,1,-3,-1,-10,7,-5,-8,-1,2,3,-10,5,1,-3,4,-4,-5,-7,-8,-5,3,-3,2,7,-3,-8,-1,-4,-9,-7,7,8,-10,10,-4,-2,-6,-7,8,-2,4,5,3,8,-8,-6,8,-7,-1,-6,-4,9,5,10,-9,6,4,-1,-3,-10,-5,8,-2,-2,3,-7,6,9,-3,-5,-3,10,-4,-6,-9,10,7,-9,-2,-4,-7,-4,-9,4,-5,-8,2,8,6,-5,-2,-1,4,8,1,2,2,-10,-10,7,-3,-6,1,-1,9,6,-10,10,8,-1,-1,6,-9,-8,-1,6,8,-9,7,-7,-5,-8,1,10,-8,-6,-3,6,-9,3,-9,-5,3,7,-3,6,9,-6,2,8,8,2,-8,-5,3,6,9,9,5,-3,2,8,-1,-4,4,-4,-7,4,-3,2,-7,7]], dtype = "uint64")#candidate|10242|(1, 990)|const|uint64
call_10240 = relay.TupleGetItem(func_5666_call(relay.reshape(const_10241.astype('uint64'), []), relay.reshape(const_10242.astype('uint64'), [11, 10, 9]), ), 0)
call_10243 = relay.TupleGetItem(func_5670_call(relay.reshape(const_10241.astype('uint64'), []), relay.reshape(const_10242.astype('uint64'), [11, 10, 9]), ), 0)
func_10123_call = mod.get_global_var('func_10123')
func_10125_call = mutated_mod.get_global_var('func_10125')
call_10250 = relay.TupleGetItem(func_10123_call(), 0)
call_10251 = relay.TupleGetItem(func_10125_call(), 0)
func_4838_call = mod.get_global_var('func_4838')
func_4842_call = mutated_mod.get_global_var('func_4842')
var_10260 = relay.var("var_10260", dtype = "float32", shape = (312,))#candidate|10260|(312,)|var|float32
var_10261 = relay.var("var_10261", dtype = "uint64", shape = (1100,))#candidate|10261|(1100,)|var|uint64
call_10259 = relay.TupleGetItem(func_4838_call(relay.reshape(var_10260.astype('float32'), [8, 13, 3]), relay.reshape(var_10260.astype('float32'), [8, 13, 3]), relay.reshape(var_10261.astype('uint64'), [10, 110]), ), 3)
call_10262 = relay.TupleGetItem(func_4842_call(relay.reshape(var_10260.astype('float32'), [8, 13, 3]), relay.reshape(var_10260.astype('float32'), [8, 13, 3]), relay.reshape(var_10261.astype('uint64'), [10, 110]), ), 3)
output = relay.Tuple([call_10210,call_10223,const_10224,call_10240,const_10241,const_10242,call_10250,call_10259,var_10260,var_10261,])
output2 = relay.Tuple([call_10211,call_10225,const_10224,call_10243,const_10241,const_10242,call_10251,call_10262,var_10260,var_10261,])
func_10263 = relay.Function([var_10260,var_10261,], output)
mod['func_10263'] = func_10263
mod = relay.transform.InferType()(mod)
var_10264 = relay.var("var_10264", dtype = "float32", shape = (312,))#candidate|10264|(312,)|var|float32
var_10265 = relay.var("var_10265", dtype = "uint64", shape = (1100,))#candidate|10265|(1100,)|var|uint64
output = func_10263(var_10264,var_10265,)
func_10266 = relay.Function([var_10264,var_10265,], output)
mutated_mod['func_10266'] = func_10266
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8265_call = mod.get_global_var('func_8265')
func_8267_call = mutated_mod.get_global_var('func_8267')
call_10285 = relay.TupleGetItem(func_8265_call(), 2)
call_10286 = relay.TupleGetItem(func_8267_call(), 2)
const_10298 = relay.const([7.053339,-1.908963,-1.955515,-8.350984,6.937848,-1.453783,9.334531,7.194579,3.637584,1.927018,6.445256,-3.917490,-0.358441,-1.321862,6.417724,5.287567,-0.215021,-2.103043,3.056709,-9.015136,-9.654201,3.768376,-5.114295,-9.050837,8.760308,-6.209353,-5.881137,7.735367,-3.288953,-4.642106,-5.266814,-8.759146,9.533719,6.931071,-8.911746,3.698356,-8.941605,-7.083990,-8.276091,0.669346,-3.285842,-3.397191,-3.654822,0.513388,6.186597,6.895962,-3.350977,6.403082,-4.025394,-4.571704,-1.925838,0.900478,-3.525331,1.196750,-9.643312,-4.533241,-2.859243,-3.848015,5.310562,-0.014851,7.922612,-6.591082,9.445887,2.031139,-9.642069,-9.069664,5.054277,0.298219,2.472645,-2.926882,8.368851,1.519712,-4.607133,4.846622,4.916754,-3.108839,3.941027,-2.488307,-4.918521,-6.193713,5.534470,2.306722,-0.309871,-3.477957,9.202845,-6.399750,-2.408307,8.443845,1.198519,-7.715590,-3.191955,2.887664,0.471741,-8.295976,8.831116,-9.537262,-8.882618,9.220589,-1.025854,-6.582539,2.198016,2.363879,-4.487309,-6.378805,4.088992,9.196161,4.536036,4.635821,-5.775525,2.597377,-8.960282,9.234226,4.032389,7.998938,-5.063855,-2.958939,-8.111665,9.521761,-1.721790,-3.743954,-9.971610,4.771805,-3.013021,-6.279466,-2.953811,-4.537123,8.663242,5.927855,5.612667,9.686669,2.877473,5.949544,2.285259,-2.204148,-0.747968,6.782119,-1.658332,-9.702485,6.422640,-9.032604,-7.142483,-1.866709,-3.475346,5.705294,-7.376767,0.438787,-6.382718,-0.816958,-1.992212,1.556831,9.104946,2.903385,5.083939,5.052347,7.347760,-1.525849,-8.592171,1.796691,4.600422,-0.492937,5.126397,2.569440,-6.720650,0.504267,-1.312924,8.887509,3.483941,-7.885494,4.456446,2.007038,8.251402,-9.817746,-6.294118,-6.146354,-5.779653,-4.659585,-4.155983,7.981305,0.043953,9.845462,2.549413,1.593412,-8.785501,9.799624,0.519973,-3.342787,9.230352,7.617019,-0.953510,2.235855,-6.435537,9.651600,7.639852,-9.345355,9.495973,-3.662441,-3.048144,-4.689646,9.886132,-4.563059,-3.694422,6.018808,-3.536371,-8.498486,-4.605217,4.463610,7.136527,-7.562582,-4.431305,8.796500,-1.604135,-1.838339,9.145216,7.956780,7.283885,-6.281126,-3.936218,4.987692,-6.760747,-1.353421,5.035407,6.227203,-8.248051,9.554299,-3.825813,-2.514588,-2.425760,-2.166882,9.467924,9.698595,2.666727,3.564737,3.172728,-4.537336,-5.570790,9.846067,9.987647,-7.195700,-1.151085,-0.635175,-2.679259,7.989417,4.220662,-6.675662,-6.070244,9.794712,1.988252,5.691948,1.306998,-2.969918,-3.229418,7.365001,7.125954,8.456186,9.736019,-4.321359,7.211147,6.070025,2.652666,3.124444,3.043328,-8.192859,4.842920,9.725289,4.242165,-8.198029,9.774892,6.220270,5.310761,-2.201041,-3.592004,-3.086327,9.292033,3.817690,-0.656376,-3.969327,9.616241,-8.544202,-8.191465,-5.657580,-5.828370,-5.973910,-3.373965,-4.420130,-4.567760,2.525966,9.443323,-7.254004,0.085403,-9.799132,2.499554,1.412622,8.066421,7.398764,1.197365,4.196723,8.044699,-6.227608,-0.759133,1.364378,5.540651,1.994739,1.303297,3.297146,5.358194,-8.303445,-3.136292,-9.239437,3.728260,-7.180886,1.649062,-6.174447,1.694827,-8.441738,6.555685,-7.058778,-4.201562,-4.485565,-6.498914,-9.860399,4.524561,-6.056602,-1.759716,4.547093,-5.556336,0.116289,5.850835,-5.291049,-7.177749,-3.138884,8.584760,-4.380432,1.119815,8.181409,7.178106,3.747576,-3.016496,-1.499520,-9.263801,-0.499431,5.782999,-2.916014,-3.550134,2.628648,-5.608435,-5.371023,3.031430,6.190046,7.045825,-6.535584,0.279260,6.662300,5.080245,-7.292862,4.809164,-5.139310,-0.938741,-6.553431,-7.361031,8.903677,4.963520,-4.861720,5.601456,8.695845,-7.439765,7.975760,-8.345752,1.589832,-2.350149,9.499470,-5.000437,8.794200,0.817850,5.902313,6.064338,-3.584825,5.404321,4.993337,-6.494721,6.145263,-3.590663,-9.950983,-0.731279,-5.728827,-6.777370,-2.618150,-2.959540,1.559346,0.836529,8.297358,-5.020761,-8.713411,-1.617422,-0.603729,-6.988096,2.587761,-8.216661,2.848574,2.105185,8.351493,-6.737912,-3.924589,5.593160,-3.050688,3.433424,-3.065160,3.816474,0.995489,-2.741288,-9.922326,3.332464,-2.023558,-7.482287,-5.419979,0.905303,0.540166,-8.046779,-7.864534,9.478981,-8.651281,-0.315040,-9.096137,3.453444,5.328269,8.697491,4.936262,3.025210,-3.414142,7.043373,1.162329,9.134866,-6.237794,4.197355,8.545990,8.785293,6.988490,-9.299354,4.813723,2.927205,-2.727937,6.642061,3.735489,5.017897,-9.910947,1.455234,9.404025,-5.962368,-5.160397,6.292672,-0.216507,2.015475,-9.697771,-4.286406,-8.035912,5.831243,-2.665646,-9.485954,6.142018,-2.865326,-0.302521,-7.796908,-6.899108,-4.821637,-7.021406,-5.401243,-5.771192,-1.695910,-1.132965,4.572276,-2.002556,8.448491,8.216410,-4.469046,8.879051,-0.714710,-1.350757,2.188302,2.345674,8.462606,6.034742,-6.235475,-7.240190,8.966867,3.299827,2.208741,7.692344,9.928001,-4.780739,8.578273,-5.287251,4.304007,-4.638130,1.477541,-3.708966,4.816876,-0.524375,-4.475255,-1.704834,8.364987,-2.611385,5.951477,4.702348,-9.586957,6.939090,1.684360,4.834379,-6.843889,-6.481691,1.184343,4.151748,-2.422717,-4.220187,-0.659092,-6.646425,4.008530,-3.826582,-8.327446,4.453496,9.463245,4.042722,-1.460384,9.138029,-2.918086,-4.572775,5.053148,8.785719,2.959410,-9.535791,-4.942426,-9.773848,4.635688,5.972155,-2.903271,-2.575493,6.922636,4.933806,-6.019562,-7.334130,-3.309213,-8.639174,-1.867928,2.218507,0.495281,5.441133,5.882645,6.822184,-5.917167,-7.896359,3.425890,-3.774830,-5.472976,-9.695147,7.813344,-4.705956,6.899859,1.326114,-2.150559,-0.310127,-1.295359,2.611457,4.701683,-8.276497,9.065649,-8.295613,0.284424,9.259105,-2.262085,-1.238181,0.712872,1.190229,5.562786,-8.252469,-5.282293,1.157788,5.227296,-8.770281,-5.000750,-1.377070,8.422126,-3.726187,-8.928470,4.656305,-6.697069,-8.299825,-0.143645], dtype = "float32")#candidate|10298|(585,)|const|float32
bop_10299 = relay.bitwise_and(call_10285.astype('int32'), relay.reshape(const_10298.astype('int32'), relay.shape_of(call_10285))) # shape=(585,)
bop_10302 = relay.bitwise_and(call_10286.astype('int32'), relay.reshape(const_10298.astype('int32'), relay.shape_of(call_10286))) # shape=(585,)
output = bop_10299
output2 = bop_10302
func_10316 = relay.Function([], output)
mod['func_10316'] = func_10316
mod = relay.transform.InferType()(mod)
mutated_mod['func_10316'] = func_10316
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10316_call = mutated_mod.get_global_var('func_10316')
call_10317 = func_10316_call()
output = call_10317
func_10318 = relay.Function([], output)
mutated_mod['func_10318'] = func_10318
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10325 = relay.var("var_10325", dtype = "float64", shape = (15, 12, 12))#candidate|10325|(15, 12, 12)|var|float64
uop_10326 = relay.rsqrt(var_10325.astype('float64')) # shape=(15, 12, 12)
output = uop_10326
output2 = uop_10326
func_10328 = relay.Function([var_10325,], output)
mod['func_10328'] = func_10328
mod = relay.transform.InferType()(mod)
mutated_mod['func_10328'] = func_10328
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10329 = relay.var("var_10329", dtype = "float64", shape = (15, 12, 12))#candidate|10329|(15, 12, 12)|var|float64
func_10328_call = mutated_mod.get_global_var('func_10328')
call_10330 = func_10328_call(var_10329)
output = call_10330
func_10331 = relay.Function([var_10329], output)
mutated_mod['func_10331'] = func_10331
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8402_call = mod.get_global_var('func_8402')
func_8404_call = mutated_mod.get_global_var('func_8404')
call_10372 = relay.TupleGetItem(func_8402_call(), 0)
call_10373 = relay.TupleGetItem(func_8404_call(), 0)
output = call_10372
output2 = call_10373
func_10399 = relay.Function([], output)
mod['func_10399'] = func_10399
mod = relay.transform.InferType()(mod)
mutated_mod['func_10399'] = func_10399
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10399_call = mutated_mod.get_global_var('func_10399')
call_10400 = func_10399_call()
output = call_10400
func_10401 = relay.Function([], output)
mutated_mod['func_10401'] = func_10401
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10316_call = mod.get_global_var('func_10316')
func_10318_call = mutated_mod.get_global_var('func_10318')
call_10417 = func_10316_call()
call_10418 = func_10316_call()
func_339_call = mod.get_global_var('func_339')
func_342_call = mutated_mod.get_global_var('func_342')
const_10420 = relay.const([-7.921672,-0.017969,-1.293517,-1.913431,-0.376261,-9.967096,4.503807,-4.016567,3.762402,3.129067,-7.659450,-1.652654,4.606054,-5.390382,2.605777,-9.408114,0.439365,8.116219,-4.249957,3.044031,1.785980,-3.167830,9.996339,0.058302,3.066257,-0.417929,3.336965,4.852624,3.053337,9.516891,8.030145,-7.087551,-5.390818,-8.450966,4.193742,-0.792085,4.244457,3.191533,3.799143,-1.416361,7.061198,-7.981728,8.073083,8.421743,7.787880,9.030047,0.127154,3.579166,4.073049,-3.265346,4.907698,8.937859,6.310425,9.610997,-7.086200,3.656040,-6.513163,-5.984661,-5.931755,-7.568163,-5.995191,-0.897448,4.224646,5.758052,0.754301,5.573300,-3.013515,-8.789259,7.450247,-1.221782,2.616193,-0.218061,5.023038,2.914345,-7.174610,1.353028,2.620784,-7.722428,2.503924,1.222374,-6.081548,3.014863,2.313873,-2.774089,-8.973488,-5.668537,9.598197,2.176107,5.475469,-3.525798,0.687904,-1.835908,4.845800,6.962171,4.882015,5.780275,-7.692904,-7.016658,-2.508369,-9.576273,-3.894499,-6.957840,6.601608,-6.325016,-3.822487,5.552825,8.514297,-4.759011,-4.901586,5.479389,-9.901841,2.980964,-5.064494,3.453517,4.056435,0.496588,-5.903880,1.867598,6.786562,6.351568,-8.260153,0.347412,-6.180956,-0.664513,-8.997495,-7.380841,-4.555947,0.736315,-8.973252,-4.840693,-2.802894,3.175885,1.398275,2.763768,-1.297031,8.814162,0.700188,-2.521357,-2.327746,-8.496984,5.546900,-5.053866,6.091993,-9.706433,-0.971250,7.800781,-4.240934,3.438568,4.829424,-4.995119,1.663140,-2.264227,5.218079,2.153209,6.427497,-7.780898,-8.002917,-7.317155,-8.290050,9.298908,3.571446,2.452821,4.703521,-2.251174,0.356816,4.512074,-8.267089,8.388366,-7.838830,5.940524,8.648745,-6.125135,-8.179606,4.346854,6.890888,7.460509,0.791127,-3.008835,-7.469704,6.155257,-0.476270,-1.153636,-6.637094,-7.340100,-5.400548,-7.286577,9.286585,-7.699060,1.290031,-4.726175,-5.996427,-2.402865,-2.737616,1.007405,8.175267,9.305548,9.682263,-7.760291,1.661017,-4.676879,-8.820764,0.538400,-6.659691,-0.175854,8.416519,-8.545620,-1.974617,7.162444,-3.311357,8.787919,3.987491,2.498754,9.722770,-4.056964,-0.719574,-5.268962,6.513274,-0.525439,0.062391,-3.571959,3.633318,8.296741,9.290730,-1.449362,7.681924,1.935045,-4.209421,5.808460,-2.006967,7.551727,-8.438268,1.401949,9.336889,0.214273,-6.358066,-9.427256,4.861811,-8.485993,-0.010942,-1.320134,-0.223400,0.139873,-7.744086,-4.071705,-7.835869,4.782216,-8.167584,1.949138,-1.407653,-9.281855,-0.788721,-8.516444,-1.951375,-9.568473,7.362653,-6.392655,-7.501855,9.890873,-7.581323,7.511149,3.218920,-9.777107,5.322763,3.868969,-1.643922,4.444743,-4.045376,-1.470549,-6.927328,-0.439723,5.143628,6.023488,-5.336611,-8.820352,5.941103,6.143938,-8.423054,-9.783005,3.345480,3.378995,9.265556,-9.738721,-5.737062,7.207048,1.428387,1.273754,-0.601749,-0.249950,5.629440,-0.998994,-8.953057,7.118267,1.687603,6.914537,0.414929,-1.473816,1.176306,6.294839,-2.447259,-1.052038,-8.218612,-2.816233,-6.206392,3.607874,-2.491661,-1.645280,7.522017,0.988805,7.100470,-1.559602,-3.309734,-4.799427,6.838017,1.831293,-7.940080,-5.227243,4.208068,8.924693,2.957338,4.530829,-8.652867,5.876045,1.381837,-0.555175,3.891717,-3.979560,-7.638468,8.641309,-0.805487,6.636588,-6.375818,0.050870,-6.505346,7.432004,5.552907,0.379606,9.970072,4.947445,-9.578636,3.647409,-6.049145,9.130722,-1.145515,4.072630,0.417578,8.527011,-2.129408,-3.361205,-0.700711,-7.300218,-2.425184,5.253522,-7.793913,2.306483,2.459682,-3.474763,-8.713766,-6.797063,-4.447281,3.214800,-3.711369,0.432252,1.475644,1.662877,-3.692921,6.661487,-0.939743,-0.342583,1.964598,8.565758,-1.920042,1.445375,7.430267,-0.722328,4.157807,6.716798,-2.733150,-1.471905,-0.065141,5.458499,2.595662,-4.324820,-6.920137,4.937478,-8.158162,-5.528595,-8.492652,1.942157,7.832340,-6.609221,2.141931,-6.728745,-0.577916,2.640370,-5.590703,2.769509,7.909908,6.056480,-0.518688,2.006090,8.791617,-6.314116,7.001532,1.600181,4.551526,3.311042,-6.093692,-3.826690,-1.222920,1.589752,9.165159,0.204263,-2.379555,-6.206330,4.160259,0.012193,4.308715,-5.378638,8.080484,0.712604,8.385381,1.354341,-4.228445,2.804947,0.113314,6.159392,5.390963,9.940138,-2.855799,8.387354,-4.385480,-4.922373,-3.207362,-4.266260,1.550117,-1.508168,7.929290,-3.266530,9.673798,-6.314758,-7.070482,9.103112,-1.942655,-4.371160,-4.683966,-1.660294,-0.750341,-0.633123,-9.482368,7.583793,-0.031146,-0.328080,8.580698,5.961848,-9.394387,-5.223970,-9.693037,3.082360,-9.111912,2.378984,8.135119,0.968521,-5.134737,-8.253304,7.753732,-5.529183,9.662870,0.977214,5.177507,5.945615,-5.217270,7.447753,-0.680561,-2.526175,-1.120122,4.972661,7.310730,1.107877,8.345745,-7.334370,1.984495,-7.653877,-8.651536,-1.217009,4.937714,0.155893,9.060557,-1.581276,2.244669,-4.473325,-0.741776,7.845909,7.173422,1.966630,-2.519804,5.181915,9.467604,-6.315860,8.499482,9.411525,7.740091,-8.595383,9.029269,-3.136168,9.237035,-3.540816,-1.937673,-2.656251,3.745846,-5.554130,7.561433,4.034220,-8.081338,-3.595612,-6.811838,-1.393928,2.980970,-6.849518,3.873288,0.881958,-3.937666,-6.393725,-4.295139,-0.715963,-9.072766,3.095312,-9.900091,-9.161375,7.520424,-1.413891,5.679544,5.112552,1.551513,5.793231,-7.567388,-1.607064,4.201354,3.880872,4.865043,6.624765,3.998311,8.058911,1.500551,-6.541241,1.989482,4.905440,8.932514,9.054453,-3.257507,6.582652,9.183300,4.914059,-4.904891,-1.820638,-2.418005,8.297154,3.270260,9.841943,1.888302,6.091710,-3.369125,2.736430,2.656927,2.277630,7.386305,-8.780531,-8.988377,0.658965,-8.397698,-1.572812,1.150022,-5.910571,-2.793879,-2.028797,8.424205,-6.305453,-2.179014,4.799610,-7.082525,8.792080,6.273757,9.488401,-8.944105,-3.925300,-5.645551,8.403548,2.617662,-2.751794,-7.411483,0.002676,-0.904314,9.231437,9.030924,-1.080465,4.138385,9.299512,6.772663,-6.945001,-8.573611,3.636663,1.796878,-7.594715,-0.844642,0.705174,1.042249], dtype = "float64")#candidate|10420|(605,)|const|float64
call_10419 = relay.TupleGetItem(func_339_call(relay.reshape(const_10420.astype('float64'), [11, 5, 11])), 0)
call_10421 = relay.TupleGetItem(func_342_call(relay.reshape(const_10420.astype('float64'), [11, 5, 11])), 0)
output = relay.Tuple([call_10417,call_10419,const_10420,])
output2 = relay.Tuple([call_10418,call_10421,const_10420,])
func_10424 = relay.Function([], output)
mod['func_10424'] = func_10424
mod = relay.transform.InferType()(mod)
mutated_mod['func_10424'] = func_10424
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10424_call = mutated_mod.get_global_var('func_10424')
call_10425 = func_10424_call()
output = call_10425
func_10426 = relay.Function([], output)
mutated_mod['func_10426'] = func_10426
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8501_call = mod.get_global_var('func_8501')
func_8502_call = mutated_mod.get_global_var('func_8502')
call_10465 = func_8501_call()
call_10466 = func_8501_call()
func_9248_call = mod.get_global_var('func_9248')
func_9250_call = mutated_mod.get_global_var('func_9250')
var_10468 = relay.var("var_10468", dtype = "float64", shape = (50,))#candidate|10468|(50,)|var|float64
call_10467 = func_9248_call(relay.reshape(var_10468.astype('float64'), [5, 2, 5]))
call_10469 = func_9248_call(relay.reshape(var_10468.astype('float64'), [5, 2, 5]))
var_10478 = relay.var("var_10478", dtype = "float32", shape = (5, 2, 5))#candidate|10478|(5, 2, 5)|var|float32
bop_10479 = relay.mod(call_10467.astype('float64'), relay.reshape(var_10478.astype('float64'), relay.shape_of(call_10467))) # shape=(5, 2, 5)
bop_10482 = relay.mod(call_10469.astype('float64'), relay.reshape(var_10478.astype('float64'), relay.shape_of(call_10469))) # shape=(5, 2, 5)
output = relay.Tuple([call_10465,var_10468,bop_10479,])
output2 = relay.Tuple([call_10466,var_10468,bop_10482,])
func_10486 = relay.Function([var_10468,var_10478,], output)
mod['func_10486'] = func_10486
mod = relay.transform.InferType()(mod)
var_10487 = relay.var("var_10487", dtype = "float64", shape = (50,))#candidate|10487|(50,)|var|float64
var_10488 = relay.var("var_10488", dtype = "float32", shape = (5, 2, 5))#candidate|10488|(5, 2, 5)|var|float32
output = func_10486(var_10487,var_10488,)
func_10489 = relay.Function([var_10487,var_10488,], output)
mutated_mod['func_10489'] = func_10489
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10491 = relay.var("var_10491", dtype = "int32", shape = (2, 7, 16))#candidate|10491|(2, 7, 16)|var|int32
const_10492 = relay.const([[[-8,2,6,-5,-7,10,-10,2,-8,2,-10,10,7,-7,-3,-4],[5,-8,-10,-9,-8,4,1,1,-6,-5,9,-2,-7,1,-4,-10],[-3,-2,-5,-9,-2,-8,-8,-4,5,-1,-5,3,10,10,8,-2],[10,3,7,-6,-4,-3,7,-5,7,7,6,3,-3,-1,5,-4],[-9,10,-9,-4,5,5,5,4,-5,3,2,-9,-1,10,4,-10],[-10,-7,-9,4,-8,-3,1,4,-10,-9,-3,9,-9,-7,-2,-3],[7,3,-3,-9,-10,-4,2,6,5,6,4,-9,4,-3,4,9]],[[8,-9,-3,-1,-3,-3,-3,8,-4,3,10,8,-9,-10,-7,-6],[3,5,4,-10,-1,3,-1,9,3,-1,5,7,-10,-6,-6,-3],[8,6,2,-10,-8,-6,-3,-2,6,-1,3,-4,5,-2,-2,1],[-3,-3,-4,9,-7,-8,-9,-7,4,-5,-6,-1,-8,-3,8,-10],[4,5,8,7,-6,-6,-7,-9,2,9,-2,10,-1,-8,-10,9],[4,9,5,-9,-3,5,1,3,7,-1,10,7,-8,-2,7,-10],[3,-7,9,9,-3,4,-10,7,-6,-4,-2,10,10,-8,-5,-8]]], dtype = "int32")#candidate|10492|(2, 7, 16)|const|int32
bop_10493 = relay.greater(var_10491.astype('bool'), relay.reshape(const_10492.astype('bool'), relay.shape_of(var_10491))) # shape=(2, 7, 16)
var_10522 = relay.var("var_10522", dtype = "int32", shape = (2, 7, 16))#candidate|10522|(2, 7, 16)|var|int32
bop_10523 = relay.bitwise_xor(var_10491.astype('uint8'), relay.reshape(var_10522.astype('uint8'), relay.shape_of(var_10491))) # shape=(2, 7, 16)
output = relay.Tuple([bop_10493,bop_10523,])
output2 = relay.Tuple([bop_10493,bop_10523,])
func_10536 = relay.Function([var_10491,var_10522,], output)
mod['func_10536'] = func_10536
mod = relay.transform.InferType()(mod)
mutated_mod['func_10536'] = func_10536
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10536_call = mutated_mod.get_global_var('func_10536')
var_10538 = relay.var("var_10538", dtype = "int32", shape = (2, 7, 16))#candidate|10538|(2, 7, 16)|var|int32
var_10539 = relay.var("var_10539", dtype = "int32", shape = (2, 7, 16))#candidate|10539|(2, 7, 16)|var|int32
call_10537 = func_10536_call(var_10538,var_10539,)
output = call_10537
func_10540 = relay.Function([var_10538,var_10539,], output)
mutated_mod['func_10540'] = func_10540
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9339_call = mod.get_global_var('func_9339')
func_9340_call = mutated_mod.get_global_var('func_9340')
call_10551 = relay.TupleGetItem(func_9339_call(), 1)
call_10552 = relay.TupleGetItem(func_9340_call(), 1)
output = call_10551
output2 = call_10552
func_10563 = relay.Function([], output)
mod['func_10563'] = func_10563
mod = relay.transform.InferType()(mod)
output = func_10563()
func_10564 = relay.Function([], output)
mutated_mod['func_10564'] = func_10564
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9132_call = mod.get_global_var('func_9132')
func_9133_call = mutated_mod.get_global_var('func_9133')
call_10658 = relay.TupleGetItem(func_9132_call(), 0)
call_10659 = relay.TupleGetItem(func_9133_call(), 0)
func_8965_call = mod.get_global_var('func_8965')
func_8969_call = mutated_mod.get_global_var('func_8969')
var_10686 = relay.var("var_10686", dtype = "uint64", shape = (286,))#candidate|10686|(286,)|var|uint64
var_10687 = relay.var("var_10687", dtype = "float64", shape = (120,))#candidate|10687|(120,)|var|float64
const_10688 = relay.const([6.205689,3.823858,5.358571,1.701231,-7.298521,9.409064,-9.666465,4.902345,-3.412743,-1.537093,-8.766820,3.342437,6.298569,-9.034242,-8.185439,-3.942750,-8.119354,5.309641,5.588921,0.616356,4.267902,7.747385,3.800168,6.039225,6.326959,-2.123350,-1.551186,8.506601,-9.859923,-1.630124,8.835501,-3.562809,0.596344,0.705651,-9.014647,-1.545243,1.435040,-7.402531,-2.723469,4.607196,2.959786,-7.653764,3.837894,-5.306021,6.257912,-2.412379,4.499755,-7.159963,2.205913,0.670652,-3.551097,0.056897,1.984887,-9.825700,2.213358,5.054588,-4.853185,0.219552,2.956320,7.449044,-6.765904,-4.902140,0.603526,-6.138563,-3.531418,-2.111412,-5.387764,0.996019,9.286153,3.684841,7.276620,-1.287696,-4.327677,1.992066,5.501463,-1.018007,-1.708761,5.851222,8.312625,-5.385190,8.456378,-2.963872,-8.907304,1.672156,-4.206151,7.537360,7.865788,8.067910,1.692769,-8.673205,2.640035,-8.048751,9.741232,8.021143,-7.192688,-5.524487,9.408142,6.753170,-2.624458,6.465849,9.007723,-4.085769,-1.014036,7.448394,-9.736713,-2.399934,-9.814866,-0.298160,-9.277671,8.707226,5.566274,-7.958973,-7.644833,8.737469,-0.398838,4.612929,7.493704,0.534546,8.818777,8.213006,-7.733263,-0.922282,-4.661539,-3.267030,-4.907908,5.976018,0.807122,-2.677130,1.066738,1.119038,3.151503,-5.330297,-4.872434,-6.873988,-8.592563,-9.027343,-6.900371,2.222887,7.715563,5.359852,6.776604,6.322099,4.334247,4.663654,0.066326,-9.073567,5.767886,2.666740,-2.207094,-9.870402,3.154770,3.636415,2.949440,8.856029,-2.630501,-4.947962,8.391149,5.740677,-5.823934,-3.545860,9.795384,-6.812162,4.966258,-6.060119,1.481565,-4.521237,8.381355,-5.435000,-4.923507,6.038028,5.412539,3.661725,-2.742791,0.976071,6.364688,-3.948160,-6.030764,4.527161,1.068042,-4.904540,-5.712277,3.401061,-5.943713,-6.864685,0.693095,-6.944218,-1.924092,-9.167185,-9.677206,9.286756,6.263819,-1.690277,-4.515357,6.024047,8.947408,-5.797845,-3.690354,-9.627775,-3.950134,1.019309,-3.261608,-5.615376,3.941711,9.266664,-1.658289,9.675960,5.995509,1.031025,-3.760548,4.504995,-6.196350,9.667521,8.061581,-3.964706,8.180537,-9.571388,1.330474,-1.500057,2.503915,-2.537040,-7.186780,7.068941,0.224065,6.531455,7.619593,4.533398,-6.831545,-8.870017,-5.040505,2.393148,-3.021825,-9.246037,-0.652172,5.698690,-5.187564,2.440822,1.501694,-6.737281,-7.939508,-8.968259,-3.213892,8.203839,1.093056,3.419904,-2.789923,3.680375,-2.761007,-3.702485,-6.745043,-2.768883,8.455138,7.437103,-8.642830,7.434229,3.955830,-5.282460,-0.949029,-5.499545,0.492325,9.351902,0.260682,-3.711513,-7.138434,-0.781950,-5.295659,-8.014710,9.700761,8.313906,8.086868,-5.702274,-5.669850,6.857601,-6.840920,-0.620976,1.310910,-6.123225,-4.814254,-5.521430,1.252838,4.513640,9.171161,-6.366794,1.803821,-1.665840,-1.202363,2.174554,9.213977,9.080245,1.357993,0.214197,-0.352700,9.927294,-8.901954,6.773759,-8.936256,-3.759778,-6.219208,-3.996307,-3.444849,5.809102,0.510137,7.983619,6.877661,6.943223,7.649726,4.707730,-1.289335,-3.666885,-6.842905,-0.015627,1.302738,-4.102540,4.391829,9.808003,7.455166,9.129483,-9.047731,0.454324,5.731247,-3.957489,3.462399,-2.465498,-6.096218,-7.543462,2.830257,9.261370,8.435245,-3.994213,0.015806,-1.607591,-3.269351,1.066319,8.456408,-1.693217,4.188813,6.386019,-2.671968,-3.227870,-2.343404,3.875830,-4.715643,-6.781843,-9.671760,-8.811203,1.349852,-1.487235,-5.387533,-0.195608,-8.935019,1.921463,1.640867,-9.301749,-3.037164,-7.307392,-9.982651,-0.594812,-0.503759,-7.372508,-4.831030,-8.525904,-9.903132,2.577648,2.189445,-3.888663,2.799682,2.121948,-9.433470,-6.588115,4.776663,9.145993,0.869961,-3.536275,1.515193,-3.828780,1.195910,0.157408,-4.381038,7.968685,-7.401990,0.588365,8.225696,-7.198190,0.288915,-3.169371,6.328322,-2.099134,-3.076263,-5.651898,4.095586,2.361537,-4.933718,-1.462360,4.768621,-1.761310,7.452137,9.255690,-6.312241,-5.788491,5.610725,-4.816261,9.110385,2.326956,1.995951,4.424448,-3.221314,-5.193655,7.982959,3.773800,-0.313423,-5.798828,-2.354212,-3.187358,8.752063,-5.818073,9.263007,3.028997,4.842119,-0.657962,-1.736716,5.722297,-2.016161,8.703347,3.264577,0.596706,-2.616909,6.619683,9.761653,-9.365763,1.594948,7.102447,4.948614,7.128957,6.723609,-6.334055,2.928452,6.048536,4.988318,7.584918,2.665767,-5.087676,-7.396245,-5.403232,2.527221,-0.877684,7.193552,6.409763,-4.582551,6.106790,8.047656,4.887466,-2.285244,-5.094079,-6.272945,-3.261849,-4.379984,6.734270,-8.395095,2.047407,-6.342056,-6.156445,0.915329,0.028711,-4.824637,-1.075749,-0.842477,-9.827822,-1.769126,-4.576864,-1.652074,-4.586303,0.828741,0.395439,-3.507440,5.428862,-8.029847,-5.315752,0.515931,3.784098,2.227174,5.115244,-9.793628,-7.749281,1.812696,2.067983,1.928000,-9.924372,8.611076,-2.610437,-9.088999,6.991858,-3.923492,2.105471,9.421179,0.425284,-4.117989,-6.519757,9.691683,4.688325,6.073299,-7.250916,-2.181504,1.775832,2.042284,9.077199,3.593254,-6.247002,0.383832,4.944032,5.996419,8.828748,-7.495419,-0.530308,-2.788234,-3.589355,-0.063312,-9.380042,1.372921,-5.927753,4.635687,0.745317,-1.747145,-1.134018,7.162899,-8.578562,2.803237,-0.735341,2.939438,8.957264,-1.326811,0.705308,-6.906000,2.826357,5.348688,-4.713252,-0.001171,1.482989,-6.157668,-4.692477,-5.948571,-9.259061,-1.671706,9.628817,6.038343,8.319970,-6.738360,-6.667606,-8.846204,-6.467158,1.895581,-7.428170,-8.789038,6.126065,-9.731051,-7.590460,-1.052666,-4.455930,7.564023,7.643513,-4.943119,-8.667558,5.974961,0.443230,5.334836,-9.500320,7.569240,-2.056578,-2.209461,-5.115464,4.470144,5.242533,7.740310,-9.840699,8.553452,1.153045,-9.208667,-6.201243,-4.440479,6.231751,-9.096687,-1.834720,-2.665681,6.104787,-3.080777,2.840054,9.716126,-2.251023,-8.832323,0.320538,-5.954380,8.975176,2.305487,-0.482066,-7.688389,1.849757,6.750690,-9.707982,-0.328080,0.040678,2.009488,-0.228625,7.840093,9.158039,3.432525,-8.237932,7.779088], dtype = "float64")#candidate|10688|(605,)|const|float64
call_10685 = relay.TupleGetItem(func_8965_call(relay.reshape(var_10686.astype('uint64'), [286,]), relay.reshape(var_10687.astype('float64'), [120,]), relay.reshape(const_10688.astype('float64'), [605,]), ), 4)
call_10689 = relay.TupleGetItem(func_8969_call(relay.reshape(var_10686.astype('uint64'), [286,]), relay.reshape(var_10687.astype('float64'), [120,]), relay.reshape(const_10688.astype('float64'), [605,]), ), 4)
output = relay.Tuple([call_10658,call_10685,var_10686,var_10687,const_10688,])
output2 = relay.Tuple([call_10659,call_10689,var_10686,var_10687,const_10688,])
func_10699 = relay.Function([var_10686,var_10687,], output)
mod['func_10699'] = func_10699
mod = relay.transform.InferType()(mod)
mutated_mod['func_10699'] = func_10699
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10699_call = mutated_mod.get_global_var('func_10699')
var_10701 = relay.var("var_10701", dtype = "uint64", shape = (286,))#candidate|10701|(286,)|var|uint64
var_10702 = relay.var("var_10702", dtype = "float64", shape = (120,))#candidate|10702|(120,)|var|float64
call_10700 = func_10699_call(var_10701,var_10702,)
output = call_10700
func_10703 = relay.Function([var_10701,var_10702,], output)
mutated_mod['func_10703'] = func_10703
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9223_call = mod.get_global_var('func_9223')
func_9225_call = mutated_mod.get_global_var('func_9225')
call_10759 = relay.TupleGetItem(func_9223_call(), 0)
call_10760 = relay.TupleGetItem(func_9225_call(), 0)
func_10399_call = mod.get_global_var('func_10399')
func_10401_call = mutated_mod.get_global_var('func_10401')
call_10765 = func_10399_call()
call_10766 = func_10399_call()
output = relay.Tuple([call_10759,call_10765,])
output2 = relay.Tuple([call_10760,call_10766,])
func_10777 = relay.Function([], output)
mod['func_10777'] = func_10777
mod = relay.transform.InferType()(mod)
mutated_mod['func_10777'] = func_10777
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10777_call = mutated_mod.get_global_var('func_10777')
call_10778 = func_10777_call()
output = call_10778
func_10779 = relay.Function([], output)
mutated_mod['func_10779'] = func_10779
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10563_call = mod.get_global_var('func_10563')
func_10564_call = mutated_mod.get_global_var('func_10564')
call_10782 = func_10563_call()
call_10783 = func_10563_call()
output = call_10782
output2 = call_10783
func_10785 = relay.Function([], output)
mod['func_10785'] = func_10785
mod = relay.transform.InferType()(mod)
mutated_mod['func_10785'] = func_10785
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10785_call = mutated_mod.get_global_var('func_10785')
call_10786 = func_10785_call()
output = call_10786
func_10787 = relay.Function([], output)
mutated_mod['func_10787'] = func_10787
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8803_call = mod.get_global_var('func_8803')
func_8804_call = mutated_mod.get_global_var('func_8804')
call_10794 = relay.TupleGetItem(func_8803_call(), 0)
call_10795 = relay.TupleGetItem(func_8804_call(), 0)
func_9450_call = mod.get_global_var('func_9450')
func_9452_call = mutated_mod.get_global_var('func_9452')
var_10816 = relay.var("var_10816", dtype = "float64", shape = (605,))#candidate|10816|(605,)|var|float64
call_10815 = relay.TupleGetItem(func_9450_call(relay.reshape(var_10816.astype('float64'), [605,])), 1)
call_10817 = relay.TupleGetItem(func_9452_call(relay.reshape(var_10816.astype('float64'), [605,])), 1)
output = relay.Tuple([call_10794,call_10815,var_10816,])
output2 = relay.Tuple([call_10795,call_10817,var_10816,])
func_10818 = relay.Function([var_10816,], output)
mod['func_10818'] = func_10818
mod = relay.transform.InferType()(mod)
var_10819 = relay.var("var_10819", dtype = "float64", shape = (605,))#candidate|10819|(605,)|var|float64
output = func_10818(var_10819)
func_10820 = relay.Function([var_10819], output)
mutated_mod['func_10820'] = func_10820
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8803_call = mod.get_global_var('func_8803')
func_8804_call = mutated_mod.get_global_var('func_8804')
call_10831 = relay.TupleGetItem(func_8803_call(), 0)
call_10832 = relay.TupleGetItem(func_8804_call(), 0)
output = call_10831
output2 = call_10832
func_10833 = relay.Function([], output)
mod['func_10833'] = func_10833
mod = relay.transform.InferType()(mod)
mutated_mod['func_10833'] = func_10833
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10833_call = mutated_mod.get_global_var('func_10833')
call_10834 = func_10833_call()
output = call_10834
func_10835 = relay.Function([], output)
mutated_mod['func_10835'] = func_10835
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9223_call = mod.get_global_var('func_9223')
func_9225_call = mutated_mod.get_global_var('func_9225')
call_10861 = relay.TupleGetItem(func_9223_call(), 0)
call_10862 = relay.TupleGetItem(func_9225_call(), 0)
output = relay.Tuple([call_10861,])
output2 = relay.Tuple([call_10862,])
func_10865 = relay.Function([], output)
mod['func_10865'] = func_10865
mod = relay.transform.InferType()(mod)
mutated_mod['func_10865'] = func_10865
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10865_call = mutated_mod.get_global_var('func_10865')
call_10866 = func_10865_call()
output = call_10866
func_10867 = relay.Function([], output)
mutated_mod['func_10867'] = func_10867
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8760_call = mod.get_global_var('func_8760')
func_8761_call = mutated_mod.get_global_var('func_8761')
call_10895 = relay.TupleGetItem(func_8760_call(), 0)
call_10896 = relay.TupleGetItem(func_8761_call(), 0)
func_10105_call = mod.get_global_var('func_10105')
func_10107_call = mutated_mod.get_global_var('func_10107')
const_10906 = relay.const([[-5],[2],[-4],[-5],[10],[1],[-7],[-5],[6],[4],[5],[-1],[4],[7],[-9],[8],[-8],[1],[9],[2],[-10],[-3],[3],[-1],[8],[-1],[5],[-5],[10],[-8],[-9],[-3],[7],[10],[2],[5],[5],[8],[6],[9],[7],[6],[-3],[-8],[5],[2],[-2],[-2],[10],[5],[3],[7],[6],[8],[-5],[5],[-6],[-5],[-3],[2],[10],[-3],[-10],[1],[8],[4],[-6],[1],[-6],[-5],[7],[-6],[-4],[-2],[3],[7],[9],[-4],[-9],[-8],[3],[-10],[5],[-4],[-4],[4],[10],[4],[9],[10],[-1],[3],[-9],[6],[-6],[-4],[-8],[-9],[-10],[4],[1],[-3],[5],[4],[5],[-6],[-1],[6],[-8],[5],[-9],[-4],[-5],[-10],[5],[7],[1],[6],[9],[-2],[3],[1],[-8],[3],[1],[1],[-9],[7],[-5],[9],[2],[-5],[-9],[-8],[2],[3],[9],[9],[-10],[3],[-2],[-1],[7],[-7],[6],[4],[5],[8],[-2],[-2],[-8],[10],[-10],[-5],[3],[2],[-2],[8],[-3],[-4],[2],[-5],[-1],[3],[-3],[8],[2],[9],[8],[4],[1],[9],[-1],[3],[-4],[10],[-8],[3],[2],[-3],[-2],[6],[-10],[8],[8],[9],[10],[-3],[5],[-4],[4],[4],[-1],[-1],[4],[-7],[4],[10],[8],[-2],[-10],[6],[-1],[10],[6],[6],[7],[3],[-9],[-2],[6],[-1],[3],[-4],[9],[-7],[-7],[10],[3],[-5],[-3],[-8],[10],[-10],[-6],[4],[-2],[-2],[-6],[3],[-2],[-4],[-5],[-8],[-4],[5],[3],[8],[7],[-4],[10],[4],[-1],[-6],[3],[-2],[-2],[-8],[3],[-5],[-1],[4],[6],[-9],[2],[5],[-1],[6],[5],[9],[-5],[-5],[-9],[4],[-8],[-9],[-1],[-5],[7],[-9],[7],[-4],[3],[10],[-4],[-6],[-10],[-6],[3],[-1],[10],[2],[-2],[-8],[10],[1],[3],[6],[5],[-6],[5],[-10],[4],[-5],[7],[-9],[-3],[6],[-7],[8],[2],[-7],[-3],[3],[-10],[-9],[-2],[3],[-4],[-2],[-2],[7],[2],[-5],[-8],[10],[-10],[-8],[-1],[3],[1],[-10],[10],[6],[10],[4],[-9],[-1],[6],[1],[7],[-7],[8],[2],[-6],[3],[-8],[10],[-6],[1],[-6],[-10],[-7],[7],[-5],[9],[-10],[2],[10],[9],[10],[3],[5],[-5],[10],[7],[-2],[1],[7],[3],[6],[5],[8],[8],[-1],[4],[-1],[1],[-10],[8],[-10],[-6],[-1],[-2],[-4],[-10],[8],[-10],[3],[6],[5],[9],[-9],[-1],[-5],[-1],[-6],[-9],[-3],[-5],[9],[1],[3],[6],[1],[3],[-2],[-1],[1],[1],[3],[-4],[6],[-5],[-6],[10],[-10],[-5],[-4],[10],[-2],[1],[-5],[6],[6],[-3],[7],[7],[-1],[-6],[5],[-4],[-7],[-7],[-9],[4],[9],[-7],[8],[2],[1],[3],[5],[3],[2],[-4],[-5],[9],[7],[-1],[-2],[8],[-2],[8],[8],[-4],[-7],[9],[4],[-9],[1],[-1],[-2],[-8],[-6],[-5],[-6],[10],[8],[8],[7],[-7],[8],[6],[9],[-10],[9],[-7],[-4],[1],[-6],[8],[1],[-9],[-3],[-7],[10],[5],[-1],[4],[6],[-10],[-7],[-9],[-4],[3],[-9],[1],[7],[1],[9],[-2],[-3],[9],[-8],[3],[4],[1],[2],[4],[-2],[-7],[6],[-3],[8],[-4],[-3],[5],[3],[-9],[4],[-7],[5],[2],[7],[7],[-1],[-10],[-4],[1],[-8],[-10],[3],[-6],[-1],[1],[7],[6],[3],[-3],[-5],[10],[5],[-4],[-7],[-3],[-4],[-6],[8],[5],[-9],[5],[-4],[9],[-2],[-10],[3],[3],[-1],[8],[-4],[5],[-2],[4],[4],[-1],[8],[8],[8],[9],[-2],[-7],[8],[4],[6],[9],[1],[-7],[4],[-6],[3],[-1],[5],[2],[9],[-5],[10],[-5],[-1],[10],[-10],[-7],[-1],[-5],[8],[-3],[-1],[1],[-6],[-9],[-6],[-7],[6],[5],[-10],[5],[3],[1],[8],[1],[9],[4],[-8],[6],[-10],[2],[-9],[4],[-10],[1],[3],[-2],[-7],[2],[-2],[1],[7],[-3],[-2],[1],[-2],[-10],[2],[6],[-3],[4],[4],[4],[-8],[9],[9],[1],[-5],[1],[3],[-9],[-6],[8],[1],[10],[3],[-1],[7],[-8],[-2],[-6],[7],[7],[4],[-7],[-1],[-4],[5],[5],[-5],[9],[-6],[-5],[-6],[9],[-2],[-10],[-2],[8],[8],[-3],[-2],[-8],[-6],[-3],[7],[-1],[4],[7],[2],[9],[10],[-2],[-8],[-8],[-6],[5],[-5],[-4],[-5],[6],[-1],[-6],[-6],[5],[8],[-2],[5],[1],[-6],[10],[-10],[-1],[10],[-10],[6],[-9],[-4],[2],[-10],[9],[-10],[8],[-7],[-1],[-10],[7],[7],[-6],[7],[6],[-3],[-8],[1],[-8],[6],[-1],[-8],[-4],[-8],[10],[-7],[7],[-6],[5],[-1],[5],[-5],[3],[-5],[-1],[8],[-1],[-10],[3],[-1],[5],[1],[4],[-7],[1],[7],[1],[10],[-1],[5],[-6],[-1],[1],[-4],[-1],[-1],[-3],[-10],[-10],[-3],[4],[4],[3],[1],[9],[-6],[-1],[3],[-10],[10],[2],[-6],[4],[9],[3],[-4],[3],[4],[1],[9],[-3],[8],[2],[10],[8],[3],[-1],[-4],[-7],[8],[6],[-6],[-9],[-4],[6],[-2],[-8],[5],[-2],[2],[-4],[10],[6],[-8],[-9],[-10],[8],[2],[6],[10],[9],[3],[4],[7],[-2],[6],[6],[1],[1],[2],[8],[3],[-7],[3],[-10],[9],[7],[-5],[1],[-5],[-3],[-1],[8],[-10],[1],[-9],[3],[5],[8],[7],[-1],[7],[10],[6]], dtype = "uint16")#candidate|10906|(845, 1)|const|uint16
call_10905 = relay.TupleGetItem(func_10105_call(relay.reshape(const_10906.astype('uint16'), [13, 5, 13])), 0)
call_10907 = relay.TupleGetItem(func_10107_call(relay.reshape(const_10906.astype('uint16'), [13, 5, 13])), 0)
output = relay.Tuple([call_10895,call_10905,const_10906,])
output2 = relay.Tuple([call_10896,call_10907,const_10906,])
func_10910 = relay.Function([], output)
mod['func_10910'] = func_10910
mod = relay.transform.InferType()(mod)
output = func_10910()
func_10911 = relay.Function([], output)
mutated_mod['func_10911'] = func_10911
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8760_call = mod.get_global_var('func_8760')
func_8761_call = mutated_mod.get_global_var('func_8761')
call_10923 = relay.TupleGetItem(func_8760_call(), 0)
call_10924 = relay.TupleGetItem(func_8761_call(), 0)
func_8274_call = mod.get_global_var('func_8274')
func_8276_call = mutated_mod.get_global_var('func_8276')
call_10926 = func_8274_call()
call_10927 = func_8274_call()
output = relay.Tuple([call_10923,call_10926,])
output2 = relay.Tuple([call_10924,call_10927,])
func_10931 = relay.Function([], output)
mod['func_10931'] = func_10931
mod = relay.transform.InferType()(mod)
mutated_mod['func_10931'] = func_10931
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10931_call = mutated_mod.get_global_var('func_10931')
call_10932 = func_10931_call()
output = call_10932
func_10933 = relay.Function([], output)
mutated_mod['func_10933'] = func_10933
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10950 = relay.var("var_10950", dtype = "float32", shape = (1, 1, 3))#candidate|10950|(1, 1, 3)|var|float32
uop_10951 = relay.cosh(var_10950.astype('float32')) # shape=(1, 1, 3)
uop_10954 = relay.sigmoid(uop_10951.astype('float32')) # shape=(1, 1, 3)
output = uop_10954
output2 = uop_10954
func_10963 = relay.Function([var_10950,], output)
mod['func_10963'] = func_10963
mod = relay.transform.InferType()(mod)
mutated_mod['func_10963'] = func_10963
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10964 = relay.var("var_10964", dtype = "float32", shape = (1, 1, 3))#candidate|10964|(1, 1, 3)|var|float32
func_10963_call = mutated_mod.get_global_var('func_10963')
call_10965 = func_10963_call(var_10964)
output = call_10965
func_10966 = relay.Function([var_10964], output)
mutated_mod['func_10966'] = func_10966
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8274_call = mod.get_global_var('func_8274')
func_8276_call = mutated_mod.get_global_var('func_8276')
call_11032 = func_8274_call()
call_11033 = func_8274_call()
output = call_11032
output2 = call_11033
func_11037 = relay.Function([], output)
mod['func_11037'] = func_11037
mod = relay.transform.InferType()(mod)
output = func_11037()
func_11038 = relay.Function([], output)
mutated_mod['func_11038'] = func_11038
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10563_call = mod.get_global_var('func_10563')
func_10564_call = mutated_mod.get_global_var('func_10564')
call_11061 = func_10563_call()
call_11062 = func_10563_call()
var_11063 = relay.var("var_11063", dtype = "float64", shape = (11, 12, 6))#candidate|11063|(11, 12, 6)|var|float64
bop_11064 = relay.greater(call_11061.astype('bool'), relay.reshape(var_11063.astype('bool'), relay.shape_of(call_11061))) # shape=(11, 12, 6)
bop_11067 = relay.greater(call_11062.astype('bool'), relay.reshape(var_11063.astype('bool'), relay.shape_of(call_11062))) # shape=(11, 12, 6)
uop_11071 = relay.cosh(bop_11064.astype('float64')) # shape=(11, 12, 6)
uop_11073 = relay.cosh(bop_11067.astype('float64')) # shape=(11, 12, 6)
output = relay.Tuple([uop_11071,])
output2 = relay.Tuple([uop_11073,])
func_11075 = relay.Function([var_11063,], output)
mod['func_11075'] = func_11075
mod = relay.transform.InferType()(mod)
var_11076 = relay.var("var_11076", dtype = "float64", shape = (11, 12, 6))#candidate|11076|(11, 12, 6)|var|float64
output = func_11075(var_11076)
func_11077 = relay.Function([var_11076], output)
mutated_mod['func_11077'] = func_11077
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9814_call = mod.get_global_var('func_9814')
func_9815_call = mutated_mod.get_global_var('func_9815')
call_11232 = relay.TupleGetItem(func_9814_call(), 2)
call_11233 = relay.TupleGetItem(func_9815_call(), 2)
func_8965_call = mod.get_global_var('func_8965')
func_8969_call = mutated_mod.get_global_var('func_8969')
var_11235 = relay.var("var_11235", dtype = "uint64", shape = (286,))#candidate|11235|(286,)|var|uint64
const_11236 = relay.const([9.423588,6.754517,-6.539167,-6.963141,3.427488,9.927629,-4.672546,-6.474003,-8.803866,2.689735,6.735582,2.318103,-8.782695,-5.624823,-7.053331,7.945669,6.340715,2.710628,5.471659,6.478682,-4.583909,-6.793779,-9.169875,-2.062036,1.393636,-0.756692,-5.709056,-6.049921,-3.120422,-5.190032,-0.689031,1.261109,-7.107957,-4.218683,-0.843737,-3.818598,-8.770088,6.607225,8.951465,-9.847147,6.266480,6.644788,-4.415600,-2.245663,0.613066,-2.663528,-8.749895,3.574273,-7.507563,-3.117275,-0.480127,7.871034,-0.015929,3.779627,-1.334263,-5.168477,-1.966619,4.220904,5.769632,-1.690736,-7.707931,-1.109561,-7.188187,9.123992,8.455608,5.570160,-4.777516,9.105817,4.828960,5.204070,-8.827840,0.475117,2.150914,6.705822,-7.040196,1.136802,-0.720646,2.211484,-9.470121,-8.478277,5.504661,2.535039,-3.344809,-8.692123,6.289405,-4.567205,6.227639,-2.388317,-6.333788,0.476165,5.740640,-9.040325,-4.545053,-8.570441,-0.610255,6.450898,-3.046922,-6.189805,8.483624,-6.700725,-3.510171,-1.341314,-9.777551,-0.307626,-5.728519,9.277119,1.998791,-9.703397,-5.547510,-3.291551,3.212432,-6.483200,-7.698621,-4.036486,5.814562,-3.517430,1.030996,0.284838,8.547978,3.886246], dtype = "float64")#candidate|11236|(120,)|const|float64
const_11237 = relay.const([-4.819438,-7.149625,4.614623,9.748795,-5.507002,6.781248,-8.375457,-8.329256,-4.739125,1.343393,8.863226,-6.530807,0.426847,0.561659,-2.670524,6.729692,-5.065932,8.503786,-6.595410,-7.795942,-5.258086,5.806564,0.698175,-7.907829,-8.154705,-0.375402,-0.755859,-3.654324,-0.405112,-8.292609,9.194507,9.533881,-6.166251,-4.865444,3.331920,5.913543,-0.599883,6.510743,5.597008,5.789854,9.161637,2.109134,-2.561262,4.889894,0.380449,-1.526882,5.923701,-3.732675,-6.555954,-7.566425,4.479340,-0.699214,-8.146227,-0.913806,5.243175,4.740743,8.312162,5.918555,7.939214,-6.149507,-2.717528,4.493780,-6.817765,0.543978,-5.130911,-2.636404,-4.051530,9.282009,-3.011984,-4.442253,-8.838994,3.060340,-1.134769,6.865866,0.247033,5.580133,-6.443601,-2.403963,-8.074445,-1.830960,0.378407,2.518015,5.039813,4.372339,-4.163372,6.763960,5.512666,-3.417597,2.351496,3.793537,1.678494,4.595221,-2.349871,-4.218501,0.461495,7.369157,1.317850,-3.424408,-9.064709,0.765649,7.612541,2.811906,5.343930,6.219160,1.024083,8.719413,7.974266,4.752128,-7.950661,-9.469748,-5.723640,9.503955,-1.128149,-0.001968,6.003462,7.057651,-7.073772,0.860901,-4.057750,2.423809,-3.588897,-1.879519,1.730056,7.738115,5.844332,4.084517,1.122059,-9.543760,4.470081,-9.121260,-6.229777,4.643032,-6.604020,-3.988409,1.162268,0.855608,-9.875056,7.750169,4.458661,-3.448014,4.447121,-2.829415,-4.324716,-2.692443,3.310461,-7.420444,6.412505,-5.723187,-0.664596,-3.124403,-8.207304,0.780066,-0.343919,-9.486506,0.571113,-0.627025,9.574890,-9.098298,4.517140,2.238686,4.334530,-6.901399,4.287315,1.552781,8.810242,-5.629907,7.656916,6.910371,-4.134179,2.505225,-6.258896,-6.264829,-7.356562,9.722388,-5.071109,-9.384603,-8.507503,-6.884616,4.548885,4.047041,7.959338,9.534640,-6.305284,-1.990371,-5.308477,-7.331534,-0.470626,-5.719226,2.375345,-4.352412,-8.353296,-9.343490,-5.566724,8.698105,-4.881136,-1.238992,-4.526562,-8.146227,-9.242648,1.646311,-9.890882,1.175084,0.225927,4.741011,4.552667,-1.835318,-2.782504,-1.275828,1.662178,-8.399488,1.407164,2.433900,-0.229201,-6.678228,6.838449,-8.474834,3.948314,-0.966293,5.905293,-2.148483,8.678513,4.104748,5.946502,-2.594505,2.444348,-6.023247,-0.293037,-0.848722,2.490052,3.707629,-3.006310,-9.507704,-6.068065,-2.652372,-4.060137,-5.671230,6.887281,5.569061,-7.675703,5.924617,-1.632206,-3.086802,-4.495592,-8.137342,9.831667,-8.941822,9.169129,1.822221,3.852145,3.094980,-0.188676,0.964171,1.729593,-9.634064,6.840803,5.168093,3.295743,-2.068541,-5.371189,7.277341,-3.141844,-7.745882,-4.563080,4.462588,3.993423,9.326055,5.721916,-3.270642,1.182766,-4.080748,-9.523921,4.636031,3.850988,3.611644,-7.750236,6.004275,-3.587311,-5.057825,5.134913,-4.464259,-6.281583,6.770469,6.826737,0.639358,-5.537743,0.202769,2.154895,1.174962,-8.691423,5.079322,9.738628,6.413696,-7.350223,3.145835,-4.341650,-2.990062,9.338261,-3.257371,9.339055,-6.786465,6.768389,3.116219,-4.230489,5.925336,1.747985,9.693748,5.171501,0.734627,-7.243263,3.533609,-7.053906,4.832723,5.188181,-3.797002,9.170281,2.087843,-9.460331,-0.204088,6.825479,2.752998,-3.193720,1.373474,-2.712781,9.728432,9.167807,7.872837,-8.618331,-0.088928,-1.316148,8.282580,8.706189,-1.193751,4.850642,-3.974433,-8.762178,8.758947,-3.898821,-7.005819,4.243266,3.385098,-3.213964,8.545130,4.052204,3.345238,-7.539216,-7.873082,9.659814,-2.784565,0.124521,6.788623,-6.696161,-1.954654,5.076882,1.070369,-1.345912,-0.593344,1.740856,0.686128,5.024788,-9.375716,6.046702,8.188112,7.537291,6.593591,-6.611157,-6.488044,-9.399176,3.847651,4.999306,-8.649311,4.089394,4.649115,-8.577380,0.693692,4.469177,-5.582857,-6.435890,1.035031,7.839390,-3.511187,1.317903,-1.072691,5.793241,8.113665,8.023529,-6.669906,-5.424439,7.598259,3.348263,-6.095653,4.268118,0.925015,-6.623618,1.134799,-8.752720,2.381403,4.733096,9.079793,7.496815,3.827340,-5.999924,5.097101,2.890836,-9.129946,-5.680184,7.272029,7.831071,1.209886,9.311404,4.781207,5.798390,3.474240,-9.017018,8.949351,-8.151056,-1.487351,8.318791,4.290445,5.258004,8.174104,3.773187,2.537454,2.784486,-1.296842,4.200212,-3.976308,0.789146,4.627532,-2.704625,3.590723,-2.932260,-8.519916,-9.744209,-5.598471,0.076068,5.033144,0.329775,8.997280,7.653130,4.223696,9.740761,9.431567,-1.388075,-7.313334,-3.557248,8.301036,-3.682476,-0.238012,8.535336,-4.194027,-3.379576,1.918888,-0.694702,-5.240594,5.017390,-4.299090,-6.338011,1.108057,3.670926,7.201281,1.779795,-2.125752,-8.510553,-8.196836,5.035414,-7.135606,-0.291067,7.629102,-1.549421,1.356645,-5.119013,-6.840729,6.068721,9.500069,-7.892902,-9.371276,8.074193,4.462264,0.242016,5.151243,-5.503510,-6.270325,-0.470825,5.880998,-4.590455,-6.370910,-8.319338,8.438431,-3.215075,-8.659855,6.166229,-1.384429,7.158810,5.369795,-5.229860,-0.926222,-6.429398,8.951217,-3.194342,-4.047887,1.600868,0.013445,9.505490,-6.611688,8.886906,-9.949389,8.396384,0.691134,-9.654500,-8.880385,-8.210244,7.896362,7.961980,0.940093,4.391651,-4.005634,-4.673200,9.953667,-2.885006,2.058895,-4.388872,4.316686,-7.783300,7.126504,1.833125,3.725935,-1.170368,-4.320734,-2.152407,3.670052,7.891021,-2.285786,-9.338026,-2.917485,6.160267,-8.157472,2.647229,-6.984390,0.921711,3.032486,9.643312,-1.385630,5.418947,2.093667,-0.167053,-3.984554,3.965798,2.840732,-4.100200,-7.586164,3.623380,8.842538,-4.739900,-8.997173,0.845951,-9.497892,9.389902,-8.101978,-7.989324,-2.345355,7.165902,-3.465609,3.839947,-8.705557,6.682388,-3.034097,9.578808,-5.245113,6.774543,9.633730,-7.672248,5.230642,-4.479024,-9.400215,1.517559,7.428542,4.838196,5.342606,9.443182,-4.493186,4.139675,4.818490,3.807352,-5.554781,4.084457,2.926835,-3.042227,2.885216,8.213884,3.209297,-8.079759,1.580816,-4.398661,-0.282711,-0.237032,4.694850,0.524448,-4.641638,-8.593192,5.996899,1.822262,6.565224,5.424240,-8.493146,-5.659328], dtype = "float64")#candidate|11237|(605,)|const|float64
call_11234 = relay.TupleGetItem(func_8965_call(relay.reshape(var_11235.astype('uint64'), [286,]), relay.reshape(const_11236.astype('float64'), [120,]), relay.reshape(const_11237.astype('float64'), [605,]), ), 0)
call_11238 = relay.TupleGetItem(func_8969_call(relay.reshape(var_11235.astype('uint64'), [286,]), relay.reshape(const_11236.astype('float64'), [120,]), relay.reshape(const_11237.astype('float64'), [605,]), ), 0)
output = relay.Tuple([call_11232,call_11234,var_11235,const_11236,const_11237,])
output2 = relay.Tuple([call_11233,call_11238,var_11235,const_11236,const_11237,])
func_11253 = relay.Function([var_11235,], output)
mod['func_11253'] = func_11253
mod = relay.transform.InferType()(mod)
mutated_mod['func_11253'] = func_11253
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11254 = relay.var("var_11254", dtype = "uint64", shape = (286,))#candidate|11254|(286,)|var|uint64
func_11253_call = mutated_mod.get_global_var('func_11253')
call_11255 = func_11253_call(var_11254)
output = call_11255
func_11256 = relay.Function([var_11254], output)
mutated_mod['func_11256'] = func_11256
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10833_call = mod.get_global_var('func_10833')
func_10835_call = mutated_mod.get_global_var('func_10835')
call_11264 = func_10833_call()
call_11265 = func_10833_call()
func_10424_call = mod.get_global_var('func_10424')
func_10426_call = mutated_mod.get_global_var('func_10426')
call_11268 = relay.TupleGetItem(func_10424_call(), 1)
call_11269 = relay.TupleGetItem(func_10426_call(), 1)
func_8843_call = mod.get_global_var('func_8843')
func_8846_call = mutated_mod.get_global_var('func_8846')
var_11280 = relay.var("var_11280", dtype = "float32", shape = (420,))#candidate|11280|(420,)|var|float32
call_11279 = relay.TupleGetItem(func_8843_call(relay.reshape(var_11280.astype('float32'), [420,])), 4)
call_11281 = relay.TupleGetItem(func_8846_call(relay.reshape(var_11280.astype('float32'), [420,])), 4)
const_11286 = relay.const([[[9.080130,-0.815939,-1.293392],[-5.236864,-8.577472,-7.689070],[-3.783165,8.155087,-5.469318],[-6.577436,-5.362690,-4.591175],[1.100955,5.465445,-6.051859],[-6.732260,-4.340295,-1.930190],[-0.454170,-1.531380,-9.563569],[-6.474471,-2.620158,8.505265],[9.980047,-6.565369,-7.212947],[-1.011449,-9.271354,-7.743641],[3.354056,-1.611899,8.529107],[-2.010418,3.132563,-0.396028],[7.450477,-3.133887,-0.776393]],[[-5.690944,7.217767,-3.048596],[4.431464,-4.273572,-8.990522],[-2.807012,8.997828,9.986715],[-4.325840,-5.839095,3.692219],[7.861293,5.946121,-9.030165],[1.023465,9.716448,9.076636],[-8.258798,-7.325712,-4.968856],[5.982410,-1.304931,8.846602],[-8.043696,8.979298,8.410916],[3.928067,4.899144,-4.161851],[2.441843,0.605095,-4.814654],[-3.009590,1.961141,4.968171],[9.769004,6.095013,2.460150]],[[0.717541,-6.438843,-4.680609],[4.193157,-4.628639,-0.115001],[-5.884081,-5.523362,-5.954828],[-0.916240,9.330633,-5.771286],[8.162773,1.577538,4.818591],[5.490078,-6.502280,-0.403426],[9.862741,7.366265,-4.221649],[-3.218206,3.586957,-5.262183],[-6.492318,-8.372697,2.242966],[-1.934697,-9.840705,0.023613],[9.614549,-1.309024,-2.753242],[-9.478330,8.494056,7.195280],[-4.102239,-7.159005,-0.165196]],[[8.896824,-6.082626,-4.135431],[-2.595044,-4.622847,-5.281344],[4.139653,0.302733,-7.755688],[-7.889540,3.748670,-8.791054],[7.076073,1.523925,-8.912404],[6.929133,-9.231279,6.835628],[3.369627,0.319650,-7.784862],[6.434555,7.557180,0.834779],[-5.919099,0.547410,6.856340],[-4.152675,-7.110421,3.324151],[2.798509,-3.027784,-6.789947],[-3.251741,-0.257567,4.524922],[5.994130,-0.203876,5.524243]],[[-7.926979,3.139166,-7.736138],[1.802440,5.739053,-5.270036],[-0.849870,3.622218,9.343484],[-1.504269,3.301901,8.303306],[6.661302,5.887623,-7.590898],[-7.154344,-4.918371,-5.337616],[-9.807673,4.879639,8.585649],[-5.665809,0.440670,-6.241377],[4.562974,-8.257836,3.054873],[-3.357364,6.246760,-7.700373],[-6.489525,-7.233725,-6.066438],[4.447012,2.038359,1.431572],[-8.209965,-0.105520,1.682897]],[[-5.406860,-6.212659,-2.097467],[4.973816,-3.035946,-9.419291],[-4.034334,8.394022,-4.778115],[8.613620,8.182973,-8.163018],[7.537204,-8.300737,0.053319],[-0.569973,5.160835,-3.715345],[4.188780,-9.523287,-2.031275],[-4.174643,2.994118,-2.330587],[-4.977054,-0.988100,-2.726133],[-3.007300,7.643644,1.053924],[-3.238571,5.676388,-6.896841],[7.286007,4.812984,-5.605721],[5.526224,-7.801322,-4.528009]],[[-6.266625,-2.755429,-1.225885],[2.958179,-9.814292,-8.328250],[9.621551,4.316897,-7.502107],[9.387417,9.065813,2.774273],[-8.241140,5.000208,3.474897],[0.956147,-8.951378,-6.541811],[-7.452175,9.593850,7.555662],[8.901537,-9.291968,0.996808],[-3.031104,5.917856,5.110712],[6.100163,8.914076,-3.815976],[2.076171,-9.563032,7.171581],[-4.099237,-5.027740,-7.360247],[6.147102,6.638826,-2.766682]],[[-0.164693,8.493758,1.268826],[-1.768025,-1.627839,8.306408],[8.252275,2.125401,-3.059990],[-1.152436,-8.902423,-6.615503],[-1.157419,-3.070228,5.567400],[-2.172610,-1.922770,9.382125],[-4.543213,-7.915338,3.117987],[3.269234,-7.775335,-7.826975],[2.052626,-9.954757,-1.252021],[-8.069253,-8.599157,-8.085528],[-5.088439,-9.820920,-5.914621],[-8.013267,5.182425,3.098786],[-9.353648,2.777858,1.324225]],[[8.151034,8.029668,7.852090],[-5.296978,-7.768731,-2.848844],[-8.977528,-1.358069,2.049899],[3.960807,2.282351,9.966830],[9.515798,-3.517967,-6.298939],[1.202807,-5.065397,0.084515],[-9.616511,-4.835311,5.121605],[4.578123,5.589149,-5.405686],[-3.984768,-4.885453,-9.173522],[-7.377810,2.084619,9.715116],[0.320810,9.272439,3.528412],[1.930390,-7.901146,-0.403219],[-3.519254,3.370919,6.718539]],[[0.970717,3.685521,-1.988744],[5.289462,-4.929279,4.742649],[-6.627791,-4.988850,-8.214992],[2.369314,1.183253,6.016344],[6.869179,7.168918,9.272471],[-5.258026,-9.140522,-5.381244],[1.950485,8.815267,-7.914647],[8.744629,4.149490,-0.346070],[3.169496,8.471679,8.886714],[1.461821,3.716754,-9.700332],[4.307085,4.723063,-8.713656],[-0.570677,6.695959,8.527656],[-0.711011,-8.044374,-6.781996]],[[-6.692142,-2.893990,-2.728077],[-4.416469,-0.321082,-8.232519],[9.472964,5.904222,0.986547],[-1.689619,-9.966071,-9.454519],[-5.339212,-3.428414,-2.535167],[9.868914,6.425637,8.873776],[-3.389712,2.896723,7.054791],[2.590887,0.705159,1.667119],[-9.130988,2.398717,5.664661],[7.499367,-8.326168,-5.153133],[-2.834257,5.102804,-3.754496],[-2.134351,7.756756,8.872962],[6.189884,2.575820,-8.837058]],[[-5.008413,-9.630159,4.853590],[5.957277,6.719354,-9.907184],[-7.192674,-8.728242,-9.346731],[-9.910702,0.493482,-9.402984],[-2.327503,8.648085,2.881287],[-9.489904,-6.649226,7.220487],[-8.293950,-1.278668,-0.473074],[-6.160366,-5.059246,2.365187],[4.955106,2.272931,6.604990],[0.886346,9.408024,5.056775],[-7.591029,-7.521220,-3.889311],[-8.674132,-0.235324,3.074073],[-2.506352,-3.647758,-2.404778]],[[3.910859,6.571100,-1.931508],[1.436544,6.607563,-2.098836],[7.720773,-4.550076,4.846565],[5.886347,-3.440989,9.001684],[-0.625908,3.296904,-3.269524],[-2.758303,5.962796,-3.816296],[-6.824669,2.228841,-2.362053],[-6.412755,6.437168,-8.124502],[-1.901236,-1.679098,6.610355],[-1.017383,9.216697,-1.156437],[5.075884,-7.978663,7.453316],[-5.440425,-9.412259,8.903688],[1.778201,-8.938029,-4.444420]],[[6.972189,-9.633772,3.826715],[3.800010,3.328298,4.054490],[-4.400931,6.462367,1.296000],[3.438718,-7.042668,-6.618915],[4.940648,-7.151030,-6.647604],[-4.659176,9.344847,6.766120],[-9.884214,-5.343012,-3.412510],[-8.606037,-0.825572,7.485852],[-9.054778,3.356165,-7.483314],[-0.789231,1.143841,7.943136],[4.005881,5.272408,-6.582087],[-2.512192,-6.387546,-1.787672],[-6.006171,1.672191,-3.278097]],[[4.389137,-6.351762,-8.882754],[-0.923778,-5.654189,4.505297],[7.569578,4.459203,5.453645],[0.269318,-4.090820,-8.344379],[-0.587440,3.945390,6.948478],[-8.876323,-3.348484,9.299704],[3.222762,3.532054,9.705282],[2.401293,-0.043934,9.480807],[-8.691791,8.931749,-7.861604],[-3.747620,-9.364371,3.026787],[9.460441,-4.888930,-5.270834],[-2.856381,7.884733,6.708059],[-0.103855,4.925814,1.503558]]], dtype = "float32")#candidate|11286|(15, 13, 3)|const|float32
bop_11287 = relay.bitwise_and(call_11264.astype('uint8'), relay.reshape(const_11286.astype('uint8'), relay.shape_of(call_11264))) # shape=(15, 13, 3)
bop_11290 = relay.bitwise_and(call_11265.astype('uint8'), relay.reshape(const_11286.astype('uint8'), relay.shape_of(call_11265))) # shape=(15, 13, 3)
func_7904_call = mod.get_global_var('func_7904')
func_7911_call = mutated_mod.get_global_var('func_7911')
const_11312 = relay.const([9,3,3,-2,-1,-6,7,-1,1,-2,-9,-8,-1,1,4,1,4,-1,2,-6,6,-9,9,-9,2,-5,-2,7,4,9,4,3,-4,6,10,10,-6,-9,1,-9,1,7,7,-9,1,-8,8,6,-8,9,-6,3,9,1,10,-4,-4,-6,-2,1,-3,-2,-2,2,-1,-7,-3,3,2,2,5,-5,-7,-9,6,-6,-1,-7,-7,5,3,8,-4,-7,-6,10,-7,10,6,4,-1,8,-9,7,5,5,-5,3,4,6,1,1,1,-3,-3,6,9,8,-8,-5,8,-2,-3,-2,6,-6,4,-8,-1,9,-10,-9,-8,9,3,-8,4,-4,6,3,-6,1,-6,-4,-10,2,9,-10,-8,2,5,-4,1,-7,6,6,-10,-1,-6,5,9,7,-9,-6,8,-8,-7,3,10,2,1,-7,9,-7,-2,-10,-10,-10,5,-5,3,5,8,7,-9,4,-1,1,9,-4,2,4,2,-10,2,-10,-3,-7,3,8,5,2,-5,5,-2,-6,4,6,-6,2,6,-4,-5,7,-5,1,-9,7,7,7,-10,6,3,-9,-2,10,3,4,-5,7,8,-3,3,2,-1,-1,-1,4,-1,-4,3,9,-8,-3,6,6,-10,-10,8,-4,10,-9,-2,-7,-7,6,-5,-8,-9,-9,-5,-8,3,-7,-1,-7,6,-2,-10,-3,-1,10,5,-2,-1,9,5,10,-7,-6,-7,9,-10,4,-1,-8,-8,-10,-6,-9,-3,-4,8,-4,-10,3], dtype = "uint64")#candidate|11312|(286,)|const|uint64
var_11313 = relay.var("var_11313", dtype = "float32", shape = (100,))#candidate|11313|(100,)|var|float32
const_11314 = relay.const([-5.436877,6.034950,-6.062089,2.270136,8.118202,9.909967,-2.428166,-5.875323,-0.445130,-0.227457,6.670415,0.797804,-2.708090,9.008533,-4.634153,6.208813,-0.638918,2.793487,-5.136822,8.392781,-0.660052,-1.959183,-7.735207,8.898135,-4.415816,-1.562690,-7.561203,4.239748,-8.983999,-6.419831,-9.496771,0.920986,-2.136582,0.180924,-0.618306,-9.355048,4.198075,5.462283,4.549281,-6.693066,-8.603539,-2.801898,8.736001,-1.392772,-8.055896,-5.248885,-4.084981,3.529104,-0.647059,-2.435987,7.634676,4.579915,2.023579,0.094331,-2.660434,-6.914721,-6.766570,5.317382,7.073370,-7.473777,-9.960037,-4.116576,-3.170467,7.489097,-2.476103,6.554108,9.478914,-7.292910,-3.385211,1.095276,0.959252,6.088086,-9.239607,3.439826,-3.829205,8.121594,-3.361584,-0.718465,-3.800310,7.541663,0.959638,-4.228822,-8.924244,2.116135,-9.272007,8.443120,-2.649175,-0.790995,2.290400,-0.690804,8.701208,-1.055941,9.292670,-4.688756,-4.631481,-9.511579,2.639130,-0.351098,2.520805,-4.759042,0.969935,-9.974163,-7.129165,-0.028309,-0.792622,-8.572200,7.952166,-0.641751,0.579356,-5.570852,-2.778305,4.339463,9.233923,3.730412,5.328713,3.997965,8.439363,-1.470091,-1.438517,0.523832], dtype = "float64")#candidate|11314|(120,)|const|float64
call_11311 = relay.TupleGetItem(func_7904_call(relay.reshape(const_11312.astype('uint64'), [13, 11, 2]), relay.reshape(const_11312.astype('uint64'), [13, 11, 2]), relay.reshape(var_11313.astype('float32'), [100,]), relay.reshape(const_11314.astype('float64'), [120,]), relay.reshape(call_11268.astype('float64'), [11, 55]), ), 11)
call_11315 = relay.TupleGetItem(func_7911_call(relay.reshape(const_11312.astype('uint64'), [13, 11, 2]), relay.reshape(const_11312.astype('uint64'), [13, 11, 2]), relay.reshape(var_11313.astype('float32'), [100,]), relay.reshape(const_11314.astype('float64'), [120,]), relay.reshape(call_11268.astype('float64'), [11, 55]), ), 11)
output = relay.Tuple([call_11268,call_11279,var_11280,bop_11287,call_11311,const_11312,var_11313,const_11314,])
output2 = relay.Tuple([call_11269,call_11281,var_11280,bop_11290,call_11315,const_11312,var_11313,const_11314,])
func_11316 = relay.Function([var_11280,var_11313,], output)
mod['func_11316'] = func_11316
mod = relay.transform.InferType()(mod)
var_11317 = relay.var("var_11317", dtype = "float32", shape = (420,))#candidate|11317|(420,)|var|float32
var_11318 = relay.var("var_11318", dtype = "float32", shape = (100,))#candidate|11318|(100,)|var|float32
output = func_11316(var_11317,var_11318,)
func_11319 = relay.Function([var_11317,var_11318,], output)
mutated_mod['func_11319'] = func_11319
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8274_call = mod.get_global_var('func_8274')
func_8276_call = mutated_mod.get_global_var('func_8276')
call_11328 = func_8274_call()
call_11329 = func_8274_call()
output = call_11328
output2 = call_11329
func_11343 = relay.Function([], output)
mod['func_11343'] = func_11343
mod = relay.transform.InferType()(mod)
mutated_mod['func_11343'] = func_11343
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11343_call = mutated_mod.get_global_var('func_11343')
call_11344 = func_11343_call()
output = call_11344
func_11345 = relay.Function([], output)
mutated_mod['func_11345'] = func_11345
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9132_call = mod.get_global_var('func_9132')
func_9133_call = mutated_mod.get_global_var('func_9133')
call_11349 = relay.TupleGetItem(func_9132_call(), 0)
call_11350 = relay.TupleGetItem(func_9133_call(), 0)
func_2475_call = mod.get_global_var('func_2475')
func_2479_call = mutated_mod.get_global_var('func_2479')
var_11355 = relay.var("var_11355", dtype = "uint16", shape = (80,))#candidate|11355|(80,)|var|uint16
call_11354 = func_2475_call(relay.reshape(var_11355.astype('uint16'), [1, 5, 16]), relay.reshape(var_11355.astype('uint16'), [1, 5, 16]), )
call_11356 = func_2475_call(relay.reshape(var_11355.astype('uint16'), [1, 5, 16]), relay.reshape(var_11355.astype('uint16'), [1, 5, 16]), )
func_7573_call = mod.get_global_var('func_7573')
func_7576_call = mutated_mod.get_global_var('func_7576')
call_11387 = relay.TupleGetItem(func_7573_call(relay.reshape(call_11349.astype('float32'), [15, 13, 3]), relay.reshape(call_11349.astype('float32'), [15, 13, 3]), ), 0)
call_11388 = relay.TupleGetItem(func_7576_call(relay.reshape(call_11349.astype('float32'), [15, 13, 3]), relay.reshape(call_11349.astype('float32'), [15, 13, 3]), ), 0)
func_484_call = mod.get_global_var('func_484')
func_487_call = mutated_mod.get_global_var('func_487')
const_11391 = relay.const([0.324440,-0.509720,-7.518111,1.968458,-3.789863,3.207588,1.393972,-6.737014,4.365316,0.326429,2.560408,0.445886,-3.404443,2.602021,-3.794532,1.929155,7.681858,0.794824,-9.713269,-0.592615,-5.702871,1.318502,-9.517071,-5.729206,9.657033,4.446742,-1.633102,5.449636,5.850412,-3.096887,1.750588,8.368493,7.889087,4.701458,-3.455987,-2.421642,8.526528,-4.359213,-2.421228,8.612786,-3.751385,-4.411607,-2.719971,-1.016495,-8.153384,0.539345,-9.423233,2.777206,0.999440,0.789412,-1.375805,-6.481919,9.218334,6.474998,-9.859926,9.027056,2.718133,2.318967,-4.700951,7.465785,-7.518668,-5.673328,5.935286,-5.336108,-6.083506,-5.771295,3.302477,-1.605448,-3.830156,-4.905025,1.876743,3.744760,-2.524384,-8.317685,-3.038204,6.318378,-1.772419,6.562435,8.078189,-6.711183,4.603829,-3.329896,-9.312417,8.209929,-4.514644,3.435120,-9.691090,-4.249738,1.776558,5.074973,-3.897694,-8.490681,-4.546507,8.276083,7.335294,-5.084914,-6.715572,9.287489,0.864808,5.212544,2.428152,4.719460,-3.904056,-4.675274,-4.405878,1.045532,-8.581309,6.844314,-8.278264,4.154356,8.160740,-3.890370,-3.760017,-5.190988,3.936050,-4.120008,-0.263956,-4.428195,4.254327,-7.003914,-8.720321,7.784599,0.144798,0.603171,7.192872,2.989600,-4.069935,-2.776087,3.091497,8.607505,8.827118,6.794226,0.284070,-2.107654,-1.036516,6.612652,-3.698003,-4.691717,0.700181,8.378088,-9.012919,0.282754,5.109481,0.528673,-7.327590,3.093597,-4.138455,8.005980,-9.959754,6.875558,-8.213345,5.949392,7.423765,-3.512136,1.049269,7.283978,-5.244584,7.217865,-4.340414,2.922576,9.303486,-4.544576,2.309931,8.335270,0.370933,5.218631,5.044511,4.450959,-3.752848,-8.485649,0.539614,9.417354,-5.019969,9.327328,9.053746,-1.160478,9.114275,5.326418,-0.684290,-0.930472,7.723359,-4.837300,-2.105561,1.832025,7.526283,4.585662,0.043524,8.697358,5.228121,-4.687297,6.339712,9.648999], dtype = "float64")#candidate|11391|(192,)|const|float64
call_11390 = func_484_call(relay.reshape(const_11391.astype('float64'), [2, 12, 8]))
call_11392 = func_484_call(relay.reshape(const_11391.astype('float64'), [2, 12, 8]))
func_9450_call = mod.get_global_var('func_9450')
func_9452_call = mutated_mod.get_global_var('func_9452')
const_11412 = relay.const([-2.111357,-7.633873,9.846303,5.281635,-5.252225,-3.411863,-1.707296,0.401038,-8.180854,8.697549,-6.674785,-6.541068,1.004243,-1.682657,-1.724975,1.254252,5.390037,9.960474,6.498778,9.628315,-4.637436,9.841923,-7.775918,-9.107625,-6.376322,-7.732121,3.958363,-4.386086,-0.120238,3.103488,-8.983195,-3.979896,6.064917,0.762270,-1.697443,-6.913359,-4.827321,4.478250,-2.155460,4.107552,0.623897,2.591633,-8.436341,6.208419,-8.365193,-0.025717,-7.377511,-3.725367,-2.567308,-6.950617,-8.437542,-5.531276,9.544655,-8.043071,5.659975,-9.231663,6.784032,-7.242627,-1.585570,-1.905884,-8.278013,9.942451,1.047091,-8.135396,7.727629,-2.278630,1.439524,-7.761407,9.040648,-2.945086,0.091314,1.437786,-6.772882,-3.723407,-6.054096,8.808129,0.597773,3.714418,0.046592,8.051392,-7.522560,-0.133816,-4.780117,-0.903090,7.171801,-9.442516,-3.054905,6.902234,9.080749,4.133618,1.320233,8.544935,1.650576,8.455755,-9.008613,-0.050364,0.958298,7.634663,6.396681,6.664199,-0.022868,4.504514,7.656362,-5.371882,7.755017,-6.328568,-6.130099,4.793833,-7.599270,-4.975343,6.190443,-2.728286,-9.972437,-0.833627,8.638708,-8.785040,-1.164424,-0.569907,0.859806,-3.841962,-0.816627,8.975523,-1.705857,3.272712,9.748113,-9.411589,-8.386698,1.140484,-3.475100,-8.870089,2.521244,1.047430,7.170556,-7.570299,-2.576852,6.372149,0.281367,-2.595676,1.739912,6.281981,7.343108,-4.639321,-1.449074,-8.157657,2.323667,-5.922320,-3.690426,-6.428432,-0.863274,-9.066035,-9.080023,2.560929,-3.040443,2.174008,0.094519,-7.066978,-4.525117,-8.459052,0.137298,3.023325,-9.871785,0.091721,-8.318334,-3.977896,-3.080920,3.909454,-6.627730,4.527293,-4.328167,-1.952896,9.881871,8.181365,0.729630,-8.263810,-7.570696,-7.473109,4.956830,6.697383,2.209443,-3.820567,-3.894700,-7.692719,8.119079,1.036091,8.375965,5.028639,0.016455,-9.857375,0.595912,0.042119,7.855818,-1.061156,0.616509,-8.469204,8.721927,7.211287,-5.203563,-4.671485,3.783933,-3.882462,7.013490,8.248276,-4.270696,-6.180145,-3.527945,3.735853,2.289320,-0.959781,-3.602378,0.308297,-8.683562,4.598275,0.337444,-3.022620,-3.209985,0.242995,-9.301074,-0.838352,-3.112832,-7.704882,-7.667617,-5.843980,8.047354,-3.547690,2.914443,9.856077,-1.527247,9.282899,-4.233174,-2.043920,-5.781841,1.072228,-6.600200,9.634421,-4.315835,7.724816,8.754712,-9.255726,0.727159,-6.974089,-8.989626,-1.087719,5.217414,-5.935691,7.919080,-3.664601,-5.012943,-5.673687,1.014397,-5.806853,-1.938095,-4.612227,1.168307,-1.176167,9.909059,-4.057109,6.422645,4.379583,-9.796130,-4.795526,-5.356679,2.835625,-7.835243,-8.095754,2.642103,5.981423,-3.840891,3.770180,-1.939188,-4.213041,7.291439,-6.196279,9.773874,0.651684,8.733796,2.684601,-6.947543,3.318884,1.867996,-1.789269,-8.129308,-1.541383,3.741701,-8.017090,3.016249,8.373285,1.225683,2.925499,0.785396,-3.529283,5.953171,8.847728,-7.023238,-3.731675,-2.399675,-9.116180,6.883977,5.391611,7.615405,-5.614729,7.041063,8.322638,7.180215,0.101971,6.323402,-6.545525,-9.557579,-9.015050,-1.297878,-6.407233,8.279207,1.242481,4.093565,6.881180,-0.903340,6.784560,7.108563,6.071990,-4.486347,-6.307772,-6.323069,-2.974338,-6.185570,-7.571707,2.350168,3.496914,0.286823,2.588286,1.165675,6.162769,2.164727,2.866875,6.867144,6.707741,-6.255802,9.897249,-2.831522,0.776967,-7.224294,1.177857,-1.083312,-5.753410,1.036498,-6.091670,-9.724396,0.982947,-1.113696,1.817154,7.338457,1.700960,-9.995563,-1.032626,-2.983194,2.528543,8.195700,8.794073,5.933346,-9.317612,3.535820,2.690660,-1.737989,2.303826,-1.632332,7.436205,-8.257393,6.316009,7.190122,2.151240,2.587867,9.999767,-4.145899,-4.855741,-5.996772,-2.556618,0.958709,-5.467463,-0.891361,-3.237615,-2.535818,-2.510693,6.678043,9.382405,-2.120362,-3.540337,8.193821,-7.663224,-7.678302,9.149154,7.838121,4.872474,9.208901,7.550430,6.726856,-9.031017,0.096736,-8.816738,-2.538216,9.296859,8.518743,-3.531242,1.912659,-4.429591,9.327208,3.691503,6.569654,4.699516,-5.008441,8.746154,2.559851,8.962939,-9.225183,1.961305,7.081292,6.912308,-9.290300,1.675765,7.322662,-3.571396,3.767552,0.769081,-6.226574,1.537549,3.527131,-1.351950,1.573962,4.866747,-6.677055,-4.483078,-8.157689,-8.847333,-6.265205,-8.272507,2.352128,-6.331342,-4.347611,7.134521,5.173894,4.648420,7.170432,7.180650,5.073069,5.186576,2.666409,2.877119,3.932139,-2.328812,4.971849,6.545805,5.231387,4.542698,-9.661475,-4.136763,-5.423668,-9.764422,-4.556107,-0.880165,4.848238,9.948399,2.500091,-2.975951,-3.200948,-2.784196,3.733596,-1.270379,-9.729186,2.413596,-9.326307,-8.424382,0.549096,6.982763,-2.697356,-7.340890,5.647875,-2.600009,-1.612220,4.900405,5.827629,4.382819,-6.686207,-6.838464,9.163830,4.599970,0.455882,-4.353457,-4.846148,-1.961713,9.654017,-3.607073,-6.173150,-3.445791,1.626928,3.620845,1.649375,-5.200941,-2.772728,-1.054426,-5.957126,-8.529227,5.528271,-3.904786,-1.620033,-4.901405,5.051347,-7.252313,7.768336,3.264188,-1.870769,-0.916460,2.042622,5.659222,0.393980,9.066611,2.017862,0.430590,7.078862,5.521702,6.109890,4.433095,-2.152298,-0.410401,-9.435093,9.129010,9.885189,3.533546,-6.399575,-9.294268,-1.513203,9.859479,6.737352,3.482368,-4.610624,-6.353945,-4.822785,9.200742,7.730267,6.960089,6.123338,9.292274,-4.510272,0.191286,9.591598,-8.293152,4.249650,-4.106534,-2.518838,4.301397,-6.221503,-7.151436,-0.863530,6.841332,-8.555591,9.558133,1.030435,-5.197232,4.982669,-0.697137,3.360858,1.146084,-8.084789,-4.060097,0.937336,-8.403374,6.282345,-0.281035,-5.203769,-1.820864,-8.633821,-7.485316,-5.578673,5.657782,-9.086891,-0.058628,-0.109225,-2.519469,7.091754,-0.187788,3.258652,-6.219830,5.183615,-3.967618,3.882111,-7.929460,-3.876986,2.633193,9.492002,9.823366,2.290475,-7.902429,6.499919,-6.563747,2.545290,1.504700,8.184921,4.785712,-0.427915,-2.456268,-6.789986,-5.998779,1.162631,3.925450,-9.791629,-8.459823,2.089771,-5.284089,-1.517709], dtype = "float64")#candidate|11412|(605,)|const|float64
call_11411 = relay.TupleGetItem(func_9450_call(relay.reshape(const_11412.astype('float64'), [605,])), 4)
call_11413 = relay.TupleGetItem(func_9452_call(relay.reshape(const_11412.astype('float64'), [605,])), 4)
output = relay.Tuple([call_11349,call_11354,var_11355,call_11387,call_11390,const_11391,call_11411,const_11412,])
output2 = relay.Tuple([call_11350,call_11356,var_11355,call_11388,call_11392,const_11391,call_11413,const_11412,])
func_11424 = relay.Function([var_11355,], output)
mod['func_11424'] = func_11424
mod = relay.transform.InferType()(mod)
mutated_mod['func_11424'] = func_11424
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11425 = relay.var("var_11425", dtype = "uint16", shape = (80,))#candidate|11425|(80,)|var|uint16
func_11424_call = mutated_mod.get_global_var('func_11424')
call_11426 = func_11424_call(var_11425)
output = call_11426
func_11427 = relay.Function([var_11425], output)
mutated_mod['func_11427'] = func_11427
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8760_call = mod.get_global_var('func_8760')
func_8761_call = mutated_mod.get_global_var('func_8761')
call_11438 = relay.TupleGetItem(func_8760_call(), 0)
call_11439 = relay.TupleGetItem(func_8761_call(), 0)
func_10818_call = mod.get_global_var('func_10818')
func_10820_call = mutated_mod.get_global_var('func_10820')
const_11446 = relay.const([-4.645305,8.547967,6.754134,6.611461,-2.772472,5.610730,9.071311,6.600306,7.943319,9.063063,-1.308138,-0.111819,-9.629651,-2.705567,-0.326601,9.722134,-2.168731,3.061268,7.532636,-5.067688,4.799427,-0.945969,5.902935,5.696646,5.501681,0.674547,-8.268305,0.697947,-2.901376,-8.379147,8.038623,-6.878663,-4.906581,8.256876,-5.337849,3.523318,6.521931,-0.535672,-1.307504,7.914867,-8.025426,7.750311,5.790459,-8.970328,-1.109439,-7.201743,-8.779855,-0.382157,-1.880103,-7.248501,3.170989,-7.686985,9.018682,7.501136,-1.792002,5.063856,-5.535680,2.860384,7.466146,6.485239,3.895964,8.530856,-7.580919,-9.146866,7.279567,-8.635638,8.572690,-6.949905,6.452546,-8.626118,-0.473801,1.118808,-2.040182,-1.460252,-4.888187,-2.783394,7.984061,3.620243,6.971048,-1.824616,-6.637627,2.408680,3.401232,-4.156866,7.108929,7.677316,-2.620318,-4.219768,9.365498,-3.906610,1.386750,1.346728,-7.181348,-6.832596,0.749807,-8.451185,4.062286,0.621899,0.110257,-9.270755,-1.788551,7.866956,-2.117146,9.498137,-3.894954,6.186671,-0.137948,6.093081,5.787625,-5.303690,-1.484799,-3.714300,-8.087073,5.464186,1.594380,9.833256,6.887279,-2.237897,-6.186677,7.915178,1.997398,-1.971227,-5.478828,-5.661382,-8.266357,-7.682186,7.627623,-2.893004,-2.832360,-5.857224,0.668260,7.546039,-0.243485,-4.425542,7.060960,3.687504,-2.065938,6.840565,2.494218,-0.614139,-7.431363,8.518349,8.028789,-8.721453,9.926913,8.118901,-1.921303,0.484758,-3.794892,6.261477,0.676004,-9.093032,2.201828,-0.178517,7.197488,-1.852945,8.314672,-9.173150,6.362128,-9.243728,2.666797,-5.938912,-6.671754,-1.237329,5.843861,3.757892,-9.836998,5.094702,1.202430,3.791848,-2.146774,-7.779946,7.193167,0.774167,6.540223,5.569776,0.491346,-8.686202,8.753572,0.906934,0.130477,2.348130,-6.685060,9.835622,2.947540,9.479093,-3.144199,6.552239,-0.012530,-9.299738,7.831295,-3.488545,5.777141,-7.934808,7.509665,-2.822145,-9.181215,-6.071047,-5.071978,-7.591508,-0.034758,1.245290,-4.889190,-6.891933,6.001632,-2.775158,-8.157038,-6.093185,-1.244612,-3.315755,-8.597504,-7.915163,4.818558,5.945066,-5.947874,1.115140,0.751392,8.012954,8.809914,-6.309428,-3.868265,7.432664,4.335183,9.181615,4.148832,2.927119,-9.953467,-0.679590,0.868381,8.745826,-0.877229,-8.877947,2.215215,6.895314,-8.242158,-1.249309,-4.713255,4.723079,0.064120,5.713699,7.377578,-5.349789,-6.164464,2.433566,-4.351981,2.927794,2.050035,2.270119,9.176682,7.649515,-7.385826,9.452684,-3.940850,2.825236,4.071344,-0.257691,2.394448,-5.044290,8.078741,4.454576,-7.623521,-0.175681,1.305873,-4.900304,-5.493650,-4.975376,1.338472,-2.283686,-6.442071,7.007917,-9.722949,-1.445078,-6.607091,-0.760707,-2.860715,-8.756494,-2.783660,-4.455446,-1.748830,6.622336,7.460129,7.519344,7.094826,-3.068346,6.958238,5.580007,2.321659,-5.185021,-7.798646,0.393734,-3.510488,7.445581,7.543607,-5.893413,-4.457182,-5.444953,5.629759,1.582594,5.925619,2.911589,2.329686,3.848798,-6.718858,5.137098,-2.059985,-0.217635,-8.498660,1.286598,2.824753,8.122722,6.151975,8.334967,1.875500,8.758163,-7.354052,-4.812880,7.057115,-1.497359,8.337642,-7.255834,9.842704,-2.890728,-7.234175,7.775898,-6.626396,-6.089957,-4.584642,-6.752072,-8.980059,3.373927,-0.883722,-2.317364,9.288911,-8.865479,-1.271132,-4.746026,1.676472,3.488127,-5.705992,5.128895,7.348527,9.432298,-9.034955,-5.102322,7.474979,3.400826,6.577672,-7.414762,6.898298,6.783590,0.716567,8.945272,-3.820276,6.801015,3.908632,4.373317,-2.025963,-3.435655,9.189600,7.793959,-1.244587,-2.921511,-3.354318,-1.791732,4.119739,-2.326571,6.984931,3.344884,-8.328437,0.784295,-1.133215,0.184949,5.156634,7.637424,-6.292976,5.312031,6.371543,-8.965150,-0.914324,1.836673,-2.036250,9.704138,0.951838,1.388574,1.052682,2.050376,-7.328605,-7.361632,3.298731,-7.621336,-6.875621,-5.902144,5.439505,8.593611,-1.540219,-2.727597,-9.548457,-1.478197,-0.570094,-8.186685,-3.877176,3.590883,-7.439496,-0.953597,4.078479,0.243409,4.670357,-7.730627,-6.792038,-9.766736,-4.135486,4.471970,-5.098369,9.598382,1.253334,-2.743727,0.274971,-0.032396,5.022439,0.947664,1.937276,-8.883282,5.358592,-9.404535,1.587947,-5.511622,6.665158,-6.011293,9.506456,-1.427477,5.984659,8.206519,3.830649,-8.896609,-4.118043,0.353722,-3.455490,-7.625345,-3.532490,6.106679,-1.773563,-6.077858,4.481978,9.406420,-3.388923,-6.013896,0.597168,-8.683441,0.696802,8.166842,4.684880,-9.277059,1.091369,6.792011,5.194421,3.258719,-7.688729,0.947637,-4.683139,-9.182439,-4.401144,9.161898,-8.473494,-1.407534,-6.213936,-6.812529,3.319646,-6.435452,8.000351,-1.911168,-5.629876,-3.614274,3.687905,9.242220,1.720334,-6.959102,-2.646587,9.495405,-1.922327,-2.064974,1.188251,-3.061741,1.747209,0.020734,-7.400610,9.868505,3.287878,5.533510,3.953601,7.859736,-3.607651,8.223564,4.186949,-6.177165,-9.346788,-7.590040,3.649243,-2.260224,1.972508,0.812629,-5.363437,1.177273,4.638253,-9.520322,3.294624,3.529315,-7.638291,-6.898576,6.488471,7.901061,4.318018,7.305354,-2.337805,-6.034624,-7.178661,0.227500,-4.221879,-4.975305,2.552501,2.033321,-9.528990,-8.089401,1.642788,-9.303805,5.835007,-9.532873,-4.755090,2.721391,-4.427045,-0.795307,-7.206430,0.001517,-1.631622,-2.913440,-8.083938,-5.024936,-6.432679,6.123757,8.698896,-1.325156,3.978049,-8.081494,-0.430027,-3.407265,1.741183,4.345328,-6.745646,-7.116065,2.011991,-0.646531,-1.205246,-3.325700,-9.411547,-3.215178,-6.449699,-1.993323,-2.906419,4.348674,4.634726,5.376436,-5.933178,-9.455045,0.663647,-4.452134,3.119206,-2.687127,7.294564,-0.740259,5.221767,-5.235353,0.986829,8.890686,7.709062,-1.741381,8.579894,2.453650,6.823546,-0.496920,-3.217933,0.556795,-7.878954,-8.067894,-6.699476,6.724897,3.580913,6.690266,-4.478688,-6.793120,2.820071,-2.472306,-1.864312,9.032575,7.606591,-9.344119,-4.293415,0.533450,-3.985270,-3.392577,-2.206644,-2.476640,8.639626,-8.137043,-7.165614,8.041187,-1.616384], dtype = "float64")#candidate|11446|(605,)|const|float64
call_11445 = relay.TupleGetItem(func_10818_call(relay.reshape(const_11446.astype('float64'), [605,])), 2)
call_11447 = relay.TupleGetItem(func_10820_call(relay.reshape(const_11446.astype('float64'), [605,])), 2)
output = relay.Tuple([call_11438,call_11445,const_11446,])
output2 = relay.Tuple([call_11439,call_11447,const_11446,])
func_11465 = relay.Function([], output)
mod['func_11465'] = func_11465
mod = relay.transform.InferType()(mod)
mutated_mod['func_11465'] = func_11465
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11465_call = mutated_mod.get_global_var('func_11465')
call_11466 = func_11465_call()
output = call_11466
func_11467 = relay.Function([], output)
mutated_mod['func_11467'] = func_11467
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8265_call = mod.get_global_var('func_8265')
func_8267_call = mutated_mod.get_global_var('func_8267')
call_11486 = relay.TupleGetItem(func_8265_call(), 1)
call_11487 = relay.TupleGetItem(func_8267_call(), 1)
func_9199_call = mod.get_global_var('func_9199')
func_9200_call = mutated_mod.get_global_var('func_9200')
call_11490 = relay.TupleGetItem(func_9199_call(), 1)
call_11491 = relay.TupleGetItem(func_9200_call(), 1)
output = relay.Tuple([call_11486,call_11490,])
output2 = relay.Tuple([call_11487,call_11491,])
func_11493 = relay.Function([], output)
mod['func_11493'] = func_11493
mod = relay.transform.InferType()(mod)
mutated_mod['func_11493'] = func_11493
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11493_call = mutated_mod.get_global_var('func_11493')
call_11494 = func_11493_call()
output = call_11494
func_11495 = relay.Function([], output)
mutated_mod['func_11495'] = func_11495
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11496 = relay.var("var_11496", dtype = "float32", shape = (1, 2, 7))#candidate|11496|(1, 2, 7)|var|float32
uop_11497 = relay.log10(var_11496.astype('float32')) # shape=(1, 2, 7)
bop_11499 = relay.greater(uop_11497.astype('bool'), relay.reshape(var_11496.astype('bool'), relay.shape_of(uop_11497))) # shape=(1, 2, 7)
output = bop_11499
output2 = bop_11499
func_11503 = relay.Function([var_11496,], output)
mod['func_11503'] = func_11503
mod = relay.transform.InferType()(mod)
var_11504 = relay.var("var_11504", dtype = "float32", shape = (1, 2, 7))#candidate|11504|(1, 2, 7)|var|float32
output = func_11503(var_11504)
func_11505 = relay.Function([var_11504], output)
mutated_mod['func_11505'] = func_11505
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8501_call = mod.get_global_var('func_8501')
func_8502_call = mutated_mod.get_global_var('func_8502')
call_11521 = func_8501_call()
call_11522 = func_8501_call()
output = call_11521
output2 = call_11522
func_11557 = relay.Function([], output)
mod['func_11557'] = func_11557
mod = relay.transform.InferType()(mod)
output = func_11557()
func_11558 = relay.Function([], output)
mutated_mod['func_11558'] = func_11558
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11559 = relay.var("var_11559", dtype = "float32", shape = (15, 6, 11))#candidate|11559|(15, 6, 11)|var|float32
uop_11560 = relay.tan(var_11559.astype('float32')) # shape=(15, 6, 11)
func_484_call = mod.get_global_var('func_484')
func_487_call = mutated_mod.get_global_var('func_487')
var_11563 = relay.var("var_11563", dtype = "float64", shape = (192,))#candidate|11563|(192,)|var|float64
call_11562 = func_484_call(relay.reshape(var_11563.astype('float64'), [2, 12, 8]))
call_11564 = func_484_call(relay.reshape(var_11563.astype('float64'), [2, 12, 8]))
output = relay.Tuple([uop_11560,call_11562,var_11563,])
output2 = relay.Tuple([uop_11560,call_11564,var_11563,])
func_11565 = relay.Function([var_11559,var_11563,], output)
mod['func_11565'] = func_11565
mod = relay.transform.InferType()(mod)
var_11566 = relay.var("var_11566", dtype = "float32", shape = (15, 6, 11))#candidate|11566|(15, 6, 11)|var|float32
var_11567 = relay.var("var_11567", dtype = "float64", shape = (192,))#candidate|11567|(192,)|var|float64
output = func_11565(var_11566,var_11567,)
func_11568 = relay.Function([var_11566,var_11567,], output)
mutated_mod['func_11568'] = func_11568
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8760_call = mod.get_global_var('func_8760')
func_8761_call = mutated_mod.get_global_var('func_8761')
call_11614 = relay.TupleGetItem(func_8760_call(), 0)
call_11615 = relay.TupleGetItem(func_8761_call(), 0)
output = relay.Tuple([call_11614,])
output2 = relay.Tuple([call_11615,])
func_11621 = relay.Function([], output)
mod['func_11621'] = func_11621
mod = relay.transform.InferType()(mod)
mutated_mod['func_11621'] = func_11621
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11621_call = mutated_mod.get_global_var('func_11621')
call_11622 = func_11621_call()
output = call_11622
func_11623 = relay.Function([], output)
mutated_mod['func_11623'] = func_11623
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9814_call = mod.get_global_var('func_9814')
func_9815_call = mutated_mod.get_global_var('func_9815')
call_11660 = relay.TupleGetItem(func_9814_call(), 2)
call_11661 = relay.TupleGetItem(func_9815_call(), 2)
func_9293_call = mod.get_global_var('func_9293')
func_9295_call = mutated_mod.get_global_var('func_9295')
call_11662 = relay.TupleGetItem(func_9293_call(), 0)
call_11663 = relay.TupleGetItem(func_9295_call(), 0)
func_10910_call = mod.get_global_var('func_10910')
func_10911_call = mutated_mod.get_global_var('func_10911')
call_11668 = relay.TupleGetItem(func_10910_call(), 2)
call_11669 = relay.TupleGetItem(func_10911_call(), 2)
output = relay.Tuple([call_11660,call_11662,call_11668,])
output2 = relay.Tuple([call_11661,call_11663,call_11669,])
func_11695 = relay.Function([], output)
mod['func_11695'] = func_11695
mod = relay.transform.InferType()(mod)
output = func_11695()
func_11696 = relay.Function([], output)
mutated_mod['func_11696'] = func_11696
mutated_mod = relay.transform.InferType()(mutated_mod)
const_11705 = relay.const([[[False,False,True,True,True,True,False,False,False,False,False,False,True,False],[False,False,True,False,True,True,True,True,True,False,False,True,True,False]],[[False,False,True,False,True,False,False,False,True,False,False,True,False,True],[True,True,True,True,True,False,True,False,True,False,False,True,True,False]],[[False,False,True,True,True,False,True,False,False,True,False,False,False,False],[True,False,True,True,False,False,False,True,False,False,False,False,False,False]],[[True,True,False,True,False,True,False,True,True,False,True,False,True,True],[False,True,True,True,False,True,False,False,True,True,True,False,True,True]],[[False,True,True,True,True,False,False,True,True,True,False,True,True,True],[True,False,False,True,False,True,False,False,False,True,False,False,False,True]],[[False,True,True,False,False,False,True,True,False,True,False,False,False,False],[True,True,True,False,False,True,True,False,True,True,False,True,False,False]],[[True,False,True,True,True,False,True,False,True,False,True,True,False,False],[True,False,False,False,False,False,False,False,True,True,False,False,True,False]],[[False,True,False,True,False,True,True,True,False,False,True,True,True,True],[False,True,True,False,True,True,False,True,True,True,True,True,False,True]],[[True,True,True,True,True,True,True,True,True,False,False,True,False,False],[False,True,True,False,False,False,False,False,True,True,True,True,False,True]]], dtype = "bool")#candidate|11705|(9, 2, 14)|const|bool
const_11706 = relay.const([[[False,False,True,False,False,True,True,True,False,False,False,False,False,True],[False,False,True,False,True,False,False,True,False,False,True,True,False,False]],[[True,True,False,False,True,True,False,True,False,True,True,False,True,True],[False,True,True,True,False,False,True,True,False,True,True,True,False,False]],[[False,False,False,False,True,False,False,False,True,False,False,False,True,True],[False,False,False,True,True,True,False,True,False,True,True,False,False,False]],[[True,False,False,False,False,False,False,True,False,False,False,True,False,False],[True,True,True,False,True,True,True,False,True,True,False,True,False,True]],[[True,False,True,True,True,True,True,True,True,True,True,True,True,True],[False,True,True,False,False,False,False,True,True,True,True,False,False,True]],[[True,False,False,True,False,True,False,True,False,True,True,True,False,False],[False,True,True,True,False,False,True,False,False,True,True,True,False,False]],[[False,False,False,True,False,False,False,False,False,False,False,False,True,True],[False,True,True,False,False,False,True,False,False,False,False,False,True,True]],[[True,True,False,True,True,False,True,True,False,True,False,False,False,False],[True,True,True,True,True,False,True,True,False,True,False,False,True,False]],[[False,True,False,True,False,False,True,False,False,False,True,False,True,True],[True,True,True,False,True,False,True,False,False,False,True,False,True,True]]], dtype = "bool")#candidate|11706|(9, 2, 14)|const|bool
bop_11707 = relay.logical_and(const_11705.astype('bool'), relay.reshape(const_11706.astype('bool'), relay.shape_of(const_11705))) # shape=(9, 2, 14)
var_11711 = relay.var("var_11711", dtype = "bool", shape = (9, 2, 14))#candidate|11711|(9, 2, 14)|var|bool
bop_11712 = relay.multiply(const_11706.astype('int16'), relay.reshape(var_11711.astype('int16'), relay.shape_of(const_11706))) # shape=(9, 2, 14)
func_5828_call = mod.get_global_var('func_5828')
func_5832_call = mutated_mod.get_global_var('func_5832')
const_11724 = relay.const([5,10,-6,1,8,4,-7,9,-8,-1,-4,-10,-4,1,-1,1,-6,1,-6,7,6,3,-4,3,-9,-8,9,-4,-2,-2,5,8,4,5,-6,5,-2,5,-1,7,7,4,3,2,3,8,-7,1,-10,3,-9,-7,-9,8,-5,1,-2,7,-5,1,-10,7,-9,-1,7,4,2,-6,4,-2,-10,-10,-10,-6,-5,-4,-7,-4,-1,5,9,-3,-1,-4,4,-5,-9,-7,-3,7,-1,4,-3,-6,5,4,1,7,-10,-6,-8,-9,5,9,8,-5,-6,8,-7,-6,6,-8,-1,8,7,6,-4,-4,8,8,-9,6,1,-7,-8,1,-6,10,6,-7,-1,-8,-7,-7,-8,-2,7,-4,-1,7,5,3,8,9,3,-7,-10,-3,-9,-3,-3,-6,2,-9,1,2,3,-7,1,3,1,-10,6,7,2,-4,4,7,10,-9,-9,8,8,-3,3,-3,-7,-5,-6,8,-4,-5,4,4,-8,-6,-6,9,2,-3,1,9,-10,-2,-1,-4,-5,-3,1,-1,-2,5,3,-4,-7,8,-4,5,5,8,-8,-9,1,1,9,10,1,1,-9,-7,-1,-4,5,-9,-7,-4,-9,-9,5,4,-2,-7,-10,-6,-3,-5,9,-1,1,3,-7,4,-10,-10,-2,8,9,-6,-4,-7,-5,-1,-4,-9,2,-4,8,7,-10,2,-1,8,6,10,8,6,2,10,-10,2,10,3,1,-6,8,4,8,9,8,3,7,-9,-7,-6,7,-8,-1,7,-2,-6,8,-8,-4,10,8,-7,-5,3,-7,-8,6,-3,9,-10,2,-9,-6,7,-6,1,4,-9,8,8,1,-2,-4,-6,5,-1,-2,7,7,-9,5,-7,9,8,7,3,-4,9,-1,8,-8,5,7,-7,8,-7,7,-3,-1,-4,-9,-8,-3,8,9,10,-4,9,-8,6,-2,10,9,8,6,-8,-10,-7,-5,-8,10,-4,-4,-4,9,8,-6,-3,-4,7,-4,7,3,-8,7,-5,-6,9,-1,-10,-6,-6,-9,-7,9,-4,-9,6,5,2,-9,-8,7,-5,-4,-3,-5,1,5,6,-4,-8,1,8,-9,7,9,-3,5,-7,4,9,6,-1,10,8,10,-8,9,9,8,5,3,4,-7,7,10,9,6,10,9,-1,-3,2,-6,-1,6,2,8,-7,8,6,-10,5,-9,3,4,-9,-2,2,-3,-2,10,10,9,-5,-3,-4,-10,-8,-5,-6,-4,7,-7,6,1,9,-2,-9,6,10,7,-2,-5,3,-3,9,6,-5,-5,3,9,-7,-10,-3,-10,-6,7,3,2,1,7,-5,8,-5,1,8,7,2,-2,4,8,-9,1,6,-10,-9,9,-7,5,9,-10,-7,-10,6,4,4,-3,-4,6,6,-8,-2,-10,-3,3,-1,1,-1,7,-3,-9,-10,3,-7,-5,-7,-9,-10,-8,-3,9,3,4,-10,-1,-1,-1,3,4,-3,2,-3,-8,1,8,-6,-10,6,1,6,-9,4,-5,-2,-6,1,6,10,-7,-8,5,-3,-1,10,4,-5,10,-3,-8,-5,1,-2,-9,8,3,2,-10,-2,5,6,-7,-2,-2,-3,1,3,-5,-8,-9,-10,-4,2,-9,-6,8,6,3,-2,3,3,5,-6,5,3,-10,-8,-7,-8,-7,-3,-4,-10,-6,-10,-8,-3,-1,1,4,-9,9,9,-10,-2,-1,9,5,2,2,10,-7,4,5,5,1,4,-3,-6,9,-9,-5,6,10,1,2,-1,-8,8,-2,1,-8,3,-9,6,9,10,4,3,-6,5,8,6,2,-9,6,6,-4,-5,8,-1,-7,-10,-9,-4,-1,-10,6,5,1,-2,4,2,9,-3,1,3,-6,-8,7,-7,-4,7,6,-7,8,5,9,3,7,4,-9,5,-1,-10,8,7,6,-1,8,9,-9,-9,2,-6,-6,-6,-9,-2,-5,-7,10,2,-7,-8,2,2,-4,10,1,-6,8,3,2,-6,-8,1,-10,-3,7,-4,1,-8,5,10,4,4,-7,-9,-4,7,1,-9,-2,-8,6,-5,5,1,-1,-7,-6,-9,10,3,3,8,-9,-3,-1,-7,2,-3,7,-7,6,7,7,-6,-2,-2,10,-8,-7,9,3,-5,2,-10,-4,9,-2,-2,10,7,7,-8,-1,8,-9,-6,-5,-5,-10,5,-3,4,1,-6,3,5,-7,7,-9,-4,1,1,2,2,1,6,10,-3,3,3,5,8,-1,7,-9,10,-4,8,7,8,7,-3,-3,9,-6,-3,-8,-4,-5,1,-6,8,10,-6,5,-4,-9,9,-3,-9,9,-1,-5,8,-8,8,7,-1,-1,3,-2,-8,6,-4,-8,-10,-9,5,-8,5,-9,-7,8,-5,-7,-7,-7,-10,6,4,9,10,6,1,8,9,1,-6,-4,-10,-9,-1,-3,3,-7,3,2,-5,9,-4,3,4,9,-3,-9,5,-9,8,7,3,-8,-1,2,-1,-1,-5,8,6,-7,2,1,8,6,-6,-7,9,7,-8,-6,-7,-5,1,2,-3,-6,7,-4,9,-10,7,4,-7,-7,-10,-5,2,-9,-3,10,-2,-3,-6,-1,-9,10,10,-1,4,1,1,-3,8,-5,5,-9,4,3,8,-6,8,-2,-9,5,-1,9,4,6,-4,-5,10,7,5,-5,5,-10,5,-1,-7,10,-5,-1,-1,-3,1,5,3,5,-1,10,10,-10,4,-1,-10,-8,-10,-5,7,7,9,7,-5,9,3,-3,-1,-1,-6,5,-3,-10,3,5,5,-8,-5,6,9,7,5,6,5,-1,10,-5,-1,10,-10,6,9,10,10,4,-1,3,1,10,-7,-6,-6,-3,-6,1,-8,-3,-10,10,9,1,-5,4,6,-3,-4,3,10,9,7,-1,-4,1,-7,5,-5,8,3,-9,5,-5,10,2,-1,7,-8,2,-5,9,-6,-10,3,2,-9,6,-2,4,8,-4,-7,-7,-9,9,4,6,2,-10,3,2,4,7,-8,9,-8,-5,4,-10,-4,7,-6,-9,-10,-3,2,6,-3,1,-5,-9,1,-8,9,10,-6,3,-1,-10,1,7,-9,9,-5,7,-9,2,4,7,-7,-9,3,3,-2,6,-8,-7,5,3,6,-1,-8,-5,3,6,-8,-3,6,-6,10,-4,-4,-7,6,-8,-10,7,3,10,5,-8,-10,-5,-8,7,-4,8,1,-6,5,-1,-4,5,-10,7,-1,-8,5,-9,6,-1,-4,-8,-4,4,-10,-6,-1,6,-6,-7,-6,-9,-8,-4,-6,-5,-3,7,-9,9,-6,-6,6,8,-2,10,-10,1,-1,2,-1,10,-10,-3,10,10,7,-2,-7,8,5,-1,8,3,-8,-7,-2,5,5,-4,-2,-10,-10,5,-3,9,10,5,4,7,2,3,2,9,7,-2,-8,9,3,5,6,5,4,4,-7,9,7,-5,-1,-4,-8,9,-9,3,-4,-7,2,8,2,-5,-5,8,8,8,-10,8,-9,3,5,9,4,-2,9,-4,2,-2,6,8,3,-3,-8,-10,-8,-6,-1,-4,2,5,8,6,1,-8,6,-10,1,4,6,10,-9,1,-3,8,3,-1,-3,10,3,-10,3,1,-5,7,9,7,6,-1,-5,6,-2,-8,4,-8,5,7,10,-5,-3,10,2,1,7,6,-8,-7,-9,-5,4,-9,3,-8,4,-10,8,8,-7,-7,-8,6,5,-8,10,-7,-9,3,6,5,-7,-8,6,4,-4,10,1,-10,9,3,3,4,-10,-4,-8,-6,-3,-9,-10,-2,3,-6,8,-3,6,-6,9,1,-5,-4,3,10,-4,-6,-4,-7,-2,3,1,-7,-5,-7,1,2,2,-10,7,2,-1,-4,-9,-3,-5,3,6,4,10,-6,7,10,-5,8,-2,-1,-1,9,-7,-2,-3,-8,-4,-10,4,-7,3,2,-10,8,-1,7,6,-3,-10,-5,10,2,8,8,8,-2,-5,-7,-7,4,-5,-9,7,-2,-8,2,2,2,5,-1,7,4,-10,-6,-7,4,-1,3,-6,9,-3,2,4,-7,-5,-4,2,6,-10,-8,3,8,-4,4,-7,-3,-3,-8,-10,9,-3,-2,10,8,8,-6,-7,-7,-5,-2,5,5,-2,-8,-5,-2,8,3,9,8,7,-2,-8,7,9,8,-7,-3,-3,3,-6,8,8,3,-3,9,-7,-4,8,-10,1,3,2,-8,9,-5,-8,-10,-6,-6,-8,-1,-5,-9,8,-2,-9,6,-4,-6,-8,7,-4,2,4,1,2,4,-6,-10,4,3,10,-5,-6,7,-2,7,3,-7,7,8,7,7,-7,-10,-1,-4,-4,5,-8,3,-7,7,2,-7,-2,-8,-7,4,2,-4,-7,-5,-7,-3,5,6,-10,1,7,-3,-3,9,8,5,-9,4,-9,-9,1,3,9,7,-4,-3,8,-3,-9,-2,-6,-8,6,-1,10,1,-1,7,-8,9,-3,-7,8,-10,10,3,-9,-3,2,-9,-3,4,-9], dtype = "int64")#candidate|11724|(1690,)|const|int64
const_11725 = relay.const([8.077719,-1.170853,-1.641002,6.897721,5.327742,-6.171669,9.750936,-0.340109,4.912399,-6.783968,-8.870138,-2.215118,-2.277596,-2.264282,1.992390,-8.030700,-0.698611,8.987814,3.157425,9.069984,6.160169,-1.957067,-5.989309,0.828289,1.293562,2.629124,9.492935,7.105936,1.551734,4.264147,-8.552324,9.936463,-1.498938,2.456267,-7.863291,-1.665011,3.913744,-9.663930,-1.026864,4.970318,3.946150,6.628336,-5.147536,-0.178695,-7.522982,-4.426814,-6.984399,7.832524,-8.583126,-7.537834,-6.168734,-1.737045,6.597298,2.785670,-6.251606,1.000793,-8.334794,-6.066821,3.454562,-3.883495,5.424735,-3.843545,-5.811314,-9.674257,6.618727,8.063912,-6.417973,6.996825,-1.309818,4.595384,4.162721,-3.890303,5.696763,-3.273477,-1.844896,-5.569413,-8.940290,1.200325,8.034441,5.156929,-2.088892,-3.365516,3.010339,2.558203,-7.409347,-1.780749,2.515551,5.835920,-6.309745,-0.978858,-5.077711,-9.439157,3.889586,-2.729591,6.865248,5.359357,-9.615212,-8.870999,7.904793,-4.936483,-9.026536,2.181952,4.116805,-3.680345,5.386771,-8.361937,-6.561834,-9.215146,-5.896645,-8.860577,-0.995017,-5.418752,7.371838,-0.875318,-2.174907,-8.801791,-2.333573,-3.536334,2.055489,2.792396,0.417651,-6.035948,-1.873031,-2.718672,9.426358,-8.868810,-8.390868,6.163279,-7.606066,1.304411,-6.258610,2.883527,2.073383,-7.067631,2.521123,1.759613,-9.023873,-1.071298,-5.297001,7.847291,0.532271,-4.408237,-6.013244,9.284818,0.465150,3.692601,-0.778111,-0.648072,1.706743,-4.709368,-6.177771,6.296524,-0.162198,9.574469,-0.550893,-8.883174,2.370308,-0.424591,-7.195240,-9.239283,-8.730983,1.275011,-3.276232,-0.750958,4.137549,-8.326955,5.840972,-5.293835,8.830449,-3.216966,-1.956547,8.965018,5.355441,-1.851217,8.319225,-1.408918,-3.168730,2.732928,8.211833,-9.037305,-9.910303,2.946347,4.118577,2.610382,9.226127,-8.463660,1.829776,6.171116,0.654127,-3.062357,-6.351583,-5.848409,6.430086,-2.512502,-7.081497,1.642644,7.991694,-8.196985,-4.454537,-5.706802,7.889339,4.534259,-4.877266,-2.952915,-5.764193,9.908526,3.973358,-3.353297,1.314700,3.039195,7.011227,-9.513819,4.251731,2.660119,4.432235,-4.752586,7.085255,5.186892,-1.721626,4.722214,-0.195539,-6.743846,2.739234,-8.013513,0.111216,-9.501992,-6.488335,9.863688,5.747956,1.734040,-4.050002,9.790091,-5.712857,-6.963460,-5.210800,0.656253,-0.879530,-0.679897,-6.699822,-3.454129,4.015085,6.705620,6.897468,8.367336,4.623268,6.728792,-9.618964,2.381986,1.179549,-9.810400,-2.460153,3.673857,2.089476,-2.871068,-5.093777,7.697412,9.216282,-8.215348,3.531663,1.112764,-5.617353,6.459081,9.915389,9.196635,-9.746526,4.452557,-0.226474,1.237328,-3.727812,2.312911,-1.778240,-4.888928,5.787817,-0.936995,4.327026,-6.060534,8.951398,-1.437148,-7.313255,6.086370,5.293457,8.523081,5.633138,7.355505,-5.467716,8.426563,4.830833,-3.679486,-7.242185,-0.224318,-9.595267,9.266748,-9.744551,6.302437,-0.204963,5.354436,7.832861,2.596718,8.149591,-6.015070,3.741106,-1.195994,-6.624685,-4.216293,3.845584,-1.429336,4.036879,9.803617,3.794753,-9.569363,-4.951841,-4.610920,1.487742,-1.836434,-8.151458,-0.895812,-4.415344,6.932068,-2.173953,6.876216,-9.573622,6.302804,-3.994135,2.146886,7.927383,4.383539,8.628366,8.073318,8.714991,6.694240,2.443334,2.959308,-4.883851,-4.540421,-7.365162,-3.905813,4.265684,-8.190569,4.100594,6.625425,-9.597214,-1.265750,-3.637098,-3.185528,0.179666,-0.221638,0.184334,0.698191,-6.499611,-0.003679,4.581450,8.243611,5.664831,-3.668688,5.828589,2.567152,-4.175109,7.493447,-3.384311,-7.384945,0.272034,-4.904413,1.303253,-5.539310,7.532167,-1.130566,6.416040,2.864764,-2.829642,4.541786,3.518057,2.857984,-5.392947,6.765446,-7.514422,1.027313,-7.663420,-1.384414,5.537959,5.111150,-8.178864,8.557918,3.107747,-9.937827,5.670135,8.811846,-7.635498,-6.904763,2.038016,7.223515,-5.063679,9.758584,-4.819059,-9.771233,-9.366160,-3.948140,4.335848,-0.928170,-5.709650,-6.177795,4.577401,8.800931,-8.730508,-3.925379,8.252797,0.224707,-7.935836,-0.382527,4.328125,-6.732997,-7.483785,-6.342817,7.703055,-3.030489,7.174836,2.775707,-1.449949,-2.296421,-9.552917,-7.720358,0.492669,8.580257,-4.885286,-6.529715,-8.761042,2.096314,-4.335230,6.948498,-2.620680,9.327966,-6.867884,-0.521431,0.536119,-9.846848,-9.926886,5.732097,-6.062254,3.984791,-5.488485,-7.820878,4.613367,2.317680,3.183762,6.462387,-3.530391,9.169008,9.975847,9.946040,4.218647,-8.022204,-6.927856,9.612816,2.087752,8.276261,-9.546580,-7.874839,7.352596,8.219331,-8.802942,5.732599,-3.957436,-5.275608,-7.379259,-5.917889,7.299241,3.090057,5.844720,-1.332902,-7.169380,-3.471321,-7.205716,-4.314540,6.837264,-6.767712,-2.772687,-6.912325,3.269889,-3.268412,8.457691,3.373954,6.132510,-9.191172,9.787176,1.330318,1.979316,-5.376689,8.670254,0.236213,8.958077,-0.588165,8.541837,-3.007091,4.421964,7.905391,7.573325,8.764464,7.806386,5.389403,9.758977,-6.105703,1.345779,-6.449989,5.972615,0.288807,5.290947,-7.715850,-0.203090,3.985069,2.380004,-1.970726,4.991080,-9.472985,-1.306359,8.053231,-0.856301,-0.783505,7.457714,-2.414568,-3.132376,7.511211,-6.113855,3.845638,-6.598543,-4.847806,5.748886,-2.343382,4.598074,1.335109,7.371031,8.138192,0.514130,6.632588,-5.283020,0.215946,1.635491,-6.486899,2.991688,-0.984148,9.028698,6.031437,-9.852663,3.990606,-9.106548,2.568431,-7.307652,-9.049688,-0.875332,-8.591990,1.217682,4.727783,-6.137824,-4.243475,7.029870,8.326120,-5.489422,9.934274,-6.618916,-7.537946,-2.281709,-2.477407,-5.150041,-1.411281,-8.985886,0.568605,-7.390327,-1.505329,-0.503155,-4.541096,-2.134708,-4.589559,4.911986,1.915167,3.614945,-5.114119,1.817459,-3.705106,8.752378,-6.886698,5.963233,-7.568332,-7.786342,-0.658917,9.594739,1.752063,-5.040929,-5.977715,5.511215,1.623703,9.960329,-5.900231,5.088521,-1.882988,8.704043,-1.502079,-3.544129,2.642734,-0.250023,-0.140840,-9.283019,1.443146,0.341283,-1.549159,4.773235,0.993375,-1.827907,5.387626,-4.866853,-1.060695,-6.583026,-6.185886,8.190899,7.689105,0.535150,-8.479431,1.985015,-2.013369,0.423992,-9.142525,7.081170,-3.962535,3.246310,2.424622,8.137692,-3.594976,-6.966195,9.243139,-6.462570,0.887465,-2.969485,2.278928,4.719206,-9.902635,5.385374,8.429009,9.087515,-5.562159,7.089760,-3.645938,7.945828,-6.591016,-8.296718,-1.827290,7.228019,-1.784803,7.957607,9.991773,-7.775328,0.537239,-7.933688,-6.019358,-0.977374,6.394236,-6.984014,7.039420,-9.310333,5.168096,3.794617,6.866770,-6.374716,-7.148814,3.785657,-1.393823,7.417689,5.070677,7.625185,3.301570,-2.940679,8.544952,2.103142,7.840221,3.330519,-7.729701,-7.971441,3.103772,1.571246,-6.715955,0.479191,-6.277403,-7.657961,8.956080,8.385483,-4.073942,2.136147,-5.839393,-3.863117,-8.857361,2.870633,-1.988190,-0.473695,-7.957184,4.777709,-7.427080,1.111776,2.799367,3.383709,3.664243,-5.680527,-5.098019,-2.408672,-3.288624,-1.672840,-2.379737,2.659373,4.274160,-7.268377,9.955701,-9.146670,-4.328590,4.728605,-6.327868,-8.433826,0.386192,9.098340,-6.304164,3.582397,-5.421465,2.746221,3.916346,3.402903,-5.133888,-0.106027,4.960911,-0.489394,-3.275253,4.186470,-8.832157,8.183696,-7.882533,9.679459,-7.619527,1.561424,5.149201,2.013538,3.379026,7.638693,-7.227352,-9.305778,3.052587,5.041092,-5.359161,-2.899378,2.157523,-6.661561,-1.408643,-8.821873,-9.058852,1.632675,3.001062,-6.559953,5.267457,-7.764256,7.856828,3.315010,9.970850,3.004943,8.570091,-1.478869,7.276343,6.973085,7.971284,-7.525256,6.976072,9.816902,-9.263636,-2.675236,0.673499,6.238068,0.981352,8.003488,4.865796,-0.826611,-4.801570,0.209408,4.737757,6.785386,6.965372,6.759886,8.652586,4.936860,-5.956498,2.095884,-6.545666,7.300641,8.453087,9.971914,7.093927,-0.045311,-4.105380,5.445126,-2.028966,-8.976028,-0.448419,-0.968978,-4.238658,9.853816,6.520234,3.448366,0.200283,1.492516,5.120451,1.653006,-4.877384,8.023401,-5.451247,0.356838,5.923604,-8.346771,5.484690,-0.981693,-1.115043,-2.280575,-2.979165,8.673374,-3.203808,3.085661,9.819444,-1.780839,-5.247959,4.544341,-0.166796,9.669999,-7.577403,0.074592,-0.066553,-8.905704,4.690388,6.101101,-3.082321,2.023462,5.137424,-1.806280,-1.728089,4.465664,-2.130135,3.680540,2.091815,7.957996,-4.613306,5.366171,-5.961899,9.725084,-8.785262,5.899747,2.062884,-6.132029,3.016730,-0.859256,7.794168,-7.426850,-7.796585,3.727665,-9.301476,3.795387,2.352327,-5.941752,-4.438252,-8.307474,-2.706374,5.304263,-6.333661,-5.527922,3.316211,6.350230,-7.186233,-6.439143,3.257313,-0.739981,-2.182812,-2.492858,-9.958034,9.786462,-9.757415,-2.178360,-9.538272,3.740902,0.828690,-8.308545,-0.297848,9.738945,-1.195319,8.178022,1.307979,1.346025,5.322661,-1.687144,-2.397568,4.604266,8.788747,2.873871,2.095938,-5.119326,1.189851,6.189974,9.949064,-4.879721,6.767463,5.684620,-2.201238,-3.767655,3.348170,1.782552,3.981512,-4.372881,-8.102092,-4.476604,-4.709739,-0.793791,5.602577,6.719702,2.918926,-7.060651,9.575230,8.820095,1.352609,-0.467789,-4.924977,-7.364605,-8.674117,-0.495470,7.309439,-7.738429,-3.204870,8.868569,0.818482,-7.174694,-9.997403,6.446010,-3.228508,3.681805,-0.003086,-0.124421,-9.357168,-6.922503,-8.210083,2.547710,0.149442,3.843795,2.510661,-0.852101,-4.609451,4.074290,4.352386,-3.795332,8.171589,4.018641,9.151355,1.260532,3.496086,-4.153665,-3.086129,8.933489,-9.710994,8.364419,7.962699,-3.351693,-0.188687,-9.323322,-8.930480,-2.645960,9.182978,6.520269,9.319217,-3.475563,2.011252,-5.587889,-6.069890,0.225613,5.635338,-6.504565,-2.974593,-0.335496,-6.051577,8.574689,7.236109,4.422112,5.804126,-9.639667,0.199510,0.525400,6.006022,-1.702829,4.397673,-3.341162,1.426783,1.634025,9.094989,-6.958039,5.194395,-1.572599,0.084389,3.996092,8.036178,-1.532680,-0.328008,7.622653,3.272717,4.175383,7.117971,4.479297,9.428357], dtype = "float32")#candidate|11725|(1000,)|const|float32
const_11726 = relay.const([-9.660340,6.146777,8.099413,-5.306553,0.864778,-8.219937,-1.063106,-5.579574,-6.110445,-5.664278,-5.098446,-5.438749,-8.822228,4.402261,-1.179350,0.108204,3.368081,-3.569897,-9.481691,1.250656,-0.117974,3.078440,-1.511232,-4.262805,4.628021,-0.562467,-7.253535,-4.778003,-0.358860,-5.734694,0.159859,-6.583547,-1.860336,2.928740,9.646875,6.338615,-2.348750,5.629534,-1.912743,-9.608135,-4.414722,9.065445,9.022476,0.963183,4.917144,-2.144643,7.413116,6.622533,0.049826,-2.431783,9.266193,-5.212737,-4.080211,-6.597397,1.478147,6.153534,-1.271759,6.831699,-9.413677,4.212171,-9.627388,-9.932214,-4.545305,-6.564554,8.385896,3.563617,-5.335122,-4.709306,0.641706,6.489893,5.942077,-0.691502,5.677757,0.901356,-9.467293,-8.976800,5.049141,-4.974803,-5.853739,7.001654,-7.025678,3.975387,2.653145,2.104521,-3.906461,2.188012,4.718137,8.569372,1.363098,-5.109324,-5.918239,7.746794,-1.823623,8.276982,-8.805841,-2.837078,9.120496,5.626869,8.952392,9.510135,3.962029,-0.040969,-8.301891,3.115768,-7.796753,5.686616,-5.619836,-9.390975,9.623812,-4.194205,7.121376,-6.671452,-4.865328,0.215347,-3.347451,4.127407,6.695129,3.241885,-4.951954,-8.465844,-1.166829,2.074006,-5.744869,8.866856,2.796262,8.783397,-4.123740,-1.730158,1.982826,1.823684,-8.407003,9.672835,-5.016255,-2.056286,6.935514,5.351468,-1.186107,1.812013,6.456761,-2.935359,-5.945699,4.480911,4.199476,5.803812,5.103786,9.611548,2.168471,0.434421,1.066513,-5.587091,-2.726958,-2.371889,-4.623369,9.284298,6.052224,6.569750,0.385487,-4.851136,-4.890534,7.732768,-7.658409,0.521526,4.785683,7.054397,-4.851790,-2.108356,-2.858061,-3.601467,-8.698171,-6.423263,6.454864,1.375530,-0.878026,-8.133834,6.873967,-2.864196,-8.631675,7.885884,-6.915777,-1.120722,4.206816,-3.233850,6.720379,-5.443269,-0.151722,3.564251,-2.688612,2.255668,4.237068,2.089942,5.826625,-4.936360,-4.197715,-3.143795,4.723665,4.036796,0.285775,-7.937817,-3.279590,-2.227078,0.465067,2.174191,-4.892934,-2.118289,-2.893621,-1.937904,1.099176,6.943299,-6.680668,-8.448040,-8.351030,-1.722392,4.174443,-2.370781,-3.668622,0.886005,9.055355,2.357431,2.826708,5.280039,-8.045716,3.478763,-9.530026,7.260432,-1.798462,-6.692366,3.854605,-9.839591,8.709416,7.497447,2.008339,3.625073,8.165663,-3.957003,-0.782123,-0.244435,9.902659,-0.128580,-3.269056,1.562203,-6.064531,4.061007,-4.845870,-5.147869,-4.000201,3.872779,-8.377394,-1.692639,-9.381354,-6.154843,-7.132557,2.270337,8.587726,-7.963309,7.213211,-6.326808,3.491831,9.339378,-6.971285,-5.632686,3.730207,-7.562999,-5.262028,7.392774,-1.389107,-7.825556,-4.630414,-3.714398,4.674973,2.153831,-2.264335,-2.848018,6.760039,-7.654972,-2.792256,3.767287,-8.089327,1.701496,-6.428159,1.948628,8.883742,-1.724457,9.150292,9.582422,0.558209,5.650933,-1.304314,9.407727,-3.074606,0.854058,-5.051547,-8.892165,8.562702,-4.198016,8.354732,-8.888838,6.167245,-6.464477,5.615794,1.323501,8.501402,5.589697,1.481869,0.007644,-0.371565,-2.339105,5.081543,9.353121,-6.450596,8.120942,-7.277034,-1.210298,-1.452445,-8.572152,-0.893093,-8.086392,0.448593,-9.264631,-5.789262,-5.463734,-5.668091,-6.553064,1.582032,-9.946190,0.845394,3.919622,7.606379,2.273757,5.591039,-7.788127,9.993775,3.186656,-2.325285,5.214044,7.950823,7.627616,-7.843862,-5.457280,4.578328,-2.575017,-2.408579,-9.318231,4.509961,9.079910,-9.425998,6.551191,-9.357244,-1.022549,-5.212987,7.714237,7.366670,6.994356,-4.498204,9.755022,8.930944,-7.113031,-0.523239,9.425194,-3.606357,-1.612311,-6.002273,7.518188,-4.551507,2.791799,3.655716,-3.954542,8.764280,2.922566,6.932329,-9.110841,-6.230341,-9.163588,3.921040,-6.802643,-3.162861,-9.124341,-7.627173,2.840437,3.364873,1.567560,-2.514644,6.103471,-4.524798,0.290351,-9.782829,-8.461366,8.763098,3.303674,-7.761824,-4.548964,-2.061913,-8.149507,-6.561838,9.364152,-2.947285,9.166444,-7.400989,1.149035,0.858564,4.898617,-6.566771,-9.449102,-4.570641,-1.604509,1.918078,-2.920774,-9.820284,9.086347,-4.998223,-7.292645,2.628786,9.028386,2.049623,-5.585659,-1.024585,-2.659224,0.688062,-0.517492,-7.363147,0.140476,5.481420,4.807031,-6.133019,5.318268,4.437156,7.390086,7.194349,-8.343622,9.457428,3.117860,-6.585337,-8.721633,-9.901888,-3.430744,-0.096628,-7.696843,5.211910,8.718281,-2.802001,-3.076298,-8.721619,0.680520,1.656252,-7.768319,-2.162339,-2.153453,8.668838,4.353290,7.245309,-2.090455,3.548054,9.510383,-5.861427,-7.935830,0.482844,-8.286903,-5.900751,9.772285,-2.933308,4.346287,0.647682,3.825253,-9.443556,-3.887940,-6.276295,3.805564,-4.168114,-0.468311,2.909392,9.188620,-9.782806,5.119087,4.850574,-8.259546,-0.552652,9.808123,6.397334,2.367205,7.505044,4.326850,-0.227725,4.581161,7.489321,-3.100177,-3.115266,-9.799048,2.524008,5.710562,-1.897813,-3.055576,0.476504,7.172655,0.257957,0.461661,-9.733547,-0.343517,2.652988,7.992744,-9.614781,-0.645447,-9.940426,1.340868,-4.637051,-6.130205,-3.882689,0.681692,-9.640617,-9.687855,5.543873,-6.531209,-6.039604,0.366358,-6.090514,-5.447856,-5.996148,6.199578,6.721815,-4.907021,-0.388917,5.431053,-9.422288,-6.062011,3.085153,-3.780802,-1.129821,-4.447182,0.182866,0.356747,1.996916,-3.041341,-2.522666,-1.856981,-5.154481,0.864591,5.662460,0.299012,6.538358,1.119897,-6.309492,-6.623982,-3.972650,5.576331,-6.885459,-2.467145,4.408265,2.325021,-4.113617,3.665687,-3.771138,6.367391,4.160812,0.065585,5.506769,3.795534,-6.809881,-7.224918,8.506375,9.467259,-1.379403,8.215045,-6.902827,3.893252,-9.222223,-9.331537,2.687718,-1.125998,-4.727882,-6.972963,-8.468482,-1.371084,6.032413,-0.991660,-9.977520,-3.581802,9.862538,-2.581251,-4.209273,-4.970392,7.174886,8.028115,9.657394,1.100377,-8.636083,4.901164,-6.461963,2.229335,-2.418484,-2.629633,3.054826,-4.725783,-9.301435,9.838189,-9.593335,7.278529,-6.178780,5.267322,-7.918494,5.049542,-2.929203,-6.271873,-9.097668,-7.337514,0.015819,-1.248975,6.448383,5.665522,5.422851,-7.997606,-0.518811,5.877352,-6.499380,-8.906667,-2.934278,3.710871,-0.355709,7.048226,-4.731919,-9.202030,-2.314445,-4.381434,5.501158,6.774117,-5.590088,-9.416178,0.437601,6.131433,-5.076409,-0.767304,-3.848571,7.241682], dtype = "float32")#candidate|11726|(630,)|const|float32
call_11723 = relay.TupleGetItem(func_5828_call(relay.reshape(const_11724.astype('int64'), [1690,]), relay.reshape(const_11725.astype('float32'), [10, 10, 10]), relay.reshape(const_11726.astype('float32'), [630,]), ), 0)
call_11727 = relay.TupleGetItem(func_5832_call(relay.reshape(const_11724.astype('int64'), [1690,]), relay.reshape(const_11725.astype('float32'), [10, 10, 10]), relay.reshape(const_11726.astype('float32'), [630,]), ), 0)
func_9248_call = mod.get_global_var('func_9248')
func_9250_call = mutated_mod.get_global_var('func_9250')
const_11738 = relay.const([-0.296604,3.175653,-2.622954,-0.707776,2.321770,-6.102989,7.253208,-5.412167,-5.618389,3.983584,8.031610,4.867572,3.250458,4.230114,1.412730,-0.125563,-3.311425,-6.109660,9.582044,-1.823228,-0.024684,2.591174,-9.874173,5.281748,-2.473134,2.411953,5.203772,-2.680486,1.752655,5.179244,0.836310,-4.164209,5.019152,-5.190328,2.237924,1.319825,-0.697537,2.969995,8.657263,0.501897,1.278510,4.048344,4.923358,3.297900,4.250065,5.547304,3.980188,-2.337950,9.118904,6.061596], dtype = "float64")#candidate|11738|(50,)|const|float64
call_11737 = func_9248_call(relay.reshape(const_11738.astype('float64'), [5, 2, 5]))
call_11739 = func_9248_call(relay.reshape(const_11738.astype('float64'), [5, 2, 5]))
uop_11744 = relay.tan(const_11724.astype('float64')) # shape=(1690,)
func_6473_call = mod.get_global_var('func_6473')
func_6475_call = mutated_mod.get_global_var('func_6475')
var_11755 = relay.var("var_11755", dtype = "uint64", shape = (144,))#candidate|11755|(144,)|var|uint64
call_11754 = relay.TupleGetItem(func_6473_call(relay.reshape(var_11755.astype('uint64'), [12, 6, 2])), 1)
call_11756 = relay.TupleGetItem(func_6475_call(relay.reshape(var_11755.astype('uint64'), [12, 6, 2])), 1)
uop_11765 = relay.cosh(uop_11744.astype('float64')) # shape=(1690,)
func_8909_call = mod.get_global_var('func_8909')
func_8912_call = mutated_mod.get_global_var('func_8912')
const_11769 = relay.const([-4,-8,-5,1,2,6,-10,-5,4,-5,7,8,-6,-10,-10,2,-9,8,-1,-9,-8,-6,-10,3,-8,6,8,9,-9,-8,-5,3,-3,7,2,6,5,-10,2,8,2,5,-10,-3,-1,-5,3,2,1,-9,-7,4,-8,6,8,10,-10,1,7,-6,-6,7,-1,3,-10,6,9,9,6,7,-9,-5,10,-6,1,7,5,7,5,-1,-4,2,6,-3,7,8,7,-3,-3,-5,-3,2,-8,-7,10,-10,4,10,-5,4,-2,-8,-10,-5,-1,7,-7,-5,9,10,9,-6,3,-3,-8,10,1,-7,8,4,-6,-5,-2,-8,2,2,9,4,-3,-2,-8,-1,8,-2,1,8,-6,8,3,1,-5,9,-3,10,4,9,2,-10,7,1,-7,3,1,-5,1,-2,-1,2,3,-3,4,8,-3,10,-10,8,-9,-3,4,5,-4,-2,5,2,-8,7,-7,9,3,10,10,1,8,-10,-1,-6,9,1,-3,-5,8,-4,7,4,3,-1,1,4,7,-10,8,-3,-7,4,9,-1,-1,9,8,-8,-9,-8,3,8,8,6,5,5,-8,-1,6,2,-9,-5,-6,10,4,-4,1,-4,-1,3,4,7,6,-6,10,-2,-1,-7,-2,2,6,2,9,4,-8,5,6,-3,10,7,-7,10,-7,-5,-4,6,5,7,4,4,-10,-4,-3,-9,6,6,6,-3,2,4,7,8,-6,7,-6,-1,-2,-3,4,9,-7,-5,-10,7,-8,-2,1,-8,4,-8,-6,7,6,6,-1,9,-9,-4,-5,-5,-2,-10,6,9,-3,2,-5,-1,10,-10,2,2,6,-2,-5,-3,-3,-9,1,9,-4,-5,-2,4,4,7,-3,-7,3,9,-6,6,-7,8,-2,4,-10,6,5,-7,4,-5,1,8,-1,3,-1,-7,-3,-6,4,2,9,7,10,3,8,-2,9,-4,-9,8,-7,6,-1,-6,10,-10,-7,-5,3,-10,-7,9,-2,-6,3,1,-10,1,-7,8,-6,-8,-7,8,10,-10,-10,-3,-3,5,3,-5,3,6,-4,9,3,1,-2,-10,8,-1,1,5,3,2,-6,-8,-5,-8,1,9,7,-5,-10,3,-7,8,-6,-5,-3,-4,-6,-7,-9,1,4,-3,9,-10,-5,7,-7,1,6,-4,-3,-7,3,1,10,-3,2,-5,-5,10,-10,-1,3,-2,-8,-9,7,1,1,5,3,-6,-3,8,10,8,-6,-8,-1,-8,-1,1,5,9,3,9,-9,3,-8,1,-8,9,-8,-2,1,7,9,7,9,9,-9,9,5,-1,-10,2,-1,-1,10,-9,5,3,5,7,-6,-5,-5,3,6,-5,-6,6,10,8,3,2,-5,-10,-5,-4,3,5,8,10,-4,2,-3,-9,6,-2,-7,6,7,2,-5,4,10,8,9,-1,4,-5,2,10,1,8,6,10,2,-7,10,4,1,9,-1,-5,2,2,3,-1,-1,4,4,3,8,4,-3,10,-2,6,-7,-8,10,-4,-9,-1,5,2,-9,-7,6,5,-10,5,-3,-5,1,-3,3,-6,-4,7,-2,3,3,-10,-9,-10,1,-1,4,7,1,-8,9,9,3,-7,4,-8,-7,-7,5,-7,1,-1,6,-2,-9,-1,6,-4,-7,-4,8,-7,-4,3,-2,-6,-8,9,6,-1,4,7,-4,-7,-1,-4,-6,-6,-5,-10,7,1,-4,1,4,6,4,7,4,10,6,-4,5,5,-9,9,10,3,-2,3,-6,5,-2,-9,6,-2,3,7,8,-10,-6,10,10,-9,8,2,2,-4,-10,1,-2,2,-2,5,-10,4,-5,1,10,10,3,3,-9,-8,-10,7,-5,-1,-8,5,-1,-6,-5,-4,9,4,5,-5,-4,3,5,8,-9,-7,5,-6,2,5,-9,4,-4,-7,-6,3,-7,-2,10,-2,-8,7,2,-10,-5,4,5,-1,-6,7,-3,2,9,-2,-5,-8,-3,6,10,2,2,-9,-3,3,-9,3,-3,3,8,-2,10,-6,7,-8,8,2,7,-7,2,-2,-2,-4,-10,6,-10,1,-8,-3,-8,2,3,8,-5,-10,4,-7,-9,-9,6,6,-4,6,-5,9,-1,1,-6,4,3,8,8,-2,-6,3,-6,8,8,-4,-4,-8,7,-9,-10,6,-6,9,-10,10,-9,10,4,7,-3,-6,-7,9,6,7,-10,-7,9,-2,-6,7,-5,-5,4,-4,-5,3,7,-6,-2,8,9,-10,-3,7,3,7,2,9,-3,4,-3,2,1,-2,-2,-6,-8,-9,-9,2,-10,-1,10,8,-5,1,-9,10,10,4,-4,5,9,5,-8,-9,6,3,-2,-9,-5,-6,3,6,-10,7,3,8,-4,7,1,-4,-7,-3,10,-7,10,9,9,-9,6,-5,-6,10,-5,5,4,-3,6,2,-5,1,2,3,3,-2,-5,-9,-9,4,7,-2,-9,-6,10,-3,6,-4,-1,-4,8,7,-3,6,-9,-8,2,-9,-6,9,4,-4,-5,-1,-5,5,10,-7,-10,5,-5,-6,-6,9,-2,9,-8,6,-9,-2,-3,10,-8,-6,-9,-8,5,-3,-10,2,-9,-10,4,-4,5,9,-2,-1,3,-1,-8,1,4,6,-4,-10,1,-4,5,8,-4,10,-6,-8,-8,-5,9,-2,8,9,-8,9,-8,-4,10,5,-1,-10,5,7,-7,10,6,1,1,10,-10,1,-3,-10,-9,9,-1,-6,-6,-2,3,1,5,7,-1,-7,9,8,3,7,5,1,-4,4,7,-3,9,4,-5,2,-10,-6,7,1,1,3,3,-4,10,-6,-6,-1,-4,-9,-6,4,9,4,-3,-9,2,-2,7,-1,6,6,-6,-4,-4,9,5,-5,-5,-2,6,7,-5,-5,7,-9,-3,2,6,2,-1,7,6,10,-2,4,-6,-6,-9,5,-6,6,1,-3,-4,-4,-7,10,-6,-9,-7,-6,1,5,-4,-4,5,2,-8,5,-1,8,2,3,10,-6,-2,-1,-6,-3,-9,1,-6,9,9,7,-3,-7,-3,-4,-2,-2,-3,-9,1,9,10,-3,-6,-2,8,-6,2,-7,4,10,2,-2,6,3,-3,7,-4,-10,5,-5,1,4,-5,-10,2,6,-3,8,2,-9,4,8,8,-6,2,-6,5,6,-10,-10,8,6,-6,3,4,3,-1,5,1,-4,7,5,9,1,-8,2,8,-7,2,2,-3,-5,-8,-4,2,-3,8,-10,-9,-6,3,-3,8,5,10,-8,-4,7,-3,-2,-1,-5,-3,5,5,9,1,-9,1,-1,-3,6,-1,-9,6,-1,-6,-5,1,-1,3,-6,-1,5,9,3,-6,9,-1,-4,-10,3,3,-5,10,-3,-3,7,-4,-5,8,-4,4,4,4,2,2,9,5,-2,-7,6,-3,-3,-7,9,4,-10,9,-6,1,-6,-5,-10,7,3,-6,4,-4,-4,5,6,9,2,1,10,5,-9,-10,-1,3,-1,-5,-6,-1,-9,6,-8,5,-4,7,10,-1,-4,-10,-8,-9,9,3,2,-10,10,10,2,7,4,3,6,5,-6,3,5,2,-5,-3,-7,-1,8,7,9,-9,6,6,-5,1,5,5,5,6,-2,-10,2,8,-5,2,-6,6,3,3,-5,1,-8,10,6,7,4,7,-9,6,9,-7,-10,-9,4,-3,8,-9,-2,4,-6,6,-8,-6,9,10,-1,-6,-9,4,-9,-2,-2,-5,-9,-4,10,5,-4,-5,-4,-2,-4,-5,-3,6,-7,1,9,-8,9,-3,4,6,-6,1,-6,4,3,-2,-10,10,-9,9,-1,8,8,8,7,10,-5,-5,7,-2,1,-9,-4,-8,-2,-5,-5,2,4,7,-3,9,1,-6,5,9,4,7,-6,3,4,-10,10,-2,1,-8,-8,10,-10,8,-6,1,4,8,-5,-6,10,9,8,-6,3,-3,10,-10,10,6,-2,6,7,4,6,4,-7,-5,6,-4,-5,10,10,6,6,6,10,-4,7,-2,1,6,-9,-3,-4,4,3,5,-1,-1,-6,5,-2,-5,-10,-1,-3,6,-10,6,5,-3,3,-10,-2,1,2,4,-8,1,7,6,-1,-5,1,-4,3,-5,-7,1,5,-7,-10,1,3,-6,5,4,6,6,-1,6,-8,-8,-3,6,1,-7,8,10,9,4,8,8,5,3,-4,10,9,1,-9,2,-2,-2,6,-2,6,8,1,-1,-10,4,3,-10,-4,-4,7,2,4,10,5,-4,-7,6,8,6,-2,-6,6,9,6,-2,1,4,9,-5,5,5,4,2,1,-4,10,-1,-5,-6,-4,-5,6,10,3,-10,-7,-10,8,-4,10,5,-7,6,-7,-4,3,-5,9,4,3,8,-9,-2,2,10,-4,-2,1,3,-10,-8,8,-2,9,7,-8,-3,-7,7,-10,1,-2,-5,3,-1,-6,-6,10,-1,3,-2,-5,9,-9,9,-5,-3,5,10,-7,3,-9,10,-6,-8,-9,2,-5,-5,-9,-4,-7,1,-5,2,-3,-9,-3,-2,10,-9,-2,4,-2,-2,3,5,-2,-4,9,-1,10,-7,-7,-3,8,-7,-3,-8,7,-5,-5,-10,7,2,-9,-2,-2,-5,5,7,2,-4,6,9,1,6,4,-10,2,-9,-6,-2,-10,-9,-5,-10,4,-1,5,4,1,1,7,-6,-7,10,10,4,-10,-4,-1,1,10,6,1,-3,-1,8,8,-9,-3,-8,2,2,7,9,2,-3,-2,-8,-10,-5,-7,-1,1,2,10,6,4,-5,5,8,4,10,2,-10,10,5,10,-2,5,-4,4,8,9,-8,7,-2,9,8,-9,-6,-6,6,-7,9,-4,9,-5,5,-2,8,3,4,-1,5,-3,-1,-2,-6,-7,10,-10,-7,-8,8,-9,1,4,6,-8,-5,2,1,-3,10,2,9,-1,-6,3,8,8,-4,7,-8,-10,7,9,5,-4,9,-7,9,-7,6,9,-1,-5,1,-6,-6,-4,-8,10,-4,-8,-2,3,10,8,-1,-10,-6,-1,7,-8,4,6,6,5,10,-4,8,-4,9,-6,9,-5,1,3,-3,-2,6,9,4,1,5,6,5,4,4,-6,-6,-9,9,6,7,-9,6,5,1,-3,1,10,1,-10,3,-9,9,5,-4,-9,9,-3,5,-2,-4,-3,-6,9,-8,-4,6,-10,-5,-2,6,-1,-9,-9,-2,3,7,1,10,3,-10,8,2,1,-1,-8,4,3,4,10,-4,-2,-8,6,-4,3,-8,1,9,9,5,-8,-7,-2,2,6,4,8,-2,7,3,-3,-1,1,4,-9,-7,8,7,-4,-2,6,10,-8,-8,10,7,2,-8,9,3,3,-6,-4,10,3,-6,-10,2,-1,-6,-2,6,2,-7,8,-8,7,-3,-8,-9,-7,-9,3,8,4,5,-7,-1,5,-10,5,-3,4,5,8,-3,9,5,-7,-4,-5,8,7,10,7,-4,-10,7,4,-5,4,-1,-4,-2,7,2,4,5,9,-5,7,-9,8,-10,5,-9,5,-1,4,8,9,5,-9,-5,8,-5,1,10,9,2,-5,-3,10,-9,-9,-8,-6,2,-5,-4,-8,10,2,-9,-1,-4,-3,-7,3,9,-5,-8,2,-6,10,-2,8,8,-1,8,-9,8,-9,4,3,2,10,8,-2,9,-4,-10,4,-2,-6,-6,-3,6,-3,2,4,5,5,-4,-10,1,-5,-6,-3,-3,-9,4,7,-3,-10,6,10,8,5,-4,-8,-8,-8,-1,5,9,-4,7,3,-2,3,-9,-9,8,-2,8,-9,-10,-3,7,-6,3,9,1,-7,9,1,5,-6,4,7,-7,-8,-3,-9,-10,-7,4,2,2,-10,-1,10,9,-1,3,4,-4,6,-5,10,-9,-10,-6,10,-4,-8,9,3,3,2,-3,7,-3,9,-7,5,5,-9,-8,9,-9,-8,-5,10,-6,8,-1,1,8,-1,-8,-1,2,3,10,5,-1,10,6,7,-2,-5,8,6,5,-10,-4,7,-4,-7,6,-4,4,4,3,4,-4,8,-5,9,2,5,2,-3,6,-1,-3,-9,10,-9,-3,-10,-9,1,3,-6,-9,10,-6,-8,-4,-5,7,-5,7,1,6,7,10,-1,-5,-7,-9,6,9,-8,-4,-1,4,9,10,1,3,-1,-5,-5,1,-7,-6,-4,10,1,4,6,-6,1,-6,1,-10,10,7,10,-5,8,3,-10,3,-6,3,-7,8,6,10,-1,2,-10,9,6,-8,-9,6,3,-1,8,-2,3,-3,-1,-6,5,-6,-6,-4,8,7,-2,-7,4,-5,-1,7,4,3,-5,10,7,-5,-10,5,3,-7,5,-2,-1,-1,-2,6,-10,-1,-8,-7,6,7,-2,-6,-6,-10,7,2,-6,2,-3,4,-7,-10,-8,1,-8,-4,3,-5,-2,-2,6,-1,-6,2,3,-3,-5,-7,-10,10,7,8,3,10,10,-6,-7,1,-2,-1,1,5,-6,10,1,4,2,-9,-7,10,-3,6,-5,-1,1,2,-7,9,-7,9,-9,-5,7,7,5,5,-6,-7,-9,-10,2,2,8,5,10,-3,-9,1,-4,-3,-6,6,9,-6,2,7,-7,5,2,-1,4,-1,-6,-10,-1,-1,9,-10,9,-7,4,-4,4,-6,-9,-9,5,-5,-2,-1,-8,-9,-10,-5,7,-9,-7,1,4,6,-6,-6,4,-2,-8,7,-7,-5,5,7,4,-10,3,-10,1,-10,-2,-10,2,1,8,8,-4,4,4,1,7,9,-5,7,-7,-4,7,-5,9,1,-8,5,-3,-3,-10,5,8,-9,4,-10,5,2,-2,-3,7,-8,-4,-6,2,3,6,1,-1,8,6,-8,5,-7,1,8,3,-2,7,-3,9,-10,4,-8,2,2,-5,-1,4,-5,-7,10,9,8,-2,-4,6,8,5,-7,-2,-5,1,5,-5,8,-5,3,-4,7,-1,-9,-7,7,2,1,2,3,3,9,-10,9,9,7,-2,-9,9,9,4,-10,-9,2,-6,-7,3,-6,-6,8,6,9,4,-10,-8,9,-5,10,-9,-5,9,3,-7,7,-5,-9,4,8,5,-9,8,-5,-6,-5,9,-7,2,-2,-10,-4,-6,5,-10,8,-2,8,-4,3,2,-2,-9,-1,10,2,4,4,-9,-2,1,-6,-4,4,-1,-7,-4,6,-9,-4,2,-10,2,-6,2,-1,7,-7,-4,-10,-10,8,7,9,10,-6,1,-9,-1,-5,-5,5,8,3,-7,-8,10,-10,1,5,-3,4,-9,7,9,3,2,4,-4,-1,9,-5,-5,-8,-6,-8,5,3,6,-4,-3,9,-6,5,-9,8,-4,-9,-10,5,-9,7,6,8,1,7,10,1,-8,-4,1,-8,-7,-5,-3,4,-3,8,2,-1,9,-9,3,-4,6,-9,10,-3,-4,5,-9,1,-4,1,-6,-9,10,3,9,6,5,-2,5,-5,4,-8,1,-2,10,-10,-8,3,-8,3,6,-1,-9,8,-10,4,-3,4,-4,10,4,2,9,-9,-2,2,-4,-8,8,8,1,2,6,9,-4,6,8,-9,-5,-4,3,-6,-1,-1,-4,-10,10,-8,-8,8,5,2,-6,-10,9,10,2,-8,-2,-3,-7,9,5,-6,4,8,8,3,-1,4,7,-4,10,1,3,8,8,-9,-5,-7,7,-8,-5,10,4,-8,8,9,5,1,3,-10,-5,4,-2,-10,-6,5,-1,-7,-10,7,8,9,-3,3,-8,-9,-10,6,5,2,-6,5,3,-4,9,-5,5,-10,2,4,-6,4,7,-9,-6,4,-7], dtype = "uint32")#candidate|11769|(2940,)|const|uint32
call_11768 = relay.TupleGetItem(func_8909_call(relay.reshape(const_11769.astype('uint32'), [2940,])), 0)
call_11770 = relay.TupleGetItem(func_8912_call(relay.reshape(const_11769.astype('uint32'), [2940,])), 0)
bop_11776 = relay.divide(uop_11765.astype('float32'), relay.reshape(call_11723.astype('float32'), relay.shape_of(uop_11765))) # shape=(1690,)
bop_11779 = relay.divide(uop_11765.astype('float32'), relay.reshape(call_11727.astype('float32'), relay.shape_of(uop_11765))) # shape=(1690,)
output = relay.Tuple([bop_11707,bop_11712,const_11725,const_11726,call_11737,const_11738,call_11754,var_11755,call_11768,const_11769,bop_11776,])
output2 = relay.Tuple([bop_11707,bop_11712,const_11725,const_11726,call_11739,const_11738,call_11756,var_11755,call_11770,const_11769,bop_11779,])
func_11788 = relay.Function([var_11711,var_11755,], output)
mod['func_11788'] = func_11788
mod = relay.transform.InferType()(mod)
mutated_mod['func_11788'] = func_11788
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11788_call = mutated_mod.get_global_var('func_11788')
var_11790 = relay.var("var_11790", dtype = "bool", shape = (9, 2, 14))#candidate|11790|(9, 2, 14)|var|bool
var_11791 = relay.var("var_11791", dtype = "uint64", shape = (144,))#candidate|11791|(144,)|var|uint64
call_11789 = func_11788_call(var_11790,var_11791,)
output = call_11789
func_11792 = relay.Function([var_11790,var_11791,], output)
mutated_mod['func_11792'] = func_11792
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10785_call = mod.get_global_var('func_10785')
func_10787_call = mutated_mod.get_global_var('func_10787')
call_11855 = func_10785_call()
call_11856 = func_10785_call()
func_9534_call = mod.get_global_var('func_9534')
func_9540_call = mutated_mod.get_global_var('func_9540')
var_11858 = relay.var("var_11858", dtype = "int64", shape = ())#candidate|11858|()|var|int64
var_11859 = relay.var("var_11859", dtype = "float32", shape = (312,))#candidate|11859|(312,)|var|float32
const_11860 = relay.const([-5,-10,-6,2,-3,-7,-8,8,-5,-5,8,-3,5,-9,9,4,1,-4,-5,10,-3,-10,7,4,-2,-10,4,-1,3,5,7,7,-3,7,-7,9,-6,-3,-9,-5,-8,1,8,-3,3,-4,-7,-10,-2,-2,6,1,10,-2,-2,10,-4,4,-5,3,-6,10,-8,6,9,-10,-9,4,-4,-10,7,-8,3,3,2,-7,2,2,10,-1,5,-2,10,-6,4,5,-8,-2,-7,-10,-10,-5,-6,6,4,5,-7,-6,4,-5,9,-10,3,7,-7,-8,4,1,2,-8,-3,8,9,-8,7,1,-3,5,3,5,1,-4,9,-6,3,7,-6,-7,-10,-8,-10,5,2,-9,-3,2,10,-10,-3,1,-10,-5,5,3,-9,-2,-2,4,6,8,10,5,7,-2,-2,8,1,-10,5,2,8,5,-1,-3,-4,8,10,5,-7,-8,10,-2,-9,-9,-8,10,-5,6,-6,2,-2,6,-2,-7,-10,9,-1,2,3,-6,-4,-9,-3,-4,-5,-1,-5,-7,9,-7,1,10,-6,5,6,2,-10,-9,-7,-6,-7,7,3,10,-2,-3,-4,-8,-5,-2,4,1,7,1,-2,4,1,3,9,-7,2,-3,-3,7,-4,1,4,-4,-3,-3,-1,6,10,7,5,-10,6,-5,4,10,-2,-8,4,-5,8,-4,9,-10,-9,8,-2,3,4,10,-2,8,9,8,9,-10,3,5,-4,-3,-3,-9,1,-5,-1,-3,-5,-5,-10,-10,10,7,4,7,8,-10,-1,5,2,7,7,4,-2,8,6,10,-8,9,-10,9,-4,-8,-8,7,7,1,3,-7,8,6,3,-2,-4,10,-7,9,-8,8,-1,5,-8,-1,-6,7,-2,-10,10,6,4,7,7,-7,-4,10,-2,1,-3,-3,9,-3,-5,-7,-8,9,9,3,4,10,7,-3,-4,8,-5,6,-3,8,-3,-2,-8,-3,9,-4,6,-2,3,-1,-8,-4,-4,-10,9,-4,2,5,7,6,4,2,3,4,-7,-5,-7,-9,-9,-5,-6,-3,5,8,-8,9,-4,3,-2,5,3,6,9,1,6,-8,-5,3,-1,-1,3,2,-2,9,3,5,4,-7,9,-2,-4,-1,3,8,-3,4,10,5,2,-5,-10,2,4,-8,9,-1,-2,3,-4,-1,1,-3,3,4,6,10,-2,9,-4,-10,-8,-6,-3,6,-10,-4,-2,4,9,-1,-7,-8,-5,-6,3,-4,9,1,-10,7,4,3,-10,-3,4,1,-7,2,-5,3,-6,-9,6,5,7,-6,-5,10,7,-2,7,2,-2,6,-5,-7,5,-4,-6,-6,2,7,-4,-1,-8,2,8,-1,-10,-10,-7,6,1,-2,-8,3,4,-7,4,-9,-3,-10,-5,-3,-8,-10,8,-7,-5,-9,1,4,9,-6,-1,5,-6,-7,6,7,-3,-8,-2,-1,6,-1,9,4,9,2,3,-8,-4,1,6,-3,7,-9,8,8,-9,1,-8,-7,5,1,-7,-8,-5,-1,8,-10,-5,4,1,7,2,-6,-5,7,2,-7,-6,-2,-5,-2,6,6,4,-7,1,-3,-4,-3,-3,8,-10,-6,3,7,-10,-10,4,-8,-7,1,8,3,4,2,10,-3,-8,-7,5,-8,-5,-1,-6,7,-3,3,4,-7,6,4,-1,6,-5,10,-9,7,9,-2,7,8,10,5,-1,-10,2,-3,-4,4,-4,-1,5,4,6,-8,-7,-4,2,-1,-2,8,-7,-10,-1,-10,1,5,-9,-9,-7,7,7,-1,1,-10,2,-10,10,-2,4,-6,-5,-2,-2,-7,-10,-2,-6,-4,4,-3,-3,-9,-2,-3,-5,1,10,2,4,10,6,1,-7,-2,-8,-9,-5,-3,9,5,-7,-2,2,10,7,-10,-1,6,5,-9,10,-5,6,6,-5,9,-7,-10,7,3,-9,-5,-7,10,-9,-6,-1,-8,10,-2,2,7,-2,-6,-9,3,5,2,-10,-3,-5,10,1,-3,-1,-6,-6,-2,-1,9,9,-8,1,6,2,2,10,1,9,2,9,-1,-10,7,-1,-9,-10,7,-7,-3,-6,-8,7,10,5,6,-10,1,1,-1,-6,-7,9,8,-10,-9,-7,3,-6,10,6,7,6,-8,-8,1,1,-10,1,8,-10,8,-2,1,-5,-1,-8,7,-6,1,3,-8,10,-5,-8,2,10,5,-2,-1,-7,10,-1,-9,3,3,-2,10,-2,4,-8,8,-8,-9,7,-9,-4,-2,-7,6,-3,-4,3,-8,1,-3,-8,-6,-1,-9,8,-5,-7,9,-7,2,5,4,1,1,4,10,6,-8,-2,-7,5,3,8,5,-9,5,4,10,-1,-9,8,7,-5,10,2,-10,-1,10,-6,-5,2,9,-9,-3,-1,-7,2,-2,1,-6,1,-1,-10,-4,-5,-1,10,5,8,-2,-8,7,-5,9,-3,10,-1,-10,3,7,-2,-5,8,-2,5,5,-4,-5,3,6,9,4,10,-2,8,9,10,4,3,2,1,3,-2,-8,-4,-5,-4,-6,-2,5,10,2,9,7,2,-10,-9,-2,-5,7,7,-6,-10,-3,-1,-2,2,2,-8,3,-8,-6,-8,-7,-1,4,-6,-8,1,7,-10,6,1,-5,-4,-2,3,-9,-8,-4,9,-6,-8,-1,8,2,7,3,-5,10,9,2,-9,3,-7,8,-6,-1,1,-3,2,-8,-5,-8,9,10,9,8,-2,9,7,-5,2,-7,-10,3,-8,-2,9,-3,-9,4,6,-7,-4,-10,-4,6,-3,-2,-3,-8,3,6,-9,10,-6,5,8,-2,10,5,-9,1,-2,-8,7,10,3,2,6,9,8,-4,7,9,8,-1,-5,-8,7,-3,-1,4,8,-5,2,6,9,6,-6,1,-1,2,7,4,-7,8,-2,1,2,4,-1,2,2,5,-5,5], dtype = "uint64")#candidate|11860|(1100,)|const|uint64
const_11861 = relay.const([[6.885113,-9.368435,-9.582049,4.464222,-6.128766,8.783038,5.220989,-1.605269,-2.880134,-0.922219,-1.923816,4.166937,1.470788,-4.089710,-9.646525,-4.398008,-8.401770,3.095024,5.279254,-5.466130,9.961596,0.855561,4.481441,7.847517,3.402518,-2.789605,-6.881338,2.156228,-2.145278,4.915222,1.679098,-6.512522,4.086850,-8.242821,-4.765188,-9.674641,3.598534,-0.838071,-9.016673,-1.063717,4.374916,7.782165,-7.572764,-3.596224,2.777408,-3.053255,6.921185,-2.077572,-1.346867,1.062716,-5.842181,-2.244630,1.606227,-3.124959,3.525574,-7.546417,9.936811,-1.813812,-3.214168,-2.879975,-5.751822,1.898791,6.538190,-1.619495,-3.215769,-1.351995,-5.981459,-9.458945,-1.473361,2.598906,-1.934880,-8.953066,6.867260,9.596027,7.290008,7.128325,-4.039826,2.415369,6.117493,-9.156221,6.616621,-2.892830,8.221561,-3.647500,3.801664,8.510859,6.941639,8.401220,-1.625583,-3.413192,-6.641164,-5.225369,-0.295097,-6.863262,2.036425,-3.688410,2.026562,-5.592750,5.498459]], dtype = "float32")#candidate|11861|(1, 99)|const|float32
call_11857 = relay.TupleGetItem(func_9534_call(relay.reshape(var_11858.astype('int64'), []), relay.reshape(var_11859.astype('float32'), [78, 4]), relay.reshape(const_11860.astype('uint64'), [1100,]), relay.reshape(const_11861.astype('float32'), [99,]), ), 5)
call_11862 = relay.TupleGetItem(func_9540_call(relay.reshape(var_11858.astype('int64'), []), relay.reshape(var_11859.astype('float32'), [78, 4]), relay.reshape(const_11860.astype('uint64'), [1100,]), relay.reshape(const_11861.astype('float32'), [99,]), ), 5)
func_3521_call = mod.get_global_var('func_3521')
func_3525_call = mutated_mod.get_global_var('func_3525')
const_11872 = relay.const([[-3.230060,-6.233677,-5.982195,9.853153,-8.523348,-6.824870,-8.422942,-4.639779,-9.226096,4.975469,-1.488165,-5.067985,3.457720,2.746076,-9.092735,8.976791,-0.915152,9.535561,-5.945004,-0.188994,3.060293,3.356656,-5.734478,-7.754803,2.539466,-5.450501,-4.189023,6.413165,-2.015135,5.042005,0.822387,-8.702445,-3.020583,-1.776959,-4.368999,-4.375926,1.201839,8.767405,8.087349,6.128103,-7.998633,-9.099335,-0.886334,-3.156507,-2.748347,2.964854,-8.768143,9.488150,-7.981531,-0.011160,-1.413461,-9.090914,-6.116783,7.873012,2.898565,-3.405680,8.458164,-4.650712,8.393769,-5.635246,6.469774,6.729475,4.591797,-9.019964,7.192845,7.104857,8.736074,0.073317,3.101369,7.272952,7.139398,-2.535199,-9.186871,0.514485,-0.652629,-9.685124,4.949783,4.497196,-8.672194,-4.045332,-0.633883,-3.620220,-3.867486,-7.250878,-7.898724,-1.644885,2.680818,-7.509706,-2.100586,7.625483,-4.083204,-2.731574,-3.377433,-9.991548,5.538249,-3.115768,-4.142295,-5.303485,-2.823946,2.157019,-3.506366,1.804743,-1.558040,-4.519088,5.662044,9.599988,6.508379,2.856735,-1.697890,-8.211264,1.101502,1.662033,3.919765,-2.830420,-4.017721,5.804817,6.656445,6.496980,-3.845896,-8.516928]], dtype = "float64")#candidate|11872|(1, 120)|const|float64
const_11873 = relay.const([9.175169,-7.365136,8.250770,-6.682268,7.567000,-5.078775,7.895434,3.812966,-2.017593,-3.321219,8.999371,-6.068871,7.803495,5.812808,-1.452010,3.109053,1.505273,1.834313,5.414128,7.763878,-3.653389,8.610052,-5.608206,9.274279,3.434641,0.563954,2.401003,9.144552,-7.878549,-4.503915,0.583614,3.117526,2.317173,8.735847,-5.589570,-6.720088,3.681337,-5.019339,-2.474831,-6.708304,8.714350,-0.656422,6.325380,-2.169764,-2.729721,8.418885,-3.861202,-1.471544,3.976833,-2.641577,4.720930,-6.573546,2.459554,-8.908164,5.216421,8.700168,-4.073032,1.161231,3.513586,-9.888692,-7.244780,-7.992577,-7.064623,5.746921,-9.208469,2.707359,-1.399435,-5.815233,-6.193800,2.495390,-7.800942,-4.874283,-4.706483,-8.756776,7.812828,6.609451,-4.680079,3.584444,-2.754085,6.766579,-0.425925,-6.372497,-4.018021,-4.738270,-6.709442,-9.916205,1.211459,7.626507,8.839767,8.260629,-3.566589,-4.384960,-7.216823,7.927630,-0.487523,-1.331119,8.323084,1.220880,7.632432,-8.672913,0.783084,-5.278852,-9.462348,-6.510436,-6.888374,-3.775623,-6.658946,1.092766,-3.961444,-2.213265,0.293867,-5.987627,1.449981,8.856202,5.878171,-4.386372,-6.520333,4.134991,9.800958,-3.499702,-0.514612,-4.004928,-8.752245,7.472610,1.946062,1.623172,-6.483341,5.560886,-7.683928,9.786280,0.688062,-3.034273,-5.447923,-2.334721,-2.963615,9.568898,6.002452,7.480751,-3.736075,8.216168,-6.136771,-7.323816,-3.510653,5.814570,-2.533117,-8.476354,-8.066580,-8.713855,1.682003,-2.531182,1.472124,-4.481274,-2.175797,-5.233353,-4.030498,-4.815349,3.026905,-0.712222,-7.536081,-8.889604,-9.762482,-4.928475,3.819889,0.699213,1.829251,-5.929786,-7.166327,-4.876326,0.060481,1.607625,-6.642787,-6.046644,-3.037195,9.856565,-5.049011,-1.308741,-5.525908,-4.292115,5.829548,-8.958185,5.296539,8.753880,3.443444,-3.812137,3.529493,9.174730,2.676648,7.027811,-1.486889,8.410126,-2.237535,1.366644], dtype = "float64")#candidate|11873|(192,)|const|float64
call_11871 = relay.TupleGetItem(func_3521_call(relay.reshape(const_11872.astype('float64'), [10, 3, 4]), relay.reshape(const_11873.astype('float64'), [192,]), ), 6)
call_11874 = relay.TupleGetItem(func_3525_call(relay.reshape(const_11872.astype('float64'), [10, 3, 4]), relay.reshape(const_11873.astype('float64'), [192,]), ), 6)
var_11875 = relay.var("var_11875", dtype = "float64", shape = (12, 120))#candidate|11875|(12, 120)|var|float64
bop_11876 = relay.greater(const_11872.astype('bool'), var_11875.astype('bool')) # shape=(12, 120)
uop_11881 = relay.atanh(bop_11876.astype('float64')) # shape=(12, 120)
var_11883 = relay.var("var_11883", dtype = "float64", shape = (12, 120))#candidate|11883|(12, 120)|var|float64
bop_11884 = relay.right_shift(uop_11881.astype('uint16'), relay.reshape(var_11883.astype('uint16'), relay.shape_of(uop_11881))) # shape=(12, 120)
func_674_call = mod.get_global_var('func_674')
func_678_call = mutated_mod.get_global_var('func_678')
const_11888 = relay.const([-2.549852,6.529371,0.247731,-1.357548,-0.357111,6.083340,-7.054395,-2.859383,-3.675053,7.332168,-0.084374,4.136455,6.909533,-6.510201,2.152174,-5.169305,3.921797,-3.268230,4.341185,5.718355,3.594521,4.576174,3.732529,2.088027,-1.787118,-1.441307,-9.028387,9.647231,-1.597715,8.409814,7.289567,8.196298,3.869819,5.433449,-5.730319,-6.419744,7.083250,-4.801248,6.991248,-5.128543,-7.194597,-6.430786,2.374779,-2.156652,8.284203,8.018916,2.388994,2.147347,-9.347924,-0.832373,-3.349809,-7.318126,-9.110896,-4.184921,9.308811,3.737635,2.721996,-7.001574,4.668768,-1.375657,-0.415668,8.591473,-4.256488,-0.589593,3.313815,4.611207,7.525820,3.604551,-6.263582,5.983816,-4.668001,-9.702155,-8.921455,-3.211082,4.068650,2.050452,-1.532169,-4.453896,5.394867,-0.917890,6.790943,-6.209901,4.641646,-8.843017,5.648952,3.800582,-6.799011,4.624179,2.067909,-8.638173,-1.987577,-4.483978,-9.906781,4.926273,-3.628706,-0.520834,-3.127277,-0.133244,-4.375468,1.383547,1.255309,8.831882,-0.362778,-8.481276,7.931639,7.181984,-4.201522,-5.690362,-3.763287,2.972493,4.038167,-9.021782,-3.357623,-2.111276,4.859170,8.941352,-1.962340,-2.954041,4.008065,-8.304773,7.652178,3.887560,-8.540666,-7.629353,0.877935,3.421492,0.680112,-5.816392,-1.145196,-2.751438,7.623146,-1.216962,-3.339384,-0.790689,-9.439446,-2.858855,-0.457923,9.170620,-4.178518,8.306723,4.995622,-2.589794,-7.675468,0.084067,4.751523,-0.196426,3.525969,8.987962,6.712514,1.346617,-2.776460,9.356066,3.710080,7.377470,-6.219344,-1.949516,3.003142,-8.642915,5.623925,3.622304,8.396615,6.765745,-6.432332,9.237351,1.233757,1.681163,-6.160027,-3.347258,-8.536751,6.443436,7.801947,-6.649398,3.262468,-5.327419,-6.909683,7.373055,-7.330242,-8.927084,9.137109,-0.864021,6.083473,8.817763,1.848731,4.670662,5.810326,-0.541673,-0.852130,-0.491920,-7.399947,0.933524,-7.193200,-9.379357,9.123936,4.425971,-9.981676,7.192385,-7.353210,-5.950837,3.708512,4.212556,-4.524089,7.598428,-5.047962,-4.343614,-7.711771,-3.627297,0.033643,1.577073,9.157776,9.116775,1.769706,1.494427,9.369221,3.560831,-5.621635,-1.556008,-8.951493,3.753662,9.879126,7.229521,8.704165,-5.769902,6.551536,-6.007281,-5.925334,-1.177610,-9.975993,0.735396,5.661199,-0.201702,2.455123,8.120914,-0.674345,1.791406,-1.168257,-1.662394,-4.817610,-8.525142,-5.854018,-9.509880,6.839295,-2.267092,3.180916,4.982653,-5.669576,-9.207647,-9.245498,-2.386404,-3.959417,-8.967829,-4.438488,2.129366,0.626401,-9.226012,-5.817114,9.061056,-7.104453,7.126734,0.419160,-2.344887,2.951224,-0.913159,-9.183609,-7.701423,-1.039875,-9.974952,3.131630,2.538606,7.620017,0.044795,-5.527489,5.350441,-6.279522,-8.499780,-0.804471,-5.952745,2.985164,9.958910,9.232554,2.670544,6.307880,-4.033294,7.929492,8.805452,-3.773464,-5.864591,9.263441,5.874511,-7.866121,-8.486531,-3.740752,-2.271688,9.841965,-7.420762,-4.788679,-7.469717,7.150112,-2.169826,-8.185504,9.333477,-4.541675,5.305872,-4.593007,-4.448766,8.483379,4.717422,7.933946,8.683133,5.603212,3.616143,4.917441,7.233276,-9.852568,9.985355,-2.719304,9.521541,-6.603178,-9.910923,2.435516,-8.358501,6.729139,9.929539,0.707638,1.617759,-3.622539,-5.060395,-3.607647,-6.419016,-1.149104,7.837588,-3.829462,2.179236,-6.454342,0.326670,-4.263344,-0.267002,8.049101,-4.555697,-4.207064,-1.093560,-2.396457,3.803755,-8.569120,-8.476328,9.660541,7.477672,-1.924657,1.205996,6.124868,9.809804,-6.583028,8.499546,4.691493,-5.684902,-2.128453,-4.128327,-4.693992,0.776907,8.209134,0.404222,-8.288585,-3.967635,5.923643,6.177744,8.095294,1.640650,-6.980782,5.386150,-1.428827,0.627456,-2.029387,-1.320727,5.909488,-9.785580,8.680787,-8.311108,-1.349146,-1.709946,-2.491264,-9.729507,-8.212954,6.896150,1.759346,-1.551078,-7.943342,-6.084364,9.045005,6.505857,-9.445879,5.683216,8.212983,7.770130,5.325439,-8.471940,8.387427,2.757702,-4.466980,-2.504965,2.251247,0.061021,0.326673,6.090962,-0.101600,8.835452,-9.736163,-1.376871,-7.848737,3.939758,-0.779960,4.665930,1.262806,5.031779,1.906548,4.079373,4.684991,2.252693,-6.384169,2.814012,9.216182,0.237360,-8.142851,-7.213540,-9.815694,-8.615754,9.999638,-7.509217,-5.395180,-8.996794,-2.693685,-3.959702,-8.725519,-0.070382,-5.872255,-7.569040,-1.362249,1.397968,8.262825,-3.861002,-2.505540,-1.690233,-7.640186,-7.879345,6.425295,8.469962,-3.422750,5.377588,8.070743,9.731314,2.744452,0.507856,9.167470,-1.532019,-3.055179,-2.045556,1.703717,-1.513879,-2.546841,-2.585143,1.464254,9.300283,-5.818809,8.939364,-6.618715,6.104552,-9.580574,1.344648,-2.666284,-5.896673,-5.381617,9.057652,-7.132929,-5.676114,-0.769098,-9.984415,-8.226476,7.066035,-3.889450,-8.256250,6.877594,-9.173923,-0.446681,1.319455,-7.223559,-8.116684,9.450056,-8.603795,6.556116,-9.610177,-6.332235,-5.613905,-1.281255,6.496963,-8.305016,5.379283,0.345580,9.706078,5.178007,-0.233856,-0.818852,7.617163,-4.018209,6.158657,-9.311942,9.825398,-6.352431,7.095571,1.997279,4.680606,-5.197274,9.603594,3.440962,8.837941,-9.198007,-0.840169,-5.973740,-8.884897,6.494012,9.875860,7.066874,-7.248817,-2.470524,-8.633837,-3.730374,3.803306,-6.667104,5.217064,2.490823,-1.374908,-5.345572,-1.611052,-7.478775,-1.888605,2.543314,0.112159,-8.279714,-7.431911,3.221840,4.262630,1.518975,-5.439648,9.082759,0.115694,6.241268,-5.467932,-7.712700,-2.033438,3.750335,-8.310899,-2.108214,2.301590,-6.627701,4.675118,-6.285681,7.901937,2.890448,5.012475,2.387849,5.643694,4.901779,0.078841,1.887338,-5.640689,-5.042887,4.418957,5.127229,8.491184,-4.319798,6.141402,2.253070,-2.184705,6.194827,-0.429530,-4.901259,7.687750,7.309568,1.412872,-0.096727,-3.527427,1.268157,-1.734909,-4.521653,-3.354977,-2.264501,-2.803146,-4.639857,7.053920,-9.438522,9.389317,3.597407,-6.200566,9.570065,7.907362,-6.815990,-1.284806,8.797160,-5.004150,-7.206069,3.685245,-0.908977,4.464758,-7.881732,-9.723500,-0.075195,-6.408270,-4.863498,-1.979948,-9.892362,-2.755854,1.195119,-8.174349,1.328334,7.612070,5.801145,-5.773560,-2.136855,8.786846,-7.364968,9.633455,4.078497,9.051549,3.834807,3.216598,3.435938,-9.567829,-6.253753,-2.674987,7.906706,4.568850,-1.480261,-4.236961,6.560459,2.430664,-2.794522,-8.007146,-8.162913,1.687873,-7.596211,-8.115068,-6.614851,-7.273606,8.890401,-3.587349,-7.920097,-3.626025,-0.056262,9.461096,-9.766416,5.840966,-5.922990,-1.862074,0.223434,-3.596760,-1.130583,-3.418703,5.315495,2.601515,8.194828,7.902022,7.025585,-4.642098,-9.348766,-0.810545,-2.363775,7.695646,5.370081,-0.326439,-3.750675,-3.117823,3.858346,6.804921,-2.501604,4.362593,4.346741,9.745979,-3.817293,-2.225606,-3.932616,0.016870,-0.214374,8.437282,-0.996408,7.522855,-4.185546,7.629437,-3.917023,-5.234248,8.072102,-0.771086,-6.759168,-7.189406,6.681490,8.690976,3.049606,-6.623999,-0.087374,2.923298,3.301782,2.008996,2.696997,4.125166,5.819291,-1.269174,-0.234909,2.138473], dtype = "float32")#candidate|11888|(704,)|const|float32
call_11887 = func_674_call(relay.reshape(const_11888.astype('float32'), [11, 4, 16]), relay.reshape(const_11888.astype('float32'), [11, 4, 16]), )
call_11889 = func_674_call(relay.reshape(const_11888.astype('float32'), [11, 4, 16]), relay.reshape(const_11888.astype('float32'), [11, 4, 16]), )
output = relay.Tuple([call_11855,call_11857,var_11858,var_11859,const_11860,const_11861,call_11871,const_11873,bop_11884,call_11887,const_11888,])
output2 = relay.Tuple([call_11856,call_11862,var_11858,var_11859,const_11860,const_11861,call_11874,const_11873,bop_11884,call_11889,const_11888,])
func_11892 = relay.Function([var_11858,var_11859,var_11875,var_11883,], output)
mod['func_11892'] = func_11892
mod = relay.transform.InferType()(mod)
mutated_mod['func_11892'] = func_11892
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11892_call = mutated_mod.get_global_var('func_11892')
var_11894 = relay.var("var_11894", dtype = "int64", shape = ())#candidate|11894|()|var|int64
var_11895 = relay.var("var_11895", dtype = "float32", shape = (312,))#candidate|11895|(312,)|var|float32
var_11896 = relay.var("var_11896", dtype = "float64", shape = (12, 120))#candidate|11896|(12, 120)|var|float64
var_11897 = relay.var("var_11897", dtype = "float64", shape = (12, 120))#candidate|11897|(12, 120)|var|float64
call_11893 = func_11892_call(var_11894,var_11895,var_11896,var_11897,)
output = call_11893
func_11898 = relay.Function([var_11894,var_11895,var_11896,var_11897,], output)
mutated_mod['func_11898'] = func_11898
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11912 = relay.var("var_11912", dtype = "float64", shape = (10, 16, 7))#candidate|11912|(10, 16, 7)|var|float64
uop_11913 = relay.atanh(var_11912.astype('float64')) # shape=(10, 16, 7)
func_9942_call = mod.get_global_var('func_9942')
func_9950_call = mutated_mod.get_global_var('func_9950')
const_11916 = relay.const([7,5,-8,5,1,9,-10,-6,4,-6,6,-4,4,-8,-5,5,8,4,-10,10,-5,-3,4,10,9,-1,-9,5,-4,8,-3,3,-2,-9,-6,-4,-10,5,-6,-1,2,1,8,-5,-6,2,-5,-5,4,1,-5,-10,-2,10,-10,7,5,-3,2,3,-8,-9,2,2,-8,-7,-8,9,-1,-1,9,5,4,5,4,5,-7,-7,-8,6,-3,-10,-9,2,5,-3,1,-8,-5,-2,5,3,2,10,10,-8,8,-4,7,6,-1,-6,-6,9,9,10,-9,-3,-4,2,10,9,-10,-6,-2,8,-3,6,-1,3,-4,-4,-8,3,2,8,-7,-10,1,-3,10,6,8,-5,7,-8,10,6,-9,-10,4,2,6,-8,10,9,3,-5,7,9,-7,7,-9,5,-1,8,6,9,-4,10,8,-5,-7,1,2,10,-7,7,9,5,-1,-5,4,9,-1,-5,-8,-10,-3,-9,-9,4,-5,3,5,1,-10,10,-2,-4,-8,2,9,9,2,-9,-6,-8,-4,-6,-8,4,5,4,5,-10,6,6,-5,9,4,2,-1,-2,1,1,-5,9,-10,-7,10,-5,3,-4,-6,-8,3,10,-10,6,-10,-5,3,-5,5,-8,-3,-1,-4,-5,-10,-1,-2,-4,5,8,-10,-10,-4,-7,-9,6,-6,8,-4,10,-7,4,4,-4,1,-2,-2,3,9,7,-3,-2,1,-10,-5,8,1,-1,-3,2,6,2,-8,6,-5,7,-7,10,9,5,-8,5,-7,4,1,4,2,7,-3,7,-5,7,-3,2,-6,-5,-9,6,7,8,6,5,-9,9,-5,-1,1,4,6,-6,-2,9,-1,9,-4,8,-10,9,-7,-3,-5,5,-4,-1,-5,-3,10,-10,6,1,-8,-10,-1,-2,-9,1,9,3,-6,-4,-3,-10,8,6,-9,3,-5,10,6,-4,-6,1,2,-1,-8,9,-1,-4,9,4,-8,-9,-2,1,-10,-2,-2,4,-7,-2,9,8,-10,-10,4,-9,2,5,7,-1,1,-3,-8,-8,-9,2,2,9,-2,-3,4,-9,1,2,10,-3,1,-5,-3,4,3,-2,-3,9,10,2,-5,4,-8,4,-2,-10,-4,-9,-8,-1,-8,4,-1,-7,-6,-9,-3,-8,9,-9,-2,-5,-4,5,9,10,6,7,8,2,-4,-4,-6,-7,8,-8,-3,-9,9,-6,10,4,-10,5,6,2,10,8,-10,-1,-9,9,1,-8,1,-7,-1,-7,3,-1,-9,10,10,-5,10,-1,4,2,7,8,-7,-9,7,1,7,-10,6,-8,-7,-7,9,-8,7,10,2,-3,2,-7,-7,-10,2,-1,-9,3,1,3,-9,3,-2,3,1,-3,6,-4,10,-7,4,-9,8,9,5,1,2,3,9,10,-9,-4,4,-8,-4,7,5,-10,-1,2,2,1,7,10,7,7,2,3,-9,-2,-7,10,-8,-3,-1,6,-8,7,-10,-3,-6,3,2,-6,8,-6,9,-7,8,6,6,-3,9,-4,-9,-6,-9,-5,-6,6,10,-10,-7,6,6,-5,7,1,-9,7,-3,-5,3,-5,-2,4,2,3,-1,-3,4,-3,5,7,8,4,-6,-6,-10,9,-4,5,8,-5,8,8,-5,1,5,-6,9,-8,8,3,7,-9,8,8,4,7,-1,-4,-5,8,2,-7,-3,-7,9,8,-3,-8,3,-6,-7,-8,7,-7,-8,4,-1,2,-4,-5,-8,-8,10,-9,9,-9,-8,7,1,-8,8,-9,-1,-1,8,9,-8,7,2,-8,-3,9,6,-7,-7,7,8,-2,-9,-5,10,-4,-10,4,-7,3,1,-3,8,-5,-8,-10,-10,-5,-7,5,4,-6,10,-6,-4,9,3,-2,6,3,2,10,8,-9,6,2,5,4,-8,2,-9,9,7,-10,1,-6,-9,-4,-4,1,9,9,1,-7,2,-5,2,-3,-5,1,10,-10,-6,7,-7,9,2,-10,-9,-6,-10,-4,-2,1,-1,5,2,2,10,-7,8,5,-1,-4,3,3,-10,-8,-3,-2,-1,-8,4,10,-1,-9,4,10,-10,-8,-6,-8,8,-1,-3,7,-1,9,-7,9,8,5,-3,-7,-1,6,6,4,-8,-4,9,6,-6,-7,-6,9,4,5,-10,8,9,-9,-6,10,-9,6,6,9,-9,-5,1,-8,-9,-2,-7,-2,-4,3,7,5,-8,5,-5,7,1,8,5,6,-10,7,-9,-6,-4,-5,4,7,3,7,-6,-1,-6,8,-6,7,3,3,-5,-6,-10,9,3,8,-10,3,7,3,-4,5,5,3,-8,-3,7,-3,2,-3,-8,10,-3,-3,8,6,-9,9,-4,6,-9,6,-10,-3,1,-9,6,-8,-4,-1,-1,4,7,5,-6,-5,10,2,-2,-2,2,3,-3,-7,6,-1,3,8,-9,-9,-2,1,-6,1,10,1,7,10,-9,-6,2,-1,-3,3,1,-6,-8,6,1,-4,-5,3,-2,-1,-7,-5,6,-4,-6,10,2,-10,-4,6,8,-6,-6,-2,-1,7,-3,9,-10,-8,-9,-4,6,-1,2,6,9,10,1,4,-8,10,-5,1,-1,2,9,2,9,6,3,1,3,9,-5,6,6,-3,6,-8,4,6,3,-9,-1,4,-8,-8,-6,7,-10,5,2,8,-3,-2,4,8,-5,-2,3,-10,2,-4,-5,-10,-5,-2,4,-4,6,-1,3,10,8,6,-7,-10,6,-7,-4,-5,-3,-5,-7,-3,-4,-3,-6,7,-4,-3,9,2,-7,6,8,-2,10,-8,-6,-2,-5,-7,10,5,9,5,-1,-3,5,-2,3,-4,1,10,4,8,-8,2,-3,10,-5,9,-3,8,4,-3,-4,-7,-8,4,10,-3,1,6,2,-5,2,-3,-8,5,1,-6,2,3,4,-3,-1,5,-10,7], dtype = "uint64")#candidate|11916|(1100,)|const|uint64
const_11917 = relay.const(3, dtype = "int64")#candidate|11917|()|const|int64
var_11918 = relay.var("var_11918", dtype = "int64", shape = (60, 24))#candidate|11918|(60, 24)|var|int64
var_11919 = relay.var("var_11919", dtype = "float64", shape = (6,))#candidate|11919|(6,)|var|float64
var_11920 = relay.var("var_11920", dtype = "float64", shape = (96,))#candidate|11920|(96,)|var|float64
var_11921 = relay.var("var_11921", dtype = "float64", shape = (605, 1))#candidate|11921|(605, 1)|var|float64
const_11922 = relay.const([6.403373,7.799172,-5.594921,2.049315,4.197102,-4.733514,2.252000,-8.906827,-7.912266,-4.200431,-5.477581,4.482278,6.612265,9.119817,3.294568,-7.399518,5.678706,-7.305831,-1.813850,8.528727,6.187993,-5.358464,-4.637602,3.812677,6.233829,8.527919,-1.649538,9.947150,-0.790401,0.202485,2.978763,-9.038352,8.659507,-5.420588,-9.942626,0.945794,2.671352,-8.183520,-5.199504,0.663390,-5.668300,0.579973,6.927657,-5.744257,-5.681562,3.275779,4.862804,-5.234300,-7.697092,-3.916822,-0.047949,-7.067687,4.144719,7.024507,6.144933,-5.314941,1.741906,-2.392873,-4.662805,-4.982639,-1.837382,-5.915615,4.047732,4.392071,-0.562743,-3.281640,8.432036,-8.617639,-5.533824,3.786788,-2.432325,3.299123,8.648089,-0.795260,-4.839933,-1.487965,8.474617,2.814267,-6.605159,-4.137422,-0.346514,2.213854,-5.098351,2.574179,-9.883540,-5.508166,-4.928137,-2.827256,8.035978,3.676425,-7.618918,4.975868,-5.384688,-0.795653,0.927909,3.861537,-8.612404,4.777814,9.953113,5.772403,6.354367,-9.517445,4.231827,-7.805487,-0.238281,-4.027673,3.984370,-7.565834,-5.168538,-2.840177,7.124987,-2.491403,7.859339,-6.112475,-3.838231,-1.083835,7.470005,9.140431,6.717693,-1.501500,8.823315,-0.693915,-8.105763,-6.434341,-7.160910,-0.642122,5.187911,0.375614,-9.639470,8.743139,1.908816,1.396653,-2.267163,3.180041,-6.653421,5.735302,-8.501732,-0.413385,-5.754811,-3.440158,-8.573268,0.744764,5.540750,-2.977308,-5.533784,-9.635861,6.974801,3.682196,-0.555390,9.577902,-7.050804,-9.430138,5.247083,9.170880,3.341198,-0.049878,-8.394598,3.532154,-7.019215,8.670712,6.181058,-1.532660,8.490556,6.577532,-9.270296,-3.424739,2.167284,6.118277,-3.332352,8.013515,-1.277571,0.145377,6.431760,-6.264789,-5.924828,-6.948871,8.061951,-2.492889,-2.756706,-8.006144,-3.023406,3.901195,6.972098,-9.735952,3.234395,-1.188277,9.737647,-0.626121,-7.784971,-6.030823,9.947180,3.219822,6.451824,5.795564,5.509220,-4.015067,7.490824,8.287304,2.705003,-3.836843,7.003914,-2.546820,-0.857376,2.791367,-1.984579,3.820680,9.597676,-8.702575,-0.776073,-3.776255,-0.204585,8.980351,8.136566,-0.593544,3.365699,0.935791,3.157187,1.284762,9.172112,5.912827,0.700354,7.938302,6.892542,9.727334,2.559215,4.913843,1.128440,2.231184,1.907875,0.892177,-1.693774,-4.841567,-5.809400,7.286986,-2.969865,7.730591,6.649454,-9.059707,1.103225,-3.096212,-6.167104,-2.623559,2.327266,-7.326455,6.437947,8.455800,-7.092049,-5.700128,7.350367,-0.520144,-9.331630,2.865400,-6.120401,-9.118037,-5.279976,2.734963,-2.165046,-6.658596,3.247890,-8.761297,-1.096994,6.418105,1.158241,9.786826,8.944942,8.411470,-4.016718,-7.223765,-1.495420,-5.947245,8.491705,9.376034,5.072630,8.353883,-0.975460,0.259065,2.690392,-6.755496,-2.977709,-6.716985,5.522336,2.776669,-0.235114,5.046278,-8.938081,5.598129,3.205145,0.796223,-5.959151,9.942081,1.684748,0.763007,4.550465,0.810704,-2.597061,-2.218723,7.219704,0.655081,5.502914,3.016651,-7.982953,2.271637,8.257504,-1.484442,-6.148907,8.224812,-5.552987,-9.771026,-9.123186,-7.340314,3.600082,-4.606093,-3.829308,3.348069,-0.530005,-3.931683,0.908206,-5.220101,-7.379222,7.167278,7.571267,-1.831665,2.470918,0.257982,7.507295,-2.798872,-1.383754,0.651665,-1.140808,-6.889837,0.498544,3.122766,4.984139,-4.080169,-1.021471,-2.421001,-8.205592,-9.944982,8.541424,6.948184,0.271448,-7.497194,-1.036457,-8.653688,-1.287972,-8.861416,8.338560,-6.900818,1.875610,3.210550,-8.888651,4.111032,-6.723641,2.714487,-4.973989,-0.454282,-4.368219,2.693808,3.658092,-9.033200,3.354920,2.821951,-2.270196,9.962451,-2.758949,-5.523534,-9.497473,4.340821,0.121303,-9.717910,9.353535,1.852898,7.613666,5.665321,-8.111942,-3.369909,-6.371689,9.258348,-5.595429,-4.652731,8.408361,7.121057,2.958747,-5.844239,5.843062,-9.896776,-6.122993,1.525879,-1.374133,-1.135187,-6.086127,-9.413920,-0.625584,3.225485,-6.149065,-7.091733,-8.375329,7.587186,-1.670466,-0.732977,3.392195,6.821534,-8.094516,0.022225,4.040205,-9.322937,7.799597,-4.652365,-8.632235,-3.347296,5.648950,-4.735793,-3.441933,4.646489,2.327377,1.330912,-0.395423,-2.669322,3.578524,-4.708150,1.645705,-2.493824,6.286254,0.592764,-8.810940,8.856504,-9.215444,-3.050229,5.501094,9.828020,8.186616,8.357046,6.526252,9.023697,-3.436778,5.299929,-2.480716,-7.515570,-7.556331,7.145605,6.267308,8.628817,-9.896129,-9.678039,0.644448,-7.802682,-4.100318,0.601906,-8.236699,-6.588207,-5.049148,-9.510202,7.885315,-4.705227,-0.966005,6.998524,-7.303229,8.025421,-4.005568,1.404906,-3.618379,-7.514362,8.642869,-0.151071,-0.992387,-5.974059,6.276477,0.973972,4.662394,-0.646525,9.970782,8.813742,-4.761495,-3.014721,4.195571,2.095468,-0.529077,-5.236961,4.833828,6.997730,-7.657993,-8.424761,-9.308638,-7.241475,5.877505,-0.019622,-9.015698,4.887708,-8.962220,2.058423,2.150733,5.987642,6.826882,1.620844,6.191095,-2.874664,8.133730,3.653032,3.793278,0.480585,-6.259286,7.460838,-6.630430,-3.867026,7.156139,-7.104073,-4.677846,-2.761182,6.626262,-4.444160,-0.097834,-3.309446,7.114687,0.813188,-7.103421,5.705556,-3.051642,4.980173,4.357641,-7.179455,-8.108713,8.919485,-4.223326,-3.636057,-7.869855,-2.314602,0.086606,-2.451914,-1.509389,4.715661,-5.801707,-3.732440,-9.333019,1.334413,9.305988,-7.827274,-8.567108,-6.187994,6.799005,7.990253,4.581886,-7.168992,-9.432287,8.611149,-2.694460,7.576402,4.122802,-1.991958,-2.594146,-0.839272,8.741730,6.004176,-5.575068,-8.479165,-2.977766,7.545995,-6.763001,-2.378527,-0.423099,2.128561,8.896902,-7.725404,-3.531092,-7.815920,-9.502343,-3.739670,2.945626,-7.856489,0.044529,5.810879,-0.964208,4.084277,-3.584819,7.261874,6.733811,6.519094,-7.628277,-0.749454,-5.731037,5.194584,4.752869,-5.749101,3.056205,-4.944934,-2.668525,-1.410372,6.443992,7.689864,0.071947,-2.352443,5.211465,5.736134,1.225550,8.029448,-5.846478,3.472284,-5.606567,-3.846871,-6.573703,7.671315,-7.628369,1.308421,0.530832,6.481351,7.515959,-4.296108,-4.446601,-6.181323,2.633108,7.343850,-6.796775,9.987822,8.331310,-7.677201,-6.212418,-8.367448,3.360292,-2.094849,-3.849172,-6.283683,-5.029160,-7.911712,-1.418153,-2.630006,-3.124221,-6.615863,-8.745419,-3.983972,9.988171,7.121035], dtype = "float32")#candidate|11922|(630,)|const|float32
call_11915 = relay.TupleGetItem(func_9942_call(relay.reshape(const_11916.astype('uint64'), [1, 1100]), relay.reshape(const_11917.astype('int64'), []), relay.reshape(var_11918.astype('int64'), [1440,]), relay.reshape(var_11919.astype('float64'), [6,]), relay.reshape(var_11920.astype('float64'), [96,]), relay.reshape(var_11921.astype('float64'), [605,]), relay.reshape(const_11922.astype('float32'), [630,]), ), 2)
call_11923 = relay.TupleGetItem(func_9950_call(relay.reshape(const_11916.astype('uint64'), [1, 1100]), relay.reshape(const_11917.astype('int64'), []), relay.reshape(var_11918.astype('int64'), [1440,]), relay.reshape(var_11919.astype('float64'), [6,]), relay.reshape(var_11920.astype('float64'), [96,]), relay.reshape(var_11921.astype('float64'), [605,]), relay.reshape(const_11922.astype('float32'), [630,]), ), 2)
func_3786_call = mod.get_global_var('func_3786')
func_3789_call = mutated_mod.get_global_var('func_3789')
var_11951 = relay.var("var_11951", dtype = "float64", shape = (50,))#candidate|11951|(50,)|var|float64
call_11950 = func_3786_call(relay.reshape(var_11951.astype('float64'), [5, 2, 5]))
call_11952 = func_3786_call(relay.reshape(var_11951.astype('float64'), [5, 2, 5]))
func_8760_call = mod.get_global_var('func_8760')
func_8761_call = mutated_mod.get_global_var('func_8761')
call_11966 = relay.TupleGetItem(func_8760_call(), 0)
call_11967 = relay.TupleGetItem(func_8761_call(), 0)
func_8546_call = mod.get_global_var('func_8546')
func_8551_call = mutated_mod.get_global_var('func_8551')
const_11971 = relay.const([0.757148,-5.459307,3.221226,-9.001759,8.264804,9.915554,0.396527,-2.860758,9.955508,-4.372251,9.796241,-4.164511,-7.041834,1.990388,7.525700,-9.739974,7.594674,-6.173995,4.793943,-8.195556,9.131464,7.149215,1.874710,-0.691719,-5.220040,-6.443351,9.093229,-6.529529,6.145953,-1.632257,-2.026662,-2.013868,3.009721,-7.141754,7.943422,4.553377,-9.219189,-5.703240,-2.089872,-1.914894,8.819190,8.229375,-3.514233,-8.847017,5.814296,-8.103908,9.570422,7.820455,5.826467,1.446799,-0.462346,9.859389,2.382929,-2.760363,-5.203625,3.600126,-9.780084,3.917107,-9.341915,-4.364904,-5.853240,9.040649,9.613521,-6.337738,-2.880948,-7.454519,-3.952383,2.568487,9.875116,6.092634,-8.590193,8.750479,9.440966,3.788028,-2.505142,3.789104,-8.847523,-7.535760,-9.083906,-3.248976,-8.518609,6.393859,8.483951,3.350987,3.403141,-3.413560,5.446121,-3.893314,-1.553389,-5.828778,4.679293,0.762724,-1.891196,-5.985562,-4.251980,2.295749,7.718672,9.270038,2.552510], dtype = "float32")#candidate|11971|(99,)|const|float32
const_11972 = relay.const([10,4,2,6,-2,-2,-6,4,8,7,4,6,-3,5,10,-8,-5,-10,6,6,10,10,-3,-2,-2,1,-8,-3,10,5,-3,10,7,-4,6,4,-8,-4,1,-1,6,1,7,-3,2,-6,-2,1,-6,6,-5,-10,5,3,9,-8,-4,-8,-3,-9,-2,-7,3,6,3,3,-4,-10,-4,-4,-6,1,1,2,-2,-6,10,-9,-3,4,8,-5,-8,-1,9,9,-8,-5,10,5,-2,6,-6,5,-9,5,-6,-2,-7,-1,8,10,-10,7,4,-2,2,-8,-3,8,-4,3,-5,-6,-8,7,-7,-2,-3,7,-2,4,8,-2,7,-7,3,10,-5,-10,-5,8,5,-9,2,8,6,8,3,7,10,-10,-5,2,-9,2,-1,-4,-2,-7,-10,6,6,-1,4,1,-3,-10,3,6,-6,6,1,-4,-4,7,3,-9,9,-9,10,-10,1,9,4,6,6,-5,-1,-1,-9,8,-4,-2,8,8,1,9,10,6,5,-1,-3,7,-5,-8,7,-6,-4,3,-10,-10,-3,-5,-8,6,-4,-4,3,-10,10,-5,-3,-7,1,-10,5,4,-10,-10,9,-2,10,9,-7,-6,-6,-3,3,-5,-4,-9,-7,-4,1,5,-9,-4,-5,4,1,-9,10,3,6,10,-7,6,2,-10,5,5,-4,-2,-2,-9,6,-8,-3,-2,3,6,2,3,-3,9,8,-9,2,9,8,7,-9,-10,7,1,3,9,1,-9,5,-2,1,5,-5,-9,4,6,-2,8,-8,9,-8,7,10,-4,4,-8,-1,10,7,10,-7,7,-3,-7,5,2,-6,-1,-5,-3,-2,5,4,-1,7,4,-6,-1,7,-1,6,6,-4,-10,3,-9,-4,10,2,-1,-1,-2,8,-9,1,-9,-3,9,-1,6,2,-9,-2,8,-10,-2,6,7,5,-2,6,-5,6,6,-3,-1,10,3,9,-5,-10,10,-10,1,5,-4,-5,-9,3,8,10,10,1,1,7,-9,-4,5,7,9,-9,2,2,-5,-1,-10,4,2,-3,5,10,7,4,5,-7,-5,9,-10,-1,5,-2,2,3,1,-6,6,-2,-9,4,-10,-8,7,4,-8,6,6,6,-2,-1,-9,-1,2,-9,-2,5,-5,-8,-2,-2,7,4,6,1,-1,2,9,4,-7,-2,-7,2,2,6,4,2,8,5,8,-1,-8,10,6,-1,-8,-3,-10,6,-7,-5,10,2,-5,-1,5,-1,-5,-2,-6,6,-6,8,-4,-7,7,-1,9,-7,2,-5,-2,-2,9,9,-7,-9,4,8,-4,-8,-6,9,2,-10,-4,1,-3,-4,-7,10,-8,6,8,9,-8,10,7,1,-5,-4,-6,-6,8,-3,-1,-8,4,2,-9,-2,9,2,3,-7,-2,9,8,9,3,2,7,-6,7,2,8,-2,6,-7,7,7,-7,-1,2,-4,4,-3,-7,3,-5,-9,-9,-2,-6,3,-2,-7,1,-5,-8,9,4,-6,-1,6,-3,10,7,6,2,-9,2,-7,-3,-7,1,4,10,-8,-8,8,1,-3,2,2,-9,-2,6,-5,2,-10,7,-10,-6,5,-5,7,-3,-4,8,-10,-6,9,2,1,-3,10,-8,5,1,10,-5,3,5,-2,1,1,6,1,1,3,4,-4,-6,-6,2,-4,-3,2,4,1,8,5,2,-2,-8,9,-10,6,-3,-2,10,-2,3,-1,10,4,-3,-9,-5,-8,-8,8,-1,4,9,-8,4,-2,-6,5,2,-3,10,-2,5,-9,6,-10,2,-10,2,1,-2,2,-3,-3,8,-4,7,3,-5,-4,-2,7,-10,6,-6,7,-8,-5,10,8,3,-4,7,4,-10,10,-5,-7,-5,-9,7,-1,9,-10,4,-4,-9,9,8,7,-2,-9,5,1,8,-2,-6,-4,1,-3,-1,3,-5,-7,6,10,-10,-2,-6,6,3,-1,-3,5,6,-10,-4,6,-5,-4,-6,8,5,2,5,7,9,8,-4,7,-10,6,10,-5,6,6,4,-7,-4,-2,8,6,9,9,-8,3,3,-3,-3,8,6,1,-7,-10,-9,1,-4,-5,2,8,2,9,-3,8,9,-5,-9,-6,5,1,-8,1,1,7,-2,5,-8,-1,5,7,5,-10,8,-5,1,7,8,3,6,5,7,-1,-4,-4,-2,-4,2,-3,9,-3,4,2,-8,3,7,1,8,10,4,5,-4,-5,5,7,6,6,10,3,-5,3,4,9,-5,8,-1,-9,1,3,2,2,2,1,8,-1,10,-6,-7,10,1,5,-2,1,8,9,-6,9,9,-9,4,9,-5,2,-1,3,-2,-6,-3,-8,-10,1,10,-3,10,5,1,7,2,-7,-2,4,1,6,4,-6,-1,-2,7,-9,7,-10,-1,-6,6,5,-6,-4,7,-2,4,-7,5,7,5,10,3,10,-8,-6,-8,4,9,2,8,9,1,10,-7,1,-6,-2,10,-2,8,3,-2,-1,-5,-7,6,8,3,-7,-4,10,9,10,6,8,-1,-10,-1,3,6,10,7,-1,-5,-1,-7,10,5,-5,-1,4,7,-6,9,-6,-1,-6,4,9,8,-8,-10,-10,8,7,2,3,9,8,1,10,-10,-10,-6,4,6,-8,2,-3,-7,10,-2,-9,-4,-9,-2,-5,-7,-9,-2,8,8,-6,6,-3,-8,4,-7,10,-1,4,-10,-10,-4,2,5,-5,6,3,1,-8,-10,10,5,-7,-1,-4,2,7,-4,-3,7,-1,-1,8,2,-2,6,10,-4,-10,9,-7,7,-6,-1,9,7,4,8,-10,7,5,-6,7,-3,6,-10,-3,-6,-7,10,-8,7,4,5,-6,-10,10,-5,7,-3,-9,7,-9,5,-2,9,1,-2,-1,-3,-1,-7,8,-7,9,-9,4,-4,-8,6,-3,10,5,1,2,3,8,4,4,-2,-5,3,8,2,-8,8,5,5,1,-6,-1,-6,-10,6,6,-7,8,8,-1,2,9,9,7,6,4,-10,-10,6,1,-4,-8,5,2,2,6,-3,3,10,7,-7,-7,-8,5,9,-5,-2,5,-1,-3,-2,-6,-3,-6,8,-1,6,3,-9,9,-4,-2,-9,6,-5,2,7,10,-8,6,-2,2,7,4,-6,3,-7,-8,3,6,-10,-3,10,-10,-4,6,-3,5,-6,5,4,-1,4,-9,1,3,6,10,-3,-4,-7,2,1,-8,-6,8,-3,-3,6,4,-5,-1,-4,7,-3,4,-1,10,6,6,2,-4,-3,-2,6,8,-10,4,-2,-3,10,-7,-6,3,-4,7,-5,9,-7,8,-4,7,-7,-1,-2,6,-4,4,-7,-3,8,-6,-1,2,5,-1,6,4,9,-4,10,2,2,-5,3,-1,7,5,-2,6,-6,-6,-3,8,8,2,2,3,9,5,5,6,-3,10,7,1,-2,-8,9,-8,7,-6,-5,-3,6,-8,-3,-5,-5,-2,-10,6,1,-9,-9,7,9,5,4,-8,-5,3,1,6,2,8,10,6,-9,10,-5,6,-2,-8,6,-7,4,-10,-6,3,-4,-10,9,4,2,-8,4,-1,-2,3,6,-2,9,-7,8,-3,-1,7,-10,7,-8,10,-8,8,-9,1,-10,6,-7,-6,-3,9,5,-5,8,8,-9,-8,9,-9,7,-4,5,8,-2,-6,5,-8,-1,5,5,7,-2,-2,-3,9,-3,10,-2,-7,-3,9,8,8,2,-1,7,-2,-7,9,-5,1,-1,3,9,8,-5,-10,6,-2,-1,5,5,6,10,-1,2,-3,4,6,10,-5,-1,-7,5,5,-4,-4,6,10,-5,-4,-4,-10,5,-2,-2,-9,4,-1,-5,6,7,-8,-10,-2,9,2,3,10,1,-4,-8,7,-8,2,-5,3,-8,6,9,-5,-1,2,2,-3,-3,-6,-9,5,-9,1,7,7,-4,5,8,4,8,5,-9,1,-5,-4,-7,-2,-8,-4,6,10,4,-5,-7,4,-4,-3,9,-4,-10,1,-9,-8,7,-2,3,2,9,-2,4,-10,-8,1,9,-4,-4,-10,1,10,2,-10,7,-4,9,3,-3,4,-7,1,-2,7,-1,1,-7,-1,-4,-3,4,7,3,-1,-2,8,-1,7,3,1,3,7,2,6,-2,7,6,1,4,6,6,7,-2,-5,8,-8,-8,8,6,8,-7,-3,-10,2,6,-10,-3,-2,-1,7,-2,8,-3,-10,4,-6,2,4,2,6,6,-2,4,2,-10,-3,-8,-2,1,10,7,-6,3,-1,-6,5,-4,10,1,-3,3,-5,9,9,-9,-5,5,7,1,-5,4,8,-8,-8,-10,-4,-9,3,-8,9,-3,6,-6,-6,-3,-2,2,7,-10,-3,-5,5,-5,1,-3,3,-5,-4,5,7,-2,5,1,-5,8,-3,-4,7,7,5,8,-5,-8,-5,-8,1,3,3,-9,-7,8,-9,8,-2,-4,6,6,9,2,-6,-6,10,4,-3,4,1,-10], dtype = "int64")#candidate|11972|(1690,)|const|int64
call_11970 = relay.TupleGetItem(func_8546_call(relay.reshape(call_11915.astype('float32'), [312,]), relay.reshape(const_11916.astype('uint64'), [10, 110]), relay.reshape(const_11971.astype('float32'), [11, 9]), relay.reshape(const_11972.astype('int64'), [1690,]), ), 6)
call_11973 = relay.TupleGetItem(func_8551_call(relay.reshape(call_11915.astype('float32'), [312,]), relay.reshape(const_11916.astype('uint64'), [10, 110]), relay.reshape(const_11971.astype('float32'), [11, 9]), relay.reshape(const_11972.astype('int64'), [1690,]), ), 6)
uop_11978 = relay.acosh(uop_11913.astype('float64')) # shape=(10, 16, 7)
func_8436_call = mod.get_global_var('func_8436')
func_8439_call = mutated_mod.get_global_var('func_8439')
call_11980 = relay.TupleGetItem(func_8436_call(relay.reshape(const_11972.astype('int64'), [1690,])), 0)
call_11981 = relay.TupleGetItem(func_8439_call(relay.reshape(const_11972.astype('int64'), [1690,])), 0)
func_8476_call = mod.get_global_var('func_8476')
func_8479_call = mutated_mod.get_global_var('func_8479')
call_11997 = relay.TupleGetItem(func_8476_call(relay.reshape(call_11950.astype('float64'), [5, 2, 5]), relay.reshape(const_11972.astype('int64'), [1690,]), ), 0)
call_11998 = relay.TupleGetItem(func_8479_call(relay.reshape(call_11950.astype('float64'), [5, 2, 5]), relay.reshape(const_11972.astype('int64'), [1690,]), ), 0)
output = relay.Tuple([call_11915,const_11916,const_11917,var_11918,var_11919,var_11920,var_11921,const_11922,call_11950,var_11951,call_11966,call_11970,const_11971,const_11972,uop_11978,call_11980,call_11997,])
output2 = relay.Tuple([call_11923,const_11916,const_11917,var_11918,var_11919,var_11920,var_11921,const_11922,call_11952,var_11951,call_11967,call_11973,const_11971,const_11972,uop_11978,call_11981,call_11998,])
func_12000 = relay.Function([var_11912,var_11918,var_11919,var_11920,var_11921,var_11951,], output)
mod['func_12000'] = func_12000
mod = relay.transform.InferType()(mod)
var_12001 = relay.var("var_12001", dtype = "float64", shape = (10, 16, 7))#candidate|12001|(10, 16, 7)|var|float64
var_12002 = relay.var("var_12002", dtype = "int64", shape = (60, 24))#candidate|12002|(60, 24)|var|int64
var_12003 = relay.var("var_12003", dtype = "float64", shape = (6,))#candidate|12003|(6,)|var|float64
var_12004 = relay.var("var_12004", dtype = "float64", shape = (96,))#candidate|12004|(96,)|var|float64
var_12005 = relay.var("var_12005", dtype = "float64", shape = (605, 1))#candidate|12005|(605, 1)|var|float64
var_12006 = relay.var("var_12006", dtype = "float64", shape = (50,))#candidate|12006|(50,)|var|float64
output = func_12000(var_12001,var_12002,var_12003,var_12004,var_12005,var_12006,)
func_12007 = relay.Function([var_12001,var_12002,var_12003,var_12004,var_12005,var_12006,], output)
mutated_mod['func_12007'] = func_12007
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9843_call = mod.get_global_var('func_9843')
func_9845_call = mutated_mod.get_global_var('func_9845')
call_12009 = func_9843_call()
call_12010 = func_9843_call()
func_339_call = mod.get_global_var('func_339')
func_342_call = mutated_mod.get_global_var('func_342')
var_12027 = relay.var("var_12027", dtype = "float64", shape = (605,))#candidate|12027|(605,)|var|float64
call_12026 = relay.TupleGetItem(func_339_call(relay.reshape(var_12027.astype('float64'), [11, 5, 11])), 0)
call_12028 = relay.TupleGetItem(func_342_call(relay.reshape(var_12027.astype('float64'), [11, 5, 11])), 0)
var_12031 = relay.var("var_12031", dtype = "float64", shape = (11, 5, 11))#candidate|12031|(11, 5, 11)|var|float64
bop_12032 = relay.multiply(call_12026.astype('float64'), relay.reshape(var_12031.astype('float64'), relay.shape_of(call_12026))) # shape=(11, 5, 11)
bop_12035 = relay.multiply(call_12028.astype('float64'), relay.reshape(var_12031.astype('float64'), relay.shape_of(call_12028))) # shape=(11, 5, 11)
output = relay.Tuple([call_12009,var_12027,bop_12032,])
output2 = relay.Tuple([call_12010,var_12027,bop_12035,])
func_12038 = relay.Function([var_12027,var_12031,], output)
mod['func_12038'] = func_12038
mod = relay.transform.InferType()(mod)
mutated_mod['func_12038'] = func_12038
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12038_call = mutated_mod.get_global_var('func_12038')
var_12040 = relay.var("var_12040", dtype = "float64", shape = (605,))#candidate|12040|(605,)|var|float64
var_12041 = relay.var("var_12041", dtype = "float64", shape = (11, 5, 11))#candidate|12041|(11, 5, 11)|var|float64
call_12039 = func_12038_call(var_12040,var_12041,)
output = call_12039
func_12042 = relay.Function([var_12040,var_12041,], output)
mutated_mod['func_12042'] = func_12042
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12078 = relay.var("var_12078", dtype = "uint64", shape = (7, 1, 7))#candidate|12078|(7, 1, 7)|var|uint64
var_12079 = relay.var("var_12079", dtype = "uint64", shape = (7, 10, 7))#candidate|12079|(7, 10, 7)|var|uint64
bop_12080 = relay.add(var_12078.astype('uint64'), var_12079.astype('uint64')) # shape=(7, 10, 7)
output = bop_12080
output2 = bop_12080
func_12095 = relay.Function([var_12078,var_12079,], output)
mod['func_12095'] = func_12095
mod = relay.transform.InferType()(mod)
mutated_mod['func_12095'] = func_12095
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12095_call = mutated_mod.get_global_var('func_12095')
var_12097 = relay.var("var_12097", dtype = "uint64", shape = (7, 1, 7))#candidate|12097|(7, 1, 7)|var|uint64
var_12098 = relay.var("var_12098", dtype = "uint64", shape = (7, 10, 7))#candidate|12098|(7, 10, 7)|var|uint64
call_12096 = func_12095_call(var_12097,var_12098,)
output = call_12096
func_12099 = relay.Function([var_12097,var_12098,], output)
mutated_mod['func_12099'] = func_12099
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9223_call = mod.get_global_var('func_9223')
func_9225_call = mutated_mod.get_global_var('func_9225')
call_12134 = relay.TupleGetItem(func_9223_call(), 0)
call_12135 = relay.TupleGetItem(func_9225_call(), 0)
uop_12143 = relay.acosh(call_12134.astype('float32')) # shape=(5, 2, 5)
uop_12145 = relay.acosh(call_12135.astype('float32')) # shape=(5, 2, 5)
func_5015_call = mod.get_global_var('func_5015')
func_5017_call = mutated_mod.get_global_var('func_5017')
var_12160 = relay.var("var_12160", dtype = "int64", shape = (1690,))#candidate|12160|(1690,)|var|int64
call_12159 = func_5015_call(relay.reshape(var_12160.astype('int64'), [13, 10, 13]))
call_12161 = func_5015_call(relay.reshape(var_12160.astype('int64'), [13, 10, 13]))
func_10316_call = mod.get_global_var('func_10316')
func_10318_call = mutated_mod.get_global_var('func_10318')
call_12175 = func_10316_call()
call_12176 = func_10316_call()
output = relay.Tuple([uop_12143,call_12159,var_12160,call_12175,])
output2 = relay.Tuple([uop_12145,call_12161,var_12160,call_12176,])
func_12190 = relay.Function([var_12160,], output)
mod['func_12190'] = func_12190
mod = relay.transform.InferType()(mod)
var_12191 = relay.var("var_12191", dtype = "int64", shape = (1690,))#candidate|12191|(1690,)|var|int64
output = func_12190(var_12191)
func_12192 = relay.Function([var_12191], output)
mutated_mod['func_12192'] = func_12192
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10123_call = mod.get_global_var('func_10123')
func_10125_call = mutated_mod.get_global_var('func_10125')
call_12228 = relay.TupleGetItem(func_10123_call(), 0)
call_12229 = relay.TupleGetItem(func_10125_call(), 0)
output = relay.Tuple([call_12228,])
output2 = relay.Tuple([call_12229,])
func_12245 = relay.Function([], output)
mod['func_12245'] = func_12245
mod = relay.transform.InferType()(mod)
output = func_12245()
func_12246 = relay.Function([], output)
mutated_mod['func_12246'] = func_12246
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10424_call = mod.get_global_var('func_10424')
func_10426_call = mutated_mod.get_global_var('func_10426')
call_12257 = relay.TupleGetItem(func_10424_call(), 1)
call_12258 = relay.TupleGetItem(func_10426_call(), 1)
var_12270 = relay.var("var_12270", dtype = "float64", shape = (11, 5, 11))#candidate|12270|(11, 5, 11)|var|float64
bop_12271 = relay.right_shift(call_12257.astype('uint8'), relay.reshape(var_12270.astype('uint8'), relay.shape_of(call_12257))) # shape=(11, 5, 11)
bop_12274 = relay.right_shift(call_12258.astype('uint8'), relay.reshape(var_12270.astype('uint8'), relay.shape_of(call_12258))) # shape=(11, 5, 11)
func_4838_call = mod.get_global_var('func_4838')
func_4842_call = mutated_mod.get_global_var('func_4842')
const_12280 = relay.const([-2.547486,-8.527798,-1.116905,2.045651,-8.157984,-1.476944,-5.254527,1.778642,6.625073,-0.126311,9.255227,-4.943764,0.178160,6.401657,3.774212,1.950491,-6.175602,2.478675,-4.897421,-7.220082,3.728708,4.035183,2.000953,-4.893571,4.814070,-4.770287,2.963277,-2.713350,-7.350676,9.640498,4.618617,7.030775,-2.668495,1.554500,8.467047,4.174337,-0.209784,-5.797281,0.418394,-5.042750,-0.507782,-5.742646,-5.873547,-0.300228,-2.882871,-1.588172,2.931247,3.564876,-7.649471,-3.297173,-7.045823,-4.696982,-8.680830,-2.414669,-4.146229,-0.273675,-3.217676,-5.602258,4.862407,3.899956,-2.375428,-9.334213,1.599106,-4.608803,-7.306518,-0.058014,-6.923677,7.031401,7.998810,4.705381,-6.380451,-9.126103,-5.932162,5.623920,-0.693484,8.898765,-4.439445,-9.282372,6.115515,-7.259559,8.271186,-5.034109,5.105767,-7.182802,1.421864,-9.432263,4.426400,-3.582352,0.716437,-8.238154,-9.443192,1.382160,5.384165,6.610062,-4.897308,-9.944288,-0.712935,6.098039,-7.360291,-9.777807,5.695435,2.806858,-9.605881,-0.059586,-3.308882,7.193631,-9.130999,9.914036,-1.622898,-4.649782,-3.304933,-2.338783,2.392682,8.452151,2.552108,-4.243496,-4.597887,3.773429,6.182982,9.887468,-8.571553,1.843766,4.424440,-3.649060,9.409402,-7.731647,7.195842,-3.340494,-2.514958,-2.387955,2.976985,0.601610,0.752266,-1.255050,-8.781016,-1.422152,-8.401146,-9.021948,-2.370365,8.171423,1.391289,-4.316375,-3.792143,-0.931597,-8.038778,-0.891105,9.325735,9.429561,1.282650,2.717360,2.209679,-3.159343,9.574212,4.433385,-8.547024,2.648052,-9.211262,-7.581963,-9.580696,-4.375578,-8.366732,2.344711,-9.185703,-5.050045,-5.590714,6.895414,2.590010,-6.362509,-2.805997,-3.858042,-1.571592,6.141978,4.680302,-2.522935,-6.942538,-6.556472,3.810372,-8.565894,7.101678,7.930053,-3.439950,8.465927,5.589036,3.160726,-3.328537,-3.167753,0.543648,0.344459,1.662273,2.728380,-7.432115,-9.154847,3.149497,7.731652,3.397730,-9.833141,-5.763990,0.283132,1.989113,1.542215,4.055104,9.387316,6.068692,3.595638,-1.324699,-6.348215,3.857175,-0.392365,1.064283,0.378498,5.241736,4.950639,6.105193,7.417601,0.436615,-3.000012,-3.857036,3.473664,5.500555,-8.540276,7.458328,-6.387703,-9.302474,7.106577,9.060065,-1.617213,0.364069,-7.644004,6.486901,2.241588,-2.128720,1.300705,7.102833,2.583743,3.362174,-6.177500,-4.113718,6.896562,-1.052912,4.510969,5.435038,-4.444415,1.934666,-5.480909,-4.322313,7.510969,7.233124,4.612725,0.385625,0.813395,-4.579813,-6.851759,9.134286,4.348631,-9.787201,3.449773,7.797184,-0.673098,-4.082779,9.351475,7.283667,1.358070,4.219431,3.055732,1.767162,9.921853,4.691554,7.059876,-9.088379,-2.577192,8.247643,-5.333011,9.281913,3.640880,8.475600,-4.456937,2.842676,-2.474175,-9.636575,0.159462,-5.428736,3.781035,-5.559115,-6.338653,-5.120608,-1.237933,-8.671954,-5.700262,6.798497,0.567852,-9.517551,1.098597,-2.258249,-3.593479,-9.099516,-1.941227,-0.260151,-8.422098,-6.275592,5.013569,4.935447,-2.875416,2.540335,9.091709,-6.333765,7.211048,-0.127104,-7.880909,-2.557983,6.395107,2.729287,-2.689966], dtype = "float32")#candidate|12280|(312,)|const|float32
var_12281 = relay.var("var_12281", dtype = "uint64", shape = (1100,))#candidate|12281|(1100,)|var|uint64
call_12279 = relay.TupleGetItem(func_4838_call(relay.reshape(const_12280.astype('float32'), [8, 13, 3]), relay.reshape(const_12280.astype('float32'), [8, 13, 3]), relay.reshape(var_12281.astype('uint64'), [10, 110]), ), 1)
call_12282 = relay.TupleGetItem(func_4842_call(relay.reshape(const_12280.astype('float32'), [8, 13, 3]), relay.reshape(const_12280.astype('float32'), [8, 13, 3]), relay.reshape(var_12281.astype('uint64'), [10, 110]), ), 1)
output = relay.Tuple([bop_12271,call_12279,const_12280,var_12281,])
output2 = relay.Tuple([bop_12274,call_12282,const_12280,var_12281,])
func_12289 = relay.Function([var_12270,var_12281,], output)
mod['func_12289'] = func_12289
mod = relay.transform.InferType()(mod)
mutated_mod['func_12289'] = func_12289
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12289_call = mutated_mod.get_global_var('func_12289')
var_12291 = relay.var("var_12291", dtype = "float64", shape = (11, 5, 11))#candidate|12291|(11, 5, 11)|var|float64
var_12292 = relay.var("var_12292", dtype = "uint64", shape = (1100,))#candidate|12292|(1100,)|var|uint64
call_12290 = func_12289_call(var_12291,var_12292,)
output = call_12290
func_12293 = relay.Function([var_12291,var_12292,], output)
mutated_mod['func_12293'] = func_12293
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12310 = relay.var("var_12310", dtype = "float32", shape = (16, 6, 9))#candidate|12310|(16, 6, 9)|var|float32
uop_12311 = relay.log10(var_12310.astype('float32')) # shape=(16, 6, 9)
func_8274_call = mod.get_global_var('func_8274')
func_8276_call = mutated_mod.get_global_var('func_8276')
call_12313 = func_8274_call()
call_12314 = func_8274_call()
func_8402_call = mod.get_global_var('func_8402')
func_8404_call = mutated_mod.get_global_var('func_8404')
call_12318 = relay.TupleGetItem(func_8402_call(), 0)
call_12319 = relay.TupleGetItem(func_8404_call(), 0)
func_11075_call = mod.get_global_var('func_11075')
func_11077_call = mutated_mod.get_global_var('func_11077')
const_12363 = relay.const([-1.592275,-8.948044,6.796364,-2.835002,1.055049,-1.857139,9.778568,-7.799076,-5.794729,-7.587082,8.232361,6.399892,5.973823,-9.105884,9.026487,4.465921,3.510256,4.954522,-1.996863,-0.680904,-7.718133,0.453492,8.813598,-3.228677,-8.317608,-7.138376,-6.072310,0.762456,-3.423317,-4.150138,-3.116790,6.065682,-5.784937,-5.730270,-0.138349,-2.653593,-7.543335,-4.019483,-1.562363,5.918578,-2.111983,-0.004430,8.156943,-9.342646,2.771961,3.766158,-7.248158,0.174187,4.340997,-1.098516,-4.090590,-7.560332,-4.417976,7.905492,-3.043094,2.356435,-0.011515,9.985085,4.919963,3.475741,4.713183,5.972356,7.120443,-0.966015,-6.741051,-0.350828,9.174317,5.981035,-1.066990,-0.135778,3.831123,2.042442,0.996822,1.990815,-9.130532,5.987119,4.602131,9.741528,-8.748538,2.783497,-1.574962,0.794986,1.292834,0.309960,2.652746,-4.092544,-6.215549,5.526590,-8.936942,-8.829151,7.293415,-3.004434,-5.290824,-8.455508,4.707672,-9.741916,0.602046,-5.686936,-9.091344,-8.717242,0.571528,0.382145,-6.023556,-0.457603,2.134058,7.048204,-8.925626,-2.269326,-9.706050,1.845323,-9.895251,6.131244,-1.351038,-1.303310,-2.557247,-1.012749,1.570210,4.591490,-5.360622,9.581645,-0.808925,3.084194,-9.531872,-0.531467,-2.407206,8.235113,4.828067,-1.275149,-2.937570,-6.820188,-5.109945,-8.530994,-7.809925,9.431540,0.230982,5.374116,-4.355160,3.662450,-9.396003,7.829331,1.206464,7.777293,3.924955,-5.508130,5.983368,-3.194755,-4.814874,3.686435,-7.206449,2.737151,7.315155,-0.353676,3.574733,4.666192,4.691924,-7.605288,4.929588,6.070312,-9.838393,-7.390371,-3.771805,1.925925,1.093020,-2.832743,0.031003,-7.974315,-9.068685,-2.168978,-6.174470,3.336980,-1.531838,-9.083231,6.859613,2.206057,-6.826324,9.162350,-4.025328,8.106282,-2.819164,-1.881245,0.164275,-5.621393,1.374857,-7.314777,-9.485618,0.571581,0.637074,-4.749425,1.572059,-0.512853,1.343041,-8.695678,-7.760563,-5.394769,0.988290,0.743401,1.970981,-8.929477,-9.870189,-9.978351,-4.137341,-8.584654,1.122557,4.706059,-7.036429,-3.510693,9.610020,0.308165,-9.087223,-8.844886,-4.219139,5.452623,-0.046382,-9.068629,-0.104384,9.972547,-6.545733,-5.889834,9.851656,-3.393582,-0.039354,6.826506,-1.061716,2.575954,-4.674211,-2.227239,9.122610,-7.455257,-0.691500,2.673799,4.853652,5.282508,-8.938508,-5.098466,7.798141,7.009380,1.771074,-6.112291,0.282745,2.546647,3.855266,1.717717,9.781226,-3.618886,-8.289793,-4.234304,7.002084,-3.798497,7.657762,9.827741,1.838171,-9.862375,5.789463,-6.517012,1.310460,8.824861,-9.783969,8.045466,-5.529478,2.552630,8.830616,1.667996,1.151219,-5.598210,-4.924421,-2.588230,-9.053251,-8.474940,5.877477,8.666193,-5.385001,1.676095,5.958759,-2.933223,9.344696,-6.087722,1.229542,2.659778,4.063883,-9.693870,8.222684,-7.916679,5.940628,5.471998,6.010763,7.782775,7.614265,-8.823864,-7.431806,5.372801,-9.420360,-0.042077,8.041787,7.445423,-5.317549,-5.927167,-2.453329,3.909112,3.021684,-2.041416,6.289031,3.846788,-0.442502,0.335793,-5.369958,-8.766914,9.318352,6.817748,-7.119431,3.016947,-7.018144,-1.000175,-1.209729,-7.884662,9.994852,6.890908,8.776203,6.810325,-2.260997,-7.271745,5.174276,-0.984470,7.478693,3.930932,-1.980688,-8.176276,-6.333631,7.390954,8.607255,9.744177,-9.592960,9.183331,2.291100,2.158755,-8.398099,-4.098390,4.367347,-8.474458,-0.732440,-1.493073,-1.443784,5.905929,-7.562255,-2.329085,3.157030,-9.776960,-8.070033,1.508529,-8.302902,6.398896,-9.489731,2.856701,-5.880866,-8.183370,2.963183,9.288821,-6.016931,4.901024,1.973950,-3.684908,9.662665,-5.698166,-3.050558,7.082963,0.735321,8.742381,-5.935535,3.158988,-9.729259,-3.695296,-3.439034,-2.884454,-8.629855,2.275895,0.469407,-4.201272,-4.975720,-3.579853,-1.743974,-6.890680,-4.211996,3.900974,-4.709541,-1.639451,1.546078,-2.220329,-1.946509,-5.831449,-5.449932,6.369936,5.374482,-7.514698,-4.888487,-7.468829,-2.734313,-7.002353,8.933961,-6.208065,-2.879514,-5.343064,7.949703,-2.270621,9.297667,-3.495798,-9.920770,7.299801,-4.938804,-0.155472,-3.393360,3.983703,9.520850,-3.920411,-4.634053,-2.290508,9.696284,-8.089685,6.623635,-3.692163,3.356602,8.392618,-4.081467,2.110818,-1.157080,-9.772389,-9.336129,-9.516043,5.753621,-2.290403,3.130354,9.452847,-5.808747,8.848584,-6.998223,-2.648353,-5.693540,7.399431,8.890707,3.646702,-2.976014,-6.555480,-8.937382,-0.981099,3.561666,4.248737,3.677008,8.485812,-5.609270,-3.777707,4.267867,-3.293848,-1.120249,-7.136112,-6.235175,9.994348,0.958074,9.075406,-1.805581,-9.760133,1.559415,-9.249924,-4.586282,-1.464074,-8.397448,3.680588,5.583921,-9.912678,8.769431,8.291045,-8.358710,0.947250,2.191499,5.193134,-5.624028,7.019863,6.060824,0.570747,-2.944356,-6.774130,-2.415107,-1.809573,6.252514,2.583955,4.126742,-5.871338,7.206059,-6.116993,0.932203,2.333442,9.433313,3.828781,-9.576185,-4.862076,-5.544950,-9.634317,-9.767589,-9.877932,2.429133,-9.984520,7.165847,-4.366423,-0.730683,9.676333,6.933481,-7.534325,4.288635,3.173188,-3.573923,-6.757753,4.055378,3.672859,8.587173,9.682147,6.360860,-7.961862,7.288906,7.692889,9.979118,7.864141,5.728569,6.279094,7.761422,4.146954,-6.702933,-2.298731,-5.274775,4.472155,3.412750,-5.243645,-8.883516,6.349750,2.192206,-9.897005,9.450241,5.037325,9.927266,-4.099317,-7.079169,-5.383098,5.988816,-3.772914,-0.805248,-6.057237,-6.868911,-1.269374,2.046171,-8.598052,-7.702984,4.201424,-3.127384,0.937854,7.589902,-6.899522,1.840988,-0.939643,2.753020,-7.212496,-2.700278,-4.685116,0.751517,4.508644,-5.350093,1.808947,-1.750912,8.720979,-1.409554,-3.523079,-9.052338,3.352147,7.207120,-1.634536,-5.341492,-6.604051,0.713888,4.321220,1.126677,6.037272,4.026964,0.693136,2.611165,-5.793948,7.434856,1.287181,-3.214478,0.468251,-9.903836,-3.751258,-0.097201,3.617812,4.513404,-6.311667,-7.795861,5.248608,-1.865740,3.328320,1.052626,8.095810,4.071202,-6.833407,1.307630,3.890419,5.280334,-9.904589,4.770868,-4.997393,7.151012,0.956466,-0.587434,0.744611,9.561717,4.956438,-6.889317,6.427317,6.601110,6.144284,0.627731,9.517984,5.607118,-4.299983,4.015476,4.545380,8.108796,-2.168300,6.165978,7.067222,0.546003,1.311361,3.512213,4.522920,-8.473730,-4.807380,2.377947,5.506546,5.146268,9.093925,-9.402852,9.031669,-1.224915,9.815821,5.885246,-6.355913,2.093187,7.029560,1.967799,-1.238271,5.562317,2.629284,-2.964073,2.820670,5.841019,-6.527627,-8.434601,0.157553,-6.594764,-4.764061,4.172861,-5.219833,2.675114,-3.392328,-8.999565,-9.296713,3.687047,-5.226283,-2.409553,0.203251,7.676968,6.381976,-8.900704,-6.926879,-9.113169,-3.127402,0.488182,-0.863012,-1.627685,5.537814,0.512206,4.282419,-3.884570,-5.885434,9.053016,-8.354904,-8.912875,-7.751409,-6.950016,8.987249,-6.889428,7.538666,-3.805166,-6.418637,-1.427334,7.447559,5.522784,-8.629787,-6.635366,2.167194,-2.700655,-2.856635,9.360547,2.344054,3.312343,-1.693244,5.505586,-6.575402,-2.077263,-2.335738,-0.676301,-5.265712,-3.930238,5.855470,-8.788676,9.162264,-3.290461,0.905642,-7.122217,-2.285791,4.643293,3.546861,-6.345943,-7.941049,-2.585825,6.748286,-0.667094,4.231775,-8.415367,7.467457,7.292731,7.457891,6.642146,2.450768,-5.161202,4.484037,4.433195,-4.761803,-2.190633,-1.814503,3.709281,-2.022513,7.862724,7.193629,-7.811171,-4.059018,7.003379,-4.733511,-8.594486,-7.604741,8.948152,-1.504991,2.561384,-6.764649,3.637225,-2.980783,-2.746628,-7.045775,-3.922498,2.801708,8.060108,-4.568568,0.579972,4.140343,3.187699,-7.588200,9.309351,5.864106,3.714812,8.010012,-0.443039,-5.327407,-4.190123,-5.743245,-1.423728,5.410707,-1.367321,-5.857866,-4.849049,4.477081,6.468536,-8.006416,3.941275,4.649635,5.703640,4.737754,1.825705,-3.917207,8.020664,-7.943715,-9.954092,8.384622,-5.377453,0.303722,4.824804,-0.697872,-3.580156,9.249191], dtype = "float64")#candidate|12363|(792,)|const|float64
call_12362 = relay.TupleGetItem(func_11075_call(relay.reshape(const_12363.astype('float64'), [11, 12, 6])), 0)
call_12364 = relay.TupleGetItem(func_11077_call(relay.reshape(const_12363.astype('float64'), [11, 12, 6])), 0)
output = relay.Tuple([uop_12311,call_12313,call_12318,call_12362,const_12363,])
output2 = relay.Tuple([uop_12311,call_12314,call_12319,call_12364,const_12363,])
func_12389 = relay.Function([var_12310,], output)
mod['func_12389'] = func_12389
mod = relay.transform.InferType()(mod)
mutated_mod['func_12389'] = func_12389
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12390 = relay.var("var_12390", dtype = "float32", shape = (16, 6, 9))#candidate|12390|(16, 6, 9)|var|float32
func_12389_call = mutated_mod.get_global_var('func_12389')
call_12391 = func_12389_call(var_12390)
output = call_12391
func_12392 = relay.Function([var_12390], output)
mutated_mod['func_12392'] = func_12392
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8274_call = mod.get_global_var('func_8274')
func_8276_call = mutated_mod.get_global_var('func_8276')
call_12422 = func_8274_call()
call_12423 = func_8274_call()
output = relay.Tuple([call_12422,])
output2 = relay.Tuple([call_12423,])
func_12427 = relay.Function([], output)
mod['func_12427'] = func_12427
mod = relay.transform.InferType()(mod)
output = func_12427()
func_12428 = relay.Function([], output)
mutated_mod['func_12428'] = func_12428
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11621_call = mod.get_global_var('func_11621')
func_11623_call = mutated_mod.get_global_var('func_11623')
call_12437 = relay.TupleGetItem(func_11621_call(), 0)
call_12438 = relay.TupleGetItem(func_11623_call(), 0)
output = call_12437
output2 = call_12438
func_12439 = relay.Function([], output)
mod['func_12439'] = func_12439
mod = relay.transform.InferType()(mod)
mutated_mod['func_12439'] = func_12439
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12439_call = mutated_mod.get_global_var('func_12439')
call_12440 = func_12439_call()
output = call_12440
func_12441 = relay.Function([], output)
mutated_mod['func_12441'] = func_12441
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9132_call = mod.get_global_var('func_9132')
func_9133_call = mutated_mod.get_global_var('func_9133')
call_12442 = relay.TupleGetItem(func_9132_call(), 0)
call_12443 = relay.TupleGetItem(func_9133_call(), 0)
func_1241_call = mod.get_global_var('func_1241')
func_1243_call = mutated_mod.get_global_var('func_1243')
var_12445 = relay.var("var_12445", dtype = "float32", shape = (112,))#candidate|12445|(112,)|var|float32
call_12444 = relay.TupleGetItem(func_1241_call(relay.reshape(var_12445.astype('float32'), [2, 14, 4])), 4)
call_12446 = relay.TupleGetItem(func_1243_call(relay.reshape(var_12445.astype('float32'), [2, 14, 4])), 4)
func_9450_call = mod.get_global_var('func_9450')
func_9452_call = mutated_mod.get_global_var('func_9452')
const_12451 = relay.const([[4.578123,-3.602516,6.500857,-8.661285,-7.845915,0.611017,-0.909614,4.036746,-2.292853,-9.624541,6.346797,6.130594,-3.202595,-8.073042,9.200995,-9.959879,-4.554745,0.622166,6.739224,-1.787577,5.454310,-5.403969,8.874038,2.181599,1.913902,3.673859,9.104590,4.803990,4.386569,-1.368380,7.609460,0.294621,3.100102,2.662686,6.502412,2.490309,8.748036,-1.612669,5.624327,-2.940378,4.370937,-7.620991,4.103490,-6.898641,7.553113,9.733278,-6.850973,-1.740422,9.127351,-9.999518,-0.394233,0.837917,9.546483,-8.960530,9.043126,-9.534917,-9.189925,-0.766024,-1.868071,7.260247,1.138090,-6.305900,8.965135,-5.452340,-2.884252,7.695918,-7.129940,-2.909565,1.398610,-4.887765,-8.714817,2.607598,4.860963,-9.973387,4.558272,-2.786624,-4.035133,-6.250728,8.854746,-7.751697,6.791556,-7.637803,-9.052226,-2.051979,7.909255,-6.769440,7.830539,0.268996,8.450098,-0.474044,0.986556,-4.103260,8.900366,4.628537,4.970687,-3.472781,-1.868477,-1.074131,4.889452,-1.181901,4.197696,-8.892695,-0.840037,-6.387593,4.260485,-6.968353,7.062462,-8.947857,7.578847,1.406543,5.952762,-5.818602,6.499647,-5.487459,4.741563,8.681748,-4.762656,7.613429,7.603502,-9.322949,-0.101643,2.072452,1.414930,-8.199461,-1.398480,4.321420,2.777788,7.046511,-7.311734,1.861697,-0.444302,4.339507,5.214632,8.668178,-9.815337,0.431414,7.160833,-5.243209,1.648706,2.250831,-0.458264,8.765735,-0.494837,-4.685760,5.235456,-9.353604,4.349583,-5.602040,-3.683744,7.746078,9.642929,8.145245,-9.664598,-2.346821,-5.909092,6.702381,-9.044574,-9.026113,6.026982,-7.811417,9.259563,-6.976569,-0.211203,9.661811,-3.265732,1.937347,2.140962,-5.889685,-5.673581,7.012205,9.428247,8.213754,-7.958268,-4.004848,2.314758,-4.357547,-1.636081,5.264705,0.875694,6.331881,4.523442,1.799823,-1.078523,-2.717146,-5.759556,8.063741,-7.022836,-2.815331,0.399380,-5.232877,1.714015,4.400827,3.437289,-2.805356,4.950212,2.356793,-8.218162,2.578857,-7.077926,5.353995,-1.266253,-0.697047,8.348839,1.157333,-7.416784,0.880371,-8.889263,8.080026,2.652545,-3.437032,2.457468,-3.206266,-9.536510,-9.105471,1.014204,-1.010739,8.952554,7.138946,9.886222,7.821851,-4.136611,3.698492,0.152005,2.567724,-5.197666,8.083613,1.188396,2.519905,0.804618,-4.581921,2.545979,-6.305918,-2.217971,4.562869,-9.544860,8.028886,-2.942885,1.562174,9.497689,-0.005759,-1.711631,4.522945,0.533336,-2.394483,7.802696,-3.071932,0.201087,4.287900,-7.878692,0.003054,4.817676,6.497399,1.861360,5.911704,3.445227,-3.586312,6.933233,0.744676,-7.055346,5.235320,1.376479,-0.657832,5.463534,-6.275011,-3.000378,-2.890131,-0.611234,9.400752,3.571690,-7.497955,8.099151,-4.089240,-5.946284,2.154797,2.655443,-9.678563,-6.111491,1.381328,-3.084387,7.669458,6.965565,-4.696924,-8.494441,7.142903,-1.775942,-6.901498,-8.800522,-2.047940,7.711666,4.301782,5.214276,6.823025,-5.975642,1.989112,-6.110320,-7.485697,-5.540056,6.683199,-9.049726,-5.148173,-5.061885,-9.459987,-6.352362,6.262036,6.888329,-2.944846,6.714436,-2.141480,2.994028,-4.228964,5.708512,0.030712,-3.910506,-6.589206,-0.940109,9.627119,2.712901,6.500148,6.417644,0.314955,-6.864752,6.591337,5.039285,5.848436,2.820310,-4.117745,-5.363455,-8.795058,-6.195299,-4.028207,-4.706748,2.678145,2.664175,7.658780,-1.061337,8.063101,-5.301251,-0.196005,7.074720,-1.201834,8.052150,8.056831,9.820498,-3.885015,-8.477012,-3.362566,6.383877,-7.818766,-2.457643,6.656124,3.044177,6.978713,7.522312,9.908818,-6.252626,7.716287,7.862643,5.327663,-1.854584,-8.130110,-7.250241,2.762155,1.750033,8.627185,4.782823,-0.259807,4.114702,4.815577,5.789897,7.276341,-7.265527,5.998737,2.009489,-9.080931,5.294424,-7.967985,5.097938,1.018453,-0.302055,4.603174,5.903249,-3.052707,4.997513,3.596331,-5.982173,-8.126352,8.382672,-4.518879,3.764753,-6.307909,-8.968731,-7.221643,4.159957,-5.103014,-5.660033,8.245101,6.968551,1.087808,3.079434,2.095276,5.043557,0.895777,9.069861,-3.719913,-9.551521,1.318899,0.714485,4.228945,2.079053,-3.873032,4.256891,0.136848,1.498340,9.942154,3.633042,3.591012,3.371441,1.007720,-6.054133,3.101200,5.717243,5.422046,-5.359833,0.403589,-8.935489,-7.836536,3.289006,-9.804822,-4.543874,-7.174044,-4.403014,-0.153658,-6.590801,6.800686,9.802778,9.307086,2.128065,-9.846216,1.448524,-6.686700,9.521638,1.420974,-3.398757,-5.183120,-9.394550,6.555383,-1.368143,-0.305410,4.623687,9.980999,-6.076085,1.888160,-8.003225,8.374093,4.519949,1.346311,-1.290936,-0.075357,0.375439,6.981089,6.490796,-6.231035,3.991676,-0.032343,-9.897270,0.771904,-6.272229,4.943558,-6.824227,0.299290,-4.284732,5.549653,9.363342,7.671155,-8.894039,-3.333325,0.160274,1.405041,8.189066,-2.250194,9.579711,-0.701365,-6.856831,-7.172346,8.628837,3.098872,2.447561,-5.647119,-6.605103,7.301082,8.292110,-2.257478,-9.524406,3.864979,5.984913,-9.944997,4.562988,-8.153245,-2.060420,2.403100,-9.410269,6.152557,6.562642,9.424830,5.565568,-1.083567,-3.368244,-9.782060,-3.097770,2.730489,3.820132,-7.683246,-5.371545,-7.055252,-7.193186,-4.472787,-1.517175,-9.288963,-3.275889,2.418899,-4.959925,-5.595877,-7.877411,8.821752,-7.773777,-1.166713,-0.181709,-0.273183,-0.174732,7.107309,-0.269375,5.471516,6.206861,-6.569247,3.902825,-0.837067,3.972333,7.563594,8.212137,-9.490761,5.312196,9.242005,-5.339718,-8.530668,-4.843809,4.283922,-5.880390,-7.667913,-7.262265,9.726604,-2.855898,9.026056,-0.327485,-7.322157,2.955774,0.297777,2.876948,5.209435,-2.090111,-6.615434,0.148971,-9.022167,8.635575,-0.179864,6.896053,5.127715,1.550796,-8.081220,8.322421,9.730641,6.423578,1.077920,3.173032,-9.035785,9.809702,-1.920523,-9.393529,-9.261471,6.544846,7.606905,-4.996882,2.157053,0.118804,0.947715,-1.253669,-7.264715,8.326369,-9.388242,-3.274359,-5.747513,-7.498665,-5.194527,5.628633,-8.587787,9.175453,-1.045890,-7.071974,5.061796,6.213737,8.862594,1.079776,7.156660,3.979336,4.050976,2.943337]], dtype = "float64")#candidate|12451|(1, 605)|const|float64
call_12450 = relay.TupleGetItem(func_9450_call(relay.reshape(const_12451.astype('float64'), [605,])), 1)
call_12452 = relay.TupleGetItem(func_9452_call(relay.reshape(const_12451.astype('float64'), [605,])), 1)
func_12427_call = mod.get_global_var('func_12427')
func_12428_call = mutated_mod.get_global_var('func_12428')
call_12454 = relay.TupleGetItem(func_12427_call(), 0)
call_12455 = relay.TupleGetItem(func_12428_call(), 0)
output = relay.Tuple([call_12442,call_12444,var_12445,call_12450,const_12451,call_12454,])
output2 = relay.Tuple([call_12443,call_12446,var_12445,call_12452,const_12451,call_12455,])
func_12465 = relay.Function([var_12445,], output)
mod['func_12465'] = func_12465
mod = relay.transform.InferType()(mod)
mutated_mod['func_12465'] = func_12465
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12466 = relay.var("var_12466", dtype = "float32", shape = (112,))#candidate|12466|(112,)|var|float32
func_12465_call = mutated_mod.get_global_var('func_12465')
call_12467 = func_12465_call(var_12466)
output = call_12467
func_12468 = relay.Function([var_12466], output)
mutated_mod['func_12468'] = func_12468
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12439_call = mod.get_global_var('func_12439')
func_12441_call = mutated_mod.get_global_var('func_12441')
call_12492 = func_12439_call()
call_12493 = func_12439_call()
output = call_12492
output2 = call_12493
func_12495 = relay.Function([], output)
mod['func_12495'] = func_12495
mod = relay.transform.InferType()(mod)
output = func_12495()
func_12496 = relay.Function([], output)
mutated_mod['func_12496'] = func_12496
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10563_call = mod.get_global_var('func_10563')
func_10564_call = mutated_mod.get_global_var('func_10564')
call_12559 = func_10563_call()
call_12560 = func_10563_call()
func_11075_call = mod.get_global_var('func_11075')
func_11077_call = mutated_mod.get_global_var('func_11077')
call_12612 = relay.TupleGetItem(func_11075_call(relay.reshape(call_12559.astype('float64'), [11, 12, 6])), 0)
call_12613 = relay.TupleGetItem(func_11077_call(relay.reshape(call_12559.astype('float64'), [11, 12, 6])), 0)
func_10196_call = mod.get_global_var('func_10196')
func_10198_call = mutated_mod.get_global_var('func_10198')
const_12651 = relay.const([True,False,True,False,False,True,False,True,True,True,True,True,False,False,False,False,True,True,False,True,True,True,False,False,True,False,False,True,False,False,True,True,True,False,False,True,False,False,True,True,False,False,False,False,False,False,False,False,True,True,True,True,False,True,True,True,False,False,False,False,False,False,True,True,False,True,True,False,False,False,True,False,False,True,False,True,False,True,True,True,False,False,False,False,True,False,True,True,False,True,True,False,True,True,False,False,False,True,False,False,True,False,False,True,True,True,False,True,False,True,True,False,True,True,False,True,True,True,False,True,False,False,False,False,True,False,False,True,True,False,False,False,False,False,True,False,True,False,True,True,True,False,True,True,False,True,False,True,False,False,True,True,False,True,True,True,True,True,True,False,True,True,False,False,True,True,False,True,True,True,False,True,False,False,False,False,True,False,True,False,False,False,True,True,True,False,False,False,True,True,False,False,False,False,False,False,False,False,True,True,False,True,False,False,True,False,False,True,False,True,True,True,False,False,False,True,False,False,False,True,False,False,True,False,True,False,False,True,False,True,False,False,True,True,False,False,True,False,True,False,False,False,True,False,False,True,True,False,True,True,True,True,False,True,False,True,True,False,False,True,False,False,False,True,True,False,True,True,True,True,True,True,True,False,True,False,True,False,False,False,False,False,False,False,True,False,True,False,False,True,True,False,True,True,True,True,False,True,False,True,False,True,False,True,True,True,True,False,True,False,False,True,False,False,True,True,False,False,True,True,True,False,True,True,False,True,False,False,False,False,True,False,True,True,True,False,False,True,False,True,True,False,True,True,True,False,False,True,True,True,False,False,True,False,True,True,True,True,True,True,True,False,True,False,True,False,False,True,True,False,True,False,True,False,True,False,False,True,True,True,False,False,False,False,False,True,True,True,True,True,False,False,True,True,True,True,True,True,False,True,False,True,True,True,True,True,True,False,False,False,True,True,False,True,True,False,True,False,True,False,True,True,False,True,False,True,False,False,True,False,True,True,False,False,False,True,True,True,True,False,True,True,True,False,False,False,False,True,False,False,True,False,True,False,True,False,True,True,False,False,True,True,True,True,True,True,True,True,False,False,True,False,True,False,False,False,False,False,True,False,False,True,False,False,True,True,False,False,False,False,True,False,True,False,True,False,False,False,True,False,True,False,False,False,False,False,False,False,True,False,True,True,True,True,True,False,True,True,False,True,True,True,True,False,False,True,True,False,True,False,False,False,True,True,True,True,True,True,False,False,True,True,False,False,False,True,False,True,True,True,True,False,False,False,True,False,True,False,False,True,False,True,True,True,False,False,True,True,False,True,False,True,False,False,False,False,True,False,False,False,True,True,True,False,True,False,False,True,False,True,False,False,False,True,False,False,False,True,True,False,False,True,True,False,True,True,False,True,False,False,True,True,True,False,True,True,False,False,False,False,True,False,True,True,True,True,True,True,False,False,True,False,False,True,False,True,False,False,False,False,True,False,False,False,False,True,True,True,True,True,True,False,True,False,True,True,True,False,False,True,True,False,True,True,True,True,False,True,False,True,False,True,True,False,True,True,True,True,False,True,False,False,True,False,False,True,True,False,True,True,True,False,True,True,True,False,False,False,False,False,True,False,True,False,False,True,True,True,False,False,False,False,False,False,False,False,True,True,False,False,True,False,True,False,True,False,True,True,False,True,False,True,True,True,True,True,False,True,False,False,True,True,True,True,True,True,True,False,True,False,False,False,False,True,False,True,False,True,False,False,False,False,False,True,False,True,False,False,False,True,True,True,False,False,False,True,True,False,True,False,False,True,False,False,True,True,True,True,False,True,True,True,False,True,False,False,True,True,False,True,False,True,True,False,True,True,True,True,True,False,True,True,True,False,True,False,True,False,True,True,False,True,False,False,False,True,False,True,False,False,True,False,False,False,False,True,True,True,False,True,True,False,False,False,False,False,True,True,False,False,False,False,True,True,False,False,False,False,True,False,True,False,False,True,False,False,False,False,True,True,True,False,True,True,False,True,True,True,False,False,False,False,False,True,True,True,True,True,True,True,True,False,True,True,True,False,True,False,False,False,True,True,False,False,False,True,True,False,False,True,False,False,True,False,False,True,True,True,False,True,False,False,True,False,True,True,False,True,True,False,True,False,True,False,False,True,True,True,True,True,False,True,False,True,False,False,False,True,True,True,False,False,True,False,False,False,True,False,True,False,False,True,False,True,True,False,False,False,True,False,True,True,True,True,False,True,True,True,True,True,False,True,True,True,True,True,True,False,True,True,False,True,False,False,False,True,False,False,True,True,False,False,False,False,False,True,True,True,False,False,False,False,False,True,True,True,False,False,False,True,True,False,False,True,True,False,False,True,True,True,True,True,False,True,True,False,False,True,True,False,True,False,False,True,True,True,True,False,False,True,True,True,True,False,True,False,False,True,False,True,True,True,True,True,False,False,True,True,True,False,True,True,False,False,False,False,True,True,False,True,False,True,True,False,True,False,False,False,True,False,True,False,True,False,True,False,True,False,True,False,True,False,True,True,False,False,True,False,True,True,True,False,True,False,False,False,False,False,False,False,True,False,False,False,False,False,False,True,False,True,False,True,False,True,True,False,True,False,False,True,False,False,True,True,False,True,True,True,True,False,True,False,False,True,True,False,True,True,False,False,True,False,True,True,True,False,True,True,True,False,False,True,False,True,False,False,False,True,True,True,True,False,False,True,False,True,False,True,False,False,True,True,False,True,False,True,True,False,False,False,False,False,True,False,True,True,False,True,True,False,True,False,False,True,False,False,False,False,False,False,False,True,False,False,False,False,True,False,False,False,False,False,False,False,False,False,True,True,True,False,True,False,True,True,True,True,False,True,True,False,False,True,True,False,True,False,False,False,False,True,False,False,True,True,False,False,True,False,True,False,False,False,True,True,True,False,False,True,False,True,True,False,False,True,False,True,True,False,False,True,True,False,True,True,True,False,True,False,False,False,True,False,False,False,False,True,False,False,True,False,False,False,False,False,True,False,False,False,True,False,True,False,False,True,True,False,True,False,False,True,False,True,True,False,True,True,False,False,False,True,False,False,True,True,False,True,True,False,True,False,False,True,True,True,False,False,True,True,True,True,False,True,True,True,False,False,True,False,False,True,True,True,True,False,False,True,True,True,False,True,False,False,False,True,True,False,True,False,True,False,False,True,False,True,False,False,True,True,False,False,False,True,True,True,True,True,True,True,False,True,False,False,True,False,True,True,False,True,True,True,True,True,False,True,False,False,True,False,False,True,False,False,False,True,False,False,False,True,True,False,False,True,True,True,True,False,False,True,True,False,False,True,True,False,False,False,False,False,False,False,True,False,True,False,True,True,False,True,False,True,True,False,False,False,True,True,True,False,False,False,False,False,True,True,False,False,True,False,False,True,True,True,True,False,True,False,True,True,True,True,False,True,True,False,True,False,True,False,False,True,True,False,True,False,False,True,False,True,False,False,True,True,False,False,True,True,True,False,True,False,True,True,True,False,False,True,False,True,True,True,True,False,True,False,True,True,False,True,True,False,False,False,True,False,False,False,True,True,False,False,False,True,False,True,True,False,False,True,True,False,False,False,False,False,True,True,True,True,True,False,True,True,False,False,True,True,False,False,False,False,True,False,True,True,False,False,True,False,True,False,False,False,True,True,False,False,False,True,True,True,False,False,False,False,False,True,True,False,False,False,False,True,False,True,False,False,True,True,True,False,True,True,False,False,False,False,False,True,False,True,False,False,True,True,False,True,False,False,True,False,False,True,True,False,False,True,True,True,False,False,False,False,True,False,False,False,True,True,True,True,False,True,True,False,False,True,True,True,True,True,True,True,False,True,False,True,False,True,False,True,True,False,True,False,True,True,False,False,False,True,True,True,True,False,True,True,True,False,False,True,True,False,False,False,True,False,True,True,True,True,False,False,False,True,True,True,True,True,True,True,True,False,False,False,False,True,True,True,False,False,False,True,False,True,True,True,True,False,False,True,False,True,True,False,False,False,True,True,False,False,True,True,False,True,True,False,True,False,True,True,False,False,False,False,True,False,True,False,False,False,True,False,True,True,False,True,True,True,True,True,True,False,False,True,True,True,True,False,False,True,True,False,True,False,True,False,False,False,False,False,False,False,True,True,True,True,True,False,True,False,False,False,False,False,False,True,False,True,False,False,False,True,False,True,True,True,True,True,False,False,False,False,False,True,False,True,False,True,True,True,True,True,False,True,False,False,False,False,True,False,False,False,False,False,True,True,False,True,True,False,True,True,False,True,False,False,False,False,True,True,False,False,True,False,True,True,False,False,True,True,False,True,True,False,True,True,False,True,False,True,True,True,False,False,False,False,False,False,False,False,True,False,False,False,False,False,True,False,False,False,False,False,True,True,True,True,False,True,False,False,False,False,True,False,False,True,False,False,True,False,False,True,True,True,True,True,True,True,False,True,True,False,True,True,True,False,False,False,True,False,False,True,False,False,True,False,True,True,True,True,False,True,False,True,False,True,False,True,False,False,False,False,False,False,True,False,False,True,False,False,True,False,True,False,False,True,False,False,False,True,True,False,True,True,True,True,False,False,True,True,False,True,True,True,True,False,True,False,True,True,False,False,True,True,False,False,False,True,False,True,False,True,True,True,False,True,True,False,True,False,True,True,True,False,False,True,False,True,True,True,False,True,False,False,False,False,False,True,True,False,False,False,True,True,True,True,False,False,True,True,False,True,True,False,True,True,True,False,True,False,True,True,True,True,True,True,False,True,False,True,True,False,True,False,False,True,True,False,True,True,False,False,False,True,False,True,False,True,True,True,True,True,True,False,False,False,True,False,False,False,False,True,False,True,False,False,False,True,True,False,False,True,False,False,False,False,False,False,True,True,False,False,False,True,False,True,True,True,True,True,True,True,True,False,True,True,False,True,False,True,True,True,False,True,True,False,True,True,True,False,True,True,False,True,False,False,False,True,False,False,True,True,True,False,True,False,True,False,False,True,True,True,False,False,True,False,False,False,True,True,True,False,False,True,False,False,False,False,False,False,False,True,True,False,True,True,False,False,True,False,True,False,False,False,False,True,False,True,True,True,False,False,False,True,False,False,True,False,False,True,False,True,False,True,True,True,False,True,True,True,False,True,False,False,True,False,True,True,True,False,False,False,True,False,True,True,False,False,True,True,False,True,False,False,False,True,False,True,False,True,False,False,False,False,False,True,True,True,False,False,False,True,False,True,True,True,False,False,False,True,True,False,False,True], dtype = "bool")#candidate|12651|(2304,)|const|bool
call_12650 = relay.TupleGetItem(func_10196_call(relay.reshape(const_12651.astype('bool'), [2304,])), 2)
call_12652 = relay.TupleGetItem(func_10198_call(relay.reshape(const_12651.astype('bool'), [2304,])), 2)
func_9843_call = mod.get_global_var('func_9843')
func_9845_call = mutated_mod.get_global_var('func_9845')
call_12661 = func_9843_call()
call_12662 = func_9843_call()
func_11503_call = mod.get_global_var('func_11503')
func_11505_call = mutated_mod.get_global_var('func_11505')
var_12664 = relay.var("var_12664", dtype = "float32", shape = (14,))#candidate|12664|(14,)|var|float32
call_12663 = func_11503_call(relay.reshape(var_12664.astype('float32'), [1, 2, 7]))
call_12665 = func_11503_call(relay.reshape(var_12664.astype('float32'), [1, 2, 7]))
bop_12681 = relay.maximum(call_12559.astype('int16'), relay.reshape(call_12612.astype('int16'), relay.shape_of(call_12559))) # shape=(11, 12, 6)
bop_12684 = relay.maximum(call_12560.astype('int16'), relay.reshape(call_12613.astype('int16'), relay.shape_of(call_12560))) # shape=(11, 12, 6)
output = relay.Tuple([call_12650,const_12651,call_12661,call_12663,var_12664,bop_12681,])
output2 = relay.Tuple([call_12652,const_12651,call_12662,call_12665,var_12664,bop_12684,])
func_12685 = relay.Function([var_12664,], output)
mod['func_12685'] = func_12685
mod = relay.transform.InferType()(mod)
mutated_mod['func_12685'] = func_12685
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12686 = relay.var("var_12686", dtype = "float32", shape = (14,))#candidate|12686|(14,)|var|float32
func_12685_call = mutated_mod.get_global_var('func_12685')
call_12687 = func_12685_call(var_12686)
output = call_12687
func_12688 = relay.Function([var_12686], output)
mutated_mod['func_12688'] = func_12688
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11695_call = mod.get_global_var('func_11695')
func_11696_call = mutated_mod.get_global_var('func_11696')
call_12785 = relay.TupleGetItem(func_11695_call(), 0)
call_12786 = relay.TupleGetItem(func_11696_call(), 0)
func_10263_call = mod.get_global_var('func_10263')
func_10266_call = mutated_mod.get_global_var('func_10266')
const_12805 = relay.const([7.884482,5.461865,6.609265,4.828592,-6.961537,-7.219463,-5.034207,-8.342276,8.338916,1.191438,8.585806,4.605214,5.802982,6.979917,8.608725,5.370229,-4.841520,5.456035,1.215825,6.774660,3.262240,9.002297,-7.835309,-8.092294,5.228996,-1.450362,8.112893,9.523438,-0.204737,-5.067450,-1.471302,-4.312914,-9.025504,-5.134695,-8.997901,8.723201,8.684315,3.784308,-9.513436,3.970189,-0.649662,-8.966376,-9.323939,-7.133498,5.356495,-2.384577,-7.452461,-2.600858,-5.795793,-0.762054,-7.716120,-5.131935,-5.601094,-1.046067,-1.857167,7.072871,9.183228,-1.993002,4.879494,-4.303220,6.875139,-4.928644,0.755795,3.167794,6.616030,-2.526171,3.481818,-8.314846,-3.319237,0.692733,-5.653779,4.685122,-8.047973,6.804133,-9.455125,-2.841970,-5.369736,-1.059735,-5.652507,-3.556310,2.920916,7.863374,8.055895,4.340903,-8.492580,-7.329704,1.069630,-1.133853,-7.431987,9.578545,1.417325,-0.363502,8.499647,0.821237,-8.763807,2.658647,-5.643499,3.636701,-0.618414,-9.017539,8.427131,-9.278680,-4.058702,-6.861382,-5.718609,-1.344261,-0.261724,-7.215633,7.959154,9.238830,2.949226,1.068144,1.164009,3.106058,0.706893,3.886095,7.959719,9.204637,-3.342419,-4.584611,-7.165296,0.107610,6.716526,-8.260487,9.462949,8.293621,-3.478670,4.932094,6.977428,-6.873274,-5.700112,1.232651,4.828806,4.915946,-3.026837,-7.076385,-7.087225,3.984677,0.336106,-6.437955,5.666015,8.508760,3.073401,-4.306892,-3.695378,9.207113,-5.790093,-7.680516,-7.857319,7.323460,6.335972,9.868345,2.291748,4.488442,-0.260294,-8.414982,9.912299,8.418971,-2.798449,2.718953,-8.452888,3.964649,3.687662,-8.818454,1.873923,7.685832,-2.053849,0.144818,0.725132,-7.719680,-6.955066,-9.486288,8.304985,-1.172355,6.949414,-8.723006,0.948467,-7.230045,9.680969,-8.652422,-0.722669,5.636553,-2.349260,0.888849,7.635389,6.730162,-4.304615,-6.355771,7.908115,9.075706,-5.325196,7.115293,1.791061,9.180100,-9.188638,3.602573,0.640082,7.229465,9.894923,2.865605,6.316455,3.501000,-4.243692,9.271646,-8.939679,-3.531572,-8.943270,-8.456930,6.767094,-8.281229,4.723709,9.609284,-9.385090,-8.717568,9.237860,-9.066974,-9.611336,-3.983878,5.786435,6.735807,-0.751187,4.001472,5.047043,-9.013470,3.880573,-5.293163,-8.775092,8.122625,4.412077,4.668302,9.827163,3.778457,3.472089,9.431177,4.879336,-2.985965,-1.142263,-4.348895,-4.457256,8.018079,1.696550,-6.152004,4.516656,-2.083322,-0.194589,5.836171,1.459027,8.542026,-5.362814,-5.883522,6.664859,4.954364,-0.039590,9.834176,-2.976400,-1.158639,1.536575,5.275868,-2.119838,1.489059,1.223342,-1.724400,2.133123,9.211477,-5.599737,8.870060,5.862800,-7.817933,-5.048061,-0.192106,-0.072503,-4.045940,7.535365,-9.306422,3.444938,-8.225866,-5.861596,4.871231,0.426308,7.843161,-0.152863,9.580332,9.153210,4.628930,-6.668478,-1.424728,-8.837588,-2.734791,-4.048151,9.052226,-0.242299,9.552034,8.246549,-7.804779,1.446167,-9.161200,-9.587300,1.923913,7.667770,7.244242,-9.159900,-4.553686,-7.032475,8.952242,8.745278,-9.267970,-0.640640,-8.213342,-9.411694,-9.073910,-5.760034,-7.726039], dtype = "float32")#candidate|12805|(312,)|const|float32
const_12806 = relay.const([-10,-5,9,-2,-9,5,-2,-6,6,2,-3,8,4,6,-8,-7,9,1,-1,6,-8,2,5,-10,1,-4,5,-6,8,10,-9,6,-9,6,10,10,5,7,-9,1,-1,6,7,-6,4,-2,-3,10,3,-1,-10,-2,-4,-6,-6,-5,-2,-4,5,-7,-7,3,-5,-3,-9,-3,7,3,-4,4,-6,8,10,-10,-3,-3,3,-2,6,-7,10,-5,5,10,-7,-1,1,-2,1,-5,8,-7,-1,9,4,6,6,-3,-7,2,5,-8,1,7,-3,-8,-10,2,-2,1,-7,-10,-6,5,5,-9,9,9,9,-3,8,-3,-6,10,-6,-4,7,7,10,-1,1,5,9,-1,-10,1,6,6,9,-10,6,7,1,-1,5,-5,-1,-6,6,1,2,4,7,1,-8,8,-6,-1,8,7,-1,-2,5,-5,7,-7,-9,10,2,2,2,-6,-7,-7,-7,2,9,4,-4,-4,-6,-4,3,3,-3,5,-6,-6,-8,-2,7,6,-8,9,1,6,4,4,-2,-5,3,2,3,-4,1,7,-8,4,-5,-1,-8,-4,5,-2,-5,5,6,-7,7,9,5,-6,3,2,-4,-2,8,-5,-4,-1,3,-6,5,-8,-5,10,5,5,-7,3,10,4,-3,-10,-5,7,8,6,7,8,1,3,8,-3,7,-6,3,-4,10,-7,-8,2,-10,-1,-2,-10,-9,-8,-1,1,9,4,9,10,3,-4,-2,8,7,-8,8,-4,10,-3,-5,10,4,-5,3,2,-3,-8,-3,6,6,10,3,-3,6,-6,2,4,-8,-1,-2,-9,-9,1,-1,-3,2,-3,7,-10,3,5,-9,-3,8,10,-7,7,3,-8,-5,-3,6,6,3,-8,9,4,-4,7,-1,2,-7,5,-6,-6,4,2,7,-5,1,7,-9,-1,7,7,-6,-9,-7,-5,-5,-6,2,1,5,2,-1,9,1,5,10,10,-10,-1,1,-3,-6,-9,8,-2,8,-10,-4,-9,9,-6,5,-6,-3,5,2,-2,7,-9,-1,-8,6,8,-7,6,10,-8,8,-3,1,-6,-3,3,10,-5,-4,10,2,-9,-4,6,9,-10,-8,-9,-8,-3,-3,-3,10,-2,4,4,9,-3,-10,-6,3,-7,6,9,1,8,-8,-5,-10,3,-10,-8,-2,-3,-1,3,-4,6,-6,-5,-9,-1,6,7,4,2,9,-4,-2,-5,-5,-1,-9,-10,-4,-2,-9,-1,-10,1,-8,-7,-2,10,-7,10,-3,10,10,5,-4,-6,-1,-8,-5,4,-3,-4,1,10,9,1,-3,-4,-10,6,7,8,10,8,6,-1,-10,-3,-9,10,-7,1,-3,-4,3,8,3,-7,-4,10,-4,9,6,-8,9,2,-10,-5,-6,-5,-8,-9,9,-7,9,-4,-8,1,-7,6,7,-9,1,-8,-4,5,6,-6,-10,-1,-8,-5,8,-10,-3,8,-4,-6,2,3,-9,-9,-4,1,5,4,6,10,5,8,6,-7,4,5,-7,3,9,-10,-4,7,-4,-5,-2,6,-6,-5,-2,-3,8,-4,8,-1,-7,10,-4,3,9,2,-4,1,3,-10,-10,1,3,-3,3,10,4,3,4,-10,5,-6,-10,-9,-3,-10,-4,-1,8,-1,-5,-1,8,9,-4,-7,-10,-10,-10,-5,-9,-5,8,3,-9,7,5,5,3,-7,4,6,9,-6,4,-1,6,8,-2,-10,-5,-5,4,-4,-5,-2,7,4,-3,-2,-2,3,-8,4,4,-1,10,9,-7,10,4,-4,1,6,8,2,10,2,8,10,-1,-1,8,-6,5,-10,8,-1,-1,5,-4,3,-4,-3,-2,-4,-5,-5,-7,1,-7,-4,-6,5,1,-9,7,-10,-7,-3,8,-4,-6,-10,-10,-6,4,3,2,-5,10,-9,-8,-7,-4,5,-2,6,8,1,-7,-4,-7,-8,8,4,-9,-4,2,1,-4,9,-5,-3,3,10,1,2,4,-6,5,-8,-5,-3,-6,4,-3,7,9,3,-4,-3,-9,-2,5,5,2,-6,6,3,-6,-1,1,8,-7,-4,-6,-7,-2,-7,-9,-6,-6,7,4,5,6,-10,3,6,1,-1,7,-3,9,3,-2,10,-3,-1,6,6,1,10,4,-4,-6,-3,4,-1,5,2,4,5,-6,4,-2,5,-8,7,-1,-8,-9,1,6,8,-7,-7,10,-8,-10,-10,5,-4,-10,-7,-4,-9,8,6,-1,3,3,-9,-2,9,9,4,5,-1,1,-6,-2,7,5,2,-8,-4,-5,-3,-7,-10,-4,-4,-2,-3,-2,-7,-4,-4,8,2,5,6,-8,8,3,-6,2,-7,-3,-9,-9,-1,3,-9,5,8,9,9,-4,5,-5,-6,10,-3,-2,-10,-9,4,-6,4,8,9,-7,-7,5,10,-4,7,8,7,-10,-2,7,4,1,-5,1,8,-4,1,-8,9,5,-4,-4,4,-7,7,-2,-7,9,4,8,10,-7,-1,-1,-5,-6,9,1,6,-10,3,-3,9,-4,6,4,-4,-6,-6,-5,5,-3,1,-8,3,1,-1,8,-10,2,-6,1,-9,-7,6,-7,5,-5,-5,5,-2,4,5,-5,4,-9,6,-10,-9,-10,-1,5,-9,2,5,2,6,-3,7,5,7,-4,6,-8,5,9,6,-9,4,1,-1,-9,8,-1,9,-10,2,9,-2,-2,-4,-10,-4,-7,2,-10,-8,3,10,-3,-10,7,-9,-9,-5,5,-3,-2,-5,7,-5,-4,7,-3,1,-6,-10,-2,-1,-9,3,6,10,3,6,-5,-1,6,-6,3,-6,8,-5,-5,3,-3,-10,4,-8,5,9,5,-9,-7,1,-2,-10,2,-5,2,-3,-6,-5,-4,9,4,-1,7,-1,5,-4,-6,-9,10,7,4,4,-4,-10,1,-10,-7,-6,-3,1,-7,-6,9,-3,-9,-10], dtype = "uint64")#candidate|12806|(1100,)|const|uint64
call_12804 = relay.TupleGetItem(func_10263_call(relay.reshape(const_12805.astype('float32'), [312,]), relay.reshape(const_12806.astype('uint64'), [1100,]), ), 6)
call_12807 = relay.TupleGetItem(func_10266_call(relay.reshape(const_12805.astype('float32'), [312,]), relay.reshape(const_12806.astype('uint64'), [1100,]), ), 6)
output = relay.Tuple([call_12785,call_12804,const_12805,const_12806,])
output2 = relay.Tuple([call_12786,call_12807,const_12805,const_12806,])
func_12832 = relay.Function([], output)
mod['func_12832'] = func_12832
mod = relay.transform.InferType()(mod)
mutated_mod['func_12832'] = func_12832
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12832_call = mutated_mod.get_global_var('func_12832')
call_12833 = func_12832_call()
output = call_12833
func_12834 = relay.Function([], output)
mutated_mod['func_12834'] = func_12834
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9132_call = mod.get_global_var('func_9132')
func_9133_call = mutated_mod.get_global_var('func_9133')
call_12988 = relay.TupleGetItem(func_9132_call(), 0)
call_12989 = relay.TupleGetItem(func_9133_call(), 0)
const_13008 = relay.const([[[-7.161349,-5.456359,3.801001],[-6.423127,3.919345,8.061338],[3.302958,8.993840,1.170878],[-8.546138,-4.655360,0.136339],[-8.593352,7.053562,-2.144261],[-5.173953,-4.908486,1.825493],[1.536239,-7.977407,-2.967352],[5.180625,4.899222,-6.856051],[8.430911,-6.204769,6.417486],[6.247621,-6.263301,9.015917],[-2.384619,2.176486,-0.371623],[-8.779144,-3.523245,-3.442981],[-6.004901,-4.712941,-2.839618]],[[-0.594351,0.706046,-7.032007],[-2.359611,1.736185,-1.244451],[6.429368,-0.472679,-6.186609],[8.368934,-4.620978,6.830979],[0.626448,7.398304,4.556311],[-5.016735,8.061093,-1.261902],[-4.380773,1.631964,3.294147],[-7.606084,-1.069498,0.248016],[-6.292692,6.875758,0.797989],[9.153141,-9.107517,-8.014803],[1.060820,2.301343,1.656986],[-7.145679,-7.067586,9.979258],[9.232546,8.908380,-5.122558]],[[-9.921883,5.692723,0.111170],[-0.879139,0.715719,0.253727],[-7.332872,-0.587704,4.846927],[6.803059,-5.960702,-5.357114],[5.413664,9.379161,2.410299],[-9.862487,-8.666732,-7.782320],[-6.205461,5.015735,0.418994],[8.372257,2.515823,-3.130037],[0.282833,-7.691748,4.640230],[7.769507,-0.028066,9.782884],[-2.545078,-4.691033,-7.336969],[9.278830,1.613723,-6.888976],[4.499113,7.587264,-4.112907]],[[-5.421733,2.963444,0.144394],[2.249567,-1.435387,8.212390],[9.753323,5.492002,9.645922],[-5.749839,-8.685385,5.143924],[5.864265,-3.627489,3.622622],[-1.229498,4.426503,-5.080476],[-7.685228,6.756110,6.661102],[2.090520,6.313276,-5.481285],[-7.785089,3.872469,3.950062],[8.798415,3.137128,9.163374],[-9.556261,-2.350044,7.489965],[-5.826464,-8.465315,-1.884376],[2.445139,4.693962,-3.558831]],[[5.326227,-9.092810,9.168114],[9.228807,-3.886160,8.654582],[4.127221,3.658300,8.691236],[-3.697595,2.072092,8.710097],[-1.638040,8.351468,2.630739],[-8.778174,-8.347933,4.902672],[-5.850318,-6.970980,-3.095215],[-4.422424,-4.382218,0.556922],[-5.007067,8.711221,6.822212],[-7.231360,9.358316,8.341682],[7.208716,7.328117,-1.082308],[-1.920492,3.309236,-8.862465],[-3.155028,0.607253,-7.638753]],[[-9.534504,-8.895210,-1.286893],[-9.979831,-1.415636,-5.269170],[8.371372,8.171796,0.709848],[9.091835,-7.687536,6.748589],[-6.719183,2.690749,-7.860207],[1.023860,-0.598882,-3.853671],[5.727426,2.429247,5.507293],[0.006029,-2.468279,4.505090],[-2.941657,3.912815,-7.306742],[1.817896,-6.257057,-4.532971],[5.142418,0.824496,-6.236384],[-0.321205,-1.766387,7.232734],[-4.052692,-8.794159,3.123728]],[[-7.869377,5.584338,-1.614643],[-8.774048,-2.993340,-5.064561],[1.462684,-5.144602,5.879488],[7.074595,-1.065372,-6.785666],[3.209941,-3.514890,3.336098],[4.552278,-6.968550,4.477405],[-4.512609,-2.468787,-7.076450],[-0.907177,-1.355985,-9.083014],[3.060400,-7.125268,9.307644],[9.962758,3.603137,9.526656],[8.434715,-8.484879,7.904169],[-2.433578,-9.187490,-7.386861],[3.086693,-1.556229,-0.725382]],[[8.007814,-9.289825,6.882390],[-0.512744,-1.722333,5.089201],[-5.279410,1.751187,-5.949861],[-5.676476,-6.188202,0.633711],[4.078588,0.057068,6.729519],[-0.319039,2.654651,-4.775783],[4.107661,6.433505,-1.228259],[8.804346,2.833750,2.833972],[0.288737,-9.873970,-9.411777],[-5.314870,-9.980619,-8.596694],[1.489561,0.386807,8.526731],[-2.304856,-7.718541,8.315266],[-0.739422,-1.085567,4.099161]],[[5.362381,0.909878,-0.491241],[7.059845,-5.286538,6.108324],[9.238222,9.275867,6.122957],[-7.210675,2.556652,-1.845805],[7.020989,4.673756,-3.325421],[-2.438925,7.817738,-3.293426],[4.056730,3.368592,6.318856],[-2.051698,9.203674,2.139586],[0.407998,-2.110866,6.237847],[0.338603,3.927915,-9.209048],[7.771256,9.524868,-2.454154],[-5.137523,-1.588971,8.067346],[-1.613470,-0.585212,-6.853345]],[[2.772404,-4.298600,-8.634590],[-9.105495,-5.888260,2.029982],[8.242166,9.341184,7.370962],[-7.742492,-7.608342,6.809913],[3.772270,8.008688,-9.351928],[3.120796,5.795825,6.917570],[8.155792,8.271896,-0.085201],[-1.164360,4.570660,-7.300538],[-6.098976,9.769447,6.851993],[-7.569973,-9.453822,6.350054],[7.150431,-6.994586,-9.478779],[9.833145,2.929039,7.835983],[6.377261,-1.863393,-6.334964]],[[3.664474,7.726560,3.089081],[-5.558098,6.698972,6.029948],[3.054723,-4.319871,-6.811377],[8.603750,-6.617618,-3.253753],[-9.859889,-5.065209,6.724562],[-9.549572,6.356928,2.653356],[-4.804806,-3.927042,-9.671122],[-2.832835,2.488621,-9.887135],[0.707643,7.702311,-9.798361],[-2.938630,2.822956,4.943121],[5.629563,1.160799,-6.304154],[9.681721,-6.433392,-5.035013],[2.161383,-5.752906,3.102809]],[[-6.581426,2.564399,6.962726],[-0.655912,-4.748121,-2.499127],[-1.288639,8.796832,-1.595607],[-2.014694,1.746607,2.517271],[0.317087,-0.494359,7.620533],[-7.296077,7.913563,9.901576],[-7.810218,-9.243099,4.066074],[-0.685858,-9.765896,-5.526289],[6.791448,-2.828583,1.857202],[1.853929,-0.843779,1.952388],[9.778070,-1.023839,7.492496],[8.003385,7.932307,-0.339283],[-7.534122,-6.029071,8.351713]],[[1.259111,0.458054,7.546109],[-3.083700,4.278948,-3.166766],[-8.448636,1.834965,-8.674409],[5.970678,-1.306970,8.337705],[1.219228,5.732129,-0.172340],[-3.303284,-3.338456,1.708736],[7.923900,-9.650135,6.419015],[3.149595,-2.205655,-0.337628],[5.773296,3.896206,-8.058276],[-5.865766,-1.859857,0.907924],[-7.921213,5.112768,1.852499],[-6.730800,-4.233667,9.656204],[-3.306366,9.915388,7.539586]],[[0.074456,0.594086,-8.469009],[-2.315691,-6.823150,3.899382],[6.948297,6.932552,-8.528506],[-4.355971,9.956089,9.693242],[-0.620739,1.304750,-6.118127],[0.405487,8.412634,-6.276836],[-1.758242,1.718891,-1.293400],[-5.870696,-7.690755,-3.926370],[-0.368216,-2.063867,4.133907],[-5.120316,6.384324,5.780122],[1.751592,1.956362,-8.197433],[-1.720626,-7.034037,5.288515],[-4.441513,2.284298,6.566106]],[[7.347798,-6.184332,-2.642666],[8.888189,3.144104,-4.655969],[1.199090,2.988906,4.196346],[-4.611667,-0.232362,2.421115],[5.564115,9.821968,-2.656787],[-8.989768,-2.237683,0.462279],[-6.688637,5.650597,0.748734],[2.534227,9.969780,-4.536733],[-6.979168,1.350327,9.214460],[-3.905126,-5.214376,2.795926],[-8.486246,3.917086,-5.191238],[9.276091,9.910948,-8.469735],[6.834309,8.059718,-2.468534]]], dtype = "float32")#candidate|13008|(15, 13, 3)|const|float32
bop_13009 = relay.add(call_12988.astype('uint16'), relay.reshape(const_13008.astype('uint16'), relay.shape_of(call_12988))) # shape=(15, 13, 3)
bop_13012 = relay.add(call_12989.astype('uint16'), relay.reshape(const_13008.astype('uint16'), relay.shape_of(call_12989))) # shape=(15, 13, 3)
func_10563_call = mod.get_global_var('func_10563')
func_10564_call = mutated_mod.get_global_var('func_10564')
call_13029 = func_10563_call()
call_13030 = func_10563_call()
output = relay.Tuple([bop_13009,call_13029,])
output2 = relay.Tuple([bop_13012,call_13030,])
func_13039 = relay.Function([], output)
mod['func_13039'] = func_13039
mod = relay.transform.InferType()(mod)
mutated_mod['func_13039'] = func_13039
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13039_call = mutated_mod.get_global_var('func_13039')
call_13040 = func_13039_call()
output = call_13040
func_13041 = relay.Function([], output)
mutated_mod['func_13041'] = func_13041
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8760_call = mod.get_global_var('func_8760')
func_8761_call = mutated_mod.get_global_var('func_8761')
call_13059 = relay.TupleGetItem(func_8760_call(), 0)
call_13060 = relay.TupleGetItem(func_8761_call(), 0)
func_10818_call = mod.get_global_var('func_10818')
func_10820_call = mutated_mod.get_global_var('func_10820')
const_13062 = relay.const([1.532618,7.176689,7.550387,-4.907058,-9.359332,-4.645109,-9.011361,0.601135,0.992987,2.043952,-8.192465,8.060884,-9.365049,-9.316701,3.877457,6.213959,0.860319,-0.624947,-1.996379,-7.414759,6.463860,4.485162,-1.267724,-4.276348,9.102606,-2.867855,5.091524,3.280262,0.718525,-5.200051,-0.418609,5.791465,-5.989170,2.498822,5.443010,4.564109,-9.662128,-2.422271,-4.608208,-3.641088,-1.145433,0.214320,-5.737310,6.366192,-2.204583,5.264251,-2.517002,-1.126030,-4.543590,6.518863,-1.602264,-6.815994,2.672501,4.762329,4.727124,6.692403,9.382950,-8.494407,-3.373050,4.096553,2.019775,5.116341,6.812142,-8.925049,2.506208,9.804779,-8.476765,-1.279532,-3.650265,5.760658,4.308518,5.675413,7.571212,2.378019,-7.811645,1.466431,0.772709,5.943691,-1.824519,-2.143276,7.894958,1.394846,9.617865,7.503751,-3.455208,-6.988200,-3.134097,-8.427047,0.852078,8.750852,-0.439743,2.962891,0.839621,-9.962758,-7.262328,-9.845157,9.858979,9.836635,1.734423,-9.269608,-7.059446,-5.651078,3.102869,-0.998157,-1.965048,-1.728232,-9.011414,-5.017325,-4.345343,-4.120530,7.578400,-0.569716,-1.031457,7.185517,-3.254342,7.684361,-0.437725,8.139005,-7.410065,-3.846356,4.074934,0.383537,-9.827693,-2.175816,8.247215,9.090903,1.461511,0.510666,-9.362305,8.363325,-8.181084,0.615952,-8.172661,-7.377721,-1.215136,2.618277,9.496852,-2.330431,-1.268940,-4.054795,0.141002,-7.959112,8.380207,-5.548208,4.785116,5.543258,3.430377,-7.908774,5.843733,-6.551770,-8.279396,-0.820635,3.027033,6.555909,0.502299,2.047681,-5.476994,6.079487,1.956477,7.547016,0.004830,-5.494678,0.351360,2.080555,-4.042987,-7.016233,4.828105,-3.635649,5.229696,1.128872,-5.242259,0.750181,-6.235557,-3.877220,5.865223,-2.031422,-6.622528,0.063727,-5.511647,0.756760,-4.642218,0.253090,-8.663097,-1.521945,9.801147,-3.711599,-7.047119,-3.141742,-8.203834,-4.209966,-2.264072,-7.617022,-5.752375,-2.577492,-3.691147,0.217160,-6.233618,7.312195,-3.261912,-0.819962,5.307904,2.812251,3.669574,-1.545702,4.331016,5.101467,-7.343158,-4.704136,3.361042,0.427516,-1.887598,-4.161892,3.952985,9.856508,-7.081714,7.390003,-4.302454,0.845258,0.982015,8.311774,1.920668,-0.350983,6.275904,-1.463457,-0.746096,-0.119097,-1.212317,2.956334,-4.431319,8.304296,-1.393513,-6.284424,-7.586015,-3.585884,-9.674660,-0.529095,-5.830589,3.150038,4.203624,-7.728197,4.886112,6.971440,-2.668207,3.490501,1.184080,2.562641,7.984588,7.499668,7.230694,5.781684,9.938818,6.243594,7.050123,7.434007,-7.564972,-6.063767,6.201274,3.220418,-7.484186,-0.593209,-7.222297,1.512640,-5.283307,4.379189,6.223254,1.864021,-0.444937,-1.720859,0.850441,-9.107383,-5.842003,9.835904,-6.077979,7.631129,8.644930,9.325109,2.373151,7.644429,9.064914,7.235411,-1.135228,1.822817,-3.703029,-4.539679,-5.124911,7.761458,2.196426,-2.501359,-2.780190,-9.648358,5.532552,2.108558,-7.194579,-3.227600,3.139840,-2.475053,-5.318685,-0.962795,-6.100486,-6.696074,4.581505,4.715530,-0.545151,6.477740,6.613906,-5.295024,5.577303,8.757879,9.156682,1.168473,7.991684,-2.380289,1.859117,-6.982117,2.435733,-1.517487,8.987149,3.082719,9.096276,-2.607017,-1.537849,-2.825803,-1.896159,5.140642,9.834135,-8.092443,3.686512,8.248059,6.470320,-0.422771,-0.484988,8.772212,-4.657466,-7.592752,9.751514,-7.465022,9.257852,9.382932,-6.367870,0.653072,5.947368,-5.685357,-4.238427,-5.123897,-5.917872,-5.331500,2.664693,-5.546575,-6.427839,-5.322453,1.702042,1.472837,2.434677,-7.088427,-1.253520,0.650472,0.905572,-7.384416,9.606889,1.957154,2.395336,0.425439,9.270754,-7.689213,-6.612260,-9.223451,8.687340,-9.677301,-0.829813,-3.675599,1.430509,5.868572,0.571782,-9.083688,-3.002485,-1.136140,-4.987016,-3.427177,4.504641,9.886669,5.884933,4.875870,-9.129342,4.726395,-6.705400,3.310837,-9.179529,-7.938390,-9.340845,-4.532881,-0.350685,-2.633353,-5.577786,5.362203,5.445041,0.104448,-9.937582,8.675109,8.179433,7.498083,-2.267931,8.361627,4.814788,-9.198026,-4.565830,-0.016368,-6.890442,2.934694,-4.098914,-5.684087,-1.461553,-7.287045,6.089095,8.704769,5.572319,-9.279752,2.539906,-5.769371,-8.805291,-4.917272,2.312530,4.048384,4.616803,5.359117,7.104638,9.345358,7.325525,-0.250426,6.550380,5.891597,8.813797,-7.744123,7.705791,3.713645,6.918028,8.176692,1.152537,-6.853549,5.484389,-7.488611,-8.848909,-1.093164,1.132393,-1.902926,-4.559278,3.131882,0.630998,-1.814827,-0.679594,-3.800611,1.882622,8.858080,1.057298,5.094073,5.492255,8.468733,9.067410,5.165132,2.920938,3.837165,-4.172926,9.780811,-0.231964,-8.937949,4.069225,8.007030,-0.792937,2.489831,-0.785227,0.086956,-4.980910,2.164356,-5.330209,6.777737,-3.488662,-5.205765,6.767825,2.575544,6.820341,1.838956,-4.533912,-6.119850,6.015168,-1.254077,-7.164285,9.269843,5.225171,0.514320,2.612600,0.077923,0.404989,-0.977588,5.829042,1.572379,-6.925528,9.162911,4.090915,1.954198,-4.272617,-3.627001,7.790886,2.753831,1.441306,9.990432,6.277750,-7.974813,-8.154738,-4.477852,-0.412287,-3.971550,-6.679022,-4.203313,7.743815,-6.289136,2.511052,3.553341,-9.828676,8.003135,1.083588,-4.275560,8.964575,5.636595,-8.027978,9.702034,4.692386,0.889318,-9.555966,2.214993,9.238732,8.808979,1.383377,-3.730830,9.474363,6.588765,-1.467017,-3.841229,-8.648462,1.008940,7.354686,-6.465765,-4.562474,-7.729753,9.572408,2.241946,6.226243,9.625531,6.206101,-1.232577,-4.852663,9.048733,9.495961,-4.759540,8.714565,-1.076935,9.438867,-9.768772,-1.394281,-1.154205,-4.281658,8.872699,-7.565033,-5.321176,-2.113171,-6.630956,-6.993036,8.602916,5.426917,-7.842201,6.335124,5.099704,3.171879,-3.181431,-5.501494,3.132252,-5.174134,-6.019325,3.041231,-2.519673,4.656267,-3.073385,-0.891328,-3.997526,-2.885655,9.381407,5.750376,-0.552543,-9.647361,9.107916,9.361507,3.603210,1.506046,-5.637252,1.754116,-0.611861,7.030997,-5.886270,-7.659418,-5.248931,7.316847,-6.624773,-7.986338,1.403278,5.374074,-6.100561,9.464583], dtype = "float64")#candidate|13062|(605,)|const|float64
call_13061 = relay.TupleGetItem(func_10818_call(relay.reshape(const_13062.astype('float64'), [605,])), 2)
call_13063 = relay.TupleGetItem(func_10820_call(relay.reshape(const_13062.astype('float64'), [605,])), 2)
output = relay.Tuple([call_13059,call_13061,const_13062,])
output2 = relay.Tuple([call_13060,call_13063,const_13062,])
func_13070 = relay.Function([], output)
mod['func_13070'] = func_13070
mod = relay.transform.InferType()(mod)
output = func_13070()
func_13071 = relay.Function([], output)
mutated_mod['func_13071'] = func_13071
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11621_call = mod.get_global_var('func_11621')
func_11623_call = mutated_mod.get_global_var('func_11623')
call_13171 = relay.TupleGetItem(func_11621_call(), 0)
call_13172 = relay.TupleGetItem(func_11623_call(), 0)
output = relay.Tuple([call_13171,])
output2 = relay.Tuple([call_13172,])
func_13179 = relay.Function([], output)
mod['func_13179'] = func_13179
mod = relay.transform.InferType()(mod)
output = func_13179()
func_13180 = relay.Function([], output)
mutated_mod['func_13180'] = func_13180
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12495_call = mod.get_global_var('func_12495')
func_12496_call = mutated_mod.get_global_var('func_12496')
call_13206 = func_12495_call()
call_13207 = func_12495_call()
output = call_13206
output2 = call_13207
func_13222 = relay.Function([], output)
mod['func_13222'] = func_13222
mod = relay.transform.InferType()(mod)
mutated_mod['func_13222'] = func_13222
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13222_call = mutated_mod.get_global_var('func_13222')
call_13223 = func_13222_call()
output = call_13223
func_13224 = relay.Function([], output)
mutated_mod['func_13224'] = func_13224
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10123_call = mod.get_global_var('func_10123')
func_10125_call = mutated_mod.get_global_var('func_10125')
call_13260 = relay.TupleGetItem(func_10123_call(), 0)
call_13261 = relay.TupleGetItem(func_10125_call(), 0)
var_13264 = relay.var("var_13264", dtype = "float32", shape = (13, 10, 13))#candidate|13264|(13, 10, 13)|var|float32
bop_13265 = relay.divide(call_13260.astype('float32'), relay.reshape(var_13264.astype('float32'), relay.shape_of(call_13260))) # shape=(13, 10, 13)
bop_13268 = relay.divide(call_13261.astype('float32'), relay.reshape(var_13264.astype('float32'), relay.shape_of(call_13261))) # shape=(13, 10, 13)
output = relay.Tuple([bop_13265,])
output2 = relay.Tuple([bop_13268,])
func_13282 = relay.Function([var_13264,], output)
mod['func_13282'] = func_13282
mod = relay.transform.InferType()(mod)
var_13283 = relay.var("var_13283", dtype = "float32", shape = (13, 10, 13))#candidate|13283|(13, 10, 13)|var|float32
output = func_13282(var_13283)
func_13284 = relay.Function([var_13283], output)
mutated_mod['func_13284'] = func_13284
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9339_call = mod.get_global_var('func_9339')
func_9340_call = mutated_mod.get_global_var('func_9340')
call_13311 = relay.TupleGetItem(func_9339_call(), 0)
call_13312 = relay.TupleGetItem(func_9340_call(), 0)
func_5666_call = mod.get_global_var('func_5666')
func_5670_call = mutated_mod.get_global_var('func_5670')
const_13327 = relay.const(10, dtype = "uint64")#candidate|13327|()|const|uint64
var_13328 = relay.var("var_13328", dtype = "uint64", shape = (990,))#candidate|13328|(990,)|var|uint64
call_13326 = relay.TupleGetItem(func_5666_call(relay.reshape(const_13327.astype('uint64'), []), relay.reshape(var_13328.astype('uint64'), [11, 10, 9]), ), 0)
call_13329 = relay.TupleGetItem(func_5670_call(relay.reshape(const_13327.astype('uint64'), []), relay.reshape(var_13328.astype('uint64'), [11, 10, 9]), ), 0)
func_9998_call = mod.get_global_var('func_9998')
func_10002_call = mutated_mod.get_global_var('func_10002')
const_13334 = relay.const([-1.869756,-6.184515,-2.922893,6.536085,9.554101,-6.150019,-6.815111,5.919927,-8.226041,-8.508366,1.556925,4.769848,4.133819,-2.525608,6.219060,-8.467679,8.643494,-3.871969,-0.151901,-6.616927,9.988674,-0.737277,-7.324787,-8.532254,-5.032607,3.425584,9.709986,1.516401,-0.189364,-1.718980,-4.384260,9.259967,5.025606,5.503018,6.852305,4.880314,-7.958453,-4.842813,3.186360,9.959459,0.484196,0.183953], dtype = "float32")#candidate|13334|(42,)|const|float32
var_13335 = relay.var("var_13335", dtype = "float32", shape = (704,))#candidate|13335|(704,)|var|float32
call_13333 = relay.TupleGetItem(func_9998_call(relay.reshape(const_13334.astype('float32'), [7, 2, 3]), relay.reshape(var_13335.astype('float32'), [704,]), ), 3)
call_13336 = relay.TupleGetItem(func_10002_call(relay.reshape(const_13334.astype('float32'), [7, 2, 3]), relay.reshape(var_13335.astype('float32'), [704,]), ), 3)
output = relay.Tuple([call_13311,call_13326,const_13327,var_13328,call_13333,const_13334,var_13335,])
output2 = relay.Tuple([call_13312,call_13329,const_13327,var_13328,call_13336,const_13334,var_13335,])
func_13340 = relay.Function([var_13328,var_13335,], output)
mod['func_13340'] = func_13340
mod = relay.transform.InferType()(mod)
mutated_mod['func_13340'] = func_13340
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13340_call = mutated_mod.get_global_var('func_13340')
var_13342 = relay.var("var_13342", dtype = "uint64", shape = (990,))#candidate|13342|(990,)|var|uint64
var_13343 = relay.var("var_13343", dtype = "float32", shape = (704,))#candidate|13343|(704,)|var|float32
call_13341 = func_13340_call(var_13342,var_13343,)
output = call_13341
func_13344 = relay.Function([var_13342,var_13343,], output)
mutated_mod['func_13344'] = func_13344
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11695_call = mod.get_global_var('func_11695')
func_11696_call = mutated_mod.get_global_var('func_11696')
call_13365 = relay.TupleGetItem(func_11695_call(), 2)
call_13366 = relay.TupleGetItem(func_11696_call(), 2)
func_8274_call = mod.get_global_var('func_8274')
func_8276_call = mutated_mod.get_global_var('func_8276')
call_13368 = func_8274_call()
call_13369 = func_8274_call()
func_8965_call = mod.get_global_var('func_8965')
func_8969_call = mutated_mod.get_global_var('func_8969')
const_13378 = relay.const([-2,-7,-5,5,-2,10,8,8,6,-10,-7,1,-1,9,-2,3,3,6,5,-3,-6,6,10,-9,5,1,8,-7,-9,-6,-1,7,-9,3,4,2,1,-6,-3,7,4,-7,-4,-3,3,5,8,-9,5,-10,1,9,-9,3,9,7,-2,8,-3,8,-10,-1,3,5,3,6,-7,-6,-9,-8,10,2,4,-7,-10,-10,-8,-9,10,-8,1,-8,9,7,-2,-6,2,6,9,10,10,10,-2,8,6,6,-10,-8,-8,-8,-9,7,-2,5,8,-1,-7,6,-1,-3,8,4,4,10,-4,4,-1,-5,4,2,-7,-10,-3,6,-9,-1,-8,9,-7,-6,5,4,-1,-9,-1,6,-6,-4,3,5,1,-2,-2,-3,-2,-2,8,-3,7,3,6,5,6,-3,3,4,7,-5,1,-10,8,7,7,5,5,1,-7,-1,8,-5,-3,7,7,9,-3,-8,-10,-8,-9,3,3,3,-10,5,10,3,1,5,3,7,-4,6,3,3,9,6,-9,1,5,9,8,-3,1,6,-2,1,-9,10,-1,2,8,-9,6,8,8,9,9,-2,9,-8,2,-7,-6,-10,1,-6,-9,7,7,-9,3,8,1,4,-9,-1,2,1,-4,-5,-5,5,8,-1,7,9,-9,2,8,-10,-10,9,8,10,-2,-6,-5,-1,2,7,2,-9,-2,3,-7,-8,-5,-1,-8,-4,5,5,2,3,8,5,-4,2,-3,8,1,1,7,-8,2,-5], dtype = "uint64")#candidate|13378|(286,)|const|uint64
const_13379 = relay.const([-0.454084,-6.732330,-9.276521,-7.547495,8.179124,8.734095,7.879111,3.166696,3.431326,-5.498379,-3.498857,8.101838,-3.120318,3.839015,-2.359618,0.136705,1.104401,5.323011,-3.216849,3.758931,3.416436,-6.025325,2.375750,4.118505,9.625919,-7.959413,5.494776,-4.354175,3.995482,-1.918909,6.944876,5.333704,1.578757,-6.548985,-5.205494,9.788055,9.812609,-6.935489,-6.757230,5.932192,1.202159,0.362678,4.470903,9.915279,7.210199,8.586343,1.302295,-8.304277,9.251722,-1.434982,-0.329104,4.767563,2.193406,2.784484,1.983692,-2.153693,-4.786285,-8.803422,4.563018,7.246456,8.285706,6.170286,1.769485,6.995988,-3.642585,-6.532728,-7.059294,-8.440497,-7.238632,7.429561,6.664767,-2.286443,2.177856,0.435170,-4.859437,-9.114342,1.121443,4.855148,5.860880,3.949008,-1.024776,-1.759831,-1.087951,7.486842,-2.800734,-2.248637,-1.012017,-3.998046,9.100089,-0.881983,-6.352647,4.790771,-8.307781,-1.272416,-7.285532,3.361448,3.630989,8.561438,4.183538,-9.888725,0.615349,6.593366,-0.799686,1.862859,5.529333,4.607949,-9.885670,-6.528103,9.853230,-5.652297,-6.532191,2.541650,-9.133549,2.795702,6.600789,6.538727,3.126586,-8.662649,-3.282490,0.634281], dtype = "float64")#candidate|13379|(120,)|const|float64
const_13380 = relay.const([-5.939018,-5.005064,-3.604927,7.401280,-1.925127,3.855915,8.737790,-2.028939,-4.058558,1.689987,-9.378179,8.863236,8.406179,2.796332,-9.806377,4.812676,-6.285026,-6.866845,-6.651407,5.397272,-3.241144,9.851623,-4.435455,-4.470978,-7.077427,-0.703487,8.568656,2.186507,-4.031624,6.486118,-4.197547,3.310822,-2.048142,0.984909,7.574020,-5.160806,5.139068,2.328601,2.594639,7.336302,8.289173,1.033511,8.578815,-1.092613,0.177869,-1.013748,-3.210220,-4.687139,-3.540091,3.815158,-7.238718,3.849779,-3.409497,0.482627,5.322512,2.312563,-9.809970,6.178886,5.493163,-5.283183,-7.900686,-3.656637,-9.902449,0.423540,4.587713,5.604307,-9.842332,8.385322,5.432680,0.783204,7.873891,-6.740687,5.977118,-2.144368,0.225245,5.582753,0.381325,-9.875543,-0.721065,-7.373244,-6.696118,9.530097,8.566477,6.015170,-1.536390,5.757554,8.826595,3.302546,7.628765,-5.453753,-3.485377,-3.887587,6.237549,-6.694962,8.716990,3.077161,-1.889212,-7.082813,-4.383959,-4.713237,-8.384191,-7.324145,5.240366,-9.678992,3.368528,7.772090,-6.728531,-8.615599,-4.528899,4.875857,0.963703,-5.311993,-4.007205,1.240846,-2.004820,5.518078,2.580336,2.177686,3.751960,-3.392477,-0.647817,7.531155,4.074979,-2.781741,-9.880328,9.838901,4.707567,9.152098,3.537946,-1.570379,-1.764473,-1.589457,0.244494,7.186991,-5.308746,-7.244400,1.379994,8.906806,2.159297,5.831571,-8.662572,3.527817,-4.134989,3.091598,-4.835843,5.698390,4.010316,-3.928824,6.985815,6.407997,7.573063,-3.965977,5.952709,-2.140679,-6.568070,-2.604175,-3.288846,-0.968579,-3.470771,-4.184388,6.776410,-1.136058,-0.721686,4.577752,-1.247923,1.732578,-5.389785,-4.891698,7.667914,-6.189327,-6.020476,-6.934033,1.089356,2.563716,-1.326231,-9.585943,-7.563041,-6.061972,1.411730,-6.717695,4.749933,-7.327710,-9.179328,4.274645,0.574183,7.114542,1.047593,-2.059021,-0.576171,-0.248471,-7.822638,-4.097809,7.833124,6.756256,-6.475969,-7.893794,3.389858,-0.607860,-5.353665,1.004531,6.128990,5.192803,8.252591,9.986164,-3.954641,-2.374565,-9.510904,9.356669,-8.769278,4.031956,-2.662655,-1.106404,-7.323366,2.222442,-0.633354,-9.734566,4.652772,-7.085251,5.032111,-5.387188,-1.323999,-2.059459,2.063467,-4.456989,-3.896668,3.042009,-4.220071,-4.399275,-6.752850,6.594212,9.829073,-6.563077,9.384897,2.714965,4.979258,-2.854798,-2.976022,-3.714055,-3.374567,1.183133,-2.049941,-9.828147,-5.942713,8.049596,-8.779382,-3.759537,-4.075336,6.072418,0.822053,8.485472,-0.884772,-4.464145,-9.167771,8.794235,-0.494494,-5.089710,6.417544,1.158523,0.445604,-5.807245,7.369723,9.918749,8.076138,9.646708,8.784313,7.677176,5.669137,9.251762,8.772062,-3.082035,6.786334,-7.431396,0.625274,8.350256,3.973645,0.103633,-1.163888,-5.355523,2.686326,-9.037865,-3.770666,-7.926184,-0.790144,-4.261574,-9.728437,9.507136,9.077320,-1.332750,2.917928,2.987480,5.737725,1.565177,-8.677903,-0.726237,5.150169,-8.242292,-2.914953,6.289679,-7.060924,-3.869652,2.133091,3.196995,-3.455632,3.261172,9.031417,-4.011506,1.429081,-9.126921,3.086839,1.752983,0.584477,3.883126,2.737574,-6.063436,-4.825254,-3.749208,-4.536118,-6.530905,-0.174055,-5.133688,-4.616366,-7.622896,-5.432128,4.841029,7.193668,0.324035,3.174807,1.819031,7.239078,-4.281176,-2.001538,5.934060,-8.237507,5.888473,-9.628568,-0.752681,-6.741940,-1.072215,7.344554,8.999095,8.284735,-1.841541,7.534169,7.381914,0.734365,-4.067129,-2.450302,2.909772,8.060073,6.159855,-4.562898,-2.601013,9.628436,-1.836354,6.279587,8.756785,-4.030056,1.688693,9.603343,-1.180410,-2.974361,3.063785,9.914319,-1.419908,3.771210,-3.798407,1.965824,7.191900,1.091924,-6.974991,7.447840,8.253362,7.585556,6.638224,0.553273,8.486836,-0.341337,4.639318,7.629137,-1.801935,8.628373,8.944997,2.887580,7.251845,-7.327516,0.979317,-2.540252,4.136220,9.612338,-0.581509,-7.654523,0.916177,-2.838482,-9.309691,-8.617237,5.891928,1.610218,-2.982744,1.382096,-1.872062,5.477232,2.176295,-4.484371,3.221979,9.535907,5.120903,-6.872698,-5.727429,4.046406,-9.662169,6.434546,8.678337,-0.792745,3.111195,-5.712080,7.731943,-7.104941,7.432869,8.120965,-7.317018,-2.970148,8.195193,-2.563439,-0.257112,-3.761159,2.165872,-6.060214,4.945379,8.961030,-3.134882,-0.548568,0.457707,-7.559833,1.870752,-6.192091,-2.611954,9.811157,8.206524,6.914438,1.651912,-9.369601,7.110171,-7.074325,-4.581651,4.751259,6.287140,-9.355440,-7.520526,8.851165,4.249448,-7.491124,-1.033591,0.205674,9.997266,4.571970,-9.462552,-4.792091,-0.868097,-0.367474,-8.833629,7.965365,6.042234,-2.078750,-2.148484,-0.360802,1.561275,1.859654,-5.754463,8.686469,8.460536,8.392974,7.557794,3.552660,-9.686527,-2.430026,-0.164173,-8.770987,3.036530,5.099767,-7.005708,3.995426,-3.914508,0.156133,1.277542,5.488356,-5.148453,7.797113,-3.296283,2.427211,-5.476906,6.644911,-3.084458,2.873122,-2.156659,3.011402,-0.787752,8.371125,-8.791483,8.779945,0.759780,-9.913728,3.773399,6.603067,3.159051,-9.525181,-7.380891,-4.096407,0.644426,1.178012,-6.987105,-5.861656,5.910874,-4.910833,5.608953,-2.531542,-4.973542,-9.932183,-0.384119,9.318742,-8.711828,4.441746,1.250043,7.917808,7.255344,-9.849436,-9.027965,-2.001885,-7.225137,8.113288,3.828976,6.886509,-2.530508,7.609533,6.432790,-0.946478,3.190019,6.717961,0.462981,9.987913,5.809076,9.419483,9.851364,4.291970,-6.566846,5.594516,-8.037788,7.034492,-1.806792,7.254546,6.500203,2.392277,-0.501602,1.450689,-3.314068,-8.566362,-0.941533,4.869865,-9.281227,-2.679904,9.482018,-7.207847,-5.942683,-4.612667,-5.666594,-3.682511,-5.260612,-2.599046,-4.110696,-0.277906,0.649856,-0.342916,-0.066823,8.625653,4.256318,5.659028,6.414046,-8.855927,6.898362,-9.034332,5.029926,9.740370,-2.916815,-0.701110,3.003075,5.247235,9.697109,2.132745,4.924347,-3.523942,-4.835609,0.676751,0.991530,6.164546,7.893101,9.115910,-3.570562,-4.255921,-6.668614,-9.589565,1.864991,-5.299400,6.151370,2.455227,-0.746789,6.731260], dtype = "float64")#candidate|13380|(605,)|const|float64
call_13377 = relay.TupleGetItem(func_8965_call(relay.reshape(const_13378.astype('uint64'), [286,]), relay.reshape(const_13379.astype('float64'), [120,]), relay.reshape(const_13380.astype('float64'), [605,]), ), 4)
call_13381 = relay.TupleGetItem(func_8969_call(relay.reshape(const_13378.astype('uint64'), [286,]), relay.reshape(const_13379.astype('float64'), [120,]), relay.reshape(const_13380.astype('float64'), [605,]), ), 4)
uop_13382 = relay.cosh(call_13368.astype('float32')) # shape=(5, 2, 5)
uop_13384 = relay.cosh(call_13369.astype('float32')) # shape=(5, 2, 5)
func_10536_call = mod.get_global_var('func_10536')
func_10540_call = mutated_mod.get_global_var('func_10540')
var_13388 = relay.var("var_13388", dtype = "int32", shape = (224,))#candidate|13388|(224,)|var|int32
call_13387 = relay.TupleGetItem(func_10536_call(relay.reshape(var_13388.astype('int32'), [2, 7, 16]), relay.reshape(var_13388.astype('int32'), [2, 7, 16]), ), 1)
call_13389 = relay.TupleGetItem(func_10540_call(relay.reshape(var_13388.astype('int32'), [2, 7, 16]), relay.reshape(var_13388.astype('int32'), [2, 7, 16]), ), 1)
uop_13397 = relay.erf(uop_13382.astype('float64')) # shape=(5, 2, 5)
uop_13399 = relay.erf(uop_13384.astype('float64')) # shape=(5, 2, 5)
func_12495_call = mod.get_global_var('func_12495')
func_12496_call = mutated_mod.get_global_var('func_12496')
call_13401 = func_12495_call()
call_13402 = func_12495_call()
output = relay.Tuple([call_13365,call_13377,const_13378,const_13379,const_13380,call_13387,var_13388,uop_13397,call_13401,])
output2 = relay.Tuple([call_13366,call_13381,const_13378,const_13379,const_13380,call_13389,var_13388,uop_13399,call_13402,])
func_13408 = relay.Function([var_13388,], output)
mod['func_13408'] = func_13408
mod = relay.transform.InferType()(mod)
var_13409 = relay.var("var_13409", dtype = "int32", shape = (224,))#candidate|13409|(224,)|var|int32
output = func_13408(var_13409)
func_13410 = relay.Function([var_13409], output)
mutated_mod['func_13410'] = func_13410
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10424_call = mod.get_global_var('func_10424')
func_10426_call = mutated_mod.get_global_var('func_10426')
call_13457 = relay.TupleGetItem(func_10424_call(), 2)
call_13458 = relay.TupleGetItem(func_10426_call(), 2)
output = call_13457
output2 = call_13458
func_13469 = relay.Function([], output)
mod['func_13469'] = func_13469
mod = relay.transform.InferType()(mod)
mutated_mod['func_13469'] = func_13469
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13469_call = mutated_mod.get_global_var('func_13469')
call_13470 = func_13469_call()
output = call_13470
func_13471 = relay.Function([], output)
mutated_mod['func_13471'] = func_13471
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9223_call = mod.get_global_var('func_9223')
func_9225_call = mutated_mod.get_global_var('func_9225')
call_13511 = relay.TupleGetItem(func_9223_call(), 0)
call_13512 = relay.TupleGetItem(func_9225_call(), 0)
func_11788_call = mod.get_global_var('func_11788')
func_11792_call = mutated_mod.get_global_var('func_11792')
var_13528 = relay.var("var_13528", dtype = "bool", shape = (252,))#candidate|13528|(252,)|var|bool
const_13529 = relay.const([-1,-2,-2,-6,-5,-3,-8,6,-4,-5,-10,-8,10,7,-4,3,-9,-4,5,1,10,2,-4,-5,7,-7,-8,10,-10,2,-5,9,-4,-4,-4,-9,-1,-2,1,5,7,7,-8,5,-1,-10,-4,10,-2,8,-3,8,-10,-1,8,-9,8,2,2,-2,4,9,10,7,6,-6,2,3,6,5,9,-9,-1,-1,-8,-3,-6,10,4,6,5,-8,-5,1,4,5,9,10,-5,-2,-7,-5,9,-7,-7,10,-4,-8,-1,2,6,-1,-1,6,6,-1,3,6,-3,5,-7,-1,5,-1,10,-2,-1,3,5,-8,-7,4,4,4,-2,-5,-3,-1,8,5,-5,6,9,6,1,5,-2,10,8,3,-2,-10,-7,-5], dtype = "uint64")#candidate|13529|(144,)|const|uint64
call_13527 = relay.TupleGetItem(func_11788_call(relay.reshape(var_13528.astype('bool'), [9, 2, 14]), relay.reshape(const_13529.astype('uint64'), [144,]), ), 0)
call_13530 = relay.TupleGetItem(func_11792_call(relay.reshape(var_13528.astype('bool'), [9, 2, 14]), relay.reshape(const_13529.astype('uint64'), [144,]), ), 0)
output = relay.Tuple([call_13511,call_13527,var_13528,const_13529,])
output2 = relay.Tuple([call_13512,call_13530,var_13528,const_13529,])
func_13541 = relay.Function([var_13528,], output)
mod['func_13541'] = func_13541
mod = relay.transform.InferType()(mod)
mutated_mod['func_13541'] = func_13541
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13542 = relay.var("var_13542", dtype = "bool", shape = (252,))#candidate|13542|(252,)|var|bool
func_13541_call = mutated_mod.get_global_var('func_13541')
call_13543 = func_13541_call(var_13542)
output = call_13543
func_13544 = relay.Function([var_13542], output)
mutated_mod['func_13544'] = func_13544
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13584 = relay.var("var_13584", dtype = "float32", shape = (1, 14, 10))#candidate|13584|(1, 14, 10)|var|float32
var_13585 = relay.var("var_13585", dtype = "float32", shape = (12, 14, 10))#candidate|13585|(12, 14, 10)|var|float32
bop_13586 = relay.divide(var_13584.astype('float32'), var_13585.astype('float32')) # shape=(12, 14, 10)
output = bop_13586
output2 = bop_13586
func_13590 = relay.Function([var_13584,var_13585,], output)
mod['func_13590'] = func_13590
mod = relay.transform.InferType()(mod)
mutated_mod['func_13590'] = func_13590
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13590_call = mutated_mod.get_global_var('func_13590')
var_13592 = relay.var("var_13592", dtype = "float32", shape = (1, 14, 10))#candidate|13592|(1, 14, 10)|var|float32
var_13593 = relay.var("var_13593", dtype = "float32", shape = (12, 14, 10))#candidate|13593|(12, 14, 10)|var|float32
call_13591 = func_13590_call(var_13592,var_13593,)
output = call_13591
func_13594 = relay.Function([var_13592,var_13593,], output)
mutated_mod['func_13594'] = func_13594
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8274_call = mod.get_global_var('func_8274')
func_8276_call = mutated_mod.get_global_var('func_8276')
call_13672 = func_8274_call()
call_13673 = func_8274_call()
func_11621_call = mod.get_global_var('func_11621')
func_11623_call = mutated_mod.get_global_var('func_11623')
call_13712 = relay.TupleGetItem(func_11621_call(), 0)
call_13713 = relay.TupleGetItem(func_11623_call(), 0)
func_6556_call = mod.get_global_var('func_6556')
func_6559_call = mutated_mod.get_global_var('func_6559')
var_13750 = relay.var("var_13750", dtype = "float32", shape = (1, 99))#candidate|13750|(1, 99)|var|float32
var_13751 = relay.var("var_13751", dtype = "uint16", shape = (80,))#candidate|13751|(80,)|var|uint16
call_13749 = relay.TupleGetItem(func_6556_call(relay.reshape(var_13750.astype('float32'), [9, 11, 1]), relay.reshape(var_13751.astype('uint16'), [80,]), ), 1)
call_13752 = relay.TupleGetItem(func_6559_call(relay.reshape(var_13750.astype('float32'), [9, 11, 1]), relay.reshape(var_13751.astype('uint16'), [80,]), ), 1)
output = relay.Tuple([call_13672,call_13712,call_13749,var_13750,var_13751,])
output2 = relay.Tuple([call_13673,call_13713,call_13752,var_13750,var_13751,])
func_13756 = relay.Function([var_13750,var_13751,], output)
mod['func_13756'] = func_13756
mod = relay.transform.InferType()(mod)
var_13757 = relay.var("var_13757", dtype = "float32", shape = (1, 99))#candidate|13757|(1, 99)|var|float32
var_13758 = relay.var("var_13758", dtype = "uint16", shape = (80,))#candidate|13758|(80,)|var|uint16
output = func_13756(var_13757,var_13758,)
func_13759 = relay.Function([var_13757,var_13758,], output)
mutated_mod['func_13759'] = func_13759
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11343_call = mod.get_global_var('func_11343')
func_11345_call = mutated_mod.get_global_var('func_11345')
call_13856 = func_11343_call()
call_13857 = func_11343_call()
func_9619_call = mod.get_global_var('func_9619')
func_9621_call = mutated_mod.get_global_var('func_9621')
call_13861 = relay.TupleGetItem(func_9619_call(relay.reshape(call_13856.astype('float64'), [50,])), 3)
call_13862 = relay.TupleGetItem(func_9621_call(relay.reshape(call_13856.astype('float64'), [50,])), 3)
output = relay.Tuple([call_13856,call_13861,])
output2 = relay.Tuple([call_13857,call_13862,])
func_13876 = relay.Function([], output)
mod['func_13876'] = func_13876
mod = relay.transform.InferType()(mod)
mutated_mod['func_13876'] = func_13876
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13876_call = mutated_mod.get_global_var('func_13876')
call_13877 = func_13876_call()
output = call_13877
func_13878 = relay.Function([], output)
mutated_mod['func_13878'] = func_13878
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13039_call = mod.get_global_var('func_13039')
func_13041_call = mutated_mod.get_global_var('func_13041')
call_13884 = relay.TupleGetItem(func_13039_call(), 1)
call_13885 = relay.TupleGetItem(func_13041_call(), 1)
func_10931_call = mod.get_global_var('func_10931')
func_10933_call = mutated_mod.get_global_var('func_10933')
call_13901 = relay.TupleGetItem(func_10931_call(), 0)
call_13902 = relay.TupleGetItem(func_10933_call(), 0)
var_13910 = relay.var("var_13910", dtype = "float64", shape = (11, 12, 6))#candidate|13910|(11, 12, 6)|var|float64
bop_13911 = relay.bitwise_xor(call_13884.astype('uint8'), relay.reshape(var_13910.astype('uint8'), relay.shape_of(call_13884))) # shape=(11, 12, 6)
bop_13914 = relay.bitwise_xor(call_13885.astype('uint8'), relay.reshape(var_13910.astype('uint8'), relay.shape_of(call_13885))) # shape=(11, 12, 6)
output = relay.Tuple([call_13901,bop_13911,])
output2 = relay.Tuple([call_13902,bop_13914,])
func_13928 = relay.Function([var_13910,], output)
mod['func_13928'] = func_13928
mod = relay.transform.InferType()(mod)
var_13929 = relay.var("var_13929", dtype = "float64", shape = (11, 12, 6))#candidate|13929|(11, 12, 6)|var|float64
output = func_13928(var_13929)
func_13930 = relay.Function([var_13929], output)
mutated_mod['func_13930'] = func_13930
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11037_call = mod.get_global_var('func_11037')
func_11038_call = mutated_mod.get_global_var('func_11038')
call_13935 = func_11037_call()
call_13936 = func_11037_call()
func_4004_call = mod.get_global_var('func_4004')
func_4007_call = mutated_mod.get_global_var('func_4007')
const_13947 = relay.const([8,-8,-5,-8,-8,-4,-4,1,-4,8,-4,5,-3,-10,1,-4,-9,1,-7,-6,5,-3,-7,-4,1,-10,-5,8,-8,-8,-2,-7,-7,4,1,-7,2,-7,6,3,5,4,-8,1,3,-6,2,-5,-4,-2,-10,3,-3,-2,4,-8,-9,-1,7,7,-1,-2,-6,3,5,-7,6,-9,-2,8,6,-5,8,-4,-9,-4,3,5,-4,-1,6,6,-10,1,-7,6,-4,-10,10,-9,6,1,-1,9,9,-6,6,6,-8,7,-5,9,-5,-6,-5,-6,-10,10,-5,7,-7,-8,-5,-10,-1,-8,-2,-8,8,-4,8,-5,6,10,-4,-5,9,7,-8,-7,-4,5,-4,4,8,-6,-7,5,-8,-7,1,7,-7,-6,-1,-2,-7,-2,-2,2,2,6,-1,-3,7,3,-3,-10,3,3,-8,-9,-6,4,7,7,4,-1,4,3,-5,1,-7,6,8,5,8,9,-7,1,-8,5,4,6,1,1,-8,-2,5,8,-1,7,9,5,-8,-1,-7,-8,-2,8,6,9,-4,-2,1,2,2,-1,-5,6,3,2,6,10,8,1,-7,-9,-1,10,10,-4,-1,-5,1,2,1,-5,-5,4,3,7,-6,-1,-9,9,-2,4,-9,-10,2,-6,9,7,6,-7,-9,-9,3,1,8,3,-4,3,-8,6,8,-3,3,9,3,8,-2,-4,4,1,7,4,-3,-7,-2,10,-4,5,5,7,-3,8,2,2,-9,-10,9,10,-2,6,9,-4,-9,8,-4,-1,-2,4,-3,1,-1,10,6,-3,-8,-2,7,8,6,1,3,-9,-1,10,-9,-5,2,10,7,4,-4,-10,4,-6,-6,-10,-9,5,-2,-3,5,-1,5,-3,-7,-8,5,4,8,10,7,4,-1,-5,3,3,-5,-5,6,-3,-6,5,-8,1,-1,9,-2,-5,1,5,-7,4,-3,-2,-8,3,5,5,9,9,-8,-7,1,-5,-9,6,1,9,8,4,-8,10,-6,-9,1,-4,-8,1,-10,-10,7,8,6,3,-9,-10,3,-10,-4,-6,7,-8,-1,-4,3,4,10,7,7,1,-6,-3,-10,-2,10,-3,-7,1,8,-9,-9,-3,4,4,2,7,6,-9,-1,-3,8,-7,7,-3,5,-9,4,3,6,9,-3,-7,6,-7,8,7,8,-1,6,-3,5,-3,-6,8,4,-9,4,7,-4,7,6,8,-10,2,-2,-6,9,-7,-6,8,-2,6,-4,6,-9,10,8,3,4,3,2,-4,-9,-9,-7,4,5,5,-4,9,-5,1,4,1,-1,3,-6,-6,9,-9,-4,6,-2,3,4,-9,9,-2,4,-1,10,8,-3,10,-4,6,1,-9,3,-10,4,-7,9,-7,5,-10,4,-10,6,8,-8,-8,-8,-3,-1,-9,-2,7,8,-6,2,9,-6,2,8,10,8,-8,-6,-7,-5,1,5,-1,-2,7,5,-9,-2,2,4,-9,-1,7,7,6,2,-9,5,-1,9,2,-3,-4,5,6,-8,-10,-1,8,-4,-8,-2,-5,-9,6,6,1,-1,4,-10,3,-7,-9,-3,4,3,-4,-1,4,7,7,9,3,-4,8,-9,-4,-6,-5,-3,-6,5,3,-3,7,10,3,3,-1,-3,2,10,10,-2,6,-6,-4,-6,-8,-6,9,10,-5,-6,-1,-5,-2,-3,-4,-9,-10,7,-7,-1,-2,-9,-2,2,3,6,-8,-9,8,5,6,-4,-9,10,-6,3,7,8,1,9,-10,8,-5,-10,-8,7,-7,10,-4,3,1,-7,-8,-10,-6,4,3,4,10,3,9,2,2,3,2,5,4,4,6,-2,4,-6,8,6,-4,-6,8,-10,-1,6,10,7,-1,7,-8,10,5,-10,8,2,7,-6,7,-5,8,2,-1,2,-1,-1,-8,-2,9,-7,-9,10,9,1,1,-4,7,6,4,-2,-9,-3,-4,-1,6,9,-6,-1,4,-1,-8,-5,-9,-3,-1,8,-7,-8,-6,5,6,7,-2,7,8,2,-2,-1,8,-6,8,-10,6,10,-8,4,-7,-9,9,7,-5,3,6,10,7,-2,1,2,1,-1,-6,-4,-8,-4,-1,4,1,-3,3,-10,9,-7,-3,10,-2,-4,6,1,-3,10,-7,-9,-6,-5,6,-1,-7,-7,-7,6,-8,8,-10,-9,-6,-8,7,-1,-10,4,-2,-10,1,-1,4,10,8,9,8,5,-9,7,10,1,-4,3,7,-7,3,-9,-3,-1,8,3,8,-10,-10,-2,-4,-8,7,-6,-9,3,9,8,-4,7,1,-9,-7,-5,-7,7,2,-10,9,1,1,9,-9,-3,8,-6,7,7,6,1,10,5,-3,1,2,-1,8,-2,9,-2,5,-7,5,8,-7,-3,9,1,4,8,-3,-9,-1,2,8,10,-1,-8,2,-8,-7,7,10,9,-9,-9,6,-7,-1,-8,2,4,4,2,2,-4,-4,4,-1,7,10,6,4,-10,2,-5,5,-2,3,-2,5,-3,-10,-2,-2,3,-4,7,-10,-4,4,-9,-9,7,-4,-7,6,7,-9,-9,7,-4,-10,-9,-7,-5,2,-9,4,3,4,8,-1,9,5,2,9,2,-6,-10,-6,1,10,9,7,-3,-3,4,5,6,9,-1,-6,8,6,5,2,7,8,-5,9,8,6,-8,5,-2,-3,-3,-5,-3,8,2,5,-1,7,-10,1,-8,1,-9,-9,-1,5,5,4,3,-5,-1,6,5,-5,2,4,6,-6,-2,-7,9,-6,1,4,1,9,-2,-3,2,2,5,-4,1,-7,6,3,-5,2,8,-10,-5,-10,-5,4,10,-9,-9,-7,4,-3,-7,6,5,8,3,-2,-6,-5,-5,8,2,2,2,-4,-3,-5,-5,-2,10,-4,7,-1,-8,2,5,1,-9,1,-2,6,-3,-8,3,-9,-2,-5,-8,-10,3,2,-3,-5,5,4,2,5,-10,-6,-4,5,7,-5,-6,-3,-10,-7,9,-7,-10,4,-10,1,-1,-4,-1,3,9,-3,4,6,-3,10,6,8,10,-2,-10,-2,-10,-8,-7,9,10,3,-9,9,-1,-6,8,-5,-6,9,-9,-9,-7,-10,-7,-10,-2,-10,-1,3,-9,3,4,4,-6,-8,-3,-4,1,5,-4,4,10,-6,-2,-7,9,6,7,-5,-4,7,-7,8,-8,5,-1,-7,2,4,-4,5,-10,-9,5,-1,7,6,3,-2,-8,3,8,10,7,6,-6,7,5,6,-9,9,-7,10,9,-10,-10,6,-7,10,4,-5,8,-8,-7,-3,9,2,6,-7,3,10,2,-9,-6,-3,4,1,-10,-7,1,-3,3,-8,7,-2,5,-4,-1,6,-4,6,-6,4,-3,-5,2,-7,-3,-3,-2,-5,-10,4,3,-7,-10,7,-9,4,-1,-8,-6,9,2,2,-1,-1,-5,10,-6,7,1,1,-6,-2,5,1,5,-1,-1,2,-1,3,-9,-5,2,-10,7,-5,-10,9,6,-5,9,-1,8,-2,-6,6,-10,2,-5,8,-8,5,9,1,4,-8,3,-3,3,-1,-2,6,-10,-7,5,-6,-6,10,7,-1,-9,-3,-10,-5,-4,2,3,-2,-8,-7,4,-5,8,-6,-9,7,-7,2,9,-8,2,-2,10,8,-5,-1,2,-9,-3,5,-3,-10,3,10,9,-6,10,6,4,-7,2,-5,-6,-5,1,-1,-2,-9,-4,6,6,4,2,7,-7,4,-2,4,-5,-7,8,-3,10,3,10,7,5,-2,-1,-4,3,8,7,5,10,8,-3,-6,2,7,3,8,5,-5,-10,7,-5,1,8,3,2,-5,4,-6,-3,10,6,1,9,10,-5,5,1,-3,1,-6,-9,8,2,-2,6,8,10,-5,-5,10,-9,1,8,10,10,-4,7,-4,5,-2,8,5,9,-6,-3,6,1,6,9,-1,-2,-10,9,7,-8,5,9,3,-9,4,-7,-8,6,-8,-9,-6,5,1,-9,-8,-9,2,-4,-8,6,-7,-4,1,-8,-7,-7,-10,-10,-6,1,-8,6,8,9,-5,10,7,-6,4,-7,-2,5,-9,-5,7,-9,-6,-7,5,10,10,-1,-4,7,-2,10,-1,8,-1,4,-10,-1,8,-1,-3,-2,-3,-1,-1,-4,3,6,8,-3,-8,-6,-8,5,6,-8,6,-3,-6,-7,-1,9,-4,9,1,-2,-8,7,5,3,-7,2,4,4,8,-4,-2,-4,-8,-10,-4,5,-1,10,-4,9,6,5,-7,-8,10,-5,-5,-9,-3,-1,1,10,10,-8,-5,-6,-8,-8,1,1,8,-4,-8,-7,1,-9,3,6,1,8,1,-6,-4,-8,-2,6,7,-4,-2,8,-6,8,8,3,-8,-7,4,9,-10,4,-8,-2,2,-9,-7,-8,6,4,-9,-7,-7,-5,-8,10,-3,-9,-7,-5,-9,1,-3,-2,-6,5,5,-2,6,5,2,-3,-2,-8,-5,5,-7,-1,9,1,10,-1,-8,1,-8,10,-4,9,-5,-4,-7,-4,7,-5,9,-2,-2,5,-3,3,-5,-5,6,-4,8,1,8,2,-1,2,2,8,-6,-3,-3,4,1,-6,3,10,-7,9,-6,-1,-7,-6,8,5,1,4,-8,10,8,-8,6,-2,-9,-10,-1,4,7,-9,6,-8,-3,8,3,-1,-6,3,9,6,-8,4,9,-9,8,1,3,-10,6,-8,-8,1,7,5,-9,3,9,-7,5,-5,6,-6,7,-5,-4,1,1,-5,4,-4,2,10,-5,10,-3,-5,-2,7,-9,-10,5,-6,-3,-5,-2,10,6,-5,-7,3,1,8,-2,-1,-9,-5,-4,1,3,-4,4,-1,4,-3,1,10,3,5,2,6,9,-6,-4,10,-2,4,-8,8,1,2,5,-3,-7,6,4,-1,-5,6,3,-7,-10,-2,-6,-10,-10,-8,-2,7,-1,1,7,10,8,-3,4,7,-3,-10,-9,-5,-3,-6,-3,-6,-8,-10,10,6,8,10,-1,3,6,-2,-6,-4,1,-5,4,9,-2,-4,-10,10,-4,-9,-5,-9,-8,6,10,-4,-1,-5,2,-5,-4,-7,-3,-4,5,-2,-6,1,-3,-7,-8,-4,-1,4,-5,-8,-9,-5,9,-9,-1,-7,3,-10,-7,-1,-7,4,6,-1,-6,-9,-3,-9,-2,-1,1,-9,-5,3,5,9,-9,-1,-10,5,1,-10,8,1,10,-2,-9,7,1,10,-4,-9,-1,-7,3,6,5,2,-7,-1,4,-10,-8,1,-7,-5,-9,3,5,10,1,1,3,-7,-6,-7,-6,7,4,-1,-8,-3,3,6,5,5,1,-1,-1,5,9,-2,-1,-8,9,-7,8,-6,7,10,-8,-9,4,5,2,-7,-6,-7,7,3,5,-5,-3,7,-2,1,3,-1,1,4,-10,6,9,-4,-7,4,-8,-8,-7,10,-1,9,2,-8,-10,8,-3,-7,-6,-9,-7,-6,2,-7,-8,-8,7,-10,9,-1,2,10,-2,8,-7,2,1,-10,-1,-2,3,9,-9,-8,8,-1,9,-8,8,10,4,-1,9,10,2,10,-3,-5,7,-3,5,7,-7,4,2,3,5,3,-7,3,-2,-5,1,9,5,2,8,-3,-6,-10,-2,-4,-7,10,-7,-1,5,6,-8,-3,9,-3,7,-9,5,-1,2,-4,10,1,7,6,2,8,-9,2,-8,-4,-3,10,-4,-4,4,-5,2,-2,10,10,4,-1,-9,-10,10,-6,6,-10,6,-7,2,7,-8,2,10,9,10,-6,4,7,-7,4,10,-4,-8,1,2,5,-8,7,8,10,7,8,2,-5,10,-4,5,-9,8,-4,-7,-10,5,2,5,-1,10,8,-5,-10,-4,7,4,-4,-5,5,-7,-6,-4,4,-10,6,4,-1,6,-4,-8,2,7,4,-6,6,4,4,10,-9,-4,-2,6,-9,-5,-5,-6,-4,-6,-6,5,-6,4,7,9,-6,-1,-3,-2,-1,7,-9,-4,-7,1,-3,-5,-7,8,-5,-10,-1,-9,-9,-9,9,6,-1,3,3,9,-2,6,3,3,-2,-9,5,-9,1,5,-6,-10,-3,4,8,-5,-10,-8,-4,3,6,-9,1,5,6,4,1,10,8,2,-9,-4,6,4,-3,-6,-8,-1,-2,3,-6,-1,-2,1,-5,5,7,-3,-3,5,-3,-6,5,-9,4,7,10,7,9,1,-10,-9,8,-2,-10,-9,-9,3,-2,2,-8,-6,-7,10,8,1,10,4,2,10,-2,-5,6,4,-4,-4,7,9,-10,1,2,5,-4,1,7,-7,2,2,2,6,4,6,-7,-5,-6,6,-2,10,-1,1,-6,-9,-2,6,6,-10,1,10,-3,-6,5,6,4,3,-1,-5,3,-5,2,-9,-3,-7,-6,-4,-5,-9,4,-10,-3,6,-7,1,3,-5,7,-3,4,7,-10,1,1,8,7,-4,10,6,-10,-7,3,10,-7,-10,-5,-3,10,-10,3,-6,5,1,-1,5,2,-4,6,-4,-7,6,-5,-6,-2,-4,6,3,2,-9,1,-4,-7,-9,-10,-8,1,-10,-4,9,-3,-10,5,-2,-9,1,4,6,-4,4,10,-5,-7,-5,-9,6,-9,1,-2,-4,4,3,-3,-1,4,2,-9,-4,10,-5,4,-3,10,9,-6,2,-8,-10,-4,7,8,3,-8,4,-6,9,2,5,5,-1,6,-5,-10,7,-7,5,8,5,-3,-6,-7,1,6,-1,-9,-3,8,3,-4,6,-7,-9,7,2,10,-10,-10,8,4,-8,2,2,-1,9,-5,7,6,-8,-9,-4,8,-7,3,-6,-5,-2,6,-8,-8,2,-4,7,6,-2,6,3,-9,2,-6,-1,-3,-7,-8,7,3,-9,-10,-6,2,1,-5,-3,7,-8,-6,-5,3,-9,8,-5,5,8,10,2,-4,-1,-1,3,10,2,-10,6,-10,2,-10,9,-3,-3,-2,5,9,-5,10,8,-1,7,-7,3,-7,5,6,-3,10,-1,10,-8,-4,7,5,6,-6,-7,6,-10,7,-10,-9,1,8,2,2,7,7,1,-1,-7,-2,2,4,-10,-7,-5,3,6,10,9,1,9,2,-1,-7,-2,3,-6,5,-2,-6,1,-5,-1,8,-8,-8,9,6,-4,8,-1,-9,-10,3,-9,10,-6,-6,1,-1,-2,-5,10,1,-4,2,-2,2,-7,5,-2,5,-8,-9,6,-10,-8,1,6,-5,-3,-8,10,-6,-5,-5,3,-8,-3,-2,6,9,-6,-3,-4,-7,-7,-9,-6,-4,-5,-9,8,-1,-6,-10,-6,-8,9,9,2,-10,10,6,6,7,10,2,-7,9,-8,8,7,-10,-1,-10,4,4,9,10,-1,-7,-6,8,-1,-7,-5,-5,-2,1,-4,8,2,2,1,9,10,2,-4,-9,9,-6,-2,-9,5,-10,2,7,-10,-7,2,3,-1,-7,-7,-2,4,-3,10,-1,-3,-6,-8,8,1,-7,1,-6,-6,7,-9,2,-8,10,-6,-5,-3,-3,-3,7,8,8,7,-2,-6,8,2,1,-4,8,-3,6,-3,6,-2,9,-8,-9,-10,8,4,3,6,5,-6,-10,7,2,-7,-5,1,8,2,6,8,10,-2,7,-9,-9,-5,-2,5,4,4,10,5,7,-5,3,-9,-7,-8,-10,-7,9,-8,-6,-7,-6,10,-8,-1,-6,8,-10,-2,9,-1,6,7,-10,6,-7,-6,2,8,5,-5,-6,10,-3,4,2,-8,-3,-4,10,-1,-1,-2,5,4,-9,-10,-5,2,-3,-7,-4,-5,-10,2,-7,8,9,2,10,-3,7,6,4,-8,-6,3,-2,1,-5,3,-5,9], dtype = "uint32")#candidate|13947|(2940,)|const|uint32
call_13946 = func_4004_call(relay.reshape(const_13947.astype('uint32'), [14, 15, 14]), relay.reshape(const_13947.astype('uint32'), [14, 15, 14]), )
call_13948 = func_4004_call(relay.reshape(const_13947.astype('uint32'), [14, 15, 14]), relay.reshape(const_13947.astype('uint32'), [14, 15, 14]), )
output = relay.Tuple([call_13935,call_13946,const_13947,])
output2 = relay.Tuple([call_13936,call_13948,const_13947,])
func_13950 = relay.Function([], output)
mod['func_13950'] = func_13950
mod = relay.transform.InferType()(mod)
mutated_mod['func_13950'] = func_13950
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13950_call = mutated_mod.get_global_var('func_13950')
call_13951 = func_13950_call()
output = call_13951
func_13952 = relay.Function([], output)
mutated_mod['func_13952'] = func_13952
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10910_call = mod.get_global_var('func_10910')
func_10911_call = mutated_mod.get_global_var('func_10911')
call_13987 = relay.TupleGetItem(func_10910_call(), 0)
call_13988 = relay.TupleGetItem(func_10911_call(), 0)
func_1110_call = mod.get_global_var('func_1110')
func_1114_call = mutated_mod.get_global_var('func_1114')
var_14008 = relay.var("var_14008", dtype = "float64", shape = (6,))#candidate|14008|(6,)|var|float64
var_14009 = relay.var("var_14009", dtype = "float64", shape = (96,))#candidate|14009|(96,)|var|float64
const_14010 = relay.const([7.972028,-5.861559,3.208550,-2.041075,-8.556106,-2.093564,-8.712186,4.040417,4.920177,-9.503976,-4.886614,-7.465359,-8.486173,-4.860473,-5.148831,-1.609322,4.293562,-7.541463,7.453031,9.895211,-6.366706,-4.194659,3.154479,0.163555,7.368895,-6.035333,-4.174823,-8.810541,1.789750,6.714516,8.235597,3.374430,-2.657006,1.571866,4.903835,8.159489,8.346880,-1.969319,2.880892,8.363521,7.782461,5.506421,-6.909924,-9.913058,-4.599821,2.375751,-5.014475,-1.067953,-2.002474,-8.068045,6.916093,-2.885213,8.172631,8.485913,-0.288852,7.404938,-3.072441,-8.507223,-4.131613,-9.297970,-4.231806,-8.520940,0.289546,9.118104,9.511126,3.327155,5.618554,8.424789,-5.515034,1.996791,2.929291,-2.875129,9.070721,-2.683212,-6.101891,-1.171846,-8.285144,8.973648,-8.549270,6.551531,-9.077853,-6.273918,-6.566659,9.550896,-7.810091,-9.391995,4.019787,9.244614,3.596735,0.407869,9.000976,-2.026308,-9.031425,4.800945,-4.798046,-8.213944,9.309627,-1.491153,-6.207315,-7.275873,-8.912042,-1.318736,6.945500,6.660534,5.429976,-0.780444,-9.631305,-2.491814,-3.689491,2.851956,3.350776,-7.886279,-0.382541,-9.969217,-3.311426,9.581380,5.147946,-9.654412,-4.864971,5.822827,-1.150325,-1.380266,-0.758330,-7.956452,-2.148858,7.793310,7.012685,-6.295440,-9.694518,1.665954,7.450770,-7.873393,-8.201607,1.460017,-1.691637,4.677016,6.469771,3.951636,-5.272774,-8.200201,-0.191698,-9.050633,0.803535,1.954630,-3.688383,-3.541863,-3.418486,-5.030841,-5.587549,5.379192,6.356850,0.449846,-9.489437,-2.054613,-6.776899,7.096995,7.407474,9.070765,-4.490807,-6.783791,1.421408,-7.814290,9.291838,-9.964675,-9.003630,-8.195907,-5.890192,-8.481406,2.872590,-6.723275,-1.191490,-1.200366,3.380347,-8.856760,-9.968664,-4.522724,-6.927066,5.385361,-4.301893,9.998026,6.621695,-6.887058,7.079915,-4.136475,8.544630,3.355285,-5.074475,2.829949,9.793308,1.003053,8.879678,2.020515,-1.452754,5.780617,-1.997964,-0.016963,0.138496,-6.048355,7.488246,7.862882,1.258513,-5.515141,-1.308061,9.166001,-5.667763,1.819493,6.150748,3.660344,-1.066068,-5.464274,0.981247,-6.757951,2.694214,6.761991,-0.346911,7.849119,6.569326,4.642642,-2.059643,7.357983,-1.416980,-1.109657,0.949235,8.754749,-7.713948,5.989167,-4.786526,-9.171753,-7.870350,3.025223,-1.665553,-1.944265,-1.738066,3.949494,-6.598302,4.338076,-1.634706,-0.213402,8.271351,9.904660,6.780412,5.670437,-1.904337,2.699237,-9.608708,3.061008,-6.829102,-8.730016,-6.875749,9.823878,1.553567,4.994602,-8.230792,8.865878,0.007905,9.190518,9.988469,8.846228,0.480343,-8.844032,5.669889,-5.670503,7.972260,-7.188791,5.745116,0.696440,0.961485,-5.650054,-9.844069,6.505700,-3.780840,6.637373,-5.971823,6.273803,6.684822,8.705706,-7.098426,-6.735463,-9.078054,2.499117,-8.805263,-7.808784,9.653949,3.935616,6.759092,1.295680,-5.855911,5.830004,2.466533,-6.560576,6.631898,1.894610,0.034615,3.187423,3.264912,3.840343,3.792474,1.014122,-7.990907,7.727546,6.129385,7.737973,8.304551,-1.558409,-2.579756,4.406070,-8.389644,6.895993,2.344840,-0.494545,5.152719,-8.482220,8.942426,9.819461,9.038415,6.682623,2.512763,-9.864569,-1.301001,-9.728598,1.159195,-3.629333,-9.630377,3.772376,-1.006519,-8.138108,-1.715463,8.357812,-1.898620,3.171870,5.145514,7.323963,-2.672892,9.843928,-3.391066,8.140720,9.464052,-2.236882,9.184236,9.905689,0.145950,6.828268,2.333472,7.151188,2.451175,8.045619,-5.126104,6.677364,-6.129530,0.503352,-5.167519,-8.343138,-2.873570,-0.403495,-3.779770,8.340508,5.299926,4.325803,3.633657,2.573067,-5.773200,3.369642,6.232187,5.622216,0.003843,-5.048639,1.896488,-6.940403,8.698176,4.722695,-5.788411,9.388639,5.404694,-4.558420,-3.188448,9.434306,-6.012128,7.615858,2.770085,2.105670,2.089854,8.286055,-0.697576,-6.132793,-4.018873,-4.514020,-8.708857,-2.368033,-2.340963,4.413985,-8.243775,5.703552,8.422349,-5.812041,4.188225,-9.973023,-5.850442,2.651329,9.930839,-8.896602,8.061348,-3.740506,5.223333,6.025620,-7.466014,-7.597488,9.180012,6.028437,-2.179925,-3.817744,-5.336305,-6.172541,-2.234944,4.129652,0.579600,3.903991,-9.106537,-2.087454,-1.517655,-4.660186,-6.262283,-6.308109,-1.530178,7.689162,6.856854,9.357714,-5.584464,-7.982034,5.429408,-4.996260,-5.067621,-8.363894,6.359537,-1.856560,-6.264799,-9.132422,2.362963,4.040718,8.712458,-1.785911,-8.820775,-4.403694,8.015361,9.042375,-9.326917,7.154103,8.470560,-0.467074,-1.721247,-5.022785,8.363397,-9.536143,1.376481,-5.654348,-1.728501,-6.296461,-1.848710,8.216592,7.033034,3.827891,-9.260380,-8.654437,-8.602066,-1.347595,7.150796,2.110502,-0.835258,2.206377,7.379615,-8.079890,-9.443980,-5.819513,5.835983,-2.592319,-9.113915,-9.794189,-0.080721,-8.677025,4.210469,-7.587202,-8.437420,8.518398,6.392423,-9.879187,6.056082,-6.989821,7.154447,-1.379011,-0.615349,-5.813659,-9.149082,1.746136,0.856846,6.601030,-4.818407,-2.350727,-1.277206,5.123464,-9.131844,-5.508195,-0.339236,-2.356683,-7.908498,-7.187371,4.001980,7.804908,-5.685621,3.273935,2.473009,-9.278374,-2.020383,-9.610344,4.760048,-8.021924,8.560654,6.006908,9.019066,-4.111967,-9.375687,-3.041044,8.531546,-4.531453,-7.743047,0.841546,-1.916277,1.396644,-0.337613,6.195667,-8.517653,-6.124478,6.110287,5.710885,9.141611,-3.437842,5.377518,6.194675,-1.955760,-8.069287,2.946921,-4.983447,1.624222,-8.603926,4.829879,0.712421,0.700198,-2.789833,0.447519,9.059690,1.807642,2.447860,-0.320127,9.682506,-7.560198,6.695340,5.734631,9.609901,-7.350567,1.678510,-3.840443,3.686678,-6.923732,-7.170016,7.415571,-1.573713,3.245920,9.753364,-0.770438,-2.143761,-8.256627,6.251257,-2.038952,1.081784,-9.469555,-1.100816,1.021253,5.292858,1.309775,-7.877062,3.878343,7.615654,-4.224871,6.703583,1.125877,2.481233,7.767161,-2.572062,6.540266,-4.577910,-8.895498,-9.269335,-2.649516,0.102540,3.540135,4.162786,-7.750872,1.993566,1.745976,3.218298,9.222504,0.113934,9.928741,-9.664326,7.699968,7.122602,8.676281], dtype = "float64")#candidate|14010|(605,)|const|float64
call_14007 = relay.TupleGetItem(func_1110_call(relay.reshape(var_14008.astype('float64'), [1, 3, 2]), relay.reshape(var_14009.astype('float64'), [16, 3, 2]), relay.reshape(const_14010.astype('float64'), [11, 55]), ), 1)
call_14011 = relay.TupleGetItem(func_1114_call(relay.reshape(var_14008.astype('float64'), [1, 3, 2]), relay.reshape(var_14009.astype('float64'), [16, 3, 2]), relay.reshape(const_14010.astype('float64'), [11, 55]), ), 1)
output = relay.Tuple([call_13987,call_14007,var_14008,var_14009,const_14010,])
output2 = relay.Tuple([call_13988,call_14011,var_14008,var_14009,const_14010,])
func_14017 = relay.Function([var_14008,var_14009,], output)
mod['func_14017'] = func_14017
mod = relay.transform.InferType()(mod)
mutated_mod['func_14017'] = func_14017
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14017_call = mutated_mod.get_global_var('func_14017')
var_14019 = relay.var("var_14019", dtype = "float64", shape = (6,))#candidate|14019|(6,)|var|float64
var_14020 = relay.var("var_14020", dtype = "float64", shape = (96,))#candidate|14020|(96,)|var|float64
call_14018 = func_14017_call(var_14019,var_14020,)
output = call_14018
func_14021 = relay.Function([var_14019,var_14020,], output)
mutated_mod['func_14021'] = func_14021
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11037_call = mod.get_global_var('func_11037')
func_11038_call = mutated_mod.get_global_var('func_11038')
call_14057 = func_11037_call()
call_14058 = func_11037_call()
output = call_14057
output2 = call_14058
func_14059 = relay.Function([], output)
mod['func_14059'] = func_14059
mod = relay.transform.InferType()(mod)
mutated_mod['func_14059'] = func_14059
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14059_call = mutated_mod.get_global_var('func_14059')
call_14060 = func_14059_call()
output = call_14060
func_14061 = relay.Function([], output)
mutated_mod['func_14061'] = func_14061
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13070_call = mod.get_global_var('func_13070')
func_13071_call = mutated_mod.get_global_var('func_13071')
call_14093 = relay.TupleGetItem(func_13070_call(), 0)
call_14094 = relay.TupleGetItem(func_13071_call(), 0)
func_10316_call = mod.get_global_var('func_10316')
func_10318_call = mutated_mod.get_global_var('func_10318')
call_14095 = func_10316_call()
call_14096 = func_10316_call()
output = relay.Tuple([call_14093,call_14095,])
output2 = relay.Tuple([call_14094,call_14096,])
func_14119 = relay.Function([], output)
mod['func_14119'] = func_14119
mod = relay.transform.InferType()(mod)
output = func_14119()
func_14120 = relay.Function([], output)
mutated_mod['func_14120'] = func_14120
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13070_call = mod.get_global_var('func_13070')
func_13071_call = mutated_mod.get_global_var('func_13071')
call_14126 = relay.TupleGetItem(func_13070_call(), 2)
call_14127 = relay.TupleGetItem(func_13071_call(), 2)
func_10699_call = mod.get_global_var('func_10699')
func_10703_call = mutated_mod.get_global_var('func_10703')
const_14146 = relay.const([[-1,-4,-5,7,-8,-9,-2,-2,-7,-1,-2],[4,-8,-4,2,-4,5,1,4,-2,-5,-3],[-10,-5,-7,-8,1,-4,5,-9,-2,-2,-10],[-8,1,1,3,-2,-1,9,-3,9,-9,7],[5,-10,9,-5,-5,5,5,1,-10,-2,-1],[-10,-8,-10,-4,-10,1,7,2,-10,4,-2],[-1,-8,9,3,3,-4,-4,7,-1,8,-6],[3,6,-6,1,1,2,-5,1,1,-3,4],[-9,-7,7,6,10,-1,5,7,7,7,9],[-10,-4,-6,-6,-6,3,-7,9,-4,-5,3],[4,7,8,-9,-8,1,10,10,-10,-10,10],[-3,-5,5,-4,1,8,7,1,-5,7,-2],[-5,-4,9,-10,-3,5,10,7,8,-1,-3],[-4,-6,-5,7,3,-10,-9,-1,7,3,-2],[-3,8,7,10,8,6,5,9,7,-5,9],[5,6,3,-7,2,-6,-3,-10,4,-9,3],[10,-7,4,-5,10,2,-3,5,10,9,-10],[10,7,7,4,1,2,4,-4,8,8,-9],[-4,2,2,3,-4,-1,7,-1,7,-9,-2],[4,10,9,3,1,-2,5,-4,5,1,1],[3,-1,3,-9,2,2,-7,-2,-1,-2,-7],[7,5,-1,10,-4,-5,-1,-4,-5,4,-8],[2,-5,-6,8,-4,-5,8,5,10,-9,4],[-3,-10,7,-8,7,7,-5,-9,-6,-7,-1],[-7,-3,8,1,-1,10,-3,-7,2,-2,-8],[-3,7,9,10,-9,10,5,-3,8,9,7]], dtype = "uint64")#candidate|14146|(26, 11)|const|uint64
const_14147 = relay.const([-3.357418,-0.037080,-2.365620,4.103805,0.935888,8.412547,3.286159,6.753962,-0.287566,5.800642,6.794349,-0.667820,-3.706717,6.978189,8.380758,-0.277769,-1.100823,-0.300261,-5.277520,8.886571,0.991013,-3.258855,-2.665759,-7.848631,-8.247064,-0.199071,-8.823217,2.884341,-8.677296,-0.885229,-0.547080,7.249546,9.868872,8.907872,0.151851,8.266786,-7.701460,9.890501,-0.224528,6.772274,-9.271647,-8.527796,2.292634,5.167430,-7.894866,9.909525,-3.302223,-6.733902,-7.884358,3.454379,-4.275767,-3.705741,-7.575762,2.967358,1.273224,0.901635,-2.770945,1.746327,5.238596,1.446287,-8.532884,-2.318262,0.801789,0.284939,9.911037,3.539316,2.190482,-7.604111,-8.370396,-3.297247,-7.059926,2.095412,-2.840232,-1.787385,9.148752,0.152900,-0.869886,-6.847047,-1.956695,-9.010849,-7.588504,0.292624,8.799991,7.171728,1.526978,-6.195224,3.743239,-6.432080,-9.745723,-0.191565,-6.012794,1.752601,6.820674,-5.199059,1.972598,9.004123,2.899626,-1.788239,-2.955256,-2.265481,8.851215,-2.472635,-6.287988,-0.442282,4.265460,-8.054347,3.036127,0.286165,3.749753,-1.704656,-6.249615,-8.816026,6.439373,-3.721701,-6.760388,2.758225,7.515906,-6.429502,5.825776,-3.054601], dtype = "float64")#candidate|14147|(120,)|const|float64
call_14145 = relay.TupleGetItem(func_10699_call(relay.reshape(const_14146.astype('uint64'), [286,]), relay.reshape(const_14147.astype('float64'), [120,]), ), 2)
call_14148 = relay.TupleGetItem(func_10703_call(relay.reshape(const_14146.astype('uint64'), [286,]), relay.reshape(const_14147.astype('float64'), [120,]), ), 2)
uop_14154 = relay.asin(const_14146.astype('float32')) # shape=(26, 11)
output = relay.Tuple([call_14126,call_14145,const_14147,uop_14154,])
output2 = relay.Tuple([call_14127,call_14148,const_14147,uop_14154,])
func_14158 = relay.Function([], output)
mod['func_14158'] = func_14158
mod = relay.transform.InferType()(mod)
output = func_14158()
func_14159 = relay.Function([], output)
mutated_mod['func_14159'] = func_14159
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9132_call = mod.get_global_var('func_9132')
func_9133_call = mutated_mod.get_global_var('func_9133')
call_14172 = relay.TupleGetItem(func_9132_call(), 0)
call_14173 = relay.TupleGetItem(func_9133_call(), 0)
output = call_14172
output2 = call_14173
func_14176 = relay.Function([], output)
mod['func_14176'] = func_14176
mod = relay.transform.InferType()(mod)
output = func_14176()
func_14177 = relay.Function([], output)
mutated_mod['func_14177'] = func_14177
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13039_call = mod.get_global_var('func_13039')
func_13041_call = mutated_mod.get_global_var('func_13041')
call_14221 = relay.TupleGetItem(func_13039_call(), 0)
call_14222 = relay.TupleGetItem(func_13041_call(), 0)
output = relay.Tuple([call_14221,])
output2 = relay.Tuple([call_14222,])
func_14229 = relay.Function([], output)
mod['func_14229'] = func_14229
mod = relay.transform.InferType()(mod)
mutated_mod['func_14229'] = func_14229
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14229_call = mutated_mod.get_global_var('func_14229')
call_14230 = func_14229_call()
output = call_14230
func_14231 = relay.Function([], output)
mutated_mod['func_14231'] = func_14231
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9223_call = mod.get_global_var('func_9223')
func_9225_call = mutated_mod.get_global_var('func_9225')
call_14238 = relay.TupleGetItem(func_9223_call(), 0)
call_14239 = relay.TupleGetItem(func_9225_call(), 0)
output = relay.Tuple([call_14238,])
output2 = relay.Tuple([call_14239,])
func_14260 = relay.Function([], output)
mod['func_14260'] = func_14260
mod = relay.transform.InferType()(mod)
output = func_14260()
func_14261 = relay.Function([], output)
mutated_mod['func_14261'] = func_14261
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14260_call = mod.get_global_var('func_14260')
func_14261_call = mutated_mod.get_global_var('func_14261')
call_14272 = relay.TupleGetItem(func_14260_call(), 0)
call_14273 = relay.TupleGetItem(func_14261_call(), 0)
output = relay.Tuple([call_14272,])
output2 = relay.Tuple([call_14273,])
func_14287 = relay.Function([], output)
mod['func_14287'] = func_14287
mod = relay.transform.InferType()(mod)
mutated_mod['func_14287'] = func_14287
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14287_call = mutated_mod.get_global_var('func_14287')
call_14288 = func_14287_call()
output = call_14288
func_14289 = relay.Function([], output)
mutated_mod['func_14289'] = func_14289
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11493_call = mod.get_global_var('func_11493')
func_11495_call = mutated_mod.get_global_var('func_11495')
call_14292 = relay.TupleGetItem(func_11493_call(), 1)
call_14293 = relay.TupleGetItem(func_11495_call(), 1)
output = relay.Tuple([call_14292,])
output2 = relay.Tuple([call_14293,])
func_14298 = relay.Function([], output)
mod['func_14298'] = func_14298
mod = relay.transform.InferType()(mod)
output = func_14298()
func_14299 = relay.Function([], output)
mutated_mod['func_14299'] = func_14299
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10563_call = mod.get_global_var('func_10563')
func_10564_call = mutated_mod.get_global_var('func_10564')
call_14324 = func_10563_call()
call_14325 = func_10563_call()
func_8305_call = mod.get_global_var('func_8305')
func_8310_call = mutated_mod.get_global_var('func_8310')
var_14341 = relay.var("var_14341", dtype = "int64", shape = ())#candidate|14341|()|var|int64
const_14342 = relay.const([[7,7,-3,-3,-6,-7,-4,-5,-9,1,5,2,2,8,1,9,-4,-5,-5,4,-9,-4,-7,1],[8,-3,9,-3,-5,8,1,-3,6,-5,-8,-4,9,9,9,-2,-4,-9,10,-4,5,10,-9,-4],[-3,-8,8,-10,-4,-5,-9,-1,3,3,-4,-8,-1,6,3,5,-8,1,-6,5,7,2,-6,-10],[1,-2,-2,-5,-1,3,2,2,-10,6,-3,4,10,10,7,4,-3,4,-9,8,-1,-3,-6,2],[9,2,10,4,1,3,1,-7,-6,-10,3,4,-9,-8,-2,-3,-10,-3,-2,-8,10,-3,3,-7],[-3,5,-5,10,5,-10,-8,-8,-9,-9,-7,-4,-10,-9,-6,-3,3,5,-6,3,10,-8,6,9],[6,-8,4,-1,-8,-9,-7,3,10,-10,-2,-10,6,-3,2,10,9,-3,10,9,-6,-4,1,-5],[-5,9,-7,2,-7,-8,8,-6,-7,-1,-3,-5,-9,4,-6,2,3,1,-2,-5,-9,-7,2,3],[4,-4,-4,-8,10,2,-10,-9,8,2,2,-9,2,-7,1,2,4,2,9,-1,-1,-4,9,-3],[3,9,5,-6,5,-1,-3,-2,3,7,6,-10,2,8,-9,-10,-8,-10,10,2,-9,-4,8,-1],[1,-10,5,6,5,-9,-6,-7,-10,9,-2,5,-4,6,-4,2,5,4,1,7,7,2,-7,-10],[-5,6,2,1,-10,-7,-3,4,10,-8,-10,-10,-3,10,1,-6,9,-6,-3,8,-3,10,3,-4],[1,-7,-8,-8,7,-10,10,-7,-10,-1,-1,6,3,9,-9,-10,-4,-3,-3,-5,1,-9,3,-9],[8,-4,6,-2,-8,-6,4,9,-2,-4,5,5,5,6,-9,-1,-4,5,-6,10,8,3,9,-3],[4,8,-5,5,7,7,6,-3,2,-10,-7,-4,-4,10,-9,-6,10,-2,7,6,9,-1,1,3],[4,-4,4,7,-7,3,9,8,-5,4,-10,-5,-4,-1,-10,10,10,6,-4,-3,-9,-6,6,-8],[6,3,4,2,6,-3,-10,2,-9,-5,3,-3,-2,5,-2,-1,6,-2,-1,8,-10,6,6,-1],[10,7,3,8,-6,5,5,-6,-9,-3,5,-10,4,4,-5,6,-2,-9,-10,10,9,8,1,-8],[2,-3,-3,-1,-8,-9,-1,-8,-8,8,5,8,3,-9,9,7,9,8,2,10,-6,4,-6,10],[9,-3,-6,-10,6,7,7,7,-5,-7,-6,-8,-8,2,5,7,10,10,-1,-6,10,-2,-9,-4],[-8,1,7,-8,2,-8,-4,2,-7,1,-3,-6,-2,1,-9,-6,-7,1,-6,1,-1,-6,-6,-10],[-1,10,1,8,-4,5,-5,10,-7,7,2,-3,7,-9,-6,-3,-1,10,8,-7,8,-6,2,6],[-1,-5,1,7,5,-10,-6,-9,-7,-10,8,7,-1,2,3,5,1,8,-7,-1,-10,5,-5,4],[5,8,3,-1,10,-8,-1,8,2,-5,8,3,-8,-5,-5,8,-5,3,-2,10,8,-7,-2,5],[9,-5,8,9,8,-1,-5,3,5,-7,10,1,7,1,2,-3,5,-10,-8,9,4,-1,8,10],[9,10,-7,1,8,-3,-7,-1,-6,7,1,2,-5,6,-6,-7,-4,-8,8,6,1,-4,10,3],[8,10,6,-5,-4,6,-9,-4,-10,5,2,-3,3,-3,3,-10,6,10,-1,-4,-8,-4,-3,-10],[-3,-2,8,-9,-3,5,10,8,-5,-1,5,-3,6,-2,8,-4,8,-5,1,9,-8,-1,2,-8],[10,-5,-3,-10,8,9,-3,-6,-9,9,-8,-6,-7,-7,-8,5,-2,-5,-9,-7,-6,-2,9,1],[-2,2,1,6,-6,-6,-6,4,-1,7,1,-6,10,7,-9,-9,-1,9,-8,-9,-8,1,-5,-3],[4,-6,-6,4,-4,7,-9,4,-7,1,8,4,-6,9,1,-10,6,2,10,-9,-6,10,5,5],[-5,-1,-8,-10,-9,-6,2,5,-3,1,-4,-10,9,8,-1,7,-1,2,1,-4,10,-3,7,2],[7,-3,-4,-3,-2,4,-6,-1,9,-6,5,3,9,10,5,4,-3,-5,10,9,-1,-7,-6,-3],[4,-7,7,-6,5,-2,6,-4,-3,-8,-9,6,2,6,-2,2,8,4,-9,-2,6,7,-10,-5],[-10,-7,-1,-6,4,8,-10,-3,10,-4,8,3,1,-8,-1,-3,5,7,-3,-9,-6,5,9,-6],[5,-8,-5,-9,-3,7,-1,4,-2,-1,5,-4,-9,8,-8,7,-4,8,-9,8,-5,5,-7,1],[-1,6,4,-10,-2,-1,5,-6,4,-2,3,5,7,6,-3,7,1,2,5,8,-10,-8,6,6],[9,3,10,-2,9,2,6,6,5,5,-9,7,-2,6,10,8,-10,3,-8,-6,4,-1,-9,8],[-4,-4,-5,-2,-8,5,-2,5,-3,-1,-3,9,9,10,4,4,10,-1,-10,2,-5,4,-9,9],[-9,-2,-1,4,9,-8,1,-3,1,-5,-8,9,-5,1,5,-7,-2,1,-2,-1,-6,-5,4,-7],[3,8,-3,7,1,6,-7,4,-4,1,7,-6,-5,-1,1,6,4,-5,10,-6,9,-8,-5,-6],[-7,-2,10,-9,-10,-6,10,5,3,-10,-4,-5,-6,-9,-5,-9,-1,7,10,-10,10,-1,7,6],[-6,4,-3,-2,2,-2,-6,1,4,3,-6,4,9,8,-3,-8,1,10,-1,-6,4,1,-1,-9],[2,8,-5,6,2,-1,-10,-6,1,6,-8,8,-2,-4,-3,9,7,5,-2,7,5,-8,7,8],[10,3,-8,-10,9,-5,-6,-8,-2,6,-4,-9,-1,5,-3,-9,7,-10,2,-7,-3,5,-7,-4],[-8,4,-5,2,-1,5,10,-8,-7,-3,-8,2,-5,5,-2,10,1,-1,-8,-2,1,-5,-1,-9],[-3,7,-5,5,8,1,-8,9,4,6,4,-10,-7,-6,-10,-9,9,4,-7,-5,10,-2,-4,10],[2,9,7,-10,8,3,3,1,-7,8,-8,8,7,-6,2,1,3,-1,1,5,7,7,9,4],[5,-2,4,-10,-10,4,-4,8,-6,10,-8,7,2,-7,-2,-6,2,-1,-8,9,-7,9,-9,1],[-6,1,5,-3,-1,-7,-1,1,1,-2,-3,8,-6,-3,6,8,-4,-7,-8,5,1,2,5,9],[-3,6,4,6,-10,6,-3,-7,-5,8,-5,1,-5,1,-4,5,-3,-3,-4,8,-10,-10,-9,3],[-3,5,6,-7,-9,-10,-9,2,7,-9,-8,6,9,2,7,2,-6,10,-3,2,5,4,-6,-4],[-4,5,7,-10,9,6,7,6,5,7,2,7,-9,9,-9,-10,5,-5,-5,1,-4,10,5,7],[1,-5,3,-10,6,10,2,8,-3,2,-5,4,9,3,9,5,3,-2,-3,9,-2,7,-6,3],[-10,-9,-7,-6,-4,-2,8,2,-9,-6,-7,-4,-3,-4,7,-10,2,2,2,-8,9,-1,7,-8],[8,-9,-10,-3,-5,4,4,-1,-3,6,2,-4,-3,-10,8,9,4,2,-2,-9,-4,10,-8,4],[3,9,-3,-8,7,7,6,3,5,-5,2,5,-6,-6,6,-6,-2,-4,-7,1,8,9,-5,3],[-10,6,-2,-10,6,3,-7,-10,-5,4,-7,-5,-5,1,1,-10,4,-4,9,-5,3,-6,10,-1],[-10,-8,-2,-4,-1,8,8,-2,-6,-9,2,9,-5,-6,-10,-1,-2,7,-1,-10,5,4,-8,6],[-3,-10,-2,-2,5,-1,5,-7,-10,-10,5,-5,9,-4,8,-10,6,7,8,-4,-7,8,-8,8]], dtype = "int64")#candidate|14342|(60, 24)|const|int64
const_14343 = relay.const([-5.523431,-8.210020,5.993299,9.134592,3.268142,-5.784614], dtype = "float64")#candidate|14343|(6,)|const|float64
const_14344 = relay.const([[-2.019421,-2.502807,4.346019,4.862579,2.843424,7.385182,3.257534,0.609715,1.675562,0.172334,-3.895974,-1.234988,-4.801862,6.825091,1.667729,-9.808101,-8.059971,7.253137,-3.110570,-4.091232,3.489970,-3.026913,8.421871,-3.876471,0.075310,6.777125,-4.633397,-5.641832,8.034590,4.326442,-4.963202,-5.600280,-3.360050,-5.020253,-6.720467,-2.332003,5.871970,5.658779,-4.258067,8.957669,3.934395,0.657026,-6.457882,-0.136517,2.937052,7.218757,-1.679684,-8.095349,0.275274,3.944467,7.740927,3.455014,-3.079590,-4.539800,2.794782,-4.835471,-1.788091,-9.719941,8.240190,2.102403,8.316571,1.591305,-4.939683,-1.732701,-1.987948,-2.363385,-5.820001,-7.614607,-7.274985,4.337845,-2.650041,-4.169044,-2.618709,-9.888055,-4.591628,-8.853317,-8.414275,8.508952,-0.664461,-9.863971,3.327996,-2.899270,-0.755101,-4.212543,7.475428,-1.721100,-6.748531,1.221683,-6.146196,-4.353228,3.222043,-0.771636,-7.513211,-2.645925,4.384681,-5.847642,2.437887,-0.894156,3.430480,-3.839816,7.475102,0.566878,-9.402402,-0.030668,-7.820854,9.397683,7.556260,6.490905,4.930804,-7.795834,-2.953278,3.072636,-5.240635,4.164403,-1.945457,-8.337827,2.824885,1.931488,-1.286419,-7.321842,4.874471,-3.372564,3.036781,-8.090848,-9.198084,4.805417,8.076399,-5.100029,8.062822,-7.578078,-9.360010,0.659897,-4.780205,4.767759,-9.092161,1.342732,5.389524,-9.098589,3.813362,0.778496,-9.314148,-9.494639,1.678238,1.288445,-0.749384,-8.993030,-7.155512,-3.680820,7.187300,-1.664176,3.557562,4.641351,2.136448,7.050638,-2.208502,-7.214847,-6.095315,6.525736,-6.818456,-0.955236,-0.305858,2.670962,-6.805656,6.787000,1.544591,8.915985,2.804396,9.177137,-1.954006,9.686703,5.521143,5.283348,-1.801596,8.639345,9.608647,9.190245,-5.692164,1.398476,4.405954,-4.879567,-4.044483,7.008941,-6.420809,-8.190182,-2.414279,-1.372670,-8.550755,4.289854,-4.150130,8.513354,-0.534569,1.863484,5.249338,0.965008,9.738061,6.733408,9.852529,8.008585,1.178316,-9.620514,2.651192,1.373703,2.830475,-5.086246,4.532130,6.463106,-6.277293,-6.008572,4.791411,-9.205845,-3.679367,-7.303157,1.220814,2.706499,-2.635131,-0.409965,-1.856268,1.433701,-3.575670,7.973270,3.543937,7.796214,7.268048,3.265547,1.263827,9.433406,6.685058,5.317580,0.786136,3.662362,-1.103869,1.236710,1.261405,-9.107676,-1.934799,2.247128,4.636193,-2.914787,-3.597229,0.354124,4.982944,4.275424,3.079211,2.404442,-9.758525,-0.637933,-0.175220,0.082824,-7.465928,9.914325,-4.235006,-5.411954,6.069477,-3.682448,-5.624882,6.042490,0.127368,-6.857840,2.141670,9.245651,-9.519899,0.288788,-1.023767,-3.410112,-9.786028,8.179064,-0.286823,-7.894695,-4.086368,1.144681,2.618607,5.908261,-8.330631,1.077215,1.780072,1.073204,-7.693089,3.222740,7.476065,1.532653,1.947595,-1.544283,-2.812524,-1.376773,-0.516755,5.410258,-6.653035,-7.602861,-8.496551,0.879011,-3.868173,9.521440,2.839454,6.843651,-9.215309,-7.222496,-1.623900,2.620823,-8.994861,1.713472,7.543331,-2.399167,6.913153,-8.129024,-6.598295,-4.974070,-8.154596,0.370907,-0.281814,6.381616,1.308962,-6.531238,-8.595586,-7.786685,2.826002,3.280184,-1.211858,6.463517,-6.587927,0.510888,7.811573,-3.289147,9.968138,8.228747,-8.874052,-1.365614,-0.683763,8.908977,-9.429715,7.067759,-1.836348,-8.002713,-2.591502,-3.393143,-0.737076,9.872243,0.191204,8.863250,9.803429,-7.960119,1.180947,3.942967,-5.502658,1.321367,-4.955085,-9.460218,9.539658,0.413438,-8.401533,8.147985,7.262129,-4.109828,-2.104662,7.368821,-2.299191,9.377032,-3.525829,-3.412058,-4.035011,9.389167,-7.167947,1.113035,5.252465,-2.233605,-5.370761,-4.553682,-5.511614,7.850439,-3.358624,3.919844,-3.721312,2.205445,8.334769,3.242133,2.211724,6.105697,5.041214,4.737750,1.497407,-0.888219,7.218853,-6.838243,-7.034875,-5.334983,-4.928926,4.133658,6.341750,-3.984779,-1.463811,-0.961717,-3.492233,-6.614526,-7.371385,-6.076239,8.798255,1.011585,5.578618,-3.853256,1.668977,1.340355,-7.965513,6.987358,1.107506,3.682036,7.723437,3.259821,7.673956,0.682484,1.625023,6.702303,4.456851,-9.382403,-0.277325,-4.258450,5.007465,-0.503741,-9.723013,1.191685,5.328026,-1.805807,-6.949339,-7.264810,3.142265,0.162982,-5.748860,3.164730,-1.152560,-1.980856,-0.743040,-1.112399,-7.818239,-7.516047,-3.377337,-5.436126,-3.185047,6.663890,-9.662044,-1.214225,3.037509,6.841556,-3.848741,5.412138,-5.854390,-3.530372,-2.083306,-3.366202,0.172638,-4.192385,2.442341,8.071312,7.097903,-9.682999,-7.962908,8.968769,8.100802,1.279605,3.043888,-7.331094,8.522295,-4.438298,2.951829,-0.310500,1.035503,0.437049,-3.605499,-5.546515,5.073123,9.440812,4.822997,4.735082,8.932522,8.037951,-1.494036,-2.098639,-5.842494,6.805807,-9.762216,-0.453815,-7.008141,-6.730881,-2.611552,-0.768144,5.572323,7.245266,-0.064392,6.281052,-2.470230,-4.215805,-3.643972,-8.712464,-9.450047,5.696166,3.836981,-4.776753,9.305321,-1.788772,-0.619313,6.277644,1.614104,-9.081436,5.099097,7.407577,-2.154989,-1.751475,5.232925,6.914420,4.288711,-8.416189,-2.001511,-3.249205,5.400548,0.904003,-9.558875,4.797451,-9.407357,4.736620,-0.418723,5.460617,7.492786,8.940733,-8.358138,-3.859084,5.222479,-7.213815,4.939379,2.960824,-0.939825,-0.512150,4.048529,-4.595285,-5.037636,-7.696333,-5.060486,7.827833,1.418085,-6.167433,-5.084765,9.607444,6.324444,9.036753,1.734523,2.328529,-3.298326,-7.803488,-1.043857,2.132105,-0.014976,0.627918,2.565230,-5.363945,6.375397,-4.830563,6.969535,-1.965414,1.990359,-4.573924,-5.413791,-8.748661,8.657911,6.803289,2.256376,-0.193365,-1.775767,3.767811,5.259737,-9.082931,-6.236467,-9.918129,1.810524,0.009692,-0.411802,9.049774,7.186883,6.081666,-7.633011,-0.756701,3.573828,2.235593,-7.066808,7.330847,6.854536,4.325417,-6.462929,7.219064,-3.603408,1.006910,-2.863015,0.698588,-4.882808,0.804639,5.487540,7.827531,-0.800563,-4.235906,5.719313,-8.815905,-5.321037,-4.602875,7.782556,-0.182983,-6.265456,6.517246,-8.936619,3.174172,6.525408]], dtype = "float64")#candidate|14344|(1, 605)|const|float64
call_14340 = relay.TupleGetItem(func_8305_call(relay.reshape(var_14341.astype('int64'), []), relay.reshape(const_14342.astype('int64'), [1440,]), relay.reshape(const_14343.astype('float64'), [6,]), relay.reshape(const_14344.astype('float64'), [605,]), ), 1)
call_14345 = relay.TupleGetItem(func_8310_call(relay.reshape(var_14341.astype('int64'), []), relay.reshape(const_14342.astype('int64'), [1440,]), relay.reshape(const_14343.astype('float64'), [6,]), relay.reshape(const_14344.astype('float64'), [605,]), ), 1)
func_11892_call = mod.get_global_var('func_11892')
func_11898_call = mutated_mod.get_global_var('func_11898')
var_14347 = relay.var("var_14347", dtype = "float32", shape = (312,))#candidate|14347|(312,)|var|float32
call_14346 = relay.TupleGetItem(func_11892_call(relay.reshape(var_14341.astype('int64'), []), relay.reshape(var_14347.astype('float32'), [312,]), relay.reshape(const_14342.astype('float64'), [12, 120]), relay.reshape(call_14340.astype('float64'), [12, 120]), ), 4)
call_14348 = relay.TupleGetItem(func_11898_call(relay.reshape(var_14341.astype('int64'), []), relay.reshape(var_14347.astype('float32'), [312,]), relay.reshape(const_14342.astype('float64'), [12, 120]), relay.reshape(call_14340.astype('float64'), [12, 120]), ), 4)
output = relay.Tuple([call_14324,call_14340,var_14341,const_14342,const_14343,const_14344,call_14346,var_14347,])
output2 = relay.Tuple([call_14325,call_14345,var_14341,const_14342,const_14343,const_14344,call_14348,var_14347,])
func_14349 = relay.Function([var_14341,var_14347,], output)
mod['func_14349'] = func_14349
mod = relay.transform.InferType()(mod)
var_14350 = relay.var("var_14350", dtype = "int64", shape = ())#candidate|14350|()|var|int64
var_14351 = relay.var("var_14351", dtype = "float32", shape = (312,))#candidate|14351|(312,)|var|float32
output = func_14349(var_14350,var_14351,)
func_14352 = relay.Function([var_14350,var_14351,], output)
mutated_mod['func_14352'] = func_14352
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11493_call = mod.get_global_var('func_11493')
func_11495_call = mutated_mod.get_global_var('func_11495')
call_14406 = relay.TupleGetItem(func_11493_call(), 1)
call_14407 = relay.TupleGetItem(func_11495_call(), 1)
output = call_14406
output2 = call_14407
func_14414 = relay.Function([], output)
mod['func_14414'] = func_14414
mod = relay.transform.InferType()(mod)
mutated_mod['func_14414'] = func_14414
mutated_mod = relay.transform.InferType()(mutated_mod)
func_14414_call = mutated_mod.get_global_var('func_14414')
call_14415 = func_14414_call()
output = call_14415
func_14416 = relay.Function([], output)
mutated_mod['func_14416'] = func_14416
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10424_call = mod.get_global_var('func_10424')
func_10426_call = mutated_mod.get_global_var('func_10426')
call_14440 = relay.TupleGetItem(func_10424_call(), 2)
call_14441 = relay.TupleGetItem(func_10426_call(), 2)
var_14443 = relay.var("var_14443", dtype = "float64", shape = (605,))#candidate|14443|(605,)|var|float64
bop_14444 = relay.left_shift(call_14440.astype('uint8'), relay.reshape(var_14443.astype('uint8'), relay.shape_of(call_14440))) # shape=(605,)
bop_14447 = relay.left_shift(call_14441.astype('uint8'), relay.reshape(var_14443.astype('uint8'), relay.shape_of(call_14441))) # shape=(605,)
output = bop_14444
output2 = bop_14447
F = relay.Function([var_14443,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_14443,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
	relay.transform.ToBasicBlockNormalForm(),
	relay.transform.FuseOps(3),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

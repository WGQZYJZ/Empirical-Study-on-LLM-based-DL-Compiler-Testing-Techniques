import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_243 = relay.var("var_243", dtype = "float64", shape = (4, 13, 10))#candidate|243|(4, 13, 10)|var|float64
uop_244 = relay.sinh(var_243.astype('float64')) # shape=(4, 13, 10)
output = relay.Tuple([uop_244,])
output2 = relay.Tuple([uop_244,])
func_248 = relay.Function([var_243,], output)
mod['func_248'] = func_248
mod = relay.transform.InferType()(mod)
mutated_mod['func_248'] = func_248
mutated_mod = relay.transform.InferType()(mutated_mod)
var_249 = relay.var("var_249", dtype = "float64", shape = (4, 13, 10))#candidate|249|(4, 13, 10)|var|float64
func_248_call = mutated_mod.get_global_var('func_248')
call_250 = func_248_call(var_249)
output = call_250
func_251 = relay.Function([var_249], output)
mutated_mod['func_251'] = func_251
mutated_mod = relay.transform.InferType()(mutated_mod)
var_881 = relay.var("var_881", dtype = "int16", shape = (8, 1, 16))#candidate|881|(8, 1, 16)|var|int16
var_882 = relay.var("var_882", dtype = "int16", shape = (8, 14, 16))#candidate|882|(8, 14, 16)|var|int16
bop_883 = relay.bitwise_xor(var_881.astype('int16'), var_882.astype('int16')) # shape=(8, 14, 16)
func_248_call = mod.get_global_var('func_248')
func_251_call = mutated_mod.get_global_var('func_251')
const_899 = relay.const([[-0.964449,3.060003,9.705141,-5.759629],[0.464254,-4.639621,5.542819,9.112364],[8.973235,5.651521,-5.418003,-1.435721],[3.818653,5.561609,-6.168088,3.306551],[-2.213202,-5.648705,9.172682,-1.813177],[6.791020,1.129008,6.518885,8.204885],[8.198741,-3.982606,-4.555594,0.516565],[-5.438036,9.885499,-7.487455,9.096409],[9.021674,-5.647410,-2.036544,-1.796231],[3.540414,-5.685018,-2.154259,4.805573],[1.051646,1.808657,-3.352579,6.736903],[1.711978,-0.391724,6.859874,3.056002],[1.028051,8.393479,-9.772008,0.732744],[2.360074,-0.208480,-4.841595,4.053145],[8.584316,0.201966,8.567898,-2.025663],[3.700182,-5.006286,-7.014970,9.540575],[4.501685,5.991134,-4.651129,8.161694],[2.159681,-7.827762,7.863294,3.519361],[-2.430349,1.673766,8.849397,0.973648],[-5.056725,0.525149,1.637662,-3.009284],[4.097985,-6.015151,-0.032235,0.853204],[1.856493,9.306977,7.190395,1.954636],[9.159753,7.833543,-5.098332,7.665575],[-4.704741,3.320000,-4.365829,-5.989924],[1.910397,5.293477,-3.479956,7.918864],[-4.443580,-9.219839,9.607467,-2.837875],[-0.386703,5.615855,-3.057296,2.401083],[2.336242,-7.966475,-7.373775,1.547060],[3.707946,-8.837122,4.022107,1.588611],[-0.111190,7.985224,3.773287,4.936214],[4.939929,-7.387590,2.569057,-4.865854],[-0.529236,-5.296534,5.665328,-4.328367],[8.555366,-1.043370,6.775042,-1.611766],[-0.755899,6.981805,7.152521,0.591737],[-3.468810,-3.084568,-5.546372,-9.641247],[2.255502,9.557577,1.928989,3.517087],[-0.216876,6.767076,4.136312,-5.391008],[-6.445146,4.277674,-5.845508,-9.411684],[-6.483098,-3.031976,-1.131014,6.526458],[-6.536255,-3.013540,7.955006,-6.901282],[-8.971094,5.787941,6.360017,7.927317],[0.310207,-9.653203,5.160250,-6.247212],[7.386687,-6.315193,-0.656175,-9.802416],[3.048102,-7.167228,-4.884927,-2.867130],[-7.170139,2.318466,6.458102,0.393627],[0.997919,-5.832544,1.200828,9.062192],[-5.330638,-5.766771,3.310948,6.997727],[5.556863,5.062527,-6.890662,-2.719678],[2.732150,-7.049762,-5.600785,-7.858992],[1.347844,5.068137,1.278202,-1.496236],[-6.518069,-3.606577,8.077319,-6.000117],[8.567817,-4.591488,-3.445191,8.050274],[-7.115484,-5.479160,4.170103,0.749968],[-8.699994,8.731480,4.712638,5.124794],[-6.539510,1.781783,1.701862,8.362767],[-6.154348,-4.449138,-6.092664,-0.475038],[0.412641,-2.267375,2.410488,-6.144112],[-0.047911,-5.672165,1.808066,0.429380],[2.375241,9.322449,4.166238,-9.015676],[-3.542149,-5.275491,-0.617322,-6.918236],[1.965171,-2.252278,-2.498259,-7.390215],[2.650767,-0.232038,-0.743278,-8.435381],[-7.460761,-7.971850,-3.206460,2.788073],[8.707850,-1.959991,4.567035,-8.016985],[1.620680,7.182525,9.512842,-6.857021],[-5.009438,6.244011,-8.659175,1.071060],[6.568301,-4.904045,-9.196250,-0.088106],[3.177843,1.480087,4.489318,-3.353975],[-7.412194,-5.146550,9.543066,-4.619294],[0.198248,8.905725,-1.667360,4.378432],[-9.033633,2.820617,5.068518,8.365628],[-0.992104,0.743904,-3.203054,-3.499833],[-1.380972,-9.714212,5.120119,5.736680],[-1.708586,1.427228,9.141834,-2.143982],[-2.058458,-1.254117,2.486399,1.231251],[-4.922545,-4.622669,-7.985554,-5.432008],[0.496202,-2.088974,0.263034,-8.414655],[-2.466116,-4.372632,-2.794720,-4.794839],[1.198416,-7.984238,-4.597165,-3.688714],[7.029225,1.240983,-2.989340,-5.710268],[-4.724336,-0.432103,-3.350537,2.645759],[-7.135085,2.249845,-6.368475,-6.420066],[-7.159028,-5.410881,-6.695308,-8.775707],[2.824804,8.029923,0.228755,-3.989878],[-7.851906,2.690783,0.943051,-6.502243],[8.244474,-9.157314,6.098601,9.298156],[1.628080,-5.702826,-4.298959,5.342394],[-7.356747,0.771539,-4.584586,5.830941],[9.906645,-5.651912,4.466083,-1.304039],[-9.715031,-5.349095,6.857319,9.680861],[1.772442,-1.719763,-3.404621,-1.199633],[-5.263946,-1.044047,2.650311,-1.913726],[2.928984,6.855036,7.449969,3.930948],[-3.731950,0.879726,5.196608,-0.217721],[-3.909657,-3.210375,8.493489,9.981961],[4.844935,-9.682502,7.365621,5.606182],[0.330891,3.822497,-7.310631,-0.496130],[-3.152979,9.110084,9.961779,-1.188201],[-6.212238,-5.352790,0.409578,-2.227616],[-6.112502,5.135182,0.484214,-5.857359],[8.806425,6.132071,-6.156470,-5.629154],[9.964236,-9.288945,-8.419927,-4.458456],[8.825655,-7.513225,-3.977660,9.514881],[3.768146,-1.389756,2.199966,-5.124116],[-0.125429,0.124245,6.474102,7.099041],[1.078731,7.201485,-3.015738,-3.737439],[1.330587,4.012363,7.113550,-7.653940],[1.009726,0.606374,9.832975,-6.011432],[6.521464,-1.227376,9.616177,1.986691],[0.370437,-6.290042,-9.523390,4.012044],[8.634589,0.629351,-3.676355,-6.183898],[-7.875406,-9.717479,8.172725,0.591593],[-7.287598,4.801269,2.764509,-1.577216],[-4.170795,3.427895,-7.148413,-1.156222],[8.676594,-8.442644,0.463613,1.577440],[9.194113,0.265745,-7.008335,2.184286],[-9.358142,0.933311,-8.289409,-4.934365],[-9.992753,2.216100,-0.954465,0.085208],[-4.725512,1.676344,-4.050382,8.991864],[5.528405,-8.431695,-4.395520,-3.163234],[-7.008517,-6.468921,-7.447307,8.801297],[-3.294264,5.294041,-0.312628,-1.197930],[-5.198223,-3.017331,6.886066,-4.380523],[-7.760326,-0.183666,2.366381,5.191081],[-3.287796,-1.870418,-2.496589,-8.089280],[-1.732004,-6.126608,-4.511376,4.470205],[-7.697523,7.151333,-6.768260,-9.139628],[-8.344606,2.371101,-2.886221,2.159933],[-2.308059,8.567264,-2.629396,-0.569248],[1.587595,3.894552,4.397556,-2.237400]], dtype = "float64")#candidate|899|(130, 4)|const|float64
call_898 = relay.TupleGetItem(func_248_call(relay.reshape(const_899.astype('float64'), [4, 13, 10])), 0)
call_900 = relay.TupleGetItem(func_251_call(relay.reshape(const_899.astype('float64'), [4, 13, 10])), 0)
uop_912 = relay.log2(var_881.astype('float64')) # shape=(8, 1, 16)
func_248_call = mod.get_global_var('func_248')
func_251_call = mutated_mod.get_global_var('func_251')
call_918 = relay.TupleGetItem(func_248_call(relay.reshape(const_899.astype('float64'), [4, 13, 10])), 0)
call_919 = relay.TupleGetItem(func_251_call(relay.reshape(const_899.astype('float64'), [4, 13, 10])), 0)
output = relay.Tuple([bop_883,call_898,const_899,uop_912,call_918,])
output2 = relay.Tuple([bop_883,call_900,const_899,uop_912,call_919,])
func_920 = relay.Function([var_881,var_882,], output)
mod['func_920'] = func_920
mod = relay.transform.InferType()(mod)
var_921 = relay.var("var_921", dtype = "int16", shape = (8, 1, 16))#candidate|921|(8, 1, 16)|var|int16
var_922 = relay.var("var_922", dtype = "int16", shape = (8, 14, 16))#candidate|922|(8, 14, 16)|var|int16
output = func_920(var_921,var_922,)
func_923 = relay.Function([var_921,var_922,], output)
mutated_mod['func_923'] = func_923
mutated_mod = relay.transform.InferType()(mutated_mod)
var_975 = relay.var("var_975", dtype = "float32", shape = (9, 9, 9))#candidate|975|(9, 9, 9)|var|float32
uop_976 = relay.acosh(var_975.astype('float32')) # shape=(9, 9, 9)
func_248_call = mod.get_global_var('func_248')
func_251_call = mutated_mod.get_global_var('func_251')
var_982 = relay.var("var_982", dtype = "float64", shape = (520,))#candidate|982|(520,)|var|float64
call_981 = relay.TupleGetItem(func_248_call(relay.reshape(var_982.astype('float64'), [4, 13, 10])), 0)
call_983 = relay.TupleGetItem(func_251_call(relay.reshape(var_982.astype('float64'), [4, 13, 10])), 0)
output = relay.Tuple([uop_976,call_981,var_982,])
output2 = relay.Tuple([uop_976,call_983,var_982,])
func_986 = relay.Function([var_975,var_982,], output)
mod['func_986'] = func_986
mod = relay.transform.InferType()(mod)
var_987 = relay.var("var_987", dtype = "float32", shape = (9, 9, 9))#candidate|987|(9, 9, 9)|var|float32
var_988 = relay.var("var_988", dtype = "float64", shape = (520,))#candidate|988|(520,)|var|float64
output = func_986(var_987,var_988,)
func_989 = relay.Function([var_987,var_988,], output)
mutated_mod['func_989'] = func_989
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1006 = relay.const([[[8.064701],[-9.965666],[0.683900],[0.355845],[6.207631],[8.610427],[7.943061],[-2.998547]],[[-0.249080],[6.251953],[-7.661136],[-4.313342],[2.934206],[-9.347020],[8.964168],[9.242427]],[[8.470274],[2.041585],[2.197762],[4.690340],[8.502829],[-6.102829],[-5.028494],[4.805796]],[[9.476162],[1.142437],[-8.436724],[-8.663841],[2.524044],[-8.890520],[-1.224224],[2.666029]],[[9.787995],[-4.157837],[1.467152],[3.849755],[-3.900172],[-4.636454],[-7.451059],[1.408424]]], dtype = "float32")#candidate|1006|(5, 8, 1)|const|float32
const_1007 = relay.const([[[-0.509905,-8.290584,-6.523605,-7.845093,-3.560783,-5.668149,2.953473,7.045127,-4.852311,9.375992,-1.522402,-4.392476,3.676356,7.769260],[-0.473853,-7.208058,-7.641634,-2.387699,4.329893,4.628128,-2.572934,4.294430,-0.532504,2.306259,3.461697,4.941665,-7.329340,-1.142673],[9.019446,1.223769,-7.356789,-4.932304,-4.974510,5.953182,1.870985,-2.020472,6.394626,0.181658,-7.052688,-4.100382,-6.939304,6.202966],[4.530631,-3.809586,6.765922,8.110730,-1.122943,-0.477565,-0.837954,-3.380471,-9.162545,-6.757664,2.485015,3.914236,-8.889360,2.726822],[9.291774,6.148358,0.028149,5.339560,2.503694,-8.055438,-4.998942,-5.383537,2.945221,8.059264,5.455808,3.983919,7.383746,-5.360478],[-8.789418,-7.355790,1.694204,3.197697,-1.958103,4.982057,5.422925,6.400308,5.936821,-7.393728,-1.073844,-5.627365,9.614827,-4.292368],[4.029190,-9.633043,3.942525,2.727674,-1.639556,5.171597,-1.421589,-7.671722,-6.133467,1.627656,-4.402489,-4.002899,4.559567,-9.762732],[-1.545132,-7.601510,-7.392152,-7.617854,4.315297,-9.097983,-1.050903,-1.593299,-4.608436,-3.995452,-7.054907,-0.190259,7.321935,-5.200788]],[[-7.643418,-9.619682,2.280717,-9.283418,5.458908,9.695306,-6.959607,8.354626,0.682005,9.109110,-8.455024,4.857702,-1.537095,1.725505],[-9.485282,-5.742125,2.654487,-2.981687,8.604717,-0.670682,1.929080,-1.707018,9.141749,-7.698418,6.187713,-9.684040,9.218570,5.673896],[-2.282130,7.474078,-2.555452,8.464416,-7.429772,-7.146712,-8.052652,4.179033,5.488206,9.128436,9.470061,6.449827,-8.273139,-1.572734],[7.696640,8.292321,7.935064,7.217546,-1.129730,0.501626,-5.656379,6.012965,-6.428460,-0.363415,-4.066045,-1.582645,6.858268,-4.971881],[8.992962,5.008583,-6.911184,-7.358813,2.199126,4.754301,-4.302651,7.125200,1.747258,9.841066,0.781169,4.982679,-3.432191,2.513315],[9.502651,3.161633,-4.069495,-4.543475,2.707607,-7.715549,-6.966907,-8.826567,-8.214290,1.559902,-1.074987,8.355768,-2.724905,4.928968],[-0.031018,-3.537004,5.739797,3.460648,-1.421264,-1.092943,-8.687752,-7.486280,0.990812,-3.547730,-5.681186,3.094369,-9.458946,-7.850548],[3.194236,8.453000,-2.396954,7.458224,0.783104,-0.581063,-3.355210,9.292068,2.790935,1.927207,8.112903,3.933363,6.466237,-3.575691]],[[0.982916,-6.373924,4.899096,4.423716,9.372367,3.376335,7.492991,-7.971900,-3.533445,-1.261996,-2.144348,-1.702516,9.615660,9.423881],[-0.379358,5.151650,3.178411,-9.926008,6.523581,-6.504762,8.420490,-2.526836,4.461527,-0.610336,-1.085266,-9.635700,9.344664,-6.242388],[-9.338313,4.302774,-4.250658,-2.621382,7.815017,-5.738521,-6.752640,0.637721,-4.822357,-7.000658,2.382517,2.341584,-9.777119,-6.470454],[0.258496,-9.234139,-1.350751,-3.075850,-6.877838,-0.287322,-9.322773,1.828382,-0.600663,-8.118594,-2.729654,-9.949545,9.897015,7.770578],[4.750245,5.138035,7.379673,-0.356039,-6.226589,-6.209628,-2.105030,-6.520908,1.669045,0.137173,-9.353719,-3.189134,8.599916,-5.425243],[-6.427192,-5.207435,8.996149,-7.136124,6.383152,2.855102,-0.846654,2.056724,-1.362411,8.978553,0.870531,7.694147,-3.820284,-6.228070],[8.163833,-4.973390,-6.933900,7.559563,3.070349,-2.000825,2.517681,-7.053205,1.988122,-9.082889,7.303654,2.628419,-3.686278,-5.057087],[-7.977483,-0.484293,-2.924679,-3.055777,8.989995,-6.610120,2.960527,-6.861204,-3.837592,-5.413322,-8.461243,-9.537150,-4.209393,-0.763235]],[[-6.634526,9.875242,2.881662,-9.598970,0.475421,-9.358546,0.619962,1.216969,-4.062999,7.925278,-7.162378,-2.305935,-0.788902,-2.674365],[6.301334,3.070330,8.236444,-3.530840,5.346386,-9.442350,1.409235,9.753076,-5.515370,-5.100196,-9.721782,5.027944,0.320338,8.080151],[-4.346266,9.646582,-5.254995,-5.467981,6.942192,-1.016789,4.758766,8.186064,-6.655337,8.795108,3.214397,7.118860,0.383051,-3.544908],[-8.352930,-2.038597,4.691819,-5.768977,7.496958,-5.491719,-4.167231,2.454235,0.897972,-5.750847,5.654958,-6.338021,3.014006,2.078704],[1.490697,-1.279753,8.077746,-0.625828,-2.439968,8.677479,6.054241,-1.880576,-6.003199,-2.056340,4.808545,2.751268,-3.324257,6.257193],[1.269709,5.904777,0.036216,1.853375,-5.335998,3.941196,-2.788719,-9.807198,-0.142522,8.406727,-2.693710,0.782420,6.421201,5.953714],[-0.666093,5.348115,0.372478,-1.243304,-9.270909,1.439278,-3.443261,8.084072,4.259252,-4.479571,3.613184,3.037943,3.674770,1.375135],[3.453989,3.054733,6.681575,-5.049369,2.903159,4.628278,-8.304581,-6.721384,-9.145956,1.614924,-0.914815,8.562582,-6.328716,7.185900]],[[6.471521,-0.118198,9.203314,9.697152,-0.101495,5.066796,-7.806352,-1.719650,-8.608670,0.824359,-3.617002,-6.665987,0.947386,-1.959286],[-9.876767,9.386903,-1.514157,0.792979,5.032388,8.742795,-9.030861,6.358773,5.340140,6.639992,7.287272,-4.466866,1.185457,-5.405674],[8.336585,-3.587886,-1.689195,7.051851,7.783181,4.246785,5.295883,8.307865,0.627372,3.418367,-7.339935,-9.697708,7.403621,8.419824],[-2.207962,9.280385,4.925655,9.749522,-4.054824,-8.293924,6.375140,-2.604765,-1.831272,-5.087503,3.877303,0.780270,-0.809560,0.190579],[-0.158381,3.222048,-3.827303,-5.623980,-6.662497,4.892343,5.043322,0.284318,8.875096,7.773849,3.451203,-4.666351,4.472870,-7.282374],[4.086462,-3.273832,-2.542481,-6.319619,-3.662580,-6.951920,6.975420,6.814480,-0.697336,9.967335,0.076596,2.588638,3.922280,8.449967],[5.165971,-7.608428,7.294827,3.521616,-7.125809,-6.387680,-8.632659,-8.938214,-8.891807,-1.312602,-5.804128,0.546628,5.649055,-7.801021],[-4.559452,1.366943,1.488503,-6.706030,-6.594457,-6.453457,-6.879067,-4.002382,-6.424253,-0.504241,-5.663426,6.030709,-9.014706,-2.994860]]], dtype = "float32")#candidate|1007|(5, 8, 14)|const|float32
bop_1008 = relay.power(const_1006.astype('float32'), const_1007.astype('float32')) # shape=(5, 8, 14)
output = relay.Tuple([bop_1008,])
output2 = relay.Tuple([bop_1008,])
func_1011 = relay.Function([], output)
mod['func_1011'] = func_1011
mod = relay.transform.InferType()(mod)
output = func_1011()
func_1012 = relay.Function([], output)
mutated_mod['func_1012'] = func_1012
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1011_call = mod.get_global_var('func_1011')
func_1012_call = mutated_mod.get_global_var('func_1012')
call_1022 = relay.TupleGetItem(func_1011_call(), 0)
call_1023 = relay.TupleGetItem(func_1012_call(), 0)
output = call_1022
output2 = call_1023
func_1027 = relay.Function([], output)
mod['func_1027'] = func_1027
mod = relay.transform.InferType()(mod)
mutated_mod['func_1027'] = func_1027
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1027_call = mutated_mod.get_global_var('func_1027')
call_1028 = func_1027_call()
output = call_1028
func_1029 = relay.Function([], output)
mutated_mod['func_1029'] = func_1029
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1027_call = mod.get_global_var('func_1027')
func_1029_call = mutated_mod.get_global_var('func_1029')
call_1045 = func_1027_call()
call_1046 = func_1027_call()
func_1011_call = mod.get_global_var('func_1011')
func_1012_call = mutated_mod.get_global_var('func_1012')
call_1058 = relay.TupleGetItem(func_1011_call(), 0)
call_1059 = relay.TupleGetItem(func_1012_call(), 0)
output = relay.Tuple([call_1045,call_1058,])
output2 = relay.Tuple([call_1046,call_1059,])
func_1064 = relay.Function([], output)
mod['func_1064'] = func_1064
mod = relay.transform.InferType()(mod)
output = func_1064()
func_1065 = relay.Function([], output)
mutated_mod['func_1065'] = func_1065
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1064_call = mod.get_global_var('func_1064')
func_1065_call = mutated_mod.get_global_var('func_1065')
call_1066 = relay.TupleGetItem(func_1064_call(), 0)
call_1067 = relay.TupleGetItem(func_1065_call(), 0)
output = relay.Tuple([call_1066,])
output2 = relay.Tuple([call_1067,])
func_1089 = relay.Function([], output)
mod['func_1089'] = func_1089
mod = relay.transform.InferType()(mod)
mutated_mod['func_1089'] = func_1089
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1089_call = mutated_mod.get_global_var('func_1089')
call_1090 = func_1089_call()
output = call_1090
func_1091 = relay.Function([], output)
mutated_mod['func_1091'] = func_1091
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1027_call = mod.get_global_var('func_1027')
func_1029_call = mutated_mod.get_global_var('func_1029')
call_1119 = func_1027_call()
call_1120 = func_1027_call()
uop_1148 = relay.acos(call_1119.astype('float32')) # shape=(5, 8, 14)
uop_1150 = relay.acos(call_1120.astype('float32')) # shape=(5, 8, 14)
func_1064_call = mod.get_global_var('func_1064')
func_1065_call = mutated_mod.get_global_var('func_1065')
call_1154 = relay.TupleGetItem(func_1064_call(), 1)
call_1155 = relay.TupleGetItem(func_1065_call(), 1)
output = relay.Tuple([uop_1148,call_1154,])
output2 = relay.Tuple([uop_1150,call_1155,])
func_1157 = relay.Function([], output)
mod['func_1157'] = func_1157
mod = relay.transform.InferType()(mod)
output = func_1157()
func_1158 = relay.Function([], output)
mutated_mod['func_1158'] = func_1158
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1027_call = mod.get_global_var('func_1027')
func_1029_call = mutated_mod.get_global_var('func_1029')
call_1182 = func_1027_call()
call_1183 = func_1027_call()
var_1186 = relay.var("var_1186", dtype = "float32", shape = (5, 8, 14))#candidate|1186|(5, 8, 14)|var|float32
bop_1187 = relay.greater_equal(call_1182.astype('bool'), relay.reshape(var_1186.astype('bool'), relay.shape_of(call_1182))) # shape=(5, 8, 14)
bop_1190 = relay.greater_equal(call_1183.astype('bool'), relay.reshape(var_1186.astype('bool'), relay.shape_of(call_1183))) # shape=(5, 8, 14)
output = bop_1187
output2 = bop_1190
func_1191 = relay.Function([var_1186,], output)
mod['func_1191'] = func_1191
mod = relay.transform.InferType()(mod)
var_1192 = relay.var("var_1192", dtype = "float32", shape = (5, 8, 14))#candidate|1192|(5, 8, 14)|var|float32
output = func_1191(var_1192)
func_1193 = relay.Function([var_1192], output)
mutated_mod['func_1193'] = func_1193
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1236 = relay.const([[[2.107510,0.352231,-0.956239,-0.629172,4.025967,0.090345,-8.307304,3.032299,9.763816,-8.733992,8.051543,0.698333,3.526499,8.160517,3.960679,0.081477],[-5.628487,-2.710955,4.592192,0.288962,-8.922105,-1.624544,8.153611,-7.176105,9.638880,-6.496386,0.023110,3.623077,9.047433,1.604254,3.810160,6.841396],[5.796050,-9.304507,6.572160,-1.769124,0.008584,-9.275604,-6.228285,6.709486,4.827204,5.601733,9.107226,3.215922,8.605047,3.998766,2.703784,-9.951657],[-8.224855,-6.765319,5.867192,4.415639,1.828391,4.625973,-4.497374,5.349461,-2.165775,5.789953,9.595070,-4.467089,4.045058,5.787738,0.522366,7.806007],[8.270592,2.720275,-6.173206,6.922994,-1.254165,-4.511793,7.951402,6.764700,-8.495581,8.755905,9.446848,-4.189452,-9.792038,-5.225575,6.154522,5.171966],[7.491747,8.745364,-5.101712,7.103743,1.831931,4.131392,-2.154929,3.746555,8.488485,-6.916271,-5.269928,2.491589,8.994946,-4.527236,-6.414697,4.525963],[-6.568080,1.744634,9.618865,-0.635199,-4.227809,0.786294,-5.598074,3.306754,1.119310,-3.517303,-8.982502,-0.400088,3.782425,3.673652,5.340401,9.796394]],[[4.680208,-8.883555,-3.644076,-1.461868,-7.173315,5.978474,-3.673697,9.102024,-0.953985,0.098901,6.484706,-0.613368,5.135251,-9.145846,-5.224536,-2.405173],[8.628120,-9.969010,7.540535,-0.969776,-9.590842,-3.507977,4.758338,4.780692,-2.140801,-0.540465,-1.971192,-1.338807,-0.765484,-3.030432,9.175844,5.259967],[4.703581,-1.198584,-3.703095,3.087653,-7.503927,5.240701,6.096187,9.041289,8.295408,3.253103,3.031166,9.919530,7.121823,-7.957855,4.414944,3.583622],[-2.045479,3.384387,-4.296656,7.254113,9.405676,-5.546782,9.495954,-9.833378,-7.709931,5.252545,6.994730,1.031474,-2.134499,1.073150,8.247927,1.862237],[-8.169376,-1.376859,7.015782,5.103343,-2.275812,8.527017,-3.565305,3.938342,8.718511,-9.493165,2.632436,4.493335,1.231036,2.688074,8.987998,-8.766128],[-5.270330,7.438393,5.878224,-0.691409,-9.605667,8.391704,4.887555,1.454632,6.153646,8.854426,-0.242808,5.437842,-2.250068,-9.641419,7.155366,5.149419],[-5.863738,7.256614,-0.526892,2.338284,5.124330,7.688613,3.965742,9.207968,-6.681509,-5.039522,-6.333657,-4.789613,-8.142538,-2.358137,-5.604142,4.799224]],[[-7.629863,-1.441968,-3.275017,-6.678359,-0.966731,-2.427097,-4.562859,1.794732,8.893264,3.689971,5.366968,-2.760490,4.642704,7.552656,-0.363651,-7.507357],[2.760288,6.371245,-3.258764,2.387218,3.166151,5.133499,8.669063,-4.903224,-0.181603,-2.123624,-8.280254,4.209592,-1.568189,3.134015,-8.179889,1.158845],[-3.217778,5.509407,-7.871913,5.522434,6.244649,-9.168499,1.441549,5.291484,-0.343349,4.072046,-8.425972,-1.001904,7.342898,9.512940,1.043824,4.763308],[-9.758706,9.570347,3.646525,-8.362820,0.189701,-2.115502,-4.635239,-0.926155,7.169452,5.588730,-6.365783,-9.387000,4.424158,6.570128,5.385601,-8.679589],[-5.548482,-1.568387,-5.679373,-8.910525,7.237860,9.235547,-4.101128,0.915830,4.537889,5.923217,-4.511108,-0.660256,3.361802,6.279058,-7.229793,-6.026219],[7.668832,5.816077,-9.526110,3.718915,-8.453295,4.170398,-1.717766,-0.531274,8.541753,9.055091,-2.436044,9.151108,-2.751091,-9.603768,-5.206656,8.733686],[0.752129,8.092871,-2.758586,-8.715801,7.909610,6.384667,-4.782894,-2.016175,2.546004,6.053472,4.165443,1.161839,3.434896,-5.007466,0.504870,8.279385]],[[-2.377128,-6.307901,6.444986,8.798520,-4.329930,-1.525367,0.425102,-0.937454,8.098748,-3.731122,-4.363767,-9.387184,4.136796,8.025021,-7.136422,4.175530],[5.816880,4.708135,-6.999543,-6.633271,0.734232,8.074094,0.699657,5.408194,-2.998845,8.585290,2.615160,-1.831222,-6.865265,0.689991,6.529414,-0.604667],[-2.730725,2.852397,-8.479920,9.596985,7.577857,-6.234142,-5.026573,3.619707,1.731049,6.606671,-2.830585,4.014494,7.613939,2.779947,-4.191851,-6.587346],[6.007506,3.049828,0.364160,0.352527,-7.908591,9.969444,5.700838,3.943235,4.975904,6.723587,-5.190070,-7.262829,-1.183131,-9.544630,6.176414,9.204589],[0.768522,5.230780,-5.805287,6.564922,-8.131436,4.064220,3.155284,0.626849,-2.153059,-4.792542,1.055491,-7.654084,-6.524577,-5.825447,2.881174,-7.527766],[9.977593,2.611918,-4.279565,-4.175528,2.359556,-9.356439,-6.677377,0.868068,-9.306383,2.531824,8.172333,3.665285,4.574206,5.854025,-9.409675,2.040116],[5.412694,0.826851,6.578914,8.673776,2.723489,2.778576,3.819519,-4.616201,-5.037654,0.591324,-6.761889,3.004580,2.490903,-9.631672,-7.166802,4.883690]],[[1.622402,2.296486,-1.902586,8.824584,-6.022945,9.683813,-3.078601,8.468545,6.357387,-9.732036,-2.390364,9.561088,-2.258435,5.947995,1.176256,4.352100],[9.517335,6.195059,5.239932,9.528449,4.751816,1.328472,0.924150,-6.705671,4.197685,-6.572632,-5.842847,5.533119,7.108709,2.324258,8.162665,6.090439],[0.240696,-0.050714,-7.005409,-7.283011,-3.041182,5.917568,8.811640,9.813838,-2.423771,-2.612589,7.214575,9.897520,-9.149772,-0.943888,4.602052,-8.552174],[-5.792732,9.264699,-8.272599,4.226463,1.056823,-6.885541,-2.278234,-8.422585,2.501593,-1.867519,-6.394774,-3.527088,-6.247072,1.233270,-1.746713,1.124478],[-2.323912,6.558768,-4.749945,-6.672189,6.763076,-4.404439,-0.936434,-2.604933,6.425942,-3.572734,3.632146,-8.786050,7.142018,8.456703,3.199714,0.328560],[-9.942141,4.034911,0.958200,-0.563560,-9.938557,-7.328018,8.193131,6.592565,8.393317,5.456836,-2.182709,4.212089,1.638769,8.179120,7.204999,-9.512379],[-9.930768,-5.616350,7.543781,-2.150181,-9.904104,-9.500302,-4.776866,-4.637996,-1.826732,-9.524227,-2.074379,-9.313256,-2.462801,-3.625428,-9.240013,6.230497]],[[-7.287488,-4.578043,0.129076,-6.039140,-1.255171,5.328455,-5.856832,-1.921960,8.168805,6.595628,-0.108825,8.732246,7.648252,-9.519104,2.865119,-8.966117],[-4.457001,0.498859,-3.632030,6.299423,4.654517,0.202458,-9.871704,-1.731379,-2.553472,5.642414,8.860190,2.583256,8.622083,6.385088,-1.694535,-2.523760],[-3.195391,-9.353559,7.019809,3.936883,-3.968149,-4.044627,1.889362,6.257220,-0.438291,-6.206833,6.229654,5.930266,-7.360776,7.446181,-3.952377,9.062519],[-6.578512,4.144102,1.153215,-1.275636,7.175126,-2.247716,3.044348,-8.667032,2.354987,5.944904,1.149231,2.410808,3.535448,-7.140140,-7.272043,1.347113],[7.822539,2.474028,9.106353,-3.355772,-6.674952,5.484338,-0.085636,-9.492617,9.118598,1.510825,-7.122336,-8.351970,1.742971,2.619205,-4.948912,-0.469265],[-0.350347,-5.778325,9.509759,-6.034455,2.320416,0.418893,-0.268085,1.539089,-5.363900,-9.507778,2.374619,-6.541492,6.706417,7.050247,-8.815276,4.596802],[1.820287,6.045665,-5.349725,-7.678659,9.111217,-7.250172,4.195254,7.892967,-0.222400,-1.797135,-6.998834,-9.862127,2.038762,4.874915,-5.747170,-3.993856]],[[-3.438870,-0.927052,7.654990,1.448688,6.395994,-5.990148,7.559937,-6.982928,1.655352,-9.173615,8.324484,7.178843,-9.936711,4.029450,3.984873,-8.841250],[6.353612,6.407106,3.226981,4.939908,-6.882060,-1.736168,-7.472984,0.443065,2.163376,3.322737,-7.187041,2.788141,-4.047504,1.162214,-1.560034,5.840128],[1.540135,7.098988,9.506104,9.550781,-0.257701,-9.911919,-7.406723,9.546866,2.683113,-5.915198,3.263587,-9.798160,-3.476352,-2.589256,8.328476,-6.483159],[-9.360661,3.556355,8.590049,1.766116,-3.614967,-9.201947,1.437315,1.595001,-9.797775,-3.877474,9.581735,5.452001,5.578670,0.258283,-8.173368,6.841735],[8.890954,-8.459212,9.268654,-6.273097,2.546951,-3.938768,-0.812965,6.262694,8.978611,6.837492,-8.111000,3.661027,-1.661731,-7.792249,-1.172382,1.748910],[0.722279,-7.718169,3.064686,-3.324804,7.705267,7.799708,-9.425900,9.717384,-1.035833,6.153942,3.613517,-7.356285,2.986608,-7.780769,-1.079080,5.904771],[-6.016965,-2.623932,-6.318161,-4.403724,8.480374,-6.021055,3.351823,-3.931012,-2.699018,-2.879307,-3.279812,4.234850,-7.614982,9.416921,6.664584,-8.695699]],[[6.254707,8.900216,1.529369,2.052677,6.365189,3.805775,7.706760,-1.984522,1.084298,-7.707721,-9.863823,0.450406,8.999249,1.529070,3.744086,-0.179082],[5.842700,-7.135144,-4.752065,4.369171,7.201338,-9.569328,-8.753694,-6.054699,7.110906,7.146755,-4.920017,-8.721966,-9.618210,-6.743323,2.975948,-1.920780],[-7.540400,-8.721993,-0.742396,-1.769692,-2.084175,9.520264,-8.142599,-6.299821,-1.952507,1.712219,-1.753603,-8.287694,8.956338,-0.406549,-8.345854,1.404062],[2.738615,7.309094,-6.970466,-7.989085,-1.429968,6.352249,0.281604,-6.403751,-8.675764,9.027593,-4.782942,9.410091,-9.634317,-3.160983,-7.138795,-8.968209],[4.027339,2.750713,6.579789,-8.827967,4.738786,-8.971958,6.773012,-6.162223,-8.244523,-6.689397,-4.110529,9.087409,4.523060,4.227093,9.216978,-4.198352],[5.381017,-8.248991,5.198427,-6.083971,4.459417,7.019909,0.413392,-3.968946,7.585949,-9.155052,-5.140181,6.295532,-8.546898,1.064087,-8.895174,-5.024403],[3.303807,-5.736646,-2.829718,-8.474739,-5.447939,-6.389161,2.051890,8.345295,-5.057049,-4.934063,1.064965,-8.680740,-5.599196,-8.838680,2.278164,-8.070831]],[[5.733891,8.934596,7.425890,2.541251,-0.625802,-2.734001,-4.243349,-9.908314,5.117231,8.993322,-3.093304,-6.791600,3.344628,9.259549,-0.013116,-5.985120],[6.123211,9.263720,0.823381,-9.908949,-9.434012,6.310415,-0.782760,5.494783,3.045846,3.238264,3.858354,-9.991809,-7.461820,9.689597,-9.432216,-5.997605],[-1.106602,-9.301756,1.276127,3.187247,5.861933,-9.603583,-9.102714,-6.194179,9.849791,-1.424738,1.560827,0.931903,-9.735401,-1.778430,-8.633459,-3.194958],[-7.682154,-0.122988,6.690582,-7.928300,4.982134,2.155869,-6.967486,9.442679,6.881741,-6.005570,-1.094694,-5.934022,6.207578,8.247181,1.684909,-8.736878],[2.160252,1.077835,-6.699233,8.887348,0.291769,8.416131,-8.358017,5.375840,-2.503322,1.282483,1.683302,-2.776405,-8.367806,0.362714,6.493068,-6.988214],[-5.669343,-6.499948,0.720514,-2.651630,-3.956207,-4.588662,-3.288035,-9.798010,-1.919084,-2.886722,8.528093,-9.734781,-4.608154,4.583337,9.764288,-8.493819],[-6.452362,-4.039249,8.725858,-6.590859,-5.579000,-5.063269,-6.240603,-6.497797,-3.094887,-7.320854,8.637226,-6.774570,-6.631506,6.170894,4.052373,-9.364828]]], dtype = "float32")#candidate|1236|(9, 7, 16)|const|float32
var_1237 = relay.var("var_1237", dtype = "float32", shape = (9, 7, 16))#candidate|1237|(9, 7, 16)|var|float32
bop_1238 = relay.divide(const_1236.astype('float32'), relay.reshape(var_1237.astype('float32'), relay.shape_of(const_1236))) # shape=(9, 7, 16)
func_1027_call = mod.get_global_var('func_1027')
func_1029_call = mutated_mod.get_global_var('func_1029')
call_1243 = func_1027_call()
call_1244 = func_1027_call()
func_248_call = mod.get_global_var('func_248')
func_251_call = mutated_mod.get_global_var('func_251')
var_1249 = relay.var("var_1249", dtype = "float64", shape = (520,))#candidate|1249|(520,)|var|float64
call_1248 = relay.TupleGetItem(func_248_call(relay.reshape(var_1249.astype('float64'), [4, 13, 10])), 0)
call_1250 = relay.TupleGetItem(func_251_call(relay.reshape(var_1249.astype('float64'), [4, 13, 10])), 0)
output = relay.Tuple([bop_1238,call_1243,call_1248,var_1249,])
output2 = relay.Tuple([bop_1238,call_1244,call_1250,var_1249,])
func_1254 = relay.Function([var_1237,var_1249,], output)
mod['func_1254'] = func_1254
mod = relay.transform.InferType()(mod)
var_1255 = relay.var("var_1255", dtype = "float32", shape = (9, 7, 16))#candidate|1255|(9, 7, 16)|var|float32
var_1256 = relay.var("var_1256", dtype = "float64", shape = (520,))#candidate|1256|(520,)|var|float64
output = func_1254(var_1255,var_1256,)
func_1257 = relay.Function([var_1255,var_1256,], output)
mutated_mod['func_1257'] = func_1257
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1011_call = mod.get_global_var('func_1011')
func_1012_call = mutated_mod.get_global_var('func_1012')
call_1262 = relay.TupleGetItem(func_1011_call(), 0)
call_1263 = relay.TupleGetItem(func_1012_call(), 0)
var_1272 = relay.var("var_1272", dtype = "float32", shape = (5, 8, 14))#candidate|1272|(5, 8, 14)|var|float32
bop_1273 = relay.maximum(call_1262.astype('int16'), relay.reshape(var_1272.astype('int16'), relay.shape_of(call_1262))) # shape=(5, 8, 14)
bop_1276 = relay.maximum(call_1263.astype('int16'), relay.reshape(var_1272.astype('int16'), relay.shape_of(call_1263))) # shape=(5, 8, 14)
func_986_call = mod.get_global_var('func_986')
func_989_call = mutated_mod.get_global_var('func_989')
const_1281 = relay.const([[1.564927,5.601640,1.687493,-6.604331,1.083172,9.921253,-5.154686,-4.370999,-6.170111],[0.736869,2.891138,-1.251412,-7.224135,-9.480957,-3.706685,4.956567,2.502885,-0.431104],[-7.399445,-4.852548,-1.611434,-6.096721,-4.329989,5.189643,6.547618,5.361744,-6.350024],[8.818939,9.504723,8.676970,3.172016,7.371498,5.516216,7.101197,0.564378,-5.212247],[3.777155,-5.011419,6.485252,0.261908,-9.535155,6.905374,-1.753444,2.479525,0.304886],[3.819771,8.507656,3.674155,-2.205344,7.810690,-0.256259,1.827665,-9.114379,-6.852306],[-7.474438,4.838330,-3.037519,4.187283,4.060908,-2.043957,9.068741,6.222875,-5.482503],[-2.992121,0.103688,-4.392032,3.492274,2.790666,-2.910212,6.806818,7.949075,5.900846],[3.322297,-4.546965,-4.211222,1.700475,1.668987,-1.968623,-6.899843,-4.164026,-7.373530],[6.152988,8.741098,-6.988375,-2.885126,-6.400495,-3.985610,0.500332,-4.949184,-1.097396],[-9.785485,-4.832419,-2.197161,-1.602959,5.654693,-7.623920,4.103554,5.605143,-5.739942],[-4.327709,4.193507,7.888880,7.861461,-6.927106,-6.033900,-9.888386,-6.804085,-9.574809],[3.661651,3.629302,-4.459659,8.697252,-0.069627,-7.070042,-4.865601,7.394593,6.407861],[7.857487,-6.349893,-0.767931,-8.908886,0.077507,7.135753,3.673443,-4.995368,-5.995158],[-6.300209,0.337433,-3.478693,2.104162,-8.060107,1.113970,1.702685,-9.360872,-0.940516],[4.039154,3.979988,6.299904,-4.569293,-4.435967,-6.748446,7.703733,-5.994347,8.367347],[-3.517352,6.971117,7.344790,-7.870040,6.850175,-3.322645,3.795613,-3.664897,4.969170],[-4.593250,-5.239824,-1.684968,0.370139,1.264684,-2.244767,-0.775147,9.360261,-1.736325],[-2.578003,-1.812590,3.985134,6.478516,-9.132310,-7.656613,-1.413071,9.161395,5.575279],[9.894159,-2.489215,-4.555257,3.036010,4.002622,-7.074400,5.579880,1.584110,-1.942498],[0.450714,8.021305,3.876279,1.308145,-4.656013,-3.679722,-4.448549,-3.129699,-0.902222],[-5.463798,-8.137364,-3.076334,3.021183,6.646124,5.204505,5.668983,-6.002507,-1.464976],[-5.609698,0.519801,8.299119,-5.040440,3.365283,-7.810654,9.797810,8.206066,-9.687139],[-6.171474,7.125290,-5.503492,4.158383,8.654838,3.487435,0.110220,6.008083,-3.246397],[-6.410374,9.150209,-8.032750,4.642742,-6.719883,8.228833,9.770990,-8.314798,0.083733],[4.004393,-7.781011,-0.994336,6.225887,-3.661215,-7.966783,8.851483,0.836045,-2.962795],[-3.621833,-2.607075,-8.348527,9.071896,4.853239,6.671645,3.354264,-8.620862,0.384861],[7.698402,-3.152855,-8.372587,-6.452606,-5.986782,-6.461867,0.617702,-0.495946,6.913839],[5.284903,-4.461548,-9.918255,-9.932647,0.604572,6.930544,3.222868,6.660963,-9.511081],[7.155347,6.986886,2.768876,-7.957633,-9.843801,-2.307106,-6.835151,-1.142544,-0.558600],[-9.875821,-8.030007,9.874797,-4.867414,-9.703165,6.494755,0.474568,-1.911452,-6.957286],[-2.436219,-3.121942,9.369948,-4.841994,6.184154,4.250555,3.637033,-7.291199,6.826191],[-6.726834,-7.299936,7.195835,4.170940,-5.311786,2.216845,6.815189,-8.626002,-2.160624],[-5.172763,2.483484,5.145177,-2.822414,-2.348458,4.956516,-0.853674,7.532244,-3.092601],[-9.801495,-0.852132,6.801626,9.186926,6.272037,5.718586,-4.484939,9.322201,8.408790],[-7.855031,0.160523,-6.780252,-4.318815,-6.223207,4.754813,-5.281949,3.515971,4.445096],[-3.846487,4.578709,-3.383543,5.020784,4.192613,-9.630631,3.013697,-6.056401,5.971961],[8.807727,6.329120,1.940636,0.869836,5.829135,-5.199509,0.233603,0.162108,4.040743],[6.910025,-5.735384,8.176032,9.166220,1.830248,9.829531,-6.902078,-7.649815,7.045035],[0.458709,7.399736,4.800274,8.877207,-3.925793,5.704820,-1.950038,-5.339284,2.575244],[0.468480,2.302303,-5.070245,4.270660,3.333700,5.995909,0.196569,6.104157,7.458018],[0.627322,-5.226885,8.355282,1.679088,-5.507229,3.381363,3.165295,5.284747,0.689772],[8.027698,-0.568204,6.361685,6.089535,-0.363600,2.020559,5.589247,-6.358108,9.761446],[-1.333230,0.980663,-1.651762,-4.104318,6.515118,-2.975968,-4.635885,7.085269,9.989865],[-1.388508,-6.262690,8.778902,-4.869280,-9.664355,-2.310945,-8.609571,-1.697793,-4.101267],[-7.902461,-8.758298,-2.537627,3.555784,-4.126857,0.527314,5.295469,5.761056,3.803234],[3.216506,7.822281,-9.347547,2.226349,-0.276633,0.913568,9.593416,-2.016256,4.015709],[-7.690305,2.490443,-1.985920,-8.635900,-5.172279,1.475137,4.069322,1.141435,-6.293294],[-9.149039,-2.576657,9.866243,1.267866,-8.509449,-1.842064,-6.293378,-2.900237,0.910368],[4.766348,-7.020386,9.681430,4.566918,-2.322376,-6.678073,-8.200068,6.826400,0.879930],[-2.009739,6.892541,-8.242712,6.452902,-2.884194,-6.533745,-6.541415,-0.064310,8.331197],[-4.152169,-4.024342,6.195294,9.232861,7.629716,0.305979,0.147235,-9.971651,-5.474653],[-3.819373,8.626487,0.547662,-5.243201,0.131266,-1.746801,2.288074,2.769713,6.189303],[-9.858753,9.371772,5.572646,-6.777473,-4.435064,3.950162,-9.980878,-0.131625,7.013183],[2.830437,3.245645,-7.833944,-3.700614,-8.912412,0.058869,-8.918005,-3.004522,3.599194],[-1.373304,-8.590909,-1.119244,1.700084,9.749754,4.036596,7.183587,0.090263,5.971511],[-6.602449,1.752757,-9.092570,9.928942,-4.026574,-7.874922,9.793499,2.106174,5.040752],[-8.089553,-2.186362,7.489387,-9.467545,8.568943,6.308740,7.480711,-0.171961,9.456942],[4.564020,7.910507,-6.106768,1.454615,3.116808,-0.912406,7.216795,1.060784,-2.518235],[0.552319,-4.900104,-5.542529,0.081064,4.217765,-8.746980,-1.839686,7.398470,5.001244],[0.419901,-6.453139,-6.566493,-6.327535,3.522815,6.416683,-7.504499,-3.960570,2.602543],[-1.416664,-2.487454,-7.954719,-1.271401,-9.203833,5.361558,-6.861864,-1.206160,4.097204],[3.091615,-4.073253,2.125080,-7.374591,-3.612325,-0.817171,-4.811395,3.983545,9.689489],[0.840372,-6.230157,5.548072,-4.751176,0.591679,-3.644314,9.781265,-7.125266,-2.537884],[4.218140,7.114712,1.654909,-7.857141,-1.761901,-5.168559,9.135391,-4.065210,6.459304],[0.760319,8.719202,0.250627,9.001062,0.448700,-4.852988,-5.617318,-0.078857,-2.141780],[6.358579,0.790647,-2.842847,7.273204,-6.772045,8.951756,-7.838069,5.701285,9.732060],[0.745356,5.210468,-3.236195,5.899973,4.308090,-8.718786,6.622282,-8.210082,-2.377633],[5.788668,0.457606,4.484697,8.959774,6.193387,2.301349,4.623055,-8.948571,1.808701],[9.124335,0.058047,-8.829828,-2.013607,2.193770,9.757869,9.125186,-7.557049,-8.129488],[9.287125,5.835797,-5.512068,-4.575096,9.777412,-0.009852,1.329859,8.255686,-0.639139],[6.154567,-0.280125,-9.069374,-0.181218,-5.412544,-4.791120,-3.297363,-1.522500,-6.172523],[-2.649434,0.761666,3.614061,-6.508266,0.378457,9.827019,1.820213,-7.113127,-5.081505],[3.841749,-9.690495,9.778187,-6.838381,-4.776878,6.105892,8.929939,8.029950,7.307884],[-6.994918,-7.078162,-2.671640,-7.139855,-4.820245,0.455504,7.261853,6.775269,-6.360816],[-2.479662,-0.509786,1.439767,4.654047,1.506634,4.878353,-3.951305,-6.607885,2.846756],[-6.086097,-4.378848,-8.663089,7.093570,9.236117,3.925534,1.543751,-5.961321,6.152193],[2.684200,7.663013,0.073149,-3.902556,-3.842246,-5.733697,6.746463,4.735332,2.452162],[1.481389,2.760870,8.188699,-9.783397,-9.000019,-2.839356,-8.317613,5.600395,-3.931314],[9.749268,-1.478317,8.198559,6.724163,5.875198,0.245004,5.943355,-1.967191,0.155945],[0.851305,-2.486867,-8.789670,0.068405,1.817511,-9.246780,-1.361781,-5.284876,-8.189814]], dtype = "float32")#candidate|1281|(81, 9)|const|float32
const_1282 = relay.const([[-5.477638],[-0.326253],[4.756744],[-1.892559],[7.991755],[-7.982221],[-3.839536],[-8.421073],[-9.111143],[7.276451],[-0.689523],[5.684423],[-3.368713],[4.270535],[-7.408673],[-2.004741],[9.417811],[3.506477],[-7.794031],[8.006134],[-3.828524],[5.313396],[-4.211893],[-0.390700],[4.814459],[2.827799],[7.630594],[-1.986288],[2.425348],[-1.914326],[2.225001],[-4.048094],[0.226781],[3.122569],[-9.961941],[2.429942],[2.044300],[5.284517],[3.644847],[-0.582671],[5.383460],[-2.480144],[1.378363],[-4.707954],[-2.370198],[-7.106408],[2.663928],[-1.078989],[-5.401558],[-0.747641],[5.783040],[5.686569],[3.031063],[-1.447038],[2.810320],[9.290771],[-9.938424],[8.956269],[-4.681282],[-5.697603],[5.384717],[-5.088284],[-2.690050],[0.023129],[3.104469],[8.405269],[-0.174163],[3.769790],[1.252376],[-7.164054],[-7.596901],[2.759035],[7.561305],[-6.845174],[4.539957],[3.082680],[5.399743],[0.245643],[-6.033642],[-5.047623],[2.796845],[-6.610800],[7.177566],[5.256094],[4.690743],[3.386321],[1.813841],[-4.242799],[5.686487],[-4.359780],[-2.039223],[7.934477],[3.709589],[3.383330],[-4.731304],[9.991185],[3.578834],[0.129286],[1.213072],[4.693469],[-8.669278],[5.281622],[6.765802],[-7.112954],[-2.779060],[6.450509],[-9.812223],[8.319604],[-3.021287],[-3.364360],[-3.121860],[-0.754462],[5.573023],[-5.299351],[-2.135368],[-9.202617],[-0.375411],[-9.459136],[1.788078],[0.227056],[5.130698],[-1.694140],[3.850062],[1.989139],[-7.128998],[-6.766314],[-3.729183],[-1.372911],[-7.979680],[-5.178149],[-2.233428],[5.545566],[-0.593827],[7.733656],[2.036981],[-9.645664],[1.549983],[-9.501846],[-9.075413],[-5.553029],[7.323688],[3.791446],[5.778245],[-8.073267],[3.967767],[-8.254955],[2.745999],[-6.378845],[4.200596],[8.462914],[-6.872865],[8.456137],[3.802466],[7.550163],[-2.245387],[-6.157003],[-2.738516],[2.384495],[-5.347063],[-4.260980],[-9.526796],[8.524153],[-4.988781],[-7.639736],[2.260644],[-0.125697],[3.786135],[-1.901414],[-0.375716],[-0.773522],[4.963611],[-7.379491],[-2.345456],[-5.695267],[7.356978],[-8.247485],[6.204242],[2.774734],[-0.518793],[-8.152864],[-5.766716],[3.319141],[-8.644281],[-5.820925],[7.901479],[2.109693],[9.703361],[9.741926],[0.433686],[-9.960963],[-2.743590],[8.166610],[7.677208],[8.282504],[-9.297885],[5.296936],[1.113476],[-5.406090],[-1.941715],[-5.365463],[1.538711],[2.579025],[9.723638],[-3.431193],[-5.280249],[-3.895801],[-9.740469],[-3.670346],[-4.256141],[9.882777],[1.527411],[4.320340],[8.967621],[2.302766],[-7.806435],[-3.071396],[2.645440],[7.543345],[-1.519412],[-6.710312],[-4.904917],[0.825002],[-2.251294],[-3.568352],[1.022323],[1.767890],[5.100726],[4.267570],[-9.586808],[-4.551731],[-4.612789],[-4.414845],[-9.435116],[3.672277],[0.515380],[5.707092],[-9.622800],[-8.115062],[0.394930],[6.729807],[-1.739200],[4.159199],[-7.228825],[7.484867],[8.334870],[6.375828],[-2.510722],[-6.474245],[9.527800],[9.004743],[3.637395],[9.999056],[8.301771],[-4.800831],[-3.390100],[6.112133],[-4.996570],[-3.306563],[-8.511015],[8.167918],[-4.144721],[3.121654],[-9.530528],[0.658398],[7.965504],[-9.296046],[-8.599010],[-0.780473],[-6.636958],[-1.910143],[2.407035],[1.193798],[-5.458019],[-3.113488],[5.685790],[8.457911],[-9.798398],[-3.128640],[-7.939047],[0.444526],[-4.168406],[-6.866166],[2.225656],[-1.528106],[3.062508],[-3.656085],[5.048459],[-7.478159],[-3.031140],[-6.215487],[-2.113450],[5.611408],[-8.230519],[4.838984],[8.540378],[8.603292],[-6.549219],[-2.234698],[-9.752165],[4.724466],[8.593516],[-0.592377],[-3.816300],[7.789522],[9.896792],[-8.079853],[3.234173],[3.607878],[-0.360741],[-0.313876],[1.037994],[4.921260],[9.181921],[1.041331],[0.921824],[4.928686],[-1.188355],[0.010459],[-5.796754],[3.978534],[-0.953351],[3.015595],[1.520942],[9.151987],[7.293564],[-3.793579],[8.162154],[-0.596843],[1.171936],[1.998870],[4.433858],[-6.673925],[-8.845664],[-2.117626],[-6.731286],[9.204421],[8.945951],[-1.853044],[9.262585],[-0.755251],[3.761690],[7.390683],[1.329222],[7.245451],[9.419042],[4.089277],[4.702798],[-1.944075],[8.248449],[-7.372646],[0.034942],[-6.026557],[-4.111487],[0.446693],[-5.598493],[-6.609109],[-1.802471],[2.544030],[6.551308],[9.269351],[3.233246],[5.488897],[-9.811412],[-7.520013],[-6.666137],[8.051659],[-5.452487],[7.135113],[-6.613662],[-1.444955],[-6.553814],[-6.577938],[-2.320585],[-3.412674],[-0.815440],[-2.985025],[-6.234003],[-1.826267],[-9.283606],[-5.626840],[7.784096],[-6.614356],[2.412883],[-7.407235],[-6.143380],[2.650568],[6.081264],[-2.556840],[8.995739],[5.251467],[-4.037883],[4.935574],[-6.428483],[0.170586],[-3.701516],[2.712962],[9.986641],[-3.719532],[6.115005],[-0.924440],[2.681071],[6.776147],[1.227290],[1.011028],[-6.510672],[-2.527155],[-4.471061],[-4.857500],[2.105789],[7.731044],[3.022903],[2.674927],[-8.651452],[-0.559188],[-9.790522],[-0.673697],[-7.479222],[-5.458324],[1.548570],[-9.241603],[-8.499190],[-7.118898],[-0.461077],[1.458644],[-2.384674],[0.794436],[-0.267688],[-6.428448],[-7.471437],[-4.539107],[3.645088],[5.594703],[-7.907255],[2.415766],[7.534416],[-7.584887],[-2.554074],[-4.448127],[6.937299],[-1.716974],[7.207523],[0.319194],[-8.784327],[-3.843602],[-7.808935],[5.457242],[2.732003],[2.474112],[-9.802597],[7.715900],[-5.979351],[7.905724],[-6.306457],[0.574719],[-6.700803],[1.687120],[-2.217185],[0.196196],[-9.809324],[1.313034],[-3.152456],[-8.883124],[4.655680],[-0.519647],[-9.527775],[3.670356],[3.452655],[8.449837],[7.509341],[9.646339],[-4.698861],[6.187536],[8.726059],[6.150632],[-8.274153],[6.127025],[8.150582],[5.120740],[0.922277],[-8.951488],[3.146042],[6.796766],[7.766823],[6.681115],[3.133286],[-0.603728],[1.849373],[-0.065454],[-9.463069],[6.382885],[4.583155],[2.297466],[-5.581839],[9.236331],[-0.987033],[-2.393506],[-3.078531],[-9.420064],[-7.443180],[-0.631965],[-6.982454],[-7.486018],[-1.090760],[7.917048],[-6.830711],[8.625880],[6.440072],[3.933385],[3.675788],[2.080512],[-7.979940],[-9.029469],[1.232123],[-3.366476],[-2.970322],[-1.997132],[2.691121],[-7.413180],[9.170133],[-5.824337]], dtype = "float64")#candidate|1282|(520, 1)|const|float64
call_1280 = relay.TupleGetItem(func_986_call(relay.reshape(const_1281.astype('float32'), [9, 9, 9]), relay.reshape(const_1282.astype('float64'), [520,]), ), 1)
call_1283 = relay.TupleGetItem(func_989_call(relay.reshape(const_1281.astype('float32'), [9, 9, 9]), relay.reshape(const_1282.astype('float64'), [520,]), ), 1)
func_1064_call = mod.get_global_var('func_1064')
func_1065_call = mutated_mod.get_global_var('func_1065')
call_1294 = relay.TupleGetItem(func_1064_call(), 1)
call_1295 = relay.TupleGetItem(func_1065_call(), 1)
output = relay.Tuple([bop_1273,call_1280,const_1281,const_1282,call_1294,])
output2 = relay.Tuple([bop_1276,call_1283,const_1281,const_1282,call_1295,])
func_1296 = relay.Function([var_1272,], output)
mod['func_1296'] = func_1296
mod = relay.transform.InferType()(mod)
mutated_mod['func_1296'] = func_1296
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1297 = relay.var("var_1297", dtype = "float32", shape = (5, 8, 14))#candidate|1297|(5, 8, 14)|var|float32
func_1296_call = mutated_mod.get_global_var('func_1296')
call_1298 = func_1296_call(var_1297)
output = call_1298
func_1299 = relay.Function([var_1297], output)
mutated_mod['func_1299'] = func_1299
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1301 = relay.var("var_1301", dtype = "float32", shape = (13, 15, 12))#candidate|1301|(13, 15, 12)|var|float32
var_1302 = relay.var("var_1302", dtype = "float32", shape = (13, 15, 12))#candidate|1302|(13, 15, 12)|var|float32
bop_1303 = relay.mod(var_1301.astype('float32'), relay.reshape(var_1302.astype('float32'), relay.shape_of(var_1301))) # shape=(13, 15, 12)
func_1191_call = mod.get_global_var('func_1191')
func_1193_call = mutated_mod.get_global_var('func_1193')
const_1317 = relay.const([9.061785,-6.053191,-2.742859,-5.428880,-5.842161,7.910890,2.795011,-5.923062,1.419096,1.084669,-3.967762,-7.321118,9.488910,3.237755,2.050904,-0.463203,-4.469279,3.106952,5.517987,-3.536169,2.593213,2.191154,-5.413835,4.663102,7.662502,4.334477,-3.343517,0.367864,7.379448,9.531307,3.604890,4.162672,-6.088995,-5.395097,-4.050658,1.664091,9.071406,-3.678590,-1.031543,5.038701,2.935196,-2.076562,-9.577763,0.482692,-1.878185,-3.938722,-3.988144,6.892575,2.887478,1.502125,-3.101315,1.946302,9.028609,7.387945,6.157585,-1.649373,4.341127,-7.845217,-4.369871,3.765676,-1.049180,-2.674031,8.281989,1.799025,4.854525,8.703693,-7.959725,5.843596,-3.413207,9.291519,-4.997720,-4.073446,-2.961714,5.504106,0.935415,2.908597,4.975335,-1.211397,7.585593,3.222089,-5.576409,-8.892705,4.905493,6.356892,4.735598,3.582717,-9.074342,9.351214,-5.272516,9.141812,-8.116249,-7.576256,-6.564876,-6.247757,-8.227542,-6.650293,-3.249691,4.038937,8.923294,-2.682427,-6.926127,-2.891754,1.988736,1.705770,-0.757028,6.789840,-6.981364,-9.250696,7.743120,-6.569636,-4.425954,-0.353270,-8.564874,-4.741837,-5.788876,-9.595015,-2.751630,0.565299,-6.150637,-8.206811,5.607734,6.715209,5.406712,-4.760143,0.203087,-5.872532,-4.817011,-6.313258,9.456159,-3.353771,1.638424,-2.631186,5.839807,-6.526793,-2.800645,-9.046449,-4.478073,6.988821,-4.578270,-4.110867,4.853988,2.796992,-8.413180,-0.115696,6.490910,5.136990,2.757627,-3.313180,-7.365983,-1.343174,0.573396,-1.515042,0.076145,5.886824,-6.481505,2.721869,8.945822,3.827466,-3.030285,1.029729,-0.709124,5.588978,-6.092594,-5.423192,-4.175269,7.382703,3.327413,4.478927,-8.123739,-8.924575,9.994033,-3.391482,3.665240,-8.766042,8.380854,2.834614,-3.928322,0.896108,-2.846267,7.376301,-5.415707,6.800192,0.668557,-2.962237,2.761553,-0.970810,-6.653146,2.882933,-3.247210,-6.902138,1.930075,3.060590,-7.482387,-0.446188,-8.168466,5.477301,0.884709,-3.393275,6.163797,-4.718515,-3.270948,7.467314,3.833508,-1.835286,-6.315943,9.554613,-9.779368,-3.591350,8.217397,9.639810,-8.604115,-0.002540,1.532867,-6.377719,-9.354750,-5.126956,0.149456,9.387099,-2.541297,-0.887910,-8.800856,5.854151,-1.937650,7.911949,-5.668528,7.103505,2.977637,-3.623462,8.568588,-5.160586,9.487228,-0.823386,-1.224773,9.341932,5.628923,-8.535290,1.789585,-7.768855,1.328656,7.769221,-2.143789,-0.762356,7.066794,7.996172,-0.096454,-1.246643,-2.636972,-8.366671,-5.350425,7.049432,-4.914511,-1.383894,1.983457,8.776802,-5.538579,0.733708,-6.029023,3.117972,-3.323296,-7.778368,-7.060935,9.423026,0.818123,9.873832,6.252068,7.846609,-5.012583,-5.387804,-6.733016,-2.649031,-7.024300,6.569723,-5.116498,-0.205775,6.481178,6.097033,9.321023,-1.595124,-7.393531,5.961671,4.214675,2.171396,-0.852081,5.256898,-2.310667,8.594376,3.083113,1.346643,6.511307,3.950366,-5.892210,-5.869036,4.879596,-2.654749,5.145670,3.851729,-7.878199,-7.720772,-2.951738,8.497504,-0.507237,-1.095794,9.995338,8.419872,8.065291,-8.183090,2.017692,-4.872292,7.719904,-7.064388,-7.032757,7.113479,6.113367,2.347403,-8.933328,-9.302882,2.193444,-1.179619,-2.484576,-0.821892,-5.014382,2.704596,9.277276,-2.123005,-8.623304,7.540721,5.664049,9.716519,1.359649,-3.156672,2.038026,-7.907964,4.358368,9.000623,-2.830696,-9.729799,-8.039784,-7.477862,0.923670,3.993414,4.232211,-3.893886,9.739833,2.644286,-2.598839,-1.228925,-8.354215,-0.796768,-0.333598,3.331035,8.990080,4.885509,5.879504,-4.494607,9.234349,-4.158045,-7.964091,1.220782,-4.417891,-9.985050,-9.894939,-9.396133,3.051521,9.500143,3.455055,-8.385190,-9.729662,-3.813198,4.846000,-1.689444,-7.925139,-6.799151,4.014578,0.904822,-8.010050,-4.733847,-0.504159,-4.386696,3.843998,6.911449,-3.000532,-4.827276,-6.841118,9.285817,6.172705,-5.026519,-6.582813,-7.591407,-8.537847,-9.150630,-8.211172,3.046897,3.487843,-4.583865,3.907257,8.774370,-4.150442,-3.733419,1.378629,-0.756364,0.233433,-6.445184,8.905268,5.284060,-7.235547,2.460744,-5.839486,-8.421855,-6.976721,6.498073,-8.899770,8.062226,-3.055391,9.848239,1.472684,-2.101402,-9.162499,5.955752,2.974658,5.605350,-8.762094,-6.564684,-2.050809,-1.086638,-3.586120,-3.682747,7.283937,3.429758,-8.750373,5.885751,-9.993884,-9.086623,-1.429973,6.910653,6.317427,-9.186794,4.176459,-0.667770,8.982783,-2.136510,-6.750313,-0.298324,-8.504470,2.194252,3.876124,5.949083,-7.393305,-5.453181,5.449101,7.137388,6.941935,-4.307282,-7.430778,-8.180278,9.152164,2.597476,4.628231,9.187521,0.456219,-3.343189,0.756144,7.758564,-5.650452,5.562679,1.954399,-0.450399,-0.718970,1.339548,7.017980,-1.936180,-6.657922,3.809952,6.605905,9.902158,9.324315,9.056402,3.378872,0.766024,0.890015,3.099467,4.573326,1.042401,-9.692742,-7.387129,-6.847464,6.134672,9.729957,-8.713829,1.306152,1.960340,-8.821019,-2.793886,5.945473,9.354715,-8.792978,7.265454,-4.676884,2.862109,5.872165,-1.267871,-9.233054,-2.872291,-3.017572,-4.207509,0.425781,3.281157,9.905433,1.543413,1.982696,1.541602,-2.190510,5.440873,9.928442,4.186912,-4.740913,-6.964656,5.220764,-5.018864,7.624023,-0.475450,6.150111,-7.702029,8.884367,8.978698,-0.538903,-9.475010,-7.937088,3.122503,-0.841061,-7.580715,9.735431,5.236772,-1.362524,-7.485097,-0.840759,-8.242781,-3.980621,-3.774219,-6.036312,-8.538600,-6.968013,0.903420,-3.557139,-7.564765,-4.984636,-6.025342,8.234409,-1.978706,9.180038,-8.169280,0.907006,3.794263,9.543904,4.273001,-6.772466,1.086675,-4.586226,6.430729,7.750217,7.215130], dtype = "float32")#candidate|1317|(560,)|const|float32
call_1316 = func_1191_call(relay.reshape(const_1317.astype('float32'), [5, 8, 14]))
call_1318 = func_1191_call(relay.reshape(const_1317.astype('float32'), [5, 8, 14]))
output = relay.Tuple([bop_1303,call_1316,const_1317,])
output2 = relay.Tuple([bop_1303,call_1318,const_1317,])
func_1319 = relay.Function([var_1301,var_1302,], output)
mod['func_1319'] = func_1319
mod = relay.transform.InferType()(mod)
mutated_mod['func_1319'] = func_1319
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1319_call = mutated_mod.get_global_var('func_1319')
var_1321 = relay.var("var_1321", dtype = "float32", shape = (13, 15, 12))#candidate|1321|(13, 15, 12)|var|float32
var_1322 = relay.var("var_1322", dtype = "float32", shape = (13, 15, 12))#candidate|1322|(13, 15, 12)|var|float32
call_1320 = func_1319_call(var_1321,var_1322,)
output = call_1320
func_1323 = relay.Function([var_1321,var_1322,], output)
mutated_mod['func_1323'] = func_1323
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1064_call = mod.get_global_var('func_1064')
func_1065_call = mutated_mod.get_global_var('func_1065')
call_1334 = relay.TupleGetItem(func_1064_call(), 1)
call_1335 = relay.TupleGetItem(func_1065_call(), 1)
func_1089_call = mod.get_global_var('func_1089')
func_1091_call = mutated_mod.get_global_var('func_1091')
call_1337 = relay.TupleGetItem(func_1089_call(), 0)
call_1338 = relay.TupleGetItem(func_1091_call(), 0)
func_1296_call = mod.get_global_var('func_1296')
func_1299_call = mutated_mod.get_global_var('func_1299')
call_1341 = relay.TupleGetItem(func_1296_call(relay.reshape(call_1337.astype('float32'), [5, 8, 14])), 1)
call_1342 = relay.TupleGetItem(func_1299_call(relay.reshape(call_1337.astype('float32'), [5, 8, 14])), 1)
func_920_call = mod.get_global_var('func_920')
func_923_call = mutated_mod.get_global_var('func_923')
var_1349 = relay.var("var_1349", dtype = "int16", shape = (128,))#candidate|1349|(128,)|var|int16
var_1350 = relay.var("var_1350", dtype = "int16", shape = (1792,))#candidate|1350|(1792,)|var|int16
call_1348 = relay.TupleGetItem(func_920_call(relay.reshape(var_1349.astype('int16'), [8, 1, 16]), relay.reshape(var_1350.astype('int16'), [8, 14, 16]), ), 3)
call_1351 = relay.TupleGetItem(func_923_call(relay.reshape(var_1349.astype('int16'), [8, 1, 16]), relay.reshape(var_1350.astype('int16'), [8, 14, 16]), ), 3)
output = relay.Tuple([call_1334,call_1337,call_1341,call_1348,var_1349,var_1350,])
output2 = relay.Tuple([call_1335,call_1338,call_1342,call_1351,var_1349,var_1350,])
func_1356 = relay.Function([var_1349,var_1350,], output)
mod['func_1356'] = func_1356
mod = relay.transform.InferType()(mod)
mutated_mod['func_1356'] = func_1356
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1356_call = mutated_mod.get_global_var('func_1356')
var_1358 = relay.var("var_1358", dtype = "int16", shape = (128,))#candidate|1358|(128,)|var|int16
var_1359 = relay.var("var_1359", dtype = "int16", shape = (1792,))#candidate|1359|(1792,)|var|int16
call_1357 = func_1356_call(var_1358,var_1359,)
output = call_1357
func_1360 = relay.Function([var_1358,var_1359,], output)
mutated_mod['func_1360'] = func_1360
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1064_call = mod.get_global_var('func_1064')
func_1065_call = mutated_mod.get_global_var('func_1065')
call_1382 = relay.TupleGetItem(func_1064_call(), 1)
call_1383 = relay.TupleGetItem(func_1065_call(), 1)
var_1389 = relay.var("var_1389", dtype = "float32", shape = (5, 8, 14))#candidate|1389|(5, 8, 14)|var|float32
bop_1390 = relay.left_shift(call_1382.astype('uint16'), relay.reshape(var_1389.astype('uint16'), relay.shape_of(call_1382))) # shape=(5, 8, 14)
bop_1393 = relay.left_shift(call_1383.astype('uint16'), relay.reshape(var_1389.astype('uint16'), relay.shape_of(call_1383))) # shape=(5, 8, 14)
var_1401 = relay.var("var_1401", dtype = "float32", shape = (5, 8, 14))#candidate|1401|(5, 8, 14)|var|float32
bop_1402 = relay.minimum(call_1382.astype('int64'), relay.reshape(var_1401.astype('int64'), relay.shape_of(call_1382))) # shape=(5, 8, 14)
bop_1405 = relay.minimum(call_1383.astype('int64'), relay.reshape(var_1401.astype('int64'), relay.shape_of(call_1383))) # shape=(5, 8, 14)
uop_1419 = relay.acosh(bop_1390.astype('float32')) # shape=(5, 8, 14)
uop_1421 = relay.acosh(bop_1393.astype('float32')) # shape=(5, 8, 14)
uop_1428 = relay.log2(var_1401.astype('float32')) # shape=(5, 8, 14)
func_1064_call = mod.get_global_var('func_1064')
func_1065_call = mutated_mod.get_global_var('func_1065')
call_1435 = relay.TupleGetItem(func_1064_call(), 1)
call_1436 = relay.TupleGetItem(func_1065_call(), 1)
output = relay.Tuple([bop_1402,uop_1419,uop_1428,call_1435,])
output2 = relay.Tuple([bop_1405,uop_1421,uop_1428,call_1436,])
func_1444 = relay.Function([var_1389,var_1401,], output)
mod['func_1444'] = func_1444
mod = relay.transform.InferType()(mod)
var_1445 = relay.var("var_1445", dtype = "float32", shape = (5, 8, 14))#candidate|1445|(5, 8, 14)|var|float32
var_1446 = relay.var("var_1446", dtype = "float32", shape = (5, 8, 14))#candidate|1446|(5, 8, 14)|var|float32
output = func_1444(var_1445,var_1446,)
func_1447 = relay.Function([var_1445,var_1446,], output)
mutated_mod['func_1447'] = func_1447
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1089_call = mod.get_global_var('func_1089')
func_1091_call = mutated_mod.get_global_var('func_1091')
call_1459 = relay.TupleGetItem(func_1089_call(), 0)
call_1460 = relay.TupleGetItem(func_1091_call(), 0)
var_1461 = relay.var("var_1461", dtype = "float32", shape = (5, 8, 14))#candidate|1461|(5, 8, 14)|var|float32
bop_1462 = relay.mod(call_1459.astype('float64'), relay.reshape(var_1461.astype('float64'), relay.shape_of(call_1459))) # shape=(5, 8, 14)
bop_1465 = relay.mod(call_1460.astype('float64'), relay.reshape(var_1461.astype('float64'), relay.shape_of(call_1460))) # shape=(5, 8, 14)
uop_1470 = relay.exp(var_1461.astype('float64')) # shape=(5, 8, 14)
func_1319_call = mod.get_global_var('func_1319')
func_1323_call = mutated_mod.get_global_var('func_1323')
const_1476 = relay.const([[-2.304698,8.127070,6.519288,6.076292,-8.478315,4.117738,8.601851,4.011944,-7.158032,-3.027733,-9.929262,-0.655271,-6.928786,6.643357,-5.354659,7.859965,2.615662,8.467039,3.473833,-5.482410,1.532133,-8.149830,6.371627,-4.617099,-7.375823,-9.501319,0.325979,-5.282857,7.508341,-3.240597,5.858999,-5.920529,-5.547366,8.627560,-1.020415,6.833819,9.743990,3.925238,-6.188599,7.869773,-2.043764,9.196349,-7.965979,6.499715,-1.678406,7.773399,-7.954021,-9.033603,-2.475767,-8.171506,8.971601,-9.750938,5.860044,5.922220,5.074921,-1.645524,9.337382,0.161865,-8.286130,6.867114,1.610556,-8.203500,-5.812931,-1.801516,-4.677054,-0.937681,7.330764,7.085197,-6.122984,-0.111420,0.044232,2.275437,-6.522159,-1.151019,8.744280,6.000073,-0.929945,-1.391387,-7.834185,5.014935,3.323335,0.540081,2.570147,-8.280220,7.496293,2.254028,2.314002,9.607379,-2.843725,-7.691126,5.928919,-1.563630,2.602084,8.569831,9.387786,3.864641,-9.639601,1.273587,7.588975,1.143758,-7.222645,4.624713,4.188843,-6.974441,-9.217666,4.751672,-6.522195,6.990438,6.401464,-4.382451,-8.952798,0.678470,-2.481534,-3.845449,-6.753672,-9.370229,-6.862627,7.021749,4.709122,5.232840,-5.964465,9.148323,-2.920590,3.653672,4.232008,1.014100,7.727492,-6.260242,5.447696,8.233214,-7.754127,3.860890,3.020452,-6.827257,-4.587193,-3.110768,2.745207,7.571853,-0.468622,3.656964,-6.705914,8.543331,1.727054,2.667879,-5.813395,6.918510,9.313848,-2.143866,6.187335,3.009314,-3.968739,-0.718935,7.645494,-1.678835,-7.567449,-2.273006,-7.870403,-5.937630,7.581324,-0.178223,-1.433819,6.927815,-8.736972,-3.551473,-0.828513,6.783168,3.002689,-0.377098,-9.994242,8.212868,-7.899068,9.375755,6.060216,9.713712,-2.426398,9.447786,9.312152,-5.511303,-0.196922,1.343599,-9.640903,9.579198,-3.637108,-4.818524,-2.657252,-1.009451,5.732202,8.400744,0.661438,-8.258276,6.569015,8.985903,-3.480410,-2.173850,-2.264516,3.858297,4.443149,9.394381,9.384178,-0.864118,3.952201,-6.773628,-1.011845,3.885154,-9.943026,6.000518,7.025895,-4.004065,-0.657584,-6.310872,-8.267065,1.151420,6.002618,-3.584214,3.457114,-6.562733,1.840356,7.797662,3.808541,0.279149,-5.816064,0.921295,9.487706,1.150591,-3.492766,6.608811,-4.888451,-5.883599,9.845810,-1.147602,8.369012,4.083409,7.853208,2.419412,9.543888,5.662792,3.167393,-4.280976,-3.546977,0.698631,7.589885,-9.225061,2.610827,9.678223,6.321729,3.970524,7.556922,3.956751,-1.159524,3.158137,9.391322,3.696105,2.585014,-9.530227,-7.429564,-3.466499,-7.346020,7.489822,-1.396604,-4.995511,-8.792103,-3.474109,-5.430299,-4.788074,-7.520481,-0.869712,-9.932805,3.259837,1.259770,-6.791251,7.966017,-5.971244,9.208796,5.671954,-8.724303,6.188470,-1.730349,-5.356561,3.456038,9.162870,-8.013431,9.545959,8.895214,-2.256900,-2.017696,-9.396391,-0.178314,1.400793,-4.343016,0.644501,-2.082684,9.431369,-2.136350,8.175545,8.909292,-7.033356,7.931197,-1.942724,-0.135582,9.318605,5.176006,-0.736750,-3.825392,2.097581,-7.112288,-4.650280,8.196123,8.714529,5.188071,7.689836,5.368429,1.923356,-9.634459,-5.657716,-1.803210,7.308799,4.005752,6.740915,-0.658581,4.694503,3.143552,2.829441,1.338400,0.734782,-6.778289,4.639246,-6.476464,-1.549642,6.817694,8.589928,-2.567947,2.448816,-9.779938,-4.460392,-4.998948,5.503040,4.910184,-4.878471,-5.398511,9.112332,9.503542,-1.177566,7.306352,-0.283741,8.955164,1.080533,-4.703944,-6.117000,2.450044,2.863694,-4.671698,-0.803941,-0.089052,-4.369016,-0.412369,8.810216,8.632135,9.324466,-3.047092,5.696261,3.716873,0.737776,2.356780,-2.153584,-2.678554,-7.116518,-1.859627,-8.376236,-8.713263,7.108037,0.045308,-0.521160,0.558766,6.323965,7.113441,9.350218,6.285531,-6.370152,-4.087690,-7.738187,6.531971,1.249976,6.431947,-0.826283,8.997210,-9.826668,-1.770083,9.665872,-1.828310,4.613766,5.624930,-2.236624,7.345366,8.871358,9.043138,4.900530,0.527300,-8.516089,-6.939318,-2.154700,5.268613,-0.536167,8.208678,5.897018,0.929195,0.241156,6.042567,8.901535,-9.296886,2.746344,-7.695798,-3.306053,4.427033,-3.197681,1.692620,2.855190,9.833532,-3.058637,6.594442,-2.000977,-3.078322,8.782839,7.551173,4.607471,-7.033520,1.524172,6.572591,-0.728741,5.532137,-8.053364,0.802961,8.830186,-8.363720,2.817989,2.178524,-7.622611,2.344616,3.921431,-8.982919,-1.954759,4.966753,-5.333132,-3.197836,-6.318385,7.261322,-9.341467,-7.673347,-2.019781,-5.767671,4.686631,9.648052,6.522164,2.958750,-5.622029,4.468725,-5.709136,-1.390540,1.797678,1.346207,-4.089057,2.943938,1.195795,-6.068065,-3.554881,1.555144,-0.458025,9.047715,7.277258,7.050102,-2.435761,8.757882,5.436313,3.391342,-5.953263,-7.521827,-7.562911,0.035426,-2.176076,7.382728,-6.537029,-1.541004,3.731986,8.855617,-0.443717,-2.442519,2.889432,-1.637221,-5.155551,-5.500351,-3.658101,5.451850,-7.307416,1.916502,1.083472,4.616947,8.895282,-8.492950,3.734067,-4.313964,-0.550253,-8.073758,-1.108343,7.162863,8.618855,2.919214,-7.219707,-6.862671,7.272275,4.776641,-1.544311,1.374227,-3.389572,-2.323854,9.559014,-2.677875,-5.579857,1.497377,4.027597,2.752639,-9.243792,-8.864093,2.534689,0.288457,-9.296230,5.449840,4.023072,6.116763,6.542904,5.527156,-6.301692,-4.140745,2.897669,8.547166,-2.929915,0.312583,0.580344,-9.235425,-0.552575,5.190245,-5.324379,9.566125,1.375893,-1.116916,-0.069768,2.090768,1.909391,9.620995,-9.510141,3.189980,7.351761,3.270627,-6.295858,-5.725531,-1.464797,-7.861807,-2.861700,-9.736415,-7.669369,-3.211420,1.344905,8.969123,-8.141888,8.825710,2.686728,0.572469,1.570640,4.948756,-7.229098,-5.582903,0.553602,-1.169209,-3.806090,-1.749724,1.442422,9.051956,-8.820263,7.415909,-2.643847,0.772598,6.680779,-4.926970,-6.607663,-1.416790,2.011641,0.309761,2.855598,3.921121,-3.638764,-6.939678,-1.848630,-9.383869,-1.422928,0.992771,-9.215506,-0.196503,-6.025062,-3.761721,-2.550052,4.417844,8.425823,3.817107,-8.746393,-7.873340,-0.533169,-2.735862,7.568106,7.869794,-5.727210,-4.729516,-2.175143,-0.365188,2.088815,6.873309,-4.977623,-9.337424,0.970761,-0.430726,-6.905734,-6.211431,-2.583481,0.131281,-9.912814,3.623266,-5.444543,1.683573,8.963486,7.619731,8.474906,-6.244187,7.720668,0.206029,-9.096433,4.738936,8.426820,3.200386,-8.189940,9.633840,-4.822466,-4.656483,-5.157927,4.054059,1.789539,-1.973201,8.872870,-3.858012,0.249676,3.816501,-3.034150,-7.708447,-6.046861,9.458224,4.356811,5.078578,2.757742,-2.128605,-3.411011,5.095514,-0.514229,-3.466645,8.843876,-6.400787,-2.520899,-5.835949,-5.279486,-2.657420,6.867427,-0.314587,-7.332624,-3.150112,5.339911,8.426037,-6.769347,5.203312,7.440876,-3.270254,9.952805,5.673016,-2.758732,-0.050767,1.243796,4.665280,-2.503430,7.683751,-4.164781,-6.883564,-0.007692,1.142338,8.812604,9.121501,-5.998661,9.552280,-4.562632,6.980375,-8.823530,-8.233218,3.196201,-1.446354,8.248059,-4.340883,8.171713,0.465128,5.092102,-3.460910,1.268593,5.046384,2.351445,9.930414,3.894343,-3.172867,-7.697550,6.559778,1.643114,6.910723,7.167478,-8.946036,4.332190,-5.392959,-6.384689,8.760046,-7.939651,5.898848,5.741740,-3.286249,7.262549,-4.877078,8.551372,9.828478,-0.505617,0.129018,3.122196,-1.338582,9.200312,0.646221,-4.015565,4.177413,3.521235,-3.689291,-2.956713,1.856183,-3.281346,2.044051,-8.025767,-6.646629,-8.473928,-1.485252,4.795295,-0.232925,-1.054249,-9.716251,-8.784869,4.568066,-7.779566,-0.794025,-0.306219,-5.581263,0.509059,-5.923880,3.860735,-0.432303,-9.815171,2.989022,-5.462526,-1.989278,9.518441,4.308785,6.428632,8.310977,-7.339196,-6.799988,8.190225,6.590811,-9.160396,-7.260293,-8.855607,6.483773,-4.244500,-8.969652,-2.070755,3.207581,0.952207,3.142347,1.032099,-8.618228,-2.977957,5.124184,-7.478587,9.661917,-1.212459,-5.598528,-4.928142,-1.823685,-7.784281,3.527265,1.716259,-0.678136,4.084040,1.725989,-0.317930,1.895210,-8.086447,-9.024508,1.532181,-5.527192,-1.733029,6.755238,-5.004443,3.207600,-8.698480,-1.284169,0.824159,1.142469,-3.178972,9.190405,-1.554224,-5.116011,2.597941,0.482785,-1.947755,7.360436,-6.685385,5.005987,-8.073797,4.493426,-7.526878,-2.283204,-9.386783,-5.890050,7.435467,2.147672,-7.815492,-4.015488,9.155220,3.198319,0.205262,-5.378881,2.879318,2.359714,-8.797538,-5.833604,-3.989414,-0.944483,-9.579811,6.426645,-9.716315,-5.350251,-4.167867,5.997064,-5.130778,4.235194,3.039284,-6.930101,-1.148113,-5.130059,-9.396309,6.018143,4.275986,-9.493019,-2.015170,7.715898,-5.140200,-4.377254,1.696718,-0.395822,-2.278664,2.843672,0.934603,-5.144888,0.411423,-1.702812,4.486919,-6.716747,2.114694,7.536019,4.081055,5.102438,-1.766820,-1.956261,1.640702,8.871721,3.908695,1.512157,-5.886373,-2.119617,-3.302842,-5.414328,-5.917398,-2.637733,9.712471,8.627876,5.797500,-6.599316,-6.553486,4.010864,-5.215243,4.623565,3.150530,-6.672433,-5.344008,-5.615756,-0.296321,3.909116,3.864363,-6.986862,5.483256,5.656535,-8.179489,-7.297955,6.665051,-8.938126,-1.214784,4.823097,-2.828441,-0.598603,-3.658975,7.489244,4.188600,9.330519,2.346560,5.283476,3.492394,0.448758,-9.535495,1.297692,9.839847,3.973745,0.660053,7.655703,1.045970,8.722261,-5.300331,-9.616080,2.604147,9.842204,0.745627,4.004799,5.417446,6.064326,-8.933248,5.702340,-0.683645,1.967142,5.658442,-5.764612,-5.665938,-1.309273,-6.785075,-6.339817,-8.327109,-8.605117,-9.684184,1.258851,-8.129231,-5.838805,4.865436,-3.306964,-1.453249,1.894147,7.372635,-9.016565,1.687872,-4.986566,0.374178,3.793163,-1.083253,-2.790777,3.371682,6.578579,-9.691782,-6.370488,5.147085,5.424511,9.293395,-7.842941,-7.986433,-5.380150,7.449328,-3.400893,-5.652336,6.851133,3.652245,1.959590,9.908179,7.983670,-6.879739,9.372838,-0.984581,-8.624379,4.688209,-1.587926,0.527486,-8.361442,-6.086180,-7.978562,-0.223800,9.713991,3.942174,3.907278,7.602706,-2.130929,-5.119799,-2.434890,-2.291353,-1.102710,8.474975,-4.688099,-9.586010,2.669472,0.904080,9.773077,4.710305,0.025697,9.214395,2.133496,0.701362,2.364017,8.538431,0.731352,-3.339259,-5.441459,-4.354427,-5.579755,4.534142,1.670861,9.035426,-4.931222,-2.860878,7.377486,-8.861141,-7.885359,-5.055703,-8.749630,1.059547,-2.550093,8.578635,7.015256,8.964402,-0.648558,-8.895875,1.486407,-4.037742,-0.408515,7.352329,1.222710,6.468264,-9.266168,1.100078,2.869418,-2.116597,-0.554054,-2.650874,3.226804,7.906932,-4.485397,-7.893159,-2.747504,-3.908592,2.788539,-7.743006,8.821909,-3.961153,-6.682982,-9.437218,7.631446,7.822807,4.784954,5.750855,3.860459,-7.915394,-1.065663,1.318648,-9.451080,-6.973282,2.726025,-6.061076,-9.420234,-3.677842,-9.523395,-7.610357,3.533790,1.527226,-3.514417,-8.148970,8.868846,5.284357,1.270396,-7.586095,-5.565247,0.194190,-6.383131,5.060806,-1.622367,3.727724,-6.889024,-0.090308,8.354926,-3.535779,6.494156,1.655787,-7.283421,-1.547047,6.007104,2.970193,3.153953,3.320506,-4.184217,-2.191593,9.479909,4.889876,-3.080583,1.632941,0.776455,0.180889,-3.544094,9.012019,3.365278,-4.453106,7.420903,0.922982,-8.299532,-6.939665,8.556079,-0.088576,-0.356995,-2.462001,3.600595,-4.347977,-6.301856,1.759861,-5.861043,3.291673,5.746675,-3.736692,6.275792,1.762786,-2.844689,-7.863900,2.851753,-1.905393,-9.191836,-5.437069,0.905087,-4.797704,-0.902916,-9.083521,-6.692001,-4.520382,-6.218245,-1.903514,-9.886706,7.489867,9.422224,-8.925382,-8.284407,-2.069052,-6.668335,5.251127,9.138437,8.276554,8.273324,-9.102016,9.494691,3.746586,0.516195,6.209819,-1.187251,8.459825,-4.724896,-7.427342,-2.026771,6.724171,5.838519,-5.840685,-3.549308,-8.266678,-6.509188,2.092516,5.862638,4.459829,7.545414,4.380589,4.252406,6.514124,-1.844531,0.797140,9.015689,3.377364,1.156723,4.120810,8.406952,2.395157,7.046454,3.578082,-5.168770,4.260095,2.378270,9.311955,8.889389,-2.105449,-4.375038,9.496729,-0.713524,-7.325095,-5.240088,6.261687,3.804337,4.432013,-4.569238,8.204499,6.247293,-2.212137,9.809802,-7.709334,-8.831221,4.724660,-0.125790,-8.879219,1.952722,-2.116733,2.043377,-7.485808,-2.485280,0.935502,-2.291401,1.595446,9.297043,9.339425,1.727409,-4.240993,-2.801170,-9.152661,-5.333986,-1.734402,9.326104,6.394992,-0.256122,2.319840,-2.270302,1.303063,-2.845477,-1.602893,-1.433078,-2.031079,3.978192,-9.227042,-3.564050,-1.736842,9.386617,7.557021,9.238866,9.439337,-4.169718,6.719639,1.101677,2.353520,9.563839,-5.432036,9.225358,-3.020954,0.096882,0.872530,1.253110,-5.459724,-9.179552,-3.615208,-8.387768,1.399860,-5.178165,1.262322,-2.707649,3.131960,3.469329,4.228659,9.438495,5.929333,-8.616082,-3.002047,5.762653,8.633750,-5.990915,4.063350,4.693564,9.318031,3.216764,-2.979613,-6.490858,-1.076249,6.619315,-4.214266,4.368833,2.540211,-9.110784,9.228984,-4.784091,2.509609,-6.526290,8.309304,-2.159287,-5.177215,-5.111145,1.291604,-2.301356,-4.089678,8.835306,-9.842597,-4.969929,4.980890,-6.224789,-8.843435,8.659152,9.973154,6.312523,2.087909,-3.888364,1.586832,-8.486615,2.606779,-4.829742,-0.715808,-6.609204,-3.208959,-4.829268,-3.646769,6.531969,5.998040,-5.003357,-2.511556,-0.634627,3.769794,2.165815,7.837674,6.035730,9.057730,-3.076369,-3.841774,-8.083195,2.182011,-1.648047,4.252869,5.818693,-7.349753,-8.954346,7.594892,-3.520700,3.761022,6.520446,-2.862045,4.909636,3.093101,3.252772,-4.448689,-6.164817,3.058734,8.786730,-1.827787,0.824729,6.775275,-8.410563,-9.646351,0.336554,-5.754521,-9.177620,-0.900949,-6.280943,7.560482,4.756289,-5.795651,-6.447676,-9.712616,-6.482936,-4.770377,8.271236,5.544674,-0.822461,-8.596091,0.269012,-7.452449,9.116422,9.333807,-9.273434,-2.657150,7.561429,-1.797062,-1.786504,3.039620,4.687580,-0.649795,8.837546,-0.813712,-5.619316,-4.489118,-2.441871,2.134081,4.460537,7.739374,-2.215812,9.057601,-8.916728,2.291178,-3.087444,-2.873073,-8.331008,-0.592117,-2.775868,4.913592,9.220851,2.408418,-1.880607,-1.046784,4.782829,-0.057113,8.509645,7.893693,0.204565,-0.292672,-6.069696,3.761337,6.169280,-5.178039,9.415974,-1.122735,7.609885,-7.610617,4.270250,6.143223,-7.872428,-0.722091,4.793712,-2.776126,-3.234889,-8.463325,5.793888,3.750855,6.464597,-7.876844,1.346729,-8.943172,-4.516848,-4.860215,8.103406,9.668163,8.698577,5.517178,0.194620,2.085934,-8.658629,-9.009485,-9.083030,-2.661032,-2.119716,-2.711164,-2.443591,-7.119148,9.484846,-4.496689,0.293420,-0.568234,1.969720,0.778193,8.105120,-0.789125,0.186138,3.284918,-5.679846,0.056559,9.200635,-8.989460,-5.111408,-8.220308,7.796563,-1.046583,-2.958406,-2.680480,-6.441118,4.627249,-3.314889,5.120682,-4.254819,0.571654,2.021628,5.007492,-5.027325,-7.138150,9.087350,-2.693074,8.565736,8.328190,-9.199773,7.129996,2.547526,-1.326246,-9.755389,9.608166,6.792539,8.308183,-4.215078,9.600915,-5.535090,4.958595,-9.074881,-6.603720,4.535679,-6.125385,7.273974,-6.745274,-5.025459,6.547292,0.419375,3.807383,7.143412,0.297832,-9.464789,0.234873,-6.953628,-5.945135,-4.227067,-8.682323,-0.302985,2.303850,-0.140214,-4.336338,9.023734,9.632766,5.938692,0.923135,4.171903,-4.029089,6.653419,-3.422574,-4.688081,-1.522358,8.579849,-9.979496,9.494658,-0.390780,-1.577471,-1.362736,-0.938869,-6.083574,9.415987,-3.996801,-1.443212,-8.064690,-0.727175,7.015178,4.224017,-8.456420,-2.398656,-1.574144,-4.879940,6.110764,0.164756,-3.861648,6.179219,1.355354,-2.334089,9.697829,-3.902196,-6.810973,-7.540001,-1.113166,-2.253150,-0.040990,8.342891,-4.443173,5.426504,-1.698852,-8.113782,-1.370449,1.268819,-3.967336,-9.415149,-8.625245,9.814457,6.035445,-8.657929,9.024874,-6.844395,1.246802,-5.316152,-6.817543,1.451605,-9.507866,2.460533,7.890516,8.323828,1.460052,5.696974,-8.708142,-3.576893,-6.456262,0.801251,5.178080,-3.168631,-8.784725,1.116487,-5.008670,8.948575,-1.053303,-2.502251,-1.888004,9.873961,9.088136,1.492837,4.567312,7.703394,2.254106,6.598543,3.857113,6.172572,-5.658649,-4.597755,-9.172938,5.001818,-5.738421,-5.523439,2.979423,-4.860771,0.742032,0.397621,-5.266239,-1.368711,8.611222,-4.844828,2.643549,-5.574128,-6.945460,0.030628,9.335359,1.410419,-8.287614,-2.452215,2.260399,-3.182568,-7.834736,2.180625,-7.777164,-4.459163,8.704276,-6.548421,7.949537,-8.231387,9.124132,-2.700766,2.989271,2.543195,6.898281,2.230273,-4.440694,8.843185,3.832129,7.359067,0.682167,-0.426378,6.526423,4.423024,9.181029,-8.593988,8.988121,2.817712,7.236022,-2.395250,-1.788097,3.270190,9.382527,-5.153634,-4.153383,6.474549,3.176940,-5.728699,-3.746541,4.203172,-5.337092,3.892174,-9.573278,-4.013974,3.344209,5.936485,-1.681797,-8.420319,3.411910,5.117658,6.368468,4.937253,-5.443244,7.537375,-8.796168,-5.708548,-7.929109,-9.384055,4.500471,-1.732573,-8.481136,-5.724570,8.753874,-0.425549,5.252266,-1.242020,-0.489566,-0.588531,7.014192,-4.108010,-1.449388,-4.313675,-7.166646,-9.895817,6.066486,-2.603321,-5.148374,8.308081,1.413846,-5.869230,8.885571,0.146337,7.875070,-3.926773,1.698239,-2.597469,5.144358,3.106479,7.267951,4.114945,-8.305019,-2.318383,1.412975,-8.920314,-0.310878,5.177234,8.141805,7.934826,-1.910802,-6.019105,-1.084586,-1.893919,0.739812,1.547123,1.468334,-7.735643,-1.538824,-0.664596,-8.383399,2.323873,1.703262,-5.384836,4.194350,9.243693,5.641811,-5.208705,-5.221835,7.366180,-7.597750,5.971540,-8.877181,6.978515,-3.076154,-9.896354,3.295326,0.818719,-1.824324,8.399691,-1.520042,-3.187096,-0.138712,1.192263,6.915549,3.122870,-2.184653,9.894934,-5.777205,3.196562,-8.885324,1.698099,0.668144,-1.948738,-2.990200,-8.461960,4.119735,-0.108199,0.871965,-6.494819,-7.484701,-6.225757,-0.590755,4.929507,-7.222950,-0.485336,-6.881825,-8.837851,-8.834378,-2.018152,2.061916,2.534483,6.422119,-8.317849,-7.472436,1.056289,-7.051564,5.734692,9.711870,3.016145,0.055960,-7.617241,7.321551,-4.712037,7.028983,-1.901345,9.099866,2.966235,3.808314,9.276913,3.292057,2.751997,-0.487104,-3.612842,9.713991,4.499278,7.732826,3.852903,0.524883,1.846961,-1.305465,8.147316,2.116898,-2.540967,-5.062984,-0.393068,-7.348830,-0.135037,-3.142307,-5.760615,-2.955864,7.716923,0.247160,8.402262,-0.182673,1.268559,-4.264519,-0.865755,-8.438366,2.496620,-5.988952,-5.019693,3.626691,7.451212,7.770190,9.737801,1.995807,-3.368801,1.834937,2.562485,-5.977557,-3.292550,2.500201,-6.136097,0.983164,6.515098,-6.824743,-7.701787,-4.627401,5.717138,1.105139,0.882797,1.552965,4.565322,9.210229,-2.864729,-8.516551,7.097795,4.296209,7.241669,8.205882,-1.527396,-8.537657,7.405742,-8.232605,-2.253450,3.723567,4.346958,2.712296,-4.751376,8.006573,-9.391835,3.427147,-1.537585,-3.409984,-3.864428,-3.587285,8.236531,5.431238,3.899937,7.846321,-1.991655,8.584554,-0.576572,-0.094318,-5.480960,9.091210,1.129877,-5.495362,-5.297888,9.958930,-3.129180,4.711486,-2.263469,-4.873667,8.883630,-4.184318,-4.317450,8.634085,-6.723129,9.684166,0.427665,-4.048487,-4.218868,-8.338088,3.863821,0.989698,7.302815,0.049391,0.284367,0.761833,4.410841,-4.809532,-0.142328,-9.258007,-1.757941,0.119300,1.753811,-9.926552,-7.777629,-7.983221,5.460638,1.667295,-9.729034,-6.004627,-1.703039,-9.656302,7.828792,0.130094,-9.115159,2.897829,-5.424381,0.853564,-1.627107,9.623419,-9.146881,-0.682215,4.437192,7.125486,-6.800530,8.005354,0.931701,-9.404251,1.612648,-8.296617,-7.115321,-5.722660,-3.469177,-3.260165,7.436737,6.970516,9.212325,8.541273,8.728288,-5.420425,4.962100,-3.337344,-1.392016,3.552768,7.576801,4.383704,2.677135,-9.813889,6.143277,-7.433155,-2.241449,0.788419,8.899778,-3.392031,7.825721,-7.746482,-4.357984,6.871230,-5.354933,-9.799012,4.761742,2.572805,8.962706,-9.053593,-0.058678,-2.958671,3.755014,-9.789386,-0.405139,1.930560,6.342288,-4.298939,3.105842,-0.736156,7.916175,1.851275,5.480594,9.696932,-5.920490,9.088394,3.472655,6.190436,7.542380,5.310766,-8.413404,2.115856,1.688529,4.066180,-6.302954,-4.923934,9.018232,-3.875032,-3.254892,3.937619,9.845127,0.104715,-0.241308,1.069060,-2.845894,-8.316417,-1.194999,-6.169643,7.016725,-9.576122,-7.573789,3.025250,-9.526448,-8.090017,-0.202212,2.817499,-9.768427,-5.214440,6.428317,3.518775,-4.151600,-2.728310,3.007722,-9.100992,-0.696361,-0.416434,9.158352,-3.248754,6.858802,-1.342766,4.012760,-0.302594,-9.728128,-7.446618,-3.265346,5.273381,0.361613,6.402683,4.082138,-2.541650,-2.351345,-5.655244,-0.493805,7.853983,2.890672,8.935204,9.813564,-8.327460,-2.881629,3.062565,-9.101143,-5.383985,-2.370173,9.390465,1.024688,-2.765692,-1.551625,-8.331782,7.357716,6.132538,6.996208,7.172597,-5.894540,3.861504,7.452130,6.376905,7.973907,4.243331,-3.192374,9.094272,-8.023899,5.963993,-3.449551,-0.649786,-1.055147,-4.088144,-2.238379,-8.277190,-0.950075,-8.900145,7.502947,7.403100,0.733434,-7.816604,9.902431,8.810048,4.360639,6.335596,-9.853903,-1.488402,0.581989,0.452657,-7.934077,-3.288799,4.585626,-2.920243,-4.753908,2.236910,2.839246,9.395301,-9.453204,-6.095737,-1.444039,9.379414,0.860041,0.861231,0.916136,4.255147,-4.548613,-3.017481,-1.455691,-1.381619,-7.207755,-0.700133,-7.535394,1.778037,-8.810775,-4.782892,8.640105,-0.111301,9.653066,7.196553,-7.073802,5.101269,-6.364887,-6.165136,-6.381684,0.292617,-0.597768,-4.994995,-1.781473,2.232330,-4.361079,9.656644,-4.512268,-2.994522,3.366236,-0.804900,-2.983606,-7.853237,1.064312,0.535922,-8.063342,-9.691313,-0.922543,4.122253,-5.702312,-1.713141,-5.951087,-3.754687,3.993098,6.344274,-4.562835,-3.216109,9.325848,4.394699,9.302650,-0.896611,-8.280029,-9.992717,-2.231916,4.240139,6.384700,8.114111,8.110953,-2.180359,-8.293302,9.612517,0.406731,-0.802237,-4.494709,2.635249,-5.571754,2.091932,-1.864554,-2.956485,3.308563,-8.065933,4.365566,4.310668,8.521399,7.196903,2.165609,7.977935,-5.754421,4.806354,7.723597,-1.874522,-8.806373,-4.838202,2.384366,5.698261,-7.442215,6.657480,3.647272,-8.143084,-9.828408,0.079456,-9.571580,-6.688618,-5.252172,-7.707882,-5.081175,1.820946,-3.537869,-6.988134,-4.816078,7.386828,6.621270,-2.737020,6.205558,8.686583,-4.332170,5.902300,2.028979,1.976690,3.610545,-8.143920,-5.119517,-1.422854,6.808198,1.666723,3.993030,1.534371,0.038422,8.473826,-9.989296,2.756814,4.757098,-1.635590,-8.010328,-9.154271,3.391596,-3.042443,1.688022,-2.987158,6.856514,-2.032060,-6.587077,0.529832,-0.935846,-0.588668,7.357105,9.043463,-1.118719,-1.836588,-5.798973,-3.892432,3.367153,3.412186,-3.480106,0.969012,8.390490,-2.234530,1.237633,-3.458070,-3.345731,5.807404,-8.377502,1.580023,-3.904035,5.616512,-3.452396,-4.697326,-6.063339,-4.465818,2.170809,-1.222848,-0.146693,7.789566,-3.598723,6.319420,-5.960277,5.867104,6.185901,-9.599283,-7.265596,-1.972047,0.072676,-0.728898,7.889832,-6.333746,-5.877310,5.287183,6.201982,1.878656,-3.843874,0.157066,6.836083,3.428106,3.298411,-8.478704,-1.316172,-2.140868,2.355933,0.273781,-3.832336,0.473080,8.266541,4.907064,3.481638,-0.544711,9.324438,6.746212,-6.215095,1.849010,-7.831839,7.225169,6.776415,-7.424156,-5.705224,7.572632,-7.980755,-3.990990,5.381570,-4.160220,-4.710299,1.651608,-7.112255,-2.084553,6.566718,-8.446192]], dtype = "float32")#candidate|1476|(1, 2340)|const|float32
call_1475 = relay.TupleGetItem(func_1319_call(relay.reshape(const_1476.astype('float32'), [13, 15, 12]), relay.reshape(const_1476.astype('float32'), [13, 15, 12]), ), 0)
call_1477 = relay.TupleGetItem(func_1323_call(relay.reshape(const_1476.astype('float32'), [13, 15, 12]), relay.reshape(const_1476.astype('float32'), [13, 15, 12]), ), 0)
output = relay.Tuple([bop_1462,uop_1470,call_1475,const_1476,])
output2 = relay.Tuple([bop_1465,uop_1470,call_1477,const_1476,])
func_1485 = relay.Function([var_1461,], output)
mod['func_1485'] = func_1485
mod = relay.transform.InferType()(mod)
var_1486 = relay.var("var_1486", dtype = "float32", shape = (5, 8, 14))#candidate|1486|(5, 8, 14)|var|float32
output = func_1485(var_1486)
func_1487 = relay.Function([var_1486], output)
mutated_mod['func_1487'] = func_1487
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1505 = relay.var("var_1505", dtype = "float64", shape = (3, 1, 16))#candidate|1505|(3, 1, 16)|var|float64
uop_1506 = relay.rsqrt(var_1505.astype('float64')) # shape=(3, 1, 16)
func_1254_call = mod.get_global_var('func_1254')
func_1257_call = mutated_mod.get_global_var('func_1257')
var_1514 = relay.var("var_1514", dtype = "float32", shape = (1008,))#candidate|1514|(1008,)|var|float32
const_1515 = relay.const([-8.672945,4.476597,-6.950050,1.223225,9.448424,-3.780384,-1.002923,-6.533022,-7.428913,2.034361,6.012708,-1.205671,-0.860821,0.869649,-7.792457,3.614330,8.896726,-2.141480,-7.588407,4.956764,-0.509679,-5.083540,-8.986181,-9.913245,-4.983526,5.138985,-6.797705,3.541453,6.429390,-6.892134,6.552926,-7.332045,7.070363,-7.696867,-6.123046,5.481121,7.814597,9.910231,-1.340179,-9.997855,1.079102,-0.236840,-9.079984,-9.659411,8.173256,8.247132,4.441622,0.677205,-0.867631,-0.001663,2.374550,0.210125,3.207004,-9.945061,-1.250104,-4.698485,-5.329223,-6.654881,-3.487690,-9.784758,3.406442,6.741343,2.105582,9.573928,-2.285327,-2.307290,9.212522,7.957101,4.049572,-7.790201,-7.968513,6.128728,-7.783779,5.007527,2.640878,-8.814080,-6.043760,1.760757,-2.510411,3.971269,-6.386442,-8.830203,-8.712698,-2.047906,0.140365,0.598300,-2.527205,-4.975105,-5.549650,3.578938,7.567437,6.129903,2.044407,9.678911,4.527030,0.364715,-1.039902,-8.583348,0.514994,-8.867453,1.832077,-1.050596,2.148441,-4.631175,4.549831,1.684191,0.945900,-6.232889,3.283294,-8.094670,-4.868951,-3.184404,7.324716,4.455784,8.860290,1.298332,-1.644922,-6.535753,-0.410491,0.053168,4.893061,-0.292547,9.084898,6.080294,-2.184408,-4.444007,1.675169,-8.393756,4.792579,8.422427,8.184342,6.497511,6.172722,8.429045,7.766435,4.747947,6.016603,0.769626,-1.448597,7.048451,3.976706,7.991012,-5.302258,5.888325,-9.159737,7.662263,-4.898964,3.564583,-8.730866,6.995478,5.416063,-5.536971,7.037528,-6.945050,6.627753,-6.045645,6.340703,8.367775,5.056711,8.773750,-2.533646,-6.265373,8.922096,-6.252165,-2.875914,7.613267,-9.680135,3.734751,-2.340719,3.652473,2.285413,-2.633979,7.200801,5.003976,-5.151002,-3.406436,2.977240,7.448044,-4.471079,-9.882046,-7.308933,2.722123,-1.650753,-4.393929,-6.564037,-3.677364,8.423616,-6.994419,-4.911857,-5.770128,-1.262393,4.949660,7.120321,-4.758565,-7.550989,-5.721182,5.089523,7.272216,-6.958161,-8.293003,0.689881,0.338329,4.564069,-7.484486,1.203073,-0.817099,4.910542,4.302437,2.691168,4.408181,-6.499960,-6.018653,0.439923,0.713507,0.419797,-9.823215,-5.217499,9.903589,7.536139,-7.600032,-9.491141,-6.320450,-1.797910,-9.219338,6.522478,-1.586918,-8.617715,1.815701,-4.447822,3.261111,-2.247939,2.699486,3.385843,-4.984942,-1.227249,5.075327,-3.825415,-7.358220,1.424941,-8.082096,-1.447636,9.357242,1.398418,-4.552914,8.512265,3.283441,0.391743,0.385820,4.104037,5.388660,-3.608454,8.748822,-6.461305,1.344564,-8.507127,0.970638,-8.346566,1.943744,3.065690,-8.849385,-7.897922,9.992737,-8.300939,-4.608684,-8.858512,0.524701,5.206503,1.103697,-8.903278,2.480957,-0.322640,-7.477827,4.518110,-4.789593,6.084634,-3.956298,-9.163841,-8.721974,-4.960940,4.587105,-7.559399,5.203666,8.575832,-2.885718,9.755010,-5.799512,-2.156708,4.695906,6.452404,-9.054429,-4.259617,-5.816505,-5.013484,9.950812,7.649967,-1.617124,6.657423,7.996767,-2.857352,-7.880039,-7.178571,-8.532622,8.940448,-5.029009,1.756894,-8.328417,3.535354,3.964407,8.411984,-9.370579,7.878111,-1.858229,-4.064228,9.542804,8.793240,7.950439,-8.683182,-0.098517,8.429499,-4.359233,-0.639677,-1.630636,4.186003,8.266112,-5.389673,-1.969520,-8.232184,-6.786883,-5.583002,-9.782310,1.337524,4.005326,7.708208,-5.319394,8.133612,1.467106,9.867830,2.096039,3.551787,8.544798,3.739929,0.289118,-8.209295,-6.473915,4.134618,2.341323,-7.552304,7.790846,-2.020419,-8.843350,-7.850783,6.024028,7.505136,4.204187,-8.682907,-0.815878,-4.618280,7.162643,4.738076,8.183006,-5.303975,-9.808519,-1.709622,-1.723285,4.825311,-9.997869,8.607229,2.793721,-5.695545,5.210471,5.309789,-7.748132,-4.241630,-6.616616,-6.413767,-3.547978,-8.339641,4.270232,-8.846642,-5.211177,3.144806,-6.527994,-8.041506,7.229003,-4.524117,7.446381,6.146926,7.010605,-9.291996,3.883836,9.519175,4.708874,-6.757489,-1.329086,4.029073,-9.336253,2.636585,5.216038,-8.709420,4.578533,2.028400,-3.101182,-3.109398,-9.291289,-8.043287,5.145492,-5.326170,7.486749,-5.883805,4.395753,-4.008391,-6.757370,-3.990163,-9.328090,-1.319452,8.003461,-2.763617,-9.179841,4.151864,9.610731,6.737302,-5.630416,-7.427533,-9.442068,8.527128,-8.447120,-7.870621,-5.215086,-7.403059,2.239225,-4.622566,-9.340015,5.100734,0.142678,-2.550565,-5.167584,-4.266433,0.823321,-7.504007,1.952354,7.552884,-5.596919,-2.701450,7.061724,9.831973,6.329365,2.721829,-4.438124,7.075118,-9.481912,7.413555,9.695453,7.593549,-3.075546,-2.056607,0.771669,1.696057,3.450845,-4.144887,-7.624711,-9.412090,9.641217,0.773919,-1.275926,-5.092180,-7.182193,9.839955,9.069343,-2.205044,-6.712865,9.285460,4.712864,3.325435,-6.781311,6.482474,8.291057,-4.978444,4.143235,8.815549,-0.664939,-1.494709,0.011733,-6.150767,-4.341793,-6.515858,-4.943478,3.189539,-1.960493,-3.979874,-2.049648,8.485755,0.040496,0.731434,4.025316,-1.910567,-1.877165,0.984850,-7.024305,-3.401908,-8.334720,-1.547580,-4.064302,-4.965427,-7.828207,5.335290,-1.928507,3.168888,-8.407410,5.875080,4.280522,-9.416061,-5.811863,5.376035,6.557973,-4.546847,-1.259507,-8.414004,-3.741641,4.117269,-2.393682], dtype = "float64")#candidate|1515|(520,)|const|float64
call_1513 = relay.TupleGetItem(func_1254_call(relay.reshape(var_1514.astype('float32'), [9, 7, 16]), relay.reshape(const_1515.astype('float64'), [520,]), ), 0)
call_1516 = relay.TupleGetItem(func_1257_call(relay.reshape(var_1514.astype('float32'), [9, 7, 16]), relay.reshape(const_1515.astype('float64'), [520,]), ), 0)
func_1254_call = mod.get_global_var('func_1254')
func_1257_call = mutated_mod.get_global_var('func_1257')
call_1535 = relay.TupleGetItem(func_1254_call(relay.reshape(call_1513.astype('float32'), [9, 7, 16]), relay.reshape(const_1515.astype('float64'), [520,]), ), 3)
call_1536 = relay.TupleGetItem(func_1257_call(relay.reshape(call_1513.astype('float32'), [9, 7, 16]), relay.reshape(const_1515.astype('float64'), [520,]), ), 3)
func_1064_call = mod.get_global_var('func_1064')
func_1065_call = mutated_mod.get_global_var('func_1065')
call_1539 = relay.TupleGetItem(func_1064_call(), 0)
call_1540 = relay.TupleGetItem(func_1065_call(), 0)
func_1254_call = mod.get_global_var('func_1254')
func_1257_call = mutated_mod.get_global_var('func_1257')
call_1546 = relay.TupleGetItem(func_1254_call(relay.reshape(var_1514.astype('float32'), [9, 7, 16]), relay.reshape(call_1535.astype('float64'), [520,]), ), 2)
call_1547 = relay.TupleGetItem(func_1257_call(relay.reshape(var_1514.astype('float32'), [9, 7, 16]), relay.reshape(call_1535.astype('float64'), [520,]), ), 2)
output = relay.Tuple([uop_1506,call_1513,var_1514,const_1515,call_1535,call_1539,call_1546,])
output2 = relay.Tuple([uop_1506,call_1516,var_1514,const_1515,call_1536,call_1540,call_1547,])
func_1550 = relay.Function([var_1505,var_1514,], output)
mod['func_1550'] = func_1550
mod = relay.transform.InferType()(mod)
mutated_mod['func_1550'] = func_1550
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1550_call = mutated_mod.get_global_var('func_1550')
var_1552 = relay.var("var_1552", dtype = "float64", shape = (3, 1, 16))#candidate|1552|(3, 1, 16)|var|float64
var_1553 = relay.var("var_1553", dtype = "float32", shape = (1008,))#candidate|1553|(1008,)|var|float32
call_1551 = func_1550_call(var_1552,var_1553,)
output = call_1551
func_1554 = relay.Function([var_1552,var_1553,], output)
mutated_mod['func_1554'] = func_1554
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1589 = relay.var("var_1589", dtype = "float64", shape = (16, 10, 8))#candidate|1589|(16, 10, 8)|var|float64
uop_1590 = relay.sigmoid(var_1589.astype('float64')) # shape=(16, 10, 8)
output = uop_1590
output2 = uop_1590
func_1593 = relay.Function([var_1589,], output)
mod['func_1593'] = func_1593
mod = relay.transform.InferType()(mod)
var_1594 = relay.var("var_1594", dtype = "float64", shape = (16, 10, 8))#candidate|1594|(16, 10, 8)|var|float64
output = func_1593(var_1594)
func_1595 = relay.Function([var_1594], output)
mutated_mod['func_1595'] = func_1595
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1064_call = mod.get_global_var('func_1064')
func_1065_call = mutated_mod.get_global_var('func_1065')
call_1599 = relay.TupleGetItem(func_1064_call(), 1)
call_1600 = relay.TupleGetItem(func_1065_call(), 1)
func_248_call = mod.get_global_var('func_248')
func_251_call = mutated_mod.get_global_var('func_251')
const_1608 = relay.const([3.762020,8.690857,-1.836275,-9.579334,3.292550,1.362856,-3.844469,5.433569,3.535430,2.670147,3.921214,-6.815482,-5.128418,6.639083,1.958816,6.617295,-5.067722,-6.453216,7.799083,7.709988,9.988677,-7.275717,-2.258396,-0.442612,8.108557,8.421663,-4.934454,-9.198461,-0.383317,3.237243,9.782892,3.944247,1.108144,-7.260684,-1.445803,3.436833,-4.503792,-5.531607,6.685833,-2.280583,-1.734329,-7.532125,3.243042,2.404944,-5.821697,4.137243,-7.498172,8.843757,-3.777324,-9.411548,9.473298,7.840872,0.063724,-1.278174,-7.548882,-4.980164,-0.053722,-9.955238,3.781905,-8.365746,-0.198079,8.502306,-4.171164,-5.473035,-7.270368,5.884355,-0.043631,3.750139,-8.005947,6.561997,-2.995596,6.909628,-9.902979,7.922638,-4.066156,1.920506,8.388270,1.759516,1.661030,6.245140,-4.380655,6.589234,3.184578,-7.546818,-6.555705,-4.380899,9.215943,6.081515,3.874644,-7.160863,-2.681333,-0.362686,-3.050552,2.871362,9.842253,-3.252203,-9.072531,8.693125,-4.188524,8.104067,8.989686,-0.419785,-4.894341,-1.906465,-2.140462,0.124040,-2.521681,-9.238818,9.900070,-9.697279,-9.516090,-9.139841,-7.834759,-2.515918,7.227591,9.810595,-2.218028,-1.048853,6.505005,-8.666059,7.167386,2.989825,-9.895728,-6.496093,6.659416,-4.260855,1.180909,-3.967815,-2.956481,2.861802,2.640844,-1.411494,-0.792778,-3.609534,9.888929,0.174464,-7.036552,-4.609552,-1.393428,-4.751871,4.757698,-0.824724,5.327423,-2.721408,8.638965,9.599843,-5.163073,-0.625807,-9.995076,7.970546,-7.563061,-1.627170,9.163412,9.700487,-0.018413,6.222292,-7.577570,-0.202784,9.825061,-5.807349,-0.645221,1.782709,0.251940,4.144292,-2.513400,-1.444222,5.802268,8.442804,3.916829,3.147019,-5.225200,-2.917729,-2.923248,-5.527592,1.763152,-1.218057,-4.219693,1.041272,-2.391952,-8.231505,8.141368,4.861952,1.039405,2.545872,5.879178,-0.710877,0.345785,-4.432321,-2.006002,0.904711,8.164864,7.001198,8.139136,-0.349761,-2.307038,-0.231353,6.567935,-2.005184,-6.626038,9.828436,-5.991264,5.578500,-5.243716,4.396085,-2.066288,9.573980,9.570886,-2.619612,6.110303,-0.235925,7.555027,0.070483,-8.794369,4.772638,2.016363,-9.102198,8.681947,7.562301,6.717983,-6.360876,-0.494939,-4.184878,-1.707057,-9.127595,7.540722,8.947117,-5.916411,3.139408,7.093751,5.697496,6.734221,-7.391236,-4.399891,1.730065,6.004109,9.390245,8.141001,9.083292,-7.459321,8.954846,-4.548575,-7.428914,1.261940,6.175813,4.396568,8.593786,-1.340241,7.341477,8.317682,-8.126398,-8.609688,-9.445099,2.329910,1.578856,-8.948020,6.742008,-6.675869,9.680523,2.844480,-7.285208,3.178941,-2.439192,4.302743,-6.088868,-7.809492,4.557943,6.681214,-0.838672,2.364380,-6.707123,-3.924598,-7.009568,-4.145113,-4.943495,-2.756816,-4.966850,-3.659968,4.647257,-0.126873,-5.526278,2.958426,6.204808,-9.437385,3.644195,9.827738,2.188267,-2.515761,-4.457919,2.479168,-3.249955,4.897465,3.915691,5.602515,-0.397715,9.251342,-7.229493,-0.685233,8.110658,6.531099,0.500355,-2.710912,-9.381579,-8.323865,7.585154,2.046564,-7.444715,-3.746946,-9.769963,-6.991126,0.726629,-7.024654,-1.802032,0.785516,0.472745,7.992601,-4.594557,0.157276,-7.513580,6.232114,6.190588,2.666878,-9.723449,1.875471,-7.695393,3.736708,8.492665,3.744227,-1.814610,0.724159,-1.249706,-7.920462,3.437751,1.477972,-4.846437,0.734321,-5.629869,3.336364,6.369570,2.902092,-3.933562,9.581842,-4.767929,-1.984420,-0.457184,-4.146376,-5.610387,7.103310,-7.532539,4.059187,0.753396,-1.567345,1.508415,-7.288017,0.999866,-4.540974,-7.594781,0.381028,2.875449,-9.803896,-2.997244,-7.762584,1.535914,-3.251586,-8.190218,-8.689036,-3.378973,9.573106,-7.807563,-7.886378,-7.480820,-3.743350,5.638275,1.235619,5.855257,-5.062572,3.314189,-7.094297,-9.645693,-2.224661,-1.333531,-6.530119,-8.645051,-1.542102,-9.273639,-2.100315,-8.583299,6.226575,-2.300436,-8.960637,-3.075759,6.403452,7.559448,3.634471,-3.491857,-7.337036,-7.135440,-6.742299,3.613822,-3.118942,7.556657,-2.035894,6.086431,9.304881,-9.974596,2.116874,-9.467187,-0.157936,-9.853907,1.354652,-3.168988,2.464500,1.765086,1.209637,-1.543418,-1.651992,-8.583363,6.332234,-7.765303,2.748834,-2.343730,-2.255482,-6.429655,-7.773484,-6.837976,1.147799,-8.237714,6.186417,-1.862947,-4.431392,-3.072057,5.713405,8.909902,-0.415045,0.659812,-1.751971,-8.425840,3.475663,-3.465311,4.321040,7.113332,8.400055,2.430788,3.587537,8.097965,0.187081,-6.905892,-5.441697,7.237653,-8.824838,-7.457993,3.163362,4.958720,2.170334,-1.266211,-1.795171,-3.807687,0.836359,-8.299653,1.869775,-1.620183,-9.757372,9.303200,-4.693418,5.840365,-0.776305,-5.267744,9.377944,-7.369073,9.968718,0.309195,-1.831925,4.490772,-0.645150,0.626625,5.986231,-6.443373,-1.236477,-7.621431,-6.277463,5.310418,9.563499,-0.426568,5.381255,-2.629283,-1.868707,-2.999497,1.636341,-9.423454,-4.894137,3.451444,-3.193595,0.629473,-5.825938,2.657938,2.921917,1.630184,-4.812408,3.768742,-1.112974,-4.063249,-5.914335,9.017357,-8.976725,4.098609,5.508444,-8.727422,-7.728798,9.727042,8.191181,6.860285,5.029630,-1.763346,0.823890,-9.345436,3.396164,-6.863876,3.890860,9.272093,1.437449,-4.487476], dtype = "float64")#candidate|1608|(520,)|const|float64
call_1607 = relay.TupleGetItem(func_248_call(relay.reshape(const_1608.astype('float64'), [4, 13, 10])), 0)
call_1609 = relay.TupleGetItem(func_251_call(relay.reshape(const_1608.astype('float64'), [4, 13, 10])), 0)
bop_1612 = relay.minimum(call_1607.astype('float32'), relay.reshape(const_1608.astype('float32'), relay.shape_of(call_1607))) # shape=(4, 13, 10)
bop_1615 = relay.minimum(call_1609.astype('float32'), relay.reshape(const_1608.astype('float32'), relay.shape_of(call_1609))) # shape=(4, 13, 10)
output = relay.Tuple([call_1599,bop_1612,])
output2 = relay.Tuple([call_1600,bop_1615,])
func_1618 = relay.Function([], output)
mod['func_1618'] = func_1618
mod = relay.transform.InferType()(mod)
output = func_1618()
func_1619 = relay.Function([], output)
mutated_mod['func_1619'] = func_1619
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1157_call = mod.get_global_var('func_1157')
func_1158_call = mutated_mod.get_global_var('func_1158')
call_1632 = relay.TupleGetItem(func_1157_call(), 1)
call_1633 = relay.TupleGetItem(func_1158_call(), 1)
const_1642 = relay.const([[[8.737589,-1.022573,6.207304,9.383959,0.869784,3.895717,-4.397108,0.832039,5.119844,0.527394,7.623238,5.706699,6.555433,2.088953],[-3.015466,-4.207882,-2.413781,6.025050,-2.332377,7.168319,2.810152,1.577505,7.444897,6.319781,0.215869,-4.407142,7.100724,-0.444137],[0.347619,-8.973166,-2.135253,6.392010,9.326816,1.046026,-4.709676,0.816714,0.544680,1.916949,0.131697,8.298007,-3.033039,9.613965],[7.523574,-9.484252,-0.312643,-0.831857,8.552203,8.905742,3.686137,-8.010526,2.477386,3.592268,7.495921,5.874022,-0.662389,5.448753],[-8.352365,-1.148038,-9.391281,4.953561,-8.063261,6.354242,7.601318,-4.309202,4.277527,-8.430111,7.928018,-8.320274,7.327578,4.838968],[-5.435625,-0.988157,-6.731856,7.493467,4.256936,8.935940,-9.102683,9.859250,3.482084,-3.299198,2.180779,-2.489240,6.188601,7.756264],[-4.424955,-9.238144,8.497726,-0.994993,7.252996,-3.884254,-7.115687,-6.382322,-9.052142,-6.549871,-8.498162,9.016221,-2.465662,-3.954132],[-6.508844,-6.053910,-6.801568,2.690392,5.960019,4.183941,2.260865,5.973100,8.238965,0.933477,7.045509,-1.966895,-0.107122,9.391737]],[[8.669366,-1.088447,9.389476,-6.380256,0.781561,4.573585,8.663240,-3.366368,-2.185182,-9.127292,7.056995,-9.110642,-9.062595,-4.639713],[-4.901679,3.812815,7.437337,4.216730,-8.987800,1.345150,6.915082,-7.234423,4.570857,-3.376443,-2.396077,-2.861648,-2.785379,-7.481404],[5.426683,6.777538,0.027174,0.870740,7.937770,6.258638,-7.522457,0.865172,-5.097024,2.776997,-3.082324,5.146359,-0.653494,3.095708],[-3.504703,2.181910,-6.868480,5.697875,7.353254,3.211555,2.029137,-4.799356,2.227771,-6.995712,6.024365,9.655404,0.454863,-4.008744],[-5.951247,-9.376624,-4.522452,-0.660336,-7.603841,-8.030794,-3.252427,-3.943745,-2.483691,-5.701675,1.567378,4.547003,-0.990854,-3.159496],[-7.784887,2.153238,-7.142563,3.678831,-3.605140,-5.065900,-7.145777,-0.101355,-5.938486,-6.764589,-8.593623,-5.472628,2.349718,-3.198651],[-5.884129,6.438661,-4.654616,-2.543236,-8.717133,9.883317,0.434869,-6.607171,-0.820407,1.041608,9.761050,9.772049,-6.975170,3.107503],[-2.729582,6.971445,8.288360,1.104850,0.020990,-0.960481,6.693484,-0.373748,1.310521,-7.324222,-5.670786,-7.858598,-4.710091,6.799988]],[[7.368279,-6.353694,-8.774236,5.323160,4.708746,3.740856,-1.936068,-2.358958,0.313714,-0.268949,6.828453,-5.873558,-2.331393,-5.517678],[9.713537,6.972117,-2.616191,-0.884970,1.216447,-5.204907,-8.103149,-2.688081,-7.837059,-9.071936,1.032372,-3.352632,-6.123642,-5.572658],[-0.739380,3.878453,-1.272228,-0.003508,-7.200365,-6.136129,-9.004789,-7.700778,-0.249862,2.342418,-6.087998,8.613411,5.048398,-6.120454],[-0.658837,-4.177698,1.960237,-1.028025,1.455271,1.627423,8.130195,3.505398,-7.582166,-6.545694,-2.323037,2.159457,-5.241450,7.991036],[1.591561,5.167363,-9.304857,-3.468622,3.443608,-5.633657,8.722694,-3.631953,7.466897,1.199968,-7.440464,-0.110025,1.803419,2.420649],[-5.130102,2.125547,-9.926679,-0.660169,2.030465,9.409894,5.955603,4.331912,8.480858,-4.575531,6.548168,-5.788969,0.762778,8.469168],[9.356834,-0.892864,9.956090,3.092616,-4.962536,-3.621837,-7.075490,-7.950825,1.181314,-8.569179,-1.054510,9.043864,-6.384613,3.599747],[1.135737,2.619777,6.787611,-2.482345,0.091429,-7.283506,6.746027,6.716443,-1.292168,-1.851148,4.060435,-7.136059,9.158622,-5.118115]],[[-1.636034,2.177939,-4.420338,-0.743825,7.114435,-7.986458,-1.675008,-5.837856,9.953843,8.971602,-3.283622,-7.657990,-2.648542,0.650370],[-5.278010,-8.074002,4.755464,-3.544015,-4.919847,3.552856,-2.884121,-6.275709,-2.217941,-9.208153,9.144691,-7.312198,5.719298,0.059713],[0.158638,2.847037,-9.690685,-7.773987,-3.559549,5.914868,6.993909,-7.429612,-0.793770,-9.286041,2.622047,2.841116,-6.634772,-7.008045],[-6.006288,-4.545390,-8.782301,3.445960,5.113136,-7.097449,0.684681,-8.845597,-8.441208,-0.307313,7.578459,-2.921564,7.778048,0.799798],[4.498478,-1.067527,-6.565968,6.926645,-3.256050,8.897792,8.505496,6.112883,-5.883038,2.445638,-7.878391,0.851380,1.130768,2.033204],[8.882488,-1.198499,-2.335779,-2.192488,7.452946,-7.524939,0.559022,7.171128,7.571320,5.861568,-2.892238,3.204465,-3.779705,1.299004],[-0.022597,-2.046326,6.818710,-1.516903,0.987693,-1.135798,-6.516538,8.906195,8.534642,-7.926717,3.510983,-1.330391,1.152282,5.092580],[-1.972151,3.251781,6.209625,8.766355,-8.437793,-5.047028,-9.030644,8.144859,1.341428,-2.821328,1.321810,-0.101518,-0.041531,6.573186]],[[-0.958657,1.409726,2.171823,2.709904,7.323171,0.256139,-1.974149,0.994469,8.044235,4.369872,8.668094,9.350157,4.810054,-6.720470],[-4.388490,7.391552,-9.528688,5.722398,7.984547,-8.548288,3.749154,-2.883476,9.214327,1.390444,-4.811425,-5.097508,-4.622969,6.098079],[0.081524,-3.579458,4.757163,-8.190579,-8.741917,3.196746,-7.842964,-5.751701,7.463321,2.101317,5.316294,5.033444,6.972142,1.447968],[6.801501,9.723695,-7.207043,-6.029863,9.564994,8.442443,8.439837,6.368563,-4.788555,8.442585,9.089268,3.533754,2.863728,-9.673747],[-5.268589,8.777613,-5.749208,-4.020011,-4.742981,-0.205078,6.605967,4.964747,-2.260802,-9.261670,3.425050,3.893802,-4.929407,6.851625],[5.664461,-7.529870,5.301578,-4.781048,4.867274,3.133147,3.581594,9.238701,4.566979,4.042082,-9.429554,9.438451,-8.975527,-0.122394],[9.829153,-0.921529,1.747066,-6.573206,-4.297487,1.984095,9.658323,8.370300,-6.148488,1.035136,-3.171867,-9.233358,-4.241140,-6.740883],[-4.956412,1.452860,-1.130852,-0.603144,-3.146398,-7.867043,2.727975,-4.421622,-2.032590,-4.717521,4.730040,5.939497,-0.407862,-6.238916]]], dtype = "float32")#candidate|1642|(5, 8, 14)|const|float32
bop_1643 = relay.right_shift(call_1632.astype('int16'), relay.reshape(const_1642.astype('int16'), relay.shape_of(call_1632))) # shape=(5, 8, 14)
bop_1646 = relay.right_shift(call_1633.astype('int16'), relay.reshape(const_1642.astype('int16'), relay.shape_of(call_1633))) # shape=(5, 8, 14)
output = relay.Tuple([bop_1643,])
output2 = relay.Tuple([bop_1646,])
func_1652 = relay.Function([], output)
mod['func_1652'] = func_1652
mod = relay.transform.InferType()(mod)
mutated_mod['func_1652'] = func_1652
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1652_call = mutated_mod.get_global_var('func_1652')
call_1653 = func_1652_call()
output = call_1653
func_1654 = relay.Function([], output)
mutated_mod['func_1654'] = func_1654
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1157_call = mod.get_global_var('func_1157')
func_1158_call = mutated_mod.get_global_var('func_1158')
call_1663 = relay.TupleGetItem(func_1157_call(), 0)
call_1664 = relay.TupleGetItem(func_1158_call(), 0)
func_1254_call = mod.get_global_var('func_1254')
func_1257_call = mutated_mod.get_global_var('func_1257')
const_1678 = relay.const([3.326079,0.820040,-8.150334,9.727027,-6.868788,-8.934411,6.755420,-9.717021,8.014553,-4.157309,2.167667,8.913921,1.595095,-1.898625,9.432972,2.976677,5.032531,8.763987,6.924100,-6.933922,7.716957,-1.051212,-0.474058,2.422754,1.059310,-5.887637,-3.869454,-3.345833,-9.404513,-9.597570,-6.730584,-0.571408,-4.816477,2.320970,7.910579,-0.273357,-3.813244,8.228279,0.664785,7.466629,8.683033,0.771802,8.756190,8.695631,6.590161,8.244147,-1.536285,9.705035,3.804805,-5.593087,1.193176,-5.475548,-0.336961,-4.889183,-5.551354,-4.404649,-9.263338,3.767707,5.620437,7.344709,8.372055,-7.155171,-8.632622,-8.950958,-8.521199,-1.745336,6.894696,9.358027,0.064834,-9.697646,0.658429,6.129787,-3.004257,-7.577426,4.232770,-9.421713,-7.983478,-8.541855,5.063282,0.962321,-0.893530,1.983447,-8.945132,2.688642,-5.081518,9.991642,-2.701661,2.291572,-4.050182,-7.837777,8.489336,-5.089155,3.205988,2.869049,4.996839,-0.665768,-7.387274,-4.605496,-1.303915,-4.931860,3.417637,2.224928,-9.209240,-5.895903,-5.620979,6.210326,-8.678591,4.694257,-3.528642,-9.965270,2.493176,4.211175,-0.786587,-6.288434,3.275012,9.495969,9.141238,-1.718265,-6.104035,-0.164955,5.940027,-9.760871,6.750705,9.124420,-4.493174,1.810803,-4.942615,-2.135348,-7.635432,-9.350676,8.607734,-0.848090,-5.350385,4.901263,-8.036732,1.610574,9.813328,6.802424,2.430800,-9.954758,-2.356514,-3.335646,8.301759,5.635067,7.240773,5.129438,7.996400,7.314526,4.089395,-2.542815,-8.978972,8.893405,-6.236067,-6.254539,-8.239175,5.763115,2.390157,0.140970,-6.704925,-5.431208,-9.965223,4.951334,-1.481250,1.577599,4.472208,5.495490,7.555602,7.711340,4.826804,-4.387224,-0.289743,-8.197121,2.959705,-8.823891,-3.155714,6.528215,0.323581,-5.957848,-4.005918,7.145780,-6.084549,8.944503,5.834498,1.264852,0.535550,-3.880202,4.861014,9.810811,3.111001,8.280410,-5.462806,-6.345962,9.296286,9.706638,9.556565,2.559813,5.861981,9.117625,2.798110,6.451486,-0.216583,-6.025284,-7.240738,-7.697908,-7.526673,5.259979,1.693982,-7.682861,7.276076,-7.569440,-9.556890,-3.544867,-9.643586,-3.032867,-7.425035,-5.482833,-3.832243,-3.618033,-6.541111,-6.555584,-1.574193,-8.715564,5.991667,-0.690077,-6.261024,7.110684,-1.507862,2.817896,-9.267847,-5.419902,1.864311,8.605749,-1.677757,5.619473,8.556601,6.067490,8.971584,9.337829,-6.070671,0.780176,-0.036450,0.365085,-0.375328,2.704086,-1.853664,5.599577,8.449301,4.692393,5.148840,-5.083720,-7.968349,-3.643465,5.739858,8.428931,-1.534923,7.964230,6.575051,8.124064,8.399553,-0.759182,2.168562,2.200882,7.095271,-9.634750,4.157571,9.437888,-9.314472,-2.465753,8.601303,3.620169,-2.593873,-4.206804,6.066862,-4.000259,-4.477559,-6.976813,-6.751694,-1.949914,5.567542,-1.148653,-4.101271,-3.445693,-4.913730,-5.183899,-0.958454,1.520403,-6.205774,7.752074,3.124586,-5.267124,-6.943394,5.893359,5.646628,-5.961355,-4.806904,1.609789,-1.000436,2.456780,-2.282292,-7.783547,3.875260,-8.992390,0.940699,0.143489,1.849517,8.357745,9.399355,-7.507811,-0.300809,2.227575,-0.759955,8.990064,-3.847872,7.562141,7.471489,-4.024365,9.160682,-4.150912,-9.393752,9.472532,-4.578426,0.309893,-4.794986,-5.275928,4.063729,5.716520,-0.041562,-9.835085,-1.773010,-1.860928,-6.561056,-5.615178,8.570106,-1.815300,9.690826,3.802115,-6.399204,6.166747,-6.511071,-1.948902,1.451023,4.717510,-2.094262,-1.901441,2.790453,-8.101291,3.452817,8.723865,-1.634453,-6.793225,-1.726550,0.155325,0.435411,4.710650,-7.970649,9.796574,0.721446,7.112078,-1.745658,-8.503812,-4.336534,1.683118,-0.984085,-6.000367,2.833891,-1.919593,-9.105904,-2.885341,-6.938576,-5.444676,5.404321,-8.108986,-1.555162,0.722326,6.345483,2.971509,-7.332199,-4.211457,8.171337,3.058241,5.447510,-6.987581,7.266143,6.387711,-5.018516,-0.537721,4.822488,9.300996,7.193712,0.164822,-2.698541,-8.026435,5.142007,5.811625,-8.156917,6.373790,-5.597133,5.948464,6.686539,5.397074,-7.268407,3.211768,-9.189110,-8.607745,8.158405,8.579845,-5.886199,3.573497,-0.845805,-2.104869,3.874250,-0.938970,-9.687045,-8.883892,4.912831,2.066898,9.589992,1.339232,4.919218,5.055573,6.403811,3.845527,3.923173,-8.350763,5.417009,-3.588265,-0.214438,7.215131,-2.704745,-1.008928,3.873239,-3.107170,4.001801,8.189300,9.166320,5.902193,5.261307,-7.877056,6.046507,-6.464116,6.175651,-9.682915,8.024851,-6.502732,0.849009,1.539031,8.039987,5.061704,-4.602867,7.058750,-8.116605,-5.257262,8.597049,-1.481171,0.707079,-9.555366,0.898486,0.590674,-0.289082,-8.135992,-3.094949,-5.667348,6.381157,-4.555670,-1.603716,1.838763,0.736067,-0.673773,-2.898769,8.623849,3.785069,2.044323,-3.197093,-7.255068,-2.107097,-9.796123,-5.380799,-8.519586,1.972160,9.845691,3.002296,-4.552518,7.232345,0.676288,5.365683,1.275712,-8.576207,6.241507,3.341979,4.751586,-5.875483,0.840468,1.593624,8.448336,-3.987570,-0.038389,6.832692,-6.304933,-5.932572,3.917705,8.296089,-3.163852,9.263719,-5.430784,5.736435,-4.763349,-5.247047,3.799668,-4.808702,-8.649528,6.211425,-8.557743,3.095055,5.938317,-7.119954,0.907079,-0.352425,-1.231935,7.373214,-3.140728,-0.788160,-3.046838,-2.784218,-1.199707,-5.056967,-9.844542,-7.892256,2.989060,7.693011,9.993621,8.987989,9.939814,-9.570393,9.493364,1.584983,5.822106,-7.588687,-1.908050,1.103407,7.853751,6.498409,5.102804,-2.768644,6.744900,-7.407387,-4.452282,0.455223,5.212262,6.909240,7.428751,-9.653084,-1.981230,-0.173692,-2.806839,-0.199971,-3.131294,7.098498,3.267060,-7.459463,1.054538,3.004209,-2.654857,-9.669092,-9.451581,-5.956137,-9.345265,-2.185304,3.497068,7.308735,-5.105799,-4.088681,0.488520,7.442173,3.505413,9.413940,-9.259108,-4.221465,6.111071,-5.893386,-8.760306,0.935826,2.886563,-8.650372,-6.104714,-1.472650,7.791459,3.961306,-3.323244,9.193561,-3.774494,5.009978,6.164402,7.413236,-7.327208,-6.228580,-2.540452,4.136802,-5.198835,5.950653,0.184538,5.271927,-4.023687,6.858398,5.818460,-1.353960,6.539716,-4.136249,-4.411662,6.072012,3.574575,2.411851,8.835514,-8.350834,-9.805899,-8.495624,3.491585,-4.114428,2.380223,5.076807,-9.769330,-4.744895,1.263849,-2.106779,9.280355,-5.993531,-8.248948,-4.413933,-4.963993,4.039745,-3.336439,-4.160241,5.142180,4.316087,-0.042054,-3.895796,7.154038,-0.752852,0.496429,-7.465524,-8.585541,-6.032053,-5.628398,-7.793974,8.334592,-0.245914,9.581099,0.298674,8.919788,7.627247,2.874264,5.547698,7.851053,5.401362,-7.233449,0.664627,-9.990571,9.600527,-6.806501,4.824472,5.335121,-9.677463,-4.487725,-4.814701,-3.695284,4.162397,8.574766,-1.183671,-0.599157,7.484513,1.052725,0.287594,-9.709305,6.536507,-0.032042,-2.116481,-3.175160,8.866592,3.123830,-3.426707,1.569171,0.213058,-8.543968,7.073881,-0.918245,-9.807878,2.924651,1.000094,-4.461931,1.600496,-8.539364,9.354989,-0.655368,7.825655,-2.589555,6.453126,-5.616342,-6.617807,1.120457,9.806121,-9.471384,1.361659,-8.661807,-5.558463,6.342212,3.886486,9.711582,-6.871069,3.757582,9.838871,-1.842849,-1.527113,-3.988317,8.448761,-2.711095,1.365423,-3.023899,4.137942,1.316622,-0.336460,5.434437,-4.297369,-4.727741,-3.206904,3.270139,3.221308,-4.783758,-0.254985,-3.426230,-6.776785,-5.166891,8.999379,8.406712,6.540695,-5.958506,8.179656,-5.261461,1.084153,6.158544,-7.075230,6.561004,-6.066010,4.503487,-5.090145,-1.108649,1.714996,-9.980424,-7.302867,5.564617,8.441442,7.551369,8.588954,-9.115265,-5.369139,-1.499205,-3.728726,-9.743876,9.583506,1.444189,1.347185,5.511848,7.642794,6.959153,1.793247,0.667496,4.794972,9.828645,-5.249096,2.065049,6.692911,-8.768589,8.556475,-4.671656,-6.511585,4.364849,-0.625013,-7.358795,-4.909399,4.446808,-6.995229,-5.751523,7.498527,-0.515491,-1.884370,-4.920640,0.091913,8.419609,4.667688,-1.248258,-2.144362,5.773505,-9.465003,-2.215013,8.140728,-7.815261,-8.494768,8.191216,-5.070831,-0.891430,5.048619,6.035363,8.061098,-5.764051,-7.651976,-8.963408,-2.563500,9.246405,-8.191961,4.836381,2.824672,8.999513,1.425538,6.067597,0.875733,-6.737697,-4.212943,9.177473,-8.154607,-6.462209,-2.439975,4.219354,-0.740325,5.155956,-6.978947,7.365750,-5.456586,-3.800518,4.036917,-2.749521,7.027766,-0.886652,-1.027033,6.787571,0.813828,6.737142,-8.083361,-3.471263,-8.050553,3.753466,-7.363767,-6.355996,-0.611893,-8.769462,9.633933,-8.804408,4.634934,-0.106789,-5.542136,6.933040,-3.853205,-8.253052,0.861908,0.402232,-2.107757,9.851298,0.602505,-1.627975,-9.141987,-3.789516,1.034138,-0.519611,6.894668,-2.160073,-6.026114,1.516483,-7.425333,0.140262,-3.273884,6.211318,-0.885988,9.773383,2.279306,0.008798,1.354787,0.224667,-3.949437,0.943012,-2.731604,8.935084,2.783972,9.122046,-8.212666,-0.215139,-7.031670,-8.167848,-8.934200,-0.787831,8.519611,3.492092,4.003401,3.984737,-0.837345,6.462515,-9.947267,9.120526,0.204559,2.894674,5.787339,-0.573717,-0.853088,-3.772012,1.945599,-9.740236,-0.064178,9.582822,-2.653503,5.220929,4.927705,4.990520,-0.005305,-9.844420,-4.215130,5.998654,8.314821,0.848905,-9.602073,-7.273018,-9.870718,-8.144518,-2.644389,0.189845,-3.867755,3.134894,6.263519,8.973411,7.184430,-8.042024,-2.888325,8.100232,7.909212,6.053949,7.707331,3.660459,-2.878259,-7.973225,8.070627,6.301320,8.401091,-8.486027,2.017301,-8.162237,8.545563,-4.958914,-4.936896,4.622118,-4.040207,-6.646830,-0.943836,-5.861307,3.181041,9.973117,-0.394844,0.459611,5.558355,-5.956526,6.716102,1.958309,9.431802,-9.375699,2.362445,-8.542064,-5.415185,7.444773,-2.536785,2.830029,8.988792,4.799805,2.348562,7.070018,-3.809405,-7.300682,-5.456259,-5.348379,3.596643,3.395925,-2.599970,2.895163,-4.927119,4.065317,-1.155126,0.630891,0.364466,9.826374,9.586190,7.126057,-9.274238,1.042321,9.143495,5.694198,8.667176,9.720887,-4.836162,-5.550637,-0.067767,5.193771,9.022919,-5.812750,0.651106,8.952773,-4.272456,-6.899304,-4.883739,6.628316,8.432174,6.721137,4.004098,-9.742085,6.022296,1.895910], dtype = "float32")#candidate|1678|(1008,)|const|float32
var_1679 = relay.var("var_1679", dtype = "float64", shape = (260, 2))#candidate|1679|(260, 2)|var|float64
call_1677 = relay.TupleGetItem(func_1254_call(relay.reshape(const_1678.astype('float32'), [9, 7, 16]), relay.reshape(var_1679.astype('float64'), [520,]), ), 3)
call_1680 = relay.TupleGetItem(func_1257_call(relay.reshape(const_1678.astype('float32'), [9, 7, 16]), relay.reshape(var_1679.astype('float64'), [520,]), ), 3)
func_1254_call = mod.get_global_var('func_1254')
func_1257_call = mutated_mod.get_global_var('func_1257')
call_1688 = relay.TupleGetItem(func_1254_call(relay.reshape(const_1678.astype('float32'), [9, 7, 16]), relay.reshape(var_1679.astype('float64'), [520,]), ), 2)
call_1689 = relay.TupleGetItem(func_1257_call(relay.reshape(const_1678.astype('float32'), [9, 7, 16]), relay.reshape(var_1679.astype('float64'), [520,]), ), 2)
output = relay.Tuple([call_1663,call_1677,const_1678,var_1679,call_1688,])
output2 = relay.Tuple([call_1664,call_1680,const_1678,var_1679,call_1689,])
func_1700 = relay.Function([var_1679,], output)
mod['func_1700'] = func_1700
mod = relay.transform.InferType()(mod)
var_1701 = relay.var("var_1701", dtype = "float64", shape = (260, 2))#candidate|1701|(260, 2)|var|float64
output = func_1700(var_1701)
func_1702 = relay.Function([var_1701], output)
mutated_mod['func_1702'] = func_1702
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1011_call = mod.get_global_var('func_1011')
func_1012_call = mutated_mod.get_global_var('func_1012')
call_1750 = relay.TupleGetItem(func_1011_call(), 0)
call_1751 = relay.TupleGetItem(func_1012_call(), 0)
output = relay.Tuple([call_1750,])
output2 = relay.Tuple([call_1751,])
func_1755 = relay.Function([], output)
mod['func_1755'] = func_1755
mod = relay.transform.InferType()(mod)
output = func_1755()
func_1756 = relay.Function([], output)
mutated_mod['func_1756'] = func_1756
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1064_call = mod.get_global_var('func_1064')
func_1065_call = mutated_mod.get_global_var('func_1065')
call_1783 = relay.TupleGetItem(func_1064_call(), 1)
call_1784 = relay.TupleGetItem(func_1065_call(), 1)
var_1785 = relay.var("var_1785", dtype = "float32", shape = (5, 8, 14))#candidate|1785|(5, 8, 14)|var|float32
bop_1786 = relay.equal(call_1783.astype('bool'), relay.reshape(var_1785.astype('bool'), relay.shape_of(call_1783))) # shape=(5, 8, 14)
bop_1789 = relay.equal(call_1784.astype('bool'), relay.reshape(var_1785.astype('bool'), relay.shape_of(call_1784))) # shape=(5, 8, 14)
uop_1801 = relay.sin(call_1783.astype('float32')) # shape=(5, 8, 14)
uop_1803 = relay.sin(call_1784.astype('float32')) # shape=(5, 8, 14)
func_1356_call = mod.get_global_var('func_1356')
func_1360_call = mutated_mod.get_global_var('func_1360')
var_1810 = relay.var("var_1810", dtype = "int16", shape = (128,))#candidate|1810|(128,)|var|int16
const_1811 = relay.const([[-2,-1,-4,7],[3,7,7,-10],[-3,2,1,-7],[-2,2,3,-8],[-4,5,8,-1],[-6,-4,4,5],[-4,7,-7,-4],[9,6,8,9],[2,10,-6,2],[1,6,7,5],[8,-9,-6,1],[-9,-9,2,-6],[10,4,-9,7],[-2,5,4,-3],[2,5,-4,-3],[-7,9,10,6],[3,3,8,-4],[-5,-8,-9,-9],[-4,8,5,3],[6,1,-7,-6],[-9,-4,1,5],[-9,4,5,-10],[10,-9,3,-4],[3,-5,-4,-3],[-1,10,-5,7],[8,-3,-5,-4],[-10,9,-4,-2],[-2,-7,1,-9],[-7,4,4,7],[5,6,10,6],[-2,5,1,5],[6,10,-2,-10],[10,2,-7,5],[-8,3,-1,-9],[-7,-1,2,2],[7,-7,-2,7],[-3,3,7,-2],[-7,2,6,-2],[-8,1,-8,9],[-6,-2,7,10],[10,10,1,2],[-8,7,8,9],[2,-5,5,-4],[4,9,7,1],[-5,5,-2,-6],[-3,-6,-4,-8],[-5,7,-1,-2],[8,8,1,5],[8,-1,-8,3],[-2,6,-4,-2],[-9,10,9,5],[-1,5,2,-9],[-9,-3,9,-2],[-4,7,-3,6],[8,-2,-6,-4],[-1,3,8,-6],[-4,8,6,4],[-6,-10,8,1],[-4,2,-1,10],[-7,7,-7,-6],[3,-4,-4,1],[-7,-1,10,2],[-6,-5,3,10],[8,-9,2,6],[9,-4,-8,3],[9,2,-5,-5],[-3,9,-6,7],[-8,-1,-2,-6],[6,-2,-7,10],[8,-5,-10,-7],[1,-8,6,-2],[-2,7,-1,4],[2,-4,10,3],[7,4,-8,-10],[-8,-7,6,1],[4,3,-10,3],[-3,-1,10,-5],[-3,6,-10,2],[9,-4,-9,-6],[-4,10,-7,8],[-1,-5,4,-10],[8,10,-6,-6],[2,-1,-5,-7],[7,-3,-10,4],[-9,-2,8,-9],[10,4,2,3],[2,-8,-3,5],[10,-4,-10,-2],[9,3,-6,2],[2,1,8,1],[-8,-6,-3,10],[-1,-6,5,2],[-1,-1,-7,-2],[1,-6,-9,-8],[7,-9,4,-6],[6,-8,1,6],[4,9,-10,-4],[-6,9,-9,-2],[8,-9,-3,-7],[-8,-9,-4,-2],[-2,-4,4,3],[-10,5,7,6],[-1,10,-1,-10],[-4,9,-5,8],[4,10,-10,5],[-5,-9,-8,-10],[9,2,8,10],[-4,-10,2,6],[8,1,9,7],[-6,6,1,-4],[7,2,-9,-7],[-1,-2,5,-6],[-4,-2,-5,-8],[-7,-7,-2,1],[-9,7,5,-9],[-3,9,8,2],[4,-6,-4,2],[-9,-10,-1,4],[-1,-8,-7,3],[9,-7,-9,1],[-2,4,1,7],[-4,3,-7,-7],[-8,-5,3,4],[-1,-9,1,-8],[6,10,10,7],[6,9,-7,-10],[-1,-7,-4,-4],[-3,9,-4,-8],[1,-8,-7,4],[5,5,-2,-4],[-3,-7,5,3],[-8,-1,-3,1],[-8,4,-3,9],[6,9,-2,-2],[5,1,3,-7],[10,3,8,-7],[2,4,-2,3],[-10,7,-5,-6],[-8,-10,10,-2],[-7,4,-9,-4],[4,8,4,5],[6,-5,-9,-5],[7,-8,3,9],[-6,-7,-4,10],[10,6,-1,-5],[1,2,-2,-8],[2,-6,-9,7],[10,2,5,-3],[-10,-7,8,-2],[4,2,8,-5],[-6,-7,7,-2],[-6,-10,6,5],[10,9,-6,10],[4,7,10,4],[2,2,-3,-6],[-9,-1,-8,3],[8,8,2,5],[-8,9,6,-7],[-3,8,3,7],[10,9,6,-6],[5,-10,1,-4],[-10,10,-4,-4],[6,-5,8,3],[1,6,3,4],[7,4,3,-9],[-10,-9,-6,3],[9,-10,-9,-4],[6,-10,3,8],[1,-8,-9,7],[5,-6,-1,2],[-5,8,9,6],[4,-4,-9,-5],[-4,5,9,5],[-10,-7,-9,2],[3,-10,1,-8],[10,-10,-4,-1],[9,6,-8,1],[1,8,7,6],[7,4,9,-1],[-4,2,-9,10],[7,-3,6,-2],[2,-9,-7,10],[-10,-1,4,2],[4,-10,4,-10],[-6,7,-7,-1],[8,-7,-4,6],[1,6,9,5],[-9,8,-5,-8],[1,4,-6,-6],[-2,7,2,-3],[3,8,5,-9],[10,-2,6,-7],[7,5,-4,-8],[-8,6,2,-4],[-9,1,6,2],[7,-3,4,-2],[-1,6,1,-6],[1,-10,-1,8],[-5,-6,8,8],[-2,2,1,8],[-2,7,-8,-2],[-5,2,5,8],[10,2,3,-5],[3,2,-1,5],[-7,-7,-7,6],[9,10,9,-5],[-5,6,9,3],[-1,7,5,5],[8,9,-9,9],[-4,-4,-10,-1],[-6,-1,2,-10],[-8,3,10,-7],[10,-4,-4,10],[4,10,-3,-7],[2,5,-3,-5],[3,-6,9,-1],[-1,9,8,3],[3,5,8,6],[-3,4,-7,7],[-8,-3,8,6],[-9,-7,8,10],[-5,9,9,3],[-8,8,-5,-5],[9,2,2,-7],[6,-9,-3,-6],[-3,2,-10,-6],[2,-4,-8,-2],[9,-4,-3,-1],[2,1,-8,-4],[2,5,-10,10],[4,1,-3,8],[-8,-2,-3,9],[-4,3,-7,-2],[-2,1,-7,-6],[-5,2,-1,-1],[-3,9,7,-1],[8,10,10,6],[-1,8,10,-9],[-10,-2,-1,9],[5,2,-5,10],[7,-1,-3,3],[-6,10,-4,10],[9,-4,-4,-6],[8,-8,1,8],[-9,8,-8,4],[1,-1,-4,-8],[10,5,4,2],[1,7,-9,3],[6,7,-2,9],[8,10,-8,7],[2,-3,-7,-10],[-6,-2,4,10],[-7,-5,2,4],[-3,-10,-3,-10],[-10,1,9,-6],[10,9,-3,3],[7,-9,-3,7],[-5,6,5,-7],[2,-2,1,7],[6,-5,-4,9],[8,10,-8,7],[7,5,3,9],[-10,-8,1,-2],[1,7,8,9],[-1,7,-10,-5],[10,-9,2,8],[-10,-2,-2,-1],[-2,8,-4,5],[-8,7,9,-4],[-3,-1,10,-6],[-6,5,-3,-10],[-5,-4,-7,-4],[-3,2,-2,10],[9,10,-3,-2],[-7,6,3,6],[4,7,-8,6],[-2,3,5,1],[7,5,-2,-8],[6,-10,9,9],[5,-7,-8,6],[5,6,-5,6],[-2,1,-8,2],[2,-4,-7,8],[-10,-9,-10,-8],[4,-5,-3,-10],[-1,-9,-7,-6],[-5,4,5,6],[-7,-6,9,3],[10,-2,-10,9],[3,-2,-1,1],[-9,9,-7,1],[-9,-2,-3,-4],[3,-9,8,6],[-8,-2,-7,6],[-8,-3,-10,-8],[3,9,-4,-10],[-9,-2,7,-8],[6,-5,-5,-10],[5,-7,-10,-8],[-4,9,-2,-5],[-8,-9,4,-9],[9,3,6,-6],[-9,-8,9,-1],[4,1,9,-6],[2,1,3,4],[3,-6,3,1],[-7,10,-4,-9],[1,4,-5,-6],[-6,-2,-4,-10],[6,-7,8,-2],[7,-2,-4,-1],[2,-4,8,5],[6,10,4,8],[-6,10,5,2],[5,-6,7,-6],[5,-10,-10,4],[2,8,7,-7],[-3,8,10,-3],[-6,-6,6,-5],[-1,-3,-8,9],[-4,8,-2,-4],[-6,6,-4,3],[-8,4,2,-7],[2,6,-9,-2],[1,-4,-8,2],[3,-2,-7,-7],[-5,-10,-10,-1],[-7,4,3,8],[-9,9,-3,1],[-8,-2,-7,9],[10,10,4,-2],[-10,6,-4,7],[1,1,6,-9],[-5,9,-10,6],[6,9,9,1],[-10,5,5,9],[10,7,2,-2],[9,-10,8,8],[-6,-3,10,6],[-3,6,-3,-4],[-5,-10,-9,5],[-4,6,3,-5],[10,-5,6,-10],[4,-6,1,1],[1,2,-4,7],[-3,9,6,6],[5,-8,-5,-9],[6,-4,-7,10],[6,9,10,9],[10,1,3,-4],[9,9,-10,-10],[4,-3,1,-9],[7,1,6,1],[8,-2,7,9],[-7,9,7,-6],[-5,3,2,5],[10,7,5,-1],[-9,-2,-8,4],[1,5,-5,8],[9,6,-3,-3],[8,-10,9,4],[4,-4,-10,8],[-2,-7,3,4],[9,5,4,9],[-7,5,-2,-4],[8,1,-4,7],[-3,2,-4,-7],[-10,-6,-2,8],[-4,5,-3,-2],[-7,-1,1,1],[-6,9,-1,10],[-1,-6,1,-2],[7,9,-8,-5],[6,-10,-5,1],[3,-9,8,-4],[8,-4,3,2],[-5,2,-5,-2],[4,-6,-10,8],[8,-8,1,-5],[-3,5,-5,8],[1,-5,8,5],[-9,8,-9,5],[-8,-2,-4,-7],[8,-2,1,4],[9,-8,7,8],[-4,7,5,-1],[-4,3,1,-4],[-1,3,6,4],[9,10,-5,3],[-5,3,2,-6],[-6,-6,-6,-8],[-7,-9,-10,-6],[-6,4,7,1],[8,5,-9,-8],[-9,-5,-5,1],[6,2,-4,-5],[-9,2,-6,1],[10,-6,6,-5],[8,-1,3,-4],[-4,6,-9,8],[2,5,6,6],[1,-4,-7,1],[9,10,-3,-4],[3,5,-3,-9],[7,-4,7,7],[-1,-4,-2,-4],[8,-4,8,-8],[-7,10,-9,4],[-2,-9,8,6],[8,8,6,10],[7,5,-1,-6],[-9,8,-7,4],[-1,-8,-8,8],[6,-6,9,-8],[-8,-2,7,7],[6,6,8,-5],[-2,9,9,5],[-5,-10,7,-3],[-1,3,-4,-8],[8,6,-1,-6],[-5,-2,-2,2],[10,-2,-1,1],[9,-4,6,5],[-3,1,-3,-8],[2,3,-8,1],[-10,-4,-9,5],[-1,-3,10,-3],[1,8,1,-2],[-7,-4,1,-5],[-10,2,-6,-9],[7,-5,2,-1],[-4,-6,-6,-7],[-3,-9,8,-5],[-7,-2,-7,1],[5,-10,-6,1],[-1,-4,-7,-1],[-3,7,6,-2],[3,5,4,-2],[2,7,7,9],[-7,5,3,4],[-8,-7,-5,7],[-2,-7,-8,7],[-3,9,2,-7],[10,-3,-10,1],[10,-2,9,-4],[-10,7,-10,-8],[-9,-4,-5,-10],[-7,-10,-1,-6]], dtype = "int16")#candidate|1811|(448, 4)|const|int16
call_1809 = relay.TupleGetItem(func_1356_call(relay.reshape(var_1810.astype('int16'), [128,]), relay.reshape(const_1811.astype('int16'), [1792,]), ), 5)
call_1812 = relay.TupleGetItem(func_1360_call(relay.reshape(var_1810.astype('int16'), [128,]), relay.reshape(const_1811.astype('int16'), [1792,]), ), 5)
output = relay.Tuple([bop_1786,uop_1801,call_1809,var_1810,const_1811,])
output2 = relay.Tuple([bop_1789,uop_1803,call_1812,var_1810,const_1811,])
func_1821 = relay.Function([var_1785,var_1810,], output)
mod['func_1821'] = func_1821
mod = relay.transform.InferType()(mod)
mutated_mod['func_1821'] = func_1821
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1821_call = mutated_mod.get_global_var('func_1821')
var_1823 = relay.var("var_1823", dtype = "float32", shape = (5, 8, 14))#candidate|1823|(5, 8, 14)|var|float32
var_1824 = relay.var("var_1824", dtype = "int16", shape = (128,))#candidate|1824|(128,)|var|int16
call_1822 = func_1821_call(var_1823,var_1824,)
output = call_1822
func_1825 = relay.Function([var_1823,var_1824,], output)
mutated_mod['func_1825'] = func_1825
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1755_call = mod.get_global_var('func_1755')
func_1756_call = mutated_mod.get_global_var('func_1756')
call_1887 = relay.TupleGetItem(func_1755_call(), 0)
call_1888 = relay.TupleGetItem(func_1756_call(), 0)
uop_1898 = relay.asinh(call_1887.astype('float64')) # shape=(5, 8, 14)
uop_1900 = relay.asinh(call_1888.astype('float64')) # shape=(5, 8, 14)
uop_1905 = relay.tan(uop_1898.astype('float32')) # shape=(5, 8, 14)
uop_1907 = relay.tan(uop_1900.astype('float32')) # shape=(5, 8, 14)
uop_1918 = relay.erf(uop_1905.astype('float32')) # shape=(5, 8, 14)
uop_1920 = relay.erf(uop_1907.astype('float32')) # shape=(5, 8, 14)
output = uop_1918
output2 = uop_1920
func_1929 = relay.Function([], output)
mod['func_1929'] = func_1929
mod = relay.transform.InferType()(mod)
mutated_mod['func_1929'] = func_1929
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1929_call = mutated_mod.get_global_var('func_1929')
call_1930 = func_1929_call()
output = call_1930
func_1931 = relay.Function([], output)
mutated_mod['func_1931'] = func_1931
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1064_call = mod.get_global_var('func_1064')
func_1065_call = mutated_mod.get_global_var('func_1065')
call_1942 = relay.TupleGetItem(func_1064_call(), 1)
call_1943 = relay.TupleGetItem(func_1065_call(), 1)
func_920_call = mod.get_global_var('func_920')
func_923_call = mutated_mod.get_global_var('func_923')
const_1953 = relay.const([4,-8,5,1,-3,-9,-6,-5,5,10,-5,1,4,9,10,1,-8,-10,-8,-4,-7,-2,-7,-9,8,-4,-8,2,4,1,3,-7,4,-4,10,3,-1,10,2,2,1,-3,-2,2,6,1,-7,10,8,4,-4,-5,2,4,-5,3,4,-6,3,-4,1,-8,-4,10,2,1,-10,2,-2,-5,-3,-2,8,-5,5,-8,5,-7,-4,-2,-2,2,-9,-4,-1,7,-9,2,6,6,9,2,-2,4,7,-2,-10,10,1,10,3,7,-6,-9,8,-6,3,-2,8,-9,-3,5,-7,3,-9,9,10,-5,-5,-9,-2,-2,4,10,-10,-8,-1,-6], dtype = "int16")#candidate|1953|(128,)|const|int16
const_1954 = relay.const([8,6,9,-3,2,-9,-3,-7,-7,-8,4,7,-1,-6,1,-8,1,-4,9,5,7,4,4,-2,-6,-8,-8,-4,-5,6,6,-5,-9,9,8,1,7,-3,1,-2,8,7,6,5,-2,9,6,-8,3,-2,1,-6,1,1,-7,-6,2,-2,-5,-2,-7,-6,5,7,1,-8,-5,3,6,-9,-7,-9,-10,-9,-6,-3,-2,-8,-5,6,8,-10,-10,10,-9,8,-4,4,6,1,4,8,5,4,3,-7,4,6,10,-10,5,-4,-5,-4,-2,6,9,2,10,-3,6,7,-7,3,-9,8,-3,4,1,-10,3,8,9,-5,6,5,-9,-3,5,6,1,9,-6,-3,-1,1,10,-7,9,-2,-1,8,-9,-6,7,8,6,3,10,-3,2,6,-1,-2,6,-7,9,5,-6,-2,-5,-2,-8,4,-2,1,-1,5,2,2,9,5,7,-8,10,-6,10,7,5,-8,-8,-3,7,-3,-5,-9,6,-4,3,-6,4,10,-9,4,8,-1,2,-7,1,-10,-5,-3,-2,-4,1,-9,-1,10,6,6,-7,-2,2,-8,9,1,8,7,-3,4,-2,-2,2,6,6,-1,8,2,5,5,7,-10,-2,-4,1,-10,10,7,-3,-1,-3,-2,10,-3,3,6,5,-4,4,-1,-7,-7,2,1,7,6,8,4,-3,10,-6,7,-6,-8,10,-5,-10,-4,-8,-10,8,-6,-4,-6,-9,3,5,-7,-1,-1,-4,-8,1,-9,-6,4,2,2,-2,3,5,7,5,2,10,-9,-2,-1,6,1,-6,5,7,-6,-6,-10,-4,-10,4,-7,7,-1,2,1,-1,-9,1,6,1,-7,-10,7,-6,5,9,4,-9,-5,8,-8,-2,5,10,1,5,10,7,-1,4,-4,-1,1,5,2,3,2,6,-1,1,2,2,-1,-7,3,-2,6,-5,-3,10,6,5,3,5,10,5,-2,-3,-5,7,2,3,3,5,-10,1,-10,-6,-8,6,9,-9,8,5,-2,9,2,-4,-2,10,3,2,6,8,-8,-1,8,7,-1,9,-5,-9,-2,1,-1,-10,10,10,9,-9,4,4,-1,-6,-3,8,-5,4,-10,-3,-4,7,-4,-10,-7,-10,1,1,-4,4,3,-5,9,-6,-2,1,-4,10,7,1,-10,-5,4,1,-4,-5,-7,5,-10,4,-2,10,5,-5,1,-8,-4,2,-8,6,-9,9,3,-1,-9,-7,-10,-8,-8,-9,7,-9,-10,-1,-5,-10,-9,-10,7,5,6,6,8,3,4,-4,7,6,-6,6,5,6,9,6,9,9,-3,3,8,7,8,-5,-5,-4,7,2,8,-3,6,-10,-1,4,3,-5,-5,-4,-6,-10,9,3,4,7,-5,-8,2,-10,8,-6,1,-3,-6,1,-6,-4,-5,-1,2,2,10,8,9,-4,-2,-7,4,9,-8,3,-1,9,3,4,9,1,-5,1,9,-10,-8,3,-8,-5,3,10,-6,-10,2,4,-2,-3,6,-1,-1,-5,10,2,-10,-6,-6,9,-9,1,-4,5,10,5,3,-2,-8,5,4,-8,6,-9,2,4,-8,-3,8,10,-7,5,-2,-6,3,-10,1,-3,-4,1,2,-7,10,3,-9,7,8,6,10,-10,-5,2,-10,7,9,10,-5,2,-9,5,-9,-6,6,-7,-5,-1,-9,10,-10,-3,-5,2,2,-5,-10,10,5,-6,-7,-9,-4,-5,-3,-4,2,-4,2,8,2,8,-4,-3,6,3,-4,8,-5,3,-9,-3,-4,-9,10,4,-1,-6,-3,-7,10,-2,4,-4,-6,7,4,8,4,6,-5,8,5,2,-2,-6,-8,-9,-10,-1,8,2,7,-1,7,7,-10,-9,-8,2,1,4,-8,-4,-4,5,-3,7,6,1,5,-5,-2,1,-7,-1,1,-10,8,7,8,-7,8,-1,2,-8,-9,-2,-9,-2,-6,-5,-10,-7,-8,4,6,-7,7,-1,-1,6,3,-2,2,9,10,-6,6,1,-8,9,8,10,-5,2,9,-7,-7,3,4,-5,5,-5,5,-6,-2,-8,-1,4,7,-2,-6,-9,8,10,5,6,-9,10,8,-8,10,-9,-2,9,-10,8,-9,-9,-8,-1,-6,-2,2,10,9,-10,-6,2,-3,9,-3,9,5,-1,9,-7,-2,2,2,-4,2,2,3,7,-4,-9,-5,-10,-8,-3,-6,-4,1,10,7,-4,8,-8,9,-6,4,-9,6,9,-2,-5,-5,7,-2,-9,3,-10,9,-1,-5,-9,-4,8,-2,8,-1,2,-9,-4,-8,-1,-6,1,9,2,-8,-3,-3,-2,7,-1,-2,-6,2,1,-5,-10,-3,6,10,8,-1,2,-1,1,6,-8,-4,9,-8,-7,-5,2,5,-4,6,-5,-2,-4,-1,2,-6,-6,-7,-6,7,8,10,4,7,-2,-9,-3,4,-5,-2,-4,9,9,-9,3,-10,-10,10,-6,9,4,-5,-10,-2,-7,3,-3,3,10,-8,-8,3,-9,-1,2,2,-7,-10,-7,-3,1,6,-8,-7,-3,-1,-5,8,-9,-10,-8,-4,-9,-3,1,1,-3,5,5,10,-8,8,5,-9,6,5,2,-10,-8,-9,10,10,-6,5,-8,1,5,-9,-7,7,8,7,3,-2,10,-9,-1,6,-3,-1,5,7,1,-2,-4,2,-1,1,4,-5,5,7,-3,3,3,7,8,-9,9,9,-10,-5,-10,5,2,-10,-3,2,1,2,-3,-5,-2,-10,-6,4,10,7,10,5,5,8,4,4,9,-3,-6,3,-1,-8,-4,4,-6,5,4,-7,-5,7,-8,7,8,2,-8,-1,-10,7,3,-1,2,-4,-7,-7,9,4,-8,7,-2,-9,5,-9,-1,10,-8,3,-8,8,10,-10,3,6,-6,7,-1,-8,6,-1,4,1,4,-3,10,8,9,1,-3,-3,-10,-8,-7,-7,-6,10,-2,3,4,8,7,8,-3,10,-3,-6,-1,6,-3,-1,-1,-8,-3,-9,-6,2,3,1,-8,6,2,-6,8,-1,5,1,-4,-1,9,3,-8,-9,7,-9,-1,-8,-8,-5,4,-9,-1,-5,1,-1,7,-8,-3,6,-8,-6,-1,-1,-7,-5,-4,10,-7,10,2,-10,7,3,-6,-9,5,3,-8,-5,1,-7,-6,-2,-3,-3,-4,-3,-5,-9,3,-5,-3,-4,-5,7,-1,-2,-1,-2,-7,-9,-1,9,7,7,8,-10,-2,-4,-5,4,-7,-3,-1,5,1,8,-4,-6,-5,-5,-4,-3,-1,-5,10,-10,-6,-7,7,4,4,10,8,-3,8,5,-10,10,7,-8,3,-6,-3,5,-7,-8,10,10,-3,-1,8,-2,-8,2,8,-4,7,9,7,10,2,4,7,9,7,-10,8,5,-6,3,6,4,-9,3,-6,9,-2,-9,-7,8,2,8,2,6,-10,-4,6,2,-1,-3,-8,5,5,9,-6,-5,5,-6,9,-6,3,-7,-8,-8,4,5,4,-3,6,3,1,8,-3,2,10,-3,10,6,1,-6,-5,-8,-3,-2,-5,2,-2,1,-7,-9,2,4,6,-9,-3,-1,-8,-9,-9,9,-5,9,3,5,4,-9,-10,10,2,-10,-4,5,-7,10,-5,-2,-2,-2,-1,-5,2,3,8,7,-3,-6,7,7,-6,-2,10,3,-4,-6,-1,2,-6,7,-8,-5,3,-8,-1,-6,3,-7,-1,6,-5,-2,5,4,-1,-7,-7,-10,2,-1,-2,-9,7,10,8,5,8,2,3,5,8,1,-4,8,-8,8,-7,4,5,-2,-10,6,6,9,5,1,6,1,-4,6,7,3,5,10,3,-10,-10,-9,6,4,-4,5,9,-1,-4,-7,3,6,7,-5,-9,3,5,4,2,3,4,-5,3,-6,-5,7,-10,5,9,10,-8,7,-5,-3,10,-2,-3,5,-4,-10,-3,4,-9,3,-10,-8,-5,10,-6,8,10,-10,6,-8,10,9,6,-7,4,-7,-4,-1,-9,-1,-5,-3,-9,-7,-2,-5,-6,6,-8,8,-4,6,-7,-8,-9,3,10,-10,-1,-3,-3,-5,-3,-10,-3,-4,-1,-4,-9,-5,1,-4,-4,-9,-1,-7,-1,5,3,-8,4,-3,4,3,10,-4,6,4,-2,4,-5,2,-5,-1,-2,5,1,-1,5,-8,2,6,10,9,-2,7,-5,-5,-6,9,3,6,-3,-9,-10,3,-1,-1,10,-4,4,10,-2,2,-1,-8,6,-8,-10,7,-6,-4,-9,7,-7,-10,2,-4,6,2,6,4,5,-1,1,-7,-6,3,9,3,-10,-9,-6,7,-9,-3,-3,9,9,5,7,8,-6,-1,2,1,10,6,-4,-1,-6,-8,-9,8,-8,-9,-6,10,-9,-7,8,7,-9,-5,-8,4,9,4,10,8,-5,-2,-6,-5,5,8,-9,1,-9,-10,3,2,7,-9,-8,-4,-4,5,1,4,1,9,-6,9,9,2,-3,-1,2,9,7,-2,2,-10,7,-8,6,10,10,-9,9,10,-8,4,2,-10,1,-9,-9,-5,-3,-7,-2,2,6,-2,5,-7,-4,-2,8,-7,-2,-1,7,9,9,-10,-3,-5,-4,-2,-1,-1,-3,3,-3,-8,9,9,-7,6,4,-9,8,6,2,-10,-10,-2,-6,-2,-7,5,2,-10,2,-5,3,5,-9,-3,10,8,6,3,-4,10,-7,-7,-9,-10,-4,7,-8,-7,5,9,-5,5,6,-3,3,4,-8,-1,-8,8,-5,-1,9,-1,10,-8,-9,-6,3,9], dtype = "int16")#candidate|1954|(1792,)|const|int16
call_1952 = relay.TupleGetItem(func_920_call(relay.reshape(const_1953.astype('int16'), [8, 1, 16]), relay.reshape(const_1954.astype('int16'), [8, 14, 16]), ), 1)
call_1955 = relay.TupleGetItem(func_923_call(relay.reshape(const_1953.astype('int16'), [8, 1, 16]), relay.reshape(const_1954.astype('int16'), [8, 14, 16]), ), 1)
func_1011_call = mod.get_global_var('func_1011')
func_1012_call = mutated_mod.get_global_var('func_1012')
call_1962 = relay.TupleGetItem(func_1011_call(), 0)
call_1963 = relay.TupleGetItem(func_1012_call(), 0)
func_1550_call = mod.get_global_var('func_1550')
func_1554_call = mutated_mod.get_global_var('func_1554')
const_1987 = relay.const([4.556650,-4.122010,-4.791795,7.363772,-8.075328,7.392544,-9.103048,-8.968133,-5.762628,0.029224,-0.320334,0.480711,-4.662926,2.895839,-2.857781,-2.679582,-9.841212,-7.109350,5.230911,-1.055583,-3.190127,-9.306603,-0.375936,2.544242,4.598969,7.812875,8.772767,9.977848,3.699931,5.240812,2.790285,-5.947140,-1.979121,-6.217638,-3.144547,6.564637,9.039533,9.417699,6.801976,-8.423124,2.155652,-2.980378,-8.438357,-9.490900,9.995894,8.405552,0.922852,-4.875990], dtype = "float64")#candidate|1987|(48,)|const|float64
const_1988 = relay.const([[-9.077524],[9.170341],[1.750747],[-8.555099],[6.159260],[7.748421],[5.837855],[5.420921],[7.532187],[1.039527],[3.144426],[-7.517122],[8.776057],[6.718147],[-1.898428],[1.048250],[9.909490],[-3.380153],[9.986738],[-6.310136],[4.075696],[7.505101],[-3.032545],[-3.057777],[2.679422],[-8.353536],[5.635558],[-3.246939],[-3.588862],[-4.974509],[2.955607],[-7.109807],[-1.610976],[7.273512],[7.026494],[-8.418189],[7.768834],[1.965162],[-2.825161],[-4.530814],[-3.506414],[-9.607179],[9.563792],[-9.019930],[-1.620384],[-9.886745],[-6.016472],[-6.148943],[-4.493280],[8.904166],[-4.757735],[-1.429226],[4.834598],[6.581305],[9.694081],[6.825241],[-2.312422],[9.537873],[-1.261924],[-8.029515],[-2.270813],[8.048110],[3.588795],[8.682168],[1.758688],[4.945760],[-9.723504],[-0.636323],[-8.497101],[7.447381],[8.700530],[1.966733],[0.931643],[4.189879],[-1.108060],[-6.046144],[3.285326],[5.091348],[-0.267960],[-2.064853],[6.462872],[1.259206],[9.677546],[8.099545],[9.024221],[8.341469],[5.637598],[-0.256861],[-8.060264],[3.022421],[5.470620],[3.052887],[2.073108],[3.431365],[-3.336170],[0.231547],[-3.816178],[3.399215],[-8.816400],[4.525778],[-8.306132],[-8.921930],[1.411803],[-6.992433],[7.096089],[-5.986079],[0.533151],[8.305791],[-4.392694],[-3.035279],[-4.422478],[7.482862],[-4.917525],[-8.369041],[1.720022],[-9.112289],[-1.061758],[-1.697169],[-6.799750],[7.484221],[-6.976308],[-8.503466],[-9.776518],[-8.341996],[5.949635],[9.027981],[-3.978384],[-4.142951],[1.058173],[-1.506740],[-6.141752],[-2.213638],[5.625218],[-4.891262],[1.581344],[4.584777],[4.489642],[-0.477040],[0.441648],[-1.548763],[1.466122],[-9.068750],[-9.333230],[8.560981],[0.262422],[3.361076],[-3.445976],[7.223511],[-4.474009],[8.882994],[3.236671],[1.026080],[9.042687],[-3.797827],[-5.415776],[1.728029],[-1.830043],[8.312129],[-6.434942],[0.480244],[-8.771007],[0.247195],[-5.447128],[9.519495],[-1.991267],[1.947325],[7.655694],[-1.070246],[-4.171937],[-7.996402],[1.310640],[-9.502076],[8.440048],[2.788836],[-3.992665],[-4.188842],[1.257003],[-0.921675],[-3.536950],[-2.317808],[-6.704074],[-4.158563],[-5.333754],[-1.363045],[-7.961536],[2.576426],[-1.574273],[7.684537],[5.947448],[8.800605],[3.631918],[1.171464],[4.662347],[6.346743],[4.844997],[-1.592893],[2.657897],[8.027690],[7.916987],[-8.603374],[-4.075343],[-8.241557],[7.440164],[9.339849],[-4.508934],[9.515267],[-6.387664],[-6.500105],[-4.959062],[3.802177],[3.341950],[9.640855],[-7.017394],[-7.926475],[1.015162],[3.925627],[-2.990853],[-6.872191],[-9.674802],[-2.962362],[9.534105],[-0.991555],[-1.406331],[3.975335],[-5.093140],[-0.487928],[5.278131],[-2.587938],[3.285509],[4.733179],[3.337892],[-4.986261],[-7.626331],[-8.616654],[-8.744586],[4.482930],[-7.783423],[5.379396],[-0.728163],[2.656932],[9.656272],[-9.116741],[5.625525],[6.922032],[5.309543],[8.423207],[3.193042],[-3.000736],[0.994145],[-9.281434],[-8.733203],[3.076930],[-9.914759],[6.481820],[7.471407],[4.541342],[7.932533],[4.179551],[1.040182],[5.680169],[-2.344884],[9.552259],[-7.756755],[6.646786],[-3.003670],[-3.472047],[-2.318778],[3.136697],[-3.267819],[5.412768],[6.189691],[3.070259],[3.313577],[-6.670930],[5.235319],[2.348159],[-6.794842],[6.919483],[3.632875],[-8.846441],[7.026295],[-0.536442],[-3.420981],[-6.771023],[-4.492999],[6.085527],[-9.569298],[-7.089742],[5.509521],[-5.967194],[-6.139706],[-2.289360],[0.423377],[-3.070255],[2.591643],[-7.658287],[4.804638],[-4.502185],[3.088050],[-4.544306],[-6.560891],[8.561454],[-7.148214],[-2.107483],[-0.967670],[-5.733968],[5.314802],[-7.442019],[1.321501],[6.389362],[5.030187],[3.513271],[-9.271555],[6.209513],[-9.681713],[3.195707],[6.304711],[1.772891],[4.795710],[3.533015],[2.010991],[-1.345459],[5.872995],[7.704679],[6.990388],[1.058501],[-9.507835],[8.770605],[-9.044298],[-8.105007],[9.068120],[1.828884],[9.065993],[-7.683894],[6.351855],[-4.346279],[-4.981746],[7.814320],[7.589566],[-5.072849],[8.678585],[-3.808032],[-2.952115],[-4.826147],[-9.034489],[6.459712],[-5.569798],[-0.141972],[8.574528],[-6.084793],[-9.448915],[3.518493],[-5.401299],[-4.946859],[3.668570],[-6.533309],[-0.908363],[7.033075],[7.432076],[5.750275],[-1.750663],[5.811431],[-5.774566],[-1.190722],[-8.942680],[-0.766721],[-8.855192],[7.972881],[-7.287066],[-3.347523],[-9.972916],[-3.539654],[8.476637],[0.638002],[2.991364],[-0.747859],[9.228392],[-9.750579],[4.009964],[-3.435011],[-2.355119],[8.910316],[-5.431437],[2.161366],[-2.034679],[7.722134],[-6.681621],[-5.179181],[5.096075],[-1.998452],[-8.833272],[-4.236804],[-7.519425],[2.496584],[-4.523179],[-5.080026],[-6.031629],[3.312618],[-0.203800],[4.503451],[-8.642728],[-6.560859],[-3.289936],[4.788304],[-0.655839],[-0.770503],[-1.578066],[4.801445],[-8.382637],[9.633791],[-8.464393],[0.807484],[1.475118],[6.566236],[9.933674],[-9.060288],[7.029734],[-0.948507],[4.985216],[0.956701],[-4.464575],[2.249229],[1.948510],[0.163321],[2.043717],[-1.208987],[-4.037628],[4.207015],[-2.913189],[-4.830353],[1.408354],[3.745726],[5.186246],[0.069465],[6.572051],[-3.278337],[-6.819904],[8.198931],[-6.602713],[2.620277],[0.930127],[4.167658],[2.909497],[1.180745],[-1.636946],[0.615653],[-5.408091],[-6.334603],[8.029002],[7.042833],[0.208485],[-1.287094],[0.964856],[0.056702],[-4.118863],[3.270252],[-1.297806],[-2.076260],[6.011916],[0.816906],[5.589359],[-7.131408],[2.185122],[0.589162],[-0.222427],[-0.391932],[-3.685737],[7.325394],[-4.597698],[-4.037025],[-1.747193],[-4.560220],[-8.482264],[-3.492762],[-4.252225],[5.864309],[1.634313],[6.035554],[7.168194],[3.685092],[7.067448],[4.697207],[-3.760937],[4.190853],[8.931101],[8.766234],[-4.382214],[-3.185741],[-8.062949],[-0.448595],[-5.868461],[-9.907889],[1.612943],[-9.435341],[-0.078182],[-9.759064],[1.171690],[-0.235184],[0.420346],[-4.802418],[9.639247],[-8.740993],[6.958635],[-6.757170],[2.825047],[-5.991914],[4.344328],[6.732416],[4.921656],[9.606335],[6.055062],[4.494094],[4.255514],[-7.518097],[-4.903110],[4.361184],[5.138376],[8.908747],[-8.753521],[-0.728299],[-7.507290],[3.457053],[-6.031066],[4.188594],[-6.517633],[6.739586],[-3.656636],[2.677387],[-0.466406],[-5.810185],[-7.306152],[-5.286591],[8.061744],[8.459540],[-6.609339],[-5.448217],[-6.550073],[-7.030894],[-9.317659],[-8.045126],[-2.942594],[7.929949],[0.219180],[-3.759118],[-1.874823],[-1.087015],[-6.841676],[-6.425797],[-8.899651],[3.131901],[-8.794068],[7.839401],[2.883336],[2.013246],[3.508057],[-3.150967],[9.041131],[5.875180],[-2.271350],[9.236472],[-5.314311],[-7.449259],[-6.332714],[1.218526],[-8.967839],[4.763551],[-9.912183],[4.923874],[-9.206445],[1.677027],[5.779488],[8.671750],[3.642590],[5.090931],[-1.650508],[5.985293],[-9.477808],[0.789008],[-6.147535],[6.364850],[5.783515],[7.937900],[5.317372],[9.776977],[5.746312],[-4.014453],[6.348905],[-1.652066],[-6.736540],[-9.194321],[-0.667316],[6.166923],[5.132766],[8.566138],[9.859150],[-7.803207],[-0.532415],[-2.401411],[6.193661],[9.854276],[9.673585],[4.589262],[-7.963299],[7.156882],[1.561149],[2.121274],[1.020321],[-3.739685],[-2.977009],[0.331645],[-3.567623],[-0.912260],[8.058297],[-5.715263],[3.711137],[-4.317055],[0.702008],[8.802978],[6.453757],[-1.590032],[-6.964220],[-0.175535],[0.399756],[0.875833],[-0.469752],[9.917693],[-1.093060],[3.898919],[6.166280],[-3.277611],[-7.777550],[7.809936],[-9.567183],[8.774527],[3.866318],[-8.415342],[0.649620],[-3.952198],[4.207420],[-5.556983],[-3.488187],[-8.823114],[-5.296315],[-2.479687],[-4.798796],[-6.743068],[5.597386],[-0.909779],[-5.070533],[4.564003],[-9.978346],[3.164802],[-8.042601],[-3.100193],[4.202072],[-6.145993],[-3.404586],[5.318663],[-1.041572],[-8.366342],[-1.244213],[0.753864],[-3.117929],[-2.984172],[9.828794],[0.239789],[7.415976],[-9.386049],[-3.903075],[-1.898903],[5.432158],[9.062603],[1.548557],[-9.623368],[-2.002505],[-1.633572],[5.567026],[2.101415],[-9.349587],[-4.334522],[3.153007],[1.372977],[1.835696],[7.362210],[-8.609397],[9.684583],[-1.614373],[9.775125],[7.731669],[0.666940],[0.391005],[8.128012],[-3.681758],[-8.626662],[-8.988680],[-9.893581],[-7.864157],[-0.309741],[4.780876],[3.690463],[2.748808],[-0.569984],[3.901648],[-3.730003],[9.010479],[5.681650],[2.391368],[-6.436968],[4.814881],[-3.033822],[4.469481],[3.610364],[-1.222397],[4.510748],[0.090809],[2.777057],[-7.910767],[-7.357027],[-4.995117],[-4.790852],[7.695352],[-3.295760],[-2.932947],[-3.122980],[9.345128],[5.681614],[9.681282],[7.338900],[0.883392],[-7.288380],[1.254064],[0.646766],[5.843682],[-6.486292],[-8.419780],[6.789325],[-2.947583],[4.754873],[-5.858210],[-9.136645],[-2.027949],[6.938534],[-0.397593],[-2.757430],[7.931965],[4.250520],[-0.191778],[-5.467942],[-4.911863],[7.171064],[-2.007678],[-5.180957],[-3.393426],[3.617342],[8.881239],[7.986248],[-5.229359],[-5.125609],[6.525967],[-5.230461],[9.411821],[1.374797],[-8.365652],[6.512863],[-6.391065],[-7.525446],[3.283237],[8.848460],[-1.783422],[7.117765],[-8.043017],[9.501785],[4.432058],[-1.429402],[-0.402454],[6.496707],[-5.138053],[-5.533639],[4.886269],[0.623372],[-8.076339],[-9.361775],[0.321791],[-0.168767],[-3.299703],[4.626810],[-9.869796],[3.109035],[-3.696891],[-5.128167],[-4.413905],[-4.227845],[-4.678768],[-9.522357],[-6.333456],[-8.384372],[2.937548],[6.878147],[-2.667773],[-6.626870],[6.575727],[-6.541248],[-8.769851],[3.684231],[9.524511],[-6.925099],[1.501759],[-8.393164],[1.097492],[2.422354],[-4.950051],[-5.309607],[-5.586731],[-3.364796],[5.712064],[-1.631779],[9.247922],[-1.080531],[-9.621150],[-3.756390],[3.144337],[-4.633791],[-8.603347],[1.236701],[1.867933],[7.944408],[-2.295600],[2.274040],[9.974010],[9.149768],[-4.155012],[0.805960],[-0.452210],[9.777142],[4.033747],[-5.894524],[-9.268789],[-2.321933],[4.254654],[-6.818212],[-9.685104],[1.836231],[-3.637353],[-6.029601],[-1.800543],[-6.099789],[2.676615],[-9.801338],[-5.205549],[-0.048090],[-4.948671],[-4.128220],[6.420159],[6.308179],[-1.150752],[6.670327],[5.273137],[0.943826],[0.261486],[-8.034542],[-5.541314],[-2.576827],[-0.109071],[6.563161],[0.604786],[3.242079],[9.540976],[-8.507129],[-8.908044],[3.088332],[-0.960239],[7.467179],[1.814066],[4.041681],[-9.493358],[9.082109],[-8.343173],[-4.284439],[-5.864980],[9.898523],[-1.343112],[2.221962],[9.414887],[-8.282201],[0.290024],[-2.811644],[5.077087],[-7.585607],[8.301094],[0.750538],[8.678883],[-3.033020],[9.060213],[-5.658697],[-0.691482],[3.148544],[-6.601739],[-2.654661],[-7.972635],[0.752023],[6.556862],[7.630985],[-6.277619],[4.774373],[9.951263],[2.262522],[0.257193],[9.783371],[1.101846],[2.522928],[3.805101],[-6.684541],[8.870150],[3.010146],[3.740013],[-0.635052],[6.709896],[5.332424],[2.223324],[5.143404],[-6.852763],[4.470308],[-3.889655],[-3.660117],[-8.583274],[7.233992],[-4.664311],[-9.203125],[3.395972],[4.851880],[-9.600646],[6.590320],[-9.165363],[2.136403],[4.576887],[-6.589942],[-4.616262],[-2.517628],[-1.662264],[-2.819836],[-8.731517],[5.664462],[2.159175],[-9.383018],[0.962401],[8.750634],[0.029106],[3.059055],[-5.810395],[8.263501],[2.983717],[8.958504],[4.343137],[-0.211562],[-2.693483],[7.557312],[7.324356],[3.083710],[-7.216089],[8.212198],[1.207491],[6.755386],[4.333969],[-9.096984],[-3.390731],[3.530560],[-5.814203],[7.687861],[-7.946980],[9.304181],[-8.734400],[6.016792],[0.476633],[-3.151252],[3.778133],[-2.208610],[-0.169291],[0.244633],[-2.726335],[1.668155],[-6.465242],[5.952685],[2.824201],[-9.300850],[-5.291910],[-1.165866],[-5.624911],[-8.910999],[-0.040442],[0.176042],[-0.715523],[2.377163],[-5.489474],[-7.395224],[-2.791820],[0.466183],[3.293195],[2.107869],[9.657259],[-3.193788],[-2.653978],[-5.842105],[5.445671],[-4.943163],[8.571769],[4.923683],[6.531939],[-1.126575]], dtype = "float32")#candidate|1988|(1008, 1)|const|float32
call_1986 = relay.TupleGetItem(func_1550_call(relay.reshape(const_1987.astype('float64'), [3, 1, 16]), relay.reshape(const_1988.astype('float32'), [1008,]), ), 1)
call_1989 = relay.TupleGetItem(func_1554_call(relay.reshape(const_1987.astype('float64'), [3, 1, 16]), relay.reshape(const_1988.astype('float32'), [1008,]), ), 1)
output = relay.Tuple([call_1942,call_1952,const_1953,const_1954,call_1962,call_1986,const_1987,const_1988,])
output2 = relay.Tuple([call_1943,call_1955,const_1953,const_1954,call_1963,call_1989,const_1987,const_1988,])
func_1993 = relay.Function([], output)
mod['func_1993'] = func_1993
mod = relay.transform.InferType()(mod)
mutated_mod['func_1993'] = func_1993
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1993_call = mutated_mod.get_global_var('func_1993')
call_1994 = func_1993_call()
output = call_1994
func_1995 = relay.Function([], output)
mutated_mod['func_1995'] = func_1995
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1027_call = mod.get_global_var('func_1027')
func_1029_call = mutated_mod.get_global_var('func_1029')
call_1998 = func_1027_call()
call_1999 = func_1027_call()
output = call_1998
output2 = call_1999
func_2013 = relay.Function([], output)
mod['func_2013'] = func_2013
mod = relay.transform.InferType()(mod)
output = func_2013()
func_2014 = relay.Function([], output)
mutated_mod['func_2014'] = func_2014
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1027_call = mod.get_global_var('func_1027')
func_1029_call = mutated_mod.get_global_var('func_1029')
call_2072 = func_1027_call()
call_2073 = func_1027_call()
var_2077 = relay.var("var_2077", dtype = "float32", shape = (5, 8, 14))#candidate|2077|(5, 8, 14)|var|float32
bop_2078 = relay.floor_divide(call_2072.astype('float64'), relay.reshape(var_2077.astype('float64'), relay.shape_of(call_2072))) # shape=(5, 8, 14)
bop_2081 = relay.floor_divide(call_2073.astype('float64'), relay.reshape(var_2077.astype('float64'), relay.shape_of(call_2073))) # shape=(5, 8, 14)
output = relay.Tuple([bop_2078,])
output2 = relay.Tuple([bop_2081,])
func_2083 = relay.Function([var_2077,], output)
mod['func_2083'] = func_2083
mod = relay.transform.InferType()(mod)
var_2084 = relay.var("var_2084", dtype = "float32", shape = (5, 8, 14))#candidate|2084|(5, 8, 14)|var|float32
output = func_2083(var_2084)
func_2085 = relay.Function([var_2084], output)
mutated_mod['func_2085'] = func_2085
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1993_call = mod.get_global_var('func_1993')
func_1995_call = mutated_mod.get_global_var('func_1995')
call_2095 = relay.TupleGetItem(func_1993_call(), 1)
call_2096 = relay.TupleGetItem(func_1995_call(), 1)
func_1652_call = mod.get_global_var('func_1652')
func_1654_call = mutated_mod.get_global_var('func_1654')
call_2100 = relay.TupleGetItem(func_1652_call(), 0)
call_2101 = relay.TupleGetItem(func_1654_call(), 0)
uop_2102 = relay.erf(call_2095.astype('float64')) # shape=(4, 13, 10)
uop_2104 = relay.erf(call_2096.astype('float64')) # shape=(4, 13, 10)
output = relay.Tuple([call_2100,uop_2102,])
output2 = relay.Tuple([call_2101,uop_2104,])
func_2119 = relay.Function([], output)
mod['func_2119'] = func_2119
mod = relay.transform.InferType()(mod)
mutated_mod['func_2119'] = func_2119
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2119_call = mutated_mod.get_global_var('func_2119')
call_2120 = func_2119_call()
output = call_2120
func_2121 = relay.Function([], output)
mutated_mod['func_2121'] = func_2121
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2153 = relay.var("var_2153", dtype = "float32", shape = (13, 10, 12))#candidate|2153|(13, 10, 12)|var|float32
uop_2154 = relay.erf(var_2153.astype('float32')) # shape=(13, 10, 12)
output = uop_2154
output2 = uop_2154
func_2157 = relay.Function([var_2153,], output)
mod['func_2157'] = func_2157
mod = relay.transform.InferType()(mod)
mutated_mod['func_2157'] = func_2157
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2158 = relay.var("var_2158", dtype = "float32", shape = (13, 10, 12))#candidate|2158|(13, 10, 12)|var|float32
func_2157_call = mutated_mod.get_global_var('func_2157')
call_2159 = func_2157_call(var_2158)
output = call_2159
func_2160 = relay.Function([var_2158], output)
mutated_mod['func_2160'] = func_2160
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1064_call = mod.get_global_var('func_1064')
func_1065_call = mutated_mod.get_global_var('func_1065')
call_2282 = relay.TupleGetItem(func_1064_call(), 0)
call_2283 = relay.TupleGetItem(func_1065_call(), 0)
output = relay.Tuple([call_2282,])
output2 = relay.Tuple([call_2283,])
func_2294 = relay.Function([], output)
mod['func_2294'] = func_2294
mod = relay.transform.InferType()(mod)
mutated_mod['func_2294'] = func_2294
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2294_call = mutated_mod.get_global_var('func_2294')
call_2295 = func_2294_call()
output = call_2295
func_2296 = relay.Function([], output)
mutated_mod['func_2296'] = func_2296
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1929_call = mod.get_global_var('func_1929')
func_1931_call = mutated_mod.get_global_var('func_1931')
call_2313 = func_1929_call()
call_2314 = func_1929_call()
var_2323 = relay.var("var_2323", dtype = "float32", shape = (5, 8, 14))#candidate|2323|(5, 8, 14)|var|float32
bop_2324 = relay.floor_mod(call_2313.astype('float32'), relay.reshape(var_2323.astype('float32'), relay.shape_of(call_2313))) # shape=(5, 8, 14)
bop_2327 = relay.floor_mod(call_2314.astype('float32'), relay.reshape(var_2323.astype('float32'), relay.shape_of(call_2314))) # shape=(5, 8, 14)
var_2337 = relay.var("var_2337", dtype = "float32", shape = (5, 8, 14))#candidate|2337|(5, 8, 14)|var|float32
bop_2338 = relay.greater(var_2323.astype('bool'), relay.reshape(var_2337.astype('bool'), relay.shape_of(var_2323))) # shape=(5, 8, 14)
output = relay.Tuple([bop_2324,bop_2338,])
output2 = relay.Tuple([bop_2327,bop_2338,])
func_2355 = relay.Function([var_2323,var_2337,], output)
mod['func_2355'] = func_2355
mod = relay.transform.InferType()(mod)
var_2356 = relay.var("var_2356", dtype = "float32", shape = (5, 8, 14))#candidate|2356|(5, 8, 14)|var|float32
var_2357 = relay.var("var_2357", dtype = "float32", shape = (5, 8, 14))#candidate|2357|(5, 8, 14)|var|float32
output = func_2355(var_2356,var_2357,)
func_2358 = relay.Function([var_2356,var_2357,], output)
mutated_mod['func_2358'] = func_2358
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1929_call = mod.get_global_var('func_1929')
func_1931_call = mutated_mod.get_global_var('func_1931')
call_2478 = func_1929_call()
call_2479 = func_1929_call()
func_2355_call = mod.get_global_var('func_2355')
func_2358_call = mutated_mod.get_global_var('func_2358')
call_2481 = relay.TupleGetItem(func_2355_call(relay.reshape(call_2478.astype('float32'), [5, 8, 14]), relay.reshape(call_2478.astype('float32'), [5, 8, 14]), ), 1)
call_2482 = relay.TupleGetItem(func_2358_call(relay.reshape(call_2478.astype('float32'), [5, 8, 14]), relay.reshape(call_2478.astype('float32'), [5, 8, 14]), ), 1)
output = relay.Tuple([call_2478,call_2481,])
output2 = relay.Tuple([call_2479,call_2482,])
func_2484 = relay.Function([], output)
mod['func_2484'] = func_2484
mod = relay.transform.InferType()(mod)
mutated_mod['func_2484'] = func_2484
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2484_call = mutated_mod.get_global_var('func_2484')
call_2485 = func_2484_call()
output = call_2485
func_2486 = relay.Function([], output)
mutated_mod['func_2486'] = func_2486
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1929_call = mod.get_global_var('func_1929')
func_1931_call = mutated_mod.get_global_var('func_1931')
call_2490 = func_1929_call()
call_2491 = func_1929_call()
func_1929_call = mod.get_global_var('func_1929')
func_1931_call = mutated_mod.get_global_var('func_1931')
call_2492 = func_1929_call()
call_2493 = func_1929_call()
func_1652_call = mod.get_global_var('func_1652')
func_1654_call = mutated_mod.get_global_var('func_1654')
call_2501 = relay.TupleGetItem(func_1652_call(), 0)
call_2502 = relay.TupleGetItem(func_1654_call(), 0)
output = relay.Tuple([call_2490,call_2492,call_2501,])
output2 = relay.Tuple([call_2491,call_2493,call_2502,])
func_2511 = relay.Function([], output)
mod['func_2511'] = func_2511
mod = relay.transform.InferType()(mod)
output = func_2511()
func_2512 = relay.Function([], output)
mutated_mod['func_2512'] = func_2512
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1157_call = mod.get_global_var('func_1157')
func_1158_call = mutated_mod.get_global_var('func_1158')
call_2543 = relay.TupleGetItem(func_1157_call(), 0)
call_2544 = relay.TupleGetItem(func_1158_call(), 0)
func_1929_call = mod.get_global_var('func_1929')
func_1931_call = mutated_mod.get_global_var('func_1931')
call_2546 = func_1929_call()
call_2547 = func_1929_call()
output = relay.Tuple([call_2543,call_2546,])
output2 = relay.Tuple([call_2544,call_2547,])
func_2554 = relay.Function([], output)
mod['func_2554'] = func_2554
mod = relay.transform.InferType()(mod)
output = func_2554()
func_2555 = relay.Function([], output)
mutated_mod['func_2555'] = func_2555
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2294_call = mod.get_global_var('func_2294')
func_2296_call = mutated_mod.get_global_var('func_2296')
call_2567 = relay.TupleGetItem(func_2294_call(), 0)
call_2568 = relay.TupleGetItem(func_2296_call(), 0)
func_1652_call = mod.get_global_var('func_1652')
func_1654_call = mutated_mod.get_global_var('func_1654')
call_2574 = relay.TupleGetItem(func_1652_call(), 0)
call_2575 = relay.TupleGetItem(func_1654_call(), 0)
func_986_call = mod.get_global_var('func_986')
func_989_call = mutated_mod.get_global_var('func_989')
const_2585 = relay.const([[-0.649797,-0.071740,-4.467068,-8.337923,7.988617,0.445063,7.760789,-2.075687,9.597620,-3.332924,6.165289,6.053930,1.706417,-1.017061,-4.615250,-5.702154,3.766980,-5.815034,-7.010797,3.625348,-5.369208,-4.964880,-5.477839,6.017615,-8.016797,5.091508,-2.621247,-3.463974,4.509177,-4.652405,0.764402,9.303118,0.495797,-0.536833,-9.907781,3.735172,-8.369923,-0.142724,-5.258755,2.872789,9.566199,-2.583292,0.058354,-6.113826,1.064350,-0.915650,3.639322,-1.442297,2.856026,-0.867154,-6.497862,1.388304,-0.573599,3.730348,2.314976,0.262197,7.846866,8.673441,7.113534,-0.320350,-6.613606,6.287903,-2.356198,-5.700926,-1.625598,3.484848,-8.053329,-7.792861,-0.744348,8.336591,-7.230194,8.560478,-6.482027,-8.824213,-7.674707,-6.038594,9.826273,-0.578974,0.446690,0.491003,5.341828,-6.511903,2.243648,-4.922074,-8.089402,-9.511004,9.009334,0.254182,-2.201641,4.105513,-6.032494,3.892648,2.619745,9.055699,-6.189547,-3.712648,7.725175,2.844584,1.809064,-2.537229,3.899104,-5.033077,-7.591619,-6.870495,9.127692,2.206556,3.403082,2.015994,-8.747928,-8.306033,-2.285930,8.554730,6.951257,-2.526945,-7.192506,8.383595,9.853772,-9.161494,8.664566,-6.961080,-2.716581,-2.648498,-7.645761,-9.927664,-3.908972,4.152427,-4.418387,-5.959920,5.005692,-2.594516,6.603953,5.191244,-7.259974,0.275401,-5.331946,-1.043410,6.295671,3.197460,4.452373,6.708589,-1.173356,-8.008020,7.167055,-2.873575,2.483668,-9.221689,-6.029078,-8.814228,-7.370416,-1.819003,9.937247,8.455107,8.967991,5.745572,1.775318,-7.195711,5.236050,-9.824181,9.119537,-8.164846,7.886818,-0.221749,-3.749608,-0.392023,-3.042938,-6.359665,-2.136216,-3.710005,-8.376136,-6.817584,-9.942165,5.919105,5.665976,-6.659480,-7.403128,3.679936,-6.815479,-3.379583,-3.630099,9.583089,9.881341,3.015223,7.492341,-0.438838,1.625534,6.834197,3.333451,5.298908,-0.600223,-6.339103,-4.774162,3.832535,5.557310,-8.688550,-4.816192,-8.431252,6.636826,5.400441,9.663182,-8.747043,-5.510695,5.983557,-5.171492,-0.033842,-0.285517,5.016510,7.525965,7.362243,-8.093500,-2.076680,4.190586,7.934930,-0.382644,-2.777523,-6.798024,-9.295595,-9.967453,-9.130852,1.768807,-7.512981,5.702429,-7.115716,-3.858072,1.230404,4.748966,1.920618,-8.955356,2.361294,-3.961015,9.565240,-5.897333,0.897290,2.600467,4.434936,5.822555,-4.067863,-0.361850,7.441803,4.487006,7.766978,-4.252498,5.402705,8.093591],[-5.898575,-0.936181,-5.904797,4.363491,-4.577299,-8.088425,2.010397,7.525108,-7.353306,2.001066,-7.783268,4.830022,3.920582,-9.489812,-5.097183,-9.075510,6.575904,-5.802550,6.106584,-6.600222,-0.702321,-0.162673,-6.768571,-4.099841,5.091717,-2.860731,-1.435313,3.165176,0.230981,-8.668212,-8.982035,-5.387203,-1.237786,0.483363,8.926300,2.636963,-8.556158,3.297692,5.316086,-8.565309,2.323999,-7.081497,-6.154702,-5.113064,7.750830,2.879723,7.862984,-6.100337,1.648608,4.823907,4.351738,-5.973090,-0.710241,-9.714794,0.322450,-5.682562,5.614052,-6.206210,8.269913,3.732521,-7.840232,-7.427144,0.080581,1.776397,-6.011114,1.218717,5.388772,-7.778026,4.648187,7.019556,4.657092,-7.693403,-3.856929,-0.446699,1.748701,-6.036974,-6.087198,3.192487,5.026187,-4.844172,3.926924,5.807812,-6.897430,9.268019,-7.037753,-7.048438,-8.713033,-6.981521,-7.484560,-9.439616,0.969382,6.063227,3.058135,8.672118,5.036468,3.046564,1.609640,4.968368,-0.685100,7.310168,0.015505,-7.693326,-5.594018,-0.295416,1.421833,-0.368795,7.368919,-2.011496,-1.021388,-4.475394,-3.912217,9.331465,-7.067320,7.779761,8.483706,-3.652025,-0.162886,-3.300858,1.254185,8.598354,-4.207974,0.364311,1.281174,-8.192436,4.618978,5.883948,-7.256531,3.453749,1.914411,2.573536,-6.566333,4.046031,-5.596093,9.992981,-5.425727,-3.208097,8.904127,7.697978,-7.488379,-6.795290,-1.850634,0.832432,-5.294201,0.778907,0.488121,-5.422178,-5.728488,-8.065752,-0.011793,5.201342,0.645142,0.430233,8.362279,4.086406,-4.932467,-9.914092,-6.499306,-4.806543,-5.666201,-5.548036,-9.463423,9.222627,0.807210,-5.469515,-9.715551,-3.264871,9.155686,-8.728967,-0.960995,-3.624887,8.332738,4.443528,-6.903289,3.989454,-1.803573,-6.565845,-0.341163,4.069460,-8.516516,8.590178,1.180370,-5.281947,9.746618,-7.535563,-0.633705,9.031443,7.682748,8.688543,-6.630396,-3.028404,8.728519,9.704831,8.423471,8.514539,-0.453308,-3.902257,-6.722133,3.594400,0.319777,-8.454111,-7.065034,3.572142,-1.227185,-3.778290,6.607073,8.604137,7.236602,2.326469,-2.264103,-6.342274,0.654793,-0.207735,7.183325,-6.029099,4.538244,5.696844,-7.928356,2.252118,6.409071,4.294550,8.987618,0.204651,0.868074,8.715326,8.950165,0.498291,-5.984076,4.869524,4.365572,-3.060559,-1.585353,-6.238137,-9.974666,9.385635,7.605790,5.238340,-6.653879,-3.530648,7.937848,6.868108,4.919351,2.851106,-9.238491],[-3.703808,-6.464588,2.037901,-8.766817,4.902491,9.442862,-0.912743,7.079531,9.135294,2.708576,-2.984219,2.887316,8.197287,-3.792662,-5.899444,7.335385,-1.012490,6.574188,-9.969944,2.254211,5.710393,0.463698,-4.459985,3.544619,-8.469281,2.810639,6.028154,-2.893676,4.466999,0.458761,8.963045,-9.017646,8.052076,7.926547,8.951302,8.845520,-0.999511,5.658695,-1.839410,-9.160370,2.503592,7.478941,1.812921,2.979861,-1.923172,-5.826741,-1.889071,8.888920,4.338047,5.011772,8.053997,1.802231,3.203430,-5.104842,5.713596,-3.236860,-7.703602,0.988116,8.513737,6.442102,1.716146,-7.047891,-7.438603,7.636820,-1.686639,6.253034,-1.287418,4.838773,4.076488,1.174924,5.942317,3.326445,3.907035,5.408442,7.009566,-2.827425,-0.708104,-8.653494,-5.022592,-0.364628,6.691025,-3.179584,-0.646749,4.000492,-6.950869,-3.976495,1.070250,8.866294,-1.794393,2.062183,3.117445,1.514451,-0.629478,8.322410,8.415914,-4.983748,8.570668,-5.886215,-3.844981,0.246444,-4.561332,-0.646880,7.721740,-0.010453,-0.194630,3.125709,4.110607,-7.853146,9.217375,-8.895681,0.476041,8.754929,-6.807919,1.397024,3.977612,3.583741,-1.007799,1.451704,5.717333,-7.157451,-3.039752,-6.120540,-5.273710,9.309742,-3.823058,-1.264925,-8.169062,-2.619317,-7.920487,-5.954083,-0.993585,8.997311,9.424248,-8.071728,1.855135,4.812020,-5.527094,8.033037,-5.906786,-3.590151,6.806441,-3.149655,-8.721939,-9.453963,-4.152742,0.480890,-2.123366,-5.045231,5.076881,-6.883128,3.329951,-3.514109,1.329129,-8.992341,6.861223,-1.441869,4.371207,-4.938575,6.578135,-1.357988,6.211874,-4.936850,4.555044,-1.975736,9.835822,9.653074,-2.512353,9.051543,5.302597,2.578738,-5.050260,7.028364,-4.099833,-0.571402,-3.707229,-4.709676,-4.875025,7.459428,9.784123,-3.135236,2.974220,5.137163,-6.444604,1.885186,-3.173580,-2.966857,1.535534,-8.846063,5.713841,1.435122,-1.385318,-9.888985,4.787100,-5.573327,9.330037,9.185637,-3.622856,-1.725355,1.020951,-4.452088,-9.632957,7.930762,5.341357,2.419557,-6.723578,-5.997869,-3.012830,3.273262,2.130787,-1.899539,-3.363027,7.528080,-7.547477,0.813812,1.149402,4.937276,-8.789641,8.465099,2.690326,9.589686,-1.599181,-7.201457,-4.555624,-2.223657,5.857231,-7.973992,-8.241388,-3.768318,7.707863,7.041637,2.693717,-6.341059,5.644057,0.350550,-7.141226,-8.265050,2.318868,-3.657446,-3.882678,2.475540,9.340865,4.598206,7.823053]], dtype = "float32")#candidate|2585|(3, 243)|const|float32
const_2586 = relay.const([7.596673,9.732210,6.843234,-8.474198,9.183438,3.939592,6.642476,-9.286907,-3.498980,-9.886808,-0.274228,3.782209,6.485792,8.926783,8.678940,7.824370,-9.050251,-0.518344,1.605033,-6.096530,-2.073157,-8.415635,-3.727739,6.504662,4.824840,-6.358360,7.874881,-9.529782,-3.571253,9.944203,0.748212,0.960151,-0.045816,4.947051,-5.603116,-0.886187,-3.038224,-4.934229,-5.930406,8.591339,5.145360,2.531517,-3.592056,9.630425,-5.447101,-3.906103,-4.303683,1.355442,-1.119623,-8.385351,-7.197712,6.970955,-3.550692,-7.870260,5.318772,-6.530174,2.332990,7.206147,4.955715,9.549908,-7.016576,1.106380,8.218295,5.442833,-5.275865,-1.544292,-9.156643,4.011645,8.554242,5.353984,8.830949,8.604192,-8.780936,-0.190473,9.211975,0.551700,-8.170566,-3.588856,8.030304,3.839571,-8.047230,-0.451692,0.459986,7.090596,6.914356,2.470034,-3.692161,-2.647706,2.415139,2.568586,-4.658672,-4.655622,8.920132,-2.750061,-4.148632,-9.412478,9.432396,-4.342405,-1.909606,8.840012,-6.494121,1.614544,4.710515,1.918594,-1.250936,9.848469,0.416313,4.656405,3.433907,7.206240,6.656775,-8.061337,4.809890,6.697014,-9.186314,0.914781,8.407139,8.645241,-4.490072,-0.910223,9.516316,7.471265,0.358745,-9.593942,-4.007636,2.145420,0.483900,-3.115247,-8.908972,7.932747,-8.937445,4.741230,1.818309,-7.728951,-9.914586,-7.698850,6.755071,-3.384362,7.415081,2.391640,5.332969,9.571243,-6.420625,6.433581,-3.875253,5.066258,2.123465,-2.265897,7.143752,3.402608,0.033395,-7.939330,9.486139,-3.450877,2.333439,7.856856,-8.358699,7.376548,-7.252585,2.611004,8.174977,-9.766373,4.512037,0.044689,2.668909,-7.460849,9.087484,6.507046,-0.981047,7.179035,8.113003,-9.269925,0.875047,-4.694835,-0.088920,-3.003030,-7.343738,-1.380961,-0.014144,2.295435,-0.629647,-1.979265,-0.206344,6.437178,3.165099,-0.137220,4.874380,-1.517141,-0.972537,-0.555681,-6.696759,7.873547,4.003655,5.500562,7.376115,-8.255095,-9.577111,6.225718,-1.692051,9.257139,5.358057,0.234471,-7.494860,-6.344421,-0.082062,6.596499,4.293114,-8.662023,9.590409,-5.983227,-0.329432,-6.187376,-8.577421,5.495061,-8.520639,-0.955863,-6.878007,-9.661430,-5.438620,9.298885,-8.297683,7.656535,4.372924,-4.759349,6.591956,-3.636332,2.450535,3.568730,-8.936159,7.079704,8.260547,1.178765,9.168969,0.099193,-5.650960,-8.206744,0.654125,-7.556424,1.299430,1.383096,-6.096100,-0.697371,1.215112,2.853553,-1.392284,-2.851409,-8.949169,6.790249,-5.576776,7.049424,-8.609022,0.057299,-6.418371,-3.533122,-1.347219,-6.105837,7.512778,3.459473,-4.918657,9.417720,7.063816,8.173587,6.548167,0.436766,1.924690,-5.399655,-9.410981,4.843836,9.486844,1.110995,-1.732813,-7.105988,-3.853671,-1.788796,-8.102244,-4.084635,0.906164,-2.051674,-6.236028,-7.548087,-5.628103,3.070988,-7.256180,9.838088,6.221081,-8.264333,7.346588,1.876436,-8.883202,-1.487428,2.569819,-0.791870,-2.393051,1.199875,-5.313129,-1.620816,-2.416003,4.568384,4.809189,1.931086,2.422270,-8.158299,-2.758547,7.156369,2.612437,-9.889997,-1.467777,7.435239,1.552050,7.214007,9.703055,-9.238910,-1.492810,-6.867585,4.502235,-6.890003,4.783327,9.710441,-8.072085,-2.156298,-3.614721,5.346443,0.773241,-6.745103,9.417890,-9.479668,2.629704,4.661644,8.183248,1.985527,1.105593,7.051160,-5.909367,-1.970602,7.567058,-6.500056,4.717088,-0.057481,7.710652,2.407562,7.418689,5.721858,4.961866,-8.377544,-5.205805,7.697065,4.998367,3.148471,4.853342,-7.919354,-2.184415,-8.576360,-4.207047,8.873085,3.068500,2.824350,-0.363929,-3.870598,0.772798,-0.012404,-8.908694,0.706013,4.177418,-7.586207,-0.094819,9.144507,9.672871,2.959929,0.138056,9.087293,3.882155,5.879893,8.718737,7.190493,-3.753373,4.431237,6.295297,-5.885939,5.663287,2.777412,5.531987,-0.357089,4.753244,2.037999,-5.260313,5.170531,9.967502,-1.150909,-1.659683,4.005866,6.945510,-0.758885,6.400086,8.003405,4.995692,-5.622975,-3.921211,2.166094,-3.367554,-1.768523,-4.509155,9.788080,-8.537427,-6.002044,5.514214,5.025107,-8.076659,-8.671550,-1.723532,-1.668981,-9.618147,-4.218464,-9.917987,-0.802337,-7.694139,1.117745,5.906172,-8.743493,-6.578878,-6.150501,-2.448001,4.681219,6.016644,-1.392848,3.275311,3.138331,-5.694516,-0.116961,-8.677942,6.488993,1.956750,2.949597,4.121348,-2.626965,-4.329097,-6.508745,-1.494475,-7.222798,4.549602,4.556212,8.330960,-4.477741,3.899099,-7.566976,-0.574318,-1.813267,3.748135,-7.274490,-0.986829,-8.668825,6.300671,1.855078,-3.377895,-0.109945,1.838807,3.580502,-4.941061,-5.793061,-0.092293,0.804449,-4.081407,3.209540,8.378826,6.781476,-1.225052,1.841002,-6.368881,-4.143881,-0.928627,-8.218921,-4.081280,-1.242562,7.461093,-2.962885,-8.653646,-6.304081,-0.768931,-3.670739,8.903306,1.942928,9.681271,-5.263507,2.012516,2.343913,2.912516,4.622220,4.674583,-4.068107,-8.891045,-6.898691,7.763529,-6.276857,-4.626526,8.336818,-0.767187,-7.169641,9.951884,3.757160,1.624872,-9.184472,-5.292431,-8.235292,-0.870269,-2.653192,-1.105256,2.449619,-5.439703,9.280800,-5.356021,-9.068408,3.337034,-8.820657,9.115926,6.404307,-4.402616,7.223667,-6.796922,-0.333433,0.794661,2.075565], dtype = "float64")#candidate|2586|(520,)|const|float64
call_2584 = relay.TupleGetItem(func_986_call(relay.reshape(const_2585.astype('float32'), [9, 9, 9]), relay.reshape(const_2586.astype('float64'), [520,]), ), 2)
call_2587 = relay.TupleGetItem(func_989_call(relay.reshape(const_2585.astype('float32'), [9, 9, 9]), relay.reshape(const_2586.astype('float64'), [520,]), ), 2)
output = relay.Tuple([call_2567,call_2574,call_2584,const_2585,const_2586,])
output2 = relay.Tuple([call_2568,call_2575,call_2587,const_2585,const_2586,])
func_2590 = relay.Function([], output)
mod['func_2590'] = func_2590
mod = relay.transform.InferType()(mod)
mutated_mod['func_2590'] = func_2590
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2590_call = mutated_mod.get_global_var('func_2590')
call_2591 = func_2590_call()
output = call_2591
func_2592 = relay.Function([], output)
mutated_mod['func_2592'] = func_2592
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1064_call = mod.get_global_var('func_1064')
func_1065_call = mutated_mod.get_global_var('func_1065')
call_2647 = relay.TupleGetItem(func_1064_call(), 0)
call_2648 = relay.TupleGetItem(func_1065_call(), 0)
output = relay.Tuple([call_2647,])
output2 = relay.Tuple([call_2648,])
func_2649 = relay.Function([], output)
mod['func_2649'] = func_2649
mod = relay.transform.InferType()(mod)
output = func_2649()
func_2650 = relay.Function([], output)
mutated_mod['func_2650'] = func_2650
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2590_call = mod.get_global_var('func_2590')
func_2592_call = mutated_mod.get_global_var('func_2592')
call_2667 = relay.TupleGetItem(func_2590_call(), 3)
call_2668 = relay.TupleGetItem(func_2592_call(), 3)
output = call_2667
output2 = call_2668
func_2676 = relay.Function([], output)
mod['func_2676'] = func_2676
mod = relay.transform.InferType()(mod)
output = func_2676()
func_2677 = relay.Function([], output)
mutated_mod['func_2677'] = func_2677
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1064_call = mod.get_global_var('func_1064')
func_1065_call = mutated_mod.get_global_var('func_1065')
call_2688 = relay.TupleGetItem(func_1064_call(), 1)
call_2689 = relay.TupleGetItem(func_1065_call(), 1)
output = relay.Tuple([call_2688,])
output2 = relay.Tuple([call_2689,])
func_2716 = relay.Function([], output)
mod['func_2716'] = func_2716
mod = relay.transform.InferType()(mod)
mutated_mod['func_2716'] = func_2716
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2716_call = mutated_mod.get_global_var('func_2716')
call_2717 = func_2716_call()
output = call_2717
func_2718 = relay.Function([], output)
mutated_mod['func_2718'] = func_2718
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1027_call = mod.get_global_var('func_1027')
func_1029_call = mutated_mod.get_global_var('func_1029')
call_2777 = func_1027_call()
call_2778 = func_1027_call()
uop_2794 = relay.cos(call_2777.astype('float32')) # shape=(5, 8, 14)
uop_2796 = relay.cos(call_2778.astype('float32')) # shape=(5, 8, 14)
func_1618_call = mod.get_global_var('func_1618')
func_1619_call = mutated_mod.get_global_var('func_1619')
call_2798 = relay.TupleGetItem(func_1618_call(), 1)
call_2799 = relay.TupleGetItem(func_1619_call(), 1)
output = relay.Tuple([uop_2794,call_2798,])
output2 = relay.Tuple([uop_2796,call_2799,])
func_2815 = relay.Function([], output)
mod['func_2815'] = func_2815
mod = relay.transform.InferType()(mod)
mutated_mod['func_2815'] = func_2815
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2815_call = mutated_mod.get_global_var('func_2815')
call_2816 = func_2815_call()
output = call_2816
func_2817 = relay.Function([], output)
mutated_mod['func_2817'] = func_2817
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2676_call = mod.get_global_var('func_2676')
func_2677_call = mutated_mod.get_global_var('func_2677')
call_2856 = func_2676_call()
call_2857 = func_2676_call()
const_2860 = relay.const([[2.593619,-3.623182,-1.875716,-1.094096,4.513507,-1.689960,1.357284,-2.886119,-1.217098,0.101591,-8.694957,-4.610045,-3.467134,5.473280,-9.884470,6.780621,7.709926,-4.682313,-2.090661,5.269676,-3.141162,2.801255,-8.261200,8.691977,-1.211302,9.789095,2.683373,-2.400818,6.812017,-9.375445,-6.446883,-8.666450,2.909740,-2.176835,4.045939,-7.372817,5.969444,6.943446,5.102897,-3.101168,1.901251,6.289919,-6.137639,7.154699,3.513721,8.936379,0.595031,4.325251,9.394777,-5.025428,3.565690,-2.082831,0.598375,-3.715641,-9.500971,-1.137711,9.869269,9.711533,-1.857255,7.277417,-9.346583,0.265771,-6.094185,7.491773,-8.700854,-7.167586,-9.609436,7.873580,-6.219452,-9.289499,-0.026134,9.830730,-5.531765,9.902010,8.751193,-7.654112,-7.391640,6.781859,0.895438,-6.322775,-6.987645,0.498815,2.620318,-1.981171,9.066075,-7.672977,-7.434194,9.116913,-2.505486,7.596300,8.057078,-4.657599,9.425720,8.985913,-8.730283,1.700427,-0.664952,7.766265,1.530629,-8.835521,-6.976935,-8.801134,-8.541007,-3.446749,4.722126,-6.671789,5.917448,-6.845251,-6.508691,3.670266,0.695913,1.789250,-3.479764,9.057351,5.234445,-0.128723,-6.865272,-5.143830,-4.378952,-1.301632,-8.044569,-2.596502,8.122162,-4.162545,-2.381299,-8.567644,-6.187085,-5.793832,-6.382227,-6.002445,5.960760,9.738646,-9.433088,-3.803570,-6.735846,-2.731005,7.878877,4.469787,6.639044,-2.718795,9.297183,2.692192,-5.644762,-6.054950,7.899615,-3.487007,7.969217,-0.813293,1.616782,-2.152302,8.365674,-5.528336,-3.361970,4.934254,-2.830023,3.010609,-4.423110,3.103293,-6.313645,1.947661,5.406203,-5.789352,-7.879528,-3.029475,8.895557,5.827018,9.357610,7.944155,0.385387,7.484774,-2.945960,-3.175461,2.809047,-6.548848,6.743809,8.424733,1.665166,-6.318687,-8.586991,-1.313703,4.209702,0.483850,7.453559,-1.328191,9.442274,-1.480635,0.855340,9.915991,6.209416,-3.959253,0.884852,0.616121,-4.354387,-7.467052,-5.842103,-2.404037,1.459958,-4.456008,7.600733,3.359528,-9.307020,-7.134049,-7.842784,-7.699627,3.133040,2.229423,-5.424711,-6.160291,-3.252986,7.947788,7.902150,-8.467434,9.863985,2.557645,-8.437488,-4.770898,9.505346,-8.191098,-5.321489,4.611870,7.879930,-3.893275,3.416644,-2.598142,-3.372482,-4.072853,-7.071671,-2.339312,7.125184,-4.908230,-1.222051,-1.271830,2.781476,-5.990257,8.468753,-9.156885,-7.870692,-7.384099,6.775960,5.752852,-7.556579,5.503407,-3.117119],[2.660096,6.070787,6.149892,-6.883131,3.812625,-8.102184,6.454088,5.988667,5.606137,-8.341904,2.829107,-1.237153,2.159662,-7.024099,2.087906,-7.871616,-7.069915,-8.364045,-6.216899,8.487437,2.775401,1.496863,0.300696,-7.365526,-7.786245,-6.936779,-0.745760,-1.201159,-3.309056,-6.442217,7.452019,-6.433652,-0.658079,-3.118904,2.023636,3.343150,9.562943,8.610631,2.609691,1.102336,-2.557532,-0.848939,0.503995,4.807965,5.204605,3.226294,-6.045155,3.315290,7.926700,2.868549,3.383566,6.009541,3.709536,-1.873331,-2.074802,-9.090567,0.163212,2.484944,7.625122,-7.913544,-1.852573,-1.916882,7.168249,9.755841,3.665345,7.556274,7.206703,8.970198,7.565717,-8.310243,-9.869242,2.580166,9.961551,-4.842669,4.706417,6.312507,-8.653380,-9.360058,9.384841,-6.827031,8.082175,-7.675152,-9.120802,6.937725,9.858265,4.770339,5.292530,4.556582,6.052056,0.015631,3.703928,-7.233100,-6.676921,1.640887,2.923928,-4.228578,-1.516171,0.007647,6.646585,-9.162742,-3.959109,-5.527187,-8.294202,-8.543002,5.745161,-5.044719,8.306883,-8.044796,-4.174858,7.576663,-7.023007,-9.511388,-9.083498,4.876014,-2.705809,-4.783530,-1.300373,-3.660273,4.196863,-4.877758,9.656871,2.645307,-8.277907,-0.509992,6.903355,-3.398801,-5.565143,-9.223861,-9.263294,-4.139362,-3.002668,-3.435236,8.346133,1.594298,3.341793,6.872292,2.554265,6.835215,-5.667415,-4.857287,-1.939049,6.460153,0.440590,2.223021,-6.813864,-2.149938,9.582465,3.722515,-1.301283,7.402451,-1.253367,-0.034005,1.357033,3.541659,3.478095,9.670203,-7.219561,-3.527707,4.961916,-5.554023,8.539242,-7.834705,2.623743,0.423348,-7.802472,0.148730,4.613112,-8.684747,-5.518631,8.562900,9.906921,2.941123,8.727919,0.434537,1.574620,-2.474567,4.947639,0.962868,-8.005469,-1.441554,7.722325,-8.951825,6.089770,9.207611,-9.770182,4.108074,-5.878612,-4.682433,4.309513,-2.961669,4.335263,4.245286,0.369831,3.503682,-9.853903,-5.570743,5.730450,-0.337481,-0.422628,-3.964229,-0.851019,-7.437449,-5.220402,0.891823,5.048558,5.828937,-9.415342,7.488935,9.236628,-7.741350,-9.911233,-3.000603,1.569415,-3.489973,-9.921091,-3.227655,-6.721725,2.052161,7.282195,-7.644807,-5.796906,4.925689,4.408329,-1.556561,6.382406,-0.525305,-6.239248,-0.289027,4.254600,3.996241,1.977454,6.283167,-2.611428,7.071930,9.291958,-7.853510,0.429541,-3.954460,-3.575585,6.688579,6.435472,7.763358,-3.287715],[9.068460,-2.662764,-3.836703,0.253646,-8.706411,-1.933599,2.713237,2.895100,-8.277710,-1.250387,5.602530,4.688309,-1.292828,-1.335330,-4.117061,7.568517,1.032649,-6.815227,-8.773931,8.783555,-3.423233,-7.840502,7.480346,4.952756,-0.152282,-1.355924,2.455332,-2.061893,8.089272,2.793935,-0.967873,2.519894,5.002717,2.901520,1.717559,-9.546534,-1.163766,-9.319381,-1.342291,1.760588,0.349014,1.489417,-2.352121,-1.539351,-6.031518,7.143174,5.307026,-8.511057,1.138406,-4.478456,-7.938041,-3.526108,4.277675,-6.140863,-9.986538,-8.469595,-5.089305,-4.218618,6.801345,-6.412751,9.511917,-6.105034,-3.033959,7.583319,-2.755886,0.078083,-7.023575,-9.768234,-7.511108,0.987696,-3.984961,-0.629546,1.918246,1.965537,5.243510,8.522208,-4.583894,4.265310,-4.644026,-0.544039,-8.054192,-1.370170,2.322049,-4.157804,5.162609,-9.093740,6.040379,-3.817175,-4.156847,-5.347022,3.329626,-0.576208,7.371099,9.311628,-2.484813,8.071029,9.908900,3.225152,-2.214304,-9.818791,0.262982,3.362764,1.235790,-8.227024,-1.142044,1.102569,-4.972586,2.337085,-8.706487,0.095798,-8.128508,6.704168,-3.437923,-7.180215,9.541988,8.435085,1.959678,5.614488,-8.508165,-4.660424,-6.408739,3.381590,3.625274,8.756615,7.222036,-6.726379,8.066045,9.955339,-2.461874,-7.204112,-3.405345,1.213695,-8.049943,-1.973639,-9.812108,6.092547,-1.678415,9.277334,5.130380,9.457602,4.852142,-6.880590,-9.759198,3.846729,3.781210,-1.191635,5.740548,-7.266271,-2.472075,-3.855677,2.109124,-1.237257,-7.295498,-8.160796,-0.686012,-3.414869,3.765872,-4.061397,-0.819715,1.395406,0.439961,2.558625,2.660042,-5.897074,-9.051413,-4.106160,5.717264,-6.266453,-2.633173,8.184555,-5.477713,-2.712330,6.321177,7.539885,-6.142408,4.815060,-7.982085,-4.339879,-1.568921,-9.544147,-8.929296,4.009995,5.918661,0.592862,-5.653539,-9.518576,4.449771,-7.951744,3.776615,-5.009182,-7.771853,0.053375,4.194016,-9.059954,-9.755678,-0.747203,7.505525,-9.298004,5.075413,-9.052817,8.356241,2.553763,-6.048010,4.907112,7.284302,2.582981,9.465793,0.175896,0.803479,1.944332,-6.938010,-2.606650,1.759907,-6.699996,-7.508898,-3.367264,2.771029,-4.344526,4.061901,6.326597,-4.155318,7.092783,7.943165,-6.250532,-5.026190,-5.111318,2.805581,2.241046,-2.598078,-9.797767,-5.140954,-1.856849,-3.569131,5.867907,-5.745708,-2.874999,-7.225781,-5.740772,-3.117390,-3.728213,-4.456838,0.796907,9.218037]], dtype = "float32")#candidate|2860|(3, 243)|const|float32
bop_2861 = relay.logical_xor(call_2856.astype('int16'), relay.reshape(const_2860.astype('int16'), relay.shape_of(call_2856))) # shape=(3, 243)
bop_2864 = relay.logical_xor(call_2857.astype('int16'), relay.reshape(const_2860.astype('int16'), relay.shape_of(call_2857))) # shape=(3, 243)
const_2871 = relay.const([[-5.163546,1.400770,-0.311856,-1.635998,-7.568504,-6.383844,2.120137,-7.846462,2.557320,-1.059617,4.274981,4.221617,5.736810,5.440918,-3.696238,-3.800969,4.506931,-5.187955,6.130472,7.333266,3.733599,-6.055015,6.502662,-3.592227,8.286456,-7.411759,0.650755,3.832100,-4.605634,-5.466782,7.191608,0.190825,-6.955242,3.988960,-6.445617,5.213388,-9.014777,-3.459060,-4.067816,-3.565556,0.797381,-4.408067,-8.600944,0.230558,-8.304088,5.512672,4.891473,7.948891,-3.842919,9.518107,4.479149,-7.563207,-4.854693,6.443783,-5.237047,-8.402723,-4.012932,-6.624281,4.144962,9.115435,5.710720,9.420201,2.306633,-8.977735,9.439245,-8.306863,-3.904948,-9.950389,0.955874,8.884224,6.334580,-3.378816,0.432820,-9.806398,-3.655117,-5.813760,-5.596817,-9.024098,-4.216473,2.244749,2.869051,-5.856293,3.892853,-0.732659,6.769609,-1.889434,-4.920323,-4.515698,6.987661,-9.018733,4.758247,2.688909,-4.686943,9.014163,-7.936380,7.498396,2.350457,8.803117,-4.706308,0.583223,7.596331,0.441978,-9.890565,1.562912,-8.992830,-4.414669,9.421857,-4.328349,3.686873,-1.170269,-4.606910,8.412926,-7.269933,-0.993813,1.719352,-9.154077,4.521313,-3.150489,8.420800,4.941041,8.474997,6.178362,1.283762,-0.567648,-6.688351,-6.183801,-5.386907,-3.667104,-5.165244,-2.494697,-3.502071,6.218084,-7.955654,-7.671299,1.003823,4.392357,4.873226,4.710864,-4.216228,7.291923,3.667714,-9.092697,-8.260444,-4.397548,7.964418,-5.134597,0.157307,-7.991924,1.046125,1.023796,-5.770580,0.829256,-7.499818,0.663085,-1.367653,1.589444,-6.649126,-6.066781,-1.071443,-1.523074,5.565572,3.198519,-5.312651,-9.241131,-3.425845,-1.449917,-4.062643,-4.928197,4.791519,-5.758585,0.454656,3.331172,5.267824,-1.317984,-5.146615,0.653098,0.400539,-1.713724,-0.095883,7.178165,-8.301426,-5.322683,4.033267,1.903664,-0.678818,-0.614332,0.148595,7.496698,8.319404,-4.304589,-1.371050,9.792116,1.608408,3.767063,-7.982033,-0.998153,6.429051,-6.280135,-4.344594,0.463601,2.464995,-8.210277,5.479394,8.543199,3.750423,-6.046908,1.619456,8.225383,5.583013,2.370002,6.527981,-1.287041,-0.694101,5.359782,8.971595,8.148441,-8.841965,5.247963,5.264368,2.037351,6.325344,4.187967,4.109567,3.806453,4.884943,1.742567,-3.708302,8.774994,-9.111015,8.960313,7.148069,-7.105587,-3.588046,0.546769,-9.644763,-2.943744,-0.167652,-5.660839,-7.077501,-5.752825,-2.934103,-3.739742,-9.594824],[3.009588,-1.816309,-3.943461,9.743751,-6.670581,-7.595808,-9.376580,-0.119134,-5.336545,-2.030518,-1.532141,-0.299919,-9.717453,-4.507889,-1.804269,8.484338,0.864970,-1.589571,5.687478,-5.395575,-0.843745,-9.958224,5.664660,5.710672,3.400447,3.751889,6.603282,5.500813,-9.941762,-8.421815,-8.818559,2.835069,-1.385906,1.848849,9.664409,2.159282,-0.097219,-7.688647,-7.286619,-0.131067,5.048887,8.775680,3.326805,0.737318,0.627005,-5.056365,7.192735,0.122673,-3.589828,2.994741,6.963383,8.246669,-7.586192,1.939813,9.501702,5.038325,7.809105,3.016063,9.107861,3.951351,8.553465,-2.693292,7.648318,-8.657304,-6.469840,2.876562,-3.442262,1.596496,0.689366,9.684975,-2.510957,7.095109,8.767314,3.116358,2.727003,9.865249,-0.982373,3.980428,-6.718165,6.914809,-5.367950,-8.458320,6.602881,8.211849,-8.947709,-1.555541,5.267037,8.307143,-5.237196,9.020846,5.764989,-1.748377,-3.002404,4.116427,0.266749,5.560819,0.544852,-0.137768,-3.265117,0.603197,-8.319331,7.740126,-3.354674,6.560708,9.012764,-3.797022,8.569695,6.431294,4.756098,-3.926523,3.214856,-6.368819,3.555579,-0.028147,-5.557977,3.449390,3.798893,0.299194,8.928942,-0.941344,5.240875,5.685635,-4.162714,8.583917,4.179501,-5.491446,9.119949,1.024347,-4.636736,-5.720107,-6.974572,5.735889,9.469922,6.461032,9.510277,5.898873,-9.318564,-0.802247,8.289258,-3.687194,1.213289,-8.797587,3.380899,-4.071018,7.580312,0.385855,-8.354475,3.745834,6.906359,-9.811934,-9.550324,7.353759,-1.066346,5.118337,7.052881,-2.843981,5.676972,-5.010410,-2.058365,-4.143395,6.285312,2.271377,-1.979590,4.937486,6.433187,1.814640,-6.225854,2.725741,-8.007826,-7.830037,-3.997758,-3.999613,8.574129,8.715224,6.133554,7.666388,5.581108,-3.808368,1.971061,2.439892,9.483313,6.283153,8.450379,-7.537904,6.365212,-5.228656,6.154843,5.406739,9.402199,1.785906,-5.437539,3.776398,1.564715,-4.285464,-8.772800,-6.713098,-7.200826,2.651123,-8.507939,6.849761,-3.148504,7.246694,-6.430936,0.039119,8.135502,1.775117,3.233588,4.597051,-4.622479,-2.518526,3.058600,0.110769,-9.579421,-4.411215,-9.218518,-6.576347,7.609113,6.610750,3.792715,6.877446,0.085425,-0.338851,0.240630,3.158920,5.050037,-8.368588,-3.656869,-6.516563,-9.832222,1.814483,-7.895421,-4.592898,-6.675918,-7.601054,-5.037386,-4.778950,-4.521911,-8.781512,8.869681,6.048321,9.130774,1.634441,4.772182],[-9.494142,-5.681369,9.536982,-3.195077,-6.387679,3.649463,-4.966370,-2.666373,3.583814,9.748909,6.109374,4.063712,-5.920070,-8.521032,5.126188,9.134133,-4.273447,9.167194,2.379216,7.630864,-1.681644,-8.304904,-7.806941,-7.053396,1.706186,5.528709,-8.910781,5.229903,-4.469913,-9.085226,-0.123714,8.735728,-1.289656,-7.755014,-5.270626,3.166739,-4.984995,9.734328,8.563050,-5.775848,-5.172132,1.870930,-9.512385,4.998109,-6.651728,-2.036016,7.752234,3.145832,4.014715,2.380227,5.789408,-2.364412,-2.053084,-7.091294,1.788726,-8.227248,5.871112,-1.708005,6.770252,-4.035831,-8.978505,-1.930672,-1.078363,7.440273,4.172342,-3.036820,8.495132,-6.545929,-3.960381,6.094678,6.166315,8.735698,7.283550,-2.098260,4.623305,4.894594,-7.754407,-4.241110,1.728210,-4.581080,-9.603179,-4.605641,3.996871,-2.135559,9.689759,-5.021581,4.971296,7.608522,7.630750,4.983808,-7.226623,-3.660889,-3.770799,-5.118359,-1.119328,-2.208381,1.295068,6.882013,2.903970,-0.930336,8.777617,3.129193,2.452912,-2.301226,4.408102,8.410642,-9.020889,-3.945721,-5.773571,-7.385205,3.542528,-6.578897,3.674579,0.736638,7.148631,-9.436073,-5.951882,4.924483,-5.101647,5.510168,-3.921312,-7.245289,-5.465109,8.256185,3.420067,-8.140995,3.844186,5.698644,-9.640490,8.096254,-4.868796,-7.231108,-1.747482,-1.629330,7.781262,-7.329148,2.028565,-1.136065,8.320450,-9.199539,-5.164073,0.472800,2.847651,-9.332652,9.755810,0.001401,7.447685,2.377706,-5.149228,3.932820,1.961894,7.374828,-0.623197,-1.976402,2.091110,-1.856821,6.369474,5.226535,-7.184239,-0.581129,-1.742232,2.823335,-8.166671,2.279513,3.526352,-1.758287,-8.461485,3.363998,-5.236034,-1.620158,-6.692767,0.419371,-8.866249,5.898440,-8.480075,-3.253731,7.522498,2.342609,-5.220762,-8.062426,4.424019,-1.160252,-3.921989,-1.945310,-1.922980,3.677941,9.680547,-2.035629,0.774726,-7.981402,-1.417467,-8.012621,-1.427498,0.870315,-6.133852,-5.220380,-3.282787,8.649516,-4.764375,0.518853,-0.525216,-7.675489,4.863440,7.947482,-0.877770,4.756772,1.768095,-6.101598,2.997948,-9.821842,-6.876629,2.571276,-2.591694,5.097784,-0.682282,3.483667,9.652060,-9.448968,-7.715849,-4.508599,1.423632,2.696162,5.519950,-1.392492,1.913920,6.235092,-9.369842,8.391980,4.929892,4.062286,3.257967,2.115844,-3.583461,-1.269993,9.729704,9.651553,-5.535524,6.449000,6.156642,-0.795036,9.452560,-5.143414,-9.289414]], dtype = "float32")#candidate|2871|(3, 243)|const|float32
bop_2872 = relay.mod(call_2856.astype('float64'), relay.reshape(const_2871.astype('float64'), relay.shape_of(call_2856))) # shape=(3, 243)
bop_2875 = relay.mod(call_2857.astype('float64'), relay.reshape(const_2871.astype('float64'), relay.shape_of(call_2857))) # shape=(3, 243)
bop_2876 = relay.floor_mod(call_2856.astype('float64'), relay.reshape(bop_2861.astype('float64'), relay.shape_of(call_2856))) # shape=(3, 243)
bop_2879 = relay.floor_mod(call_2857.astype('float64'), relay.reshape(bop_2864.astype('float64'), relay.shape_of(call_2857))) # shape=(3, 243)
func_1550_call = mod.get_global_var('func_1550')
func_1554_call = mutated_mod.get_global_var('func_1554')
const_2881 = relay.const([[-1.753458,-8.817626,4.820959,5.879055],[7.184234,9.497371,-7.222533,-9.880633],[3.011358,0.630196,0.520116,-9.674738],[2.973100,-4.104603,-1.145435,-7.923489],[9.588299,3.961537,2.251153,6.927547],[-1.556055,0.347474,-5.413665,-5.486604],[-9.485338,2.259105,7.391834,-5.068566],[7.546626,5.138082,5.933652,3.699539],[-6.372871,6.687523,1.417038,-2.365638],[9.757416,-1.351325,2.881029,-3.860302],[-4.728556,7.033804,9.297309,-8.236374],[-7.689226,-3.653988,7.821387,-4.406537]], dtype = "float64")#candidate|2881|(12, 4)|const|float64
var_2882 = relay.var("var_2882", dtype = "float32", shape = (2, 504))#candidate|2882|(2, 504)|var|float32
call_2880 = relay.TupleGetItem(func_1550_call(relay.reshape(const_2881.astype('float64'), [3, 1, 16]), relay.reshape(var_2882.astype('float32'), [1008,]), ), 5)
call_2883 = relay.TupleGetItem(func_1554_call(relay.reshape(const_2881.astype('float64'), [3, 1, 16]), relay.reshape(var_2882.astype('float32'), [1008,]), ), 5)
output = relay.Tuple([bop_2872,bop_2876,call_2880,const_2881,var_2882,])
output2 = relay.Tuple([bop_2875,bop_2879,call_2883,const_2881,var_2882,])
func_2909 = relay.Function([var_2882,], output)
mod['func_2909'] = func_2909
mod = relay.transform.InferType()(mod)
var_2910 = relay.var("var_2910", dtype = "float32", shape = (2, 504))#candidate|2910|(2, 504)|var|float32
output = func_2909(var_2910)
func_2911 = relay.Function([var_2910], output)
mutated_mod['func_2911'] = func_2911
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1027_call = mod.get_global_var('func_1027')
func_1029_call = mutated_mod.get_global_var('func_1029')
call_2964 = func_1027_call()
call_2965 = func_1027_call()
output = call_2964
output2 = call_2965
func_2966 = relay.Function([], output)
mod['func_2966'] = func_2966
mod = relay.transform.InferType()(mod)
output = func_2966()
func_2967 = relay.Function([], output)
mutated_mod['func_2967'] = func_2967
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2294_call = mod.get_global_var('func_2294')
func_2296_call = mutated_mod.get_global_var('func_2296')
call_2975 = relay.TupleGetItem(func_2294_call(), 0)
call_2976 = relay.TupleGetItem(func_2296_call(), 0)
func_2083_call = mod.get_global_var('func_2083')
func_2085_call = mutated_mod.get_global_var('func_2085')
call_2989 = relay.TupleGetItem(func_2083_call(relay.reshape(call_2975.astype('float32'), [5, 8, 14])), 0)
call_2990 = relay.TupleGetItem(func_2085_call(relay.reshape(call_2975.astype('float32'), [5, 8, 14])), 0)
const_2998 = relay.const([[[-8.640740,3.356018,4.740313,1.497674,-5.834813,-2.164739,-8.808171,4.967168,6.321771,-2.788098,0.704539,7.062079,6.849079,-3.083405],[-5.758448,-1.419337,1.576402,-8.285402,-3.920136,-6.236462,7.404948,7.135896,5.910075,2.590994,1.157904,1.718670,-0.843410,-0.694627],[5.942209,9.275362,-9.121393,8.387027,4.397092,-7.044228,2.239777,-3.559163,4.056300,-3.066158,2.926183,-2.131386,3.786486,3.368415],[-9.907633,0.061376,-7.819788,5.356910,-2.672850,4.138344,-1.215888,-0.782914,-5.396340,-2.741351,-2.946628,-1.133467,8.948992,9.711597],[-0.092842,-3.350350,-1.800978,4.456125,-4.257875,-5.644748,7.689141,-1.864335,7.169915,4.300898,-0.230592,-1.472708,-9.801757,-5.769772],[8.850731,0.343461,-8.114120,-8.410801,7.351174,2.853908,6.660617,4.183451,4.333530,-9.126823,-6.929777,2.487827,-2.895453,6.349449],[-6.882316,-0.902030,0.799724,-4.872316,2.628863,5.564117,-3.436373,9.831037,-1.168463,-0.553832,-0.940170,-5.112938,-2.165956,5.514508],[7.706896,9.426872,-6.521412,4.981313,8.830935,2.957575,5.924336,-1.501469,-8.146545,2.854625,-1.821670,-0.711145,-9.486071,5.451366]],[[-8.389042,7.290241,6.435428,-1.244234,-3.100132,-4.047363,5.910582,8.600114,-8.698186,-3.767263,5.237583,9.403827,6.251473,-2.083727],[-7.511367,-0.302031,5.516123,9.233883,-7.786766,-3.895459,4.078163,4.332139,6.098428,8.355949,-8.644341,-0.955698,5.887463,9.455038],[2.748038,5.360408,9.396600,5.877896,3.420993,2.549144,-3.991046,5.090134,-2.626563,-3.909507,4.971393,8.720751,3.144410,4.758422],[7.353191,9.696138,-9.630420,1.793668,-3.164625,-6.193638,6.175437,1.112069,-1.734040,4.095872,8.551810,-8.750765,-8.960134,-2.304061],[3.779050,-9.431301,-2.896474,4.741767,-1.188987,-5.668627,6.203394,4.034574,0.640469,-4.164349,8.183225,-7.512061,3.236201,9.380406],[0.838077,7.347788,4.630090,1.862416,0.689879,-9.766000,8.679171,-4.154572,-0.455489,4.128206,5.573021,2.471811,-5.503188,3.660903],[-7.306434,9.153059,8.223898,-5.438172,-3.912583,-9.173628,-9.656547,-8.526454,-9.209527,1.065272,-7.573910,-2.129677,-6.483202,-5.194449],[2.832293,8.922246,-7.807295,6.484115,7.139013,-3.905517,-3.940663,-0.796181,9.020025,-8.170366,0.057344,-6.606003,3.720983,3.046049]],[[-7.691245,-5.554907,-3.711579,1.908216,-1.742160,-7.948889,-1.849087,0.896650,1.549384,-4.008304,-1.564477,-7.440423,-2.347759,3.281382],[3.854222,4.869396,-4.252798,-1.199869,8.649931,7.728676,-4.697533,-2.658936,-6.591713,7.467371,5.638657,4.536657,2.665451,7.271867],[-0.637974,5.355143,-0.270299,-9.915835,-8.431834,5.131737,-0.580102,9.001735,-3.717187,-6.489284,3.180090,-6.606220,4.268954,4.071988],[-5.621119,-3.411010,2.969908,-9.416181,-4.222022,9.704675,5.074152,0.982414,7.934556,2.171262,-5.457872,0.742377,7.336997,-1.243638],[0.888149,5.291911,-8.474162,-0.245000,3.920705,5.742941,0.620806,-7.660089,1.820115,4.693621,-8.652751,-3.503278,-2.203602,9.901963],[-2.204339,-2.460746,5.619565,2.956122,5.361492,4.470971,-6.304156,-7.002793,8.884701,9.376454,-5.651849,-5.203552,0.515401,6.537182],[-9.914656,9.700434,-9.455383,-0.650701,-1.087492,-2.125634,7.967737,-3.922885,-3.515277,-9.975161,-6.680753,7.793682,-3.856905,1.395751],[-4.945489,0.722168,9.649479,3.684802,-1.965824,6.651198,8.603054,-8.109766,-2.786750,0.145261,2.337360,-9.225589,5.924815,7.408360]],[[7.783807,9.789575,9.833684,-6.545690,9.382155,4.789125,7.844877,-1.286078,-4.399447,-4.234216,-1.337496,2.422044,3.017046,5.540029],[5.188811,-2.433814,2.966068,8.891126,-7.273904,-6.429508,5.050295,7.998211,-0.526363,-4.894047,-7.400191,6.594976,-2.671944,-0.598220],[0.700579,-2.520175,-5.136812,5.245388,-0.984770,2.617934,6.721789,-8.731151,9.273417,7.806185,-8.810661,-7.474116,-3.408889,8.287365],[-7.476761,-8.969164,6.926500,9.578874,2.420922,6.015162,3.934744,-1.379913,-1.440669,2.528954,-3.998970,-7.053721,-8.429119,8.755473],[-1.594784,7.002820,2.839524,-1.905859,-9.389946,-2.593498,9.344945,4.101227,-4.661331,5.995016,2.339890,-4.868860,6.374208,-1.806272],[0.904676,4.306554,-5.204846,5.077003,-1.565056,-0.507102,2.657097,0.855775,-3.418588,2.444734,-4.419927,-5.781999,1.867142,-5.689555],[9.203342,0.194784,-3.597593,-3.303412,4.602663,-0.602638,-3.829483,5.725558,-1.848222,-5.568862,8.004221,8.494549,-9.926590,6.361917],[1.168478,-5.296859,-8.940200,3.023123,-9.342146,4.103364,2.135753,-4.074692,-4.696788,5.968631,-4.232771,-7.746750,8.345807,8.625576]],[[6.234111,-0.376178,-5.155900,9.942322,-1.919595,-0.655885,-5.030807,-5.362372,6.007775,7.978982,-6.500694,-4.543715,-0.968622,3.591100],[0.205426,5.263730,0.815999,9.219798,4.775921,4.832229,4.752382,-5.993433,5.204041,-2.330376,2.101300,7.486870,-0.701464,-3.502396],[-7.701182,1.455728,0.427364,-5.056483,-3.119333,-0.638913,-8.389718,7.686493,0.462033,5.976591,-3.200126,-7.453934,-4.216422,-0.262686],[2.908038,9.261532,-1.498346,7.887761,-9.154406,-4.672220,9.107285,-6.627594,-0.436373,-6.595142,7.490984,0.638198,7.248983,-0.528025],[5.548327,-8.605420,2.653424,-2.333500,-5.720002,8.385222,2.610805,3.384041,3.758158,-5.673525,2.895731,3.742860,-9.980180,0.897820],[-7.286539,3.221319,-2.766777,2.741890,-7.684870,0.272479,8.036559,7.347050,-8.135708,-6.226595,-4.579135,-4.507544,1.371698,-9.916479],[-0.973539,4.182513,8.087101,-9.315184,-2.016790,-9.304408,6.201905,-3.563154,-6.370044,0.170744,-0.098752,-2.566910,-2.932711,1.075999],[2.302390,5.338024,3.012609,-2.869671,-0.470672,-5.513451,-2.438252,0.955783,-9.408030,8.792934,2.233856,3.422440,-6.980553,-4.360500]]], dtype = "float32")#candidate|2998|(5, 8, 14)|const|float32
bop_2999 = relay.less_equal(call_2975.astype('bool'), relay.reshape(const_2998.astype('bool'), relay.shape_of(call_2975))) # shape=(5, 8, 14)
bop_3002 = relay.less_equal(call_2976.astype('bool'), relay.reshape(const_2998.astype('bool'), relay.shape_of(call_2976))) # shape=(5, 8, 14)
output = relay.Tuple([call_2989,bop_2999,])
output2 = relay.Tuple([call_2990,bop_3002,])
func_3006 = relay.Function([], output)
mod['func_3006'] = func_3006
mod = relay.transform.InferType()(mod)
output = func_3006()
func_3007 = relay.Function([], output)
mutated_mod['func_3007'] = func_3007
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1652_call = mod.get_global_var('func_1652')
func_1654_call = mutated_mod.get_global_var('func_1654')
call_3095 = relay.TupleGetItem(func_1652_call(), 0)
call_3096 = relay.TupleGetItem(func_1654_call(), 0)
uop_3100 = relay.sinh(call_3095.astype('float32')) # shape=(5, 8, 14)
uop_3102 = relay.sinh(call_3096.astype('float32')) # shape=(5, 8, 14)
func_1485_call = mod.get_global_var('func_1485')
func_1487_call = mutated_mod.get_global_var('func_1487')
call_3117 = relay.TupleGetItem(func_1485_call(relay.reshape(uop_3100.astype('float32'), [5, 8, 14])), 0)
call_3118 = relay.TupleGetItem(func_1487_call(relay.reshape(uop_3100.astype('float32'), [5, 8, 14])), 0)
var_3121 = relay.var("var_3121", dtype = "float32", shape = (5, 8, 14))#candidate|3121|(5, 8, 14)|var|float32
bop_3122 = relay.not_equal(uop_3100.astype('bool'), relay.reshape(var_3121.astype('bool'), relay.shape_of(uop_3100))) # shape=(5, 8, 14)
bop_3125 = relay.not_equal(uop_3102.astype('bool'), relay.reshape(var_3121.astype('bool'), relay.shape_of(uop_3102))) # shape=(5, 8, 14)
output = relay.Tuple([call_3117,bop_3122,])
output2 = relay.Tuple([call_3118,bop_3125,])
func_3127 = relay.Function([var_3121,], output)
mod['func_3127'] = func_3127
mod = relay.transform.InferType()(mod)
var_3128 = relay.var("var_3128", dtype = "float32", shape = (5, 8, 14))#candidate|3128|(5, 8, 14)|var|float32
output = func_3127(var_3128)
func_3129 = relay.Function([var_3128], output)
mutated_mod['func_3129'] = func_3129
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1993_call = mod.get_global_var('func_1993')
func_1995_call = mutated_mod.get_global_var('func_1995')
call_3137 = relay.TupleGetItem(func_1993_call(), 5)
call_3138 = relay.TupleGetItem(func_1995_call(), 5)
var_3141 = relay.var("var_3141", dtype = "float32", shape = (9, 7, 16))#candidate|3141|(9, 7, 16)|var|float32
bop_3142 = relay.bitwise_xor(call_3137.astype('int64'), relay.reshape(var_3141.astype('int64'), relay.shape_of(call_3137))) # shape=(9, 7, 16)
bop_3145 = relay.bitwise_xor(call_3138.astype('int64'), relay.reshape(var_3141.astype('int64'), relay.shape_of(call_3138))) # shape=(9, 7, 16)
bop_3155 = relay.logical_xor(call_3137.astype('uint16'), relay.reshape(bop_3142.astype('uint16'), relay.shape_of(call_3137))) # shape=(9, 7, 16)
bop_3158 = relay.logical_xor(call_3138.astype('uint16'), relay.reshape(bop_3145.astype('uint16'), relay.shape_of(call_3138))) # shape=(9, 7, 16)
bop_3163 = relay.add(call_3137.astype('float32'), relay.reshape(var_3141.astype('float32'), relay.shape_of(call_3137))) # shape=(9, 7, 16)
bop_3166 = relay.add(call_3138.astype('float32'), relay.reshape(var_3141.astype('float32'), relay.shape_of(call_3138))) # shape=(9, 7, 16)
bop_3174 = relay.less(call_3137.astype('bool'), relay.reshape(bop_3155.astype('bool'), relay.shape_of(call_3137))) # shape=(9, 7, 16)
bop_3177 = relay.less(call_3138.astype('bool'), relay.reshape(bop_3158.astype('bool'), relay.shape_of(call_3138))) # shape=(9, 7, 16)
output = relay.Tuple([bop_3163,bop_3174,])
output2 = relay.Tuple([bop_3166,bop_3177,])
func_3180 = relay.Function([var_3141,], output)
mod['func_3180'] = func_3180
mod = relay.transform.InferType()(mod)
mutated_mod['func_3180'] = func_3180
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3181 = relay.var("var_3181", dtype = "float32", shape = (9, 7, 16))#candidate|3181|(9, 7, 16)|var|float32
func_3180_call = mutated_mod.get_global_var('func_3180')
call_3182 = func_3180_call(var_3181)
output = call_3182
func_3183 = relay.Function([var_3181], output)
mutated_mod['func_3183'] = func_3183
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3214 = relay.var("var_3214", dtype = "int64", shape = ())#candidate|3214|()|var|int64
var_3215 = relay.var("var_3215", dtype = "int64", shape = (1, 8, 13))#candidate|3215|(1, 8, 13)|var|int64
bop_3216 = relay.less(var_3214.astype('bool'), var_3215.astype('bool')) # shape=(1, 8, 13)
output = relay.Tuple([bop_3216,])
output2 = relay.Tuple([bop_3216,])
func_3225 = relay.Function([var_3214,var_3215,], output)
mod['func_3225'] = func_3225
mod = relay.transform.InferType()(mod)
var_3226 = relay.var("var_3226", dtype = "int64", shape = ())#candidate|3226|()|var|int64
var_3227 = relay.var("var_3227", dtype = "int64", shape = (1, 8, 13))#candidate|3227|(1, 8, 13)|var|int64
output = func_3225(var_3226,var_3227,)
func_3228 = relay.Function([var_3226,var_3227,], output)
mutated_mod['func_3228'] = func_3228
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1089_call = mod.get_global_var('func_1089')
func_1091_call = mutated_mod.get_global_var('func_1091')
call_3242 = relay.TupleGetItem(func_1089_call(), 0)
call_3243 = relay.TupleGetItem(func_1091_call(), 0)
func_1157_call = mod.get_global_var('func_1157')
func_1158_call = mutated_mod.get_global_var('func_1158')
call_3252 = relay.TupleGetItem(func_1157_call(), 0)
call_3253 = relay.TupleGetItem(func_1158_call(), 0)
output = relay.Tuple([call_3242,call_3252,])
output2 = relay.Tuple([call_3243,call_3253,])
func_3254 = relay.Function([], output)
mod['func_3254'] = func_3254
mod = relay.transform.InferType()(mod)
mutated_mod['func_3254'] = func_3254
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3254_call = mutated_mod.get_global_var('func_3254')
call_3255 = func_3254_call()
output = call_3255
func_3256 = relay.Function([], output)
mutated_mod['func_3256'] = func_3256
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1011_call = mod.get_global_var('func_1011')
func_1012_call = mutated_mod.get_global_var('func_1012')
call_3279 = relay.TupleGetItem(func_1011_call(), 0)
call_3280 = relay.TupleGetItem(func_1012_call(), 0)
uop_3293 = relay.log(call_3279.astype('float64')) # shape=(5, 8, 14)
uop_3295 = relay.log(call_3280.astype('float64')) # shape=(5, 8, 14)
output = uop_3293
output2 = uop_3295
func_3303 = relay.Function([], output)
mod['func_3303'] = func_3303
mod = relay.transform.InferType()(mod)
output = func_3303()
func_3304 = relay.Function([], output)
mutated_mod['func_3304'] = func_3304
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2649_call = mod.get_global_var('func_2649')
func_2650_call = mutated_mod.get_global_var('func_2650')
call_3316 = relay.TupleGetItem(func_2649_call(), 0)
call_3317 = relay.TupleGetItem(func_2650_call(), 0)
output = relay.Tuple([call_3316,])
output2 = relay.Tuple([call_3317,])
func_3318 = relay.Function([], output)
mod['func_3318'] = func_3318
mod = relay.transform.InferType()(mod)
mutated_mod['func_3318'] = func_3318
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3318_call = mutated_mod.get_global_var('func_3318')
call_3319 = func_3318_call()
output = call_3319
func_3320 = relay.Function([], output)
mutated_mod['func_3320'] = func_3320
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2966_call = mod.get_global_var('func_2966')
func_2967_call = mutated_mod.get_global_var('func_2967')
call_3403 = func_2966_call()
call_3404 = func_2966_call()
var_3418 = relay.var("var_3418", dtype = "float32", shape = (5, 8, 14))#candidate|3418|(5, 8, 14)|var|float32
bop_3419 = relay.logical_xor(call_3403.astype('int32'), relay.reshape(var_3418.astype('int32'), relay.shape_of(call_3403))) # shape=(5, 8, 14)
bop_3422 = relay.logical_xor(call_3404.astype('int32'), relay.reshape(var_3418.astype('int32'), relay.shape_of(call_3404))) # shape=(5, 8, 14)
func_2355_call = mod.get_global_var('func_2355')
func_2358_call = mutated_mod.get_global_var('func_2358')
call_3452 = relay.TupleGetItem(func_2355_call(relay.reshape(bop_3419.astype('float32'), [5, 8, 14]), relay.reshape(bop_3419.astype('float32'), [5, 8, 14]), ), 1)
call_3453 = relay.TupleGetItem(func_2358_call(relay.reshape(bop_3419.astype('float32'), [5, 8, 14]), relay.reshape(bop_3419.astype('float32'), [5, 8, 14]), ), 1)
output = relay.Tuple([bop_3419,call_3452,])
output2 = relay.Tuple([bop_3422,call_3453,])
func_3455 = relay.Function([var_3418,], output)
mod['func_3455'] = func_3455
mod = relay.transform.InferType()(mod)
var_3456 = relay.var("var_3456", dtype = "float32", shape = (5, 8, 14))#candidate|3456|(5, 8, 14)|var|float32
output = func_3455(var_3456)
func_3457 = relay.Function([var_3456], output)
mutated_mod['func_3457'] = func_3457
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1089_call = mod.get_global_var('func_1089')
func_1091_call = mutated_mod.get_global_var('func_1091')
call_3476 = relay.TupleGetItem(func_1089_call(), 0)
call_3477 = relay.TupleGetItem(func_1091_call(), 0)
func_3318_call = mod.get_global_var('func_3318')
func_3320_call = mutated_mod.get_global_var('func_3320')
call_3536 = relay.TupleGetItem(func_3318_call(), 0)
call_3537 = relay.TupleGetItem(func_3320_call(), 0)
output = relay.Tuple([call_3476,call_3536,])
output2 = relay.Tuple([call_3477,call_3537,])
func_3550 = relay.Function([], output)
mod['func_3550'] = func_3550
mod = relay.transform.InferType()(mod)
output = func_3550()
func_3551 = relay.Function([], output)
mutated_mod['func_3551'] = func_3551
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3550_call = mod.get_global_var('func_3550')
func_3551_call = mutated_mod.get_global_var('func_3551')
call_3552 = relay.TupleGetItem(func_3550_call(), 1)
call_3553 = relay.TupleGetItem(func_3551_call(), 1)
func_2157_call = mod.get_global_var('func_2157')
func_2160_call = mutated_mod.get_global_var('func_2160')
const_3555 = relay.const([9.361852,2.510702,5.365048,-7.140057,5.868699,6.858633,3.188893,-0.394756,7.603523,9.051351,-6.878668,-6.924092,7.373032,-9.274254,-1.236131,-1.446649,7.211501,-6.973653,3.791603,9.179167,-4.267171,-9.130786,-5.507608,-6.130378,9.400717,4.659770,7.209316,7.120175,2.549163,3.217543,2.147315,6.963320,9.125623,-6.740294,-4.015165,1.782063,-2.603869,-7.139349,1.601027,3.501058,-2.784671,-1.195152,-9.794997,-9.135427,7.983120,9.829922,-0.621999,-7.155674,-6.899243,-0.448046,-7.170336,8.308714,2.749175,-8.167460,-8.242747,7.853039,-8.750368,-6.251720,9.252596,-1.781740,-2.031984,0.273070,-7.090165,3.168195,-6.289336,6.530301,8.266138,-0.383807,-5.639446,7.516472,-2.265090,-5.543179,5.542270,8.865846,2.054024,5.043725,1.401904,-6.498997,-3.242806,-5.909644,7.090535,-6.233951,-1.772376,4.554669,8.428963,-6.594595,9.712499,-5.229171,9.713290,0.116704,-4.295705,9.374531,-4.170194,3.185259,3.006629,7.558067,-2.915653,6.716703,-8.901785,6.312551,-9.353734,8.604424,-9.160335,-2.840511,3.085355,2.999263,-4.618503,4.301431,-7.138007,-7.531751,-6.879662,8.003023,7.446626,-0.860536,7.448234,3.831178,9.538507,-2.295963,-2.881545,2.819094,-4.719320,4.356449,7.258627,4.073538,-0.761111,5.193405,-1.657223,4.840626,-2.403585,9.118879,3.243324,6.032594,-7.547340,8.877779,-3.238157,-9.987218,0.669224,7.579099,5.663310,-5.495013,-5.038098,-1.275282,-1.373950,-4.030202,8.794078,2.385846,-4.319383,5.178360,-0.984332,-7.198306,-8.071388,7.673075,-3.893484,-4.425069,-0.091238,5.906105,4.156419,7.933437,7.406292,-2.783892,6.949217,-7.830921,-1.420623,-5.971682,-7.813213,9.496445,-7.166005,-2.542261,1.318071,-3.117249,4.420118,8.727656,1.258467,3.100539,-0.577346,-5.342139,0.033569,-3.594499,-0.530668,-4.582327,7.670176,9.558989,-4.775623,-9.043893,7.143596,8.366524,2.585777,1.765322,4.277163,4.294546,-1.744019,-4.056262,-3.281932,6.838004,7.130226,4.018600,4.685981,-0.228775,-5.066687,5.303031,3.501234,7.340695,3.248503,-7.136390,0.671886,7.709920,5.359282,5.409843,-9.768911,-5.084677,-7.759151,-7.518883,3.907383,5.721832,1.148593,9.213541,-5.698260,6.811518,0.730812,-5.139411,-0.024859,-6.045777,7.407918,0.856960,-8.296982,-4.591039,-5.299101,-8.139703,4.304012,3.101920,-1.130511,-0.978039,1.863873,1.210248,2.910060,1.257126,4.931910,5.580583,6.018539,-4.710123,-0.112008,-7.003223,6.769287,-1.384588,4.815429,0.295737,-8.849127,-5.762145,-5.654911,-7.305877,1.253418,2.901313,3.555092,-3.224779,6.680331,-1.390249,4.040579,-9.381188,8.422764,6.634378,2.890530,7.500158,-3.086111,9.696193,3.427043,-7.203633,-6.548206,6.950308,-2.556346,-6.592314,-1.848582,-0.635680,-1.076984,-1.078152,7.044041,-4.919052,-8.553027,5.558024,8.082899,6.895649,-9.290328,9.777951,6.504205,8.877565,-9.445136,-0.155140,-6.240830,-7.656839,1.021464,1.215353,4.754796,1.714581,1.199137,-5.970993,-6.723552,4.399515,-4.322366,8.195738,5.237426,8.960277,-6.860641,-9.717537,-3.952458,9.913596,3.172871,3.815040,-8.049235,-4.270452,9.322249,-3.285942,6.903402,-2.602326,1.957052,6.405360,-3.001045,-8.772662,-0.989816,-0.947608,-2.416269,8.365463,-9.825530,-7.708852,8.560918,-5.882181,2.664797,-5.746261,-5.032336,-8.783790,-5.868533,-8.685271,0.042424,-8.416659,4.247917,-4.642975,-5.460082,2.519948,-7.924157,-6.269856,-4.624922,-5.240989,6.441528,-1.456208,-6.865148,4.652827,7.392240,7.331922,0.594315,-2.662709,-8.209199,-0.250243,-9.626616,8.211402,6.059710,3.440674,-5.484881,8.236572,-7.263899,1.271492,1.841805,-6.556882,-3.449463,5.929858,8.760966,-5.533686,-2.581284,-2.211980,-1.350362,-9.582300,1.786978,-2.002603,8.824343,-0.187537,7.053787,-3.492028,-5.099167,2.027747,0.014229,-7.136874,9.166639,-3.749192,3.428386,-8.502385,9.682623,1.558931,-1.647769,-4.984709,-1.663486,-9.604969,6.002038,-6.477777,2.350521,-6.205335,-1.462616,5.692573,-1.272791,0.164866,-2.810681,1.207178,-3.520726,0.531492,-8.217626,5.113775,-1.731578,9.525966,-1.625662,3.251187,8.800847,-3.341414,0.642908,3.959828,-2.528216,2.862528,2.979192,-5.818509,-0.302170,-0.535750,0.592434,8.787001,7.898049,7.014738,-5.246784,8.907139,2.987191,3.132693,4.452567,-2.116727,2.870687,9.265577,-0.878808,6.739512,9.952857,-4.388248,8.429363,-9.896666,-6.105444,-9.295290,-2.593977,-6.637636,-9.939525,-2.148839,2.150498,9.620580,6.781502,5.650854,-3.582583,-7.004928,-7.156531,-4.003473,-8.455883,1.167880,9.302586,6.488517,1.902025,0.344812,8.045030,-4.402013,-3.751359,6.747698,-2.350758,8.994639,0.475481,-6.685155,-2.958342,6.920186,6.660376,9.549264,3.400717,-6.374615,7.398417,-3.135364,-9.039539,5.988417,-8.693029,-7.593768,1.043233,9.996466,9.120866,-6.589622,-1.878662,-0.876920,-4.804262,-1.401591,-1.206611,0.760585,-1.324407,-3.697453,-2.171848,0.904561,-8.449421,6.104468,-1.451832,8.273936,-4.026458,7.281831,0.419861,-3.726403,-7.128150,2.885262,5.458376,-0.539949,-8.080927,-3.619211,-3.190975,5.712551,5.124178,-8.926343,8.860519,0.079503,8.624595,2.094166,-8.526811,8.247718,-3.382492,4.655913,5.701486,-4.348235,-4.627696,-4.734297,-8.650216,-5.878500,-6.211635,5.458776,-6.195574,7.124915,-4.157889,-0.709376,-6.293256,0.565200,9.156042,-0.421948,-5.154409,-0.252630,-5.057107,5.412869,3.769521,-9.375891,-5.001516,2.600648,5.737703,-8.566780,1.526697,-7.842260,-5.123393,2.659283,7.634433,-9.266769,-3.857937,-8.621470,0.232527,5.206966,6.818955,-1.903220,-4.480188,-7.375487,-9.362432,8.695499,-7.137228,7.705369,8.089752,-5.898355,5.279908,-4.731736,1.594956,-7.148040,-5.782452,8.960463,8.427386,8.694982,-5.709823,3.211035,-1.852125,-9.462512,8.720267,-4.027478,-9.936499,0.826112,7.164397,0.614994,-5.509990,-7.985216,-0.817991,5.957530,6.766731,7.375185,-3.247684,5.376305,1.148907,4.152680,4.984244,9.785251,-1.791500,8.832155,-6.964022,1.545978,-7.324938,3.576766,8.766667,9.900384,9.439025,-2.627113,3.654828,-6.015600,-9.331511,9.386899,7.281950,7.757426,5.019760,-8.360919,-5.651012,6.312251,3.160617,1.591218,1.090241,8.423693,6.290018,-5.773003,6.003947,2.431540,4.722332,-7.860223,5.677679,-8.764261,-8.450924,-0.484447,-7.662826,-3.629174,-5.763605,6.238321,-4.696281,-9.693186,-4.206699,-6.372835,4.546118,1.612565,4.193143,-2.729040,-6.715317,1.648683,9.596401,3.138590,7.854748,4.985597,6.415920,8.339592,4.496930,0.805780,5.345016,-2.876269,6.490070,1.998437,3.697785,6.797868,-3.103450,-9.757250,-6.253590,-1.170014,8.238250,0.296153,-6.062473,-3.243526,-6.950569,4.458618,-6.868626,-0.137621,-6.453943,-4.302829,6.997121,6.755108,-8.213137,0.404413,6.627752,3.620705,4.960266,4.336632,9.687802,-2.097369,8.253521,4.212192,2.080411,6.178198,7.100210,0.415858,9.986264,3.958532,-3.830325,-3.968486,-7.831837,4.215321,-2.095082,0.272473,-9.321132,8.311179,1.518733,9.555947,-1.690823,-5.913530,-2.640024,4.384264,-9.640625,-8.391972,7.823569,-7.851666,-1.845581,-7.532738,-8.069983,-7.334812,8.428580,-7.217485,9.668100,2.553367,-6.071120,9.222245,8.319073,-8.499763,4.349583,-6.466085,7.283503,-1.332110,-6.829568,-0.039260,-1.949048,-8.375149,-8.250996,7.254486,-8.638906,-6.148055,-4.216482,-3.305074,-1.617069,-9.503809,4.463845,-7.540783,9.847707,-2.111025,3.794950,2.320360,3.048628,2.624531,-3.224746,4.920517,8.236704,-5.184091,-3.977035,5.199876,5.941443,-5.519825,6.844780,-6.143503,-7.751617,-1.685689,6.444785,4.456679,0.990220,6.076436,9.838564,3.119334,-2.682207,3.674347,-7.768464,1.218620,-5.908122,-7.027743,-6.403660,-8.744703,5.487521,9.274556,-3.645602,1.457620,0.167471,-2.775320,-8.676307,-1.223524,0.287968,9.559058,-4.458124,9.004037,-1.797437,-1.146658,-1.633199,8.977783,-4.516669,7.577371,-1.643739,-4.844693,8.248701,-9.872814,-3.723910,-3.351072,-8.863067,8.850673,-8.673706,2.974391,-6.507499,2.816125,7.054865,-0.399477,5.351474,-4.190214,2.409520,-5.072176,5.848621,-1.625021,8.514523,5.935421,-0.008738,-8.168382,-7.181998,8.950901,-7.278653,1.162866,-0.462385,0.508297,4.327090,1.611386,-0.104110,6.979931,-1.568267,-8.188843,-6.586714,-4.180507,-2.873487,7.972574,-5.855468,-7.711505,-6.708862,-2.488532,2.971276,-8.150469,-4.338415,9.930163,4.128809,-8.301605,-9.384936,1.234277,0.305973,4.931221,0.306053,-4.330432,-9.643323,-4.971582,-1.424924,0.459340,-4.113200,4.521438,0.420165,6.655669,9.567723,-5.669569,-4.974428,9.405135,8.897540,-8.351307,0.126722,2.631768,7.223581,-9.736592,-6.932045,9.104470,-8.827620,3.120285,-1.215896,-1.812030,3.225158,2.468142,9.729622,3.361928,-9.321353,1.042949,-1.698636,5.930212,-1.082744,3.670277,7.985065,5.329255,5.669240,5.802717,3.848031,-0.138510,-7.166801,0.267217,-6.423627,3.399938,-9.874392,-7.944872,5.563671,-3.584159,-4.429043,-4.849247,-4.834209,4.087640,6.765882,8.526823,-1.776010,1.384997,-5.267996,-8.832890,1.313505,5.742012,-6.645871,-3.216556,3.130213,0.239893,-8.270251,5.081768,8.445615,7.680355,7.440270,-9.496824,-6.194235,-0.765429,-9.632380,9.431102,-7.898672,0.806954,-5.111462,-0.334916,-3.981683,1.567583,-2.823343,9.272939,1.918699,-2.056527,-6.116765,9.502539,-7.610704,2.772439,-0.456176,-1.836071,3.163638,-6.050890,4.757852,3.581322,-2.405873,-9.166885,2.789925,2.807095,-4.199724,2.604293,-8.213223,3.468888,-8.596685,6.019122,4.668832,-5.407998,9.163299,6.197543,5.354648,-3.569451,7.501253,-5.282158,-6.754626,-3.091894,4.795360,1.610615,-7.824220,-6.936965,6.980346,0.619467,8.628125,4.835941,-1.998512,8.228048,9.961339,-6.722864,6.635211,4.249415,-1.264757,-5.022789,8.714282,8.830750,5.426855,6.703560,0.981109,7.964609,-6.585499,3.288243,4.439723,-6.087115,-4.689652,-2.972935,-4.369421,6.009732,2.175882,-9.632386,-7.434447,-7.815004,-0.518381,-4.199603,-8.482306,-0.794260,6.698614,-1.586067,0.913047,7.142068,1.161872,3.293504,-6.379112,-0.913482,-1.448306,-0.341972,-4.820756,-7.254871,-7.100191,-8.912494,7.190401,9.283526,-9.052562,0.210445,6.690539,3.407751,-4.209649,-8.735801,3.473397,-0.967087,2.486501,-8.328595,6.465575,-3.956814,-4.353702,8.306672,-4.663150,-9.800841,-5.987807,-8.282994,-9.157977,-1.491196,-8.229638,0.164196,0.561127,4.729944,3.169566,-0.873787,6.952166,-6.422004,4.488968,3.343256,0.826450,-3.130369,0.436326,0.627067,-3.473326,9.688387,-4.837709,-5.886102,-4.224337,-7.706555,-6.086656,5.298529,-8.946893,3.742991,3.472599,8.545213,-6.831345,-6.237220,-0.917247,5.844299,2.349417,3.640458,-6.743887,6.148303,7.744968,-4.394158,-7.420370,8.548409,7.402582,-1.991813,8.399122,2.240348,2.923114,-3.720664,3.946073,-2.237213,-5.792378,-7.194982,5.086218,2.274747,-2.907199,-8.117922,8.203929,8.225559,-7.362195,0.687796,6.792806,5.314396,-5.124882,-5.558475,-7.309398,-8.631250,-0.207854,2.306957,-4.641608,-2.738970,-2.720712,6.296729,6.541694,-0.835925,-1.582780,2.927203,7.034125,-2.702410,-6.560591,6.968095,4.956197,4.226338,9.535502,-9.221798,-4.122153,-9.660896,1.460349,-2.048246,-3.313257,6.387070,9.029371,-2.709719,3.224099,-4.548917,8.984063,-8.742572,-6.530690,-1.012822,-4.929477,7.882850,2.039650,4.199732,-7.800317,3.834925,1.242959,5.136222,-2.520833,0.884986,1.441924,0.719927,0.701337,2.292070,-2.293662,0.238002,-1.689972,6.308047,-3.200406,3.966054,-9.950435,7.995091,5.102398,-5.983413,-8.203309,1.221372,-6.937182,-4.048545,0.110233,5.548830,7.411024,-1.711068,1.459286,-3.190207,8.718689,-5.989116,-1.754680,4.826411,5.011540,6.563064,5.607142,3.807361,-7.835561,4.365190,5.568906,5.157080,-1.763483,2.811102,0.266865,4.231135,8.226011,-3.690356,-4.892892,8.564237,-1.760738,7.195735,0.203970,2.463117,3.249850,8.041720,5.565401,1.861052,5.859370,9.852644,-1.161146,4.183728,5.993200,-4.089476,2.841479,0.121058,-6.462555,9.645257,9.282557,9.229806,0.446332,0.605178,6.794985,-6.230442,6.943555,7.929855,3.434808,7.805052,3.320656,-0.584171,0.133495,-4.344640,-0.404164,-9.824668,-2.609746,-4.543873,-1.945175,-4.882906,3.274065,-1.982411,-3.933484,-5.001514,-7.633897,-7.468974,5.290521,-1.461951,-4.348017,2.678145,-7.216997,-4.053645,1.258862,9.995931,6.462531,-8.393067,-6.684189,1.011623,-8.143010,-0.080219,-4.805123,-1.092616,0.525525,-5.365249,9.590392,6.806275,2.535208,-9.736991,-3.706340,4.123907,3.415208,-9.587850,-1.795801,3.083441,-6.683347,-3.454713,-1.629838,-9.377348,1.727410,-2.215689,-0.281203,7.829091,8.718879,6.920700,4.013942,8.622570,-3.348864,-6.451642,-9.009757,3.875152,-3.260555,6.206680,9.555313,-6.260297,-6.663527,6.497304,-1.994960,9.754537,3.597696,-1.367547,5.022812,0.725492,1.570427,-1.991112,7.954149,-1.132079,9.167744,4.794858,-7.394308,-4.638866,-4.978117,5.651736,-1.503862,-5.726094,9.535165,-0.925437,3.673666,-9.020856,8.930541,-0.379796,9.849450,-0.484989,-5.368474,7.228266,-4.582422,4.050977,2.881821,2.429363,2.517851,8.935318,-4.627763,1.877118,-4.302785,4.439146,4.144201,-4.166977,-7.656920,4.844931,-8.259167,2.117029,-5.733193,9.364472,-6.418606,2.900438,3.179964,-2.934629,-2.906156,4.469372,-4.666052,4.705833,-4.810647,-8.168491,-4.581754,3.228949,-0.076111,0.422083,3.346156,-5.020600,-9.834516,-8.021418,3.202147,0.356291,-4.749661,-9.237962,9.198767,-2.583820,2.280111,4.515758,5.499155,8.620398,1.578978,-8.539950,8.693993,-2.126311,7.846845,4.690270,-8.735354,-8.791031,2.828017,9.788068,-0.363632,-7.251231,-9.113567,-0.954118,-6.500329,2.616681,-6.364590,3.567748,-9.805186,7.193263,-2.569347,-5.850766,-5.565256,7.398933,3.744109,-7.062177,9.523680,-0.980622,-2.919777,3.411916,-5.233851,5.866940,-3.660359,-7.240083,-1.269787,-8.114074,8.559767,3.467388,-9.583141,8.064652,9.247622,2.904776,4.758866,-2.510084,-7.404079,-1.364663,-3.305949,-2.878742,-4.822173,-0.518989,-6.520138,8.286626,6.860479,6.834850,-1.415248,-4.624234,8.548926,-4.378193,0.880228,-4.932422,-7.710042,-1.954620,-4.458865,4.185368,1.394935,-4.279719,6.571550,0.412342,-9.576096,-5.386359,-3.038351,8.663143,-0.993184,-7.959762,-7.528347,-5.938592,3.026800,-2.702134,0.817617,1.624057,1.723904,-9.143509,7.044573,3.997809,5.344427,-9.270053,-2.493534,1.120677,6.827709,-6.405767,-0.684704,-9.319173,8.897252,-1.080804,8.791320,-2.602237,4.674528,5.931305,-5.608542,-0.456927,-1.962156,5.182501,-2.802692,7.142139,-3.252137,-9.505958,-5.352481,9.340844,8.765743,-2.980022,9.267650,1.022324,-2.646195,7.743979,4.658715,-4.836085,7.515206,9.518235,-4.113126,9.330703,-9.561208,8.601249,0.110716,0.819703,-3.855502,2.947408,-9.226354,-8.473671,2.646363,4.026343,-2.713364,-2.375967,-6.228630,8.225343,-3.124965,5.625804,-6.853752,-7.625263,7.173968,-8.833214,2.166686,3.042097,-5.171687,-6.085797,-0.715187,3.302223,9.099321,-2.161999,9.589201,-1.049632,-1.171633,-2.139993,9.615507,-6.436559,-5.282278,-9.424089,-3.329045,0.568808,-0.547810,-8.050311,-9.554532,1.435817,6.909890,2.084715,7.223473,1.249826,8.232549,5.199935,-3.383633,-9.307920,-9.919869,-8.608101,-9.538182,-5.566131,-2.193478,6.394807,-8.303224,-5.855998,-4.409480,-9.145487,-5.877558,-6.282324,6.831533,-1.797000,0.996442,4.505213,0.901054,8.502551,4.468421,-3.701432,-9.020294,-1.798781,-7.747529,4.963220,-9.363783,3.710491,5.591098,5.851219,4.999907,-5.231230,-2.845698,-5.577268,2.549985,5.035580,0.618472,-0.345468,-3.208834,-0.094172,-9.810483,4.522650,5.521634,1.917758,-8.349605,-0.543251,-4.116723,4.344983,-9.963794,-7.234394], dtype = "float32")#candidate|3555|(1560,)|const|float32
call_3554 = func_2157_call(relay.reshape(const_3555.astype('float32'), [13, 10, 12]))
call_3556 = func_2157_call(relay.reshape(const_3555.astype('float32'), [13, 10, 12]))
output = relay.Tuple([call_3552,call_3554,const_3555,])
output2 = relay.Tuple([call_3553,call_3556,const_3555,])
func_3562 = relay.Function([], output)
mod['func_3562'] = func_3562
mod = relay.transform.InferType()(mod)
output = func_3562()
func_3563 = relay.Function([], output)
mutated_mod['func_3563'] = func_3563
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3640 = relay.const([[[False,True,True,True,False,False],[True,False,False,False,True,False],[False,False,True,True,True,False],[False,False,True,False,False,True],[True,False,False,False,True,True]],[[False,True,False,True,False,False],[False,True,False,False,True,False],[False,False,False,False,True,True],[False,False,True,False,False,False],[True,True,False,True,True,True]]], dtype = "bool")#candidate|3640|(2, 5, 6)|const|bool
var_3641 = relay.var("var_3641", dtype = "bool", shape = (2, 5, 6))#candidate|3641|(2, 5, 6)|var|bool
bop_3642 = relay.logical_and(const_3640.astype('bool'), relay.reshape(var_3641.astype('bool'), relay.shape_of(const_3640))) # shape=(2, 5, 6)
output = bop_3642
output2 = bop_3642
func_3645 = relay.Function([var_3641,], output)
mod['func_3645'] = func_3645
mod = relay.transform.InferType()(mod)
var_3646 = relay.var("var_3646", dtype = "bool", shape = (2, 5, 6))#candidate|3646|(2, 5, 6)|var|bool
output = func_3645(var_3646)
func_3647 = relay.Function([var_3646], output)
mutated_mod['func_3647'] = func_3647
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1652_call = mod.get_global_var('func_1652')
func_1654_call = mutated_mod.get_global_var('func_1654')
call_3667 = relay.TupleGetItem(func_1652_call(), 0)
call_3668 = relay.TupleGetItem(func_1654_call(), 0)
func_2119_call = mod.get_global_var('func_2119')
func_2121_call = mutated_mod.get_global_var('func_2121')
call_3673 = relay.TupleGetItem(func_2119_call(), 0)
call_3674 = relay.TupleGetItem(func_2121_call(), 0)
func_1254_call = mod.get_global_var('func_1254')
func_1257_call = mutated_mod.get_global_var('func_1257')
var_3679 = relay.var("var_3679", dtype = "float32", shape = (12, 84))#candidate|3679|(12, 84)|var|float32
const_3680 = relay.const([[-8.866142,1.364418,-7.200048,3.308140,9.367601,-7.199586,2.880924,6.594537,-4.207263,8.181835,6.820851,5.943703,-1.744144,-9.182998,7.170660,-0.219714,9.573795,0.727715,8.753509,5.013352,0.781772,0.690880,6.480451,-8.481548,-1.211754,-2.260224,3.154415,8.869854,3.611261,3.206117,-3.306166,-7.060681,8.393945,-6.925334,-5.807708,2.077617,9.706693,1.093102,6.078286,-6.070412,8.912203,9.951105,0.620670,0.667393,0.510095,9.678262,-3.032281,6.165267,0.428443,-1.397048,0.479775,8.413947,-4.447397,4.137528,-2.775722,0.281691,9.883789,2.751282,1.057780,0.678905,7.184548,2.553772,-0.499811,1.551793,-6.232592,4.720086,9.928199,-7.112680,9.730279,0.566004,4.032123,-1.534317,4.718495,8.053857,-2.807739,8.660797,-0.953762,6.748481,-0.116506,-5.552238,-9.551545,-7.749811,2.012214,-9.164516,7.341258,-6.454195,-1.710097,0.885782,-6.905979,9.976329,2.760515,-6.014779,0.292114,-2.378079,-1.621192,-9.868371,-2.786575,-7.193885,9.447854,0.249553,-1.070846,3.729177,-4.861032,9.259213],[-0.952448,0.522207,8.671536,7.878039,5.102397,-3.190355,-5.266131,-3.484310,-2.429520,-4.378095,7.734900,-8.047578,-8.243797,3.326909,-8.040109,5.459132,2.610568,-7.325309,3.935290,2.757213,6.369011,-6.057257,-3.766580,-9.176587,-3.054424,-9.442240,-7.878910,2.983292,-1.113668,9.697553,8.483680,4.466828,9.226108,-1.904121,2.663003,7.580162,6.067312,8.271191,7.216618,-0.746172,-7.281275,2.080004,4.805883,6.112840,8.273256,-8.618627,-9.488531,6.413848,3.477293,-4.022576,1.311092,6.959279,1.522209,-3.455147,0.573967,-9.806021,8.543336,-8.501624,1.887382,8.776294,7.166715,3.797620,6.789794,9.714182,-2.133243,-1.603343,-7.369737,8.676614,-8.402048,-2.484250,-0.998232,9.649266,-7.611449,5.892356,-2.410955,1.602662,-7.059571,8.362118,5.338629,3.936066,-5.349121,-7.901450,2.894090,-8.315861,8.525580,9.936615,-1.641960,-8.787446,3.683527,-1.890625,-4.484067,8.495943,-4.541001,-3.338990,1.612426,-5.952348,5.828460,-7.945470,-2.847485,-0.621017,0.692384,9.984201,8.301477,5.265269],[5.386054,-7.303453,5.611916,3.159090,-6.691597,6.777951,2.399143,5.466034,-3.998459,6.405172,-6.904176,8.080686,-6.870239,2.524453,-6.270044,-5.249682,-0.907886,5.555572,-8.687069,-7.834201,-5.986895,-2.633193,9.447581,7.852813,-8.857760,-4.967760,-3.853193,-5.576645,-8.425327,-7.105412,-4.556928,6.891133,6.516178,-9.600520,8.129572,-2.867609,2.097699,6.598661,-6.270273,-9.793451,7.872200,-7.871371,-5.991224,-8.243300,-2.007265,7.491965,0.262665,-9.217108,3.897484,-1.232918,9.600489,0.637288,-4.928394,7.964101,1.382810,4.517373,-5.423945,-9.474694,-3.366159,0.647573,-1.004244,-2.178510,3.000952,-3.962727,2.686722,7.746789,-9.635253,1.227545,9.978965,8.482961,1.164365,-3.905528,-5.893484,-2.863675,4.913420,-6.997701,0.142395,-5.390303,2.680434,8.829959,4.319204,3.526267,1.140915,-6.278387,9.287867,7.351565,-9.571548,-8.239953,6.428615,-9.219780,-2.011708,-5.655117,7.314703,4.214097,9.176242,0.793960,6.502068,-7.701851,-1.687189,-6.182178,0.561023,-2.029272,9.116273,-2.936449],[4.179752,9.671820,0.806368,1.618982,-9.965183,0.759906,-1.702032,2.104268,3.538866,-6.217422,-0.843958,8.390558,4.720755,-0.174363,-9.544157,9.884124,3.024972,-8.540790,-8.298779,8.908431,-8.870495,-7.223468,7.651775,-4.403959,-3.133578,-9.948635,5.899831,-1.880521,3.234172,9.561658,2.833003,-5.772239,-8.917432,-0.256635,-8.777733,1.415522,-6.280289,5.321106,3.638929,1.107108,8.957809,7.598331,5.509738,4.054384,-6.849006,7.911627,5.828901,-6.831381,-3.719627,-9.712652,-2.921429,0.963462,5.230807,-0.567582,-1.439219,-8.967333,-6.572383,2.218801,9.212119,-9.391205,7.234234,-9.248609,5.497403,-2.808407,3.482584,0.670097,3.749235,-5.707486,8.409748,2.063462,-8.293676,2.174630,2.703264,7.907865,3.688499,-0.611328,4.344854,8.094133,2.281339,-8.794485,-3.099817,-9.373107,-4.977133,8.787871,-1.201745,5.981406,-2.330740,5.606650,2.439779,0.068466,-3.788431,-4.296004,-7.173332,6.634299,9.412916,-5.630994,9.355464,6.573180,9.909666,1.133066,-8.762807,4.032387,-8.342938,-2.617289],[5.418680,-3.607418,-4.767092,9.078101,4.824111,-3.406963,-0.607219,-4.299724,-3.140896,3.264565,-6.805160,6.484359,3.875750,-2.622799,2.111227,-7.526837,-3.389216,-5.065803,4.793893,6.170031,-5.045623,6.744033,-1.451448,-7.025364,-8.485098,-5.027155,7.167147,8.271392,-9.936740,-5.064115,-6.619116,-0.393099,2.320729,7.608196,-9.709901,1.977579,9.125865,3.458735,7.829842,-3.877217,8.927428,-4.772714,-6.853937,-0.407030,0.482293,-9.709110,5.709874,-7.220082,5.693188,2.661662,-6.561999,0.417136,5.552982,4.961580,-8.527386,-1.010740,5.559701,-2.117149,-9.846945,-5.527981,3.793998,-5.182744,-4.238759,-5.121767,-4.214263,5.350888,-1.556288,-6.225662,-2.359036,-6.999215,3.505042,-4.649072,-8.340242,-4.515679,0.969934,-8.105128,1.906507,6.439897,-4.261439,-7.580110,2.436637,0.540161,-9.668780,-1.873839,-1.067732,8.004846,1.300090,-2.641636,3.916494,8.553393,7.071269,5.943733,-5.362870,-0.956385,-2.640523,9.347643,4.002510,-3.719123,7.612825,-9.416385,2.689124,3.870826,4.988647,-9.404452]], dtype = "float64")#candidate|3680|(5, 104)|const|float64
call_3678 = relay.TupleGetItem(func_1254_call(relay.reshape(var_3679.astype('float32'), [9, 7, 16]), relay.reshape(const_3680.astype('float64'), [520,]), ), 3)
call_3681 = relay.TupleGetItem(func_1257_call(relay.reshape(var_3679.astype('float32'), [9, 7, 16]), relay.reshape(const_3680.astype('float64'), [520,]), ), 3)
const_3682 = relay.const([-3.167441,8.297533,6.262298,2.796537,-2.021598,-7.631011,-1.617544,-4.697302,3.667278,-6.053070,-8.572422,-2.309546,-9.801938,7.644029,0.328431,-0.899154,-7.472596,6.792394,6.569262,-9.487873,-9.878420,8.234705,-3.510282,0.649729,9.076124,-4.659470,-0.028135,-3.293792,0.935161,6.696505,-7.750684,-5.345177,9.676839,-9.836054,2.230630,-5.169214,-1.377150,-0.374876,-7.175060,-2.792481,6.751673,3.212762,1.605340,-0.114751,-3.678402,-7.246715,6.926541,2.264645,-0.106833,9.691825,-5.216965,-2.294126,-3.216261,7.085900,-9.811414,-0.344222,6.747964,8.963905,3.483693,6.452944,2.560261,-2.962939,-3.219130,-2.072231,4.331978,-6.041166,6.157080,-7.120562,4.753518,-8.286194,-7.142162,0.220254,1.389646,-2.098348,4.008172,-6.425912,6.093663,8.215790,-0.007525,5.994738,-3.363015,3.127510,-6.952996,1.270354,6.629505,5.737387,-0.914461,2.756378,4.007793,-4.060154,1.832742,0.085380,8.755840,7.700083,-8.178292,0.221759,-9.553149,8.683388,2.531277,7.017753,-4.315407,-7.391315,3.132488,-8.160873,3.345426,9.587438,7.605242,-5.364514,-9.263416,-3.032750,-8.512909,6.014288,-6.715872,2.527313,5.261730,5.487297,6.371184,-6.137012,4.986273,6.628975,2.057851,-3.129420,0.274233,8.901079,-9.795690,4.942691,0.500883,3.906657,1.504018,5.285008,8.050834,-4.366369,-3.663506,-7.027849,-2.324098,0.949930,-6.087422,-3.195982,-4.539752,0.201206,-8.266476,9.284419,9.596210,4.608450,7.755918,6.688077,1.458447,8.784036,-9.235473,-4.677359,5.304406,-0.027584,6.386195,0.559040,-9.645682,-5.310666,2.102747,0.972553,-6.601933,3.878866,4.165324,6.636971,9.230575,2.769094,-0.213809,-1.839942,1.550627,0.261181,8.100294,-4.801098,-6.895262,-0.746268,-8.740024,-5.851184,9.891238,-8.256625,5.811689,5.343401,-4.323846,-1.438025,-1.351295,-5.535531,-9.229967,-5.369881,-2.858859,4.796645,9.793691,1.208951,7.476104,8.350583,3.058482,-8.832831,1.094046,6.737571,-4.677860,-3.444306,-8.782908,-5.924756,-6.674937,2.001793,7.487201,3.430422,-9.969026,-0.589593,5.150348,-9.787309,0.386459,4.075803,9.130392,-4.168082,-5.512366,-3.687715,1.857565,7.104106,-6.431297,-6.930577,-1.362272,-6.058432,-8.916979,-3.821191,-6.164412,6.233520,1.421160,-2.733246,4.155636,-9.454752,0.521863,2.234073,3.592436,8.107479,3.009089,8.971320,6.141346,-3.824034,-9.713276,8.604582,-9.361787,-5.833594,3.142496,-2.151199,6.672698,5.513093,2.779154,8.457431,2.800276,-9.813193,0.768203,-3.114872,-4.771029,-7.315090,-5.098984,5.543083,-6.660639,-9.979249,2.898649,6.217048,-9.379706,4.027417,3.423523,-9.411349,9.142899,3.551290,9.236742,-3.421580,-6.214900,-3.206333,-0.262788,0.200217,-4.917719,7.034807,-0.112353,-0.324924,7.113986,9.079303,7.749510,0.890249,-8.797397,6.334196,6.834416,4.805528,-0.274918,-4.177408,-0.144763,-4.084677,6.349549,-0.700012,-4.572030,-8.332870,-9.620019,-8.548286,-8.680515,8.979285,-2.466357,-8.815870,-0.171056,8.804211,6.300174,3.498774,-4.916639,-6.492779,2.731637,5.956041,-3.902927,7.044446,4.046940,-8.064128,-5.161953,4.653104,-8.030853,-5.299332,0.976917,3.902709,9.954000,-6.954546,-9.170493,4.324784,4.768592,4.800300,0.713518,3.476561,-4.533851,-5.454509,5.286426,0.900085,4.436823,-3.398747,-4.001876,4.214520,-3.588428,0.897707,0.205636,9.727251,7.818475,-6.914578,2.954696,-8.279923,3.220522,-1.971434,-4.533861,-7.562787,2.174098,-0.400273,-8.131510,1.688751,-6.921742,-9.382142,-7.728164,-9.055507,-3.874017,-5.650318,-9.630585,-5.282553,4.869684,-8.632025,-0.452708,4.138905,6.399289,5.026117,2.517668,4.173609,3.756123,6.626906,6.366137,-6.801217,-1.147945,8.609237,1.425953,-4.323312,9.390380,-3.118191,3.563168,7.326390,8.010438,0.503994,-9.293797,-7.892349,-9.015543,0.978896,-4.853059,6.726731,-3.130578,5.191257,-4.579650,-8.031101,6.583242,-6.926945,-4.106397,9.742984,-2.586041,-5.708062,2.029051,4.029300,5.406897,3.795282,-9.014151,-5.498609,-9.410170,-0.645898,-4.458396,-8.450533,5.450750,-8.088387,-2.781171,2.522025,-6.312451,9.820515,1.566169,9.263073,5.170981,-4.419583,-8.303061,-6.938661,-3.586279,0.688969,6.160947,-4.729069,-6.697211,-2.536358,5.172160,-8.140568,-2.110490,0.467518,-4.976844,-2.888685,-0.265743,1.989743,6.694198,9.186050,-7.439415,-5.348666,-0.660254,-6.754477,-3.472185,0.629923,-2.824023,4.728776,-0.832505,-4.436041,-8.134945,-3.783961,7.687294,5.539841,-5.183854,5.786077,5.656048,-0.928478,-8.425899,2.986090,-3.522960,-6.466767,-3.227164,4.522038,7.681179,6.332871,-4.565471,-4.626445,2.274778,-1.280986,-5.060669,-8.406180,-0.386873,4.406208,6.560514,7.961182,0.409156,-4.568967,7.730362,-1.718347,-7.063634,-8.707624,-8.396943,-2.112765,-6.637584,7.557076,-2.229649,0.583135,-4.011989,-9.176229,9.939886,2.521969,3.913386,-4.626554,4.630310,5.372444,-5.888245,-8.350355,-2.265059,-4.448235,-4.088497,2.495387,4.734631,5.147608,0.828653,0.447308,6.788153,-4.753488,-3.641327,0.829253,2.092549,1.247571,9.821949,-9.313126,2.787243,-9.442038,-8.184510,-6.584966,-0.078541,-8.859097,5.460127,-9.145405,-8.911752,-3.573173,8.889305,8.429260,-7.947455,-1.723586,-5.519981,-0.044051,3.949330,3.742038], dtype = "float64")#candidate|3682|(520,)|const|float64
bop_3683 = relay.greater(call_3678.astype('bool'), relay.reshape(const_3682.astype('bool'), relay.shape_of(call_3678))) # shape=(520,)
bop_3686 = relay.greater(call_3681.astype('bool'), relay.reshape(const_3682.astype('bool'), relay.shape_of(call_3681))) # shape=(520,)
output = relay.Tuple([call_3667,call_3673,var_3679,const_3680,bop_3683,])
output2 = relay.Tuple([call_3668,call_3674,var_3679,const_3680,bop_3686,])
func_3689 = relay.Function([var_3679,], output)
mod['func_3689'] = func_3689
mod = relay.transform.InferType()(mod)
mutated_mod['func_3689'] = func_3689
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3690 = relay.var("var_3690", dtype = "float32", shape = (12, 84))#candidate|3690|(12, 84)|var|float32
func_3689_call = mutated_mod.get_global_var('func_3689')
call_3691 = func_3689_call(var_3690)
output = call_3691
func_3692 = relay.Function([var_3690], output)
mutated_mod['func_3692'] = func_3692
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3254_call = mod.get_global_var('func_3254')
func_3256_call = mutated_mod.get_global_var('func_3256')
call_3756 = relay.TupleGetItem(func_3254_call(), 0)
call_3757 = relay.TupleGetItem(func_3256_call(), 0)
output = call_3756
output2 = call_3757
func_3768 = relay.Function([], output)
mod['func_3768'] = func_3768
mod = relay.transform.InferType()(mod)
output = func_3768()
func_3769 = relay.Function([], output)
mutated_mod['func_3769'] = func_3769
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3303_call = mod.get_global_var('func_3303')
func_3304_call = mutated_mod.get_global_var('func_3304')
call_3780 = func_3303_call()
call_3781 = func_3303_call()
output = relay.Tuple([call_3780,])
output2 = relay.Tuple([call_3781,])
func_3796 = relay.Function([], output)
mod['func_3796'] = func_3796
mod = relay.transform.InferType()(mod)
output = func_3796()
func_3797 = relay.Function([], output)
mutated_mod['func_3797'] = func_3797
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2294_call = mod.get_global_var('func_2294')
func_2296_call = mutated_mod.get_global_var('func_2296')
call_3858 = relay.TupleGetItem(func_2294_call(), 0)
call_3859 = relay.TupleGetItem(func_2296_call(), 0)
func_2966_call = mod.get_global_var('func_2966')
func_2967_call = mutated_mod.get_global_var('func_2967')
call_3889 = func_2966_call()
call_3890 = func_2966_call()
func_3796_call = mod.get_global_var('func_3796')
func_3797_call = mutated_mod.get_global_var('func_3797')
call_3901 = relay.TupleGetItem(func_3796_call(), 0)
call_3902 = relay.TupleGetItem(func_3797_call(), 0)
func_2013_call = mod.get_global_var('func_2013')
func_2014_call = mutated_mod.get_global_var('func_2014')
call_3915 = func_2013_call()
call_3916 = func_2013_call()
func_1444_call = mod.get_global_var('func_1444')
func_1447_call = mutated_mod.get_global_var('func_1447')
call_3920 = relay.TupleGetItem(func_1444_call(relay.reshape(call_3889.astype('float32'), [5, 8, 14]), relay.reshape(call_3858.astype('float32'), [5, 8, 14]), ), 3)
call_3921 = relay.TupleGetItem(func_1447_call(relay.reshape(call_3889.astype('float32'), [5, 8, 14]), relay.reshape(call_3858.astype('float32'), [5, 8, 14]), ), 3)
output = relay.Tuple([call_3858,call_3889,call_3901,call_3915,call_3920,])
output2 = relay.Tuple([call_3859,call_3890,call_3902,call_3916,call_3921,])
func_3925 = relay.Function([], output)
mod['func_3925'] = func_3925
mod = relay.transform.InferType()(mod)
output = func_3925()
func_3926 = relay.Function([], output)
mutated_mod['func_3926'] = func_3926
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1929_call = mod.get_global_var('func_1929')
func_1931_call = mutated_mod.get_global_var('func_1931')
call_3929 = func_1929_call()
call_3930 = func_1929_call()
output = relay.Tuple([call_3929,])
output2 = relay.Tuple([call_3930,])
func_3933 = relay.Function([], output)
mod['func_3933'] = func_3933
mod = relay.transform.InferType()(mod)
output = func_3933()
func_3934 = relay.Function([], output)
mutated_mod['func_3934'] = func_3934
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3006_call = mod.get_global_var('func_3006')
func_3007_call = mutated_mod.get_global_var('func_3007')
call_3956 = relay.TupleGetItem(func_3006_call(), 1)
call_3957 = relay.TupleGetItem(func_3007_call(), 1)
func_248_call = mod.get_global_var('func_248')
func_251_call = mutated_mod.get_global_var('func_251')
var_3984 = relay.var("var_3984", dtype = "float64", shape = (130, 4))#candidate|3984|(130, 4)|var|float64
call_3983 = relay.TupleGetItem(func_248_call(relay.reshape(var_3984.astype('float64'), [4, 13, 10])), 0)
call_3985 = relay.TupleGetItem(func_251_call(relay.reshape(var_3984.astype('float64'), [4, 13, 10])), 0)
func_248_call = mod.get_global_var('func_248')
func_251_call = mutated_mod.get_global_var('func_251')
call_3992 = relay.TupleGetItem(func_248_call(relay.reshape(var_3984.astype('float64'), [4, 13, 10])), 0)
call_3993 = relay.TupleGetItem(func_251_call(relay.reshape(var_3984.astype('float64'), [4, 13, 10])), 0)
output = relay.Tuple([call_3956,call_3983,var_3984,call_3992,])
output2 = relay.Tuple([call_3957,call_3985,var_3984,call_3993,])
func_3995 = relay.Function([var_3984,], output)
mod['func_3995'] = func_3995
mod = relay.transform.InferType()(mod)
var_3996 = relay.var("var_3996", dtype = "float64", shape = (130, 4))#candidate|3996|(130, 4)|var|float64
output = func_3995(var_3996)
func_3997 = relay.Function([var_3996], output)
mutated_mod['func_3997'] = func_3997
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2966_call = mod.get_global_var('func_2966')
func_2967_call = mutated_mod.get_global_var('func_2967')
call_4034 = func_2966_call()
call_4035 = func_2966_call()
output = call_4034
output2 = call_4035
func_4036 = relay.Function([], output)
mod['func_4036'] = func_4036
mod = relay.transform.InferType()(mod)
mutated_mod['func_4036'] = func_4036
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4036_call = mutated_mod.get_global_var('func_4036')
call_4037 = func_4036_call()
output = call_4037
func_4038 = relay.Function([], output)
mutated_mod['func_4038'] = func_4038
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1157_call = mod.get_global_var('func_1157')
func_1158_call = mutated_mod.get_global_var('func_1158')
call_4041 = relay.TupleGetItem(func_1157_call(), 0)
call_4042 = relay.TupleGetItem(func_1158_call(), 0)
output = relay.Tuple([call_4041,])
output2 = relay.Tuple([call_4042,])
func_4044 = relay.Function([], output)
mod['func_4044'] = func_4044
mod = relay.transform.InferType()(mod)
mutated_mod['func_4044'] = func_4044
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4044_call = mutated_mod.get_global_var('func_4044')
call_4045 = func_4044_call()
output = call_4045
func_4046 = relay.Function([], output)
mutated_mod['func_4046'] = func_4046
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1011_call = mod.get_global_var('func_1011')
func_1012_call = mutated_mod.get_global_var('func_1012')
call_4052 = relay.TupleGetItem(func_1011_call(), 0)
call_4053 = relay.TupleGetItem(func_1012_call(), 0)
output = call_4052
output2 = call_4053
func_4067 = relay.Function([], output)
mod['func_4067'] = func_4067
mod = relay.transform.InferType()(mod)
output = func_4067()
func_4068 = relay.Function([], output)
mutated_mod['func_4068'] = func_4068
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4245 = relay.var("var_4245", dtype = "uint64", shape = (1, 4, 8))#candidate|4245|(1, 4, 8)|var|uint64
var_4246 = relay.var("var_4246", dtype = "uint64", shape = (9, 4, 8))#candidate|4246|(9, 4, 8)|var|uint64
bop_4247 = relay.multiply(var_4245.astype('uint64'), var_4246.astype('uint64')) # shape=(9, 4, 8)
uop_4250 = relay.log(bop_4247.astype('float64')) # shape=(9, 4, 8)
func_1064_call = mod.get_global_var('func_1064')
func_1065_call = mutated_mod.get_global_var('func_1065')
call_4254 = relay.TupleGetItem(func_1064_call(), 0)
call_4255 = relay.TupleGetItem(func_1065_call(), 0)
output = relay.Tuple([uop_4250,call_4254,])
output2 = relay.Tuple([uop_4250,call_4255,])
func_4259 = relay.Function([var_4245,var_4246,], output)
mod['func_4259'] = func_4259
mod = relay.transform.InferType()(mod)
mutated_mod['func_4259'] = func_4259
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4259_call = mutated_mod.get_global_var('func_4259')
var_4261 = relay.var("var_4261", dtype = "uint64", shape = (1, 4, 8))#candidate|4261|(1, 4, 8)|var|uint64
var_4262 = relay.var("var_4262", dtype = "uint64", shape = (9, 4, 8))#candidate|4262|(9, 4, 8)|var|uint64
call_4260 = func_4259_call(var_4261,var_4262,)
output = call_4260
func_4263 = relay.Function([var_4261,var_4262,], output)
mutated_mod['func_4263'] = func_4263
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4291 = relay.var("var_4291", dtype = "int64", shape = (15, 10, 8))#candidate|4291|(15, 10, 8)|var|int64
var_4292 = relay.var("var_4292", dtype = "int64", shape = (15, 10, 8))#candidate|4292|(15, 10, 8)|var|int64
bop_4293 = relay.right_shift(var_4291.astype('int64'), relay.reshape(var_4292.astype('int64'), relay.shape_of(var_4291))) # shape=(15, 10, 8)
bop_4296 = relay.logical_or(bop_4293.astype('bool'), relay.reshape(var_4292.astype('bool'), relay.shape_of(bop_4293))) # shape=(15, 10, 8)
output = relay.Tuple([bop_4296,])
output2 = relay.Tuple([bop_4296,])
func_4303 = relay.Function([var_4291,var_4292,], output)
mod['func_4303'] = func_4303
mod = relay.transform.InferType()(mod)
mutated_mod['func_4303'] = func_4303
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4303_call = mutated_mod.get_global_var('func_4303')
var_4305 = relay.var("var_4305", dtype = "int64", shape = (15, 10, 8))#candidate|4305|(15, 10, 8)|var|int64
var_4306 = relay.var("var_4306", dtype = "int64", shape = (15, 10, 8))#candidate|4306|(15, 10, 8)|var|int64
call_4304 = func_4303_call(var_4305,var_4306,)
output = call_4304
func_4307 = relay.Function([var_4305,var_4306,], output)
mutated_mod['func_4307'] = func_4307
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1993_call = mod.get_global_var('func_1993')
func_1995_call = mutated_mod.get_global_var('func_1995')
call_4325 = relay.TupleGetItem(func_1993_call(), 0)
call_4326 = relay.TupleGetItem(func_1995_call(), 0)
func_3455_call = mod.get_global_var('func_3455')
func_3457_call = mutated_mod.get_global_var('func_3457')
call_4371 = relay.TupleGetItem(func_3455_call(relay.reshape(call_4325.astype('float32'), [5, 8, 14])), 0)
call_4372 = relay.TupleGetItem(func_3457_call(relay.reshape(call_4325.astype('float32'), [5, 8, 14])), 0)
func_1485_call = mod.get_global_var('func_1485')
func_1487_call = mutated_mod.get_global_var('func_1487')
call_4384 = relay.TupleGetItem(func_1485_call(relay.reshape(call_4371.astype('float32'), [5, 8, 14])), 0)
call_4385 = relay.TupleGetItem(func_1487_call(relay.reshape(call_4371.astype('float32'), [5, 8, 14])), 0)
func_1296_call = mod.get_global_var('func_1296')
func_1299_call = mutated_mod.get_global_var('func_1299')
call_4391 = relay.TupleGetItem(func_1296_call(relay.reshape(call_4384.astype('float32'), [5, 8, 14])), 2)
call_4392 = relay.TupleGetItem(func_1299_call(relay.reshape(call_4384.astype('float32'), [5, 8, 14])), 2)
output = relay.Tuple([call_4325,call_4371,call_4384,call_4391,])
output2 = relay.Tuple([call_4326,call_4372,call_4385,call_4392,])
func_4393 = relay.Function([], output)
mod['func_4393'] = func_4393
mod = relay.transform.InferType()(mod)
mutated_mod['func_4393'] = func_4393
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4393_call = mutated_mod.get_global_var('func_4393')
call_4394 = func_4393_call()
output = call_4394
func_4395 = relay.Function([], output)
mutated_mod['func_4395'] = func_4395
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1089_call = mod.get_global_var('func_1089')
func_1091_call = mutated_mod.get_global_var('func_1091')
call_4424 = relay.TupleGetItem(func_1089_call(), 0)
call_4425 = relay.TupleGetItem(func_1091_call(), 0)
output = relay.Tuple([call_4424,])
output2 = relay.Tuple([call_4425,])
func_4449 = relay.Function([], output)
mod['func_4449'] = func_4449
mod = relay.transform.InferType()(mod)
mutated_mod['func_4449'] = func_4449
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4449_call = mutated_mod.get_global_var('func_4449')
call_4450 = func_4449_call()
output = call_4450
func_4451 = relay.Function([], output)
mutated_mod['func_4451'] = func_4451
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3933_call = mod.get_global_var('func_3933')
func_3934_call = mutated_mod.get_global_var('func_3934')
call_4483 = relay.TupleGetItem(func_3933_call(), 0)
call_4484 = relay.TupleGetItem(func_3934_call(), 0)
output = call_4483
output2 = call_4484
func_4485 = relay.Function([], output)
mod['func_4485'] = func_4485
mod = relay.transform.InferType()(mod)
output = func_4485()
func_4486 = relay.Function([], output)
mutated_mod['func_4486'] = func_4486
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4507 = relay.var("var_4507", dtype = "uint16", shape = (7, 13, 11))#candidate|4507|(7, 13, 11)|var|uint16
var_4508 = relay.var("var_4508", dtype = "uint16", shape = (7, 13, 11))#candidate|4508|(7, 13, 11)|var|uint16
bop_4509 = relay.add(var_4507.astype('uint16'), relay.reshape(var_4508.astype('uint16'), relay.shape_of(var_4507))) # shape=(7, 13, 11)
func_3127_call = mod.get_global_var('func_3127')
func_3129_call = mutated_mod.get_global_var('func_3129')
const_4514 = relay.const([-8.285457,2.893726,-0.771038,4.556631,-4.694185,-4.862300,-4.008046,-4.796634,5.560943,4.157372,-2.867411,4.619441,-4.120124,-1.868439,4.934614,3.463126,-7.966230,1.622867,-4.680153,9.629214,-0.939278,-1.207352,2.513149,-5.991413,-0.643699,9.045005,0.476408,5.399728,-6.761242,6.834570,8.571156,4.298829,2.969404,-9.061084,7.388226,8.074165,-3.121013,-8.616762,-3.524351,-2.207616,-3.229068,-3.390958,-7.911369,-5.269821,2.583933,-6.646479,-5.269823,-9.150978,3.274781,8.050051,-6.249321,-6.557982,-0.921304,-4.020257,3.131964,7.352612,4.943205,1.905172,1.322763,-8.204491,3.765709,0.426796,6.370575,-4.650589,9.470066,0.891576,-9.431721,-6.630068,4.448277,9.226842,0.615768,-5.421731,-4.098038,-1.496229,8.919824,-0.119627,-6.159237,6.360339,7.337669,-7.483381,9.010837,0.975302,7.751415,9.199925,-3.963120,3.624055,2.891044,-1.695789,-4.042275,-8.560266,-1.768775,-0.541498,-4.628126,-0.593105,1.397517,-5.102052,-5.980413,-3.238002,6.696726,-0.154204,7.376801,7.326309,-5.334247,-5.922985,7.261178,-7.138796,-4.463369,-6.501506,-9.553694,-4.230743,1.134680,5.522558,-3.175112,8.180006,3.752953,-6.017134,4.247558,3.983068,0.610882,-1.314361,-0.656591,-1.259095,-3.247016,-0.857294,1.090725,-5.817089,5.790396,4.209884,-6.676728,-9.157315,-5.934456,-7.897031,-5.434320,3.961752,9.113862,-2.853703,7.665791,-2.183962,8.901885,-6.180616,-3.942600,9.814545,-5.146826,0.362991,2.414245,-0.256078,-1.625997,-1.876368,6.292255,2.105234,8.649125,-0.339138,-2.273768,-7.693546,7.208147,8.005853,-2.860369,-3.681161,7.603606,9.670689,4.491573,-8.612702,-4.467170,-9.186503,7.478783,-3.009208,-2.628229,3.585667,-3.114654,-6.286259,-5.963247,9.741341,2.894184,-5.729901,9.690028,2.090332,6.514764,8.130982,-6.405148,2.049791,1.626822,1.792681,8.208914,-6.687084,-8.905724,3.181465,-9.784375,4.298643,-0.466921,-6.390296,8.533277,-6.914496,-7.101979,-5.454910,-3.713933,-0.418815,-4.913440,0.317773,-8.003955,3.146344,-8.342096,7.283550,3.038940,-6.003845,-0.650476,3.405055,3.232022,0.612523,1.128821,-4.961395,7.848556,4.357098,-0.627477,2.946444,1.397366,-4.116501,-9.337322,-0.126895,-1.330909,5.539233,-4.103435,7.720562,3.062880,0.861185,-6.596370,-2.437938,-5.994225,1.751886,-0.766520,2.791197,7.685131,5.622375,8.383359,5.727925,3.952118,2.442723,-5.763199,0.938739,8.466437,-3.878963,-6.667176,8.468518,9.741254,-4.222130,-6.420309,8.595513,3.177168,5.226708,-3.787631,-6.513163,9.827398,4.692546,-9.849392,1.437767,3.169371,-3.110354,-1.511740,-2.746341,-7.171141,5.073310,-8.520487,1.751451,-9.781522,3.926214,0.193020,-7.368218,6.490168,-5.331936,-5.904522,0.186186,-3.791082,5.088268,4.551022,-6.312291,-0.479708,-9.788400,-9.254376,-9.874446,-3.614454,5.317494,-8.440163,1.112696,-9.853926,3.161463,0.319602,-7.599752,-1.706152,0.478904,-7.313482,-5.343491,3.297292,0.745210,-7.250106,-7.078865,3.565149,-8.369642,0.704978,4.899930,-0.281582,-8.050835,8.331555,7.950383,9.331943,-5.352212,-9.180096,-5.290061,1.139491,2.648863,-6.347306,0.147888,9.513335,3.686084,4.286172,-3.071028,7.707293,2.719851,-3.211614,4.549638,5.141764,9.216663,-2.574154,-7.790586,1.394334,2.963173,3.545724,-4.365023,-8.321224,-5.370838,-4.850628,5.240064,4.124453,9.704610,4.774770,1.181688,-8.698354,-2.228255,4.734408,-1.373083,-2.282253,-2.557218,-3.055546,5.808449,-2.850936,-7.661227,-4.375133,-2.154239,9.931711,5.315115,-2.028694,3.933411,2.061043,0.245774,-9.480651,-4.921449,9.763193,2.578864,0.765052,7.023552,-1.941956,-3.872834,0.637263,-3.687855,-2.741573,-6.189860,6.386223,7.828874,7.674983,0.077290,8.465803,6.700063,-1.735370,-9.666359,0.381396,9.631637,-4.252640,-5.342190,-0.397943,-7.626059,5.178943,-8.431607,-6.632240,5.871564,-7.892679,-8.892733,-6.949953,1.513009,-8.599143,-0.981786,4.084429,0.470705,-1.672034,2.468234,-7.629912,6.528845,-2.392760,-5.465486,-6.451366,4.176988,-2.034168,-7.203086,4.242460,3.322418,9.342196,4.403462,1.766762,-5.832654,-3.783416,2.133192,3.695939,-6.282896,-2.402604,1.472846,4.588751,4.807102,-6.570234,-0.075513,2.184319,6.368049,-4.080087,8.343660,5.701612,9.567779,-5.806763,-3.085549,5.453235,5.242984,-6.466187,-0.545378,9.401517,2.554337,8.147788,8.603249,-3.831483,-5.914052,7.843314,-0.996605,8.226933,9.153084,-1.814379,-2.179254,-7.022342,5.292422,-3.009865,-2.376494,-6.781989,5.166535,-0.080088,-8.075727,3.362232,0.752646,3.974634,4.215263,5.959397,-1.379054,-2.495109,7.597678,-3.543814,7.997199,9.291878,0.272052,-4.320130,6.889080,3.131545,3.607837,-5.067913,-7.347816,-8.777742,2.083230,-7.470914,-7.326117,-7.543240,1.152042,-7.158889,2.762684,5.750429,6.366737,8.555641,-8.984342,1.596801,9.652742,-5.676909,4.479923,7.265959,-3.874746,-5.460148,-4.686965,-0.340961,8.398917,3.592484,-1.115162,0.904749,-7.088403,0.111955,-8.890815,-2.284240,-1.536551,4.921077,8.551540,-0.510297,-5.730306,-8.207741,9.705828,-1.039806,-6.255715,5.200179,-0.619199,-3.445405,8.727719,2.612657,-4.673390,8.158604,-0.902591,-5.155981,3.219442,6.755206,7.509364,4.391072,7.631780,-8.168205,2.075546,-8.308873,-7.918270,-3.239643,-5.805745,2.890824,4.790960,-8.990473,5.541385,0.452430,0.169379,-5.007741,5.866190,-8.223008,-1.794488,-7.251094,-3.329406,1.196531,7.889049,8.859119,-4.432548,3.093503,8.829273,5.603689,-0.422253,-6.256235,-0.897635,7.723289,-9.898731,-0.225002,-7.407149,-8.620763,8.319080,6.877589,6.996388,2.437178,-1.204261,3.790588,-7.644614,-7.372600,8.230556], dtype = "float32")#candidate|4514|(560,)|const|float32
call_4513 = relay.TupleGetItem(func_3127_call(relay.reshape(const_4514.astype('float32'), [5, 8, 14])), 1)
call_4515 = relay.TupleGetItem(func_3129_call(relay.reshape(const_4514.astype('float32'), [5, 8, 14])), 1)
const_4530 = relay.const([[[1,-2,-9,8,7,-6,3,-1,-1,-5,-7],[-1,-5,-5,9,7,-3,-8,-1,10,6,6],[-1,4,-8,-4,-6,-5,7,5,1,-5,-2],[-9,-1,1,-4,-5,-6,4,10,8,-2,-4],[-5,2,-3,-10,-1,-10,-7,-10,-9,-3,-7],[-8,6,10,1,6,5,9,6,4,8,4],[6,4,10,-2,-8,-4,8,-2,-8,-6,6],[-2,5,-2,2,8,-9,-3,4,7,-6,6],[-5,-7,-7,-7,-8,-7,-8,8,6,-8,-10],[5,-8,6,3,10,-10,-4,-7,10,-1,10],[6,9,-6,9,8,10,6,2,7,1,8],[-2,6,2,-9,-9,10,8,-5,-2,1,-10],[7,10,3,-1,7,-6,7,2,-2,-4,-9]],[[8,9,8,3,9,-10,-6,-10,-4,2,2],[7,7,7,2,2,-1,-2,-3,6,7,-2],[-1,-1,1,-2,-3,9,10,9,-3,4,6],[-2,2,-2,6,-5,-10,9,-10,-6,-3,10],[2,-7,-4,6,8,-8,8,3,-6,10,-3],[-7,3,5,-10,-1,-6,-5,9,10,-1,-2],[-8,4,1,10,-6,-8,-10,-5,10,3,4],[8,-1,-3,-7,-5,9,-9,-5,6,-5,10],[-7,-8,-1,-5,-10,8,-1,8,-7,-3,2],[5,-10,-9,-5,-4,4,-1,2,-1,9,6],[2,8,-6,-4,-2,6,-1,-6,-3,-1,2],[-3,-8,-9,-4,6,8,5,-4,10,7,-7],[2,7,6,4,9,-4,-4,5,7,-5,-7]],[[7,-7,-9,-7,-5,2,4,-1,5,8,9],[10,1,7,-2,-6,8,-10,-10,-5,-5,8],[-2,8,10,-5,-9,5,6,-7,8,9,-7],[-5,7,-3,-7,-2,1,-6,-7,2,-8,9],[10,-2,9,6,-4,2,-1,6,7,6,-9],[3,-5,-3,3,-9,-9,-3,6,-4,-2,-4],[3,-10,-7,10,-1,1,9,1,7,9,2],[-2,-1,9,-3,6,-2,-6,-7,2,-3,-5],[6,-6,-5,8,-5,6,-9,1,7,-7,8],[-5,-4,-4,-9,-9,5,9,-8,-9,-9,3],[1,7,-3,-8,-10,7,-1,10,8,-6,-5],[-6,2,-8,-2,7,4,3,2,8,6,7],[6,9,7,8,-10,4,10,5,2,-7,-7]],[[4,2,3,-9,5,-8,-9,10,8,4,4],[-6,7,-10,-4,5,-8,10,-4,10,4,4],[4,5,-3,-5,-4,-3,-9,-7,2,1,-10],[-1,-1,8,10,3,5,5,-6,3,3,2],[1,-5,5,4,8,-2,6,-8,-1,10,8],[1,8,-5,4,-3,1,9,-5,-1,-10,-5],[4,-5,-4,-10,2,8,7,-1,5,7,3],[9,-3,-4,-5,1,4,-2,-1,-3,-6,-5],[8,-6,-9,6,1,1,-8,-6,5,10,-3],[10,-7,-1,5,5,-9,6,-4,-1,8,8],[8,-6,-3,-4,1,2,-6,8,-8,-7,-4],[6,-5,-2,10,8,-5,-5,-3,7,-1,-1],[-2,2,-3,-7,-10,-2,2,8,5,-4,-4]],[[-9,7,2,-4,7,-3,-8,-6,3,1,-2],[9,-7,-8,5,9,1,-9,-4,-8,-3,-9],[-9,-9,4,-8,-3,8,1,10,-10,-1,6],[3,-7,10,2,-2,-8,-3,-10,-1,-10,-2],[7,-9,4,-9,10,-8,-3,-8,2,7,-10],[2,-3,-5,-2,-4,-3,-7,2,5,7,10],[6,8,9,-7,8,-1,4,4,4,-6,-2],[4,-10,8,6,7,8,-1,-1,-6,-2,1],[-4,4,4,7,-5,-2,3,2,1,-3,-7],[8,5,-8,-2,2,6,5,8,-8,6,7],[3,1,1,5,-10,-5,-6,1,1,-5,1],[-7,-4,1,-6,-9,10,-2,-6,6,-9,-1],[3,4,-9,-1,1,-9,-2,4,1,-8,3]],[[-9,-9,5,5,5,-1,-9,8,-1,7,-3],[-10,-8,2,9,4,-6,-2,-10,-8,2,4],[10,-1,-2,-8,-9,5,9,-1,-5,-8,-9],[4,7,4,3,-3,3,-1,4,3,-10,-9],[6,-1,5,3,-10,-3,1,6,-7,-7,3],[-7,-9,-10,-9,-2,-9,7,2,9,-9,9],[-2,-3,6,-1,-8,-5,9,10,4,-4,-6],[-10,2,-10,-2,10,8,2,3,-2,-4,-2],[2,-2,3,-3,8,7,1,-1,-10,8,4],[1,-5,-10,10,1,-1,10,10,5,7,8],[-3,2,9,3,-9,-1,-9,-5,-3,1,-1],[10,-6,-1,-10,2,7,-9,3,-2,-8,1],[5,6,-2,2,2,7,10,3,-9,3,1]],[[4,6,10,-10,3,5,-1,-8,4,-6,10],[-1,4,-9,5,3,-4,7,4,3,1,9],[-8,-7,-9,-3,7,-3,1,-1,10,8,-2],[-7,2,-6,-1,7,5,10,-6,-4,-7,5],[-9,-4,8,-4,-7,-9,-5,4,-3,5,-4],[2,10,-5,3,2,-6,-2,10,-7,8,-6],[2,-9,10,2,9,-5,2,-5,-8,8,5],[10,-5,-2,2,6,-9,-10,-8,-4,8,7],[7,-4,9,1,-3,7,8,3,-7,-6,5],[-5,10,-2,-9,8,-1,3,6,1,-6,7],[10,-4,8,-5,-9,10,10,-6,2,-6,-6],[-10,6,-2,-4,6,7,-10,1,-2,6,10],[3,-8,1,6,5,-10,1,-1,10,-6,-9]]], dtype = "uint16")#candidate|4530|(7, 13, 11)|const|uint16
bop_4531 = relay.not_equal(var_4507.astype('bool'), relay.reshape(const_4530.astype('bool'), relay.shape_of(var_4507))) # shape=(7, 13, 11)
output = relay.Tuple([bop_4509,call_4513,const_4514,bop_4531,])
output2 = relay.Tuple([bop_4509,call_4515,const_4514,bop_4531,])
func_4544 = relay.Function([var_4507,var_4508,], output)
mod['func_4544'] = func_4544
mod = relay.transform.InferType()(mod)
var_4545 = relay.var("var_4545", dtype = "uint16", shape = (7, 13, 11))#candidate|4545|(7, 13, 11)|var|uint16
var_4546 = relay.var("var_4546", dtype = "uint16", shape = (7, 13, 11))#candidate|4546|(7, 13, 11)|var|uint16
output = func_4544(var_4545,var_4546,)
func_4547 = relay.Function([var_4545,var_4546,], output)
mutated_mod['func_4547'] = func_4547
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3303_call = mod.get_global_var('func_3303')
func_3304_call = mutated_mod.get_global_var('func_3304')
call_4607 = func_3303_call()
call_4608 = func_3303_call()
output = call_4607
output2 = call_4608
func_4609 = relay.Function([], output)
mod['func_4609'] = func_4609
mod = relay.transform.InferType()(mod)
output = func_4609()
func_4610 = relay.Function([], output)
mutated_mod['func_4610'] = func_4610
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2649_call = mod.get_global_var('func_2649')
func_2650_call = mutated_mod.get_global_var('func_2650')
call_4639 = relay.TupleGetItem(func_2649_call(), 0)
call_4640 = relay.TupleGetItem(func_2650_call(), 0)
func_4067_call = mod.get_global_var('func_4067')
func_4068_call = mutated_mod.get_global_var('func_4068')
call_4655 = func_4067_call()
call_4656 = func_4067_call()
func_3689_call = mod.get_global_var('func_3689')
func_3692_call = mutated_mod.get_global_var('func_3692')
const_4659 = relay.const([-8.368864,2.019656,6.462364,6.584613,8.073881,0.940574,6.738812,-6.002169,-5.978145,-0.928045,3.144275,-8.997670,3.607170,1.287136,9.530155,-1.693356,6.066764,3.670731,9.925074,6.641795,-4.567164,7.827984,-9.841804,-0.455832,-7.154777,-6.887965,5.828236,8.678147,-8.615337,7.814660,2.090315,6.281612,2.412534,9.479140,-7.765585,6.085933,2.989347,-7.603572,-4.732722,8.121141,2.174960,9.739691,-1.530448,8.977791,0.412899,-1.287637,-8.503278,0.168535,8.203509,4.582182,-7.786230,-4.947888,1.904129,5.494851,1.623033,-1.246797,2.624191,1.703377,-1.709076,-0.616118,6.545542,-4.470531,-4.131009,3.612967,-5.947579,7.908592,-2.761506,-9.135164,-0.118890,1.087338,-6.645408,8.768504,9.885456,-6.820210,0.053203,-5.374785,3.758909,8.701103,-0.786339,1.071297,9.655164,9.127667,-8.347019,2.694937,-3.953373,6.600487,-8.070312,-4.416560,0.297208,2.154930,2.166464,-6.724458,-8.528891,-7.828953,-1.482177,1.617296,2.121649,6.377987,-7.129722,-8.597045,-7.461161,-6.631417,-7.767006,-7.728183,9.295329,5.796544,4.026967,7.081493,7.189310,9.050313,-7.554618,6.983496,3.699684,4.102902,6.315607,-1.222350,0.542500,-9.314462,8.217957,-5.404986,-4.143151,0.007199,9.889645,5.546576,9.208061,-7.846054,4.266730,5.443887,6.678255,-3.933269,-2.011916,-6.753174,5.413188,-5.405935,7.978248,9.938681,-6.145064,-0.447159,-5.584067,-9.291665,-0.980039,6.791197,-1.204415,-3.175623,8.458867,-4.823380,-8.527171,-3.603737,9.730266,-2.714899,7.773363,-1.320460,9.266615,7.341931,-3.067641,2.908766,-0.389367,-3.086060,3.099665,-9.428587,8.055617,-7.574121,6.102455,-8.586778,9.240750,-9.453843,-0.852623,-4.269591,2.244029,5.770894,6.447802,-6.955803,3.466698,-6.159885,7.885366,-5.773572,2.429686,-1.537483,2.816183,3.018117,-7.098672,1.748687,-2.806486,-0.836269,9.306074,1.586684,-3.842045,-2.630133,-5.325655,-8.145964,-4.179843,2.267467,2.036523,-6.619941,-8.990503,-3.017447,8.868351,2.660563,8.031524,0.095485,-2.822271,-0.796559,-5.738002,-1.818649,7.385855,4.042670,1.557430,-9.802811,-1.683699,7.731398,-2.767851,6.144180,9.533097,-2.209462,-9.856192,8.617585,-5.864093,6.802843,2.746727,-7.157762,-5.339041,-8.438388,-9.583739,5.947050,6.020857,0.531466,-1.116989,-9.987237,4.819134,-6.970160,-4.513308,-8.897237,0.874147,-9.905118,-1.516691,-7.050772,-8.101787,-0.545934,0.976177,4.392203,2.703591,-3.644494,-1.419366,9.245208,7.758042,9.499901,-3.964470,0.358476,-9.988721,-8.876213,-5.296884,7.729520,9.766836,1.656912,8.508225,7.912700,9.688955,-3.631009,-5.564013,6.619462,-7.877076,-2.026560,6.936863,-7.631440,0.329226,-0.410738,7.513073,-9.097802,3.418253,1.411875,-8.149907,6.679314,0.004844,1.234825,-7.224488,7.217479,-2.590680,7.081438,5.864342,3.579959,-4.452501,-0.765924,5.543591,-7.957423,-8.927543,-4.074883,-7.298805,-1.802507,5.310141,-8.761535,7.289974,-9.051063,2.306627,0.570598,-1.622300,1.694382,-0.941888,-9.601331,-9.371609,-4.482828,4.030776,3.460631,0.792699,6.531978,-2.187369,-2.485555,4.526692,8.842802,-7.802061,-0.010146,5.244579,7.163451,7.026942,9.437482,-3.835302,0.223255,-9.353163,2.391236,-9.727997,0.256426,-3.538708,-3.929812,-2.224369,-9.018997,-9.896263,6.475422,-7.111318,4.167922,7.131136,7.656214,1.059998,6.712023,-2.424704,9.242802,4.756397,3.661346,-8.689260,3.723651,8.933998,7.415400,-2.860637,3.339078,8.168936,8.183349,6.058538,-7.795551,1.908129,1.914826,-9.188117,-7.480258,7.544893,-3.445722,-6.351296,-1.455957,7.222232,1.226948,0.435085,5.988766,-8.879415,7.582024,5.379127,-1.461667,2.230654,-3.847644,-8.723499,6.131777,-3.147034,8.601200,5.047441,-3.704358,6.016328,8.941443,-4.813443,9.475126,8.852087,4.388976,-5.320240,2.564126,9.397265,9.181194,-9.553273,7.036792,-4.209331,9.407659,-1.483901,5.921000,-9.064473,-3.299115,9.028966,8.550284,-8.381661,7.720390,-0.908769,-0.414527,5.049926,6.062497,-8.167677,-3.514227,6.650581,5.764109,-3.293934,9.595777,6.576174,3.548705,8.520820,7.678695,8.382993,-1.808080,1.917062,4.619062,-0.799335,-1.360729,8.614753,-0.141652,6.011554,9.209234,-5.966640,-4.196778,-5.714154,-6.834457,-3.842046,-5.031488,-7.487980,5.512013,9.322695,-4.936067,8.809237,2.356826,-4.337441,6.374659,2.497337,4.257782,9.778777,5.280617,0.420458,1.771864,9.235880,-3.533544,-1.270066,4.726616,-8.870338,2.983441,-4.192760,1.381604,-9.826558,-1.339123,6.397361,8.963128,7.960498,-9.353799,-4.715697,-9.281382,8.940121,-6.362684,-2.120741,-2.955504,6.952722,-0.571506,-2.260921,-1.786562,-4.837802,-3.897439,-0.930019,-0.086418,-3.711549,8.005076,-5.750854,-9.470373,-2.788341,8.179310,-2.334714,7.983224,-6.294276,2.220166,0.727033,4.706140,8.930160,2.759331,-1.368698,9.269355,4.163912,0.228486,5.805989,8.476866,-5.470444,-1.957388,-2.647716,2.539608,-9.947248,9.440591,-1.192508,2.751239,-0.407307,-0.469054,6.339746,2.580422,-4.468322,-8.707814,-1.341543,0.135048,6.206295,3.649668,2.709459,-9.780578,-1.585298,-9.220424,-4.935148,-7.739629,-7.509413,2.204704,-4.332043,-1.700175,-9.646913,-6.344940,0.526993,5.903419,-2.274227,-1.222084,5.595958,5.367371,6.680477,3.931177,1.626675,-9.512838,-2.488683,4.137295,6.455696,7.960497,0.118633,-7.342728,7.420626,6.748702,3.262598,9.018271,-3.814294,-6.926233,-2.759431,4.816348,2.346951,-5.061199,-5.224877,-0.798363,1.903281,8.118161,-3.408490,4.143149,2.980919,5.323384,0.748931,-5.238526,3.066496,5.402637,-1.827167,7.855194,-6.110048,2.564091,-0.553475,-5.159998,1.334412,-0.012596,-9.686003,9.550784,-4.682578,-6.813945,6.013903,9.431928,2.540397,4.448669,3.191491,4.541067,-3.239158,-2.164236,-7.535892,-9.097530,-5.925661,5.204725,2.447143,5.553511,7.320270,8.236826,-3.736039,4.804509,0.425994,5.692440,-5.154867,-0.677334,5.563845,4.155167,-1.466660,9.630586,-4.254988,3.318730,4.183670,1.188456,-1.261017,7.512442,9.619042,-8.458280,1.824944,2.981374,-3.423584,-6.033681,8.450173,2.400774,-8.342105,-3.929225,-4.960137,-5.221054,-3.062954,-1.619059,-9.046232,1.654199,1.805395,-0.300550,6.591812,-9.579886,7.587748,2.475676,-1.494089,-8.479540,5.264258,2.175006,-8.497148,4.929989,3.584262,6.126612,-6.359208,5.340039,-7.274558,-6.807254,8.838957,3.162317,-5.499091,4.558657,-5.870660,9.609174,0.179622,0.168655,-2.030142,-3.741042,-4.388421,6.804516,8.832061,-7.455948,-7.551461,2.126666,4.924436,-6.287456,-0.595294,-4.642563,-6.209746,-7.615411,-8.225373,7.947105,6.018129,-2.720034,-6.866103,-9.143513,-9.949213,0.375754,4.196993,3.256436,-2.112477,-9.336156,3.371153,1.870249,-7.073865,6.403505,2.566664,7.230361,5.846905,-8.052701,8.268023,2.177773,-2.415186,-4.600358,3.940227,-7.911418,-5.790356,-2.272134,-1.017126,2.744988,-6.674378,9.381686,2.157705,-4.017434,2.775119,-6.953901,8.735037,-0.646951,8.318745,8.796165,-4.902947,-9.399722,4.655737,9.501767,-5.011087,-0.943660,0.312093,-0.212625,0.060259,6.245334,5.294820,1.067602,6.356350,-4.156285,7.272198,-4.586942,-1.544766,-7.764500,0.162926,2.273082,-1.568756,-5.707786,1.271272,-3.037620,1.462027,5.077087,-7.613383,0.380674,5.307760,-4.603697,-8.461609,-2.222987,6.852716,-1.247614,-9.688241,-0.311460,5.859485,2.699729,0.334692,1.996817,4.322602,6.273779,-4.005938,-0.092052,0.700829,-5.118361,4.496328,-1.904849,7.977896,9.562219,-7.181159,-1.016998,9.835928,-6.316969,8.136935,8.197680,9.646613,-7.895874,-6.741545,0.818296,2.516577,6.847298,-8.591411,3.697970,-4.372151,-4.505621,-9.022656,-8.109903,-2.848552,-3.011873,5.511910,-5.070545,6.383905,-3.637416,6.102084,1.747309,7.425452,7.980090,-3.022512,3.679146,-4.496834,3.776309,-4.401821,-1.077585,-1.488412,-0.736492,-6.846500,-1.350974,-4.053097,6.236949,-7.443949,-3.840873,2.352896,-1.740754,1.748770,-1.193454,9.141775,-7.627954,-1.876940,-4.276733,-7.557285,-7.823021,3.445195,-7.585788,0.372710,-3.121214,-2.410877,9.982931,-2.072569,1.225580,6.436396,3.245308,0.183429,-9.169094,-0.222047,-5.214051,4.815902,-0.678774,-5.113293,-9.094644,-8.156461,3.373914,-1.213438,2.763060,-7.730345,-2.241850,-8.757432,-4.656176,5.861151,5.998150,6.365004,-1.363894,-8.529503,-6.177526,0.379296,-1.634786,0.476261,-9.758198,-6.962729,-2.936332,-4.853577,-0.710247,4.516147,-4.761618,9.291661,-5.929388,-7.025991,-4.690095,9.614858,8.577080,8.397481,1.872949,7.253936,-5.631140,0.804103,2.025494,6.063228,-2.573351,-2.692994,-2.002539,7.317475,2.708006,1.891067,-2.880676,-5.999200,-9.133666,-8.064333,-5.356304,4.983268,7.869236,1.693243,2.249845,6.088573,6.742831,-1.515300,1.757755,1.708816,4.205806,-5.318518,8.288777,9.628269,5.246498,2.113898,-2.598607,-5.631982,3.016160,-5.865275,3.253262,3.295862,4.816540,-0.270651,7.768237,5.686934,-3.615023,-8.790878,-3.206715,2.899083,2.751803,6.360200,-2.603999,-5.840647,-2.496031,-1.005190,-8.620259,-8.510193,8.119966,-6.955093,-1.553037,-1.731762,-5.886617,4.435235,-7.606863,-6.104678,4.537721,1.381748,7.821688,-0.234234,-9.625723,4.561438,-5.797580,7.214762,-5.527704,-0.533345,2.754467,-0.903435,3.889009,4.314346,-1.379866,-6.393237,6.650765,7.490973,4.571725,-6.409843,-0.887500,-0.656280,-4.028257,0.333692,6.154231,7.144103,-2.911744,-0.461163,0.132129,6.352315,8.379428,-9.639259,-0.613279,-4.008679,8.891004,2.938357,-8.956415,-2.356004,7.721720,-1.860203,6.337367,-1.872306,2.081553,3.061478,-8.626976,-1.530978,-3.936274,-7.690679,7.677550,-9.000252,-6.559476,-8.974050,1.762345,9.284988,-5.482156,-7.806648,8.347207,9.439907,0.721744,-3.063220,-0.854987,-9.381652,4.189668,2.256812,9.807431,1.766242,3.207615,-1.449103,-9.905707,-2.495251,9.899959,-4.316983,0.491647,1.454574,-3.063149,-4.102701,8.463457,-6.604661,0.471344,2.584854,4.419145,-3.763006,-5.530069,-9.807515,-6.697540,-1.677674,7.778766,9.726366,-6.585826,1.015886,-5.219949,7.161871,-4.956051,-3.820813,7.376030,-2.028978,-4.959416,-0.739731,-9.347668,8.729934,0.719437,-9.018542,-8.317045], dtype = "float32")#candidate|4659|(1008,)|const|float32
call_4658 = relay.TupleGetItem(func_3689_call(relay.reshape(const_4659.astype('float32'), [12, 84])), 4)
call_4660 = relay.TupleGetItem(func_3692_call(relay.reshape(const_4659.astype('float32'), [12, 84])), 4)
func_2554_call = mod.get_global_var('func_2554')
func_2555_call = mutated_mod.get_global_var('func_2555')
call_4663 = relay.TupleGetItem(func_2554_call(), 0)
call_4664 = relay.TupleGetItem(func_2555_call(), 0)
func_1191_call = mod.get_global_var('func_1191')
func_1193_call = mutated_mod.get_global_var('func_1193')
call_4696 = func_1191_call(relay.reshape(call_4663.astype('float32'), [5, 8, 14]))
call_4697 = func_1191_call(relay.reshape(call_4663.astype('float32'), [5, 8, 14]))
func_3645_call = mod.get_global_var('func_3645')
func_3647_call = mutated_mod.get_global_var('func_3647')
const_4701 = relay.const([False,True,False,False,False,True,True,False,True,True,False,False,False,True,False,True,False,False,False,True,False,False,False,False,False,False,False,False,False,False,False,False,True,False,False,False,True,False,False,False,True,False,True,True,True,True,True,True,True,True,False,True,True,True,True,False,True,True,False,True], dtype = "bool")#candidate|4701|(60,)|const|bool
call_4700 = func_3645_call(relay.reshape(const_4701.astype('bool'), [2, 5, 6]))
call_4702 = func_3645_call(relay.reshape(const_4701.astype('bool'), [2, 5, 6]))
output = relay.Tuple([call_4639,call_4655,call_4658,const_4659,call_4663,call_4696,call_4700,const_4701,])
output2 = relay.Tuple([call_4640,call_4656,call_4660,const_4659,call_4664,call_4697,call_4702,const_4701,])
func_4703 = relay.Function([], output)
mod['func_4703'] = func_4703
mod = relay.transform.InferType()(mod)
mutated_mod['func_4703'] = func_4703
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4703_call = mutated_mod.get_global_var('func_4703')
call_4704 = func_4703_call()
output = call_4704
func_4705 = relay.Function([], output)
mutated_mod['func_4705'] = func_4705
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3768_call = mod.get_global_var('func_3768')
func_3769_call = mutated_mod.get_global_var('func_3769')
call_4714 = func_3768_call()
call_4715 = func_3768_call()
output = relay.Tuple([call_4714,])
output2 = relay.Tuple([call_4715,])
func_4716 = relay.Function([], output)
mod['func_4716'] = func_4716
mod = relay.transform.InferType()(mod)
output = func_4716()
func_4717 = relay.Function([], output)
mutated_mod['func_4717'] = func_4717
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4716_call = mod.get_global_var('func_4716')
func_4717_call = mutated_mod.get_global_var('func_4717')
call_4774 = relay.TupleGetItem(func_4716_call(), 0)
call_4775 = relay.TupleGetItem(func_4717_call(), 0)
func_3127_call = mod.get_global_var('func_3127')
func_3129_call = mutated_mod.get_global_var('func_3129')
call_4784 = relay.TupleGetItem(func_3127_call(relay.reshape(call_4774.astype('float32'), [5, 8, 14])), 0)
call_4785 = relay.TupleGetItem(func_3129_call(relay.reshape(call_4774.astype('float32'), [5, 8, 14])), 0)
func_1652_call = mod.get_global_var('func_1652')
func_1654_call = mutated_mod.get_global_var('func_1654')
call_4786 = relay.TupleGetItem(func_1652_call(), 0)
call_4787 = relay.TupleGetItem(func_1654_call(), 0)
func_4609_call = mod.get_global_var('func_4609')
func_4610_call = mutated_mod.get_global_var('func_4610')
call_4799 = func_4609_call()
call_4800 = func_4609_call()
output = relay.Tuple([call_4774,call_4784,call_4786,call_4799,])
output2 = relay.Tuple([call_4775,call_4785,call_4787,call_4800,])
func_4803 = relay.Function([], output)
mod['func_4803'] = func_4803
mod = relay.transform.InferType()(mod)
output = func_4803()
func_4804 = relay.Function([], output)
mutated_mod['func_4804'] = func_4804
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1618_call = mod.get_global_var('func_1618')
func_1619_call = mutated_mod.get_global_var('func_1619')
call_4848 = relay.TupleGetItem(func_1618_call(), 0)
call_4849 = relay.TupleGetItem(func_1619_call(), 0)
func_1011_call = mod.get_global_var('func_1011')
func_1012_call = mutated_mod.get_global_var('func_1012')
call_4850 = relay.TupleGetItem(func_1011_call(), 0)
call_4851 = relay.TupleGetItem(func_1012_call(), 0)
func_3689_call = mod.get_global_var('func_3689')
func_3692_call = mutated_mod.get_global_var('func_3692')
const_4854 = relay.const([9.721455,-7.041789,0.621213,-5.445133,-4.333159,-9.665476,3.904330,7.557405,5.418520,-8.881818,3.464213,3.851648,-7.609632,5.340064,-6.836095,-9.120232,6.100789,-8.213240,-4.617743,-9.094891,1.617213,-7.290494,5.923881,5.558088,-8.965786,7.923472,-2.854466,3.794369,-1.005439,-4.584783,-8.198341,-7.967320,6.522743,-2.536259,-3.822895,6.256153,-8.009692,-4.196254,5.644780,-2.535716,-1.325090,8.577239,-8.198219,1.572153,5.007144,3.343369,-2.711771,7.490021,-5.195621,2.616590,2.027748,-9.205783,2.212348,5.380000,1.566842,-4.368518,6.248840,-4.962193,-2.504994,6.976924,-1.712434,4.379182,-1.898202,-9.423959,0.694271,4.165832,-5.499342,-1.617554,8.199466,-7.637750,2.242682,-5.881831,-9.688972,-0.348562,-3.894094,3.606804,-2.931800,-1.907476,4.989417,-4.887954,-7.999768,2.050151,1.472011,-8.909748,-2.419975,6.626282,8.704161,-5.908212,3.082454,-8.043805,-5.539374,-7.319814,4.158296,-6.274796,7.881855,5.463776,-2.827420,2.417580,-5.920969,-0.335293,-0.423791,-7.467794,7.535908,-1.485462,3.240285,9.430784,-8.556163,-4.033134,-1.648288,-8.887226,7.113758,5.918733,6.171040,-3.501615,8.187761,-8.902525,-4.270886,1.285417,2.292510,-7.121753,6.502390,8.517207,6.765176,6.485637,-1.682734,-2.032240,6.791989,0.513103,-9.518696,-0.946315,7.995037,7.585383,0.647800,1.525305,-0.770812,0.190189,1.517155,6.051857,-1.454621,-6.807487,2.464023,7.167711,0.282252,2.983325,-2.727361,9.422810,-1.887366,6.026843,5.992218,-1.277348,3.464797,9.145780,-6.252169,9.548940,9.800333,3.092149,-5.159528,0.865632,-4.318954,9.214309,-2.066750,-8.795410,-9.124863,-7.435636,-5.314254,3.522241,-2.985713,9.232749,-5.165718,-6.419797,-4.859983,-7.991723,-5.060696,-2.161620,-0.767856,4.461659,-0.880568,9.004775,6.914923,0.623937,-8.768008,9.102048,5.093369,-6.849165,-5.883052,-8.009065,-5.953696,8.070524,-3.049686,5.019355,-2.104455,-0.808308,-8.032800,5.106767,1.516767,-4.514811,1.397035,3.205544,-8.550882,-4.200233,-3.562154,3.733909,8.612222,8.161616,2.083246,-2.179268,0.174351,-4.428888,-6.357318,9.841817,-1.586388,-6.470690,-7.275222,8.165807,4.214260,1.564198,-7.837120,-0.949770,0.235550,3.446745,7.850251,-0.255235,-8.425938,-1.332583,-1.357844,4.865603,6.875980,2.965787,3.851951,-4.009344,-0.972266,-2.995812,0.963193,1.955122,-2.765122,3.812581,-6.938816,-3.473708,-3.321352,-6.783584,-6.592069,-1.770490,5.449123,7.235637,-8.675071,0.708211,4.465382,1.382523,-3.526813,-5.410793,2.386951,-8.640953,5.912213,3.436792,-0.220836,5.880946,4.775948,-7.881699,4.471361,7.290637,-8.711105,-5.693566,-7.910444,-4.707460,-8.607546,0.349729,-2.347113,-0.490951,-7.551195,6.178588,0.955806,7.696006,-4.880403,4.322039,-3.640846,6.012082,3.737744,-0.161854,4.407653,-0.549228,0.736728,-3.170200,-2.568233,-2.372654,-8.470009,4.379215,-7.892487,-7.071938,-0.940435,-5.892829,-7.852411,7.594682,9.797597,5.366809,-4.726081,9.626009,6.058550,1.176089,-8.472623,-2.868154,-8.423543,-8.662793,-1.877781,0.253253,-0.665759,8.188577,-7.313630,-9.805829,3.228239,-6.285356,2.851093,7.836634,2.234675,-0.359779,-7.774239,-3.428182,-4.690266,5.291034,7.332835,-2.535598,-5.079301,-5.669689,-5.168514,9.182957,-9.944123,-1.131639,4.625043,-3.469398,-5.654396,-7.481224,6.104420,7.996642,8.078034,4.106836,-2.269787,-1.870789,6.529792,0.885670,1.293564,7.508085,-6.099321,7.166019,-8.455542,4.150339,0.910776,4.404408,-2.515547,-6.421186,-7.156009,5.171354,3.620138,1.831249,-2.505653,8.019619,1.926678,-5.071517,-6.457754,5.854083,7.159917,9.748316,-5.555658,-0.213057,-0.632737,-3.992986,-1.619860,2.279820,0.719829,-5.174041,6.694013,1.077952,9.310707,-1.956450,-3.743297,-8.454996,-5.721288,-2.793963,-9.132805,-0.185155,3.564088,8.132663,-0.702889,-5.617011,-3.802826,3.979643,-9.505846,-8.976959,-8.996983,3.597707,7.392770,2.876899,2.332417,-4.624628,-6.067673,-1.353747,-0.680279,6.288050,-2.697844,-0.487597,-6.583909,-9.933578,6.182306,-5.341391,-2.135867,-6.429487,9.669316,3.498767,9.933366,5.115941,-0.209730,9.424942,1.588524,1.258534,-6.155134,-8.159353,-4.848847,2.871006,-6.691531,8.098836,9.998937,-5.001238,3.151827,-0.517006,9.303597,-3.305360,7.310580,-2.236356,-7.339032,7.772858,-1.360911,-2.519288,-4.306065,-2.122809,3.802423,6.840333,4.085283,-5.142066,-8.929297,3.228710,-8.509719,9.245419,5.023298,-6.464078,-8.335483,8.388144,-4.995457,6.110885,8.570281,2.396880,0.877180,-1.042626,-8.072038,-3.419543,1.390237,-0.485405,8.075155,6.503761,-3.151193,1.666951,2.466247,5.153989,-2.461694,8.528539,-6.874470,-9.148635,1.192464,-5.349868,2.226755,-5.911781,-8.093240,-9.741341,5.345387,-4.395733,-1.819738,-5.197674,-3.080330,2.922312,-3.349517,1.109452,2.719311,-4.583739,-8.790820,-5.864315,4.338245,-1.429582,1.353941,-0.989209,-1.553874,-5.090437,-1.475746,0.076109,-3.499306,4.053412,8.505395,6.003415,-3.650230,6.465335,-8.558108,4.349087,0.284282,2.440633,-2.599710,2.745371,4.695498,0.357352,-4.397544,-7.847131,8.534011,3.068696,-0.965178,2.152185,-2.068175,7.167674,-8.685084,3.989537,-3.511324,3.583962,-3.564051,-6.970000,-2.325897,9.243320,-6.343153,-6.101420,3.964390,-4.259959,-7.284867,-8.514819,-8.665034,-1.597678,-2.583437,-5.954070,-9.371862,-5.159560,-7.434882,-6.172911,-4.150617,7.967098,-6.492347,0.792459,2.731291,8.104386,6.662761,0.397680,-5.401440,1.837145,3.285553,6.006648,0.167438,-2.166987,-4.436760,-4.709396,-6.759531,8.775581,2.695196,-0.788799,-4.850636,8.829221,3.627182,-4.576654,-8.213941,9.720019,4.902944,2.638569,-9.325029,4.257347,7.353882,6.793996,1.876922,-8.758041,6.155612,-5.596888,-9.175649,-2.496712,-8.589858,9.173416,-0.247144,-1.608926,-0.785558,-5.299056,1.329994,6.019752,3.090123,-9.835853,-4.052881,-5.748397,8.820881,2.552906,-5.220378,9.881417,-8.676531,3.122622,3.147355,7.516266,8.313323,-3.702999,4.944384,6.846316,5.690876,4.429696,-3.539077,7.440601,-4.599563,-8.739754,-0.842261,3.673184,-1.455298,3.644934,-3.477280,2.963490,-5.913177,-3.554256,-4.795636,7.435252,7.363016,5.008023,-1.033656,3.114291,4.967040,9.705318,-7.681609,3.331707,4.612226,-3.251616,3.008501,1.104962,-0.947278,3.104815,-3.668951,-5.508355,9.411357,8.056707,-6.655420,5.384577,-1.120854,-3.865973,8.648303,-9.294059,-9.791610,7.425926,-0.051084,-3.727979,-1.989057,0.268639,-5.909004,6.807322,5.104411,0.048953,6.002237,-1.242353,3.167939,-1.617482,-5.681588,6.926135,-8.924874,-8.326627,4.427878,4.913941,-4.770053,-2.737381,-6.642738,-9.162453,4.164128,7.655833,-1.451864,-3.957227,-2.191577,4.438278,7.163324,-5.561661,5.528039,9.733140,6.779563,-2.506352,3.877238,-3.721182,-3.030707,-3.264567,-6.241226,4.686768,9.129832,-7.512578,-2.564042,-8.072689,-1.277505,2.854063,6.147135,-5.610940,1.778497,-2.358571,-2.021156,-5.465707,7.933937,-0.503909,0.448747,0.246652,4.783372,-5.022083,8.508062,-4.437655,1.812495,2.364234,-9.198712,0.761873,-7.588024,-3.036244,-9.118067,-9.729989,2.579021,3.817455,-9.250034,8.364268,-3.876261,7.417031,-8.294743,3.727172,-9.761314,-0.047031,0.697028,-4.214574,0.738944,-2.833494,-5.866157,-6.844804,8.477204,-0.792651,-0.433535,3.679603,4.953351,-2.413185,-6.527322,-6.041318,-5.485354,3.425070,-4.129532,3.871572,8.395012,-0.992777,-5.557209,8.042718,-1.190147,1.543324,-5.563849,-4.051619,-8.794336,3.261180,-6.245834,6.149172,3.013935,-9.218855,-7.869792,3.384805,1.121403,6.872986,-2.061009,3.408329,-2.463351,3.733419,-1.848205,3.715564,-8.650432,2.603608,-8.417894,1.582670,-0.130416,9.300712,-5.099109,-9.049735,-2.834218,1.066225,-6.203103,-4.441042,-5.373444,3.950063,5.573463,8.196659,-8.783744,-8.397620,8.084176,-4.030894,-7.752111,-9.201929,-6.462854,-1.024232,2.512299,-0.228154,4.464084,-4.867682,-4.611974,-4.506726,-6.956034,-1.599369,-3.253715,8.554111,-1.762338,5.997805,-1.006040,4.178795,-6.465801,1.544520,-4.396586,-0.851759,-1.759913,5.850998,-9.723142,-7.846056,6.933132,5.941055,-0.923365,9.401247,-7.985743,7.974721,-6.753186,-1.608952,-8.513100,-8.734030,4.306404,-4.395696,-1.676459,-9.369872,9.719867,9.847189,0.483887,1.612159,-6.304122,0.530119,7.452830,3.190038,5.732045,9.289808,3.842753,-0.349850,-8.729276,6.570732,-8.869804,8.895919,-8.981199,-6.814190,-7.140018,8.462049,-5.671939,3.562887,0.485854,-1.972475,-4.294137,1.000612,0.502928,-1.442977,-2.853346,-3.583945,-9.802918,7.886679,5.243938,-2.067354,6.476359,-5.751816,-7.859520,5.080893,-8.818236,1.636694,9.685965,-6.192446,-1.929269,-4.903342,-1.021269,-2.978271,4.002610,-3.103356,5.895276,-5.374326,-5.816315,8.661969,-8.336017,3.088454,-8.850411,-8.189856,9.365009,-5.314264,8.695052,-8.737211,-5.111516,-8.818546,-1.585090,-3.800154,-0.691845,-7.936779,2.802838,0.015984,8.924142,-7.464642,0.236740,8.580901,6.273328,3.471645,5.476973,7.339626,-3.644699,1.892777,-9.924546,-8.342535,-0.132116,5.396450,-4.243499,8.723538,8.784455,9.901500,-1.496027,6.134260,7.969041,4.058528,7.410026,-3.853034,-9.809873,-8.977701,5.766916,5.113941,-6.299878,2.070149,-5.969425,-9.058961,-2.318074,-5.182467,-1.903452,-6.921858,-4.111278,-0.173369,-4.523325,7.330957,-5.655087,9.819465,8.329914,8.411106,-3.648810,-7.042546,-2.670826,-0.210536,5.900147,4.204401,3.162455,2.442596,3.781558,8.507805,-1.005843,6.609891,-6.712768,-4.621547,9.690649,7.374821,-1.266767,-9.050105,-7.773600,6.635093,-1.496608,-6.443899,-7.824664,4.311752,9.219184,-8.079455,-5.264333,8.721139,-2.200431,-2.961934,0.141737,1.784345,9.656059,-6.791698,2.537948,1.361471,3.501063,3.230387,6.681844,3.562960,4.466828,-5.174380,7.018194,-7.538372,6.632165,-7.925850,7.394814,-6.554167,9.643717,-5.841385,-4.169448,-5.926962,5.457947,-7.687343,6.848899,-6.183046,4.080833,-6.756838,-4.870925,-9.184418,9.525626,-4.276971,8.934060,0.047410,-5.052432,9.655397,-0.219093,-2.774459,3.427149,-1.620020,-4.453363,8.251733,-4.076402,7.923085,-0.300626,-2.150098,-9.191527,-1.394892], dtype = "float32")#candidate|4854|(1008,)|const|float32
call_4853 = relay.TupleGetItem(func_3689_call(relay.reshape(const_4854.astype('float32'), [12, 84])), 3)
call_4855 = relay.TupleGetItem(func_3692_call(relay.reshape(const_4854.astype('float32'), [12, 84])), 3)
func_1157_call = mod.get_global_var('func_1157')
func_1158_call = mutated_mod.get_global_var('func_1158')
call_4869 = relay.TupleGetItem(func_1157_call(), 1)
call_4870 = relay.TupleGetItem(func_1158_call(), 1)
output = relay.Tuple([call_4848,call_4850,call_4853,const_4854,call_4869,])
output2 = relay.Tuple([call_4849,call_4851,call_4855,const_4854,call_4870,])
func_4876 = relay.Function([], output)
mod['func_4876'] = func_4876
mod = relay.transform.InferType()(mod)
mutated_mod['func_4876'] = func_4876
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4876_call = mutated_mod.get_global_var('func_4876')
call_4877 = func_4876_call()
output = call_4877
func_4878 = relay.Function([], output)
mutated_mod['func_4878'] = func_4878
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3006_call = mod.get_global_var('func_3006')
func_3007_call = mutated_mod.get_global_var('func_3007')
call_4895 = relay.TupleGetItem(func_3006_call(), 1)
call_4896 = relay.TupleGetItem(func_3007_call(), 1)
output = call_4895
output2 = call_4896
func_4903 = relay.Function([], output)
mod['func_4903'] = func_4903
mod = relay.transform.InferType()(mod)
mutated_mod['func_4903'] = func_4903
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4903_call = mutated_mod.get_global_var('func_4903')
call_4904 = func_4903_call()
output = call_4904
func_4905 = relay.Function([], output)
mutated_mod['func_4905'] = func_4905
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1064_call = mod.get_global_var('func_1064')
func_1065_call = mutated_mod.get_global_var('func_1065')
call_4935 = relay.TupleGetItem(func_1064_call(), 0)
call_4936 = relay.TupleGetItem(func_1065_call(), 0)
func_3925_call = mod.get_global_var('func_3925')
func_3926_call = mutated_mod.get_global_var('func_3926')
call_4937 = relay.TupleGetItem(func_3925_call(), 1)
call_4938 = relay.TupleGetItem(func_3926_call(), 1)
bop_4940 = relay.logical_or(call_4935.astype('bool'), relay.reshape(call_4937.astype('bool'), relay.shape_of(call_4935))) # shape=(5, 8, 14)
bop_4943 = relay.logical_or(call_4936.astype('bool'), relay.reshape(call_4938.astype('bool'), relay.shape_of(call_4936))) # shape=(5, 8, 14)
output = bop_4940
output2 = bop_4943
func_4955 = relay.Function([], output)
mod['func_4955'] = func_4955
mod = relay.transform.InferType()(mod)
mutated_mod['func_4955'] = func_4955
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4955_call = mutated_mod.get_global_var('func_4955')
call_4956 = func_4955_call()
output = call_4956
func_4957 = relay.Function([], output)
mutated_mod['func_4957'] = func_4957
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4044_call = mod.get_global_var('func_4044')
func_4046_call = mutated_mod.get_global_var('func_4046')
call_5000 = relay.TupleGetItem(func_4044_call(), 0)
call_5001 = relay.TupleGetItem(func_4046_call(), 0)
output = relay.Tuple([call_5000,])
output2 = relay.Tuple([call_5001,])
func_5002 = relay.Function([], output)
mod['func_5002'] = func_5002
mod = relay.transform.InferType()(mod)
mutated_mod['func_5002'] = func_5002
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5002_call = mutated_mod.get_global_var('func_5002')
call_5003 = func_5002_call()
output = call_5003
func_5004 = relay.Function([], output)
mutated_mod['func_5004'] = func_5004
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3796_call = mod.get_global_var('func_3796')
func_3797_call = mutated_mod.get_global_var('func_3797')
call_5040 = relay.TupleGetItem(func_3796_call(), 0)
call_5041 = relay.TupleGetItem(func_3797_call(), 0)
output = relay.Tuple([call_5040,])
output2 = relay.Tuple([call_5041,])
func_5074 = relay.Function([], output)
mod['func_5074'] = func_5074
mod = relay.transform.InferType()(mod)
output = func_5074()
func_5075 = relay.Function([], output)
mutated_mod['func_5075'] = func_5075
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2013_call = mod.get_global_var('func_2013')
func_2014_call = mutated_mod.get_global_var('func_2014')
call_5130 = func_2013_call()
call_5131 = func_2013_call()
func_4876_call = mod.get_global_var('func_4876')
func_4878_call = mutated_mod.get_global_var('func_4878')
call_5135 = relay.TupleGetItem(func_4876_call(), 2)
call_5136 = relay.TupleGetItem(func_4878_call(), 2)
uop_5137 = relay.tan(call_5135.astype('float32')) # shape=(5, 104)
uop_5139 = relay.tan(call_5136.astype('float32')) # shape=(5, 104)
uop_5142 = relay.asinh(uop_5137.astype('float32')) # shape=(5, 104)
uop_5144 = relay.asinh(uop_5139.astype('float32')) # shape=(5, 104)
output = relay.Tuple([call_5130,uop_5142,])
output2 = relay.Tuple([call_5131,uop_5144,])
func_5154 = relay.Function([], output)
mod['func_5154'] = func_5154
mod = relay.transform.InferType()(mod)
mutated_mod['func_5154'] = func_5154
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5154_call = mutated_mod.get_global_var('func_5154')
call_5155 = func_5154_call()
output = call_5155
func_5156 = relay.Function([], output)
mutated_mod['func_5156'] = func_5156
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2294_call = mod.get_global_var('func_2294')
func_2296_call = mutated_mod.get_global_var('func_2296')
call_5157 = relay.TupleGetItem(func_2294_call(), 0)
call_5158 = relay.TupleGetItem(func_2296_call(), 0)
func_4259_call = mod.get_global_var('func_4259')
func_4263_call = mutated_mod.get_global_var('func_4263')
var_5160 = relay.var("var_5160", dtype = "uint64", shape = (32,))#candidate|5160|(32,)|var|uint64
var_5161 = relay.var("var_5161", dtype = "uint64", shape = (288,))#candidate|5161|(288,)|var|uint64
call_5159 = relay.TupleGetItem(func_4259_call(relay.reshape(var_5160.astype('uint64'), [1, 4, 8]), relay.reshape(var_5161.astype('uint64'), [9, 4, 8]), ), 1)
call_5162 = relay.TupleGetItem(func_4263_call(relay.reshape(var_5160.astype('uint64'), [1, 4, 8]), relay.reshape(var_5161.astype('uint64'), [9, 4, 8]), ), 1)
func_1444_call = mod.get_global_var('func_1444')
func_1447_call = mutated_mod.get_global_var('func_1447')
call_5165 = relay.TupleGetItem(func_1444_call(relay.reshape(call_5157.astype('float32'), [5, 8, 14]), relay.reshape(call_5157.astype('float32'), [5, 8, 14]), ), 0)
call_5166 = relay.TupleGetItem(func_1447_call(relay.reshape(call_5157.astype('float32'), [5, 8, 14]), relay.reshape(call_5157.astype('float32'), [5, 8, 14]), ), 0)
output = relay.Tuple([call_5157,call_5159,var_5160,var_5161,call_5165,])
output2 = relay.Tuple([call_5158,call_5162,var_5160,var_5161,call_5166,])
func_5168 = relay.Function([var_5160,var_5161,], output)
mod['func_5168'] = func_5168
mod = relay.transform.InferType()(mod)
var_5169 = relay.var("var_5169", dtype = "uint64", shape = (32,))#candidate|5169|(32,)|var|uint64
var_5170 = relay.var("var_5170", dtype = "uint64", shape = (288,))#candidate|5170|(288,)|var|uint64
output = func_5168(var_5169,var_5170,)
func_5171 = relay.Function([var_5169,var_5170,], output)
mutated_mod['func_5171'] = func_5171
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5002_call = mod.get_global_var('func_5002')
func_5004_call = mutated_mod.get_global_var('func_5004')
call_5176 = relay.TupleGetItem(func_5002_call(), 0)
call_5177 = relay.TupleGetItem(func_5004_call(), 0)
func_4485_call = mod.get_global_var('func_4485')
func_4486_call = mutated_mod.get_global_var('func_4486')
call_5182 = func_4485_call()
call_5183 = func_4485_call()
output = relay.Tuple([call_5176,call_5182,])
output2 = relay.Tuple([call_5177,call_5183,])
func_5207 = relay.Function([], output)
mod['func_5207'] = func_5207
mod = relay.transform.InferType()(mod)
output = func_5207()
func_5208 = relay.Function([], output)
mutated_mod['func_5208'] = func_5208
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1993_call = mod.get_global_var('func_1993')
func_1995_call = mutated_mod.get_global_var('func_1995')
call_5233 = relay.TupleGetItem(func_1993_call(), 6)
call_5234 = relay.TupleGetItem(func_1995_call(), 6)
func_3995_call = mod.get_global_var('func_3995')
func_3997_call = mutated_mod.get_global_var('func_3997')
var_5246 = relay.var("var_5246", dtype = "float64", shape = (520,))#candidate|5246|(520,)|var|float64
call_5245 = relay.TupleGetItem(func_3995_call(relay.reshape(var_5246.astype('float64'), [130, 4])), 0)
call_5247 = relay.TupleGetItem(func_3997_call(relay.reshape(var_5246.astype('float64'), [130, 4])), 0)
var_5266 = relay.var("var_5266", dtype = "float64", shape = (520,))#candidate|5266|(520,)|var|float64
bop_5267 = relay.minimum(var_5246.astype('int32'), relay.reshape(var_5266.astype('int32'), relay.shape_of(var_5246))) # shape=(520,)
output = relay.Tuple([call_5233,call_5245,bop_5267,])
output2 = relay.Tuple([call_5234,call_5247,bop_5267,])
func_5273 = relay.Function([var_5246,var_5266,], output)
mod['func_5273'] = func_5273
mod = relay.transform.InferType()(mod)
mutated_mod['func_5273'] = func_5273
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5273_call = mutated_mod.get_global_var('func_5273')
var_5275 = relay.var("var_5275", dtype = "float64", shape = (520,))#candidate|5275|(520,)|var|float64
var_5276 = relay.var("var_5276", dtype = "float64", shape = (520,))#candidate|5276|(520,)|var|float64
call_5274 = func_5273_call(var_5275,var_5276,)
output = call_5274
func_5277 = relay.Function([var_5275,var_5276,], output)
mutated_mod['func_5277'] = func_5277
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3796_call = mod.get_global_var('func_3796')
func_3797_call = mutated_mod.get_global_var('func_3797')
call_5312 = relay.TupleGetItem(func_3796_call(), 0)
call_5313 = relay.TupleGetItem(func_3797_call(), 0)
output = relay.Tuple([call_5312,])
output2 = relay.Tuple([call_5313,])
func_5315 = relay.Function([], output)
mod['func_5315'] = func_5315
mod = relay.transform.InferType()(mod)
mutated_mod['func_5315'] = func_5315
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5315_call = mutated_mod.get_global_var('func_5315')
call_5316 = func_5315_call()
output = call_5316
func_5317 = relay.Function([], output)
mutated_mod['func_5317'] = func_5317
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1993_call = mod.get_global_var('func_1993')
func_1995_call = mutated_mod.get_global_var('func_1995')
call_5318 = relay.TupleGetItem(func_1993_call(), 1)
call_5319 = relay.TupleGetItem(func_1995_call(), 1)
func_2966_call = mod.get_global_var('func_2966')
func_2967_call = mutated_mod.get_global_var('func_2967')
call_5329 = func_2966_call()
call_5330 = func_2966_call()
func_4803_call = mod.get_global_var('func_4803')
func_4804_call = mutated_mod.get_global_var('func_4804')
call_5337 = relay.TupleGetItem(func_4803_call(), 0)
call_5338 = relay.TupleGetItem(func_4804_call(), 0)
const_5339 = relay.const([[[-1.328575,2.886132,-3.196421,-3.770398,2.679227,-5.963755,-2.156741,9.621537,-8.624912,-1.628368,-5.579439,-4.319987,-2.310546,4.123753],[-5.871379,9.861605,0.276769,-4.761230,-4.365768,-8.658788,-8.964627,9.457551,8.296769,-4.095948,0.869141,-9.088807,-6.534783,3.326526],[7.902198,-8.673646,8.614008,-9.004945,-2.104181,-8.592042,5.632230,-1.314213,-9.842580,-9.971824,-5.237145,0.020764,-8.062644,4.442110],[-6.415665,2.111879,9.965059,3.065815,3.758181,-6.736554,-9.234732,-8.271976,4.572916,-2.882172,-5.371602,8.357957,9.339290,-9.275835],[1.962073,-3.014644,-4.239639,3.199836,4.365402,9.430532,-3.916374,-4.174728,-3.028975,-4.896075,7.424217,7.582952,-2.497112,9.520601],[-6.415667,2.650906,2.304886,1.509466,3.505815,-9.081882,-4.237426,5.866522,3.118445,8.808994,-8.279475,1.579275,-3.124007,9.839752],[-6.500417,-0.503616,-8.136620,-8.821284,7.427918,-4.221778,-4.824285,9.857445,-8.553813,3.765809,-1.511393,9.139562,-7.282734,1.893770],[-5.266083,4.591936,8.857327,0.731339,2.817401,8.804201,8.960358,1.804335,-4.940004,-1.849790,9.884628,-5.511295,2.154468,-1.158632]],[[2.365212,-1.450793,-9.024039,-5.493249,-6.520834,-1.415045,1.017510,-4.674814,7.166356,-8.535353,1.316550,-0.514666,-7.647910,-8.585674],[-1.268329,0.832518,-1.081848,1.701626,-8.999212,-1.682812,3.444879,-1.814905,0.738229,-0.207030,8.984298,-6.951756,5.693649,1.411708],[-6.543843,2.138641,5.369363,-9.590749,3.370934,-6.338297,8.057705,-9.928810,0.498529,2.728201,6.866745,6.110207,-9.366358,2.822310],[-8.673780,2.214823,8.555658,-2.866980,5.482745,-8.856225,-0.566981,-3.759652,-3.767631,6.891273,-3.265112,-5.000936,-1.501653,-9.042875],[0.658276,-8.069623,-9.275420,-5.905101,9.565486,-6.967585,7.571555,1.576796,-1.008213,5.286203,-2.070664,-6.912307,7.220066,-5.567349],[6.497902,-6.682056,9.026332,-3.417518,-0.591881,5.705406,4.507761,3.624440,-6.623547,0.426129,-8.534557,7.741483,1.047361,1.200567],[-0.706501,-8.307416,-2.644900,3.642096,5.941358,-4.717097,-9.032679,3.319846,0.088067,9.238568,3.901026,-1.815458,1.497191,-0.598601],[-6.752671,-0.424114,-4.357983,-5.263053,3.710531,-4.537650,3.190986,6.487540,-7.610584,-1.087087,0.911943,6.960609,-6.151148,-3.941595]],[[-2.540598,-0.407400,8.308971,3.788413,5.861214,-3.257522,3.734487,7.933564,8.281335,5.496794,-0.613837,-4.203810,7.632089,-4.460860],[1.739940,8.259788,-8.302421,-7.073233,-6.648646,8.542725,6.058448,0.995291,-6.536897,-0.882225,2.315235,7.221066,1.251804,3.508808],[7.446228,-8.190613,-6.504273,-5.748717,8.992352,-8.118544,6.189078,2.839689,-0.934788,3.915051,8.980452,-1.873819,2.299855,-0.041641],[9.135356,7.563838,-7.287480,-9.689315,-6.402236,9.267568,1.251762,9.976073,4.543756,-8.869272,7.388195,-5.635898,4.698482,9.968679],[-9.317733,3.180222,6.909569,-6.740123,-3.791278,0.169296,-2.866310,-0.221063,-2.611798,-0.425020,-7.616838,9.243169,-7.682249,-5.494154],[7.874366,8.197503,-1.474709,9.025006,7.817953,2.776863,-8.810260,-1.329731,6.545616,3.209210,1.898785,0.927010,-2.090903,5.432766],[-9.575839,-5.289338,-4.997589,6.984433,-0.614621,-3.188254,-3.073024,2.702856,-2.964892,3.493952,-6.907343,-4.368019,-5.130823,5.413059],[-6.548798,-8.131738,-4.253523,-5.660556,-4.138703,4.896466,2.884140,-5.692636,4.562248,-5.913765,-7.841366,8.326755,-0.634391,-2.699614]],[[9.470285,4.178987,-8.085149,-6.059509,-2.650466,1.787611,-7.301078,3.371207,9.410205,-8.481128,9.774143,-6.540155,-4.276905,-7.868520],[7.221303,-9.927392,-5.354322,4.513137,4.417856,-5.886822,-1.929655,-3.001265,-5.224864,-0.991728,7.143152,0.968703,-8.673025,-5.759031],[9.405387,1.942176,1.492822,-3.682055,-1.921156,2.014290,1.195219,1.011414,1.754793,9.584468,-2.243312,8.178846,-8.538066,-1.208621],[3.899589,4.717788,-3.678818,0.480637,-6.679467,4.428529,0.450116,-2.802551,-3.178701,6.639540,5.792432,-8.599373,-1.411862,-9.057923],[-0.530454,7.232396,8.859200,-5.123583,-1.606242,-6.612893,7.185411,2.478099,-1.401694,-0.125976,2.187236,-1.430700,-4.647339,-0.997044],[1.162710,5.888017,-5.275232,4.687092,6.088269,9.975109,4.108898,7.070427,9.474849,-6.613230,-5.306564,5.825882,-0.412529,5.230997],[-5.150366,6.946957,-8.323202,5.797092,-6.986512,-9.277758,-4.618930,1.820426,6.137015,4.630740,2.180910,-2.865132,-9.977078,4.616995],[-3.350152,4.673476,5.608282,-5.519510,4.340156,-2.827485,-7.531260,2.300239,-5.334050,-5.020385,2.456258,-6.888740,3.195496,3.685064]],[[-9.006945,-7.841376,2.863194,5.874107,9.793442,-6.479452,8.429499,-6.480197,2.256510,1.271027,-8.735762,-9.983210,4.429175,-1.136336],[0.739191,-4.031255,-9.972249,-1.743055,-6.522525,-0.373168,5.325037,-3.314309,3.292513,-6.542833,-0.712453,-9.196588,-1.121633,6.037722],[-1.362403,-2.041360,2.146080,3.096392,-4.997291,0.694594,-2.555889,-1.109957,-5.867370,-2.455121,2.015418,-5.798077,-4.428420,-4.034061],[9.867842,-3.247832,5.775386,-3.414905,3.592969,-4.109158,5.976651,-5.161405,-4.171084,-6.968559,9.485720,-2.630764,3.452018,8.003346],[-9.941806,-7.500823,3.325122,2.126656,-3.537648,6.295688,2.018241,2.291622,6.984086,-0.832133,-7.034227,-9.604404,-1.174588,-3.119299],[0.400331,4.773766,5.550602,-3.144447,2.410623,8.491300,4.517854,2.276410,-0.415013,5.390247,2.973199,8.512487,-1.726850,0.210979],[5.769880,7.748469,7.952846,-7.536787,-0.914925,6.870905,-7.228044,8.150985,1.773622,-1.267261,6.528650,4.673235,-0.698567,-8.232066],[-7.696533,5.090214,5.129243,2.422289,6.868201,2.577026,-9.337495,8.980018,6.345365,-8.461739,-1.298863,2.026135,-2.461279,-7.325618]]], dtype = "float32")#candidate|5339|(5, 8, 14)|const|float32
bop_5340 = relay.subtract(call_5329.astype('int8'), relay.reshape(const_5339.astype('int8'), relay.shape_of(call_5329))) # shape=(5, 8, 14)
bop_5343 = relay.subtract(call_5330.astype('int8'), relay.reshape(const_5339.astype('int8'), relay.shape_of(call_5330))) # shape=(5, 8, 14)
const_5349 = relay.const([[[1.384213,-7.130887,-8.076767,-5.593931,-9.252662,9.050684,-1.354813,-6.463146,-9.166272,1.760334],[-7.450104,2.450527,-2.012332,-2.281951,-6.839958,7.731585,5.333605,5.413634,-4.509703,-7.268107],[5.633022,3.016542,-6.185298,0.488239,2.013725,-0.681940,8.622979,-5.212121,0.900907,-2.761701],[6.977523,2.093151,9.821319,-8.461434,-7.745254,-1.720506,4.795830,-3.876489,5.570614,-7.429871],[-2.268092,9.463445,-0.407266,4.877080,-4.343282,1.972100,4.329845,1.994495,-2.851050,7.382782],[-6.061046,-6.426738,4.233423,8.321029,-5.343577,-9.301789,-9.205560,-9.833127,9.860112,-6.126835],[0.094715,6.452046,-7.319589,3.375682,1.303078,-0.423848,3.607761,5.851521,0.181436,9.584307],[-0.809545,-0.035816,7.761205,8.797191,-2.186057,2.481366,4.603463,-6.172429,6.665234,-4.837185],[-5.507555,-2.630026,1.703181,5.995512,4.896918,-0.213054,-4.551470,-1.622496,-6.501791,-2.671881],[-3.679417,-2.747074,1.732446,4.783859,0.428478,7.296869,-1.187677,7.721446,1.505101,-5.233204],[7.359366,-7.695726,3.399240,-4.948462,-6.075232,-3.403387,-7.543973,-6.831347,-3.576261,-2.420945],[-5.792059,3.251671,0.264361,-5.346898,8.311428,5.181602,-2.269911,-3.439302,3.824193,3.062738],[-1.500577,-2.616612,-5.837045,-8.357693,-6.727118,-6.208389,-9.716560,-4.392610,-0.218726,-1.987652]],[[8.170667,6.784654,5.282366,-5.541963,-8.778031,-1.607186,4.882115,3.316688,2.204095,-4.640489],[-2.258089,-9.782122,0.178147,-0.674316,-6.985233,0.843642,8.233630,3.646282,9.515440,1.835284],[6.234902,-9.551301,-2.747401,-8.349646,9.690204,6.214108,-5.253247,-4.519864,-0.076625,7.947401],[0.512240,5.975824,5.597178,6.468411,-6.853855,-0.461671,-5.164916,-8.289763,-1.683721,-7.882983],[-6.905873,6.716583,-6.737652,-6.515272,5.738519,1.939381,-7.582062,4.849168,2.727451,-9.318503],[3.686185,5.363198,2.507228,-6.545170,-1.849652,9.878005,-9.358385,2.793660,-4.020491,-9.465692],[-5.361078,-3.418418,-4.591389,-2.798296,-2.958300,3.314496,-8.403727,7.808382,-9.406969,1.761590],[1.400552,9.551754,-6.503022,-1.421308,-6.115408,-4.024670,-9.269986,-2.196319,-3.330523,-9.450322],[1.440799,-4.562630,-8.597711,-1.835022,7.793534,9.472788,-0.083611,-4.708062,-3.234511,-7.278988],[4.786031,3.940363,1.951235,-7.322990,-4.394742,3.982056,-0.618269,5.580710,3.651384,-8.262301],[-1.821082,9.426863,-4.770325,9.251333,-0.372536,-5.023730,-0.541864,0.110853,8.512651,6.611035],[-5.795852,5.245813,-2.749909,4.277442,-6.885677,-1.679207,-2.789695,-4.748337,1.051147,0.037475],[2.042553,-6.536591,3.595080,4.074750,6.281535,-9.846140,9.855196,4.037032,4.554895,-1.006423]],[[-1.821326,-7.510406,-5.134700,8.446209,-5.506585,-2.040637,-4.316543,7.486117,-0.536438,-9.522964],[8.584286,-7.693095,3.105493,-2.262998,-1.652502,-1.619730,5.206014,8.660577,8.712415,2.276576],[9.313268,9.747922,-2.082623,0.555038,-4.222383,8.446276,7.024997,-0.858995,7.639159,7.657157],[3.181529,-8.322985,-1.058111,7.123655,-0.897389,7.185661,-7.291909,-2.605787,0.236507,9.818451],[1.960200,7.758732,-8.360267,6.536552,-4.373471,-4.581143,1.669428,-4.295035,-9.939374,1.400457],[-9.279669,4.231280,-0.348434,-8.820170,9.646679,9.750604,-3.110718,3.915700,-7.112302,-2.320261],[5.599246,7.738070,3.866555,-1.796606,9.369394,-5.331447,-5.247347,-1.035712,0.711811,-3.651492],[-6.598789,-3.014320,-5.327215,-8.880167,-0.381623,1.165309,4.722897,-8.955649,-5.107274,-7.821888],[0.340302,-6.840007,-0.482716,-0.177704,2.122182,8.005448,-8.887854,-0.661658,4.074713,8.461711],[5.061774,-0.453087,5.649765,0.159964,5.665304,7.676333,-1.032467,2.240731,-4.897373,5.266552],[-6.113452,-5.242798,-9.339521,-0.330290,5.859042,7.680548,-7.553238,9.386823,3.191738,-5.540590],[-6.474513,5.123021,2.939626,-5.292329,-8.439079,7.544833,-4.110541,8.545247,-3.224155,-2.147979],[2.001677,-6.873118,6.992929,-9.702617,-2.482582,-6.071152,-9.436862,4.168064,-9.665462,-9.641081]],[[5.632195,7.848583,1.868268,-6.853255,-3.703001,9.717705,5.293879,-8.700612,9.795476,4.305149],[8.428108,-7.006214,7.127126,7.912218,9.915684,-4.856819,6.629615,-5.254522,-0.539224,-2.488421],[-8.616612,-7.768589,6.148129,-3.798744,3.371030,-4.424443,4.209504,3.487833,-4.995237,-7.437032],[-0.188452,5.102256,9.396735,-7.073458,-2.082220,-7.229801,-2.421633,-6.821226,9.628965,-6.858699],[-2.790286,5.135083,9.493874,-1.601539,5.468674,-8.118224,6.669998,0.825408,8.719497,-2.407895],[-9.523499,-7.481895,-1.034465,-0.953481,-7.778219,-4.128119,8.227102,-3.890625,-9.614809,4.706590],[-7.895928,7.907594,6.443584,-7.663017,-2.003600,-3.652959,3.047473,8.503451,-3.187841,-9.224481],[-6.202361,2.735183,-0.273762,9.181163,3.071614,3.279063,-9.714086,8.700617,6.267677,-6.085462],[0.812820,8.438027,-4.815151,-0.184174,-2.268720,3.380963,5.556313,1.870469,-6.102385,6.724570],[5.402442,0.391454,6.610025,1.101608,-8.403270,0.463023,-9.949446,7.564796,9.499566,9.493742],[-8.236068,8.675696,-6.602984,6.608522,5.710179,-0.587303,9.301936,-7.391443,-3.277183,-8.880242],[2.693482,-9.981954,-1.573628,-7.143739,3.914292,7.992719,-1.781126,-9.206388,1.697434,-8.596712],[-3.986323,5.731070,-5.059528,-8.793384,9.119093,-5.317719,-1.003403,2.914561,-1.925135,3.881006]]], dtype = "float64")#candidate|5349|(4, 13, 10)|const|float64
bop_5350 = relay.subtract(call_5318.astype('int64'), relay.reshape(const_5349.astype('int64'), relay.shape_of(call_5318))) # shape=(4, 13, 10)
bop_5353 = relay.subtract(call_5319.astype('int64'), relay.reshape(const_5349.astype('int64'), relay.shape_of(call_5319))) # shape=(4, 13, 10)
output = relay.Tuple([call_5337,bop_5340,bop_5350,])
output2 = relay.Tuple([call_5338,bop_5343,bop_5353,])
func_5359 = relay.Function([], output)
mod['func_5359'] = func_5359
mod = relay.transform.InferType()(mod)
mutated_mod['func_5359'] = func_5359
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5359_call = mutated_mod.get_global_var('func_5359')
call_5360 = func_5359_call()
output = call_5360
func_5361 = relay.Function([], output)
mutated_mod['func_5361'] = func_5361
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2676_call = mod.get_global_var('func_2676')
func_2677_call = mutated_mod.get_global_var('func_2677')
call_5408 = func_2676_call()
call_5409 = func_2676_call()
output = call_5408
output2 = call_5409
func_5429 = relay.Function([], output)
mod['func_5429'] = func_5429
mod = relay.transform.InferType()(mod)
mutated_mod['func_5429'] = func_5429
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5429_call = mutated_mod.get_global_var('func_5429')
call_5430 = func_5429_call()
output = call_5430
func_5431 = relay.Function([], output)
mutated_mod['func_5431'] = func_5431
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5207_call = mod.get_global_var('func_5207')
func_5208_call = mutated_mod.get_global_var('func_5208')
call_5436 = relay.TupleGetItem(func_5207_call(), 1)
call_5437 = relay.TupleGetItem(func_5208_call(), 1)
func_4955_call = mod.get_global_var('func_4955')
func_4957_call = mutated_mod.get_global_var('func_4957')
call_5447 = func_4955_call()
call_5448 = func_4955_call()
func_2676_call = mod.get_global_var('func_2676')
func_2677_call = mutated_mod.get_global_var('func_2677')
call_5459 = func_2676_call()
call_5460 = func_2676_call()
uop_5484 = relay.tan(call_5459.astype('float32')) # shape=(3, 243)
uop_5486 = relay.tan(call_5460.astype('float32')) # shape=(3, 243)
output = relay.Tuple([call_5436,call_5447,uop_5484,])
output2 = relay.Tuple([call_5437,call_5448,uop_5486,])
func_5495 = relay.Function([], output)
mod['func_5495'] = func_5495
mod = relay.transform.InferType()(mod)
mutated_mod['func_5495'] = func_5495
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5495_call = mutated_mod.get_global_var('func_5495')
call_5496 = func_5495_call()
output = call_5496
func_5497 = relay.Function([], output)
mutated_mod['func_5497'] = func_5497
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5522 = relay.var("var_5522", dtype = "float32", shape = (5, 9, 12))#candidate|5522|(5, 9, 12)|var|float32
const_5523 = relay.const([[[-4.723613,3.757260,4.274918,8.984013,3.800854,-1.928523,-7.955754,-2.424465,0.581194,8.306330,-1.878909,2.791454],[5.000138,6.261020,-3.381779,2.278264,5.804051,6.922329,3.863055,-8.142914,0.661429,6.178756,-2.489643,-6.403805],[7.837730,2.312414,-1.409149,5.323701,4.593146,7.993089,8.704633,-3.253158,5.320027,-9.881173,-7.896839,0.214074],[2.247381,7.488944,-9.423788,7.910486,3.671650,-1.628922,4.750522,-7.980435,-2.025443,-3.122126,-7.400638,-1.681391],[7.564469,-3.463744,9.028728,3.221352,-8.831010,-0.031833,-0.567263,-1.741232,8.273082,3.284578,-4.766943,2.011581],[8.965983,7.228735,-5.555159,2.926141,-0.503286,3.241503,-8.887803,-8.922831,-6.171798,3.368789,-5.406701,-0.525198],[-5.740730,-0.034279,6.617282,7.730686,9.656943,-8.781838,-1.880845,9.694693,6.261468,6.295416,5.451883,1.791449],[-2.115578,-4.575998,-5.337211,-3.418076,-1.665318,-1.126471,-5.536341,-5.309571,-8.257189,5.066671,0.980828,7.203996],[-3.506251,-0.632543,-6.716472,7.475343,-2.909659,4.135681,-7.661960,-6.539289,-5.274154,9.691234,-3.730402,-0.698797]],[[-2.632665,-4.171980,9.045166,5.019881,-6.788843,3.571435,3.517245,1.485958,8.110954,-0.733371,2.678878,-0.995276],[7.683094,-6.514239,-2.173919,-6.589750,5.186907,-4.512657,-7.911173,-5.877744,3.560100,5.731841,-6.297946,-6.017001],[9.266395,3.828385,5.222692,-9.955454,1.493723,4.106194,-3.698622,9.682862,-0.022984,-7.632307,0.246545,3.380543],[-4.343294,0.910606,6.160737,-0.454814,-4.305499,2.825946,-6.509294,2.667282,9.644932,6.850955,-1.381812,3.737970],[-6.433956,-7.405368,-3.648208,-3.425250,-4.754231,2.592192,9.832245,0.691300,9.408204,-6.872357,-6.789122,-4.128162],[-1.231278,2.676835,-8.049721,4.577683,-3.434194,-6.196773,9.046080,-1.984815,-2.790873,3.127104,6.829484,9.399080],[-1.479105,-4.242972,1.128711,-9.666102,-3.994781,3.326088,-2.892137,6.504709,-3.878626,2.119311,-8.509299,6.329643],[2.392378,0.701834,8.980514,4.933754,-1.258516,3.064225,-7.718063,7.400133,8.455380,4.978175,6.660769,3.904852],[-7.176309,9.900754,-1.677858,8.178036,0.672534,-4.946661,-8.720365,-6.567316,-2.963544,-0.096784,8.636465,4.523235]],[[-4.376215,-1.484977,-4.640964,9.770613,-6.683497,5.952224,-5.477920,-6.011876,6.181169,-9.139352,3.590866,-4.643361],[-1.423377,-3.668833,-5.461386,4.274917,5.665922,-8.127231,0.743633,-9.881080,-4.387330,-3.711553,3.206719,3.396754],[6.241011,-9.340794,-5.257581,-8.289952,1.235148,0.714272,2.681603,9.080329,-9.821132,-0.023216,7.010464,-1.624758],[-3.591077,-7.504109,7.808687,4.620454,-5.465268,0.924251,-8.656992,4.931132,8.008666,-9.272752,7.991422,4.619098],[9.778278,3.107587,-9.012872,7.640602,-1.088146,-2.796443,2.184594,7.518625,1.163913,-8.575480,-5.678606,-5.484232],[-0.331217,-2.262289,-4.043465,-6.554987,6.116624,-8.769844,3.754399,1.940178,-5.421995,1.322404,7.308308,3.158989],[-7.255684,-8.431262,2.952308,-5.196888,1.919659,-5.294297,-9.821675,-3.594451,-6.072865,8.124955,-3.340424,-9.612090],[9.987015,-6.575794,-0.665363,7.397879,7.062718,9.351532,-3.273758,5.897779,4.674879,5.220062,-7.460677,4.247632],[2.302040,-9.141976,6.522229,-5.557410,-6.667930,6.316950,-1.007675,9.184381,2.568552,-9.272383,-1.872633,1.495473]],[[3.852078,8.035960,-3.839838,6.004958,-3.504449,5.193461,-7.435997,-2.962638,-9.193096,7.758507,-3.051521,7.849343],[6.871813,-4.356271,1.120243,4.036070,-5.056935,-4.661833,-0.911781,-1.862592,0.628019,-5.232880,6.375043,-1.360702],[2.243381,-0.638775,7.915764,0.587812,-2.772488,-5.985393,5.148079,-7.396478,9.714020,1.571330,-4.457757,-6.025694],[8.232043,5.749844,7.717224,7.746031,1.635290,-5.542419,5.161064,-2.265516,3.043797,0.740610,-5.149980,2.505458],[-0.533865,0.510601,-2.470903,-6.847926,5.343906,7.774834,5.731233,1.711096,-1.859312,5.499134,1.609625,1.365193],[4.733400,1.151854,8.215676,1.953742,8.251377,-1.605460,-6.450212,-3.636405,5.672641,-2.810234,-0.444522,8.366305],[0.458291,-2.414897,-5.262366,-5.189452,-1.344793,-4.233109,-8.415694,2.426022,-0.690931,0.502607,-1.950690,-3.953521],[5.713301,-9.807736,-6.101028,2.117583,7.486539,-2.942252,0.413887,7.455563,2.179931,9.418476,5.674612,6.781473],[9.905571,-8.201308,-5.881753,7.720704,6.619503,0.692701,8.664687,8.788457,-1.651653,6.420298,-5.560621,2.180173]],[[-9.543357,6.960178,4.510747,4.983024,-2.536552,-6.919490,8.911377,-9.204727,-8.908942,-6.833818,-9.188711,-9.048488],[-1.282772,7.726240,-8.420466,-8.057536,5.278243,-4.392938,-7.838284,9.481021,3.607891,-5.558187,3.240269,6.636851],[-5.713376,-2.889502,4.844804,-8.048093,-4.853457,0.253201,-5.318232,1.793465,4.354152,4.092244,0.479498,-5.027780],[-5.568928,4.571866,-3.036619,8.872334,9.089754,7.301843,-9.399022,-7.072558,5.323977,3.190223,6.753600,-3.678072],[-0.563035,-9.972820,-7.018357,-6.283688,4.733716,3.158718,-7.936577,4.277103,-3.003990,7.636971,-1.294271,4.872788],[6.856620,9.389037,7.189729,5.467489,3.130348,2.495818,8.561830,2.477474,-4.552507,-3.858518,0.961041,-7.953405],[-7.656493,6.508436,5.040529,1.133202,8.212762,6.332094,-6.979442,8.230962,-8.549180,1.474553,-7.758983,0.861182],[5.903646,-1.335115,0.910612,-0.897200,-6.862802,-7.456096,-2.287083,-3.209110,-9.939807,-1.636363,-4.424843,7.276052],[8.773830,-6.112174,3.807350,-5.217537,8.539043,7.817741,6.589783,7.831128,1.850133,3.080773,0.329470,-8.822850]]], dtype = "float32")#candidate|5523|(5, 9, 12)|const|float32
bop_5524 = relay.maximum(var_5522.astype('float32'), relay.reshape(const_5523.astype('float32'), relay.shape_of(var_5522))) # shape=(5, 9, 12)
uop_5538 = relay.sin(const_5523.astype('float32')) # shape=(5, 9, 12)
output = relay.Tuple([bop_5524,uop_5538,])
output2 = relay.Tuple([bop_5524,uop_5538,])
func_5546 = relay.Function([var_5522,], output)
mod['func_5546'] = func_5546
mod = relay.transform.InferType()(mod)
mutated_mod['func_5546'] = func_5546
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5547 = relay.var("var_5547", dtype = "float32", shape = (5, 9, 12))#candidate|5547|(5, 9, 12)|var|float32
func_5546_call = mutated_mod.get_global_var('func_5546')
call_5548 = func_5546_call(var_5547)
output = call_5548
func_5549 = relay.Function([var_5547], output)
mutated_mod['func_5549'] = func_5549
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1157_call = mod.get_global_var('func_1157')
func_1158_call = mutated_mod.get_global_var('func_1158')
call_5689 = relay.TupleGetItem(func_1157_call(), 1)
call_5690 = relay.TupleGetItem(func_1158_call(), 1)
func_3562_call = mod.get_global_var('func_3562')
func_3563_call = mutated_mod.get_global_var('func_3563')
call_5694 = relay.TupleGetItem(func_3562_call(), 2)
call_5695 = relay.TupleGetItem(func_3563_call(), 2)
output = relay.Tuple([call_5689,call_5694,])
output2 = relay.Tuple([call_5690,call_5695,])
func_5696 = relay.Function([], output)
mod['func_5696'] = func_5696
mod = relay.transform.InferType()(mod)
output = func_5696()
func_5697 = relay.Function([], output)
mutated_mod['func_5697'] = func_5697
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3933_call = mod.get_global_var('func_3933')
func_3934_call = mutated_mod.get_global_var('func_3934')
call_5703 = relay.TupleGetItem(func_3933_call(), 0)
call_5704 = relay.TupleGetItem(func_3934_call(), 0)
output = call_5703
output2 = call_5704
func_5705 = relay.Function([], output)
mod['func_5705'] = func_5705
mod = relay.transform.InferType()(mod)
mutated_mod['func_5705'] = func_5705
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5705_call = mutated_mod.get_global_var('func_5705')
call_5706 = func_5705_call()
output = call_5706
func_5707 = relay.Function([], output)
mutated_mod['func_5707'] = func_5707
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3550_call = mod.get_global_var('func_3550')
func_3551_call = mutated_mod.get_global_var('func_3551')
call_5722 = relay.TupleGetItem(func_3550_call(), 1)
call_5723 = relay.TupleGetItem(func_3551_call(), 1)
output = relay.Tuple([call_5722,])
output2 = relay.Tuple([call_5723,])
func_5729 = relay.Function([], output)
mod['func_5729'] = func_5729
mod = relay.transform.InferType()(mod)
mutated_mod['func_5729'] = func_5729
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5729_call = mutated_mod.get_global_var('func_5729')
call_5730 = func_5729_call()
output = call_5730
func_5731 = relay.Function([], output)
mutated_mod['func_5731'] = func_5731
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5495_call = mod.get_global_var('func_5495')
func_5497_call = mutated_mod.get_global_var('func_5497')
call_5752 = relay.TupleGetItem(func_5495_call(), 2)
call_5753 = relay.TupleGetItem(func_5497_call(), 2)
func_3933_call = mod.get_global_var('func_3933')
func_3934_call = mutated_mod.get_global_var('func_3934')
call_5757 = relay.TupleGetItem(func_3933_call(), 0)
call_5758 = relay.TupleGetItem(func_3934_call(), 0)
var_5772 = relay.var("var_5772", dtype = "float32", shape = (3, 243))#candidate|5772|(3, 243)|var|float32
bop_5773 = relay.power(call_5752.astype('float64'), relay.reshape(var_5772.astype('float64'), relay.shape_of(call_5752))) # shape=(3, 243)
bop_5776 = relay.power(call_5753.astype('float64'), relay.reshape(var_5772.astype('float64'), relay.shape_of(call_5753))) # shape=(3, 243)
func_5273_call = mod.get_global_var('func_5273')
func_5277_call = mutated_mod.get_global_var('func_5277')
const_5778 = relay.const([7.385129,1.614389,7.907326,7.897384,5.035686,3.902548,-2.372530,-5.290114,6.646142,-5.816614,-1.328941,9.454718,3.878320,-1.838400,-6.038102,-0.820055,-0.741154,-1.947755,8.847556,1.258189,2.893406,-4.604301,6.097083,-6.017910,-6.154307,3.086996,-5.334984,-3.857904,7.040172,-2.908774,8.524897,2.165485,-4.462107,1.823966,5.956879,-2.583330,0.321922,-9.623616,5.471714,3.144377,-8.078917,-4.746730,3.965597,-3.287271,3.671625,9.833184,6.250754,6.336790,-4.643822,-9.439461,8.948733,-8.709494,9.406736,3.485954,-9.142571,-5.510550,3.600478,9.998844,9.406811,6.529500,-6.455418,3.628704,3.755276,3.867378,3.181839,-1.656558,-5.058219,7.543238,3.983864,-9.874963,-1.202986,-8.100756,8.725648,-2.697862,5.398241,5.718731,-3.392758,-3.223146,1.593524,-7.018065,9.709851,9.378696,6.465023,5.678322,-3.408106,-2.064247,4.964977,-1.225157,-7.187699,4.401340,1.032409,3.733276,-8.478624,6.177041,3.447783,-2.849065,-8.230675,-8.760975,6.303354,7.597877,7.407702,-5.577524,-4.338029,5.060437,7.839090,8.994640,-8.392310,9.560031,-0.994895,-7.713054,-1.709037,-9.773410,4.796434,-1.925767,-5.630135,-6.253441,-4.648659,-0.115156,5.672064,4.582204,0.457255,0.103754,-8.251567,-8.468170,-8.682043,-8.145263,8.411814,1.267549,-4.049046,1.241453,0.636646,-0.577244,-9.963184,8.807289,8.131469,5.245202,7.408849,-0.242313,3.651320,-5.051167,6.651127,-0.309118,7.961935,2.883375,6.384223,-6.175648,-4.311025,-6.055390,-7.455212,5.038120,1.448910,-3.700970,7.676920,-1.418772,2.000561,-5.332067,0.029258,2.371671,0.747146,-2.919505,-9.979365,6.482713,-4.971721,5.946264,0.725407,-0.802936,5.540633,2.301954,5.519375,3.756878,-7.215391,9.973059,-8.230936,-0.217017,-8.028775,0.608945,-6.305859,1.413553,-9.824161,4.308327,4.852086,-2.923897,-3.337618,-8.696391,9.281807,-5.634675,7.546354,-1.859030,-9.376378,6.253164,2.024924,5.453324,-3.784229,-6.586669,-0.575146,-4.526565,1.258235,-6.345010,2.011380,5.873845,0.307806,-0.480159,-2.115110,-3.121648,-8.444169,9.130297,-0.117392,2.466533,2.848367,-6.525632,6.169648,-7.767338,9.783498,-4.211602,4.517028,-4.882735,0.515528,8.746677,1.554408,-4.607390,-3.961520,7.300993,4.479403,3.700977,3.138850,-6.176958,-4.092048,6.915221,8.194080,-8.262425,-7.743468,9.239509,-5.021916,1.987319,3.259128,2.392400,1.360358,-9.525858,4.191721,4.687514,6.621026,6.345671,-7.290507,-9.297392,-1.745562,-3.767804,8.112885,-5.976529,3.950236,9.511654,7.996886,-2.756352,8.891085,8.041004,-3.744899,8.472720,-1.813061,2.763536,-8.892785,1.352551,0.074996,5.769330,7.061896,-3.287486,0.196805,5.314522,-2.876105,1.587624,2.216241,-2.612068,5.989730,3.258064,-4.505587,3.888949,-5.219858,6.207863,-2.948295,-5.020865,-9.254982,-1.443095,-0.429972,-6.025839,5.918596,7.731685,6.838631,-8.561258,1.260952,-7.940184,9.952858,-9.753875,-8.209903,4.693904,-2.703915,5.449883,-4.609789,-8.605426,2.606036,6.715623,-0.396248,8.056473,-4.824939,3.631072,-1.857654,1.862467,2.416130,3.831972,0.753276,-7.074541,3.910647,-8.566312,-9.972645,-3.401954,2.649475,-7.287198,-0.956493,0.696665,-7.363384,6.926921,2.936779,-5.218461,-7.828888,-4.689037,-1.674564,-4.332206,-9.597819,3.287991,1.446764,9.426230,4.306718,0.516118,2.227809,-6.871394,4.515906,-5.696101,-9.321535,4.503806,1.612354,-3.893415,-8.657647,2.042345,0.100090,0.309755,-3.076259,0.223186,3.453199,-6.867104,-8.171431,-2.039689,-9.861604,-0.711507,6.813340,7.805771,8.585875,-9.627731,-7.847829,4.367795,-9.674239,9.606470,1.911246,-7.732727,5.230982,9.418031,8.677036,3.515416,5.574864,-2.305027,7.694450,6.935805,8.897641,-0.057737,9.084514,7.715051,0.269223,-1.660812,2.420636,7.648096,4.879626,-2.120146,-4.518622,-5.632286,2.555848,-6.034014,1.591204,-1.770231,8.695950,-8.852573,-1.122720,-8.736473,-7.393521,-1.901976,2.850766,-5.409892,-8.349897,1.681104,-3.719533,-7.802861,-2.329261,-3.431481,-7.721719,-1.618536,-8.118563,-9.719485,-1.112084,-6.820655,-9.393881,-6.408995,-7.915319,-4.107402,-5.464157,5.050298,-4.275668,-0.956214,-1.532922,-7.186079,2.982501,-7.267955,7.807590,-7.976076,5.350432,1.547272,5.656126,1.549878,-2.843291,1.983826,1.829034,-5.662037,-1.848437,-9.451689,8.247673,-1.370152,7.563929,-7.447862,6.363024,-8.843235,8.714226,-7.321079,3.076350,-9.638468,-8.941229,-3.998327,-6.088811,1.181898,-5.385147,9.190072,-2.619934,-0.610746,-3.957106,-4.699298,-0.316021,-2.707299,-8.822782,-3.999490,-1.268957,-2.701869,-5.087702,-1.101290,7.129418,-7.951415,1.961296,1.484354,1.904088,4.379719,6.762207,7.722691,-8.946985,4.956511,8.028536,3.916326,4.518064,-3.948855,-4.865457,-7.630437,-4.253928,2.997117,6.597422,1.852710,2.106129,-3.004975,-9.482179,-8.785000,-1.550325,-1.045534,8.208678,4.638917,2.261360,2.083967,5.881277,5.536777,-2.940141,9.257983,4.555115,-6.541250,-1.626820,5.869393,-5.358113,7.622640,-1.353405,-9.749100,2.934611,-5.734236,8.018247,0.210456,6.937479,-7.600845,2.126716,0.501272,-8.528617,4.596859,0.619986,-1.339388,-8.836858,-2.013442,3.136003,5.672800,-2.073976,4.803686,1.736773,-2.077596,7.248934,-9.272217], dtype = "float64")#candidate|5778|(520,)|const|float64
call_5777 = relay.TupleGetItem(func_5273_call(relay.reshape(const_5778.astype('float64'), [520,]), relay.reshape(const_5778.astype('float64'), [520,]), ), 2)
call_5779 = relay.TupleGetItem(func_5277_call(relay.reshape(const_5778.astype('float64'), [520,]), relay.reshape(const_5778.astype('float64'), [520,]), ), 2)
uop_5784 = relay.log2(bop_5773.astype('float32')) # shape=(3, 243)
uop_5786 = relay.log2(bop_5776.astype('float32')) # shape=(3, 243)
uop_5792 = relay.exp(call_5752.astype('float64')) # shape=(3, 243)
uop_5794 = relay.exp(call_5753.astype('float64')) # shape=(3, 243)
bop_5804 = relay.greater_equal(call_5752.astype('bool'), relay.reshape(var_5772.astype('bool'), relay.shape_of(call_5752))) # shape=(3, 243)
bop_5807 = relay.greater_equal(call_5753.astype('bool'), relay.reshape(var_5772.astype('bool'), relay.shape_of(call_5753))) # shape=(3, 243)
output = relay.Tuple([call_5757,call_5777,const_5778,uop_5784,uop_5792,bop_5804,])
output2 = relay.Tuple([call_5758,call_5779,const_5778,uop_5786,uop_5794,bop_5807,])
func_5811 = relay.Function([var_5772,], output)
mod['func_5811'] = func_5811
mod = relay.transform.InferType()(mod)
mutated_mod['func_5811'] = func_5811
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5812 = relay.var("var_5812", dtype = "float32", shape = (3, 243))#candidate|5812|(3, 243)|var|float32
func_5811_call = mutated_mod.get_global_var('func_5811')
call_5813 = func_5811_call(var_5812)
output = call_5813
func_5814 = relay.Function([var_5812], output)
mutated_mod['func_5814'] = func_5814
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5850 = relay.var("var_5850", dtype = "float32", shape = (8, 11, 7))#candidate|5850|(8, 11, 7)|var|float32
var_5851 = relay.var("var_5851", dtype = "float32", shape = (8, 11, 7))#candidate|5851|(8, 11, 7)|var|float32
bop_5852 = relay.divide(var_5850.astype('float32'), relay.reshape(var_5851.astype('float32'), relay.shape_of(var_5850))) # shape=(8, 11, 7)
var_5858 = relay.var("var_5858", dtype = "float32", shape = (8, 11, 7))#candidate|5858|(8, 11, 7)|var|float32
bop_5859 = relay.multiply(bop_5852.astype('uint8'), relay.reshape(var_5858.astype('uint8'), relay.shape_of(bop_5852))) # shape=(8, 11, 7)
bop_5864 = relay.floor_divide(bop_5859.astype('float64'), relay.reshape(var_5851.astype('float64'), relay.shape_of(bop_5859))) # shape=(8, 11, 7)
uop_5870 = relay.sqrt(var_5858.astype('float32')) # shape=(8, 11, 7)
uop_5876 = relay.acosh(uop_5870.astype('float64')) # shape=(8, 11, 7)
output = relay.Tuple([bop_5864,uop_5876,])
output2 = relay.Tuple([bop_5864,uop_5876,])
func_5887 = relay.Function([var_5850,var_5851,var_5858,], output)
mod['func_5887'] = func_5887
mod = relay.transform.InferType()(mod)
var_5888 = relay.var("var_5888", dtype = "float32", shape = (8, 11, 7))#candidate|5888|(8, 11, 7)|var|float32
var_5889 = relay.var("var_5889", dtype = "float32", shape = (8, 11, 7))#candidate|5889|(8, 11, 7)|var|float32
var_5890 = relay.var("var_5890", dtype = "float32", shape = (8, 11, 7))#candidate|5890|(8, 11, 7)|var|float32
output = func_5887(var_5888,var_5889,var_5890,)
func_5891 = relay.Function([var_5888,var_5889,var_5890,], output)
mutated_mod['func_5891'] = func_5891
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4716_call = mod.get_global_var('func_4716')
func_4717_call = mutated_mod.get_global_var('func_4717')
call_5940 = relay.TupleGetItem(func_4716_call(), 0)
call_5941 = relay.TupleGetItem(func_4717_call(), 0)
output = call_5940
output2 = call_5941
func_5942 = relay.Function([], output)
mod['func_5942'] = func_5942
mod = relay.transform.InferType()(mod)
mutated_mod['func_5942'] = func_5942
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5942_call = mutated_mod.get_global_var('func_5942')
call_5943 = func_5942_call()
output = call_5943
func_5944 = relay.Function([], output)
mutated_mod['func_5944'] = func_5944
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2815_call = mod.get_global_var('func_2815')
func_2817_call = mutated_mod.get_global_var('func_2817')
call_5969 = relay.TupleGetItem(func_2815_call(), 0)
call_5970 = relay.TupleGetItem(func_2817_call(), 0)
output = call_5969
output2 = call_5970
func_5986 = relay.Function([], output)
mod['func_5986'] = func_5986
mod = relay.transform.InferType()(mod)
output = func_5986()
func_5987 = relay.Function([], output)
mutated_mod['func_5987'] = func_5987
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6018 = relay.const([[[1.538703,-2.284876,-5.163995,-6.194603,-1.750947,-0.863600,-0.872293,5.440861,0.348841,-0.223732,-2.310141,-0.091822,3.618735,-1.464571,6.612462],[-8.073991,1.056186,3.958832,-9.984495,-8.775300,7.377837,-5.162032,4.648035,-3.619150,3.775748,-3.703960,0.350153,1.603246,4.047542,4.271025]],[[5.894072,-6.270521,5.955981,3.633621,8.442149,-8.895987,-5.419713,3.094160,0.569495,-5.862411,-8.509991,-5.208986,3.140267,-5.967580,9.413287],[5.627872,-5.222870,-9.249358,8.886009,7.982400,7.384421,6.655207,3.784355,3.717870,-3.652313,0.835240,0.669970,-4.791365,-8.012827,0.908151]],[[9.121417,-3.605883,-8.700608,3.702678,-1.811238,3.724003,-1.408601,2.936082,8.462433,-7.473923,-8.689214,-2.890029,-4.472895,-2.827316,-4.807593],[-9.518878,-4.703795,0.597163,1.411000,6.320565,6.148655,7.760543,5.942610,8.126073,-8.507319,5.443767,-0.915801,-4.323565,-9.885270,3.439911]],[[-0.948401,-9.630076,-1.225347,-4.405314,-8.317291,-7.096201,-0.174266,-1.012040,-0.562643,-3.145806,2.887136,-6.636339,4.338744,-4.719246,1.807349],[-5.382142,-2.227096,5.146272,-9.795958,-2.838685,8.569353,3.158074,9.426122,4.593169,8.623621,-0.722607,0.718260,-2.509561,9.206231,8.826979]],[[-7.624177,-4.624193,-2.860549,-8.031317,5.517567,-8.620843,7.140389,-6.985852,0.618524,-2.375430,3.808979,7.324499,7.763493,-6.626002,1.355793],[-1.707744,2.598624,-3.395265,-7.779697,1.148019,6.492102,-3.861469,7.941494,2.738767,-6.534893,0.069920,-8.031146,3.453492,9.041825,-0.974154]],[[9.616906,-8.294709,-8.094486,-2.879871,9.352246,-2.747580,6.079966,1.611408,-4.058073,4.264313,3.625162,-9.898156,-9.232686,3.044543,4.164845],[-3.269070,-7.588042,-1.031008,7.745842,9.314570,-3.221817,2.557233,-8.862454,-2.003917,-1.144368,-3.410184,-2.247995,7.586679,-8.913141,-4.400867]],[[0.501432,-6.888181,-9.477155,-8.985679,5.481090,-8.796237,1.990273,-6.992875,1.167885,-5.618838,-3.501175,3.644456,-1.008180,9.383068,9.680717],[-5.789371,-9.528219,7.426193,8.651572,-0.341443,6.618835,-7.823961,2.591970,2.757437,8.668028,-0.104064,-6.197302,8.350175,-7.079234,2.889313]],[[-3.830136,-1.072430,-7.403729,0.267230,1.933798,-2.278055,1.494421,-3.684819,7.623877,6.729197,3.270574,9.173019,5.749082,-5.833767,4.748603],[2.893788,-0.877797,1.818973,8.050865,-5.997310,-1.612230,-6.789251,-1.731373,-6.293041,-8.747277,-9.426322,2.333364,0.319481,-6.640296,4.303761]],[[3.409754,-2.791486,-6.931963,-0.770314,-5.773482,4.940602,2.574010,-2.957933,-4.779693,-3.931916,-6.075393,-4.265730,-5.040953,-8.903503,-3.172807],[-3.509665,4.814920,7.086619,-1.448974,9.284018,-6.933565,-3.730982,-2.679159,5.347101,8.185978,1.080912,6.097948,-6.557070,8.704982,-9.842091]],[[-5.384635,4.928078,5.211566,8.056580,-8.102312,3.564475,6.898143,1.487710,-2.042527,-1.011266,-5.251565,-3.813625,-1.102307,3.934417,3.959317],[4.964696,-9.332695,0.223555,0.639430,-6.687801,-9.807704,-6.890746,6.283135,3.244263,4.261989,8.804329,-4.638460,9.025827,-9.723205,-5.126628]],[[-0.790432,5.518832,3.137775,9.885381,-0.607918,-1.742784,0.478294,-5.830198,-1.901189,-1.143257,-9.995794,2.769834,8.582007,1.870213,2.234909],[-8.747427,6.484669,4.244314,-3.955116,5.115318,-3.490404,8.052194,-1.169940,-7.253843,-9.714688,-9.599903,-7.605447,1.946676,-1.321436,-7.414262]]], dtype = "float32")#candidate|6018|(11, 2, 15)|const|float32
uop_6019 = relay.tan(const_6018.astype('float32')) # shape=(11, 2, 15)
bop_6021 = relay.bitwise_or(uop_6019.astype('uint32'), relay.reshape(const_6018.astype('uint32'), relay.shape_of(uop_6019))) # shape=(11, 2, 15)
bop_6031 = relay.less_equal(const_6018.astype('bool'), relay.reshape(uop_6019.astype('bool'), relay.shape_of(const_6018))) # shape=(11, 2, 15)
output = relay.Tuple([bop_6021,bop_6031,])
output2 = relay.Tuple([bop_6021,bop_6031,])
func_6049 = relay.Function([], output)
mod['func_6049'] = func_6049
mod = relay.transform.InferType()(mod)
output = func_6049()
func_6050 = relay.Function([], output)
mutated_mod['func_6050'] = func_6050
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4485_call = mod.get_global_var('func_4485')
func_4486_call = mutated_mod.get_global_var('func_4486')
call_6087 = func_4485_call()
call_6088 = func_4485_call()
output = relay.Tuple([call_6087,])
output2 = relay.Tuple([call_6088,])
func_6089 = relay.Function([], output)
mod['func_6089'] = func_6089
mod = relay.transform.InferType()(mod)
output = func_6089()
func_6090 = relay.Function([], output)
mutated_mod['func_6090'] = func_6090
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5315_call = mod.get_global_var('func_5315')
func_5317_call = mutated_mod.get_global_var('func_5317')
call_6094 = relay.TupleGetItem(func_5315_call(), 0)
call_6095 = relay.TupleGetItem(func_5317_call(), 0)
func_1157_call = mod.get_global_var('func_1157')
func_1158_call = mutated_mod.get_global_var('func_1158')
call_6124 = relay.TupleGetItem(func_1157_call(), 0)
call_6125 = relay.TupleGetItem(func_1158_call(), 0)
func_5168_call = mod.get_global_var('func_5168')
func_5171_call = mutated_mod.get_global_var('func_5171')
var_6132 = relay.var("var_6132", dtype = "uint64", shape = (32,))#candidate|6132|(32,)|var|uint64
var_6133 = relay.var("var_6133", dtype = "uint64", shape = (288,))#candidate|6133|(288,)|var|uint64
call_6131 = relay.TupleGetItem(func_5168_call(relay.reshape(var_6132.astype('uint64'), [32,]), relay.reshape(var_6133.astype('uint64'), [288,]), ), 0)
call_6134 = relay.TupleGetItem(func_5171_call(relay.reshape(var_6132.astype('uint64'), [32,]), relay.reshape(var_6133.astype('uint64'), [288,]), ), 0)
output = relay.Tuple([call_6094,call_6124,call_6131,var_6132,var_6133,])
output2 = relay.Tuple([call_6095,call_6125,call_6134,var_6132,var_6133,])
func_6144 = relay.Function([var_6132,var_6133,], output)
mod['func_6144'] = func_6144
mod = relay.transform.InferType()(mod)
mutated_mod['func_6144'] = func_6144
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6144_call = mutated_mod.get_global_var('func_6144')
var_6146 = relay.var("var_6146", dtype = "uint64", shape = (32,))#candidate|6146|(32,)|var|uint64
var_6147 = relay.var("var_6147", dtype = "uint64", shape = (288,))#candidate|6147|(288,)|var|uint64
call_6145 = func_6144_call(var_6146,var_6147,)
output = call_6145
func_6148 = relay.Function([var_6146,var_6147,], output)
mutated_mod['func_6148'] = func_6148
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3303_call = mod.get_global_var('func_3303')
func_3304_call = mutated_mod.get_global_var('func_3304')
call_6150 = func_3303_call()
call_6151 = func_3303_call()
output = relay.Tuple([call_6150,])
output2 = relay.Tuple([call_6151,])
func_6153 = relay.Function([], output)
mod['func_6153'] = func_6153
mod = relay.transform.InferType()(mod)
mutated_mod['func_6153'] = func_6153
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6153_call = mutated_mod.get_global_var('func_6153')
call_6154 = func_6153_call()
output = call_6154
func_6155 = relay.Function([], output)
mutated_mod['func_6155'] = func_6155
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1011_call = mod.get_global_var('func_1011')
func_1012_call = mutated_mod.get_global_var('func_1012')
call_6194 = relay.TupleGetItem(func_1011_call(), 0)
call_6195 = relay.TupleGetItem(func_1012_call(), 0)
output = relay.Tuple([call_6194,])
output2 = relay.Tuple([call_6195,])
func_6220 = relay.Function([], output)
mod['func_6220'] = func_6220
mod = relay.transform.InferType()(mod)
mutated_mod['func_6220'] = func_6220
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6220_call = mutated_mod.get_global_var('func_6220')
call_6221 = func_6220_call()
output = call_6221
func_6222 = relay.Function([], output)
mutated_mod['func_6222'] = func_6222
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5942_call = mod.get_global_var('func_5942')
func_5944_call = mutated_mod.get_global_var('func_5944')
call_6229 = func_5942_call()
call_6230 = func_5942_call()
const_6256 = relay.const([[[9.935120,2.187817,5.643369,-8.833719,-7.697582,-1.712598,-2.961952,-8.222848,1.635244,7.597899,-5.436203,-7.117342,-9.831237,-4.411782],[-8.557558,-3.653743,-8.376591,9.811529,1.056580,-0.976612,-5.147148,9.836045,-8.882074,-2.270548,2.567491,4.333603,0.091136,3.360633],[-1.738810,-4.937360,-2.077035,-0.689143,9.101478,-4.661059,5.581812,-9.583685,-8.020735,-3.196951,3.838364,-1.766482,5.783870,-7.238303],[5.741492,-9.987671,6.117731,-9.017272,7.109910,8.845340,-5.715567,2.248333,-4.472094,5.048709,8.859584,0.591348,2.999131,7.656968],[5.542365,9.798228,-7.679214,-2.645473,5.635026,8.097924,-4.577145,6.618230,-2.967783,-2.349681,-3.901757,9.388118,-6.626778,-4.022250],[-9.904458,-2.490704,0.274718,-4.803787,4.343936,-6.534227,5.877981,9.426468,-0.503813,5.372692,5.128600,1.400947,8.121258,4.267066],[-6.514992,2.433499,-2.908879,-3.330736,-9.757166,0.020708,-2.809332,-7.252257,9.205616,5.028417,-5.570483,-4.684524,-2.097946,0.976540],[6.891242,9.429109,-0.791185,-1.692537,-5.515251,-2.349691,-5.198525,-4.501074,5.863441,-2.500320,-2.287765,-2.314505,-7.260385,-1.093411]],[[3.276122,7.882370,3.662203,-7.577119,5.463124,-4.164815,7.305253,-7.727164,-8.057596,-0.957061,6.805279,-6.127622,-4.072091,-3.842658],[1.355095,-7.856537,-4.708481,7.165406,-3.503350,7.304538,1.218067,-1.316781,2.942353,-4.247381,9.407792,0.158739,7.695686,0.378589],[3.258332,6.105810,-7.640696,2.114203,1.922057,-7.608089,-5.203940,3.951495,3.300738,-3.496414,1.682252,-7.084392,-6.996247,0.730151],[3.993527,9.558228,6.157701,-4.784943,-0.296186,-9.367292,-0.690182,-0.167279,1.353073,-8.368437,7.933468,8.221261,1.614326,7.508657],[4.402637,-1.679241,6.660497,1.800313,-3.675248,8.182616,3.625794,-6.184325,-0.805002,-2.855280,-4.668706,2.247410,-2.367953,-1.005753],[-4.821354,5.749643,8.940218,5.554571,9.340107,0.360012,-6.770840,7.287666,-7.045571,0.001263,-3.923347,-4.567017,5.749339,-8.428595],[-6.815911,4.584786,-1.577506,1.158776,-8.897506,3.678167,9.345814,5.830012,1.115877,-6.884566,-4.330740,-8.927165,7.357095,-6.053055],[-4.469275,-1.919620,0.028809,-7.009963,-6.923907,3.318079,-0.308306,7.434376,2.153176,7.665537,8.712041,3.849559,6.027726,-3.242621]],[[-4.144701,8.334780,1.869379,-8.934672,-8.858228,-8.742696,-1.526497,9.773515,-2.996296,-9.389762,-2.842277,-8.518575,2.138836,0.164006],[-6.079719,-9.967541,-8.605503,2.005782,5.831902,7.619879,-2.191559,3.373927,5.127526,4.535446,6.479018,-8.595985,3.294066,4.434748],[-3.832470,-8.101127,-0.780173,9.458402,-6.438726,-7.075462,-7.956214,2.916652,8.275804,7.575276,-9.265133,6.337067,2.176304,3.201198],[-3.443077,2.994047,4.211764,5.106110,-7.283107,9.638116,-2.685532,8.086022,5.478757,6.618274,0.257634,3.513543,-1.956806,3.510124],[-4.258507,-9.561516,9.289966,8.573189,3.509640,-1.257610,-8.692250,6.206128,6.584194,3.400569,3.460347,5.890390,-9.417921,-8.373898],[1.481766,-9.821055,-5.435989,3.238506,-2.721388,7.695009,3.003877,-4.121647,2.027140,-6.305728,-6.750632,1.987488,3.825682,-7.146670],[4.558711,-0.402151,-9.967127,7.722224,2.638470,-9.502218,2.883381,-7.946091,0.775604,-7.079827,-0.240093,1.623094,1.941395,-9.973556],[0.472495,-0.737642,-6.993539,-8.280312,0.693005,5.894230,-3.527274,-5.431583,9.675939,-4.187779,7.677755,3.462468,-4.058061,-8.761460]],[[1.257958,-6.840168,8.073578,-6.062143,0.098707,-2.718000,-9.786294,5.177497,4.426105,-5.966645,-3.637589,0.311089,-0.664278,7.616304],[6.283104,-2.390799,4.238525,-8.086697,7.930098,-1.712070,1.145096,0.795442,-0.733460,-2.915795,-9.791680,4.002579,4.830742,5.017928],[6.009146,-9.330580,-1.887776,-5.891216,7.645345,5.422872,1.270320,5.354707,-5.055036,-6.327057,-3.834791,4.325165,2.218464,5.151126],[5.289754,-0.189521,-2.845079,-7.411146,7.439842,-0.366247,2.565733,6.884843,7.101735,6.395676,2.238100,-5.934372,-8.125846,4.698487],[-6.880360,-5.219751,6.261984,2.640392,-5.669606,-7.210291,-2.237978,-6.244908,-6.229490,-9.395338,0.719817,-1.063164,5.290075,-9.406608],[-7.182675,6.193896,-9.622780,-1.572671,6.492674,8.202921,3.512171,2.742051,-1.065331,3.160894,-4.377499,-1.968141,8.915499,-7.769032],[-9.561441,-2.770959,-5.011706,2.518330,-1.949177,-5.420826,5.532483,2.767211,-2.386664,-7.473289,-9.594033,4.315483,4.436251,-8.133103],[-5.551810,3.030274,3.182990,4.411948,-9.510198,4.480044,6.105437,-5.289458,8.319450,9.956666,-2.309858,5.166803,-6.875480,3.725616]],[[-8.855701,-5.339762,0.549008,5.980008,-3.373968,-2.227313,-0.090494,2.250806,-9.910992,-3.445590,5.800300,4.100407,-7.443424,-0.029557],[7.018245,-2.927543,-1.295541,8.381937,7.609656,-5.015184,5.604127,-5.390726,-8.833502,0.581594,6.676144,1.919004,-1.165413,-5.078893],[4.097890,9.163096,8.311026,-3.924039,-6.148136,8.028614,1.380113,4.590273,-5.781606,-7.155748,1.641628,8.787726,1.902952,1.343870],[7.461843,-4.646898,6.244265,-5.493460,-4.098561,-2.223579,-7.396511,-0.503163,6.499361,-4.867992,0.832960,3.793803,0.281658,9.141702],[3.705542,-1.713694,-6.308460,8.396262,-2.372147,-5.439343,-3.948861,0.423233,-9.826507,-9.122691,-8.580898,-5.872361,4.413264,-7.886754],[-9.461371,-5.397921,3.328991,8.633351,1.642313,1.033972,-8.281912,-2.820025,-4.697623,7.182686,9.391168,-6.555684,-7.988875,4.554645],[-2.803761,-9.846180,3.585678,-6.063801,2.407812,0.551489,-1.818587,-2.034650,-3.791475,-0.594260,3.028230,-7.911903,4.849201,-8.988445],[8.768987,-7.985836,7.513566,-8.174394,2.104480,2.209959,-4.649394,9.074919,0.997567,5.562953,1.789916,-0.774393,0.717757,5.185360]]], dtype = "float32")#candidate|6256|(5, 8, 14)|const|float32
bop_6257 = relay.logical_and(call_6229.astype('bool'), relay.reshape(const_6256.astype('bool'), relay.shape_of(call_6229))) # shape=(5, 8, 14)
bop_6260 = relay.logical_and(call_6230.astype('bool'), relay.reshape(const_6256.astype('bool'), relay.shape_of(call_6230))) # shape=(5, 8, 14)
output = bop_6257
output2 = bop_6260
func_6285 = relay.Function([], output)
mod['func_6285'] = func_6285
mod = relay.transform.InferType()(mod)
output = func_6285()
func_6286 = relay.Function([], output)
mutated_mod['func_6286'] = func_6286
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5074_call = mod.get_global_var('func_5074')
func_5075_call = mutated_mod.get_global_var('func_5075')
call_6327 = relay.TupleGetItem(func_5074_call(), 0)
call_6328 = relay.TupleGetItem(func_5075_call(), 0)
output = call_6327
output2 = call_6328
func_6360 = relay.Function([], output)
mod['func_6360'] = func_6360
mod = relay.transform.InferType()(mod)
mutated_mod['func_6360'] = func_6360
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6360_call = mutated_mod.get_global_var('func_6360')
call_6361 = func_6360_call()
output = call_6361
func_6362 = relay.Function([], output)
mutated_mod['func_6362'] = func_6362
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2013_call = mod.get_global_var('func_2013')
func_2014_call = mutated_mod.get_global_var('func_2014')
call_6392 = func_2013_call()
call_6393 = func_2013_call()
output = relay.Tuple([call_6392,])
output2 = relay.Tuple([call_6393,])
func_6394 = relay.Function([], output)
mod['func_6394'] = func_6394
mod = relay.transform.InferType()(mod)
output = func_6394()
func_6395 = relay.Function([], output)
mutated_mod['func_6395'] = func_6395
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6285_call = mod.get_global_var('func_6285')
func_6286_call = mutated_mod.get_global_var('func_6286')
call_6436 = func_6285_call()
call_6437 = func_6285_call()
output = call_6436
output2 = call_6437
func_6438 = relay.Function([], output)
mod['func_6438'] = func_6438
mod = relay.transform.InferType()(mod)
mutated_mod['func_6438'] = func_6438
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6438_call = mutated_mod.get_global_var('func_6438')
call_6439 = func_6438_call()
output = call_6439
func_6440 = relay.Function([], output)
mutated_mod['func_6440'] = func_6440
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4703_call = mod.get_global_var('func_4703')
func_4705_call = mutated_mod.get_global_var('func_4705')
call_6489 = relay.TupleGetItem(func_4703_call(), 1)
call_6490 = relay.TupleGetItem(func_4705_call(), 1)
func_2484_call = mod.get_global_var('func_2484')
func_2486_call = mutated_mod.get_global_var('func_2486')
call_6491 = relay.TupleGetItem(func_2484_call(), 1)
call_6492 = relay.TupleGetItem(func_2486_call(), 1)
output = relay.Tuple([call_6489,call_6491,])
output2 = relay.Tuple([call_6490,call_6492,])
func_6496 = relay.Function([], output)
mod['func_6496'] = func_6496
mod = relay.transform.InferType()(mod)
output = func_6496()
func_6497 = relay.Function([], output)
mutated_mod['func_6497'] = func_6497
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6518 = relay.var("var_6518", dtype = "uint16", shape = ())#candidate|6518|()|var|uint16
var_6519 = relay.var("var_6519", dtype = "uint16", shape = (9, 3, 13))#candidate|6519|(9, 3, 13)|var|uint16
bop_6520 = relay.maximum(var_6518.astype('uint16'), var_6519.astype('uint16')) # shape=(9, 3, 13)
bop_6528 = relay.subtract(var_6519.astype('uint16'), relay.reshape(bop_6520.astype('uint16'), relay.shape_of(var_6519))) # shape=(9, 3, 13)
uop_6534 = relay.sinh(bop_6520.astype('float32')) # shape=(9, 3, 13)
output = relay.Tuple([bop_6528,uop_6534,])
output2 = relay.Tuple([bop_6528,uop_6534,])
func_6537 = relay.Function([var_6518,var_6519,], output)
mod['func_6537'] = func_6537
mod = relay.transform.InferType()(mod)
var_6538 = relay.var("var_6538", dtype = "uint16", shape = ())#candidate|6538|()|var|uint16
var_6539 = relay.var("var_6539", dtype = "uint16", shape = (9, 3, 13))#candidate|6539|(9, 3, 13)|var|uint16
output = func_6537(var_6538,var_6539,)
func_6540 = relay.Function([var_6538,var_6539,], output)
mutated_mod['func_6540'] = func_6540
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6547 = relay.var("var_6547", dtype = "float32", shape = (16, 13, 6))#candidate|6547|(16, 13, 6)|var|float32
uop_6548 = relay.cos(var_6547.astype('float32')) # shape=(16, 13, 6)
func_2590_call = mod.get_global_var('func_2590')
func_2592_call = mutated_mod.get_global_var('func_2592')
call_6554 = relay.TupleGetItem(func_2590_call(), 3)
call_6555 = relay.TupleGetItem(func_2592_call(), 3)
output = relay.Tuple([uop_6548,call_6554,])
output2 = relay.Tuple([uop_6548,call_6555,])
func_6562 = relay.Function([var_6547,], output)
mod['func_6562'] = func_6562
mod = relay.transform.InferType()(mod)
var_6563 = relay.var("var_6563", dtype = "float32", shape = (16, 13, 6))#candidate|6563|(16, 13, 6)|var|float32
output = func_6562(var_6563)
func_6564 = relay.Function([var_6563], output)
mutated_mod['func_6564'] = func_6564
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4044_call = mod.get_global_var('func_4044')
func_4046_call = mutated_mod.get_global_var('func_4046')
call_6574 = relay.TupleGetItem(func_4044_call(), 0)
call_6575 = relay.TupleGetItem(func_4046_call(), 0)
output = call_6574
output2 = call_6575
func_6581 = relay.Function([], output)
mod['func_6581'] = func_6581
mod = relay.transform.InferType()(mod)
output = func_6581()
func_6582 = relay.Function([], output)
mutated_mod['func_6582'] = func_6582
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6610 = relay.var("var_6610", dtype = "uint8", shape = (16, 7, 12))#candidate|6610|(16, 7, 12)|var|uint8
var_6611 = relay.var("var_6611", dtype = "uint8", shape = (16, 7, 12))#candidate|6611|(16, 7, 12)|var|uint8
bop_6612 = relay.logical_xor(var_6610.astype('uint8'), relay.reshape(var_6611.astype('uint8'), relay.shape_of(var_6610))) # shape=(16, 7, 12)
func_5729_call = mod.get_global_var('func_5729')
func_5731_call = mutated_mod.get_global_var('func_5731')
call_6625 = relay.TupleGetItem(func_5729_call(), 0)
call_6626 = relay.TupleGetItem(func_5731_call(), 0)
var_6633 = relay.var("var_6633", dtype = "uint8", shape = (16, 7, 12))#candidate|6633|(16, 7, 12)|var|uint8
bop_6634 = relay.power(var_6610.astype('float64'), relay.reshape(var_6633.astype('float64'), relay.shape_of(var_6610))) # shape=(16, 7, 12)
func_1319_call = mod.get_global_var('func_1319')
func_1323_call = mutated_mod.get_global_var('func_1323')
var_6656 = relay.var("var_6656", dtype = "float32", shape = (2340,))#candidate|6656|(2340,)|var|float32
call_6655 = relay.TupleGetItem(func_1319_call(relay.reshape(var_6656.astype('float32'), [13, 15, 12]), relay.reshape(var_6656.astype('float32'), [13, 15, 12]), ), 0)
call_6657 = relay.TupleGetItem(func_1323_call(relay.reshape(var_6656.astype('float32'), [13, 15, 12]), relay.reshape(var_6656.astype('float32'), [13, 15, 12]), ), 0)
func_3225_call = mod.get_global_var('func_3225')
func_3228_call = mutated_mod.get_global_var('func_3228')
var_6675 = relay.var("var_6675", dtype = "int64", shape = ())#candidate|6675|()|var|int64
var_6676 = relay.var("var_6676", dtype = "int64", shape = (104,))#candidate|6676|(104,)|var|int64
call_6674 = relay.TupleGetItem(func_3225_call(relay.reshape(var_6675.astype('int64'), []), relay.reshape(var_6676.astype('int64'), [1, 8, 13]), ), 0)
call_6677 = relay.TupleGetItem(func_3228_call(relay.reshape(var_6675.astype('int64'), []), relay.reshape(var_6676.astype('int64'), [1, 8, 13]), ), 0)
output = relay.Tuple([bop_6612,call_6625,bop_6634,call_6655,var_6656,call_6674,var_6675,var_6676,])
output2 = relay.Tuple([bop_6612,call_6626,bop_6634,call_6657,var_6656,call_6677,var_6675,var_6676,])
func_6687 = relay.Function([var_6610,var_6611,var_6633,var_6656,var_6675,var_6676,], output)
mod['func_6687'] = func_6687
mod = relay.transform.InferType()(mod)
mutated_mod['func_6687'] = func_6687
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6687_call = mutated_mod.get_global_var('func_6687')
var_6689 = relay.var("var_6689", dtype = "uint8", shape = (16, 7, 12))#candidate|6689|(16, 7, 12)|var|uint8
var_6690 = relay.var("var_6690", dtype = "uint8", shape = (16, 7, 12))#candidate|6690|(16, 7, 12)|var|uint8
var_6691 = relay.var("var_6691", dtype = "uint8", shape = (16, 7, 12))#candidate|6691|(16, 7, 12)|var|uint8
var_6692 = relay.var("var_6692", dtype = "float32", shape = (2340,))#candidate|6692|(2340,)|var|float32
var_6693 = relay.var("var_6693", dtype = "int64", shape = ())#candidate|6693|()|var|int64
var_6694 = relay.var("var_6694", dtype = "int64", shape = (104,))#candidate|6694|(104,)|var|int64
call_6688 = func_6687_call(var_6689,var_6690,var_6691,var_6692,var_6693,var_6694,)
output = call_6688
func_6695 = relay.Function([var_6689,var_6690,var_6691,var_6692,var_6693,var_6694,], output)
mutated_mod['func_6695'] = func_6695
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4609_call = mod.get_global_var('func_4609')
func_4610_call = mutated_mod.get_global_var('func_4610')
call_6721 = func_4609_call()
call_6722 = func_4609_call()
output = relay.Tuple([call_6721,])
output2 = relay.Tuple([call_6722,])
func_6730 = relay.Function([], output)
mod['func_6730'] = func_6730
mod = relay.transform.InferType()(mod)
mutated_mod['func_6730'] = func_6730
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6730_call = mutated_mod.get_global_var('func_6730')
call_6731 = func_6730_call()
output = call_6731
func_6732 = relay.Function([], output)
mutated_mod['func_6732'] = func_6732
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4449_call = mod.get_global_var('func_4449')
func_4451_call = mutated_mod.get_global_var('func_4451')
call_6826 = relay.TupleGetItem(func_4449_call(), 0)
call_6827 = relay.TupleGetItem(func_4451_call(), 0)
func_1929_call = mod.get_global_var('func_1929')
func_1931_call = mutated_mod.get_global_var('func_1931')
call_6831 = func_1929_call()
call_6832 = func_1929_call()
output = relay.Tuple([call_6826,call_6831,])
output2 = relay.Tuple([call_6827,call_6832,])
func_6836 = relay.Function([], output)
mod['func_6836'] = func_6836
mod = relay.transform.InferType()(mod)
output = func_6836()
func_6837 = relay.Function([], output)
mutated_mod['func_6837'] = func_6837
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2511_call = mod.get_global_var('func_2511')
func_2512_call = mutated_mod.get_global_var('func_2512')
call_6856 = relay.TupleGetItem(func_2511_call(), 0)
call_6857 = relay.TupleGetItem(func_2512_call(), 0)
output = call_6856
output2 = call_6857
func_6870 = relay.Function([], output)
mod['func_6870'] = func_6870
mod = relay.transform.InferType()(mod)
mutated_mod['func_6870'] = func_6870
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6870_call = mutated_mod.get_global_var('func_6870')
call_6871 = func_6870_call()
output = call_6871
func_6872 = relay.Function([], output)
mutated_mod['func_6872'] = func_6872
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3550_call = mod.get_global_var('func_3550')
func_3551_call = mutated_mod.get_global_var('func_3551')
call_6902 = relay.TupleGetItem(func_3550_call(), 1)
call_6903 = relay.TupleGetItem(func_3551_call(), 1)
func_6836_call = mod.get_global_var('func_6836')
func_6837_call = mutated_mod.get_global_var('func_6837')
call_6909 = relay.TupleGetItem(func_6836_call(), 0)
call_6910 = relay.TupleGetItem(func_6837_call(), 0)
output = relay.Tuple([call_6902,call_6909,])
output2 = relay.Tuple([call_6903,call_6910,])
func_6916 = relay.Function([], output)
mod['func_6916'] = func_6916
mod = relay.transform.InferType()(mod)
mutated_mod['func_6916'] = func_6916
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6916_call = mutated_mod.get_global_var('func_6916')
call_6917 = func_6916_call()
output = call_6917
func_6918 = relay.Function([], output)
mutated_mod['func_6918'] = func_6918
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6938 = relay.const([[[-1.067573,-8.845623,6.687532,-3.683282,1.351165,-5.436197,9.044478],[-9.238678,0.762215,-5.767872,8.399648,-8.209783,-0.897957,-9.954182],[7.377888,-0.550508,-8.162266,-8.903304,-4.371042,2.896605,3.009720],[9.188534,1.913834,-6.190778,4.495495,2.566407,-9.275387,-2.723630],[-2.453539,-0.308007,-2.680498,-1.567001,1.328140,-3.367080,5.208640],[4.775978,2.096768,5.865506,-6.839471,3.618436,-3.880313,-0.698981],[-6.911487,-8.354291,3.652844,-9.576393,6.668872,8.315076,3.631909],[-3.554171,3.284917,-0.442008,-2.412795,4.919139,0.065506,8.410855]],[[-5.666480,-3.633182,-0.325314,2.072677,4.192064,0.161234,-1.467346],[6.527040,-3.345635,-4.956390,-3.291371,-2.264232,-6.055271,1.160273],[-1.921212,-6.320158,5.974834,-2.267435,1.140856,0.722467,4.737890],[2.829160,5.198096,-8.995874,1.783717,-6.589591,1.721519,-9.700241],[-1.024051,5.705079,-7.004571,5.464709,5.162448,6.170282,-7.414017],[5.592566,5.500107,2.905078,-2.242654,-8.775684,8.889177,4.537875],[0.247009,-9.998903,1.476584,2.904902,7.819078,4.068837,-8.105531],[8.110571,-3.179045,-9.180521,-9.955061,-7.158738,1.423337,-0.009002]],[[8.717349,2.678051,3.502594,4.641816,-7.349364,0.193940,0.900243],[-4.159243,1.574577,-7.822385,-2.294238,-9.265168,4.650628,2.602222],[0.312845,8.069044,2.091137,-5.050073,-5.684431,-6.133787,-1.441956],[0.741953,-6.880325,2.511892,4.769098,3.049097,-7.321759,-1.393151],[6.175848,5.504660,9.146232,2.839513,6.702410,-7.942763,0.935009],[-6.412279,-1.396158,-4.833579,6.055667,-3.909100,3.574280,8.313011],[1.751610,2.707740,7.848818,-7.605690,5.558437,-2.911838,8.866505],[4.133126,4.909889,-0.515216,8.997187,-4.917795,-9.176370,2.102998]],[[4.628037,1.750511,6.723180,0.347005,2.727891,5.681069,8.188275],[-9.335539,-1.930176,-3.833783,9.730333,9.763723,6.143972,-2.168238],[5.500881,9.141810,-0.457067,1.112813,-2.851095,-8.259877,-6.943121],[-8.428908,5.507020,-3.966890,-5.678401,3.472906,6.468777,-8.339079],[2.640814,-0.012456,9.617892,5.924967,5.718585,0.622750,1.567522],[8.905200,3.973763,6.458643,-9.579209,4.922703,-4.744929,4.098257],[2.924835,-5.615564,-7.188853,4.570370,0.861507,4.674345,-7.461053],[-9.917984,-3.040225,8.366021,2.935130,2.678160,0.703592,9.762270]],[[8.043958,9.578814,-4.267811,9.419926,1.321261,-0.206424,5.438298],[9.418801,-2.525803,2.003455,9.616850,5.307550,-0.383348,2.532467],[0.299084,0.985043,7.645132,6.485729,0.991948,-5.104823,-4.264706],[7.252659,-2.803302,7.108378,-3.144365,6.606732,6.187303,-6.830884],[4.175307,6.633497,-3.238877,-1.634773,-4.178862,-9.418396,-7.116688],[-8.320625,7.659338,2.735143,-9.139168,3.867808,5.066309,-2.852619],[8.599724,-1.240495,-0.268156,7.497901,9.570470,-7.102320,9.486658],[2.805913,2.826350,-7.329373,2.872029,-9.299250,-9.822780,-4.886886]],[[5.547181,5.237726,3.216408,4.478714,0.141662,5.380596,-5.334406],[-2.612585,-0.913640,-1.631705,6.208124,-1.808549,-5.371412,-0.294560],[-6.944535,-7.012309,-4.919756,-0.941476,-5.000712,2.049919,-2.707429],[-1.796233,1.181472,1.743320,-3.183152,4.818536,-7.524199,-5.397814],[7.338802,-4.680446,4.650535,3.964133,-4.846678,6.653836,5.111854],[-4.180934,2.451635,5.018781,-8.720243,-7.512732,-7.093755,-8.790174],[-5.088424,8.413171,-6.913808,0.498356,-3.254196,2.333973,8.145705],[5.022260,8.691806,-3.150795,-4.167146,7.174314,-0.284242,5.041111]],[[-1.264707,-6.906426,-4.736661,-3.854362,4.156483,-4.285864,-5.189358],[-6.434243,9.002227,-1.312470,7.785753,5.171249,-5.328059,-0.353725],[6.219404,6.474931,-4.266083,-7.895066,2.243322,9.551791,-3.708082],[0.214889,2.483759,-1.841605,8.052627,2.593354,-6.726700,5.959282],[-5.154789,6.400709,6.068511,6.006515,-5.356190,2.641261,-2.689222],[-6.697371,-7.867465,4.172927,2.464233,-7.997532,-2.021688,-7.982207],[5.640620,-6.054430,6.538457,2.531006,-1.413321,-4.628669,-0.863614],[7.360397,-6.345415,8.388994,2.008550,-4.788412,6.387405,7.217242]],[[9.381147,-8.486191,6.350799,-1.123284,-4.721453,-6.731504,-2.065290],[-4.936918,-0.510909,8.354722,2.766311,2.788379,2.823466,-3.883991],[0.329316,-7.201110,7.560423,1.638356,0.189397,7.565502,5.072953],[0.137405,9.023042,-6.142299,5.031142,-0.255880,-2.430570,7.500595],[-3.331522,-4.751405,5.892441,-7.939863,9.896701,-8.171187,2.454015],[0.496231,5.190729,-1.684307,-8.346196,-1.715345,-1.860283,-5.608273],[-1.750643,-5.368977,2.495152,-6.315089,5.223298,0.569705,-7.556482],[-0.842213,-2.249876,-6.437415,-2.976830,-8.459761,1.294161,-7.897312]],[[2.685364,1.461419,-1.291325,-5.858289,-3.370642,-6.589834,5.779303],[3.502209,3.590953,8.968526,0.377805,2.499460,-5.007575,-8.146693],[-6.118573,8.751152,4.661998,-0.069827,-9.494459,-0.242732,4.791100],[0.299741,-7.711647,9.066933,-0.319726,1.778471,-5.730221,6.272138],[-5.092085,7.881135,-5.138674,4.808279,9.463200,9.205698,-5.436163],[-8.365499,-5.846570,5.401968,-7.293243,0.196941,4.584986,-5.739576],[2.001811,0.360513,1.096662,6.801886,0.383659,-0.643272,-9.428469],[9.664624,3.896035,-4.856718,6.975731,-7.309296,-5.277132,-0.144833]],[[7.651371,-4.173751,-1.818064,-4.305261,-7.254119,2.504314,-2.273991],[-7.669339,2.519875,-3.447021,5.199073,-9.210249,-3.036062,7.436246],[-0.529226,-6.769549,-9.799821,2.334209,-7.737504,9.824016,8.884264],[0.617040,-3.140281,-0.013553,5.059564,-3.156989,2.517717,0.171877],[8.302377,6.810217,-9.808025,5.509049,-0.783804,3.523332,8.480959],[9.805398,3.302748,-7.077235,-4.495212,2.398987,7.596111,-0.696169],[-0.212753,-5.799651,-1.761667,-9.656224,-5.711193,-0.091093,-4.289266],[2.361002,-8.986232,-2.007329,6.556315,0.247656,9.917386,2.822290]],[[-4.804271,0.188468,4.864743,-0.104591,0.593412,-4.490533,5.609730],[-4.092436,-3.208262,6.357792,-0.296262,-8.344703,-1.237517,4.091655],[-0.004609,8.777973,1.491838,-4.345257,-8.230136,-0.266567,4.539648],[6.229484,7.598352,-6.734899,-7.299144,-6.970444,1.589796,-6.827542],[-7.354136,6.370471,9.144029,6.492670,7.156112,0.986961,1.257415],[-0.951206,3.940026,2.881687,5.861031,-3.404835,5.649599,9.989581],[-7.680332,-3.510334,6.392314,2.146300,-3.810059,5.716520,-1.641810],[-2.821897,8.010065,-3.651650,-9.613787,3.303566,4.255464,3.382335]],[[4.273191,6.573148,1.332108,-9.000893,0.276305,2.559026,0.532703],[-4.152138,3.942144,3.609844,6.541457,3.244129,6.901737,8.732611],[4.779131,7.705231,7.558852,-2.194439,-4.687156,-3.177795,-8.842372],[-2.403532,-7.009128,-0.545632,4.698435,-3.141909,7.461582,-1.214030],[4.675552,-2.164470,4.358377,6.211034,-6.622962,8.359343,-5.475386],[8.938413,2.073114,-8.632700,-6.261494,7.649218,-4.928590,-2.137945],[-2.871601,-1.046478,-8.786363,-4.189594,-3.684783,7.354925,6.880974],[-3.911927,-3.167697,-1.388675,0.878134,3.904930,1.384361,4.398499]],[[6.488136,-5.063966,-6.121098,5.606109,3.766068,-7.048740,2.135879],[-2.059050,-0.359053,-4.431805,-1.720586,-2.690060,-6.774402,6.561254],[4.418030,3.491078,-9.466033,-5.919680,7.322327,-4.241556,9.334604],[-8.482542,-9.243049,7.787398,0.721224,4.054878,-7.098189,8.688655],[3.188027,0.288460,1.507146,6.803755,-0.419884,4.400042,6.435472],[-9.556719,-8.705598,2.035705,6.698253,-4.159512,2.448552,1.969601],[0.948688,-4.258601,2.972715,4.025447,-3.311833,5.774426,-7.719654],[-9.979459,-9.733901,-6.688721,-1.782497,2.513622,-0.433802,-9.638232]],[[5.163931,-6.497223,7.273830,3.109088,-2.538258,2.187447,-4.132205],[1.568661,8.023183,-5.232360,-9.502798,6.098986,6.741713,-4.165677],[-5.134303,8.453253,-0.940867,-4.354318,-1.492564,6.600606,3.129476],[9.806686,4.391247,-0.991261,1.815543,-6.321150,-5.873324,-0.882721],[-8.963946,4.759307,9.768447,-7.902526,-7.254787,0.743116,-8.931350],[9.354681,-5.699096,9.363739,7.224692,-2.827661,4.671605,-7.631394],[-7.606203,4.298654,-7.769683,2.629303,2.389489,2.366599,5.268783],[-1.084373,0.406118,8.416684,-0.911874,0.791438,-4.191905,-9.039981]],[[-2.309543,4.362683,3.584350,6.293331,-2.432128,-4.944014,-1.531687],[6.169945,-6.438520,-5.813716,-5.349530,8.979867,-5.504302,-8.647666],[7.926946,-4.376897,-0.915064,-3.808251,-0.942829,7.670417,7.252036],[-7.250279,7.805493,0.528575,8.456035,-5.310462,7.377783,5.724686],[-5.075347,-4.308837,-5.637324,-9.775123,8.914163,6.237166,-5.242821],[-2.029681,-8.581916,-3.074071,-5.015559,6.568202,6.068362,5.440442],[-9.954831,-7.526267,8.617832,-1.959928,-6.289465,-9.115347,3.666973],[7.442403,-1.836458,2.723905,3.516082,-7.295841,6.382513,1.546031]]], dtype = "float64")#candidate|6938|(15, 8, 7)|const|float64
var_6939 = relay.var("var_6939", dtype = "float64", shape = (15, 8, 7))#candidate|6939|(15, 8, 7)|var|float64
bop_6940 = relay.power(const_6938.astype('float64'), relay.reshape(var_6939.astype('float64'), relay.shape_of(const_6938))) # shape=(15, 8, 7)
output = bop_6940
output2 = bop_6940
func_6943 = relay.Function([var_6939,], output)
mod['func_6943'] = func_6943
mod = relay.transform.InferType()(mod)
mutated_mod['func_6943'] = func_6943
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6944 = relay.var("var_6944", dtype = "float64", shape = (15, 8, 7))#candidate|6944|(15, 8, 7)|var|float64
func_6943_call = mutated_mod.get_global_var('func_6943')
call_6945 = func_6943_call(var_6944)
output = call_6945
func_6946 = relay.Function([var_6944], output)
mutated_mod['func_6946'] = func_6946
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2716_call = mod.get_global_var('func_2716')
func_2718_call = mutated_mod.get_global_var('func_2718')
call_6948 = relay.TupleGetItem(func_2716_call(), 0)
call_6949 = relay.TupleGetItem(func_2718_call(), 0)
func_6049_call = mod.get_global_var('func_6049')
func_6050_call = mutated_mod.get_global_var('func_6050')
call_6982 = relay.TupleGetItem(func_6049_call(), 1)
call_6983 = relay.TupleGetItem(func_6050_call(), 1)
const_6985 = relay.const([[[True,False,True,False,False,True,True,False,False,True,False,False,False,True,False],[False,False,False,True,True,True,True,True,True,True,False,False,True,True,True]],[[True,False,True,True,False,False,False,False,False,False,True,False,True,True,True],[True,True,True,True,False,True,True,True,False,False,False,False,False,True,True]],[[True,True,True,True,False,True,True,False,True,True,True,False,False,False,True],[True,True,False,True,False,False,False,True,True,False,True,False,False,True,True]],[[True,True,False,False,False,False,True,True,True,True,False,False,True,False,False],[True,False,True,True,True,True,False,True,True,True,True,False,True,True,False]],[[True,False,True,True,False,True,False,True,False,True,False,False,True,False,True],[True,True,True,False,False,False,True,False,True,False,False,False,True,True,True]],[[True,False,True,False,False,True,True,False,False,True,True,True,True,False,True],[False,True,False,True,True,False,True,False,True,False,True,True,False,False,False]],[[True,True,True,False,True,True,True,False,True,False,True,False,True,False,False],[False,True,True,False,False,False,False,False,False,True,False,True,False,True,True]],[[True,False,False,False,True,True,True,False,True,False,False,False,False,True,True],[False,True,False,True,True,False,True,False,False,True,True,True,True,False,False]],[[False,True,False,True,True,True,False,False,False,False,False,False,False,False,False],[True,False,True,True,True,True,False,False,True,False,True,False,True,False,False]],[[True,True,True,False,False,False,True,False,False,True,False,False,False,True,False],[False,False,False,True,False,True,False,False,True,True,False,True,False,False,True]],[[False,True,False,False,True,False,False,True,True,True,False,True,True,False,False],[False,False,True,False,False,True,False,False,True,True,False,True,False,False,True]]], dtype = "bool")#candidate|6985|(11, 2, 15)|const|bool
bop_6986 = relay.bitwise_xor(call_6982.astype('uint16'), relay.reshape(const_6985.astype('uint16'), relay.shape_of(call_6982))) # shape=(11, 2, 15)
bop_6989 = relay.bitwise_xor(call_6983.astype('uint16'), relay.reshape(const_6985.astype('uint16'), relay.shape_of(call_6983))) # shape=(11, 2, 15)
output = relay.Tuple([call_6948,bop_6986,])
output2 = relay.Tuple([call_6949,bop_6989,])
func_6992 = relay.Function([], output)
mod['func_6992'] = func_6992
mod = relay.transform.InferType()(mod)
output = func_6992()
func_6993 = relay.Function([], output)
mutated_mod['func_6993'] = func_6993
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7039 = relay.var("var_7039", dtype = "float32", shape = (11, 10, 7))#candidate|7039|(11, 10, 7)|var|float32
uop_7040 = relay.log(var_7039.astype('float32')) # shape=(11, 10, 7)
output = relay.Tuple([uop_7040,])
output2 = relay.Tuple([uop_7040,])
func_7044 = relay.Function([var_7039,], output)
mod['func_7044'] = func_7044
mod = relay.transform.InferType()(mod)
mutated_mod['func_7044'] = func_7044
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7045 = relay.var("var_7045", dtype = "float32", shape = (11, 10, 7))#candidate|7045|(11, 10, 7)|var|float32
func_7044_call = mutated_mod.get_global_var('func_7044')
call_7046 = func_7044_call(var_7045)
output = call_7046
func_7047 = relay.Function([var_7045], output)
mutated_mod['func_7047'] = func_7047
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7068 = relay.var("var_7068", dtype = "int8", shape = ())#candidate|7068|()|var|int8
var_7069 = relay.var("var_7069", dtype = "int8", shape = (1, 11, 3))#candidate|7069|(1, 11, 3)|var|int8
bop_7070 = relay.maximum(var_7068.astype('int8'), var_7069.astype('int8')) # shape=(1, 11, 3)
func_2909_call = mod.get_global_var('func_2909')
func_2911_call = mutated_mod.get_global_var('func_2911')
const_7082 = relay.const([5.880971,7.878332,-6.498107,-8.270975,4.131489,6.147837,7.323199,-8.310042,9.878332,4.883317,5.702929,7.121089,-0.668330,-3.702021,2.504739,-5.329797,-0.877897,-0.014596,-0.392124,7.437215,8.317422,-3.493490,-7.500359,-4.413123,-1.964168,6.700346,-0.708237,2.128874,9.805242,8.605564,9.825857,-0.206016,5.425025,-4.191645,2.171531,-4.812759,4.185594,2.547834,8.785078,1.654331,6.539178,3.201117,3.418613,-3.091398,6.907982,-3.329303,-5.882908,-3.587678,3.151257,1.095359,-4.931931,5.517013,-8.098051,9.686505,-2.691827,-2.817143,-3.707720,-2.339379,-9.506207,-0.034110,-8.851157,-8.406278,7.150186,-1.961210,3.818676,7.552918,6.144016,9.014254,-6.381123,-5.493756,-3.139118,-5.384969,-8.137346,-7.071262,-0.998896,-6.273020,2.477781,0.183968,0.900055,7.380316,7.079775,-8.088509,2.952094,-2.324834,6.174318,3.538307,1.232279,-4.390124,-0.932021,-3.335395,0.422369,5.201638,3.966407,-3.469066,-4.860597,-7.410114,-9.066610,3.734130,-4.025366,2.642701,-0.682803,6.116664,2.974375,7.426115,6.103106,-0.523610,5.531035,1.206140,-9.764881,1.460870,-0.835521,-2.210168,9.267583,-2.163357,3.357438,2.931705,-4.540408,-5.332683,-8.547780,5.395082,9.708260,-2.732283,5.666193,-6.606765,1.627034,0.724583,1.445709,7.334231,2.116730,-4.527583,2.333774,-1.008437,9.800012,2.764101,-9.458270,7.244961,-9.818161,-3.345846,7.370950,7.011128,7.135187,-0.872649,-1.253844,2.945172,-1.581362,5.881500,6.746014,2.054770,-7.632011,-0.827100,-6.881373,-8.159768,6.057056,-8.959942,4.634256,-9.402574,-4.634476,9.229431,-0.125116,-1.090661,1.505702,-8.370356,7.086611,3.423727,1.821560,9.951276,1.878564,-9.702234,-7.678821,9.346899,9.240315,-0.900702,8.230210,-8.838939,-0.914800,-9.979059,-5.779583,-8.723468,-8.727252,1.889744,4.739746,7.421327,0.917069,-2.784355,6.824739,8.674080,2.204768,-2.255845,-0.302434,-7.421159,-3.269238,-5.606781,8.807323,-6.944239,-7.385180,7.295479,-5.323546,-0.681533,5.904858,-2.718069,-8.543916,2.654718,7.535811,-6.226486,-6.961995,8.614734,3.722876,-4.497462,-5.096025,8.955955,-2.545448,6.324871,2.962668,-6.133925,-5.256417,6.164195,0.629480,-2.818545,9.388512,-1.724896,1.278202,-7.289436,2.818128,5.492450,0.120137,-7.438214,-4.108401,1.791174,1.770865,-8.973513,-2.243200,-2.166963,-3.091821,-4.640068,-8.856396,8.182134,-9.847722,-4.973152,-4.253036,-2.216604,-5.658264,-0.380523,-3.520477,9.843876,0.739036,9.366589,6.903155,3.498727,-8.229345,6.958177,-8.516944,-3.724320,-3.530941,-2.679506,-1.246397,7.709852,1.360692,1.598149,3.962221,7.858285,-6.811355,-5.420797,1.203173,9.559061,4.483915,-4.905948,-2.254793,2.016303,6.491363,4.090421,-0.882058,8.112605,-4.304879,1.861021,3.663303,2.402093,3.828418,6.091224,3.606885,-9.635538,-3.720854,2.319611,4.122224,1.459576,-7.770243,-3.261841,0.507454,0.867371,2.006019,7.612804,4.578394,-8.236160,-9.699314,4.375845,2.203007,7.916434,-4.433078,-7.190651,0.403837,6.451394,-7.977012,-0.234305,2.943425,-3.544817,-4.718652,1.073021,-9.357157,-1.165523,1.018167,-1.754929,7.029862,-3.244634,-9.830849,0.688803,6.077725,-7.673380,-5.579727,7.781761,-0.112141,-6.142599,-7.484459,-7.569150,-7.175666,8.770936,9.359085,-1.768229,0.826444,-6.889156,8.391220,7.723068,-5.446122,-7.250525,-8.065209,-2.139852,5.155389,0.300991,-2.491208,-4.802170,-4.815073,0.497033,-6.460342,-4.820677,-0.802553,7.193230,-6.291874,-8.590055,-2.724662,-4.074159,7.064184,6.902765,5.766827,-1.975514,7.173180,-1.330031,-0.669202,0.269453,9.707894,0.386034,-3.605252,1.361740,0.446089,-3.393958,0.979928,7.475649,1.099364,2.558468,6.898892,2.299542,3.203520,4.269333,6.531633,-7.788882,-0.545097,-7.446491,-5.796292,-3.478331,-6.982565,-6.662851,1.163710,-5.094574,-4.490804,0.455536,5.177860,-4.532789,6.058923,-8.534410,-1.484973,8.462204,-7.299514,-6.737007,-2.784131,3.887579,6.856752,-7.069374,7.278947,1.715448,-4.125752,6.654435,5.278011,-5.134258,4.136494,7.077611,0.402586,7.538097,6.159914,4.510952,-2.983123,-7.009498,-4.189087,-4.911195,8.559396,8.978607,-7.287090,6.487514,3.324876,-7.528922,-3.773789,-5.796045,5.852460,-4.485737,8.481277,-3.841161,-4.109709,2.717013,4.932342,-6.169720,-9.931031,-5.966319,-6.636520,-1.686716,-9.007070,9.903251,2.008770,-2.798659,7.154324,4.674740,-5.576237,-8.108641,-9.715419,0.031740,4.245085,-7.269941,-6.195309,-7.083990,-3.272117,-6.327227,-4.575509,3.901109,1.291165,-9.018198,-7.019577,-2.395464,6.290355,1.466104,-5.426784,2.280926,-3.398601,7.329293,-8.358940,-5.071112,8.237725,7.082824,-4.158693,6.317388,3.889106,-7.918742,0.778580,-6.710147,0.451511,-0.139992,9.858109,8.976941,8.432613,-4.018754,-8.052637,-1.206982,5.444002,8.572408,-8.262974,5.721778,-9.972514,-3.397267,-8.313780,-1.772748,-4.989093,-0.721154,-6.693895,-1.813038,-9.339633,-5.027303,6.435133,-4.337759,-3.653495,-6.517004,-4.810770,-2.832265,3.446811,-9.767470,-9.680298,3.053794,6.375400,-3.028198,7.314853,9.023565,8.085862,-9.865427,-4.369146,0.949688,1.300662,-0.806052,3.636243,-6.402704,8.558793,2.359726,-8.758658,-0.086712,-4.157772,0.369633,6.019639,9.030571,-3.972885,7.993000,9.541460,-6.125085,-4.537663,-9.542499,2.088282,-4.033303,-3.712327,-4.363451,-9.694110,-5.581406,9.513539,-8.130268,8.432833,8.991788,-6.618232,-2.616073,0.403190,-6.233790,4.703567,-8.041906,8.876015,9.825445,-3.283430,-5.910579,8.215896,4.204667,2.271619,8.376644,6.440985,-5.889833,-7.076588,1.292719,2.657108,4.147006,4.981312,-7.124336,3.841693,-2.479748,2.414012,-9.525610,1.914660,-8.444038,-1.651877,7.583595,-6.172898,3.887468,1.332633,8.081388,-8.505840,8.798327,-0.868506,-3.597860,-0.563513,5.529145,-8.927066,-8.866170,6.602212,-8.884837,-7.682412,0.570796,3.324630,2.852642,-8.371420,-2.636367,-3.301123,-4.613796,7.781372,-4.429472,3.071443,1.285241,4.181682,7.546274,-9.796588,-4.278496,-1.508754,-6.396478,-3.266942,-6.479112,-0.109290,0.130189,-1.556800,3.092459,7.725856,3.146916,4.885085,-2.315001,-1.240227,6.992949,0.238035,-1.338916,0.757875,9.077770,-7.000090,-9.286219,-5.308595,6.398827,7.965683,-9.116975,-3.344259,1.857304,6.180831,8.839121,-6.309479,-9.167660,-8.086549,6.181716,4.507006,-2.734156,-4.140514,-1.880115,-3.666189,8.043076,-2.859887,-5.092934,-6.054442,-6.953263,5.091249,0.641871,-5.270005,4.896391,-7.231012,3.165408,-1.386307,-2.810969,-5.685513,0.206945,-7.272785,7.333670,5.873136,-3.257398,9.516667,6.335172,-1.726890,-7.279139,-4.506206,3.035114,-5.307704,1.209828,-5.829420,0.886446,-1.859869,-3.397377,-5.260258,-7.033834,6.976182,3.971396,5.601517,-9.374513,1.698539,4.376370,-3.602070,6.599977,2.652187,4.394339,-9.521329,-0.775263,-4.758068,9.533115,-7.980516,-5.806730,-1.869522,3.667565,-8.768691,9.375446,-1.090979,9.224310,-9.288838,-2.033701,9.153777,9.405639,-2.082034,9.385108,-7.673680,3.962577,-5.761547,9.638826,5.389580,-8.978379,-8.434059,-7.650253,-2.435588,9.788064,-5.384315,-7.821801,-3.773044,2.745414,-3.902498,8.909115,5.401285,6.272144,-4.564333,6.443242,4.878355,8.722895,0.167523,5.595918,4.934814,-7.421128,-6.174654,-3.447331,0.635572,2.687197,-5.234130,-3.970162,-4.001855,2.870585,-0.871932,-7.595662,-5.731967,2.812578,7.280152,-4.572220,-5.260359,-5.620423,8.870783,8.818020,-3.501104,-6.026279,9.492733,3.171629,0.507543,-2.986193,1.996102,7.949258,-2.860329,7.159740,8.603487,-8.189202,0.738124,-2.263605,0.259135,6.183486,3.550124,-3.362692,-0.128323,-4.473540,-4.682418,-3.246463,1.508360,-7.879181,-8.602049,-7.405874,6.944839,6.371822,2.875818,5.963581,9.993810,5.287045,9.495221,4.804321,4.244402,9.261748,-5.829336,3.443920,7.277414,1.456008,7.282481,-5.247964,2.532313,8.219564,4.055438,0.836924,9.476297,7.520600,3.148881,6.368046,-8.444741,-3.969990,-9.743016,1.520081,4.561323,4.247652,-0.886721,2.960611,-6.110385,-7.203096,-8.493665,-9.070656,-3.990492,-4.544003,0.128753,-2.256678,-4.749134,-7.851263,-2.367766,-1.409189,4.132658,3.477050,8.268729,1.040172,9.832647,-8.842673,2.430266,-5.736579,-0.436818,7.484714,-3.324088,-2.926437,2.271993,4.948185,-4.824914,8.455032,1.865322,1.296511,-0.030243,-6.618969,-8.477788,4.100070,-5.055631,-0.031733,-8.908286,-5.840634,3.139791,5.333164,3.256777,6.624914,-9.233380,8.623823,5.788325,2.178523,6.985139,5.549416,-5.556706,-1.317088,-5.805866,8.383242,-1.154780,7.395945,-1.057915,-3.969532,6.324212,9.411356,4.456689,-5.288296,9.979015,-1.964527,2.234844,7.141721,-0.919560,-4.828470,-8.148364,9.444489,8.122132,-0.843278,3.043727,-6.804458,-3.314120,-6.491658,-8.699756,-8.270368,-0.656878,6.122150,5.828897,3.333453,-0.736816,-1.669508,-5.249613,7.336820,8.885963,3.715856,3.534780,7.365375,-6.132448,6.996885,-0.546842,-3.337109,-3.000023,5.071726,-9.012345,2.520148,-4.222940,0.519935,6.733786,7.421014,6.011502,1.997056,-0.615027,-3.010402,-7.484155,1.878578,-0.754773,-7.268977,2.817667,-6.711304,-7.486978,-1.188208,4.557941,4.249670,6.763325,9.104481,-2.720374,2.739645,-1.065241,6.349772,4.613781,9.728472,-2.537530,-0.990227,0.801856,-6.681929,-0.303320,6.669384,-3.817411,-8.951710,2.160877,-4.685026,-6.882792,-4.258497,-7.417915,8.896918,-7.865312,8.966394,-9.149910,9.571328,-2.249365,-1.397393,-4.694648,-0.037747,-1.305151,-9.584101,2.654552,4.669336,-0.974949,-5.124287,9.052942,-5.507962,-5.409090,6.123234,6.753713,2.025738,-1.788327,-9.946965,6.763668,1.518592,6.141918,5.782873,2.197213,-7.223671,-2.286968,-7.710993,4.720092,9.964179,-1.725779,-9.928190,4.393118,6.244862,5.034215,4.162450,-3.607101,4.829587,-1.345435,-8.232897,6.699835,-8.195623,4.184367,-0.080442,4.366877,9.382785,-1.645890,-7.628963,5.477362,3.280340,8.224723,5.531231,8.701235,-3.474500,4.161348,0.843935,7.546320,-5.994906,-2.344776,2.181288,-8.746059,7.141129,2.084306,3.080196,8.331392,9.402293,5.789804,0.928669,0.861790,-2.555201,-3.747126,-6.849353,1.634844,0.780244], dtype = "float32")#candidate|7082|(1008,)|const|float32
call_7081 = relay.TupleGetItem(func_2909_call(relay.reshape(const_7082.astype('float32'), [2, 504])), 2)
call_7083 = relay.TupleGetItem(func_2911_call(relay.reshape(const_7082.astype('float32'), [2, 504])), 2)
const_7088 = relay.const([[[1,10,-2],[9,1,-1],[5,-6,6],[-4,9,-3],[5,8,-1],[4,1,-9],[5,3,9],[2,-7,-8],[-8,-4,-8],[-6,6,7],[-10,-1,-8]],[[-4,-10,8],[-2,-3,1],[-1,-4,3],[-5,6,-2],[-9,5,1],[-2,-6,-5],[-4,-5,7],[-10,4,-5],[-5,6,2],[-8,10,2],[-7,-10,9]],[[-9,4,9],[9,-10,-3],[-2,7,-2],[7,3,3],[9,-2,-5],[4,-3,8],[-10,1,-2],[6,3,-1],[4,6,5],[5,-1,5],[-9,10,7]],[[-3,-6,6],[-9,1,6],[8,10,-1],[5,-9,4],[-4,2,4],[1,6,-4],[-5,-7,-4],[8,4,7],[-3,1,1],[-5,-10,-9],[6,-4,9]],[[-7,10,1],[-6,7,9],[5,-6,-3],[4,4,-4],[-10,4,3],[1,-10,-3],[-4,-1,8],[5,-9,10],[10,1,9],[8,6,-5],[-7,-10,-9]],[[9,-1,-4],[-10,2,4],[3,-7,-7],[-8,8,-8],[4,9,-4],[4,-2,4],[3,9,-5],[-7,-4,-3],[-3,-7,-6],[3,-2,-1],[-1,-10,1]],[[2,-9,-7],[-1,-5,1],[9,10,6],[-3,-5,3],[1,-4,-10],[-6,6,1],[-2,-10,-9],[-4,4,4],[-9,10,2],[-1,-9,6],[7,-2,-9]],[[-8,7,-7],[-8,5,-2],[-3,8,6],[-9,6,9],[9,-6,-1],[-4,-8,-7],[-9,6,7],[5,-1,-5],[6,4,-2],[-4,1,2],[6,2,-8]],[[9,-4,-1],[4,-10,10],[2,9,-8],[8,-4,3],[-2,-3,-3],[3,-10,8],[7,9,9],[-5,7,-6],[7,-8,-5],[-6,-10,-1],[-1,6,3]],[[-5,7,2],[-7,-6,2],[-1,8,-9],[-10,9,-5],[-4,7,8],[-5,-2,10],[8,-2,-2],[-6,5,-2],[-4,1,-6],[-6,-1,-2],[4,-5,-10]],[[2,-2,2],[-1,9,-2],[-10,7,2],[6,-6,10],[9,5,-10],[-10,-7,-9],[10,-7,5],[2,-6,7],[-4,5,-3],[8,-8,-7],[-2,-3,9]]], dtype = "int8")#candidate|7088|(11, 11, 3)|const|int8
bop_7089 = relay.logical_or(var_7069.astype('bool'), const_7088.astype('bool')) # shape=(11, 11, 3)
bop_7103 = relay.floor_divide(bop_7089.astype('float64'), relay.reshape(const_7088.astype('float64'), relay.shape_of(bop_7089))) # shape=(11, 11, 3)
func_4067_call = mod.get_global_var('func_4067')
func_4068_call = mutated_mod.get_global_var('func_4068')
call_7107 = func_4067_call()
call_7108 = func_4067_call()
output = relay.Tuple([bop_7070,call_7081,const_7082,bop_7103,call_7107,])
output2 = relay.Tuple([bop_7070,call_7083,const_7082,bop_7103,call_7108,])
func_7117 = relay.Function([var_7068,var_7069,], output)
mod['func_7117'] = func_7117
mod = relay.transform.InferType()(mod)
var_7118 = relay.var("var_7118", dtype = "int8", shape = ())#candidate|7118|()|var|int8
var_7119 = relay.var("var_7119", dtype = "int8", shape = (1, 11, 3))#candidate|7119|(1, 11, 3)|var|int8
output = func_7117(var_7118,var_7119,)
func_7120 = relay.Function([var_7118,var_7119,], output)
mutated_mod['func_7120'] = func_7120
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1027_call = mod.get_global_var('func_1027')
func_1029_call = mutated_mod.get_global_var('func_1029')
call_7175 = func_1027_call()
call_7176 = func_1027_call()
func_6836_call = mod.get_global_var('func_6836')
func_6837_call = mutated_mod.get_global_var('func_6837')
call_7184 = relay.TupleGetItem(func_6836_call(), 1)
call_7185 = relay.TupleGetItem(func_6837_call(), 1)
func_4803_call = mod.get_global_var('func_4803')
func_4804_call = mutated_mod.get_global_var('func_4804')
call_7189 = relay.TupleGetItem(func_4803_call(), 2)
call_7190 = relay.TupleGetItem(func_4804_call(), 2)
output = relay.Tuple([call_7175,call_7184,call_7189,])
output2 = relay.Tuple([call_7176,call_7185,call_7190,])
func_7195 = relay.Function([], output)
mod['func_7195'] = func_7195
mod = relay.transform.InferType()(mod)
mutated_mod['func_7195'] = func_7195
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7195_call = mutated_mod.get_global_var('func_7195')
call_7196 = func_7195_call()
output = call_7196
func_7197 = relay.Function([], output)
mutated_mod['func_7197'] = func_7197
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7233 = relay.var("var_7233", dtype = "float32", shape = ())#candidate|7233|()|var|float32
const_7234 = relay.const([[[1.401354,-5.243888,-5.314133,-0.802078,-1.092354,0.554399,6.038483,2.431475,0.020731,-3.482745,-7.633561,-9.805001],[7.884038,1.423736,4.769105,-7.021014,-6.632290,-6.599421,8.335181,8.832563,8.067553,0.416070,0.480003,1.445232],[4.203793,3.864532,-6.949678,6.977739,9.179487,3.848806,0.525283,5.586893,-5.327559,-5.172056,-4.143480,-2.441579],[-0.087540,6.806769,-3.245135,6.384814,-9.979425,6.124032,-4.135705,-0.400160,2.710061,5.697431,8.788518,-6.566229],[-7.934229,7.570521,6.526188,-1.447604,-9.228935,6.697356,-2.774961,-3.837732,4.759786,1.085699,-3.521768,-6.510625],[7.550569,-1.166756,-0.489302,2.178946,-9.880124,-1.223000,-2.059809,8.498584,-7.772142,9.498501,3.756707,3.921679],[0.623273,3.919685,3.951336,-0.282481,9.924005,6.951182,5.420546,-9.956999,-9.382656,1.026922,5.255474,2.159012],[-6.863268,7.840928,-9.183692,-6.718561,3.523735,-7.531972,6.725980,-5.184440,6.681822,9.325489,-9.352942,-0.013895],[-6.532280,6.454950,3.780061,3.102820,2.421655,1.791076,5.837887,9.335212,4.743229,0.727617,-1.841479,9.008042]],[[-0.132082,8.579184,-7.101231,4.205878,6.099320,8.716716,0.221710,-8.291455,6.755523,-4.052055,-4.384215,7.057565],[7.368730,-3.984036,-9.072485,-8.037675,-1.578252,9.858329,1.053374,7.982452,7.819556,0.623022,6.353020,6.268760],[-0.460859,-7.094775,-8.059585,-1.856103,-3.063647,8.497549,4.084504,2.648027,5.216560,-3.311546,1.569053,-2.618261],[-5.664780,2.242961,1.339783,-7.809696,5.586392,-3.153826,4.061045,8.961626,-0.826777,-9.529229,-5.443702,2.992256],[0.977527,3.360912,-9.959191,0.198971,3.213327,-4.025632,-5.601867,-0.804051,7.164432,1.839859,-6.792826,2.031382],[0.771771,-1.677924,8.761511,-8.308449,7.162237,-4.259105,8.252815,5.664912,-8.617259,0.484087,-6.075524,-5.049665],[6.202516,-3.672216,1.039835,-5.208693,-0.860152,-2.583097,-6.381335,-8.011091,-2.594587,0.887772,-8.183530,0.308379],[1.871568,0.085147,-8.380720,8.813699,6.057772,9.633149,4.893044,-9.256943,-2.143806,-4.536580,0.530249,1.759056],[5.764073,5.354422,5.808197,-8.859305,0.817361,-0.681159,-3.351606,0.351716,-1.869725,-7.638957,-5.800581,0.154002]],[[8.494054,-0.935498,-7.798311,4.218311,-3.735195,8.864632,8.024490,-8.525407,-4.020470,-5.909740,5.608457,-1.281992],[3.424149,2.515777,7.292220,-7.417436,-4.920147,6.284255,-5.097699,-4.615136,5.558234,-7.929034,-1.007537,-6.755902],[-5.966398,3.329388,-0.198457,5.226633,-0.158946,-7.524787,8.791926,-3.912040,6.174489,-5.537745,-3.093360,-7.272181],[-4.960494,-4.874796,-2.880188,5.426684,-2.870528,-6.558711,8.619087,-7.756332,-4.575552,7.771049,8.674612,-4.798187],[-4.898917,0.846883,2.106161,-6.914946,-5.473639,-2.660820,1.845653,7.276659,-9.889269,4.510622,8.886061,7.756300],[-6.843634,0.255896,7.882241,-4.647938,-7.464278,-2.135315,2.519264,-7.031148,-1.579966,-8.438443,-6.700356,5.966851],[2.371415,-7.324797,-3.562726,0.860327,4.103273,-5.362695,-8.138513,-0.313036,-2.595874,-3.621220,9.455791,-3.726398],[-8.616675,-1.392924,-9.239858,0.481903,-8.328309,6.369784,-4.953111,2.867816,7.621363,-0.470464,-6.151069,8.456541],[9.898175,-7.428558,-7.718026,-2.907614,-4.644713,3.371449,-6.805113,-0.431308,8.386854,1.311984,-8.516723,5.161546]],[[4.420212,4.514794,-1.106976,-8.756652,4.750893,-4.099818,1.759138,-6.280249,3.397361,5.289847,-7.206240,-6.484660],[7.288512,0.808340,-2.573248,0.481488,-3.884098,0.401401,3.942498,4.191018,3.193785,-7.880068,-7.305156,-0.843323],[9.510540,-3.765302,6.964580,8.764527,-4.103494,2.398069,7.489512,-2.277675,9.906798,-9.071373,-7.476138,5.649003],[8.467871,-8.714507,-7.202258,-5.252604,-9.792837,-0.150311,5.337120,-3.103701,-7.546161,3.302466,9.921575,-2.092584],[0.074792,3.929149,-0.548846,0.129614,0.019956,3.850819,-1.886088,6.384711,-7.464237,5.293832,6.837406,-9.176719],[7.520743,0.976274,0.571494,0.812550,-4.381988,-9.094482,-3.503798,-7.967810,-0.910777,4.271969,3.226447,9.254421],[-4.812720,-7.449481,1.752123,-1.787101,-7.680401,2.210590,5.775101,-2.912995,8.305638,-4.941408,9.494331,0.378915],[-6.480268,-5.788811,4.930144,-8.730345,-3.802305,6.104591,0.583881,-1.119286,5.608520,8.341425,8.783691,-9.971125],[1.905406,-6.340739,-5.637770,-4.556047,-8.826883,-5.750695,-3.277584,-1.288790,8.364163,-6.873903,1.625696,-1.706182]],[[-9.192504,9.633778,-4.720255,9.801077,-8.782454,-6.695157,7.535881,1.460850,4.720249,-0.593218,-8.363421,9.339103],[-5.311542,-4.632860,-0.611050,0.390933,1.359484,-5.646596,-3.398334,2.228216,4.916137,2.978895,-0.799006,4.550942],[5.447476,0.804425,-4.941197,8.906139,2.843283,-4.074668,4.246344,-5.969810,-6.240054,-3.071219,-5.816203,6.943758],[4.283560,3.517733,2.267165,3.097912,-1.804226,9.340495,4.545848,3.207123,-0.673760,4.011624,0.912197,-4.644253],[-6.571949,6.415809,-5.559819,7.535144,0.194777,2.875939,2.503490,7.571149,-7.585422,-3.568136,-1.206259,-2.986305],[8.375620,-9.900562,8.442973,-4.809457,3.118761,6.658644,-5.624448,1.679665,8.860641,-1.720307,6.302972,-2.707411],[-6.988643,-2.093662,-1.286936,-1.142379,-8.161545,4.259419,7.744282,6.088973,4.176357,8.293783,3.776144,3.836666],[2.860268,3.816761,-1.035793,-9.027814,-0.787202,4.583522,7.294670,-7.187641,-9.561399,-1.158311,1.995879,-8.686063],[-0.269297,-7.365030,-2.848977,-2.267470,-7.700058,-1.273327,5.858086,0.646609,9.648265,-1.350700,-7.233133,-6.355897]],[[-0.975030,2.249786,8.868663,-3.180602,3.016291,0.717393,4.024881,6.311496,-8.806945,-7.887731,2.461738,5.674295],[-6.540503,5.094159,8.940094,4.201575,-0.423913,3.017560,-1.656260,3.942090,5.503022,9.269509,-2.042898,-1.611336],[-3.556352,-5.698053,-9.993004,7.516940,-7.002680,-1.485326,-0.707731,1.958158,-0.241774,-8.281027,8.165370,-3.823048],[0.902550,8.218397,-2.878233,-8.672672,-0.221232,-9.773412,-3.821456,4.385074,5.270146,-3.900349,4.080110,-8.603289],[9.515236,-1.473832,9.505492,0.879529,-4.945666,-0.085832,-6.653517,9.527763,-4.296691,5.651663,8.242756,8.801643],[-6.624292,0.741168,4.412751,4.386131,-0.910330,7.233063,-0.626947,-5.559761,2.172434,-9.218787,7.407941,-8.492523],[6.561000,8.302239,-9.938718,6.997112,-0.151052,-9.387986,5.523125,-3.663313,7.482236,8.710738,-4.263739,-6.087212],[-4.042973,3.920275,6.895538,0.117693,-4.714740,6.231733,2.413362,6.215155,1.364565,-9.918061,-7.365903,3.205703],[-6.259212,6.866576,-9.550731,3.811960,-9.203474,8.416663,-7.734005,4.104284,2.102136,-2.418636,4.772595,-2.350100]],[[1.125193,5.129909,-7.321230,-1.970238,2.911027,1.192344,2.170027,2.971935,-1.366745,2.955798,2.937397,9.442218],[-5.785706,-3.187193,7.591517,-6.359301,2.926626,-9.100000,-5.338886,-3.370884,1.708818,-4.881021,-1.996619,-9.382261],[-7.109220,-0.874068,-4.464238,-1.434206,5.196360,2.447680,4.829459,8.611895,5.603606,-6.116357,-6.774120,-6.084655],[7.177043,0.028537,-3.116844,-6.312160,3.197686,-2.510054,-4.475105,-4.112682,0.991733,-0.475689,-9.738120,3.220593],[-3.591122,9.763713,4.484083,-5.816674,-8.897627,-1.910516,8.564334,2.300428,6.245344,2.967955,-7.854775,1.981699],[9.033173,0.584565,-1.316061,9.226412,-3.601544,9.408616,-1.867077,-3.426188,7.313986,2.454974,4.084650,-6.107748],[5.302245,-5.932992,7.742067,7.124530,-9.854997,-3.684207,-5.181863,7.973382,9.098512,-9.179756,-0.760807,-4.883357],[0.065187,-8.958787,6.731487,-0.454164,-8.155771,-5.746319,-8.728547,-2.990067,-3.637823,9.424421,6.525680,-4.172562],[-2.917360,-4.237803,7.798355,-7.657793,0.429971,-7.219440,2.326694,0.700080,6.208837,-0.661266,6.021342,-1.910121]],[[7.738135,-9.368914,-8.318526,0.467196,7.501399,7.104755,0.542326,-1.805747,1.458749,6.687656,6.223002,-6.253827],[-1.232722,-5.957538,-5.320631,-5.863334,7.615440,-1.980639,4.667314,-6.183212,8.790436,4.128587,9.155505,5.232921],[-8.305496,-8.971462,4.157433,5.921874,6.163236,-5.467209,-1.246367,5.363040,8.311163,-1.938223,-1.495636,-1.251922],[-8.877544,-5.315415,8.499867,-1.602188,-6.329031,7.799141,-0.920781,1.008949,-2.037849,6.828390,-5.611645,-1.129452],[-7.912433,-6.345915,0.606842,-4.105262,6.687754,-5.304652,2.389735,-5.354942,1.716758,1.727718,-0.481124,0.188729],[-9.036684,-9.096538,4.953932,6.938661,5.022792,-9.321236,-4.948341,-4.280489,6.650687,-1.927198,-6.579268,-6.004700],[-6.225871,3.449178,5.973247,4.339040,0.877811,-9.844250,2.259120,-6.248023,-1.743555,8.605529,9.068045,-2.529378],[-4.892375,2.340899,4.230861,-8.917119,-2.964740,1.158999,-6.701175,3.781467,-3.132040,6.994898,7.918847,-7.776576],[-7.553498,-2.391146,9.998831,3.334231,0.289550,-5.670615,-4.606623,-4.164160,-4.946777,-0.453152,4.912183,-2.721278]],[[-5.772085,8.538321,8.725292,1.533186,0.555089,-2.442468,-4.220396,7.656618,-6.198332,-0.308416,-6.081904,7.075182],[-9.167525,-5.461193,-4.582630,0.230724,-6.298885,-0.220370,-7.683993,1.751487,-7.032332,7.592997,8.657436,-4.292469],[-9.226306,3.834042,-0.218636,-9.403256,-9.647496,-3.494195,1.988356,6.695678,-1.651864,-0.088289,1.640237,-8.238914],[6.524342,-9.270912,-5.329771,-3.471017,-0.302341,-9.440353,7.723889,7.915459,1.653097,-9.933601,-7.831870,-4.546319],[6.780776,9.922870,-3.542553,-0.811033,8.434637,0.201504,-0.134614,5.999958,1.325840,9.318362,-7.648715,-3.618546],[-0.352204,-9.067453,0.499714,3.872984,3.991400,3.679106,-0.757367,4.298704,7.252205,-2.915023,0.676740,-7.572315],[4.460001,2.630652,-0.366081,9.988315,-9.021658,8.374761,-0.527963,-4.218411,-8.605546,5.567349,-4.175617,-2.456445],[4.634215,1.378373,-7.036946,4.903123,3.510171,4.922869,1.842431,-3.338227,0.196220,2.351548,-8.442681,2.537309],[8.873360,9.052130,-4.082816,2.619593,-8.649953,-3.828936,-1.779178,-5.231788,-9.945340,-8.876442,-1.608662,3.304971]],[[-1.565672,5.024047,-8.784075,6.946658,-7.866904,7.906384,0.138546,-3.626526,1.778156,-4.256922,0.418245,4.015828],[6.900747,7.260916,-8.505986,4.676604,9.312959,4.631722,8.538355,8.107472,-5.707298,-5.925989,-3.953450,5.173071],[6.601768,4.585560,6.192660,-7.848937,-1.724905,-5.720080,-8.784395,-2.340984,3.537920,-5.539800,-7.269404,-0.650356],[-0.158867,-7.030407,6.463964,1.145781,-4.020568,6.781158,2.521546,-3.879198,0.932897,9.533176,-3.833551,8.615493],[0.991569,-6.399606,-2.301735,-9.088123,-3.581294,2.907427,7.459697,-5.050891,8.999290,2.713388,-2.375135,7.515463],[-3.406884,8.326248,-9.909755,-1.201043,-2.594644,5.981139,4.208805,-8.355637,7.314984,-8.114833,-5.714266,-8.992418],[-7.294435,-3.468741,0.369218,8.471381,-2.224782,-7.699698,0.398011,6.672372,9.908654,-0.777968,-6.390485,-7.109568],[-8.324081,-8.929319,-8.735615,8.609756,-9.679130,3.494778,2.753950,-3.837086,7.218530,-7.470363,3.838768,3.708288],[-8.184955,-7.692198,-5.000467,-4.849806,3.204603,2.541939,4.297454,-3.626805,-8.035812,9.072197,-2.242680,-3.005446]],[[-5.523428,5.461706,-5.602954,4.103844,-1.917981,5.461226,-5.991960,-0.561415,3.992110,8.726598,-2.550501,-7.148670],[5.894221,-1.885971,0.820016,-9.972075,1.398897,-4.491065,-3.150804,-3.350754,5.049539,2.025814,-0.757311,0.379948],[3.831339,-1.443358,-5.925839,-6.537322,5.205807,-1.819419,3.462123,-5.809134,-6.373361,-2.790857,-6.466558,0.448447],[7.430002,-9.729123,-6.227754,8.679516,-5.559935,9.430712,-9.362453,5.759826,-8.166609,2.010412,-2.826331,-7.884761],[-3.218538,1.588896,-1.524133,-6.283726,8.904241,9.879191,-3.570771,4.937301,-7.230450,7.582717,-2.905063,-8.851238],[-6.203139,8.315227,-6.579060,7.456790,-4.585071,3.598930,-4.721539,-8.632960,-4.895778,9.434077,-1.284542,-6.596996],[-4.721676,-0.386080,-6.921574,1.679712,-3.073673,0.178451,2.572884,4.322214,6.253808,-3.752022,-7.518173,6.643589],[-3.850754,5.166844,2.030149,6.551612,5.005883,-7.264191,6.241064,8.496636,-1.919151,-0.182439,1.898350,-9.830801],[-4.380142,-9.232912,7.732124,-9.512169,5.742532,1.943086,9.223885,-7.305224,-1.420692,-7.801938,-9.247032,5.989878]],[[-8.447172,-4.799323,2.884437,-7.627670,8.299273,-9.463062,-9.366286,-5.559642,-9.105382,-1.531103,2.080124,-7.214957],[0.457265,7.029547,-8.793887,4.008811,-4.024788,6.110756,-5.476147,9.732451,-1.445695,-6.338298,-2.334331,-1.012464],[-7.239914,-0.485822,7.130812,6.609344,3.055466,0.652183,0.576784,-2.125660,-4.723040,9.602537,0.278177,9.350580],[-8.906102,-1.582450,-4.199814,0.929523,4.374131,-4.523155,0.329936,-8.842757,-3.881844,-2.608418,-0.622805,5.145116],[-1.026720,9.188342,-4.952057,-8.985931,-5.509833,5.796947,3.886691,-3.345274,5.736059,-7.751586,-1.529548,1.853462],[-6.546141,7.640915,9.576313,3.690985,7.373103,5.698206,4.459162,4.388332,0.908251,3.556461,7.876297,6.459547],[-5.018976,3.970937,-9.934021,-0.902566,4.212994,0.782498,-9.220137,-1.431964,3.672433,8.052626,4.610127,5.185693],[-1.525817,-8.008346,-4.171303,-7.819604,5.364376,2.931434,-2.462523,-8.370814,5.592417,-4.407175,-3.740842,-8.477872],[6.939158,9.871972,-2.014750,6.330233,5.536922,-9.607018,7.007130,-0.104943,9.685049,2.654500,0.881316,1.214727]]], dtype = "float32")#candidate|7234|(12, 9, 12)|const|float32
bop_7235 = relay.power(var_7233.astype('float32'), const_7234.astype('float32')) # shape=(12, 9, 12)
output = relay.Tuple([bop_7235,])
output2 = relay.Tuple([bop_7235,])
func_7250 = relay.Function([var_7233,], output)
mod['func_7250'] = func_7250
mod = relay.transform.InferType()(mod)
var_7251 = relay.var("var_7251", dtype = "float32", shape = ())#candidate|7251|()|var|float32
output = func_7250(var_7251)
func_7252 = relay.Function([var_7251], output)
mutated_mod['func_7252'] = func_7252
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1755_call = mod.get_global_var('func_1755')
func_1756_call = mutated_mod.get_global_var('func_1756')
call_7265 = relay.TupleGetItem(func_1755_call(), 0)
call_7266 = relay.TupleGetItem(func_1756_call(), 0)
func_4485_call = mod.get_global_var('func_4485')
func_4486_call = mutated_mod.get_global_var('func_4486')
call_7276 = func_4485_call()
call_7277 = func_4485_call()
func_4703_call = mod.get_global_var('func_4703')
func_4705_call = mutated_mod.get_global_var('func_4705')
call_7293 = relay.TupleGetItem(func_4703_call(), 7)
call_7294 = relay.TupleGetItem(func_4705_call(), 7)
func_5696_call = mod.get_global_var('func_5696')
func_5697_call = mutated_mod.get_global_var('func_5697')
call_7300 = relay.TupleGetItem(func_5696_call(), 1)
call_7301 = relay.TupleGetItem(func_5697_call(), 1)
func_3925_call = mod.get_global_var('func_3925')
func_3926_call = mutated_mod.get_global_var('func_3926')
call_7302 = relay.TupleGetItem(func_3925_call(), 1)
call_7303 = relay.TupleGetItem(func_3926_call(), 1)
func_6220_call = mod.get_global_var('func_6220')
func_6222_call = mutated_mod.get_global_var('func_6222')
call_7306 = relay.TupleGetItem(func_6220_call(), 0)
call_7307 = relay.TupleGetItem(func_6222_call(), 0)
output = relay.Tuple([call_7265,call_7276,call_7293,call_7300,call_7302,call_7306,])
output2 = relay.Tuple([call_7266,call_7277,call_7294,call_7301,call_7303,call_7307,])
func_7308 = relay.Function([], output)
mod['func_7308'] = func_7308
mod = relay.transform.InferType()(mod)
output = func_7308()
func_7309 = relay.Function([], output)
mutated_mod['func_7309'] = func_7309
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5429_call = mod.get_global_var('func_5429')
func_5431_call = mutated_mod.get_global_var('func_5431')
call_7315 = func_5429_call()
call_7316 = func_5429_call()
var_7319 = relay.var("var_7319", dtype = "float32", shape = (3, 243))#candidate|7319|(3, 243)|var|float32
bop_7320 = relay.subtract(call_7315.astype('float32'), relay.reshape(var_7319.astype('float32'), relay.shape_of(call_7315))) # shape=(3, 243)
bop_7323 = relay.subtract(call_7316.astype('float32'), relay.reshape(var_7319.astype('float32'), relay.shape_of(call_7316))) # shape=(3, 243)
bop_7328 = relay.greater(call_7315.astype('bool'), relay.reshape(bop_7320.astype('bool'), relay.shape_of(call_7315))) # shape=(3, 243)
bop_7331 = relay.greater(call_7316.astype('bool'), relay.reshape(bop_7323.astype('bool'), relay.shape_of(call_7316))) # shape=(3, 243)
func_6687_call = mod.get_global_var('func_6687')
func_6695_call = mutated_mod.get_global_var('func_6695')
var_7335 = relay.var("var_7335", dtype = "uint8", shape = (1344,))#candidate|7335|(1344,)|var|uint8
const_7336 = relay.const([[7.485715,-5.527075,3.299316,1.082201,5.396357,-0.798717,-5.937411,-4.004956,-0.312427,0.013400,1.102839,3.220196,-9.826811,-2.927104,8.603767,8.502126,-1.967052,1.291512,-9.677185,-8.043832,-9.468014,1.057032,-5.330044,-7.182281,4.380150,7.965677,1.605215,-6.846490,8.790627,-1.947322,6.795429,-3.932724,6.040116,-0.666031,-5.566742,9.335431,4.571641,-1.945192,8.748994,-8.233111,-6.318783,7.849296,-8.306142,-5.195429,0.362709,-1.077611,-7.606026,-5.631789,-7.015821,3.116719,-0.393997,-1.410987,-1.742255,4.831564,4.997904,-7.509391,6.695671,0.211342,5.328114,-2.232653,-1.285305,-9.082274,2.045400,-6.359461,8.407504,-9.949829,4.815063,0.143344,6.783918,0.596368,4.678924,8.134504,1.838246,-8.744874,-0.070451,4.737155,-6.290391,9.251991,0.907398,1.827383,-4.968936,-8.360112,-7.342079,4.245842,-5.900098,-7.312155,-2.508802,5.973687,-4.324705,-8.859999,-0.675813,1.221917,4.752379,-6.570913,5.011621,5.124908,6.437689,2.465074,-3.982174,-1.241839,0.184295,-6.122152,-8.724336,2.114584,6.560746,1.314878,-7.748490,-5.844824,9.344137,-4.208863,7.683096,-0.983952,2.004976,-8.849352,-6.881942,-0.566871,-1.784776,5.856020,-8.267666,6.968817,9.276986,2.175518,-6.635584,2.315605,-1.446695,-3.454235,-1.751851,8.655354,-1.272742,0.422262,-0.448531,-2.598199,-4.830127,1.286479,-0.602916,-8.436815,6.286302,4.929866,-1.924132,6.064892,-0.732374,-6.124702,0.119304,-1.399812,0.942108,-9.432620,-1.959627,-2.894642,7.104294,0.764813,3.916920,4.590086,-8.415361,-3.184783,9.735003,6.305744,3.082170,-1.437203,0.641161,-6.490781,-3.962072,-5.003874,2.757085,8.375424,-4.349515,-2.191160,5.658750,-5.332430,1.307301,-3.691600,1.826532,-9.222438,9.111384,9.540999,-1.755158,5.216313,-3.460744,6.855013,1.235613,-8.055770,9.732473,2.659642,-2.682594,-6.273526,-9.050601,0.269073,3.025765,-7.358413,-2.260750,9.393613,8.371107,-2.612341,1.248872,0.195481,-1.173806,-8.531292,-2.343514,-3.067950,-0.984714,-5.794072,2.683116,-1.522667,-0.251211,0.998077,-9.425521,6.781069,-6.463693,3.283288,5.033454,-5.814678,5.156042,6.139072,-0.425018,-8.885339,7.497306,3.798087,-9.307879,4.665960,-3.015931,-9.057844,6.780251,-1.000938,1.092865,1.677139,-7.653145,-2.292187,5.710080,6.720463,-4.634804,-3.032556,7.921837,-7.709538,6.484208,-4.435064,4.208957,-6.264904,-8.019692,-3.659151,-3.064290,-0.983293,3.720240,-0.988262,-7.569170,-5.800867,-9.462260,-4.674343,-9.192443,3.267933,-0.536015,9.210618,-6.228474,6.069854,-4.833951,-0.183385,1.943681,0.737340,-0.381649,0.418709,3.324472,9.158046],[-6.278939,3.907458,-2.852694,-7.386331,-3.439022,-5.868442,4.636102,9.811616,0.946123,5.741117,-2.527743,5.979741,-7.750902,-3.886655,-1.553318,6.269327,8.043271,9.620915,-8.920268,3.961041,8.072123,4.929551,8.022621,-7.270118,4.227368,2.313750,-8.569225,-7.841394,-9.696490,3.757316,-7.177175,1.803178,4.407460,5.971336,8.546510,2.490391,4.582746,0.713704,5.431562,1.051784,1.820289,6.795123,-7.873424,1.231112,-0.076169,3.699384,5.065760,-8.596318,-7.687663,-8.861928,-8.947379,-9.074491,6.605042,-7.454403,-9.333418,8.126148,4.912837,7.607341,-4.309827,-3.452005,8.786442,3.641168,-5.024024,-1.369660,8.021533,-1.286165,-6.934386,8.813652,2.902532,-0.085868,-6.248351,8.878207,-7.222466,9.713854,1.790404,0.743556,0.575737,-3.430591,8.274984,-9.280552,5.706488,-4.389121,-9.182033,5.411024,-6.391525,2.049165,4.202510,-5.069463,0.049068,-0.269916,8.153408,-1.846096,-2.593669,-1.159980,2.767816,6.082664,-5.711969,-3.039524,9.289560,-9.940386,3.344281,-1.610527,-9.157966,3.197404,-4.750100,9.654546,4.025978,1.436219,-1.213010,9.021915,-6.768837,-7.827779,0.039301,4.136504,6.079317,-3.808279,1.335545,9.484842,7.925457,-4.731927,2.970790,6.476041,6.729744,-6.801416,-6.138404,8.596838,-6.877518,8.248962,-6.224605,8.460445,-6.083547,-3.773617,-4.761712,-1.931156,-1.274487,-6.407954,-0.284120,2.454769,-1.581049,3.580283,9.830431,6.981253,-2.510834,5.835011,-4.114072,-6.579557,-6.073976,-7.532963,8.036515,-2.728927,0.237441,6.506256,-3.923839,7.619444,-7.488918,-6.484410,1.397719,-5.584395,-9.201231,-3.521787,-5.028385,-1.532591,-7.428771,7.053084,9.965595,8.201071,-9.885183,-4.694402,9.557371,3.634695,-5.326385,-3.985508,-4.305982,8.120255,-2.227066,1.790550,0.397140,-5.224992,-2.109039,0.899748,8.053492,1.680199,7.674735,1.327661,3.395363,-4.352466,-3.476538,-8.999506,6.474598,4.711580,8.485514,-1.580368,-8.526370,-6.656898,1.542600,-4.003464,3.211038,-1.517682,3.315170,6.753888,7.377759,-3.604265,-7.248858,-2.074504,4.332214,-0.926900,-0.264880,5.630172,4.742805,2.301797,4.358811,5.912919,0.272299,2.904330,1.634306,-4.656153,-2.110513,-2.810249,9.988268,8.074489,1.489765,9.316495,-8.127209,-9.688036,3.758743,-1.627128,-5.781601,2.183081,-4.438179,-3.143116,8.574360,-2.718719,-4.584550,9.080590,5.035019,-3.998065,-6.275834,-4.120936,-3.986869,-5.395188,-2.165618,-7.503939,-0.740421,5.130802,-5.171162,3.060814,-4.095083,2.304310,-0.731130,-7.700848,6.140016,-1.017008,-3.289467,5.395555,-8.661256,-5.509834,-6.477964,2.719253,-3.503569,0.608486],[-4.820388,6.120781,-7.723511,3.892593,3.032751,-1.532909,-4.211208,-1.542914,8.610293,4.596758,8.232264,4.996458,-8.997170,-3.917557,9.078843,4.129845,-9.944275,-2.844899,-5.750758,-6.787964,7.909575,-4.650449,1.364157,-8.151419,-2.067349,-3.917091,-2.558699,-9.133599,-4.438507,7.278235,-3.167284,-2.749407,9.079621,-2.212908,-1.741770,2.172980,6.445491,-0.799459,-9.723095,-9.836409,-8.927412,-4.508512,-0.955272,-8.672740,-1.221774,-7.561287,-6.324739,0.863851,0.306812,5.278214,-3.095587,8.192167,5.396888,8.540063,-1.024331,-8.735465,-1.041577,3.136038,8.580542,-5.584438,-7.750320,6.722168,0.993081,-4.611244,-5.439456,-0.299354,7.101237,-1.531568,2.872512,-4.639986,9.116112,2.076234,-9.477002,-7.471980,-0.695412,4.286437,9.021648,5.170164,6.012127,6.858038,-9.028292,0.559789,2.733203,-8.623721,4.531683,8.159226,4.461145,-3.140017,8.494508,-8.768709,7.761255,-8.325472,-8.065999,3.400943,-5.736454,2.544746,2.839693,-1.182280,-9.326395,3.332926,0.657791,6.328828,0.051205,-9.977657,-4.602334,-7.935311,-1.837373,7.550252,3.804917,0.275990,7.853678,-7.080524,7.064567,-3.901982,8.871002,4.888977,-3.968569,7.345326,-5.535367,-3.730498,-4.506120,4.203068,-9.661967,6.340114,8.651771,2.479380,4.924572,7.222039,-7.191348,1.769731,-3.439144,-2.105623,9.639971,-6.318002,-5.589283,-4.776231,-2.004698,4.807171,-9.275766,-9.319010,9.607348,6.764491,4.941952,3.209383,-6.369081,3.966165,7.927460,2.373260,8.898062,1.830637,-5.327282,0.067922,2.257853,7.447838,9.654771,6.897560,7.867836,-1.335154,-0.887719,-8.759989,-8.890802,7.910317,-7.059130,-9.811464,-9.871294,5.930561,4.502211,9.945961,9.980027,5.066050,-9.902445,-2.520765,6.208289,-4.210540,-5.959914,-4.717909,-0.657997,1.882296,-3.764084,4.972547,5.875774,0.595847,2.804380,5.262618,-9.836112,9.576781,4.840351,-0.638685,-9.879876,-3.350653,-2.116306,7.928134,-8.913336,8.962329,-5.711805,-6.866077,1.567777,8.094789,-6.048980,6.895249,2.434864,-2.293699,-1.627723,7.450313,5.519357,-6.463922,-5.106683,4.171027,-6.178483,0.238993,7.969680,-6.510090,7.377424,8.535156,-4.512912,-7.090388,3.252982,-6.531069,-7.874880,0.212171,-9.990943,4.309018,2.725557,8.799838,3.853462,4.346095,-0.083416,5.832607,0.202334,-9.355778,4.661225,2.747784,5.454988,7.398012,6.658295,7.361112,-1.551607,-1.741762,8.293283,3.265107,-7.652543,7.566366,-9.227251,-8.092166,3.364486,4.169760,-5.127017,-4.335910,-5.366748,8.886784,-7.717861,2.780055,7.254280,-6.759990,-9.657000,4.571640,-1.199744,4.907585,9.474382,-4.297547],[-9.875818,6.878181,-7.956707,-2.704372,4.282574,-2.609496,8.757567,-0.811983,5.169137,4.615741,-9.856172,-8.559465,-3.006123,5.711744,-0.985891,-1.568855,2.931091,0.857163,1.181603,4.292959,8.962275,-9.387487,0.481256,3.068113,-0.956166,-8.151115,5.391780,8.366533,3.320094,1.831661,5.505504,-0.290943,8.385701,-8.624705,-2.677596,-3.678707,-0.688753,-6.503209,0.938640,-4.126558,-9.569199,7.349608,-9.209148,3.578909,9.427903,6.834018,9.993058,-4.701851,1.013679,8.632494,-5.900308,2.545333,8.482431,-6.093624,3.531395,-0.094163,-9.379211,1.912867,-3.104015,-5.039587,1.303526,-1.691041,6.610571,5.104783,-6.906753,-2.526020,-0.313212,4.237324,9.280428,9.932019,-1.028882,6.716745,3.840485,6.865502,0.684984,2.979565,3.882841,2.014450,-3.643487,4.962679,-7.338262,2.633231,8.014474,-2.224178,6.191774,4.605325,5.064256,-1.120092,8.740513,-9.953294,3.149810,9.405298,-1.102889,7.013772,-5.712631,3.176610,4.065418,4.075221,5.897017,4.340722,2.642647,-6.607630,5.774790,0.386996,1.849684,-1.326387,-4.801576,2.658785,-7.074135,0.495456,-4.147795,1.987688,-4.077500,-9.339218,-4.388018,-3.374564,5.358134,-3.528882,0.275079,4.242863,-2.614571,1.081298,-8.650528,3.037625,8.387521,1.632446,9.053320,2.389870,9.495247,5.060590,-7.027070,-4.367094,-1.760816,-7.520108,-7.992986,-6.832162,7.949729,7.483212,1.777112,7.406005,-2.397122,-4.502738,3.903648,1.534994,5.487976,6.093299,-6.716367,5.825452,-3.353756,-0.187091,-1.502002,7.285525,-7.626725,3.229741,5.003148,-8.202804,8.990723,6.684697,4.459759,9.378704,6.577007,-7.152148,-2.362824,4.112664,9.586229,-1.453957,-6.884620,-8.129919,-1.248970,-4.809151,-8.161574,0.007864,9.737776,-6.676944,1.333045,-8.169116,-7.543077,-9.874994,-7.081320,-6.549864,1.771086,5.001113,-1.648314,-8.422449,3.097679,3.142588,-2.976357,8.914212,7.029839,-2.486844,-5.650304,-7.723505,5.730235,7.694147,-5.981611,0.967783,-2.486984,4.424507,-7.751822,-6.993262,2.388531,5.529460,-7.934318,0.735729,5.512467,7.538823,-0.803879,-6.794712,-7.726925,-5.323644,6.706221,9.130883,-1.658630,9.573640,-5.994390,5.745628,2.411875,6.217454,9.072008,2.219296,-5.810411,-7.269391,-3.606998,-3.641497,1.224260,6.062944,2.166038,-2.563036,-8.332606,-4.491067,1.311799,-8.207127,6.613648,1.302984,-1.737985,7.157761,5.872288,-3.935896,-5.740678,-2.618642,8.313525,4.202057,-3.488630,-5.294957,6.786065,-1.389242,-5.344608,7.093502,-4.212923,4.213554,9.295327,-9.167086,-0.878607,0.044009,2.673680,-2.524547,4.011589,3.961365,-7.060736,-1.126627],[5.885282,-4.364793,1.927041,8.727133,-2.379464,5.644189,8.671910,-4.180052,-7.004443,-5.946144,-9.187783,-9.566807,-8.299331,2.581049,2.058573,-8.269097,-8.924947,1.152427,-6.831476,-5.036334,3.791849,0.967784,9.663696,-7.771696,9.578624,2.381000,-8.089451,8.720845,-3.579212,1.983227,9.989989,-0.089608,-3.481621,2.755187,-9.347290,-3.307261,1.646654,-0.129128,9.751466,-7.486749,4.292442,-8.175346,7.816787,8.383450,1.705104,-9.520190,-8.096275,-2.474960,-3.959725,-8.625088,6.394107,-3.686662,-3.287709,1.924502,8.801844,-9.811508,-3.989976,-7.617877,-2.758187,6.643253,-0.060478,-5.491958,-2.644974,-0.910325,1.874792,1.930323,1.526009,1.349522,-6.369404,5.064607,4.244686,-7.819698,1.633477,8.228872,-5.203364,9.497879,-0.203355,-9.517618,-3.041978,9.414688,1.714962,8.884522,-3.731754,-5.976541,8.717930,2.552947,4.439394,-7.388587,-2.433185,-6.763664,-2.107172,-2.484617,-0.077860,1.873971,4.561134,-8.488853,3.130292,8.878656,-7.279758,-5.117756,8.735237,-5.691412,-6.366032,8.289886,8.212545,5.556545,9.438746,-9.551131,-4.203114,1.515242,4.400645,-9.167457,7.402199,-0.365127,2.691922,4.893077,-9.191189,2.530573,8.302299,-8.647835,7.469242,-1.575908,0.264916,-4.483258,1.887022,3.791668,7.879920,5.421097,9.085085,-8.953706,0.251442,5.994800,-3.791603,-5.618455,-0.185521,-3.514320,-3.864651,-8.176540,3.686570,-3.339529,-5.629179,4.871714,6.178870,-6.298628,6.080988,-2.628868,7.518092,-3.190909,-6.976268,1.846030,5.587117,-4.444294,-1.758206,2.816468,0.963309,-2.315245,5.111645,0.865464,5.257353,0.028529,0.897409,2.305331,-5.028178,-7.075507,-9.577107,6.254349,2.345127,5.490229,-6.669372,5.374357,-8.293975,-8.763029,-2.786986,4.289050,2.060591,-5.164678,-3.311907,0.883441,4.045786,7.031779,4.457055,-5.548160,5.895463,1.940864,-9.395074,3.484136,-6.630088,7.756748,-6.313288,-3.236686,7.050401,-3.265093,-6.010128,-9.404740,2.127765,4.330620,-4.846305,3.724092,-2.115785,-9.649243,6.159646,6.524177,6.020733,-3.231682,0.199008,5.517314,1.985382,-7.753017,-4.340059,-2.780133,0.472698,-5.344757,3.744697,2.497701,-9.713696,-7.477044,9.393213,-6.157595,-5.272410,-2.796193,0.233137,4.306791,5.256553,7.083403,-7.741343,0.700388,8.803540,-6.532982,5.381772,-1.295817,4.569853,-0.298935,9.099839,3.068142,6.907076,0.535744,9.313754,-9.845651,4.643738,-0.895207,9.032386,5.836214,-6.579080,3.657379,2.132664,2.275728,-9.451429,5.756569,-6.968728,-4.419417,9.430149,2.731090,-0.124619,9.302815,7.622878,6.906316,-1.947135,5.242893,-3.492047,-9.242069],[9.403629,-2.621829,2.561672,1.878761,-4.724784,-0.965430,2.278696,4.212208,1.898321,9.523703,-9.123740,4.607333,8.877216,6.383301,3.964281,5.293949,-6.715239,-9.735981,-8.438043,1.471239,0.288518,-5.285479,1.999239,-2.826379,-7.996094,6.226546,9.386839,7.654317,-5.712660,-2.976899,4.708491,-0.755777,-3.608565,5.852945,-2.634532,3.438659,-3.594567,-8.392809,7.335032,-2.560144,4.527263,9.665006,-8.641106,7.133202,1.159337,-5.435215,-5.214224,-0.272238,-8.661866,3.231243,4.005921,-1.216248,-8.231523,5.554993,-1.807777,0.626728,-9.241067,-9.709850,-5.573177,1.388041,5.026275,-4.825626,-1.237344,-9.064518,-6.750220,2.592617,9.852098,-2.894934,-5.748875,1.902039,7.127529,-2.434151,3.430305,8.240604,8.858125,-4.325648,-5.967815,-2.858962,3.290728,6.478701,-9.868039,2.998867,1.879547,7.940672,-8.841739,-4.024270,1.852799,6.643375,1.330587,-2.867298,0.937154,5.540666,8.208913,-5.075955,0.048084,0.929292,-4.663442,7.255373,-0.583044,5.977585,3.185311,-2.600589,9.505545,-7.983322,-0.397215,8.529964,5.534837,-1.174292,-4.659774,7.376214,-1.128402,1.091638,-5.352033,-1.984781,1.003318,2.195391,2.342071,0.289686,4.014667,9.750529,5.901661,4.549967,-7.979010,8.049758,-9.166233,-6.314192,3.129231,1.427934,-4.263015,-8.346472,6.812482,-9.455656,-5.368056,5.437301,3.055306,8.042493,8.317341,0.003785,-0.067568,-5.843733,-3.557827,-6.797755,-4.364012,0.204578,5.070282,-2.635881,0.678600,-8.088382,2.585812,8.107315,-5.622986,6.718223,2.601087,0.623865,4.992797,-0.048561,-3.121340,-3.300920,-3.462928,4.314856,2.536815,-1.027862,9.971260,-4.511339,8.691235,8.377553,8.017884,0.152230,-2.146073,-6.886658,1.342658,7.252369,3.886422,-5.208436,7.458874,-1.392459,-3.588239,5.540398,5.459823,-4.111271,8.833335,-2.620825,-4.159271,0.759341,3.855605,-9.107979,-4.528713,-9.618626,0.055239,6.874505,6.299340,-2.576266,-5.081841,9.081392,0.843466,-6.278778,5.634349,2.326269,2.133759,-0.036951,5.955401,6.501063,-7.873007,0.306687,-6.248668,-7.287111,-2.678720,7.702662,-3.131493,-3.724430,-8.604377,-4.845987,-3.724242,3.565251,-2.449626,-4.640156,3.694657,1.266742,5.572529,7.279724,7.763587,2.992289,-1.838157,5.410114,7.349899,7.496505,-2.306196,-9.306267,8.283146,-6.312255,7.882345,3.852127,-8.110223,7.425427,-0.078301,-3.688332,-4.474207,1.262054,-5.528065,-8.468272,3.601551,-8.713206,0.268570,-8.603199,-4.744434,4.943777,1.121981,-1.096023,1.985459,7.252624,4.393124,-6.583302,-6.956075,-4.868220,-9.146773,-5.753303,-4.916120,7.433378,7.558743,1.408310],[7.535370,-5.142765,4.937530,-2.085562,-5.686735,-3.658105,4.224089,1.204384,9.233657,8.449060,-0.924121,2.694748,-2.502992,3.947047,-8.655413,6.524727,4.039654,-5.221301,5.834375,5.690584,-0.926376,0.321245,-4.767803,1.200009,-4.784442,9.194245,3.921894,-9.812425,-7.333853,5.731625,-7.023028,-9.580575,-2.794445,-6.294163,6.341704,3.298492,-4.975016,-6.229879,-8.657643,-6.223236,-3.946698,5.726211,-9.963028,5.611299,3.656272,3.685680,2.307666,3.704271,-8.880369,9.335698,-5.491229,6.648440,5.311117,6.842934,-2.230657,4.604468,-0.081366,-8.445372,-9.433542,2.326624,-3.558224,2.126051,-1.857941,-6.631284,-3.260472,-9.068864,-9.683018,3.718380,6.278317,5.553651,-7.566527,-4.684457,-3.330170,4.004262,-9.544967,-3.059546,7.536909,0.302223,6.704777,-5.892500,5.552999,-2.246655,5.245673,-8.701908,-1.317231,-7.854017,-3.341953,9.451036,3.333423,2.317665,1.206558,-0.159249,7.116941,-7.789340,6.174696,-1.076654,-5.733431,9.521324,8.419939,-6.223454,8.756989,-6.209892,-4.135412,-8.281357,7.932419,8.252673,-7.060437,7.124928,0.841314,-6.290723,9.374668,-6.701958,9.532994,1.283845,9.766525,-9.707416,-9.304719,-8.502703,0.674300,-6.305684,-3.928335,2.686790,4.312534,-9.333647,9.118327,-9.063447,0.669845,-3.412023,-7.683774,4.504146,9.887805,-8.309828,5.768100,-4.801583,-4.792711,8.860457,6.948833,3.648167,0.264352,7.699413,-7.681503,4.366585,-5.183652,-6.713141,9.211678,-0.717517,1.164644,-2.843631,8.496937,3.194543,6.776836,-8.853683,-9.787480,-3.693250,8.234498,-8.066359,2.117213,-7.495084,5.178956,-7.114893,-2.172800,6.100774,6.544651,-8.477689,6.768965,-3.893940,-5.213717,9.637184,-4.534930,0.976529,9.689255,8.106276,3.319532,0.492261,-4.471189,-9.387937,-5.569598,9.223672,6.044649,9.147942,5.247954,-2.610478,-9.957543,-2.349783,6.418729,3.383925,0.150543,7.564208,-1.440507,0.061432,-9.488759,4.634488,-6.852998,-4.821399,3.894139,-3.814448,-8.170760,-4.691655,-2.169116,3.439216,-9.618914,-2.273228,-1.817761,8.599167,-2.517204,1.127859,-9.741780,-1.870752,4.551402,-9.038988,-4.556655,-6.980124,2.194691,5.962117,6.085720,2.877003,7.594078,-2.743974,0.189687,-6.962805,-5.775955,-5.192012,2.314000,0.737222,-1.859309,5.318570,-6.915988,1.611793,-2.328270,8.367620,5.348488,-7.197479,6.242362,-5.229819,-4.129866,-7.741904,7.846377,3.083530,0.190964,5.233435,-7.790334,-9.568086,-8.418542,9.500670,7.139669,5.064766,2.914813,1.246098,-0.420734,-1.549696,0.717709,3.450809,3.069369,2.337561,-5.268565,-3.534326,7.614150,5.576358,-9.997419,-0.301255],[-2.723063,9.565245,2.522576,-3.105755,-5.223594,-3.223060,4.926557,-4.342470,-6.627076,-8.489724,7.845135,-7.995116,8.876508,-2.160479,-1.023759,2.875029,-3.571981,-2.829913,-8.968003,9.606622,1.475840,-5.356907,-5.299067,-6.050075,-9.895501,3.214561,8.635231,-7.279166,9.450688,9.453924,0.815001,-3.128536,7.960802,-9.133002,6.320817,-9.550004,5.230361,-9.109457,-2.319795,0.703101,8.450330,-8.158149,-9.967435,6.266740,0.261085,5.697557,-1.132342,1.160602,-5.904480,6.292257,3.936239,6.034066,-0.914414,-1.816640,-6.096616,5.927071,-5.533473,-8.388699,-5.484303,9.756380,-2.703966,-1.778684,-1.154405,-1.310272,9.543866,4.446721,-4.835248,-1.593468,-4.285539,2.941032,-0.888770,-1.373583,-6.157685,7.274381,-8.950473,-3.255655,0.446525,2.075471,-2.243228,-8.663259,1.821961,6.039254,-1.736288,-8.540385,-1.031007,4.889137,-1.164210,-0.732437,3.108612,7.214649,-4.377305,-6.174718,9.134332,7.386331,-0.428203,3.165294,5.320019,8.958863,-9.301644,-9.922820,0.826081,4.800714,2.527901,-5.280793,3.408772,2.849231,8.447736,0.960864,4.043676,4.219675,9.651273,-2.402890,4.755013,-6.836400,2.430016,-4.123142,9.236560,6.469996,1.732759,8.600822,2.569425,-5.771349,-3.382485,1.236528,1.368325,8.026938,-4.949765,4.826946,1.674029,9.670173,5.180362,0.847476,-5.724240,8.335571,-1.772466,-7.401639,8.192693,4.988389,5.420405,-5.937834,5.803162,6.722718,9.795003,2.546168,-9.810903,7.305403,-3.374251,-3.406211,0.097139,8.691592,-8.646767,-3.949447,-9.579106,-9.756345,-8.216520,-7.161991,-7.017610,2.748098,3.086570,8.690228,-1.955207,2.967907,0.746406,3.177533,1.313471,1.709525,-6.906535,-0.260396,3.782012,-0.395240,8.482636,2.521056,-1.396365,3.377800,4.266511,-1.263704,3.011507,-1.340465,6.762514,-7.211857,-8.764049,1.523625,7.216673,-4.871769,-0.667318,-1.494034,5.149716,5.076548,6.652578,0.493222,7.351591,-6.392153,0.140238,-9.341602,-3.074266,-3.234444,-0.481986,5.660576,5.429176,-7.742764,4.708307,7.074016,-0.243139,-9.172197,5.615213,-4.565332,8.266434,9.142090,7.288670,-4.106550,-8.086563,9.549838,-2.279519,-1.164404,-6.240288,9.972674,-9.801298,-7.083400,7.306885,-4.337496,7.382120,-3.500668,9.606423,8.293246,3.101564,-8.059473,-5.076577,-8.603513,-9.740898,-7.370184,9.711316,-9.381884,-1.225592,-4.791521,-8.314130,-2.605819,2.096149,-0.581102,1.099073,5.504390,3.253772,-8.563303,2.511675,-9.750013,-7.871717,-8.803349,-1.479915,1.249858,-6.960754,6.303038,-6.327382,-7.045497,-7.868013,-6.140015,-1.723163,-2.278793,7.299218,-5.159097,6.526947,-4.078333],[4.390819,5.703872,-5.307089,6.593505,-6.577853,9.940113,-4.437277,-2.465882,-9.215000,-2.721617,-3.382585,7.516695,-9.491290,8.988651,-8.505303,1.548305,-0.774426,-2.491631,4.028585,5.490510,-1.530800,-5.048549,-4.646087,5.728883,1.648576,-1.937923,-6.619953,9.819381,3.120190,-5.232910,-2.660110,1.258035,-0.051841,4.714912,1.291339,0.975654,4.431902,0.929396,-6.275764,7.172135,-0.590607,9.449763,9.776170,9.040256,5.102133,-4.425128,2.336319,3.140784,3.106930,2.647108,9.166743,-5.911630,-2.723119,2.538965,-5.567275,-7.821747,-6.078960,6.128584,-0.956613,-7.105964,-0.943208,-9.506845,-1.490516,4.010231,-7.950813,3.242062,4.638104,7.923505,1.595403,-3.269022,2.383956,-7.484785,8.681231,4.198313,7.490614,0.906160,-3.391216,5.067514,9.894144,3.037913,-9.042607,-8.153573,-1.042262,4.142056,-8.117610,-6.110813,1.131835,4.328352,-0.647836,-4.142806,-0.550392,-3.959357,3.054813,1.347747,-6.513804,1.746684,3.352758,4.481121,8.183232,8.292419,-6.637164,7.468832,0.342870,-9.861615,4.243806,5.640765,5.607758,-4.508550,2.358442,1.842869,-4.477776,-9.838581,-3.151498,-3.689015,6.562182,3.748733,2.166530,0.970825,3.872427,-7.956470,-8.929636,-3.052400,5.655819,3.302513,5.109680,6.738690,2.847200,2.132469,6.601462,8.193279,-8.823726,-7.068207,9.139848,-6.983518,-5.144330,0.343565,-7.446066,-3.067451,-8.753560,-9.682077,-0.374259,-6.364386,-8.295463,-2.426491,8.546782,-2.463427,-8.744262,1.645597,-1.621206,9.197809,-1.507200,5.178707,-3.427550,2.483495,6.286548,-7.925709,8.608949,2.121606,3.099110,1.850619,3.321943,-4.894614,-8.246860,6.238248,4.864716,9.643408,5.212839,-7.032253,-4.267642,0.325334,7.972835,-0.398763,-6.469413,-0.336196,3.751360,-6.820459,1.175512,-9.545406,-5.286005,-7.005855,-6.365641,5.135165,5.705932,-0.402076,7.399454,1.179991,4.969533,8.419416,-2.102941,2.080760,5.688668,-0.569536,-2.701493,8.259729,5.404730,-9.247557,7.746647,8.397851,9.456901,5.459806,9.827658,-0.951037,-9.706691,-5.080406,0.640021,-8.890025,2.454791,-2.126883,8.293684,-7.047204,9.447346,8.911113,2.940233,5.629735,-9.318231,8.235028,-1.268986,-0.920541,-9.516605,1.174827,9.732050,-4.257175,-4.382705,-1.167129,-2.134075,-3.535073,-8.295036,9.419111,3.664669,-8.082988,9.944189,9.581098,4.074846,-3.297798,5.631669,-4.031512,3.157111,7.743718,6.799366,6.824153,7.887099,9.856053,9.074864,6.200938,-3.094139,-8.193730,1.007959,6.484124,-0.767247,-4.830609,4.345359,-3.094223,-6.963342,-8.540339,6.253916,3.558680,-5.630323,-7.438876,2.843407,-7.383429]], dtype = "float32")#candidate|7336|(9, 260)|const|float32
var_7337 = relay.var("var_7337", dtype = "int64", shape = ())#candidate|7337|()|var|int64
const_7338 = relay.const([-2,4,2,7,-5,3,5,9,4,7,-8,-1,3,-9,10,4,5,-8,-5,4,3,7,-5,-9,4,6,-7,8,-10,9,-1,6,2,2,-10,7,-4,-3,-3,-9,-10,-10,1,7,7,5,-8,5,-4,-9,-3,-10,-3,7,3,4,2,10,-3,7,4,9,3,-4,-3,5,-9,5,6,-9,-8,4,-8,5,5,5,-4,-1,-10,-7,-8,-9,5,-1,5,-2,3,-5,4,6,10,9,8,4,-5,-1,3,-9,1,3,-10,-9,3,-7], dtype = "int64")#candidate|7338|(104,)|const|int64
call_7334 = relay.TupleGetItem(func_6687_call(relay.reshape(var_7335.astype('uint8'), [16, 7, 12]), relay.reshape(var_7335.astype('uint8'), [16, 7, 12]), relay.reshape(var_7335.astype('uint8'), [16, 7, 12]), relay.reshape(const_7336.astype('float32'), [2340,]), relay.reshape(var_7337.astype('int64'), []), relay.reshape(const_7338.astype('int64'), [104,]), ), 5)
call_7339 = relay.TupleGetItem(func_6695_call(relay.reshape(var_7335.astype('uint8'), [16, 7, 12]), relay.reshape(var_7335.astype('uint8'), [16, 7, 12]), relay.reshape(var_7335.astype('uint8'), [16, 7, 12]), relay.reshape(const_7336.astype('float32'), [2340,]), relay.reshape(var_7337.astype('int64'), []), relay.reshape(const_7338.astype('int64'), [104,]), ), 5)
output = relay.Tuple([bop_7328,call_7334,var_7335,const_7336,var_7337,const_7338,])
output2 = relay.Tuple([bop_7331,call_7339,var_7335,const_7336,var_7337,const_7338,])
func_7341 = relay.Function([var_7319,var_7335,var_7337,], output)
mod['func_7341'] = func_7341
mod = relay.transform.InferType()(mod)
var_7342 = relay.var("var_7342", dtype = "float32", shape = (3, 243))#candidate|7342|(3, 243)|var|float32
var_7343 = relay.var("var_7343", dtype = "uint8", shape = (1344,))#candidate|7343|(1344,)|var|uint8
var_7344 = relay.var("var_7344", dtype = "int64", shape = ())#candidate|7344|()|var|int64
output = func_7341(var_7342,var_7343,var_7344,)
func_7345 = relay.Function([var_7342,var_7343,var_7344,], output)
mutated_mod['func_7345'] = func_7345
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4903_call = mod.get_global_var('func_4903')
func_4905_call = mutated_mod.get_global_var('func_4905')
call_7352 = func_4903_call()
call_7353 = func_4903_call()
func_6836_call = mod.get_global_var('func_6836')
func_6837_call = mutated_mod.get_global_var('func_6837')
call_7374 = relay.TupleGetItem(func_6836_call(), 0)
call_7375 = relay.TupleGetItem(func_6837_call(), 0)
output = relay.Tuple([call_7352,call_7374,])
output2 = relay.Tuple([call_7353,call_7375,])
func_7423 = relay.Function([], output)
mod['func_7423'] = func_7423
mod = relay.transform.InferType()(mod)
output = func_7423()
func_7424 = relay.Function([], output)
mutated_mod['func_7424'] = func_7424
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3933_call = mod.get_global_var('func_3933')
func_3934_call = mutated_mod.get_global_var('func_3934')
call_7472 = relay.TupleGetItem(func_3933_call(), 0)
call_7473 = relay.TupleGetItem(func_3934_call(), 0)
func_4259_call = mod.get_global_var('func_4259')
func_4263_call = mutated_mod.get_global_var('func_4263')
const_7478 = relay.const([6,9,-4,-1,-5,-5,10,2,-8,9,1,8,4,-3,2,5,3,6,-5,4,-9,-1,-1,-2,1,-4,9,-2,-2,5,1,3], dtype = "uint64")#candidate|7478|(32,)|const|uint64
var_7479 = relay.var("var_7479", dtype = "uint64", shape = (288,))#candidate|7479|(288,)|var|uint64
call_7477 = relay.TupleGetItem(func_4259_call(relay.reshape(const_7478.astype('uint64'), [1, 4, 8]), relay.reshape(var_7479.astype('uint64'), [9, 4, 8]), ), 0)
call_7480 = relay.TupleGetItem(func_4263_call(relay.reshape(const_7478.astype('uint64'), [1, 4, 8]), relay.reshape(var_7479.astype('uint64'), [9, 4, 8]), ), 0)
func_1157_call = mod.get_global_var('func_1157')
func_1158_call = mutated_mod.get_global_var('func_1158')
call_7487 = relay.TupleGetItem(func_1157_call(), 1)
call_7488 = relay.TupleGetItem(func_1158_call(), 1)
func_4393_call = mod.get_global_var('func_4393')
func_4395_call = mutated_mod.get_global_var('func_4395')
call_7505 = relay.TupleGetItem(func_4393_call(), 3)
call_7506 = relay.TupleGetItem(func_4395_call(), 3)
uop_7515 = relay.sigmoid(call_7505.astype('float32')) # shape=(81, 9)
uop_7517 = relay.sigmoid(call_7506.astype('float32')) # shape=(81, 9)
func_6992_call = mod.get_global_var('func_6992')
func_6993_call = mutated_mod.get_global_var('func_6993')
call_7522 = relay.TupleGetItem(func_6992_call(), 1)
call_7523 = relay.TupleGetItem(func_6993_call(), 1)
uop_7530 = relay.log2(uop_7515.astype('float32')) # shape=(81, 9)
uop_7532 = relay.log2(uop_7517.astype('float32')) # shape=(81, 9)
var_7533 = relay.var("var_7533", dtype = "float32", shape = (81, 9))#candidate|7533|(81, 9)|var|float32
bop_7534 = relay.add(uop_7530.astype('int8'), relay.reshape(var_7533.astype('int8'), relay.shape_of(uop_7530))) # shape=(81, 9)
bop_7537 = relay.add(uop_7532.astype('int8'), relay.reshape(var_7533.astype('int8'), relay.shape_of(uop_7532))) # shape=(81, 9)
const_7550 = relay.const([[-4.089691,-2.958729,9.385463,3.309738,-3.915292,3.659947,1.729696,3.155405,-6.613216],[-8.837545,2.072768,9.053766,6.379630,7.625774,-0.513894,-2.879844,-8.777491,6.587282],[2.785631,0.934924,-3.620036,-5.562789,8.770056,2.129438,-5.927052,-5.406187,8.888285],[1.357274,-3.706004,8.108862,6.815388,1.750551,-3.336516,0.129309,-9.065469,3.729836],[-4.414840,-6.237870,-1.085615,8.599037,-5.627632,-3.469883,-6.910913,-0.391495,-9.183271],[4.005157,3.395092,7.709910,9.929144,-9.996063,0.463481,7.851382,2.982894,7.184369],[6.644167,-0.775815,-7.598041,4.493168,-3.895550,-5.086518,-0.682363,-4.700905,-0.120527],[6.469295,6.111533,4.867065,-2.274850,-9.470418,0.277162,4.584165,-3.968873,-3.466454],[-6.322843,6.385851,1.839471,7.877418,6.885075,-5.334598,7.310517,-3.354157,1.499308],[-6.268795,-6.558505,4.638750,-3.022666,-6.297769,-8.382848,-3.476783,-3.544479,1.680802],[2.127216,0.982549,-3.506381,-6.444546,-8.880667,-3.663413,4.081662,6.533565,9.991221],[8.443281,5.324852,2.230376,-9.362984,-9.922045,7.963445,-5.043956,-7.205968,-6.734497],[5.659248,-7.588017,1.315453,7.671523,0.855893,-2.940184,6.066520,4.631508,8.360880],[-3.782599,-5.729419,-8.441760,-6.406359,-1.147828,9.514714,-0.650899,1.357090,-5.155591],[9.010743,5.356160,-7.277864,-3.979812,7.005008,-0.966197,-2.401407,-2.807597,3.054557],[-7.553214,-2.902099,-6.775122,4.437752,-9.909400,6.951765,5.712793,0.637523,-9.960862],[-4.210345,2.641082,-6.021288,-2.459647,7.386825,0.319761,-6.406230,-4.927560,-1.716432],[-0.935731,2.772565,-0.419856,2.098709,-2.885702,8.582022,-9.420220,2.519789,5.656328],[0.592613,-1.361573,2.104034,1.626968,9.781563,-7.403300,-0.547070,-0.800781,7.263013],[-9.318356,-0.109686,5.291983,2.759254,-2.542588,-4.965512,-8.514291,0.335942,-7.381772],[-9.301821,-7.329262,5.320284,1.241656,8.775375,-3.240409,2.560864,8.160785,6.887642],[2.680198,-1.213849,9.111494,9.429590,-0.900009,-4.031793,0.656346,-9.002408,-3.212063],[-3.837114,1.929664,5.472004,5.175368,8.402448,9.573708,6.807745,1.493795,-6.412997],[-2.615342,0.086162,-3.823822,1.204917,-0.660321,-4.559977,-8.498431,4.192472,-4.593420],[9.759476,1.158673,0.085355,4.769694,5.810990,-4.259252,4.225662,0.709973,-2.397912],[-2.139126,-1.195787,4.331475,5.477688,5.554549,-0.574318,-6.680073,1.620623,-2.543506],[-4.040788,-5.984527,-9.737048,0.130614,5.658034,-2.332581,-5.713743,-3.274524,-3.435289],[7.014441,8.174562,-0.391984,6.783068,7.883811,-2.912912,3.905769,0.857363,-7.623634],[-6.725515,9.154760,-2.926993,4.740959,-1.437278,6.602367,-3.766588,-6.793184,-6.903083],[1.647546,1.912243,-4.949499,-9.835601,-0.631257,1.898742,4.117211,-3.023834,-2.977195],[0.363048,-6.399146,8.494205,-7.904969,-4.739332,7.775415,7.069898,-3.201227,7.847116],[-9.155477,-8.878734,1.029627,4.575853,-1.202583,5.187660,-2.080497,-8.710269,-3.736873],[6.981375,8.218092,0.494853,-3.700188,8.546623,-7.831964,8.755933,-3.181709,1.561776],[-2.169906,7.953022,9.202187,0.675912,2.934851,-8.049503,4.738990,-3.649800,5.812346],[2.511898,-1.288723,3.326170,0.799515,3.102735,-2.237041,5.190029,3.587850,7.213346],[8.774887,-7.045524,6.327880,-7.967457,-1.085739,4.128612,-0.964539,9.070348,-4.149654],[5.682776,-3.259875,9.589734,-4.311092,2.239846,1.735425,-6.492469,8.595286,1.684376],[2.169902,6.777676,-1.149864,0.350904,5.560300,4.428971,2.035154,5.139359,8.591972],[0.608001,0.646559,1.661846,6.835102,1.290968,5.288053,8.934442,-6.383522,-1.218075],[-1.340837,3.837036,6.551175,7.654921,-5.600357,-4.869038,6.923046,5.745528,-3.076722],[-2.097913,-8.639907,-6.323364,-1.978497,-1.497847,-8.087669,-3.849721,-7.126309,-2.652609],[-2.793506,3.927794,-5.351840,2.863656,2.711198,-9.937985,2.116587,2.942680,-4.331176],[6.928864,-3.083557,2.246630,4.288062,4.381123,5.903414,4.777826,3.687288,-5.831942],[-9.392259,9.728732,-1.900805,4.299520,-7.551384,9.440535,-9.728312,-3.093379,-7.467015],[6.129558,5.809939,-9.628305,-1.693882,-5.603789,-0.662605,6.467292,-9.987210,-6.016662],[-9.629699,8.453940,-3.836094,5.089000,3.534688,9.879891,2.277375,1.123874,7.123071],[8.431785,5.646739,4.002100,7.570640,-0.304447,-9.839280,-7.322604,-8.417722,9.628922],[3.315237,9.237604,-2.149276,-8.552243,1.412082,-6.124496,7.869089,-7.480059,-7.067134],[-7.614279,-5.849424,8.802951,3.675630,3.223249,7.812127,4.319470,5.955569,-5.334389],[7.608817,8.353006,-2.102331,-2.581244,-2.789954,5.179331,-4.289107,-4.894646,-4.487079],[9.816488,8.633656,-7.059825,-7.250581,7.100760,-0.564472,4.283800,7.026145,3.841616],[5.009357,5.787249,-6.202845,-1.547608,9.594759,-0.098931,-6.262328,2.915825,-6.808909],[3.145622,6.221607,9.020824,-2.811484,-4.458193,1.639974,5.165345,8.471214,-3.825101],[0.315736,-8.919908,6.271604,2.697387,0.934723,-4.992328,-7.100233,-3.097083,-6.856595],[7.986744,-5.688901,-2.419083,1.475595,-2.838072,2.293703,1.182282,2.376339,6.149372],[-9.918503,3.098716,7.394874,6.672132,5.882057,-2.237930,2.398127,-1.507646,7.843502],[-0.101818,-8.765694,9.752867,2.116306,5.730129,-5.683305,-8.671615,7.547143,-5.307218],[3.668972,-2.747900,8.216384,-1.936225,-6.033955,4.313311,-9.075274,2.646134,-1.266447],[-0.163677,3.545639,9.942803,-2.305494,-6.970534,6.955153,-2.373636,-9.727255,6.576858],[4.436626,6.513472,-4.800413,8.501430,-6.893761,4.309318,6.782691,-8.060021,6.755811],[1.279327,6.559136,5.869999,-8.271992,6.313684,-0.813840,3.440782,7.059718,-9.117037],[5.389587,-9.392784,-9.990915,-1.519360,8.139712,-9.833783,-2.949628,-9.943122,1.182640],[-9.469781,3.754648,-7.902251,-4.771603,-6.213078,-4.353119,6.640886,-6.291374,2.314010],[-3.043462,6.847615,3.904558,-0.133993,3.876732,4.344755,6.682937,-8.470794,-5.254918],[-0.541873,-5.445888,-9.070000,9.433742,-4.482069,8.036421,-4.906116,-4.068126,2.442296],[4.453395,6.987457,-6.437685,2.998140,1.822775,-3.796780,6.149882,-0.523925,2.481617],[-9.544696,1.760517,4.465895,4.889155,-2.981419,5.973074,3.229597,3.585139,1.257648],[5.498218,1.332045,-3.516596,-4.196075,8.768400,-1.194590,6.016189,8.595321,5.565919],[8.287431,4.327639,-9.584820,4.254486,2.145008,9.324728,-5.537316,-3.067014,2.662074],[-0.009252,-9.887627,-9.377265,-6.394967,0.741058,-9.835132,-8.109569,2.321702,4.771562],[-4.639061,0.408718,-0.894132,-1.088918,-1.675949,-8.522646,-6.269544,7.928361,-3.313686],[7.424494,-4.922796,8.197244,8.142984,-7.016000,8.406207,0.331431,6.893892,2.233761],[7.334845,-0.642785,-4.993914,2.627509,1.982436,5.057267,-4.866957,3.467509,-1.377826],[-9.728401,-5.031940,-4.183583,-9.284734,-9.026646,8.379730,3.344399,1.520969,-0.831940],[9.511086,-9.603606,-2.928115,-7.132826,-7.883820,2.654819,-3.420644,6.496010,5.283011],[-7.753374,2.327319,6.898605,4.529826,4.307626,-8.400474,-0.643408,7.311532,1.674951],[6.611183,-9.169825,2.695982,-9.398876,8.757642,-7.077093,1.988868,7.714730,2.267199],[2.893062,8.531031,-0.544835,-6.165286,3.783920,8.038672,-1.927422,5.292476,0.465680],[-1.025063,-0.439912,1.171087,-2.338326,-5.897102,1.974406,-5.347901,-1.303006,5.227803],[-6.603144,0.640553,1.187851,-3.942857,5.859406,-4.738219,-6.172645,-7.009825,0.373328],[4.622402,2.159769,5.785827,-0.310999,1.600103,6.252767,4.032575,5.016410,-9.931270]], dtype = "float32")#candidate|7550|(81, 9)|const|float32
bop_7551 = relay.power(uop_7515.astype('float64'), relay.reshape(const_7550.astype('float64'), relay.shape_of(uop_7515))) # shape=(81, 9)
bop_7554 = relay.power(uop_7517.astype('float64'), relay.reshape(const_7550.astype('float64'), relay.shape_of(uop_7517))) # shape=(81, 9)
func_4067_call = mod.get_global_var('func_4067')
func_4068_call = mutated_mod.get_global_var('func_4068')
call_7560 = func_4067_call()
call_7561 = func_4067_call()
bop_7570 = relay.mod(bop_7551.astype('float32'), relay.reshape(uop_7530.astype('float32'), relay.shape_of(bop_7551))) # shape=(81, 9)
bop_7573 = relay.mod(bop_7554.astype('float32'), relay.reshape(uop_7532.astype('float32'), relay.shape_of(bop_7554))) # shape=(81, 9)
func_5811_call = mod.get_global_var('func_5811')
func_5814_call = mutated_mod.get_global_var('func_5814')
call_7577 = relay.TupleGetItem(func_5811_call(relay.reshape(var_7533.astype('float32'), [3, 243])), 3)
call_7578 = relay.TupleGetItem(func_5814_call(relay.reshape(var_7533.astype('float32'), [3, 243])), 3)
func_2716_call = mod.get_global_var('func_2716')
func_2718_call = mutated_mod.get_global_var('func_2718')
call_7588 = relay.TupleGetItem(func_2716_call(), 0)
call_7589 = relay.TupleGetItem(func_2718_call(), 0)
uop_7590 = relay.asin(bop_7534.astype('float32')) # shape=(81, 9)
uop_7592 = relay.asin(bop_7537.astype('float32')) # shape=(81, 9)
output = relay.Tuple([call_7472,call_7477,const_7478,var_7479,call_7487,call_7522,call_7560,bop_7570,call_7577,call_7588,uop_7590,])
output2 = relay.Tuple([call_7473,call_7480,const_7478,var_7479,call_7488,call_7523,call_7561,bop_7573,call_7578,call_7589,uop_7592,])
func_7595 = relay.Function([var_7479,var_7533,], output)
mod['func_7595'] = func_7595
mod = relay.transform.InferType()(mod)
var_7596 = relay.var("var_7596", dtype = "uint64", shape = (288,))#candidate|7596|(288,)|var|uint64
var_7597 = relay.var("var_7597", dtype = "float32", shape = (81, 9))#candidate|7597|(81, 9)|var|float32
output = func_7595(var_7596,var_7597,)
func_7598 = relay.Function([var_7596,var_7597,], output)
mutated_mod['func_7598'] = func_7598
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3768_call = mod.get_global_var('func_3768')
func_3769_call = mutated_mod.get_global_var('func_3769')
call_7606 = func_3768_call()
call_7607 = func_3768_call()
func_4716_call = mod.get_global_var('func_4716')
func_4717_call = mutated_mod.get_global_var('func_4717')
call_7608 = relay.TupleGetItem(func_4716_call(), 0)
call_7609 = relay.TupleGetItem(func_4717_call(), 0)
func_6836_call = mod.get_global_var('func_6836')
func_6837_call = mutated_mod.get_global_var('func_6837')
call_7630 = relay.TupleGetItem(func_6836_call(), 0)
call_7631 = relay.TupleGetItem(func_6837_call(), 0)
func_2676_call = mod.get_global_var('func_2676')
func_2677_call = mutated_mod.get_global_var('func_2677')
call_7676 = func_2676_call()
call_7677 = func_2676_call()
const_7684 = relay.const([[-7.961199,-8.318597,-4.114120,8.244160,8.054111,-3.472433,4.573794,-4.502182,-5.025038,7.994373,8.278566,6.639418,5.742234,1.518861,-6.707627,1.316366,0.487594,5.700739,7.720815,-4.972647,9.587202,-5.546405,3.105214,1.893583,-2.972358,-9.967976,-6.835761,-9.674851,0.650705,-9.841861,-5.634909,-8.372933,6.339284,-6.944486,9.050318,6.795400,4.275343,6.367735,-0.938534,0.230033,6.727250,-1.884162,6.387957,2.208062,2.272999,1.506854,2.813879,2.662919,8.093874,4.349936,-1.482850,5.664095,-8.986505,-4.672748,1.939483,-1.961130,-3.567799,3.000087,5.837543,-8.203231,-8.511466,-4.690553,-1.414623,5.694742,0.002030,-4.531668,7.362742,-3.762672,-6.636880,2.714614,-6.548008,-1.936446,-8.553610,-1.069356,-1.013989,-0.059413,-9.692389,-0.152955,-9.512282,7.125352,-2.180991,-9.886614,3.077621,-9.112571,4.384047,-4.463815,1.542103,-5.129040,-0.903799,6.158657,-3.452186,3.335320,-2.914881,6.950585,2.500345,6.228943,-7.494025,-6.240832,-2.392744,5.841981,-5.945755,6.347220,-5.687866,0.135664,-8.676575,7.458248,8.015711,-6.581545,-5.043313,-3.433114,-1.006392,2.665994,4.534381,-1.532361,-0.310153,-4.459186,0.185778,-0.529246,1.171272,-8.450446,-5.150253,-2.764664,4.366811,-3.093715,-9.997894,1.116557,-1.532492,7.692528,-6.843116,6.671923,3.270017,3.483116,4.782127,-8.473192,-3.423276,-8.547653,-7.177161,-8.736367,8.148596,1.111262,3.798027,-5.153443,-7.884735,-6.631307,-3.639834,4.989940,5.976806,-9.268529,0.552939,2.142543,-1.667414,-2.723041,0.297588,-7.048232,7.030312,-6.090237,-1.571335,-1.355840,7.439209,-9.726135,-9.517841,3.788192,-2.502220,-1.327260,0.091311,9.672399,-4.741942,-5.565824,-6.967563,-7.622012,3.624514,3.552410,-7.518980,-1.660835,-8.222070,7.187367,-5.150139,-9.309976,-1.704835,-5.559820,-9.245068,8.549670,-3.022235,-9.976950,-9.839431,-3.818110,-1.763292,-1.000863,-3.691762,-6.287939,0.337625,9.896653,-4.026001,-8.214208,7.306657,-1.238266,6.170547,-0.404174,-0.429979,-0.464411,9.144957,-3.089691,-9.751621,-3.320181,8.735451,9.618163,-6.406954,-5.657145,-6.796244,-3.665587,-0.972971,-1.701272,-2.196454,4.008070,2.818735,-9.198391,-1.704988,-6.126333,2.224660,7.148608,5.390996,8.939752,-8.288512,0.863577,-1.890765,-6.414426,-7.753501,-2.209073,0.390310,7.832088,-4.403196,0.496223,-4.320113,8.492706,7.001279,-7.314456,-0.161289,-6.344608,-5.454107,4.991334,9.501922,5.728967,-6.445307],[8.155132,4.378143,7.552309,-1.974073,-9.388465,-6.172596,-4.074286,6.488469,1.830785,-4.952433,-2.471663,2.296417,3.163305,5.892798,-6.764862,7.193695,9.186301,9.434669,-3.132628,9.287587,-7.693587,-4.821785,7.052486,-9.924957,0.906099,9.908350,2.534262,-8.913157,3.641719,6.512749,1.448453,2.374668,6.776163,7.288030,-7.123241,-7.609744,4.559059,9.853386,-8.425332,2.234550,-5.577442,2.487579,3.193171,8.711259,3.819830,-0.978246,3.033118,3.219926,-0.034619,-6.186889,-8.029810,-7.626922,1.728886,-7.069463,5.492047,-3.297980,-1.764870,0.589664,9.530724,5.252733,5.776834,4.104464,1.564092,1.810721,-9.171549,4.256494,-1.225174,-8.031010,6.127112,-4.927467,-4.684483,3.958523,-5.726571,-9.793425,0.078744,5.601790,9.967374,3.469868,7.936533,7.120057,-1.358346,-3.988557,-9.355186,-0.927953,-1.443346,-4.665324,9.304977,0.703149,-8.536133,2.509471,3.419815,-9.457147,-1.378967,-5.030154,-4.359106,1.801790,-6.630066,6.306523,-1.924225,-7.688948,-6.984761,4.985573,-2.890207,-9.649194,-9.514542,-7.108164,-5.675060,-1.859191,-7.970923,-2.122714,-0.253421,9.021698,-5.295608,4.123874,2.182424,7.726420,-0.843768,3.409697,5.331072,5.296552,-2.595629,-6.361862,-0.667543,4.378927,4.642091,2.798603,9.229671,-6.101946,-4.127273,-7.297648,1.317367,9.119412,-1.302309,3.159195,-5.997619,4.808635,-9.204124,2.842583,-8.440952,-8.350094,0.060247,-5.175868,-4.794376,-8.176275,-0.829399,-1.737667,-9.991997,-2.921620,1.239288,-8.090924,-4.564057,-0.993493,5.047442,-9.478797,-4.976904,3.085570,-5.082379,-0.363504,-7.509207,6.040020,6.159766,5.307983,-3.589019,-5.422211,6.895391,1.175662,-1.343194,-6.675983,-3.074205,0.210992,4.267953,-5.487488,-8.166305,1.121678,2.341276,-4.069086,-1.327174,-3.024395,1.770563,-2.674527,2.026471,-3.697739,0.324275,-3.849003,8.794185,-0.514458,-6.052585,1.370128,2.755561,-5.121165,8.566557,6.705588,-6.226379,-8.179161,-0.584008,-6.865047,9.989593,9.910875,2.158955,-0.539620,-6.285723,-4.059862,1.621162,6.440411,-3.635669,8.159353,-3.771603,3.223580,-9.510988,-0.609677,3.288324,-7.847176,-0.661887,0.515164,1.636995,-1.885295,0.485013,4.702863,-4.644662,4.054852,-4.820446,2.015055,-0.635483,9.316160,-8.344590,5.748132,-0.372405,-5.240576,-7.209913,-5.948731,0.550953,0.094516,1.069629,9.751585,0.372286,-0.405820,7.572536,8.245706,7.336938,-3.747340,-7.778582,6.696654,-4.439763],[9.340696,5.546721,-7.606116,6.921830,1.014413,-0.963120,-9.602360,-7.393541,5.903074,-9.360605,0.812761,6.987552,-0.116482,9.088283,-5.693198,5.194352,-8.410300,-9.495874,-5.212526,-4.304264,-5.277376,-9.003153,5.566998,-5.897239,6.302649,4.513458,-5.499793,-9.436473,-4.890118,-7.169012,0.290586,6.953141,-8.370962,3.907704,1.771318,8.304478,-8.672913,-4.500184,-5.880588,9.028837,-8.425934,-7.885707,7.851030,0.359174,-5.447683,8.754156,2.016840,-0.009021,-3.286021,-6.758662,6.246568,8.747778,-4.542950,6.904356,-0.487012,-2.741650,2.589548,1.601507,8.877398,8.751955,-7.614046,-1.663964,8.971249,-5.796810,-9.258951,5.491766,-3.436587,4.094324,-7.408124,5.063085,0.820662,0.309025,-6.338588,-5.954885,4.568468,7.625140,-2.194496,-9.691642,-5.076067,0.922047,7.581681,6.291273,2.070930,-5.628595,4.785650,1.563697,4.332245,-2.132576,6.981041,-5.404618,-7.935446,8.772491,4.802633,-9.542239,-4.076990,-1.648038,-7.386955,4.594840,-0.240513,9.338495,1.107088,5.468234,-7.315219,-9.653759,-6.643731,-8.698673,-7.667703,4.369124,1.289805,-4.192948,1.155978,-7.690967,-3.949514,1.486062,7.820651,-8.946618,1.575177,-4.669419,4.904831,-7.610365,8.231041,-5.510981,-6.173844,0.895997,4.369118,1.932049,-4.858408,-3.385330,8.007976,3.155358,1.425419,3.629823,7.527177,-5.534530,-1.592451,-4.159151,4.230076,1.466179,-6.495201,-1.538491,-9.092734,-5.908665,8.299223,7.338531,9.675596,7.642121,2.140919,0.915505,-2.230191,5.210658,-3.651549,-2.726255,8.434071,0.480051,-0.359883,9.122612,6.891836,3.265532,9.609560,7.638976,-8.670533,3.295179,0.693116,-3.255505,-7.264612,-4.980584,-2.108940,-0.339417,6.744573,6.859669,0.044565,-8.363826,8.714468,0.715492,4.546879,8.233664,-1.448212,8.197851,3.193365,0.579527,1.100366,6.552118,8.080854,7.216834,4.306451,-0.834177,-6.294648,-4.693429,5.030478,-1.437594,-0.722496,-5.835025,-6.293976,5.310258,1.755910,5.881114,-2.267112,-1.698124,-1.890277,-6.945286,1.903564,7.982528,-4.786726,8.126202,1.735103,-2.561908,6.121237,-8.775430,-2.926312,2.303828,8.597722,-4.431848,9.245379,8.248139,6.138956,-8.086468,-8.921258,-3.583245,9.833256,-8.750343,9.808412,-8.224866,4.029575,-2.330974,-9.150901,-3.548217,-4.382084,-3.101315,0.543775,6.309769,7.424594,4.761401,8.640683,-9.330637,3.165345,-6.167221,8.496719,5.037283,2.987573,-7.942070,-3.706654,7.093411,-6.836311]], dtype = "float32")#candidate|7684|(3, 243)|const|float32
bop_7685 = relay.not_equal(call_7676.astype('bool'), relay.reshape(const_7684.astype('bool'), relay.shape_of(call_7676))) # shape=(3, 243)
bop_7688 = relay.not_equal(call_7677.astype('bool'), relay.reshape(const_7684.astype('bool'), relay.shape_of(call_7677))) # shape=(3, 243)
func_2013_call = mod.get_global_var('func_2013')
func_2014_call = mutated_mod.get_global_var('func_2014')
call_7692 = func_2013_call()
call_7693 = func_2013_call()
uop_7696 = relay.erf(bop_7685.astype('float32')) # shape=(3, 243)
uop_7698 = relay.erf(bop_7688.astype('float32')) # shape=(3, 243)
output = relay.Tuple([call_7606,call_7608,call_7630,call_7692,uop_7696,])
output2 = relay.Tuple([call_7607,call_7609,call_7631,call_7693,uop_7698,])
func_7699 = relay.Function([], output)
mod['func_7699'] = func_7699
mod = relay.transform.InferType()(mod)
mutated_mod['func_7699'] = func_7699
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7699_call = mutated_mod.get_global_var('func_7699')
call_7700 = func_7699_call()
output = call_7700
func_7701 = relay.Function([], output)
mutated_mod['func_7701'] = func_7701
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7308_call = mod.get_global_var('func_7308')
func_7309_call = mutated_mod.get_global_var('func_7309')
call_7713 = relay.TupleGetItem(func_7308_call(), 3)
call_7714 = relay.TupleGetItem(func_7309_call(), 3)
uop_7723 = relay.sinh(call_7713.astype('float32')) # shape=(1560,)
uop_7725 = relay.sinh(call_7714.astype('float32')) # shape=(1560,)
func_7195_call = mod.get_global_var('func_7195')
func_7197_call = mutated_mod.get_global_var('func_7197')
call_7729 = relay.TupleGetItem(func_7195_call(), 0)
call_7730 = relay.TupleGetItem(func_7197_call(), 0)
output = relay.Tuple([uop_7723,call_7729,])
output2 = relay.Tuple([uop_7725,call_7730,])
func_7733 = relay.Function([], output)
mod['func_7733'] = func_7733
mod = relay.transform.InferType()(mod)
output = func_7733()
func_7734 = relay.Function([], output)
mutated_mod['func_7734'] = func_7734
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4067_call = mod.get_global_var('func_4067')
func_4068_call = mutated_mod.get_global_var('func_4068')
call_7775 = func_4067_call()
call_7776 = func_4067_call()
func_5074_call = mod.get_global_var('func_5074')
func_5075_call = mutated_mod.get_global_var('func_5075')
call_7820 = relay.TupleGetItem(func_5074_call(), 0)
call_7821 = relay.TupleGetItem(func_5075_call(), 0)
func_248_call = mod.get_global_var('func_248')
func_251_call = mutated_mod.get_global_var('func_251')
var_7825 = relay.var("var_7825", dtype = "float64", shape = (520,))#candidate|7825|(520,)|var|float64
call_7824 = relay.TupleGetItem(func_248_call(relay.reshape(var_7825.astype('float64'), [4, 13, 10])), 0)
call_7826 = relay.TupleGetItem(func_251_call(relay.reshape(var_7825.astype('float64'), [4, 13, 10])), 0)
uop_7838 = relay.log2(call_7824.astype('float32')) # shape=(4, 13, 10)
uop_7840 = relay.log2(call_7826.astype('float32')) # shape=(4, 13, 10)
output = relay.Tuple([call_7775,call_7820,var_7825,uop_7838,])
output2 = relay.Tuple([call_7776,call_7821,var_7825,uop_7840,])
func_7846 = relay.Function([var_7825,], output)
mod['func_7846'] = func_7846
mod = relay.transform.InferType()(mod)
mutated_mod['func_7846'] = func_7846
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7847 = relay.var("var_7847", dtype = "float64", shape = (520,))#candidate|7847|(520,)|var|float64
func_7846_call = mutated_mod.get_global_var('func_7846')
call_7848 = func_7846_call(var_7847)
output = call_7848
func_7849 = relay.Function([var_7847], output)
mutated_mod['func_7849'] = func_7849
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4393_call = mod.get_global_var('func_4393')
func_4395_call = mutated_mod.get_global_var('func_4395')
call_7856 = relay.TupleGetItem(func_4393_call(), 2)
call_7857 = relay.TupleGetItem(func_4395_call(), 2)
func_6916_call = mod.get_global_var('func_6916')
func_6918_call = mutated_mod.get_global_var('func_6918')
call_7858 = relay.TupleGetItem(func_6916_call(), 0)
call_7859 = relay.TupleGetItem(func_6918_call(), 0)
output = relay.Tuple([call_7856,call_7858,])
output2 = relay.Tuple([call_7857,call_7859,])
func_7864 = relay.Function([], output)
mod['func_7864'] = func_7864
mod = relay.transform.InferType()(mod)
output = func_7864()
func_7865 = relay.Function([], output)
mutated_mod['func_7865'] = func_7865
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6581_call = mod.get_global_var('func_6581')
func_6582_call = mutated_mod.get_global_var('func_6582')
call_7876 = func_6581_call()
call_7877 = func_6581_call()
output = relay.Tuple([call_7876,])
output2 = relay.Tuple([call_7877,])
func_7888 = relay.Function([], output)
mod['func_7888'] = func_7888
mod = relay.transform.InferType()(mod)
output = func_7888()
func_7889 = relay.Function([], output)
mutated_mod['func_7889'] = func_7889
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7918 = relay.const([[[-3],[-10],[-10],[2],[6],[2],[2],[3],[-10],[6],[1]],[[-2],[-5],[10],[-3],[3],[-7],[4],[8],[7],[-1],[-7]],[[2],[10],[10],[-7],[-7],[-8],[4],[-10],[6],[-2],[8]],[[10],[-1],[1],[6],[7],[-9],[2],[-5],[10],[8],[4]],[[-7],[-10],[10],[6],[7],[6],[-3],[-1],[5],[8],[5]],[[5],[9],[-1],[3],[-2],[2],[5],[-3],[9],[-9],[9]],[[2],[-10],[6],[-2],[8],[-10],[-3],[5],[-8],[8],[6]],[[-3],[-6],[-10],[-9],[-6],[8],[7],[6],[6],[9],[10]],[[-9],[-9],[1],[-9],[3],[-7],[-4],[2],[5],[-4],[6]]], dtype = "int32")#candidate|7918|(9, 11, 1)|const|int32
const_7919 = relay.const([[[-3,3,-1],[3,9,6],[-9,6,-5],[-1,-7,2],[-10,4,-8],[-7,6,-4],[-4,-6,10],[10,7,3],[8,-4,-8],[-8,-3,-6],[7,-5,-3]],[[1,-7,-10],[-1,10,8],[-3,-9,3],[3,8,6],[-8,-7,-8],[-3,8,6],[-9,-2,-6],[-4,9,5],[-3,-5,-4],[-4,4,7],[-2,10,10]],[[-1,2,10],[4,-8,7],[4,10,10],[-10,6,8],[7,4,3],[5,3,-9],[-7,6,7],[7,-5,3],[-10,-4,9],[10,3,5],[-5,9,-8]],[[-2,-1,-10],[-4,-2,-3],[8,5,10],[1,2,-3],[9,-9,-10],[7,4,2],[8,3,7],[-2,9,-5],[3,-10,-10],[-6,-3,-9],[4,4,-6]],[[3,2,-4],[2,-4,-3],[-2,4,5],[-7,7,8],[4,2,1],[6,-1,-2],[9,-1,8],[1,4,4],[-3,2,4],[6,1,7],[5,10,2]],[[-3,9,-4],[-7,7,-2],[1,-5,-5],[-3,4,-8],[-10,6,1],[3,1,-7],[10,-9,5],[9,7,1],[10,1,-7],[-9,-2,-8],[-3,6,-4]],[[-6,-6,1],[-6,-9,4],[-5,3,-2],[-6,9,4],[-10,6,-8],[8,-3,10],[-8,-4,-1],[9,5,-3],[4,8,7],[9,-8,5],[7,9,-2]],[[6,7,-8],[-10,-6,1],[-4,9,8],[-3,-5,-2],[-6,-6,1],[-5,-9,-8],[-5,-6,-5],[-10,-1,10],[-7,4,5],[-4,9,7],[-9,6,9]],[[3,-4,4],[-5,8,-5],[5,3,-6],[7,1,-10],[-5,-5,5],[9,-7,-8],[-2,-7,-10],[9,6,5],[4,2,10],[-6,-2,-10],[-4,-8,1]]], dtype = "int32")#candidate|7919|(9, 11, 3)|const|int32
bop_7920 = relay.bitwise_and(const_7918.astype('int32'), const_7919.astype('int32')) # shape=(9, 11, 3)
output = bop_7920
output2 = bop_7920
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

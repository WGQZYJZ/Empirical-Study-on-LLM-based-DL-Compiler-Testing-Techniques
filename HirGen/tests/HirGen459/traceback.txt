==========mod==========
#[version = "0.0.5"]
def @func_5469() -> (Tensor[(640), float64], Tensor[(40), float32], Tensor[(960), float64]) {
  %0 = @func_4648() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(8, 5, 16), bool], Tensor[(640), bool]) */;
  %1 = %0.2;
  %2 = cast(%1, dtype="float64") /* ty=Tensor[(640), float64] */;
  %3 = cast(meta[relay.Constant][0] /* ty=Tensor[(960), float64] */, dtype="float64") /* ty=Tensor[(960), float64] */;
  %4 = reshape(%3, newshape=[8, 12, 10]) /* ty=Tensor[(8, 12, 10), float64] */;
  %5 = @func_2872(%4) /* ty=(Tensor[(8, 12, 10), float64], Tensor[(108, 4), float64], Tensor[(21, 1), float32], Tensor[(40), float32]) */;
  %6 = atan(%2) /* ty=Tensor[(640), float64] */;
  %7 = %5.3;
  (%6, %7, meta[relay.Constant][0] /* ty=Tensor[(960), float64] */)
}

def @func_9652(%var_9644: Tensor[(5, 9, 15), uint8], %var_9645: Tensor[(5, 9, 15), uint8]) -> (Tensor[(5, 9, 15), uint8],) {
  %8 = cast(%var_9645, dtype="uint8") /* ty=Tensor[(5, 9, 15), uint8] */;
  %9 = shape_of(%var_9644, dtype="int32") /* ty=Tensor[(3), int32] */;
  %10 = cast(%var_9644, dtype="uint8") /* ty=Tensor[(5, 9, 15), uint8] */;
  %11 = dyn.reshape(%8, %9, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %12 = add(%10, %11) /* ty=Tensor[(5, 9, 15), uint8] */;
  (%12,)
}

def @func_5246(%var_5206: Tensor[(2, 2, 8), float32], %var_5243: Tensor[(91, 14), int64]) -> (Tensor[(36), float32], Tensor[(144), float32], Tensor[(2, 2, 8), uint32], Tensor[(9, 3, 13), float64], Tensor[(39, 9), float64], Tensor[(640), uint64], Tensor[(640), bool], Tensor[(91, 14), int64]) {
  %13 = cast(meta[relay.Constant][1] /* ty=Tensor[(36), float32] */, dtype="float32") /* ty=Tensor[(36), float32] */;
  %14 = cast(meta[relay.Constant][2] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %15 = cast(-9.3858f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %16 = @func_4684() /* ty=(Tensor[(640), bool],) */;
  %17 = %16.0;
  %18 = cast(%17, dtype="bool") /* ty=Tensor[(640), bool] */;
  %19 = reshape(%13, newshape=[12, 1, 3]) /* ty=Tensor[(12, 1, 3), float32] */;
  %20 = reshape(%14, newshape=[12, 4, 3]) /* ty=Tensor[(12, 4, 3), float32] */;
  %21 = reshape(%15, newshape=[]) /* ty=float32 */;
  %22 = reshape(%18, newshape=[640]) /* ty=Tensor[(640), bool] */;
  %23 = @func_1950(%19, %20, %21, %22) /* ty=(Tensor[(12, 4, 3), float32], Tensor[(20, 32), bool], float32, Tensor[(637, 2), int64], Tensor[(640), bool]) */;
  %24 = %23.2;
  %25 = cast(%24, dtype="uint32") /* ty=uint32 */;
  %26 = cast(%var_5206, dtype="uint32") /* ty=Tensor[(2, 2, 8), uint32] */;
  %27 = cast(meta[relay.Constant][3] /* ty=Tensor[(39, 9), float64] */, dtype="float64") /* ty=Tensor[(39, 9), float64] */;
  %28 = reshape(%27, newshape=[9, 3, 13]) /* ty=Tensor[(9, 3, 13), float64] */;
  %29 = @func_4480(%28) /* ty=(Tensor[(9, 3, 13), float64],) */;
  %30 = cast(-9.3858f /* ty=float32 */, dtype="uint64") /* ty=uint64 */;
  %31 = cast(%17, dtype="uint64") /* ty=Tensor[(640), uint64] */;
  %32 = cast(-9.3858f /* ty=float32 */, dtype="int64") /* ty=int64 */;
  %33 = cast(%var_5243, dtype="int64") /* ty=Tensor[(91, 14), int64] */;
  %34 = cast(%17, dtype="bool") /* ty=Tensor[(640), bool] */;
  %35 = reshape(%32, newshape=[]) /* ty=int64 */;
  %36 = reshape(%33, newshape=[7, 13, 14]) /* ty=Tensor[(7, 13, 14), int64] */;
  %37 = reshape(%34, newshape=[640]) /* ty=Tensor[(640), bool] */;
  %38 = @func_1018(%35, %36, %37) /* ty=(Tensor[(7, 13, 14), bool], Tensor[(6, 7, 14), float64], Tensor[(640), bool]) */;
  %39 = minimum(%25, %26) /* ty=Tensor[(2, 2, 8), uint32] */;
  %40 = %29.0;
  %41 = maximum(%30, %31) /* ty=Tensor[(640), uint64] */;
  %42 = %38.2;
  (meta[relay.Constant][1] /* ty=Tensor[(36), float32] */, meta[relay.Constant][2] /* ty=Tensor[(144), float32] */, %39, %40, meta[relay.Constant][3] /* ty=Tensor[(39, 9), float64] */, %41, %42, %var_5243)
}

def @func_2872(%var_2856: Tensor[(8, 12, 10), float64]) -> (Tensor[(8, 12, 10), float64], Tensor[(108, 4), float64], Tensor[(21, 1), float32], Tensor[(40), float32]) {
  %43 = cast(%var_2856, dtype="float64") /* ty=Tensor[(8, 12, 10), float64] */;
  %44 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(8, 12, 10), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %45 = cast(meta[relay.Constant][4] /* ty=Tensor[(8, 12, 10), float64] */, dtype="float64") /* ty=Tensor[(8, 12, 10), float64] */;
  %46 = dyn.reshape(%43, %44, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %47 = cast(meta[relay.Constant][5] /* ty=Tensor[(21, 1), float32] */, dtype="float32") /* ty=Tensor[(21, 1), float32] */;
  %48 = cast(meta[relay.Constant][5] /* ty=Tensor[(21, 1), float32] */, dtype="float32") /* ty=Tensor[(21, 1), float32] */;
  %49 = cast(meta[relay.Constant][6] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
  %50 = reshape(%47, newshape=[3, 1, 7]) /* ty=Tensor[(3, 1, 7), float32] */;
  %51 = reshape(%48, newshape=[3, 1, 7]) /* ty=Tensor[(3, 1, 7), float32] */;
  %52 = reshape(%49, newshape=[40]) /* ty=Tensor[(40), float32] */;
  %53 = @func_1903(%50, %51, %52) /* ty=(Tensor[(4, 5, 2), float32], Tensor[(40), float32], Tensor[(3, ?, 7), float64], Tensor[(6, 12, 6), float64], Tensor[(108, 4), float64], Tensor[(4, 5, 2), float32]) */;
  %54 = mod(%45, %46) /* ty=Tensor[(8, 12, 10), float64] */;
  %55 = %53.4;
  (%54, %55, meta[relay.Constant][5] /* ty=Tensor[(21, 1), float32] */, meta[relay.Constant][6] /* ty=Tensor[(40), float32] */)
}

def @func_3963(%var_3937: Tensor[(10, 16, 6), float32]) -> Tensor[(10, 16, 6), bool] {
  %56 = cast(%var_3937, dtype="float32") /* ty=Tensor[(10, 16, 6), float32] */;
  %57 = atanh(%56) /* ty=Tensor[(10, 16, 6), float32] */;
  %58 = cast(%57, dtype="bool") /* ty=Tensor[(10, 16, 6), bool] */;
  %59 = shape_of(%var_3937, dtype="int32") /* ty=Tensor[(3), int32] */;
  %60 = cast(%var_3937, dtype="bool") /* ty=Tensor[(10, 16, 6), bool] */;
  %61 = dyn.reshape(%58, %59, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%60, %61) /* ty=Tensor[(10, 16, 6), bool] */
}

def @func_6184(%var_6174: Tensor[(640), bool]) -> (Tensor[(640), uint16], Tensor[(640), float64]) {
  %62 = @func_5494() /* ty=Tensor[(640), bool] */;
  %63 = cast(%var_6174, dtype="uint16") /* ty=Tensor[(640), uint16] */;
  %64 = shape_of(%62, dtype="int32") /* ty=Tensor[(1), int32] */;
  %65 = cast(%62, dtype="uint16") /* ty=Tensor[(640), uint16] */;
  %66 = dyn.reshape(%63, %64, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %67 = cast(%62, dtype="float64") /* ty=Tensor[(640), float64] */;
  %68 = add(%65, %66) /* ty=Tensor[(640), uint16] */;
  %69 = cosh(%67) /* ty=Tensor[(640), float64] */;
  (%68, %69)
}

def @func_8794() -> (Tensor[(4, 3, 2), float32], Tensor[(13, 14, 12), uint8]) {
  %70 = @func_5893() /* ty=(Tensor[(4, 3, 2), float32],) */;
  %71 = @func_5986() /* ty=(Tensor[(13, 14, 12), uint8], Tensor[(4, 3, 2), float32]) */;
  %72 = %70.0;
  %73 = %71.0;
  (%72, %73)
}

def @func_9072(%var_9041: Tensor[(16, 5, 1), uint32], %var_9042: Tensor[(16, 5, 11), uint32]) -> (Tensor[(16, 5, 11), uint32], Tensor[(2, 6, 5), float64]) {
  %74 = cast(%var_9041, dtype="uint32") /* ty=Tensor[(16, 5, 1), uint32] */;
  %75 = cast(%var_9042, dtype="uint32") /* ty=Tensor[(16, 5, 11), uint32] */;
  %76 = @func_6740() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %77 = multiply(%74, %75) /* ty=Tensor[(16, 5, 11), uint32] */;
  %78 = %76.0;
  (%77, %78)
}

def @func_3160(%var_3156: Tensor[(120), float32]) -> (Tensor[(15, 4, 2), bool], Tensor[(120), float32], Tensor[(14, 10, 14), float64]) {
  %79 = cast(%var_3156, dtype="float32") /* ty=Tensor[(120), float32] */;
  %80 = reshape(%79, newshape=[15, 4, 2]) /* ty=Tensor[(15, 4, 2), float32] */;
  %81 = @func_1105(%80) /* ty=(Tensor[(15, 4, 2), bool],) */;
  %82 = cast(meta[relay.Constant][7] /* ty=Tensor[(14, 10, 14), float32] */, dtype="float32") /* ty=Tensor[(14, 10, 14), float32] */;
  %83 = atanh(%82) /* ty=Tensor[(14, 10, 14), float32] */;
  %84 = cast(%83, dtype="float64") /* ty=Tensor[(14, 10, 14), float64] */;
  %85 = %81.0;
  %86 = cosh(%84) /* ty=Tensor[(14, 10, 14), float64] */;
  (%85, %var_3156, %86)
}

def @func_5986() -> (Tensor[(13, 14, 12), uint8], Tensor[(4, 3, 2), float32]) {
  %87 = cast(meta[relay.Constant][8] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %88 = cast(meta[relay.Constant][9] /* ty=Tensor[(13, 14, 12), uint8] */, dtype="uint8") /* ty=Tensor[(13, 14, 12), uint8] */;
  %89 = @func_5893() /* ty=(Tensor[(4, 3, 2), float32],) */;
  %90 = logical_xor(%87, %88) /* ty=Tensor[(13, 14, 12), uint8] */;
  %91 = %89.0;
  (%90, %91)
}

def @func_2234(%var_2186: Tensor[(10, 1, 7), float64], %var_2203: Tensor[(320, 2), bool], %var_2210: Tensor[(10, 1, 7), float64]) -> (float32, Tensor[(1274), int64], Tensor[(320, 2), bool], Tensor[(10, ?, 7), uint16], Tensor[(6, 7, 14), float64], Tensor[(6, 7, 14), float64]) {
  %92 = cast(%var_2186, dtype="float64") /* ty=Tensor[(10, 1, 7), float64] */;
  %93 = asinh(%92) /* ty=Tensor[(10, 1, 7), float64] */;
  %94 = cast(%var_2210, dtype="uint16") /* ty=Tensor[(10, 1, 7), uint16] */;
  %95 = shape_of(%93, dtype="int32") /* ty=Tensor[(3), int32] */;
  %96 = cast(%93, dtype="uint16") /* ty=Tensor[(10, 1, 7), uint16] */;
  %97 = dyn.reshape(%94, %95, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %98 = cast(%var_2203, dtype="bool") /* ty=Tensor[(320, 2), bool] */;
  %99 = cast(%var_2203, dtype="bool") /* ty=Tensor[(320, 2), bool] */;
  %100 = reshape(%98, newshape=[8, 5, 16]) /* ty=Tensor[(8, 5, 16), bool] */;
  %101 = reshape(%99, newshape=[8, 5, 16]) /* ty=Tensor[(8, 5, 16), bool] */;
  %102 = @func_638(%100, %101) /* ty=(Tensor[(8, 5, 16), bool], Tensor[(6, 7, 14), float64], Tensor[(588), float64]) */;
  %103 = cast(-1.86083f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %104 = cast(meta[relay.Constant][10] /* ty=Tensor[(1274), int64] */, dtype="int64") /* ty=Tensor[(1274), int64] */;
  %105 = cast(%var_2203, dtype="bool") /* ty=Tensor[(320, 2), bool] */;
  %106 = reshape(%103, newshape=[]) /* ty=float32 */;
  %107 = reshape(%104, newshape=[637, 2]) /* ty=Tensor[(637, 2), int64] */;
  %108 = reshape(%105, newshape=[20, 32]) /* ty=Tensor[(20, 32), bool] */;
  %109 = @func_1254(%106, %107, %108) /* ty=(Tensor[(6, 7, 14), float64], Tensor[(20, 32), bool], Tensor[(11, 2, 1), bool], Tensor[(8, 5, 16), bool], Tensor[(7, 13, 14), bool], Tensor[(637, 2), uint32], Tensor[(6, 7, 14), float64], Tensor[(6, 7, 14), float64]) */;
  %110 = %109.7;
  %111 = cast(%110, dtype="float64") /* ty=Tensor[(6, 7, 14), float64] */;
  %112 = multiply(%96, %97) /* ty=Tensor[(10, ?, 7), uint16] */;
  %113 = %102.1;
  %114 = exp(%111) /* ty=Tensor[(6, 7, 14), float64] */;
  (-1.86083f /* ty=float32 */, meta[relay.Constant][10] /* ty=Tensor[(1274), int64] */, %var_2203, %112, %113, %114)
}

def @func_6509(%var_6467: Tensor[(2, 20), float32]) -> (Tensor[(2, 20), float64], Tensor[(2, 20), float64], Tensor[(2, 20), bool]) {
  %115 = cast(%var_6467, dtype="float64") /* ty=Tensor[(2, 20), float64] */;
  %116 = @func_6313() /* ty=Tensor[(2, 20), float32] */;
  %117 = cast(%var_6467, dtype="uint16") /* ty=Tensor[(2, 20), uint16] */;
  %118 = shape_of(%116, dtype="int32") /* ty=Tensor[(2), int32] */;
  %119 = cast(%116, dtype="uint16") /* ty=Tensor[(2, 20), uint16] */;
  %120 = dyn.reshape(%117, %118, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %121 = right_shift(%119, %120) /* ty=Tensor[(2, 20), uint16] */;
  %122 = cast(%116, dtype="float32") /* ty=Tensor[(2, 20), float32] */;
  %123 = rsqrt(%122) /* ty=Tensor[(2, 20), float32] */;
  %124 = cast(%123, dtype="float64") /* ty=Tensor[(2, 20), float64] */;
  %125 = shape_of(%121, dtype="int32") /* ty=Tensor[(2), int32] */;
  %126 = cast(%121, dtype="float64") /* ty=Tensor[(2, 20), float64] */;
  %127 = dyn.reshape(%124, %125, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %128 = cast(%116, dtype="float64") /* ty=Tensor[(2, 20), float64] */;
  %129 = shape_of(%123, dtype="int32") /* ty=Tensor[(2), int32] */;
  %130 = cast(%123, dtype="float64") /* ty=Tensor[(2, 20), float64] */;
  %131 = dyn.reshape(%128, %129, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %132 = floor_divide(%130, %131) /* ty=Tensor[(2, 20), float64] */;
  %133 = cast(%121, dtype="bool") /* ty=Tensor[(2, 20), bool] */;
  %134 = shape_of(%132, dtype="int32") /* ty=Tensor[(2), int32] */;
  %135 = cast(%132, dtype="bool") /* ty=Tensor[(2, 20), bool] */;
  %136 = dyn.reshape(%133, %134, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %137 = equal(%135, %136) /* ty=Tensor[(2, 20), bool] */;
  %138 = cast(%137, dtype="uint16") /* ty=Tensor[(2, 20), uint16] */;
  %139 = shape_of(%132, dtype="int32") /* ty=Tensor[(2), int32] */;
  %140 = cast(%132, dtype="uint16") /* ty=Tensor[(2, 20), uint16] */;
  %141 = dyn.reshape(%138, %139, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %142 = left_shift(%140, %141) /* ty=Tensor[(2, 20), uint16] */;
  %143 = cast(%142, dtype="bool") /* ty=Tensor[(2, 20), bool] */;
  %144 = shape_of(%132, dtype="int32") /* ty=Tensor[(2), int32] */;
  %145 = cast(%132, dtype="bool") /* ty=Tensor[(2, 20), bool] */;
  %146 = dyn.reshape(%143, %144, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %147 = atan(%115) /* ty=Tensor[(2, 20), float64] */;
  %148 = mod(%126, %127) /* ty=Tensor[(2, 20), float64] */;
  %149 = less(%145, %146) /* ty=Tensor[(2, 20), bool] */;
  (%147, %148, %149)
}

def @func_8831() -> (Tensor[(640), bool], Tensor[(15), float64], Tensor[(24), float32], Tensor[(15), float64], Tensor[(4, 3, 2), int16]) {
  %150 = @func_8759() /* ty=(Tensor[(40), float64], Tensor[(1, 15, 1), float64], Tensor[(15), float64]) */;
  %151 = @func_5732() /* ty=(Tensor[(24), float32],) */;
  %152 = @func_8759() /* ty=(Tensor[(40), float64], Tensor[(1, 15, 1), float64], Tensor[(15), float64]) */;
  %153 = %151.0;
  %154 = cast(%153, dtype="float32") /* ty=Tensor[(24), float32] */;
  %155 = reshape(%154, newshape=[4, 3, 2]) /* ty=Tensor[(4, 3, 2), float32] */;
  %156 = @func_6378(%155) /* ty=(Tensor[(4, 3, 2), int16], float32, Tensor[(70), float64], Tensor[(320, 2), bool]) */;
  %157 = @func_7587() /* ty=Tensor[(640), bool] */;
  %158 = %150.2;
  %159 = %152.2;
  %160 = %156.0;
  (%157, %158, %153, %159, %160)
}

def @func_7637(%var_7632: Tensor[(91, 14), int64]) -> (Tensor[(640), bool], Tensor[(6, 7, 14), float64], float32, Tensor[(91, 14), int64]) {
  %161 = cast(-3.18364f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %162 = cast(%var_7632, dtype="int64") /* ty=Tensor[(91, 14), int64] */;
  %163 = @func_7573() /* ty=Tensor[(640), bool] */;
  %164 = cast(%163, dtype="bool") /* ty=Tensor[(640), bool] */;
  %165 = reshape(%161, newshape=[]) /* ty=float32 */;
  %166 = reshape(%162, newshape=[637, 2]) /* ty=Tensor[(637, 2), int64] */;
  %167 = reshape(%164, newshape=[20, 32]) /* ty=Tensor[(20, 32), bool] */;
  %168 = @func_1254(%165, %166, %167) /* ty=(Tensor[(6, 7, 14), float64], Tensor[(20, 32), bool], Tensor[(11, 2, 1), bool], Tensor[(8, 5, 16), bool], Tensor[(7, 13, 14), bool], Tensor[(637, 2), uint32], Tensor[(6, 7, 14), float64], Tensor[(6, 7, 14), float64]) */;
  %169 = %168.7;
  (%163, %169, -3.18364f /* ty=float32 */, %var_7632)
}

def @func_9319() -> (Tensor[(4, 3, 2), float32], Tensor[(640), bool]) {
  %170 = @func_5893() /* ty=(Tensor[(4, 3, 2), float32],) */;
  %171 = %170.0;
  %172 = @func_5294() /* ty=Tensor[(640), bool] */;
  (%171, %172)
}

def @func_5693(%var_5689: Tensor[(14, 6, 12), float32]) -> (Tensor[(14, 6, 12), float32],) {
  %173 = cast(%var_5689, dtype="float32") /* ty=Tensor[(14, 6, 12), float32] */;
  %174 = log(%173) /* ty=Tensor[(14, 6, 12), float32] */;
  (%174,)
}

def @func_7201() -> (Tensor[(2, 6, 5), float64],) {
  %175 = @func_6082() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %176 = %175.0;
  (%176,)
}

def @func_5079(%var_5037: Tensor[(1, 16, 11), int16], %var_5038: Tensor[(3, 16, 11), int16]) -> (Tensor[(3, 16, 11), int16], Tensor[(10, 16, 6), bool], Tensor[(240, 4), float32]) {
  %177 = cast(%var_5037, dtype="int16") /* ty=Tensor[(1, 16, 11), int16] */;
  %178 = cast(%var_5038, dtype="int16") /* ty=Tensor[(3, 16, 11), int16] */;
  %179 = cast(meta[relay.Constant][11] /* ty=Tensor[(240, 4), float32] */, dtype="float32") /* ty=Tensor[(240, 4), float32] */;
  %180 = reshape(%179, newshape=[10, 16, 6]) /* ty=Tensor[(10, 16, 6), float32] */;
  %181 = cast(meta[relay.Constant][11] /* ty=Tensor[(240, 4), float32] */, dtype="float32") /* ty=Tensor[(240, 4), float32] */;
  %182 = bitwise_or(%177, %178) /* ty=Tensor[(3, 16, 11), int16] */;
  %183 = @func_3963(%180) /* ty=Tensor[(10, 16, 6), bool] */;
  %184 = acos(%181) /* ty=Tensor[(240, 4), float32] */;
  (%182, %183, %184)
}

def @func_8704(%var_8693: Tensor[(2, 20), float32]) -> Tensor[(2, 20), uint32] {
  %185 = @func_5925() /* ty=(Tensor[(2, 20), float32], Tensor[(7, 2, 12), int8], Tensor[(168), int8]) */;
  %186 = %185.0;
  %187 = cast(%var_8693, dtype="uint32") /* ty=Tensor[(2, 20), uint32] */;
  %188 = shape_of(%186, dtype="int32") /* ty=Tensor[(2), int32] */;
  %189 = cast(%186, dtype="uint32") /* ty=Tensor[(2, 20), uint32] */;
  %190 = dyn.reshape(%187, %188, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  bitwise_or(%189, %190) /* ty=Tensor[(2, 20), uint32] */
}

def @func_1274(%var_1266: Tensor[(6, 12, 6), float64]) -> Tensor[(6, 12, 6), float64] {
  %191 = cast(%var_1266, dtype="float64") /* ty=Tensor[(6, 12, 6), float64] */;
  sin(%191) /* ty=Tensor[(6, 12, 6), float64] */
}

def @func_8283(%var_8253: Tensor[(1008), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(8, 5, 16), bool], Tensor[(14, 6, 12), float32], Tensor[(1008), float32], Tensor[(6, 7, 14), float64], int64, Tensor[(1274, 1), int64], Tensor[(7, 13, 14), bool]) {
  %192 = @func_8117() /* ty=(Tensor[(640), bool], Tensor[(2, 6, 5), float64], Tensor[(640), bool], Tensor[(2, 6, 5), float64], Tensor[(640), uint16], Tensor[(9, 3, 13), float64], Tensor[(351), float64]) */;
  %193 = cast(%var_8253, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %194 = reshape(%193, newshape=[14, 6, 12]) /* ty=Tensor[(14, 6, 12), float32] */;
  %195 = @func_5693(%194) /* ty=(Tensor[(14, 6, 12), float32],) */;
  %196 = cast(1 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %197 = cast(meta[relay.Constant][12] /* ty=Tensor[(1274, 1), int64] */, dtype="int64") /* ty=Tensor[(1274, 1), int64] */;
  %198 = @func_7437() /* ty=Tensor[(8, 5, 16), bool] */;
  %199 = cast(%198, dtype="bool") /* ty=Tensor[(8, 5, 16), bool] */;
  %200 = reshape(%196, newshape=[]) /* ty=int64 */;
  %201 = reshape(%197, newshape=[7, 13, 14]) /* ty=Tensor[(7, 13, 14), int64] */;
  %202 = reshape(%199, newshape=[640]) /* ty=Tensor[(640), bool] */;
  %203 = @func_1018(%200, %201, %202) /* ty=(Tensor[(7, 13, 14), bool], Tensor[(6, 7, 14), float64], Tensor[(640), bool]) */;
  %204 = cast(1 /* ty=int64 */, dtype="float32") /* ty=float32 */;
  %205 = cast(meta[relay.Constant][12] /* ty=Tensor[(1274, 1), int64] */, dtype="int64") /* ty=Tensor[(1274, 1), int64] */;
  %206 = cast(%198, dtype="bool") /* ty=Tensor[(8, 5, 16), bool] */;
  %207 = reshape(%204, newshape=[]) /* ty=float32 */;
  %208 = reshape(%205, newshape=[637, 2]) /* ty=Tensor[(637, 2), int64] */;
  %209 = reshape(%206, newshape=[20, 32]) /* ty=Tensor[(20, 32), bool] */;
  %210 = @func_1254(%207, %208, %209) /* ty=(Tensor[(6, 7, 14), float64], Tensor[(20, 32), bool], Tensor[(11, 2, 1), bool], Tensor[(8, 5, 16), bool], Tensor[(7, 13, 14), bool], Tensor[(637, 2), uint32], Tensor[(6, 7, 14), float64], Tensor[(6, 7, 14), float64]) */;
  %211 = %192.3;
  %212 = %195.0;
  %213 = %203.1;
  %214 = %210.4;
  (%211, %198, %212, %var_8253, %213, 1 /* ty=int64 */, meta[relay.Constant][12] /* ty=Tensor[(1274, 1), int64] */, %214)
}

def @func_295(%var_283: Tensor[(6, 7, 14), float64], %var_284: Tensor[(6, 7, 14), float64]) -> Tensor[(6, 7, 14), float64] {
  %215 = cast(%var_284, dtype="float64") /* ty=Tensor[(6, 7, 14), float64] */;
  %216 = shape_of(%var_283, dtype="int32") /* ty=Tensor[(3), int32] */;
  %217 = cast(%var_283, dtype="float64") /* ty=Tensor[(6, 7, 14), float64] */;
  %218 = dyn.reshape(%215, %216, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_mod(%217, %218) /* ty=Tensor[(6, 7, 14), float64] */
}

def @func_9513() -> (Tensor[(640), bool], Tensor[(640), bool]) {
  %219 = @func_8343() /* ty=(Tensor[(640), bool], Tensor[(640), bool]) */;
  %220 = @func_7573() /* ty=Tensor[(640), bool] */;
  %221 = %219.0;
  (%220, %221)
}

def @func_6313() -> Tensor[(2, 20), float32] {
  %222 = @func_5925() /* ty=(Tensor[(2, 20), float32], Tensor[(7, 2, 12), int8], Tensor[(168), int8]) */;
  %222.0
}

def @func_1105(%var_1096: Tensor[(15, 4, 2), float32]) -> (Tensor[(15, 4, 2), bool],) {
  %223 = cast(meta[relay.Constant][13] /* ty=Tensor[(15, 4, 2), float32] */, dtype="bool") /* ty=Tensor[(15, 4, 2), bool] */;
  %224 = shape_of(%var_1096, dtype="int32") /* ty=Tensor[(3), int32] */;
  %225 = cast(%var_1096, dtype="bool") /* ty=Tensor[(15, 4, 2), bool] */;
  %226 = dyn.reshape(%223, %224, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %227 = equal(%225, %226) /* ty=Tensor[(15, 4, 2), bool] */;
  (%227,)
}

def @func_6245() -> (Tensor[(640), bool],) {
  %228 = @func_4684() /* ty=(Tensor[(640), bool],) */;
  %229 = %228.0;
  (%229,)
}

def @func_8431() -> Tensor[(21), float32] {
  %230 = @func_4838() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(4, 5, 2), float32], Tensor[(21), float32], Tensor[(2, 20), float32], Tensor[(4, 3, 2), float32], Tensor[(24), float32]) */;
  %230.2
}

def @func_7850(%var_7836: Tensor[(4, 3, 2), float32]) -> Tensor[(4, 3, 2), uint64] {
  %231 = @func_5893() /* ty=(Tensor[(4, 3, 2), float32],) */;
  %232 = %231.0;
  %233 = cast(%var_7836, dtype="uint64") /* ty=Tensor[(4, 3, 2), uint64] */;
  %234 = shape_of(%232, dtype="int32") /* ty=Tensor[(3), int32] */;
  %235 = cast(%232, dtype="uint64") /* ty=Tensor[(4, 3, 2), uint64] */;
  %236 = dyn.reshape(%233, %234, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  bitwise_and(%235, %236) /* ty=Tensor[(4, 3, 2), uint64] */
}

def @func_6727(%var_6691: Tensor[(120), float32]) -> (Tensor[(2, 20), int32], Tensor[(14, 10, 14), float64], Tensor[(120), float32], Tensor[(2, 20), int8], Tensor[(2, 20), float32]) {
  %237 = @func_4970() /* ty=(Tensor[(2, 20), float32],) */;
  %238 = %237.0;
  %239 = cast(meta[relay.Constant][14] /* ty=Tensor[(2, 20), float32] */, dtype="int32") /* ty=Tensor[(2, 20), int32] */;
  %240 = shape_of(%238, dtype="int32") /* ty=Tensor[(2), int32] */;
  %241 = cast(%238, dtype="int32") /* ty=Tensor[(2, 20), int32] */;
  %242 = dyn.reshape(%239, %240, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %243 = cast(%var_6691, dtype="float32") /* ty=Tensor[(120), float32] */;
  %244 = reshape(%243, newshape=[120]) /* ty=Tensor[(120), float32] */;
  %245 = @func_3160(%244) /* ty=(Tensor[(15, 4, 2), bool], Tensor[(120), float32], Tensor[(14, 10, 14), float64]) */;
  %246 = cast(meta[relay.Constant][15] /* ty=Tensor[(2, 20), float32] */, dtype="int8") /* ty=Tensor[(2, 20), int8] */;
  %247 = shape_of(%238, dtype="int32") /* ty=Tensor[(2), int32] */;
  %248 = cast(%238, dtype="int8") /* ty=Tensor[(2, 20), int8] */;
  %249 = dyn.reshape(%246, %247, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %250 = cast(meta[relay.Constant][15] /* ty=Tensor[(2, 20), float32] */, dtype="float32") /* ty=Tensor[(2, 20), float32] */;
  %251 = bitwise_xor(%241, %242) /* ty=Tensor[(2, 20), int32] */;
  %252 = %245.2;
  %253 = maximum(%248, %249) /* ty=Tensor[(2, 20), int8] */;
  %254 = tan(%250) /* ty=Tensor[(2, 20), float32] */;
  (%251, %252, %var_6691, %253, %254)
}

def @func_7939(%var_7913: float32, %var_7920: Tensor[(24), float32], %var_7925: Tensor[(1274), int64]) -> (Tensor[(1, 10, 15), float32], Tensor[(4, 3, 2), float32], Tensor[(24), float32], Tensor[(640), bool], Tensor[(1274), int64], Tensor[(4, 3, 2), float32], Tensor[(640), bool]) {
  %255 = cast(%var_7913, dtype="float32") /* ty=float32 */;
  %256 = cast(meta[relay.Constant][16] /* ty=Tensor[(1, 10, 15), float32] */, dtype="float32") /* ty=Tensor[(1, 10, 15), float32] */;
  %257 = cast(%var_7920, dtype="float32") /* ty=Tensor[(24), float32] */;
  %258 = cast(%var_7920, dtype="float32") /* ty=Tensor[(24), float32] */;
  %259 = reshape(%257, newshape=[4, 3, 2]) /* ty=Tensor[(4, 3, 2), float32] */;
  %260 = reshape(%258, newshape=[4, 3, 2]) /* ty=Tensor[(4, 3, 2), float32] */;
  %261 = cast(%var_7925, dtype="int64") /* ty=Tensor[(1274), int64] */;
  %262 = reshape(%261, newshape=[91, 14]) /* ty=Tensor[(91, 14), int64] */;
  %263 = @func_7637(%262) /* ty=(Tensor[(640), bool], Tensor[(6, 7, 14), float64], float32, Tensor[(91, 14), int64]) */;
  %264 = @func_4726(%259, %260) /* ty=Tensor[(4, 3, 2), float32] */;
  %265 = cast(%264, dtype="float32") /* ty=Tensor[(4, 3, 2), float32] */;
  %266 = cast(%var_7920, dtype="float32") /* ty=Tensor[(24), float32] */;
  %267 = reshape(%265, newshape=[4, 3, 2]) /* ty=Tensor[(4, 3, 2), float32] */;
  %268 = reshape(%266, newshape=[4, 3, 2]) /* ty=Tensor[(4, 3, 2), float32] */;
  %269 = @func_4684() /* ty=(Tensor[(640), bool],) */;
  %270 = power(%255, %256) /* ty=Tensor[(1, 10, 15), float32] */;
  %271 = %263.0;
  %272 = @func_4726(%267, %268) /* ty=Tensor[(4, 3, 2), float32] */;
  %273 = %269.0;
  (%270, %264, %var_7920, %271, %var_7925, %272, %273)
}

def @func_5925() -> (Tensor[(2, 20), float32], Tensor[(7, 2, 12), int8], Tensor[(168), int8]) {
  %274 = @func_4970() /* ty=(Tensor[(2, 20), float32],) */;
  %275 = cast(meta[relay.Constant][17] /* ty=Tensor[(168), int8] */, dtype="int8") /* ty=Tensor[(168), int8] */;
  %276 = reshape(%275, newshape=[7, 2, 12]) /* ty=Tensor[(7, 2, 12), int8] */;
  %277 = %274.0;
  %278 = @func_2681(%276) /* ty=Tensor[(7, 2, 12), int8] */;
  (%277, %278, meta[relay.Constant][17] /* ty=Tensor[(168), int8] */)
}

def @func_1950(%var_1936: Tensor[(12, 1, 3), float32], %var_1937: Tensor[(12, 4, 3), float32], %var_1942: float32, %var_1944: Tensor[(640), bool]) -> (Tensor[(12, 4, 3), float32], Tensor[(20, 32), bool], float32, Tensor[(637, 2), int64], Tensor[(640), bool]) {
  %279 = cast(%var_1936, dtype="float32") /* ty=Tensor[(12, 1, 3), float32] */;
  %280 = cast(%var_1937, dtype="float32") /* ty=Tensor[(12, 4, 3), float32] */;
  %281 = cast(%var_1942, dtype="float32") /* ty=float32 */;
  %282 = cast(meta[relay.Constant][18] /* ty=Tensor[(637, 2), int64] */, dtype="int64") /* ty=Tensor[(637, 2), int64] */;
  %283 = cast(%var_1944, dtype="bool") /* ty=Tensor[(640), bool] */;
  %284 = reshape(%281, newshape=[]) /* ty=float32 */;
  %285 = reshape(%282, newshape=[637, 2]) /* ty=Tensor[(637, 2), int64] */;
  %286 = reshape(%283, newshape=[20, 32]) /* ty=Tensor[(20, 32), bool] */;
  %287 = @func_1254(%284, %285, %286) /* ty=(Tensor[(6, 7, 14), float64], Tensor[(20, 32), bool], Tensor[(11, 2, 1), bool], Tensor[(8, 5, 16), bool], Tensor[(7, 13, 14), bool], Tensor[(637, 2), uint32], Tensor[(6, 7, 14), float64], Tensor[(6, 7, 14), float64]) */;
  %288 = power(%279, %280) /* ty=Tensor[(12, 4, 3), float32] */;
  %289 = %287.1;
  (%288, %289, %var_1942, meta[relay.Constant][18] /* ty=Tensor[(637, 2), int64] */, %var_1944)
}

def @func_8117() -> (Tensor[(640), bool], Tensor[(2, 6, 5), float64], Tensor[(640), bool], Tensor[(2, 6, 5), float64], Tensor[(640), uint16], Tensor[(9, 3, 13), float64], Tensor[(351), float64]) {
  %290 = @func_4648() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(8, 5, 16), bool], Tensor[(640), bool]) */;
  %291 = @func_6740() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %292 = @func_6740() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %293 = %290.2;
  %294 = cast(%293, dtype="bool") /* ty=Tensor[(640), bool] */;
  %295 = reshape(%294, newshape=[640]) /* ty=Tensor[(640), bool] */;
  %296 = @func_6184(%295) /* ty=(Tensor[(640), uint16], Tensor[(640), float64]) */;
  %297 = cast(meta[relay.Constant][19] /* ty=Tensor[(351), float64] */, dtype="float64") /* ty=Tensor[(351), float64] */;
  %298 = reshape(%297, newshape=[9, 3, 13]) /* ty=Tensor[(9, 3, 13), float64] */;
  %299 = @func_4480(%298) /* ty=(Tensor[(9, 3, 13), float64],) */;
  %300 = %291.0;
  %301 = @func_5494() /* ty=Tensor[(640), bool] */;
  %302 = %292.0;
  %303 = %296.0;
  %304 = %299.0;
  (%293, %300, %301, %302, %303, %304, meta[relay.Constant][19] /* ty=Tensor[(351), float64] */)
}

def @func_5732() -> (Tensor[(24), float32],) {
  %305 = @func_4838() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(4, 5, 2), float32], Tensor[(21), float32], Tensor[(2, 20), float32], Tensor[(4, 3, 2), float32], Tensor[(24), float32]) */;
  %306 = %305.5;
  (%306,)
}

def @func_5282(%var_5260: Tensor[(16, 3, 8), float32]) -> Tensor[(16, 3, 8), float64] {
  %307 = cast(%var_5260, dtype="float32") /* ty=Tensor[(16, 3, 8), float32] */;
  %308 = rsqrt(%307) /* ty=Tensor[(16, 3, 8), float32] */;
  %309 = cast(%308, dtype="float64") /* ty=Tensor[(16, 3, 8), float64] */;
  erf(%309) /* ty=Tensor[(16, 3, 8), float64] */
}

def @func_7868(%var_7859: Tensor[(120), float32]) -> (Tensor[(6, 7, 14), float64], Tensor[(480), float64], Tensor[(480), float64], Tensor[(120), float32]) {
  %310 = @func_5586() /* ty=(Tensor[(640), bool], Tensor[(21), float32], Tensor[(6, 7, 14), float64], Tensor[(8, 5, 16), int32], Tensor[(6, 12, 6), float64], Tensor[(432), float64]) */;
  %311 = cast(meta[relay.Constant][20] /* ty=Tensor[(480), float64] */, dtype="float64") /* ty=Tensor[(480), float64] */;
  %312 = cast(%var_7859, dtype="float32") /* ty=Tensor[(120), float32] */;
  %313 = reshape(%311, newshape=[480]) /* ty=Tensor[(480), float64] */;
  %314 = reshape(%312, newshape=[60, 2]) /* ty=Tensor[(60, 2), float32] */;
  %315 = @func_5153(%313, %314) /* ty=(Tensor[(20, 48), float64], Tensor[(480), float64], Tensor[(60, 2), float32], Tensor[(2, 6, 5), float64]) */;
  %316 = %310.2;
  %317 = %315.1;
  (%316, %317, meta[relay.Constant][20] /* ty=Tensor[(480), float64] */, %var_7859)
}

def @func_3875(%var_3859: Tensor[(15, 8, 8), float64], %var_3873: Tensor[(168), int8]) -> (Tensor[(15, 8, 8), float64], Tensor[(7, 2, 12), int8], Tensor[(168), int8]) {
  %318 = cast(meta[relay.Constant][21] /* ty=Tensor[(15, 8, 8), float64] */, dtype="float64") /* ty=Tensor[(15, 8, 8), float64] */;
  %319 = shape_of(%var_3859, dtype="int32") /* ty=Tensor[(3), int32] */;
  %320 = cast(%var_3859, dtype="float64") /* ty=Tensor[(15, 8, 8), float64] */;
  %321 = dyn.reshape(%318, %319, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %322 = cast(%var_3873, dtype="int8") /* ty=Tensor[(168), int8] */;
  %323 = reshape(%322, newshape=[7, 2, 12]) /* ty=Tensor[(7, 2, 12), int8] */;
  %324 = multiply(%320, %321) /* ty=Tensor[(15, 8, 8), float64] */;
  %325 = @func_2681(%323) /* ty=Tensor[(7, 2, 12), int8] */;
  (%324, %325, %var_3873)
}

def @func_8302(%var_8295: Tensor[(2, 6, 5), float64]) -> (Tensor[(640), bool], Tensor[(2, 6, 5), uint16]) {
  %326 = @func_4648() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(8, 5, 16), bool], Tensor[(640), bool]) */;
  %327 = @func_6740() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %328 = %327.0;
  %329 = cast(%var_8295, dtype="uint16") /* ty=Tensor[(2, 6, 5), uint16] */;
  %330 = shape_of(%328, dtype="int32") /* ty=Tensor[(3), int32] */;
  %331 = cast(%328, dtype="uint16") /* ty=Tensor[(2, 6, 5), uint16] */;
  %332 = dyn.reshape(%329, %330, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %333 = %326.2;
  %334 = multiply(%331, %332) /* ty=Tensor[(2, 6, 5), uint16] */;
  (%333, %334)
}

def @func_8660() -> (Tensor[(2, 6, 5), float64], Tensor[(384), float32], Tensor[(640), bool], Tensor[(640), bool], Tensor[(14, 10, 14), float64], Tensor[(30, 4), int16]) {
  %335 = @func_7409() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %336 = cast(meta[relay.Constant][22] /* ty=Tensor[(30, 4), float32] */, dtype="float32") /* ty=Tensor[(30, 4), float32] */;
  %337 = cast(meta[relay.Constant][22] /* ty=Tensor[(30, 4), float32] */, dtype="float32") /* ty=Tensor[(30, 4), float32] */;
  %338 = cast(meta[relay.Constant][22] /* ty=Tensor[(30, 4), float32] */, dtype="float64") /* ty=Tensor[(30, 4), float64] */;
  %339 = reshape(%336, newshape=[30, 4]) /* ty=Tensor[(30, 4), float32] */;
  %340 = reshape(%337, newshape=[60, 2]) /* ty=Tensor[(60, 2), float32] */;
  %341 = reshape(%338, newshape=[60, 2]) /* ty=Tensor[(60, 2), float64] */;
  %342 = @func_8593(%339, %340, %341) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(480), float64], Tensor[(30, 4), float32], Tensor[(60, 2), int64], Tensor[(4, 3, 2), float32], Tensor[(320, 2), bool], Tensor[(120), float32], Tensor[(16, 3, 8), float64], Tensor[(384), float32], Tensor[(60, 2), int64]) */;
  %343 = cast(meta[relay.Constant][23] /* ty=Tensor[(640), bool] */, dtype="bool") /* ty=Tensor[(640), bool] */;
  %344 = reshape(%343, newshape=[640]) /* ty=Tensor[(640), bool] */;
  %345 = cast(meta[relay.Constant][22] /* ty=Tensor[(30, 4), float32] */, dtype="float32") /* ty=Tensor[(30, 4), float32] */;
  %346 = reshape(%345, newshape=[120]) /* ty=Tensor[(120), float32] */;
  %347 = @func_3160(%346) /* ty=(Tensor[(15, 4, 2), bool], Tensor[(120), float32], Tensor[(14, 10, 14), float64]) */;
  %348 = cast(meta[relay.Constant][22] /* ty=Tensor[(30, 4), float32] */, dtype="float32") /* ty=Tensor[(30, 4), float32] */;
  %349 = atan(%348) /* ty=Tensor[(30, 4), float32] */;
  %350 = cast(meta[relay.Constant][22] /* ty=Tensor[(30, 4), float32] */, dtype="int16") /* ty=Tensor[(30, 4), int16] */;
  %351 = shape_of(%349, dtype="int32") /* ty=Tensor[(2), int32] */;
  %352 = cast(%349, dtype="int16") /* ty=Tensor[(30, 4), int16] */;
  %353 = dyn.reshape(%350, %351, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %354 = %335.0;
  %355 = %342.8;
  %356 = @func_6968(%344) /* ty=Tensor[(640), bool] */;
  %357 = %347.2;
  %358 = bitwise_and(%352, %353) /* ty=Tensor[(30, 4), int16] */;
  (%354, %355, %356, meta[relay.Constant][23] /* ty=Tensor[(640), bool] */, %357, %358)
}

def @func_6216(%var_6202: Tensor[(2, 1, 7), int16]) -> (Tensor[(2, 1, 7), bool],) {
  %359 = cast(meta[relay.Constant][24] /* ty=int16 */, dtype="bool") /* ty=bool */;
  %360 = cast(%var_6202, dtype="bool") /* ty=Tensor[(2, 1, 7), bool] */;
  %361 = less_equal(%359, %360) /* ty=Tensor[(2, 1, 7), bool] */;
  %362 = cast(meta[relay.Constant][24] /* ty=int16 */, dtype="bool") /* ty=bool */;
  %363 = cast(%361, dtype="bool") /* ty=Tensor[(2, 1, 7), bool] */;
  %364 = not_equal(%362, %363) /* ty=Tensor[(2, 1, 7), bool] */;
  (%364,)
}

def @func_9227(%var_9214: Tensor[(30, 2), float64]) -> (Tensor[(640), bool], Tensor[(640), bool], Tensor[(30, 2), float32]) {
  %365 = @func_8343() /* ty=(Tensor[(640), bool], Tensor[(640), bool]) */;
  %366 = cast(meta[relay.Constant][25] /* ty=Tensor[(30, 2), float64] */, dtype="float64") /* ty=Tensor[(30, 2), float64] */;
  %367 = reshape(%366, newshape=[2, 6, 5]) /* ty=Tensor[(2, 6, 5), float64] */;
  %368 = @func_8302(%367) /* ty=(Tensor[(640), bool], Tensor[(2, 6, 5), uint16]) */;
  %369 = cast(%var_9214, dtype="float32") /* ty=Tensor[(30, 2), float32] */;
  %370 = shape_of(meta[relay.Constant][25] /* ty=Tensor[(30, 2), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %371 = cast(meta[relay.Constant][25] /* ty=Tensor[(30, 2), float64] */, dtype="float32") /* ty=Tensor[(30, 2), float32] */;
  %372 = dyn.reshape(%369, %370, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %373 = %365.0;
  %374 = %368.0;
  %375 = floor_mod(%371, %372) /* ty=Tensor[(30, 2), float32] */;
  (%373, %374, %375)
}

def @func_4970() -> (Tensor[(2, 20), float32],) {
  %376 = @func_4838() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(4, 5, 2), float32], Tensor[(21), float32], Tensor[(2, 20), float32], Tensor[(4, 3, 2), float32], Tensor[(24), float32]) */;
  %377 = %376.3;
  (%377,)
}

def @func_4838() -> (Tensor[(2, 6, 5), float64], Tensor[(4, 5, 2), float32], Tensor[(21), float32], Tensor[(2, 20), float32], Tensor[(4, 3, 2), float32], Tensor[(24), float32]) {
  %378 = @func_4802() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %379 = cast(meta[relay.Constant][26] /* ty=Tensor[(21), float32] */, dtype="float32") /* ty=Tensor[(21), float32] */;
  %380 = cast(meta[relay.Constant][26] /* ty=Tensor[(21), float32] */, dtype="float32") /* ty=Tensor[(21), float32] */;
  %381 = cast(meta[relay.Constant][27] /* ty=Tensor[(2, 20), float32] */, dtype="float32") /* ty=Tensor[(2, 20), float32] */;
  %382 = reshape(%379, newshape=[3, 1, 7]) /* ty=Tensor[(3, 1, 7), float32] */;
  %383 = reshape(%380, newshape=[3, 1, 7]) /* ty=Tensor[(3, 1, 7), float32] */;
  %384 = reshape(%381, newshape=[40]) /* ty=Tensor[(40), float32] */;
  %385 = @func_1903(%382, %383, %384) /* ty=(Tensor[(4, 5, 2), float32], Tensor[(40), float32], Tensor[(3, ?, 7), float64], Tensor[(6, 12, 6), float64], Tensor[(108, 4), float64], Tensor[(4, 5, 2), float32]) */;
  %386 = cast(meta[relay.Constant][28] /* ty=Tensor[(24), float32] */, dtype="float32") /* ty=Tensor[(24), float32] */;
  %387 = cast(meta[relay.Constant][28] /* ty=Tensor[(24), float32] */, dtype="float32") /* ty=Tensor[(24), float32] */;
  %388 = reshape(%386, newshape=[4, 3, 2]) /* ty=Tensor[(4, 3, 2), float32] */;
  %389 = reshape(%387, newshape=[4, 3, 2]) /* ty=Tensor[(4, 3, 2), float32] */;
  %390 = %378.0;
  %391 = %385.5;
  %392 = @func_4726(%388, %389) /* ty=Tensor[(4, 3, 2), float32] */;
  (%390, %391, meta[relay.Constant][26] /* ty=Tensor[(21), float32] */, meta[relay.Constant][27] /* ty=Tensor[(2, 20), float32] */, %392, meta[relay.Constant][28] /* ty=Tensor[(24), float32] */)
}

def @func_5893() -> (Tensor[(4, 3, 2), float32],) {
  %393 = @func_4838() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(4, 5, 2), float32], Tensor[(21), float32], Tensor[(2, 20), float32], Tensor[(4, 3, 2), float32], Tensor[(24), float32]) */;
  %394 = %393.4;
  (%394,)
}

def @func_6631() -> Tensor[(24), float32] {
  %395 = @func_5732() /* ty=(Tensor[(24), float32],) */;
  %395.0
}

def @func_8759() -> (Tensor[(40), float64], Tensor[(1, 15, 1), float64], Tensor[(15), float64]) {
  %396 = @func_5469() /* ty=(Tensor[(640), float64], Tensor[(40), float32], Tensor[(960), float64]) */;
  %397 = %396.1;
  %398 = cast(meta[relay.Constant][29] /* ty=Tensor[(40), float32] */, dtype="float64") /* ty=Tensor[(40), float64] */;
  %399 = shape_of(%397, dtype="int32") /* ty=Tensor[(1), int32] */;
  %400 = cast(%397, dtype="float64") /* ty=Tensor[(40), float64] */;
  %401 = dyn.reshape(%398, %399, newshape=[]) /* ty=Tensor[(?), float64] */;
  %402 = cast(meta[relay.Constant][30] /* ty=Tensor[(15), float64] */, dtype="float64") /* ty=Tensor[(15), float64] */;
  %403 = reshape(%402, newshape=[1, 15, 1]) /* ty=Tensor[(1, 15, 1), float64] */;
  %404 = @func_7602(%403) /* ty=(Tensor[(1, 15, 1), float64],) */;
  %405 = power(%400, %401) /* ty=Tensor[(40), float64] */;
  %406 = %404.0;
  (%405, %406, meta[relay.Constant][30] /* ty=Tensor[(15), float64] */)
}

def @func_7587() -> Tensor[(640), bool] {
  @func_5294() /* ty=Tensor[(640), bool] */
}

def @func_5153(%var_5136: Tensor[(480), float64], %var_5137: Tensor[(60, 2), float32]) -> (Tensor[(20, 48), float64], Tensor[(480), float64], Tensor[(60, 2), float32], Tensor[(2, 6, 5), float64]) {
  %407 = cast(%var_5136, dtype="float64") /* ty=Tensor[(480), float64] */;
  %408 = cast(%var_5137, dtype="float32") /* ty=Tensor[(60, 2), float32] */;
  %409 = reshape(%407, newshape=[16, 5, 6]) /* ty=Tensor[(16, 5, 6), float64] */;
  %410 = reshape(%408, newshape=[6, 20]) /* ty=Tensor[(6, 20), float32] */;
  %411 = @func_4269(%409, %410) /* ty=(Tensor[(40), float32], Tensor[(20, 48), float64], Tensor[(16, 5, 6), uint16], Tensor[(21, 1), float32], Tensor[(15, 4, 2), bool], Tensor[(6, 20), float32]) */;
  %412 = @func_4802() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %413 = %412.0;
  %414 = cast(%413, dtype="float32") /* ty=Tensor[(2, 6, 5), float32] */;
  %415 = log10(%414) /* ty=Tensor[(2, 6, 5), float32] */;
  %416 = cast(meta[relay.Constant][31] /* ty=Tensor[(2, 6, 5), float32] */, dtype="float64") /* ty=Tensor[(2, 6, 5), float64] */;
  %417 = shape_of(%415, dtype="int32") /* ty=Tensor[(3), int32] */;
  %418 = cast(%415, dtype="float64") /* ty=Tensor[(2, 6, 5), float64] */;
  %419 = dyn.reshape(%416, %417, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %420 = %411.1;
  %421 = floor_mod(%418, %419) /* ty=Tensor[(2, 6, 5), float64] */;
  (%420, %var_5136, %var_5137, %421)
}

def @func_8468(%var_8465: Tensor[(5, 11, 14), float64]) -> Tensor[(5, 11, 14), float64] {
  %422 = cast(%var_8465, dtype="float64") /* ty=Tensor[(5, 11, 14), float64] */;
  cosh(%422) /* ty=Tensor[(5, 11, 14), float64] */
}

def @func_1018(%var_953: int64, %var_954: Tensor[(7, 13, 14), int64], %var_984: Tensor[(640), bool]) -> (Tensor[(7, 13, 14), bool], Tensor[(6, 7, 14), float64], Tensor[(640), bool]) {
  %423 = cast(%var_953, dtype="bool") /* ty=bool */;
  %424 = cast(%var_954, dtype="bool") /* ty=Tensor[(7, 13, 14), bool] */;
  %425 = cast(%var_984, dtype="bool") /* ty=Tensor[(640), bool] */;
  %426 = cast(%var_984, dtype="bool") /* ty=Tensor[(640), bool] */;
  %427 = reshape(%425, newshape=[8, 5, 16]) /* ty=Tensor[(8, 5, 16), bool] */;
  %428 = reshape(%426, newshape=[8, 5, 16]) /* ty=Tensor[(8, 5, 16), bool] */;
  %429 = @func_638(%427, %428) /* ty=(Tensor[(8, 5, 16), bool], Tensor[(6, 7, 14), float64], Tensor[(588), float64]) */;
  %430 = not_equal(%423, %424) /* ty=Tensor[(7, 13, 14), bool] */;
  %431 = %429.1;
  (%430, %431, %var_984)
}

def @func_6058() -> (Tensor[(8, 3, 1), float64], Tensor[(8, 3, 1), float64], Tensor[(8, 3, 1), float32]) {
  %432 = cast(meta[relay.Constant][32] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %433 = cast(meta[relay.Constant][33] /* ty=Tensor[(8, 3, 1), int8] */, dtype="int8") /* ty=Tensor[(8, 3, 1), int8] */;
  %434 = logical_xor(%432, %433) /* ty=Tensor[(8, 3, 1), int8] */;
  %435 = cast(%434, dtype="float64") /* ty=Tensor[(8, 3, 1), float64] */;
  %436 = cast(%434, dtype="float64") /* ty=Tensor[(8, 3, 1), float64] */;
  %437 = cast(%434, dtype="float32") /* ty=Tensor[(8, 3, 1), float32] */;
  %438 = sinh(%435) /* ty=Tensor[(8, 3, 1), float64] */;
  %439 = erf(%436) /* ty=Tensor[(8, 3, 1), float64] */;
  %440 = rsqrt(%437) /* ty=Tensor[(8, 3, 1), float32] */;
  (%438, %439, %440)
}

def @func_638(%var_624: Tensor[(8, 5, 16), bool], %var_625: Tensor[(8, 5, 16), bool]) -> (Tensor[(8, 5, 16), bool], Tensor[(6, 7, 14), float64], Tensor[(588), float64]) {
  %441 = cast(%var_625, dtype="bool") /* ty=Tensor[(8, 5, 16), bool] */;
  %442 = shape_of(%var_624, dtype="int32") /* ty=Tensor[(3), int32] */;
  %443 = cast(%var_624, dtype="bool") /* ty=Tensor[(8, 5, 16), bool] */;
  %444 = dyn.reshape(%441, %442, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %445 = cast(meta[relay.Constant][34] /* ty=Tensor[(588), float64] */, dtype="float64") /* ty=Tensor[(588), float64] */;
  %446 = cast(meta[relay.Constant][34] /* ty=Tensor[(588), float64] */, dtype="float64") /* ty=Tensor[(588), float64] */;
  %447 = reshape(%445, newshape=[6, 7, 14]) /* ty=Tensor[(6, 7, 14), float64] */;
  %448 = reshape(%446, newshape=[6, 7, 14]) /* ty=Tensor[(6, 7, 14), float64] */;
  %449 = logical_or(%443, %444) /* ty=Tensor[(8, 5, 16), bool] */;
  %450 = @func_295(%447, %448) /* ty=Tensor[(6, 7, 14), float64] */;
  (%449, %450, meta[relay.Constant][34] /* ty=Tensor[(588), float64] */)
}

def @func_4648() -> (Tensor[(2, 6, 5), float64], Tensor[(8, 5, 16), bool], Tensor[(640), bool]) {
  %451 = cast(meta[relay.Constant][35] /* ty=Tensor[(2, 6, 5), float64] */, dtype="float64") /* ty=Tensor[(2, 6, 5), float64] */;
  %452 = cast(meta[relay.Constant][36] /* ty=Tensor[(640), bool] */, dtype="bool") /* ty=Tensor[(640), bool] */;
  %453 = cast(meta[relay.Constant][36] /* ty=Tensor[(640), bool] */, dtype="bool") /* ty=Tensor[(640), bool] */;
  %454 = reshape(%452, newshape=[8, 5, 16]) /* ty=Tensor[(8, 5, 16), bool] */;
  %455 = reshape(%453, newshape=[8, 5, 16]) /* ty=Tensor[(8, 5, 16), bool] */;
  %456 = @func_638(%454, %455) /* ty=(Tensor[(8, 5, 16), bool], Tensor[(6, 7, 14), float64], Tensor[(588), float64]) */;
  %457 = tan(%451) /* ty=Tensor[(2, 6, 5), float64] */;
  %458 = %456.0;
  (%457, %458, meta[relay.Constant][36] /* ty=Tensor[(640), bool] */)
}

def @func_8343() -> (Tensor[(640), bool], Tensor[(640), bool]) {
  %459 = @func_6245() /* ty=(Tensor[(640), bool],) */;
  %460 = %459.0;
  %461 = @func_7573() /* ty=Tensor[(640), bool] */;
  (%460, %461)
}

def @func_6082() -> (Tensor[(2, 6, 5), float64],) {
  %462 = @func_4802() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %463 = %462.0;
  (%463,)
}

def @func_5414() -> (Tensor[(8, 5, 16), bool],) {
  %464 = @func_4648() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(8, 5, 16), bool], Tensor[(640), bool]) */;
  %465 = %464.1;
  (%465,)
}

def @func_7133(%var_7086: Tensor[(2, 6, 5), float64]) -> (Tensor[(4, 3, 2), float32], Tensor[(168), int8], Tensor[(2, 6, 5), bool], Tensor[(120), float32], Tensor[(120), float32]) {
  %466 = @func_5893() /* ty=(Tensor[(4, 3, 2), float32],) */;
  %467 = @func_5925() /* ty=(Tensor[(2, 20), float32], Tensor[(7, 2, 12), int8], Tensor[(168), int8]) */;
  %468 = @func_6740() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %469 = %468.0;
  %470 = cast(%var_7086, dtype="bool") /* ty=Tensor[(2, 6, 5), bool] */;
  %471 = shape_of(%469, dtype="int32") /* ty=Tensor[(3), int32] */;
  %472 = cast(%469, dtype="bool") /* ty=Tensor[(2, 6, 5), bool] */;
  %473 = dyn.reshape(%470, %471, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %474 = cast(meta[relay.Constant][37] /* ty=Tensor[(120), float32] */, dtype="float32") /* ty=Tensor[(120), float32] */;
  %475 = reshape(%474, newshape=[120]) /* ty=Tensor[(120), float32] */;
  %476 = @func_6727(%475) /* ty=(Tensor[(2, 20), int32], Tensor[(14, 10, 14), float64], Tensor[(120), float32], Tensor[(2, 20), int8], Tensor[(2, 20), float32]) */;
  %477 = %466.0;
  %478 = %467.2;
  %479 = logical_and(%472, %473) /* ty=Tensor[(2, 6, 5), bool] */;
  %480 = %476.2;
  (%477, %478, %479, %480, meta[relay.Constant][37] /* ty=Tensor[(120), float32] */)
}

def @func_7281(%var_7243: Tensor[(40), float32], %var_7244: Tensor[(168), int8]) -> (Tensor[(2, 6, 5), float64], Tensor[(15, 13, 14), float32], Tensor[(7, 390), float32], Tensor[(40), float32], Tensor[(168), int8], Tensor[(588), float64]) {
  %481 = @func_6740() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %482 = cast(meta[relay.Constant][38] /* ty=Tensor[(7, 390), float32] */, dtype="float32") /* ty=Tensor[(7, 390), float32] */;
  %483 = cast(%var_7243, dtype="float32") /* ty=Tensor[(40), float32] */;
  %484 = cast(%var_7244, dtype="int8") /* ty=Tensor[(168), int8] */;
  %485 = cast(meta[relay.Constant][39] /* ty=Tensor[(588), float64] */, dtype="float64") /* ty=Tensor[(588), float64] */;
  %486 = reshape(%482, newshape=[15, 13, 14]) /* ty=Tensor[(15, 13, 14), float32] */;
  %487 = reshape(%483, newshape=[40]) /* ty=Tensor[(40), float32] */;
  %488 = reshape(%484, newshape=[168]) /* ty=Tensor[(168), int8] */;
  %489 = reshape(%485, newshape=[588]) /* ty=Tensor[(588), float64] */;
  %490 = @func_3588(%486, %487, %488, %489) /* ty=(Tensor[(15, 13, 14), float32], Tensor[(40), float32], Tensor[(3, ?, 7), uint16], Tensor[(7, 2, 12), int8], Tensor[(168), int8], Tensor[(6, 7, 14), float64], Tensor[(588), float64], Tensor[(6, 7, 14), float64]) */;
  %491 = %481.0;
  %492 = %490.0;
  (%491, %492, meta[relay.Constant][38] /* ty=Tensor[(7, 390), float32] */, %var_7243, %var_7244, meta[relay.Constant][39] /* ty=Tensor[(588), float64] */)
}

def @func_4480(%var_4469: Tensor[(9, 3, 13), float64]) -> (Tensor[(9, 3, 13), float64],) {
  %493 = cast(%var_4469, dtype="float64") /* ty=Tensor[(9, 3, 13), float64] */;
  %494 = erf(%493) /* ty=Tensor[(9, 3, 13), float64] */;
  (%494,)
}

def @func_5755() -> (Tensor[(960), float64], Tensor[(108, 4), float64]) {
  %495 = @func_5469() /* ty=(Tensor[(640), float64], Tensor[(40), float32], Tensor[(960), float64]) */;
  %496 = %495.2;
  %497 = cast(%496, dtype="float64") /* ty=Tensor[(960), float64] */;
  %498 = reshape(%497, newshape=[8, 12, 10]) /* ty=Tensor[(8, 12, 10), float64] */;
  %499 = @func_2872(%498) /* ty=(Tensor[(8, 12, 10), float64], Tensor[(108, 4), float64], Tensor[(21, 1), float32], Tensor[(40), float32]) */;
  %500 = %499.1;
  (%496, %500)
}

def @func_1903(%var_1869: Tensor[(3, 1, 7), float32], %var_1870: Tensor[(3, 1, 7), float32], %var_1888: Tensor[(40), float32]) -> (Tensor[(4, 5, 2), float32], Tensor[(40), float32], Tensor[(3, ?, 7), float64], Tensor[(6, 12, 6), float64], Tensor[(108, 4), float64], Tensor[(4, 5, 2), float32]) {
  %501 = cast(%var_1888, dtype="float32") /* ty=Tensor[(40), float32] */;
  %502 = reshape(%501, newshape=[4, 5, 2]) /* ty=Tensor[(4, 5, 2), float32] */;
  %503 = @func_1461(%502) /* ty=(Tensor[(4, 5, 2), float32],) */;
  %504 = cast(%var_1870, dtype="float32") /* ty=Tensor[(3, 1, 7), float32] */;
  %505 = shape_of(%var_1869, dtype="int32") /* ty=Tensor[(3), int32] */;
  %506 = cast(%var_1869, dtype="float32") /* ty=Tensor[(3, 1, 7), float32] */;
  %507 = dyn.reshape(%504, %505, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %508 = floor_mod(%506, %507) /* ty=Tensor[(3, ?, 7), float32] */;
  %509 = cast(%508, dtype="float64") /* ty=Tensor[(3, ?, 7), float64] */;
  %510 = shape_of(%var_1869, dtype="int32") /* ty=Tensor[(3), int32] */;
  %511 = cast(%var_1869, dtype="float64") /* ty=Tensor[(3, 1, 7), float64] */;
  %512 = dyn.reshape(%509, %510, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %513 = cast(meta[relay.Constant][40] /* ty=Tensor[(108, 4), float64] */, dtype="float64") /* ty=Tensor[(108, 4), float64] */;
  %514 = reshape(%513, newshape=[6, 12, 6]) /* ty=Tensor[(6, 12, 6), float64] */;
  %515 = cast(%var_1888, dtype="float32") /* ty=Tensor[(40), float32] */;
  %516 = reshape(%515, newshape=[4, 5, 2]) /* ty=Tensor[(4, 5, 2), float32] */;
  %517 = @func_1461(%516) /* ty=(Tensor[(4, 5, 2), float32],) */;
  %518 = %503.0;
  %519 = mod(%511, %512) /* ty=Tensor[(3, ?, 7), float64] */;
  %520 = @func_1274(%514) /* ty=Tensor[(6, 12, 6), float64] */;
  %521 = %517.0;
  (%518, %var_1888, %519, %520, meta[relay.Constant][40] /* ty=Tensor[(108, 4), float64] */, %521)
}

def @func_7726() -> (Tensor[(7, 2, 12), int8],) {
  %522 = @func_5925() /* ty=(Tensor[(2, 20), float32], Tensor[(7, 2, 12), int8], Tensor[(168), int8]) */;
  %523 = %522.1;
  (%523,)
}

def @main(%var_9660: Tensor[(13, 14, 12), uint8], %var_9667: Tensor[(1274), int64]) -> (Tensor[(32), float32], Tensor[(13, 14, 12), float64], Tensor[(1274), int8]) {
  %524 = @func_5986() /* ty=(Tensor[(13, 14, 12), uint8], Tensor[(4, 3, 2), float32]) */;
  %525 = %524.0;
  %526 = cast(%var_9660, dtype="float64") /* ty=Tensor[(13, 14, 12), float64] */;
  %527 = shape_of(%525, dtype="int32") /* ty=Tensor[(3), int32] */;
  %528 = cast(%525, dtype="float64") /* ty=Tensor[(13, 14, 12), float64] */;
  %529 = dyn.reshape(%526, %527, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %530 = mod(%528, %529) /* ty=Tensor[(13, 14, 12), float64] */;
  %531 = cast(%530, dtype="float64") /* ty=Tensor[(13, 14, 12), float64] */;
  %532 = shape_of(%var_9660, dtype="int32") /* ty=Tensor[(3), int32] */;
  %533 = cast(%var_9660, dtype="float64") /* ty=Tensor[(13, 14, 12), float64] */;
  %534 = dyn.reshape(%531, %532, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %535 = cast(meta[relay.Constant][41] /* ty=Tensor[(32), float32] */, dtype="float32") /* ty=Tensor[(32), float32] */;
  %536 = cast(%var_9667, dtype="int64") /* ty=Tensor[(1274), int64] */;
  %537 = reshape(%535, newshape=[2, 2, 8]) /* ty=Tensor[(2, 2, 8), float32] */;
  %538 = reshape(%536, newshape=[91, 14]) /* ty=Tensor[(91, 14), int64] */;
  %539 = @func_5246(%537, %538) /* ty=(Tensor[(36), float32], Tensor[(144), float32], Tensor[(2, 2, 8), uint32], Tensor[(9, 3, 13), float64], Tensor[(39, 9), float64], Tensor[(640), uint64], Tensor[(640), bool], Tensor[(91, 14), int64]) */;
  %540 = %539.7;
  %541 = cast(%540, dtype="int8") /* ty=Tensor[(91, 14), int8] */;
  %542 = shape_of(%var_9667, dtype="int32") /* ty=Tensor[(1), int32] */;
  %543 = cast(%var_9667, dtype="int8") /* ty=Tensor[(1274), int8] */;
  %544 = dyn.reshape(%541, %542, newshape=[]) /* ty=Tensor[(?), int8] */;
  %545 = divide(%533, %534) /* ty=Tensor[(13, 14, 12), float64] */;
  %546 = add(%543, %544) /* ty=Tensor[(1274), int8] */;
  (meta[relay.Constant][41] /* ty=Tensor[(32), float32] */, %545, %546)
}

def @func_1254(%var_1174: float32, %var_1200: Tensor[(637, 2), int64], %var_1201: Tensor[(20, 32), bool]) -> (Tensor[(6, 7, 14), float64], Tensor[(20, 32), bool], Tensor[(11, 2, 1), bool], Tensor[(8, 5, 16), bool], Tensor[(7, 13, 14), bool], Tensor[(637, 2), uint32], Tensor[(6, 7, 14), float64], Tensor[(6, 7, 14), float64]) {
  %547 = cast(%var_1174, dtype="int64") /* ty=int64 */;
  %548 = cast(%var_1200, dtype="int64") /* ty=Tensor[(637, 2), int64] */;
  %549 = cast(%var_1201, dtype="bool") /* ty=Tensor[(20, 32), bool] */;
  %550 = reshape(%547, newshape=[]) /* ty=int64 */;
  %551 = reshape(%548, newshape=[7, 13, 14]) /* ty=Tensor[(7, 13, 14), int64] */;
  %552 = reshape(%549, newshape=[640]) /* ty=Tensor[(640), bool] */;
  %553 = @func_1018(%550, %551, %552) /* ty=(Tensor[(7, 13, 14), bool], Tensor[(6, 7, 14), float64], Tensor[(640), bool]) */;
  %554 = cast(%var_1174, dtype="float32") /* ty=float32 */;
  %555 = cast(meta[relay.Constant][42] /* ty=Tensor[(11, 2, 1), float32] */, dtype="float32") /* ty=Tensor[(11, 2, 1), float32] */;
  %556 = mod(%554, %555) /* ty=Tensor[(11, 2, 1), float32] */;
  %557 = cast(%var_1174, dtype="int32") /* ty=int32 */;
  %558 = cast(%556, dtype="int32") /* ty=Tensor[(11, 2, 1), int32] */;
  %559 = left_shift(%557, %558) /* ty=Tensor[(11, 2, 1), int32] */;
  %560 = cast(%var_1174, dtype="bool") /* ty=bool */;
  %561 = cast(%559, dtype="bool") /* ty=Tensor[(11, 2, 1), bool] */;
  %562 = cast(%var_1201, dtype="bool") /* ty=Tensor[(20, 32), bool] */;
  %563 = cast(%var_1201, dtype="bool") /* ty=Tensor[(20, 32), bool] */;
  %564 = reshape(%562, newshape=[8, 5, 16]) /* ty=Tensor[(8, 5, 16), bool] */;
  %565 = reshape(%563, newshape=[8, 5, 16]) /* ty=Tensor[(8, 5, 16), bool] */;
  %566 = @func_638(%564, %565) /* ty=(Tensor[(8, 5, 16), bool], Tensor[(6, 7, 14), float64], Tensor[(588), float64]) */;
  %567 = cast(%var_1174, dtype="int64") /* ty=int64 */;
  %568 = cast(%var_1200, dtype="float32") /* ty=Tensor[(637, 2), float32] */;
  %569 = erf(%568) /* ty=Tensor[(637, 2), float32] */;
  %570 = cast(%569, dtype="int64") /* ty=Tensor[(637, 2), int64] */;
  %571 = %566.0;
  %572 = cast(%571, dtype="bool") /* ty=Tensor[(8, 5, 16), bool] */;
  %573 = reshape(%567, newshape=[]) /* ty=int64 */;
  %574 = reshape(%570, newshape=[7, 13, 14]) /* ty=Tensor[(7, 13, 14), int64] */;
  %575 = reshape(%572, newshape=[640]) /* ty=Tensor[(640), bool] */;
  %576 = @func_1018(%573, %574, %575) /* ty=(Tensor[(7, 13, 14), bool], Tensor[(6, 7, 14), float64], Tensor[(640), bool]) */;
  %577 = cast(%569, dtype="uint32") /* ty=Tensor[(637, 2), uint32] */;
  %578 = cast(%var_1174, dtype="uint32") /* ty=uint32 */;
  %579 = %553.1;
  %580 = cast(%579, dtype="float64") /* ty=Tensor[(6, 7, 14), float64] */;
  %581 = cast(%579, dtype="float64") /* ty=Tensor[(6, 7, 14), float64] */;
  %582 = reshape(%580, newshape=[6, 7, 14]) /* ty=Tensor[(6, 7, 14), float64] */;
  %583 = reshape(%581, newshape=[6, 7, 14]) /* ty=Tensor[(6, 7, 14), float64] */;
  %584 = cast(%579, dtype="float64") /* ty=Tensor[(6, 7, 14), float64] */;
  %585 = cast(%579, dtype="float64") /* ty=Tensor[(6, 7, 14), float64] */;
  %586 = reshape(%584, newshape=[6, 7, 14]) /* ty=Tensor[(6, 7, 14), float64] */;
  %587 = reshape(%585, newshape=[6, 7, 14]) /* ty=Tensor[(6, 7, 14), float64] */;
  %588 = not_equal(%560, %561) /* ty=Tensor[(11, 2, 1), bool] */;
  %589 = %576.0;
  %590 = maximum(%577, %578) /* ty=Tensor[(637, 2), uint32] */;
  %591 = @func_295(%582, %583) /* ty=Tensor[(6, 7, 14), float64] */;
  %592 = @func_295(%586, %587) /* ty=Tensor[(6, 7, 14), float64] */;
  (%579, %var_1201, %588, %571, %589, %590, %591, %592)
}

def @func_8593(%var_8525: Tensor[(30, 4), float32], %var_8537: Tensor[(60, 2), float32], %var_8583: Tensor[(60, 2), float64]) -> (Tensor[(2, 6, 5), float64], Tensor[(480), float64], Tensor[(30, 4), float32], Tensor[(60, 2), int64], Tensor[(4, 3, 2), float32], Tensor[(320, 2), bool], Tensor[(120), float32], Tensor[(16, 3, 8), float64], Tensor[(384), float32], Tensor[(60, 2), int64]) {
  %593 = @func_7201() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %594 = cast(meta[relay.Constant][43] /* ty=Tensor[(480), float64] */, dtype="float64") /* ty=Tensor[(480), float64] */;
  %595 = cast(%var_8525, dtype="float32") /* ty=Tensor[(30, 4), float32] */;
  %596 = reshape(%594, newshape=[480]) /* ty=Tensor[(480), float64] */;
  %597 = reshape(%595, newshape=[60, 2]) /* ty=Tensor[(60, 2), float32] */;
  %598 = @func_5153(%596, %597) /* ty=(Tensor[(20, 48), float64], Tensor[(480), float64], Tensor[(60, 2), float32], Tensor[(2, 6, 5), float64]) */;
  %599 = %598.2;
  %600 = cast(%var_8537, dtype="int64") /* ty=Tensor[(60, 2), int64] */;
  %601 = shape_of(%599, dtype="int32") /* ty=Tensor[(2), int32] */;
  %602 = cast(%599, dtype="int64") /* ty=Tensor[(60, 2), int64] */;
  %603 = dyn.reshape(%600, %601, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %604 = @func_4838() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(4, 5, 2), float32], Tensor[(21), float32], Tensor[(2, 20), float32], Tensor[(4, 3, 2), float32], Tensor[(24), float32]) */;
  %605 = %604.4;
  %606 = cast(%605, dtype="float32") /* ty=Tensor[(4, 3, 2), float32] */;
  %607 = reshape(%606, newshape=[4, 3, 2]) /* ty=Tensor[(4, 3, 2), float32] */;
  %608 = @func_6378(%607) /* ty=(Tensor[(4, 3, 2), int16], float32, Tensor[(70), float64], Tensor[(320, 2), bool]) */;
  %609 = cast(meta[relay.Constant][44] /* ty=Tensor[(60, 2), float32] */, dtype="float32") /* ty=Tensor[(60, 2), float32] */;
  %610 = reshape(%609, newshape=[120]) /* ty=Tensor[(120), float32] */;
  %611 = @func_6727(%610) /* ty=(Tensor[(2, 20), int32], Tensor[(14, 10, 14), float64], Tensor[(120), float32], Tensor[(2, 20), int8], Tensor[(2, 20), float32]) */;
  %612 = cast(meta[relay.Constant][45] /* ty=Tensor[(384), float32] */, dtype="float32") /* ty=Tensor[(384), float32] */;
  %613 = reshape(%612, newshape=[16, 3, 8]) /* ty=Tensor[(16, 3, 8), float32] */;
  %614 = cast(meta[relay.Constant][44] /* ty=Tensor[(60, 2), float32] */, dtype="bool") /* ty=Tensor[(60, 2), bool] */;
  %615 = shape_of(%var_8537, dtype="int32") /* ty=Tensor[(2), int32] */;
  %616 = cast(%var_8537, dtype="bool") /* ty=Tensor[(60, 2), bool] */;
  %617 = dyn.reshape(%614, %615, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %618 = greater(%616, %617) /* ty=Tensor[(60, 2), bool] */;
  %619 = cast(%618, dtype="float64") /* ty=Tensor[(60, 2), float64] */;
  %620 = sin(%619) /* ty=Tensor[(60, 2), float64] */;
  %621 = cast(%var_8583, dtype="int64") /* ty=Tensor[(60, 2), int64] */;
  %622 = shape_of(%620, dtype="int32") /* ty=Tensor[(2), int32] */;
  %623 = cast(%620, dtype="int64") /* ty=Tensor[(60, 2), int64] */;
  %624 = dyn.reshape(%621, %622, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %625 = %593.0;
  %626 = subtract(%602, %603) /* ty=Tensor[(60, 2), int64] */;
  %627 = %608.3;
  %628 = %611.2;
  %629 = @func_5282(%613) /* ty=Tensor[(16, 3, 8), float64] */;
  %630 = bitwise_and(%623, %624) /* ty=Tensor[(60, 2), int64] */;
  (%625, meta[relay.Constant][43] /* ty=Tensor[(480), float64] */, %var_8525, %626, %605, %627, %628, %629, meta[relay.Constant][45] /* ty=Tensor[(384), float32] */, %630)
}

def @func_5804(%var_5774: Tensor[(70), float64]) -> (Tensor[(2, 6, 5), float64], Tensor[(21), float32], float32, Tensor[(70), float64], Tensor[(640), bool]) {
  %631 = @func_4802() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %632 = @func_4838() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(4, 5, 2), float32], Tensor[(21), float32], Tensor[(2, 20), float32], Tensor[(4, 3, 2), float32], Tensor[(24), float32]) */;
  %633 = %632.2;
  %634 = cast(%633, dtype="float32") /* ty=Tensor[(21), float32] */;
  %635 = acosh(%634) /* ty=Tensor[(21), float32] */;
  %636 = cast(%635, dtype="float32") /* ty=Tensor[(21), float32] */;
  %637 = cast(%var_5774, dtype="float64") /* ty=Tensor[(70), float64] */;
  %638 = cast(meta[relay.Constant][46] /* ty=Tensor[(640), bool] */, dtype="bool") /* ty=Tensor[(640), bool] */;
  %639 = cast(%var_5774, dtype="float64") /* ty=Tensor[(70), float64] */;
  %640 = reshape(%637, newshape=[10, 1, 7]) /* ty=Tensor[(10, 1, 7), float64] */;
  %641 = reshape(%638, newshape=[320, 2]) /* ty=Tensor[(320, 2), bool] */;
  %642 = reshape(%639, newshape=[10, 1, 7]) /* ty=Tensor[(10, 1, 7), float64] */;
  %643 = @func_2234(%640, %641, %642) /* ty=(float32, Tensor[(1274), int64], Tensor[(320, 2), bool], Tensor[(10, ?, 7), uint16], Tensor[(6, 7, 14), float64], Tensor[(6, 7, 14), float64]) */;
  %644 = %631.0;
  %645 = sqrt(%636) /* ty=Tensor[(21), float32] */;
  %646 = %643.0;
  (%644, %645, %646, %var_5774, meta[relay.Constant][46] /* ty=Tensor[(640), bool] */)
}

def @func_5615(%var_5610: Tensor[(2, 6, 5), float64]) -> (Tensor[(21), float32], Tensor[(2, 6, 5), int8]) {
  %647 = @func_4838() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(4, 5, 2), float32], Tensor[(21), float32], Tensor[(2, 20), float32], Tensor[(4, 3, 2), float32], Tensor[(24), float32]) */;
  %648 = @func_4802() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %649 = %648.0;
  %650 = cast(%var_5610, dtype="int8") /* ty=Tensor[(2, 6, 5), int8] */;
  %651 = shape_of(%649, dtype="int32") /* ty=Tensor[(3), int32] */;
  %652 = cast(%649, dtype="int8") /* ty=Tensor[(2, 6, 5), int8] */;
  %653 = dyn.reshape(%650, %651, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %654 = %647.2;
  %655 = subtract(%652, %653) /* ty=Tensor[(2, 6, 5), int8] */;
  (%654, %655)
}

def @func_5294() -> Tensor[(640), bool] {
  %656 = @func_4684() /* ty=(Tensor[(640), bool],) */;
  %656.0
}

def @func_1461(%var_1444: Tensor[(4, 5, 2), float32]) -> (Tensor[(4, 5, 2), float32],) {
  %657 = cast(%var_1444, dtype="float32") /* ty=Tensor[(4, 5, 2), float32] */;
  %658 = log10(%657) /* ty=Tensor[(4, 5, 2), float32] */;
  (%658,)
}

def @func_6791() -> (Tensor[(4, 5, 2), float32], Tensor[(2, 20), float32]) {
  %659 = @func_4838() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(4, 5, 2), float32], Tensor[(21), float32], Tensor[(2, 20), float32], Tensor[(4, 3, 2), float32], Tensor[(24), float32]) */;
  %660 = %659.1;
  %661 = @func_6313() /* ty=Tensor[(2, 20), float32] */;
  (%660, %661)
}

def @func_6740() -> (Tensor[(2, 6, 5), float64],) {
  %662 = @func_4802() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %663 = %662.0;
  (%663,)
}

def @func_7409() -> (Tensor[(2, 6, 5), float64],) {
  %664 = @func_4802() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %665 = %664.0;
  (%665,)
}

def @func_7437() -> Tensor[(8, 5, 16), bool] {
  %666 = @func_5414() /* ty=(Tensor[(8, 5, 16), bool],) */;
  %666.0
}

def @func_9019() -> (Tensor[(7, 2, 12), float32],) {
  %667 = @func_5925() /* ty=(Tensor[(2, 20), float32], Tensor[(7, 2, 12), int8], Tensor[(168), int8]) */;
  %668 = %667.1;
  %669 = cast(%668, dtype="float32") /* ty=Tensor[(7, 2, 12), float32] */;
  %670 = sigmoid(%669) /* ty=Tensor[(7, 2, 12), float32] */;
  (%670,)
}

def @func_7679(%var_7667: Tensor[(12, 10, 16), bool], %var_7668: Tensor[(12, 10, 16), bool]) -> (Tensor[(12, 10, 16), bool], Tensor[(12, 10, 16), float32]) {
  %671 = cast(%var_7668, dtype="bool") /* ty=Tensor[(12, 10, 16), bool] */;
  %672 = shape_of(%var_7667, dtype="int32") /* ty=Tensor[(3), int32] */;
  %673 = cast(%var_7667, dtype="bool") /* ty=Tensor[(12, 10, 16), bool] */;
  %674 = dyn.reshape(%671, %672, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %675 = cast(%var_7667, dtype="float32") /* ty=Tensor[(12, 10, 16), float32] */;
  %676 = logical_or(%673, %674) /* ty=Tensor[(12, 10, 16), bool] */;
  %677 = log2(%675) /* ty=Tensor[(12, 10, 16), float32] */;
  (%676, %677)
}

def @func_9538() -> (Tensor[(8, 5, 16), bool], Tensor[(6, 12, 6), float64], Tensor[(432), float64]) {
  %678 = cast(meta[relay.Constant][47] /* ty=Tensor[(432), float64] */, dtype="float64") /* ty=Tensor[(432), float64] */;
  %679 = reshape(%678, newshape=[6, 12, 6]) /* ty=Tensor[(6, 12, 6), float64] */;
  %680 = @func_7437() /* ty=Tensor[(8, 5, 16), bool] */;
  %681 = @func_1274(%679) /* ty=Tensor[(6, 12, 6), float64] */;
  (%680, %681, meta[relay.Constant][47] /* ty=Tensor[(432), float64] */)
}

def @func_3588(%var_3535: Tensor[(15, 13, 14), float32], %var_3545: Tensor[(40), float32], %var_3553: Tensor[(168), int8], %var_3560: Tensor[(588), float64]) -> (Tensor[(15, 13, 14), float32], Tensor[(40), float32], Tensor[(3, ?, 7), uint16], Tensor[(7, 2, 12), int8], Tensor[(168), int8], Tensor[(6, 7, 14), float64], Tensor[(588), float64], Tensor[(6, 7, 14), float64]) {
  %682 = cast(%var_3535, dtype="float32") /* ty=Tensor[(15, 13, 14), float32] */;
  %683 = cast(meta[relay.Constant][48] /* ty=Tensor[(21), float32] */, dtype="float32") /* ty=Tensor[(21), float32] */;
  %684 = cast(meta[relay.Constant][48] /* ty=Tensor[(21), float32] */, dtype="float32") /* ty=Tensor[(21), float32] */;
  %685 = cast(%var_3545, dtype="float32") /* ty=Tensor[(40), float32] */;
  %686 = reshape(%683, newshape=[3, 1, 7]) /* ty=Tensor[(3, 1, 7), float32] */;
  %687 = reshape(%684, newshape=[3, 1, 7]) /* ty=Tensor[(3, 1, 7), float32] */;
  %688 = reshape(%685, newshape=[40]) /* ty=Tensor[(40), float32] */;
  %689 = @func_1903(%686, %687, %688) /* ty=(Tensor[(4, 5, 2), float32], Tensor[(40), float32], Tensor[(3, ?, 7), float64], Tensor[(6, 12, 6), float64], Tensor[(108, 4), float64], Tensor[(4, 5, 2), float32]) */;
  %690 = %689.2;
  %691 = cast(meta[relay.Constant][48] /* ty=Tensor[(21), float32] */, dtype="uint16") /* ty=Tensor[(21), uint16] */;
  %692 = shape_of(%690, dtype="int32") /* ty=Tensor[(3), int32] */;
  %693 = cast(%690, dtype="uint16") /* ty=Tensor[(3, ?, 7), uint16] */;
  %694 = dyn.reshape(%691, %692, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %695 = cast(%var_3553, dtype="int8") /* ty=Tensor[(168), int8] */;
  %696 = reshape(%695, newshape=[7, 2, 12]) /* ty=Tensor[(7, 2, 12), int8] */;
  %697 = cast(%var_3560, dtype="float64") /* ty=Tensor[(588), float64] */;
  %698 = cast(%var_3560, dtype="float64") /* ty=Tensor[(588), float64] */;
  %699 = reshape(%697, newshape=[6, 7, 14]) /* ty=Tensor[(6, 7, 14), float64] */;
  %700 = reshape(%698, newshape=[6, 7, 14]) /* ty=Tensor[(6, 7, 14), float64] */;
  %701 = @func_295(%699, %700) /* ty=Tensor[(6, 7, 14), float64] */;
  %702 = cast(%701, dtype="float64") /* ty=Tensor[(6, 7, 14), float64] */;
  %703 = cast(%701, dtype="float64") /* ty=Tensor[(6, 7, 14), float64] */;
  %704 = reshape(%702, newshape=[6, 7, 14]) /* ty=Tensor[(6, 7, 14), float64] */;
  %705 = reshape(%703, newshape=[6, 7, 14]) /* ty=Tensor[(6, 7, 14), float64] */;
  %706 = cosh(%682) /* ty=Tensor[(15, 13, 14), float32] */;
  %707 = logical_xor(%693, %694) /* ty=Tensor[(3, ?, 7), uint16] */;
  %708 = @func_2681(%696) /* ty=Tensor[(7, 2, 12), int8] */;
  %709 = @func_295(%704, %705) /* ty=Tensor[(6, 7, 14), float64] */;
  (%706, %var_3545, %707, %708, %var_3553, %701, %var_3560, %709)
}

def @func_9413() -> (Tensor[(4, 3, 2), float32], Tensor[(24), float32], Tensor[(2, 20), float32]) {
  %710 = @func_5893() /* ty=(Tensor[(4, 3, 2), float32],) */;
  %711 = %710.0;
  %712 = cast(%711, dtype="float32") /* ty=Tensor[(4, 3, 2), float32] */;
  %713 = rsqrt(%712) /* ty=Tensor[(4, 3, 2), float32] */;
  %714 = @func_6631() /* ty=Tensor[(24), float32] */;
  %715 = @func_6313() /* ty=Tensor[(2, 20), float32] */;
  (%713, %714, %715)
}

def @func_4684() -> (Tensor[(640), bool],) {
  %716 = @func_4648() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(8, 5, 16), bool], Tensor[(640), bool]) */;
  %717 = %716.2;
  (%717,)
}

def @func_8163(%var_8157: Tensor[(24, 1), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(320, 2), bool], Tensor[(24, 1), float32], Tensor[(960), float64]) {
  %718 = @func_6082() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %719 = %718.0;
  %720 = cast(%719, dtype="float64") /* ty=Tensor[(2, 6, 5), float64] */;
  %721 = cast(%var_8157, dtype="float32") /* ty=Tensor[(24, 1), float32] */;
  %722 = reshape(%721, newshape=[4, 3, 2]) /* ty=Tensor[(4, 3, 2), float32] */;
  %723 = @func_6378(%722) /* ty=(Tensor[(4, 3, 2), int16], float32, Tensor[(70), float64], Tensor[(320, 2), bool]) */;
  %724 = @func_5755() /* ty=(Tensor[(960), float64], Tensor[(108, 4), float64]) */;
  %725 = sin(%720) /* ty=Tensor[(2, 6, 5), float64] */;
  %726 = %723.3;
  %727 = %724.0;
  (%725, %726, %var_8157, %727)
}

def @func_8859() -> (Tensor[(640), bool], Tensor[(2, 6, 5), float64], Tensor[(2, 20), float32]) {
  %728 = @func_7891() /* ty=(Tensor[(4, 3, 2), float32], Tensor[(640), bool]) */;
  %729 = @func_8117() /* ty=(Tensor[(640), bool], Tensor[(2, 6, 5), float64], Tensor[(640), bool], Tensor[(2, 6, 5), float64], Tensor[(640), uint16], Tensor[(9, 3, 13), float64], Tensor[(351), float64]) */;
  %730 = %728.1;
  %731 = %729.1;
  %732 = @func_6313() /* ty=Tensor[(2, 20), float32] */;
  (%730, %731, %732)
}

def @func_7573() -> Tensor[(640), bool] {
  @func_5494() /* ty=Tensor[(640), bool] */
}

def @func_9390() -> (Tensor[(1, 15, 1), float64],) {
  %733 = @func_8759() /* ty=(Tensor[(40), float64], Tensor[(1, 15, 1), float64], Tensor[(15), float64]) */;
  %734 = %733.1;
  (%734,)
}

def @func_2681(%var_2655: Tensor[(7, 2, 12), int8]) -> Tensor[(7, 2, 12), int8] {
  %735 = cast(%var_2655, dtype="int8") /* ty=Tensor[(7, 2, 12), int8] */;
  %736 = shape_of(meta[relay.Constant][49] /* ty=Tensor[(7, 2, 12), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %737 = cast(meta[relay.Constant][49] /* ty=Tensor[(7, 2, 12), int8] */, dtype="int8") /* ty=Tensor[(7, 2, 12), int8] */;
  %738 = dyn.reshape(%735, %736, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  subtract(%737, %738) /* ty=Tensor[(7, 2, 12), int8] */
}

def @func_6552() -> Tensor[(8, 3, 1), float32] {
  %739 = @func_6058() /* ty=(Tensor[(8, 3, 1), float64], Tensor[(8, 3, 1), float64], Tensor[(8, 3, 1), float32]) */;
  %739.2
}

def @func_5724(%var_5719: Tensor[(1, 6), int64]) -> (Tensor[(1, 6), int64],) {
  %740 = cast(2 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %741 = cast(%var_5719, dtype="int64") /* ty=Tensor[(1, 6), int64] */;
  %742 = logical_xor(%740, %741) /* ty=Tensor[(1, 6), int64] */;
  (%742,)
}

def @func_8371() -> (Tensor[(2, 6, 5), float64],) {
  %743 = @func_8117() /* ty=(Tensor[(640), bool], Tensor[(2, 6, 5), float64], Tensor[(640), bool], Tensor[(2, 6, 5), float64], Tensor[(640), uint16], Tensor[(9, 3, 13), float64], Tensor[(351), float64]) */;
  %744 = %743.3;
  (%744,)
}

def @func_6337(%var_6326: Tensor[(2, 10, 1), float64]) -> (Tensor[(2, 10, 1), float64],) {
  %745 = cast(%var_6326, dtype="float64") /* ty=Tensor[(2, 10, 1), float64] */;
  %746 = acosh(%745) /* ty=Tensor[(2, 10, 1), float64] */;
  (%746,)
}

def @func_6968(%var_6963: Tensor[(640), bool]) -> Tensor[(640), bool] {
  %747 = @func_6245() /* ty=(Tensor[(640), bool],) */;
  %748 = %747.0;
  %749 = cast(%var_6963, dtype="bool") /* ty=Tensor[(640), bool] */;
  %750 = shape_of(%748, dtype="int32") /* ty=Tensor[(1), int32] */;
  %751 = cast(%748, dtype="bool") /* ty=Tensor[(640), bool] */;
  %752 = dyn.reshape(%749, %750, newshape=[]) /* ty=Tensor[(?), bool] */;
  greater_equal(%751, %752) /* ty=Tensor[(640), bool] */
}

def @func_9631() -> (Tensor[(640), bool], Tensor[(4, 3, 2), float64], Tensor[(8, 3, 1), float64]) {
  %753 = @func_5986() /* ty=(Tensor[(13, 14, 12), uint8], Tensor[(4, 3, 2), float32]) */;
  %754 = %753.1;
  %755 = cast(%754, dtype="float64") /* ty=Tensor[(4, 3, 2), float64] */;
  %756 = @func_6058() /* ty=(Tensor[(8, 3, 1), float64], Tensor[(8, 3, 1), float64], Tensor[(8, 3, 1), float32]) */;
  %757 = @func_5494() /* ty=Tensor[(640), bool] */;
  %758 = erf(%755) /* ty=Tensor[(4, 3, 2), float64] */;
  %759 = %756.0;
  (%757, %758, %759)
}

def @func_7758(%var_7746: Tensor[(960), float64], %var_7747: Tensor[(168), int8], %var_7754: Tensor[(84, 12), float32]) -> (Tensor[(640), bool], Tensor[(12, 32), float32], Tensor[(16, 3, 8), float64], Tensor[(7, 2, 12), int8], Tensor[(960), float64], Tensor[(168), int8], Tensor[(14, 6, 12), float32], Tensor[(84, 12), float32]) {
  %760 = @func_6245() /* ty=(Tensor[(640), bool],) */;
  %761 = cast(meta[relay.Constant][50] /* ty=Tensor[(12, 32), float32] */, dtype="float32") /* ty=Tensor[(12, 32), float32] */;
  %762 = reshape(%761, newshape=[16, 3, 8]) /* ty=Tensor[(16, 3, 8), float32] */;
  %763 = @func_5282(%762) /* ty=Tensor[(16, 3, 8), float64] */;
  %764 = cast(%763, dtype="float64") /* ty=Tensor[(16, 3, 8), float64] */;
  %765 = cast(%var_7746, dtype="float64") /* ty=Tensor[(960), float64] */;
  %766 = cast(%var_7747, dtype="int8") /* ty=Tensor[(168), int8] */;
  %767 = reshape(%765, newshape=[15, 8, 8]) /* ty=Tensor[(15, 8, 8), float64] */;
  %768 = reshape(%766, newshape=[168]) /* ty=Tensor[(168), int8] */;
  %769 = @func_3875(%767, %768) /* ty=(Tensor[(15, 8, 8), float64], Tensor[(7, 2, 12), int8], Tensor[(168), int8]) */;
  %770 = cast(%var_7754, dtype="float32") /* ty=Tensor[(84, 12), float32] */;
  %771 = reshape(%770, newshape=[14, 6, 12]) /* ty=Tensor[(14, 6, 12), float32] */;
  %772 = @func_5693(%771) /* ty=(Tensor[(14, 6, 12), float32],) */;
  %773 = %760.0;
  %774 = tan(%764) /* ty=Tensor[(16, 3, 8), float64] */;
  %775 = %769.1;
  %776 = %772.0;
  (%773, meta[relay.Constant][50] /* ty=Tensor[(12, 32), float32] */, %774, %775, %var_7746, %var_7747, %776, %var_7754)
}

def @func_5586() -> (Tensor[(640), bool], Tensor[(21), float32], Tensor[(6, 7, 14), float64], Tensor[(8, 5, 16), int32], Tensor[(6, 12, 6), float64], Tensor[(432), float64]) {
  %777 = @func_4684() /* ty=(Tensor[(640), bool],) */;
  %778 = @func_4838() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(4, 5, 2), float32], Tensor[(21), float32], Tensor[(2, 20), float32], Tensor[(4, 3, 2), float32], Tensor[(24), float32]) */;
  %779 = %777.0;
  %780 = cast(%779, dtype="bool") /* ty=Tensor[(640), bool] */;
  %781 = @func_5414() /* ty=(Tensor[(8, 5, 16), bool],) */;
  %782 = %781.0;
  %783 = cast(%782, dtype="bool") /* ty=Tensor[(8, 5, 16), bool] */;
  %784 = reshape(%780, newshape=[8, 5, 16]) /* ty=Tensor[(8, 5, 16), bool] */;
  %785 = reshape(%783, newshape=[8, 5, 16]) /* ty=Tensor[(8, 5, 16), bool] */;
  %786 = @func_638(%784, %785) /* ty=(Tensor[(8, 5, 16), bool], Tensor[(6, 7, 14), float64], Tensor[(588), float64]) */;
  %787 = cast(%782, dtype="float64") /* ty=Tensor[(8, 5, 16), float64] */;
  %788 = tan(%787) /* ty=Tensor[(8, 5, 16), float64] */;
  %789 = cast(meta[relay.Constant][51] /* ty=Tensor[(8, 5, 16), float64] */, dtype="int32") /* ty=Tensor[(8, 5, 16), int32] */;
  %790 = shape_of(%788, dtype="int32") /* ty=Tensor[(3), int32] */;
  %791 = cast(%788, dtype="int32") /* ty=Tensor[(8, 5, 16), int32] */;
  %792 = dyn.reshape(%789, %790, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %793 = cast(meta[relay.Constant][52] /* ty=Tensor[(432), float64] */, dtype="float64") /* ty=Tensor[(432), float64] */;
  %794 = reshape(%793, newshape=[6, 12, 6]) /* ty=Tensor[(6, 12, 6), float64] */;
  %795 = %778.2;
  %796 = %786.1;
  %797 = bitwise_and(%791, %792) /* ty=Tensor[(8, 5, 16), int32] */;
  %798 = @func_1274(%794) /* ty=Tensor[(6, 12, 6), float64] */;
  (%779, %795, %796, %797, %798, meta[relay.Constant][52] /* ty=Tensor[(432), float64] */)
}

def @func_4726(%var_4716: Tensor[(4, 3, 2), float32], %var_4717: Tensor[(4, 3, 2), float32]) -> Tensor[(4, 3, 2), float32] {
  %799 = cast(%var_4717, dtype="float32") /* ty=Tensor[(4, 3, 2), float32] */;
  %800 = shape_of(%var_4716, dtype="int32") /* ty=Tensor[(3), int32] */;
  %801 = cast(%var_4716, dtype="float32") /* ty=Tensor[(4, 3, 2), float32] */;
  %802 = dyn.reshape(%799, %800, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%801, %802) /* ty=Tensor[(4, 3, 2), float32] */
}

def @func_7602(%var_7597: Tensor[(1, 15, 1), float64]) -> (Tensor[(1, 15, 1), float64],) {
  %803 = cast(%var_7597, dtype="float64") /* ty=Tensor[(1, 15, 1), float64] */;
  %804 = asin(%803) /* ty=Tensor[(1, 15, 1), float64] */;
  (%804,)
}

def @func_4269(%var_4217: Tensor[(16, 5, 6), float64], %var_4259: Tensor[(6, 20), float32]) -> (Tensor[(40), float32], Tensor[(20, 48), float64], Tensor[(16, 5, 6), uint16], Tensor[(21, 1), float32], Tensor[(15, 4, 2), bool], Tensor[(6, 20), float32]) {
  %805 = cast(meta[relay.Constant][53] /* ty=Tensor[(20, 48), float64] */, dtype="float64") /* ty=Tensor[(20, 48), float64] */;
  %806 = reshape(%805, newshape=[8, 12, 10]) /* ty=Tensor[(8, 12, 10), float64] */;
  %807 = @func_2872(%806) /* ty=(Tensor[(8, 12, 10), float64], Tensor[(108, 4), float64], Tensor[(21, 1), float32], Tensor[(40), float32]) */;
  %808 = cast(%var_4217, dtype="float64") /* ty=Tensor[(16, 5, 6), float64] */;
  %809 = atan(%808) /* ty=Tensor[(16, 5, 6), float64] */;
  %810 = cast(%809, dtype="float64") /* ty=Tensor[(16, 5, 6), float64] */;
  %811 = cosh(%810) /* ty=Tensor[(16, 5, 6), float64] */;
  %812 = cast(%809, dtype="uint16") /* ty=Tensor[(16, 5, 6), uint16] */;
  %813 = shape_of(%811, dtype="int32") /* ty=Tensor[(3), int32] */;
  %814 = cast(%811, dtype="uint16") /* ty=Tensor[(16, 5, 6), uint16] */;
  %815 = dyn.reshape(%812, %813, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %816 = cast(meta[relay.Constant][53] /* ty=Tensor[(20, 48), float64] */, dtype="float64") /* ty=Tensor[(20, 48), float64] */;
  %817 = reshape(%816, newshape=[8, 12, 10]) /* ty=Tensor[(8, 12, 10), float64] */;
  %818 = @func_2872(%817) /* ty=(Tensor[(8, 12, 10), float64], Tensor[(108, 4), float64], Tensor[(21, 1), float32], Tensor[(40), float32]) */;
  %819 = cast(%var_4259, dtype="float32") /* ty=Tensor[(6, 20), float32] */;
  %820 = reshape(%819, newshape=[15, 4, 2]) /* ty=Tensor[(15, 4, 2), float32] */;
  %821 = @func_1105(%820) /* ty=(Tensor[(15, 4, 2), bool],) */;
  %822 = %807.3;
  %823 = bitwise_or(%814, %815) /* ty=Tensor[(16, 5, 6), uint16] */;
  %824 = %818.2;
  %825 = %821.0;
  (%822, meta[relay.Constant][53] /* ty=Tensor[(20, 48), float64] */, %823, %824, %825, %var_4259)
}

def @func_6378(%var_6354: Tensor[(4, 3, 2), float32]) -> (Tensor[(4, 3, 2), int16], float32, Tensor[(70), float64], Tensor[(320, 2), bool]) {
  %826 = @func_5986() /* ty=(Tensor[(13, 14, 12), uint8], Tensor[(4, 3, 2), float32]) */;
  %827 = %826.1;
  %828 = cast(%var_6354, dtype="int16") /* ty=Tensor[(4, 3, 2), int16] */;
  %829 = shape_of(%827, dtype="int32") /* ty=Tensor[(3), int32] */;
  %830 = cast(%827, dtype="int16") /* ty=Tensor[(4, 3, 2), int16] */;
  %831 = dyn.reshape(%828, %829, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %832 = cast(meta[relay.Constant][54] /* ty=Tensor[(70), float64] */, dtype="float64") /* ty=Tensor[(70), float64] */;
  %833 = cast(meta[relay.Constant][55] /* ty=Tensor[(320, 2), bool] */, dtype="bool") /* ty=Tensor[(320, 2), bool] */;
  %834 = cast(meta[relay.Constant][54] /* ty=Tensor[(70), float64] */, dtype="float64") /* ty=Tensor[(70), float64] */;
  %835 = reshape(%832, newshape=[10, 1, 7]) /* ty=Tensor[(10, 1, 7), float64] */;
  %836 = reshape(%833, newshape=[320, 2]) /* ty=Tensor[(320, 2), bool] */;
  %837 = reshape(%834, newshape=[10, 1, 7]) /* ty=Tensor[(10, 1, 7), float64] */;
  %838 = @func_2234(%835, %836, %837) /* ty=(float32, Tensor[(1274), int64], Tensor[(320, 2), bool], Tensor[(10, ?, 7), uint16], Tensor[(6, 7, 14), float64], Tensor[(6, 7, 14), float64]) */;
  %839 = subtract(%830, %831) /* ty=Tensor[(4, 3, 2), int16] */;
  %840 = %838.0;
  (%839, %840, meta[relay.Constant][54] /* ty=Tensor[(70), float64] */, meta[relay.Constant][55] /* ty=Tensor[(320, 2), bool] */)
}

def @func_7991() -> (Tensor[(8, 5, 16), bool],) {
  %841 = @func_7437() /* ty=Tensor[(8, 5, 16), bool] */;
  (%841,)
}

def @func_5494() -> Tensor[(640), bool] {
  @func_5294() /* ty=Tensor[(640), bool] */
}

def @func_7891() -> (Tensor[(4, 3, 2), float32], Tensor[(640), bool]) {
  %842 = @func_4838() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(4, 5, 2), float32], Tensor[(21), float32], Tensor[(2, 20), float32], Tensor[(4, 3, 2), float32], Tensor[(24), float32]) */;
  %843 = @func_4684() /* ty=(Tensor[(640), bool],) */;
  %844 = %842.4;
  %845 = %843.0;
  (%844, %845)
}

def @func_4802() -> (Tensor[(2, 6, 5), float64],) {
  %846 = @func_4648() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(8, 5, 16), bool], Tensor[(640), bool]) */;
  %847 = %846.0;
  (%847,)
}

def @func_9160(%var_9126: int32, %var_9127: Tensor[(12, 3, 8), int32]) -> (Tensor[(12, 3, 8), bool], Tensor[(640), bool], Tensor[(640), bool]) {
  %848 = cast(%var_9126, dtype="bool") /* ty=bool */;
  %849 = cast(%var_9127, dtype="bool") /* ty=Tensor[(12, 3, 8), bool] */;
  %850 = @func_7891() /* ty=(Tensor[(4, 3, 2), float32], Tensor[(640), bool]) */;
  %851 = @func_4648() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(8, 5, 16), bool], Tensor[(640), bool]) */;
  %852 = greater(%848, %849) /* ty=Tensor[(12, 3, 8), bool] */;
  %853 = %850.1;
  %854 = %851.2;
  (%852, %853, %854)
}

def @func_6816(%var_6809: Tensor[(2, 6, 5), float64]) -> Tensor[(2, 6, 5), bool] {
  %855 = @func_4648() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(8, 5, 16), bool], Tensor[(640), bool]) */;
  %856 = %855.0;
  %857 = cast(%var_6809, dtype="bool") /* ty=Tensor[(2, 6, 5), bool] */;
  %858 = shape_of(%856, dtype="int32") /* ty=Tensor[(3), int32] */;
  %859 = cast(%856, dtype="bool") /* ty=Tensor[(2, 6, 5), bool] */;
  %860 = dyn.reshape(%857, %858, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%859, %860) /* ty=Tensor[(2, 6, 5), bool] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_3963(%var_3937: Tensor[(10, 16, 6), float32]) -> Tensor[(10, 16, 6), bool] {
  %0 = cast(%var_3937, dtype="float32") /* ty=Tensor[(10, 16, 6), float32] */;
  %1 = atanh(%0) /* ty=Tensor[(10, 16, 6), float32] */;
  %2 = cast(%1, dtype="bool") /* ty=Tensor[(10, 16, 6), bool] */;
  %3 = shape_of(%var_3937, dtype="int32") /* ty=Tensor[(3), int32] */;
  %4 = cast(%var_3937, dtype="bool") /* ty=Tensor[(10, 16, 6), bool] */;
  %5 = dyn.reshape(%2, %3, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%4, %5) /* ty=Tensor[(10, 16, 6), bool] */
}

def @func_9230(%var_9228: Tensor[(30, 2), float64]) -> (Tensor[(640), bool], Tensor[(640), bool], Tensor[(30, 2), float32]) {
  @func_9227(%var_9228) /* ty=(Tensor[(640), bool], Tensor[(640), bool], Tensor[(30, 2), float32]) */
}

def @func_3588(%var_3535: Tensor[(15, 13, 14), float32], %var_3545: Tensor[(40), float32], %var_3553: Tensor[(168), int8], %var_3560: Tensor[(588), float64]) -> (Tensor[(15, 13, 14), float32], Tensor[(40), float32], Tensor[(3, ?, 7), uint16], Tensor[(7, 2, 12), int8], Tensor[(168), int8], Tensor[(6, 7, 14), float64], Tensor[(588), float64], Tensor[(6, 7, 14), float64]) {
  %6 = cast(%var_3535, dtype="float32") /* ty=Tensor[(15, 13, 14), float32] */;
  %7 = cast(meta[relay.Constant][0] /* ty=Tensor[(21), float32] */, dtype="float32") /* ty=Tensor[(21), float32] */;
  %8 = cast(meta[relay.Constant][0] /* ty=Tensor[(21), float32] */, dtype="float32") /* ty=Tensor[(21), float32] */;
  %9 = cast(%var_3545, dtype="float32") /* ty=Tensor[(40), float32] */;
  %10 = reshape(%7, newshape=[3, 1, 7]) /* ty=Tensor[(3, 1, 7), float32] */;
  %11 = reshape(%8, newshape=[3, 1, 7]) /* ty=Tensor[(3, 1, 7), float32] */;
  %12 = reshape(%9, newshape=[40]) /* ty=Tensor[(40), float32] */;
  %13 = @func_1903(%10, %11, %12) /* ty=(Tensor[(4, 5, 2), float32], Tensor[(40), float32], Tensor[(3, ?, 7), float64], Tensor[(6, 12, 6), float64], Tensor[(108, 4), float64], Tensor[(4, 5, 2), float32]) */;
  %14 = %13.2;
  %15 = cast(meta[relay.Constant][0] /* ty=Tensor[(21), float32] */, dtype="uint16") /* ty=Tensor[(21), uint16] */;
  %16 = shape_of(%14, dtype="int32") /* ty=Tensor[(3), int32] */;
  %17 = cast(%14, dtype="uint16") /* ty=Tensor[(3, ?, 7), uint16] */;
  %18 = dyn.reshape(%15, %16, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %19 = cast(%var_3553, dtype="int8") /* ty=Tensor[(168), int8] */;
  %20 = reshape(%19, newshape=[7, 2, 12]) /* ty=Tensor[(7, 2, 12), int8] */;
  %21 = cast(%var_3560, dtype="float64") /* ty=Tensor[(588), float64] */;
  %22 = cast(%var_3560, dtype="float64") /* ty=Tensor[(588), float64] */;
  %23 = reshape(%21, newshape=[6, 7, 14]) /* ty=Tensor[(6, 7, 14), float64] */;
  %24 = reshape(%22, newshape=[6, 7, 14]) /* ty=Tensor[(6, 7, 14), float64] */;
  %25 = @func_295(%23, %24) /* ty=Tensor[(6, 7, 14), float64] */;
  %26 = cast(%25, dtype="float64") /* ty=Tensor[(6, 7, 14), float64] */;
  %27 = cast(%25, dtype="float64") /* ty=Tensor[(6, 7, 14), float64] */;
  %28 = reshape(%26, newshape=[6, 7, 14]) /* ty=Tensor[(6, 7, 14), float64] */;
  %29 = reshape(%27, newshape=[6, 7, 14]) /* ty=Tensor[(6, 7, 14), float64] */;
  %30 = cosh(%6) /* ty=Tensor[(15, 13, 14), float32] */;
  %31 = logical_xor(%17, %18) /* ty=Tensor[(3, ?, 7), uint16] */;
  %32 = @func_2681(%20) /* ty=Tensor[(7, 2, 12), int8] */;
  %33 = @func_295(%28, %29) /* ty=Tensor[(6, 7, 14), float64] */;
  (%30, %var_3545, %31, %32, %var_3553, %25, %var_3560, %33)
}

def @func_7203() -> (Tensor[(2, 6, 5), float64],) {
  @func_7201() /* ty=(Tensor[(2, 6, 5), float64],) */
}

def @func_7602(%var_7597: Tensor[(1, 15, 1), float64]) -> (Tensor[(1, 15, 1), float64],) {
  %34 = cast(%var_7597, dtype="float64") /* ty=Tensor[(1, 15, 1), float64] */;
  %35 = asin(%34) /* ty=Tensor[(1, 15, 1), float64] */;
  (%35,)
}

def @func_6729(%var_6728: Tensor[(120), float32]) -> (Tensor[(2, 20), int32], Tensor[(14, 10, 14), float64], Tensor[(120), float32], Tensor[(2, 20), int8], Tensor[(2, 20), float32]) {
  %54 = fn (%var_6691: Tensor[(120), float32]) -> (Tensor[(2, 20), int32], Tensor[(14, 10, 14), float64], Tensor[(120), float32], Tensor[(2, 20), int8], Tensor[(2, 20), float32]) {
    %36 = @func_4970() /* ty=(Tensor[(2, 20), float32],) */;
    %37 = %36.0;
    %38 = cast(meta[relay.Constant][1] /* ty=Tensor[(2, 20), float32] */, dtype="int32") /* ty=Tensor[(2, 20), int32] */;
    %39 = shape_of(%37, dtype="int32") /* ty=Tensor[(2), int32] */;
    %40 = cast(%37, dtype="int32") /* ty=Tensor[(2, 20), int32] */;
    %41 = dyn.reshape(%38, %39, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
    %42 = cast(%var_6691, dtype="float32") /* ty=Tensor[(120), float32] */;
    %43 = reshape(%42, newshape=[120]) /* ty=Tensor[(120), float32] */;
    %44 = @func_3160(%43) /* ty=(Tensor[(15, 4, 2), bool], Tensor[(120), float32], Tensor[(14, 10, 14), float64]) */;
    %45 = cast(meta[relay.Constant][2] /* ty=Tensor[(2, 20), float32] */, dtype="int8") /* ty=Tensor[(2, 20), int8] */;
    %46 = shape_of(%37, dtype="int32") /* ty=Tensor[(2), int32] */;
    %47 = cast(%37, dtype="int8") /* ty=Tensor[(2, 20), int8] */;
    %48 = dyn.reshape(%45, %46, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
    %49 = cast(meta[relay.Constant][2] /* ty=Tensor[(2, 20), float32] */, dtype="float32") /* ty=Tensor[(2, 20), float32] */;
    %50 = bitwise_xor(%40, %41) /* ty=Tensor[(2, 20), int32] */;
    %51 = %44.2;
    %52 = maximum(%47, %48) /* ty=Tensor[(2, 20), int8] */;
    %53 = tan(%49) /* ty=Tensor[(2, 20), float32] */;
    (%50, %51, %var_6691, %52, %53)
  };
  %54(%var_6728) /* ty=(Tensor[(2, 20), int32], Tensor[(14, 10, 14), float64], Tensor[(120), float32], Tensor[(2, 20), int8], Tensor[(2, 20), float32]) */
}

def @func_7639(%var_7638: Tensor[(91, 14), int64]) -> (Tensor[(640), bool], Tensor[(6, 7, 14), float64], float32, Tensor[(91, 14), int64]) {
  %64 = fn (%var_7632: Tensor[(91, 14), int64]) -> (Tensor[(640), bool], Tensor[(6, 7, 14), float64], float32, Tensor[(91, 14), int64]) {
    %55 = cast(-3.18364f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %56 = cast(%var_7632, dtype="int64") /* ty=Tensor[(91, 14), int64] */;
    %57 = @func_7573() /* ty=Tensor[(640), bool] */;
    %58 = cast(%57, dtype="bool") /* ty=Tensor[(640), bool] */;
    %59 = reshape(%55, newshape=[]) /* ty=float32 */;
    %60 = reshape(%56, newshape=[637, 2]) /* ty=Tensor[(637, 2), int64] */;
    %61 = reshape(%58, newshape=[20, 32]) /* ty=Tensor[(20, 32), bool] */;
    %62 = @func_1254(%59, %60, %61) /* ty=(Tensor[(6, 7, 14), float64], Tensor[(20, 32), bool], Tensor[(11, 2, 1), bool], Tensor[(8, 5, 16), bool], Tensor[(7, 13, 14), bool], Tensor[(637, 2), uint32], Tensor[(6, 7, 14), float64], Tensor[(6, 7, 14), float64]) */;
    %63 = %62.7;
    (%57, %63, -3.18364f /* ty=float32 */, %var_7632)
  };
  %64(%var_7638) /* ty=(Tensor[(640), bool], Tensor[(6, 7, 14), float64], float32, Tensor[(91, 14), int64]) */
}

def @func_5895() -> (Tensor[(4, 3, 2), float32],) {
  @func_5893() /* ty=(Tensor[(4, 3, 2), float32],) */
}

def @func_6219(%var_6217: Tensor[(2, 1, 7), int16]) -> (Tensor[(2, 1, 7), bool],) {
  @func_6216(%var_6217) /* ty=(Tensor[(2, 1, 7), bool],) */
}

def @func_638(%var_624: Tensor[(8, 5, 16), bool], %var_625: Tensor[(8, 5, 16), bool]) -> (Tensor[(8, 5, 16), bool], Tensor[(6, 7, 14), float64], Tensor[(588), float64]) {
  %65 = cast(%var_625, dtype="bool") /* ty=Tensor[(8, 5, 16), bool] */;
  %66 = shape_of(%var_624, dtype="int32") /* ty=Tensor[(3), int32] */;
  %67 = cast(%var_624, dtype="bool") /* ty=Tensor[(8, 5, 16), bool] */;
  %68 = dyn.reshape(%65, %66, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %69 = cast(meta[relay.Constant][3] /* ty=Tensor[(588), float64] */, dtype="float64") /* ty=Tensor[(588), float64] */;
  %70 = cast(meta[relay.Constant][3] /* ty=Tensor[(588), float64] */, dtype="float64") /* ty=Tensor[(588), float64] */;
  %71 = reshape(%69, newshape=[6, 7, 14]) /* ty=Tensor[(6, 7, 14), float64] */;
  %72 = reshape(%70, newshape=[6, 7, 14]) /* ty=Tensor[(6, 7, 14), float64] */;
  %73 = logical_or(%67, %68) /* ty=Tensor[(8, 5, 16), bool] */;
  %74 = @func_295(%71, %72) /* ty=Tensor[(6, 7, 14), float64] */;
  (%73, %74, meta[relay.Constant][3] /* ty=Tensor[(588), float64] */)
}

def @func_5250(%var_5248: Tensor[(2, 2, 8), float32], %var_5249: Tensor[(91, 14), int64]) -> (Tensor[(36), float32], Tensor[(144), float32], Tensor[(2, 2, 8), uint32], Tensor[(9, 3, 13), float64], Tensor[(39, 9), float64], Tensor[(640), uint64], Tensor[(640), bool], Tensor[(91, 14), int64]) {
  @func_5246(%var_5248, %var_5249) /* ty=(Tensor[(36), float32], Tensor[(144), float32], Tensor[(2, 2, 8), uint32], Tensor[(9, 3, 13), float64], Tensor[(39, 9), float64], Tensor[(640), uint64], Tensor[(640), bool], Tensor[(91, 14), int64]) */
}

def @func_7605(%var_7603: Tensor[(1, 15, 1), float64]) -> (Tensor[(1, 15, 1), float64],) {
  @func_7602(%var_7603) /* ty=(Tensor[(1, 15, 1), float64],) */
}

def @func_642(%var_640: Tensor[(8, 5, 16), bool], %var_641: Tensor[(8, 5, 16), bool]) -> (Tensor[(8, 5, 16), bool], Tensor[(6, 7, 14), float64], Tensor[(588), float64]) {
  @func_638(%var_640, %var_641) /* ty=(Tensor[(8, 5, 16), bool], Tensor[(6, 7, 14), float64], Tensor[(588), float64]) */
}

def @func_9227(%var_9214: Tensor[(30, 2), float64]) -> (Tensor[(640), bool], Tensor[(640), bool], Tensor[(30, 2), float32]) {
  %75 = @func_8343() /* ty=(Tensor[(640), bool], Tensor[(640), bool]) */;
  %76 = cast(meta[relay.Constant][4] /* ty=Tensor[(30, 2), float64] */, dtype="float64") /* ty=Tensor[(30, 2), float64] */;
  %77 = reshape(%76, newshape=[2, 6, 5]) /* ty=Tensor[(2, 6, 5), float64] */;
  %78 = @func_8302(%77) /* ty=(Tensor[(640), bool], Tensor[(2, 6, 5), uint16]) */;
  %79 = cast(%var_9214, dtype="float32") /* ty=Tensor[(30, 2), float32] */;
  %80 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(30, 2), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %81 = cast(meta[relay.Constant][4] /* ty=Tensor[(30, 2), float64] */, dtype="float32") /* ty=Tensor[(30, 2), float32] */;
  %82 = dyn.reshape(%79, %80, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %83 = %75.0;
  %84 = %78.0;
  %85 = floor_mod(%81, %82) /* ty=Tensor[(30, 2), float32] */;
  (%83, %84, %85)
}

def @func_5755() -> (Tensor[(960), float64], Tensor[(108, 4), float64]) {
  %86 = @func_5469() /* ty=(Tensor[(640), float64], Tensor[(40), float32], Tensor[(960), float64]) */;
  %87 = %86.2;
  %88 = cast(%87, dtype="float64") /* ty=Tensor[(960), float64] */;
  %89 = reshape(%88, newshape=[8, 12, 10]) /* ty=Tensor[(8, 12, 10), float64] */;
  %90 = @func_2872(%89) /* ty=(Tensor[(8, 12, 10), float64], Tensor[(108, 4), float64], Tensor[(21, 1), float32], Tensor[(40), float32]) */;
  %91 = %90.1;
  (%87, %91)
}

def @func_7410() -> (Tensor[(2, 6, 5), float64],) {
  %94 = fn () -> (Tensor[(2, 6, 5), float64],) {
    %92 = @func_4802() /* ty=(Tensor[(2, 6, 5), float64],) */;
    %93 = %92.0;
    (%93,)
  };
  %94() /* ty=(Tensor[(2, 6, 5), float64],) */
}

def @func_5893() -> (Tensor[(4, 3, 2), float32],) {
  %95 = @func_4838() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(4, 5, 2), float32], Tensor[(21), float32], Tensor[(2, 20), float32], Tensor[(4, 3, 2), float32], Tensor[(24), float32]) */;
  %96 = %95.4;
  (%96,)
}

def @func_6512(%var_6510: Tensor[(2, 20), float32]) -> (Tensor[(2, 20), float64], Tensor[(2, 20), float64], Tensor[(2, 20), bool]) {
  @func_6509(%var_6510) /* ty=(Tensor[(2, 20), float64], Tensor[(2, 20), float64], Tensor[(2, 20), bool]) */
}

def @func_8761() -> (Tensor[(40), float64], Tensor[(1, 15, 1), float64], Tensor[(15), float64]) {
  @func_8759() /* ty=(Tensor[(40), float64], Tensor[(1, 15, 1), float64], Tensor[(15), float64]) */
}

def @func_6340(%var_6338: Tensor[(2, 10, 1), float64]) -> (Tensor[(2, 10, 1), float64],) {
  @func_6337(%var_6338) /* ty=(Tensor[(2, 10, 1), float64],) */
}

def @func_9652(%var_9644: Tensor[(5, 9, 15), uint8], %var_9645: Tensor[(5, 9, 15), uint8]) -> (Tensor[(5, 9, 15), uint8],) {
  %97 = cast(%var_9645, dtype="uint8") /* ty=Tensor[(5, 9, 15), uint8] */;
  %98 = shape_of(%var_9644, dtype="int32") /* ty=Tensor[(3), int32] */;
  %99 = cast(%var_9644, dtype="uint8") /* ty=Tensor[(5, 9, 15), uint8] */;
  %100 = dyn.reshape(%97, %98, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %101 = add(%99, %100) /* ty=Tensor[(5, 9, 15), uint8] */;
  (%101,)
}

def @func_7284(%var_7282: Tensor[(40), float32], %var_7283: Tensor[(168), int8]) -> (Tensor[(2, 6, 5), float64], Tensor[(15, 13, 14), float32], Tensor[(7, 390), float32], Tensor[(40), float32], Tensor[(168), int8], Tensor[(588), float64]) {
  %114 = fn (%var_7243: Tensor[(40), float32], %var_7244: Tensor[(168), int8]) -> (Tensor[(2, 6, 5), float64], Tensor[(15, 13, 14), float32], Tensor[(7, 390), float32], Tensor[(40), float32], Tensor[(168), int8], Tensor[(588), float64]) {
    %102 = @func_6740() /* ty=(Tensor[(2, 6, 5), float64],) */;
    %103 = cast(meta[relay.Constant][5] /* ty=Tensor[(7, 390), float32] */, dtype="float32") /* ty=Tensor[(7, 390), float32] */;
    %104 = cast(%var_7243, dtype="float32") /* ty=Tensor[(40), float32] */;
    %105 = cast(%var_7244, dtype="int8") /* ty=Tensor[(168), int8] */;
    %106 = cast(meta[relay.Constant][6] /* ty=Tensor[(588), float64] */, dtype="float64") /* ty=Tensor[(588), float64] */;
    %107 = reshape(%103, newshape=[15, 13, 14]) /* ty=Tensor[(15, 13, 14), float32] */;
    %108 = reshape(%104, newshape=[40]) /* ty=Tensor[(40), float32] */;
    %109 = reshape(%105, newshape=[168]) /* ty=Tensor[(168), int8] */;
    %110 = reshape(%106, newshape=[588]) /* ty=Tensor[(588), float64] */;
    %111 = @func_3588(%107, %108, %109, %110) /* ty=(Tensor[(15, 13, 14), float32], Tensor[(40), float32], Tensor[(3, ?, 7), uint16], Tensor[(7, 2, 12), int8], Tensor[(168), int8], Tensor[(6, 7, 14), float64], Tensor[(588), float64], Tensor[(6, 7, 14), float64]) */;
    %112 = %102.0;
    %113 = %111.0;
    (%112, %113, meta[relay.Constant][5] /* ty=Tensor[(7, 390), float32] */, %var_7243, %var_7244, meta[relay.Constant][6] /* ty=Tensor[(588), float64] */)
  };
  %114(%var_7282, %var_7283) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(15, 13, 14), float32], Tensor[(7, 390), float32], Tensor[(40), float32], Tensor[(168), int8], Tensor[(588), float64]) */
}

def @func_5757() -> (Tensor[(960), float64], Tensor[(108, 4), float64]) {
  @func_5755() /* ty=(Tensor[(960), float64], Tensor[(108, 4), float64]) */
}

def @func_8302(%var_8295: Tensor[(2, 6, 5), float64]) -> (Tensor[(640), bool], Tensor[(2, 6, 5), uint16]) {
  %115 = @func_4648() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(8, 5, 16), bool], Tensor[(640), bool]) */;
  %116 = @func_6740() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %117 = %116.0;
  %118 = cast(%var_8295, dtype="uint16") /* ty=Tensor[(2, 6, 5), uint16] */;
  %119 = shape_of(%117, dtype="int32") /* ty=Tensor[(3), int32] */;
  %120 = cast(%117, dtype="uint16") /* ty=Tensor[(2, 6, 5), uint16] */;
  %121 = dyn.reshape(%118, %119, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %122 = %115.2;
  %123 = multiply(%120, %121) /* ty=Tensor[(2, 6, 5), uint16] */;
  (%122, %123)
}

def @func_9632() -> (Tensor[(640), bool], Tensor[(4, 3, 2), float64], Tensor[(8, 3, 1), float64]) {
  %131 = fn () -> (Tensor[(640), bool], Tensor[(4, 3, 2), float64], Tensor[(8, 3, 1), float64]) {
    %124 = @func_5986() /* ty=(Tensor[(13, 14, 12), uint8], Tensor[(4, 3, 2), float32]) */;
    %125 = %124.1;
    %126 = cast(%125, dtype="float64") /* ty=Tensor[(4, 3, 2), float64] */;
    %127 = @func_6058() /* ty=(Tensor[(8, 3, 1), float64], Tensor[(8, 3, 1), float64], Tensor[(8, 3, 1), float32]) */;
    %128 = @func_5494() /* ty=Tensor[(640), bool] */;
    %129 = erf(%126) /* ty=Tensor[(4, 3, 2), float64] */;
    %130 = %127.0;
    (%128, %129, %130)
  };
  %131() /* ty=(Tensor[(640), bool], Tensor[(4, 3, 2), float64], Tensor[(8, 3, 1), float64]) */
}

def @func_4730(%var_4728: Tensor[(4, 3, 2), float32], %var_4729: Tensor[(4, 3, 2), float32]) -> Tensor[(4, 3, 2), float32] {
  @func_4726(%var_4728, %var_4729) /* ty=Tensor[(4, 3, 2), float32] */
}

def @func_1907(%var_1904: Tensor[(3, 1, 7), float32], %var_1905: Tensor[(3, 1, 7), float32], %var_1906: Tensor[(40), float32]) -> (Tensor[(4, 5, 2), float32], Tensor[(40), float32], Tensor[(3, ?, 7), float64], Tensor[(6, 12, 6), float64], Tensor[(108, 4), float64], Tensor[(4, 5, 2), float32]) {
  %153 = fn (%var_1869: Tensor[(3, 1, 7), float32], %var_1870: Tensor[(3, 1, 7), float32], %var_1888: Tensor[(40), float32]) -> (Tensor[(4, 5, 2), float32], Tensor[(40), float32], Tensor[(3, ?, 7), float64], Tensor[(6, 12, 6), float64], Tensor[(108, 4), float64], Tensor[(4, 5, 2), float32]) {
    %132 = cast(%var_1888, dtype="float32") /* ty=Tensor[(40), float32] */;
    %133 = reshape(%132, newshape=[4, 5, 2]) /* ty=Tensor[(4, 5, 2), float32] */;
    %134 = @func_1461(%133) /* ty=(Tensor[(4, 5, 2), float32],) */;
    %135 = cast(%var_1870, dtype="float32") /* ty=Tensor[(3, 1, 7), float32] */;
    %136 = shape_of(%var_1869, dtype="int32") /* ty=Tensor[(3), int32] */;
    %137 = cast(%var_1869, dtype="float32") /* ty=Tensor[(3, 1, 7), float32] */;
    %138 = dyn.reshape(%135, %136, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %139 = floor_mod(%137, %138) /* ty=Tensor[(3, ?, 7), float32] */;
    %140 = cast(%139, dtype="float64") /* ty=Tensor[(3, ?, 7), float64] */;
    %141 = shape_of(%var_1869, dtype="int32") /* ty=Tensor[(3), int32] */;
    %142 = cast(%var_1869, dtype="float64") /* ty=Tensor[(3, 1, 7), float64] */;
    %143 = dyn.reshape(%140, %141, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %144 = cast(meta[relay.Constant][7] /* ty=Tensor[(108, 4), float64] */, dtype="float64") /* ty=Tensor[(108, 4), float64] */;
    %145 = reshape(%144, newshape=[6, 12, 6]) /* ty=Tensor[(6, 12, 6), float64] */;
    %146 = cast(%var_1888, dtype="float32") /* ty=Tensor[(40), float32] */;
    %147 = reshape(%146, newshape=[4, 5, 2]) /* ty=Tensor[(4, 5, 2), float32] */;
    %148 = @func_1461(%147) /* ty=(Tensor[(4, 5, 2), float32],) */;
    %149 = %134.0;
    %150 = mod(%142, %143) /* ty=Tensor[(3, ?, 7), float64] */;
    %151 = @func_1274(%145) /* ty=Tensor[(6, 12, 6), float64] */;
    %152 = %148.0;
    (%149, %var_1888, %150, %151, meta[relay.Constant][7] /* ty=Tensor[(108, 4), float64] */, %152)
  };
  %153(%var_1904, %var_1905, %var_1906) /* ty=(Tensor[(4, 5, 2), float32], Tensor[(40), float32], Tensor[(3, ?, 7), float64], Tensor[(6, 12, 6), float64], Tensor[(108, 4), float64], Tensor[(4, 5, 2), float32]) */
}

def @func_4684() -> (Tensor[(640), bool],) {
  %154 = @func_4648() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(8, 5, 16), bool], Tensor[(640), bool]) */;
  %155 = %154.2;
  (%155,)
}

def @func_2872(%var_2856: Tensor[(8, 12, 10), float64]) -> (Tensor[(8, 12, 10), float64], Tensor[(108, 4), float64], Tensor[(21, 1), float32], Tensor[(40), float32]) {
  %156 = cast(%var_2856, dtype="float64") /* ty=Tensor[(8, 12, 10), float64] */;
  %157 = shape_of(meta[relay.Constant][8] /* ty=Tensor[(8, 12, 10), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %158 = cast(meta[relay.Constant][8] /* ty=Tensor[(8, 12, 10), float64] */, dtype="float64") /* ty=Tensor[(8, 12, 10), float64] */;
  %159 = dyn.reshape(%156, %157, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %160 = cast(meta[relay.Constant][9] /* ty=Tensor[(21, 1), float32] */, dtype="float32") /* ty=Tensor[(21, 1), float32] */;
  %161 = cast(meta[relay.Constant][9] /* ty=Tensor[(21, 1), float32] */, dtype="float32") /* ty=Tensor[(21, 1), float32] */;
  %162 = cast(meta[relay.Constant][10] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
  %163 = reshape(%160, newshape=[3, 1, 7]) /* ty=Tensor[(3, 1, 7), float32] */;
  %164 = reshape(%161, newshape=[3, 1, 7]) /* ty=Tensor[(3, 1, 7), float32] */;
  %165 = reshape(%162, newshape=[40]) /* ty=Tensor[(40), float32] */;
  %166 = @func_1903(%163, %164, %165) /* ty=(Tensor[(4, 5, 2), float32], Tensor[(40), float32], Tensor[(3, ?, 7), float64], Tensor[(6, 12, 6), float64], Tensor[(108, 4), float64], Tensor[(4, 5, 2), float32]) */;
  %167 = mod(%158, %159) /* ty=Tensor[(8, 12, 10), float64] */;
  %168 = %166.4;
  (%167, %168, meta[relay.Constant][9] /* ty=Tensor[(21, 1), float32] */, meta[relay.Constant][10] /* ty=Tensor[(40), float32] */)
}

def @func_8795() -> (Tensor[(4, 3, 2), float32], Tensor[(13, 14, 12), uint8]) {
  %173 = fn () -> (Tensor[(4, 3, 2), float32], Tensor[(13, 14, 12), uint8]) {
    %169 = @func_5893() /* ty=(Tensor[(4, 3, 2), float32],) */;
    %170 = @func_5986() /* ty=(Tensor[(13, 14, 12), uint8], Tensor[(4, 3, 2), float32]) */;
    %171 = %169.0;
    %172 = %170.0;
    (%171, %172)
  };
  %173() /* ty=(Tensor[(4, 3, 2), float32], Tensor[(13, 14, 12), uint8]) */
}

def @func_7762(%var_7759: Tensor[(960), float64], %var_7760: Tensor[(168), int8], %var_7761: Tensor[(84, 12), float32]) -> (Tensor[(640), bool], Tensor[(12, 32), float32], Tensor[(16, 3, 8), float64], Tensor[(7, 2, 12), int8], Tensor[(960), float64], Tensor[(168), int8], Tensor[(14, 6, 12), float32], Tensor[(84, 12), float32]) {
  %191 = fn (%var_7746: Tensor[(960), float64], %var_7747: Tensor[(168), int8], %var_7754: Tensor[(84, 12), float32]) -> (Tensor[(640), bool], Tensor[(12, 32), float32], Tensor[(16, 3, 8), float64], Tensor[(7, 2, 12), int8], Tensor[(960), float64], Tensor[(168), int8], Tensor[(14, 6, 12), float32], Tensor[(84, 12), float32]) {
    %174 = @func_6245() /* ty=(Tensor[(640), bool],) */;
    %175 = cast(meta[relay.Constant][11] /* ty=Tensor[(12, 32), float32] */, dtype="float32") /* ty=Tensor[(12, 32), float32] */;
    %176 = reshape(%175, newshape=[16, 3, 8]) /* ty=Tensor[(16, 3, 8), float32] */;
    %177 = @func_5282(%176) /* ty=Tensor[(16, 3, 8), float64] */;
    %178 = cast(%177, dtype="float64") /* ty=Tensor[(16, 3, 8), float64] */;
    %179 = cast(%var_7746, dtype="float64") /* ty=Tensor[(960), float64] */;
    %180 = cast(%var_7747, dtype="int8") /* ty=Tensor[(168), int8] */;
    %181 = reshape(%179, newshape=[15, 8, 8]) /* ty=Tensor[(15, 8, 8), float64] */;
    %182 = reshape(%180, newshape=[168]) /* ty=Tensor[(168), int8] */;
    %183 = @func_3875(%181, %182) /* ty=(Tensor[(15, 8, 8), float64], Tensor[(7, 2, 12), int8], Tensor[(168), int8]) */;
    %184 = cast(%var_7754, dtype="float32") /* ty=Tensor[(84, 12), float32] */;
    %185 = reshape(%184, newshape=[14, 6, 12]) /* ty=Tensor[(14, 6, 12), float32] */;
    %186 = @func_5693(%185) /* ty=(Tensor[(14, 6, 12), float32],) */;
    %187 = %174.0;
    %188 = tan(%178) /* ty=Tensor[(16, 3, 8), float64] */;
    %189 = %183.1;
    %190 = %186.0;
    (%187, meta[relay.Constant][11] /* ty=Tensor[(12, 32), float32] */, %188, %189, %var_7746, %var_7747, %190, %var_7754)
  };
  %191(%var_7759, %var_7760, %var_7761) /* ty=(Tensor[(640), bool], Tensor[(12, 32), float32], Tensor[(16, 3, 8), float64], Tensor[(7, 2, 12), int8], Tensor[(960), float64], Tensor[(168), int8], Tensor[(14, 6, 12), float32], Tensor[(84, 12), float32]) */
}

def @func_1258(%var_1255: float32, %var_1256: Tensor[(637, 2), int64], %var_1257: Tensor[(20, 32), bool]) -> (Tensor[(6, 7, 14), float64], Tensor[(20, 32), bool], Tensor[(11, 2, 1), bool], Tensor[(8, 5, 16), bool], Tensor[(7, 13, 14), bool], Tensor[(637, 2), uint32], Tensor[(6, 7, 14), float64], Tensor[(6, 7, 14), float64]) {
  %238 = fn (%var_1174: float32, %var_1200: Tensor[(637, 2), int64], %var_1201: Tensor[(20, 32), bool]) -> (Tensor[(6, 7, 14), float64], Tensor[(20, 32), bool], Tensor[(11, 2, 1), bool], Tensor[(8, 5, 16), bool], Tensor[(7, 13, 14), bool], Tensor[(637, 2), uint32], Tensor[(6, 7, 14), float64], Tensor[(6, 7, 14), float64]) {
    %192 = cast(%var_1174, dtype="int64") /* ty=int64 */;
    %193 = cast(%var_1200, dtype="int64") /* ty=Tensor[(637, 2), int64] */;
    %194 = cast(%var_1201, dtype="bool") /* ty=Tensor[(20, 32), bool] */;
    %195 = reshape(%192, newshape=[]) /* ty=int64 */;
    %196 = reshape(%193, newshape=[7, 13, 14]) /* ty=Tensor[(7, 13, 14), int64] */;
    %197 = reshape(%194, newshape=[640]) /* ty=Tensor[(640), bool] */;
    %198 = @func_1018(%195, %196, %197) /* ty=(Tensor[(7, 13, 14), bool], Tensor[(6, 7, 14), float64], Tensor[(640), bool]) */;
    %199 = cast(%var_1174, dtype="float32") /* ty=float32 */;
    %200 = cast(meta[relay.Constant][12] /* ty=Tensor[(11, 2, 1), float32] */, dtype="float32") /* ty=Tensor[(11, 2, 1), float32] */;
    %201 = mod(%199, %200) /* ty=Tensor[(11, 2, 1), float32] */;
    %202 = cast(%var_1174, dtype="int32") /* ty=int32 */;
    %203 = cast(%201, dtype="int32") /* ty=Tensor[(11, 2, 1), int32] */;
    %204 = left_shift(%202, %203) /* ty=Tensor[(11, 2, 1), int32] */;
    %205 = cast(%var_1174, dtype="bool") /* ty=bool */;
    %206 = cast(%204, dtype="bool") /* ty=Tensor[(11, 2, 1), bool] */;
    %207 = cast(%var_1201, dtype="bool") /* ty=Tensor[(20, 32), bool] */;
    %208 = cast(%var_1201, dtype="bool") /* ty=Tensor[(20, 32), bool] */;
    %209 = reshape(%207, newshape=[8, 5, 16]) /* ty=Tensor[(8, 5, 16), bool] */;
    %210 = reshape(%208, newshape=[8, 5, 16]) /* ty=Tensor[(8, 5, 16), bool] */;
    %211 = @func_638(%209, %210) /* ty=(Tensor[(8, 5, 16), bool], Tensor[(6, 7, 14), float64], Tensor[(588), float64]) */;
    %212 = cast(%var_1174, dtype="int64") /* ty=int64 */;
    %213 = cast(%var_1200, dtype="float32") /* ty=Tensor[(637, 2), float32] */;
    %214 = erf(%213) /* ty=Tensor[(637, 2), float32] */;
    %215 = cast(%214, dtype="int64") /* ty=Tensor[(637, 2), int64] */;
    %216 = %211.0;
    %217 = cast(%216, dtype="bool") /* ty=Tensor[(8, 5, 16), bool] */;
    %218 = reshape(%212, newshape=[]) /* ty=int64 */;
    %219 = reshape(%215, newshape=[7, 13, 14]) /* ty=Tensor[(7, 13, 14), int64] */;
    %220 = reshape(%217, newshape=[640]) /* ty=Tensor[(640), bool] */;
    %221 = @func_1018(%218, %219, %220) /* ty=(Tensor[(7, 13, 14), bool], Tensor[(6, 7, 14), float64], Tensor[(640), bool]) */;
    %222 = cast(%214, dtype="uint32") /* ty=Tensor[(637, 2), uint32] */;
    %223 = cast(%var_1174, dtype="uint32") /* ty=uint32 */;
    %224 = %198.1;
    %225 = cast(%224, dtype="float64") /* ty=Tensor[(6, 7, 14), float64] */;
    %226 = cast(%224, dtype="float64") /* ty=Tensor[(6, 7, 14), float64] */;
    %227 = reshape(%225, newshape=[6, 7, 14]) /* ty=Tensor[(6, 7, 14), float64] */;
    %228 = reshape(%226, newshape=[6, 7, 14]) /* ty=Tensor[(6, 7, 14), float64] */;
    %229 = cast(%224, dtype="float64") /* ty=Tensor[(6, 7, 14), float64] */;
    %230 = cast(%224, dtype="float64") /* ty=Tensor[(6, 7, 14), float64] */;
    %231 = reshape(%229, newshape=[6, 7, 14]) /* ty=Tensor[(6, 7, 14), float64] */;
    %232 = reshape(%230, newshape=[6, 7, 14]) /* ty=Tensor[(6, 7, 14), float64] */;
    %233 = not_equal(%205, %206) /* ty=Tensor[(11, 2, 1), bool] */;
    %234 = %221.0;
    %235 = maximum(%222, %223) /* ty=Tensor[(637, 2), uint32] */;
    %236 = @func_295(%227, %228) /* ty=Tensor[(6, 7, 14), float64] */;
    %237 = @func_295(%231, %232) /* ty=Tensor[(6, 7, 14), float64] */;
    (%224, %var_1201, %233, %216, %234, %235, %236, %237)
  };
  %238(%var_1255, %var_1256, %var_1257) /* ty=(Tensor[(6, 7, 14), float64], Tensor[(20, 32), bool], Tensor[(11, 2, 1), bool], Tensor[(8, 5, 16), bool], Tensor[(7, 13, 14), bool], Tensor[(637, 2), uint32], Tensor[(6, 7, 14), float64], Tensor[(6, 7, 14), float64]) */
}

def @func_7944(%var_7941: float32, %var_7942: Tensor[(24), float32], %var_7943: Tensor[(1274), int64]) -> (Tensor[(1, 10, 15), float32], Tensor[(4, 3, 2), float32], Tensor[(24), float32], Tensor[(640), bool], Tensor[(1274), int64], Tensor[(4, 3, 2), float32], Tensor[(640), bool]) {
  @func_7939(%var_7941, %var_7942, %var_7943) /* ty=(Tensor[(1, 10, 15), float32], Tensor[(4, 3, 2), float32], Tensor[(24), float32], Tensor[(640), bool], Tensor[(1274), int64], Tensor[(4, 3, 2), float32], Tensor[(640), bool]) */
}

def @func_9656(%var_9654: Tensor[(5, 9, 15), uint8], %var_9655: Tensor[(5, 9, 15), uint8]) -> (Tensor[(5, 9, 15), uint8],) {
  @func_9652(%var_9654, %var_9655) /* ty=(Tensor[(5, 9, 15), uint8],) */
}

def @func_3875(%var_3859: Tensor[(15, 8, 8), float64], %var_3873: Tensor[(168), int8]) -> (Tensor[(15, 8, 8), float64], Tensor[(7, 2, 12), int8], Tensor[(168), int8]) {
  %239 = cast(meta[relay.Constant][13] /* ty=Tensor[(15, 8, 8), float64] */, dtype="float64") /* ty=Tensor[(15, 8, 8), float64] */;
  %240 = shape_of(%var_3859, dtype="int32") /* ty=Tensor[(3), int32] */;
  %241 = cast(%var_3859, dtype="float64") /* ty=Tensor[(15, 8, 8), float64] */;
  %242 = dyn.reshape(%239, %240, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %243 = cast(%var_3873, dtype="int8") /* ty=Tensor[(168), int8] */;
  %244 = reshape(%243, newshape=[7, 2, 12]) /* ty=Tensor[(7, 2, 12), int8] */;
  %245 = multiply(%241, %242) /* ty=Tensor[(15, 8, 8), float64] */;
  %246 = @func_2681(%244) /* ty=Tensor[(7, 2, 12), int8] */;
  (%245, %246, %var_3873)
}

def @func_5732() -> (Tensor[(24), float32],) {
  %247 = @func_4838() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(4, 5, 2), float32], Tensor[(21), float32], Tensor[(2, 20), float32], Tensor[(4, 3, 2), float32], Tensor[(24), float32]) */;
  %248 = %247.5;
  (%248,)
}

def @func_8165(%var_8164: Tensor[(24, 1), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(320, 2), bool], Tensor[(24, 1), float32], Tensor[(960), float64]) {
  %259 = fn (%var_8157: Tensor[(24, 1), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(320, 2), bool], Tensor[(24, 1), float32], Tensor[(960), float64]) {
    %249 = @func_6082() /* ty=(Tensor[(2, 6, 5), float64],) */;
    %250 = %249.0;
    %251 = cast(%250, dtype="float64") /* ty=Tensor[(2, 6, 5), float64] */;
    %252 = cast(%var_8157, dtype="float32") /* ty=Tensor[(24, 1), float32] */;
    %253 = reshape(%252, newshape=[4, 3, 2]) /* ty=Tensor[(4, 3, 2), float32] */;
    %254 = @func_6378(%253) /* ty=(Tensor[(4, 3, 2), int16], float32, Tensor[(70), float64], Tensor[(320, 2), bool]) */;
    %255 = @func_5755() /* ty=(Tensor[(960), float64], Tensor[(108, 4), float64]) */;
    %256 = sin(%251) /* ty=Tensor[(2, 6, 5), float64] */;
    %257 = %254.3;
    %258 = %255.0;
    (%256, %257, %var_8157, %258)
  };
  %259(%var_8164) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(320, 2), bool], Tensor[(24, 1), float32], Tensor[(960), float64]) */
}

def @func_6792() -> (Tensor[(4, 5, 2), float32], Tensor[(2, 20), float32]) {
  %263 = fn () -> (Tensor[(4, 5, 2), float32], Tensor[(2, 20), float32]) {
    %260 = @func_4838() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(4, 5, 2), float32], Tensor[(21), float32], Tensor[(2, 20), float32], Tensor[(4, 3, 2), float32], Tensor[(24), float32]) */;
    %261 = %260.1;
    %262 = @func_6313() /* ty=Tensor[(2, 20), float32] */;
    (%261, %262)
  };
  %263() /* ty=(Tensor[(4, 5, 2), float32], Tensor[(2, 20), float32]) */
}

def @func_5986() -> (Tensor[(13, 14, 12), uint8], Tensor[(4, 3, 2), float32]) {
  %264 = cast(meta[relay.Constant][14] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %265 = cast(meta[relay.Constant][15] /* ty=Tensor[(13, 14, 12), uint8] */, dtype="uint8") /* ty=Tensor[(13, 14, 12), uint8] */;
  %266 = @func_5893() /* ty=(Tensor[(4, 3, 2), float32],) */;
  %267 = logical_xor(%264, %265) /* ty=Tensor[(13, 14, 12), uint8] */;
  %268 = %266.0;
  (%267, %268)
}

def @func_8305(%var_8303: Tensor[(2, 6, 5), float64]) -> (Tensor[(640), bool], Tensor[(2, 6, 5), uint16]) {
  @func_8302(%var_8303) /* ty=(Tensor[(640), bool], Tensor[(2, 6, 5), uint16]) */
}

def @func_3594(%var_3590: Tensor[(15, 13, 14), float32], %var_3591: Tensor[(40), float32], %var_3592: Tensor[(168), int8], %var_3593: Tensor[(588), float64]) -> (Tensor[(15, 13, 14), float32], Tensor[(40), float32], Tensor[(3, ?, 7), uint16], Tensor[(7, 2, 12), int8], Tensor[(168), int8], Tensor[(6, 7, 14), float64], Tensor[(588), float64], Tensor[(6, 7, 14), float64]) {
  @func_3588(%var_3590, %var_3591, %var_3592, %var_3593) /* ty=(Tensor[(15, 13, 14), float32], Tensor[(40), float32], Tensor[(3, ?, 7), uint16], Tensor[(7, 2, 12), int8], Tensor[(168), int8], Tensor[(6, 7, 14), float64], Tensor[(588), float64], Tensor[(6, 7, 14), float64]) */
}

def @func_7868(%var_7859: Tensor[(120), float32]) -> (Tensor[(6, 7, 14), float64], Tensor[(480), float64], Tensor[(480), float64], Tensor[(120), float32]) {
  %269 = @func_5586() /* ty=(Tensor[(640), bool], Tensor[(21), float32], Tensor[(6, 7, 14), float64], Tensor[(8, 5, 16), int32], Tensor[(6, 12, 6), float64], Tensor[(432), float64]) */;
  %270 = cast(meta[relay.Constant][16] /* ty=Tensor[(480), float64] */, dtype="float64") /* ty=Tensor[(480), float64] */;
  %271 = cast(%var_7859, dtype="float32") /* ty=Tensor[(120), float32] */;
  %272 = reshape(%270, newshape=[480]) /* ty=Tensor[(480), float64] */;
  %273 = reshape(%271, newshape=[60, 2]) /* ty=Tensor[(60, 2), float32] */;
  %274 = @func_5153(%272, %273) /* ty=(Tensor[(20, 48), float64], Tensor[(480), float64], Tensor[(60, 2), float32], Tensor[(2, 6, 5), float64]) */;
  %275 = %269.2;
  %276 = %274.1;
  (%275, %276, meta[relay.Constant][16] /* ty=Tensor[(480), float64] */, %var_7859)
}

def @func_1956(%var_1952: Tensor[(12, 1, 3), float32], %var_1953: Tensor[(12, 4, 3), float32], %var_1954: float32, %var_1955: Tensor[(640), bool]) -> (Tensor[(12, 4, 3), float32], Tensor[(20, 32), bool], float32, Tensor[(637, 2), int64], Tensor[(640), bool]) {
  @func_1950(%var_1952, %var_1953, %var_1954, %var_1955) /* ty=(Tensor[(12, 4, 3), float32], Tensor[(20, 32), bool], float32, Tensor[(637, 2), int64], Tensor[(640), bool]) */
}

def @func_7939(%var_7913: float32, %var_7920: Tensor[(24), float32], %var_7925: Tensor[(1274), int64]) -> (Tensor[(1, 10, 15), float32], Tensor[(4, 3, 2), float32], Tensor[(24), float32], Tensor[(640), bool], Tensor[(1274), int64], Tensor[(4, 3, 2), float32], Tensor[(640), bool]) {
  %277 = cast(%var_7913, dtype="float32") /* ty=float32 */;
  %278 = cast(meta[relay.Constant][17] /* ty=Tensor[(1, 10, 15), float32] */, dtype="float32") /* ty=Tensor[(1, 10, 15), float32] */;
  %279 = cast(%var_7920, dtype="float32") /* ty=Tensor[(24), float32] */;
  %280 = cast(%var_7920, dtype="float32") /* ty=Tensor[(24), float32] */;
  %281 = reshape(%279, newshape=[4, 3, 2]) /* ty=Tensor[(4, 3, 2), float32] */;
  %282 = reshape(%280, newshape=[4, 3, 2]) /* ty=Tensor[(4, 3, 2), float32] */;
  %283 = cast(%var_7925, dtype="int64") /* ty=Tensor[(1274), int64] */;
  %284 = reshape(%283, newshape=[91, 14]) /* ty=Tensor[(91, 14), int64] */;
  %285 = @func_7637(%284) /* ty=(Tensor[(640), bool], Tensor[(6, 7, 14), float64], float32, Tensor[(91, 14), int64]) */;
  %286 = @func_4726(%281, %282) /* ty=Tensor[(4, 3, 2), float32] */;
  %287 = cast(%286, dtype="float32") /* ty=Tensor[(4, 3, 2), float32] */;
  %288 = cast(%var_7920, dtype="float32") /* ty=Tensor[(24), float32] */;
  %289 = reshape(%287, newshape=[4, 3, 2]) /* ty=Tensor[(4, 3, 2), float32] */;
  %290 = reshape(%288, newshape=[4, 3, 2]) /* ty=Tensor[(4, 3, 2), float32] */;
  %291 = @func_4684() /* ty=(Tensor[(640), bool],) */;
  %292 = power(%277, %278) /* ty=Tensor[(1, 10, 15), float32] */;
  %293 = %285.0;
  %294 = @func_4726(%289, %290) /* ty=Tensor[(4, 3, 2), float32] */;
  %295 = %291.0;
  (%292, %286, %var_7920, %293, %var_7925, %294, %295)
}

def @func_6740() -> (Tensor[(2, 6, 5), float64],) {
  %296 = @func_4802() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %297 = %296.0;
  (%297,)
}

def @func_9321() -> (Tensor[(4, 3, 2), float32], Tensor[(640), bool]) {
  @func_9319() /* ty=(Tensor[(4, 3, 2), float32], Tensor[(640), bool]) */
}

def @func_4480(%var_4469: Tensor[(9, 3, 13), float64]) -> (Tensor[(9, 3, 13), float64],) {
  %298 = cast(%var_4469, dtype="float64") /* ty=Tensor[(9, 3, 13), float64] */;
  %299 = erf(%298) /* ty=Tensor[(9, 3, 13), float64] */;
  (%299,)
}

def @func_6315() -> Tensor[(2, 20), float32] {
  @func_6313() /* ty=Tensor[(2, 20), float32] */
}

def @func_5727(%var_5725: Tensor[(1, 6), int64]) -> (Tensor[(1, 6), int64],) {
  @func_5724(%var_5725) /* ty=(Tensor[(1, 6), int64],) */
}

def @func_5082(%var_5080: Tensor[(1, 16, 11), int16], %var_5081: Tensor[(3, 16, 11), int16]) -> (Tensor[(3, 16, 11), int16], Tensor[(10, 16, 6), bool], Tensor[(240, 4), float32]) {
  %308 = fn (%var_5037: Tensor[(1, 16, 11), int16], %var_5038: Tensor[(3, 16, 11), int16]) -> (Tensor[(3, 16, 11), int16], Tensor[(10, 16, 6), bool], Tensor[(240, 4), float32]) {
    %300 = cast(%var_5037, dtype="int16") /* ty=Tensor[(1, 16, 11), int16] */;
    %301 = cast(%var_5038, dtype="int16") /* ty=Tensor[(3, 16, 11), int16] */;
    %302 = cast(meta[relay.Constant][18] /* ty=Tensor[(240, 4), float32] */, dtype="float32") /* ty=Tensor[(240, 4), float32] */;
    %303 = reshape(%302, newshape=[10, 16, 6]) /* ty=Tensor[(10, 16, 6), float32] */;
    %304 = cast(meta[relay.Constant][18] /* ty=Tensor[(240, 4), float32] */, dtype="float32") /* ty=Tensor[(240, 4), float32] */;
    %305 = bitwise_or(%300, %301) /* ty=Tensor[(3, 16, 11), int16] */;
    %306 = @func_3963(%303) /* ty=Tensor[(10, 16, 6), bool] */;
    %307 = acos(%304) /* ty=Tensor[(240, 4), float32] */;
    (%305, %306, %307)
  };
  %308(%var_5080, %var_5081) /* ty=(Tensor[(3, 16, 11), int16], Tensor[(10, 16, 6), bool], Tensor[(240, 4), float32]) */
}

def @func_5926() -> (Tensor[(2, 20), float32], Tensor[(7, 2, 12), int8], Tensor[(168), int8]) {
  %314 = fn () -> (Tensor[(2, 20), float32], Tensor[(7, 2, 12), int8], Tensor[(168), int8]) {
    %309 = @func_4970() /* ty=(Tensor[(2, 20), float32],) */;
    %310 = cast(meta[relay.Constant][19] /* ty=Tensor[(168), int8] */, dtype="int8") /* ty=Tensor[(168), int8] */;
    %311 = reshape(%310, newshape=[7, 2, 12]) /* ty=Tensor[(7, 2, 12), int8] */;
    %312 = %309.0;
    %313 = @func_2681(%311) /* ty=Tensor[(7, 2, 12), int8] */;
    (%312, %313, meta[relay.Constant][19] /* ty=Tensor[(168), int8] */)
  };
  %314() /* ty=(Tensor[(2, 20), float32], Tensor[(7, 2, 12), int8], Tensor[(168), int8]) */
}

def @func_8470(%var_8469: Tensor[(5, 11, 14), float64]) -> Tensor[(5, 11, 14), float64] {
  %316 = fn (%var_8465: Tensor[(5, 11, 14), float64]) -> Tensor[(5, 11, 14), float64] {
    %315 = cast(%var_8465, dtype="float64") /* ty=Tensor[(5, 11, 14), float64] */;
    cosh(%315) /* ty=Tensor[(5, 11, 14), float64] */
  };
  %316(%var_8469) /* ty=Tensor[(5, 11, 14), float64] */
}

def @func_6313() -> Tensor[(2, 20), float32] {
  %317 = @func_5925() /* ty=(Tensor[(2, 20), float32], Tensor[(7, 2, 12), int8], Tensor[(168), int8]) */;
  %317.0
}

def @func_4272(%var_4270: Tensor[(16, 5, 6), float64], %var_4271: Tensor[(6, 20), float32]) -> (Tensor[(40), float32], Tensor[(20, 48), float64], Tensor[(16, 5, 6), uint16], Tensor[(21, 1), float32], Tensor[(15, 4, 2), bool], Tensor[(6, 20), float32]) {
  %339 = fn (%var_4217: Tensor[(16, 5, 6), float64], %var_4259: Tensor[(6, 20), float32]) -> (Tensor[(40), float32], Tensor[(20, 48), float64], Tensor[(16, 5, 6), uint16], Tensor[(21, 1), float32], Tensor[(15, 4, 2), bool], Tensor[(6, 20), float32]) {
    %318 = cast(meta[relay.Constant][20] /* ty=Tensor[(20, 48), float64] */, dtype="float64") /* ty=Tensor[(20, 48), float64] */;
    %319 = reshape(%318, newshape=[8, 12, 10]) /* ty=Tensor[(8, 12, 10), float64] */;
    %320 = @func_2872(%319) /* ty=(Tensor[(8, 12, 10), float64], Tensor[(108, 4), float64], Tensor[(21, 1), float32], Tensor[(40), float32]) */;
    %321 = cast(%var_4217, dtype="float64") /* ty=Tensor[(16, 5, 6), float64] */;
    %322 = atan(%321) /* ty=Tensor[(16, 5, 6), float64] */;
    %323 = cast(%322, dtype="float64") /* ty=Tensor[(16, 5, 6), float64] */;
    %324 = cosh(%323) /* ty=Tensor[(16, 5, 6), float64] */;
    %325 = cast(%322, dtype="uint16") /* ty=Tensor[(16, 5, 6), uint16] */;
    %326 = shape_of(%324, dtype="int32") /* ty=Tensor[(3), int32] */;
    %327 = cast(%324, dtype="uint16") /* ty=Tensor[(16, 5, 6), uint16] */;
    %328 = dyn.reshape(%325, %326, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %329 = cast(meta[relay.Constant][20] /* ty=Tensor[(20, 48), float64] */, dtype="float64") /* ty=Tensor[(20, 48), float64] */;
    %330 = reshape(%329, newshape=[8, 12, 10]) /* ty=Tensor[(8, 12, 10), float64] */;
    %331 = @func_2872(%330) /* ty=(Tensor[(8, 12, 10), float64], Tensor[(108, 4), float64], Tensor[(21, 1), float32], Tensor[(40), float32]) */;
    %332 = cast(%var_4259, dtype="float32") /* ty=Tensor[(6, 20), float32] */;
    %333 = reshape(%332, newshape=[15, 4, 2]) /* ty=Tensor[(15, 4, 2), float32] */;
    %334 = @func_1105(%333) /* ty=(Tensor[(15, 4, 2), bool],) */;
    %335 = %320.3;
    %336 = bitwise_or(%327, %328) /* ty=Tensor[(16, 5, 6), uint16] */;
    %337 = %331.2;
    %338 = %334.0;
    (%335, meta[relay.Constant][20] /* ty=Tensor[(20, 48), float64] */, %336, %337, %338, %var_4259)
  };
  %339(%var_4270, %var_4271) /* ty=(Tensor[(40), float32], Tensor[(20, 48), float64], Tensor[(16, 5, 6), uint16], Tensor[(21, 1), float32], Tensor[(15, 4, 2), bool], Tensor[(6, 20), float32]) */
}

def @func_9390() -> (Tensor[(1, 15, 1), float64],) {
  %340 = @func_8759() /* ty=(Tensor[(40), float64], Tensor[(1, 15, 1), float64], Tensor[(15), float64]) */;
  %341 = %340.1;
  (%341,)
}

def @func_5988() -> (Tensor[(13, 14, 12), uint8], Tensor[(4, 3, 2), float32]) {
  @func_5986() /* ty=(Tensor[(13, 14, 12), uint8], Tensor[(4, 3, 2), float32]) */
}

def @func_5246(%var_5206: Tensor[(2, 2, 8), float32], %var_5243: Tensor[(91, 14), int64]) -> (Tensor[(36), float32], Tensor[(144), float32], Tensor[(2, 2, 8), uint32], Tensor[(9, 3, 13), float64], Tensor[(39, 9), float64], Tensor[(640), uint64], Tensor[(640), bool], Tensor[(91, 14), int64]) {
  %342 = cast(meta[relay.Constant][21] /* ty=Tensor[(36), float32] */, dtype="float32") /* ty=Tensor[(36), float32] */;
  %343 = cast(meta[relay.Constant][22] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %344 = cast(-9.3858f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %345 = @func_4684() /* ty=(Tensor[(640), bool],) */;
  %346 = %345.0;
  %347 = cast(%346, dtype="bool") /* ty=Tensor[(640), bool] */;
  %348 = reshape(%342, newshape=[12, 1, 3]) /* ty=Tensor[(12, 1, 3), float32] */;
  %349 = reshape(%343, newshape=[12, 4, 3]) /* ty=Tensor[(12, 4, 3), float32] */;
  %350 = reshape(%344, newshape=[]) /* ty=float32 */;
  %351 = reshape(%347, newshape=[640]) /* ty=Tensor[(640), bool] */;
  %352 = @func_1950(%348, %349, %350, %351) /* ty=(Tensor[(12, 4, 3), float32], Tensor[(20, 32), bool], float32, Tensor[(637, 2), int64], Tensor[(640), bool]) */;
  %353 = %352.2;
  %354 = cast(%353, dtype="uint32") /* ty=uint32 */;
  %355 = cast(%var_5206, dtype="uint32") /* ty=Tensor[(2, 2, 8), uint32] */;
  %356 = cast(meta[relay.Constant][23] /* ty=Tensor[(39, 9), float64] */, dtype="float64") /* ty=Tensor[(39, 9), float64] */;
  %357 = reshape(%356, newshape=[9, 3, 13]) /* ty=Tensor[(9, 3, 13), float64] */;
  %358 = @func_4480(%357) /* ty=(Tensor[(9, 3, 13), float64],) */;
  %359 = cast(-9.3858f /* ty=float32 */, dtype="uint64") /* ty=uint64 */;
  %360 = cast(%346, dtype="uint64") /* ty=Tensor[(640), uint64] */;
  %361 = cast(-9.3858f /* ty=float32 */, dtype="int64") /* ty=int64 */;
  %362 = cast(%var_5243, dtype="int64") /* ty=Tensor[(91, 14), int64] */;
  %363 = cast(%346, dtype="bool") /* ty=Tensor[(640), bool] */;
  %364 = reshape(%361, newshape=[]) /* ty=int64 */;
  %365 = reshape(%362, newshape=[7, 13, 14]) /* ty=Tensor[(7, 13, 14), int64] */;
  %366 = reshape(%363, newshape=[640]) /* ty=Tensor[(640), bool] */;
  %367 = @func_1018(%364, %365, %366) /* ty=(Tensor[(7, 13, 14), bool], Tensor[(6, 7, 14), float64], Tensor[(640), bool]) */;
  %368 = minimum(%354, %355) /* ty=Tensor[(2, 2, 8), uint32] */;
  %369 = %358.0;
  %370 = maximum(%359, %360) /* ty=Tensor[(640), uint64] */;
  %371 = %367.2;
  (meta[relay.Constant][21] /* ty=Tensor[(36), float32] */, meta[relay.Constant][22] /* ty=Tensor[(144), float32] */, %368, %369, meta[relay.Constant][23] /* ty=Tensor[(39, 9), float64] */, %370, %371, %var_5243)
}

def @func_5469() -> (Tensor[(640), float64], Tensor[(40), float32], Tensor[(960), float64]) {
  %372 = @func_4648() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(8, 5, 16), bool], Tensor[(640), bool]) */;
  %373 = %372.2;
  %374 = cast(%373, dtype="float64") /* ty=Tensor[(640), float64] */;
  %375 = cast(meta[relay.Constant][24] /* ty=Tensor[(960), float64] */, dtype="float64") /* ty=Tensor[(960), float64] */;
  %376 = reshape(%375, newshape=[8, 12, 10]) /* ty=Tensor[(8, 12, 10), float64] */;
  %377 = @func_2872(%376) /* ty=(Tensor[(8, 12, 10), float64], Tensor[(108, 4), float64], Tensor[(21, 1), float32], Tensor[(40), float32]) */;
  %378 = atan(%374) /* ty=Tensor[(640), float64] */;
  %379 = %377.3;
  (%378, %379, meta[relay.Constant][24] /* ty=Tensor[(960), float64] */)
}

def @func_6742() -> (Tensor[(2, 6, 5), float64],) {
  @func_6740() /* ty=(Tensor[(2, 6, 5), float64],) */
}

def @func_1107(%var_1106: Tensor[(15, 4, 2), float32]) -> (Tensor[(15, 4, 2), bool],) {
  %385 = fn (%var_1096: Tensor[(15, 4, 2), float32]) -> (Tensor[(15, 4, 2), bool],) {
    %380 = cast(meta[relay.Constant][25] /* ty=Tensor[(15, 4, 2), float32] */, dtype="bool") /* ty=Tensor[(15, 4, 2), bool] */;
    %381 = shape_of(%var_1096, dtype="int32") /* ty=Tensor[(3), int32] */;
    %382 = cast(%var_1096, dtype="bool") /* ty=Tensor[(15, 4, 2), bool] */;
    %383 = dyn.reshape(%380, %381, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %384 = equal(%382, %383) /* ty=Tensor[(15, 4, 2), bool] */;
    (%384,)
  };
  %385(%var_1106) /* ty=(Tensor[(15, 4, 2), bool],) */
}

def @func_5496() -> Tensor[(640), bool] {
  @func_5494() /* ty=Tensor[(640), bool] */
}

def @func_8373() -> (Tensor[(2, 6, 5), float64],) {
  @func_8371() /* ty=(Tensor[(2, 6, 5), float64],) */
}

def @func_8432() -> Tensor[(21), float32] {
  %387 = fn () -> Tensor[(21), float32] {
    %386 = @func_4838() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(4, 5, 2), float32], Tensor[(21), float32], Tensor[(2, 20), float32], Tensor[(4, 3, 2), float32], Tensor[(24), float32]) */;
    %386.2
  };
  %387() /* ty=Tensor[(21), float32] */
}

def @func_8861() -> (Tensor[(640), bool], Tensor[(2, 6, 5), float64], Tensor[(2, 20), float32]) {
  @func_8859() /* ty=(Tensor[(640), bool], Tensor[(2, 6, 5), float64], Tensor[(2, 20), float32]) */
}

def @func_3162(%var_3161: Tensor[(120), float32]) -> (Tensor[(15, 4, 2), bool], Tensor[(120), float32], Tensor[(14, 10, 14), float64]) {
  %396 = fn (%var_3156: Tensor[(120), float32]) -> (Tensor[(15, 4, 2), bool], Tensor[(120), float32], Tensor[(14, 10, 14), float64]) {
    %388 = cast(%var_3156, dtype="float32") /* ty=Tensor[(120), float32] */;
    %389 = reshape(%388, newshape=[15, 4, 2]) /* ty=Tensor[(15, 4, 2), float32] */;
    %390 = @func_1105(%389) /* ty=(Tensor[(15, 4, 2), bool],) */;
    %391 = cast(meta[relay.Constant][26] /* ty=Tensor[(14, 10, 14), float32] */, dtype="float32") /* ty=Tensor[(14, 10, 14), float32] */;
    %392 = atanh(%391) /* ty=Tensor[(14, 10, 14), float32] */;
    %393 = cast(%392, dtype="float64") /* ty=Tensor[(14, 10, 14), float64] */;
    %394 = %390.0;
    %395 = cosh(%393) /* ty=Tensor[(14, 10, 14), float64] */;
    (%394, %var_3156, %395)
  };
  %396(%var_3161) /* ty=(Tensor[(15, 4, 2), bool], Tensor[(120), float32], Tensor[(14, 10, 14), float64]) */
}

def @func_6381(%var_6379: Tensor[(4, 3, 2), float32]) -> (Tensor[(4, 3, 2), int16], float32, Tensor[(70), float64], Tensor[(320, 2), bool]) {
  @func_6378(%var_6379) /* ty=(Tensor[(4, 3, 2), int16], float32, Tensor[(70), float64], Tensor[(320, 2), bool]) */
}

def @func_6083() -> (Tensor[(2, 6, 5), float64],) {
  %399 = fn () -> (Tensor[(2, 6, 5), float64],) {
    %397 = @func_4802() /* ty=(Tensor[(2, 6, 5), float64],) */;
    %398 = %397.0;
    (%398,)
  };
  %399() /* ty=(Tensor[(2, 6, 5), float64],) */
}

def @func_8118() -> (Tensor[(640), bool], Tensor[(2, 6, 5), float64], Tensor[(640), bool], Tensor[(2, 6, 5), float64], Tensor[(640), uint16], Tensor[(9, 3, 13), float64], Tensor[(351), float64]) {
  %415 = fn () -> (Tensor[(640), bool], Tensor[(2, 6, 5), float64], Tensor[(640), bool], Tensor[(2, 6, 5), float64], Tensor[(640), uint16], Tensor[(9, 3, 13), float64], Tensor[(351), float64]) {
    %400 = @func_4648() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(8, 5, 16), bool], Tensor[(640), bool]) */;
    %401 = @func_6740() /* ty=(Tensor[(2, 6, 5), float64],) */;
    %402 = @func_6740() /* ty=(Tensor[(2, 6, 5), float64],) */;
    %403 = %400.2;
    %404 = cast(%403, dtype="bool") /* ty=Tensor[(640), bool] */;
    %405 = reshape(%404, newshape=[640]) /* ty=Tensor[(640), bool] */;
    %406 = @func_6184(%405) /* ty=(Tensor[(640), uint16], Tensor[(640), float64]) */;
    %407 = cast(meta[relay.Constant][27] /* ty=Tensor[(351), float64] */, dtype="float64") /* ty=Tensor[(351), float64] */;
    %408 = reshape(%407, newshape=[9, 3, 13]) /* ty=Tensor[(9, 3, 13), float64] */;
    %409 = @func_4480(%408) /* ty=(Tensor[(9, 3, 13), float64],) */;
    %410 = %401.0;
    %411 = @func_5494() /* ty=Tensor[(640), bool] */;
    %412 = %402.0;
    %413 = %406.0;
    %414 = %409.0;
    (%403, %410, %411, %412, %413, %414, meta[relay.Constant][27] /* ty=Tensor[(351), float64] */)
  };
  %415() /* ty=(Tensor[(640), bool], Tensor[(2, 6, 5), float64], Tensor[(640), bool], Tensor[(2, 6, 5), float64], Tensor[(640), uint16], Tensor[(9, 3, 13), float64], Tensor[(351), float64]) */
}

def @func_8759() -> (Tensor[(40), float64], Tensor[(1, 15, 1), float64], Tensor[(15), float64]) {
  %416 = @func_5469() /* ty=(Tensor[(640), float64], Tensor[(40), float32], Tensor[(960), float64]) */;
  %417 = %416.1;
  %418 = cast(meta[relay.Constant][28] /* ty=Tensor[(40), float32] */, dtype="float64") /* ty=Tensor[(40), float64] */;
  %419 = shape_of(%417, dtype="int32") /* ty=Tensor[(1), int32] */;
  %420 = cast(%417, dtype="float64") /* ty=Tensor[(40), float64] */;
  %421 = dyn.reshape(%418, %419, newshape=[]) /* ty=Tensor[(?), float64] */;
  %422 = cast(meta[relay.Constant][29] /* ty=Tensor[(15), float64] */, dtype="float64") /* ty=Tensor[(15), float64] */;
  %423 = reshape(%422, newshape=[1, 15, 1]) /* ty=Tensor[(1, 15, 1), float64] */;
  %424 = @func_7602(%423) /* ty=(Tensor[(1, 15, 1), float64],) */;
  %425 = power(%420, %421) /* ty=Tensor[(40), float64] */;
  %426 = %424.0;
  (%425, %426, meta[relay.Constant][29] /* ty=Tensor[(15), float64] */)
}

def @func_9513() -> (Tensor[(640), bool], Tensor[(640), bool]) {
  %427 = @func_8343() /* ty=(Tensor[(640), bool], Tensor[(640), bool]) */;
  %428 = @func_7573() /* ty=Tensor[(640), bool] */;
  %429 = %427.0;
  (%428, %429)
}

def @func_299(%var_297: Tensor[(6, 7, 14), float64], %var_298: Tensor[(6, 7, 14), float64]) -> Tensor[(6, 7, 14), float64] {
  @func_295(%var_297, %var_298) /* ty=Tensor[(6, 7, 14), float64] */
}

def @func_6246() -> (Tensor[(640), bool],) {
  %432 = fn () -> (Tensor[(640), bool],) {
    %430 = @func_4684() /* ty=(Tensor[(640), bool],) */;
    %431 = %430.0;
    (%431,)
  };
  %432() /* ty=(Tensor[(640), bool],) */
}

def @func_6337(%var_6326: Tensor[(2, 10, 1), float64]) -> (Tensor[(2, 10, 1), float64],) {
  %433 = cast(%var_6326, dtype="float64") /* ty=Tensor[(2, 10, 1), float64] */;
  %434 = acosh(%433) /* ty=Tensor[(2, 10, 1), float64] */;
  (%434,)
}

def @func_7588() -> Tensor[(640), bool] {
  %435 = fn () -> Tensor[(640), bool] {
    @func_5294() /* ty=Tensor[(640), bool] */
  };
  %435() /* ty=Tensor[(640), bool] */
}

def @func_5587() -> (Tensor[(640), bool], Tensor[(21), float32], Tensor[(6, 7, 14), float64], Tensor[(8, 5, 16), int32], Tensor[(6, 12, 6), float64], Tensor[(432), float64]) {
  %458 = fn () -> (Tensor[(640), bool], Tensor[(21), float32], Tensor[(6, 7, 14), float64], Tensor[(8, 5, 16), int32], Tensor[(6, 12, 6), float64], Tensor[(432), float64]) {
    %436 = @func_4684() /* ty=(Tensor[(640), bool],) */;
    %437 = @func_4838() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(4, 5, 2), float32], Tensor[(21), float32], Tensor[(2, 20), float32], Tensor[(4, 3, 2), float32], Tensor[(24), float32]) */;
    %438 = %436.0;
    %439 = cast(%438, dtype="bool") /* ty=Tensor[(640), bool] */;
    %440 = @func_5414() /* ty=(Tensor[(8, 5, 16), bool],) */;
    %441 = %440.0;
    %442 = cast(%441, dtype="bool") /* ty=Tensor[(8, 5, 16), bool] */;
    %443 = reshape(%439, newshape=[8, 5, 16]) /* ty=Tensor[(8, 5, 16), bool] */;
    %444 = reshape(%442, newshape=[8, 5, 16]) /* ty=Tensor[(8, 5, 16), bool] */;
    %445 = @func_638(%443, %444) /* ty=(Tensor[(8, 5, 16), bool], Tensor[(6, 7, 14), float64], Tensor[(588), float64]) */;
    %446 = cast(%441, dtype="float64") /* ty=Tensor[(8, 5, 16), float64] */;
    %447 = tan(%446) /* ty=Tensor[(8, 5, 16), float64] */;
    %448 = cast(meta[relay.Constant][30] /* ty=Tensor[(8, 5, 16), float64] */, dtype="int32") /* ty=Tensor[(8, 5, 16), int32] */;
    %449 = shape_of(%447, dtype="int32") /* ty=Tensor[(3), int32] */;
    %450 = cast(%447, dtype="int32") /* ty=Tensor[(8, 5, 16), int32] */;
    %451 = dyn.reshape(%448, %449, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %452 = cast(meta[relay.Constant][31] /* ty=Tensor[(432), float64] */, dtype="float64") /* ty=Tensor[(432), float64] */;
    %453 = reshape(%452, newshape=[6, 12, 6]) /* ty=Tensor[(6, 12, 6), float64] */;
    %454 = %437.2;
    %455 = %445.1;
    %456 = bitwise_and(%450, %451) /* ty=Tensor[(8, 5, 16), int32] */;
    %457 = @func_1274(%453) /* ty=Tensor[(6, 12, 6), float64] */;
    (%438, %454, %455, %456, %457, meta[relay.Constant][31] /* ty=Tensor[(432), float64] */)
  };
  %458() /* ty=(Tensor[(640), bool], Tensor[(21), float32], Tensor[(6, 7, 14), float64], Tensor[(8, 5, 16), int32], Tensor[(6, 12, 6), float64], Tensor[(432), float64]) */
}

def @func_9020() -> (Tensor[(7, 2, 12), float32],) {
  %463 = fn () -> (Tensor[(7, 2, 12), float32],) {
    %459 = @func_5925() /* ty=(Tensor[(2, 20), float32], Tensor[(7, 2, 12), int8], Tensor[(168), int8]) */;
    %460 = %459.1;
    %461 = cast(%460, dtype="float32") /* ty=Tensor[(7, 2, 12), float32] */;
    %462 = sigmoid(%461) /* ty=Tensor[(7, 2, 12), float32] */;
    (%462,)
  };
  %463() /* ty=(Tensor[(7, 2, 12), float32],) */
}

def @func_9539() -> (Tensor[(8, 5, 16), bool], Tensor[(6, 12, 6), float64], Tensor[(432), float64]) {
  %468 = fn () -> (Tensor[(8, 5, 16), bool], Tensor[(6, 12, 6), float64], Tensor[(432), float64]) {
    %464 = cast(meta[relay.Constant][32] /* ty=Tensor[(432), float64] */, dtype="float64") /* ty=Tensor[(432), float64] */;
    %465 = reshape(%464, newshape=[6, 12, 6]) /* ty=Tensor[(6, 12, 6), float64] */;
    %466 = @func_7437() /* ty=Tensor[(8, 5, 16), bool] */;
    %467 = @func_1274(%465) /* ty=Tensor[(6, 12, 6), float64] */;
    (%466, %467, meta[relay.Constant][32] /* ty=Tensor[(432), float64] */)
  };
  %468() /* ty=(Tensor[(8, 5, 16), bool], Tensor[(6, 12, 6), float64], Tensor[(432), float64]) */
}

def @func_9414() -> (Tensor[(4, 3, 2), float32], Tensor[(24), float32], Tensor[(2, 20), float32]) {
  %475 = fn () -> (Tensor[(4, 3, 2), float32], Tensor[(24), float32], Tensor[(2, 20), float32]) {
    %469 = @func_5893() /* ty=(Tensor[(4, 3, 2), float32],) */;
    %470 = %469.0;
    %471 = cast(%470, dtype="float32") /* ty=Tensor[(4, 3, 2), float32] */;
    %472 = rsqrt(%471) /* ty=Tensor[(4, 3, 2), float32] */;
    %473 = @func_6631() /* ty=Tensor[(24), float32] */;
    %474 = @func_6313() /* ty=Tensor[(2, 20), float32] */;
    (%472, %473, %474)
  };
  %475() /* ty=(Tensor[(4, 3, 2), float32], Tensor[(24), float32], Tensor[(2, 20), float32]) */
}

def @func_5156(%var_5154: Tensor[(480), float64], %var_5155: Tensor[(60, 2), float32]) -> (Tensor[(20, 48), float64], Tensor[(480), float64], Tensor[(60, 2), float32], Tensor[(2, 6, 5), float64]) {
  %491 = fn (%var_5136: Tensor[(480), float64], %var_5137: Tensor[(60, 2), float32]) -> (Tensor[(20, 48), float64], Tensor[(480), float64], Tensor[(60, 2), float32], Tensor[(2, 6, 5), float64]) {
    %476 = cast(%var_5136, dtype="float64") /* ty=Tensor[(480), float64] */;
    %477 = cast(%var_5137, dtype="float32") /* ty=Tensor[(60, 2), float32] */;
    %478 = reshape(%476, newshape=[16, 5, 6]) /* ty=Tensor[(16, 5, 6), float64] */;
    %479 = reshape(%477, newshape=[6, 20]) /* ty=Tensor[(6, 20), float32] */;
    %480 = @func_4269(%478, %479) /* ty=(Tensor[(40), float32], Tensor[(20, 48), float64], Tensor[(16, 5, 6), uint16], Tensor[(21, 1), float32], Tensor[(15, 4, 2), bool], Tensor[(6, 20), float32]) */;
    %481 = @func_4802() /* ty=(Tensor[(2, 6, 5), float64],) */;
    %482 = %481.0;
    %483 = cast(%482, dtype="float32") /* ty=Tensor[(2, 6, 5), float32] */;
    %484 = log10(%483) /* ty=Tensor[(2, 6, 5), float32] */;
    %485 = cast(meta[relay.Constant][33] /* ty=Tensor[(2, 6, 5), float32] */, dtype="float64") /* ty=Tensor[(2, 6, 5), float64] */;
    %486 = shape_of(%484, dtype="int32") /* ty=Tensor[(3), int32] */;
    %487 = cast(%484, dtype="float64") /* ty=Tensor[(2, 6, 5), float64] */;
    %488 = dyn.reshape(%485, %486, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %489 = %480.1;
    %490 = floor_mod(%487, %488) /* ty=Tensor[(2, 6, 5), float64] */;
    (%489, %var_5136, %var_5137, %490)
  };
  %491(%var_5154, %var_5155) /* ty=(Tensor[(20, 48), float64], Tensor[(480), float64], Tensor[(60, 2), float32], Tensor[(2, 6, 5), float64]) */
}

def @func_5285(%var_5283: Tensor[(16, 3, 8), float32]) -> Tensor[(16, 3, 8), float64] {
  @func_5282(%var_5283) /* ty=Tensor[(16, 3, 8), float64] */
}

def @func_5415() -> (Tensor[(8, 5, 16), bool],) {
  %494 = fn () -> (Tensor[(8, 5, 16), bool],) {
    %492 = @func_4648() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(8, 5, 16), bool], Tensor[(640), bool]) */;
    %493 = %492.1;
    (%493,)
  };
  %494() /* ty=(Tensor[(8, 5, 16), bool],) */
}

def @func_295(%var_283: Tensor[(6, 7, 14), float64], %var_284: Tensor[(6, 7, 14), float64]) -> Tensor[(6, 7, 14), float64] {
  %495 = cast(%var_284, dtype="float64") /* ty=Tensor[(6, 7, 14), float64] */;
  %496 = shape_of(%var_283, dtype="int32") /* ty=Tensor[(3), int32] */;
  %497 = cast(%var_283, dtype="float64") /* ty=Tensor[(6, 7, 14), float64] */;
  %498 = dyn.reshape(%495, %496, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_mod(%497, %498) /* ty=Tensor[(6, 7, 14), float64] */
}

def @func_7575() -> Tensor[(640), bool] {
  @func_7573() /* ty=Tensor[(640), bool] */
}

def @func_5617(%var_5616: Tensor[(2, 6, 5), float64]) -> (Tensor[(21), float32], Tensor[(2, 6, 5), int8]) {
  %508 = fn (%var_5610: Tensor[(2, 6, 5), float64]) -> (Tensor[(21), float32], Tensor[(2, 6, 5), int8]) {
    %499 = @func_4838() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(4, 5, 2), float32], Tensor[(21), float32], Tensor[(2, 20), float32], Tensor[(4, 3, 2), float32], Tensor[(24), float32]) */;
    %500 = @func_4802() /* ty=(Tensor[(2, 6, 5), float64],) */;
    %501 = %500.0;
    %502 = cast(%var_5610, dtype="int8") /* ty=Tensor[(2, 6, 5), int8] */;
    %503 = shape_of(%501, dtype="int32") /* ty=Tensor[(3), int32] */;
    %504 = cast(%501, dtype="int8") /* ty=Tensor[(2, 6, 5), int8] */;
    %505 = dyn.reshape(%502, %503, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %506 = %499.2;
    %507 = subtract(%504, %505) /* ty=Tensor[(2, 6, 5), int8] */;
    (%506, %507)
  };
  %508(%var_5616) /* ty=(Tensor[(21), float32], Tensor[(2, 6, 5), int8]) */
}

def @func_6968(%var_6963: Tensor[(640), bool]) -> Tensor[(640), bool] {
  %509 = @func_6245() /* ty=(Tensor[(640), bool],) */;
  %510 = %509.0;
  %511 = cast(%var_6963, dtype="bool") /* ty=Tensor[(640), bool] */;
  %512 = shape_of(%510, dtype="int32") /* ty=Tensor[(1), int32] */;
  %513 = cast(%510, dtype="bool") /* ty=Tensor[(640), bool] */;
  %514 = dyn.reshape(%511, %512, newshape=[]) /* ty=Tensor[(?), bool] */;
  greater_equal(%513, %514) /* ty=Tensor[(640), bool] */
}

def @func_6553() -> Tensor[(8, 3, 1), float32] {
  %516 = fn () -> Tensor[(8, 3, 1), float32] {
    %515 = @func_6058() /* ty=(Tensor[(8, 3, 1), float64], Tensor[(8, 3, 1), float64], Tensor[(8, 3, 1), float32]) */;
    %515.2
  };
  %516() /* ty=Tensor[(8, 3, 1), float32] */
}

def @func_7201() -> (Tensor[(2, 6, 5), float64],) {
  %517 = @func_6082() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %518 = %517.0;
  (%518,)
}

def @func_5724(%var_5719: Tensor[(1, 6), int64]) -> (Tensor[(1, 6), int64],) {
  %519 = cast(2 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %520 = cast(%var_5719, dtype="int64") /* ty=Tensor[(1, 6), int64] */;
  %521 = logical_xor(%519, %520) /* ty=Tensor[(1, 6), int64] */;
  (%521,)
}

def @func_7871(%var_7869: Tensor[(120), float32]) -> (Tensor[(6, 7, 14), float64], Tensor[(480), float64], Tensor[(480), float64], Tensor[(120), float32]) {
  @func_7868(%var_7869) /* ty=(Tensor[(6, 7, 14), float64], Tensor[(480), float64], Tensor[(480), float64], Tensor[(120), float32]) */
}

def @func_7682(%var_7680: Tensor[(12, 10, 16), bool], %var_7681: Tensor[(12, 10, 16), bool]) -> (Tensor[(12, 10, 16), bool], Tensor[(12, 10, 16), float32]) {
  %529 = fn (%var_7667: Tensor[(12, 10, 16), bool], %var_7668: Tensor[(12, 10, 16), bool]) -> (Tensor[(12, 10, 16), bool], Tensor[(12, 10, 16), float32]) {
    %522 = cast(%var_7668, dtype="bool") /* ty=Tensor[(12, 10, 16), bool] */;
    %523 = shape_of(%var_7667, dtype="int32") /* ty=Tensor[(3), int32] */;
    %524 = cast(%var_7667, dtype="bool") /* ty=Tensor[(12, 10, 16), bool] */;
    %525 = dyn.reshape(%522, %523, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %526 = cast(%var_7667, dtype="float32") /* ty=Tensor[(12, 10, 16), float32] */;
    %527 = logical_or(%524, %525) /* ty=Tensor[(12, 10, 16), bool] */;
    %528 = log2(%526) /* ty=Tensor[(12, 10, 16), float32] */;
    (%527, %528)
  };
  %529(%var_7680, %var_7681) /* ty=(Tensor[(12, 10, 16), bool], Tensor[(12, 10, 16), float32]) */
}

def @func_6971(%var_6969: Tensor[(640), bool]) -> Tensor[(640), bool] {
  @func_6968(%var_6969) /* ty=Tensor[(640), bool] */
}

def @func_3966(%var_3964: Tensor[(10, 16, 6), float32]) -> Tensor[(10, 16, 6), bool] {
  @func_3963(%var_3964) /* ty=Tensor[(10, 16, 6), bool] */
}

def @func_1461(%var_1444: Tensor[(4, 5, 2), float32]) -> (Tensor[(4, 5, 2), float32],) {
  %530 = cast(%var_1444, dtype="float32") /* ty=Tensor[(4, 5, 2), float32] */;
  %531 = log10(%530) /* ty=Tensor[(4, 5, 2), float32] */;
  (%531,)
}

def @func_5494() -> Tensor[(640), bool] {
  @func_5294() /* ty=Tensor[(640), bool] */
}

def @func_2683(%var_2682: Tensor[(7, 2, 12), int8]) -> Tensor[(7, 2, 12), int8] {
  %536 = fn (%var_2655: Tensor[(7, 2, 12), int8]) -> Tensor[(7, 2, 12), int8] {
    %532 = cast(%var_2655, dtype="int8") /* ty=Tensor[(7, 2, 12), int8] */;
    %533 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(7, 2, 12), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %534 = cast(meta[relay.Constant][34] /* ty=Tensor[(7, 2, 12), int8] */, dtype="int8") /* ty=Tensor[(7, 2, 12), int8] */;
    %535 = dyn.reshape(%532, %533, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    subtract(%534, %535) /* ty=Tensor[(7, 2, 12), int8] */
  };
  %536(%var_2682) /* ty=Tensor[(7, 2, 12), int8] */
}

def @func_7892() -> (Tensor[(4, 3, 2), float32], Tensor[(640), bool]) {
  %541 = fn () -> (Tensor[(4, 3, 2), float32], Tensor[(640), bool]) {
    %537 = @func_4838() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(4, 5, 2), float32], Tensor[(21), float32], Tensor[(2, 20), float32], Tensor[(4, 3, 2), float32], Tensor[(24), float32]) */;
    %538 = @func_4684() /* ty=(Tensor[(640), bool],) */;
    %539 = %537.4;
    %540 = %538.0;
    (%539, %540)
  };
  %541() /* ty=(Tensor[(4, 3, 2), float32], Tensor[(640), bool]) */
}

def @func_4972() -> (Tensor[(2, 20), float32],) {
  @func_4970() /* ty=(Tensor[(2, 20), float32],) */
}

def @func_7438() -> Tensor[(8, 5, 16), bool] {
  %543 = fn () -> Tensor[(8, 5, 16), bool] {
    %542 = @func_5414() /* ty=(Tensor[(8, 5, 16), bool],) */;
    %542.0
  };
  %543() /* ty=Tensor[(8, 5, 16), bool] */
}

def @func_7573() -> Tensor[(640), bool] {
  @func_5494() /* ty=Tensor[(640), bool] */
}

def @func_7136(%var_7134: Tensor[(2, 6, 5), float64]) -> (Tensor[(4, 3, 2), float32], Tensor[(168), int8], Tensor[(2, 6, 5), bool], Tensor[(120), float32], Tensor[(120), float32]) {
  @func_7133(%var_7134) /* ty=(Tensor[(4, 3, 2), float32], Tensor[(168), int8], Tensor[(2, 6, 5), bool], Tensor[(120), float32], Tensor[(120), float32]) */
}

def @func_4838() -> (Tensor[(2, 6, 5), float64], Tensor[(4, 5, 2), float32], Tensor[(21), float32], Tensor[(2, 20), float32], Tensor[(4, 3, 2), float32], Tensor[(24), float32]) {
  %544 = @func_4802() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %545 = cast(meta[relay.Constant][35] /* ty=Tensor[(21), float32] */, dtype="float32") /* ty=Tensor[(21), float32] */;
  %546 = cast(meta[relay.Constant][35] /* ty=Tensor[(21), float32] */, dtype="float32") /* ty=Tensor[(21), float32] */;
  %547 = cast(meta[relay.Constant][36] /* ty=Tensor[(2, 20), float32] */, dtype="float32") /* ty=Tensor[(2, 20), float32] */;
  %548 = reshape(%545, newshape=[3, 1, 7]) /* ty=Tensor[(3, 1, 7), float32] */;
  %549 = reshape(%546, newshape=[3, 1, 7]) /* ty=Tensor[(3, 1, 7), float32] */;
  %550 = reshape(%547, newshape=[40]) /* ty=Tensor[(40), float32] */;
  %551 = @func_1903(%548, %549, %550) /* ty=(Tensor[(4, 5, 2), float32], Tensor[(40), float32], Tensor[(3, ?, 7), float64], Tensor[(6, 12, 6), float64], Tensor[(108, 4), float64], Tensor[(4, 5, 2), float32]) */;
  %552 = cast(meta[relay.Constant][37] /* ty=Tensor[(24), float32] */, dtype="float32") /* ty=Tensor[(24), float32] */;
  %553 = cast(meta[relay.Constant][37] /* ty=Tensor[(24), float32] */, dtype="float32") /* ty=Tensor[(24), float32] */;
  %554 = reshape(%552, newshape=[4, 3, 2]) /* ty=Tensor[(4, 3, 2), float32] */;
  %555 = reshape(%553, newshape=[4, 3, 2]) /* ty=Tensor[(4, 3, 2), float32] */;
  %556 = %544.0;
  %557 = %551.5;
  %558 = @func_4726(%554, %555) /* ty=Tensor[(4, 3, 2), float32] */;
  (%556, %557, meta[relay.Constant][35] /* ty=Tensor[(21), float32] */, meta[relay.Constant][36] /* ty=Tensor[(2, 20), float32] */, %558, meta[relay.Constant][37] /* ty=Tensor[(24), float32] */)
}

def @func_9515() -> (Tensor[(640), bool], Tensor[(640), bool]) {
  @func_9513() /* ty=(Tensor[(640), bool], Tensor[(640), bool]) */
}

def @func_6059() -> (Tensor[(8, 3, 1), float64], Tensor[(8, 3, 1), float64], Tensor[(8, 3, 1), float32]) {
  %568 = fn () -> (Tensor[(8, 3, 1), float64], Tensor[(8, 3, 1), float64], Tensor[(8, 3, 1), float32]) {
    %559 = cast(meta[relay.Constant][38] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %560 = cast(meta[relay.Constant][39] /* ty=Tensor[(8, 3, 1), int8] */, dtype="int8") /* ty=Tensor[(8, 3, 1), int8] */;
    %561 = logical_xor(%559, %560) /* ty=Tensor[(8, 3, 1), int8] */;
    %562 = cast(%561, dtype="float64") /* ty=Tensor[(8, 3, 1), float64] */;
    %563 = cast(%561, dtype="float64") /* ty=Tensor[(8, 3, 1), float64] */;
    %564 = cast(%561, dtype="float32") /* ty=Tensor[(8, 3, 1), float32] */;
    %565 = sinh(%562) /* ty=Tensor[(8, 3, 1), float64] */;
    %566 = erf(%563) /* ty=Tensor[(8, 3, 1), float64] */;
    %567 = rsqrt(%564) /* ty=Tensor[(8, 3, 1), float32] */;
    (%565, %566, %567)
  };
  %568() /* ty=(Tensor[(8, 3, 1), float64], Tensor[(8, 3, 1), float64], Tensor[(8, 3, 1), float32]) */
}

def @func_4648() -> (Tensor[(2, 6, 5), float64], Tensor[(8, 5, 16), bool], Tensor[(640), bool]) {
  %569 = cast(meta[relay.Constant][40] /* ty=Tensor[(2, 6, 5), float64] */, dtype="float64") /* ty=Tensor[(2, 6, 5), float64] */;
  %570 = cast(meta[relay.Constant][41] /* ty=Tensor[(640), bool] */, dtype="bool") /* ty=Tensor[(640), bool] */;
  %571 = cast(meta[relay.Constant][41] /* ty=Tensor[(640), bool] */, dtype="bool") /* ty=Tensor[(640), bool] */;
  %572 = reshape(%570, newshape=[8, 5, 16]) /* ty=Tensor[(8, 5, 16), bool] */;
  %573 = reshape(%571, newshape=[8, 5, 16]) /* ty=Tensor[(8, 5, 16), bool] */;
  %574 = @func_638(%572, %573) /* ty=(Tensor[(8, 5, 16), bool], Tensor[(6, 7, 14), float64], Tensor[(588), float64]) */;
  %575 = tan(%569) /* ty=Tensor[(2, 6, 5), float64] */;
  %576 = %574.0;
  (%575, %576, meta[relay.Constant][41] /* ty=Tensor[(640), bool] */)
}

def @func_6818(%var_6817: Tensor[(2, 6, 5), float64]) -> Tensor[(2, 6, 5), bool] {
  %583 = fn (%var_6809: Tensor[(2, 6, 5), float64]) -> Tensor[(2, 6, 5), bool] {
    %577 = @func_4648() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(8, 5, 16), bool], Tensor[(640), bool]) */;
    %578 = %577.0;
    %579 = cast(%var_6809, dtype="bool") /* ty=Tensor[(2, 6, 5), bool] */;
    %580 = shape_of(%578, dtype="int32") /* ty=Tensor[(3), int32] */;
    %581 = cast(%578, dtype="bool") /* ty=Tensor[(2, 6, 5), bool] */;
    %582 = dyn.reshape(%579, %580, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    equal(%581, %582) /* ty=Tensor[(2, 6, 5), bool] */
  };
  %583(%var_6817) /* ty=Tensor[(2, 6, 5), bool] */
}

def @func_1276(%var_1275: Tensor[(6, 12, 6), float64]) -> Tensor[(6, 12, 6), float64] {
  %585 = fn (%var_1266: Tensor[(6, 12, 6), float64]) -> Tensor[(6, 12, 6), float64] {
    %584 = cast(%var_1266, dtype="float64") /* ty=Tensor[(6, 12, 6), float64] */;
    sin(%584) /* ty=Tensor[(6, 12, 6), float64] */
  };
  %585(%var_1275) /* ty=Tensor[(6, 12, 6), float64] */
}

def @func_7727() -> (Tensor[(7, 2, 12), int8],) {
  %588 = fn () -> (Tensor[(7, 2, 12), int8],) {
    %586 = @func_5925() /* ty=(Tensor[(2, 20), float32], Tensor[(7, 2, 12), int8], Tensor[(168), int8]) */;
    %587 = %586.1;
    (%587,)
  };
  %588() /* ty=(Tensor[(7, 2, 12), int8],) */
}

def @func_8286(%var_8284: Tensor[(1008), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(8, 5, 16), bool], Tensor[(14, 6, 12), float32], Tensor[(1008), float32], Tensor[(6, 7, 14), float64], int64, Tensor[(1274, 1), int64], Tensor[(7, 13, 14), bool]) {
  @func_8283(%var_8284) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(8, 5, 16), bool], Tensor[(14, 6, 12), float32], Tensor[(1008), float32], Tensor[(6, 7, 14), float64], int64, Tensor[(1274, 1), int64], Tensor[(7, 13, 14), bool]) */
}

def @func_5695(%var_5694: Tensor[(14, 6, 12), float32]) -> (Tensor[(14, 6, 12), float32],) {
  %591 = fn (%var_5689: Tensor[(14, 6, 12), float32]) -> (Tensor[(14, 6, 12), float32],) {
    %589 = cast(%var_5689, dtype="float32") /* ty=Tensor[(14, 6, 12), float32] */;
    %590 = log(%589) /* ty=Tensor[(14, 6, 12), float32] */;
    (%590,)
  };
  %591(%var_5694) /* ty=(Tensor[(14, 6, 12), float32],) */
}

def @func_5295() -> Tensor[(640), bool] {
  %593 = fn () -> Tensor[(640), bool] {
    %592 = @func_4684() /* ty=(Tensor[(640), bool],) */;
    %592.0
  };
  %593() /* ty=Tensor[(640), bool] */
}

def @func_4804() -> (Tensor[(2, 6, 5), float64],) {
  @func_4802() /* ty=(Tensor[(2, 6, 5), float64],) */
}

def @func_5282(%var_5260: Tensor[(16, 3, 8), float32]) -> Tensor[(16, 3, 8), float64] {
  %594 = cast(%var_5260, dtype="float32") /* ty=Tensor[(16, 3, 8), float32] */;
  %595 = rsqrt(%594) /* ty=Tensor[(16, 3, 8), float32] */;
  %596 = cast(%595, dtype="float64") /* ty=Tensor[(16, 3, 8), float64] */;
  erf(%596) /* ty=Tensor[(16, 3, 8), float64] */
}

def @func_2238(%var_2235: Tensor[(10, 1, 7), float64], %var_2236: Tensor[(320, 2), bool], %var_2237: Tensor[(10, 1, 7), float64]) -> (float32, Tensor[(1274), int64], Tensor[(320, 2), bool], Tensor[(10, ?, 7), uint16], Tensor[(6, 7, 14), float64], Tensor[(6, 7, 14), float64]) {
  %620 = fn (%var_2186: Tensor[(10, 1, 7), float64], %var_2203: Tensor[(320, 2), bool], %var_2210: Tensor[(10, 1, 7), float64]) -> (float32, Tensor[(1274), int64], Tensor[(320, 2), bool], Tensor[(10, ?, 7), uint16], Tensor[(6, 7, 14), float64], Tensor[(6, 7, 14), float64]) {
    %597 = cast(%var_2186, dtype="float64") /* ty=Tensor[(10, 1, 7), float64] */;
    %598 = asinh(%597) /* ty=Tensor[(10, 1, 7), float64] */;
    %599 = cast(%var_2210, dtype="uint16") /* ty=Tensor[(10, 1, 7), uint16] */;
    %600 = shape_of(%598, dtype="int32") /* ty=Tensor[(3), int32] */;
    %601 = cast(%598, dtype="uint16") /* ty=Tensor[(10, 1, 7), uint16] */;
    %602 = dyn.reshape(%599, %600, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %603 = cast(%var_2203, dtype="bool") /* ty=Tensor[(320, 2), bool] */;
    %604 = cast(%var_2203, dtype="bool") /* ty=Tensor[(320, 2), bool] */;
    %605 = reshape(%603, newshape=[8, 5, 16]) /* ty=Tensor[(8, 5, 16), bool] */;
    %606 = reshape(%604, newshape=[8, 5, 16]) /* ty=Tensor[(8, 5, 16), bool] */;
    %607 = @func_638(%605, %606) /* ty=(Tensor[(8, 5, 16), bool], Tensor[(6, 7, 14), float64], Tensor[(588), float64]) */;
    %608 = cast(-1.86083f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %609 = cast(meta[relay.Constant][42] /* ty=Tensor[(1274), int64] */, dtype="int64") /* ty=Tensor[(1274), int64] */;
    %610 = cast(%var_2203, dtype="bool") /* ty=Tensor[(320, 2), bool] */;
    %611 = reshape(%608, newshape=[]) /* ty=float32 */;
    %612 = reshape(%609, newshape=[637, 2]) /* ty=Tensor[(637, 2), int64] */;
    %613 = reshape(%610, newshape=[20, 32]) /* ty=Tensor[(20, 32), bool] */;
    %614 = @func_1254(%611, %612, %613) /* ty=(Tensor[(6, 7, 14), float64], Tensor[(20, 32), bool], Tensor[(11, 2, 1), bool], Tensor[(8, 5, 16), bool], Tensor[(7, 13, 14), bool], Tensor[(637, 2), uint32], Tensor[(6, 7, 14), float64], Tensor[(6, 7, 14), float64]) */;
    %615 = %614.7;
    %616 = cast(%615, dtype="float64") /* ty=Tensor[(6, 7, 14), float64] */;
    %617 = multiply(%601, %602) /* ty=Tensor[(10, ?, 7), uint16] */;
    %618 = %607.1;
    %619 = exp(%616) /* ty=Tensor[(6, 7, 14), float64] */;
    (-1.86083f /* ty=float32 */, meta[relay.Constant][42] /* ty=Tensor[(1274), int64] */, %var_2203, %617, %618, %619)
  };
  %620(%var_2235, %var_2236, %var_2237) /* ty=(float32, Tensor[(1274), int64], Tensor[(320, 2), bool], Tensor[(10, ?, 7), uint16], Tensor[(6, 7, 14), float64], Tensor[(6, 7, 14), float64]) */
}

def @func_7853(%var_7851: Tensor[(4, 3, 2), float32]) -> Tensor[(4, 3, 2), uint64] {
  @func_7850(%var_7851) /* ty=Tensor[(4, 3, 2), uint64] */
}

def @func_4686() -> (Tensor[(640), bool],) {
  @func_4684() /* ty=(Tensor[(640), bool],) */
}

def @func_6186(%var_6185: Tensor[(640), bool]) -> (Tensor[(640), uint16], Tensor[(640), float64]) {
  %629 = fn (%var_6174: Tensor[(640), bool]) -> (Tensor[(640), uint16], Tensor[(640), float64]) {
    %621 = @func_5494() /* ty=Tensor[(640), bool] */;
    %622 = cast(%var_6174, dtype="uint16") /* ty=Tensor[(640), uint16] */;
    %623 = shape_of(%621, dtype="int32") /* ty=Tensor[(1), int32] */;
    %624 = cast(%621, dtype="uint16") /* ty=Tensor[(640), uint16] */;
    %625 = dyn.reshape(%622, %623, newshape=[]) /* ty=Tensor[(?), uint16] */;
    %626 = cast(%621, dtype="float64") /* ty=Tensor[(640), float64] */;
    %627 = add(%624, %625) /* ty=Tensor[(640), uint16] */;
    %628 = cosh(%626) /* ty=Tensor[(640), float64] */;
    (%627, %628)
  };
  %629(%var_6185) /* ty=(Tensor[(640), uint16], Tensor[(640), float64]) */
}

def @func_9075(%var_9073: Tensor[(16, 5, 1), uint32], %var_9074: Tensor[(16, 5, 11), uint32]) -> (Tensor[(16, 5, 11), uint32], Tensor[(2, 6, 5), float64]) {
  %635 = fn (%var_9041: Tensor[(16, 5, 1), uint32], %var_9042: Tensor[(16, 5, 11), uint32]) -> (Tensor[(16, 5, 11), uint32], Tensor[(2, 6, 5), float64]) {
    %630 = cast(%var_9041, dtype="uint32") /* ty=Tensor[(16, 5, 1), uint32] */;
    %631 = cast(%var_9042, dtype="uint32") /* ty=Tensor[(16, 5, 11), uint32] */;
    %632 = @func_6740() /* ty=(Tensor[(2, 6, 5), float64],) */;
    %633 = multiply(%630, %631) /* ty=Tensor[(16, 5, 11), uint32] */;
    %634 = %632.0;
    (%633, %634)
  };
  %635(%var_9073, %var_9074) /* ty=(Tensor[(16, 5, 11), uint32], Tensor[(2, 6, 5), float64]) */
}

def @func_8597(%var_8594: Tensor[(30, 4), float32], %var_8595: Tensor[(60, 2), float32], %var_8596: Tensor[(60, 2), float64]) -> (Tensor[(2, 6, 5), float64], Tensor[(480), float64], Tensor[(30, 4), float32], Tensor[(60, 2), int64], Tensor[(4, 3, 2), float32], Tensor[(320, 2), bool], Tensor[(120), float32], Tensor[(16, 3, 8), float64], Tensor[(384), float32], Tensor[(60, 2), int64]) {
  %674 = fn (%var_8525: Tensor[(30, 4), float32], %var_8537: Tensor[(60, 2), float32], %var_8583: Tensor[(60, 2), float64]) -> (Tensor[(2, 6, 5), float64], Tensor[(480), float64], Tensor[(30, 4), float32], Tensor[(60, 2), int64], Tensor[(4, 3, 2), float32], Tensor[(320, 2), bool], Tensor[(120), float32], Tensor[(16, 3, 8), float64], Tensor[(384), float32], Tensor[(60, 2), int64]) {
    %636 = @func_7201() /* ty=(Tensor[(2, 6, 5), float64],) */;
    %637 = cast(meta[relay.Constant][43] /* ty=Tensor[(480), float64] */, dtype="float64") /* ty=Tensor[(480), float64] */;
    %638 = cast(%var_8525, dtype="float32") /* ty=Tensor[(30, 4), float32] */;
    %639 = reshape(%637, newshape=[480]) /* ty=Tensor[(480), float64] */;
    %640 = reshape(%638, newshape=[60, 2]) /* ty=Tensor[(60, 2), float32] */;
    %641 = @func_5153(%639, %640) /* ty=(Tensor[(20, 48), float64], Tensor[(480), float64], Tensor[(60, 2), float32], Tensor[(2, 6, 5), float64]) */;
    %642 = %641.2;
    %643 = cast(%var_8537, dtype="int64") /* ty=Tensor[(60, 2), int64] */;
    %644 = shape_of(%642, dtype="int32") /* ty=Tensor[(2), int32] */;
    %645 = cast(%642, dtype="int64") /* ty=Tensor[(60, 2), int64] */;
    %646 = dyn.reshape(%643, %644, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
    %647 = @func_4838() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(4, 5, 2), float32], Tensor[(21), float32], Tensor[(2, 20), float32], Tensor[(4, 3, 2), float32], Tensor[(24), float32]) */;
    %648 = %647.4;
    %649 = cast(%648, dtype="float32") /* ty=Tensor[(4, 3, 2), float32] */;
    %650 = reshape(%649, newshape=[4, 3, 2]) /* ty=Tensor[(4, 3, 2), float32] */;
    %651 = @func_6378(%650) /* ty=(Tensor[(4, 3, 2), int16], float32, Tensor[(70), float64], Tensor[(320, 2), bool]) */;
    %652 = cast(meta[relay.Constant][44] /* ty=Tensor[(60, 2), float32] */, dtype="float32") /* ty=Tensor[(60, 2), float32] */;
    %653 = reshape(%652, newshape=[120]) /* ty=Tensor[(120), float32] */;
    %654 = @func_6727(%653) /* ty=(Tensor[(2, 20), int32], Tensor[(14, 10, 14), float64], Tensor[(120), float32], Tensor[(2, 20), int8], Tensor[(2, 20), float32]) */;
    %655 = cast(meta[relay.Constant][45] /* ty=Tensor[(384), float32] */, dtype="float32") /* ty=Tensor[(384), float32] */;
    %656 = reshape(%655, newshape=[16, 3, 8]) /* ty=Tensor[(16, 3, 8), float32] */;
    %657 = cast(meta[relay.Constant][44] /* ty=Tensor[(60, 2), float32] */, dtype="bool") /* ty=Tensor[(60, 2), bool] */;
    %658 = shape_of(%var_8537, dtype="int32") /* ty=Tensor[(2), int32] */;
    %659 = cast(%var_8537, dtype="bool") /* ty=Tensor[(60, 2), bool] */;
    %660 = dyn.reshape(%657, %658, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %661 = greater(%659, %660) /* ty=Tensor[(60, 2), bool] */;
    %662 = cast(%661, dtype="float64") /* ty=Tensor[(60, 2), float64] */;
    %663 = sin(%662) /* ty=Tensor[(60, 2), float64] */;
    %664 = cast(%var_8583, dtype="int64") /* ty=Tensor[(60, 2), int64] */;
    %665 = shape_of(%663, dtype="int32") /* ty=Tensor[(2), int32] */;
    %666 = cast(%663, dtype="int64") /* ty=Tensor[(60, 2), int64] */;
    %667 = dyn.reshape(%664, %665, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
    %668 = %636.0;
    %669 = subtract(%645, %646) /* ty=Tensor[(60, 2), int64] */;
    %670 = %651.3;
    %671 = %654.2;
    %672 = @func_5282(%656) /* ty=Tensor[(16, 3, 8), float64] */;
    %673 = bitwise_and(%666, %667) /* ty=Tensor[(60, 2), int64] */;
    (%668, meta[relay.Constant][43] /* ty=Tensor[(480), float64] */, %var_8525, %669, %648, %670, %671, %672, meta[relay.Constant][45] /* ty=Tensor[(384), float32] */, %673)
  };
  %674(%var_8594, %var_8595, %var_8596) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(480), float64], Tensor[(30, 4), float32], Tensor[(60, 2), int64], Tensor[(4, 3, 2), float32], Tensor[(320, 2), bool], Tensor[(120), float32], Tensor[(16, 3, 8), float64], Tensor[(384), float32], Tensor[(60, 2), int64]) */
}

def @func_5734() -> (Tensor[(24), float32],) {
  @func_5732() /* ty=(Tensor[(24), float32],) */
}

def @func_8283(%var_8253: Tensor[(1008), float32]) -> (Tensor[(2, 6, 5), float64], Tensor[(8, 5, 16), bool], Tensor[(14, 6, 12), float32], Tensor[(1008), float32], Tensor[(6, 7, 14), float64], int64, Tensor[(1274, 1), int64], Tensor[(7, 13, 14), bool]) {
  %675 = @func_8117() /* ty=(Tensor[(640), bool], Tensor[(2, 6, 5), float64], Tensor[(640), bool], Tensor[(2, 6, 5), float64], Tensor[(640), uint16], Tensor[(9, 3, 13), float64], Tensor[(351), float64]) */;
  %676 = cast(%var_8253, dtype="float32") /* ty=Tensor[(1008), float32] */;
  %677 = reshape(%676, newshape=[14, 6, 12]) /* ty=Tensor[(14, 6, 12), float32] */;
  %678 = @func_5693(%677) /* ty=(Tensor[(14, 6, 12), float32],) */;
  %679 = cast(1 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %680 = cast(meta[relay.Constant][46] /* ty=Tensor[(1274, 1), int64] */, dtype="int64") /* ty=Tensor[(1274, 1), int64] */;
  %681 = @func_7437() /* ty=Tensor[(8, 5, 16), bool] */;
  %682 = cast(%681, dtype="bool") /* ty=Tensor[(8, 5, 16), bool] */;
  %683 = reshape(%679, newshape=[]) /* ty=int64 */;
  %684 = reshape(%680, newshape=[7, 13, 14]) /* ty=Tensor[(7, 13, 14), int64] */;
  %685 = reshape(%682, newshape=[640]) /* ty=Tensor[(640), bool] */;
  %686 = @func_1018(%683, %684, %685) /* ty=(Tensor[(7, 13, 14), bool], Tensor[(6, 7, 14), float64], Tensor[(640), bool]) */;
  %687 = cast(1 /* ty=int64 */, dtype="float32") /* ty=float32 */;
  %688 = cast(meta[relay.Constant][46] /* ty=Tensor[(1274, 1), int64] */, dtype="int64") /* ty=Tensor[(1274, 1), int64] */;
  %689 = cast(%681, dtype="bool") /* ty=Tensor[(8, 5, 16), bool] */;
  %690 = reshape(%687, newshape=[]) /* ty=float32 */;
  %691 = reshape(%688, newshape=[637, 2]) /* ty=Tensor[(637, 2), int64] */;
  %692 = reshape(%689, newshape=[20, 32]) /* ty=Tensor[(20, 32), bool] */;
  %693 = @func_1254(%690, %691, %692) /* ty=(Tensor[(6, 7, 14), float64], Tensor[(20, 32), bool], Tensor[(11, 2, 1), bool], Tensor[(8, 5, 16), bool], Tensor[(7, 13, 14), bool], Tensor[(637, 2), uint32], Tensor[(6, 7, 14), float64], Tensor[(6, 7, 14), float64]) */;
  %694 = %675.3;
  %695 = %678.0;
  %696 = %686.1;
  %697 = %693.4;
  (%694, %681, %695, %var_8253, %696, 1 /* ty=int64 */, meta[relay.Constant][46] /* ty=Tensor[(1274, 1), int64] */, %697)
}

def @func_4802() -> (Tensor[(2, 6, 5), float64],) {
  %698 = @func_4648() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(8, 5, 16), bool], Tensor[(640), bool]) */;
  %699 = %698.0;
  (%699,)
}

def @func_7992() -> (Tensor[(8, 5, 16), bool],) {
  %701 = fn () -> (Tensor[(8, 5, 16), bool],) {
    %700 = @func_7437() /* ty=Tensor[(8, 5, 16), bool] */;
    (%700,)
  };
  %701() /* ty=(Tensor[(8, 5, 16), bool],) */
}

def @func_1022(%var_1019: int64, %var_1020: Tensor[(7, 13, 14), int64], %var_1021: Tensor[(640), bool]) -> (Tensor[(7, 13, 14), bool], Tensor[(6, 7, 14), float64], Tensor[(640), bool]) {
  %711 = fn (%var_953: int64, %var_954: Tensor[(7, 13, 14), int64], %var_984: Tensor[(640), bool]) -> (Tensor[(7, 13, 14), bool], Tensor[(6, 7, 14), float64], Tensor[(640), bool]) {
    %702 = cast(%var_953, dtype="bool") /* ty=bool */;
    %703 = cast(%var_954, dtype="bool") /* ty=Tensor[(7, 13, 14), bool] */;
    %704 = cast(%var_984, dtype="bool") /* ty=Tensor[(640), bool] */;
    %705 = cast(%var_984, dtype="bool") /* ty=Tensor[(640), bool] */;
    %706 = reshape(%704, newshape=[8, 5, 16]) /* ty=Tensor[(8, 5, 16), bool] */;
    %707 = reshape(%705, newshape=[8, 5, 16]) /* ty=Tensor[(8, 5, 16), bool] */;
    %708 = @func_638(%706, %707) /* ty=(Tensor[(8, 5, 16), bool], Tensor[(6, 7, 14), float64], Tensor[(588), float64]) */;
    %709 = not_equal(%702, %703) /* ty=Tensor[(7, 13, 14), bool] */;
    %710 = %708.1;
    (%709, %710, %var_984)
  };
  %711(%var_1019, %var_1020, %var_1021) /* ty=(Tensor[(7, 13, 14), bool], Tensor[(6, 7, 14), float64], Tensor[(640), bool]) */
}

def @func_4483(%var_4481: Tensor[(9, 3, 13), float64]) -> (Tensor[(9, 3, 13), float64],) {
  @func_4480(%var_4481) /* ty=(Tensor[(9, 3, 13), float64],) */
}

def @func_6509(%var_6467: Tensor[(2, 20), float32]) -> (Tensor[(2, 20), float64], Tensor[(2, 20), float64], Tensor[(2, 20), bool]) {
  %712 = cast(%var_6467, dtype="float64") /* ty=Tensor[(2, 20), float64] */;
  %713 = @func_6313() /* ty=Tensor[(2, 20), float32] */;
  %714 = cast(%var_6467, dtype="uint16") /* ty=Tensor[(2, 20), uint16] */;
  %715 = shape_of(%713, dtype="int32") /* ty=Tensor[(2), int32] */;
  %716 = cast(%713, dtype="uint16") /* ty=Tensor[(2, 20), uint16] */;
  %717 = dyn.reshape(%714, %715, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %718 = right_shift(%716, %717) /* ty=Tensor[(2, 20), uint16] */;
  %719 = cast(%713, dtype="float32") /* ty=Tensor[(2, 20), float32] */;
  %720 = rsqrt(%719) /* ty=Tensor[(2, 20), float32] */;
  %721 = cast(%720, dtype="float64") /* ty=Tensor[(2, 20), float64] */;
  %722 = shape_of(%718, dtype="int32") /* ty=Tensor[(2), int32] */;
  %723 = cast(%718, dtype="float64") /* ty=Tensor[(2, 20), float64] */;
  %724 = dyn.reshape(%721, %722, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %725 = cast(%713, dtype="float64") /* ty=Tensor[(2, 20), float64] */;
  %726 = shape_of(%720, dtype="int32") /* ty=Tensor[(2), int32] */;
  %727 = cast(%720, dtype="float64") /* ty=Tensor[(2, 20), float64] */;
  %728 = dyn.reshape(%725, %726, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %729 = floor_divide(%727, %728) /* ty=Tensor[(2, 20), float64] */;
  %730 = cast(%718, dtype="bool") /* ty=Tensor[(2, 20), bool] */;
  %731 = shape_of(%729, dtype="int32") /* ty=Tensor[(2), int32] */;
  %732 = cast(%729, dtype="bool") /* ty=Tensor[(2, 20), bool] */;
  %733 = dyn.reshape(%730, %731, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %734 = equal(%732, %733) /* ty=Tensor[(2, 20), bool] */;
  %735 = cast(%734, dtype="uint16") /* ty=Tensor[(2, 20), uint16] */;
  %736 = shape_of(%729, dtype="int32") /* ty=Tensor[(2), int32] */;
  %737 = cast(%729, dtype="uint16") /* ty=Tensor[(2, 20), uint16] */;
  %738 = dyn.reshape(%735, %736, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %739 = left_shift(%737, %738) /* ty=Tensor[(2, 20), uint16] */;
  %740 = cast(%739, dtype="bool") /* ty=Tensor[(2, 20), bool] */;
  %741 = shape_of(%729, dtype="int32") /* ty=Tensor[(2), int32] */;
  %742 = cast(%729, dtype="bool") /* ty=Tensor[(2, 20), bool] */;
  %743 = dyn.reshape(%740, %741, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %744 = atan(%712) /* ty=Tensor[(2, 20), float64] */;
  %745 = mod(%723, %724) /* ty=Tensor[(2, 20), float64] */;
  %746 = less(%742, %743) /* ty=Tensor[(2, 20), bool] */;
  (%744, %745, %746)
}

def @func_6632() -> Tensor[(24), float32] {
  %748 = fn () -> Tensor[(24), float32] {
    %747 = @func_5732() /* ty=(Tensor[(24), float32],) */;
    %747.0
  };
  %748() /* ty=Tensor[(24), float32] */
}

def @func_6378(%var_6354: Tensor[(4, 3, 2), float32]) -> (Tensor[(4, 3, 2), int16], float32, Tensor[(70), float64], Tensor[(320, 2), bool]) {
  %749 = @func_5986() /* ty=(Tensor[(13, 14, 12), uint8], Tensor[(4, 3, 2), float32]) */;
  %750 = %749.1;
  %751 = cast(%var_6354, dtype="int16") /* ty=Tensor[(4, 3, 2), int16] */;
  %752 = shape_of(%750, dtype="int32") /* ty=Tensor[(3), int32] */;
  %753 = cast(%750, dtype="int16") /* ty=Tensor[(4, 3, 2), int16] */;
  %754 = dyn.reshape(%751, %752, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %755 = cast(meta[relay.Constant][47] /* ty=Tensor[(70), float64] */, dtype="float64") /* ty=Tensor[(70), float64] */;
  %756 = cast(meta[relay.Constant][48] /* ty=Tensor[(320, 2), bool] */, dtype="bool") /* ty=Tensor[(320, 2), bool] */;
  %757 = cast(meta[relay.Constant][47] /* ty=Tensor[(70), float64] */, dtype="float64") /* ty=Tensor[(70), float64] */;
  %758 = reshape(%755, newshape=[10, 1, 7]) /* ty=Tensor[(10, 1, 7), float64] */;
  %759 = reshape(%756, newshape=[320, 2]) /* ty=Tensor[(320, 2), bool] */;
  %760 = reshape(%757, newshape=[10, 1, 7]) /* ty=Tensor[(10, 1, 7), float64] */;
  %761 = @func_2234(%758, %759, %760) /* ty=(float32, Tensor[(1274), int64], Tensor[(320, 2), bool], Tensor[(10, ?, 7), uint16], Tensor[(6, 7, 14), float64], Tensor[(6, 7, 14), float64]) */;
  %762 = subtract(%753, %754) /* ty=Tensor[(4, 3, 2), int16] */;
  %763 = %761.0;
  (%762, %763, meta[relay.Constant][47] /* ty=Tensor[(70), float64] */, meta[relay.Constant][48] /* ty=Tensor[(320, 2), bool] */)
}

def @func_7133(%var_7086: Tensor[(2, 6, 5), float64]) -> (Tensor[(4, 3, 2), float32], Tensor[(168), int8], Tensor[(2, 6, 5), bool], Tensor[(120), float32], Tensor[(120), float32]) {
  %764 = @func_5893() /* ty=(Tensor[(4, 3, 2), float32],) */;
  %765 = @func_5925() /* ty=(Tensor[(2, 20), float32], Tensor[(7, 2, 12), int8], Tensor[(168), int8]) */;
  %766 = @func_6740() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %767 = %766.0;
  %768 = cast(%var_7086, dtype="bool") /* ty=Tensor[(2, 6, 5), bool] */;
  %769 = shape_of(%767, dtype="int32") /* ty=Tensor[(3), int32] */;
  %770 = cast(%767, dtype="bool") /* ty=Tensor[(2, 6, 5), bool] */;
  %771 = dyn.reshape(%768, %769, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %772 = cast(meta[relay.Constant][49] /* ty=Tensor[(120), float32] */, dtype="float32") /* ty=Tensor[(120), float32] */;
  %773 = reshape(%772, newshape=[120]) /* ty=Tensor[(120), float32] */;
  %774 = @func_6727(%773) /* ty=(Tensor[(2, 20), int32], Tensor[(14, 10, 14), float64], Tensor[(120), float32], Tensor[(2, 20), int8], Tensor[(2, 20), float32]) */;
  %775 = %764.0;
  %776 = %765.2;
  %777 = logical_and(%770, %771) /* ty=Tensor[(2, 6, 5), bool] */;
  %778 = %774.2;
  (%775, %776, %777, %778, meta[relay.Constant][49] /* ty=Tensor[(120), float32] */)
}

def @func_4840() -> (Tensor[(2, 6, 5), float64], Tensor[(4, 5, 2), float32], Tensor[(21), float32], Tensor[(2, 20), float32], Tensor[(4, 3, 2), float32], Tensor[(24), float32]) {
  @func_4838() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(4, 5, 2), float32], Tensor[(21), float32], Tensor[(2, 20), float32], Tensor[(4, 3, 2), float32], Tensor[(24), float32]) */
}

def @func_8661() -> (Tensor[(2, 6, 5), float64], Tensor[(384), float32], Tensor[(640), bool], Tensor[(640), bool], Tensor[(14, 10, 14), float64], Tensor[(30, 4), int16]) {
  %803 = fn () -> (Tensor[(2, 6, 5), float64], Tensor[(384), float32], Tensor[(640), bool], Tensor[(640), bool], Tensor[(14, 10, 14), float64], Tensor[(30, 4), int16]) {
    %779 = @func_7409() /* ty=(Tensor[(2, 6, 5), float64],) */;
    %780 = cast(meta[relay.Constant][50] /* ty=Tensor[(30, 4), float32] */, dtype="float32") /* ty=Tensor[(30, 4), float32] */;
    %781 = cast(meta[relay.Constant][50] /* ty=Tensor[(30, 4), float32] */, dtype="float32") /* ty=Tensor[(30, 4), float32] */;
    %782 = cast(meta[relay.Constant][50] /* ty=Tensor[(30, 4), float32] */, dtype="float64") /* ty=Tensor[(30, 4), float64] */;
    %783 = reshape(%780, newshape=[30, 4]) /* ty=Tensor[(30, 4), float32] */;
    %784 = reshape(%781, newshape=[60, 2]) /* ty=Tensor[(60, 2), float32] */;
    %785 = reshape(%782, newshape=[60, 2]) /* ty=Tensor[(60, 2), float64] */;
    %786 = @func_8593(%783, %784, %785) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(480), float64], Tensor[(30, 4), float32], Tensor[(60, 2), int64], Tensor[(4, 3, 2), float32], Tensor[(320, 2), bool], Tensor[(120), float32], Tensor[(16, 3, 8), float64], Tensor[(384), float32], Tensor[(60, 2), int64]) */;
    %787 = cast(meta[relay.Constant][51] /* ty=Tensor[(640), bool] */, dtype="bool") /* ty=Tensor[(640), bool] */;
    %788 = reshape(%787, newshape=[640]) /* ty=Tensor[(640), bool] */;
    %789 = cast(meta[relay.Constant][50] /* ty=Tensor[(30, 4), float32] */, dtype="float32") /* ty=Tensor[(30, 4), float32] */;
    %790 = reshape(%789, newshape=[120]) /* ty=Tensor[(120), float32] */;
    %791 = @func_3160(%790) /* ty=(Tensor[(15, 4, 2), bool], Tensor[(120), float32], Tensor[(14, 10, 14), float64]) */;
    %792 = cast(meta[relay.Constant][50] /* ty=Tensor[(30, 4), float32] */, dtype="float32") /* ty=Tensor[(30, 4), float32] */;
    %793 = atan(%792) /* ty=Tensor[(30, 4), float32] */;
    %794 = cast(meta[relay.Constant][50] /* ty=Tensor[(30, 4), float32] */, dtype="int16") /* ty=Tensor[(30, 4), int16] */;
    %795 = shape_of(%793, dtype="int32") /* ty=Tensor[(2), int32] */;
    %796 = cast(%793, dtype="int16") /* ty=Tensor[(30, 4), int16] */;
    %797 = dyn.reshape(%794, %795, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
    %798 = %779.0;
    %799 = %786.8;
    %800 = @func_6968(%788) /* ty=Tensor[(640), bool] */;
    %801 = %791.2;
    %802 = bitwise_and(%796, %797) /* ty=Tensor[(30, 4), int16] */;
    (%798, %799, %800, meta[relay.Constant][51] /* ty=Tensor[(640), bool] */, %801, %802)
  };
  %803() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(384), float32], Tensor[(640), bool], Tensor[(640), bool], Tensor[(14, 10, 14), float64], Tensor[(30, 4), int16]) */
}

def @func_1464(%var_1462: Tensor[(4, 5, 2), float32]) -> (Tensor[(4, 5, 2), float32],) {
  @func_1461(%var_1462) /* ty=(Tensor[(4, 5, 2), float32],) */
}

def @func_3879(%var_3877: Tensor[(15, 8, 8), float64], %var_3878: Tensor[(168), int8]) -> (Tensor[(15, 8, 8), float64], Tensor[(7, 2, 12), int8], Tensor[(168), int8]) {
  @func_3875(%var_3877, %var_3878) /* ty=(Tensor[(15, 8, 8), float64], Tensor[(7, 2, 12), int8], Tensor[(168), int8]) */
}

def @func_4650() -> (Tensor[(2, 6, 5), float64], Tensor[(8, 5, 16), bool], Tensor[(640), bool]) {
  @func_4648() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(8, 5, 16), bool], Tensor[(640), bool]) */
}

def @func_8345() -> (Tensor[(640), bool], Tensor[(640), bool]) {
  @func_8343() /* ty=(Tensor[(640), bool], Tensor[(640), bool]) */
}

def @func_9163(%var_9161: int32, %var_9162: Tensor[(12, 3, 8), int32]) -> (Tensor[(12, 3, 8), bool], Tensor[(640), bool], Tensor[(640), bool]) {
  %811 = fn (%var_9126: int32, %var_9127: Tensor[(12, 3, 8), int32]) -> (Tensor[(12, 3, 8), bool], Tensor[(640), bool], Tensor[(640), bool]) {
    %804 = cast(%var_9126, dtype="bool") /* ty=bool */;
    %805 = cast(%var_9127, dtype="bool") /* ty=Tensor[(12, 3, 8), bool] */;
    %806 = @func_7891() /* ty=(Tensor[(4, 3, 2), float32], Tensor[(640), bool]) */;
    %807 = @func_4648() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(8, 5, 16), bool], Tensor[(640), bool]) */;
    %808 = greater(%804, %805) /* ty=Tensor[(12, 3, 8), bool] */;
    %809 = %806.1;
    %810 = %807.2;
    (%808, %809, %810)
  };
  %811(%var_9161, %var_9162) /* ty=(Tensor[(12, 3, 8), bool], Tensor[(640), bool], Tensor[(640), bool]) */
}

def @func_4726(%var_4716: Tensor[(4, 3, 2), float32], %var_4717: Tensor[(4, 3, 2), float32]) -> Tensor[(4, 3, 2), float32] {
  %812 = cast(%var_4717, dtype="float32") /* ty=Tensor[(4, 3, 2), float32] */;
  %813 = shape_of(%var_4716, dtype="int32") /* ty=Tensor[(3), int32] */;
  %814 = cast(%var_4716, dtype="float32") /* ty=Tensor[(4, 3, 2), float32] */;
  %815 = dyn.reshape(%812, %813, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%814, %815) /* ty=Tensor[(4, 3, 2), float32] */
}

def @func_8832() -> (Tensor[(640), bool], Tensor[(15), float64], Tensor[(24), float32], Tensor[(15), float64], Tensor[(4, 3, 2), int16]) {
  %827 = fn () -> (Tensor[(640), bool], Tensor[(15), float64], Tensor[(24), float32], Tensor[(15), float64], Tensor[(4, 3, 2), int16]) {
    %816 = @func_8759() /* ty=(Tensor[(40), float64], Tensor[(1, 15, 1), float64], Tensor[(15), float64]) */;
    %817 = @func_5732() /* ty=(Tensor[(24), float32],) */;
    %818 = @func_8759() /* ty=(Tensor[(40), float64], Tensor[(1, 15, 1), float64], Tensor[(15), float64]) */;
    %819 = %817.0;
    %820 = cast(%819, dtype="float32") /* ty=Tensor[(24), float32] */;
    %821 = reshape(%820, newshape=[4, 3, 2]) /* ty=Tensor[(4, 3, 2), float32] */;
    %822 = @func_6378(%821) /* ty=(Tensor[(4, 3, 2), int16], float32, Tensor[(70), float64], Tensor[(320, 2), bool]) */;
    %823 = @func_7587() /* ty=Tensor[(640), bool] */;
    %824 = %816.2;
    %825 = %818.2;
    %826 = %822.0;
    (%823, %824, %819, %825, %826)
  };
  %827() /* ty=(Tensor[(640), bool], Tensor[(15), float64], Tensor[(24), float32], Tensor[(15), float64], Tensor[(4, 3, 2), int16]) */
}

def @func_9319() -> (Tensor[(4, 3, 2), float32], Tensor[(640), bool]) {
  %828 = @func_5893() /* ty=(Tensor[(4, 3, 2), float32],) */;
  %829 = %828.0;
  %830 = @func_5294() /* ty=Tensor[(640), bool] */;
  (%829, %830)
}

def @main(%var_9660: Tensor[(13, 14, 12), uint8], %var_9667: Tensor[(1274), int64]) -> (Tensor[(32), float32], Tensor[(13, 14, 12), float64], Tensor[(1274), int8]) {
  %831 = @func_5988() /* ty=(Tensor[(13, 14, 12), uint8], Tensor[(4, 3, 2), float32]) */;
  %832 = %831.0;
  %833 = cast(%var_9660, dtype="float64") /* ty=Tensor[(13, 14, 12), float64] */;
  %834 = shape_of(%832, dtype="int32") /* ty=Tensor[(3), int32] */;
  %835 = cast(%832, dtype="float64") /* ty=Tensor[(13, 14, 12), float64] */;
  %836 = dyn.reshape(%833, %834, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %837 = mod(%835, %836) /* ty=Tensor[(13, 14, 12), float64] */;
  %838 = cast(%837, dtype="float64") /* ty=Tensor[(13, 14, 12), float64] */;
  %839 = shape_of(%var_9660, dtype="int32") /* ty=Tensor[(3), int32] */;
  %840 = cast(%var_9660, dtype="float64") /* ty=Tensor[(13, 14, 12), float64] */;
  %841 = dyn.reshape(%838, %839, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %842 = cast(meta[relay.Constant][52] /* ty=Tensor[(32), float32] */, dtype="float32") /* ty=Tensor[(32), float32] */;
  %843 = cast(%var_9667, dtype="int64") /* ty=Tensor[(1274), int64] */;
  %844 = reshape(%842, newshape=[2, 2, 8]) /* ty=Tensor[(2, 2, 8), float32] */;
  %845 = reshape(%843, newshape=[91, 14]) /* ty=Tensor[(91, 14), int64] */;
  %846 = @func_5250(%844, %845) /* ty=(Tensor[(36), float32], Tensor[(144), float32], Tensor[(2, 2, 8), uint32], Tensor[(9, 3, 13), float64], Tensor[(39, 9), float64], Tensor[(640), uint64], Tensor[(640), bool], Tensor[(91, 14), int64]) */;
  %847 = %846.7;
  %848 = cast(%847, dtype="int8") /* ty=Tensor[(91, 14), int8] */;
  %849 = shape_of(%var_9667, dtype="int32") /* ty=Tensor[(1), int32] */;
  %850 = cast(%var_9667, dtype="int8") /* ty=Tensor[(1274), int8] */;
  %851 = dyn.reshape(%848, %849, newshape=[]) /* ty=Tensor[(?), int8] */;
  %852 = divide(%840, %841) /* ty=Tensor[(13, 14, 12), float64] */;
  %853 = add(%850, %851) /* ty=Tensor[(1274), int8] */;
  (meta[relay.Constant][52] /* ty=Tensor[(32), float32] */, %852, %853)
}

def @func_4970() -> (Tensor[(2, 20), float32],) {
  %854 = @func_4838() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(4, 5, 2), float32], Tensor[(21), float32], Tensor[(2, 20), float32], Tensor[(4, 3, 2), float32], Tensor[(24), float32]) */;
  %855 = %854.3;
  (%855,)
}

def @func_8706(%var_8705: Tensor[(2, 20), float32]) -> Tensor[(2, 20), uint32] {
  %862 = fn (%var_8693: Tensor[(2, 20), float32]) -> Tensor[(2, 20), uint32] {
    %856 = @func_5925() /* ty=(Tensor[(2, 20), float32], Tensor[(7, 2, 12), int8], Tensor[(168), int8]) */;
    %857 = %856.0;
    %858 = cast(%var_8693, dtype="uint32") /* ty=Tensor[(2, 20), uint32] */;
    %859 = shape_of(%857, dtype="int32") /* ty=Tensor[(2), int32] */;
    %860 = cast(%857, dtype="uint32") /* ty=Tensor[(2, 20), uint32] */;
    %861 = dyn.reshape(%858, %859, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
    bitwise_or(%860, %861) /* ty=Tensor[(2, 20), uint32] */
  };
  %862(%var_8705) /* ty=Tensor[(2, 20), uint32] */
}

def @func_2875(%var_2873: Tensor[(8, 12, 10), float64]) -> (Tensor[(8, 12, 10), float64], Tensor[(108, 4), float64], Tensor[(21, 1), float32], Tensor[(40), float32]) {
  @func_2872(%var_2873) /* ty=(Tensor[(8, 12, 10), float64], Tensor[(108, 4), float64], Tensor[(21, 1), float32], Tensor[(40), float32]) */
}

def @func_8859() -> (Tensor[(640), bool], Tensor[(2, 6, 5), float64], Tensor[(2, 20), float32]) {
  %863 = @func_7891() /* ty=(Tensor[(4, 3, 2), float32], Tensor[(640), bool]) */;
  %864 = @func_8117() /* ty=(Tensor[(640), bool], Tensor[(2, 6, 5), float64], Tensor[(640), bool], Tensor[(2, 6, 5), float64], Tensor[(640), uint16], Tensor[(9, 3, 13), float64], Tensor[(351), float64]) */;
  %865 = %863.1;
  %866 = %864.1;
  %867 = @func_6313() /* ty=Tensor[(2, 20), float32] */;
  (%865, %866, %867)
}

def @func_1950(%var_1936: Tensor[(12, 1, 3), float32], %var_1937: Tensor[(12, 4, 3), float32], %var_1942: float32, %var_1944: Tensor[(640), bool]) -> (Tensor[(12, 4, 3), float32], Tensor[(20, 32), bool], float32, Tensor[(637, 2), int64], Tensor[(640), bool]) {
  %868 = cast(%var_1936, dtype="float32") /* ty=Tensor[(12, 1, 3), float32] */;
  %869 = cast(%var_1937, dtype="float32") /* ty=Tensor[(12, 4, 3), float32] */;
  %870 = cast(%var_1942, dtype="float32") /* ty=float32 */;
  %871 = cast(meta[relay.Constant][53] /* ty=Tensor[(637, 2), int64] */, dtype="int64") /* ty=Tensor[(637, 2), int64] */;
  %872 = cast(%var_1944, dtype="bool") /* ty=Tensor[(640), bool] */;
  %873 = reshape(%870, newshape=[]) /* ty=float32 */;
  %874 = reshape(%871, newshape=[637, 2]) /* ty=Tensor[(637, 2), int64] */;
  %875 = reshape(%872, newshape=[20, 32]) /* ty=Tensor[(20, 32), bool] */;
  %876 = @func_1254(%873, %874, %875) /* ty=(Tensor[(6, 7, 14), float64], Tensor[(20, 32), bool], Tensor[(11, 2, 1), bool], Tensor[(8, 5, 16), bool], Tensor[(7, 13, 14), bool], Tensor[(637, 2), uint32], Tensor[(6, 7, 14), float64], Tensor[(6, 7, 14), float64]) */;
  %877 = power(%868, %869) /* ty=Tensor[(12, 4, 3), float32] */;
  %878 = %876.1;
  (%877, %878, %var_1942, meta[relay.Constant][53] /* ty=Tensor[(637, 2), int64] */, %var_1944)
}

def @func_7850(%var_7836: Tensor[(4, 3, 2), float32]) -> Tensor[(4, 3, 2), uint64] {
  %879 = @func_5893() /* ty=(Tensor[(4, 3, 2), float32],) */;
  %880 = %879.0;
  %881 = cast(%var_7836, dtype="uint64") /* ty=Tensor[(4, 3, 2), uint64] */;
  %882 = shape_of(%880, dtype="int32") /* ty=Tensor[(3), int32] */;
  %883 = cast(%880, dtype="uint64") /* ty=Tensor[(4, 3, 2), uint64] */;
  %884 = dyn.reshape(%881, %882, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  bitwise_and(%883, %884) /* ty=Tensor[(4, 3, 2), uint64] */
}

def @func_8343() -> (Tensor[(640), bool], Tensor[(640), bool]) {
  %885 = @func_6245() /* ty=(Tensor[(640), bool],) */;
  %886 = %885.0;
  %887 = @func_7573() /* ty=Tensor[(640), bool] */;
  (%886, %887)
}

def @func_6216(%var_6202: Tensor[(2, 1, 7), int16]) -> (Tensor[(2, 1, 7), bool],) {
  %888 = cast(meta[relay.Constant][54] /* ty=int16 */, dtype="bool") /* ty=bool */;
  %889 = cast(%var_6202, dtype="bool") /* ty=Tensor[(2, 1, 7), bool] */;
  %890 = less_equal(%888, %889) /* ty=Tensor[(2, 1, 7), bool] */;
  %891 = cast(meta[relay.Constant][54] /* ty=int16 */, dtype="bool") /* ty=bool */;
  %892 = cast(%890, dtype="bool") /* ty=Tensor[(2, 1, 7), bool] */;
  %893 = not_equal(%891, %892) /* ty=Tensor[(2, 1, 7), bool] */;
  (%893,)
}

def @func_5807(%var_5805: Tensor[(70), float64]) -> (Tensor[(2, 6, 5), float64], Tensor[(21), float32], float32, Tensor[(70), float64], Tensor[(640), bool]) {
  @func_5804(%var_5805) /* ty=(Tensor[(2, 6, 5), float64], Tensor[(21), float32], float32, Tensor[(70), float64], Tensor[(640), bool]) */
}

def @func_5804(%var_5774: Tensor[(70), float64]) -> (Tensor[(2, 6, 5), float64], Tensor[(21), float32], float32, Tensor[(70), float64], Tensor[(640), bool]) {
  %894 = @func_4802() /* ty=(Tensor[(2, 6, 5), float64],) */;
  %895 = @func_4838() /* ty=(Tensor[(2, 6, 5), float64], Tensor[(4, 5, 2), float32], Tensor[(21), float32], Tensor[(2, 20), float32], Tensor[(4, 3, 2), float32], Tensor[(24), float32]) */;
  %896 = %895.2;
  %897 = cast(%896, dtype="float32") /* ty=Tensor[(21), float32] */;
  %898 = acosh(%897) /* ty=Tensor[(21), float32] */;
  %899 = cast(%898, dtype="float32") /* ty=Tensor[(21), float32] */;
  %900 = cast(%var_5774, dtype="float64") /* ty=Tensor[(70), float64] */;
  %901 = cast(meta[relay.Constant][55] /* ty=Tensor[(640), bool] */, dtype="bool") /* ty=Tensor[(640), bool] */;
  %902 = cast(%var_5774, dtype="float64") /* ty=Tensor[(70), float64] */;
  %903 = reshape(%900, newshape=[10, 1, 7]) /* ty=Tensor[(10, 1, 7), float64] */;
  %904 = reshape(%901, newshape=[320, 2]) /* ty=Tensor[(320, 2), bool] */;
  %905 = reshape(%902, newshape=[10, 1, 7]) /* ty=Tensor[(10, 1, 7), float64] */;
  %906 = @func_2234(%903, %904, %905) /* ty=(float32, Tensor[(1274), int64], Tensor[(320, 2), bool], Tensor[(10, ?, 7), uint16], Tensor[(6, 7, 14), float64], Tensor[(6, 7, 14), float64]) */;
  %907 = %894.0;
  %908 = sqrt(%899) /* ty=Tensor[(21), float32] */;
  %909 = %906.0;
  (%907, %908, %909, %var_5774, meta[relay.Constant][55] /* ty=Tensor[(640), bool] */)
}

def @func_9392() -> (Tensor[(1, 15, 1), float64],) {
  @func_9390() /* ty=(Tensor[(1, 15, 1), float64],) */
}

def @func_5471() -> (Tensor[(640), float64], Tensor[(40), float32], Tensor[(960), float64]) {
  @func_5469() /* ty=(Tensor[(640), float64], Tensor[(40), float32], Tensor[(960), float64]) */
}

def @func_8371() -> (Tensor[(2, 6, 5), float64],) {
  %910 = @func_8117() /* ty=(Tensor[(640), bool], Tensor[(2, 6, 5), float64], Tensor[(640), bool], Tensor[(2, 6, 5), float64], Tensor[(640), uint16], Tensor[(9, 3, 13), float64], Tensor[(351), float64]) */;
  %911 = %910.3;
  (%911,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

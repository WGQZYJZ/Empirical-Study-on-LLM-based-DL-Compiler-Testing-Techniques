import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_283 = relay.var("var_283", dtype = "float64", shape = (6, 7, 14))#candidate|283|(6, 7, 14)|var|float64
var_284 = relay.var("var_284", dtype = "float64", shape = (6, 7, 14))#candidate|284|(6, 7, 14)|var|float64
bop_285 = relay.floor_mod(var_283.astype('float64'), relay.reshape(var_284.astype('float64'), relay.shape_of(var_283))) # shape=(6, 7, 14)
output = bop_285
output2 = bop_285
func_295 = relay.Function([var_283,var_284,], output)
mod['func_295'] = func_295
mod = relay.transform.InferType()(mod)
mutated_mod['func_295'] = func_295
mutated_mod = relay.transform.InferType()(mutated_mod)
func_295_call = mutated_mod.get_global_var('func_295')
var_297 = relay.var("var_297", dtype = "float64", shape = (6, 7, 14))#candidate|297|(6, 7, 14)|var|float64
var_298 = relay.var("var_298", dtype = "float64", shape = (6, 7, 14))#candidate|298|(6, 7, 14)|var|float64
call_296 = func_295_call(var_297,var_298,)
output = call_296
func_299 = relay.Function([var_297,var_298,], output)
mutated_mod['func_299'] = func_299
mutated_mod = relay.transform.InferType()(mutated_mod)
var_624 = relay.var("var_624", dtype = "bool", shape = (8, 5, 16))#candidate|624|(8, 5, 16)|var|bool
var_625 = relay.var("var_625", dtype = "bool", shape = (8, 5, 16))#candidate|625|(8, 5, 16)|var|bool
bop_626 = relay.logical_or(var_624.astype('bool'), relay.reshape(var_625.astype('bool'), relay.shape_of(var_624))) # shape=(8, 5, 16)
func_295_call = mod.get_global_var('func_295')
func_299_call = mutated_mod.get_global_var('func_299')
const_630 = relay.const([-1.933791,8.797357,-6.491534,-5.367906,-1.531011,4.158486,3.211850,8.044897,8.695235,-7.621709,-8.442805,6.988114,1.212385,1.136445,-8.302511,6.110304,0.809142,9.946535,-3.973799,6.865191,-8.913471,8.073088,4.533150,7.344602,-7.944583,-3.321446,-4.679602,-6.112684,-5.677651,-4.652204,4.912494,8.173749,-8.751035,-1.114496,4.784562,3.208510,-5.333197,9.540222,-3.459471,-5.240132,0.796985,5.341284,-0.593578,2.533869,-0.277596,8.678988,-8.798806,-1.416866,3.139002,5.712378,9.174737,-6.257899,-3.484573,4.937880,1.893110,0.906186,8.083432,-5.581972,-1.909790,-6.910265,-2.886619,-9.459373,7.363521,4.157867,4.860710,9.777650,-7.365995,-1.396227,1.210088,6.537238,0.373231,5.046544,1.466297,-9.519875,-5.456764,-9.111326,-0.279277,4.667630,-2.059819,-0.605488,8.626558,-4.713160,-2.589489,-2.608407,-0.901771,-5.269805,7.594834,-8.811106,8.869131,-6.546912,-9.956558,-2.923460,-2.239642,-3.413515,5.936779,-6.104717,-7.733503,-2.226007,-6.846146,-2.290057,-2.513680,-4.367438,4.093643,-2.058319,-1.234536,-6.843411,-7.507275,7.221063,-6.733676,6.258244,2.862691,-9.100097,-6.988282,-3.592892,-9.171932,4.295984,0.438638,-2.597374,2.661609,8.302967,5.843398,-6.502952,7.471471,-7.728407,9.627818,9.961147,-7.344822,-4.546294,-4.914922,4.416195,2.901805,9.701373,-4.460715,3.272394,-7.751150,9.300455,-0.997131,0.829302,-1.768147,8.054349,2.746352,-1.552877,7.460045,-8.868195,0.107302,-8.250819,1.565825,5.962976,8.559778,6.954085,3.996402,0.981871,-9.966059,9.759240,4.215824,-1.309603,5.461381,-9.076425,6.018696,-9.189554,-4.887751,3.637284,-8.860807,0.130882,-5.050574,-2.558360,-8.044415,2.930052,-0.273071,0.129704,-6.546799,2.671204,-2.696103,-2.478304,-2.499014,-8.645879,5.033275,-7.180207,-2.067067,7.508407,-4.745562,-6.804758,1.347201,8.587900,9.467936,2.758251,-2.078754,2.416018,-7.844634,-7.374677,8.103876,4.730178,9.573003,-1.568163,-6.078494,-6.084112,5.027285,0.287120,-8.206697,7.787717,2.613433,2.129715,9.219858,-9.203071,-9.357411,-7.813745,0.628919,-6.393811,-3.707174,-3.469912,-4.896716,6.272517,4.629549,0.752795,-9.812188,4.687635,9.032819,7.623358,-5.898006,7.892314,6.477604,-2.848908,9.810789,9.066052,6.845215,-5.227925,-0.207558,-7.406271,-9.266345,0.644897,-5.996226,-1.909362,-4.267963,-5.420170,7.087429,8.316855,3.924245,0.917740,3.413968,-4.077439,-3.256330,-5.427299,2.713918,0.263167,-7.952927,-6.531358,7.611520,6.932810,-4.791935,-0.906411,4.633366,-3.938747,3.109831,2.956846,-5.277789,-8.815438,1.693537,8.062875,0.426718,-1.886403,-7.045630,-3.469447,-9.225677,3.891088,8.889997,-7.899840,3.282332,5.353129,8.948413,5.935512,0.312696,-8.703627,5.321292,3.798949,-4.306007,-4.179675,-9.645861,4.088536,-4.174659,9.438741,-5.325221,-2.918125,8.629236,0.976159,6.948709,-1.479130,-1.556223,6.568441,0.202104,-4.802477,-3.751115,-5.546958,2.980235,6.975893,-8.975577,3.944639,1.960062,-9.737000,5.643359,1.130441,9.150942,4.200752,-1.063119,4.825338,5.340550,-6.616230,-9.827426,-1.751132,-4.351212,-8.605432,2.739615,3.202150,0.459154,5.420720,1.415109,2.012403,-3.407495,-5.733583,2.471641,-8.122376,4.387825,2.229338,3.042772,7.372132,9.218173,-5.487429,4.891524,6.910519,-6.449987,-7.352496,1.571035,-1.220620,-8.696373,6.107339,-4.326434,9.061715,-7.559788,7.527974,-0.377465,3.886643,-6.196724,-2.041741,3.406604,5.423949,-6.851263,-5.744928,1.160327,-5.034954,9.622528,-8.611550,8.699268,-9.341777,-5.464354,-3.650559,-1.013569,-8.269265,4.949146,8.751561,0.053435,-7.645232,-3.518661,8.090268,3.804153,5.332491,6.915735,-4.184074,3.173035,-7.459409,6.715279,2.067267,-8.521351,-5.759139,-7.076124,9.413350,-0.683105,-0.354468,-6.765792,1.229928,3.841161,-1.807776,-0.459138,8.678731,7.388226,6.628582,-9.839115,8.755361,-6.796814,6.825798,7.274149,-0.406458,-6.310530,-4.927139,1.412207,3.174698,-2.152138,9.137309,-1.984958,4.434043,9.041138,-7.045188,4.136444,-7.932028,-4.345894,-3.102647,-1.775528,8.451137,3.461098,9.499970,1.765078,6.300433,0.742176,-8.041897,-0.786721,7.607478,-8.135495,3.763099,4.947349,-0.033025,0.294809,1.333963,8.499080,0.513871,-5.512258,0.337292,0.342429,-1.860361,-0.778785,-5.404605,-8.657938,-6.441315,-2.422041,-4.838917,9.794291,6.293981,9.207073,0.756197,7.068751,-0.846708,7.764669,-1.635426,-5.509069,9.478129,8.180758,0.835042,-6.506519,4.173057,-9.683211,-0.410808,-1.566123,-6.760739,3.110356,-8.064276,-3.537384,-1.616230,9.048941,-4.105614,4.918621,-3.934942,-9.481065,-2.867057,5.780982,4.974131,2.079445,2.344253,0.893157,-1.926231,1.567341,1.434101,2.275363,-5.377953,-0.222427,-7.814294,-8.037529,9.669571,0.529874,3.177257,3.298533,-2.834405,5.305223,-8.613414,6.996306,9.132307,5.354698,9.223903,-5.114001,4.665568,-3.560239,9.793143,-0.129797,4.716408,-0.184879,-3.820303,3.521023,0.053474,9.094941,1.299573,-6.895919,7.387780,-5.614197,-4.149797,-3.566685,6.818815,0.097387,-0.572115,9.280738,6.825445,-0.500233,4.426291,-4.641135,-0.370745,-9.181402,3.829108,-6.725214,4.017270,5.092588,-1.959103,5.422892,-3.975327,-5.545987,3.622864,9.742417,1.445775,-7.949633,3.291550,3.915263,-6.935965,-9.571944,-1.999782,4.134453,0.796264,4.103063,-0.415196,1.073634,-2.948151,9.127098,-4.808337,-5.953145,4.907851,-1.414498,-8.441006,-2.574310,-9.961580,-4.852614,-5.938138,-6.931066,-3.818994,2.840287,-5.386546,2.460598,-0.824201,-8.835484,8.915805,-4.935713,-7.811648,-7.597327,7.054949,4.028489,3.494850,-6.258716,9.989332,4.514752,7.301863,2.909248,3.902905,-5.781166,3.702053,-2.664882,1.494767,6.062996,-8.696984,-7.356055,9.006826,5.473546,4.121576,-2.961493,-3.993512,-2.894354,-7.842369,2.138895,0.042495,0.375279,4.218538,2.186606,-3.461018,-3.907901,-1.641181,-5.774688,-9.986740], dtype = "float64")#candidate|630|(588,)|const|float64
call_629 = func_295_call(relay.reshape(const_630.astype('float64'), [6, 7, 14]), relay.reshape(const_630.astype('float64'), [6, 7, 14]), )
call_631 = func_295_call(relay.reshape(const_630.astype('float64'), [6, 7, 14]), relay.reshape(const_630.astype('float64'), [6, 7, 14]), )
output = relay.Tuple([bop_626,call_629,const_630,])
output2 = relay.Tuple([bop_626,call_631,const_630,])
func_638 = relay.Function([var_624,var_625,], output)
mod['func_638'] = func_638
mod = relay.transform.InferType()(mod)
mutated_mod['func_638'] = func_638
mutated_mod = relay.transform.InferType()(mutated_mod)
func_638_call = mutated_mod.get_global_var('func_638')
var_640 = relay.var("var_640", dtype = "bool", shape = (8, 5, 16))#candidate|640|(8, 5, 16)|var|bool
var_641 = relay.var("var_641", dtype = "bool", shape = (8, 5, 16))#candidate|641|(8, 5, 16)|var|bool
call_639 = func_638_call(var_640,var_641,)
output = call_639
func_642 = relay.Function([var_640,var_641,], output)
mutated_mod['func_642'] = func_642
mutated_mod = relay.transform.InferType()(mutated_mod)
var_953 = relay.var("var_953", dtype = "int64", shape = ())#candidate|953|()|var|int64
var_954 = relay.var("var_954", dtype = "int64", shape = (7, 13, 14))#candidate|954|(7, 13, 14)|var|int64
bop_955 = relay.not_equal(var_953.astype('bool'), var_954.astype('bool')) # shape=(7, 13, 14)
func_638_call = mod.get_global_var('func_638')
func_642_call = mutated_mod.get_global_var('func_642')
var_984 = relay.var("var_984", dtype = "bool", shape = (640,))#candidate|984|(640,)|var|bool
call_983 = relay.TupleGetItem(func_638_call(relay.reshape(var_984.astype('bool'), [8, 5, 16]), relay.reshape(var_984.astype('bool'), [8, 5, 16]), ), 1)
call_985 = relay.TupleGetItem(func_642_call(relay.reshape(var_984.astype('bool'), [8, 5, 16]), relay.reshape(var_984.astype('bool'), [8, 5, 16]), ), 1)
output = relay.Tuple([bop_955,call_983,var_984,])
output2 = relay.Tuple([bop_955,call_985,var_984,])
func_1018 = relay.Function([var_953,var_954,var_984,], output)
mod['func_1018'] = func_1018
mod = relay.transform.InferType()(mod)
var_1019 = relay.var("var_1019", dtype = "int64", shape = ())#candidate|1019|()|var|int64
var_1020 = relay.var("var_1020", dtype = "int64", shape = (7, 13, 14))#candidate|1020|(7, 13, 14)|var|int64
var_1021 = relay.var("var_1021", dtype = "bool", shape = (640,))#candidate|1021|(640,)|var|bool
output = func_1018(var_1019,var_1020,var_1021,)
func_1022 = relay.Function([var_1019,var_1020,var_1021,], output)
mutated_mod['func_1022'] = func_1022
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1096 = relay.var("var_1096", dtype = "float32", shape = (15, 4, 2))#candidate|1096|(15, 4, 2)|var|float32
const_1097 = relay.const([[[-2.583368,-8.349769],[-9.828699,-8.711019],[-2.511432,7.587410],[3.146359,5.744798]],[[-3.011623,-6.811436],[7.936591,-7.752232],[4.296520,-2.852002],[-2.279794,-3.939887]],[[8.531794,7.987284],[-0.963931,-3.467787],[4.121340,3.759898],[1.957778,-9.509845]],[[-9.125366,9.279073],[-3.597266,7.220940],[-3.085662,7.697046],[8.142868,3.783310]],[[9.315700,-5.093559],[6.051100,-5.153546],[-4.703060,7.623426],[-1.757323,-7.990914]],[[-2.888802,-5.378503],[9.542953,6.015732],[-7.948338,2.134550],[-6.918096,-8.803284]],[[0.794551,7.012161],[9.063384,6.079078],[5.391892,-6.270299],[-0.640895,-1.322293]],[[-5.134487,9.565582],[5.593579,0.052803],[-1.289047,3.154852],[-1.673080,-8.021355]],[[0.940801,-7.354215],[3.926682,-4.905644],[-2.122636,-5.202063],[1.353340,1.271150]],[[-0.672353,-4.273854],[9.205074,9.642129],[-2.399952,-5.539505],[-8.006183,-8.065814]],[[6.397931,9.810104],[-7.544145,1.161052],[-5.284169,-1.278600],[0.415744,6.937551]],[[-6.049632,7.969051],[4.077854,1.840936],[3.999833,-1.140441],[-1.973427,4.361833]],[[9.066413,-4.846081],[0.980660,-3.014850],[-8.667460,7.581783],[8.138383,7.075155]],[[-5.270952,2.092112],[4.614611,4.455167],[9.819944,-0.426140],[-7.486567,1.714029]],[[-8.072239,-3.656775],[5.809917,1.075082],[4.236277,5.631959],[3.991813,-8.035833]]], dtype = "float32")#candidate|1097|(15, 4, 2)|const|float32
bop_1098 = relay.equal(var_1096.astype('bool'), relay.reshape(const_1097.astype('bool'), relay.shape_of(var_1096))) # shape=(15, 4, 2)
output = relay.Tuple([bop_1098,])
output2 = relay.Tuple([bop_1098,])
func_1105 = relay.Function([var_1096,], output)
mod['func_1105'] = func_1105
mod = relay.transform.InferType()(mod)
var_1106 = relay.var("var_1106", dtype = "float32", shape = (15, 4, 2))#candidate|1106|(15, 4, 2)|var|float32
output = func_1105(var_1106)
func_1107 = relay.Function([var_1106], output)
mutated_mod['func_1107'] = func_1107
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1174 = relay.var("var_1174", dtype = "float32", shape = ())#candidate|1174|()|var|float32
const_1175 = relay.const([[[2.879565],[-3.141362]],[[8.777431],[0.228183]],[[-1.574125],[7.601978]],[[-7.514331],[3.627002]],[[2.317937],[9.580381]],[[-0.990204],[-7.458585]],[[-1.139769],[-4.118397]],[[-4.393336],[2.660454]],[[0.784153],[8.189481]],[[0.113795],[7.142648]],[[-6.818965],[-3.188430]]], dtype = "float32")#candidate|1175|(11, 2, 1)|const|float32
bop_1176 = relay.mod(var_1174.astype('float32'), const_1175.astype('float32')) # shape=(11, 2, 1)
func_1018_call = mod.get_global_var('func_1018')
func_1022_call = mutated_mod.get_global_var('func_1022')
var_1200 = relay.var("var_1200", dtype = "int64", shape = (637, 2))#candidate|1200|(637, 2)|var|int64
var_1201 = relay.var("var_1201", dtype = "bool", shape = (20, 32))#candidate|1201|(20, 32)|var|bool
call_1199 = relay.TupleGetItem(func_1018_call(relay.reshape(var_1174.astype('int64'), []), relay.reshape(var_1200.astype('int64'), [7, 13, 14]), relay.reshape(var_1201.astype('bool'), [640,]), ), 1)
call_1202 = relay.TupleGetItem(func_1022_call(relay.reshape(var_1174.astype('int64'), []), relay.reshape(var_1200.astype('int64'), [7, 13, 14]), relay.reshape(var_1201.astype('bool'), [640,]), ), 1)
bop_1212 = relay.left_shift(var_1174.astype('int32'), bop_1176.astype('int32')) # shape=(11, 2, 1)
bop_1215 = relay.not_equal(var_1174.astype('bool'), bop_1212.astype('bool')) # shape=(11, 2, 1)
func_638_call = mod.get_global_var('func_638')
func_642_call = mutated_mod.get_global_var('func_642')
call_1223 = relay.TupleGetItem(func_638_call(relay.reshape(var_1201.astype('bool'), [8, 5, 16]), relay.reshape(var_1201.astype('bool'), [8, 5, 16]), ), 0)
call_1224 = relay.TupleGetItem(func_642_call(relay.reshape(var_1201.astype('bool'), [8, 5, 16]), relay.reshape(var_1201.astype('bool'), [8, 5, 16]), ), 0)
uop_1225 = relay.erf(var_1200.astype('float32')) # shape=(637, 2)
func_1018_call = mod.get_global_var('func_1018')
func_1022_call = mutated_mod.get_global_var('func_1022')
call_1233 = relay.TupleGetItem(func_1018_call(relay.reshape(var_1174.astype('int64'), []), relay.reshape(uop_1225.astype('int64'), [7, 13, 14]), relay.reshape(call_1223.astype('bool'), [640,]), ), 0)
call_1234 = relay.TupleGetItem(func_1022_call(relay.reshape(var_1174.astype('int64'), []), relay.reshape(uop_1225.astype('int64'), [7, 13, 14]), relay.reshape(call_1223.astype('bool'), [640,]), ), 0)
bop_1238 = relay.maximum(uop_1225.astype('uint32'), var_1174.astype('uint32')) # shape=(637, 2)
func_295_call = mod.get_global_var('func_295')
func_299_call = mutated_mod.get_global_var('func_299')
call_1241 = func_295_call(relay.reshape(call_1199.astype('float64'), [6, 7, 14]), relay.reshape(call_1199.astype('float64'), [6, 7, 14]), )
call_1242 = func_295_call(relay.reshape(call_1199.astype('float64'), [6, 7, 14]), relay.reshape(call_1199.astype('float64'), [6, 7, 14]), )
func_295_call = mod.get_global_var('func_295')
func_299_call = mutated_mod.get_global_var('func_299')
call_1243 = func_295_call(relay.reshape(call_1199.astype('float64'), [6, 7, 14]), relay.reshape(call_1199.astype('float64'), [6, 7, 14]), )
call_1244 = func_295_call(relay.reshape(call_1199.astype('float64'), [6, 7, 14]), relay.reshape(call_1199.astype('float64'), [6, 7, 14]), )
output = relay.Tuple([call_1199,var_1201,bop_1215,call_1223,call_1233,bop_1238,call_1241,call_1243,])
output2 = relay.Tuple([call_1202,var_1201,bop_1215,call_1224,call_1234,bop_1238,call_1242,call_1244,])
func_1254 = relay.Function([var_1174,var_1200,var_1201,], output)
mod['func_1254'] = func_1254
mod = relay.transform.InferType()(mod)
var_1255 = relay.var("var_1255", dtype = "float32", shape = ())#candidate|1255|()|var|float32
var_1256 = relay.var("var_1256", dtype = "int64", shape = (637, 2))#candidate|1256|(637, 2)|var|int64
var_1257 = relay.var("var_1257", dtype = "bool", shape = (20, 32))#candidate|1257|(20, 32)|var|bool
output = func_1254(var_1255,var_1256,var_1257,)
func_1258 = relay.Function([var_1255,var_1256,var_1257,], output)
mutated_mod['func_1258'] = func_1258
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1266 = relay.var("var_1266", dtype = "float64", shape = (6, 12, 6))#candidate|1266|(6, 12, 6)|var|float64
uop_1267 = relay.sin(var_1266.astype('float64')) # shape=(6, 12, 6)
output = uop_1267
output2 = uop_1267
func_1274 = relay.Function([var_1266,], output)
mod['func_1274'] = func_1274
mod = relay.transform.InferType()(mod)
var_1275 = relay.var("var_1275", dtype = "float64", shape = (6, 12, 6))#candidate|1275|(6, 12, 6)|var|float64
output = func_1274(var_1275)
func_1276 = relay.Function([var_1275], output)
mutated_mod['func_1276'] = func_1276
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1444 = relay.var("var_1444", dtype = "float32", shape = (4, 5, 2))#candidate|1444|(4, 5, 2)|var|float32
uop_1445 = relay.log10(var_1444.astype('float32')) # shape=(4, 5, 2)
output = relay.Tuple([uop_1445,])
output2 = relay.Tuple([uop_1445,])
func_1461 = relay.Function([var_1444,], output)
mod['func_1461'] = func_1461
mod = relay.transform.InferType()(mod)
mutated_mod['func_1461'] = func_1461
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1462 = relay.var("var_1462", dtype = "float32", shape = (4, 5, 2))#candidate|1462|(4, 5, 2)|var|float32
func_1461_call = mutated_mod.get_global_var('func_1461')
call_1463 = func_1461_call(var_1462)
output = call_1463
func_1464 = relay.Function([var_1462], output)
mutated_mod['func_1464'] = func_1464
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1869 = relay.var("var_1869", dtype = "float32", shape = (3, 1, 7))#candidate|1869|(3, 1, 7)|var|float32
var_1870 = relay.var("var_1870", dtype = "float32", shape = (3, 1, 7))#candidate|1870|(3, 1, 7)|var|float32
bop_1871 = relay.floor_mod(var_1869.astype('float32'), relay.reshape(var_1870.astype('float32'), relay.shape_of(var_1869))) # shape=(3, 1, 7)
func_1461_call = mod.get_global_var('func_1461')
func_1464_call = mutated_mod.get_global_var('func_1464')
var_1888 = relay.var("var_1888", dtype = "float32", shape = (40,))#candidate|1888|(40,)|var|float32
call_1887 = relay.TupleGetItem(func_1461_call(relay.reshape(var_1888.astype('float32'), [4, 5, 2])), 0)
call_1889 = relay.TupleGetItem(func_1464_call(relay.reshape(var_1888.astype('float32'), [4, 5, 2])), 0)
bop_1893 = relay.mod(var_1869.astype('float64'), relay.reshape(bop_1871.astype('float64'), relay.shape_of(var_1869))) # shape=(3, 1, 7)
func_1274_call = mod.get_global_var('func_1274')
func_1276_call = mutated_mod.get_global_var('func_1276')
const_1897 = relay.const([[-5.872272,-7.483134,-2.274534,9.530878],[-4.442673,9.180246,5.159353,-0.661977],[-0.853883,1.475309,8.548526,-5.091947],[-7.842729,-4.239109,5.267713,8.499297],[-1.440574,8.935401,8.724425,2.654981],[-0.504753,-0.622605,8.862303,-0.018023],[3.743825,2.920054,3.564929,-0.075856],[-9.119665,5.960000,5.797032,4.664889],[-3.088950,-8.704793,2.341223,0.404021],[-5.469272,7.623289,-7.325712,1.397555],[5.863988,-2.572559,-9.910741,-2.603389],[-5.751314,9.270816,9.628315,6.568906],[6.257355,8.373667,-2.714457,-0.212439],[-7.795964,-6.199968,-4.964360,-5.352327],[7.831682,-0.523265,0.496905,-9.931525],[-4.385227,4.708836,-7.404055,1.935873],[8.190358,-4.826466,-3.559903,-2.030027],[-7.483469,3.073363,4.870279,8.224020],[8.841367,-2.592401,-3.644142,-0.463034],[-9.561656,-5.661771,-4.764656,7.825738],[-6.917257,4.561013,-0.962694,1.435448],[1.532313,7.959194,-0.604540,9.928814],[4.403231,-1.620796,-3.655680,-7.342154],[9.652022,8.101179,5.625477,0.673422],[-7.178819,-1.619896,-5.701259,8.916135],[-6.928624,-4.203488,6.479806,-7.515865],[-0.273832,2.573092,4.110537,5.735728],[-3.838652,6.871351,8.987808,-1.064304],[3.828094,0.705905,-1.762017,9.195253],[8.518716,-1.997248,2.394746,7.023467],[0.056651,-7.313933,7.054443,8.132721],[-5.785786,8.066977,5.011942,0.132010],[-1.373989,6.624385,-5.909304,3.059224],[-7.963423,-6.803943,4.526262,2.425453],[-5.211839,5.788899,-0.756650,-1.571063],[0.365282,-4.168488,1.249598,-5.842235],[-8.956689,-9.688286,-1.429612,2.811764],[3.396260,5.644697,1.842848,-8.124585],[-0.958321,6.232165,-4.796688,-3.427790],[0.427789,2.097488,-5.908703,-8.635301],[2.329376,0.577620,3.826501,-4.765414],[4.586004,3.092610,8.630790,-9.059835],[1.329604,-7.928780,5.134340,-9.860509],[1.540047,3.695757,0.415904,5.202918],[7.249955,-1.428665,5.857068,2.143290],[-1.100838,2.393538,-4.290766,-3.700718],[-4.729385,-1.184713,0.448570,-5.053995],[-4.542181,-6.883861,-2.487030,-0.691109],[1.978396,-1.845041,9.892404,3.674500],[-7.801512,2.335016,-6.272447,-2.980013],[-0.083971,9.334654,4.736502,8.715841],[4.271450,5.745207,5.802079,8.454605],[4.609553,0.400647,-5.881548,-7.948287],[3.538686,1.736038,8.603340,-3.329469],[-6.205706,9.166909,-4.886415,8.496847],[2.603515,1.134237,-6.662654,6.388799],[-0.361666,3.674746,3.363305,8.123504],[2.169231,-0.158499,-4.873349,7.395303],[-7.453788,0.743129,4.250510,9.022404],[6.112813,2.695901,0.708734,8.243162],[0.022065,-6.063490,1.127206,8.071013],[4.771704,9.516107,3.461307,-3.814983],[-4.582645,-6.961254,9.965458,-3.455992],[-5.196312,-2.191533,-6.711292,4.055694],[-4.725362,-6.641368,1.532615,5.541530],[6.452990,-8.186326,7.577248,5.887656],[-3.364043,1.793252,4.874905,8.701037],[8.705182,5.986568,6.139601,5.640091],[7.325076,4.828037,6.117695,9.878393],[-1.877792,1.234719,-7.113204,3.565867],[-7.961262,-0.246550,-3.309661,5.079060],[-2.212790,5.450716,0.683193,6.098988],[-0.912379,0.983561,2.093936,-0.295704],[2.235046,9.885722,-8.622339,-6.672346],[5.278050,-1.103307,-4.686599,7.596443],[7.857623,5.755491,1.292938,7.821154],[7.810132,-3.197658,8.381909,-7.229414],[-0.413019,-8.280055,-6.330586,-6.221196],[-0.433090,8.610415,-7.572256,5.880646],[2.212469,4.381709,2.752754,-5.603496],[1.252676,-9.908324,-8.044467,2.211172],[-0.050316,0.002612,5.511616,5.085099],[0.616664,-2.998605,3.410813,2.682159],[-2.613376,-4.902814,1.744497,3.595288],[0.598395,6.869394,-1.467872,-2.733397],[-3.589311,-2.908136,3.810301,4.169249],[-6.559463,7.262747,3.045138,0.053749],[3.931265,-7.634561,-7.785502,8.078204],[3.945181,7.779336,-9.275779,-7.400294],[-7.037289,-7.550880,-9.585792,-5.375881],[5.097387,3.131760,-3.195838,9.496465],[-9.215938,-0.204524,7.953853,-5.177885],[-6.975235,-3.044521,7.495761,2.421897],[7.464481,-2.717250,-6.109911,1.520708],[-8.235667,-8.911546,8.263328,-0.241271],[6.187721,-6.985955,-7.550641,3.341775],[0.928480,9.193585,6.322593,-8.041741],[-7.842511,-4.068180,9.346046,9.801109],[-6.802848,-7.858142,3.781116,9.191246],[5.719573,1.106773,-6.835567,-3.866112],[-0.812802,8.994585,-3.921344,2.224493],[-6.235296,2.067730,3.196841,8.174914],[1.274822,2.101546,-3.949956,0.672616],[-8.643259,6.665860,-4.371691,-1.024973],[-8.768487,-7.276991,7.190369,9.109133],[6.452931,5.692927,9.016251,3.141992],[-6.804571,7.160146,6.238901,-7.124892],[1.664480,6.497816,5.247016,2.033855]], dtype = "float64")#candidate|1897|(108, 4)|const|float64
call_1896 = func_1274_call(relay.reshape(const_1897.astype('float64'), [6, 12, 6]))
call_1898 = func_1274_call(relay.reshape(const_1897.astype('float64'), [6, 12, 6]))
func_1461_call = mod.get_global_var('func_1461')
func_1464_call = mutated_mod.get_global_var('func_1464')
call_1901 = relay.TupleGetItem(func_1461_call(relay.reshape(var_1888.astype('float32'), [4, 5, 2])), 0)
call_1902 = relay.TupleGetItem(func_1464_call(relay.reshape(var_1888.astype('float32'), [4, 5, 2])), 0)
output = relay.Tuple([call_1887,var_1888,bop_1893,call_1896,const_1897,call_1901,])
output2 = relay.Tuple([call_1889,var_1888,bop_1893,call_1898,const_1897,call_1902,])
func_1903 = relay.Function([var_1869,var_1870,var_1888,], output)
mod['func_1903'] = func_1903
mod = relay.transform.InferType()(mod)
var_1904 = relay.var("var_1904", dtype = "float32", shape = (3, 1, 7))#candidate|1904|(3, 1, 7)|var|float32
var_1905 = relay.var("var_1905", dtype = "float32", shape = (3, 1, 7))#candidate|1905|(3, 1, 7)|var|float32
var_1906 = relay.var("var_1906", dtype = "float32", shape = (40,))#candidate|1906|(40,)|var|float32
output = func_1903(var_1904,var_1905,var_1906,)
func_1907 = relay.Function([var_1904,var_1905,var_1906,], output)
mutated_mod['func_1907'] = func_1907
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1936 = relay.var("var_1936", dtype = "float32", shape = (12, 1, 3))#candidate|1936|(12, 1, 3)|var|float32
var_1937 = relay.var("var_1937", dtype = "float32", shape = (12, 4, 3))#candidate|1937|(12, 4, 3)|var|float32
bop_1938 = relay.power(var_1936.astype('float32'), var_1937.astype('float32')) # shape=(12, 4, 3)
func_1254_call = mod.get_global_var('func_1254')
func_1258_call = mutated_mod.get_global_var('func_1258')
var_1942 = relay.var("var_1942", dtype = "float32", shape = ())#candidate|1942|()|var|float32
const_1943 = relay.const([[5,-9],[-6,-9],[3,-8],[8,2],[8,-9],[-6,-10],[-7,7],[6,-8],[-7,-10],[-1,5],[4,4],[3,-1],[-9,4],[1,-8],[-2,4],[10,-1],[-2,-2],[-9,-8],[2,-4],[-9,6],[5,-3],[-5,-7],[-8,8],[-4,5],[-9,8],[5,2],[9,2],[1,5],[-9,4],[-9,-2],[-3,-5],[9,-4],[8,-8],[-7,10],[-4,-3],[-2,3],[-7,5],[10,-3],[8,-2],[7,-5],[8,-7],[2,1],[10,5],[2,-5],[-6,5],[10,1],[-5,2],[8,6],[-1,-3],[10,10],[-7,6],[-2,-8],[-1,-6],[-2,-8],[-1,10],[10,-5],[1,-3],[-1,-3],[-8,10],[9,-10],[-3,-3],[5,-2],[4,6],[-10,-4],[-1,3],[9,-2],[6,9],[-10,-8],[-7,-7],[-2,7],[-5,-1],[-3,7],[1,-6],[8,9],[10,1],[-9,4],[-10,10],[-4,-10],[-1,-5],[6,-8],[3,-7],[-4,7],[6,-5],[-7,-3],[-1,-10],[10,-3],[3,-5],[9,-5],[-1,-5],[1,-10],[-10,-4],[-5,-5],[-9,-1],[-7,2],[-4,8],[-4,6],[-7,2],[-3,-7],[-9,-3],[9,1],[4,-1],[-8,-10],[1,6],[1,5],[-6,-8],[-1,-5],[7,7],[7,5],[1,4],[-8,2],[4,-7],[3,-5],[-8,10],[-9,2],[-1,3],[8,-1],[2,8],[2,9],[1,3],[5,5],[-2,-5],[-7,8],[-7,-8],[-6,3],[4,8],[-3,-4],[-1,8],[-4,3],[5,-6],[6,-2],[4,7],[-9,-10],[2,-1],[-4,-7],[1,-3],[8,10],[6,8],[9,-5],[10,-2],[2,1],[9,9],[8,-8],[-3,3],[-9,-7],[-8,-6],[-4,9],[5,-2],[5,-3],[5,8],[9,-2],[7,4],[-8,-2],[5,-3],[-1,3],[-4,-6],[-8,3],[-2,9],[-7,4],[6,-1],[-8,-1],[2,-3],[4,10],[-3,-9],[5,8],[-5,7],[-10,7],[8,2],[-2,10],[-7,-7],[-9,1],[1,-4],[-5,4],[-9,-3],[3,-7],[-1,-8],[4,-7],[10,-1],[2,2],[-3,-2],[9,10],[8,-9],[7,-3],[-6,1],[8,10],[5,9],[-3,-3],[-7,7],[-10,4],[-4,8],[-8,10],[-1,-6],[3,10],[-7,-5],[10,-9],[2,1],[-6,-1],[-7,-4],[1,10],[6,-4],[-4,-5],[3,-3],[10,8],[-9,6],[-5,10],[8,-8],[7,-5],[-6,2],[-3,-10],[8,9],[-7,-10],[7,4],[2,3],[-5,3],[1,-6],[8,8],[4,-8],[-1,-10],[6,-5],[-5,7],[4,-1],[1,2],[1,10],[4,1],[-3,-2],[-9,-5],[2,8],[-2,5],[4,-6],[10,-8],[5,-2],[-3,-9],[-5,-5],[3,9],[-3,-3],[3,10],[3,-6],[-3,6],[2,7],[3,6],[-8,2],[2,-7],[10,7],[-7,3],[-2,-5],[-3,2],[-8,-1],[-4,-1],[-7,-4],[-4,-3],[8,-8],[-8,6],[-7,-6],[1,6],[-5,-2],[-5,3],[-4,10],[-7,-2],[4,1],[8,3],[-6,6],[4,-7],[-8,-2],[-10,4],[10,-1],[8,2],[-1,5],[10,-5],[-6,4],[-2,3],[-9,-10],[7,-2],[9,-6],[9,8],[-2,-1],[10,9],[-8,7],[3,7],[-4,1],[-2,-8],[10,-5],[-1,9],[7,-6],[-6,4],[7,4],[-3,1],[10,7],[-9,-3],[1,6],[-3,7],[-6,9],[-7,6],[4,1],[-2,5],[6,-6],[-10,-2],[8,-5],[6,3],[5,4],[4,-6],[-1,-8],[-1,5],[-6,2],[9,-9],[5,-10],[-7,1],[-2,6],[4,-6],[10,7],[6,1],[-2,-2],[-9,8],[4,-5],[10,5],[-2,9],[2,10],[-7,5],[9,-9],[-9,4],[1,-3],[9,-8],[-7,-2],[-3,-6],[6,8],[5,9],[9,4],[9,7],[-9,7],[-10,10],[7,8],[-3,-6],[10,-2],[-9,-8],[-1,6],[2,9],[6,3],[10,-5],[5,8],[8,7],[-10,-5],[-2,-7],[7,2],[-9,-3],[9,-2],[9,-8],[3,-2],[-2,10],[-10,10],[8,-4],[3,6],[-8,-6],[5,8],[7,6],[-3,-10],[-9,-6],[-5,-8],[6,-10],[9,10],[5,4],[3,-1],[1,-10],[-8,-1],[1,6],[6,9],[-8,-8],[2,-2],[-3,6],[2,8],[-7,-10],[-9,3],[-8,5],[3,-5],[-2,-5],[2,-3],[8,3],[-9,5],[-1,2],[-6,1],[-4,-10],[-2,-5],[8,1],[1,-5],[3,1],[10,7],[-1,-1],[-4,10],[9,-2],[-5,-5],[10,2],[-10,-10],[-6,-5],[7,8],[-1,-4],[1,10],[4,-3],[10,1],[-4,1],[4,6],[-2,-6],[5,6],[3,8],[2,6],[-9,-4],[-8,8],[9,-7],[1,-3],[-6,-10],[3,4],[4,1],[-1,3],[-7,10],[-1,9],[-8,-3],[2,1],[-4,-7],[-9,-6],[5,10],[-6,8],[1,1],[6,3],[8,4],[1,8],[-6,-4],[-7,7],[-8,10],[3,9],[5,7],[-4,5],[6,2],[5,-3],[-4,-8],[-7,-3],[-6,-1],[10,-3],[2,6],[10,-7],[-3,6],[-8,2],[5,-1],[7,-9],[8,3],[2,4],[-6,1],[4,-4],[7,-8],[8,7],[2,-10],[-3,-3],[3,-2],[2,10],[-6,5],[8,-10],[1,2],[-10,7],[-6,-2],[-7,1],[-10,2],[8,-9],[-4,-8],[-6,-9],[-8,8],[-1,-1],[-9,-9],[9,6],[-2,-1],[-2,-7],[-7,-9],[5,9],[1,3],[-10,3],[9,-8],[2,8],[-4,-8],[-9,3],[2,-10],[9,2],[7,-6],[-4,-10],[10,1],[-4,10],[8,-4],[-3,-5],[-6,5],[6,-7],[-5,-2],[1,1],[-2,5],[-3,-3],[1,10],[-4,-2],[-9,8],[-4,-8],[8,-9],[-4,10],[5,3],[10,-9],[-5,6],[3,10],[5,-9],[2,10],[-9,-1],[-9,2],[-8,-2],[-1,9],[1,3],[-5,7],[-10,-1],[-6,-2],[-9,-10],[4,2],[7,8],[8,-3],[-3,2],[1,8],[-10,4],[9,10],[7,-6],[-4,-10],[-4,-10],[-6,-1],[3,-8],[7,-6],[6,-10],[5,3],[-4,2],[-7,8],[3,-4],[-2,9],[-10,-10],[7,-1],[-7,10],[-3,-4],[1,-4],[8,-2],[3,-1],[2,-10],[9,9],[-5,8],[3,4],[2,4],[3,4],[3,4],[5,-1],[-5,1],[-9,9],[3,6],[9,2],[9,5],[-6,-5],[6,-5],[5,7],[-4,-4],[-9,9],[-4,7],[-6,-5],[7,-6],[8,3],[1,4],[-3,7],[-1,4],[-8,1],[-7,-5],[9,9],[9,-10],[7,10],[1,-7],[7,4],[5,-8],[-9,4],[7,-3],[1,-2],[-7,7],[6,-5],[3,1],[-4,-10],[3,3],[-8,9],[6,4],[6,-8],[-10,9],[4,3],[6,9],[-9,2],[-8,-3],[1,2],[6,7],[-3,4],[-9,9],[9,-3],[6,-6],[3,-8],[-2,-9],[-4,10],[-8,3],[1,-3],[4,-6],[-4,9],[-10,-6],[4,6],[-4,9],[-6,2],[-6,-5],[4,-7],[-2,9],[-1,7],[-3,4],[8,3],[3,-1],[-1,-4],[8,5],[-9,-8],[5,-6],[-8,-8],[7,-10],[10,-6],[7,5],[-2,8],[8,2],[6,-6],[-9,-9],[-7,-10],[7,-7],[5,-3],[3,-4],[-6,-5],[-4,2],[6,2],[2,4],[6,-4],[-6,-3],[6,-7],[3,4],[-4,2],[5,-7],[-1,10],[-10,-3],[-10,3],[-7,9]], dtype = "int64")#candidate|1943|(637, 2)|const|int64
var_1944 = relay.var("var_1944", dtype = "bool", shape = (640,))#candidate|1944|(640,)|var|bool
call_1941 = relay.TupleGetItem(func_1254_call(relay.reshape(var_1942.astype('float32'), []), relay.reshape(const_1943.astype('int64'), [637, 2]), relay.reshape(var_1944.astype('bool'), [20, 32]), ), 1)
call_1945 = relay.TupleGetItem(func_1258_call(relay.reshape(var_1942.astype('float32'), []), relay.reshape(const_1943.astype('int64'), [637, 2]), relay.reshape(var_1944.astype('bool'), [20, 32]), ), 1)
output = relay.Tuple([bop_1938,call_1941,var_1942,const_1943,var_1944,])
output2 = relay.Tuple([bop_1938,call_1945,var_1942,const_1943,var_1944,])
func_1950 = relay.Function([var_1936,var_1937,var_1942,var_1944,], output)
mod['func_1950'] = func_1950
mod = relay.transform.InferType()(mod)
mutated_mod['func_1950'] = func_1950
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1950_call = mutated_mod.get_global_var('func_1950')
var_1952 = relay.var("var_1952", dtype = "float32", shape = (12, 1, 3))#candidate|1952|(12, 1, 3)|var|float32
var_1953 = relay.var("var_1953", dtype = "float32", shape = (12, 4, 3))#candidate|1953|(12, 4, 3)|var|float32
var_1954 = relay.var("var_1954", dtype = "float32", shape = ())#candidate|1954|()|var|float32
var_1955 = relay.var("var_1955", dtype = "bool", shape = (640,))#candidate|1955|(640,)|var|bool
call_1951 = func_1950_call(var_1952,var_1953,var_1954,var_1955,)
output = call_1951
func_1956 = relay.Function([var_1952,var_1953,var_1954,var_1955,], output)
mutated_mod['func_1956'] = func_1956
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2186 = relay.var("var_2186", dtype = "float64", shape = (10, 1, 7))#candidate|2186|(10, 1, 7)|var|float64
uop_2187 = relay.asinh(var_2186.astype('float64')) # shape=(10, 1, 7)
func_1254_call = mod.get_global_var('func_1254')
func_1258_call = mutated_mod.get_global_var('func_1258')
const_2201 = relay.const(-1.860832, dtype = "float32")#candidate|2201|()|const|float32
const_2202 = relay.const([-7,1,10,-10,9,3,-9,-10,-7,8,9,2,-3,4,-7,2,-1,5,2,-6,-7,9,-6,-8,7,10,7,-7,-6,8,2,-7,-2,6,10,-7,1,-6,6,3,-1,-1,-3,-9,-1,-2,9,-8,6,7,6,-6,3,-7,5,4,2,-6,-6,-6,4,-10,9,-5,3,-2,5,7,9,9,-3,2,8,2,5,-1,-6,-3,10,-2,10,-4,-2,-5,5,5,-6,-5,6,-8,-5,-9,9,-8,10,4,3,-6,-8,-8,-2,-3,1,-3,-7,-8,-10,-5,-1,-10,4,2,3,-4,7,-6,-6,-7,8,4,1,-2,-10,-1,-2,5,-6,-5,5,2,1,2,6,2,1,3,-9,4,4,4,6,-3,-6,-1,-8,-4,-2,4,-6,-4,-6,1,-4,9,-10,-5,2,-9,6,3,7,-1,-4,7,-3,8,-9,-7,6,10,-8,-4,-3,-3,7,3,3,-10,-10,6,-7,-3,5,-7,5,-1,-2,-3,2,-4,-2,-10,10,10,7,1,2,10,5,10,-5,-3,10,2,2,8,2,6,9,9,-4,2,8,3,1,5,6,5,-6,7,-4,1,-4,7,5,-1,-8,-4,9,10,-1,-8,-3,-5,3,-6,-5,-4,-7,4,6,-10,-2,-9,-2,-1,-5,1,5,8,6,-4,4,1,8,3,3,-6,-10,4,-7,-4,-5,2,-9,-7,-8,-7,8,4,-5,7,2,3,-2,3,-3,2,10,-7,8,-5,2,1,-1,-5,3,6,-7,9,-7,9,-9,-7,6,-9,5,-3,5,-10,-8,-7,-9,8,4,-5,10,-1,6,-10,-2,-9,3,6,3,-6,-1,1,6,5,-7,-10,-8,-7,-9,-7,6,-7,-7,4,-9,10,-3,-9,10,-8,-8,-3,-9,1,7,-8,5,9,8,-1,-6,-6,-1,10,3,-8,8,9,2,-7,7,10,-1,-3,4,4,6,9,-9,1,-6,-4,10,4,-1,-1,-6,-2,1,4,3,5,9,9,2,-9,8,-5,-7,10,-9,8,-1,-10,10,-8,-3,-2,-7,-2,8,-9,7,5,-2,1,6,-7,-10,9,-3,2,-8,-10,-5,3,-6,-2,-8,-6,-9,-4,-6,2,-7,7,8,8,4,-10,-10,4,7,8,10,8,1,-6,2,-3,1,-1,-9,-4,6,-4,10,4,-4,5,-6,-7,4,2,-3,4,-4,4,3,8,3,10,10,1,4,-9,-8,7,-10,-5,-5,9,-4,-5,-3,10,5,-9,2,10,-7,-8,7,-6,-8,4,-2,5,5,4,-2,-4,-4,3,-5,6,6,-5,-3,2,4,3,10,-1,-7,-5,-1,8,-1,3,-8,8,-5,6,5,-7,5,-4,-9,2,-10,-7,-5,6,7,-2,10,-8,-4,-5,4,10,4,-4,7,-1,2,-7,4,-3,-5,-6,6,2,-8,-10,8,2,2,-5,4,7,5,-1,7,7,-8,7,-7,-3,-5,-7,-3,-3,7,-5,5,6,-7,-8,-2,6,-8,-5,3,1,-3,1,9,2,-3,8,-10,-9,-5,9,1,-9,-2,7,-2,-5,7,10,9,4,10,1,8,5,8,1,3,10,4,-3,6,-1,4,-10,5,5,8,3,8,9,4,-5,2,2,-3,-2,5,-1,-5,9,5,-5,-2,8,8,5,-1,-9,-6,-9,-10,-5,4,-1,8,-1,6,5,6,-7,3,8,-2,9,2,4,-8,-4,-6,-3,6,7,-10,9,8,-2,-10,6,-7,-8,10,-10,1,-3,8,-1,-10,8,9,-5,5,-9,-8,-5,-8,6,4,-8,-10,4,-7,-4,-1,6,-10,-8,-10,10,-2,7,-7,-7,10,10,8,-10,6,3,-6,1,2,1,-6,4,-5,7,-5,-6,4,7,-7,9,10,-5,9,-2,-5,4,3,1,-10,-1,5,-2,-3,-2,-7,-8,-1,3,6,4,8,5,6,9,-4,-1,-2,-9,3,7,-2,-6,5,6,5,-5,8,4,3,9,8,8,2,-2,1,-4,-4,10,10,-3,8,7,5,9,5,-7,10,10,5,9,-3,2,3,-7,8,9,-7,1,6,-1,-7,-3,-6,-1,8,10,2,1,2,10,7,7,6,7,7,4,-8,3,3,-6,3,-4,-6,2,-2,-1,4,4,-3,3,-9,-3,5,1,-9,8,-3,-7,-5,8,-1,-8,-6,-4,-1,8,-3,5,7,5,2,-8,-4,-3,-1,-6,-1,-9,5,5,-2,8,-4,-3,-10,6,10,7,6,4,-5,2,-5,3,4,-9,-9,-2,-9,-3,-3,-1,3,-8,-9,6,3,10,-9,-7,10,-7,-3,1,4,-3,5,10,3,6,-8,-6,10,-8,-8,2,-3,9,8,9,6,-8,5,6,6,2,4,-7,-5,-3,-10,-2,-4,8,-1,-5,-9,7,-1,-2,4,-10,-3,5,2,10,5,-4,1,2,-8,-10,-9,1,-9,-6,-8,-3,5,-6,8,-8,7,3,-5,1,-1,10,-5,8,3,-9,2,3,-2,2,-4,4,-4,1,-1,3,-3,-1,-4,-4,-5,-10,-5,-2,-2,8,9,-9,-8,-2,-5,2,-6,8,-2,-6,7,1,9,-10,2,-8,9,-3,10,-9,-8,4,-4,5,7,2,-9,8,10,10,-6,-10,8,6,-9,-6,6,3,4,-5,-9,-7,-1,6,-2,3,7,-5,-9,4,3,-4,-1,8,-3,8,-1,-10,-3,6,-5,3,4,-8,6,10,-3,10,-3,9,3,-8,6,7,-6,-3,1,4,4,10,-3,3,7,8,-4,-6,6,-9,3,10,-8,10,-10,5,-6,6,-5,5,-4,2,2,5,3,8,10,3,10,-7,10,4,7,5,-1,-6,5,-5,7,3,-5,-3,-9,-5,2,7,6,-7,-3,6,3,1,1,5,7,9,-8,-9,1,-4,-5,-4,-4,3,5,1,3,-6,-1,4,6,2,-6,-1,-4,-9,-9,8,-7,-1,2,8,8,-2,4,7,-1,-6,-1,-5,5,1,-10,9,4,8,4,1,-2,10,-1,8,7,1,4,-10,10,2,4,5,-1,-2,-1,-8,-8,-8,7,-2,-1,-2,-7,-3,8,8,9,8,8,-7,-6,1,3,-4,-7,-5,-7,5,-3,-2,-6,-3,-4,4,-4,1,6,-4,3,-9,2,9,5,3,2,9,6,2,-4,1,7,-7,-6,-4,-9,-7,9,2,10,3,1,-8,5,-8,-6,6,3,-8,4,-9,-7,6,4,9,3,6,6,-2,3,10,9,7,-9,4,-9,8,1,1,2,-1,-3,-9,-8,8,9,3,5,-1,-6,-10,9,-8,-4,8,-8,8,-4,10,8,-5,7,-6,-9,7,-3,8,-4,2,5,3,7,-7], dtype = "int64")#candidate|2202|(1274,)|const|int64
var_2203 = relay.var("var_2203", dtype = "bool", shape = (320, 2))#candidate|2203|(320, 2)|var|bool
call_2200 = relay.TupleGetItem(func_1254_call(relay.reshape(const_2201.astype('float32'), []), relay.reshape(const_2202.astype('int64'), [637, 2]), relay.reshape(var_2203.astype('bool'), [20, 32]), ), 7)
call_2204 = relay.TupleGetItem(func_1258_call(relay.reshape(const_2201.astype('float32'), []), relay.reshape(const_2202.astype('int64'), [637, 2]), relay.reshape(var_2203.astype('bool'), [20, 32]), ), 7)
var_2210 = relay.var("var_2210", dtype = "float64", shape = (10, 1, 7))#candidate|2210|(10, 1, 7)|var|float64
bop_2211 = relay.multiply(uop_2187.astype('uint16'), relay.reshape(var_2210.astype('uint16'), relay.shape_of(uop_2187))) # shape=(10, 1, 7)
func_638_call = mod.get_global_var('func_638')
func_642_call = mutated_mod.get_global_var('func_642')
call_2219 = relay.TupleGetItem(func_638_call(relay.reshape(var_2203.astype('bool'), [8, 5, 16]), relay.reshape(var_2203.astype('bool'), [8, 5, 16]), ), 1)
call_2220 = relay.TupleGetItem(func_642_call(relay.reshape(var_2203.astype('bool'), [8, 5, 16]), relay.reshape(var_2203.astype('bool'), [8, 5, 16]), ), 1)
uop_2226 = relay.exp(call_2200.astype('float64')) # shape=(6, 7, 14)
uop_2228 = relay.exp(call_2204.astype('float64')) # shape=(6, 7, 14)
output = relay.Tuple([const_2201,const_2202,var_2203,bop_2211,call_2219,uop_2226,])
output2 = relay.Tuple([const_2201,const_2202,var_2203,bop_2211,call_2220,uop_2228,])
func_2234 = relay.Function([var_2186,var_2203,var_2210,], output)
mod['func_2234'] = func_2234
mod = relay.transform.InferType()(mod)
var_2235 = relay.var("var_2235", dtype = "float64", shape = (10, 1, 7))#candidate|2235|(10, 1, 7)|var|float64
var_2236 = relay.var("var_2236", dtype = "bool", shape = (320, 2))#candidate|2236|(320, 2)|var|bool
var_2237 = relay.var("var_2237", dtype = "float64", shape = (10, 1, 7))#candidate|2237|(10, 1, 7)|var|float64
output = func_2234(var_2235,var_2236,var_2237,)
func_2238 = relay.Function([var_2235,var_2236,var_2237,], output)
mutated_mod['func_2238'] = func_2238
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2654 = relay.const([[[10,-7,-7,5,-2,-2,4,6,4,8,1,4],[-6,-6,-1,4,6,8,8,-7,-4,5,-6,5]],[[-9,5,-6,5,1,-5,-10,8,10,-9,9,-1],[4,10,-7,1,8,7,-4,8,-4,10,3,9]],[[-3,-4,-4,-5,10,-10,10,2,7,2,4,9],[-4,-3,8,-4,2,-3,-2,-7,-6,7,10,4]],[[3,-9,7,-4,-8,1,8,-4,3,9,8,6],[-2,-9,-6,-10,-10,-3,-8,1,-3,1,-8,-4]],[[-4,4,8,7,-5,-4,1,10,-4,2,2,-9],[4,8,5,-2,-6,1,6,-6,6,2,4,1]],[[-4,2,-4,1,-9,1,3,-2,-8,5,-3,-7],[-8,8,-2,2,2,4,-2,-8,-5,6,-2,9]],[[5,6,-4,7,-3,-4,6,10,9,-5,-8,4],[2,3,2,6,7,-5,4,-3,-9,-1,-4,-2]]], dtype = "int8")#candidate|2654|(7, 2, 12)|const|int8
var_2655 = relay.var("var_2655", dtype = "int8", shape = (7, 2, 12))#candidate|2655|(7, 2, 12)|var|int8
bop_2656 = relay.subtract(const_2654.astype('int8'), relay.reshape(var_2655.astype('int8'), relay.shape_of(const_2654))) # shape=(7, 2, 12)
output = bop_2656
output2 = bop_2656
func_2681 = relay.Function([var_2655,], output)
mod['func_2681'] = func_2681
mod = relay.transform.InferType()(mod)
var_2682 = relay.var("var_2682", dtype = "int8", shape = (7, 2, 12))#candidate|2682|(7, 2, 12)|var|int8
output = func_2681(var_2682)
func_2683 = relay.Function([var_2682], output)
mutated_mod['func_2683'] = func_2683
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2855 = relay.const([[[2.767084,-0.338881,-4.125104,8.837915,2.240267,-5.315733,7.085679,8.341359,5.610223,4.157769],[9.265246,7.612139,4.323666,-2.698342,9.000974,-5.842246,-0.452767,-0.470210,1.197224,-8.915712],[-6.832165,4.039486,8.692866,-0.238950,4.426779,3.881071,4.727603,-2.112645,1.895928,-0.758682],[-6.207252,9.529241,8.577229,9.690596,4.984814,8.888223,-8.455280,5.667586,1.840565,5.890413],[8.902779,9.069455,5.381868,4.404703,-4.426499,-2.118864,-3.246739,7.041421,6.131995,-9.391419],[-5.946258,2.230323,5.579824,-6.180979,-4.738999,3.892099,7.828045,-5.923155,-5.777989,7.725053],[3.442513,-9.475913,7.633632,1.759117,-3.152984,8.615938,-3.823262,-1.891145,2.692532,-3.131020],[-0.989414,1.146541,9.534156,-9.368436,0.899598,-1.767678,2.169499,-0.407322,8.749973,-1.390268],[3.237925,-6.632990,-8.542365,9.269916,-0.373902,6.828469,6.115525,-8.416288,-6.618838,5.994317],[-6.394438,-5.168904,-2.005904,-3.164220,-1.490904,7.464464,-2.906710,0.807593,-4.590580,-6.461887],[0.237731,4.974866,-5.393307,7.024183,1.907338,-5.212491,-8.452640,3.610188,8.221578,-0.272262],[-3.969026,7.808252,-1.914206,9.909700,-7.243462,3.102642,8.474995,-2.212865,-8.472546,-4.384219]],[[-0.608970,2.883991,1.169765,5.237570,-7.418426,3.561742,-3.325522,3.739117,9.291537,0.151714],[-4.858586,3.044620,-6.158563,7.226967,4.045097,-1.574021,-2.353799,4.658842,-5.933387,-8.899741],[-6.047635,-4.323430,-2.717345,6.008007,-5.832060,9.604248,7.742523,9.280394,7.123784,-0.827264],[-5.123995,-3.579238,-5.456904,5.518664,9.037178,1.636480,5.893063,-4.700312,6.464043,0.372200],[-0.216013,-0.692990,-8.567182,1.765833,-4.395671,-0.307252,-8.089608,2.400218,-2.453784,-0.236696],[-5.214159,-7.092804,1.616010,-6.926947,-5.289259,-9.827363,-0.449931,8.716338,-0.986809,-5.576820],[-3.985412,-1.925714,-6.629112,-1.768660,-2.176775,-4.186461,-8.432992,-6.042118,8.750896,8.882421],[-8.576433,-8.132018,-3.953220,3.935789,7.708705,-7.092889,7.313330,-1.477375,-2.663792,-2.397335],[6.726729,-8.357397,5.389306,0.910267,3.465517,8.379172,1.280919,-9.367296,2.556216,-7.972523],[-0.766983,-2.008139,9.085326,0.734838,5.611308,-5.784336,-0.681156,7.503455,7.990492,-7.857635],[6.266659,6.578726,8.496259,-6.852169,9.740114,9.054733,2.623202,9.433459,0.752811,1.797216],[1.772857,0.903480,-4.986920,7.952643,-2.014957,-9.998508,1.838314,-7.011462,0.028612,4.472877]],[[9.834957,-8.969149,9.907123,-8.850309,-0.378834,5.829393,9.018768,2.242813,6.169098,-0.512231],[-3.335837,5.154441,-0.098623,7.612507,0.619716,-0.073413,5.009347,2.604928,0.129491,6.280344],[0.798324,9.764770,-2.680166,-9.518942,6.125467,3.266576,7.865463,-3.690109,-9.775651,-7.866849],[-8.818858,-4.818472,3.436778,-4.356539,3.712088,6.930344,0.492823,-2.346850,3.037679,2.065103],[7.875372,0.876163,-3.876667,-6.103387,2.083440,-1.079898,7.015956,1.259119,-8.074028,6.733290],[-4.382937,0.337830,0.049519,0.541154,-6.028696,-3.687697,6.564514,3.667388,0.192494,-6.058034],[-9.289716,-9.459212,1.859339,-7.145345,-6.000111,-7.865639,-2.886558,-7.878746,5.978372,6.398136],[-4.469124,5.961914,8.800681,1.042171,-0.022078,0.984384,-2.809892,-1.916191,6.970384,-4.785689],[2.698587,-1.066824,-1.576741,1.033308,-9.270145,8.237634,-0.838681,-3.538933,0.129695,-7.748906],[8.975838,-3.139740,-9.463300,-8.826751,-2.775417,1.641792,9.007764,1.041482,-7.178594,2.455563],[4.775954,9.129396,4.394716,2.499455,-3.490909,-5.663892,5.273239,9.418370,6.241453,-3.472919],[-9.887727,2.459778,5.216147,2.641605,-0.384045,9.834739,-6.694212,4.568958,-4.818766,-6.281577]],[[1.019132,4.122559,-9.577560,-2.552693,-6.895303,9.725255,-1.452200,-4.423941,8.569714,3.546111],[-5.528525,-7.331430,4.941745,-6.746293,-3.137969,-2.071023,8.551148,4.044708,1.992462,0.719283],[-0.836086,-6.756615,-1.348111,-6.539961,9.772671,7.852805,-9.355748,-2.466010,0.239008,-9.953862],[5.579044,8.584815,-8.640785,-1.255743,-3.040447,1.224293,-3.188866,1.804005,-1.992374,7.929320],[6.560431,6.379685,-8.965260,-3.238079,-1.452831,3.900539,9.928023,-2.236818,4.017272,1.838545],[-4.601025,-7.112269,3.878418,7.270657,-3.303330,0.928119,0.760724,1.144373,-3.474893,-0.078201],[-7.006701,-3.063729,-7.550014,7.934414,-9.073671,-4.803602,6.630359,9.773658,-6.820409,-5.820049],[9.751333,0.459141,-2.083237,-5.022176,-2.930655,9.159784,5.620176,-6.577950,-9.578442,7.472529],[2.233714,-0.334387,8.146881,0.781658,-3.439121,-6.471282,4.606362,9.127741,-1.819449,-2.275884],[-7.449071,-3.839127,5.014393,8.561047,-2.294605,-1.286456,-3.623767,5.653683,3.551176,-6.344640],[-3.787253,7.826562,-6.478737,-6.589795,4.748579,2.645567,-8.012796,0.953120,-5.519456,-1.250025],[9.143718,-0.303875,1.978938,8.731118,-7.853565,-6.351270,-7.240790,-6.464602,-3.330801,-4.574558]],[[8.751211,0.767468,7.558953,-4.023194,-6.127799,-6.997705,3.045015,3.003068,-7.619195,2.682928],[-4.718916,-3.414519,-1.148343,1.213947,3.401348,-5.298870,2.209086,-2.284106,-0.257033,2.926818],[7.294169,-7.816800,-6.215280,6.010099,7.615729,-3.682745,5.890863,-0.475752,9.195731,-0.241769],[3.582614,-2.821253,0.964783,0.524396,9.646829,-1.859829,8.628344,8.512292,-2.897718,-2.934183],[-3.506620,-0.696880,5.074115,6.709135,-8.235504,8.312427,-6.889766,3.090059,0.219384,6.265619],[2.233952,3.227632,-2.863788,-8.987378,-9.656025,-1.594621,9.851346,-6.798402,-6.811716,-3.601432],[4.656813,-9.622095,7.699461,0.895809,5.216022,5.840621,-9.054922,6.826281,0.435775,-0.520586],[-4.481564,-9.929880,8.001141,7.537213,-9.897342,-0.631121,5.310252,9.408800,-1.294825,1.025274],[0.474212,-3.060370,-9.885123,4.741634,-3.996712,3.893265,-6.226366,-1.084147,-4.548015,0.950793],[6.807238,-1.306379,3.706551,4.942934,2.260783,8.964682,6.002458,-7.899274,2.545701,-8.457588],[5.611510,-0.504260,5.059643,6.098936,-3.721196,6.266674,7.811553,6.064361,0.336857,-3.902979],[6.173899,-5.455196,-5.389289,-3.437364,-0.095606,1.158804,-3.918670,9.466853,-7.084600,7.521795]],[[-3.752655,3.826756,4.907326,-8.310275,7.804356,6.643496,-1.703326,-2.145251,-6.450297,-6.700920],[4.098802,7.264076,4.302750,1.663079,9.211777,3.788142,2.506904,5.307031,2.363879,-5.349540],[0.795179,7.180289,0.447178,-9.822029,8.339676,-2.498683,-5.339142,-1.250992,-3.719441,3.785515],[8.681431,8.370103,3.227242,1.996811,-1.580923,-4.360289,7.444685,1.195377,7.776986,-0.323162],[-3.429781,2.733531,-5.767373,6.660959,4.610639,3.151434,3.292622,-5.445157,0.969175,8.030702],[2.903008,0.795929,6.946910,4.408587,-9.203215,2.427483,-7.902905,9.525692,0.035647,5.965883],[-7.627629,0.911759,-3.114504,-3.475014,8.221818,7.772447,6.675905,8.390284,-6.379183,0.688187],[-6.256459,8.865985,2.325314,-8.058105,9.253410,-2.797695,-4.047926,8.132599,3.886552,-0.723184],[0.686618,6.638436,6.444775,-1.882246,2.814286,-7.874009,-7.742617,-0.933603,6.909751,-0.678581],[-8.146946,-8.903153,-4.094716,9.624881,6.845875,-1.306898,-9.767044,-7.000336,-4.696251,2.937590],[-8.399425,-5.022105,4.451549,9.928081,4.426772,-5.661548,-5.547302,-9.535156,-3.384649,-3.467327],[4.949093,5.914147,-9.561173,3.237299,-1.614825,-2.646730,0.040423,0.184653,1.240119,4.251862]],[[4.052393,-1.453269,-9.940644,-9.233661,5.392476,-2.604619,-9.666719,-0.188936,6.984833,0.905771],[-7.067628,0.157065,-5.178280,-6.225920,1.690398,-3.932683,9.737967,-6.081273,4.994559,7.998586],[8.051376,-2.855493,7.478422,-6.748832,-9.542927,-1.448171,0.726722,-4.510222,-6.697732,7.506393],[-2.114505,-5.689343,-2.063401,8.274163,-8.301863,-4.828001,7.995413,0.502822,9.006602,4.462035],[6.744771,-7.878178,0.072832,1.094886,-6.255127,7.048168,-9.214821,-3.318973,-3.371591,7.916899],[-9.149998,-0.104734,-3.598394,-1.540542,6.748919,8.190029,6.723643,1.133937,1.646171,9.881602],[1.260801,-5.548042,-6.422926,5.429626,9.645633,4.647994,-5.044769,2.322265,1.960318,5.073258],[8.594096,-5.741976,-3.990859,-4.375723,-7.811011,0.606043,-9.244763,0.563140,0.400680,-5.992815],[0.625396,-3.719365,1.605490,-3.209695,-9.166054,-0.424886,3.736556,-9.052794,-6.231516,7.476230],[-0.969451,2.583341,-1.544285,-6.472092,0.361364,-4.868650,-6.636279,-4.807365,-9.518462,6.002799],[-0.945743,8.131237,-5.925567,-8.912257,-8.289756,8.170936,-6.850041,4.080750,4.583513,-5.812716],[-5.714574,-1.568668,-2.419188,8.661202,1.750792,7.321352,-9.885190,7.845535,-0.996842,7.715119]],[[4.516995,-8.369841,7.377759,7.518126,2.479239,3.293486,-2.721297,-9.654273,3.439651,-0.995177],[-4.774732,-9.021111,-5.880584,2.624400,8.162776,8.959115,6.814336,4.922194,9.318302,-1.964240],[-2.331489,6.510347,7.432783,0.096463,8.461023,5.054433,0.709138,-5.375852,-1.836628,1.091178],[-3.780444,-1.241136,-1.187896,0.288264,-7.977410,-2.169690,3.595492,-9.350838,2.797792,5.849036],[8.241604,0.339061,5.887436,-4.798962,5.677408,9.237678,-2.993627,-3.090992,9.027624,-2.794182],[8.904737,0.336469,-8.064520,5.512854,5.706207,-1.618919,3.059935,-3.578423,4.019405,-2.682850],[-8.288877,0.862213,-7.578476,3.226499,4.251851,2.085147,-5.253601,9.762891,-1.967303,-5.081604],[-9.777130,-6.683600,-3.902107,-0.495810,4.170334,3.447332,-1.313939,-8.686421,-0.805674,7.279530],[-8.207255,-1.902992,7.390329,3.930547,-9.580915,9.136766,6.641807,-8.960436,-9.286698,6.667840],[-7.021233,7.293849,7.292425,2.698895,0.994244,8.540569,2.708444,-2.634766,-8.678672,2.428757],[-3.351550,4.196179,-6.454667,3.338630,-9.604507,4.421021,1.101834,6.019804,-7.382831,-5.506627],[0.765467,9.350802,0.432634,2.888895,-0.309297,-0.794154,-7.452708,-0.208786,-8.823678,5.776542]]], dtype = "float64")#candidate|2855|(8, 12, 10)|const|float64
var_2856 = relay.var("var_2856", dtype = "float64", shape = (8, 12, 10))#candidate|2856|(8, 12, 10)|var|float64
bop_2857 = relay.mod(const_2855.astype('float64'), relay.reshape(var_2856.astype('float64'), relay.shape_of(const_2855))) # shape=(8, 12, 10)
func_1903_call = mod.get_global_var('func_1903')
func_1907_call = mutated_mod.get_global_var('func_1907')
const_2862 = relay.const([[4.358080],[1.134472],[7.371247],[-2.813773],[-0.527569],[-2.089459],[0.223957],[-5.322387],[5.543087],[-6.273686],[2.825197],[-8.452713],[4.542981],[-1.984615],[5.288453],[-1.496450],[-4.849685],[-9.315393],[-8.142351],[2.955862],[-7.059263]], dtype = "float32")#candidate|2862|(21, 1)|const|float32
const_2863 = relay.const([1.015145,-1.298706,-2.779200,7.798336,-5.302257,-7.026405,4.805251,-5.325534,-4.752522,0.365999,5.360919,6.558916,1.446352,-4.339514,7.463108,9.128364,4.998029,3.997743,-6.356082,2.728394,-7.240470,-5.022542,9.390325,6.156087,0.342814,-4.315603,-8.887678,4.489550,-3.758833,-6.392950,7.713857,-1.699359,6.336338,-7.106832,-2.851009,-6.994784,2.324046,8.008589,6.591355,1.499302], dtype = "float32")#candidate|2863|(40,)|const|float32
call_2861 = relay.TupleGetItem(func_1903_call(relay.reshape(const_2862.astype('float32'), [3, 1, 7]), relay.reshape(const_2862.astype('float32'), [3, 1, 7]), relay.reshape(const_2863.astype('float32'), [40,]), ), 4)
call_2864 = relay.TupleGetItem(func_1907_call(relay.reshape(const_2862.astype('float32'), [3, 1, 7]), relay.reshape(const_2862.astype('float32'), [3, 1, 7]), relay.reshape(const_2863.astype('float32'), [40,]), ), 4)
output = relay.Tuple([bop_2857,call_2861,const_2862,const_2863,])
output2 = relay.Tuple([bop_2857,call_2864,const_2862,const_2863,])
func_2872 = relay.Function([var_2856,], output)
mod['func_2872'] = func_2872
mod = relay.transform.InferType()(mod)
mutated_mod['func_2872'] = func_2872
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2873 = relay.var("var_2873", dtype = "float64", shape = (8, 12, 10))#candidate|2873|(8, 12, 10)|var|float64
func_2872_call = mutated_mod.get_global_var('func_2872')
call_2874 = func_2872_call(var_2873)
output = call_2874
func_2875 = relay.Function([var_2873], output)
mutated_mod['func_2875'] = func_2875
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3151 = relay.const([[[-4.484549,-6.194223,6.564849,-7.607413,3.917928,-2.174167,-1.126154,9.743843,-0.587802,8.171509,0.879185,6.324840,3.402419,-2.234178],[-9.115799,-4.470312,1.938940,4.961193,-1.382051,-6.372021,-3.636178,-7.864481,-5.181035,-7.695183,-1.591258,6.478882,7.723804,9.548210],[-0.662093,-4.564724,3.709555,4.920704,0.937648,1.307509,9.408251,3.816228,6.282722,-8.968951,-4.919741,-3.681182,-8.693919,-3.899909],[-4.721043,-4.893957,5.335599,7.168140,0.262540,-2.857280,3.236782,-8.123831,8.280500,5.503105,-9.648938,-6.523672,-1.670382,9.796139],[-0.653852,-5.301983,-3.921362,-3.098480,4.863929,-2.602764,-2.983954,9.600692,5.519298,-5.183110,-1.109186,7.857492,1.460109,5.562070],[-1.041612,-1.950680,-3.830928,4.644212,8.924211,4.824137,-6.006306,0.009398,-3.189569,-9.024443,3.716905,-8.206806,-5.797235,-3.755644],[4.314710,8.836752,-4.893958,-5.931158,-8.032576,4.700044,6.746472,-9.425837,5.649346,0.206958,6.568235,4.692926,-9.967972,-7.305159],[9.225269,1.390050,-6.048310,-5.186787,-9.864252,6.775941,-8.814586,3.139653,1.725214,1.066598,2.757064,-0.127493,5.727262,4.913771],[5.756176,-2.824345,-3.194918,3.052829,5.819741,-0.119311,2.819901,-9.598875,-9.609234,0.038669,-7.145713,-0.585794,7.266348,-1.362971],[-5.660026,8.348304,0.420135,-0.860706,1.953456,-3.276198,6.886763,-0.778785,-6.110047,0.514853,-2.114679,9.148193,6.030353,3.637125]],[[-9.533421,0.940922,5.610679,6.825271,1.112740,8.648884,7.117853,5.551105,-0.154238,6.562919,-4.518394,8.868323,-4.620977,4.253688],[4.214587,-5.089357,-4.819612,-8.855996,-8.353921,-4.368734,-7.395780,-8.109282,0.544112,-6.569360,-9.858037,3.645805,-4.434717,2.050540],[8.744339,2.220196,0.331488,-3.887623,8.015023,-4.559329,-7.052124,2.830863,-8.735945,8.909435,7.989573,2.685634,5.161613,7.878566],[9.321869,-1.795354,1.208220,7.421439,-2.993071,0.242073,3.708665,3.851621,-1.068069,-7.624003,0.693577,5.324113,7.900478,-1.679309],[8.323714,4.366300,-2.627405,5.348907,2.704533,8.481210,-4.036198,3.049254,-8.009651,-3.656310,-1.142762,4.832383,-7.497472,-8.803880],[2.543377,-5.109318,-7.498718,1.775654,-6.752422,0.707015,-4.669610,6.303900,9.175124,-7.400724,3.450663,-9.913946,4.785679,4.430780],[-5.681204,4.659416,-3.246071,-7.271555,9.213126,-5.381804,-0.003142,1.623398,-8.433754,-9.105424,-3.044479,3.518050,3.680859,1.872497],[1.247933,-3.225565,-0.809840,8.473699,2.997548,-6.311309,5.634673,-5.572647,-0.691638,-8.942437,-4.948201,-6.666733,3.267809,0.004099],[8.547394,8.714133,1.294611,6.727443,-9.911897,9.206666,-6.904823,-0.804828,-3.999150,-6.689937,8.205861,9.243766,5.953820,-8.421624],[5.899273,5.521039,-4.898142,2.815513,-5.007013,1.926786,3.313158,-3.823136,-2.334460,9.624209,-3.538239,7.688737,8.829712,7.459346]],[[-3.685447,2.406119,3.852619,4.520929,-8.081909,-2.698009,2.027082,1.890305,-1.935113,-4.491968,-0.253063,4.261846,8.847212,-3.480153],[4.831176,1.088601,3.480229,3.533006,2.371021,-8.768821,0.731016,-3.092872,4.555967,1.785206,-1.100055,-1.858370,6.996563,3.117007],[7.120234,5.812769,5.358508,-6.024819,-6.554825,-1.459265,-2.908380,2.095936,1.236942,-2.302051,9.088889,-2.351705,-4.866547,-7.522934],[-1.464273,-8.473044,-4.770612,-9.377447,1.192929,-1.563886,-7.982065,9.551672,-0.705789,-8.103507,8.332434,-4.948667,-2.129602,-6.563869],[1.099144,-8.957201,-8.092214,2.817088,3.626345,-1.229161,9.996727,-5.937564,5.222283,-5.665853,-6.429561,2.161768,-8.396640,-0.590263],[-4.761037,7.987269,4.513361,5.067823,-2.093406,-3.243128,-4.728732,-2.892742,-6.887227,7.992321,7.786705,1.051072,-0.226600,8.481520],[-4.932490,2.420703,-6.437996,-6.927995,3.750112,7.350910,0.018309,5.908104,-2.379045,5.752929,-3.821409,9.285559,-1.936919,1.270823],[6.636048,7.481446,-3.054681,8.401211,6.406825,-1.671773,8.973680,0.377005,-3.870552,6.890005,-8.745012,3.209005,6.079892,-0.439986],[2.470311,3.690575,-4.458165,-2.971881,6.188879,1.563126,9.668420,2.520201,1.619061,9.408636,4.375013,8.815839,7.877302,-5.569168],[8.449918,8.818674,-3.740315,7.383109,9.186280,8.160291,3.437777,-1.489251,0.965537,-4.804393,-3.880737,-7.001211,-2.823782,9.490554]],[[-7.645807,-3.979724,5.254103,-7.049086,-4.488591,-7.044205,5.837129,6.515196,9.542200,7.247969,0.029600,7.458677,-8.782849,-0.569812],[7.770452,-3.025180,3.950091,7.544812,-0.509017,0.759423,-4.973274,4.563930,3.796648,-5.211734,-8.557709,8.819833,3.078641,8.950132],[-7.138610,-6.370723,3.309721,0.333733,-2.365057,2.710597,-0.380239,7.626907,2.299253,-4.879228,7.723175,2.398676,0.683759,-7.349730],[1.110409,-1.768232,8.897286,-0.149911,2.931167,1.332594,-2.837129,7.519744,8.158441,2.502007,8.098596,-5.394653,6.530978,-9.351921],[-7.471015,3.258182,-7.930919,-3.648010,5.901449,-0.696890,-9.289240,-6.573376,6.503171,-8.378032,-5.095532,3.627076,0.003620,7.413935],[2.661817,7.248931,-6.196501,6.871815,-9.661276,-1.638740,-2.063849,0.230292,-2.008110,-6.408218,9.561892,2.234544,-1.336736,0.979354],[-0.272971,-0.753061,-2.908666,4.175994,5.869212,7.696320,-3.769602,2.786070,-6.350501,-1.969918,-3.602236,-9.660947,5.260966,3.230655],[-5.678643,3.855588,9.691654,-1.785440,-3.518545,-6.362966,9.186596,2.852375,3.714103,-9.643963,7.452152,5.436518,8.925333,7.124219],[4.742584,7.407170,8.610277,-0.012180,-1.025072,-1.152489,-7.713631,-8.135638,-6.148984,-8.530558,-4.289382,-4.948751,7.897134,8.564606],[7.319107,4.394458,-6.447432,7.953121,6.342069,-1.818921,-4.760351,-2.572408,-2.510587,-6.180666,1.934137,-0.998858,-2.384400,7.910839]],[[-2.335747,-8.823495,-9.909139,-6.872024,-8.854954,-3.641814,3.214640,-5.332024,-2.821164,2.523442,2.336407,9.901803,-7.617072,7.777497],[-6.371012,-9.941995,8.384788,0.339554,-7.281322,-9.591446,6.289094,-6.769858,-2.844694,-1.370083,-0.928548,5.752740,-8.016473,-6.534272],[-1.358163,5.491025,-9.914709,-6.102710,-9.114152,2.015171,6.549567,-1.813697,3.747980,-1.276396,6.720654,-8.425430,-5.866113,7.349903],[-6.522686,1.164354,2.988611,-2.625316,-5.130866,-7.179143,-3.852612,2.726019,9.084898,-5.446488,-6.220424,-4.764970,9.437765,7.293474],[-7.891040,-0.190695,-4.657867,-3.210994,-5.081364,-2.551829,7.547077,-6.859436,-2.807177,1.155256,6.506644,-4.574216,-0.734319,7.351789],[5.404595,0.478838,2.837751,5.725974,7.988980,-1.741469,-3.310535,-7.047159,8.460885,1.137833,-2.825133,4.578305,-2.474773,-1.939785],[5.296753,-8.360511,-0.855828,-0.631793,-6.219620,-2.610480,2.995451,0.949950,2.042968,3.330295,-7.031423,-6.515377,-3.136098,-3.201082],[-6.527630,2.902118,-0.678422,-4.269267,-7.974094,0.006922,-3.862428,-5.079728,-2.929290,6.787939,-6.816566,-0.250461,3.165952,7.076417],[-3.202039,-6.571252,-2.380824,-7.263147,-4.937829,-5.245150,-3.934688,7.809656,3.907842,-7.595847,8.644235,5.117277,8.730782,6.831835],[-8.095375,-7.938602,-7.687470,2.235397,-4.424411,-6.083593,6.779052,6.169200,-4.473866,-0.749858,5.102433,2.721763,3.800231,-9.850343]],[[-0.909185,1.199703,-9.390552,1.234739,0.005863,-4.162543,1.288813,-9.675411,0.934741,-1.981721,-5.758950,3.444845,8.677132,-9.142357],[1.077400,1.794795,-7.780610,-9.190832,-8.365014,-6.132287,4.596600,-2.250959,6.340739,6.650221,-7.854164,-5.959393,-8.755022,-3.467375],[-2.132464,-9.248284,9.668904,7.286931,8.310441,6.194964,1.261534,3.809269,-5.086166,6.010729,-4.171095,-0.306729,-3.737680,7.296864],[-5.534150,3.379500,-0.986692,-9.364948,7.617035,-6.838903,2.660977,3.796420,2.468644,6.503961,-0.383316,3.011810,7.072869,3.515584],[-4.390179,6.331638,8.210974,3.764274,-0.123383,2.770207,0.939746,-1.533358,9.268348,2.912062,-7.001380,-1.823643,-2.121216,6.737828],[1.480271,1.170969,4.285392,-7.113532,4.133385,6.381429,8.844671,-4.582595,-3.164928,-6.687113,-5.575369,-7.250339,-9.198279,9.949849],[-0.137492,8.849491,9.896284,0.553606,9.950239,7.231591,6.210721,-8.012468,-4.459350,6.480362,-7.989861,-7.647482,8.526999,6.868275],[-2.056055,-1.754201,-2.942720,-8.073054,5.384639,-6.811616,-7.611743,0.041463,-4.406424,-2.957689,-7.934638,7.241430,9.365568,8.350353],[-4.143458,1.469089,5.115440,7.054815,9.172699,-5.328665,2.040871,3.184926,-3.292634,2.859973,-8.102600,4.658788,3.672995,9.187313],[6.962353,-7.164418,-6.390919,-8.230020,6.142577,0.883076,0.986932,6.059447,-2.695820,-7.705916,-3.117872,-4.613436,-3.421256,2.803093]],[[-2.710627,-8.358555,-0.356900,-1.671513,-4.499629,-5.088379,-9.349130,-7.997869,8.740382,9.796904,-4.687987,8.197930,7.692162,-2.522518],[9.233344,-3.890673,-0.794528,6.738514,2.019066,6.399814,-5.595647,8.696758,2.254165,0.499804,-5.918150,5.979221,-3.330273,1.442345],[-8.050454,9.440655,4.221202,1.019763,1.459694,-8.971303,-4.400196,-9.319433,-8.183364,-3.521507,-7.211972,-2.074163,-3.445625,5.812174],[-1.553237,-9.792383,-1.873387,0.312872,8.913361,-1.932338,1.038384,4.016197,-6.433478,7.218445,-9.285020,4.897059,5.260544,7.803943],[9.831006,-5.930718,8.262256,-6.728623,9.739821,2.963960,-8.571150,5.148146,5.082146,-6.485699,-2.982489,-2.968833,1.758222,3.991898],[6.598607,-2.414924,-8.277507,7.115676,7.536413,8.985818,5.010373,-4.626453,-9.567203,2.375912,-3.868186,-8.016454,7.884840,5.413027],[-1.065544,8.521739,9.649164,-6.364727,1.275633,6.329859,6.620404,8.950631,-1.626670,-2.611320,1.073789,-9.819009,7.313869,-9.017290],[9.191889,1.911400,9.254283,3.341519,-7.993763,-8.448052,9.324267,0.552079,-0.943789,7.712361,-8.084540,-6.481694,-4.628790,8.304693],[3.896116,-6.432776,-9.742368,-5.652769,9.815129,-0.940171,5.577843,0.214764,9.433129,2.252550,7.858428,-5.091668,-0.989722,0.417497],[3.707008,0.697798,-7.127080,4.098978,8.552560,-0.944915,9.225517,3.863462,2.693418,-0.536642,6.334663,3.115818,-9.937264,-1.670155]],[[-3.165037,7.911385,-0.654187,-8.489936,1.332985,4.377409,0.854671,9.403212,9.283444,3.100366,7.833975,5.866024,5.560836,8.737298],[-9.747544,-2.751492,1.036724,-7.692994,-9.714403,-6.095578,-0.482347,4.979964,-6.078884,-9.431094,2.733723,-7.074897,6.183699,4.664439],[-8.635705,9.460023,-9.490586,2.276868,1.985590,4.062725,-1.004691,5.725888,-5.031246,-7.749349,0.858379,-7.741549,-8.484078,2.844273],[-4.674291,-4.287908,8.419800,6.968713,-2.083925,1.580186,-1.019362,6.009090,7.915990,0.026752,6.575459,-9.053789,-5.580590,2.910160],[0.541308,0.508225,3.814529,7.007057,5.652284,-8.917815,3.635150,3.435284,5.205594,1.974910,-7.264685,-5.749360,-0.328634,-3.038023],[6.581576,-3.421028,5.796626,-9.353331,7.066852,5.678614,-0.333677,-8.877007,-3.920616,1.469639,4.532824,-0.337739,9.465085,7.546217],[8.019636,-1.786045,-6.307393,5.115872,-4.653361,-3.056379,8.685650,-7.234050,-1.988405,-8.448958,2.290083,-9.239089,-3.656735,-2.026037],[8.144545,8.036024,2.310854,1.316201,-3.992585,9.934078,-6.120512,2.197544,-8.428166,1.869858,-0.963286,8.547834,0.543417,-3.986497],[-9.457366,3.302202,6.240676,-3.422827,-6.697735,-7.501216,-8.915489,-7.144602,4.827610,6.385804,1.661144,-7.295725,-7.349092,0.162290],[7.967725,4.492087,-3.091037,9.186379,5.482618,7.497705,4.010324,9.976480,8.845650,-5.288137,4.687931,-7.249013,-9.585615,-0.043797]],[[-2.941970,-6.194347,-5.998560,8.304580,-0.499291,-9.145965,-1.108797,-2.566397,1.763478,-7.369415,1.673460,5.477379,-9.932447,9.873210],[1.826941,8.484438,-3.467359,9.601141,5.471077,9.346042,-2.562628,9.131227,8.713600,-9.977923,5.675112,-3.820562,-2.970678,1.488332],[4.270129,6.640540,6.201943,0.160527,6.048620,-4.413405,9.976640,-1.025372,8.100871,3.031011,8.324068,6.120850,-4.672218,9.059392],[2.231972,1.300604,-8.460303,7.274013,9.635098,0.047247,-9.945933,7.146543,1.761561,9.448948,6.695628,-6.171443,-8.772419,-1.809691],[5.170636,4.953369,-3.666730,1.566863,-8.087249,-4.799732,8.504589,-9.026005,9.755110,-7.694352,7.674978,1.964147,-3.190358,-5.069345],[9.189253,8.532361,-0.651805,-2.060446,2.670793,7.311237,-6.791737,7.594292,6.545491,7.819331,0.821741,-5.553315,5.709554,5.820618],[7.355723,6.268289,-0.692997,7.140781,0.785976,-2.962380,7.443521,-8.436934,6.637657,-7.891160,1.439377,-5.590313,1.434671,-6.092088],[-0.378242,-8.074563,2.052459,1.820192,-5.561952,-1.244193,-0.021757,-2.678290,2.546887,5.519753,-9.890298,5.861400,-2.548238,-3.792037],[-2.042148,-8.620604,-9.929539,-6.195451,-4.160269,-1.315670,-3.930976,1.207737,3.429011,9.905684,-2.420176,5.206332,-7.951027,7.209871],[-7.531637,-9.979541,-6.927601,-8.671672,5.781710,-2.650017,-0.232821,-9.709441,8.490550,5.308137,0.986088,1.055611,2.958804,-4.337682]],[[-4.711119,-1.389307,3.846172,0.620509,-6.525945,-6.071774,6.349823,7.830468,6.570651,-2.064334,3.447463,9.044327,-3.166002,1.972607],[-3.373394,0.731665,4.410616,8.340882,-4.218353,-8.546341,-1.354814,-2.002064,8.838928,4.206376,5.964525,9.519434,7.479210,9.932411],[-4.407744,-6.012314,-2.233880,4.095874,3.028294,-5.093427,2.829629,-1.727023,-6.240275,5.976575,0.616010,-4.626852,2.579775,9.014704],[2.767280,-6.110868,4.459370,-7.838464,2.166477,0.924236,-3.902335,-9.513341,-8.462659,-0.797062,-3.618048,-8.375207,-4.952515,-8.665920],[0.520913,5.797097,6.223312,-6.579084,-7.214573,-9.176560,-4.505386,-2.777601,-9.399609,-2.853482,-5.962816,1.920341,6.691482,-9.148746],[-6.979805,6.243903,-2.865761,-2.722954,-6.032779,6.640814,8.068217,-9.964712,6.983588,5.709068,-9.456901,8.852633,-2.375567,5.118970],[-5.970686,7.358786,-8.424498,-0.946527,9.017515,-5.241852,1.604540,-9.733334,-5.995264,-2.754187,-1.563866,7.136070,-2.576000,9.968582],[8.591045,-7.879811,-8.357099,-9.627620,-5.401285,8.890627,-8.030805,2.493990,0.410492,-4.224875,9.901836,-6.258514,-2.504636,-7.207764],[-0.710629,3.016786,-2.008033,7.863319,-9.906312,9.077101,7.519481,-0.175887,8.405505,8.563773,-2.922549,-2.090064,1.696955,4.766853],[-4.894237,-2.824380,0.481936,-8.534874,1.569812,-5.692659,5.811623,-3.554986,-0.632881,-4.963530,-2.642471,0.791002,-2.545722,-4.076787]],[[-0.700039,6.099478,1.066807,8.106965,-0.684377,-9.926449,4.188710,6.780184,9.141803,4.437521,-8.490964,1.576579,-0.989026,4.917949],[-4.546961,-8.502608,3.733640,0.215128,6.135759,1.506831,-7.700728,1.973466,-6.420275,-3.101113,-5.755027,-4.251068,-4.332063,1.819290],[-8.134127,1.746611,5.511942,4.544374,7.292498,9.466742,7.762401,-2.176709,3.087889,0.573528,-0.007735,3.074813,-9.722150,-2.713880],[7.107927,4.979308,-8.089994,-8.805955,-1.637960,1.312352,-9.667866,-3.663284,5.049641,0.940770,-9.259773,3.687243,-9.963907,9.773702],[-7.589024,8.236062,7.255027,8.271975,5.479174,6.210034,5.484430,-3.262884,-7.374129,0.595721,0.892296,-7.333594,3.603881,4.633768],[-6.799068,-1.842599,-5.664703,-9.698567,-6.500383,0.185768,6.917157,1.285063,5.406493,-4.070820,-2.803105,-2.125249,-1.715047,6.550893],[-8.026026,0.845758,5.652805,6.638970,-9.245008,-7.952494,8.579496,-4.701747,-8.214095,9.002573,3.987833,3.985512,6.108285,-4.541511],[-5.502880,5.537934,-8.458402,9.142346,0.779775,9.649269,-6.081468,-0.319116,6.030785,-7.592183,6.847058,-1.910940,5.197584,-1.948249],[6.206097,-5.162521,0.948002,-3.847650,5.750441,5.810794,-1.181289,-5.294321,-8.582509,-7.967518,4.792845,-1.622674,-4.543589,-0.541665],[-7.979324,-7.224611,8.870835,-1.749705,-0.942492,-5.051174,-6.422345,-4.399796,-9.800783,-5.769865,-6.233149,-8.597873,1.754384,-4.479985]],[[2.230710,-8.962429,4.011381,2.849399,3.483343,9.793016,-8.313889,5.623429,-9.838840,5.663457,-9.003690,3.611491,-3.865177,0.010632],[-7.884473,0.410732,-5.033546,-0.279731,-7.683608,-0.386610,2.617553,-4.902577,9.924991,-9.371436,4.835505,-7.678504,7.568972,-0.419696],[8.551775,-3.033548,7.172191,-5.077808,4.166033,-9.467223,-2.082322,2.634216,-8.020850,-3.297962,-6.571292,6.857109,-7.849847,8.754815],[-1.135413,-0.688233,0.857357,7.979016,-6.383759,-1.593554,-5.861357,-6.264340,4.288535,-4.744139,1.005477,2.352995,-7.213320,7.466262],[-7.877038,-5.399460,3.390593,1.876593,0.839021,5.893614,-1.884781,1.351237,-2.322726,9.812124,-8.122134,-3.483457,-2.147075,0.010427],[-9.801406,-1.413805,9.437724,9.204243,3.367372,-8.796764,-0.455906,-9.630663,1.303401,5.653086,6.349437,-0.017003,9.066216,9.676415],[-7.375839,-0.657844,-4.592725,-9.524988,9.421578,-9.442970,-8.350303,-8.554262,-4.900051,0.204237,-6.165503,-2.656530,7.378849,8.613082],[0.091474,4.136011,4.163370,-5.010743,-5.238627,-1.842566,5.488058,-0.522948,2.317004,-9.664421,4.037165,7.204373,-6.112631,-2.828567],[-4.917774,-2.553762,-8.087713,-3.578865,8.089759,5.965058,8.371354,-1.610215,-8.788151,-6.390064,3.295197,-7.116269,-3.575569,-8.057425],[7.208942,-6.043001,2.129055,1.218869,-0.014768,9.296487,-5.324785,7.539456,-8.195845,-5.581592,-4.527846,-5.649999,6.858941,4.317719]],[[3.184376,1.052108,-5.326419,-9.607955,-6.487084,7.660585,7.819903,7.499852,-5.703949,5.792465,-6.362773,3.477158,-2.180488,-9.482689],[-3.667202,8.869395,7.570146,-8.676188,2.851574,1.556141,-4.268574,-5.294288,-5.361831,-3.833584,1.478708,0.352865,5.136467,-4.312916],[7.996918,-9.386356,-0.933739,8.183464,-9.804954,1.392276,-5.621447,6.237233,-1.834835,4.071047,0.185931,0.960889,0.455799,-0.311962],[2.139666,5.231990,3.139094,4.677713,8.575604,-3.704245,-9.934453,8.567251,-5.131444,-7.515954,1.182637,6.488379,7.647426,3.060549],[-9.838945,8.657426,-6.782022,-7.676159,-2.933835,-9.225108,-2.703163,0.743303,-5.996219,8.942057,-0.957585,0.957880,7.571410,-4.949057],[7.000192,-9.421748,-3.770074,-2.752650,-6.359843,-2.976455,-9.881937,-4.287202,5.290651,9.458329,0.065221,3.426139,-6.856169,7.916817],[1.609594,-2.546965,9.754370,-5.851226,4.198931,-0.425752,9.716645,-6.765472,1.670544,-5.814807,9.105556,8.808468,1.521788,-2.316014],[8.529884,0.883385,1.210151,-8.731838,-4.025493,-1.928969,3.772335,0.607022,-3.941451,-7.479869,8.046455,-9.389597,-4.301789,9.388811],[-1.895511,-3.735159,9.824459,5.113888,7.365328,5.902804,-0.433246,0.331385,-0.396167,8.265473,1.967463,1.751502,-9.333449,7.712456],[1.373361,-2.339104,-7.582665,2.674603,6.503415,-6.731664,-8.410073,-3.415368,-7.360923,-9.000972,2.987948,3.440815,9.711838,3.273986]],[[-2.934462,6.409354,1.512831,-7.865348,-6.449800,9.949041,-0.395532,-8.888859,7.583649,9.555488,2.688688,-9.160703,4.096678,5.686542],[-0.803282,9.526612,0.690434,-5.043326,-8.494833,-7.444371,9.915096,-2.643251,3.017990,-6.481527,-7.377888,-2.302741,-4.591047,-1.426529],[-0.251075,-6.123974,-3.165553,-6.426329,-1.734107,-1.845795,7.719072,3.214600,-8.450622,-5.346863,6.843666,-0.433505,-4.276751,0.515238],[4.112819,1.542482,1.007395,8.880395,9.878292,0.747059,-7.815196,-4.305190,-8.152390,-8.100458,-9.972748,-1.685093,-7.133488,4.595035],[-5.213160,8.324877,-3.104867,3.094198,-3.474999,1.911731,-6.137453,-0.325539,-4.174308,-2.042333,-9.206492,5.753693,0.067048,-7.616504],[-8.479328,9.552855,-5.399436,-5.424593,9.633071,-8.085713,-6.260604,5.768489,-5.770215,-9.365493,-5.906037,3.125574,1.364492,1.037882],[1.042848,-5.626466,2.017551,-1.313591,-8.811929,-7.878726,-9.727804,-0.352485,-9.504792,-7.206636,8.463242,2.030980,1.051002,-9.154436],[0.661858,-6.185650,-4.854787,-3.227418,-0.343223,3.413833,-0.844911,-8.822452,6.043678,1.109804,-7.308718,-7.361363,-3.936120,9.327531],[3.291407,4.239782,-0.511979,2.012632,-3.653959,-8.197168,-7.485961,-6.871579,-6.075423,8.991523,2.965714,6.810287,-6.233349,7.323711],[-7.604706,5.729051,-6.985295,-1.712242,-3.977588,1.250281,-1.641008,8.024005,-3.932432,5.532418,-9.407210,-5.470006,3.729002,4.335459]]], dtype = "float32")#candidate|3151|(14, 10, 14)|const|float32
uop_3152 = relay.atanh(const_3151.astype('float32')) # shape=(14, 10, 14)
func_1105_call = mod.get_global_var('func_1105')
func_1107_call = mutated_mod.get_global_var('func_1107')
var_3156 = relay.var("var_3156", dtype = "float32", shape = (120,))#candidate|3156|(120,)|var|float32
call_3155 = relay.TupleGetItem(func_1105_call(relay.reshape(var_3156.astype('float32'), [15, 4, 2])), 0)
call_3157 = relay.TupleGetItem(func_1107_call(relay.reshape(var_3156.astype('float32'), [15, 4, 2])), 0)
uop_3158 = relay.cosh(uop_3152.astype('float64')) # shape=(14, 10, 14)
output = relay.Tuple([call_3155,var_3156,uop_3158,])
output2 = relay.Tuple([call_3157,var_3156,uop_3158,])
func_3160 = relay.Function([var_3156,], output)
mod['func_3160'] = func_3160
mod = relay.transform.InferType()(mod)
var_3161 = relay.var("var_3161", dtype = "float32", shape = (120,))#candidate|3161|(120,)|var|float32
output = func_3160(var_3161)
func_3162 = relay.Function([var_3161], output)
mutated_mod['func_3162'] = func_3162
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3535 = relay.var("var_3535", dtype = "float32", shape = (15, 13, 14))#candidate|3535|(15, 13, 14)|var|float32
uop_3536 = relay.cosh(var_3535.astype('float32')) # shape=(15, 13, 14)
func_1903_call = mod.get_global_var('func_1903')
func_1907_call = mutated_mod.get_global_var('func_1907')
const_3544 = relay.const([9.014617,4.531768,3.928429,-5.007960,8.254324,-1.318803,-9.392685,-3.872687,-1.290702,5.808574,-1.339583,-9.014327,-7.395010,-3.496414,5.800607,-1.587173,6.720551,-6.108968,-9.500875,7.819523,9.552428], dtype = "float32")#candidate|3544|(21,)|const|float32
var_3545 = relay.var("var_3545", dtype = "float32", shape = (40,))#candidate|3545|(40,)|var|float32
call_3543 = relay.TupleGetItem(func_1903_call(relay.reshape(const_3544.astype('float32'), [3, 1, 7]), relay.reshape(const_3544.astype('float32'), [3, 1, 7]), relay.reshape(var_3545.astype('float32'), [40,]), ), 2)
call_3546 = relay.TupleGetItem(func_1907_call(relay.reshape(const_3544.astype('float32'), [3, 1, 7]), relay.reshape(const_3544.astype('float32'), [3, 1, 7]), relay.reshape(var_3545.astype('float32'), [40,]), ), 2)
bop_3547 = relay.logical_xor(call_3543.astype('uint16'), relay.reshape(const_3544.astype('uint16'), relay.shape_of(call_3543))) # shape=(3, 1, 7)
bop_3550 = relay.logical_xor(call_3546.astype('uint16'), relay.reshape(const_3544.astype('uint16'), relay.shape_of(call_3546))) # shape=(3, 1, 7)
func_2681_call = mod.get_global_var('func_2681')
func_2683_call = mutated_mod.get_global_var('func_2683')
var_3553 = relay.var("var_3553", dtype = "int8", shape = (168,))#candidate|3553|(168,)|var|int8
call_3552 = func_2681_call(relay.reshape(var_3553.astype('int8'), [7, 2, 12]))
call_3554 = func_2681_call(relay.reshape(var_3553.astype('int8'), [7, 2, 12]))
func_295_call = mod.get_global_var('func_295')
func_299_call = mutated_mod.get_global_var('func_299')
var_3560 = relay.var("var_3560", dtype = "float64", shape = (588,))#candidate|3560|(588,)|var|float64
call_3559 = func_295_call(relay.reshape(var_3560.astype('float64'), [6, 7, 14]), relay.reshape(var_3560.astype('float64'), [6, 7, 14]), )
call_3561 = func_295_call(relay.reshape(var_3560.astype('float64'), [6, 7, 14]), relay.reshape(var_3560.astype('float64'), [6, 7, 14]), )
func_295_call = mod.get_global_var('func_295')
func_299_call = mutated_mod.get_global_var('func_299')
call_3578 = func_295_call(relay.reshape(call_3559.astype('float64'), [6, 7, 14]), relay.reshape(call_3559.astype('float64'), [6, 7, 14]), )
call_3579 = func_295_call(relay.reshape(call_3559.astype('float64'), [6, 7, 14]), relay.reshape(call_3559.astype('float64'), [6, 7, 14]), )
output = relay.Tuple([uop_3536,var_3545,bop_3547,call_3552,var_3553,call_3559,var_3560,call_3578,])
output2 = relay.Tuple([uop_3536,var_3545,bop_3550,call_3554,var_3553,call_3561,var_3560,call_3579,])
func_3588 = relay.Function([var_3535,var_3545,var_3553,var_3560,], output)
mod['func_3588'] = func_3588
mod = relay.transform.InferType()(mod)
mutated_mod['func_3588'] = func_3588
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3588_call = mutated_mod.get_global_var('func_3588')
var_3590 = relay.var("var_3590", dtype = "float32", shape = (15, 13, 14))#candidate|3590|(15, 13, 14)|var|float32
var_3591 = relay.var("var_3591", dtype = "float32", shape = (40,))#candidate|3591|(40,)|var|float32
var_3592 = relay.var("var_3592", dtype = "int8", shape = (168,))#candidate|3592|(168,)|var|int8
var_3593 = relay.var("var_3593", dtype = "float64", shape = (588,))#candidate|3593|(588,)|var|float64
call_3589 = func_3588_call(var_3590,var_3591,var_3592,var_3593,)
output = call_3589
func_3594 = relay.Function([var_3590,var_3591,var_3592,var_3593,], output)
mutated_mod['func_3594'] = func_3594
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3859 = relay.var("var_3859", dtype = "float64", shape = (15, 8, 8))#candidate|3859|(15, 8, 8)|var|float64
const_3860 = relay.const([[[7.989246,5.119658,7.878406,-8.877579,8.512730,5.599484,3.637268,1.676366],[6.844106,8.426781,0.949138,-5.683604,5.653206,6.858265,-1.217205,4.366647],[4.927903,0.464408,9.695519,-0.004820,3.057637,-7.486143,9.503529,-5.723670],[-8.853312,-4.550534,-7.067843,-6.633913,-3.343699,-4.645416,-1.433112,-6.337529],[-8.880924,-2.397192,6.978797,-2.372000,-8.132857,1.996945,7.820496,-1.696265],[5.477203,6.815337,-2.650053,5.614386,0.035982,6.051522,6.222886,0.745378],[8.087005,-6.358681,3.258759,4.520399,9.986920,1.346111,-1.615783,-1.471689],[1.136301,-5.711987,3.904657,-9.727896,2.206241,7.894568,7.231984,9.802344]],[[-8.645312,4.026279,-4.509120,-9.599422,8.552689,-6.897167,0.611505,-4.969042],[-3.608667,-6.896723,-5.914187,2.247720,-2.343581,2.436625,4.803454,-1.623713],[-4.124833,5.787886,-8.096605,-3.387223,-6.924954,-3.170166,9.963576,-0.609213],[7.757603,-2.853171,2.865842,2.770425,-4.881730,4.047787,9.286879,6.759530],[8.096749,9.745826,-8.557631,4.855619,-4.095924,8.771832,-7.032775,-1.060640],[-2.997871,-7.754096,-5.865428,-0.743670,-0.553264,-0.965962,4.809862,1.951946],[9.744843,7.645020,-2.313465,-2.938086,-8.939348,-6.928381,8.378390,-9.408888],[0.094161,0.534199,-7.174379,-5.324436,7.834186,9.778038,6.474808,4.507062]],[[3.399145,-9.377831,6.336634,-7.822673,-2.857407,5.451643,6.082888,-2.743778],[-2.806543,-0.346997,3.529793,3.242194,-3.367529,0.339527,9.902288,-5.466560],[4.529939,-4.106471,8.316411,-7.908825,8.698236,5.858748,0.124428,-6.989522],[3.143297,2.466092,1.161668,1.555450,3.155238,8.325528,5.173682,6.246861],[3.119598,2.860809,-0.264209,-5.729422,3.860079,1.659336,4.145296,-7.278088],[-9.153123,4.538257,-8.982905,6.262080,-1.412529,-1.649786,-0.452592,-5.316491],[8.745920,-8.556772,-9.872970,-5.641249,-8.550386,-3.402115,3.339129,-6.961308],[-1.576903,6.851056,-0.344260,-9.321806,-0.893648,-9.970331,-9.665810,-0.822597]],[[5.092939,-8.472466,5.711116,8.673193,-1.118039,-6.629737,3.550474,5.150012],[-4.025898,-5.854162,-2.484267,8.084054,-1.184706,6.667237,6.507271,-0.426755],[1.498287,-9.276622,6.856955,-8.474910,6.961228,9.515129,-2.555013,7.072877],[-2.050963,0.372974,-5.714602,4.507293,6.852890,-4.210827,-2.071830,4.051777],[4.551990,-1.789488,8.490896,-2.511920,5.768286,3.303986,-5.461100,9.094776],[5.790922,6.597695,7.811255,-5.449770,-3.955359,7.219263,0.707571,-4.480582],[-6.078781,-0.914190,1.513644,1.224705,-8.558419,-1.089395,8.151262,5.339425],[1.065153,-3.740766,8.231146,3.072620,9.856626,-6.953328,3.803516,0.486726]],[[-6.882579,6.765850,-4.703856,-8.460036,-4.512105,-1.376807,-2.170530,-2.017367],[-9.665923,7.379820,2.017936,9.220417,3.566494,4.599883,-0.183051,1.635842],[-3.262429,6.198766,1.779475,-2.255408,-7.107554,3.802380,-1.685022,-2.916638],[-2.662157,1.635586,-4.807059,0.735236,-6.238430,-8.049239,5.738926,0.981424],[9.508190,4.155894,4.048822,-3.634637,-8.977680,-0.296392,2.805617,0.915815],[-6.493202,5.657698,-7.965305,2.809132,4.303411,8.561197,4.751150,8.631058],[2.410772,0.332611,-9.075512,3.541309,7.466401,0.230506,-0.603712,-5.081555],[3.308390,-3.006306,-5.047832,1.276768,3.205225,7.122714,7.559312,4.057194]],[[3.440783,0.018132,-1.110045,-0.966473,9.046169,-2.431939,-8.783224,-0.555106],[-5.188819,5.494121,-5.953521,6.993398,-3.389581,-6.778728,2.821841,-8.849882],[-9.142047,-2.758375,-9.416113,-6.251904,-1.024893,-4.496124,-5.471168,3.835061],[9.271790,0.465183,1.804859,0.285096,2.203664,1.115188,-0.294365,4.135916],[-3.341485,7.841774,-9.389801,-2.163451,8.112727,-6.273364,3.412451,-7.887522],[-9.084375,4.373697,-7.324442,2.950350,-6.785382,-8.679441,6.450473,-6.406972],[7.464404,-8.149432,6.279125,7.837716,2.662531,-2.199717,7.812403,0.973355],[8.421953,8.818618,-7.709864,3.924048,8.146105,9.663616,-9.135957,-1.089696]],[[9.458312,5.814290,2.598743,4.015818,-6.257963,-0.418945,7.142005,-0.495968],[-0.524290,-0.148626,-3.724848,7.544633,-6.678916,-4.823692,-1.320960,-9.020134],[-8.726825,7.558168,-8.600874,-0.471480,-7.874315,-4.731921,9.256293,-8.588107],[-8.798049,-3.909264,7.181803,5.788170,-9.444031,-9.048231,-6.074786,-3.306059],[-5.501643,8.530570,3.247052,-2.139986,-3.065796,6.676052,8.735437,6.652693],[-9.576582,-2.680504,5.979910,0.163772,-3.206514,9.007324,8.656972,5.777636],[4.279218,-0.080770,-0.533872,-2.683184,-1.487866,-5.583177,-3.385556,9.243809],[2.621482,-7.700849,3.750061,-7.380683,7.305669,3.966737,-4.249276,-8.801420]],[[5.102656,-1.720210,0.737479,-3.147475,-2.549383,2.075083,-1.037519,9.167228],[1.688323,-5.151883,-5.904405,-9.256065,-9.854285,-3.040842,-5.127868,-8.230993],[0.350707,5.484621,-6.763956,-9.682510,1.323312,8.729518,4.262139,6.635158],[-5.192821,4.174985,5.862579,-7.436055,8.723380,-2.792608,2.288061,9.473963],[9.349291,-0.508095,-1.262106,-6.385657,-9.822277,9.715957,-8.266138,-9.910193],[2.581960,8.121655,1.700521,-1.614907,-4.756203,-2.220732,-8.561552,2.718139],[9.988890,2.023499,-5.360500,2.164290,3.250047,-7.560884,3.355759,-3.057166],[7.211506,9.055666,7.151840,4.549835,-0.362281,2.575750,-8.809372,-9.383125]],[[-9.064587,6.887809,4.070026,-0.753180,-1.100681,2.115965,9.765139,-6.745427],[3.483263,-8.610476,1.359280,1.119544,3.229746,-5.136137,8.406134,5.981189],[-5.082142,-5.948898,7.470698,-3.325271,-8.378077,-0.757974,2.627599,-5.268540],[-2.933526,8.197370,-5.933354,-5.710468,-7.540161,5.353653,8.657352,9.469173],[-8.302633,-1.762677,-0.680706,5.009180,-7.537827,6.475051,-6.619865,-6.377780],[-9.829638,-4.505027,-0.828043,-8.912770,-5.828732,-2.801649,4.416426,0.099988],[-2.210579,9.171173,8.714205,6.942366,-7.211950,9.208661,-0.495715,-8.329492],[-2.974081,4.170100,4.704327,1.596784,-2.913973,3.383711,6.574492,7.185015]],[[-9.327921,5.921254,3.494275,8.867692,5.012961,-6.537549,5.483781,-8.607011],[2.384527,-1.885637,3.950133,-7.753924,-8.217355,5.080783,4.803616,9.733704],[-2.376535,1.952281,8.219579,1.110648,0.462652,-2.747781,-2.621073,-9.980652],[-1.318039,-9.416857,-1.283328,2.056729,4.133631,2.810573,9.999209,-0.361279],[8.683430,1.734941,7.834288,5.015073,-9.836033,3.396159,-2.748104,3.752667],[-6.093308,-8.186519,-4.349752,6.723260,0.880807,-3.755061,3.603737,-2.214742],[-4.370029,2.624325,-1.615269,9.182166,-0.310214,-0.440651,-3.239910,-1.206223],[5.532678,-6.213703,-7.431011,2.924197,-9.566690,7.854517,1.857186,-5.186406]],[[0.474965,1.130372,-0.114951,9.316408,1.809290,3.722640,6.657243,-3.217885],[-7.129959,-2.210677,3.108532,-2.749837,-7.960470,5.159081,1.707511,6.335602],[-0.158089,2.711642,7.411069,8.895793,-8.787765,5.930872,-6.442607,-8.087434],[-8.629513,-6.313638,8.370026,7.861528,-8.782118,6.542377,-7.181119,-5.511277],[4.022693,2.679201,-1.209355,9.526394,1.010184,-1.298791,-1.803838,-9.066093],[-9.089655,-8.120196,-9.166573,1.278645,1.837673,-9.708672,6.383761,-5.183206],[-1.503760,-2.880228,-6.642532,1.769116,-5.358894,-5.749726,8.866821,3.030319],[4.813298,1.292820,9.241317,-7.032745,1.676847,-9.209460,7.747227,4.788891]],[[-8.079450,8.353487,2.613009,-8.543324,-1.845680,-2.257641,8.698877,0.534810],[-5.218959,-1.707138,2.377486,-5.894787,-3.654708,-5.295978,7.601022,5.695703],[2.351724,-5.100639,-7.193952,-9.308209,7.787613,-2.170085,-7.683989,9.307938],[-5.601111,-9.018757,-5.463392,-7.981092,8.390351,2.398001,-9.957918,-1.132914],[5.572518,-1.726054,2.541746,-9.983210,4.021191,1.566765,2.371027,-0.112350],[9.485954,1.925025,7.474310,-1.658070,-0.237779,3.532908,-7.636078,-6.872801],[0.786348,8.677706,0.898358,5.686929,-5.063338,-9.219569,-8.786300,4.076534],[9.524716,6.002763,-0.731556,4.747549,1.718380,3.804910,-9.228031,0.803706]],[[-1.442883,-5.565425,0.575054,3.113854,2.175060,8.918531,-5.439213,2.303657],[7.988419,2.220600,-4.813517,9.721994,9.513569,6.822248,-6.025325,5.234814],[-4.690287,3.363487,-7.984843,7.198358,-2.823682,7.502200,-0.515705,9.115484],[0.322671,7.652134,1.565894,-4.241482,-7.173430,5.594547,-7.348042,3.184492],[-6.406575,-1.759793,9.581178,-8.547688,-2.319111,6.988059,-4.230891,2.205732],[9.189480,7.537397,9.323386,2.135325,-6.487668,-5.409695,-0.099531,3.925890],[-7.583527,9.762078,5.898409,-2.374983,8.211003,-6.993717,-7.901503,0.785038],[1.292069,-4.452747,-7.095283,-0.134966,-4.931695,-3.395373,-2.894970,-6.508034]],[[5.646983,5.963858,4.544177,6.086182,1.228222,6.222997,5.897027,3.434289],[7.182881,3.360270,1.571201,-6.644975,-0.472643,-0.717853,-8.467726,-8.855052],[-0.222996,7.280736,5.515961,-8.624265,-8.111364,-4.567461,8.681168,-6.192410],[6.060204,-1.372535,9.146547,0.872830,5.459618,9.731816,-6.640206,-4.878954],[3.052776,-5.912089,-4.745653,6.326017,-5.145933,-3.741300,6.033567,1.000239],[-8.674660,0.235006,-1.097612,0.109419,5.731922,-3.257450,-4.415133,-8.768626],[-5.829497,-1.744563,-0.226328,9.285135,4.640447,-5.490266,6.747619,-6.019533],[6.937836,8.498443,-6.287927,-0.242119,4.897928,1.927583,7.702148,3.288165]],[[-0.537551,-3.240617,3.926781,-7.525725,7.055045,5.802658,-8.170860,-1.487963],[-2.694976,6.107242,-8.653754,-4.046605,-9.075593,-1.734903,4.418487,3.581358],[2.867797,-8.833379,-1.094728,-5.180701,4.015399,-7.032944,9.862494,-3.164945],[-1.155602,-5.848355,6.971016,3.668946,-4.888015,5.854469,4.387077,5.675651],[-2.741750,-7.361857,-4.334260,-6.481318,-7.192237,3.538407,6.993853,2.338445],[-5.472388,-8.114235,-8.957678,3.762087,6.846971,2.313980,-9.583411,-2.002531],[-1.069333,2.193734,1.198181,3.798341,-4.084884,3.995237,-5.705061,0.333115],[-7.837808,-1.184596,4.540304,3.085579,-5.207156,-7.997671,9.353820,1.642861]]], dtype = "float64")#candidate|3860|(15, 8, 8)|const|float64
bop_3861 = relay.multiply(var_3859.astype('float64'), relay.reshape(const_3860.astype('float64'), relay.shape_of(var_3859))) # shape=(15, 8, 8)
func_2681_call = mod.get_global_var('func_2681')
func_2683_call = mutated_mod.get_global_var('func_2683')
var_3873 = relay.var("var_3873", dtype = "int8", shape = (168,))#candidate|3873|(168,)|var|int8
call_3872 = func_2681_call(relay.reshape(var_3873.astype('int8'), [7, 2, 12]))
call_3874 = func_2681_call(relay.reshape(var_3873.astype('int8'), [7, 2, 12]))
output = relay.Tuple([bop_3861,call_3872,var_3873,])
output2 = relay.Tuple([bop_3861,call_3874,var_3873,])
func_3875 = relay.Function([var_3859,var_3873,], output)
mod['func_3875'] = func_3875
mod = relay.transform.InferType()(mod)
mutated_mod['func_3875'] = func_3875
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3875_call = mutated_mod.get_global_var('func_3875')
var_3877 = relay.var("var_3877", dtype = "float64", shape = (15, 8, 8))#candidate|3877|(15, 8, 8)|var|float64
var_3878 = relay.var("var_3878", dtype = "int8", shape = (168,))#candidate|3878|(168,)|var|int8
call_3876 = func_3875_call(var_3877,var_3878,)
output = call_3876
func_3879 = relay.Function([var_3877,var_3878,], output)
mutated_mod['func_3879'] = func_3879
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3937 = relay.var("var_3937", dtype = "float32", shape = (10, 16, 6))#candidate|3937|(10, 16, 6)|var|float32
uop_3938 = relay.atanh(var_3937.astype('float32')) # shape=(10, 16, 6)
bop_3945 = relay.logical_or(var_3937.astype('bool'), relay.reshape(uop_3938.astype('bool'), relay.shape_of(var_3937))) # shape=(10, 16, 6)
output = bop_3945
output2 = bop_3945
func_3963 = relay.Function([var_3937,], output)
mod['func_3963'] = func_3963
mod = relay.transform.InferType()(mod)
mutated_mod['func_3963'] = func_3963
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3964 = relay.var("var_3964", dtype = "float32", shape = (10, 16, 6))#candidate|3964|(10, 16, 6)|var|float32
func_3963_call = mutated_mod.get_global_var('func_3963')
call_3965 = func_3963_call(var_3964)
output = call_3965
func_3966 = relay.Function([var_3964], output)
mutated_mod['func_3966'] = func_3966
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4217 = relay.var("var_4217", dtype = "float64", shape = (16, 5, 6))#candidate|4217|(16, 5, 6)|var|float64
uop_4218 = relay.atan(var_4217.astype('float64')) # shape=(16, 5, 6)
uop_4228 = relay.cosh(uop_4218.astype('float64')) # shape=(16, 5, 6)
func_2872_call = mod.get_global_var('func_2872')
func_2875_call = mutated_mod.get_global_var('func_2875')
const_4231 = relay.const([[0.807493,0.535615,8.282260,-4.746246,7.704758,-1.649820,9.218924,-6.156067,-7.860516,9.533455,8.568022,1.343402,5.822566,6.203244,-7.953148,-8.511161,-5.416105,2.593952,-8.894564,-2.014379,-5.689867,-7.295839,-3.478688,4.563817,-8.559639,1.190016,-7.103069,-0.363266,4.631008,1.405742,-4.881220,9.482811,7.950750,-8.576706,-9.280271,2.307717,3.161162,-2.499362,-7.059449,5.534255,-4.934657,4.825321,3.434545,-1.334521,3.997810,-6.051935,4.274893,-6.750596],[7.674994,-3.270222,-7.685483,-8.617912,8.754100,2.145808,-4.040429,5.553339,3.371514,5.394416,-5.194208,7.529198,1.291759,1.251398,-1.415748,8.920629,-0.126537,3.199899,-5.158919,-3.525563,1.568248,5.125676,-6.262721,-3.025545,3.960235,4.049120,-5.299565,2.816399,-2.178391,-5.653299,8.972358,-8.144733,-3.573842,-4.712089,7.972567,-5.399932,-1.857913,-6.210419,-7.373837,8.571061,-1.431523,1.352603,9.051670,-5.067518,1.529193,-2.819819,1.978968,-0.150089],[4.466819,-9.191588,-3.775227,4.893463,-9.753730,9.023338,-7.951566,5.199891,5.587385,1.139950,9.075871,6.593608,2.148251,9.164172,-7.178594,-4.964178,-0.731447,9.215135,9.469640,-6.949805,-0.956117,6.845157,-6.099895,-7.563474,4.885680,-1.415026,9.173640,-6.195371,-2.314477,8.528217,6.543767,-9.335068,-6.484613,-6.378844,-1.215109,-3.433517,0.395104,2.547198,-1.617712,1.866978,-2.010240,-3.672691,1.088824,-8.399031,5.199439,8.103032,6.131152,-3.104093],[1.074689,3.584384,0.192331,-9.583536,3.709534,-5.045909,8.332251,-8.198769,-9.678954,-1.143977,3.837628,4.872920,-0.740417,7.588593,-3.927060,-8.157393,5.930093,1.753968,4.368795,0.844138,4.769998,-7.140967,3.727567,-1.240902,2.539679,-2.005646,2.440737,6.405191,-9.017257,1.949527,1.274093,-6.648740,-7.221862,7.261652,0.770717,-8.835971,1.066938,-4.161360,9.876231,-7.981837,2.416852,8.362329,-1.788786,-8.844894,-1.006271,9.221602,5.239761,-2.289974],[1.070946,4.064810,-6.799010,7.493805,-4.149546,-7.945783,5.865364,1.322483,3.341109,9.954546,9.578603,-7.709583,-3.818907,2.606178,3.288902,9.092189,-8.451561,-8.222133,-8.648627,-2.502180,8.067638,2.565452,9.498322,4.431459,0.666195,-8.556318,-2.348960,-8.260113,-5.258043,5.627873,9.763759,-5.827952,6.905469,-3.708457,-1.751383,2.179726,-0.957136,-3.899769,7.016173,-4.564089,8.454422,8.359662,-0.024423,-6.534167,-8.905357,-3.140863,-5.687930,2.207805],[1.219441,3.887045,-0.957777,3.507707,3.288461,-5.178497,1.409955,-2.790082,5.276612,6.313565,9.787727,-0.639847,3.369594,-8.755491,5.772062,5.069698,4.649782,-4.765059,0.818579,-7.876324,-6.584360,9.186265,-1.264798,-3.865840,-4.503186,1.359422,6.302623,3.691912,-5.686562,-9.424687,6.518170,9.226898,-9.129237,-5.126799,6.517384,7.231236,7.088798,-5.232998,-9.814172,3.120778,-7.568380,-6.092208,-7.814063,-2.608981,3.259243,-8.955604,-4.540904,-6.160648],[9.267788,3.139970,3.510312,-7.321702,8.311374,-3.204959,9.982844,-2.141586,-5.748359,1.895119,-5.526614,-0.249065,-9.082862,-5.384096,-1.677038,-0.413182,6.496882,-5.295346,-7.674603,5.420281,4.874150,2.842761,5.679456,-4.123200,-7.780468,-6.855713,5.890443,8.133526,5.124626,6.272673,-4.633597,-3.439176,9.819022,-5.556727,5.145658,0.084106,-3.742191,-0.119211,4.388719,1.358207,-8.410022,-2.165908,-5.740818,-7.041063,-3.792941,6.469843,7.875696,-4.022329],[7.630511,-2.547019,7.182974,8.196044,-7.279498,7.231179,1.590148,5.682458,6.041077,2.627932,4.469533,5.181951,1.035362,-4.250626,-2.199122,5.573519,-7.590585,1.766255,-5.782187,7.773093,-8.156793,-7.110674,5.996170,6.846887,5.315507,8.863519,-9.829570,-6.137434,2.821961,-8.299523,-9.888306,4.361696,9.568165,-7.355043,-8.878549,-2.782571,-7.534628,-5.627362,3.178305,-8.836302,-3.166918,1.576685,2.021775,0.328974,1.516302,-5.325965,8.670205,-4.620141],[-6.392459,-2.108757,-1.011867,1.817593,5.340436,-4.421243,-4.613754,-6.383470,-4.966929,6.976721,6.471877,8.287411,8.518970,-8.512522,0.746921,1.490968,8.191140,-6.704774,8.687906,5.248988,9.373295,2.031021,-1.587432,0.560849,5.259288,-9.347133,9.141902,8.204316,-7.680702,3.699273,-7.928034,0.947301,0.824341,4.652708,-9.908750,0.684019,9.106958,5.724201,-2.401401,-7.663720,6.200858,1.816825,-2.645066,2.546220,-1.261420,8.317872,-1.093567,0.413881],[-3.982812,-4.518827,8.484526,5.246779,-3.963578,-2.481508,0.949067,-4.593230,-5.725134,5.995832,1.368312,2.730352,8.079958,-1.892762,7.153116,1.330728,6.069471,-8.571235,-0.214799,7.547053,-2.807796,4.858020,-1.390945,0.731581,3.293767,-3.988094,5.792777,9.955267,-7.078806,-6.983032,9.686769,4.161380,9.775936,9.089981,4.325616,-0.439934,-7.385350,2.438334,-7.307035,8.848206,1.653164,-7.666683,3.462986,-0.376154,5.773233,-4.119756,-5.833940,7.977994],[0.737847,3.836102,1.015983,9.476088,-6.961839,0.721830,2.906871,-4.484703,-4.887048,6.933323,-7.352187,6.836878,7.814502,-5.768727,6.154484,4.984978,-0.750638,-4.545179,4.553729,-2.243834,-6.799386,-1.019295,-0.732312,7.834063,7.015670,3.471502,-7.179107,6.127180,-5.862482,9.157427,-6.097318,-9.021348,-4.153718,-7.529147,-5.895865,2.313888,-0.315460,-8.843576,-2.312353,1.818986,2.877706,-7.145440,0.083089,3.444354,2.984731,-5.318906,3.242282,7.125723],[7.592451,2.736412,-2.518724,-2.387266,-1.361940,9.544965,-3.950628,-8.614290,1.654751,1.431201,1.183826,-8.121247,-9.787552,-3.642237,-8.119024,4.170600,1.580589,5.008282,6.425451,9.204564,7.067691,-6.111961,9.729329,5.601635,4.933714,-0.181454,5.015934,-7.864217,1.333635,7.963635,-8.517557,5.630723,-8.623547,7.988831,-5.361658,0.123656,7.338615,-2.054393,7.799222,-0.282708,-8.739161,0.386728,7.336930,2.953427,-6.179999,-0.140767,1.919518,-9.995828],[4.132875,4.682279,-2.435213,4.121842,7.323422,6.834586,7.328332,9.524788,-0.593226,9.567669,-7.501665,-9.793604,8.572912,0.245601,-1.015695,-2.786951,0.219715,9.224903,0.064261,-0.136244,-2.167196,5.479439,3.123193,-9.468540,6.769094,8.230340,-0.638593,-1.174144,1.987273,1.232191,8.365777,2.883150,0.376097,1.510267,8.910449,1.537716,3.910427,9.232989,-6.002792,-2.956104,3.927141,8.463519,1.733441,5.730651,-4.984923,-1.452080,6.864356,-9.359279],[-0.638919,7.790499,7.720969,-4.809518,3.797311,9.159426,4.833609,4.366913,-8.413178,-3.205532,-7.160223,-4.043701,-5.850063,-6.329907,-9.423958,5.287927,-1.445803,-3.832191,3.351485,-8.658147,-7.050922,-9.962744,1.135940,-8.202311,0.550530,1.575168,-7.108452,-6.936462,-1.075979,-4.887202,1.637839,-1.255167,-3.378189,-7.595869,1.395305,-9.090835,-7.727095,4.375699,-8.813198,9.940425,-7.376372,8.881950,-1.997484,-0.444089,8.020835,8.192651,-6.711333,-8.926351],[-1.895424,-9.553214,-7.129914,8.788481,-5.584638,-5.338508,-0.936100,-7.705281,9.645419,-0.769097,6.654211,-2.362576,0.846316,5.116928,5.479922,3.118664,-4.505813,6.025809,-3.547805,-8.818563,7.548507,-6.300170,-5.664322,9.231529,-1.519982,-2.084411,-8.395770,-6.135790,-3.742498,8.249912,-0.347191,-1.453817,-5.590454,2.387656,-3.947361,2.506670,-3.583143,-2.916873,-1.148373,-9.544468,5.465222,-7.846003,-5.533765,1.879257,3.239151,-4.570205,0.644545,-2.788784],[8.083170,5.730824,2.300628,9.444719,-0.403054,0.991517,3.558700,7.006286,-2.395063,-2.686122,5.206618,6.398689,-7.242600,-8.029475,-8.706121,-0.009221,-5.042441,-2.330431,-7.061437,2.022408,8.403596,-9.999188,8.747283,8.887894,3.400549,-1.778154,0.484103,8.952516,9.096924,-2.822231,4.847681,6.796517,-6.000895,5.754442,-1.551103,2.233729,7.770385,-1.326480,5.956536,-7.914118,-5.070783,4.087469,8.462338,1.072943,-5.219260,-8.830737,-5.129935,6.538185],[6.467124,-3.697227,-8.051802,9.452710,3.165672,-3.730146,5.576483,3.530536,6.767838,-8.530137,-3.638945,2.627691,2.707420,-0.965767,-4.169708,-5.758062,-0.558595,0.526230,-3.759818,2.035202,-1.329173,-0.618831,-1.486884,2.155733,6.949010,-4.288624,-3.073307,-5.578833,-0.065607,2.553449,1.643284,-5.777344,-6.549684,-3.112305,6.989554,-8.060795,6.723767,0.262922,1.292139,9.731821,-8.286303,-4.226465,8.939568,-2.820568,6.542015,-5.899274,1.220897,-7.811535],[-1.835529,-5.169693,-3.350503,-6.753344,-3.168350,-7.497328,-0.372806,-4.502913,3.970620,8.964728,9.168457,-5.855020,-4.039211,2.427958,-6.180790,1.342869,-0.628031,-5.177625,4.172311,-0.306336,-8.754857,8.598217,-2.742081,-5.755511,-9.880630,6.058904,8.998592,-6.094491,-7.244486,-7.858728,2.491189,-4.839380,8.935026,1.276914,8.447754,-4.398610,-0.348676,-7.356236,8.514978,-4.746009,9.114804,-7.455283,-3.287983,-6.998076,-1.015836,2.711883,-5.545070,-8.728363],[-6.407680,-4.869180,5.094370,1.891583,-9.664631,4.527415,-6.585049,1.565375,4.540107,7.172447,-7.624060,-6.508312,-8.362291,1.764993,7.072844,-2.213265,9.486914,1.047707,-0.542216,-8.894520,5.691360,-6.132018,5.561149,7.800965,7.354811,-1.541129,-0.442245,6.382954,-0.352372,7.657119,-2.563432,9.374306,3.735945,-7.339487,-0.731020,-5.819866,-7.260126,9.121564,5.666155,-1.293095,6.426367,-3.237391,-0.292381,-3.027400,-8.758401,-3.254482,-6.086420,-8.298077],[2.195071,3.815049,4.332814,3.863079,-8.208633,-4.036024,6.601948,0.307015,0.699143,-2.561409,5.151843,1.636761,-0.959984,-7.431248,2.575950,-2.821873,6.459596,-6.339184,-2.808778,5.224110,4.885810,-2.475532,-4.527661,1.039790,4.000106,6.826041,6.713704,9.477352,7.966443,-0.879934,-7.298831,2.920492,-6.832140,8.679467,4.627475,4.670878,-3.988858,2.668745,6.979797,-1.287022,-0.865368,3.334407,-5.349398,4.064537,-9.785586,7.796975,3.216057,5.886178]], dtype = "float64")#candidate|4231|(20, 48)|const|float64
call_4230 = relay.TupleGetItem(func_2872_call(relay.reshape(const_4231.astype('float64'), [8, 12, 10])), 3)
call_4232 = relay.TupleGetItem(func_2875_call(relay.reshape(const_4231.astype('float64'), [8, 12, 10])), 3)
bop_4246 = relay.bitwise_or(uop_4228.astype('uint16'), relay.reshape(uop_4218.astype('uint16'), relay.shape_of(uop_4228))) # shape=(16, 5, 6)
func_2872_call = mod.get_global_var('func_2872')
func_2875_call = mutated_mod.get_global_var('func_2875')
call_4254 = relay.TupleGetItem(func_2872_call(relay.reshape(const_4231.astype('float64'), [8, 12, 10])), 2)
call_4255 = relay.TupleGetItem(func_2875_call(relay.reshape(const_4231.astype('float64'), [8, 12, 10])), 2)
func_1105_call = mod.get_global_var('func_1105')
func_1107_call = mutated_mod.get_global_var('func_1107')
var_4259 = relay.var("var_4259", dtype = "float32", shape = (6, 20))#candidate|4259|(6, 20)|var|float32
call_4258 = relay.TupleGetItem(func_1105_call(relay.reshape(var_4259.astype('float32'), [15, 4, 2])), 0)
call_4260 = relay.TupleGetItem(func_1107_call(relay.reshape(var_4259.astype('float32'), [15, 4, 2])), 0)
output = relay.Tuple([call_4230,const_4231,bop_4246,call_4254,call_4258,var_4259,])
output2 = relay.Tuple([call_4232,const_4231,bop_4246,call_4255,call_4260,var_4259,])
func_4269 = relay.Function([var_4217,var_4259,], output)
mod['func_4269'] = func_4269
mod = relay.transform.InferType()(mod)
var_4270 = relay.var("var_4270", dtype = "float64", shape = (16, 5, 6))#candidate|4270|(16, 5, 6)|var|float64
var_4271 = relay.var("var_4271", dtype = "float32", shape = (6, 20))#candidate|4271|(6, 20)|var|float32
output = func_4269(var_4270,var_4271,)
func_4272 = relay.Function([var_4270,var_4271,], output)
mutated_mod['func_4272'] = func_4272
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4469 = relay.var("var_4469", dtype = "float64", shape = (9, 3, 13))#candidate|4469|(9, 3, 13)|var|float64
uop_4470 = relay.erf(var_4469.astype('float64')) # shape=(9, 3, 13)
output = relay.Tuple([uop_4470,])
output2 = relay.Tuple([uop_4470,])
func_4480 = relay.Function([var_4469,], output)
mod['func_4480'] = func_4480
mod = relay.transform.InferType()(mod)
mutated_mod['func_4480'] = func_4480
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4481 = relay.var("var_4481", dtype = "float64", shape = (9, 3, 13))#candidate|4481|(9, 3, 13)|var|float64
func_4480_call = mutated_mod.get_global_var('func_4480')
call_4482 = func_4480_call(var_4481)
output = call_4482
func_4483 = relay.Function([var_4481], output)
mutated_mod['func_4483'] = func_4483
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4610 = relay.const([[[9.844967,-4.935317,6.281555,-1.805827,-2.155825],[-0.511392,4.884008,-9.103293,4.557804,9.504857],[9.046577,-7.185145,-4.714001,-8.201107,-8.778756],[7.582436,9.963837,9.816692,9.561748,2.962700],[7.077613,-7.139550,3.040080,6.354670,6.224849],[2.489447,5.383374,-0.538888,-1.626604,8.175047]],[[4.097243,-8.816404,3.415516,4.206460,3.500084],[-4.138080,-3.466876,-6.313799,7.863236,-1.063208],[-1.146027,4.206363,-7.324902,2.116520,9.335222],[2.221261,3.237208,8.650829,6.340697,5.286089],[-1.134626,-7.137008,0.479504,-4.785085,-1.721968],[0.439388,-0.421400,-4.083707,3.017857,4.440811]]], dtype = "float64")#candidate|4610|(2, 6, 5)|const|float64
uop_4611 = relay.tan(const_4610.astype('float64')) # shape=(2, 6, 5)
func_638_call = mod.get_global_var('func_638')
func_642_call = mutated_mod.get_global_var('func_642')
const_4628 = relay.const([True,True,True,True,True,False,True,True,False,False,True,False,True,True,False,False,True,False,True,True,True,True,True,True,True,False,False,False,False,False,False,False,True,True,True,True,False,True,False,False,True,True,False,False,False,True,False,True,True,False,False,False,True,False,True,False,False,True,False,False,True,True,False,True,False,False,False,False,True,False,False,False,True,True,False,True,False,False,False,True,False,True,False,True,True,True,True,True,True,False,True,False,True,False,True,True,False,True,False,True,True,False,True,False,True,True,True,True,True,False,True,False,True,True,True,False,False,True,True,True,True,False,False,False,False,True,True,False,True,True,True,False,False,False,True,True,True,False,True,True,False,False,True,True,True,False,True,True,True,False,True,False,True,True,False,True,False,False,False,True,True,True,False,True,False,True,True,True,True,False,False,False,False,True,True,True,False,True,False,True,True,True,False,False,False,False,False,True,False,False,False,False,True,False,True,True,True,False,True,True,False,True,True,False,True,False,True,True,True,False,False,True,True,False,True,False,True,True,True,True,True,True,True,True,False,True,False,True,True,True,False,False,True,True,False,False,False,False,True,True,False,True,False,True,False,False,True,True,True,False,False,True,False,False,False,False,True,False,True,False,False,False,False,True,True,True,True,True,True,False,True,True,True,True,False,True,True,False,False,True,False,True,False,False,True,False,False,False,False,False,False,False,False,True,True,True,False,False,True,True,False,False,False,False,True,False,True,True,False,False,False,True,True,False,True,False,False,False,False,False,False,False,True,False,True,False,True,True,True,False,False,True,False,False,True,False,True,True,True,True,True,True,False,False,True,False,False,True,False,False,True,False,False,False,False,False,True,True,True,False,False,False,True,False,False,True,False,True,False,True,True,True,False,True,True,True,True,True,False,True,True,False,True,True,False,True,True,True,True,True,True,True,True,True,True,True,False,False,True,False,True,False,True,False,True,False,True,True,True,False,False,False,False,False,True,False,True,True,False,False,False,True,True,True,False,True,False,False,True,True,False,False,True,True,False,True,True,False,False,False,False,False,False,False,False,False,False,False,True,False,False,True,False,False,False,False,True,False,True,False,False,True,False,True,True,True,False,False,True,False,True,True,True,True,True,True,True,True,True,False,False,False,True,False,False,True,False,True,False,True,True,False,True,True,True,False,False,False,False,True,False,True,False,True,True,True,True,False,True,False,True,True,False,False,True,False,False,True,True,False,True,False,False,False,False,True,False,False,True,False,False,False,False,False,True,True,False,False,True,True,True,False,False,True,True,True,False,True,False,True,True,True,False,True,True,False,False,True,False,False,False,False,False,False,True,True,True,True,False,False,False,True,True,False,False,False,True,False,True,True,False,False,True,False,True,False,False,True,False,False,True,False,True,True,False,False,True,True,True,True,True,True,False,False,True,False,False,False,True,True,True,True,True,False,True,False,True,True,False,True,True,True,True,False,True,True,False,False,False,True,True,True,False,True,False,True,True,False,True,False], dtype = "bool")#candidate|4628|(640,)|const|bool
call_4627 = relay.TupleGetItem(func_638_call(relay.reshape(const_4628.astype('bool'), [8, 5, 16]), relay.reshape(const_4628.astype('bool'), [8, 5, 16]), ), 0)
call_4629 = relay.TupleGetItem(func_642_call(relay.reshape(const_4628.astype('bool'), [8, 5, 16]), relay.reshape(const_4628.astype('bool'), [8, 5, 16]), ), 0)
output = relay.Tuple([uop_4611,call_4627,const_4628,])
output2 = relay.Tuple([uop_4611,call_4629,const_4628,])
func_4648 = relay.Function([], output)
mod['func_4648'] = func_4648
mod = relay.transform.InferType()(mod)
mutated_mod['func_4648'] = func_4648
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4648_call = mutated_mod.get_global_var('func_4648')
call_4649 = func_4648_call()
output = call_4649
func_4650 = relay.Function([], output)
mutated_mod['func_4650'] = func_4650
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4648_call = mod.get_global_var('func_4648')
func_4650_call = mutated_mod.get_global_var('func_4650')
call_4672 = relay.TupleGetItem(func_4648_call(), 2)
call_4673 = relay.TupleGetItem(func_4650_call(), 2)
output = relay.Tuple([call_4672,])
output2 = relay.Tuple([call_4673,])
func_4684 = relay.Function([], output)
mod['func_4684'] = func_4684
mod = relay.transform.InferType()(mod)
mutated_mod['func_4684'] = func_4684
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4684_call = mutated_mod.get_global_var('func_4684')
call_4685 = func_4684_call()
output = call_4685
func_4686 = relay.Function([], output)
mutated_mod['func_4686'] = func_4686
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4716 = relay.var("var_4716", dtype = "float32", shape = (4, 3, 2))#candidate|4716|(4, 3, 2)|var|float32
var_4717 = relay.var("var_4717", dtype = "float32", shape = (4, 3, 2))#candidate|4717|(4, 3, 2)|var|float32
bop_4718 = relay.floor_divide(var_4716.astype('float32'), relay.reshape(var_4717.astype('float32'), relay.shape_of(var_4716))) # shape=(4, 3, 2)
output = bop_4718
output2 = bop_4718
func_4726 = relay.Function([var_4716,var_4717,], output)
mod['func_4726'] = func_4726
mod = relay.transform.InferType()(mod)
mutated_mod['func_4726'] = func_4726
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4726_call = mutated_mod.get_global_var('func_4726')
var_4728 = relay.var("var_4728", dtype = "float32", shape = (4, 3, 2))#candidate|4728|(4, 3, 2)|var|float32
var_4729 = relay.var("var_4729", dtype = "float32", shape = (4, 3, 2))#candidate|4729|(4, 3, 2)|var|float32
call_4727 = func_4726_call(var_4728,var_4729,)
output = call_4727
func_4730 = relay.Function([var_4728,var_4729,], output)
mutated_mod['func_4730'] = func_4730
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4648_call = mod.get_global_var('func_4648')
func_4650_call = mutated_mod.get_global_var('func_4650')
call_4787 = relay.TupleGetItem(func_4648_call(), 0)
call_4788 = relay.TupleGetItem(func_4650_call(), 0)
output = relay.Tuple([call_4787,])
output2 = relay.Tuple([call_4788,])
func_4802 = relay.Function([], output)
mod['func_4802'] = func_4802
mod = relay.transform.InferType()(mod)
mutated_mod['func_4802'] = func_4802
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4802_call = mutated_mod.get_global_var('func_4802')
call_4803 = func_4802_call()
output = call_4803
func_4804 = relay.Function([], output)
mutated_mod['func_4804'] = func_4804
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4802_call = mod.get_global_var('func_4802')
func_4804_call = mutated_mod.get_global_var('func_4804')
call_4814 = relay.TupleGetItem(func_4802_call(), 0)
call_4815 = relay.TupleGetItem(func_4804_call(), 0)
func_1903_call = mod.get_global_var('func_1903')
func_1907_call = mutated_mod.get_global_var('func_1907')
const_4817 = relay.const([-9.266646,6.469769,1.658384,-2.113133,0.507013,8.197469,3.635667,5.579008,-0.396218,-0.806672,-1.928627,-2.785721,-7.328044,-7.557858,0.285720,2.187783,-8.122675,-9.458000,-7.697063,-9.431275,-6.931701], dtype = "float32")#candidate|4817|(21,)|const|float32
const_4818 = relay.const([[-0.884768,9.905296,-0.912662,7.828354,4.644600,6.070579,-2.820149,-0.597214,9.710886,3.625369,-7.399836,0.119023,-2.670701,-8.127937,-0.190537,7.409145,4.361803,8.308913,-7.377760,-9.685472],[8.093965,0.540338,6.111719,-9.488473,-8.783590,-8.107000,4.237062,5.406525,7.287367,-1.548733,-5.974012,-7.043088,5.586094,1.921664,3.379062,3.360421,5.361337,-2.058515,-4.987101,2.498084]], dtype = "float32")#candidate|4818|(2, 20)|const|float32
call_4816 = relay.TupleGetItem(func_1903_call(relay.reshape(const_4817.astype('float32'), [3, 1, 7]), relay.reshape(const_4817.astype('float32'), [3, 1, 7]), relay.reshape(const_4818.astype('float32'), [40,]), ), 5)
call_4819 = relay.TupleGetItem(func_1907_call(relay.reshape(const_4817.astype('float32'), [3, 1, 7]), relay.reshape(const_4817.astype('float32'), [3, 1, 7]), relay.reshape(const_4818.astype('float32'), [40,]), ), 5)
func_4726_call = mod.get_global_var('func_4726')
func_4730_call = mutated_mod.get_global_var('func_4730')
const_4835 = relay.const([7.335030,0.267462,-7.613323,-4.088193,5.568607,7.316602,-4.322166,-8.904380,-4.858208,2.857293,0.345935,-0.316770,-8.930145,4.515379,-4.236708,8.837259,5.430398,2.983816,-2.395703,-0.593776,5.834473,-6.898812,-8.112967,-5.950065], dtype = "float32")#candidate|4835|(24,)|const|float32
call_4834 = func_4726_call(relay.reshape(const_4835.astype('float32'), [4, 3, 2]), relay.reshape(const_4835.astype('float32'), [4, 3, 2]), )
call_4836 = func_4726_call(relay.reshape(const_4835.astype('float32'), [4, 3, 2]), relay.reshape(const_4835.astype('float32'), [4, 3, 2]), )
output = relay.Tuple([call_4814,call_4816,const_4817,const_4818,call_4834,const_4835,])
output2 = relay.Tuple([call_4815,call_4819,const_4817,const_4818,call_4836,const_4835,])
func_4838 = relay.Function([], output)
mod['func_4838'] = func_4838
mod = relay.transform.InferType()(mod)
mutated_mod['func_4838'] = func_4838
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4838_call = mutated_mod.get_global_var('func_4838')
call_4839 = func_4838_call()
output = call_4839
func_4840 = relay.Function([], output)
mutated_mod['func_4840'] = func_4840
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4838_call = mod.get_global_var('func_4838')
func_4840_call = mutated_mod.get_global_var('func_4840')
call_4960 = relay.TupleGetItem(func_4838_call(), 3)
call_4961 = relay.TupleGetItem(func_4840_call(), 3)
output = relay.Tuple([call_4960,])
output2 = relay.Tuple([call_4961,])
func_4970 = relay.Function([], output)
mod['func_4970'] = func_4970
mod = relay.transform.InferType()(mod)
mutated_mod['func_4970'] = func_4970
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4970_call = mutated_mod.get_global_var('func_4970')
call_4971 = func_4970_call()
output = call_4971
func_4972 = relay.Function([], output)
mutated_mod['func_4972'] = func_4972
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5037 = relay.var("var_5037", dtype = "int16", shape = (1, 16, 11))#candidate|5037|(1, 16, 11)|var|int16
var_5038 = relay.var("var_5038", dtype = "int16", shape = (3, 16, 11))#candidate|5038|(3, 16, 11)|var|int16
bop_5039 = relay.bitwise_or(var_5037.astype('int16'), var_5038.astype('int16')) # shape=(3, 16, 11)
func_3963_call = mod.get_global_var('func_3963')
func_3966_call = mutated_mod.get_global_var('func_3966')
const_5068 = relay.const([[-1.088062,9.046549,6.521351,4.280374],[-8.030460,7.419042,8.271973,-4.741810],[-2.828346,-9.904367,8.884613,3.647840],[1.399374,0.948737,9.291327,4.334411],[2.461776,-3.327975,2.434891,6.852574],[-5.386089,-7.641616,-2.116110,9.337714],[0.046206,-1.440821,5.770379,-5.564455],[-7.324927,-2.238883,-2.290473,1.227284],[9.262620,-0.855262,-0.103002,-1.094698],[-6.005670,-1.117687,-3.556581,-0.628106],[4.995783,-4.303346,-8.139783,7.092656],[-1.570445,4.290942,-4.551598,-0.043568],[-1.354316,-9.587273,-0.445822,4.328078],[3.088452,7.684320,-9.834529,-6.372427],[-3.743401,-9.211177,1.714770,9.759257],[8.748150,-9.873619,-9.816382,8.516103],[-9.814813,2.565289,4.227767,8.885286],[-9.780326,-4.534362,-8.829644,-8.325594],[3.303994,-9.134650,-1.958866,8.745542],[-1.287829,4.639324,-9.593304,5.802139],[-0.458376,-6.604854,5.942551,9.272537],[-5.512692,-0.626505,-0.199575,-4.323598],[8.122043,-1.617567,-9.725862,-1.735623],[-6.980784,7.540003,-3.605856,7.067148],[5.593300,-1.488954,3.692106,-8.729864],[1.409737,8.894157,0.040841,-8.977370],[-2.241837,8.527103,-8.530671,0.998661],[9.252070,0.968714,9.224391,0.614594],[-9.765479,7.088023,7.738335,-5.134212],[8.927124,-0.640375,5.490322,4.143239],[4.073251,-9.658297,-5.076184,-7.446857],[7.909174,-7.469166,-5.283513,9.221771],[5.682352,6.721088,5.550507,-6.439470],[7.220462,3.690301,4.951823,-4.137950],[5.744529,-0.940251,-8.392587,-7.180109],[-6.800333,-4.416445,-1.102523,-4.267700],[-3.605712,-1.883219,9.812801,-1.137503],[9.600117,5.182648,8.399463,2.638066],[-8.494099,-5.258588,5.498652,-0.505012],[4.490342,-4.578854,2.706206,-5.949922],[-3.223297,8.340242,6.153009,-4.157875],[9.051446,6.710449,7.585468,-8.280678],[-7.514445,-5.574897,1.058207,9.352507],[0.910973,-1.234175,-8.194108,9.555321],[4.440705,-3.555282,-0.637013,6.445178],[-0.612128,-6.320419,8.035656,-6.303790],[-7.703265,2.919798,5.614278,-4.589481],[0.334104,7.469094,9.481053,-6.689497],[3.426444,3.443991,-8.259835,-5.108937],[9.510042,-9.306881,7.649896,-7.836615],[-0.429667,4.780998,9.130412,-7.193570],[-8.553540,-8.454764,-4.424425,-1.954105],[-5.054176,-2.427784,-0.343082,6.636946],[8.695096,-1.821556,-2.205082,-7.810507],[7.224686,5.633399,-9.902889,1.453684],[9.968709,-8.918688,-6.562007,-4.280137],[6.316909,4.218431,4.408078,9.204371],[4.626838,2.856652,0.617028,-4.013900],[8.795258,2.352899,2.359845,-1.447767],[-3.699800,4.192463,7.031232,5.852632],[-6.822475,-8.789864,-5.483706,-4.616153],[8.127287,2.798729,-9.264715,8.889000],[3.304625,1.608034,2.023698,-4.092541],[-1.741863,7.473463,1.619114,-1.340597],[6.586754,1.887048,1.195981,5.686643],[5.773073,8.799045,-0.942206,4.621255],[6.453389,8.341505,-2.511158,-8.510459],[9.823196,-5.283845,4.700221,-1.429985],[1.416850,-3.869986,4.102386,6.200300],[-5.785588,-2.751131,-8.039596,1.591682],[-7.996510,-9.240719,-7.259802,-0.355182],[-6.987162,-8.527140,6.074678,6.049799],[-3.588379,7.712055,5.344038,-8.571967],[3.141918,6.645967,-4.601414,5.693166],[2.984715,3.992615,6.407849,4.260162],[-6.858119,8.055812,-6.211105,-8.902516],[-6.578572,-6.042044,-8.405370,7.843232],[-2.967834,1.727300,8.369703,6.749875],[3.857765,-9.847200,-3.751364,-7.316168],[1.351245,0.049510,-4.002337,-2.266163],[6.083712,4.581946,2.134305,-1.889419],[1.973077,-4.269415,-2.756389,1.190757],[-8.703915,-3.241309,6.258252,1.026964],[-6.659620,-8.491225,-4.812535,9.488375],[2.793471,-7.781198,-0.557707,-9.150801],[-9.434924,-2.346294,3.063354,-5.456565],[-9.906641,-7.498184,-9.407978,-2.582856],[-4.895663,9.969334,-5.039075,3.398543],[0.428703,-3.142257,-5.040812,4.917123],[-1.472680,6.521687,1.361084,9.451247],[3.027854,5.460028,-4.747312,-8.801524],[-1.355190,5.132936,9.167399,5.316563],[-4.499802,-0.728354,-4.208717,-5.275706],[7.115143,-2.562359,7.513710,-3.941552],[-1.171128,-6.522278,-6.543615,7.111946],[0.313247,1.138279,0.993116,5.203602],[-6.263986,-7.770078,-1.146166,8.273615],[8.579953,-5.690926,-1.494884,6.646011],[7.537229,7.553039,-2.383561,-8.289246],[0.955503,-0.393480,-1.435417,0.159756],[5.787506,-5.483392,-2.295186,-1.792037],[1.562113,-4.298908,4.889096,-8.753939],[-0.667528,-5.698902,8.872334,-6.935560],[-3.678349,5.593187,-8.349378,-9.261862],[4.911204,9.280667,-9.120019,8.233785],[4.975224,0.277350,3.218545,6.972011],[0.982879,-2.179189,-3.867298,-8.837304],[-3.504242,-8.308421,-9.741593,-9.077711],[5.963911,6.012413,9.134087,9.434894],[-7.687762,-1.052868,5.096989,5.574208],[4.962647,6.217707,-2.643300,2.838400],[6.533769,-5.096126,-1.335455,4.356507],[-4.003442,3.397772,9.495177,-5.586082],[-1.969554,7.870278,-0.560221,-5.577574],[6.966163,-8.291225,2.331178,-5.980079],[6.126215,-0.127682,1.869577,1.522777],[-4.021756,-2.562098,2.999988,-0.059106],[2.277713,6.945314,-0.214580,1.548340],[8.245550,-7.905893,5.813285,-7.579221],[5.251665,-7.166528,-8.575854,-0.232449],[2.464580,9.509088,-1.289539,-8.773902],[3.777269,6.346449,2.054050,7.613343],[-4.785589,-2.283937,-2.871368,-4.182014],[9.949752,8.714074,-1.189911,4.364069],[-8.016343,5.615724,-6.886736,-9.678410],[4.241135,2.273213,-7.779075,-1.111679],[-8.012154,3.104542,1.457774,-6.286090],[-3.739113,-4.056771,-5.456463,-0.776195],[-6.676651,8.195429,8.048807,6.488275],[8.822110,-1.652255,1.856171,1.452987],[8.873972,5.032883,-8.813864,8.881532],[8.578264,-9.602357,0.516620,-3.887758],[-3.121970,-1.389287,2.457845,-5.543379],[3.002944,-0.578481,2.921671,-1.380787],[-0.598156,0.387920,-2.096856,-7.791872],[1.411863,8.397993,1.605711,-6.980792],[5.942863,-5.420810,-8.798538,6.079182],[2.250382,5.640526,8.779698,1.061334],[9.853297,5.781654,4.197369,3.394382],[-9.887607,-3.072183,-3.938468,5.528355],[6.547185,-9.859849,-3.240329,2.459139],[2.507216,4.232129,4.728504,6.187679],[6.407078,-7.559648,-8.062136,8.936982],[-8.480173,-6.263990,2.390071,-6.889468],[8.508128,-2.450038,-5.675002,2.842832],[-2.015254,1.778635,0.601281,-5.416437],[7.162356,-3.025160,-8.103247,-2.901165],[7.014374,8.025436,-9.606636,4.908670],[-9.915775,1.164266,-0.642204,4.665136],[4.725541,-6.844985,9.028587,-3.171361],[9.781321,-7.815750,-4.288068,-8.026598],[1.566180,-2.434993,9.116473,-1.159708],[-4.574380,-4.194858,-7.112718,1.507059],[-8.057470,6.890818,7.920595,-1.175443],[-8.390325,-5.932840,1.746250,-9.334718],[5.584429,-8.388817,-6.956998,-4.030700],[7.109870,0.976316,-0.511954,4.233377],[-2.117265,-3.428641,-8.908515,-8.684951],[2.665322,-9.616853,5.646555,-7.106131],[0.025919,1.208023,4.702026,-8.876516],[6.751651,-2.766419,6.039163,-6.394522],[-4.787188,5.996395,-6.501375,5.884395],[-6.729917,-3.654338,-8.861687,-8.061045],[-7.840436,-1.507022,-1.928838,-4.628517],[-1.201365,8.040430,-6.339717,-0.039771],[3.829824,-8.586267,2.731487,7.491848],[5.152541,-0.401785,-0.368930,1.721653],[-8.579789,-7.457990,0.223559,-4.634659],[-2.269698,9.034113,-0.422039,9.801295],[1.093917,4.405476,-8.192636,-6.044375],[-1.814525,3.038780,-1.272977,5.322994],[-9.890322,7.814759,-1.652880,-6.527510],[1.179958,-3.432036,1.033483,7.101825],[2.123924,0.382171,-7.345498,5.611365],[-2.416779,4.665197,4.242223,-4.416608],[9.686789,9.873675,8.623078,-6.257270],[9.420390,-7.207386,-3.738631,6.483199],[-0.448745,1.400729,8.121181,-8.134070],[-5.598162,-2.297274,-0.610269,2.884342],[-5.337096,-5.582374,-8.935947,-9.280602],[7.840380,-9.575713,7.338017,7.864158],[0.128092,-5.777910,9.989865,-9.886519],[-9.803787,6.161936,3.995661,-5.385340],[-6.624096,-6.266422,6.857175,-2.635617],[0.089489,0.988679,7.310046,4.443899],[3.839485,4.357740,-1.564488,-1.683956],[-0.872391,4.188726,3.961549,4.143333],[-2.958717,-1.793413,-7.811983,-5.496973],[-1.534247,-2.663035,-0.834040,-0.910818],[5.070925,-7.850931,3.315321,6.840081],[6.384856,-1.924787,-5.315280,-0.457993],[4.945428,0.694820,5.592579,9.155412],[3.301363,8.617398,6.926535,7.875671],[2.910405,-0.053010,8.591701,-1.953926],[5.027612,5.657961,-8.107407,-0.450383],[-2.767703,-1.569202,-1.339548,4.628758],[5.970318,4.027749,-4.976429,-5.343146],[3.487069,3.631561,-5.003705,1.908192],[-8.582566,8.301684,-1.410692,-8.225491],[5.801631,-9.842389,-3.503631,4.522095],[0.434344,0.443986,-3.177365,7.756508],[-8.800199,-7.387901,9.628420,-9.470761],[-1.674801,-1.729786,-7.392680,6.352537],[2.167032,0.153235,-1.547025,-6.925055],[3.197351,4.863247,6.105355,3.068558],[6.440776,-4.018814,2.035802,-0.803239],[-0.785744,-4.832143,8.799964,0.006625],[-0.260512,5.324349,3.398720,-7.641999],[0.470200,-6.646524,-4.240402,-8.353141],[1.140308,-6.169092,-7.005294,-1.470904],[-2.656130,9.711417,7.595492,-1.281740],[1.273483,-5.591567,8.383593,8.059840],[-2.388543,9.126398,-8.731149,6.048693],[-0.557254,-7.008315,-5.971921,-7.863175],[-7.796968,1.603181,-4.556969,0.145601],[6.368744,-5.606143,-5.583850,7.753459],[-1.395825,1.356021,-4.305417,-2.487543],[2.817724,6.035553,-7.367754,-3.676859],[0.240488,-4.318558,4.363490,0.928637],[4.424664,-3.674690,-0.893713,-2.705019],[-4.314769,2.759462,-3.937617,-3.146828],[-0.418065,-6.632833,7.446308,9.037716],[-6.152726,-3.924575,1.567557,-3.688155],[0.328203,-5.336377,-7.894401,-4.128365],[3.680729,8.743521,-9.511119,8.501796],[-3.598479,2.788612,-0.280343,-5.869582],[-2.599520,-9.891661,2.878027,-9.545154],[1.665226,-9.025028,1.634381,0.559098],[-0.673016,3.020570,-9.616923,7.749367],[-3.013448,-9.940248,-8.073332,2.521362],[4.234580,-5.584935,-2.421321,2.399227],[-3.720428,8.726125,8.147960,-4.656254],[6.114859,-1.598209,-2.450461,-0.403670],[-0.205731,9.309244,-5.865220,6.566009],[-8.253154,-8.059963,-9.664977,9.202868],[8.566722,-4.368836,9.948459,-3.902895],[-9.093150,-3.545478,-6.574373,0.937406],[6.337854,7.275079,2.988559,1.824265],[7.410125,-0.298610,2.539087,-8.101484],[-4.732542,9.818495,4.202299,5.398827]], dtype = "float32")#candidate|5068|(240, 4)|const|float32
call_5067 = func_3963_call(relay.reshape(const_5068.astype('float32'), [10, 16, 6]))
call_5069 = func_3963_call(relay.reshape(const_5068.astype('float32'), [10, 16, 6]))
uop_5071 = relay.acos(const_5068.astype('float32')) # shape=(240, 4)
output = relay.Tuple([bop_5039,call_5067,uop_5071,])
output2 = relay.Tuple([bop_5039,call_5069,uop_5071,])
func_5079 = relay.Function([var_5037,var_5038,], output)
mod['func_5079'] = func_5079
mod = relay.transform.InferType()(mod)
var_5080 = relay.var("var_5080", dtype = "int16", shape = (1, 16, 11))#candidate|5080|(1, 16, 11)|var|int16
var_5081 = relay.var("var_5081", dtype = "int16", shape = (3, 16, 11))#candidate|5081|(3, 16, 11)|var|int16
output = func_5079(var_5080,var_5081,)
func_5082 = relay.Function([var_5080,var_5081,], output)
mutated_mod['func_5082'] = func_5082
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4802_call = mod.get_global_var('func_4802')
func_4804_call = mutated_mod.get_global_var('func_4804')
call_5101 = relay.TupleGetItem(func_4802_call(), 0)
call_5102 = relay.TupleGetItem(func_4804_call(), 0)
uop_5126 = relay.log10(call_5101.astype('float32')) # shape=(2, 6, 5)
uop_5128 = relay.log10(call_5102.astype('float32')) # shape=(2, 6, 5)
func_4269_call = mod.get_global_var('func_4269')
func_4272_call = mutated_mod.get_global_var('func_4272')
var_5136 = relay.var("var_5136", dtype = "float64", shape = (480,))#candidate|5136|(480,)|var|float64
var_5137 = relay.var("var_5137", dtype = "float32", shape = (60, 2))#candidate|5137|(60, 2)|var|float32
call_5135 = relay.TupleGetItem(func_4269_call(relay.reshape(var_5136.astype('float64'), [16, 5, 6]), relay.reshape(var_5137.astype('float32'), [6, 20]), ), 1)
call_5138 = relay.TupleGetItem(func_4272_call(relay.reshape(var_5136.astype('float64'), [16, 5, 6]), relay.reshape(var_5137.astype('float32'), [6, 20]), ), 1)
const_5139 = relay.const([[[-4.658217,2.660218,1.875870,1.808287,-3.687826],[-3.760675,5.541077,-4.655330,2.842958,8.647830],[-4.473813,2.005045,-8.495544,-8.845744,3.039816],[0.517241,-6.056789,-9.901216,-8.263718,9.674374],[5.102976,-5.318297,6.085760,-9.141777,6.566469],[1.448836,6.885952,-5.244356,-1.269212,-9.367153]],[[-8.503302,8.558210,7.177387,-5.557445,-0.134805],[-0.817084,-5.261063,-8.160934,1.807073,-5.287117],[-4.276171,1.095757,7.250004,1.411358,-2.054365],[5.405353,-4.314403,5.223075,-5.305186,5.873282],[9.508239,-7.774638,-5.057502,8.429692,0.106697],[-1.389642,-9.729236,5.901986,5.940327,8.002772]]], dtype = "float32")#candidate|5139|(2, 6, 5)|const|float32
bop_5140 = relay.floor_mod(uop_5126.astype('float64'), relay.reshape(const_5139.astype('float64'), relay.shape_of(uop_5126))) # shape=(2, 6, 5)
bop_5143 = relay.floor_mod(uop_5128.astype('float64'), relay.reshape(const_5139.astype('float64'), relay.shape_of(uop_5128))) # shape=(2, 6, 5)
output = relay.Tuple([call_5135,var_5136,var_5137,bop_5140,])
output2 = relay.Tuple([call_5138,var_5136,var_5137,bop_5143,])
func_5153 = relay.Function([var_5136,var_5137,], output)
mod['func_5153'] = func_5153
mod = relay.transform.InferType()(mod)
var_5154 = relay.var("var_5154", dtype = "float64", shape = (480,))#candidate|5154|(480,)|var|float64
var_5155 = relay.var("var_5155", dtype = "float32", shape = (60, 2))#candidate|5155|(60, 2)|var|float32
output = func_5153(var_5154,var_5155,)
func_5156 = relay.Function([var_5154,var_5155,], output)
mutated_mod['func_5156'] = func_5156
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4684_call = mod.get_global_var('func_4684')
func_4686_call = mutated_mod.get_global_var('func_4686')
call_5166 = relay.TupleGetItem(func_4684_call(), 0)
call_5167 = relay.TupleGetItem(func_4686_call(), 0)
func_1950_call = mod.get_global_var('func_1950')
func_1956_call = mutated_mod.get_global_var('func_1956')
const_5169 = relay.const([0.678400,1.181449,9.327921,-9.968655,-7.926495,0.378311,-1.896559,5.236062,-3.843140,2.268860,3.923352,2.454943,-1.741772,-9.855974,9.715501,-7.936448,8.300824,9.778732,0.241637,-1.662845,5.445148,-1.562114,-8.139680,-6.580281,7.116469,-3.012878,-1.531708,2.955236,4.423265,-7.196027,-0.967555,2.538060,-0.676592,6.223103,1.621469,-5.240412], dtype = "float32")#candidate|5169|(36,)|const|float32
const_5170 = relay.const([-7.953548,-5.640632,-6.215789,-1.273224,3.719778,-6.492105,-3.450332,0.348739,7.944097,-3.616163,1.970996,-2.321406,5.038279,-9.691449,2.519448,-1.996510,0.731833,2.579166,-3.776879,-0.753548,5.726731,-3.300360,-3.438884,5.471328,8.354001,2.448005,2.235822,6.490888,-0.399164,5.858943,-4.721318,-3.433817,-4.482477,6.267044,7.826364,-2.870445,-7.851548,-8.515440,1.353514,2.961641,-5.272094,1.496026,-3.249052,-0.385574,-7.645203,-9.961528,-7.635362,-2.821914,-8.980945,0.486980,-3.217159,-5.766677,-2.308534,6.174765,-4.126087,-0.877971,2.412943,-2.549840,-9.397100,7.411659,-9.487224,7.638353,-4.247273,-5.093004,-7.981908,-0.884989,9.351682,3.688426,-6.590127,9.000602,2.669745,3.287472,-0.661631,-2.278651,-4.080447,7.967316,9.872161,5.040142,3.665073,-0.789297,3.098053,-8.777187,-6.576357,7.088615,-1.180960,5.874803,-4.226604,-4.911139,1.491840,-7.056228,-1.652130,-1.149347,-1.738231,2.107072,0.955189,0.759200,5.409309,-6.751207,-3.587201,-7.642875,-9.278330,-6.510905,-4.654042,7.394702,-1.849049,7.914821,-4.087527,-3.177977,-2.708976,-9.066429,-2.668612,-1.627058,9.401046,5.828731,-0.222288,-1.749235,8.341802,-8.426728,7.137339,8.621530,2.879706,2.731361,8.692601,-4.439179,5.406463,8.716024,5.920704,3.527917,-2.454017,-7.058320,-9.924972,-3.076247,5.607361,7.125144,-5.684256,-5.574465,-8.148050,6.281684,-9.732676,5.700003,-2.319363,0.604477,-0.317379,-1.843854], dtype = "float32")#candidate|5170|(144,)|const|float32
const_5171 = relay.const(-9.385804, dtype = "float32")#candidate|5171|()|const|float32
call_5168 = relay.TupleGetItem(func_1950_call(relay.reshape(const_5169.astype('float32'), [12, 1, 3]), relay.reshape(const_5170.astype('float32'), [12, 4, 3]), relay.reshape(const_5171.astype('float32'), []), relay.reshape(call_5166.astype('bool'), [640,]), ), 2)
call_5172 = relay.TupleGetItem(func_1956_call(relay.reshape(const_5169.astype('float32'), [12, 1, 3]), relay.reshape(const_5170.astype('float32'), [12, 4, 3]), relay.reshape(const_5171.astype('float32'), []), relay.reshape(call_5166.astype('bool'), [640,]), ), 2)
var_5206 = relay.var("var_5206", dtype = "float32", shape = (2, 2, 8))#candidate|5206|(2, 2, 8)|var|float32
bop_5207 = relay.minimum(call_5168.astype('uint32'), var_5206.astype('uint32')) # shape=(2, 2, 8)
bop_5210 = relay.minimum(call_5172.astype('uint32'), var_5206.astype('uint32')) # shape=(2, 2, 8)
func_4480_call = mod.get_global_var('func_4480')
func_4483_call = mutated_mod.get_global_var('func_4483')
const_5215 = relay.const([[-3.401842,-7.608862,9.482301,-3.929468,-3.901103,-9.652492,8.271143,8.394108,7.214678],[5.290674,-5.779344,-2.008658,-1.174334,3.303615,7.475026,-6.806544,6.251060,-0.997900],[-1.191135,3.347025,1.551576,3.863218,8.276026,3.279408,-6.312393,-3.676113,4.650311],[6.620743,-8.715650,-7.756010,4.808803,6.433625,9.921395,7.955475,-6.918912,-7.589927],[-7.243683,8.041633,-0.682532,3.654361,0.449578,-1.497435,-1.908309,-4.763876,-9.761411],[-5.261434,8.078436,-5.913522,1.335673,2.332247,0.227087,5.142843,8.959740,8.746622],[-5.881241,-5.676543,-0.313409,-7.925159,-1.951455,6.538051,9.931749,6.921986,6.842680],[5.418796,0.785056,4.164937,3.592003,7.436281,6.741268,-2.277321,3.431717,8.762919],[2.734339,-5.517425,-8.635095,-2.615400,7.875223,-9.877866,-5.383803,5.622294,-8.098276],[-5.561872,0.576515,-0.310065,-5.648831,-5.041233,-1.444270,-8.817266,9.411849,7.834998],[-8.696393,2.826364,5.970878,7.892245,-2.428034,-5.814653,4.382369,-9.660544,-9.906376],[7.680713,4.198477,-1.789932,4.978787,-4.277177,0.453980,-0.508322,2.744192,4.811692],[2.678098,-4.858754,3.736408,0.527119,4.487781,0.242242,-1.245944,4.974562,0.741736],[8.706716,-0.384897,4.552025,-1.926101,4.927940,-4.279328,-8.379382,1.803271,9.136242],[0.897452,0.527211,-2.852836,-4.658048,8.712772,-9.645287,3.097154,4.805166,1.227099],[4.092483,-5.754797,-3.298760,4.560701,3.246631,3.058223,5.100941,8.804700,-4.459764],[-9.973891,-3.324385,-6.020405,-6.406373,3.603342,7.587365,-2.398302,-4.823912,3.351861],[2.580597,7.471844,-8.139249,7.114023,-5.780473,-9.426292,-3.679592,4.810455,9.384050],[-3.788985,-4.652659,5.147998,-5.914736,-0.088952,1.594814,4.747422,8.502899,2.777466],[-1.165444,7.755697,8.949145,5.086270,-2.399787,-2.908295,-1.568189,9.496877,-8.331587],[-8.025221,4.711732,4.100851,-9.214376,2.709754,-2.935008,3.724165,-8.764907,6.539259],[3.922347,2.797357,6.275408,8.475532,-8.410500,-4.730545,7.326508,-4.941150,-7.913283],[7.866117,-3.117465,-9.090742,5.834191,3.445378,-9.114358,2.485360,0.850336,-8.253084],[9.654497,-8.961414,-6.831265,-0.871458,6.965703,-9.877323,6.151927,7.430401,7.148147],[-7.121037,9.296101,-8.586510,-0.126815,5.512677,-4.704092,-8.428848,0.609762,-2.570000],[-8.583191,-9.308405,7.470442,7.119082,-5.272534,-7.371287,-9.273453,7.148028,9.574683],[4.922669,9.146715,4.791889,-0.856153,2.499134,4.051423,-9.832845,8.329394,0.290192],[5.624052,2.156172,5.452681,1.528571,-8.960890,-5.676048,-2.957787,5.878433,-6.869397],[-6.734806,-7.815436,1.702002,1.324683,7.671513,-8.782344,8.675166,4.419890,4.088943],[-7.084984,-1.801342,3.455392,-8.606960,8.038688,-7.248873,6.042067,-9.984376,-4.737892],[9.054137,7.491063,-9.899176,8.064085,-5.616035,-6.899120,-1.486222,-6.929427,8.138816],[7.341817,-4.016167,7.936189,-8.845139,3.289903,3.137966,-1.271308,6.771622,5.500532],[2.448574,6.366073,-8.672516,-5.955916,-9.109580,8.672428,-0.178338,-7.966959,1.757575],[7.615474,-9.158918,9.963656,0.141212,-4.754649,8.383855,-0.615258,-8.446773,-7.112081],[-3.140950,3.365563,-5.874495,-0.058728,9.496022,6.099251,7.724520,2.766547,9.893493],[9.853063,-7.843064,1.002456,2.249250,6.234562,9.958308,-8.331822,-9.184465,-0.151292],[9.675718,9.015140,2.104343,9.716585,-9.218940,-1.010538,6.254501,-2.515075,6.373154],[-5.191951,3.098544,2.769528,2.315498,-8.201664,2.612642,-3.559014,-0.411091,-4.971186],[-2.882709,-8.371282,-4.414596,-6.562808,-7.512897,8.483493,-4.368698,-2.416163,8.399173]], dtype = "float64")#candidate|5215|(39, 9)|const|float64
call_5214 = relay.TupleGetItem(func_4480_call(relay.reshape(const_5215.astype('float64'), [9, 3, 13])), 0)
call_5216 = relay.TupleGetItem(func_4483_call(relay.reshape(const_5215.astype('float64'), [9, 3, 13])), 0)
bop_5222 = relay.maximum(const_5171.astype('uint64'), call_5166.astype('uint64')) # shape=(640,)
bop_5225 = relay.maximum(const_5171.astype('uint64'), call_5167.astype('uint64')) # shape=(640,)
func_1018_call = mod.get_global_var('func_1018')
func_1022_call = mutated_mod.get_global_var('func_1022')
var_5243 = relay.var("var_5243", dtype = "int64", shape = (91, 14))#candidate|5243|(91, 14)|var|int64
call_5242 = relay.TupleGetItem(func_1018_call(relay.reshape(const_5171.astype('int64'), []), relay.reshape(var_5243.astype('int64'), [7, 13, 14]), relay.reshape(call_5166.astype('bool'), [640,]), ), 2)
call_5244 = relay.TupleGetItem(func_1022_call(relay.reshape(const_5171.astype('int64'), []), relay.reshape(var_5243.astype('int64'), [7, 13, 14]), relay.reshape(call_5166.astype('bool'), [640,]), ), 2)
output = relay.Tuple([const_5169,const_5170,bop_5207,call_5214,const_5215,bop_5222,call_5242,var_5243,])
output2 = relay.Tuple([const_5169,const_5170,bop_5210,call_5216,const_5215,bop_5225,call_5244,var_5243,])
func_5246 = relay.Function([var_5206,var_5243,], output)
mod['func_5246'] = func_5246
mod = relay.transform.InferType()(mod)
mutated_mod['func_5246'] = func_5246
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5246_call = mutated_mod.get_global_var('func_5246')
var_5248 = relay.var("var_5248", dtype = "float32", shape = (2, 2, 8))#candidate|5248|(2, 2, 8)|var|float32
var_5249 = relay.var("var_5249", dtype = "int64", shape = (91, 14))#candidate|5249|(91, 14)|var|int64
call_5247 = func_5246_call(var_5248,var_5249,)
output = call_5247
func_5250 = relay.Function([var_5248,var_5249,], output)
mutated_mod['func_5250'] = func_5250
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5260 = relay.var("var_5260", dtype = "float32", shape = (16, 3, 8))#candidate|5260|(16, 3, 8)|var|float32
uop_5261 = relay.rsqrt(var_5260.astype('float32')) # shape=(16, 3, 8)
uop_5265 = relay.erf(uop_5261.astype('float64')) # shape=(16, 3, 8)
output = uop_5265
output2 = uop_5265
func_5282 = relay.Function([var_5260,], output)
mod['func_5282'] = func_5282
mod = relay.transform.InferType()(mod)
mutated_mod['func_5282'] = func_5282
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5283 = relay.var("var_5283", dtype = "float32", shape = (16, 3, 8))#candidate|5283|(16, 3, 8)|var|float32
func_5282_call = mutated_mod.get_global_var('func_5282')
call_5284 = func_5282_call(var_5283)
output = call_5284
func_5285 = relay.Function([var_5283], output)
mutated_mod['func_5285'] = func_5285
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4684_call = mod.get_global_var('func_4684')
func_4686_call = mutated_mod.get_global_var('func_4686')
call_5289 = relay.TupleGetItem(func_4684_call(), 0)
call_5290 = relay.TupleGetItem(func_4686_call(), 0)
output = call_5289
output2 = call_5290
func_5294 = relay.Function([], output)
mod['func_5294'] = func_5294
mod = relay.transform.InferType()(mod)
output = func_5294()
func_5295 = relay.Function([], output)
mutated_mod['func_5295'] = func_5295
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4648_call = mod.get_global_var('func_4648')
func_4650_call = mutated_mod.get_global_var('func_4650')
call_5399 = relay.TupleGetItem(func_4648_call(), 1)
call_5400 = relay.TupleGetItem(func_4650_call(), 1)
output = relay.Tuple([call_5399,])
output2 = relay.Tuple([call_5400,])
func_5414 = relay.Function([], output)
mod['func_5414'] = func_5414
mod = relay.transform.InferType()(mod)
output = func_5414()
func_5415 = relay.Function([], output)
mutated_mod['func_5415'] = func_5415
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4648_call = mod.get_global_var('func_4648')
func_4650_call = mutated_mod.get_global_var('func_4650')
call_5460 = relay.TupleGetItem(func_4648_call(), 2)
call_5461 = relay.TupleGetItem(func_4650_call(), 2)
uop_5463 = relay.atan(call_5460.astype('float64')) # shape=(640,)
uop_5465 = relay.atan(call_5461.astype('float64')) # shape=(640,)
func_2872_call = mod.get_global_var('func_2872')
func_2875_call = mutated_mod.get_global_var('func_2875')
const_5467 = relay.const([0.953300,8.726062,0.231597,-3.960183,-6.064597,-3.318505,-1.580482,0.647358,5.619614,-2.821626,-7.479234,2.189692,0.343617,0.761263,-2.284480,8.118901,0.755964,5.214134,6.311645,1.072690,8.763855,-0.921232,9.119701,-5.632627,-4.675439,2.878498,6.881022,9.763959,3.917811,-6.693786,6.339576,3.736720,-2.263621,-9.099638,-2.156342,9.884930,8.273944,7.650125,9.065889,0.033809,-5.267816,-2.331024,4.217173,9.377145,9.569109,9.317140,7.997021,4.070908,2.396766,3.357232,3.845340,-2.932474,-6.276208,-1.549837,4.334480,5.251735,-0.339150,3.226364,1.537031,-7.543813,-2.882725,6.091388,-5.687300,-0.461237,-3.287690,8.002489,-1.662982,-9.657048,-5.980256,0.395692,0.434950,0.129315,-1.727628,1.440889,4.505114,-2.977097,4.225580,3.657618,-5.182162,-1.458841,6.382928,0.873548,7.088779,-6.631295,-0.727499,4.018642,-8.349685,6.461170,4.063437,-8.891229,6.882937,0.764424,5.862594,-8.412143,-2.083440,-4.576470,8.877039,4.528046,-6.442922,-5.387127,4.652436,-7.613102,-4.624143,5.579047,-8.298737,9.236993,-3.832834,6.896313,6.510007,-1.859331,-9.562031,-7.731644,-4.282162,-0.041505,0.171395,2.333277,-0.113101,5.231085,7.038614,-0.557406,-4.899874,6.765613,-3.230026,-3.564889,7.357677,5.928090,-6.169394,6.482081,-8.545555,3.777797,-0.069990,-3.230149,-5.375614,9.302525,-0.612371,6.128660,9.156560,-2.783654,4.280963,-4.621661,6.440446,-4.492546,9.785741,-1.542836,6.513618,5.725664,-9.481844,-6.154089,2.556050,-7.501981,-6.560511,1.544424,6.248349,4.658379,-1.612097,8.463270,-5.558456,4.962177,1.858046,0.980318,3.140799,-4.846632,-0.676501,-3.212986,-7.992874,-8.113960,3.035299,8.459101,5.583788,8.369446,-5.526917,8.570631,5.906610,-0.327571,-3.209439,8.987979,-4.636006,2.844593,2.020232,8.097535,-3.857815,-9.499006,2.022764,-7.042372,-4.151459,-1.583462,-1.290617,9.006012,0.492712,-5.143259,0.502991,0.294033,0.968309,9.125216,7.585824,8.447914,-0.966009,9.625095,7.648267,-2.885083,8.984772,-7.778705,-3.252948,2.501441,7.914156,9.779431,-5.687219,-1.135891,0.366126,-6.100980,-3.046767,-7.719167,8.223538,-5.445643,-0.188284,-8.378740,-3.026714,2.368872,1.291697,-9.104517,8.236814,6.261870,-1.386750,1.714142,4.465189,-3.181960,4.203049,-6.946987,-5.846161,8.701251,7.805563,8.189427,-4.650155,-8.792052,1.014354,-2.183205,-8.929120,-2.581008,-0.940402,-2.923584,4.521711,8.252578,-0.427040,2.913084,0.365362,2.040102,4.436795,-9.799152,9.117970,2.636958,9.063054,4.901649,4.279263,-5.430920,-4.279454,-8.725431,-3.295310,-0.918645,9.832224,9.180924,4.674452,-4.719255,8.638769,-4.301922,0.882913,-9.661056,-5.404568,2.542469,8.467795,3.632896,-3.710315,-3.969626,0.070616,5.070701,-0.842858,1.039000,4.798456,-5.671301,-4.035572,-0.106562,-2.425757,-2.303094,-1.399930,5.104135,-3.161916,5.944193,-8.450935,2.918370,2.432274,-5.651224,0.947262,3.188910,9.876167,-7.707508,-0.515210,-4.007923,2.335403,5.059788,-5.629785,8.811313,3.525328,7.203729,-8.928856,-2.138959,-3.303589,-6.241429,-5.018927,-5.117468,6.548757,-6.308467,1.420224,7.054562,1.993661,5.833030,7.692553,-4.020506,7.721674,-6.743950,-3.665861,8.798392,8.708699,7.189025,2.411362,-7.975840,-4.078585,6.893880,5.792645,-2.589864,4.919418,-3.366056,-2.959183,-1.712212,-7.122788,-9.426561,8.166983,0.193883,0.105731,-6.505098,4.122933,6.192043,9.597546,6.301866,4.159728,-3.659558,6.118593,5.452233,8.553571,-2.090391,-5.813542,5.286309,-8.647558,1.357428,8.501539,6.240655,-7.936618,-6.429682,3.870070,-2.783290,5.417921,3.956088,8.561694,-1.524524,-8.644346,-1.806342,5.093901,-6.873527,6.057047,7.207223,-8.702228,4.361736,-7.986647,-6.543825,7.691623,-0.449602,2.003875,-9.050839,5.597287,-3.461446,9.142524,-6.124183,-9.943540,-1.350310,-5.259602,-8.917078,-9.570609,1.479775,2.336648,-0.693789,-6.387754,5.396598,6.069759,-3.915662,-7.118696,-8.579879,-3.607626,8.546554,-4.388909,-3.882623,2.454272,6.749656,-3.104698,-4.681869,-6.966394,-4.301264,-2.686921,5.368371,3.525457,-1.120438,-8.761725,8.380814,2.880693,7.793956,2.796741,3.391315,-4.407700,-2.328692,9.572922,-3.209550,-0.165276,4.829880,-7.672509,-9.895757,-0.751258,4.865434,3.418251,1.654923,2.789093,-8.320719,-0.524897,-8.648355,-4.532820,7.412240,4.799490,-0.240887,3.514561,-5.479843,-6.141188,2.009106,1.858445,8.866788,-5.112355,-2.548113,8.519810,-1.884218,-6.487859,-5.856250,1.912188,-2.070691,4.939884,-7.717655,-8.959304,-1.630955,3.103404,-3.054894,-1.266622,-5.054262,-6.587827,6.179907,5.493765,-0.682774,-6.082053,3.856910,-5.238417,-2.867600,-3.217682,-3.261957,-0.553384,7.207017,9.202571,-0.776839,7.239118,-0.718219,2.384381,1.408335,3.945559,-1.997608,-3.785697,6.801940,-9.358041,-9.335411,7.850794,2.633275,0.484273,7.115569,-0.945430,-0.180854,-0.477811,-8.717808,-5.444353,5.959675,8.731868,0.630645,0.222711,-4.389981,9.458371,-1.005324,-1.399263,-1.468467,-0.650658,-4.387279,5.407331,-2.206193,6.194543,-4.118356,-8.492318,0.248239,8.531740,8.791905,2.048493,-8.050767,-0.617325,1.060884,2.447563,-6.880121,-3.088786,-4.611900,4.639349,4.938681,7.553715,1.949220,7.581117,2.210300,1.550318,6.106443,8.473724,3.775655,-6.477162,-0.723107,-5.377182,8.676826,0.173964,6.791472,-8.287286,1.125207,-0.054048,0.732539,7.605138,-1.584599,6.764391,9.395270,-6.500544,-2.395799,-0.928002,-2.564728,8.117639,1.293582,4.519542,-5.234462,2.558890,-6.819753,-5.063415,-9.313219,-1.455469,-4.374770,-5.378626,-9.899320,5.526401,-5.435952,5.755433,-1.893406,-7.980947,5.620388,-6.598580,-8.011019,9.985369,7.986087,-3.420519,5.708621,7.870914,8.426421,-5.204612,-8.613826,-8.058826,7.637447,4.455959,7.946595,4.029550,8.340755,-6.046866,8.125254,-0.940672,7.540364,-3.923768,-8.281156,-8.136726,-3.038129,2.531506,-4.675691,9.353141,-9.123731,-7.094032,-1.154028,-0.672741,6.133507,7.015173,2.442372,-3.826687,7.870370,5.011171,-6.742852,6.203052,-7.368298,8.493642,-0.391702,-6.576827,7.493986,-5.387292,-2.925262,6.818380,5.932348,8.132672,6.119589,8.911183,-3.707761,-9.790285,6.336949,9.455114,-3.668953,-6.436947,4.481786,8.376850,1.306647,5.890203,3.861908,-7.454529,2.272869,0.902790,0.290966,9.114225,3.958226,-6.267613,4.372331,6.061976,-8.232722,8.027759,-5.350112,-7.428026,-5.111864,-3.467635,-9.682658,1.059994,-2.060850,-4.704279,0.172188,8.059381,1.252966,7.722391,-1.842106,3.422152,3.389414,-5.881039,9.092313,6.071844,-4.815889,6.229359,-2.252618,1.742538,9.771174,-1.734146,3.338569,-9.760412,9.713994,-1.910862,-7.369802,-7.258890,-4.956631,6.572453,3.199613,7.921473,-2.553081,8.346043,9.691549,8.372407,-3.373562,-9.412811,-1.425442,2.529200,-1.602278,6.107673,8.314255,-8.666172,-2.322154,9.104067,8.323131,-8.175426,-8.770309,-0.804487,-3.457877,-7.392885,-0.398602,-4.733702,3.163740,-1.994955,4.248076,-0.734076,-6.713395,-1.790735,5.159700,-7.330405,5.468514,-8.685256,-2.171257,6.712608,3.266855,-9.795873,-0.312982,-5.149668,-8.587008,-4.333656,-1.271428,-4.506228,8.883696,5.100829,-1.824303,4.421228,-2.113520,1.977022,9.281105,8.137158,3.417072,-2.130427,3.975761,5.903302,1.062396,9.315535,1.110441,-0.534549,5.026349,2.560649,-8.764827,0.045009,-4.806032,2.974456,2.471294,-5.443388,-2.994619,6.182892,4.148152,6.887649,-8.596387,-6.178838,-2.110911,-7.499594,6.620137,-1.776137,0.713276,-6.036777,-1.786194,9.247913,5.865814,-8.204368,-4.798813,5.663420,5.803328,-2.395516,2.860916,6.336544,-4.061284,7.048215,9.600101,0.516182,8.527821,-0.884876,5.542626,-5.897830,-6.501222,0.885283,-2.964783,-0.129403,6.515973,6.563005,-6.844479,5.463494,-2.947383,-8.921525,-4.831666,-6.198632,9.568215,9.154159,-9.228418,2.656524,9.490121,2.863297,7.500248,2.409166,8.473800,-9.163048,7.855782,-5.142913,-6.020765,6.338616,-2.528155,3.758340,-3.346660,-5.944969,-3.596078,6.432976,-2.665505,0.717200,1.370593,9.116083,4.076607,-1.508434,3.266228,-9.878481,1.719458,-7.610504,-7.725268,9.949902,-6.374620,1.090054,-9.285218,-8.780536,-1.197605,-7.670918,-7.599826,-9.549710,8.255193,-8.159987,0.535220,7.874687,-7.381419,-3.232398,6.306592,-0.194193,8.859637,-3.653284,-2.679017,4.618275,-4.446317,-3.847890,0.873832,-7.456700,0.764315,5.535286,2.979422,9.342403,-3.597550,-5.215706,-2.397191,5.242497,2.840976,4.234272,6.788200,-3.170375,-9.852639,-2.214190,0.602851,9.686149,-6.360512,8.245783,6.788942,3.136778,-7.543628,3.578125,-7.932443,-7.459565,-1.802587,-5.798537,-7.944244,4.413390,1.224975,-9.187575,-0.252708,-6.258164,-0.425965,-2.578789,-9.683084,7.433296,-4.704093,1.045040,-9.843659,-5.113005,8.857065,-2.404172,7.909841,1.150656,3.936558,4.966302,1.302006,-7.223675,0.864142,3.803070,2.761028,-7.818376,6.358819,-3.095690,9.170469,-0.180721,7.244143,0.173212,-6.377387,-5.536787,-1.375619,8.811909,2.511943,-5.871486,-2.881228,-3.429985,-8.269548,7.160199,9.819239,5.442929,-9.793203,4.444947,-2.664837,-5.791087,0.959455,3.205456,-8.536526,0.865533,-1.805624,-3.611416,6.713249,-8.332479,9.259873,9.565989,-7.325445,-3.117696,-3.088569,-0.500462,-8.578832,7.063256,9.580084,6.512299,1.735119,2.799083,-7.986420,4.132154,4.306837,-3.683942,4.053386,0.136348,-3.474026,8.642596,8.649365,-6.436481,-8.992939,-8.913676,-3.850666,-6.084862,-5.763018,7.803887,9.363432,6.408146,6.952611,-6.318971,7.136511,-5.222394,1.980482,9.343013,3.035147,-1.820925,3.144167,-8.142376,-2.349641,-6.475906,-5.196580,-4.734330,-1.289916], dtype = "float64")#candidate|5467|(960,)|const|float64
call_5466 = relay.TupleGetItem(func_2872_call(relay.reshape(const_5467.astype('float64'), [8, 12, 10])), 3)
call_5468 = relay.TupleGetItem(func_2875_call(relay.reshape(const_5467.astype('float64'), [8, 12, 10])), 3)
output = relay.Tuple([uop_5463,call_5466,const_5467,])
output2 = relay.Tuple([uop_5465,call_5468,const_5467,])
func_5469 = relay.Function([], output)
mod['func_5469'] = func_5469
mod = relay.transform.InferType()(mod)
mutated_mod['func_5469'] = func_5469
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5469_call = mutated_mod.get_global_var('func_5469')
call_5470 = func_5469_call()
output = call_5470
func_5471 = relay.Function([], output)
mutated_mod['func_5471'] = func_5471
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5294_call = mod.get_global_var('func_5294')
func_5295_call = mutated_mod.get_global_var('func_5295')
call_5472 = func_5294_call()
call_5473 = func_5294_call()
output = call_5472
output2 = call_5473
func_5494 = relay.Function([], output)
mod['func_5494'] = func_5494
mod = relay.transform.InferType()(mod)
mutated_mod['func_5494'] = func_5494
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5494_call = mutated_mod.get_global_var('func_5494')
call_5495 = func_5494_call()
output = call_5495
func_5496 = relay.Function([], output)
mutated_mod['func_5496'] = func_5496
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5414_call = mod.get_global_var('func_5414')
func_5415_call = mutated_mod.get_global_var('func_5415')
call_5527 = relay.TupleGetItem(func_5414_call(), 0)
call_5528 = relay.TupleGetItem(func_5415_call(), 0)
func_4684_call = mod.get_global_var('func_4684')
func_4686_call = mutated_mod.get_global_var('func_4686')
call_5536 = relay.TupleGetItem(func_4684_call(), 0)
call_5537 = relay.TupleGetItem(func_4686_call(), 0)
uop_5541 = relay.tan(call_5527.astype('float64')) # shape=(8, 5, 16)
uop_5543 = relay.tan(call_5528.astype('float64')) # shape=(8, 5, 16)
func_4838_call = mod.get_global_var('func_4838')
func_4840_call = mutated_mod.get_global_var('func_4840')
call_5544 = relay.TupleGetItem(func_4838_call(), 2)
call_5545 = relay.TupleGetItem(func_4840_call(), 2)
func_638_call = mod.get_global_var('func_638')
func_642_call = mutated_mod.get_global_var('func_642')
call_5548 = relay.TupleGetItem(func_638_call(relay.reshape(call_5536.astype('bool'), [8, 5, 16]), relay.reshape(call_5527.astype('bool'), [8, 5, 16]), ), 1)
call_5549 = relay.TupleGetItem(func_642_call(relay.reshape(call_5536.astype('bool'), [8, 5, 16]), relay.reshape(call_5527.astype('bool'), [8, 5, 16]), ), 1)
const_5574 = relay.const([[[-5.678618,9.996243,2.648653,8.201121,9.108842,5.372596,9.968332,5.558825,7.851170,5.904213,-5.710439,-9.266570,7.835465,7.908735,2.421736,-8.458137],[-0.820564,-5.270375,-0.148519,-4.280626,3.483825,0.993803,5.714119,-3.880693,5.411040,2.187759,-0.838786,-6.547387,6.515882,-1.378369,-1.324713,-4.460558],[6.692515,1.468783,-8.341733,7.949036,9.830041,-0.770417,7.767585,3.251830,2.640658,-7.056680,-1.230187,2.480124,-3.493389,2.701156,-3.333124,-3.748130],[-6.548328,-8.137923,6.150100,-8.696867,-9.968392,9.149911,6.549330,-1.051501,1.063526,-6.398400,-6.736976,2.335676,-8.802578,2.201631,-6.007950,-4.049608],[0.360261,-4.714716,-1.579587,2.809543,1.764680,-3.468637,-6.174115,7.982876,1.067816,3.082726,4.187820,-3.309094,9.109148,5.922762,8.013193,-4.166316]],[[-2.083767,-8.346379,-9.197827,3.411260,-5.637263,-3.307348,1.255375,4.802435,-0.007813,-9.324488,0.265313,7.623045,-8.682287,3.000949,-7.791684,0.153801],[-9.450767,2.390981,8.236609,-5.334115,-9.500792,-6.857945,2.325317,-6.182729,5.526885,3.349469,1.544829,3.249865,8.045363,-2.361164,0.360324,-7.302258],[1.151134,-7.418142,1.018990,-2.197457,1.211153,9.924297,-2.328339,-1.286593,-2.714326,5.456855,-9.789353,7.374927,1.254160,3.541809,1.121399,-4.382949],[4.717019,-5.161635,5.738004,-3.534079,5.185752,8.557118,8.344264,0.080606,-2.878046,-3.397217,-8.975786,-1.361371,7.538072,-1.564677,-2.406925,9.580414],[2.095009,-2.761254,-2.430744,1.662666,-9.038871,-2.046563,1.330534,1.421617,-2.876148,-0.708911,9.349647,-2.229685,3.440639,-5.893174,4.209183,5.007333]],[[1.493162,6.864395,9.817774,8.340439,-1.972727,7.598057,-6.426084,7.307870,-4.244321,3.202056,-2.514199,-8.064588,-9.169449,2.536624,-3.684673,-2.997376],[-6.455445,-6.054098,-0.334023,6.557298,5.667406,-6.049455,1.611232,-8.088647,-6.825315,-6.319484,0.722950,-7.938827,3.680361,3.401659,-2.103969,6.766517],[3.050541,-1.441215,0.301584,-5.494991,8.072839,-0.058939,-8.411285,-6.973780,-3.548572,-4.034588,-5.862335,6.917521,-3.338710,4.252443,-2.850213,-6.861068],[-8.499646,-8.455088,-1.832046,-1.721065,7.084795,6.221465,9.973298,-0.719036,-5.412925,2.487149,0.119679,-2.644372,6.762029,6.342924,-8.783266,-6.049913],[-0.072891,-3.491868,4.691351,-3.320880,-8.820261,3.718258,-1.581139,2.142466,-4.295632,2.185310,-4.087211,9.671045,1.364348,0.804470,-9.682875,8.890736]],[[-6.865156,-6.208690,-2.458937,8.261395,-6.966079,8.792732,-8.888694,0.661671,3.086674,4.622106,-4.605710,-2.991242,0.765532,4.996433,4.682837,-7.009705],[-7.704956,6.603783,-4.781188,9.027937,2.249840,5.650374,-5.318239,-7.103107,5.153301,0.430282,9.552401,8.021176,9.540671,-1.733308,1.368587,0.414596],[1.281497,4.949802,0.819194,-8.521940,3.050473,-4.538608,-0.367582,2.017443,-8.973904,5.045525,-3.954053,-1.471874,1.285240,-4.982669,-5.231273,1.788143],[1.667683,8.163149,7.629744,9.930412,0.854618,-7.154613,3.726847,5.133374,-7.550489,8.768288,8.231675,0.322707,-6.798285,-9.158299,6.409382,2.193117],[-2.792173,6.373985,-1.163236,-2.151348,-9.035882,-3.481331,-9.300235,-3.369736,-3.391404,-1.093831,9.270935,7.483793,6.321403,-2.742219,9.078912,0.343915]],[[-8.012478,0.310747,-2.604419,-0.250325,6.139907,-7.525823,-2.326168,-5.431674,-0.927482,3.811435,-8.782027,1.750840,-1.790621,-1.371452,1.041582,9.585862],[-6.885980,9.149926,-0.987296,-4.465129,-6.154256,4.745668,5.125810,4.351931,-3.660262,4.279671,2.221729,4.958649,2.781742,2.381360,3.240876,-8.608855],[-4.840713,-0.567916,-1.795389,-5.493827,4.782046,5.513223,3.436602,-2.713917,8.690403,0.343994,4.998871,-8.029233,-9.974697,1.269191,-8.605619,-9.322864],[0.606441,5.796023,0.746431,-4.472139,-3.086924,8.762071,5.903630,4.301747,3.115727,0.689665,5.047896,2.584476,-4.223402,-8.820318,0.982012,8.727008],[1.738557,-2.172084,-9.145028,-2.981546,-9.598907,-7.972276,4.328550,4.650046,-4.370218,3.235340,-8.719883,-4.180585,-8.223598,-1.779864,2.897857,-5.021030]],[[-6.817864,0.957437,-3.924739,1.328190,2.604857,-6.312354,-9.406428,4.877032,-1.613430,-1.685960,-2.521749,3.524565,7.133656,-5.539290,1.085041,-9.173284],[2.827647,-5.339065,2.606558,-2.002023,-3.451118,7.359736,-5.834843,7.725385,-7.270633,-9.883895,-8.521651,8.491247,0.438330,-8.951203,-5.242697,-0.381102],[-8.458816,8.674186,8.169728,-4.286539,-9.503302,-1.719973,2.549277,-2.397499,5.108504,-6.053709,-1.409706,-9.809790,6.182466,2.094959,4.365420,7.775098],[-3.446157,5.896927,-6.726788,6.183443,0.964419,-7.941482,-2.000803,-5.072064,4.326390,6.131458,-5.276023,3.093206,4.997072,-6.562389,-0.904466,-7.854963],[-5.089617,-8.907511,-0.712446,-7.707168,3.671368,-6.405942,3.709511,-1.495617,7.590669,-6.720142,3.691972,0.967659,-6.627101,2.169257,1.040953,-9.680434]],[[6.666288,-8.097324,-0.851492,6.954481,4.810210,6.664712,2.016123,4.338374,-7.111511,-9.837262,8.728318,-8.248895,8.383395,6.523917,3.799698,2.883394],[-3.573295,-6.976900,-4.411263,2.115601,2.090632,-3.392333,-5.882776,1.912641,5.168168,-2.451029,2.665538,3.905504,-1.676492,9.360251,-6.162524,-6.614933],[6.188348,2.616291,-2.459338,8.691991,-2.558201,-8.802022,-4.365694,8.445745,-1.558658,-2.196692,-6.390671,-5.754186,-5.853602,-2.802131,-2.578573,-0.533633],[-5.855849,6.098327,-8.997644,-3.251596,-4.959268,8.814062,4.223415,1.316376,-1.803221,2.395972,2.049167,5.562788,-3.398128,-5.453887,-2.571354,-9.815865],[-4.998661,0.203839,-5.604991,9.318368,0.523558,6.470492,7.000219,-5.671210,1.105630,-0.235237,0.962414,-2.374640,-9.205874,9.438580,0.808004,2.395996]],[[4.421456,-3.133628,-5.955269,3.221406,-6.509065,-4.210169,7.413871,0.691531,8.206503,4.362384,9.136227,-8.568096,-8.576219,-9.500468,5.355625,5.675250],[5.824709,-8.915843,-9.260072,9.140284,1.083123,-2.740690,-3.501175,0.867141,-0.022691,-9.369015,-8.845375,2.130355,-0.056248,2.012770,1.956569,4.831203],[-9.024447,-7.858272,0.346098,-9.962680,-6.387105,8.363940,-8.462627,-4.364776,3.875733,1.789156,0.435660,-8.015697,-6.649259,5.943419,-4.916659,-0.628126],[-6.539630,1.081242,-3.457112,-6.730878,8.652671,9.509074,-9.711751,-6.903515,2.561285,-3.465215,-1.602705,-1.826075,-3.481989,-8.669013,-9.879289,9.510339],[8.379986,-6.868867,-2.003273,-0.790800,-1.971947,-2.398759,6.011405,-7.217452,-0.101346,2.978086,6.441160,8.573278,3.485845,0.398611,9.767963,8.406102]]], dtype = "float64")#candidate|5574|(8, 5, 16)|const|float64
bop_5575 = relay.bitwise_and(uop_5541.astype('int32'), relay.reshape(const_5574.astype('int32'), relay.shape_of(uop_5541))) # shape=(8, 5, 16)
bop_5578 = relay.bitwise_and(uop_5543.astype('int32'), relay.reshape(const_5574.astype('int32'), relay.shape_of(uop_5543))) # shape=(8, 5, 16)
func_1274_call = mod.get_global_var('func_1274')
func_1276_call = mutated_mod.get_global_var('func_1276')
const_5580 = relay.const([-4.313866,-7.310574,0.229847,4.656706,2.610325,-5.434149,-4.366725,-7.509134,-5.521157,-1.757006,1.440780,2.222686,-7.117494,-2.557932,9.424555,1.653370,1.825012,-4.804012,-6.440105,4.319830,0.790337,-3.470755,-1.928207,7.386276,-4.130828,-5.772935,8.124718,-5.307244,8.795356,-8.014022,-6.810751,-1.243209,2.570820,-5.531825,-3.008321,-9.030996,4.265060,1.677024,8.256799,-5.586117,9.591240,7.224094,0.593534,-7.940164,8.127416,4.564889,-4.565274,4.978071,-2.816078,5.285796,4.595626,-0.559882,-2.943196,-9.668949,-4.091605,-2.458397,6.639332,8.510326,0.800089,-7.422947,-8.258016,-6.833647,7.543994,-1.900066,5.681813,0.522727,6.428156,0.665868,1.514262,-7.144555,8.982919,8.269383,-2.108995,2.066381,-0.815760,-2.821633,8.879772,4.981017,-5.470506,-6.844041,8.229663,0.356760,-7.724336,3.141216,-0.873524,8.504152,-9.421957,0.560217,5.421229,-9.389698,-2.042204,-1.425142,8.951320,-6.965070,-1.960746,7.435858,-3.650397,-0.734896,3.597552,2.602193,7.066596,6.281656,9.312869,9.689023,3.836131,9.790825,-4.892031,0.579277,5.620399,-3.731515,4.237391,-5.260092,-5.261274,-6.697806,-2.807729,2.350897,-4.072870,1.986065,2.455563,7.220722,-3.131097,-1.986218,-2.505183,-4.492029,-8.662715,6.789094,-5.229231,2.534021,7.571040,-8.029267,9.898731,4.542364,0.124474,-7.754958,7.379153,0.894038,-8.883660,2.749007,-6.803272,-8.920661,-8.567051,-2.943480,4.126093,6.333185,4.525123,-1.939216,6.821877,-8.765202,-0.347256,-7.017595,-1.807047,7.673140,5.688291,-2.931605,-7.361556,-3.918123,-4.100905,9.404645,8.230475,-1.577320,1.629816,5.044850,2.523622,6.933562,-6.634031,1.798233,8.595846,9.550528,1.845394,-4.658309,8.745215,-9.099189,6.685938,2.211396,-9.194029,0.704311,3.762059,5.811608,5.927988,-0.772795,-8.332192,-7.481364,6.011411,-1.730116,1.086761,-4.858151,-1.149959,3.268732,9.454963,-4.903864,-4.730206,1.558326,-8.591017,-4.886557,9.421458,-0.126297,8.476807,3.019593,-6.539705,2.088131,1.496406,-1.659739,1.464720,8.313853,2.274242,-1.757253,-5.172258,2.956003,-9.625833,-2.799541,-5.038991,5.758318,5.757301,-3.834916,1.598335,-6.667699,-1.842275,-2.818391,-2.888972,-6.641987,1.269932,6.976756,-5.367657,-6.855737,5.271336,-7.458913,1.345578,7.332700,-7.956714,7.969644,7.759466,-5.940590,-9.928848,4.264710,4.220086,-0.741098,9.171445,-2.182928,-8.128279,-2.994515,0.118051,-5.589228,3.526464,1.577008,3.749627,0.192902,-5.719486,-1.138128,-2.965624,1.689990,9.797737,-5.292907,-3.876677,-4.489139,2.463763,-6.551695,6.212528,-8.028976,-3.253021,7.188212,-0.637580,-1.228298,-5.406396,0.209692,1.686689,-4.859074,0.928983,5.617052,7.215862,-1.922901,-5.342710,2.417833,8.824518,-5.009467,-0.432748,-2.633561,-8.439761,8.222744,9.453543,1.362598,-7.347132,-5.806482,-4.716935,4.824049,0.115348,2.482728,-2.395982,-8.145675,-1.393849,7.090255,-0.966573,9.178420,-7.752887,9.841094,4.101628,-1.383073,8.847021,4.708839,-3.202923,3.799685,5.783645,-1.601994,-0.440461,1.081193,1.241986,3.635925,-4.861132,8.742046,2.508868,3.897031,7.208235,-3.025569,-8.015527,9.243183,-2.101341,-0.003306,5.979689,6.468656,7.845933,-1.946892,3.768511,-2.793435,-2.786430,8.234138,8.102450,-5.771111,-7.543616,7.238098,7.831726,-0.688199,0.513100,2.293592,8.688753,-3.994227,4.857673,6.521331,-1.350055,6.213862,8.563258,9.202060,8.114233,-4.099403,-1.326383,-9.833118,-9.827932,-3.271847,8.854782,-5.229718,-2.630563,-6.222856,1.513144,7.941918,8.223733,-0.462267,1.041847,5.773690,2.285758,-7.172063,3.380646,9.480300,8.186878,-4.105628,7.144456,9.546370,9.780763,-6.578987,-4.308439,2.906842,-5.164398,-8.755742,4.442716,-9.168070,1.003108,-1.238625,9.770610,-8.748001,8.075435,1.574454,4.805174,7.734909,-3.174677,9.180848,9.961292,8.012616,-3.345748,6.518882,3.515256,9.671156,-6.622849,-3.841868,0.522714,2.201559,4.640657,-9.536104,9.624579,4.673924,8.423672,-6.623322,9.190482,-3.020115,-4.359084,6.223397,4.836396,-3.618919,0.866612,3.933677,-5.018338,7.686876,9.992643,-9.284398,9.658816,5.140906,0.490964,9.671333,8.351446,-6.278605,3.505618,9.464999,-8.450565,1.015385,-7.426420,7.634750,2.707221,-3.444686,-0.336762,6.660362,0.582088,-4.470312,6.112056,7.141859,9.691479,-5.296537], dtype = "float64")#candidate|5580|(432,)|const|float64
call_5579 = func_1274_call(relay.reshape(const_5580.astype('float64'), [6, 12, 6]))
call_5581 = func_1274_call(relay.reshape(const_5580.astype('float64'), [6, 12, 6]))
output = relay.Tuple([call_5536,call_5544,call_5548,bop_5575,call_5579,const_5580,])
output2 = relay.Tuple([call_5537,call_5545,call_5549,bop_5578,call_5581,const_5580,])
func_5586 = relay.Function([], output)
mod['func_5586'] = func_5586
mod = relay.transform.InferType()(mod)
output = func_5586()
func_5587 = relay.Function([], output)
mutated_mod['func_5587'] = func_5587
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4802_call = mod.get_global_var('func_4802')
func_4804_call = mutated_mod.get_global_var('func_4804')
call_5590 = relay.TupleGetItem(func_4802_call(), 0)
call_5591 = relay.TupleGetItem(func_4804_call(), 0)
func_4838_call = mod.get_global_var('func_4838')
func_4840_call = mutated_mod.get_global_var('func_4840')
call_5597 = relay.TupleGetItem(func_4838_call(), 2)
call_5598 = relay.TupleGetItem(func_4840_call(), 2)
var_5610 = relay.var("var_5610", dtype = "float64", shape = (2, 6, 5))#candidate|5610|(2, 6, 5)|var|float64
bop_5611 = relay.subtract(call_5590.astype('int8'), relay.reshape(var_5610.astype('int8'), relay.shape_of(call_5590))) # shape=(2, 6, 5)
bop_5614 = relay.subtract(call_5591.astype('int8'), relay.reshape(var_5610.astype('int8'), relay.shape_of(call_5591))) # shape=(2, 6, 5)
output = relay.Tuple([call_5597,bop_5611,])
output2 = relay.Tuple([call_5598,bop_5614,])
func_5615 = relay.Function([var_5610,], output)
mod['func_5615'] = func_5615
mod = relay.transform.InferType()(mod)
var_5616 = relay.var("var_5616", dtype = "float64", shape = (2, 6, 5))#candidate|5616|(2, 6, 5)|var|float64
output = func_5615(var_5616)
func_5617 = relay.Function([var_5616], output)
mutated_mod['func_5617'] = func_5617
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5689 = relay.var("var_5689", dtype = "float32", shape = (14, 6, 12))#candidate|5689|(14, 6, 12)|var|float32
uop_5690 = relay.log(var_5689.astype('float32')) # shape=(14, 6, 12)
output = relay.Tuple([uop_5690,])
output2 = relay.Tuple([uop_5690,])
func_5693 = relay.Function([var_5689,], output)
mod['func_5693'] = func_5693
mod = relay.transform.InferType()(mod)
var_5694 = relay.var("var_5694", dtype = "float32", shape = (14, 6, 12))#candidate|5694|(14, 6, 12)|var|float32
output = func_5693(var_5694)
func_5695 = relay.Function([var_5694], output)
mutated_mod['func_5695'] = func_5695
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5718 = relay.const(2, dtype = "int64")#candidate|5718|()|const|int64
var_5719 = relay.var("var_5719", dtype = "int64", shape = (1, 6))#candidate|5719|(1, 6)|var|int64
bop_5720 = relay.logical_xor(const_5718.astype('int64'), var_5719.astype('int64')) # shape=(1, 6)
output = relay.Tuple([bop_5720,])
output2 = relay.Tuple([bop_5720,])
func_5724 = relay.Function([var_5719,], output)
mod['func_5724'] = func_5724
mod = relay.transform.InferType()(mod)
mutated_mod['func_5724'] = func_5724
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5725 = relay.var("var_5725", dtype = "int64", shape = (1, 6))#candidate|5725|(1, 6)|var|int64
func_5724_call = mutated_mod.get_global_var('func_5724')
call_5726 = func_5724_call(var_5725)
output = call_5726
func_5727 = relay.Function([var_5725], output)
mutated_mod['func_5727'] = func_5727
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4838_call = mod.get_global_var('func_4838')
func_4840_call = mutated_mod.get_global_var('func_4840')
call_5729 = relay.TupleGetItem(func_4838_call(), 5)
call_5730 = relay.TupleGetItem(func_4840_call(), 5)
output = relay.Tuple([call_5729,])
output2 = relay.Tuple([call_5730,])
func_5732 = relay.Function([], output)
mod['func_5732'] = func_5732
mod = relay.transform.InferType()(mod)
mutated_mod['func_5732'] = func_5732
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5732_call = mutated_mod.get_global_var('func_5732')
call_5733 = func_5732_call()
output = call_5733
func_5734 = relay.Function([], output)
mutated_mod['func_5734'] = func_5734
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5469_call = mod.get_global_var('func_5469')
func_5471_call = mutated_mod.get_global_var('func_5471')
call_5748 = relay.TupleGetItem(func_5469_call(), 2)
call_5749 = relay.TupleGetItem(func_5471_call(), 2)
func_2872_call = mod.get_global_var('func_2872')
func_2875_call = mutated_mod.get_global_var('func_2875')
call_5751 = relay.TupleGetItem(func_2872_call(relay.reshape(call_5748.astype('float64'), [8, 12, 10])), 1)
call_5752 = relay.TupleGetItem(func_2875_call(relay.reshape(call_5748.astype('float64'), [8, 12, 10])), 1)
output = relay.Tuple([call_5748,call_5751,])
output2 = relay.Tuple([call_5749,call_5752,])
func_5755 = relay.Function([], output)
mod['func_5755'] = func_5755
mod = relay.transform.InferType()(mod)
mutated_mod['func_5755'] = func_5755
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5755_call = mutated_mod.get_global_var('func_5755')
call_5756 = func_5755_call()
output = call_5756
func_5757 = relay.Function([], output)
mutated_mod['func_5757'] = func_5757
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4838_call = mod.get_global_var('func_4838')
func_4840_call = mutated_mod.get_global_var('func_4840')
call_5758 = relay.TupleGetItem(func_4838_call(), 2)
call_5759 = relay.TupleGetItem(func_4840_call(), 2)
uop_5762 = relay.acosh(call_5758.astype('float32')) # shape=(21,)
uop_5764 = relay.acosh(call_5759.astype('float32')) # shape=(21,)
func_4802_call = mod.get_global_var('func_4802')
func_4804_call = mutated_mod.get_global_var('func_4804')
call_5766 = relay.TupleGetItem(func_4802_call(), 0)
call_5767 = relay.TupleGetItem(func_4804_call(), 0)
uop_5770 = relay.sqrt(uop_5762.astype('float32')) # shape=(21,)
uop_5772 = relay.sqrt(uop_5764.astype('float32')) # shape=(21,)
func_2234_call = mod.get_global_var('func_2234')
func_2238_call = mutated_mod.get_global_var('func_2238')
var_5774 = relay.var("var_5774", dtype = "float64", shape = (70,))#candidate|5774|(70,)|var|float64
const_5775 = relay.const([False,False,False,False,False,False,True,False,True,True,True,False,True,False,True,True,False,False,False,True,True,False,False,False,True,True,False,True,True,True,True,True,True,True,False,True,True,True,True,False,False,False,False,True,True,False,False,True,False,True,False,False,True,False,False,False,True,True,True,False,False,False,False,True,False,False,False,True,True,False,False,False,False,False,True,True,False,False,True,True,True,True,True,False,False,True,False,True,False,False,False,False,False,False,True,False,False,False,False,True,False,False,True,False,False,True,False,True,True,True,False,False,False,True,False,False,False,False,False,True,False,False,True,True,False,True,True,False,True,True,True,True,True,True,True,False,False,True,True,True,False,True,True,True,False,True,True,False,True,True,True,False,True,True,True,True,False,False,True,True,False,True,False,True,False,True,True,False,True,False,True,True,True,False,False,True,True,False,False,False,True,True,False,True,False,True,False,False,False,False,True,False,True,True,True,True,True,True,True,False,True,False,True,True,False,False,False,True,False,False,True,True,False,False,False,False,True,True,True,True,True,False,True,False,False,True,True,True,False,False,True,True,False,False,False,False,False,True,True,False,True,False,False,True,False,False,False,False,True,True,True,False,True,True,False,True,False,True,False,False,True,True,True,True,False,False,True,False,True,False,True,False,True,True,False,True,True,False,True,True,True,True,True,False,False,False,False,False,True,False,False,True,False,True,False,False,True,False,False,False,False,True,True,True,False,True,True,False,True,False,True,False,True,False,False,True,False,False,True,False,True,True,True,True,True,True,True,False,True,True,True,False,True,False,True,True,True,False,True,False,True,False,False,False,True,False,False,True,True,True,True,False,True,False,True,False,False,False,False,True,True,True,True,False,True,True,False,False,True,True,False,False,False,False,True,True,True,True,False,False,False,False,False,True,False,True,True,False,True,False,False,False,True,True,True,True,False,True,True,False,False,False,False,False,False,True,True,True,False,False,True,True,False,True,False,False,False,False,True,True,False,True,False,True,False,True,False,True,False,False,True,False,False,True,True,False,True,False,False,True,False,True,False,False,True,True,True,True,True,False,True,True,True,True,False,True,False,True,False,False,True,True,False,True,True,True,True,False,False,True,True,False,True,False,True,False,True,False,True,False,False,False,True,True,True,True,False,True,False,True,True,True,False,False,False,True,True,False,True,True,True,True,False,False,True,True,False,False,True,False,False,True,False,True,False,False,False,False,True,True,True,True,False,False,True,True,True,False,True,True,False,False,False,False,True,True,True,True,True,False,True,True,True,False,False,True,False,False,True,True,True,True,False,False,True,True,True,False,False,False,True,False,False,True,False,True,False,True,True,True,True,False,False,False,False,False,True,False,True,False,False,False,True,False,False,False,False,True,True,False,True,False,False,False,False,False,True,False,True,False,False,False,True,False,False,True,True,True,False,False,True,False,False,True,False,True,True,False,False,False,False,False,True,False,False,True,False,True,True,True,False,True,True,True,False,True,False,True,False,False], dtype = "bool")#candidate|5775|(640,)|const|bool
call_5773 = relay.TupleGetItem(func_2234_call(relay.reshape(var_5774.astype('float64'), [10, 1, 7]), relay.reshape(const_5775.astype('bool'), [320, 2]), relay.reshape(var_5774.astype('float64'), [10, 1, 7]), ), 0)
call_5776 = relay.TupleGetItem(func_2238_call(relay.reshape(var_5774.astype('float64'), [10, 1, 7]), relay.reshape(const_5775.astype('bool'), [320, 2]), relay.reshape(var_5774.astype('float64'), [10, 1, 7]), ), 0)
output = relay.Tuple([call_5766,uop_5770,call_5773,var_5774,const_5775,])
output2 = relay.Tuple([call_5767,uop_5772,call_5776,var_5774,const_5775,])
func_5804 = relay.Function([var_5774,], output)
mod['func_5804'] = func_5804
mod = relay.transform.InferType()(mod)
mutated_mod['func_5804'] = func_5804
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5805 = relay.var("var_5805", dtype = "float64", shape = (70,))#candidate|5805|(70,)|var|float64
func_5804_call = mutated_mod.get_global_var('func_5804')
call_5806 = func_5804_call(var_5805)
output = call_5806
func_5807 = relay.Function([var_5805], output)
mutated_mod['func_5807'] = func_5807
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4838_call = mod.get_global_var('func_4838')
func_4840_call = mutated_mod.get_global_var('func_4840')
call_5870 = relay.TupleGetItem(func_4838_call(), 4)
call_5871 = relay.TupleGetItem(func_4840_call(), 4)
output = relay.Tuple([call_5870,])
output2 = relay.Tuple([call_5871,])
func_5893 = relay.Function([], output)
mod['func_5893'] = func_5893
mod = relay.transform.InferType()(mod)
mutated_mod['func_5893'] = func_5893
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5893_call = mutated_mod.get_global_var('func_5893')
call_5894 = func_5893_call()
output = call_5894
func_5895 = relay.Function([], output)
mutated_mod['func_5895'] = func_5895
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4970_call = mod.get_global_var('func_4970')
func_4972_call = mutated_mod.get_global_var('func_4972')
call_5896 = relay.TupleGetItem(func_4970_call(), 0)
call_5897 = relay.TupleGetItem(func_4972_call(), 0)
func_2681_call = mod.get_global_var('func_2681')
func_2683_call = mutated_mod.get_global_var('func_2683')
const_5905 = relay.const([5,6,-9,-8,8,-9,-6,-9,-4,7,-10,6,-8,6,2,-5,-7,10,1,-9,7,4,-6,4,-3,-3,5,-3,-10,2,-6,2,9,-9,10,-9,-5,8,7,-3,-4,-5,6,1,-5,-1,-9,-4,4,9,1,-1,-3,10,-3,-2,9,-6,-5,4,-10,-1,-5,7,8,3,6,-8,3,10,-10,2,2,-8,-5,-7,5,-3,-10,-10,-8,8,7,2,-3,-5,-9,-4,-7,9,3,8,-1,8,1,2,3,1,7,9,8,-2,-2,-9,7,10,4,-5,9,8,3,9,-1,3,6,5,7,4,-4,-8,-8,8,-8,-7,-8,7,7,7,-10,6,-4,3,-8,3,-7,2,3,9,5,-8,-5,6,5,-9,-6,1,6,1,9,6,7,3,-8,-1,10,-7,6,-6,9,-6,-10,4,10,-10,9,7,1,-6], dtype = "int8")#candidate|5905|(168,)|const|int8
call_5904 = func_2681_call(relay.reshape(const_5905.astype('int8'), [7, 2, 12]))
call_5906 = func_2681_call(relay.reshape(const_5905.astype('int8'), [7, 2, 12]))
output = relay.Tuple([call_5896,call_5904,const_5905,])
output2 = relay.Tuple([call_5897,call_5906,const_5905,])
func_5925 = relay.Function([], output)
mod['func_5925'] = func_5925
mod = relay.transform.InferType()(mod)
output = func_5925()
func_5926 = relay.Function([], output)
mutated_mod['func_5926'] = func_5926
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5973 = relay.const(-2, dtype = "uint8")#candidate|5973|()|const|uint8
const_5974 = relay.const([[[-9,-4,9,7,-8,5,10,-7,-9,-8,1,4],[-2,-8,9,6,-5,5,2,7,-7,-7,4,-9],[9,4,9,3,6,10,-5,3,7,-4,-2,-10],[3,7,3,2,3,-1,-4,6,6,-5,-4,-1],[-6,9,3,-6,-9,6,9,4,-6,4,1,-9],[-8,10,-5,-3,3,9,-5,6,8,-8,2,8],[-8,9,4,10,4,-6,-10,-2,-2,3,-7,-1],[-3,-3,10,-4,-6,2,10,-4,2,5,-10,7],[9,-9,-8,-3,-1,7,-8,2,1,3,-7,-8],[-6,5,2,-8,-1,-9,-9,-2,-1,-2,10,-2],[-9,4,2,7,9,-6,3,3,-10,6,7,8],[9,-4,5,1,10,1,9,2,1,8,1,-9],[4,-10,3,8,9,10,9,-7,-7,3,-8,6],[10,-3,-5,-1,8,-1,-1,-5,-2,-4,6,-10]],[[-2,1,-7,-7,-10,7,5,-6,9,-5,10,-1],[-5,-3,-8,6,-7,8,-3,-10,-7,8,-7,4],[6,8,-1,8,6,9,-6,2,1,9,6,6],[-8,-5,3,-5,-3,4,-2,2,-6,1,-3,7],[-4,-7,-6,4,-9,1,10,-2,-8,7,-1,-9],[-9,10,3,7,4,8,8,3,2,-1,9,7],[10,-7,-2,-9,-9,4,-6,1,-6,-9,-10,-4],[-6,5,10,3,6,10,-8,-3,-8,1,8,6],[-1,-10,7,5,1,-1,4,1,-7,1,2,4],[-9,-7,-5,2,-8,-8,8,-10,-5,-10,-6,8],[3,-9,-1,6,6,-8,-6,8,3,-1,-1,-10],[2,3,4,-1,1,4,3,-4,5,1,-2,-5],[8,6,7,-6,-9,-6,2,-1,-9,7,-5,2],[-4,-1,-5,1,-4,-3,-6,-9,7,7,-5,2]],[[-3,8,1,10,-3,2,-9,1,2,2,10,3],[9,9,-8,9,-2,-1,-7,8,2,-9,-3,-4],[-4,-10,-10,-4,-3,-2,-3,-6,8,-8,8,6],[-4,-1,-5,1,-3,-4,6,-1,-10,-3,6,8],[5,-10,1,-3,8,3,10,3,-7,-8,4,1],[4,8,3,5,-1,-1,10,-9,-9,-4,-6,-4],[-3,-3,2,4,10,-8,-8,-9,10,3,-5,8],[5,-2,-8,-2,-7,-9,-1,-8,3,-1,1,-3],[-3,10,-9,1,2,-4,8,-1,-1,7,-3,2],[-1,8,5,4,8,-4,-4,-10,8,5,10,-4],[-6,2,6,-5,6,-10,5,-9,-9,1,-9,8],[-4,5,10,-4,8,8,-1,2,8,-8,-5,-7],[3,-8,8,-10,-10,6,-4,-10,6,8,-3,-5],[-2,6,-4,-2,3,-9,-7,-3,6,8,-2,2]],[[-6,-7,1,-8,7,-10,8,-7,-3,4,-7,-4],[-8,1,-1,-10,-5,4,7,7,-7,-4,-9,10],[9,-2,2,-7,10,-10,3,8,7,4,-5,9],[-9,8,5,-2,1,9,9,4,6,-8,6,-6],[9,6,-2,5,7,1,-3,-6,-4,10,3,-1],[-9,-7,-7,9,-5,-10,-9,10,2,2,2,-2],[5,10,-5,6,-1,1,7,6,7,1,-2,-6],[2,-10,5,3,-3,5,-3,1,3,-4,4,-2],[-5,-10,6,5,-3,-6,-6,-8,1,6,4,8],[1,-10,1,9,9,-6,5,-4,-6,-5,-9,-3],[6,-2,9,2,1,7,5,7,5,-8,-3,-7],[3,3,-6,-10,-6,-5,-4,4,-8,-7,-7,5],[-10,-2,-5,3,-2,-10,1,-1,2,-1,-2,2],[-6,-2,-7,-6,-2,-9,-9,5,-9,10,-4,-6]],[[-6,5,-1,-7,-9,-9,10,1,-6,-10,-5,6],[1,3,-4,4,-5,7,7,1,7,-10,9,-8],[4,-10,5,10,-10,1,-1,4,-3,1,7,6],[4,-10,9,-8,7,9,-3,-10,-1,7,-6,-7],[-3,1,-10,3,-4,9,-2,6,6,-3,-4,2],[-4,7,-3,2,-3,-6,-1,9,4,1,-4,7],[-10,-10,5,-10,-2,-10,-3,3,-5,-9,9,-4],[-5,-1,9,10,10,6,2,4,-4,1,7,5],[4,-8,3,8,-6,8,8,-5,-10,4,6,7],[2,-9,-5,-1,-8,2,1,-9,10,2,-7,-8],[9,-8,4,7,7,-5,10,-9,-6,-10,-4,6],[8,4,7,2,-8,3,10,-7,3,9,-9,2],[1,4,2,-9,-10,-8,7,-4,-2,6,-6,9],[7,3,-8,3,8,7,1,-2,1,1,2,4]],[[4,-8,-2,-10,-4,-7,7,-4,-1,-6,-4,-5],[-8,4,2,4,7,4,8,10,-6,-6,1,9],[8,-4,4,9,6,2,1,-3,7,-8,3,8],[-5,2,2,-9,7,-3,5,-4,7,-8,-1,5],[-10,2,-10,-1,-5,-2,6,-7,5,5,4,-8],[5,-7,8,-4,-4,-10,-9,1,5,10,5,6],[7,-7,-1,4,-4,2,-5,-10,5,5,-2,9],[-10,-1,-6,4,-10,-6,7,-7,-1,2,-5,6],[2,-7,8,4,-7,-2,3,8,-6,-2,-6,-5],[-10,-4,-9,7,2,8,2,-7,-6,-3,4,2],[-8,6,-5,-5,-7,-10,-1,-10,2,4,-9,-2],[1,-3,9,-8,10,-2,-4,10,6,-10,6,2],[7,2,9,10,-1,7,-10,6,-9,-7,-5,-4],[6,10,5,1,-9,9,-9,8,-4,8,9,4]],[[-2,1,-7,-10,1,6,-3,-10,-2,-10,8,10],[10,7,-2,7,3,3,5,4,7,-1,-9,-3],[-10,1,-9,-3,9,-10,1,6,7,6,7,7],[-2,-4,-1,-3,10,-10,-4,-1,3,5,1,9],[-5,10,-5,-3,7,-1,6,1,9,-6,4,-6],[-9,2,4,-9,-6,-10,8,-9,3,-3,-5,5],[-6,5,-8,-9,-5,8,2,-8,-6,1,-4,-9],[2,5,4,9,9,-2,-8,6,1,3,-1,4],[-1,-3,7,1,-4,7,6,-10,2,2,10,-3],[3,-8,9,4,-9,7,3,-5,6,-6,10,7],[-7,-3,-8,10,4,-6,10,-7,10,-6,3,9],[5,-10,-1,-8,8,7,-10,5,-7,-1,2,-7],[-1,5,-6,3,-10,-6,-2,1,-8,5,-5,3],[3,10,-1,8,-10,6,-5,-7,4,8,-10,5]],[[5,-7,10,4,-2,-9,-1,-5,-9,-9,9,-1],[-1,-8,-6,-10,-3,-3,7,-8,-2,-3,5,-6],[-8,9,10,2,-9,-4,-5,5,-1,3,-6,6],[10,-10,7,9,2,-5,-2,-6,9,-5,4,2],[-10,5,10,3,3,6,1,7,7,-8,9,9],[3,2,-4,7,1,-10,-3,2,-8,8,-6,-5],[-5,2,-6,-3,3,-10,-10,-4,9,4,9,-10],[4,6,-10,-3,-3,-10,3,2,9,-6,-1,9],[-4,-3,-9,-10,8,-5,9,7,2,-5,-1,5],[-10,-8,-3,10,10,-10,4,-5,6,-5,7,-8],[-9,4,-9,9,-1,-8,-6,2,2,6,-2,2],[-1,4,9,5,-3,8,-1,1,6,6,10,7],[-10,9,3,1,-8,-2,-4,-5,-7,1,9,-9],[1,-4,-3,-4,3,-4,-9,-2,7,4,-10,-2]],[[-1,6,5,3,-1,9,-6,-7,-10,-9,4,-6],[5,4,-10,-4,-9,8,-6,-10,-6,10,-5,4],[8,4,5,4,-3,-7,7,1,2,10,10,6],[2,-1,5,-4,-9,4,2,1,-8,-6,10,3],[-9,-3,-6,7,4,-6,-3,1,-1,-3,-5,-8],[-5,-10,-2,-10,-7,-9,1,-10,4,-6,-8,-9],[2,-2,8,-9,-4,9,-1,8,1,10,5,-9],[-6,8,-1,-3,-8,-9,-4,-1,-5,-6,-1,-4],[-4,-4,-4,10,7,-6,-6,9,-5,-2,7,9],[6,-10,-2,9,1,-4,6,9,-5,-2,-5,5],[-9,10,2,10,7,-5,6,-4,9,4,-4,-1],[-9,10,-3,-5,-3,10,6,-3,10,1,-4,-5],[-3,-8,-3,7,-1,-7,1,-9,-8,-8,-1,-7],[-9,-8,-3,5,3,4,4,7,8,2,-5,4]],[[3,10,-4,-6,-7,-7,-7,-8,-8,6,2,9],[-7,-9,-3,-8,4,-2,-4,1,-3,4,1,-10],[-2,10,10,-4,-2,1,-6,4,6,-10,2,-4],[2,-5,-7,3,-3,-5,-4,-2,-4,2,2,1],[9,10,3,-8,-1,-7,10,-10,-2,-8,4,1],[-2,9,8,-4,9,10,-8,-4,-9,-7,-10,-4],[2,1,1,-5,4,9,-1,-8,-8,2,-7,5],[9,7,-9,-6,-2,-8,-8,7,4,-3,-10,-5],[1,2,-6,-4,-9,6,1,-10,6,5,8,5],[10,8,3,8,-3,-10,9,5,4,-5,-3,7],[2,7,-5,-5,2,-5,-9,9,-3,-2,-4,10],[10,4,-2,-7,4,-6,6,-4,-5,3,9,-5],[-2,5,-5,5,-10,-1,1,-7,-9,6,4,-6],[-8,-10,-3,-1,3,-1,1,-6,-7,5,6,-5]],[[-5,-2,10,8,7,4,5,2,-1,8,1,5],[2,7,4,-5,-2,9,-3,9,3,7,-9,5],[4,-4,-1,6,-2,3,7,-4,3,3,10,-5],[7,10,2,8,3,2,2,7,-3,10,8,-10],[-9,6,-5,2,-4,-8,10,-4,-9,-6,6,-4],[4,10,-2,-5,-3,10,-4,10,5,-6,-5,7],[-7,-6,6,4,6,4,-4,8,-9,-5,-9,1],[-6,-8,-7,6,7,1,-2,5,-10,-5,-7,-10],[-1,9,2,5,-9,1,-9,-4,-7,-2,-9,-6],[-6,-3,-5,-7,-2,6,6,-1,6,3,-9,4],[1,4,10,10,2,-9,10,3,2,-5,-3,-5],[8,-6,6,-2,5,8,-7,-3,4,6,-8,6],[-8,-8,7,2,5,2,-10,-8,-2,2,7,-6],[9,-6,1,-7,-3,2,10,7,5,-7,-4,10]],[[5,5,1,-6,-3,5,6,-3,-7,-1,10,-4],[-7,-10,10,-9,5,-7,-3,-5,7,2,-4,-2],[-1,-9,1,6,6,1,7,1,1,-6,-10,5],[-3,-1,-2,-9,8,-6,3,8,-7,5,8,3],[3,8,-2,-3,9,-1,8,6,10,-4,-3,4],[9,1,7,-9,-5,6,-9,2,4,9,-5,-6],[6,-2,2,8,-7,-1,6,5,-4,-7,-1,-10],[-4,6,5,-6,4,1,-4,-9,9,5,9,-7],[4,-5,4,-1,6,8,1,-4,2,3,6,6],[2,-3,3,4,-5,-4,6,-9,-3,6,1,-1],[7,6,5,-3,5,-10,7,8,2,-4,5,3],[-8,-2,-10,9,-8,-3,9,2,3,2,5,-3],[-10,-7,10,-5,-10,-9,-1,-8,-5,1,-6,-8],[6,-10,-10,8,-1,8,-9,-2,-9,9,-9,-10]],[[9,-10,6,-5,-8,3,-7,-9,-10,-2,8,-7],[-4,1,-3,-10,2,-9,-6,1,9,-3,7,-5],[-8,5,10,5,8,7,-6,-6,-7,-9,9,-8],[-5,5,10,8,-8,6,-7,-1,-8,8,7,4],[-1,6,2,10,-2,9,6,2,2,-3,-10,6],[5,1,10,-4,6,-4,-4,6,-9,10,4,-9],[-9,-5,-9,6,-5,-5,-2,-9,-1,-9,-5,-10],[9,10,-3,10,-1,2,8,-5,-5,-9,1,7],[10,8,-8,10,10,1,-8,5,7,-1,-3,7],[7,7,5,10,8,1,-6,-5,2,8,-6,9],[-10,8,7,3,1,-1,-2,2,-1,-7,-5,-5],[-8,-6,8,10,8,-1,-3,-10,-2,1,-4,-5],[-7,3,-3,-10,1,-5,-1,-7,3,3,-2,-10],[-4,10,5,2,-8,-7,-1,-3,-1,1,5,9]]], dtype = "uint8")#candidate|5974|(13, 14, 12)|const|uint8
bop_5975 = relay.logical_xor(const_5973.astype('uint8'), const_5974.astype('uint8')) # shape=(13, 14, 12)
func_5893_call = mod.get_global_var('func_5893')
func_5895_call = mutated_mod.get_global_var('func_5895')
call_5979 = relay.TupleGetItem(func_5893_call(), 0)
call_5980 = relay.TupleGetItem(func_5895_call(), 0)
output = relay.Tuple([bop_5975,call_5979,])
output2 = relay.Tuple([bop_5975,call_5980,])
func_5986 = relay.Function([], output)
mod['func_5986'] = func_5986
mod = relay.transform.InferType()(mod)
mutated_mod['func_5986'] = func_5986
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5986_call = mutated_mod.get_global_var('func_5986')
call_5987 = func_5986_call()
output = call_5987
func_5988 = relay.Function([], output)
mutated_mod['func_5988'] = func_5988
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6007 = relay.const(-9, dtype = "int8")#candidate|6007|()|const|int8
const_6008 = relay.const([[[-10],[5],[-6]],[[-6],[-4],[1]],[[-1],[3],[-8]],[[-7],[2],[-3]],[[-4],[4],[-3]],[[-9],[3],[-6]],[[1],[-9],[-7]],[[3],[9],[-1]]], dtype = "int8")#candidate|6008|(8, 3, 1)|const|int8
bop_6009 = relay.logical_xor(const_6007.astype('int8'), const_6008.astype('int8')) # shape=(8, 3, 1)
uop_6020 = relay.sinh(bop_6009.astype('float64')) # shape=(8, 3, 1)
uop_6030 = relay.erf(bop_6009.astype('float64')) # shape=(8, 3, 1)
uop_6048 = relay.rsqrt(bop_6009.astype('float32')) # shape=(8, 3, 1)
output = relay.Tuple([uop_6020,uop_6030,uop_6048,])
output2 = relay.Tuple([uop_6020,uop_6030,uop_6048,])
func_6058 = relay.Function([], output)
mod['func_6058'] = func_6058
mod = relay.transform.InferType()(mod)
output = func_6058()
func_6059 = relay.Function([], output)
mutated_mod['func_6059'] = func_6059
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4802_call = mod.get_global_var('func_4802')
func_4804_call = mutated_mod.get_global_var('func_4804')
call_6075 = relay.TupleGetItem(func_4802_call(), 0)
call_6076 = relay.TupleGetItem(func_4804_call(), 0)
output = relay.Tuple([call_6075,])
output2 = relay.Tuple([call_6076,])
func_6082 = relay.Function([], output)
mod['func_6082'] = func_6082
mod = relay.transform.InferType()(mod)
output = func_6082()
func_6083 = relay.Function([], output)
mutated_mod['func_6083'] = func_6083
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5494_call = mod.get_global_var('func_5494')
func_5496_call = mutated_mod.get_global_var('func_5496')
call_6168 = func_5494_call()
call_6169 = func_5494_call()
var_6174 = relay.var("var_6174", dtype = "bool", shape = (640,))#candidate|6174|(640,)|var|bool
bop_6175 = relay.add(call_6168.astype('uint16'), relay.reshape(var_6174.astype('uint16'), relay.shape_of(call_6168))) # shape=(640,)
bop_6178 = relay.add(call_6169.astype('uint16'), relay.reshape(var_6174.astype('uint16'), relay.shape_of(call_6169))) # shape=(640,)
uop_6180 = relay.cosh(call_6168.astype('float64')) # shape=(640,)
uop_6182 = relay.cosh(call_6169.astype('float64')) # shape=(640,)
output = relay.Tuple([bop_6175,uop_6180,])
output2 = relay.Tuple([bop_6178,uop_6182,])
func_6184 = relay.Function([var_6174,], output)
mod['func_6184'] = func_6184
mod = relay.transform.InferType()(mod)
var_6185 = relay.var("var_6185", dtype = "bool", shape = (640,))#candidate|6185|(640,)|var|bool
output = func_6184(var_6185)
func_6186 = relay.Function([var_6185], output)
mutated_mod['func_6186'] = func_6186
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6201 = relay.const(-6, dtype = "int16")#candidate|6201|()|const|int16
var_6202 = relay.var("var_6202", dtype = "int16", shape = (2, 1, 7))#candidate|6202|(2, 1, 7)|var|int16
bop_6203 = relay.less_equal(const_6201.astype('bool'), var_6202.astype('bool')) # shape=(2, 1, 7)
bop_6211 = relay.not_equal(const_6201.astype('bool'), bop_6203.astype('bool')) # shape=(2, 1, 7)
output = relay.Tuple([bop_6211,])
output2 = relay.Tuple([bop_6211,])
func_6216 = relay.Function([var_6202,], output)
mod['func_6216'] = func_6216
mod = relay.transform.InferType()(mod)
mutated_mod['func_6216'] = func_6216
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6217 = relay.var("var_6217", dtype = "int16", shape = (2, 1, 7))#candidate|6217|(2, 1, 7)|var|int16
func_6216_call = mutated_mod.get_global_var('func_6216')
call_6218 = func_6216_call(var_6217)
output = call_6218
func_6219 = relay.Function([var_6217], output)
mutated_mod['func_6219'] = func_6219
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4684_call = mod.get_global_var('func_4684')
func_4686_call = mutated_mod.get_global_var('func_4686')
call_6239 = relay.TupleGetItem(func_4684_call(), 0)
call_6240 = relay.TupleGetItem(func_4686_call(), 0)
output = relay.Tuple([call_6239,])
output2 = relay.Tuple([call_6240,])
func_6245 = relay.Function([], output)
mod['func_6245'] = func_6245
mod = relay.transform.InferType()(mod)
output = func_6245()
func_6246 = relay.Function([], output)
mutated_mod['func_6246'] = func_6246
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5925_call = mod.get_global_var('func_5925')
func_5926_call = mutated_mod.get_global_var('func_5926')
call_6307 = relay.TupleGetItem(func_5925_call(), 0)
call_6308 = relay.TupleGetItem(func_5926_call(), 0)
output = call_6307
output2 = call_6308
func_6313 = relay.Function([], output)
mod['func_6313'] = func_6313
mod = relay.transform.InferType()(mod)
mutated_mod['func_6313'] = func_6313
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6313_call = mutated_mod.get_global_var('func_6313')
call_6314 = func_6313_call()
output = call_6314
func_6315 = relay.Function([], output)
mutated_mod['func_6315'] = func_6315
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6326 = relay.var("var_6326", dtype = "float64", shape = (2, 10, 1))#candidate|6326|(2, 10, 1)|var|float64
uop_6327 = relay.acosh(var_6326.astype('float64')) # shape=(2, 10, 1)
output = relay.Tuple([uop_6327,])
output2 = relay.Tuple([uop_6327,])
func_6337 = relay.Function([var_6326,], output)
mod['func_6337'] = func_6337
mod = relay.transform.InferType()(mod)
mutated_mod['func_6337'] = func_6337
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6338 = relay.var("var_6338", dtype = "float64", shape = (2, 10, 1))#candidate|6338|(2, 10, 1)|var|float64
func_6337_call = mutated_mod.get_global_var('func_6337')
call_6339 = func_6337_call(var_6338)
output = call_6339
func_6340 = relay.Function([var_6338], output)
mutated_mod['func_6340'] = func_6340
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5986_call = mod.get_global_var('func_5986')
func_5988_call = mutated_mod.get_global_var('func_5988')
call_6349 = relay.TupleGetItem(func_5986_call(), 1)
call_6350 = relay.TupleGetItem(func_5988_call(), 1)
var_6354 = relay.var("var_6354", dtype = "float32", shape = (4, 3, 2))#candidate|6354|(4, 3, 2)|var|float32
bop_6355 = relay.subtract(call_6349.astype('int16'), relay.reshape(var_6354.astype('int16'), relay.shape_of(call_6349))) # shape=(4, 3, 2)
bop_6358 = relay.subtract(call_6350.astype('int16'), relay.reshape(var_6354.astype('int16'), relay.shape_of(call_6350))) # shape=(4, 3, 2)
func_2234_call = mod.get_global_var('func_2234')
func_2238_call = mutated_mod.get_global_var('func_2238')
const_6372 = relay.const([-5.844006,-3.963732,1.327880,-9.761058,-9.111055,2.084719,-6.072117,-6.816370,4.626036,-0.393012,9.273188,9.073945,-6.358188,1.969386,1.655570,8.772293,-0.517633,-5.478242,-3.371488,4.935062,7.235925,2.175510,-7.348628,-2.665527,9.531802,3.086043,-2.694517,8.432983,-3.140909,6.651238,7.559371,9.137655,-1.127527,9.619513,-2.359353,4.193122,2.720533,7.281531,-9.457456,-9.897784,-3.713004,-7.022071,-0.497578,-6.725439,2.701390,-5.796687,-0.865447,-6.024109,-4.650317,5.613492,8.102581,-5.173665,9.578546,-7.717954,5.296382,0.527472,-5.279913,-6.074278,5.516235,8.537457,-4.812956,0.046129,7.536952,1.979303,-7.491797,-5.709485,8.592424,-5.782255,-8.811839,1.402036], dtype = "float64")#candidate|6372|(70,)|const|float64
const_6373 = relay.const([[False,False],[True,True],[True,True],[False,True],[True,True],[False,False],[True,False],[True,True],[True,False],[False,True],[False,True],[False,False],[True,False],[True,True],[False,False],[True,False],[False,False],[False,True],[True,False],[True,False],[False,True],[False,True],[True,False],[False,False],[False,True],[False,False],[False,False],[False,True],[False,False],[True,True],[False,False],[True,True],[False,True],[False,False],[False,True],[False,False],[False,True],[True,False],[True,False],[False,True],[True,False],[True,True],[True,False],[False,True],[False,True],[False,False],[True,False],[True,False],[True,False],[False,True],[True,False],[True,False],[True,True],[False,False],[True,False],[True,False],[True,True],[True,False],[True,True],[True,True],[True,False],[True,False],[False,True],[False,True],[True,False],[True,False],[True,False],[False,False],[True,False],[True,False],[True,False],[False,False],[True,True],[False,False],[True,True],[True,False],[True,True],[False,True],[False,True],[True,True],[True,False],[True,False],[False,False],[True,False],[False,False],[False,True],[False,True],[True,False],[False,True],[False,True],[True,False],[True,False],[True,False],[False,True],[True,True],[False,False],[True,True],[True,True],[True,False],[True,False],[False,False],[True,False],[True,True],[False,True],[False,True],[True,True],[True,False],[False,False],[False,False],[True,True],[True,True],[False,False],[False,True],[True,False],[True,True],[False,True],[True,True],[True,False],[False,False],[True,True],[True,False],[False,False],[True,False],[False,True],[False,True],[True,True],[False,True],[True,False],[False,True],[False,True],[False,False],[False,True],[False,True],[True,False],[True,False],[True,False],[True,False],[False,False],[False,False],[True,True],[True,False],[False,True],[True,False],[False,True],[True,False],[False,True],[True,False],[False,True],[False,True],[True,True],[True,True],[False,False],[True,False],[False,True],[True,False],[False,False],[False,True],[False,False],[True,False],[True,False],[False,False],[True,True],[False,True],[False,False],[False,False],[False,True],[True,False],[False,False],[False,False],[True,True],[False,False],[False,True],[True,False],[True,False],[False,False],[False,False],[False,True],[False,True],[False,False],[True,False],[False,True],[True,True],[True,True],[True,False],[False,True],[True,False],[True,True],[True,False],[True,False],[False,True],[True,False],[False,True],[True,False],[False,True],[False,False],[True,True],[True,False],[False,True],[False,False],[True,False],[True,False],[False,False],[False,False],[False,True],[False,False],[True,True],[False,True],[True,True],[True,True],[False,True],[True,True],[False,True],[True,True],[False,True],[True,True],[True,False],[True,False],[False,True],[False,False],[True,False],[False,False],[False,False],[True,True],[True,False],[False,True],[True,False],[False,False],[True,True],[True,True],[True,False],[False,False],[False,True],[False,False],[True,False],[False,False],[True,False],[False,True],[False,True],[False,True],[True,False],[False,False],[False,False],[False,True],[True,True],[False,False],[True,False],[True,True],[False,True],[True,True],[False,True],[True,True],[True,True],[False,True],[False,False],[False,True],[False,False],[True,True],[False,False],[False,False],[True,True],[False,True],[True,True],[False,True],[True,False],[False,True],[True,True],[False,True],[False,False],[False,False],[False,True],[True,False],[True,True],[True,False],[True,False],[False,False],[True,False],[True,False],[False,False],[False,True],[False,False],[False,True],[False,False],[False,False],[False,True],[True,False],[False,False],[False,True],[True,False],[True,False],[False,True],[True,True],[False,False],[True,False],[False,True],[True,False],[False,True],[False,False],[True,False],[False,True],[True,True],[True,True],[False,True],[True,True],[True,False],[False,True],[False,True],[False,False],[True,False],[False,False],[True,True],[False,True],[False,False],[True,True],[True,False],[False,False],[True,True],[False,True],[False,True],[True,False],[True,True]], dtype = "bool")#candidate|6373|(320, 2)|const|bool
call_6371 = relay.TupleGetItem(func_2234_call(relay.reshape(const_6372.astype('float64'), [10, 1, 7]), relay.reshape(const_6373.astype('bool'), [320, 2]), relay.reshape(const_6372.astype('float64'), [10, 1, 7]), ), 0)
call_6374 = relay.TupleGetItem(func_2238_call(relay.reshape(const_6372.astype('float64'), [10, 1, 7]), relay.reshape(const_6373.astype('bool'), [320, 2]), relay.reshape(const_6372.astype('float64'), [10, 1, 7]), ), 0)
output = relay.Tuple([bop_6355,call_6371,const_6372,const_6373,])
output2 = relay.Tuple([bop_6358,call_6374,const_6372,const_6373,])
func_6378 = relay.Function([var_6354,], output)
mod['func_6378'] = func_6378
mod = relay.transform.InferType()(mod)
mutated_mod['func_6378'] = func_6378
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6379 = relay.var("var_6379", dtype = "float32", shape = (4, 3, 2))#candidate|6379|(4, 3, 2)|var|float32
func_6378_call = mutated_mod.get_global_var('func_6378')
call_6380 = func_6378_call(var_6379)
output = call_6380
func_6381 = relay.Function([var_6379], output)
mutated_mod['func_6381'] = func_6381
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6313_call = mod.get_global_var('func_6313')
func_6315_call = mutated_mod.get_global_var('func_6315')
call_6433 = func_6313_call()
call_6434 = func_6313_call()
uop_6435 = relay.rsqrt(call_6433.astype('float32')) # shape=(2, 20)
uop_6437 = relay.rsqrt(call_6434.astype('float32')) # shape=(2, 20)
bop_6455 = relay.floor_divide(uop_6435.astype('float64'), relay.reshape(call_6433.astype('float64'), relay.shape_of(uop_6435))) # shape=(2, 20)
bop_6458 = relay.floor_divide(uop_6437.astype('float64'), relay.reshape(call_6434.astype('float64'), relay.shape_of(uop_6437))) # shape=(2, 20)
var_6467 = relay.var("var_6467", dtype = "float32", shape = (2, 20))#candidate|6467|(2, 20)|var|float32
bop_6468 = relay.right_shift(call_6433.astype('uint16'), relay.reshape(var_6467.astype('uint16'), relay.shape_of(call_6433))) # shape=(2, 20)
bop_6471 = relay.right_shift(call_6434.astype('uint16'), relay.reshape(var_6467.astype('uint16'), relay.shape_of(call_6434))) # shape=(2, 20)
bop_6472 = relay.equal(bop_6455.astype('bool'), relay.reshape(bop_6468.astype('bool'), relay.shape_of(bop_6455))) # shape=(2, 20)
bop_6475 = relay.equal(bop_6458.astype('bool'), relay.reshape(bop_6471.astype('bool'), relay.shape_of(bop_6458))) # shape=(2, 20)
uop_6481 = relay.atan(var_6467.astype('float64')) # shape=(2, 20)
bop_6487 = relay.left_shift(bop_6455.astype('uint16'), relay.reshape(bop_6472.astype('uint16'), relay.shape_of(bop_6455))) # shape=(2, 20)
bop_6490 = relay.left_shift(bop_6458.astype('uint16'), relay.reshape(bop_6475.astype('uint16'), relay.shape_of(bop_6458))) # shape=(2, 20)
bop_6494 = relay.mod(bop_6468.astype('float64'), relay.reshape(uop_6435.astype('float64'), relay.shape_of(bop_6468))) # shape=(2, 20)
bop_6497 = relay.mod(bop_6471.astype('float64'), relay.reshape(uop_6437.astype('float64'), relay.shape_of(bop_6471))) # shape=(2, 20)
bop_6502 = relay.less(bop_6455.astype('bool'), relay.reshape(bop_6487.astype('bool'), relay.shape_of(bop_6455))) # shape=(2, 20)
bop_6505 = relay.less(bop_6458.astype('bool'), relay.reshape(bop_6490.astype('bool'), relay.shape_of(bop_6458))) # shape=(2, 20)
output = relay.Tuple([uop_6481,bop_6494,bop_6502,])
output2 = relay.Tuple([uop_6481,bop_6497,bop_6505,])
func_6509 = relay.Function([var_6467,], output)
mod['func_6509'] = func_6509
mod = relay.transform.InferType()(mod)
mutated_mod['func_6509'] = func_6509
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6510 = relay.var("var_6510", dtype = "float32", shape = (2, 20))#candidate|6510|(2, 20)|var|float32
func_6509_call = mutated_mod.get_global_var('func_6509')
call_6511 = func_6509_call(var_6510)
output = call_6511
func_6512 = relay.Function([var_6510], output)
mutated_mod['func_6512'] = func_6512
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6058_call = mod.get_global_var('func_6058')
func_6059_call = mutated_mod.get_global_var('func_6059')
call_6546 = relay.TupleGetItem(func_6058_call(), 2)
call_6547 = relay.TupleGetItem(func_6059_call(), 2)
output = call_6546
output2 = call_6547
func_6552 = relay.Function([], output)
mod['func_6552'] = func_6552
mod = relay.transform.InferType()(mod)
output = func_6552()
func_6553 = relay.Function([], output)
mutated_mod['func_6553'] = func_6553
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5732_call = mod.get_global_var('func_5732')
func_5734_call = mutated_mod.get_global_var('func_5734')
call_6615 = relay.TupleGetItem(func_5732_call(), 0)
call_6616 = relay.TupleGetItem(func_5734_call(), 0)
output = call_6615
output2 = call_6616
func_6631 = relay.Function([], output)
mod['func_6631'] = func_6631
mod = relay.transform.InferType()(mod)
output = func_6631()
func_6632 = relay.Function([], output)
mutated_mod['func_6632'] = func_6632
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4970_call = mod.get_global_var('func_4970')
func_4972_call = mutated_mod.get_global_var('func_4972')
call_6641 = relay.TupleGetItem(func_4970_call(), 0)
call_6642 = relay.TupleGetItem(func_4972_call(), 0)
const_6655 = relay.const([[-2.333198,-2.408324,-3.245768,-9.277312,1.804604,8.204188,6.819028,1.683402,4.375194,-4.639747,-6.986847,7.125025,-6.840650,0.864523,2.604804,-7.489501,-7.570063,8.692164,3.264437,-4.993894],[7.965140,4.565073,-6.717007,3.187048,-4.858793,8.302467,9.125834,6.116322,2.336809,-9.700152,-0.313267,9.268371,-0.291116,0.127972,-0.868820,-2.650979,0.815724,-6.086358,7.855482,7.761345]], dtype = "float32")#candidate|6655|(2, 20)|const|float32
bop_6656 = relay.bitwise_xor(call_6641.astype('int32'), relay.reshape(const_6655.astype('int32'), relay.shape_of(call_6641))) # shape=(2, 20)
bop_6659 = relay.bitwise_xor(call_6642.astype('int32'), relay.reshape(const_6655.astype('int32'), relay.shape_of(call_6642))) # shape=(2, 20)
func_3160_call = mod.get_global_var('func_3160')
func_3162_call = mutated_mod.get_global_var('func_3162')
var_6691 = relay.var("var_6691", dtype = "float32", shape = (120,))#candidate|6691|(120,)|var|float32
call_6690 = relay.TupleGetItem(func_3160_call(relay.reshape(var_6691.astype('float32'), [120,])), 2)
call_6692 = relay.TupleGetItem(func_3162_call(relay.reshape(var_6691.astype('float32'), [120,])), 2)
const_6712 = relay.const([[-0.646085,7.019274,7.204819,-6.224074,-2.169871,7.491026,-1.121082,-0.960466,9.917271,-9.404375,-4.814429,-9.221047,-5.696147,9.491563,-1.125538,-6.239730,-3.412289,-5.109501,2.806130,-5.555845],[0.427660,9.222362,-8.178439,-7.710023,4.371099,8.896418,1.880455,6.980071,2.641638,1.836677,5.048948,-8.064534,1.213639,6.612354,3.568853,7.204060,4.296285,1.136543,-4.475865,1.915468]], dtype = "float32")#candidate|6712|(2, 20)|const|float32
bop_6713 = relay.maximum(call_6641.astype('int8'), relay.reshape(const_6712.astype('int8'), relay.shape_of(call_6641))) # shape=(2, 20)
bop_6716 = relay.maximum(call_6642.astype('int8'), relay.reshape(const_6712.astype('int8'), relay.shape_of(call_6642))) # shape=(2, 20)
uop_6724 = relay.tan(const_6712.astype('float32')) # shape=(2, 20)
output = relay.Tuple([bop_6656,call_6690,var_6691,bop_6713,uop_6724,])
output2 = relay.Tuple([bop_6659,call_6692,var_6691,bop_6716,uop_6724,])
func_6727 = relay.Function([var_6691,], output)
mod['func_6727'] = func_6727
mod = relay.transform.InferType()(mod)
var_6728 = relay.var("var_6728", dtype = "float32", shape = (120,))#candidate|6728|(120,)|var|float32
output = func_6727(var_6728)
func_6729 = relay.Function([var_6728], output)
mutated_mod['func_6729'] = func_6729
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4802_call = mod.get_global_var('func_4802')
func_4804_call = mutated_mod.get_global_var('func_4804')
call_6734 = relay.TupleGetItem(func_4802_call(), 0)
call_6735 = relay.TupleGetItem(func_4804_call(), 0)
output = relay.Tuple([call_6734,])
output2 = relay.Tuple([call_6735,])
func_6740 = relay.Function([], output)
mod['func_6740'] = func_6740
mod = relay.transform.InferType()(mod)
mutated_mod['func_6740'] = func_6740
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6740_call = mutated_mod.get_global_var('func_6740')
call_6741 = func_6740_call()
output = call_6741
func_6742 = relay.Function([], output)
mutated_mod['func_6742'] = func_6742
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4838_call = mod.get_global_var('func_4838')
func_4840_call = mutated_mod.get_global_var('func_4840')
call_6775 = relay.TupleGetItem(func_4838_call(), 1)
call_6776 = relay.TupleGetItem(func_4840_call(), 1)
func_6313_call = mod.get_global_var('func_6313')
func_6315_call = mutated_mod.get_global_var('func_6315')
call_6789 = func_6313_call()
call_6790 = func_6313_call()
output = relay.Tuple([call_6775,call_6789,])
output2 = relay.Tuple([call_6776,call_6790,])
func_6791 = relay.Function([], output)
mod['func_6791'] = func_6791
mod = relay.transform.InferType()(mod)
output = func_6791()
func_6792 = relay.Function([], output)
mutated_mod['func_6792'] = func_6792
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4648_call = mod.get_global_var('func_4648')
func_4650_call = mutated_mod.get_global_var('func_4650')
call_6796 = relay.TupleGetItem(func_4648_call(), 0)
call_6797 = relay.TupleGetItem(func_4650_call(), 0)
var_6809 = relay.var("var_6809", dtype = "float64", shape = (2, 6, 5))#candidate|6809|(2, 6, 5)|var|float64
bop_6810 = relay.equal(call_6796.astype('bool'), relay.reshape(var_6809.astype('bool'), relay.shape_of(call_6796))) # shape=(2, 6, 5)
bop_6813 = relay.equal(call_6797.astype('bool'), relay.reshape(var_6809.astype('bool'), relay.shape_of(call_6797))) # shape=(2, 6, 5)
output = bop_6810
output2 = bop_6813
func_6816 = relay.Function([var_6809,], output)
mod['func_6816'] = func_6816
mod = relay.transform.InferType()(mod)
var_6817 = relay.var("var_6817", dtype = "float64", shape = (2, 6, 5))#candidate|6817|(2, 6, 5)|var|float64
output = func_6816(var_6817)
func_6818 = relay.Function([var_6817], output)
mutated_mod['func_6818'] = func_6818
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6245_call = mod.get_global_var('func_6245')
func_6246_call = mutated_mod.get_global_var('func_6246')
call_6942 = relay.TupleGetItem(func_6245_call(), 0)
call_6943 = relay.TupleGetItem(func_6246_call(), 0)
var_6963 = relay.var("var_6963", dtype = "bool", shape = (640,))#candidate|6963|(640,)|var|bool
bop_6964 = relay.greater_equal(call_6942.astype('bool'), relay.reshape(var_6963.astype('bool'), relay.shape_of(call_6942))) # shape=(640,)
bop_6967 = relay.greater_equal(call_6943.astype('bool'), relay.reshape(var_6963.astype('bool'), relay.shape_of(call_6943))) # shape=(640,)
output = bop_6964
output2 = bop_6967
func_6968 = relay.Function([var_6963,], output)
mod['func_6968'] = func_6968
mod = relay.transform.InferType()(mod)
mutated_mod['func_6968'] = func_6968
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6969 = relay.var("var_6969", dtype = "bool", shape = (640,))#candidate|6969|(640,)|var|bool
func_6968_call = mutated_mod.get_global_var('func_6968')
call_6970 = func_6968_call(var_6969)
output = call_6970
func_6971 = relay.Function([var_6969], output)
mutated_mod['func_6971'] = func_6971
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5893_call = mod.get_global_var('func_5893')
func_5895_call = mutated_mod.get_global_var('func_5895')
call_7049 = relay.TupleGetItem(func_5893_call(), 0)
call_7050 = relay.TupleGetItem(func_5895_call(), 0)
func_5925_call = mod.get_global_var('func_5925')
func_5926_call = mutated_mod.get_global_var('func_5926')
call_7059 = relay.TupleGetItem(func_5925_call(), 2)
call_7060 = relay.TupleGetItem(func_5926_call(), 2)
func_6740_call = mod.get_global_var('func_6740')
func_6742_call = mutated_mod.get_global_var('func_6742')
call_7084 = relay.TupleGetItem(func_6740_call(), 0)
call_7085 = relay.TupleGetItem(func_6742_call(), 0)
var_7086 = relay.var("var_7086", dtype = "float64", shape = (2, 6, 5))#candidate|7086|(2, 6, 5)|var|float64
bop_7087 = relay.logical_and(call_7084.astype('bool'), relay.reshape(var_7086.astype('bool'), relay.shape_of(call_7084))) # shape=(2, 6, 5)
bop_7090 = relay.logical_and(call_7085.astype('bool'), relay.reshape(var_7086.astype('bool'), relay.shape_of(call_7085))) # shape=(2, 6, 5)
func_6727_call = mod.get_global_var('func_6727')
func_6729_call = mutated_mod.get_global_var('func_6729')
const_7115 = relay.const([1.236311,-6.761932,-6.553373,2.568050,-4.010534,-7.241002,-4.235939,-5.513658,8.234599,-0.339708,-5.572208,7.177294,2.312992,4.212588,1.752324,0.201604,0.851836,-4.418501,-1.555282,-6.421181,3.327692,-3.463196,-7.574782,2.092906,-9.414113,0.286701,8.379262,4.004529,-6.131023,7.424847,-9.791564,-4.046905,-8.413002,-5.799481,-5.267145,5.380674,4.412185,3.001421,-7.703069,9.248861,1.710539,-6.599216,-8.959194,1.079729,-7.932494,-9.862384,-4.472745,-1.614127,-6.922830,5.364381,-6.825137,-4.467033,8.993667,4.369004,-7.983969,-5.490259,-5.097310,-8.971807,-9.199290,4.453777,-1.881111,5.724148,-9.333353,6.208586,-5.905486,8.291990,-9.161592,-6.870319,5.942120,7.909130,0.900453,8.992662,-1.287851,-2.404963,-6.859380,-6.677929,1.418960,8.645542,2.788376,-1.485965,7.977462,-8.238247,-1.426924,5.475360,3.013649,8.641508,-6.185617,-4.133520,4.673522,7.154820,-3.698933,-7.621215,-5.376356,0.100881,7.955762,4.109325,4.319486,-6.556427,3.125310,3.795506,-2.729370,3.648354,-4.802029,-4.613938,-0.232290,9.110871,1.138026,-7.533566,2.417027,3.277676,-1.347143,6.663801,7.884543,2.257205,-2.222693,6.009537,4.045702,1.230946,-5.013892,1.903484], dtype = "float32")#candidate|7115|(120,)|const|float32
call_7114 = relay.TupleGetItem(func_6727_call(relay.reshape(const_7115.astype('float32'), [120,])), 2)
call_7116 = relay.TupleGetItem(func_6729_call(relay.reshape(const_7115.astype('float32'), [120,])), 2)
output = relay.Tuple([call_7049,call_7059,bop_7087,call_7114,const_7115,])
output2 = relay.Tuple([call_7050,call_7060,bop_7090,call_7116,const_7115,])
func_7133 = relay.Function([var_7086,], output)
mod['func_7133'] = func_7133
mod = relay.transform.InferType()(mod)
mutated_mod['func_7133'] = func_7133
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7134 = relay.var("var_7134", dtype = "float64", shape = (2, 6, 5))#candidate|7134|(2, 6, 5)|var|float64
func_7133_call = mutated_mod.get_global_var('func_7133')
call_7135 = func_7133_call(var_7134)
output = call_7135
func_7136 = relay.Function([var_7134], output)
mutated_mod['func_7136'] = func_7136
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6082_call = mod.get_global_var('func_6082')
func_6083_call = mutated_mod.get_global_var('func_6083')
call_7190 = relay.TupleGetItem(func_6082_call(), 0)
call_7191 = relay.TupleGetItem(func_6083_call(), 0)
output = relay.Tuple([call_7190,])
output2 = relay.Tuple([call_7191,])
func_7201 = relay.Function([], output)
mod['func_7201'] = func_7201
mod = relay.transform.InferType()(mod)
mutated_mod['func_7201'] = func_7201
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7201_call = mutated_mod.get_global_var('func_7201')
call_7202 = func_7201_call()
output = call_7202
func_7203 = relay.Function([], output)
mutated_mod['func_7203'] = func_7203
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6740_call = mod.get_global_var('func_6740')
func_6742_call = mutated_mod.get_global_var('func_6742')
call_7237 = relay.TupleGetItem(func_6740_call(), 0)
call_7238 = relay.TupleGetItem(func_6742_call(), 0)
func_3588_call = mod.get_global_var('func_3588')
func_3594_call = mutated_mod.get_global_var('func_3594')
const_7242 = relay.const([[-3.292092,-9.243395,-6.998140,-1.946834,7.403792,9.516998,-5.655599,4.498584,-8.180476,-5.493800,5.243314,-0.277969,4.547844,1.308742,5.747199,-6.701053,-9.925062,-8.683955,-7.692553,-0.033922,-0.128158,-3.742020,-9.959347,-4.611280,-2.610910,9.869137,8.799817,-9.969302,1.518499,-9.650770,-0.493031,-9.547368,3.249006,9.525078,0.595838,0.481786,-7.388657,0.984625,8.095941,8.406409,-4.742298,1.685261,-9.223898,-5.280420,5.857629,-5.642745,9.394151,-8.750277,7.223954,2.817174,9.163877,-9.428697,-2.430233,-4.322907,6.423129,1.512146,-9.972633,8.571664,3.571765,-9.071956,-4.530623,-8.814394,-1.320817,-5.695322,-1.465877,-3.603331,-9.768178,7.161003,-8.553486,-7.671766,9.113060,3.682947,-1.776684,-1.419148,3.800975,1.306089,0.331373,2.124356,-6.859816,1.561947,7.354184,7.591131,-8.861548,1.983253,-0.211195,-9.140667,2.653406,-6.774808,-6.467943,9.892103,5.084240,9.980499,-1.676748,-3.146681,-9.784317,-2.067229,-7.466015,9.857669,-3.035060,7.210130,-9.264046,6.598916,-9.519375,-1.064980,-2.464228,-9.122501,-1.330189,0.094725,-1.252460,0.908989,8.957800,6.608019,7.124840,5.271164,4.669439,3.113405,-3.955025,1.626004,-7.786740,-2.537940,-4.813571,-4.800149,-5.996571,8.050591,-1.093202,-5.355850,-9.225058,9.444593,-5.792654,-2.509333,4.901404,-1.906458,-8.880322,-4.471635,2.957801,4.146883,3.023515,-9.823153,4.906775,0.980775,-7.042251,-4.115670,2.803341,3.771900,-5.100752,6.462899,4.432125,4.953737,5.696938,-3.792274,-1.100063,-1.540797,0.900112,-0.320542,9.869776,-2.801944,7.115849,-6.471439,-8.831286,-3.089123,5.869055,8.756042,2.493327,-0.944936,-7.438362,4.275738,6.496425,5.412436,-7.390925,4.519349,6.834071,-1.099496,-7.920125,3.978957,-0.900103,6.577226,3.410948,-9.034939,-2.726029,9.650519,8.882705,4.967463,6.820170,8.831941,-2.934269,2.693519,4.247822,-3.710688,-6.817182,-4.074717,-9.699375,0.264123,-3.482848,-7.387356,-2.534974,-7.539812,0.694066,-0.226488,-4.437990,-0.341925,7.472697,-7.453416,4.033732,-4.147148,-6.102003,-1.976190,2.667807,-6.646241,1.114087,-5.268001,-7.644252,4.070194,-5.892491,-7.493550,-0.139550,-3.766786,-0.228285,-4.844359,1.739448,-5.728677,2.749255,-7.253788,-0.351372,8.070306,-2.994189,9.416871,-2.607707,-4.679547,2.551291,1.340442,8.447331,4.205091,-9.657455,-3.468592,-7.383111,6.323776,3.323011,-7.540519,-3.611922,-2.023975,1.150085,5.108235,-5.032759,3.163240,1.908812,5.594362,-6.480242,-6.302287,-2.397999,-2.295291,3.497067,6.719231,-8.942435,-3.286581,3.360583,6.145036,1.837624,-2.245060,-0.329865,4.034713,-8.593163,-6.447928,8.935537,3.114727,1.870654,-9.085235,7.149360,-3.563451,-0.084211,-2.185807,1.246837,-2.581651,-3.021234,-7.523697,-8.131780,-1.313290,1.278571,9.087035,-4.270181,-3.916605,2.285769,-5.383630,-8.048710,-0.827652,-8.510283,-6.620561,-1.126192,-0.532866,2.709331,6.467749,-6.282666,-6.125205,-0.183864,-2.609318,-1.150223,3.620575,9.784381,-8.246283,-6.197771,-8.694127,2.899673,-9.272763,-4.214417,3.389479,3.754634,2.503205,-7.360350,2.656511,-6.026085,9.064124,0.074846,-5.685956,1.783802,-9.805691,2.995838,-4.261192,-0.355715,-8.970559,3.567098,-0.993134,-0.195266,-8.592977,-9.312982,0.484807,3.555400,3.292838,9.539423,1.621144,1.946415,-8.894320,8.476930,2.888185,2.294346,-2.628023,3.058502,-5.098629,-8.199429,8.487576,-0.409909,1.428448,3.855160,-4.653354,-2.624431,7.305294,-0.322315,-3.034754,-7.199109,5.019753,4.523663,-7.122470,-3.865802,-0.377720,5.602642,5.129933,9.265252,2.574511,-6.651268,7.656518,-7.440289,-7.327633,1.630780,-1.080568,-4.564783,1.221848,1.667380,2.714632,-8.094008,-5.086234,8.830260,-4.126679,3.904003,4.495918,2.757060,-9.610820,-8.495474,-3.669843,-7.972762,8.678811,-5.259317,-2.299960,6.168779,-4.743475,-1.518538,7.298327,-7.941547,-5.881012,-3.893941,7.007138,-7.352283,1.717193],[-7.968452,-3.263708,-6.762660,-2.482313,3.879630,-2.038059,-3.651276,-9.374685,2.049679,-9.433989,8.788034,4.708667,-1.716385,-7.634208,4.113112,0.093324,4.118166,-1.892334,-9.902741,3.734718,3.207701,-0.108862,-1.920437,-2.568539,-4.416648,1.061946,7.051356,4.216182,-7.645325,6.049923,6.169772,4.569811,-8.053529,-7.399297,-5.135215,-0.855940,0.095712,7.590471,-9.519563,-9.188543,-3.370168,-8.998773,-2.422244,-8.758678,6.218215,-8.109236,-8.725469,-6.025228,7.311276,7.630068,-6.859247,-3.580331,-1.287542,5.389939,4.615961,-2.754208,1.183638,-7.337027,-4.726198,-6.731193,-9.285511,8.136880,0.990008,8.689751,-9.449961,-4.659077,3.304044,6.973875,8.509786,-3.484025,-8.047937,-5.365170,4.643262,1.397486,7.587704,-9.017311,2.388791,0.510353,1.670750,1.097718,6.559724,-9.101130,-3.974851,3.883502,-8.913549,1.548078,-2.908561,-3.598677,-3.626835,1.766146,-0.805099,2.214280,9.292514,-6.432185,1.168586,2.672770,0.985938,7.090961,2.878165,0.770329,-4.826398,-1.742024,2.423017,9.760212,-2.147131,8.120996,-4.636523,-3.743805,3.444606,-0.638477,3.100305,-9.905501,1.630556,-4.413086,-2.685780,-4.331494,-4.029847,6.721903,4.514982,1.960477,1.755024,-1.121669,6.390302,-3.195165,2.338912,-1.882647,-6.573266,-0.223172,-1.197650,-0.395684,-1.137100,-8.980813,8.831483,-9.716651,-8.150526,-2.767254,6.861391,1.080915,-7.184537,9.729692,-8.850829,-8.412740,-1.927772,-2.089262,2.403845,5.495151,4.660266,7.245891,8.845900,5.343277,9.573247,-0.673705,8.221731,-2.595741,4.509706,7.242956,3.328253,-9.203734,-5.055216,-7.207346,4.736201,-9.420086,1.899441,2.242691,7.745852,-6.679466,-2.360521,2.023122,-5.187145,1.486685,-3.376047,1.277014,-6.528438,4.066489,-0.649771,8.580045,-9.812916,-4.317296,2.232691,-0.841263,1.501591,3.176615,4.322695,1.281361,-5.662909,9.230085,9.533059,-9.166436,-0.637303,4.462342,-0.014984,-8.085762,-3.746379,-6.030910,-2.001616,-1.454016,-9.061850,-9.112015,2.232055,5.098273,-6.501875,-4.280400,-1.898416,-0.748234,-7.684610,9.630490,-6.808910,5.540930,8.167885,-3.682912,0.804720,5.196902,-3.803361,2.764888,3.841829,-5.662354,-2.450491,4.698720,5.493489,5.610041,4.108937,-3.169929,3.088415,-9.849934,-9.746846,-8.909970,-4.496778,1.942854,8.753274,-0.550321,0.792064,1.557996,6.370580,-5.869927,-1.914047,-8.894273,3.052829,9.478056,3.906867,6.190978,-0.923474,2.479474,7.227844,0.499858,2.676110,2.177689,-3.924292,-9.532508,4.448457,0.453826,3.521476,-9.588600,-1.134890,9.544699,8.911433,0.460683,-4.021291,-8.236138,6.117363,9.263017,4.070747,-5.830214,7.344864,8.750754,2.002520,-5.092003,3.453568,8.804597,-6.483292,3.354532,3.743422,1.159692,1.656904,3.032502,2.221150,5.237536,7.441761,3.969515,8.535389,-0.348725,0.332424,8.416305,0.428778,-4.957138,6.177358,3.716701,2.278807,-3.527612,9.748236,5.524166,-5.214889,8.483165,-5.456807,-6.673129,-9.643699,9.823019,3.758474,-3.687391,1.405539,-6.322988,-1.198335,-9.122579,-6.366319,-3.647393,-1.220416,3.722607,-9.692414,3.585043,2.947018,-6.289303,-3.212797,4.725796,-7.240161,-6.799810,-1.196709,-2.928952,-2.062588,-2.774986,-2.106505,-6.387244,0.496311,5.366903,6.504685,-2.102224,9.462796,-9.862666,-9.876700,3.468179,5.228387,0.477524,5.513022,-6.719413,-6.234898,-7.771289,0.537695,2.832453,-1.033329,-7.738286,2.989794,-0.884986,-5.510519,-6.325683,-4.246565,9.887115,4.249822,-3.914214,8.351067,5.936520,3.338348,-3.525531,-7.198164,7.459586,-5.870132,-0.779048,1.858471,-2.201545,5.520516,-7.505836,5.575996,6.734513,-8.398811,1.887777,-2.407217,2.864358,-3.951419,-6.519909,-4.259194,-4.120807,-0.289001,-2.882669,5.622715,0.893842,-1.822698,3.334043,0.466043,-5.810434,-4.435951,5.972380,-8.938664,-6.785503,-3.769700,-2.685593,5.395637,-6.215025,9.418975,0.209103,3.092473,-9.191081,-5.792987,5.713669],[-5.603999,-4.485238,8.348066,-9.492151,-0.302476,5.322043,3.643496,8.421970,-2.794282,-0.069951,1.906013,-9.473233,-8.850878,-7.396656,-6.941022,2.918975,7.949057,4.392772,5.314329,5.033355,2.649234,3.509043,-2.134253,8.710061,-9.784254,-5.709374,5.291162,-2.782831,1.283811,-2.537938,8.248804,3.938624,9.957972,1.133064,-1.006098,3.050962,3.334228,-9.715026,5.637831,-2.234398,-1.766476,5.497880,-6.436748,0.722388,-4.234452,2.517522,1.435790,6.039619,-6.197875,-7.322562,1.859550,-1.426467,-7.951431,-7.668301,-0.286588,9.630948,5.661809,-7.906062,-6.808855,-5.766924,0.302034,-4.344768,-9.417516,-8.853026,9.481254,9.986787,-6.500051,4.059157,-7.176641,-5.679069,1.821061,7.445169,5.204498,-6.385409,-8.745392,-8.967362,-0.957797,-1.096978,-5.395783,8.125708,4.590869,-2.169091,-8.845870,-7.167285,8.371072,4.921829,-2.509690,-1.571606,-0.154174,-1.069924,0.940959,1.502141,5.703390,-7.099981,-6.866591,3.766870,-5.777831,2.339054,-8.171854,7.041019,-5.033442,-4.035322,-1.803002,-6.028520,6.310378,4.431800,-2.718706,-6.312238,-3.104081,5.708897,5.173432,0.307391,7.058232,-7.432152,-9.198594,1.867593,3.792929,-4.267545,-7.713229,-4.310935,0.157920,-1.582947,-5.568441,3.206198,4.085471,7.468452,-2.145992,-2.349279,2.128844,3.983175,1.080312,1.423365,-7.189695,-6.804548,-8.165737,-8.421178,-4.055557,7.273492,2.782820,0.449611,-7.512382,9.359171,6.668466,-5.302637,7.008262,6.698128,-3.820954,4.782353,-4.704993,-6.559174,-3.876342,-6.054716,4.553882,-4.335874,-6.212374,-1.254263,-0.181232,4.689197,8.708817,1.987947,3.423302,1.814750,7.407187,-7.290003,-2.451740,-1.459038,6.348436,4.008204,5.257754,-8.243398,-3.399009,-0.108926,-8.038345,-6.593933,1.149771,-2.765545,-0.749386,-1.238610,-8.124924,4.153359,1.947948,-6.056772,-3.875731,-7.140387,8.259628,-7.562737,1.582591,-8.527419,-1.082985,7.860973,-3.485017,0.529412,-9.023082,-4.041175,-8.853232,9.066445,-9.826748,3.070114,-0.641097,-0.648086,-6.502712,0.439396,3.128791,5.314977,-1.417144,6.813375,8.098836,-5.255771,-4.745479,-9.236525,-3.976201,8.177992,5.232266,-3.553215,-6.530139,6.720396,3.020317,-6.602374,0.153558,-4.385672,-2.820550,-4.640094,-9.299437,4.317919,-6.089036,-3.043825,-7.530719,4.196611,-1.056021,5.668634,-7.164996,0.103922,1.896691,-9.966165,5.446729,-7.741795,-9.231976,5.963751,6.710278,5.081112,5.070197,2.417707,3.611035,4.929108,-4.004645,-6.252629,-1.822388,-8.259337,0.311236,-8.705811,4.078444,7.058339,0.914577,1.727665,8.520979,-5.361470,-1.526716,-0.253421,-4.011177,8.326886,-6.335898,7.460288,0.639123,-5.222882,-6.691298,7.730119,-9.949379,8.739340,-1.554980,-8.847426,-9.876591,-9.327167,-3.047862,-9.950319,-5.343384,2.085242,-2.120724,2.957290,-6.458484,-1.444655,-2.416661,6.210126,-8.128160,0.821270,5.911345,1.124735,-0.977259,-1.474879,-2.509633,-5.151815,-3.724242,-2.150762,-7.081724,-4.249805,5.890708,-7.077454,-8.201399,-1.666070,-2.677369,5.028977,-9.451749,2.275439,-9.669764,1.272226,4.715378,-5.668140,-2.231956,-9.425802,-3.058106,3.588081,5.359554,-1.185181,2.893721,5.464063,-9.997220,9.021172,3.093347,7.834653,-4.940019,-8.859001,-6.442722,1.598326,6.252655,-7.694930,-5.081740,-6.766237,4.403166,-3.639975,5.634328,-6.483739,-3.254057,-0.922113,4.672658,-0.488181,0.595654,0.797041,8.298742,-2.880895,-6.885870,-9.277183,-9.507941,-2.425369,6.575892,8.330274,-5.793599,-8.302288,9.653758,-3.012805,6.773369,3.009365,-8.059366,-0.386978,0.275042,-6.992160,9.012245,9.084682,0.297704,1.202794,-4.961837,-5.135010,2.519219,0.362955,5.234019,8.149954,-1.018406,2.297657,6.026826,-7.206554,-9.566752,-3.869256,-0.293963,-4.279970,0.651596,-3.229434,-1.153041,6.444780,-1.532875,-5.327899,-7.065462,-8.806065,-8.382060,4.291444,7.848077,0.495287,0.388571,-9.878404,2.561555,0.664891,-1.744302,-1.774203],[-9.760714,-2.746766,-7.196653,8.112159,-6.153035,-2.058076,1.489978,-3.712289,9.248001,2.439106,6.007821,-2.210749,-6.715857,-7.843407,-6.482943,6.422627,-3.338119,6.617587,-1.776667,7.945409,-7.352629,-2.112939,-4.875463,-8.387617,-4.921107,-6.904683,9.049277,-5.502181,-2.333633,7.285699,3.079830,-9.327378,-2.450329,-4.121376,-6.925706,-6.941978,7.961332,-9.063814,6.939486,-3.717730,-3.642017,-6.495485,1.136055,9.089721,2.053698,-1.459899,7.668598,-6.721402,-5.671747,9.478284,-4.722229,8.585060,-0.769564,1.326847,6.576169,4.233238,-7.561593,8.684005,-5.041192,-5.346583,0.916154,-5.703407,0.619665,0.588231,6.191879,-4.143193,-6.496587,-2.734436,8.449077,-5.132810,8.332506,3.459105,9.180508,6.307857,2.544572,5.732574,3.043949,-7.851280,-7.652199,-3.495772,-0.011252,-7.163396,0.394830,4.675094,-6.703445,6.186566,9.746759,-8.645938,1.175409,-8.660933,7.374063,-2.711424,6.573158,3.648202,-0.613411,7.715270,-3.841110,4.210770,-3.524105,-2.828856,-9.921520,-4.089864,-5.039943,8.363200,7.350625,9.017416,4.021386,3.291214,-4.062671,8.763156,-9.515177,9.982894,-0.675771,-2.076581,8.941774,3.906473,-1.557295,3.115525,-0.743710,4.806800,-6.628413,-9.706909,-9.886218,-8.853955,-0.351116,4.167741,-6.452343,4.110576,8.493008,-7.977962,3.215094,-0.883647,3.544958,-4.919555,-9.359801,3.671024,-6.305686,2.010053,6.895347,4.613714,1.295677,4.990498,5.243282,-1.275303,-8.069394,9.132651,-8.845640,-3.978202,0.430334,-4.405586,-3.060889,-4.325648,9.379986,6.482637,4.837944,5.355419,1.450296,4.090205,1.611764,4.003956,-4.768603,8.293639,-1.023422,-5.767771,9.563619,-8.074632,2.908704,-5.408063,-7.962443,3.936085,5.363786,-9.660710,5.924784,0.939787,7.514456,8.838501,-4.211099,-2.672705,-5.836110,-1.842399,3.438614,7.177215,-4.654567,-8.213277,6.923415,-1.958547,-1.733735,4.693447,-8.137278,-6.796017,3.509839,0.606737,1.655610,-2.605055,1.384665,1.897464,7.192278,0.844079,-5.230577,-6.388738,0.895448,-7.898141,1.647526,-9.806573,2.552003,6.874401,-3.413310,-1.327345,9.985091,1.916699,5.170528,4.231152,2.141555,-8.733305,-9.063049,5.610694,-3.129725,1.339451,4.040610,7.524933,4.632346,4.283826,-9.157068,8.670657,-6.617779,-8.437294,9.529563,9.992313,-6.123252,-2.992977,-2.190457,-7.637321,-4.667324,6.902839,5.349566,-3.544751,6.688153,-7.287608,9.176068,8.031997,-8.585544,1.861758,-0.903255,-1.890616,9.732304,6.953588,-8.522180,-4.334151,-5.740710,-2.769533,-8.220033,-4.549621,-4.926600,8.491345,-9.840465,-0.034184,-9.754826,-2.152433,-5.364941,0.709481,3.944972,0.635828,6.332672,-8.717762,3.111775,6.532067,7.818496,-9.451100,8.524399,8.453425,-2.715831,-1.359206,-7.481952,5.345053,-6.031320,-3.540180,-0.040674,3.872111,4.429196,8.182157,8.087381,-2.029889,-4.887669,-8.023856,8.566427,8.955309,3.935952,-4.876308,-6.587072,-0.797912,4.680954,-6.059640,3.678386,4.281960,-3.459706,1.266507,4.778541,-5.952232,-9.621756,4.941700,5.017937,-8.108340,8.039343,-4.138313,-3.646390,-9.296219,0.682929,6.344816,-8.637286,6.676647,4.008907,-6.189144,-5.418847,-1.054344,-5.921705,-9.524202,-1.054278,-5.407992,-0.485165,9.331307,-3.793581,-2.593810,7.807537,-1.951415,-6.293491,-5.485593,-3.666833,-0.629992,3.536401,-0.330563,8.980233,9.897183,6.973242,7.394631,-6.760846,-1.347677,-1.938801,-1.262923,8.024385,4.216776,-1.523484,5.650725,5.943753,-5.960606,1.407148,-6.031237,5.352956,-2.049026,8.832831,-1.834728,9.622961,-3.031552,2.230815,6.944164,8.042705,-0.248289,-1.958027,3.498318,-0.363290,-0.039818,-4.948192,-3.260714,5.533152,-0.251321,-2.291281,-5.385046,6.371645,9.179566,-0.619059,1.375712,9.733684,1.662654,-1.832413,3.881859,-6.032984,-9.370633,-7.654461,2.807576,6.071361,3.104323,-9.733318,6.646622,-3.644230,8.098365,7.198117,4.646184,-2.723536,-6.295141,8.647141,8.255563],[-2.865966,-8.906333,-4.461406,-4.313091,7.509741,9.882289,2.254121,4.901411,8.599668,-4.224714,-7.583228,-3.878625,0.318915,1.113454,-8.645049,-7.469536,-3.869277,-8.084244,-7.643887,-4.590216,-7.736168,-9.567591,8.584529,4.006163,-5.987976,9.746975,4.302096,2.390276,9.419902,1.330081,-3.005385,-2.698913,-7.902447,7.637975,6.936106,-2.741542,-2.637360,1.332623,8.629767,-8.974862,2.213433,-8.155378,2.790692,0.558957,-6.832358,1.976733,-8.353321,1.997185,-7.338539,-6.185103,-3.977396,0.675786,2.728310,-1.405115,7.855849,-1.510259,6.435720,-4.378157,-0.676352,2.382794,-1.344765,9.814265,-7.408744,-5.687703,-3.637393,-6.770661,2.113747,5.772391,-1.585800,5.752685,-5.920683,-5.899579,-8.061874,1.293632,-3.916060,9.544854,1.503056,-4.296069,4.432272,-0.601992,1.351165,3.859321,-3.381585,3.924854,-5.651413,-4.304597,-5.155015,-6.383043,9.853181,0.706525,-1.848475,9.271666,-3.756479,5.631924,-5.787468,9.611202,-1.668049,-8.367356,2.951855,-3.377421,0.890862,-2.792017,5.492666,-3.175758,-6.156134,7.238202,5.672634,-7.336653,-7.515365,9.761760,5.544611,-5.223807,5.606082,-7.817337,-9.338247,2.235230,-1.408213,7.031466,-1.116956,-5.976624,0.252537,-1.411187,-0.004185,-8.917517,-6.203359,2.457097,-5.462676,-5.105470,3.340189,-7.125043,2.016900,3.307596,-4.896545,5.934399,-6.857718,5.064252,0.130489,-1.723798,2.353566,-1.681837,4.129620,5.511604,8.628180,4.985118,0.791976,-1.507433,2.425312,-0.240454,-7.262706,5.988840,1.024135,6.750570,-9.481206,8.781196,-4.029161,8.244547,6.865007,-3.551816,-7.426266,3.891901,1.782577,-5.111486,0.878925,-5.230468,5.307605,6.950629,6.222679,6.227107,-9.000030,8.972710,5.802383,-4.693776,0.869521,4.592691,1.355842,5.587345,1.299304,6.600008,-4.168973,-8.419795,8.361335,0.328598,-9.669465,-3.903183,9.299203,-8.755470,7.637804,8.891627,3.645743,-2.266280,-5.631411,8.896678,-6.411713,-1.339112,0.106155,-5.876992,-8.727501,3.145003,-4.287365,-1.964778,3.920671,-9.953163,4.245817,8.036343,6.362959,9.081597,-5.040504,0.103104,-4.286137,2.237495,-4.005652,-3.424794,5.118786,-5.334110,-5.482606,3.848144,4.514756,-7.096899,-9.000191,8.973807,0.297614,0.974810,5.642250,-5.185280,-2.081795,3.746064,7.122210,-8.245984,5.076675,2.479645,7.910072,0.630581,-7.889118,5.964927,-3.288642,-1.559946,-8.354366,3.443883,-9.404859,7.932035,6.056639,-5.577489,-4.866917,-9.205329,1.100416,4.626592,-2.223785,1.169422,-2.955139,6.258932,3.351575,4.195214,0.064883,7.653504,-6.205266,8.043341,-2.812054,1.361479,-6.370356,-8.077529,2.337059,-7.133722,8.332455,-8.090977,-6.374336,-4.478364,-6.223789,2.950657,-9.698107,8.874658,6.969820,-2.696436,-4.188586,3.844122,1.876073,-9.266020,3.919079,7.093775,-1.033569,7.994870,1.395210,-7.018872,9.668441,-2.843352,6.690380,-8.884707,-2.381302,-5.374707,-0.420242,7.770905,1.918594,-1.766850,-5.857430,5.518888,-1.784455,7.160748,-8.424695,6.041897,-0.491010,6.656055,2.637430,-7.281285,5.794382,3.363240,-3.606898,0.520720,-2.190799,1.291972,7.063097,-3.947949,2.444246,-7.718035,2.817369,2.826112,3.741860,6.552979,-4.968623,-7.836561,-1.225151,-2.231073,-8.888986,8.243540,8.510794,6.094670,2.796885,-6.402258,6.740025,3.645589,-3.043020,-4.083631,8.225328,2.249096,-0.285096,2.663487,8.788924,3.046262,-1.905802,-0.619402,5.543129,-8.644858,5.919161,2.601759,2.480691,-8.777958,3.013416,8.988920,-6.636755,0.113600,-7.071675,-6.289300,-1.995340,8.075994,-6.934277,-8.162551,7.598691,-0.365714,-4.190180,-7.273272,-0.037381,3.519306,3.563423,2.178111,5.692784,-9.740748,9.146023,8.927795,9.343414,-8.826197,4.426925,8.975967,-9.649795,9.253804,-4.601301,-0.811733,-7.724335,-0.578063,8.651582,-0.324353,-5.932665,-3.272814,4.424644,5.365365,5.096828,-8.123690,7.352971,3.229597,0.014774,-4.958636,-7.834693,1.592236],[-0.474795,1.192879,6.228162,6.386538,-2.579909,0.538875,2.905430,-7.385247,1.294541,6.837613,0.921617,-8.588154,-3.378847,-1.428101,7.549526,8.104561,0.045456,4.092890,-1.809053,7.420372,8.177769,-9.850425,9.969482,3.418662,6.966633,5.990369,3.553258,-9.757373,-5.329552,5.584667,-9.553050,-1.838287,7.501062,-3.414511,-3.818688,-6.535413,-4.587405,-5.630681,-4.018533,-6.123302,8.742813,-2.635132,2.979283,-7.707345,8.144417,-0.600439,-4.864436,5.126166,-7.235146,-2.677444,4.034014,-3.909123,4.550140,-7.290467,-6.543036,-7.260854,-3.869363,8.860381,7.054835,-3.009022,5.107801,-9.007015,4.854007,0.487424,9.743567,-3.416844,-3.496648,-7.271350,5.194542,1.445766,-9.124158,2.979600,-2.926636,-1.963370,-8.251590,-3.822331,4.506213,-5.081208,5.059524,9.843006,4.628785,4.272432,-9.956175,3.190390,-0.741808,-7.391109,-7.271683,-7.590792,-7.188915,-8.034660,6.676735,-2.024115,1.219593,9.486088,-3.966990,6.365224,-5.775416,4.048617,6.443817,-1.891566,-7.780320,-7.408224,4.458454,6.870455,1.321655,-3.044076,4.570714,-0.298437,8.508871,6.583512,-6.670300,7.105830,6.333469,7.013070,-1.967414,5.979489,-8.241672,2.473357,-2.487314,2.347892,1.952719,-1.884635,-1.699532,3.402442,-9.530876,8.067626,-2.221061,3.641703,-5.726080,-2.861061,-5.923515,3.211874,6.975993,-0.193825,3.264732,0.176034,-5.347207,3.058769,-4.847622,-4.622785,9.073825,1.898304,8.533528,-0.768092,-9.560160,-8.435218,-3.714021,0.595602,-5.684031,5.434985,-5.627484,-2.433467,-8.120495,1.710875,5.788756,3.746738,-1.614546,-8.680352,5.619673,1.940447,5.490431,-1.701319,7.227429,5.087473,-1.492776,1.617851,4.284572,0.608142,-1.924143,7.333194,-8.219189,-6.112549,4.186609,-6.971085,7.112690,-5.800494,4.437335,-1.632810,4.493678,4.147722,-8.880113,-0.722703,-5.892750,8.529021,-7.557480,-5.384156,1.041552,8.536727,6.917770,5.020498,8.134085,0.149995,2.084973,6.769864,5.477805,-1.936389,-1.793207,-1.332356,-4.440712,5.553572,-7.733604,2.994618,-4.492808,-5.702612,2.717553,4.493864,-0.210392,0.704016,-9.241434,-8.162858,1.491070,-4.317662,4.381310,0.573113,-8.845634,-6.649317,-6.527894,9.192723,8.328451,2.550172,8.124206,3.092346,2.800794,1.300485,-9.989754,-4.785091,-0.005082,6.140348,8.701095,5.263774,8.612100,-5.709496,-2.126673,-3.912508,5.438936,-4.934870,-6.047479,-8.188905,-1.486049,-2.906488,6.667491,7.823243,9.854273,5.626952,3.823816,-0.469858,9.496022,-9.098540,-7.473196,0.762979,-5.756069,4.209978,7.076771,0.277990,9.058890,-8.777828,-8.690107,5.400210,-8.069189,-8.983032,4.359125,-6.652612,9.775903,-1.780646,-1.799569,8.698259,3.930156,8.576519,1.766812,0.492169,-1.522858,2.544117,4.419848,-5.751687,-3.109681,5.560262,-8.069820,-3.101027,-0.486043,4.535938,-0.548194,-6.124657,3.027040,-1.892259,-0.215294,-0.007534,-5.050517,0.233168,-1.605116,3.606060,-2.787175,-3.040875,6.938294,-1.531174,-2.617283,-2.274513,-1.345193,-6.513711,-8.369965,-3.945650,-9.753108,-6.058817,1.534463,-2.016117,1.204809,-0.606555,-3.825310,-5.579848,4.249610,-8.204110,2.568699,-1.623075,1.362721,6.591896,0.721725,-3.563167,-1.388195,-4.349679,-7.458585,6.168002,9.791869,2.339018,8.443873,9.039181,-0.496739,-1.626629,-7.566121,7.498445,1.707410,6.492592,3.453842,9.473243,-7.826178,2.189795,-4.994186,8.389434,-2.283725,-4.837984,-6.295190,-5.960099,8.481194,-9.695153,1.026681,2.071031,8.957731,6.395706,-0.350756,-9.882753,9.975792,1.377547,3.248395,0.761670,1.075698,0.010947,0.576832,-8.840681,-6.018448,-9.984633,-1.943522,-8.373340,-7.758720,-3.024058,-1.043672,-0.640647,-1.789112,-9.737920,-7.865667,1.577451,1.611131,5.350086,-3.266441,4.735539,7.667443,-7.700467,9.569254,9.816865,6.029211,-3.668615,-4.310433,8.103606,-0.166410,-8.958884,4.258725,-9.559238,-1.926096,8.989026,7.575769,1.802491,-8.423868,-9.162787],[7.742657,8.769059,-1.608252,-3.451969,-9.617043,6.905867,9.762994,1.228634,-4.091300,2.860156,-6.369473,4.504422,4.924280,-0.988011,1.788389,7.603638,-3.590503,4.596950,-0.192983,0.175531,7.999020,0.806462,7.014034,1.009068,-4.746132,-9.084471,2.575705,-8.264351,1.089682,-0.413224,-4.365551,9.487575,-8.488527,5.375465,-9.460367,-5.473600,3.400094,4.731015,-5.666272,-7.834863,2.683483,1.418206,8.849587,-6.954853,-1.293578,4.141000,-2.828523,8.504629,8.177938,-3.119370,-7.562822,0.515672,-5.529784,-7.372804,5.182447,-8.455869,3.808056,4.828692,5.262690,4.647398,-7.695064,-1.878325,1.238828,5.930953,-6.201220,0.669444,-9.847661,2.425094,7.661058,-5.381332,-5.321008,1.879240,-2.774041,-9.537727,-4.792999,-5.142026,-0.615382,-5.509882,-9.120180,-7.468588,0.907448,1.056214,-6.375412,-5.023695,-8.612401,-6.311416,5.090257,7.917066,-4.000603,-5.143697,1.468086,0.144205,0.136553,-0.256220,-1.689612,3.085662,-6.853553,7.004134,4.299397,-6.317205,-1.423583,-6.133203,-3.222467,-4.998668,-3.751317,-9.478132,8.173897,8.657336,3.976496,-9.192628,3.817381,5.866568,6.171382,-7.692673,-9.590020,-5.386642,-1.918831,2.315897,-5.369404,6.967865,-5.877864,3.153955,-4.942883,-0.171384,-4.160700,5.000750,-7.946977,6.161857,8.491832,-0.050280,-7.107298,8.627410,-2.713637,0.088614,-5.260797,4.394553,-0.441662,-3.045340,8.936839,-5.676049,3.987181,1.997465,-4.595149,0.533292,1.622445,-3.024252,3.365173,-7.732249,-3.370988,-3.648027,-1.851961,8.403210,-0.174981,1.990288,-2.501535,3.791140,2.033883,-5.030572,5.360764,-1.511544,6.602761,-8.139246,-6.546365,-4.285960,7.954529,6.367993,-3.801070,-4.555476,-0.852746,0.591334,-2.735530,-7.457562,8.934368,4.716459,3.635032,6.456994,-8.269705,1.372032,-5.967560,0.498637,-8.339779,-3.670097,8.017119,-6.805726,-8.106321,1.565797,-8.941705,5.499931,-7.939717,3.202906,-1.608569,-6.183768,-5.103876,1.231520,-5.617583,-1.042226,0.837622,0.597986,-5.101452,-2.906066,5.584031,4.451473,1.591699,-9.855492,4.794078,9.211522,-0.421119,5.307388,7.991616,-7.272209,4.998348,4.127374,5.568988,-4.074966,-2.355916,-5.152379,-7.335940,7.446850,-2.020170,4.656624,5.628081,5.785165,-0.456146,4.715419,9.012395,4.256373,-9.438796,9.510489,-5.532414,0.160461,-3.136575,-6.544464,9.511419,9.186181,6.436808,-9.621879,5.030662,9.905370,-3.413245,-8.753220,-0.505017,-9.981458,-7.629218,-6.544044,1.231241,1.685810,5.525440,-5.367631,6.749696,7.720234,-2.860277,-0.056728,4.167140,-1.366439,-3.224793,-6.995506,-4.786433,8.156627,-3.157750,5.794452,-9.679181,-1.130447,8.747440,-1.244520,-2.235381,9.903134,9.716754,-0.581560,3.139811,-8.543336,0.010828,-9.512321,-5.134932,-8.777710,1.712025,-7.032349,-0.228218,-4.859205,-2.248338,2.939579,-5.925572,1.358963,-8.048850,-4.027053,-6.742131,5.464414,9.995564,-7.501773,8.866288,3.930527,-7.669840,-5.067791,-1.407211,-9.275159,-6.317640,4.920191,9.052920,-9.299745,-7.474616,8.202959,-4.014469,9.026181,9.243331,2.062502,-9.419918,2.713588,-3.270377,-1.133672,-3.597010,6.035340,-8.894358,5.930538,-9.732612,0.657906,9.682239,2.893616,6.049185,0.256433,-8.707931,7.018245,0.927828,-0.693392,0.171656,-1.035673,3.254280,-0.515200,-0.899709,8.122381,8.472970,-2.101422,-6.925580,-3.952010,-9.109073,-1.405776,-5.703232,0.310463,-5.571629,-0.272444,-1.999658,-4.914637,-4.692462,8.773533,-4.161734,7.368320,9.364445,-2.816429,-6.330811,8.600831,8.211346,7.501649,-4.679334,4.035728,-7.203089,-5.624532,0.711979,6.704787,0.282074,-0.905547,3.159330,4.110181,7.151467,-7.888630,3.635204,-0.451290,3.327290,-8.170638,0.904830,4.851798,3.655980,-2.477536,-3.588428,4.963155,3.152364,2.552805,9.332669,3.595552,1.095968,-5.556341,-3.219733,9.259773,6.259943,9.254633,8.264098,-6.717854,-1.755551,0.837665,-6.431003,-7.981642,9.397561,8.726662]], dtype = "float32")#candidate|7242|(7, 390)|const|float32
var_7243 = relay.var("var_7243", dtype = "float32", shape = (40,))#candidate|7243|(40,)|var|float32
var_7244 = relay.var("var_7244", dtype = "int8", shape = (168,))#candidate|7244|(168,)|var|int8
const_7245 = relay.const([-6.240458,8.099265,0.415848,-9.247111,-2.022613,-0.983033,-1.190849,-0.297107,-9.025856,3.349272,2.483416,-4.654902,-1.339659,-0.881451,-7.494413,-0.796146,-4.466724,5.058794,-8.569872,7.280630,9.255564,6.958419,-9.468238,0.499712,5.536677,4.884747,-9.522779,9.959882,8.048216,-1.981537,6.268771,-3.334054,-4.014798,8.971415,4.201261,2.616684,-9.984744,2.186875,3.375625,1.320820,5.187481,7.742675,4.506542,-2.224670,-4.642330,-7.935631,-0.439940,2.434841,-6.213572,5.079534,5.586388,7.812555,3.548489,-5.940468,3.528080,-9.958016,-8.521054,-4.478828,-7.185966,-3.880362,2.525754,-1.359307,1.556951,-2.344382,-5.210663,-8.978747,0.338069,5.052586,-6.869032,4.237705,9.791289,-2.838689,9.516260,5.554037,3.348896,-0.282446,8.695750,-0.964274,-7.116074,-8.608421,-9.580236,-7.709543,-8.423657,7.903280,1.270118,9.560156,-9.624326,-4.793183,-2.848825,1.504040,-1.621032,9.812357,-1.501548,-4.403367,-0.732989,3.883570,2.879344,-9.364028,0.962731,-2.626960,-5.264956,7.423076,8.003941,-8.132273,-8.515789,-0.491159,6.629531,-8.511978,9.973409,-7.818888,7.684389,9.390176,6.696368,7.860634,1.780925,4.126590,2.832750,-9.885424,1.161306,-0.312619,-8.450791,-8.967653,-9.709321,0.531030,2.185750,-3.676437,2.152821,-6.255523,4.699266,9.087013,4.712527,1.284609,5.787518,-1.250032,-1.288912,-7.515975,5.300593,3.540992,0.923767,5.949297,-2.172624,-5.402703,5.551049,0.382455,-5.969657,3.182294,8.348147,-3.353094,-2.673054,0.953419,9.268644,3.408805,-8.785588,0.785700,7.580727,1.171393,-3.061090,2.621328,-6.072221,-3.453436,9.739453,-5.483923,-9.153934,-7.103032,5.762706,-9.396457,2.465851,8.187067,-9.498362,-3.596257,-1.973620,3.088923,4.885958,-0.183487,5.964473,-4.720306,4.519077,-9.992854,2.374981,-2.474962,-9.754254,1.706934,5.341989,-5.742896,1.505057,0.549393,-2.867958,-9.503508,-7.275474,9.134948,-1.721260,-9.327622,-5.961888,6.810909,7.926910,6.954685,-0.300975,-0.786544,2.528692,6.853030,2.252598,-4.063226,-5.674483,3.523784,-9.782193,-0.721875,-1.885621,-5.018378,7.562533,-7.818015,4.170062,8.377681,-5.619832,2.760419,-3.599456,6.517671,-4.542940,0.141450,-0.316766,0.960834,2.050049,0.341923,-7.647917,-5.328608,-1.645150,9.737350,-3.499909,2.766782,-3.070966,2.441069,-9.822931,-6.642658,-3.367923,6.282077,-7.130433,2.039843,-1.710021,4.620259,-7.341315,8.774308,-5.817557,8.517416,6.805530,2.171041,6.177276,-1.804508,7.634010,-4.868456,-0.197121,3.885798,-7.344507,-5.902026,5.755093,-8.505107,5.210697,-5.815377,-8.217984,5.127930,7.353259,2.130079,2.151958,-4.955011,-2.563192,-3.294749,-0.134073,4.130348,2.931019,6.949373,4.466498,-0.540173,0.601127,-9.817131,-4.911807,1.874086,-5.370359,5.311137,-0.852940,6.251639,-7.338042,3.590862,2.421695,-9.457047,-3.165835,5.827756,5.436103,0.522235,2.133214,-5.049733,0.791045,2.848508,-1.468769,0.548888,-7.403506,1.810249,-5.163588,9.760770,2.465566,-0.398514,7.235896,4.314785,-0.144636,-9.878596,-1.735158,1.677501,-9.699700,0.707044,5.782159,-6.909900,3.853056,5.083675,-3.429642,0.995848,-0.556946,-7.960542,-8.881604,-0.323527,-0.423283,-2.551767,6.391393,-6.064637,-4.196325,-7.639920,-6.036315,3.459606,-3.202600,5.708772,1.399180,-8.206633,9.449113,2.629937,-3.956732,-4.460880,-8.713894,5.533848,-4.509843,-2.957419,1.299487,4.445403,6.628073,-8.647498,8.907812,-3.712040,-4.961281,-2.003044,7.501096,0.737109,3.381680,-5.676641,-0.672250,0.786351,8.413192,9.665367,-1.534307,-6.283069,6.242693,5.534489,3.401726,8.201599,-2.004630,2.980135,-6.689719,9.998581,-4.385890,2.329667,5.213323,2.564477,-0.055618,8.856956,2.619852,-6.120664,-1.831424,6.035442,-3.681248,-1.054143,-5.392134,-8.714452,-2.772449,-8.241742,-8.434987,-5.834781,-4.604040,-4.818696,-2.041548,3.461688,-0.040134,7.829558,4.987434,-0.354068,3.390936,-9.530422,-6.658639,-4.224622,-7.334964,0.864071,2.290822,-3.567163,4.792996,-6.557193,3.948287,-5.732964,-9.352503,-4.124149,-4.031606,4.408419,9.746539,-5.757554,-0.142258,9.935766,1.832757,5.447298,-3.207239,9.981033,2.311985,5.599568,8.104278,-7.969476,2.003736,-8.323805,4.025869,-5.166311,9.013642,-5.086565,4.424989,3.175328,-4.766297,2.378197,-2.666662,-5.314016,8.674951,-4.654178,9.462841,-7.848695,-1.254998,0.216416,-2.351524,-1.177933,-5.655057,1.169351,-1.195607,-7.763151,-8.605280,9.846598,-8.761122,-5.798206,-8.826549,5.968626,8.206110,-3.016665,-1.949267,7.716022,0.319437,-5.603218,-0.007731,-4.313925,-0.133363,1.030695,-1.334681,-2.805874,-8.380657,-0.067845,9.916186,8.828742,8.949829,-4.026190,2.235643,-2.856281,-8.696937,-3.427296,1.791022,4.746384,0.200495,-0.791944,-9.283348,9.343698,8.488867,5.285282,8.793394,7.610045,-0.518012,-7.936238,2.612043,6.405203,0.664666,-3.561416,-2.282468,6.139954,-4.844900,4.472689,-7.490387,5.964629,5.017342,-4.501288,7.372790,8.153101,-1.972661,6.917959,4.715483,8.954207,-1.787194,1.716668,8.098937,7.667807,-7.573329,-5.028588,2.864749,-9.159581,-1.614305,9.519680,-0.370009,-7.082259,-3.188501,-4.861059,-8.488400,-7.195808,6.801848,7.147101,-4.336609,-7.869537,7.515732,6.685234,-9.678740,0.001051,6.105248,4.268683,-4.399231,-8.900502,7.535390,-2.395468,-2.160286,7.969144,-7.114048,-1.162484,3.806182,4.557374,-3.273727,9.859781,-6.292379,5.837381,7.595598,3.942276,-6.862366,-0.790084,-0.796478,9.244852,3.249131,-2.243775,1.163656,5.921902,8.001767,-6.073495,1.657567,-5.375272,-3.745832,5.512625,-8.538810,0.054365,-8.329273,2.572966,-2.641172,7.531791,4.794954,2.807514,3.145740,6.900483,0.091455,-9.878056,2.047753,-7.591744,-9.684696,1.432786,-0.291575,-8.054725,-1.149981,4.394547,-8.024422,-3.145373,-6.477367,2.630552,-8.288233,-9.213308,-8.359990,5.209830,-9.424158,1.394970,0.563439,1.118177,-4.870500,1.281619], dtype = "float64")#candidate|7245|(588,)|const|float64
call_7241 = relay.TupleGetItem(func_3588_call(relay.reshape(const_7242.astype('float32'), [15, 13, 14]), relay.reshape(var_7243.astype('float32'), [40,]), relay.reshape(var_7244.astype('int8'), [168,]), relay.reshape(const_7245.astype('float64'), [588,]), ), 0)
call_7246 = relay.TupleGetItem(func_3594_call(relay.reshape(const_7242.astype('float32'), [15, 13, 14]), relay.reshape(var_7243.astype('float32'), [40,]), relay.reshape(var_7244.astype('int8'), [168,]), relay.reshape(const_7245.astype('float64'), [588,]), ), 0)
output = relay.Tuple([call_7237,call_7241,const_7242,var_7243,var_7244,const_7245,])
output2 = relay.Tuple([call_7238,call_7246,const_7242,var_7243,var_7244,const_7245,])
func_7281 = relay.Function([var_7243,var_7244,], output)
mod['func_7281'] = func_7281
mod = relay.transform.InferType()(mod)
var_7282 = relay.var("var_7282", dtype = "float32", shape = (40,))#candidate|7282|(40,)|var|float32
var_7283 = relay.var("var_7283", dtype = "int8", shape = (168,))#candidate|7283|(168,)|var|int8
output = func_7281(var_7282,var_7283,)
func_7284 = relay.Function([var_7282,var_7283,], output)
mutated_mod['func_7284'] = func_7284
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4802_call = mod.get_global_var('func_4802')
func_4804_call = mutated_mod.get_global_var('func_4804')
call_7405 = relay.TupleGetItem(func_4802_call(), 0)
call_7406 = relay.TupleGetItem(func_4804_call(), 0)
output = relay.Tuple([call_7405,])
output2 = relay.Tuple([call_7406,])
func_7409 = relay.Function([], output)
mod['func_7409'] = func_7409
mod = relay.transform.InferType()(mod)
output = func_7409()
func_7410 = relay.Function([], output)
mutated_mod['func_7410'] = func_7410
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5414_call = mod.get_global_var('func_5414')
func_5415_call = mutated_mod.get_global_var('func_5415')
call_7431 = relay.TupleGetItem(func_5414_call(), 0)
call_7432 = relay.TupleGetItem(func_5415_call(), 0)
output = call_7431
output2 = call_7432
func_7437 = relay.Function([], output)
mod['func_7437'] = func_7437
mod = relay.transform.InferType()(mod)
output = func_7437()
func_7438 = relay.Function([], output)
mutated_mod['func_7438'] = func_7438
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5494_call = mod.get_global_var('func_5494')
func_5496_call = mutated_mod.get_global_var('func_5496')
call_7563 = func_5494_call()
call_7564 = func_5494_call()
output = call_7563
output2 = call_7564
func_7573 = relay.Function([], output)
mod['func_7573'] = func_7573
mod = relay.transform.InferType()(mod)
mutated_mod['func_7573'] = func_7573
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7573_call = mutated_mod.get_global_var('func_7573')
call_7574 = func_7573_call()
output = call_7574
func_7575 = relay.Function([], output)
mutated_mod['func_7575'] = func_7575
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5294_call = mod.get_global_var('func_5294')
func_5295_call = mutated_mod.get_global_var('func_5295')
call_7576 = func_5294_call()
call_7577 = func_5294_call()
output = call_7576
output2 = call_7577
func_7587 = relay.Function([], output)
mod['func_7587'] = func_7587
mod = relay.transform.InferType()(mod)
output = func_7587()
func_7588 = relay.Function([], output)
mutated_mod['func_7588'] = func_7588
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7597 = relay.var("var_7597", dtype = "float64", shape = (1, 15, 1))#candidate|7597|(1, 15, 1)|var|float64
uop_7598 = relay.asin(var_7597.astype('float64')) # shape=(1, 15, 1)
output = relay.Tuple([uop_7598,])
output2 = relay.Tuple([uop_7598,])
func_7602 = relay.Function([var_7597,], output)
mod['func_7602'] = func_7602
mod = relay.transform.InferType()(mod)
mutated_mod['func_7602'] = func_7602
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7603 = relay.var("var_7603", dtype = "float64", shape = (1, 15, 1))#candidate|7603|(1, 15, 1)|var|float64
func_7602_call = mutated_mod.get_global_var('func_7602')
call_7604 = func_7602_call(var_7603)
output = call_7604
func_7605 = relay.Function([var_7603], output)
mutated_mod['func_7605'] = func_7605
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7573_call = mod.get_global_var('func_7573')
func_7575_call = mutated_mod.get_global_var('func_7575')
call_7617 = func_7573_call()
call_7618 = func_7573_call()
func_1254_call = mod.get_global_var('func_1254')
func_1258_call = mutated_mod.get_global_var('func_1258')
const_7631 = relay.const(-3.183641, dtype = "float32")#candidate|7631|()|const|float32
var_7632 = relay.var("var_7632", dtype = "int64", shape = (91, 14))#candidate|7632|(91, 14)|var|int64
call_7630 = relay.TupleGetItem(func_1254_call(relay.reshape(const_7631.astype('float32'), []), relay.reshape(var_7632.astype('int64'), [637, 2]), relay.reshape(call_7617.astype('bool'), [20, 32]), ), 7)
call_7633 = relay.TupleGetItem(func_1258_call(relay.reshape(const_7631.astype('float32'), []), relay.reshape(var_7632.astype('int64'), [637, 2]), relay.reshape(call_7617.astype('bool'), [20, 32]), ), 7)
output = relay.Tuple([call_7617,call_7630,const_7631,var_7632,])
output2 = relay.Tuple([call_7618,call_7633,const_7631,var_7632,])
func_7637 = relay.Function([var_7632,], output)
mod['func_7637'] = func_7637
mod = relay.transform.InferType()(mod)
var_7638 = relay.var("var_7638", dtype = "int64", shape = (91, 14))#candidate|7638|(91, 14)|var|int64
output = func_7637(var_7638)
func_7639 = relay.Function([var_7638], output)
mutated_mod['func_7639'] = func_7639
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7667 = relay.var("var_7667", dtype = "bool", shape = (12, 10, 16))#candidate|7667|(12, 10, 16)|var|bool
var_7668 = relay.var("var_7668", dtype = "bool", shape = (12, 10, 16))#candidate|7668|(12, 10, 16)|var|bool
bop_7669 = relay.logical_or(var_7667.astype('bool'), relay.reshape(var_7668.astype('bool'), relay.shape_of(var_7667))) # shape=(12, 10, 16)
uop_7676 = relay.log2(var_7667.astype('float32')) # shape=(12, 10, 16)
output = relay.Tuple([bop_7669,uop_7676,])
output2 = relay.Tuple([bop_7669,uop_7676,])
func_7679 = relay.Function([var_7667,var_7668,], output)
mod['func_7679'] = func_7679
mod = relay.transform.InferType()(mod)
var_7680 = relay.var("var_7680", dtype = "bool", shape = (12, 10, 16))#candidate|7680|(12, 10, 16)|var|bool
var_7681 = relay.var("var_7681", dtype = "bool", shape = (12, 10, 16))#candidate|7681|(12, 10, 16)|var|bool
output = func_7679(var_7680,var_7681,)
func_7682 = relay.Function([var_7680,var_7681,], output)
mutated_mod['func_7682'] = func_7682
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5925_call = mod.get_global_var('func_5925')
func_5926_call = mutated_mod.get_global_var('func_5926')
call_7724 = relay.TupleGetItem(func_5925_call(), 1)
call_7725 = relay.TupleGetItem(func_5926_call(), 1)
output = relay.Tuple([call_7724,])
output2 = relay.Tuple([call_7725,])
func_7726 = relay.Function([], output)
mod['func_7726'] = func_7726
mod = relay.transform.InferType()(mod)
output = func_7726()
func_7727 = relay.Function([], output)
mutated_mod['func_7727'] = func_7727
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6245_call = mod.get_global_var('func_6245')
func_6246_call = mutated_mod.get_global_var('func_6246')
call_7734 = relay.TupleGetItem(func_6245_call(), 0)
call_7735 = relay.TupleGetItem(func_6246_call(), 0)
func_5282_call = mod.get_global_var('func_5282')
func_5285_call = mutated_mod.get_global_var('func_5285')
const_7739 = relay.const([[3.191704,-9.462231,7.594184,5.227361,-9.877914,5.653906,9.246731,-1.488050,0.326473,1.726795,-2.971253,-5.103867,9.911182,2.686337,1.089981,-5.325051,-9.874437,-1.558724,0.160807,-3.677117,8.941347,-3.065990,-5.059647,-9.444619,4.112954,3.409211,-0.449345,8.677050,4.450710,-4.906222,9.626676,4.387481],[0.853098,-8.207158,0.799366,0.312698,-9.456832,-9.579769,-8.205754,-8.681694,-2.176677,4.919197,7.767223,7.214509,2.904805,-2.050934,-6.359176,2.761856,4.436270,-1.851088,-4.943607,6.508122,1.674422,2.455820,-8.793439,-8.288839,8.050038,-0.742616,-8.011013,1.063922,4.867928,-0.380619,-2.467563,8.280542],[0.987662,-6.570477,3.062413,-2.171786,7.679204,-0.404241,-9.676394,1.969377,-8.551530,-7.932126,9.563317,8.962189,0.120251,-0.266298,0.773196,-0.486871,-4.609481,-6.503808,-1.683346,-6.057254,-8.460062,-7.885952,4.011957,6.325639,6.437536,-0.368314,2.914443,7.955748,-2.337853,-1.686992,5.093740,-9.706759],[-6.318884,-7.109785,-8.735121,-6.883927,9.580024,2.401878,-7.036046,2.096495,-5.002745,-0.253814,5.129150,9.111914,-9.187394,4.943813,-0.326786,6.884924,-5.988704,1.561134,-3.191661,8.718297,-0.889457,6.661000,0.982575,-2.498730,-2.329226,-5.599056,-3.694468,4.770447,1.362638,3.631730,8.635561,-5.405035],[-6.458220,-5.908488,-4.440701,-4.565143,-8.054374,5.752620,-7.388101,4.434259,7.726279,-2.644156,1.496319,-2.086583,-8.145449,-8.531441,-0.200173,1.733593,7.953298,8.075583,-9.355344,-1.721367,7.925954,-0.244382,-2.854761,7.437029,9.477592,2.722579,8.226479,-2.494044,8.867337,2.838798,5.014356,-7.932155],[-7.987927,-8.307904,-6.753368,9.857063,9.628237,4.137059,-5.187471,8.317582,7.268602,-3.440687,-7.957992,-3.811510,-0.822902,4.255527,6.718396,-5.239821,4.667202,-4.616273,0.749464,-7.415493,0.281822,-5.782187,-9.242627,-8.596551,7.092503,-8.356025,8.998208,0.488758,7.520014,3.674899,3.255047,-4.562125],[2.139267,-6.836886,7.488585,2.921100,-5.933941,-9.552856,4.936814,-9.688408,5.692898,-3.469099,-7.094449,-3.749010,-6.009718,-6.004085,7.397793,-6.942083,9.940268,-6.639544,9.581336,2.950635,3.365473,-0.900646,-0.063441,9.071662,-7.955575,-4.872377,-2.318557,-5.022945,4.175535,-1.123430,0.329379,6.480172],[8.215532,9.504566,6.606534,-1.525295,-3.668227,0.092868,-1.884088,9.697729,-5.336988,3.361494,-4.325899,5.286723,-5.794504,9.163922,-1.517821,-9.928566,-6.285010,2.593664,-7.432012,-8.276622,-5.517049,-9.709673,5.982803,7.521410,5.624088,-9.400022,-6.296589,4.113629,4.463928,9.950371,0.132719,0.249572],[6.208512,8.968986,-2.832984,8.604989,0.921687,2.200883,6.284947,-0.583075,0.061131,-7.987778,-3.037095,-4.285108,-4.208039,-6.784743,5.895372,2.066281,-0.688065,0.176989,8.737866,2.830064,-9.861325,1.460611,-4.832095,-3.513474,-3.920251,2.759340,3.121465,-0.003030,9.945750,9.047222,-2.588221,-4.771086],[-5.716066,6.611019,-0.247363,-9.940877,-4.722664,-1.556430,-5.795857,-0.443606,0.364275,1.982899,-2.988285,7.315186,-5.704261,-1.212526,0.645662,4.327632,-4.765825,4.416097,-7.306040,0.822073,7.436665,6.446851,4.603648,-6.910262,0.263451,6.316744,9.354693,-2.094530,8.859156,-6.318799,6.328043,-8.902811],[2.510370,-5.582005,-7.955627,-8.777789,0.681361,3.704543,4.244080,0.140889,9.502629,-8.106240,8.612438,6.331926,-5.378515,-7.404044,5.151600,9.184775,-0.294823,-9.722483,-1.645974,2.516436,-4.918969,-8.607002,-9.607709,9.989908,-9.778315,7.416830,-0.097717,-7.785172,-5.560041,-4.327894,-0.015371,-9.314494],[0.001097,8.794787,0.670098,7.977507,5.179826,-1.116034,3.627665,3.343361,8.956986,-8.808309,2.597590,-3.039092,3.595803,-1.924343,9.250000,-3.277264,4.185013,-6.125488,-3.170258,9.383060,5.072338,-5.501101,2.665381,-8.128530,-3.999109,-5.982933,8.316731,7.070620,7.064563,-7.771335,2.944731,8.482048]], dtype = "float32")#candidate|7739|(12, 32)|const|float32
call_7738 = func_5282_call(relay.reshape(const_7739.astype('float32'), [16, 3, 8]))
call_7740 = func_5282_call(relay.reshape(const_7739.astype('float32'), [16, 3, 8]))
uop_7742 = relay.tan(call_7738.astype('float64')) # shape=(16, 3, 8)
uop_7744 = relay.tan(call_7740.astype('float64')) # shape=(16, 3, 8)
func_3875_call = mod.get_global_var('func_3875')
func_3879_call = mutated_mod.get_global_var('func_3879')
var_7746 = relay.var("var_7746", dtype = "float64", shape = (960,))#candidate|7746|(960,)|var|float64
var_7747 = relay.var("var_7747", dtype = "int8", shape = (168,))#candidate|7747|(168,)|var|int8
call_7745 = relay.TupleGetItem(func_3875_call(relay.reshape(var_7746.astype('float64'), [15, 8, 8]), relay.reshape(var_7747.astype('int8'), [168,]), ), 1)
call_7748 = relay.TupleGetItem(func_3879_call(relay.reshape(var_7746.astype('float64'), [15, 8, 8]), relay.reshape(var_7747.astype('int8'), [168,]), ), 1)
func_5693_call = mod.get_global_var('func_5693')
func_5695_call = mutated_mod.get_global_var('func_5695')
var_7754 = relay.var("var_7754", dtype = "float32", shape = (84, 12))#candidate|7754|(84, 12)|var|float32
call_7753 = relay.TupleGetItem(func_5693_call(relay.reshape(var_7754.astype('float32'), [14, 6, 12])), 0)
call_7755 = relay.TupleGetItem(func_5695_call(relay.reshape(var_7754.astype('float32'), [14, 6, 12])), 0)
output = relay.Tuple([call_7734,const_7739,uop_7742,call_7745,var_7746,var_7747,call_7753,var_7754,])
output2 = relay.Tuple([call_7735,const_7739,uop_7744,call_7748,var_7746,var_7747,call_7755,var_7754,])
func_7758 = relay.Function([var_7746,var_7747,var_7754,], output)
mod['func_7758'] = func_7758
mod = relay.transform.InferType()(mod)
var_7759 = relay.var("var_7759", dtype = "float64", shape = (960,))#candidate|7759|(960,)|var|float64
var_7760 = relay.var("var_7760", dtype = "int8", shape = (168,))#candidate|7760|(168,)|var|int8
var_7761 = relay.var("var_7761", dtype = "float32", shape = (84, 12))#candidate|7761|(84, 12)|var|float32
output = func_7758(var_7759,var_7760,var_7761,)
func_7762 = relay.Function([var_7759,var_7760,var_7761,], output)
mutated_mod['func_7762'] = func_7762
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5893_call = mod.get_global_var('func_5893')
func_5895_call = mutated_mod.get_global_var('func_5895')
call_7832 = relay.TupleGetItem(func_5893_call(), 0)
call_7833 = relay.TupleGetItem(func_5895_call(), 0)
var_7836 = relay.var("var_7836", dtype = "float32", shape = (4, 3, 2))#candidate|7836|(4, 3, 2)|var|float32
bop_7837 = relay.bitwise_and(call_7832.astype('uint64'), relay.reshape(var_7836.astype('uint64'), relay.shape_of(call_7832))) # shape=(4, 3, 2)
bop_7840 = relay.bitwise_and(call_7833.astype('uint64'), relay.reshape(var_7836.astype('uint64'), relay.shape_of(call_7833))) # shape=(4, 3, 2)
output = bop_7837
output2 = bop_7840
func_7850 = relay.Function([var_7836,], output)
mod['func_7850'] = func_7850
mod = relay.transform.InferType()(mod)
mutated_mod['func_7850'] = func_7850
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7851 = relay.var("var_7851", dtype = "float32", shape = (4, 3, 2))#candidate|7851|(4, 3, 2)|var|float32
func_7850_call = mutated_mod.get_global_var('func_7850')
call_7852 = func_7850_call(var_7851)
output = call_7852
func_7853 = relay.Function([var_7851], output)
mutated_mod['func_7853'] = func_7853
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5586_call = mod.get_global_var('func_5586')
func_5587_call = mutated_mod.get_global_var('func_5587')
call_7855 = relay.TupleGetItem(func_5586_call(), 2)
call_7856 = relay.TupleGetItem(func_5587_call(), 2)
func_5153_call = mod.get_global_var('func_5153')
func_5156_call = mutated_mod.get_global_var('func_5156')
const_7858 = relay.const([6.505346,-6.870094,-2.838159,4.767246,8.546436,-0.635746,-5.918333,0.654089,-0.642570,-0.729688,-6.650945,-6.429566,1.012395,-6.527318,7.147943,-8.370608,8.831110,-3.810594,7.421713,6.511417,6.114657,-0.343658,8.971262,9.624594,6.223908,0.221507,6.700381,2.299013,7.239145,7.379934,-4.427119,6.477930,-0.487881,8.289655,4.319789,-3.896154,6.637397,-8.322598,8.551240,-0.314773,1.711701,-9.115702,4.782570,0.395087,-3.384601,3.909195,-1.736227,-9.375392,-0.213511,6.099670,-5.593970,-7.114190,-4.048909,2.729565,-0.663746,-9.409537,1.440665,-8.498300,-5.784486,3.713846,-3.052085,8.596478,3.725927,-3.942639,-3.041558,6.520939,6.227217,-3.347546,-8.476207,0.544070,8.251444,-7.395572,9.337128,1.362307,-8.881844,-7.525204,6.932575,-3.855963,4.504398,-2.379203,-4.600524,2.173193,1.846078,2.048279,1.904030,5.043536,-6.783171,0.614008,-8.531623,-3.533898,-7.295115,-9.781388,-0.993761,-3.243376,3.971090,7.792929,9.949982,9.209428,-2.507572,-4.502317,-6.687026,-0.901171,-1.236075,-7.183697,-4.501291,7.941586,3.273007,-8.638340,-7.521902,4.024078,4.663678,6.605333,1.116782,-2.155271,8.912936,7.940582,-4.811377,5.118238,-0.682104,4.118453,-2.438241,2.846823,-9.331684,1.041760,-3.015362,-3.497328,-8.492085,-6.219569,5.323961,4.932920,-4.671731,-7.224863,1.876470,4.430239,1.652883,-2.748693,3.493047,2.037861,-0.724826,3.947686,4.155440,-3.268760,7.310760,-0.382594,8.604053,-8.913958,-4.608974,-5.761779,-5.575442,0.490215,4.069774,2.326441,8.927149,-3.214603,1.335945,3.890043,-3.406343,-0.640436,-8.613267,-9.966516,7.004958,6.793035,6.158812,1.486401,1.949291,5.423595,-7.853850,-2.471736,0.510625,7.295744,-9.027086,2.919854,0.452393,-1.886480,-5.835927,8.574301,8.831333,-4.209590,5.333389,-6.305873,-2.442699,5.760840,-3.639819,8.060110,-9.826328,8.960690,0.468068,4.137252,-1.076383,-8.530597,-1.760746,-0.116442,6.040517,-8.387153,-5.036925,7.338622,-6.197290,-5.918607,-0.165094,-0.082332,-4.297720,6.141259,1.539915,-7.588566,2.673002,-1.335537,7.657025,9.692802,8.275537,0.173821,6.995968,0.045719,7.470414,-6.898747,6.770687,-8.707355,-4.717911,2.429445,9.114996,-9.936639,-2.422718,-6.231982,4.658306,-3.596663,-7.670540,7.610752,1.713226,2.362660,-5.225939,-4.797776,6.643401,6.906233,6.585767,5.460404,4.176842,2.000192,-4.231092,1.214085,4.887793,7.614468,9.440092,7.715350,9.825433,3.801933,8.036741,9.031841,-4.823948,-8.279864,3.407139,-4.493020,3.270253,-2.325421,-0.036766,-2.952878,-5.120469,9.481316,-8.993477,-2.520451,8.072355,2.864761,9.420786,2.848417,2.495889,7.503959,4.627952,0.115317,9.798644,4.493921,2.138923,-7.575470,5.802425,2.464149,-9.133683,2.299652,0.279832,-3.685305,8.817536,0.221475,-7.544624,3.782608,-6.483904,-2.545342,-1.650115,6.151660,1.470588,6.378970,6.686158,-3.869519,-9.352547,-4.174567,-5.702373,4.575939,-5.915771,4.937327,0.986432,1.381851,5.382354,-1.010708,1.538065,-5.438036,4.393558,6.446468,-6.879922,-1.611644,0.809062,5.967582,-4.996681,9.156366,7.560564,6.709325,2.337568,-6.137296,-8.877293,-4.927497,8.648118,2.377539,9.160436,0.926720,-2.207674,-2.057701,-2.243020,-1.629842,-7.704775,-6.136895,-1.121863,0.697288,-1.860211,-2.117755,-7.496210,-1.644649,6.497975,-9.578019,-8.124553,1.168113,6.619546,-3.504829,6.064510,-0.850097,-7.523819,3.463725,-6.685557,-1.289190,-1.598315,-0.205964,2.625241,-8.880048,-0.889961,5.029341,8.620491,8.605568,8.658366,-5.970262,-8.632535,-4.952589,3.142467,1.357432,-4.563784,-8.963771,4.986869,1.125447,7.307658,2.837788,-9.384254,-0.035156,6.072943,8.021632,9.619777,6.329641,-8.086879,-7.629460,8.766294,-8.594874,8.449667,1.851510,1.304733,-9.174225,-4.589031,-2.370891,-7.258175,-0.495663,-0.392198,-1.917838,-2.461113,-8.693502,-8.860933,-9.949256,-6.123934,4.367410,-0.333700,-3.017916,-7.856063,-9.362308,0.480693,6.996993,-6.802626,1.853333,1.888286,-3.826839,-1.481545,2.949098,-4.139494,-9.545306,-9.865121,-7.939254,-4.776932,-6.836836,5.202356,-4.494080,3.598765,9.544359,9.159707,-2.613043,-7.241333,-3.880436,6.695293,8.992702,-4.956224,8.845815,-7.295413,4.309385,-6.339800,3.931282,-2.731735,-1.837187,5.817784,7.799134,7.921222,-2.436984,8.087297,-9.378936,-1.919785,-8.258832,7.282175,3.489480,1.322638,1.091810,-1.627939,-7.422948,-0.716298,-2.755075,-6.445296,-1.018362,8.404066,5.854436,-7.100467,-5.254450,-4.409626,4.857675,-1.381438,1.086347,4.209565,7.605377,6.060104,-3.726634,4.548065,8.264501,7.250470,0.267126,-1.516381,9.584637,-2.867106,0.107634,-6.709113,-2.325340,1.514680,-8.839458,-1.927420,-6.723467,2.802238,7.769851,7.063420,-7.484900,3.799071,-5.803073,5.998379,-7.707923,7.810244,-1.154917,-1.062303,-3.499203], dtype = "float64")#candidate|7858|(480,)|const|float64
var_7859 = relay.var("var_7859", dtype = "float32", shape = (120,))#candidate|7859|(120,)|var|float32
call_7857 = relay.TupleGetItem(func_5153_call(relay.reshape(const_7858.astype('float64'), [480,]), relay.reshape(var_7859.astype('float32'), [60, 2]), ), 1)
call_7860 = relay.TupleGetItem(func_5156_call(relay.reshape(const_7858.astype('float64'), [480,]), relay.reshape(var_7859.astype('float32'), [60, 2]), ), 1)
output = relay.Tuple([call_7855,call_7857,const_7858,var_7859,])
output2 = relay.Tuple([call_7856,call_7860,const_7858,var_7859,])
func_7868 = relay.Function([var_7859,], output)
mod['func_7868'] = func_7868
mod = relay.transform.InferType()(mod)
mutated_mod['func_7868'] = func_7868
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7869 = relay.var("var_7869", dtype = "float32", shape = (120,))#candidate|7869|(120,)|var|float32
func_7868_call = mutated_mod.get_global_var('func_7868')
call_7870 = func_7868_call(var_7869)
output = call_7870
func_7871 = relay.Function([var_7869], output)
mutated_mod['func_7871'] = func_7871
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4838_call = mod.get_global_var('func_4838')
func_4840_call = mutated_mod.get_global_var('func_4840')
call_7882 = relay.TupleGetItem(func_4838_call(), 4)
call_7883 = relay.TupleGetItem(func_4840_call(), 4)
func_4684_call = mod.get_global_var('func_4684')
func_4686_call = mutated_mod.get_global_var('func_4686')
call_7886 = relay.TupleGetItem(func_4684_call(), 0)
call_7887 = relay.TupleGetItem(func_4686_call(), 0)
output = relay.Tuple([call_7882,call_7886,])
output2 = relay.Tuple([call_7883,call_7887,])
func_7891 = relay.Function([], output)
mod['func_7891'] = func_7891
mod = relay.transform.InferType()(mod)
output = func_7891()
func_7892 = relay.Function([], output)
mutated_mod['func_7892'] = func_7892
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7913 = relay.var("var_7913", dtype = "float32", shape = ())#candidate|7913|()|var|float32
const_7914 = relay.const([[[-1.187253,0.721670,-5.275621,1.960509,2.798435,8.937234,-9.945512,3.675568,-3.072795,1.145508,9.374313,5.893069,-6.550590,-8.907689,-0.765126],[8.100550,9.752646,-1.493283,-8.601670,6.198294,-4.392183,-8.480115,-6.691611,6.159826,2.256119,0.567269,8.328902,9.039722,5.105917,9.084473],[-2.077245,-9.355687,6.204132,9.025525,1.917684,7.389942,-7.785315,-7.175923,4.848115,8.025739,-3.097446,-5.307874,0.817275,-6.227979,4.721526],[8.368709,-6.147381,-8.625159,-0.094495,-2.901817,-5.605216,3.164365,1.102391,1.495895,-6.896321,3.853412,-0.225706,-7.294191,-6.148722,-3.525334],[-7.469182,2.287277,1.880045,-2.652610,4.032756,4.930236,6.647052,-2.125762,5.757292,9.019014,9.586073,-3.259634,-0.914581,3.996027,3.580329],[1.786395,7.873492,6.556258,-8.471635,3.577011,-7.245721,8.051404,3.471312,-4.025983,-4.606847,-7.004215,3.504660,5.167120,7.001532,-4.302244],[-9.830211,-3.855639,-9.979087,-7.305869,-4.561963,-2.242945,0.914547,-6.144071,-1.223294,0.598142,-9.299110,-8.195174,-8.057154,-0.825012,-3.098909],[0.589624,-9.000790,1.224279,8.003110,0.851516,6.002849,-4.792371,4.264433,7.667301,4.088381,-9.002360,1.993432,7.093924,-7.668801,7.187472],[-7.960232,0.413301,3.373892,3.401858,7.774658,-9.750135,9.679198,2.581135,6.778409,-6.419971,6.202378,-0.566092,7.858592,-2.787636,0.493950],[-7.140041,-1.601327,-5.774289,-0.202980,-8.268973,-6.467629,-0.606325,7.136119,8.223029,2.919608,-4.214346,-2.868477,0.914678,-6.070828,-9.640571]]], dtype = "float32")#candidate|7914|(1, 10, 15)|const|float32
bop_7915 = relay.power(var_7913.astype('float32'), const_7914.astype('float32')) # shape=(1, 10, 15)
func_4726_call = mod.get_global_var('func_4726')
func_4730_call = mutated_mod.get_global_var('func_4730')
var_7920 = relay.var("var_7920", dtype = "float32", shape = (24,))#candidate|7920|(24,)|var|float32
call_7919 = func_4726_call(relay.reshape(var_7920.astype('float32'), [4, 3, 2]), relay.reshape(var_7920.astype('float32'), [4, 3, 2]), )
call_7921 = func_4726_call(relay.reshape(var_7920.astype('float32'), [4, 3, 2]), relay.reshape(var_7920.astype('float32'), [4, 3, 2]), )
func_7637_call = mod.get_global_var('func_7637')
func_7639_call = mutated_mod.get_global_var('func_7639')
var_7925 = relay.var("var_7925", dtype = "int64", shape = (1274,))#candidate|7925|(1274,)|var|int64
call_7924 = relay.TupleGetItem(func_7637_call(relay.reshape(var_7925.astype('int64'), [91, 14])), 0)
call_7926 = relay.TupleGetItem(func_7639_call(relay.reshape(var_7925.astype('int64'), [91, 14])), 0)
func_4726_call = mod.get_global_var('func_4726')
func_4730_call = mutated_mod.get_global_var('func_4730')
call_7930 = func_4726_call(relay.reshape(call_7919.astype('float32'), [4, 3, 2]), relay.reshape(var_7920.astype('float32'), [4, 3, 2]), )
call_7931 = func_4726_call(relay.reshape(call_7919.astype('float32'), [4, 3, 2]), relay.reshape(var_7920.astype('float32'), [4, 3, 2]), )
func_4684_call = mod.get_global_var('func_4684')
func_4686_call = mutated_mod.get_global_var('func_4686')
call_7934 = relay.TupleGetItem(func_4684_call(), 0)
call_7935 = relay.TupleGetItem(func_4686_call(), 0)
output = relay.Tuple([bop_7915,call_7919,var_7920,call_7924,var_7925,call_7930,call_7934,])
output2 = relay.Tuple([bop_7915,call_7921,var_7920,call_7926,var_7925,call_7931,call_7935,])
func_7939 = relay.Function([var_7913,var_7920,var_7925,], output)
mod['func_7939'] = func_7939
mod = relay.transform.InferType()(mod)
mutated_mod['func_7939'] = func_7939
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7939_call = mutated_mod.get_global_var('func_7939')
var_7941 = relay.var("var_7941", dtype = "float32", shape = ())#candidate|7941|()|var|float32
var_7942 = relay.var("var_7942", dtype = "float32", shape = (24,))#candidate|7942|(24,)|var|float32
var_7943 = relay.var("var_7943", dtype = "int64", shape = (1274,))#candidate|7943|(1274,)|var|int64
call_7940 = func_7939_call(var_7941,var_7942,var_7943,)
output = call_7940
func_7944 = relay.Function([var_7941,var_7942,var_7943,], output)
mutated_mod['func_7944'] = func_7944
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7437_call = mod.get_global_var('func_7437')
func_7438_call = mutated_mod.get_global_var('func_7438')
call_7966 = func_7437_call()
call_7967 = func_7437_call()
output = relay.Tuple([call_7966,])
output2 = relay.Tuple([call_7967,])
func_7991 = relay.Function([], output)
mod['func_7991'] = func_7991
mod = relay.transform.InferType()(mod)
output = func_7991()
func_7992 = relay.Function([], output)
mutated_mod['func_7992'] = func_7992
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4648_call = mod.get_global_var('func_4648')
func_4650_call = mutated_mod.get_global_var('func_4650')
call_8044 = relay.TupleGetItem(func_4648_call(), 2)
call_8045 = relay.TupleGetItem(func_4650_call(), 2)
func_6740_call = mod.get_global_var('func_6740')
func_6742_call = mutated_mod.get_global_var('func_6742')
call_8055 = relay.TupleGetItem(func_6740_call(), 0)
call_8056 = relay.TupleGetItem(func_6742_call(), 0)
func_5494_call = mod.get_global_var('func_5494')
func_5496_call = mutated_mod.get_global_var('func_5496')
call_8067 = func_5494_call()
call_8068 = func_5494_call()
func_6740_call = mod.get_global_var('func_6740')
func_6742_call = mutated_mod.get_global_var('func_6742')
call_8071 = relay.TupleGetItem(func_6740_call(), 0)
call_8072 = relay.TupleGetItem(func_6742_call(), 0)
func_6184_call = mod.get_global_var('func_6184')
func_6186_call = mutated_mod.get_global_var('func_6186')
call_8081 = relay.TupleGetItem(func_6184_call(relay.reshape(call_8044.astype('bool'), [640,])), 0)
call_8082 = relay.TupleGetItem(func_6186_call(relay.reshape(call_8044.astype('bool'), [640,])), 0)
func_4480_call = mod.get_global_var('func_4480')
func_4483_call = mutated_mod.get_global_var('func_4483')
const_8111 = relay.const([1.805406,-2.886720,5.870581,-0.770478,0.254934,7.329053,1.073428,-0.813313,3.563572,-3.588317,-4.144076,5.666010,9.379110,5.665084,-5.953213,2.330585,-8.655541,-6.386747,-6.307487,-8.803009,-0.255915,2.541131,7.873233,-3.748015,1.744950,-9.884939,6.393879,3.062018,-5.976033,3.035246,-1.184163,-7.143769,-3.601189,-5.516026,0.540287,-7.699211,-7.017209,-3.857302,-0.257184,-2.819240,0.245300,6.598528,4.481210,0.864181,5.988276,-0.939459,3.107144,3.950006,2.721796,5.798411,-2.571438,0.213274,1.815675,1.436875,-6.421417,4.743548,-6.056600,3.895586,-5.559107,8.780180,9.871721,8.773309,-1.056708,7.205094,-2.749279,3.011054,-9.229093,-4.073259,-1.885954,5.112267,5.942778,-6.513835,-5.985561,4.404823,-1.650845,-2.467868,-9.405914,9.116193,-9.683632,1.992354,2.152836,-2.648447,9.980491,9.780015,-6.274319,-4.635079,-4.948903,4.710110,-1.085486,1.944739,2.562435,5.734654,4.316717,-3.382178,4.294016,-3.206291,-1.134964,-3.356998,6.915233,6.457757,0.777936,-9.187282,-4.268397,-0.503628,-1.573918,-3.205593,5.809072,-8.772255,-2.987396,9.199913,-5.731868,-1.877207,-4.185807,-8.381400,-9.345507,9.130126,9.418193,0.318164,3.449953,9.415996,2.746076,1.080953,2.533086,8.937390,-8.780185,7.458006,6.925079,-7.760109,-6.509863,6.747020,-9.482220,-7.805716,-1.223081,-0.780460,3.739319,-4.897078,9.086125,-5.201611,5.506109,-3.957981,-7.301453,-6.269054,6.416402,0.049778,6.470707,-6.208289,3.992739,8.472548,0.983670,0.678868,6.400542,5.457933,5.563861,4.135888,-7.209802,-7.488114,3.815159,-4.443492,6.195892,5.526921,-4.506740,0.604451,-8.848828,-9.572547,-6.059406,5.328679,5.580040,-4.249930,-4.741397,1.355117,2.327535,1.370421,-5.829824,3.905135,6.530677,-5.364092,-5.154098,2.140512,-9.615995,-8.736002,8.322932,6.070349,4.953283,1.104882,9.312790,-7.934043,-3.367346,-8.923210,2.272129,6.266814,-3.751785,-7.968833,4.994335,0.938951,4.327302,-8.958246,3.920516,4.433388,5.133010,-0.660487,4.205845,6.496447,-8.794820,-3.920978,7.109862,-7.217472,0.931576,-3.308284,-5.256592,5.029355,-0.907549,-9.501485,5.005078,-7.425749,-1.177681,1.925691,0.044906,-3.679938,-9.667538,5.177859,-3.461478,4.871663,-4.279560,-5.618573,-6.171954,6.948192,4.308933,-9.483046,9.178460,0.984937,-2.481139,-2.983044,4.411087,9.344032,9.702602,0.912614,7.914290,-8.490003,-6.637114,-7.121949,-5.478426,9.249388,-4.528776,-2.055966,-4.393448,9.641108,-1.802540,-5.661643,-4.081274,-1.081221,-8.688872,4.583305,-8.342839,-3.044393,-6.191619,2.236116,-4.739900,-8.478924,1.998809,-1.298675,-3.546686,-0.846746,0.340762,-0.076919,-5.832352,-5.026593,-9.596043,-7.372873,9.036185,-4.912796,-3.230172,-6.513441,-5.573501,8.514172,7.997690,-0.877994,8.785626,-6.360633,1.245139,5.924258,4.833455,4.395405,9.269650,8.242516,-7.591200,2.489317,7.573329,3.513755,-2.230975,0.056283,-8.342159,-1.106355,-0.057253,5.472319,9.902621,-3.037621,-7.697867,7.615100,9.298993,-5.644123,-1.441770,-5.034979,0.304929,3.351536,-3.949243,0.949079,-3.179649,0.713552,-4.778656,2.578135,8.985829,3.058055,4.205040,3.019825,2.038352,-3.455559,8.240095,9.555302,-0.387394,9.532393,-5.803604,0.493087,-0.294944,4.543815,7.940716,-6.202625,-2.880178,-0.427862,-8.848290,9.698628,6.535001,8.589790,-5.258107,4.498744,-4.777796,-3.480113,6.675362,7.857017,-9.776454,2.788545,2.927539,-5.962736,5.395493,8.069644,-1.569290,2.617689,-5.372029,7.856272,3.612159,6.510272,2.748690], dtype = "float64")#candidate|8111|(351,)|const|float64
call_8110 = relay.TupleGetItem(func_4480_call(relay.reshape(const_8111.astype('float64'), [9, 3, 13])), 0)
call_8112 = relay.TupleGetItem(func_4483_call(relay.reshape(const_8111.astype('float64'), [9, 3, 13])), 0)
output = relay.Tuple([call_8044,call_8055,call_8067,call_8071,call_8081,call_8110,const_8111,])
output2 = relay.Tuple([call_8045,call_8056,call_8068,call_8072,call_8082,call_8112,const_8111,])
func_8117 = relay.Function([], output)
mod['func_8117'] = func_8117
mod = relay.transform.InferType()(mod)
output = func_8117()
func_8118 = relay.Function([], output)
mutated_mod['func_8118'] = func_8118
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6082_call = mod.get_global_var('func_6082')
func_6083_call = mutated_mod.get_global_var('func_6083')
call_8138 = relay.TupleGetItem(func_6082_call(), 0)
call_8139 = relay.TupleGetItem(func_6083_call(), 0)
uop_8149 = relay.sin(call_8138.astype('float64')) # shape=(2, 6, 5)
uop_8151 = relay.sin(call_8139.astype('float64')) # shape=(2, 6, 5)
func_6378_call = mod.get_global_var('func_6378')
func_6381_call = mutated_mod.get_global_var('func_6381')
var_8157 = relay.var("var_8157", dtype = "float32", shape = (24, 1))#candidate|8157|(24, 1)|var|float32
call_8156 = relay.TupleGetItem(func_6378_call(relay.reshape(var_8157.astype('float32'), [4, 3, 2])), 3)
call_8158 = relay.TupleGetItem(func_6381_call(relay.reshape(var_8157.astype('float32'), [4, 3, 2])), 3)
func_5755_call = mod.get_global_var('func_5755')
func_5757_call = mutated_mod.get_global_var('func_5757')
call_8159 = relay.TupleGetItem(func_5755_call(), 0)
call_8160 = relay.TupleGetItem(func_5757_call(), 0)
output = relay.Tuple([uop_8149,call_8156,var_8157,call_8159,])
output2 = relay.Tuple([uop_8151,call_8158,var_8157,call_8160,])
func_8163 = relay.Function([var_8157,], output)
mod['func_8163'] = func_8163
mod = relay.transform.InferType()(mod)
var_8164 = relay.var("var_8164", dtype = "float32", shape = (24, 1))#candidate|8164|(24, 1)|var|float32
output = func_8163(var_8164)
func_8165 = relay.Function([var_8164], output)
mutated_mod['func_8165'] = func_8165
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8117_call = mod.get_global_var('func_8117')
func_8118_call = mutated_mod.get_global_var('func_8118')
call_8208 = relay.TupleGetItem(func_8117_call(), 3)
call_8209 = relay.TupleGetItem(func_8118_call(), 3)
func_7437_call = mod.get_global_var('func_7437')
func_7438_call = mutated_mod.get_global_var('func_7438')
call_8216 = func_7437_call()
call_8217 = func_7437_call()
func_5693_call = mod.get_global_var('func_5693')
func_5695_call = mutated_mod.get_global_var('func_5695')
var_8253 = relay.var("var_8253", dtype = "float32", shape = (1008,))#candidate|8253|(1008,)|var|float32
call_8252 = relay.TupleGetItem(func_5693_call(relay.reshape(var_8253.astype('float32'), [14, 6, 12])), 0)
call_8254 = relay.TupleGetItem(func_5695_call(relay.reshape(var_8253.astype('float32'), [14, 6, 12])), 0)
func_1018_call = mod.get_global_var('func_1018')
func_1022_call = mutated_mod.get_global_var('func_1022')
const_8260 = relay.const(1, dtype = "int64")#candidate|8260|()|const|int64
const_8261 = relay.const([[-5],[-8],[6],[-1],[8],[8],[-1],[10],[8],[9],[3],[-10],[-9],[10],[5],[2],[5],[-1],[5],[5],[-5],[5],[-3],[7],[10],[5],[-3],[-2],[6],[-4],[-3],[10],[-6],[2],[-2],[-5],[9],[-5],[4],[6],[-8],[-7],[-6],[3],[10],[4],[6],[3],[5],[-3],[4],[4],[-7],[-8],[2],[7],[4],[3],[3],[-5],[-3],[-6],[1],[1],[7],[-2],[4],[-6],[6],[-2],[-7],[8],[-2],[-5],[-7],[8],[7],[1],[3],[5],[7],[-3],[-3],[10],[5],[8],[2],[5],[-7],[1],[-1],[7],[10],[10],[-1],[-5],[2],[9],[-9],[9],[-4],[5],[-2],[-2],[-3],[6],[9],[-5],[-1],[-4],[10],[9],[9],[1],[9],[-3],[-6],[-9],[-1],[9],[1],[1],[9],[8],[-3],[-2],[-2],[-6],[1],[1],[9],[2],[-2],[-4],[-1],[10],[-10],[-1],[9],[1],[-2],[2],[4],[-6],[-9],[-4],[9],[-2],[9],[8],[10],[-2],[-9],[1],[4],[7],[-3],[-1],[10],[1],[-2],[-6],[10],[-6],[3],[-9],[-9],[5],[-5],[5],[10],[-5],[-4],[-9],[2],[2],[4],[-9],[-5],[3],[6],[-4],[2],[5],[8],[7],[4],[1],[8],[2],[2],[8],[-3],[2],[9],[-7],[9],[1],[3],[-1],[8],[8],[-9],[1],[1],[-1],[-7],[-10],[-3],[8],[8],[-8],[9],[10],[-5],[-4],[10],[4],[3],[9],[9],[8],[7],[6],[-10],[6],[4],[-9],[-1],[-6],[2],[9],[3],[1],[1],[1],[-10],[-7],[9],[-8],[2],[9],[8],[-10],[6],[7],[-5],[10],[-4],[-6],[-1],[-6],[-8],[-7],[-8],[3],[1],[-3],[-9],[9],[-8],[-3],[-5],[-3],[-4],[-5],[-7],[-5],[3],[9],[-8],[-9],[-6],[9],[-7],[3],[5],[10],[-9],[-10],[-3],[-9],[5],[3],[-5],[-9],[-7],[-4],[-3],[10],[-1],[5],[9],[9],[-2],[4],[-3],[6],[-4],[-8],[-3],[3],[-3],[5],[-2],[-6],[-8],[-3],[8],[-6],[1],[6],[2],[4],[2],[6],[-6],[7],[10],[7],[-7],[-8],[-6],[3],[-3],[6],[10],[9],[-5],[7],[-4],[-3],[5],[-4],[-2],[-8],[-6],[5],[5],[9],[8],[1],[-9],[-9],[3],[2],[-10],[-10],[6],[2],[6],[8],[-4],[5],[-10],[9],[-10],[-5],[3],[3],[-1],[-5],[-9],[8],[10],[-5],[9],[8],[6],[-3],[8],[4],[4],[-8],[7],[-3],[6],[1],[-5],[-3],[10],[3],[1],[1],[9],[-6],[7],[6],[3],[-8],[-5],[7],[1],[7],[9],[-2],[9],[-8],[-1],[10],[4],[6],[5],[-5],[-5],[-7],[4],[-2],[-3],[2],[8],[-3],[-3],[7],[-10],[3],[-2],[9],[10],[6],[-7],[-6],[10],[-5],[-6],[7],[2],[10],[10],[9],[-6],[-8],[-1],[6],[9],[7],[-8],[6],[-10],[2],[-9],[-9],[-8],[-6],[8],[-10],[8],[-3],[-5],[8],[-4],[9],[-9],[-9],[-5],[2],[-10],[4],[-2],[10],[-6],[4],[-10],[-2],[-7],[-8],[-9],[-2],[-9],[5],[4],[9],[10],[5],[4],[2],[6],[7],[-5],[1],[-1],[-3],[-4],[-9],[8],[9],[1],[7],[1],[-3],[-5],[-6],[-1],[9],[2],[-7],[8],[5],[7],[-5],[8],[-6],[-3],[-2],[4],[9],[10],[-2],[-10],[8],[2],[-7],[5],[2],[-6],[6],[2],[2],[-6],[-10],[-10],[10],[6],[-3],[-5],[-8],[-6],[7],[7],[-5],[6],[-6],[5],[6],[2],[10],[6],[-2],[-3],[9],[-7],[7],[10],[-7],[3],[9],[-5],[-2],[2],[-2],[3],[-6],[3],[1],[4],[4],[-5],[-9],[4],[5],[9],[-9],[-8],[5],[-8],[-4],[-10],[-1],[-8],[-8],[2],[-8],[-4],[-5],[2],[-8],[-3],[-5],[7],[-3],[-8],[7],[9],[10],[-2],[-2],[2],[-3],[-4],[7],[-10],[6],[1],[6],[-3],[4],[-10],[-1],[8],[-6],[2],[5],[7],[-2],[-8],[-8],[-3],[2],[8],[-3],[-9],[-4],[9],[7],[9],[-8],[-1],[-8],[-2],[-9],[1],[-9],[-2],[2],[10],[-10],[-4],[9],[-10],[-1],[-10],[-3],[-1],[-9],[-1],[-3],[6],[9],[-4],[-5],[-6],[-5],[-1],[-4],[-1],[-1],[5],[1],[-5],[8],[9],[-8],[-5],[10],[-10],[2],[-1],[-8],[1],[3],[-8],[-4],[8],[-8],[-8],[-9],[-8],[-1],[-6],[2],[7],[3],[3],[2],[3],[8],[2],[4],[-9],[-3],[1],[-5],[10],[3],[6],[-3],[-9],[3],[-8],[-6],[2],[4],[-5],[-4],[-3],[5],[-10],[4],[-4],[-6],[-10],[5],[5],[-1],[-5],[-4],[8],[1],[-8],[-2],[-1],[-6],[5],[10],[5],[-2],[-5],[4],[7],[3],[-10],[-10],[-6],[-6],[5],[7],[4],[6],[-1],[3],[-2],[-3],[-3],[9],[2],[-5],[10],[5],[-6],[10],[10],[9],[9],[7],[4],[8],[-4],[5],[7],[1],[-5],[-4],[-2],[10],[-9],[-1],[-8],[-4],[8],[8],[1],[9],[8],[5],[7],[7],[-4],[6],[-1],[6],[-5],[-10],[1],[-9],[-5],[-2],[7],[-2],[-3],[-10],[-4],[-2],[-9],[6],[3],[1],[-1],[2],[-5],[1],[-9],[8],[4],[1],[-8],[-8],[10],[-3],[-8],[-1],[1],[10],[3],[5],[2],[9],[9],[-7],[7],[10],[1],[-10],[-2],[1],[9],[3],[-4],[-3],[-5],[-4],[-4],[-10],[2],[6],[7],[5],[-8],[8],[5],[9],[1],[-6],[-5],[1],[-9],[8],[-10],[6],[10],[-1],[2],[5],[-10],[-7],[4],[1],[-8],[-2],[9],[-6],[8],[2],[4],[10],[-2],[1],[7],[-1],[2],[-4],[-5],[-4],[5],[9],[-7],[2],[9],[-5],[-2],[9],[8],[-5],[7],[-3],[-7],[5],[-3],[7],[3],[10],[3],[9],[-6],[6],[-3],[-9],[6],[-7],[-1],[2],[-7],[-1],[6],[-6],[6],[-2],[10],[2],[8],[-3],[5],[-2],[-7],[4],[9],[-7],[4],[7],[-6],[10],[-9],[-2],[4],[4],[-3],[4],[8],[-9],[-7],[4],[-10],[2],[-6],[4],[2],[-5],[-6],[1],[-10],[3],[3],[-1],[5],[7],[-4],[8],[9],[-6],[9],[-9],[3],[1],[1],[-9],[-6],[-4],[2],[-1],[5],[7],[-6],[-3],[-4],[-1],[10],[3],[4],[-3],[5],[-5],[6],[1],[5],[5],[1],[-9],[-6],[3],[-3],[5],[6],[7],[2],[-6],[1],[10],[-5],[7],[7],[1],[-3],[-5],[5],[1],[4],[-9],[1],[-2],[-5],[-2],[4],[-6],[-4],[-8],[-3],[9],[1],[7],[1],[4],[-1],[6],[9],[9],[-8],[10],[2],[2],[9],[9],[1],[1],[1],[8],[3],[7],[-4],[-10],[-3],[-7],[-7],[-5],[-7],[8],[-9],[1],[6],[-3],[-8],[-9],[4],[-9],[-1],[3],[5],[6],[-9],[2],[10],[-3],[9],[-10],[-5],[-2],[-6],[6],[-8],[-8],[1],[2],[-1],[9],[-9],[-7],[10],[-7],[-3],[-2],[10],[1],[-6],[3],[1],[5],[-3],[9],[5],[-6],[-8],[-5],[-3],[9],[-9],[-4],[6],[2],[2],[6],[-7],[7],[-7],[-5],[-4],[-1],[2],[-3],[6],[2],[-3],[-4],[-10],[1],[-2],[-7],[-9],[10],[-1],[-10],[-6],[9],[7],[-4],[4],[-8],[-10],[7],[9],[-4],[-8],[-1],[-5],[3],[-5],[-9],[6],[-10],[10],[3],[10],[2],[-6],[-4],[9],[-5],[10],[4],[-6],[-1],[1],[-4],[10],[7],[-8],[3],[-6],[1],[-5],[8],[-4],[-3],[-8],[10],[-5],[6],[3],[-3],[4],[10],[-2],[3],[1],[9],[-9],[-4],[-9],[-9],[-5],[10],[-2],[-5],[6],[5],[-8],[3],[9],[10],[-10],[-7],[-6],[-1],[-9],[4],[1],[-3],[-2],[-5],[6],[8],[6],[-6],[7],[-6],[6],[3],[-6],[9],[-7],[1],[-8],[-1],[3],[-7],[-8],[7],[-6],[1],[-10],[8],[2],[-8],[-10],[-8],[-1],[-6],[-1],[7],[5],[-5],[1],[-8],[-4],[2],[-8],[9],[-4],[10],[3],[2],[7],[3],[7],[4],[-8],[-8],[10],[7],[5],[-9],[10],[2],[-5],[9],[-2],[-4],[-10],[-7],[-8],[10],[9],[-4],[4],[-4],[-1],[-1],[-10],[-6],[-5],[7],[-7],[-6],[-7],[-6],[1],[1],[-6],[8],[8],[-8],[-4],[-3],[-1],[-3],[5],[6],[10],[-1],[-3],[4],[-4],[6],[1],[9],[-6],[2]], dtype = "int64")#candidate|8261|(1274, 1)|const|int64
call_8259 = relay.TupleGetItem(func_1018_call(relay.reshape(const_8260.astype('int64'), []), relay.reshape(const_8261.astype('int64'), [7, 13, 14]), relay.reshape(call_8216.astype('bool'), [640,]), ), 1)
call_8262 = relay.TupleGetItem(func_1022_call(relay.reshape(const_8260.astype('int64'), []), relay.reshape(const_8261.astype('int64'), [7, 13, 14]), relay.reshape(call_8216.astype('bool'), [640,]), ), 1)
func_1254_call = mod.get_global_var('func_1254')
func_1258_call = mutated_mod.get_global_var('func_1258')
call_8265 = relay.TupleGetItem(func_1254_call(relay.reshape(const_8260.astype('float32'), []), relay.reshape(const_8261.astype('int64'), [637, 2]), relay.reshape(call_8216.astype('bool'), [20, 32]), ), 4)
call_8266 = relay.TupleGetItem(func_1258_call(relay.reshape(const_8260.astype('float32'), []), relay.reshape(const_8261.astype('int64'), [637, 2]), relay.reshape(call_8216.astype('bool'), [20, 32]), ), 4)
output = relay.Tuple([call_8208,call_8216,call_8252,var_8253,call_8259,const_8260,const_8261,call_8265,])
output2 = relay.Tuple([call_8209,call_8217,call_8254,var_8253,call_8262,const_8260,const_8261,call_8266,])
func_8283 = relay.Function([var_8253,], output)
mod['func_8283'] = func_8283
mod = relay.transform.InferType()(mod)
mutated_mod['func_8283'] = func_8283
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8284 = relay.var("var_8284", dtype = "float32", shape = (1008,))#candidate|8284|(1008,)|var|float32
func_8283_call = mutated_mod.get_global_var('func_8283')
call_8285 = func_8283_call(var_8284)
output = call_8285
func_8286 = relay.Function([var_8284], output)
mutated_mod['func_8286'] = func_8286
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4648_call = mod.get_global_var('func_4648')
func_4650_call = mutated_mod.get_global_var('func_4650')
call_8291 = relay.TupleGetItem(func_4648_call(), 2)
call_8292 = relay.TupleGetItem(func_4650_call(), 2)
func_6740_call = mod.get_global_var('func_6740')
func_6742_call = mutated_mod.get_global_var('func_6742')
call_8293 = relay.TupleGetItem(func_6740_call(), 0)
call_8294 = relay.TupleGetItem(func_6742_call(), 0)
var_8295 = relay.var("var_8295", dtype = "float64", shape = (2, 6, 5))#candidate|8295|(2, 6, 5)|var|float64
bop_8296 = relay.multiply(call_8293.astype('uint16'), relay.reshape(var_8295.astype('uint16'), relay.shape_of(call_8293))) # shape=(2, 6, 5)
bop_8299 = relay.multiply(call_8294.astype('uint16'), relay.reshape(var_8295.astype('uint16'), relay.shape_of(call_8294))) # shape=(2, 6, 5)
output = relay.Tuple([call_8291,bop_8296,])
output2 = relay.Tuple([call_8292,bop_8299,])
func_8302 = relay.Function([var_8295,], output)
mod['func_8302'] = func_8302
mod = relay.transform.InferType()(mod)
mutated_mod['func_8302'] = func_8302
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8303 = relay.var("var_8303", dtype = "float64", shape = (2, 6, 5))#candidate|8303|(2, 6, 5)|var|float64
func_8302_call = mutated_mod.get_global_var('func_8302')
call_8304 = func_8302_call(var_8303)
output = call_8304
func_8305 = relay.Function([var_8303], output)
mutated_mod['func_8305'] = func_8305
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6245_call = mod.get_global_var('func_6245')
func_6246_call = mutated_mod.get_global_var('func_6246')
call_8330 = relay.TupleGetItem(func_6245_call(), 0)
call_8331 = relay.TupleGetItem(func_6246_call(), 0)
func_7573_call = mod.get_global_var('func_7573')
func_7575_call = mutated_mod.get_global_var('func_7575')
call_8341 = func_7573_call()
call_8342 = func_7573_call()
output = relay.Tuple([call_8330,call_8341,])
output2 = relay.Tuple([call_8331,call_8342,])
func_8343 = relay.Function([], output)
mod['func_8343'] = func_8343
mod = relay.transform.InferType()(mod)
mutated_mod['func_8343'] = func_8343
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8343_call = mutated_mod.get_global_var('func_8343')
call_8344 = func_8343_call()
output = call_8344
func_8345 = relay.Function([], output)
mutated_mod['func_8345'] = func_8345
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8117_call = mod.get_global_var('func_8117')
func_8118_call = mutated_mod.get_global_var('func_8118')
call_8368 = relay.TupleGetItem(func_8117_call(), 3)
call_8369 = relay.TupleGetItem(func_8118_call(), 3)
output = relay.Tuple([call_8368,])
output2 = relay.Tuple([call_8369,])
func_8371 = relay.Function([], output)
mod['func_8371'] = func_8371
mod = relay.transform.InferType()(mod)
mutated_mod['func_8371'] = func_8371
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8371_call = mutated_mod.get_global_var('func_8371')
call_8372 = func_8371_call()
output = call_8372
func_8373 = relay.Function([], output)
mutated_mod['func_8373'] = func_8373
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4838_call = mod.get_global_var('func_4838')
func_4840_call = mutated_mod.get_global_var('func_4840')
call_8429 = relay.TupleGetItem(func_4838_call(), 2)
call_8430 = relay.TupleGetItem(func_4840_call(), 2)
output = call_8429
output2 = call_8430
func_8431 = relay.Function([], output)
mod['func_8431'] = func_8431
mod = relay.transform.InferType()(mod)
output = func_8431()
func_8432 = relay.Function([], output)
mutated_mod['func_8432'] = func_8432
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8465 = relay.var("var_8465", dtype = "float64", shape = (5, 11, 14))#candidate|8465|(5, 11, 14)|var|float64
uop_8466 = relay.cosh(var_8465.astype('float64')) # shape=(5, 11, 14)
output = uop_8466
output2 = uop_8466
func_8468 = relay.Function([var_8465,], output)
mod['func_8468'] = func_8468
mod = relay.transform.InferType()(mod)
var_8469 = relay.var("var_8469", dtype = "float64", shape = (5, 11, 14))#candidate|8469|(5, 11, 14)|var|float64
output = func_8468(var_8469)
func_8470 = relay.Function([var_8469], output)
mutated_mod['func_8470'] = func_8470
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7201_call = mod.get_global_var('func_7201')
func_7203_call = mutated_mod.get_global_var('func_7203')
call_8521 = relay.TupleGetItem(func_7201_call(), 0)
call_8522 = relay.TupleGetItem(func_7203_call(), 0)
func_5153_call = mod.get_global_var('func_5153')
func_5156_call = mutated_mod.get_global_var('func_5156')
const_8524 = relay.const([2.677812,9.944118,4.745595,-1.507785,3.066451,8.166548,8.945189,2.541573,3.548048,-3.038065,-7.381659,0.892945,-4.924153,-7.277377,-7.283163,-5.059553,9.527915,5.412058,-7.591083,-0.620611,-1.017563,7.181245,0.290450,-7.538238,0.306980,-8.902619,3.326984,-3.559477,7.435615,-0.383432,-8.060365,1.678896,-2.337177,-0.165167,-5.324644,-2.320338,-6.892007,0.208785,-7.183825,1.444407,-5.972080,6.729111,1.355752,8.868778,8.833144,6.289132,-9.260587,6.082866,0.868608,-9.887688,-9.154000,0.155667,-4.816501,9.647259,-5.381187,0.361720,-4.060988,6.980022,-6.990751,-5.094646,-0.483385,8.638457,-8.659028,0.177900,8.003211,-5.656005,-5.534898,-5.574650,-1.953612,-3.311850,-9.967670,2.330656,-7.146995,4.629160,-2.949868,-9.449510,4.053642,5.330308,-5.953281,1.793049,-9.414166,-2.018142,6.881295,-7.490764,-7.126460,3.118266,-6.760657,1.401013,4.523724,6.897845,3.582280,-8.143410,-2.575322,-7.446319,-9.755810,-7.028821,4.001015,2.172412,8.577509,-7.250410,-4.134854,7.066627,8.464497,-0.495651,9.682307,-3.717895,6.640659,9.750085,-2.696770,9.990194,4.799466,-6.143028,-1.542607,-4.779827,3.616745,1.292905,-5.981490,-3.763862,8.972697,-1.566075,-2.225425,3.344432,1.236603,4.286054,8.112786,-7.804064,-2.844037,5.586328,-8.489045,0.342698,2.065131,-5.161995,3.563563,8.552708,4.118075,5.087526,-8.005646,2.710882,7.997887,6.626492,5.187546,9.282002,-2.544529,-9.577281,-0.626126,-6.098341,-9.596724,7.177774,1.864339,8.455955,-7.974686,6.083941,1.586731,-3.359310,4.765016,0.552218,1.632421,3.851327,-2.157462,8.451339,9.408828,-4.687695,-5.764527,9.385089,-0.714684,-1.809809,7.068792,3.981253,-6.417505,0.248811,0.808796,4.595949,7.989564,7.580400,-9.510098,9.496055,-2.578317,-2.986400,4.526281,2.263009,-5.572315,0.804280,0.886335,-6.924172,-7.881496,3.928660,4.371047,4.651250,4.398588,-3.059883,1.346669,5.016874,8.086714,-8.667274,0.226451,-0.489893,7.359131,3.858771,-6.560134,-8.239399,6.003501,-8.243545,-7.998085,-5.188349,-4.840229,-0.251053,-8.643769,-9.347953,9.868726,-2.278058,-1.895589,-4.854343,-0.847710,-2.082994,9.611723,-0.682742,-3.343528,7.931286,-0.881894,5.350640,-6.437600,-0.685233,5.449975,-2.262543,6.055701,-8.932163,8.512370,5.280074,-2.973459,-2.088977,-8.376153,2.860298,-2.124130,-2.967489,-5.739616,5.700234,1.937465,4.140564,-5.523849,6.402850,-9.477518,6.557835,-2.463913,-4.252703,-4.429912,-5.433083,4.509157,-4.762356,8.810601,-6.256937,-3.911871,-3.453551,6.336753,-9.291120,-3.513724,3.839498,9.645537,-1.641239,6.551156,1.559554,-5.412414,-3.383399,5.508572,1.097328,4.870487,-9.227684,2.306751,5.260594,-8.963102,7.300284,0.495260,9.519881,2.159386,-1.184093,-0.077842,9.659772,-6.366320,-7.939135,-0.108558,-4.304961,6.747172,3.469462,2.921360,1.995845,-0.339409,-8.748007,8.768257,2.189184,-0.220592,5.102518,9.366620,8.618254,3.709859,5.402528,1.576282,5.318120,-7.174249,3.598701,-2.133107,2.367071,3.563568,-3.285059,1.027687,-1.295247,-8.320700,1.337143,-7.279339,1.056796,-5.980688,9.064510,-6.770332,6.616670,2.622646,-4.406140,2.035416,-3.778029,-7.667790,-9.383958,-7.071281,9.302330,-0.292286,-8.092473,3.485651,-4.597863,-8.163778,7.197178,9.019271,5.434300,4.096575,-1.881136,2.335549,-2.755213,0.833008,-4.957214,9.787893,-9.494552,-4.742900,-3.629290,-6.083993,0.742190,-7.400394,7.230007,2.207912,-2.299336,0.295769,-2.974448,0.235360,-8.040021,7.389646,2.370079,-9.953427,-3.204230,-1.881510,-5.884436,-4.981210,-7.326961,-2.235559,-3.000031,-7.456915,-9.896940,8.481187,6.312629,1.416475,9.618202,-8.134663,9.399667,3.063766,1.078413,-1.645267,-1.445021,5.163421,9.950540,1.757201,-8.442589,-3.721127,7.017046,4.731976,2.981820,-9.884691,5.503490,5.690303,7.194076,-1.937985,-0.880214,-1.518728,0.931716,2.839535,9.933718,-1.147233,6.843803,-2.534956,-0.047786,4.129608,4.364492,4.745362,-8.264941,7.276749,8.646633,-3.020727,3.408324,-9.654376,-4.729966,8.897857,-8.600097,7.413862,2.540650,-7.569150,1.788836,8.783193,3.659214,8.159924,8.731925,3.475997,9.615378,-4.481321,-3.775340,9.492244,9.638931,-3.473262,7.998920,3.047334,-2.313606,-4.481295,2.052432,-2.480872,-9.608058,-4.359349,-3.190521,-4.148158,9.704410,-6.542313,-5.996577,-7.739029,4.908230,1.255690,0.302638,1.084603,8.579022,8.009393,2.262065,2.840547,-4.547942,1.591874,-2.135102,-9.596118,-1.241759,1.546340,-7.562353,-3.654391,9.967560,-3.258735,-1.542093,-6.214872,-5.195509,-7.319178,5.069288,3.132618,3.296279,-6.623949,4.604201,7.360936,-5.236211,-4.480724,0.821851,-8.405531,-6.591705,2.433038,-2.646558,-3.052754,0.253307,-5.599237,1.448408,-7.290087,-2.395793,-6.424851,8.276676,4.856485,-6.861660,3.283702,2.721374], dtype = "float64")#candidate|8524|(480,)|const|float64
var_8525 = relay.var("var_8525", dtype = "float32", shape = (30, 4))#candidate|8525|(30, 4)|var|float32
call_8523 = relay.TupleGetItem(func_5153_call(relay.reshape(const_8524.astype('float64'), [480,]), relay.reshape(var_8525.astype('float32'), [60, 2]), ), 2)
call_8526 = relay.TupleGetItem(func_5156_call(relay.reshape(const_8524.astype('float64'), [480,]), relay.reshape(var_8525.astype('float32'), [60, 2]), ), 2)
var_8537 = relay.var("var_8537", dtype = "float32", shape = (60, 2))#candidate|8537|(60, 2)|var|float32
bop_8538 = relay.subtract(call_8523.astype('int64'), relay.reshape(var_8537.astype('int64'), relay.shape_of(call_8523))) # shape=(60, 2)
bop_8541 = relay.subtract(call_8526.astype('int64'), relay.reshape(var_8537.astype('int64'), relay.shape_of(call_8526))) # shape=(60, 2)
const_8542 = relay.const([[-1.515830,0.896963],[-2.662081,5.676356],[-8.113246,0.878548],[4.530584,8.845278],[-7.469689,4.065553],[5.976037,6.226225],[0.852339,9.011658],[-8.798581,-7.922253],[7.921107,3.690999],[-4.857561,0.979025],[-9.483954,7.980999],[3.691895,-9.791544],[6.652940,-5.538143],[-1.853286,-1.687426],[3.528389,-5.197270],[7.177353,-0.441299],[-7.877602,-0.219927],[0.405434,2.418006],[0.047835,9.955221],[3.620657,-2.971492],[1.099951,2.008131],[-8.942878,5.307093],[-0.353141,3.887344],[-3.132111,-6.592584],[0.803088,8.448204],[-1.855485,-8.680837],[-9.397239,-6.964392],[5.169388,-7.225994],[5.124841,-5.265992],[6.894643,2.463859],[9.410350,6.115646],[7.823004,-2.387912],[2.418463,7.677607],[-9.534721,7.289637],[9.647278,-2.342866],[-0.021468,8.213720],[1.917246,0.850183],[-0.387698,-8.340216],[3.532834,9.979953],[2.248449,6.546714],[-9.468489,-5.546417],[-4.365005,0.114650],[6.431032,-5.293460],[-5.893716,9.448467],[1.366230,-5.391354],[-0.151310,4.608554],[7.756901,-4.666384],[-2.104952,5.328256],[-5.134425,6.848318],[2.371797,-7.639242],[-7.226058,-3.564593],[-8.158457,-9.930780],[-4.197886,5.238745],[6.068680,-3.300775],[-1.780297,5.123911],[-2.376120,1.976406],[-1.669051,8.645781],[0.838490,-1.897653],[-8.529913,-0.672362],[3.213464,-3.217938]], dtype = "float32")#candidate|8542|(60, 2)|const|float32
bop_8543 = relay.greater(var_8537.astype('bool'), relay.reshape(const_8542.astype('bool'), relay.shape_of(var_8537))) # shape=(60, 2)
func_4838_call = mod.get_global_var('func_4838')
func_4840_call = mutated_mod.get_global_var('func_4840')
call_8546 = relay.TupleGetItem(func_4838_call(), 4)
call_8547 = relay.TupleGetItem(func_4840_call(), 4)
func_6378_call = mod.get_global_var('func_6378')
func_6381_call = mutated_mod.get_global_var('func_6381')
call_8549 = relay.TupleGetItem(func_6378_call(relay.reshape(call_8546.astype('float32'), [4, 3, 2])), 3)
call_8550 = relay.TupleGetItem(func_6381_call(relay.reshape(call_8546.astype('float32'), [4, 3, 2])), 3)
func_6727_call = mod.get_global_var('func_6727')
func_6729_call = mutated_mod.get_global_var('func_6729')
call_8553 = relay.TupleGetItem(func_6727_call(relay.reshape(const_8542.astype('float32'), [120,])), 2)
call_8554 = relay.TupleGetItem(func_6729_call(relay.reshape(const_8542.astype('float32'), [120,])), 2)
uop_8559 = relay.sin(bop_8543.astype('float64')) # shape=(60, 2)
func_5282_call = mod.get_global_var('func_5282')
func_5285_call = mutated_mod.get_global_var('func_5285')
const_8580 = relay.const([-7.662184,2.949007,0.748244,2.439659,2.369546,4.229794,7.013323,-9.446753,-8.087466,1.530269,-5.192754,-0.415721,-5.657408,-8.524460,5.076889,-2.439548,1.570819,6.279277,-1.974741,-9.098515,-3.804813,-9.119369,-5.986353,0.304656,2.547515,5.133296,6.634606,-1.213198,0.961770,4.106745,-3.729569,-8.429544,2.914352,-3.770897,-1.582852,9.733240,-6.682792,0.643374,0.750256,-4.484443,8.311752,-0.008795,2.313247,7.682575,5.007260,3.303089,-3.654173,-3.659360,-6.676464,3.230266,1.357687,4.384628,-2.995215,6.034300,0.945768,-9.368693,6.730295,4.512938,2.481145,0.709822,-4.825791,-7.714413,1.000873,-9.034515,-6.744792,-1.643113,6.045282,9.672765,-5.345949,9.690954,-1.424933,3.335305,-3.677369,7.510254,3.210181,0.480068,3.250021,-1.466840,-2.211453,-4.509476,9.821673,-7.171879,-1.463545,-7.244337,-1.474685,-9.459579,-3.776620,8.238581,7.143231,-6.264744,5.683887,-5.610000,-2.187094,9.030125,4.400893,9.260185,5.614003,4.305469,8.554216,-2.702855,1.220813,8.286594,-2.832737,5.390526,3.044013,-4.981535,5.361747,3.344664,-4.115202,-7.702855,5.784997,-8.088726,1.086530,-9.807648,5.459920,1.723854,-4.133062,-4.408779,9.267824,-4.673481,-2.944660,1.842879,7.305473,9.098076,-1.409147,7.242421,4.306529,-1.953946,-0.826976,9.421073,1.199353,-3.450129,0.767513,4.020789,-7.544040,7.767410,-5.208092,-5.119558,-6.907958,9.705396,8.135323,-1.091710,-7.688913,-9.828585,5.703060,1.991928,-3.523521,-4.024710,-6.521961,-6.652848,0.106824,7.607157,-4.603827,4.234946,8.273149,2.755178,-8.597093,5.281150,-9.929278,2.937798,-5.370279,1.369382,-5.323968,-3.173417,3.324506,-5.951214,4.045725,-1.071080,1.947174,-6.567662,8.982109,-8.975474,3.705538,-6.426014,1.165053,6.504364,-0.750089,-2.442493,1.280149,-2.571415,3.388739,2.909050,-5.966519,-6.386538,-6.753585,7.001611,2.169680,8.967911,2.677034,-2.620995,7.437586,-2.599518,-7.975611,-3.086783,-0.205753,-2.880808,6.110486,-4.072796,-5.193426,-9.984255,0.070282,-8.578573,6.134626,8.062539,9.949950,8.727959,6.912225,1.161346,-6.829068,3.679947,-4.749453,-5.777227,-9.004770,1.038220,9.264673,6.002572,2.676584,4.154331,2.127658,-4.168785,4.462868,4.522628,0.484827,-4.178822,-3.966098,-5.439225,-5.449276,5.556193,9.622020,7.298936,-1.981204,4.016229,-1.314612,-3.556117,5.575574,-9.687438,-9.707813,-4.670542,-8.820846,0.193834,-6.267014,6.542912,-2.856750,1.025510,-0.138933,-0.645576,3.574532,-2.393623,8.359046,2.446900,6.480470,1.689959,4.650824,-2.377713,-0.337368,7.019472,9.915536,8.006943,1.591562,-9.254349,1.940465,-0.440032,-1.011930,-8.882149,8.833073,0.543091,-0.606849,-8.075998,-7.012611,8.218814,-4.259713,1.094511,-6.200064,2.523092,-4.202077,5.446303,-8.681061,-0.221592,-8.688200,-3.836360,0.485811,9.428332,-5.722021,1.991328,-4.964647,-3.191638,6.754104,-3.322337,-9.775958,5.117742,4.608632,8.587543,-7.418877,8.254264,-5.643112,-5.239380,3.831283,4.622317,6.966355,-4.439116,-9.730932,-8.772057,-3.136509,2.292918,-1.660345,3.185723,4.746628,-0.094534,3.724777,-2.428233,0.338676,1.346236,-5.981781,3.422363,9.785435,9.723640,-8.451162,-9.583443,3.536857,6.191227,-5.337802,7.015427,5.904210,-8.237988,3.524312,4.057161,1.314112,0.310461,7.094730,-0.866777,-4.254343,-2.315634,3.850860,-0.192789,-4.414240,5.218263,-4.525841,-6.220012,-2.157689,-6.198768,-3.134154,-6.472706,-2.134146,1.867948,-4.551290,0.592439,-4.455850,4.172511,-8.888839,-4.182163,-2.155869,5.104424,-6.865008,-4.397414,-2.671483,6.796323,-0.914038,7.041476,3.025715,9.739502,-0.646278,0.504527,-4.033989,-4.510909,-5.003944,-3.179609,-9.528345,2.037113,6.974678,3.128626,9.778017,-5.987720,3.938698,-1.380010,0.036732,-9.148920,-6.244982,-6.302020,5.788607,0.305280,5.571844,-1.028047,-0.736616,-1.874311], dtype = "float32")#candidate|8580|(384,)|const|float32
call_8579 = func_5282_call(relay.reshape(const_8580.astype('float32'), [16, 3, 8]))
call_8581 = func_5282_call(relay.reshape(const_8580.astype('float32'), [16, 3, 8]))
var_8583 = relay.var("var_8583", dtype = "float64", shape = (60, 2))#candidate|8583|(60, 2)|var|float64
bop_8584 = relay.bitwise_and(uop_8559.astype('int64'), relay.reshape(var_8583.astype('int64'), relay.shape_of(uop_8559))) # shape=(60, 2)
output = relay.Tuple([call_8521,const_8524,var_8525,bop_8538,call_8546,call_8549,call_8553,call_8579,const_8580,bop_8584,])
output2 = relay.Tuple([call_8522,const_8524,var_8525,bop_8541,call_8547,call_8550,call_8554,call_8581,const_8580,bop_8584,])
func_8593 = relay.Function([var_8525,var_8537,var_8583,], output)
mod['func_8593'] = func_8593
mod = relay.transform.InferType()(mod)
var_8594 = relay.var("var_8594", dtype = "float32", shape = (30, 4))#candidate|8594|(30, 4)|var|float32
var_8595 = relay.var("var_8595", dtype = "float32", shape = (60, 2))#candidate|8595|(60, 2)|var|float32
var_8596 = relay.var("var_8596", dtype = "float64", shape = (60, 2))#candidate|8596|(60, 2)|var|float64
output = func_8593(var_8594,var_8595,var_8596,)
func_8597 = relay.Function([var_8594,var_8595,var_8596,], output)
mutated_mod['func_8597'] = func_8597
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7409_call = mod.get_global_var('func_7409')
func_7410_call = mutated_mod.get_global_var('func_7410')
call_8609 = relay.TupleGetItem(func_7409_call(), 0)
call_8610 = relay.TupleGetItem(func_7410_call(), 0)
func_8593_call = mod.get_global_var('func_8593')
func_8597_call = mutated_mod.get_global_var('func_8597')
const_8627 = relay.const([[0.574109,-5.304698,8.854495,-5.728723],[-5.626291,4.491563,-5.564038,9.541110],[1.134782,-1.658329,-3.376742,1.731578],[-1.756925,8.121187,-6.319465,3.889115],[0.366351,-5.538853,6.470924,7.583044],[5.587604,2.307327,-9.268189,-6.513997],[-2.182335,0.358987,9.938609,-4.184610],[4.503322,-0.534626,6.711533,-2.704240],[8.389792,9.383314,4.120454,-6.134450],[1.611904,-7.063175,-7.490761,5.682878],[0.924149,-4.892817,-5.839770,1.367071],[-4.874705,6.035172,3.625150,1.627032],[-2.546089,9.888071,2.716091,-5.134031],[0.844557,1.356125,5.603234,-1.879714],[3.923279,9.782911,9.763044,-5.908383],[-7.360620,-5.050839,3.454226,-3.730077],[-4.427336,4.694961,-3.707640,2.933441],[1.348198,4.764173,5.596266,5.800420],[-3.439233,-5.952959,3.767556,-3.462275],[5.965782,8.867347,-0.335241,-1.963444],[-4.722021,-6.918327,-6.023321,-7.552214],[-0.196789,-6.537215,-1.823564,5.088514],[9.992977,-1.192526,-7.594720,-2.944957],[1.747836,-8.400641,-6.331216,6.679692],[-6.106652,7.076859,5.200334,-8.191191],[1.109390,5.811937,0.399478,1.875126],[0.659266,9.118024,-9.020683,2.509603],[-0.018896,2.332908,-2.007628,4.637625],[-6.375916,0.852878,-9.961144,-5.155591],[0.875031,8.102852,-1.875971,4.022413]], dtype = "float32")#candidate|8627|(30, 4)|const|float32
call_8626 = relay.TupleGetItem(func_8593_call(relay.reshape(const_8627.astype('float32'), [30, 4]), relay.reshape(const_8627.astype('float32'), [60, 2]), relay.reshape(const_8627.astype('float64'), [60, 2]), ), 8)
call_8628 = relay.TupleGetItem(func_8597_call(relay.reshape(const_8627.astype('float32'), [30, 4]), relay.reshape(const_8627.astype('float32'), [60, 2]), relay.reshape(const_8627.astype('float64'), [60, 2]), ), 8)
func_6968_call = mod.get_global_var('func_6968')
func_6971_call = mutated_mod.get_global_var('func_6971')
const_8632 = relay.const([True,False,False,True,True,False,False,True,True,True,True,False,True,True,True,True,True,True,False,False,False,True,False,True,True,True,True,False,False,True,True,True,True,True,False,True,True,False,False,True,True,True,True,False,True,True,True,False,False,False,False,True,True,True,False,False,False,True,True,False,False,False,True,True,False,True,False,True,True,True,False,True,False,False,True,True,True,True,False,True,True,False,False,False,True,False,False,True,True,True,True,True,False,False,True,False,True,True,True,True,False,False,False,True,False,True,False,True,False,False,False,True,True,True,True,False,True,False,False,True,True,True,False,True,False,True,True,True,True,True,False,True,True,False,False,True,False,True,False,False,True,False,False,False,True,True,True,True,True,True,False,True,False,False,False,False,False,False,False,True,True,False,False,False,True,True,True,True,False,True,True,True,True,True,False,True,True,True,False,False,False,False,True,False,False,False,True,False,False,True,True,True,True,False,True,False,True,False,True,True,True,True,False,False,False,False,True,True,True,True,False,True,True,True,False,False,True,True,False,True,False,False,False,True,False,True,False,True,True,True,False,False,False,False,True,True,True,False,False,False,False,False,False,True,False,False,True,True,True,False,True,True,False,True,False,False,True,False,True,False,False,True,True,False,True,False,True,False,False,False,True,False,False,True,False,False,True,True,False,False,True,True,True,True,False,True,True,True,False,False,False,False,True,True,False,True,True,False,True,True,False,False,False,False,True,False,True,False,True,True,False,True,False,True,False,False,True,False,False,True,False,False,True,False,True,True,True,False,True,False,True,True,True,True,False,False,True,True,True,True,False,True,False,False,True,False,False,False,False,False,True,True,False,False,True,True,True,False,True,True,False,True,False,True,False,False,False,False,True,True,True,True,False,True,True,True,True,False,True,False,False,False,True,True,False,False,False,False,False,False,True,False,True,True,False,True,False,False,True,True,True,False,True,True,True,False,True,True,False,False,True,True,True,False,False,True,False,False,True,False,False,False,False,True,False,False,True,False,False,False,True,True,True,False,True,False,True,False,True,True,False,False,False,True,False,False,True,False,True,False,False,True,True,True,True,True,True,False,True,False,False,False,True,True,True,False,False,False,False,True,True,True,False,False,False,False,False,True,True,True,False,True,True,True,False,False,False,False,False,True,False,False,True,True,False,False,False,False,False,False,True,False,True,True,False,False,False,False,True,True,False,True,False,True,False,True,True,False,True,True,True,True,True,True,False,True,True,False,True,False,True,True,False,False,False,False,False,False,False,False,True,False,True,False,True,False,True,False,False,False,True,False,True,True,True,True,False,False,False,False,False,True,True,False,True,True,False,False,False,True,False,True,True,True,True,True,True,False,True,False,False,True,False,True,False,True,True,False,True,True,False,False,False,True,False,True,True,True,True,True,False,True,False,True,True,False,False,False,False,False,False,True,True,False,False,True,True,True,True,True,False,False,True,False,True,True,False,False,False,True,True,False,True,False,False,False,False,False,False,False], dtype = "bool")#candidate|8632|(640,)|const|bool
call_8631 = func_6968_call(relay.reshape(const_8632.astype('bool'), [640,]))
call_8633 = func_6968_call(relay.reshape(const_8632.astype('bool'), [640,]))
uop_8634 = relay.atan(const_8627.astype('float32')) # shape=(30, 4)
func_3160_call = mod.get_global_var('func_3160')
func_3162_call = mutated_mod.get_global_var('func_3162')
call_8642 = relay.TupleGetItem(func_3160_call(relay.reshape(const_8627.astype('float32'), [120,])), 2)
call_8643 = relay.TupleGetItem(func_3162_call(relay.reshape(const_8627.astype('float32'), [120,])), 2)
bop_8653 = relay.bitwise_and(uop_8634.astype('int16'), relay.reshape(const_8627.astype('int16'), relay.shape_of(uop_8634))) # shape=(30, 4)
output = relay.Tuple([call_8609,call_8626,call_8631,const_8632,call_8642,bop_8653,])
output2 = relay.Tuple([call_8610,call_8628,call_8633,const_8632,call_8643,bop_8653,])
func_8660 = relay.Function([], output)
mod['func_8660'] = func_8660
mod = relay.transform.InferType()(mod)
output = func_8660()
func_8661 = relay.Function([], output)
mutated_mod['func_8661'] = func_8661
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5925_call = mod.get_global_var('func_5925')
func_5926_call = mutated_mod.get_global_var('func_5926')
call_8691 = relay.TupleGetItem(func_5925_call(), 0)
call_8692 = relay.TupleGetItem(func_5926_call(), 0)
var_8693 = relay.var("var_8693", dtype = "float32", shape = (2, 20))#candidate|8693|(2, 20)|var|float32
bop_8694 = relay.bitwise_or(call_8691.astype('uint32'), relay.reshape(var_8693.astype('uint32'), relay.shape_of(call_8691))) # shape=(2, 20)
bop_8697 = relay.bitwise_or(call_8692.astype('uint32'), relay.reshape(var_8693.astype('uint32'), relay.shape_of(call_8692))) # shape=(2, 20)
output = bop_8694
output2 = bop_8697
func_8704 = relay.Function([var_8693,], output)
mod['func_8704'] = func_8704
mod = relay.transform.InferType()(mod)
var_8705 = relay.var("var_8705", dtype = "float32", shape = (2, 20))#candidate|8705|(2, 20)|var|float32
output = func_8704(var_8705)
func_8706 = relay.Function([var_8705], output)
mutated_mod['func_8706'] = func_8706
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5469_call = mod.get_global_var('func_5469')
func_5471_call = mutated_mod.get_global_var('func_5471')
call_8735 = relay.TupleGetItem(func_5469_call(), 1)
call_8736 = relay.TupleGetItem(func_5471_call(), 1)
const_8745 = relay.const([-4.856403,-6.887380,9.143538,0.121783,-4.439804,-7.929822,0.674032,0.678202,7.217348,-4.255815,-5.347339,9.221469,5.986868,-8.123877,5.278843,1.706042,-4.930600,2.484524,6.685806,8.955956,-9.226095,9.754676,-5.111964,-6.020015,-1.091405,-4.147998,9.632282,-5.854507,-8.651911,8.007415,-3.397404,1.929565,-0.623803,-5.168804,6.568789,-0.986015,6.597089,5.514290,-4.777061,4.886072], dtype = "float32")#candidate|8745|(40,)|const|float32
bop_8746 = relay.power(call_8735.astype('float64'), relay.reshape(const_8745.astype('float64'), relay.shape_of(call_8735))) # shape=(40,)
bop_8749 = relay.power(call_8736.astype('float64'), relay.reshape(const_8745.astype('float64'), relay.shape_of(call_8736))) # shape=(40,)
func_7602_call = mod.get_global_var('func_7602')
func_7605_call = mutated_mod.get_global_var('func_7605')
const_8755 = relay.const([-2.096518,-8.341619,-0.161282,-3.716308,7.875770,8.814570,7.724358,1.485853,-2.668563,3.845565,5.608962,6.929651,-8.272442,-7.433903,-8.129079], dtype = "float64")#candidate|8755|(15,)|const|float64
call_8754 = relay.TupleGetItem(func_7602_call(relay.reshape(const_8755.astype('float64'), [1, 15, 1])), 0)
call_8756 = relay.TupleGetItem(func_7605_call(relay.reshape(const_8755.astype('float64'), [1, 15, 1])), 0)
output = relay.Tuple([bop_8746,call_8754,const_8755,])
output2 = relay.Tuple([bop_8749,call_8756,const_8755,])
func_8759 = relay.Function([], output)
mod['func_8759'] = func_8759
mod = relay.transform.InferType()(mod)
mutated_mod['func_8759'] = func_8759
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8759_call = mutated_mod.get_global_var('func_8759')
call_8760 = func_8759_call()
output = call_8760
func_8761 = relay.Function([], output)
mutated_mod['func_8761'] = func_8761
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5893_call = mod.get_global_var('func_5893')
func_5895_call = mutated_mod.get_global_var('func_5895')
call_8788 = relay.TupleGetItem(func_5893_call(), 0)
call_8789 = relay.TupleGetItem(func_5895_call(), 0)
func_5986_call = mod.get_global_var('func_5986')
func_5988_call = mutated_mod.get_global_var('func_5988')
call_8790 = relay.TupleGetItem(func_5986_call(), 0)
call_8791 = relay.TupleGetItem(func_5988_call(), 0)
output = relay.Tuple([call_8788,call_8790,])
output2 = relay.Tuple([call_8789,call_8791,])
func_8794 = relay.Function([], output)
mod['func_8794'] = func_8794
mod = relay.transform.InferType()(mod)
output = func_8794()
func_8795 = relay.Function([], output)
mutated_mod['func_8795'] = func_8795
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7587_call = mod.get_global_var('func_7587')
func_7588_call = mutated_mod.get_global_var('func_7588')
call_8802 = func_7587_call()
call_8803 = func_7587_call()
func_8759_call = mod.get_global_var('func_8759')
func_8761_call = mutated_mod.get_global_var('func_8761')
call_8806 = relay.TupleGetItem(func_8759_call(), 2)
call_8807 = relay.TupleGetItem(func_8761_call(), 2)
func_5732_call = mod.get_global_var('func_5732')
func_5734_call = mutated_mod.get_global_var('func_5734')
call_8808 = relay.TupleGetItem(func_5732_call(), 0)
call_8809 = relay.TupleGetItem(func_5734_call(), 0)
func_8759_call = mod.get_global_var('func_8759')
func_8761_call = mutated_mod.get_global_var('func_8761')
call_8810 = relay.TupleGetItem(func_8759_call(), 2)
call_8811 = relay.TupleGetItem(func_8761_call(), 2)
func_6378_call = mod.get_global_var('func_6378')
func_6381_call = mutated_mod.get_global_var('func_6381')
call_8829 = relay.TupleGetItem(func_6378_call(relay.reshape(call_8808.astype('float32'), [4, 3, 2])), 0)
call_8830 = relay.TupleGetItem(func_6381_call(relay.reshape(call_8808.astype('float32'), [4, 3, 2])), 0)
output = relay.Tuple([call_8802,call_8806,call_8808,call_8810,call_8829,])
output2 = relay.Tuple([call_8803,call_8807,call_8809,call_8811,call_8830,])
func_8831 = relay.Function([], output)
mod['func_8831'] = func_8831
mod = relay.transform.InferType()(mod)
output = func_8831()
func_8832 = relay.Function([], output)
mutated_mod['func_8832'] = func_8832
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7891_call = mod.get_global_var('func_7891')
func_7892_call = mutated_mod.get_global_var('func_7892')
call_8841 = relay.TupleGetItem(func_7891_call(), 1)
call_8842 = relay.TupleGetItem(func_7892_call(), 1)
func_8117_call = mod.get_global_var('func_8117')
func_8118_call = mutated_mod.get_global_var('func_8118')
call_8849 = relay.TupleGetItem(func_8117_call(), 1)
call_8850 = relay.TupleGetItem(func_8118_call(), 1)
func_6313_call = mod.get_global_var('func_6313')
func_6315_call = mutated_mod.get_global_var('func_6315')
call_8851 = func_6313_call()
call_8852 = func_6313_call()
output = relay.Tuple([call_8841,call_8849,call_8851,])
output2 = relay.Tuple([call_8842,call_8850,call_8852,])
func_8859 = relay.Function([], output)
mod['func_8859'] = func_8859
mod = relay.transform.InferType()(mod)
mutated_mod['func_8859'] = func_8859
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8859_call = mutated_mod.get_global_var('func_8859')
call_8860 = func_8859_call()
output = call_8860
func_8861 = relay.Function([], output)
mutated_mod['func_8861'] = func_8861
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5925_call = mod.get_global_var('func_5925')
func_5926_call = mutated_mod.get_global_var('func_5926')
call_9000 = relay.TupleGetItem(func_5925_call(), 1)
call_9001 = relay.TupleGetItem(func_5926_call(), 1)
uop_9007 = relay.sigmoid(call_9000.astype('float32')) # shape=(7, 2, 12)
uop_9009 = relay.sigmoid(call_9001.astype('float32')) # shape=(7, 2, 12)
output = relay.Tuple([uop_9007,])
output2 = relay.Tuple([uop_9009,])
func_9019 = relay.Function([], output)
mod['func_9019'] = func_9019
mod = relay.transform.InferType()(mod)
output = func_9019()
func_9020 = relay.Function([], output)
mutated_mod['func_9020'] = func_9020
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9041 = relay.var("var_9041", dtype = "uint32", shape = (16, 5, 1))#candidate|9041|(16, 5, 1)|var|uint32
var_9042 = relay.var("var_9042", dtype = "uint32", shape = (16, 5, 11))#candidate|9042|(16, 5, 11)|var|uint32
bop_9043 = relay.multiply(var_9041.astype('uint32'), var_9042.astype('uint32')) # shape=(16, 5, 11)
func_6740_call = mod.get_global_var('func_6740')
func_6742_call = mutated_mod.get_global_var('func_6742')
call_9054 = relay.TupleGetItem(func_6740_call(), 0)
call_9055 = relay.TupleGetItem(func_6742_call(), 0)
output = relay.Tuple([bop_9043,call_9054,])
output2 = relay.Tuple([bop_9043,call_9055,])
func_9072 = relay.Function([var_9041,var_9042,], output)
mod['func_9072'] = func_9072
mod = relay.transform.InferType()(mod)
var_9073 = relay.var("var_9073", dtype = "uint32", shape = (16, 5, 1))#candidate|9073|(16, 5, 1)|var|uint32
var_9074 = relay.var("var_9074", dtype = "uint32", shape = (16, 5, 11))#candidate|9074|(16, 5, 11)|var|uint32
output = func_9072(var_9073,var_9074,)
func_9075 = relay.Function([var_9073,var_9074,], output)
mutated_mod['func_9075'] = func_9075
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9126 = relay.var("var_9126", dtype = "int32", shape = ())#candidate|9126|()|var|int32
var_9127 = relay.var("var_9127", dtype = "int32", shape = (12, 3, 8))#candidate|9127|(12, 3, 8)|var|int32
bop_9128 = relay.greater(var_9126.astype('bool'), var_9127.astype('bool')) # shape=(12, 3, 8)
func_7891_call = mod.get_global_var('func_7891')
func_7892_call = mutated_mod.get_global_var('func_7892')
call_9138 = relay.TupleGetItem(func_7891_call(), 1)
call_9139 = relay.TupleGetItem(func_7892_call(), 1)
func_4648_call = mod.get_global_var('func_4648')
func_4650_call = mutated_mod.get_global_var('func_4650')
call_9144 = relay.TupleGetItem(func_4648_call(), 2)
call_9145 = relay.TupleGetItem(func_4650_call(), 2)
output = relay.Tuple([bop_9128,call_9138,call_9144,])
output2 = relay.Tuple([bop_9128,call_9139,call_9145,])
func_9160 = relay.Function([var_9126,var_9127,], output)
mod['func_9160'] = func_9160
mod = relay.transform.InferType()(mod)
var_9161 = relay.var("var_9161", dtype = "int32", shape = ())#candidate|9161|()|var|int32
var_9162 = relay.var("var_9162", dtype = "int32", shape = (12, 3, 8))#candidate|9162|(12, 3, 8)|var|int32
output = func_9160(var_9161,var_9162,)
func_9163 = relay.Function([var_9161,var_9162,], output)
mutated_mod['func_9163'] = func_9163
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8343_call = mod.get_global_var('func_8343')
func_8345_call = mutated_mod.get_global_var('func_8345')
call_9165 = relay.TupleGetItem(func_8343_call(), 0)
call_9166 = relay.TupleGetItem(func_8345_call(), 0)
func_8302_call = mod.get_global_var('func_8302')
func_8305_call = mutated_mod.get_global_var('func_8305')
const_9212 = relay.const([[7.568171,-4.610042],[9.361503,4.595307],[6.161150,-0.135282],[2.285085,6.075646],[7.981760,-4.559869],[0.500576,3.617968],[-8.230237,-5.744203],[-9.034824,4.306932],[-1.976853,5.433604],[-4.133656,6.242378],[-2.064406,-0.509265],[0.238736,-6.697192],[-3.066812,-2.950785],[-6.889894,-6.796495],[-4.861578,2.538556],[-2.853533,4.867515],[8.992030,-1.677329],[8.851816,0.276302],[-0.095392,6.619806],[-6.003278,-2.278418],[0.677584,-7.664493],[-1.904978,-0.381685],[1.198715,-2.287342],[-2.812686,7.366997],[-9.342263,5.361987],[3.814305,-6.464833],[-0.058897,-3.338619],[3.547873,3.877891],[9.932584,6.496575],[1.622484,6.847066]], dtype = "float64")#candidate|9212|(30, 2)|const|float64
call_9211 = relay.TupleGetItem(func_8302_call(relay.reshape(const_9212.astype('float64'), [2, 6, 5])), 0)
call_9213 = relay.TupleGetItem(func_8305_call(relay.reshape(const_9212.astype('float64'), [2, 6, 5])), 0)
var_9214 = relay.var("var_9214", dtype = "float64", shape = (30, 2))#candidate|9214|(30, 2)|var|float64
bop_9215 = relay.floor_mod(const_9212.astype('float32'), relay.reshape(var_9214.astype('float32'), relay.shape_of(const_9212))) # shape=(30, 2)
output = relay.Tuple([call_9165,call_9211,bop_9215,])
output2 = relay.Tuple([call_9166,call_9213,bop_9215,])
func_9227 = relay.Function([var_9214,], output)
mod['func_9227'] = func_9227
mod = relay.transform.InferType()(mod)
mutated_mod['func_9227'] = func_9227
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9228 = relay.var("var_9228", dtype = "float64", shape = (30, 2))#candidate|9228|(30, 2)|var|float64
func_9227_call = mutated_mod.get_global_var('func_9227')
call_9229 = func_9227_call(var_9228)
output = call_9229
func_9230 = relay.Function([var_9228], output)
mutated_mod['func_9230'] = func_9230
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5893_call = mod.get_global_var('func_5893')
func_5895_call = mutated_mod.get_global_var('func_5895')
call_9299 = relay.TupleGetItem(func_5893_call(), 0)
call_9300 = relay.TupleGetItem(func_5895_call(), 0)
func_5294_call = mod.get_global_var('func_5294')
func_5295_call = mutated_mod.get_global_var('func_5295')
call_9301 = func_5294_call()
call_9302 = func_5294_call()
output = relay.Tuple([call_9299,call_9301,])
output2 = relay.Tuple([call_9300,call_9302,])
func_9319 = relay.Function([], output)
mod['func_9319'] = func_9319
mod = relay.transform.InferType()(mod)
mutated_mod['func_9319'] = func_9319
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9319_call = mutated_mod.get_global_var('func_9319')
call_9320 = func_9319_call()
output = call_9320
func_9321 = relay.Function([], output)
mutated_mod['func_9321'] = func_9321
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8759_call = mod.get_global_var('func_8759')
func_8761_call = mutated_mod.get_global_var('func_8761')
call_9388 = relay.TupleGetItem(func_8759_call(), 1)
call_9389 = relay.TupleGetItem(func_8761_call(), 1)
output = relay.Tuple([call_9388,])
output2 = relay.Tuple([call_9389,])
func_9390 = relay.Function([], output)
mod['func_9390'] = func_9390
mod = relay.transform.InferType()(mod)
mutated_mod['func_9390'] = func_9390
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9390_call = mutated_mod.get_global_var('func_9390')
call_9391 = func_9390_call()
output = call_9391
func_9392 = relay.Function([], output)
mutated_mod['func_9392'] = func_9392
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5893_call = mod.get_global_var('func_5893')
func_5895_call = mutated_mod.get_global_var('func_5895')
call_9393 = relay.TupleGetItem(func_5893_call(), 0)
call_9394 = relay.TupleGetItem(func_5895_call(), 0)
uop_9395 = relay.rsqrt(call_9393.astype('float32')) # shape=(4, 3, 2)
uop_9397 = relay.rsqrt(call_9394.astype('float32')) # shape=(4, 3, 2)
func_6631_call = mod.get_global_var('func_6631')
func_6632_call = mutated_mod.get_global_var('func_6632')
call_9400 = func_6631_call()
call_9401 = func_6631_call()
func_6313_call = mod.get_global_var('func_6313')
func_6315_call = mutated_mod.get_global_var('func_6315')
call_9402 = func_6313_call()
call_9403 = func_6313_call()
output = relay.Tuple([uop_9395,call_9400,call_9402,])
output2 = relay.Tuple([uop_9397,call_9401,call_9403,])
func_9413 = relay.Function([], output)
mod['func_9413'] = func_9413
mod = relay.transform.InferType()(mod)
output = func_9413()
func_9414 = relay.Function([], output)
mutated_mod['func_9414'] = func_9414
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7573_call = mod.get_global_var('func_7573')
func_7575_call = mutated_mod.get_global_var('func_7575')
call_9491 = func_7573_call()
call_9492 = func_7573_call()
func_8343_call = mod.get_global_var('func_8343')
func_8345_call = mutated_mod.get_global_var('func_8345')
call_9504 = relay.TupleGetItem(func_8343_call(), 0)
call_9505 = relay.TupleGetItem(func_8345_call(), 0)
output = relay.Tuple([call_9491,call_9504,])
output2 = relay.Tuple([call_9492,call_9505,])
func_9513 = relay.Function([], output)
mod['func_9513'] = func_9513
mod = relay.transform.InferType()(mod)
mutated_mod['func_9513'] = func_9513
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9513_call = mutated_mod.get_global_var('func_9513')
call_9514 = func_9513_call()
output = call_9514
func_9515 = relay.Function([], output)
mutated_mod['func_9515'] = func_9515
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7437_call = mod.get_global_var('func_7437')
func_7438_call = mutated_mod.get_global_var('func_7438')
call_9524 = func_7437_call()
call_9525 = func_7437_call()
func_1274_call = mod.get_global_var('func_1274')
func_1276_call = mutated_mod.get_global_var('func_1276')
const_9533 = relay.const([-5.989407,-4.270504,-3.290727,0.551134,2.232277,0.802106,7.115442,6.092640,-3.047824,-2.431537,-0.415373,-1.406675,-5.844092,-9.526600,-9.002788,3.106005,1.130637,-5.425383,0.601599,-5.406800,-6.537808,-2.986445,3.300572,1.032344,1.574538,-4.421287,-2.110746,9.444164,5.443722,-3.121600,3.761014,0.232254,5.318917,-8.857328,6.942376,-2.829472,-6.464091,8.591385,-5.978614,3.387793,-4.899773,-0.209228,4.786317,-0.764043,5.295696,-1.228422,-2.759496,1.824748,6.371873,-5.178584,-4.983495,-4.480183,-6.305824,-4.624601,-0.870141,-4.363137,-2.623727,-6.439412,7.678947,-6.604128,2.446848,5.913061,-1.164322,-5.507157,-0.282824,-5.813554,9.136103,3.718837,0.639613,-8.917014,9.168160,-6.556848,2.841697,4.557393,2.643091,5.600484,5.610450,5.463738,1.695300,4.541074,-1.171847,1.784752,9.501850,2.231558,-1.563090,-5.947332,5.533443,1.524067,9.713815,6.067989,5.459781,-6.469565,5.851572,-3.186880,3.427198,-6.232890,-3.149169,7.050869,-1.524671,-5.534341,-3.011043,-9.339490,5.522285,7.114580,8.113560,-0.865446,2.607947,3.015503,-7.094065,-2.413319,0.796756,5.590311,-1.743337,8.556840,-2.037813,2.058487,0.393041,-8.003903,-0.469583,6.243164,-0.099071,-4.427604,-5.667109,-4.724516,8.641892,-9.753890,1.777676,-1.058616,-2.498438,-6.261043,8.623929,-7.237449,5.819339,-6.320835,-6.485059,3.208481,0.167118,-5.919707,4.536373,-5.864967,1.430071,-0.326112,-6.271209,-2.500074,-0.226452,4.178990,8.854105,-6.231049,-9.956723,-8.279360,4.570938,0.748896,4.549791,-1.874119,-7.576976,8.531319,-4.088447,-1.134444,5.434672,6.085024,3.447648,4.892645,-2.717486,-4.639968,-9.400805,4.959737,-3.539189,-8.290556,3.659332,6.115105,3.349028,7.072160,-4.972185,1.613743,9.908955,1.223418,7.902527,7.542887,7.268396,5.915332,-2.658762,5.334704,1.944037,-7.554653,-4.239078,6.058169,-9.045610,6.746513,-5.978623,-6.098615,-8.992582,6.972747,2.000559,9.972983,-1.606771,-5.013184,-1.033083,8.080063,-1.293601,-1.741574,1.829533,-4.910151,-2.969025,-4.950616,-0.173497,-0.554213,0.139523,9.294043,-6.818289,0.460636,9.247304,8.099323,1.587191,7.726602,-5.153217,-2.564586,2.295165,-2.146608,2.202655,5.319767,5.263068,-8.805602,5.790191,2.903728,-3.353828,-1.077288,8.376088,2.931241,-8.413003,-6.319481,-4.609455,1.292979,6.829462,-9.204510,-0.266691,7.942742,2.708304,-6.218725,2.965176,6.391462,-9.406756,3.191641,8.676569,-5.355620,6.806689,4.772495,-1.262390,-8.318836,-7.722067,-1.289965,-8.967970,-8.819889,8.905434,-4.521506,9.803694,-1.208046,5.585162,5.162873,8.667815,-4.912709,-5.166163,-1.141854,-8.211468,-1.763573,9.983507,-0.372809,-3.405698,-7.592119,6.121831,-9.134854,-1.471762,6.475568,-5.477641,-1.430914,-8.712746,6.191909,-7.405555,7.369826,-4.209204,0.207786,-5.911226,8.738051,6.344032,-9.959948,-3.362859,3.707018,-5.205318,-5.057509,3.033828,-5.657312,6.570500,-6.836884,4.441003,7.030904,1.737282,-6.408432,-3.033679,2.098138,5.016787,-0.758427,-8.765665,-4.367590,-1.314731,-8.255418,8.237284,-5.947858,-6.407719,3.504132,-7.279295,2.178613,4.702592,-1.843383,3.551844,6.856767,1.431288,-0.059187,0.974306,-8.977860,7.806187,4.327554,6.896999,2.134200,-3.837095,-8.975115,1.830411,7.613051,8.321313,-0.583081,0.524350,2.343821,-8.776297,-6.404639,-9.800674,7.103201,3.552096,-1.766003,-9.759120,-2.470331,-7.314667,-6.987339,-1.597938,8.997227,0.258403,-5.233031,3.328398,1.039398,0.954121,-0.518334,4.179203,8.896822,-9.723974,5.596000,-1.646224,-3.945318,-8.143196,-2.972595,-6.684678,-3.680116,-6.147807,-1.203657,-9.426726,2.776171,4.949075,2.283167,9.012908,-9.513796,2.457830,1.152213,9.734196,-0.840247,-2.610593,7.067488,-8.092701,-9.618502,-2.855015,9.093773,-5.512563,8.273498,-6.285839,-5.791876,4.344749,4.550370,4.817601,-5.645049,-0.378738,-7.843134,-4.860133,3.374402,-1.890681,6.758925,-4.008100,7.250446,9.018973,5.524600,-7.703787,4.502693,-3.428237,-0.866042,5.584962,-2.697815,8.703956,-8.974594,-4.360508,3.571198,8.186221,-2.516485,2.630452,0.900280,-8.250146,-4.256552,-0.058875,-0.510350,-5.518404,-8.099143,-5.666161,-9.998694,-1.726169,3.246581,-6.517960,3.646531,7.390283,-5.816160,2.722075,7.625314,-7.813942,-0.368793,3.245732,4.366567,6.575431,-1.476115,-7.840469,-9.135185], dtype = "float64")#candidate|9533|(432,)|const|float64
call_9532 = func_1274_call(relay.reshape(const_9533.astype('float64'), [6, 12, 6]))
call_9534 = func_1274_call(relay.reshape(const_9533.astype('float64'), [6, 12, 6]))
output = relay.Tuple([call_9524,call_9532,const_9533,])
output2 = relay.Tuple([call_9525,call_9534,const_9533,])
func_9538 = relay.Function([], output)
mod['func_9538'] = func_9538
mod = relay.transform.InferType()(mod)
output = func_9538()
func_9539 = relay.Function([], output)
mutated_mod['func_9539'] = func_9539
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5986_call = mod.get_global_var('func_5986')
func_5988_call = mutated_mod.get_global_var('func_5988')
call_9564 = relay.TupleGetItem(func_5986_call(), 1)
call_9565 = relay.TupleGetItem(func_5988_call(), 1)
func_5494_call = mod.get_global_var('func_5494')
func_5496_call = mutated_mod.get_global_var('func_5496')
call_9573 = func_5494_call()
call_9574 = func_5494_call()
uop_9594 = relay.erf(call_9564.astype('float64')) # shape=(4, 3, 2)
uop_9596 = relay.erf(call_9565.astype('float64')) # shape=(4, 3, 2)
func_6058_call = mod.get_global_var('func_6058')
func_6059_call = mutated_mod.get_global_var('func_6059')
call_9609 = relay.TupleGetItem(func_6058_call(), 0)
call_9610 = relay.TupleGetItem(func_6059_call(), 0)
output = relay.Tuple([call_9573,uop_9594,call_9609,])
output2 = relay.Tuple([call_9574,uop_9596,call_9610,])
func_9631 = relay.Function([], output)
mod['func_9631'] = func_9631
mod = relay.transform.InferType()(mod)
output = func_9631()
func_9632 = relay.Function([], output)
mutated_mod['func_9632'] = func_9632
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9644 = relay.var("var_9644", dtype = "uint8", shape = (5, 9, 15))#candidate|9644|(5, 9, 15)|var|uint8
var_9645 = relay.var("var_9645", dtype = "uint8", shape = (5, 9, 15))#candidate|9645|(5, 9, 15)|var|uint8
bop_9646 = relay.add(var_9644.astype('uint8'), relay.reshape(var_9645.astype('uint8'), relay.shape_of(var_9644))) # shape=(5, 9, 15)
output = relay.Tuple([bop_9646,])
output2 = relay.Tuple([bop_9646,])
func_9652 = relay.Function([var_9644,var_9645,], output)
mod['func_9652'] = func_9652
mod = relay.transform.InferType()(mod)
mutated_mod['func_9652'] = func_9652
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9652_call = mutated_mod.get_global_var('func_9652')
var_9654 = relay.var("var_9654", dtype = "uint8", shape = (5, 9, 15))#candidate|9654|(5, 9, 15)|var|uint8
var_9655 = relay.var("var_9655", dtype = "uint8", shape = (5, 9, 15))#candidate|9655|(5, 9, 15)|var|uint8
call_9653 = func_9652_call(var_9654,var_9655,)
output = call_9653
func_9656 = relay.Function([var_9654,var_9655,], output)
mutated_mod['func_9656'] = func_9656
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5986_call = mod.get_global_var('func_5986')
func_5988_call = mutated_mod.get_global_var('func_5988')
call_9658 = relay.TupleGetItem(func_5986_call(), 0)
call_9659 = relay.TupleGetItem(func_5988_call(), 0)
var_9660 = relay.var("var_9660", dtype = "uint8", shape = (13, 14, 12))#candidate|9660|(13, 14, 12)|var|uint8
bop_9661 = relay.mod(call_9658.astype('float64'), relay.reshape(var_9660.astype('float64'), relay.shape_of(call_9658))) # shape=(13, 14, 12)
bop_9664 = relay.mod(call_9659.astype('float64'), relay.reshape(var_9660.astype('float64'), relay.shape_of(call_9659))) # shape=(13, 14, 12)
func_5246_call = mod.get_global_var('func_5246')
func_5250_call = mutated_mod.get_global_var('func_5250')
const_9666 = relay.const([1.542487,-1.584945,-6.250758,1.200343,-4.273618,-7.327019,7.179638,2.827445,7.148429,-4.389332,8.376055,-6.190357,3.694497,-9.971133,4.090018,1.937794,2.131318,0.236303,-1.873960,-8.352695,-6.731698,3.422172,-5.917594,-9.232658,-6.315206,-0.905841,6.222565,-6.648182,6.595808,5.518119,-1.263073,-7.845143], dtype = "float32")#candidate|9666|(32,)|const|float32
var_9667 = relay.var("var_9667", dtype = "int64", shape = (1274,))#candidate|9667|(1274,)|var|int64
call_9665 = relay.TupleGetItem(func_5246_call(relay.reshape(const_9666.astype('float32'), [2, 2, 8]), relay.reshape(var_9667.astype('int64'), [91, 14]), ), 7)
call_9668 = relay.TupleGetItem(func_5250_call(relay.reshape(const_9666.astype('float32'), [2, 2, 8]), relay.reshape(var_9667.astype('int64'), [91, 14]), ), 7)
bop_9669 = relay.divide(var_9660.astype('float64'), relay.reshape(bop_9661.astype('float64'), relay.shape_of(var_9660))) # shape=(13, 14, 12)
bop_9672 = relay.divide(var_9660.astype('float64'), relay.reshape(bop_9664.astype('float64'), relay.shape_of(var_9660))) # shape=(13, 14, 12)
bop_9675 = relay.add(var_9667.astype('int8'), relay.reshape(call_9665.astype('int8'), relay.shape_of(var_9667))) # shape=(1274,)
bop_9678 = relay.add(var_9667.astype('int8'), relay.reshape(call_9668.astype('int8'), relay.shape_of(var_9667))) # shape=(1274,)
output = relay.Tuple([const_9666,bop_9669,bop_9675,])
output2 = relay.Tuple([const_9666,bop_9672,bop_9678,])
F = relay.Function([var_9660,var_9667,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_9660,var_9667,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

==========mod==========
#[version = "0.0.5"]
def @func_6048() -> (Tensor[(6, 4, 14), bool],) {
  %0 = @func_5906() /* ty=(Tensor[(6, 4, 14), bool],) */;
  %1 = %0.0;
  (%1,)
}

def @func_4439(%var_4429: Tensor[(9, 12, 3), float64], %var_4433: Tensor[(936), float64], %var_4434: Tensor[(126), float64]) -> (Tensor[(9, 13, 8), float64], Tensor[(936), float64], Tensor[(126), float64], Tensor[(80), float64], Tensor[(9, 12, 3), float32]) {
  %2 = cast(%var_4433, dtype="float64") /* ty=Tensor[(936), float64] */;
  %3 = cast(%var_4434, dtype="float64") /* ty=Tensor[(126), float64] */;
  %4 = cast(meta[relay.Constant][0] /* ty=Tensor[(80), float64] */, dtype="float64") /* ty=Tensor[(80), float64] */;
  %5 = reshape(%2, newshape=[9, 13, 8]) /* ty=Tensor[(9, 13, 8), float64] */;
  %6 = reshape(%3, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %7 = reshape(%4, newshape=[1, 80]) /* ty=Tensor[(1, 80), float64] */;
  %8 = @func_734(%5, %6, %7) /* ty=(Tensor[(9, 13, 8), float64], Tensor[(9, 14), float64], Tensor[(126), float64], Tensor[(2, 8, 5), float64], Tensor[(9, 13, 8), int16], Tensor[(2, 8, 5), float64], Tensor[(1, 80), float64]) */;
  %9 = cast(%var_4429, dtype="float64") /* ty=Tensor[(9, 12, 3), float64] */;
  %10 = log2(%9) /* ty=Tensor[(9, 12, 3), float64] */;
  %11 = cast(%10, dtype="float32") /* ty=Tensor[(9, 12, 3), float32] */;
  %12 = %8.0;
  %13 = log(%11) /* ty=Tensor[(9, 12, 3), float32] */;
  (%12, %var_4433, %var_4434, meta[relay.Constant][0] /* ty=Tensor[(80), float64] */, %13)
}

def @func_6122() -> (Tensor[(6, 4, 14), bool],) {
  %14 = @func_5906() /* ty=(Tensor[(6, 4, 14), bool],) */;
  %15 = %14.0;
  (%15,)
}

def @func_4845(%var_4832: Tensor[(8, 14, 10), float32], %var_4833: Tensor[(8, 14, 10), float32]) -> (Tensor[(8, 14, 10), float32],) {
  %16 = cast(%var_4833, dtype="float32") /* ty=Tensor[(8, 14, 10), float32] */;
  %17 = shape_of(%var_4832, dtype="int32") /* ty=Tensor[(3), int32] */;
  %18 = cast(%var_4832, dtype="float32") /* ty=Tensor[(8, 14, 10), float32] */;
  %19 = dyn.reshape(%16, %17, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %20 = mod(%18, %19) /* ty=Tensor[(8, 14, 10), float32] */;
  (%20,)
}

def @func_3366(%var_3360: Tensor[(8, 1, 16), float32], %var_3361: Tensor[(8, 12, 16), float32]) -> (Tensor[(8, 12, 16), bool],) {
  %21 = cast(%var_3360, dtype="bool") /* ty=Tensor[(8, 1, 16), bool] */;
  %22 = cast(%var_3361, dtype="bool") /* ty=Tensor[(8, 12, 16), bool] */;
  %23 = not_equal(%21, %22) /* ty=Tensor[(8, 12, 16), bool] */;
  (%23,)
}

def @func_6791() -> (Tensor[(6, 4, 14), bool], Tensor[(10, 13), float64], Tensor[(130), float64]) {
  %24 = @func_5906() /* ty=(Tensor[(6, 4, 14), bool],) */;
  %25 = cast(meta[relay.Constant][1] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %26 = reshape(%25, newshape=[10, 13]) /* ty=Tensor[(10, 13), float64] */;
  %27 = @func_1442(%26) /* ty=(Tensor[(10, 13), float64],) */;
  %28 = %24.0;
  %29 = %27.0;
  (%28, %29, meta[relay.Constant][1] /* ty=Tensor[(130), float64] */)
}

def @func_6624() -> (Tensor[(6, 4, 14), bool],) {
  %30 = @func_6104() /* ty=(Tensor[(6, 4, 14), bool],) */;
  %31 = %30.0;
  (%31,)
}

def @func_2833(%var_2824: uint64, %var_2825: Tensor[(7, 7, 3), uint64]) -> (Tensor[(7, 7, 3), bool],) {
  %32 = cast(%var_2824, dtype="bool") /* ty=bool */;
  %33 = cast(%var_2825, dtype="bool") /* ty=Tensor[(7, 7, 3), bool] */;
  %34 = less(%32, %33) /* ty=Tensor[(7, 7, 3), bool] */;
  (%34,)
}

def @func_1471(%var_1446: Tensor[(16, 4, 13), int8], %var_1469: Tensor[(130), float64]) -> (Tensor[(16, 4, 13), int8], Tensor[(10, 13), float64], Tensor[(130), float64]) {
  %35 = cast(meta[relay.Constant][2] /* ty=Tensor[(16, 4, 13), int8] */, dtype="int8") /* ty=Tensor[(16, 4, 13), int8] */;
  %36 = shape_of(%var_1446, dtype="int32") /* ty=Tensor[(3), int32] */;
  %37 = cast(%var_1446, dtype="int8") /* ty=Tensor[(16, 4, 13), int8] */;
  %38 = dyn.reshape(%35, %36, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %39 = cast(%var_1469, dtype="float64") /* ty=Tensor[(130), float64] */;
  %40 = reshape(%39, newshape=[10, 13]) /* ty=Tensor[(10, 13), float64] */;
  %41 = @func_1442(%40) /* ty=(Tensor[(10, 13), float64],) */;
  %42 = logical_xor(%37, %38) /* ty=Tensor[(16, 4, 13), int8] */;
  %43 = %41.0;
  (%42, %43, %var_1469)
}

def @func_2593(%var_2581: Tensor[(6, 11, 10), int16], %var_2586: Tensor[(2, 180), float32]) -> (Tensor[(6, 11, 10), int16], Tensor[(6, 12, 5), float32], Tensor[(2, 180), float32]) {
  %44 = cast(%var_2581, dtype="int16") /* ty=Tensor[(6, 11, 10), int16] */;
  %45 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(6, 11, 10), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %46 = cast(meta[relay.Constant][3] /* ty=Tensor[(6, 11, 10), int16] */, dtype="int16") /* ty=Tensor[(6, 11, 10), int16] */;
  %47 = dyn.reshape(%44, %45, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %48 = cast(%var_2586, dtype="float32") /* ty=Tensor[(2, 180), float32] */;
  %49 = reshape(%48, newshape=[6, 12, 5]) /* ty=Tensor[(6, 12, 5), float32] */;
  %50 = bitwise_xor(%46, %47) /* ty=Tensor[(6, 11, 10), int16] */;
  %51 = @func_2386(%49) /* ty=Tensor[(6, 12, 5), float32] */;
  (%50, %51, %var_2586)
}

def @func_4921(%var_4869: Tensor[(10, 12, 2), float32], %var_4903: Tensor[(936), float64], %var_4904: uint64, %var_4909: Tensor[(10, 12, 2), int64]) -> (Tensor[(2145), float64], Tensor[(360), float32], Tensor[(65), int16], Tensor[(936), float64], uint64, Tensor[(10, 12, 2), int8], Tensor[(936), float64]) {
  %52 = cast(%var_4869, dtype="float32") /* ty=Tensor[(10, 12, 2), float32] */;
  %53 = exp(%52) /* ty=Tensor[(10, 12, 2), float32] */;
  %54 = cast(%var_4869, dtype="int64") /* ty=Tensor[(10, 12, 2), int64] */;
  %55 = shape_of(%53, dtype="int32") /* ty=Tensor[(3), int32] */;
  %56 = cast(%53, dtype="int64") /* ty=Tensor[(10, 12, 2), int64] */;
  %57 = dyn.reshape(%54, %55, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %58 = minimum(%56, %57) /* ty=Tensor[(10, 12, 2), int64] */;
  %59 = cast(%var_4909, dtype="int8") /* ty=Tensor[(10, 12, 2), int8] */;
  %60 = shape_of(%58, dtype="int32") /* ty=Tensor[(3), int32] */;
  %61 = cast(%58, dtype="int8") /* ty=Tensor[(10, 12, 2), int8] */;
  %62 = dyn.reshape(%59, %60, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %63 = cast(meta[relay.Constant][4] /* ty=Tensor[(2145), float64] */, dtype="float64") /* ty=Tensor[(2145), float64] */;
  %64 = cast(meta[relay.Constant][5] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %65 = cast(meta[relay.Constant][6] /* ty=Tensor[(65), int16] */, dtype="int16") /* ty=Tensor[(65), int16] */;
  %66 = cast(%var_4903, dtype="float64") /* ty=Tensor[(936), float64] */;
  %67 = cast(%var_4904, dtype="uint64") /* ty=uint64 */;
  %68 = reshape(%63, newshape=[13, 15, 11]) /* ty=Tensor[(13, 15, 11), float64] */;
  %69 = reshape(%64, newshape=[360]) /* ty=Tensor[(360), float32] */;
  %70 = reshape(%65, newshape=[65]) /* ty=Tensor[(65), int16] */;
  %71 = reshape(%66, newshape=[936]) /* ty=Tensor[(936), float64] */;
  %72 = reshape(%67, newshape=[]) /* ty=uint64 */;
  %73 = @func_3605(%68, %69, %70, %71, %72) /* ty=(Tensor[(13, 15, 11), bool], Tensor[(6, 12, 5), float32], Tensor[(360), float32], Tensor[(7, 14, 5), float32], Tensor[(80), float64], Tensor[(6, 12, 5), float32], Tensor[(9, 13, 8), int16], Tensor[(65), int16], Tensor[(4, 264), int64], Tensor[(936), float64], Tensor[(1, 126), float64], Tensor[(7, 7, 3), bool], uint64, Tensor[(1, 147), uint64], Tensor[(10, 13), float64], Tensor[(130), float64]) */;
  %74 = %73.9;
  %75 = cast(%74, dtype="float64") /* ty=Tensor[(936), float64] */;
  %76 = bitwise_and(%61, %62) /* ty=Tensor[(10, 12, 2), int8] */;
  %77 = acosh(%75) /* ty=Tensor[(936), float64] */;
  (meta[relay.Constant][4] /* ty=Tensor[(2145), float64] */, meta[relay.Constant][5] /* ty=Tensor[(360), float32] */, meta[relay.Constant][6] /* ty=Tensor[(65), int16] */, %var_4903, %var_4904, %76, %77)
}

def @func_908(%var_882: Tensor[(1, 10, 5), float64], %var_886: Tensor[(126), float64]) -> (Tensor[(1, 10, 5), float64], Tensor[(9, 14), float64], Tensor[(126), float64], Tensor[(16, 13, ?), int64], uint16, Tensor[(2, 8, 5), float64], Tensor[(80), float64]) {
  %78 = cast(%var_882, dtype="float64") /* ty=Tensor[(1, 10, 5), float64] */;
  %79 = cast(%var_886, dtype="float64") /* ty=Tensor[(126), float64] */;
  %80 = reshape(%79, newshape=[9, 14]) /* ty=Tensor[(9, 14), float64] */;
  %81 = @func_44(%80) /* ty=(Tensor[(9, 14), float64],) */;
  %82 = cast(meta[relay.Constant][7] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %83 = reshape(%82, newshape=[]) /* ty=uint16 */;
  %84 = cast(meta[relay.Constant][8] /* ty=Tensor[(80), float64] */, dtype="float64") /* ty=Tensor[(80), float64] */;
  %85 = reshape(%84, newshape=[2, 8, 5]) /* ty=Tensor[(2, 8, 5), float64] */;
  %86 = @func_363(%85) /* ty=(Tensor[(2, 8, 5), float64],) */;
  %87 = acosh(%78) /* ty=Tensor[(1, 10, 5), float64] */;
  %88 = %81.0;
  %89 = @func_594(%83) /* ty=Tensor[(16, 13, ?), int64] */;
  %90 = %86.0;
  (%87, %88, %var_886, %89, meta[relay.Constant][7] /* ty=uint16 */, %90, meta[relay.Constant][8] /* ty=Tensor[(80), float64] */)
}

def @func_6159() -> (Tensor[(6, 4, 14), bool], Tensor[(6, 4, 14), bool]) {
  %91 = @func_6048() /* ty=(Tensor[(6, 4, 14), bool],) */;
  %92 = @func_6048() /* ty=(Tensor[(6, 4, 14), bool],) */;
  %93 = %91.0;
  %94 = %92.0;
  (%93, %94)
}

def @func_7051() -> (Tensor[(6, 4, 14), bool],) {
  %95 = @func_6122() /* ty=(Tensor[(6, 4, 14), bool],) */;
  %96 = %95.0;
  (%96,)
}

def @func_734(%var_686: Tensor[(9, 13, 8), float64], %var_697: Tensor[(126), float64], %var_705: Tensor[(1, 80), float64]) -> (Tensor[(9, 13, 8), float64], Tensor[(9, 14), float64], Tensor[(126), float64], Tensor[(2, 8, 5), float64], Tensor[(9, 13, 8), int16], Tensor[(2, 8, 5), float64], Tensor[(1, 80), float64]) {
  %97 = cast(%var_686, dtype="float64") /* ty=Tensor[(9, 13, 8), float64] */;
  %98 = cast(%var_697, dtype="float64") /* ty=Tensor[(126), float64] */;
  %99 = reshape(%98, newshape=[9, 14]) /* ty=Tensor[(9, 14), float64] */;
  %100 = @func_44(%99) /* ty=(Tensor[(9, 14), float64],) */;
  %101 = cast(%var_705, dtype="float64") /* ty=Tensor[(1, 80), float64] */;
  %102 = reshape(%101, newshape=[2, 8, 5]) /* ty=Tensor[(2, 8, 5), float64] */;
  %103 = @func_363(%102) /* ty=(Tensor[(2, 8, 5), float64],) */;
  %104 = cast(%var_686, dtype="float64") /* ty=Tensor[(9, 13, 8), float64] */;
  %105 = log2(%104) /* ty=Tensor[(9, 13, 8), float64] */;
  %106 = cast(%var_686, dtype="int16") /* ty=Tensor[(9, 13, 8), int16] */;
  %107 = shape_of(%105, dtype="int32") /* ty=Tensor[(3), int32] */;
  %108 = cast(%105, dtype="int16") /* ty=Tensor[(9, 13, 8), int16] */;
  %109 = dyn.reshape(%106, %107, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %110 = %103.0;
  %111 = cast(%110, dtype="float64") /* ty=Tensor[(2, 8, 5), float64] */;
  %112 = reshape(%111, newshape=[2, 8, 5]) /* ty=Tensor[(2, 8, 5), float64] */;
  %113 = @func_363(%112) /* ty=(Tensor[(2, 8, 5), float64],) */;
  %114 = cast(%var_705, dtype="float64") /* ty=Tensor[(1, 80), float64] */;
  %115 = sigmoid(%97) /* ty=Tensor[(9, 13, 8), float64] */;
  %116 = %100.0;
  %117 = add(%108, %109) /* ty=Tensor[(9, 13, 8), int16] */;
  %118 = %113.0;
  %119 = atan(%114) /* ty=Tensor[(1, 80), float64] */;
  (%115, %116, %var_697, %110, %117, %118, %119)
}

def @func_6385() -> (Tensor[(6, 4, 14), bool], Tensor[(6, 4, 14), bool]) {
  %120 = @func_6159() /* ty=(Tensor[(6, 4, 14), bool], Tensor[(6, 4, 14), bool]) */;
  %121 = @func_6104() /* ty=(Tensor[(6, 4, 14), bool],) */;
  %122 = %120.1;
  %123 = %121.0;
  (%122, %123)
}

def @func_6681(%var_6668: Tensor[(80), float64]) -> (Tensor[(2, 8, 5), float64], Tensor[(80), float64], Tensor[(6, 4, 14), float32]) {
  %124 = cast(%var_6668, dtype="float64") /* ty=Tensor[(80), float64] */;
  %125 = reshape(%124, newshape=[80]) /* ty=Tensor[(80), float64] */;
  %126 = @func_1900(%125) /* ty=(Tensor[(2, 8, 5), float64], Tensor[(80), float64], Tensor[(7, 14, 5), float32]) */;
  %127 = @func_6624() /* ty=(Tensor[(6, 4, 14), bool],) */;
  %128 = %127.0;
  %129 = cast(%128, dtype="float32") /* ty=Tensor[(6, 4, 14), float32] */;
  %130 = %126.0;
  %131 = acos(%129) /* ty=Tensor[(6, 4, 14), float32] */;
  (%130, %var_6668, %131)
}

def @func_5906() -> (Tensor[(6, 4, 14), bool],) {
  %132 = @func_5540() /* ty=Tensor[(1, 4, 14), bool] */;
  %133 = cast(%132, dtype="bool") /* ty=Tensor[(1, 4, 14), bool] */;
  %134 = cast(meta[relay.Constant][9] /* ty=Tensor[(6, 4, 14), bool] */, dtype="bool") /* ty=Tensor[(6, 4, 14), bool] */;
  %135 = logical_or(%133, %134) /* ty=Tensor[(6, 4, 14), bool] */;
  (%135,)
}

def @func_3481(%var_3462: Tensor[(7, 8, 11), float32]) -> (Tensor[(7, 8, 11), float32],) {
  %136 = cast(%var_3462, dtype="float32") /* ty=Tensor[(7, 8, 11), float32] */;
  %137 = log(%136) /* ty=Tensor[(7, 8, 11), float32] */;
  (%137,)
}

def @func_6750() -> (Tensor[(6, 4, 14), bool], Tensor[(10, 13), float64], Tensor[(1050), float64], Tensor[(832), int8]) {
  %138 = @func_6624() /* ty=(Tensor[(6, 4, 14), bool],) */;
  %139 = cast(meta[relay.Constant][10] /* ty=Tensor[(1050), float64] */, dtype="float64") /* ty=Tensor[(1050), float64] */;
  %140 = cast(meta[relay.Constant][11] /* ty=Tensor[(832), int8] */, dtype="int8") /* ty=Tensor[(832), int8] */;
  %141 = reshape(%139, newshape=[5, 14, 15]) /* ty=Tensor[(5, 14, 15), float64] */;
  %142 = reshape(%140, newshape=[832, 1]) /* ty=Tensor[(832, 1), int8] */;
  %143 = @func_3685(%141, %142) /* ty=(Tensor[(5, 14, 15), float32], Tensor[(10, 13), float64], Tensor[(832, 1), int8], Tensor[(13, 10), float64], Tensor[(5, 14, 15), int8]) */;
  %144 = %138.0;
  %145 = %143.1;
  (%144, %145, meta[relay.Constant][10] /* ty=Tensor[(1050), float64] */, meta[relay.Constant][11] /* ty=Tensor[(832), int8] */)
}

def @func_6170(%var_6166: Tensor[(15, 8), float64]) -> (Tensor[(15, 8), float64],) {
  %146 = cast(%var_6166, dtype="float64") /* ty=Tensor[(15, 8), float64] */;
  %147 = acosh(%146) /* ty=Tensor[(15, 8), float64] */;
  (%147,)
}

def @func_7195(%var_7179: Tensor[(147), uint64], %var_7185: Tensor[(126), float64], %var_7188: Tensor[(1050), bool]) -> (Tensor[(6, 4, 14), float64], Tensor[(6, 4, 14), int16], Tensor[(7, 7, 3), bool], uint64, Tensor[(147), uint64], Tensor[(1, 10, 5), float64], Tensor[(50), float64], Tensor[(126), float64], Tensor[(10, 7, 15), int16], Tensor[(1050), bool]) {
  %148 = @func_6385() /* ty=(Tensor[(6, 4, 14), bool], Tensor[(6, 4, 14), bool]) */;
  %149 = %148.0;
  %150 = cast(meta[relay.Constant][12] /* ty=Tensor[(6, 4, 14), bool] */, dtype="float64") /* ty=Tensor[(6, 4, 14), float64] */;
  %151 = shape_of(%149, dtype="int32") /* ty=Tensor[(3), int32] */;
  %152 = cast(%149, dtype="float64") /* ty=Tensor[(6, 4, 14), float64] */;
  %153 = dyn.reshape(%150, %151, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %154 = cast(%149, dtype="int16") /* ty=Tensor[(6, 4, 14), int16] */;
  %155 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(6, 4, 14), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %156 = cast(meta[relay.Constant][12] /* ty=Tensor[(6, 4, 14), bool] */, dtype="int16") /* ty=Tensor[(6, 4, 14), int16] */;
  %157 = dyn.reshape(%154, %155, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %158 = cast(meta[relay.Constant][13] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %159 = cast(%var_7179, dtype="uint64") /* ty=Tensor[(147), uint64] */;
  %160 = reshape(%158, newshape=[]) /* ty=uint64 */;
  %161 = reshape(%159, newshape=[7, 7, 3]) /* ty=Tensor[(7, 7, 3), uint64] */;
  %162 = @func_2833(%160, %161) /* ty=(Tensor[(7, 7, 3), bool],) */;
  %163 = cast(meta[relay.Constant][14] /* ty=Tensor[(50), float64] */, dtype="float64") /* ty=Tensor[(50), float64] */;
  %164 = cast(%var_7185, dtype="float64") /* ty=Tensor[(126), float64] */;
  %165 = reshape(%163, newshape=[1, 10, 5]) /* ty=Tensor[(1, 10, 5), float64] */;
  %166 = reshape(%164, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %167 = @func_908(%165, %166) /* ty=(Tensor[(1, 10, 5), float64], Tensor[(9, 14), float64], Tensor[(126), float64], Tensor[(16, 13, ?), int64], uint16, Tensor[(2, 8, 5), float64], Tensor[(80), float64]) */;
  %168 = cast(%var_7188, dtype="bool") /* ty=Tensor[(1050), bool] */;
  %169 = cast(%var_7188, dtype="bool") /* ty=Tensor[(1050), bool] */;
  %170 = cast(%var_7188, dtype="bool") /* ty=Tensor[(1050), bool] */;
  %171 = reshape(%168, newshape=[10, 7, 15]) /* ty=Tensor[(10, 7, 15), bool] */;
  %172 = reshape(%169, newshape=[10, 7, 15]) /* ty=Tensor[(10, 7, 15), bool] */;
  %173 = reshape(%170, newshape=[10, 7, 15]) /* ty=Tensor[(10, 7, 15), bool] */;
  %174 = @func_5112(%171, %172, %173) /* ty=(Tensor[(10, 7, 15), float64], Tensor[(10, 7, 15), int16], Tensor[(10, 7, 15), float32]) */;
  %175 = divide(%152, %153) /* ty=Tensor[(6, 4, 14), float64] */;
  %176 = right_shift(%156, %157) /* ty=Tensor[(6, 4, 14), int16] */;
  %177 = %162.0;
  %178 = %167.0;
  %179 = %174.1;
  (%175, %176, %177, meta[relay.Constant][13] /* ty=uint64 */, %var_7179, %178, meta[relay.Constant][14] /* ty=Tensor[(50), float64] */, %var_7185, %179, %var_7188)
}

def @func_5702(%var_5687: Tensor[(336), bool]) -> (Tensor[(1, 4, 14), bool], Tensor[(1, 10, 5), float64], Tensor[(336), bool]) {
  %180 = cast(%var_5687, dtype="bool") /* ty=Tensor[(336), bool] */;
  %181 = reshape(%180, newshape=[4, 6, 14]) /* ty=Tensor[(4, 6, 14), bool] */;
  %182 = @func_2803(%181) /* ty=(Tensor[(4, 6, 14), int16], Tensor[(1, 10, 5), float64], Tensor[(50), float64], Tensor[(126), float64], Tensor[(4, 6, 14), float64]) */;
  %183 = @func_5540() /* ty=Tensor[(1, 4, 14), bool] */;
  %184 = %182.1;
  (%183, %184, %var_5687)
}

def @func_5809(%var_5800: Tensor[(15, 4, 14), bool]) -> (Tensor[(15, 4, 14), float64],) {
  %185 = @func_5540() /* ty=Tensor[(1, 4, 14), bool] */;
  %186 = cast(%185, dtype="uint64") /* ty=Tensor[(1, 4, 14), uint64] */;
  %187 = cast(%var_5800, dtype="uint64") /* ty=Tensor[(15, 4, 14), uint64] */;
  %188 = maximum(%186, %187) /* ty=Tensor[(15, 4, 14), uint64] */;
  %189 = cast(%var_5800, dtype="float64") /* ty=Tensor[(15, 4, 14), float64] */;
  %190 = shape_of(%188, dtype="int32") /* ty=Tensor[(3), int32] */;
  %191 = cast(%188, dtype="float64") /* ty=Tensor[(15, 4, 14), float64] */;
  %192 = dyn.reshape(%189, %190, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %193 = floor_divide(%191, %192) /* ty=Tensor[(15, 4, 14), float64] */;
  (%193,)
}

def @func_1442(%var_1438: Tensor[(10, 13), float64]) -> (Tensor[(10, 13), float64],) {
  %194 = cast(%var_1438, dtype="float64") /* ty=Tensor[(10, 13), float64] */;
  %195 = acos(%194) /* ty=Tensor[(10, 13), float64] */;
  (%195,)
}

def @func_3310(%var_3298: Tensor[(8, 7, 12), float32]) -> (Tensor[(8, 7, 12), float32], Tensor[(9, 14), float64], Tensor[(126), float64]) {
  %196 = cast(%var_3298, dtype="float32") /* ty=Tensor[(8, 7, 12), float32] */;
  %197 = cast(meta[relay.Constant][15] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
  %198 = reshape(%197, newshape=[9, 14]) /* ty=Tensor[(9, 14), float64] */;
  %199 = @func_44(%198) /* ty=(Tensor[(9, 14), float64],) */;
  %200 = atan(%196) /* ty=Tensor[(8, 7, 12), float32] */;
  %201 = %199.0;
  (%200, %201, meta[relay.Constant][15] /* ty=Tensor[(126), float64] */)
}

def @func_6829(%var_6808: Tensor[(198), float64]) -> (Tensor[(6, 4, 14), bool], Tensor[(11, 2, 9), float64], Tensor[(198), float64]) {
  %202 = @func_6385() /* ty=(Tensor[(6, 4, 14), bool], Tensor[(6, 4, 14), bool]) */;
  %203 = cast(%var_6808, dtype="float64") /* ty=Tensor[(198), float64] */;
  %204 = reshape(%203, newshape=[11, 2, 9]) /* ty=Tensor[(11, 2, 9), float64] */;
  %205 = @func_323(%204) /* ty=(Tensor[(11, 2, 9), float64],) */;
  %206 = %202.1;
  %207 = %205.0;
  (%206, %207, %var_6808)
}

def @func_2386(%var_2375: Tensor[(6, 12, 5), float32]) -> Tensor[(6, 12, 5), float32] {
  %208 = cast(%var_2375, dtype="float32") /* ty=Tensor[(6, 12, 5), float32] */;
  acos(%208) /* ty=Tensor[(6, 12, 5), float32] */
}

def @func_7357() -> (Tensor[(6, 4, 14), bool], Tensor[(16, 4, 13), int8], Tensor[(840), bool], Tensor[(6, 4, 14), bool]) {
  %209 = @func_6048() /* ty=(Tensor[(6, 4, 14), bool],) */;
  %210 = cast(meta[relay.Constant][16] /* ty=Tensor[(840), bool] */, dtype="bool") /* ty=Tensor[(840), bool] */;
  %211 = reshape(%210, newshape=[840]) /* ty=Tensor[(840), bool] */;
  %212 = @func_6285(%211) /* ty=(Tensor[(6, 4, 14), bool], Tensor[(5, 14, 15), float32], Tensor[(832), int8], Tensor[(15, 4, 14), float64], Tensor[(840), bool], Tensor[(16, 4, 13), int8], Tensor[(130), float64], Tensor[(70, 15), float32]) */;
  %213 = @func_5906() /* ty=(Tensor[(6, 4, 14), bool],) */;
  %214 = %209.0;
  %215 = %212.5;
  %216 = %213.0;
  (%214, %215, meta[relay.Constant][16] /* ty=Tensor[(840), bool] */, %216)
}

def @func_7034(%var_6978: Tensor[(1050), bool], %var_6985: Tensor[(840), bool], %var_7011: Tensor[(6, 4, 14), float32]) -> (Tensor[(10, 7, 15), float64], Tensor[(1050), bool], Tensor[(70, 15), float32], Tensor[(840), bool], Tensor[(6, 4, 14), uint32]) {
  %217 = cast(%var_6978, dtype="bool") /* ty=Tensor[(1050), bool] */;
  %218 = cast(%var_6978, dtype="bool") /* ty=Tensor[(1050), bool] */;
  %219 = cast(%var_6978, dtype="bool") /* ty=Tensor[(1050), bool] */;
  %220 = reshape(%217, newshape=[10, 7, 15]) /* ty=Tensor[(10, 7, 15), bool] */;
  %221 = reshape(%218, newshape=[10, 7, 15]) /* ty=Tensor[(10, 7, 15), bool] */;
  %222 = reshape(%219, newshape=[10, 7, 15]) /* ty=Tensor[(10, 7, 15), bool] */;
  %223 = @func_5112(%220, %221, %222) /* ty=(Tensor[(10, 7, 15), float64], Tensor[(10, 7, 15), int16], Tensor[(10, 7, 15), float32]) */;
  %224 = cast(%var_6985, dtype="bool") /* ty=Tensor[(840), bool] */;
  %225 = reshape(%224, newshape=[840]) /* ty=Tensor[(840), bool] */;
  %226 = @func_6285(%225) /* ty=(Tensor[(6, 4, 14), bool], Tensor[(5, 14, 15), float32], Tensor[(832), int8], Tensor[(15, 4, 14), float64], Tensor[(840), bool], Tensor[(16, 4, 13), int8], Tensor[(130), float64], Tensor[(70, 15), float32]) */;
  %227 = @func_6048() /* ty=(Tensor[(6, 4, 14), bool],) */;
  %228 = %227.0;
  %229 = cast(%228, dtype="float32") /* ty=Tensor[(6, 4, 14), float32] */;
  %230 = cosh(%229) /* ty=Tensor[(6, 4, 14), float32] */;
  %231 = cast(%230, dtype="float32") /* ty=Tensor[(6, 4, 14), float32] */;
  %232 = log2(%231) /* ty=Tensor[(6, 4, 14), float32] */;
  %233 = cast(%var_7011, dtype="uint32") /* ty=Tensor[(6, 4, 14), uint32] */;
  %234 = shape_of(%232, dtype="int32") /* ty=Tensor[(3), int32] */;
  %235 = cast(%232, dtype="uint32") /* ty=Tensor[(6, 4, 14), uint32] */;
  %236 = dyn.reshape(%233, %234, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %237 = %223.0;
  %238 = %226.7;
  %239 = logical_xor(%235, %236) /* ty=Tensor[(6, 4, 14), uint32] */;
  (%237, %var_6978, %238, %var_6985, %239)
}

def @func_2803(%var_2774: Tensor[(4, 6, 14), bool]) -> (Tensor[(4, 6, 14), int16], Tensor[(1, 10, 5), float64], Tensor[(50), float64], Tensor[(126), float64], Tensor[(4, 6, 14), float64]) {
  %240 = cast(meta[relay.Constant][17] /* ty=Tensor[(4, 6, 14), bool] */, dtype="bool") /* ty=Tensor[(4, 6, 14), bool] */;
  %241 = shape_of(%var_2774, dtype="int32") /* ty=Tensor[(3), int32] */;
  %242 = cast(%var_2774, dtype="bool") /* ty=Tensor[(4, 6, 14), bool] */;
  %243 = dyn.reshape(%240, %241, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %244 = logical_and(%242, %243) /* ty=Tensor[(4, 6, 14), bool] */;
  %245 = cast(meta[relay.Constant][18] /* ty=Tensor[(4, 6, 14), bool] */, dtype="uint16") /* ty=Tensor[(4, 6, 14), uint16] */;
  %246 = shape_of(%244, dtype="int32") /* ty=Tensor[(3), int32] */;
  %247 = cast(%244, dtype="uint16") /* ty=Tensor[(4, 6, 14), uint16] */;
  %248 = dyn.reshape(%245, %246, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %249 = minimum(%247, %248) /* ty=Tensor[(4, 6, 14), uint16] */;
  %250 = cast(%244, dtype="int16") /* ty=Tensor[(4, 6, 14), int16] */;
  %251 = shape_of(%249, dtype="int32") /* ty=Tensor[(3), int32] */;
  %252 = cast(%249, dtype="int16") /* ty=Tensor[(4, 6, 14), int16] */;
  %253 = dyn.reshape(%250, %251, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %254 = cast(meta[relay.Constant][19] /* ty=Tensor[(50), float64] */, dtype="float64") /* ty=Tensor[(50), float64] */;
  %255 = cast(meta[relay.Constant][20] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
  %256 = reshape(%254, newshape=[1, 10, 5]) /* ty=Tensor[(1, 10, 5), float64] */;
  %257 = reshape(%255, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %258 = @func_908(%256, %257) /* ty=(Tensor[(1, 10, 5), float64], Tensor[(9, 14), float64], Tensor[(126), float64], Tensor[(16, 13, ?), int64], uint16, Tensor[(2, 8, 5), float64], Tensor[(80), float64]) */;
  %259 = cast(%249, dtype="float64") /* ty=Tensor[(4, 6, 14), float64] */;
  %260 = right_shift(%252, %253) /* ty=Tensor[(4, 6, 14), int16] */;
  %261 = %258.0;
  %262 = cos(%259) /* ty=Tensor[(4, 6, 14), float64] */;
  (%260, %261, meta[relay.Constant][19] /* ty=Tensor[(50), float64] */, meta[relay.Constant][20] /* ty=Tensor[(126), float64] */, %262)
}

def @func_5744(%var_5732: Tensor[(198), float64]) -> (Tensor[(16, 4, 14), bool], Tensor[(11, 2, 9), float64], Tensor[(198), float64]) {
  %263 = @func_5540() /* ty=Tensor[(1, 4, 14), bool] */;
  %264 = cast(%263, dtype="bool") /* ty=Tensor[(1, 4, 14), bool] */;
  %265 = cast(meta[relay.Constant][21] /* ty=Tensor[(16, 4, 14), bool] */, dtype="bool") /* ty=Tensor[(16, 4, 14), bool] */;
  %266 = cast(%var_5732, dtype="float64") /* ty=Tensor[(198), float64] */;
  %267 = reshape(%266, newshape=[11, 2, 9]) /* ty=Tensor[(11, 2, 9), float64] */;
  %268 = @func_323(%267) /* ty=(Tensor[(11, 2, 9), float64],) */;
  %269 = not_equal(%264, %265) /* ty=Tensor[(16, 4, 14), bool] */;
  %270 = %268.0;
  (%269, %270, %var_5732)
}

def @func_5471(%var_5426: Tensor[(14, 16, 13), float64], %var_5450: Tensor[(14, 16, 13), float64], %var_5468: Tensor[(180), uint8]) -> (Tensor[(14, 16, 13), float64], Tensor[(14, 16, 13), bool], Tensor[(180, 1), uint8], Tensor[(480), uint32], Tensor[(45), uint8], Tensor[(180), uint8], Tensor[(832), int8]) {
  %271 = cast(meta[relay.Constant][22] /* ty=Tensor[(14, 16, 13), float64] */, dtype="float64") /* ty=Tensor[(14, 16, 13), float64] */;
  %272 = shape_of(%var_5426, dtype="int32") /* ty=Tensor[(3), int32] */;
  %273 = cast(%var_5426, dtype="float64") /* ty=Tensor[(14, 16, 13), float64] */;
  %274 = dyn.reshape(%271, %272, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %275 = floor_divide(%273, %274) /* ty=Tensor[(14, 16, 13), float64] */;
  %276 = cast(%275, dtype="float64") /* ty=Tensor[(14, 16, 13), float64] */;
  %277 = shape_of(meta[relay.Constant][22] /* ty=Tensor[(14, 16, 13), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %278 = cast(meta[relay.Constant][22] /* ty=Tensor[(14, 16, 13), float64] */, dtype="float64") /* ty=Tensor[(14, 16, 13), float64] */;
  %279 = dyn.reshape(%276, %277, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %280 = cast(%var_5426, dtype="float32") /* ty=Tensor[(14, 16, 13), float32] */;
  %281 = rsqrt(%280) /* ty=Tensor[(14, 16, 13), float32] */;
  %282 = cast(%281, dtype="float64") /* ty=Tensor[(14, 16, 13), float64] */;
  %283 = log10(%282) /* ty=Tensor[(14, 16, 13), float64] */;
  %284 = cast(%var_5450, dtype="bool") /* ty=Tensor[(14, 16, 13), bool] */;
  %285 = shape_of(%283, dtype="int32") /* ty=Tensor[(3), int32] */;
  %286 = cast(%283, dtype="bool") /* ty=Tensor[(14, 16, 13), bool] */;
  %287 = dyn.reshape(%284, %285, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %288 = cast(meta[relay.Constant][23] /* ty=Tensor[(480), uint32] */, dtype="uint32") /* ty=Tensor[(480), uint32] */;
  %289 = cast(meta[relay.Constant][23] /* ty=Tensor[(480), uint32] */, dtype="uint32") /* ty=Tensor[(480), uint32] */;
  %290 = cast(meta[relay.Constant][24] /* ty=Tensor[(45), uint8] */, dtype="uint8") /* ty=Tensor[(45), uint8] */;
  %291 = cast(%var_5468, dtype="uint8") /* ty=Tensor[(180), uint8] */;
  %292 = cast(meta[relay.Constant][23] /* ty=Tensor[(480), uint32] */, dtype="uint32") /* ty=Tensor[(480), uint32] */;
  %293 = cast(meta[relay.Constant][25] /* ty=Tensor[(832), int8] */, dtype="int8") /* ty=Tensor[(832), int8] */;
  %294 = reshape(%288, newshape=[3, 16, 10]) /* ty=Tensor[(3, 16, 10), uint32] */;
  %295 = reshape(%289, newshape=[3, 16, 10]) /* ty=Tensor[(3, 16, 10), uint32] */;
  %296 = reshape(%290, newshape=[45]) /* ty=Tensor[(45), uint8] */;
  %297 = reshape(%291, newshape=[180, 1]) /* ty=Tensor[(180, 1), uint8] */;
  %298 = reshape(%292, newshape=[3, 16, 10]) /* ty=Tensor[(3, 16, 10), uint32] */;
  %299 = reshape(%293, newshape=[208, 4]) /* ty=Tensor[(208, 4), int8] */;
  %300 = @func_2702(%294, %295, %296, %297, %298, %299) /* ty=(Tensor[(3, 16, 10), bool], Tensor[(3, 4, 15), uint8], Tensor[(45), uint8], Tensor[(180, 1), uint8], Tensor[(3, 16, 10), uint8], Tensor[(130), float64], Tensor[(208, 4), int8], Tensor[(130), float64]) */;
  %301 = power(%278, %279) /* ty=Tensor[(14, 16, 13), float64] */;
  %302 = greater_equal(%286, %287) /* ty=Tensor[(14, 16, 13), bool] */;
  %303 = %300.3;
  (%301, %302, %303, meta[relay.Constant][23] /* ty=Tensor[(480), uint32] */, meta[relay.Constant][24] /* ty=Tensor[(45), uint8] */, %var_5468, meta[relay.Constant][25] /* ty=Tensor[(832), int8] */)
}

def @func_5112(%var_5071: Tensor[(10, 7, 15), bool], %var_5080: Tensor[(10, 7, 15), bool], %var_5098: Tensor[(10, 7, 15), bool]) -> (Tensor[(10, 7, 15), float64], Tensor[(10, 7, 15), int16], Tensor[(10, 7, 15), float32]) {
  %304 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %305 = cast(%var_5071, dtype="bool") /* ty=Tensor[(10, 7, 15), bool] */;
  %306 = logical_and(%304, %305) /* ty=Tensor[(10, 7, 15), bool] */;
  %307 = cast(True /* ty=bool */, dtype="float64") /* ty=float64 */;
  %308 = cast(%306, dtype="float64") /* ty=Tensor[(10, 7, 15), float64] */;
  %309 = cast(%var_5080, dtype="int16") /* ty=Tensor[(10, 7, 15), int16] */;
  %310 = shape_of(%var_5071, dtype="int32") /* ty=Tensor[(3), int32] */;
  %311 = cast(%var_5071, dtype="int16") /* ty=Tensor[(10, 7, 15), int16] */;
  %312 = dyn.reshape(%309, %310, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %313 = cast(%var_5098, dtype="float32") /* ty=Tensor[(10, 7, 15), float32] */;
  %314 = shape_of(%var_5080, dtype="int32") /* ty=Tensor[(3), int32] */;
  %315 = cast(%var_5080, dtype="float32") /* ty=Tensor[(10, 7, 15), float32] */;
  %316 = dyn.reshape(%313, %314, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %317 = mod(%307, %308) /* ty=Tensor[(10, 7, 15), float64] */;
  %318 = right_shift(%311, %312) /* ty=Tensor[(10, 7, 15), int16] */;
  %319 = floor_divide(%315, %316) /* ty=Tensor[(10, 7, 15), float32] */;
  (%317, %318, %319)
}

def @func_1019(%var_985: Tensor[(16, 12, 16), float64]) -> (Tensor[(16, 12, 16), float64],) {
  %320 = cast(%var_985, dtype="float64") /* ty=Tensor[(16, 12, 16), float64] */;
  %321 = cosh(%320) /* ty=Tensor[(16, 12, 16), float64] */;
  (%321,)
}

def @func_5621(%var_5615: Tensor[(20, 4), float64]) -> (Tensor[(1, 4, 14), bool], Tensor[(80), float64], Tensor[(20, 4), float64]) {
  %322 = cast(%var_5615, dtype="float64") /* ty=Tensor[(20, 4), float64] */;
  %323 = reshape(%322, newshape=[80]) /* ty=Tensor[(80), float64] */;
  %324 = @func_1900(%323) /* ty=(Tensor[(2, 8, 5), float64], Tensor[(80), float64], Tensor[(7, 14, 5), float32]) */;
  %325 = cast(%var_5615, dtype="float64") /* ty=Tensor[(20, 4), float64] */;
  %326 = @func_5540() /* ty=Tensor[(1, 4, 14), bool] */;
  %327 = %324.1;
  %328 = acosh(%325) /* ty=Tensor[(20, 4), float64] */;
  (%326, %327, %328)
}

def @func_1900(%var_1892: Tensor[(80), float64]) -> (Tensor[(2, 8, 5), float64], Tensor[(80), float64], Tensor[(7, 14, 5), float32]) {
  %329 = cast(%var_1892, dtype="float64") /* ty=Tensor[(80), float64] */;
  %330 = reshape(%329, newshape=[2, 8, 5]) /* ty=Tensor[(2, 8, 5), float64] */;
  %331 = @func_363(%330) /* ty=(Tensor[(2, 8, 5), float64],) */;
  %332 = cast(meta[relay.Constant][26] /* ty=Tensor[(7, 1, 1), uint64] */, dtype="uint64") /* ty=Tensor[(7, 1, 1), uint64] */;
  %333 = cast(meta[relay.Constant][27] /* ty=Tensor[(7, 14, 5), uint64] */, dtype="uint64") /* ty=Tensor[(7, 14, 5), uint64] */;
  %334 = bitwise_or(%332, %333) /* ty=Tensor[(7, 14, 5), uint64] */;
  %335 = cast(%334, dtype="float32") /* ty=Tensor[(7, 14, 5), float32] */;
  %336 = %331.0;
  %337 = asinh(%335) /* ty=Tensor[(7, 14, 5), float32] */;
  (%336, %var_1892, %337)
}

def @func_6695() -> (Tensor[(6, 4, 14), bool],) {
  %338 = @func_5906() /* ty=(Tensor[(6, 4, 14), bool],) */;
  %339 = %338.0;
  (%339,)
}

def @func_3605(%var_3548: Tensor[(13, 15, 11), float64], %var_3557: Tensor[(360), float32], %var_3572: Tensor[(65), int16], %var_3574: Tensor[(936), float64], %var_3584: uint64) -> (Tensor[(13, 15, 11), bool], Tensor[(6, 12, 5), float32], Tensor[(360), float32], Tensor[(7, 14, 5), float32], Tensor[(80), float64], Tensor[(6, 12, 5), float32], Tensor[(9, 13, 8), int16], Tensor[(65), int16], Tensor[(4, 264), int64], Tensor[(936), float64], Tensor[(1, 126), float64], Tensor[(7, 7, 3), bool], uint64, Tensor[(1, 147), uint64], Tensor[(10, 13), float64], Tensor[(130), float64]) {
  %340 = cast(%var_3548, dtype="bool") /* ty=Tensor[(13, 15, 11), bool] */;
  %341 = shape_of(meta[relay.Constant][28] /* ty=Tensor[(13, 15, 11), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %342 = cast(meta[relay.Constant][28] /* ty=Tensor[(13, 15, 11), float64] */, dtype="bool") /* ty=Tensor[(13, 15, 11), bool] */;
  %343 = dyn.reshape(%340, %341, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %344 = cast(%var_3557, dtype="float32") /* ty=Tensor[(360), float32] */;
  %345 = reshape(%344, newshape=[6, 12, 5]) /* ty=Tensor[(6, 12, 5), float32] */;
  %346 = cast(meta[relay.Constant][29] /* ty=Tensor[(80), float64] */, dtype="float64") /* ty=Tensor[(80), float64] */;
  %347 = reshape(%346, newshape=[80]) /* ty=Tensor[(80), float64] */;
  %348 = @func_1900(%347) /* ty=(Tensor[(2, 8, 5), float64], Tensor[(80), float64], Tensor[(7, 14, 5), float32]) */;
  %349 = @func_2386(%345) /* ty=Tensor[(6, 12, 5), float32] */;
  %350 = cast(%349, dtype="float32") /* ty=Tensor[(6, 12, 5), float32] */;
  %351 = reshape(%350, newshape=[6, 12, 5]) /* ty=Tensor[(6, 12, 5), float32] */;
  %352 = cast(%var_3572, dtype="int16") /* ty=Tensor[(65), int16] */;
  %353 = cast(meta[relay.Constant][30] /* ty=Tensor[(4, 264), int64] */, dtype="int64") /* ty=Tensor[(4, 264), int64] */;
  %354 = cast(%var_3574, dtype="float64") /* ty=Tensor[(936), float64] */;
  %355 = cast(meta[relay.Constant][31] /* ty=Tensor[(1, 126), float64] */, dtype="float64") /* ty=Tensor[(1, 126), float64] */;
  %356 = reshape(%352, newshape=[13, 5, 1]) /* ty=Tensor[(13, 5, 1), int16] */;
  %357 = reshape(%353, newshape=[1056]) /* ty=Tensor[(1056), int64] */;
  %358 = reshape(%354, newshape=[936]) /* ty=Tensor[(936), float64] */;
  %359 = reshape(%355, newshape=[126, 1]) /* ty=Tensor[(126, 1), float64] */;
  %360 = @func_2281(%356, %357, %358, %359) /* ty=(Tensor[(13, 5, 16), int16], Tensor[(9, 13, 8), int16], Tensor[(176), int64], Tensor[(1056), int64], Tensor[(936), float64], Tensor[(126, 1), float64], Tensor[(45), uint8]) */;
  %361 = cast(%var_3584, dtype="uint64") /* ty=uint64 */;
  %362 = cast(meta[relay.Constant][32] /* ty=Tensor[(1, 147), uint64] */, dtype="uint64") /* ty=Tensor[(1, 147), uint64] */;
  %363 = reshape(%361, newshape=[]) /* ty=uint64 */;
  %364 = reshape(%362, newshape=[7, 7, 3]) /* ty=Tensor[(7, 7, 3), uint64] */;
  %365 = @func_2833(%363, %364) /* ty=(Tensor[(7, 7, 3), bool],) */;
  %366 = cast(meta[relay.Constant][33] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %367 = reshape(%366, newshape=[10, 13]) /* ty=Tensor[(10, 13), float64] */;
  %368 = @func_1442(%367) /* ty=(Tensor[(10, 13), float64],) */;
  %369 = greater(%342, %343) /* ty=Tensor[(13, 15, 11), bool] */;
  %370 = %348.2;
  %371 = @func_2386(%351) /* ty=Tensor[(6, 12, 5), float32] */;
  %372 = %360.1;
  %373 = %365.0;
  %374 = %368.0;
  (%369, %349, %var_3557, %370, meta[relay.Constant][29] /* ty=Tensor[(80), float64] */, %371, %372, %var_3572, meta[relay.Constant][30] /* ty=Tensor[(4, 264), int64] */, %var_3574, meta[relay.Constant][31] /* ty=Tensor[(1, 126), float64] */, %373, %var_3584, meta[relay.Constant][32] /* ty=Tensor[(1, 147), uint64] */, %374, meta[relay.Constant][33] /* ty=Tensor[(130), float64] */)
}

def @func_363(%var_360: Tensor[(2, 8, 5), float64]) -> (Tensor[(2, 8, 5), float64],) {
  %375 = cast(%var_360, dtype="float64") /* ty=Tensor[(2, 8, 5), float64] */;
  %376 = sinh(%375) /* ty=Tensor[(2, 8, 5), float64] */;
  (%376,)
}

def @func_7230(%var_7215: Tensor[(8, 14, 9), float64]) -> (Tensor[(8, 14, 9), float64], Tensor[(80), float64], Tensor[(2, 40), float64]) {
  %377 = cast(meta[relay.Constant][34] /* ty=Tensor[(8, 14, 9), float64] */, dtype="float64") /* ty=Tensor[(8, 14, 9), float64] */;
  %378 = shape_of(%var_7215, dtype="int32") /* ty=Tensor[(3), int32] */;
  %379 = cast(%var_7215, dtype="float64") /* ty=Tensor[(8, 14, 9), float64] */;
  %380 = dyn.reshape(%377, %378, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %381 = cast(meta[relay.Constant][35] /* ty=Tensor[(2, 40), float64] */, dtype="float64") /* ty=Tensor[(2, 40), float64] */;
  %382 = reshape(%381, newshape=[20, 4]) /* ty=Tensor[(20, 4), float64] */;
  %383 = @func_5621(%382) /* ty=(Tensor[(1, 4, 14), bool], Tensor[(80), float64], Tensor[(20, 4), float64]) */;
  %384 = floor_divide(%379, %380) /* ty=Tensor[(8, 14, 9), float64] */;
  %385 = %383.1;
  (%384, %385, meta[relay.Constant][35] /* ty=Tensor[(2, 40), float64] */)
}

def @func_1737(%var_1721: int64, %var_1722: Tensor[(1, 7, 12), int64]) -> (Tensor[(1, 7, 12), int64], Tensor[(1, 7, 12), float64]) {
  %386 = cast(%var_1721, dtype="int64") /* ty=int64 */;
  %387 = cast(%var_1722, dtype="int64") /* ty=Tensor[(1, 7, 12), int64] */;
  %388 = cast(%var_1722, dtype="bool") /* ty=Tensor[(1, 7, 12), bool] */;
  %389 = cast(%var_1721, dtype="bool") /* ty=bool */;
  %390 = logical_or(%388, %389) /* ty=Tensor[(1, 7, 12), bool] */;
  %391 = cast(%390, dtype="float64") /* ty=Tensor[(1, 7, 12), float64] */;
  %392 = bitwise_or(%386, %387) /* ty=Tensor[(1, 7, 12), int64] */;
  %393 = log(%391) /* ty=Tensor[(1, 7, 12), float64] */;
  (%392, %393)
}

def @func_6398() -> Tensor[(6, 4, 14), bool] {
  %394 = @func_6122() /* ty=(Tensor[(6, 4, 14), bool],) */;
  %394.0
}

def @func_44(%var_10: Tensor[(9, 14), float64]) -> (Tensor[(9, 14), float64],) {
  %395 = cast(%var_10, dtype="float64") /* ty=Tensor[(9, 14), float64] */;
  %396 = asinh(%395) /* ty=Tensor[(9, 14), float64] */;
  (%396,)
}

def @func_3134(%var_3074: Tensor[(3, 8, 9), float64], %var_3082: Tensor[(3, 8, 9), float64], %var_3093: Tensor[(80), float64]) -> (Tensor[(126), float64], Tensor[(50), float64], Tensor[(21, 6), float64], Tensor[(126), float64], Tensor[(936), float64], Tensor[(80), float64], Tensor[(2, 8, 5), float64], Tensor[(3, 8, 9), bool]) {
  %397 = cast(meta[relay.Constant][36] /* ty=Tensor[(50), float64] */, dtype="float64") /* ty=Tensor[(50), float64] */;
  %398 = cast(meta[relay.Constant][37] /* ty=Tensor[(21, 6), float64] */, dtype="float64") /* ty=Tensor[(21, 6), float64] */;
  %399 = reshape(%397, newshape=[1, 10, 5]) /* ty=Tensor[(1, 10, 5), float64] */;
  %400 = reshape(%398, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %401 = @func_908(%399, %400) /* ty=(Tensor[(1, 10, 5), float64], Tensor[(9, 14), float64], Tensor[(126), float64], Tensor[(16, 13, ?), int64], uint16, Tensor[(2, 8, 5), float64], Tensor[(80), float64]) */;
  %402 = cast(meta[relay.Constant][38] /* ty=Tensor[(936), float64] */, dtype="float64") /* ty=Tensor[(936), float64] */;
  %403 = %401.2;
  %404 = cast(%403, dtype="float64") /* ty=Tensor[(126), float64] */;
  %405 = cast(%var_3093, dtype="float64") /* ty=Tensor[(80), float64] */;
  %406 = reshape(%402, newshape=[9, 13, 8]) /* ty=Tensor[(9, 13, 8), float64] */;
  %407 = reshape(%404, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %408 = reshape(%405, newshape=[1, 80]) /* ty=Tensor[(1, 80), float64] */;
  %409 = @func_734(%406, %407, %408) /* ty=(Tensor[(9, 13, 8), float64], Tensor[(9, 14), float64], Tensor[(126), float64], Tensor[(2, 8, 5), float64], Tensor[(9, 13, 8), int16], Tensor[(2, 8, 5), float64], Tensor[(1, 80), float64]) */;
  %410 = cast(%var_3093, dtype="float64") /* ty=Tensor[(80), float64] */;
  %411 = reshape(%410, newshape=[80]) /* ty=Tensor[(80), float64] */;
  %412 = @func_1900(%411) /* ty=(Tensor[(2, 8, 5), float64], Tensor[(80), float64], Tensor[(7, 14, 5), float32]) */;
  %413 = cast(%var_3074, dtype="float64") /* ty=Tensor[(3, 8, 9), float64] */;
  %414 = log10(%413) /* ty=Tensor[(3, 8, 9), float64] */;
  %415 = cast(%var_3082, dtype="uint64") /* ty=Tensor[(3, 8, 9), uint64] */;
  %416 = shape_of(%414, dtype="int32") /* ty=Tensor[(3), int32] */;
  %417 = cast(%414, dtype="uint64") /* ty=Tensor[(3, 8, 9), uint64] */;
  %418 = dyn.reshape(%415, %416, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %419 = multiply(%417, %418) /* ty=Tensor[(3, 8, 9), uint64] */;
  %420 = cast(%419, dtype="bool") /* ty=Tensor[(3, 8, 9), bool] */;
  %421 = shape_of(%414, dtype="int32") /* ty=Tensor[(3), int32] */;
  %422 = cast(%414, dtype="bool") /* ty=Tensor[(3, 8, 9), bool] */;
  %423 = dyn.reshape(%420, %421, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %424 = %409.2;
  %425 = %412.0;
  %426 = less_equal(%422, %423) /* ty=Tensor[(3, 8, 9), bool] */;
  (%403, meta[relay.Constant][36] /* ty=Tensor[(50), float64] */, meta[relay.Constant][37] /* ty=Tensor[(21, 6), float64] */, %424, meta[relay.Constant][38] /* ty=Tensor[(936), float64] */, %var_3093, %425, %426)
}

def @func_594(%var_577: uint16) -> Tensor[(16, 13, ?), int64] {
  %427 = cast(%var_577, dtype="uint16") /* ty=uint16 */;
  %428 = cast(meta[relay.Constant][39] /* ty=Tensor[(16, 13, 1), uint16] */, dtype="uint16") /* ty=Tensor[(16, 13, 1), uint16] */;
  %429 = multiply(%427, %428) /* ty=Tensor[(16, 13, 1), uint16] */;
  %430 = cast(meta[relay.Constant][39] /* ty=Tensor[(16, 13, 1), uint16] */, dtype="int64") /* ty=Tensor[(16, 13, 1), int64] */;
  %431 = shape_of(%429, dtype="int32") /* ty=Tensor[(3), int32] */;
  %432 = cast(%429, dtype="int64") /* ty=Tensor[(16, 13, 1), int64] */;
  %433 = dyn.reshape(%430, %431, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  bitwise_and(%432, %433) /* ty=Tensor[(16, 13, ?), int64] */
}

def @func_5947(%var_5938: Tensor[(8, 4, 14), float32]) -> (Tensor[(2, 8, 5), float64], Tensor[(80), float64], Tensor[(8, 4, 14), uint8], Tensor[(6, 4, 14), bool]) {
  %434 = cast(meta[relay.Constant][40] /* ty=Tensor[(80), float64] */, dtype="float64") /* ty=Tensor[(80), float64] */;
  %435 = reshape(%434, newshape=[2, 8, 5]) /* ty=Tensor[(2, 8, 5), float64] */;
  %436 = @func_363(%435) /* ty=(Tensor[(2, 8, 5), float64],) */;
  %437 = @func_5540() /* ty=Tensor[(1, 4, 14), bool] */;
  %438 = cast(%437, dtype="float32") /* ty=Tensor[(1, 4, 14), float32] */;
  %439 = sin(%438) /* ty=Tensor[(1, 4, 14), float32] */;
  %440 = cast(%437, dtype="float32") /* ty=Tensor[(1, 4, 14), float32] */;
  %441 = shape_of(%439, dtype="int32") /* ty=Tensor[(3), int32] */;
  %442 = cast(%439, dtype="float32") /* ty=Tensor[(1, 4, 14), float32] */;
  %443 = dyn.reshape(%440, %441, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %444 = divide(%442, %443) /* ty=Tensor[(?, 4, 14), float32] */;
  %445 = cast(%439, dtype="float32") /* ty=Tensor[(1, 4, 14), float32] */;
  %446 = shape_of(%444, dtype="int32") /* ty=Tensor[(3), int32] */;
  %447 = cast(%444, dtype="float32") /* ty=Tensor[(?, 4, 14), float32] */;
  %448 = dyn.reshape(%445, %446, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %449 = subtract(%447, %448) /* ty=Tensor[(?, 4, 14), float32] */;
  %450 = cast(%449, dtype="uint8") /* ty=Tensor[(?, 4, 14), uint8] */;
  %451 = cast(%var_5938, dtype="uint8") /* ty=Tensor[(8, 4, 14), uint8] */;
  %452 = @func_5906() /* ty=(Tensor[(6, 4, 14), bool],) */;
  %453 = %436.0;
  %454 = bitwise_xor(%450, %451) /* ty=Tensor[(8, 4, 14), uint8] */;
  %455 = %452.0;
  (%453, meta[relay.Constant][40] /* ty=Tensor[(80), float64] */, %454, %455)
}

def @func_6341(%var_6327: Tensor[(12, 78), float64], %var_6328: Tensor[(126), float64], %var_6337: Tensor[(3072), float64]) -> (Tensor[(1, 4, 14), bool], Tensor[(6, 4, 14), bool], Tensor[(1056), int64], Tensor[(65), int16], Tensor[(1056), int64], Tensor[(12, 78), float64], Tensor[(126), float64], Tensor[(16, 12, 16), float64], Tensor[(3072), float64]) {
  %456 = @func_6104() /* ty=(Tensor[(6, 4, 14), bool],) */;
  %457 = cast(meta[relay.Constant][41] /* ty=Tensor[(65), int16] */, dtype="int16") /* ty=Tensor[(65), int16] */;
  %458 = cast(meta[relay.Constant][42] /* ty=Tensor[(1056), int64] */, dtype="int64") /* ty=Tensor[(1056), int64] */;
  %459 = cast(%var_6327, dtype="float64") /* ty=Tensor[(12, 78), float64] */;
  %460 = cast(%var_6328, dtype="float64") /* ty=Tensor[(126), float64] */;
  %461 = reshape(%457, newshape=[13, 5, 1]) /* ty=Tensor[(13, 5, 1), int16] */;
  %462 = reshape(%458, newshape=[1056]) /* ty=Tensor[(1056), int64] */;
  %463 = reshape(%459, newshape=[936]) /* ty=Tensor[(936), float64] */;
  %464 = reshape(%460, newshape=[126, 1]) /* ty=Tensor[(126, 1), float64] */;
  %465 = @func_2281(%461, %462, %463, %464) /* ty=(Tensor[(13, 5, 16), int16], Tensor[(9, 13, 8), int16], Tensor[(176), int64], Tensor[(1056), int64], Tensor[(936), float64], Tensor[(126, 1), float64], Tensor[(45), uint8]) */;
  %466 = cast(%var_6337, dtype="float64") /* ty=Tensor[(3072), float64] */;
  %467 = reshape(%466, newshape=[16, 12, 16]) /* ty=Tensor[(16, 12, 16), float64] */;
  %468 = @func_1019(%467) /* ty=(Tensor[(16, 12, 16), float64],) */;
  %469 = @func_5540() /* ty=Tensor[(1, 4, 14), bool] */;
  %470 = %456.0;
  %471 = %465.3;
  %472 = %468.0;
  (%469, %470, %471, meta[relay.Constant][41] /* ty=Tensor[(65), int16] */, meta[relay.Constant][42] /* ty=Tensor[(1056), int64] */, %var_6327, %var_6328, %472, %var_6337)
}

def @func_6862(%var_6839: Tensor[(5, 13, 8), float32], %var_6853: Tensor[(168), int32]) -> (Tensor[(5, 13, 8), float64], Tensor[(4, 6, 7), bool], Tensor[(168), int32]) {
  %473 = cast(%var_6839, dtype="float32") /* ty=Tensor[(5, 13, 8), float32] */;
  %474 = exp(%473) /* ty=Tensor[(5, 13, 8), float32] */;
  %475 = cast(%474, dtype="float64") /* ty=Tensor[(5, 13, 8), float64] */;
  %476 = cast(%var_6853, dtype="int32") /* ty=Tensor[(168), int32] */;
  %477 = reshape(%476, newshape=[4, 6, 7]) /* ty=Tensor[(4, 6, 7), int32] */;
  %478 = @func_876(%477) /* ty=(Tensor[(4, 6, 7), bool], Tensor[(1, 80), float64], Tensor[(126), float64], Tensor[(80), float64], Tensor[(4, 6, 7), float64], Tensor[(468, 2), float32]) */;
  %479 = sinh(%475) /* ty=Tensor[(5, 13, 8), float64] */;
  %480 = %478.0;
  (%479, %480, %var_6853)
}

def @func_5851(%var_5837: Tensor[(15, 3, 10), uint8], %var_5838: Tensor[(15, 3, 10), uint8]) -> (Tensor[(15, 3, 10), uint8], Tensor[(1, 80), float64], Tensor[(168), int32]) {
  %481 = cast(%var_5838, dtype="uint8") /* ty=Tensor[(15, 3, 10), uint8] */;
  %482 = shape_of(%var_5837, dtype="int32") /* ty=Tensor[(3), int32] */;
  %483 = cast(%var_5837, dtype="uint8") /* ty=Tensor[(15, 3, 10), uint8] */;
  %484 = dyn.reshape(%481, %482, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %485 = cast(meta[relay.Constant][43] /* ty=Tensor[(168), int32] */, dtype="int32") /* ty=Tensor[(168), int32] */;
  %486 = reshape(%485, newshape=[4, 6, 7]) /* ty=Tensor[(4, 6, 7), int32] */;
  %487 = @func_876(%486) /* ty=(Tensor[(4, 6, 7), bool], Tensor[(1, 80), float64], Tensor[(126), float64], Tensor[(80), float64], Tensor[(4, 6, 7), float64], Tensor[(468, 2), float32]) */;
  %488 = logical_xor(%483, %484) /* ty=Tensor[(15, 3, 10), uint8] */;
  %489 = %487.1;
  (%488, %489, meta[relay.Constant][43] /* ty=Tensor[(168), int32] */)
}

def @func_6593() -> Tensor[(6, 4, 14), bool] {
  @func_6398() /* ty=Tensor[(6, 4, 14), bool] */
}

def @func_5579(%var_5558: Tensor[(10, 4, 14), bool], %var_5564: Tensor[(832), int8], %var_5565: Tensor[(26, 5), float64], %var_5576: Tensor[(616), float32]) -> (Tensor[(10, 4, 14), bool], Tensor[(10, 13), float64], Tensor[(832), int8], Tensor[(26, 5), float64], Tensor[(1, 4, 14), float64], Tensor[(7, 3, 2), float64], Tensor[(616), float32]) {
  %490 = @func_5540() /* ty=Tensor[(1, 4, 14), bool] */;
  %491 = cast(%490, dtype="bool") /* ty=Tensor[(1, 4, 14), bool] */;
  %492 = cast(%var_5558, dtype="bool") /* ty=Tensor[(10, 4, 14), bool] */;
  %493 = cast(%var_5564, dtype="int8") /* ty=Tensor[(832), int8] */;
  %494 = cast(%var_5565, dtype="float64") /* ty=Tensor[(26, 5), float64] */;
  %495 = reshape(%493, newshape=[16, 4, 13]) /* ty=Tensor[(16, 4, 13), int8] */;
  %496 = reshape(%494, newshape=[130]) /* ty=Tensor[(130), float64] */;
  %497 = @func_1471(%495, %496) /* ty=(Tensor[(16, 4, 13), int8], Tensor[(10, 13), float64], Tensor[(130), float64]) */;
  %498 = cast(%490, dtype="float64") /* ty=Tensor[(1, 4, 14), float64] */;
  %499 = cast(%var_5576, dtype="float32") /* ty=Tensor[(616), float32] */;
  %500 = reshape(%499, newshape=[616]) /* ty=Tensor[(616), float32] */;
  %501 = @func_4258(%500) /* ty=(Tensor[(7, 3, 2), bool], Tensor[(7, 3, 2), float64], Tensor[(7, 8, 11), float32], Tensor[(616), float32]) */;
  %502 = less_equal(%491, %492) /* ty=Tensor[(10, 4, 14), bool] */;
  %503 = %497.1;
  %504 = erf(%498) /* ty=Tensor[(1, 4, 14), float64] */;
  %505 = %501.1;
  (%502, %503, %var_5564, %var_5565, %504, %505, %var_5576)
}

def @func_6530(%var_6522: Tensor[(126), float64]) -> (Tensor[(6, 4, 14), bool], Tensor[(2, 8, 5), float64], Tensor[(936), float64], Tensor[(126), float64], Tensor[(80), float64]) {
  %506 = cast(meta[relay.Constant][44] /* ty=Tensor[(936), float64] */, dtype="float64") /* ty=Tensor[(936), float64] */;
  %507 = cast(%var_6522, dtype="float64") /* ty=Tensor[(126), float64] */;
  %508 = cast(meta[relay.Constant][45] /* ty=Tensor[(80), float64] */, dtype="float64") /* ty=Tensor[(80), float64] */;
  %509 = reshape(%506, newshape=[9, 13, 8]) /* ty=Tensor[(9, 13, 8), float64] */;
  %510 = reshape(%507, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %511 = reshape(%508, newshape=[1, 80]) /* ty=Tensor[(1, 80), float64] */;
  %512 = @func_734(%509, %510, %511) /* ty=(Tensor[(9, 13, 8), float64], Tensor[(9, 14), float64], Tensor[(126), float64], Tensor[(2, 8, 5), float64], Tensor[(9, 13, 8), int16], Tensor[(2, 8, 5), float64], Tensor[(1, 80), float64]) */;
  %513 = @func_6398() /* ty=Tensor[(6, 4, 14), bool] */;
  %514 = %512.3;
  (%513, %514, meta[relay.Constant][44] /* ty=Tensor[(936), float64] */, %var_6522, meta[relay.Constant][45] /* ty=Tensor[(80), float64] */)
}

def @func_6945() -> Tensor[(6, 4, 14), bool] {
  %515 = @func_6624() /* ty=(Tensor[(6, 4, 14), bool],) */;
  %515.0
}

def @func_323(%var_317: Tensor[(11, 2, 9), float64]) -> (Tensor[(11, 2, 9), float64],) {
  %516 = cast(%var_317, dtype="float64") /* ty=Tensor[(11, 2, 9), float64] */;
  %517 = atan(%516) /* ty=Tensor[(11, 2, 9), float64] */;
  (%517,)
}

def @func_5549(%var_5545: Tensor[(8, 11, 11), float64]) -> (Tensor[(8, 11, 11), float64],) {
  %518 = cast(%var_5545, dtype="float64") /* ty=Tensor[(8, 11, 11), float64] */;
  %519 = exp(%518) /* ty=Tensor[(8, 11, 11), float64] */;
  (%519,)
}

def @func_5540() -> Tensor[(1, 4, 14), bool] {
  %520 = cast(meta[relay.Constant][46] /* ty=uint64 */, dtype="bool") /* ty=bool */;
  %521 = cast(meta[relay.Constant][47] /* ty=Tensor[(1, 4, 14), uint64] */, dtype="bool") /* ty=Tensor[(1, 4, 14), bool] */;
  not_equal(%520, %521) /* ty=Tensor[(1, 4, 14), bool] */
}

def @func_7103() -> Tensor[(6, 4, 14), float64] {
  %522 = @func_6945() /* ty=Tensor[(6, 4, 14), bool] */;
  %523 = cast(meta[relay.Constant][48] /* ty=Tensor[(6, 4, 14), bool] */, dtype="float64") /* ty=Tensor[(6, 4, 14), float64] */;
  %524 = shape_of(%522, dtype="int32") /* ty=Tensor[(3), int32] */;
  %525 = cast(%522, dtype="float64") /* ty=Tensor[(6, 4, 14), float64] */;
  %526 = dyn.reshape(%523, %524, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  mod(%525, %526) /* ty=Tensor[(6, 4, 14), float64] */
}

def @func_2140(%var_2079: Tensor[(1, 11, 16), int64], %var_2080: Tensor[(6, 11, 16), int64], %var_2087: Tensor[(936), float64], %var_2088: Tensor[(126), float64], %var_2094: Tensor[(45), uint8]) -> (Tensor[(6, 11, 16), bool], Tensor[(9, 13, 8), int16], Tensor[(936), float64], Tensor[(126), float64], Tensor[(80), float64], Tensor[(45), uint8], Tensor[(126), float64], Tensor[(1, 11, 16), float64], Tensor[(2, 8, 5), float64], Tensor[(3, 4, 15), int32]) {
  %527 = cast(%var_2079, dtype="bool") /* ty=Tensor[(1, 11, 16), bool] */;
  %528 = cast(%var_2080, dtype="bool") /* ty=Tensor[(6, 11, 16), bool] */;
  %529 = cast(%var_2087, dtype="float64") /* ty=Tensor[(936), float64] */;
  %530 = cast(%var_2088, dtype="float64") /* ty=Tensor[(126), float64] */;
  %531 = cast(meta[relay.Constant][49] /* ty=Tensor[(80), float64] */, dtype="float64") /* ty=Tensor[(80), float64] */;
  %532 = reshape(%529, newshape=[9, 13, 8]) /* ty=Tensor[(9, 13, 8), float64] */;
  %533 = reshape(%530, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %534 = reshape(%531, newshape=[1, 80]) /* ty=Tensor[(1, 80), float64] */;
  %535 = @func_734(%532, %533, %534) /* ty=(Tensor[(9, 13, 8), float64], Tensor[(9, 14), float64], Tensor[(126), float64], Tensor[(2, 8, 5), float64], Tensor[(9, 13, 8), int16], Tensor[(2, 8, 5), float64], Tensor[(1, 80), float64]) */;
  %536 = %535.4;
  %537 = cast(%536, dtype="float64") /* ty=Tensor[(9, 13, 8), float64] */;
  %538 = cast(%var_2088, dtype="float64") /* ty=Tensor[(126), float64] */;
  %539 = cast(meta[relay.Constant][49] /* ty=Tensor[(80), float64] */, dtype="float64") /* ty=Tensor[(80), float64] */;
  %540 = reshape(%537, newshape=[9, 13, 8]) /* ty=Tensor[(9, 13, 8), float64] */;
  %541 = reshape(%538, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %542 = reshape(%539, newshape=[1, 80]) /* ty=Tensor[(1, 80), float64] */;
  %543 = @func_734(%540, %541, %542) /* ty=(Tensor[(9, 13, 8), float64], Tensor[(9, 14), float64], Tensor[(126), float64], Tensor[(2, 8, 5), float64], Tensor[(9, 13, 8), int16], Tensor[(2, 8, 5), float64], Tensor[(1, 80), float64]) */;
  %544 = cast(%var_2079, dtype="float64") /* ty=Tensor[(1, 11, 16), float64] */;
  %545 = cast(meta[relay.Constant][49] /* ty=Tensor[(80), float64] */, dtype="float64") /* ty=Tensor[(80), float64] */;
  %546 = reshape(%545, newshape=[2, 8, 5]) /* ty=Tensor[(2, 8, 5), float64] */;
  %547 = @func_363(%546) /* ty=(Tensor[(2, 8, 5), float64],) */;
  %548 = cast(%var_2094, dtype="uint8") /* ty=Tensor[(45), uint8] */;
  %549 = cast(meta[relay.Constant][50] /* ty=Tensor[(30, 6), uint8] */, dtype="uint8") /* ty=Tensor[(30, 6), uint8] */;
  %550 = reshape(%548, newshape=[3, 1, 15]) /* ty=Tensor[(3, 1, 15), uint8] */;
  %551 = reshape(%549, newshape=[3, 4, 15]) /* ty=Tensor[(3, 4, 15), uint8] */;
  %552 = @func_1966(%550, %551) /* ty=(Tensor[(3, 4, 15), uint8],) */;
  %553 = %552.0;
  %554 = cast(meta[relay.Constant][50] /* ty=Tensor[(30, 6), uint8] */, dtype="int32") /* ty=Tensor[(30, 6), int32] */;
  %555 = shape_of(%553, dtype="int32") /* ty=Tensor[(3), int32] */;
  %556 = cast(%553, dtype="int32") /* ty=Tensor[(3, 4, 15), int32] */;
  %557 = dyn.reshape(%554, %555, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %558 = equal(%527, %528) /* ty=Tensor[(6, 11, 16), bool] */;
  %559 = %543.2;
  %560 = sin(%544) /* ty=Tensor[(1, 11, 16), float64] */;
  %561 = %547.0;
  %562 = minimum(%556, %557) /* ty=Tensor[(3, 4, 15), int32] */;
  (%558, %536, %var_2087, %var_2088, meta[relay.Constant][49] /* ty=Tensor[(80), float64] */, %var_2094, %559, %560, %561, %562)
}

def @func_2702(%var_2656: Tensor[(3, 16, 10), uint32], %var_2657: Tensor[(3, 16, 10), uint32], %var_2673: Tensor[(45), uint8], %var_2674: Tensor[(180, 1), uint8], %var_2685: Tensor[(3, 16, 10), uint32], %var_2693: Tensor[(208, 4), int8]) -> (Tensor[(3, 16, 10), bool], Tensor[(3, 4, 15), uint8], Tensor[(45), uint8], Tensor[(180, 1), uint8], Tensor[(3, 16, 10), uint8], Tensor[(130), float64], Tensor[(208, 4), int8], Tensor[(130), float64]) {
  %563 = cast(%var_2657, dtype="bool") /* ty=Tensor[(3, 16, 10), bool] */;
  %564 = shape_of(%var_2656, dtype="int32") /* ty=Tensor[(3), int32] */;
  %565 = cast(%var_2656, dtype="bool") /* ty=Tensor[(3, 16, 10), bool] */;
  %566 = dyn.reshape(%563, %564, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %567 = cast(%var_2673, dtype="uint8") /* ty=Tensor[(45), uint8] */;
  %568 = cast(%var_2674, dtype="uint8") /* ty=Tensor[(180, 1), uint8] */;
  %569 = reshape(%567, newshape=[3, 1, 15]) /* ty=Tensor[(3, 1, 15), uint8] */;
  %570 = reshape(%568, newshape=[3, 4, 15]) /* ty=Tensor[(3, 4, 15), uint8] */;
  %571 = @func_1966(%569, %570) /* ty=(Tensor[(3, 4, 15), uint8],) */;
  %572 = cast(%var_2685, dtype="uint8") /* ty=Tensor[(3, 16, 10), uint8] */;
  %573 = shape_of(%var_2656, dtype="int32") /* ty=Tensor[(3), int32] */;
  %574 = cast(%var_2656, dtype="uint8") /* ty=Tensor[(3, 16, 10), uint8] */;
  %575 = dyn.reshape(%572, %573, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %576 = cast(%var_2693, dtype="int8") /* ty=Tensor[(208, 4), int8] */;
  %577 = cast(meta[relay.Constant][51] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %578 = reshape(%576, newshape=[16, 4, 13]) /* ty=Tensor[(16, 4, 13), int8] */;
  %579 = reshape(%577, newshape=[130]) /* ty=Tensor[(130), float64] */;
  %580 = @func_1471(%578, %579) /* ty=(Tensor[(16, 4, 13), int8], Tensor[(10, 13), float64], Tensor[(130), float64]) */;
  %581 = less(%565, %566) /* ty=Tensor[(3, 16, 10), bool] */;
  %582 = %571.0;
  %583 = bitwise_and(%574, %575) /* ty=Tensor[(3, 16, 10), uint8] */;
  %584 = %580.2;
  (%581, %582, %var_2673, %var_2674, %583, %584, %var_2693, meta[relay.Constant][51] /* ty=Tensor[(130), float64] */)
}

def @func_1966(%var_1961: Tensor[(3, 1, 15), uint8], %var_1962: Tensor[(3, 4, 15), uint8]) -> (Tensor[(3, 4, 15), uint8],) {
  %585 = cast(%var_1961, dtype="uint8") /* ty=Tensor[(3, 1, 15), uint8] */;
  %586 = cast(%var_1962, dtype="uint8") /* ty=Tensor[(3, 4, 15), uint8] */;
  %587 = logical_xor(%585, %586) /* ty=Tensor[(3, 4, 15), uint8] */;
  (%587,)
}

def @func_2281(%var_2250: Tensor[(13, 5, 1), int16], %var_2269: Tensor[(1056), int64], %var_2270: Tensor[(936), float64], %var_2271: Tensor[(126, 1), float64]) -> (Tensor[(13, 5, 16), int16], Tensor[(9, 13, 8), int16], Tensor[(176), int64], Tensor[(1056), int64], Tensor[(936), float64], Tensor[(126, 1), float64], Tensor[(45), uint8]) {
  %588 = cast(%var_2250, dtype="int16") /* ty=Tensor[(13, 5, 1), int16] */;
  %589 = cast(meta[relay.Constant][52] /* ty=Tensor[(13, 5, 16), int16] */, dtype="int16") /* ty=Tensor[(13, 5, 16), int16] */;
  %590 = cast(meta[relay.Constant][53] /* ty=Tensor[(176), int64] */, dtype="int64") /* ty=Tensor[(176), int64] */;
  %591 = cast(%var_2269, dtype="int64") /* ty=Tensor[(1056), int64] */;
  %592 = cast(%var_2270, dtype="float64") /* ty=Tensor[(936), float64] */;
  %593 = cast(%var_2271, dtype="float64") /* ty=Tensor[(126, 1), float64] */;
  %594 = cast(meta[relay.Constant][54] /* ty=Tensor[(45), uint8] */, dtype="uint8") /* ty=Tensor[(45), uint8] */;
  %595 = reshape(%590, newshape=[1, 11, 16]) /* ty=Tensor[(1, 11, 16), int64] */;
  %596 = reshape(%591, newshape=[6, 11, 16]) /* ty=Tensor[(6, 11, 16), int64] */;
  %597 = reshape(%592, newshape=[936]) /* ty=Tensor[(936), float64] */;
  %598 = reshape(%593, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %599 = reshape(%594, newshape=[45]) /* ty=Tensor[(45), uint8] */;
  %600 = @func_2140(%595, %596, %597, %598, %599) /* ty=(Tensor[(6, 11, 16), bool], Tensor[(9, 13, 8), int16], Tensor[(936), float64], Tensor[(126), float64], Tensor[(80), float64], Tensor[(45), uint8], Tensor[(126), float64], Tensor[(1, 11, 16), float64], Tensor[(2, 8, 5), float64], Tensor[(3, 4, 15), int32]) */;
  %601 = add(%588, %589) /* ty=Tensor[(13, 5, 16), int16] */;
  %602 = %600.1;
  (%601, %602, meta[relay.Constant][53] /* ty=Tensor[(176), int64] */, %var_2269, %var_2270, %var_2271, meta[relay.Constant][54] /* ty=Tensor[(45), uint8] */)
}

def @func_876(%var_830: Tensor[(4, 6, 7), int32]) -> (Tensor[(4, 6, 7), bool], Tensor[(1, 80), float64], Tensor[(126), float64], Tensor[(80), float64], Tensor[(4, 6, 7), float64], Tensor[(468, 2), float32]) {
  %603 = cast(meta[relay.Constant][55] /* ty=Tensor[(4, 6, 7), int32] */, dtype="bool") /* ty=Tensor[(4, 6, 7), bool] */;
  %604 = shape_of(%var_830, dtype="int32") /* ty=Tensor[(3), int32] */;
  %605 = cast(%var_830, dtype="bool") /* ty=Tensor[(4, 6, 7), bool] */;
  %606 = dyn.reshape(%603, %604, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %607 = cast(meta[relay.Constant][56] /* ty=Tensor[(468, 2), float64] */, dtype="float64") /* ty=Tensor[(468, 2), float64] */;
  %608 = cast(meta[relay.Constant][57] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
  %609 = cast(meta[relay.Constant][58] /* ty=Tensor[(80), float64] */, dtype="float64") /* ty=Tensor[(80), float64] */;
  %610 = reshape(%607, newshape=[9, 13, 8]) /* ty=Tensor[(9, 13, 8), float64] */;
  %611 = reshape(%608, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %612 = reshape(%609, newshape=[1, 80]) /* ty=Tensor[(1, 80), float64] */;
  %613 = @func_734(%610, %611, %612) /* ty=(Tensor[(9, 13, 8), float64], Tensor[(9, 14), float64], Tensor[(126), float64], Tensor[(2, 8, 5), float64], Tensor[(9, 13, 8), int16], Tensor[(2, 8, 5), float64], Tensor[(1, 80), float64]) */;
  %614 = cast(meta[relay.Constant][55] /* ty=Tensor[(4, 6, 7), int32] */, dtype="float64") /* ty=Tensor[(4, 6, 7), float64] */;
  %615 = shape_of(%var_830, dtype="int32") /* ty=Tensor[(3), int32] */;
  %616 = cast(%var_830, dtype="float64") /* ty=Tensor[(4, 6, 7), float64] */;
  %617 = dyn.reshape(%614, %615, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %618 = cast(meta[relay.Constant][56] /* ty=Tensor[(468, 2), float64] */, dtype="float32") /* ty=Tensor[(468, 2), float32] */;
  %619 = sin(%618) /* ty=Tensor[(468, 2), float32] */;
  %620 = cast(%619, dtype="float32") /* ty=Tensor[(468, 2), float32] */;
  %621 = exp(%620) /* ty=Tensor[(468, 2), float32] */;
  %622 = cast(%621, dtype="float64") /* ty=Tensor[(468, 2), float64] */;
  %623 = log10(%622) /* ty=Tensor[(468, 2), float64] */;
  %624 = cast(%623, dtype="float32") /* ty=Tensor[(468, 2), float32] */;
  %625 = shape_of(%621, dtype="int32") /* ty=Tensor[(2), int32] */;
  %626 = cast(%621, dtype="float32") /* ty=Tensor[(468, 2), float32] */;
  %627 = dyn.reshape(%624, %625, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %628 = greater_equal(%605, %606) /* ty=Tensor[(4, 6, 7), bool] */;
  %629 = %613.6;
  %630 = divide(%616, %617) /* ty=Tensor[(4, 6, 7), float64] */;
  %631 = power(%626, %627) /* ty=Tensor[(468, 2), float32] */;
  (%628, %629, meta[relay.Constant][57] /* ty=Tensor[(126), float64] */, meta[relay.Constant][58] /* ty=Tensor[(80), float64] */, %630, %631)
}

def @func_6104() -> (Tensor[(6, 4, 14), bool],) {
  %632 = @func_5906() /* ty=(Tensor[(6, 4, 14), bool],) */;
  %633 = %632.0;
  (%633,)
}

def @func_6182(%var_6177: Tensor[(3, 3, 4), float32]) -> (Tensor[(3, 3, 4), float32],) {
  %634 = cast(%var_6177, dtype="float32") /* ty=Tensor[(3, 3, 4), float32] */;
  %635 = sqrt(%634) /* ty=Tensor[(3, 3, 4), float32] */;
  (%635,)
}

def @func_6285(%var_6252: Tensor[(840), bool]) -> (Tensor[(6, 4, 14), bool], Tensor[(5, 14, 15), float32], Tensor[(832), int8], Tensor[(15, 4, 14), float64], Tensor[(840), bool], Tensor[(16, 4, 13), int8], Tensor[(130), float64], Tensor[(70, 15), float32]) {
  %636 = @func_5906() /* ty=(Tensor[(6, 4, 14), bool],) */;
  %637 = cast(meta[relay.Constant][59] /* ty=Tensor[(70, 15), float64] */, dtype="float64") /* ty=Tensor[(70, 15), float64] */;
  %638 = cast(meta[relay.Constant][60] /* ty=Tensor[(832), int8] */, dtype="int8") /* ty=Tensor[(832), int8] */;
  %639 = reshape(%637, newshape=[5, 14, 15]) /* ty=Tensor[(5, 14, 15), float64] */;
  %640 = reshape(%638, newshape=[832, 1]) /* ty=Tensor[(832, 1), int8] */;
  %641 = @func_3685(%639, %640) /* ty=(Tensor[(5, 14, 15), float32], Tensor[(10, 13), float64], Tensor[(832, 1), int8], Tensor[(13, 10), float64], Tensor[(5, 14, 15), int8]) */;
  %642 = cast(%var_6252, dtype="bool") /* ty=Tensor[(840), bool] */;
  %643 = reshape(%642, newshape=[15, 4, 14]) /* ty=Tensor[(15, 4, 14), bool] */;
  %644 = @func_5809(%643) /* ty=(Tensor[(15, 4, 14), float64],) */;
  %645 = cast(meta[relay.Constant][60] /* ty=Tensor[(832), int8] */, dtype="int8") /* ty=Tensor[(832), int8] */;
  %646 = cast(meta[relay.Constant][61] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %647 = reshape(%645, newshape=[16, 4, 13]) /* ty=Tensor[(16, 4, 13), int8] */;
  %648 = reshape(%646, newshape=[130]) /* ty=Tensor[(130), float64] */;
  %649 = @func_1471(%647, %648) /* ty=(Tensor[(16, 4, 13), int8], Tensor[(10, 13), float64], Tensor[(130), float64]) */;
  %650 = cast(meta[relay.Constant][59] /* ty=Tensor[(70, 15), float64] */, dtype="float64") /* ty=Tensor[(70, 15), float64] */;
  %651 = acos(%650) /* ty=Tensor[(70, 15), float64] */;
  %652 = cast(%651, dtype="float32") /* ty=Tensor[(70, 15), float32] */;
  %653 = %636.0;
  %654 = %641.0;
  %655 = %644.0;
  %656 = %649.0;
  %657 = sqrt(%652) /* ty=Tensor[(70, 15), float32] */;
  (%653, %654, meta[relay.Constant][60] /* ty=Tensor[(832), int8] */, %655, %var_6252, %656, meta[relay.Constant][61] /* ty=Tensor[(130), float64] */, %657)
}

def @func_4258(%var_4254: Tensor[(616), float32]) -> (Tensor[(7, 3, 2), bool], Tensor[(7, 3, 2), float64], Tensor[(7, 8, 11), float32], Tensor[(616), float32]) {
  %658 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %659 = cast(meta[relay.Constant][62] /* ty=Tensor[(7, 3, 2), bool] */, dtype="bool") /* ty=Tensor[(7, 3, 2), bool] */;
  %660 = cast(meta[relay.Constant][62] /* ty=Tensor[(7, 3, 2), bool] */, dtype="float64") /* ty=Tensor[(7, 3, 2), float64] */;
  %661 = cast(%var_4254, dtype="float32") /* ty=Tensor[(616), float32] */;
  %662 = reshape(%661, newshape=[7, 8, 11]) /* ty=Tensor[(7, 8, 11), float32] */;
  %663 = @func_3481(%662) /* ty=(Tensor[(7, 8, 11), float32],) */;
  %664 = logical_or(%658, %659) /* ty=Tensor[(7, 3, 2), bool] */;
  %665 = cos(%660) /* ty=Tensor[(7, 3, 2), float64] */;
  %666 = %663.0;
  (%664, %665, %666, %var_4254)
}

def @func_3685(%var_3665: Tensor[(5, 14, 15), float64], %var_3676: Tensor[(832, 1), int8]) -> (Tensor[(5, 14, 15), float32], Tensor[(10, 13), float64], Tensor[(832, 1), int8], Tensor[(13, 10), float64], Tensor[(5, 14, 15), int8]) {
  %667 = cast(%var_3665, dtype="float32") /* ty=Tensor[(5, 14, 15), float32] */;
  %668 = cast(%var_3676, dtype="int8") /* ty=Tensor[(832, 1), int8] */;
  %669 = cast(meta[relay.Constant][63] /* ty=Tensor[(13, 10), float64] */, dtype="float64") /* ty=Tensor[(13, 10), float64] */;
  %670 = reshape(%668, newshape=[16, 4, 13]) /* ty=Tensor[(16, 4, 13), int8] */;
  %671 = reshape(%669, newshape=[130]) /* ty=Tensor[(130), float64] */;
  %672 = @func_1471(%670, %671) /* ty=(Tensor[(16, 4, 13), int8], Tensor[(10, 13), float64], Tensor[(130), float64]) */;
  %673 = cast(%var_3665, dtype="float64") /* ty=Tensor[(5, 14, 15), float64] */;
  %674 = shape_of(meta[relay.Constant][64] /* ty=Tensor[(5, 14, 15), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %675 = cast(meta[relay.Constant][64] /* ty=Tensor[(5, 14, 15), float64] */, dtype="float64") /* ty=Tensor[(5, 14, 15), float64] */;
  %676 = dyn.reshape(%673, %674, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %677 = divide(%675, %676) /* ty=Tensor[(5, 14, 15), float64] */;
  %678 = cast(%677, dtype="bool") /* ty=Tensor[(5, 14, 15), bool] */;
  %679 = shape_of(meta[relay.Constant][64] /* ty=Tensor[(5, 14, 15), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %680 = cast(meta[relay.Constant][64] /* ty=Tensor[(5, 14, 15), float64] */, dtype="bool") /* ty=Tensor[(5, 14, 15), bool] */;
  %681 = dyn.reshape(%678, %679, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %682 = greater_equal(%680, %681) /* ty=Tensor[(5, 14, 15), bool] */;
  %683 = cast(%var_3665, dtype="int8") /* ty=Tensor[(5, 14, 15), int8] */;
  %684 = shape_of(%682, dtype="int32") /* ty=Tensor[(3), int32] */;
  %685 = cast(%682, dtype="int8") /* ty=Tensor[(5, 14, 15), int8] */;
  %686 = dyn.reshape(%683, %684, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %687 = log2(%667) /* ty=Tensor[(5, 14, 15), float32] */;
  %688 = %672.1;
  %689 = minimum(%685, %686) /* ty=Tensor[(5, 14, 15), int8] */;
  (%687, %688, %var_3676, meta[relay.Constant][63] /* ty=Tensor[(13, 10), float64] */, %689)
}

def @main(%var_7410: Tensor[(80), float64]) -> (Tensor[(3, 4, 15), uint8], Tensor[(15, 3), uint8], Tensor[(180), uint8], Tensor[(20, 4), float64], Tensor[(80), float64], Tensor[(6, 4, 14), float32], Tensor[(6, 4, 14), float64]) {
  %690 = cast(meta[relay.Constant][65] /* ty=Tensor[(15, 3), uint8] */, dtype="uint8") /* ty=Tensor[(15, 3), uint8] */;
  %691 = cast(meta[relay.Constant][66] /* ty=Tensor[(180), uint8] */, dtype="uint8") /* ty=Tensor[(180), uint8] */;
  %692 = reshape(%690, newshape=[3, 1, 15]) /* ty=Tensor[(3, 1, 15), uint8] */;
  %693 = reshape(%691, newshape=[3, 4, 15]) /* ty=Tensor[(3, 4, 15), uint8] */;
  %694 = @func_1966(%692, %693) /* ty=(Tensor[(3, 4, 15), uint8],) */;
  %695 = cast(%var_7410, dtype="float64") /* ty=Tensor[(80), float64] */;
  %696 = reshape(%695, newshape=[20, 4]) /* ty=Tensor[(20, 4), float64] */;
  %697 = @func_5621(%696) /* ty=(Tensor[(1, 4, 14), bool], Tensor[(80), float64], Tensor[(20, 4), float64]) */;
  %698 = @func_6385() /* ty=(Tensor[(6, 4, 14), bool], Tensor[(6, 4, 14), bool]) */;
  %699 = %698.1;
  %700 = cast(%699, dtype="float32") /* ty=Tensor[(6, 4, 14), float32] */;
  %701 = rsqrt(%700) /* ty=Tensor[(6, 4, 14), float32] */;
  %702 = cast(%701, dtype="float64") /* ty=Tensor[(6, 4, 14), float64] */;
  %703 = sin(%702) /* ty=Tensor[(6, 4, 14), float64] */;
  %704 = cast(%703, dtype="float32") /* ty=Tensor[(6, 4, 14), float32] */;
  %705 = cast(%703, dtype="float64") /* ty=Tensor[(6, 4, 14), float64] */;
  %706 = %694.0;
  %707 = %697.2;
  %708 = acosh(%704) /* ty=Tensor[(6, 4, 14), float32] */;
  %709 = erf(%705) /* ty=Tensor[(6, 4, 14), float64] */;
  (%706, meta[relay.Constant][65] /* ty=Tensor[(15, 3), uint8] */, meta[relay.Constant][66] /* ty=Tensor[(180), uint8] */, %707, %var_7410, %708, %709)
}

def @func_6907(%var_6887: Tensor[(6, 4, 14), bool], %var_6896: Tensor[(126), float64]) -> (Tensor[(6, 4, 14), bool], Tensor[(9, 14), float64], Tensor[(126), float64]) {
  %710 = @func_6398() /* ty=Tensor[(6, 4, 14), bool] */;
  %711 = cast(%var_6887, dtype="bool") /* ty=Tensor[(6, 4, 14), bool] */;
  %712 = shape_of(%710, dtype="int32") /* ty=Tensor[(3), int32] */;
  %713 = cast(%710, dtype="bool") /* ty=Tensor[(6, 4, 14), bool] */;
  %714 = dyn.reshape(%711, %712, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %715 = cast(%var_6896, dtype="float64") /* ty=Tensor[(126), float64] */;
  %716 = reshape(%715, newshape=[9, 14]) /* ty=Tensor[(9, 14), float64] */;
  %717 = @func_44(%716) /* ty=(Tensor[(9, 14), float64],) */;
  %718 = less(%713, %714) /* ty=Tensor[(6, 4, 14), bool] */;
  %719 = %717.0;
  (%718, %719, %var_6896)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_597(%var_595: uint16) -> Tensor[(16, 13, ?), int64] {
  @func_594(%var_595) /* ty=Tensor[(16, 13, ?), int64] */
}

def @func_6624() -> (Tensor[(6, 4, 14), bool],) {
  %0 = @func_6104() /* ty=(Tensor[(6, 4, 14), bool],) */;
  %1 = %0.0;
  (%1,)
}

def @func_3481(%var_3462: Tensor[(7, 8, 11), float32]) -> (Tensor[(7, 8, 11), float32],) {
  %2 = cast(%var_3462, dtype="float32") /* ty=Tensor[(7, 8, 11), float32] */;
  %3 = log(%2) /* ty=Tensor[(7, 8, 11), float32] */;
  (%3,)
}

def @func_7233(%var_7231: Tensor[(8, 14, 9), float64]) -> (Tensor[(8, 14, 9), float64], Tensor[(80), float64], Tensor[(2, 40), float64]) {
  @func_7230(%var_7231) /* ty=(Tensor[(8, 14, 9), float64], Tensor[(80), float64], Tensor[(2, 40), float64]) */
}

def @func_323(%var_317: Tensor[(11, 2, 9), float64]) -> (Tensor[(11, 2, 9), float64],) {
  %4 = cast(%var_317, dtype="float64") /* ty=Tensor[(11, 2, 9), float64] */;
  %5 = atan(%4) /* ty=Tensor[(11, 2, 9), float64] */;
  (%5,)
}

def @func_3484(%var_3482: Tensor[(7, 8, 11), float32]) -> (Tensor[(7, 8, 11), float32],) {
  @func_3481(%var_3482) /* ty=(Tensor[(7, 8, 11), float32],) */
}

def @func_4845(%var_4832: Tensor[(8, 14, 10), float32], %var_4833: Tensor[(8, 14, 10), float32]) -> (Tensor[(8, 14, 10), float32],) {
  %6 = cast(%var_4833, dtype="float32") /* ty=Tensor[(8, 14, 10), float32] */;
  %7 = shape_of(%var_4832, dtype="int32") /* ty=Tensor[(3), int32] */;
  %8 = cast(%var_4832, dtype="float32") /* ty=Tensor[(8, 14, 10), float32] */;
  %9 = dyn.reshape(%6, %7, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %10 = mod(%8, %9) /* ty=Tensor[(8, 14, 10), float32] */;
  (%10,)
}

def @func_2836(%var_2834: uint64, %var_2835: Tensor[(7, 7, 3), uint64]) -> (Tensor[(7, 7, 3), bool],) {
  %14 = fn (%var_2824: uint64, %var_2825: Tensor[(7, 7, 3), uint64]) -> (Tensor[(7, 7, 3), bool],) {
    %11 = cast(%var_2824, dtype="bool") /* ty=bool */;
    %12 = cast(%var_2825, dtype="bool") /* ty=Tensor[(7, 7, 3), bool] */;
    %13 = less(%11, %12) /* ty=Tensor[(7, 7, 3), bool] */;
    (%13,)
  };
  %14(%var_2834, %var_2835) /* ty=(Tensor[(7, 7, 3), bool],) */
}

def @func_2596(%var_2594: Tensor[(6, 11, 10), int16], %var_2595: Tensor[(2, 180), float32]) -> (Tensor[(6, 11, 10), int16], Tensor[(6, 12, 5), float32], Tensor[(2, 180), float32]) {
  %23 = fn (%var_2581: Tensor[(6, 11, 10), int16], %var_2586: Tensor[(2, 180), float32]) -> (Tensor[(6, 11, 10), int16], Tensor[(6, 12, 5), float32], Tensor[(2, 180), float32]) {
    %15 = cast(%var_2581, dtype="int16") /* ty=Tensor[(6, 11, 10), int16] */;
    %16 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(6, 11, 10), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %17 = cast(meta[relay.Constant][0] /* ty=Tensor[(6, 11, 10), int16] */, dtype="int16") /* ty=Tensor[(6, 11, 10), int16] */;
    %18 = dyn.reshape(%15, %16, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %19 = cast(%var_2586, dtype="float32") /* ty=Tensor[(2, 180), float32] */;
    %20 = reshape(%19, newshape=[6, 12, 5]) /* ty=Tensor[(6, 12, 5), float32] */;
    %21 = bitwise_xor(%17, %18) /* ty=Tensor[(6, 11, 10), int16] */;
    %22 = @func_2386(%20) /* ty=Tensor[(6, 12, 5), float32] */;
    (%21, %22, %var_2586)
  };
  %23(%var_2594, %var_2595) /* ty=(Tensor[(6, 11, 10), int16], Tensor[(6, 12, 5), float32], Tensor[(2, 180), float32]) */
}

def @func_912(%var_910: Tensor[(1, 10, 5), float64], %var_911: Tensor[(126), float64]) -> (Tensor[(1, 10, 5), float64], Tensor[(9, 14), float64], Tensor[(126), float64], Tensor[(16, 13, ?), int64], uint16, Tensor[(2, 8, 5), float64], Tensor[(80), float64]) {
  @func_908(%var_910, %var_911) /* ty=(Tensor[(1, 10, 5), float64], Tensor[(9, 14), float64], Tensor[(126), float64], Tensor[(16, 13, ?), int64], uint16, Tensor[(2, 8, 5), float64], Tensor[(80), float64]) */
}

def @func_2806(%var_2804: Tensor[(4, 6, 14), bool]) -> (Tensor[(4, 6, 14), int16], Tensor[(1, 10, 5), float64], Tensor[(50), float64], Tensor[(126), float64], Tensor[(4, 6, 14), float64]) {
  @func_2803(%var_2804) /* ty=(Tensor[(4, 6, 14), int16], Tensor[(1, 10, 5), float64], Tensor[(50), float64], Tensor[(126), float64], Tensor[(4, 6, 14), float64]) */
}

def @func_6105() -> (Tensor[(6, 4, 14), bool],) {
  %26 = fn () -> (Tensor[(6, 4, 14), bool],) {
    %24 = @func_5906() /* ty=(Tensor[(6, 4, 14), bool],) */;
    %25 = %24.0;
    (%25,)
  };
  %26() /* ty=(Tensor[(6, 4, 14), bool],) */
}

def @func_3369(%var_3367: Tensor[(8, 1, 16), float32], %var_3368: Tensor[(8, 12, 16), float32]) -> (Tensor[(8, 12, 16), bool],) {
  %30 = fn (%var_3360: Tensor[(8, 1, 16), float32], %var_3361: Tensor[(8, 12, 16), float32]) -> (Tensor[(8, 12, 16), bool],) {
    %27 = cast(%var_3360, dtype="bool") /* ty=Tensor[(8, 1, 16), bool] */;
    %28 = cast(%var_3361, dtype="bool") /* ty=Tensor[(8, 12, 16), bool] */;
    %29 = not_equal(%27, %28) /* ty=Tensor[(8, 12, 16), bool] */;
    (%29,)
  };
  %30(%var_3367, %var_3368) /* ty=(Tensor[(8, 12, 16), bool],) */
}

def @func_594(%var_577: uint16) -> Tensor[(16, 13, ?), int64] {
  %31 = cast(%var_577, dtype="uint16") /* ty=uint16 */;
  %32 = cast(meta[relay.Constant][1] /* ty=Tensor[(16, 13, 1), uint16] */, dtype="uint16") /* ty=Tensor[(16, 13, 1), uint16] */;
  %33 = multiply(%31, %32) /* ty=Tensor[(16, 13, 1), uint16] */;
  %34 = cast(meta[relay.Constant][1] /* ty=Tensor[(16, 13, 1), uint16] */, dtype="int64") /* ty=Tensor[(16, 13, 1), int64] */;
  %35 = shape_of(%33, dtype="int32") /* ty=Tensor[(3), int32] */;
  %36 = cast(%33, dtype="int64") /* ty=Tensor[(16, 13, 1), int64] */;
  %37 = dyn.reshape(%34, %35, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  bitwise_and(%36, %37) /* ty=Tensor[(16, 13, ?), int64] */
}

def @func_6530(%var_6522: Tensor[(126), float64]) -> (Tensor[(6, 4, 14), bool], Tensor[(2, 8, 5), float64], Tensor[(936), float64], Tensor[(126), float64], Tensor[(80), float64]) {
  %38 = cast(meta[relay.Constant][2] /* ty=Tensor[(936), float64] */, dtype="float64") /* ty=Tensor[(936), float64] */;
  %39 = cast(%var_6522, dtype="float64") /* ty=Tensor[(126), float64] */;
  %40 = cast(meta[relay.Constant][3] /* ty=Tensor[(80), float64] */, dtype="float64") /* ty=Tensor[(80), float64] */;
  %41 = reshape(%38, newshape=[9, 13, 8]) /* ty=Tensor[(9, 13, 8), float64] */;
  %42 = reshape(%39, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %43 = reshape(%40, newshape=[1, 80]) /* ty=Tensor[(1, 80), float64] */;
  %44 = @func_734(%41, %42, %43) /* ty=(Tensor[(9, 13, 8), float64], Tensor[(9, 14), float64], Tensor[(126), float64], Tensor[(2, 8, 5), float64], Tensor[(9, 13, 8), int16], Tensor[(2, 8, 5), float64], Tensor[(1, 80), float64]) */;
  %45 = @func_6398() /* ty=Tensor[(6, 4, 14), bool] */;
  %46 = %44.3;
  (%45, %46, meta[relay.Constant][2] /* ty=Tensor[(936), float64] */, %var_6522, meta[relay.Constant][3] /* ty=Tensor[(80), float64] */)
}

def @func_5579(%var_5558: Tensor[(10, 4, 14), bool], %var_5564: Tensor[(832), int8], %var_5565: Tensor[(26, 5), float64], %var_5576: Tensor[(616), float32]) -> (Tensor[(10, 4, 14), bool], Tensor[(10, 13), float64], Tensor[(832), int8], Tensor[(26, 5), float64], Tensor[(1, 4, 14), float64], Tensor[(7, 3, 2), float64], Tensor[(616), float32]) {
  %47 = @func_5540() /* ty=Tensor[(1, 4, 14), bool] */;
  %48 = cast(%47, dtype="bool") /* ty=Tensor[(1, 4, 14), bool] */;
  %49 = cast(%var_5558, dtype="bool") /* ty=Tensor[(10, 4, 14), bool] */;
  %50 = cast(%var_5564, dtype="int8") /* ty=Tensor[(832), int8] */;
  %51 = cast(%var_5565, dtype="float64") /* ty=Tensor[(26, 5), float64] */;
  %52 = reshape(%50, newshape=[16, 4, 13]) /* ty=Tensor[(16, 4, 13), int8] */;
  %53 = reshape(%51, newshape=[130]) /* ty=Tensor[(130), float64] */;
  %54 = @func_1471(%52, %53) /* ty=(Tensor[(16, 4, 13), int8], Tensor[(10, 13), float64], Tensor[(130), float64]) */;
  %55 = cast(%47, dtype="float64") /* ty=Tensor[(1, 4, 14), float64] */;
  %56 = cast(%var_5576, dtype="float32") /* ty=Tensor[(616), float32] */;
  %57 = reshape(%56, newshape=[616]) /* ty=Tensor[(616), float32] */;
  %58 = @func_4258(%57) /* ty=(Tensor[(7, 3, 2), bool], Tensor[(7, 3, 2), float64], Tensor[(7, 8, 11), float32], Tensor[(616), float32]) */;
  %59 = less_equal(%48, %49) /* ty=Tensor[(10, 4, 14), bool] */;
  %60 = %54.1;
  %61 = erf(%55) /* ty=Tensor[(1, 4, 14), float64] */;
  %62 = %58.1;
  (%59, %60, %var_5564, %var_5565, %61, %62, %var_5576)
}

def @func_7104() -> Tensor[(6, 4, 14), float64] {
  %68 = fn () -> Tensor[(6, 4, 14), float64] {
    %63 = @func_6945() /* ty=Tensor[(6, 4, 14), bool] */;
    %64 = cast(meta[relay.Constant][4] /* ty=Tensor[(6, 4, 14), bool] */, dtype="float64") /* ty=Tensor[(6, 4, 14), float64] */;
    %65 = shape_of(%63, dtype="int32") /* ty=Tensor[(3), int32] */;
    %66 = cast(%63, dtype="float64") /* ty=Tensor[(6, 4, 14), float64] */;
    %67 = dyn.reshape(%64, %65, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    mod(%66, %67) /* ty=Tensor[(6, 4, 14), float64] */
  };
  %68() /* ty=Tensor[(6, 4, 14), float64] */
}

def @func_6050() -> (Tensor[(6, 4, 14), bool],) {
  @func_6048() /* ty=(Tensor[(6, 4, 14), bool],) */
}

def @func_6697() -> (Tensor[(6, 4, 14), bool],) {
  @func_6695() /* ty=(Tensor[(6, 4, 14), bool],) */
}

def @func_365(%var_364: Tensor[(2, 8, 5), float64]) -> (Tensor[(2, 8, 5), float64],) {
  %71 = fn (%var_360: Tensor[(2, 8, 5), float64]) -> (Tensor[(2, 8, 5), float64],) {
    %69 = cast(%var_360, dtype="float64") /* ty=Tensor[(2, 8, 5), float64] */;
    %70 = sinh(%69) /* ty=Tensor[(2, 8, 5), float64] */;
    (%70,)
  };
  %71(%var_364) /* ty=(Tensor[(2, 8, 5), float64],) */
}

def @func_7034(%var_6978: Tensor[(1050), bool], %var_6985: Tensor[(840), bool], %var_7011: Tensor[(6, 4, 14), float32]) -> (Tensor[(10, 7, 15), float64], Tensor[(1050), bool], Tensor[(70, 15), float32], Tensor[(840), bool], Tensor[(6, 4, 14), uint32]) {
  %72 = cast(%var_6978, dtype="bool") /* ty=Tensor[(1050), bool] */;
  %73 = cast(%var_6978, dtype="bool") /* ty=Tensor[(1050), bool] */;
  %74 = cast(%var_6978, dtype="bool") /* ty=Tensor[(1050), bool] */;
  %75 = reshape(%72, newshape=[10, 7, 15]) /* ty=Tensor[(10, 7, 15), bool] */;
  %76 = reshape(%73, newshape=[10, 7, 15]) /* ty=Tensor[(10, 7, 15), bool] */;
  %77 = reshape(%74, newshape=[10, 7, 15]) /* ty=Tensor[(10, 7, 15), bool] */;
  %78 = @func_5112(%75, %76, %77) /* ty=(Tensor[(10, 7, 15), float64], Tensor[(10, 7, 15), int16], Tensor[(10, 7, 15), float32]) */;
  %79 = cast(%var_6985, dtype="bool") /* ty=Tensor[(840), bool] */;
  %80 = reshape(%79, newshape=[840]) /* ty=Tensor[(840), bool] */;
  %81 = @func_6285(%80) /* ty=(Tensor[(6, 4, 14), bool], Tensor[(5, 14, 15), float32], Tensor[(832), int8], Tensor[(15, 4, 14), float64], Tensor[(840), bool], Tensor[(16, 4, 13), int8], Tensor[(130), float64], Tensor[(70, 15), float32]) */;
  %82 = @func_6048() /* ty=(Tensor[(6, 4, 14), bool],) */;
  %83 = %82.0;
  %84 = cast(%83, dtype="float32") /* ty=Tensor[(6, 4, 14), float32] */;
  %85 = cosh(%84) /* ty=Tensor[(6, 4, 14), float32] */;
  %86 = cast(%85, dtype="float32") /* ty=Tensor[(6, 4, 14), float32] */;
  %87 = log2(%86) /* ty=Tensor[(6, 4, 14), float32] */;
  %88 = cast(%var_7011, dtype="uint32") /* ty=Tensor[(6, 4, 14), uint32] */;
  %89 = shape_of(%87, dtype="int32") /* ty=Tensor[(3), int32] */;
  %90 = cast(%87, dtype="uint32") /* ty=Tensor[(6, 4, 14), uint32] */;
  %91 = dyn.reshape(%88, %89, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %92 = %78.0;
  %93 = %81.7;
  %94 = logical_xor(%90, %91) /* ty=Tensor[(6, 4, 14), uint32] */;
  (%92, %var_6978, %93, %var_6985, %94)
}

def @func_6288(%var_6286: Tensor[(840), bool]) -> (Tensor[(6, 4, 14), bool], Tensor[(5, 14, 15), float32], Tensor[(832), int8], Tensor[(15, 4, 14), float64], Tensor[(840), bool], Tensor[(16, 4, 13), int8], Tensor[(130), float64], Tensor[(70, 15), float32]) {
  @func_6285(%var_6286) /* ty=(Tensor[(6, 4, 14), bool], Tensor[(5, 14, 15), float32], Tensor[(832), int8], Tensor[(15, 4, 14), float64], Tensor[(840), bool], Tensor[(16, 4, 13), int8], Tensor[(130), float64], Tensor[(70, 15), float32]) */
}

def @func_739(%var_736: Tensor[(9, 13, 8), float64], %var_737: Tensor[(126), float64], %var_738: Tensor[(1, 80), float64]) -> (Tensor[(9, 13, 8), float64], Tensor[(9, 14), float64], Tensor[(126), float64], Tensor[(2, 8, 5), float64], Tensor[(9, 13, 8), int16], Tensor[(2, 8, 5), float64], Tensor[(1, 80), float64]) {
  @func_734(%var_736, %var_737, %var_738) /* ty=(Tensor[(9, 13, 8), float64], Tensor[(9, 14), float64], Tensor[(126), float64], Tensor[(2, 8, 5), float64], Tensor[(9, 13, 8), int16], Tensor[(2, 8, 5), float64], Tensor[(1, 80), float64]) */
}

def @func_3313(%var_3311: Tensor[(8, 7, 12), float32]) -> (Tensor[(8, 7, 12), float32], Tensor[(9, 14), float64], Tensor[(126), float64]) {
  @func_3310(%var_3311) /* ty=(Tensor[(8, 7, 12), float32], Tensor[(9, 14), float64], Tensor[(126), float64]) */
}

def @func_1444(%var_1443: Tensor[(10, 13), float64]) -> (Tensor[(10, 13), float64],) {
  %97 = fn (%var_1438: Tensor[(10, 13), float64]) -> (Tensor[(10, 13), float64],) {
    %95 = cast(%var_1438, dtype="float64") /* ty=Tensor[(10, 13), float64] */;
    %96 = acos(%95) /* ty=Tensor[(10, 13), float64] */;
    (%96,)
  };
  %97(%var_1443) /* ty=(Tensor[(10, 13), float64],) */
}

def @func_6160() -> (Tensor[(6, 4, 14), bool], Tensor[(6, 4, 14), bool]) {
  %102 = fn () -> (Tensor[(6, 4, 14), bool], Tensor[(6, 4, 14), bool]) {
    %98 = @func_6048() /* ty=(Tensor[(6, 4, 14), bool],) */;
    %99 = @func_6048() /* ty=(Tensor[(6, 4, 14), bool],) */;
    %100 = %98.0;
    %101 = %99.0;
    (%100, %101)
  };
  %102() /* ty=(Tensor[(6, 4, 14), bool], Tensor[(6, 4, 14), bool]) */
}

def @func_4921(%var_4869: Tensor[(10, 12, 2), float32], %var_4903: Tensor[(936), float64], %var_4904: uint64, %var_4909: Tensor[(10, 12, 2), int64]) -> (Tensor[(2145), float64], Tensor[(360), float32], Tensor[(65), int16], Tensor[(936), float64], uint64, Tensor[(10, 12, 2), int8], Tensor[(936), float64]) {
  %103 = cast(%var_4869, dtype="float32") /* ty=Tensor[(10, 12, 2), float32] */;
  %104 = exp(%103) /* ty=Tensor[(10, 12, 2), float32] */;
  %105 = cast(%var_4869, dtype="int64") /* ty=Tensor[(10, 12, 2), int64] */;
  %106 = shape_of(%104, dtype="int32") /* ty=Tensor[(3), int32] */;
  %107 = cast(%104, dtype="int64") /* ty=Tensor[(10, 12, 2), int64] */;
  %108 = dyn.reshape(%105, %106, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %109 = minimum(%107, %108) /* ty=Tensor[(10, 12, 2), int64] */;
  %110 = cast(%var_4909, dtype="int8") /* ty=Tensor[(10, 12, 2), int8] */;
  %111 = shape_of(%109, dtype="int32") /* ty=Tensor[(3), int32] */;
  %112 = cast(%109, dtype="int8") /* ty=Tensor[(10, 12, 2), int8] */;
  %113 = dyn.reshape(%110, %111, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %114 = cast(meta[relay.Constant][5] /* ty=Tensor[(2145), float64] */, dtype="float64") /* ty=Tensor[(2145), float64] */;
  %115 = cast(meta[relay.Constant][6] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %116 = cast(meta[relay.Constant][7] /* ty=Tensor[(65), int16] */, dtype="int16") /* ty=Tensor[(65), int16] */;
  %117 = cast(%var_4903, dtype="float64") /* ty=Tensor[(936), float64] */;
  %118 = cast(%var_4904, dtype="uint64") /* ty=uint64 */;
  %119 = reshape(%114, newshape=[13, 15, 11]) /* ty=Tensor[(13, 15, 11), float64] */;
  %120 = reshape(%115, newshape=[360]) /* ty=Tensor[(360), float32] */;
  %121 = reshape(%116, newshape=[65]) /* ty=Tensor[(65), int16] */;
  %122 = reshape(%117, newshape=[936]) /* ty=Tensor[(936), float64] */;
  %123 = reshape(%118, newshape=[]) /* ty=uint64 */;
  %124 = @func_3605(%119, %120, %121, %122, %123) /* ty=(Tensor[(13, 15, 11), bool], Tensor[(6, 12, 5), float32], Tensor[(360), float32], Tensor[(7, 14, 5), float32], Tensor[(80), float64], Tensor[(6, 12, 5), float32], Tensor[(9, 13, 8), int16], Tensor[(65), int16], Tensor[(4, 264), int64], Tensor[(936), float64], Tensor[(1, 126), float64], Tensor[(7, 7, 3), bool], uint64, Tensor[(1, 147), uint64], Tensor[(10, 13), float64], Tensor[(130), float64]) */;
  %125 = %124.9;
  %126 = cast(%125, dtype="float64") /* ty=Tensor[(936), float64] */;
  %127 = bitwise_and(%112, %113) /* ty=Tensor[(10, 12, 2), int8] */;
  %128 = acosh(%126) /* ty=Tensor[(936), float64] */;
  (meta[relay.Constant][5] /* ty=Tensor[(2145), float64] */, meta[relay.Constant][6] /* ty=Tensor[(360), float32] */, meta[relay.Constant][7] /* ty=Tensor[(65), int16] */, %var_4903, %var_4904, %127, %128)
}

def @func_5117(%var_5114: Tensor[(10, 7, 15), bool], %var_5115: Tensor[(10, 7, 15), bool], %var_5116: Tensor[(10, 7, 15), bool]) -> (Tensor[(10, 7, 15), float64], Tensor[(10, 7, 15), int16], Tensor[(10, 7, 15), float32]) {
  @func_5112(%var_5114, %var_5115, %var_5116) /* ty=(Tensor[(10, 7, 15), float64], Tensor[(10, 7, 15), int16], Tensor[(10, 7, 15), float32]) */
}

def @func_2709(%var_2703: Tensor[(3, 16, 10), uint32], %var_2704: Tensor[(3, 16, 10), uint32], %var_2705: Tensor[(45), uint8], %var_2706: Tensor[(180, 1), uint8], %var_2707: Tensor[(3, 16, 10), uint32], %var_2708: Tensor[(208, 4), int8]) -> (Tensor[(3, 16, 10), bool], Tensor[(3, 4, 15), uint8], Tensor[(45), uint8], Tensor[(180, 1), uint8], Tensor[(3, 16, 10), uint8], Tensor[(130), float64], Tensor[(208, 4), int8], Tensor[(130), float64]) {
  %151 = fn (%var_2656: Tensor[(3, 16, 10), uint32], %var_2657: Tensor[(3, 16, 10), uint32], %var_2673: Tensor[(45), uint8], %var_2674: Tensor[(180, 1), uint8], %var_2685: Tensor[(3, 16, 10), uint32], %var_2693: Tensor[(208, 4), int8]) -> (Tensor[(3, 16, 10), bool], Tensor[(3, 4, 15), uint8], Tensor[(45), uint8], Tensor[(180, 1), uint8], Tensor[(3, 16, 10), uint8], Tensor[(130), float64], Tensor[(208, 4), int8], Tensor[(130), float64]) {
    %129 = cast(%var_2657, dtype="bool") /* ty=Tensor[(3, 16, 10), bool] */;
    %130 = shape_of(%var_2656, dtype="int32") /* ty=Tensor[(3), int32] */;
    %131 = cast(%var_2656, dtype="bool") /* ty=Tensor[(3, 16, 10), bool] */;
    %132 = dyn.reshape(%129, %130, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %133 = cast(%var_2673, dtype="uint8") /* ty=Tensor[(45), uint8] */;
    %134 = cast(%var_2674, dtype="uint8") /* ty=Tensor[(180, 1), uint8] */;
    %135 = reshape(%133, newshape=[3, 1, 15]) /* ty=Tensor[(3, 1, 15), uint8] */;
    %136 = reshape(%134, newshape=[3, 4, 15]) /* ty=Tensor[(3, 4, 15), uint8] */;
    %137 = @func_1966(%135, %136) /* ty=(Tensor[(3, 4, 15), uint8],) */;
    %138 = cast(%var_2685, dtype="uint8") /* ty=Tensor[(3, 16, 10), uint8] */;
    %139 = shape_of(%var_2656, dtype="int32") /* ty=Tensor[(3), int32] */;
    %140 = cast(%var_2656, dtype="uint8") /* ty=Tensor[(3, 16, 10), uint8] */;
    %141 = dyn.reshape(%138, %139, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %142 = cast(%var_2693, dtype="int8") /* ty=Tensor[(208, 4), int8] */;
    %143 = cast(meta[relay.Constant][8] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
    %144 = reshape(%142, newshape=[16, 4, 13]) /* ty=Tensor[(16, 4, 13), int8] */;
    %145 = reshape(%143, newshape=[130]) /* ty=Tensor[(130), float64] */;
    %146 = @func_1471(%144, %145) /* ty=(Tensor[(16, 4, 13), int8], Tensor[(10, 13), float64], Tensor[(130), float64]) */;
    %147 = less(%131, %132) /* ty=Tensor[(3, 16, 10), bool] */;
    %148 = %137.0;
    %149 = bitwise_and(%140, %141) /* ty=Tensor[(3, 16, 10), uint8] */;
    %150 = %146.2;
    (%147, %148, %var_2673, %var_2674, %149, %150, %var_2693, meta[relay.Constant][8] /* ty=Tensor[(130), float64] */)
  };
  %151(%var_2703, %var_2704, %var_2705, %var_2706, %var_2707, %var_2708) /* ty=(Tensor[(3, 16, 10), bool], Tensor[(3, 4, 15), uint8], Tensor[(45), uint8], Tensor[(180, 1), uint8], Tensor[(3, 16, 10), uint8], Tensor[(130), float64], Tensor[(208, 4), int8], Tensor[(130), float64]) */
}

def @func_6184(%var_6183: Tensor[(3, 3, 4), float32]) -> (Tensor[(3, 3, 4), float32],) {
  %154 = fn (%var_6177: Tensor[(3, 3, 4), float32]) -> (Tensor[(3, 3, 4), float32],) {
    %152 = cast(%var_6177, dtype="float32") /* ty=Tensor[(3, 3, 4), float32] */;
    %153 = sqrt(%152) /* ty=Tensor[(3, 3, 4), float32] */;
    (%153,)
  };
  %154(%var_6183) /* ty=(Tensor[(3, 3, 4), float32],) */
}

def @func_1740(%var_1738: int64, %var_1739: Tensor[(1, 7, 12), int64]) -> (Tensor[(1, 7, 12), int64], Tensor[(1, 7, 12), float64]) {
  %163 = fn (%var_1721: int64, %var_1722: Tensor[(1, 7, 12), int64]) -> (Tensor[(1, 7, 12), int64], Tensor[(1, 7, 12), float64]) {
    %155 = cast(%var_1721, dtype="int64") /* ty=int64 */;
    %156 = cast(%var_1722, dtype="int64") /* ty=Tensor[(1, 7, 12), int64] */;
    %157 = cast(%var_1722, dtype="bool") /* ty=Tensor[(1, 7, 12), bool] */;
    %158 = cast(%var_1721, dtype="bool") /* ty=bool */;
    %159 = logical_or(%157, %158) /* ty=Tensor[(1, 7, 12), bool] */;
    %160 = cast(%159, dtype="float64") /* ty=Tensor[(1, 7, 12), float64] */;
    %161 = bitwise_or(%155, %156) /* ty=Tensor[(1, 7, 12), int64] */;
    %162 = log(%160) /* ty=Tensor[(1, 7, 12), float64] */;
    (%161, %162)
  };
  %163(%var_1738, %var_1739) /* ty=(Tensor[(1, 7, 12), int64], Tensor[(1, 7, 12), float64]) */
}

def @func_4260(%var_4259: Tensor[(616), float32]) -> (Tensor[(7, 3, 2), bool], Tensor[(7, 3, 2), float64], Tensor[(7, 8, 11), float32], Tensor[(616), float32]) {
  %173 = fn (%var_4254: Tensor[(616), float32]) -> (Tensor[(7, 3, 2), bool], Tensor[(7, 3, 2), float64], Tensor[(7, 8, 11), float32], Tensor[(616), float32]) {
    %164 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
    %165 = cast(meta[relay.Constant][9] /* ty=Tensor[(7, 3, 2), bool] */, dtype="bool") /* ty=Tensor[(7, 3, 2), bool] */;
    %166 = cast(meta[relay.Constant][9] /* ty=Tensor[(7, 3, 2), bool] */, dtype="float64") /* ty=Tensor[(7, 3, 2), float64] */;
    %167 = cast(%var_4254, dtype="float32") /* ty=Tensor[(616), float32] */;
    %168 = reshape(%167, newshape=[7, 8, 11]) /* ty=Tensor[(7, 8, 11), float32] */;
    %169 = @func_3481(%168) /* ty=(Tensor[(7, 8, 11), float32],) */;
    %170 = logical_or(%164, %165) /* ty=Tensor[(7, 3, 2), bool] */;
    %171 = cos(%166) /* ty=Tensor[(7, 3, 2), float64] */;
    %172 = %169.0;
    (%170, %171, %172, %var_4254)
  };
  %173(%var_4259) /* ty=(Tensor[(7, 3, 2), bool], Tensor[(7, 3, 2), float64], Tensor[(7, 8, 11), float32], Tensor[(616), float32]) */
}

def @func_3310(%var_3298: Tensor[(8, 7, 12), float32]) -> (Tensor[(8, 7, 12), float32], Tensor[(9, 14), float64], Tensor[(126), float64]) {
  %174 = cast(%var_3298, dtype="float32") /* ty=Tensor[(8, 7, 12), float32] */;
  %175 = cast(meta[relay.Constant][10] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
  %176 = reshape(%175, newshape=[9, 14]) /* ty=Tensor[(9, 14), float64] */;
  %177 = @func_44(%176) /* ty=(Tensor[(9, 14), float64],) */;
  %178 = atan(%174) /* ty=Tensor[(8, 7, 12), float32] */;
  %179 = %177.0;
  (%178, %179, meta[relay.Constant][10] /* ty=Tensor[(126), float64] */)
}

def @func_6750() -> (Tensor[(6, 4, 14), bool], Tensor[(10, 13), float64], Tensor[(1050), float64], Tensor[(832), int8]) {
  %180 = @func_6624() /* ty=(Tensor[(6, 4, 14), bool],) */;
  %181 = cast(meta[relay.Constant][11] /* ty=Tensor[(1050), float64] */, dtype="float64") /* ty=Tensor[(1050), float64] */;
  %182 = cast(meta[relay.Constant][12] /* ty=Tensor[(832), int8] */, dtype="int8") /* ty=Tensor[(832), int8] */;
  %183 = reshape(%181, newshape=[5, 14, 15]) /* ty=Tensor[(5, 14, 15), float64] */;
  %184 = reshape(%182, newshape=[832, 1]) /* ty=Tensor[(832, 1), int8] */;
  %185 = @func_3685(%183, %184) /* ty=(Tensor[(5, 14, 15), float32], Tensor[(10, 13), float64], Tensor[(832, 1), int8], Tensor[(13, 10), float64], Tensor[(5, 14, 15), int8]) */;
  %186 = %180.0;
  %187 = %185.1;
  (%186, %187, meta[relay.Constant][11] /* ty=Tensor[(1050), float64] */, meta[relay.Constant][12] /* ty=Tensor[(832), int8] */)
}

def @func_6752() -> (Tensor[(6, 4, 14), bool], Tensor[(10, 13), float64], Tensor[(1050), float64], Tensor[(832), int8]) {
  @func_6750() /* ty=(Tensor[(6, 4, 14), bool], Tensor[(10, 13), float64], Tensor[(1050), float64], Tensor[(832), int8]) */
}

def @func_5112(%var_5071: Tensor[(10, 7, 15), bool], %var_5080: Tensor[(10, 7, 15), bool], %var_5098: Tensor[(10, 7, 15), bool]) -> (Tensor[(10, 7, 15), float64], Tensor[(10, 7, 15), int16], Tensor[(10, 7, 15), float32]) {
  %188 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %189 = cast(%var_5071, dtype="bool") /* ty=Tensor[(10, 7, 15), bool] */;
  %190 = logical_and(%188, %189) /* ty=Tensor[(10, 7, 15), bool] */;
  %191 = cast(True /* ty=bool */, dtype="float64") /* ty=float64 */;
  %192 = cast(%190, dtype="float64") /* ty=Tensor[(10, 7, 15), float64] */;
  %193 = cast(%var_5080, dtype="int16") /* ty=Tensor[(10, 7, 15), int16] */;
  %194 = shape_of(%var_5071, dtype="int32") /* ty=Tensor[(3), int32] */;
  %195 = cast(%var_5071, dtype="int16") /* ty=Tensor[(10, 7, 15), int16] */;
  %196 = dyn.reshape(%193, %194, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %197 = cast(%var_5098, dtype="float32") /* ty=Tensor[(10, 7, 15), float32] */;
  %198 = shape_of(%var_5080, dtype="int32") /* ty=Tensor[(3), int32] */;
  %199 = cast(%var_5080, dtype="float32") /* ty=Tensor[(10, 7, 15), float32] */;
  %200 = dyn.reshape(%197, %198, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %201 = mod(%191, %192) /* ty=Tensor[(10, 7, 15), float64] */;
  %202 = right_shift(%195, %196) /* ty=Tensor[(10, 7, 15), int16] */;
  %203 = floor_divide(%199, %200) /* ty=Tensor[(10, 7, 15), float32] */;
  (%201, %202, %203)
}

def @func_6048() -> (Tensor[(6, 4, 14), bool],) {
  %204 = @func_5906() /* ty=(Tensor[(6, 4, 14), bool],) */;
  %205 = %204.0;
  (%205,)
}

def @func_6341(%var_6327: Tensor[(12, 78), float64], %var_6328: Tensor[(126), float64], %var_6337: Tensor[(3072), float64]) -> (Tensor[(1, 4, 14), bool], Tensor[(6, 4, 14), bool], Tensor[(1056), int64], Tensor[(65), int16], Tensor[(1056), int64], Tensor[(12, 78), float64], Tensor[(126), float64], Tensor[(16, 12, 16), float64], Tensor[(3072), float64]) {
  %206 = @func_6104() /* ty=(Tensor[(6, 4, 14), bool],) */;
  %207 = cast(meta[relay.Constant][13] /* ty=Tensor[(65), int16] */, dtype="int16") /* ty=Tensor[(65), int16] */;
  %208 = cast(meta[relay.Constant][14] /* ty=Tensor[(1056), int64] */, dtype="int64") /* ty=Tensor[(1056), int64] */;
  %209 = cast(%var_6327, dtype="float64") /* ty=Tensor[(12, 78), float64] */;
  %210 = cast(%var_6328, dtype="float64") /* ty=Tensor[(126), float64] */;
  %211 = reshape(%207, newshape=[13, 5, 1]) /* ty=Tensor[(13, 5, 1), int16] */;
  %212 = reshape(%208, newshape=[1056]) /* ty=Tensor[(1056), int64] */;
  %213 = reshape(%209, newshape=[936]) /* ty=Tensor[(936), float64] */;
  %214 = reshape(%210, newshape=[126, 1]) /* ty=Tensor[(126, 1), float64] */;
  %215 = @func_2281(%211, %212, %213, %214) /* ty=(Tensor[(13, 5, 16), int16], Tensor[(9, 13, 8), int16], Tensor[(176), int64], Tensor[(1056), int64], Tensor[(936), float64], Tensor[(126, 1), float64], Tensor[(45), uint8]) */;
  %216 = cast(%var_6337, dtype="float64") /* ty=Tensor[(3072), float64] */;
  %217 = reshape(%216, newshape=[16, 12, 16]) /* ty=Tensor[(16, 12, 16), float64] */;
  %218 = @func_1019(%217) /* ty=(Tensor[(16, 12, 16), float64],) */;
  %219 = @func_5540() /* ty=Tensor[(1, 4, 14), bool] */;
  %220 = %206.0;
  %221 = %215.3;
  %222 = %218.0;
  (%219, %220, %221, meta[relay.Constant][13] /* ty=Tensor[(65), int16] */, meta[relay.Constant][14] /* ty=Tensor[(1056), int64] */, %var_6327, %var_6328, %222, %var_6337)
}

def @func_6910(%var_6908: Tensor[(6, 4, 14), bool], %var_6909: Tensor[(126), float64]) -> (Tensor[(6, 4, 14), bool], Tensor[(9, 14), float64], Tensor[(126), float64]) {
  %233 = fn (%var_6887: Tensor[(6, 4, 14), bool], %var_6896: Tensor[(126), float64]) -> (Tensor[(6, 4, 14), bool], Tensor[(9, 14), float64], Tensor[(126), float64]) {
    %223 = @func_6398() /* ty=Tensor[(6, 4, 14), bool] */;
    %224 = cast(%var_6887, dtype="bool") /* ty=Tensor[(6, 4, 14), bool] */;
    %225 = shape_of(%223, dtype="int32") /* ty=Tensor[(3), int32] */;
    %226 = cast(%223, dtype="bool") /* ty=Tensor[(6, 4, 14), bool] */;
    %227 = dyn.reshape(%224, %225, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %228 = cast(%var_6896, dtype="float64") /* ty=Tensor[(126), float64] */;
    %229 = reshape(%228, newshape=[9, 14]) /* ty=Tensor[(9, 14), float64] */;
    %230 = @func_44(%229) /* ty=(Tensor[(9, 14), float64],) */;
    %231 = less(%226, %227) /* ty=Tensor[(6, 4, 14), bool] */;
    %232 = %230.0;
    (%231, %232, %var_6896)
  };
  %233(%var_6908, %var_6909) /* ty=(Tensor[(6, 4, 14), bool], Tensor[(9, 14), float64], Tensor[(126), float64]) */
}

def @func_4443(%var_4440: Tensor[(9, 12, 3), float64], %var_4441: Tensor[(936), float64], %var_4442: Tensor[(126), float64]) -> (Tensor[(9, 13, 8), float64], Tensor[(936), float64], Tensor[(126), float64], Tensor[(80), float64], Tensor[(9, 12, 3), float32]) {
  %246 = fn (%var_4429: Tensor[(9, 12, 3), float64], %var_4433: Tensor[(936), float64], %var_4434: Tensor[(126), float64]) -> (Tensor[(9, 13, 8), float64], Tensor[(936), float64], Tensor[(126), float64], Tensor[(80), float64], Tensor[(9, 12, 3), float32]) {
    %234 = cast(%var_4433, dtype="float64") /* ty=Tensor[(936), float64] */;
    %235 = cast(%var_4434, dtype="float64") /* ty=Tensor[(126), float64] */;
    %236 = cast(meta[relay.Constant][15] /* ty=Tensor[(80), float64] */, dtype="float64") /* ty=Tensor[(80), float64] */;
    %237 = reshape(%234, newshape=[9, 13, 8]) /* ty=Tensor[(9, 13, 8), float64] */;
    %238 = reshape(%235, newshape=[126]) /* ty=Tensor[(126), float64] */;
    %239 = reshape(%236, newshape=[1, 80]) /* ty=Tensor[(1, 80), float64] */;
    %240 = @func_734(%237, %238, %239) /* ty=(Tensor[(9, 13, 8), float64], Tensor[(9, 14), float64], Tensor[(126), float64], Tensor[(2, 8, 5), float64], Tensor[(9, 13, 8), int16], Tensor[(2, 8, 5), float64], Tensor[(1, 80), float64]) */;
    %241 = cast(%var_4429, dtype="float64") /* ty=Tensor[(9, 12, 3), float64] */;
    %242 = log2(%241) /* ty=Tensor[(9, 12, 3), float64] */;
    %243 = cast(%242, dtype="float32") /* ty=Tensor[(9, 12, 3), float32] */;
    %244 = %240.0;
    %245 = log(%243) /* ty=Tensor[(9, 12, 3), float32] */;
    (%244, %var_4433, %var_4434, meta[relay.Constant][15] /* ty=Tensor[(80), float64] */, %245)
  };
  %246(%var_4440, %var_4441, %var_4442) /* ty=(Tensor[(9, 13, 8), float64], Tensor[(936), float64], Tensor[(126), float64], Tensor[(80), float64], Tensor[(9, 12, 3), float32]) */
}

def @func_4849(%var_4847: Tensor[(8, 14, 10), float32], %var_4848: Tensor[(8, 14, 10), float32]) -> (Tensor[(8, 14, 10), float32],) {
  @func_4845(%var_4847, %var_4848) /* ty=(Tensor[(8, 14, 10), float32],) */
}

def @func_6684(%var_6682: Tensor[(80), float64]) -> (Tensor[(2, 8, 5), float64], Tensor[(80), float64], Tensor[(6, 4, 14), float32]) {
  @func_6681(%var_6682) /* ty=(Tensor[(2, 8, 5), float64], Tensor[(80), float64], Tensor[(6, 4, 14), float32]) */
}

def @func_6123() -> (Tensor[(6, 4, 14), bool],) {
  %249 = fn () -> (Tensor[(6, 4, 14), bool],) {
    %247 = @func_5906() /* ty=(Tensor[(6, 4, 14), bool],) */;
    %248 = %247.0;
    (%248,)
  };
  %249() /* ty=(Tensor[(6, 4, 14), bool],) */
}

def @func_1902(%var_1901: Tensor[(80), float64]) -> (Tensor[(2, 8, 5), float64], Tensor[(80), float64], Tensor[(7, 14, 5), float32]) {
  %259 = fn (%var_1892: Tensor[(80), float64]) -> (Tensor[(2, 8, 5), float64], Tensor[(80), float64], Tensor[(7, 14, 5), float32]) {
    %250 = cast(%var_1892, dtype="float64") /* ty=Tensor[(80), float64] */;
    %251 = reshape(%250, newshape=[2, 8, 5]) /* ty=Tensor[(2, 8, 5), float64] */;
    %252 = @func_363(%251) /* ty=(Tensor[(2, 8, 5), float64],) */;
    %253 = cast(meta[relay.Constant][16] /* ty=Tensor[(7, 1, 1), uint64] */, dtype="uint64") /* ty=Tensor[(7, 1, 1), uint64] */;
    %254 = cast(meta[relay.Constant][17] /* ty=Tensor[(7, 14, 5), uint64] */, dtype="uint64") /* ty=Tensor[(7, 14, 5), uint64] */;
    %255 = bitwise_or(%253, %254) /* ty=Tensor[(7, 14, 5), uint64] */;
    %256 = cast(%255, dtype="float32") /* ty=Tensor[(7, 14, 5), float32] */;
    %257 = %252.0;
    %258 = asinh(%256) /* ty=Tensor[(7, 14, 5), float32] */;
    (%257, %var_1892, %258)
  };
  %259(%var_1901) /* ty=(Tensor[(2, 8, 5), float64], Tensor[(80), float64], Tensor[(7, 14, 5), float32]) */
}

def @func_5854(%var_5852: Tensor[(15, 3, 10), uint8], %var_5853: Tensor[(15, 3, 10), uint8]) -> (Tensor[(15, 3, 10), uint8], Tensor[(1, 80), float64], Tensor[(168), int32]) {
  %269 = fn (%var_5837: Tensor[(15, 3, 10), uint8], %var_5838: Tensor[(15, 3, 10), uint8]) -> (Tensor[(15, 3, 10), uint8], Tensor[(1, 80), float64], Tensor[(168), int32]) {
    %260 = cast(%var_5838, dtype="uint8") /* ty=Tensor[(15, 3, 10), uint8] */;
    %261 = shape_of(%var_5837, dtype="int32") /* ty=Tensor[(3), int32] */;
    %262 = cast(%var_5837, dtype="uint8") /* ty=Tensor[(15, 3, 10), uint8] */;
    %263 = dyn.reshape(%260, %261, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %264 = cast(meta[relay.Constant][18] /* ty=Tensor[(168), int32] */, dtype="int32") /* ty=Tensor[(168), int32] */;
    %265 = reshape(%264, newshape=[4, 6, 7]) /* ty=Tensor[(4, 6, 7), int32] */;
    %266 = @func_876(%265) /* ty=(Tensor[(4, 6, 7), bool], Tensor[(1, 80), float64], Tensor[(126), float64], Tensor[(80), float64], Tensor[(4, 6, 7), float64], Tensor[(468, 2), float32]) */;
    %267 = logical_xor(%262, %263) /* ty=Tensor[(15, 3, 10), uint8] */;
    %268 = %266.1;
    (%267, %268, meta[relay.Constant][18] /* ty=Tensor[(168), int32] */)
  };
  %269(%var_5852, %var_5853) /* ty=(Tensor[(15, 3, 10), uint8], Tensor[(1, 80), float64], Tensor[(168), int32]) */
}

def @func_5809(%var_5800: Tensor[(15, 4, 14), bool]) -> (Tensor[(15, 4, 14), float64],) {
  %270 = @func_5540() /* ty=Tensor[(1, 4, 14), bool] */;
  %271 = cast(%270, dtype="uint64") /* ty=Tensor[(1, 4, 14), uint64] */;
  %272 = cast(%var_5800, dtype="uint64") /* ty=Tensor[(15, 4, 14), uint64] */;
  %273 = maximum(%271, %272) /* ty=Tensor[(15, 4, 14), uint64] */;
  %274 = cast(%var_5800, dtype="float64") /* ty=Tensor[(15, 4, 14), float64] */;
  %275 = shape_of(%273, dtype="int32") /* ty=Tensor[(3), int32] */;
  %276 = cast(%273, dtype="float64") /* ty=Tensor[(15, 4, 14), float64] */;
  %277 = dyn.reshape(%274, %275, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %278 = floor_divide(%276, %277) /* ty=Tensor[(15, 4, 14), float64] */;
  (%278,)
}

def @func_3611(%var_3606: Tensor[(13, 15, 11), float64], %var_3607: Tensor[(360), float32], %var_3608: Tensor[(65), int16], %var_3609: Tensor[(936), float64], %var_3610: uint64) -> (Tensor[(13, 15, 11), bool], Tensor[(6, 12, 5), float32], Tensor[(360), float32], Tensor[(7, 14, 5), float32], Tensor[(80), float64], Tensor[(6, 12, 5), float32], Tensor[(9, 13, 8), int16], Tensor[(65), int16], Tensor[(4, 264), int64], Tensor[(936), float64], Tensor[(1, 126), float64], Tensor[(7, 7, 3), bool], uint64, Tensor[(1, 147), uint64], Tensor[(10, 13), float64], Tensor[(130), float64]) {
  %314 = fn (%var_3548: Tensor[(13, 15, 11), float64], %var_3557: Tensor[(360), float32], %var_3572: Tensor[(65), int16], %var_3574: Tensor[(936), float64], %var_3584: uint64) -> (Tensor[(13, 15, 11), bool], Tensor[(6, 12, 5), float32], Tensor[(360), float32], Tensor[(7, 14, 5), float32], Tensor[(80), float64], Tensor[(6, 12, 5), float32], Tensor[(9, 13, 8), int16], Tensor[(65), int16], Tensor[(4, 264), int64], Tensor[(936), float64], Tensor[(1, 126), float64], Tensor[(7, 7, 3), bool], uint64, Tensor[(1, 147), uint64], Tensor[(10, 13), float64], Tensor[(130), float64]) {
    %279 = cast(%var_3548, dtype="bool") /* ty=Tensor[(13, 15, 11), bool] */;
    %280 = shape_of(meta[relay.Constant][19] /* ty=Tensor[(13, 15, 11), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %281 = cast(meta[relay.Constant][19] /* ty=Tensor[(13, 15, 11), float64] */, dtype="bool") /* ty=Tensor[(13, 15, 11), bool] */;
    %282 = dyn.reshape(%279, %280, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %283 = cast(%var_3557, dtype="float32") /* ty=Tensor[(360), float32] */;
    %284 = reshape(%283, newshape=[6, 12, 5]) /* ty=Tensor[(6, 12, 5), float32] */;
    %285 = cast(meta[relay.Constant][20] /* ty=Tensor[(80), float64] */, dtype="float64") /* ty=Tensor[(80), float64] */;
    %286 = reshape(%285, newshape=[80]) /* ty=Tensor[(80), float64] */;
    %287 = @func_1900(%286) /* ty=(Tensor[(2, 8, 5), float64], Tensor[(80), float64], Tensor[(7, 14, 5), float32]) */;
    %288 = @func_2386(%284) /* ty=Tensor[(6, 12, 5), float32] */;
    %289 = cast(%288, dtype="float32") /* ty=Tensor[(6, 12, 5), float32] */;
    %290 = reshape(%289, newshape=[6, 12, 5]) /* ty=Tensor[(6, 12, 5), float32] */;
    %291 = cast(%var_3572, dtype="int16") /* ty=Tensor[(65), int16] */;
    %292 = cast(meta[relay.Constant][21] /* ty=Tensor[(4, 264), int64] */, dtype="int64") /* ty=Tensor[(4, 264), int64] */;
    %293 = cast(%var_3574, dtype="float64") /* ty=Tensor[(936), float64] */;
    %294 = cast(meta[relay.Constant][22] /* ty=Tensor[(1, 126), float64] */, dtype="float64") /* ty=Tensor[(1, 126), float64] */;
    %295 = reshape(%291, newshape=[13, 5, 1]) /* ty=Tensor[(13, 5, 1), int16] */;
    %296 = reshape(%292, newshape=[1056]) /* ty=Tensor[(1056), int64] */;
    %297 = reshape(%293, newshape=[936]) /* ty=Tensor[(936), float64] */;
    %298 = reshape(%294, newshape=[126, 1]) /* ty=Tensor[(126, 1), float64] */;
    %299 = @func_2281(%295, %296, %297, %298) /* ty=(Tensor[(13, 5, 16), int16], Tensor[(9, 13, 8), int16], Tensor[(176), int64], Tensor[(1056), int64], Tensor[(936), float64], Tensor[(126, 1), float64], Tensor[(45), uint8]) */;
    %300 = cast(%var_3584, dtype="uint64") /* ty=uint64 */;
    %301 = cast(meta[relay.Constant][23] /* ty=Tensor[(1, 147), uint64] */, dtype="uint64") /* ty=Tensor[(1, 147), uint64] */;
    %302 = reshape(%300, newshape=[]) /* ty=uint64 */;
    %303 = reshape(%301, newshape=[7, 7, 3]) /* ty=Tensor[(7, 7, 3), uint64] */;
    %304 = @func_2833(%302, %303) /* ty=(Tensor[(7, 7, 3), bool],) */;
    %305 = cast(meta[relay.Constant][24] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
    %306 = reshape(%305, newshape=[10, 13]) /* ty=Tensor[(10, 13), float64] */;
    %307 = @func_1442(%306) /* ty=(Tensor[(10, 13), float64],) */;
    %308 = greater(%281, %282) /* ty=Tensor[(13, 15, 11), bool] */;
    %309 = %287.2;
    %310 = @func_2386(%290) /* ty=Tensor[(6, 12, 5), float32] */;
    %311 = %299.1;
    %312 = %304.0;
    %313 = %307.0;
    (%308, %288, %var_3557, %309, meta[relay.Constant][20] /* ty=Tensor[(80), float64] */, %310, %311, %var_3572, meta[relay.Constant][21] /* ty=Tensor[(4, 264), int64] */, %var_3574, meta[relay.Constant][22] /* ty=Tensor[(1, 126), float64] */, %312, %var_3584, meta[relay.Constant][23] /* ty=Tensor[(1, 147), uint64] */, %313, meta[relay.Constant][24] /* ty=Tensor[(130), float64] */)
  };
  %314(%var_3606, %var_3607, %var_3608, %var_3609, %var_3610) /* ty=(Tensor[(13, 15, 11), bool], Tensor[(6, 12, 5), float32], Tensor[(360), float32], Tensor[(7, 14, 5), float32], Tensor[(80), float64], Tensor[(6, 12, 5), float32], Tensor[(9, 13, 8), int16], Tensor[(65), int16], Tensor[(4, 264), int64], Tensor[(936), float64], Tensor[(1, 126), float64], Tensor[(7, 7, 3), bool], uint64, Tensor[(1, 147), uint64], Tensor[(10, 13), float64], Tensor[(130), float64]) */
}

def @func_6285(%var_6252: Tensor[(840), bool]) -> (Tensor[(6, 4, 14), bool], Tensor[(5, 14, 15), float32], Tensor[(832), int8], Tensor[(15, 4, 14), float64], Tensor[(840), bool], Tensor[(16, 4, 13), int8], Tensor[(130), float64], Tensor[(70, 15), float32]) {
  %315 = @func_5906() /* ty=(Tensor[(6, 4, 14), bool],) */;
  %316 = cast(meta[relay.Constant][25] /* ty=Tensor[(70, 15), float64] */, dtype="float64") /* ty=Tensor[(70, 15), float64] */;
  %317 = cast(meta[relay.Constant][26] /* ty=Tensor[(832), int8] */, dtype="int8") /* ty=Tensor[(832), int8] */;
  %318 = reshape(%316, newshape=[5, 14, 15]) /* ty=Tensor[(5, 14, 15), float64] */;
  %319 = reshape(%317, newshape=[832, 1]) /* ty=Tensor[(832, 1), int8] */;
  %320 = @func_3685(%318, %319) /* ty=(Tensor[(5, 14, 15), float32], Tensor[(10, 13), float64], Tensor[(832, 1), int8], Tensor[(13, 10), float64], Tensor[(5, 14, 15), int8]) */;
  %321 = cast(%var_6252, dtype="bool") /* ty=Tensor[(840), bool] */;
  %322 = reshape(%321, newshape=[15, 4, 14]) /* ty=Tensor[(15, 4, 14), bool] */;
  %323 = @func_5809(%322) /* ty=(Tensor[(15, 4, 14), float64],) */;
  %324 = cast(meta[relay.Constant][26] /* ty=Tensor[(832), int8] */, dtype="int8") /* ty=Tensor[(832), int8] */;
  %325 = cast(meta[relay.Constant][27] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %326 = reshape(%324, newshape=[16, 4, 13]) /* ty=Tensor[(16, 4, 13), int8] */;
  %327 = reshape(%325, newshape=[130]) /* ty=Tensor[(130), float64] */;
  %328 = @func_1471(%326, %327) /* ty=(Tensor[(16, 4, 13), int8], Tensor[(10, 13), float64], Tensor[(130), float64]) */;
  %329 = cast(meta[relay.Constant][25] /* ty=Tensor[(70, 15), float64] */, dtype="float64") /* ty=Tensor[(70, 15), float64] */;
  %330 = acos(%329) /* ty=Tensor[(70, 15), float64] */;
  %331 = cast(%330, dtype="float32") /* ty=Tensor[(70, 15), float32] */;
  %332 = %315.0;
  %333 = %320.0;
  %334 = %323.0;
  %335 = %328.0;
  %336 = sqrt(%331) /* ty=Tensor[(70, 15), float32] */;
  (%332, %333, meta[relay.Constant][26] /* ty=Tensor[(832), int8] */, %334, %var_6252, %335, meta[relay.Constant][27] /* ty=Tensor[(130), float64] */, %336)
}

def @func_6346(%var_6343: Tensor[(12, 78), float64], %var_6344: Tensor[(126), float64], %var_6345: Tensor[(3072), float64]) -> (Tensor[(1, 4, 14), bool], Tensor[(6, 4, 14), bool], Tensor[(1056), int64], Tensor[(65), int16], Tensor[(1056), int64], Tensor[(12, 78), float64], Tensor[(126), float64], Tensor[(16, 12, 16), float64], Tensor[(3072), float64]) {
  @func_6341(%var_6343, %var_6344, %var_6345) /* ty=(Tensor[(1, 4, 14), bool], Tensor[(6, 4, 14), bool], Tensor[(1056), int64], Tensor[(65), int16], Tensor[(1056), int64], Tensor[(12, 78), float64], Tensor[(126), float64], Tensor[(16, 12, 16), float64], Tensor[(3072), float64]) */
}

def @func_6947() -> Tensor[(6, 4, 14), bool] {
  @func_6945() /* ty=Tensor[(6, 4, 14), bool] */
}

def @func_46(%var_45: Tensor[(9, 14), float64]) -> (Tensor[(9, 14), float64],) {
  %339 = fn (%var_10: Tensor[(9, 14), float64]) -> (Tensor[(9, 14), float64],) {
    %337 = cast(%var_10, dtype="float64") /* ty=Tensor[(9, 14), float64] */;
    %338 = asinh(%337) /* ty=Tensor[(9, 14), float64] */;
    (%338,)
  };
  %339(%var_45) /* ty=(Tensor[(9, 14), float64],) */
}

def @main(%var_7410: Tensor[(80), float64]) -> (Tensor[(3, 4, 15), uint8], Tensor[(15, 3), uint8], Tensor[(180), uint8], Tensor[(20, 4), float64], Tensor[(80), float64], Tensor[(6, 4, 14), float32], Tensor[(6, 4, 14), float64]) {
  %340 = cast(meta[relay.Constant][28] /* ty=Tensor[(15, 3), uint8] */, dtype="uint8") /* ty=Tensor[(15, 3), uint8] */;
  %341 = cast(meta[relay.Constant][29] /* ty=Tensor[(180), uint8] */, dtype="uint8") /* ty=Tensor[(180), uint8] */;
  %342 = reshape(%340, newshape=[3, 1, 15]) /* ty=Tensor[(3, 1, 15), uint8] */;
  %343 = reshape(%341, newshape=[3, 4, 15]) /* ty=Tensor[(3, 4, 15), uint8] */;
  %344 = @func_1969(%342, %343) /* ty=(Tensor[(3, 4, 15), uint8],) */;
  %345 = cast(%var_7410, dtype="float64") /* ty=Tensor[(80), float64] */;
  %346 = reshape(%345, newshape=[20, 4]) /* ty=Tensor[(20, 4), float64] */;
  %347 = @func_5623(%346) /* ty=(Tensor[(1, 4, 14), bool], Tensor[(80), float64], Tensor[(20, 4), float64]) */;
  %348 = @func_6387() /* ty=(Tensor[(6, 4, 14), bool], Tensor[(6, 4, 14), bool]) */;
  %349 = %348.1;
  %350 = cast(%349, dtype="float32") /* ty=Tensor[(6, 4, 14), float32] */;
  %351 = rsqrt(%350) /* ty=Tensor[(6, 4, 14), float32] */;
  %352 = cast(%351, dtype="float64") /* ty=Tensor[(6, 4, 14), float64] */;
  %353 = sin(%352) /* ty=Tensor[(6, 4, 14), float64] */;
  %354 = cast(%353, dtype="float32") /* ty=Tensor[(6, 4, 14), float32] */;
  %355 = cast(%353, dtype="float64") /* ty=Tensor[(6, 4, 14), float64] */;
  %356 = %344.0;
  %357 = %347.2;
  %358 = acosh(%354) /* ty=Tensor[(6, 4, 14), float32] */;
  %359 = erf(%355) /* ty=Tensor[(6, 4, 14), float64] */;
  (%356, meta[relay.Constant][28] /* ty=Tensor[(15, 3), uint8] */, meta[relay.Constant][29] /* ty=Tensor[(180), uint8] */, %357, %var_7410, %358, %359)
}

def @func_5623(%var_5622: Tensor[(20, 4), float64]) -> (Tensor[(1, 4, 14), bool], Tensor[(80), float64], Tensor[(20, 4), float64]) {
  %367 = fn (%var_5615: Tensor[(20, 4), float64]) -> (Tensor[(1, 4, 14), bool], Tensor[(80), float64], Tensor[(20, 4), float64]) {
    %360 = cast(%var_5615, dtype="float64") /* ty=Tensor[(20, 4), float64] */;
    %361 = reshape(%360, newshape=[80]) /* ty=Tensor[(80), float64] */;
    %362 = @func_1900(%361) /* ty=(Tensor[(2, 8, 5), float64], Tensor[(80), float64], Tensor[(7, 14, 5), float32]) */;
    %363 = cast(%var_5615, dtype="float64") /* ty=Tensor[(20, 4), float64] */;
    %364 = @func_5540() /* ty=Tensor[(1, 4, 14), bool] */;
    %365 = %362.1;
    %366 = acosh(%363) /* ty=Tensor[(20, 4), float64] */;
    (%364, %365, %366)
  };
  %367(%var_5622) /* ty=(Tensor[(1, 4, 14), bool], Tensor[(80), float64], Tensor[(20, 4), float64]) */
}

def @func_7200(%var_7197: Tensor[(147), uint64], %var_7198: Tensor[(126), float64], %var_7199: Tensor[(1050), bool]) -> (Tensor[(6, 4, 14), float64], Tensor[(6, 4, 14), int16], Tensor[(7, 7, 3), bool], uint64, Tensor[(147), uint64], Tensor[(1, 10, 5), float64], Tensor[(50), float64], Tensor[(126), float64], Tensor[(10, 7, 15), int16], Tensor[(1050), bool]) {
  @func_7195(%var_7197, %var_7198, %var_7199) /* ty=(Tensor[(6, 4, 14), float64], Tensor[(6, 4, 14), int16], Tensor[(7, 7, 3), bool], uint64, Tensor[(147), uint64], Tensor[(1, 10, 5), float64], Tensor[(50), float64], Tensor[(126), float64], Tensor[(10, 7, 15), int16], Tensor[(1050), bool]) */
}

def @func_5702(%var_5687: Tensor[(336), bool]) -> (Tensor[(1, 4, 14), bool], Tensor[(1, 10, 5), float64], Tensor[(336), bool]) {
  %368 = cast(%var_5687, dtype="bool") /* ty=Tensor[(336), bool] */;
  %369 = reshape(%368, newshape=[4, 6, 14]) /* ty=Tensor[(4, 6, 14), bool] */;
  %370 = @func_2803(%369) /* ty=(Tensor[(4, 6, 14), int16], Tensor[(1, 10, 5), float64], Tensor[(50), float64], Tensor[(126), float64], Tensor[(4, 6, 14), float64]) */;
  %371 = @func_5540() /* ty=Tensor[(1, 4, 14), bool] */;
  %372 = %370.1;
  (%371, %372, %var_5687)
}

def @func_6865(%var_6863: Tensor[(5, 13, 8), float32], %var_6864: Tensor[(168), int32]) -> (Tensor[(5, 13, 8), float64], Tensor[(4, 6, 7), bool], Tensor[(168), int32]) {
  %381 = fn (%var_6839: Tensor[(5, 13, 8), float32], %var_6853: Tensor[(168), int32]) -> (Tensor[(5, 13, 8), float64], Tensor[(4, 6, 7), bool], Tensor[(168), int32]) {
    %373 = cast(%var_6839, dtype="float32") /* ty=Tensor[(5, 13, 8), float32] */;
    %374 = exp(%373) /* ty=Tensor[(5, 13, 8), float32] */;
    %375 = cast(%374, dtype="float64") /* ty=Tensor[(5, 13, 8), float64] */;
    %376 = cast(%var_6853, dtype="int32") /* ty=Tensor[(168), int32] */;
    %377 = reshape(%376, newshape=[4, 6, 7]) /* ty=Tensor[(4, 6, 7), int32] */;
    %378 = @func_876(%377) /* ty=(Tensor[(4, 6, 7), bool], Tensor[(1, 80), float64], Tensor[(126), float64], Tensor[(80), float64], Tensor[(4, 6, 7), float64], Tensor[(468, 2), float32]) */;
    %379 = sinh(%375) /* ty=Tensor[(5, 13, 8), float64] */;
    %380 = %378.0;
    (%379, %380, %var_6853)
  };
  %381(%var_6863, %var_6864) /* ty=(Tensor[(5, 13, 8), float64], Tensor[(4, 6, 7), bool], Tensor[(168), int32]) */
}

def @func_4927(%var_4923: Tensor[(10, 12, 2), float32], %var_4924: Tensor[(936), float64], %var_4925: uint64, %var_4926: Tensor[(10, 12, 2), int64]) -> (Tensor[(2145), float64], Tensor[(360), float32], Tensor[(65), int16], Tensor[(936), float64], uint64, Tensor[(10, 12, 2), int8], Tensor[(936), float64]) {
  @func_4921(%var_4923, %var_4924, %var_4925, %var_4926) /* ty=(Tensor[(2145), float64], Tensor[(360), float32], Tensor[(65), int16], Tensor[(936), float64], uint64, Tensor[(10, 12, 2), int8], Tensor[(936), float64]) */
}

def @func_5705(%var_5703: Tensor[(336), bool]) -> (Tensor[(1, 4, 14), bool], Tensor[(1, 10, 5), float64], Tensor[(336), bool]) {
  @func_5702(%var_5703) /* ty=(Tensor[(1, 4, 14), bool], Tensor[(1, 10, 5), float64], Tensor[(336), bool]) */
}

def @func_6594() -> Tensor[(6, 4, 14), bool] {
  %382 = fn () -> Tensor[(6, 4, 14), bool] {
    @func_6398() /* ty=Tensor[(6, 4, 14), bool] */
  };
  %382() /* ty=Tensor[(6, 4, 14), bool] */
}

def @func_734(%var_686: Tensor[(9, 13, 8), float64], %var_697: Tensor[(126), float64], %var_705: Tensor[(1, 80), float64]) -> (Tensor[(9, 13, 8), float64], Tensor[(9, 14), float64], Tensor[(126), float64], Tensor[(2, 8, 5), float64], Tensor[(9, 13, 8), int16], Tensor[(2, 8, 5), float64], Tensor[(1, 80), float64]) {
  %383 = cast(%var_686, dtype="float64") /* ty=Tensor[(9, 13, 8), float64] */;
  %384 = cast(%var_697, dtype="float64") /* ty=Tensor[(126), float64] */;
  %385 = reshape(%384, newshape=[9, 14]) /* ty=Tensor[(9, 14), float64] */;
  %386 = @func_44(%385) /* ty=(Tensor[(9, 14), float64],) */;
  %387 = cast(%var_705, dtype="float64") /* ty=Tensor[(1, 80), float64] */;
  %388 = reshape(%387, newshape=[2, 8, 5]) /* ty=Tensor[(2, 8, 5), float64] */;
  %389 = @func_363(%388) /* ty=(Tensor[(2, 8, 5), float64],) */;
  %390 = cast(%var_686, dtype="float64") /* ty=Tensor[(9, 13, 8), float64] */;
  %391 = log2(%390) /* ty=Tensor[(9, 13, 8), float64] */;
  %392 = cast(%var_686, dtype="int16") /* ty=Tensor[(9, 13, 8), int16] */;
  %393 = shape_of(%391, dtype="int32") /* ty=Tensor[(3), int32] */;
  %394 = cast(%391, dtype="int16") /* ty=Tensor[(9, 13, 8), int16] */;
  %395 = dyn.reshape(%392, %393, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %396 = %389.0;
  %397 = cast(%396, dtype="float64") /* ty=Tensor[(2, 8, 5), float64] */;
  %398 = reshape(%397, newshape=[2, 8, 5]) /* ty=Tensor[(2, 8, 5), float64] */;
  %399 = @func_363(%398) /* ty=(Tensor[(2, 8, 5), float64],) */;
  %400 = cast(%var_705, dtype="float64") /* ty=Tensor[(1, 80), float64] */;
  %401 = sigmoid(%383) /* ty=Tensor[(9, 13, 8), float64] */;
  %402 = %386.0;
  %403 = add(%394, %395) /* ty=Tensor[(9, 13, 8), int16] */;
  %404 = %399.0;
  %405 = atan(%400) /* ty=Tensor[(1, 80), float64] */;
  (%401, %402, %var_697, %396, %403, %404, %405)
}

def @func_6792() -> (Tensor[(6, 4, 14), bool], Tensor[(10, 13), float64], Tensor[(130), float64]) {
  %412 = fn () -> (Tensor[(6, 4, 14), bool], Tensor[(10, 13), float64], Tensor[(130), float64]) {
    %406 = @func_5906() /* ty=(Tensor[(6, 4, 14), bool],) */;
    %407 = cast(meta[relay.Constant][30] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
    %408 = reshape(%407, newshape=[10, 13]) /* ty=Tensor[(10, 13), float64] */;
    %409 = @func_1442(%408) /* ty=(Tensor[(10, 13), float64],) */;
    %410 = %406.0;
    %411 = %409.0;
    (%410, %411, meta[relay.Constant][30] /* ty=Tensor[(130), float64] */)
  };
  %412() /* ty=(Tensor[(6, 4, 14), bool], Tensor[(10, 13), float64], Tensor[(130), float64]) */
}

def @func_7358() -> (Tensor[(6, 4, 14), bool], Tensor[(16, 4, 13), int8], Tensor[(840), bool], Tensor[(6, 4, 14), bool]) {
  %421 = fn () -> (Tensor[(6, 4, 14), bool], Tensor[(16, 4, 13), int8], Tensor[(840), bool], Tensor[(6, 4, 14), bool]) {
    %413 = @func_6048() /* ty=(Tensor[(6, 4, 14), bool],) */;
    %414 = cast(meta[relay.Constant][31] /* ty=Tensor[(840), bool] */, dtype="bool") /* ty=Tensor[(840), bool] */;
    %415 = reshape(%414, newshape=[840]) /* ty=Tensor[(840), bool] */;
    %416 = @func_6285(%415) /* ty=(Tensor[(6, 4, 14), bool], Tensor[(5, 14, 15), float32], Tensor[(832), int8], Tensor[(15, 4, 14), float64], Tensor[(840), bool], Tensor[(16, 4, 13), int8], Tensor[(130), float64], Tensor[(70, 15), float32]) */;
    %417 = @func_5906() /* ty=(Tensor[(6, 4, 14), bool],) */;
    %418 = %413.0;
    %419 = %416.5;
    %420 = %417.0;
    (%418, %419, meta[relay.Constant][31] /* ty=Tensor[(840), bool] */, %420)
  };
  %421() /* ty=(Tensor[(6, 4, 14), bool], Tensor[(16, 4, 13), int8], Tensor[(840), bool], Tensor[(6, 4, 14), bool]) */
}

def @func_5746(%var_5745: Tensor[(198), float64]) -> (Tensor[(16, 4, 14), bool], Tensor[(11, 2, 9), float64], Tensor[(198), float64]) {
  %430 = fn (%var_5732: Tensor[(198), float64]) -> (Tensor[(16, 4, 14), bool], Tensor[(11, 2, 9), float64], Tensor[(198), float64]) {
    %422 = @func_5540() /* ty=Tensor[(1, 4, 14), bool] */;
    %423 = cast(%422, dtype="bool") /* ty=Tensor[(1, 4, 14), bool] */;
    %424 = cast(meta[relay.Constant][32] /* ty=Tensor[(16, 4, 14), bool] */, dtype="bool") /* ty=Tensor[(16, 4, 14), bool] */;
    %425 = cast(%var_5732, dtype="float64") /* ty=Tensor[(198), float64] */;
    %426 = reshape(%425, newshape=[11, 2, 9]) /* ty=Tensor[(11, 2, 9), float64] */;
    %427 = @func_323(%426) /* ty=(Tensor[(11, 2, 9), float64],) */;
    %428 = not_equal(%423, %424) /* ty=Tensor[(16, 4, 14), bool] */;
    %429 = %427.0;
    (%428, %429, %var_5732)
  };
  %430(%var_5745) /* ty=(Tensor[(16, 4, 14), bool], Tensor[(11, 2, 9), float64], Tensor[(198), float64]) */
}

def @func_5541() -> Tensor[(1, 4, 14), bool] {
  %433 = fn () -> Tensor[(1, 4, 14), bool] {
    %431 = cast(meta[relay.Constant][33] /* ty=uint64 */, dtype="bool") /* ty=bool */;
    %432 = cast(meta[relay.Constant][34] /* ty=Tensor[(1, 4, 14), uint64] */, dtype="bool") /* ty=Tensor[(1, 4, 14), bool] */;
    not_equal(%431, %432) /* ty=Tensor[(1, 4, 14), bool] */
  };
  %433() /* ty=Tensor[(1, 4, 14), bool] */
}

def @func_2281(%var_2250: Tensor[(13, 5, 1), int16], %var_2269: Tensor[(1056), int64], %var_2270: Tensor[(936), float64], %var_2271: Tensor[(126, 1), float64]) -> (Tensor[(13, 5, 16), int16], Tensor[(9, 13, 8), int16], Tensor[(176), int64], Tensor[(1056), int64], Tensor[(936), float64], Tensor[(126, 1), float64], Tensor[(45), uint8]) {
  %434 = cast(%var_2250, dtype="int16") /* ty=Tensor[(13, 5, 1), int16] */;
  %435 = cast(meta[relay.Constant][35] /* ty=Tensor[(13, 5, 16), int16] */, dtype="int16") /* ty=Tensor[(13, 5, 16), int16] */;
  %436 = cast(meta[relay.Constant][36] /* ty=Tensor[(176), int64] */, dtype="int64") /* ty=Tensor[(176), int64] */;
  %437 = cast(%var_2269, dtype="int64") /* ty=Tensor[(1056), int64] */;
  %438 = cast(%var_2270, dtype="float64") /* ty=Tensor[(936), float64] */;
  %439 = cast(%var_2271, dtype="float64") /* ty=Tensor[(126, 1), float64] */;
  %440 = cast(meta[relay.Constant][37] /* ty=Tensor[(45), uint8] */, dtype="uint8") /* ty=Tensor[(45), uint8] */;
  %441 = reshape(%436, newshape=[1, 11, 16]) /* ty=Tensor[(1, 11, 16), int64] */;
  %442 = reshape(%437, newshape=[6, 11, 16]) /* ty=Tensor[(6, 11, 16), int64] */;
  %443 = reshape(%438, newshape=[936]) /* ty=Tensor[(936), float64] */;
  %444 = reshape(%439, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %445 = reshape(%440, newshape=[45]) /* ty=Tensor[(45), uint8] */;
  %446 = @func_2140(%441, %442, %443, %444, %445) /* ty=(Tensor[(6, 11, 16), bool], Tensor[(9, 13, 8), int16], Tensor[(936), float64], Tensor[(126), float64], Tensor[(80), float64], Tensor[(45), uint8], Tensor[(126), float64], Tensor[(1, 11, 16), float64], Tensor[(2, 8, 5), float64], Tensor[(3, 4, 15), int32]) */;
  %447 = add(%434, %435) /* ty=Tensor[(13, 5, 16), int16] */;
  %448 = %446.1;
  (%447, %448, meta[relay.Constant][36] /* ty=Tensor[(176), int64] */, %var_2269, %var_2270, %var_2271, meta[relay.Constant][37] /* ty=Tensor[(45), uint8] */)
}

def @func_3688(%var_3686: Tensor[(5, 14, 15), float64], %var_3687: Tensor[(832, 1), int8]) -> (Tensor[(5, 14, 15), float32], Tensor[(10, 13), float64], Tensor[(832, 1), int8], Tensor[(13, 10), float64], Tensor[(5, 14, 15), int8]) {
  %472 = fn (%var_3665: Tensor[(5, 14, 15), float64], %var_3676: Tensor[(832, 1), int8]) -> (Tensor[(5, 14, 15), float32], Tensor[(10, 13), float64], Tensor[(832, 1), int8], Tensor[(13, 10), float64], Tensor[(5, 14, 15), int8]) {
    %449 = cast(%var_3665, dtype="float32") /* ty=Tensor[(5, 14, 15), float32] */;
    %450 = cast(%var_3676, dtype="int8") /* ty=Tensor[(832, 1), int8] */;
    %451 = cast(meta[relay.Constant][38] /* ty=Tensor[(13, 10), float64] */, dtype="float64") /* ty=Tensor[(13, 10), float64] */;
    %452 = reshape(%450, newshape=[16, 4, 13]) /* ty=Tensor[(16, 4, 13), int8] */;
    %453 = reshape(%451, newshape=[130]) /* ty=Tensor[(130), float64] */;
    %454 = @func_1471(%452, %453) /* ty=(Tensor[(16, 4, 13), int8], Tensor[(10, 13), float64], Tensor[(130), float64]) */;
    %455 = cast(%var_3665, dtype="float64") /* ty=Tensor[(5, 14, 15), float64] */;
    %456 = shape_of(meta[relay.Constant][39] /* ty=Tensor[(5, 14, 15), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %457 = cast(meta[relay.Constant][39] /* ty=Tensor[(5, 14, 15), float64] */, dtype="float64") /* ty=Tensor[(5, 14, 15), float64] */;
    %458 = dyn.reshape(%455, %456, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %459 = divide(%457, %458) /* ty=Tensor[(5, 14, 15), float64] */;
    %460 = cast(%459, dtype="bool") /* ty=Tensor[(5, 14, 15), bool] */;
    %461 = shape_of(meta[relay.Constant][39] /* ty=Tensor[(5, 14, 15), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %462 = cast(meta[relay.Constant][39] /* ty=Tensor[(5, 14, 15), float64] */, dtype="bool") /* ty=Tensor[(5, 14, 15), bool] */;
    %463 = dyn.reshape(%460, %461, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %464 = greater_equal(%462, %463) /* ty=Tensor[(5, 14, 15), bool] */;
    %465 = cast(%var_3665, dtype="int8") /* ty=Tensor[(5, 14, 15), int8] */;
    %466 = shape_of(%464, dtype="int32") /* ty=Tensor[(3), int32] */;
    %467 = cast(%464, dtype="int8") /* ty=Tensor[(5, 14, 15), int8] */;
    %468 = dyn.reshape(%465, %466, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %469 = log2(%449) /* ty=Tensor[(5, 14, 15), float32] */;
    %470 = %454.1;
    %471 = minimum(%467, %468) /* ty=Tensor[(5, 14, 15), int8] */;
    (%469, %470, %var_3676, meta[relay.Constant][38] /* ty=Tensor[(13, 10), float64] */, %471)
  };
  %472(%var_3686, %var_3687) /* ty=(Tensor[(5, 14, 15), float32], Tensor[(10, 13), float64], Tensor[(832, 1), int8], Tensor[(13, 10), float64], Tensor[(5, 14, 15), int8]) */
}

def @func_6681(%var_6668: Tensor[(80), float64]) -> (Tensor[(2, 8, 5), float64], Tensor[(80), float64], Tensor[(6, 4, 14), float32]) {
  %473 = cast(%var_6668, dtype="float64") /* ty=Tensor[(80), float64] */;
  %474 = reshape(%473, newshape=[80]) /* ty=Tensor[(80), float64] */;
  %475 = @func_1900(%474) /* ty=(Tensor[(2, 8, 5), float64], Tensor[(80), float64], Tensor[(7, 14, 5), float32]) */;
  %476 = @func_6624() /* ty=(Tensor[(6, 4, 14), bool],) */;
  %477 = %476.0;
  %478 = cast(%477, dtype="float32") /* ty=Tensor[(6, 4, 14), float32] */;
  %479 = %475.0;
  %480 = acos(%478) /* ty=Tensor[(6, 4, 14), float32] */;
  (%479, %var_6668, %480)
}

def @func_5947(%var_5938: Tensor[(8, 4, 14), float32]) -> (Tensor[(2, 8, 5), float64], Tensor[(80), float64], Tensor[(8, 4, 14), uint8], Tensor[(6, 4, 14), bool]) {
  %481 = cast(meta[relay.Constant][40] /* ty=Tensor[(80), float64] */, dtype="float64") /* ty=Tensor[(80), float64] */;
  %482 = reshape(%481, newshape=[2, 8, 5]) /* ty=Tensor[(2, 8, 5), float64] */;
  %483 = @func_363(%482) /* ty=(Tensor[(2, 8, 5), float64],) */;
  %484 = @func_5540() /* ty=Tensor[(1, 4, 14), bool] */;
  %485 = cast(%484, dtype="float32") /* ty=Tensor[(1, 4, 14), float32] */;
  %486 = sin(%485) /* ty=Tensor[(1, 4, 14), float32] */;
  %487 = cast(%484, dtype="float32") /* ty=Tensor[(1, 4, 14), float32] */;
  %488 = shape_of(%486, dtype="int32") /* ty=Tensor[(3), int32] */;
  %489 = cast(%486, dtype="float32") /* ty=Tensor[(1, 4, 14), float32] */;
  %490 = dyn.reshape(%487, %488, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %491 = divide(%489, %490) /* ty=Tensor[(?, 4, 14), float32] */;
  %492 = cast(%486, dtype="float32") /* ty=Tensor[(1, 4, 14), float32] */;
  %493 = shape_of(%491, dtype="int32") /* ty=Tensor[(3), int32] */;
  %494 = cast(%491, dtype="float32") /* ty=Tensor[(?, 4, 14), float32] */;
  %495 = dyn.reshape(%492, %493, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %496 = subtract(%494, %495) /* ty=Tensor[(?, 4, 14), float32] */;
  %497 = cast(%496, dtype="uint8") /* ty=Tensor[(?, 4, 14), uint8] */;
  %498 = cast(%var_5938, dtype="uint8") /* ty=Tensor[(8, 4, 14), uint8] */;
  %499 = @func_5906() /* ty=(Tensor[(6, 4, 14), bool],) */;
  %500 = %483.0;
  %501 = bitwise_xor(%497, %498) /* ty=Tensor[(8, 4, 14), uint8] */;
  %502 = %499.0;
  (%500, meta[relay.Constant][40] /* ty=Tensor[(80), float64] */, %501, %502)
}

def @func_2146(%var_2141: Tensor[(1, 11, 16), int64], %var_2142: Tensor[(6, 11, 16), int64], %var_2143: Tensor[(936), float64], %var_2144: Tensor[(126), float64], %var_2145: Tensor[(45), uint8]) -> (Tensor[(6, 11, 16), bool], Tensor[(9, 13, 8), int16], Tensor[(936), float64], Tensor[(126), float64], Tensor[(80), float64], Tensor[(45), uint8], Tensor[(126), float64], Tensor[(1, 11, 16), float64], Tensor[(2, 8, 5), float64], Tensor[(3, 4, 15), int32]) {
  %539 = fn (%var_2079: Tensor[(1, 11, 16), int64], %var_2080: Tensor[(6, 11, 16), int64], %var_2087: Tensor[(936), float64], %var_2088: Tensor[(126), float64], %var_2094: Tensor[(45), uint8]) -> (Tensor[(6, 11, 16), bool], Tensor[(9, 13, 8), int16], Tensor[(936), float64], Tensor[(126), float64], Tensor[(80), float64], Tensor[(45), uint8], Tensor[(126), float64], Tensor[(1, 11, 16), float64], Tensor[(2, 8, 5), float64], Tensor[(3, 4, 15), int32]) {
    %503 = cast(%var_2079, dtype="bool") /* ty=Tensor[(1, 11, 16), bool] */;
    %504 = cast(%var_2080, dtype="bool") /* ty=Tensor[(6, 11, 16), bool] */;
    %505 = cast(%var_2087, dtype="float64") /* ty=Tensor[(936), float64] */;
    %506 = cast(%var_2088, dtype="float64") /* ty=Tensor[(126), float64] */;
    %507 = cast(meta[relay.Constant][41] /* ty=Tensor[(80), float64] */, dtype="float64") /* ty=Tensor[(80), float64] */;
    %508 = reshape(%505, newshape=[9, 13, 8]) /* ty=Tensor[(9, 13, 8), float64] */;
    %509 = reshape(%506, newshape=[126]) /* ty=Tensor[(126), float64] */;
    %510 = reshape(%507, newshape=[1, 80]) /* ty=Tensor[(1, 80), float64] */;
    %511 = @func_734(%508, %509, %510) /* ty=(Tensor[(9, 13, 8), float64], Tensor[(9, 14), float64], Tensor[(126), float64], Tensor[(2, 8, 5), float64], Tensor[(9, 13, 8), int16], Tensor[(2, 8, 5), float64], Tensor[(1, 80), float64]) */;
    %512 = %511.4;
    %513 = cast(%512, dtype="float64") /* ty=Tensor[(9, 13, 8), float64] */;
    %514 = cast(%var_2088, dtype="float64") /* ty=Tensor[(126), float64] */;
    %515 = cast(meta[relay.Constant][41] /* ty=Tensor[(80), float64] */, dtype="float64") /* ty=Tensor[(80), float64] */;
    %516 = reshape(%513, newshape=[9, 13, 8]) /* ty=Tensor[(9, 13, 8), float64] */;
    %517 = reshape(%514, newshape=[126]) /* ty=Tensor[(126), float64] */;
    %518 = reshape(%515, newshape=[1, 80]) /* ty=Tensor[(1, 80), float64] */;
    %519 = @func_734(%516, %517, %518) /* ty=(Tensor[(9, 13, 8), float64], Tensor[(9, 14), float64], Tensor[(126), float64], Tensor[(2, 8, 5), float64], Tensor[(9, 13, 8), int16], Tensor[(2, 8, 5), float64], Tensor[(1, 80), float64]) */;
    %520 = cast(%var_2079, dtype="float64") /* ty=Tensor[(1, 11, 16), float64] */;
    %521 = cast(meta[relay.Constant][41] /* ty=Tensor[(80), float64] */, dtype="float64") /* ty=Tensor[(80), float64] */;
    %522 = reshape(%521, newshape=[2, 8, 5]) /* ty=Tensor[(2, 8, 5), float64] */;
    %523 = @func_363(%522) /* ty=(Tensor[(2, 8, 5), float64],) */;
    %524 = cast(%var_2094, dtype="uint8") /* ty=Tensor[(45), uint8] */;
    %525 = cast(meta[relay.Constant][42] /* ty=Tensor[(30, 6), uint8] */, dtype="uint8") /* ty=Tensor[(30, 6), uint8] */;
    %526 = reshape(%524, newshape=[3, 1, 15]) /* ty=Tensor[(3, 1, 15), uint8] */;
    %527 = reshape(%525, newshape=[3, 4, 15]) /* ty=Tensor[(3, 4, 15), uint8] */;
    %528 = @func_1966(%526, %527) /* ty=(Tensor[(3, 4, 15), uint8],) */;
    %529 = %528.0;
    %530 = cast(meta[relay.Constant][42] /* ty=Tensor[(30, 6), uint8] */, dtype="int32") /* ty=Tensor[(30, 6), int32] */;
    %531 = shape_of(%529, dtype="int32") /* ty=Tensor[(3), int32] */;
    %532 = cast(%529, dtype="int32") /* ty=Tensor[(3, 4, 15), int32] */;
    %533 = dyn.reshape(%530, %531, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %534 = equal(%503, %504) /* ty=Tensor[(6, 11, 16), bool] */;
    %535 = %519.2;
    %536 = sin(%520) /* ty=Tensor[(1, 11, 16), float64] */;
    %537 = %523.0;
    %538 = minimum(%532, %533) /* ty=Tensor[(3, 4, 15), int32] */;
    (%534, %512, %var_2087, %var_2088, meta[relay.Constant][41] /* ty=Tensor[(80), float64] */, %var_2094, %535, %536, %537, %538)
  };
  %539(%var_2141, %var_2142, %var_2143, %var_2144, %var_2145) /* ty=(Tensor[(6, 11, 16), bool], Tensor[(9, 13, 8), int16], Tensor[(936), float64], Tensor[(126), float64], Tensor[(80), float64], Tensor[(45), uint8], Tensor[(126), float64], Tensor[(1, 11, 16), float64], Tensor[(2, 8, 5), float64], Tensor[(3, 4, 15), int32]) */
}

def @func_326(%var_324: Tensor[(11, 2, 9), float64]) -> (Tensor[(11, 2, 9), float64],) {
  @func_323(%var_324) /* ty=(Tensor[(11, 2, 9), float64],) */
}

def @func_7195(%var_7179: Tensor[(147), uint64], %var_7185: Tensor[(126), float64], %var_7188: Tensor[(1050), bool]) -> (Tensor[(6, 4, 14), float64], Tensor[(6, 4, 14), int16], Tensor[(7, 7, 3), bool], uint64, Tensor[(147), uint64], Tensor[(1, 10, 5), float64], Tensor[(50), float64], Tensor[(126), float64], Tensor[(10, 7, 15), int16], Tensor[(1050), bool]) {
  %540 = @func_6385() /* ty=(Tensor[(6, 4, 14), bool], Tensor[(6, 4, 14), bool]) */;
  %541 = %540.0;
  %542 = cast(meta[relay.Constant][43] /* ty=Tensor[(6, 4, 14), bool] */, dtype="float64") /* ty=Tensor[(6, 4, 14), float64] */;
  %543 = shape_of(%541, dtype="int32") /* ty=Tensor[(3), int32] */;
  %544 = cast(%541, dtype="float64") /* ty=Tensor[(6, 4, 14), float64] */;
  %545 = dyn.reshape(%542, %543, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %546 = cast(%541, dtype="int16") /* ty=Tensor[(6, 4, 14), int16] */;
  %547 = shape_of(meta[relay.Constant][43] /* ty=Tensor[(6, 4, 14), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %548 = cast(meta[relay.Constant][43] /* ty=Tensor[(6, 4, 14), bool] */, dtype="int16") /* ty=Tensor[(6, 4, 14), int16] */;
  %549 = dyn.reshape(%546, %547, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %550 = cast(meta[relay.Constant][44] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %551 = cast(%var_7179, dtype="uint64") /* ty=Tensor[(147), uint64] */;
  %552 = reshape(%550, newshape=[]) /* ty=uint64 */;
  %553 = reshape(%551, newshape=[7, 7, 3]) /* ty=Tensor[(7, 7, 3), uint64] */;
  %554 = @func_2833(%552, %553) /* ty=(Tensor[(7, 7, 3), bool],) */;
  %555 = cast(meta[relay.Constant][45] /* ty=Tensor[(50), float64] */, dtype="float64") /* ty=Tensor[(50), float64] */;
  %556 = cast(%var_7185, dtype="float64") /* ty=Tensor[(126), float64] */;
  %557 = reshape(%555, newshape=[1, 10, 5]) /* ty=Tensor[(1, 10, 5), float64] */;
  %558 = reshape(%556, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %559 = @func_908(%557, %558) /* ty=(Tensor[(1, 10, 5), float64], Tensor[(9, 14), float64], Tensor[(126), float64], Tensor[(16, 13, ?), int64], uint16, Tensor[(2, 8, 5), float64], Tensor[(80), float64]) */;
  %560 = cast(%var_7188, dtype="bool") /* ty=Tensor[(1050), bool] */;
  %561 = cast(%var_7188, dtype="bool") /* ty=Tensor[(1050), bool] */;
  %562 = cast(%var_7188, dtype="bool") /* ty=Tensor[(1050), bool] */;
  %563 = reshape(%560, newshape=[10, 7, 15]) /* ty=Tensor[(10, 7, 15), bool] */;
  %564 = reshape(%561, newshape=[10, 7, 15]) /* ty=Tensor[(10, 7, 15), bool] */;
  %565 = reshape(%562, newshape=[10, 7, 15]) /* ty=Tensor[(10, 7, 15), bool] */;
  %566 = @func_5112(%563, %564, %565) /* ty=(Tensor[(10, 7, 15), float64], Tensor[(10, 7, 15), int16], Tensor[(10, 7, 15), float32]) */;
  %567 = divide(%544, %545) /* ty=Tensor[(6, 4, 14), float64] */;
  %568 = right_shift(%548, %549) /* ty=Tensor[(6, 4, 14), int16] */;
  %569 = %554.0;
  %570 = %559.0;
  %571 = %566.1;
  (%567, %568, %569, meta[relay.Constant][44] /* ty=uint64 */, %var_7179, %570, meta[relay.Constant][45] /* ty=Tensor[(50), float64] */, %var_7185, %571, %var_7188)
}

def @func_6533(%var_6531: Tensor[(126), float64]) -> (Tensor[(6, 4, 14), bool], Tensor[(2, 8, 5), float64], Tensor[(936), float64], Tensor[(126), float64], Tensor[(80), float64]) {
  @func_6530(%var_6531) /* ty=(Tensor[(6, 4, 14), bool], Tensor[(2, 8, 5), float64], Tensor[(936), float64], Tensor[(126), float64], Tensor[(80), float64]) */
}

def @func_2803(%var_2774: Tensor[(4, 6, 14), bool]) -> (Tensor[(4, 6, 14), int16], Tensor[(1, 10, 5), float64], Tensor[(50), float64], Tensor[(126), float64], Tensor[(4, 6, 14), float64]) {
  %572 = cast(meta[relay.Constant][46] /* ty=Tensor[(4, 6, 14), bool] */, dtype="bool") /* ty=Tensor[(4, 6, 14), bool] */;
  %573 = shape_of(%var_2774, dtype="int32") /* ty=Tensor[(3), int32] */;
  %574 = cast(%var_2774, dtype="bool") /* ty=Tensor[(4, 6, 14), bool] */;
  %575 = dyn.reshape(%572, %573, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %576 = logical_and(%574, %575) /* ty=Tensor[(4, 6, 14), bool] */;
  %577 = cast(meta[relay.Constant][47] /* ty=Tensor[(4, 6, 14), bool] */, dtype="uint16") /* ty=Tensor[(4, 6, 14), uint16] */;
  %578 = shape_of(%576, dtype="int32") /* ty=Tensor[(3), int32] */;
  %579 = cast(%576, dtype="uint16") /* ty=Tensor[(4, 6, 14), uint16] */;
  %580 = dyn.reshape(%577, %578, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %581 = minimum(%579, %580) /* ty=Tensor[(4, 6, 14), uint16] */;
  %582 = cast(%576, dtype="int16") /* ty=Tensor[(4, 6, 14), int16] */;
  %583 = shape_of(%581, dtype="int32") /* ty=Tensor[(3), int32] */;
  %584 = cast(%581, dtype="int16") /* ty=Tensor[(4, 6, 14), int16] */;
  %585 = dyn.reshape(%582, %583, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %586 = cast(meta[relay.Constant][48] /* ty=Tensor[(50), float64] */, dtype="float64") /* ty=Tensor[(50), float64] */;
  %587 = cast(meta[relay.Constant][49] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
  %588 = reshape(%586, newshape=[1, 10, 5]) /* ty=Tensor[(1, 10, 5), float64] */;
  %589 = reshape(%587, newshape=[126]) /* ty=Tensor[(126), float64] */;
  %590 = @func_908(%588, %589) /* ty=(Tensor[(1, 10, 5), float64], Tensor[(9, 14), float64], Tensor[(126), float64], Tensor[(16, 13, ?), int64], uint16, Tensor[(2, 8, 5), float64], Tensor[(80), float64]) */;
  %591 = cast(%581, dtype="float64") /* ty=Tensor[(4, 6, 14), float64] */;
  %592 = right_shift(%584, %585) /* ty=Tensor[(4, 6, 14), int16] */;
  %593 = %590.0;
  %594 = cos(%591) /* ty=Tensor[(4, 6, 14), float64] */;
  (%592, %593, meta[relay.Constant][48] /* ty=Tensor[(50), float64] */, meta[relay.Constant][49] /* ty=Tensor[(126), float64] */, %594)
}

def @func_6626() -> (Tensor[(6, 4, 14), bool],) {
  @func_6624() /* ty=(Tensor[(6, 4, 14), bool],) */
}

def @func_6387() -> (Tensor[(6, 4, 14), bool], Tensor[(6, 4, 14), bool]) {
  @func_6385() /* ty=(Tensor[(6, 4, 14), bool], Tensor[(6, 4, 14), bool]) */
}

def @func_3138(%var_3135: Tensor[(3, 8, 9), float64], %var_3136: Tensor[(3, 8, 9), float64], %var_3137: Tensor[(80), float64]) -> (Tensor[(126), float64], Tensor[(50), float64], Tensor[(21, 6), float64], Tensor[(126), float64], Tensor[(936), float64], Tensor[(80), float64], Tensor[(2, 8, 5), float64], Tensor[(3, 8, 9), bool]) {
  %625 = fn (%var_3074: Tensor[(3, 8, 9), float64], %var_3082: Tensor[(3, 8, 9), float64], %var_3093: Tensor[(80), float64]) -> (Tensor[(126), float64], Tensor[(50), float64], Tensor[(21, 6), float64], Tensor[(126), float64], Tensor[(936), float64], Tensor[(80), float64], Tensor[(2, 8, 5), float64], Tensor[(3, 8, 9), bool]) {
    %595 = cast(meta[relay.Constant][50] /* ty=Tensor[(50), float64] */, dtype="float64") /* ty=Tensor[(50), float64] */;
    %596 = cast(meta[relay.Constant][51] /* ty=Tensor[(21, 6), float64] */, dtype="float64") /* ty=Tensor[(21, 6), float64] */;
    %597 = reshape(%595, newshape=[1, 10, 5]) /* ty=Tensor[(1, 10, 5), float64] */;
    %598 = reshape(%596, newshape=[126]) /* ty=Tensor[(126), float64] */;
    %599 = @func_908(%597, %598) /* ty=(Tensor[(1, 10, 5), float64], Tensor[(9, 14), float64], Tensor[(126), float64], Tensor[(16, 13, ?), int64], uint16, Tensor[(2, 8, 5), float64], Tensor[(80), float64]) */;
    %600 = cast(meta[relay.Constant][52] /* ty=Tensor[(936), float64] */, dtype="float64") /* ty=Tensor[(936), float64] */;
    %601 = %599.2;
    %602 = cast(%601, dtype="float64") /* ty=Tensor[(126), float64] */;
    %603 = cast(%var_3093, dtype="float64") /* ty=Tensor[(80), float64] */;
    %604 = reshape(%600, newshape=[9, 13, 8]) /* ty=Tensor[(9, 13, 8), float64] */;
    %605 = reshape(%602, newshape=[126]) /* ty=Tensor[(126), float64] */;
    %606 = reshape(%603, newshape=[1, 80]) /* ty=Tensor[(1, 80), float64] */;
    %607 = @func_734(%604, %605, %606) /* ty=(Tensor[(9, 13, 8), float64], Tensor[(9, 14), float64], Tensor[(126), float64], Tensor[(2, 8, 5), float64], Tensor[(9, 13, 8), int16], Tensor[(2, 8, 5), float64], Tensor[(1, 80), float64]) */;
    %608 = cast(%var_3093, dtype="float64") /* ty=Tensor[(80), float64] */;
    %609 = reshape(%608, newshape=[80]) /* ty=Tensor[(80), float64] */;
    %610 = @func_1900(%609) /* ty=(Tensor[(2, 8, 5), float64], Tensor[(80), float64], Tensor[(7, 14, 5), float32]) */;
    %611 = cast(%var_3074, dtype="float64") /* ty=Tensor[(3, 8, 9), float64] */;
    %612 = log10(%611) /* ty=Tensor[(3, 8, 9), float64] */;
    %613 = cast(%var_3082, dtype="uint64") /* ty=Tensor[(3, 8, 9), uint64] */;
    %614 = shape_of(%612, dtype="int32") /* ty=Tensor[(3), int32] */;
    %615 = cast(%612, dtype="uint64") /* ty=Tensor[(3, 8, 9), uint64] */;
    %616 = dyn.reshape(%613, %614, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %617 = multiply(%615, %616) /* ty=Tensor[(3, 8, 9), uint64] */;
    %618 = cast(%617, dtype="bool") /* ty=Tensor[(3, 8, 9), bool] */;
    %619 = shape_of(%612, dtype="int32") /* ty=Tensor[(3), int32] */;
    %620 = cast(%612, dtype="bool") /* ty=Tensor[(3, 8, 9), bool] */;
    %621 = dyn.reshape(%618, %619, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %622 = %607.2;
    %623 = %610.0;
    %624 = less_equal(%620, %621) /* ty=Tensor[(3, 8, 9), bool] */;
    (%601, meta[relay.Constant][50] /* ty=Tensor[(50), float64] */, meta[relay.Constant][51] /* ty=Tensor[(21, 6), float64] */, %622, meta[relay.Constant][52] /* ty=Tensor[(936), float64] */, %var_3093, %623, %624)
  };
  %625(%var_3135, %var_3136, %var_3137) /* ty=(Tensor[(126), float64], Tensor[(50), float64], Tensor[(21, 6), float64], Tensor[(126), float64], Tensor[(936), float64], Tensor[(80), float64], Tensor[(2, 8, 5), float64], Tensor[(3, 8, 9), bool]) */
}

def @func_5585(%var_5581: Tensor[(10, 4, 14), bool], %var_5582: Tensor[(832), int8], %var_5583: Tensor[(26, 5), float64], %var_5584: Tensor[(616), float32]) -> (Tensor[(10, 4, 14), bool], Tensor[(10, 13), float64], Tensor[(832), int8], Tensor[(26, 5), float64], Tensor[(1, 4, 14), float64], Tensor[(7, 3, 2), float64], Tensor[(616), float32]) {
  @func_5579(%var_5581, %var_5582, %var_5583, %var_5584) /* ty=(Tensor[(10, 4, 14), bool], Tensor[(10, 13), float64], Tensor[(832), int8], Tensor[(26, 5), float64], Tensor[(1, 4, 14), float64], Tensor[(7, 3, 2), float64], Tensor[(616), float32]) */
}

def @func_6695() -> (Tensor[(6, 4, 14), bool],) {
  %626 = @func_5906() /* ty=(Tensor[(6, 4, 14), bool],) */;
  %627 = %626.0;
  (%627,)
}

def @func_6831(%var_6830: Tensor[(198), float64]) -> (Tensor[(6, 4, 14), bool], Tensor[(11, 2, 9), float64], Tensor[(198), float64]) {
  %634 = fn (%var_6808: Tensor[(198), float64]) -> (Tensor[(6, 4, 14), bool], Tensor[(11, 2, 9), float64], Tensor[(198), float64]) {
    %628 = @func_6385() /* ty=(Tensor[(6, 4, 14), bool], Tensor[(6, 4, 14), bool]) */;
    %629 = cast(%var_6808, dtype="float64") /* ty=Tensor[(198), float64] */;
    %630 = reshape(%629, newshape=[11, 2, 9]) /* ty=Tensor[(11, 2, 9), float64] */;
    %631 = @func_323(%630) /* ty=(Tensor[(11, 2, 9), float64],) */;
    %632 = %628.1;
    %633 = %631.0;
    (%632, %633, %var_6808)
  };
  %634(%var_6830) /* ty=(Tensor[(6, 4, 14), bool], Tensor[(11, 2, 9), float64], Tensor[(198), float64]) */
}

def @func_5549(%var_5545: Tensor[(8, 11, 11), float64]) -> (Tensor[(8, 11, 11), float64],) {
  %635 = cast(%var_5545, dtype="float64") /* ty=Tensor[(8, 11, 11), float64] */;
  %636 = exp(%635) /* ty=Tensor[(8, 11, 11), float64] */;
  (%636,)
}

def @func_5950(%var_5948: Tensor[(8, 4, 14), float32]) -> (Tensor[(2, 8, 5), float64], Tensor[(80), float64], Tensor[(8, 4, 14), uint8], Tensor[(6, 4, 14), bool]) {
  @func_5947(%var_5948) /* ty=(Tensor[(2, 8, 5), float64], Tensor[(80), float64], Tensor[(8, 4, 14), uint8], Tensor[(6, 4, 14), bool]) */
}

def @func_1969(%var_1967: Tensor[(3, 1, 15), uint8], %var_1968: Tensor[(3, 4, 15), uint8]) -> (Tensor[(3, 4, 15), uint8],) {
  %640 = fn (%var_1961: Tensor[(3, 1, 15), uint8], %var_1962: Tensor[(3, 4, 15), uint8]) -> (Tensor[(3, 4, 15), uint8],) {
    %637 = cast(%var_1961, dtype="uint8") /* ty=Tensor[(3, 1, 15), uint8] */;
    %638 = cast(%var_1962, dtype="uint8") /* ty=Tensor[(3, 4, 15), uint8] */;
    %639 = logical_xor(%637, %638) /* ty=Tensor[(3, 4, 15), uint8] */;
    (%639,)
  };
  %640(%var_1967, %var_1968) /* ty=(Tensor[(3, 4, 15), uint8],) */
}

def @func_2389(%var_2387: Tensor[(6, 12, 5), float32]) -> Tensor[(6, 12, 5), float32] {
  @func_2386(%var_2387) /* ty=Tensor[(6, 12, 5), float32] */
}

def @func_878(%var_877: Tensor[(4, 6, 7), int32]) -> (Tensor[(4, 6, 7), bool], Tensor[(1, 80), float64], Tensor[(126), float64], Tensor[(80), float64], Tensor[(4, 6, 7), float64], Tensor[(468, 2), float32]) {
  %670 = fn (%var_830: Tensor[(4, 6, 7), int32]) -> (Tensor[(4, 6, 7), bool], Tensor[(1, 80), float64], Tensor[(126), float64], Tensor[(80), float64], Tensor[(4, 6, 7), float64], Tensor[(468, 2), float32]) {
    %641 = cast(meta[relay.Constant][53] /* ty=Tensor[(4, 6, 7), int32] */, dtype="bool") /* ty=Tensor[(4, 6, 7), bool] */;
    %642 = shape_of(%var_830, dtype="int32") /* ty=Tensor[(3), int32] */;
    %643 = cast(%var_830, dtype="bool") /* ty=Tensor[(4, 6, 7), bool] */;
    %644 = dyn.reshape(%641, %642, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %645 = cast(meta[relay.Constant][54] /* ty=Tensor[(468, 2), float64] */, dtype="float64") /* ty=Tensor[(468, 2), float64] */;
    %646 = cast(meta[relay.Constant][55] /* ty=Tensor[(126), float64] */, dtype="float64") /* ty=Tensor[(126), float64] */;
    %647 = cast(meta[relay.Constant][56] /* ty=Tensor[(80), float64] */, dtype="float64") /* ty=Tensor[(80), float64] */;
    %648 = reshape(%645, newshape=[9, 13, 8]) /* ty=Tensor[(9, 13, 8), float64] */;
    %649 = reshape(%646, newshape=[126]) /* ty=Tensor[(126), float64] */;
    %650 = reshape(%647, newshape=[1, 80]) /* ty=Tensor[(1, 80), float64] */;
    %651 = @func_734(%648, %649, %650) /* ty=(Tensor[(9, 13, 8), float64], Tensor[(9, 14), float64], Tensor[(126), float64], Tensor[(2, 8, 5), float64], Tensor[(9, 13, 8), int16], Tensor[(2, 8, 5), float64], Tensor[(1, 80), float64]) */;
    %652 = cast(meta[relay.Constant][53] /* ty=Tensor[(4, 6, 7), int32] */, dtype="float64") /* ty=Tensor[(4, 6, 7), float64] */;
    %653 = shape_of(%var_830, dtype="int32") /* ty=Tensor[(3), int32] */;
    %654 = cast(%var_830, dtype="float64") /* ty=Tensor[(4, 6, 7), float64] */;
    %655 = dyn.reshape(%652, %653, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %656 = cast(meta[relay.Constant][54] /* ty=Tensor[(468, 2), float64] */, dtype="float32") /* ty=Tensor[(468, 2), float32] */;
    %657 = sin(%656) /* ty=Tensor[(468, 2), float32] */;
    %658 = cast(%657, dtype="float32") /* ty=Tensor[(468, 2), float32] */;
    %659 = exp(%658) /* ty=Tensor[(468, 2), float32] */;
    %660 = cast(%659, dtype="float64") /* ty=Tensor[(468, 2), float64] */;
    %661 = log10(%660) /* ty=Tensor[(468, 2), float64] */;
    %662 = cast(%661, dtype="float32") /* ty=Tensor[(468, 2), float32] */;
    %663 = shape_of(%659, dtype="int32") /* ty=Tensor[(2), int32] */;
    %664 = cast(%659, dtype="float32") /* ty=Tensor[(468, 2), float32] */;
    %665 = dyn.reshape(%662, %663, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %666 = greater_equal(%643, %644) /* ty=Tensor[(4, 6, 7), bool] */;
    %667 = %651.6;
    %668 = divide(%654, %655) /* ty=Tensor[(4, 6, 7), float64] */;
    %669 = power(%664, %665) /* ty=Tensor[(468, 2), float32] */;
    (%666, %667, meta[relay.Constant][55] /* ty=Tensor[(126), float64] */, meta[relay.Constant][56] /* ty=Tensor[(80), float64] */, %668, %669)
  };
  %670(%var_877) /* ty=(Tensor[(4, 6, 7), bool], Tensor[(1, 80), float64], Tensor[(126), float64], Tensor[(80), float64], Tensor[(4, 6, 7), float64], Tensor[(468, 2), float32]) */
}

def @func_5907() -> (Tensor[(6, 4, 14), bool],) {
  %675 = fn () -> (Tensor[(6, 4, 14), bool],) {
    %671 = @func_5540() /* ty=Tensor[(1, 4, 14), bool] */;
    %672 = cast(%671, dtype="bool") /* ty=Tensor[(1, 4, 14), bool] */;
    %673 = cast(meta[relay.Constant][57] /* ty=Tensor[(6, 4, 14), bool] */, dtype="bool") /* ty=Tensor[(6, 4, 14), bool] */;
    %674 = logical_or(%672, %673) /* ty=Tensor[(6, 4, 14), bool] */;
    (%674,)
  };
  %675() /* ty=(Tensor[(6, 4, 14), bool],) */
}

def @func_1021(%var_1020: Tensor[(16, 12, 16), float64]) -> (Tensor[(16, 12, 16), float64],) {
  %678 = fn (%var_985: Tensor[(16, 12, 16), float64]) -> (Tensor[(16, 12, 16), float64],) {
    %676 = cast(%var_985, dtype="float64") /* ty=Tensor[(16, 12, 16), float64] */;
    %677 = cosh(%676) /* ty=Tensor[(16, 12, 16), float64] */;
    (%677,)
  };
  %678(%var_1020) /* ty=(Tensor[(16, 12, 16), float64],) */
}

def @func_1474(%var_1472: Tensor[(16, 4, 13), int8], %var_1473: Tensor[(130), float64]) -> (Tensor[(16, 4, 13), int8], Tensor[(10, 13), float64], Tensor[(130), float64]) {
  %688 = fn (%var_1446: Tensor[(16, 4, 13), int8], %var_1469: Tensor[(130), float64]) -> (Tensor[(16, 4, 13), int8], Tensor[(10, 13), float64], Tensor[(130), float64]) {
    %679 = cast(meta[relay.Constant][58] /* ty=Tensor[(16, 4, 13), int8] */, dtype="int8") /* ty=Tensor[(16, 4, 13), int8] */;
    %680 = shape_of(%var_1446, dtype="int32") /* ty=Tensor[(3), int32] */;
    %681 = cast(%var_1446, dtype="int8") /* ty=Tensor[(16, 4, 13), int8] */;
    %682 = dyn.reshape(%679, %680, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %683 = cast(%var_1469, dtype="float64") /* ty=Tensor[(130), float64] */;
    %684 = reshape(%683, newshape=[10, 13]) /* ty=Tensor[(10, 13), float64] */;
    %685 = @func_1442(%684) /* ty=(Tensor[(10, 13), float64],) */;
    %686 = logical_xor(%681, %682) /* ty=Tensor[(16, 4, 13), int8] */;
    %687 = %685.0;
    (%686, %687, %var_1469)
  };
  %688(%var_1472, %var_1473) /* ty=(Tensor[(16, 4, 13), int8], Tensor[(10, 13), float64], Tensor[(130), float64]) */
}

def @func_5475(%var_5472: Tensor[(14, 16, 13), float64], %var_5473: Tensor[(14, 16, 13), float64], %var_5474: Tensor[(180), uint8]) -> (Tensor[(14, 16, 13), float64], Tensor[(14, 16, 13), bool], Tensor[(180, 1), uint8], Tensor[(480), uint32], Tensor[(45), uint8], Tensor[(180), uint8], Tensor[(832), int8]) {
  %722 = fn (%var_5426: Tensor[(14, 16, 13), float64], %var_5450: Tensor[(14, 16, 13), float64], %var_5468: Tensor[(180), uint8]) -> (Tensor[(14, 16, 13), float64], Tensor[(14, 16, 13), bool], Tensor[(180, 1), uint8], Tensor[(480), uint32], Tensor[(45), uint8], Tensor[(180), uint8], Tensor[(832), int8]) {
    %689 = cast(meta[relay.Constant][59] /* ty=Tensor[(14, 16, 13), float64] */, dtype="float64") /* ty=Tensor[(14, 16, 13), float64] */;
    %690 = shape_of(%var_5426, dtype="int32") /* ty=Tensor[(3), int32] */;
    %691 = cast(%var_5426, dtype="float64") /* ty=Tensor[(14, 16, 13), float64] */;
    %692 = dyn.reshape(%689, %690, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %693 = floor_divide(%691, %692) /* ty=Tensor[(14, 16, 13), float64] */;
    %694 = cast(%693, dtype="float64") /* ty=Tensor[(14, 16, 13), float64] */;
    %695 = shape_of(meta[relay.Constant][59] /* ty=Tensor[(14, 16, 13), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %696 = cast(meta[relay.Constant][59] /* ty=Tensor[(14, 16, 13), float64] */, dtype="float64") /* ty=Tensor[(14, 16, 13), float64] */;
    %697 = dyn.reshape(%694, %695, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %698 = cast(%var_5426, dtype="float32") /* ty=Tensor[(14, 16, 13), float32] */;
    %699 = rsqrt(%698) /* ty=Tensor[(14, 16, 13), float32] */;
    %700 = cast(%699, dtype="float64") /* ty=Tensor[(14, 16, 13), float64] */;
    %701 = log10(%700) /* ty=Tensor[(14, 16, 13), float64] */;
    %702 = cast(%var_5450, dtype="bool") /* ty=Tensor[(14, 16, 13), bool] */;
    %703 = shape_of(%701, dtype="int32") /* ty=Tensor[(3), int32] */;
    %704 = cast(%701, dtype="bool") /* ty=Tensor[(14, 16, 13), bool] */;
    %705 = dyn.reshape(%702, %703, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %706 = cast(meta[relay.Constant][60] /* ty=Tensor[(480), uint32] */, dtype="uint32") /* ty=Tensor[(480), uint32] */;
    %707 = cast(meta[relay.Constant][60] /* ty=Tensor[(480), uint32] */, dtype="uint32") /* ty=Tensor[(480), uint32] */;
    %708 = cast(meta[relay.Constant][61] /* ty=Tensor[(45), uint8] */, dtype="uint8") /* ty=Tensor[(45), uint8] */;
    %709 = cast(%var_5468, dtype="uint8") /* ty=Tensor[(180), uint8] */;
    %710 = cast(meta[relay.Constant][60] /* ty=Tensor[(480), uint32] */, dtype="uint32") /* ty=Tensor[(480), uint32] */;
    %711 = cast(meta[relay.Constant][62] /* ty=Tensor[(832), int8] */, dtype="int8") /* ty=Tensor[(832), int8] */;
    %712 = reshape(%706, newshape=[3, 16, 10]) /* ty=Tensor[(3, 16, 10), uint32] */;
    %713 = reshape(%707, newshape=[3, 16, 10]) /* ty=Tensor[(3, 16, 10), uint32] */;
    %714 = reshape(%708, newshape=[45]) /* ty=Tensor[(45), uint8] */;
    %715 = reshape(%709, newshape=[180, 1]) /* ty=Tensor[(180, 1), uint8] */;
    %716 = reshape(%710, newshape=[3, 16, 10]) /* ty=Tensor[(3, 16, 10), uint32] */;
    %717 = reshape(%711, newshape=[208, 4]) /* ty=Tensor[(208, 4), int8] */;
    %718 = @func_2702(%712, %713, %714, %715, %716, %717) /* ty=(Tensor[(3, 16, 10), bool], Tensor[(3, 4, 15), uint8], Tensor[(45), uint8], Tensor[(180, 1), uint8], Tensor[(3, 16, 10), uint8], Tensor[(130), float64], Tensor[(208, 4), int8], Tensor[(130), float64]) */;
    %719 = power(%696, %697) /* ty=Tensor[(14, 16, 13), float64] */;
    %720 = greater_equal(%704, %705) /* ty=Tensor[(14, 16, 13), bool] */;
    %721 = %718.3;
    (%719, %720, %721, meta[relay.Constant][60] /* ty=Tensor[(480), uint32] */, meta[relay.Constant][61] /* ty=Tensor[(45), uint8] */, %var_5468, meta[relay.Constant][62] /* ty=Tensor[(832), int8] */)
  };
  %722(%var_5472, %var_5473, %var_5474) /* ty=(Tensor[(14, 16, 13), float64], Tensor[(14, 16, 13), bool], Tensor[(180, 1), uint8], Tensor[(480), uint32], Tensor[(45), uint8], Tensor[(180), uint8], Tensor[(832), int8]) */
}

def @func_7039(%var_7036: Tensor[(1050), bool], %var_7037: Tensor[(840), bool], %var_7038: Tensor[(6, 4, 14), float32]) -> (Tensor[(10, 7, 15), float64], Tensor[(1050), bool], Tensor[(70, 15), float32], Tensor[(840), bool], Tensor[(6, 4, 14), uint32]) {
  @func_7034(%var_7036, %var_7037, %var_7038) /* ty=(Tensor[(10, 7, 15), float64], Tensor[(1050), bool], Tensor[(70, 15), float32], Tensor[(840), bool], Tensor[(6, 4, 14), uint32]) */
}

def @func_2386(%var_2375: Tensor[(6, 12, 5), float32]) -> Tensor[(6, 12, 5), float32] {
  %723 = cast(%var_2375, dtype="float32") /* ty=Tensor[(6, 12, 5), float32] */;
  acos(%723) /* ty=Tensor[(6, 12, 5), float32] */
}

def @func_5812(%var_5810: Tensor[(15, 4, 14), bool]) -> (Tensor[(15, 4, 14), float64],) {
  @func_5809(%var_5810) /* ty=(Tensor[(15, 4, 14), float64],) */
}

def @func_6385() -> (Tensor[(6, 4, 14), bool], Tensor[(6, 4, 14), bool]) {
  %724 = @func_6159() /* ty=(Tensor[(6, 4, 14), bool], Tensor[(6, 4, 14), bool]) */;
  %725 = @func_6104() /* ty=(Tensor[(6, 4, 14), bool],) */;
  %726 = %724.1;
  %727 = %725.0;
  (%726, %727)
}

def @func_2287(%var_2283: Tensor[(13, 5, 1), int16], %var_2284: Tensor[(1056), int64], %var_2285: Tensor[(936), float64], %var_2286: Tensor[(126, 1), float64]) -> (Tensor[(13, 5, 16), int16], Tensor[(9, 13, 8), int16], Tensor[(176), int64], Tensor[(1056), int64], Tensor[(936), float64], Tensor[(126, 1), float64], Tensor[(45), uint8]) {
  @func_2281(%var_2283, %var_2284, %var_2285, %var_2286) /* ty=(Tensor[(13, 5, 16), int16], Tensor[(9, 13, 8), int16], Tensor[(176), int64], Tensor[(1056), int64], Tensor[(936), float64], Tensor[(126, 1), float64], Tensor[(45), uint8]) */
}

def @func_6945() -> Tensor[(6, 4, 14), bool] {
  %728 = @func_6624() /* ty=(Tensor[(6, 4, 14), bool],) */;
  %728.0
}

def @func_908(%var_882: Tensor[(1, 10, 5), float64], %var_886: Tensor[(126), float64]) -> (Tensor[(1, 10, 5), float64], Tensor[(9, 14), float64], Tensor[(126), float64], Tensor[(16, 13, ?), int64], uint16, Tensor[(2, 8, 5), float64], Tensor[(80), float64]) {
  %729 = cast(%var_882, dtype="float64") /* ty=Tensor[(1, 10, 5), float64] */;
  %730 = cast(%var_886, dtype="float64") /* ty=Tensor[(126), float64] */;
  %731 = reshape(%730, newshape=[9, 14]) /* ty=Tensor[(9, 14), float64] */;
  %732 = @func_44(%731) /* ty=(Tensor[(9, 14), float64],) */;
  %733 = cast(meta[relay.Constant][63] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %734 = reshape(%733, newshape=[]) /* ty=uint16 */;
  %735 = cast(meta[relay.Constant][64] /* ty=Tensor[(80), float64] */, dtype="float64") /* ty=Tensor[(80), float64] */;
  %736 = reshape(%735, newshape=[2, 8, 5]) /* ty=Tensor[(2, 8, 5), float64] */;
  %737 = @func_363(%736) /* ty=(Tensor[(2, 8, 5), float64],) */;
  %738 = acosh(%729) /* ty=Tensor[(1, 10, 5), float64] */;
  %739 = %732.0;
  %740 = @func_594(%734) /* ty=Tensor[(16, 13, ?), int64] */;
  %741 = %737.0;
  (%738, %739, %var_886, %740, meta[relay.Constant][63] /* ty=uint16 */, %741, meta[relay.Constant][64] /* ty=Tensor[(80), float64] */)
}

def @func_7051() -> (Tensor[(6, 4, 14), bool],) {
  %742 = @func_6122() /* ty=(Tensor[(6, 4, 14), bool],) */;
  %743 = %742.0;
  (%743,)
}

def @func_6398() -> Tensor[(6, 4, 14), bool] {
  %744 = @func_6122() /* ty=(Tensor[(6, 4, 14), bool],) */;
  %744.0
}

def @func_6172(%var_6171: Tensor[(15, 8), float64]) -> (Tensor[(15, 8), float64],) {
  %747 = fn (%var_6166: Tensor[(15, 8), float64]) -> (Tensor[(15, 8), float64],) {
    %745 = cast(%var_6166, dtype="float64") /* ty=Tensor[(15, 8), float64] */;
    %746 = acosh(%745) /* ty=Tensor[(15, 8), float64] */;
    (%746,)
  };
  %747(%var_6171) /* ty=(Tensor[(15, 8), float64],) */
}

def @func_7230(%var_7215: Tensor[(8, 14, 9), float64]) -> (Tensor[(8, 14, 9), float64], Tensor[(80), float64], Tensor[(2, 40), float64]) {
  %748 = cast(meta[relay.Constant][65] /* ty=Tensor[(8, 14, 9), float64] */, dtype="float64") /* ty=Tensor[(8, 14, 9), float64] */;
  %749 = shape_of(%var_7215, dtype="int32") /* ty=Tensor[(3), int32] */;
  %750 = cast(%var_7215, dtype="float64") /* ty=Tensor[(8, 14, 9), float64] */;
  %751 = dyn.reshape(%748, %749, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %752 = cast(meta[relay.Constant][66] /* ty=Tensor[(2, 40), float64] */, dtype="float64") /* ty=Tensor[(2, 40), float64] */;
  %753 = reshape(%752, newshape=[20, 4]) /* ty=Tensor[(20, 4), float64] */;
  %754 = @func_5621(%753) /* ty=(Tensor[(1, 4, 14), bool], Tensor[(80), float64], Tensor[(20, 4), float64]) */;
  %755 = floor_divide(%750, %751) /* ty=Tensor[(8, 14, 9), float64] */;
  %756 = %754.1;
  (%755, %756, meta[relay.Constant][66] /* ty=Tensor[(2, 40), float64] */)
}

def @func_5552(%var_5550: Tensor[(8, 11, 11), float64]) -> (Tensor[(8, 11, 11), float64],) {
  @func_5549(%var_5550) /* ty=(Tensor[(8, 11, 11), float64],) */
}

def @func_6400() -> Tensor[(6, 4, 14), bool] {
  @func_6398() /* ty=Tensor[(6, 4, 14), bool] */
}

def @func_7053() -> (Tensor[(6, 4, 14), bool],) {
  @func_7051() /* ty=(Tensor[(6, 4, 14), bool],) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

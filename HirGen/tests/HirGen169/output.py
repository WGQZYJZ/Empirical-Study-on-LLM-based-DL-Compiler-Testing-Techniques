import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_10 = relay.var("var_10", dtype = "float64", shape = (9, 14))#candidate|10|(9, 14)|var|float64
uop_11 = relay.asinh(var_10.astype('float64')) # shape=(9, 14)
output = relay.Tuple([uop_11,])
output2 = relay.Tuple([uop_11,])
func_44 = relay.Function([var_10,], output)
mod['func_44'] = func_44
mod = relay.transform.InferType()(mod)
var_45 = relay.var("var_45", dtype = "float64", shape = (9, 14))#candidate|45|(9, 14)|var|float64
output = func_44(var_45)
func_46 = relay.Function([var_45], output)
mutated_mod['func_46'] = func_46
mutated_mod = relay.transform.InferType()(mutated_mod)
var_317 = relay.var("var_317", dtype = "float64", shape = (11, 2, 9))#candidate|317|(11, 2, 9)|var|float64
uop_318 = relay.atan(var_317.astype('float64')) # shape=(11, 2, 9)
output = relay.Tuple([uop_318,])
output2 = relay.Tuple([uop_318,])
func_323 = relay.Function([var_317,], output)
mod['func_323'] = func_323
mod = relay.transform.InferType()(mod)
mutated_mod['func_323'] = func_323
mutated_mod = relay.transform.InferType()(mutated_mod)
var_324 = relay.var("var_324", dtype = "float64", shape = (11, 2, 9))#candidate|324|(11, 2, 9)|var|float64
func_323_call = mutated_mod.get_global_var('func_323')
call_325 = func_323_call(var_324)
output = call_325
func_326 = relay.Function([var_324], output)
mutated_mod['func_326'] = func_326
mutated_mod = relay.transform.InferType()(mutated_mod)
var_360 = relay.var("var_360", dtype = "float64", shape = (2, 8, 5))#candidate|360|(2, 8, 5)|var|float64
uop_361 = relay.sinh(var_360.astype('float64')) # shape=(2, 8, 5)
output = relay.Tuple([uop_361,])
output2 = relay.Tuple([uop_361,])
func_363 = relay.Function([var_360,], output)
mod['func_363'] = func_363
mod = relay.transform.InferType()(mod)
var_364 = relay.var("var_364", dtype = "float64", shape = (2, 8, 5))#candidate|364|(2, 8, 5)|var|float64
output = func_363(var_364)
func_365 = relay.Function([var_364], output)
mutated_mod['func_365'] = func_365
mutated_mod = relay.transform.InferType()(mutated_mod)
var_577 = relay.var("var_577", dtype = "uint16", shape = ())#candidate|577|()|var|uint16
const_578 = relay.const([[[6],[-7],[-9],[-8],[9],[-8],[-6],[8],[-7],[-2],[-7],[9],[-8]],[[-6],[-3],[-6],[-9],[9],[5],[2],[3],[-6],[6],[4],[9],[4]],[[10],[-3],[-4],[-7],[-2],[-5],[-5],[10],[4],[-8],[3],[5],[-8]],[[-5],[-3],[-4],[2],[-5],[6],[5],[-4],[-2],[7],[-1],[-7],[-7]],[[2],[2],[-8],[-8],[-3],[8],[-10],[6],[-5],[-8],[3],[10],[-2]],[[-2],[-1],[-9],[-10],[-5],[-5],[-3],[-7],[-8],[4],[-5],[-4],[1]],[[-2],[9],[5],[5],[10],[-1],[7],[1],[10],[4],[3],[-4],[-5]],[[9],[3],[9],[1],[1],[1],[2],[-4],[-2],[-8],[2],[-6],[-3]],[[8],[7],[8],[5],[4],[-9],[3],[-10],[10],[6],[2],[2],[2]],[[8],[-2],[-7],[2],[-6],[-10],[4],[-4],[-2],[4],[1],[-4],[7]],[[-6],[8],[5],[-4],[-8],[-7],[-6],[1],[-3],[-3],[-9],[-6],[-7]],[[-9],[4],[6],[5],[8],[9],[4],[4],[10],[-6],[8],[-7],[8]],[[6],[-10],[-1],[-3],[-5],[6],[3],[9],[-5],[-3],[-6],[-9],[-3]],[[6],[9],[-5],[10],[-9],[8],[-7],[-1],[2],[-7],[9],[-4],[9]],[[3],[-6],[6],[-6],[6],[2],[-1],[-8],[-1],[2],[9],[7],[7]],[[-6],[-8],[4],[-4],[8],[2],[4],[7],[5],[-5],[7],[-9],[-1]]], dtype = "uint16")#candidate|578|(16, 13, 1)|const|uint16
bop_579 = relay.multiply(var_577.astype('uint16'), const_578.astype('uint16')) # shape=(16, 13, 1)
bop_588 = relay.bitwise_and(bop_579.astype('int64'), relay.reshape(const_578.astype('int64'), relay.shape_of(bop_579))) # shape=(16, 13, 1)
output = bop_588
output2 = bop_588
func_594 = relay.Function([var_577,], output)
mod['func_594'] = func_594
mod = relay.transform.InferType()(mod)
mutated_mod['func_594'] = func_594
mutated_mod = relay.transform.InferType()(mutated_mod)
var_595 = relay.var("var_595", dtype = "uint16", shape = ())#candidate|595|()|var|uint16
func_594_call = mutated_mod.get_global_var('func_594')
call_596 = func_594_call(var_595)
output = call_596
func_597 = relay.Function([var_595], output)
mutated_mod['func_597'] = func_597
mutated_mod = relay.transform.InferType()(mutated_mod)
var_686 = relay.var("var_686", dtype = "float64", shape = (9, 13, 8))#candidate|686|(9, 13, 8)|var|float64
uop_687 = relay.log2(var_686.astype('float64')) # shape=(9, 13, 8)
uop_693 = relay.sigmoid(var_686.astype('float64')) # shape=(9, 13, 8)
func_44_call = mod.get_global_var('func_44')
func_46_call = mutated_mod.get_global_var('func_46')
var_697 = relay.var("var_697", dtype = "float64", shape = (126,))#candidate|697|(126,)|var|float64
call_696 = relay.TupleGetItem(func_44_call(relay.reshape(var_697.astype('float64'), [9, 14])), 0)
call_698 = relay.TupleGetItem(func_46_call(relay.reshape(var_697.astype('float64'), [9, 14])), 0)
func_363_call = mod.get_global_var('func_363')
func_365_call = mutated_mod.get_global_var('func_365')
var_705 = relay.var("var_705", dtype = "float64", shape = (1, 80))#candidate|705|(1, 80)|var|float64
call_704 = relay.TupleGetItem(func_363_call(relay.reshape(var_705.astype('float64'), [2, 8, 5])), 0)
call_706 = relay.TupleGetItem(func_365_call(relay.reshape(var_705.astype('float64'), [2, 8, 5])), 0)
bop_710 = relay.add(uop_687.astype('int16'), relay.reshape(var_686.astype('int16'), relay.shape_of(uop_687))) # shape=(9, 13, 8)
func_363_call = mod.get_global_var('func_363')
func_365_call = mutated_mod.get_global_var('func_365')
call_723 = relay.TupleGetItem(func_363_call(relay.reshape(call_704.astype('float64'), [2, 8, 5])), 0)
call_724 = relay.TupleGetItem(func_365_call(relay.reshape(call_704.astype('float64'), [2, 8, 5])), 0)
uop_731 = relay.atan(var_705.astype('float64')) # shape=(1, 80)
output = relay.Tuple([uop_693,call_696,var_697,call_704,bop_710,call_723,uop_731,])
output2 = relay.Tuple([uop_693,call_698,var_697,call_706,bop_710,call_724,uop_731,])
func_734 = relay.Function([var_686,var_697,var_705,], output)
mod['func_734'] = func_734
mod = relay.transform.InferType()(mod)
mutated_mod['func_734'] = func_734
mutated_mod = relay.transform.InferType()(mutated_mod)
func_734_call = mutated_mod.get_global_var('func_734')
var_736 = relay.var("var_736", dtype = "float64", shape = (9, 13, 8))#candidate|736|(9, 13, 8)|var|float64
var_737 = relay.var("var_737", dtype = "float64", shape = (126,))#candidate|737|(126,)|var|float64
var_738 = relay.var("var_738", dtype = "float64", shape = (1, 80))#candidate|738|(1, 80)|var|float64
call_735 = func_734_call(var_736,var_737,var_738,)
output = call_735
func_739 = relay.Function([var_736,var_737,var_738,], output)
mutated_mod['func_739'] = func_739
mutated_mod = relay.transform.InferType()(mutated_mod)
var_830 = relay.var("var_830", dtype = "int32", shape = (4, 6, 7))#candidate|830|(4, 6, 7)|var|int32
const_831 = relay.const([[[7,-7,-2,-6,-6,1,3],[7,-5,5,2,-4,-8,7],[4,-10,-3,1,-7,-6,-5],[6,4,5,8,9,5,-6],[10,1,-7,-6,-7,6,1],[8,2,3,-7,-7,-10,5]],[[-2,6,-6,7,-9,6,7],[1,-7,-5,3,6,10,-7],[2,6,4,-7,1,4,6],[-10,-3,2,-2,-8,8,-6],[-9,-9,-6,-6,-6,-1,-6],[1,-6,-6,3,-8,6,-9]],[[3,-3,8,-5,6,5,6],[-9,2,6,-10,-6,10,-8],[-3,3,10,-10,7,-3,7],[-4,-5,-9,2,4,8,7],[-5,4,-1,3,4,-2,-9],[3,4,-2,10,-7,-7,-6]],[[-10,-2,-9,-4,-5,2,2],[-10,10,8,-1,-4,-10,-3],[1,-1,-6,7,-9,-6,9],[4,3,-2,-7,8,9,-9],[2,-7,5,5,10,9,-2],[-4,4,-10,-3,-1,-3,8]]], dtype = "int32")#candidate|831|(4, 6, 7)|const|int32
bop_832 = relay.greater_equal(var_830.astype('bool'), relay.reshape(const_831.astype('bool'), relay.shape_of(var_830))) # shape=(4, 6, 7)
func_734_call = mod.get_global_var('func_734')
func_739_call = mutated_mod.get_global_var('func_739')
const_836 = relay.const([[4.901642,-5.795903],[-5.698352,1.688375],[9.230753,-0.260796],[6.951697,1.217454],[0.604934,-0.373852],[-8.076398,-6.091044],[3.940805,-8.441562],[-0.265979,-6.556355],[2.919871,7.098362],[-1.141943,-6.348925],[5.495095,0.899210],[9.036007,4.512726],[-5.298298,4.027684],[-6.296715,-9.422256],[6.197965,8.278191],[7.453056,5.108409],[-0.156667,-5.430856],[-5.750111,-2.329363],[5.671654,-1.130139],[4.070468,2.295964],[-2.634986,-7.747583],[3.787992,-3.333096],[-7.445468,-5.452268],[-3.731647,-2.652004],[-0.174164,4.061857],[3.615141,-2.992748],[-7.602575,5.741186],[-8.010971,9.113269],[5.546697,5.307134],[0.502839,0.513687],[6.942792,3.428564],[-3.631049,-2.022972],[7.962555,3.845343],[5.521682,1.425126],[-7.258223,4.082501],[-8.599312,4.947154],[4.473015,-6.146743],[2.367218,-0.041489],[3.973848,-1.369761],[6.684620,-1.933235],[-7.208818,9.161469],[8.845636,3.026159],[6.592477,-8.392195],[-8.641962,-5.403419],[-8.218698,-6.425715],[-1.431579,-0.088933],[-8.794365,1.351838],[2.021517,-1.116847],[7.911137,0.843444],[0.786319,4.455847],[-5.239305,-2.687596],[0.730514,-1.510957],[4.374789,6.862267],[5.328714,5.882892],[-6.596525,1.585002],[-3.982093,-7.668599],[8.667676,-8.049933],[-1.088332,8.656976],[6.248850,4.879286],[-8.139854,-7.993037],[-4.272421,-5.654289],[7.147676,-2.189422],[-0.406911,9.658904],[8.190568,1.167091],[8.925723,8.781257],[5.520183,-9.772378],[-2.727825,6.131861],[2.294239,-1.436543],[-8.281846,1.489538],[-0.814362,2.606364],[9.556854,1.157764],[-5.343209,8.469229],[-3.437123,-1.123835],[-4.911796,-9.015324],[-1.354932,2.356815],[0.180542,-4.598845],[-5.832630,0.799018],[1.912213,-3.230191],[6.604056,2.683695],[-9.514559,-6.042358],[-5.658648,-3.269646],[5.023733,9.608893],[-2.755667,-0.972296],[3.358553,7.781811],[-5.563740,-2.193395],[-3.308448,6.164199],[3.801150,3.782952],[7.334242,-2.188080],[-8.904810,-0.784361],[-7.546707,-4.378203],[2.300441,-4.685825],[9.556786,-0.528904],[0.601318,4.667196],[1.091924,6.818493],[7.755222,-2.119050],[-3.307292,-9.136770],[8.545432,5.230878],[5.182536,8.974041],[-5.582716,6.584553],[4.964119,5.454178],[-7.840309,-9.113154],[8.109167,-7.977725],[0.611159,-8.037334],[-3.152904,-0.010038],[5.754689,0.123179],[8.257595,4.457268],[-9.963815,2.974294],[7.283661,-2.556314],[5.387133,2.669427],[8.924095,-7.307939],[6.947523,-4.845409],[5.954090,7.474078],[-9.298858,5.883454],[0.869641,5.594380],[5.125322,-6.697556],[-8.533927,8.904200],[9.913221,-4.384976],[-7.663108,6.513824],[8.667857,2.962434],[0.470563,-9.711900],[6.237831,2.738979],[-1.904295,8.338288],[-8.603346,-5.221080],[-0.806258,-7.720388],[9.624573,-7.789628],[0.474248,4.879127],[-2.662388,-5.074996],[6.201462,7.242560],[-9.351224,-0.776255],[-6.076496,9.142847],[2.227338,1.186143],[3.015844,4.559059],[-3.856849,-6.207144],[-9.552959,6.223463],[9.802818,-7.869374],[-5.226887,2.166108],[-8.614833,3.762721],[9.042405,2.975757],[5.754980,7.037173],[6.754111,8.586394],[-8.839048,4.194625],[6.226114,4.530635],[-0.025998,2.064686],[-2.106711,-7.138782],[-9.463318,8.202683],[-8.700084,-4.086692],[7.253058,-0.488570],[3.298158,-0.844714],[0.547183,-1.058913],[-0.950053,3.934693],[4.974036,6.716947],[-3.945019,-8.247581],[-5.078191,-4.142440],[7.473661,-4.979106],[-7.844494,9.333620],[-5.603665,-6.316639],[9.788498,-2.113696],[-1.848253,6.834703],[-6.547242,4.666057],[-2.212803,-4.848892],[1.469478,4.514141],[8.136153,6.612905],[-6.764457,0.825700],[0.384583,-6.224318],[-1.399791,-0.432879],[1.344410,-2.230779],[8.826690,-7.008172],[-0.582572,-7.335949],[3.402329,-4.796863],[9.664428,5.096115],[-1.672271,-3.645590],[-3.022447,-5.226293],[3.238758,2.665987],[-4.721332,-7.475174],[-3.377534,2.145352],[3.869007,-7.386210],[3.600747,-1.446744],[4.264611,-5.996848],[-7.983465,4.479992],[-9.833127,-4.537838],[-4.130436,-4.722967],[6.949551,-0.495067],[7.485916,-4.534877],[8.290024,2.585921],[2.289056,6.871027],[8.407328,-6.343588],[-0.219214,-1.520349],[-2.289423,-7.738094],[0.200074,6.269250],[-8.493221,-8.056051],[-4.559364,-6.677844],[4.342540,-0.150496],[6.369811,4.794071],[-8.168889,5.392294],[3.280448,7.119932],[-1.136269,1.621664],[-9.086189,-6.476645],[-6.776728,-7.684599],[-9.535817,9.833487],[-7.162441,-4.385142],[1.170887,2.704957],[-5.920895,7.607621],[-9.096664,4.272683],[-3.330158,-2.656509],[4.049039,2.796119],[6.794955,-6.204562],[0.577774,-6.183499],[-8.685819,7.768679],[-3.726217,3.824940],[4.107667,3.728880],[2.720591,-8.902667],[7.915080,-1.790913],[-2.166451,-0.066932],[1.206633,7.756469],[-4.499136,-0.951279],[-3.722361,5.157707],[-3.603788,2.975629],[1.452115,-4.763407],[9.295842,-6.608800],[4.922608,-6.201549],[0.210783,-3.654829],[3.394360,3.201510],[2.640633,-8.405748],[7.751607,-5.288700],[-9.593200,-0.821161],[-0.648014,-0.850893],[8.217438,-4.220339],[2.907361,-4.242811],[-8.346603,9.983997],[-7.681237,3.505420],[7.336040,-9.267220],[3.340262,-3.461063],[-1.481619,3.442179],[6.445926,1.674346],[0.274708,-5.646601],[-0.140252,0.724670],[4.466505,-5.562052],[3.845926,2.081763],[-2.897150,1.061465],[-4.806233,7.351137],[-8.073789,-8.891530],[6.819023,7.702383],[5.117235,8.420187],[-1.294089,-0.896100],[-4.210106,-7.512001],[3.921153,-9.735066],[1.340889,3.099635],[4.302869,-5.964379],[-7.032517,-2.689359],[-2.550548,-6.245386],[2.081370,1.790787],[-3.062840,0.393869],[1.196150,-3.854740],[1.657038,-8.235367],[-4.503695,-9.120242],[-1.683602,-3.103878],[3.232741,-6.581572],[-7.543242,-5.759983],[2.670440,0.806280],[2.961594,-4.221898],[-3.837688,0.236765],[4.131396,-4.826882],[-9.667816,4.544529],[-2.452698,2.763016],[-4.731311,6.924063],[-9.899130,-3.387438],[-1.626698,7.028659],[-6.711311,-4.321959],[-7.690881,-4.751811],[4.633790,5.736171],[-5.187952,-4.549119],[-5.997095,-4.989433],[-2.306809,3.371216],[6.332173,-5.321799],[-1.567259,-2.334140],[7.539443,9.789001],[-6.069053,8.642788],[4.063731,5.111155],[5.055781,-5.155692],[5.098318,1.055984],[-0.074001,-3.548652],[-8.026203,2.404980],[-8.504246,-4.295585],[-8.425400,4.339315],[9.079681,-0.550771],[-8.040271,-4.863804],[-3.777397,9.202902],[-4.213976,3.092079],[-1.707337,-5.695162],[-2.168645,8.305440],[4.977242,-9.292806],[1.066016,4.549858],[-5.944780,0.335931],[2.818155,-4.522862],[-4.959134,-0.050260],[-6.582524,-2.980814],[8.844555,-8.594231],[-5.679762,3.872025],[8.823940,-2.787732],[3.491425,3.889186],[6.123293,-5.899527],[9.144030,-1.313021],[5.511308,-8.514957],[-3.275814,-8.942461],[3.932505,9.329141],[-0.800678,-8.385397],[-9.782545,-2.502833],[-2.379812,2.057972],[4.416803,-1.702452],[4.242059,-0.985748],[7.922954,-4.963125],[0.331659,-7.784385],[5.603857,7.184936],[-5.962191,1.099991],[-0.668984,-8.567697],[-7.035590,-5.172997],[-0.694977,-6.748906],[-0.327067,-6.159768],[1.964668,7.998505],[8.741562,4.578650],[-9.479779,-2.176893],[-6.353535,7.263986],[5.095261,1.581696],[-6.861499,9.092279],[5.256512,-3.106522],[5.147103,0.727399],[5.874421,9.604005],[-1.348037,-1.844241],[9.569639,6.820692],[-8.251932,-3.110629],[5.603288,6.911313],[-2.013894,-2.366043],[-8.051506,5.714466],[7.372475,-5.497782],[8.170189,9.369249],[4.487027,-9.884806],[-2.463576,-3.506106],[3.958239,-4.880387],[5.288950,-9.889970],[3.547473,1.675102],[3.862148,3.952611],[4.270607,8.186582],[7.193265,0.830416],[-2.357172,-7.196828],[4.069016,-9.681719],[0.741943,9.406850],[-3.528440,-5.821289],[-9.541455,-6.747417],[-9.668325,-0.951361],[7.293145,9.127028],[-8.565134,2.897077],[-2.932800,2.805642],[0.803015,-3.327610],[2.184664,6.198965],[1.691180,0.216562],[2.969971,0.422148],[8.562806,9.756291],[-5.948925,2.952533],[2.500936,9.035747],[-3.329220,-0.466465],[-6.296220,1.930644],[-4.442170,-0.663790],[-9.796597,-0.513975],[0.503030,-7.618148],[7.744578,9.520038],[-2.712062,9.939243],[-4.921287,5.050959],[8.992669,-9.931855],[7.632606,7.120308],[-3.359824,4.978686],[1.427620,-4.549108],[-3.654929,7.827438],[-5.934285,6.003308],[-8.659062,3.100936],[7.092093,8.344610],[-4.038705,4.710784],[5.868082,4.285731],[-1.507524,5.503908],[-7.297597,-4.838854],[-8.469703,5.210821],[-9.329370,2.063559],[1.695059,6.723827],[8.093901,7.359618],[-5.456235,9.907915],[-8.528387,3.052260],[-2.442293,-6.089388],[-3.888439,7.400393],[2.848214,-1.985923],[6.347145,-4.507322],[-2.710713,3.256741],[-4.504984,4.274689],[9.142763,8.164226],[2.327438,-3.850527],[6.280443,4.087326],[8.022668,-9.617757],[3.820652,8.609052],[-6.754554,2.707496],[7.485707,-9.419180],[9.535870,6.231868],[0.229344,-7.634388],[9.098020,-6.486516],[-2.615602,5.074383],[-9.755090,-3.076248],[-4.587894,-3.397554],[4.444801,6.652030],[-5.860724,-1.639656],[3.469718,0.722810],[-8.922716,0.177795],[-0.752636,-1.222150],[4.174767,5.490474],[6.369397,3.145743],[7.827214,-2.233573],[9.698845,5.780661],[-2.552503,-9.930446],[0.437457,-0.416284],[1.026510,-5.398660],[7.294199,-7.005811],[-7.625562,-7.639000],[7.034761,6.753105],[9.890888,8.550975],[2.357412,-4.398394],[5.062959,1.273607],[-9.246001,-1.489432],[4.246726,-2.471482],[-7.513876,-4.243369],[-9.013690,-5.291723],[-4.136617,-0.375896],[-3.587748,7.351508],[-6.886543,6.090456],[-1.747303,0.548400],[-7.842676,-6.833627],[-6.128147,-4.412941],[-1.549011,1.053921],[6.243735,-0.631631],[7.173623,2.172521],[7.829969,7.060219],[-5.330189,2.345549],[0.332326,-4.939977],[-8.183036,1.630499],[8.868078,8.022210],[-3.712830,-6.489299],[1.187586,-8.534305],[5.530639,-9.865362],[-5.953159,-4.058150],[-5.026166,3.803470],[-7.127035,5.713301],[-0.885408,5.901359],[-2.424069,8.102101],[1.263320,-5.869055],[7.187680,7.107258],[-8.604132,3.592790],[7.203079,3.605259],[1.074659,0.446139],[-7.616379,-9.933495],[-1.583940,-4.587871],[2.479174,7.551182],[1.826407,9.887531],[-0.194238,0.321072],[-3.987737,7.142762],[9.888598,3.186824],[7.433540,-4.303429],[6.196313,6.103601],[2.797619,-3.500234],[8.484280,2.901491],[0.464826,3.354390],[-7.840192,-9.871909],[6.205792,-8.900777],[-4.764369,8.030486]], dtype = "float64")#candidate|836|(468, 2)|const|float64
const_837 = relay.const([1.793093,-0.186577,7.701462,7.339660,-7.970967,-0.431577,9.187101,-6.825769,-2.764348,-2.758585,-1.304168,-9.365440,-4.148083,0.032255,-7.658568,-8.428148,1.758966,-9.024082,2.214331,4.576633,-7.495795,2.405205,-7.031852,4.520662,-0.740781,-8.122813,7.056166,1.332307,3.055372,5.570989,-4.357790,0.517674,-1.680305,7.205177,1.908823,8.519616,-1.180648,4.183311,-0.826491,3.249436,-7.342713,-3.997025,2.997576,0.592305,-0.306070,-4.495656,-3.801590,-7.674736,0.904097,-5.578424,-0.236180,-4.082446,-5.463764,1.815858,5.517375,0.226974,1.512554,3.199878,8.764650,2.989741,3.440481,1.327308,4.918603,-7.967641,5.829157,2.950868,-9.944017,-3.389690,8.980491,-6.597031,-0.176730,-1.195858,5.571008,-7.563686,-4.748526,-1.479785,9.433445,9.699065,1.913557,1.946631,-8.031522,-1.163783,5.069739,1.217598,6.858288,6.761545,5.916983,7.120698,3.112772,5.517107,3.446900,6.017468,1.033686,9.585195,-1.926418,5.026556,6.824729,6.294055,-5.298997,8.421846,-7.542363,-3.300927,-4.402280,-9.295406,8.493291,3.461580,4.536797,-5.687262,7.016313,6.324046,-9.899820,-4.775663,6.793077,-3.037682,-1.719579,1.885760,-9.289503,-5.987911,5.743774,-8.418514,-1.731379,0.533540,-1.852576,6.074093,4.253081,3.995856], dtype = "float64")#candidate|837|(126,)|const|float64
const_838 = relay.const([-4.534926,6.563744,1.244612,8.783954,-7.838248,-2.425644,5.136473,-8.137699,-2.370180,5.622309,1.286237,-6.548047,-7.161397,8.772188,4.681097,-0.627751,-3.437351,-4.031391,-9.981724,-4.125600,7.667634,-3.546513,3.720022,-6.774338,-8.183540,4.133920,-1.282646,-5.049970,3.538662,5.102014,-2.271436,-4.700090,1.331555,-9.954196,8.328803,-3.067497,2.027933,2.075232,1.528760,-7.721551,0.671256,-4.969916,5.913617,-1.652504,-5.934598,2.165420,9.853417,0.150288,-5.252636,-6.195346,-7.907684,-5.421592,7.736184,8.933428,7.955279,-3.247324,3.399663,1.846789,2.981343,5.445541,5.539156,-3.422713,7.218728,0.444952,2.690974,2.289713,-4.237286,0.070442,7.471348,-6.007733,-2.576881,5.719881,9.659648,-8.040114,9.277162,-6.038128,-0.683615,5.425768,5.506312,0.009604], dtype = "float64")#candidate|838|(80,)|const|float64
call_835 = relay.TupleGetItem(func_734_call(relay.reshape(const_836.astype('float64'), [9, 13, 8]), relay.reshape(const_837.astype('float64'), [126,]), relay.reshape(const_838.astype('float64'), [1, 80]), ), 6)
call_839 = relay.TupleGetItem(func_739_call(relay.reshape(const_836.astype('float64'), [9, 13, 8]), relay.reshape(const_837.astype('float64'), [126,]), relay.reshape(const_838.astype('float64'), [1, 80]), ), 6)
uop_843 = relay.sin(const_836.astype('float32')) # shape=(468, 2)
bop_845 = relay.divide(var_830.astype('float64'), relay.reshape(const_831.astype('float64'), relay.shape_of(var_830))) # shape=(4, 6, 7)
uop_849 = relay.exp(uop_843.astype('float32')) # shape=(468, 2)
uop_852 = relay.log10(uop_849.astype('float64')) # shape=(468, 2)
bop_867 = relay.power(uop_849.astype('float32'), relay.reshape(uop_852.astype('float32'), relay.shape_of(uop_849))) # shape=(468, 2)
output = relay.Tuple([bop_832,call_835,const_837,const_838,bop_845,bop_867,])
output2 = relay.Tuple([bop_832,call_839,const_837,const_838,bop_845,bop_867,])
func_876 = relay.Function([var_830,], output)
mod['func_876'] = func_876
mod = relay.transform.InferType()(mod)
var_877 = relay.var("var_877", dtype = "int32", shape = (4, 6, 7))#candidate|877|(4, 6, 7)|var|int32
output = func_876(var_877)
func_878 = relay.Function([var_877], output)
mutated_mod['func_878'] = func_878
mutated_mod = relay.transform.InferType()(mutated_mod)
var_882 = relay.var("var_882", dtype = "float64", shape = (1, 10, 5))#candidate|882|(1, 10, 5)|var|float64
uop_883 = relay.acosh(var_882.astype('float64')) # shape=(1, 10, 5)
func_44_call = mod.get_global_var('func_44')
func_46_call = mutated_mod.get_global_var('func_46')
var_886 = relay.var("var_886", dtype = "float64", shape = (126,))#candidate|886|(126,)|var|float64
call_885 = relay.TupleGetItem(func_44_call(relay.reshape(var_886.astype('float64'), [9, 14])), 0)
call_887 = relay.TupleGetItem(func_46_call(relay.reshape(var_886.astype('float64'), [9, 14])), 0)
func_594_call = mod.get_global_var('func_594')
func_597_call = mutated_mod.get_global_var('func_597')
const_890 = relay.const(2, dtype = "uint16")#candidate|890|()|const|uint16
call_889 = func_594_call(relay.reshape(const_890.astype('uint16'), []))
call_891 = func_594_call(relay.reshape(const_890.astype('uint16'), []))
func_363_call = mod.get_global_var('func_363')
func_365_call = mutated_mod.get_global_var('func_365')
const_895 = relay.const([-4.551635,9.043992,7.555263,-1.174097,-8.659313,-8.231546,8.457054,7.307928,0.156879,9.316448,0.153466,-2.427057,-3.818266,-9.773554,6.846963,-0.325456,6.101435,4.016328,-8.365897,-4.229684,2.127900,5.001147,-4.644395,2.722750,-3.099314,-2.225414,-5.680820,-0.706900,0.093146,8.193009,-2.456231,1.129974,4.485828,-2.889821,-8.837907,0.310329,-1.886656,-5.976729,9.137646,-2.392809,-3.412935,6.708964,7.580977,-3.428411,3.795684,0.395744,7.263545,5.164364,-8.626943,-3.506182,-7.047492,-1.864456,7.581451,1.612575,-6.677420,-8.504242,5.917901,1.322564,5.033126,5.094877,6.750701,1.164383,1.408980,-4.527657,-6.222054,7.586981,-5.258886,6.276089,-4.341995,-8.846600,0.326377,-3.617405,3.638634,7.150759,0.927152,3.659175,-3.103122,5.138682,3.730912,5.482827], dtype = "float64")#candidate|895|(80,)|const|float64
call_894 = relay.TupleGetItem(func_363_call(relay.reshape(const_895.astype('float64'), [2, 8, 5])), 0)
call_896 = relay.TupleGetItem(func_365_call(relay.reshape(const_895.astype('float64'), [2, 8, 5])), 0)
output = relay.Tuple([uop_883,call_885,var_886,call_889,const_890,call_894,const_895,])
output2 = relay.Tuple([uop_883,call_887,var_886,call_891,const_890,call_896,const_895,])
func_908 = relay.Function([var_882,var_886,], output)
mod['func_908'] = func_908
mod = relay.transform.InferType()(mod)
mutated_mod['func_908'] = func_908
mutated_mod = relay.transform.InferType()(mutated_mod)
func_908_call = mutated_mod.get_global_var('func_908')
var_910 = relay.var("var_910", dtype = "float64", shape = (1, 10, 5))#candidate|910|(1, 10, 5)|var|float64
var_911 = relay.var("var_911", dtype = "float64", shape = (126,))#candidate|911|(126,)|var|float64
call_909 = func_908_call(var_910,var_911,)
output = call_909
func_912 = relay.Function([var_910,var_911,], output)
mutated_mod['func_912'] = func_912
mutated_mod = relay.transform.InferType()(mutated_mod)
var_985 = relay.var("var_985", dtype = "float64", shape = (16, 12, 16))#candidate|985|(16, 12, 16)|var|float64
uop_986 = relay.cosh(var_985.astype('float64')) # shape=(16, 12, 16)
output = relay.Tuple([uop_986,])
output2 = relay.Tuple([uop_986,])
func_1019 = relay.Function([var_985,], output)
mod['func_1019'] = func_1019
mod = relay.transform.InferType()(mod)
var_1020 = relay.var("var_1020", dtype = "float64", shape = (16, 12, 16))#candidate|1020|(16, 12, 16)|var|float64
output = func_1019(var_1020)
func_1021 = relay.Function([var_1020], output)
mutated_mod['func_1021'] = func_1021
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1438 = relay.var("var_1438", dtype = "float64", shape = (10, 13))#candidate|1438|(10, 13)|var|float64
uop_1439 = relay.acos(var_1438.astype('float64')) # shape=(10, 13)
output = relay.Tuple([uop_1439,])
output2 = relay.Tuple([uop_1439,])
func_1442 = relay.Function([var_1438,], output)
mod['func_1442'] = func_1442
mod = relay.transform.InferType()(mod)
var_1443 = relay.var("var_1443", dtype = "float64", shape = (10, 13))#candidate|1443|(10, 13)|var|float64
output = func_1442(var_1443)
func_1444 = relay.Function([var_1443], output)
mutated_mod['func_1444'] = func_1444
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1446 = relay.var("var_1446", dtype = "int8", shape = (16, 4, 13))#candidate|1446|(16, 4, 13)|var|int8
const_1447 = relay.const([[[-3,8,-7,6,-6,-7,-3,6,-4,-8,7,-1,-8],[5,-3,9,-9,6,3,5,2,-8,2,-2,-8,9],[2,4,-6,-9,7,5,-4,5,4,-9,-2,3,1],[-2,-8,4,10,-10,-7,3,9,-2,-10,-4,-7,-3]],[[8,-4,-3,-7,7,3,-9,2,-3,2,5,-9,-2],[-1,6,9,2,-2,-10,-8,-10,4,5,7,-3,4],[-4,-2,7,-7,-9,-6,10,8,5,-8,-10,-6,6],[-4,4,-6,-4,7,6,-4,-10,6,6,-3,1,-8]],[[2,5,-9,9,-9,-4,-7,-4,-6,-8,7,-8,7],[4,3,-10,-5,-6,-3,10,2,-5,-6,2,7,8],[-3,7,-8,-1,-2,-7,-3,3,-10,10,-4,2,5],[-2,5,8,-4,9,7,-4,-8,-8,-4,9,-2,7]],[[-5,8,3,4,-7,8,-7,-5,7,-3,-10,8,-10],[9,7,9,-5,1,4,7,-6,-5,4,-7,-9,7],[-9,-7,-3,2,4,-9,-6,-8,6,4,-2,4,8],[8,2,-9,10,2,4,-1,-5,7,1,-2,3,-8]],[[4,3,-5,-9,6,-10,6,8,-7,-8,9,4,1],[8,3,-2,-2,-8,6,6,7,-8,9,1,-5,8],[4,-6,9,10,-2,8,-7,-10,4,-7,-1,2,-1],[6,3,9,-8,-4,-1,-9,-7,6,3,-1,2,-8]],[[2,-1,-6,-8,2,6,-6,-7,7,1,-4,9,5],[-6,7,9,5,-2,-8,-10,2,10,-8,-5,2,-8],[5,4,7,-8,-6,-4,1,-2,8,9,1,6,-6],[-6,-8,-5,-2,-4,10,5,-3,9,-5,-10,4,-1]],[[-1,-4,-9,-5,5,-2,10,-7,-10,-10,-1,6,9],[-7,7,6,6,-5,10,-1,-2,3,-1,-6,-5,5],[-3,-2,-8,5,-8,3,3,-8,-10,10,-6,-3,5],[9,6,-6,4,1,-6,7,-9,7,-8,7,-7,-9]],[[-1,-9,2,8,1,-8,1,-7,8,-2,-4,-9,7],[-2,4,-7,-4,3,4,5,-5,-10,-4,5,1,-7],[8,9,3,-10,-3,-1,-3,4,-6,-5,-1,9,-4],[-5,4,1,-9,7,-4,-8,4,-3,-2,6,-5,10]],[[6,1,-8,4,-10,5,-7,-1,7,-7,7,-8,6],[-10,7,-7,1,-2,4,-2,4,4,-8,-2,6,-6],[1,3,-9,8,-3,8,5,-5,-9,5,-4,5,-6],[7,-6,5,8,-5,-3,3,-2,-1,5,5,-3,-7]],[[1,-1,7,-1,2,2,-5,8,-2,3,-6,-8,-10],[-2,5,-2,-9,5,10,1,-1,-3,-10,2,6,5],[-10,10,7,-5,-1,-1,9,-10,-2,-2,-6,9,7],[-7,9,-4,6,-10,-8,-7,1,1,6,8,4,2]],[[4,5,5,4,-5,-4,2,4,-9,9,1,-10,3],[6,8,9,-9,3,6,7,-6,2,5,8,-9,3],[-10,8,3,-3,1,-4,6,-4,7,-4,2,-2,10],[-2,8,-8,8,-4,-1,3,8,-2,-5,5,-8,6]],[[4,9,-8,2,6,-6,7,5,-6,-10,6,-9,8],[2,4,8,-5,-2,7,1,-6,-8,-9,-1,-3,-9],[2,-9,-3,-8,10,5,-4,8,-10,5,-8,-9,9],[-3,-10,1,-2,6,-5,2,-2,-1,-3,8,-10,9]],[[9,6,-7,-8,1,1,-4,-9,-1,4,-10,-10,2],[8,4,-1,-5,-8,-3,-9,8,10,-7,10,-1,-3],[-9,-6,2,2,-1,-6,-9,-7,1,-9,-6,-2,7],[2,8,9,-8,-8,-8,6,-5,-4,-9,7,6,10]],[[4,-6,-5,8,-6,9,-1,6,-7,-7,-9,7,1],[-7,-1,-1,-8,-7,-9,-6,-4,-1,-2,-4,-3,3],[3,7,3,3,8,2,-2,1,-6,8,-2,6,-8],[-4,5,-1,7,-4,-2,6,-2,-8,-7,-8,3,-6]],[[-5,-10,-5,1,10,-10,-10,7,1,1,-2,-10,7],[-6,3,7,4,-10,10,1,-3,-8,5,-6,1,-2],[6,3,-1,6,-9,-4,2,4,-5,-5,5,-5,9],[9,-9,-2,-6,-10,4,-2,3,-7,-2,-9,3,-7]],[[-5,9,4,-3,-10,9,10,2,9,8,-2,9,6],[-10,9,-9,2,10,7,-8,-8,4,8,1,-2,1],[2,9,-5,-8,8,3,-7,-7,-6,-3,4,2,3],[-1,-2,10,-10,3,10,2,-1,10,-7,10,4,10]]], dtype = "int8")#candidate|1447|(16, 4, 13)|const|int8
bop_1448 = relay.logical_xor(var_1446.astype('int8'), relay.reshape(const_1447.astype('int8'), relay.shape_of(var_1446))) # shape=(16, 4, 13)
func_1442_call = mod.get_global_var('func_1442')
func_1444_call = mutated_mod.get_global_var('func_1444')
var_1469 = relay.var("var_1469", dtype = "float64", shape = (130,))#candidate|1469|(130,)|var|float64
call_1468 = relay.TupleGetItem(func_1442_call(relay.reshape(var_1469.astype('float64'), [10, 13])), 0)
call_1470 = relay.TupleGetItem(func_1444_call(relay.reshape(var_1469.astype('float64'), [10, 13])), 0)
output = relay.Tuple([bop_1448,call_1468,var_1469,])
output2 = relay.Tuple([bop_1448,call_1470,var_1469,])
func_1471 = relay.Function([var_1446,var_1469,], output)
mod['func_1471'] = func_1471
mod = relay.transform.InferType()(mod)
var_1472 = relay.var("var_1472", dtype = "int8", shape = (16, 4, 13))#candidate|1472|(16, 4, 13)|var|int8
var_1473 = relay.var("var_1473", dtype = "float64", shape = (130,))#candidate|1473|(130,)|var|float64
output = func_1471(var_1472,var_1473,)
func_1474 = relay.Function([var_1472,var_1473,], output)
mutated_mod['func_1474'] = func_1474
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1721 = relay.var("var_1721", dtype = "int64", shape = ())#candidate|1721|()|var|int64
var_1722 = relay.var("var_1722", dtype = "int64", shape = (1, 7, 12))#candidate|1722|(1, 7, 12)|var|int64
bop_1723 = relay.bitwise_or(var_1721.astype('int64'), var_1722.astype('int64')) # shape=(1, 7, 12)
bop_1729 = relay.logical_or(var_1722.astype('bool'), var_1721.astype('bool')) # shape=(1, 7, 12)
uop_1735 = relay.log(bop_1729.astype('float64')) # shape=(1, 7, 12)
output = relay.Tuple([bop_1723,uop_1735,])
output2 = relay.Tuple([bop_1723,uop_1735,])
func_1737 = relay.Function([var_1721,var_1722,], output)
mod['func_1737'] = func_1737
mod = relay.transform.InferType()(mod)
var_1738 = relay.var("var_1738", dtype = "int64", shape = ())#candidate|1738|()|var|int64
var_1739 = relay.var("var_1739", dtype = "int64", shape = (1, 7, 12))#candidate|1739|(1, 7, 12)|var|int64
output = func_1737(var_1738,var_1739,)
func_1740 = relay.Function([var_1738,var_1739,], output)
mutated_mod['func_1740'] = func_1740
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1884 = relay.const([[[-8]],[[-6]],[[10]],[[5]],[[-4]],[[-10]],[[1]]], dtype = "uint64")#candidate|1884|(7, 1, 1)|const|uint64
const_1885 = relay.const([[[-5,2,-10,-5,-5],[-8,-3,-1,-6,-9],[3,-1,-3,4,-4],[-1,-6,6,1,6],[-6,-10,5,-9,-2],[-10,-2,-10,6,2],[-3,-6,-3,2,-6],[2,7,3,3,3],[-4,-2,5,-1,8],[-10,-4,9,-3,-5],[-1,2,-9,10,-1],[-9,5,3,-3,-3],[-6,3,3,9,-5],[6,-1,4,7,4]],[[-8,-5,4,4,-2],[10,2,-10,-7,1],[-5,-8,7,-8,7],[-2,-7,-9,-5,-10],[-10,5,-6,-6,-5],[-5,-6,-7,-6,-5],[7,9,4,-4,-10],[6,-5,-3,7,3],[8,2,-10,5,4],[-10,-7,4,4,-2],[2,-6,10,-7,-9],[-9,-10,-1,10,8],[-7,-4,5,8,5],[6,8,4,1,7]],[[2,7,8,2,-3],[1,-9,6,4,5],[-2,7,-5,9,10],[6,-3,6,10,-1],[-10,-4,-7,5,2],[1,3,5,-6,-3],[-2,10,9,-9,4],[3,10,3,8,1],[7,6,-9,-7,-5],[3,9,-3,9,-7],[-1,7,8,1,7],[7,-3,6,-2,-8],[5,-4,-5,3,10],[9,10,3,7,5]],[[-7,9,-5,-3,-10],[-4,2,-9,9,-1],[2,10,-7,2,-8],[-7,1,-4,-1,-3],[-6,5,-7,5,6],[6,-7,10,9,5],[2,2,-5,10,-1],[-6,10,-5,6,4],[7,10,6,5,5],[-5,-1,10,1,-2],[5,-1,9,-3,-7],[9,-8,-5,8,-2],[-1,9,1,-8,1],[5,9,-2,-2,-5]],[[3,3,2,8,2],[-4,4,-5,-5,9],[4,-4,2,3,-1],[2,-2,-7,-5,-6],[-2,9,4,-3,6],[6,6,5,4,-1],[-6,-8,10,-5,-8],[-1,1,-8,-4,5],[1,-2,-9,-4,-2],[-9,7,-7,3,-1],[2,3,2,8,2],[-7,-5,9,-3,9],[5,-4,-5,9,-4],[1,2,1,5,1]],[[-5,10,5,-5,10],[6,4,-10,-4,9],[7,5,-3,-5,-10],[-6,5,6,-5,10],[7,-3,-7,-1,1],[-8,7,-10,-2,9],[-1,8,2,6,6],[-5,4,-5,-10,-10],[4,9,-1,-2,-4],[-4,9,-1,-5,10],[-2,4,10,7,-6],[1,4,1,-1,-10],[-5,9,8,5,-4],[-7,-10,6,-2,2]],[[-9,6,-4,-3,-10],[-9,-9,9,6,-5],[10,1,-2,-10,10],[-2,6,4,-5,-5],[2,-1,2,-10,-3],[1,6,-3,-6,5],[-2,5,-5,8,-8],[6,-8,-2,-7,1],[9,5,-3,-6,-9],[5,7,1,-2,3],[-3,9,6,-2,-4],[-2,4,-8,4,-5],[4,6,1,5,-6],[5,-7,-1,-6,3]]], dtype = "uint64")#candidate|1885|(7, 14, 5)|const|uint64
bop_1886 = relay.bitwise_or(const_1884.astype('uint64'), const_1885.astype('uint64')) # shape=(7, 14, 5)
func_363_call = mod.get_global_var('func_363')
func_365_call = mutated_mod.get_global_var('func_365')
var_1892 = relay.var("var_1892", dtype = "float64", shape = (80,))#candidate|1892|(80,)|var|float64
call_1891 = relay.TupleGetItem(func_363_call(relay.reshape(var_1892.astype('float64'), [2, 8, 5])), 0)
call_1893 = relay.TupleGetItem(func_365_call(relay.reshape(var_1892.astype('float64'), [2, 8, 5])), 0)
uop_1896 = relay.asinh(bop_1886.astype('float32')) # shape=(7, 14, 5)
output = relay.Tuple([call_1891,var_1892,uop_1896,])
output2 = relay.Tuple([call_1893,var_1892,uop_1896,])
func_1900 = relay.Function([var_1892,], output)
mod['func_1900'] = func_1900
mod = relay.transform.InferType()(mod)
var_1901 = relay.var("var_1901", dtype = "float64", shape = (80,))#candidate|1901|(80,)|var|float64
output = func_1900(var_1901)
func_1902 = relay.Function([var_1901], output)
mutated_mod['func_1902'] = func_1902
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1961 = relay.var("var_1961", dtype = "uint8", shape = (3, 1, 15))#candidate|1961|(3, 1, 15)|var|uint8
var_1962 = relay.var("var_1962", dtype = "uint8", shape = (3, 4, 15))#candidate|1962|(3, 4, 15)|var|uint8
bop_1963 = relay.logical_xor(var_1961.astype('uint8'), var_1962.astype('uint8')) # shape=(3, 4, 15)
output = relay.Tuple([bop_1963,])
output2 = relay.Tuple([bop_1963,])
func_1966 = relay.Function([var_1961,var_1962,], output)
mod['func_1966'] = func_1966
mod = relay.transform.InferType()(mod)
var_1967 = relay.var("var_1967", dtype = "uint8", shape = (3, 1, 15))#candidate|1967|(3, 1, 15)|var|uint8
var_1968 = relay.var("var_1968", dtype = "uint8", shape = (3, 4, 15))#candidate|1968|(3, 4, 15)|var|uint8
output = func_1966(var_1967,var_1968,)
func_1969 = relay.Function([var_1967,var_1968,], output)
mutated_mod['func_1969'] = func_1969
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2079 = relay.var("var_2079", dtype = "int64", shape = (1, 11, 16))#candidate|2079|(1, 11, 16)|var|int64
var_2080 = relay.var("var_2080", dtype = "int64", shape = (6, 11, 16))#candidate|2080|(6, 11, 16)|var|int64
bop_2081 = relay.equal(var_2079.astype('bool'), var_2080.astype('bool')) # shape=(6, 11, 16)
func_734_call = mod.get_global_var('func_734')
func_739_call = mutated_mod.get_global_var('func_739')
var_2087 = relay.var("var_2087", dtype = "float64", shape = (936,))#candidate|2087|(936,)|var|float64
var_2088 = relay.var("var_2088", dtype = "float64", shape = (126,))#candidate|2088|(126,)|var|float64
const_2089 = relay.const([6.291102,-2.933999,9.087637,3.320994,-5.625588,9.425131,-0.239032,6.492866,6.382531,2.482232,5.486211,9.197299,-0.867082,-8.652323,1.140420,-2.978570,0.977751,-0.632546,-0.663388,-8.966947,1.509597,-3.805002,-6.662944,-2.608194,-6.206140,0.561015,-2.995998,-8.655420,-8.416781,-9.973922,-9.792776,-3.818284,-7.753052,8.837684,7.123008,3.450438,8.661605,-5.833296,0.339622,0.146170,-9.728434,6.979592,-3.279696,5.855949,0.571773,-9.224515,5.457707,3.070771,4.063773,-3.925980,-3.240773,-4.416743,9.566821,7.532027,3.215934,-3.421772,5.676232,8.943320,7.819703,-7.322252,-7.898723,8.093799,-5.195025,7.519865,3.758328,-1.757885,7.505805,7.031563,0.558044,-4.722923,-2.482922,-6.351795,-1.464205,6.699589,-4.812927,-0.461242,-7.637597,-0.003622,-6.877181,-1.963464], dtype = "float64")#candidate|2089|(80,)|const|float64
call_2086 = relay.TupleGetItem(func_734_call(relay.reshape(var_2087.astype('float64'), [9, 13, 8]), relay.reshape(var_2088.astype('float64'), [126,]), relay.reshape(const_2089.astype('float64'), [1, 80]), ), 4)
call_2090 = relay.TupleGetItem(func_739_call(relay.reshape(var_2087.astype('float64'), [9, 13, 8]), relay.reshape(var_2088.astype('float64'), [126,]), relay.reshape(const_2089.astype('float64'), [1, 80]), ), 4)
func_1966_call = mod.get_global_var('func_1966')
func_1969_call = mutated_mod.get_global_var('func_1969')
var_2094 = relay.var("var_2094", dtype = "uint8", shape = (45,))#candidate|2094|(45,)|var|uint8
const_2095 = relay.const([[3,-7,5,-1,6,2],[-7,-8,1,2,-4,-5],[-7,9,4,-2,-5,1],[-8,5,-10,-4,9,9],[-3,-4,-8,-3,-6,8],[-6,-7,1,3,8,7],[-6,-7,2,-7,-7,-1],[-9,-3,-1,-3,3,-7],[7,8,-9,-5,6,10],[-8,-1,9,3,10,-1],[6,7,-5,4,6,7],[-6,10,4,10,-8,-8],[-6,-5,8,-7,-1,2],[9,-9,-9,-2,-9,-9],[-2,-7,-9,-9,8,1],[-9,10,1,7,-9,8],[-1,3,1,-4,-10,-5],[-8,3,-8,1,1,7],[-3,-5,-1,2,-1,3],[-6,7,8,4,8,-3],[4,-4,-5,-8,-7,3],[-5,-9,10,10,-9,-4],[1,-4,-7,-7,-8,5],[-6,-6,-7,-1,5,-1],[-2,-3,-10,-9,-6,1],[-7,-6,1,-2,6,10],[-8,6,-2,8,-7,-6],[-9,9,-7,1,-9,1],[-10,-7,-1,-10,9,-2],[-4,-5,-1,-8,-8,-6]], dtype = "uint8")#candidate|2095|(30, 6)|const|uint8
call_2093 = relay.TupleGetItem(func_1966_call(relay.reshape(var_2094.astype('uint8'), [3, 1, 15]), relay.reshape(const_2095.astype('uint8'), [3, 4, 15]), ), 0)
call_2096 = relay.TupleGetItem(func_1969_call(relay.reshape(var_2094.astype('uint8'), [3, 1, 15]), relay.reshape(const_2095.astype('uint8'), [3, 4, 15]), ), 0)
func_734_call = mod.get_global_var('func_734')
func_739_call = mutated_mod.get_global_var('func_739')
call_2102 = relay.TupleGetItem(func_734_call(relay.reshape(call_2086.astype('float64'), [9, 13, 8]), relay.reshape(var_2088.astype('float64'), [126,]), relay.reshape(const_2089.astype('float64'), [1, 80]), ), 2)
call_2103 = relay.TupleGetItem(func_739_call(relay.reshape(call_2086.astype('float64'), [9, 13, 8]), relay.reshape(var_2088.astype('float64'), [126,]), relay.reshape(const_2089.astype('float64'), [1, 80]), ), 2)
uop_2110 = relay.sin(var_2079.astype('float64')) # shape=(1, 11, 16)
func_363_call = mod.get_global_var('func_363')
func_365_call = mutated_mod.get_global_var('func_365')
call_2132 = relay.TupleGetItem(func_363_call(relay.reshape(const_2089.astype('float64'), [2, 8, 5])), 0)
call_2133 = relay.TupleGetItem(func_365_call(relay.reshape(const_2089.astype('float64'), [2, 8, 5])), 0)
bop_2136 = relay.minimum(call_2093.astype('int32'), relay.reshape(const_2095.astype('int32'), relay.shape_of(call_2093))) # shape=(3, 4, 15)
bop_2139 = relay.minimum(call_2096.astype('int32'), relay.reshape(const_2095.astype('int32'), relay.shape_of(call_2096))) # shape=(3, 4, 15)
output = relay.Tuple([bop_2081,call_2086,var_2087,var_2088,const_2089,var_2094,call_2102,uop_2110,call_2132,bop_2136,])
output2 = relay.Tuple([bop_2081,call_2090,var_2087,var_2088,const_2089,var_2094,call_2103,uop_2110,call_2133,bop_2139,])
func_2140 = relay.Function([var_2079,var_2080,var_2087,var_2088,var_2094,], output)
mod['func_2140'] = func_2140
mod = relay.transform.InferType()(mod)
var_2141 = relay.var("var_2141", dtype = "int64", shape = (1, 11, 16))#candidate|2141|(1, 11, 16)|var|int64
var_2142 = relay.var("var_2142", dtype = "int64", shape = (6, 11, 16))#candidate|2142|(6, 11, 16)|var|int64
var_2143 = relay.var("var_2143", dtype = "float64", shape = (936,))#candidate|2143|(936,)|var|float64
var_2144 = relay.var("var_2144", dtype = "float64", shape = (126,))#candidate|2144|(126,)|var|float64
var_2145 = relay.var("var_2145", dtype = "uint8", shape = (45,))#candidate|2145|(45,)|var|uint8
output = func_2140(var_2141,var_2142,var_2143,var_2144,var_2145,)
func_2146 = relay.Function([var_2141,var_2142,var_2143,var_2144,var_2145,], output)
mutated_mod['func_2146'] = func_2146
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2250 = relay.var("var_2250", dtype = "int16", shape = (13, 5, 1))#candidate|2250|(13, 5, 1)|var|int16
const_2251 = relay.const([[[-7,3,10,-7,-8,10,-5,-7,4,9,1,-7,9,4,2,-1],[-9,-2,6,5,-8,-5,7,-4,-7,-8,-4,-9,-5,-7,4,-7],[-2,3,-10,3,-3,-1,-10,1,9,-6,-4,-8,-5,-7,10,-2],[-5,-2,5,-3,4,7,2,-1,-9,5,-1,4,5,5,-7,10],[5,-7,7,-7,5,-5,5,-9,5,8,7,2,-5,-1,-7,4]],[[-3,10,-10,-3,2,3,5,2,8,-6,1,-8,8,-9,-10,-4],[-4,7,1,1,9,1,-8,6,10,-2,1,-9,9,1,-3,-6],[-9,-2,-2,-2,-9,-7,-3,-4,4,-7,-5,-5,6,-6,2,5],[5,-2,2,-8,-6,-1,-7,-5,10,7,8,-2,1,-5,-1,4],[10,1,-1,-5,3,7,3,-10,-6,10,2,-10,3,-5,6,8]],[[-7,-9,9,5,-2,-1,-6,7,1,-6,1,-5,-1,-7,-2,-4],[6,-9,-9,-7,9,-5,-1,5,-10,-5,8,5,2,6,-7,-7],[6,-9,10,-6,-6,-4,-3,-10,-1,-4,-7,-8,-1,5,7,-2],[-7,9,-9,-6,8,-3,-8,-6,2,-8,10,-9,10,-10,5,-1],[-5,10,5,-10,-8,6,7,-5,-3,-9,-6,-4,2,5,-8,-2]],[[5,6,9,-5,-8,-3,2,-6,-10,7,-3,6,9,-3,-6,-1],[-6,-10,-2,4,-5,-8,6,1,-1,3,3,9,1,-8,-6,7],[-5,-9,-2,-10,-9,-4,-4,-10,-5,-1,4,-10,-4,1,7,-4],[-7,-9,7,7,-8,2,8,-9,6,-3,1,-7,-2,-5,-8,-9],[-5,3,-10,9,-1,-1,2,4,-3,-10,10,7,6,1,4,-9]],[[10,10,-2,7,-9,-2,2,9,-3,-8,-6,3,1,-6,-3,4],[6,-3,-3,2,3,-1,2,-2,8,-5,7,6,3,-4,10,-2],[-2,-7,-9,6,-4,9,-8,-8,3,1,-5,-9,-3,-7,-1,-9],[7,-7,-4,-10,-2,4,-10,-6,-10,-2,-8,-3,5,3,-2,8],[-8,-6,8,3,-7,-9,1,-1,-4,6,-5,2,3,-4,8,4]],[[7,-10,-10,-4,-10,-3,10,-4,6,-6,-10,-10,2,10,8,-7],[6,1,-10,2,-9,3,-8,4,6,6,8,1,-4,1,-4,8],[-6,5,-5,6,-1,-5,-5,-4,1,-8,-8,1,9,3,-2,3],[-1,2,7,-3,-6,-9,1,3,-3,-3,8,-2,-5,10,9,5],[-2,-7,-6,9,-1,4,-2,-4,-6,8,10,-2,-7,4,6,8]],[[-8,-8,7,8,-6,10,9,-2,10,2,-10,-6,-9,-4,10,6],[7,2,-3,-2,5,6,-7,-3,-6,8,1,4,-6,8,2,-4],[10,-5,-8,-2,10,-9,6,-5,-6,10,-8,-9,7,-10,1,-8],[-2,2,1,-5,1,9,3,-2,6,6,8,-8,-3,4,4,3],[-6,-8,-10,-9,6,-10,1,-9,4,10,-3,7,-1,-9,2,3]],[[-10,6,-5,-3,-2,-1,7,-9,-7,2,-1,7,-9,-7,2,-2],[10,-2,-4,7,2,-8,-9,-7,-10,-8,10,-1,4,4,7,-8],[-4,1,7,-6,7,7,3,-2,-5,-3,6,5,-1,5,7,-6],[-4,-10,6,-2,-10,-7,-5,7,9,-6,-4,-4,2,-5,-1,-9],[-8,7,-5,-7,8,-9,4,2,3,-10,-10,4,-4,-10,-9,-1]],[[10,-3,7,-9,3,-7,-3,2,-8,5,-9,-10,7,9,1,-5],[9,5,5,2,-1,6,-9,-9,3,5,-10,-6,-4,-5,6,-5],[5,3,-3,9,-6,-5,-7,2,-8,-3,-1,-7,3,-2,-1,6],[-9,7,7,-6,-3,8,7,2,-8,-6,-4,-5,-5,8,6,-4],[-4,-6,9,4,5,3,-5,-5,-10,1,4,-10,5,-8,1,-7]],[[-3,8,7,3,5,1,-1,-2,-9,-4,10,-5,2,-7,5,10],[9,9,9,7,8,-3,-6,1,-7,-10,10,2,-9,7,-1,10],[-2,-5,1,-4,-1,9,1,5,-6,2,10,-8,-3,3,-1,-5],[3,5,-1,4,-5,9,4,3,-9,-4,9,10,-6,-5,9,9],[9,10,2,-1,-9,-4,-6,-3,-1,6,8,1,10,-2,-7,4]],[[6,5,-8,-8,1,-9,6,-10,8,9,3,-3,-8,-3,-5,-1],[9,-10,6,-5,9,-2,6,4,-9,4,-2,4,-10,-7,3,10],[3,10,-10,-6,1,-6,1,2,2,9,-1,-6,-9,-9,-10,-6],[-9,-2,-3,7,-6,10,-2,7,-8,-10,1,-1,-8,7,-7,10],[-1,-4,3,-6,-6,-8,9,-4,4,-6,-1,-9,5,-6,-9,10]],[[-3,2,-8,4,-7,4,-10,2,2,10,3,2,-5,2,-9,4],[9,-7,-6,-2,-5,-8,-5,-8,-8,-10,-8,-1,-5,9,-7,5],[8,-2,-2,1,1,2,-2,2,-9,-3,7,1,8,5,2,-3],[9,-9,2,-8,-9,-8,1,1,2,-8,-9,-10,-1,-6,2,-5],[7,-4,2,-1,-2,-4,-10,-4,10,-3,5,9,8,-8,5,5]],[[-7,-8,-1,-2,9,-8,2,1,-6,-4,-8,6,6,-8,7,-2],[2,-3,-10,-6,2,6,-7,-9,-1,-5,-6,7,-5,3,-10,-6],[5,-5,-6,-4,6,6,8,8,8,10,-6,-6,-2,5,-5,4],[2,-7,-10,-1,-8,10,2,-5,3,4,2,10,-2,6,8,9],[9,10,-4,6,8,10,-7,-2,-10,-10,8,-8,5,-10,-6,-2]]], dtype = "int16")#candidate|2251|(13, 5, 16)|const|int16
bop_2252 = relay.add(var_2250.astype('int16'), const_2251.astype('int16')) # shape=(13, 5, 16)
func_2140_call = mod.get_global_var('func_2140')
func_2146_call = mutated_mod.get_global_var('func_2146')
const_2268 = relay.const([-9,3,6,2,-10,-1,-8,8,2,-6,6,-2,-10,-7,5,6,-6,-1,6,-2,6,7,2,7,-9,-4,2,-5,9,5,-2,8,-3,-4,-2,-5,-2,4,10,-7,-2,-3,-7,7,10,9,-4,-4,8,5,-6,8,-5,-9,6,1,7,4,-2,-1,2,8,9,-4,2,6,-2,-4,-1,-1,1,4,-7,3,7,4,5,7,4,4,-5,-1,-7,5,10,-4,9,10,-6,3,-8,-5,9,-9,-7,6,-3,8,-4,9,-8,-6,1,-1,8,10,-3,8,-7,4,2,-4,8,7,7,-7,-9,10,-8,4,-8,-1,9,2,6,10,5,3,7,5,-5,9,-5,3,1,-9,-2,-10,10,7,-10,-4,-10,-8,8,-1,8,-7,8,-6,7,-9,-6,2,-3,-1,-5,-9,3,-3,3,-4,-1,-3,10,9,-7,-8,7,10,-10,-4,10,-1,-3,6], dtype = "int64")#candidate|2268|(176,)|const|int64
var_2269 = relay.var("var_2269", dtype = "int64", shape = (1056,))#candidate|2269|(1056,)|var|int64
var_2270 = relay.var("var_2270", dtype = "float64", shape = (936,))#candidate|2270|(936,)|var|float64
var_2271 = relay.var("var_2271", dtype = "float64", shape = (126, 1))#candidate|2271|(126, 1)|var|float64
const_2272 = relay.const([9,-10,9,4,6,-1,-10,-9,-7,-8,-9,9,3,10,7,8,-3,4,4,-6,-3,9,1,8,-10,10,1,-7,7,10,3,3,-6,-2,5,1,2,-3,7,-5,-10,-4,6,5,-1], dtype = "uint8")#candidate|2272|(45,)|const|uint8
call_2267 = relay.TupleGetItem(func_2140_call(relay.reshape(const_2268.astype('int64'), [1, 11, 16]), relay.reshape(var_2269.astype('int64'), [6, 11, 16]), relay.reshape(var_2270.astype('float64'), [936,]), relay.reshape(var_2271.astype('float64'), [126,]), relay.reshape(const_2272.astype('uint8'), [45,]), ), 1)
call_2273 = relay.TupleGetItem(func_2146_call(relay.reshape(const_2268.astype('int64'), [1, 11, 16]), relay.reshape(var_2269.astype('int64'), [6, 11, 16]), relay.reshape(var_2270.astype('float64'), [936,]), relay.reshape(var_2271.astype('float64'), [126,]), relay.reshape(const_2272.astype('uint8'), [45,]), ), 1)
output = relay.Tuple([bop_2252,call_2267,const_2268,var_2269,var_2270,var_2271,const_2272,])
output2 = relay.Tuple([bop_2252,call_2273,const_2268,var_2269,var_2270,var_2271,const_2272,])
func_2281 = relay.Function([var_2250,var_2269,var_2270,var_2271,], output)
mod['func_2281'] = func_2281
mod = relay.transform.InferType()(mod)
mutated_mod['func_2281'] = func_2281
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2281_call = mutated_mod.get_global_var('func_2281')
var_2283 = relay.var("var_2283", dtype = "int16", shape = (13, 5, 1))#candidate|2283|(13, 5, 1)|var|int16
var_2284 = relay.var("var_2284", dtype = "int64", shape = (1056,))#candidate|2284|(1056,)|var|int64
var_2285 = relay.var("var_2285", dtype = "float64", shape = (936,))#candidate|2285|(936,)|var|float64
var_2286 = relay.var("var_2286", dtype = "float64", shape = (126, 1))#candidate|2286|(126, 1)|var|float64
call_2282 = func_2281_call(var_2283,var_2284,var_2285,var_2286,)
output = call_2282
func_2287 = relay.Function([var_2283,var_2284,var_2285,var_2286,], output)
mutated_mod['func_2287'] = func_2287
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2375 = relay.var("var_2375", dtype = "float32", shape = (6, 12, 5))#candidate|2375|(6, 12, 5)|var|float32
uop_2376 = relay.acos(var_2375.astype('float32')) # shape=(6, 12, 5)
output = uop_2376
output2 = uop_2376
func_2386 = relay.Function([var_2375,], output)
mod['func_2386'] = func_2386
mod = relay.transform.InferType()(mod)
mutated_mod['func_2386'] = func_2386
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2387 = relay.var("var_2387", dtype = "float32", shape = (6, 12, 5))#candidate|2387|(6, 12, 5)|var|float32
func_2386_call = mutated_mod.get_global_var('func_2386')
call_2388 = func_2386_call(var_2387)
output = call_2388
func_2389 = relay.Function([var_2387], output)
mutated_mod['func_2389'] = func_2389
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2580 = relay.const([[[4,7,-8,-10,4,-4,1,-6,-1,-1],[-2,2,1,-7,-1,-7,4,6,8,8],[3,7,-7,2,-7,-7,-8,-7,8,1],[4,6,-1,-9,10,3,1,-9,2,6],[-4,8,-10,10,10,9,9,-1,-10,1],[10,-5,-3,9,6,7,-6,2,10,6],[-5,-4,-2,7,5,-4,-2,-6,-3,-4],[-8,-1,-6,2,6,7,-3,-6,-8,-9],[-10,10,1,-9,-10,-5,2,5,-8,-5],[7,6,5,-6,-4,7,-7,-6,-2,-3],[5,-3,2,6,-6,-6,7,4,-3,-6]],[[-3,-1,-10,9,9,4,-1,-3,-8,-5],[-2,-9,3,10,2,-3,8,7,10,-8],[1,-2,-3,-5,4,5,-1,4,8,1],[9,-8,7,-5,-5,-7,8,-9,4,10],[-4,-5,-1,-10,-2,-10,-5,10,-4,-1],[9,-5,7,6,6,1,-2,6,5,4],[-6,-10,1,-3,4,-5,-1,-10,4,10],[-5,-1,-9,-2,-4,-6,9,1,6,8],[-7,-5,-3,7,-4,-9,-9,-5,9,7],[-4,-4,-8,4,1,6,-4,6,-7,-7],[9,-9,6,7,1,-9,-6,7,-9,8]],[[4,-8,6,-8,-5,5,10,-2,-7,-2],[-2,1,-5,2,1,4,5,-4,5,5],[8,4,3,4,5,-8,10,-7,-10,-1],[-2,-8,6,-9,5,-1,-5,9,-10,-9],[1,-2,-7,-6,-9,-1,3,-7,1,-1],[9,7,6,-3,1,1,-7,4,1,4],[6,-2,-5,9,-4,-10,2,-8,-5,5],[3,7,9,6,1,4,7,8,3,-8],[8,4,7,-6,-5,8,9,7,-7,9],[-7,9,9,4,5,-10,1,-10,-8,-9],[-1,10,-2,-9,-2,-1,1,10,5,1]],[[7,-2,-7,-7,1,7,-4,-2,-4,7],[1,-4,8,-2,2,-5,-9,9,1,1],[1,8,5,-2,-2,4,9,-6,3,-1],[5,6,-5,10,-9,2,10,-7,-9,-3],[-8,-2,6,5,8,-6,2,-7,-5,4],[9,-7,-3,6,-3,-3,-8,9,5,-5],[10,5,1,8,8,-3,-6,-8,5,3],[4,9,4,-8,-4,3,-4,3,-8,-3],[-2,5,-1,9,8,-3,1,-6,2,6],[-7,-9,7,6,2,2,-10,-2,-10,6],[-2,-10,-3,-9,-10,-2,-4,-6,10,4]],[[3,-5,-5,-1,-7,-4,-6,-3,-1,-3],[-7,-8,5,-10,7,-8,-4,-3,-10,-5],[-1,-6,-3,5,1,-7,-4,-9,-10,-3],[-5,-9,-2,9,7,8,2,3,3,3],[8,2,6,9,10,-5,3,-5,6,-8],[7,9,8,-7,3,-6,-2,3,10,6],[-5,7,6,-4,6,-5,8,4,-9,-8],[1,-3,2,10,7,-2,-8,-10,-2,9],[8,1,-10,-1,-6,-9,-3,-1,-8,7],[-7,-8,7,-1,4,-7,4,6,4,2],[8,-8,-6,6,-10,-7,-1,5,-3,-8]],[[-6,9,4,-5,5,-10,-1,-6,9,-8],[6,-7,-2,-6,7,-2,-7,-7,8,-1],[9,8,2,-4,-9,-10,-10,1,-7,7],[-8,-9,1,10,-7,-4,4,6,-7,7],[-5,-2,-3,-8,-9,6,-5,-6,2,6],[7,-6,4,-7,4,-9,-10,-5,4,-3],[8,4,-6,-10,6,-8,7,-6,-7,2],[-6,10,1,-8,1,-2,3,-2,6,-7],[-9,-9,-8,7,-5,-7,-1,-6,-4,-9],[-10,-4,7,-3,-10,-9,-3,7,-1,-7],[5,-9,10,-1,10,9,-1,4,-1,-2]]], dtype = "int16")#candidate|2580|(6, 11, 10)|const|int16
var_2581 = relay.var("var_2581", dtype = "int16", shape = (6, 11, 10))#candidate|2581|(6, 11, 10)|var|int16
bop_2582 = relay.bitwise_xor(const_2580.astype('int16'), relay.reshape(var_2581.astype('int16'), relay.shape_of(const_2580))) # shape=(6, 11, 10)
func_2386_call = mod.get_global_var('func_2386')
func_2389_call = mutated_mod.get_global_var('func_2389')
var_2586 = relay.var("var_2586", dtype = "float32", shape = (2, 180))#candidate|2586|(2, 180)|var|float32
call_2585 = func_2386_call(relay.reshape(var_2586.astype('float32'), [6, 12, 5]))
call_2587 = func_2386_call(relay.reshape(var_2586.astype('float32'), [6, 12, 5]))
output = relay.Tuple([bop_2582,call_2585,var_2586,])
output2 = relay.Tuple([bop_2582,call_2587,var_2586,])
func_2593 = relay.Function([var_2581,var_2586,], output)
mod['func_2593'] = func_2593
mod = relay.transform.InferType()(mod)
var_2594 = relay.var("var_2594", dtype = "int16", shape = (6, 11, 10))#candidate|2594|(6, 11, 10)|var|int16
var_2595 = relay.var("var_2595", dtype = "float32", shape = (2, 180))#candidate|2595|(2, 180)|var|float32
output = func_2593(var_2594,var_2595,)
func_2596 = relay.Function([var_2594,var_2595,], output)
mutated_mod['func_2596'] = func_2596
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2656 = relay.var("var_2656", dtype = "uint32", shape = (3, 16, 10))#candidate|2656|(3, 16, 10)|var|uint32
var_2657 = relay.var("var_2657", dtype = "uint32", shape = (3, 16, 10))#candidate|2657|(3, 16, 10)|var|uint32
bop_2658 = relay.less(var_2656.astype('bool'), relay.reshape(var_2657.astype('bool'), relay.shape_of(var_2656))) # shape=(3, 16, 10)
func_1966_call = mod.get_global_var('func_1966')
func_1969_call = mutated_mod.get_global_var('func_1969')
var_2673 = relay.var("var_2673", dtype = "uint8", shape = (45,))#candidate|2673|(45,)|var|uint8
var_2674 = relay.var("var_2674", dtype = "uint8", shape = (180, 1))#candidate|2674|(180, 1)|var|uint8
call_2672 = relay.TupleGetItem(func_1966_call(relay.reshape(var_2673.astype('uint8'), [3, 1, 15]), relay.reshape(var_2674.astype('uint8'), [3, 4, 15]), ), 0)
call_2675 = relay.TupleGetItem(func_1969_call(relay.reshape(var_2673.astype('uint8'), [3, 1, 15]), relay.reshape(var_2674.astype('uint8'), [3, 4, 15]), ), 0)
var_2685 = relay.var("var_2685", dtype = "uint32", shape = (3, 16, 10))#candidate|2685|(3, 16, 10)|var|uint32
bop_2686 = relay.bitwise_and(var_2656.astype('uint8'), relay.reshape(var_2685.astype('uint8'), relay.shape_of(var_2656))) # shape=(3, 16, 10)
func_1471_call = mod.get_global_var('func_1471')
func_1474_call = mutated_mod.get_global_var('func_1474')
var_2693 = relay.var("var_2693", dtype = "int8", shape = (208, 4))#candidate|2693|(208, 4)|var|int8
const_2694 = relay.const([6.535627,-2.516701,-1.225685,-4.176582,-3.515873,3.894414,-1.254805,5.129106,5.911515,8.799907,-4.616871,-6.120813,-4.096394,-9.940851,-0.744711,-5.870807,-1.858483,-0.177595,-1.906840,-5.289772,9.423844,3.036458,-0.815562,-5.462307,-5.156691,2.043133,4.020780,-5.615054,-7.209775,-7.583949,-1.225931,8.027551,1.613810,3.734416,-8.076872,-5.708700,-3.510403,-6.767654,1.569156,-4.123091,-7.213244,-4.165201,9.956155,2.125232,0.045291,3.798038,-6.704353,7.810092,-4.627230,5.613368,-0.428373,-3.082135,3.495402,6.488203,8.407874,9.782772,2.762670,-9.386735,-3.118187,0.405123,5.726315,4.462850,1.564824,9.357792,-6.521989,-7.263178,7.976946,6.555890,2.353221,3.949638,-3.424304,-1.182511,-8.199098,-1.256736,-8.698701,5.805362,-4.980808,9.940696,4.313017,3.843918,2.698965,-0.635996,-8.007047,-7.944668,8.203286,0.549181,-3.118069,1.579596,-8.236684,2.084960,4.499585,-7.017731,5.241414,9.442197,-8.307969,-5.157850,2.358032,-2.040374,-4.466432,0.682701,-9.497942,7.837068,4.116117,-8.742241,4.672173,-4.069473,-6.242338,-7.089801,4.492962,-1.797535,0.387123,6.204200,6.757187,-2.581084,-4.248129,8.662914,-6.713197,0.444672,-8.175472,5.657864,7.831719,-2.285228,-6.704531,-5.830606,8.144633,-7.670566,7.403259,6.191379,8.254497,3.582843], dtype = "float64")#candidate|2694|(130,)|const|float64
call_2692 = relay.TupleGetItem(func_1471_call(relay.reshape(var_2693.astype('int8'), [16, 4, 13]), relay.reshape(const_2694.astype('float64'), [130,]), ), 2)
call_2695 = relay.TupleGetItem(func_1474_call(relay.reshape(var_2693.astype('int8'), [16, 4, 13]), relay.reshape(const_2694.astype('float64'), [130,]), ), 2)
output = relay.Tuple([bop_2658,call_2672,var_2673,var_2674,bop_2686,call_2692,var_2693,const_2694,])
output2 = relay.Tuple([bop_2658,call_2675,var_2673,var_2674,bop_2686,call_2695,var_2693,const_2694,])
func_2702 = relay.Function([var_2656,var_2657,var_2673,var_2674,var_2685,var_2693,], output)
mod['func_2702'] = func_2702
mod = relay.transform.InferType()(mod)
var_2703 = relay.var("var_2703", dtype = "uint32", shape = (3, 16, 10))#candidate|2703|(3, 16, 10)|var|uint32
var_2704 = relay.var("var_2704", dtype = "uint32", shape = (3, 16, 10))#candidate|2704|(3, 16, 10)|var|uint32
var_2705 = relay.var("var_2705", dtype = "uint8", shape = (45,))#candidate|2705|(45,)|var|uint8
var_2706 = relay.var("var_2706", dtype = "uint8", shape = (180, 1))#candidate|2706|(180, 1)|var|uint8
var_2707 = relay.var("var_2707", dtype = "uint32", shape = (3, 16, 10))#candidate|2707|(3, 16, 10)|var|uint32
var_2708 = relay.var("var_2708", dtype = "int8", shape = (208, 4))#candidate|2708|(208, 4)|var|int8
output = func_2702(var_2703,var_2704,var_2705,var_2706,var_2707,var_2708,)
func_2709 = relay.Function([var_2703,var_2704,var_2705,var_2706,var_2707,var_2708,], output)
mutated_mod['func_2709'] = func_2709
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2774 = relay.var("var_2774", dtype = "bool", shape = (4, 6, 14))#candidate|2774|(4, 6, 14)|var|bool
const_2775 = relay.const([[[False,True,False,True,True,False,False,False,True,False,True,True,False,True],[True,True,True,False,True,True,False,False,False,True,True,True,False,False],[False,False,False,True,True,False,False,False,False,False,False,False,False,True],[True,False,False,False,True,True,False,False,False,False,False,False,True,False],[True,False,False,True,False,True,False,True,True,False,True,False,True,True],[False,True,False,True,False,False,True,True,True,True,False,True,True,False]],[[True,True,False,False,True,True,True,True,False,False,False,True,False,True],[True,True,False,True,True,False,False,True,False,True,False,True,False,False],[False,False,True,True,True,True,True,False,False,False,True,False,False,True],[False,True,False,True,False,False,True,True,False,True,False,False,True,True],[True,True,True,True,True,False,False,False,False,True,False,False,True,True],[True,False,False,True,True,False,False,True,False,True,True,False,True,True]],[[False,False,False,True,True,False,False,True,False,False,True,False,True,False],[True,True,True,False,True,False,True,False,False,True,True,True,True,False],[True,False,False,False,False,False,True,True,False,False,False,True,False,False],[True,False,False,False,True,True,False,False,True,True,False,False,True,True],[True,False,False,False,False,False,False,False,False,False,True,True,False,False],[False,False,False,True,False,False,False,True,True,False,True,True,False,True]],[[True,True,True,False,True,True,False,True,True,True,True,True,True,False],[False,True,False,False,True,False,False,False,False,False,True,False,False,True],[True,False,False,False,True,True,False,False,False,False,True,True,True,False],[True,False,True,True,True,True,False,True,False,False,True,False,False,False],[False,False,True,True,True,False,True,False,True,True,True,False,False,False],[True,True,True,False,False,False,False,True,True,False,False,True,False,True]]], dtype = "bool")#candidate|2775|(4, 6, 14)|const|bool
bop_2776 = relay.logical_and(var_2774.astype('bool'), relay.reshape(const_2775.astype('bool'), relay.shape_of(var_2774))) # shape=(4, 6, 14)
const_2782 = relay.const([[[False,True,False,False,True,False,False,True,False,True,True,False,True,True],[False,False,True,True,False,True,True,True,True,False,False,False,True,True],[True,True,False,False,False,False,False,True,False,False,False,True,False,True],[True,True,False,True,True,False,False,True,True,True,True,False,True,True],[False,False,True,True,False,True,True,False,True,False,False,False,False,False],[True,False,False,False,False,False,True,True,False,True,True,True,True,False]],[[True,False,True,True,True,False,True,True,True,False,True,True,False,True],[True,True,False,False,True,False,False,True,False,True,True,True,False,False],[False,True,False,False,False,True,True,True,False,False,False,True,True,True],[False,True,True,True,False,True,True,False,True,True,True,True,False,False],[False,True,False,True,False,False,True,False,False,False,True,False,True,True],[True,False,True,False,True,False,True,False,True,True,False,False,False,True]],[[True,True,False,False,False,False,True,False,True,False,True,True,False,False],[True,True,False,False,True,True,False,True,True,False,True,False,True,True],[False,True,False,True,False,False,True,False,True,False,True,False,False,False],[True,True,False,False,False,False,False,False,True,True,True,False,True,False],[False,False,True,False,True,True,False,False,False,True,False,True,False,True],[True,False,True,False,True,False,False,False,False,False,False,False,True,True]],[[False,False,True,True,False,False,True,False,True,True,False,True,True,False],[False,True,False,True,True,True,True,True,True,True,True,False,False,True],[False,True,False,False,False,True,True,False,True,True,False,False,False,False],[False,True,True,False,False,True,False,False,False,True,True,False,True,False],[False,True,True,False,False,True,False,False,False,False,True,True,True,True],[True,True,False,True,True,True,False,True,False,False,True,False,True,False]]], dtype = "bool")#candidate|2782|(4, 6, 14)|const|bool
bop_2783 = relay.minimum(bop_2776.astype('uint16'), relay.reshape(const_2782.astype('uint16'), relay.shape_of(bop_2776))) # shape=(4, 6, 14)
bop_2786 = relay.right_shift(bop_2783.astype('int16'), relay.reshape(bop_2776.astype('int16'), relay.shape_of(bop_2783))) # shape=(4, 6, 14)
func_908_call = mod.get_global_var('func_908')
func_912_call = mutated_mod.get_global_var('func_912')
const_2793 = relay.const([6.226464,5.179159,-2.849022,4.181121,1.304901,5.948189,-2.036612,2.749164,2.587404,-2.834959,5.411362,2.564708,4.924928,2.627743,0.647968,-2.572055,6.914919,-8.520706,5.235368,9.641529,4.904304,3.894600,-6.058700,-4.007927,-2.335260,2.289531,8.216023,7.691212,3.928921,9.479026,2.519875,3.341600,-8.539910,-9.886297,4.711076,-2.994392,-5.930551,-3.171549,-5.576845,9.545744,-8.061927,-6.299366,8.417166,-1.172990,-6.170360,7.802602,2.794874,9.215480,-2.093837,9.127816], dtype = "float64")#candidate|2793|(50,)|const|float64
const_2794 = relay.const([3.305861,-1.433657,-1.983186,-3.194288,-1.545810,-8.421377,-3.717841,-1.935054,2.849980,-7.555903,-7.073237,-5.448781,-7.740494,-6.523529,7.683484,2.164008,-5.791961,-9.593002,1.024131,0.489668,-1.185875,7.912399,-9.996681,2.292465,-6.179376,-7.847650,7.624757,0.201516,-8.550221,0.607134,3.181584,-1.851633,-4.136447,6.173938,5.095986,5.743435,-0.094316,0.720074,-1.038596,-9.126783,-2.353380,7.813529,7.018453,4.815761,7.407522,8.039684,-7.396097,-1.260728,8.041607,-7.027921,-5.828910,-2.303900,6.956976,6.384822,-7.101412,-9.212006,-6.130062,2.772372,-2.674352,0.485635,0.271447,6.040956,-4.830485,4.970834,2.808630,-9.517774,0.262281,-1.391781,-5.345958,0.637134,-2.811569,-0.710238,5.697805,-5.286170,-1.342252,5.028565,0.791033,0.787197,-1.539559,9.043009,5.943017,6.174092,-7.934212,2.149091,1.571257,3.205766,-7.388791,-3.472962,5.902129,7.195524,-0.863503,-6.463790,1.427833,1.419176,-1.399540,8.969064,5.297151,-5.780367,0.832198,-9.294810,-5.778137,-9.307615,0.766215,5.248739,5.586938,0.893309,3.074062,8.879873,3.803054,3.290001,8.327083,7.902140,8.599180,-3.882537,9.725959,-5.447282,5.159261,-7.251269,2.123018,5.616388,2.530383,4.399494,-4.131682,8.801164,4.133704,9.989185], dtype = "float64")#candidate|2794|(126,)|const|float64
call_2792 = relay.TupleGetItem(func_908_call(relay.reshape(const_2793.astype('float64'), [1, 10, 5]), relay.reshape(const_2794.astype('float64'), [126,]), ), 0)
call_2795 = relay.TupleGetItem(func_912_call(relay.reshape(const_2793.astype('float64'), [1, 10, 5]), relay.reshape(const_2794.astype('float64'), [126,]), ), 0)
uop_2796 = relay.cos(bop_2783.astype('float64')) # shape=(4, 6, 14)
output = relay.Tuple([bop_2786,call_2792,const_2793,const_2794,uop_2796,])
output2 = relay.Tuple([bop_2786,call_2795,const_2793,const_2794,uop_2796,])
func_2803 = relay.Function([var_2774,], output)
mod['func_2803'] = func_2803
mod = relay.transform.InferType()(mod)
mutated_mod['func_2803'] = func_2803
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2804 = relay.var("var_2804", dtype = "bool", shape = (4, 6, 14))#candidate|2804|(4, 6, 14)|var|bool
func_2803_call = mutated_mod.get_global_var('func_2803')
call_2805 = func_2803_call(var_2804)
output = call_2805
func_2806 = relay.Function([var_2804], output)
mutated_mod['func_2806'] = func_2806
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2824 = relay.var("var_2824", dtype = "uint64", shape = ())#candidate|2824|()|var|uint64
var_2825 = relay.var("var_2825", dtype = "uint64", shape = (7, 7, 3))#candidate|2825|(7, 7, 3)|var|uint64
bop_2826 = relay.less(var_2824.astype('bool'), var_2825.astype('bool')) # shape=(7, 7, 3)
output = relay.Tuple([bop_2826,])
output2 = relay.Tuple([bop_2826,])
func_2833 = relay.Function([var_2824,var_2825,], output)
mod['func_2833'] = func_2833
mod = relay.transform.InferType()(mod)
var_2834 = relay.var("var_2834", dtype = "uint64", shape = ())#candidate|2834|()|var|uint64
var_2835 = relay.var("var_2835", dtype = "uint64", shape = (7, 7, 3))#candidate|2835|(7, 7, 3)|var|uint64
output = func_2833(var_2834,var_2835,)
func_2836 = relay.Function([var_2834,var_2835,], output)
mutated_mod['func_2836'] = func_2836
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3074 = relay.var("var_3074", dtype = "float64", shape = (3, 8, 9))#candidate|3074|(3, 8, 9)|var|float64
uop_3075 = relay.log10(var_3074.astype('float64')) # shape=(3, 8, 9)
func_908_call = mod.get_global_var('func_908')
func_912_call = mutated_mod.get_global_var('func_912')
const_3079 = relay.const([-3.996276,7.779387,7.143004,-4.504736,-9.847289,6.057521,-9.917651,9.991560,5.803834,-1.087382,-6.093378,7.028229,-6.304766,-1.177262,0.230934,9.477633,3.961789,1.511329,0.434559,-0.660791,7.181706,2.035149,-7.374877,-6.233849,-3.874144,-8.367058,-1.897549,-8.867044,-0.433325,4.070315,-8.849932,4.933285,3.455801,-4.156098,4.090387,1.557902,-6.985536,-7.597165,9.659079,3.930347,2.812401,-7.981270,7.820063,-8.336297,-8.478823,1.649539,-6.946809,-8.673512,2.885531,6.637834], dtype = "float64")#candidate|3079|(50,)|const|float64
const_3080 = relay.const([[9.320299,4.839900,-9.878238,-0.077000,5.123325,1.034779],[-7.235984,0.836164,-3.503142,-7.760378,5.273280,-9.386445],[-8.081230,1.433461,2.865086,9.783808,8.039171,9.054030],[8.296344,8.757097,3.739276,-2.033788,-7.453696,-2.592676],[-4.283743,2.947949,-3.143208,-3.545312,6.764392,4.988844],[-1.127493,0.798159,-0.150371,-9.148771,6.347681,-1.264615],[-2.570548,-2.315757,-9.467967,-1.340078,7.155201,-0.304935],[1.231120,8.162722,3.022106,7.160651,6.893115,2.124742],[-0.254515,-5.648184,2.697838,-6.658762,2.315905,-8.253652],[1.040080,-7.006258,-6.988543,0.590557,3.883982,8.810245],[9.446629,2.750860,9.461612,-3.387890,-5.753022,8.571592],[8.242093,4.830842,-2.004753,-6.605680,-5.940291,9.956296],[-6.670525,-2.779659,0.386814,-3.631110,2.880123,1.976180],[-6.380023,-0.892430,-7.021917,2.373618,7.816723,8.330554],[-0.993768,-1.569812,-3.820138,-3.297975,-6.628511,6.258564],[-6.572868,-6.063734,6.874038,-8.782870,-1.674654,-7.669588],[2.873450,-5.250821,-5.936028,-0.723964,-2.459960,-1.185586],[-5.226535,6.083606,0.162984,-2.528372,-8.316794,0.409259],[7.497143,7.797352,-1.614145,-3.978790,5.122848,9.620897],[-6.164291,8.947004,-3.819012,-6.005749,-9.243748,1.715745],[-4.395533,8.556774,-7.727189,-7.473820,-9.329494,0.611365]], dtype = "float64")#candidate|3080|(21, 6)|const|float64
call_3078 = relay.TupleGetItem(func_908_call(relay.reshape(const_3079.astype('float64'), [1, 10, 5]), relay.reshape(const_3080.astype('float64'), [126,]), ), 2)
call_3081 = relay.TupleGetItem(func_912_call(relay.reshape(const_3079.astype('float64'), [1, 10, 5]), relay.reshape(const_3080.astype('float64'), [126,]), ), 2)
var_3082 = relay.var("var_3082", dtype = "float64", shape = (3, 8, 9))#candidate|3082|(3, 8, 9)|var|float64
bop_3083 = relay.multiply(uop_3075.astype('uint64'), relay.reshape(var_3082.astype('uint64'), relay.shape_of(uop_3075))) # shape=(3, 8, 9)
func_734_call = mod.get_global_var('func_734')
func_739_call = mutated_mod.get_global_var('func_739')
const_3092 = relay.const([-4.873583,6.800053,-7.632240,1.280695,-5.529532,6.765397,7.514476,8.477309,-3.617828,8.444349,0.983974,2.792118,8.828120,0.013282,-0.093568,0.050634,-6.639921,3.603649,-1.520083,1.475140,9.372544,-1.993735,0.182581,8.196875,6.474370,5.976730,9.767189,3.366186,0.527904,8.444033,8.944144,-6.243376,6.429938,-5.133364,-5.941197,-6.470931,-3.294476,-5.992683,-2.315843,4.692306,4.845081,-9.082910,-5.886807,3.124708,-1.964753,7.646980,1.754713,-9.788319,-9.197849,-9.471349,-2.776311,-2.739272,5.680666,0.310232,3.182258,6.151725,6.889996,2.321110,0.465066,4.603258,5.587174,4.248975,-9.079689,9.748700,0.163353,9.867082,-6.179824,-4.809439,7.311154,4.931562,7.265389,7.540081,-0.529483,-2.445221,8.311930,6.441944,-0.205119,-8.171310,-8.007140,3.310873,4.866242,-8.344557,7.581146,-7.061872,-4.289353,2.143578,-3.683180,-3.555448,6.769343,1.319971,1.892551,5.041535,7.302997,-9.728858,2.207219,2.351420,1.100294,-5.488234,6.419214,0.646674,-5.996446,8.408904,9.010286,7.938243,-8.623225,8.830007,8.826605,5.135959,-5.494721,6.591107,-0.838850,3.387007,-1.497425,-7.326363,-2.393943,4.833447,-4.285971,2.199289,-6.221024,-7.386610,9.079707,-9.955971,-5.577128,-4.593663,-9.058346,-9.137501,-5.731212,-0.377762,8.044649,-7.649257,-7.370574,-0.204389,-5.035243,-4.001361,-9.701960,0.447905,-6.955179,-1.105956,-4.213570,-8.569115,-4.793795,1.645139,-4.048325,6.284550,-5.466137,4.595739,1.024053,9.082023,4.305818,8.428896,-8.346754,-9.142074,-5.914905,6.718658,3.308383,1.088779,-8.801845,-1.361896,-9.187053,-5.540476,-9.715219,0.558857,2.821960,4.884112,-7.714189,-8.280954,-4.825022,-7.208864,0.666761,5.222415,9.097493,1.358715,0.223974,-3.630772,5.344585,-9.191503,-3.940450,-0.949010,-3.349798,-2.044875,-2.424059,2.965453,8.859425,7.460976,6.649320,4.478169,-5.465741,-9.980696,8.319810,5.614628,2.896789,-3.408255,-7.659005,8.914462,-3.529905,6.231895,-3.843971,8.213032,-2.466525,-8.558750,5.310417,-2.653157,-0.104871,5.706281,2.889450,9.678897,-6.070838,-7.927666,-7.142335,2.006397,-4.061170,1.141037,7.432830,-3.622077,6.142602,6.688206,2.214128,-4.655122,-4.219619,2.274906,6.559397,-5.553165,-7.154489,-1.002753,-4.285695,7.071075,-7.320473,7.446782,-5.344941,-7.400317,3.053411,-5.156000,9.908231,-3.013211,2.750094,-6.737092,-4.098851,-4.690628,2.205842,0.182006,9.319198,-6.267239,3.376429,3.909117,-0.855596,-2.055361,-7.199077,-6.156196,4.008723,8.674134,-2.531637,7.587535,6.852420,0.007687,-3.458100,-5.743574,5.732896,-7.962861,7.638699,-1.195767,2.529163,4.715745,-7.832878,4.158187,-7.552990,-3.157187,-8.147780,-4.824595,6.062147,1.922455,-9.157399,6.333724,-7.820613,3.753846,-9.842597,3.534111,-7.780273,4.830027,-6.780349,-7.266956,6.777218,4.355417,9.836344,5.528858,9.379346,-0.916244,7.057811,-2.111678,5.610708,6.852230,7.764850,9.737581,4.233733,-5.676501,-7.658030,-1.900800,0.748112,9.176213,2.675980,-9.268607,8.346018,4.629405,-2.203239,2.999205,5.656424,5.184499,2.976992,-2.642009,3.408640,9.816015,6.767021,-4.522895,3.109636,7.965168,-9.936497,-5.148033,0.469706,-9.396692,4.286238,7.015758,-8.604386,5.049213,-0.798023,-7.982701,1.036495,1.761499,-4.231448,1.647221,6.621479,-7.486955,-2.988087,-2.701871,-7.269037,-3.563388,-6.612445,-9.921675,-1.065543,-2.409940,0.206914,5.000254,-3.956621,-6.552646,-6.043891,1.755659,-5.614790,2.347697,-5.799566,-7.041062,0.612309,-7.669959,8.331681,-8.913547,-9.737299,-4.115294,-5.878827,-7.212869,-8.081650,2.861831,5.554916,-2.995749,-1.710654,-6.606782,7.409660,-8.194643,7.359547,-6.664901,6.887387,2.211136,-8.067824,-2.570103,9.364841,2.470509,1.355115,-4.844098,0.204364,-1.849289,-0.442687,-6.899647,-4.973888,-0.823809,0.770513,-6.415379,-8.970821,0.557758,1.539401,2.498497,-4.818726,-7.563788,0.751510,-8.957276,9.492207,-8.597140,-5.623852,-4.209994,6.008534,-9.335754,6.325917,-0.760404,-1.885863,-3.013836,3.902432,-0.307361,3.131898,1.399540,3.040736,9.259746,-8.586028,3.707043,5.634680,5.259813,-2.508544,0.307559,-7.001947,2.067078,6.095696,-3.357948,2.498365,2.140316,5.245862,3.285418,-5.411723,-9.225117,4.825486,1.398155,8.167715,1.379030,9.532905,8.361974,-8.603343,-2.517245,5.322336,-7.375005,-3.114715,1.846714,-8.230233,-1.056953,3.093733,-7.397119,-7.330780,9.958738,-7.013968,-2.339873,-7.108729,-5.656818,-0.684156,-6.132593,0.814643,6.940433,-4.694902,-6.111480,1.723601,-9.967010,5.927409,7.003192,-4.800777,9.607394,-5.359837,-3.088499,3.764720,3.760592,-0.021765,4.141638,6.942705,1.070563,3.077990,-3.283154,-8.290108,-8.487354,0.677216,-1.289675,-7.593598,4.863656,0.038737,8.303441,-3.434136,-3.566487,6.180170,-2.362479,-6.475667,-4.329477,9.204446,4.501182,0.558708,8.704660,4.914876,4.582322,8.413394,-4.474298,-8.401746,-1.947927,1.909621,0.959521,-1.168761,1.068151,7.040569,7.172394,-6.007404,7.597757,-6.087615,7.566414,-5.542382,3.171182,6.768166,-4.156708,-9.559639,-1.339181,7.985296,-6.153870,9.473089,6.595478,0.395807,-3.402064,4.796582,-3.948094,-1.381189,1.865534,-8.899095,3.052123,2.807494,2.857479,-7.455051,8.276018,-9.448671,0.484224,8.010699,-3.555794,9.211650,-5.915946,-3.128066,-8.152532,-2.170922,5.778788,9.250840,-7.575716,-4.530587,-1.325739,8.693652,8.893638,2.637343,-8.374684,2.166214,3.515831,6.565105,8.002044,-2.874060,-4.394008,1.495596,2.802110,-5.713722,9.054028,-9.207363,6.024528,4.432597,3.483457,-9.539509,1.738326,-0.460548,-2.758031,5.205310,-6.056429,-1.997859,-2.814103,-7.198082,-3.244739,-6.852888,-5.285279,7.534633,-1.705469,-1.494131,7.251830,9.414904,-1.754543,5.611665,3.047930,-5.897633,9.101471,8.365867,-0.914840,2.965673,-8.259051,2.345548,-2.708445,9.219465,0.063266,-8.438406,-0.815654,-1.447126,-8.988480,8.687127,-4.902945,8.543914,-0.507941,9.437798,-5.463960,3.012500,-3.899746,0.175943,5.851573,-5.632938,-9.287250,4.006630,-8.785656,4.760775,-3.827210,5.011347,-5.002360,-8.869732,8.283600,-2.066137,-3.508138,-5.050831,-6.490709,-8.388129,-5.532186,-1.524502,6.134191,9.104170,0.613075,-2.280729,-3.305985,-8.704978,-1.229714,1.491975,2.655875,-7.533828,-4.434059,-4.235697,-3.868561,-1.803150,3.033507,-3.632704,8.511864,5.676102,-5.052950,-8.970641,7.364782,-1.766412,7.905460,8.634344,4.032613,-9.009749,-1.067581,-8.791724,2.134178,-6.331229,5.217529,-9.856309,-1.474492,-9.533145,0.223355,5.700669,1.145425,2.772735,-3.167527,8.914144,-4.136800,8.555902,3.132869,7.973422,-9.954797,0.142321,-1.373076,-3.004420,7.159207,-4.791811,8.676881,4.532502,5.203240,0.041990,8.486343,8.926490,7.890484,1.860576,-2.057100,1.637908,-0.811992,-2.853071,-1.989541,4.077000,3.220004,6.714937,-3.850796,-3.804736,7.547955,2.987626,-8.070119,-2.383998,6.710988,-3.683953,-3.288362,-7.977964,9.935545,-3.690191,-2.059719,1.329429,5.585400,-8.911790,-8.163680,7.467469,0.121483,-6.784475,5.178513,5.786522,-2.665280,-2.401043,7.290108,7.048028,9.549395,2.090206,-2.965263,-4.672787,1.535775,5.482778,6.397911,4.137890,7.842533,-8.917142,-9.643261,3.056145,-7.313387,6.258998,-2.490282,-2.052775,-9.286963,7.508886,-8.311483,-3.996191,9.692986,6.900713,-3.778383,8.050831,4.803890,-1.626459,5.410589,-1.644244,7.068828,6.180501,4.241209,-1.369339,0.210623,-2.746515,0.191593,4.091355,-6.363238,8.552218,6.632615,-9.114241,-3.388994,-7.765212,-7.627149,7.139111,6.456051,7.376680,-8.138718,-5.462585,-2.132385,-9.639731,-8.112582,-9.298586,-4.440484,9.982989,-3.479175,-7.004638,5.510607,-1.337949,-4.444417,5.691166,-0.998229,-1.128770,-2.148652,1.761729,1.242329,-4.071683,9.552190,-6.904060,-0.188249,-3.638749,9.077335,-3.987009,9.878638,-0.550651,-6.534880,8.962047,-2.314923,-9.245355,7.311335,3.648771,3.557134,-4.502203,-5.274773,-2.348471,-6.190284,2.394616,-4.171551,-0.575214,-1.438437,0.068218,7.535462,-1.347882,-7.259415,-7.170725,-0.023602,-0.523464,-1.214493,-7.257410,7.554430,1.548940,2.284077,1.876013,-6.547374,-0.142367,-6.411612,-0.346043,-5.986281,6.536759,0.756688,-8.211081,-5.548540,2.602449,3.877218,0.652315,-6.241863,1.210765,-8.223551,9.477163,-5.403482,5.038464,6.484720,-5.547717,-0.749439,-4.153762,-1.660517,7.740749,7.032978,0.926848,8.561401,8.019972,0.411858,8.174831,8.642996,1.253679,-2.606060,-2.019335,-6.301178,-8.073802,7.637956,-8.178825,0.655280,-7.074775,-1.791022,-2.566455,-5.188149,6.827787,-4.099598,2.562157,-4.218196,0.889676,-8.378798,-3.786809,4.094748,3.616414,-7.632602,-7.973694,-6.703366,-9.253876,-0.094944,-0.225287,1.606630,-0.438284,-9.974731,0.442497,-3.474410,-9.584840,4.185206,1.309660,4.378486,6.835384,-3.268759,0.208464,-8.893356,7.935294,-7.462334,9.973786,-2.423904,0.672888,-7.838004,0.093134,-4.279657,2.107575,-1.385877,-4.194483,9.700780,9.719327,8.233054,-9.337259,7.881256,-2.061256,8.542749,7.218534,5.726839,2.030650,7.892822,5.766415,-0.276662,4.040591,6.536751,-0.624691,5.731313,9.911402,-2.949296,-5.215519,6.728189,-5.188258,4.988623,-4.187916,-6.305984,-8.729922,-9.561464,9.823451,-0.832017,-8.044794,-5.359197,-0.325373,-1.608201,-1.142686,-0.662881,-8.622556,2.796774,-7.358203,-9.785446,-9.941533,-5.564039,6.488808,-5.354619,2.454318,6.891914], dtype = "float64")#candidate|3092|(936,)|const|float64
var_3093 = relay.var("var_3093", dtype = "float64", shape = (80,))#candidate|3093|(80,)|var|float64
call_3091 = relay.TupleGetItem(func_734_call(relay.reshape(const_3092.astype('float64'), [9, 13, 8]), relay.reshape(call_3078.astype('float64'), [126,]), relay.reshape(var_3093.astype('float64'), [1, 80]), ), 2)
call_3094 = relay.TupleGetItem(func_739_call(relay.reshape(const_3092.astype('float64'), [9, 13, 8]), relay.reshape(call_3078.astype('float64'), [126,]), relay.reshape(var_3093.astype('float64'), [1, 80]), ), 2)
func_1900_call = mod.get_global_var('func_1900')
func_1902_call = mutated_mod.get_global_var('func_1902')
call_3108 = relay.TupleGetItem(func_1900_call(relay.reshape(var_3093.astype('float64'), [80,])), 0)
call_3109 = relay.TupleGetItem(func_1902_call(relay.reshape(var_3093.astype('float64'), [80,])), 0)
bop_3125 = relay.less_equal(uop_3075.astype('bool'), relay.reshape(bop_3083.astype('bool'), relay.shape_of(uop_3075))) # shape=(3, 8, 9)
output = relay.Tuple([call_3078,const_3079,const_3080,call_3091,const_3092,var_3093,call_3108,bop_3125,])
output2 = relay.Tuple([call_3081,const_3079,const_3080,call_3094,const_3092,var_3093,call_3109,bop_3125,])
func_3134 = relay.Function([var_3074,var_3082,var_3093,], output)
mod['func_3134'] = func_3134
mod = relay.transform.InferType()(mod)
var_3135 = relay.var("var_3135", dtype = "float64", shape = (3, 8, 9))#candidate|3135|(3, 8, 9)|var|float64
var_3136 = relay.var("var_3136", dtype = "float64", shape = (3, 8, 9))#candidate|3136|(3, 8, 9)|var|float64
var_3137 = relay.var("var_3137", dtype = "float64", shape = (80,))#candidate|3137|(80,)|var|float64
output = func_3134(var_3135,var_3136,var_3137,)
func_3138 = relay.Function([var_3135,var_3136,var_3137,], output)
mutated_mod['func_3138'] = func_3138
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3298 = relay.var("var_3298", dtype = "float32", shape = (8, 7, 12))#candidate|3298|(8, 7, 12)|var|float32
uop_3299 = relay.atan(var_3298.astype('float32')) # shape=(8, 7, 12)
func_44_call = mod.get_global_var('func_44')
func_46_call = mutated_mod.get_global_var('func_46')
const_3302 = relay.const([-0.286473,4.162140,4.494007,-7.883278,6.088847,9.731743,8.622936,8.075106,3.291664,-1.209732,9.793694,-8.430834,-0.548102,4.372066,8.692179,-1.844321,-5.218577,-0.806152,-0.965694,7.287194,-1.356346,0.676577,1.332317,1.138947,-0.783077,-9.981108,-3.088608,0.084208,8.422330,-0.388580,-0.515037,1.191303,-0.768783,-1.447339,-0.655523,-7.946409,5.262292,1.459828,2.660505,3.985972,-6.846764,1.462186,-1.366090,3.014150,6.228368,4.627766,-6.789845,-8.962629,-8.246588,8.770895,-2.264438,1.142194,-3.446765,7.332902,-9.388138,2.934305,-0.358924,5.499512,9.531362,-9.688734,-0.161518,-8.264742,-5.763487,-4.606607,-6.010829,-5.885390,2.178894,-6.060922,-2.413745,1.040583,-6.893748,8.083969,0.046582,-1.279524,8.522565,-1.553118,-7.266392,-3.347430,1.921425,7.873417,6.602802,3.393428,-6.615586,-6.360734,1.173610,8.894234,-2.379294,-7.230859,7.026479,8.600370,6.755615,-4.731051,-4.788115,8.417090,6.711986,3.548040,-6.245540,-0.811554,-5.797859,9.628169,-7.003252,-5.131811,4.860250,3.125543,7.996112,3.591947,-1.726654,-9.510387,-7.810564,-2.283622,-3.670357,-8.211113,-7.870904,0.205741,0.672074,-3.037311,3.665538,1.829553,7.900464,0.304001,6.962860,-9.262871,1.610840,-1.224961,-1.732896,3.974967], dtype = "float64")#candidate|3302|(126,)|const|float64
call_3301 = relay.TupleGetItem(func_44_call(relay.reshape(const_3302.astype('float64'), [9, 14])), 0)
call_3303 = relay.TupleGetItem(func_46_call(relay.reshape(const_3302.astype('float64'), [9, 14])), 0)
output = relay.Tuple([uop_3299,call_3301,const_3302,])
output2 = relay.Tuple([uop_3299,call_3303,const_3302,])
func_3310 = relay.Function([var_3298,], output)
mod['func_3310'] = func_3310
mod = relay.transform.InferType()(mod)
mutated_mod['func_3310'] = func_3310
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3311 = relay.var("var_3311", dtype = "float32", shape = (8, 7, 12))#candidate|3311|(8, 7, 12)|var|float32
func_3310_call = mutated_mod.get_global_var('func_3310')
call_3312 = func_3310_call(var_3311)
output = call_3312
func_3313 = relay.Function([var_3311], output)
mutated_mod['func_3313'] = func_3313
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3360 = relay.var("var_3360", dtype = "float32", shape = (8, 1, 16))#candidate|3360|(8, 1, 16)|var|float32
var_3361 = relay.var("var_3361", dtype = "float32", shape = (8, 12, 16))#candidate|3361|(8, 12, 16)|var|float32
bop_3362 = relay.not_equal(var_3360.astype('bool'), var_3361.astype('bool')) # shape=(8, 12, 16)
output = relay.Tuple([bop_3362,])
output2 = relay.Tuple([bop_3362,])
func_3366 = relay.Function([var_3360,var_3361,], output)
mod['func_3366'] = func_3366
mod = relay.transform.InferType()(mod)
var_3367 = relay.var("var_3367", dtype = "float32", shape = (8, 1, 16))#candidate|3367|(8, 1, 16)|var|float32
var_3368 = relay.var("var_3368", dtype = "float32", shape = (8, 12, 16))#candidate|3368|(8, 12, 16)|var|float32
output = func_3366(var_3367,var_3368,)
func_3369 = relay.Function([var_3367,var_3368,], output)
mutated_mod['func_3369'] = func_3369
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3462 = relay.var("var_3462", dtype = "float32", shape = (7, 8, 11))#candidate|3462|(7, 8, 11)|var|float32
uop_3463 = relay.log(var_3462.astype('float32')) # shape=(7, 8, 11)
output = relay.Tuple([uop_3463,])
output2 = relay.Tuple([uop_3463,])
func_3481 = relay.Function([var_3462,], output)
mod['func_3481'] = func_3481
mod = relay.transform.InferType()(mod)
mutated_mod['func_3481'] = func_3481
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3482 = relay.var("var_3482", dtype = "float32", shape = (7, 8, 11))#candidate|3482|(7, 8, 11)|var|float32
func_3481_call = mutated_mod.get_global_var('func_3481')
call_3483 = func_3481_call(var_3482)
output = call_3483
func_3484 = relay.Function([var_3482], output)
mutated_mod['func_3484'] = func_3484
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3547 = relay.const([[[7.441488,-2.968590,8.747561,3.135894,-6.065077,0.104527,7.866176,2.898469,-4.153994,1.750922,-7.215763],[-3.404934,7.300150,-0.705518,7.968972,4.444085,-3.737744,5.566203,1.747960,7.082677,-1.238332,5.288643],[-3.268674,5.227288,2.362059,-4.704359,-5.862415,7.222310,-4.248786,-0.810129,1.082398,9.998759,-7.298933],[-6.621948,9.048028,4.359119,-8.197869,7.486572,3.371117,8.097795,8.849379,2.077997,-5.183191,3.861324],[-9.971725,-3.608517,-0.166090,9.249965,0.167899,-4.244412,-7.317247,-3.924990,-3.322639,7.063981,-5.486379],[-5.568284,5.711471,5.915016,7.756096,-5.432519,1.464715,4.462029,-2.727588,-1.222671,-4.628567,-9.152816],[-9.493939,0.650916,6.571266,1.184696,8.980932,2.507116,9.831216,7.949306,-0.595575,-4.459628,-4.961418],[5.142850,-0.247829,-5.030756,-8.519891,9.291782,3.265424,-4.905520,-3.316070,-3.566847,9.689604,-6.990415],[0.173113,1.687988,7.982882,5.607336,-8.273226,6.458064,-6.130773,4.696499,-8.719562,8.737890,-0.065135],[-2.495642,3.560167,-5.843866,3.269338,9.666914,-7.819233,-3.845406,-7.509332,-2.437717,-6.635868,-1.742630],[2.477910,5.272680,-2.177535,-7.646355,-2.128607,9.864754,6.086707,6.279902,-9.367521,9.126604,1.265436],[1.009002,9.550138,-2.370919,7.469360,-0.170187,0.503795,-4.998134,1.279094,-5.057885,-0.704761,9.273989],[0.418159,-7.782486,-6.680741,2.380333,5.397904,4.191701,-2.672037,-4.816601,-5.879216,-0.487206,-1.357948],[-5.249924,6.395298,-0.269208,-3.660896,-2.059438,-1.316327,-6.909804,-2.309034,-5.597758,-5.833510,1.015458],[-1.125670,-0.271654,-5.913786,-6.298285,4.278607,-1.043045,0.867513,-1.418943,3.013640,4.912784,7.244677]],[[-9.940361,2.152091,3.441345,-3.454581,-4.311382,-4.919841,-5.270539,-7.010850,-9.617852,3.490724,-9.449843],[9.476332,-8.089957,1.331204,-1.577877,1.377304,3.884230,4.257356,-0.264882,9.615620,-2.891836,4.790131],[-0.574122,4.401972,-3.601023,-9.937945,1.399693,7.267406,-2.326509,-1.272515,-3.148387,2.295348,-8.567390],[-6.880493,-0.782906,-3.010559,-3.109891,7.725916,9.142747,4.512803,0.367548,-9.695503,0.084482,5.531300],[7.368129,-7.662779,1.894694,3.394836,-3.421362,1.817932,5.148928,-9.148497,6.822101,-2.794675,-6.610903],[-0.416196,5.161312,4.239752,9.188451,-0.416299,-2.694847,-3.176305,-5.941957,3.718746,4.916761,-2.943796],[-8.036390,-5.582689,-0.246685,-9.912020,-6.442517,9.862489,-0.882740,-6.513737,9.470280,-5.845675,1.054717],[0.615168,-9.963681,0.265649,9.222921,-6.085229,-6.652481,-8.000711,7.633008,8.411608,5.024119,-9.070406],[0.889169,4.935827,8.728381,-3.736127,-1.089393,0.212885,0.189202,5.898450,-0.826700,-9.211633,-8.293061],[0.221747,-0.016788,-5.979626,4.552931,6.037723,6.372047,7.969262,-9.408616,-0.645965,-8.451817,1.230098],[-4.146208,-0.654194,-9.244575,7.154428,5.016058,-9.209162,6.610135,-2.679672,1.389563,-1.520621,-3.184377],[-1.598687,5.814458,-5.116261,-8.926976,4.258809,-8.941834,6.142429,8.110698,5.686489,0.181320,-2.098011],[-9.176415,-1.014285,-6.372561,1.246682,-0.544278,4.046010,-9.923292,1.995029,6.081441,9.130819,0.720328],[-1.380499,8.834745,0.954868,8.681482,3.830522,-0.420466,-6.729407,-5.688725,-0.042290,8.212558,0.004821],[9.584931,-9.872750,5.566228,-0.985149,-7.635607,5.571752,-8.361366,-7.130892,-9.350555,-9.225539,0.469247]],[[4.832128,-7.595668,7.365080,2.184842,5.770523,1.796466,7.440998,9.118292,5.459077,-5.140732,8.002731],[-6.212346,3.895064,2.242843,7.510975,-1.500403,4.642471,-2.959604,-4.899241,9.849569,-1.617988,4.458748],[1.056717,2.708671,-8.665643,-3.520207,2.681194,3.189553,0.313470,-7.962319,-3.164362,-3.925660,9.370956],[-9.303189,-7.812605,4.844805,-5.694191,3.633741,0.158796,2.541782,-9.895255,8.118426,-2.195689,-0.130498],[4.071666,-7.472307,2.133786,7.856659,-8.102817,-3.197617,3.188006,6.594898,-4.623405,-8.734759,-6.332950],[1.725342,4.707671,-5.277751,-5.122540,1.031947,5.707122,1.659887,-2.460722,7.558180,-7.387745,-1.809884],[7.996994,4.863887,-4.610490,8.941634,9.529605,9.755042,6.754995,-8.955341,9.796836,6.114400,-7.659324],[5.566814,-3.494508,1.046719,4.922981,-5.223560,4.903716,-2.367695,6.782242,-0.776352,2.293765,5.743402],[3.095781,-9.412619,-9.556869,4.921813,-4.146241,7.332965,8.825136,4.269453,-8.653319,3.232854,3.098617],[8.375994,8.612922,-8.376773,-9.057860,6.548814,9.589917,-8.368668,-1.762417,-8.188789,-6.612216,2.646221],[-9.312763,-3.931443,-1.405162,0.688559,-7.002925,7.680840,-2.630356,-9.981868,2.925785,0.944880,5.757694],[-9.912900,6.666865,-0.154057,3.374897,-7.869088,-5.511844,-3.778630,-4.969521,-2.875935,9.748089,1.038370],[9.617133,-2.434304,3.589194,-5.904856,3.266664,-3.815205,9.169426,-9.928793,-2.275303,6.165849,-9.174988],[-6.261992,1.018358,7.219877,-7.803444,-7.152241,-9.296446,-0.482608,-9.359380,-8.256183,-8.347528,5.508199],[9.422232,-1.406878,-6.276499,-6.587198,0.418246,0.478503,2.459157,0.181668,3.252503,-0.192606,-5.657527]],[[-9.821079,4.743977,-0.754071,1.178443,5.946757,-5.504653,8.313427,5.118693,8.436378,-2.282552,5.021304],[2.188723,7.988270,6.853232,-9.385740,-5.281842,-3.453186,6.783274,1.599033,-9.810616,1.126471,-9.973346],[0.978836,-1.575482,7.755955,-4.593754,-5.148823,5.284512,-6.837035,7.050481,0.389574,3.313802,2.783349],[-2.618710,-7.367882,-6.212728,3.496674,-1.733335,-5.292186,0.146663,8.267364,1.301544,6.884806,5.683660],[0.534994,-4.930904,-0.247078,-6.810334,-8.419132,9.104958,-1.635366,-3.684379,-0.406474,-9.995138,4.453604],[-4.533856,3.810941,0.862863,3.850256,3.410729,0.858872,0.838498,4.518418,-5.214804,-4.216696,-1.585873],[8.207814,8.684582,3.391203,-6.735003,0.266383,0.420478,-6.017032,-5.921225,6.867302,-7.285928,5.548995],[8.511131,-8.222953,8.693670,0.350738,4.892941,-5.935195,-4.540153,-4.840513,3.357562,-9.947624,2.914473],[7.591201,-8.032391,3.573582,7.219567,-8.123158,4.033509,-6.249011,5.707564,7.026592,-9.248285,9.532265],[4.109227,-8.890139,-2.334629,-7.733912,9.304136,1.295999,-7.604525,4.822917,5.457955,-9.622392,-9.382357],[2.495391,-1.998678,-7.294620,8.871675,-3.950813,8.518201,4.198607,0.874289,2.293615,0.834994,-1.526466],[6.403418,8.381813,0.542813,-3.943367,6.975017,9.236015,-7.827473,-6.835030,-1.713804,-9.979541,4.924464],[3.008616,1.460409,-3.224834,8.644475,7.022590,-6.285682,9.365267,-2.716533,1.681368,-6.756243,-0.419378],[-3.059491,-4.361430,1.878079,-7.560400,-3.434241,0.651061,6.830205,-3.965156,-4.640578,6.355487,-8.786398],[-3.615528,-3.759554,-6.889650,-6.498846,8.831582,-3.975213,7.013188,2.976273,-0.235501,1.063752,2.995811]],[[3.058571,5.190372,0.973812,-5.115830,-8.633597,5.028977,-6.722274,7.558759,-1.595490,4.660185,-2.509690],[-4.440639,1.314789,3.620423,-2.774755,3.199171,-8.593866,4.144239,7.484129,3.574732,-0.541381,1.405326],[6.195043,1.936486,7.194326,-3.754455,-8.061472,6.391827,8.769791,-1.384876,-3.057632,-6.789407,9.155647],[-4.928767,6.343858,-4.834193,-1.185586,2.785058,-4.254657,1.684269,4.056166,7.653706,-4.888882,7.936324],[3.183974,0.670208,6.480696,-4.396103,4.652188,-4.648537,-5.366086,-9.545908,-3.385411,-8.770158,4.409937],[-4.471622,0.186783,-6.257213,9.845420,-3.135476,5.120423,-5.673662,4.615745,9.458387,8.765397,0.076632],[-0.527479,2.139481,2.009918,4.212866,4.575463,-2.635946,1.917666,4.005591,-3.440151,0.946833,0.803972],[8.699093,-7.289901,-9.001019,-5.719604,-5.689740,7.790995,8.496067,3.638083,5.535997,-4.695768,-5.583915],[-5.820767,-3.079676,6.542346,1.925811,6.422439,4.831548,0.091886,-4.023787,7.245949,0.412972,-9.731513],[-9.953235,5.909765,-8.055566,3.179715,-5.143443,-4.132893,-0.284862,-5.564492,5.094730,-8.189516,-1.764704],[-0.621263,7.293768,3.782508,-9.639221,1.714599,1.770317,2.736735,9.209456,-1.918049,-1.347936,-2.373848],[-3.527624,-1.536365,1.517963,-9.278137,6.105480,-0.007616,7.505305,5.040861,8.979030,-2.965738,6.696951],[-5.394635,-5.160908,-0.943996,-1.739076,2.018058,-2.674131,-3.348406,2.480437,1.861913,2.674882,3.243170],[4.944923,-7.080913,-7.344776,1.779958,-0.361675,-5.437527,4.352792,-9.384363,9.114991,-7.302476,6.661728],[6.693104,-2.889993,6.040345,-3.199773,-6.499542,6.098125,-6.449507,7.498609,-5.203297,-6.936806,-2.110061]],[[0.375504,3.576690,-7.960559,-1.298221,-6.011432,-7.380707,-6.885679,-8.735572,2.877116,-2.755137,8.972355],[-2.563130,6.782257,0.688187,8.603012,8.915474,-0.660595,5.483686,-9.518751,-2.602761,-8.432849,2.164533],[0.186936,5.632990,-1.148798,2.787364,2.311670,-9.511008,-8.930620,-8.403723,7.631424,6.463817,-3.624644],[9.622253,-8.962117,4.665501,-4.599900,-0.213747,-3.150038,-4.834297,7.654853,-0.976299,3.974732,4.449571],[-7.755151,4.694420,5.337262,8.503140,-4.456899,9.307421,0.901349,3.917992,3.153634,2.578259,1.610535],[4.321595,4.123447,2.629167,-4.717066,7.353029,-5.796773,7.658141,2.316665,0.148628,5.602420,-6.292056],[4.450735,-6.229195,5.398728,-4.661574,-2.200940,-6.281483,-3.262771,-7.619209,-8.813725,8.143028,7.789696],[5.372858,-4.886528,-9.548162,4.593286,-7.308526,-6.069408,8.432905,-3.394432,-5.979561,2.381149,-2.947427],[2.626215,8.075568,-4.716022,-4.953982,6.046338,-9.080989,2.495937,0.378202,-6.976191,3.965226,-7.566262],[-7.108618,7.195716,8.926484,3.115442,-1.592655,9.012892,7.469205,-4.804144,2.684447,8.017845,4.447287],[-0.472576,1.319511,-9.085140,8.403161,5.362221,9.277129,-1.080136,-7.421067,5.874079,-5.577439,-9.159022],[-2.379499,-6.691553,-1.678617,-2.438279,-6.938521,-2.513573,6.880125,-4.567839,7.604979,-9.222724,-2.322525],[-4.297494,7.703452,7.661868,-8.486618,0.775718,7.324917,-6.498112,5.982917,5.994107,0.697791,5.580394],[5.699669,1.561666,5.943988,9.689824,-2.896204,-4.487591,3.400583,-6.472284,5.028275,1.796766,5.724472],[-8.595060,-3.811144,-1.694062,2.430636,-7.785395,2.188115,-5.187539,4.583867,8.790395,8.001232,1.981449]],[[0.476473,-0.644194,9.676466,3.587755,3.672610,0.426277,-3.317841,1.775612,8.482722,-6.566105,6.296130],[-2.393845,-3.592238,-7.081906,0.902613,0.071918,3.661393,-9.982229,9.386995,7.577283,3.268293,-7.595766],[-3.154585,-7.228979,2.522169,2.532440,6.859489,3.114920,0.809695,6.454297,-4.827343,9.755405,-7.939670],[-3.307407,-0.655185,-3.417888,6.509541,0.354545,-0.522185,7.424088,-5.156226,-8.534003,-5.358607,1.560959],[3.543744,5.481794,3.698585,-6.519784,-1.567411,8.848801,-7.756379,-4.234436,-7.507077,-2.854918,7.371399],[-5.883984,-6.860228,9.360016,9.660250,-1.495694,3.358735,-3.611607,-7.121810,-4.886981,0.901383,2.598844],[1.806700,2.842796,6.785897,-5.977538,-7.606322,-6.542625,0.646944,0.989745,0.303300,-1.704684,9.803586],[1.851026,7.543419,-8.421036,-4.182822,-9.006999,-5.005619,9.781187,0.509339,-3.634964,5.713062,-8.876264],[0.794178,6.501688,0.527384,2.146824,-3.184137,5.221996,3.747719,-5.633101,3.956722,6.275903,1.953569],[-2.127418,1.363602,-4.541696,7.936463,7.689576,-0.220995,8.323676,-7.413471,0.833259,-3.149202,-0.349304],[-0.936699,5.432491,-3.354070,9.861039,5.780613,-9.718883,1.836179,8.284847,-9.110184,4.084218,3.290027],[-5.523766,8.411212,-0.896294,-1.798195,4.917095,-6.853687,6.652583,-0.589143,-7.763850,-2.452153,-8.047767],[7.121902,-8.497463,-2.994745,-5.910368,8.509135,-5.398710,-1.295914,-2.264498,2.548263,-0.018783,-8.632690],[-9.703218,-1.453469,-2.019390,-7.496661,-1.325260,2.311357,9.583439,-9.021849,3.846703,-0.677811,5.827685],[2.121105,-7.120069,2.105526,-4.427540,-6.724889,-3.138543,6.950855,2.667128,3.333231,6.688961,-0.090704]],[[2.793779,-5.704599,-3.330736,-9.678997,-1.888454,0.488427,-0.863811,7.720035,-7.955969,-6.551381,-7.407656],[-2.835893,6.467197,-1.209936,-2.237778,8.488516,8.591399,-0.169767,-5.427158,9.521696,-1.446358,8.619901],[-5.747863,5.632581,-5.562292,7.163592,4.343775,-2.565926,-7.629324,3.814955,-2.160336,-8.885470,7.404335],[0.490075,5.225854,-9.486634,-4.245537,-7.053035,-4.547472,5.751095,3.925949,6.991204,-0.291241,6.978668],[-0.637113,1.915469,1.592063,7.207594,1.394496,6.596833,2.699408,-5.574814,0.692170,-5.768607,1.081205],[4.381201,8.261579,8.716049,-4.567662,-0.343521,-7.408988,4.947062,8.835685,-1.804478,-1.235645,9.157528],[9.074436,6.158001,-2.405766,-9.829102,6.843415,2.429995,-1.568789,3.443698,0.024813,-8.206122,7.914947],[-5.727606,-3.009162,4.815808,-6.332901,-8.686476,2.711515,-7.847400,-2.410443,1.068057,-6.447268,-5.221604],[7.734954,-5.598562,3.140370,-4.336485,-5.614754,8.413895,6.969114,8.654259,8.377537,2.804922,0.512778],[-5.958453,-9.184747,-9.064159,-4.051458,-6.759066,-7.787516,7.131216,4.576430,-6.640910,-9.983994,-6.261969],[8.020075,0.514327,7.552861,6.264840,-4.094254,-6.419907,0.962518,-1.592636,7.702622,1.591794,1.769127],[0.538723,9.616238,-0.854344,1.975983,8.871818,4.204443,0.740280,-1.263769,4.096467,0.285287,1.694293],[-9.502502,-2.723309,-6.134749,6.616565,-4.528499,-6.309957,8.318849,5.289032,7.045456,3.917201,3.950429],[-0.329028,0.353753,4.390693,2.211699,4.565587,-0.211781,-6.780059,0.366482,-9.672741,-4.131395,7.712460],[2.011241,7.573156,-7.680000,8.004207,5.981056,8.527955,-0.947871,1.414653,9.215431,3.694956,9.666278]],[[5.329431,-4.602761,-9.719558,-4.560661,-7.635580,8.942465,6.220190,-2.322826,4.336691,-3.748296,-3.886300],[1.348118,-0.350781,-8.407342,-3.851613,3.901341,-1.212681,4.228366,1.945983,5.782462,-8.964729,8.831036],[-1.034810,-8.014203,9.258344,-0.514389,8.200413,-9.694806,-6.832772,-3.468099,-1.645753,-8.441755,8.290708],[9.893528,-8.428573,-3.336715,5.396094,-7.610848,6.541360,-1.258252,4.779329,-2.498623,-8.386367,-5.109241],[0.514972,-2.142707,0.667422,-2.279252,-2.755571,0.841411,-2.521578,4.324338,5.986708,3.258940,7.640994],[6.807782,-3.531290,8.474755,-4.587243,-1.163548,-9.032819,7.350143,5.400193,-7.284946,-5.386473,-9.158527],[2.571384,-6.906819,7.304693,5.561653,0.784053,4.058997,-0.262584,5.322161,1.560686,-4.601310,-9.324949],[2.820810,-7.113074,6.700864,0.584341,3.971184,-4.191415,4.271383,-7.454006,-6.752231,0.491144,6.341033],[-5.256301,5.218484,-4.739577,-2.513722,6.589638,2.132539,8.646012,-4.335264,-4.683239,-6.032647,-1.366777],[7.787019,-0.987585,-9.879725,4.888096,-1.451831,-7.225916,7.064173,3.279686,0.014630,6.774883,-0.002304],[-3.450502,5.268735,3.161648,0.955850,7.071727,-6.192573,-0.089715,-2.589875,-4.837934,5.054973,-2.881887],[-8.861904,-8.606798,-4.749179,-5.986952,0.711755,-6.765255,8.459098,-2.864737,8.606017,1.247825,3.901297],[-5.661882,-6.101158,-4.214713,-0.205285,-1.196686,0.585249,-1.597584,3.832042,-0.284125,3.867374,7.072260],[-0.051112,1.841773,-6.803496,2.941799,-8.112115,9.420037,1.269795,4.821927,-9.985216,-0.901616,-9.237065],[9.007537,9.521480,-9.461705,-4.949942,6.923415,9.891193,-6.062798,-6.192412,-0.320266,-6.215942,6.958143]],[[9.069460,1.092892,-2.652244,1.773247,-4.421554,-4.008063,6.427714,3.643256,5.345855,-3.987498,4.889285],[-5.771492,7.427016,4.876770,-3.836164,3.500527,9.493555,4.378387,-3.881317,-4.591646,5.949163,-6.522306],[-7.077588,7.681340,-2.329666,-8.908432,-3.714560,3.505141,9.851218,0.325909,1.746600,-3.978907,9.575673],[5.020752,-9.523881,6.558334,-0.184039,-1.801923,4.846705,-0.995012,-3.305179,1.620400,8.650609,-3.660601],[9.210541,-2.197256,-7.959061,1.512950,-0.409060,7.542456,9.574966,4.459150,-6.164796,-7.180307,2.978023],[4.004890,2.750778,-1.604338,-2.993073,-3.239736,3.109386,-8.413781,5.915614,8.994653,-8.345534,-6.677528],[4.573611,-5.891483,-0.649480,7.947094,3.379243,6.949832,-3.132656,-1.599173,-7.370839,-4.335159,4.693206],[2.208867,4.363984,9.018759,6.597268,7.744527,9.961629,-6.346188,-1.638035,8.203215,-3.694795,-8.987909],[-4.779316,1.098206,4.847689,-0.225350,4.130455,6.096818,9.992720,-4.247449,4.055501,4.975512,3.741401],[-6.004082,-7.450382,-4.401832,-6.503507,0.966847,1.519569,0.637439,-3.938460,4.536014,8.653744,-6.367542],[5.257090,2.255054,-1.035175,2.504108,-0.876702,0.431585,9.677295,7.888906,1.150025,3.666825,-2.844063],[8.465642,-3.509655,-7.129743,-2.127342,-6.820746,2.857624,-8.901434,7.708774,-4.073110,0.134307,-0.222070],[1.907774,-5.609236,-0.355043,7.260464,-8.803090,7.332106,8.501007,-1.929063,9.099350,-2.031746,-3.860692],[-4.456848,-6.060671,1.670871,7.379285,5.605832,2.697824,4.525511,0.906068,-1.826217,6.857558,-2.290056],[7.508609,-9.063758,-8.225203,-7.673335,6.677764,-7.639062,7.306434,0.347412,0.360579,8.799709,-7.707274]],[[-9.719516,9.321507,3.217263,-7.354764,9.967452,-0.263876,-5.782283,-0.980310,8.138730,-2.076603,-7.127982],[2.213158,-3.900235,-7.687013,-0.917439,-6.483047,-1.693203,8.386692,-9.249895,3.361104,-1.709944,-4.984888],[-1.007655,4.452022,-4.089550,2.820085,2.794205,6.522098,0.933044,7.452507,-0.014415,-8.616568,3.119193],[1.508616,-1.037277,7.656133,-9.089903,6.388548,4.008268,5.279944,-9.978104,-9.878842,7.595774,3.545584],[1.548304,-1.568926,-9.685144,-9.670847,4.967743,-1.877897,-8.058306,-4.317484,5.129589,-6.380651,-2.751800],[-3.847793,-7.309793,-1.702521,-3.312517,1.405531,-2.788914,-9.919409,-8.522271,-0.348827,-2.702270,8.750454],[-2.807204,6.455169,-5.327235,-4.829842,5.311221,0.667482,7.365310,-9.763705,-2.252808,3.362676,7.688432],[1.127984,-5.742293,6.826467,-2.801291,-2.795533,-2.849896,-5.434845,0.893701,4.440651,-0.239366,-7.854649],[-8.880251,2.083039,-0.561025,0.172774,-2.678966,-4.436867,-2.597491,4.859382,-2.374817,-3.612986,-4.980961],[8.177457,2.786603,-3.838252,-7.753411,-0.550648,2.157914,7.468458,-7.732832,-9.741759,4.231345,-1.355550],[-8.097081,7.206622,7.977123,-5.639171,-6.898541,1.398139,-8.283800,7.401389,-1.518079,-4.376782,-6.103881],[-2.186428,-2.740576,6.527596,2.660804,-0.940652,-4.497101,-3.823309,3.050839,7.910707,1.968013,0.032329],[-8.390554,-3.836272,-9.730656,2.930423,-2.756392,-2.135681,-9.653925,-4.605610,5.308530,1.502514,-7.020700],[8.301733,-9.146405,-8.110047,0.062112,-4.615418,-2.846760,-9.644501,7.465657,0.758340,0.872115,-2.994259],[-6.902560,4.668612,0.771885,4.581128,4.570771,1.564182,4.044958,7.544515,-6.673992,-1.246977,-6.047728]],[[2.206198,-7.958177,2.231898,-8.197859,3.532669,-9.791423,-4.701425,-1.998419,-8.130805,-2.284774,6.904803],[7.892674,-5.538207,-8.587422,-3.561031,-0.816974,-0.140279,0.995940,-0.609858,-2.325062,-8.628798,2.797271],[-9.672940,-6.603901,8.802359,0.748051,-9.653555,2.119494,-0.573635,6.190345,-9.357454,-9.144077,4.790933],[-8.478644,-3.398793,6.249764,4.845506,4.179582,-3.421597,-5.066232,7.738147,3.777677,-8.806642,-3.571915],[-9.453080,-5.013994,8.781362,-3.154335,-4.808792,3.883270,4.673835,7.371539,8.259304,-9.419345,-3.528043],[1.793236,-7.463502,6.045429,4.899922,9.140078,5.415168,-7.690992,9.643585,4.231925,8.925575,-2.772699],[-8.398235,3.300251,-6.031141,8.994597,7.020285,-3.201444,4.797859,-2.042743,-0.465712,5.129585,0.206658],[-0.849319,-7.658390,-3.603268,-2.235516,-7.089891,-9.845881,-2.311343,7.192182,0.365580,-3.983741,4.550389],[3.262321,-7.505009,3.156776,-3.948541,3.733463,3.780018,-0.615402,1.195404,-8.588077,4.744487,-2.944358],[-2.434843,-3.832255,-2.714702,4.802702,-4.109548,4.750251,-4.050601,-4.537422,-1.430716,-0.702508,5.961725],[8.654889,6.580485,-2.034470,1.469847,2.857178,6.605157,4.043192,-9.723706,3.543326,-5.696368,-5.296125],[6.042837,6.736367,-6.740472,-7.086880,-6.243849,8.210100,2.174848,6.427302,-5.702106,-3.738864,-6.151165],[7.569398,5.584196,2.691223,6.343755,-2.120976,9.981425,-0.187034,3.393897,5.170970,3.511870,-3.893586],[6.529709,1.887567,-0.269439,6.378144,2.095916,3.520850,8.303808,-6.277869,-3.481981,1.849223,-4.233544],[-2.669783,-7.956540,-9.736827,-8.425201,2.237310,-0.677002,9.018312,-7.813512,7.466143,2.764665,-2.338294]],[[9.264125,1.210702,-2.320164,6.473322,3.826349,-4.307179,-7.148331,2.825465,8.323799,-2.216169,8.430120],[-6.414608,-4.395623,2.837559,7.922177,-1.378547,1.488781,-1.306526,-1.935671,-2.986479,0.826857,-1.097455],[5.235742,-0.999797,-8.507515,-5.942952,-2.457612,8.211821,-0.865920,-1.288489,4.926794,8.677744,2.973379],[-4.178023,6.181114,4.272823,4.138258,-5.844574,7.289466,-5.725066,1.458690,3.757770,0.469139,-0.654031],[8.605694,8.212347,8.457743,5.500001,2.954291,2.181818,3.587448,7.389632,-6.814920,3.457818,9.654267],[1.419849,1.395304,-3.177231,3.506436,-9.446022,-9.270554,3.384749,-0.214391,-5.170502,-7.874686,0.466794],[-2.087852,3.213770,-9.072597,-1.704147,-8.342267,7.603412,-1.550782,-1.301371,-4.134100,-1.111895,8.510668],[5.981768,6.838752,8.754252,3.805059,8.871555,6.849247,-5.546452,8.034530,1.262882,-1.928467,7.967729],[7.174977,-4.230988,9.065561,-6.175257,2.802516,-6.129043,9.826174,-3.129428,-5.112037,-7.793855,-3.058010],[-6.589731,9.164989,2.414020,-8.783710,-1.609255,2.772969,5.814568,6.437242,7.167838,7.878813,1.563019],[1.011040,1.593626,5.284579,8.936552,-0.963559,-9.659463,-1.219408,5.657764,-1.221949,-7.610806,3.993064],[-2.576621,0.329574,8.537597,-4.707558,4.148578,-5.931379,3.305300,-1.726326,-5.345424,-6.728080,-4.932233],[-1.378855,3.887702,1.154860,-7.425684,-3.959895,0.188947,-5.151360,-8.614300,-3.665118,-7.591274,3.986691],[-9.614641,5.180678,-9.894658,1.020881,-2.887728,4.654284,2.823521,3.725382,5.125876,-8.703722,4.792726],[8.630114,6.710605,5.166727,-5.955805,-1.935044,-5.743805,1.368375,9.335507,9.246319,7.494131,-3.829980]]], dtype = "float64")#candidate|3547|(13, 15, 11)|const|float64
var_3548 = relay.var("var_3548", dtype = "float64", shape = (13, 15, 11))#candidate|3548|(13, 15, 11)|var|float64
bop_3549 = relay.greater(const_3547.astype('bool'), relay.reshape(var_3548.astype('bool'), relay.shape_of(const_3547))) # shape=(13, 15, 11)
func_2386_call = mod.get_global_var('func_2386')
func_2389_call = mutated_mod.get_global_var('func_2389')
var_3557 = relay.var("var_3557", dtype = "float32", shape = (360,))#candidate|3557|(360,)|var|float32
call_3556 = func_2386_call(relay.reshape(var_3557.astype('float32'), [6, 12, 5]))
call_3558 = func_2386_call(relay.reshape(var_3557.astype('float32'), [6, 12, 5]))
func_1900_call = mod.get_global_var('func_1900')
func_1902_call = mutated_mod.get_global_var('func_1902')
const_3561 = relay.const([8.778904,-6.107337,-2.544954,-7.249032,9.188408,2.919086,-4.898691,-3.485888,7.679093,1.456104,-0.024824,8.361066,-9.636450,4.026127,-0.321376,3.595766,-8.057843,-5.050349,-0.080167,-7.452200,3.901614,-3.648696,-8.793006,-6.177567,3.707467,9.827199,-8.673421,-1.137035,2.674088,8.012796,6.893372,4.358707,-8.251818,-5.976536,5.773113,-5.652912,-8.259361,-8.915773,-2.210207,0.837006,-7.883296,2.950294,8.852528,6.891984,4.699760,-3.394617,8.307867,0.599781,1.010495,-0.129635,-8.282345,-1.608300,7.072421,7.739201,6.471101,-6.669538,-5.875298,-9.043774,2.785710,-3.529117,-2.310596,1.006884,8.338416,6.010860,4.218212,8.653224,2.394773,-8.612553,-3.786673,-3.376254,-5.305440,5.100497,-9.724928,-0.111843,3.476250,-8.707955,-2.597138,9.123368,-2.686198,-2.417192], dtype = "float64")#candidate|3561|(80,)|const|float64
call_3560 = relay.TupleGetItem(func_1900_call(relay.reshape(const_3561.astype('float64'), [80,])), 2)
call_3562 = relay.TupleGetItem(func_1902_call(relay.reshape(const_3561.astype('float64'), [80,])), 2)
func_2386_call = mod.get_global_var('func_2386')
func_2389_call = mutated_mod.get_global_var('func_2389')
call_3566 = func_2386_call(relay.reshape(call_3556.astype('float32'), [6, 12, 5]))
call_3567 = func_2386_call(relay.reshape(call_3556.astype('float32'), [6, 12, 5]))
func_2281_call = mod.get_global_var('func_2281')
func_2287_call = mutated_mod.get_global_var('func_2287')
var_3572 = relay.var("var_3572", dtype = "int16", shape = (65,))#candidate|3572|(65,)|var|int16
const_3573 = relay.const([[-4,-8,-9,8,2,-1,-5,-8,-8,-5,-1,9,2,6,4,7,-3,4,-4,6,-6,-10,5,-6,-2,-10,-7,-8,-8,8,10,-2,2,5,-6,-4,5,5,-4,3,-4,-9,-3,-10,1,5,-5,4,-2,-5,-7,3,3,-2,-1,-10,-9,5,-6,-2,-5,10,-5,7,-1,-6,-9,2,8,-8,-8,-3,-7,-8,-7,2,9,-2,-6,2,3,-10,10,4,-6,7,1,3,-10,3,-1,-1,-8,-7,-4,-4,8,9,3,-5,6,-5,2,4,-8,1,-1,2,-7,-4,9,-8,-1,6,-10,5,3,-4,-9,-10,7,-6,4,-10,8,-2,1,5,-6,-7,2,-4,-3,1,-9,9,-2,4,5,-9,-7,10,-2,1,-6,8,-2,4,-3,9,7,7,3,7,7,-10,10,6,5,-4,8,10,4,-7,-8,-8,2,-4,7,2,-1,10,-4,-5,-4,1,-9,-3,-2,8,5,-5,-1,4,2,4,10,-3,10,5,-7,7,-7,8,1,1,2,-2,7,-3,-2,10,-2,-6,3,8,8,-5,-8,-6,9,-4,5,5,2,9,-6,-7,4,-1,-5,-6,-6,9,1,2,5,4,4,10,-7,1,7,-2,-1,7,-1,2,1,-3,9,6,-3,-3,-10,-2,-3,-2,3,3,-6,2,3,-7,7,9,-7,-9,-5,-9,5,-4,6,-9],[10,3,-2,3,10,10,-10,-3,-5,-1,-5,7,-4,8,-7,-9,9,-2,8,4,5,-7,-4,6,-7,2,-7,-1,2,-1,6,-7,-5,-6,4,2,4,6,4,-7,-9,2,-8,7,4,-10,-9,5,-7,6,1,-3,-1,-2,1,5,-6,5,2,5,-9,6,3,-1,-2,-4,-9,7,5,5,7,-5,-9,-9,2,6,-3,9,-4,8,9,9,6,10,-3,9,-6,-3,7,-5,9,10,4,8,2,-5,6,1,-8,-5,-5,-3,1,4,-9,8,-2,8,8,5,-1,-10,-6,3,1,7,4,-5,-5,4,-9,1,-1,-9,-8,8,7,-8,-9,7,9,-8,-5,10,3,5,8,-5,-7,-7,-1,4,-3,2,-3,3,-6,-7,-3,8,-4,-10,-1,9,-3,2,-9,3,1,5,-8,-10,-9,-3,7,-10,6,-1,-9,6,-7,6,-7,10,-6,-5,-3,-1,3,7,-7,9,1,4,-10,-9,-9,5,-6,5,1,-8,-7,7,3,8,-4,-7,6,-2,10,-7,8,6,-8,8,2,-2,-5,9,-6,1,-5,-3,-10,1,-8,-10,8,-2,6,6,8,-9,8,2,-6,-3,9,-3,-3,-10,1,-9,3,-7,-3,-7,10,1,-3,-3,-6,-1,2,-4,6,-6,-4,-8,-6,6,-8,10,10,-6,-4,3,5,5,-7,2,4,2],[3,-5,-3,-10,-7,-8,2,1,5,6,-9,7,3,-9,9,7,9,3,-4,-4,-1,-7,8,-9,-1,3,7,5,-1,-8,-6,-4,-8,1,-8,-4,-7,2,-8,-8,-7,10,3,7,-2,6,-10,4,-5,-2,10,-4,7,-2,-10,-6,3,2,-5,-2,3,-4,-6,3,-3,-8,10,-10,9,-4,6,5,-9,-5,-5,-9,3,-3,2,-4,-8,-8,4,7,-3,2,2,7,4,4,-9,10,-8,4,-7,-7,-3,-5,-4,-10,-3,6,-8,7,-7,3,-3,9,-6,-3,3,9,-4,3,-7,7,-3,-7,6,-5,4,8,-1,-9,1,-9,2,10,-2,-6,-4,-1,5,-10,-2,5,-10,-5,1,-7,8,7,-4,5,-2,7,5,-4,7,-5,-6,-9,3,-9,-8,7,4,5,2,6,-3,1,2,-2,7,2,-8,-2,-4,5,7,7,7,1,-2,-7,-1,-4,-2,-4,4,4,8,10,7,4,-1,-7,-3,-10,-5,-1,-5,-9,-1,-8,2,4,-10,-2,4,-2,4,-3,-8,-1,2,-1,-9,6,5,5,-7,-7,-7,-3,2,-8,-5,-5,-6,7,-10,-6,1,1,7,-3,-8,9,-9,8,8,-10,-7,-7,3,2,4,-4,-2,-9,10,-3,-4,4,5,-9,-8,-5,5,-9,-7,4,10,4,-1,-3,7,-1,-6,-8,-9,-5],[5,-1,1,-9,-2,8,8,-6,-7,4,-4,-6,-2,-3,-9,-7,8,5,9,-8,6,2,9,7,-8,-1,7,-5,4,-9,8,-9,5,6,9,-4,-3,1,6,-10,-10,-9,2,4,-3,9,9,8,2,-8,1,6,-10,-7,-6,3,10,10,7,8,-9,3,-4,3,-8,-7,-3,-2,9,-9,8,8,5,2,4,-4,-4,2,-10,4,-6,-7,-3,1,-10,-6,2,10,3,-9,-9,-3,-10,5,-2,7,9,6,-3,-5,-5,5,6,-5,5,-10,-5,-1,10,4,-4,-7,-3,8,-7,-2,5,-2,-3,2,8,-4,6,7,-3,7,10,-2,-8,2,3,-10,1,9,-8,2,4,-9,5,-8,7,-6,1,1,-8,7,-6,10,-8,1,-10,1,1,8,-6,-4,4,-9,8,6,-4,7,-9,-7,-6,2,1,1,1,-10,8,9,4,8,-1,-9,-7,-5,5,-5,10,6,1,5,-7,-1,1,-6,10,-8,-10,6,-7,-6,-2,-3,8,-4,-7,3,8,-8,3,-3,-9,4,1,-7,-2,1,3,6,3,10,-3,-5,-6,7,6,2,4,-5,7,-3,2,-3,-8,-6,-3,1,1,4,-9,-7,-2,2,-5,10,8,1,7,-5,-6,-8,-1,-2,4,-10,-8,2,5,5,1,-2,-9,9,8,1,-6,1,-7,-2,1,-8]], dtype = "int64")#candidate|3573|(4, 264)|const|int64
var_3574 = relay.var("var_3574", dtype = "float64", shape = (936,))#candidate|3574|(936,)|var|float64
const_3575 = relay.const([[3.941084,7.867205,7.534476,2.833469,-0.164879,8.573163,9.851975,5.861615,7.110963,-5.022785,-3.449473,0.247500,-8.776791,-1.477643,-9.290227,4.936444,-3.269893,-5.108326,8.780089,-2.985836,6.072881,-9.617317,-6.878369,0.104598,3.746235,5.667446,-9.301146,0.179465,7.495023,-2.117516,-1.719087,-7.018587,-4.924665,-5.607364,-4.501758,9.262882,-6.903929,2.520879,0.842034,-5.800593,-4.771428,-9.887452,-6.752164,2.449613,6.976624,-8.571619,1.902833,4.747439,1.724039,5.427166,-3.432026,-8.694648,-0.981157,3.411070,-3.988531,7.899864,1.048090,-3.670239,3.168231,-2.647310,5.258485,-7.695317,6.406429,-9.210266,-5.284430,-6.885254,-5.820487,2.757366,-8.838215,-9.113472,1.331360,0.638167,8.621692,-6.959365,0.813742,9.819677,4.073015,9.706641,1.212429,-8.353652,4.604686,-7.522622,0.799361,4.769421,-6.534885,-0.815775,7.334692,3.498928,8.791400,9.426870,-7.704284,2.943262,8.009579,-0.922636,-5.812695,-4.694797,8.464127,0.106763,-8.484237,1.900386,-8.679978,-0.292095,9.167275,-9.963077,-2.695155,-6.298428,4.402490,-0.419734,-6.841307,6.587965,1.929128,0.273841,3.972234,7.454245,8.889041,-8.760696,7.313813,1.448033,-7.405815,4.595885,7.845968,4.594153,-3.859028,3.161224,-9.830342,7.053273]], dtype = "float64")#candidate|3575|(1, 126)|const|float64
call_3571 = relay.TupleGetItem(func_2281_call(relay.reshape(var_3572.astype('int16'), [13, 5, 1]), relay.reshape(const_3573.astype('int64'), [1056,]), relay.reshape(var_3574.astype('float64'), [936,]), relay.reshape(const_3575.astype('float64'), [126, 1]), ), 1)
call_3576 = relay.TupleGetItem(func_2287_call(relay.reshape(var_3572.astype('int16'), [13, 5, 1]), relay.reshape(const_3573.astype('int64'), [1056,]), relay.reshape(var_3574.astype('float64'), [936,]), relay.reshape(const_3575.astype('float64'), [126, 1]), ), 1)
func_2833_call = mod.get_global_var('func_2833')
func_2836_call = mutated_mod.get_global_var('func_2836')
var_3584 = relay.var("var_3584", dtype = "uint64", shape = ())#candidate|3584|()|var|uint64
const_3585 = relay.const([[10,-2,8,-2,2,8,-6,8,-5,8,8,-9,4,-10,-5,-6,4,8,2,4,-5,9,9,3,2,8,-5,2,8,-8,2,8,3,-7,7,-8,6,-6,-7,-1,-2,2,7,7,-5,6,10,-1,-9,-6,4,1,-3,6,-5,10,5,-7,5,-6,10,6,-6,-10,9,-3,10,-4,-8,3,-7,-3,5,3,-3,-10,2,2,5,5,8,7,-2,2,-9,-5,8,-9,7,4,-4,2,8,-6,-6,7,10,1,-4,2,-10,10,-5,2,4,2,10,-3,-10,3,9,9,3,9,-4,1,-8,-1,-3,-4,1,-2,-10,1,-4,-5,4,2,5,-7,2,3,10,-4,-9,9,-2,10,7,-1,6,6,1,7,9,3,1]], dtype = "uint64")#candidate|3585|(1, 147)|const|uint64
call_3583 = relay.TupleGetItem(func_2833_call(relay.reshape(var_3584.astype('uint64'), []), relay.reshape(const_3585.astype('uint64'), [7, 7, 3]), ), 0)
call_3586 = relay.TupleGetItem(func_2836_call(relay.reshape(var_3584.astype('uint64'), []), relay.reshape(const_3585.astype('uint64'), [7, 7, 3]), ), 0)
func_1442_call = mod.get_global_var('func_1442')
func_1444_call = mutated_mod.get_global_var('func_1444')
const_3589 = relay.const([9.726973,-3.900520,1.916056,-3.069169,7.393871,4.986159,-5.840454,-3.729651,-8.645071,8.160182,1.590831,-8.693002,3.818051,-0.720513,0.729726,-9.782098,-1.737294,1.016625,-5.088519,-5.566398,-5.651905,-0.351406,5.955778,3.046559,-8.523576,1.369078,-1.864765,0.537502,-1.407685,-1.762024,9.312708,-7.671951,-1.102811,6.750135,8.298490,-3.417380,3.356416,1.574716,8.633094,-9.413415,2.188495,-0.375183,-8.369144,6.296448,1.923719,-6.244942,-1.679832,-3.166728,-7.301706,9.071306,-1.227305,5.798720,-6.520616,-7.402090,-9.362078,-1.530323,-9.170194,6.186161,-0.370094,1.675660,-7.710606,-0.898012,-4.072633,3.463372,4.484343,7.475203,-0.132697,9.861013,9.286409,3.638287,5.276705,8.475908,-5.109480,-5.094684,6.439326,-5.014155,5.501568,9.163636,3.323719,-9.621487,2.861578,-4.707844,3.209624,2.365118,8.466862,-5.733916,-3.695747,-6.506124,-4.265053,9.739460,-4.895080,1.554611,-7.341504,-1.096593,-3.842772,-5.696122,-1.341610,3.918578,6.184002,-7.136571,9.383739,4.759564,-8.756776,-9.738910,-3.385537,-7.149245,3.670246,-8.401407,-2.824047,-9.222761,2.331444,8.980965,8.006970,0.770115,4.058928,-4.975252,-8.110510,-0.345770,9.190166,3.779837,-2.043962,1.508641,-2.109826,7.872613,-8.170781,4.946236,5.522183,0.925881,9.033307,8.625244], dtype = "float64")#candidate|3589|(130,)|const|float64
call_3588 = relay.TupleGetItem(func_1442_call(relay.reshape(const_3589.astype('float64'), [10, 13])), 0)
call_3590 = relay.TupleGetItem(func_1444_call(relay.reshape(const_3589.astype('float64'), [10, 13])), 0)
output = relay.Tuple([bop_3549,call_3556,var_3557,call_3560,const_3561,call_3566,call_3571,var_3572,const_3573,var_3574,const_3575,call_3583,var_3584,const_3585,call_3588,const_3589,])
output2 = relay.Tuple([bop_3549,call_3558,var_3557,call_3562,const_3561,call_3567,call_3576,var_3572,const_3573,var_3574,const_3575,call_3586,var_3584,const_3585,call_3590,const_3589,])
func_3605 = relay.Function([var_3548,var_3557,var_3572,var_3574,var_3584,], output)
mod['func_3605'] = func_3605
mod = relay.transform.InferType()(mod)
var_3606 = relay.var("var_3606", dtype = "float64", shape = (13, 15, 11))#candidate|3606|(13, 15, 11)|var|float64
var_3607 = relay.var("var_3607", dtype = "float32", shape = (360,))#candidate|3607|(360,)|var|float32
var_3608 = relay.var("var_3608", dtype = "int16", shape = (65,))#candidate|3608|(65,)|var|int16
var_3609 = relay.var("var_3609", dtype = "float64", shape = (936,))#candidate|3609|(936,)|var|float64
var_3610 = relay.var("var_3610", dtype = "uint64", shape = ())#candidate|3610|()|var|uint64
output = func_3605(var_3606,var_3607,var_3608,var_3609,var_3610,)
func_3611 = relay.Function([var_3606,var_3607,var_3608,var_3609,var_3610,], output)
mutated_mod['func_3611'] = func_3611
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3664 = relay.const([[[8.919343,-1.148853,-2.219027,3.521233,-9.879536,0.361851,-4.046576,1.477247,-7.769485,-3.703156,3.905064,4.688407,-0.974195,-7.655925,4.579062],[-0.507489,6.271170,9.581561,7.637628,-1.638917,9.510788,7.449029,-1.178547,6.291121,-9.112735,-7.004063,-8.556002,-7.856506,8.391650,-6.060770],[5.391505,4.058438,-3.668585,-3.898467,1.133588,9.673988,-6.767905,-9.359832,9.280660,5.555223,9.809510,6.734205,1.054970,-0.830899,-1.432319],[1.652840,8.206943,-5.059277,9.483836,-5.268622,-4.537228,1.945029,-4.544501,6.771762,5.900132,2.845805,-1.232758,9.797876,-7.990634,-5.581824],[-4.872299,-1.562963,-6.743179,5.216565,4.875973,-1.311232,5.043087,-3.258658,2.882962,1.815758,-9.119496,4.902896,2.941420,6.150989,-8.826263],[2.836066,4.690514,-5.081471,-9.335565,-6.219096,2.917780,3.606081,-5.588505,-1.831889,4.989567,8.418630,-3.008983,-7.677990,7.516074,-5.783640],[7.081725,-8.546623,0.340790,-9.564803,3.802787,-1.101320,3.386994,4.461692,3.744577,9.705088,-2.386145,9.991799,6.526257,-6.769453,8.373681],[-4.898472,-6.831321,4.728318,-0.303217,-4.678202,-5.280052,-7.555281,-6.488214,-9.842694,-3.671549,3.323505,-0.410060,4.725909,-3.112460,-5.324779],[-7.690714,4.670830,4.317653,3.090608,-9.496844,2.928731,-2.447629,4.175598,-7.700654,-0.480922,3.526909,3.955490,-6.733810,-1.594486,-5.274572],[-9.234879,5.956182,-0.587618,5.903710,-7.223178,3.365233,-8.080783,-1.564665,-0.351957,3.451554,2.772447,-3.249356,-5.952629,1.343806,-0.967076],[7.269368,2.058973,-2.181041,-2.773306,5.680915,8.880045,-0.510674,-6.074246,0.342525,3.844287,5.279752,-9.752865,6.067627,5.990117,2.550070],[1.167262,-2.773551,8.016949,-3.517406,-1.665711,1.933191,-2.842244,-8.404436,-9.921434,5.322996,-2.547268,-7.221220,5.385055,-1.750755,-4.032449],[-3.389186,-8.175848,-7.154988,0.121874,8.279245,-6.116689,2.568106,9.722409,8.820573,-0.977709,0.691230,-9.919992,2.452585,-5.918121,-9.261184],[8.817830,-2.620244,9.758675,5.587232,9.813275,1.861576,0.556525,-5.093551,-9.639692,-1.422488,-2.304860,2.889117,6.730220,-6.108832,-3.366031]],[[6.014285,2.429905,-4.387978,-0.776293,5.383776,-7.216989,-8.471649,-9.119151,-6.328070,-1.941811,3.991567,7.825673,9.644237,9.042742,-4.894290],[-9.063431,6.377659,1.449209,5.030304,6.340886,8.033967,7.601145,-1.959564,-6.875998,-8.004799,1.206453,9.963835,-7.352163,-6.804255,7.933661],[-9.968405,-1.295137,4.393209,7.875476,3.142803,-8.479995,-4.380417,-5.930662,1.882329,-9.748421,-7.405946,6.915412,-3.127328,-0.266691,9.042508],[4.630552,-5.194958,4.772061,2.799117,-1.028160,1.110222,4.763485,-8.758903,-2.078212,-6.783061,2.392413,5.261678,-4.456134,-6.245912,-8.785145],[-7.104276,1.960505,6.918972,8.327498,1.941584,7.471008,-9.189161,3.587391,5.711542,-5.621382,-8.383677,-6.380810,-4.546109,0.038964,2.657639],[-1.580159,2.032694,-5.686168,-7.925492,5.426534,7.852178,-8.666817,7.461160,-4.395085,-4.324177,-6.262953,-3.078088,-9.185439,6.812247,-7.772995],[3.514204,5.601391,-1.537791,9.125629,8.387859,1.399711,8.732428,-2.308027,8.802097,1.604254,2.977213,-1.844923,-0.746908,-4.224373,-1.820284],[9.984801,0.043562,-7.223015,-1.803323,-9.660196,-2.559875,0.404308,4.406602,-3.681266,-7.668408,-7.781179,7.645436,-6.167006,4.878248,9.968770],[1.056725,4.932637,3.316171,-6.564109,9.104722,4.580515,-7.114482,-7.027197,-5.235924,-4.711835,-7.018899,-3.009957,0.314052,-0.290072,4.921247],[-6.008986,-4.101939,6.701332,5.262869,3.771101,-9.473456,-1.921895,6.240907,8.937822,0.693063,4.638744,-7.517113,7.958547,-0.844957,1.637211],[-3.590212,-5.412157,7.950052,-6.381517,7.967433,-4.712572,2.236660,1.821000,3.517970,-8.185328,-0.841104,-3.524752,-6.011392,3.158894,8.687905],[-1.437135,-9.825893,-0.607954,8.427750,8.568774,7.914051,-1.985565,-8.273250,4.021238,-6.595691,0.209074,2.123223,-9.791544,7.575018,-1.861150],[-2.842286,-7.165190,9.289609,-4.012228,-7.517080,-6.411463,6.732760,-1.438979,-9.918563,6.244409,4.279428,4.757027,1.525236,-1.909609,6.879666],[7.357693,-4.785101,0.583499,0.701103,-7.587358,5.304446,2.361096,3.063268,-7.483964,2.098521,9.771708,-6.003809,-9.811188,-0.047834,6.752425]],[[1.279601,2.419811,-4.563109,-9.045608,-4.708724,0.294705,9.887644,8.579829,-9.459485,-0.825713,0.153375,8.808878,-4.911161,8.098636,-2.865159],[6.468395,-5.504307,2.754311,5.500973,-3.069370,-1.373763,3.854742,-4.535175,2.851340,-3.559098,-5.014296,5.334684,-2.237682,2.577962,-4.966964],[-6.716025,-8.015104,-1.633602,1.817282,1.296378,7.646709,-0.158792,8.626093,4.520340,0.797588,-3.728057,-6.097687,4.419316,8.539649,-6.641000],[6.320561,6.072188,4.350620,4.581309,2.513426,-0.741158,2.844087,7.969314,6.164083,1.284660,1.399163,4.387234,0.844515,-2.176782,3.089758],[-8.408045,5.052704,-1.090022,0.181908,9.653984,-8.369571,0.048529,-9.600747,-4.956563,-3.940825,1.063981,8.834165,4.896857,4.365921,-9.709467],[-6.552886,0.785371,-9.433887,5.338269,-2.941544,3.854318,-0.178283,-8.780557,5.256137,1.981208,-4.320520,6.214036,8.338670,-7.834414,-0.708545],[1.068578,8.323914,-2.257599,6.845563,9.239323,3.398847,-5.768682,3.158469,-8.056483,-9.932820,-7.038100,-2.035514,-4.741108,-3.872711,7.105500],[5.124379,-0.556827,7.433593,1.608111,-7.796334,-4.092165,1.114624,7.295327,0.433378,3.301404,0.745821,-5.304649,-4.490012,4.295482,9.494058],[9.916307,-0.361232,9.283237,3.829470,-6.914404,5.725383,9.545293,9.470017,-8.789033,-8.193672,-4.078417,0.100445,-8.596414,-5.118470,7.327981],[-2.711266,-5.370755,-2.541584,-3.251364,-0.147862,6.118762,-5.104435,-2.951264,5.798855,-9.861100,0.878750,-5.541659,-4.308013,-6.186992,-3.571133],[-8.919258,-6.867990,1.609090,3.919345,-0.345459,-9.315367,2.093198,-6.985172,6.128379,-1.129254,-0.574740,-9.539725,8.344048,5.807529,8.243397],[3.960346,-5.023347,1.823343,-0.007742,3.298197,-2.451700,-3.017780,-2.771152,-8.729812,-8.053155,-8.068793,-4.829335,2.887230,2.547872,6.492059],[9.978009,-5.352602,-8.895587,0.673216,-4.337913,-5.108009,9.161102,0.861102,2.945405,4.606956,-2.602036,-5.799506,-9.550237,-8.761984,-3.090944],[8.504796,-3.691831,7.241557,0.042873,5.679066,-8.295918,-5.500509,-3.721429,2.274573,3.464166,-2.174866,-1.610001,-8.205291,-8.181081,-8.765947]],[[-3.397465,-0.481632,-0.179361,-4.537411,4.710222,9.711807,4.080113,9.839325,2.168876,9.799620,9.790530,6.977210,9.760337,-3.184292,-0.787059],[-1.172157,-5.777094,-7.736446,7.877751,-3.656424,-7.550310,-8.172538,-0.233896,-2.669812,-1.419041,-7.217037,6.638456,-0.553345,-2.873069,-0.518734],[0.651215,8.988446,-7.308619,-6.177502,-2.697815,-4.525945,6.641948,-2.135038,-2.406118,8.432475,5.145389,-7.342420,5.342024,4.702506,2.470200],[6.889940,-1.795026,2.322149,-7.148989,-4.272318,-5.676862,6.033087,0.046178,2.096727,-8.415128,8.245950,4.968592,-8.470303,-6.288340,-8.140940],[-3.520542,-7.582321,-2.498599,5.724407,-7.777076,-0.255691,-8.710753,-8.639116,4.865437,2.919453,-5.582397,5.488943,-8.224941,4.014970,0.975410],[-6.924445,1.458201,8.790051,-5.450834,-2.825156,-0.794203,-9.359635,-5.404692,8.078461,-7.143074,-3.749496,2.889070,-9.098884,4.055053,-5.915646],[5.149840,-3.261978,7.395742,5.947432,-7.043554,-6.946299,-0.773074,0.097096,5.674559,-2.044698,7.645604,0.070318,6.366703,-7.022036,1.115993],[8.145101,-7.721355,1.789729,8.638006,2.362539,-8.304951,0.936717,-6.069900,0.265819,8.326417,-4.069394,-5.273084,3.402717,9.418855,4.760519],[-2.647035,-0.812177,-1.294565,-4.867110,-4.697376,-9.339163,-4.583296,4.151489,-9.808690,-4.987924,-6.437066,4.595711,-6.634457,-6.828749,-2.163004],[-1.397741,0.239756,4.368537,-9.685829,6.394975,-9.582093,2.611825,4.365870,2.783800,-2.142896,7.458158,-2.266652,2.766069,2.176942,3.686975],[7.518016,-2.321504,-2.303419,5.675287,-3.835664,9.317162,-4.820421,2.368726,0.188282,9.749599,-8.239016,-9.041993,8.575520,-1.853966,-7.101347],[2.956304,6.147644,-3.479555,9.324542,2.435072,-0.070160,-9.653274,2.858458,3.102506,0.072381,-2.505777,6.639075,-4.319325,3.874230,-0.749449],[-9.583417,2.208310,2.510458,0.823670,0.559379,-1.512871,7.854804,-1.641683,-6.449572,7.536659,7.270553,-5.623728,0.649562,8.490660,4.022939],[-2.415386,4.241645,4.559972,1.696868,-0.433816,3.806978,-3.663349,5.371982,-3.362180,-0.700889,9.943654,3.785429,8.636709,3.646190,6.101710]],[[-9.419901,-5.380250,-2.029248,-5.382302,4.388373,-8.241161,-9.329051,3.502585,-3.967852,9.402550,-8.324713,-1.559024,-7.759539,-4.001292,-8.080780],[-9.059507,3.235044,5.455405,1.642507,4.051265,-8.211158,6.802527,-4.340914,-2.131280,-7.069144,-5.248720,5.395577,5.327659,-3.795120,7.888267],[9.913645,3.631994,-5.392221,-3.725491,-4.496995,-0.890882,-6.757198,9.368521,8.881423,5.713228,-7.358188,-0.757796,-1.336417,1.232194,4.085481],[7.850168,6.756793,4.145213,1.839869,5.543786,4.425204,-9.173324,9.734602,-5.042965,-4.160934,4.639246,4.152732,-6.721748,7.310412,-9.603266],[-9.354554,4.676954,-1.811306,9.046311,1.958755,-5.400505,8.312659,-1.908903,-8.977923,0.001562,-0.513165,6.619410,-9.508785,2.151497,-0.695972],[-2.683827,1.178302,-3.297285,-7.268587,-8.447172,-7.756229,-6.200716,1.037238,-6.187414,9.778207,-9.660077,-8.104424,-8.954779,9.596674,-2.660652],[9.933017,-5.178039,4.529790,8.092895,4.667206,9.358941,-7.920076,3.419560,-1.369267,2.002555,8.582678,5.372399,-2.129950,-5.264434,1.023434],[1.012905,6.432757,2.033136,-0.703070,-0.885345,-2.386862,4.110172,7.791480,1.157630,-4.984615,9.936208,-3.681720,-2.719654,-2.188863,0.072380],[9.468769,1.081608,-6.156728,3.196289,2.896648,-7.025344,5.361534,-7.687800,-6.440728,-4.225985,-4.537473,-8.212578,-1.238802,6.299572,0.647159],[-5.905946,0.874173,5.547156,4.991136,-7.935669,-8.044237,-3.154339,-6.324467,-4.939314,-8.612205,-3.385650,5.846810,-0.580240,3.530725,-6.237979],[-4.621462,1.550902,-4.833912,2.818918,-2.733475,-2.150544,9.605588,-2.093662,0.504268,-9.376882,-2.827877,0.620444,-5.188209,4.201107,2.803584],[-2.866015,5.226329,-7.608543,5.986495,7.421048,5.962100,-0.967845,-1.582143,7.490121,-9.078722,-7.613988,-4.159610,-8.019697,3.746437,-6.273861],[7.388896,-0.201852,-7.186395,7.774660,-5.261968,5.904159,-2.608449,-2.767234,2.218470,4.615283,-7.596168,-3.169085,0.577732,1.021008,-7.571174],[0.672986,-1.147691,-8.106181,-2.558864,-9.794912,-8.854410,4.822097,-1.373489,-5.081187,8.794158,0.056313,4.574892,-8.359855,-1.606158,8.406242]]], dtype = "float64")#candidate|3664|(5, 14, 15)|const|float64
var_3665 = relay.var("var_3665", dtype = "float64", shape = (5, 14, 15))#candidate|3665|(5, 14, 15)|var|float64
bop_3666 = relay.divide(const_3664.astype('float64'), relay.reshape(var_3665.astype('float64'), relay.shape_of(const_3664))) # shape=(5, 14, 15)
bop_3670 = relay.greater_equal(const_3664.astype('bool'), relay.reshape(bop_3666.astype('bool'), relay.shape_of(const_3664))) # shape=(5, 14, 15)
uop_3673 = relay.log2(var_3665.astype('float32')) # shape=(5, 14, 15)
func_1471_call = mod.get_global_var('func_1471')
func_1474_call = mutated_mod.get_global_var('func_1474')
var_3676 = relay.var("var_3676", dtype = "int8", shape = (832, 1))#candidate|3676|(832, 1)|var|int8
const_3677 = relay.const([[9.505013,8.766341,5.300821,4.271687,1.263432,-6.938863,-9.484894,-7.861548,-7.972040,8.569618],[-4.258801,6.920295,4.424349,-8.968969,-3.649279,-4.344314,8.171627,4.417628,5.415979,-5.597507],[-6.474884,5.535559,-1.722657,2.738860,2.969926,0.611600,-5.668778,-0.739182,-4.536528,1.963631],[9.282279,-4.833087,0.760358,2.944219,8.250028,7.582113,6.519670,-8.052172,4.654550,-2.139888],[-3.366676,-7.304388,-8.852727,-4.913438,-8.183687,1.165629,1.843229,-3.756398,5.888629,9.744137],[4.294205,-3.666827,-5.954577,-4.879267,1.050081,-9.331871,8.686735,-8.056319,-7.705833,-7.845321],[1.555036,-8.228812,3.204173,8.941644,5.632654,0.415129,-6.334346,2.229364,7.335793,-2.901469],[-2.522321,-1.233611,4.219298,2.351343,-6.315052,-1.390715,8.016274,-2.462901,-5.781994,3.073948],[8.306044,-6.582453,-1.836068,-2.914229,-5.990303,-1.223082,3.836581,-0.845687,-9.302477,-6.746699],[0.717087,-1.698472,-4.343619,9.532975,-7.781689,-5.118783,-8.185385,2.423605,-9.890329,-4.372250],[-8.837180,2.073275,6.790385,4.379165,0.642227,-7.453366,-4.436421,6.879880,-2.817411,5.652157],[7.434289,-8.628780,8.960642,-0.943273,9.276733,-0.193437,-0.662777,9.990105,2.974620,6.992289],[9.945869,5.859056,-5.707831,-2.408237,5.429564,4.791598,4.022357,-1.718290,-1.086456,-4.466145]], dtype = "float64")#candidate|3677|(13, 10)|const|float64
call_3675 = relay.TupleGetItem(func_1471_call(relay.reshape(var_3676.astype('int8'), [16, 4, 13]), relay.reshape(const_3677.astype('float64'), [130,]), ), 1)
call_3678 = relay.TupleGetItem(func_1474_call(relay.reshape(var_3676.astype('int8'), [16, 4, 13]), relay.reshape(const_3677.astype('float64'), [130,]), ), 1)
bop_3679 = relay.minimum(bop_3670.astype('int8'), relay.reshape(var_3665.astype('int8'), relay.shape_of(bop_3670))) # shape=(5, 14, 15)
output = relay.Tuple([uop_3673,call_3675,var_3676,const_3677,bop_3679,])
output2 = relay.Tuple([uop_3673,call_3678,var_3676,const_3677,bop_3679,])
func_3685 = relay.Function([var_3665,var_3676,], output)
mod['func_3685'] = func_3685
mod = relay.transform.InferType()(mod)
var_3686 = relay.var("var_3686", dtype = "float64", shape = (5, 14, 15))#candidate|3686|(5, 14, 15)|var|float64
var_3687 = relay.var("var_3687", dtype = "int8", shape = (832, 1))#candidate|3687|(832, 1)|var|int8
output = func_3685(var_3686,var_3687,)
func_3688 = relay.Function([var_3686,var_3687,], output)
mutated_mod['func_3688'] = func_3688
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4239 = relay.const(False, dtype = "bool")#candidate|4239|()|const|bool
const_4240 = relay.const([[[True,True],[False,True],[False,True]],[[False,False],[False,False],[False,True]],[[False,True],[False,False],[False,True]],[[False,False],[True,True],[False,True]],[[True,False],[False,True],[False,False]],[[False,False],[True,False],[True,True]],[[False,True],[True,False],[True,False]]], dtype = "bool")#candidate|4240|(7, 3, 2)|const|bool
bop_4241 = relay.logical_or(const_4239.astype('bool'), const_4240.astype('bool')) # shape=(7, 3, 2)
uop_4247 = relay.cos(const_4240.astype('float64')) # shape=(7, 3, 2)
func_3481_call = mod.get_global_var('func_3481')
func_3484_call = mutated_mod.get_global_var('func_3484')
var_4254 = relay.var("var_4254", dtype = "float32", shape = (616,))#candidate|4254|(616,)|var|float32
call_4253 = relay.TupleGetItem(func_3481_call(relay.reshape(var_4254.astype('float32'), [7, 8, 11])), 0)
call_4255 = relay.TupleGetItem(func_3484_call(relay.reshape(var_4254.astype('float32'), [7, 8, 11])), 0)
output = relay.Tuple([bop_4241,uop_4247,call_4253,var_4254,])
output2 = relay.Tuple([bop_4241,uop_4247,call_4255,var_4254,])
func_4258 = relay.Function([var_4254,], output)
mod['func_4258'] = func_4258
mod = relay.transform.InferType()(mod)
var_4259 = relay.var("var_4259", dtype = "float32", shape = (616,))#candidate|4259|(616,)|var|float32
output = func_4258(var_4259)
func_4260 = relay.Function([var_4259], output)
mutated_mod['func_4260'] = func_4260
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4429 = relay.var("var_4429", dtype = "float64", shape = (9, 12, 3))#candidate|4429|(9, 12, 3)|var|float64
uop_4430 = relay.log2(var_4429.astype('float64')) # shape=(9, 12, 3)
func_734_call = mod.get_global_var('func_734')
func_739_call = mutated_mod.get_global_var('func_739')
var_4433 = relay.var("var_4433", dtype = "float64", shape = (936,))#candidate|4433|(936,)|var|float64
var_4434 = relay.var("var_4434", dtype = "float64", shape = (126,))#candidate|4434|(126,)|var|float64
const_4435 = relay.const([7.374143,0.734828,-7.093547,-4.584618,-6.195656,-1.815934,5.619256,-9.817930,-2.398028,5.502906,1.385873,8.693220,1.669105,-9.810162,-7.748665,5.985873,1.047354,4.269024,-5.812841,9.677088,-8.964212,9.592264,-2.771722,-0.255457,6.950801,-8.805449,0.877716,3.316500,3.125280,-8.786421,3.740073,5.000445,-3.380621,-7.115688,-2.351419,9.538321,2.515530,-2.821983,2.690976,-1.724524,7.602730,3.132809,-2.360166,0.076153,-5.271173,-7.894918,-0.435147,-6.131409,-2.368523,1.147940,-6.003520,1.235351,9.596722,0.123558,-3.221337,-9.945872,-0.295871,9.023496,-7.211692,-9.654929,-7.573393,-4.028034,-2.790622,2.462633,8.003085,7.966168,1.556391,8.012786,2.456737,8.368855,-9.759620,6.925965,6.141830,-8.037042,8.731303,-6.882056,1.644711,-8.121065,6.809458,-4.721298], dtype = "float64")#candidate|4435|(80,)|const|float64
call_4432 = relay.TupleGetItem(func_734_call(relay.reshape(var_4433.astype('float64'), [9, 13, 8]), relay.reshape(var_4434.astype('float64'), [126,]), relay.reshape(const_4435.astype('float64'), [1, 80]), ), 0)
call_4436 = relay.TupleGetItem(func_739_call(relay.reshape(var_4433.astype('float64'), [9, 13, 8]), relay.reshape(var_4434.astype('float64'), [126,]), relay.reshape(const_4435.astype('float64'), [1, 80]), ), 0)
uop_4437 = relay.log(uop_4430.astype('float32')) # shape=(9, 12, 3)
output = relay.Tuple([call_4432,var_4433,var_4434,const_4435,uop_4437,])
output2 = relay.Tuple([call_4436,var_4433,var_4434,const_4435,uop_4437,])
func_4439 = relay.Function([var_4429,var_4433,var_4434,], output)
mod['func_4439'] = func_4439
mod = relay.transform.InferType()(mod)
var_4440 = relay.var("var_4440", dtype = "float64", shape = (9, 12, 3))#candidate|4440|(9, 12, 3)|var|float64
var_4441 = relay.var("var_4441", dtype = "float64", shape = (936,))#candidate|4441|(936,)|var|float64
var_4442 = relay.var("var_4442", dtype = "float64", shape = (126,))#candidate|4442|(126,)|var|float64
output = func_4439(var_4440,var_4441,var_4442,)
func_4443 = relay.Function([var_4440,var_4441,var_4442,], output)
mutated_mod['func_4443'] = func_4443
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4832 = relay.var("var_4832", dtype = "float32", shape = (8, 14, 10))#candidate|4832|(8, 14, 10)|var|float32
var_4833 = relay.var("var_4833", dtype = "float32", shape = (8, 14, 10))#candidate|4833|(8, 14, 10)|var|float32
bop_4834 = relay.mod(var_4832.astype('float32'), relay.reshape(var_4833.astype('float32'), relay.shape_of(var_4832))) # shape=(8, 14, 10)
output = relay.Tuple([bop_4834,])
output2 = relay.Tuple([bop_4834,])
func_4845 = relay.Function([var_4832,var_4833,], output)
mod['func_4845'] = func_4845
mod = relay.transform.InferType()(mod)
mutated_mod['func_4845'] = func_4845
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4845_call = mutated_mod.get_global_var('func_4845')
var_4847 = relay.var("var_4847", dtype = "float32", shape = (8, 14, 10))#candidate|4847|(8, 14, 10)|var|float32
var_4848 = relay.var("var_4848", dtype = "float32", shape = (8, 14, 10))#candidate|4848|(8, 14, 10)|var|float32
call_4846 = func_4845_call(var_4847,var_4848,)
output = call_4846
func_4849 = relay.Function([var_4847,var_4848,], output)
mutated_mod['func_4849'] = func_4849
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4869 = relay.var("var_4869", dtype = "float32", shape = (10, 12, 2))#candidate|4869|(10, 12, 2)|var|float32
uop_4870 = relay.exp(var_4869.astype('float32')) # shape=(10, 12, 2)
bop_4888 = relay.minimum(uop_4870.astype('int64'), relay.reshape(var_4869.astype('int64'), relay.shape_of(uop_4870))) # shape=(10, 12, 2)
func_3605_call = mod.get_global_var('func_3605')
func_3611_call = mutated_mod.get_global_var('func_3611')
const_4900 = relay.const([-6.282856,2.887209,-2.342430,-1.666212,9.344767,1.275318,-4.940504,9.075113,2.146700,7.469790,-3.839785,1.264009,-3.495785,-4.995702,9.096342,-3.373929,-6.282456,-5.444810,-7.121258,0.656742,-4.797861,-2.680503,9.480516,-6.863775,7.570814,7.562353,-9.052585,2.403677,-6.106210,8.859379,-7.783648,8.989321,0.719476,0.852289,-1.852531,0.526113,5.514307,4.103173,4.812749,0.888201,-6.857455,-2.383360,-9.210039,5.478066,5.837693,-8.790552,7.056817,3.952116,-5.404319,-1.349806,5.572165,1.442925,9.146196,-9.630418,-7.293410,-9.695002,-6.954888,-6.444184,-4.654332,9.984801,-6.742183,7.255589,9.775779,-0.602565,3.620833,-8.776072,-6.172092,7.914647,-7.822670,-2.907782,5.832854,3.000535,8.325482,-2.269569,-3.180223,4.689987,-1.323692,-4.363952,9.423806,0.836511,4.047802,-2.560602,0.281397,8.177047,9.654199,-1.674734,-0.557003,-4.659414,6.289160,6.476506,-7.439025,-8.651463,7.621569,-5.117545,8.596412,1.948880,3.718774,-0.223093,7.553580,-1.773935,6.443524,-2.112788,2.806036,5.947930,8.118179,-3.767493,-3.084171,-3.906612,4.636745,-4.832351,-3.316458,1.423048,7.020210,-1.767464,4.693811,0.147359,-3.074525,5.648648,-5.560700,-5.774427,0.691885,0.690786,-3.142843,-6.275311,-3.973291,-6.995708,-3.281874,-6.561505,-5.960136,1.704455,-8.797982,-3.102954,-1.736595,-4.014450,7.263270,-0.595653,8.567188,-7.147194,-6.849835,5.708708,0.184088,4.064720,9.531626,-5.693068,6.940245,2.384311,-3.693736,-0.983874,8.991442,-5.105006,8.555863,-5.324364,-2.858662,-8.539335,5.836049,-6.905594,-7.375095,-6.456252,3.227940,3.403073,-8.215901,-2.007900,-7.887796,9.632130,6.184665,-1.359475,1.807154,8.562526,5.201622,-7.936507,8.229934,-4.892497,-6.285647,7.848092,9.377652,-5.067809,-5.808478,-3.881806,7.902265,-4.039696,8.402884,-0.427484,7.894482,5.400084,5.785674,2.334919,-7.100407,-1.756716,7.355883,-2.418676,-3.390590,-3.549046,-6.910089,-8.607923,4.600920,-6.148744,7.177981,7.362748,1.631055,-1.368990,-6.921017,1.384031,0.003162,1.316060,-0.863813,3.733730,6.888499,8.711919,-2.251184,5.280975,-9.026749,9.577669,-2.620866,7.044830,2.306964,9.781932,8.076170,-4.196522,-5.835741,8.970301,8.572152,-7.335107,9.259598,-4.177268,4.236165,3.259506,-3.271409,3.132923,4.774277,-7.583447,-6.681872,-7.790373,-6.304305,-3.416825,-4.700882,4.676659,-2.607529,-6.670753,4.717870,-4.817698,9.384568,2.520546,-4.997034,-2.314909,2.571800,-0.281427,-3.533433,9.776256,6.889964,-6.724873,-7.300590,9.287672,9.361513,-6.786509,4.828170,9.227219,-5.927575,-2.107805,6.664818,-5.124341,2.757873,8.569484,7.958751,-9.644052,-3.703149,-7.437501,0.751839,-6.631533,-1.450072,1.790480,1.531417,-4.293496,7.609085,-1.153127,1.490372,1.267077,2.656993,1.249548,-2.377090,0.048496,-4.706383,7.257486,6.805779,-1.518064,-3.343618,5.723592,-6.604661,5.619199,-4.422947,-8.643552,-0.956596,-6.046302,-0.813763,-3.238833,-8.286689,-2.965352,4.541021,-1.647703,1.370379,-3.015082,-7.202814,7.589631,6.807809,6.625807,-5.629500,-7.205243,5.807476,-8.220022,-5.158325,-6.048528,-6.313084,1.975868,-7.233567,-2.257971,-7.570492,5.890620,7.918671,2.314875,4.974281,-7.105235,-5.743117,-2.813156,-9.362559,-3.657264,4.535320,2.556856,7.438624,-3.230102,-0.351129,5.013120,8.792846,8.366627,2.872060,-6.596204,1.315456,-9.942614,5.011937,-7.128480,9.513746,-3.940698,6.946773,-4.351889,-2.113785,0.877742,2.042107,9.835278,5.585083,4.829029,9.171266,-1.425009,8.152422,-5.943605,7.310591,-5.497726,7.307928,-1.972255,-2.148715,3.119097,5.318658,9.129316,9.367902,9.291310,3.588307,0.684138,-8.853295,-4.420317,-2.719684,-3.037400,6.020322,-8.061800,9.018887,3.517469,0.628865,-0.917288,6.929607,-8.597346,-8.778590,-7.669277,-2.620556,-1.443453,2.704188,-9.956967,-6.550970,4.291201,3.441720,-2.198033,-7.727219,-7.771718,4.943247,-3.422338,-1.694681,2.573581,4.185843,7.182670,-4.009891,-9.432965,-9.448327,9.461636,-3.034270,-8.539765,2.064296,-9.191557,-8.721604,5.169660,-7.656053,4.439215,-4.649793,3.566178,-1.183692,-9.614097,9.027374,-0.030906,9.421415,-4.451986,-6.986430,-6.002077,5.551464,-2.528639,9.491401,4.976318,8.720822,4.410837,-0.747174,3.789997,4.266384,7.280575,9.758140,-5.236910,9.482264,-3.321626,9.316275,3.552328,0.498798,-7.951844,-5.353972,-3.313382,-4.599617,2.448975,2.328981,1.421642,-4.890621,8.902618,-9.878953,3.117228,-1.153918,-6.713718,-1.238695,-9.396093,1.415228,-6.841610,1.715742,6.836206,-4.250628,-2.061507,-8.923616,-2.162150,-4.564778,-1.981626,3.860554,-1.578653,4.516618,0.786692,2.088165,4.221394,0.151560,-8.983486,5.184221,-7.477906,-7.048051,2.193686,9.201353,-1.376332,5.534256,-2.568377,-2.925087,-3.331040,8.791808,9.710610,8.161402,0.765749,-3.295226,0.031793,-7.269287,-2.350270,-3.726295,5.322581,8.710651,5.285144,-5.621173,-8.464173,8.087007,-5.449030,-5.945257,1.501358,-3.165711,-8.618813,-9.905841,-1.458433,-2.252612,8.048561,-7.805019,-7.050819,-6.547096,-2.110427,7.279553,1.083686,0.345875,-8.021045,6.474729,-3.221493,-1.762713,4.195127,-2.042949,0.420083,-4.131789,-9.677360,5.276203,-3.727903,-9.347780,-5.567113,4.713331,-6.106608,7.413591,1.801316,-7.502986,2.901972,-6.803207,7.231146,-9.758603,2.575157,-3.384157,-9.477908,-5.599474,7.007255,7.071525,9.027181,-5.078355,-9.689447,-2.718693,-8.925469,7.439800,1.651546,-2.960006,-6.750950,-4.080132,6.702017,6.663393,-4.539013,3.197763,4.777701,-8.249645,7.871225,-3.638825,-9.488071,4.879374,-1.605446,-9.040546,1.095869,-6.048830,-8.258139,0.170026,4.265060,6.239627,0.560471,-4.148133,1.494880,8.649713,7.601749,-4.120811,-1.192173,-3.025955,-6.706530,-0.497456,-1.884742,-3.145729,6.852676,-4.983697,-5.215820,2.070656,-0.621761,-3.510663,-2.001590,8.605293,-3.234393,9.646490,4.931236,6.180302,3.256665,5.900798,-4.928489,-4.951521,-3.413651,8.091367,-8.304646,-8.028547,-1.037254,-7.838011,-3.168760,-7.710536,-5.076932,2.269770,8.576536,6.214386,-0.359445,-1.461310,-4.075038,5.935779,-7.301648,-2.596923,8.013877,5.614888,7.045811,-9.108946,4.296008,-1.983589,-8.932216,-4.394353,-5.530673,-0.620378,-2.933321,-2.680270,7.560634,1.814591,-1.381472,-7.313685,-3.409499,4.394304,-3.518276,1.624912,-4.344159,3.885615,7.665896,-0.538049,5.857995,8.721970,-4.462028,7.593589,9.415860,4.880243,-6.158613,7.561090,7.947546,-8.377840,-1.371282,-8.783944,-0.713002,2.482175,2.823913,7.580575,7.466879,-5.242371,-2.521095,9.038903,6.821687,6.791133,5.829143,-1.768328,3.091001,-8.365873,0.138808,-4.499998,-5.956264,6.172972,-6.466582,-0.058278,5.490529,8.354128,-6.553301,6.539166,7.836111,5.884289,1.700422,4.370390,3.777839,-2.431335,-8.224129,-0.171032,6.193632,-6.759564,-8.099674,6.612837,-5.051843,-5.247092,6.570836,-8.637033,-2.547488,5.746399,0.628371,6.918621,-2.451887,1.910681,-5.511311,8.504676,-4.354396,2.451262,4.857627,-8.322872,4.823351,-9.713683,8.803678,8.617761,9.299975,5.623905,-9.820722,4.768423,6.646562,1.505847,-0.971570,9.321628,8.293394,7.935084,4.633459,-2.066162,-8.812194,7.917431,7.851094,-8.081419,-6.878999,5.889956,-0.449210,7.871166,-1.509943,2.525474,-8.489757,9.143433,-8.793973,-8.237701,-5.739972,-5.832626,3.904617,-1.183051,9.661276,8.682902,3.024925,-5.623020,7.875623,7.195437,-2.077924,-9.189893,4.708746,-7.728637,6.758553,8.636808,0.145742,-2.034158,0.759781,7.868034,4.314408,-7.773024,-1.077594,-7.783561,7.114156,8.147733,4.879905,-0.809873,8.180642,-0.044549,5.729204,-7.852189,9.272144,4.771467,-3.249059,8.074134,-1.068777,-3.050939,-1.696477,-5.041495,-9.688250,-3.484147,-5.826186,-8.854711,4.347900,-7.369085,-2.016088,-7.305869,7.417796,-2.992229,-9.500407,-0.468679,-1.188150,1.233717,5.289770,-1.325240,1.088276,6.293354,1.624188,1.915916,-4.445859,2.985202,4.176350,9.669352,0.128197,-9.001690,2.153411,-8.916116,9.395932,9.695306,-2.287738,-0.274037,-2.289242,6.336371,5.827225,-4.259627,-5.233687,-9.900664,0.880189,-9.259167,8.242128,8.507807,6.161279,-8.360309,9.009622,-5.962969,7.288898,-9.726443,-4.703713,6.158436,-5.452057,-9.111288,3.410031,-8.533581,-7.288873,-6.789357,8.805233,-0.573642,2.273464,8.374354,-6.182691,-6.604195,-7.575543,3.337715,-8.317189,-6.807381,3.018877,7.110852,5.049229,6.201253,6.309385,-9.399059,4.470173,6.324610,0.984871,-6.290431,-9.786428,-5.596293,2.233220,-1.583146,-5.583506,-8.756719,7.839265,7.267151,-4.804145,-0.229465,-5.522564,-2.394075,2.827709,-1.304878,3.518164,6.362401,-1.345341,-2.220120,0.331956,4.758321,-2.757859,2.001185,-1.230555,-2.531826,-7.473329,-5.151515,4.180880,-1.819879,-2.435444,-9.828375,6.051370,-1.145234,6.658953,0.919181,9.282045,-0.371094,9.356283,7.821038,-2.290900,-2.457064,-2.334356,0.096285,8.727155,-9.932361,4.803487,1.961180,-3.904794,-8.737555,7.676512,5.615636,-0.716025,-8.995572,0.758971,9.204310,9.549065,-3.605153,-8.841357,-8.160887,-7.100025,-8.138588,1.191107,-9.853359,8.200821,7.342430,6.451930,1.341950,-0.118290,8.175120,3.209235,-0.351506,-7.504330,-0.374869,-2.598774,-7.063508,3.421865,-2.403481,0.871553,6.779902,7.603861,0.847787,7.968326,4.199001,-2.672516,7.382076,4.709223,-1.799165,0.386795,3.576272,3.972021,-6.368229,-0.761542,1.877512,2.432197,-0.724950,8.286825,6.936388,-4.415595,2.632321,4.253979,-3.671015,-4.961682,-8.715823,6.480827,3.556475,-4.988578,5.801466,8.844334,-6.659487,6.238082,0.576883,-6.134975,9.038119,0.758307,3.843715,-8.353063,-9.278742,-7.707641,-0.383359,-6.343970,3.051932,1.964570,3.385490,7.558776,8.582607,-8.123729,-1.222048,-5.732254,7.442692,-3.393956,-7.300278,-3.333088,0.866074,-7.275112,-8.364657,9.725518,6.153654,-1.305430,8.389996,-8.915364,1.831802,-8.395604,2.933176,6.124974,-6.459740,4.485678,-4.346149,2.071791,-9.199110,1.430883,-7.828010,-3.658473,7.412559,-8.966055,1.490513,-8.353884,9.085944,-2.787455,9.403731,9.581211,1.225914,-5.467615,-5.398287,8.396260,4.560506,0.465542,8.758513,2.659621,1.188149,-6.967116,-5.808606,7.814064,7.076814,-0.981447,9.762063,-1.184139,-0.004295,6.410897,8.139548,-3.319326,3.193106,-2.292032,0.746797,-0.893887,-2.440439,8.883780,6.898672,-0.171907,-7.550753,6.511858,3.143252,-8.052123,-8.946097,-3.722829,-8.562714,9.435165,2.987026,1.608938,8.656736,3.528341,-6.853941,2.024703,0.704131,-7.261896,-1.050812,7.992219,6.887854,-8.624002,3.049314,9.516686,9.042617,-0.621282,9.830458,3.803325,0.262904,-1.200733,-5.479565,4.353456,8.012867,3.701443,5.822166,1.510550,9.347870,-2.243799,8.319281,-4.165803,-6.578155,6.905132,-8.202061,0.967797,1.648348,6.455539,7.116680,4.134443,-3.661928,-7.393119,0.297731,0.386994,4.061319,-1.161458,4.466034,6.718600,3.090554,6.883056,-1.529186,9.133576,-7.367765,3.138918,0.712091,7.130336,2.023537,2.204035,6.644215,2.592729,-5.131326,1.198929,3.931889,-3.017143,1.300088,-3.440314,-0.588452,2.735341,4.811187,-1.471323,4.968153,-7.412747,3.543824,-5.254020,-3.582559,-3.641360,7.197327,3.373731,-3.968822,0.344794,6.796351,0.816651,1.392718,7.836462,1.112826,1.441110,1.899716,-7.810679,1.536743,3.236397,-6.581792,-1.170455,-8.643283,-5.975700,1.680252,-5.107261,-6.111848,-5.996866,1.545342,-0.836324,7.101735,7.466732,1.028639,-8.966893,-6.477342,3.104884,9.456252,-0.934070,5.722684,-4.715638,-2.745221,8.296320,8.999057,-5.489626,1.729722,9.714278,-0.915681,6.847708,-6.291988,-9.830448,-0.192723,-6.294922,-7.853729,5.846000,8.084321,-3.603620,-5.094017,-9.888231,-5.081651,-5.714599,8.858822,-9.693371,2.492502,-3.185260,9.842708,-0.225400,-6.107190,6.535992,-6.313597,-1.621473,1.809916,0.466363,-8.364586,8.304477,7.626609,4.213458,8.690757,-5.671998,2.831524,8.071962,-1.275145,-2.598995,-1.187463,1.289744,-5.947867,-5.184664,-5.927779,-9.544044,-9.780748,6.387209,0.055078,-9.946149,1.907548,6.823718,7.495434,4.930694,9.124970,-7.720044,-9.100241,-2.402159,2.998514,-6.162590,-7.329216,8.746233,-1.969320,-8.776124,6.216630,-3.777040,-4.924926,3.504786,-9.385465,1.549666,6.470058,2.845098,7.288829,-2.975673,2.345478,-6.568828,5.750590,-6.201754,1.073584,-1.374852,2.051487,3.864985,-1.542792,-3.032336,1.350847,-1.104446,0.556260,-4.487569,2.183403,-8.865616,7.150086,3.584414,-4.660290,-2.705531,-4.121158,-0.002600,-3.592051,5.322133,-9.048483,8.083183,6.659689,-3.124934,-4.881002,1.792030,-2.208148,-6.261798,9.087299,-3.338781,1.586733,1.991709,4.770535,6.473180,6.668428,2.083283,-2.241890,1.829966,-2.797913,1.691830,4.263348,0.199695,-5.665991,4.834134,2.808068,6.191556,3.162150,-5.319979,-7.785145,-2.290525,6.063812,2.779936,-4.553203,5.481498,0.821908,0.237493,-1.816721,-5.155332,-9.222096,-2.224616,1.632865,-9.745640,-1.809461,-4.909022,5.968853,-3.103469,-8.692876,-0.834814,-0.380964,6.721548,-8.586136,-5.922166,8.535870,7.428163,6.163758,8.721307,4.160762,8.521567,5.433449,-4.706983,-4.665851,7.215066,6.238803,9.060067,3.294845,9.965244,-2.278764,-9.308501,-5.346890,9.893381,8.500329,-3.310092,2.003014,-7.683028,6.479565,0.379325,3.052495,-9.276217,-5.127838,2.264273,3.836459,-5.496756,-5.297834,5.286831,-7.245288,-0.861391,-5.490557,1.216306,-0.715196,-2.051854,-5.839276,4.395959,-9.746483,-8.022759,-9.871187,-3.297040,-0.861692,4.802158,-5.691261,6.735719,8.279237,-3.517019,7.204035,9.234399,-1.553432,8.728281,6.523557,-0.071144,8.486443,4.727271,-4.144655,1.528399,-0.802077,-3.524012,9.062388,4.812163,1.277505,-5.595879,8.582421,2.070368,8.307784,7.630813,5.489496,-2.031940,-4.741093,-4.698340,-1.975677,-4.698080,-9.267650,9.805397,-7.203654,3.716331,-0.054411,-5.321126,0.628925,8.164511,0.569151,-4.355028,5.671344,3.870832,-5.827066,-7.832039,2.917909,2.545639,0.847306,9.038127,6.731603,-9.838260,8.019043,-4.453202,-1.048972,3.698345,-3.711052,-5.292295,6.695037,8.878333,-7.815751,-6.039588,-3.659853,9.275133,-4.702367,-5.464600,9.247771,7.176179,2.160591,-0.288287,-8.621584,4.973188,5.347543,-5.897595,7.452843,-3.011738,8.624815,1.005912,-4.181043,-5.252282,-7.402528,-1.121196,0.432802,-8.591860,6.218498,-8.284409,-8.128814,-5.133886,0.843507,-7.117162,8.536927,-6.020729,8.015258,-0.646129,6.646707,-1.627866,4.140186,0.775970,0.530665,-7.792080,-0.044159,-4.747310,-4.501470,-7.755303,2.769805,3.833896,9.079095,7.786105,5.619681,-3.466737,-6.147087,-4.849224,-9.237603,-4.613891,3.156061,-4.699848,4.376071,2.439433,-3.767706,-1.142323,-2.489792,-3.081156,9.773890,4.787801,4.680183,8.862401,-9.418400,-3.500373,-8.780406,-1.718463,9.642418,1.594256,4.968810,-4.986432,8.234941,1.020986,-5.230747,0.969893,-9.221482,8.010281,1.237876,9.788737,-8.255104,-7.658326,8.257941,1.746342,8.828755,1.318595,5.547705,-7.949754,-9.532024,-3.049156,2.552397,7.492772,-3.156242,-4.672246,3.344075,-2.078963,8.821504,-6.254586,1.023518,2.649196,3.663370,-6.850861,-9.545800,8.047654,-4.210631,-8.463309,7.320931,7.720428,-5.981787,9.347483,-1.790667,6.310569,-2.196648,-8.031391,5.103482,0.271226,-3.784323,8.146653,-8.980286,-7.480649,4.348629,4.786797,-0.442774,-0.440192,-8.632674,-2.640548,1.412688,-0.136411,-4.688421,-0.710026,-7.558216,-3.428733,7.749601,8.115811,-1.405088,-9.197185,-0.038109,-3.706145,0.917203,0.804514,2.551568,-8.174716,-2.352346,-7.535752,6.367027,-7.401133,-0.592799,-0.371905,4.499663,-0.193595,6.320827,1.107653,-0.741633,-1.017909,-6.106821,4.425897,-6.890401,1.580576,-7.126873,2.225963,-5.838255,5.116564,-5.850635,-3.156147,8.290914,6.874450,8.935122,6.375628,-1.723135,3.249469,8.824863,-6.165681,-7.103537,-5.614826,-6.825941,-5.244480,-8.916265,5.357721,-2.918921,-1.389474,-7.568258,-2.361740,-5.894491,0.230387,-7.456444,1.670328,4.452484,3.737466,0.127890,-2.768419,0.914640,-9.161707,-2.376940,-7.157076,1.102506,8.850266,-3.652484,-3.016368,1.227542,3.106500,-7.714702,5.576076,3.774276,-7.087993,4.880006,-9.114979,2.756249,-8.100015,-2.488525,-6.652669,2.692071,-8.196734,-1.519431,-1.242880,-6.595609,4.517355,-8.645709,6.967565,3.760220,2.462696,-3.121840,4.389232,-5.244263,-3.265074,-7.648521,6.207723,-0.148038,3.122392,-5.823698,-1.417952,2.672007,3.735532,-1.226866,5.556376,-8.806436,-3.957611,-6.558385,2.223443,5.573716,-6.317708,-9.761672,0.919894,4.280519,8.730492,-4.942699,-6.403583,3.388246,-8.996243,-0.746561,3.689489,-9.856111,-9.935024,8.257380,2.684747,6.914552,-1.687815,7.215870,-7.244214,-6.041459,-8.262805,3.105791,2.107927,3.865172,-2.529424,3.326103,-4.432495,-1.490917,6.447460,-3.584811,-4.679481,-2.836857,-8.917368,6.031162,-4.479383,-2.474533,-8.656484,2.029026,7.618096,8.936922,7.583967,2.356686,-5.823772,-3.696594,-7.742609,5.594953,-2.427027,5.584794,1.312399,9.538752,8.400164,2.651936,5.013734,9.076811,7.571231,-5.694004,8.975797,-9.057554,5.177419,5.699263,-3.218355,7.282793,-2.170117,8.347692,0.378813,8.306911,-7.720761,-0.625361,-4.756468,-8.108359,3.602553,-7.793694,3.220554,-9.795568,4.676483,-5.904716,-3.885370,-1.606887,-0.964636,3.907607,-6.851715,-3.839252,6.888478,-2.383191,-1.134069,5.130606,0.007219,1.611330,-4.598150,-4.385686,1.201321,5.215568,-8.701537,5.006388,0.375504,-4.067502,9.465008,0.897865,6.541311,-0.839268,-1.678325,0.547836,1.467938,-8.838980,0.377578,0.279487,6.956627,-1.513435,-4.193649,0.156909,-2.132998,2.658371,-4.669441,-5.252958,-4.990703,-6.387649,-8.859708,0.477670,-1.577056,-0.525970,-4.533880,-3.296219,-8.568441,5.389164,-7.915652,8.307201,-5.701690,6.447067,7.610162,-9.163100,-4.389824,-7.559694,8.560294,4.497848,-5.740761,7.153601,8.635259,-4.979523,-0.905685,0.392019,-8.712976,-8.489281,3.522742,-4.014989,9.478072,9.081311,3.115630,7.729795,1.362036,-2.855446,-8.320705,-6.277283,9.223162,7.072986,-8.137654,0.776075,3.288311,5.428273,2.450726,9.416467,-0.149113,-9.862640,6.537938,-3.763736,-5.322518,-3.400668,-8.612830,0.873145,0.271913,-7.188666,2.863151,8.587502,5.391865,9.113756,-4.590634,8.305202,6.373513,-7.744368,1.660166,3.666364,0.543076,-4.502924,-6.584345,3.180618,7.312163,1.388160,9.146881,1.458312,3.672525,3.147693,-0.870816,3.918920,5.001831,-8.333161,-4.214619,-9.090228,2.380179,-8.176232,-6.546123,7.953753,5.553646,-7.212880,2.859037,1.102382,3.714139,-4.560556,3.840841,2.457652,2.955077,-7.625100,-1.792761,1.569070,4.827669,3.880364,-4.799902,2.151212,-7.205595,-7.968688,-1.625424,-8.961003,1.054882,6.168667,-8.212039,5.112184,-7.044632,-6.872529,-0.077751,-4.215091,0.772427,-1.665193,-1.155461,0.062291,0.400978,3.033451,0.892631,8.487384,-4.459287,5.621688,-1.859830,8.743896,-0.417889,4.502753,9.513506,1.999312,2.316725,-4.811798,8.888901,-8.859634,-5.670374,-4.253707,-2.410153,-0.638580,-0.026878,6.583319,-8.892740,4.571795,-0.696815,9.718655,-2.872406,-4.984756,-1.575903,-7.193745,-8.472007,4.372833,-6.066284,-8.103653,2.145007,8.678596,0.612119,-9.567966,6.981371,-7.026560,-5.789281,-1.222734,-6.920297,3.370784,5.732618,5.148458,-0.682760,-2.418525,-3.490116,3.707337,9.918312,-6.325353,-4.339287,-3.741354,-0.643356,1.358648,6.571731,-4.879705,7.910382,-1.625645,1.563946,-0.024074,-7.694802,-8.987335,-6.514166,0.325447,-5.186490,-0.042896,-5.243767,2.093159,4.974734,-8.576997,-4.933292,0.834654,-5.614204,-6.190177,7.628754,2.769878,-9.957944,-7.182057,-2.210314,-6.267567,9.516727,9.366973,-8.075816,0.020558,6.909968,-2.523019,-7.662314,0.057174,5.872161,-7.988996,8.569904,7.227327,3.628379,-5.727608,4.268266,-7.084036,6.820355,-5.925463,-9.083300,2.120026,8.546475,8.903255,3.451177,-8.060923,3.798124,8.661936,8.439027,-6.477646,9.622458,-6.140632,5.958479,1.732325,-0.818976,-1.667500,6.621152,-1.588254,6.796315,-8.041132,9.018192,-8.709843,1.554852,9.114278,-3.587281,0.126421,-5.106601,-5.450833,7.689694,-0.082526,6.484712,-4.548748,-9.368688,-5.296242,1.171204,0.730944,1.797530,8.343535,4.888401,2.756704,-7.747785,6.374591,-0.021749,-2.280375,-0.264510,0.838203,-3.392206,-2.171200,6.421098,-0.654573,-9.536814,6.593608,8.326362,-3.493726,5.497565,-1.854543,0.666755,-4.332333,2.382500,1.695351,2.267506,-4.850737,-8.915802,-8.220394,1.239709,-4.161506,-8.526484,9.754266,-4.039767,4.459159,-8.027818,6.028452,4.828686,8.171184,9.875052,-7.624352,-2.419902,-9.480602,-1.522841,-7.179062,0.723342,6.865541,-7.395989,-5.742813,-6.626361,-8.785665,0.967598,-6.365151,0.503993,-0.565549,-9.230318,7.673121,0.927017,-4.187398,-9.374348,4.012187,6.320297,-4.222953,1.352660,1.377877,-3.070294,-9.675968,9.633021,-2.495839,6.915975,1.983875,-3.272988,-1.754798,-8.726134,4.713069,5.535344,5.249558,1.824960,-5.726282,-0.720076,-6.713277,3.274769,-9.087368,-1.789960,5.806602,5.482986,4.928341,2.427211,1.651238,-6.186015,-9.035639,9.997761,0.357384,6.947797,-6.196946,3.502315,-7.883238,2.268725,2.607694,-2.192121,5.268776,-9.938484,2.715299,-4.988881,0.573488,5.016299,-3.765196,9.314398,8.803197,9.948004,-5.387611,-7.717906,2.760828,-2.270890,3.463697,3.246823,-3.118557,-9.893293,7.887998,9.327620,2.151736,0.549009,6.100209,2.043682,5.146477,-1.134208,5.287794,7.510806,9.909580,-8.155343,-3.889910,5.206604,7.875717,-8.535394,8.426341], dtype = "float64")#candidate|4900|(2145,)|const|float64
const_4901 = relay.const([-4.020451,-9.722202,-8.493319,5.134553,0.898194,1.409354,8.468336,-2.091166,-5.217715,-7.129798,-8.060129,4.888053,-3.948230,-1.737087,8.286714,-4.934032,-8.021087,-3.148537,2.637107,-2.408060,-9.571590,1.073774,-9.914524,6.145033,-9.733597,-7.210733,8.185478,6.037337,-2.004138,-0.574721,-1.048478,-1.215429,6.431061,1.251747,-3.490686,0.908912,5.201092,-0.678635,7.390479,-4.367485,1.020700,-3.697686,-1.728243,4.724335,7.595234,5.928206,-0.843420,-3.871829,-6.147444,-7.307147,6.487074,4.715513,-7.139211,-8.352036,-8.119816,1.173799,-9.161057,-5.006399,8.754661,2.059717,5.587736,-6.478313,-0.624091,7.838028,-5.088221,6.684191,-5.574571,6.343179,4.387310,-0.851881,-3.322565,9.665077,8.406632,-0.883395,1.690241,6.839529,-6.619409,3.474217,-4.665676,8.988028,-5.723554,4.363292,1.247679,-7.362533,-4.523136,-6.007043,-9.579999,4.205408,-6.998819,2.961829,-2.720747,-5.109615,-1.081879,5.686841,9.319285,-1.065261,-4.098747,-0.687638,-5.507973,-2.002378,6.000344,0.911199,-7.711620,3.886874,-5.340873,2.139364,7.504386,9.804958,9.287132,-6.167610,2.055341,-9.179465,-6.639411,-1.792172,0.361158,-0.894404,1.547851,4.643977,-0.664360,-8.682498,1.125638,4.313210,-2.538397,-3.863617,-6.537058,-5.636455,2.870063,4.753309,0.020565,-9.034109,-7.187011,4.595844,6.054095,5.001256,0.495898,-7.145229,4.768261,6.384883,0.016253,6.936078,-9.274471,7.166949,0.060542,-6.767145,-8.809126,6.129504,2.017579,1.050246,8.805982,-6.941510,-1.821022,2.861726,2.580515,2.144791,5.728718,-3.797361,-8.652105,8.357807,-7.625415,-5.126479,7.979509,2.533481,-0.005684,9.357587,2.119780,-5.979633,-2.685896,-4.520643,-1.023269,-8.207930,-7.390372,-1.299382,6.991387,-0.336663,8.527087,-6.743617,3.872335,2.373442,-7.508144,9.951077,-6.171347,-4.006575,-7.943455,-6.943815,-1.423890,-2.530691,7.588082,-8.687423,-5.904519,-9.729614,5.190623,-2.158389,-7.153383,2.543445,-9.018302,9.491096,-6.329655,-6.112716,-8.510760,-7.531790,0.127755,8.253423,8.721856,2.494756,4.180084,1.122414,4.306913,5.706108,5.119237,-1.054546,7.880159,-4.900551,2.951401,-2.436171,-0.466746,7.485293,4.834400,-7.439868,-8.689272,0.895656,-8.222890,-1.052118,-7.709884,5.528167,-0.504084,-7.327047,5.708696,-0.749166,1.344210,-2.683177,6.859031,0.825615,1.041487,8.311812,-3.294135,7.840797,0.483852,-3.203957,6.318402,1.682302,3.241688,3.194382,-6.755712,-9.099027,2.618999,0.843375,-5.954099,8.975436,8.434158,3.510057,6.307642,-3.625327,-7.974066,7.916379,-3.833437,-5.170590,-4.578715,4.427078,6.419599,-7.994159,-8.982881,8.297599,-7.818050,-1.504467,9.028324,0.709197,-4.452312,3.079854,-7.029459,-7.302611,2.972546,5.612213,8.001283,-6.587705,-0.851960,8.691744,5.312852,0.142725,1.455977,7.970635,7.190825,-6.617374,-3.245018,-3.681615,-2.098525,8.808088,4.140946,4.112425,4.055342,2.068181,-0.493660,4.472955,4.897597,4.541923,-6.553096,2.027230,-7.954601,-9.276658,9.656630,1.670812,8.980841,9.008550,5.556710,4.459854,4.721168,-9.845591,3.777050,5.525716,-9.512675,-8.228382,1.754733,-4.246123,0.101914,-0.606721,-3.880789,-2.520737,-1.012967,-6.332193,-1.967070,1.425039,6.510356,2.982966,6.956885,4.983931,9.636736,-5.329756,-8.666630,-4.000132,2.032797,-8.943921,4.155201,-6.762152,4.889735,2.137373,-2.857080,7.148239,5.095958,5.741607,2.853830,-3.440717,-3.285106,8.092947,-4.330666,-7.029605,-2.399627,7.157085,3.566875,7.421868,-9.587652,-9.534244,0.557125,-2.480383,-9.303507,2.003492,1.517236,-3.100320,7.489529,-6.125010,-0.250355,0.748335], dtype = "float32")#candidate|4901|(360,)|const|float32
const_4902 = relay.const([4,-10,-3,4,8,5,-10,-9,-7,5,-8,-8,-3,-3,4,-1,10,-5,-4,9,6,1,7,8,-5,-5,-7,3,1,1,1,-2,-3,6,-7,-9,-10,-8,2,-10,8,-9,2,8,-7,-7,-9,9,-9,9,-9,8,1,-8,-1,-2,-8,5,-5,3,2,-8,2,-4,2], dtype = "int16")#candidate|4902|(65,)|const|int16
var_4903 = relay.var("var_4903", dtype = "float64", shape = (936,))#candidate|4903|(936,)|var|float64
var_4904 = relay.var("var_4904", dtype = "uint64", shape = ())#candidate|4904|()|var|uint64
call_4899 = relay.TupleGetItem(func_3605_call(relay.reshape(const_4900.astype('float64'), [13, 15, 11]), relay.reshape(const_4901.astype('float32'), [360,]), relay.reshape(const_4902.astype('int16'), [65,]), relay.reshape(var_4903.astype('float64'), [936,]), relay.reshape(var_4904.astype('uint64'), []), ), 9)
call_4905 = relay.TupleGetItem(func_3611_call(relay.reshape(const_4900.astype('float64'), [13, 15, 11]), relay.reshape(const_4901.astype('float32'), [360,]), relay.reshape(const_4902.astype('int16'), [65,]), relay.reshape(var_4903.astype('float64'), [936,]), relay.reshape(var_4904.astype('uint64'), []), ), 9)
var_4909 = relay.var("var_4909", dtype = "int64", shape = (10, 12, 2))#candidate|4909|(10, 12, 2)|var|int64
bop_4910 = relay.bitwise_and(bop_4888.astype('int8'), relay.reshape(var_4909.astype('int8'), relay.shape_of(bop_4888))) # shape=(10, 12, 2)
uop_4914 = relay.acosh(call_4899.astype('float64')) # shape=(936,)
uop_4916 = relay.acosh(call_4905.astype('float64')) # shape=(936,)
output = relay.Tuple([const_4900,const_4901,const_4902,var_4903,var_4904,bop_4910,uop_4914,])
output2 = relay.Tuple([const_4900,const_4901,const_4902,var_4903,var_4904,bop_4910,uop_4916,])
func_4921 = relay.Function([var_4869,var_4903,var_4904,var_4909,], output)
mod['func_4921'] = func_4921
mod = relay.transform.InferType()(mod)
mutated_mod['func_4921'] = func_4921
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4921_call = mutated_mod.get_global_var('func_4921')
var_4923 = relay.var("var_4923", dtype = "float32", shape = (10, 12, 2))#candidate|4923|(10, 12, 2)|var|float32
var_4924 = relay.var("var_4924", dtype = "float64", shape = (936,))#candidate|4924|(936,)|var|float64
var_4925 = relay.var("var_4925", dtype = "uint64", shape = ())#candidate|4925|()|var|uint64
var_4926 = relay.var("var_4926", dtype = "int64", shape = (10, 12, 2))#candidate|4926|(10, 12, 2)|var|int64
call_4922 = func_4921_call(var_4923,var_4924,var_4925,var_4926,)
output = call_4922
func_4927 = relay.Function([var_4923,var_4924,var_4925,var_4926,], output)
mutated_mod['func_4927'] = func_4927
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5070 = relay.const(True, dtype = "bool")#candidate|5070|()|const|bool
var_5071 = relay.var("var_5071", dtype = "bool", shape = (10, 7, 15))#candidate|5071|(10, 7, 15)|var|bool
bop_5072 = relay.logical_and(const_5070.astype('bool'), var_5071.astype('bool')) # shape=(10, 7, 15)
bop_5075 = relay.mod(const_5070.astype('float64'), bop_5072.astype('float64')) # shape=(10, 7, 15)
var_5080 = relay.var("var_5080", dtype = "bool", shape = (10, 7, 15))#candidate|5080|(10, 7, 15)|var|bool
bop_5081 = relay.right_shift(var_5071.astype('int16'), relay.reshape(var_5080.astype('int16'), relay.shape_of(var_5071))) # shape=(10, 7, 15)
var_5098 = relay.var("var_5098", dtype = "bool", shape = (10, 7, 15))#candidate|5098|(10, 7, 15)|var|bool
bop_5099 = relay.floor_divide(var_5080.astype('float32'), relay.reshape(var_5098.astype('float32'), relay.shape_of(var_5080))) # shape=(10, 7, 15)
output = relay.Tuple([bop_5075,bop_5081,bop_5099,])
output2 = relay.Tuple([bop_5075,bop_5081,bop_5099,])
func_5112 = relay.Function([var_5071,var_5080,var_5098,], output)
mod['func_5112'] = func_5112
mod = relay.transform.InferType()(mod)
mutated_mod['func_5112'] = func_5112
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5112_call = mutated_mod.get_global_var('func_5112')
var_5114 = relay.var("var_5114", dtype = "bool", shape = (10, 7, 15))#candidate|5114|(10, 7, 15)|var|bool
var_5115 = relay.var("var_5115", dtype = "bool", shape = (10, 7, 15))#candidate|5115|(10, 7, 15)|var|bool
var_5116 = relay.var("var_5116", dtype = "bool", shape = (10, 7, 15))#candidate|5116|(10, 7, 15)|var|bool
call_5113 = func_5112_call(var_5114,var_5115,var_5116,)
output = call_5113
func_5117 = relay.Function([var_5114,var_5115,var_5116,], output)
mutated_mod['func_5117'] = func_5117
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5426 = relay.var("var_5426", dtype = "float64", shape = (14, 16, 13))#candidate|5426|(14, 16, 13)|var|float64
const_5427 = relay.const([[[-4.786272,-9.051186,5.540545,1.540030,2.141257,5.095342,-9.323940,5.515867,5.465709,-5.703611,3.044109,4.985059,-6.371636],[-2.477495,-2.093176,6.485252,-2.900446,4.180175,7.264785,-1.347167,9.438095,-5.976787,3.767283,-8.414186,-2.523812,-6.960993],[9.242072,4.331632,-8.445827,-9.735682,-7.622325,0.583258,1.563881,-6.376772,-2.224028,-2.627231,-2.156156,8.846690,-9.382513],[-1.689010,1.312154,-6.420084,1.881975,-0.160336,9.972315,-6.416730,2.945110,4.524182,-1.112156,7.820568,-7.747102,-4.485676],[-8.605206,-0.975073,5.821145,-2.664591,0.052519,-8.294831,-0.102714,5.708818,8.596857,3.386493,1.299416,-8.983044,-3.977351],[-3.526202,8.099511,8.676194,4.986700,-0.549584,9.703737,5.430214,3.096528,4.455908,-4.047036,0.665751,-4.137902,-9.720081],[2.942466,4.184707,2.527868,-9.868027,-8.729847,-1.409107,9.113815,-2.795919,3.243616,-2.631281,4.351581,7.367671,-7.186228],[-2.178674,8.077648,-3.172229,2.447184,4.645630,-1.123381,5.253257,5.425864,-4.178065,-8.851968,1.330907,-5.874424,-2.761223],[9.707522,2.235880,-0.673065,-0.499050,2.711500,2.986777,-9.138900,0.115171,-0.241650,1.324603,-5.996476,7.732420,6.187352],[8.936278,-5.715963,8.999339,5.261542,4.470616,-6.407134,2.235522,-7.646172,-5.856127,7.397066,1.509435,-6.859370,-6.685730],[-5.473026,7.618128,-4.799518,3.183322,-1.032474,8.593098,-0.280766,-7.286399,-9.733959,-8.262620,-0.403633,-3.903738,-6.715298],[2.441996,-4.490989,2.587280,5.700653,-3.562664,4.140807,-1.779655,6.664504,7.941234,-1.499788,-6.459641,-1.463388,-9.907661],[-8.633013,-3.760228,-7.085233,8.500050,8.069482,-4.616926,-5.179547,2.301331,-2.160237,9.833651,6.806645,4.109283,-5.787033],[-7.952003,-1.221553,5.014212,0.771276,4.939781,-2.835281,4.683078,-9.454642,-8.614426,-8.320103,-9.881598,-0.825371,-9.801225],[1.224936,7.793659,-1.115499,-2.290216,-0.817368,6.365301,4.187478,-0.142494,1.240502,-7.882089,6.742370,-8.034382,-0.389930],[-8.011386,0.800225,-2.765415,8.216288,-9.513224,9.441925,-3.867044,3.128660,-3.857000,4.519053,-0.550462,-5.628079,-1.116370]],[[3.929765,4.247797,1.123917,-2.004634,3.546280,7.616404,9.342979,-5.364531,-9.073713,-9.986885,-0.312434,2.847068,3.437486],[-4.981095,-1.972768,0.876329,-0.129447,2.636186,9.360950,-4.743664,-0.573563,5.986576,3.416169,-9.878830,-9.316163,7.966710],[9.894342,-6.747012,-4.142383,-5.723444,3.136279,8.682502,6.392551,-4.160916,-8.700702,7.512509,-6.168937,-6.993420,-6.499760],[-2.904352,-6.989338,1.469685,-7.857458,-4.581136,-1.257894,6.260330,1.981937,1.669596,3.282056,6.229061,-8.403602,-9.968444],[5.884016,5.727186,3.954255,-2.740934,0.302763,-5.491390,-3.291065,1.138293,3.204063,-9.936999,3.014141,3.055471,2.959703],[-0.901928,5.086131,0.178034,-7.427834,-4.262825,-1.744346,1.220738,-4.170328,9.040282,-9.097860,-2.802278,8.313953,-3.901172],[-7.696937,6.292556,-9.786808,-9.817958,-0.342954,-6.138579,-0.142985,-6.437567,-0.923789,-5.640903,2.235089,0.855971,-7.158760],[-6.988170,-5.363142,-3.906333,-8.717983,1.415885,-8.686851,7.822531,4.287616,8.241643,-1.772802,-6.653188,1.935299,-1.905877],[-9.735677,-5.363048,3.349520,-1.202581,-5.391302,-9.644452,-0.197721,8.808904,2.432110,2.099031,5.620175,-9.543034,-9.404263],[-5.865989,-5.704236,6.914899,-6.866490,7.469738,-1.079453,0.811358,1.568611,1.397192,6.234232,-1.363290,5.071709,9.472238],[-7.193160,2.789694,-8.988991,-7.610298,-1.785444,9.176920,1.351003,-8.445482,-2.379598,-8.327470,6.578784,0.589047,6.387538],[-3.199543,9.970255,4.599706,1.454680,9.488803,-4.768307,-6.172753,6.274285,4.285401,8.321989,-7.523773,2.670819,5.603385],[-6.538360,-3.036388,-1.244213,5.404332,-0.774884,7.768335,3.502973,-1.821956,-9.357565,-7.722046,-2.932515,-1.656915,0.368067],[-1.678784,-8.085876,0.532052,-8.556589,-1.350782,-3.222095,5.642914,-4.010328,2.296776,3.905896,8.098882,-7.636520,5.724977],[1.916172,-4.869077,-3.764746,1.813380,-9.893102,7.707376,-8.846684,1.648341,5.901207,-3.143167,6.736074,9.720813,9.413674],[-9.751117,-3.149777,-9.617812,-1.009540,-6.385201,6.875865,8.715607,7.620017,0.159483,-7.908735,-4.640624,9.744581,4.740173]],[[-6.322098,6.203064,4.760213,-6.522247,9.253497,2.963401,8.549987,-7.445942,6.204201,3.480996,-5.923620,1.645037,2.292917],[5.136112,-5.568315,-5.197973,2.463175,-1.142802,3.803756,9.680958,7.125130,-8.723747,-1.739931,-5.820152,-1.043989,-7.720654],[-1.014172,7.658035,-7.559126,-0.597442,0.501267,9.151861,-4.639734,9.670413,-2.783434,-2.005213,9.286652,3.903145,0.492763],[-6.902649,8.682445,-3.353084,-9.548989,1.500287,-4.653587,7.132920,-8.168087,8.185938,-6.954522,6.475151,7.253543,-2.086505],[-7.625677,-8.562565,8.056428,-2.841988,-4.079767,-5.262715,-2.400945,2.744200,7.274685,0.711756,5.354549,-1.592406,8.633562],[5.282510,4.558885,-0.526544,4.935940,1.230529,4.790124,9.355334,2.689635,-1.192105,2.323727,-6.755624,-1.099037,3.786838],[-2.769534,3.217449,3.288039,-6.298254,-8.906948,-1.149330,-8.663452,1.324948,5.501667,4.939254,-9.117777,6.915094,4.843614],[7.394532,1.968272,7.720724,-6.422571,5.061198,9.120561,8.118005,-6.499320,0.735557,4.935766,-9.199590,2.186229,9.233388],[1.334182,-1.270262,0.219814,-6.438602,-7.467888,-5.633115,-4.346207,-2.831597,-8.051735,-0.405314,5.150695,7.140003,-2.183588],[-1.674671,8.405155,2.393030,-8.867173,1.873642,7.589170,-8.922656,1.881229,7.955456,-2.251073,-3.630688,8.938446,-1.133913],[-8.460377,3.959516,0.189826,1.450235,-7.271181,-1.198098,-3.709231,-9.969588,1.899411,4.120462,8.400682,8.300415,-3.782692],[-7.531453,-6.587774,-3.609772,-2.544429,9.551444,1.484719,-8.941434,2.261678,-7.663300,-7.065956,-9.011596,0.629271,0.609899],[-1.553854,0.151500,-4.491886,-3.792716,-6.892870,1.915230,-6.043020,-4.406154,2.154230,6.881490,1.500560,-0.928722,-1.700710],[-2.223247,-0.505257,1.071267,-5.769458,2.798534,-2.897923,0.968783,1.558006,-1.325174,7.885515,1.538683,3.109049,2.016763],[8.619918,1.781518,-7.329076,9.765060,8.662443,8.681132,2.353695,-6.620546,-2.064297,-4.115449,-6.126825,-8.985464,-5.727546],[8.458274,-2.666843,-4.828201,-4.179575,-3.747681,2.321872,-0.527818,-0.465970,-1.462911,-7.061707,1.016008,-8.226849,-4.584406]],[[-6.406137,-5.861071,3.356726,7.215191,8.026104,8.580903,9.207797,-5.785038,7.099215,8.180336,9.903733,-5.741073,-3.520455],[-8.927617,1.379402,8.069533,2.420496,-6.333533,3.035456,2.881871,-5.792875,3.070093,-8.876813,-4.543162,-8.592901,3.908663],[-2.691945,4.551239,2.003857,3.760288,8.660746,9.883897,1.400164,2.463285,7.815753,1.486892,5.191326,2.453857,-6.014397],[0.054540,4.297513,-6.073998,-7.840825,-7.375588,-0.169407,5.656144,-6.838366,-1.567544,-2.156287,2.309331,-8.160376,9.736276],[1.041653,9.350266,3.351032,-9.040882,4.131664,-1.221822,-4.911864,-4.038402,-4.052560,-9.053339,-8.501367,-4.961125,-5.253510],[-2.477026,-9.154093,-5.523014,-6.166714,-0.417460,6.051865,-9.264810,5.313993,-7.007799,3.988007,-6.772112,-0.423389,-2.118837],[-2.876781,-2.060520,-9.366780,8.329936,-4.265940,-0.257283,-0.372914,-9.660798,7.924384,-9.714922,2.233345,9.815421,5.550305],[3.000238,-6.989008,-6.556210,-4.082496,-5.806497,8.359453,-9.081161,6.335653,-0.121201,5.950150,9.625868,6.808107,4.934666],[7.309085,5.152988,3.988313,-6.935154,0.216729,-2.273444,6.279175,-7.832464,-9.374813,8.654849,-1.791177,5.388193,-7.698132],[-9.427427,9.625106,5.460624,-4.199891,7.258403,9.551300,-1.071156,0.838576,-1.860764,9.657382,4.456304,8.134352,1.019282],[3.057311,5.718446,-6.073228,3.657776,-9.777905,-3.952641,-6.176788,-9.896407,1.569347,-6.528195,9.398651,-8.787730,8.558400],[-7.228567,-4.518100,-0.646683,2.080866,1.124635,-1.285067,6.535386,6.198476,3.474086,7.984382,1.864671,-8.932319,3.287991],[1.729684,-5.631344,-4.032564,8.718327,8.965258,-8.126888,-1.714491,-2.997443,-6.773278,3.780541,8.743842,6.661665,-9.200130],[8.760734,-5.568804,-2.158526,-4.950409,8.836217,5.022234,6.180986,-8.588641,9.091829,-0.287986,8.889906,6.545422,-6.604803],[-4.495574,-2.645519,5.395102,5.568447,-1.400346,1.222003,3.081866,3.286293,2.091649,6.279500,-1.939374,-5.959294,-7.718395],[-0.440844,-8.379555,-2.738531,-8.793583,7.969167,-4.482905,-0.336331,-6.374815,-4.084374,-6.336448,2.104115,-1.799783,3.750408]],[[8.237330,5.281822,-5.655842,-3.076147,4.533060,3.761042,4.148836,9.151736,8.909597,-3.219607,3.252616,5.223500,1.894793],[9.544499,0.100220,-4.069081,0.268050,-5.455594,8.047409,-4.143675,5.340287,5.077457,4.737847,9.223914,-2.431809,-6.837200],[-3.390503,8.208724,-9.266162,9.304651,1.695045,8.624404,-8.571478,-3.559034,-9.285926,-2.290744,-7.350826,-4.815394,-9.230377],[4.625329,6.059651,-4.544560,9.687264,1.511824,-8.107504,-6.958673,8.093445,-7.498335,0.639196,5.874920,-7.734279,-1.506078],[0.355980,-0.579692,-5.015180,-2.320296,9.380322,5.857439,-7.241563,1.326814,4.789320,6.212388,4.673776,-0.470305,-1.275219],[-8.256386,6.335275,-0.680891,8.010581,-2.423049,-5.003655,9.809444,9.417265,-3.739638,-9.454323,3.934399,6.729292,-0.332261],[-8.412771,-0.205128,-3.481395,1.455397,2.919580,2.336894,-6.021758,-9.014110,-8.355399,7.653766,-7.887554,-4.741905,2.360755],[-2.256243,-5.271023,9.402309,-6.249591,7.323188,-1.969433,-7.831227,-9.687678,-2.913612,-8.615626,1.295919,-6.776464,-3.130272],[6.565921,1.653564,-4.218709,5.913938,-5.526966,-0.676729,-7.478440,-5.054063,-5.971798,-4.284954,-0.085049,-9.098973,8.392899],[9.966234,-3.691321,-0.954665,-4.191660,-1.285415,-0.698060,7.520632,-6.165482,6.172283,-7.688898,4.901949,-4.429170,5.982497],[-9.165171,7.263308,-2.263710,0.276177,3.932095,-4.661919,-0.910056,-7.826690,-2.312419,4.468502,0.090937,-5.534983,-3.749126],[7.479566,3.457528,0.794826,-4.269327,-8.268631,-9.578635,2.170412,0.150433,0.498654,-8.426601,-3.279337,-6.558979,8.952582],[-3.454410,0.216208,9.336135,-0.739543,3.824542,-2.609614,-1.174615,-1.480571,-9.072861,-3.034282,4.695108,1.228418,-5.901373],[7.338886,-4.900416,-2.667035,-5.708584,0.264296,-9.522621,-8.995933,-9.328766,6.382266,5.799787,5.631388,6.225579,-6.571498],[7.559722,-8.468911,5.843344,-6.274432,-8.950879,1.889466,-1.673543,-4.233659,-8.828444,1.005633,8.212679,0.217907,-4.724090],[7.047982,8.530233,4.673965,0.869993,-2.822662,7.720522,-5.190798,8.041646,-0.121428,0.737626,2.829507,9.523881,-1.263807]],[[5.850177,-1.504671,-9.610016,-7.057976,1.826970,-5.413931,0.296209,3.748252,-4.477860,1.650904,5.689025,2.290180,-1.537115],[-8.916508,0.428611,2.737187,1.125490,8.275801,6.113163,1.443402,2.726792,3.279491,-9.596846,4.908424,2.087930,-8.618360],[-0.913341,2.402758,-6.249843,-7.229214,-9.573034,4.158414,5.718512,1.486627,-9.833825,6.834345,-3.961840,-8.777067,-3.234896],[9.542600,-2.204854,-7.032274,-9.554918,-4.632586,-1.793002,-7.706459,-6.576735,-6.659126,-3.922137,-7.197799,-9.213753,-4.625621],[-8.423034,2.326484,-2.625032,-1.944747,-4.159632,2.279619,-0.560804,-7.410396,4.536397,4.229000,-3.063245,8.412329,5.665966],[2.422847,-9.907322,1.631364,-1.148436,8.624790,7.452785,-9.501835,-4.806422,-8.358100,0.209707,7.776911,-6.685834,-4.642861],[-2.206975,7.089227,5.045233,5.346016,3.666116,-5.840015,5.005430,-2.231995,-5.562750,6.435000,1.893278,6.360055,-2.293831],[0.297200,-2.502300,3.213947,7.215712,-3.834167,1.889647,-0.141159,-8.950013,-5.641407,-6.116201,0.427762,7.686318,-1.436936],[-5.643325,6.159000,-3.573247,6.643480,-7.254480,-6.091414,-0.985907,-7.805635,-5.638236,-5.583837,-3.655042,1.837639,0.681857],[5.376733,6.111397,9.061864,8.167125,-6.863391,5.208615,-1.729893,-1.926932,-4.316317,-4.876596,-2.079668,5.211429,3.771058],[5.046980,4.330930,0.177901,-7.316855,-6.461498,5.783035,-4.478494,6.386234,2.950191,-4.167432,-6.266879,-1.288423,7.540325],[-0.562891,5.829876,-9.601964,-4.611093,-0.733952,-1.434294,-0.211016,-3.246833,2.941742,1.047246,2.371834,-6.310496,-1.776561],[-9.628423,5.366531,5.652601,-4.588254,-3.819406,7.715442,-0.178066,-1.114550,-9.860344,3.044666,-5.026865,-6.127441,-5.536352],[7.316201,3.052924,7.264265,-6.233024,6.062999,-4.771082,6.621284,0.846919,4.392271,-8.079141,-4.603448,-8.551681,5.448186],[-5.229158,-8.017323,1.329275,-6.438072,2.708335,-3.352683,-8.793807,1.835899,-7.193974,3.894151,-6.440177,0.575033,3.033148],[4.476931,-8.327075,-5.282394,-1.388969,4.545502,-6.089562,-3.642810,8.231721,-0.538016,0.802770,2.363530,-1.176811,1.204953]],[[0.777591,8.696543,-9.120989,3.485728,8.515187,-6.642802,-3.262154,-6.564508,5.927435,8.892226,6.638861,-0.114148,1.563666],[-2.249457,3.241942,-6.255228,4.862131,4.344409,7.724201,-4.288539,-6.712195,-7.244648,-4.632662,-4.379601,-1.747616,-7.319230],[8.736177,-4.647812,-3.753283,-0.590936,-4.366326,2.558687,-8.382557,1.675405,7.107816,-2.225183,-7.728784,-4.781398,7.777588],[-1.072071,-2.893519,-9.636903,-8.346095,1.986384,8.773335,-7.815187,-4.346149,8.815840,-8.004138,-0.376518,-4.727631,5.268814],[-9.653558,4.955885,-2.414502,2.767485,4.069271,-2.117915,-9.399420,-1.161344,7.568963,4.585951,-3.523088,-6.281420,4.612776],[-0.630903,-4.449519,8.222973,-9.873787,-7.666061,-4.438907,7.455440,2.266401,8.113906,8.875028,-8.935083,-7.655584,7.265462],[-5.716780,5.323046,-3.203879,-2.718780,-5.991857,5.874958,-0.577930,1.814692,6.943753,-5.624176,1.514052,-9.302074,-8.919211],[7.805764,-2.904741,0.309334,7.413894,9.595226,9.498922,-3.647696,5.481864,-7.548641,3.781930,-8.518550,-1.303007,-0.017978],[3.863198,9.247142,1.524841,-4.634442,6.103393,-0.347766,6.449128,-2.076832,8.667728,-0.757618,2.719426,1.774335,-7.948880],[7.306858,-3.762840,-3.803032,6.080703,6.671955,4.631821,-1.749165,-8.930842,6.579343,-1.724536,-5.211228,-5.634617,-9.977371],[1.150514,-8.834434,-4.080111,-2.580283,0.767481,-0.054254,-0.523737,3.389303,3.403606,-7.326392,9.416036,9.520108,-6.009461],[9.577350,-6.866748,-5.247094,6.932108,-5.483627,-5.174973,5.140824,5.206268,-0.008299,7.750176,1.231783,-8.043816,-6.271597],[2.488418,3.224442,7.224643,-9.319115,8.832900,5.838918,-5.085599,-0.578033,2.252071,-6.678012,1.925749,-7.803187,7.665697],[1.710730,-3.852778,6.388309,-1.691964,9.194696,9.851878,4.639928,-1.683903,-8.381496,-7.210425,0.763325,-5.165473,3.002959],[7.041476,-3.469040,7.481283,-3.841325,-2.470325,-9.998041,-4.355968,-9.753682,9.832113,-4.809444,1.586486,-3.544838,1.095716],[5.487400,-6.591546,8.679657,-4.911176,-5.634825,-5.657406,0.873209,-7.182337,0.123849,5.789586,-8.425072,5.139753,-7.997701]],[[0.604193,5.772114,5.354131,-0.658426,6.932049,7.150613,-1.305548,9.319694,-8.196543,4.055885,-7.387037,6.827730,-3.121761],[0.930461,6.454712,-3.813136,-0.129051,5.805649,-4.603906,2.063193,-9.802363,-0.623398,-0.556673,4.025284,-5.555999,6.751117],[9.722410,9.384348,0.948067,4.252525,-0.458141,2.279690,9.389229,-1.901756,5.189808,1.095389,-1.002451,-1.416942,-4.204113],[9.640281,-5.287688,3.787600,-2.727637,5.948539,8.235283,-9.126638,5.215795,8.962189,-4.836069,-1.096190,3.121853,9.640516],[4.245886,3.660376,2.967952,8.986982,8.840896,7.873712,0.198552,5.038563,-5.545888,-2.532572,-9.207969,-1.122975,-4.337044],[-7.277209,7.057258,2.516107,6.462029,-5.765507,-7.368873,-8.099285,-3.646433,6.513452,-0.552311,5.395666,-2.472561,-8.891243],[8.030583,1.795856,-5.182525,4.861777,-9.488117,-6.102330,9.173369,-9.142876,-3.308400,-0.747696,4.539718,-1.193518,-8.722797],[-3.329143,-2.154991,4.035022,2.117084,1.317576,-2.834005,7.972442,8.864612,-7.957702,-2.186866,-2.472165,1.572197,-2.550811],[-3.967086,3.341599,-9.221748,5.399302,-8.961840,-6.337420,-1.758538,2.973834,-5.481944,2.084186,7.074427,6.146466,-6.984702],[-4.887777,-7.242434,-8.234582,-4.844937,4.065131,6.379719,5.862039,-0.308618,-7.004775,9.324605,7.972905,-9.036354,2.010750],[1.183635,-9.721104,5.278561,8.767381,0.819684,-5.080848,0.669717,-5.587058,4.635532,5.925430,4.800539,-9.071443,7.563332],[-9.026134,-5.993445,1.966218,-6.738515,3.457294,9.934567,3.361592,0.485039,-8.293858,-0.849420,0.356403,-9.684726,1.099061],[-2.327450,-5.596856,5.495724,-3.972528,-9.202503,5.554380,4.055719,-5.848120,-6.466622,1.793581,-3.462843,-6.372349,-0.891922],[-7.199787,-6.046234,-5.650996,7.863717,1.404557,6.380303,-7.487724,4.119945,1.161101,-7.247440,6.140638,9.598442,-7.831492],[-0.347956,-0.887796,6.631285,6.417688,-0.897865,-8.182310,-7.093075,1.483454,0.392365,-6.635070,2.603550,5.566437,8.872221],[-4.045267,9.289186,-8.920492,-8.174365,-2.210874,8.917160,1.269618,5.672751,3.057350,7.468020,-3.952173,-7.663158,-5.596026]],[[-1.566962,-0.860987,-9.763757,-4.086971,7.912694,-6.471683,-1.452578,1.119790,-2.713631,5.565596,4.652357,-4.529946,3.677089],[9.123376,9.776412,-8.040044,-8.351508,0.723588,7.545639,-2.953909,8.121432,-4.397385,-4.618342,3.837792,4.002326,-4.139260],[-8.877016,9.709220,3.927116,7.363468,-5.770388,-6.734602,-0.712855,-2.859714,-1.498482,9.986051,5.323046,2.872140,3.917080],[-1.503674,8.484863,7.722625,2.587163,-5.782711,-2.744572,6.170592,9.423760,8.815934,-3.320579,1.655910,-8.593093,-1.343776],[9.341317,2.346457,-1.393178,3.695102,5.702628,4.262601,2.887537,9.335459,-9.640077,3.169919,9.697810,2.766985,-2.014295],[-8.463983,5.108557,-8.219231,-9.572244,-9.828609,0.121105,-1.190823,-3.561645,-4.762244,6.085230,9.408894,-3.453055,5.678308],[8.799387,0.900115,-9.163799,7.370227,-5.497197,-5.581362,5.490391,-2.285705,-8.617212,7.009580,-6.342260,-6.541324,-6.439103],[3.003701,-1.132205,-5.867399,-9.520519,1.553934,5.818561,-4.615449,-5.554439,-4.504875,4.070462,9.351486,8.239693,6.419891],[-9.725928,-5.252197,4.684482,7.943681,-0.162019,-6.455640,-5.333990,8.586627,-2.599746,6.693401,-3.497952,-5.794615,-4.667021],[8.787659,0.444569,-5.853157,4.127441,-9.765524,-0.834003,-0.712573,6.053138,3.160460,3.726456,4.019636,5.305410,-2.051074],[-4.564005,2.269865,-8.678949,-4.050063,3.833063,2.043707,9.501729,-8.892775,-0.082394,1.377643,2.325666,1.325384,7.892923],[-9.584248,2.605594,0.182068,3.643592,6.829602,6.522597,2.474974,-5.992003,6.531442,-2.689305,2.534379,2.921137,-7.380299],[-2.987189,4.168386,-3.823390,-7.852348,-6.541529,9.107871,-8.744860,-8.802100,9.444410,8.662234,-1.390254,9.024510,-2.226839],[9.658427,3.521090,-1.389934,0.738165,-6.550244,1.128398,-7.274923,-3.748607,0.219354,-6.110308,-0.796349,-6.920384,0.486930],[6.241787,3.244975,2.660382,8.648637,3.829529,-2.013033,8.563512,-1.934089,9.275557,-3.917319,9.251199,2.307499,6.991615],[8.535141,4.425319,5.555801,4.956392,-9.520884,6.118957,-1.684452,0.824986,-3.370584,9.203431,9.881714,8.331895,-8.454301]],[[9.646294,-7.791137,7.189728,-4.047237,-1.571626,5.327247,6.058333,-8.531158,0.214288,2.375148,-3.816764,1.150291,-7.960976],[-6.099007,9.601813,-0.281034,-1.510338,9.838863,-9.369237,-8.134348,7.670673,5.967431,4.758090,-7.910035,-8.779976,8.551206],[6.344536,-6.415130,5.206737,4.505071,8.632993,-7.418726,-6.539649,9.706891,3.066462,8.684223,-7.673210,7.191651,-5.499936],[-6.315103,3.796164,7.723496,7.892475,1.948758,1.321531,0.188862,-6.171403,-3.021142,3.865867,-0.903161,-0.182669,-4.060027],[-0.194064,-0.057887,2.622571,8.532989,7.261355,2.652715,-6.415416,2.256981,1.698456,-3.315249,-3.059665,-3.705800,-6.483668],[7.947034,-5.356415,7.383355,7.749868,7.457144,3.165822,-4.483587,-4.946091,0.750374,-3.233963,-0.124796,8.302202,7.894827],[5.453247,5.582001,-8.060248,-2.914082,-7.143484,9.007223,-8.748123,-8.797356,3.685439,-5.433912,-0.448204,-3.215211,-0.870055],[-4.573108,9.046893,-8.674702,4.637722,3.356356,-3.139239,-4.058765,0.200531,-4.037806,4.119332,7.089830,6.034749,-0.543288],[2.340746,-8.520163,6.585748,8.711716,0.185928,2.830718,-3.680923,-5.670415,4.212686,6.556353,7.320645,-7.752740,1.567861],[6.505868,4.280833,-7.635048,7.489695,-0.113511,-4.203715,8.116147,8.795333,-2.946534,4.799202,-8.646677,-7.466856,-1.845056],[-3.238774,-2.276334,-4.962212,-8.152650,1.810176,0.102127,-9.472031,1.536482,8.928883,-4.726682,6.252825,-5.794346,8.528642],[6.058473,8.720566,7.285426,-7.739078,0.085938,-6.249450,-3.821073,-5.272602,-6.154095,-7.761362,9.326716,-4.170053,-3.274698],[4.822098,2.138533,-7.753654,-8.184768,-7.788449,5.477222,8.601857,1.679171,-6.743135,2.634133,2.430774,2.591428,8.926244],[-7.645030,-4.826551,2.072332,2.795601,3.419723,-3.110372,7.080686,7.316401,8.398980,7.118407,-2.146543,0.154472,3.005194],[6.622242,-3.393076,0.645346,1.433995,5.665770,9.840006,4.138798,-4.057994,-5.336664,-7.089014,-0.984522,-1.722242,-4.632636],[-5.648533,-2.161008,2.908659,-0.800087,-7.811370,-8.420145,-3.857769,1.329594,-8.699920,-1.276129,-3.450153,3.670836,-4.593728]],[[-6.939012,1.251940,-1.775529,-0.426839,2.154102,-9.929639,7.573158,-9.624719,-8.495804,-7.120677,-2.244628,-7.883370,6.103222],[-9.553375,0.784812,8.793633,0.348832,4.990652,-6.353452,1.331181,8.968572,1.859477,-9.745831,-3.451057,-4.215553,-2.088232],[7.825185,0.196588,8.364132,0.901779,5.646885,1.735495,-5.713283,-7.843836,-7.161427,-1.700304,0.092326,7.609228,6.821568],[2.531276,-5.855943,7.987045,-5.543871,-8.701726,-1.164188,8.781914,-0.328508,-3.625170,5.392806,2.411809,-0.903555,3.310206],[-3.711753,-1.258924,-9.856021,6.331993,1.994262,-5.221321,-5.470493,-6.120130,6.835054,-5.180624,-7.533117,-2.010079,4.679127],[6.770219,5.339158,3.112749,6.113847,-8.942700,3.443519,-1.063393,-8.486456,7.808708,-8.565274,5.643547,2.030689,2.424069],[-1.624436,0.280795,-3.024250,-8.095015,1.134300,4.287303,4.973167,-3.984030,8.650497,3.557384,6.629950,-5.387587,-4.419245],[5.852640,1.605473,7.689843,-5.891758,9.096009,-4.602800,6.783704,-1.851379,-9.679960,-3.454638,-6.446114,-4.194349,9.217552],[-3.545072,0.253637,0.222436,-6.945680,1.307665,-9.267387,-7.770181,-1.148474,6.978470,-6.927224,-5.053319,1.759367,0.104625],[6.498798,-6.410761,-4.907374,-1.446466,6.438874,-7.025013,8.953265,-1.238843,-0.003446,0.928694,8.993626,-9.996743,-1.737222],[-1.831198,7.215967,-5.337189,6.629756,0.974584,4.594639,0.676709,1.263589,7.518603,-8.744169,-9.709547,-4.975222,4.580207],[6.542570,-3.122567,9.747499,3.292251,-8.036442,3.687543,-5.484311,7.721422,-2.351013,2.991061,1.707607,-8.649859,-7.841054],[-2.720979,7.777474,-0.311299,3.673519,-8.070659,7.602840,0.188102,9.542558,-5.066816,7.536559,-2.044542,-4.283440,5.631358],[-7.885347,8.130024,-9.487742,5.053653,-0.023764,-3.800159,-7.131678,-2.334419,1.549826,-4.312850,-7.319262,-8.750217,-2.434670],[4.312928,-3.088860,-9.222142,7.029820,4.352023,1.275851,7.615165,-3.439423,6.995043,-1.351393,0.273096,8.692431,4.276028],[-9.874308,0.195298,-1.547712,4.064273,9.104054,4.514434,-0.718896,2.684274,1.337227,2.832031,-8.436589,5.950959,-0.759643]],[[-9.452059,-1.572784,6.302638,-7.461342,4.404373,9.734191,1.352231,3.842263,1.525752,-8.796295,8.036302,6.638201,5.491921],[-7.635929,2.666561,6.072182,-4.974486,4.320535,-2.080377,7.905552,-7.901175,7.942397,5.871549,-6.921138,-1.901177,2.249751],[-9.569380,-0.557243,9.369664,-6.461057,4.083441,-6.786097,9.443960,9.446010,3.682913,-6.515061,5.596071,-3.468425,-7.509969],[-1.203536,5.125594,-1.310225,-0.786346,5.758927,7.416403,-4.940491,-8.086497,0.034284,-4.855537,7.476134,4.167726,4.946564],[5.056573,7.338990,-4.943442,-0.152346,-2.241531,-9.788780,9.320972,-9.114569,8.950876,4.292918,6.473513,-7.675859,6.325160],[-4.576701,1.046258,-2.033252,8.465074,-3.470951,8.381234,7.899778,9.349414,-0.186763,3.173496,-1.596869,-2.373319,-4.113418],[-1.449103,2.258927,0.158436,-6.122056,-3.241835,5.671097,-9.302472,2.947638,6.471782,7.778144,-9.407672,8.499918,-6.008611],[9.645711,-2.987249,1.754685,-5.016523,-1.055552,-3.821422,-5.718377,1.212836,-1.981301,9.310178,7.979933,-3.620753,6.319984],[0.586576,-9.926269,-9.647242,-8.412661,-6.354853,5.049818,-4.902971,-0.607563,-0.925897,3.061300,-7.790757,-3.041376,-1.144652],[-6.239179,-7.250284,9.195221,4.343210,-7.034705,1.655733,-3.291733,-8.475996,-3.271342,3.460232,0.747492,8.677540,-4.988867],[-5.477410,4.051535,-3.022483,7.837777,-6.576371,-8.095548,-7.555096,0.572207,2.789592,5.369321,-9.226724,7.011267,-9.099252],[4.071445,7.279698,-9.786432,-2.984256,-4.406176,3.162620,-3.826528,9.968336,6.102831,8.435199,9.326436,-2.954598,-8.489626],[7.318555,6.513181,-0.848215,0.110266,-0.676037,2.665454,-8.241004,1.354944,1.111433,2.477660,0.212803,-3.909653,2.955755],[2.221198,5.878119,-7.194793,8.822693,-9.049264,6.909762,-5.178021,7.602096,-8.735744,5.519539,-1.281575,5.980171,2.959911],[-7.379151,3.150647,-7.165355,-9.184272,-0.664053,-4.025386,-4.377006,2.225236,-0.364037,5.262713,1.430060,8.406159,2.086465],[0.289138,2.183043,1.699023,9.047947,-6.164143,-1.960633,8.238644,4.309037,-2.104715,-6.999320,9.608098,8.961348,4.049797]],[[5.106116,-6.197923,-4.892466,7.659712,-7.865015,6.195494,-4.438304,5.431503,-1.944170,0.522699,-2.451014,8.836914,-8.147640],[-1.481489,7.325555,-0.638814,-1.394606,-3.851823,2.147452,3.775946,-7.998316,9.376484,-2.361429,7.373659,3.361998,-3.907563],[7.627223,-5.577664,6.085997,2.153339,-8.509957,9.820584,-9.410580,7.818593,2.834879,-3.766379,-8.102693,-1.180046,-0.256701],[9.940490,7.424295,-9.269831,-9.624454,-1.813212,4.916371,-1.710450,1.601356,-7.556237,2.558895,5.950696,-1.657578,0.899144],[6.914509,3.118582,4.903464,7.095949,3.767752,0.879037,5.924771,8.251867,-2.165245,-2.299460,7.537213,2.786726,0.110875],[2.553655,-3.972523,-4.128141,1.872005,-5.182359,-3.936893,0.287100,5.233165,9.876912,-0.487626,4.998492,7.390661,-0.989063],[-4.320654,7.196656,2.790061,-3.396844,9.507598,3.811678,-2.104572,-0.099906,-6.424491,-4.041031,-8.653447,-0.322142,-4.085133],[8.195895,5.364269,-7.189957,-0.362247,5.661026,9.346559,3.598522,-4.475492,9.404537,-5.859084,-0.516823,5.519245,-1.146557],[-3.483841,-2.885789,-8.482024,-7.776532,3.065775,-3.941227,7.363315,9.274590,5.797524,6.282758,-1.001747,-1.165749,-2.193415],[0.348979,-1.089801,-5.931312,-3.496516,3.318832,-7.680182,-4.437504,0.394451,0.741616,7.035576,6.423121,-0.570189,-7.369730],[0.389104,6.926740,1.765326,0.004451,1.520990,0.431740,-2.264331,-4.602632,-4.381500,-8.831923,7.320710,-3.812718,2.831396],[8.180010,6.557803,-2.566483,5.584885,-4.442545,-3.439312,-6.561335,1.383960,8.079124,-5.662638,3.314972,-1.839666,-6.739413],[3.417549,-9.221029,-8.033855,-8.716778,-9.066849,-3.477477,6.461830,-3.067009,-4.534871,8.665939,-4.462114,1.856035,-6.226826],[-6.349014,5.227455,2.064746,3.256242,6.834497,6.972630,7.868469,-8.222907,8.415751,7.275099,3.382305,-5.532146,4.705481],[5.564291,-8.544907,8.552922,-8.399445,9.011787,-5.925192,-7.499697,7.383871,8.801087,0.056478,-6.456782,6.801039,-6.740058],[-3.759274,9.260954,-6.876279,-5.510425,1.483129,0.278905,-0.506751,0.458085,2.938059,-9.297775,7.584117,-0.377076,6.066265]],[[-2.277485,-0.358757,3.492622,3.669555,-9.717804,4.597210,-2.079349,3.032951,5.475757,0.085295,-4.588065,-1.569074,7.880055],[-8.659394,-0.569643,-9.275891,0.245979,8.783987,2.326696,0.487184,-9.741931,8.247174,6.877472,-1.691786,-6.921986,4.337074],[4.193094,-9.762642,-7.701135,-7.253978,-7.278710,3.152198,0.813287,8.482845,6.737710,-3.099844,2.731380,0.548368,-8.992356],[4.604113,4.353444,5.471881,-6.394872,5.034371,6.702700,4.388062,-7.681490,6.284578,-1.230936,0.368576,2.532251,3.179255],[8.213212,-0.015355,6.708023,-8.515307,-4.578915,3.983697,8.568829,9.942939,-7.112045,8.495099,8.109719,-8.264908,6.113636],[-9.134518,8.072384,4.763320,-0.970529,3.450047,-0.522342,-7.924651,2.713418,3.620061,-4.082434,3.109464,-8.424295,1.196364],[8.116286,7.453607,2.392714,-9.379047,0.591264,7.895665,5.918158,2.070392,3.472402,-4.288755,6.083512,6.613404,2.003371],[-8.265377,8.949930,5.073066,5.129348,6.959180,-2.423005,-4.957182,-6.291477,0.209010,-0.988343,9.967444,-0.123309,-3.935430],[4.335685,0.856331,7.698555,-7.634421,-4.318599,3.251863,-3.303937,-6.016492,-7.304009,6.648960,8.678691,-1.908471,2.573055],[0.321835,-9.749736,-8.039747,2.909563,-6.483887,7.895587,-1.772411,-0.754349,-8.262679,-9.220497,-3.586521,1.949654,0.989376],[-6.228089,-2.258639,8.382761,-5.569401,1.290536,-2.606865,-6.353210,7.458937,2.240976,8.240277,-9.468373,1.338912,5.864880],[9.081778,7.906426,7.028987,7.657224,0.760041,3.004400,-6.751736,-3.617693,5.274643,4.371939,3.317988,-1.632324,-5.844853],[-2.364493,-4.919839,2.921222,-8.671993,-1.827282,9.204550,6.405618,7.445630,-9.508158,3.769119,-0.269167,9.149243,-2.725412],[-2.420665,-8.238051,7.750219,-6.573567,-2.440907,8.841117,-3.718208,-0.031218,2.973255,6.058505,-8.829147,-6.984834,-6.688812],[-6.598900,-7.908397,-9.776286,-4.275943,-8.376219,1.258986,0.649805,-9.450591,-9.973677,-5.428702,-5.097283,-0.884372,-9.790322],[8.789395,0.531622,1.335616,-9.833506,-4.067592,6.854960,0.889885,-2.738661,-3.515336,-6.041770,-7.345222,-0.910467,8.211772]]], dtype = "float64")#candidate|5427|(14, 16, 13)|const|float64
bop_5428 = relay.floor_divide(var_5426.astype('float64'), relay.reshape(const_5427.astype('float64'), relay.shape_of(var_5426))) # shape=(14, 16, 13)
bop_5438 = relay.power(const_5427.astype('float64'), relay.reshape(bop_5428.astype('float64'), relay.shape_of(const_5427))) # shape=(14, 16, 13)
uop_5442 = relay.rsqrt(var_5426.astype('float32')) # shape=(14, 16, 13)
uop_5446 = relay.log10(uop_5442.astype('float64')) # shape=(14, 16, 13)
var_5450 = relay.var("var_5450", dtype = "float64", shape = (14, 16, 13))#candidate|5450|(14, 16, 13)|var|float64
bop_5451 = relay.greater_equal(uop_5446.astype('bool'), relay.reshape(var_5450.astype('bool'), relay.shape_of(uop_5446))) # shape=(14, 16, 13)
func_2702_call = mod.get_global_var('func_2702')
func_2709_call = mutated_mod.get_global_var('func_2709')
const_5466 = relay.const([9,-3,5,-2,-5,8,3,-6,8,8,-4,-1,-10,1,-5,-8,10,-7,1,9,-2,-7,-8,-5,4,-4,8,-7,8,10,-4,2,-10,-8,8,5,4,-3,7,-9,-3,9,10,-10,6,6,6,6,4,-7,3,10,-5,2,-1,5,7,5,-2,8,5,-9,-9,-9,1,3,7,3,-6,-4,-7,-3,2,2,3,3,-3,10,-9,4,4,-4,-3,-1,-2,-8,-3,-3,-10,-1,4,-2,-6,8,-1,5,-10,-6,-6,3,-3,8,1,3,8,-4,-9,9,9,3,10,7,7,-2,-8,4,6,-9,5,10,-7,-6,-1,4,-2,1,-6,-3,-2,9,-10,3,-5,4,-4,1,-9,10,4,1,2,10,-2,3,8,4,-3,5,-9,5,-3,7,-7,-3,2,9,-8,1,3,-4,4,-10,-6,4,-4,-1,9,-9,6,7,6,9,8,5,-4,2,-8,-6,7,-2,-10,8,-10,6,-10,1,3,-1,-3,-10,-5,6,5,10,1,3,-4,1,-9,-9,1,5,3,5,-2,3,-7,3,-1,4,-4,3,7,3,2,6,-5,9,9,-3,9,10,-7,10,5,-1,-2,-8,-10,-6,4,-6,-3,8,9,2,-9,7,-5,-5,-2,1,1,-2,2,-1,-8,-9,4,-2,9,4,-6,4,-10,2,-3,4,4,-5,4,7,5,-4,1,5,-9,8,1,-7,-10,1,-1,9,2,2,-2,-7,-4,9,6,5,-4,-3,4,-6,-8,-2,-5,-2,5,-3,4,-5,3,-4,-7,-8,-2,7,-10,2,1,5,-7,5,5,-10,-9,9,-6,-3,-2,3,2,1,3,8,-9,2,-3,9,-4,-9,1,-7,1,-1,2,8,-2,-4,4,10,8,-1,-10,1,9,-9,9,9,-7,-4,4,1,-3,-2,-10,2,4,-10,-4,-8,-2,5,-4,-1,5,-10,-1,5,-7,-3,-9,6,10,10,7,-9,7,-10,8,-2,1,2,-2,-6,-3,-7,-3,6,6,-7,3,4,10,3,-7,1,-6,10,9,6,-2,-4,5,-8,5,-6,3,-10,-5,-1,7,-10,6,-10,5,-8,-10,-2,4,6,7,-10,3,3,5,2,-9,-5,-4,1,3,-6,4,6,10,-7,-5,7,-9,5,6,7,10,10,1,3,3,-6,7,-2,5,6,-6,-7,-5,2,10,7,-5,5,-8,-9,6,-7,9,-2,9,-4,2,4,6,7,7,-7,10,-6,8,1,-1,1,-10,-4,-2,5,-2,1], dtype = "uint32")#candidate|5466|(480,)|const|uint32
const_5467 = relay.const([1,-1,3,-10,-3,6,6,-9,-4,10,3,-10,8,-8,3,-10,-9,9,-2,-6,-5,-3,10,-8,5,8,3,-8,-6,-7,-4,-5,-7,-5,-5,-6,-7,3,-2,-2,6,-7,-8,1,9], dtype = "uint8")#candidate|5467|(45,)|const|uint8
var_5468 = relay.var("var_5468", dtype = "uint8", shape = (180,))#candidate|5468|(180,)|var|uint8
const_5469 = relay.const([-4,-2,2,1,-2,-8,1,1,3,-5,-8,-7,9,-8,-3,-7,-7,-3,5,-5,-4,7,8,-5,7,8,-8,-8,8,-8,-8,-2,-8,-4,-9,-1,1,-10,-3,4,4,-5,4,9,-3,5,-6,6,1,6,-8,-5,-4,-10,10,8,3,-8,1,8,-4,5,9,-3,-3,4,-5,-2,6,7,3,1,1,2,-7,-5,-3,-3,2,-5,-5,6,-10,1,10,1,3,9,3,5,-10,-3,1,-5,1,9,1,-6,-6,6,-4,7,-10,3,-8,3,1,10,1,-8,-7,6,4,8,10,-4,-2,-4,-7,-8,-9,2,-9,3,-10,-2,-8,5,-2,-10,9,-7,-4,5,-9,-8,-6,-8,5,-6,-2,1,9,-2,9,3,7,-8,2,6,-6,10,7,8,-1,8,-5,5,-5,4,10,-1,-9,10,2,-3,-10,-2,-2,2,7,7,9,7,-1,-9,10,10,8,-9,5,9,-4,4,-1,7,6,-1,10,-10,-9,-1,-8,-6,-10,7,8,1,-6,6,-1,7,-1,-2,-6,-1,1,4,3,-6,-7,-8,-8,7,-4,-9,-9,2,-5,-10,-9,6,3,9,-1,10,-9,-5,7,-9,4,-8,6,-3,-4,-4,6,-3,1,6,9,10,-4,5,6,6,1,4,-2,10,2,9,3,6,5,6,7,4,-2,5,-10,-9,-3,-10,-10,2,-6,1,-2,5,-10,-3,-8,10,-3,-9,6,-6,1,-7,-10,-6,-10,6,-5,-9,-4,1,9,-6,-6,7,-3,4,-3,-6,10,9,-8,-1,-8,7,3,5,-1,6,6,-1,8,-2,6,4,-9,-5,-10,7,5,1,3,-1,9,-2,-3,-5,-8,-2,6,-2,8,9,2,-7,1,8,-8,-6,8,-3,1,-2,4,5,7,-4,-5,-5,8,-7,-2,2,-5,6,-4,-6,6,4,-9,9,-8,-5,5,-3,3,-3,-4,6,1,7,-10,2,1,5,9,-10,-8,-10,-4,-5,3,-4,3,10,-2,1,8,-10,-3,10,1,-7,-4,2,-1,7,-5,1,-10,3,-6,4,10,-6,10,-3,8,2,8,-10,-10,-3,7,-4,4,9,-2,7,-6,4,-1,-9,-8,8,2,7,6,-1,-3,-2,-2,9,3,-5,1,6,-8,-8,3,-4,-6,1,10,-9,-6,-10,-1,2,6,-4,9,-6,3,5,10,5,10,-9,7,-3,-8,-1,3,2,3,6,-6,-10,8,6,-5,-5,-6,-7,-4,-6,-5,-3,2,-10,3,-8,-10,-7,4,-6,8,-7,-10,9,-7,8,4,4,9,1,-10,1,7,-8,-3,1,-10,8,-5,3,2,5,5,1,3,-5,1,5,-4,-1,9,-10,10,-6,3,-8,3,10,-3,9,3,1,8,3,8,10,-6,6,-8,-3,-4,-7,-6,-2,-8,-7,4,8,-5,-5,5,-2,-8,10,-3,-7,4,3,-1,-9,5,-1,-5,3,1,4,-5,-8,-7,9,1,-6,-7,7,3,8,-3,8,-9,-9,-3,6,-9,1,3,5,-5,1,9,10,5,9,7,5,10,-6,-6,1,1,1,-3,9,7,-9,-9,10,9,1,9,-3,9,2,-4,-1,8,-8,-10,8,-9,6,8,-2,-5,2,-9,3,-4,3,1,-2,8,9,-9,5,-3,-5,-7,7,-10,-4,-4,4,5,6,3,-2,-10,-1,7,6,-9,3,10,5,-9,-6,9,10,9,-7,-6,7,1,6,6,-8,-6,8,-2,-3,-6,-3,1,7,3,-4,3,6,1,-2,5,9,-2,5,-2,5,9,10,-5,-10,1,7,7,-9,-5,-5,-2,2,-3,-10,-7,-2,-4,6,1,8,-2,-9,-6,7,-1,4,7,1,-2,7,-7,6,3,-3,-8,10,3,10,10,-5,-2,-8,2,10,-2,3,-6,-3,9,-5,6,-8,7,-2,-5,-9,5,-5,7,-1,10,10,-3,5,10,10,5,9,-5,-8,8,-7,-5,10,-8,2,-6,-6,-5,2,10,5,1,-9,5,-7,5,7,-8,1,-9,6,5,-6,-4,10,-10,1,-9,8,-10,-8,-10,-4,-6,-6,9,-2,-5,-7,-7,-5,9,10,8,1,-4,-2,6,7,-10,6,-7,4,-9,3,5,4,-3,2,-6,-9,4,7,5,3,-6,-7,-9,7,1,3,7,1,-6,1,-10,2,-2,-5,2,-6], dtype = "int8")#candidate|5469|(832,)|const|int8
call_5465 = relay.TupleGetItem(func_2702_call(relay.reshape(const_5466.astype('uint32'), [3, 16, 10]), relay.reshape(const_5466.astype('uint32'), [3, 16, 10]), relay.reshape(const_5467.astype('uint8'), [45,]), relay.reshape(var_5468.astype('uint8'), [180, 1]), relay.reshape(const_5466.astype('uint32'), [3, 16, 10]), relay.reshape(const_5469.astype('int8'), [208, 4]), ), 3)
call_5470 = relay.TupleGetItem(func_2709_call(relay.reshape(const_5466.astype('uint32'), [3, 16, 10]), relay.reshape(const_5466.astype('uint32'), [3, 16, 10]), relay.reshape(const_5467.astype('uint8'), [45,]), relay.reshape(var_5468.astype('uint8'), [180, 1]), relay.reshape(const_5466.astype('uint32'), [3, 16, 10]), relay.reshape(const_5469.astype('int8'), [208, 4]), ), 3)
output = relay.Tuple([bop_5438,bop_5451,call_5465,const_5466,const_5467,var_5468,const_5469,])
output2 = relay.Tuple([bop_5438,bop_5451,call_5470,const_5466,const_5467,var_5468,const_5469,])
func_5471 = relay.Function([var_5426,var_5450,var_5468,], output)
mod['func_5471'] = func_5471
mod = relay.transform.InferType()(mod)
var_5472 = relay.var("var_5472", dtype = "float64", shape = (14, 16, 13))#candidate|5472|(14, 16, 13)|var|float64
var_5473 = relay.var("var_5473", dtype = "float64", shape = (14, 16, 13))#candidate|5473|(14, 16, 13)|var|float64
var_5474 = relay.var("var_5474", dtype = "uint8", shape = (180,))#candidate|5474|(180,)|var|uint8
output = func_5471(var_5472,var_5473,var_5474,)
func_5475 = relay.Function([var_5472,var_5473,var_5474,], output)
mutated_mod['func_5475'] = func_5475
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5535 = relay.const(-2, dtype = "uint64")#candidate|5535|()|const|uint64
const_5536 = relay.const([[[7,-7,-10,-2,-1,6,2,7,10,-3,-9,-1,-8,-7],[-9,7,2,-10,4,-5,-3,-8,-4,-8,-8,9,7,-10],[-2,-6,-7,6,-8,2,-10,-6,10,7,-8,-2,7,-4],[1,9,-10,-4,-1,-6,9,-8,7,-2,-7,10,-6,-2]]], dtype = "uint64")#candidate|5536|(1, 4, 14)|const|uint64
bop_5537 = relay.not_equal(const_5535.astype('bool'), const_5536.astype('bool')) # shape=(1, 4, 14)
output = bop_5537
output2 = bop_5537
func_5540 = relay.Function([], output)
mod['func_5540'] = func_5540
mod = relay.transform.InferType()(mod)
output = func_5540()
func_5541 = relay.Function([], output)
mutated_mod['func_5541'] = func_5541
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5545 = relay.var("var_5545", dtype = "float64", shape = (8, 11, 11))#candidate|5545|(8, 11, 11)|var|float64
uop_5546 = relay.exp(var_5545.astype('float64')) # shape=(8, 11, 11)
output = relay.Tuple([uop_5546,])
output2 = relay.Tuple([uop_5546,])
func_5549 = relay.Function([var_5545,], output)
mod['func_5549'] = func_5549
mod = relay.transform.InferType()(mod)
mutated_mod['func_5549'] = func_5549
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5550 = relay.var("var_5550", dtype = "float64", shape = (8, 11, 11))#candidate|5550|(8, 11, 11)|var|float64
func_5549_call = mutated_mod.get_global_var('func_5549')
call_5551 = func_5549_call(var_5550)
output = call_5551
func_5552 = relay.Function([var_5550], output)
mutated_mod['func_5552'] = func_5552
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5540_call = mod.get_global_var('func_5540')
func_5541_call = mutated_mod.get_global_var('func_5541')
call_5556 = func_5540_call()
call_5557 = func_5540_call()
var_5558 = relay.var("var_5558", dtype = "bool", shape = (10, 4, 14))#candidate|5558|(10, 4, 14)|var|bool
bop_5559 = relay.less_equal(call_5556.astype('bool'), var_5558.astype('bool')) # shape=(10, 4, 14)
bop_5562 = relay.less_equal(call_5557.astype('bool'), var_5558.astype('bool')) # shape=(10, 4, 14)
func_1471_call = mod.get_global_var('func_1471')
func_1474_call = mutated_mod.get_global_var('func_1474')
var_5564 = relay.var("var_5564", dtype = "int8", shape = (832,))#candidate|5564|(832,)|var|int8
var_5565 = relay.var("var_5565", dtype = "float64", shape = (26, 5))#candidate|5565|(26, 5)|var|float64
call_5563 = relay.TupleGetItem(func_1471_call(relay.reshape(var_5564.astype('int8'), [16, 4, 13]), relay.reshape(var_5565.astype('float64'), [130,]), ), 1)
call_5566 = relay.TupleGetItem(func_1474_call(relay.reshape(var_5564.astype('int8'), [16, 4, 13]), relay.reshape(var_5565.astype('float64'), [130,]), ), 1)
uop_5567 = relay.erf(call_5556.astype('float64')) # shape=(1, 4, 14)
uop_5569 = relay.erf(call_5557.astype('float64')) # shape=(1, 4, 14)
func_4258_call = mod.get_global_var('func_4258')
func_4260_call = mutated_mod.get_global_var('func_4260')
var_5576 = relay.var("var_5576", dtype = "float32", shape = (616,))#candidate|5576|(616,)|var|float32
call_5575 = relay.TupleGetItem(func_4258_call(relay.reshape(var_5576.astype('float32'), [616,])), 1)
call_5577 = relay.TupleGetItem(func_4260_call(relay.reshape(var_5576.astype('float32'), [616,])), 1)
output = relay.Tuple([bop_5559,call_5563,var_5564,var_5565,uop_5567,call_5575,var_5576,])
output2 = relay.Tuple([bop_5562,call_5566,var_5564,var_5565,uop_5569,call_5577,var_5576,])
func_5579 = relay.Function([var_5558,var_5564,var_5565,var_5576,], output)
mod['func_5579'] = func_5579
mod = relay.transform.InferType()(mod)
mutated_mod['func_5579'] = func_5579
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5579_call = mutated_mod.get_global_var('func_5579')
var_5581 = relay.var("var_5581", dtype = "bool", shape = (10, 4, 14))#candidate|5581|(10, 4, 14)|var|bool
var_5582 = relay.var("var_5582", dtype = "int8", shape = (832,))#candidate|5582|(832,)|var|int8
var_5583 = relay.var("var_5583", dtype = "float64", shape = (26, 5))#candidate|5583|(26, 5)|var|float64
var_5584 = relay.var("var_5584", dtype = "float32", shape = (616,))#candidate|5584|(616,)|var|float32
call_5580 = func_5579_call(var_5581,var_5582,var_5583,var_5584,)
output = call_5580
func_5585 = relay.Function([var_5581,var_5582,var_5583,var_5584,], output)
mutated_mod['func_5585'] = func_5585
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5540_call = mod.get_global_var('func_5540')
func_5541_call = mutated_mod.get_global_var('func_5541')
call_5610 = func_5540_call()
call_5611 = func_5540_call()
func_1900_call = mod.get_global_var('func_1900')
func_1902_call = mutated_mod.get_global_var('func_1902')
var_5615 = relay.var("var_5615", dtype = "float64", shape = (20, 4))#candidate|5615|(20, 4)|var|float64
call_5614 = relay.TupleGetItem(func_1900_call(relay.reshape(var_5615.astype('float64'), [80,])), 1)
call_5616 = relay.TupleGetItem(func_1902_call(relay.reshape(var_5615.astype('float64'), [80,])), 1)
uop_5619 = relay.acosh(var_5615.astype('float64')) # shape=(20, 4)
output = relay.Tuple([call_5610,call_5614,uop_5619,])
output2 = relay.Tuple([call_5611,call_5616,uop_5619,])
func_5621 = relay.Function([var_5615,], output)
mod['func_5621'] = func_5621
mod = relay.transform.InferType()(mod)
var_5622 = relay.var("var_5622", dtype = "float64", shape = (20, 4))#candidate|5622|(20, 4)|var|float64
output = func_5621(var_5622)
func_5623 = relay.Function([var_5622], output)
mutated_mod['func_5623'] = func_5623
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5540_call = mod.get_global_var('func_5540')
func_5541_call = mutated_mod.get_global_var('func_5541')
call_5683 = func_5540_call()
call_5684 = func_5540_call()
func_2803_call = mod.get_global_var('func_2803')
func_2806_call = mutated_mod.get_global_var('func_2806')
var_5687 = relay.var("var_5687", dtype = "bool", shape = (336,))#candidate|5687|(336,)|var|bool
call_5686 = relay.TupleGetItem(func_2803_call(relay.reshape(var_5687.astype('bool'), [4, 6, 14])), 1)
call_5688 = relay.TupleGetItem(func_2806_call(relay.reshape(var_5687.astype('bool'), [4, 6, 14])), 1)
output = relay.Tuple([call_5683,call_5686,var_5687,])
output2 = relay.Tuple([call_5684,call_5688,var_5687,])
func_5702 = relay.Function([var_5687,], output)
mod['func_5702'] = func_5702
mod = relay.transform.InferType()(mod)
mutated_mod['func_5702'] = func_5702
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5703 = relay.var("var_5703", dtype = "bool", shape = (336,))#candidate|5703|(336,)|var|bool
func_5702_call = mutated_mod.get_global_var('func_5702')
call_5704 = func_5702_call(var_5703)
output = call_5704
func_5705 = relay.Function([var_5703], output)
mutated_mod['func_5705'] = func_5705
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5540_call = mod.get_global_var('func_5540')
func_5541_call = mutated_mod.get_global_var('func_5541')
call_5715 = func_5540_call()
call_5716 = func_5540_call()
const_5718 = relay.const([[[True,True,False,False,True,False,False,True,False,True,True,False,False,False],[True,False,True,True,True,True,True,True,True,True,True,True,False,False],[False,True,True,True,False,True,True,False,True,True,True,False,False,False],[False,False,False,True,False,True,False,False,True,True,True,False,False,False]],[[True,False,False,True,False,True,False,False,False,False,False,False,True,True],[False,False,True,False,False,False,True,True,True,True,True,False,False,False],[False,True,False,False,True,False,True,True,False,False,False,False,False,False],[False,True,False,False,True,True,False,False,True,True,True,True,False,False]],[[True,True,False,False,False,False,False,True,False,True,True,False,True,True],[True,True,True,True,True,True,False,False,True,False,False,False,False,True],[True,False,True,True,True,True,True,True,True,True,True,False,False,False],[False,False,True,True,True,False,True,False,False,True,True,True,True,True]],[[True,True,True,True,False,False,False,True,False,True,True,True,False,False],[True,False,False,False,False,True,True,False,True,False,False,True,True,True],[False,True,True,False,False,False,True,False,False,True,False,False,False,True],[False,False,True,True,False,True,True,True,False,True,True,True,True,True]],[[True,True,True,True,False,False,True,False,False,False,True,False,True,True],[True,True,False,True,True,True,False,False,False,False,True,False,True,False],[True,False,True,False,True,False,False,True,False,True,False,False,False,True],[True,True,False,False,True,False,True,False,True,True,False,True,True,True]],[[True,False,True,False,True,True,True,False,True,True,False,False,False,False],[False,False,True,True,False,True,True,True,True,False,True,False,False,False],[True,True,True,False,False,True,False,True,False,True,True,True,False,True],[True,True,True,False,True,False,True,True,True,True,False,False,True,False]],[[False,True,False,True,True,True,True,True,False,False,False,False,True,True],[False,False,True,True,True,False,True,False,True,True,False,False,False,False],[True,True,False,True,True,False,True,False,False,False,True,False,False,True],[True,False,False,True,False,True,False,True,False,False,True,True,True,True]],[[True,True,False,False,False,False,False,True,True,True,True,True,True,False],[True,False,True,False,False,False,True,False,True,False,True,True,False,False],[False,True,False,False,False,False,False,False,False,False,False,True,True,True],[False,True,False,False,True,True,False,True,True,False,True,True,False,False]],[[False,False,False,True,True,False,True,True,False,True,True,True,False,True],[False,True,True,True,False,True,True,True,False,True,False,False,True,True],[True,True,True,True,True,False,False,False,False,True,True,True,True,True],[False,True,False,False,False,True,True,True,False,False,False,True,False,True]],[[True,True,False,False,True,False,True,False,False,False,True,False,True,False],[True,False,True,True,True,False,False,False,True,True,True,False,False,True],[True,False,False,False,True,True,False,False,True,True,True,True,True,False],[True,True,False,True,True,False,False,True,False,False,True,True,False,False]],[[True,False,True,False,False,False,False,True,True,False,False,False,False,True],[True,True,True,False,False,True,True,False,True,False,True,True,False,False],[True,False,False,False,False,True,True,False,True,True,False,False,False,False],[False,False,True,True,True,False,False,False,True,True,False,True,True,True]],[[False,False,True,True,False,True,False,True,False,True,True,False,False,True],[False,False,True,True,False,False,False,False,False,False,False,False,False,False],[True,True,True,True,True,False,True,False,True,True,True,True,False,False],[True,False,False,False,True,True,True,True,False,True,True,False,False,True]],[[False,False,True,True,True,False,True,True,False,False,True,True,True,False],[True,True,False,False,True,False,False,False,False,True,False,False,True,True],[False,True,True,True,True,False,False,False,True,True,True,True,True,False],[True,False,False,False,True,True,False,True,True,True,True,True,False,True]],[[True,True,True,False,False,False,True,True,False,True,False,True,True,True],[True,False,False,False,True,False,False,False,True,False,True,True,True,True],[False,False,False,False,True,True,False,False,True,True,True,False,False,True],[True,True,True,False,False,True,False,True,True,False,True,True,True,True]],[[False,False,False,False,False,False,False,False,False,False,False,True,True,True],[True,False,True,True,True,False,True,True,True,False,False,False,False,False],[True,True,True,True,False,True,False,False,True,False,False,True,True,False],[True,False,False,False,False,True,True,False,True,True,True,False,True,False]],[[False,True,False,False,True,True,True,True,False,True,True,True,False,False],[True,True,False,False,True,False,False,False,True,False,False,False,True,True],[False,False,True,True,True,True,True,False,False,False,True,False,False,True],[False,False,True,True,True,True,True,False,False,True,False,True,True,False]]], dtype = "bool")#candidate|5718|(16, 4, 14)|const|bool
bop_5719 = relay.not_equal(call_5715.astype('bool'), const_5718.astype('bool')) # shape=(16, 4, 14)
bop_5722 = relay.not_equal(call_5716.astype('bool'), const_5718.astype('bool')) # shape=(16, 4, 14)
func_323_call = mod.get_global_var('func_323')
func_326_call = mutated_mod.get_global_var('func_326')
var_5732 = relay.var("var_5732", dtype = "float64", shape = (198,))#candidate|5732|(198,)|var|float64
call_5731 = relay.TupleGetItem(func_323_call(relay.reshape(var_5732.astype('float64'), [11, 2, 9])), 0)
call_5733 = relay.TupleGetItem(func_326_call(relay.reshape(var_5732.astype('float64'), [11, 2, 9])), 0)
output = relay.Tuple([bop_5719,call_5731,var_5732,])
output2 = relay.Tuple([bop_5722,call_5733,var_5732,])
func_5744 = relay.Function([var_5732,], output)
mod['func_5744'] = func_5744
mod = relay.transform.InferType()(mod)
var_5745 = relay.var("var_5745", dtype = "float64", shape = (198,))#candidate|5745|(198,)|var|float64
output = func_5744(var_5745)
func_5746 = relay.Function([var_5745], output)
mutated_mod['func_5746'] = func_5746
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5540_call = mod.get_global_var('func_5540')
func_5541_call = mutated_mod.get_global_var('func_5541')
call_5780 = func_5540_call()
call_5781 = func_5540_call()
var_5800 = relay.var("var_5800", dtype = "bool", shape = (15, 4, 14))#candidate|5800|(15, 4, 14)|var|bool
bop_5801 = relay.maximum(call_5780.astype('uint64'), var_5800.astype('uint64')) # shape=(15, 4, 14)
bop_5804 = relay.maximum(call_5781.astype('uint64'), var_5800.astype('uint64')) # shape=(15, 4, 14)
bop_5805 = relay.floor_divide(bop_5801.astype('float64'), relay.reshape(var_5800.astype('float64'), relay.shape_of(bop_5801))) # shape=(15, 4, 14)
bop_5808 = relay.floor_divide(bop_5804.astype('float64'), relay.reshape(var_5800.astype('float64'), relay.shape_of(bop_5804))) # shape=(15, 4, 14)
output = relay.Tuple([bop_5805,])
output2 = relay.Tuple([bop_5808,])
func_5809 = relay.Function([var_5800,], output)
mod['func_5809'] = func_5809
mod = relay.transform.InferType()(mod)
mutated_mod['func_5809'] = func_5809
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5810 = relay.var("var_5810", dtype = "bool", shape = (15, 4, 14))#candidate|5810|(15, 4, 14)|var|bool
func_5809_call = mutated_mod.get_global_var('func_5809')
call_5811 = func_5809_call(var_5810)
output = call_5811
func_5812 = relay.Function([var_5810], output)
mutated_mod['func_5812'] = func_5812
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5837 = relay.var("var_5837", dtype = "uint8", shape = (15, 3, 10))#candidate|5837|(15, 3, 10)|var|uint8
var_5838 = relay.var("var_5838", dtype = "uint8", shape = (15, 3, 10))#candidate|5838|(15, 3, 10)|var|uint8
bop_5839 = relay.logical_xor(var_5837.astype('uint8'), relay.reshape(var_5838.astype('uint8'), relay.shape_of(var_5837))) # shape=(15, 3, 10)
func_876_call = mod.get_global_var('func_876')
func_878_call = mutated_mod.get_global_var('func_878')
const_5848 = relay.const([-7,-10,3,5,-3,-7,-8,3,1,-6,-7,7,5,1,10,-3,4,3,-3,1,-3,8,5,3,-5,4,-3,-3,6,6,3,5,3,7,10,5,8,7,5,3,8,-5,10,-9,1,4,-5,1,1,-5,6,6,-5,1,-4,3,4,3,5,2,-7,2,-9,9,3,-3,-6,-6,6,3,4,2,-2,-3,6,7,-2,-5,-3,3,10,6,-8,9,10,2,7,-3,8,8,-9,-9,-3,4,-1,-2,4,9,10,4,1,5,1,-7,-2,-6,9,6,10,-9,-8,3,9,-5,-1,1,6,-2,-4,9,5,8,1,-7,5,-1,7,4,6,-6,-8,-3,-3,-5,-1,2,10,-9,6,-9,1,2,5,-5,7,2,-10,-4,-7,9,-3,-5,5,-1,1,9,-3,-2,-1,1,-10,-7,-7,3,-10,-1,5,6], dtype = "int32")#candidate|5848|(168,)|const|int32
call_5847 = relay.TupleGetItem(func_876_call(relay.reshape(const_5848.astype('int32'), [4, 6, 7])), 1)
call_5849 = relay.TupleGetItem(func_878_call(relay.reshape(const_5848.astype('int32'), [4, 6, 7])), 1)
output = relay.Tuple([bop_5839,call_5847,const_5848,])
output2 = relay.Tuple([bop_5839,call_5849,const_5848,])
func_5851 = relay.Function([var_5837,var_5838,], output)
mod['func_5851'] = func_5851
mod = relay.transform.InferType()(mod)
var_5852 = relay.var("var_5852", dtype = "uint8", shape = (15, 3, 10))#candidate|5852|(15, 3, 10)|var|uint8
var_5853 = relay.var("var_5853", dtype = "uint8", shape = (15, 3, 10))#candidate|5853|(15, 3, 10)|var|uint8
output = func_5851(var_5852,var_5853,)
func_5854 = relay.Function([var_5852,var_5853,], output)
mutated_mod['func_5854'] = func_5854
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5540_call = mod.get_global_var('func_5540')
func_5541_call = mutated_mod.get_global_var('func_5541')
call_5881 = func_5540_call()
call_5882 = func_5540_call()
const_5896 = relay.const([[[True,True,False,True,True,False,True,True,True,False,False,False,True,True],[False,True,True,False,True,True,False,True,True,False,False,True,True,True],[True,True,False,False,False,False,False,True,False,True,True,True,False,True],[True,True,False,True,True,True,False,False,True,False,True,False,False,False]],[[True,True,True,True,False,True,True,False,True,True,False,True,True,True],[False,True,False,True,False,False,True,True,False,True,True,True,True,True],[True,True,True,False,False,False,True,True,False,True,True,True,False,True],[True,True,False,True,False,False,True,True,True,False,False,True,True,False]],[[False,False,True,True,True,False,True,True,False,True,False,False,False,False],[False,False,True,True,False,False,False,False,False,True,True,True,True,False],[False,False,False,False,False,True,True,True,True,True,True,True,False,True],[False,False,True,False,False,True,True,False,True,True,True,True,True,False]],[[True,False,False,True,True,False,False,True,True,True,True,False,False,False],[False,False,True,False,False,True,False,True,False,True,True,True,False,False],[False,True,True,True,False,True,True,True,False,True,False,True,False,True],[False,True,True,False,True,True,False,False,False,False,True,False,True,False]],[[True,True,True,True,True,False,True,True,True,False,False,True,True,False],[True,True,False,True,False,True,True,False,False,True,False,False,True,True],[False,False,True,True,True,False,True,False,False,False,True,False,False,True],[True,True,False,False,False,False,True,True,True,False,True,False,True,True]],[[False,False,False,True,False,True,False,False,False,True,False,False,True,False],[False,True,True,False,False,True,False,True,True,False,False,True,False,True],[True,False,False,True,False,False,False,True,True,True,True,True,False,True],[False,False,True,False,True,True,False,False,False,True,True,False,True,True]]], dtype = "bool")#candidate|5896|(6, 4, 14)|const|bool
bop_5897 = relay.logical_or(call_5881.astype('bool'), const_5896.astype('bool')) # shape=(6, 4, 14)
bop_5900 = relay.logical_or(call_5882.astype('bool'), const_5896.astype('bool')) # shape=(6, 4, 14)
output = relay.Tuple([bop_5897,])
output2 = relay.Tuple([bop_5900,])
func_5906 = relay.Function([], output)
mod['func_5906'] = func_5906
mod = relay.transform.InferType()(mod)
output = func_5906()
func_5907 = relay.Function([], output)
mutated_mod['func_5907'] = func_5907
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5540_call = mod.get_global_var('func_5540')
func_5541_call = mutated_mod.get_global_var('func_5541')
call_5916 = func_5540_call()
call_5917 = func_5540_call()
uop_5919 = relay.sin(call_5916.astype('float32')) # shape=(1, 4, 14)
uop_5921 = relay.sin(call_5917.astype('float32')) # shape=(1, 4, 14)
func_363_call = mod.get_global_var('func_363')
func_365_call = mutated_mod.get_global_var('func_365')
const_5923 = relay.const([-4.221084,-8.120309,-4.640445,-0.978564,-0.974754,-8.632981,2.901967,-6.308717,5.440497,4.954689,-2.396381,-6.726944,-8.826435,-6.217933,-6.732593,5.558289,-2.153376,-2.711244,1.496355,-4.103229,-7.660873,-5.950773,-7.423307,0.261262,6.797176,8.318395,3.846719,-1.407518,-2.199853,4.430214,-3.429595,-6.439708,-2.606073,0.541179,5.023930,-6.012569,-8.051827,4.651039,3.608253,7.025208,8.909609,-9.507880,-5.690951,0.823224,4.370961,6.754619,7.836171,-0.094961,7.067446,9.060790,-6.089368,-3.843486,-5.301805,0.905175,4.479935,-6.137114,9.415452,7.265540,4.928125,-1.788430,9.427284,-0.805176,2.492956,-5.739023,0.564384,-0.782097,1.606442,-0.199081,-8.029712,-2.338415,-2.555146,0.863500,0.832410,9.901233,3.193856,-5.377157,-2.646878,5.630077,9.635281,-8.381983], dtype = "float64")#candidate|5923|(80,)|const|float64
call_5922 = relay.TupleGetItem(func_363_call(relay.reshape(const_5923.astype('float64'), [2, 8, 5])), 0)
call_5924 = relay.TupleGetItem(func_365_call(relay.reshape(const_5923.astype('float64'), [2, 8, 5])), 0)
bop_5927 = relay.divide(uop_5919.astype('float32'), relay.reshape(call_5916.astype('float32'), relay.shape_of(uop_5919))) # shape=(1, 4, 14)
bop_5930 = relay.divide(uop_5921.astype('float32'), relay.reshape(call_5917.astype('float32'), relay.shape_of(uop_5921))) # shape=(1, 4, 14)
bop_5933 = relay.subtract(bop_5927.astype('float32'), relay.reshape(uop_5919.astype('float32'), relay.shape_of(bop_5927))) # shape=(1, 4, 14)
bop_5936 = relay.subtract(bop_5930.astype('float32'), relay.reshape(uop_5921.astype('float32'), relay.shape_of(bop_5930))) # shape=(1, 4, 14)
var_5938 = relay.var("var_5938", dtype = "float32", shape = (8, 4, 14))#candidate|5938|(8, 4, 14)|var|float32
bop_5939 = relay.bitwise_xor(bop_5933.astype('uint8'), var_5938.astype('uint8')) # shape=(8, 4, 14)
bop_5942 = relay.bitwise_xor(bop_5936.astype('uint8'), var_5938.astype('uint8')) # shape=(8, 4, 14)
func_5906_call = mod.get_global_var('func_5906')
func_5907_call = mutated_mod.get_global_var('func_5907')
call_5943 = relay.TupleGetItem(func_5906_call(), 0)
call_5944 = relay.TupleGetItem(func_5907_call(), 0)
output = relay.Tuple([call_5922,const_5923,bop_5939,call_5943,])
output2 = relay.Tuple([call_5924,const_5923,bop_5942,call_5944,])
func_5947 = relay.Function([var_5938,], output)
mod['func_5947'] = func_5947
mod = relay.transform.InferType()(mod)
mutated_mod['func_5947'] = func_5947
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5948 = relay.var("var_5948", dtype = "float32", shape = (8, 4, 14))#candidate|5948|(8, 4, 14)|var|float32
func_5947_call = mutated_mod.get_global_var('func_5947')
call_5949 = func_5947_call(var_5948)
output = call_5949
func_5950 = relay.Function([var_5948], output)
mutated_mod['func_5950'] = func_5950
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5906_call = mod.get_global_var('func_5906')
func_5907_call = mutated_mod.get_global_var('func_5907')
call_6024 = relay.TupleGetItem(func_5906_call(), 0)
call_6025 = relay.TupleGetItem(func_5907_call(), 0)
output = relay.Tuple([call_6024,])
output2 = relay.Tuple([call_6025,])
func_6048 = relay.Function([], output)
mod['func_6048'] = func_6048
mod = relay.transform.InferType()(mod)
mutated_mod['func_6048'] = func_6048
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6048_call = mutated_mod.get_global_var('func_6048')
call_6049 = func_6048_call()
output = call_6049
func_6050 = relay.Function([], output)
mutated_mod['func_6050'] = func_6050
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5906_call = mod.get_global_var('func_5906')
func_5907_call = mutated_mod.get_global_var('func_5907')
call_6100 = relay.TupleGetItem(func_5906_call(), 0)
call_6101 = relay.TupleGetItem(func_5907_call(), 0)
output = relay.Tuple([call_6100,])
output2 = relay.Tuple([call_6101,])
func_6104 = relay.Function([], output)
mod['func_6104'] = func_6104
mod = relay.transform.InferType()(mod)
output = func_6104()
func_6105 = relay.Function([], output)
mutated_mod['func_6105'] = func_6105
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5906_call = mod.get_global_var('func_5906')
func_5907_call = mutated_mod.get_global_var('func_5907')
call_6120 = relay.TupleGetItem(func_5906_call(), 0)
call_6121 = relay.TupleGetItem(func_5907_call(), 0)
output = relay.Tuple([call_6120,])
output2 = relay.Tuple([call_6121,])
func_6122 = relay.Function([], output)
mod['func_6122'] = func_6122
mod = relay.transform.InferType()(mod)
output = func_6122()
func_6123 = relay.Function([], output)
mutated_mod['func_6123'] = func_6123
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6048_call = mod.get_global_var('func_6048')
func_6050_call = mutated_mod.get_global_var('func_6050')
call_6142 = relay.TupleGetItem(func_6048_call(), 0)
call_6143 = relay.TupleGetItem(func_6050_call(), 0)
func_6048_call = mod.get_global_var('func_6048')
func_6050_call = mutated_mod.get_global_var('func_6050')
call_6152 = relay.TupleGetItem(func_6048_call(), 0)
call_6153 = relay.TupleGetItem(func_6050_call(), 0)
output = relay.Tuple([call_6142,call_6152,])
output2 = relay.Tuple([call_6143,call_6153,])
func_6159 = relay.Function([], output)
mod['func_6159'] = func_6159
mod = relay.transform.InferType()(mod)
output = func_6159()
func_6160 = relay.Function([], output)
mutated_mod['func_6160'] = func_6160
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6166 = relay.var("var_6166", dtype = "float64", shape = (15, 8))#candidate|6166|(15, 8)|var|float64
uop_6167 = relay.acosh(var_6166.astype('float64')) # shape=(15, 8)
output = relay.Tuple([uop_6167,])
output2 = relay.Tuple([uop_6167,])
func_6170 = relay.Function([var_6166,], output)
mod['func_6170'] = func_6170
mod = relay.transform.InferType()(mod)
var_6171 = relay.var("var_6171", dtype = "float64", shape = (15, 8))#candidate|6171|(15, 8)|var|float64
output = func_6170(var_6171)
func_6172 = relay.Function([var_6171], output)
mutated_mod['func_6172'] = func_6172
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6177 = relay.var("var_6177", dtype = "float32", shape = (3, 3, 4))#candidate|6177|(3, 3, 4)|var|float32
uop_6178 = relay.sqrt(var_6177.astype('float32')) # shape=(3, 3, 4)
output = relay.Tuple([uop_6178,])
output2 = relay.Tuple([uop_6178,])
func_6182 = relay.Function([var_6177,], output)
mod['func_6182'] = func_6182
mod = relay.transform.InferType()(mod)
var_6183 = relay.var("var_6183", dtype = "float32", shape = (3, 3, 4))#candidate|6183|(3, 3, 4)|var|float32
output = func_6182(var_6183)
func_6184 = relay.Function([var_6183], output)
mutated_mod['func_6184'] = func_6184
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5906_call = mod.get_global_var('func_5906')
func_5907_call = mutated_mod.get_global_var('func_5907')
call_6244 = relay.TupleGetItem(func_5906_call(), 0)
call_6245 = relay.TupleGetItem(func_5907_call(), 0)
func_3685_call = mod.get_global_var('func_3685')
func_3688_call = mutated_mod.get_global_var('func_3688')
const_6247 = relay.const([[3.201638,-6.363510,-8.679685,-5.809861,-3.585128,0.749412,-3.633912,-3.875989,-9.102695,-2.463722,-5.434081,-3.622921,1.257178,3.401948,-1.975487],[-5.392305,-1.053741,1.289884,-4.110956,-6.660365,-8.295457,7.663838,-7.928745,7.949394,6.392546,8.986767,8.152542,9.210316,8.247051,-0.281764],[-8.257487,4.882645,-6.145579,-5.973718,-8.467051,6.453733,-6.596532,3.288969,2.549863,8.832532,-2.851557,-2.281308,-4.406645,-5.657117,1.716756],[-8.690659,-5.837039,-3.493489,-7.987958,9.509446,4.801190,-9.755215,-7.993376,-5.091452,-9.775371,-0.027295,-7.166287,-6.491753,7.387921,0.466431],[-3.859450,-2.694126,2.938456,3.158182,8.419495,4.237443,6.581123,-6.321830,7.257012,7.618311,-3.013608,1.121912,7.602184,-0.285525,-5.104192],[6.974416,9.424964,4.101464,-8.897791,-9.213388,-4.436147,-9.993260,5.558947,5.458939,9.449147,4.818318,-0.921397,-6.284629,-3.066865,-9.891645],[-1.181199,0.495192,-9.692311,5.473976,7.784772,-0.501101,5.164218,-0.155090,-9.706974,3.049249,-6.820549,7.844047,0.099342,-1.965458,-5.332374],[6.477656,-1.591697,-0.596574,3.836261,6.664815,-9.152197,-0.824873,-8.641489,-1.413072,-8.489443,-2.437465,-4.806326,-0.962846,-3.017184,-5.383454],[9.123431,8.340410,-0.332156,-9.788160,7.517396,5.003921,-2.854052,8.772854,-6.474106,5.388657,-6.575573,6.844183,0.048115,-8.090661,2.443119],[7.521123,-6.172414,-9.975716,-0.677073,9.795191,6.353547,1.615104,-3.333916,-9.818932,8.390971,-9.298815,-8.477841,-3.104206,1.284013,1.257328],[1.155792,2.080947,9.861949,2.464685,7.179413,-3.195166,0.278820,-5.049674,-1.033988,-6.619374,-7.343252,2.115738,-9.484432,-0.863364,7.290587],[-7.973207,-1.433836,-3.244675,-9.556357,-7.388716,-8.887673,-6.137512,-7.925041,-7.758470,4.610390,-0.555012,7.990647,-8.193997,-6.720910,9.033461],[-8.401842,-0.485988,0.980570,6.205574,-0.858726,0.079477,-6.287800,-0.283186,-8.433637,6.960786,2.713106,4.368498,-0.207028,4.266502,9.824438],[-5.064987,-8.266880,-3.998260,5.533596,5.176788,8.111749,2.615065,-3.111045,0.225082,-0.043991,7.409417,-5.867979,-9.640187,-5.578796,1.757165],[-4.780063,-8.783634,8.497810,-8.129827,-5.184772,-7.160329,9.654208,2.971497,-1.939332,-8.191573,2.535375,-0.970431,5.698383,-5.761964,-8.886084],[2.002854,0.552062,-2.705835,-6.512030,-2.732700,-4.924091,3.561371,-0.687372,-3.445002,3.761551,4.290782,-5.100646,-2.395883,-0.133482,5.085817],[0.250969,5.111522,-4.567651,1.512763,-6.047966,9.663029,-3.917605,-4.352124,8.351447,2.790708,-3.139328,-8.596351,9.107123,-4.639832,1.065032],[-5.436781,-2.940588,-7.411481,3.411472,4.324925,8.918610,8.197959,1.765393,-7.696595,-1.377962,5.676687,-6.668962,1.117435,1.269236,6.972432],[3.147519,1.976938,8.715080,6.804877,5.362129,-4.186390,1.313451,-5.484090,-0.923360,-5.801080,5.892005,4.450114,4.688550,3.354694,-4.388927],[4.253609,-5.691739,8.570915,-0.609411,1.782858,3.470143,-0.035063,8.158037,-9.276462,7.039120,-8.413832,-5.743060,-2.347620,-6.442511,-8.456446],[-4.395717,-2.345931,-3.242866,-7.602343,-3.739114,-8.696761,-9.451965,7.979696,-9.155950,2.692540,-3.750880,-6.772092,0.250189,-2.415864,-5.078464],[-1.679240,-3.496829,2.246994,-4.103054,-0.818215,7.615524,-4.295962,7.715948,4.077760,4.124938,-0.772256,-8.919580,7.101857,8.582586,8.604116],[-9.240358,6.772761,1.699861,-5.056432,-6.021344,-5.086241,6.151092,4.873457,-1.968267,-4.108078,2.437359,1.272799,5.157358,4.077623,-8.901405],[-1.372067,-0.413486,-8.494910,5.809368,4.003344,2.156217,4.588759,2.556081,5.106577,-4.376731,6.212515,-6.178883,1.665741,3.959333,8.794374],[-1.084497,9.519076,2.182104,-8.212781,-4.623663,-7.347849,9.550093,-1.140730,0.187140,4.467422,-9.785858,6.326650,3.137672,-2.184891,-6.315145],[1.159791,-4.152134,5.378030,-6.928720,-9.038247,-1.094246,-6.139527,-0.391680,-5.203930,-4.147100,6.049881,-7.764767,-9.766173,-9.910295,0.319539],[-1.950809,5.559957,4.442864,-3.047517,-9.868744,-5.221086,2.817266,-7.330417,9.479842,2.949355,-5.463760,-7.071167,-6.711112,6.853420,-4.736187],[8.983784,0.324295,9.626578,9.581415,-6.434102,-9.036674,-9.328711,4.183357,7.358582,4.986781,-2.228431,-8.619805,8.183436,1.337919,0.186213],[4.514124,-9.078283,6.049137,4.309435,1.117520,-9.002498,-9.284249,-8.987315,5.972926,-7.999820,-1.096968,5.892747,-8.531947,6.397841,2.668118],[1.424183,2.370521,0.795624,7.373355,-0.593395,-2.641021,-3.823428,0.537679,-0.352798,-9.548204,-4.475763,9.202814,8.835613,-1.760700,-5.442391],[4.857023,-0.285747,0.200433,8.991974,-6.258028,-0.998917,-6.282896,5.455495,7.858501,5.114737,-6.092471,-1.273412,3.539396,2.649786,0.359255],[6.039972,5.871249,9.644564,5.456737,7.597536,-9.682441,-8.321305,-3.701809,1.393077,3.573720,-8.569678,-3.010004,2.354192,-9.733160,1.092573],[-0.237724,4.061780,-7.360380,8.139357,5.019685,9.441237,-9.725717,1.958071,3.662316,-6.269523,6.818836,-8.164624,2.476202,0.520833,7.634041],[9.126024,8.274176,1.554849,-7.199851,7.488901,-8.314244,0.874743,-6.735841,4.259866,3.897299,-3.092123,-7.131798,-9.041682,-7.275524,-8.194200],[-0.649956,-9.785844,-8.711305,8.802736,-8.489267,-0.695363,9.753497,4.377412,-8.309050,8.263903,-6.417145,-8.444100,7.588145,-6.857133,-0.423123],[8.125014,9.285516,-0.446344,1.689269,-7.216425,-6.670088,-3.451099,-2.484470,2.258473,2.816893,9.455243,-0.762258,-8.175123,-1.066250,-7.988202],[7.303091,-9.384782,5.693409,-5.579959,-2.423526,-4.428762,-0.972249,7.514369,-1.263806,1.785943,2.814999,3.894835,5.305488,5.586042,-1.511383],[-8.850219,0.871812,-2.561111,-1.181716,-0.790473,2.705399,4.829302,6.853208,6.766224,-9.251203,5.822486,8.005003,5.412523,9.351987,-7.696928],[-4.440447,7.914232,4.009792,-0.754333,7.760000,2.899960,4.425753,-7.788338,8.215345,-5.062676,-3.767754,7.041151,-4.010621,-6.834710,-0.913133],[-7.031556,-6.128000,-2.694064,6.658469,6.017367,0.445448,-3.869311,0.228925,-7.657036,-7.065574,-4.029697,-1.191824,-6.831097,4.886052,-3.098174],[1.746809,-3.368922,3.608934,-1.359040,-3.345083,6.381721,-6.810671,-6.837844,-2.181076,-6.366685,-9.579198,7.447810,-6.557531,5.549317,8.946234],[8.419115,-5.351404,-4.576569,9.249990,5.005648,-7.367522,4.928279,-7.901067,-4.968541,-3.560236,0.585112,-2.712250,-2.993466,-3.021795,-9.888697],[6.175181,-9.069938,7.843619,8.564067,7.454845,-7.114764,0.255375,-1.506426,-7.956970,-8.210559,5.076475,5.451902,7.996970,7.084307,1.169826],[8.783475,4.028376,4.194525,-9.607887,7.265966,4.766426,9.568076,-6.168591,-6.449208,-2.819019,7.734305,-3.550907,4.413576,-1.979128,1.665097],[-6.517412,6.287612,-3.950835,1.283018,0.962228,0.797413,-6.421670,-4.263543,-1.568518,5.278043,8.162854,3.163859,3.784745,0.436511,1.246247],[-7.515003,7.721113,2.845505,-3.795898,-6.734450,-9.930262,-0.891009,-3.982698,8.202032,0.518908,-8.163761,2.065146,-6.874025,-3.301721,7.968488],[-8.330751,-2.284524,3.222368,1.835754,-9.199371,6.267251,0.662143,8.915194,-0.337871,2.627722,-0.934232,2.673178,5.033412,-5.462589,7.880869],[3.488007,7.551530,-9.751922,8.069781,-2.285883,5.795589,-6.717664,6.356659,4.400828,-6.511693,8.434967,-3.067805,0.339815,-2.592725,7.852590],[9.057927,7.916138,-7.607602,5.826305,-8.666883,6.951524,6.593787,-8.766523,-2.285100,3.081980,-0.210517,3.992938,9.719497,-5.876852,-4.450379],[4.462242,-0.444503,5.480447,-2.740778,8.828368,-7.626546,7.345917,-8.888911,3.413858,2.103124,-9.496193,3.374628,-7.870458,-7.282366,5.585572],[-0.402498,-9.909157,2.387179,-3.286312,-5.530163,-1.373817,-4.208035,-2.068910,-9.768450,0.209374,-6.598893,9.102843,9.046158,-3.442090,5.964802],[2.338301,2.477887,-5.607574,5.068716,-5.550442,-8.295885,-9.097786,-3.885418,-0.860970,-1.664993,-5.158730,3.776874,2.915647,5.454496,-4.185288],[9.747579,3.519451,3.719313,0.395772,-3.596267,-6.881554,6.216965,9.213694,7.102782,-2.302275,-7.657006,3.032920,-6.056662,-1.343208,-9.832574],[-5.892164,-6.936802,-9.772175,-5.888174,-9.456953,-1.996352,6.162081,-7.664726,0.851143,-7.393033,5.945083,9.633789,-0.979811,8.239996,9.190195],[5.582698,9.943825,6.376780,2.779354,-0.835550,-1.258954,-6.844703,-4.157998,6.449385,5.063996,8.602039,-8.351040,6.191270,-7.788456,5.495507],[-2.323861,-3.775523,0.145984,-2.445469,7.120895,-9.414422,9.927697,1.209062,2.842548,8.444929,2.489995,-3.165293,1.112122,-8.491142,-3.221929],[-6.046212,4.460385,6.316626,-7.851747,9.646160,-2.139472,-9.368232,2.583285,2.027115,-7.936533,4.684000,5.938439,2.409122,1.962457,-4.169275],[7.611638,-0.894069,5.036633,6.987394,8.753350,2.401451,0.978674,4.303605,-1.118301,4.751473,-4.727753,-0.176622,-8.190475,-6.665764,5.403216],[-1.827570,3.290542,0.490333,-7.161516,1.388522,-2.412424,3.204382,-6.465499,-6.129996,7.183138,8.241840,-9.248809,3.417270,1.065999,-1.973914],[-4.108491,0.492972,3.679469,8.127043,-8.536610,-8.353362,4.314361,-3.768817,-5.984528,-6.019637,-3.549965,2.616431,2.773828,-6.484705,6.024489],[-7.141823,3.121184,1.067790,-4.506268,-6.629862,8.623352,8.668527,-2.272655,-8.831364,-5.324762,-9.841045,-2.421266,5.970008,-0.630016,-9.375914],[-9.363937,2.923655,0.486425,0.069122,1.979168,-1.956767,-0.422595,-7.141236,5.620529,6.350231,8.061864,-5.925632,-1.748974,-1.399597,5.722105],[-5.643833,0.088877,2.380220,-4.778020,-6.461963,-1.897545,2.793013,3.287661,1.749808,-0.615327,-6.628398,-4.113664,-3.574841,9.219672,1.267190],[8.412241,-4.770757,-9.232090,9.475786,-5.167125,-7.589432,-2.526312,3.369920,8.031621,-1.951452,-9.920472,-9.861672,-5.791681,6.066060,6.458139],[-8.701831,-8.962819,8.455038,1.326577,8.312239,-6.751195,-5.555263,9.766737,-5.056616,0.501501,8.680316,-7.862992,-8.481583,-8.395494,-6.598342],[0.502667,-7.680050,4.688585,-1.763269,0.649475,0.832852,5.053740,-3.739203,6.084105,-1.135735,-2.044703,-4.935989,5.209225,9.016600,-9.896716],[0.291633,-1.835474,4.135578,8.724988,-2.545530,-1.340577,-6.522955,-5.478916,-2.114069,-6.828754,-2.906750,-1.521266,0.955330,6.346971,3.899960],[-1.951856,9.527894,5.112889,-0.544030,-7.609334,2.255066,-9.972168,0.164729,-7.834555,5.285462,-4.968625,2.135219,-3.506541,-3.829337,8.515573],[-1.864597,-1.248790,7.803968,-5.510913,-5.034989,-8.205177,4.792766,1.372574,1.750187,1.652443,-8.318976,-3.872349,-9.202842,-2.779771,9.295911],[9.911328,9.728379,7.191280,7.392571,6.020887,6.319500,2.810396,-9.812286,7.896726,-1.555821,-9.509660,-1.143046,8.804096,-8.638585,1.018482]], dtype = "float64")#candidate|6247|(70, 15)|const|float64
const_6248 = relay.const([4,10,5,5,5,-7,4,8,-3,7,-10,-9,-10,10,-4,5,-1,7,-6,-5,10,8,7,-9,3,-8,1,-5,-2,-2,-6,-4,3,10,-4,2,9,7,-6,-8,-4,-3,-2,7,-1,-2,-7,-3,-10,10,10,-7,2,6,-4,-8,-1,-3,-7,-8,-9,-7,-9,-7,-3,-10,-10,3,4,-9,-6,-7,6,-9,-2,3,-7,10,-1,4,3,-7,2,-5,3,-3,1,-3,9,1,-9,3,-5,4,9,9,2,6,-10,-8,-7,10,-2,8,-5,3,5,1,-10,-7,-3,-2,4,6,-1,7,-9,7,-1,3,3,-3,-5,-8,9,5,-2,6,-6,-2,-9,8,-9,9,1,-8,-9,5,-5,-10,-8,6,-3,10,7,10,-4,-5,-3,-2,6,9,1,1,6,-10,-6,8,1,1,-1,-3,7,-7,2,-7,9,8,-9,-6,10,-3,4,-8,-1,-4,-1,-7,-5,-1,4,-9,-3,3,-6,8,6,-6,3,7,4,6,8,-4,-8,4,-2,-4,-10,4,5,3,3,2,-5,10,10,-5,-1,-3,-5,-10,-10,9,-1,-3,6,8,5,-5,-10,-2,-3,9,7,5,-9,-8,-1,-8,-1,-1,-8,6,10,6,8,-10,-4,-9,3,4,8,10,8,-2,-10,5,3,-3,-3,-4,-6,6,-5,2,6,9,-5,-3,-8,1,-1,6,-8,-8,-8,5,-1,4,5,-4,-10,-7,4,10,-7,2,7,-2,6,5,-4,-8,1,-1,-7,-7,1,-4,4,-9,-4,8,8,6,2,10,2,-3,1,9,-10,-7,-10,8,-6,6,-7,-9,6,10,7,-6,-9,3,-4,8,-1,-6,5,-5,-10,-10,7,3,7,3,-5,-4,-9,-2,1,8,-4,-3,10,-1,10,7,-3,1,6,-3,-3,7,5,-7,-1,10,-1,6,2,-2,-9,10,-1,-1,4,-10,-10,-1,8,3,2,5,-8,-7,-6,-5,-1,-8,-7,-1,-2,8,-10,9,6,7,9,3,1,-10,-2,6,1,8,-3,-8,2,7,6,1,-9,-2,-10,-6,7,-2,10,-2,1,6,1,-7,2,6,-1,2,7,10,8,-10,1,-4,9,-9,-8,-4,-3,-1,-6,-4,7,-9,-7,2,5,10,4,-7,2,3,3,8,-10,-10,9,3,10,-8,3,4,-2,3,10,8,8,-1,-9,-8,7,5,-3,-10,2,-2,10,2,4,-9,-7,-6,10,-5,-4,10,-10,7,-5,6,7,-2,-8,2,-2,-6,-9,2,-8,2,10,3,-9,5,9,1,3,-4,2,1,-6,10,7,-7,-1,-9,1,4,2,1,-3,7,10,5,7,5,-4,9,9,8,-4,-4,9,-4,7,4,10,6,-3,1,8,5,10,-3,1,10,8,-2,-2,-8,2,9,-3,3,7,-8,-9,-6,9,10,3,-7,4,8,6,4,-7,-9,9,8,5,10,-1,2,8,-9,-2,9,-6,9,-2,9,8,-2,7,3,-6,-5,-1,-6,-1,-9,-1,-6,-7,10,-9,-1,-4,-4,-2,4,-9,-4,8,-1,-5,9,-9,7,-3,5,4,9,-8,-1,-9,8,-4,10,2,-10,-10,-7,5,6,8,7,7,2,-8,-6,9,-5,-6,-6,6,7,4,-8,-5,4,6,-7,-9,10,3,-4,-8,5,6,4,5,2,5,-8,-2,6,-4,-3,-4,-10,-9,-7,-7,-4,-4,-7,-8,-10,-6,-3,-1,-10,-4,5,8,-4,2,-7,-6,2,-7,-2,-7,-8,-1,3,4,4,-8,7,-6,4,-6,5,-10,-3,5,4,8,-6,4,2,5,-7,8,-9,-7,-2,-4,7,5,4,5,-1,9,5,-9,3,-4,-6,-6,-5,-10,8,-6,-1,-6,1,3,6,1,7,-10,-3,3,-7,6,6,10,1,10,5,7,7,9,-3,-7,-2,3,1,5,-6,9,9,5,-5,2,-1,7,-10,-3,1,-3,1,8,-1,2,-6,-9,-10,4,9,7,-8,10,-5,1,5,8,-2,-7,-1,-10,10,1,4,-9,-3,5,-3,9,7,5,-8,9,-1,-2,-7,-1,-4,1,10,-2,-6,-4,1,-8,-5,-2,8,-2,-10,-1,-1,-6,-5,-4,6,-5,3,3,5,4,-6,3,-10,1,3,6,4,-10,10,-1,-10,-9,8,-10,-3,2,-3,-3,4,-2,6,1,-2,7,5], dtype = "int8")#candidate|6248|(832,)|const|int8
call_6246 = relay.TupleGetItem(func_3685_call(relay.reshape(const_6247.astype('float64'), [5, 14, 15]), relay.reshape(const_6248.astype('int8'), [832, 1]), ), 0)
call_6249 = relay.TupleGetItem(func_3688_call(relay.reshape(const_6247.astype('float64'), [5, 14, 15]), relay.reshape(const_6248.astype('int8'), [832, 1]), ), 0)
func_5809_call = mod.get_global_var('func_5809')
func_5812_call = mutated_mod.get_global_var('func_5812')
var_6252 = relay.var("var_6252", dtype = "bool", shape = (840,))#candidate|6252|(840,)|var|bool
call_6251 = relay.TupleGetItem(func_5809_call(relay.reshape(var_6252.astype('bool'), [15, 4, 14])), 0)
call_6253 = relay.TupleGetItem(func_5812_call(relay.reshape(var_6252.astype('bool'), [15, 4, 14])), 0)
uop_6270 = relay.acos(const_6247.astype('float64')) # shape=(70, 15)
func_1471_call = mod.get_global_var('func_1471')
func_1474_call = mutated_mod.get_global_var('func_1474')
const_6280 = relay.const([-7.046412,-9.007529,5.965515,5.917256,-4.062380,-2.629134,5.870384,-5.739467,-7.052380,9.476944,-4.613047,2.237433,-7.265308,-8.658547,-9.354413,-3.987951,-1.352599,-7.023526,-4.879759,-9.960101,-8.851367,-2.986900,-7.392602,-1.725494,-9.858175,9.745936,4.934527,1.757514,9.218481,-5.410421,-2.029895,-5.434949,4.919371,-6.075513,2.154752,7.147767,-9.431677,3.198686,-4.412507,3.402983,-9.930206,4.260202,5.684281,5.629928,-6.171846,-3.404237,-3.468988,-6.937703,6.901092,0.885105,7.554898,1.054141,-9.725505,-3.517676,-5.335111,1.242612,-2.363261,2.219767,5.042217,3.770214,-5.726998,-6.287066,-2.830388,-8.321145,-2.064707,-3.155195,-0.654487,2.722854,3.794767,-0.488138,2.468231,-8.342099,-3.749550,-8.775923,-3.847094,-0.768914,3.597044,-9.841805,8.002541,-6.548992,-2.422387,3.487228,-4.078408,-1.774405,-5.444107,9.991481,-5.933989,-2.840931,3.209433,9.512941,-6.927548,-7.515025,-9.557990,0.653873,-6.899962,2.535906,6.104686,3.847482,1.854800,3.496337,-6.186107,-0.895485,-1.732685,-6.686815,7.680657,0.722448,4.141215,2.932355,-4.260577,3.115839,-2.454396,-5.610479,8.243829,8.343969,1.097678,-3.668965,-5.721912,-7.744519,9.317608,-5.379033,-3.322897,-0.987809,-3.932606,-6.128132,3.273947,6.238141,-0.907468,1.263172,7.427445,9.615459], dtype = "float64")#candidate|6280|(130,)|const|float64
call_6279 = relay.TupleGetItem(func_1471_call(relay.reshape(const_6248.astype('int8'), [16, 4, 13]), relay.reshape(const_6280.astype('float64'), [130,]), ), 0)
call_6281 = relay.TupleGetItem(func_1474_call(relay.reshape(const_6248.astype('int8'), [16, 4, 13]), relay.reshape(const_6280.astype('float64'), [130,]), ), 0)
uop_6283 = relay.sqrt(uop_6270.astype('float32')) # shape=(70, 15)
output = relay.Tuple([call_6244,call_6246,const_6248,call_6251,var_6252,call_6279,const_6280,uop_6283,])
output2 = relay.Tuple([call_6245,call_6249,const_6248,call_6253,var_6252,call_6281,const_6280,uop_6283,])
func_6285 = relay.Function([var_6252,], output)
mod['func_6285'] = func_6285
mod = relay.transform.InferType()(mod)
mutated_mod['func_6285'] = func_6285
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6286 = relay.var("var_6286", dtype = "bool", shape = (840,))#candidate|6286|(840,)|var|bool
func_6285_call = mutated_mod.get_global_var('func_6285')
call_6287 = func_6285_call(var_6286)
output = call_6287
func_6288 = relay.Function([var_6286], output)
mutated_mod['func_6288'] = func_6288
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5540_call = mod.get_global_var('func_5540')
func_5541_call = mutated_mod.get_global_var('func_5541')
call_6312 = func_5540_call()
call_6313 = func_5540_call()
func_6104_call = mod.get_global_var('func_6104')
func_6105_call = mutated_mod.get_global_var('func_6105')
call_6314 = relay.TupleGetItem(func_6104_call(), 0)
call_6315 = relay.TupleGetItem(func_6105_call(), 0)
func_2281_call = mod.get_global_var('func_2281')
func_2287_call = mutated_mod.get_global_var('func_2287')
const_6325 = relay.const([1,-8,1,-1,5,5,9,-8,-9,-6,-6,-4,-1,-4,-4,-10,3,9,5,-2,1,4,-5,-8,-5,-9,-1,9,3,-10,10,-3,8,-7,-3,-1,6,6,-10,-6,-1,8,-9,-5,10,-1,-5,-5,6,6,-3,-6,4,2,10,-1,-2,4,5,6,-5,10,-1,3,-9], dtype = "int16")#candidate|6325|(65,)|const|int16
const_6326 = relay.const([-7,2,-8,-7,2,-9,6,10,3,1,-2,9,5,5,2,7,10,3,4,8,8,2,3,7,7,5,8,5,8,7,-3,-1,4,4,-6,3,2,-7,-7,-2,-4,-4,-2,6,-6,-10,-7,-5,-5,-8,3,-4,-9,3,-7,10,3,4,2,3,-2,10,-4,-2,-4,-9,-4,-4,-5,-8,-2,-6,4,-10,9,-6,-8,10,-1,-2,-5,-4,5,-9,-4,5,-5,3,-2,-6,6,-1,6,8,-4,-2,3,-7,3,1,2,5,8,9,-1,-10,-6,-3,2,2,2,-6,-2,-5,8,-6,1,-10,-1,10,5,-1,9,-7,-5,-7,-7,-4,-6,7,5,4,5,9,-6,-8,-7,4,-2,6,-4,-8,6,1,3,5,9,5,5,10,3,2,6,5,-9,-9,6,5,1,5,3,-1,-9,-6,2,-4,5,-4,-2,-1,2,5,7,-3,5,10,7,-10,-2,1,-6,1,-10,2,-6,4,-3,7,10,-6,-7,3,-2,2,-3,7,9,1,-5,-3,6,-10,-10,-8,-6,-5,5,-8,-3,8,-3,-5,5,2,-9,-10,6,-5,-6,5,9,6,8,-8,2,6,5,8,7,9,-8,-10,-10,9,10,-9,-3,-3,-8,-1,1,8,9,5,9,-2,4,1,7,-1,3,-5,6,9,-3,6,10,-7,3,6,7,-7,10,-4,-8,-5,8,1,-2,-7,1,-8,-9,-1,-8,-2,-5,-3,-1,-3,5,-1,-1,-6,-1,7,-6,4,-9,-8,9,1,3,10,-4,-2,-2,1,-5,6,8,1,-8,3,-9,-6,3,4,-3,1,-7,6,7,-5,-2,10,6,-8,-6,4,2,-6,9,-4,-4,8,9,3,1,10,-8,-7,-4,9,-6,7,-4,6,5,-6,4,-4,-9,-8,-4,-6,-9,-7,8,2,10,5,-4,-7,-8,2,6,4,1,-6,10,-7,4,3,1,-9,7,-5,2,2,5,-1,-7,6,9,-5,3,10,-8,-3,-10,-10,-4,-10,6,-6,5,2,4,-4,-2,-2,4,6,8,-1,-10,7,-7,-10,-10,-4,6,1,-7,-1,-5,-6,6,1,1,-4,6,-5,-10,-5,-3,-9,8,7,6,-4,2,2,-2,-3,6,4,-9,-4,-7,-1,-8,9,8,-1,5,-7,-5,-8,1,-2,9,8,6,-6,9,-3,-8,4,8,10,9,2,-6,3,-4,-2,-10,10,2,-8,5,-1,4,9,-1,5,10,-5,10,2,2,6,6,-7,5,-3,-7,-5,10,-2,7,-2,-7,-1,-7,-2,9,-1,5,5,-3,2,3,-10,-1,3,-10,-3,3,5,-9,9,4,-4,7,-8,-8,-10,-8,-3,3,-7,10,-9,5,5,10,1,5,2,5,-2,-2,3,5,1,1,-10,-9,7,2,8,-7,5,-2,-4,8,-9,8,-10,-9,2,10,-2,10,1,-1,-3,7,8,4,-8,8,3,-1,-1,-6,10,-5,-3,2,-9,6,-9,2,2,-9,-8,-10,-5,6,9,10,-7,2,10,-7,-6,2,4,3,10,8,3,1,-9,5,-10,-9,-2,9,6,-2,9,-8,-8,10,-6,-9,6,-6,-8,3,8,7,3,-3,-1,1,-8,2,-9,5,-3,-2,-6,-6,-3,-6,-2,-2,-8,4,-7,9,4,-1,-6,-8,-3,-9,-3,5,3,7,-4,-10,4,-2,-1,-6,4,9,6,-10,10,-7,-4,6,-6,3,-4,2,1,8,-7,-8,-4,1,-6,8,-10,-6,-9,-4,-7,-5,-1,8,-1,5,-1,-8,-2,4,2,2,8,8,2,4,-10,2,-8,-5,-7,6,5,-4,5,-5,-9,-10,-4,-6,-2,-8,1,-6,-10,-7,-5,-6,7,7,7,8,8,-7,-8,-1,-5,-5,-10,-5,-3,-1,5,9,7,-3,-8,2,-9,-8,-2,-7,9,3,-10,4,-1,4,-10,8,-10,4,2,-4,7,-7,-5,7,-4,-5,-1,2,2,9,-10,3,-10,8,5,4,-5,2,-5,4,-9,6,8,1,-3,-5,-7,-10,5,10,1,-1,-5,6,2,-9,-1,-9,2,-10,-10,7,3,-6,-9,-10,10,-7,-4,7,3,7,1,-4,7,2,-8,7,-8,4,1,8,-5,8,-7,5,1,5,-7,-8,10,-4,-9,-4,5,-6,1,-10,6,8,-5,5,-7,1,-7,10,7,10,4,4,-3,6,4,-2,5,4,-7,5,9,-9,5,4,5,9,-9,9,-5,7,10,-10,1,5,4,1,-8,-10,10,-8,-9,4,-1,-9,9,-6,5,-6,-1,-4,4,8,6,6,1,2,-10,7,9,-10,4,-7,-3,7,5,8,-9,-1,6,10,1,7,-8,7,-4,8,-4,-9,10,-10,1,4,6,-4,3,10,-8,7,5,3,-10,7,8,10,4,-2,-2,5,-10,-10,5,-8,9,6,1,3,-2,7,8,7,1,-9,6,9,-4,-10,1,9,5,-5,-9,-8,-9,-3,4,9,1,-6,-1,-2,8,-2,-2,-10,-10,-1,-3,2,-6,9,6,5,3,4,-8,8,10,4,3,-9,1,2,1,-6,-8,8,2,-1,5,-10,4,7,-10,-8,-7,5,-8,-3,-10,7,5,-2,-7,3,-10,4,-3,-10,4,-3,4,10,-7,-1,4,-5,-3,6,-1,1,4,-5,-6,7,2,4,9,10,-7,-3,10,9,-6,-1,-6,8,10,6,-10,-8,4,-10,6,-1,2,-5,3,-4,-3,-5,9,-10,7,-5,-10,9,6,8,-1,6,-6,-6,9,7,-6,10,6], dtype = "int64")#candidate|6326|(1056,)|const|int64
var_6327 = relay.var("var_6327", dtype = "float64", shape = (12, 78))#candidate|6327|(12, 78)|var|float64
var_6328 = relay.var("var_6328", dtype = "float64", shape = (126,))#candidate|6328|(126,)|var|float64
call_6324 = relay.TupleGetItem(func_2281_call(relay.reshape(const_6325.astype('int16'), [13, 5, 1]), relay.reshape(const_6326.astype('int64'), [1056,]), relay.reshape(var_6327.astype('float64'), [936,]), relay.reshape(var_6328.astype('float64'), [126, 1]), ), 3)
call_6329 = relay.TupleGetItem(func_2287_call(relay.reshape(const_6325.astype('int16'), [13, 5, 1]), relay.reshape(const_6326.astype('int64'), [1056,]), relay.reshape(var_6327.astype('float64'), [936,]), relay.reshape(var_6328.astype('float64'), [126, 1]), ), 3)
func_1019_call = mod.get_global_var('func_1019')
func_1021_call = mutated_mod.get_global_var('func_1021')
var_6337 = relay.var("var_6337", dtype = "float64", shape = (3072,))#candidate|6337|(3072,)|var|float64
call_6336 = relay.TupleGetItem(func_1019_call(relay.reshape(var_6337.astype('float64'), [16, 12, 16])), 0)
call_6338 = relay.TupleGetItem(func_1021_call(relay.reshape(var_6337.astype('float64'), [16, 12, 16])), 0)
output = relay.Tuple([call_6312,call_6314,call_6324,const_6325,const_6326,var_6327,var_6328,call_6336,var_6337,])
output2 = relay.Tuple([call_6313,call_6315,call_6329,const_6325,const_6326,var_6327,var_6328,call_6338,var_6337,])
func_6341 = relay.Function([var_6327,var_6328,var_6337,], output)
mod['func_6341'] = func_6341
mod = relay.transform.InferType()(mod)
mutated_mod['func_6341'] = func_6341
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6341_call = mutated_mod.get_global_var('func_6341')
var_6343 = relay.var("var_6343", dtype = "float64", shape = (12, 78))#candidate|6343|(12, 78)|var|float64
var_6344 = relay.var("var_6344", dtype = "float64", shape = (126,))#candidate|6344|(126,)|var|float64
var_6345 = relay.var("var_6345", dtype = "float64", shape = (3072,))#candidate|6345|(3072,)|var|float64
call_6342 = func_6341_call(var_6343,var_6344,var_6345,)
output = call_6342
func_6346 = relay.Function([var_6343,var_6344,var_6345,], output)
mutated_mod['func_6346'] = func_6346
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6159_call = mod.get_global_var('func_6159')
func_6160_call = mutated_mod.get_global_var('func_6160')
call_6353 = relay.TupleGetItem(func_6159_call(), 1)
call_6354 = relay.TupleGetItem(func_6160_call(), 1)
func_6104_call = mod.get_global_var('func_6104')
func_6105_call = mutated_mod.get_global_var('func_6105')
call_6377 = relay.TupleGetItem(func_6104_call(), 0)
call_6378 = relay.TupleGetItem(func_6105_call(), 0)
output = relay.Tuple([call_6353,call_6377,])
output2 = relay.Tuple([call_6354,call_6378,])
func_6385 = relay.Function([], output)
mod['func_6385'] = func_6385
mod = relay.transform.InferType()(mod)
mutated_mod['func_6385'] = func_6385
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6385_call = mutated_mod.get_global_var('func_6385')
call_6386 = func_6385_call()
output = call_6386
func_6387 = relay.Function([], output)
mutated_mod['func_6387'] = func_6387
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6122_call = mod.get_global_var('func_6122')
func_6123_call = mutated_mod.get_global_var('func_6123')
call_6388 = relay.TupleGetItem(func_6122_call(), 0)
call_6389 = relay.TupleGetItem(func_6123_call(), 0)
output = call_6388
output2 = call_6389
func_6398 = relay.Function([], output)
mod['func_6398'] = func_6398
mod = relay.transform.InferType()(mod)
mutated_mod['func_6398'] = func_6398
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6398_call = mutated_mod.get_global_var('func_6398')
call_6399 = func_6398_call()
output = call_6399
func_6400 = relay.Function([], output)
mutated_mod['func_6400'] = func_6400
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6398_call = mod.get_global_var('func_6398')
func_6400_call = mutated_mod.get_global_var('func_6400')
call_6490 = func_6398_call()
call_6491 = func_6398_call()
func_734_call = mod.get_global_var('func_734')
func_739_call = mutated_mod.get_global_var('func_739')
const_6521 = relay.const([4.633902,-9.079504,0.620260,-0.895018,-5.271762,4.066694,2.933620,1.638277,5.898500,3.393754,-1.743036,3.623205,1.953773,6.149602,7.122787,-7.367851,2.591631,-7.702223,8.226174,4.266587,5.854668,3.919124,4.681753,-1.191570,-2.928516,-2.594052,-8.145185,4.533832,-3.600774,-7.894872,-9.685301,-0.463523,2.441932,-4.278884,4.724318,-1.215474,-4.288728,9.732429,-0.336471,2.927831,-2.588127,-2.380500,1.633642,-6.470072,-0.376835,9.255280,8.980610,-5.310506,3.064088,0.609601,7.489251,9.895727,6.653227,0.050139,2.490869,3.234957,-3.386882,-4.409002,7.460548,3.451564,-8.907341,-9.935257,4.764139,-4.078831,0.320086,5.881536,-8.873434,-3.568880,-9.005756,8.577408,-9.094259,5.920264,-7.414815,-4.509744,-9.387744,-9.696487,5.967542,0.039859,4.415254,6.829414,3.654311,8.358631,0.786906,-5.241053,7.803174,5.691553,-9.627050,4.137945,8.596101,-9.858020,4.893374,-6.770523,3.154936,3.542690,2.602286,0.668926,-0.177073,-9.187671,-0.332720,9.397935,1.719409,-0.712495,6.183832,-6.187080,1.520153,-5.608295,7.437008,0.443061,-2.252997,-2.611230,4.971935,1.964380,-8.283880,-5.190925,-6.961664,3.192269,-5.029942,5.120376,3.207605,-9.173404,-4.877463,5.817870,6.961082,-4.500204,-0.505965,-3.701046,-6.591594,0.885623,7.915727,7.577944,4.884324,2.859700,-2.817158,4.301615,0.147108,9.820790,-1.127817,1.746099,3.275859,-9.500120,-0.110780,-3.983662,-1.792515,-9.181049,4.259942,5.700900,-0.595852,-0.299816,9.692380,-1.888725,-8.036544,-9.829659,-6.429907,-5.317707,0.172893,2.749215,6.696287,-7.917921,5.650224,-3.769543,-8.284563,5.380401,-5.696635,-2.481036,6.944129,-5.313172,-6.593053,8.886396,8.018943,-2.637493,-9.927756,-6.151973,6.758465,7.431693,4.362612,3.153458,6.253387,-3.631777,8.896619,1.180177,2.123882,-6.862431,-1.295707,2.146216,5.067534,-0.553249,4.055155,-8.046163,6.921891,-5.068161,3.370769,-3.589245,-0.222409,-1.465378,4.400536,1.041735,-8.698829,-0.037296,2.155650,-9.531580,-8.074400,-6.130915,8.604778,-0.183040,-7.647376,-5.955234,3.252543,-5.340886,2.498568,0.612028,-6.807905,-4.268769,-5.370295,7.403376,-5.558176,-0.015468,-9.760283,-6.792130,9.198902,-6.709502,1.715866,3.002253,8.633079,1.700422,1.692685,-3.485947,0.943280,-3.417578,4.209500,7.646816,8.349449,-3.736443,-8.959177,4.507592,-2.128229,7.735929,-4.015132,-0.952927,-3.013866,9.645285,-0.390706,2.641145,-7.399767,0.273267,8.249581,8.159009,-3.941326,-3.496396,-4.380232,6.120905,2.446336,9.649070,4.517865,4.922269,9.273042,4.421525,-3.023971,6.427224,-7.804788,0.746412,2.063244,-8.931459,-5.693285,-8.112486,6.608096,4.417576,-0.569626,-6.699533,-2.371450,7.961265,-8.691296,5.998711,0.276009,5.348714,0.851842,4.620890,8.928116,7.353178,-8.995910,7.145021,5.715449,-6.980620,7.329150,1.455541,-2.855261,5.355732,-9.643201,-2.344907,0.369864,8.843090,-1.556347,4.540527,5.527780,4.408096,-9.612485,4.014412,-4.614039,3.190723,-8.494307,7.561452,1.347772,-1.944393,-6.481533,8.806343,-1.530887,-3.779526,9.489614,0.289426,-2.337787,-9.701259,8.830206,-7.974575,3.735871,7.222234,8.600456,-9.259984,4.350712,-6.007981,7.569121,5.707335,-6.493465,-9.134580,8.671350,-7.894716,5.301066,-2.613328,-6.059312,-4.156635,-1.506195,-8.363193,-1.286546,-0.573660,7.408606,8.250432,-2.688622,-9.503092,1.161065,-8.240531,-2.595211,-6.787350,2.195888,-7.873295,-1.504027,6.962915,-4.368165,-4.748047,-8.754621,-1.795107,1.696387,1.552669,-2.099871,-7.428328,-9.232880,-3.091793,-1.976588,-9.249895,8.792786,9.702217,5.055556,-3.486173,-7.093445,9.908821,9.646039,-4.448428,9.200473,-7.988231,-5.597708,7.103588,9.267759,2.934783,7.463955,1.505727,2.187261,-2.493464,6.702547,-2.984111,0.281956,6.018663,-6.957544,0.712706,6.311146,4.498470,-5.195934,-9.728493,2.472415,3.147644,-0.618567,9.500842,-4.711871,-6.899958,0.996863,8.025444,-4.231478,6.678677,7.500983,3.065361,5.540026,-8.768949,3.117583,3.838079,-0.468873,5.007808,-4.861517,-1.420487,-1.232866,-8.037165,-8.416894,-5.308685,-0.168860,3.535746,-4.663735,-6.447022,4.049449,-1.487926,-5.842773,2.945090,-8.157544,8.669013,-8.962269,0.358829,-4.773593,-7.496059,-2.800109,-8.820839,-9.008470,-3.223499,-2.817450,-5.442275,3.200303,-0.780141,7.825399,-1.434456,2.982133,-0.940621,-8.933099,-8.583543,1.196946,2.923298,-1.198097,8.848194,3.976566,8.643546,-9.993294,4.421613,-1.336330,1.737259,-1.327957,-9.358744,9.682012,7.917326,-7.826486,2.720162,-2.077390,1.754529,-6.012607,5.086380,-4.929191,6.928573,0.540079,-2.288563,-4.045053,9.997990,-9.078571,-0.002485,-2.699529,1.261300,-1.524836,-8.008478,8.707909,9.956038,-0.100847,9.232918,9.967200,-9.540582,6.756245,3.341324,-8.494191,-3.332610,-9.667854,8.035457,-2.376274,5.047071,5.270581,2.849965,-5.288298,-9.874073,-2.987298,7.852148,-5.071934,-2.720303,7.286362,8.632587,-8.958318,-5.531497,7.956361,8.929828,-6.704542,-3.228312,-2.339588,-8.337660,-4.078160,-1.380378,-7.242087,-7.466952,3.432307,-2.241979,-2.059631,-9.513090,-9.502798,4.990446,-4.738260,3.986677,-1.176634,-6.927384,-0.305602,4.364420,5.982183,6.993008,4.482204,-4.018833,-6.152717,0.076723,8.353308,5.066545,-7.215605,4.978345,6.159038,9.684336,-4.149782,-9.741118,-3.772357,7.262026,9.603624,0.076091,-2.045873,4.539805,8.122518,-6.171951,3.965038,-0.783931,-2.303528,-7.603925,-6.309500,1.469717,-9.967976,7.805699,0.163794,-6.491165,1.210990,-1.071001,-9.285460,-8.748371,-3.935343,-1.339492,-8.343178,-3.183759,-3.515752,-3.928452,-3.187274,8.972931,-2.646432,-6.120835,0.103437,-4.389233,-4.795758,-4.661011,5.919709,-9.380652,8.336289,4.128963,5.152989,0.030952,-8.190894,8.898694,1.958103,9.020315,7.855911,-2.356789,3.023062,-8.982726,2.400672,-9.485163,0.431870,-9.691594,2.106412,2.018891,4.299740,-6.253805,-5.424632,5.183963,-7.446975,5.109962,-7.549318,-5.872400,9.155615,2.317961,8.327355,8.213687,5.479161,-1.559914,1.360159,8.879618,-7.400610,-7.116628,8.921340,-7.608865,5.936985,-0.151588,4.324746,7.827422,8.225563,3.628587,-5.479755,0.657944,9.654123,-1.657114,5.420155,4.144664,2.475413,7.038480,2.837918,-2.395285,5.140467,-6.595596,6.643378,4.968046,8.670293,0.034279,7.579262,5.345502,-9.558763,0.247715,8.592535,2.928328,0.295652,-6.085009,3.147023,6.293442,4.946039,4.541008,6.364873,8.966219,-0.394955,-8.719327,7.556714,-6.669596,0.877934,-6.092734,-2.300240,9.207777,-1.298479,7.198646,-6.995600,-5.123878,-6.767294,-9.665637,6.617324,-6.189269,-7.588655,1.066992,-3.186974,-3.503033,-8.204899,2.835969,-7.992953,-0.823804,-4.531772,-2.448359,-3.168351,-1.486646,6.004718,-3.385688,-6.738681,-0.963923,2.289049,-2.595769,2.908331,8.881002,8.023877,-8.032794,2.013762,-1.814361,-2.313491,-8.619647,-6.163989,-4.542107,0.113307,-3.326168,1.225945,-0.611485,-0.748944,2.420605,5.019764,5.859031,2.585058,0.397150,-3.296013,-5.396769,-7.426092,1.861532,8.929336,-7.927943,-0.077913,-4.007328,6.077195,-3.973147,3.845952,2.218919,-7.448758,-6.605287,1.646562,-1.172271,3.517682,-5.218790,7.825710,-8.672479,5.095683,3.522669,5.098055,-5.570466,7.720486,8.774383,-7.349765,5.495743,4.228245,-3.455568,9.666710,3.139585,4.972437,1.971750,6.834897,0.835293,-6.452903,2.822795,-4.070247,6.959870,-2.823958,-9.491610,7.067343,-5.717010,2.053017,5.851220,4.833082,-0.841922,8.358316,-4.355420,8.128536,6.704729,-7.474315,-8.069113,-5.697621,-1.271654,-5.556833,9.743815,0.870824,-5.783263,-0.266141,2.551504,-0.506200,-2.860008,4.400064,5.267101,-6.789103,8.718613,8.627762,4.046949,5.702556,-9.771779,5.286570,5.955271,6.695340,7.152809,-8.572958,-4.528678,-2.962282,-5.783387,5.013420,7.302830,-3.434198,-9.797776,-4.333333,-6.527347,-5.380871,1.272952,-6.223577,-2.317161,-9.018917,-4.990634,-1.060191,-8.242954,7.341967,9.490044,-7.356482,2.430716,6.176897,-8.869004,7.423375,2.257513,4.602515,9.849708,8.129686,-8.245395,-7.219475,-7.279037,9.653945,3.028121,8.217759,8.653760,0.734465,5.575662,-3.723902,-8.175046,-0.040232,6.781163,-3.134122,2.643356,-0.100881,-0.736759,-8.622985,-1.342273,1.699453,7.432808,-5.376927,-5.700216,7.063367,-1.920161,4.177864,8.702642,-0.399662,8.669419,-8.487510,-7.042447,-5.605798,4.500881,-0.978448,-0.239878,5.291428,-4.290000,-4.078162,-0.096135,-0.926098,-3.375932,8.682017,2.332058,-8.457308,1.298518,-3.707682,-2.178918,-8.154082,7.541651,0.364331,-5.270572,7.318998,-9.688129,5.973066,6.728096,7.503601,8.532169,-5.613517,-2.560629,8.594059,8.352906,3.682204,3.025929,1.374420,-3.129801,-2.165935,7.290398,-7.326598,-2.786722,-8.363034,5.866553,9.429357,6.174023,-5.391856,-7.470468,5.291605,3.082817,7.079496,-2.960771,9.510144,6.667176,3.483642,-1.571635,-3.013546,0.714706,-2.340341,-0.803036,3.107015,4.930130,6.276411,5.881224,8.908842,-5.551776,1.569242,2.796626,5.394060,3.137154,-9.288846,-2.242325,-9.980884,1.512894,4.273193,-4.338543,6.955750,-7.345971,7.956179,5.529726,-0.903173,-3.755043,-1.563253,-6.344904,-0.547523,-2.419069,2.845146,-0.624857,-6.607071,8.654709,4.802249,-2.039933,9.718813,-5.930671,4.884770,-1.483675,4.018142,2.510403,-4.882718,8.579913,6.622610,7.873311,6.723459,-9.733938,-0.141283,9.893509,1.159881,-5.739139], dtype = "float64")#candidate|6521|(936,)|const|float64
var_6522 = relay.var("var_6522", dtype = "float64", shape = (126,))#candidate|6522|(126,)|var|float64
const_6523 = relay.const([0.722121,-6.382838,-1.682298,-0.613902,-0.157773,8.548319,2.731352,4.571338,8.988341,-1.135746,2.022394,6.567205,7.618213,2.931239,-9.914695,5.249286,8.026285,-6.639195,1.693693,-3.980958,-9.113032,0.267932,3.167038,1.222252,6.855925,-2.078973,3.227336,-2.319101,7.654514,7.520248,-4.202964,5.528713,-1.884802,-7.831702,-2.298921,9.367890,-9.472977,6.979020,-7.932563,-7.457504,-2.745349,-9.116478,-8.239935,-2.856692,-0.338138,-0.873398,-8.350408,-5.024589,8.601885,-4.852681,0.497451,-2.288672,2.344410,-2.420533,5.175606,6.941297,0.876940,8.550426,0.747162,9.087180,1.208663,-9.631817,0.317355,-6.719376,6.999930,-6.594731,2.701793,-5.871269,-2.349880,-9.375486,4.672837,6.834627,7.689695,6.252620,-2.488796,-9.351079,-4.049043,3.938296,0.781911,-4.544651], dtype = "float64")#candidate|6523|(80,)|const|float64
call_6520 = relay.TupleGetItem(func_734_call(relay.reshape(const_6521.astype('float64'), [9, 13, 8]), relay.reshape(var_6522.astype('float64'), [126,]), relay.reshape(const_6523.astype('float64'), [1, 80]), ), 3)
call_6524 = relay.TupleGetItem(func_739_call(relay.reshape(const_6521.astype('float64'), [9, 13, 8]), relay.reshape(var_6522.astype('float64'), [126,]), relay.reshape(const_6523.astype('float64'), [1, 80]), ), 3)
output = relay.Tuple([call_6490,call_6520,const_6521,var_6522,const_6523,])
output2 = relay.Tuple([call_6491,call_6524,const_6521,var_6522,const_6523,])
func_6530 = relay.Function([var_6522,], output)
mod['func_6530'] = func_6530
mod = relay.transform.InferType()(mod)
mutated_mod['func_6530'] = func_6530
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6531 = relay.var("var_6531", dtype = "float64", shape = (126,))#candidate|6531|(126,)|var|float64
func_6530_call = mutated_mod.get_global_var('func_6530')
call_6532 = func_6530_call(var_6531)
output = call_6532
func_6533 = relay.Function([var_6531], output)
mutated_mod['func_6533'] = func_6533
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6398_call = mod.get_global_var('func_6398')
func_6400_call = mutated_mod.get_global_var('func_6400')
call_6591 = func_6398_call()
call_6592 = func_6398_call()
output = call_6591
output2 = call_6592
func_6593 = relay.Function([], output)
mod['func_6593'] = func_6593
mod = relay.transform.InferType()(mod)
output = func_6593()
func_6594 = relay.Function([], output)
mutated_mod['func_6594'] = func_6594
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6104_call = mod.get_global_var('func_6104')
func_6105_call = mutated_mod.get_global_var('func_6105')
call_6617 = relay.TupleGetItem(func_6104_call(), 0)
call_6618 = relay.TupleGetItem(func_6105_call(), 0)
output = relay.Tuple([call_6617,])
output2 = relay.Tuple([call_6618,])
func_6624 = relay.Function([], output)
mod['func_6624'] = func_6624
mod = relay.transform.InferType()(mod)
mutated_mod['func_6624'] = func_6624
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6624_call = mutated_mod.get_global_var('func_6624')
call_6625 = func_6624_call()
output = call_6625
func_6626 = relay.Function([], output)
mutated_mod['func_6626'] = func_6626
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6624_call = mod.get_global_var('func_6624')
func_6626_call = mutated_mod.get_global_var('func_6626')
call_6646 = relay.TupleGetItem(func_6624_call(), 0)
call_6647 = relay.TupleGetItem(func_6626_call(), 0)
func_1900_call = mod.get_global_var('func_1900')
func_1902_call = mutated_mod.get_global_var('func_1902')
var_6668 = relay.var("var_6668", dtype = "float64", shape = (80,))#candidate|6668|(80,)|var|float64
call_6667 = relay.TupleGetItem(func_1900_call(relay.reshape(var_6668.astype('float64'), [80,])), 0)
call_6669 = relay.TupleGetItem(func_1902_call(relay.reshape(var_6668.astype('float64'), [80,])), 0)
uop_6672 = relay.acos(call_6646.astype('float32')) # shape=(6, 4, 14)
uop_6674 = relay.acos(call_6647.astype('float32')) # shape=(6, 4, 14)
output = relay.Tuple([call_6667,var_6668,uop_6672,])
output2 = relay.Tuple([call_6669,var_6668,uop_6674,])
func_6681 = relay.Function([var_6668,], output)
mod['func_6681'] = func_6681
mod = relay.transform.InferType()(mod)
mutated_mod['func_6681'] = func_6681
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6682 = relay.var("var_6682", dtype = "float64", shape = (80,))#candidate|6682|(80,)|var|float64
func_6681_call = mutated_mod.get_global_var('func_6681')
call_6683 = func_6681_call(var_6682)
output = call_6683
func_6684 = relay.Function([var_6682], output)
mutated_mod['func_6684'] = func_6684
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5906_call = mod.get_global_var('func_5906')
func_5907_call = mutated_mod.get_global_var('func_5907')
call_6686 = relay.TupleGetItem(func_5906_call(), 0)
call_6687 = relay.TupleGetItem(func_5907_call(), 0)
output = relay.Tuple([call_6686,])
output2 = relay.Tuple([call_6687,])
func_6695 = relay.Function([], output)
mod['func_6695'] = func_6695
mod = relay.transform.InferType()(mod)
mutated_mod['func_6695'] = func_6695
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6695_call = mutated_mod.get_global_var('func_6695')
call_6696 = func_6695_call()
output = call_6696
func_6697 = relay.Function([], output)
mutated_mod['func_6697'] = func_6697
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6624_call = mod.get_global_var('func_6624')
func_6626_call = mutated_mod.get_global_var('func_6626')
call_6734 = relay.TupleGetItem(func_6624_call(), 0)
call_6735 = relay.TupleGetItem(func_6626_call(), 0)
func_3685_call = mod.get_global_var('func_3685')
func_3688_call = mutated_mod.get_global_var('func_3688')
const_6737 = relay.const([2.627688,-8.410134,-0.590131,-2.401223,0.264942,4.181321,0.719946,9.042365,-1.345498,7.143113,-6.892570,6.736890,-0.651810,-0.702528,-7.260441,6.570550,4.429371,-6.393795,-4.578261,-6.861662,2.767367,-0.942070,-4.922361,5.216570,-9.713332,-9.506346,-9.175976,-3.857219,4.333370,-5.333828,-1.536087,1.863835,8.412078,-6.524277,-4.589065,-8.797735,-1.613664,-0.132875,-7.463120,-6.866961,-0.128075,-2.884666,-2.392030,8.874650,9.653482,9.373875,1.284366,9.813971,-3.986424,5.046422,-4.506966,-1.146040,-5.133616,7.261666,-2.572563,9.077700,0.659156,5.091187,0.714840,1.663522,8.145269,-3.607454,8.644316,0.723473,4.604664,-6.576374,-4.904621,2.400829,3.469599,-3.522922,-6.243728,1.660497,0.096901,8.854133,8.727130,9.907921,-3.055644,-3.401969,5.101486,7.864296,-0.996385,-3.142012,4.085108,8.684258,5.479250,-0.643444,8.231015,6.965844,2.493812,0.581269,0.943238,0.257359,6.611081,7.805424,1.034410,0.024498,-4.592614,9.914011,4.527632,-5.219888,-8.126249,-8.879888,-3.270086,-0.478447,9.599998,5.535052,-7.129807,-2.373734,-1.704604,-7.975817,-2.897587,4.428704,6.245811,-8.707079,6.495613,9.215374,-6.656066,1.357700,2.418781,-9.320736,-7.186801,0.549101,-8.405595,-9.829776,4.776807,-2.243601,-2.618604,-5.562394,-7.754600,4.395753,-2.319902,0.228734,-9.700870,0.327484,-4.119203,-7.460286,5.124974,5.534027,8.068498,-5.150183,-9.300620,6.196525,-7.990046,6.603453,-0.191301,-1.672718,2.881810,2.722200,6.670911,-3.115875,-2.571825,-2.862701,-3.999055,8.529709,4.029048,0.892965,9.784273,-1.236330,-0.742691,-1.461225,-8.633931,7.933715,4.011428,-2.537837,-9.957980,-4.669785,0.629632,-1.992721,4.112326,-5.676024,-5.058857,-4.023982,-2.164772,1.214952,-3.552138,3.791568,7.035639,5.478340,-0.807095,5.079615,-3.271678,8.717424,-1.761808,7.182025,-2.574787,-5.942420,7.266107,-2.961126,9.157469,7.238097,5.586245,2.220406,7.911121,3.064429,-9.546610,-7.343603,3.490971,-1.658424,-7.116908,6.518040,3.799254,8.744433,-1.373735,-1.766277,3.911836,-4.252467,8.668200,6.824315,-8.968806,-2.249407,1.077572,8.745127,-6.234444,-7.481884,5.261060,4.582275,7.221297,-3.631782,-0.586125,-3.293943,-4.647002,7.719841,-2.597836,-5.204017,2.821453,9.317865,-3.090771,2.708513,-7.941337,9.103450,8.333407,0.374804,3.299647,9.668632,-9.404713,6.079670,-4.277333,-7.193415,-1.051053,1.730142,7.415798,-5.370085,7.584894,4.948626,-3.232828,5.064741,5.016675,-2.721367,-7.783599,1.066388,2.694475,8.416873,8.940859,-6.307252,1.785626,2.539647,-7.925561,-6.954872,-4.107422,-8.041910,-3.028158,-3.662594,-2.020996,-3.670975,-9.292073,5.910811,-3.892259,0.566350,6.644442,7.906112,0.712065,0.437154,1.991298,0.915772,3.730177,-3.263448,-8.111516,-4.526084,4.500099,1.878520,-6.162721,-9.855088,-6.350887,-4.987674,6.274117,-2.175768,-6.250244,7.575701,0.717275,3.360080,-5.021026,-2.253884,7.693802,4.334238,7.363675,-9.415152,6.653614,-4.993336,6.299849,0.862799,8.120872,6.273624,-0.761359,3.068150,-9.309867,-5.303569,-6.031855,7.583222,4.150368,-2.791395,0.375864,-0.327650,0.487438,-6.699992,6.782729,-4.373487,2.815647,9.081306,-3.271896,8.575824,2.180967,6.005843,-2.624808,2.181261,0.863908,-0.960878,8.003697,2.337472,-3.306617,9.211880,-7.924231,-4.027033,7.707740,3.822373,-5.532096,-5.103020,-1.695083,6.465348,-1.332798,9.779450,-7.890468,1.572534,-1.163593,4.192500,-0.714976,2.230474,-5.423030,1.189261,4.515635,2.391070,5.262910,7.892357,6.580880,3.434227,-7.825052,1.800444,-0.296139,-6.274821,4.811677,5.646855,-7.570537,-9.539081,-7.817745,-9.626295,-1.379216,4.691437,-6.683536,-8.409405,8.943326,5.505375,-0.207938,8.773777,4.402176,0.099173,8.151132,4.470242,8.834558,-4.810738,5.516647,5.961803,-1.774032,3.905585,-5.440844,-2.486981,6.083692,7.120658,-9.224772,1.367533,-4.775495,-6.415845,2.707136,3.957278,-5.107152,7.433097,-7.119919,7.270947,6.161955,0.787429,-6.024071,-8.498418,-0.325196,1.286379,-8.474248,-0.132949,-6.306194,-1.554067,-3.301356,-2.378403,6.103526,-4.832080,6.628478,-4.650353,5.419717,-3.860421,2.600836,7.568194,-1.953355,-6.473258,3.406695,8.129259,2.843831,-7.926763,6.640715,-2.470216,-2.725228,-7.700137,6.165313,-6.091369,8.546200,-4.706698,3.797160,-5.389835,5.955884,-3.992234,5.482073,-3.753205,6.570680,2.769677,9.480885,5.627023,-4.577341,0.825813,-4.095503,-2.343403,-4.342660,-9.317716,9.173296,7.514460,6.955655,1.786485,6.382334,-5.114465,-7.035432,8.116207,5.498861,5.029773,2.067909,3.619183,9.107338,0.321563,9.308966,0.793166,-8.654559,9.011731,4.326375,-6.900526,-2.290975,3.108838,-2.677860,-7.610549,-0.895541,-8.819301,3.914305,7.446452,3.254975,-2.366654,1.683550,9.677726,2.323859,7.535386,-1.791964,9.539551,-1.085706,0.012048,-0.829386,7.346229,-4.219595,-7.842574,9.038668,-3.999058,-5.942097,0.058190,-8.760401,1.307162,4.192000,-9.084808,-4.245099,-0.272472,3.555561,-8.245572,-6.179842,-5.893506,0.322413,-6.952495,-4.886979,4.722507,7.377788,-7.766630,-9.201696,7.815296,6.242960,0.927908,-1.510294,-8.484933,9.235460,1.106261,-0.132474,-9.669811,-7.851997,0.199702,0.350449,7.060862,1.645062,0.871789,5.737885,-4.544873,-4.537593,-6.982015,4.524315,-4.831930,2.661086,-7.974112,1.846704,2.748656,2.860028,1.767324,-5.093086,-3.266492,-4.357344,4.594296,-1.434108,-8.392740,5.263166,3.148435,-1.305889,3.007497,8.566806,7.775794,2.841161,-7.702625,6.284520,9.681047,-7.273915,-2.389711,0.259558,-0.831863,3.389234,8.091381,-3.550190,2.032256,-0.870438,-4.433517,1.173114,2.070257,9.202415,3.097642,2.993633,-7.522009,-8.171676,-3.510227,-1.178745,-3.086521,-8.608394,-2.923954,-8.767558,1.814731,-9.425467,4.064295,6.190355,-6.006353,-8.291855,-3.869530,5.308258,-9.718167,6.243817,8.375016,2.807152,1.901565,5.659590,-1.159185,0.599419,4.690272,-6.142809,7.889305,4.484593,-5.714646,-0.666496,6.783386,5.981523,4.665308,-1.755150,-8.678527,-8.466790,2.804972,6.720907,-6.579149,6.322725,-6.525554,-7.224510,-8.340415,-5.782306,2.189497,6.015645,-7.997256,-8.794068,9.511575,-4.710265,9.771465,0.625911,9.472601,-6.880111,7.927391,1.464174,7.505130,-3.130551,4.446074,-6.453799,6.928293,4.773008,-4.415821,1.246438,-0.354082,4.819152,9.950471,3.493674,2.455108,-1.278815,9.804098,0.465785,4.289691,-3.480653,-7.258715,4.396305,-1.453993,7.884532,6.050314,-3.595089,-1.865989,9.773953,-9.853661,-2.827675,-9.798175,5.042592,-7.477380,6.602901,-9.396612,-3.702992,-3.276798,-4.667091,-8.936137,-0.418872,-7.580653,-3.139880,-6.866873,-8.357629,-4.343860,2.231960,5.413409,-3.834025,7.039578,5.886829,-9.604707,-7.472990,-2.680501,9.131659,-2.379639,-1.729250,2.734101,4.086736,-7.566085,-1.291630,9.014343,7.814150,-9.703598,-5.604921,5.393722,1.118671,-7.511045,0.732617,-7.093946,0.276571,-3.884755,-5.985721,-0.192464,6.793840,0.895901,0.676675,0.782511,-3.057611,7.369366,6.295336,-8.006020,-1.354300,-2.233230,9.151821,-7.096319,6.058999,-4.959416,-1.207418,-1.107581,3.554774,-5.893698,-6.843493,-4.265529,3.402271,8.027195,-4.475237,-7.405901,-2.621576,-0.764772,4.269100,0.935335,9.483297,-2.219447,-1.907772,-7.724355,6.865276,3.818990,-4.838826,-3.637362,8.816685,0.120555,0.835047,-0.574019,-2.754241,-9.854111,4.785154,9.035901,0.649174,5.246013,-0.046515,-9.300374,-6.569548,5.587202,8.296704,-8.367238,7.539618,-6.260644,9.506100,8.982020,-3.314460,-0.655707,8.868003,-2.647849,2.399997,-6.337887,8.270717,7.981502,-9.793582,4.439432,-1.375926,-2.250013,2.541796,2.924757,3.106235,-1.592069,-4.265395,-9.414113,-3.701148,-1.020349,-1.632289,3.251694,4.589538,5.010155,7.710134,1.076477,-4.838100,-1.770017,1.447245,7.499124,-4.886830,-4.930643,-0.280559,-3.747110,5.252929,-1.221645,5.130182,-4.465776,7.952122,3.679191,-8.399040,-3.940059,-4.510883,-9.187365,-8.841342,1.101248,3.459351,7.065275,-7.431420,3.302733,4.504626,3.176050,4.995862,2.387192,5.827268,-8.432725,-9.761601,-1.019602,9.684969,-6.813450,-9.762070,-7.381591,4.367369,3.364723,2.917393,4.899754,9.819061,4.438133,-0.632413,9.277499,6.447012,7.908364,-4.791364,1.368969,-3.940318,-8.752560,7.650910,9.825168,-1.424286,-6.206822,9.809969,-8.344796,-1.071862,4.502339,8.683197,-0.789430,-9.989177,-2.233140,6.026936,-0.960815,1.449790,7.046954,8.769720,7.937861,8.113788,6.034851,0.163881,4.980668,-0.433194,5.204012,3.984824,-5.484813,2.457775,8.626655,-1.864618,7.844452,-6.274510,-9.594062,7.024327,5.254766,3.651363,8.345446,9.493941,-5.988098,1.995920,4.538094,5.100124,9.255506,-5.402646,-0.705534,-8.310893,-1.283185,-2.460712,1.898390,-2.106411,-2.663474,9.308070,-3.942803,0.861169,-2.006970,-0.104258,2.408466,-0.630545,8.948377,5.234399,9.176249,7.945276,-5.374992,3.610001,6.769300,2.792654,7.717169,9.091979,8.119037,8.597742,6.943907,7.323456,2.550426,4.153754,-0.443989,-1.265139,0.603634,3.995744,0.819474,6.735427,-9.343688,5.179198,7.357696,0.609440,8.090662,6.337756,7.695170,4.965226,-0.240005,5.844733,-0.808553,-2.777004,1.202366,5.136951,-8.527419,8.538618,2.570368,9.347278,8.793515,0.574679,3.793301,7.660307,4.646708,7.307399,-8.255339,-3.814320,5.375922,-9.261075,-9.429848,6.363570,-3.166508,8.628997,7.471667,-5.353473,-8.424727,9.086796,-8.595997,-5.616919,-0.752595,7.334915,-0.256155,5.866213,1.644965,-8.370392,2.907864,-4.820682,-4.498132,-8.348214,-1.300205,-0.734638,-9.516365,-3.729441,-3.928983,4.621673,4.071595,2.343649,-3.498719,5.817687,-4.070456,-0.787063,1.264546,6.719858,-3.577342,-7.680111,1.509020,5.876053,-2.202555,-1.435406,-8.498219,6.672947,1.856805,5.204206,7.761678,2.494084,-7.286571,-5.385970,-1.019992,8.965190,5.676965,-7.767469,-1.934002,-5.083899,6.926224,-3.385315,-1.598508,2.552513,-1.516681,-8.748026,8.941352,-1.461249,4.271687,-7.575097,-4.997666,-2.670265,6.649512,-7.482354,0.445477,-1.890433,-5.037957,-3.505297,0.779380,-6.083962,0.615582,7.673580,-3.663674,-0.015890,-1.819393,1.543235,8.168130,-7.934540,-7.996026,-6.423649,-7.609951,2.711956,1.009428,6.800568,8.970590,3.923361,-0.871267,-3.878394,-7.790351,-8.735038,2.035760,1.642063,-8.240121,8.984921,6.546417,-7.441015,-6.993947,-9.810255,9.899636,-3.605695,9.466132,2.818687,6.150325,-6.334150,5.038171,-0.847797,-1.881541,9.301643,-2.631229,-8.736157,-7.736078,0.645530,-1.856281], dtype = "float64")#candidate|6737|(1050,)|const|float64
const_6738 = relay.const([8,1,-10,-3,9,-8,5,-9,5,-8,-3,6,9,7,4,7,7,-4,-3,1,1,3,1,-8,-5,-9,-3,8,-8,7,4,-4,2,-9,-6,-8,-10,-2,-2,9,-9,6,3,3,1,-1,-1,-8,-4,-7,9,-9,8,-2,-4,-8,9,-4,-9,4,-4,-5,-2,10,-3,-8,4,-3,-9,-3,-10,-3,-6,-3,-3,-7,2,3,-6,-1,4,3,-7,2,-5,-8,-7,-4,-9,10,-2,10,-10,9,10,6,9,1,8,-3,-8,6,3,10,4,5,-8,1,10,3,10,-1,1,-7,5,9,-3,9,-4,-10,-1,-6,10,7,5,-9,1,6,-1,-8,4,-10,-2,-3,-9,5,-7,-9,8,6,-5,-10,4,6,-10,-10,2,9,8,-2,-4,7,8,6,-9,9,7,10,-5,7,-3,-10,-6,10,-1,-10,-9,-4,-10,-3,7,5,-3,-7,5,6,10,4,-4,-9,7,10,4,-7,6,-5,3,-9,9,7,-8,10,8,4,-10,-5,-2,-5,10,-3,1,1,10,-10,-4,10,9,-1,-6,7,8,3,10,8,-1,6,9,-5,7,-9,-4,4,1,-2,-10,2,-2,10,6,-2,9,6,5,-10,-1,-5,7,10,-5,-6,-1,5,-5,7,-2,-6,-7,2,8,-8,8,3,1,3,6,-10,-8,-4,9,6,-10,-6,-7,-3,-8,-1,2,-2,-9,-10,-4,4,5,-7,-1,8,5,2,-10,-6,-6,5,-3,5,-3,9,-3,-9,2,3,-9,5,-2,-8,2,3,1,9,6,-9,7,4,2,-8,-3,8,-1,8,1,-8,-9,4,10,5,-5,2,-2,-4,4,-9,-3,9,-3,9,-2,-9,-1,-1,6,4,-10,-5,-5,-7,1,5,4,-1,-10,10,-1,-3,4,1,1,3,-2,-6,-9,5,10,5,-4,10,9,8,-1,-10,8,-4,7,-2,8,-7,10,7,3,-5,-10,-3,-7,9,-3,-4,2,-1,5,-9,9,10,-9,-3,-10,-7,3,9,2,-7,-1,-7,-9,4,-10,-9,-1,2,5,-10,2,-5,-9,5,6,-6,3,10,4,7,6,-4,-6,-5,-4,6,-4,2,-7,5,-1,8,6,7,3,3,2,6,-8,9,-8,7,-5,-7,4,-4,5,-10,-2,-3,10,4,-5,-2,-3,-2,-5,5,8,10,6,-8,8,3,4,6,-2,-8,3,2,10,-9,5,-2,-7,-4,8,3,-9,-7,10,6,6,-1,-3,-2,-8,-7,6,7,-4,6,4,-10,-4,5,2,8,-7,-4,-3,-5,-9,8,-2,9,-6,7,-4,3,4,2,1,-4,10,-1,6,5,-10,1,8,7,-6,-3,1,-8,4,-3,-1,-3,2,-3,-2,4,-3,-4,-8,2,7,-4,-1,-5,4,10,-2,-6,9,-5,-10,-4,5,-2,1,6,-1,-8,3,-9,-9,2,-6,-8,-8,5,-3,10,7,8,10,-7,4,-5,-7,6,7,-1,-8,5,3,5,1,1,-9,-9,5,-2,-9,8,3,-4,-5,1,-6,-1,-8,-3,4,-10,-7,4,3,2,2,10,3,-4,-10,2,-3,5,1,-2,-3,10,1,1,1,-10,3,-8,7,-7,-9,3,3,-3,5,1,-10,-10,-8,-7,-6,2,8,-8,-2,-9,5,10,1,4,1,-6,8,-1,8,-5,-4,6,5,-4,10,-7,-9,-6,-2,-6,8,3,-9,2,2,-2,4,-10,-3,-7,2,-9,-3,-1,5,-10,-9,-9,-9,6,10,-10,5,5,-6,10,-6,-9,3,-6,5,-9,10,5,-9,-1,-8,-3,-10,-2,9,-4,-2,-4,3,1,-7,-4,-8,-6,-9,-4,-7,1,-3,6,4,9,-5,1,4,-5,2,-9,10,7,-10,6,8,-5,-10,-7,2,-2,-8,2,3,-6,-9,-5,-8,-10,-3,-6,-6,4,-3,-2,-6,10,7,9,-3,7,7,3,-6,6,9,-2,4,-1,-8,1,-7,-9,5,4,-2,2,-5,-7,-5,-8,-4,1,8,-6,-5,8,8,-8,-5,2,3,7,6,9,-6,10,-7,9,-3,2,1,-3,7,-3,4,-2,-7,7,2,9,-2,1,9,7,-4,-1,-8,4,-4,10,10,6,-10,5,6,-1,10,-10,-1,-1,3,-9,-6,6,10,9,5,-9,8,-6,-7,-5,-8,-8,-9,3,-2,-4,-7,-8,6,9], dtype = "int8")#candidate|6738|(832,)|const|int8
call_6736 = relay.TupleGetItem(func_3685_call(relay.reshape(const_6737.astype('float64'), [5, 14, 15]), relay.reshape(const_6738.astype('int8'), [832, 1]), ), 1)
call_6739 = relay.TupleGetItem(func_3688_call(relay.reshape(const_6737.astype('float64'), [5, 14, 15]), relay.reshape(const_6738.astype('int8'), [832, 1]), ), 1)
output = relay.Tuple([call_6734,call_6736,const_6737,const_6738,])
output2 = relay.Tuple([call_6735,call_6739,const_6737,const_6738,])
func_6750 = relay.Function([], output)
mod['func_6750'] = func_6750
mod = relay.transform.InferType()(mod)
mutated_mod['func_6750'] = func_6750
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6750_call = mutated_mod.get_global_var('func_6750')
call_6751 = func_6750_call()
output = call_6751
func_6752 = relay.Function([], output)
mutated_mod['func_6752'] = func_6752
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5906_call = mod.get_global_var('func_5906')
func_5907_call = mutated_mod.get_global_var('func_5907')
call_6774 = relay.TupleGetItem(func_5906_call(), 0)
call_6775 = relay.TupleGetItem(func_5907_call(), 0)
func_1442_call = mod.get_global_var('func_1442')
func_1444_call = mutated_mod.get_global_var('func_1444')
const_6785 = relay.const([1.065253,4.685369,0.371440,-4.876572,-1.665980,-5.473136,-6.030717,8.561811,-3.288436,7.733749,-8.995121,0.814828,-1.303465,4.573100,0.464448,7.805372,-3.184152,-1.481074,-9.714244,-7.350750,5.920405,2.830547,-4.373953,3.305917,-5.736185,-3.209393,-4.552410,-7.994939,5.768525,6.797681,-4.672244,1.861635,4.484853,-9.818292,8.111421,-1.895958,-9.026172,-6.287738,-6.110588,8.611284,-0.138202,8.220096,-8.479637,-2.697592,2.659262,-6.654957,-8.153352,-8.649101,1.536240,-7.271713,4.636666,-5.161121,-0.563733,4.342425,-4.549442,5.107973,-6.187456,-7.211056,-9.768985,-5.304525,-7.686588,-2.111801,1.513532,-4.688799,6.934330,4.881602,-1.813199,-0.836252,-2.448734,9.545997,8.391721,2.547658,-1.813586,-6.515688,-4.733816,-2.083214,0.406299,-5.325769,-1.634122,3.921332,5.811125,-0.755326,-1.178803,-9.506367,-8.135668,-9.032087,7.814228,6.139450,9.111877,-0.812123,0.285194,-3.141568,5.833710,2.299600,4.606331,-5.788090,2.474830,-7.181401,2.132014,-7.466014,8.697259,0.166484,-9.192477,-7.197595,-2.758824,-5.403176,0.958794,-3.153882,8.549647,-0.803963,9.459711,4.935729,-7.201688,-4.247529,-7.708882,3.660576,6.402381,-8.324743,-6.335207,9.476460,-4.106169,-3.752270,-5.763052,-5.623370,-0.339580,5.390965,9.701782,-1.550815,-5.852158,-0.457058], dtype = "float64")#candidate|6785|(130,)|const|float64
call_6784 = relay.TupleGetItem(func_1442_call(relay.reshape(const_6785.astype('float64'), [10, 13])), 0)
call_6786 = relay.TupleGetItem(func_1444_call(relay.reshape(const_6785.astype('float64'), [10, 13])), 0)
output = relay.Tuple([call_6774,call_6784,const_6785,])
output2 = relay.Tuple([call_6775,call_6786,const_6785,])
func_6791 = relay.Function([], output)
mod['func_6791'] = func_6791
mod = relay.transform.InferType()(mod)
output = func_6791()
func_6792 = relay.Function([], output)
mutated_mod['func_6792'] = func_6792
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6385_call = mod.get_global_var('func_6385')
func_6387_call = mutated_mod.get_global_var('func_6387')
call_6801 = relay.TupleGetItem(func_6385_call(), 1)
call_6802 = relay.TupleGetItem(func_6387_call(), 1)
func_323_call = mod.get_global_var('func_323')
func_326_call = mutated_mod.get_global_var('func_326')
var_6808 = relay.var("var_6808", dtype = "float64", shape = (198,))#candidate|6808|(198,)|var|float64
call_6807 = relay.TupleGetItem(func_323_call(relay.reshape(var_6808.astype('float64'), [11, 2, 9])), 0)
call_6809 = relay.TupleGetItem(func_326_call(relay.reshape(var_6808.astype('float64'), [11, 2, 9])), 0)
output = relay.Tuple([call_6801,call_6807,var_6808,])
output2 = relay.Tuple([call_6802,call_6809,var_6808,])
func_6829 = relay.Function([var_6808,], output)
mod['func_6829'] = func_6829
mod = relay.transform.InferType()(mod)
var_6830 = relay.var("var_6830", dtype = "float64", shape = (198,))#candidate|6830|(198,)|var|float64
output = func_6829(var_6830)
func_6831 = relay.Function([var_6830], output)
mutated_mod['func_6831'] = func_6831
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6839 = relay.var("var_6839", dtype = "float32", shape = (5, 13, 8))#candidate|6839|(5, 13, 8)|var|float32
uop_6840 = relay.exp(var_6839.astype('float32')) # shape=(5, 13, 8)
uop_6848 = relay.sinh(uop_6840.astype('float64')) # shape=(5, 13, 8)
func_876_call = mod.get_global_var('func_876')
func_878_call = mutated_mod.get_global_var('func_878')
var_6853 = relay.var("var_6853", dtype = "int32", shape = (168,))#candidate|6853|(168,)|var|int32
call_6852 = relay.TupleGetItem(func_876_call(relay.reshape(var_6853.astype('int32'), [4, 6, 7])), 0)
call_6854 = relay.TupleGetItem(func_878_call(relay.reshape(var_6853.astype('int32'), [4, 6, 7])), 0)
output = relay.Tuple([uop_6848,call_6852,var_6853,])
output2 = relay.Tuple([uop_6848,call_6854,var_6853,])
func_6862 = relay.Function([var_6839,var_6853,], output)
mod['func_6862'] = func_6862
mod = relay.transform.InferType()(mod)
var_6863 = relay.var("var_6863", dtype = "float32", shape = (5, 13, 8))#candidate|6863|(5, 13, 8)|var|float32
var_6864 = relay.var("var_6864", dtype = "int32", shape = (168,))#candidate|6864|(168,)|var|int32
output = func_6862(var_6863,var_6864,)
func_6865 = relay.Function([var_6863,var_6864,], output)
mutated_mod['func_6865'] = func_6865
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6398_call = mod.get_global_var('func_6398')
func_6400_call = mutated_mod.get_global_var('func_6400')
call_6883 = func_6398_call()
call_6884 = func_6398_call()
var_6887 = relay.var("var_6887", dtype = "bool", shape = (6, 4, 14))#candidate|6887|(6, 4, 14)|var|bool
bop_6888 = relay.less(call_6883.astype('bool'), relay.reshape(var_6887.astype('bool'), relay.shape_of(call_6883))) # shape=(6, 4, 14)
bop_6891 = relay.less(call_6884.astype('bool'), relay.reshape(var_6887.astype('bool'), relay.shape_of(call_6884))) # shape=(6, 4, 14)
func_44_call = mod.get_global_var('func_44')
func_46_call = mutated_mod.get_global_var('func_46')
var_6896 = relay.var("var_6896", dtype = "float64", shape = (126,))#candidate|6896|(126,)|var|float64
call_6895 = relay.TupleGetItem(func_44_call(relay.reshape(var_6896.astype('float64'), [9, 14])), 0)
call_6897 = relay.TupleGetItem(func_46_call(relay.reshape(var_6896.astype('float64'), [9, 14])), 0)
output = relay.Tuple([bop_6888,call_6895,var_6896,])
output2 = relay.Tuple([bop_6891,call_6897,var_6896,])
func_6907 = relay.Function([var_6887,var_6896,], output)
mod['func_6907'] = func_6907
mod = relay.transform.InferType()(mod)
var_6908 = relay.var("var_6908", dtype = "bool", shape = (6, 4, 14))#candidate|6908|(6, 4, 14)|var|bool
var_6909 = relay.var("var_6909", dtype = "float64", shape = (126,))#candidate|6909|(126,)|var|float64
output = func_6907(var_6908,var_6909,)
func_6910 = relay.Function([var_6908,var_6909,], output)
mutated_mod['func_6910'] = func_6910
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6624_call = mod.get_global_var('func_6624')
func_6626_call = mutated_mod.get_global_var('func_6626')
call_6939 = relay.TupleGetItem(func_6624_call(), 0)
call_6940 = relay.TupleGetItem(func_6626_call(), 0)
output = call_6939
output2 = call_6940
func_6945 = relay.Function([], output)
mod['func_6945'] = func_6945
mod = relay.transform.InferType()(mod)
mutated_mod['func_6945'] = func_6945
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6945_call = mutated_mod.get_global_var('func_6945')
call_6946 = func_6945_call()
output = call_6946
func_6947 = relay.Function([], output)
mutated_mod['func_6947'] = func_6947
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6048_call = mod.get_global_var('func_6048')
func_6050_call = mutated_mod.get_global_var('func_6050')
call_6950 = relay.TupleGetItem(func_6048_call(), 0)
call_6951 = relay.TupleGetItem(func_6050_call(), 0)
uop_6973 = relay.cosh(call_6950.astype('float32')) # shape=(6, 4, 14)
uop_6975 = relay.cosh(call_6951.astype('float32')) # shape=(6, 4, 14)
func_5112_call = mod.get_global_var('func_5112')
func_5117_call = mutated_mod.get_global_var('func_5117')
var_6978 = relay.var("var_6978", dtype = "bool", shape = (1050,))#candidate|6978|(1050,)|var|bool
call_6977 = relay.TupleGetItem(func_5112_call(relay.reshape(var_6978.astype('bool'), [10, 7, 15]), relay.reshape(var_6978.astype('bool'), [10, 7, 15]), relay.reshape(var_6978.astype('bool'), [10, 7, 15]), ), 0)
call_6979 = relay.TupleGetItem(func_5117_call(relay.reshape(var_6978.astype('bool'), [10, 7, 15]), relay.reshape(var_6978.astype('bool'), [10, 7, 15]), relay.reshape(var_6978.astype('bool'), [10, 7, 15]), ), 0)
func_6285_call = mod.get_global_var('func_6285')
func_6288_call = mutated_mod.get_global_var('func_6288')
var_6985 = relay.var("var_6985", dtype = "bool", shape = (840,))#candidate|6985|(840,)|var|bool
call_6984 = relay.TupleGetItem(func_6285_call(relay.reshape(var_6985.astype('bool'), [840,])), 7)
call_6986 = relay.TupleGetItem(func_6288_call(relay.reshape(var_6985.astype('bool'), [840,])), 7)
uop_7006 = relay.log2(uop_6973.astype('float32')) # shape=(6, 4, 14)
uop_7008 = relay.log2(uop_6975.astype('float32')) # shape=(6, 4, 14)
var_7011 = relay.var("var_7011", dtype = "float32", shape = (6, 4, 14))#candidate|7011|(6, 4, 14)|var|float32
bop_7012 = relay.logical_xor(uop_7006.astype('uint32'), relay.reshape(var_7011.astype('uint32'), relay.shape_of(uop_7006))) # shape=(6, 4, 14)
bop_7015 = relay.logical_xor(uop_7008.astype('uint32'), relay.reshape(var_7011.astype('uint32'), relay.shape_of(uop_7008))) # shape=(6, 4, 14)
output = relay.Tuple([call_6977,var_6978,call_6984,var_6985,bop_7012,])
output2 = relay.Tuple([call_6979,var_6978,call_6986,var_6985,bop_7015,])
func_7034 = relay.Function([var_6978,var_6985,var_7011,], output)
mod['func_7034'] = func_7034
mod = relay.transform.InferType()(mod)
mutated_mod['func_7034'] = func_7034
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7034_call = mutated_mod.get_global_var('func_7034')
var_7036 = relay.var("var_7036", dtype = "bool", shape = (1050,))#candidate|7036|(1050,)|var|bool
var_7037 = relay.var("var_7037", dtype = "bool", shape = (840,))#candidate|7037|(840,)|var|bool
var_7038 = relay.var("var_7038", dtype = "float32", shape = (6, 4, 14))#candidate|7038|(6, 4, 14)|var|float32
call_7035 = func_7034_call(var_7036,var_7037,var_7038,)
output = call_7035
func_7039 = relay.Function([var_7036,var_7037,var_7038,], output)
mutated_mod['func_7039'] = func_7039
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6122_call = mod.get_global_var('func_6122')
func_6123_call = mutated_mod.get_global_var('func_6123')
call_7041 = relay.TupleGetItem(func_6122_call(), 0)
call_7042 = relay.TupleGetItem(func_6123_call(), 0)
output = relay.Tuple([call_7041,])
output2 = relay.Tuple([call_7042,])
func_7051 = relay.Function([], output)
mod['func_7051'] = func_7051
mod = relay.transform.InferType()(mod)
mutated_mod['func_7051'] = func_7051
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7051_call = mutated_mod.get_global_var('func_7051')
call_7052 = func_7051_call()
output = call_7052
func_7053 = relay.Function([], output)
mutated_mod['func_7053'] = func_7053
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6945_call = mod.get_global_var('func_6945')
func_6947_call = mutated_mod.get_global_var('func_6947')
call_7089 = func_6945_call()
call_7090 = func_6945_call()
const_7093 = relay.const([[[True,True,True,False,True,True,True,True,False,False,False,False,False,False],[True,True,False,True,False,True,False,True,True,False,False,True,False,False],[False,False,False,True,False,True,False,True,False,True,False,True,False,True],[True,False,True,False,False,True,True,False,False,False,True,True,False,False]],[[True,True,False,True,True,False,True,True,False,True,False,False,False,True],[True,False,False,False,True,True,False,True,True,False,True,True,False,False],[True,False,False,False,True,False,True,True,True,False,False,True,True,True],[True,False,False,True,False,False,True,True,True,False,False,False,False,True]],[[False,False,False,True,False,False,True,False,True,False,True,False,True,True],[True,False,False,False,False,False,True,True,False,True,False,False,True,True],[False,True,False,False,True,False,True,True,True,False,True,False,True,False],[False,False,False,True,False,False,True,True,True,True,False,True,False,False]],[[True,True,True,False,False,False,False,True,False,False,False,True,False,False],[True,True,False,True,True,False,False,False,True,False,True,False,True,True],[True,True,True,True,False,True,True,False,True,True,True,True,True,True],[True,False,True,False,True,False,False,True,False,False,True,True,False,False]],[[True,True,True,True,False,False,False,False,True,True,False,False,False,True],[False,False,True,True,False,False,True,True,False,True,False,True,False,True],[False,False,True,False,False,False,True,False,True,True,True,False,False,True],[True,False,True,True,False,False,False,False,False,True,False,True,True,False]],[[False,True,False,False,True,True,False,True,False,True,False,True,False,True],[True,False,False,False,True,True,True,True,True,True,False,False,True,False],[True,False,False,True,True,False,True,False,False,False,False,False,True,False],[True,False,True,False,False,True,True,True,True,False,True,False,False,True]]], dtype = "bool")#candidate|7093|(6, 4, 14)|const|bool
bop_7094 = relay.mod(call_7089.astype('float64'), relay.reshape(const_7093.astype('float64'), relay.shape_of(call_7089))) # shape=(6, 4, 14)
bop_7097 = relay.mod(call_7090.astype('float64'), relay.reshape(const_7093.astype('float64'), relay.shape_of(call_7090))) # shape=(6, 4, 14)
output = bop_7094
output2 = bop_7097
func_7103 = relay.Function([], output)
mod['func_7103'] = func_7103
mod = relay.transform.InferType()(mod)
output = func_7103()
func_7104 = relay.Function([], output)
mutated_mod['func_7104'] = func_7104
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6385_call = mod.get_global_var('func_6385')
func_6387_call = mutated_mod.get_global_var('func_6387')
call_7154 = relay.TupleGetItem(func_6385_call(), 0)
call_7155 = relay.TupleGetItem(func_6387_call(), 0)
const_7162 = relay.const([[[False,True,True,True,False,False,True,False,True,True,True,True,False,False],[False,True,True,False,False,True,False,False,False,False,True,True,False,False],[False,True,True,False,True,False,True,True,False,False,False,False,True,True],[True,True,True,False,False,True,False,False,False,False,False,False,True,False]],[[False,True,False,False,True,True,False,False,False,True,True,False,False,True],[False,True,False,False,True,False,False,True,True,False,False,True,True,False],[True,False,False,True,True,True,True,False,False,True,False,False,True,False],[True,True,True,True,False,False,True,True,False,True,True,True,False,True]],[[False,True,True,True,True,False,True,False,True,False,True,True,False,True],[False,True,True,True,False,True,False,False,True,False,False,True,True,True],[False,True,False,False,False,True,True,True,True,False,False,False,True,True],[False,True,False,False,False,False,True,False,True,True,False,False,True,False]],[[True,True,True,True,False,True,True,True,True,False,False,False,True,False],[True,False,True,True,True,False,True,True,False,False,True,True,True,True],[True,True,False,False,False,True,True,False,True,False,True,False,False,False],[False,True,False,True,True,False,False,False,False,True,True,False,True,False]],[[True,True,False,False,False,False,False,False,True,True,False,False,True,False],[False,True,False,True,True,False,False,False,False,True,True,False,False,False],[False,False,True,True,True,True,True,True,True,True,True,False,False,True],[True,True,True,True,True,True,False,False,False,True,False,False,False,True]],[[True,False,False,True,False,True,True,True,False,False,False,True,False,True],[True,False,True,False,False,False,False,True,False,False,True,False,True,True],[False,True,True,True,False,True,True,False,False,False,False,False,False,False],[True,False,False,False,True,True,True,True,True,True,False,True,True,True]]], dtype = "bool")#candidate|7162|(6, 4, 14)|const|bool
bop_7163 = relay.divide(call_7154.astype('float64'), relay.reshape(const_7162.astype('float64'), relay.shape_of(call_7154))) # shape=(6, 4, 14)
bop_7166 = relay.divide(call_7155.astype('float64'), relay.reshape(const_7162.astype('float64'), relay.shape_of(call_7155))) # shape=(6, 4, 14)
bop_7167 = relay.right_shift(const_7162.astype('int16'), relay.reshape(call_7154.astype('int16'), relay.shape_of(const_7162))) # shape=(6, 4, 14)
bop_7170 = relay.right_shift(const_7162.astype('int16'), relay.reshape(call_7155.astype('int16'), relay.shape_of(const_7162))) # shape=(6, 4, 14)
func_2833_call = mod.get_global_var('func_2833')
func_2836_call = mutated_mod.get_global_var('func_2836')
const_7178 = relay.const(-8, dtype = "uint64")#candidate|7178|()|const|uint64
var_7179 = relay.var("var_7179", dtype = "uint64", shape = (147,))#candidate|7179|(147,)|var|uint64
call_7177 = relay.TupleGetItem(func_2833_call(relay.reshape(const_7178.astype('uint64'), []), relay.reshape(var_7179.astype('uint64'), [7, 7, 3]), ), 0)
call_7180 = relay.TupleGetItem(func_2836_call(relay.reshape(const_7178.astype('uint64'), []), relay.reshape(var_7179.astype('uint64'), [7, 7, 3]), ), 0)
func_908_call = mod.get_global_var('func_908')
func_912_call = mutated_mod.get_global_var('func_912')
const_7184 = relay.const([9.310043,-3.867345,4.456800,-8.893407,8.391665,-7.018878,-7.433884,-0.776459,-3.968692,9.378255,3.036626,-0.551701,9.119617,-7.163680,-1.362163,4.024935,4.952074,0.050895,-4.771124,8.961919,2.010678,-9.958429,1.908362,-2.064491,-6.319582,5.698288,2.953028,8.987995,0.192597,-3.483991,2.934517,4.996992,8.920903,4.509799,-7.925902,-9.407078,8.236751,1.337968,5.157561,-2.445768,-7.057785,9.966111,1.467682,-0.373875,-0.926353,-0.604368,-8.667325,-7.482410,-3.670821,6.748541], dtype = "float64")#candidate|7184|(50,)|const|float64
var_7185 = relay.var("var_7185", dtype = "float64", shape = (126,))#candidate|7185|(126,)|var|float64
call_7183 = relay.TupleGetItem(func_908_call(relay.reshape(const_7184.astype('float64'), [1, 10, 5]), relay.reshape(var_7185.astype('float64'), [126,]), ), 0)
call_7186 = relay.TupleGetItem(func_912_call(relay.reshape(const_7184.astype('float64'), [1, 10, 5]), relay.reshape(var_7185.astype('float64'), [126,]), ), 0)
func_5112_call = mod.get_global_var('func_5112')
func_5117_call = mutated_mod.get_global_var('func_5117')
var_7188 = relay.var("var_7188", dtype = "bool", shape = (1050,))#candidate|7188|(1050,)|var|bool
call_7187 = relay.TupleGetItem(func_5112_call(relay.reshape(var_7188.astype('bool'), [10, 7, 15]), relay.reshape(var_7188.astype('bool'), [10, 7, 15]), relay.reshape(var_7188.astype('bool'), [10, 7, 15]), ), 1)
call_7189 = relay.TupleGetItem(func_5117_call(relay.reshape(var_7188.astype('bool'), [10, 7, 15]), relay.reshape(var_7188.astype('bool'), [10, 7, 15]), relay.reshape(var_7188.astype('bool'), [10, 7, 15]), ), 1)
output = relay.Tuple([bop_7163,bop_7167,call_7177,const_7178,var_7179,call_7183,const_7184,var_7185,call_7187,var_7188,])
output2 = relay.Tuple([bop_7166,bop_7170,call_7180,const_7178,var_7179,call_7186,const_7184,var_7185,call_7189,var_7188,])
func_7195 = relay.Function([var_7179,var_7185,var_7188,], output)
mod['func_7195'] = func_7195
mod = relay.transform.InferType()(mod)
mutated_mod['func_7195'] = func_7195
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7195_call = mutated_mod.get_global_var('func_7195')
var_7197 = relay.var("var_7197", dtype = "uint64", shape = (147,))#candidate|7197|(147,)|var|uint64
var_7198 = relay.var("var_7198", dtype = "float64", shape = (126,))#candidate|7198|(126,)|var|float64
var_7199 = relay.var("var_7199", dtype = "bool", shape = (1050,))#candidate|7199|(1050,)|var|bool
call_7196 = func_7195_call(var_7197,var_7198,var_7199,)
output = call_7196
func_7200 = relay.Function([var_7197,var_7198,var_7199,], output)
mutated_mod['func_7200'] = func_7200
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7215 = relay.var("var_7215", dtype = "float64", shape = (8, 14, 9))#candidate|7215|(8, 14, 9)|var|float64
const_7216 = relay.const([[[7.338040,5.931551,-9.176884,-0.855080,-1.360797,6.307138,1.438099,3.359810,-3.940156],[2.099700,-9.490694,-5.874500,2.798104,-6.449511,-5.634646,8.630600,-4.178075,9.657332],[9.420275,-5.864287,0.499515,-2.485567,6.109112,5.998573,-9.806493,-6.872555,1.829567],[-9.449232,7.892029,-9.897712,-1.201510,8.090097,-6.551325,9.203486,3.056908,-6.809810],[0.157711,1.436124,-3.660335,-0.817647,1.575936,-1.282044,6.850025,7.884088,8.728515],[-1.650548,7.663178,8.848495,-8.676030,8.586846,-7.173715,1.962270,6.145084,-4.957349],[6.599871,-2.817875,0.607155,9.653959,4.880413,8.351894,0.769179,6.068985,-2.745068],[-4.524390,2.911587,-8.618689,9.608901,-1.089911,-6.186520,2.964551,7.047800,-9.487329],[-3.315563,-5.339001,2.398742,-6.142311,0.295651,0.935570,-4.217677,4.870388,-7.691459],[2.948660,7.136333,-2.588384,-1.875465,0.512545,3.557109,9.311840,-2.779949,-0.093716],[1.355958,-2.369374,-2.372239,-0.512777,8.724039,-3.774761,5.093601,-9.969685,6.738062],[-8.272042,-9.514553,-7.748471,-9.867564,2.103305,5.480850,-2.272387,-3.191435,9.466557],[-5.845459,-8.914472,3.620709,2.512731,-6.260338,3.083968,-1.038687,-9.873587,-7.869436],[8.998474,-7.324981,7.208327,-4.218823,-9.018432,-6.700657,6.435752,-6.736638,-9.293181]],[[-9.741460,-5.804989,0.632243,1.697003,-9.721137,-4.364351,-1.841310,0.804963,-0.921748],[-2.944574,-8.180234,-4.548298,-8.972807,5.677786,7.806745,7.835851,-0.543152,-6.324118],[2.801674,5.488004,7.101244,-2.322005,3.218125,-2.687624,-3.902223,-3.924382,-5.087817],[5.687643,-6.388055,3.963738,0.918224,-2.212578,-4.196433,8.270916,-7.304231,0.526295],[9.487072,0.463015,5.286285,-1.488723,-7.377931,-3.782959,6.231118,1.877442,8.784970],[3.339199,7.369176,-4.225908,6.514783,-7.209886,-2.589175,7.019823,0.335540,0.688438],[2.524287,7.038638,-2.143258,-2.218290,5.723449,-6.988710,-9.013390,6.378573,1.912280],[0.817999,-0.536773,-0.475797,-6.178291,-6.582456,-1.669200,-4.272895,8.660766,8.661322],[-7.580568,-8.999140,8.421136,-8.046118,-4.473787,-9.874179,1.734361,-3.506380,3.209447],[-5.332509,9.558457,1.425319,-2.386353,8.395419,2.587854,-1.834555,-0.752380,-4.693399],[8.232265,4.346656,-8.652986,6.964812,0.089752,2.667882,-5.532214,-0.125740,-2.348570],[5.047115,-3.342013,3.026478,2.492835,0.181920,-5.555357,5.151951,-1.465369,1.633080],[-1.401727,-0.602547,6.103964,-2.851872,2.527726,8.825664,2.546853,1.910538,4.611297],[5.948079,-5.870536,-6.403732,-4.460809,-0.552591,-9.231146,-3.644086,-5.689805,-0.355422]],[[-2.693707,5.794048,-4.758206,-9.088515,6.001214,8.603185,-2.861292,4.477307,8.703749],[5.238836,6.666460,-6.565124,2.935804,4.413196,8.576173,7.664240,-4.516017,9.943116],[2.219037,-5.592516,4.564154,9.704631,1.886005,-0.577628,-7.965576,-2.559600,5.299434],[2.540374,5.572044,-0.714707,5.055397,2.234828,-5.441874,-8.617297,-9.916609,-7.629102],[-3.556535,6.665685,-7.774068,-0.676808,3.045110,8.455958,5.217450,9.609837,3.700809],[0.746397,-5.703939,-8.122888,3.173700,-2.360531,-2.658035,-1.781776,2.903064,-8.625601],[8.340455,-5.254799,9.731262,-0.075011,3.914036,-8.839121,6.192907,7.280506,-2.043941],[2.809884,-6.061315,5.018339,-5.421736,6.946122,8.966063,-2.786126,-3.534308,9.132540],[-4.908309,-0.064163,7.077584,-3.575997,-9.999352,-1.901869,0.405087,-9.142294,-6.738074],[-0.213542,1.855052,-9.518655,7.340733,-5.257993,4.064727,-5.109169,5.633309,5.666552],[3.822891,6.434608,3.049631,-4.631951,8.871627,-4.346252,-1.757643,4.203093,-0.392162],[-4.227608,-1.611875,0.555479,-3.379917,1.942559,-6.626243,-1.302108,-3.914238,8.269157],[-0.908034,-8.738572,4.094684,2.768961,-8.430907,8.214413,-2.953742,-4.684302,-8.997623],[-7.164285,1.008832,-9.195189,1.311675,8.209154,8.699806,8.451132,-8.957376,1.142688]],[[0.182857,9.961755,7.944099,-1.861492,-8.899814,-6.219683,7.329632,9.845857,-0.351226],[-6.500744,0.356714,7.966231,5.350074,-1.177274,0.415103,2.796038,-0.004067,-4.610009],[1.185068,6.011233,6.701060,1.245607,-6.541344,-9.247314,-0.608505,-3.567912,-9.253867],[-5.112300,5.361902,-8.627294,7.252896,4.593451,-1.842794,6.409637,-2.371198,-3.489718],[7.511206,-6.164167,-5.438566,-5.414244,-2.872865,-3.382721,8.310753,-4.943063,8.396144],[0.907438,-9.357098,-7.670822,-2.971821,-8.117122,-5.482060,-4.846508,-5.516055,-1.002180],[1.385363,-8.667880,7.270210,5.175666,7.851793,5.491347,-4.546931,5.849279,8.916530],[6.635337,-3.799559,7.925607,-7.870580,-2.105611,-4.553413,-2.859570,0.858600,6.317213],[3.565040,9.888497,-2.907770,-4.573465,4.746309,6.753647,3.358665,-0.838246,0.306439],[5.529927,-5.931165,-8.672921,-5.329109,-0.975037,2.747531,-2.321612,-5.888422,-2.530526],[8.023343,7.920618,-7.038551,1.118112,-7.954932,4.120869,0.983037,9.067331,-0.551265],[1.162897,-0.166626,0.667103,6.712910,4.103115,9.151844,4.897258,-4.425322,-4.694331],[8.458664,-4.010066,5.973056,1.932862,-2.792063,-1.288611,1.429540,9.952148,-9.198121],[7.720722,9.664075,6.293779,-8.368043,0.475531,-0.130614,-6.051393,7.777342,1.814221]],[[-5.962842,-7.335992,1.631895,-2.338433,-6.837570,2.394587,-3.086328,-8.139262,4.841322],[-8.753549,-5.049602,-5.320283,5.371748,0.148328,2.039965,-6.961932,8.017602,1.198108],[2.592384,8.023830,1.730765,-6.461814,-1.505226,4.181877,8.585387,3.893943,9.131627],[-4.608382,-6.735817,-8.779623,-0.798369,-3.750268,0.468531,-9.512534,0.847410,-5.020112],[-8.203951,-3.851944,4.381674,-1.160541,3.317916,0.102661,8.487568,-1.889077,4.297611],[-1.555072,7.703297,1.449413,-1.850859,4.860470,-4.202983,-5.915832,5.273291,2.744228],[1.240583,7.995376,4.749263,4.754195,-7.128198,0.471327,-9.280393,9.323320,-7.427046],[-2.137741,-1.547733,-1.622411,8.904468,-7.522443,7.714089,-0.872164,1.579223,7.549690],[-9.933427,-1.281094,-5.780048,-4.379851,2.250709,-8.296679,-2.716935,-8.149893,8.973443],[5.633266,8.323593,8.640884,9.804636,8.067843,3.572934,-0.482565,-0.448372,-2.491712],[-9.940074,4.206738,-6.147696,2.522962,0.879743,7.024742,-5.368778,8.467688,-2.288561],[-0.236476,-8.708228,3.229878,-8.613893,8.913311,-3.816213,-4.082371,-2.930284,-4.012334],[3.761116,-6.471165,1.489559,3.540486,-8.442599,3.943113,1.486309,2.939504,-0.043367],[8.819247,-8.088773,9.788372,-6.983553,7.947962,8.846167,0.448386,8.051381,5.035384]],[[-6.726742,-6.591010,-7.193601,5.390561,9.883270,4.086367,1.705652,-0.670062,-1.394728],[-2.982452,8.323820,2.615490,4.501283,-1.148760,-8.913356,5.126330,-8.287758,-1.546712],[-4.916638,9.738484,-0.155805,0.082782,2.012623,7.127055,3.306944,4.369993,2.321860],[9.362303,8.665648,9.921673,-6.455971,-2.913131,-0.352234,0.274155,0.492734,-0.366683],[3.965903,2.408928,4.074073,-9.670676,9.747287,-5.908030,7.286467,1.360090,4.529291],[-1.589034,-5.344202,-2.941332,2.677642,9.788632,-4.332990,-8.023242,0.636735,3.905157],[-8.065776,7.720868,9.262179,-5.330250,4.070016,6.086287,-5.169204,-1.901647,0.408536],[8.723335,-6.809421,2.919879,-9.397573,4.876436,7.306834,4.272332,-7.211543,3.399460],[-0.296890,-7.064804,-4.699452,-9.135415,-5.546889,3.010492,4.803942,-0.335085,9.253445],[0.327328,-6.632709,7.590002,1.469350,2.150138,4.900509,2.357394,6.231748,9.395740],[0.682628,-0.632043,1.477621,8.776657,0.897750,-8.147628,3.640898,-4.382057,-8.852328],[-2.645818,-3.341681,-0.061181,-7.802931,3.927260,4.976317,7.134792,-5.550074,-0.832336],[1.025720,3.747393,-4.831762,6.382390,5.124495,5.597274,3.429135,2.590091,6.295315],[1.096327,0.529287,1.765216,-4.527194,5.392031,3.373061,-4.947806,-6.508775,1.780666]],[[6.146156,-0.103406,-9.759875,9.944520,2.403069,-7.900066,-3.018004,5.635040,-5.818509],[-3.463332,9.435766,-5.411366,-4.483926,-8.415280,-2.589937,3.823911,-7.491270,-0.443528],[4.195241,5.828369,-1.301472,0.730933,1.084563,-9.233219,-0.612328,-0.322243,-2.500730],[-4.794496,1.975832,3.029546,-5.924512,-5.108824,0.960052,1.394755,-4.581647,9.879374],[-2.009891,0.229584,7.371137,-3.096305,-5.729909,-5.273110,5.705901,6.676103,4.822925],[-6.815229,5.760975,-3.169253,8.623609,4.616554,-0.497718,-5.370001,-1.219382,3.599971],[4.816741,7.499506,-8.925470,-4.097563,-0.350418,9.875894,0.153099,7.421716,-5.535972],[5.420289,4.917151,3.935052,4.569653,7.129142,1.776892,-4.970094,-8.741725,-0.171427],[0.307005,-8.754795,3.243134,2.624087,3.965721,8.211070,-0.087651,4.707167,-7.612855],[-6.110694,-3.670508,9.328489,-1.429730,-5.179649,6.917211,9.770691,3.491817,-4.094800],[6.353226,5.442167,-7.116287,-4.848760,3.122658,-0.259360,-0.595127,-9.880939,-7.263898],[-6.281592,0.212387,6.568432,-2.735338,2.457593,-3.356160,-6.643831,1.115305,-5.602689],[-1.292910,-4.554315,-2.183670,9.795815,5.794111,0.825628,6.229072,-7.918554,-5.014222],[1.345313,9.358735,8.686685,-0.766230,5.132425,8.994924,7.804491,0.609756,-3.705089]],[[3.096722,-7.459441,2.216168,-0.251849,-8.759979,0.616551,1.266611,2.850726,9.600639],[-5.711823,-5.897118,5.502520,-6.613992,1.346822,-3.724709,4.527638,-0.727334,3.819895],[-6.664572,-3.393147,-5.994668,8.088858,3.359178,-0.676939,0.609459,-8.395976,4.202694],[-0.325968,3.009189,7.993651,8.074106,3.497773,-5.525326,5.993275,-1.833198,2.182984],[7.382458,-4.280510,6.347644,4.739108,-1.860263,-3.323544,1.059696,7.715380,1.211586],[-0.757781,2.072468,-6.576940,-4.562797,-8.267651,3.128616,-3.382938,6.439566,4.263668],[3.045694,0.048264,6.108594,8.718407,-6.838018,7.332218,0.608615,-6.075457,7.954598],[2.811741,-2.604290,-4.613396,4.724112,-8.330376,-1.177172,-2.489330,-6.022144,9.607001],[0.240800,-7.688587,4.239306,4.441567,-8.664607,0.270916,-4.381491,0.977850,3.012606],[1.080086,-1.221139,3.049197,3.423135,8.451162,7.344135,3.871961,2.352290,0.293895],[2.414197,-4.314482,-7.515557,6.805435,-9.512085,-4.335187,9.433973,-3.452208,9.775447],[-9.680049,4.461300,6.658790,-7.707408,-9.892480,-0.847416,-3.404635,-6.934665,5.867646],[-9.106614,-1.178732,-5.060013,-2.762379,-8.801080,8.656267,-9.429966,-7.779187,5.288547],[7.926252,0.762937,-4.545777,5.189043,2.449537,3.380013,-1.246103,-3.525327,-9.872802]]], dtype = "float64")#candidate|7216|(8, 14, 9)|const|float64
bop_7217 = relay.floor_divide(var_7215.astype('float64'), relay.reshape(const_7216.astype('float64'), relay.shape_of(var_7215))) # shape=(8, 14, 9)
func_5621_call = mod.get_global_var('func_5621')
func_5623_call = mutated_mod.get_global_var('func_5623')
const_7221 = relay.const([[-8.730419,2.214940,3.507858,3.715316,-6.105126,-4.405666,-2.312013,4.798066,3.637083,-7.659908,-2.118220,0.715631,2.559517,-1.380513,-0.791994,3.473235,-1.668324,5.672750,1.803147,-9.032492,5.118003,1.236347,1.535936,-7.872632,0.301750,-5.555853,-1.456546,-4.419880,-9.046796,9.380709,5.807400,4.347220,8.949948,-5.612259,9.441460,1.969112,3.356121,3.708767,5.616164,9.511884],[-1.003899,0.911972,1.559634,-8.122752,-7.619035,-1.023529,7.722502,3.368152,-8.429565,4.392011,-0.779731,-1.242408,8.526091,7.135420,7.421649,-9.666040,-9.751895,7.979238,8.223274,-9.455524,0.340466,-7.832705,-7.655084,-6.350321,4.243157,6.956866,-6.020601,5.634188,4.794166,-2.802086,1.058483,-2.873473,-8.979801,6.426096,6.625033,4.360439,9.628415,1.040973,3.011122,-4.649985]], dtype = "float64")#candidate|7221|(2, 40)|const|float64
call_7220 = relay.TupleGetItem(func_5621_call(relay.reshape(const_7221.astype('float64'), [20, 4])), 1)
call_7222 = relay.TupleGetItem(func_5623_call(relay.reshape(const_7221.astype('float64'), [20, 4])), 1)
output = relay.Tuple([bop_7217,call_7220,const_7221,])
output2 = relay.Tuple([bop_7217,call_7222,const_7221,])
func_7230 = relay.Function([var_7215,], output)
mod['func_7230'] = func_7230
mod = relay.transform.InferType()(mod)
mutated_mod['func_7230'] = func_7230
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7231 = relay.var("var_7231", dtype = "float64", shape = (8, 14, 9))#candidate|7231|(8, 14, 9)|var|float64
func_7230_call = mutated_mod.get_global_var('func_7230')
call_7232 = func_7230_call(var_7231)
output = call_7232
func_7233 = relay.Function([var_7231], output)
mutated_mod['func_7233'] = func_7233
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6048_call = mod.get_global_var('func_6048')
func_6050_call = mutated_mod.get_global_var('func_6050')
call_7262 = relay.TupleGetItem(func_6048_call(), 0)
call_7263 = relay.TupleGetItem(func_6050_call(), 0)
func_6285_call = mod.get_global_var('func_6285')
func_6288_call = mutated_mod.get_global_var('func_6288')
const_7324 = relay.const([False,True,False,True,True,False,True,False,False,False,True,True,True,False,True,False,False,True,False,True,False,True,True,False,True,True,False,False,False,False,False,False,True,False,False,False,False,True,True,True,True,False,False,True,True,True,True,True,False,True,False,True,False,True,True,False,False,True,False,True,True,False,True,False,False,True,False,False,False,True,True,False,False,False,True,True,True,False,False,False,False,False,True,False,False,False,False,False,True,False,True,False,False,True,False,False,False,False,True,True,False,False,True,False,False,False,True,False,False,True,False,False,True,True,True,True,True,True,False,False,False,True,False,False,False,False,True,True,False,False,False,False,False,True,False,True,True,True,True,True,False,True,False,False,False,True,True,True,False,True,True,False,True,True,True,True,True,False,False,True,False,False,False,False,True,False,True,False,False,False,False,False,True,False,False,True,True,False,False,True,True,True,False,False,False,True,False,True,True,False,True,True,True,True,True,False,True,True,True,True,True,True,False,True,True,False,False,False,False,True,True,False,False,True,False,True,False,False,False,True,True,True,False,False,False,False,False,False,True,True,True,False,False,True,True,True,False,False,True,False,True,True,False,True,False,True,False,True,True,True,False,False,False,True,False,True,True,True,True,False,False,False,False,True,False,False,False,False,False,False,False,True,True,True,False,True,False,True,False,True,False,True,False,False,False,False,True,True,True,False,True,False,True,True,True,True,True,True,True,True,True,True,False,False,False,True,False,False,False,False,False,False,True,False,False,True,False,False,False,False,False,True,False,True,True,True,False,False,False,True,False,False,True,False,False,True,True,False,False,True,True,False,True,False,False,False,False,False,False,False,False,False,False,False,False,True,True,False,True,False,False,True,False,True,False,False,False,True,True,False,True,False,False,False,False,False,False,False,True,False,True,True,True,True,False,True,False,True,True,True,True,True,True,True,False,True,False,True,False,True,True,True,True,False,False,True,False,False,False,True,True,True,True,False,False,True,True,False,False,False,True,False,False,False,True,False,True,True,True,False,False,True,True,True,True,True,True,True,False,True,True,True,False,False,True,False,True,False,False,True,False,True,True,False,False,True,True,True,False,False,True,True,True,True,False,False,False,True,False,False,False,True,True,False,True,False,False,False,False,False,True,True,False,True,True,False,False,False,True,False,True,True,True,False,False,False,True,False,True,True,True,False,False,False,False,True,True,True,True,True,True,False,False,True,True,False,True,True,False,True,False,True,False,True,False,False,True,True,False,True,False,True,True,False,False,True,True,True,False,False,False,False,False,True,True,False,True,True,True,True,False,True,True,False,True,True,False,False,False,False,True,False,False,False,False,False,False,True,True,False,True,True,False,True,False,False,True,True,True,True,True,True,False,False,True,True,True,True,False,True,True,True,True,True,False,True,True,False,False,False,False,True,False,True,False,False,True,False,False,False,True,True,True,True,True,False,True,False,True,True,True,False,False,False,False,False,True,True,False,True,False,True,False,False,False,False,False,True,False,False,True,True,True,False,True,False,False,False,False,True,True,True,True,True,True,True,False,False,True,False,True,True,True,True,True,True,False,True,False,False,False,True,False,True,True,True,False,True,True,False,False,False,False,False,True,True,True,True,False,False,False,True,True,True,True,False,True,True,False,True,True,False,True,True,True,False,False,True,False,True,False,False,True,False,False,True,True,False,False,True,False,False,True,False,False,False,False,True,True,False,False,False,False,True,False,False,False,False,True,False,False,True,False,True,True,True,False,True,True,True,False,True,True,True,True,True,True,False,False,False,False,True,True,True,False,True,True,False,True,False,False,True,False,True,True,True,False,True,False,True,False,True,False,False,False,False,True,False,False,False,False,False,True,True,True,True,False,False,False,False,True,False,True,True,True,False,False,True,False,True,False,False,False,True,False,False,True,False,False,True,False,True,True,True,False,True,False,True,True,False,True,False,True,False,True,False,True,False,False,True], dtype = "bool")#candidate|7324|(840,)|const|bool
call_7323 = relay.TupleGetItem(func_6285_call(relay.reshape(const_7324.astype('bool'), [840,])), 5)
call_7325 = relay.TupleGetItem(func_6288_call(relay.reshape(const_7324.astype('bool'), [840,])), 5)
func_5906_call = mod.get_global_var('func_5906')
func_5907_call = mutated_mod.get_global_var('func_5907')
call_7333 = relay.TupleGetItem(func_5906_call(), 0)
call_7334 = relay.TupleGetItem(func_5907_call(), 0)
output = relay.Tuple([call_7262,call_7323,const_7324,call_7333,])
output2 = relay.Tuple([call_7263,call_7325,const_7324,call_7334,])
func_7357 = relay.Function([], output)
mod['func_7357'] = func_7357
mod = relay.transform.InferType()(mod)
output = func_7357()
func_7358 = relay.Function([], output)
mutated_mod['func_7358'] = func_7358
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6385_call = mod.get_global_var('func_6385')
func_6387_call = mutated_mod.get_global_var('func_6387')
call_7375 = relay.TupleGetItem(func_6385_call(), 1)
call_7376 = relay.TupleGetItem(func_6387_call(), 1)
uop_7380 = relay.rsqrt(call_7375.astype('float32')) # shape=(6, 4, 14)
uop_7382 = relay.rsqrt(call_7376.astype('float32')) # shape=(6, 4, 14)
func_1966_call = mod.get_global_var('func_1966')
func_1969_call = mutated_mod.get_global_var('func_1969')
const_7394 = relay.const([[10,9,-9],[10,-9,9],[-4,-2,5],[9,9,-4],[6,-3,-9],[-7,2,7],[-7,1,-3],[-9,-5,1],[10,-10,4],[7,-8,-9],[7,6,-9],[3,1,3],[4,-8,-4],[-1,-10,5],[-6,4,-5]], dtype = "uint8")#candidate|7394|(15, 3)|const|uint8
const_7395 = relay.const([-6,-1,1,5,8,5,-10,3,3,-10,6,9,-8,-4,-5,-6,5,7,1,-7,10,3,6,-3,1,-3,9,-8,2,-1,-8,-9,-4,6,-8,8,-6,7,-8,-10,6,-7,3,1,7,4,8,-6,-2,10,9,10,-9,-7,9,-10,-1,7,10,1,3,3,-1,-6,3,-4,5,8,-1,3,-2,-5,9,7,2,-9,5,6,2,8,-9,-10,6,-10,-4,-7,5,-9,3,-6,-6,-2,8,7,-4,-7,-7,7,4,-10,-10,5,8,2,2,10,6,8,-4,5,-10,-10,9,2,-5,-2,-1,2,4,5,-5,-5,9,-6,8,2,2,-9,-9,4,3,-1,-6,-6,-9,6,5,5,-5,-10,10,5,4,-5,-4,7,9,-4,10,-3,10,-1,3,3,-6,-2,-5,-2,-10,-9,8,-2,5,1,-5,-4,-4,-1,2,-6,7,7,-7,-10,-8,1,-7,4,-8,-7], dtype = "uint8")#candidate|7395|(180,)|const|uint8
call_7393 = relay.TupleGetItem(func_1966_call(relay.reshape(const_7394.astype('uint8'), [3, 1, 15]), relay.reshape(const_7395.astype('uint8'), [3, 4, 15]), ), 0)
call_7396 = relay.TupleGetItem(func_1969_call(relay.reshape(const_7394.astype('uint8'), [3, 1, 15]), relay.reshape(const_7395.astype('uint8'), [3, 4, 15]), ), 0)
uop_7399 = relay.sin(uop_7380.astype('float64')) # shape=(6, 4, 14)
uop_7401 = relay.sin(uop_7382.astype('float64')) # shape=(6, 4, 14)
func_5621_call = mod.get_global_var('func_5621')
func_5623_call = mutated_mod.get_global_var('func_5623')
var_7410 = relay.var("var_7410", dtype = "float64", shape = (80,))#candidate|7410|(80,)|var|float64
call_7409 = relay.TupleGetItem(func_5621_call(relay.reshape(var_7410.astype('float64'), [20, 4])), 2)
call_7411 = relay.TupleGetItem(func_5623_call(relay.reshape(var_7410.astype('float64'), [20, 4])), 2)
uop_7412 = relay.acosh(uop_7399.astype('float32')) # shape=(6, 4, 14)
uop_7414 = relay.acosh(uop_7401.astype('float32')) # shape=(6, 4, 14)
uop_7417 = relay.erf(uop_7399.astype('float64')) # shape=(6, 4, 14)
uop_7419 = relay.erf(uop_7401.astype('float64')) # shape=(6, 4, 14)
output = relay.Tuple([call_7393,const_7394,const_7395,call_7409,var_7410,uop_7412,uop_7417,])
output2 = relay.Tuple([call_7396,const_7394,const_7395,call_7411,var_7410,uop_7414,uop_7419,])
F = relay.Function([var_7410,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_7410,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

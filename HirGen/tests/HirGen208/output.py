import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_63 = relay.var("var_63", dtype = "float32", shape = (15, 13, 7))#candidate|63|(15, 13, 7)|var|float32
uop_64 = relay.atan(var_63.astype('float32')) # shape=(15, 13, 7)
output = relay.Tuple([uop_64,])
output2 = relay.Tuple([uop_64,])
func_74 = relay.Function([var_63,], output)
mod['func_74'] = func_74
mod = relay.transform.InferType()(mod)
mutated_mod['func_74'] = func_74
mutated_mod = relay.transform.InferType()(mutated_mod)
var_75 = relay.var("var_75", dtype = "float32", shape = (15, 13, 7))#candidate|75|(15, 13, 7)|var|float32
func_74_call = mutated_mod.get_global_var('func_74')
call_76 = func_74_call(var_75)
output = call_76
func_77 = relay.Function([var_75], output)
mutated_mod['func_77'] = func_77
mutated_mod = relay.transform.InferType()(mutated_mod)
const_201 = relay.const([[[-7.267227,-0.511956,0.505816,-6.035590]],[[-5.663357,-6.311527,-0.698018,5.100738]],[[-6.272932,3.331763,-2.039478,-0.127820]],[[4.947507,1.680023,-1.129146,2.039382]],[[-3.426389,5.567180,5.616088,-9.904635]],[[-1.974233,8.038814,4.433190,5.977082]],[[-4.365181,-9.406898,-5.703761,7.270024]],[[-1.984823,-0.704285,-3.009601,8.157934]],[[7.643932,-2.952170,-8.815621,3.964821]],[[-7.668283,-5.608249,2.998026,5.925908]],[[-4.462770,-6.435502,1.848201,3.910920]],[[-2.168614,-4.234566,8.855317,8.465186]]], dtype = "float64")#candidate|201|(12, 1, 4)|const|float64
uop_202 = relay.cosh(const_201.astype('float64')) # shape=(12, 1, 4)
func_74_call = mod.get_global_var('func_74')
func_77_call = mutated_mod.get_global_var('func_77')
var_209 = relay.var("var_209", dtype = "float32", shape = (1365,))#candidate|209|(1365,)|var|float32
call_208 = relay.TupleGetItem(func_74_call(relay.reshape(var_209.astype('float32'), [15, 13, 7])), 0)
call_210 = relay.TupleGetItem(func_77_call(relay.reshape(var_209.astype('float32'), [15, 13, 7])), 0)
output = relay.Tuple([uop_202,call_208,var_209,])
output2 = relay.Tuple([uop_202,call_210,var_209,])
func_218 = relay.Function([var_209,], output)
mod['func_218'] = func_218
mod = relay.transform.InferType()(mod)
mutated_mod['func_218'] = func_218
mutated_mod = relay.transform.InferType()(mutated_mod)
var_219 = relay.var("var_219", dtype = "float32", shape = (1365,))#candidate|219|(1365,)|var|float32
func_218_call = mutated_mod.get_global_var('func_218')
call_220 = func_218_call(var_219)
output = call_220
func_221 = relay.Function([var_219], output)
mutated_mod['func_221'] = func_221
mutated_mod = relay.transform.InferType()(mutated_mod)
const_579 = relay.const([[[-1.503359,-3.713036],[-3.242319,7.493603],[-9.846596,-1.623644],[4.602173,3.102675],[-1.336020,9.640111],[-4.491844,-6.326481],[-8.413148,-6.533889],[2.181354,6.891047],[-5.940132,-9.669758],[-7.647851,-9.598014],[-1.997789,3.240145],[-3.556481,-5.459661],[-2.476091,9.695935],[1.024616,8.652135]],[[5.868877,9.174711],[-2.275869,-9.042880],[-6.420306,4.990895],[3.877089,1.218709],[3.939836,1.399169],[-2.149997,-9.115634],[5.038343,3.397685],[5.142059,-6.785229],[0.231561,-1.254450],[-2.286619,-4.862431],[5.072638,9.312397],[7.607988,0.821420],[-7.234716,-8.904938],[-3.234072,9.667447]],[[-2.382573,2.833202],[1.880153,-1.904560],[8.690844,-0.854492],[-1.551340,-5.039733],[5.943303,-7.933049],[-0.142566,8.767939],[-2.016515,9.128748],[-9.817072,-5.154716],[-2.686305,5.156639],[5.021500,-5.254163],[-4.668603,6.650884],[0.943789,-1.536587],[7.927647,7.891932],[-0.694723,-2.766682]],[[-5.222504,-3.348849],[-9.545156,5.667876],[-6.857158,0.715052],[1.759798,-4.962728],[-9.433207,-6.373719],[8.638088,-7.013263],[5.741004,-3.187914],[-5.479832,-3.324366],[8.934972,-5.969608],[8.324708,-4.090720],[-3.210111,9.230049],[8.960672,8.797650],[9.001999,5.605560],[-3.875064,-2.963111]],[[9.472889,-9.311360],[9.203088,-9.460025],[1.762468,0.987976],[-0.279993,-9.815400],[9.669094,-6.754689],[1.052183,-7.066354],[0.979385,1.031774],[-0.243059,9.874297],[-5.280373,9.371900],[-0.177043,-8.660441],[-4.651106,-5.851330],[1.639635,4.806108],[8.968962,0.134060],[3.142871,8.597038]],[[4.066205,0.570966],[-3.369364,0.950411],[-2.250816,5.933834],[-4.395448,-4.680067],[0.140467,-0.924406],[2.171285,6.928108],[7.076503,3.447100],[-3.693752,-9.080946],[0.754179,1.553813],[-9.221216,-5.607530],[-5.182746,-0.730935],[-0.320825,4.227102],[7.982270,-1.468271],[-1.384789,0.900837]],[[8.336786,-7.468418],[-1.994534,3.753670],[-3.594973,0.114469],[-2.907094,6.455616],[2.245304,3.867047],[-3.930894,0.620873],[-1.761825,-7.588540],[8.425934,6.452414],[-7.521704,0.144460],[-9.248749,-2.478775],[7.481376,7.581961],[-0.698497,-7.090598],[-0.606652,1.363446],[0.477806,6.210084]],[[-3.258619,-3.168438],[1.729571,-4.552278],[4.292344,-2.607568],[3.775640,3.437588],[4.730314,-9.603749],[7.152701,0.326717],[-0.637346,5.177028],[-3.952460,-0.086513],[-3.180852,-7.917137],[-4.336230,-0.407742],[-2.694160,5.591346],[0.234269,3.707944],[1.253524,-2.107148],[-7.714959,8.965195]],[[-8.141006,-4.181939],[1.631840,-9.733383],[3.286074,0.491011],[0.015914,-3.307880],[9.451823,1.700250],[-3.562456,6.625815],[-8.760069,-4.971859],[4.165574,-7.654621],[-3.853035,-0.703714],[1.476108,-4.085889],[-8.196649,-5.115612],[6.287092,8.408748],[-9.236980,7.295492],[3.250521,-5.427584]],[[3.751245,3.948921],[-3.409173,-3.148777],[-9.894617,-0.592963],[1.398744,1.868463],[9.058418,-9.473217],[-7.829468,1.781038],[-7.096729,8.099462],[4.157608,-2.054484],[-8.637257,9.417853],[7.202552,-9.192020],[1.054877,1.429340],[7.861014,-0.377922],[-8.732573,2.641107],[-6.607743,8.558937]]], dtype = "float32")#candidate|579|(10, 14, 2)|const|float32
const_580 = relay.const([[[7.808477,-7.813305],[0.750136,7.891422],[-1.385110,8.265600],[-9.811410,4.919651],[8.008249,-2.762361],[4.822154,-4.027236],[7.641141,2.609524],[-5.191840,5.012126],[7.672795,0.473845],[1.729243,-2.855538],[3.947491,-7.025544],[-6.773312,3.754032],[-9.262983,9.602042],[-3.956905,-4.032749]],[[-0.221036,-4.295508],[-0.954609,-7.100845],[9.069365,5.416466],[-9.920389,-8.915793],[5.793370,-0.844374],[7.714214,7.629167],[8.661176,1.974295],[8.524217,-2.047980],[-2.887149,-3.333118],[-3.181798,-0.934304],[-1.946716,-9.920824],[3.920996,-4.278112],[9.699293,-8.734709],[-7.987168,-1.920240]],[[-9.010730,8.134070],[7.521371,-9.251436],[-4.402892,1.323425],[7.489709,-7.200921],[2.134755,0.938972],[-5.043394,7.578885],[-9.107485,-7.669624],[2.109311,-0.771160],[-4.764035,4.138915],[4.676436,7.796053],[-8.474299,8.410681],[0.972775,9.928577],[-6.042436,4.301607],[-0.270459,8.774555]],[[3.851650,0.983687],[-7.400810,-5.503479],[7.032903,7.851711],[4.582167,-2.687394],[3.618444,-1.001049],[-9.322165,1.158905],[-2.951420,3.542177],[7.450415,2.019016],[-8.570535,3.046737],[-9.926757,7.245497],[-3.102567,6.985414],[-2.431012,4.100579],[8.763743,-0.599724],[-9.698315,-9.058895]],[[-2.047591,0.566653],[-3.269059,-5.201179],[-1.259923,-1.020692],[-5.377131,-7.502800],[-4.203367,-1.817383],[-5.307503,-1.123205],[6.002284,0.417026],[-0.519937,-9.650391],[1.349103,-1.946254],[-1.371885,-3.240765],[-3.861248,-4.260416],[-9.252828,8.557696],[-6.249159,1.343954],[-0.717648,-0.773809]],[[-1.390229,5.703021],[6.797158,-0.696416],[0.844630,0.069078],[9.434708,-6.273366],[-0.136987,-1.616521],[-5.945844,4.976111],[-7.749270,6.560067],[-5.310577,-8.087300],[8.947217,5.858360],[-4.357045,4.861875],[-3.795795,1.361615],[-6.429766,3.924698],[-6.739940,5.741231],[-6.144914,8.480272]],[[-8.291633,2.250561],[-5.594478,1.685692],[9.240396,9.790675],[-5.192353,6.329550],[1.055942,1.741185],[7.633694,-0.359082],[-6.778731,-7.434332],[-6.233291,1.974457],[-6.224223,9.718429],[2.090251,-3.718845],[9.719628,-2.783798],[-8.779330,-9.673075],[-5.450209,9.422935],[-0.966570,-4.791376]],[[9.010506,0.913444],[-6.734070,-0.017731],[1.264041,-9.287047],[3.288144,5.349619],[-3.330084,-5.265237],[-7.484391,-9.079043],[-6.948473,-5.465775],[3.630421,-1.457963],[3.481011,-9.986888],[-3.106299,-8.011426],[-3.098921,-4.514295],[2.265594,-4.600136],[9.691840,-0.443161],[0.571215,7.579324]],[[-7.705590,-2.325008],[-8.966769,-9.254457],[8.177612,9.424353],[-6.301679,8.646152],[-0.100198,-1.205899],[-2.344866,0.747834],[5.025981,5.575136],[-0.850796,3.480311],[-5.691097,-0.536971],[-0.687698,-5.258283],[9.514563,3.519234],[4.811809,-3.957330],[2.940028,2.506703],[5.426091,2.239732]],[[-7.887033,9.597244],[7.927622,3.695437],[5.962887,-5.001990],[-2.528989,1.045310],[7.843010,4.080905],[0.996575,-1.482694],[-9.161992,-2.406572],[9.849023,4.256123],[-8.496270,-7.922393],[5.885650,1.309681],[-3.846311,-7.825627],[-9.656636,-2.062265],[-6.205268,-7.545485],[-1.695019,-8.391280]]], dtype = "float32")#candidate|580|(10, 14, 2)|const|float32
bop_581 = relay.power(const_579.astype('float32'), relay.reshape(const_580.astype('float32'), relay.shape_of(const_579))) # shape=(10, 14, 2)
output = bop_581
output2 = bop_581
func_584 = relay.Function([], output)
mod['func_584'] = func_584
mod = relay.transform.InferType()(mod)
mutated_mod['func_584'] = func_584
mutated_mod = relay.transform.InferType()(mutated_mod)
func_584_call = mutated_mod.get_global_var('func_584')
call_585 = func_584_call()
output = call_585
func_586 = relay.Function([], output)
mutated_mod['func_586'] = func_586
mutated_mod = relay.transform.InferType()(mutated_mod)
func_584_call = mod.get_global_var('func_584')
func_586_call = mutated_mod.get_global_var('func_586')
call_624 = func_584_call()
call_625 = func_584_call()
func_74_call = mod.get_global_var('func_74')
func_77_call = mutated_mod.get_global_var('func_77')
var_627 = relay.var("var_627", dtype = "float32", shape = (1365,))#candidate|627|(1365,)|var|float32
call_626 = relay.TupleGetItem(func_74_call(relay.reshape(var_627.astype('float32'), [15, 13, 7])), 0)
call_628 = relay.TupleGetItem(func_77_call(relay.reshape(var_627.astype('float32'), [15, 13, 7])), 0)
output = relay.Tuple([call_624,call_626,var_627,])
output2 = relay.Tuple([call_625,call_628,var_627,])
func_637 = relay.Function([var_627,], output)
mod['func_637'] = func_637
mod = relay.transform.InferType()(mod)
var_638 = relay.var("var_638", dtype = "float32", shape = (1365,))#candidate|638|(1365,)|var|float32
output = func_637(var_638)
func_639 = relay.Function([var_638], output)
mutated_mod['func_639'] = func_639
mutated_mod = relay.transform.InferType()(mutated_mod)
func_584_call = mod.get_global_var('func_584')
func_586_call = mutated_mod.get_global_var('func_586')
call_703 = func_584_call()
call_704 = func_584_call()
output = call_703
output2 = call_704
func_707 = relay.Function([], output)
mod['func_707'] = func_707
mod = relay.transform.InferType()(mod)
output = func_707()
func_708 = relay.Function([], output)
mutated_mod['func_708'] = func_708
mutated_mod = relay.transform.InferType()(mutated_mod)
func_707_call = mod.get_global_var('func_707')
func_708_call = mutated_mod.get_global_var('func_708')
call_711 = func_707_call()
call_712 = func_707_call()
func_218_call = mod.get_global_var('func_218')
func_221_call = mutated_mod.get_global_var('func_221')
const_718 = relay.const([1.333561,6.781974,0.163563,0.431273,7.615616,1.552069,-5.150758,6.787680,-2.234945,3.236102,-8.827790,-4.795205,8.064612,9.344560,-4.339712,5.911639,7.449029,2.783038,1.093553,-5.775524,-3.015153,1.322680,-0.846922,4.145996,-1.823591,-9.214022,-0.775267,1.850622,-8.728814,-8.996339,-2.396451,-7.067574,-8.225580,-6.349907,-8.220776,-8.944201,-2.025273,3.651245,-0.774169,4.395749,-7.280378,0.336579,-9.972799,-0.565817,4.787470,8.158932,-3.331739,-0.106668,4.105069,9.366821,8.702417,2.489163,0.832762,-1.065533,6.083367,-8.816160,-6.804549,-5.155326,-5.339714,5.642278,2.143326,0.820099,-9.443145,2.748668,9.867580,9.132723,-4.162695,-4.677797,2.606889,-8.170614,2.520443,-0.208444,-6.567732,-2.924671,-4.755476,4.990959,3.145328,1.686809,-7.407856,5.295903,3.556273,-6.142813,3.120546,4.556706,8.862997,3.237436,-0.983802,-8.736874,-1.997237,-0.746432,-2.879221,4.791321,-0.409123,0.168247,0.509026,-3.886929,5.876913,-5.369917,-5.729219,-7.439059,9.646602,-1.084784,0.627070,7.366603,9.047541,-0.545224,9.258474,5.215620,9.894541,-2.716075,-7.148321,8.434330,7.103526,-6.801508,-1.885684,4.821405,6.235171,6.621550,2.217604,-1.965550,-6.064157,-6.884509,-8.671641,-7.190797,4.209298,-3.001348,5.124394,1.637988,-8.876744,-7.465097,-7.626558,-5.900110,9.398446,9.029096,-9.575075,-0.803426,-7.762896,-7.267808,-4.617228,-7.386876,8.715738,6.806362,3.945866,9.890225,6.362872,-5.714140,-0.511182,3.837585,-0.935701,-6.266545,-4.232129,-9.053476,6.762468,-2.815305,8.135377,4.774775,1.492017,6.255616,-4.950569,-9.711695,5.913279,4.210695,-9.773947,4.922718,5.830986,5.469129,-9.091218,1.973656,9.348483,-6.124060,-9.408165,6.543963,-2.244685,-0.557227,-8.738990,-9.978349,5.369047,6.015770,-8.061187,4.724192,-2.384493,-0.181287,-0.060782,-2.102823,1.466052,-4.318223,1.933159,3.091981,-1.732664,-9.432744,8.630562,-7.724180,-9.049477,-1.388220,9.716515,9.315524,-6.129910,-6.525634,3.202745,-1.752420,1.189538,-3.744537,5.410099,2.278939,-2.317189,-1.304808,-2.647166,-6.121513,-5.931166,-3.682387,-9.612710,4.944749,7.732505,6.297915,-7.430537,5.047272,-3.233354,-5.689063,0.784523,-9.382510,5.172964,4.362272,2.137770,2.983082,-6.041962,6.720732,3.441234,-5.040178,8.177611,4.746846,7.036647,0.911550,-8.196808,2.277785,6.048580,4.110693,-8.901678,2.222342,2.444406,3.229881,-4.097295,-7.190397,4.724433,-5.897281,4.247030,3.481156,-0.336259,-5.662236,-7.012512,-2.257738,0.408308,5.224092,8.827536,-4.651779,6.106025,-7.608318,-6.584704,3.388801,6.806647,-7.418299,9.770671,-0.587969,4.430582,-0.609286,-8.820794,2.887486,0.283086,-2.631716,7.749499,3.561344,-3.596659,-4.297589,-5.865029,6.634207,4.235850,-0.975451,4.685248,-5.802539,-2.917845,-4.896522,-6.615603,-7.734643,-1.310694,-1.776832,4.004238,-7.587977,8.596319,5.840997,-3.247823,-3.330970,-1.243933,-8.270292,1.208023,-2.953028,-6.225983,-7.664054,5.162147,-7.952541,0.396577,5.038155,-2.943678,6.935750,6.938453,1.860651,5.888611,6.575113,1.997561,5.915100,7.443577,-6.975542,-9.419139,-3.956909,8.679390,-2.667119,7.014260,-2.523563,2.132103,7.664997,-5.859779,3.359374,-8.873564,8.039140,-1.953083,-7.628640,8.554151,1.280941,-1.856627,8.021865,-2.020572,-8.735634,8.759813,1.262794,-2.356457,6.413838,-8.762759,-1.457932,-6.065505,-7.759037,-0.408948,-3.203117,2.270074,-7.225696,5.030489,2.567890,9.968916,1.616124,-8.735982,9.388729,3.240779,1.996212,3.901627,1.508157,-4.770481,7.097796,-6.764089,-5.733808,5.325382,8.331770,-5.613358,4.087816,5.970738,-5.761954,1.620612,-0.543526,7.618005,-7.106533,-6.666403,-6.363370,5.968513,5.336319,4.132811,5.329485,-6.368921,4.489635,-4.740330,-7.746396,9.322467,3.941648,5.936688,8.738941,-6.604052,3.389874,4.487326,5.711107,7.229645,4.968322,-6.012828,-7.957011,5.586638,9.548858,-2.563422,0.444911,-6.181776,-1.985851,7.535852,-3.105852,-1.512346,-4.567121,1.454322,-4.337096,-4.711909,7.252677,9.835058,-6.293763,1.599655,-3.853973,5.589932,5.946836,-2.886349,2.827642,-4.522621,7.417430,-9.015350,-3.864171,2.221021,-8.438921,-4.120198,-4.418800,8.610574,3.304617,-7.553230,-0.904081,2.189877,-4.148909,-7.790709,6.485803,3.035039,4.224722,-7.654967,-1.834017,-0.707942,-9.704575,-7.443974,-9.079981,3.337980,2.238331,2.261264,2.007182,4.038636,2.403091,-4.802189,-6.796675,7.433710,0.852397,-3.964056,-8.261187,-3.910143,5.795670,9.939316,6.047559,6.146058,5.210767,-2.424634,-2.727266,-6.771549,5.939694,-4.604700,-2.206448,2.070614,-8.103710,5.412154,0.259043,8.742322,6.811144,-2.008992,5.746264,3.188464,8.220233,3.741732,0.634773,4.798208,-8.301606,7.001572,2.007225,-8.940976,-4.530339,-2.736548,-2.197778,-1.715096,0.985801,-6.460215,9.595053,1.589126,5.773827,-2.989469,-7.331689,-1.918890,0.296383,5.093109,-3.915017,-3.892380,-3.443135,-2.642499,-8.620120,-1.586091,-1.069969,-6.346278,-5.405241,-9.721253,9.390882,-0.380903,-7.806049,-9.759511,-7.691871,-2.264461,-2.827568,3.905978,-4.463299,1.986664,0.648715,-2.244707,-1.647799,4.701166,-6.615055,-9.105566,-7.303778,0.256862,7.499671,-2.605794,1.365354,1.883140,-4.418282,-5.881114,-6.512384,4.417789,6.582143,5.332203,9.392977,-8.974147,-4.896309,4.276874,-5.163567,9.119708,-5.374051,0.419086,0.211463,2.298982,-2.891268,-3.881298,7.199905,-2.844281,9.983119,-3.694736,-3.143952,-1.260718,-5.557580,6.243366,-8.923240,-2.662679,-3.639263,-9.567874,-5.739085,7.713558,-3.659750,-1.863721,-1.385390,-4.313088,-2.343581,-8.767537,-9.121706,-2.184927,-9.822696,0.530648,-9.807852,6.489489,3.573489,-3.176013,-4.898777,-3.537861,6.724078,-0.932475,0.748916,3.769025,-3.892121,-3.069578,-6.602026,2.539772,-2.263754,6.942120,-0.420268,-0.916334,0.920263,-5.474244,-4.137765,-2.999310,1.875597,4.346762,2.734534,-1.744785,-2.599716,-4.691499,7.774393,2.857641,-4.171160,8.368208,-0.020526,2.542496,-0.017271,8.503299,-9.922154,5.584482,-4.007683,7.921616,4.908688,7.392452,-5.122401,8.369508,1.684251,-6.959210,6.977079,7.298863,3.695564,9.510445,-3.834144,-9.090797,-1.648165,-2.449218,3.700027,1.810237,9.580665,-9.037032,-4.319890,-2.484726,1.219343,-0.788060,-5.955596,-4.889664,-1.965887,7.159232,-1.610872,9.202600,5.274229,8.140295,6.657167,-5.602149,-4.169516,6.664037,-2.847913,-5.924930,-5.961401,-7.888410,-7.371972,-5.145579,9.471445,0.315579,0.188001,-0.721234,-1.665212,1.806751,-4.143153,9.444900,7.640880,-0.086741,-3.169926,4.380308,2.864834,5.935820,-4.015672,-2.715668,5.570648,9.878012,-9.881700,-6.551864,8.484701,2.346858,7.051393,-8.415046,3.269440,-7.297915,-9.465053,-3.084517,1.010359,6.152933,8.196639,1.269697,-8.027577,2.386358,9.941598,4.675730,-4.857607,-5.043201,0.771575,-7.424576,2.997751,-2.940905,-2.152644,0.630609,-3.854344,4.043184,-2.805561,3.417080,1.636184,-1.752132,-8.506165,0.711565,-2.343610,-8.143849,8.393384,-5.609674,0.856012,-5.316086,0.958308,4.127766,-7.223739,4.801279,-0.430248,2.374096,3.040095,-1.417262,-6.880287,-3.815273,8.085097,-6.548219,1.060594,-3.356484,-6.748948,-0.907483,-1.502824,6.373066,-6.953961,-1.748654,6.865921,-1.406299,7.991269,-2.078251,5.969313,-9.194046,5.007750,8.460387,1.921398,5.256755,-2.091758,7.394213,-9.666588,0.132708,7.367378,9.181756,-5.681663,1.240956,-0.456347,3.278805,0.585709,-9.233241,-3.723126,4.371790,1.203532,2.959650,6.879713,0.228958,-7.448075,-0.379893,-9.670336,-4.382518,-2.170492,-1.235808,-9.181039,-7.656373,1.348122,-3.191520,-6.899446,7.666323,8.496896,3.600020,9.923186,-5.823289,4.586113,5.310052,-0.201175,-2.903715,8.196133,0.189557,-1.337721,6.630302,-7.927398,-0.390992,-9.067911,8.845891,-7.751502,-5.086331,3.858328,4.667245,4.433697,-3.597568,6.204790,-7.838048,0.885960,-7.604114,1.069868,8.852766,7.244433,-1.040870,1.710335,8.179395,-2.981528,5.920232,-0.491037,2.282043,5.209167,9.840158,-2.627793,4.318529,4.007404,-2.963141,-3.546275,6.569801,5.752534,9.458224,4.269163,-2.172790,-6.496057,7.929980,9.801207,-4.627401,-9.536433,9.893759,-5.370853,-7.892977,-8.675390,-8.207343,-7.352462,-2.727780,-1.716706,-0.923922,3.770835,5.758894,-1.700773,-6.599454,1.056864,-9.458590,6.579208,4.375510,-8.691223,7.881464,-7.042084,2.737399,6.852434,-0.416911,0.960712,0.567972,8.910339,-2.084235,9.412576,6.720418,-5.914817,-6.309485,0.381455,1.790705,2.143273,-7.177234,-5.532326,-8.522902,-1.284111,7.769524,2.450678,-1.671357,-8.516547,-9.628523,4.235955,-4.260536,8.430752,2.714417,-0.018504,8.565442,-4.329179,7.472248,0.741977,-6.078189,-3.648747,-3.431360,5.008239,4.073211,1.976231,1.633677,8.607447,-7.583190,2.805387,-7.458447,-5.162611,9.168809,8.993053,-3.216644,7.594462,-9.912311,-4.508204,3.579622,5.974405,9.583557,5.839621,-7.552655,9.063234,2.446318,-6.842116,-6.540773,7.310363,8.578821,1.376144,-0.125036,8.759540,-1.566426,3.281670,1.000073,-4.382418,4.312592,5.472423,0.862610,9.430131,8.900189,-4.350516,-6.990996,-8.325196,-9.393871,1.983965,-9.477259,-0.976513,4.790736,-6.217260,-9.343061,2.243947,-2.523535,1.545976,3.644358,7.439406,6.694757,4.670065,4.686680,4.037968,3.431340,-1.645945,6.617210,-5.553149,-7.434045,1.335498,-2.092939,2.206018,-9.570942,-6.665065,8.304604,-8.964340,7.263628,-9.676512,6.918848,-3.754109,9.764512,-2.734811,7.118147,0.758850,-9.097864,3.710656,7.039450,7.392816,4.607862,-0.353161,0.786332,9.134512,-5.379284,-0.111486,-6.808197,-1.748359,0.264403,-8.312909,0.052071,8.858259,8.438107,-0.575316,1.370469,-6.183430,6.162048,7.362358,3.231710,4.983192,-7.839672,-2.765809,6.402145,-0.966084,1.764428,5.948846,-4.274292,-2.902774,4.955273,7.066743,5.526257,-0.736676,-2.800606,5.271221,-0.648592,7.847395,-5.981447,8.629883,-9.490702,1.828051,5.770709,-6.949814,6.369167,9.317085,-4.465046,5.440825,-7.255132,-8.271396,9.766119,-8.672601,9.823119,-6.857839,4.217320,5.301983,-2.406142,-4.520795,1.324038,7.471555,8.643197,-4.833436,6.151527,8.009010,6.452683,-5.586261,-7.246897,-6.646464,-3.110905,4.363946,0.596172,1.844858,2.549533,0.533228,3.240057,3.095692,1.393592,-1.599284,1.937754,-9.121661,9.045481,3.897062,9.917999,6.014633,2.400559,-7.945642,8.838603,-8.486090,2.627464,-1.183930,-9.967724,1.802052,8.030673,8.756608,-2.295060,1.890192,-9.012256,3.332985,-6.233717,-9.101692,4.551722,-7.550829,-1.140341,-0.668591,-4.216838,-9.205526,-7.507205,-9.292278,5.591569,4.185560,2.862865,-4.636609,0.271027,-5.019800,-9.616422,7.716357,2.381471,9.123872,-7.379390,5.173445,-5.619793,-1.318220,5.617977,-6.716258,-2.795978,-6.910320,-0.872135,6.971070,-5.868034,8.181116,-2.228171,1.136393,7.037498,-3.245500,-1.259458,-4.492230,9.973604,6.061399,-2.686314,-5.027366,0.962789,-3.625268,8.743061,-9.245146,2.944053,-3.630062,-2.429220,7.559315,-5.620783,-5.509288,1.632942,4.827189,5.099453,-1.946919,-6.455978,-4.921501,3.785675,3.353326,-3.520961,2.565198,-7.253356,-5.919015,6.922653,-4.600498,0.942487,-9.845711,9.921726,5.132661,-7.883586,-6.329104,-1.995762,2.677492,-6.590059,-0.687016,-6.598766,-9.833030,-9.672866,3.330164,8.292978,7.490473,-7.658239,5.827353,-7.587686,-4.401577,-0.020394,7.672534,3.579143,0.544005,-6.678401,2.896897,3.172366,8.992155,-7.199595,9.407156,-8.126312,-9.616233,-6.104595,-2.368999,-6.845644,1.004883,-8.305152,-2.813048,7.963050,1.735869,8.601892,-5.985267,-2.375475,-6.425120,4.661167,-2.707615,3.839426,-9.025775,6.047981,-0.798958,-4.650868,-5.575466,-9.777455,-4.214335,-4.613336,8.547499,-6.928299,-8.921201,5.909335,3.442434,-9.521059,-1.067933,-2.106911,6.203464,-7.189518,-8.266865,-6.107414,2.384136,2.085083,-8.960951,0.777438,3.150573,-9.507558,-8.001829,6.375606,-3.177042,-5.357851,4.044974,3.826988,-8.831992,-7.817091,-2.432577,9.916221,4.183873,-3.996994,2.906174,-8.396004,3.895082,-7.461856,-6.017983,-9.355389,-6.239202,-0.472558,0.733073,-1.536573,7.815418,-1.763732,4.468665,2.922911,-0.306425,0.616277,8.797950,7.819392,-2.034392,-3.028935,2.054592,6.391912,5.523732,3.803623,2.156406,-7.236952,-6.569512,7.480727,7.842964,-1.654377,-4.760593,3.339160,2.073401,-2.606745,-5.123233,6.567620,8.382027,8.908500,-4.487820,-3.139522,6.227113,-2.829289,9.790682,1.309802,-1.010980,5.802879,1.378610,-3.704305,7.416700,-5.373595,6.616099,5.772582,-7.425374,-8.040990,3.175224,6.239159,9.248467,-7.743806,9.539320,1.591096,0.168530,-5.454025,5.052243,-9.190842,5.534193,6.184351,-3.264407,-3.625430,5.890771,8.447025,0.133160,6.307279,-7.731788,9.164483,-7.277866,3.500447,7.448692,-8.783732,-3.413799,4.395816,-4.135116,-3.209631,5.261921,1.490528,1.044706,1.197877,9.540273,-7.447688,-2.638928,5.939275,-8.903732,1.353532,-7.744823,9.146328,-4.069236,3.968919,2.894848,6.305168,-7.461580,8.810002,1.044140,-2.887386,-0.880344,-4.962056,-2.528494,5.757627,-4.916808,9.843666,-6.856713,2.891725,7.932954,6.673935,-3.365035,-3.251919,-7.271107,0.245337,-7.963546,-5.839099,-0.431438,-8.619537,1.302213,8.934331,-5.093473,-7.987641,8.245753,4.304613,-0.697803,8.026911,3.266197,2.712809,-2.882142,2.801813,-3.203265,8.633170,-4.023813,-7.641727,8.968164,2.233742,-6.766922,-9.311077,3.564940,-1.832088,9.769162,-8.324718,6.745619,-2.538557,-7.393811,0.319302,2.603719,2.165788,-6.399943,1.908139,-7.161574,6.244783,4.458039,-3.147289,3.339178,-4.707844,9.719448,7.427131,3.345103,-6.717649,7.249738,-9.358448,-0.106107,-0.570623,5.742623,-2.325889], dtype = "float32")#candidate|718|(1365,)|const|float32
call_717 = relay.TupleGetItem(func_218_call(relay.reshape(const_718.astype('float32'), [1365,])), 1)
call_719 = relay.TupleGetItem(func_221_call(relay.reshape(const_718.astype('float32'), [1365,])), 1)
func_707_call = mod.get_global_var('func_707')
func_708_call = mutated_mod.get_global_var('func_708')
call_720 = func_707_call()
call_721 = func_707_call()
func_637_call = mod.get_global_var('func_637')
func_639_call = mutated_mod.get_global_var('func_639')
call_722 = relay.TupleGetItem(func_637_call(relay.reshape(const_718.astype('float32'), [1365,])), 0)
call_723 = relay.TupleGetItem(func_639_call(relay.reshape(const_718.astype('float32'), [1365,])), 0)
output = relay.Tuple([call_711,call_717,const_718,call_720,call_722,])
output2 = relay.Tuple([call_712,call_719,const_718,call_721,call_723,])
func_740 = relay.Function([], output)
mod['func_740'] = func_740
mod = relay.transform.InferType()(mod)
mutated_mod['func_740'] = func_740
mutated_mod = relay.transform.InferType()(mutated_mod)
func_740_call = mutated_mod.get_global_var('func_740')
call_741 = func_740_call()
output = call_741
func_742 = relay.Function([], output)
mutated_mod['func_742'] = func_742
mutated_mod = relay.transform.InferType()(mutated_mod)
func_584_call = mod.get_global_var('func_584')
func_586_call = mutated_mod.get_global_var('func_586')
call_852 = func_584_call()
call_853 = func_584_call()
uop_856 = relay.erf(call_852.astype('float64')) # shape=(10, 14, 2)
uop_858 = relay.erf(call_853.astype('float64')) # shape=(10, 14, 2)
func_707_call = mod.get_global_var('func_707')
func_708_call = mutated_mod.get_global_var('func_708')
call_860 = func_707_call()
call_861 = func_707_call()
func_74_call = mod.get_global_var('func_74')
func_77_call = mutated_mod.get_global_var('func_77')
var_898 = relay.var("var_898", dtype = "float32", shape = (1365, 1))#candidate|898|(1365, 1)|var|float32
call_897 = relay.TupleGetItem(func_74_call(relay.reshape(var_898.astype('float32'), [15, 13, 7])), 0)
call_899 = relay.TupleGetItem(func_77_call(relay.reshape(var_898.astype('float32'), [15, 13, 7])), 0)
func_74_call = mod.get_global_var('func_74')
func_77_call = mutated_mod.get_global_var('func_77')
call_907 = relay.TupleGetItem(func_74_call(relay.reshape(var_898.astype('float32'), [15, 13, 7])), 0)
call_908 = relay.TupleGetItem(func_77_call(relay.reshape(var_898.astype('float32'), [15, 13, 7])), 0)
uop_914 = relay.log10(uop_856.astype('float64')) # shape=(10, 14, 2)
uop_916 = relay.log10(uop_858.astype('float64')) # shape=(10, 14, 2)
output = relay.Tuple([call_860,call_897,var_898,call_907,uop_914,])
output2 = relay.Tuple([call_861,call_899,var_898,call_908,uop_916,])
func_920 = relay.Function([var_898,], output)
mod['func_920'] = func_920
mod = relay.transform.InferType()(mod)
var_921 = relay.var("var_921", dtype = "float32", shape = (1365, 1))#candidate|921|(1365, 1)|var|float32
output = func_920(var_921)
func_922 = relay.Function([var_921], output)
mutated_mod['func_922'] = func_922
mutated_mod = relay.transform.InferType()(mutated_mod)
func_740_call = mod.get_global_var('func_740')
func_742_call = mutated_mod.get_global_var('func_742')
call_924 = relay.TupleGetItem(func_740_call(), 4)
call_925 = relay.TupleGetItem(func_742_call(), 4)
uop_951 = relay.asinh(call_924.astype('float64')) # shape=(10, 14, 2)
uop_953 = relay.asinh(call_925.astype('float64')) # shape=(10, 14, 2)
output = uop_951
output2 = uop_953
func_960 = relay.Function([], output)
mod['func_960'] = func_960
mod = relay.transform.InferType()(mod)
output = func_960()
func_961 = relay.Function([], output)
mutated_mod['func_961'] = func_961
mutated_mod = relay.transform.InferType()(mutated_mod)
func_707_call = mod.get_global_var('func_707')
func_708_call = mutated_mod.get_global_var('func_708')
call_965 = func_707_call()
call_966 = func_707_call()
func_218_call = mod.get_global_var('func_218')
func_221_call = mutated_mod.get_global_var('func_221')
const_981 = relay.const([2.284046,0.820324,-0.265886,1.596899,-7.846760,-3.523398,3.113455,-2.222655,-6.614163,-7.409722,-2.434056,6.936929,-1.740256,-8.291189,-5.384082,5.574503,-2.377146,2.751580,-4.328431,-6.957344,1.618417,3.239125,0.277463,0.422933,1.791753,1.656818,-4.254571,4.814417,-6.713131,-1.311093,9.290395,-5.958181,-5.591320,-9.257592,-2.142609,8.301247,1.855718,-3.000326,-3.754214,-8.892936,-5.143336,-3.935364,1.677144,0.617936,1.439978,-2.261562,-9.996854,-1.728480,-0.993530,3.467130,4.779596,-0.340837,-5.605214,-2.946507,-8.620993,-0.819277,-5.833824,8.823522,-7.591934,3.288224,-1.045315,-9.185769,-9.235688,8.617129,7.608120,-3.299413,-3.466078,6.382312,8.935336,3.593824,0.315056,-7.446717,-3.646239,3.256760,9.580261,-9.753896,-9.542533,-7.365650,-9.258810,1.934666,-2.492847,-6.898296,-5.430039,1.030845,7.551901,9.403055,0.489051,-2.189921,0.512723,-0.175741,-9.885326,-3.767786,-0.994056,-5.896259,-4.147477,-6.570044,4.699830,6.648391,1.196930,0.687863,-8.144430,7.548506,8.419446,6.926618,2.562565,8.018277,4.196477,-7.597256,-0.152826,-2.274193,-5.173016,8.108656,6.276928,4.434039,-1.290440,-6.123600,7.674597,-0.457899,3.075388,0.281792,9.185753,2.663451,-2.376234,-7.759560,-3.264510,0.544319,-3.461692,-8.092409,-1.462121,-7.725349,-9.168582,6.949148,-3.461509,-7.073262,0.869305,-0.136965,-9.042830,4.725632,5.296023,7.170144,-4.930367,-3.108815,-9.229893,4.524773,-6.544721,0.382658,-1.278982,-9.799007,-0.486236,-9.273029,-6.266907,-7.208265,-5.353220,5.484234,-9.164571,8.191717,0.801738,9.070147,-2.374077,-3.071029,-1.856608,-3.456701,-5.193757,9.191255,9.941068,8.941442,-2.864659,1.593823,4.938925,-0.722696,8.954695,0.821055,0.218790,-2.747277,6.022721,-4.391711,-3.163402,-6.904814,1.018595,9.784002,0.028851,-7.489835,0.387084,2.347125,-0.884149,-6.020149,7.926895,-0.469726,-9.519133,1.272417,-9.672822,1.892155,-6.318734,2.564285,6.936333,-0.256534,1.929342,-4.219460,-6.546237,-7.458483,8.290410,7.227324,-2.127714,8.613548,-2.116439,-0.577609,-4.816260,-4.642859,0.908807,-9.203977,-2.450218,4.451039,9.087951,-6.561747,0.112544,-1.022374,2.757165,-3.426445,1.703848,-3.426040,-9.581683,-4.443068,-0.354695,5.335340,6.372271,-6.671945,-0.498474,4.793213,6.897017,-2.343629,-9.891750,3.979576,-4.879097,1.830278,7.904022,0.670349,-2.549019,-9.435724,-5.598610,-0.919445,8.214529,-8.913669,4.507039,7.335895,6.112730,6.860093,-2.254331,-8.888155,-0.571356,2.313038,5.301032,9.252933,-4.223776,2.787457,8.107239,-7.684497,-2.348986,4.006677,6.777165,7.256312,-4.876115,-5.177169,6.789168,2.934500,9.147833,-1.374995,8.577178,-5.719614,8.680240,4.146411,-3.705398,-1.213838,-6.059100,-3.409500,-6.588162,-5.864255,-6.419741,-5.759285,5.789451,-3.165384,-5.357676,-6.288766,-5.254894,7.241089,-3.092201,8.352149,3.776112,8.168683,8.968001,9.831079,9.332210,-0.562445,-6.426211,-9.826554,-1.149339,-1.590046,0.523762,-2.296575,-3.423173,9.083879,-3.839926,8.433320,-7.696900,4.809062,-1.683765,-1.115667,5.367726,5.649099,8.485005,6.677700,-5.806672,-4.937455,-0.044209,-0.271959,-8.375584,4.951005,-7.275895,-2.874922,-4.129995,-9.001574,-9.799355,-1.153782,0.547401,-7.837099,3.358643,-4.154832,5.568562,3.750084,8.963868,-3.971206,-3.146472,6.636471,-2.239658,9.616565,8.924807,0.549948,-1.275767,1.060122,-7.484194,-9.799056,-3.013872,5.535706,6.175133,7.102744,-8.156420,2.247562,-6.316113,9.130437,-4.221798,7.310825,-9.495437,-3.354407,-5.410807,-9.910453,6.758999,5.746707,5.688317,8.325781,6.321679,-0.406565,3.268850,-9.350275,-6.490923,-7.289786,4.771204,-0.178740,6.569043,-9.057348,3.147818,-9.654095,-0.349054,-6.361586,-3.371289,-1.771341,-8.412942,-7.829780,-6.863166,6.636936,-5.746025,-2.787344,6.624365,-4.797457,5.305713,0.776753,4.894280,5.335125,7.756313,-7.195308,3.417959,7.755374,5.066163,6.870558,8.637560,-3.834392,2.540694,7.449579,3.024416,1.679618,-3.896293,7.260111,-4.686207,4.997445,-0.832941,1.931771,2.074150,-2.256908,-3.849592,-0.797778,-5.463115,-8.989735,4.550468,7.834847,8.523192,9.699122,8.844257,4.751049,1.293882,4.436525,-3.969326,-2.813955,9.696344,-4.492812,-0.362816,6.473373,0.648914,-1.850475,0.009414,-3.703641,-0.583236,0.587925,-2.428332,2.342160,4.457412,-5.625372,-0.615539,4.480394,8.457995,4.604566,7.495361,-8.896026,-9.798444,1.484284,-8.940565,-8.897105,-0.451674,-8.542006,8.272914,-0.251579,-1.314788,-4.355322,8.243809,4.964057,-3.830820,1.997441,2.636321,-4.084784,-3.241192,-7.074494,3.717109,-7.046926,-6.531673,6.814497,-2.949255,-8.995325,-0.944773,0.526243,9.149899,-4.680355,-5.179504,0.824081,5.359785,9.293273,1.004637,6.942824,8.467081,-5.468308,-1.304143,7.171193,-4.331313,-7.527692,-8.765438,-5.771108,-6.263058,3.958065,-9.079553,-1.742196,1.054599,-2.950392,2.516173,4.225982,1.886727,-8.642260,3.766334,-0.802216,-2.587481,-7.422073,1.755136,-8.993184,0.731301,-1.467178,-6.516067,-1.792440,-3.971283,-3.806177,-2.377678,-4.771172,-6.025438,0.003967,-9.594085,8.744091,-3.494172,-2.122018,-8.048748,8.549194,-5.016457,-6.303623,4.230578,-0.027046,2.104213,7.871968,3.177681,3.161129,2.445417,5.761952,-7.020556,-6.604624,3.398141,-1.929427,5.102716,7.145621,6.745480,-9.412123,-1.504496,6.150564,5.766973,2.855502,-6.026328,-4.820979,-2.315702,-7.616119,-8.044838,7.781579,3.984460,-0.202899,-7.333696,-9.449754,0.354943,-2.875810,-4.140941,5.875356,-2.452313,-9.352647,9.085198,-9.176166,-6.862109,-8.379694,0.433400,-7.249937,-7.847683,9.831778,0.039929,-0.096463,-9.682064,-4.713904,-9.426992,8.980354,1.484345,-5.836260,-5.961761,-3.937583,2.009353,-5.859370,-8.906127,2.921017,4.590914,6.568583,-6.676419,8.597880,-4.591668,2.693889,3.315131,-8.250243,-5.231682,6.230512,5.419209,-4.206907,-8.768681,-4.460876,9.822118,1.158998,-6.330444,1.027956,8.587493,-8.247434,5.891455,-1.072091,-4.632516,2.219452,9.648331,2.931658,-6.295317,6.644759,-8.986508,7.396968,6.875040,-9.283811,-6.906369,1.407597,-1.682763,4.278799,0.702403,-1.866798,-7.350797,6.305830,-6.819438,0.095028,-4.908035,-6.987250,-5.302798,-7.343979,-6.294227,2.162261,2.209109,-8.104017,-0.683540,6.081263,-2.154604,9.523670,0.070471,-3.190918,-5.861862,-3.955441,0.916684,7.864740,-3.330689,6.436584,8.059957,3.661549,5.706608,-2.319173,-8.376412,-4.711897,-3.971967,5.939874,-5.170706,1.292790,6.419780,8.283921,-8.367679,-3.972303,-5.899365,-7.522282,2.688731,-6.712028,5.407350,-0.023003,-0.320274,-8.450749,1.915827,-2.172211,-5.637478,-8.574980,6.647732,-9.372668,-1.400401,8.089671,-9.544584,-0.001561,6.659871,8.558773,-4.062704,-7.969654,-5.117275,4.546929,8.121896,9.037391,0.037981,3.370650,8.040475,9.639421,5.857676,-5.248553,-4.898887,2.556903,-5.101997,-0.412493,-3.543548,8.522341,-9.886354,-2.750001,9.120188,2.803660,0.835963,6.732291,-9.722530,4.984273,2.366569,1.072584,-6.875001,-9.204793,8.839697,7.023316,4.168307,-9.691721,8.585355,5.490102,-1.946976,-9.798755,-8.111499,-5.539585,-7.632405,-3.806023,-7.181066,3.717684,-3.696443,2.313861,-0.607145,1.462388,5.312005,2.797068,1.926883,5.412365,6.468864,3.734803,-0.138271,-4.779758,7.396621,-7.379383,7.382604,6.779455,1.929598,9.980689,0.049305,-8.827941,1.661930,-3.692028,-2.581336,-5.187787,5.923197,1.682821,-8.507468,-0.658801,-1.588203,7.674085,-3.638427,4.691979,0.818424,7.403016,-1.766326,1.490570,-9.799534,-0.541206,-5.733794,-3.152379,-2.824455,2.847983,-0.916334,1.243973,-8.637937,-6.729059,6.950133,1.239799,-0.508464,2.407178,-4.308977,-6.007221,-8.051608,8.100254,-4.867158,-9.185951,-5.773736,1.831158,6.250719,8.269812,9.709949,-8.198790,-0.428672,7.401581,7.716245,8.053322,4.351011,-3.914481,-4.072833,-7.121210,2.715704,0.953514,-6.789426,-7.320650,6.208722,-1.456023,3.237151,0.077883,-9.761016,7.048895,-2.098550,7.858186,-1.366603,4.525099,0.068852,3.836680,9.081219,-7.598736,4.475632,7.872551,1.207188,1.934168,8.098078,-6.755198,0.765459,4.905818,-4.792508,-2.186386,-5.035695,2.940172,3.732583,-4.195482,3.993033,5.808064,-7.456313,-8.185149,-7.675014,-5.183382,-4.002988,5.204113,-2.506151,2.598949,3.721399,-6.512435,-1.617475,2.792884,-1.339821,-6.793629,5.509475,5.995938,-3.061130,0.396938,4.393896,-2.344757,-4.827253,-4.781861,-8.553124,5.150365,4.011691,4.705831,1.355001,6.969877,6.362545,0.570472,5.470101,-0.477707,-8.425066,-6.166049,1.201165,-1.280185,-8.306449,7.588581,-6.004412,-6.450617,-1.969480,1.389451,8.099299,6.506067,-7.285377,1.975416,6.693436,-1.490796,6.336905,-9.508449,0.529917,-1.666104,7.677425,2.019622,-9.832521,8.090883,9.107872,-8.614705,0.304411,2.980861,-4.382581,-3.743974,-5.266946,-0.492727,8.728681,6.905975,5.661593,8.661226,9.667865,-9.950322,-9.824947,-0.607343,1.957627,-5.465077,-7.533148,-8.389016,-1.425306,6.106333,1.062228,-6.800031,-9.492080,-1.599119,4.989072,-7.335735,-4.628750,-5.411081,-0.512711,-5.527045,6.732276,-1.037246,5.129863,8.834902,9.835330,-4.302556,-5.236061,-8.800230,-9.765114,-1.401640,-8.942486,-8.723892,2.785902,2.532301,6.511620,7.492075,5.993871,7.334731,8.850671,-5.781197,7.184802,8.662787,-5.636298,-7.808848,-3.834629,-0.344836,4.127536,9.227341,-5.837905,-5.395292,9.476172,-4.846620,0.326601,7.717179,-2.977881,-8.393755,-6.272748,9.845664,8.797634,-9.410289,-2.631259,-8.315268,1.850875,0.337050,-1.522721,-7.067593,0.222343,-0.715760,-4.387436,9.057830,-6.883990,-0.004140,-6.859894,0.822105,2.611493,4.047015,-4.548873,2.228347,-7.066127,4.780470,-4.811481,-6.995012,7.018746,-1.022772,-3.844597,-8.117900,2.444002,7.866813,6.780927,5.591052,-3.556772,-3.708813,-2.520786,5.973602,-2.158449,-6.946587,-9.556109,6.467080,5.157313,9.232108,5.171059,-0.286705,-8.507120,-5.311148,-1.331576,-8.549456,4.443915,-7.518551,-9.860744,-3.954926,-6.613645,3.152494,3.895057,-8.656576,-7.543676,-3.190913,-1.249636,7.325704,-9.966833,-5.651044,7.749547,-4.150255,3.625735,6.239032,-7.961134,2.394442,-4.844609,9.975662,6.064853,-5.155069,7.550634,7.688353,-6.243823,-6.458810,1.761932,1.330289,1.609932,4.205380,-8.235009,-4.162568,-6.795815,-5.366855,-4.995459,-1.948285,9.883880,6.278329,1.187499,-7.296076,9.780565,-8.402544,2.808322,-6.630500,6.738588,-4.031072,-6.539916,-2.023988,-5.418808,0.276949,-8.571985,-5.324007,-3.250548,-9.282148,-2.976826,4.140615,4.219711,-2.082246,-2.401093,7.628457,-0.598404,7.994625,-7.409499,3.253091,-4.444710,9.926935,-9.724187,2.493567,-8.609554,-5.759164,-1.069135,-0.093973,-3.129507,8.471057,6.408047,-3.762207,-4.969282,-3.241005,-6.928641,9.658302,-6.895196,4.330999,-6.658758,-1.109670,4.689921,3.348747,-9.035269,0.379948,2.812468,4.320239,-5.680910,-4.853714,-5.944208,2.339534,2.095165,8.852735,-9.299243,-5.072939,3.070675,3.406486,-0.716815,7.693363,-8.124561,8.678491,5.191353,1.619222,-8.619749,-4.563478,-0.236292,0.490532,-3.746928,-0.893572,-2.558259,8.845412,5.225906,-0.749136,0.065209,-5.451591,-6.767246,2.070522,7.346010,1.800352,1.949358,-0.860234,-6.079835,3.129570,-9.875227,6.808576,-5.138705,3.104169,4.442300,2.976912,8.772602,-6.542836,7.788938,0.412479,-2.253343,6.738403,-5.572865,-1.186735,9.426222,6.499334,7.165133,-6.112490,8.475384,7.981925,1.885718,1.825275,-5.459845,9.417529,-2.268278,-6.014273,1.356435,-3.308915,5.104996,-3.779493,-6.600580,0.973516,-2.709002,6.829952,4.725964,-4.581770,-0.065322,0.185088,-2.644756,-6.013374,3.909206,0.596111,-6.636437,-3.569067,-6.077554,8.670604,-4.836630,-4.658922,-7.096554,-5.255039,-6.893464,7.056921,-3.860389,-0.320815,9.267043,4.354621,3.831370,0.863400,-0.868607,-8.616267,4.955970,0.662349,-3.516556,-8.439598,-5.335614,-4.377224,-9.711886,5.757183,-6.277262,4.273555,-5.910071,-1.428091,5.901276,-8.878514,3.632659,9.208488,-9.863508,-3.007123,-3.762283,2.462737,1.392228,-9.123728,7.363293,-1.375826,1.341275,4.435165,4.207543,3.144878,-8.776872,-4.566930,-4.880196,-2.691278,6.976469,3.165281,8.859941,-0.466723,-0.900225,-6.599599,-0.602532,8.821049,-5.182332,0.247792,-3.821251,2.969105,-9.778251,-3.724563,4.618065,2.122071,7.331848,-6.561296,-2.564000,2.654340,8.699771,-0.927522,0.116895,5.524712,2.318550,6.862675,-6.223234,-6.675796,-8.739126,3.232099,9.240712,-3.753404,-6.779989,5.767035,3.958834,4.461824,7.366355,-1.001966,-2.609699,-6.787873,5.059722,5.149657,-4.878614,-8.764582,2.405634,-1.510320,6.041496,8.828185,-4.297194,-9.495427,-6.620160,-7.588759,4.550040,-8.961079,8.385547,5.512856,-9.787319,-3.857732,-8.085431,9.280322,-9.821748,-7.107940,9.117180,8.011828,6.426519,3.220023,-8.012045,1.044523,7.877930,9.905156,-7.403248,3.357323,6.673557,-8.444388,-7.689426,9.468528,4.620634,-5.343795,-4.887212,-7.639198,9.872592,8.412963,-0.967021,-9.784710,-9.688771,-0.878021,-8.624613,8.143856,4.021070,-5.661112,1.031386,-1.183397,8.333898,0.433658,0.437486,4.439094,-4.733510,-4.540875,6.008330,-5.379327,-3.082461,6.020771,-2.543733,-5.690231,-4.815396,5.518445,1.809535,-7.445003,1.710243,-5.489894,-0.440947,4.792017,-9.018854,8.709820,-9.669935,9.816979,-8.829986,-0.742897,7.978951,-5.370080,1.537057,1.703224,6.216606,7.959829,-7.090049,4.462914,-3.408207,9.594240,-6.174409,-0.198723,-4.843282,4.475720,-8.713518,9.193159,2.930029,9.972540,7.110801,7.227140,6.246844,3.661066,-6.126909,-7.284835,-5.884775,5.287292,-9.129782,9.360176,6.199811,4.290925,-4.875506,9.917702,-7.300834,-5.589861,1.100874], dtype = "float32")#candidate|981|(1365,)|const|float32
call_980 = relay.TupleGetItem(func_218_call(relay.reshape(const_981.astype('float32'), [1365,])), 0)
call_982 = relay.TupleGetItem(func_221_call(relay.reshape(const_981.astype('float32'), [1365,])), 0)
func_960_call = mod.get_global_var('func_960')
func_961_call = mutated_mod.get_global_var('func_961')
call_984 = func_960_call()
call_985 = func_960_call()
uop_1027 = relay.acos(call_984.astype('float64')) # shape=(10, 14, 2)
uop_1029 = relay.acos(call_985.astype('float64')) # shape=(10, 14, 2)
uop_1030 = relay.cos(uop_1027.astype('float64')) # shape=(10, 14, 2)
uop_1032 = relay.cos(uop_1029.astype('float64')) # shape=(10, 14, 2)
bop_1039 = relay.logical_xor(uop_1030.astype('int32'), relay.reshape(call_965.astype('int32'), relay.shape_of(uop_1030))) # shape=(10, 14, 2)
bop_1042 = relay.logical_xor(uop_1032.astype('int32'), relay.reshape(call_966.astype('int32'), relay.shape_of(uop_1032))) # shape=(10, 14, 2)
func_74_call = mod.get_global_var('func_74')
func_77_call = mutated_mod.get_global_var('func_77')
call_1046 = relay.TupleGetItem(func_74_call(relay.reshape(const_981.astype('float32'), [15, 13, 7])), 0)
call_1047 = relay.TupleGetItem(func_77_call(relay.reshape(const_981.astype('float32'), [15, 13, 7])), 0)
bop_1059 = relay.logical_and(uop_1030.astype('bool'), relay.reshape(call_965.astype('bool'), relay.shape_of(uop_1030))) # shape=(10, 14, 2)
bop_1062 = relay.logical_and(uop_1032.astype('bool'), relay.reshape(call_966.astype('bool'), relay.shape_of(uop_1032))) # shape=(10, 14, 2)
func_637_call = mod.get_global_var('func_637')
func_639_call = mutated_mod.get_global_var('func_639')
call_1070 = relay.TupleGetItem(func_637_call(relay.reshape(const_981.astype('float32'), [1365,])), 0)
call_1071 = relay.TupleGetItem(func_639_call(relay.reshape(const_981.astype('float32'), [1365,])), 0)
func_707_call = mod.get_global_var('func_707')
func_708_call = mutated_mod.get_global_var('func_708')
call_1075 = func_707_call()
call_1076 = func_707_call()
uop_1082 = relay.sinh(call_984.astype('float64')) # shape=(10, 14, 2)
uop_1084 = relay.sinh(call_985.astype('float64')) # shape=(10, 14, 2)
func_584_call = mod.get_global_var('func_584')
func_586_call = mutated_mod.get_global_var('func_586')
call_1085 = func_584_call()
call_1086 = func_584_call()
output = relay.Tuple([call_980,const_981,bop_1039,call_1046,bop_1059,call_1070,call_1075,uop_1082,call_1085,])
output2 = relay.Tuple([call_982,const_981,bop_1042,call_1047,bop_1062,call_1071,call_1076,uop_1084,call_1086,])
func_1088 = relay.Function([], output)
mod['func_1088'] = func_1088
mod = relay.transform.InferType()(mod)
mutated_mod['func_1088'] = func_1088
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1088_call = mutated_mod.get_global_var('func_1088')
call_1089 = func_1088_call()
output = call_1089
func_1090 = relay.Function([], output)
mutated_mod['func_1090'] = func_1090
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1135 = relay.var("var_1135", dtype = "float32", shape = (4, 12, 12))#candidate|1135|(4, 12, 12)|var|float32
uop_1136 = relay.sinh(var_1135.astype('float32')) # shape=(4, 12, 12)
bop_1148 = relay.logical_xor(uop_1136.astype('uint8'), relay.reshape(var_1135.astype('uint8'), relay.shape_of(uop_1136))) # shape=(4, 12, 12)
bop_1165 = relay.multiply(uop_1136.astype('uint64'), relay.reshape(bop_1148.astype('uint64'), relay.shape_of(uop_1136))) # shape=(4, 12, 12)
output = relay.Tuple([bop_1165,])
output2 = relay.Tuple([bop_1165,])
func_1176 = relay.Function([var_1135,], output)
mod['func_1176'] = func_1176
mod = relay.transform.InferType()(mod)
mutated_mod['func_1176'] = func_1176
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1177 = relay.var("var_1177", dtype = "float32", shape = (4, 12, 12))#candidate|1177|(4, 12, 12)|var|float32
func_1176_call = mutated_mod.get_global_var('func_1176')
call_1178 = func_1176_call(var_1177)
output = call_1178
func_1179 = relay.Function([var_1177], output)
mutated_mod['func_1179'] = func_1179
mutated_mod = relay.transform.InferType()(mutated_mod)
func_584_call = mod.get_global_var('func_584')
func_586_call = mutated_mod.get_global_var('func_586')
call_1184 = func_584_call()
call_1185 = func_584_call()
output = relay.Tuple([call_1184,])
output2 = relay.Tuple([call_1185,])
func_1199 = relay.Function([], output)
mod['func_1199'] = func_1199
mod = relay.transform.InferType()(mod)
mutated_mod['func_1199'] = func_1199
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1199_call = mutated_mod.get_global_var('func_1199')
call_1200 = func_1199_call()
output = call_1200
func_1201 = relay.Function([], output)
mutated_mod['func_1201'] = func_1201
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1088_call = mod.get_global_var('func_1088')
func_1090_call = mutated_mod.get_global_var('func_1090')
call_1209 = relay.TupleGetItem(func_1088_call(), 0)
call_1210 = relay.TupleGetItem(func_1090_call(), 0)
output = call_1209
output2 = call_1210
func_1211 = relay.Function([], output)
mod['func_1211'] = func_1211
mod = relay.transform.InferType()(mod)
mutated_mod['func_1211'] = func_1211
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1211_call = mutated_mod.get_global_var('func_1211')
call_1212 = func_1211_call()
output = call_1212
func_1213 = relay.Function([], output)
mutated_mod['func_1213'] = func_1213
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1233 = relay.var("var_1233", dtype = "float64", shape = (10, 6, 11))#candidate|1233|(10, 6, 11)|var|float64
uop_1234 = relay.acos(var_1233.astype('float64')) # shape=(10, 6, 11)
func_74_call = mod.get_global_var('func_74')
func_77_call = mutated_mod.get_global_var('func_77')
var_1247 = relay.var("var_1247", dtype = "float32", shape = (1365,))#candidate|1247|(1365,)|var|float32
call_1246 = relay.TupleGetItem(func_74_call(relay.reshape(var_1247.astype('float32'), [15, 13, 7])), 0)
call_1248 = relay.TupleGetItem(func_77_call(relay.reshape(var_1247.astype('float32'), [15, 13, 7])), 0)
func_218_call = mod.get_global_var('func_218')
func_221_call = mutated_mod.get_global_var('func_221')
call_1249 = relay.TupleGetItem(func_218_call(relay.reshape(var_1247.astype('float32'), [1365,])), 1)
call_1250 = relay.TupleGetItem(func_221_call(relay.reshape(var_1247.astype('float32'), [1365,])), 1)
var_1266 = relay.var("var_1266", dtype = "float32", shape = (15, 13, 7))#candidate|1266|(15, 13, 7)|var|float32
bop_1267 = relay.logical_xor(call_1246.astype('int32'), relay.reshape(var_1266.astype('int32'), relay.shape_of(call_1246))) # shape=(15, 13, 7)
bop_1270 = relay.logical_xor(call_1248.astype('int32'), relay.reshape(var_1266.astype('int32'), relay.shape_of(call_1248))) # shape=(15, 13, 7)
func_584_call = mod.get_global_var('func_584')
func_586_call = mutated_mod.get_global_var('func_586')
call_1275 = func_584_call()
call_1276 = func_584_call()
bop_1280 = relay.divide(uop_1234.astype('float64'), relay.reshape(var_1233.astype('float64'), relay.shape_of(uop_1234))) # shape=(10, 6, 11)
output = relay.Tuple([var_1247,call_1249,bop_1267,call_1275,bop_1280,])
output2 = relay.Tuple([var_1247,call_1250,bop_1270,call_1276,bop_1280,])
func_1306 = relay.Function([var_1233,var_1247,var_1266,], output)
mod['func_1306'] = func_1306
mod = relay.transform.InferType()(mod)
var_1307 = relay.var("var_1307", dtype = "float64", shape = (10, 6, 11))#candidate|1307|(10, 6, 11)|var|float64
var_1308 = relay.var("var_1308", dtype = "float32", shape = (1365,))#candidate|1308|(1365,)|var|float32
var_1309 = relay.var("var_1309", dtype = "float32", shape = (15, 13, 7))#candidate|1309|(15, 13, 7)|var|float32
output = func_1306(var_1307,var_1308,var_1309,)
func_1310 = relay.Function([var_1307,var_1308,var_1309,], output)
mutated_mod['func_1310'] = func_1310
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1211_call = mod.get_global_var('func_1211')
func_1213_call = mutated_mod.get_global_var('func_1213')
call_1329 = func_1211_call()
call_1330 = func_1211_call()
var_1346 = relay.var("var_1346", dtype = "float64", shape = (12, 5, 4))#candidate|1346|(12, 5, 4)|var|float64
bop_1347 = relay.logical_and(call_1329.astype('bool'), var_1346.astype('bool')) # shape=(12, 5, 4)
bop_1350 = relay.logical_and(call_1330.astype('bool'), var_1346.astype('bool')) # shape=(12, 5, 4)
uop_1374 = relay.log2(var_1346.astype('float32')) # shape=(12, 5, 4)
output = relay.Tuple([bop_1347,uop_1374,])
output2 = relay.Tuple([bop_1350,uop_1374,])
func_1384 = relay.Function([var_1346,], output)
mod['func_1384'] = func_1384
mod = relay.transform.InferType()(mod)
var_1385 = relay.var("var_1385", dtype = "float64", shape = (12, 5, 4))#candidate|1385|(12, 5, 4)|var|float64
output = func_1384(var_1385)
func_1386 = relay.Function([var_1385], output)
mutated_mod['func_1386'] = func_1386
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1199_call = mod.get_global_var('func_1199')
func_1201_call = mutated_mod.get_global_var('func_1201')
call_1423 = relay.TupleGetItem(func_1199_call(), 0)
call_1424 = relay.TupleGetItem(func_1201_call(), 0)
func_960_call = mod.get_global_var('func_960')
func_961_call = mutated_mod.get_global_var('func_961')
call_1425 = func_960_call()
call_1426 = func_960_call()
output = relay.Tuple([call_1423,call_1425,])
output2 = relay.Tuple([call_1424,call_1426,])
func_1444 = relay.Function([], output)
mod['func_1444'] = func_1444
mod = relay.transform.InferType()(mod)
output = func_1444()
func_1445 = relay.Function([], output)
mutated_mod['func_1445'] = func_1445
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1444_call = mod.get_global_var('func_1444')
func_1445_call = mutated_mod.get_global_var('func_1445')
call_1469 = relay.TupleGetItem(func_1444_call(), 0)
call_1470 = relay.TupleGetItem(func_1445_call(), 0)
output = call_1469
output2 = call_1470
func_1473 = relay.Function([], output)
mod['func_1473'] = func_1473
mod = relay.transform.InferType()(mod)
mutated_mod['func_1473'] = func_1473
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1473_call = mutated_mod.get_global_var('func_1473')
call_1474 = func_1473_call()
output = call_1474
func_1475 = relay.Function([], output)
mutated_mod['func_1475'] = func_1475
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1199_call = mod.get_global_var('func_1199')
func_1201_call = mutated_mod.get_global_var('func_1201')
call_1495 = relay.TupleGetItem(func_1199_call(), 0)
call_1496 = relay.TupleGetItem(func_1201_call(), 0)
func_707_call = mod.get_global_var('func_707')
func_708_call = mutated_mod.get_global_var('func_708')
call_1510 = func_707_call()
call_1511 = func_707_call()
output = relay.Tuple([call_1495,call_1510,])
output2 = relay.Tuple([call_1496,call_1511,])
func_1524 = relay.Function([], output)
mod['func_1524'] = func_1524
mod = relay.transform.InferType()(mod)
mutated_mod['func_1524'] = func_1524
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1524_call = mutated_mod.get_global_var('func_1524')
call_1525 = func_1524_call()
output = call_1525
func_1526 = relay.Function([], output)
mutated_mod['func_1526'] = func_1526
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1591 = relay.var("var_1591", dtype = "uint32", shape = (8, 7, 3))#candidate|1591|(8, 7, 3)|var|uint32
var_1592 = relay.var("var_1592", dtype = "uint32", shape = (8, 7, 3))#candidate|1592|(8, 7, 3)|var|uint32
bop_1593 = relay.not_equal(var_1591.astype('bool'), relay.reshape(var_1592.astype('bool'), relay.shape_of(var_1591))) # shape=(8, 7, 3)
uop_1606 = relay.exp(var_1592.astype('float64')) # shape=(8, 7, 3)
uop_1610 = relay.log2(uop_1606.astype('float32')) # shape=(8, 7, 3)
uop_1627 = relay.acos(uop_1606.astype('float64')) # shape=(8, 7, 3)
var_1637 = relay.var("var_1637", dtype = "float64", shape = (8, 7, 3))#candidate|1637|(8, 7, 3)|var|float64
bop_1638 = relay.less_equal(uop_1627.astype('bool'), relay.reshape(var_1637.astype('bool'), relay.shape_of(uop_1627))) # shape=(8, 7, 3)
output = relay.Tuple([bop_1593,uop_1610,bop_1638,])
output2 = relay.Tuple([bop_1593,uop_1610,bop_1638,])
func_1641 = relay.Function([var_1591,var_1592,var_1637,], output)
mod['func_1641'] = func_1641
mod = relay.transform.InferType()(mod)
var_1642 = relay.var("var_1642", dtype = "uint32", shape = (8, 7, 3))#candidate|1642|(8, 7, 3)|var|uint32
var_1643 = relay.var("var_1643", dtype = "uint32", shape = (8, 7, 3))#candidate|1643|(8, 7, 3)|var|uint32
var_1644 = relay.var("var_1644", dtype = "float64", shape = (8, 7, 3))#candidate|1644|(8, 7, 3)|var|float64
output = func_1641(var_1642,var_1643,var_1644,)
func_1645 = relay.Function([var_1642,var_1643,var_1644,], output)
mutated_mod['func_1645'] = func_1645
mutated_mod = relay.transform.InferType()(mutated_mod)
func_707_call = mod.get_global_var('func_707')
func_708_call = mutated_mod.get_global_var('func_708')
call_1652 = func_707_call()
call_1653 = func_707_call()
func_74_call = mod.get_global_var('func_74')
func_77_call = mutated_mod.get_global_var('func_77')
const_1674 = relay.const([-3.062947,-7.739527,0.840751,5.035473,9.900111,-1.802331,2.345243,9.940937,-2.254413,-0.139261,6.535027,9.237808,-7.122662,4.605987,-0.067565,-0.964446,4.717366,1.655564,-1.326409,-7.303130,-1.625498,-2.514368,5.293437,3.441279,-4.352141,-3.171635,8.920837,3.189290,-2.139953,7.685445,2.807509,7.711039,-2.955903,1.199033,1.234278,-0.830332,-8.380961,5.251027,-8.888608,7.426740,-1.042392,-0.775309,0.633862,4.574319,7.188082,-6.523745,8.323442,4.609410,-8.677280,-8.495219,-2.685892,-8.835478,-2.547420,9.825371,-9.478922,9.168288,-5.873950,8.084137,2.849657,6.820018,8.111722,9.621745,1.925798,5.979357,6.675753,4.574548,-7.908526,-9.815661,-7.833656,-4.457910,-5.141071,4.862888,6.215893,4.330212,-0.798352,2.683156,-1.768193,-2.615214,6.299536,-6.425782,4.023128,0.409966,1.592576,-8.811649,6.898137,-8.441481,0.270181,-3.618668,-3.198525,9.132907,-5.239463,2.892572,-2.827480,-8.884259,9.549409,-4.241499,-6.165352,-1.542633,-9.071127,3.748887,1.847361,6.272359,-7.080303,-2.775237,3.030222,3.670236,-7.468153,5.161206,-8.191138,1.233075,-7.124299,-9.232741,9.665441,-7.001575,-3.258162,4.705821,2.799950,-5.138294,-1.772704,4.317909,-2.455631,2.953811,1.873864,9.328213,-3.206125,9.071909,2.976473,6.685498,-4.812892,-2.455431,-4.992464,3.398724,-5.703922,0.438080,-8.510910,2.050713,6.806689,8.959362,9.647919,-4.088960,6.534244,-0.738499,1.740112,7.153669,8.216360,-3.944073,2.386014,7.367309,5.037820,-8.412375,3.184158,4.402048,-9.476883,3.145316,6.248600,5.771434,8.417877,4.543586,-4.176583,0.194176,-0.941423,6.161281,7.779677,-5.595716,9.966500,-8.896979,-8.601279,3.132690,-5.859182,-7.398258,-0.768785,7.628170,1.396183,-6.125220,4.077786,6.480474,-5.968637,-9.922634,2.561932,-7.438863,9.363676,-0.208992,-6.587975,6.934185,-0.066489,1.704052,7.624094,1.825922,6.888495,-9.142110,8.827117,4.076106,-4.469796,7.580587,-6.828123,-6.094076,-3.686725,5.298542,-6.140338,1.992329,-0.933497,7.188488,8.556309,-8.709399,6.010182,-2.534572,-8.276329,-6.669099,5.182236,-6.945536,2.187882,1.259568,7.226146,3.485694,7.610735,6.538716,4.407193,-4.427109,5.500347,4.865565,6.289336,2.464220,6.493383,6.444946,6.497729,-2.297895,-0.511038,-7.643935,-6.319550,-0.203251,-3.959036,8.803859,-5.149227,4.354760,-7.993707,-1.534318,-4.999536,8.457434,2.269985,-3.623756,6.845675,-6.403047,-6.641043,8.034764,-3.041615,8.145139,5.517578,-8.155624,-4.430538,7.588675,-3.635344,-5.268062,3.269470,8.099001,-8.854055,7.315510,-0.007894,-3.314879,-9.418002,-2.612822,5.683422,-4.335062,-9.990360,-7.606186,-4.890565,-6.575492,-0.595090,3.440363,-0.866081,-9.219268,-7.713915,-8.566793,9.376245,3.173766,0.153136,-4.847294,0.915822,8.149962,8.903435,-1.993987,-9.208207,4.245635,-7.522000,-4.952807,4.539399,9.044249,5.048408,-4.296142,-9.706141,-0.824671,4.018062,-0.031049,1.165299,7.167050,-8.537118,-2.787308,-4.042058,2.905384,-0.523456,9.976524,-8.189379,0.141714,6.517888,7.403798,-1.063859,6.837715,-9.087662,-0.437703,2.744514,4.833181,-3.875755,-3.624995,7.264073,2.940843,-3.905799,7.566786,8.338492,-8.053729,-9.151396,6.003008,0.649528,9.463089,-8.375754,-5.224347,8.773762,7.238349,5.978613,-7.616550,9.658506,1.971813,-1.654975,7.170166,6.567997,-7.708590,9.185057,-6.632669,-7.116964,-6.251569,-9.334145,1.731164,-2.538324,6.343572,-7.981468,-2.574759,3.649075,8.529314,-7.606855,0.575646,-7.046661,-8.194675,5.273206,0.388526,-4.629705,4.947609,-7.395901,-7.044589,9.458592,-3.307777,0.709107,-8.231372,-9.303225,-9.577936,-1.620846,7.932802,-3.176025,-2.758777,-3.853155,7.788918,2.478611,3.780882,7.990992,4.489166,1.117717,3.654675,-6.625009,1.872784,9.388520,-8.848950,-2.975233,8.245073,0.457466,-9.176555,3.543841,-4.565090,-7.245247,-4.357358,1.473335,3.724177,2.111057,0.957218,-9.563268,9.454175,-0.344040,4.157240,3.086154,1.889972,-2.031555,-1.728339,-2.364855,-5.061952,6.015389,-8.030532,-3.546922,5.554345,-0.059659,-5.883096,-3.796401,3.653777,5.131645,5.542636,6.886012,9.759316,-9.722686,5.426623,-6.876390,-0.362325,-9.023893,-1.718415,-2.593060,-4.163624,-0.907709,8.876710,-1.015323,0.032362,8.224254,-8.116290,-5.732837,-7.662644,-4.507632,4.132037,8.390961,-4.949067,-7.523652,6.429164,-4.181675,-9.662319,-7.039987,2.870857,-3.096331,-8.029598,3.041097,-1.743649,-7.705383,5.111188,-5.676481,1.071591,-1.189568,6.420266,-1.507887,5.396450,-3.163425,5.760639,9.520357,-6.339842,8.865016,0.941879,4.160602,-9.442135,-2.503149,-9.539856,-1.465768,-4.081803,2.860065,-7.631708,-9.954466,5.600022,8.944670,8.860853,7.677661,-0.464584,-2.398901,-6.955685,6.050724,6.344187,-9.694141,-1.797462,7.745672,5.185029,-0.766304,-4.393405,5.257614,5.963654,-1.096956,1.672862,-1.194363,0.873985,0.726528,1.100441,-0.978283,-2.937923,-4.405998,-6.429640,5.392168,5.423720,5.158982,9.037186,2.161937,3.846048,4.533476,5.662423,-5.608481,4.691131,-7.751430,-3.384192,4.493005,4.774557,7.183400,-6.739100,7.727155,-3.907628,8.444920,0.432941,-0.373912,0.477130,2.927526,-3.253242,9.155943,4.974389,-8.888101,-4.711780,-7.209505,7.304258,6.094185,6.734245,7.620459,6.614788,1.781092,0.905542,0.764864,7.059278,-2.527997,-2.113064,5.303603,2.714457,6.923943,-9.660005,-0.810018,8.797832,2.349830,-0.693290,-9.433584,3.005808,6.640976,-6.568632,0.372901,2.700088,4.189866,8.293168,-3.287619,-6.099690,1.973774,3.292130,-3.921150,0.153682,5.750211,8.709309,-3.531274,7.796536,0.320017,-6.246497,-0.387424,-4.538036,-2.974074,-8.840994,8.233361,-4.875880,0.404898,-2.734530,2.422688,4.955947,0.281903,-5.985322,-7.345173,5.195102,3.353912,-0.364858,-1.466093,7.853017,3.747290,9.169930,-0.186860,8.220124,0.314811,-7.134413,3.838195,-7.745615,-5.157237,-1.028798,-4.317882,-4.108735,-4.162746,1.561545,-5.389718,3.871692,4.462218,-4.919287,-9.803559,9.665353,0.653243,-3.698813,-6.932294,7.550577,-6.977643,3.494971,-3.556326,-5.499052,-9.487025,8.636785,3.470758,-7.140820,7.223974,-4.663795,-9.674678,8.709153,7.451000,9.175309,-7.959887,-3.392500,-2.208468,-4.984390,-9.180586,6.109013,-3.569133,8.107542,7.318246,-7.941658,-1.903986,5.377995,9.591186,-0.774340,-0.050769,-6.407234,-1.739810,8.114113,-5.716686,3.400494,8.517619,0.260058,5.995103,2.304370,1.826322,8.481162,-5.706986,-4.890394,-7.818836,5.373561,-1.868460,7.683962,-6.347090,-8.027920,-2.533714,9.763357,-6.656207,-6.452877,7.124774,0.314625,7.347237,-1.859315,3.517409,7.654358,3.405324,-4.713016,-9.138791,4.326931,6.928548,0.869323,2.819118,3.324913,-4.462322,-2.540221,0.652974,-5.181881,-7.158129,-5.113276,1.298175,8.935298,-0.720270,5.515133,-8.604639,-4.403707,-1.864648,8.109746,-8.912405,2.978314,-6.772001,0.661788,5.501170,8.659900,-4.554966,1.770503,7.056756,2.909222,2.523366,9.606728,1.396705,4.693432,0.897101,9.266081,7.736302,-2.621269,-4.843041,5.752334,5.758159,-5.709723,-1.407941,-4.698497,-2.511041,-1.359553,-6.631277,5.806575,1.228895,7.731049,-9.200879,-3.447709,6.503826,5.921498,-7.718127,-2.856858,4.165215,-3.230035,-2.921938,-2.168013,-2.446198,-3.179630,-5.431925,-1.948706,-6.230751,-7.784173,-5.183326,-3.998641,-4.740748,-7.562756,-3.307629,-3.083652,8.152143,-1.609472,3.824964,-8.512757,4.695839,-5.654464,5.229803,2.412162,-6.016405,-8.044013,-8.201605,0.824117,-6.647803,-9.571492,-5.108536,6.167334,0.151544,8.447811,-9.147946,-6.345781,9.224405,1.075551,8.139064,-9.954197,-0.703497,-4.439746,-5.756911,3.427907,6.255110,3.140294,2.135604,3.933950,-2.914682,3.821938,4.778376,-0.843497,4.032316,0.209537,-5.648854,-1.216102,-1.156850,-8.234085,-2.372786,1.352191,0.339585,6.566241,5.525178,8.362951,-7.192454,-6.388325,-9.579589,-0.346351,-0.760149,-0.117798,1.996316,-1.250159,2.678558,-9.379340,-2.440591,-9.075827,2.735335,-8.626468,-0.916646,-9.566375,3.157156,-0.048790,-4.171714,8.327589,-4.272994,8.371201,-2.140742,5.321177,-3.166189,-1.257291,-3.737763,-2.756819,-3.098487,-8.532608,-1.700687,4.834211,-3.220299,4.318175,-3.570655,5.381153,-9.577398,1.125422,-6.944249,0.219451,-9.301529,-5.772684,-2.111610,-2.740841,9.464085,2.411143,-9.045418,3.872242,4.766842,4.818412,4.910295,-6.251343,7.692092,4.133243,7.738173,6.772756,-2.523973,-6.335041,-4.100083,5.097555,1.106201,-1.167617,-3.508030,-4.656603,-3.806510,0.965370,4.602620,-6.214920,2.303423,-7.988967,-3.565457,0.055972,3.266876,7.285802,-7.181752,-7.028931,0.884186,1.977965,-2.311139,9.906057,4.003711,6.970824,6.736532,-0.007094,8.465809,5.522211,-2.075714,-5.197571,-7.637504,3.328625,-5.721062,-2.053162,-0.793397,1.846093,-9.020572,-1.654224,-6.310063,-9.521907,1.002378,-7.560040,3.549100,-1.735942,-5.770770,-9.519071,-1.370416,-7.370353,1.040522,-3.013588,-5.871939,-3.656861,4.365216,5.449383,-7.285547,0.373864,-5.209294,-7.559697,3.228971,0.812035,7.017124,-2.997434,8.266686,1.027242,3.490036,5.087651,1.284641,-7.357369,-2.894879,-2.216227,6.835825,-8.232290,-7.201627,-8.368981,1.453640,1.241411,1.750831,-5.133613,-6.488345,2.968939,2.579327,-8.455911,-8.739361,0.652850,-8.258120,-9.626249,4.791297,1.336877,6.769056,8.553147,9.895092,-7.822226,-8.389857,4.483668,-6.489806,2.403274,6.948246,-0.095411,-4.219260,-8.230528,-6.654251,9.074834,7.252913,1.433332,-5.179994,0.495776,4.672697,-1.625798,-7.121009,8.695855,-9.043024,8.197027,-3.114069,5.465993,0.307379,6.741362,-6.024904,-1.985510,6.170118,7.498688,-1.567341,4.027692,-7.953490,-5.236172,5.032951,1.286700,-2.009310,-1.943997,-0.358062,3.115240,1.155106,6.277453,2.799052,-7.199711,9.625284,-3.279912,-3.928185,-3.374124,0.145714,-7.806970,-7.197274,-7.819652,-9.250481,9.513475,8.532754,-0.748040,1.993997,-5.732812,6.201333,7.678026,-0.133767,1.860443,0.460079,2.390613,-9.127734,4.512728,6.874940,9.257348,-9.821110,5.287746,4.950427,3.588708,8.841110,-9.212492,-5.498393,-7.930247,9.805814,1.103875,8.039823,-5.769751,-5.579819,-1.241301,1.228954,5.963002,-6.528781,6.968313,9.608407,-3.966078,7.850256,5.357480,-7.626867,-2.295673,9.097514,-4.219040,7.612396,-9.861840,-7.454956,2.280635,-7.090238,-3.797241,3.044645,6.772892,-1.725496,-8.523489,-4.684640,5.991505,1.238322,-3.314519,6.018249,6.017407,1.034293,5.568087,-1.583921,-2.057625,5.331177,9.102453,-1.325082,6.036900,-2.245355,-5.947149,-4.834746,0.818407,-1.783730,-9.990378,-5.267158,-0.556608,-7.095796,9.913730,-5.885234,3.925697,-3.366530,2.173864,9.546800,3.619119,-6.828403,-0.857481,7.278872,-7.664367,-6.772594,-1.236007,-8.158857,-5.436971,-2.029055,4.986910,7.533215,-9.650051,5.417969,2.754244,8.759160,-1.449928,-5.398894,-7.346409,-7.316149,1.102306,6.702355,4.498618,-8.312215,-2.329199,3.807977,-9.308530,5.396768,6.300032,-2.199760,9.876112,4.944552,1.617041,9.236642,-2.662948,-6.542865,-6.698027,2.418307,6.926682,6.479738,-6.450168,2.419330,-8.784928,1.849343,0.247061,-9.594542,1.131001,-7.487412,3.273700,-5.610877,0.525797,-2.828500,9.408365,5.158883,6.002538,-2.703242,9.704562,-5.724190,-7.748040,5.607230,3.865442,1.549607,-5.870973,6.469888,5.532837,0.601142,-7.034677,-2.855520,1.779846,-9.483713,-3.744263,-6.129325,-7.699253,9.752284,-0.938164,-9.947295,-7.625634,8.488749,8.418661,3.592059,-3.099512,3.263613,-3.771433,-1.315019,1.310336,-4.852210,-3.361383,-0.310510,-6.932549,4.586523,-1.391496,-8.577035,9.613928,8.389884,8.734948,8.389917,0.075636,-1.448373,-2.959950,8.746976,-7.802341,-2.994419,-8.244219,9.622098,-5.913687,-1.194670,4.740131,-2.389560,-6.844465,7.950604,-5.930512,6.489231,-3.559263,5.998378,3.733970,-4.601337,-7.865708,-5.570409,0.127351,9.546640,-8.999534,3.214022,3.949734,9.067162,7.913940,4.241546,4.050437,-6.142854,-8.086772,3.830507,-3.378453,1.182719,-4.612736,-4.959925,-4.750126,6.328704,1.776962,-8.494344,-1.330401,-8.796307,-0.255054,4.844766,-7.630510,0.108569,6.991002,-2.756279,4.752203,3.668072,7.733926,2.090313,4.173720,8.607441,4.036207,1.910503,1.473327,-3.865746,1.894438,6.783261,7.203104,5.295947,1.909503,-4.876676,9.986278,-3.330391,2.164362,-7.045687,5.837711,7.100401,1.310564,-2.112842,-2.979325,1.188874,4.759878,-7.698119,1.474169,8.229842,5.706298,9.655075,2.227107,-6.730544,-3.662391,-1.347550,-6.740031,-5.944536,-1.031954,-2.125589,0.190849,1.154298,-7.301042,5.010773,2.761327,0.642154,4.901317,0.357237,-1.167682,4.141080,1.800481,-6.957077,-1.693101,1.093836,-3.014120,8.040337,0.406774,-9.710385,-7.904352,-6.323244,-1.195221,8.423590,-1.807993,3.219131,-8.285248,5.556890,-4.093109,2.777031,9.067558,3.078373,-9.479776,3.014017,1.854002,7.269067,-3.785293,0.272297,9.857870,-1.716992,-7.633113,8.465772,-4.815940,-0.726541,-3.491613,1.131016,-1.030997,2.679249,-6.773421,4.101016,-1.912031,0.175851,-9.964708,-7.822686,9.013897,1.055405,-1.175061,-6.668803,-1.404309,5.228512,-1.389963,-9.760020,7.884931,6.680708,-4.859200,-9.762176,-0.040195,1.622439,-7.201500,-0.233447,-7.523386,4.988901,-3.747167,-1.978869,-9.690938,-4.540944,-8.851656,-4.737992,-0.883205,8.694955,-1.395610,-7.234335,-3.461825,5.143982,0.190017,-4.948658,1.141400,-0.662528,-4.456414,-8.157516,-9.736327,1.892375,1.206356,-6.830232,-5.199510,9.200484,8.117165,1.012056,6.732711,0.081214,-6.208136,1.537689,4.580818,-9.023093,-7.873923,0.879731,4.383066,2.493097,-8.831732,-4.099065,-4.765409,9.653855,7.658498,0.907882,2.692097,0.400924,-2.546781,7.221849], dtype = "float32")#candidate|1674|(1365,)|const|float32
call_1673 = relay.TupleGetItem(func_74_call(relay.reshape(const_1674.astype('float32'), [15, 13, 7])), 0)
call_1675 = relay.TupleGetItem(func_77_call(relay.reshape(const_1674.astype('float32'), [15, 13, 7])), 0)
output = relay.Tuple([call_1652,call_1673,const_1674,])
output2 = relay.Tuple([call_1653,call_1675,const_1674,])
func_1677 = relay.Function([], output)
mod['func_1677'] = func_1677
mod = relay.transform.InferType()(mod)
mutated_mod['func_1677'] = func_1677
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1677_call = mutated_mod.get_global_var('func_1677')
call_1678 = func_1677_call()
output = call_1678
func_1679 = relay.Function([], output)
mutated_mod['func_1679'] = func_1679
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1088_call = mod.get_global_var('func_1088')
func_1090_call = mutated_mod.get_global_var('func_1090')
call_1680 = relay.TupleGetItem(func_1088_call(), 8)
call_1681 = relay.TupleGetItem(func_1090_call(), 8)
output = call_1680
output2 = call_1681
func_1683 = relay.Function([], output)
mod['func_1683'] = func_1683
mod = relay.transform.InferType()(mod)
output = func_1683()
func_1684 = relay.Function([], output)
mutated_mod['func_1684'] = func_1684
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1683_call = mod.get_global_var('func_1683')
func_1684_call = mutated_mod.get_global_var('func_1684')
call_1733 = func_1683_call()
call_1734 = func_1683_call()
uop_1739 = relay.cosh(call_1733.astype('float64')) # shape=(10, 14, 2)
uop_1741 = relay.cosh(call_1734.astype('float64')) # shape=(10, 14, 2)
func_1384_call = mod.get_global_var('func_1384')
func_1386_call = mutated_mod.get_global_var('func_1386')
const_1752 = relay.const([-7.403110,8.616956,-0.508041,6.219630,-6.537458,-2.559903,7.240142,3.382773,3.438670,-8.526133,6.510578,-3.258650,-2.890062,4.506479,-3.527119,4.334621,7.673225,2.645482,9.728927,8.016971,-3.461113,-6.708012,9.907216,-2.226610,2.679184,-5.714318,8.929875,-8.531179,-9.356751,-1.532124,-4.875213,-5.572253,-3.031122,1.883413,-2.206210,2.472242,-7.946152,-5.850063,5.558427,-3.133474,1.190129,0.005717,2.419113,1.395106,-3.699394,9.628757,6.523413,-2.509760,0.579397,4.172768,-4.782113,-1.400861,-5.318357,-1.975431,-5.095733,8.894558,-0.049587,-4.987924,-5.605382,2.544291,0.080005,3.869834,-7.413145,-6.082051,-9.747594,7.578041,3.172007,5.576163,-1.132458,8.138933,0.582148,7.958849,-2.131083,6.438013,3.459840,1.117770,4.291134,4.414135,-4.730147,0.250863,-3.328694,3.680510,3.331429,7.224568,8.153357,-1.481142,4.802019,-4.861038,0.954644,8.972305,-1.545030,-1.075570,8.861650,-8.594494,0.150277,-2.822565,-9.156170,2.797848,5.618149,-9.831543,-9.152986,7.545238,-5.564331,7.810900,3.323482,-7.115876,9.662829,-3.798205,-9.447495,-5.140613,-1.809067,6.140572,-6.483092,-4.043507,-1.821091,-7.841358,8.922780,-9.717369,1.701359,-1.079912,-2.340595,1.033704,8.608912,3.359240,-4.327392,7.858253,-9.123258,9.731319,-1.542612,-8.781305,-5.003089,7.822362,-7.439155,5.950557,2.915022,9.313525,-0.789915,1.352020,-7.818828,-4.104656,-6.560633,8.296820,-8.687765,2.880136,3.782469,6.734912,6.880653,7.914367,0.703128,6.784434,-8.987339,-8.236588,1.170895,-0.500388,-7.071616,-3.980781,5.578100,-1.034975,7.630090,-6.651497,3.169921,-2.019382,-3.488878,1.472189,5.497800,-0.726153,6.351906,-1.219572,-4.477534,-3.182104,3.653756,5.074959,-9.709181,6.465696,3.949718,-8.357364,7.352491,9.521318,2.701400,5.376918,-6.320350,-2.800294,3.920112,-2.481767,-3.252294,-0.631670,-6.688165,-5.216302,5.364583,-7.122716,9.621767,-9.873184,4.520925,-4.168350,-1.702925,7.698833,3.989864,-4.587678,6.250130,-1.187848,6.045874,3.979459,-1.037105,-2.903672,0.945139,-3.116734,-5.773605,-2.500093,9.932778,-8.245572,-5.158736,-7.492068,1.899441,-1.405180,4.275584,-6.164603,-1.514238,-8.305861,4.080172,-4.289419,7.834239,7.012744,1.095328,-8.868963,-0.450112,-2.907722,-9.229942,-7.673053,6.065446,-1.734058,7.772502,6.333856,5.816544,-3.304855,6.118280,4.178596,-4.822315,-5.390181,-5.620638,-1.149875], dtype = "float64")#candidate|1752|(240,)|const|float64
call_1751 = relay.TupleGetItem(func_1384_call(relay.reshape(const_1752.astype('float64'), [12, 5, 4])), 0)
call_1753 = relay.TupleGetItem(func_1386_call(relay.reshape(const_1752.astype('float64'), [12, 5, 4])), 0)
func_1473_call = mod.get_global_var('func_1473')
func_1475_call = mutated_mod.get_global_var('func_1475')
call_1754 = func_1473_call()
call_1755 = func_1473_call()
func_584_call = mod.get_global_var('func_584')
func_586_call = mutated_mod.get_global_var('func_586')
call_1756 = func_584_call()
call_1757 = func_584_call()
output = relay.Tuple([uop_1739,call_1751,const_1752,call_1754,call_1756,])
output2 = relay.Tuple([uop_1741,call_1753,const_1752,call_1755,call_1757,])
func_1758 = relay.Function([], output)
mod['func_1758'] = func_1758
mod = relay.transform.InferType()(mod)
mutated_mod['func_1758'] = func_1758
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1758_call = mutated_mod.get_global_var('func_1758')
call_1759 = func_1758_call()
output = call_1759
func_1760 = relay.Function([], output)
mutated_mod['func_1760'] = func_1760
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1524_call = mod.get_global_var('func_1524')
func_1526_call = mutated_mod.get_global_var('func_1526')
call_1884 = relay.TupleGetItem(func_1524_call(), 1)
call_1885 = relay.TupleGetItem(func_1526_call(), 1)
output = call_1884
output2 = call_1885
func_1895 = relay.Function([], output)
mod['func_1895'] = func_1895
mod = relay.transform.InferType()(mod)
output = func_1895()
func_1896 = relay.Function([], output)
mutated_mod['func_1896'] = func_1896
mutated_mod = relay.transform.InferType()(mutated_mod)
func_707_call = mod.get_global_var('func_707')
func_708_call = mutated_mod.get_global_var('func_708')
call_1902 = func_707_call()
call_1903 = func_707_call()
func_584_call = mod.get_global_var('func_584')
func_586_call = mutated_mod.get_global_var('func_586')
call_1908 = func_584_call()
call_1909 = func_584_call()
output = relay.Tuple([call_1902,call_1908,])
output2 = relay.Tuple([call_1903,call_1909,])
func_1913 = relay.Function([], output)
mod['func_1913'] = func_1913
mod = relay.transform.InferType()(mod)
mutated_mod['func_1913'] = func_1913
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1913_call = mutated_mod.get_global_var('func_1913')
call_1914 = func_1913_call()
output = call_1914
func_1915 = relay.Function([], output)
mutated_mod['func_1915'] = func_1915
mutated_mod = relay.transform.InferType()(mutated_mod)
func_707_call = mod.get_global_var('func_707')
func_708_call = mutated_mod.get_global_var('func_708')
call_1938 = func_707_call()
call_1939 = func_707_call()
output = call_1938
output2 = call_1939
func_1952 = relay.Function([], output)
mod['func_1952'] = func_1952
mod = relay.transform.InferType()(mod)
output = func_1952()
func_1953 = relay.Function([], output)
mutated_mod['func_1953'] = func_1953
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2029 = relay.var("var_2029", dtype = "uint8", shape = (5, 10, 12))#candidate|2029|(5, 10, 12)|var|uint8
var_2030 = relay.var("var_2030", dtype = "uint8", shape = (5, 10, 12))#candidate|2030|(5, 10, 12)|var|uint8
bop_2031 = relay.bitwise_xor(var_2029.astype('uint8'), relay.reshape(var_2030.astype('uint8'), relay.shape_of(var_2029))) # shape=(5, 10, 12)
var_2034 = relay.var("var_2034", dtype = "uint8", shape = (5, 10, 12))#candidate|2034|(5, 10, 12)|var|uint8
bop_2035 = relay.divide(bop_2031.astype('float32'), relay.reshape(var_2034.astype('float32'), relay.shape_of(bop_2031))) # shape=(5, 10, 12)
uop_2038 = relay.acos(bop_2031.astype('float32')) # shape=(5, 10, 12)
bop_2050 = relay.less(uop_2038.astype('bool'), relay.reshape(var_2029.astype('bool'), relay.shape_of(uop_2038))) # shape=(5, 10, 12)
var_2076 = relay.var("var_2076", dtype = "uint8", shape = (5, 10, 12))#candidate|2076|(5, 10, 12)|var|uint8
bop_2077 = relay.subtract(bop_2031.astype('float64'), relay.reshape(var_2076.astype('float64'), relay.shape_of(bop_2031))) # shape=(5, 10, 12)
output = relay.Tuple([bop_2035,bop_2050,bop_2077,])
output2 = relay.Tuple([bop_2035,bop_2050,bop_2077,])
func_2090 = relay.Function([var_2029,var_2030,var_2034,var_2076,], output)
mod['func_2090'] = func_2090
mod = relay.transform.InferType()(mod)
var_2091 = relay.var("var_2091", dtype = "uint8", shape = (5, 10, 12))#candidate|2091|(5, 10, 12)|var|uint8
var_2092 = relay.var("var_2092", dtype = "uint8", shape = (5, 10, 12))#candidate|2092|(5, 10, 12)|var|uint8
var_2093 = relay.var("var_2093", dtype = "uint8", shape = (5, 10, 12))#candidate|2093|(5, 10, 12)|var|uint8
var_2094 = relay.var("var_2094", dtype = "uint8", shape = (5, 10, 12))#candidate|2094|(5, 10, 12)|var|uint8
output = func_2090(var_2091,var_2092,var_2093,var_2094,)
func_2095 = relay.Function([var_2091,var_2092,var_2093,var_2094,], output)
mutated_mod['func_2095'] = func_2095
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2131 = relay.const([[[9.788123],[7.183070],[3.404780],[6.981365],[9.775840]],[[-0.879728],[9.339336],[2.447780],[2.765872],[8.754125]],[[1.587846],[2.417279],[-7.294619],[8.596013],[-2.253229]],[[2.409155],[-6.193345],[6.749954],[8.549851],[2.884507]],[[-2.843231],[-7.576766],[1.941590],[4.056635],[-8.439497]],[[4.077868],[-5.719242],[8.898371],[-3.234366],[-9.593761]],[[3.939778],[-4.908302],[6.157363],[-7.302812],[3.734821]],[[1.013226],[8.121282],[6.910471],[3.087602],[3.405634]],[[2.901283],[9.332986],[-2.267678],[-5.382927],[-8.569544]],[[1.470606],[8.727039],[5.291446],[2.818883],[3.334107]],[[6.807815],[-8.270425],[-9.638017],[7.700955],[-4.959250]],[[4.347927],[-3.549122],[-5.756405],[-3.393693],[5.537705]],[[8.226319],[-5.356328],[-0.632965],[5.564994],[2.907924]],[[-9.777720],[-6.662198],[-0.970522],[-8.542770],[-6.820754]]], dtype = "float64")#candidate|2131|(14, 5, 1)|const|float64
uop_2132 = relay.sin(const_2131.astype('float64')) # shape=(14, 5, 1)
func_1211_call = mod.get_global_var('func_1211')
func_1213_call = mutated_mod.get_global_var('func_1213')
call_2139 = func_1211_call()
call_2140 = func_1211_call()
output = relay.Tuple([uop_2132,call_2139,])
output2 = relay.Tuple([uop_2132,call_2140,])
func_2141 = relay.Function([], output)
mod['func_2141'] = func_2141
mod = relay.transform.InferType()(mod)
mutated_mod['func_2141'] = func_2141
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2141_call = mutated_mod.get_global_var('func_2141')
call_2142 = func_2141_call()
output = call_2142
func_2143 = relay.Function([], output)
mutated_mod['func_2143'] = func_2143
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2141_call = mod.get_global_var('func_2141')
func_2143_call = mutated_mod.get_global_var('func_2143')
call_2149 = relay.TupleGetItem(func_2141_call(), 1)
call_2150 = relay.TupleGetItem(func_2143_call(), 1)
func_1199_call = mod.get_global_var('func_1199')
func_1201_call = mutated_mod.get_global_var('func_1201')
call_2157 = relay.TupleGetItem(func_1199_call(), 0)
call_2158 = relay.TupleGetItem(func_1201_call(), 0)
output = relay.Tuple([call_2149,call_2157,])
output2 = relay.Tuple([call_2150,call_2158,])
func_2191 = relay.Function([], output)
mod['func_2191'] = func_2191
mod = relay.transform.InferType()(mod)
mutated_mod['func_2191'] = func_2191
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2191_call = mutated_mod.get_global_var('func_2191')
call_2192 = func_2191_call()
output = call_2192
func_2193 = relay.Function([], output)
mutated_mod['func_2193'] = func_2193
mutated_mod = relay.transform.InferType()(mutated_mod)
func_960_call = mod.get_global_var('func_960')
func_961_call = mutated_mod.get_global_var('func_961')
call_2194 = func_960_call()
call_2195 = func_960_call()
func_1524_call = mod.get_global_var('func_1524')
func_1526_call = mutated_mod.get_global_var('func_1526')
call_2245 = relay.TupleGetItem(func_1524_call(), 1)
call_2246 = relay.TupleGetItem(func_1526_call(), 1)
output = relay.Tuple([call_2194,call_2245,])
output2 = relay.Tuple([call_2195,call_2246,])
func_2248 = relay.Function([], output)
mod['func_2248'] = func_2248
mod = relay.transform.InferType()(mod)
mutated_mod['func_2248'] = func_2248
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2248_call = mutated_mod.get_global_var('func_2248')
call_2249 = func_2248_call()
output = call_2249
func_2250 = relay.Function([], output)
mutated_mod['func_2250'] = func_2250
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1473_call = mod.get_global_var('func_1473')
func_1475_call = mutated_mod.get_global_var('func_1475')
call_2271 = func_1473_call()
call_2272 = func_1473_call()
output = call_2271
output2 = call_2272
func_2279 = relay.Function([], output)
mod['func_2279'] = func_2279
mod = relay.transform.InferType()(mod)
output = func_2279()
func_2280 = relay.Function([], output)
mutated_mod['func_2280'] = func_2280
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2279_call = mod.get_global_var('func_2279')
func_2280_call = mutated_mod.get_global_var('func_2280')
call_2292 = func_2279_call()
call_2293 = func_2279_call()
func_1683_call = mod.get_global_var('func_1683')
func_1684_call = mutated_mod.get_global_var('func_1684')
call_2325 = func_1683_call()
call_2326 = func_1683_call()
output = relay.Tuple([call_2292,call_2325,])
output2 = relay.Tuple([call_2293,call_2326,])
func_2328 = relay.Function([], output)
mod['func_2328'] = func_2328
mod = relay.transform.InferType()(mod)
mutated_mod['func_2328'] = func_2328
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2328_call = mutated_mod.get_global_var('func_2328')
call_2329 = func_2328_call()
output = call_2329
func_2330 = relay.Function([], output)
mutated_mod['func_2330'] = func_2330
mutated_mod = relay.transform.InferType()(mutated_mod)
func_707_call = mod.get_global_var('func_707')
func_708_call = mutated_mod.get_global_var('func_708')
call_2375 = func_707_call()
call_2376 = func_707_call()
func_960_call = mod.get_global_var('func_960')
func_961_call = mutated_mod.get_global_var('func_961')
call_2379 = func_960_call()
call_2380 = func_960_call()
uop_2381 = relay.exp(call_2375.astype('float64')) # shape=(10, 14, 2)
uop_2383 = relay.exp(call_2376.astype('float64')) # shape=(10, 14, 2)
bop_2418 = relay.greater_equal(uop_2381.astype('bool'), relay.reshape(call_2379.astype('bool'), relay.shape_of(uop_2381))) # shape=(10, 14, 2)
bop_2421 = relay.greater_equal(uop_2383.astype('bool'), relay.reshape(call_2380.astype('bool'), relay.shape_of(uop_2383))) # shape=(10, 14, 2)
bop_2427 = relay.floor_divide(bop_2418.astype('float32'), relay.reshape(uop_2381.astype('float32'), relay.shape_of(bop_2418))) # shape=(10, 14, 2)
bop_2430 = relay.floor_divide(bop_2421.astype('float32'), relay.reshape(uop_2383.astype('float32'), relay.shape_of(bop_2421))) # shape=(10, 14, 2)
func_2279_call = mod.get_global_var('func_2279')
func_2280_call = mutated_mod.get_global_var('func_2280')
call_2435 = func_2279_call()
call_2436 = func_2279_call()
output = relay.Tuple([bop_2427,call_2435,])
output2 = relay.Tuple([bop_2430,call_2436,])
func_2452 = relay.Function([], output)
mod['func_2452'] = func_2452
mod = relay.transform.InferType()(mod)
output = func_2452()
func_2453 = relay.Function([], output)
mutated_mod['func_2453'] = func_2453
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1444_call = mod.get_global_var('func_1444')
func_1445_call = mutated_mod.get_global_var('func_1445')
call_2472 = relay.TupleGetItem(func_1444_call(), 1)
call_2473 = relay.TupleGetItem(func_1445_call(), 1)
const_2482 = relay.const([[[-1.705180,-4.770822],[-1.659398,-8.757998],[7.251665,-9.111398],[7.244453,-6.629518],[-7.756499,-6.975076],[3.390042,8.267053],[-0.381603,9.020228],[7.086913,6.591556],[-8.995725,-1.580329],[4.245375,-1.510676],[5.786634,-5.609125],[-1.201469,-5.205968],[2.722007,6.879870],[-9.559157,-5.848953]],[[1.310018,-2.241152],[-7.069081,7.228731],[-0.863116,7.888131],[-1.845470,-9.472319],[-3.987345,-2.965011],[5.905863,3.053911],[5.080274,-9.407356],[7.289726,-9.089165],[-8.392432,-7.481301],[2.397364,0.783579],[6.242248,8.286400],[4.193795,4.785829],[-6.160065,-5.202822],[-5.692589,-3.297511]],[[-5.083311,1.170984],[4.227797,-1.174406],[7.775639,-8.464714],[-1.396384,-7.299176],[-8.666706,9.214067],[0.291231,-5.928571],[-9.003100,2.899885],[-7.945854,9.813924],[-7.759342,3.055052],[-1.184337,-6.290364],[-4.019072,-5.952038],[-3.334817,-5.814335],[-2.059321,-7.412091],[-4.344607,6.976413]],[[6.848067,5.649159],[5.162221,-4.509721],[2.116003,2.092912],[-5.826526,6.102804],[1.261903,8.635634],[-3.154574,-0.457780],[-4.048647,-5.200387],[3.796806,2.939002],[5.901964,6.751308],[2.983318,-9.020016],[0.697836,3.002702],[8.375410,-7.430246],[-8.083238,3.167889],[0.951469,-4.233708]],[[-6.301980,-8.565323],[-9.197113,1.025090],[-2.300827,-4.628574],[-1.575785,-2.132475],[5.637594,2.418704],[6.646877,3.294417],[-6.919223,-4.957043],[-7.382100,0.270024],[-6.555631,2.820886],[3.798070,-0.597013],[5.431994,-6.337268],[1.655317,8.655443],[-6.388670,-3.650560],[-3.767382,9.862436]],[[-7.138454,-1.532515],[-3.867033,6.945159],[6.535459,-5.270308],[2.409492,-9.922035],[3.963753,0.132419],[2.747165,3.987595],[4.754192,7.579409],[7.384583,-7.281732],[9.490026,4.614396],[-9.464621,-2.913592],[3.088629,5.178448],[8.881716,3.838259],[-1.083017,4.892779],[2.448186,5.376410]],[[-3.811421,-3.317457],[0.643112,8.393618],[9.147735,9.530235],[-8.110921,1.095435],[-3.961702,-3.665456],[-9.511392,-6.890528],[-1.674644,-9.629314],[7.582974,7.077943],[2.819274,7.726888],[-8.992817,6.985028],[6.398820,-3.381830],[-7.074312,7.743668],[-0.202401,-4.978996],[7.216724,0.578297]],[[-0.307655,2.288317],[8.444113,-7.199700],[-9.675928,0.026319],[-2.905902,-9.859875],[5.743474,5.881461],[-2.266951,-5.335035],[0.702682,1.898517],[-3.428945,-3.280494],[8.401430,-3.994337],[-2.143619,7.095728],[-0.213052,-0.652252],[9.622186,4.415940],[7.499167,-1.802601],[6.676099,-2.699980]],[[3.140241,-0.481029],[-9.041893,-5.022716],[-9.328780,-8.445038],[8.656779,-7.927086],[-9.066615,1.424231],[4.304865,9.981011],[0.818718,8.406775],[-4.926306,8.126748],[3.332694,0.309072],[2.020138,9.186166],[-3.405258,-0.263689],[6.644210,-4.187153],[8.423023,1.578211],[-6.908096,4.063662]],[[-7.987245,-2.515690],[-4.643164,-5.598023],[6.722025,9.604256],[-6.844277,2.347371],[-0.376559,-1.913815],[-0.211799,-0.101835],[-5.624273,-6.962387],[-0.437434,7.543496],[-1.386160,4.221696],[3.653558,9.238685],[-4.765246,2.227069],[1.984711,0.843630],[9.553157,-7.645799],[-3.820287,0.805664]]], dtype = "float64")#candidate|2482|(10, 14, 2)|const|float64
bop_2483 = relay.multiply(call_2472.astype('int8'), relay.reshape(const_2482.astype('int8'), relay.shape_of(call_2472))) # shape=(10, 14, 2)
bop_2486 = relay.multiply(call_2473.astype('int8'), relay.reshape(const_2482.astype('int8'), relay.shape_of(call_2473))) # shape=(10, 14, 2)
bop_2491 = relay.subtract(const_2482.astype('uint64'), relay.reshape(call_2472.astype('uint64'), relay.shape_of(const_2482))) # shape=(10, 14, 2)
bop_2494 = relay.subtract(const_2482.astype('uint64'), relay.reshape(call_2473.astype('uint64'), relay.shape_of(const_2482))) # shape=(10, 14, 2)
func_2090_call = mod.get_global_var('func_2090')
func_2095_call = mutated_mod.get_global_var('func_2095')
var_2500 = relay.var("var_2500", dtype = "uint8", shape = (600,))#candidate|2500|(600,)|var|uint8
call_2499 = relay.TupleGetItem(func_2090_call(relay.reshape(var_2500.astype('uint8'), [5, 10, 12]), relay.reshape(var_2500.astype('uint8'), [5, 10, 12]), relay.reshape(var_2500.astype('uint8'), [5, 10, 12]), relay.reshape(var_2500.astype('uint8'), [5, 10, 12]), ), 2)
call_2501 = relay.TupleGetItem(func_2095_call(relay.reshape(var_2500.astype('uint8'), [5, 10, 12]), relay.reshape(var_2500.astype('uint8'), [5, 10, 12]), relay.reshape(var_2500.astype('uint8'), [5, 10, 12]), relay.reshape(var_2500.astype('uint8'), [5, 10, 12]), ), 2)
output = relay.Tuple([bop_2483,bop_2491,call_2499,var_2500,])
output2 = relay.Tuple([bop_2486,bop_2494,call_2501,var_2500,])
func_2506 = relay.Function([var_2500,], output)
mod['func_2506'] = func_2506
mod = relay.transform.InferType()(mod)
mutated_mod['func_2506'] = func_2506
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2507 = relay.var("var_2507", dtype = "uint8", shape = (600,))#candidate|2507|(600,)|var|uint8
func_2506_call = mutated_mod.get_global_var('func_2506')
call_2508 = func_2506_call(var_2507)
output = call_2508
func_2509 = relay.Function([var_2507], output)
mutated_mod['func_2509'] = func_2509
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2546 = relay.var("var_2546", dtype = "float32", shape = (11, 11, 15))#candidate|2546|(11, 11, 15)|var|float32
uop_2547 = relay.acos(var_2546.astype('float32')) # shape=(11, 11, 15)
output = relay.Tuple([uop_2547,])
output2 = relay.Tuple([uop_2547,])
func_2551 = relay.Function([var_2546,], output)
mod['func_2551'] = func_2551
mod = relay.transform.InferType()(mod)
var_2552 = relay.var("var_2552", dtype = "float32", shape = (11, 11, 15))#candidate|2552|(11, 11, 15)|var|float32
output = func_2551(var_2552)
func_2553 = relay.Function([var_2552], output)
mutated_mod['func_2553'] = func_2553
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2452_call = mod.get_global_var('func_2452')
func_2453_call = mutated_mod.get_global_var('func_2453')
call_2574 = relay.TupleGetItem(func_2452_call(), 1)
call_2575 = relay.TupleGetItem(func_2453_call(), 1)
output = relay.Tuple([call_2574,])
output2 = relay.Tuple([call_2575,])
func_2578 = relay.Function([], output)
mod['func_2578'] = func_2578
mod = relay.transform.InferType()(mod)
output = func_2578()
func_2579 = relay.Function([], output)
mutated_mod['func_2579'] = func_2579
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1088_call = mod.get_global_var('func_1088')
func_1090_call = mutated_mod.get_global_var('func_1090')
call_2607 = relay.TupleGetItem(func_1088_call(), 6)
call_2608 = relay.TupleGetItem(func_1090_call(), 6)
func_2141_call = mod.get_global_var('func_2141')
func_2143_call = mutated_mod.get_global_var('func_2143')
call_2655 = relay.TupleGetItem(func_2141_call(), 1)
call_2656 = relay.TupleGetItem(func_2143_call(), 1)
func_637_call = mod.get_global_var('func_637')
func_639_call = mutated_mod.get_global_var('func_639')
const_2678 = relay.const([2.536338,-4.902967,-2.957893,2.514076,-2.821118,8.573568,-4.051316,-7.858428,-1.452855,8.354030,7.792035,1.921243,-7.138535,-0.613046,-1.274719,-4.165868,7.440844,-2.507419,8.281877,-8.388562,-5.947317,1.323439,8.796795,-5.608858,1.357690,-8.967432,0.845285,-5.143999,6.400427,8.334511,9.092714,4.585925,-1.525111,-2.913074,7.235595,5.402433,-7.685180,-1.851876,-2.585900,1.053566,-0.602457,-7.078410,7.649114,6.834721,-6.889985,2.418909,3.154832,-6.909185,-0.645393,9.574015,6.082046,-0.361678,-6.640683,0.633301,8.285119,-5.307932,-3.251259,6.634827,7.408641,-5.060335,-6.143554,5.952295,0.245266,7.061841,-5.460215,9.023417,-0.864742,9.399398,2.348618,7.108537,-0.522775,-9.491515,6.078279,-3.639078,1.261446,-1.847481,-1.523338,7.471275,1.071684,-2.515639,7.239359,3.736412,5.511808,-8.618580,8.612272,4.536911,6.549754,-0.586546,-6.265213,0.863398,-5.506747,8.268778,8.941599,-2.226353,6.580404,-0.304689,-8.143716,-7.082102,0.918800,-5.451442,1.823899,-9.200100,-8.697732,7.120256,3.989983,-4.546285,-2.337406,6.725205,-3.737682,-7.674228,-1.580295,-1.443939,-9.604999,-4.260338,-5.400786,-3.617922,-2.247797,-9.690497,3.239881,3.358372,2.858781,-0.331068,1.260826,7.391827,7.890923,-5.191126,0.845103,1.261766,5.279824,6.778173,-9.480335,0.344978,-6.342421,9.515500,7.352319,-6.390474,-6.586190,-0.808514,-6.089096,6.854361,7.971375,7.933183,9.344095,-0.613068,-7.567498,-5.568304,1.151414,-6.340748,8.919336,-9.713387,-1.529307,0.758722,6.903345,0.914692,-0.887638,-9.859083,-6.441198,-4.463961,-2.216186,-7.759583,-5.515069,9.348111,8.971201,9.289536,-6.155804,7.078129,-9.829658,6.046493,7.316632,-4.343427,-0.645535,5.538865,-1.021473,-8.794079,7.212225,-0.583890,2.550352,9.580009,1.446079,6.407873,-6.016052,-7.734576,-6.883627,7.906698,-3.908409,7.047279,-2.505265,5.904642,-7.710197,3.540185,0.801497,6.519793,7.223911,2.112219,9.234484,-8.947192,1.804872,-0.911420,0.256706,9.448822,0.816939,-8.527195,-2.900272,9.175273,9.306310,-8.238465,-9.849039,2.496098,-1.996477,-6.404517,3.683140,-0.526031,7.304733,-8.684456,-2.785771,1.551163,-5.851563,2.688830,3.224086,1.899581,6.184880,8.569369,2.417805,7.520606,5.567496,8.638224,9.449042,-2.550714,5.041484,3.218238,-9.187865,4.351930,-0.538364,5.193567,6.771381,-5.572836,-6.847918,-1.619864,-9.388455,-2.885606,1.022329,-0.675804,1.380175,-3.581365,-2.728903,-9.362744,-2.155144,6.162344,-1.656117,-2.137502,-4.829288,-2.534525,6.760261,-2.837258,-5.580861,6.335066,6.950309,-1.533342,-3.763449,0.605636,-3.593081,-4.681854,1.448381,5.237015,-9.648073,-9.401234,-3.972075,-5.122954,5.681078,4.967403,0.563543,-1.582699,9.023730,6.281151,7.850896,-3.799543,-4.776144,-1.041240,-3.206903,1.247896,3.084805,1.837804,-7.005819,5.988338,0.110355,5.235733,-8.120462,3.917233,0.908653,8.687256,7.240057,-5.790888,-2.788901,7.437676,3.744375,-0.141916,-8.595960,-8.595849,4.927486,0.160638,7.406226,0.967788,-3.527278,2.776547,6.433823,-1.647589,-7.904318,-8.883026,9.127583,4.323007,-5.683636,6.713418,-6.594078,6.718358,-2.130342,-9.865431,2.098013,3.897554,-5.247938,5.694959,3.541579,-3.494989,2.860183,8.071336,-6.742676,8.077077,-9.668624,-7.637232,-4.538186,-2.108439,-6.645948,-3.498716,-3.629205,8.250557,-3.297451,-4.645094,-7.367167,0.413446,0.591462,-9.011883,-3.510333,-4.731921,-2.417569,1.063908,-9.514269,7.062953,-7.427845,-4.368173,9.578778,6.620015,1.848981,-9.692222,-6.489929,0.572264,-4.142222,8.827991,5.067761,4.458075,-3.952466,-0.180883,-8.105824,6.869040,-1.899502,7.210991,0.888321,3.438959,-4.156119,-9.299922,-6.983529,-2.167469,9.346125,8.225857,3.246943,4.121827,4.579292,-2.841307,1.872423,-2.627080,9.174739,-4.438815,-9.798350,0.573794,7.203108,1.776422,0.022069,-4.950859,7.904219,2.547796,-6.579625,9.012573,7.436289,1.791035,8.557180,-4.131984,5.520199,-4.550137,-6.444833,-0.331194,1.726649,4.948012,8.843003,-8.639492,7.100051,4.130429,-7.613754,3.472841,-0.372159,-6.999975,-3.007447,-4.093274,6.739351,4.290848,2.558599,3.800440,4.441088,7.882947,-1.433993,-0.136002,-2.861066,9.659779,-3.827520,-0.221635,1.046566,-6.724186,4.059716,6.781381,4.453698,-6.483741,-1.325772,-2.967438,0.493998,-9.167536,7.663507,5.203305,-4.076893,-6.798000,-3.900553,0.099646,3.854084,2.362572,3.211249,-8.421863,-9.099836,1.663164,-8.498388,-6.697391,9.216414,-8.977418,8.589318,-3.825722,-0.340965,-9.836199,9.157712,8.140077,-5.875573,9.661372,0.037139,-6.306214,0.828571,0.194872,3.595158,3.224725,-5.157259,0.901299,5.886064,-5.631176,-0.648108,-8.737451,-6.467443,7.451083,8.706871,-2.294121,-8.467177,-2.771977,-5.877699,2.437811,4.781900,6.594555,-6.334968,-9.530239,-6.764883,-6.897582,3.698205,6.159569,-9.292016,-9.496053,9.503494,-8.505784,-2.120622,0.728202,-8.913000,-2.783406,4.521577,-7.214035,1.185738,-4.366229,9.415582,-1.995282,7.615703,-1.648583,-3.940048,6.776251,-4.120670,5.216664,-5.467157,6.318739,-6.403631,2.007055,4.278623,4.054409,-6.354552,0.107389,-9.928487,-2.406599,7.643862,1.358820,-9.133941,1.017286,4.336098,9.577598,-4.355549,-9.297745,-4.487568,-9.524629,4.071380,-4.319056,6.391353,7.973608,-9.383389,-0.839196,0.509664,5.883886,-5.324148,-8.780679,-0.859621,-0.451937,-8.699992,5.966444,-7.937877,1.962628,6.897461,4.181029,5.587310,2.947655,-7.356776,9.078694,1.213809,3.545643,6.238900,3.772956,1.575297,-7.611883,8.138078,7.872778,-3.927634,6.569458,-1.635214,-4.363168,-5.250696,5.976047,1.193415,-9.477438,-0.352015,8.587927,8.136330,0.219361,-3.648319,-4.973775,7.013781,6.300112,-3.738821,7.783911,7.666979,-3.157556,5.424986,-6.747913,-3.414872,-2.766387,2.305164,4.730568,-6.146312,6.621771,-9.479485,-1.859079,9.753433,2.090223,0.200613,1.111629,2.897472,-6.297146,6.846155,4.794578,2.459949,-0.836118,2.096334,7.269047,-1.886374,-1.379554,-5.060331,-8.278933,-8.950766,-4.931961,9.783394,-9.228335,4.235792,0.821338,-0.356964,1.063786,-1.656934,-7.725168,1.277954,-6.554026,-6.665721,-8.854832,1.029052,0.048907,6.224379,3.365836,3.384415,3.546740,-9.545100,5.793499,2.130244,-6.878716,2.602665,-2.911705,-8.897204,-0.389034,7.123810,-5.842617,-8.189836,0.326161,2.328582,-0.863590,-0.343443,4.591153,-9.263814,8.724980,4.450563,-4.015398,-3.446951,2.695015,0.326085,-5.621230,1.203824,0.360217,-2.511540,8.594887,-9.319679,-9.102764,7.157849,2.126743,-0.641611,9.791954,1.074470,-8.769628,-4.161384,-7.667067,-3.740603,6.599127,7.460093,5.264100,3.406534,7.863642,-3.508943,-9.388772,-2.121587,8.759160,1.091434,-2.668516,-1.866364,-6.530905,9.114851,-8.544235,8.019108,0.448672,9.238388,-2.685794,3.201354,-0.012756,3.653803,2.655627,-1.375291,3.422753,8.737969,-0.009776,-6.959348,4.962661,-2.199922,6.674291,9.046855,-2.795193,8.813222,4.561131,9.887355,-9.065473,-7.205118,-0.627067,9.752000,-0.464710,2.579446,-7.068919,-5.729309,2.919383,-7.821217,-0.330762,0.721524,-5.197491,-6.557984,0.486179,3.689356,-7.027842,1.393735,-0.363955,-7.146013,-3.214700,-7.710950,-1.487434,-7.783395,7.252461,-1.154186,-6.016286,-2.773343,7.497517,-6.711208,-0.238101,-0.439220,9.204787,3.893600,-8.832456,3.065704,-9.879649,-2.531781,-7.394516,-3.682077,0.912994,4.552020,3.380809,-9.544327,-0.045427,9.734726,-1.108742,-7.497385,-9.774484,8.411213,2.626186,8.288827,-2.632150,-1.518231,-8.549185,-7.196265,-1.964918,5.688225,-7.776458,-1.407239,-8.904702,2.085741,6.900300,-6.286147,-1.711582,6.098991,-4.889268,6.082461,-4.137226,1.480023,-5.650575,-1.047707,-2.735699,-3.776401,8.410025,1.435382,6.846101,-3.097445,-1.546173,-2.173243,-4.560625,4.258775,-0.216606,-8.098091,-6.590032,1.125340,3.605538,3.937546,6.685548,-5.267941,-7.581040,-5.562423,0.564890,0.993110,3.721452,-3.835503,0.192322,4.562195,-9.639502,-4.866534,5.803244,1.471235,2.347725,-4.247501,9.708665,2.628469,0.730890,7.204556,-5.576206,-5.824484,-7.854382,8.284507,-8.575818,7.020333,-6.376790,-3.857800,0.694375,4.003777,-8.763442,1.141645,-3.918287,-2.764155,-5.129407,-4.470179,-1.785777,-5.606495,1.299222,-5.204864,-1.415583,-0.151776,5.013867,2.516199,5.790637,1.956604,-9.963444,4.822224,0.651214,-2.321944,3.622172,-9.069660,-5.484280,-1.143792,-0.170760,1.543308,-9.359278,-3.227006,-6.616948,-9.421609,-6.084912,-3.641235,-9.623181,8.873251,8.646214,1.603255,6.859573,-1.576881,-6.764743,7.814762,7.282900,-0.774535,0.369735,0.977650,-5.871683,4.320806,4.763801,5.155759,0.918890,8.809826,1.082348,7.249760,-9.417954,-2.077743,-6.015355,8.780268,-4.465157,9.895777,-7.342362,-5.376195,-1.510409,9.945567,9.374457,0.804611,-6.415884,6.089839,9.974209,-6.453206,-9.111573,-5.092463,-4.364547,-8.082533,2.724271,-9.566636,-8.352433,-1.352616,-5.434413,-0.433353,8.929040,-1.435716,-3.027428,3.448521,-6.528656,3.875867,-3.381111,2.927933,4.198458,1.940548,0.857142,0.420164,-4.964884,-4.823127,3.106856,-3.049993,-6.534251,-8.969290,-2.676680,-3.982452,2.701623,3.699850,-6.169331,7.843345,-6.469313,-4.869379,-6.969979,5.066094,-6.797052,-2.783794,-3.697198,-1.608563,5.316869,2.960849,-8.897308,4.706587,4.892189,9.618419,1.028188,-9.124746,0.313229,-2.195308,-3.871249,7.368110,2.861760,-2.740870,-7.954623,4.127753,-4.686846,-6.502974,-0.790078,-6.274168,-0.938571,4.073468,-6.777316,-9.116331,6.350099,-6.101061,-6.687533,-2.269067,9.534868,-4.780836,3.979671,9.660865,-9.452925,-5.156491,6.278471,9.760809,-9.106024,-6.973897,-3.173778,-4.543348,6.213014,8.895640,-7.031482,4.547585,-2.276620,-2.422895,0.048772,8.153465,4.095695,5.406601,3.301459,-6.898991,9.290154,-0.661580,4.366563,3.624811,1.930899,6.358930,-2.505249,1.549866,-9.633998,-4.420767,-1.365273,1.500724,1.082576,-6.341983,7.334399,-4.371831,6.006474,-7.964468,-4.883874,9.276835,-9.447325,2.476473,-3.783068,-2.156714,-6.976599,-9.120460,-3.413998,-8.229534,-7.243760,-7.616034,-6.217967,8.975237,-5.420589,-9.235037,9.187654,-7.832796,-2.064928,0.197626,7.684186,9.891730,-5.523388,-2.661023,-5.652399,5.703374,9.703787,-7.932295,-1.682699,-5.690677,-3.146521,7.317376,-3.450447,2.140774,-4.085035,5.358730,-0.136753,6.129282,0.735980,-1.087756,6.628754,-2.641409,2.015514,-3.694281,-4.890843,-2.657916,6.100393,0.054777,-3.126982,3.181228,5.380472,-0.101277,7.183773,-8.236129,0.592641,-1.242835,-8.249602,8.721144,-0.065811,-6.630667,-7.997234,6.625301,-8.714465,-9.436312,0.948659,6.213155,-8.927665,9.334075,-0.998432,-2.155869,-8.384702,-0.144679,-2.619019,-4.053627,4.640257,9.237518,-3.525032,7.445978,9.612789,4.009776,0.075320,6.129861,-8.549890,-9.931837,9.989572,-2.057818,3.835810,-8.753887,-3.395532,-1.251901,6.341835,-1.228772,-3.491227,6.216855,3.158961,7.497019,5.212659,-9.272275,9.120707,-9.923573,-3.763646,-9.236804,4.713007,9.989067,9.981485,5.215405,0.907125,-4.005564,-3.759716,-7.756000,-2.953036,-9.766221,-2.113937,7.699051,8.116656,-2.074159,-5.553829,-1.614200,-9.979196,-8.160762,4.010398,-9.952903,0.742145,1.430540,-4.815350,9.504901,1.346672,3.829837,-3.410643,7.459863,-4.017028,1.732803,-6.663476,5.582095,8.052569,-1.922280,1.525048,-9.006035,-9.157521,-2.231973,1.492919,3.667796,-2.737730,-5.635650,-0.493065,-0.863866,-9.279142,6.516120,4.373537,6.699783,-1.392050,-1.658522,-3.820618,-8.568605,-0.389930,-7.200033,-3.436959,-9.412890,-8.852413,-6.927025,-1.181474,5.570009,-2.818301,4.165300,5.582504,7.390441,-1.559491,-2.572250,-1.898187,8.206404,7.049922,-3.564145,-3.985331,-6.244037,4.042557,8.535872,-6.832532,-5.453476,0.079634,-4.827134,-1.678931,9.138629,1.085168,-4.220572,-7.583531,-3.491469,8.115168,-6.872172,5.998257,-5.736825,2.863804,-7.700102,-8.039734,-1.894580,-1.745497,7.881180,-1.434865,-2.572970,-0.035719,9.307878,-4.963875,-1.005557,-7.573023,9.583038,-3.621535,0.455508,0.360140,4.141783,-9.686547,-6.525679,-8.517413,-4.825768,-2.607766,9.216516,4.962664,9.259441,-2.509546,7.421696,-8.491901,2.840454,-4.088443,-4.127654,-2.822679,8.180390,-8.144830,-4.723778,5.085139,8.433648,0.202326,-6.966056,-0.505128,-5.143925,-4.561807,6.915538,4.960386,2.928406,8.779570,1.349176,1.033182,1.664719,-7.244046,-9.526602,-7.965562,4.832738,-2.472331,-4.482222,-9.737479,-9.699532,-3.316141,6.250942,-4.066179,5.468626,1.027160,5.381213,2.790684,-3.182848,-8.856294,-9.485171,-9.917321,-3.506823,8.846123,9.814322,-6.178605,-6.750273,-3.118861,-4.966116,-8.254136,-9.660411,-3.557823,-1.054782,-5.164613,-5.889478,-5.937322,9.863216,-6.153301,3.058154,-4.450324,1.709539,-7.648577,5.378184,-6.041343,9.557099,6.429537,-4.179889,-3.775723,-0.693923,4.861022,4.844803,1.185949,-6.875101,8.101081,3.510444,8.354188,-5.283069,8.894279,-7.196084,4.787826,-6.966414,9.875283,-4.405727,-0.710103,1.186966,1.680097,5.834537,5.365571,2.595209,5.094539,8.514724,0.797260,4.606372,1.282802,-9.383241,6.088507,-6.150879,3.344896,-4.554098,6.838095,3.945644,3.928745,9.705315,7.851897,0.269275,9.383140,5.768680,-2.234985,7.006302,-8.624353,-6.572620,3.203627,-7.475578,4.027170,-9.705478,-0.758026,-0.966879,-7.740695,8.462340,-4.673773,-2.399431,5.760695,-8.480435,-0.740667,8.300228,-8.159176,1.123818,-4.142517,-4.172820,-8.581461,-5.066589,2.434772,-5.150987,-8.166029,1.042210,-2.419490,1.434452,7.802995,0.932726,7.869446,-6.559197,-7.168951,4.885452,6.383660,1.815024,-7.411565,4.441634,-2.583432,2.659724,1.036718,0.903398,1.790770,2.166251,-6.211334,-1.178505], dtype = "float32")#candidate|2678|(1365,)|const|float32
call_2677 = relay.TupleGetItem(func_637_call(relay.reshape(const_2678.astype('float32'), [1365,])), 0)
call_2679 = relay.TupleGetItem(func_639_call(relay.reshape(const_2678.astype('float32'), [1365,])), 0)
uop_2683 = relay.log10(const_2678.astype('float32')) # shape=(1365,)
output = relay.Tuple([call_2607,call_2655,call_2677,uop_2683,])
output2 = relay.Tuple([call_2608,call_2656,call_2679,uop_2683,])
func_2687 = relay.Function([], output)
mod['func_2687'] = func_2687
mod = relay.transform.InferType()(mod)
mutated_mod['func_2687'] = func_2687
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2687_call = mutated_mod.get_global_var('func_2687')
call_2688 = func_2687_call()
output = call_2688
func_2689 = relay.Function([], output)
mutated_mod['func_2689'] = func_2689
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1683_call = mod.get_global_var('func_1683')
func_1684_call = mutated_mod.get_global_var('func_1684')
call_2717 = func_1683_call()
call_2718 = func_1683_call()
func_2090_call = mod.get_global_var('func_2090')
func_2095_call = mutated_mod.get_global_var('func_2095')
var_2728 = relay.var("var_2728", dtype = "uint8", shape = (600,))#candidate|2728|(600,)|var|uint8
call_2727 = relay.TupleGetItem(func_2090_call(relay.reshape(var_2728.astype('uint8'), [5, 10, 12]), relay.reshape(var_2728.astype('uint8'), [5, 10, 12]), relay.reshape(var_2728.astype('uint8'), [5, 10, 12]), relay.reshape(var_2728.astype('uint8'), [5, 10, 12]), ), 1)
call_2729 = relay.TupleGetItem(func_2095_call(relay.reshape(var_2728.astype('uint8'), [5, 10, 12]), relay.reshape(var_2728.astype('uint8'), [5, 10, 12]), relay.reshape(var_2728.astype('uint8'), [5, 10, 12]), relay.reshape(var_2728.astype('uint8'), [5, 10, 12]), ), 1)
func_1683_call = mod.get_global_var('func_1683')
func_1684_call = mutated_mod.get_global_var('func_1684')
call_2733 = func_1683_call()
call_2734 = func_1683_call()
func_1952_call = mod.get_global_var('func_1952')
func_1953_call = mutated_mod.get_global_var('func_1953')
call_2735 = func_1952_call()
call_2736 = func_1952_call()
func_2248_call = mod.get_global_var('func_2248')
func_2250_call = mutated_mod.get_global_var('func_2250')
call_2738 = relay.TupleGetItem(func_2248_call(), 1)
call_2739 = relay.TupleGetItem(func_2250_call(), 1)
func_1306_call = mod.get_global_var('func_1306')
func_1310_call = mutated_mod.get_global_var('func_1310')
var_2744 = relay.var("var_2744", dtype = "float64", shape = (660, 1))#candidate|2744|(660, 1)|var|float64
var_2745 = relay.var("var_2745", dtype = "float32", shape = (1365,))#candidate|2745|(1365,)|var|float32
call_2743 = relay.TupleGetItem(func_1306_call(relay.reshape(var_2744.astype('float64'), [10, 6, 11]), relay.reshape(var_2745.astype('float32'), [1365,]), relay.reshape(var_2745.astype('float32'), [15, 13, 7]), ), 4)
call_2746 = relay.TupleGetItem(func_1310_call(relay.reshape(var_2744.astype('float64'), [10, 6, 11]), relay.reshape(var_2745.astype('float32'), [1365,]), relay.reshape(var_2745.astype('float32'), [15, 13, 7]), ), 4)
output = relay.Tuple([call_2717,call_2727,var_2728,call_2733,call_2735,call_2738,call_2743,var_2744,var_2745,])
output2 = relay.Tuple([call_2718,call_2729,var_2728,call_2734,call_2736,call_2739,call_2746,var_2744,var_2745,])
func_2749 = relay.Function([var_2728,var_2744,var_2745,], output)
mod['func_2749'] = func_2749
mod = relay.transform.InferType()(mod)
mutated_mod['func_2749'] = func_2749
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2749_call = mutated_mod.get_global_var('func_2749')
var_2751 = relay.var("var_2751", dtype = "uint8", shape = (600,))#candidate|2751|(600,)|var|uint8
var_2752 = relay.var("var_2752", dtype = "float64", shape = (660, 1))#candidate|2752|(660, 1)|var|float64
var_2753 = relay.var("var_2753", dtype = "float32", shape = (1365,))#candidate|2753|(1365,)|var|float32
call_2750 = func_2749_call(var_2751,var_2752,var_2753,)
output = call_2750
func_2754 = relay.Function([var_2751,var_2752,var_2753,], output)
mutated_mod['func_2754'] = func_2754
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1473_call = mod.get_global_var('func_1473')
func_1475_call = mutated_mod.get_global_var('func_1475')
call_2770 = func_1473_call()
call_2771 = func_1473_call()
uop_2774 = relay.asin(call_2770.astype('float64')) # shape=(10, 14, 2)
uop_2776 = relay.asin(call_2771.astype('float64')) # shape=(10, 14, 2)
output = relay.Tuple([uop_2774,])
output2 = relay.Tuple([uop_2776,])
func_2782 = relay.Function([], output)
mod['func_2782'] = func_2782
mod = relay.transform.InferType()(mod)
output = func_2782()
func_2783 = relay.Function([], output)
mutated_mod['func_2783'] = func_2783
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2832 = relay.var("var_2832", dtype = "float64", shape = (8, 9, 2))#candidate|2832|(8, 9, 2)|var|float64
uop_2833 = relay.sinh(var_2832.astype('float64')) # shape=(8, 9, 2)
output = relay.Tuple([uop_2833,])
output2 = relay.Tuple([uop_2833,])
func_2840 = relay.Function([var_2832,], output)
mod['func_2840'] = func_2840
mod = relay.transform.InferType()(mod)
var_2841 = relay.var("var_2841", dtype = "float64", shape = (8, 9, 2))#candidate|2841|(8, 9, 2)|var|float64
output = func_2840(var_2841)
func_2842 = relay.Function([var_2841], output)
mutated_mod['func_2842'] = func_2842
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2452_call = mod.get_global_var('func_2452')
func_2453_call = mutated_mod.get_global_var('func_2453')
call_2852 = relay.TupleGetItem(func_2452_call(), 0)
call_2853 = relay.TupleGetItem(func_2453_call(), 0)
output = call_2852
output2 = call_2853
func_2862 = relay.Function([], output)
mod['func_2862'] = func_2862
mod = relay.transform.InferType()(mod)
mutated_mod['func_2862'] = func_2862
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2862_call = mutated_mod.get_global_var('func_2862')
call_2863 = func_2862_call()
output = call_2863
func_2864 = relay.Function([], output)
mutated_mod['func_2864'] = func_2864
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2880 = relay.var("var_2880", dtype = "float32", shape = (16, 9))#candidate|2880|(16, 9)|var|float32
uop_2881 = relay.atanh(var_2880.astype('float32')) # shape=(16, 9)
output = relay.Tuple([uop_2881,])
output2 = relay.Tuple([uop_2881,])
func_2890 = relay.Function([var_2880,], output)
mod['func_2890'] = func_2890
mod = relay.transform.InferType()(mod)
mutated_mod['func_2890'] = func_2890
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2891 = relay.var("var_2891", dtype = "float32", shape = (16, 9))#candidate|2891|(16, 9)|var|float32
func_2890_call = mutated_mod.get_global_var('func_2890')
call_2892 = func_2890_call(var_2891)
output = call_2892
func_2893 = relay.Function([var_2891], output)
mutated_mod['func_2893'] = func_2893
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1758_call = mod.get_global_var('func_1758')
func_1760_call = mutated_mod.get_global_var('func_1760')
call_2895 = relay.TupleGetItem(func_1758_call(), 3)
call_2896 = relay.TupleGetItem(func_1760_call(), 3)
func_1641_call = mod.get_global_var('func_1641')
func_1645_call = mutated_mod.get_global_var('func_1645')
var_2904 = relay.var("var_2904", dtype = "uint32", shape = (168,))#candidate|2904|(168,)|var|uint32
call_2903 = relay.TupleGetItem(func_1641_call(relay.reshape(var_2904.astype('uint32'), [8, 7, 3]), relay.reshape(var_2904.astype('uint32'), [8, 7, 3]), relay.reshape(var_2904.astype('float64'), [8, 7, 3]), ), 0)
call_2905 = relay.TupleGetItem(func_1645_call(relay.reshape(var_2904.astype('uint32'), [8, 7, 3]), relay.reshape(var_2904.astype('uint32'), [8, 7, 3]), relay.reshape(var_2904.astype('float64'), [8, 7, 3]), ), 0)
func_2191_call = mod.get_global_var('func_2191')
func_2193_call = mutated_mod.get_global_var('func_2193')
call_2907 = relay.TupleGetItem(func_2191_call(), 0)
call_2908 = relay.TupleGetItem(func_2193_call(), 0)
func_2090_call = mod.get_global_var('func_2090')
func_2095_call = mutated_mod.get_global_var('func_2095')
var_2911 = relay.var("var_2911", dtype = "uint8", shape = (600,))#candidate|2911|(600,)|var|uint8
call_2910 = relay.TupleGetItem(func_2090_call(relay.reshape(var_2911.astype('uint8'), [5, 10, 12]), relay.reshape(var_2911.astype('uint8'), [5, 10, 12]), relay.reshape(var_2911.astype('uint8'), [5, 10, 12]), relay.reshape(var_2911.astype('uint8'), [5, 10, 12]), ), 0)
call_2912 = relay.TupleGetItem(func_2095_call(relay.reshape(var_2911.astype('uint8'), [5, 10, 12]), relay.reshape(var_2911.astype('uint8'), [5, 10, 12]), relay.reshape(var_2911.astype('uint8'), [5, 10, 12]), relay.reshape(var_2911.astype('uint8'), [5, 10, 12]), ), 0)
func_1524_call = mod.get_global_var('func_1524')
func_1526_call = mutated_mod.get_global_var('func_1526')
call_2918 = relay.TupleGetItem(func_1524_call(), 0)
call_2919 = relay.TupleGetItem(func_1526_call(), 0)
func_1306_call = mod.get_global_var('func_1306')
func_1310_call = mutated_mod.get_global_var('func_1310')
var_2921 = relay.var("var_2921", dtype = "float64", shape = (10, 66))#candidate|2921|(10, 66)|var|float64
const_2922 = relay.const([5.328756,-5.013232,-8.839009,8.239959,4.284378,6.729806,-3.179008,7.330447,8.410569,-2.541867,6.998520,7.147218,-2.772880,8.425967,-0.544526,2.414707,1.895947,1.125889,-9.989682,7.115629,5.597278,9.606987,0.534083,-5.045890,7.970242,1.095568,2.630982,-9.947016,-7.678674,-7.777254,-2.324248,-1.620746,6.482404,7.269631,-9.019687,-6.971769,3.981053,1.803324,-3.923936,0.865879,3.901681,2.844562,-2.335887,-4.407798,9.052598,2.658112,1.434881,7.109877,9.016347,-6.132624,-0.477791,6.595079,-7.991742,-8.166371,-0.585349,-4.509446,6.070776,9.923944,6.423442,-1.840281,-9.285398,-0.715730,3.738934,-0.804935,-5.309648,-5.809030,9.532814,3.767820,-9.705668,6.342650,6.084917,-8.766474,2.805535,-2.241080,-4.809523,6.236647,-7.257405,-5.637247,-4.933147,-6.174227,3.029110,1.442508,9.212049,2.242025,-8.006835,-3.352587,-7.128900,-4.274091,-7.419130,0.726832,7.605000,5.612373,-5.194674,3.422448,3.571159,-9.114762,-1.570034,3.443456,-5.466458,-2.497621,7.689016,-7.895814,3.372537,0.351323,-4.640608,-5.413895,-2.857210,1.325850,4.565544,6.212446,6.943411,-2.013984,7.163557,2.511336,-7.080676,-4.155718,-2.616480,3.031460,-5.437451,-3.149385,9.670380,-6.503227,-8.639888,9.006251,7.470689,-6.508630,-6.064515,-8.742237,2.902556,3.825385,6.031826,1.807666,-2.572235,-2.726180,-3.914579,0.511743,2.781215,6.066131,-7.922715,-7.455876,4.060998,-4.582033,3.516419,0.704188,-1.928048,-2.436041,-3.835302,8.361398,-2.615666,9.464803,-6.009352,7.630664,4.760889,-2.531838,9.425532,0.686844,0.428665,-8.051172,-9.610157,9.488352,-5.305104,5.627760,-2.289255,5.833491,-5.116135,7.008243,-2.423738,-7.516290,5.348254,7.346204,0.726769,9.296650,-1.151264,6.414749,5.757904,4.300530,-8.415024,-9.335914,5.988288,-0.152767,8.627584,2.218886,-7.342618,6.219380,-4.328282,-4.315785,6.897655,-1.352379,7.790751,-9.435253,3.779552,-1.145149,-8.480842,-9.399939,-5.984152,3.072367,-0.578623,5.674544,2.977442,-4.204070,9.873604,1.470976,-8.405360,-3.680969,-2.634285,-0.770043,-9.928088,7.175357,6.873487,4.545168,-1.588898,3.821133,3.336567,3.457994,0.760149,-3.786848,-2.764440,1.512272,2.306052,-7.176633,0.580251,1.208041,4.958885,-3.823918,-1.378956,0.699327,4.661652,4.346921,5.442226,2.273076,-8.252402,-8.813864,4.756958,7.407452,8.220086,-1.401362,-1.465183,0.737242,6.960962,9.905327,2.375883,-3.786403,7.672002,1.889131,1.764347,-3.103666,-1.005877,-9.252232,-1.821914,-5.484305,-3.954618,-9.785000,6.558769,-3.910943,-9.044711,-1.631890,-3.882144,-5.005975,3.927715,1.168236,-0.760582,-7.110161,-7.997216,-0.466403,1.123305,-4.664952,-2.210727,-1.620628,-5.048331,-5.354361,-7.191872,-4.312322,7.166567,8.710121,-7.249556,1.026129,-7.002825,2.748983,4.886521,3.251344,0.314693,-5.645647,1.580061,7.060198,9.287836,-6.476872,-6.437582,8.074930,0.919322,-7.722518,6.883588,-1.368548,-5.019022,-1.016917,7.334554,-8.548000,7.153989,-8.153800,4.493920,5.078952,9.217554,5.300918,-3.327637,-8.639491,0.615063,-1.505762,-8.578583,-8.474626,-0.107057,-5.265557,-6.232484,-5.298469,8.180191,-6.243738,-8.910802,-6.271403,0.636983,-5.949216,-3.959627,6.226677,3.076764,-1.696772,-1.676152,-3.651788,6.816073,0.591866,6.114056,0.667454,-9.801967,-6.907401,7.349939,0.667984,-7.978838,5.353036,-5.348824,-7.603460,-5.052540,5.529798,0.140122,3.121020,0.009241,-8.723911,6.427857,4.340052,-3.077420,-0.157967,-9.546749,-4.149352,1.321198,5.873468,4.256136,-3.274258,-7.361148,-0.314460,3.796476,-9.581532,-2.327267,-6.584325,3.724419,-8.766874,8.528444,7.503660,-5.036090,-6.047920,7.365178,3.389283,0.460947,-5.839044,2.890455,3.485790,3.246091,5.041645,-6.668323,8.006762,-2.920202,7.214343,-4.709419,3.251351,4.477346,1.523271,-2.093315,0.686277,-4.269641,6.507218,-9.317573,-5.847009,5.472375,-6.069641,9.440063,4.609657,7.214364,7.902549,5.276763,-0.676534,-0.002066,-7.546512,-1.120493,-8.932600,4.848830,-4.955579,-8.345883,2.516307,7.666885,-0.033775,3.149229,-4.899566,-2.468051,6.833840,-9.725600,-4.800484,2.042842,2.997047,-3.163235,-0.423309,-0.772122,-7.442771,6.929737,-5.829392,1.754759,-0.125534,-7.182360,3.415045,-5.752793,-5.587554,-0.237646,-8.556131,8.259222,4.234886,2.899100,-9.699886,-7.302730,3.713493,-1.713746,-3.460666,-5.845419,7.750057,8.874278,3.726890,1.143755,7.270046,7.854655,8.247179,5.193125,-9.409070,-4.246396,-4.262555,0.917278,-1.363598,5.259074,0.146964,1.166111,-3.152130,6.836354,8.515292,-3.732823,-4.982683,-0.203189,-3.978667,-3.100498,-2.845997,7.684810,-9.189523,-7.199711,7.278964,6.820290,3.901897,3.874800,-2.518210,-2.661095,7.460217,-3.992298,-3.289624,6.970115,-3.513189,2.080375,-1.104844,-5.226441,-8.563998,0.859814,-1.577814,-5.260223,-7.797765,-8.152154,5.418642,-7.134311,4.550229,-8.974708,7.909283,-1.684855,-6.459500,-2.555008,4.646439,2.971516,-0.695000,7.991473,3.743709,-1.570357,5.909664,-2.001065,8.512268,5.533021,4.191803,-5.763491,4.903353,3.594642,8.942209,-5.764957,-9.439019,-8.516198,-7.398380,7.538682,1.187563,3.274683,-4.901034,6.515344,-0.123528,-9.882308,8.261095,-6.898444,-8.278224,-0.219731,-0.454571,-4.749051,-9.777419,6.910023,-2.895230,-0.228328,-6.537925,-4.851628,-9.875377,8.751169,-6.733050,-6.794969,-5.140994,-7.609819,-1.372632,-4.509109,1.719611,4.263732,0.646776,-8.824098,-7.741570,-8.234815,4.895510,2.063772,-9.711240,-1.498574,3.133345,-4.232919,-5.477362,-1.447246,2.627538,1.713136,0.768998,-2.518128,7.323510,-9.839237,-6.595721,-5.391111,7.564909,9.853335,-9.950608,-6.258984,-6.507097,-6.358015,5.165435,-9.767037,2.090420,1.269834,-8.203779,-2.286972,-5.128615,6.039368,2.345489,-0.833978,-4.583102,-2.458632,-3.900696,-3.209224,-5.820592,2.239376,3.496052,-2.441928,0.432539,7.356130,-4.451088,8.979444,-4.732856,0.788429,-9.324805,-7.833651,8.755089,-1.512219,8.722280,-4.998831,3.334530,7.496582,4.087123,8.157078,5.526720,7.790298,-0.626743,-7.667489,9.864410,-8.672318,-8.675597,-2.769599,-9.506008,7.814081,9.827633,9.432974,9.031525,3.580148,-4.932000,6.436373,7.873454,9.530820,3.091439,-4.717709,9.877327,-5.289792,4.078815,8.841094,8.360712,1.835992,9.720570,3.675565,8.036503,0.306983,-0.590316,9.697559,3.641365,7.175397,8.300235,-8.775461,1.485050,-0.224489,0.205714,-4.749537,-2.636060,-4.393808,-2.182033,-4.379261,-8.193974,9.096292,-9.969291,3.100827,-4.489695,-5.194934,-3.711707,-9.810144,5.035901,6.101622,7.228246,-1.218669,1.309798,1.557938,-9.552636,-9.477449,4.322878,1.949493,-7.310505,-5.710789,-5.147398,-0.180504,3.480087,-6.423358,5.960502,0.822332,5.974918,-4.257268,-5.490494,-0.367704,4.163279,-1.676626,-1.254666,-7.027949,-8.535375,3.945512,8.614577,1.503989,4.744981,-3.711300,8.375528,5.530056,1.243259,-2.569196,8.293233,-1.630905,5.469268,4.212711,0.578855,-6.170467,-9.479344,-4.660890,-7.732658,-4.368948,8.376217,-4.327119,3.907777,7.694591,-2.304488,-8.892446,-8.343087,-2.711846,0.466973,0.635992,-5.964039,-0.590538,-3.547648,-5.384050,9.778675,-3.023527,7.942168,4.715800,-4.425909,7.664686,-9.462042,-4.668152,9.860774,-1.887090,-2.612275,4.859971,-1.788265,-3.527322,-5.406098,1.686300,1.385349,-7.637034,-4.482365,4.968664,-2.708963,2.812381,0.586263,5.697002,2.894385,4.236134,1.698610,-2.636935,7.435075,-5.489364,1.187813,9.420817,7.908561,-5.919957,2.142912,-0.220331,-0.595302,4.776018,5.499279,-2.672572,-7.481185,2.896451,-6.519262,8.741502,-6.554854,5.234765,2.155956,-3.877391,-3.309432,6.083711,7.309422,6.472834,5.230568,6.990235,9.519340,5.497951,5.051219,-2.152846,-9.539892,2.940155,8.828052,9.868874,8.208320,-5.315670,-4.206115,-4.195590,8.678163,3.177424,-1.717584,-6.894030,7.031825,9.824184,-4.560648,-8.336798,-5.293802,3.238854,4.723977,-0.547217,-0.267519,-1.942202,-2.346045,-1.067081,9.263832,1.630998,-7.068776,8.073949,4.330330,1.528747,-3.526988,6.396295,2.587317,4.874513,4.857596,-9.372920,-3.364456,-8.467529,1.936078,-2.326261,-4.196926,-1.022809,0.817453,-0.453264,-2.601070,-0.409346,-7.747450,4.038838,-0.073180,-4.358589,2.076905,-7.758386,7.787390,-7.087451,1.076910,4.424050,-6.479860,8.372711,-8.417219,8.670852,1.950875,6.835584,0.265958,8.546772,7.461598,9.789891,-0.748972,-2.935262,-1.983463,-7.412486,-2.727217,5.177682,2.024865,-6.843445,6.662698,1.360600,-1.770944,-9.046343,6.222521,8.519066,8.473744,6.861327,-3.890400,9.728109,7.012623,9.615713,-5.446025,-1.651976,6.597310,4.413272,-8.768715,8.811488,6.121375,-7.652426,1.165933,-4.624984,-1.190989,4.420769,1.406663,0.727111,-5.502011,-8.578048,-0.230338,6.125499,-0.604948,-4.421227,4.686963,6.690094,1.354373,1.776301,6.332591,0.455979,-7.654580,6.140559,0.718438,-8.541444,5.074412,-3.247598,7.264142,0.683998,-7.492861,1.425192,8.637091,3.507572,-8.104545,0.799771,-9.812333,-9.098130,6.821945,-5.992495,-8.818969,9.536911,-2.557287,3.048726,9.121412,4.528376,-3.282832,3.849874,9.068900,-4.260400,1.609818,3.728612,-1.911310,-6.996083,9.193718,3.342747,4.368980,4.272758,-2.098076,-6.749190,7.245199,-7.479974,-9.609819,8.641149,-0.074190,6.927051,-7.672051,8.322166,-7.599231,-3.551458,-7.801017,-3.312463,-1.585237,2.476390,-5.931338,-6.918826,6.149636,-0.230577,-0.424015,2.801646,8.476358,8.760315,-9.054053,5.944156,-5.569747,-8.662603,2.669404,7.251139,3.149200,-0.967385,-4.466362,2.205108,0.116871,3.493721,-8.268153,-0.019838,0.300761,0.364405,-8.421228,6.985613,-7.862303,-3.772333,-8.671015,-2.972031,-0.698997,0.352843,4.685123,4.064283,-3.207436,8.998964,1.919667,1.895493,5.397526,-7.465623,5.072536,-6.694329,-7.721864,8.175142,-0.891030,-6.717171,-7.157934,8.341917,-8.852653,9.443431,1.363404,6.062614,-2.829866,-5.009354,0.697225,-4.639797,-9.979481,3.242773,5.604777,7.497776,-8.791877,-6.688210,2.052836,-4.267840,-2.516893,4.048958,-7.422650,7.023534,2.333386,-1.202067,-8.286958,1.366059,-4.720343,8.662307,5.531214,8.667386,-2.171232,-6.185523,-0.366432,-2.574185,-2.810408,-9.504595,-9.480472,-2.542410,5.336006,5.181933,2.063673,-3.629829,7.241374,8.497786,-1.240856,-3.231187,-8.771999,7.434818,1.671946,-0.829881,9.136099,5.721446,-3.769991,0.603538,-5.552046,7.148353,2.375339,5.985681,-3.688151,6.274095,-9.588832,6.602172,-8.533221,3.139913,-5.051791,-1.116533,-9.134269,-5.016444,9.303996,5.316779,-2.936066,6.976733,-5.606072,-5.249305,9.760006,-8.716898,0.574890,-0.750689,-6.019790,7.481670,6.187742,-1.927410,9.851406,-9.365264,-4.731356,8.641937,0.223498,-5.877571,1.572038,-0.449224,-1.337038,-0.625400,-1.764720,7.898446,-9.070206,-7.642247,-0.320973,-1.560847,7.404654,-7.817059,-0.388249,-1.812297,-1.371740,1.152959,9.696838,-3.878675,-3.057289,4.395780,-1.699360,2.672603,0.726274,-2.175473,-2.249776,-1.115830,-2.364848,9.423213,-3.166991,-2.505873,-6.598797,-0.699039,3.916012,4.927909,-1.522162,-0.201817,-3.975890,9.908529,2.599994,1.667681,-5.456651,8.004480,4.207074,1.906643,-2.990374,-2.893466,-2.603823,-6.335339,-4.622390,7.548082,-0.449696,6.369458,-9.778630,6.138896,-1.307571,7.441686,-6.744227,6.639871,-7.332250,5.542842,-6.577028,1.618659,-6.734827,-1.715425,-0.954301,6.879956,-6.418427,1.760429,-2.460483,-5.087816,1.240695,7.086970,1.612950,6.549923,-2.631441,-0.867368,5.020131,0.431054,-0.993054,-1.873815,1.039675,8.175943,-7.266257,-4.746839,2.036293,6.687476,0.647260,-0.877094,-7.564045,-9.587620,-6.764017,0.414461,-8.518281,-1.519916,9.637237,3.432734,-4.487949,-4.909107,1.504245,7.019872,2.344524,-6.927956,-2.493962,0.411423,-0.591060,0.130301,1.896887,-1.017612,4.435121,-6.531657,3.743516,2.831061,-2.461275,-9.207802,5.694711,5.257930,5.409832,8.439040,-2.478154,-0.562697,-0.813341,-0.046975,-5.386090,6.682607,1.101607,-4.545822,-1.565895,-7.443477,2.546367,-4.659716,4.201948,-9.305893,2.628205,-3.464604,-0.667513,2.462647,-5.303027,-9.840241,-8.765679,-3.961097,2.926487,6.965976,-8.008178,7.732487,-6.012100,-7.362971,6.861984,-7.903837,-1.511206,-1.332419,0.860981,1.431276,2.754580,1.499656,-4.961941,1.475962,-5.194726,8.589734,6.943717,7.886685,-8.239555,3.173307,-8.539259,6.408028,-8.869084,8.085279,9.504558,8.350689,9.960945,-6.387408,-0.768501,2.977667,-2.405619,6.699885,3.332715,-0.325658,4.845539,4.523342,9.379500,-9.127860,6.293307,-7.720825,1.104715,4.995139,-2.322231,-2.129005,-2.234585,8.084560,-9.595488,-8.554688,2.030276,2.285593,-3.840094,-1.283183,2.854457,9.855937,7.922763,8.553960,4.578242,7.928454,4.694887,-1.091819,3.044573,-1.094272,-4.544559,-8.913033,2.628892,-2.465802,-7.222624,-0.518025,-0.841302,-3.100572,7.862433,-7.175610,3.578361,-4.009336,4.617619,-6.478865,-2.965380,-5.285528,8.768281,4.882893,-7.398756,-9.111220,-0.092568,7.434853,-1.977447,-4.251775,2.346957,-4.304256,-8.248765,0.732230,8.683626,7.351259,7.207776,-5.945267,-5.916305,5.399522,-2.591851,2.955848,-2.218398,0.676847,6.935295,-1.661255,-3.374977,2.313613,3.137673,-1.696778,-8.953650,9.179731,3.103785,-8.537522,0.677242,-0.980054,1.421840,-7.742425,-3.860520,-6.111564,-5.664756,9.941989,9.764230,6.062733,8.639071,3.985793,9.855745,2.728348,-9.864540,-2.055762,-1.107183,1.455867,8.660002,6.951485,4.578842,5.009010,6.230528,-5.791261,6.115017,0.028225,4.729664,-2.606417,5.873472,1.039625,4.765756,8.486293,8.707352,8.846652,2.177328,-7.062273,-6.627830,-8.157080,-8.810660,-6.961424,-8.933188,3.130568,-8.356846,5.107888,9.192330,5.682365], dtype = "float32")#candidate|2922|(1365,)|const|float32
call_2920 = relay.TupleGetItem(func_1306_call(relay.reshape(var_2921.astype('float64'), [10, 6, 11]), relay.reshape(const_2922.astype('float32'), [1365,]), relay.reshape(const_2922.astype('float32'), [15, 13, 7]), ), 1)
call_2923 = relay.TupleGetItem(func_1310_call(relay.reshape(var_2921.astype('float64'), [10, 6, 11]), relay.reshape(const_2922.astype('float32'), [1365,]), relay.reshape(const_2922.astype('float32'), [15, 13, 7]), ), 1)
bop_2927 = relay.multiply(call_2920.astype('int16'), relay.reshape(const_2922.astype('int16'), relay.shape_of(call_2920))) # shape=(15, 13, 7)
bop_2930 = relay.multiply(call_2923.astype('int16'), relay.reshape(const_2922.astype('int16'), relay.shape_of(call_2923))) # shape=(15, 13, 7)
func_2452_call = mod.get_global_var('func_2452')
func_2453_call = mutated_mod.get_global_var('func_2453')
call_2939 = relay.TupleGetItem(func_2452_call(), 0)
call_2940 = relay.TupleGetItem(func_2453_call(), 0)
output = relay.Tuple([call_2895,call_2903,var_2904,call_2907,call_2910,var_2911,call_2918,var_2921,bop_2927,call_2939,])
output2 = relay.Tuple([call_2896,call_2905,var_2904,call_2908,call_2912,var_2911,call_2919,var_2921,bop_2930,call_2940,])
func_2974 = relay.Function([var_2904,var_2911,var_2921,], output)
mod['func_2974'] = func_2974
mod = relay.transform.InferType()(mod)
var_2975 = relay.var("var_2975", dtype = "uint32", shape = (168,))#candidate|2975|(168,)|var|uint32
var_2976 = relay.var("var_2976", dtype = "uint8", shape = (600,))#candidate|2976|(600,)|var|uint8
var_2977 = relay.var("var_2977", dtype = "float64", shape = (10, 66))#candidate|2977|(10, 66)|var|float64
output = func_2974(var_2975,var_2976,var_2977,)
func_2978 = relay.Function([var_2975,var_2976,var_2977,], output)
mutated_mod['func_2978'] = func_2978
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1683_call = mod.get_global_var('func_1683')
func_1684_call = mutated_mod.get_global_var('func_1684')
call_3000 = func_1683_call()
call_3001 = func_1683_call()
uop_3005 = relay.acosh(call_3000.astype('float64')) # shape=(10, 14, 2)
uop_3007 = relay.acosh(call_3001.astype('float64')) # shape=(10, 14, 2)
output = relay.Tuple([uop_3005,])
output2 = relay.Tuple([uop_3007,])
func_3008 = relay.Function([], output)
mod['func_3008'] = func_3008
mod = relay.transform.InferType()(mod)
output = func_3008()
func_3009 = relay.Function([], output)
mutated_mod['func_3009'] = func_3009
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1524_call = mod.get_global_var('func_1524')
func_1526_call = mutated_mod.get_global_var('func_1526')
call_3023 = relay.TupleGetItem(func_1524_call(), 1)
call_3024 = relay.TupleGetItem(func_1526_call(), 1)
func_2248_call = mod.get_global_var('func_2248')
func_2250_call = mutated_mod.get_global_var('func_2250')
call_3042 = relay.TupleGetItem(func_2248_call(), 1)
call_3043 = relay.TupleGetItem(func_2250_call(), 1)
output = relay.Tuple([call_3023,call_3042,])
output2 = relay.Tuple([call_3024,call_3043,])
func_3054 = relay.Function([], output)
mod['func_3054'] = func_3054
mod = relay.transform.InferType()(mod)
output = func_3054()
func_3055 = relay.Function([], output)
mutated_mod['func_3055'] = func_3055
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1088_call = mod.get_global_var('func_1088')
func_1090_call = mutated_mod.get_global_var('func_1090')
call_3068 = relay.TupleGetItem(func_1088_call(), 4)
call_3069 = relay.TupleGetItem(func_1090_call(), 4)
func_2090_call = mod.get_global_var('func_2090')
func_2095_call = mutated_mod.get_global_var('func_2095')
var_3076 = relay.var("var_3076", dtype = "uint8", shape = (600,))#candidate|3076|(600,)|var|uint8
call_3075 = relay.TupleGetItem(func_2090_call(relay.reshape(var_3076.astype('uint8'), [5, 10, 12]), relay.reshape(var_3076.astype('uint8'), [5, 10, 12]), relay.reshape(var_3076.astype('uint8'), [5, 10, 12]), relay.reshape(var_3076.astype('uint8'), [5, 10, 12]), ), 1)
call_3077 = relay.TupleGetItem(func_2095_call(relay.reshape(var_3076.astype('uint8'), [5, 10, 12]), relay.reshape(var_3076.astype('uint8'), [5, 10, 12]), relay.reshape(var_3076.astype('uint8'), [5, 10, 12]), relay.reshape(var_3076.astype('uint8'), [5, 10, 12]), ), 1)
output = relay.Tuple([call_3068,call_3075,var_3076,])
output2 = relay.Tuple([call_3069,call_3077,var_3076,])
func_3089 = relay.Function([var_3076,], output)
mod['func_3089'] = func_3089
mod = relay.transform.InferType()(mod)
mutated_mod['func_3089'] = func_3089
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3090 = relay.var("var_3090", dtype = "uint8", shape = (600,))#candidate|3090|(600,)|var|uint8
func_3089_call = mutated_mod.get_global_var('func_3089')
call_3091 = func_3089_call(var_3090)
output = call_3091
func_3092 = relay.Function([var_3090], output)
mutated_mod['func_3092'] = func_3092
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1088_call = mod.get_global_var('func_1088')
func_1090_call = mutated_mod.get_global_var('func_1090')
call_3118 = relay.TupleGetItem(func_1088_call(), 8)
call_3119 = relay.TupleGetItem(func_1090_call(), 8)
output = relay.Tuple([call_3118,])
output2 = relay.Tuple([call_3119,])
func_3126 = relay.Function([], output)
mod['func_3126'] = func_3126
mod = relay.transform.InferType()(mod)
mutated_mod['func_3126'] = func_3126
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3126_call = mutated_mod.get_global_var('func_3126')
call_3127 = func_3126_call()
output = call_3127
func_3128 = relay.Function([], output)
mutated_mod['func_3128'] = func_3128
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3177 = relay.var("var_3177", dtype = "int64", shape = ())#candidate|3177|()|var|int64
var_3178 = relay.var("var_3178", dtype = "int64", shape = (16, 5, 7))#candidate|3178|(16, 5, 7)|var|int64
bop_3179 = relay.less_equal(var_3177.astype('bool'), var_3178.astype('bool')) # shape=(16, 5, 7)
bop_3185 = relay.minimum(bop_3179.astype('uint64'), relay.reshape(var_3178.astype('uint64'), relay.shape_of(bop_3179))) # shape=(16, 5, 7)
func_74_call = mod.get_global_var('func_74')
func_77_call = mutated_mod.get_global_var('func_77')
var_3198 = relay.var("var_3198", dtype = "float32", shape = (1365,))#candidate|3198|(1365,)|var|float32
call_3197 = relay.TupleGetItem(func_74_call(relay.reshape(var_3198.astype('float32'), [15, 13, 7])), 0)
call_3199 = relay.TupleGetItem(func_77_call(relay.reshape(var_3198.astype('float32'), [15, 13, 7])), 0)
bop_3215 = relay.maximum(bop_3185.astype('uint16'), relay.reshape(var_3178.astype('uint16'), relay.shape_of(bop_3185))) # shape=(16, 5, 7)
func_637_call = mod.get_global_var('func_637')
func_639_call = mutated_mod.get_global_var('func_639')
call_3220 = relay.TupleGetItem(func_637_call(relay.reshape(call_3197.astype('float32'), [1365,])), 0)
call_3221 = relay.TupleGetItem(func_639_call(relay.reshape(call_3197.astype('float32'), [1365,])), 0)
func_1952_call = mod.get_global_var('func_1952')
func_1953_call = mutated_mod.get_global_var('func_1953')
call_3223 = func_1952_call()
call_3224 = func_1952_call()
output = relay.Tuple([call_3197,var_3198,bop_3215,call_3220,call_3223,])
output2 = relay.Tuple([call_3199,var_3198,bop_3215,call_3221,call_3224,])
func_3228 = relay.Function([var_3177,var_3178,var_3198,], output)
mod['func_3228'] = func_3228
mod = relay.transform.InferType()(mod)
mutated_mod['func_3228'] = func_3228
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3228_call = mutated_mod.get_global_var('func_3228')
var_3230 = relay.var("var_3230", dtype = "int64", shape = ())#candidate|3230|()|var|int64
var_3231 = relay.var("var_3231", dtype = "int64", shape = (16, 5, 7))#candidate|3231|(16, 5, 7)|var|int64
var_3232 = relay.var("var_3232", dtype = "float32", shape = (1365,))#candidate|3232|(1365,)|var|float32
call_3229 = func_3228_call(var_3230,var_3231,var_3232,)
output = call_3229
func_3233 = relay.Function([var_3230,var_3231,var_3232,], output)
mutated_mod['func_3233'] = func_3233
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2328_call = mod.get_global_var('func_2328')
func_2330_call = mutated_mod.get_global_var('func_2330')
call_3256 = relay.TupleGetItem(func_2328_call(), 0)
call_3257 = relay.TupleGetItem(func_2330_call(), 0)
uop_3278 = relay.log2(call_3256.astype('float64')) # shape=(10, 14, 2)
uop_3280 = relay.log2(call_3257.astype('float64')) # shape=(10, 14, 2)
output = uop_3278
output2 = uop_3280
func_3290 = relay.Function([], output)
mod['func_3290'] = func_3290
mod = relay.transform.InferType()(mod)
output = func_3290()
func_3291 = relay.Function([], output)
mutated_mod['func_3291'] = func_3291
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3339 = relay.var("var_3339", dtype = "int64", shape = (8, 14, 14))#candidate|3339|(8, 14, 14)|var|int64
var_3340 = relay.var("var_3340", dtype = "int64", shape = (8, 14, 14))#candidate|3340|(8, 14, 14)|var|int64
bop_3341 = relay.left_shift(var_3339.astype('int64'), relay.reshape(var_3340.astype('int64'), relay.shape_of(var_3339))) # shape=(8, 14, 14)
func_1473_call = mod.get_global_var('func_1473')
func_1475_call = mutated_mod.get_global_var('func_1475')
call_3347 = func_1473_call()
call_3348 = func_1473_call()
func_707_call = mod.get_global_var('func_707')
func_708_call = mutated_mod.get_global_var('func_708')
call_3368 = func_707_call()
call_3369 = func_707_call()
func_1473_call = mod.get_global_var('func_1473')
func_1475_call = mutated_mod.get_global_var('func_1475')
call_3370 = func_1473_call()
call_3371 = func_1473_call()
func_1473_call = mod.get_global_var('func_1473')
func_1475_call = mutated_mod.get_global_var('func_1475')
call_3373 = func_1473_call()
call_3374 = func_1473_call()
output = relay.Tuple([bop_3341,call_3347,call_3368,call_3370,call_3373,])
output2 = relay.Tuple([bop_3341,call_3348,call_3369,call_3371,call_3374,])
func_3376 = relay.Function([var_3339,var_3340,], output)
mod['func_3376'] = func_3376
mod = relay.transform.InferType()(mod)
mutated_mod['func_3376'] = func_3376
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3376_call = mutated_mod.get_global_var('func_3376')
var_3378 = relay.var("var_3378", dtype = "int64", shape = (8, 14, 14))#candidate|3378|(8, 14, 14)|var|int64
var_3379 = relay.var("var_3379", dtype = "int64", shape = (8, 14, 14))#candidate|3379|(8, 14, 14)|var|int64
call_3377 = func_3376_call(var_3378,var_3379,)
output = call_3377
func_3380 = relay.Function([var_3378,var_3379,], output)
mutated_mod['func_3380'] = func_3380
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1758_call = mod.get_global_var('func_1758')
func_1760_call = mutated_mod.get_global_var('func_1760')
call_3413 = relay.TupleGetItem(func_1758_call(), 0)
call_3414 = relay.TupleGetItem(func_1760_call(), 0)
func_3054_call = mod.get_global_var('func_3054')
func_3055_call = mutated_mod.get_global_var('func_3055')
call_3418 = relay.TupleGetItem(func_3054_call(), 0)
call_3419 = relay.TupleGetItem(func_3055_call(), 0)
func_218_call = mod.get_global_var('func_218')
func_221_call = mutated_mod.get_global_var('func_221')
var_3429 = relay.var("var_3429", dtype = "float32", shape = (455, 3))#candidate|3429|(455, 3)|var|float32
call_3428 = relay.TupleGetItem(func_218_call(relay.reshape(var_3429.astype('float32'), [1365,])), 2)
call_3430 = relay.TupleGetItem(func_221_call(relay.reshape(var_3429.astype('float32'), [1365,])), 2)
func_2191_call = mod.get_global_var('func_2191')
func_2193_call = mutated_mod.get_global_var('func_2193')
call_3433 = relay.TupleGetItem(func_2191_call(), 1)
call_3434 = relay.TupleGetItem(func_2193_call(), 1)
output = relay.Tuple([call_3413,call_3418,call_3428,var_3429,call_3433,])
output2 = relay.Tuple([call_3414,call_3419,call_3430,var_3429,call_3434,])
func_3443 = relay.Function([var_3429,], output)
mod['func_3443'] = func_3443
mod = relay.transform.InferType()(mod)
var_3444 = relay.var("var_3444", dtype = "float32", shape = (455, 3))#candidate|3444|(455, 3)|var|float32
output = func_3443(var_3444)
func_3445 = relay.Function([var_3444], output)
mutated_mod['func_3445'] = func_3445
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3454 = relay.var("var_3454", dtype = "bool", shape = (6, 12, 13))#candidate|3454|(6, 12, 13)|var|bool
var_3455 = relay.var("var_3455", dtype = "bool", shape = (6, 12, 13))#candidate|3455|(6, 12, 13)|var|bool
bop_3456 = relay.logical_and(var_3454.astype('bool'), relay.reshape(var_3455.astype('bool'), relay.shape_of(var_3454))) # shape=(6, 12, 13)
func_1524_call = mod.get_global_var('func_1524')
func_1526_call = mutated_mod.get_global_var('func_1526')
call_3459 = relay.TupleGetItem(func_1524_call(), 1)
call_3460 = relay.TupleGetItem(func_1526_call(), 1)
output = relay.Tuple([bop_3456,call_3459,])
output2 = relay.Tuple([bop_3456,call_3460,])
func_3462 = relay.Function([var_3454,var_3455,], output)
mod['func_3462'] = func_3462
mod = relay.transform.InferType()(mod)
var_3463 = relay.var("var_3463", dtype = "bool", shape = (6, 12, 13))#candidate|3463|(6, 12, 13)|var|bool
var_3464 = relay.var("var_3464", dtype = "bool", shape = (6, 12, 13))#candidate|3464|(6, 12, 13)|var|bool
output = func_3462(var_3463,var_3464,)
func_3465 = relay.Function([var_3463,var_3464,], output)
mutated_mod['func_3465'] = func_3465
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2687_call = mod.get_global_var('func_2687')
func_2689_call = mutated_mod.get_global_var('func_2689')
call_3478 = relay.TupleGetItem(func_2687_call(), 3)
call_3479 = relay.TupleGetItem(func_2689_call(), 3)
func_3089_call = mod.get_global_var('func_3089')
func_3092_call = mutated_mod.get_global_var('func_3092')
var_3492 = relay.var("var_3492", dtype = "uint8", shape = (600,))#candidate|3492|(600,)|var|uint8
call_3491 = relay.TupleGetItem(func_3089_call(relay.reshape(var_3492.astype('uint8'), [600,])), 2)
call_3493 = relay.TupleGetItem(func_3092_call(relay.reshape(var_3492.astype('uint8'), [600,])), 2)
func_1952_call = mod.get_global_var('func_1952')
func_1953_call = mutated_mod.get_global_var('func_1953')
call_3501 = func_1952_call()
call_3502 = func_1952_call()
var_3503 = relay.var("var_3503", dtype = "float32", shape = (10, 14, 2))#candidate|3503|(10, 14, 2)|var|float32
bop_3504 = relay.equal(call_3501.astype('bool'), relay.reshape(var_3503.astype('bool'), relay.shape_of(call_3501))) # shape=(10, 14, 2)
bop_3507 = relay.equal(call_3502.astype('bool'), relay.reshape(var_3503.astype('bool'), relay.shape_of(call_3502))) # shape=(10, 14, 2)
output = relay.Tuple([call_3478,call_3491,var_3492,bop_3504,])
output2 = relay.Tuple([call_3479,call_3493,var_3492,bop_3507,])
func_3510 = relay.Function([var_3492,var_3503,], output)
mod['func_3510'] = func_3510
mod = relay.transform.InferType()(mod)
mutated_mod['func_3510'] = func_3510
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3510_call = mutated_mod.get_global_var('func_3510')
var_3512 = relay.var("var_3512", dtype = "uint8", shape = (600,))#candidate|3512|(600,)|var|uint8
var_3513 = relay.var("var_3513", dtype = "float32", shape = (10, 14, 2))#candidate|3513|(10, 14, 2)|var|float32
call_3511 = func_3510_call(var_3512,var_3513,)
output = call_3511
func_3514 = relay.Function([var_3512,var_3513,], output)
mutated_mod['func_3514'] = func_3514
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3522 = relay.const([[[-6.480141,-8.533582],[-0.252143,1.035647],[-1.709799,6.415339],[5.094754,-0.208720],[2.704376,0.536283],[8.787854,-4.751255],[5.300606,-1.852709],[5.447800,3.323785],[-9.299239,-9.515981],[-2.020657,-6.188771],[-6.668002,7.652999],[5.349991,-5.731166],[8.962354,-2.346472],[7.462757,2.590689],[8.469218,-7.813887]],[[2.517745,-7.824311],[6.900087,-2.391643],[-9.626956,-6.121599],[-7.779401,-2.979312],[-4.030145,-9.442761],[0.620893,-3.070389],[-7.052041,2.309875],[8.755608,-5.212223],[-7.182743,5.797889],[2.933807,6.636871],[-6.301750,-2.285249],[5.501785,-5.884646],[2.035096,9.439348],[0.026888,7.119846],[4.752147,6.295235]],[[-2.572687,6.343868],[8.109464,2.427732],[-4.797685,-0.105805],[-0.692229,-9.355277],[-8.406448,4.905290],[7.983283,-5.737484],[3.505303,-2.330665],[-6.135261,2.109485],[6.333054,5.874081],[6.265191,3.309654],[4.191500,-4.359428],[-9.507302,3.369020],[7.713283,-4.466164],[7.447701,-9.725356],[-6.884773,7.814752]],[[-2.793085,-3.786929],[8.807387,-9.103256],[-7.416295,8.763782],[-1.850155,4.664962],[-2.844387,9.237536],[-8.530331,-0.380296],[-0.509041,-3.040728],[-0.340049,3.008085],[-4.764160,-1.731856],[-2.061819,1.820049],[4.414266,-1.755404],[-4.819919,-9.899720],[0.530199,3.472891],[-0.976944,6.452332],[-1.131087,0.972707]],[[-0.199213,0.986782],[-2.151964,-1.796896],[9.600167,7.643607],[-1.217141,-0.256314],[-2.232750,8.929541],[-3.375234,1.882654],[1.759174,9.137559],[-5.957581,-5.579206],[5.570604,3.975420],[3.783983,-3.619632],[3.179901,9.562410],[-5.563909,4.175083],[6.141065,-2.106369],[5.103553,-0.046735],[-7.778648,-9.870048]]], dtype = "float32")#candidate|3522|(5, 15, 2)|const|float32
uop_3523 = relay.acosh(const_3522.astype('float32')) # shape=(5, 15, 2)
output = relay.Tuple([uop_3523,])
output2 = relay.Tuple([uop_3523,])
func_3525 = relay.Function([], output)
mod['func_3525'] = func_3525
mod = relay.transform.InferType()(mod)
output = func_3525()
func_3526 = relay.Function([], output)
mutated_mod['func_3526'] = func_3526
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3525_call = mod.get_global_var('func_3525')
func_3526_call = mutated_mod.get_global_var('func_3526')
call_3548 = relay.TupleGetItem(func_3525_call(), 0)
call_3549 = relay.TupleGetItem(func_3526_call(), 0)
var_3556 = relay.var("var_3556", dtype = "float32", shape = (5, 15, 2))#candidate|3556|(5, 15, 2)|var|float32
bop_3557 = relay.bitwise_and(call_3548.astype('uint16'), relay.reshape(var_3556.astype('uint16'), relay.shape_of(call_3548))) # shape=(5, 15, 2)
bop_3560 = relay.bitwise_and(call_3549.astype('uint16'), relay.reshape(var_3556.astype('uint16'), relay.shape_of(call_3549))) # shape=(5, 15, 2)
uop_3578 = relay.exp(var_3556.astype('float32')) # shape=(5, 15, 2)
output = relay.Tuple([bop_3557,uop_3578,])
output2 = relay.Tuple([bop_3560,uop_3578,])
func_3583 = relay.Function([var_3556,], output)
mod['func_3583'] = func_3583
mod = relay.transform.InferType()(mod)
mutated_mod['func_3583'] = func_3583
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3584 = relay.var("var_3584", dtype = "float32", shape = (5, 15, 2))#candidate|3584|(5, 15, 2)|var|float32
func_3583_call = mutated_mod.get_global_var('func_3583')
call_3585 = func_3583_call(var_3584)
output = call_3585
func_3586 = relay.Function([var_3584], output)
mutated_mod['func_3586'] = func_3586
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1895_call = mod.get_global_var('func_1895')
func_1896_call = mutated_mod.get_global_var('func_1896')
call_3610 = func_1895_call()
call_3611 = func_1895_call()
var_3612 = relay.var("var_3612", dtype = "float32", shape = (10, 14, 2))#candidate|3612|(10, 14, 2)|var|float32
bop_3613 = relay.right_shift(call_3610.astype('int64'), relay.reshape(var_3612.astype('int64'), relay.shape_of(call_3610))) # shape=(10, 14, 2)
bop_3616 = relay.right_shift(call_3611.astype('int64'), relay.reshape(var_3612.astype('int64'), relay.shape_of(call_3611))) # shape=(10, 14, 2)
output = relay.Tuple([bop_3613,])
output2 = relay.Tuple([bop_3616,])
func_3620 = relay.Function([var_3612,], output)
mod['func_3620'] = func_3620
mod = relay.transform.InferType()(mod)
var_3621 = relay.var("var_3621", dtype = "float32", shape = (10, 14, 2))#candidate|3621|(10, 14, 2)|var|float32
output = func_3620(var_3621)
func_3622 = relay.Function([var_3621], output)
mutated_mod['func_3622'] = func_3622
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3627 = relay.var("var_3627", dtype = "float64", shape = (3, 1, 12))#candidate|3627|(3, 1, 12)|var|float64
uop_3628 = relay.acos(var_3627.astype('float64')) # shape=(3, 1, 12)
output = uop_3628
output2 = uop_3628
func_3630 = relay.Function([var_3627,], output)
mod['func_3630'] = func_3630
mod = relay.transform.InferType()(mod)
var_3631 = relay.var("var_3631", dtype = "float64", shape = (3, 1, 12))#candidate|3631|(3, 1, 12)|var|float64
output = func_3630(var_3631)
func_3632 = relay.Function([var_3631], output)
mutated_mod['func_3632'] = func_3632
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2687_call = mod.get_global_var('func_2687')
func_2689_call = mutated_mod.get_global_var('func_2689')
call_3679 = relay.TupleGetItem(func_2687_call(), 0)
call_3680 = relay.TupleGetItem(func_2689_call(), 0)
func_2974_call = mod.get_global_var('func_2974')
func_2978_call = mutated_mod.get_global_var('func_2978')
const_3688 = relay.const([1,-1,4,-1,-1,1,-8,3,-5,-6,-2,-2,1,4,5,-5,-3,-1,2,-5,10,-10,-8,10,1,-10,-8,-9,2,2,3,4,-2,3,4,-6,6,5,-1,7,4,5,2,1,-9,1,-10,6,-9,7,-8,10,-9,8,-1,-1,2,6,-2,-10,-10,1,-6,-2,-9,-8,2,-3,-4,-10,-3,1,7,-9,-6,7,10,6,8,-2,-8,4,-10,-10,7,9,-9,5,-10,4,-5,-2,1,-2,-7,-6,5,-5,-8,-9,-7,4,1,-3,-8,-4,7,8,3,9,-2,-7,6,2,-8,-10,9,2,-5,-10,-9,-6,2,4,-1,7,9,-2,7,10,7,2,-6,-8,7,-6,2,-5,-5,2,-4,-1,5,8,9,7,10,2,4,-8,7,9,5,6,3,-6,-6,-9,-10,3,9,-3,-3,-6,4,10,-10,-3], dtype = "uint32")#candidate|3688|(168,)|const|uint32
const_3689 = relay.const([7,-4,6,-1,3,4,-9,9,-3,-9,-9,-4,6,-10,-3,5,-2,6,-3,2,6,-5,10,-9,8,3,4,-8,3,9,-2,9,-7,1,10,7,1,3,8,4,3,-3,7,9,-9,8,-5,5,-2,4,-10,-9,3,-2,-7,6,6,-9,1,2,8,-3,-9,-5,-5,-4,-9,5,9,4,-8,10,-2,-6,6,-4,2,-7,6,-1,-10,5,9,3,9,-6,8,2,4,2,8,6,3,-10,-7,7,9,9,2,-8,9,-10,1,-6,10,6,-4,-9,-8,-6,-3,4,-7,-1,-7,9,-4,-5,-1,-9,9,-10,-10,1,-9,6,-4,-3,5,9,3,-10,-9,2,-5,10,6,8,8,-7,8,8,-4,-2,-4,-3,-9,4,7,5,-6,-8,4,2,7,8,3,-7,6,7,10,-1,-4,-6,-10,5,-5,-10,-6,10,2,-9,3,-3,7,1,2,6,-6,7,3,-3,4,9,8,5,9,-8,-2,-1,2,8,-3,-10,-7,6,10,2,5,-3,-3,4,2,4,2,5,-7,-8,7,9,6,8,7,9,1,6,10,-8,1,-8,-7,-6,6,-7,3,-9,-3,6,-6,1,-9,-3,-6,-3,5,9,2,8,-1,-3,3,3,8,4,-6,-1,-2,6,-9,5,8,-8,9,-10,-3,5,6,1,-9,8,-2,2,7,-3,7,-10,2,-7,6,-3,10,-4,-6,-2,10,4,-1,7,6,-4,-8,10,-2,2,4,-6,3,-3,-5,-8,5,10,-10,-3,8,9,-10,7,6,10,5,4,-6,-9,-10,-9,-8,-10,-7,-5,8,1,3,-10,7,8,-5,-2,-9,-3,9,-5,-10,-5,8,10,-4,-6,10,7,-7,1,-7,-3,5,7,-8,1,9,-5,-4,5,-7,-6,-10,-4,9,-8,-10,5,7,-1,6,2,-8,4,-1,1,-3,-5,-1,7,6,-6,-8,-6,-5,-9,1,-8,-10,2,-3,-1,3,9,-5,-3,4,9,-2,-7,4,-10,9,3,-2,3,9,4,-10,-5,9,-7,-9,5,3,-10,7,-1,10,6,-8,-9,-2,10,-8,-6,5,10,-10,-7,4,-2,-9,-7,-7,-1,3,4,7,-5,9,1,-3,-7,-5,-9,-4,-2,-4,-10,-4,-5,-4,-10,3,5,-7,5,9,-4,-8,5,-4,5,-8,8,-7,-8,-4,-2,-4,-10,-5,-2,10,-9,10,10,-3,-3,-9,2,6,9,-8,8,9,-4,4,9,3,2,-3,7,-9,-6,3,-6,-8,2,5,-10,7,-1,2,-7,-9,8,1,-8,6,-1,-2,2,10,-7,-4,-1,3,-4,-5,1,9,-6,5,-3,9,-1,-8,10,7,-5,6,-1,-2,-5,-5,-1,-6,-7,2,-1,3,-2,7,1,1,4,-3,-6,2,-10,-10,3,7,-6,-1,9,-2,-5,7,2,9,5,5,-7,-5,-5,-7,10,10,2,-6,3,6,-7,-3,10,9,6,-7,10,-7,8,3,7,-5,-5,1,-8,-8,-9,6,-5,-5,8,1,5,-10,3,10,-9,10,-7,-3,-8,-2,2,-6,-6,7,2,-1,-9,9,-6,-3,-5], dtype = "uint8")#candidate|3689|(600,)|const|uint8
var_3690 = relay.var("var_3690", dtype = "float64", shape = (660,))#candidate|3690|(660,)|var|float64
call_3687 = relay.TupleGetItem(func_2974_call(relay.reshape(const_3688.astype('uint32'), [168,]), relay.reshape(const_3689.astype('uint8'), [600,]), relay.reshape(var_3690.astype('float64'), [10, 66]), ), 6)
call_3691 = relay.TupleGetItem(func_2978_call(relay.reshape(const_3688.astype('uint32'), [168,]), relay.reshape(const_3689.astype('uint8'), [600,]), relay.reshape(var_3690.astype('float64'), [10, 66]), ), 6)
output = relay.Tuple([call_3679,call_3687,const_3688,const_3689,var_3690,])
output2 = relay.Tuple([call_3680,call_3691,const_3688,const_3689,var_3690,])
func_3695 = relay.Function([var_3690,], output)
mod['func_3695'] = func_3695
mod = relay.transform.InferType()(mod)
mutated_mod['func_3695'] = func_3695
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3696 = relay.var("var_3696", dtype = "float64", shape = (660,))#candidate|3696|(660,)|var|float64
func_3695_call = mutated_mod.get_global_var('func_3695')
call_3697 = func_3695_call(var_3696)
output = call_3697
func_3698 = relay.Function([var_3696], output)
mutated_mod['func_3698'] = func_3698
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2862_call = mod.get_global_var('func_2862')
func_2864_call = mutated_mod.get_global_var('func_2864')
call_3718 = func_2862_call()
call_3719 = func_2862_call()
func_3008_call = mod.get_global_var('func_3008')
func_3009_call = mutated_mod.get_global_var('func_3009')
call_3720 = relay.TupleGetItem(func_3008_call(), 0)
call_3721 = relay.TupleGetItem(func_3009_call(), 0)
func_2090_call = mod.get_global_var('func_2090')
func_2095_call = mutated_mod.get_global_var('func_2095')
const_3723 = relay.const([[5,-5,-4,-7,6,-7,10,-7,5,-1,-10,6,-8,-5,10,-6,-1,-5,-3,7,6,8,4,-10,3,-1,6,3,10,5,-9,4,9,-6,4,4,9,-5,9,4,-7,-5,4,9,7,-3,4,-8,-7,-9,-10,-10,-5,4,2,-6,-4,-4,-10,-2,8,5,5,6,10,2,8,-8,8,-9,-1,9,-7,-4,5,-5,-3,4,-6,1,-8,5,-4,-1,7,3,6,-1,-5,3,5,1,-10,8,-7,-1,10,1,1,10],[-5,-3,-7,5,3,9,5,6,7,1,-10,9,8,-8,3,4,1,10,-4,-7,2,-3,-10,-4,2,2,-8,2,2,-5,-7,2,6,5,6,9,2,9,-10,10,8,3,-5,-2,-6,2,5,1,-10,3,10,6,-3,-5,-9,6,1,3,-6,-2,1,-4,-2,8,-3,7,-3,7,-9,-3,-9,6,-8,-5,4,-7,-3,-1,-7,-6,2,-6,-8,4,-5,-8,6,4,10,8,-7,1,7,-7,-3,-7,-8,-9,-5,-6],[10,7,-5,-9,10,-1,4,9,3,6,-8,-10,-5,5,-4,10,-6,-9,10,7,5,9,1,-3,-3,-2,-3,9,1,-7,6,8,-8,4,5,8,-1,-1,2,-9,-2,-5,-1,-4,10,-9,1,-10,-6,-7,-6,-1,9,-9,4,5,9,3,-8,-6,8,-7,-5,-10,-1,-2,-9,4,-2,8,-3,4,-4,-5,3,1,9,10,4,6,6,-2,8,-2,9,6,2,-7,8,9,5,1,-9,-9,3,-8,-1,4,4,-10],[6,8,-8,6,-7,5,6,-6,-1,8,10,4,4,-1,-4,5,6,7,6,-10,-10,-7,-5,3,-9,1,-9,-1,3,-3,-10,4,-2,2,6,-3,8,-7,4,-10,-3,2,-6,-4,4,3,-8,2,1,9,7,-6,-3,-10,4,-2,1,-8,-9,-5,2,7,-8,-9,4,-8,10,-5,-8,-2,5,9,9,2,-2,1,6,3,8,2,-1,-10,-4,-6,10,-5,3,10,1,-8,-10,6,-6,1,-4,5,-5,8,1,-4],[-3,7,-4,6,10,10,-4,7,7,5,5,7,-4,-1,-1,8,-5,2,4,7,-3,-6,-5,-8,-3,4,-10,7,-7,10,3,-4,3,-10,-3,10,5,-4,1,3,-4,3,7,9,-8,2,7,2,1,8,10,-1,-6,-3,6,2,-10,-1,4,-3,-8,-4,2,-6,9,-6,-4,1,-9,-8,10,-4,-4,1,6,10,8,1,-1,10,1,-10,2,-6,8,7,-3,-10,5,-4,-3,5,10,3,2,-5,1,1,-7,-6],[10,-2,-2,1,4,-10,-2,10,10,-5,-7,7,-6,-1,5,7,-1,-8,1,-2,-5,-2,7,8,5,10,-8,2,-7,-8,-2,-8,3,-10,5,9,-6,6,-3,1,-2,4,9,-3,-10,-9,-5,9,-2,2,1,-9,2,-8,-2,7,-1,-5,6,1,10,-2,8,2,-8,-9,-6,6,4,5,5,1,2,10,-5,-5,10,7,-9,-8,-3,-6,5,-1,5,4,-9,-8,10,-10,-9,-9,4,-7,-5,10,3,-1,7,5]], dtype = "uint8")#candidate|3723|(6, 100)|const|uint8
call_3722 = relay.TupleGetItem(func_2090_call(relay.reshape(const_3723.astype('uint8'), [5, 10, 12]), relay.reshape(const_3723.astype('uint8'), [5, 10, 12]), relay.reshape(const_3723.astype('uint8'), [5, 10, 12]), relay.reshape(const_3723.astype('uint8'), [5, 10, 12]), ), 1)
call_3724 = relay.TupleGetItem(func_2095_call(relay.reshape(const_3723.astype('uint8'), [5, 10, 12]), relay.reshape(const_3723.astype('uint8'), [5, 10, 12]), relay.reshape(const_3723.astype('uint8'), [5, 10, 12]), relay.reshape(const_3723.astype('uint8'), [5, 10, 12]), ), 1)
const_3739 = relay.const([[[True,False,False,False,False,False,True,False,False,False,False,True],[False,False,False,False,False,True,False,True,False,False,False,False],[True,True,True,False,True,False,False,False,False,True,False,False],[True,False,False,True,False,True,False,True,True,False,True,True],[True,False,False,False,False,False,False,True,False,True,True,True],[False,False,True,False,True,True,True,False,True,True,True,False],[False,False,True,True,False,False,False,False,False,True,False,False],[True,False,False,True,False,True,False,False,True,True,False,False],[True,True,False,False,True,False,False,True,False,True,True,False],[False,True,False,False,False,False,True,False,True,True,True,True]],[[False,False,True,False,True,True,False,False,True,True,True,False],[True,True,True,True,True,False,True,True,False,False,True,False],[False,False,False,True,True,False,False,False,False,True,False,True],[True,False,False,False,True,True,False,False,False,True,True,True],[False,True,False,False,True,False,False,True,False,True,True,False],[True,True,False,True,True,False,False,False,False,False,False,False],[True,False,False,False,True,False,True,True,True,False,True,False],[False,False,True,False,True,False,False,False,False,False,True,True],[False,True,True,True,False,True,True,True,True,True,True,False],[True,True,False,False,True,True,False,True,True,False,True,False]],[[False,False,False,False,False,True,True,True,True,False,False,True],[True,True,False,False,False,False,True,False,True,True,False,False],[False,True,True,False,True,False,False,True,False,True,False,True],[False,True,False,True,False,False,False,True,True,True,False,True],[True,True,True,False,False,False,False,False,True,True,False,False],[True,True,True,False,False,True,True,False,True,True,False,True],[True,False,False,False,True,False,True,False,True,True,False,True],[True,False,False,False,True,False,False,True,True,True,True,True],[True,False,False,False,True,False,True,False,False,True,False,False],[False,True,False,True,False,True,True,True,True,True,True,True]],[[True,True,False,True,True,True,False,False,True,False,False,False],[False,True,False,True,False,False,True,False,True,True,False,False],[False,True,True,False,False,True,True,True,False,True,False,True],[False,True,True,True,True,True,True,False,False,True,True,True],[True,False,True,False,True,True,False,False,False,False,False,False],[True,True,False,True,False,False,True,False,True,False,True,True],[False,False,True,False,True,False,True,False,False,True,False,True],[False,True,True,True,True,True,True,False,False,True,True,False],[False,False,False,True,True,True,False,True,True,True,True,False],[True,True,False,True,False,True,True,False,False,False,True,True]],[[False,True,True,False,False,False,True,False,True,True,False,False],[True,False,True,False,False,False,True,True,True,True,True,True],[False,False,False,False,False,True,True,False,False,False,True,True],[True,False,True,False,True,True,False,False,False,True,True,False],[True,False,True,True,True,False,False,False,False,False,False,True],[False,False,True,False,False,False,True,True,False,True,True,False],[False,True,False,False,False,True,False,False,True,False,True,True],[False,True,True,True,False,True,False,False,True,True,False,False],[False,False,True,False,True,True,False,True,False,True,False,True],[False,False,True,False,False,False,True,True,True,False,False,True]]], dtype = "bool")#candidate|3739|(5, 10, 12)|const|bool
bop_3740 = relay.less_equal(call_3722.astype('bool'), relay.reshape(const_3739.astype('bool'), relay.shape_of(call_3722))) # shape=(5, 10, 12)
bop_3743 = relay.less_equal(call_3724.astype('bool'), relay.reshape(const_3739.astype('bool'), relay.shape_of(call_3724))) # shape=(5, 10, 12)
func_3376_call = mod.get_global_var('func_3376')
func_3380_call = mutated_mod.get_global_var('func_3380')
var_3764 = relay.var("var_3764", dtype = "int64", shape = (1568,))#candidate|3764|(1568,)|var|int64
call_3763 = relay.TupleGetItem(func_3376_call(relay.reshape(var_3764.astype('int64'), [8, 14, 14]), relay.reshape(var_3764.astype('int64'), [8, 14, 14]), ), 1)
call_3765 = relay.TupleGetItem(func_3380_call(relay.reshape(var_3764.astype('int64'), [8, 14, 14]), relay.reshape(var_3764.astype('int64'), [8, 14, 14]), ), 1)
output = relay.Tuple([call_3718,call_3720,const_3723,bop_3740,call_3763,var_3764,])
output2 = relay.Tuple([call_3719,call_3721,const_3723,bop_3743,call_3765,var_3764,])
func_3779 = relay.Function([var_3764,], output)
mod['func_3779'] = func_3779
mod = relay.transform.InferType()(mod)
var_3780 = relay.var("var_3780", dtype = "int64", shape = (1568,))#candidate|3780|(1568,)|var|int64
output = func_3779(var_3780)
func_3781 = relay.Function([var_3780], output)
mutated_mod['func_3781'] = func_3781
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3786 = relay.const([[[7.132923,-2.660439,8.449081,5.449601,3.264716,3.569606,-5.015912,1.963173,-5.334503],[8.460046,2.970897,8.313653,5.558621,-6.712643,-9.348703,-6.074123,-2.383885,9.753195],[0.516107,6.900297,8.057568,0.300465,-2.524046,-0.304044,-0.987145,9.866487,-1.100896],[-9.717414,-1.701499,-5.504246,5.666114,-4.934422,1.324804,2.969672,-1.633462,6.951853],[8.140277,-5.116101,-8.800862,-1.141828,-2.373967,-9.588234,2.727362,-3.277877,-2.046722],[-4.962605,3.494371,8.853941,-4.635249,3.568658,4.732671,-6.570949,0.015326,0.638868],[-4.243616,7.373474,0.613015,6.069781,-6.160120,-7.994192,-2.732387,-9.080481,-3.778459]],[[-5.668580,-6.601245,6.441760,9.015603,5.119065,-0.610924,-4.622202,-5.171142,5.683895],[8.049167,-2.401310,4.365325,-3.276888,9.466532,3.991246,2.462552,8.982454,-2.975393],[7.654677,-0.929782,-9.320861,9.050677,7.836736,-7.104898,-7.101086,6.277066,-5.467690],[8.989433,-0.574604,5.092013,-5.866351,-6.654256,8.572456,7.267552,-1.294760,6.995604],[-8.087919,5.665600,-7.747833,0.101671,7.154768,-7.580222,9.064265,7.960796,-5.309007],[5.041661,6.651397,-0.455964,-3.678134,6.927197,-3.691247,-3.284178,-8.320555,-9.737576],[0.451715,3.949801,7.020723,-3.934440,4.286112,-3.036985,4.699371,7.205679,1.198451]],[[9.693159,2.889230,-1.246200,5.075021,-3.543146,-8.222439,-2.675166,-0.601907,6.219796],[0.630230,-4.876498,4.114544,3.900247,2.275216,0.125167,-3.939614,-7.972633,9.714418],[6.982397,9.305030,-4.515962,2.950509,-9.450599,-7.241797,8.744987,8.887580,3.984537],[-3.189960,6.865590,5.190644,0.413461,4.782010,5.712970,-4.230346,0.886372,-3.724799],[-3.337283,8.966054,-8.163816,-7.838502,4.657159,7.300923,-2.498488,6.753083,7.262213],[-2.857414,4.180684,5.631075,-6.704898,4.063764,4.667087,-8.567373,0.813433,-9.869672],[3.938971,6.283550,2.160337,7.344133,9.348283,4.380924,9.068137,3.082266,-8.709407]],[[4.393517,-6.174351,-0.070867,2.787491,6.919386,-9.815710,-5.450781,-8.174185,6.503372],[-5.524339,1.765829,6.922363,7.999103,-4.886828,4.287008,1.958400,-1.593589,-3.554635],[8.898615,0.197889,-0.613768,8.328807,9.089693,7.700359,6.285442,-8.202803,9.310660],[3.923954,-3.357330,2.408333,-9.754582,1.937725,-2.824792,-6.861086,8.382886,9.565782],[6.222212,-3.821783,-2.879232,5.705287,2.880624,8.600601,-8.503437,7.842025,-1.589881],[-2.186873,8.272264,1.612065,5.587098,-2.764016,9.724904,1.846341,-6.504296,-7.694685],[1.981448,-3.854657,4.457506,3.463118,-8.395936,-0.049742,2.135266,-9.135862,-1.040412]],[[-8.288942,1.898023,-8.401867,-3.648918,4.745248,9.400038,-6.292574,-8.306022,-6.306589],[-5.790810,1.859248,-7.905297,0.759479,-4.658277,6.506924,-3.027195,4.542377,-4.810986],[-1.980316,2.192555,9.215470,8.375525,1.729474,-6.681258,4.349229,8.164957,0.048194],[7.918579,2.749823,-1.722968,-7.570138,-6.178015,-7.241097,-0.541674,-6.165053,8.535215],[-3.446142,0.411615,-2.320393,3.014940,-1.417153,-1.392624,2.131590,-8.546111,2.378932],[3.516901,1.841977,3.075283,-2.118857,9.939037,9.784845,-0.292472,3.076964,1.109073],[7.619270,-8.299284,1.788122,5.812197,-5.243487,4.634146,8.969298,2.185544,5.570177]],[[-7.807395,-1.445733,-7.654706,-9.747902,-1.605287,-6.541851,7.385773,-5.183318,9.880898],[-7.765466,-4.128272,-9.740343,2.955862,-3.731478,0.120545,5.308228,0.725161,5.886112],[-4.862611,-3.029006,7.327369,-7.126122,-3.241553,-4.539079,6.918795,6.208321,0.351612],[6.803384,5.231339,-6.430658,6.857182,-2.969194,9.840710,-3.720389,-8.953956,-1.333220],[3.631502,-2.148357,-7.311984,8.257774,-9.861662,7.757607,4.396813,-8.633455,4.610691],[1.770192,-1.766702,6.974614,5.921358,4.448683,1.597875,2.433950,4.880660,-2.213957],[9.022014,9.213626,-7.361490,8.009177,9.381896,-8.769113,-1.310260,-9.844171,-2.063590]],[[2.645833,5.646125,5.780104,-5.780057,-4.890255,-7.578634,8.756310,-8.037130,8.428597],[-7.376908,-9.044389,-6.252253,-6.435155,-2.553387,-0.855952,-5.683206,-6.582132,-5.338442],[-8.079153,2.015167,-4.210133,-0.936044,4.607968,-1.153804,6.187914,4.033503,3.138670],[7.384081,8.869831,-4.612297,-1.551575,6.657269,-7.531418,-5.663128,-3.446662,5.779243],[5.750622,0.168652,7.070502,-9.238215,-5.738597,-4.917250,2.553184,4.977904,-7.411097],[-7.793372,-6.577256,6.753503,-4.721713,-0.868021,1.856309,7.571032,7.610269,0.108596],[2.883740,2.561256,-9.967951,7.065332,3.567017,-5.420538,-7.968473,-9.451179,-2.856071]],[[5.650468,1.254334,6.168863,-5.985769,-3.985588,3.785982,-6.447539,9.998260,-3.774000],[1.797105,8.012742,-8.807872,-3.021904,1.494047,-8.269110,0.519759,-9.523046,0.156438],[1.656451,-5.455753,7.893754,-6.695520,-8.782220,3.994359,1.386122,-3.183022,-8.155889],[-8.195072,1.014676,8.625019,7.424493,-8.699722,-8.179747,7.683512,1.123972,2.260876],[-8.380790,-0.156393,0.887824,1.690336,-9.829699,1.134215,1.128503,-1.054851,3.362364],[-3.591840,-9.455033,-5.457981,-3.193646,-0.701174,-9.414999,-8.766615,2.549634,5.241262],[-0.968626,6.823849,0.594787,5.289054,-1.406582,6.558550,-8.070992,-6.577882,-5.824423]],[[1.331843,0.281556,-7.588145,0.850495,-0.927469,5.145128,8.447720,-0.978754,6.806671],[4.531694,-8.046588,-9.998298,-4.296460,8.270524,5.337758,1.522901,-8.402571,-1.104833],[-6.974545,6.021930,0.478119,2.612593,2.618523,6.163883,2.364742,1.110572,5.172807],[2.295833,-8.420783,-2.477534,8.631672,-3.812143,-4.745351,-8.593940,-1.037555,2.544304],[0.301539,-8.822081,5.836253,7.673023,2.140251,-6.931413,-1.841343,-2.559807,3.051366],[-5.711513,-7.922641,-2.257819,3.536058,-8.244068,3.394214,7.195586,-5.954673,9.214151],[-7.301237,-6.168946,3.365256,-0.708593,-2.257488,2.639519,3.861099,-9.629684,-3.118765]],[[7.492286,-0.623020,-8.220927,3.083494,-6.961052,5.236829,6.839504,-7.913544,5.669674],[7.817462,8.734334,-3.570879,5.349177,-5.894345,-5.447292,-8.650617,-1.037500,2.795609],[-8.447281,2.040225,-0.725804,-7.975902,-4.718715,7.129135,6.530594,8.051875,-3.275106],[2.385218,6.661918,-5.102891,-0.925563,1.592422,0.459630,9.865563,-8.616373,-2.951423],[-0.884483,-4.735428,7.269609,-5.883061,-0.595765,3.572211,-1.360208,-1.253039,-4.721365],[2.923038,-2.827377,2.668249,1.592880,3.389299,8.406892,-7.337100,2.480796,-8.543958],[-6.371793,1.145338,-0.951243,5.692321,5.894889,5.302999,-0.112130,-1.330929,5.239477]],[[-1.683155,8.264389,-3.878074,0.929190,-2.982135,-8.907855,5.670888,2.231182,4.607795],[7.542892,-0.859546,6.040996,-8.836097,-2.467572,-0.942548,9.155620,-0.370531,-0.286181],[9.167999,8.467402,-7.494857,9.636129,-5.716492,-0.258174,-1.698141,2.496798,-4.165620],[-6.615763,-3.270875,-1.450928,6.998876,-6.334344,-4.428233,-6.191868,-2.930193,3.923760],[6.986895,5.509183,4.187210,-6.252886,0.528894,2.904315,-1.636971,1.701957,-6.763305],[6.016409,2.569912,-5.390780,-6.377495,9.817265,-9.194137,-5.211199,0.280758,-0.317405],[2.495754,6.792799,-1.693581,2.823744,-8.111601,3.876275,-2.770031,-1.386574,-5.238149]],[[8.654589,-2.032919,-5.658738,8.863666,-6.454504,-9.373821,4.222849,2.362148,-4.383865],[1.379991,-7.249678,-9.338291,1.833685,-2.016217,-0.795889,-1.519429,-4.193937,3.162105],[3.623629,9.183164,8.357376,-8.759670,0.855079,4.174263,3.876528,5.712596,6.363378],[-4.638562,-5.074765,-1.573716,5.234328,-0.807979,1.800055,-0.034120,-6.333027,0.844866],[3.992463,0.527288,6.567129,9.777504,4.196778,6.025212,-5.529194,6.385530,-1.171910],[-7.801042,-2.977200,2.893139,-8.180472,0.164855,8.744042,-0.807701,-8.911277,-7.292759],[3.001928,4.365637,-8.611950,7.220216,-8.769227,-9.502976,-1.182332,-0.317234,9.811581]],[[1.757145,-4.374079,0.046893,9.296339,-0.346017,5.348762,8.429731,-7.480275,5.104017],[8.636606,-8.129408,-6.632006,9.665210,6.866762,8.515429,4.791900,-1.736214,8.259122],[-1.558568,8.761919,3.434627,9.272392,7.851872,0.734146,-4.469681,3.209428,-9.865808],[5.372489,0.781237,4.480156,-5.492514,5.020584,-2.860938,-0.331705,9.815844,-0.928238],[-9.839009,3.995254,2.574427,-5.516177,-8.476034,-3.064367,4.614808,-8.089588,-2.038747],[-4.312490,-0.483438,9.990051,-3.901170,0.884169,-9.476030,-2.640528,7.197506,-9.591880],[-5.378051,8.907410,3.118866,5.830446,0.890674,3.093720,-2.726020,-4.064360,8.940452]],[[7.957661,5.700167,4.242912,-0.581231,-5.391792,4.771940,5.528045,-8.620845,-5.576066],[-3.386434,-3.828980,7.827420,-8.820051,8.698683,6.082197,-9.371281,7.644307,0.779682],[1.616403,-4.498858,-9.244624,4.163995,-8.933394,-7.267183,5.525586,-8.055942,-3.578647],[9.669250,2.502113,-5.846028,6.831865,-9.907716,-4.880730,0.618888,7.057238,-5.457059],[7.526519,0.819299,6.490658,1.243424,2.305633,-7.658216,9.694121,-3.376895,2.274043],[4.563271,3.631457,5.187648,-5.402047,-1.387960,-1.323119,6.547382,-1.740022,2.866575],[-6.084865,-8.220369,0.115627,7.511698,-8.621739,9.806133,-3.355239,-7.661544,-1.333566]],[[-3.739611,-2.666119,2.312673,9.068324,-2.384994,8.909809,7.434149,-2.006016,6.995967],[-3.129016,5.499355,-6.050807,-4.827041,5.887908,2.435105,-2.925884,-3.352826,-4.670427],[-5.333596,-3.680262,2.882344,-8.945016,7.178334,-2.409947,-4.473431,-8.348955,1.543149],[7.706865,6.091334,-5.251467,-9.340123,-7.103363,2.528693,-1.470875,-2.055893,-5.043601],[9.666794,-0.777787,-6.574506,9.697427,-5.981609,-5.922185,2.811746,0.231815,-3.738973],[4.597728,0.246896,-5.322864,-7.167811,-3.531646,7.886653,-4.102036,6.388997,-1.540318],[9.616018,8.652929,4.800358,0.458823,0.877953,9.190103,-5.250031,-8.870990,4.161076]]], dtype = "float32")#candidate|3786|(15, 7, 9)|const|float32
uop_3787 = relay.asinh(const_3786.astype('float32')) # shape=(15, 7, 9)
bop_3793 = relay.logical_or(uop_3787.astype('bool'), relay.reshape(const_3786.astype('bool'), relay.shape_of(uop_3787))) # shape=(15, 7, 9)
bop_3798 = relay.divide(bop_3793.astype('float64'), relay.reshape(uop_3787.astype('float64'), relay.shape_of(bop_3793))) # shape=(15, 7, 9)
func_2551_call = mod.get_global_var('func_2551')
func_2553_call = mutated_mod.get_global_var('func_2553')
const_3820 = relay.const([7.494823,2.392215,7.833388,-7.693820,-3.540800,7.659995,1.240740,7.175307,-8.919096,0.681206,6.712568,9.874516,-6.027513,-9.496669,-9.327429,8.008550,-8.848634,0.331992,-8.613193,-6.914225,1.453905,-4.674272,-8.321591,-7.937476,4.826976,4.949228,3.077082,-7.254351,-0.943836,9.964780,-3.715143,-8.974799,4.063682,7.825763,-5.266808,-2.377256,1.082563,-8.607982,1.092144,5.834507,-7.457564,3.629350,1.033008,2.097902,8.557665,-4.296114,7.844159,-3.983688,-3.401560,1.548362,4.460117,7.449755,-6.366715,-3.500494,-1.027903,4.860668,-3.871532,-7.250935,-4.319147,1.303057,-5.954812,-3.797227,-3.029174,-7.098421,-4.703524,5.097766,-8.890301,-8.039097,-3.274616,-2.878232,-6.553077,5.737125,-0.546674,4.374515,-7.527148,-6.323676,-6.636628,-0.565703,9.210002,-8.827327,-7.221058,9.662153,-1.610566,-0.549899,-9.657882,5.605959,-9.002512,3.243089,-3.581667,6.546213,3.023217,5.925702,-3.444394,8.050800,-0.689425,0.784370,4.170239,7.626528,8.349425,8.544796,-2.026851,-8.827482,8.474450,-9.172941,-8.986206,-4.607865,8.234584,-6.488328,-2.954890,-0.334121,0.929810,1.953144,-6.971509,-8.747259,-7.624230,-7.869777,-8.043220,9.559273,-9.795834,6.459228,-4.675123,8.335623,0.288735,7.775103,8.788844,-4.915041,-6.641037,5.748819,1.616593,-2.764615,4.305553,-0.372613,4.964170,-9.745213,0.795234,5.619089,4.071897,-2.619130,-7.125552,-2.399645,2.427793,-6.888833,3.814840,-5.177171,1.887632,-5.726552,7.384932,-2.836995,0.363336,1.109281,-7.836448,-9.823714,5.251873,-4.136718,-0.498298,6.839089,2.486657,8.408585,5.209927,1.829720,-8.645998,-9.080330,8.665793,5.704529,7.906478,4.332498,6.351738,1.559555,-7.982834,-1.518855,3.327910,-2.946130,0.700233,4.060593,-2.133666,9.335771,-8.576011,-3.793734,-0.302012,-3.768265,-8.421668,6.130360,9.912373,-4.813200,-7.062855,1.828091,-3.161825,-2.517099,9.321029,4.813082,5.009300,9.539528,-7.077653,9.919646,7.770430,-7.248400,9.633567,7.815173,-9.325858,7.378634,-6.487024,-1.452585,-2.532440,-6.657364,-2.757254,2.401383,-3.665221,-4.319030,9.312148,4.744864,8.774025,-9.287899,4.400098,-8.173363,-7.590180,-6.438121,-8.958377,5.442038,3.706313,-7.537030,7.256878,1.703779,-9.157989,-1.307321,4.491213,-7.589646,6.423643,-2.592445,-8.995284,3.393087,-8.862698,9.964305,-5.939037,0.576806,-1.590383,-6.515157,-7.798759,8.788371,4.113851,-1.095681,4.039157,6.458146,3.181060,5.324899,-8.485724,-1.534478,-6.546462,6.550505,8.751206,5.366471,2.561814,0.760623,0.136015,-3.504633,7.319464,-8.783672,-9.522485,0.258585,7.283607,0.728667,8.699000,-6.867036,-8.359069,1.675431,-3.525511,0.091359,-4.529372,0.021765,-3.353645,-6.917218,-0.813496,-9.586182,-1.487626,9.943827,7.679458,-6.136439,-2.001981,-5.487775,-6.377465,-9.438329,-0.184547,-6.502908,5.092965,4.345667,-0.348284,3.973324,-4.103054,8.679716,1.926606,-9.948639,6.800825,-9.883592,2.637531,-7.981823,-1.695139,-6.649341,5.633310,9.113030,8.138140,-9.012906,-0.940847,-8.158881,3.291222,7.500780,-7.253292,3.062674,-4.089163,-3.714360,6.692436,-3.318304,0.359335,-9.007224,1.261071,1.096978,-7.748467,-2.557378,8.371143,6.534357,-8.333694,-6.893734,-6.404945,1.733664,2.417532,-4.100169,-3.189511,-9.352188,-8.436114,-9.756369,-9.100549,-3.295485,1.309978,1.666136,0.063321,-7.019706,4.399599,1.100939,-4.120639,3.455001,-2.077878,-5.970708,-5.065282,-9.995726,-9.007047,-4.950532,1.921825,5.327756,-2.438970,0.591921,-9.694075,2.833876,-0.787014,6.217043,9.757308,-6.552575,7.555003,2.091961,6.234524,-4.664607,-5.014216,-2.236896,8.297942,9.128407,-9.506494,3.659914,-6.822543,2.627057,1.399907,1.314360,0.767456,-6.226273,6.117818,-5.956573,-1.109142,-6.499867,9.596559,-0.484568,-9.362597,-3.425456,-4.136924,2.710139,0.657877,-9.708245,-3.161049,7.301594,8.448721,-0.507443,0.882527,-4.240415,8.250094,1.030569,7.145035,2.156737,2.785842,9.610062,4.570788,-3.028655,9.410116,-2.774634,-8.206929,9.712687,0.327776,-4.092626,-5.533404,-4.886093,1.903979,-0.228818,4.948172,6.091568,-6.823827,5.177671,7.476461,-8.741739,-4.042228,-0.883230,-7.100190,-8.770143,7.271960,0.338550,8.792930,5.041413,4.447703,-8.491470,3.944542,2.316810,-9.286238,-1.455828,-1.921589,-5.175609,4.307022,3.773968,-7.182073,1.645314,2.295940,4.337885,6.140402,6.909449,-4.442697,6.792590,7.230270,1.409939,4.082263,-4.757905,-8.765473,-1.390411,2.795724,-1.850361,-3.078142,-5.199934,-0.297628,-0.451987,-4.471198,-0.420315,9.792406,8.140640,-2.237984,-1.919077,-2.840772,4.568582,6.631481,-0.517434,9.318067,-8.602746,-7.324021,7.141469,-5.184463,-5.660739,-2.999638,-6.321847,3.246097,-6.932182,-8.642276,4.311208,1.776535,-5.066931,2.596047,-8.186578,3.467385,-7.826804,3.879327,-6.344288,2.139414,-7.636793,3.797100,-5.368528,-4.566375,-8.633831,6.399122,4.565141,-9.430791,-3.520230,-4.498441,-6.434165,1.403668,-7.483719,7.362056,5.537894,8.105291,-0.028101,-9.316274,4.378405,7.749246,8.964978,-8.909414,-3.876311,-5.376259,-9.456818,8.431007,-5.979936,6.633788,1.229603,3.037175,0.096289,-8.881093,0.951797,-3.434662,-9.809687,-1.546573,4.651526,-1.562938,3.606867,-0.559514,-4.994213,8.980817,-9.457582,0.041602,4.991489,-3.881508,2.827414,-6.432884,9.880838,-8.112681,-7.758324,-1.709856,4.600551,8.621729,1.222963,-2.416625,1.543218,2.113520,-1.050709,8.921355,0.221961,-3.617684,6.924352,-5.864818,-9.560889,-2.398696,6.654971,-4.007548,5.854935,-8.655677,6.768329,-9.397573,-7.143586,-7.942848,-9.405576,-9.892215,-4.792915,8.222585,2.849692,-6.007500,-4.877317,-0.699337,2.535785,-4.617643,7.883716,-2.912011,0.080022,9.614319,-4.375389,-4.170533,-5.332749,-5.054986,0.901326,-2.170629,3.428537,-9.782053,1.050495,-3.574210,9.633463,9.461431,1.832961,8.530036,2.821306,-8.288531,7.375972,-2.616944,4.073409,-9.648573,-0.398555,0.318217,3.675453,7.467186,-7.257753,-5.626325,-9.022559,-0.773094,1.243710,-2.739785,0.014233,-7.299789,4.305630,-3.782910,9.883346,-9.354392,2.537819,-4.862119,7.042476,3.879994,1.183193,-7.883115,1.479971,9.978900,-3.880026,6.219073,-7.578339,-2.692342,1.988101,-3.923348,2.144280,-5.494297,-7.398313,-1.060316,5.393143,2.038007,4.302858,-7.357002,1.062861,5.787792,-9.438485,5.240044,-3.663058,-1.507965,-0.186690,-8.025635,3.307744,-5.646388,5.901744,-1.547161,-9.523266,0.920329,6.673648,-2.802189,1.982635,-1.812336,3.741537,-2.662028,-2.731557,6.848419,9.222213,-0.458779,-3.111780,-5.292914,0.225919,-2.760978,6.291528,4.680827,-3.773924,1.002703,3.204331,7.655351,3.360418,-6.242955,-5.617610,-4.330241,-6.498134,3.826823,7.790605,-2.551763,-9.843639,-5.716334,1.151654,-1.103033,9.737365,8.160415,4.331307,9.268609,0.123996,-9.634122,0.068748,2.045972,-9.075520,7.235642,6.142688,-2.446039,-8.462949,0.758813,7.861896,5.233387,0.934950,0.934840,7.258118,1.015281,0.685722,0.275564,-4.873364,-9.135745,4.729016,-3.300910,0.092574,-5.921779,8.641654,6.317290,1.938663,8.872649,-8.463463,7.780988,-1.118807,-7.231388,3.494873,-7.496212,-4.193401,-3.368063,-9.007422,-2.265716,7.364020,-4.547584,-8.906876,0.675908,-4.392241,-2.755423,-0.249621,3.602708,-0.992828,-2.123559,2.008522,8.584835,2.987964,6.362933,-0.726074,6.835391,-5.285813,-7.002014,-3.322107,-8.786227,6.570346,7.572693,-9.631087,-2.247930,-4.015367,-6.331047,2.128636,1.770149,3.188160,9.469083,0.175418,-3.783623,-9.895068,-3.906841,-4.003286,3.481330,-1.552362,8.848880,2.170574,0.864037,-1.126173,4.880205,-2.077004,-9.779415,0.691104,3.552828,7.335714,-1.556298,7.765256,-0.607683,8.840798,2.923323,-0.160900,2.330408,-1.996936,4.790146,-8.645627,-0.964242,2.233170,5.348505,-4.079787,1.533162,-5.252195,6.734389,5.762090,8.446482,-7.942208,-6.398861,-8.978829,-9.200876,-5.836611,4.057013,9.094573,0.583239,1.929971,2.424038,-3.931820,9.395200,8.261079,-1.630267,-5.282706,7.490582,-0.238628,1.300825,3.701394,4.470069,7.133757,6.973123,-4.288217,9.842540,1.190145,-8.171683,-8.059189,-0.734331,-2.205463,-8.154222,-2.927707,0.384223,1.001811,7.162472,6.133110,-6.213738,-2.665044,1.178954,1.688153,-3.088240,1.951161,-8.180475,-6.548128,1.243726,6.548032,5.335503,-6.307463,-8.191582,7.897512,-4.804878,-2.375340,7.727560,-8.832729,4.043913,2.352724,-7.320869,-4.898705,-3.536432,0.835628,-6.282790,7.316799,4.526177,-8.892960,6.984210,5.324279,-9.174891,8.579139,-1.085054,-3.711514,2.970469,5.691421,2.870096,-6.172375,-2.025050,8.418583,-8.038389,-2.387922,-5.497804,5.036659,-4.895622,-1.113297,-9.817347,-9.023376,6.423975,-8.970831,6.940488,3.599481,-4.434065,-3.447039,5.827999,9.172311,4.391431,7.756919,-7.494400,9.151986,-5.743863,-2.941887,6.734025,8.947297,5.269831,0.561955,-8.555185,1.477291,-7.978330,1.648545,-1.899438,7.711082,8.318326,7.275998,3.115381,-8.993644,-5.406589,-6.206651,-1.429817,7.428575,-2.915866,-2.594835,3.336181,0.180723,6.161890,9.279417,0.159486,8.180486,-4.421273,-0.739987,-0.473888,2.391196,6.194430,-1.228844,3.482548,-1.653755,9.988623,-3.722722,-7.221724,-0.960319,6.702380,4.341510,2.035252,3.887749,-9.049744,8.146603,-7.646449,7.874198,2.577791,8.248135,8.717628,-1.026440,-5.266204,8.312895,-4.115621,2.107537,-1.596233,-7.041874,9.455546,3.074715,8.303430,-1.508421,1.369737,-9.918135,-6.321270,0.647851,8.463738,-8.371491,0.534247,-2.846267,0.021680,0.061425,6.611988,0.091217,6.796310,-9.766269,-4.401796,-2.697256,-2.917680,-1.333997,1.042179,9.157685,1.550813,-6.349244,6.012498,-6.249798,-6.963294,-2.882849,5.862769,1.506360,-6.715285,0.892050,-1.022334,-2.180431,-3.696814,9.974459,9.325610,-9.915063,-2.880339,3.370791,-1.374080,2.790855,2.064158,-4.514724,1.003240,2.909059,6.723355,-5.687772,-2.979022,-6.714981,3.282348,-5.855984,-6.794358,3.771611,-0.715539,3.067217,-6.178847,7.751828,-0.079825,-8.272893,0.154513,-8.325361,5.203613,7.251887,7.830853,-4.028130,6.474712,9.433641,-9.598388,8.371839,7.941506,2.377999,0.832357,0.644920,-9.028907,0.643006,9.014888,-6.401516,5.698053,3.033151,3.063253,8.721092,-5.881777,1.458939,-3.316604,3.033922,2.658008,4.505020,-5.470356,-2.229030,9.467864,-4.623504,7.199076,8.861639,-7.816597,-0.351219,-6.909835,6.987343,-2.064132,1.873218,2.181622,0.107310,9.643095,6.475717,0.127103,-7.785907,6.235334,-6.739491,7.899306,4.129512,-5.818271,-6.609195,-9.866686,4.739141,-3.934043,9.799930,-7.043258,-9.178041,1.788862,7.347708,4.072047,0.841748,-3.722349,-8.893928,5.994894,-7.951776,2.121527,9.341781,-3.453500,-3.228173,4.929480,-1.958335,-8.985314,-6.157213,-3.534067,7.490859,7.696352,-8.412162,-9.975998,-5.011613,3.755849,4.362856,2.896585,-3.759066,9.516743,-4.959779,-4.152233,-2.857012,6.011078,-6.933793,-0.692905,2.131412,2.761916,-2.379609,-1.549168,0.091158,5.706384,-7.450692,0.455155,-1.955253,-5.517983,-3.306559,6.877730,3.140036,7.564172,-5.714337,5.989241,1.396659,6.233460,-5.491349,-3.824769,1.710451,-7.326039,-6.207171,-1.642324,1.797466,3.455356,4.535891,-1.224377,6.674329,3.478689,-4.922578,-4.716453,1.751504,2.962703,2.995000,7.955787,9.868262,0.802940,-6.223723,-4.051442,-5.776622,2.416296,-7.871096,-2.086507,5.510598,7.829282,0.567770,7.334550,5.433427,-5.955146,6.078535,-4.408708,-5.210622,-0.633526,1.882218,-9.136177,3.142226,-3.113317,9.102643,6.049925,-5.865486,-7.988050,-7.303378,-5.335823,-4.588161,7.043313,-7.642155,-5.651656,2.565127,5.622493,0.662042,-3.285155,3.803901,-8.760049,9.199548,2.767038,-7.250136,2.097602,-4.252533,4.425012,9.313421,-9.791377,-1.403392,-3.254571,0.816877,-4.453561,5.479858,7.141297,4.335424,7.553048,-2.332241,-4.994405,6.508900,9.005296,1.175043,-2.533769,3.102646,7.898656,-7.373732,2.540906,9.711083,-5.032967,-8.781241,-2.642975,-9.104135,6.721454,-3.899127,5.072895,1.845938,8.220416,4.577183,2.706356,-4.779813,-2.148267,-3.084350,1.312419,-4.920531,-4.460322,1.162215,-0.052890,5.087388,-8.161309,-9.012629,7.663888,1.175898,-0.272033,-8.409501,1.209703,-3.285532,2.970213,-2.805208,4.700665,7.125339,8.106123,-7.312824,-6.337248,1.275780,4.378131,-5.912155,-0.393146,-2.486579,7.798604,-0.768402,4.063772,-5.918866,-8.982386,8.292013,9.480598,3.008909,-7.723920,8.501674,7.138255,9.944113,-2.299707,8.499859,8.133870,9.710955,9.549565,-9.338575,8.184150,9.763071,2.160141,5.078155,0.708767,6.405990,-4.706063,-5.800832,-7.848012,-8.185491,-6.316040,5.501699,3.602481,-5.461560,-4.617963,-3.742294,3.341597,6.913614,-1.531220,-3.339309,-2.383422,8.449167,-6.751273,-9.553930,-5.620962,3.413471,2.739188,-9.975957,7.438479,6.988116,9.454666,9.268392,9.310838,2.242555,6.234813,-3.760994,-1.529243,-7.607910,6.141558,9.249327,-3.512674,-1.569059,1.827873,-9.781907,7.074564,-6.762497,1.843392,-6.368466,9.724161,7.838832,8.388764,-5.363404,9.671771,-4.050988,2.076321,-3.459280,-0.570140,6.545900,-5.058798,-6.710270,0.072596,-3.977822,7.133254,-9.636932,6.223232,1.409638,7.238275,-0.159322,7.290872,0.984604,-4.758003,-3.905803,1.777409,-3.231349,7.455922,5.997851,4.899333,-0.246386,-3.815249,3.874112,-9.982611,-1.038466,-3.359270,-0.362972,2.216851,6.710075,-6.094527,-3.586251,5.378533,8.851476,-5.070144,-4.180687,-0.332466,-2.676199,3.479760,-2.928273,-4.171558,9.504571,5.038996,-5.623060,1.117093,-5.377604,9.235678,4.235882,9.658664,-1.293694,-3.522030,-7.706403,3.284896,8.576850,-9.159056,-7.735198,7.813127,-0.181163,9.292162,5.487273,-0.564735,-2.847277,9.990912,-9.681493,-9.971805,-4.137993,0.442414,-9.760585,4.650516,2.586693,7.023247,-5.275750,4.344769,-5.075804,-0.707316,-6.341577,9.225847,-1.508530,-3.148752,-5.657050,3.095560,5.662677,1.198393,3.713402,-0.366841,-7.967524,-8.514447,-5.572604,0.146445,8.241196,-9.557177,-5.703835,-4.537308,-6.219905,-9.729043,-0.147187,1.269121,-7.257557,9.609159,9.254492,4.774140,9.764472,1.903315,3.258600,-3.737494,-6.767010,-8.704672,3.868917,7.461473,-4.796826,-6.172167,-3.853454,-9.209737,-7.322083,-4.258697,7.736802,8.265168,-9.823362,-3.713009,-0.635223,-3.943191,-8.393097,8.363984,6.386024,3.774753,-9.226831,-3.934821,-8.072013,-2.998743,-7.825438,-1.250355,-5.434517,3.179358,-8.951899,-1.473755,-2.417371,6.211428,-7.808757,-5.068269,-6.555740,0.668698,6.322856,1.168261,-5.932280,-2.245328,-8.587427,3.532829,8.174923,3.851619,-0.131131,-2.281604,-5.776461,6.366682,-4.139463,9.281004,-4.314947,-8.596094,-1.703624,2.524025,3.390424,-0.772798,-3.952614,-8.724816,-2.655417,-5.644772,9.880115,8.659098,-6.789781,-0.522954,8.775061,2.463320,-9.158643,6.744153,3.300330,-8.543815,9.170142,0.970299,-5.569189,8.093013,6.024700,1.126453,-6.912629,2.363588,-3.778415,3.421325,6.529138,1.734326,-5.215378,-6.497126,2.083394,-5.741350,1.410242,-4.853456,9.059238,-3.656226,4.292050,-4.993961,6.755650,6.121381,9.357290,1.817070,8.799652,4.312479,9.080903,-8.211236,-4.018992,1.833478,-1.456187,2.218580,9.962836,-1.005593,6.768336,-4.137410,-5.113451,-2.953836,2.661228,-9.050182,-7.364044,-1.499811,-0.024754,-6.037900,-2.897985,-6.296592,-4.778853,-3.940139,-0.530899,-6.283252,7.189714,-7.867473,-9.776704,-8.283399,-1.369445,5.567750,-3.997378,-8.254585,-7.663039,6.411510,0.935038,0.914249,2.888882,9.322162,-9.520189,7.317275,9.081301,-8.557592,9.029179,2.653094,8.623571,-9.565952,-3.706564,-1.724352,-2.615620,2.291653,-7.703563,7.589095,9.305660,1.432454,-7.608138,9.879492,-4.036777,-8.127781,-8.646245,2.369967,-2.746684,2.046199,-2.919974,6.716458,5.523778,-0.838350,0.803387,7.106369,3.194260,-9.777522,-5.333008,6.619775,8.922923,-8.870530,1.435958,-9.543582,0.448097,-4.284425,5.729044,-7.470014,2.612622,-9.077943,-5.581557,1.773092,-0.590865,-7.503522,8.083902,0.719806,1.314199,5.762629,9.839040,-3.177438,1.671009,5.720358,-5.021147,-2.710402,-0.490051,-4.572285,-1.357930,-5.695006,0.657804,5.471177,-6.347925,-4.165111,-8.101656,-9.920834,4.472449,0.970563,-2.075461,0.273406,-7.273576,-0.972728,3.845982,-0.838898,-6.423055,-8.307361,6.551882,-4.529005,3.612586,0.790868,-2.960475,7.277605,-0.994961,1.141165,6.559978,8.713561,-2.665809,3.885186,-3.015509,7.650503,-6.735725,-7.102544,-5.847214,-6.297675,5.761958,7.891106,3.039833,7.697934,1.898329,-3.298119,-5.390502,2.858302,8.856356,-0.255929,-0.987940,-1.130886,5.748875,-6.015773,-8.330239,1.506470,-6.599878,6.977591,-4.031830,2.320129,9.370437,-3.470890,6.917673,-1.067462,-8.059462,-0.464358,2.773949,-8.876010,1.230723,-3.554475,1.102370,-3.773647,-4.984194,3.406446,-0.945537,2.246133,6.363054,0.306161,1.545997,5.516172,-3.409454,-2.527593,4.954174,2.633457,4.832940,-9.471849,1.607443,-1.799882,-9.731596,-8.796911,-4.545164,5.302585,-9.060306,-5.154343,-8.060207,3.233646,1.309731,-2.717557,-9.068151,0.174860,4.605513,-4.457722,-5.461481,8.543380,3.616266,-6.207073,2.267830,4.376879,-6.033158,8.242880,8.684929,-7.916513,-0.782528,6.217797,-2.646182,-4.769771,-0.481549,-4.652298,5.144666,-5.496368,-1.500552,-9.424511,-9.794220,9.367091,9.581421,4.065134,2.913386,3.685691,6.726308,8.546516,5.729185,0.388219,-9.556703,7.999522,8.519936,-3.940957,-5.882760,3.832301,-1.483426,1.849408,6.242669,1.030272,-5.191061,-9.861535,6.103887,5.568750,7.782202,0.656941,2.898612,8.682694,-4.270316,-4.397176,-1.568223,9.623929,-9.364962,-1.484267,3.340256,-4.484386,-9.573522,0.141497,-4.150986,6.625889,-7.510425,-9.550669,9.704396,-1.998349,1.131175,-2.390404,4.618799,4.128035,-6.757951,1.893855,6.927073,-7.634844,8.230889,9.345662,-2.313036,8.995425,3.187489,-5.911592,-0.221608,-7.083847,3.416153,4.523649,-6.996685,-1.371822,0.295308,6.579573,-8.247823,-2.687912,5.470214,2.421541,-3.111989,-9.790191,-1.501587,-1.570439,-7.359739,6.992041,6.579185,-2.063388,6.974131,7.060780,-6.137849,6.698229,-1.147788,-9.258965,2.622262,4.581801,6.569460,-3.285083,9.126712,-6.044260,0.783034,5.632424,-4.180121,4.709644], dtype = "float32")#candidate|3820|(1815,)|const|float32
call_3819 = relay.TupleGetItem(func_2551_call(relay.reshape(const_3820.astype('float32'), [11, 11, 15])), 0)
call_3821 = relay.TupleGetItem(func_2553_call(relay.reshape(const_3820.astype('float32'), [11, 11, 15])), 0)
output = relay.Tuple([bop_3798,call_3819,const_3820,])
output2 = relay.Tuple([bop_3798,call_3821,const_3820,])
func_3822 = relay.Function([], output)
mod['func_3822'] = func_3822
mod = relay.transform.InferType()(mod)
output = func_3822()
func_3823 = relay.Function([], output)
mutated_mod['func_3823'] = func_3823
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1088_call = mod.get_global_var('func_1088')
func_1090_call = mutated_mod.get_global_var('func_1090')
call_3857 = relay.TupleGetItem(func_1088_call(), 0)
call_3858 = relay.TupleGetItem(func_1090_call(), 0)
var_3859 = relay.var("var_3859", dtype = "float64", shape = (12, 12, 4))#candidate|3859|(12, 12, 4)|var|float64
bop_3860 = relay.floor_mod(call_3857.astype('float64'), var_3859.astype('float64')) # shape=(12, 12, 4)
bop_3863 = relay.floor_mod(call_3858.astype('float64'), var_3859.astype('float64')) # shape=(12, 12, 4)
func_2279_call = mod.get_global_var('func_2279')
func_2280_call = mutated_mod.get_global_var('func_2280')
call_3886 = func_2279_call()
call_3887 = func_2279_call()
func_1677_call = mod.get_global_var('func_1677')
func_1679_call = mutated_mod.get_global_var('func_1679')
call_3888 = relay.TupleGetItem(func_1677_call(), 1)
call_3889 = relay.TupleGetItem(func_1679_call(), 1)
func_2506_call = mod.get_global_var('func_2506')
func_2509_call = mutated_mod.get_global_var('func_2509')
const_3908 = relay.const([-3,-10,1,-10,-8,4,-4,10,1,-3,5,-6,-5,-6,-5,-4,3,3,9,-9,-2,3,-10,-1,-4,5,4,-4,-2,4,7,-6,-1,-6,-2,-7,10,8,5,-8,-4,10,-4,-9,-5,2,2,-2,-6,-3,-3,-3,-2,-10,2,8,3,-4,-10,-3,-9,-7,-2,-3,-7,-7,9,-3,4,-10,5,4,5,5,4,-2,-3,-1,-8,-3,1,7,-3,2,8,-8,1,-1,2,4,3,9,5,-3,6,-1,-8,-8,-1,-2,4,1,2,2,7,-3,1,8,-4,8,7,-9,-8,-9,1,7,9,-1,-10,-8,8,-9,3,-5,-10,-9,4,3,-8,10,-4,-3,7,-6,8,5,-5,-4,-6,5,2,3,3,8,8,9,7,5,-7,-2,-6,10,3,-10,-1,-5,1,6,3,5,4,-5,7,6,2,-8,6,8,10,-10,-2,-3,-2,7,5,-1,6,-9,-6,7,-2,4,3,-9,9,3,6,-4,-4,-6,-5,-5,2,3,8,6,7,10,-2,-2,-10,-4,-10,5,-1,3,9,-6,2,9,-1,2,2,9,-10,-7,-7,-7,9,-1,4,-6,-1,-3,2,-5,-6,-5,8,4,-7,8,-2,-9,6,1,5,2,8,1,7,4,-4,4,5,9,1,-5,4,-3,-5,10,-10,6,-10,-9,-6,2,4,-3,6,-10,-1,9,9,8,6,4,2,3,10,1,-5,-7,3,-7,-3,-7,1,2,9,6,7,9,-3,-3,2,-10,-9,7,10,-2,-2,9,-6,-5,-2,8,2,-1,10,9,-10,-1,7,-2,4,2,-2,9,-4,10,-7,7,8,6,2,1,6,2,2,2,7,-9,-5,-6,3,4,6,9,9,-1,-1,-4,4,2,-1,9,-6,-8,9,9,2,1,-7,2,-8,-9,-5,7,1,5,-4,10,5,3,2,5,7,1,-10,10,-8,-10,1,4,9,-4,8,-2,-1,-6,-7,6,10,-8,10,8,-8,-5,-8,-3,-2,7,-2,-2,6,-6,2,-6,7,1,-3,-9,9,-2,-5,-3,3,-5,-1,-7,-7,-7,-3,1,9,1,-3,3,-6,-1,9,6,-4,-4,-9,9,4,-7,10,-8,10,-1,2,8,-8,-7,-3,-8,5,1,4,2,-7,-4,-6,8,-4,2,-4,3,1,8,6,-8,-9,-7,-8,-1,-9,-4,9,-5,-2,10,9,-7,-5,2,-4,-2,-1,5,9,8,3,5,5,-7,-8,4,-2,8,7,-9,-4,3,-2,-9,-6,-9,9,5,5,-3,-10,-2,8,-10,-2,6,-1,-3,9,2,-7,6,-6,-1,4,-5,3,-7,-9,-9,-5,7,4,-7,-10,-10,-1,-4,-9,9,1,6,-3,-8,-1,3,2,1,10,10,-10,-8,7,7,8,-9,-2,-6,9,9,-1,-5,-4,10,8,-5,-2,-9,-8,-5,4,7,9,3,7,8,-6,-2,9,4,6,6,-6,-7,1,1,5,3,1,-2,10,10,-2,6,-6,1,-2,8,-1,-2,-6,-8,-1,5,-9,-2,-6,6,-5,-1,3,-3,-6,2,-7,-10,5,5,10,-10,6,1,4,-2], dtype = "uint8")#candidate|3908|(600,)|const|uint8
call_3907 = relay.TupleGetItem(func_2506_call(relay.reshape(const_3908.astype('uint8'), [600,])), 3)
call_3909 = relay.TupleGetItem(func_2509_call(relay.reshape(const_3908.astype('uint8'), [600,])), 3)
output = relay.Tuple([bop_3860,call_3886,call_3888,call_3907,const_3908,])
output2 = relay.Tuple([bop_3863,call_3887,call_3889,call_3909,const_3908,])
func_3933 = relay.Function([var_3859,], output)
mod['func_3933'] = func_3933
mod = relay.transform.InferType()(mod)
mutated_mod['func_3933'] = func_3933
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3934 = relay.var("var_3934", dtype = "float64", shape = (12, 12, 4))#candidate|3934|(12, 12, 4)|var|float64
func_3933_call = mutated_mod.get_global_var('func_3933')
call_3935 = func_3933_call(var_3934)
output = call_3935
func_3936 = relay.Function([var_3934], output)
mutated_mod['func_3936'] = func_3936
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3966 = relay.var("var_3966", dtype = "uint32", shape = ())#candidate|3966|()|var|uint32
var_3967 = relay.var("var_3967", dtype = "uint32", shape = (16, 3, 10))#candidate|3967|(16, 3, 10)|var|uint32
bop_3968 = relay.right_shift(var_3966.astype('uint32'), var_3967.astype('uint32')) # shape=(16, 3, 10)
func_2551_call = mod.get_global_var('func_2551')
func_2553_call = mutated_mod.get_global_var('func_2553')
const_3988 = relay.const([5.257273,2.251078,3.631280,5.980306,-8.245227,6.282403,-1.436501,-5.636766,2.260828,-4.818654,-1.941579,9.597176,-7.615107,-0.455153,-3.377566,0.345050,-5.044372,8.448332,-4.105252,-2.935974,-5.545106,6.447039,4.618107,1.661532,-6.592292,-2.339296,3.696799,8.124875,3.773889,4.215609,9.647712,5.606775,2.276611,2.519957,4.453194,-3.496312,3.359287,-2.627481,-7.021743,4.853952,3.588064,4.465754,-5.974842,1.615574,-3.523040,3.010847,7.648334,-5.960365,4.718221,6.521250,1.249937,7.382595,0.712080,6.396060,5.543288,-7.112463,-6.198337,-7.264818,7.711880,-7.133152,-7.972242,3.015001,7.271687,4.439737,3.964598,8.398090,-5.130925,3.978834,5.150566,5.167496,-4.844366,9.283281,9.597827,0.939637,3.631820,6.631962,1.136747,-9.047904,-6.226931,1.236899,-9.664086,-5.840371,5.489200,-7.264691,4.852310,-8.426801,-7.037127,-3.495212,6.972967,-6.804196,-2.630375,-1.538789,-1.064783,-0.637311,-0.834390,-9.673171,-5.466860,-3.237003,-0.954053,-7.329931,-0.523468,8.004775,5.617740,0.626154,8.664617,6.448756,1.593180,8.925947,-2.887653,-0.635485,-0.372764,1.811841,1.423481,-7.755463,1.400622,4.077689,4.634553,-3.800588,1.339437,4.148971,1.053456,-8.796066,7.181441,-0.724192,2.760128,-2.990654,7.220910,-0.841794,6.627714,-7.025252,-4.864933,2.425979,2.142316,-2.296422,9.341892,6.152959,-0.566707,0.610336,-5.773171,-3.120889,-5.047162,0.366440,-0.370203,-5.512940,-5.240883,-9.077163,8.427817,7.617633,8.762440,8.542848,0.504287,9.898260,-6.032907,3.518430,-5.590855,-9.030341,7.167583,-2.473899,8.958583,1.250697,-7.110965,-9.584405,2.549487,-2.366641,4.321854,9.092766,-4.217133,0.118074,4.438640,9.795533,-1.380754,-0.163074,5.921136,4.815972,-7.894781,0.019577,7.781566,-9.517562,7.239850,4.193264,-6.543197,5.976040,-1.872865,4.228456,-5.562798,6.932314,-6.623371,-0.489746,3.315490,-9.885154,-4.787977,-3.351555,-4.667707,0.889477,3.909030,-9.731875,7.513459,-7.742544,-3.230501,-4.642442,4.530704,7.742197,5.278616,4.189371,-5.856658,-8.078737,3.371044,-9.592170,3.398478,5.902583,-2.032243,-9.275938,-0.985577,4.183426,-2.977237,0.746330,-3.275179,4.009335,-2.644828,-1.173399,3.354575,2.407957,1.558471,-6.316235,3.874651,4.913583,3.656956,-4.444058,-6.256664,0.381023,7.080857,-3.836077,2.041411,4.532942,4.940210,-6.572273,5.678604,1.894665,7.949445,3.434978,-7.085536,2.136482,5.293277,5.731667,3.779546,-6.236771,4.325101,-1.477593,8.058396,-0.732907,8.587314,7.020247,-5.692381,3.813353,-8.773179,2.993202,5.342275,-6.492570,-9.232777,8.416041,-7.466026,-8.466318,-8.944430,0.551055,-6.460345,-2.631681,-3.762248,-5.307566,2.028711,7.499322,4.628181,-5.057225,4.438725,9.993909,-1.631585,7.613044,-2.496823,-5.873651,5.197845,-0.705023,8.566059,2.070414,-1.289696,-4.049281,-7.969663,6.285792,-2.264129,-9.298377,9.566399,6.109103,-9.090986,-6.073603,-5.739699,-0.536787,-0.238210,-5.900012,2.332113,-5.049122,0.575735,4.875907,-9.279727,4.179061,-0.792176,-3.672752,8.850150,5.103715,-2.384892,1.261182,-5.281596,-4.198450,-0.716121,-9.668647,0.102986,-4.358880,-5.495608,-6.562156,-0.072326,2.466514,9.251475,-9.826001,-6.266232,2.969302,-3.162994,7.393544,-3.625222,0.501481,-2.877653,-5.006670,-9.748079,5.626570,6.654126,5.822939,1.947956,-8.905585,-1.837608,-6.495057,8.265240,-6.977657,-7.552557,-6.403159,5.456256,1.938030,-3.481402,7.459709,-1.773257,9.846168,-5.554995,-5.788351,5.130173,3.992395,1.854566,-6.971477,3.742210,-7.997182,7.062791,-8.352829,2.386066,-9.768406,2.166007,-1.212704,-0.893939,4.749370,0.621227,2.303504,9.565929,-6.958330,-5.165843,6.839707,5.893956,5.992160,-2.657191,-6.863115,3.979154,3.867433,-3.354049,2.564606,4.206611,-1.010743,-2.306196,-5.899958,-4.093728,-4.881260,8.223402,-5.318859,-0.907708,9.102971,7.178007,-1.399392,3.296459,9.256447,3.179916,-6.246551,-0.315628,4.509129,-6.462091,-5.263617,7.662063,7.501251,-9.918270,2.809162,7.488947,3.876819,-2.844771,-3.729737,-6.949621,-2.732221,-6.854929,-4.476634,6.390815,7.623886,6.014952,-1.629508,-9.434798,-3.718491,5.346706,9.282496,-6.531035,0.032017,-2.430447,-2.881505,6.099712,9.628345,-4.126690,-1.252817,2.771538,2.065242,2.333717,5.671328,-0.264978,-5.256176,-5.037954,-1.760991,2.793553,6.129163,9.013505,-1.698030,-8.167684,-7.744426,3.834428,-9.461494,-4.335633,-7.068354,8.364288,-1.953958,2.107314,4.363554,-3.416794,-4.611844,6.305095,-7.878072,-9.167317,-8.190032,-1.987209,3.340566,6.344123,-9.850088,5.621628,-5.989771,2.349533,-0.262527,6.371035,-6.803760,-2.726571,8.220388,-7.650848,-3.225137,-7.721745,-6.247541,-1.489653,0.061834,2.498706,4.971247,-1.589667,-9.747024,-0.801921,-4.487407,-7.032553,-2.217733,1.949364,8.337564,3.310247,-4.389946,-3.875578,-9.279292,-6.579936,-1.420690,0.754089,6.155109,2.885158,7.849461,-3.937018,-9.651549,-7.895564,8.556230,-5.472117,-2.828859,9.787251,-2.870321,5.446254,-8.577193,-1.531929,5.263064,-4.185282,1.075089,-2.503147,-9.509557,-5.070351,-5.387106,5.872885,-0.937803,-9.741251,3.097592,-1.444268,2.048447,-9.690709,8.576008,-7.500479,-3.210033,6.069651,0.944717,5.750643,9.787943,-5.700048,-7.054581,5.056399,2.552406,2.211714,0.473173,-0.681838,1.429538,-0.383791,4.153979,-6.243259,-8.817439,4.774224,7.695070,1.337068,-2.530714,-3.563591,0.070460,-2.296859,3.952828,2.057046,4.124738,0.694382,-7.123582,4.002141,6.593724,4.576267,-9.176165,5.320590,1.717274,-6.459482,-3.819342,4.751052,-3.313491,-2.175459,6.609257,3.482546,-3.874148,-2.112794,-7.220100,-2.528748,4.572173,0.397746,7.100632,3.774633,1.220378,-2.757085,6.409113,9.633722,2.315836,1.519896,3.328073,0.642613,-6.274779,-1.675505,-5.390780,-9.289517,8.905237,5.674448,-9.233668,1.719369,-4.915795,3.969139,4.792699,6.797206,-0.478217,-8.277866,3.984959,9.805316,1.666644,7.520231,9.205603,7.624646,4.994666,2.969223,7.193107,-0.039063,-6.326800,4.935563,-4.920207,6.105109,-6.691530,2.753896,0.190868,8.395839,-0.458550,-5.643396,-0.083339,-4.783840,-0.335581,1.772256,7.603909,5.025836,9.624258,7.330838,-5.049224,-5.248825,-7.122516,-5.670835,0.995873,-0.203978,-0.091867,0.706988,-4.171409,8.787590,4.528207,1.291343,-3.778761,-9.334550,9.603814,4.315646,-1.716198,-9.255063,9.447034,3.444982,-7.330241,4.552062,-0.495316,8.421892,-8.738937,-4.655269,4.791735,-7.922676,-4.420381,0.252503,2.111300,9.452888,3.944398,-1.650345,5.520874,3.826051,-7.086377,-3.978484,9.445935,5.130993,-5.044972,0.219085,2.374930,8.748643,-7.013229,-9.799877,-6.641213,-2.828262,2.204081,-2.224381,-9.766537,9.443751,-5.354094,9.573580,2.237582,-1.455917,-3.004301,-6.730896,3.900387,-1.292940,-0.673502,7.003643,-5.814633,-9.369391,6.592478,-3.138692,-6.756342,-6.445702,-2.620068,-1.300960,-7.224885,5.779782,-6.481799,0.570959,-7.960532,-7.834352,-8.934466,2.989899,8.330930,-3.831534,-0.412027,-7.379989,-3.093533,-0.806831,-2.215490,1.116257,6.432370,-6.649117,-1.881412,2.342343,9.280254,3.032049,-4.301550,-2.646995,1.490841,-4.408634,-2.362944,-5.490663,9.285672,6.136298,-2.175904,-9.199568,5.027046,5.306951,-6.966389,-9.826055,-4.860302,0.627204,-0.399197,-5.055086,0.984862,-8.680922,2.427696,-8.854691,4.941732,4.458063,-9.812959,4.636778,-8.506893,9.326208,1.988883,-3.853386,-9.420817,-4.368360,5.313922,-5.919330,3.461936,-3.477804,9.996652,6.511806,-3.452133,-6.439653,6.061558,8.539504,7.144668,-3.887105,-7.433571,-5.475946,2.236953,-0.759957,-3.641415,7.176699,9.084948,-6.255057,-3.283012,3.734411,-9.678623,-7.800214,6.488707,3.545962,-6.411465,9.473125,-3.644850,8.076527,5.135812,6.863170,-7.424694,8.534187,-8.677093,3.061940,-5.655335,-4.448488,-7.347065,-7.266200,-1.400432,-1.311809,3.809383,7.153459,-1.751799,9.185962,-2.424112,4.080550,2.549587,-1.139039,-9.800892,8.100376,-2.083621,-3.989435,-8.200972,-3.388824,-1.378658,3.020525,3.358762,-4.683050,-2.567682,5.687340,-3.245730,4.682555,1.485306,4.344238,2.533835,-0.767372,-3.348483,7.176124,4.922792,2.883336,-2.491149,-0.692606,-6.577315,7.686739,-3.271368,7.049818,2.175051,2.441870,8.113546,4.140285,4.539338,-9.659110,-6.494754,-0.376023,-1.036095,5.809911,-1.000606,-3.041881,-6.526908,2.226382,-6.336824,1.050292,-4.778963,-4.555437,-3.969068,-3.413632,-5.818729,4.442279,-3.304696,-3.695391,-5.093532,-2.011330,3.418448,3.526621,-2.840028,1.451030,3.790004,1.573121,6.845139,1.222663,1.803421,8.720484,5.679256,-9.506466,-6.499637,-7.713999,-4.899389,7.068772,3.253691,-2.484964,-3.873508,-1.290833,-2.158149,6.862668,5.094069,9.583494,-2.302725,-6.735295,-8.439776,-8.926402,-0.751788,2.298865,1.309707,-5.492740,9.934788,-8.346587,-6.491697,8.125378,-2.617297,-1.265943,-3.736268,-7.954835,-2.395497,-9.389864,0.889230,7.337137,7.685558,6.181943,-6.965502,1.529406,-4.658297,9.682461,-4.364888,6.831427,4.880709,-6.187558,-7.969433,-5.047805,-6.435848,6.126584,9.453785,1.233378,2.885907,3.441381,-2.239744,2.187446,0.206441,-8.668386,6.455280,-2.977212,3.543886,-3.890584,-6.677244,2.061261,8.138479,-5.567822,6.685824,2.116382,-1.358937,-6.974852,0.064815,7.337739,-4.852710,-2.557779,-9.930419,-9.946382,-7.325181,1.599440,-4.576546,9.313420,5.106720,-1.244570,9.108400,4.464350,2.749677,-7.193276,3.846764,5.971949,4.731273,0.123040,-6.967350,-5.176971,0.138669,5.025177,-1.542158,4.188348,8.450839,-1.621233,-0.947322,-9.178525,-5.516900,-9.568233,2.936578,0.668213,-2.868393,-2.122267,8.607383,0.747024,-0.739587,-7.742380,2.427776,-5.049342,3.557435,9.892509,-8.354312,3.545532,-3.146433,-1.614989,7.580010,6.431475,-8.467331,7.930617,-7.503093,-1.274290,1.835595,5.878539,2.825580,1.685335,-9.756206,-5.456496,7.442685,0.532424,5.294091,6.621853,-5.063119,-8.868703,-4.896022,-9.751375,-0.436133,6.213496,6.686334,-2.625002,-4.784556,0.299421,-5.320006,0.406457,-9.907981,-8.267613,-6.583503,-1.876651,-6.285916,6.726434,-1.169817,5.337810,8.107769,2.606231,8.929557,4.772033,1.576869,-8.536590,-9.757631,2.652232,9.128412,-0.297061,4.205399,-9.598578,-0.764918,-8.639743,2.059316,7.580068,-4.540202,5.569086,4.999591,7.179079,3.777455,-5.345648,0.700859,-8.397353,5.206220,-1.758568,-1.337596,-6.032896,8.657365,3.363457,-4.059670,2.876417,0.325652,-9.905284,7.443001,-1.050987,-0.714267,-8.776386,-6.713125,-1.127048,9.201935,5.921825,3.886717,-7.630328,-6.072925,2.854175,2.655746,-0.996384,1.998871,2.718730,-6.226955,7.659806,-0.868150,6.538995,1.809833,3.538657,-0.013103,-5.243481,-1.937909,-8.716284,-2.912459,-0.016672,-8.240254,5.511540,9.656969,-3.902939,-6.417686,-3.244976,2.771226,8.379808,1.838094,-7.517628,4.077661,7.132124,2.263707,6.247660,2.831720,8.973260,-4.017071,9.216263,1.773282,4.774333,-3.230411,7.378069,1.690116,-3.512187,8.617844,2.652662,9.829094,-7.615618,-5.134867,-5.543770,2.816000,-4.118799,-5.778361,-4.217823,3.997626,4.511344,8.524162,-7.517450,-7.777887,-8.957416,1.956369,-8.256658,-2.098969,3.029288,-2.735872,4.413368,-3.073564,1.287837,2.580404,-5.233272,-0.775462,-7.576543,-0.468830,-1.018216,0.098073,-6.022981,-3.460728,3.310543,-4.126618,-4.921700,1.178388,-3.638537,6.565852,-6.139722,3.522192,3.096753,8.231875,-9.246348,-0.256204,-3.403780,3.508263,-3.571631,6.862339,-6.424323,6.547454,0.050226,-4.195647,-9.275131,5.816502,2.986989,4.164441,-8.019947,-0.181821,2.035910,-4.800226,9.448643,-1.841204,3.535856,7.045495,4.050851,-1.718240,6.302596,7.751597,-2.089275,0.100902,6.504114,3.396447,4.551104,-3.055242,-4.595945,-9.626589,-2.251863,-4.532787,-3.891504,-8.381216,-1.738485,-1.490682,2.987790,9.948631,7.657452,8.847078,4.909011,-8.992669,3.502981,2.773894,8.475926,1.491942,9.657946,-5.938608,6.431708,8.051334,9.365546,-1.676767,1.671090,0.744180,-7.135329,-9.914176,6.738612,-7.191774,7.907742,-0.405645,5.734535,3.415687,7.789795,-7.783336,-9.872309,-1.885494,-0.934065,-5.135484,-6.939421,-3.733445,9.788993,6.515863,6.001714,9.923345,8.076046,-7.653610,6.700048,5.023980,9.850071,5.428619,-7.254746,7.780935,-7.741900,-1.625782,3.867756,6.715918,3.088214,9.091932,-1.621073,-4.976628,0.034138,-5.093919,-0.523173,3.411871,-9.911495,3.969559,9.036890,3.300565,-6.396671,-6.493180,-8.491529,-4.263186,-4.502416,-6.766724,-7.411581,3.234382,2.944053,-3.450563,4.948014,2.679236,3.380476,-9.355399,-1.370825,-6.673547,-5.240996,-7.179163,3.378655,-8.555071,7.619674,-9.392001,5.079155,4.822362,-7.933671,-7.332801,7.121922,6.885975,-8.479650,9.590650,5.954100,-4.553769,9.413303,-3.230466,8.525232,-7.332168,7.049917,5.251907,-4.336197,-2.480118,-3.511346,9.011118,-8.094996,-8.480673,-1.762347,7.807149,-7.094433,6.989024,8.959951,-5.336247,0.635093,1.102101,2.968878,9.893976,2.632376,-5.382975,9.576522,8.757032,-3.965152,-3.416870,-8.127638,-1.822355,1.537884,-0.575653,6.664228,-1.581655,7.351828,-5.845069,-0.474245,5.823183,0.177324,4.598055,8.969622,-2.096749,4.843091,-5.840112,3.901642,-8.354150,1.805616,6.662923,6.490547,6.263124,6.941652,8.175899,7.269527,7.994613,9.340996,6.356913,7.157117,-9.113847,2.931156,-0.890881,-0.256681,1.320645,5.647683,-5.503750,-8.020562,-7.249157,1.738026,4.434470,-5.622078,2.125991,-2.354500,-9.242376,0.002731,-1.939747,7.560474,1.193384,3.999879,4.496522,8.340506,5.438840,7.702453,0.111125,0.723791,-0.935403,4.260958,0.255280,-2.053033,4.277368,1.578120,-9.541162,5.328070,-6.542648,2.479508,4.234740,8.010328,-0.747455,-3.563015,-6.754467,4.652310,0.966808,-1.025517,-7.314085,-3.472591,-9.386067,0.964598,3.336692,-4.255207,4.180101,9.486134,-5.588791,1.547122,-0.263389,-5.771769,7.195911,4.780730,-3.718727,-8.172609,-4.335776,6.395727,-1.698365,-2.261961,6.930711,4.025948,-5.004795,6.959486,4.063560,3.157402,3.045002,-1.170752,0.416784,0.189881,-9.022303,-4.792837,5.857886,3.137534,-9.747038,7.835825,3.634444,-6.923347,5.269754,-1.680618,-1.099372,-7.431641,-7.734451,1.872192,-7.910645,9.920484,-0.211050,-1.635471,8.938360,3.087201,0.411642,0.848114,8.728299,-3.554539,-4.334015,1.926531,-1.810289,-4.735874,5.023299,2.377826,-6.843642,-8.491192,-5.798793,-6.265288,-5.259220,-7.341891,-6.555646,-6.235259,3.352112,9.843802,-0.126951,4.260204,-0.015463,2.698637,9.186108,-5.623473,6.650234,-7.825109,0.435370,-0.570802,-4.625081,1.201146,-6.405348,-7.627126,-6.006801,2.606628,-0.512819,7.164709,-1.832490,-0.219546,9.116704,-5.475677,2.666711,0.342758,1.653475,7.532183,-0.825992,8.154460,-6.631315,-5.096672,5.448479,5.804122,-9.670252,-6.144733,3.389452,-0.410443,0.562279,-9.950785,8.803914,2.773549,2.729546,-0.806104,8.583271,-2.402205,3.572558,-1.622212,0.480859,3.579430,2.299950,-3.339888,-0.322405,3.749959,2.150205,0.081750,8.464565,-4.719485,9.530032,-1.059270,-4.425769,-5.754095,-5.417338,-2.990114,2.983563,3.137642,3.151330,8.430636,4.323284,-9.000625,-3.685563,2.689200,-4.459220,-4.848312,8.215512,1.114867,-5.438583,3.810034,-5.875321,-0.758298,1.152252,-1.108925,2.155519,5.220105,6.078589,-6.952992,5.256901,5.282441,3.037282,6.818995,9.261863,-4.251156,-6.636115,-1.363349,1.626378,-5.023072,-2.783600,1.441561,1.255896,-5.289491,-9.542122,-4.028277,9.992245,-8.073950,-6.246031,1.985052,-6.184632,6.907907,5.587004,8.601235,-8.762277,-3.207493,2.844936,-6.178755,-5.381330,0.035298,4.331486,-5.384777,7.232059,2.812589,-5.824729,4.276133,-2.315724,8.596330,-7.285155,-2.174478,7.896739,-6.953946,3.895945,4.547548,3.323528,-7.222076,-8.537223,1.968028,0.449573,3.087166,5.208594,-6.981704,2.334798,-9.442156,1.675733,-8.775429,6.093574,1.681704,-0.130539,-0.113757,3.566632,-0.405111,7.133836,5.361853,1.047615,-7.812755,-4.878235,-2.175564,-1.643379,9.422326,-2.868895,-7.778950,-5.933010,-0.714280,-5.648881,6.204233,4.400733,-3.192468,9.166273,-1.496959,-9.220684,-3.089303,0.073213,4.579061,9.995374,0.689532,-0.487750,9.046172,4.038716,4.772948,-0.472128,6.799099,5.701295,-1.156804,-7.004139,6.808872,9.687691,3.334806,-9.672108,-2.983974,0.141612,5.378247,-7.195822,5.338256,-3.288824,4.061043,4.514603,6.706747,-6.623708,0.510381,-8.187308,-1.526405,-6.362757,-7.504958,-4.118072,-5.813843,9.117647,9.410091,-1.077889,8.984348,-7.606968,3.476191,-9.081475,-9.587138,-0.767320,4.202086,-6.284293,-5.022367,0.589961,4.229145,-0.595169,8.651636,-0.206159,9.874166,1.333090,1.827591,9.553037,7.586359,0.463570,4.267331,-8.789078,-2.447354,-5.378223,6.927204,-5.913527,7.550054,1.344351,-1.878269,4.453495,-3.193471,-3.732314,-0.859276,8.227825,4.063208,3.329360,-8.549778,4.652665,-0.219953,-4.866115,2.019513,0.133277,5.896490,-7.466384,-2.760660,0.536177,-5.954701,-3.010730,3.239540,3.182597,0.461833,9.211612,-1.982505,-7.533336,-4.205961,-5.387445,9.033971,-2.317545,-2.864017,-2.264159,1.454202,-4.955586,-4.329790,-9.660015,-0.484293,-1.776135,5.574565,8.532663,3.059604,-2.056369,-8.175539,4.283618,-8.153956,-5.208219,-3.458093,8.271142,-9.656791,-1.791164,2.152097,2.560377,-7.590918,9.938856,1.319686,1.061085,-6.847727,0.595375,-6.694462,4.010586,-9.112862,-1.282950,-8.293403,-9.763842,7.335461,1.942201,-5.109115,-6.484121,6.571043,-6.805210,-9.862563,9.386668,8.802432,-4.332506,9.138633,1.373065,2.726423,1.364681,3.811351,4.212551,-1.082482,4.724317,3.290194,1.454275,9.214371,6.944430,8.222739,4.622942,5.299226,-4.723042,4.472798,7.760480,1.038999,-8.743423,-6.142666,2.284317,4.096775,8.847915,-0.985798,9.341382,-0.810567,-1.261814,4.040267,5.370510,3.526607,5.922632,5.254105,5.475084,4.218505,4.964339,0.356786,-6.900774,-0.852674,6.403799,-9.824148,-2.226769,-9.093626,-5.521735,-4.419909,-1.746188,-8.476421,-5.611990,-2.056682,-3.269083,-7.971724,-2.922154,6.023108,-8.843811,-8.138767,-1.182711,-4.911414,-8.326878,1.639657,-9.344334,-7.859803,2.772640,-2.284739,-2.748278,-3.215726,4.287020,-3.624150,-9.881833,-2.580866], dtype = "float32")#candidate|3988|(1815,)|const|float32
call_3987 = relay.TupleGetItem(func_2551_call(relay.reshape(const_3988.astype('float32'), [11, 11, 15])), 0)
call_3989 = relay.TupleGetItem(func_2553_call(relay.reshape(const_3988.astype('float32'), [11, 11, 15])), 0)
output = relay.Tuple([bop_3968,call_3987,const_3988,])
output2 = relay.Tuple([bop_3968,call_3989,const_3988,])
func_3992 = relay.Function([var_3966,var_3967,], output)
mod['func_3992'] = func_3992
mod = relay.transform.InferType()(mod)
var_3993 = relay.var("var_3993", dtype = "uint32", shape = ())#candidate|3993|()|var|uint32
var_3994 = relay.var("var_3994", dtype = "uint32", shape = (16, 3, 10))#candidate|3994|(16, 3, 10)|var|uint32
output = func_3992(var_3993,var_3994,)
func_3995 = relay.Function([var_3993,var_3994,], output)
mutated_mod['func_3995'] = func_3995
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1211_call = mod.get_global_var('func_1211')
func_1213_call = mutated_mod.get_global_var('func_1213')
call_4124 = func_1211_call()
call_4125 = func_1211_call()
output = relay.Tuple([call_4124,])
output2 = relay.Tuple([call_4125,])
func_4133 = relay.Function([], output)
mod['func_4133'] = func_4133
mod = relay.transform.InferType()(mod)
output = func_4133()
func_4134 = relay.Function([], output)
mutated_mod['func_4134'] = func_4134
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1444_call = mod.get_global_var('func_1444')
func_1445_call = mutated_mod.get_global_var('func_1445')
call_4135 = relay.TupleGetItem(func_1444_call(), 0)
call_4136 = relay.TupleGetItem(func_1445_call(), 0)
output = relay.Tuple([call_4135,])
output2 = relay.Tuple([call_4136,])
func_4142 = relay.Function([], output)
mod['func_4142'] = func_4142
mod = relay.transform.InferType()(mod)
output = func_4142()
func_4143 = relay.Function([], output)
mutated_mod['func_4143'] = func_4143
mutated_mod = relay.transform.InferType()(mutated_mod)
func_584_call = mod.get_global_var('func_584')
func_586_call = mutated_mod.get_global_var('func_586')
call_4160 = func_584_call()
call_4161 = func_584_call()
var_4180 = relay.var("var_4180", dtype = "float32", shape = (10, 14, 2))#candidate|4180|(10, 14, 2)|var|float32
bop_4181 = relay.logical_or(call_4160.astype('bool'), relay.reshape(var_4180.astype('bool'), relay.shape_of(call_4160))) # shape=(10, 14, 2)
bop_4184 = relay.logical_or(call_4161.astype('bool'), relay.reshape(var_4180.astype('bool'), relay.shape_of(call_4161))) # shape=(10, 14, 2)
output = bop_4181
output2 = bop_4184
func_4205 = relay.Function([var_4180,], output)
mod['func_4205'] = func_4205
mod = relay.transform.InferType()(mod)
mutated_mod['func_4205'] = func_4205
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4206 = relay.var("var_4206", dtype = "float32", shape = (10, 14, 2))#candidate|4206|(10, 14, 2)|var|float32
func_4205_call = mutated_mod.get_global_var('func_4205')
call_4207 = func_4205_call(var_4206)
output = call_4207
func_4208 = relay.Function([var_4206], output)
mutated_mod['func_4208'] = func_4208
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3126_call = mod.get_global_var('func_3126')
func_3128_call = mutated_mod.get_global_var('func_3128')
call_4237 = relay.TupleGetItem(func_3126_call(), 0)
call_4238 = relay.TupleGetItem(func_3128_call(), 0)
func_637_call = mod.get_global_var('func_637')
func_639_call = mutated_mod.get_global_var('func_639')
const_4240 = relay.const([[-7.067263,7.043507,-0.420810,6.472538,-0.011904,0.551197,-7.672735,0.544757,0.446743,9.361306,8.599960,8.838602,-8.498796,-5.811596,-3.981883,-3.151392,4.548613,0.375207,1.759796,3.353058,5.084007,7.728026,5.209463,2.948075,-3.872329,9.438068,9.731696,4.270502,-7.648006,-7.821652,0.446161,8.091242,9.479583,2.535255,4.359268,-6.235785,7.712334,-8.353197,-1.934402,4.767342,-7.756892,-1.804602,0.496700,-5.130905,-1.653434,9.409737,9.958237,-9.017766,6.233127,0.045385,-4.629021,1.899959,-5.919537,-4.425245,-0.027264,7.667364,6.003018,-1.250580,3.818339,-9.707308,4.028653,-8.958654,-1.508659,1.872686,-9.985067,7.462510,-9.687539,-4.431353,-6.560422,9.772853,0.191426,-0.642874,0.088017,4.483824,5.949110,-6.268496,5.356071,0.891356,9.969766,3.994252,-5.202049,6.768598,-4.932383,1.883311,-5.272354,6.806746,9.828188,-6.557074,-0.145301,-1.421794,6.578781,-2.968047,2.219291,7.873114,2.438566,-8.562015,0.193532,-6.779993,5.113218,-0.029777,8.879260,9.060914,4.434218,5.211518,-1.983943,1.296152,-0.863610,-4.958987,-3.178280,-1.387998,5.121859,6.333181,-3.727887,-5.338175,5.872075,-2.263737,-6.652888,0.686626,0.505567,4.854278,-3.581685,-9.934564,-8.059413,-7.171556,-6.820905,-1.227097,4.564371,-4.019719,-9.054744,-3.269633,1.036722,-4.565828,-8.689551,-9.257308,-2.248619,2.520364,-4.124778,4.456600,5.985147,7.644249,-7.331638,4.446122,5.739643,-0.381661,-4.506242,8.200371,0.517013,3.823919,-8.091136,8.516132,7.114565,4.778774,-3.685807,-3.652456,8.873755,6.439371,-0.001863,7.575061,-0.864361,7.174292,-2.123257,7.501910,-8.181261,-8.605348,-1.157759,4.315248,-4.076812,8.934633,9.050387,-8.340354,-2.215624,-0.152358,-1.363413,-0.105760,0.725300,9.513867,6.536339,3.740367,7.751236,-7.220957,-7.142719,9.132856,-2.895619,6.565510,9.062894,-9.596764,-9.540006,-0.642638,4.885935,3.635897,-8.354124,-1.644132,6.606428,3.960742,2.251322,-3.843364,1.805385,8.395320,2.531442,8.578917,-4.201149,-0.781485,-6.152701,-2.555241,5.774192,2.984445,-3.429709,5.307073,2.132699,1.715841,-4.407907,-7.922026,1.717130,-5.932629,7.599834,7.024740,6.591313,-8.915676,-3.787703,9.246224,-4.788004,5.686885,5.351531,8.544277,8.690659,0.143376,-2.517670,3.662793,3.238172,-5.636638,5.055706,1.512734,7.918461,6.000057,-9.613081,-9.333379,0.605538,1.696682,-0.699393,2.525220,2.450734,-4.590897,8.257104,-9.390600,3.489368,7.115579,-5.223745,9.590382,-8.461467,-6.362469,-8.999820,0.082254,-5.799926,-7.012974,8.137238,7.023928,-9.420755,3.109006,9.677363,0.350853,-3.923383,-6.291026,3.180660,5.448690,-2.628558,-1.205470,-1.906059,-6.715258,-6.298972,9.843625,-9.083947,6.170006,-4.510338,-7.326256,-1.606625,-5.903205,-7.746230,2.713481,1.308167,0.098123,-6.049439,-5.612835,-9.904750,-0.891912,4.984132,-4.070642,-2.151001,-0.078490,-8.363914,-3.219012,-3.468424,-9.069558,0.194409,-8.121802,-1.365363,-0.045299,2.662080,6.441623,3.473649,9.995806,3.887469,9.507050,9.997370,9.002178,-0.684936,-6.163005,-4.805617,-1.394236,-9.313829,-7.903058,-9.542104,-8.565323,0.444156,2.036235,9.842133,5.722343,6.606329,-7.265953,5.647752,-5.250598,5.549521,-6.462677,8.854835,-9.687880,-7.702404,-7.993158,4.744700,-2.449616,-1.515921,-8.702658,-2.574016,5.723206,-6.617485,-2.909011,1.819829,0.135764,4.860913,-0.460989,-7.073569,2.093525,-6.379935,-5.769727,-8.364284,-1.078112,-7.659011,-8.163002,6.391238,-2.106354,4.644862,5.896543,-8.889194,5.610171,-8.663408,-0.796421,-6.157663,1.467006,-4.280081,2.832144,4.078815,4.964771,-1.235411,-5.344943,2.804833,7.993297,-5.081792,1.568859,3.765568,-1.113659,6.590937,8.112698,-2.349026,-8.021269,-1.557495,3.115588,8.798800,1.113175,-4.600191,2.484985,3.289658,-2.211545,7.207327,-5.092471,4.966281,9.923553,1.672570,-2.475765,2.607635,-5.092984,-0.314936,4.219456,0.380455,6.042948,9.657051,2.319344,5.550908,-1.534804,-7.565195,-6.639024,1.024336,-2.053448,-2.146410,0.532793,7.457460,1.508384,8.676857,0.712858,2.157679,0.778230,-8.499098,9.567133,-3.469846,-1.255751,-6.123693,-9.799772,-0.179962,3.732867,-7.622058,1.520179,-8.702971,4.205906,8.621670,-6.201657,-8.914600,8.807496,8.548475,-9.973715,-7.335801,-6.812673,6.261021,1.684090,0.738272,-0.256897,8.357551,4.316838,-2.666146,2.705060,5.164773,5.531641,0.357570,-7.297376,1.554614,6.180000,-1.069413,2.746783,-0.548335,7.054135,8.369401,1.059974,1.725274,-9.348716,-5.288435,-0.442448,-6.514929,0.034973,-0.758239,-2.486062,-3.801742,-0.415377,7.105830,7.568873,-4.867061,0.617391,-8.003920,-0.702052,9.009240,-0.247709,-0.296575,4.533696,-0.386787,0.039492,7.007277,-2.438873,0.213435,-7.486067,-6.765462,-0.245323,-5.964481,-7.904601,6.309920,2.126550,-3.186612,-5.990074,-3.206030,3.838635,-1.025602,0.525199,-9.984880,8.284511,-1.073314,-9.024246,0.950064,8.896412,-2.015991,2.188415,-3.490102,-7.471884,-4.195446,-7.081597,-1.432402,5.172783,-2.014131,-8.285149,-4.714164,-1.811177,8.919126,-7.418588,4.274890,8.505595,4.846525,5.480617,8.095601,-5.546519,-6.095310,-0.318516,-9.963146,6.348256,-3.657799,0.785160,-0.954254,-4.217604,-7.824717,-2.376626,-8.906200,1.710739,-4.898440,-0.678403,-0.301248,3.435397,1.282470,-2.146901,5.935606,-5.904307,1.828038,8.208747,5.723401,-7.049834,-0.006403,3.915642,-8.184690,-2.086053,-9.746186,-8.564992,-0.533228,4.857831,5.694250,0.403210,-8.251173,-2.905311,-8.377855,7.168817,6.816892,5.339691,-2.002022,0.980553,-0.950272,-9.176166,-4.884899,8.846504,-4.316480,-5.017688,-1.507886,3.739271,1.809822,3.092478,7.166199,4.895670,-3.798856,-5.368496,4.900426,6.589779,3.131680,-7.601662,-7.432760,-3.786149,6.449543,-7.146279,3.895557,-8.184978,0.098578,-0.568094,-7.095475,-5.067669,-6.741947,4.749606,-3.245526,3.860126,-5.967601,0.518908,-6.590332,-3.934383,-2.747555,6.350921,-2.603130,-9.643674,7.212116,-2.291850,-0.792145,-8.057637,3.436287,-7.570417,-7.227630,1.117258,-6.768562,0.295509,7.740940,-4.357549,-0.212493,5.758271,2.982611,3.039346,-7.354250,-0.899338,-8.581393,9.488827,-3.217510,7.660421,-9.252408,-6.200962,9.918257,6.779588,5.771004,-7.645789,6.711077,-0.979930,4.248786,-4.982031,1.276079,-2.829212,6.298832,4.971723,9.838264,3.244582,2.724861,-8.967582,5.625773,4.644297,6.911229,4.970967,8.696509,7.299156,2.446196,-5.577165,-5.011646,-9.758581,3.974813,-5.601475,-3.602248,-6.719336,4.767260,-7.832765,-7.331698,5.196731,4.274739,-9.834562,-7.244150,1.751157,0.889795,-3.290730,-2.953461,-7.642704,-9.377745,-0.338346,-4.244153,-6.544077,-9.378378,-0.856293,0.268098,-3.971106,-6.876751,7.963346,1.836609,-7.558243,8.448177,-8.634176,5.495557,4.101889,7.054590,-7.413179,-2.994738,6.320895,7.383220,1.102464,6.926779,7.317705,-4.032403,-2.383821,3.537465,9.490229,9.957370,-3.802659,-8.987833,-5.161381,-2.454714,8.986139,-0.019438,5.072861,-1.333551,-5.539366,-0.340621,-3.496036,-2.887759,-0.093860,2.986075,-8.781919,-4.016253,-2.765269,-4.254520,-8.988941,9.402040,3.685708,3.709626,-6.366963,3.843154,9.977737,-6.427263,7.213397,7.615269,6.414737,4.645803,1.719441,-9.364011,-4.257470,5.311526,8.419877,-9.323032,-4.205180,7.557438,3.429683,2.793741,6.499594,-7.743175,-9.989567,-1.991687,8.680296,-5.949572,8.476583,-1.961103,5.341411,9.594539,-2.799530,-9.511946,3.120205,4.061088,-5.827492,4.453615,9.088773,-6.439851,9.212379,5.681226,-3.107748,-1.234974,-3.659064,9.751501,-4.870124,4.190189,-6.410291,1.843611,8.154992,7.849682,8.050149,0.121628,-0.834003,-7.635690,3.834227,-5.174818,2.783920,5.923668,8.215278,-9.788369,8.777866,4.083077,7.170342,5.507138,2.195764,-0.060936,-4.297727,8.045191,-8.800908,-5.460259,5.253918,3.493833,5.006542,2.250959,-8.322575,-1.789053,7.836306,6.901339,-1.176117,8.019666,3.937111,-5.710890,-5.377721,0.961944,-0.588922,-8.524774,-1.584424,-5.939302,-6.583321,5.201582,2.684118,8.170632,6.525129,7.978446,1.215642,4.056044,4.329039,-4.707653,-8.533844,-3.367418,-9.653714,-0.622118,-0.586436,-7.317320,-0.518515,6.450463,-2.401721,-9.729248,-4.082121,1.515024,3.234020,-5.658542,4.167461,-8.163781,-0.654487,-2.936034,5.042076,-0.803165,5.284283,-6.346841,-7.709665,-0.041143,-0.817470,-1.595232,-5.682317,4.930454,-9.526977,-5.510514,-3.539793,4.419879,8.886052,5.107790,7.215332,7.226678,7.886138,-5.149142,8.276768,-6.837566,-0.373000,-5.402266,-6.349121,-9.013529,-3.739498,-5.166493,0.104446,0.630477,1.513722,2.645109,-3.583782,-7.739019,-3.772951,3.266523,7.415326,-6.003833,-8.698352,-9.780043,-1.240912,-7.848794,-7.895099,6.514583,-8.216735,-2.885903,-7.366469,-6.931077,-2.881400,-7.503932,-5.696915,4.084515,2.443611,1.419776,-9.344927,-6.894227,-0.853747,0.740322,-7.573210,-9.529578,-3.398663,-5.246628,-7.266317,7.946883,1.036722,6.052880,-2.303696,0.336486,-4.618520,5.286751,0.133064,0.830066,-6.213455,-6.635055,-8.051103,-2.219991,5.270634,3.570175,7.134511,2.155587,-7.727975,-3.671507,0.179874,-0.556861,-2.795334,-1.378312,3.111756,6.154169,0.356380,-6.303995,-8.314820,-3.063198,-6.895866,2.412286,-8.455784,-4.099636,-8.067336,8.505343,1.664223,8.325102,-6.382785,9.858656,-3.304436,2.499171,-0.798571,9.214948,-3.463838,-8.012614,7.909894,3.677618,-6.644509,-5.296640,-4.599098,-0.566044,8.368697,-9.324219,-8.731643,4.465935,-6.018396,-4.335592,8.212655,-3.714189,4.149197,-4.950945,-9.870258,-2.204344,9.513087,2.799506,5.687981,7.578990,-1.817913,-8.870746,8.559134,1.631748,-0.359883,-7.703392,1.833375,-6.937234,-0.727088,7.120076,-9.377884,8.044153,-0.811607,8.789748,4.457316,-4.390525,-1.276082,-2.134664,-3.212930,-1.395170,4.399061,-8.298988,7.070868,5.678859,4.967370,-3.438529,-4.528599,-4.229278,6.985113,-9.675878,-4.070961,-6.350398,5.825324,1.862639,-4.158220,8.393401,-6.423138,-0.426109,-2.477333,0.896561,-8.306446,2.102811,-4.289211,1.371007,3.767936,-0.202662,-4.598132,2.438309,6.461570,9.155485,-6.009379,9.344354,0.331359,-0.732836,0.050725,6.680209,2.083673,-3.310425,-9.452813,9.570144,-6.086458,-8.146860,-9.430331,-5.542507,-5.814575,2.476490,-5.634762,1.476930,-7.737679,7.983698,-4.976720,5.049756,3.868158,5.745241,5.987378,-2.908982,-7.625443,-8.006324,-5.987603,-5.676348,6.042589,5.704232,-3.036187,8.545885,-8.273275,-3.239005,2.651074,-7.217829,3.094208,7.132778,4.999527,-9.355553,-0.054472,-7.335827,-9.691027,2.316015,9.486768,3.714567,0.765453,-7.783800,-7.111319,-4.933582,5.262222,-3.526337,-4.485966,0.447433,8.107045,7.001726,0.386902,-9.776278,-5.892662,9.500243,-3.122396,2.588790,8.801276,5.312642,-0.300475,0.007984,8.439736,0.071723,6.034370,9.237208,-1.474202,-5.877426,-5.947917,9.481626,-4.598919,-6.877454,-9.870303,5.674790,-1.426249,8.254856,-9.223048,-6.405317,-5.823922,-2.412726,-5.609088,9.683113,-1.700140,-0.824534,-0.292035,-2.889606,-9.502990,-4.594732,-1.029914,-3.244890,-5.064482,-7.638179,3.966554,-2.186662,-5.707668,3.015503,-6.480565,3.357305,3.343239,-5.036252,-2.591536,-9.710676,3.202599,9.961589,-4.629893,-4.468576,7.814615,-9.601056,1.893537,-3.430008,4.922135,6.405565,-0.217350,-2.871328,-8.577584,-3.350505,4.407125,-8.889245,5.549608,5.200650,5.849056,-8.824165,-9.651288,4.604381,-8.411256,5.977161,-4.183669,0.835178,9.413512,-4.644026,-2.553793,-4.428346,6.977041,3.124492,-7.763980,8.424862,-0.486130,-2.408886,-7.485967,6.809181,-2.756511,-5.135080,2.833347,6.288295,4.433047,-0.062557,-9.279994,-8.847113,3.265800,-7.257656,-7.278712,-6.186592,-4.049960,7.648013,-3.536812,9.799750,5.977704,4.180659,6.492250,2.228730,-7.833969,0.091069,7.618074,7.156147,3.810766,-5.330417,3.369039,-9.322502,-0.934878,-1.472443,-8.354795,9.747249,3.868689,-3.208243,4.067469,5.231535,-9.439366,2.819181,-0.888043,-1.288352,-3.843763,5.019100,7.240810,5.725650,0.073571,2.641735,1.670936,6.667464,3.233617,-4.250838,-5.592532,9.082058,-8.946815,-1.628801,5.282029,-7.798425,5.844833,6.024916,7.412580,-7.682325,-2.903377,8.048372,-1.021896,-3.804722,-3.406418,4.835788,-8.561899,8.058880,5.952231,-7.849332,1.375850,-2.526934,-1.518032,7.538984,3.079865,3.248700,2.999896,9.168493,3.601899,-1.383929,-4.053068,-0.221063,-5.177621,8.679264,4.030414,-0.395503,-8.091756,-9.147032,-6.490320,9.122947,2.803821,5.191082,0.923685,3.481959,-6.775707,-3.969309,8.520489,6.865955,6.194709,2.868493,-0.794707,6.715714,-6.685138,-4.670999,5.043362,-8.763854,-1.074847,-4.176146,3.966324,-6.741877,2.735104,-5.451509,-5.730535,-5.419830,6.066062,-4.307704,4.052014,-4.021765,3.809742,-7.330597,-8.518087,-7.111826,-7.181311,-9.291821,-2.643505,4.549216,-8.561278,-0.827001,0.312324,-8.819346,-0.431907,4.959968,-0.286051,8.928342,-4.879910,-3.919323,1.034184,5.554416,2.190095,8.838762,-7.342868,9.971135,-5.723905,8.782334,-2.167900,-7.587741,3.273012,-9.297751,-4.308167,2.447448,7.246814,3.213052,-6.059533,-7.056092,2.129911,1.427499,-2.561119,-4.731060,-8.247009,2.675575,1.430081,0.287849,8.403513,-2.959759,-2.467320,-9.568488,6.711192,-6.556430,-4.705111,-5.052961,-1.301714,2.743025,-2.920063,9.042523,-4.378446,-7.513025,1.515587,-3.635993,6.774984,-1.137533,-9.175309,-4.091651,-4.584203,-2.342319,3.971998,-6.246069,-9.101107,4.322349,2.553666,-1.044598,5.161233,8.538231,-8.071399,8.965241,-3.015835,8.397276,-5.716991,9.519779,-3.525063,8.699955,-1.629969,6.458928,7.275780,1.113515,-2.160838,-6.386836,-4.094583,-0.386330,3.258658,9.132731,1.702526,6.561701,-8.483482,-3.886027]], dtype = "float32")#candidate|4240|(1, 1365)|const|float32
call_4239 = relay.TupleGetItem(func_637_call(relay.reshape(const_4240.astype('float32'), [1365,])), 0)
call_4241 = relay.TupleGetItem(func_639_call(relay.reshape(const_4240.astype('float32'), [1365,])), 0)
func_3376_call = mod.get_global_var('func_3376')
func_3380_call = mutated_mod.get_global_var('func_3380')
const_4244 = relay.const([[-10,-5,8,-7],[-2,1,-3,2],[-8,-10,-9,7],[-5,7,-10,-10],[9,-5,-1,-6],[-3,1,-2,8],[3,10,-8,5],[10,7,-6,10],[4,2,2,-6],[-7,-8,9,8],[-4,3,-7,-3],[4,-7,-7,-6],[6,4,-6,-10],[-9,-1,-4,2],[7,-10,-6,3],[5,8,9,-2],[-2,1,-1,10],[-9,2,-9,-3],[-10,3,8,-5],[6,-4,9,-7],[6,-10,1,9],[-2,5,-5,-10],[-1,-2,8,1],[-5,8,3,-7],[-5,6,-9,-6],[-5,-6,1,-9],[10,-3,-1,10],[-9,1,4,-9],[-7,5,-1,10],[-5,-8,2,-1],[9,1,-8,7],[9,-9,6,-4],[-2,-10,1,9],[-4,-2,-4,-1],[7,-6,-2,4],[3,-4,9,3],[-8,-6,-2,-5],[-4,5,2,-3],[-7,-5,4,-10],[-3,5,6,-5],[10,3,10,8],[-7,-4,-10,-1],[7,-8,7,5],[4,-2,-7,-5],[10,-7,-6,-6],[10,3,6,7],[-9,-4,2,-6],[1,-9,5,-5],[9,-9,9,-7],[3,6,-3,-7],[-7,1,-2,8],[-5,2,-8,-8],[9,2,-1,6],[1,7,7,10],[-5,-3,-8,-8],[5,-4,5,10],[7,3,-2,-4],[-10,-9,-5,1],[10,4,-5,2],[2,-3,-7,-2],[-8,4,3,5],[1,2,-4,5],[-5,5,-1,9],[2,10,-8,6],[9,-6,-2,-10],[6,8,-3,6],[-9,-9,8,4],[2,1,-10,4],[1,-4,2,5],[-3,7,-5,5],[6,6,2,7],[-8,1,-7,7],[-6,2,-4,5],[-9,7,-7,-2],[4,10,2,9],[-6,-7,-7,3],[-5,9,-2,-1],[7,7,-10,-1],[-10,2,6,9],[-2,-5,1,10],[2,9,6,-5],[10,8,-4,4],[-10,4,-6,8],[-1,6,-2,2],[-8,8,-3,-8],[8,2,-5,-3],[-1,-10,2,-6],[2,7,-10,10],[1,1,-2,6],[-5,9,3,6],[1,-4,6,7],[1,6,4,9],[-3,-9,1,4],[-4,-7,-6,-4],[9,-1,-7,6],[4,-9,-5,4],[-1,4,10,8],[-10,-4,6,-3],[-7,1,-3,-2],[-9,5,-3,4],[4,6,4,2],[8,10,6,-10],[-10,-7,-10,-9],[-3,-2,5,-8],[2,5,-7,1],[2,1,7,-1],[4,1,8,-4],[-6,7,2,2],[-1,-3,-3,6],[-6,-3,10,-1],[3,-10,-1,2],[-1,-1,-4,1],[10,-6,8,8],[8,-6,-9,-3],[-8,5,-9,7],[6,7,2,7],[-1,5,-4,-1],[6,1,6,-10],[-8,4,-2,1],[10,9,-5,-4],[-9,4,-3,6],[-6,-7,-10,7],[-9,-9,-1,-8],[6,4,6,-8],[6,10,8,-9],[2,9,10,-2],[-6,-10,9,9],[-7,-9,-1,-10],[8,4,-8,2],[-8,2,6,9],[-6,8,-8,3],[10,-10,6,5],[2,1,4,-7],[-4,-10,-6,-10],[-9,10,-5,-5],[-6,5,-5,-7],[2,4,-1,8],[-4,6,9,-4],[6,8,-8,6],[5,7,4,8],[2,-1,5,-8],[10,-2,-10,9],[-2,-7,7,-6],[7,-6,-9,-8],[-6,-6,8,1],[10,9,10,5],[-3,2,-8,-6],[-4,-7,-5,-6],[3,2,-7,-1],[8,6,6,-8],[8,2,-10,2],[-9,7,-5,6],[4,-9,-3,-8],[10,7,-9,-8],[-6,-2,9,10],[-4,-3,-9,-7],[7,4,8,-8],[-9,-8,-3,5],[9,8,3,5],[5,6,-6,-5],[-1,-10,-2,-1],[7,-9,-8,-10],[4,-4,-5,6],[-8,2,-9,5],[-9,-1,7,-1],[-3,-5,-9,-9],[-10,-1,3,-5],[-2,-3,5,1],[4,4,-5,-6],[-7,1,-3,-10],[5,-9,1,-9],[2,-5,1,10],[9,-7,-1,5],[1,6,6,10],[-7,10,-3,-2],[1,4,3,-7],[10,-7,6,-10],[7,4,2,-5],[-3,9,-3,2],[6,6,-10,2],[-9,-10,2,-6],[6,2,-2,-6],[-1,-2,6,10],[8,3,-1,7],[-5,-8,4,8],[2,7,9,10],[10,6,-7,-10],[-2,-4,-8,-6],[-5,2,6,1],[-1,3,-6,10],[6,4,4,-8],[-6,1,3,-9],[-2,10,-2,-8],[-1,-5,-6,3],[-2,-7,2,3],[10,-4,-3,-3],[-5,-5,-6,-1],[5,-6,-10,-5],[7,-9,9,-6],[7,-4,-2,-7],[10,5,-6,6],[4,-2,-2,-9],[1,7,1,1],[-3,10,1,-2],[1,10,-6,9],[-8,-4,-8,-1],[-10,-10,-2,-9],[-5,-10,-6,1],[2,5,8,7],[4,8,4,-2],[-8,5,3,-6],[-5,-7,1,-10],[-9,-10,-8,-3],[-8,-4,-8,7],[9,5,8,-2],[-10,-5,9,5],[-10,-5,1,1],[-8,-2,-1,4],[10,2,3,-2],[3,5,3,-9],[4,-3,1,6],[9,10,6,-10],[7,6,-5,4],[-8,-9,-8,5],[-4,9,-2,-7],[-3,-1,-4,5],[4,-3,2,7],[8,-2,-6,-10],[-5,6,-4,-8],[-3,-5,-1,-8],[4,4,-1,-7],[-8,-9,5,-7],[-8,10,9,8],[9,8,-6,7],[-2,-9,1,-3],[-4,-7,2,9],[-8,-2,9,10],[-5,-9,7,-2],[-4,-1,6,6],[-6,1,9,-8],[1,4,1,-7],[2,-7,10,7],[2,-1,-4,2],[-1,8,3,7],[-7,3,6,-2],[7,-9,-3,-3],[6,5,4,-2],[10,-7,7,8],[-6,9,2,2],[3,8,-2,10],[8,10,3,-7],[1,8,7,-1],[7,-4,-5,10],[-2,3,1,1],[-1,1,2,-8],[1,2,-2,-10],[-7,9,5,-10],[-10,-8,-8,-2],[2,4,-1,-9],[-10,10,-8,-2],[9,4,3,-10],[9,-7,8,6],[1,6,-4,-4],[-9,-8,-7,1],[4,-1,-1,1],[8,7,-7,8],[2,-10,2,-5],[-10,-8,-3,-4],[-6,3,3,-7],[6,-9,-6,-1],[-2,9,8,-4],[6,5,3,-6],[4,8,7,-10],[-1,4,-5,-8],[-9,-10,-10,5],[-6,-5,2,10],[3,5,5,-1],[-6,4,3,8],[-8,8,3,-3],[-4,8,10,-3],[-7,-2,-6,9],[-7,5,6,1],[4,-3,3,-7],[-6,4,-4,10],[-5,-4,-5,-7],[7,-2,7,-6],[-3,9,-6,-2],[1,10,-2,9],[-3,10,-5,8],[-9,4,4,-9],[10,2,4,6],[-1,-3,7,10],[-4,-5,7,2],[6,4,-7,-6],[10,-10,-3,2],[-5,6,-8,9],[9,2,9,-4],[1,4,8,2],[9,4,10,-5],[4,4,-8,-5],[-9,2,4,-5],[-3,-2,1,1],[-6,2,-5,-1],[-10,3,10,-6],[-9,-8,-4,8],[4,-8,-4,4],[8,-7,5,-1],[3,-5,-4,-3],[-9,5,-6,3],[-1,-4,2,4],[-6,-2,-9,7],[9,-4,-5,7],[9,-9,3,4],[5,-10,6,6],[6,-2,-10,-6],[3,1,6,1],[-10,-10,-4,-8],[2,5,-3,-7],[-6,-4,10,-5],[-8,10,-6,1],[3,8,6,6],[3,6,-10,-5],[-4,5,6,6],[8,-2,-8,8],[-4,1,-2,8],[8,-1,6,7],[4,-5,-3,6],[8,-6,1,-10],[-2,-5,-7,10],[-4,6,-9,-2],[-6,-3,8,2],[9,4,4,7],[4,2,2,9],[-5,7,-9,-6],[6,5,1,1],[5,-4,-7,7],[-10,5,1,7],[8,-7,-3,-1],[4,-2,-1,-9],[-8,7,1,-9],[3,2,-5,-9],[4,-9,8,-5],[-3,-9,10,5],[8,-3,8,-1],[-5,4,-3,4],[-8,6,10,8],[6,2,-5,4],[-10,4,9,6],[8,6,2,1],[-3,-6,8,-8],[3,-10,8,-2],[3,4,-1,7],[-2,-3,3,4],[10,-8,-6,-3],[-8,-7,-9,7],[-7,5,3,7],[7,10,1,5],[-6,2,-1,10],[7,8,-8,-9],[5,-3,8,-6],[8,-4,-1,-4],[1,-8,-10,4],[6,5,-8,-1],[10,5,-3,-10],[6,2,2,6],[-2,8,1,-9],[-7,-2,-9,-9],[-4,7,-5,8],[1,-1,-6,6],[1,9,-5,8],[-1,6,3,10],[-2,-5,-4,-2],[-3,-5,2,-8],[-5,-5,-3,2],[-3,-5,8,4],[-2,8,-3,8],[5,-6,7,10],[-1,2,-7,-10],[-3,-9,-2,-10],[3,10,-10,2],[6,-2,4,-2],[-4,10,9,4],[-7,-2,7,5],[3,5,-8,9],[-7,-4,3,-7],[-10,-10,7,10],[8,-4,7,-4],[5,-4,-6,-6],[7,3,7,9],[-7,6,-7,-9],[-2,2,2,-2],[5,1,-10,-4]], dtype = "int64")#candidate|4244|(392, 4)|const|int64
call_4243 = relay.TupleGetItem(func_3376_call(relay.reshape(const_4244.astype('int64'), [8, 14, 14]), relay.reshape(const_4244.astype('int64'), [8, 14, 14]), ), 2)
call_4245 = relay.TupleGetItem(func_3380_call(relay.reshape(const_4244.astype('int64'), [8, 14, 14]), relay.reshape(const_4244.astype('int64'), [8, 14, 14]), ), 2)
uop_4252 = relay.log(call_4237.astype('float64')) # shape=(10, 14, 2)
uop_4254 = relay.log(call_4238.astype('float64')) # shape=(10, 14, 2)
output = relay.Tuple([call_4239,const_4240,call_4243,const_4244,uop_4252,])
output2 = relay.Tuple([call_4241,const_4240,call_4245,const_4244,uop_4254,])
func_4258 = relay.Function([], output)
mod['func_4258'] = func_4258
mod = relay.transform.InferType()(mod)
output = func_4258()
func_4259 = relay.Function([], output)
mutated_mod['func_4259'] = func_4259
mutated_mod = relay.transform.InferType()(mutated_mod)
func_960_call = mod.get_global_var('func_960')
func_961_call = mutated_mod.get_global_var('func_961')
call_4313 = func_960_call()
call_4314 = func_960_call()
output = relay.Tuple([call_4313,])
output2 = relay.Tuple([call_4314,])
func_4320 = relay.Function([], output)
mod['func_4320'] = func_4320
mod = relay.transform.InferType()(mod)
mutated_mod['func_4320'] = func_4320
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4320_call = mutated_mod.get_global_var('func_4320')
call_4321 = func_4320_call()
output = call_4321
func_4322 = relay.Function([], output)
mutated_mod['func_4322'] = func_4322
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2578_call = mod.get_global_var('func_2578')
func_2579_call = mutated_mod.get_global_var('func_2579')
call_4340 = relay.TupleGetItem(func_2578_call(), 0)
call_4341 = relay.TupleGetItem(func_2579_call(), 0)
func_1473_call = mod.get_global_var('func_1473')
func_1475_call = mutated_mod.get_global_var('func_1475')
call_4358 = func_1473_call()
call_4359 = func_1473_call()
output = relay.Tuple([call_4340,call_4358,])
output2 = relay.Tuple([call_4341,call_4359,])
func_4378 = relay.Function([], output)
mod['func_4378'] = func_4378
mod = relay.transform.InferType()(mod)
mutated_mod['func_4378'] = func_4378
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4378_call = mutated_mod.get_global_var('func_4378')
call_4379 = func_4378_call()
output = call_4379
func_4380 = relay.Function([], output)
mutated_mod['func_4380'] = func_4380
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3008_call = mod.get_global_var('func_3008')
func_3009_call = mutated_mod.get_global_var('func_3009')
call_4389 = relay.TupleGetItem(func_3008_call(), 0)
call_4390 = relay.TupleGetItem(func_3009_call(), 0)
func_584_call = mod.get_global_var('func_584')
func_586_call = mutated_mod.get_global_var('func_586')
call_4391 = func_584_call()
call_4392 = func_584_call()
func_2141_call = mod.get_global_var('func_2141')
func_2143_call = mutated_mod.get_global_var('func_2143')
call_4401 = relay.TupleGetItem(func_2141_call(), 1)
call_4402 = relay.TupleGetItem(func_2143_call(), 1)
output = relay.Tuple([call_4389,call_4391,call_4401,])
output2 = relay.Tuple([call_4390,call_4392,call_4402,])
func_4415 = relay.Function([], output)
mod['func_4415'] = func_4415
mod = relay.transform.InferType()(mod)
output = func_4415()
func_4416 = relay.Function([], output)
mutated_mod['func_4416'] = func_4416
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1088_call = mod.get_global_var('func_1088')
func_1090_call = mutated_mod.get_global_var('func_1090')
call_4466 = relay.TupleGetItem(func_1088_call(), 2)
call_4467 = relay.TupleGetItem(func_1090_call(), 2)
output = call_4466
output2 = call_4467
func_4485 = relay.Function([], output)
mod['func_4485'] = func_4485
mod = relay.transform.InferType()(mod)
mutated_mod['func_4485'] = func_4485
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4485_call = mutated_mod.get_global_var('func_4485')
call_4486 = func_4485_call()
output = call_4486
func_4487 = relay.Function([], output)
mutated_mod['func_4487'] = func_4487
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1952_call = mod.get_global_var('func_1952')
func_1953_call = mutated_mod.get_global_var('func_1953')
call_4510 = func_1952_call()
call_4511 = func_1952_call()
func_3779_call = mod.get_global_var('func_3779')
func_3781_call = mutated_mod.get_global_var('func_3781')
const_4530 = relay.const([10,-4,6,-8,-7,-4,9,10,7,10,6,3,10,-4,-8,7,-3,-3,-9,9,-3,10,10,5,1,3,7,-7,-2,10,-1,7,10,-2,-8,6,3,3,-8,-3,6,-6,-2,10,5,-3,8,10,-8,8,3,-9,-2,4,-3,-2,-2,1,-3,-9,4,-3,-4,2,-5,-9,-6,7,-1,1,7,-2,-2,-5,6,3,10,4,-1,5,9,-6,-2,-5,3,6,9,-9,3,-8,-9,-10,-9,2,-1,9,1,-4,-8,6,5,1,2,-5,-3,-3,-3,1,9,5,-10,-1,10,6,4,-1,-7,-3,2,1,10,-10,-1,9,6,-2,-8,9,-8,-10,-10,3,3,6,5,-3,-3,10,-3,4,4,-6,-8,-2,2,1,3,1,2,-3,5,2,8,4,2,9,-3,-10,-9,-9,6,-5,6,7,3,4,6,6,9,-5,7,1,-8,2,5,2,-5,-10,-5,10,-7,-4,2,6,9,4,-5,7,-8,-3,-2,4,-4,-10,-1,4,7,-2,-7,10,-2,-1,1,-2,-7,-2,2,8,-10,4,1,1,8,-6,-4,3,5,4,-2,-7,-3,-1,6,-2,2,-10,-6,10,6,8,-6,-7,7,-1,10,-9,8,10,1,-10,10,5,-3,-9,-5,-1,10,-6,-1,-5,4,6,5,-3,9,-1,-3,6,-5,5,2,3,-3,-8,-3,-5,-6,-8,-6,9,-4,6,-9,3,5,-2,-3,-10,3,3,8,2,9,-7,10,-2,-6,-2,-1,7,-5,5,-5,6,-5,-3,-7,9,6,2,-9,10,5,10,-9,1,7,1,5,9,4,-2,-8,6,-4,2,5,1,-4,-5,8,-6,-6,-7,2,-10,8,7,3,-4,4,-2,-7,-10,-6,5,-2,8,-6,8,1,-4,10,-8,7,-1,7,-9,-8,7,-5,-7,1,-5,-2,-7,-3,-3,4,-7,5,-9,1,9,8,-1,-6,10,-6,6,-9,3,4,6,-9,-7,1,9,8,1,-3,1,-3,-9,-7,8,-8,8,7,9,7,2,-6,9,-8,1,5,5,4,-8,10,7,-7,1,-8,-9,10,2,4,-9,-4,-6,-4,-6,6,9,9,4,-10,-1,-7,3,4,5,-1,-10,7,-3,-8,9,-2,-8,4,-1,8,3,2,5,3,6,6,-6,-2,4,-7,-4,3,4,-7,-2,-6,-2,-8,6,9,-5,8,8,2,1,-4,10,10,-5,-6,-2,1,-3,-3,10,1,-6,9,-8,-5,10,-6,1,2,-3,-2,-5,8,-1,4,-6,-1,3,-8,10,-2,5,1,-3,1,-3,10,-7,5,3,3,4,2,3,10,3,2,-9,-5,5,-8,-2,-8,1,9,3,-1,-6,-8,-3,10,8,6,-6,10,9,-4,10,-10,-7,3,10,1,-9,5,-5,7,-9,-3,-6,-8,2,-5,-6,-1,3,5,10,-9,2,10,-1,3,2,6,-8,4,-8,2,2,-9,9,-10,7,-7,-5,6,-6,5,4,7,-8,2,9,-2,-9,-8,4,-7,-7,-9,1,-8,6,-4,-7,-2,3,-2,10,-3,-6,7,-9,8,1,10,-5,-9,-2,-1,6,-3,-9,-9,-1,-8,-5,7,-3,2,4,-4,-8,2,-5,-8,-10,10,-8,-8,3,-7,5,2,1,-10,8,6,8,-6,2,-6,9,-2,4,7,8,-6,8,-10,6,5,-5,-9,-8,-8,1,5,-9,-6,-8,2,6,10,-10,6,2,7,10,-2,1,3,3,3,-4,7,-1,-8,9,-5,-10,-4,-2,-2,6,-3,4,-2,-5,-1,1,10,8,-3,10,7,-8,-4,3,3,2,10,-5,4,-5,-8,4,-10,-8,1,-2,-7,3,-1,7,-8,3,4,-8,5,-3,10,10,10,-5,-5,-1,-7,2,-1,-3,8,4,-3,8,6,10,-9,-9,8,1,-3,4,9,10,-6,8,1,4,6,2,7,1,-2,-6,8,-4,2,-3,-5,-2,7,5,-5,10,2,7,-1,5,1,-4,1,-2,-7,5,-7,2,-10,-10,5,8,1,7,6,-7,-3,7,-10,-6,-1,6,-1,-2,5,-6,3,8,-1,-7,-6,5,-5,3,1,-10,-2,2,7,4,7,4,6,-3,-6,-6,-5,2,-3,-3,6,-7,-2,-2,3,2,-8,2,-6,-2,5,5,-9,10,-1,6,-6,8,10,-6,-7,-4,5,-10,-1,3,2,-8,6,3,-10,-7,-2,4,-4,-6,1,6,6,-6,10,-4,9,3,9,3,5,-8,4,8,6,-8,5,-2,-2,9,8,-4,7,-2,-1,8,6,4,9,9,7,-2,-3,-5,-3,-9,-10,-9,8,5,-8,-7,10,8,3,-5,-7,5,1,7,6,4,8,-5,5,-10,-7,-1,8,8,-7,4,-2,-3,2,-7,-7,6,-4,-6,5,4,-2,-8,-2,-4,1,-2,8,8,-7,-8,-5,4,9,10,3,-5,7,-5,-2,-10,6,8,7,-4,2,-3,-10,8,-6,-1,-2,-3,-2,10,9,6,3,-1,-1,-7,9,-10,6,8,8,-10,-8,1,-5,-1,-2,10,-3,6,-8,-9,-2,5,8,-9,-5,-7,3,-10,-9,-3,-9,4,3,-8,-2,7,-5,-3,8,-9,2,3,-6,-4,-3,5,9,4,1,3,6,-7,-6,3,-4,-6,-10,10,3,10,10,-8,7,2,-3,-1,-7,-1,1,-7,-6,-9,-6,-2,-4,5,-8,-4,-6,-2,3,9,2,-3,3,5,-4,8,5,9,4,7,8,6,-10,-2,-10,1,2,-4,-5,-6,5,-1,6,2,-5,-2,10,4,6,3,8,9,-9,6,-2,-4,-8,7,-4,-4,8,1,-5,8,-2,9,-4,-9,3,-6,10,2,-5,-2,10,10,-3,5,-6,1,-3,-8,-9,1,-4,7,-9,10,1,-4,9,6,7,-1,-4,10,3,6,7,-5,6,-5,-2,8,-10,-4,-8,-2,-10,9,7,3,9,5,-9,-7,2,-10,10,10,2,-8,4,7,-6,10,-8,-7,-6,-1,1,-2,3,-1,-9,10,7,-6,-1,-5,-1,-2,9,4,-10,-10,4,-5,-3,-9,-9,8,10,-7,6,7,8,-6,7,-4,-4,7,8,6,-10,6,5,-7,7,-5,-5,-2,-10,-10,6,-3,8,-2,-5,10,5,-7,1,5,-8,-2,-1,-4,1,-9,9,1,3,6,2,-5,1,7,-8,9,-3,8,3,6,-7,-5,6,-6,9,-8,7,8,-7,-9,7,10,-8,5,-2,9,5,-8,10,-1,7,8,3,1,2,7,-9,-1,-7,2,7,-1,-7,-5,-4,-4,6,-4,-9,-10,-6,-2,6,-5,2,-4,-1,3,-5,-3,-3,-9,-10,-7,-7,-9,6,9,-5,-6,-4,-5,-7,-4,-7,1,-5,-10,-3,-1,-5,-5,-2,-2,-1,-3,1,1,-6,-10,2,-4,4,-2,-2,7,-5,-8,-9,3,1,4,-4,1,9,-7,-5,-10,7,-5,-4,6,-7,6,5,3,-5,-1,3,3,3,5,-10,-8,6,6,6,-9,6,-6,-5,10,-9,9,3,3,1,-6,4,8,7,-2,-7,5,-8,-6,-1,3,7,1,-3,6,4,-4,5,-2,9,-5,-7,-2,3,-8,-4,6,2,-3,-2,10,2,8,-10,-2,-4,-7,-9,-8,7,-9,-6,6,2,4,8,-2,1,-10,10,-2,-10,7,-8,-4,-10,9,5,5,-5,-1,-6,3,-5,-10,4,-1,-1,-4,5,7,10,-3,-1,4,9,7,10,-5,-5,-10,-7,3,-9,-10,-6,2,-10,1,-5,-7,2,-2,-4,-5,-1,7,-6,-7,-9,1,-1,3,8,-5,9,-9,-6,3,-7,-10,-5,-6,9,-8,-10,8,-2,5,5,4,3,-6,6,10,8,-2,9,4,3,10,2,7,7,5,3,5,-7,-7,-10,6,7,1,-8,-5,8,6,-3,4,-6,-1,10,-7,7,-8,8,-5,4,2,2,4,-5,9,-5,6,-2,10,-3,9,-8,-8,-4,5,10,9,7,3,-6,-9,-5,-2,-2,-1,9,6,10,8,-7,-10,-10,-1,4,10,6,1,-4,8,-7,-2,10,6,2,-4,4,-7,4,-3,2,10,-3,-9,6,-3,-8,-9,-3,-8,6,-7,7,7], dtype = "int64")#candidate|4530|(1568,)|const|int64
call_4529 = relay.TupleGetItem(func_3779_call(relay.reshape(const_4530.astype('int64'), [1568,])), 0)
call_4531 = relay.TupleGetItem(func_3781_call(relay.reshape(const_4530.astype('int64'), [1568,])), 0)
func_3126_call = mod.get_global_var('func_3126')
func_3128_call = mutated_mod.get_global_var('func_3128')
call_4543 = relay.TupleGetItem(func_3126_call(), 0)
call_4544 = relay.TupleGetItem(func_3128_call(), 0)
func_1524_call = mod.get_global_var('func_1524')
func_1526_call = mutated_mod.get_global_var('func_1526')
call_4545 = relay.TupleGetItem(func_1524_call(), 1)
call_4546 = relay.TupleGetItem(func_1526_call(), 1)
func_1683_call = mod.get_global_var('func_1683')
func_1684_call = mutated_mod.get_global_var('func_1684')
call_4561 = func_1683_call()
call_4562 = func_1683_call()
uop_4579 = relay.rsqrt(call_4561.astype('float32')) # shape=(10, 14, 2)
uop_4581 = relay.rsqrt(call_4562.astype('float32')) # shape=(10, 14, 2)
output = relay.Tuple([call_4510,call_4529,const_4530,call_4543,call_4545,uop_4579,])
output2 = relay.Tuple([call_4511,call_4531,const_4530,call_4544,call_4546,uop_4581,])
func_4584 = relay.Function([], output)
mod['func_4584'] = func_4584
mod = relay.transform.InferType()(mod)
mutated_mod['func_4584'] = func_4584
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4584_call = mutated_mod.get_global_var('func_4584')
call_4585 = func_4584_call()
output = call_4585
func_4586 = relay.Function([], output)
mutated_mod['func_4586'] = func_4586
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1758_call = mod.get_global_var('func_1758')
func_1760_call = mutated_mod.get_global_var('func_1760')
call_4589 = relay.TupleGetItem(func_1758_call(), 2)
call_4590 = relay.TupleGetItem(func_1760_call(), 2)
output = call_4589
output2 = call_4590
func_4600 = relay.Function([], output)
mod['func_4600'] = func_4600
mod = relay.transform.InferType()(mod)
output = func_4600()
func_4601 = relay.Function([], output)
mutated_mod['func_4601'] = func_4601
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3126_call = mod.get_global_var('func_3126')
func_3128_call = mutated_mod.get_global_var('func_3128')
call_4679 = relay.TupleGetItem(func_3126_call(), 0)
call_4680 = relay.TupleGetItem(func_3128_call(), 0)
func_2090_call = mod.get_global_var('func_2090')
func_2095_call = mutated_mod.get_global_var('func_2095')
const_4695 = relay.const([-7,2,-4,8,2,6,-2,5,-10,-6,-4,8,4,4,-1,-10,1,8,4,9,-5,-6,-6,8,7,-1,-8,9,-5,3,-3,6,6,-3,-1,6,9,-4,3,3,7,-3,2,-9,2,-7,-5,-2,7,1,10,-4,7,6,-10,-4,-2,2,-6,3,2,-2,10,-10,-9,-5,-6,10,6,7,-2,3,-5,-7,7,-6,9,8,4,-8,-6,-4,3,8,-7,-7,4,-4,-6,-8,1,2,4,3,7,-2,6,7,-9,1,10,6,10,4,1,9,-8,5,-2,-3,-10,3,-1,9,7,-8,10,4,-4,-5,2,10,-6,5,1,-10,1,1,6,-1,-10,4,3,-7,6,-5,-8,10,9,-6,1,3,9,-5,-6,8,7,5,9,10,-5,-6,9,-9,-1,-1,10,8,10,2,4,-1,3,-5,-7,10,2,-7,3,-1,2,1,-6,9,4,1,1,-9,7,9,-10,7,4,-3,1,-3,6,5,5,-7,5,-7,1,3,1,-3,10,1,8,-2,9,-2,-1,4,-10,5,10,-2,-9,8,-8,10,-3,-3,-6,9,-2,8,-9,1,5,7,-7,6,-5,-5,7,10,-6,-2,7,6,6,3,8,7,2,-1,-2,-7,3,-9,-9,2,-1,8,8,5,9,1,4,1,9,-6,-8,9,5,4,8,-9,-2,5,2,6,-2,1,5,3,-3,-7,2,-4,8,2,4,5,8,-10,1,-4,-2,-10,-6,-1,2,1,7,-2,5,-9,5,7,-5,6,2,1,-6,1,6,2,-3,3,-10,3,6,4,-7,7,-9,-9,4,7,3,-1,-3,6,-5,5,3,-1,-1,2,-8,-1,-1,-10,-2,-2,-4,-3,-5,-2,-7,6,-5,9,-1,-6,-10,-8,9,6,2,8,3,4,2,6,10,-9,8,1,-1,-10,5,-1,-5,-10,7,4,1,5,1,3,3,8,-10,-1,-7,-1,1,9,-1,3,-6,5,5,1,3,-9,5,-10,-8,7,3,10,-4,-8,-7,-10,-7,2,-6,10,-8,6,10,-2,8,-6,9,-5,-4,-7,-5,3,3,6,2,-1,-6,-6,4,5,-9,-4,-6,3,-3,8,-9,-2,10,-6,-5,-3,-3,-9,8,8,4,8,-1,7,-3,-4,8,7,-5,10,-7,4,3,6,7,1,-7,1,-1,-6,5,-7,7,3,-8,-5,-6,-6,10,2,-7,9,1,-6,8,7,1,8,-9,-9,6,3,-2,-2,-10,-10,-7,-4,8,-3,1,4,5,7,5,-2,-1,2,1,-6,8,9,-4,4,-3,10,6,-6,-6,-6,1,1,-10,-5,-8,-3,6,2,8,-2,4,5,-6,10,3,4,-3,-8,-9,-5,4,3,-3,-10,2,2,-5,-5,-9,4,2,-10,6,-9,10,4,-3,4,4,7,-7,4,-9,5,-8,1,-9,-5,6,-10,8,-2,2,7,1,4,4,-10,-8,10,-3,4,-10,9,-4,4,-4,3,2,2,5,-3,-3,-1,-7,-7,-9,-4,-1,-9,-3,-9,9,1,-3,7,10,-6,-5,3,5,4,-10,-7,3,-8,-8,3,8,-9], dtype = "uint8")#candidate|4695|(600,)|const|uint8
call_4694 = relay.TupleGetItem(func_2090_call(relay.reshape(const_4695.astype('uint8'), [5, 10, 12]), relay.reshape(const_4695.astype('uint8'), [5, 10, 12]), relay.reshape(const_4695.astype('uint8'), [5, 10, 12]), relay.reshape(const_4695.astype('uint8'), [5, 10, 12]), ), 1)
call_4696 = relay.TupleGetItem(func_2095_call(relay.reshape(const_4695.astype('uint8'), [5, 10, 12]), relay.reshape(const_4695.astype('uint8'), [5, 10, 12]), relay.reshape(const_4695.astype('uint8'), [5, 10, 12]), relay.reshape(const_4695.astype('uint8'), [5, 10, 12]), ), 1)
output = relay.Tuple([call_4679,call_4694,const_4695,])
output2 = relay.Tuple([call_4680,call_4696,const_4695,])
func_4703 = relay.Function([], output)
mod['func_4703'] = func_4703
mod = relay.transform.InferType()(mod)
mutated_mod['func_4703'] = func_4703
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4703_call = mutated_mod.get_global_var('func_4703')
call_4704 = func_4703_call()
output = call_4704
func_4705 = relay.Function([], output)
mutated_mod['func_4705'] = func_4705
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2687_call = mod.get_global_var('func_2687')
func_2689_call = mutated_mod.get_global_var('func_2689')
call_4781 = relay.TupleGetItem(func_2687_call(), 1)
call_4782 = relay.TupleGetItem(func_2689_call(), 1)
func_1306_call = mod.get_global_var('func_1306')
func_1310_call = mutated_mod.get_global_var('func_1310')
var_4788 = relay.var("var_4788", dtype = "float64", shape = (660,))#candidate|4788|(660,)|var|float64
var_4789 = relay.var("var_4789", dtype = "float32", shape = (1365,))#candidate|4789|(1365,)|var|float32
call_4787 = relay.TupleGetItem(func_1306_call(relay.reshape(var_4788.astype('float64'), [10, 6, 11]), relay.reshape(var_4789.astype('float32'), [1365,]), relay.reshape(var_4789.astype('float32'), [15, 13, 7]), ), 1)
call_4790 = relay.TupleGetItem(func_1310_call(relay.reshape(var_4788.astype('float64'), [10, 6, 11]), relay.reshape(var_4789.astype('float32'), [1365,]), relay.reshape(var_4789.astype('float32'), [15, 13, 7]), ), 1)
output = relay.Tuple([call_4781,call_4787,var_4788,var_4789,])
output2 = relay.Tuple([call_4782,call_4790,var_4788,var_4789,])
func_4816 = relay.Function([var_4788,var_4789,], output)
mod['func_4816'] = func_4816
mod = relay.transform.InferType()(mod)
var_4817 = relay.var("var_4817", dtype = "float64", shape = (660,))#candidate|4817|(660,)|var|float64
var_4818 = relay.var("var_4818", dtype = "float32", shape = (1365,))#candidate|4818|(1365,)|var|float32
output = func_4816(var_4817,var_4818,)
func_4819 = relay.Function([var_4817,var_4818,], output)
mutated_mod['func_4819'] = func_4819
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3008_call = mod.get_global_var('func_3008')
func_3009_call = mutated_mod.get_global_var('func_3009')
call_4827 = relay.TupleGetItem(func_3008_call(), 0)
call_4828 = relay.TupleGetItem(func_3009_call(), 0)
output = call_4827
output2 = call_4828
func_4848 = relay.Function([], output)
mod['func_4848'] = func_4848
mod = relay.transform.InferType()(mod)
mutated_mod['func_4848'] = func_4848
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4848_call = mutated_mod.get_global_var('func_4848')
call_4849 = func_4848_call()
output = call_4849
func_4850 = relay.Function([], output)
mutated_mod['func_4850'] = func_4850
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3054_call = mod.get_global_var('func_3054')
func_3055_call = mutated_mod.get_global_var('func_3055')
call_4911 = relay.TupleGetItem(func_3054_call(), 0)
call_4912 = relay.TupleGetItem(func_3055_call(), 0)
func_2974_call = mod.get_global_var('func_2974')
func_2978_call = mutated_mod.get_global_var('func_2978')
var_4923 = relay.var("var_4923", dtype = "uint32", shape = (6, 28))#candidate|4923|(6, 28)|var|uint32
const_4924 = relay.const([10,-3,-3,9,-3,6,-10,10,-1,9,1,-3,6,-5,1,-5,9,-3,-2,-2,3,-5,-6,6,1,3,5,5,5,-2,-8,-9,-6,-1,5,3,1,1,-5,3,4,10,-1,3,-2,4,3,-7,6,-9,-9,-6,-2,-8,-4,3,-8,-7,5,-6,-4,-7,4,6,-1,-10,9,3,-5,-6,-5,-8,1,3,-7,5,1,-8,7,6,1,10,-2,-1,5,7,-6,2,-10,7,6,-9,-5,4,5,2,4,7,-7,4,-6,2,3,1,-9,-3,10,3,-10,-1,-5,-10,7,8,6,7,-10,-3,-1,8,-3,-6,-10,-10,4,-5,4,-1,-5,-6,8,4,-2,-10,-1,4,7,9,-9,-10,-2,-3,2,-9,2,9,-1,-7,-10,-8,7,-7,4,-4,8,-5,10,-7,1,-1,-5,4,-5,-9,-9,-8,-10,1,-4,6,-8,2,-8,-2,7,3,-6,-8,-7,-8,5,-3,2,1,-10,7,6,7,8,-3,3,-7,-1,9,-1,4,-2,2,-2,9,-10,1,-8,9,6,-5,6,-7,6,-6,-3,-6,1,9,1,-5,-8,6,-5,-4,-5,-1,10,1,-3,6,9,-1,9,4,-9,10,7,3,-1,2,-5,-8,-10,2,7,-3,9,-7,-5,-8,-1,-2,-4,-8,-4,-10,5,6,10,3,8,-4,-10,-5,1,1,-10,8,-10,1,-1,2,3,-3,10,8,2,6,2,-8,3,-3,-2,10,-1,5,2,-6,-7,-5,5,-6,-5,8,4,-10,-5,1,-6,-1,-10,7,-4,-6,-3,10,6,4,8,9,-10,-8,-2,6,2,4,-2,5,-7,-8,1,10,-6,9,8,6,6,5,-7,-7,8,10,-6,7,5,4,5,-1,10,-7,-9,8,-8,-5,-6,3,-8,6,-7,5,-10,8,-5,-8,-1,3,7,5,-6,10,7,-6,6,6,4,-5,-4,-2,4,-6,-5,4,10,-7,4,-8,1,-3,-3,2,4,-2,2,7,-1,10,-2,8,-8,10,-2,-2,-10,2,5,3,-3,8,-6,-3,10,5,-2,5,9,1,-4,6,7,9,4,-1,-6,4,6,1,3,-9,2,-4,-9,-2,-5,7,8,3,-10,3,-5,-6,-6,-8,-6,3,-1,8,-9,5,1,-5,-9,-3,5,3,-2,-3,-9,-7,-8,-2,5,-10,-10,-10,8,8,-4,-6,-6,10,-1,6,4,4,4,-2,6,5,9,-5,-1,-4,-5,-5,-3,-8,-6,4,-8,1,-4,10,6,-4,-1,2,1,8,-8,8,7,-6,10,4,-8,-9,1,2,7,2,4,-1,-2,2,3,3,-6,7,-9,-4,-8,-9,4,-6,-7,8,-4,6,-7,6,-8,2,-8,-10,9,-3,-8,-8,4,-3,4,-2,-2,4,9,-9,-1,-1,-9,-7,4,7,-4,6,9,-1,-5,-3,5,4,9,1,6,10,-2,6,-9,-1,8,-3,9,1,-8,8,-2,-7,10,1,-1,-3,-8,-2,2,9,9,6,-5,3,-3,-7,5,-6,-6,-1,7,-2,1,-1,-5,2,2,3,8,1,7,6,5,-7,8,8,9,2,1,-4], dtype = "uint8")#candidate|4924|(600,)|const|uint8
var_4925 = relay.var("var_4925", dtype = "float64", shape = (660,))#candidate|4925|(660,)|var|float64
call_4922 = relay.TupleGetItem(func_2974_call(relay.reshape(var_4923.astype('uint32'), [168,]), relay.reshape(const_4924.astype('uint8'), [600,]), relay.reshape(var_4925.astype('float64'), [10, 66]), ), 4)
call_4926 = relay.TupleGetItem(func_2978_call(relay.reshape(var_4923.astype('uint32'), [168,]), relay.reshape(const_4924.astype('uint8'), [600,]), relay.reshape(var_4925.astype('float64'), [10, 66]), ), 4)
func_2578_call = mod.get_global_var('func_2578')
func_2579_call = mutated_mod.get_global_var('func_2579')
call_4959 = relay.TupleGetItem(func_2578_call(), 0)
call_4960 = relay.TupleGetItem(func_2579_call(), 0)
func_1758_call = mod.get_global_var('func_1758')
func_1760_call = mutated_mod.get_global_var('func_1760')
call_4977 = relay.TupleGetItem(func_1758_call(), 3)
call_4978 = relay.TupleGetItem(func_1760_call(), 3)
output = relay.Tuple([call_4911,call_4922,var_4923,const_4924,var_4925,call_4959,call_4977,])
output2 = relay.Tuple([call_4912,call_4926,var_4923,const_4924,var_4925,call_4960,call_4978,])
func_4980 = relay.Function([var_4923,var_4925,], output)
mod['func_4980'] = func_4980
mod = relay.transform.InferType()(mod)
var_4981 = relay.var("var_4981", dtype = "uint32", shape = (6, 28))#candidate|4981|(6, 28)|var|uint32
var_4982 = relay.var("var_4982", dtype = "float64", shape = (660,))#candidate|4982|(660,)|var|float64
output = func_4980(var_4981,var_4982,)
func_4983 = relay.Function([var_4981,var_4982,], output)
mutated_mod['func_4983'] = func_4983
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5044 = relay.var("var_5044", dtype = "float64", shape = (6, 11, 13))#candidate|5044|(6, 11, 13)|var|float64
uop_5045 = relay.log(var_5044.astype('float64')) # shape=(6, 11, 13)
func_2890_call = mod.get_global_var('func_2890')
func_2893_call = mutated_mod.get_global_var('func_2893')
var_5052 = relay.var("var_5052", dtype = "float32", shape = (144,))#candidate|5052|(144,)|var|float32
call_5051 = relay.TupleGetItem(func_2890_call(relay.reshape(var_5052.astype('float32'), [16, 9])), 0)
call_5053 = relay.TupleGetItem(func_2893_call(relay.reshape(var_5052.astype('float32'), [16, 9])), 0)
func_2840_call = mod.get_global_var('func_2840')
func_2842_call = mutated_mod.get_global_var('func_2842')
call_5056 = relay.TupleGetItem(func_2840_call(relay.reshape(var_5052.astype('float64'), [8, 9, 2])), 0)
call_5057 = relay.TupleGetItem(func_2842_call(relay.reshape(var_5052.astype('float64'), [8, 9, 2])), 0)
uop_5059 = relay.sqrt(uop_5045.astype('float64')) # shape=(6, 11, 13)
var_5075 = relay.var("var_5075", dtype = "float64", shape = (6, 11, 13))#candidate|5075|(6, 11, 13)|var|float64
bop_5076 = relay.divide(uop_5059.astype('float32'), relay.reshape(var_5075.astype('float32'), relay.shape_of(uop_5059))) # shape=(6, 11, 13)
output = relay.Tuple([call_5051,var_5052,call_5056,bop_5076,])
output2 = relay.Tuple([call_5053,var_5052,call_5057,bop_5076,])
func_5081 = relay.Function([var_5044,var_5052,var_5075,], output)
mod['func_5081'] = func_5081
mod = relay.transform.InferType()(mod)
var_5082 = relay.var("var_5082", dtype = "float64", shape = (6, 11, 13))#candidate|5082|(6, 11, 13)|var|float64
var_5083 = relay.var("var_5083", dtype = "float32", shape = (144,))#candidate|5083|(144,)|var|float32
var_5084 = relay.var("var_5084", dtype = "float64", shape = (6, 11, 13))#candidate|5084|(6, 11, 13)|var|float64
output = func_5081(var_5082,var_5083,var_5084,)
func_5085 = relay.Function([var_5082,var_5083,var_5084,], output)
mutated_mod['func_5085'] = func_5085
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5095 = relay.var("var_5095", dtype = "float32", shape = (9, 12, 10))#candidate|5095|(9, 12, 10)|var|float32
uop_5096 = relay.cosh(var_5095.astype('float32')) # shape=(9, 12, 10)
uop_5107 = relay.log10(uop_5096.astype('float32')) # shape=(9, 12, 10)
uop_5116 = relay.tan(uop_5107.astype('float32')) # shape=(9, 12, 10)
var_5121 = relay.var("var_5121", dtype = "float32", shape = (9, 12, 10))#candidate|5121|(9, 12, 10)|var|float32
bop_5122 = relay.not_equal(uop_5107.astype('bool'), relay.reshape(var_5121.astype('bool'), relay.shape_of(uop_5107))) # shape=(9, 12, 10)
uop_5127 = relay.rsqrt(uop_5107.astype('float32')) # shape=(9, 12, 10)
func_3933_call = mod.get_global_var('func_3933')
func_3936_call = mutated_mod.get_global_var('func_3936')
var_5161 = relay.var("var_5161", dtype = "float64", shape = (576,))#candidate|5161|(576,)|var|float64
call_5160 = relay.TupleGetItem(func_3933_call(relay.reshape(var_5161.astype('float64'), [12, 12, 4])), 2)
call_5162 = relay.TupleGetItem(func_3936_call(relay.reshape(var_5161.astype('float64'), [12, 12, 4])), 2)
func_4378_call = mod.get_global_var('func_4378')
func_4380_call = mutated_mod.get_global_var('func_4380')
call_5168 = relay.TupleGetItem(func_4378_call(), 1)
call_5169 = relay.TupleGetItem(func_4380_call(), 1)
output = relay.Tuple([uop_5116,bop_5122,uop_5127,call_5160,var_5161,call_5168,])
output2 = relay.Tuple([uop_5116,bop_5122,uop_5127,call_5162,var_5161,call_5169,])
func_5170 = relay.Function([var_5095,var_5121,var_5161,], output)
mod['func_5170'] = func_5170
mod = relay.transform.InferType()(mod)
mutated_mod['func_5170'] = func_5170
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5170_call = mutated_mod.get_global_var('func_5170')
var_5172 = relay.var("var_5172", dtype = "float32", shape = (9, 12, 10))#candidate|5172|(9, 12, 10)|var|float32
var_5173 = relay.var("var_5173", dtype = "float32", shape = (9, 12, 10))#candidate|5173|(9, 12, 10)|var|float32
var_5174 = relay.var("var_5174", dtype = "float64", shape = (576,))#candidate|5174|(576,)|var|float64
call_5171 = func_5170_call(var_5172,var_5173,var_5174,)
output = call_5171
func_5175 = relay.Function([var_5172,var_5173,var_5174,], output)
mutated_mod['func_5175'] = func_5175
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5184 = relay.var("var_5184", dtype = "int32", shape = (15, 6, 16))#candidate|5184|(15, 6, 16)|var|int32
var_5185 = relay.var("var_5185", dtype = "int32", shape = (15, 6, 16))#candidate|5185|(15, 6, 16)|var|int32
bop_5186 = relay.subtract(var_5184.astype('int32'), relay.reshape(var_5185.astype('int32'), relay.shape_of(var_5184))) # shape=(15, 6, 16)
func_5170_call = mod.get_global_var('func_5170')
func_5175_call = mutated_mod.get_global_var('func_5175')
var_5192 = relay.var("var_5192", dtype = "float32", shape = (1080,))#candidate|5192|(1080,)|var|float32
const_5193 = relay.const([[0.558118,4.982099],[1.492384,-8.556113],[-1.788400,2.032023],[2.644620,-4.722864],[-6.848552,-6.869377],[1.763247,-3.218570],[5.642051,9.325114],[7.953110,-9.952131],[6.038447,5.610406],[-1.196271,2.163360],[7.962184,-8.883106],[4.200484,0.409723],[3.008451,-1.293475],[-0.108205,-1.510420],[7.315255,9.402215],[-0.593420,0.930498],[-7.270063,7.250569],[-5.034873,5.611306],[2.437178,-8.119021],[-6.055793,-6.159093],[3.689892,5.795675],[9.810875,-0.182662],[8.054295,7.649007],[8.157750,1.796639],[7.572290,-3.456348],[5.569527,-5.416750],[2.630127,4.936583],[-4.995113,7.357775],[4.769407,7.301759],[-6.678962,2.724136],[2.542363,-3.456621],[4.489063,-2.219321],[-4.096208,-9.757640],[7.291841,-4.096647],[9.452472,-7.540800],[5.688904,-6.851529],[-9.626622,-7.156386],[2.496895,-4.600561],[-6.288861,6.425095],[-9.478004,9.627405],[-9.937863,-0.216323],[-3.835431,8.651120],[9.354806,2.390889],[9.228495,0.821220],[6.954066,2.375321],[3.270473,2.909908],[-8.955345,9.552388],[0.645920,0.562016],[-9.839143,2.564408],[-5.824126,-9.750272],[-2.202177,-9.256031],[4.067705,-8.102214],[8.906454,8.175112],[6.700598,4.360877],[0.227604,5.257958],[6.344327,5.352173],[-5.566894,-5.590885],[2.801328,-7.271319],[-8.754566,9.952254],[-7.592516,-7.343586],[4.041242,-0.714609],[-4.688547,-9.370556],[-2.832586,-8.460303],[-0.438792,3.012332],[-8.625496,8.549012],[4.322834,-6.982139],[2.097858,9.576597],[4.680143,9.785514],[-5.437375,1.231300],[2.176458,-2.928480],[5.447670,5.486827],[-5.439050,5.748002],[-4.924389,-1.520735],[-1.085281,3.333399],[0.148878,-1.514050],[-3.334278,8.260330],[8.078935,-2.548272],[6.088531,6.011679],[1.316466,-9.196600],[6.956066,0.532456],[5.306073,2.587611],[-7.656221,3.901867],[-5.150546,-5.796044],[7.880233,5.785130],[-9.464791,-1.162798],[-4.596991,5.882295],[-0.156861,-2.755939],[8.134494,-7.903580],[7.001490,-2.521434],[-0.012093,8.368874],[2.490292,-5.767991],[-2.035310,-6.541585],[7.266479,-7.780847],[-0.194614,0.406674],[7.762695,-5.494715],[6.047637,5.260707],[0.122753,-3.870443],[1.984385,-2.580552],[8.765071,-2.312074],[-2.444454,4.999158],[2.918642,3.540758],[9.371871,-5.316861],[-3.574083,1.016598],[6.637783,5.220359],[-6.550121,3.539455],[4.582688,1.897729],[-8.875546,-2.974563],[-8.096881,-8.368648],[3.267669,1.546073],[-5.831466,-3.724498],[-1.692395,9.214068],[-4.685508,-9.663207],[-9.935804,1.165983],[7.983455,3.848752],[-5.881862,-5.174159],[7.995600,-9.766874],[1.819730,2.372379],[1.464990,-1.340761],[7.983228,-3.663819],[-2.908724,-9.038844],[-7.517603,0.172679],[-9.981121,5.670832],[-6.880273,5.973757],[-6.824109,1.798611],[6.730108,8.214104],[-9.902033,1.084349],[4.143283,7.569240],[-5.808005,5.167481],[7.458027,8.571900],[1.310570,-5.938197],[-9.396458,1.724418],[3.678140,-5.585820],[4.539070,-0.128700],[-6.337043,9.689819],[5.258795,3.033325],[-4.541300,-5.681282],[4.195459,-3.937772],[-8.333308,0.920529],[-0.316613,2.654791],[5.946311,3.979766],[8.811748,-8.371299],[2.382377,-6.230865],[-3.211746,-6.456237],[-6.975816,0.129988],[-7.626660,-3.565427],[-5.080994,-1.770204],[-1.190834,7.909786],[6.148590,-3.775841],[-1.218531,-3.152090],[-2.034360,-2.221017],[0.393359,9.302418],[8.935724,8.234938],[-0.307319,-9.641675],[9.610187,-9.004719],[-2.052330,1.247647],[-6.526063,-7.330861],[-5.336391,-5.011590],[6.166856,-2.422520],[2.488364,-8.899296],[-3.437267,5.536456],[7.605893,1.241574],[-3.410439,-4.454806],[3.898407,-2.381845],[9.662031,-9.040593],[-5.764810,-3.592206],[7.880676,-0.566109],[6.330089,9.622931],[-2.389255,-1.172993],[-1.834170,1.175188],[7.073502,4.315075],[6.232652,-1.752396],[7.456706,9.219269],[9.985405,0.637647],[-9.102324,-2.812241],[3.644744,5.294653],[-6.423374,3.516177],[4.556515,4.332527],[8.783157,-5.277799],[-3.709828,7.420259],[9.866516,9.978854],[7.397862,-3.007678],[-4.717954,6.638807],[-5.812904,-7.937558],[-5.214048,-2.483525],[-2.416586,0.834856],[-5.527580,-0.456173],[-7.629807,-7.518056],[-2.153419,0.155109],[3.638091,6.531890],[-5.773041,9.994011],[8.735142,7.957304],[5.788358,-4.139621],[8.417092,7.558679],[8.644745,-3.731825],[-2.060194,4.980300],[4.113188,-3.011924],[-0.719871,-8.278919],[-5.759427,-4.396955],[3.491599,5.831612],[0.838045,-3.784085],[6.188666,-6.068415],[-3.675041,1.047052],[-2.330802,7.298951],[7.240889,-1.739119],[-4.858835,-9.669609],[-6.415721,-3.409063],[-7.034351,-7.688818],[3.551005,-7.428086],[4.894276,9.532069],[5.115357,-5.674873],[-4.268854,5.080493],[7.267867,6.124573],[8.990834,-2.104039],[-4.863169,5.487354],[-4.888635,-6.535587],[4.768838,2.051908],[-0.156897,-1.483924],[5.232454,7.860184],[-3.857932,5.169325],[-9.094136,5.644156],[-1.487815,9.864322],[0.169112,3.855024],[-2.988517,5.037534],[-4.034574,-1.562876],[-5.245082,-8.563897],[7.183071,1.620282],[0.560767,7.357011],[1.351635,6.672137],[-7.704961,2.275796],[1.242289,-0.142339],[-2.206557,7.986455],[-6.360922,5.531894],[-2.151581,-0.130680],[6.045224,-7.807576],[-1.528926,-5.755722],[-2.367708,5.793322],[-9.070550,-2.666208],[1.300828,-4.814860],[2.186849,-4.145905],[8.631546,-2.529839],[8.615214,-1.867489],[-4.911467,6.472047],[-9.999879,-1.368847],[7.408598,-8.441199],[-8.634433,-9.481371],[8.421350,-9.708635],[-3.340690,-3.462485],[-6.406195,-9.985756],[8.734361,1.111385],[5.325984,-4.188128],[-0.654249,-6.506661],[-2.654777,-8.378002],[-7.032692,-5.938325],[3.583550,-0.198022],[3.065195,8.420154],[9.996003,7.670694],[-7.632590,-5.895342],[-1.891012,-2.228944],[4.127001,-7.017104],[0.809425,4.355296],[5.160680,9.540325],[-6.553776,4.140491],[-0.478798,4.593739],[-2.192018,-1.660786],[1.531875,-8.388904],[8.639462,9.083068],[6.417999,-6.883468],[-9.911190,-6.097174],[9.051850,-8.563532],[8.158646,4.690152],[-1.230365,1.994504],[8.809207,-5.000119],[-8.653092,-4.942170],[5.773815,4.907030],[-7.636218,5.750475],[5.001665,-1.335705],[4.436850,-8.108600],[-8.506516,-7.217705],[-1.643707,9.395232],[5.914054,9.377579],[-2.171598,3.996084],[9.594336,4.245844],[-2.364345,-1.928655],[-1.119896,-6.483270],[6.775986,9.210893],[-7.776271,-4.602676],[6.136514,-1.147019],[5.850647,1.528831]], dtype = "float64")#candidate|5193|(288, 2)|const|float64
call_5191 = relay.TupleGetItem(func_5170_call(relay.reshape(var_5192.astype('float32'), [9, 12, 10]), relay.reshape(var_5192.astype('float32'), [9, 12, 10]), relay.reshape(const_5193.astype('float64'), [576,]), ), 1)
call_5194 = relay.TupleGetItem(func_5175_call(relay.reshape(var_5192.astype('float32'), [9, 12, 10]), relay.reshape(var_5192.astype('float32'), [9, 12, 10]), relay.reshape(const_5193.astype('float64'), [576,]), ), 1)
uop_5222 = relay.acosh(bop_5186.astype('float32')) # shape=(15, 6, 16)
uop_5224 = relay.tan(uop_5222.astype('float64')) # shape=(15, 6, 16)
uop_5249 = relay.log10(uop_5224.astype('float32')) # shape=(15, 6, 16)
bop_5254 = relay.bitwise_or(uop_5249.astype('int32'), relay.reshape(var_5184.astype('int32'), relay.shape_of(uop_5249))) # shape=(15, 6, 16)
bop_5259 = relay.multiply(uop_5222.astype('int8'), relay.reshape(bop_5186.astype('int8'), relay.shape_of(uop_5222))) # shape=(15, 6, 16)
func_1758_call = mod.get_global_var('func_1758')
func_1760_call = mutated_mod.get_global_var('func_1760')
call_5266 = relay.TupleGetItem(func_1758_call(), 0)
call_5267 = relay.TupleGetItem(func_1760_call(), 0)
uop_5269 = relay.asin(uop_5224.astype('float64')) # shape=(15, 6, 16)
func_74_call = mod.get_global_var('func_74')
func_77_call = mutated_mod.get_global_var('func_77')
var_5272 = relay.var("var_5272", dtype = "float32", shape = (1365,))#candidate|5272|(1365,)|var|float32
call_5271 = relay.TupleGetItem(func_74_call(relay.reshape(var_5272.astype('float32'), [15, 13, 7])), 0)
call_5273 = relay.TupleGetItem(func_77_call(relay.reshape(var_5272.astype('float32'), [15, 13, 7])), 0)
func_1473_call = mod.get_global_var('func_1473')
func_1475_call = mutated_mod.get_global_var('func_1475')
call_5279 = func_1473_call()
call_5280 = func_1473_call()
output = relay.Tuple([call_5191,var_5192,const_5193,bop_5254,bop_5259,call_5266,uop_5269,call_5271,var_5272,call_5279,])
output2 = relay.Tuple([call_5194,var_5192,const_5193,bop_5254,bop_5259,call_5267,uop_5269,call_5273,var_5272,call_5280,])
func_5298 = relay.Function([var_5184,var_5185,var_5192,var_5272,], output)
mod['func_5298'] = func_5298
mod = relay.transform.InferType()(mod)
var_5299 = relay.var("var_5299", dtype = "int32", shape = (15, 6, 16))#candidate|5299|(15, 6, 16)|var|int32
var_5300 = relay.var("var_5300", dtype = "int32", shape = (15, 6, 16))#candidate|5300|(15, 6, 16)|var|int32
var_5301 = relay.var("var_5301", dtype = "float32", shape = (1080,))#candidate|5301|(1080,)|var|float32
var_5302 = relay.var("var_5302", dtype = "float32", shape = (1365,))#candidate|5302|(1365,)|var|float32
output = func_5298(var_5299,var_5300,var_5301,var_5302,)
func_5303 = relay.Function([var_5299,var_5300,var_5301,var_5302,], output)
mutated_mod['func_5303'] = func_5303
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4703_call = mod.get_global_var('func_4703')
func_4705_call = mutated_mod.get_global_var('func_4705')
call_5317 = relay.TupleGetItem(func_4703_call(), 0)
call_5318 = relay.TupleGetItem(func_4705_call(), 0)
output = relay.Tuple([call_5317,])
output2 = relay.Tuple([call_5318,])
func_5363 = relay.Function([], output)
mod['func_5363'] = func_5363
mod = relay.transform.InferType()(mod)
output = func_5363()
func_5364 = relay.Function([], output)
mutated_mod['func_5364'] = func_5364
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1952_call = mod.get_global_var('func_1952')
func_1953_call = mutated_mod.get_global_var('func_1953')
call_5407 = func_1952_call()
call_5408 = func_1952_call()
output = relay.Tuple([call_5407,])
output2 = relay.Tuple([call_5408,])
func_5435 = relay.Function([], output)
mod['func_5435'] = func_5435
mod = relay.transform.InferType()(mod)
output = func_5435()
func_5436 = relay.Function([], output)
mutated_mod['func_5436'] = func_5436
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4584_call = mod.get_global_var('func_4584')
func_4586_call = mutated_mod.get_global_var('func_4586')
call_5479 = relay.TupleGetItem(func_4584_call(), 2)
call_5480 = relay.TupleGetItem(func_4586_call(), 2)
output = call_5479
output2 = call_5480
func_5486 = relay.Function([], output)
mod['func_5486'] = func_5486
mod = relay.transform.InferType()(mod)
output = func_5486()
func_5487 = relay.Function([], output)
mutated_mod['func_5487'] = func_5487
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4703_call = mod.get_global_var('func_4703')
func_4705_call = mutated_mod.get_global_var('func_4705')
call_5488 = relay.TupleGetItem(func_4703_call(), 0)
call_5489 = relay.TupleGetItem(func_4705_call(), 0)
func_2279_call = mod.get_global_var('func_2279')
func_2280_call = mutated_mod.get_global_var('func_2280')
call_5491 = func_2279_call()
call_5492 = func_2279_call()
func_1913_call = mod.get_global_var('func_1913')
func_1915_call = mutated_mod.get_global_var('func_1915')
call_5495 = relay.TupleGetItem(func_1913_call(), 1)
call_5496 = relay.TupleGetItem(func_1915_call(), 1)
output = relay.Tuple([call_5488,call_5491,call_5495,])
output2 = relay.Tuple([call_5489,call_5492,call_5496,])
func_5502 = relay.Function([], output)
mod['func_5502'] = func_5502
mod = relay.transform.InferType()(mod)
output = func_5502()
func_5503 = relay.Function([], output)
mutated_mod['func_5503'] = func_5503
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1088_call = mod.get_global_var('func_1088')
func_1090_call = mutated_mod.get_global_var('func_1090')
call_5506 = relay.TupleGetItem(func_1088_call(), 5)
call_5507 = relay.TupleGetItem(func_1090_call(), 5)
output = call_5506
output2 = call_5507
func_5517 = relay.Function([], output)
mod['func_5517'] = func_5517
mod = relay.transform.InferType()(mod)
output = func_5517()
func_5518 = relay.Function([], output)
mutated_mod['func_5518'] = func_5518
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2452_call = mod.get_global_var('func_2452')
func_2453_call = mutated_mod.get_global_var('func_2453')
call_5519 = relay.TupleGetItem(func_2452_call(), 0)
call_5520 = relay.TupleGetItem(func_2453_call(), 0)
output = call_5519
output2 = call_5520
func_5528 = relay.Function([], output)
mod['func_5528'] = func_5528
mod = relay.transform.InferType()(mod)
output = func_5528()
func_5529 = relay.Function([], output)
mutated_mod['func_5529'] = func_5529
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2782_call = mod.get_global_var('func_2782')
func_2783_call = mutated_mod.get_global_var('func_2783')
call_5549 = relay.TupleGetItem(func_2782_call(), 0)
call_5550 = relay.TupleGetItem(func_2783_call(), 0)
output = call_5549
output2 = call_5550
func_5567 = relay.Function([], output)
mod['func_5567'] = func_5567
mod = relay.transform.InferType()(mod)
output = func_5567()
func_5568 = relay.Function([], output)
mutated_mod['func_5568'] = func_5568
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3525_call = mod.get_global_var('func_3525')
func_3526_call = mutated_mod.get_global_var('func_3526')
call_5587 = relay.TupleGetItem(func_3525_call(), 0)
call_5588 = relay.TupleGetItem(func_3526_call(), 0)
func_3992_call = mod.get_global_var('func_3992')
func_3995_call = mutated_mod.get_global_var('func_3995')
const_5599 = relay.const(-3, dtype = "uint32")#candidate|5599|()|const|uint32
const_5600 = relay.const([5,6,7,9,-7,-8,6,2,6,-3,4,2,10,-9,1,10,6,-3,-1,6,7,-9,-5,-8,-8,-2,6,8,7,1,-3,-3,-8,-1,-1,7,3,4,6,-1,-1,-7,-6,-5,10,1,8,4,2,-4,-4,-10,8,-5,6,-9,8,5,10,-6,-7,-8,3,-8,-9,8,5,10,-4,8,-2,6,-2,3,1,6,6,-1,-8,-4,3,-10,-1,-10,5,2,4,9,-9,1,4,5,3,-1,-5,8,6,-6,8,2,5,-3,4,-6,6,10,-7,10,-3,3,-5,-7,10,-9,-9,-6,-7,-5,2,-1,-1,6,9,1,8,-9,-4,-5,-10,-5,-5,7,-1,-2,-4,-1,7,-6,-5,6,9,-8,4,9,8,-6,8,-7,-6,2,-4,-6,2,5,8,-3,-1,-4,-4,10,1,-9,1,-8,4,6,2,-1,5,2,-9,4,7,6,1,5,4,-10,1,10,7,5,10,-4,2,-10,-2,-3,-2,-2,7,-6,-3,-5,-4,10,-5,-1,-1,-1,10,5,8,2,-9,5,-2,-6,-7,9,-8,-3,4,-7,8,9,1,-1,-4,-1,7,-8,6,2,-6,7,10,8,-5,-10,-5,2,-6,5,7,-4,1,-1,-5,2,-6,7,2,-1,-10,-1,-3,-1,5,-9,-1,7,5,10,-3,-3,-3,6,-6,4,9,3,8,10,-9,8,-2,-3,-10,-8,5,-3,-4,6,3,7,5,3,3,9,-2,3,9,-10,-7,4,-4,2,4,-9,10,-1,8,-10,-7,5,5,1,2,-5,-4,2,-5,-5,4,10,-1,-9,-4,10,-8,-9,2,7,5,-4,-10,-6,-5,-8,4,1,10,4,6,5,8,-7,8,-6,-5,-2,1,3,-7,-2,-10,6,-10,-2,-6,-2,-3,-7,-10,-3,-5,1,-1,9,5,10,-4,-3,-9,-3,-4,-1,4,9,3,9,5,2,-4,5,-4,-5,1,5,5,-7,4,9,8,-2,-9,8,10,-9,5,-6,-9,9,8,-2,-5,5,10,7,-9,-10,-1,2,2,-8,9,8,-4,8,3,7,2,7,-4,-2,5,-3,2,-8,1,3,-1,-8,8,-6,-9,-8,5,-2,2,-3,-8,3,-4,-6,10,-4,8,5,9,6,-4,-6,-10,7,-4,10,9,-4,8,-9,-7,9,-7,1,6,2,10,9,8,-5,-6,-6,10,-7,8,-9,1,10,2,1,-7,-8,-1,-10,-2,-3,9,3,-9,-10,-10,-2,8,-6,3,8,10,-6], dtype = "uint32")#candidate|5600|(480,)|const|uint32
call_5598 = relay.TupleGetItem(func_3992_call(relay.reshape(const_5599.astype('uint32'), []), relay.reshape(const_5600.astype('uint32'), [16, 3, 10]), ), 1)
call_5601 = relay.TupleGetItem(func_3995_call(relay.reshape(const_5599.astype('uint32'), []), relay.reshape(const_5600.astype('uint32'), [16, 3, 10]), ), 1)
output = relay.Tuple([call_5587,call_5598,const_5599,const_5600,])
output2 = relay.Tuple([call_5588,call_5601,const_5599,const_5600,])
func_5605 = relay.Function([], output)
mod['func_5605'] = func_5605
mod = relay.transform.InferType()(mod)
mutated_mod['func_5605'] = func_5605
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5605_call = mutated_mod.get_global_var('func_5605')
call_5606 = func_5605_call()
output = call_5606
func_5607 = relay.Function([], output)
mutated_mod['func_5607'] = func_5607
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5517_call = mod.get_global_var('func_5517')
func_5518_call = mutated_mod.get_global_var('func_5518')
call_5612 = func_5517_call()
call_5613 = func_5517_call()
func_2749_call = mod.get_global_var('func_2749')
func_2754_call = mutated_mod.get_global_var('func_2754')
var_5617 = relay.var("var_5617", dtype = "uint8", shape = (600,))#candidate|5617|(600,)|var|uint8
const_5618 = relay.const([4.957294,-4.232550,5.541914,3.940422,8.314325,8.141246,4.761917,-2.438068,6.462327,4.132484,-1.618483,3.112264,-5.686991,-8.910783,-2.298311,-9.638259,-0.226904,-9.820136,2.367024,6.934424,7.956108,-8.539809,6.214517,-1.964539,9.649410,-9.131213,8.794380,-2.702465,4.825922,-6.410435,-1.087573,2.172085,3.882652,8.335545,6.107034,8.660532,1.685109,-1.352350,-2.654670,-2.736421,-6.235850,-3.994823,-2.981922,0.263301,0.238631,5.102911,-3.786261,-5.933680,-7.012274,-7.627430,-3.855018,-8.798339,4.869196,-8.947216,-9.986377,-0.282779,-7.180202,-1.170449,1.959993,-1.609654,9.431092,5.212671,-4.929429,2.805295,8.583098,9.348898,3.240171,3.794985,-4.138978,6.100880,-3.014990,1.736110,-8.100544,7.847015,-8.823908,-6.989050,7.397587,4.644484,1.869302,-5.143148,8.069774,-8.125344,-9.166089,2.028468,-1.160257,7.664748,-9.921436,5.061935,-4.922891,9.117632,-0.020041,9.529700,7.083986,1.048440,6.303342,8.170401,9.192654,-2.470653,7.110564,-3.113248,-4.869694,2.567379,6.203284,1.903692,0.937760,-0.424994,-9.595381,-3.415878,-8.379734,-7.345446,0.230294,-5.882434,0.560869,-1.939932,0.030649,-6.768160,-2.481550,-3.957475,-0.149157,-0.570525,-0.900568,0.091490,-5.221294,-7.066693,-3.945761,-1.137237,-6.078029,-2.150237,0.873273,4.627992,-4.969149,-8.584178,2.293230,-2.758072,-5.119690,3.877580,3.639219,5.129328,-2.831000,-1.845387,-1.027366,7.062829,-2.673930,0.073065,-6.910498,-4.032834,-0.804623,-6.115003,5.372569,-1.576261,5.055636,1.968563,-0.359873,-3.243954,-7.575176,5.299954,0.451696,-9.513506,4.355044,-2.723913,-2.319971,-1.515868,2.662199,-3.325877,7.304977,4.266027,-5.840283,6.419980,9.896365,-3.277350,-3.996179,6.069488,-7.325110,0.215403,2.310407,9.830196,-8.505616,-6.340670,-6.092266,2.209150,8.897811,-8.925340,1.518117,5.713852,0.034958,-1.206335,9.511132,-9.315689,7.517567,7.543402,6.195097,-2.289603,-5.438783,0.485484,9.106877,-6.013265,7.812577,0.070556,-8.686669,-4.223095,-0.396153,-4.995303,-9.852911,8.347341,-5.710105,-4.278771,4.567247,-7.282106,1.366183,1.289750,-4.150010,-6.363155,-1.174535,-5.070512,-4.875144,2.498857,4.238410,-9.878242,-6.231747,-2.708061,5.962856,-3.327726,1.386335,-7.445236,-4.435181,-7.272967,-3.509840,1.974662,-3.504237,9.051021,-3.058618,8.592658,-8.350111,8.380700,5.072201,-7.918228,-1.069961,6.976435,5.070367,-1.302136,8.313383,-7.733000,2.179562,8.465300,8.416496,-0.441650,6.939446,0.056893,-5.429336,-2.495644,-0.251270,-7.638848,2.914553,7.704157,9.689561,-5.212160,-8.383378,-5.479854,-0.251421,2.609749,3.810653,0.940352,4.126028,-6.388958,5.404151,8.332548,1.480220,-1.956679,3.938050,2.555126,-8.006898,-9.669698,-9.294884,-1.404321,-5.645970,-1.906589,-0.500632,-5.098196,3.134852,6.194254,6.200024,-0.903415,-6.808767,3.076757,-5.963120,-3.949481,-0.599582,1.474408,-6.795401,-7.451494,3.467440,-0.655343,-5.124304,9.274193,8.877368,9.700563,7.654511,-4.621739,-7.224779,-9.658384,-7.470878,3.330292,9.192310,-1.048382,6.489475,-8.819807,6.303990,-4.095496,7.641909,3.836160,-0.883125,0.558573,0.348697,8.563145,1.991606,-5.539387,-8.986103,-8.812551,1.049306,3.019167,3.680844,9.659074,-8.179469,4.506354,-1.430278,9.106800,3.833988,-6.306266,-3.288561,-8.225572,7.223902,5.380322,6.676417,3.185815,-7.094909,9.717990,-4.175501,8.045518,-7.152632,-9.948422,1.478318,0.509659,-8.179579,6.190845,5.600439,-4.390028,3.466796,-2.840130,-6.090412,9.947623,8.951428,-8.167943,5.372830,-2.164639,-9.345528,-4.954796,-4.468316,-1.545514,-2.317304,1.449736,-7.912001,-2.817510,-6.353006,-8.266567,4.553974,5.283132,-5.058184,-7.601606,5.934459,6.231420,-4.279165,-7.672971,9.136108,6.263946,-7.077243,4.676791,2.487152,-7.188046,-5.085301,-0.976116,-7.999518,-1.922669,7.800223,6.538373,-5.673177,2.100331,-4.989886,1.200687,-8.747066,0.886539,-2.190347,8.434020,9.875360,3.077917,-2.471231,8.677694,9.520842,6.452478,-5.990606,-8.895313,3.521819,1.544267,2.750222,3.498663,-9.440163,-6.953213,9.946469,-8.398830,-7.635984,0.741646,0.633530,6.424643,-7.477875,6.378054,1.722419,7.905272,6.420884,2.593962,-9.503391,7.238486,2.744648,8.372522,1.209400,2.396386,1.937384,3.275783,0.101781,7.249327,4.699563,0.379451,-0.169350,-6.348884,4.032249,-6.784897,-7.258892,-6.484949,-8.538971,8.691867,7.684185,2.333291,6.115015,9.206870,8.126573,-1.773699,-9.014916,-8.869881,1.930065,-7.100971,-1.993535,-0.671850,-3.361056,-3.420834,-4.677488,8.378006,7.124063,-5.058634,7.850057,7.354252,-1.195400,0.715915,7.202874,-9.471024,-2.060038,-1.358567,5.143089,-0.998823,4.003063,-6.493317,-5.988582,-8.983937,-8.872493,-9.042802,-2.868855,7.775202,1.519293,2.437556,-3.168670,7.067343,7.367240,2.848487,-6.815424,-1.692123,-0.928967,6.920631,-8.278843,-5.075640,-3.345168,-6.325319,6.142674,-7.460597,5.519410,7.062403,5.957183,-5.977025,-0.652975,6.210503,4.481791,1.095137,5.439240,-2.689771,-0.449202,-4.072544,6.929628,7.710348,-3.010523,-2.419551,-5.808880,9.932942,-9.575828,-0.580804,5.144146,-6.358580,0.765746,8.633783,-4.517772,0.222563,-9.184700,-7.432530,-4.451699,-2.002404,0.122226,-3.990083,3.542003,4.759493,-2.576803,-5.082232,6.491072,-4.325597,-4.267548,5.165550,-1.601942,0.395270,7.937075,-3.324556,-9.150417,-8.436148,2.609313,3.412108,1.360786,7.387168,-4.473976,1.699670,-9.395818,-8.960602,0.136264,9.489878,-9.698349,2.749364,-3.875428,-1.276920,-7.451673,-6.807463,2.498218,-0.134683,-4.899637,-0.272868,-7.319462,2.154619,-9.848713,3.309498,7.047433,8.624323,-4.696946,9.718449,-3.587881,4.902847,1.704923,0.645102,2.900436,7.201586,1.093059,-1.193862,3.224274,-8.886193,7.126678,-0.268415,-0.441324,4.178930,-2.192245,-8.555958,-0.538841,5.499454,3.295002,-9.272236,1.546130,7.872293,-7.155306,-8.430849,0.660319,3.122439,-1.802157,1.570751,6.314792,1.993747,-4.587760,-8.195515,5.830460,-7.847747,-1.733055,1.398338,-0.981559,-7.507488,-0.074879,-5.684403,0.406721,8.836004,9.939863,2.394796,0.152144,-0.299108,-6.886633,-0.797354,7.340161,-6.218454,4.319701,9.267314,-9.997860,-1.210856,-7.124760,-1.678303,-8.317988,6.301196,3.744076,-1.503445,-1.264970,-1.851701,-1.497798,-1.200639,8.840038,2.783073,7.071777,-4.437023,1.847659,-6.310817,4.563222,9.583923,-4.034004,-1.099087,9.757518,-7.621787,1.134284,-6.665117,2.412770,4.305938,-9.510025,-0.599732,3.456498,1.540622,2.317551,-3.739743,0.471194,6.187436,0.133219,2.512683,-6.364694,-6.743175,-8.838165,2.340287,5.534586,-3.469698], dtype = "float64")#candidate|5618|(660,)|const|float64
var_5619 = relay.var("var_5619", dtype = "float32", shape = (1365,))#candidate|5619|(1365,)|var|float32
call_5616 = relay.TupleGetItem(func_2749_call(relay.reshape(var_5617.astype('uint8'), [600,]), relay.reshape(const_5618.astype('float64'), [660, 1]), relay.reshape(var_5619.astype('float32'), [1365,]), ), 0)
call_5620 = relay.TupleGetItem(func_2754_call(relay.reshape(var_5617.astype('uint8'), [600,]), relay.reshape(const_5618.astype('float64'), [660, 1]), relay.reshape(var_5619.astype('float32'), [1365,]), ), 0)
func_5502_call = mod.get_global_var('func_5502')
func_5503_call = mutated_mod.get_global_var('func_5503')
call_5622 = relay.TupleGetItem(func_5502_call(), 0)
call_5623 = relay.TupleGetItem(func_5503_call(), 0)
func_1088_call = mod.get_global_var('func_1088')
func_1090_call = mutated_mod.get_global_var('func_1090')
call_5627 = relay.TupleGetItem(func_1088_call(), 7)
call_5628 = relay.TupleGetItem(func_1090_call(), 7)
output = relay.Tuple([call_5612,call_5616,var_5617,const_5618,var_5619,call_5622,call_5627,])
output2 = relay.Tuple([call_5613,call_5620,var_5617,const_5618,var_5619,call_5623,call_5628,])
func_5631 = relay.Function([var_5617,var_5619,], output)
mod['func_5631'] = func_5631
mod = relay.transform.InferType()(mod)
var_5632 = relay.var("var_5632", dtype = "uint8", shape = (600,))#candidate|5632|(600,)|var|uint8
var_5633 = relay.var("var_5633", dtype = "float32", shape = (1365,))#candidate|5633|(1365,)|var|float32
output = func_5631(var_5632,var_5633,)
func_5634 = relay.Function([var_5632,var_5633,], output)
mutated_mod['func_5634'] = func_5634
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1895_call = mod.get_global_var('func_1895')
func_1896_call = mutated_mod.get_global_var('func_1896')
call_5639 = func_1895_call()
call_5640 = func_1895_call()
func_4600_call = mod.get_global_var('func_4600')
func_4601_call = mutated_mod.get_global_var('func_4601')
call_5642 = func_4600_call()
call_5643 = func_4600_call()
output = relay.Tuple([call_5639,call_5642,])
output2 = relay.Tuple([call_5640,call_5643,])
func_5662 = relay.Function([], output)
mod['func_5662'] = func_5662
mod = relay.transform.InferType()(mod)
mutated_mod['func_5662'] = func_5662
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5662_call = mutated_mod.get_global_var('func_5662')
call_5663 = func_5662_call()
output = call_5663
func_5664 = relay.Function([], output)
mutated_mod['func_5664'] = func_5664
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5665 = relay.var("var_5665", dtype = "float64", shape = (12, 11, 4))#candidate|5665|(12, 11, 4)|var|float64
uop_5666 = relay.atanh(var_5665.astype('float64')) # shape=(12, 11, 4)
output = relay.Tuple([uop_5666,])
output2 = relay.Tuple([uop_5666,])
func_5687 = relay.Function([var_5665,], output)
mod['func_5687'] = func_5687
mod = relay.transform.InferType()(mod)
mutated_mod['func_5687'] = func_5687
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5688 = relay.var("var_5688", dtype = "float64", shape = (12, 11, 4))#candidate|5688|(12, 11, 4)|var|float64
func_5687_call = mutated_mod.get_global_var('func_5687')
call_5689 = func_5687_call(var_5688)
output = call_5689
func_5690 = relay.Function([var_5688], output)
mutated_mod['func_5690'] = func_5690
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3126_call = mod.get_global_var('func_3126')
func_3128_call = mutated_mod.get_global_var('func_3128')
call_5700 = relay.TupleGetItem(func_3126_call(), 0)
call_5701 = relay.TupleGetItem(func_3128_call(), 0)
output = call_5700
output2 = call_5701
func_5731 = relay.Function([], output)
mod['func_5731'] = func_5731
mod = relay.transform.InferType()(mod)
mutated_mod['func_5731'] = func_5731
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5731_call = mutated_mod.get_global_var('func_5731')
call_5732 = func_5731_call()
output = call_5732
func_5733 = relay.Function([], output)
mutated_mod['func_5733'] = func_5733
mutated_mod = relay.transform.InferType()(mutated_mod)
func_707_call = mod.get_global_var('func_707')
func_708_call = mutated_mod.get_global_var('func_708')
call_5779 = func_707_call()
call_5780 = func_707_call()
output = relay.Tuple([call_5779,])
output2 = relay.Tuple([call_5780,])
func_5800 = relay.Function([], output)
mod['func_5800'] = func_5800
mod = relay.transform.InferType()(mod)
mutated_mod['func_5800'] = func_5800
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5800_call = mutated_mod.get_global_var('func_5800')
call_5801 = func_5800_call()
output = call_5801
func_5802 = relay.Function([], output)
mutated_mod['func_5802'] = func_5802
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5486_call = mod.get_global_var('func_5486')
func_5487_call = mutated_mod.get_global_var('func_5487')
call_5871 = func_5486_call()
call_5872 = func_5486_call()
uop_5884 = relay.sigmoid(call_5871.astype('float64')) # shape=(1568,)
uop_5886 = relay.sigmoid(call_5872.astype('float64')) # shape=(1568,)
func_3992_call = mod.get_global_var('func_3992')
func_3995_call = mutated_mod.get_global_var('func_3995')
const_5892 = relay.const(5, dtype = "uint32")#candidate|5892|()|const|uint32
const_5893 = relay.const([4,-2,-2,-5,2,4,7,9,-5,-4,8,-10,6,-4,4,2,-1,-10,-3,-6,2,6,-8,-7,-4,3,-8,4,5,-4,9,-10,10,-5,-4,-10,3,-8,-1,-3,7,-8,10,-8,9,-7,-9,1,4,-4,9,7,-10,-2,-9,7,-2,10,8,-9,3,7,3,-3,8,-7,1,-8,10,-3,4,6,6,9,5,9,6,-10,-8,7,-2,10,2,-6,9,-1,9,10,-3,-7,9,-8,6,5,5,-7,-10,-10,-8,-3,6,-9,-9,-2,7,5,-9,-10,-5,8,-9,-4,-3,-9,1,-7,6,-1,2,1,5,5,1,9,-10,-3,-2,-8,-1,8,-1,-8,9,-3,-5,10,10,-1,1,-6,-7,-2,4,-7,-10,-7,-8,-9,-4,-9,9,-6,7,2,1,10,5,-8,5,5,8,6,7,-6,8,-10,5,7,-7,-9,-5,6,-3,2,-10,3,1,8,7,-10,7,1,8,-5,7,3,5,3,-6,7,-3,7,-2,-3,7,3,5,-10,-3,10,-9,1,4,1,10,7,-8,9,-9,8,-8,-4,6,6,8,-9,-8,-8,-8,-6,7,-4,-8,-5,-9,-5,-4,10,4,1,-1,-9,-3,-5,6,-9,-5,-9,10,-1,7,-6,6,2,1,2,-6,-4,7,-9,-9,7,-3,-6,-10,-2,5,-9,5,1,-7,-9,-3,1,2,-3,8,4,6,-6,7,3,-7,4,-4,-7,9,3,9,-2,-1,2,6,-1,-8,-9,5,8,2,2,-9,8,-5,10,2,6,8,3,6,8,-10,-8,9,-7,-7,9,-7,4,6,5,9,-3,9,-2,-1,8,7,6,-1,-7,1,-6,10,10,5,8,-9,2,-7,5,-5,9,9,6,-10,10,-8,2,6,8,9,7,4,-8,-4,-9,5,10,5,6,10,9,-10,-8,4,8,-9,-3,-4,4,-3,-8,-2,4,6,-5,4,4,6,10,7,5,-3,-9,-9,-5,-7,-3,-3,8,-7,-8,6,4,-6,-2,-2,-7,5,-10,-10,-7,9,-7,8,-4,8,-5,3,-6,4,2,-5,1,-6,4,-7,4,-2,-2,6,-3,-7,-1,-8,1,-7,9,1,-1,10,-2,4,-7,-5,-5,5,7,6,4,5,7,-8,3,4,-4,-7,5,10,-10,-1,8,-4,-9,1,8,1,-9,2,6,-5,-2,5,-8,9,2,4,5,-2,-2,-10,-10,-4,7,2,1,4,-2,3,5,-5,-2,-6,-8,-3,-3,9,-3,-4,-10], dtype = "uint32")#candidate|5893|(480,)|const|uint32
call_5891 = relay.TupleGetItem(func_3992_call(relay.reshape(const_5892.astype('uint32'), []), relay.reshape(const_5893.astype('uint32'), [16, 3, 10]), ), 1)
call_5894 = relay.TupleGetItem(func_3995_call(relay.reshape(const_5892.astype('uint32'), []), relay.reshape(const_5893.astype('uint32'), [16, 3, 10]), ), 1)
func_1677_call = mod.get_global_var('func_1677')
func_1679_call = mutated_mod.get_global_var('func_1679')
call_5898 = relay.TupleGetItem(func_1677_call(), 0)
call_5899 = relay.TupleGetItem(func_1679_call(), 0)
func_4258_call = mod.get_global_var('func_4258')
func_4259_call = mutated_mod.get_global_var('func_4259')
call_5900 = relay.TupleGetItem(func_4258_call(), 0)
call_5901 = relay.TupleGetItem(func_4259_call(), 0)
func_4378_call = mod.get_global_var('func_4378')
func_4380_call = mutated_mod.get_global_var('func_4380')
call_5913 = relay.TupleGetItem(func_4378_call(), 1)
call_5914 = relay.TupleGetItem(func_4380_call(), 1)
uop_5918 = relay.sqrt(call_5891.astype('float64')) # shape=(11, 11, 15)
uop_5920 = relay.sqrt(call_5894.astype('float64')) # shape=(11, 11, 15)
output = relay.Tuple([uop_5884,const_5892,const_5893,call_5898,call_5900,call_5913,uop_5918,])
output2 = relay.Tuple([uop_5886,const_5892,const_5893,call_5899,call_5901,call_5914,uop_5920,])
func_5948 = relay.Function([], output)
mod['func_5948'] = func_5948
mod = relay.transform.InferType()(mod)
output = func_5948()
func_5949 = relay.Function([], output)
mutated_mod['func_5949'] = func_5949
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3525_call = mod.get_global_var('func_3525')
func_3526_call = mutated_mod.get_global_var('func_3526')
call_5961 = relay.TupleGetItem(func_3525_call(), 0)
call_5962 = relay.TupleGetItem(func_3526_call(), 0)
func_4980_call = mod.get_global_var('func_4980')
func_4983_call = mutated_mod.get_global_var('func_4983')
var_5975 = relay.var("var_5975", dtype = "uint32", shape = (168,))#candidate|5975|(168,)|var|uint32
const_5976 = relay.const([0.909625,7.544452,9.963379,3.705169,2.285532,-6.907064,-5.024511,-5.056608,6.084004,-9.037897,-4.915924,-2.304469,-4.661599,-6.636414,0.453484,4.446913,3.707443,5.472824,4.266373,5.084875,8.101386,-7.414136,8.218087,-9.710145,-8.335600,-6.302451,3.750135,-5.216179,-8.404252,-1.490558,-9.093137,-8.564283,-7.072743,-0.208407,1.933433,-5.986741,5.992622,-1.631321,3.019909,5.181458,3.754266,6.755650,0.310575,-0.786040,-2.269634,1.785040,4.733572,-4.913917,-3.617002,1.733398,4.317046,-2.824985,1.927344,1.125587,7.077367,-5.792683,-4.579926,3.213748,1.799843,3.785503,-4.357426,-9.246769,3.664290,-7.901879,4.514553,5.142245,2.002453,7.247927,-0.460241,-9.676746,-7.332834,-5.418994,-6.384589,-6.926437,-6.574536,9.161887,-9.276320,-4.045068,-2.518783,9.739647,-6.120671,-3.783752,-3.271077,-2.496765,-4.119110,-2.608863,-4.313059,2.190272,3.920815,-6.453303,-8.170838,-5.736596,-2.501356,-4.540913,6.260152,-7.607836,-5.311571,-9.185526,6.421521,2.681950,0.042247,-0.605169,-7.275748,-3.866864,2.018767,7.286663,-9.175297,-7.717690,-6.632465,2.187336,6.381863,-7.373175,7.863954,-8.090199,0.888947,-8.643406,-5.922911,-3.876990,2.217067,-5.738877,-5.637181,-2.550851,7.390162,5.749714,2.924508,-8.340083,-5.467846,-5.612577,7.014002,-1.077341,-0.469128,5.007211,0.802872,8.577894,-0.073942,2.977174,-0.237313,4.549623,1.217101,1.760193,4.721182,3.768366,-6.041675,4.752133,-5.757765,8.806289,1.574961,9.970158,-2.066047,7.392559,-0.735296,8.502235,-4.997451,5.939391,8.802595,-9.683112,-0.480078,2.781304,3.882852,-0.356389,-3.802136,-0.525127,-0.139913,0.293606,-8.147130,9.081081,5.341544,9.407001,2.078602,8.088143,-1.596923,5.904188,4.161775,4.260815,-0.641934,7.456137,9.399389,-5.250412,3.831401,9.798004,-5.153085,8.415250,1.196942,7.374160,9.821905,-3.410471,-3.747718,-4.220618,-4.650394,-6.507823,2.532516,5.903918,4.902362,-9.687545,3.802730,-6.698562,-3.670232,-1.627196,5.305942,-6.317769,-9.213688,-2.832067,-7.212134,2.481579,-8.002782,8.090368,4.433046,1.112953,-0.716635,0.669460,0.683412,9.075418,4.046530,2.719745,2.899392,8.279118,-3.286565,-2.044857,-4.639319,7.745605,0.821322,-3.188920,-2.176027,2.657592,3.763830,-4.422976,4.813218,-9.583185,0.728785,4.029737,9.876828,9.252569,-0.822283,8.080103,5.911867,5.295472,9.332008,3.028539,8.720939,2.237369,7.991505,2.902980,3.320766,-7.289458,-9.423903,-6.892715,-5.961845,7.614531,9.925491,-2.218306,-1.862803,-9.252011,1.319534,2.434420,-7.584748,-4.245002,-3.026140,-7.661841,1.901148,7.454228,-9.646966,-9.334424,3.252865,0.744110,-1.165033,2.347189,-3.422565,-5.795609,3.923681,-5.493727,-8.795463,5.470700,1.032089,0.327713,-7.184001,-8.633019,-8.647606,-4.659062,-2.051158,-2.193604,6.261574,7.199850,0.126486,9.437053,1.063441,7.342294,-1.242145,9.886337,-4.589548,7.436692,7.230755,-6.749083,-0.946298,4.782211,-7.511290,4.824883,1.312912,3.145293,-1.640004,7.935481,8.926745,-2.571786,1.069452,7.124442,-1.327580,6.033555,-9.979658,5.768856,-2.630207,6.250980,-9.199554,-8.169692,-2.040784,1.109730,-3.503758,-6.084624,8.868955,-6.826422,-4.273736,-1.899785,-8.447148,-4.759947,8.791624,0.726645,-4.194630,1.481373,9.550157,-0.131447,6.293814,-3.953464,-1.386606,2.138441,4.511135,7.584983,5.402579,-1.593553,7.772382,-0.382660,-1.551907,-8.364885,8.754495,-4.530881,9.247200,-6.219430,-1.797778,-2.726154,6.694322,-2.877381,5.667311,0.025919,0.998136,-1.539793,-9.457184,-4.424148,-4.387745,-6.660478,-4.495108,-9.618134,7.069615,-7.596821,-7.199654,1.601819,3.214602,-0.244857,7.298412,9.941129,-7.867850,0.921877,2.136676,2.773544,-0.325393,3.431207,-8.735752,-3.022197,-0.308984,7.880573,4.778368,-4.378106,-2.160091,-9.361992,-6.120885,4.945609,2.873776,-2.908949,-7.960684,5.613587,1.346126,0.107208,-8.179312,5.889258,-2.237244,2.643816,8.121782,-7.723054,0.331539,8.601435,1.040701,-0.391354,2.452284,9.164082,-8.113373,-3.146776,3.922291,-3.661988,7.928141,-9.627012,-9.842088,-5.977056,9.474164,-8.051206,9.482946,2.017540,-5.102831,7.066303,-8.053447,6.018503,1.764333,-5.684445,3.210902,2.720061,-6.607818,-3.511180,0.804836,3.664403,-5.018986,6.992858,2.438903,-2.864877,-7.508104,-1.741015,-5.439809,-6.086925,6.540611,-1.313015,1.629460,-2.252207,0.752053,-1.844606,6.434530,7.851945,7.856144,5.969403,0.083205,-5.229696,2.290262,-0.488921,-4.170510,-2.816336,8.623995,-5.939185,-5.216251,6.710876,-9.116956,-7.364092,9.855876,6.608007,2.493196,0.107606,-6.393525,-0.703660,-4.434893,4.642858,0.906177,9.382640,-2.458037,5.763182,-4.665615,-6.007429,9.091142,-1.082004,-8.682686,6.031262,-2.552281,9.957328,5.383656,-4.513314,-2.939198,-6.339641,4.706536,9.018765,-4.676167,-7.585406,2.080742,9.196230,-5.382538,7.109816,8.739320,-9.069413,9.219777,-7.232867,7.402366,2.410207,-9.844390,-5.786048,1.449638,7.683155,-5.058415,-4.851199,-9.018492,-4.061679,0.232702,4.573160,6.497920,-6.533054,4.542752,2.554613,0.721096,9.280153,-4.086633,-0.856246,9.120827,1.339669,0.874562,0.613027,0.915085,-1.142361,3.011609,1.141392,8.803176,2.235236,-6.037116,-3.488109,5.099149,0.206504,1.531111,4.639547,1.898819,-5.061299,-7.843783,-4.234811,-0.146967,-8.354485,3.986450,-5.675263,3.314709,5.825837,-3.226192,-4.752490,4.275185,9.813590,6.550307,4.483074,-0.578531,2.957895,5.362672,-9.004548,0.751925,6.052827,1.555706,9.493480,-1.732425,-0.332729,-1.953372,-6.173868,2.007753,-4.345131,5.037596,7.120010,-9.704464,-7.122386,1.363634,3.244721,-5.154958,3.653578,-1.334504,-4.172214,3.450551,1.152676,6.697245,-5.950645,6.389610,0.759437,-3.289812,-9.826573,-9.544306,6.282392,-8.650033,-3.874337,0.975422,-9.323153,-5.155423,-2.524262,9.777135,-0.314768,-6.791856,9.051322,6.362912,-7.880698,-4.473632,-0.527173,0.155940,-4.489047,-0.704919,-1.536947,-2.446062,2.995228,-0.174481,-7.457812,4.985151,-5.884761,0.423925,-2.668753,5.709559,9.093276,7.264152,-4.253307,2.216259,-4.943710,3.773081,8.619610,0.574489,-5.570926,3.520459,-3.484870,0.559506,-8.944570,-3.294419,-0.218388,8.474288,0.181932,1.341889,0.995952,-0.485274,4.931075,6.082867,4.083612,3.695147,-1.937640,4.230347,-8.407200,1.063560,6.032704,2.841558,7.571083,7.348522,8.031629,-3.084531,3.212565,7.246199,-0.897700,-1.355309,7.039776,-7.737252,-3.602641,-8.963617,-7.140074,6.500046,-4.348556,1.825769,3.016270,-8.890300,-8.488962,7.442529,-4.350045,-9.396192,3.212110,-2.284421,-5.721699,-4.738763,-0.407031], dtype = "float64")#candidate|5976|(660,)|const|float64
call_5974 = relay.TupleGetItem(func_4980_call(relay.reshape(var_5975.astype('uint32'), [6, 28]), relay.reshape(const_5976.astype('float64'), [660,]), ), 1)
call_5977 = relay.TupleGetItem(func_4983_call(relay.reshape(var_5975.astype('uint32'), [6, 28]), relay.reshape(const_5976.astype('float64'), [660,]), ), 1)
var_5988 = relay.var("var_5988", dtype = "float32", shape = (5, 15, 2))#candidate|5988|(5, 15, 2)|var|float32
bop_5989 = relay.greater(call_5961.astype('bool'), relay.reshape(var_5988.astype('bool'), relay.shape_of(call_5961))) # shape=(5, 15, 2)
bop_5992 = relay.greater(call_5962.astype('bool'), relay.reshape(var_5988.astype('bool'), relay.shape_of(call_5962))) # shape=(5, 15, 2)
output = relay.Tuple([call_5974,var_5975,const_5976,bop_5989,])
output2 = relay.Tuple([call_5977,var_5975,const_5976,bop_5992,])
func_5997 = relay.Function([var_5975,var_5988,], output)
mod['func_5997'] = func_5997
mod = relay.transform.InferType()(mod)
var_5998 = relay.var("var_5998", dtype = "uint32", shape = (168,))#candidate|5998|(168,)|var|uint32
var_5999 = relay.var("var_5999", dtype = "float32", shape = (5, 15, 2))#candidate|5999|(5, 15, 2)|var|float32
output = func_5997(var_5998,var_5999,)
func_6000 = relay.Function([var_5998,var_5999,], output)
mutated_mod['func_6000'] = func_6000
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5800_call = mod.get_global_var('func_5800')
func_5802_call = mutated_mod.get_global_var('func_5802')
call_6037 = relay.TupleGetItem(func_5800_call(), 0)
call_6038 = relay.TupleGetItem(func_5802_call(), 0)
func_1199_call = mod.get_global_var('func_1199')
func_1201_call = mutated_mod.get_global_var('func_1201')
call_6047 = relay.TupleGetItem(func_1199_call(), 0)
call_6048 = relay.TupleGetItem(func_1201_call(), 0)
output = relay.Tuple([call_6037,call_6047,])
output2 = relay.Tuple([call_6038,call_6048,])
func_6052 = relay.Function([], output)
mod['func_6052'] = func_6052
mod = relay.transform.InferType()(mod)
mutated_mod['func_6052'] = func_6052
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6052_call = mutated_mod.get_global_var('func_6052')
call_6053 = func_6052_call()
output = call_6053
func_6054 = relay.Function([], output)
mutated_mod['func_6054'] = func_6054
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3126_call = mod.get_global_var('func_3126')
func_3128_call = mutated_mod.get_global_var('func_3128')
call_6058 = relay.TupleGetItem(func_3126_call(), 0)
call_6059 = relay.TupleGetItem(func_3128_call(), 0)
output = call_6058
output2 = call_6059
func_6060 = relay.Function([], output)
mod['func_6060'] = func_6060
mod = relay.transform.InferType()(mod)
output = func_6060()
func_6061 = relay.Function([], output)
mutated_mod['func_6061'] = func_6061
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4415_call = mod.get_global_var('func_4415')
func_4416_call = mutated_mod.get_global_var('func_4416')
call_6095 = relay.TupleGetItem(func_4415_call(), 1)
call_6096 = relay.TupleGetItem(func_4416_call(), 1)
output = relay.Tuple([call_6095,])
output2 = relay.Tuple([call_6096,])
func_6118 = relay.Function([], output)
mod['func_6118'] = func_6118
mod = relay.transform.InferType()(mod)
mutated_mod['func_6118'] = func_6118
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6118_call = mutated_mod.get_global_var('func_6118')
call_6119 = func_6118_call()
output = call_6119
func_6120 = relay.Function([], output)
mutated_mod['func_6120'] = func_6120
mutated_mod = relay.transform.InferType()(mutated_mod)
func_740_call = mod.get_global_var('func_740')
func_742_call = mutated_mod.get_global_var('func_742')
call_6177 = relay.TupleGetItem(func_740_call(), 2)
call_6178 = relay.TupleGetItem(func_742_call(), 2)
func_2687_call = mod.get_global_var('func_2687')
func_2689_call = mutated_mod.get_global_var('func_2689')
call_6182 = relay.TupleGetItem(func_2687_call(), 3)
call_6183 = relay.TupleGetItem(func_2689_call(), 3)
func_2974_call = mod.get_global_var('func_2974')
func_2978_call = mutated_mod.get_global_var('func_2978')
const_6216 = relay.const([2,6,6,-2,-9,-2,1,-8,-6,-6,2,9,-1,-1,6,-5,-7,-2,10,-6,8,-7,-5,2,6,10,-3,7,3,1,3,-8,8,3,-5,-6,-6,4,10,5,-3,-5,-3,-10,-10,4,8,2,-3,5,-6,10,6,5,9,-5,4,9,-10,-2,10,2,9,6,-2,1,-4,2,-7,9,7,-10,-1,6,8,2,5,9,-1,-7,8,1,-1,1,7,3,1,5,-2,5,-1,9,-2,-10,-5,-4,-5,2,-7,1,4,-10,-7,9,7,1,-9,-2,1,4,8,-7,-4,-8,-6,8,5,5,4,3,-7,7,-7,9,-2,-3,2,3,1,-8,2,-6,-6,1,4,9,-10,-7,5,2,8,8,-5,5,-4,-4,-9,-5,9,4,10,7,10,-7,-10,2,6,6,-3,-9,4,-7,-2,-9,-8,8,-4,10], dtype = "uint32")#candidate|6216|(168,)|const|uint32
const_6217 = relay.const([-9,-5,4,3,3,1,-4,5,-7,4,10,6,-10,1,6,-6,-4,6,-10,-8,-4,5,3,9,-7,-5,-5,-4,-5,6,2,4,2,-4,10,7,2,-2,-2,-4,-6,-7,-3,-7,-4,10,4,4,6,8,1,-10,7,-7,-4,9,3,2,-7,-6,1,-8,10,1,-9,3,-2,2,-4,-10,1,10,-5,2,3,-2,-2,9,2,1,9,-3,7,-2,-4,3,10,-1,-8,-9,-1,-5,-3,8,-6,-9,2,-6,7,2,-10,9,10,7,5,9,8,10,10,-9,6,1,-7,-9,-7,-8,-7,7,10,-5,1,-2,8,10,-9,-4,4,3,2,-10,4,-6,-6,8,8,-1,-7,-5,3,3,-4,-7,2,-4,1,-5,-9,-7,3,-10,-9,9,-2,-3,2,8,-4,-6,6,-1,1,3,-7,6,-6,-3,7,-4,-8,7,4,-10,2,-5,6,-7,-1,1,-1,-10,-3,-3,-4,-1,-4,6,4,6,-2,4,8,6,-2,-9,-6,-9,9,9,-8,8,7,-10,10,6,-1,-9,-10,8,6,4,-4,10,6,9,-10,-6,2,9,-5,3,3,-5,-1,-4,10,-6,10,10,-5,-2,9,-3,5,3,5,6,-10,-1,-3,7,-3,-10,10,1,-10,-2,10,-9,7,4,8,10,-8,8,-5,5,-7,-3,6,2,-4,6,-10,-8,7,-9,-10,4,9,1,8,-4,-2,1,10,5,-10,7,-6,-8,-6,1,-5,6,-8,2,5,-10,-4,5,8,9,1,-9,2,1,4,4,6,7,-8,-7,-4,10,-9,3,4,-5,-7,-3,4,7,-3,-1,-4,10,-5,7,-5,-9,-3,-4,-4,4,-5,-2,-9,1,1,-3,-10,7,2,-7,2,-3,-10,-1,-6,-6,2,-4,-7,6,-6,-3,2,4,-7,-2,8,-1,4,3,-9,-3,-6,-3,-3,-3,6,7,-9,1,-1,2,-10,-8,-4,-6,-9,-3,5,10,-3,-7,10,-6,-5,2,1,5,-8,8,3,5,3,9,-6,-8,-3,-7,-10,-1,-1,3,8,5,-3,7,9,8,-4,9,-7,8,-3,2,-7,8,-5,-1,-1,10,-1,1,-3,-1,-7,4,9,-1,-6,-6,5,2,-7,4,1,-3,3,4,5,2,8,-4,-7,-9,-10,-7,-9,5,-3,-5,5,1,-3,3,-10,10,10,-5,10,1,7,5,8,-1,10,-7,5,2,-3,-6,9,-1,9,-5,7,1,5,-9,7,-6,-7,4,3,10,3,8,-3,9,4,2,-2,-5,-2,-10,8,8,10,-7,-9,8,-6,-4,-5,10,-8,3,7,7,-4,-8,4,8,-9,-7,-6,10,1,-9,-6,-8,-1,-4,-8,-6,9,-5,-10,-7,9,-7,8,7,3,8,4,4,6,2,1,8,-1,-3,7,-2,-5,-3,8,4,7,1,-9,-7,-6,-1,-8,-9,2,-4,3,7,-4,-2,-4,4,-10,3,3,-6,-2,8,-6,2,10,-8,9,10,10,6,8,-5,6,-8,9,-9,-1,-2,-5,-6,8,7,-1,-1,-1,-5,8,9,-8,-4,-1,2,4,-8,8,-4,-9,-6], dtype = "uint8")#candidate|6217|(600,)|const|uint8
var_6218 = relay.var("var_6218", dtype = "float64", shape = (660,))#candidate|6218|(660,)|var|float64
call_6215 = relay.TupleGetItem(func_2974_call(relay.reshape(const_6216.astype('uint32'), [168,]), relay.reshape(const_6217.astype('uint8'), [600,]), relay.reshape(var_6218.astype('float64'), [10, 66]), ), 2)
call_6219 = relay.TupleGetItem(func_2978_call(relay.reshape(const_6216.astype('uint32'), [168,]), relay.reshape(const_6217.astype('uint8'), [600,]), relay.reshape(var_6218.astype('float64'), [10, 66]), ), 2)
output = relay.Tuple([call_6177,call_6182,call_6215,const_6216,const_6217,var_6218,])
output2 = relay.Tuple([call_6178,call_6183,call_6219,const_6216,const_6217,var_6218,])
func_6220 = relay.Function([var_6218,], output)
mod['func_6220'] = func_6220
mod = relay.transform.InferType()(mod)
var_6221 = relay.var("var_6221", dtype = "float64", shape = (660,))#candidate|6221|(660,)|var|float64
output = func_6220(var_6221)
func_6222 = relay.Function([var_6221], output)
mutated_mod['func_6222'] = func_6222
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6257 = relay.var("var_6257", dtype = "float32", shape = (9, 10, 6))#candidate|6257|(9, 10, 6)|var|float32
uop_6258 = relay.erf(var_6257.astype('float32')) # shape=(9, 10, 6)
output = relay.Tuple([uop_6258,])
output2 = relay.Tuple([uop_6258,])
func_6261 = relay.Function([var_6257,], output)
mod['func_6261'] = func_6261
mod = relay.transform.InferType()(mod)
mutated_mod['func_6261'] = func_6261
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6262 = relay.var("var_6262", dtype = "float32", shape = (9, 10, 6))#candidate|6262|(9, 10, 6)|var|float32
func_6261_call = mutated_mod.get_global_var('func_6261')
call_6263 = func_6261_call(var_6262)
output = call_6263
func_6264 = relay.Function([var_6262], output)
mutated_mod['func_6264'] = func_6264
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1199_call = mod.get_global_var('func_1199')
func_1201_call = mutated_mod.get_global_var('func_1201')
call_6294 = relay.TupleGetItem(func_1199_call(), 0)
call_6295 = relay.TupleGetItem(func_1201_call(), 0)
output = call_6294
output2 = call_6295
func_6302 = relay.Function([], output)
mod['func_6302'] = func_6302
mod = relay.transform.InferType()(mod)
output = func_6302()
func_6303 = relay.Function([], output)
mutated_mod['func_6303'] = func_6303
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1952_call = mod.get_global_var('func_1952')
func_1953_call = mutated_mod.get_global_var('func_1953')
call_6342 = func_1952_call()
call_6343 = func_1952_call()
func_2578_call = mod.get_global_var('func_2578')
func_2579_call = mutated_mod.get_global_var('func_2579')
call_6350 = relay.TupleGetItem(func_2578_call(), 0)
call_6351 = relay.TupleGetItem(func_2579_call(), 0)
output = relay.Tuple([call_6342,call_6350,])
output2 = relay.Tuple([call_6343,call_6351,])
func_6355 = relay.Function([], output)
mod['func_6355'] = func_6355
mod = relay.transform.InferType()(mod)
mutated_mod['func_6355'] = func_6355
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6355_call = mutated_mod.get_global_var('func_6355')
call_6356 = func_6355_call()
output = call_6356
func_6357 = relay.Function([], output)
mutated_mod['func_6357'] = func_6357
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2248_call = mod.get_global_var('func_2248')
func_2250_call = mutated_mod.get_global_var('func_2250')
call_6358 = relay.TupleGetItem(func_2248_call(), 1)
call_6359 = relay.TupleGetItem(func_2250_call(), 1)
func_1758_call = mod.get_global_var('func_1758')
func_1760_call = mutated_mod.get_global_var('func_1760')
call_6378 = relay.TupleGetItem(func_1758_call(), 1)
call_6379 = relay.TupleGetItem(func_1760_call(), 1)
func_1211_call = mod.get_global_var('func_1211')
func_1213_call = mutated_mod.get_global_var('func_1213')
call_6386 = func_1211_call()
call_6387 = func_1211_call()
uop_6394 = relay.cosh(call_6378.astype('float32')) # shape=(12, 5, 4)
uop_6396 = relay.cosh(call_6379.astype('float32')) # shape=(12, 5, 4)
output = relay.Tuple([call_6358,call_6386,uop_6394,])
output2 = relay.Tuple([call_6359,call_6387,uop_6396,])
func_6409 = relay.Function([], output)
mod['func_6409'] = func_6409
mod = relay.transform.InferType()(mod)
output = func_6409()
func_6410 = relay.Function([], output)
mutated_mod['func_6410'] = func_6410
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6484 = relay.var("var_6484", dtype = "float32", shape = (7, 15, 16))#candidate|6484|(7, 15, 16)|var|float32
uop_6485 = relay.rsqrt(var_6484.astype('float32')) # shape=(7, 15, 16)
bop_6492 = relay.bitwise_or(uop_6485.astype('uint16'), relay.reshape(var_6484.astype('uint16'), relay.shape_of(uop_6485))) # shape=(7, 15, 16)
bop_6502 = relay.greater(uop_6485.astype('bool'), relay.reshape(bop_6492.astype('bool'), relay.shape_of(uop_6485))) # shape=(7, 15, 16)
func_1444_call = mod.get_global_var('func_1444')
func_1445_call = mutated_mod.get_global_var('func_1445')
call_6506 = relay.TupleGetItem(func_1444_call(), 0)
call_6507 = relay.TupleGetItem(func_1445_call(), 0)
output = relay.Tuple([bop_6502,call_6506,])
output2 = relay.Tuple([bop_6502,call_6507,])
func_6510 = relay.Function([var_6484,], output)
mod['func_6510'] = func_6510
mod = relay.transform.InferType()(mod)
mutated_mod['func_6510'] = func_6510
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6511 = relay.var("var_6511", dtype = "float32", shape = (7, 15, 16))#candidate|6511|(7, 15, 16)|var|float32
func_6510_call = mutated_mod.get_global_var('func_6510')
call_6512 = func_6510_call(var_6511)
output = call_6512
func_6513 = relay.Function([var_6511], output)
mutated_mod['func_6513'] = func_6513
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5567_call = mod.get_global_var('func_5567')
func_5568_call = mutated_mod.get_global_var('func_5568')
call_6528 = func_5567_call()
call_6529 = func_5567_call()
output = call_6528
output2 = call_6529
func_6549 = relay.Function([], output)
mod['func_6549'] = func_6549
mod = relay.transform.InferType()(mod)
output = func_6549()
func_6550 = relay.Function([], output)
mutated_mod['func_6550'] = func_6550
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2248_call = mod.get_global_var('func_2248')
func_2250_call = mutated_mod.get_global_var('func_2250')
call_6551 = relay.TupleGetItem(func_2248_call(), 1)
call_6552 = relay.TupleGetItem(func_2250_call(), 1)
func_2578_call = mod.get_global_var('func_2578')
func_2579_call = mutated_mod.get_global_var('func_2579')
call_6567 = relay.TupleGetItem(func_2578_call(), 0)
call_6568 = relay.TupleGetItem(func_2579_call(), 0)
output = relay.Tuple([call_6551,call_6567,])
output2 = relay.Tuple([call_6552,call_6568,])
func_6572 = relay.Function([], output)
mod['func_6572'] = func_6572
mod = relay.transform.InferType()(mod)
output = func_6572()
func_6573 = relay.Function([], output)
mutated_mod['func_6573'] = func_6573
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2328_call = mod.get_global_var('func_2328')
func_2330_call = mutated_mod.get_global_var('func_2330')
call_6664 = relay.TupleGetItem(func_2328_call(), 1)
call_6665 = relay.TupleGetItem(func_2330_call(), 1)
output = call_6664
output2 = call_6665
func_6676 = relay.Function([], output)
mod['func_6676'] = func_6676
mod = relay.transform.InferType()(mod)
output = func_6676()
func_6677 = relay.Function([], output)
mutated_mod['func_6677'] = func_6677
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5800_call = mod.get_global_var('func_5800')
func_5802_call = mutated_mod.get_global_var('func_5802')
call_6687 = relay.TupleGetItem(func_5800_call(), 0)
call_6688 = relay.TupleGetItem(func_5802_call(), 0)
output = relay.Tuple([call_6687,])
output2 = relay.Tuple([call_6688,])
func_6696 = relay.Function([], output)
mod['func_6696'] = func_6696
mod = relay.transform.InferType()(mod)
output = func_6696()
func_6697 = relay.Function([], output)
mutated_mod['func_6697'] = func_6697
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5502_call = mod.get_global_var('func_5502')
func_5503_call = mutated_mod.get_global_var('func_5503')
call_6766 = relay.TupleGetItem(func_5502_call(), 2)
call_6767 = relay.TupleGetItem(func_5503_call(), 2)
output = call_6766
output2 = call_6767
func_6770 = relay.Function([], output)
mod['func_6770'] = func_6770
mod = relay.transform.InferType()(mod)
mutated_mod['func_6770'] = func_6770
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6770_call = mutated_mod.get_global_var('func_6770')
call_6771 = func_6770_call()
output = call_6771
func_6772 = relay.Function([], output)
mutated_mod['func_6772'] = func_6772
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6778 = relay.const([[-9.811426,-2.229927,-5.579429,8.431404,2.205743,-3.109575,-6.130083,2.437139,-5.129472,-7.014054,-9.680771,-6.305785,-8.277816],[9.504111,-1.112943,5.824518,-1.026650,-4.311728,4.665225,-0.993742,6.591763,-7.018389,-2.347499,4.736121,-9.352299,-8.212539],[-1.588823,-8.597321,-1.069141,0.872993,-7.541052,-4.353409,-4.679376,8.046499,-1.369807,-6.073784,-9.297077,-0.353660,4.920165],[-0.321948,5.448799,-8.654003,3.035949,-0.196994,-2.721918,-4.947288,5.086604,6.440796,9.613855,0.845999,-3.016993,-8.489960],[-4.505755,7.895822,-9.118129,8.197255,-7.489536,5.029708,-7.505160,-8.701464,9.808207,6.602851,0.263805,-9.237381,2.666467],[-4.080241,-6.250199,2.307354,7.723541,-3.956162,-0.083289,2.393534,6.050967,-8.459513,0.015927,-3.158255,8.673034,8.651398],[-7.973940,-6.684966,2.876766,-3.986704,3.414508,-2.723979,-4.883607,-9.125667,4.698510,-8.549925,-8.141456,-5.584407,0.867445]], dtype = "float32")#candidate|6778|(7, 13)|const|float32
uop_6779 = relay.erf(const_6778.astype('float32')) # shape=(7, 13)
func_4205_call = mod.get_global_var('func_4205')
func_4208_call = mutated_mod.get_global_var('func_4208')
const_6792 = relay.const([-1.203055,5.508451,1.080089,0.648208,-9.292643,4.143760,9.779427,-7.873411,-7.901765,-7.722772,-2.250577,-2.464111,-3.744146,4.899597,-5.437756,-0.268064,-0.478909,8.201545,9.336837,-2.322946,0.006167,5.639522,-7.051254,1.222644,-0.225498,6.835059,7.558887,7.738653,7.530835,6.999918,-2.848715,-2.858192,-2.605152,-3.695030,-9.658701,7.266076,8.915070,-0.468484,3.474028,-1.410234,8.836676,-6.819573,7.599779,9.625494,5.738863,-5.690923,-6.298289,-6.306060,-5.066735,-1.760862,7.180320,-2.372281,-4.284919,2.054997,-9.873198,8.300668,5.852320,9.541012,2.251442,5.963133,5.641255,6.550613,-9.018471,-0.112827,-4.971827,-9.664178,0.725705,-3.868858,9.192758,8.602083,3.577705,-7.705178,-6.536091,3.379950,-7.855884,-3.205265,-6.753083,4.166880,8.121682,-6.572491,-1.035852,-5.084568,0.340638,-0.157052,-8.134144,9.555434,-8.448496,-9.777976,4.985787,6.333387,-5.575058,8.049710,7.533690,6.848991,3.922032,-8.115184,-4.602168,2.013155,-2.998336,2.088425,5.448746,-6.109434,-4.640421,-5.345734,6.343968,1.807287,-1.616377,-1.642077,5.869811,-5.286984,7.767829,-2.131060,2.472027,-4.044908,6.992108,-9.736741,-2.531638,3.392247,5.540470,-1.922922,9.955668,-6.251983,-4.035218,3.870630,7.455303,-5.166789,-9.375493,-1.113575,-2.099680,3.780043,-3.862150,-4.656855,3.180747,7.093666,-1.870411,6.060482,4.337275,3.751882,-7.747112,1.458814,-0.361318,6.646421,3.226811,9.656307,-8.083712,1.329105,-0.152252,9.683632,2.146076,8.618712,-2.128664,0.035213,-6.068884,0.669688,0.888489,-1.474141,0.700862,7.563936,-1.370323,-9.228217,6.832108,5.403348,-5.266251,4.912751,-5.998996,3.877090,0.710443,-2.096606,8.297762,2.786032,7.606104,-5.218327,0.972433,7.665018,-3.008312,-2.089865,1.826421,-1.232201,-9.322228,-2.065062,-8.329218,3.296753,-4.175477,6.607128,2.293829,6.430842,2.601713,2.318264,1.776019,-2.285192,2.122524,5.682233,-9.222513,-8.972137,-7.615060,2.443933,-7.406692,-2.166624,7.339769,-5.521938,-3.189108,2.302929,3.825007,-5.002716,7.834451,5.849371,2.292922,6.882386,-7.782975,-6.233186,-0.437614,9.893591,-7.488970,-4.156334,1.857930,1.336150,-0.853020,5.886564,2.265943,-2.383458,-2.384043,8.956194,-0.097545,-8.853170,-5.548463,6.088117,-1.049831,3.409243,0.358029,-6.783362,-6.909638,-0.149398,-9.620035,8.046429,-1.305433,-7.953550,7.683464,-8.545349,8.190834,-7.154779,-4.331756,-2.367425,-6.717755,8.990302,1.538342,-2.410827,4.677229,-7.993904,3.833411,-0.983765,2.785638,-6.330337,-7.708325,5.628865,3.648928,-0.485674,8.771812,8.065064,-3.150828,1.459969,-7.581536,-3.178756,6.363012,-6.200963,-9.330915,-5.812740,9.357679,-0.449319,3.966339,7.098588,0.101300,-7.383497,8.169609,-6.052348,0.261448,5.420191,1.685097,1.807051,1.581666,1.169673], dtype = "float32")#candidate|6792|(280,)|const|float32
call_6791 = func_4205_call(relay.reshape(const_6792.astype('float32'), [10, 14, 2]))
call_6793 = func_4205_call(relay.reshape(const_6792.astype('float32'), [10, 14, 2]))
output = relay.Tuple([uop_6779,call_6791,const_6792,])
output2 = relay.Tuple([uop_6779,call_6793,const_6792,])
func_6797 = relay.Function([], output)
mod['func_6797'] = func_6797
mod = relay.transform.InferType()(mod)
mutated_mod['func_6797'] = func_6797
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6797_call = mutated_mod.get_global_var('func_6797')
call_6798 = func_6797_call()
output = call_6798
func_6799 = relay.Function([], output)
mutated_mod['func_6799'] = func_6799
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6052_call = mod.get_global_var('func_6052')
func_6054_call = mutated_mod.get_global_var('func_6054')
call_6812 = relay.TupleGetItem(func_6052_call(), 1)
call_6813 = relay.TupleGetItem(func_6054_call(), 1)
func_5298_call = mod.get_global_var('func_5298')
func_5303_call = mutated_mod.get_global_var('func_5303')
const_6821 = relay.const([[-4,-8,1,8,10,-4,-9,-3,-9,-1,7,8,10,-7,-5,-5,4,-2,7,6,-8,-8,-7,9,1,10,1,-3,3,-1,-3,-7,-2,-3,-1,-8,7,5,7,9,-6,-8,-7,8,-1,10,7,-10,-8,-10,9,-7,6,-2,6,2,2,-8,1,1,-5,5,-8,-3,-7,5,-2,2,-4,2,-8,3,6,-9,9,10,-2,-8,-9,9,3,-2,8,-3,-10,4,9,8,-1,2,-8,4,9,-10,-2,-6,5,-7,2,7,5,2,1,9,8,1,-8,-7,8,7,8,-2,9,-6,-1,7,-4,-2,-10,8,6,5,6,-1,9,4,-9,-10,10,-3,9,-9,-10,10,5,9,9,5,6,-2,6,-4,-4,5,-2,-5,10,-6,4,-10,3,-2,3,-8,5,-6,5,6,-6,-3,1,1,-9,-2,2,4,3,-10,3,-7,-7,1,-5,-3,-10,-9,-2,2,7,6,8,-7,-6,-7,-4,-1,-7,6,9,-3,6,10,4,9,8,3,7,-8,6,6,-10,-2,7,-1,9,-5,-7,3,7,-5,9,-4,5,-3,-7,-2,6,-4,-3,-1,-8,-7,9,8,-4,-4,10,-1,-8,-7,-3,-2,2,4,-10,10,-1,-4,-7,-10,-7,3,-10,2,1,5,-6,-5,-10,8,5,-9,-4,-9,-5,-1,-3,8,1,5,9,7,4,8,4,5,1,-10,-5,8,-9,-2,5,8,-2,-9,-3,-8,10,-3,1,8,2,-9,-6,-8,-5,-7,-2,6,10,-7,-4,1,3,10,2,6,-3,-10,1,4,-10,-6,-8,8,-8,10,-2,-5,5,-8,3,-10,10,-7,-9,7,-2,2,5,-5,-9,-6,7,7,-7,8,9,-10,7,-10,-6,6,9,-7,1,9,8,2,-7,7,4,-5,3,-1,-3,-9,-7,-9,6,-3,10,7,-9,5,-8,1,-8,-4,-4,-3,6,-5,6,1,2,9,8,-9,-6,3,9,-3,-10,9,-2,10,4,-2,9,-4,-9,-2,10,-6,-8,-8,4,-5,10,8,-6,-1,6,-3,-9,6,10,9,-1,-6,-5,-7,10,5,4,4,-4,2,-8,-4,2,7,10,-3,10,-2,-6,5,-1,-5,-6,6,-4,9,-1,-9,5,-4,9,-7,-9,-5,8,-2,-10,3,-8,3,7,-3,7,1,7,6,-7,6,-4,10,9,-2,-10,5,5,-9,-2,-1,4,10,1,9,10,3,-6,-7,-4,-6,-3,-2,8,1,4,8,7,-9,-5,6,6,9,-2,-7,-5,-3,-1,-7,6,1,-3,8,-9,6,-9,-9,-2,5,5,2,-2,-8,-10,3,6,-6,5,7,-2,5,-9,-6,-3,7,-10,9,2,6,6,-7,-5,1,8,-1,-5,4,3,5,9,-5,10,3,-3,5,-10,2,-7,3,-3,10,3,3,3,3,1,3,1,-5,-6,-6,3,10,-10,-9,-9,4,10,9,5,-5,9,-6,-5,7,-1,8,10,8,-2,5,-4,5,-6,7,-6,6,4,6,-4,1,-7,-1,-6,6,-4,9,-2,3,-9,-7,-7,-10,6,-10,-2,-8,-7,-3,8,9,10,3,4,-8,-8,-8,10,4,6,8,5,5,7,-3,7,10,-1,9,-8,-8,4,9,-4,1,9,7,5,5,10,-8,1,-4,10,-10,10,3,4,9,-7,9,10,-9,10,9,-4,-6,-5,-9,-6,3,9,-2,-10,-4,-1,-2,-10,6,-6,9,1,7,8,3,7,1,-4,10,4,-10,6,6,6,8,-6,-4,-4,7,8,-7,-7,-2,1,-4,7,-2,7,-3,-9,-7,-5,3,1,-3,-1,-6,1,9,4,-9,-9,-8,-8,-9,9,5,6,-5,-10,-10,1,7,-5,-5,2,-2,4,7,-8,-2,-2,-2],[5,-9,-8,-5,-4,2,-1,-10,1,-3,-9,-1,-7,-3,2,-1,-3,-1,9,1,-8,-5,-9,3,-7,9,7,3,4,4,3,2,-4,-6,-9,-8,-9,-8,-10,-10,-9,2,-10,-9,5,10,-9,-2,5,7,5,5,-10,2,-5,-8,-3,10,9,8,5,10,10,6,-9,3,10,-8,10,2,-4,2,3,1,-5,4,6,-3,-5,4,-4,10,5,-4,-9,4,7,3,10,-9,-2,5,6,-6,7,-7,-7,4,-4,-8,-5,8,-10,3,4,5,7,-6,5,4,-2,-4,-7,-2,7,3,4,-3,2,-4,-7,6,6,7,-6,7,3,8,8,-10,-1,6,-6,-2,6,-9,-5,-9,7,-6,8,-10,3,-2,9,7,-6,-9,-3,-3,7,3,6,-4,-7,-7,-4,-9,-4,-9,2,-5,10,-1,5,1,5,-3,-6,-6,-9,-2,-10,9,10,9,5,-8,-7,9,2,-3,6,8,5,8,6,7,9,-10,-6,-10,-10,-8,-9,9,1,-8,8,-10,9,8,-6,-1,-1,-5,-7,-7,-5,-6,-4,-6,6,1,-2,-10,-8,8,3,10,-8,10,10,-4,4,1,-6,-4,-3,-8,-7,5,7,9,3,-4,4,8,-1,3,4,-5,1,5,-4,6,-3,5,6,-2,5,10,1,-7,10,-10,-2,-9,4,-6,6,8,-4,-1,-10,7,-10,7,5,-6,4,3,2,-10,5,5,-7,-3,7,-1,-7,-2,-5,8,5,-7,1,6,2,-10,-1,8,-7,10,5,10,-10,-10,-1,7,4,4,5,-9,-7,2,3,7,3,1,-9,-1,-3,-5,1,2,-5,-3,8,7,-10,-3,-3,2,-8,-3,3,-5,8,3,-2,-7,1,9,-1,-5,7,5,-10,5,1,6,-3,2,-3,-1,10,-5,-7,10,-3,2,-7,-2,-5,7,-5,9,8,-1,6,7,1,7,-8,-7,-4,-1,-7,9,9,7,-1,-4,-10,1,9,2,-9,10,-7,-8,-6,-3,-3,-5,8,-8,10,9,9,6,7,-9,-8,-4,6,6,-3,6,-1,8,-5,-10,10,-3,-9,-8,6,3,-8,8,10,-9,3,9,-6,-3,5,4,-3,4,-7,-10,-2,6,9,6,-8,-2,-8,-6,10,-5,-5,8,-9,1,5,-8,4,6,8,7,-5,-10,2,9,-7,6,-7,-1,-9,2,-6,2,4,7,10,-1,-3,-1,-9,6,7,10,-8,-2,-5,-2,7,-5,2,5,6,-8,-9,3,-1,3,-2,-4,4,-7,2,-2,-5,-10,-8,10,2,-2,-9,8,5,8,2,8,-1,7,-6,2,5,-8,-6,-9,-6,-1,8,-5,-9,-10,8,-9,3,-2,-4,-2,-6,-3,9,-3,3,-10,-1,1,9,-5,9,5,9,-3,-2,3,7,8,-8,-1,-5,1,7,8,-3,-4,-6,-6,-8,1,6,-6,1,-9,7,9,10,-9,-2,-4,9,-9,10,-9,6,6,3,-7,8,-3,-5,-6,-2,3,-2,-9,8,4,-5,4,-5,5,2,2,9,4,10,10,-5,-8,-1,-7,-6,7,-6,-3,1,8,-2,-5,10,5,-9,1,-10,-2,7,10,-10,5,7,-4,-7,-4,-7,-2,-10,4,-3,-5,6,-4,5,-6,-10,-1,-10,5,-9,8,10,10,8,1,-3,-6,4,-3,3,-5,2,-8,-1,2,6,8,2,5,-4,-3,3,-9,9,-7,3,5,-8,-10,10,10,1,-1,6,3,4,-10,-7,-5,10,1,2,1,-1,-8,2,-6,-6,6,-4,-3,-4,7,-9,-8,-2,4,-4,-5,-3,-7,-3,-8,1,2,-2,6,-7,7,-3,6,-3,1,-5,-6,1,5,-8,4,8,7,-10,-6,-3,-6,-8,-4,-5,10,-5,-10,10,10]], dtype = "int32")#candidate|6821|(2, 720)|const|int32
var_6822 = relay.var("var_6822", dtype = "float32", shape = (1080,))#candidate|6822|(1080,)|var|float32
var_6823 = relay.var("var_6823", dtype = "float32", shape = (7, 195))#candidate|6823|(7, 195)|var|float32
call_6820 = relay.TupleGetItem(func_5298_call(relay.reshape(const_6821.astype('int32'), [15, 6, 16]), relay.reshape(const_6821.astype('int32'), [15, 6, 16]), relay.reshape(var_6822.astype('float32'), [1080,]), relay.reshape(var_6823.astype('float32'), [1365,]), ), 0)
call_6824 = relay.TupleGetItem(func_5303_call(relay.reshape(const_6821.astype('int32'), [15, 6, 16]), relay.reshape(const_6821.astype('int32'), [15, 6, 16]), relay.reshape(var_6822.astype('float32'), [1080,]), relay.reshape(var_6823.astype('float32'), [1365,]), ), 0)
output = relay.Tuple([call_6812,call_6820,const_6821,var_6822,var_6823,])
output2 = relay.Tuple([call_6813,call_6824,const_6821,var_6822,var_6823,])
func_6853 = relay.Function([var_6822,var_6823,], output)
mod['func_6853'] = func_6853
mod = relay.transform.InferType()(mod)
mutated_mod['func_6853'] = func_6853
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6853_call = mutated_mod.get_global_var('func_6853')
var_6855 = relay.var("var_6855", dtype = "float32", shape = (1080,))#candidate|6855|(1080,)|var|float32
var_6856 = relay.var("var_6856", dtype = "float32", shape = (7, 195))#candidate|6856|(7, 195)|var|float32
call_6854 = func_6853_call(var_6855,var_6856,)
output = call_6854
func_6857 = relay.Function([var_6855,var_6856,], output)
mutated_mod['func_6857'] = func_6857
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1683_call = mod.get_global_var('func_1683')
func_1684_call = mutated_mod.get_global_var('func_1684')
call_6894 = func_1683_call()
call_6895 = func_1683_call()
func_1088_call = mod.get_global_var('func_1088')
func_1090_call = mutated_mod.get_global_var('func_1090')
call_6899 = relay.TupleGetItem(func_1088_call(), 8)
call_6900 = relay.TupleGetItem(func_1090_call(), 8)
func_6355_call = mod.get_global_var('func_6355')
func_6357_call = mutated_mod.get_global_var('func_6357')
call_6923 = relay.TupleGetItem(func_6355_call(), 0)
call_6924 = relay.TupleGetItem(func_6357_call(), 0)
output = relay.Tuple([call_6894,call_6899,call_6923,])
output2 = relay.Tuple([call_6895,call_6900,call_6924,])
func_6935 = relay.Function([], output)
mod['func_6935'] = func_6935
mod = relay.transform.InferType()(mod)
mutated_mod['func_6935'] = func_6935
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6935_call = mutated_mod.get_global_var('func_6935')
call_6936 = func_6935_call()
output = call_6936
func_6937 = relay.Function([], output)
mutated_mod['func_6937'] = func_6937
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1199_call = mod.get_global_var('func_1199')
func_1201_call = mutated_mod.get_global_var('func_1201')
call_6958 = relay.TupleGetItem(func_1199_call(), 0)
call_6959 = relay.TupleGetItem(func_1201_call(), 0)
output = relay.Tuple([call_6958,])
output2 = relay.Tuple([call_6959,])
func_6961 = relay.Function([], output)
mod['func_6961'] = func_6961
mod = relay.transform.InferType()(mod)
mutated_mod['func_6961'] = func_6961
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6961_call = mutated_mod.get_global_var('func_6961')
call_6962 = func_6961_call()
output = call_6962
func_6963 = relay.Function([], output)
mutated_mod['func_6963'] = func_6963
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5363_call = mod.get_global_var('func_5363')
func_5364_call = mutated_mod.get_global_var('func_5364')
call_7083 = relay.TupleGetItem(func_5363_call(), 0)
call_7084 = relay.TupleGetItem(func_5364_call(), 0)
output = call_7083
output2 = call_7084
func_7110 = relay.Function([], output)
mod['func_7110'] = func_7110
mod = relay.transform.InferType()(mod)
output = func_7110()
func_7111 = relay.Function([], output)
mutated_mod['func_7111'] = func_7111
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6961_call = mod.get_global_var('func_6961')
func_6963_call = mutated_mod.get_global_var('func_6963')
call_7144 = relay.TupleGetItem(func_6961_call(), 0)
call_7145 = relay.TupleGetItem(func_6963_call(), 0)
output = call_7144
output2 = call_7145
func_7153 = relay.Function([], output)
mod['func_7153'] = func_7153
mod = relay.transform.InferType()(mod)
mutated_mod['func_7153'] = func_7153
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7153_call = mutated_mod.get_global_var('func_7153')
call_7154 = func_7153_call()
output = call_7154
func_7155 = relay.Function([], output)
mutated_mod['func_7155'] = func_7155
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6935_call = mod.get_global_var('func_6935')
func_6937_call = mutated_mod.get_global_var('func_6937')
call_7156 = relay.TupleGetItem(func_6935_call(), 1)
call_7157 = relay.TupleGetItem(func_6937_call(), 1)
func_4485_call = mod.get_global_var('func_4485')
func_4487_call = mutated_mod.get_global_var('func_4487')
call_7158 = func_4485_call()
call_7159 = func_4485_call()
func_2840_call = mod.get_global_var('func_2840')
func_2842_call = mutated_mod.get_global_var('func_2842')
const_7162 = relay.const([8.164376,-7.621742,-6.323318,-1.888531,-1.272598,-2.752537,-9.973466,-8.569701,-5.923020,7.379721,6.478510,-1.834826,-2.595115,1.010737,-0.393391,0.102318,-9.140056,-6.973354,-5.352334,-3.350832,0.640174,-5.521460,-5.288869,-7.247021,-4.847338,-4.104424,7.341362,-7.186962,9.334868,3.557722,-1.465615,1.375426,-6.267004,-6.992641,-0.911941,-3.866932,6.960367,5.119038,7.480818,-7.470906,1.102625,5.378599,3.038322,5.528370,0.491795,3.854751,7.571716,8.384130,-8.353834,-1.952781,-2.501907,-4.056230,-5.574746,8.485482,1.283514,8.967123,-7.983762,3.873114,-2.334829,-7.333209,-6.669862,-4.767386,-8.600458,6.111120,6.416081,7.767831,-2.349395,6.474687,6.166992,9.259903,3.574202,5.746037,0.234057,1.844949,5.422916,-0.231700,8.134667,0.687430,-1.575903,-2.901736,9.226086,0.691503,2.520176,-3.305065,9.044512,-8.776981,-1.667424,-7.378479,-5.890022,-2.870858,4.086262,0.194894,7.382673,-5.977360,-9.324814,3.817726,-5.035939,4.557931,5.051815,-2.153660,6.049625,7.837548,-5.339452,-4.935221,-6.422603,0.042285,0.540203,-7.537565,6.166411,-9.225559,-7.361933,4.332653,-5.446345,-2.624088,-2.787358,-5.785088,2.409781,-9.063567,1.427617,0.350859,3.993299,9.948262,7.922361,5.914481,-0.302147,-3.868337,4.961409,4.599462,6.470262,0.626159,-4.716919,3.717504,-7.147958,8.965793,-6.578404,1.008749,7.890856,-6.417602,-9.823445,-1.259267,8.104582,3.223311,-0.755291,-1.549269], dtype = "float64")#candidate|7162|(144,)|const|float64
call_7161 = relay.TupleGetItem(func_2840_call(relay.reshape(const_7162.astype('float64'), [8, 9, 2])), 0)
call_7163 = relay.TupleGetItem(func_2842_call(relay.reshape(const_7162.astype('float64'), [8, 9, 2])), 0)
func_1306_call = mod.get_global_var('func_1306')
func_1310_call = mutated_mod.get_global_var('func_1310')
const_7167 = relay.const([-8.660588,9.965414,7.734302,5.101360,-7.558456,-6.959437,-9.666727,4.365386,-3.250520,-5.187739,4.586646,-1.492622,5.668491,0.485993,-9.956933,2.614543,5.176553,-3.867753,-4.514640,6.982690,2.189437,-6.608454,-5.179438,3.002796,-4.650336,-1.487175,-7.009812,-1.624197,-4.275784,1.116610,-7.306600,9.397965,7.725012,-4.781264,-5.004615,-9.818937,-7.228618,6.472623,1.687293,6.795621,-6.628409,8.683390,-6.883042,8.216325,8.035149,-2.441166,7.207863,9.078051,6.032265,-2.977697,-8.648941,3.461042,2.879189,6.678406,-9.984119,-5.923883,-7.458976,3.962252,9.919390,9.738539,3.627878,-3.582449,-9.098213,-9.834862,6.670148,8.530683,6.720072,-2.090200,0.022389,4.675118,6.908451,-2.416142,7.345799,-8.688840,-4.374570,-9.087821,0.217969,-7.735028,-3.548222,-1.645234,4.363395,8.391665,-7.566097,2.405404,4.121828,4.267602,-9.277924,5.987933,-7.846452,-4.698421,3.484282,-4.823448,9.153967,-7.471636,5.670521,-6.731678,-0.444201,-2.903730,3.024772,-0.145124,-8.450195,2.276399,-6.341161,4.340664,1.381935,0.449217,-1.975779,3.904090,3.115994,7.175431,-5.693546,3.622093,-6.862813,-6.003882,-1.664997,-2.577899,-1.798463,8.046260,-4.628174,8.820261,6.704782,5.267196,3.125013,1.756468,-2.220953,1.802697,-9.951581,-1.605874,-7.354806,8.777618,0.117705,-6.180911,2.395424,-2.343288,-1.260020,8.639429,2.807199,8.261388,-0.496208,0.868368,6.663869,7.318380,3.535988,-3.978293,-5.910043,-8.073638,-6.625207,-9.693033,5.173225,5.734880,-9.593435,0.683458,7.522997,-9.437184,6.258716,1.233163,7.934530,6.366154,-8.520464,-4.913249,0.991283,-2.281398,9.083812,0.385165,-5.382490,-9.737641,-7.626939,-4.488942,-5.636914,3.467784,-6.094932,4.474344,0.052756,-0.079637,-2.534320,4.444551,-2.957950,9.263672,-0.529275,-3.146474,-0.152997,4.733293,-3.944957,-4.669594,5.526926,-2.421189,-8.705056,8.228282,-1.623959,1.642422,-8.211476,-7.286658,0.577870,1.632332,9.994615,-8.758849,-7.145555,-7.434081,4.063244,-4.717549,-5.893821,-8.296897,-8.043133,-5.897416,4.239358,7.682684,-2.997679,-8.516009,-2.516117,4.218516,1.135364,9.153775,-3.453966,-4.268978,-3.090100,-3.431681,-6.567292,-1.226926,-5.919159,3.050014,-9.650078,3.720313,7.179809,-9.710045,9.811524,1.523842,6.996218,2.455602,-1.125422,3.352033,-6.197183,6.618168,-8.250369,3.144815,-4.163921,9.457426,2.474122,-6.140967,-8.157557,-6.638578,-0.143758,2.635889,-9.433936,5.488157,-2.281346,-7.415609,-2.349400,5.267779,5.551019,0.645577,-4.878839,-5.073352,-3.065277,-4.037693,-5.433400,-9.519141,-7.077947,-0.653141,-1.036646,1.071721,3.049918,9.346355,5.901686,-6.945096,8.034809,-1.210505,-5.789281,-7.825781,0.956174,-5.904946,8.356699,6.066580,-2.366533,2.785087,0.670628,2.653993,-1.531350,1.139774,-9.652960,-2.021948,9.182535,5.835644,6.222417,-7.987725,-5.363566,-7.575677,-1.925603,3.281086,-5.390637,6.720149,6.901712,-6.128376,-1.013548,7.048684,6.361007,-6.556555,-9.489189,0.330619,1.714349,1.668367,-6.597677,-5.957032,8.317539,5.402378,-0.460521,8.060524,4.657832,8.677412,0.126658,-7.666344,-3.256044,-9.198832,-4.193496,-5.114324,7.375929,3.571638,-5.177119,-9.006185,9.008865,1.577380,7.163226,9.736236,-5.965729,-8.266614,5.225922,-0.314811,9.987161,5.021947,-0.850959,-8.923960,0.105508,3.952789,7.145793,9.278714,1.431957,-6.451908,3.360722,-3.010664,-6.116203,-8.107323,4.971802,5.304059,1.103771,3.946121,-0.009840,7.728127,9.373521,6.195536,2.689418,-3.761490,9.913397,8.801057,-7.077493,-5.512444,-5.504723,3.976474,-0.953849,-3.090270,9.201914,3.763493,5.095221,3.515494,-3.723421,1.267016,4.017898,-0.539886,-6.683306,2.097046,7.614104,9.310659,-9.169679,-2.435634,8.969687,-4.500012,-5.825463,9.832500,0.078250,-1.189294,2.312147,1.342259,9.085420,-9.961507,4.379548,5.938358,1.829913,-9.254783,6.035967,-5.581764,5.949237,6.865055,9.803024,-5.011154,9.434097,-4.550011,-1.869975,2.971315,2.811000,-6.670776,7.702792,-9.509359,-1.353904,9.781696,8.449016,5.183795,-2.934787,-2.465125,7.627815,-2.106361,2.827057,7.293847,-9.861481,-0.236319,-3.380313,-5.155570,-1.056488,9.401866,2.730997,-5.920095,-5.001185,-0.639918,-5.112495,-8.178959,1.060213,-3.649693,0.322462,-3.851932,-2.508751,-0.598918,4.643344,-2.267397,0.439037,8.756178,-5.672509,8.648225,7.027683,-6.417194,-8.040907,6.951476,6.001285,-8.843377,9.537418,4.161399,4.003396,7.691818,-8.703216,-7.944127,9.376641,3.234447,6.445031,-9.884431,-7.927334,-6.677403,-9.890511,-6.902008,4.803932,-7.601054,9.728327,-7.393256,6.801310,-5.989090,-2.232940,2.459187,-4.106664,6.954702,7.737713,-3.527452,-1.003597,-5.516308,-6.957846,4.862955,-2.101231,-0.192099,7.355211,-0.914245,-0.846915,-5.089311,-1.506651,-3.336385,-2.245104,-0.501035,-0.430326,0.540541,-9.376442,0.347486,-4.072103,-2.125344,-5.263091,1.579322,-5.063803,0.183665,-0.327714,0.797272,1.244022,4.210139,3.119218,-2.433837,-2.849979,0.816442,6.883498,0.535848,8.766524,-0.901544,-7.191136,9.582572,-5.758599,-4.519600,-3.953199,6.107313,2.291506,-3.974917,-2.786911,-2.229782,-2.125941,3.873876,-3.741512,-8.185175,4.950812,-4.457209,-0.363705,-4.113054,-5.549770,2.880166,-3.590628,-6.450576,7.586656,-2.409585,4.151050,-7.955210,-5.864016,-0.257155,-7.065976,-8.057158,8.577433,9.835104,-8.465946,-8.108055,-8.793018,-4.243592,-8.651151,3.494261,4.884878,-2.574611,-1.506201,-7.300497,-5.840254,-9.098784,3.008980,-8.586261,8.900258,-0.474081,7.900576,-0.571539,-8.254103,-1.009027,8.924390,-4.707779,-6.844904,-4.725019,1.267717,1.508576,4.142677,-3.908312,1.751388,3.589876,0.471601,-6.194402,2.848868,-3.943199,0.326869,-0.386307,-1.254336,7.028296,0.239382,-3.222039,0.216710,1.062535,0.618641,6.524809,-4.898111,7.155887,0.424511,2.984609,-7.209022,-5.998429,-5.179633,-8.248231,-9.714661,6.479054,4.121776,-8.967240,-2.850099,6.811767,-9.751524,-9.288381,-4.564841,-3.113755,5.978333,-1.378332,6.749061,-8.996860,7.130695,0.196073,-4.078210,-1.697766,-1.701439,-7.115449,-4.542622,-8.682281,9.440668,3.393531,-8.821602,7.712676,5.952067,6.918580,-6.285364,4.383058,-2.764977,6.134978,5.548237,9.835574,2.957210,-2.091782,4.949054,-4.845554,6.224924,-0.026158,6.207892,-7.653016,4.512674,8.061502,8.448816,-1.198391,0.800439,-7.789191,0.235370,-6.677719,-8.377869,-7.666637,2.719500,-1.940703,-6.079358,-7.712710,-4.070070,0.402187,-0.648651,2.101752,1.405955,-9.590367,-9.232171,0.293399,-7.723054,-1.376788,5.707032,-4.289059,2.713941,8.223656,-2.109877,6.671068,-4.276171,-3.470651], dtype = "float64")#candidate|7167|(660,)|const|float64
const_7168 = relay.const([5.665926,-5.096088,-5.843060,5.482323,8.693240,7.144722,-8.214919,-8.317223,-9.481402,-5.530408,8.223358,5.927753,-7.543793,3.914341,3.333637,-3.889549,-0.260157,-7.513523,-4.863888,0.700474,9.024294,-5.060329,-6.782460,6.977744,7.319399,8.281902,8.896339,-7.161894,3.299563,-8.771083,-1.744023,4.445553,6.339416,7.566929,-7.447045,9.704664,5.460024,5.973725,-6.966931,-7.632419,-7.266036,7.153599,-2.090861,9.890138,4.766056,-7.139123,-0.202704,-7.459963,-4.237449,-3.808865,-7.288423,-7.463363,5.398541,1.324640,9.844567,7.314927,-9.393949,1.827515,6.879508,-5.574282,-7.922814,-0.482998,-1.590095,-8.083359,-7.901418,2.247167,5.829016,-7.244524,-0.749555,-5.298448,3.828042,4.391988,-7.015528,-4.906288,-1.007198,-5.250939,9.691201,0.494928,2.677460,-8.348308,-3.490181,-1.722238,-4.442364,6.700634,4.915786,-1.104593,3.611576,-3.031147,-0.737236,9.359974,5.833099,-4.446637,-8.061176,-9.587418,0.898570,5.169701,8.588551,5.831742,-5.164544,-5.361392,8.759554,-4.844934,-7.575723,-2.332841,2.322387,7.740840,-7.203742,-0.495332,-9.109786,-2.704400,0.550806,4.957510,-8.700195,-6.002472,0.128577,-3.694125,1.703925,-7.157924,2.543963,3.343019,-1.997760,2.751740,-9.096184,-3.677909,-9.883003,-0.723817,-1.308656,-7.505388,6.557170,-3.025480,8.310388,3.713594,7.306556,6.106469,-2.935822,-6.930843,8.543506,0.975101,0.516754,-2.700501,6.443467,3.768704,1.669301,-0.935716,2.528613,4.079928,4.795889,5.911143,-4.019294,0.278437,3.173301,-5.267768,9.319368,-4.296155,1.585359,-7.048181,-0.553315,-4.438018,-6.110760,-0.958556,3.328140,-7.901612,-2.540955,-2.287828,-1.460145,5.864115,6.444443,9.326119,-0.845696,5.022553,-9.317361,-9.213174,1.738986,-0.291922,5.930772,5.191445,1.994602,4.631156,-5.588448,-2.292564,3.173884,-3.348797,8.744073,4.665888,-3.226796,7.913828,-7.658032,7.238988,1.003858,1.857760,-0.215963,2.852548,6.343639,4.218033,-8.293190,-2.659277,4.743097,-1.897651,-5.664029,-0.608553,-7.315291,-0.109093,8.215354,7.044331,0.352244,2.308046,3.448948,3.932284,6.780745,-4.197775,0.468643,1.041713,-0.159651,8.767159,7.862121,7.341705,-9.474750,1.542812,3.651038,-5.704308,0.366201,-2.994154,-0.766107,5.725352,-2.474015,-3.123224,4.195253,-0.336970,3.264750,-9.452685,-1.542511,3.246774,7.891451,-4.266274,3.873161,-3.340546,3.918411,4.965177,-5.802264,8.580096,8.591585,-1.817032,-2.719870,-0.695022,9.783342,-4.125237,-8.884229,-0.521005,-3.044310,-5.087296,4.206215,1.057174,1.188289,-8.026591,7.549303,-2.877644,6.819074,9.069639,6.122968,-8.265278,3.940892,-4.018179,-6.670853,6.208604,-9.550624,-9.216805,-9.588945,-2.080661,-3.154173,-9.107424,-4.791545,-4.449972,7.068589,3.761944,4.364014,2.865711,5.430785,-4.179545,-4.077688,-5.088631,3.278302,-6.636322,-5.510388,9.425827,-8.472192,7.303120,-3.863399,-1.904650,9.124594,9.155173,2.173280,8.892893,-7.918354,-1.929898,-7.539651,7.130362,7.557112,0.721482,-0.350046,2.939556,-0.591196,-0.899613,-9.898064,0.698710,-7.721313,0.081574,8.749128,-0.721325,-4.662149,3.963584,-2.898297,6.518775,-7.509431,8.035359,4.352042,3.309086,2.206343,6.076413,0.700747,-4.402415,2.179608,8.776031,-0.539324,-1.344128,8.965172,2.137669,5.331779,0.451882,-8.687198,-9.973999,5.057004,3.759491,6.711422,4.157734,2.760172,3.383292,1.757051,-2.860358,-6.838062,-2.211386,-8.025811,4.089270,-1.831226,9.521121,-1.422641,9.486014,-0.009976,-5.812160,9.301518,-3.592739,9.834788,0.273935,-4.619983,6.594007,-4.634378,-4.951696,2.761487,-4.869149,8.483141,-6.328487,-9.105564,3.193825,0.677995,-7.579434,2.524324,7.613281,-2.114530,5.209135,-8.115148,-5.370965,4.871982,1.179658,-3.354977,-4.676390,-3.757324,5.012460,-1.046149,7.478798,4.784452,-9.108071,-0.508713,3.333128,-3.001932,8.151609,7.583148,-9.029974,3.163265,-9.515723,6.582286,3.180378,1.641258,-9.428085,6.013546,6.735482,-3.406033,-0.770371,-6.534282,2.279899,-9.140199,9.521244,-1.442786,-6.740315,-1.081236,-3.420166,-1.441418,4.952036,-2.315898,8.131616,2.437896,-0.905395,4.414633,-4.998499,8.339423,-8.380548,-1.872333,6.294115,2.439064,-6.090002,-5.731589,-1.826641,-7.568817,8.578629,8.433561,6.972723,1.605729,-4.561492,-3.046616,-8.299785,9.512139,5.494808,4.658424,-0.254980,2.727779,-8.172844,0.643591,-2.457482,-5.398404,6.377557,-0.557961,-0.706348,-2.193728,-1.315599,7.756815,-0.525587,-6.550765,-9.389840,6.786146,-8.912829,-1.438025,-3.853261,4.135517,4.039429,-1.344270,-5.455328,2.308250,1.028455,1.853948,-3.458277,-7.248496,4.977314,8.170366,-4.224612,1.918623,7.702047,1.544375,4.978607,-5.832842,-2.221327,0.802050,1.962863,1.090479,8.425902,4.756044,6.353335,-0.993097,-7.339897,5.384876,-4.944105,2.398466,-0.802994,-7.567311,-7.103886,-6.866182,6.665414,8.899467,9.003917,8.896097,7.771164,-9.890615,1.038850,-2.936462,-2.853210,-5.021896,-7.590536,-3.134689,5.341569,-7.773252,7.444464,-8.251571,8.988279,-3.981396,9.277646,3.265707,-4.053898,6.848492,-9.961669,3.801948,4.350696,-1.465844,0.162803,-6.738760,0.797680,-5.277936,-0.201875,6.520295,-9.256840,-8.643263,-2.665197,2.902379,0.817979,-4.305587,-1.631366,7.804678,3.358088,5.993249,-4.644611,4.039948,-0.905057,1.374120,9.822401,-8.461923,-5.149995,3.622455,-2.408804,3.207478,4.486359,-9.156971,3.280919,-9.966630,2.915063,3.411048,4.393063,3.466070,5.552277,-2.213458,2.594848,-5.425564,3.783158,-6.828838,-9.235223,-9.390512,6.817203,6.162837,-2.749323,-5.904783,9.496500,7.383952,-0.077127,3.377058,0.732166,-6.214613,-9.103077,-8.134905,-8.876587,-7.883070,-8.232062,8.593884,9.597560,-8.275992,-2.875785,0.231578,7.478461,-1.787553,7.011302,2.311687,-0.885806,6.575729,-0.732543,-1.517662,7.340764,-7.062153,9.890392,9.460201,-7.836481,-1.177190,-3.005718,4.896521,3.240582,-2.087287,8.651303,2.098586,9.336811,-1.000425,8.445283,3.281462,4.838705,-3.580266,9.665593,2.855343,-6.088074,-7.487258,5.695730,-3.972060,1.019786,5.135662,-9.632800,-9.584610,-4.436066,1.415091,-4.606298,-3.479455,-6.054321,-8.332883,-5.062366,-7.040701,-1.325328,-6.812284,-4.025048,-9.487111,7.341127,-6.180681,-7.353692,2.738520,8.195618,-9.862234,2.344502,-3.697773,-4.054177,3.342690,-8.943608,2.340534,-7.109308,9.481950,-2.184838,5.159448,6.769412,1.398758,-1.329206,-8.025182,5.345201,0.381131,5.801019,8.786758,5.720204,4.724047,-9.647049,-3.996447,-7.963826,0.997242,2.090312,-6.924013,-8.129916,-5.459330,-0.248062,-3.012127,-1.184863,2.187558,9.815976,7.741887,9.813583,5.309669,3.657007,5.727974,6.808727,-4.227006,0.513435,8.643996,-0.234418,-1.774556,4.646710,-0.029379,9.139398,8.329957,-6.441674,5.096869,0.955582,0.623380,-7.658279,-6.046170,9.563864,-3.480419,3.524319,-8.009047,2.404934,1.738044,-0.004922,-0.330165,1.037041,-1.668413,-9.595420,2.113966,-8.796342,-9.394161,2.061233,-4.839129,6.389778,2.772813,6.618450,-4.952160,2.094206,0.028781,-3.954884,8.588323,5.417584,2.894430,0.122885,-6.621327,-0.067050,-2.940831,3.376176,-4.998819,1.082759,-5.937812,-1.257947,6.060607,-6.796187,9.299642,9.233724,-2.372148,-8.299464,-8.255753,-4.414479,-0.232811,-4.850443,8.596550,4.112200,-7.632747,9.949428,2.694053,-8.925997,7.654039,5.359197,6.354288,8.275203,-5.455013,2.901048,3.335772,0.015565,-2.872265,-1.753279,1.926509,-9.381006,-1.945976,-2.914878,6.472767,4.272366,9.637000,4.819542,1.397684,-5.966723,-7.287342,-5.863406,-4.186691,7.477955,3.357730,-0.803180,-4.882419,7.465478,-2.838524,-2.620985,-2.756738,2.979565,1.765715,-0.785531,3.216612,-8.586312,-0.447164,-9.418184,-6.384470,-3.279047,7.105154,-9.788963,8.394623,1.432084,-6.358922,0.843568,5.858805,-6.279320,3.065586,9.288963,-8.706192,-0.400682,-3.280979,7.443536,0.643960,9.155372,-4.573523,-8.620661,9.942488,3.424139,7.345736,-3.199308,2.310728,0.404323,8.119354,-8.439250,-5.761829,-8.012759,6.232865,7.904148,4.909076,6.331636,6.958923,4.690658,1.674947,-6.580973,2.012781,0.631231,6.767724,5.535031,7.122432,-1.398524,8.942173,8.201683,-3.972457,5.534275,7.096829,6.680024,-4.728160,3.714906,-4.942100,-9.944064,-8.962181,-8.639404,2.007188,-5.338668,5.610626,-5.453938,1.685540,4.407491,8.474828,-0.387606,-3.476756,5.979686,-9.092957,-0.224866,-8.194632,8.276089,9.314819,-3.518856,9.500082,2.567846,-2.914413,8.015977,9.517842,2.919829,3.824494,6.702959,-6.885644,-5.578316,0.151091,9.154779,-5.785601,-8.109774,-2.152725,-4.603170,2.489096,2.455781,3.427944,-1.996904,7.947104,8.525107,3.513837,-9.362320,3.336396,-5.813820,-6.235993,-3.750897,-6.091830,-3.919390,-3.027398,3.807141,-5.292402,9.850353,7.463457,4.492011,7.941177,-7.465855,1.391846,-7.695159,9.480865,-6.200511,-5.063421,-6.782889,9.769219,-7.174681,0.630668,-6.552109,-1.177242,-6.488214,0.570876,-3.992038,-9.665805,7.468501,-3.460285,6.874866,-4.375397,5.124263,-1.876427,-3.403970,-5.858230,9.495538,-1.999848,9.806791,2.340346,-1.192055,3.560019,-6.553019,6.703952,-7.154183,1.685036,-4.352662,5.318822,9.891545,4.347302,2.283201,-3.803126,-3.291853,-1.888767,8.243422,4.552613,-8.045689,-5.451802,-7.582211,-5.702298,9.161988,-7.751862,-0.485329,2.105958,-5.441081,2.224865,-8.690714,-8.996191,-5.368156,5.398133,0.725373,0.737405,2.597291,-2.810691,-1.103396,-2.402427,-6.950898,1.883817,-0.785787,-1.126297,0.126735,6.933733,2.901631,-4.582722,-2.020447,3.973985,-4.316735,-3.949897,6.427053,-4.075633,4.619862,8.951790,9.104490,-9.259409,-5.147431,-8.605938,-2.286347,3.493406,-2.074889,8.625211,8.068789,-2.629919,-9.013371,-4.197842,1.831613,7.960038,8.536536,-0.967226,0.281748,1.610354,-0.329602,1.384322,6.940387,-0.037933,3.361714,-0.852888,2.722191,-6.906001,3.593095,7.337534,3.066684,-0.531466,9.944630,-2.661512,3.220971,-9.972501,9.617370,1.455431,5.179264,-8.040064,0.045358,7.624271,5.473178,-0.360251,-6.796822,9.465442,-7.708911,7.896932,4.028728,-6.458587,7.137364,-7.648786,5.977185,1.230800,4.214546,3.191755,-4.993767,8.344799,-9.326180,4.423856,3.964413,0.377662,-1.015687,-1.269773,-8.894409,-5.834264,1.471799,-5.707677,-4.609074,6.966999,-1.857857,3.561127,-3.565665,-3.581531,-5.940766,7.257631,7.914400,-7.249460,7.745096,7.158591,7.700812,0.390818,-9.577737,0.329660,5.417120,-2.535337,5.253412,5.920810,5.713489,1.887801,6.056677,0.648173,4.873717,-7.489468,-3.038037,-4.511931,0.111904,0.569801,1.713749,8.079903,5.980546,-2.682410,2.996238,-4.511616,-5.020185,-9.257882,5.483452,-2.483303,0.627222,3.969489,-1.082675,-7.763791,-4.386373,3.090625,-6.224976,-7.079149,-8.991975,1.861327,-4.866462,-6.045050,2.599587,-3.872820,0.040219,4.438682,4.898064,-3.553546,-6.152110,-2.503036,-7.975649,-9.402271,-8.237698,5.232966,-1.292094,-9.901860,-5.814938,3.571346,9.977811,-4.829984,-2.442748,-1.275642,1.228358,6.488469,0.609379,-4.047856,7.686542,-6.818817,3.164966,-7.516241,-6.982372,8.431048,-7.936385,-0.603961,-7.017199,-8.975068,-3.672686,1.777280,9.822327,2.098223,-6.786099,4.706065,3.466586,1.105903,7.673861,-9.821826,-8.832274,-1.337547,-3.555256,-3.604857,-9.864198,0.893558,7.000359,-3.611802,4.556888,2.466475,1.026288,9.746809,6.851764,2.337327,-5.589367,-4.463282,5.303585,0.287782,-6.524890,4.644525,-7.136958,3.176278,7.890886,5.836928,-8.002168,-3.310349,1.522940,-3.432556,-4.514111,0.023934,2.360330,9.392690,-1.692303,-9.446809,-6.748300,3.215178,-3.903069,5.576779,-4.418502,-4.953018,5.989544,-5.208117,-7.469659,6.383495,1.303915,3.732762,4.328847,2.552150,-6.444164,-6.423514,4.920897,4.716296,-7.094841,1.161679,9.196422,4.818670,-7.424552,7.872098,-3.513018,2.319029,1.212841,-6.062099,5.092902,4.131483,8.921969,6.371916,8.821138,-4.994492,2.443434,3.666612,2.262864,0.617056,-2.585936,-5.405464,-8.712729,-7.570099,4.128288,-8.960481,3.889887,-9.825560,1.440931,2.406740,-9.605899,-8.117573,-3.116435,6.835020,2.425371,3.470098,1.638732,-3.520845,-2.839697,-1.083650,-7.431008,-0.237044,-4.234032,-3.952586,-2.690112,-1.338293,-6.133080,-3.150978,-4.607075,-0.968058,6.091932,-6.793327,-2.827657,-8.063824,0.991915,-6.837434,3.197784,2.952023,4.195649,7.100991,-2.325619,-9.668940,-6.395590,8.783500,-9.640068,-7.149435,9.060014,8.847706,-4.108050,-2.511239,-6.403034,3.450648,-7.999075,1.132516,-5.617365,9.134079,-2.100845,8.087412,7.393458,-9.824066,1.861667,2.630596,6.421133,-6.782712,-0.933298,3.834546,0.547988,-8.119639,-3.223183,9.640220,-9.093588,7.690167,-6.809497,8.636228,1.651288,-4.353335,0.889901,2.829465,-6.687352,-7.384134,9.790045,7.918906,-7.991317,-3.258941,1.083894,1.947517,-6.948650,-6.523693,-8.116931,-1.382390,8.193906,-2.455433,-1.271657,1.185241,6.416630,7.447124,-4.267967,0.442333,-5.586928,1.593526,8.082856,6.474196,8.478205,-9.064518,-4.327242,3.777085,9.107716,-6.701264,8.483502,-6.514532,5.102566,8.052571,-0.077402,-9.804242,-4.485250,-4.091678,-7.953305,-4.826053,-4.267327,0.952127,3.795557,-0.854435,-6.548553,3.766318,6.857038,-7.713804,8.410339,-8.675931,-0.828224,7.187240,-4.435908,-5.386071,6.795954,-9.745682,-4.638723,-3.065158,-5.280981,-7.460657,5.263051,-2.020054,-2.292744,8.333261,8.574398,7.951350,-8.836764,-3.293924,8.580865,-2.176480,4.244738,-8.595131,-5.015963,-4.458073,6.801450,-4.962640,-8.249965,4.379045,8.306072,-8.747737,-8.921141,5.853608,-5.502761,2.306527,-3.058555,1.662222,-8.079233,7.586960,-7.549102,6.042673,9.537108,3.206787,1.754317,-4.263745,9.367411,8.173610], dtype = "float32")#candidate|7168|(1365,)|const|float32
call_7166 = relay.TupleGetItem(func_1306_call(relay.reshape(const_7167.astype('float64'), [10, 6, 11]), relay.reshape(const_7168.astype('float32'), [1365,]), relay.reshape(const_7168.astype('float32'), [15, 13, 7]), ), 1)
call_7169 = relay.TupleGetItem(func_1310_call(relay.reshape(const_7167.astype('float64'), [10, 6, 11]), relay.reshape(const_7168.astype('float32'), [1365,]), relay.reshape(const_7168.astype('float32'), [15, 13, 7]), ), 1)
output = relay.Tuple([call_7156,call_7158,call_7161,const_7162,call_7166,const_7167,const_7168,])
output2 = relay.Tuple([call_7157,call_7159,call_7163,const_7162,call_7169,const_7167,const_7168,])
func_7171 = relay.Function([], output)
mod['func_7171'] = func_7171
mod = relay.transform.InferType()(mod)
output = func_7171()
func_7172 = relay.Function([], output)
mutated_mod['func_7172'] = func_7172
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7212 = relay.var("var_7212", dtype = "bool", shape = (16, 8, 5))#candidate|7212|(16, 8, 5)|var|bool
var_7213 = relay.var("var_7213", dtype = "bool", shape = (16, 8, 5))#candidate|7213|(16, 8, 5)|var|bool
bop_7214 = relay.logical_and(var_7212.astype('bool'), relay.reshape(var_7213.astype('bool'), relay.shape_of(var_7212))) # shape=(16, 8, 5)
output = bop_7214
output2 = bop_7214
func_7220 = relay.Function([var_7212,var_7213,], output)
mod['func_7220'] = func_7220
mod = relay.transform.InferType()(mod)
mutated_mod['func_7220'] = func_7220
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7220_call = mutated_mod.get_global_var('func_7220')
var_7222 = relay.var("var_7222", dtype = "bool", shape = (16, 8, 5))#candidate|7222|(16, 8, 5)|var|bool
var_7223 = relay.var("var_7223", dtype = "bool", shape = (16, 8, 5))#candidate|7223|(16, 8, 5)|var|bool
call_7221 = func_7220_call(var_7222,var_7223,)
output = call_7221
func_7224 = relay.Function([var_7222,var_7223,], output)
mutated_mod['func_7224'] = func_7224
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6060_call = mod.get_global_var('func_6060')
func_6061_call = mutated_mod.get_global_var('func_6061')
call_7229 = func_6060_call()
call_7230 = func_6060_call()
func_74_call = mod.get_global_var('func_74')
func_77_call = mutated_mod.get_global_var('func_77')
var_7252 = relay.var("var_7252", dtype = "float32", shape = (1365,))#candidate|7252|(1365,)|var|float32
call_7251 = relay.TupleGetItem(func_74_call(relay.reshape(var_7252.astype('float32'), [15, 13, 7])), 0)
call_7253 = relay.TupleGetItem(func_77_call(relay.reshape(var_7252.astype('float32'), [15, 13, 7])), 0)
func_3462_call = mod.get_global_var('func_3462')
func_3465_call = mutated_mod.get_global_var('func_3465')
var_7256 = relay.var("var_7256", dtype = "bool", shape = (936,))#candidate|7256|(936,)|var|bool
call_7255 = relay.TupleGetItem(func_3462_call(relay.reshape(var_7256.astype('bool'), [6, 12, 13]), relay.reshape(var_7256.astype('bool'), [6, 12, 13]), ), 0)
call_7257 = relay.TupleGetItem(func_3465_call(relay.reshape(var_7256.astype('bool'), [6, 12, 13]), relay.reshape(var_7256.astype('bool'), [6, 12, 13]), ), 0)
output = relay.Tuple([call_7229,call_7251,var_7252,call_7255,var_7256,])
output2 = relay.Tuple([call_7230,call_7253,var_7252,call_7257,var_7256,])
func_7258 = relay.Function([var_7252,var_7256,], output)
mod['func_7258'] = func_7258
mod = relay.transform.InferType()(mod)
var_7259 = relay.var("var_7259", dtype = "float32", shape = (1365,))#candidate|7259|(1365,)|var|float32
var_7260 = relay.var("var_7260", dtype = "bool", shape = (936,))#candidate|7260|(936,)|var|bool
output = func_7258(var_7259,var_7260,)
func_7261 = relay.Function([var_7259,var_7260,], output)
mutated_mod['func_7261'] = func_7261
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4258_call = mod.get_global_var('func_4258')
func_4259_call = mutated_mod.get_global_var('func_4259')
call_7265 = relay.TupleGetItem(func_4258_call(), 3)
call_7266 = relay.TupleGetItem(func_4259_call(), 3)
uop_7271 = relay.acosh(call_7265.astype('float32')) # shape=(392, 4)
uop_7273 = relay.acosh(call_7266.astype('float32')) # shape=(392, 4)
output = uop_7271
output2 = uop_7273
func_7276 = relay.Function([], output)
mod['func_7276'] = func_7276
mod = relay.transform.InferType()(mod)
output = func_7276()
func_7277 = relay.Function([], output)
mutated_mod['func_7277'] = func_7277
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5486_call = mod.get_global_var('func_5486')
func_5487_call = mutated_mod.get_global_var('func_5487')
call_7316 = func_5486_call()
call_7317 = func_5486_call()
output = relay.Tuple([call_7316,])
output2 = relay.Tuple([call_7317,])
func_7322 = relay.Function([], output)
mod['func_7322'] = func_7322
mod = relay.transform.InferType()(mod)
output = func_7322()
func_7323 = relay.Function([], output)
mutated_mod['func_7323'] = func_7323
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6409_call = mod.get_global_var('func_6409')
func_6410_call = mutated_mod.get_global_var('func_6410')
call_7330 = relay.TupleGetItem(func_6409_call(), 1)
call_7331 = relay.TupleGetItem(func_6410_call(), 1)
output = call_7330
output2 = call_7331
func_7333 = relay.Function([], output)
mod['func_7333'] = func_7333
mod = relay.transform.InferType()(mod)
output = func_7333()
func_7334 = relay.Function([], output)
mutated_mod['func_7334'] = func_7334
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3126_call = mod.get_global_var('func_3126')
func_3128_call = mutated_mod.get_global_var('func_3128')
call_7373 = relay.TupleGetItem(func_3126_call(), 0)
call_7374 = relay.TupleGetItem(func_3128_call(), 0)
output = relay.Tuple([call_7373,])
output2 = relay.Tuple([call_7374,])
func_7375 = relay.Function([], output)
mod['func_7375'] = func_7375
mod = relay.transform.InferType()(mod)
mutated_mod['func_7375'] = func_7375
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7375_call = mutated_mod.get_global_var('func_7375')
call_7376 = func_7375_call()
output = call_7376
func_7377 = relay.Function([], output)
mutated_mod['func_7377'] = func_7377
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5363_call = mod.get_global_var('func_5363')
func_5364_call = mutated_mod.get_global_var('func_5364')
call_7395 = relay.TupleGetItem(func_5363_call(), 0)
call_7396 = relay.TupleGetItem(func_5364_call(), 0)
uop_7420 = relay.sin(call_7395.astype('float32')) # shape=(10, 14, 2)
uop_7422 = relay.sin(call_7396.astype('float32')) # shape=(10, 14, 2)
func_2578_call = mod.get_global_var('func_2578')
func_2579_call = mutated_mod.get_global_var('func_2579')
call_7447 = relay.TupleGetItem(func_2578_call(), 0)
call_7448 = relay.TupleGetItem(func_2579_call(), 0)
output = relay.Tuple([uop_7420,call_7447,])
output2 = relay.Tuple([uop_7422,call_7448,])
func_7457 = relay.Function([], output)
mod['func_7457'] = func_7457
mod = relay.transform.InferType()(mod)
output = func_7457()
func_7458 = relay.Function([], output)
mutated_mod['func_7458'] = func_7458
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7475 = relay.var("var_7475", dtype = "float32", shape = (9, 11, 4))#candidate|7475|(9, 11, 4)|var|float32
uop_7476 = relay.log2(var_7475.astype('float32')) # shape=(9, 11, 4)
func_920_call = mod.get_global_var('func_920')
func_922_call = mutated_mod.get_global_var('func_922')
var_7484 = relay.var("var_7484", dtype = "float32", shape = (1365,))#candidate|7484|(1365,)|var|float32
call_7483 = relay.TupleGetItem(func_920_call(relay.reshape(var_7484.astype('float32'), [1365, 1])), 3)
call_7485 = relay.TupleGetItem(func_922_call(relay.reshape(var_7484.astype('float32'), [1365, 1])), 3)
output = relay.Tuple([uop_7476,call_7483,var_7484,])
output2 = relay.Tuple([uop_7476,call_7485,var_7484,])
func_7491 = relay.Function([var_7475,var_7484,], output)
mod['func_7491'] = func_7491
mod = relay.transform.InferType()(mod)
var_7492 = relay.var("var_7492", dtype = "float32", shape = (9, 11, 4))#candidate|7492|(9, 11, 4)|var|float32
var_7493 = relay.var("var_7493", dtype = "float32", shape = (1365,))#candidate|7493|(1365,)|var|float32
output = func_7491(var_7492,var_7493,)
func_7494 = relay.Function([var_7492,var_7493,], output)
mutated_mod['func_7494'] = func_7494
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5435_call = mod.get_global_var('func_5435')
func_5436_call = mutated_mod.get_global_var('func_5436')
call_7517 = relay.TupleGetItem(func_5435_call(), 0)
call_7518 = relay.TupleGetItem(func_5436_call(), 0)
func_5298_call = mod.get_global_var('func_5298')
func_5303_call = mutated_mod.get_global_var('func_5303')
var_7532 = relay.var("var_7532", dtype = "int32", shape = (360, 4))#candidate|7532|(360, 4)|var|int32
const_7533 = relay.const([[3.393625,-1.133869,5.728744,4.949856],[2.625780,-4.543176,0.457355,-7.565308],[-3.181837,-0.515345,4.512910,-4.859858],[8.022246,0.314070,-2.836150,5.856806],[4.697545,-3.518605,0.629081,-6.753689],[8.792591,-1.206716,4.181805,2.069482],[9.734426,-1.424949,9.169574,-0.634138],[-5.054498,-5.488785,5.779552,-3.424748],[6.674094,-7.038620,-8.230488,1.292572],[8.672347,6.036349,-7.925339,-5.263346],[-4.857731,6.375744,1.579141,-6.181432],[0.411532,-4.537777,-5.024246,-7.631752],[3.811087,-7.362223,9.285865,-4.756051],[2.110428,4.475730,-0.400873,7.574382],[-5.266392,-0.400326,1.203462,-8.911801],[8.795473,1.782400,2.440028,2.233167],[-0.010373,7.277456,3.029530,8.473871],[7.095178,7.131736,-5.269431,-5.086499],[8.122076,9.945684,5.819414,9.055432],[-2.070309,-6.715729,-6.916740,1.228540],[-8.518046,9.062326,-5.115612,-0.763150],[3.178102,8.505260,9.410468,7.317425],[4.096623,9.983887,-0.295325,9.576153],[5.308891,-5.503161,-2.955774,0.623633],[-5.082740,-5.595571,5.676408,-5.835684],[-6.556112,-3.525566,6.530932,-1.767262],[-5.871228,8.730663,2.914448,-0.024958],[4.034460,-0.614993,-8.991671,-6.972903],[-8.038534,9.787821,6.268688,9.443228],[2.773604,6.275589,9.974782,8.695755],[3.322796,-4.775252,-4.453714,-0.928937],[0.586472,6.070307,-0.335921,5.529545],[-1.690868,-9.566764,-2.761994,-4.669557],[9.715833,8.968083,5.301524,4.099164],[6.627739,8.157139,-8.622072,4.895691],[1.948880,9.885761,-3.082772,-9.625043],[2.847460,1.174557,-8.199799,6.078256],[6.149933,-0.710651,-8.733464,-8.951572],[7.218089,7.977117,9.930021,-1.839223],[4.966655,-2.938910,-8.085908,-7.180508],[2.464974,7.587718,2.478350,2.967456],[2.496763,-7.821001,9.577299,-5.656748],[-1.274142,-5.490848,-6.789647,-0.338630],[-9.497958,-6.169029,-9.503856,-3.045254],[-6.138538,3.742237,7.070644,-4.808338],[3.239292,-8.494645,9.881333,9.843121],[-1.769607,3.560431,-5.040496,-4.301304],[-3.358303,9.626078,5.120070,-9.395064],[-7.482206,-7.980836,6.368280,-7.623719],[9.339826,1.744625,9.041215,-2.597487],[9.553673,0.739765,-9.069669,-9.305141],[-8.084662,1.689666,-5.778597,8.913761],[6.656858,-0.978426,-1.359812,6.731524],[4.879149,8.878757,-3.857134,-0.027006],[7.663338,2.581331,9.191221,7.707220],[-7.674851,6.689554,-7.410257,5.039912],[-0.520893,-9.671889,-2.460037,-0.935902],[8.555079,0.755622,-4.897602,9.418488],[6.917776,7.786789,-8.845002,-4.259071],[3.946225,4.708769,-2.616772,4.228391],[-7.785166,7.032442,-5.682537,-6.050411],[4.470661,4.491034,2.832530,-9.844825],[2.795262,3.216596,-0.452953,-1.231452],[-4.366811,1.464474,-7.315587,9.784043],[0.631285,-2.810278,7.021900,3.920368],[-8.386894,-5.970845,9.060988,-1.745657],[-2.036224,-9.379341,5.817363,-6.406320],[9.919599,-3.554920,-9.630358,-4.290075],[-5.505614,8.018558,-6.636179,0.346479],[2.655287,-6.305735,-9.999962,-4.128494],[9.483792,9.731923,4.411343,-8.335059],[1.843570,1.603920,-1.111128,0.789133],[-6.701471,-3.412175,9.545179,5.978188],[3.765266,4.390439,-4.299527,-2.478698],[8.454815,-8.174009,5.763790,6.603967],[3.128286,0.147202,-9.853368,-9.824581],[6.440465,5.926162,-3.319372,-7.405834],[3.203541,1.363953,2.733369,4.339750],[7.133312,5.830405,-5.110313,-1.239383],[6.802424,8.914085,-7.364378,-1.227568],[2.391364,8.161885,-4.939887,4.081173],[2.313489,4.384616,2.310955,0.676893],[-6.599676,0.318167,9.764206,-3.729326],[3.509246,1.349137,-7.113977,-2.628383],[4.605520,9.179863,4.162371,7.552724],[-3.977793,4.219599,6.407588,-2.684918],[6.231263,-2.135127,1.123848,-0.652956],[8.000434,1.342487,9.522902,9.940515],[6.844154,7.704085,5.213516,2.617089],[5.805409,0.584314,-4.793093,5.780345],[-3.447059,-9.426853,-2.927963,-5.238726],[-1.190026,8.913442,8.431164,8.371141],[-7.927274,8.394696,0.267450,4.892921],[3.752895,-4.269526,-1.191010,-4.480152],[2.983193,7.122457,8.390315,9.177238],[5.434407,6.323365,1.826924,8.889171],[6.699748,-2.005034,8.597902,-7.668854],[-4.663455,-6.738143,-9.574206,0.884376],[-9.662984,8.211033,3.574117,2.138768],[-8.221159,4.979785,6.482733,7.825010],[-8.838455,-8.959075,7.504525,-2.333082],[3.497239,-5.674451,8.094180,4.778968],[-9.408306,0.007526,-9.329532,-6.566807],[-9.173144,-8.014736,-2.991931,-1.130410],[1.510375,0.470337,8.849317,9.678462],[-9.717245,-0.354926,3.521212,1.834315],[0.203341,4.885670,-4.368786,-5.060834],[-6.995797,-0.627385,-3.039660,0.301509],[7.079649,-7.985432,-4.448420,8.062630],[2.337367,3.470497,-9.533639,7.885792],[4.150804,7.764497,-0.348083,-5.328573],[-8.970825,-1.476964,-9.000302,8.034465],[-9.477329,-0.976178,1.727773,8.532647],[-8.775619,8.106359,-0.033246,-4.755387],[-1.146245,0.085342,7.212471,0.173495],[-2.803362,-0.430828,6.238014,3.091877],[0.674012,-2.347683,6.632414,5.788875],[-4.576274,-1.104377,3.871147,5.684447],[-9.408650,2.866375,-9.782061,-7.076723],[-2.988964,9.357371,-1.973035,9.170234],[9.547956,-6.455846,3.976346,-0.382206],[-9.869201,-6.906425,9.432734,5.260876],[-2.729138,9.701973,2.003039,-4.027904],[-7.306999,0.591223,-2.965150,-9.466140],[2.238008,-3.333497,-5.035454,-5.964834],[-2.416197,0.727858,-0.836902,1.698987],[6.146082,-1.694351,-4.435344,-0.599958],[-1.214171,6.338223,-4.331251,-8.548873],[-3.149771,-1.620882,4.051644,-7.325119],[-4.832049,8.741204,-7.122437,4.694230],[4.991297,1.412492,-5.637313,-6.525408],[1.365841,2.967873,1.829050,6.098560],[8.567485,1.248115,3.464124,-9.280590],[4.893128,-9.712100,-5.932226,9.582534],[5.591594,-0.332485,-7.607362,1.688731],[-2.721214,0.321868,-2.582965,-6.851038],[-0.025609,4.632727,0.536305,5.059358],[0.705226,-3.829243,-1.259473,-3.647357],[-0.302357,2.202380,5.335264,0.930802],[-9.501950,-4.092001,3.317522,-9.364735],[-5.856182,2.823000,1.398987,-6.561355],[7.981766,-0.170288,-7.733748,6.034236],[8.070208,7.899509,6.093979,8.457755],[5.134142,6.127035,-7.823921,-3.846336],[7.193147,-1.028811,3.644754,4.280870],[2.626830,-1.922572,-8.746201,7.357729],[-1.295598,0.442834,3.713325,8.588533],[-6.388484,9.690446,-7.819491,8.160854],[-5.964991,-7.421673,-1.172288,-5.253034],[-4.721176,4.004913,-8.262629,-9.705834],[7.749661,0.650461,-4.915527,8.350445],[5.516235,3.759888,-1.007440,4.336503],[-2.177174,-9.918877,3.461870,6.175903],[2.336262,6.144992,4.482914,3.600162],[6.744102,3.710790,2.610815,-3.422659],[9.315167,2.542703,-3.838331,-8.255180],[-9.564842,7.983633,7.863343,6.314430],[3.441428,2.565559,8.184467,0.995350],[2.059017,-5.181522,8.414114,5.335698],[6.077599,-7.701899,6.117728,-6.068123],[-1.967212,0.155791,-8.647029,-7.707692],[8.953468,-4.352529,-7.733546,1.207065],[-8.909617,7.524318,-9.961286,2.670241],[2.095052,6.467750,-8.425151,-2.876553],[0.338590,0.568849,4.805587,4.235844],[2.102051,2.453718,3.938761,6.152389],[-1.571102,0.130365,3.120106,-1.599567],[7.872219,1.665011,-0.678358,-0.951460],[7.909035,7.450008,6.915665,-0.616522],[5.760865,0.232253,-5.640283,-0.014627],[9.875099,-4.704439,-4.451632,4.978828],[-7.896259,-6.657661,-0.807054,2.024274],[-6.619049,-7.916926,6.725612,-0.577171],[-5.974449,-3.438290,-1.803137,-4.050037],[-1.007919,-2.072126,4.977121,-5.265419],[-5.443328,-8.039107,2.921013,-0.964154],[6.604805,-2.053454,0.919455,7.466114],[-2.271277,3.113683,-9.421055,-2.864740],[-7.001772,-5.626145,-7.218029,9.292556],[3.082687,3.372954,5.760289,-2.578962],[2.847407,-7.435640,9.932693,-3.823269],[2.243407,-5.009132,9.888981,-5.003016],[2.874161,-9.862571,-5.197343,-2.544783],[7.872269,-4.281852,9.793695,5.013699],[2.874948,-7.256590,5.283067,-5.728877],[-0.705516,7.137643,3.035712,1.471608],[-2.565446,-7.411381,7.697254,-6.528114],[3.445855,-8.308535,3.152134,6.734022],[0.788687,7.338472,-4.425385,2.418556],[-7.705810,5.323393,-1.512020,-2.302071],[-9.395245,4.774826,5.050197,-2.748488],[1.120228,4.705155,2.532917,4.282020],[-6.643742,1.139264,9.336161,3.944301],[2.085717,8.970763,7.472457,-2.334550],[5.987378,-8.422055,4.784733,7.266010],[4.185925,6.437406,3.451075,8.926284],[7.570731,-3.298400,1.841537,-5.261081],[-7.818973,-1.889540,0.159500,6.670121],[4.197803,5.086228,4.645767,3.909333],[-1.025612,3.571133,5.776934,0.652326],[7.157483,3.147531,-8.170063,-7.522165],[-1.245388,-4.203088,3.393566,-0.338401],[5.252827,-8.537442,-8.945623,8.948750],[-8.478940,-4.383311,4.776396,4.176502],[9.821414,2.654394,-5.855808,2.855347],[0.077144,6.281232,3.099620,4.522648],[2.809682,3.014058,5.089296,-0.508652],[7.277931,5.278362,7.468442,-0.579368],[-7.900630,-3.258649,8.086591,2.625648],[8.576578,4.177874,-2.448832,-6.481924],[-9.396136,5.263293,-2.277304,-9.398395],[-7.785956,8.222008,-1.688628,-7.741283],[6.473474,9.763255,-0.169758,9.566899],[0.322863,7.329805,7.438251,-9.925402],[2.580329,5.927866,1.264974,-1.991580],[-6.845234,6.252171,9.796194,6.256806],[-8.494714,1.058603,1.517335,9.086465],[2.391176,-0.703111,-3.551831,1.379269],[-5.949232,2.761966,-0.172943,4.964961],[2.026252,1.242374,-3.001724,-2.498597],[5.181315,-2.030466,-9.042914,-1.942245],[-0.548776,6.781098,3.149122,-8.664745],[9.077400,7.688350,4.275515,-3.024154],[-2.357953,2.426406,-6.892378,8.624830],[0.045131,-1.922660,5.930269,-6.283596],[6.959257,-4.008066,-2.945176,-0.641071],[6.760608,2.438579,-5.031145,2.143448],[6.371389,-2.399289,-1.290223,1.486806],[4.599876,-0.471688,-8.225155,-7.577056],[-0.185539,-5.628704,2.385471,-2.933717],[2.577235,-7.223993,-2.034362,-8.289640],[-2.844247,0.620448,-9.613033,6.232420],[7.623401,4.680691,-0.185554,6.700010],[-7.268129,1.542062,0.108109,-6.101330],[8.942150,-8.077096,4.414753,8.622351],[9.263906,-1.970543,1.263614,3.983278],[5.429282,0.884408,-9.300852,-4.494216],[-0.866317,4.726294,-1.819934,-1.118445],[-2.382073,7.965370,9.090416,5.090967],[1.088563,3.648894,6.394680,9.919739],[9.866265,-3.946530,-7.471207,-4.154726],[-9.428299,-7.782485,-2.757108,-5.261902],[5.528511,-2.957010,-1.982095,-4.442742],[1.674760,7.944655,-7.381308,-4.249060],[5.795771,-7.578061,3.721468,-6.519121],[-8.252427,-6.881848,-5.034367,8.053712],[-6.493607,-4.453426,5.929774,8.522694],[-8.693033,-3.107898,4.319792,-9.750541],[2.521515,-1.306188,-8.478645,4.855778],[5.979985,1.842031,-5.355283,-6.692771],[-4.820221,-0.464313,8.098050,-8.533881],[-5.949680,-5.806189,4.511523,-3.072980],[5.865007,-7.431009,2.580424,-2.858184],[8.799450,-4.772081,-0.240380,5.274184],[-9.297830,6.611057,4.126537,8.178928],[-7.276756,1.325356,1.244017,-7.092835],[0.415711,-2.633905,-8.437752,5.118357],[-4.399140,-1.610343,-1.449144,2.216886],[6.630455,-8.801305,-0.021372,-5.802774],[-2.243605,4.692559,3.986545,-8.977768],[-1.478233,9.601759,-1.947904,-2.998464],[3.566746,4.163006,-3.297446,-1.242178],[7.140203,-2.693639,-4.081039,-6.179590],[4.467941,-2.093444,-8.807716,0.791464],[3.478377,7.660923,1.168150,-0.043482],[-3.805172,9.491473,-6.286035,-6.866568],[-5.802845,-5.705688,1.688447,0.529697],[-8.551550,6.867908,1.327441,0.744563],[-2.356669,-2.128092,-6.220973,-0.557602],[-4.916160,-2.789347,3.858107,4.340803]], dtype = "float32")#candidate|7533|(270, 4)|const|float32
const_7534 = relay.const([-8.568950,7.236644,-7.332286,6.458713,5.510101,-0.045959,-2.709009,-1.354872,-0.846605,1.649987,-7.488584,0.412494,8.395336,0.828819,-4.665188,6.121411,-6.394364,8.004410,-7.666212,-1.392555,9.233761,0.418060,6.091455,0.876606,-6.734533,-6.238273,-6.676658,-7.988451,-0.141378,-6.978953,9.468012,-8.202992,0.843566,-0.949381,-6.751880,2.926539,-3.297689,8.610140,-3.660394,5.719635,-9.016872,2.604012,6.893562,-6.904579,-1.449823,8.762087,-5.420540,7.328025,6.503676,2.761576,-0.546150,-8.544282,3.734894,-8.517011,-0.620512,-0.988978,0.774562,0.260522,0.284973,8.641656,-3.863683,-9.284893,-7.297255,-2.462481,3.875734,9.956830,3.784283,-5.259699,-5.138510,-3.106396,-5.740542,4.027992,6.596777,4.293425,-9.003208,-9.017040,7.854539,3.752823,-8.210601,5.236330,-4.617276,6.803179,-0.285164,-6.065177,-7.274217,8.888451,-5.352157,-5.130991,8.326847,-8.952775,-4.250347,7.673073,5.558516,2.253282,-6.344547,-8.514810,-7.145249,-1.599913,2.382140,5.593433,-3.806001,2.213636,0.147365,-2.491840,7.737630,-6.727771,2.972725,2.656044,-2.281888,-5.714104,3.339957,7.160325,-0.303386,5.750180,6.967496,1.149589,5.795789,-9.079098,-6.948287,-2.185010,6.646359,-1.792882,-6.180729,-8.794188,-6.935296,1.112220,6.071291,8.815088,7.467105,9.422912,7.956006,-6.967673,0.455764,8.819926,7.833838,6.940447,-8.320380,1.584002,3.273139,-8.945199,-3.827461,-4.013965,-1.065203,2.246704,-3.943997,-9.141025,5.374284,-5.682223,7.257988,-9.780905,6.504578,-9.973465,0.459988,-1.494211,3.983440,0.891153,6.869071,8.394165,3.625957,9.762299,7.533009,-9.643818,-8.914523,-5.861713,-5.068890,-6.072105,-6.060528,-6.858988,-1.984248,2.003241,1.947103,4.137830,-7.466217,-5.817600,9.419389,9.960309,-0.229738,5.193378,-9.896860,-3.692139,-7.040008,9.624351,9.501081,5.300075,-5.398555,3.805414,2.678095,-8.988492,8.077173,8.272398,-9.988087,-0.502271,-9.285140,1.706642,5.559813,-9.119260,-0.818677,-5.841377,9.121840,8.092009,-3.567238,8.473501,3.755331,6.981076,-0.780713,2.726570,3.848697,0.741626,1.097104,8.149903,0.695670,8.304118,9.373445,9.120001,6.010057,-1.642364,-6.919218,4.150757,-3.410271,-2.256616,8.900976,3.898686,4.517672,4.257238,-4.346435,3.014559,-8.653334,9.567221,0.402175,-4.377285,-9.785755,-2.046308,-5.255106,-7.274080,2.270180,3.075385,0.925779,7.278641,-1.664750,0.262243,7.153034,-3.483992,5.759111,9.253300,-5.300022,5.476327,8.378747,8.887021,6.747800,-9.244562,5.722515,-7.524673,-0.870061,9.197530,-2.258592,1.514277,-1.144775,9.293973,-1.163255,-5.281342,-2.869289,7.489095,6.304435,6.267488,-5.548039,8.147859,2.272059,-7.424844,-3.659288,-8.335233,1.828642,-2.863516,8.867776,6.442674,4.088774,8.014378,-0.821471,3.088539,1.280782,-6.384515,-8.726090,6.066521,5.823751,1.310043,-9.501012,-6.640851,-7.477731,1.818961,-1.721404,8.404424,-8.774323,5.325158,1.739713,-3.066706,2.248167,-9.748854,7.958156,-3.575849,-7.196451,-9.581525,8.913470,-4.537804,9.892890,-9.308308,-1.637499,5.967170,-8.027467,4.319891,0.730849,-9.871890,5.811815,-3.222966,0.386953,0.755915,4.328113,-1.227061,9.514449,-7.810117,-1.519411,-8.934696,-0.998620,5.297499,0.426154,-4.660746,-0.824175,9.334928,6.701856,-0.360593,-8.529930,-9.805435,9.299843,0.811344,0.465698,-0.297505,-2.323876,5.907454,-0.988066,4.593565,4.621103,3.056660,-4.712517,9.155893,-7.171908,-9.180952,-9.653409,-8.788552,9.210867,-9.126107,1.488288,-1.606729,4.920044,-0.388755,-5.303548,4.292927,9.416403,-8.432035,-4.074275,-0.279311,6.078984,8.050474,9.510047,-0.306969,7.786460,-8.405971,0.179647,-9.876627,-8.687893,-3.465604,-6.866306,-4.319592,-2.709369,-1.859003,6.549242,-1.568838,2.737842,-4.494639,2.256757,-6.886065,9.118885,-2.058502,1.088787,5.581612,9.790037,1.555822,-6.105163,-3.317986,-5.802912,8.618609,6.661625,-6.392456,8.449168,1.546694,2.830248,-9.952735,-3.927548,2.757425,6.400059,3.868118,5.732695,6.512970,2.562138,-3.390101,-9.674113,7.883467,4.725027,-4.003708,-3.860444,-5.668007,6.956638,-3.674289,3.721694,-3.598692,-9.656157,9.235696,-3.985152,5.242238,-6.216461,2.343002,9.367309,-0.211375,-8.893906,-9.592775,6.687935,2.802626,9.803618,-0.829169,9.990351,1.348250,7.096635,7.381753,8.102395,3.225547,3.214302,-5.368991,9.270512,2.923068,-8.801313,-2.800011,-1.105532,-8.691594,3.146564,-2.856785,1.495100,-2.953650,7.911919,-4.383659,8.910157,-6.511230,-6.691945,1.397996,-7.563301,-6.814508,-9.612565,-5.475418,-0.422317,-4.823203,1.777056,-7.203812,5.685198,0.847970,3.792042,2.362968,9.545675,1.366922,7.482008,5.013906,3.943183,-8.900278,-0.383512,6.780151,3.906574,-0.898850,-6.778832,-6.667373,-2.386063,-5.682554,7.863013,-7.548677,-5.156864,8.295069,-9.193658,0.538960,-3.953857,-2.815696,-7.970831,6.258760,6.042133,-9.075595,-5.209116,1.054977,4.226180,-6.494818,-3.868574,5.321985,-3.597906,-8.980171,-7.290112,7.089861,7.672509,0.532176,8.649262,1.736837,5.157406,-5.898732,-3.665544,-7.685693,-8.823793,3.773860,8.320969,7.118786,3.849053,-9.503121,3.841228,-1.491419,9.327446,-2.081850,-2.619653,-9.292527,5.842489,8.121351,-6.738084,5.660792,2.850395,9.103700,-4.282654,-2.552742,-8.609055,2.850374,-5.662309,-1.411932,0.181439,-8.652195,9.999069,6.182916,-0.912875,-7.720219,-6.372968,2.674357,-6.727208,-0.632448,7.108502,-5.648635,-3.658855,3.224473,0.163767,-8.688470,-6.720535,-2.484928,7.910405,-4.702005,9.214643,2.912286,3.543287,1.087631,1.821723,-1.932092,-4.140314,3.405904,-9.611233,-5.962095,-3.789590,-3.916583,6.922530,-6.865759,2.185079,-8.227635,-5.731367,-3.713745,-2.762871,5.002274,-2.833356,-3.287237,0.008923,6.777392,-1.145273,7.026875,-8.966928,0.399731,8.325078,5.215812,3.658182,1.925977,5.710426,9.054810,4.653918,3.767116,-1.321815,-1.619428,3.906292,9.678409,6.346927,0.320160,-9.657859,-7.636655,-6.718864,-6.698444,3.381407,0.485107,-3.118695,3.553053,-5.994001,1.788896,-9.887481,-9.935580,0.301400,-7.961189,-4.312025,-1.284567,-5.719353,-2.191774,-5.661264,-6.223246,-4.904580,-2.946739,-4.587515,-7.234004,3.262655,0.349710,-9.304959,9.624208,6.685280,-9.722935,6.407534,7.549790,8.547346,5.129257,-9.962939,-3.819842,5.501522,9.467480,-9.581274,-3.145905,6.550244,8.591172,8.307021,0.092582,-8.963780,6.376238,6.600272,-4.118843,-5.690897,-1.771801,1.389126,-9.027837,-2.982901,9.666916,7.844100,-1.198080,8.452623,-1.920803,-0.851719,-7.766578,-9.098544,5.544010,-1.721530,-6.915415,8.806325,2.724719,9.804818,4.867502,-9.126931,-4.018758,6.095542,-7.470935,0.186732,9.641118,2.025003,-2.929165,2.612904,4.269947,3.101114,9.088709,-8.676436,-5.100181,-3.447735,4.356899,-0.056657,-0.290055,-5.172622,-1.406453,-0.857191,-1.074812,6.306336,7.643419,-2.430209,-2.873295,-9.898247,-1.646532,3.705696,3.478142,-0.309551,-2.511931,-1.012939,-8.893913,3.289836,-9.292909,7.935541,5.583163,-8.034048,6.519386,8.067418,-7.457709,7.071518,0.979647,9.414319,-5.152927,6.035643,-3.935716,-7.484398,1.072309,-6.619036,1.329930,-9.200454,-2.600454,9.364696,9.597427,-4.061223,-6.598719,-6.263057,-9.719917,-9.343391,5.983042,7.262030,-9.627892,7.008637,3.192103,5.550940,6.055853,-3.035432,-7.622579,5.122173,-4.934502,-6.396374,-0.935014,-8.055406,-9.766207,6.350759,7.688117,-3.925904,-3.724787,8.270597,1.346555,-2.147027,-4.075738,-0.645331,-6.896206,-4.579938,6.733702,-4.993348,5.030076,-5.307416,9.755193,8.751968,-9.442146,-0.798908,7.818819,2.339376,8.808661,9.421833,-3.388873,-8.125338,-7.305600,8.286371,1.780246,9.471182,8.389048,9.106128,5.400625,0.517306,-7.356892,7.010259,9.491546,-8.195372,-4.767110,-7.848473,4.131058,-3.703691,4.942693,-9.363411,0.735666,2.447527,2.418810,1.417819,2.778096,2.423366,7.945457,-0.995258,6.662507,1.539878,-4.023423,-9.837740,-7.213705,2.323370,-7.707538,4.172429,0.343420,-4.256417,1.218610,-7.113215,-8.262122,-3.619055,-4.393771,-8.080250,8.414606,1.039504,2.890726,7.972109,-5.841947,8.788129,-3.538023,-3.052278,9.646324,7.479023,6.470378,-2.387230,0.155485,3.186049,1.757104,5.898111,1.902630,-4.601278,-1.960551,-0.370318,6.873570,4.465741,-5.377534,1.835485,3.880207,-4.063831,-9.630937,-6.503639,3.016748,0.125776,-2.491461,2.183872,-6.549294,-5.403759,-2.820847,6.901357,1.546877,8.129277,3.429497,1.526557,1.998128,5.539757,-8.626228,8.594522,0.075359,-0.258520,6.341556,8.729745,-4.609274,-5.188735,-3.561711,-3.362050,1.717773,-5.025506,-7.223092,8.795997,8.111741,-1.757132,-2.633501,-5.289969,-8.541266,9.792548,-2.835179,2.978134,5.867618,1.671039,-2.540969,2.650240,-1.909820,-2.753466,8.122315,-1.752295,-2.752001,3.505958,3.055927,-9.791409,-6.854043,9.058793,-7.832581,1.843335,1.202033,2.590156,-2.895900,2.899025,-3.057878,-8.106372,6.440525,7.558097,0.982527,-2.294192,-7.514736,-7.327418,5.448565,7.158494,7.260899,3.159247,-3.941297,-1.081426,0.333410,5.238393,7.616552,8.857064,-7.979666,-8.467421,7.495354,-9.975481,3.303778,5.076323,3.028063,-7.815102,7.514611,0.259672,-7.809310,7.452017,8.495547,-3.196534,-9.750946,5.405341,-6.613252,-9.817948,-6.276153,3.881677,4.171032,-4.320100,6.006647,8.382577,-7.702399,-5.379840,-3.056811,-4.310298,-8.449762,-4.170764,2.334370,-0.859605,6.019148,3.534005,8.689472,3.767857,0.986506,3.666890,-4.404673,-3.448688,5.772773,-1.548904,-0.369502,2.445522,7.602620,2.603249,7.534681,-8.661860,-1.957528,1.005586,-5.613512,-7.827019,-0.662191,-3.000953,5.018962,-1.931942,-0.564551,-9.928641,7.028852,3.750109,-0.092508,8.723283,-9.359169,-2.496254,-3.701207,5.572812,5.561801,-9.971991,1.304027,-9.687528,2.615546,-1.056477,4.908891,-8.520517,-6.021431,0.178492,-2.120239,5.646194,-0.235015,1.015986,7.644512,7.022782,9.655129,-1.781138,4.623892,3.918341,1.628521,-5.171068,-6.599630,-8.939620,-8.836360,9.635182,-7.429174,-8.707282,2.256288,9.422018,-6.536173,6.223310,8.218933,-7.127167,-1.728395,6.123441,9.722531,8.075202,1.117115,8.081764,6.740430,-4.806028,8.692813,4.094293,1.015486,0.170251,3.138418,8.452719,-8.155436,0.830518,0.027516,7.965711,-0.076329,-7.127759,-8.772736,-1.733776,1.875740,4.993595,4.610544,1.584029,-3.611724,-5.454151,0.772186,-1.568961,0.662279,-5.635380,-9.190728,-5.829903,-4.671312,-8.027381,-2.196450,8.417142,-7.734482,-0.056031,7.043252,-2.234782,-8.210403,1.452556,-8.430486,3.517231,-5.649208,-0.715638,0.618251,7.835654,1.838687,-7.974889,-4.053214,7.545173,0.335344,-6.089907,2.381736,-1.729910,2.026616,6.944884,4.468281,-0.026158,2.038498,-7.567007,5.249766,-3.983223,-2.144143,-7.853576,-6.067032,5.074911,9.131355,-1.798087,-5.166158,-0.801738,7.229548,0.793029,-8.461112,-8.360515,-0.107844,1.649855,-5.571476,-1.738835,-7.616368,-2.638230,3.373073,-2.692234,2.218335,2.530633,7.296190,-1.506918,-9.873364,1.445452,3.111878,-9.528057,9.789577,4.874053,7.575885,-1.473832,-1.192774,7.365983,-2.238994,-7.568156,-8.817092,5.567031,6.005719,-8.241500,3.312708,-1.312276,2.079061,-1.871092,-4.198818,9.085926,6.021371,-6.518619,-0.533932,2.505504,3.906656,-7.765020,-1.763052,-5.063528,4.902998,6.580379,-4.975529,7.741923,-7.112231,-3.546660,4.132236,-1.158879,8.549464,-6.610635,-2.902275,-6.462009,6.209181,-2.966662,-0.935237,0.897981,0.538007,-2.737281,9.219736,-9.187570,3.947151,-7.358622,-1.995274,-6.198696,1.877575,9.617166,-0.977520,-3.028805,-5.635061,1.563823,9.081907,6.880427,8.107296,-0.426015,5.682625,-3.092433,-6.155465,-6.525596,-1.198092,-5.806872,6.183392,1.487245,-8.254981,-1.702774,-8.183559,4.464929,-4.138974,1.456973,2.673928,-3.619973,-2.922181,9.908513,-3.255973,8.180831,-1.332363,-2.393593,6.699733,-6.572661,2.471243,-6.449339,-8.139846,2.271066,-0.302411,7.108508,7.656037,5.766460,-7.902683,-2.335785,-5.643359,5.466449,7.087110,-7.374648,-2.231944,-0.439398,8.321438,0.091018,2.136170,9.556779,9.595176,4.078131,-3.246881,-2.397813,3.213354,9.649209,-5.379368,9.643707,2.911256,-0.031303,-3.537648,4.825597,-3.237211,8.765669,-4.436340,1.470374,3.613360,-7.757574,8.741674,9.500734,6.535280,-9.282158,5.504697,6.643419,-2.344080,-0.077271,3.754453,-0.965082,8.496586,4.091111,-3.679047,2.267760,8.724580,-3.787090,9.248902,7.924706,-7.997108,-5.849241,0.287490,-5.564405,-2.693931,-5.606750,6.241669,5.462027,1.900276,-1.929889,3.773037,8.378921,7.275959,-0.257680,1.769320,2.753738,6.587323,-0.451963,1.195317,-7.183174,9.511120,9.129485,-4.647859,8.757493,8.196069,5.741574,-6.164005,5.532412,-0.927470,-4.238091,-1.296906,-8.325474,2.632162,-3.996543,4.735407,-0.124413,-9.781881,6.206952,-9.100956,-3.098659,-8.254255,8.549224,-3.536065,-5.733531,-9.556022,1.175118,-0.165703,-2.680834,-1.116602,5.269798,-2.320676,-0.995860,8.431489,0.910939,3.167252,-3.539231,4.713821,-9.290348,-5.141170,8.161683,7.436187,7.641832,-8.794572,8.369885,8.212777,-5.133239,9.913674,-7.912735,5.754956,-9.251953,5.308793,-4.727691,-5.189330,-6.116124,-8.133576,3.796393,-9.420104,9.376522,5.704753,8.749579,5.930663,-2.962336,2.238241,-3.870368,-1.468911,3.047383,6.741632,-7.134345,-0.074880,-0.892726,-4.574321,-6.791986,4.695439,9.715493,-4.510145,3.276741,6.288332,-8.129775,-3.097811,9.379721,-8.295163,-3.366900,-8.841884,7.339317,5.629032,3.035853,-9.480262,7.541334,-1.148816,-9.197469,4.772106,-5.397032,9.282538,5.201342,4.200568,-4.581662,5.287863,8.702244,7.039040,-4.755073,9.293899,5.905054,7.673383,1.842814,7.210150,3.186159], dtype = "float32")#candidate|7534|(1365,)|const|float32
call_7531 = relay.TupleGetItem(func_5298_call(relay.reshape(var_7532.astype('int32'), [15, 6, 16]), relay.reshape(var_7532.astype('int32'), [15, 6, 16]), relay.reshape(const_7533.astype('float32'), [1080,]), relay.reshape(const_7534.astype('float32'), [1365,]), ), 0)
call_7535 = relay.TupleGetItem(func_5303_call(relay.reshape(var_7532.astype('int32'), [15, 6, 16]), relay.reshape(var_7532.astype('int32'), [15, 6, 16]), relay.reshape(const_7533.astype('float32'), [1080,]), relay.reshape(const_7534.astype('float32'), [1365,]), ), 0)
var_7548 = relay.var("var_7548", dtype = "float32", shape = (1365,))#candidate|7548|(1365,)|var|float32
bop_7549 = relay.less_equal(const_7534.astype('bool'), relay.reshape(var_7548.astype('bool'), relay.shape_of(const_7534))) # shape=(1365,)
func_3376_call = mod.get_global_var('func_3376')
func_3380_call = mutated_mod.get_global_var('func_3380')
var_7556 = relay.var("var_7556", dtype = "int64", shape = (1568,))#candidate|7556|(1568,)|var|int64
call_7555 = relay.TupleGetItem(func_3376_call(relay.reshape(var_7556.astype('int64'), [8, 14, 14]), relay.reshape(var_7556.astype('int64'), [8, 14, 14]), ), 4)
call_7557 = relay.TupleGetItem(func_3380_call(relay.reshape(var_7556.astype('int64'), [8, 14, 14]), relay.reshape(var_7556.astype('int64'), [8, 14, 14]), ), 4)
func_4848_call = mod.get_global_var('func_4848')
func_4850_call = mutated_mod.get_global_var('func_4850')
call_7573 = func_4848_call()
call_7574 = func_4848_call()
output = relay.Tuple([call_7517,call_7531,var_7532,const_7533,bop_7549,call_7555,var_7556,call_7573,])
output2 = relay.Tuple([call_7518,call_7535,var_7532,const_7533,bop_7549,call_7557,var_7556,call_7574,])
func_7580 = relay.Function([var_7532,var_7548,var_7556,], output)
mod['func_7580'] = func_7580
mod = relay.transform.InferType()(mod)
var_7581 = relay.var("var_7581", dtype = "int32", shape = (360, 4))#candidate|7581|(360, 4)|var|int32
var_7582 = relay.var("var_7582", dtype = "float32", shape = (1365,))#candidate|7582|(1365,)|var|float32
var_7583 = relay.var("var_7583", dtype = "int64", shape = (1568,))#candidate|7583|(1568,)|var|int64
output = func_7580(var_7581,var_7582,var_7583,)
func_7584 = relay.Function([var_7581,var_7582,var_7583,], output)
mutated_mod['func_7584'] = func_7584
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7333_call = mod.get_global_var('func_7333')
func_7334_call = mutated_mod.get_global_var('func_7334')
call_7600 = func_7333_call()
call_7601 = func_7333_call()
output = relay.Tuple([call_7600,])
output2 = relay.Tuple([call_7601,])
func_7607 = relay.Function([], output)
mod['func_7607'] = func_7607
mod = relay.transform.InferType()(mod)
output = func_7607()
func_7608 = relay.Function([], output)
mutated_mod['func_7608'] = func_7608
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5605_call = mod.get_global_var('func_5605')
func_5607_call = mutated_mod.get_global_var('func_5607')
call_7691 = relay.TupleGetItem(func_5605_call(), 0)
call_7692 = relay.TupleGetItem(func_5607_call(), 0)
func_6549_call = mod.get_global_var('func_6549')
func_6550_call = mutated_mod.get_global_var('func_6550')
call_7696 = func_6549_call()
call_7697 = func_6549_call()
uop_7699 = relay.log(call_7691.astype('float32')) # shape=(5, 15, 2)
uop_7701 = relay.log(call_7692.astype('float32')) # shape=(5, 15, 2)
output = relay.Tuple([call_7696,uop_7699,])
output2 = relay.Tuple([call_7697,uop_7701,])
func_7715 = relay.Function([], output)
mod['func_7715'] = func_7715
mod = relay.transform.InferType()(mod)
mutated_mod['func_7715'] = func_7715
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7715_call = mutated_mod.get_global_var('func_7715')
call_7716 = func_7715_call()
output = call_7716
func_7717 = relay.Function([], output)
mutated_mod['func_7717'] = func_7717
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3008_call = mod.get_global_var('func_3008')
func_3009_call = mutated_mod.get_global_var('func_3009')
call_7718 = relay.TupleGetItem(func_3008_call(), 0)
call_7719 = relay.TupleGetItem(func_3009_call(), 0)
func_5997_call = mod.get_global_var('func_5997')
func_6000_call = mutated_mod.get_global_var('func_6000')
const_7744 = relay.const([-3,-5,-2,8,-5,-6,3,8,6,-2,4,-8,-9,9,-8,-8,-5,-1,6,-10,6,-7,-6,3,-2,9,-8,7,9,3,-2,-10,4,5,3,-8,9,-5,2,-7,4,-10,-2,10,-5,-9,-5,-6,-2,-10,-6,1,-6,10,-8,-2,-10,-5,-3,6,-9,7,-5,7,-3,10,7,-5,-10,1,-2,8,-9,-6,7,10,-6,4,-1,-7,-7,-6,-6,5,5,-4,1,1,-5,2,-9,-10,1,-4,-4,-9,-8,5,-7,2,8,-1,7,1,-8,-4,5,-10,7,-1,7,-3,-6,-8,9,-6,-5,-8,-8,-4,9,-1,-1,3,7,2,5,-8,2,-3,-6,-7,-6,3,3,-10,5,-9,4,-8,-9,6,6,4,-8,8,-3,-6,10,-3,-7,7,4,-10,-9,1,9,-1,-9,-10,9,-2,-4,1,8,-9,7,-6], dtype = "uint32")#candidate|7744|(168,)|const|uint32
var_7745 = relay.var("var_7745", dtype = "float32", shape = (150,))#candidate|7745|(150,)|var|float32
call_7743 = relay.TupleGetItem(func_5997_call(relay.reshape(const_7744.astype('uint32'), [168,]), relay.reshape(var_7745.astype('float32'), [5, 15, 2]), ), 2)
call_7746 = relay.TupleGetItem(func_6000_call(relay.reshape(const_7744.astype('uint32'), [168,]), relay.reshape(var_7745.astype('float32'), [5, 15, 2]), ), 2)
func_6797_call = mod.get_global_var('func_6797')
func_6799_call = mutated_mod.get_global_var('func_6799')
call_7758 = relay.TupleGetItem(func_6797_call(), 1)
call_7759 = relay.TupleGetItem(func_6799_call(), 1)
func_7375_call = mod.get_global_var('func_7375')
func_7377_call = mutated_mod.get_global_var('func_7377')
call_7763 = relay.TupleGetItem(func_7375_call(), 0)
call_7764 = relay.TupleGetItem(func_7377_call(), 0)
output = relay.Tuple([call_7718,call_7743,const_7744,var_7745,call_7758,call_7763,])
output2 = relay.Tuple([call_7719,call_7746,const_7744,var_7745,call_7759,call_7764,])
func_7771 = relay.Function([var_7745,], output)
mod['func_7771'] = func_7771
mod = relay.transform.InferType()(mod)
var_7772 = relay.var("var_7772", dtype = "float32", shape = (150,))#candidate|7772|(150,)|var|float32
output = func_7771(var_7772)
func_7773 = relay.Function([var_7772], output)
mutated_mod['func_7773'] = func_7773
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7854 = relay.var("var_7854", dtype = "float32", shape = (2, 10, 1))#candidate|7854|(2, 10, 1)|var|float32
uop_7855 = relay.exp(var_7854.astype('float32')) # shape=(2, 10, 1)
output = uop_7855
output2 = uop_7855
func_7857 = relay.Function([var_7854,], output)
mod['func_7857'] = func_7857
mod = relay.transform.InferType()(mod)
mutated_mod['func_7857'] = func_7857
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7858 = relay.var("var_7858", dtype = "float32", shape = (2, 10, 1))#candidate|7858|(2, 10, 1)|var|float32
func_7857_call = mutated_mod.get_global_var('func_7857')
call_7859 = func_7857_call(var_7858)
output = call_7859
func_7860 = relay.Function([var_7858], output)
mutated_mod['func_7860'] = func_7860
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7862 = relay.var("var_7862", dtype = "float64", shape = (7, 13, 6))#candidate|7862|(7, 13, 6)|var|float64
uop_7863 = relay.sinh(var_7862.astype('float64')) # shape=(7, 13, 6)
output = uop_7863
output2 = uop_7863
func_7869 = relay.Function([var_7862,], output)
mod['func_7869'] = func_7869
mod = relay.transform.InferType()(mod)
mutated_mod['func_7869'] = func_7869
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7870 = relay.var("var_7870", dtype = "float64", shape = (7, 13, 6))#candidate|7870|(7, 13, 6)|var|float64
func_7869_call = mutated_mod.get_global_var('func_7869')
call_7871 = func_7869_call(var_7870)
output = call_7871
func_7872 = relay.Function([var_7870], output)
mutated_mod['func_7872'] = func_7872
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7926 = relay.const([[[-5.550222,3.164377,-7.607460,5.931594,-2.484968,-8.583003,5.651744,-5.771028,8.229299,-2.644260,3.689290],[6.410830,7.267642,6.887379,6.553241,-0.449598,2.576461,-4.275924,1.820843,4.888556,1.237439,2.219509],[-5.721826,5.435341,9.020395,-5.590124,4.933719,-9.752742,-1.149605,0.006046,5.957090,2.609753,8.500557],[-7.273849,2.000878,-6.979698,7.595376,-0.412298,8.566504,0.836582,0.955231,-4.450743,4.967696,0.390185],[-5.605242,-5.523802,-9.521125,9.329636,2.518769,-9.382723,3.820540,1.618644,-3.845545,-4.538189,5.010782],[-5.444899,5.612634,7.766570,-4.537413,-8.149943,-0.342220,-7.827331,1.226516,-1.711944,2.882810,0.139073],[-2.209881,4.649318,-8.412422,-8.945296,3.081409,-2.353980,3.776083,9.979511,7.446574,8.706499,-0.749103],[-6.628805,4.528253,-2.966387,-1.947947,5.337373,-3.095079,9.302130,-2.440236,8.489504,2.003640,-5.169254],[7.861227,-2.874022,7.462387,-7.689362,0.953159,0.193604,-8.098427,8.488320,-5.274541,3.063972,4.586653],[1.894613,-1.131166,3.219978,9.667567,3.023268,6.359103,4.878295,8.713799,7.432449,-3.447550,7.384909],[-8.241319,9.979273,5.762707,-9.893867,-6.141217,-2.551429,-0.830616,-6.390802,0.411375,-3.550236,2.156683]],[[7.760497,-8.955313,8.087942,-1.293979,8.597935,9.243087,9.591524,4.629001,5.635907,3.357781,-7.166323],[8.920190,2.571400,-2.027425,4.572356,4.712352,-4.761528,0.618324,0.668825,-6.923698,1.999435,9.802834],[-5.993604,-5.908669,-4.652393,6.446019,5.574929,0.811065,5.904628,-2.495913,3.655849,-7.233858,4.865550],[9.936964,8.056144,4.226862,7.500202,2.941134,6.680811,5.129776,2.820872,2.003142,3.640515,-4.452944],[-2.797380,-2.123056,-7.805452,-9.797115,-4.956695,-5.346723,8.332251,-8.735255,9.647492,7.166113,6.861341],[-4.721563,0.882910,8.895254,7.756473,-8.207387,0.243659,1.183047,6.741003,5.804961,-6.450928,1.396710],[-5.101657,-0.318398,3.023624,-0.093483,3.490422,4.514934,-6.536971,4.784010,-7.660001,-2.435097,-0.062189],[-3.546116,8.658739,-8.537085,9.508113,3.793512,9.649927,3.007536,0.195665,-6.879961,2.131156,-8.763548],[-8.367493,7.667700,4.365474,-1.432016,8.631415,7.467759,9.833679,-4.643438,5.381650,-3.996347,-1.660552],[9.242695,1.775486,-6.077884,8.543700,8.687500,-5.923918,2.974958,-3.140225,-7.436457,-3.583673,-8.250774],[8.986903,-5.235800,-6.076101,4.347853,0.229220,9.114593,-6.242081,4.501714,-4.056999,-9.509182,3.287720]],[[-0.485685,4.776080,6.877348,-8.795967,3.785018,9.675820,-0.737202,-8.393670,-5.878686,-5.214400,4.704076],[8.755911,-1.251445,5.530128,-9.336222,-5.890257,-6.877553,0.997957,0.399654,6.632411,3.874263,2.643517],[-7.349402,-6.080504,0.673249,-3.947400,5.380494,9.279574,8.789415,-5.043226,3.245244,-7.248251,8.071800],[9.056081,7.379117,7.550855,1.329071,-7.413458,5.359274,-3.528531,6.669323,0.105542,-6.840258,3.863067],[9.443812,-5.188375,-5.771442,-6.650269,-2.253201,9.362342,-5.076604,5.167711,6.522001,5.743236,-0.607000],[1.187694,1.019452,-9.734607,2.402249,9.876418,-8.215691,7.053487,0.728361,-6.473056,0.150925,5.684605],[-2.367554,-8.968419,8.660639,-1.064030,0.633036,4.678269,-9.189087,0.134194,3.840773,-5.920688,-1.894227],[7.383607,1.815083,5.446599,1.802917,-4.237875,5.403796,7.434456,8.193201,-2.204783,3.547973,6.647191],[-2.866698,7.936814,2.414121,0.458568,3.558557,6.042454,-3.162620,9.576372,-2.576078,7.394490,-3.678639],[-9.304512,0.823083,1.476488,-9.280764,-7.302370,2.095137,9.136191,-2.019499,-7.455677,8.197001,-3.100871],[-8.732329,1.172620,-9.970028,2.510341,7.562740,-0.227475,-1.613964,8.204139,-9.854079,6.627142,0.665587]],[[-9.716878,7.846454,4.468831,4.517890,-8.460244,3.534357,-9.693594,7.028630,6.481112,0.708007,8.620411],[9.379095,-3.508634,-1.104766,6.477348,-4.410561,8.672406,-0.526393,-9.180902,2.692458,0.103171,-8.952298],[-7.805263,2.687806,-7.956908,5.051470,9.904252,-3.749982,-9.864925,1.779735,-2.334833,6.196796,-9.697140],[-2.432385,5.400216,3.715581,5.676783,-1.693754,1.109543,5.638323,-3.535881,3.510826,4.303578,-6.927627],[7.164977,4.141677,6.065139,4.423307,-2.392072,9.910772,1.790947,-8.151757,-8.980398,-8.619764,6.765502],[-7.673506,-9.582561,7.459710,7.330874,6.379544,8.256630,9.751194,-8.891171,-0.542618,-3.307876,-3.700543],[5.551246,-1.897046,-1.655113,0.133125,-4.885071,2.049493,-9.022696,-9.231929,-9.749881,-7.480058,-1.818718],[1.246101,-7.466504,0.254351,5.393810,8.113884,1.296735,-6.568399,-6.500484,0.363634,6.333160,-8.463630],[9.212069,-0.424269,-1.361954,6.267645,-2.510816,6.001666,8.086983,1.599646,2.140365,3.139689,2.089834],[-2.067499,4.815602,-5.386718,-0.993647,-9.172767,-3.577088,-5.676327,6.313778,9.682710,-1.322290,4.025367],[-9.868069,-4.408506,1.935360,-6.434409,1.751093,-7.279563,-0.198052,-5.092791,8.084285,-1.668574,1.875658]],[[5.243076,-5.780449,-3.417300,5.685530,-3.588592,-3.947122,2.404500,-0.872439,-1.136196,-4.970998,7.730848],[-0.725531,-9.054302,-8.165938,6.790920,1.620225,9.975508,3.732621,-4.198224,0.619487,-6.535924,5.629522],[0.548887,4.798918,5.628605,-4.648916,-2.471157,-1.552877,6.281703,0.055610,-9.372953,5.993770,5.108944],[8.155847,2.721576,-7.548723,0.689551,-3.394952,-4.217213,-2.844843,0.102422,-6.090295,0.964201,-8.512933],[6.156774,4.482194,-9.671539,1.877419,-0.681572,1.976291,7.799864,4.093472,4.715631,7.468841,-3.517923],[-6.775646,9.756657,9.532596,0.315694,6.119711,-3.423110,3.767707,5.386151,-5.161540,1.745402,1.843344],[3.305586,7.146398,-8.451115,-9.277348,8.809558,8.787102,2.816186,1.021274,-4.765561,-3.070740,-3.457449],[-7.863436,-9.915875,9.106929,-8.231194,5.158140,2.102374,5.827804,8.720108,-6.360277,-4.323343,1.251762],[0.223111,-7.629045,8.955864,-6.307235,-1.116378,0.607480,1.353070,6.574976,-5.798743,8.598928,7.699392],[5.392926,6.849776,0.702046,2.092601,1.918308,-4.840478,3.870520,-7.337171,7.674008,-9.929162,-2.867626],[9.195812,5.152940,-1.678151,6.265618,0.874226,-8.163323,5.902376,-5.032239,6.743164,3.623834,-2.706965]],[[1.719573,-6.041176,9.196919,-2.039052,-8.106638,7.262872,8.108171,-8.309108,-7.984237,0.966495,-6.597639],[-5.894384,-4.121781,1.623100,9.081159,-4.490481,-8.602561,0.837832,1.489412,7.315730,4.697179,3.286772],[-5.034176,-9.996217,-2.807712,-6.944510,-0.196282,0.709121,-7.983014,-9.275548,-0.052689,-5.032221,6.169698],[8.634823,4.778189,-8.264162,1.951426,1.709777,2.681113,-3.910945,-8.428732,0.381183,-1.685837,2.807953],[2.090883,-1.823906,-2.408940,-3.669683,3.915686,-9.997468,6.959131,0.545176,-9.833625,-5.313685,-7.441160],[1.081626,3.401261,6.285526,-0.587721,-7.100969,-5.468597,3.184548,-0.567081,-6.426108,9.156041,-7.921264],[0.246891,-5.859026,2.499370,-7.515006,1.117269,-4.308593,-1.388592,-7.330390,-3.821855,-3.727129,-3.367608],[9.765954,9.712737,-8.167194,-0.848147,7.576559,-1.742669,6.126701,5.286861,-6.420919,-6.868826,9.709765],[-8.668831,8.825642,7.351010,-3.311814,8.377488,-0.738548,1.869417,-0.476187,9.147672,-1.483932,4.838950],[2.786218,6.051970,3.897072,-6.354763,-6.256997,2.313658,3.893079,7.764304,-8.961474,4.297279,7.913837],[8.527038,-9.417781,-2.798714,-1.298550,6.660394,-0.017653,7.532550,-0.077920,-4.551950,8.724397,-4.228851]]], dtype = "float64")#candidate|7926|(6, 11, 11)|const|float64
uop_7927 = relay.cos(const_7926.astype('float64')) # shape=(6, 11, 11)
func_2090_call = mod.get_global_var('func_2090')
func_2095_call = mutated_mod.get_global_var('func_2095')
var_7930 = relay.var("var_7930", dtype = "uint8", shape = (600,))#candidate|7930|(600,)|var|uint8
call_7929 = relay.TupleGetItem(func_2090_call(relay.reshape(var_7930.astype('uint8'), [5, 10, 12]), relay.reshape(var_7930.astype('uint8'), [5, 10, 12]), relay.reshape(var_7930.astype('uint8'), [5, 10, 12]), relay.reshape(var_7930.astype('uint8'), [5, 10, 12]), ), 1)
call_7931 = relay.TupleGetItem(func_2095_call(relay.reshape(var_7930.astype('uint8'), [5, 10, 12]), relay.reshape(var_7930.astype('uint8'), [5, 10, 12]), relay.reshape(var_7930.astype('uint8'), [5, 10, 12]), relay.reshape(var_7930.astype('uint8'), [5, 10, 12]), ), 1)
output = relay.Tuple([uop_7927,call_7929,var_7930,])
output2 = relay.Tuple([uop_7927,call_7931,var_7930,])
func_7946 = relay.Function([var_7930,], output)
mod['func_7946'] = func_7946
mod = relay.transform.InferType()(mod)
mutated_mod['func_7946'] = func_7946
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7947 = relay.var("var_7947", dtype = "uint8", shape = (600,))#candidate|7947|(600,)|var|uint8
func_7946_call = mutated_mod.get_global_var('func_7946')
call_7948 = func_7946_call(var_7947)
output = call_7948
func_7949 = relay.Function([var_7947], output)
mutated_mod['func_7949'] = func_7949
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6060_call = mod.get_global_var('func_6060')
func_6061_call = mutated_mod.get_global_var('func_6061')
call_8044 = func_6060_call()
call_8045 = func_6060_call()
output = relay.Tuple([call_8044,])
output2 = relay.Tuple([call_8045,])
func_8056 = relay.Function([], output)
mod['func_8056'] = func_8056
mod = relay.transform.InferType()(mod)
mutated_mod['func_8056'] = func_8056
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8056_call = mutated_mod.get_global_var('func_8056')
call_8057 = func_8056_call()
output = call_8057
func_8058 = relay.Function([], output)
mutated_mod['func_8058'] = func_8058
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6060_call = mod.get_global_var('func_6060')
func_6061_call = mutated_mod.get_global_var('func_6061')
call_8061 = func_6060_call()
call_8062 = func_6060_call()
output = call_8061
output2 = call_8062
func_8070 = relay.Function([], output)
mod['func_8070'] = func_8070
mod = relay.transform.InferType()(mod)
output = func_8070()
func_8071 = relay.Function([], output)
mutated_mod['func_8071'] = func_8071
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5486_call = mod.get_global_var('func_5486')
func_5487_call = mutated_mod.get_global_var('func_5487')
call_8189 = func_5486_call()
call_8190 = func_5486_call()
uop_8200 = relay.log2(call_8189.astype('float32')) # shape=(1568,)
uop_8202 = relay.log2(call_8190.astype('float32')) # shape=(1568,)
bop_8203 = relay.minimum(uop_8200.astype('float32'), relay.reshape(call_8189.astype('float32'), relay.shape_of(uop_8200))) # shape=(1568,)
bop_8206 = relay.minimum(uop_8202.astype('float32'), relay.reshape(call_8190.astype('float32'), relay.shape_of(uop_8202))) # shape=(1568,)
output = relay.Tuple([bop_8203,])
output2 = relay.Tuple([bop_8206,])
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

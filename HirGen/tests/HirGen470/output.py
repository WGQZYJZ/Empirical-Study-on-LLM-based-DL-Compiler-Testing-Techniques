import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_292 = relay.var("var_292", dtype = "float32", shape = (10, 13, 14))#candidate|292|(10, 13, 14)|var|float32
var_293 = relay.var("var_293", dtype = "float32", shape = (10, 13, 14))#candidate|293|(10, 13, 14)|var|float32
bop_294 = relay.mod(var_292.astype('float32'), relay.reshape(var_293.astype('float32'), relay.shape_of(var_292))) # shape=(10, 13, 14)
output = bop_294
output2 = bop_294
func_297 = relay.Function([var_292,var_293,], output)
mod['func_297'] = func_297
mod = relay.transform.InferType()(mod)
mutated_mod['func_297'] = func_297
mutated_mod = relay.transform.InferType()(mutated_mod)
func_297_call = mutated_mod.get_global_var('func_297')
var_299 = relay.var("var_299", dtype = "float32", shape = (10, 13, 14))#candidate|299|(10, 13, 14)|var|float32
var_300 = relay.var("var_300", dtype = "float32", shape = (10, 13, 14))#candidate|300|(10, 13, 14)|var|float32
call_298 = func_297_call(var_299,var_300,)
output = call_298
func_301 = relay.Function([var_299,var_300,], output)
mutated_mod['func_301'] = func_301
mutated_mod = relay.transform.InferType()(mutated_mod)
const_440 = relay.const([[[-10,7,7,3],[-6,-6,2,3]],[[-8,-9,-7,8],[8,10,-6,3]],[[-5,9,10,-7],[-5,-7,9,-10]],[[-6,8,8,9],[-5,-10,-5,-8]],[[-5,4,1,2],[-8,-2,6,4]],[[3,-7,7,-8],[5,7,1,2]],[[-4,-1,-2,8],[9,-7,-6,-9]],[[4,-1,-4,-5],[-5,10,-10,1]],[[-1,-7,-3,-2],[-9,-9,1,-3]],[[8,8,-10,-10],[7,-2,6,-9]],[[6,-9,2,-5],[-2,5,4,10]],[[1,3,-1,8],[-5,-3,6,8]],[[-9,-4,10,-2],[-6,8,5,4]],[[-4,-9,2,-2],[-10,7,-10,-9]]], dtype = "int64")#candidate|440|(14, 2, 4)|const|int64
var_441 = relay.var("var_441", dtype = "int64", shape = (14, 2, 4))#candidate|441|(14, 2, 4)|var|int64
bop_442 = relay.right_shift(const_440.astype('int64'), relay.reshape(var_441.astype('int64'), relay.shape_of(const_440))) # shape=(14, 2, 4)
bop_445 = relay.not_equal(const_440.astype('bool'), relay.reshape(var_441.astype('bool'), relay.shape_of(const_440))) # shape=(14, 2, 4)
output = relay.Tuple([bop_442,bop_445,])
output2 = relay.Tuple([bop_442,bop_445,])
func_450 = relay.Function([var_441,], output)
mod['func_450'] = func_450
mod = relay.transform.InferType()(mod)
mutated_mod['func_450'] = func_450
mutated_mod = relay.transform.InferType()(mutated_mod)
var_451 = relay.var("var_451", dtype = "int64", shape = (14, 2, 4))#candidate|451|(14, 2, 4)|var|int64
func_450_call = mutated_mod.get_global_var('func_450')
call_452 = func_450_call(var_451)
output = call_452
func_453 = relay.Function([var_451], output)
mutated_mod['func_453'] = func_453
mutated_mod = relay.transform.InferType()(mutated_mod)
var_463 = relay.var("var_463", dtype = "int16", shape = (5, 1, 10))#candidate|463|(5, 1, 10)|var|int16
var_464 = relay.var("var_464", dtype = "int16", shape = (5, 2, 10))#candidate|464|(5, 2, 10)|var|int16
bop_465 = relay.not_equal(var_463.astype('bool'), var_464.astype('bool')) # shape=(5, 2, 10)
func_450_call = mod.get_global_var('func_450')
func_453_call = mutated_mod.get_global_var('func_453')
var_470 = relay.var("var_470", dtype = "int64", shape = (112,))#candidate|470|(112,)|var|int64
call_469 = relay.TupleGetItem(func_450_call(relay.reshape(var_470.astype('int64'), [14, 2, 4])), 1)
call_471 = relay.TupleGetItem(func_453_call(relay.reshape(var_470.astype('int64'), [14, 2, 4])), 1)
output = relay.Tuple([bop_465,call_469,var_470,])
output2 = relay.Tuple([bop_465,call_471,var_470,])
func_476 = relay.Function([var_463,var_464,var_470,], output)
mod['func_476'] = func_476
mod = relay.transform.InferType()(mod)
mutated_mod['func_476'] = func_476
mutated_mod = relay.transform.InferType()(mutated_mod)
func_476_call = mutated_mod.get_global_var('func_476')
var_478 = relay.var("var_478", dtype = "int16", shape = (5, 1, 10))#candidate|478|(5, 1, 10)|var|int16
var_479 = relay.var("var_479", dtype = "int16", shape = (5, 2, 10))#candidate|479|(5, 2, 10)|var|int16
var_480 = relay.var("var_480", dtype = "int64", shape = (112,))#candidate|480|(112,)|var|int64
call_477 = func_476_call(var_478,var_479,var_480,)
output = call_477
func_481 = relay.Function([var_478,var_479,var_480,], output)
mutated_mod['func_481'] = func_481
mutated_mod = relay.transform.InferType()(mutated_mod)
var_506 = relay.var("var_506", dtype = "float32", shape = (7, 2, 11))#candidate|506|(7, 2, 11)|var|float32
uop_507 = relay.atanh(var_506.astype('float32')) # shape=(7, 2, 11)
func_476_call = mod.get_global_var('func_476')
func_481_call = mutated_mod.get_global_var('func_481')
const_525 = relay.const([-2,3,6,1,-5,6,-6,-6,-3,7,-3,2,6,6,-6,2,-1,1,-8,-5,-1,-10,7,-1,9,10,-6,5,10,8,8,5,3,-7,10,-8,2,-7,4,-3,5,-6,-8,5,-2,-5,10,-2,-5,8], dtype = "int16")#candidate|525|(50,)|const|int16
var_526 = relay.var("var_526", dtype = "int16", shape = (100,))#candidate|526|(100,)|var|int16
var_527 = relay.var("var_527", dtype = "int64", shape = (112,))#candidate|527|(112,)|var|int64
call_524 = relay.TupleGetItem(func_476_call(relay.reshape(const_525.astype('int16'), [5, 1, 10]), relay.reshape(var_526.astype('int16'), [5, 2, 10]), relay.reshape(var_527.astype('int64'), [112,]), ), 2)
call_528 = relay.TupleGetItem(func_481_call(relay.reshape(const_525.astype('int16'), [5, 1, 10]), relay.reshape(var_526.astype('int16'), [5, 2, 10]), relay.reshape(var_527.astype('int64'), [112,]), ), 2)
func_476_call = mod.get_global_var('func_476')
func_481_call = mutated_mod.get_global_var('func_481')
call_531 = relay.TupleGetItem(func_476_call(relay.reshape(const_525.astype('int16'), [5, 1, 10]), relay.reshape(var_526.astype('int16'), [5, 2, 10]), relay.reshape(var_527.astype('int64'), [112,]), ), 1)
call_532 = relay.TupleGetItem(func_481_call(relay.reshape(const_525.astype('int16'), [5, 1, 10]), relay.reshape(var_526.astype('int16'), [5, 2, 10]), relay.reshape(var_527.astype('int64'), [112,]), ), 1)
output = relay.Tuple([uop_507,call_524,const_525,var_526,var_527,call_531,])
output2 = relay.Tuple([uop_507,call_528,const_525,var_526,var_527,call_532,])
func_535 = relay.Function([var_506,var_526,var_527,], output)
mod['func_535'] = func_535
mod = relay.transform.InferType()(mod)
var_536 = relay.var("var_536", dtype = "float32", shape = (7, 2, 11))#candidate|536|(7, 2, 11)|var|float32
var_537 = relay.var("var_537", dtype = "int16", shape = (100,))#candidate|537|(100,)|var|int16
var_538 = relay.var("var_538", dtype = "int64", shape = (112,))#candidate|538|(112,)|var|int64
output = func_535(var_536,var_537,var_538,)
func_539 = relay.Function([var_536,var_537,var_538,], output)
mutated_mod['func_539'] = func_539
mutated_mod = relay.transform.InferType()(mutated_mod)
var_639 = relay.var("var_639", dtype = "float32", shape = (16, 1, 5))#candidate|639|(16, 1, 5)|var|float32
uop_640 = relay.acos(var_639.astype('float32')) # shape=(16, 1, 5)
bop_642 = relay.bitwise_or(var_639.astype('uint8'), relay.reshape(uop_640.astype('uint8'), relay.shape_of(var_639))) # shape=(16, 1, 5)
bop_651 = relay.less(uop_640.astype('bool'), relay.reshape(bop_642.astype('bool'), relay.shape_of(uop_640))) # shape=(16, 1, 5)
func_476_call = mod.get_global_var('func_476')
func_481_call = mutated_mod.get_global_var('func_481')
const_672 = relay.const([[-8,10,4,9,5,-5,-9,3,-10,-9],[2,-3,8,-9,-3,-9,10,1,9,1],[-5,6,-7,-3,-9,-4,-8,6,-10,-2],[3,-5,5,10,7,7,6,-7,-4,4],[5,-6,4,10,8,8,-7,6,-1,5]], dtype = "int16")#candidate|672|(5, 10)|const|int16
var_673 = relay.var("var_673", dtype = "int16", shape = (5, 20))#candidate|673|(5, 20)|var|int16
const_674 = relay.const([[10],[1],[7],[9],[-8],[7],[6],[2],[-7],[-9],[1],[1],[-7],[-10],[4],[-8],[-2],[-6],[5],[-6],[8],[-3],[-7],[2],[-5],[8],[10],[2],[8],[-6],[2],[7],[-3],[6],[-10],[-2],[-4],[-5],[-3],[-6],[8],[4],[3],[3],[2],[8],[-3],[7],[-9],[5],[7],[-8],[-4],[3],[-1],[-6],[3],[7],[8],[9],[-1],[-3],[1],[-2],[4],[8],[3],[-2],[2],[-2],[4],[-4],[-10],[1],[2],[9],[7],[10],[3],[-8],[7],[10],[-3],[-7],[-8],[10],[9],[-9],[4],[6],[-1],[1],[-6],[-8],[1],[5],[2],[-10],[-8],[2],[7],[9],[5],[-6],[9],[-8],[8],[8],[10],[-2],[2],[1]], dtype = "int64")#candidate|674|(112, 1)|const|int64
call_671 = relay.TupleGetItem(func_476_call(relay.reshape(const_672.astype('int16'), [5, 1, 10]), relay.reshape(var_673.astype('int16'), [5, 2, 10]), relay.reshape(const_674.astype('int64'), [112,]), ), 0)
call_675 = relay.TupleGetItem(func_481_call(relay.reshape(const_672.astype('int16'), [5, 1, 10]), relay.reshape(var_673.astype('int16'), [5, 2, 10]), relay.reshape(const_674.astype('int64'), [112,]), ), 0)
bop_676 = relay.right_shift(uop_640.astype('uint64'), relay.reshape(bop_651.astype('uint64'), relay.shape_of(uop_640))) # shape=(16, 1, 5)
uop_688 = relay.sqrt(uop_640.astype('float32')) # shape=(16, 1, 5)
func_450_call = mod.get_global_var('func_450')
func_453_call = mutated_mod.get_global_var('func_453')
call_692 = relay.TupleGetItem(func_450_call(relay.reshape(const_674.astype('int64'), [14, 2, 4])), 0)
call_693 = relay.TupleGetItem(func_453_call(relay.reshape(const_674.astype('int64'), [14, 2, 4])), 0)
func_297_call = mod.get_global_var('func_297')
func_301_call = mutated_mod.get_global_var('func_301')
var_704 = relay.var("var_704", dtype = "float32", shape = (1820, 1))#candidate|704|(1820, 1)|var|float32
call_703 = func_297_call(relay.reshape(var_704.astype('float32'), [10, 13, 14]), relay.reshape(var_704.astype('float32'), [10, 13, 14]), )
call_705 = func_297_call(relay.reshape(var_704.astype('float32'), [10, 13, 14]), relay.reshape(var_704.astype('float32'), [10, 13, 14]), )
output = relay.Tuple([call_671,const_672,var_673,const_674,bop_676,uop_688,call_692,call_703,var_704,])
output2 = relay.Tuple([call_675,const_672,var_673,const_674,bop_676,uop_688,call_693,call_705,var_704,])
func_709 = relay.Function([var_639,var_673,var_704,], output)
mod['func_709'] = func_709
mod = relay.transform.InferType()(mod)
mutated_mod['func_709'] = func_709
mutated_mod = relay.transform.InferType()(mutated_mod)
func_709_call = mutated_mod.get_global_var('func_709')
var_711 = relay.var("var_711", dtype = "float32", shape = (16, 1, 5))#candidate|711|(16, 1, 5)|var|float32
var_712 = relay.var("var_712", dtype = "int16", shape = (5, 20))#candidate|712|(5, 20)|var|int16
var_713 = relay.var("var_713", dtype = "float32", shape = (1820, 1))#candidate|713|(1820, 1)|var|float32
call_710 = func_709_call(var_711,var_712,var_713,)
output = call_710
func_714 = relay.Function([var_711,var_712,var_713,], output)
mutated_mod['func_714'] = func_714
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1031 = relay.var("var_1031", dtype = "int16", shape = ())#candidate|1031|()|var|int16
var_1032 = relay.var("var_1032", dtype = "int16", shape = (12, 4, 1))#candidate|1032|(12, 4, 1)|var|int16
bop_1033 = relay.less(var_1031.astype('bool'), var_1032.astype('bool')) # shape=(12, 4, 1)
const_1039 = relay.const([[[-8,3,10,9,4],[-1,-6,9,5,-7],[-10,8,-10,-3,4],[4,-1,-3,9,-10]],[[-4,4,-8,-1,6],[3,9,-5,4,-3],[10,-2,4,-3,9],[-6,6,2,-2,4]],[[1,7,1,-10,-1],[-5,2,-3,-3,9],[-10,5,-6,10,10],[-9,3,2,9,-9]],[[6,-3,-1,5,5],[-4,-3,-10,7,-1],[6,-7,-8,-1,10],[-9,-5,-7,3,8]],[[7,2,2,1,4],[6,1,-8,-4,-6],[-10,3,9,2,1],[9,-4,2,-5,-5]],[[4,-8,7,-2,5],[-5,4,2,7,5],[-4,8,5,3,-2],[8,2,-8,2,-9]],[[-9,3,2,7,7],[-9,-6,10,8,1],[4,5,5,-6,-7],[-5,-1,2,-4,-5]],[[2,-4,3,-2,-7],[-3,4,8,5,-8],[1,9,-2,7,9],[-8,8,-1,-8,-3]],[[6,8,6,-9,2],[-3,3,-6,2,-2],[5,-2,-6,5,-6],[8,6,3,-4,5]],[[2,-10,10,9,-9],[-5,-2,9,-1,-1],[3,-10,5,-1,6],[4,5,-10,-10,-9]],[[1,-5,-2,-3,7],[10,5,-8,-3,-9],[6,4,9,-6,-6],[-10,-8,2,-9,3]],[[-8,7,4,4,-6],[-6,-8,4,8,-6],[5,-1,-3,3,5],[10,-10,9,-4,-3]]], dtype = "int16")#candidate|1039|(12, 4, 5)|const|int16
bop_1040 = relay.greater_equal(var_1032.astype('bool'), const_1039.astype('bool')) # shape=(12, 4, 5)
var_1046 = relay.var("var_1046", dtype = "bool", shape = (12, 4, 5))#candidate|1046|(12, 4, 5)|var|bool
bop_1047 = relay.bitwise_or(bop_1040.astype('uint8'), relay.reshape(var_1046.astype('uint8'), relay.shape_of(bop_1040))) # shape=(12, 4, 5)
func_535_call = mod.get_global_var('func_535')
func_539_call = mutated_mod.get_global_var('func_539')
var_1060 = relay.var("var_1060", dtype = "float32", shape = (154,))#candidate|1060|(154,)|var|float32
var_1061 = relay.var("var_1061", dtype = "int16", shape = (100,))#candidate|1061|(100,)|var|int16
const_1062 = relay.const([-8,3,1,1,-10,6,-10,7,-7,8,-5,1,5,10,-1,-10,-4,-10,10,-1,-10,-4,-3,4,-9,-10,-5,8,-2,-1,-1,-6,4,2,-5,4,1,6,8,1,-4,-4,4,3,2,1,-5,-10,10,2,-4,-1,-4,-6,8,-4,2,3,3,2,-2,-1,-7,-5,-1,-2,-5,10,1,4,7,4,-7,3,-5,-5,7,3,7,3,-4,4,8,-1,-2,-10,4,-8,1,10,6,4,-3,9,4,7,7,-9,7,-5,2,8,9,6,-7,9,-4,-9,7,-9,10,-9], dtype = "int64")#candidate|1062|(112,)|const|int64
call_1059 = relay.TupleGetItem(func_535_call(relay.reshape(var_1060.astype('float32'), [7, 2, 11]), relay.reshape(var_1061.astype('int16'), [100,]), relay.reshape(const_1062.astype('int64'), [112,]), ), 3)
call_1063 = relay.TupleGetItem(func_539_call(relay.reshape(var_1060.astype('float32'), [7, 2, 11]), relay.reshape(var_1061.astype('int16'), [100,]), relay.reshape(const_1062.astype('int64'), [112,]), ), 3)
bop_1071 = relay.bitwise_or(call_1059.astype('uint8'), var_1032.astype('uint8')) # shape=(12, 4, 100)
bop_1074 = relay.bitwise_or(call_1063.astype('uint8'), var_1032.astype('uint8')) # shape=(12, 4, 100)
func_709_call = mod.get_global_var('func_709')
func_714_call = mutated_mod.get_global_var('func_714')
const_1079 = relay.const([[3.722289,1.640983,4.285756,-8.547918,-0.448255,9.288674,-0.523772,1.624998,-6.580245,-5.966893,-1.725497,-5.156190,-4.494905,-7.337278,7.768757,5.352870,0.618852,3.237827,6.229251,-3.823896,9.045839,6.273078,6.084414,-6.179325,-6.770140,4.839557,9.623305,6.051346,5.387237,-3.906811,-0.090370,-5.519344,-8.760355,-0.917593,8.192282,-4.292543,-5.185831,-4.128383,-5.245909,4.498646,4.072796,4.481671,-7.893604,-1.168305,-2.267085,-3.844794,9.512469,1.512857,-1.956716,6.923748,-4.234146,-5.856086,9.488433,6.036952,-4.956641,-1.192738,2.931211,-1.554443,7.932660,6.543105,-1.358820,-9.173066,-6.607560,6.436625,6.110734,-4.769963,-4.647243,-2.518761,0.603254,0.842056,-0.053860,2.569370,5.408035,2.088186,7.473926,3.722306,2.278369,1.343240,4.726705,-2.836036]], dtype = "float32")#candidate|1079|(1, 80)|const|float32
var_1080 = relay.var("var_1080", dtype = "float32", shape = (1820,))#candidate|1080|(1820,)|var|float32
call_1078 = relay.TupleGetItem(func_709_call(relay.reshape(const_1079.astype('float32'), [16, 1, 5]), relay.reshape(var_1061.astype('int16'), [5, 20]), relay.reshape(var_1080.astype('float32'), [1820, 1]), ), 2)
call_1081 = relay.TupleGetItem(func_714_call(relay.reshape(const_1079.astype('float32'), [16, 1, 5]), relay.reshape(var_1061.astype('int16'), [5, 20]), relay.reshape(var_1080.astype('float32'), [1820, 1]), ), 2)
output = relay.Tuple([bop_1033,bop_1047,var_1060,var_1061,const_1062,bop_1071,call_1078,const_1079,var_1080,])
output2 = relay.Tuple([bop_1033,bop_1047,var_1060,var_1061,const_1062,bop_1074,call_1081,const_1079,var_1080,])
func_1093 = relay.Function([var_1031,var_1032,var_1046,var_1060,var_1061,var_1080,], output)
mod['func_1093'] = func_1093
mod = relay.transform.InferType()(mod)
mutated_mod['func_1093'] = func_1093
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1093_call = mutated_mod.get_global_var('func_1093')
var_1095 = relay.var("var_1095", dtype = "int16", shape = ())#candidate|1095|()|var|int16
var_1096 = relay.var("var_1096", dtype = "int16", shape = (12, 4, 1))#candidate|1096|(12, 4, 1)|var|int16
var_1097 = relay.var("var_1097", dtype = "bool", shape = (12, 4, 5))#candidate|1097|(12, 4, 5)|var|bool
var_1098 = relay.var("var_1098", dtype = "float32", shape = (154,))#candidate|1098|(154,)|var|float32
var_1099 = relay.var("var_1099", dtype = "int16", shape = (100,))#candidate|1099|(100,)|var|int16
var_1100 = relay.var("var_1100", dtype = "float32", shape = (1820,))#candidate|1100|(1820,)|var|float32
call_1094 = func_1093_call(var_1095,var_1096,var_1097,var_1098,var_1099,var_1100,)
output = call_1094
func_1101 = relay.Function([var_1095,var_1096,var_1097,var_1098,var_1099,var_1100,], output)
mutated_mod['func_1101'] = func_1101
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1294 = relay.const(-2, dtype = "uint64")#candidate|1294|()|const|uint64
const_1295 = relay.const([[[-2,6,5,-2,9,4,-6,-10,-8,4,3,7,-6,-7],[-6,-4,4,-4,10,-4,5,-7,-7,-1,-7,4,-10,10],[-8,2,-9,-2,8,4,2,-9,7,8,-4,8,6,1],[-5,-4,5,-6,-4,-9,-6,10,-2,5,-6,-5,3,-4],[-7,5,-4,-4,-8,-7,-9,-5,-1,3,6,5,10,-6],[3,-4,-5,-2,-9,-1,-5,9,5,8,-1,-1,10,2],[-8,-5,-10,-1,9,7,-10,-4,5,10,1,5,-1,-2]],[[-4,1,5,-3,6,-2,-9,-2,7,3,-1,-3,-1,6],[-7,-2,-3,5,10,4,3,-8,5,3,-8,-6,-1,3],[7,5,8,-5,2,-10,7,8,-10,-6,8,8,8,-7],[3,1,9,-4,-5,9,-8,-10,3,-8,-6,-7,-2,2],[-9,8,-7,1,-5,5,3,-7,-5,7,5,-2,-8,7],[5,1,-6,-7,-8,-3,3,-4,5,7,-8,-9,-10,6],[-9,-1,2,-10,10,5,4,-2,-7,-5,-6,2,9,-7]],[[-2,10,-5,8,2,10,-5,-10,3,8,-6,10,-7,8],[-6,6,7,1,-6,3,-9,2,6,-3,-3,8,-3,-3],[-3,-6,-5,6,10,-8,-8,-6,2,9,9,-8,2,-2],[-6,-5,4,-9,4,3,-5,-10,-1,-10,-2,2,2,4],[8,8,8,7,5,-5,1,10,-8,-1,-7,-4,3,-2],[8,8,9,3,1,3,4,-4,-5,-3,7,4,6,-4],[-5,-3,-2,2,10,1,5,-7,2,-6,-6,-10,4,6]],[[3,10,-4,-3,-5,-10,-10,4,4,4,3,-3,-10,3],[-6,-5,-6,-6,-5,9,-4,3,-9,-7,10,-1,3,3],[8,7,-4,-4,5,-3,1,-2,-10,-8,4,3,9,9],[9,-3,-10,2,3,4,-8,-10,-10,3,-7,-10,6,-7],[9,-7,9,-7,2,-1,-7,-3,-4,3,5,-4,7,-5],[7,-8,-9,-5,6,-7,1,-3,7,-5,-1,4,4,-10],[2,-4,9,-5,6,9,2,-10,6,-3,-9,3,-7,-8]],[[5,-2,5,-3,-7,-5,8,4,-1,-3,6,-9,4,-7],[-9,4,2,8,-1,2,-1,2,2,-9,10,2,-10,3],[5,7,-4,7,-6,-3,-9,-6,5,-2,-1,2,5,-9],[6,-10,-3,-2,-9,-5,5,-1,-7,5,-4,9,-7,9],[6,8,-2,-1,-7,-2,-4,-1,-8,-1,1,7,2,3],[8,1,9,-3,10,-6,7,-5,-6,9,-1,9,6,-7],[1,-8,-1,-2,-10,1,-9,9,4,8,-10,-6,-7,3]],[[10,-4,10,-1,-2,-3,-9,2,-1,5,-3,-7,-2,-4],[-7,-4,8,7,1,3,2,6,8,9,-9,5,9,-6],[3,10,10,-7,4,-10,-6,8,7,-9,-4,-4,-5,8],[1,5,-6,5,8,6,-8,7,-9,1,-1,-3,-1,1],[-8,-9,2,6,-8,-6,3,-10,-10,6,-4,-5,7,3],[7,-3,-10,5,-8,-10,1,5,-9,6,2,9,9,2],[-4,-4,-6,7,9,9,-2,-4,-6,7,-3,-7,7,10]],[[1,-9,-8,5,10,-1,-3,-6,9,8,-8,3,9,4],[-5,9,-10,-9,3,-2,6,-2,6,-2,8,2,-6,-5],[4,-3,8,3,2,6,-5,-8,6,10,8,6,-5,-1],[-3,7,10,4,-2,5,10,1,2,8,9,-9,-1,4],[5,-6,4,6,3,-1,9,-1,9,-4,-3,-8,-10,1],[4,-9,1,-7,-1,8,-3,9,4,10,-1,-4,-7,-7],[1,-2,3,4,-9,8,4,-1,4,-10,9,-10,4,-7]],[[6,10,1,-4,5,8,-1,-3,-2,-3,-6,3,-2,-8],[-8,-7,-8,-2,9,3,6,-8,-8,1,7,6,-6,1],[-5,4,5,-8,8,-1,-5,-1,-6,7,1,-5,1,-2],[-2,7,-1,1,-2,-8,-8,-5,5,-4,-6,6,9,4],[3,-1,8,-4,-8,-6,3,-1,4,4,4,2,-10,-7],[-10,-1,8,9,9,-8,10,9,9,6,8,5,-9,3],[-5,-8,-1,7,-10,-7,2,10,-9,-7,1,-4,-5,-2]],[[-7,-4,5,-7,-1,-8,-3,-4,10,10,2,-8,3,3],[-4,-2,2,-3,-8,-5,-7,3,-8,8,8,-5,-5,3],[-8,8,3,-3,6,2,-8,-6,-8,6,4,3,-10,-2],[5,7,-4,-3,4,2,2,5,-8,5,-8,3,-3,-3],[7,1,5,-5,-10,-5,-4,4,10,-6,-10,8,9,1],[-10,-8,2,-10,7,5,4,2,9,-4,7,1,10,-7],[-1,-5,-5,-7,-2,3,10,7,-9,4,6,1,7,-3]],[[9,7,8,-10,-5,-9,4,6,-9,-10,3,8,-1,7],[1,6,-7,2,7,8,1,-8,-9,-10,1,-9,-3,6],[-6,-1,-2,-8,2,-6,-2,-10,2,-7,-4,9,5,10],[5,-2,-10,7,-10,10,-5,-10,9,-9,7,1,-2,-5],[-8,-7,-2,5,3,-1,-7,4,7,10,-3,-8,6,2],[-2,9,3,-5,6,-6,-2,-2,9,-2,2,-4,-2,7],[-2,9,7,7,3,-6,2,8,2,4,7,-8,9,-6]],[[-4,10,-4,-3,-5,1,-2,9,-1,-9,-6,-4,8,-2],[6,9,-10,8,-6,-5,1,10,-4,-7,-5,-8,7,2],[6,4,1,-3,-2,5,2,-10,-5,-4,9,-6,6,-3],[-7,-2,-10,-6,2,4,-8,2,8,-3,-10,3,-8,4],[-2,9,-4,4,-7,-7,-8,3,-9,-8,-4,-1,7,6],[5,-9,8,8,-9,10,-3,-5,7,6,10,2,-4,10],[10,-7,9,2,2,-1,-4,-6,-7,7,8,9,-7,6]],[[5,3,4,-10,5,-10,4,9,4,5,8,-5,-5,-8],[7,-6,-10,10,10,-6,-2,2,-10,3,8,-7,-10,-5],[-7,7,-5,-8,3,-10,6,6,4,5,10,-10,-8,5],[9,2,10,-2,2,1,-6,6,9,-1,1,1,-5,-10],[-9,-2,-2,6,2,1,6,9,5,5,7,-8,-3,2],[1,-3,-4,9,-9,-1,1,-5,4,-10,-9,-4,10,-7],[-3,2,-8,6,-2,-9,10,-10,-2,9,-10,6,5,-6]],[[-3,9,-1,-4,8,10,-5,-8,10,9,4,-7,-8,-4],[2,7,2,-3,-6,1,-5,1,1,-6,-7,5,2,8],[5,-2,-9,-4,4,3,4,-2,-4,-10,2,9,2,5],[-6,-5,-2,-9,5,-1,3,-9,-7,-4,5,9,2,9],[10,8,-6,8,-10,-8,-4,-4,-4,-2,3,3,1,-5],[9,-7,-9,-6,7,-2,5,-10,8,4,6,-4,-3,4],[8,7,5,-6,-8,-9,8,-10,1,10,3,-5,3,7]],[[-6,-9,2,4,9,-4,-4,-2,6,5,-3,1,10,-6],[-5,8,3,8,3,-5,-3,1,-3,10,-6,-9,10,6],[5,-3,-4,2,8,5,1,6,-10,-1,-4,4,-4,1],[-4,3,1,-2,9,-4,-5,10,10,9,-5,-5,-1,-10],[-2,8,2,-7,-7,9,2,-3,-4,-2,9,6,-4,-6],[8,10,9,-7,-9,-5,3,2,-9,2,-8,-10,8,2],[7,-8,3,6,-8,-4,-5,-3,5,4,10,7,-2,4]],[[3,3,3,-4,9,-10,-2,4,-5,6,4,-4,-7,4],[-10,-9,-6,2,4,-8,7,-2,2,8,4,-7,-3,-5],[-6,2,-9,8,5,-7,-7,4,2,-4,-3,-2,-6,5],[2,2,1,1,-4,7,10,-10,10,-4,1,5,-10,-3],[5,-6,10,-2,-1,-2,3,-6,-3,1,-10,4,-3,-9],[7,7,-2,9,-2,-2,6,-10,3,-4,-2,-10,2,-8],[-4,-7,-9,-2,-9,2,2,6,7,-6,2,7,-7,-10]]], dtype = "uint64")#candidate|1295|(15, 7, 14)|const|uint64
bop_1296 = relay.equal(const_1294.astype('bool'), const_1295.astype('bool')) # shape=(15, 7, 14)
output = bop_1296
output2 = bop_1296
func_1313 = relay.Function([], output)
mod['func_1313'] = func_1313
mod = relay.transform.InferType()(mod)
mutated_mod['func_1313'] = func_1313
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1313_call = mutated_mod.get_global_var('func_1313')
call_1314 = func_1313_call()
output = call_1314
func_1315 = relay.Function([], output)
mutated_mod['func_1315'] = func_1315
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1313_call = mod.get_global_var('func_1313')
func_1315_call = mutated_mod.get_global_var('func_1315')
call_1316 = func_1313_call()
call_1317 = func_1313_call()
uop_1326 = relay.rsqrt(call_1316.astype('float32')) # shape=(15, 7, 14)
uop_1328 = relay.rsqrt(call_1317.astype('float32')) # shape=(15, 7, 14)
output = uop_1326
output2 = uop_1328
func_1337 = relay.Function([], output)
mod['func_1337'] = func_1337
mod = relay.transform.InferType()(mod)
mutated_mod['func_1337'] = func_1337
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1337_call = mutated_mod.get_global_var('func_1337')
call_1338 = func_1337_call()
output = call_1338
func_1339 = relay.Function([], output)
mutated_mod['func_1339'] = func_1339
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1313_call = mod.get_global_var('func_1313')
func_1315_call = mutated_mod.get_global_var('func_1315')
call_1389 = func_1313_call()
call_1390 = func_1313_call()
uop_1399 = relay.cos(call_1389.astype('float32')) # shape=(15, 7, 14)
uop_1401 = relay.cos(call_1390.astype('float32')) # shape=(15, 7, 14)
output = uop_1399
output2 = uop_1401
func_1406 = relay.Function([], output)
mod['func_1406'] = func_1406
mod = relay.transform.InferType()(mod)
output = func_1406()
func_1407 = relay.Function([], output)
mutated_mod['func_1407'] = func_1407
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1313_call = mod.get_global_var('func_1313')
func_1315_call = mutated_mod.get_global_var('func_1315')
call_1431 = func_1313_call()
call_1432 = func_1313_call()
output = relay.Tuple([call_1431,])
output2 = relay.Tuple([call_1432,])
func_1438 = relay.Function([], output)
mod['func_1438'] = func_1438
mod = relay.transform.InferType()(mod)
mutated_mod['func_1438'] = func_1438
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1438_call = mutated_mod.get_global_var('func_1438')
call_1439 = func_1438_call()
output = call_1439
func_1440 = relay.Function([], output)
mutated_mod['func_1440'] = func_1440
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1438_call = mod.get_global_var('func_1438')
func_1440_call = mutated_mod.get_global_var('func_1440')
call_1465 = relay.TupleGetItem(func_1438_call(), 0)
call_1466 = relay.TupleGetItem(func_1440_call(), 0)
output = call_1465
output2 = call_1466
func_1473 = relay.Function([], output)
mod['func_1473'] = func_1473
mod = relay.transform.InferType()(mod)
mutated_mod['func_1473'] = func_1473
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1473_call = mutated_mod.get_global_var('func_1473')
call_1474 = func_1473_call()
output = call_1474
func_1475 = relay.Function([], output)
mutated_mod['func_1475'] = func_1475
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1520 = relay.var("var_1520", dtype = "uint32", shape = (11, 10, 11))#candidate|1520|(11, 10, 11)|var|uint32
var_1521 = relay.var("var_1521", dtype = "uint32", shape = (11, 10, 11))#candidate|1521|(11, 10, 11)|var|uint32
bop_1522 = relay.multiply(var_1520.astype('uint32'), relay.reshape(var_1521.astype('uint32'), relay.shape_of(var_1520))) # shape=(11, 10, 11)
output = bop_1522
output2 = bop_1522
func_1534 = relay.Function([var_1520,var_1521,], output)
mod['func_1534'] = func_1534
mod = relay.transform.InferType()(mod)
var_1535 = relay.var("var_1535", dtype = "uint32", shape = (11, 10, 11))#candidate|1535|(11, 10, 11)|var|uint32
var_1536 = relay.var("var_1536", dtype = "uint32", shape = (11, 10, 11))#candidate|1536|(11, 10, 11)|var|uint32
output = func_1534(var_1535,var_1536,)
func_1537 = relay.Function([var_1535,var_1536,], output)
mutated_mod['func_1537'] = func_1537
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1337_call = mod.get_global_var('func_1337')
func_1339_call = mutated_mod.get_global_var('func_1339')
call_1550 = func_1337_call()
call_1551 = func_1337_call()
output = relay.Tuple([call_1550,])
output2 = relay.Tuple([call_1551,])
func_1565 = relay.Function([], output)
mod['func_1565'] = func_1565
mod = relay.transform.InferType()(mod)
output = func_1565()
func_1566 = relay.Function([], output)
mutated_mod['func_1566'] = func_1566
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1588 = relay.const([[[2,3,9,1,8],[3,-5,-5,-3,-1],[-1,-9,2,-7,6],[9,3,-7,4,10]],[[3,-5,-4,-3,9],[4,-3,-2,-10,9],[7,4,-10,6,-9],[7,10,10,4,-4]],[[9,5,-10,8,6],[-6,5,-6,-8,-10],[-9,-9,-1,-4,6],[8,-4,9,9,-4]],[[5,9,9,-7,-8],[-4,-6,-5,-3,1],[-6,5,1,-6,1],[7,-1,8,-4,4]],[[3,-8,-2,5,-3],[-5,7,-1,-3,-9],[6,-4,4,6,8],[9,-10,2,1,7]],[[6,-5,1,-1,2],[1,-8,6,7,-8],[-1,-8,-4,-5,8],[1,4,-6,9,-1]],[[7,-10,7,7,-7],[10,-1,-1,7,-10],[-9,-8,6,-10,-1],[-7,-3,5,2,-5]],[[-6,6,-5,2,6],[6,4,10,8,-4],[-3,7,-5,-7,4],[-5,10,10,2,-7]],[[6,6,9,-10,8],[-8,-5,6,-9,9],[8,4,7,1,-7],[-10,4,-5,-1,-2]],[[8,-9,-6,5,9],[-7,-9,-3,8,-8],[6,8,-5,5,-9],[-7,8,10,-3,7]],[[8,-7,8,3,-7],[1,-2,-3,3,5],[4,6,7,6,-2],[2,-1,-9,2,-5]],[[5,-2,4,-4,-3],[6,10,-1,-2,9],[-2,-6,-1,-3,8],[-1,3,-2,9,5]],[[-6,3,-7,-4,-3],[-2,5,7,-2,-6],[8,5,-1,2,4],[5,-2,-5,3,7]]], dtype = "int8")#candidate|1588|(13, 4, 5)|const|int8
var_1589 = relay.var("var_1589", dtype = "int8", shape = (13, 4, 5))#candidate|1589|(13, 4, 5)|var|int8
bop_1590 = relay.equal(const_1588.astype('bool'), relay.reshape(var_1589.astype('bool'), relay.shape_of(const_1588))) # shape=(13, 4, 5)
func_476_call = mod.get_global_var('func_476')
func_481_call = mutated_mod.get_global_var('func_481')
const_1596 = relay.const([5,2,-8,-8,8,-9,5,4,-9,7,-4,-10,2,8,-1,-1,-5,-6,2,8,-9,4,6,-10,-9,-6,8,8,9,-1,1,9,-7,-10,6,10,-2,9,-2,-7,-6,4,9,7,7,10,-1,5,3,8], dtype = "int16")#candidate|1596|(50,)|const|int16
const_1597 = relay.const([[5,7,4,-1,2,-9,5,4,-9,-7,-4,2,-9,2,9,7,5,9,-9,-6],[-6,-1,-4,-6,-9,1,8,-7,-2,-8,-1,6,8,5,-8,2,5,-6,10,4],[-5,-1,8,-9,-6,-1,3,-3,5,-10,-7,8,6,3,-7,5,9,2,-5,10],[-1,8,-8,-5,-9,5,-9,-1,8,3,8,7,6,-9,-2,2,-7,7,3,10],[9,1,-10,-3,4,-4,-5,-4,-10,-10,9,6,-4,3,7,1,-9,-1,5,-7]], dtype = "int16")#candidate|1597|(5, 20)|const|int16
const_1598 = relay.const([-5,-2,7,-9,4,1,-6,-5,4,4,-5,8,-2,-4,-3,-10,5,-7,-3,1,6,9,7,-3,-5,6,10,10,8,10,2,2,-3,-2,-5,6,-5,5,1,2,-3,-8,2,-4,5,-4,8,-6,4,9,-1,3,10,-5,-4,-6,5,1,-5,2,2,9,-3,-3,3,8,-7,-7,9,-7,-10,1,9,5,-8,4,-2,-2,-5,1,6,-9,10,-1,9,1,1,7,5,-3,-8,5,-9,-4,-3,-2,4,-4,-9,-3,-5,10,-6,7,6,4,-9,5,-5,10,-5,9], dtype = "int64")#candidate|1598|(112,)|const|int64
call_1595 = relay.TupleGetItem(func_476_call(relay.reshape(const_1596.astype('int16'), [5, 1, 10]), relay.reshape(const_1597.astype('int16'), [5, 2, 10]), relay.reshape(const_1598.astype('int64'), [112,]), ), 0)
call_1599 = relay.TupleGetItem(func_481_call(relay.reshape(const_1596.astype('int16'), [5, 1, 10]), relay.reshape(const_1597.astype('int16'), [5, 2, 10]), relay.reshape(const_1598.astype('int64'), [112,]), ), 0)
uop_1608 = relay.exp(const_1588.astype('float64')) # shape=(13, 4, 5)
output = relay.Tuple([bop_1590,call_1595,const_1596,const_1597,const_1598,uop_1608,])
output2 = relay.Tuple([bop_1590,call_1599,const_1596,const_1597,const_1598,uop_1608,])
func_1613 = relay.Function([var_1589,], output)
mod['func_1613'] = func_1613
mod = relay.transform.InferType()(mod)
var_1614 = relay.var("var_1614", dtype = "int8", shape = (13, 4, 5))#candidate|1614|(13, 4, 5)|var|int8
output = func_1613(var_1614)
func_1615 = relay.Function([var_1614], output)
mutated_mod['func_1615'] = func_1615
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1667 = relay.constdtype = "float32")#candidate|1667|(14, 15, 14)|const|float32
uop_1668 = relay.acos(const_1667.astype('float32')) # shape=(14, 15, 14)
bop_1676 = relay.left_shift(uop_1668.astype('int32'), relay.reshape(const_1667.astype('int32'), relay.shape_of(uop_1668))) # shape=(14, 15, 14)
output = bop_1676
output2 = bop_1676
func_1680 = relay.Function([], output)
mod['func_1680'] = func_1680
mod = relay.transform.InferType()(mod)
mutated_mod['func_1680'] = func_1680
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1680_call = mutated_mod.get_global_var('func_1680')
call_1681 = func_1680_call()
output = call_1681
func_1682 = relay.Function([], output)
mutated_mod['func_1682'] = func_1682
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1689 = relay.const([[[-3.181906,-4.670072,-8.280165,5.759261,-4.333398,-2.142564,-3.148462,-0.001261,-7.913566],[-0.688928,2.973430,-3.197934,-7.057703,-3.472789,-5.193968,-7.711185,-9.073092,2.477157],[2.027190,7.072596,6.070640,-5.362665,5.741453,9.143021,-2.785687,8.393869,-7.183824],[-5.816015,5.596747,9.077477,-0.308260,-0.959787,-5.312784,2.778107,-7.799282,6.897843],[6.798724,-2.411293,-4.590691,-4.939875,3.682844,-6.266589,3.430213,-4.384153,-6.914563],[-1.454390,9.333858,1.486997,7.316196,-3.464387,3.243042,5.037029,8.038682,3.467771],[7.100172,-7.274510,-2.768631,6.045222,5.755613,-8.951588,6.879846,3.714813,6.993128],[-9.119819,5.331767,0.944650,8.525100,9.359882,-5.838666,-6.307376,-8.514237,-4.658545],[-2.241056,-2.817333,9.330066,9.473029,-1.208185,-5.759441,1.601299,-9.266026,8.733860],[4.646192,-4.692859,6.515046,7.269031,9.592243,-2.802267,-0.032682,8.529150,2.613314],[9.724015,9.749198,0.648477,-8.610794,-9.994375,8.463998,-2.964121,-2.442231,-9.049455],[6.134202,-5.308344,8.672997,-3.041863,6.553231,2.543445,-9.047753,9.773071,-0.119565]],[[2.142209,3.195255,8.821685,0.973065,8.596596,-7.450593,3.999947,4.365069,-6.893512],[7.246762,2.517233,-0.575839,7.562369,0.326927,-7.462865,0.609209,-6.734860,-4.745978],[8.746977,7.860023,3.364821,-0.793165,7.002782,-2.984820,7.831065,-6.278768,-5.389385],[7.976833,-8.272401,-9.002149,-5.037993,-6.009359,-1.370329,-6.565972,7.604360,-7.845260],[2.237208,7.746799,5.824383,1.447730,8.546762,1.730033,-3.523573,8.236129,2.827458],[-9.453411,0.762278,3.262758,3.418842,-0.021783,0.499114,9.933099,5.355553,-1.278059],[2.078600,2.106007,2.817774,-1.112592,0.404455,-4.294658,-4.731603,-1.480714,-7.814675],[9.412934,3.601044,-4.241985,4.821629,-4.480608,-4.696865,7.593994,-2.109668,2.399213],[0.214451,5.542973,2.355650,1.947194,-5.064986,-1.931682,6.968554,-2.947153,4.654889],[-1.154774,1.201156,4.828132,8.661408,1.731066,-5.073134,8.486489,-8.433518,-1.275743],[7.504577,0.138835,-1.004909,-3.019208,-5.148948,-5.777509,9.337155,-0.179068,6.258050],[-9.821148,-1.899872,-6.963405,-9.942457,-9.049045,8.594635,2.218227,-3.895937,-0.916797]],[[-8.320409,2.375084,-7.243954,-5.273165,-1.535577,-8.457558,-2.270013,-4.414097,-9.513252],[8.680184,-6.084710,9.296326,5.902535,-8.255732,-6.970392,-1.204475,4.700459,3.849825],[1.548999,4.194499,-7.927546,-1.984846,2.009170,2.085422,8.512729,-8.737577,-1.605311],[0.662882,-7.323895,8.192674,6.829555,8.418849,4.804638,-4.083487,-9.855891,-9.168872],[3.964161,-0.062899,9.115297,-5.288627,-5.753895,2.103531,-0.533090,-4.492479,-0.758382],[1.035995,5.112810,0.762351,2.224512,-7.652978,0.462330,-2.459891,7.681869,6.828619],[-3.570137,9.592618,2.997510,1.200379,-0.590150,-8.707925,-5.713427,-5.499395,7.945982],[-0.908921,8.772083,-1.450225,-4.718349,5.709295,8.795240,-0.076286,-6.288391,2.970519],[-9.030698,0.304735,-7.292308,-0.875813,-7.918550,9.279495,-9.298125,-9.051360,-9.030114],[-3.303582,-0.674671,-2.222349,5.535589,0.753689,-2.975958,1.637801,-3.710142,0.326742],[-6.747878,9.659054,-9.070815,-1.757939,-8.295478,-3.855378,-9.683964,8.467695,-9.287356],[-4.248690,1.104677,7.129242,-0.483345,-7.034320,-8.911553,-3.957645,8.684918,3.008833]],[[-3.484053,-9.463408,-0.579675,1.139733,-9.675680,9.992416,-4.295036,-5.362508,-6.322027],[3.113601,-1.271526,9.715408,-7.577932,0.451852,2.576134,0.573155,9.195482,-6.076336],[5.744843,-4.073679,4.697315,-6.889563,8.591197,0.792044,7.882014,4.758119,-2.947391],[-2.724551,-6.912218,9.470671,-7.172405,8.340974,-5.495149,0.283055,3.447524,3.837033],[-4.571518,-1.198280,-8.842750,6.058746,-1.677005,0.521964,2.375202,1.458956,-7.546605],[8.667471,-9.654509,-7.971315,-6.426125,-0.347505,9.877178,-0.992353,8.575055,1.799983],[-6.823821,0.919682,1.658304,-5.273970,-7.586077,-4.148941,-3.821340,8.512736,-3.137455],[6.132458,-8.282148,-4.183535,-0.150115,9.136907,4.791507,9.870002,6.683470,7.232091],[-4.721914,2.986612,5.886125,9.747254,1.739852,-6.802172,-5.461536,-7.265679,3.140906],[-5.616949,-2.946610,-6.984763,-9.547006,2.989970,-7.347027,1.301379,-3.125033,-7.445161],[-2.327099,4.401589,-6.641752,-7.422051,-6.877622,7.293350,5.757748,8.845832,5.685370],[-8.029206,8.257273,4.161799,-4.091957,-4.307849,5.957057,-0.826676,-6.228750,6.677914]],[[-7.908043,9.101595,7.996358,-2.801382,-8.848943,-9.205718,1.614119,-9.916132,-5.478600],[4.365727,-1.364286,-5.531467,-7.667777,2.234195,-5.969482,9.236365,-0.343063,7.571036],[-5.008610,8.258344,9.076352,-7.462760,-1.639367,-4.076234,7.270221,5.322362,7.400086],[8.465642,-4.828788,5.453791,-3.664004,7.416854,9.540918,-4.785750,3.320818,7.232151],[3.499242,2.657726,-5.568234,-3.221597,5.581903,9.811737,6.537465,-8.102772,1.215557],[4.617089,2.516244,2.069274,4.265061,-9.394520,4.702113,-5.490220,8.332741,-4.956769],[5.496387,8.130225,-7.188735,4.690914,-0.704246,6.241930,2.339817,6.671384,-3.667625],[-4.335224,-4.413178,-0.863236,-7.758046,-9.216382,-8.009667,6.370276,2.414422,6.855262],[5.063955,-5.119866,-6.631374,9.916940,-6.582702,-0.867926,9.063608,-5.118433,2.354354],[4.060306,9.572489,-5.672288,-4.047410,5.413418,-0.393404,5.496933,-3.209406,8.550239],[-0.079180,-0.362107,2.243953,8.727277,6.691255,-3.901669,-6.734915,-9.023195,9.230964],[4.313393,-3.774972,-4.018029,6.731996,-4.104988,9.987255,9.730663,1.754875,-8.608375]],[[-5.305404,3.088285,6.893004,5.880744,-8.357177,-1.028167,-7.912903,9.507361,-1.625413],[4.197806,-8.897318,7.608719,-4.169961,7.500113,7.329019,-0.574529,9.945601,9.570243],[-2.161621,-1.534798,8.360309,-9.768184,-3.147200,-2.721166,5.658834,1.087159,-0.558633],[4.518701,4.500984,-1.350255,-4.020906,-2.690254,-2.224328,1.141582,-8.377757,1.761858],[-0.002751,5.837812,-8.696552,8.897091,-5.929288,3.591479,-8.440189,3.143086,1.990624],[-9.711975,-4.445764,7.611652,-0.444200,3.464481,-6.216329,-2.731797,6.684487,6.848905],[-4.631702,9.786977,5.972715,9.938808,-3.675413,2.813101,-1.651016,2.147757,7.037940],[1.007054,3.854906,-5.130929,-1.420137,-4.367722,2.237201,0.334913,4.669215,-2.140857],[6.467527,-7.275505,-9.090675,5.280234,9.400691,6.398042,0.541365,-5.359889,-7.344590],[-2.626253,-7.370304,-6.413128,-6.349948,5.724970,-3.951512,4.350524,9.729608,3.453767],[6.944818,-2.965402,-1.936702,5.498109,-8.238105,-4.413865,5.981989,0.321974,-2.418942],[1.218199,6.945661,-2.979773,-6.936198,8.897917,0.617095,9.533677,2.937079,3.506916]],[[8.840708,7.353990,-5.758325,-2.141049,-7.372773,7.593700,2.176739,-6.723378,0.142542],[6.779739,-3.627622,3.330654,3.062175,-9.863146,-0.232948,-0.985442,9.447650,-2.273754],[-1.636867,6.094400,-6.128439,8.212126,8.344822,2.775624,-5.422777,-0.313535,8.347003],[-4.319179,-6.633564,-3.728019,-1.308236,-1.912792,-5.700275,7.212359,-8.155702,-7.185099],[-3.146729,-3.880468,0.630672,-8.323341,-4.550959,-8.615415,1.930821,4.046216,9.905596],[-1.995327,-3.006987,1.756796,0.310347,5.852818,6.956957,0.023240,8.741762,1.261647],[6.500254,-4.857335,-8.377037,5.071198,7.914235,1.007763,-9.295075,-1.878007,6.425533],[-6.646655,1.972392,-9.278120,3.092888,-1.646351,0.072107,2.145445,4.903179,9.558746],[-6.483338,4.516608,0.131585,-9.829654,5.858667,-3.792528,5.407693,7.865923,5.113477],[1.206683,7.777789,0.434169,-1.900720,9.075365,5.536140,5.451708,-9.131619,0.533648],[-2.064082,9.269356,3.825241,-9.279201,-9.993046,5.129254,9.827940,-1.125617,-9.547407],[1.815374,-5.839248,-7.497049,4.554430,2.562870,0.317949,2.984036,9.619309,5.589143]],[[7.651713,4.134703,9.792891,0.859320,5.219746,-9.831171,3.833573,-2.114903,-5.952238],[3.451720,6.946419,5.757398,-2.456361,-4.575507,-5.910163,-3.967525,5.220187,0.123643],[-5.494461,0.220671,5.893875,7.777345,9.792128,-5.971142,-6.546154,-9.964520,5.277818],[-2.324171,-7.444694,6.378136,-0.655610,-1.429554,4.095022,4.790541,-3.317809,8.791927],[-7.471829,3.697130,4.757977,8.839344,3.374335,3.712801,-2.326335,-1.402500,-3.816617],[6.189456,9.565024,-8.305227,9.170994,-8.870230,-2.132174,8.659765,-5.315820,-2.780814],[8.545988,-9.061940,5.224727,1.435742,8.597773,9.850261,2.798776,4.033212,-9.629514],[9.139431,4.058025,-1.530894,1.026468,-6.565685,-0.798243,4.437250,-5.459315,-5.734871],[4.677971,2.785078,-2.169060,-9.538932,8.734908,-5.707789,1.624802,-7.272714,-6.181009],[-9.443276,-0.709630,3.233914,-8.635775,-1.002872,-5.105213,-9.513349,-8.419545,4.777603],[-3.159147,-1.788581,2.465813,-7.021346,-4.492769,5.153681,9.124100,3.611282,-4.032090],[-5.506733,9.633736,1.337256,9.723450,-0.762358,-7.629714,-5.143542,0.939009,-0.471472]],[[-9.671501,-3.660359,7.390819,7.830064,1.230502,5.845894,1.543246,-4.790717,-0.125503],[2.651592,-3.916577,-4.325166,9.638469,8.698577,5.937576,4.205934,-2.015139,0.092848],[5.003608,-4.314234,0.874466,-0.461442,0.993691,1.934155,-2.884646,-3.474460,-4.983090],[9.170199,7.576126,1.497030,8.296117,-6.521158,-9.072280,4.942508,-1.433285,-0.453171],[6.145808,0.169000,-6.876179,4.240906,9.809387,3.576806,-2.556100,4.199533,3.079203],[-0.169291,3.480177,4.131323,-6.844374,8.387983,-9.307365,-4.075451,-4.144559,8.600069],[9.614603,6.856091,-0.519053,-8.349750,-4.113668,-7.882581,-2.723453,-6.260187,-0.059858],[6.943662,-5.337126,2.713735,3.758707,6.220552,4.481008,-0.035161,9.327382,4.251635],[-0.945418,-8.121739,8.180739,-8.831669,0.359455,1.669886,-9.485660,4.102696,8.315999],[-3.786502,-7.554099,-9.078421,-9.592330,-4.252960,1.351964,3.355895,-6.800820,-8.909841],[-3.769773,9.691868,0.096817,6.700485,-0.519051,-4.127137,-4.311080,-7.994563,-1.399537],[-1.855281,0.961405,-8.939655,5.499497,-5.411966,5.403538,4.118064,4.438123,-4.947729]],[[-3.113640,6.583372,-2.919418,-1.307802,-1.384797,8.335979,-9.496647,3.608404,2.728502],[-4.695068,4.845761,-9.318953,3.488262,-9.179149,-0.092328,1.174601,8.439591,3.622089],[-5.397856,-8.576142,-2.713576,-5.056429,4.602592,-8.926523,0.725800,5.655679,2.416615],[-1.150688,-2.362889,-6.172978,0.720014,6.723777,-6.372469,-1.390084,-7.248785,8.224024],[-9.710419,2.593385,4.886009,-7.680172,-0.572121,2.317984,8.527640,-7.972276,-3.739452],[7.464617,-9.723838,-7.524313,6.952689,-8.003286,5.656220,3.187989,3.190419,-7.674090],[-5.045887,2.800665,-8.649878,1.812791,-9.211358,6.203146,-7.388569,-1.196558,0.202472],[0.303098,3.709048,4.481103,1.979900,0.039295,0.553908,1.001320,-8.869528,2.023727],[3.419158,8.728829,-0.243713,-2.074317,7.459457,-5.170545,-3.685965,8.044432,7.099124],[-2.468167,7.957095,9.210831,5.486276,1.709997,2.067029,3.730794,7.848697,0.846267],[0.014700,-4.744978,-8.752877,-3.817252,-1.864943,5.062391,-0.084151,-6.095210,8.341805],[-4.610381,-6.013382,-2.342100,-7.235414,-8.995014,-4.053546,-0.496234,0.579133,-5.219044]]], dtype = "float64")#candidate|1689|(10, 12, 9)|const|float64
uop_1690 = relay.log2(const_1689.astype('float64')) # shape=(10, 12, 9)
output = relay.Tuple([uop_1690,])
output2 = relay.Tuple([uop_1690,])
func_1693 = relay.Function([], output)
mod['func_1693'] = func_1693
mod = relay.transform.InferType()(mod)
mutated_mod['func_1693'] = func_1693
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1693_call = mutated_mod.get_global_var('func_1693')
call_1694 = func_1693_call()
output = call_1694
func_1695 = relay.Function([], output)
mutated_mod['func_1695'] = func_1695
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1473_call = mod.get_global_var('func_1473')
func_1475_call = mutated_mod.get_global_var('func_1475')
call_1753 = func_1473_call()
call_1754 = func_1473_call()
func_535_call = mod.get_global_var('func_535')
func_539_call = mutated_mod.get_global_var('func_539')
const_1775 = relay.const([0.296205,5.719918,8.040496,3.035578,1.827256,9.791602,2.941274,-5.566251,9.421276,-9.218012,-7.601510,-0.987136,-6.164751,3.551518,-9.714263,-8.033836,-4.758758,-5.143589,-7.183269,3.196368,8.555514,-6.610543,-7.944812,0.673280,0.491231,-4.942292,-2.557950,-7.903464,4.667071,6.015865,-0.957397,0.875331,0.047740,4.696805,-9.508954,-3.374776,9.636369,-3.448493,9.981539,-2.495074,8.372589,6.327544,3.651777,-6.790585,6.724954,3.467459,8.508445,8.275338,-1.519417,5.405167,0.340460,-6.218994,-8.388221,-0.587473,-4.780029,6.436701,-6.353270,-1.423415,-0.068449,-8.340106,-6.007625,-2.750287,1.976793,-9.790675,-0.761587,-5.138694,3.258475,-7.054006,5.655605,-1.901573,2.230948,-2.665550,-8.000656,-3.688315,4.932483,-6.433301,-1.337981,-8.119304,-0.366728,9.260349,-9.582842,5.345401,-7.351570,1.046865,-8.321850,8.298536,9.761721,7.674637,-9.587891,9.175055,7.986025,4.929256,-3.881640,5.892947,5.393889,7.579306,-4.731829,9.338331,-3.350629,-9.731982,-7.363475,0.022806,6.675527,7.725136,-0.990130,-3.617330,1.051773,8.100058,9.447325,-7.823678,5.566065,-6.155946,-3.766454,-7.961248,-0.268481,-1.582132,-9.023682,8.831291,-4.096439,-1.125236,7.767163,-2.975220,-9.854630,-4.989157,-1.653013,-1.845940,-1.946531,4.354306,0.026682,5.224292,5.754911,-8.753424,0.214379,0.580410,5.446835,-5.935313,-2.186727,8.252805,-8.628125,-1.560660,-1.631975,-5.365843,5.970093,-4.699314,0.723322,2.943932,6.773232,4.261333,0.253018,-0.960961,-4.009097,7.289247,-4.420566,9.851927], dtype = "float32")#candidate|1775|(154,)|const|float32
var_1776 = relay.var("var_1776", dtype = "int16", shape = (100,))#candidate|1776|(100,)|var|int16
const_1777 = relay.const([2,-9,-4,-8,-3,6,-5,-6,3,8,-9,-2,2,6,-10,7,8,-8,8,9,8,1,-10,-6,10,-2,2,7,6,5,4,-5,-7,7,10,-7,3,-4,4,-7,-3,-3,-5,-2,-2,4,-8,-8,-3,-10,-3,3,-4,-1,6,-5,9,7,-6,6,5,-6,10,-8,1,9,-5,-1,1,7,2,-8,10,6,4,6,3,-4,5,9,10,-9,-2,3,-2,1,-4,6,6,-2,5,2,9,4,-8,2,-3,-4,-3,6,-1,3,8,1,-1,-4,10,-6,-2,7,-5,9], dtype = "int64")#candidate|1777|(112,)|const|int64
call_1774 = relay.TupleGetItem(func_535_call(relay.reshape(const_1775.astype('float32'), [7, 2, 11]), relay.reshape(var_1776.astype('int16'), [100,]), relay.reshape(const_1777.astype('int64'), [112,]), ), 5)
call_1778 = relay.TupleGetItem(func_539_call(relay.reshape(const_1775.astype('float32'), [7, 2, 11]), relay.reshape(var_1776.astype('int16'), [100,]), relay.reshape(const_1777.astype('int64'), [112,]), ), 5)
func_1565_call = mod.get_global_var('func_1565')
func_1566_call = mutated_mod.get_global_var('func_1566')
call_1786 = relay.TupleGetItem(func_1565_call(), 0)
call_1787 = relay.TupleGetItem(func_1566_call(), 0)
output = relay.Tuple([call_1753,call_1774,const_1775,var_1776,const_1777,call_1786,])
output2 = relay.Tuple([call_1754,call_1778,const_1775,var_1776,const_1777,call_1787,])
func_1796 = relay.Function([var_1776,], output)
mod['func_1796'] = func_1796
mod = relay.transform.InferType()(mod)
mutated_mod['func_1796'] = func_1796
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1797 = relay.var("var_1797", dtype = "int16", shape = (100,))#candidate|1797|(100,)|var|int16
func_1796_call = mutated_mod.get_global_var('func_1796')
call_1798 = func_1796_call(var_1797)
output = call_1798
func_1799 = relay.Function([var_1797], output)
mutated_mod['func_1799'] = func_1799
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1817 = relay.var("var_1817", dtype = "float32", shape = (8, 2, 2))#candidate|1817|(8, 2, 2)|var|float32
const_1818 = relay.const([[[4.387902,9.211388],[-1.659869,-4.833596]],[[1.515081,-7.816396],[0.401044,-6.044540]],[[9.062483,-5.600798],[9.968851,-6.076516]],[[7.707108,4.640443],[5.969661,0.569841]],[[-1.199485,-7.932885],[-1.993257,-7.612677]],[[-9.650606,4.480339],[1.334215,1.070897]],[[-4.488102,-0.020824],[-1.420128,3.450280]],[[8.676361,-9.650498],[9.883483,3.365228]]], dtype = "float32")#candidate|1818|(8, 2, 2)|const|float32
bop_1819 = relay.minimum(var_1817.astype('float32'), relay.reshape(const_1818.astype('float32'), relay.shape_of(var_1817))) # shape=(8, 2, 2)
uop_1824 = relay.atan(bop_1819.astype('float64')) # shape=(8, 2, 2)
output = uop_1824
output2 = uop_1824
func_1828 = relay.Function([var_1817,], output)
mod['func_1828'] = func_1828
mod = relay.transform.InferType()(mod)
var_1829 = relay.var("var_1829", dtype = "float32", shape = (8, 2, 2))#candidate|1829|(8, 2, 2)|var|float32
output = func_1828(var_1829)
func_1830 = relay.Function([var_1829], output)
mutated_mod['func_1830'] = func_1830
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1680_call = mod.get_global_var('func_1680')
func_1682_call = mutated_mod.get_global_var('func_1682')
call_1837 = func_1680_call()
call_1838 = func_1680_call()
func_1565_call = mod.get_global_var('func_1565')
func_1566_call = mutated_mod.get_global_var('func_1566')
call_1841 = relay.TupleGetItem(func_1565_call(), 0)
call_1842 = relay.TupleGetItem(func_1566_call(), 0)
uop_1843 = relay.cos(call_1837.astype('float64')) # shape=(14, 15, 14)
uop_1845 = relay.cos(call_1838.astype('float64')) # shape=(14, 15, 14)
func_476_call = mod.get_global_var('func_476')
func_481_call = mutated_mod.get_global_var('func_481')
var_1847 = relay.var("var_1847", dtype = "int16", shape = (50,))#candidate|1847|(50,)|var|int16
var_1848 = relay.var("var_1848", dtype = "int16", shape = (50, 2))#candidate|1848|(50, 2)|var|int16
const_1849 = relay.const([[-7],[8],[-6],[1],[2],[-8],[-4],[-8],[3],[-9],[9],[5],[-7],[2],[8],[-9],[-4],[-8],[-9],[4],[8],[10],[8],[-7],[5],[-1],[3],[6],[6],[-6],[-1],[-1],[3],[-7],[-10],[-2],[4],[-10],[-9],[5],[-2],[-8],[2],[-5],[-3],[7],[7],[1],[7],[2],[9],[-6],[7],[9],[-3],[-2],[1],[-10],[-4],[-5],[7],[1],[10],[-3],[9],[4],[9],[-5],[8],[-4],[8],[-5],[-6],[6],[-1],[8],[-3],[-1],[-2],[9],[10],[-3],[7],[-7],[4],[5],[-7],[-3],[-9],[-4],[-9],[8],[1],[4],[4],[7],[9],[4],[8],[1],[3],[3],[8],[3],[-4],[8],[9],[-5],[7],[-4],[-3],[6]], dtype = "int64")#candidate|1849|(112, 1)|const|int64
call_1846 = relay.TupleGetItem(func_476_call(relay.reshape(var_1847.astype('int16'), [5, 1, 10]), relay.reshape(var_1848.astype('int16'), [5, 2, 10]), relay.reshape(const_1849.astype('int64'), [112,]), ), 0)
call_1850 = relay.TupleGetItem(func_481_call(relay.reshape(var_1847.astype('int16'), [5, 1, 10]), relay.reshape(var_1848.astype('int16'), [5, 2, 10]), relay.reshape(const_1849.astype('int64'), [112,]), ), 0)
output = relay.Tuple([call_1841,uop_1843,call_1846,var_1847,var_1848,const_1849,])
output2 = relay.Tuple([call_1842,uop_1845,call_1850,var_1847,var_1848,const_1849,])
func_1852 = relay.Function([var_1847,var_1848,], output)
mod['func_1852'] = func_1852
mod = relay.transform.InferType()(mod)
mutated_mod['func_1852'] = func_1852
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1852_call = mutated_mod.get_global_var('func_1852')
var_1854 = relay.var("var_1854", dtype = "int16", shape = (50,))#candidate|1854|(50,)|var|int16
var_1855 = relay.var("var_1855", dtype = "int16", shape = (50, 2))#candidate|1855|(50, 2)|var|int16
call_1853 = func_1852_call(var_1854,var_1855,)
output = call_1853
func_1856 = relay.Function([var_1854,var_1855,], output)
mutated_mod['func_1856'] = func_1856
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1438_call = mod.get_global_var('func_1438')
func_1440_call = mutated_mod.get_global_var('func_1440')
call_1861 = relay.TupleGetItem(func_1438_call(), 0)
call_1862 = relay.TupleGetItem(func_1440_call(), 0)
func_535_call = mod.get_global_var('func_535')
func_539_call = mutated_mod.get_global_var('func_539')
const_1878 = relay.const([-0.040215,-9.823563,6.755546,5.490021,0.067100,4.889348,2.753478,8.495028,3.417201,7.265457,-1.595173,-2.735894,-7.651491,-0.952511,-1.788855,-2.027351,-5.554311,-4.176705,1.153654,1.182814,7.509459,9.631936,-4.053075,-7.044244,-8.682325,2.661219,-3.056118,-1.087647,-2.423728,7.236501,8.585816,8.588263,-9.926496,9.937131,9.056020,3.708981,-6.170833,8.268823,6.716737,-0.155730,-3.172167,3.602811,8.957741,9.220324,-0.055210,-5.546158,2.653357,8.504870,1.974383,5.960394,8.002271,2.578512,-5.880739,3.570779,6.360450,1.307368,8.176884,-4.322962,2.237388,-1.752528,-7.784587,8.233133,-1.352880,-3.048518,3.613480,-3.299340,-8.743155,-3.048735,8.731639,-3.560174,4.105498,-8.546273,-6.725645,6.559717,-0.171515,-4.105539,-4.508427,-4.266486,-6.456092,5.419971,0.212248,5.292107,5.730657,-2.622080,6.673828,0.434092,-3.324729,2.051029,0.948059,-0.376572,-8.030360,-4.442874,-0.361213,5.127691,9.254830,2.891383,-9.898298,-1.937318,-7.335524,-8.678419,-3.637928,0.761974,0.576520,6.712850,9.767026,7.660268,-2.116209,9.662459,-7.649177,-7.284591,5.490090,-8.072321,-8.527940,9.254506,8.067979,-8.227126,-9.536080,5.303203,-3.818966,-7.702340,-4.828279,4.137383,1.115905,-8.933720,4.296104,-3.979759,-3.557683,-9.331390,2.313197,9.608264,-1.940349,-2.956862,0.899105,-1.572028,6.946259,-6.626191,-5.732435,-0.856386,-1.146202,-6.603306,7.588281,-6.634959,0.408425,-5.187706,-4.352729,-9.107586,4.709083,4.088963,-9.166126,-5.616501,-0.353286,4.952762,-0.848992,2.830379], dtype = "float32")#candidate|1878|(154,)|const|float32
var_1879 = relay.var("var_1879", dtype = "int16", shape = (5, 20))#candidate|1879|(5, 20)|var|int16
const_1880 = relay.const([-6,-1,-6,8,6,4,8,7,-1,6,3,-1,9,-1,-6,3,1,-4,3,-1,-10,8,-7,9,-2,-3,9,5,-7,-2,3,5,-7,10,-3,-10,8,-8,-3,-2,-4,-1,-9,10,3,9,7,-1,-4,-6,-4,7,-4,-6,4,1,-10,-8,1,5,9,-3,1,-3,-4,2,-5,9,-6,6,10,-7,-2,-1,4,-10,-3,1,8,7,-5,10,-9,-9,4,4,-3,-6,9,-1,-7,-8,-5,-4,-7,6,1,-9,-7,-5,4,-6,-4,3,2,-6,8,-1,5,5,-6,3], dtype = "int64")#candidate|1880|(112,)|const|int64
call_1877 = relay.TupleGetItem(func_535_call(relay.reshape(const_1878.astype('float32'), [7, 2, 11]), relay.reshape(var_1879.astype('int16'), [100,]), relay.reshape(const_1880.astype('int64'), [112,]), ), 3)
call_1881 = relay.TupleGetItem(func_539_call(relay.reshape(const_1878.astype('float32'), [7, 2, 11]), relay.reshape(var_1879.astype('int16'), [100,]), relay.reshape(const_1880.astype('int64'), [112,]), ), 3)
func_535_call = mod.get_global_var('func_535')
func_539_call = mutated_mod.get_global_var('func_539')
call_1891 = relay.TupleGetItem(func_535_call(relay.reshape(const_1878.astype('float32'), [7, 2, 11]), relay.reshape(call_1877.astype('int16'), [100,]), relay.reshape(const_1880.astype('int64'), [112,]), ), 0)
call_1892 = relay.TupleGetItem(func_539_call(relay.reshape(const_1878.astype('float32'), [7, 2, 11]), relay.reshape(call_1877.astype('int16'), [100,]), relay.reshape(const_1880.astype('int64'), [112,]), ), 0)
func_1796_call = mod.get_global_var('func_1796')
func_1799_call = mutated_mod.get_global_var('func_1799')
call_1903 = relay.TupleGetItem(func_1796_call(relay.reshape(call_1877.astype('int16'), [100,])), 3)
call_1904 = relay.TupleGetItem(func_1799_call(relay.reshape(call_1877.astype('int16'), [100,])), 3)
func_1406_call = mod.get_global_var('func_1406')
func_1407_call = mutated_mod.get_global_var('func_1407')
call_1910 = func_1406_call()
call_1911 = func_1406_call()
output = relay.Tuple([call_1861,call_1877,const_1878,var_1879,const_1880,call_1891,call_1903,call_1910,])
output2 = relay.Tuple([call_1862,call_1881,const_1878,var_1879,const_1880,call_1892,call_1904,call_1911,])
func_1913 = relay.Function([var_1879,], output)
mod['func_1913'] = func_1913
mod = relay.transform.InferType()(mod)
mutated_mod['func_1913'] = func_1913
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1914 = relay.var("var_1914", dtype = "int16", shape = (5, 20))#candidate|1914|(5, 20)|var|int16
func_1913_call = mutated_mod.get_global_var('func_1913')
call_1915 = func_1913_call(var_1914)
output = call_1915
func_1916 = relay.Function([var_1914], output)
mutated_mod['func_1916'] = func_1916
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1473_call = mod.get_global_var('func_1473')
func_1475_call = mutated_mod.get_global_var('func_1475')
call_1946 = func_1473_call()
call_1947 = func_1473_call()
output = relay.Tuple([call_1946,])
output2 = relay.Tuple([call_1947,])
func_1951 = relay.Function([], output)
mod['func_1951'] = func_1951
mod = relay.transform.InferType()(mod)
output = func_1951()
func_1952 = relay.Function([], output)
mutated_mod['func_1952'] = func_1952
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1473_call = mod.get_global_var('func_1473')
func_1475_call = mutated_mod.get_global_var('func_1475')
call_1996 = func_1473_call()
call_1997 = func_1473_call()
func_1534_call = mod.get_global_var('func_1534')
func_1537_call = mutated_mod.get_global_var('func_1537')
var_2016 = relay.var("var_2016", dtype = "uint32", shape = (605, 2))#candidate|2016|(605, 2)|var|uint32
call_2015 = func_1534_call(relay.reshape(var_2016.astype('uint32'), [11, 10, 11]), relay.reshape(var_2016.astype('uint32'), [11, 10, 11]), )
call_2017 = func_1534_call(relay.reshape(var_2016.astype('uint32'), [11, 10, 11]), relay.reshape(var_2016.astype('uint32'), [11, 10, 11]), )
output = relay.Tuple([call_1996,call_2015,var_2016,])
output2 = relay.Tuple([call_1997,call_2017,var_2016,])
func_2026 = relay.Function([var_2016,], output)
mod['func_2026'] = func_2026
mod = relay.transform.InferType()(mod)
var_2027 = relay.var("var_2027", dtype = "uint32", shape = (605, 2))#candidate|2027|(605, 2)|var|uint32
output = func_2026(var_2027)
func_2028 = relay.Function([var_2027], output)
mutated_mod['func_2028'] = func_2028
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2058 = relay.var("var_2058", dtype = "float64", shape = ())#candidate|2058|()|var|float64
var_2059 = relay.var("var_2059", dtype = "float64", shape = (8, 2, 13))#candidate|2059|(8, 2, 13)|var|float64
bop_2060 = relay.greater_equal(var_2058.astype('bool'), var_2059.astype('bool')) # shape=(8, 2, 13)
func_2026_call = mod.get_global_var('func_2026')
func_2028_call = mutated_mod.get_global_var('func_2028')
var_2067 = relay.var("var_2067", dtype = "uint32", shape = (1210,))#candidate|2067|(1210,)|var|uint32
call_2066 = relay.TupleGetItem(func_2026_call(relay.reshape(var_2067.astype('uint32'), [605, 2])), 0)
call_2068 = relay.TupleGetItem(func_2028_call(relay.reshape(var_2067.astype('uint32'), [605, 2])), 0)
uop_2070 = relay.cosh(var_2067.astype('float64')) # shape=(1210,)
var_2073 = relay.var("var_2073", dtype = "float64", shape = (1210,))#candidate|2073|(1210,)|var|float64
bop_2074 = relay.less(uop_2070.astype('bool'), relay.reshape(var_2073.astype('bool'), relay.shape_of(uop_2070))) # shape=(1210,)
output = relay.Tuple([bop_2060,call_2066,bop_2074,])
output2 = relay.Tuple([bop_2060,call_2068,bop_2074,])
func_2087 = relay.Function([var_2058,var_2059,var_2067,var_2073,], output)
mod['func_2087'] = func_2087
mod = relay.transform.InferType()(mod)
var_2088 = relay.var("var_2088", dtype = "float64", shape = ())#candidate|2088|()|var|float64
var_2089 = relay.var("var_2089", dtype = "float64", shape = (8, 2, 13))#candidate|2089|(8, 2, 13)|var|float64
var_2090 = relay.var("var_2090", dtype = "uint32", shape = (1210,))#candidate|2090|(1210,)|var|uint32
var_2091 = relay.var("var_2091", dtype = "float64", shape = (1210,))#candidate|2091|(1210,)|var|float64
output = func_2087(var_2088,var_2089,var_2090,var_2091,)
func_2092 = relay.Function([var_2088,var_2089,var_2090,var_2091,], output)
mutated_mod['func_2092'] = func_2092
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1438_call = mod.get_global_var('func_1438')
func_1440_call = mutated_mod.get_global_var('func_1440')
call_2117 = relay.TupleGetItem(func_1438_call(), 0)
call_2118 = relay.TupleGetItem(func_1440_call(), 0)
func_1534_call = mod.get_global_var('func_1534')
func_1537_call = mutated_mod.get_global_var('func_1537')
var_2129 = relay.var("var_2129", dtype = "uint32", shape = (1210,))#candidate|2129|(1210,)|var|uint32
call_2128 = func_1534_call(relay.reshape(var_2129.astype('uint32'), [11, 10, 11]), relay.reshape(var_2129.astype('uint32'), [11, 10, 11]), )
call_2130 = func_1534_call(relay.reshape(var_2129.astype('uint32'), [11, 10, 11]), relay.reshape(var_2129.astype('uint32'), [11, 10, 11]), )
bop_2132 = relay.floor_divide(var_2129.astype('float64'), relay.reshape(call_2128.astype('float64'), relay.shape_of(var_2129))) # shape=(1210,)
bop_2135 = relay.floor_divide(var_2129.astype('float64'), relay.reshape(call_2130.astype('float64'), relay.shape_of(var_2129))) # shape=(1210,)
output = relay.Tuple([call_2117,bop_2132,])
output2 = relay.Tuple([call_2118,bop_2135,])
func_2139 = relay.Function([var_2129,], output)
mod['func_2139'] = func_2139
mod = relay.transform.InferType()(mod)
mutated_mod['func_2139'] = func_2139
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2140 = relay.var("var_2140", dtype = "uint32", shape = (1210,))#candidate|2140|(1210,)|var|uint32
func_2139_call = mutated_mod.get_global_var('func_2139')
call_2141 = func_2139_call(var_2140)
output = call_2141
func_2142 = relay.Function([var_2140], output)
mutated_mod['func_2142'] = func_2142
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1951_call = mod.get_global_var('func_1951')
func_1952_call = mutated_mod.get_global_var('func_1952')
call_2151 = relay.TupleGetItem(func_1951_call(), 0)
call_2152 = relay.TupleGetItem(func_1952_call(), 0)
output = call_2151
output2 = call_2152
func_2161 = relay.Function([], output)
mod['func_2161'] = func_2161
mod = relay.transform.InferType()(mod)
output = func_2161()
func_2162 = relay.Function([], output)
mutated_mod['func_2162'] = func_2162
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2161_call = mod.get_global_var('func_2161')
func_2162_call = mutated_mod.get_global_var('func_2162')
call_2178 = func_2161_call()
call_2179 = func_2161_call()
func_450_call = mod.get_global_var('func_450')
func_453_call = mutated_mod.get_global_var('func_453')
var_2210 = relay.var("var_2210", dtype = "int64", shape = (112,))#candidate|2210|(112,)|var|int64
call_2209 = relay.TupleGetItem(func_450_call(relay.reshape(var_2210.astype('int64'), [14, 2, 4])), 0)
call_2211 = relay.TupleGetItem(func_453_call(relay.reshape(var_2210.astype('int64'), [14, 2, 4])), 0)
output = relay.Tuple([call_2178,call_2209,var_2210,])
output2 = relay.Tuple([call_2179,call_2211,var_2210,])
func_2213 = relay.Function([var_2210,], output)
mod['func_2213'] = func_2213
mod = relay.transform.InferType()(mod)
var_2214 = relay.var("var_2214", dtype = "int64", shape = (112,))#candidate|2214|(112,)|var|int64
output = func_2213(var_2214)
func_2215 = relay.Function([var_2214], output)
mutated_mod['func_2215'] = func_2215
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1473_call = mod.get_global_var('func_1473')
func_1475_call = mutated_mod.get_global_var('func_1475')
call_2220 = func_1473_call()
call_2221 = func_1473_call()
output = relay.Tuple([call_2220,])
output2 = relay.Tuple([call_2221,])
func_2222 = relay.Function([], output)
mod['func_2222'] = func_2222
mod = relay.transform.InferType()(mod)
mutated_mod['func_2222'] = func_2222
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2222_call = mutated_mod.get_global_var('func_2222')
call_2223 = func_2222_call()
output = call_2223
func_2224 = relay.Function([], output)
mutated_mod['func_2224'] = func_2224
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1438_call = mod.get_global_var('func_1438')
func_1440_call = mutated_mod.get_global_var('func_1440')
call_2225 = relay.TupleGetItem(func_1438_call(), 0)
call_2226 = relay.TupleGetItem(func_1440_call(), 0)
output = relay.Tuple([call_2225,])
output2 = relay.Tuple([call_2226,])
func_2229 = relay.Function([], output)
mod['func_2229'] = func_2229
mod = relay.transform.InferType()(mod)
output = func_2229()
func_2230 = relay.Function([], output)
mutated_mod['func_2230'] = func_2230
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2161_call = mod.get_global_var('func_2161')
func_2162_call = mutated_mod.get_global_var('func_2162')
call_2234 = func_2161_call()
call_2235 = func_2161_call()
const_2241 = relay.const([[[False,True,False,True,True,True,False,True,False,False,True,False,False,False],[False,True,True,True,False,False,True,True,True,True,False,True,False,False],[False,False,False,False,True,False,False,False,True,False,True,False,False,False],[False,False,True,False,True,False,False,True,True,True,False,False,False,False],[True,False,False,True,False,False,True,True,False,True,False,False,True,True],[False,True,False,False,True,True,False,False,True,False,True,False,False,False],[False,False,False,True,True,True,False,True,True,False,True,False,True,True]],[[False,True,False,False,False,False,False,False,True,False,False,True,True,False],[True,True,False,False,True,False,True,False,True,False,False,True,False,True],[True,True,False,True,False,False,True,True,True,True,True,False,True,True],[True,False,True,True,True,True,True,True,False,False,True,True,False,True],[False,False,False,True,False,False,False,False,True,True,True,False,False,False],[False,False,False,False,False,True,True,False,True,False,True,True,False,False],[False,True,False,True,True,False,False,True,True,True,False,False,False,True]],[[False,True,False,False,True,False,False,True,True,True,True,False,True,False],[True,False,True,False,True,True,True,False,True,True,False,False,False,False],[False,True,True,False,False,True,True,True,True,True,False,True,True,False],[True,False,False,True,False,True,True,True,False,False,False,False,True,False],[False,False,False,True,True,True,True,True,True,False,False,False,False,False],[True,True,False,True,True,True,False,False,False,True,True,True,True,True],[True,False,True,True,False,True,False,True,True,False,False,False,False,False]],[[False,False,True,False,True,True,True,True,False,True,True,True,False,False],[False,True,False,True,True,True,False,False,True,True,True,False,True,False],[False,True,False,False,False,True,False,True,True,True,False,True,False,True],[False,False,False,False,True,False,True,True,True,False,True,False,True,False],[False,False,False,False,True,True,True,True,False,True,True,True,True,True],[True,True,True,True,False,True,False,True,True,True,False,False,True,True],[True,False,False,True,False,False,False,False,True,True,True,False,False,False]],[[True,True,False,False,True,True,False,True,False,False,False,True,True,True],[True,True,False,False,True,False,False,False,True,False,False,False,True,True],[False,True,False,False,True,False,False,False,True,False,True,True,False,True],[False,False,False,True,True,True,False,False,True,False,False,False,False,False],[True,True,False,True,False,False,True,True,False,False,True,True,False,False],[False,True,False,False,True,False,True,False,True,True,False,True,True,True],[True,True,True,False,False,True,False,True,True,True,False,True,True,False]],[[False,False,False,False,True,False,False,False,True,False,False,False,True,False],[True,True,True,True,False,True,True,True,False,True,False,False,True,False],[True,False,False,False,False,True,False,True,True,True,True,False,True,True],[True,False,False,False,True,True,True,False,False,True,True,True,False,True],[True,True,True,False,False,False,False,False,True,True,False,False,False,True],[True,True,True,False,True,True,False,True,False,False,True,True,True,False],[False,True,True,True,True,False,True,True,False,False,True,True,True,True]],[[False,True,True,True,False,False,True,True,True,True,False,True,True,True],[False,False,True,False,False,False,True,True,True,True,False,True,True,True],[True,False,True,True,True,False,False,True,False,True,False,True,False,True],[False,False,False,True,False,False,True,False,False,True,True,True,False,True],[True,True,True,False,True,False,True,False,False,True,True,False,False,True],[True,False,False,True,False,True,False,True,True,False,True,True,True,True],[True,True,False,False,False,True,False,True,True,True,True,True,False,False]],[[True,False,True,False,False,False,False,True,True,False,False,False,False,True],[True,True,False,False,False,True,False,False,False,False,True,False,True,False],[True,True,False,True,True,False,True,False,False,True,True,True,False,True],[True,False,False,False,False,True,True,False,False,True,True,False,False,False],[False,True,True,False,True,True,True,False,True,False,False,True,False,True],[False,False,False,True,False,True,False,False,False,True,True,False,False,False],[False,False,False,True,False,True,True,True,True,False,True,False,False,False]],[[False,False,True,False,False,False,False,True,True,False,True,True,True,False],[True,True,False,True,False,True,False,False,False,True,True,True,True,False],[False,False,False,False,False,False,False,True,False,False,False,True,False,True],[False,True,False,True,True,False,False,True,True,True,True,False,False,False],[True,False,False,True,False,True,True,False,True,False,True,True,False,True],[False,True,True,False,False,True,True,True,True,True,False,True,False,True],[True,True,True,False,True,False,False,True,True,True,True,False,True,True]],[[True,False,False,True,True,True,True,True,False,False,True,False,True,True],[True,False,True,False,True,False,False,False,False,False,True,True,False,False],[True,True,True,False,True,False,True,False,True,False,False,False,False,True],[False,False,False,True,False,True,True,True,False,True,True,False,False,False],[False,False,False,True,True,False,False,True,False,True,True,True,False,True],[True,False,False,True,False,True,False,False,False,True,True,False,True,False],[True,True,False,True,True,True,False,False,True,False,True,True,False,True]],[[False,False,False,False,False,True,True,True,False,False,True,False,True,True],[True,False,True,False,True,False,True,False,True,True,True,False,False,False],[True,False,True,True,False,False,True,False,True,True,True,True,True,True],[True,False,False,False,True,True,False,False,True,True,True,False,True,False],[False,True,False,True,True,False,True,True,False,False,True,True,True,True],[False,False,False,True,True,False,False,False,True,False,False,True,False,True],[True,True,True,False,False,False,True,True,False,False,False,False,True,True]],[[True,False,False,True,True,False,False,False,False,False,False,False,True,False],[True,True,False,False,False,True,False,False,True,False,True,True,False,True],[True,True,False,False,False,True,True,True,True,False,True,False,False,True],[False,True,True,True,False,True,True,False,True,False,False,False,False,True],[False,False,False,True,False,True,False,False,False,True,True,True,True,False],[True,False,True,True,True,False,False,False,False,False,False,True,False,True],[True,False,False,True,False,True,True,False,False,True,False,False,False,True]],[[True,False,True,True,False,False,False,True,True,True,True,True,True,False],[False,True,True,True,True,True,True,True,False,False,False,False,True,False],[False,True,False,False,True,True,True,True,False,True,True,True,False,False],[False,True,False,False,False,True,True,True,True,False,True,True,False,True],[False,True,True,False,True,True,False,False,True,True,False,True,True,True],[False,True,True,False,True,False,False,True,True,True,True,False,False,False],[False,False,True,False,False,False,False,True,False,True,True,True,False,True]],[[False,True,False,False,True,False,False,False,False,False,True,True,True,False],[False,True,False,False,False,True,False,False,False,False,True,False,True,False],[True,False,False,True,True,False,True,False,False,True,False,False,True,False],[False,False,False,False,False,True,False,False,False,False,False,False,False,True],[False,False,True,True,False,True,False,True,False,True,False,False,False,False],[True,True,False,True,False,True,True,False,False,True,False,False,True,False],[True,True,True,True,True,False,True,True,False,True,True,False,True,True]],[[False,True,True,True,True,False,False,True,True,True,True,True,False,True],[True,True,True,False,True,False,False,False,False,True,False,False,False,True],[False,True,False,True,True,True,False,False,True,True,True,False,False,False],[True,True,True,True,False,False,True,True,False,True,False,False,False,False],[True,True,True,True,False,True,False,True,False,True,True,False,False,False],[False,False,False,False,True,True,True,False,True,False,True,True,False,True],[False,False,True,True,True,False,False,False,True,True,True,False,False,True]]], dtype = "bool")#candidate|2241|(15, 7, 14)|const|bool
bop_2242 = relay.floor_mod(call_2234.astype('float32'), relay.reshape(const_2241.astype('float32'), relay.shape_of(call_2234))) # shape=(15, 7, 14)
bop_2245 = relay.floor_mod(call_2235.astype('float32'), relay.reshape(const_2241.astype('float32'), relay.shape_of(call_2235))) # shape=(15, 7, 14)
bop_2246 = relay.left_shift(bop_2242.astype('uint16'), relay.reshape(call_2234.astype('uint16'), relay.shape_of(bop_2242))) # shape=(15, 7, 14)
bop_2249 = relay.left_shift(bop_2245.astype('uint16'), relay.reshape(call_2235.astype('uint16'), relay.shape_of(bop_2245))) # shape=(15, 7, 14)
func_1796_call = mod.get_global_var('func_1796')
func_1799_call = mutated_mod.get_global_var('func_1799')
var_2252 = relay.var("var_2252", dtype = "int16", shape = (100,))#candidate|2252|(100,)|var|int16
call_2251 = relay.TupleGetItem(func_1796_call(relay.reshape(var_2252.astype('int16'), [100,])), 2)
call_2253 = relay.TupleGetItem(func_1799_call(relay.reshape(var_2252.astype('int16'), [100,])), 2)
bop_2263 = relay.less(bop_2246.astype('bool'), relay.reshape(bop_2242.astype('bool'), relay.shape_of(bop_2246))) # shape=(15, 7, 14)
bop_2266 = relay.less(bop_2249.astype('bool'), relay.reshape(bop_2245.astype('bool'), relay.shape_of(bop_2249))) # shape=(15, 7, 14)
func_1093_call = mod.get_global_var('func_1093')
func_1101_call = mutated_mod.get_global_var('func_1101')
const_2281 = relay.const(3, dtype = "int16")#candidate|2281|()|const|int16
const_2282 = relay.const([8,-7,8,4,-10,-3,-9,-7,-6,6,-4,7,9,7,-4,10,-6,8,9,-10,-7,4,-3,-8,-7,10,1,-3,-1,-4,9,-6,-3,8,8,-8,9,3,-4,3,-7,-7,2,1,-2,-8,-3,5], dtype = "int16")#candidate|2282|(48,)|const|int16
const_2283 = relay.const([False,True,False,True,True,False,False,True,True,True,False,True,True,True,False,True,False,False,False,False,False,True,True,True,True,True,False,True,True,False,True,True,False,False,True,True,False,True,False,True,False,False,False,False,True,True,True,True,True,True,True,True,True,True,False,False,False,True,True,False,True,True,True,True,True,False,False,True,True,False,True,False,True,True,False,False,False,True,False,True,True,True,False,False,False,True,False,True,False,True,True,True,False,False,True,True,True,True,True,False,False,False,False,True,True,False,True,False,False,True,True,True,True,False,True,True,True,True,False,True,False,True,False,True,False,True,False,True,True,True,True,True,True,False,False,True,False,True,True,False,True,False,True,False,False,False,True,True,True,False,False,False,True,True,True,True,False,True,False,True,True,False,False,False,False,False,True,False,False,False,True,True,True,False,True,True,True,False,True,False,False,True,False,False,False,True,True,True,True,False,False,False,False,True,False,False,True,False,False,True,False,True,False,True,False,True,True,True,False,False,True,False,True,False,False,False,True,False,True,False,False,True,False,False,False,True,False,False,True,False,True,True,False,False,True,False,True,False,True,True], dtype = "bool")#candidate|2283|(240,)|const|bool
const_2284 = relay.const([5.903459,4.208917,-2.883330,3.308128,5.964086,5.094543,0.151860,9.299109,6.377089,-6.741069,3.277299,0.759669,4.503915,0.081100,1.292682,-9.642307,-1.952489,2.671503,5.416092,-5.568251,3.785367,-1.436171,-6.596902,-0.509744,-4.231946,8.718509,-4.936072,-6.268108,3.470608,-9.215522,-7.896987,-9.182555,-2.627829,4.832152,-8.378818,3.336431,-9.840416,-6.400864,2.326498,-3.224247,9.685815,-9.871650,-3.742574,4.579339,-1.277235,1.450486,-7.844946,8.954094,2.662021,9.129039,-2.396602,2.232582,-7.743879,7.075141,-7.313053,-1.129934,6.654275,8.192062,3.175681,-2.863074,-6.438114,-4.537792,4.431183,-7.370694,8.890959,-0.010805,-5.028376,-8.676165,4.677333,-2.801005,4.364874,-9.085619,2.913594,-2.563067,-4.848293,6.832837,-6.065767,-6.521529,9.958778,-9.728133,-2.437592,3.857224,-5.814058,3.749475,9.085332,-3.162323,-7.180966,-0.122972,-1.719832,7.711494,4.949828,-5.568741,-7.673646,1.517167,8.903992,-2.678039,-8.558895,-1.296642,2.145612,-4.663798,8.491847,8.265712,8.049491,-1.170162,3.396982,1.371065,-1.784089,-7.044737,-3.120687,-5.708360,-3.299830,7.283929,-4.374611,0.499179,1.742667,8.061137,-2.959882,3.313442,-1.830894,-7.144040,5.864226,-8.641269,7.428656,-9.596812,-1.826905,9.692999,-5.178518,3.246336,-1.229692,-7.955271,-4.587869,-6.985337,3.727984,6.704764,4.206325,2.602137,6.936678,-0.835438,-1.759989,-6.041892,-6.989407,5.752896,-7.045910,0.707907,-9.170589,-1.452718,8.809401,6.683919,-4.798128,-8.974936,-6.113538,-3.487182,4.022944,-5.842196,-4.441998,-1.798300,-9.414172,8.059427,-4.575818,9.262987,-8.290582,-3.768809,7.806737,-2.954764,-7.208075,3.389363,-8.826851,-5.585267,5.912210,-9.573866,9.293029,-7.056925,-9.737534,-6.239892,-4.781224,4.822923,3.500371,6.686353,-1.486970,4.217136,-3.606885,5.244674,-3.359607,2.454683,5.778786,6.449450,-6.164964,-7.506511,9.094523,-0.414368,1.105228,8.920794,7.721432,5.239971,-1.581100,-0.593120,3.042211,-0.738190,4.664742,8.464332,8.234862,6.504093,-5.312266,-7.104409,-1.229214,-8.710420,2.723224,-6.367907,-5.152844,-2.034548,-8.336995,1.876530,-1.120705,-3.599436,8.955049,-4.632208,-3.521109,6.043343,-7.470452,3.127558,-6.336948,-7.963169,1.855248,-4.418032,-9.608979,-4.145352,3.400000,-0.894471,3.091212,7.021508,8.280409,9.252586,3.502787,-7.991997,5.175129,-0.289060,9.266196,8.384862,8.828248,-9.242612,-7.620593,7.317627,9.567432,7.391457,-9.494991,0.174585,0.159313,6.560446,5.131513,-1.002843,5.320905,-1.961297,5.360149,4.431289,2.862588,-6.046826,7.659764,2.486480,6.412838,3.512129,4.390373,1.996065,-4.081253,8.867389,3.599590,-8.499992,-7.094268,5.246620,-5.126674,9.805121,5.532375,1.733664,8.109876,7.487734,8.894636,-8.584228,8.803373,9.845735,-9.639889,-2.323492,-6.019309,3.673593,5.129143,-8.458297,6.780521,-6.839635,4.351931,8.216738,-5.742244,-5.312947,-5.899631,2.099682,-4.607806,1.030536,0.487476,-4.365109,-3.504457,4.918726,4.223725,9.426070,9.261010,8.295899,7.896124,1.389836,6.275384,6.435069,-8.191558,0.399037,-0.248022,5.760390,-6.022137,3.777341,7.000940,6.072864,0.156249,-9.085796,-4.120961,8.796397,-7.464952,8.777728,-2.232535,7.124778,0.395529,-5.969335,4.799898,-1.912048,3.308488,-0.576118,-6.598169,1.062006,-9.140427,-7.746778,7.800365,-4.585876,-1.162102,8.025127,2.320381,2.615656,-1.777454,-0.892172,5.020589,8.638093,-1.134363,-9.921490,1.250786,-3.787983,0.115466,-1.709070,7.064675,-0.532735,5.867623,-1.649453,0.168718,2.023569,0.715864,5.811556,-5.256616,-1.215349,2.706324,8.350668,-8.938423,-3.098703,-5.482328,3.183684,-9.135087,2.333030,2.576705,-1.836320,8.113999,-3.509905,2.131283,-2.668677,2.454409,-4.077357,8.065396,9.627434,-0.730960,0.333453,4.315796,-9.722774,-9.473961,2.700219,8.788488,-7.340826,8.102383,-1.163868,9.470949,5.594884,9.710803,4.887677,5.747822,-5.611721,-1.119959,5.793142,-5.090360,8.166591,1.074483,0.102264,-9.875279,-4.629067,-3.300559,-9.282071,9.505444,-5.729247,-2.938018,6.667176,1.221461,0.544667,5.702513,1.684436,-4.407932,-1.851702,6.206153,-1.360353,-9.913938,4.517695,0.082556,-4.328069,3.568180,1.540496,-9.315084,-6.384214,5.589083,9.030953,-7.531262,-9.480384,-9.511304,-1.898744,-4.887900,1.863679,0.821294,-9.322492,5.176927,3.495928,6.416212,-5.396472,8.868040,0.994333,-8.009551,2.205532,2.228184,8.266226,7.047194,5.514406,-4.518625,-0.096455,-8.810954,1.801611,0.220021,-8.345335,5.882054,-3.929361,1.351122,6.425029,-8.963704,-4.788273,1.180483,2.878258,-1.999678,-4.739157,-6.708513,-2.571008,0.319485,-8.052798,7.046020,-6.627911,6.067799,3.964783,-6.147713,-4.105663,-0.332674,5.159790,-6.359777,-2.936273,4.391025,3.144688,2.729773,-5.601199,4.121919,4.925318,-0.718712,-9.870217,-7.287641,-5.530931,-6.765431,9.582391,-9.925715,-4.342294,-0.822865,6.335837,-1.730341,9.378112,-6.590298,-9.983882,-6.554750,-4.177351,8.077607,-2.234375,6.300803,9.818643,5.919818,-3.599295,2.837987,-0.818957,2.093064,5.261592,-2.273519,6.321854,7.805369,1.849058,7.764611,-2.557989,-6.922724,-3.153753,1.146758,2.171735,-7.763431,-3.429234,5.292898,8.897686,-2.982765,-6.856914,7.171951,-0.020080,5.087627,-7.799212,7.989646,-3.156171,0.649154,9.437181,-4.056340,7.459737,-7.543148,-1.414464,-1.898677,-9.383725,-9.071825,-6.131000,-4.119921,-1.926792,-2.232206,-3.024327,4.160898,7.575929,8.599229,-2.272916,8.784082,7.786712,0.931438,8.502780,5.713761,0.568455,-2.900581,-6.904740,-6.969971,0.881418,6.356724,-9.969960,-7.662279,-9.541667,3.949004,4.128383,-4.090530,-2.491592,-1.880627,-1.875451,-1.996469,9.436733,7.926519,6.300627,4.557321,-2.116362,3.694067,9.898324,-2.178324,6.317531,-0.821688,-0.403587,8.343435,8.034122,8.026637,-0.978354,1.692790,-1.056463,9.358178,-4.533868,-7.457748,0.015516,0.689281,8.065071,-0.526886,0.882077,6.374850,-4.610479,3.294658,-0.497065,0.068797,-5.139611,3.568436,8.482635,-2.739516,4.965061,-1.402575,-2.569893,8.344368,8.568382,4.454468,0.615246,-3.279745,2.818321,0.211757,-6.937480,-0.275507,2.017692,-9.468661,-0.885470,-8.976143,4.578170,9.062894,-8.698733,-9.939360,-8.408167,4.280624,-7.333028,9.416515,4.615243,-2.113644,0.380131,-8.776219,-2.630378,7.461371,7.034361,-4.586510,-2.332403,6.703668,-0.677260,-1.644374,1.807975,-5.470973,-3.993560,0.526312,-8.550571,1.110227,0.998491,-1.031174,-3.007202,-3.759457,9.499018,1.753645,-4.917037,6.403316,-5.744594,-4.952427,2.494132,0.702877,-0.579988,1.786769,-1.626664,1.431905,-9.936255,1.518894,0.136492,-2.320875,-7.366449,9.335601,-6.850399,-0.879337,-2.631884,-2.345119,9.942554,5.638590,7.749755,5.323244,-2.440174,3.673474,-1.391815,3.249173,-3.095514,9.559874,5.141596,-2.298259,2.662512,-3.632765,0.597610,8.404208,9.205277,-7.910669,5.877458,-6.702279,-4.721978,-8.893776,2.720835,6.108429,2.955159,-1.473152,2.615737,9.801927,5.318331,-7.282970,-1.079447,-8.966524,7.822918,-9.269582,-1.717934,-2.216437,-5.826174,7.474540,-1.402412,-1.343330,7.265004,6.678897,3.854155,3.224191,-0.672328,1.077830,7.045385,-6.631853,-7.589311,8.179806,-2.016844,-7.537020,-1.147971,-1.010497,-7.086419,7.960322,2.477324,-9.123519,6.411529,-3.602009,8.641322,-7.304932,5.960982,2.446779,-6.158765,-5.576116,-0.658198,6.782376,-4.433102,-5.392944,-8.437132,6.364194,-1.506014,-1.098312,6.784979,0.587839,-5.230467,-7.710240,8.197818,-0.729947,-3.724226,-9.698291,5.021036,-2.558975,5.253114,-0.354987,-1.089099,5.016627,8.387570,-9.911794,-3.984295,4.985967,6.542333,-2.579617,-0.990512,-5.452968,7.498939,6.933235,1.355991,0.665277,-6.898226,-5.458188,6.824690,0.712034,-4.021329,2.860979,-9.318237,2.706642,-2.657141,-2.639680,-9.895355,-4.316214,2.692905,-1.322691,0.191720,2.698824,6.340418,-1.491728,3.073511,3.193602,6.989612,8.048062,-4.873977,2.207679,-6.509201,3.740813,2.356963,0.986706,8.422524,8.612661,0.598841,8.888619,-1.313433,5.814518,1.159140,6.116708,6.136461,-7.029963,-9.489114,1.623877,1.035788,6.044809,-7.005250,8.671965,6.160702,-9.910605,7.661693,5.375335,6.581361,-8.291947,-1.212497,4.170616,-4.125603,1.448161,4.055123,5.030749,8.745006,5.617116,5.842292,8.523568,1.232413,5.289174,2.304570,2.569094,2.624579,-8.072864,0.091129,-1.812581,2.618413,-1.319840,-3.460599,-1.246040,1.087423,3.600076,-0.450736,2.069799,-8.281551,2.632232,7.592579,-6.314336,-7.972712,-5.194726,-0.519248,0.783592,-7.336232,-8.436830,1.119838,-8.101096,8.476326,-8.545102,5.417303,2.722419,-7.724511,4.108614,1.031159,9.143604,-5.118995,-2.507309,-1.915194,3.115030,6.814916,7.396350,-6.882548,4.847349,0.832068,9.591610,5.254577,-3.069502,2.664341,-1.706459,1.734235,-0.474004,0.935730,-9.985336,-0.770236,2.063251,6.590850,2.544637,-7.556024,1.417672,-6.037228,-1.824334,-7.946758,3.925489,3.225327,-1.948971,6.328808,-7.360847,5.430177,-4.881662,-8.003121,-9.064501,-6.451011,9.296771,-7.264986,-4.352336,-6.651776,6.973868,4.682414,-6.363414,-3.669114,6.784472,-8.986988,-1.348172,-2.794393,0.243238,-6.375605,5.162640,8.404448,-3.529412,5.993178,-0.040317,1.013130,-9.766190,2.786370,8.908437,-1.803183,8.804410,5.000515,-7.600860,8.757097,-4.894831,9.797744,-2.339745,6.816816,0.459523,-1.491882,-0.641514,5.159477,-8.817217,3.712290,-0.273935,5.322554,-7.616746,9.246519,-3.517189,5.013814,0.583268,-5.613000,4.665948,-4.008249,8.415308,4.561548,-3.417860,-0.451381,6.442168,8.769014,6.799481,7.854173,1.929199,3.049162,4.463385,-5.452059,1.725334,9.070662,-8.145297,6.486932,-2.453427,0.244875,1.120347,8.268792,-2.753980,-1.177002,1.422611,2.570050,8.778711,6.844366,3.808986,0.350136,-9.962257,-5.730587,-3.420783,-1.124523,-9.738724,8.249712,-4.538460,-3.680767,5.010952,-6.441216,-5.803922,8.559875,-6.991069,7.183797,3.275613,8.216662,9.966284,-3.329709,8.468522,-1.280721,4.278423,-2.383668,-3.523348,-9.695028,3.678039,3.507706,-4.160070,9.723884,1.322669,9.839660,5.539556,-3.101670,-4.261439,-6.275741,-7.707270,5.684590,2.789367,0.125271,-8.973929,4.775212,-1.538824,6.387106,-2.519522,-0.164374,6.528019,-5.771488,-5.400984,5.396580,5.430211,-0.346232,-0.543343,7.742291,6.869359,-1.177647,-8.779048,-4.505620,-5.407046,-8.450371,-3.587178,-5.760012,-6.223042,6.462156,9.407605,9.643495,-9.926232,-8.547891,3.921027,-5.417169,-1.611970,-0.980215,5.234876,-3.455071,-1.961319,-9.378403,5.082202,1.995117,2.260726,-2.065282,5.329494,4.843192,5.058779,1.710764,-9.964613,-6.518410,-8.375878,0.221480,2.251841,9.803642,-6.618102,-5.534592,-5.054178,8.386560,-4.456292,-2.419015,1.751152,-3.490142,-9.312533,3.088736,0.624146,8.548340,-9.260964,5.636154,-2.626242,-2.480490,-6.736325,-9.439362,-8.826989,-0.130438,2.302337,-9.274655,3.560713,-9.203660,-1.214895,-2.548155,1.649662,6.721400,-1.289562,1.517124,1.332734,-2.235545,-2.142244,-8.384568,-9.604104,-6.849142,-4.821785,6.575590,7.575937,4.209120,5.460403,3.696069,7.515705,1.861114,-1.563080,6.777275,-4.238057,5.679073,-8.550970,7.823815,0.221921,6.935094,-1.733541,2.581093,-8.804676,-3.243114,-9.897056,-2.130704,-2.314659,4.478990,-8.526383,4.325867,-4.037766,0.586832,-5.600513,-7.275760,-6.024723,8.921762,-6.810189,-5.672254,1.786491,-2.537586,2.882732,-4.014366,-5.906513,-9.874146,-6.966085,0.741847,-1.200595,9.534490,3.618372,-3.249740,2.090511,5.187247,-9.634734,-0.711173,-6.943007,1.625750,8.208799,3.515936,-8.085531,-4.386116,9.290404,4.587357,3.108517,2.766453,-6.322871,-2.445364,6.936552,0.602547,-0.105158,-9.425760,5.210825,-8.521741,8.062991,-1.454134,5.154446,-6.480423,3.192559,-7.810579,-4.996052,9.621571,-9.851376,7.144412,9.350273,8.788185,-9.536670,-8.176739,-4.997382,7.840002,7.448601,1.923520,-4.655670,7.707930,9.005554,-7.349701,3.528318,3.845255,-9.579929,-2.857259,3.509512,7.447930,3.903919,0.890966,-8.510679,5.211466,6.036677,-7.976725,-3.990738,3.245323,0.305314,1.532980,6.871892,-2.826869,7.534745,-0.219568,0.401037,7.295643,7.924671,-8.129675,4.335547,5.938839,-2.957094,-2.070283,-8.060478,-3.377098,-6.937292,-8.643667,-7.735649,6.972514,5.763775,8.151920,3.859743,7.379449,9.130369,-2.949081,6.415288,6.725773,8.472669,-9.034578,4.711191,0.683780,0.157031,-7.707365,0.235804,1.782519,7.802004,2.129019,0.091327,4.788769,-5.740259,5.577173,-6.460415,7.199481,6.525599,1.759999,-0.080077,-6.507746,-4.820433,-7.728253,-5.152571,3.266029,-2.738784,-9.572518,4.113431,-2.137432,5.816607,-4.539346,7.394180,2.599756,7.653960,5.652797,0.405406,7.959425,-5.415402,9.475940,-6.353061,-1.301944,3.745449,-9.383647,6.183501,-5.568175,1.726479,-8.133565,-2.525951,1.640565,-3.265564,-6.897267,-2.135789,4.761666,2.397362,7.545317,0.701337,-6.458548,-0.584890,-0.712480,8.392121,-9.585690,1.102253,3.291098,-1.285596,6.011424,-2.679972,-8.962664,-2.467906,9.200673,2.072822,6.905614,9.519514,3.203278,-9.726985,9.833449,5.505743,-8.915421,-8.712704,-1.971513,-9.176075,2.228886,8.481862,3.651732,8.757345,5.181808,6.676492,-3.362455,-1.431492,-5.143811,4.967520,5.504189,8.988013,2.449287,7.573629,-6.133271,3.214985,-1.193188,-5.840896,-2.106438,9.756807,-5.842567,-8.097158,8.313595,-0.536068,-8.386056,2.235092,-7.389443,3.761106,-6.267700,-4.863499,4.655808,-6.987997,-7.656986,2.840373,-8.289834,4.467804,-7.083567,1.544296,-4.998047,4.246838,5.620849,-9.541488,-1.542752,1.879036,5.380367,3.825483,-0.445455,-0.579779,-7.405843,7.099457,-2.227153,7.531979,4.143062,-1.155333,9.292342,-8.374287,-0.457029,-5.796438,-8.200011,9.334674,1.492835,-9.864330,-3.663135,2.669837,2.311520,-8.217975,3.430743,-6.314305,-0.730433,-2.645305,-5.855587,8.687223,-8.639950,2.523801,6.717607,-3.663002,-0.969807,-9.315026,1.353242,8.809555,3.443105,3.751743,-6.350838,2.424839,-2.142345,-0.102517,-5.183155,-4.848742,9.607430,8.126544,-3.851903,-8.143138,2.066605,-6.201604,-4.915105,3.963343,3.936131,-9.430718,-5.892120,-2.412506,3.036580,0.034529,-3.188850,-3.290236,-7.163002,2.307341,3.437551,0.213796,-9.388463,-3.643317,8.260836,-0.421344,-8.331803,-6.787219,-4.140134,4.956012,3.713269,5.170919,-6.300051,-0.612045,-3.393848,-9.201529,1.003101,-2.131407,4.252241,-7.758023,-9.921992,7.678047,1.524006,3.616176,-2.924464,9.480697,9.581765,-4.020032,3.232867,-5.568289,-3.937975,9.376251,-1.143388,6.794612,-9.294551,6.489864,9.331887,5.275200,-6.480281,-9.770807,-5.607274,6.643728,3.078972,8.943558,-4.927060,-7.135662,-3.702245,-3.127293,0.446323,-3.548653,9.727496,-1.302690,-9.137565,5.675443,-6.880112,-8.216152,7.459478,-6.129041,9.532550,0.026572,-0.760587,-0.213259,-7.869537,6.929539,-0.082360,2.490307,1.027522,-0.003343,-4.964635,3.702948,-1.084877,5.333110,0.632666,-7.005855,3.011949,-3.159191,4.203601,7.286032,0.405285,2.408553,-3.338321,5.538193,-3.920247,-5.280161,2.352786,1.907208,0.392042,2.893115,-7.657142,6.330475,-4.147261,0.871636,-8.963183,5.917269,-5.855604,4.161404,3.766383,-2.356398,0.655197,-4.784887,-0.867572,-9.818444,-6.342831,-1.056518,1.686507,8.339847,0.682206,3.929655,0.888658,4.937880,3.394200,-6.036411,0.860436,-7.379485,4.552088,3.664980,-3.662116,9.531655,-2.953123,4.141067,5.893931,0.383469,-0.368249,-9.658904,3.127207,9.951243,5.635916,8.981969,-6.926050,7.159809,7.835377,-5.062303,-7.846717,-6.233858,5.507210,-5.417664,-7.481507,-4.481577,-5.814711,-9.012510,-4.742174,-6.483499,-3.002413,2.486721,4.880258,-9.481651,9.436814,-3.465125,9.743532,-5.469958,-9.027195,5.591512,-3.341512,7.926069,7.422901,-7.984252,9.115513,6.368335,5.100153,1.072181,5.209734,6.096361,-9.450892,-9.200679,-6.184386,-6.179729,5.139675,-6.755303,5.889189,-1.882342,2.327500,9.777023,9.915583,-5.886216,5.063822,8.736564,-6.381121,0.295982,-6.899066,-6.746972,5.445942,6.047083,-5.125917,-7.474170,-8.356110,-0.715632,-5.422058,-6.071857,-4.443223,-9.315045,-1.335176,-7.003989,-9.638462,7.012422,5.459969,0.335804,1.733453,4.423800,-8.911508,9.540824,-4.783882,3.909331,4.160292,-1.868051,-6.847709,5.539785,-9.393951,8.462544,-2.547493,2.351534,-8.669731,-7.819703,-5.820664,-0.850370,2.067978,6.904162,5.468566,-8.705096,-3.719168,1.959450,6.941904,-6.335777,-9.403446,-2.637358,-2.064188,0.374242,8.117435,-3.002261,4.101477,-2.028579,7.225322,0.418716,-3.785718,9.564778,-2.081074,-7.564983,-2.816708,-9.790714,-0.432849,7.189206,-0.152132,-0.283819,-2.951523,6.506969,8.110922,-0.348231,2.342383,1.128503,-4.506357,5.211617,2.677074,-5.932923,-4.056208,8.146126,-1.081504,4.639984,9.350546,-9.808935,4.724745,7.054841,7.302494,8.642410,7.102316,2.981229,8.835501,1.541348,-6.255130,-7.286181,-6.859281,9.463218,-1.189545,4.203924,-5.736097,2.666381,-3.333126,-0.663097,3.447550,-1.238738,6.233184,-8.170061,-4.616305,1.747230,0.928584,6.879660,9.798782,-0.513816,-7.053388,6.980379,2.113493,-5.185505,-8.169419,-3.512073,-7.995374,-5.934992,-9.597012,-3.096542,-2.064154,9.898519,-5.805008,9.518235,5.744753,1.615456,-5.260541,9.716189,-3.085927,9.121185,-4.987242,-3.224450,-7.634133,-4.027704,1.117335,-7.339502,7.750360,9.477934,-5.747398,0.896383,7.822390,8.534070,-4.166167,3.293470,-0.591540,2.812416,-1.000537,1.624454,-8.730859,4.604196,2.505018,-7.342621,1.017639,-3.739085,-2.928108,-4.905707,-5.474232,3.825027,-1.148192,5.700991,3.302189,4.466507,-4.566981,5.011567,0.795367,-1.583841,-6.555725,2.854372,7.879928,4.334760,9.074201,2.582204,-2.129778,-9.299695,8.355293,7.784622,-3.711504,4.426850,-0.965333,-5.561877,9.791867,-1.627300,3.672386,-3.158217,6.158559,-2.006201,2.145246,-3.874351,9.943411,-0.893074,3.489213,0.072611,-9.544310,-9.954820,8.829712,-1.043541,-3.356488,-0.566866,-2.543305,-2.715506,0.447766,6.303969,-0.698807,-5.546466,-8.302509,-6.758147,-0.575752,-2.286262,-2.152597,0.087380,8.781804,0.861735,-4.514036,2.356237,-8.374303,-8.475698,-5.022035,-9.919721,-3.944699,-2.411319,3.617170,-1.884322,9.746913,-1.629077,2.283784], dtype = "float32")#candidate|2284|(1820,)|const|float32
call_2280 = relay.TupleGetItem(func_1093_call(relay.reshape(const_2281.astype('int16'), []), relay.reshape(const_2282.astype('int16'), [12, 4, 1]), relay.reshape(const_2283.astype('bool'), [12, 4, 5]), relay.reshape(call_2251.astype('float32'), [154,]), relay.reshape(var_2252.astype('int16'), [100,]), relay.reshape(const_2284.astype('float32'), [1820,]), ), 8)
call_2285 = relay.TupleGetItem(func_1101_call(relay.reshape(const_2281.astype('int16'), []), relay.reshape(const_2282.astype('int16'), [12, 4, 1]), relay.reshape(const_2283.astype('bool'), [12, 4, 5]), relay.reshape(call_2251.astype('float32'), [154,]), relay.reshape(var_2252.astype('int16'), [100,]), relay.reshape(const_2284.astype('float32'), [1820,]), ), 8)
output = relay.Tuple([call_2251,var_2252,bop_2263,call_2280,const_2281,const_2282,const_2283,const_2284,])
output2 = relay.Tuple([call_2253,var_2252,bop_2266,call_2285,const_2281,const_2282,const_2283,const_2284,])
func_2286 = relay.Function([var_2252,], output)
mod['func_2286'] = func_2286
mod = relay.transform.InferType()(mod)
var_2287 = relay.var("var_2287", dtype = "int16", shape = (100,))#candidate|2287|(100,)|var|int16
output = func_2286(var_2287)
func_2288 = relay.Function([var_2287], output)
mutated_mod['func_2288'] = func_2288
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2345 = relay.var("var_2345", dtype = "int32", shape = (5, 3, 8))#candidate|2345|(5, 3, 8)|var|int32
const_2346 = relay.const([[[8,-7,-1,4,-6,-9,-5,3],[-8,-8,-7,-8,4,2,8,9],[3,4,-5,-9,5,-1,5,-10]],[[9,5,-3,-9,-2,6,-4,-7],[3,2,4,-10,9,7,5,6],[5,10,-4,-5,-9,8,10,-4]],[[-9,-10,10,-9,-3,-1,-6,-2],[10,-9,10,3,-8,5,-6,-10],[5,-5,-2,-2,-3,-3,3,7]],[[5,10,-1,5,3,7,8,2],[7,-10,4,-4,-6,3,10,5],[-8,-3,9,10,9,-9,5,2]],[[-1,-1,-6,-9,1,2,-5,-9],[3,4,1,3,-9,8,-4,-8],[-5,-7,5,3,-1,7,3,7]]], dtype = "int32")#candidate|2346|(5, 3, 8)|const|int32
bop_2347 = relay.bitwise_xor(var_2345.astype('int32'), relay.reshape(const_2346.astype('int32'), relay.shape_of(var_2345))) # shape=(5, 3, 8)
const_2358 = relay.const([[[5,-3,4,8,3,-9,-3,7],[-3,-6,3,4,-1,10,2,-1],[1,-3,-3,5,7,2,2,-7]],[[-2,10,2,-9,-4,8,-2,6],[-2,-8,-8,-2,-9,-4,-6,8],[3,-3,3,-9,-10,-5,-7,-8]],[[10,3,-1,4,1,-2,8,-5],[9,7,10,9,4,-4,4,1],[8,-3,-10,8,6,8,-4,-6]],[[-3,-5,8,4,-9,-4,-10,9],[8,-8,1,-2,10,3,-5,6],[-2,10,4,-4,4,-6,-3,-6]],[[-8,-1,-10,8,-5,3,9,-7],[-8,-1,-4,-7,-2,-5,-9,6],[-5,10,10,-5,-10,6,-6,2]]], dtype = "int32")#candidate|2358|(5, 3, 8)|const|int32
bop_2359 = relay.less(var_2345.astype('bool'), relay.reshape(const_2358.astype('bool'), relay.shape_of(var_2345))) # shape=(5, 3, 8)
uop_2363 = relay.rsqrt(bop_2347.astype('float64')) # shape=(5, 3, 8)
bop_2365 = relay.left_shift(uop_2363.astype('int64'), relay.reshape(bop_2347.astype('int64'), relay.shape_of(uop_2363))) # shape=(5, 3, 8)
bop_2390 = relay.floor_divide(uop_2363.astype('float32'), relay.reshape(bop_2365.astype('float32'), relay.shape_of(uop_2363))) # shape=(5, 3, 8)
bop_2394 = relay.divide(uop_2363.astype('float64'), relay.reshape(bop_2390.astype('float64'), relay.shape_of(uop_2363))) # shape=(5, 3, 8)
output = relay.Tuple([bop_2359,bop_2394,])
output2 = relay.Tuple([bop_2359,bop_2394,])
func_2413 = relay.Function([var_2345,], output)
mod['func_2413'] = func_2413
mod = relay.transform.InferType()(mod)
mutated_mod['func_2413'] = func_2413
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2414 = relay.var("var_2414", dtype = "int32", shape = (5, 3, 8))#candidate|2414|(5, 3, 8)|var|int32
func_2413_call = mutated_mod.get_global_var('func_2413')
call_2415 = func_2413_call(var_2414)
output = call_2415
func_2416 = relay.Function([var_2414], output)
mutated_mod['func_2416'] = func_2416
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1337_call = mod.get_global_var('func_1337')
func_1339_call = mutated_mod.get_global_var('func_1339')
call_2466 = func_1337_call()
call_2467 = func_1337_call()
const_2471 = relay.const([[[0.773652,0.777035,8.062037,-4.519659,7.842387,-5.233642,-9.762348,3.633682,4.790283,-1.358324,0.871369,0.778701,-8.948453,-4.528264],[8.582157,-6.336220,-3.091833,-1.064401,8.975199,7.759717,4.080874,1.090474,5.151714,-9.886393,-2.088165,2.553096,2.642555,5.891651],[0.600914,8.973259,2.320405,4.167640,7.507157,4.103021,-7.777298,-3.327806,-4.425187,7.915811,-2.424559,-2.434525,-2.153155,-1.714036],[-7.752565,-4.636906,2.774475,-3.122781,7.407229,9.750444,5.367214,9.852431,1.171176,-0.022849,4.373743,2.101266,5.340249,0.010307],[-3.810577,6.557574,1.466923,-7.240612,1.400431,2.447901,-7.993451,-8.198128,4.587445,-4.996441,5.718243,-7.072006,-5.004988,-2.357768],[-2.593982,-4.620999,6.906057,5.907713,8.239522,0.870625,4.881226,3.538373,3.455322,6.252094,6.041820,-3.139268,-3.573337,-7.105204],[-6.069914,3.522443,-4.422605,3.785999,5.382344,-1.506029,-6.177773,-8.747143,-0.224615,-7.704618,2.900437,-4.283279,6.648188,0.369624]],[[1.162941,-3.257290,-1.219743,-1.004315,1.753365,-4.258733,2.471830,6.983648,-8.404953,2.394706,9.120877,8.432098,0.778855,-4.122311],[-2.904686,0.143377,3.740005,3.113681,2.892777,-6.073645,-0.458992,2.244302,2.308314,0.498965,-6.678224,-1.830270,-7.305428,-4.070562],[9.263748,-8.572867,-0.663666,6.319503,-2.193075,4.450541,3.370940,-7.294533,-2.389417,4.390156,4.119673,-0.114283,1.560690,8.017244],[-9.721415,0.950677,-4.235422,3.183646,5.398931,-1.965788,4.481748,3.633737,7.960162,-6.628609,-1.985604,6.289229,1.559529,8.880749],[-1.396246,-1.315739,5.598841,-3.482269,-0.438883,-7.222755,6.310124,5.177308,3.958386,9.929674,-7.564275,-8.743888,1.800245,-1.025909],[0.186706,5.964764,0.536984,-6.997499,6.101133,-8.380400,-2.205762,-5.162753,-9.840114,8.387944,-7.638428,-3.734558,-7.284073,0.397958],[1.658484,-2.290363,-1.843238,-1.301588,-8.205443,-3.026720,-2.946698,1.661216,1.436304,-1.104211,9.127080,0.414290,-9.896911,-8.193258]],[[2.684142,-4.033634,-8.354904,9.325563,-7.809134,-1.183747,4.657577,-8.892539,2.133582,-7.689260,0.627482,-4.622985,-8.079448,5.739662],[-4.886377,-4.048544,2.246632,-3.996450,5.968765,-7.675780,0.797439,-6.342709,6.505857,-5.568964,-6.155029,-4.093780,7.725583,-7.460921],[-6.264075,-7.139301,-4.786002,-5.834818,8.290239,8.788674,0.869340,-8.358975,-9.148236,7.818758,-5.226673,-9.815271,-6.477995,-5.436787],[-2.051011,-0.597753,-3.360324,5.870674,3.539118,8.652739,-0.474633,8.947274,-2.776696,-7.997000,6.785775,3.052923,-2.732523,-8.877529],[-7.384176,-9.192563,-2.734117,4.106090,-0.409667,7.223749,4.704600,-2.000254,8.698237,3.975445,-3.434648,-1.569770,8.311585,9.610418],[7.899778,-7.322687,-8.608787,-0.616779,9.288464,-1.110116,-4.357598,5.140383,-5.249848,1.033096,-1.251125,2.540272,1.708851,-3.301204],[5.406633,-0.403911,8.884831,-2.727952,0.185287,-3.036970,4.760172,-9.850179,-3.472920,8.825797,-0.394856,-1.625922,7.179576,7.441856]],[[7.231792,4.443533,8.860647,-2.510840,-5.126889,-5.816550,5.093657,7.777607,8.968679,6.892990,5.480348,-3.129285,8.374865,-0.624822],[3.276621,8.981288,6.214008,2.141206,-0.412710,-1.466775,9.356572,3.442508,0.313722,8.057652,-6.722631,7.999064,7.585356,7.807584],[-6.111376,4.233366,0.426508,6.409446,2.362485,9.472612,-3.764734,-3.724479,2.707569,-5.861437,-2.173299,7.627878,-7.236739,4.298115],[3.482785,2.068566,-9.332103,4.302886,8.736966,3.449841,8.801927,8.330126,-2.111467,7.228685,8.280281,-2.331955,8.769015,-6.847493],[-7.357619,5.817887,6.965978,-9.248842,1.041514,6.607524,-8.629782,8.818139,-0.480351,7.024810,1.538902,-9.605194,-2.477921,-1.506260],[-8.507573,-3.230075,-7.257375,-0.751434,-9.876049,-3.654196,-3.823318,-4.671788,-0.740363,9.997966,-1.752960,8.856451,0.446132,-8.442567],[-7.557277,-8.357575,-3.237912,-5.295092,-0.565587,-1.689569,0.400711,3.527494,-1.331565,-3.691249,8.584217,8.982868,-6.621482,9.605704]],[[-8.490227,6.083072,3.328913,-7.880439,-4.415771,-1.920174,9.866186,5.588870,8.447694,8.975478,5.907617,-9.540224,4.071764,-4.528475],[-0.716832,6.421258,-4.537525,-2.565966,-1.683125,3.449393,3.686322,-4.248983,-6.531609,0.715459,-4.345182,9.151902,-7.047175,-4.291711],[-3.670715,1.113711,4.332477,0.278823,6.229556,9.751433,-9.469806,9.886469,-0.088926,7.420445,4.343214,7.688067,3.919235,7.464330],[-2.233897,5.741887,8.725362,-8.795683,9.147141,-9.897139,2.141710,0.168863,-3.316668,1.437647,-4.768547,9.977851,3.240413,8.142906],[2.007410,-8.357008,-6.989559,-9.247745,-5.991719,-9.967262,3.815138,-1.587627,-1.817153,-9.101598,-7.773892,-5.713361,-1.988275,0.629688],[-3.345913,-8.987413,4.774077,9.487815,-1.417383,8.513147,-6.350425,2.524678,-5.178449,-5.017451,9.885003,6.818266,-8.770067,-8.706949],[7.854985,-6.083135,-0.237563,-7.304978,5.578993,1.711846,6.743857,-1.744712,4.602888,9.960325,-5.681455,-2.200533,9.031736,6.212915]],[[5.145868,-7.282090,3.783386,-4.516479,-5.912178,-5.956864,2.296874,7.148821,-6.502215,-3.174915,7.782451,-0.449159,-1.204369,4.928180],[-1.956113,5.879926,-1.848085,0.276716,0.714540,4.472623,-2.631608,9.010517,-7.615603,-5.687755,1.217158,-3.723429,4.295023,-3.169251],[1.938460,5.581388,-9.164188,-1.675378,-1.595431,6.606098,0.557808,1.153087,-4.852324,6.544325,-8.785286,9.628368,0.459045,-8.210575],[-1.600924,-3.113541,9.284828,-1.551666,-0.230833,-3.434018,-0.009568,-4.788631,0.534397,4.035520,8.197273,-5.046020,-7.057158,5.701648],[2.917217,-7.304670,-0.943289,6.422512,-6.521514,5.730625,-9.952668,-1.659695,6.421448,1.955779,-7.397438,-4.250924,5.002060,4.120520],[9.034883,0.820651,2.377352,-0.283345,-4.139519,3.391030,2.656914,-7.432899,-6.629304,-6.707799,4.118164,-6.402438,-6.871757,5.263090],[3.983729,-7.296820,4.248660,0.588255,1.170016,-8.819893,-7.203260,7.271534,8.797739,0.647070,-6.618998,9.599991,8.058488,8.702908]],[[3.079121,-5.426903,-5.705163,9.866643,-4.418010,-6.443072,-9.652192,-9.199420,-5.625781,3.877832,7.222641,0.489751,-2.583732,1.753082],[2.405892,-0.634859,-0.938126,4.434541,2.142363,-6.828619,-6.031106,1.176669,-5.074541,4.722463,2.778014,-7.189051,0.862954,-0.153103],[-9.591102,-7.129077,6.725511,-0.249187,1.475709,-4.262874,-1.991331,-1.038636,9.071472,-0.640705,6.816409,-4.840625,-4.082769,5.762551],[-6.872368,4.105281,-6.535018,-0.130750,-1.926586,0.265296,5.353677,-5.898383,-7.160362,-1.062854,0.402532,0.244345,-4.008768,3.854047],[-1.257682,-3.262611,2.194897,-5.831834,5.961462,3.151669,4.863180,6.423855,-6.412435,2.716755,4.279974,-9.309917,-4.950064,8.007268],[0.053526,7.244659,-8.962888,-3.739072,1.200173,1.735582,-1.809710,4.321042,8.518051,-8.212497,-9.461686,-1.018501,3.769753,-8.807873],[3.549619,-5.512039,4.347884,-7.136413,0.166750,2.554659,2.428609,-2.638839,4.965644,-6.950118,-8.968414,-1.853992,-7.103374,-9.390812]],[[9.326931,7.583613,6.856734,5.423654,9.514490,-4.264817,-0.058331,4.445541,-0.037934,9.996734,9.901968,-5.617474,-2.965152,3.451851],[6.151063,-3.440206,-6.331714,9.836173,6.195109,-6.619571,1.844205,-3.607324,-2.659744,2.538610,4.924353,-5.496002,-6.520177,-8.476744],[5.150842,9.990914,-7.802543,0.213908,6.297623,-7.466678,9.793521,0.680869,3.392174,1.190739,-2.463496,-6.054323,9.582297,-3.022738],[3.081380,5.688887,-0.834736,0.940769,-6.344371,-0.227342,-2.311688,8.083145,2.166046,-7.909632,-6.695524,8.967919,-5.708330,-9.429857],[-0.351591,-1.728078,0.503470,6.788656,-0.405535,-3.219755,6.278268,3.934284,5.122275,-7.979933,4.366752,3.135522,-2.378300,-2.427556],[-6.689059,-5.528026,-4.647292,-9.502229,-2.029472,0.559266,9.055129,-0.696528,-8.628302,-7.438269,-4.204687,3.587808,2.443208,6.030225],[1.613089,-8.918920,-9.163199,-9.511757,3.730706,-7.026285,-5.832880,3.405937,-8.246628,5.660398,2.923256,-7.839375,-3.294212,0.869928]],[[0.597025,4.910151,8.448310,-2.918704,-5.700165,-7.685982,-6.218477,-5.516636,-1.496046,-8.725924,7.862034,-7.375245,8.854798,-7.940483],[-0.732685,4.622179,-8.560551,-4.747107,-7.094841,4.159763,0.095258,5.271609,-6.769627,0.037961,8.489009,8.664511,1.971839,1.665909],[7.695368,-9.906110,7.033096,6.686042,-7.809185,2.098134,-1.130766,4.883882,-0.234305,4.457190,-2.271981,-9.170740,-6.771782,-2.956576],[8.765490,-2.517316,3.076856,-6.989495,-2.213347,-8.617918,7.939009,-5.040630,-5.751748,5.010797,-2.347378,-4.049225,8.311169,-3.334668],[-4.906396,3.736438,-3.547261,-9.007154,-2.005278,-7.195146,-2.562415,1.185840,7.359407,-7.016720,-0.152650,-3.916938,-4.305658,9.114939],[9.028235,-1.515920,1.685324,7.153370,6.798903,2.050934,-9.840448,0.920703,2.293815,-0.138713,-5.889603,-1.126308,5.446773,7.090474],[2.347558,6.234801,-1.432569,1.000033,-4.260057,8.000767,-9.396454,1.244520,-5.349147,-0.776210,-3.424786,-8.822300,4.325104,3.378329]],[[-8.399629,-6.046143,6.094346,-3.842284,3.360908,6.876910,2.732998,-9.797653,-7.804413,-8.162142,-2.129120,-3.808771,-9.179654,5.384822],[2.174003,-2.377161,3.420264,-2.085097,-8.907294,-2.244461,-0.095910,0.517150,-0.273308,0.859933,-0.568765,9.307510,-6.304217,8.910599],[9.189748,-2.160380,1.327279,-3.149321,-5.520054,3.562702,7.348681,-6.366901,-9.836071,6.255775,6.556586,2.533413,3.332249,-6.527291],[-6.460157,-7.708005,-1.290331,-1.867032,9.443484,-3.431188,2.690419,-1.688562,3.686424,-7.877532,7.393915,-4.388203,5.834288,-8.991421],[3.912452,-2.811456,-4.597837,7.804706,-0.489049,-5.791183,-1.149038,7.105252,-1.205463,-5.655515,-3.940541,6.131209,8.691420,7.606738],[9.470413,6.218240,-6.116248,-1.097252,-4.316039,-7.756965,-1.092549,-3.350472,1.847599,-4.394371,7.046444,-1.786535,-1.800595,5.885295],[6.320927,-2.051775,-0.484324,0.281414,5.782890,2.504751,5.058996,-7.305923,-7.593208,-3.184314,-5.303629,-6.082592,-4.680562,-0.674777]],[[-2.747476,-0.250316,-2.609911,3.570094,-8.356599,6.500765,-0.598672,9.323298,-1.082449,2.543091,-7.191076,6.161903,1.364490,-5.534622],[-0.916918,-0.755863,1.827839,-9.860388,6.321146,-2.135230,9.565855,9.155670,9.325200,1.988312,6.914044,-6.761188,3.562617,-1.519218],[4.736003,-1.795751,1.447240,1.212875,7.586398,-1.159560,9.693776,-3.885034,7.684618,-1.421212,-1.121282,-1.836870,1.433627,3.189353],[-3.228334,1.561830,-5.520632,3.858976,-6.602059,-0.878479,1.750291,-2.465586,-9.544673,0.578656,-7.701652,-2.872626,7.866993,-1.558035],[4.003047,4.228893,-6.292946,-7.966724,-6.564625,-6.429682,-0.421674,-1.853030,-8.921074,-7.450937,9.323889,-2.589508,2.541288,-5.965686],[7.727848,1.538944,-1.530672,8.370829,9.731379,-6.527471,9.151747,-5.781409,5.949129,5.948105,0.836700,-4.539053,4.739779,3.920650],[9.743617,-9.194345,-5.377072,-4.924356,-6.478215,4.156781,0.585869,-8.567282,9.214945,-2.294543,0.022242,-5.531423,4.021244,-1.769909]],[[6.436471,1.338537,5.500813,4.323343,-4.691224,4.778987,4.447002,-1.226807,-9.932352,-3.556721,-4.542380,-2.400396,-7.201580,-4.121734],[-5.887840,1.251781,-9.219739,-2.972703,-7.343257,-3.362925,3.898259,9.128334,-4.000188,7.857477,-4.978272,-2.654490,-4.527850,7.265703],[4.942119,-1.187920,-7.623921,3.882839,6.632035,-0.769356,-6.891610,-7.002771,-7.489842,-4.465781,2.118358,7.771948,1.269231,-6.160137],[2.180793,1.603368,-5.219755,-2.607019,7.760243,2.395696,4.857355,-1.424651,-4.751731,-9.209223,-7.437834,-1.886350,-8.068977,-7.126543],[0.479837,-8.762242,-0.873011,-3.695788,5.873428,5.550070,-6.695914,2.678535,-2.075987,3.521117,-9.646913,-1.232461,6.216382,0.244978],[-6.018123,7.337468,-0.755156,-6.414727,7.814820,9.506371,5.899181,6.510064,-6.369986,-7.557515,-8.865147,4.823729,3.877197,-6.963962],[-0.597923,-5.319860,3.929363,6.476965,9.849547,-5.709573,-0.469504,-7.799065,-9.994210,7.387513,-9.599194,6.447368,-4.274389,-6.412724]],[[-9.062114,-6.922692,-3.903309,-6.384372,-4.743820,3.985157,4.394204,8.745982,-4.678324,-4.936051,2.919286,2.925332,2.684789,0.651331],[8.193871,8.218355,-7.565276,3.052643,-3.123706,-8.259922,9.757300,5.509552,0.676075,-8.088156,-0.654521,-6.278908,-0.081813,5.507655],[-4.023784,0.129435,-3.764203,-8.987042,-3.779397,2.297855,1.482792,-1.065624,-4.881186,7.464074,-0.988225,8.961162,-1.069053,-0.685486],[6.174656,-5.099579,-7.567149,5.934978,-0.328722,0.582843,9.747558,-0.656672,-0.549993,0.135997,-7.898840,-3.007002,-6.671779,2.403260],[1.428527,-2.341414,2.076094,6.195240,-3.712616,1.945719,-5.554256,-6.188182,2.650864,-3.157228,3.262240,-8.861498,-1.704391,-1.848608],[-2.036249,-0.716138,8.909892,-5.636618,9.312261,0.457199,9.875644,9.407985,3.010444,8.306408,-6.707196,1.466641,-3.739709,9.741722],[-4.910833,2.426959,4.867471,4.062077,-5.822782,7.544631,1.108107,-7.920910,4.707373,-3.269732,8.831736,-5.066009,8.107418,2.673688]],[[0.085043,-7.488294,-5.895583,1.236173,3.387876,-2.859978,-1.253725,-1.349228,-1.374976,-6.262003,-7.794667,3.856087,6.232935,7.588978],[2.996361,-5.464835,8.086414,-7.943464,-0.675141,8.057697,-2.357921,-5.666399,9.582729,-7.099691,7.773671,-7.716972,4.843315,1.909318],[1.099560,4.374598,1.068804,5.075066,1.925259,-8.886929,7.978350,6.547632,4.544755,7.148348,-1.755622,7.444189,-5.186248,6.253129],[8.426642,-5.555034,2.070447,3.927647,4.994223,3.917319,-7.164696,9.761555,9.735733,-5.496561,-5.731050,-2.954027,4.787392,-8.792759],[0.585169,-2.534937,-8.319537,7.241780,-0.362422,-1.776132,4.457274,-7.529862,8.622811,-6.553401,0.513371,7.544654,-1.197155,-9.947486],[7.979471,3.175868,5.295170,7.564891,6.704100,3.664711,2.895315,3.821317,-9.633320,7.945244,2.355020,-2.151332,-7.876308,-7.775739],[7.675119,-9.111139,8.983459,4.631180,6.447165,-4.289549,7.992240,7.727248,6.283982,-8.251576,-0.383653,8.357008,8.157372,-3.936861]],[[-6.826690,-2.362800,-2.650685,-3.850054,-9.710323,-1.523428,4.662233,-7.182068,-5.378584,1.876124,5.035476,2.540524,7.288308,1.482754],[7.010337,-4.744048,7.699682,3.535981,-0.677986,4.044733,-6.811789,-4.762234,4.202702,-9.040023,-3.527498,4.622797,7.181896,-4.893330],[-1.367567,6.485263,7.098180,5.013609,-0.834639,-2.374026,-3.105813,-5.767502,2.694716,-4.123229,9.499803,3.024357,1.105267,7.383828],[4.632027,5.500284,-6.257858,9.750300,4.552232,-3.024391,-3.948337,-3.772797,-8.356346,7.239926,4.069255,-7.296796,-8.823163,4.698867],[3.042583,8.064810,-9.362051,-8.132805,4.055995,-1.647670,-5.325163,0.711030,-3.290283,3.539454,-8.250586,-1.341318,7.139406,-6.324405],[-5.950795,5.143842,0.342974,7.233649,6.626789,-6.991377,5.760525,4.561114,4.238090,-4.327173,-3.179893,-8.655701,-0.749893,5.960279],[-9.066209,-0.424621,7.445075,-3.930440,-8.978921,-3.606179,2.920698,-8.673305,1.593895,-2.054203,-5.061679,-2.247562,-3.828362,4.892146]]], dtype = "float32")#candidate|2471|(15, 7, 14)|const|float32
bop_2472 = relay.less_equal(call_2466.astype('bool'), relay.reshape(const_2471.astype('bool'), relay.shape_of(call_2466))) # shape=(15, 7, 14)
bop_2475 = relay.less_equal(call_2467.astype('bool'), relay.reshape(const_2471.astype('bool'), relay.shape_of(call_2467))) # shape=(15, 7, 14)
func_1613_call = mod.get_global_var('func_1613')
func_1615_call = mutated_mod.get_global_var('func_1615')
var_2482 = relay.var("var_2482", dtype = "int8", shape = (260,))#candidate|2482|(260,)|var|int8
call_2481 = relay.TupleGetItem(func_1613_call(relay.reshape(var_2482.astype('int8'), [13, 4, 5])), 5)
call_2483 = relay.TupleGetItem(func_1615_call(relay.reshape(var_2482.astype('int8'), [13, 4, 5])), 5)
output = relay.Tuple([bop_2472,call_2481,var_2482,])
output2 = relay.Tuple([bop_2475,call_2483,var_2482,])
func_2486 = relay.Function([var_2482,], output)
mod['func_2486'] = func_2486
mod = relay.transform.InferType()(mod)
mutated_mod['func_2486'] = func_2486
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2487 = relay.var("var_2487", dtype = "int8", shape = (260,))#candidate|2487|(260,)|var|int8
func_2486_call = mutated_mod.get_global_var('func_2486')
call_2488 = func_2486_call(var_2487)
output = call_2488
func_2489 = relay.Function([var_2487], output)
mutated_mod['func_2489'] = func_2489
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1693_call = mod.get_global_var('func_1693')
func_1695_call = mutated_mod.get_global_var('func_1695')
call_2515 = relay.TupleGetItem(func_1693_call(), 0)
call_2516 = relay.TupleGetItem(func_1695_call(), 0)
var_2519 = relay.var("var_2519", dtype = "float64", shape = (10, 12, 9))#candidate|2519|(10, 12, 9)|var|float64
bop_2520 = relay.subtract(call_2515.astype('int32'), relay.reshape(var_2519.astype('int32'), relay.shape_of(call_2515))) # shape=(10, 12, 9)
bop_2523 = relay.subtract(call_2516.astype('int32'), relay.reshape(var_2519.astype('int32'), relay.shape_of(call_2516))) # shape=(10, 12, 9)
output = relay.Tuple([bop_2520,])
output2 = relay.Tuple([bop_2523,])
func_2527 = relay.Function([var_2519,], output)
mod['func_2527'] = func_2527
mod = relay.transform.InferType()(mod)
var_2528 = relay.var("var_2528", dtype = "float64", shape = (10, 12, 9))#candidate|2528|(10, 12, 9)|var|float64
output = func_2527(var_2528)
func_2529 = relay.Function([var_2528], output)
mutated_mod['func_2529'] = func_2529
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2222_call = mod.get_global_var('func_2222')
func_2224_call = mutated_mod.get_global_var('func_2224')
call_2738 = relay.TupleGetItem(func_2222_call(), 0)
call_2739 = relay.TupleGetItem(func_2224_call(), 0)
var_2744 = relay.var("var_2744", dtype = "bool", shape = (15, 7, 14))#candidate|2744|(15, 7, 14)|var|bool
bop_2745 = relay.right_shift(call_2738.astype('uint8'), relay.reshape(var_2744.astype('uint8'), relay.shape_of(call_2738))) # shape=(15, 7, 14)
bop_2748 = relay.right_shift(call_2739.astype('uint8'), relay.reshape(var_2744.astype('uint8'), relay.shape_of(call_2739))) # shape=(15, 7, 14)
func_2087_call = mod.get_global_var('func_2087')
func_2092_call = mutated_mod.get_global_var('func_2092')
const_2759 = relay.const(5.319761, dtype = "float64")#candidate|2759|()|const|float64
const_2760 = relay.const([-7.303491,-2.123169,1.537107,7.569658,-0.807447,1.267191,1.386453,-8.450057,-6.928550,-1.411801,5.695468,-6.396469,-3.913139,-4.567341,-2.883611,-9.973667,-7.445040,-4.583470,5.137515,2.958551,-0.364669,-8.215997,6.285278,0.737847,3.056548,7.921643,6.551871,9.597320,0.919185,1.533783,3.001376,2.015648,-7.850803,9.374449,0.508196,5.241059,2.626999,0.860958,-5.559754,-2.836730,-2.863966,-6.208641,-3.866328,-7.415786,9.489957,0.449863,6.271800,9.188112,-6.844304,8.198834,0.984921,5.031031,-5.739822,3.042470,-7.582964,-5.622343,1.681994,-1.154665,5.740045,-6.896389,-3.726419,1.331260,-0.816425,9.588512,0.227982,-1.852966,3.964005,0.967558,7.746231,2.327524,-9.431731,-3.696432,-8.946949,3.005435,5.183547,7.822382,7.923923,7.810862,3.122633,2.883555,2.257671,6.777669,4.597141,-1.498182,-9.728826,-8.939510,-0.957545,-2.553790,2.130952,-4.241435,4.266815,-0.598641,-0.300604,-4.259225,-3.747196,-8.749339,-9.602919,4.608265,-8.443539,-6.810834,9.952708,2.209556,7.183686,-3.961192,-3.676462,-6.417759,-1.662724,-6.953550,-5.657720,-8.736774,-1.743188,7.495738,4.148945,3.465565,-5.585331,-2.435558,-5.537857,4.428206,6.337782,3.909557,-7.359675,-3.120144,-8.181474,3.277858,5.742910,-3.210448,-4.349984,-2.587933,-9.306535,3.951946,3.434015,-1.397850,-8.398945,-3.813579,3.068867,1.635539,6.792018,2.282482,-6.968012,-6.202048,-6.130318,-5.286295,-4.149879,-7.448898,-7.405229,-6.226673,5.103809,5.939833,-8.817468,-4.048688,8.741954,-3.441949,5.760812,9.438297,-4.782999,2.679582,-2.015341,-6.245475,6.822384,6.318364,-2.597460,3.061749,-1.264104,3.312050,-5.634461,-7.617270,0.676638,-5.539948,-6.173360,3.049068,-0.972037,-5.217136,-0.114776,5.974256,3.623894,9.521849,-0.434845,-1.784228,5.559248,-8.265702,6.699281,-7.849040,3.027135,4.976118,-1.132448,-4.998521,8.045025,6.763078,8.383687,9.930753,2.678391,0.839521,-8.162784,-7.897886,6.551099,3.339971,6.019293,-2.925263,6.468887,6.617943,-9.036538,-1.357413,-4.681654,5.493074,-9.833538,-4.523919,6.241433,-8.241535], dtype = "float64")#candidate|2760|(208,)|const|float64
const_2761 = relay.const([1,6,3,-8,5,4,7,2,2,-6,9,-7,-5,9,-5,8,4,1,6,-10,3,7,-8,5,6,-10,-3,-1,-1,-2,7,-2,4,8,5,4,-2,1,8,9,-7,-1,5,1,-4,-2,-3,-2,10,-8,10,4,-3,-3,2,6,-10,-10,-9,-10,-3,4,9,-4,7,-3,-6,-8,-3,-9,-4,4,2,-10,-4,5,-5,5,6,10,-1,-10,-1,5,1,10,-9,-9,8,-5,10,-2,-9,-8,4,8,-2,-2,7,8,3,3,-10,-4,-10,1,-9,6,7,2,-1,-9,-9,5,-10,5,-8,-5,9,-7,8,-2,2,-6,-1,2,-1,2,-4,7,9,-9,-10,-5,6,1,-3,-3,-8,-4,9,10,9,-9,8,-8,10,4,-4,3,3,5,7,-1,-9,4,2,-6,-6,5,3,-3,-1,-6,-7,6,-3,6,-3,4,3,-9,-2,6,-2,-5,4,-1,-4,3,-6,-3,-2,-8,7,4,-10,7,-10,3,5,8,-6,6,5,-3,-8,1,-7,-4,1,-6,-3,-4,-7,-6,6,4,2,-4,-1,2,-5,-1,2,-1,-3,3,-2,-10,7,-1,-9,-5,-5,2,7,-7,-4,9,2,-8,-6,5,-1,9,1,9,5,3,-2,-7,-6,3,3,-6,1,3,7,7,3,4,-6,-3,8,2,-10,10,3,6,5,-2,7,6,-1,2,9,-7,-2,5,-8,-9,-5,-6,2,6,-5,-6,4,-8,4,-9,9,-7,10,-10,-10,9,-8,8,7,9,-4,6,-6,-3,6,5,-9,6,-6,-2,-5,-4,7,3,5,8,9,-5,10,-7,-9,-2,7,-2,6,1,-4,-4,-4,7,-1,7,8,-4,2,-5,-4,-1,-4,-5,-8,2,1,5,5,5,4,7,-5,-10,-4,10,-9,10,6,6,4,-6,-5,10,-10,7,6,7,7,-10,10,1,-1,-7,-8,10,2,-7,-8,7,10,3,-10,-9,8,9,9,9,1,-8,-10,1,6,-9,2,2,1,-10,-6,9,-2,1,-10,-3,8,-10,-10,10,-8,10,-4,4,8,8,6,-5,8,10,-6,-1,-4,5,-3,-2,4,4,4,5,3,7,1,-8,8,8,-10,-10,-9,8,10,4,-2,3,-8,10,-2,-3,-9,-3,-8,4,-10,-2,-9,-1,-10,4,5,8,8,5,4,-2,-10,3,5,-7,2,-2,-10,2,1,-2,7,-10,-7,-4,4,6,-10,1,4,10,7,-9,-8,9,-10,4,10,-10,-10,7,-10,-5,2,8,3,-4,-2,1,5,-9,-10,10,-8,8,7,-1,10,9,-3,-10,7,-9,8,-10,10,7,4,-2,2,-10,5,7,-7,-7,-7,7,2,4,-7,-4,6,9,-3,-2,-2,5,6,-3,10,3,1,-1,9,-5,-2,5,2,-7,6,-1,4,8,-8,4,4,-5,-9,-8,-2,5,1,1,4,2,9,-10,9,-4,-10,-5,6,-9,-4,5,9,-1,10,6,2,-5,1,-6,5,7,10,2,-10,3,8,-4,-6,7,-7,-9,1,3,-9,-10,1,-10,9,-7,10,7,-7,-5,3,8,-5,2,1,5,4,-4,3,8,-5,3,4,-5,8,-4,2,-5,-1,2,-2,-3,2,-3,-3,-7,3,-8,-9,-10,5,-9,7,3,-9,-3,-1,7,-6,-8,-1,-1,-6,-3,-4,-1,-8,7,2,-7,-6,-6,-9,-10,-5,-5,-5,1,7,-8,1,-9,10,6,5,-7,-6,-8,5,-1,6,7,2,7,-3,10,4,3,-5,-8,-4,3,-7,6,-1,-2,-3,-10,-6,6,-2,3,8,-10,5,-7,-2,-3,-3,2,-8,-1,-5,7,10,1,2,7,-10,-4,6,5,4,-8,-9,-1,7,7,6,1,9,-7,-6,10,-3,2,-8,7,5,6,-8,-10,-10,-4,10,2,9,-10,-8,-2,7,-10,1,6,5,-1,-1,-5,-7,-7,6,6,-1,-2,-9,9,8,-10,9,6,-7,6,-7,1,9,3,-7,1,-5,6,7,9,-7,4,-4,9,-7,-1,5,10,-10,-1,2,-9,-5,3,2,-9,1,-4,-6,-10,9,7,5,-2,-10,6,-5,9,9,3,-3,10,-8,3,-9,-4,4,4,1,-6,9,3,4,5,3,5,-2,4,-1,-1,7,1,-1,3,-1,10,-9,-5,4,-6,-9,7,-8,-1,-5,1,10,-5,9,2,7,1,7,-8,-3,10,-7,-5,-5,4,-1,-5,-9,3,-10,-7,8,-2,-1,6,7,7,-10,-1,-1,8,-9,4,-3,5,3,-2,-7,4,5,3,-5,-7,5,1,-2,7,-9,-1,-9,10,8,2,4,-3,-5,4,9,4,-9,7,3,-7,6,-7,-4,-6,8,-8,-6,-5,1,1,-1,1,2,-3,5,-7,10,5,-2,-8,1,-5,9,5,9,10,-5,-10,-3,9,-5,-7,2,-8,-5,5,4,-10,-1,-3,-5,8,5,4,-3,6,-9,2,6,-6,-8,-6,2,-5,3,1,4,5,-7,9,-1,-7,-7,4,3,-4,-10,3,-6,-4,10,-4,-5,4,-9,-2,-8,-3,-10,-10,-6,5,-7,-9,-9,-10,6,-5,-5,3,-4,4,-5,-10,-5,-7,-7,8,-1,4,8,2,10,-5,6,10,-2,-3,3,-2,-2,-3,3,2,8,7,4,2,-5,-10,4,3,4,4,7,-10,-5,9,-4,-4,-9,-2,10,-6,10,8,-7,3,4,3,-1,2,5,8,4,-4,4,-7,-10,9,-10,8,-7,1,6,5,-4,-7,-8,-10,8,-7,-10,5,7,1,-5,5,8,3,9,-3,-7,-3,7,9,-9,-6,-9,10,8,-5,8,5,7,2,-8,-10,9,-9,-9,10,3,7,-8,1,-8,-9,8,2,1,-1,1,3,-7,6,9,3,3,-7,9,-9,4,-3,3,8,-9,5,2,-2,8,-6,4,-10,-3,8,-5,-9,6,-1,-7,-2,-10,8,5,-5,-8,2,10,8,9,5,4,2,4,-8,-4,7,7,8,-7,-5,-1,6,-8,-7,2,-2,-6,6,-8,2,5,6,7,6,-4,-1,-9,-10,-3,4,9,-2,10,8,2,-2,9,1,-1,-2,-9,1,9,-2,8,-10,4,5,-9,4,1,8,-3,8,5,10,-2,-9,2,-7,-9,-9,-8,7,-7,1,-6,-10,8,-2,7,-7], dtype = "uint32")#candidate|2761|(1210,)|const|uint32
call_2758 = relay.TupleGetItem(func_2087_call(relay.reshape(const_2759.astype('float64'), []), relay.reshape(const_2760.astype('float64'), [8, 2, 13]), relay.reshape(const_2761.astype('uint32'), [1210,]), relay.reshape(const_2761.astype('float64'), [1210,]), ), 2)
call_2762 = relay.TupleGetItem(func_2092_call(relay.reshape(const_2759.astype('float64'), []), relay.reshape(const_2760.astype('float64'), [8, 2, 13]), relay.reshape(const_2761.astype('uint32'), [1210,]), relay.reshape(const_2761.astype('float64'), [1210,]), ), 2)
output = relay.Tuple([bop_2745,call_2758,const_2759,const_2760,const_2761,])
output2 = relay.Tuple([bop_2748,call_2762,const_2759,const_2760,const_2761,])
func_2763 = relay.Function([var_2744,], output)
mod['func_2763'] = func_2763
mod = relay.transform.InferType()(mod)
mutated_mod['func_2763'] = func_2763
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2764 = relay.var("var_2764", dtype = "bool", shape = (15, 7, 14))#candidate|2764|(15, 7, 14)|var|bool
func_2763_call = mutated_mod.get_global_var('func_2763')
call_2765 = func_2763_call(var_2764)
output = call_2765
func_2766 = relay.Function([var_2764], output)
mutated_mod['func_2766'] = func_2766
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1473_call = mod.get_global_var('func_1473')
func_1475_call = mutated_mod.get_global_var('func_1475')
call_2785 = func_1473_call()
call_2786 = func_1473_call()
func_1337_call = mod.get_global_var('func_1337')
func_1339_call = mutated_mod.get_global_var('func_1339')
call_2787 = func_1337_call()
call_2788 = func_1337_call()
func_450_call = mod.get_global_var('func_450')
func_453_call = mutated_mod.get_global_var('func_453')
var_2791 = relay.var("var_2791", dtype = "int64", shape = (112,))#candidate|2791|(112,)|var|int64
call_2790 = relay.TupleGetItem(func_450_call(relay.reshape(var_2791.astype('int64'), [14, 2, 4])), 0)
call_2792 = relay.TupleGetItem(func_453_call(relay.reshape(var_2791.astype('int64'), [14, 2, 4])), 0)
func_1534_call = mod.get_global_var('func_1534')
func_1537_call = mutated_mod.get_global_var('func_1537')
const_2798 = relay.const([9,10,-10,-5,-4,-2,-7,-4,9,2,8,10,5,-3,8,-2,-2,10,-7,-4,8,-8,9,7,5,-5,1,10,-1,-6,-1,-5,3,6,-2,2,6,-5,2,-3,3,10,5,9,7,2,4,-4,5,-6,10,-7,8,1,7,-8,2,-6,10,-3,-1,-6,4,-1,-9,8,-4,6,-8,-3,1,-7,9,-1,7,5,-9,-2,-10,4,9,-1,-6,7,3,8,1,-6,9,9,-1,3,-7,5,-9,9,8,2,-6,-9,-1,1,-4,-2,4,6,-6,-7,5,10,-10,3,8,3,6,-1,9,-9,-10,-6,4,2,-3,3,-3,-4,-4,3,2,-6,-8,-5,10,1,-9,-6,9,3,9,1,-8,4,-10,2,3,-10,6,9,3,7,7,5,1,7,1,-9,1,-1,-8,-4,-2,3,2,-5,2,-9,3,-4,-9,4,6,-8,-7,-9,3,-8,-8,2,-3,-6,-7,5,-6,-4,-7,-4,-2,-10,-3,-3,-2,9,4,-1,8,-3,2,-7,-4,-5,1,-3,-6,-1,-4,5,-7,-8,-8,7,6,-3,5,-1,4,9,-7,-10,9,-2,-8,-9,-1,-6,-5,7,3,4,-1,-1,10,10,-4,2,2,6,-1,6,1,-1,7,2,7,1,10,2,-2,9,5,-9,5,8,10,8,-6,-2,4,-2,-7,-10,5,-8,6,-2,9,9,-7,-8,1,-10,4,9,-5,10,3,10,-1,2,-6,-10,6,-6,8,-1,1,-5,7,-2,2,6,-1,-5,5,-2,4,5,-3,4,-7,10,10,5,-7,10,1,9,2,-6,1,-7,10,-4,5,4,-5,-1,10,-4,3,6,-8,5,9,9,9,-5,-10,-4,9,6,-2,10,-3,9,-8,9,2,-6,-5,-10,-10,5,-4,-4,7,-6,9,3,10,-9,8,4,1,-10,-6,-3,5,-8,-7,9,-6,-4,-3,-8,-8,-3,2,8,-9,4,-9,6,6,-3,8,-8,-1,1,9,6,4,-4,7,4,10,-5,-6,7,5,-7,-3,9,-5,-7,10,2,5,4,9,1,-7,-2,-7,5,8,5,6,7,-8,8,2,-4,7,2,-8,-9,9,-8,-10,-6,-6,2,-9,-5,-5,-5,-4,-3,-8,9,8,-3,-1,3,7,-10,4,-6,10,10,-6,-2,7,-1,10,3,10,-7,8,-10,1,7,-3,8,6,-1,-6,-3,8,-10,-4,10,-8,4,-7,10,-6,3,9,5,1,8,-6,-10,4,7,-2,3,4,-7,-2,8,5,-9,5,2,7,3,10,2,-5,2,-5,-1,-2,1,7,-4,-3,9,-7,3,-10,9,-4,-3,-9,-10,2,5,-2,-10,8,-3,8,-6,-4,9,7,-3,-9,2,3,-2,3,-1,-4,4,-6,2,1,-7,8,7,5,8,8,2,2,-8,-1,-10,9,-8,10,-7,7,6,-1,3,-4,-10,1,-6,5,-9,-1,3,2,-5,1,-3,-9,8,-3,5,-1,2,6,8,9,10,-4,-2,-6,9,10,-10,3,8,-6,-5,-10,3,-4,9,-8,-5,-4,9,5,-9,-3,3,-4,4,-8,1,8,5,-4,-5,-7,-5,7,-1,3,7,-9,-4,5,-5,8,10,9,-8,-4,-5,3,-10,-5,3,10,-6,4,2,-9,-2,-2,-3,-10,5,-3,-4,10,5,6,-5,-9,7,-10,-3,-7,-4,-7,-3,-9,2,-9,-8,-2,-6,2,7,10,-5,5,9,-2,5,1,8,-6,-2,7,-6,5,-7,1,10,-10,-4,-4,-10,-6,-6,3,-7,-4,-4,8,-2,-9,-2,5,-4,7,-3,-2,7,-8,-5,9,-7,-10,6,8,3,-6,-10,4,-9,3,-2,-5,-3,2,-1,7,-3,-1,-6,-6,-8,3,5,-3,10,6,-3,1,-3,3,3,4,-8,5,-5,3,3,-5,-3,3,-6,-5,10,-6,-10,-7,-10,9,9,4,-6,1,-2,8,-5,-1,1,-4,4,6,-1,-5,7,1,-9,-9,-1,-4,7,10,-4,4,7,-10,8,-2,-2,-9,2,-4,4,-6,6,-8,4,4,7,7,6,4,5,2,-5,-6,-3,-10,6,2,7,-4,7,1,5,-7,-5,-6,9,10,3,10,6,4,5,-1,-5,-3,4,6,10,-2,-4,-7,-8,-6,-3,-6,-6,9,6,2,-9,-4,9,-2,-3,5,-3,-2,-1,2,5,-3,6,-2,5,4,1,5,-9,-8,-1,2,9,-7,-4,-6,-8,-2,2,7,-8,-3,2,-8,7,3,-10,4,-1,-2,3,-8,7,-5,3,-8,4,9,-9,7,4,-4,5,4,2,-2,3,3,-9,-1,-2,-3,-2,2,-1,7,-9,10,2,1,-1,8,5,4,-2,6,3,10,-6,-7,1,2,9,-5,7,5,-1,10,6,9,8,-2,9,-8,-6,1,3,7,-7,-2,-8,-10,10,6,5,-6,3,6,1,6,-3,3,2,7,-6,-2,6,5,2,-3,-7,10,8,3,-3,5,7,3,1,9,-1,-10,-4,6,-6,-5,-10,2,-4,-5,3,-5,7,-2,-10,-4,3,-1,-10,-7,5,-9,8,3,6,10,-6,-2,7,-3,-4,-9,2,-5,6,-1,5,-6,-3,6,-4,1,-3,7,8,6,-7,-10,-6,3,9,3,-8,-7,-7,-2,-1,-5,7,-6,-1,8,1,9,3,9,8,7,10,-8,-9,2,-5,-6,-8,-9,7,7,3,3,-9,-1,-4,-4,-4,-5,-3,3,-1,-10,3,8,-7,8,-2,-10,-5,8,9,6,-4,-6,-8,-5,-2,-10,4,-5,-2,3,-3,-4,5,-8,4,10,4,5,9,-3,-4,-3,10,1,8,7,-8,10,3,-8,1,-4,-5,9,8,-2,4,3,3,7,10,5,-4,-1,-10,-3,8,7,8,-5,9,-1,3,8,-9,-9,10,-7,8,3,-1,-10,6,2,3,-2,-5,7,6,5,-10,-4,-10,-7,3,10,-4,10,-10,-4,10,-7,-9,-4,-10,10,-5,10,-7,8,5,-3,10,3,-6,5,4,-2,6,8,2,6,4,5,-5,1,-10,-10,-8,10,-1,1,-7,-6,6,1,-2,7,4,-7,-4,-8,-3,-5,-3,-6,-10,-8,7,-3,8,2,10,-7,-1,1,7,2,-10,-2,9,-5,-4,-7,-7,-5,-4,-6,-6,9,1,7,-9,-7,-3,2,-6], dtype = "uint32")#candidate|2798|(1210,)|const|uint32
call_2797 = func_1534_call(relay.reshape(const_2798.astype('uint32'), [11, 10, 11]), relay.reshape(const_2798.astype('uint32'), [11, 10, 11]), )
call_2799 = func_1534_call(relay.reshape(const_2798.astype('uint32'), [11, 10, 11]), relay.reshape(const_2798.astype('uint32'), [11, 10, 11]), )
func_2413_call = mod.get_global_var('func_2413')
func_2416_call = mutated_mod.get_global_var('func_2416')
var_2824 = relay.var("var_2824", dtype = "int32", shape = (120,))#candidate|2824|(120,)|var|int32
call_2823 = relay.TupleGetItem(func_2413_call(relay.reshape(var_2824.astype('int32'), [5, 3, 8])), 0)
call_2825 = relay.TupleGetItem(func_2416_call(relay.reshape(var_2824.astype('int32'), [5, 3, 8])), 0)
func_297_call = mod.get_global_var('func_297')
func_301_call = mutated_mod.get_global_var('func_301')
const_2827 = relay.const([1.397183,-5.147234,-5.515121,9.007011,0.182311,5.483314,-1.597286,-7.172575,1.894521,-3.213190,8.496934,-3.669359,-5.624444,-7.745529,-5.598177,1.686528,4.737237,3.396558,2.698963,0.977517,8.473398,7.600111,0.935353,-0.335032,-7.517725,-5.639712,4.085812,-9.477732,-0.641485,8.364280,-1.621643,-0.722110,2.932622,0.656311,-9.974936,6.136261,0.494888,-8.804523,-2.447139,2.991586,8.981393,-7.339742,-0.802026,0.671481,3.735429,1.178852,8.851270,4.583075,-5.865071,5.071148,8.509015,-3.283115,-3.506908,1.957702,3.056011,4.994866,3.935955,9.664781,-8.372180,-9.572332,1.660988,8.570537,9.597442,3.311525,5.070631,3.036574,3.499687,2.236631,-5.161053,-7.732054,2.922447,-9.955655,6.572215,5.216768,-3.417467,4.565284,0.817123,-7.400514,2.894907,-4.745410,8.840111,-4.614618,6.064010,-5.299557,-7.682553,9.768390,-3.832671,-8.924405,3.147784,0.864684,1.445089,-5.877800,5.821886,-0.806767,-5.997147,7.401459,-4.257265,1.921121,6.388339,0.232151,-9.263555,4.207026,-7.660465,0.432785,6.356859,-3.402956,4.773686,-9.238505,1.260713,-0.618270,0.860453,5.395268,7.667522,-9.552725,-1.900777,-1.478330,-5.375417,4.702711,-2.773348,2.823498,2.941650,-7.049698,-7.277450,6.883748,8.086537,6.607755,1.489765,-7.016481,6.544994,9.419008,-9.355163,7.718866,-0.313732,-0.114239,6.801812,-7.612817,7.685969,2.933500,7.831499,6.710611,-7.107995,-1.189979,-2.466471,-0.493931,4.394969,9.329506,-7.168889,-1.450789,-3.252531,4.296014,-1.197901,-0.486091,-9.656343,6.619949,4.120633,4.807696,-0.688072,1.643376,-7.444549,-0.568034,-2.841827,-6.439371,-4.996017,4.222056,8.589421,-5.198342,-4.709579,3.282336,7.012477,1.779393,7.712905,-6.008169,-4.897030,-1.982809,-8.427279,-9.915816,9.644208,3.052579,5.972989,-0.559864,3.137931,9.256486,3.985672,-0.438759,7.021938,5.961968,-6.777524,-0.088880,-9.954972,-6.828635,-6.146829,3.313406,7.425771,2.049207,1.299365,3.591785,6.943515,-4.049444,0.033389,8.318081,-8.762006,7.987799,-0.903538,7.988594,7.171302,8.484525,-8.622793,7.924204,9.112930,4.890302,-6.825795,9.895663,0.128903,-7.568757,4.482184,9.249347,0.479479,-5.804163,6.837694,-2.655370,6.296067,-5.088107,-7.170562,4.840348,-7.781377,-7.046766,9.399730,-4.717376,0.313271,2.747478,-8.986717,8.515242,-1.931281,-6.848399,3.615392,-8.964469,-0.279611,1.683387,-7.214222,3.416953,3.288275,4.348178,7.153837,2.774921,-2.458748,3.139657,9.058465,-6.815510,1.172514,5.299110,9.231667,3.027338,-0.187182,-7.783795,-7.233704,-8.605373,2.308339,-3.411572,6.849073,-8.852664,3.186356,9.216571,-8.645217,-2.582687,-5.688344,-6.139342,2.181050,7.358671,-6.011172,-6.711403,3.989047,-9.816494,-9.375493,-0.043069,-9.355769,0.386261,-9.084719,2.714404,8.385943,-9.446297,4.910686,1.249218,1.277785,0.401980,6.225815,-8.834827,-3.324433,6.761282,5.430656,-6.435213,-3.782388,6.294966,-2.497848,7.905849,-3.808359,3.295576,9.788513,-3.073256,-4.447494,-1.017027,1.405090,-3.900923,-5.662781,-0.390271,1.751739,7.482911,1.946780,7.658727,4.703891,7.047161,-1.381648,-5.196622,0.553958,-1.402179,-8.065337,2.726882,9.432039,1.827106,-2.067716,-3.295242,-3.417898,3.555630,-6.501079,-0.738742,-1.595088,-8.890469,-0.096029,-4.721283,5.314605,0.768727,9.654618,-9.645891,7.954126,-7.097965,5.485661,9.349230,7.618970,7.141413,5.695418,1.394988,5.623043,3.625076,-8.792374,-9.390734,-4.499684,4.796660,-8.647354,1.575314,7.101945,5.355631,-2.894119,7.434771,-8.263897,1.103624,-8.828708,5.325301,-1.091235,5.366402,-0.945236,4.367862,-2.091736,-5.956314,-7.464701,-2.584696,-3.569420,-3.738963,-3.207565,-4.647507,0.084046,8.194637,-6.495755,4.388433,1.606642,-9.852751,-2.688606,-3.111365,-6.007145,-2.045934,-3.441182,7.407992,-8.921798,9.371573,1.660916,2.965078,-3.778920,-4.130812,3.352124,7.464150,-2.208626,-8.012186,2.604955,2.080191,-6.451986,-9.268413,-2.637005,2.626408,-1.993573,-0.662839,-5.721454,-8.672431,-9.126040,5.020956,-9.195318,-8.642432,-1.286277,-3.982121,5.701948,-6.220769,0.737005,5.377182,-9.564963,-0.729710,6.339287,-8.669962,9.639309,-7.686918,3.196497,2.900597,9.584637,-9.626813,9.113419,1.708980,7.755599,-1.619508,7.900735,-6.957399,-3.815140,-7.063556,9.566970,9.882693,7.525540,-2.748709,8.816270,-0.815904,8.803460,7.327766,4.315533,-0.856344,-2.094241,6.300451,-7.669889,7.409331,4.415281,-3.184931,-4.813510,2.961016,-3.714173,-1.425016,9.550315,-1.065714,9.630456,1.185053,-9.678948,4.731728,-3.236563,-1.669293,1.360231,4.091902,9.740290,7.787401,3.998767,3.513162,2.660148,-2.765349,3.437577,1.533478,-9.567897,0.616763,-1.515800,4.475331,-4.837420,4.797043,2.419336,-1.820087,0.839783,-1.607858,-9.778940,-7.984471,4.937476,-8.085499,1.627856,2.729697,5.695519,-4.683779,-6.802893,-2.446778,-4.744106,-8.359785,2.168720,-4.315913,-9.069548,4.323277,8.651204,-8.932642,-7.862451,3.073461,0.262499,0.366314,2.971284,-8.593946,5.817075,-5.306003,9.783717,3.188415,5.897062,7.216752,-2.534161,-0.516462,-2.557377,-6.876697,-3.891800,-7.981107,5.196122,-8.230069,8.407043,-1.393735,3.245338,-7.228397,1.310411,3.642557,-0.044125,-5.024242,-3.717277,-2.033825,-4.457751,4.573449,-7.086882,-1.658225,-1.169811,-0.424021,6.387486,-7.284982,-7.747219,3.880509,2.096833,-5.079209,0.907396,-0.540524,-1.903903,-2.300858,-5.671866,1.653431,7.461755,-0.899979,-4.112746,-1.601320,3.083971,-0.669036,1.485145,7.088361,5.855701,-4.811596,-4.129080,-7.808833,2.937075,1.655104,-4.467225,-8.173388,-5.778392,3.498419,-8.320731,6.783789,4.864133,4.981646,2.186226,3.953842,-6.937499,-5.336391,-9.480461,5.936788,8.780968,0.215787,2.360210,-0.201962,-0.919861,-7.918424,8.738927,-0.709831,-9.411121,9.202459,-6.822042,-5.285843,0.984919,-4.658973,7.952189,4.041430,-5.560461,-9.958299,8.319416,-1.517968,8.380205,-9.995475,-3.496263,2.660555,-0.114133,-9.018841,3.714550,0.229323,0.641354,-7.246526,-5.133520,-3.619199,1.122361,-5.853272,9.798647,-1.663787,-9.777759,9.745102,-4.579612,2.199545,2.019999,7.084728,-7.352204,6.138372,-5.772548,-3.217621,-6.167887,-0.690092,9.942977,-3.123432,1.510420,4.778478,5.353355,-5.470174,4.175866,-8.170136,1.404544,3.355950,-4.190927,-6.482992,0.917853,2.678294,5.914012,1.213877,1.057864,4.671895,-6.368972,-5.577227,4.321838,5.684761,-0.462400,4.710417,-1.317721,5.293918,-0.529775,7.830186,-7.768486,2.653867,-3.220291,-1.217774,-7.493034,-0.579435,7.757740,-0.799767,5.040372,6.902383,9.871372,-1.608150,-6.240010,-3.267412,0.984233,-2.294417,1.436028,8.625890,-5.796572,7.592448,9.076824,8.593784,-3.655322,2.819042,-9.767751,4.967169,1.304061,1.721572,5.136221,-9.105412,3.466528,-8.453604,-5.575161,9.225204,0.592677,0.758311,-2.892799,6.249006,-0.103628,7.221199,-2.712221,-9.972828,-4.148127,5.613166,-2.257252,-4.907194,-9.108840,-9.427280,-2.706134,7.966287,-5.711360,-4.681186,7.492325,5.294634,-8.594125,-1.316806,0.823333,-5.044527,-2.048492,7.313930,-1.995147,2.159648,-4.950662,0.757300,6.719549,-0.988837,-4.223743,-4.266632,4.267034,9.231277,-7.132319,-4.546228,5.695703,9.896474,-2.333873,-2.053729,-4.197462,4.437536,3.793705,9.753109,2.171740,-0.105222,-5.180363,2.827565,-0.353399,5.916481,5.629057,-7.935067,3.009106,-2.427521,-5.245888,-8.399506,-6.582252,2.157541,-8.513516,-6.599884,-3.983591,9.866053,-1.549393,-3.439972,-2.386603,1.325187,6.742668,-2.151342,-9.793972,-3.283872,4.603084,7.044629,-8.182396,0.960159,-4.976702,-1.395055,-7.879560,3.237407,3.185137,6.574479,-7.583879,0.438420,-2.590385,-8.970413,-8.534427,2.329229,9.808950,-8.022615,2.635555,-1.169016,4.126618,-5.795351,6.320433,-8.817686,-6.562132,-2.125089,8.372113,-8.369199,7.287914,-8.703846,-9.109347,7.645697,-4.523901,1.145108,7.975161,2.114778,9.524746,-7.235969,-7.921599,9.705088,-2.140594,0.142856,5.935009,2.192927,-5.204314,-6.403142,4.083375,-0.348099,4.264247,2.864066,3.146289,-2.533482,-5.475235,7.355352,9.211004,0.975565,-2.734168,6.809686,8.221825,-2.283771,-2.232659,-2.507036,-4.330382,-3.492661,-5.095641,-9.179385,-7.545872,-8.277379,4.331480,1.314671,-3.533304,-5.065157,3.809476,-4.575883,-5.910856,-5.235956,-9.755601,-5.926648,2.362015,-9.911316,-2.964599,-1.130137,8.489622,-2.321513,-7.854545,-0.310677,-7.036762,-5.988209,-0.697671,-2.560687,7.269909,-7.447999,2.533760,6.147754,1.523319,3.134130,-8.417558,-4.481372,-1.734890,1.564331,6.191231,-7.872808,-3.471699,3.859320,4.757348,-5.987864,5.772099,-6.912706,1.246331,2.423905,-3.440069,8.454226,-7.783115,-1.846950,-9.287090,-7.639965,1.896294,2.094500,1.375684,3.527921,7.278724,4.891625,-9.556139,6.185229,4.636587,-2.570335,3.971610,6.914049,1.558155,4.547695,2.344193,9.670276,-8.781785,-1.786282,-3.500643,-3.061023,9.721554,-4.245748,-8.917916,-7.480425,-5.764618,3.834995,-1.239894,-3.276684,-5.387732,5.068515,3.828699,6.107999,5.182986,0.461576,7.312381,2.668067,7.344470,-1.649181,-8.461613,-1.711101,1.347470,-8.408573,-4.459972,4.607660,-8.418473,-9.409732,-9.548866,5.070018,5.441013,4.515623,5.788907,-5.280089,-8.526487,-6.537777,6.605532,8.606635,-8.105484,-6.725105,-6.790541,6.044163,-7.045707,-4.168523,3.755119,-4.862522,-9.499707,7.558373,3.777284,6.184343,-2.941940,-6.246379,-4.520887,-3.537411,3.326843,7.715349,1.490179,5.442059,-7.047276,-6.263135,1.068281,-4.742293,-5.142537,0.775493,3.620640,2.481834,-5.110769,4.933258,3.257231,0.639339,-9.295555,4.353912,-5.157480,7.055214,-3.299323,-0.158774,4.009300,-2.132405,7.812827,5.052109,-8.935407,-4.543780,-6.421751,4.731755,-4.209183,-6.676085,0.786810,-5.196526,-5.380822,-8.598909,5.152692,4.114859,8.230952,-1.448062,7.229889,-9.196302,-3.077269,9.698912,-2.162913,-7.001489,6.351153,-9.193863,-0.669014,-9.363952,-0.717786,-8.417832,-1.486768,-5.677482,6.095040,-5.956926,-6.645171,-6.862553,4.078543,2.865398,-8.985505,-0.235430,4.518573,-2.587286,1.613662,-3.705774,6.390555,9.518541,-7.946466,4.587372,-1.435249,2.567329,-1.538834,4.733477,7.054373,-7.493716,1.268956,5.758624,7.642249,-8.007246,1.778694,-2.749057,1.175765,-0.351341,-3.646053,7.931902,5.956295,8.733075,-0.300053,0.237577,-2.604824,8.911584,4.294904,-6.111770,-7.785920,8.217745,0.275014,-6.275470,-2.464399,0.757936,6.743266,7.713158,0.371648,-5.948755,-3.102828,5.388393,5.895882,-0.961065,1.264829,1.372319,1.189687,2.574202,4.437504,-1.882366,-6.525959,-2.136653,-0.967667,-6.960520,-9.631151,-1.120426,3.367966,5.624736,-8.955138,6.903265,-6.811628,-3.820203,6.124152,6.829839,4.439094,-8.649762,8.148382,6.504680,5.527035,1.242496,6.677300,-1.868441,6.417594,5.307525,4.402303,7.168678,-0.867757,9.205860,-4.078902,-0.496320,-9.717653,0.099224,9.340037,-5.463387,0.651465,-5.663520,3.774715,7.548745,2.117224,-5.488889,9.461897,-7.827413,9.785855,3.031264,-7.761426,-3.162322,4.521689,-1.499424,-7.928638,9.822051,-6.420325,-0.786473,-6.378143,-3.163884,9.680520,-6.628316,3.409427,-6.581208,-9.048681,-1.745001,5.734086,-9.080720,-3.421811,5.812213,5.568518,-8.450946,-1.106326,3.385178,-9.834497,-2.047787,-7.073600,-7.780277,-8.816491,9.904208,8.317140,5.755715,-8.853394,9.224245,5.151857,1.600655,0.545526,-4.993680,0.443201,-0.162954,-7.787049,9.042506,4.710562,-0.786290,-7.412259,-7.082930,6.071383,-6.835706,9.568217,-2.549237,-7.455306,8.162984,-1.201483,0.575420,2.901938,8.248822,7.105115,0.014950,6.737500,-5.774228,4.662424,2.046958,-2.511134,-9.616587,9.832168,-7.927956,-9.222753,4.869373,-5.920802,-8.077985,-7.233643,2.824411,-3.566606,-5.726280,-7.396359,9.381683,1.958833,-0.238854,-0.539416,-8.760618,2.177883,8.120839,-2.753673,-0.911457,-4.946655,8.532618,0.387710,-3.873562,2.445769,2.306314,1.162153,5.797651,1.067988,-8.812555,-1.198113,0.622723,-6.153303,7.983111,7.968362,0.252593,4.432708,-7.348859,0.642134,-0.198692,7.030943,-9.258297,5.738173,8.006069,6.094758,-3.135831,-4.256706,7.202849,4.153714,-9.602184,6.916185,-9.891071,-8.086038,3.990093,4.530488,-9.309920,9.638300,0.757255,-4.126143,7.732720,-7.714302,7.274260,4.100074,2.983787,9.089156,1.279904,4.641288,6.744876,-7.319790,7.176767,7.900146,-2.154364,-0.166534,1.821593,-9.099583,-9.960458,-2.906692,-2.020632,0.526848,-6.058253,4.554830,7.821589,5.500203,-7.865928,0.922800,4.267148,7.997025,6.717059,8.622509,-3.346722,2.303073,1.161699,-5.099118,0.540339,1.269796,-0.901467,2.905027,-0.065317,4.611460,-6.450124,-5.392809,7.774756,1.923419,-6.970989,2.495785,-7.397794,9.481141,-6.984375,9.559879,6.576381,-2.172210,0.413110,0.683715,-8.003731,-1.301907,8.728570,6.529124,-1.235943,6.452925,9.718391,6.769202,7.246281,5.819594,-6.886504,1.703600,-5.577059,-1.596838,6.000671,4.505864,-4.725672,-4.973445,-0.779123,-1.576443,-1.953918,9.147339,-2.881943,-2.502990,-3.506553,9.525086,-8.963698,-6.219055,-3.139878,6.437982,4.929595,-4.610756,-1.680714,0.243094,-1.128935,-0.364492,-0.716433,-4.874063,-5.060672,-7.968413,0.581123,-2.255306,8.344900,-4.748805,3.425208,8.508713,-1.827812,-4.685754,1.033027,0.857989,5.339358,-0.533559,-0.125518,-7.529835,6.146345,3.741399,-0.524575,6.995415,-5.312641,-0.341860,9.152414,-4.009454,4.255596,-6.939660,9.647845,-1.789770,3.623214,-4.874313,2.715175,0.132837,6.613512,9.271543,-7.589942,6.130407,-6.635187,-2.915775,-3.649776,7.518513,1.715858,-3.870504,-4.310529,8.138294,7.108307,8.897618,-0.920795,-9.275237,6.590400,7.488758,-2.676326,-1.888318,-7.185839,-4.730482,-5.720336,-9.396980,4.480407,-0.111227,4.376358,-4.849359,9.738702,-8.094917,-5.758503,8.393748,-3.321577,7.751684,-3.897764,-4.123450,-9.480912,4.826674,-9.238414,-3.843281,-2.895254,1.525859,-4.855869,-9.580979,7.613782,8.211759,3.955094,0.941248,1.012145,-8.215463,3.236106,3.924973,5.143830,-0.660193,-9.600283,-9.677641,4.045080,1.895480,6.238371,7.745480,-6.164674,-1.913494,6.251264,7.494317,-2.350001,-6.029773,-8.653447,9.339242,-6.483865,-5.953897,-7.583360,8.296645,-9.102346,9.662952,9.671279,3.938532,6.321228,9.313146,9.348435,8.010334,0.043838,4.631813,2.399636,4.402192,-2.720887,3.123620,-9.503478,-9.831514,7.849559,-6.985863,-3.502866,-4.073378,3.548684,1.840157,-7.546410,-3.739613,-9.147896,-3.862360,-5.000846,-2.637095,1.638466,4.256173,-2.682503,-9.799737,8.667612,-1.288368,-9.166957,6.615081,4.481998,9.317124,-0.855308,4.575875,4.792451,-1.476188,6.444828,6.215758,-8.464078,5.605520,-7.029172,-8.112875,-9.354809,-3.402133,3.359439,9.510957,-3.829646,7.356057,-0.495026,7.688747,-2.197009,-6.899357,-4.837353,-3.809092,-6.133588,-3.648234,8.511437,9.873156,8.930672,5.412287,9.361755,9.768299,2.076169,-8.521056,2.587879,8.295387,-9.318831,-3.788485,0.904149,4.653681,-7.217782,7.736958,0.066856,7.935228,-9.745331,0.819132,4.767561,0.013985,2.044740,0.823740,2.123329,-1.817289,-4.611540,8.193809,2.383822,4.803783,-3.287062,-5.486658,9.754360,-6.834356,-3.586731,-1.920117,7.357576,-6.242954,9.631024,4.932835,-3.435706,-6.263910,-2.897578,1.012378,9.963518,0.126486,2.263358,7.310216,-4.668436,-0.900943,3.877869,-6.823321,-5.319217,-7.597539,-0.832589,-5.670863,6.499669,7.446704,-1.217632,-4.133862,-3.573578,1.310660,6.406968,-1.115063,7.312056,-9.493166,1.237313,3.194188,5.808858,-1.895743,8.592453,-3.188133,3.050133,9.935826,-8.607388,9.840931,8.748391,-3.172805,7.053940,-4.722682,9.054410,-1.102137,-1.513121,-1.529076,1.708608,4.853348,-8.252124,9.980242,-5.265753,5.186114,-7.276556,8.917240,-3.386801,-5.174860,-6.217975,-5.380311,8.981657,7.675713,-6.749318,5.845231,-9.130209,-9.462116,0.426174,-7.339823,-0.472948,-0.838522,2.541492,6.916422,-4.644653,6.575640,-5.616570,-5.049135,-9.413462,3.529025,-4.794958,-2.097038,-6.925138,5.958162,7.409171,1.335324,3.498487,-0.798237,3.875684,-7.932763,-2.958517,-2.497766,6.626672,-6.231511,-5.333905,-4.818345,9.412182,7.464859,-1.533663,3.062662,4.243024,7.135562,-7.460494,0.224487,5.338282,4.048730,6.677398,1.442214,5.822231,2.410938,3.331875,-0.434919,-2.270022,-6.773402,-1.904474,-3.572319,-0.564171,-1.354685,-2.633437,-7.859557,-4.999415,2.820657,-4.405717,-8.075992,-3.197333,1.023947,-3.508171,-9.313913,-6.913893,4.387049,-6.684444,-2.883151,4.130630,-2.411490,-1.985148,-7.344803,-7.397811,-8.881162,-3.259565,-9.090337,-8.984146,-7.872591,0.759557,-3.904911,-0.607753,-8.574336,5.518539,8.428813,-7.557903,-8.707329,3.012513,1.338850,-9.373385,-3.450939,-0.709643,-4.654676,-1.447373,9.815674,1.540377,1.831227,3.075617,2.044030,-9.010537,-6.486663,-9.021095,7.857563,7.135761,3.672867,1.115860,-6.255684,0.195719,-7.157338,4.875308,3.366054,6.577020,-4.902797,5.534921,-6.048567,5.370058,-1.061283,0.823540,8.871237,-3.039648,5.133160,-7.313908,9.483573,-1.903494,8.439605,-8.121693,-3.265626,-8.134327,-1.063003,-3.109932,6.898415,3.752643,2.802560,-1.749528,2.996652,-0.161337,-7.351291,-7.349210,-5.116774,7.754585,4.785839,-3.342789,-7.762896,-6.017992,-8.887812,3.128564,-1.431088,0.470097,1.416994,-2.357748,-7.760182,8.645978,9.589148,2.101695,-1.136864,-8.846900,-7.329974,-8.540727,4.486794,7.818009,8.561732,4.953928,-5.762365,-3.087867,-9.086266,-5.722063,1.004056,7.879129,-8.110466,-3.127028,-5.705618,-5.708534,8.859213,8.900840,7.002457,1.296523,6.199789,9.942760,3.143500,3.047912,-9.430452,5.634911,-9.878941,1.478900,0.763036,6.063778,-7.973801,-0.471324,-0.434197,-2.303172,-4.856803,2.398873,-0.585462,7.414597,-1.138505,-0.750128,1.233643,-9.746395,-5.909058,-1.712764,2.596770,3.050113,1.308573,1.002475,9.563594,1.432578,1.914838,9.808932,7.672669,-8.384688,-5.909357,1.342811,-7.630675,1.747105,9.382616,-9.535688,4.251107,-9.622514,6.064115,5.607813,3.861341,-1.579086,9.372283,-3.210745,3.766965,-8.112678,0.237477,2.094597,6.727761,1.838692,-3.833902,3.967930,1.833758,-0.872222,5.763816,-5.682320,-9.707875,-5.996135,-1.864595,8.993582,8.585153,2.053860,4.155328,-4.909462], dtype = "float32")#candidate|2827|(1820,)|const|float32
call_2826 = func_297_call(relay.reshape(const_2827.astype('float32'), [10, 13, 14]), relay.reshape(const_2827.astype('float32'), [10, 13, 14]), )
call_2828 = func_297_call(relay.reshape(const_2827.astype('float32'), [10, 13, 14]), relay.reshape(const_2827.astype('float32'), [10, 13, 14]), )
output = relay.Tuple([call_2785,call_2787,call_2790,var_2791,call_2797,const_2798,call_2823,var_2824,call_2826,const_2827,])
output2 = relay.Tuple([call_2786,call_2788,call_2792,var_2791,call_2799,const_2798,call_2825,var_2824,call_2828,const_2827,])
func_2845 = relay.Function([var_2791,var_2824,], output)
mod['func_2845'] = func_2845
mod = relay.transform.InferType()(mod)
var_2846 = relay.var("var_2846", dtype = "int64", shape = (112,))#candidate|2846|(112,)|var|int64
var_2847 = relay.var("var_2847", dtype = "int32", shape = (120,))#candidate|2847|(120,)|var|int32
output = func_2845(var_2846,var_2847,)
func_2848 = relay.Function([var_2846,var_2847,], output)
mutated_mod['func_2848'] = func_2848
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1313_call = mod.get_global_var('func_1313')
func_1315_call = mutated_mod.get_global_var('func_1315')
call_2855 = func_1313_call()
call_2856 = func_1313_call()
output = relay.Tuple([call_2855,])
output2 = relay.Tuple([call_2856,])
func_2878 = relay.Function([], output)
mod['func_2878'] = func_2878
mod = relay.transform.InferType()(mod)
output = func_2878()
func_2879 = relay.Function([], output)
mutated_mod['func_2879'] = func_2879
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1438_call = mod.get_global_var('func_1438')
func_1440_call = mutated_mod.get_global_var('func_1440')
call_2880 = relay.TupleGetItem(func_1438_call(), 0)
call_2881 = relay.TupleGetItem(func_1440_call(), 0)
var_2902 = relay.var("var_2902", dtype = "bool", shape = (15, 7, 14))#candidate|2902|(15, 7, 14)|var|bool
bop_2903 = relay.multiply(call_2880.astype('uint8'), relay.reshape(var_2902.astype('uint8'), relay.shape_of(call_2880))) # shape=(15, 7, 14)
bop_2906 = relay.multiply(call_2881.astype('uint8'), relay.reshape(var_2902.astype('uint8'), relay.shape_of(call_2881))) # shape=(15, 7, 14)
uop_2907 = relay.log(call_2880.astype('float64')) # shape=(15, 7, 14)
uop_2909 = relay.log(call_2881.astype('float64')) # shape=(15, 7, 14)
output = relay.Tuple([bop_2903,uop_2907,])
output2 = relay.Tuple([bop_2906,uop_2909,])
func_2910 = relay.Function([var_2902,], output)
mod['func_2910'] = func_2910
mod = relay.transform.InferType()(mod)
mutated_mod['func_2910'] = func_2910
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2911 = relay.var("var_2911", dtype = "bool", shape = (15, 7, 14))#candidate|2911|(15, 7, 14)|var|bool
func_2910_call = mutated_mod.get_global_var('func_2910')
call_2912 = func_2910_call(var_2911)
output = call_2912
func_2913 = relay.Function([var_2911], output)
mutated_mod['func_2913'] = func_2913
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2161_call = mod.get_global_var('func_2161')
func_2162_call = mutated_mod.get_global_var('func_2162')
call_2940 = func_2161_call()
call_2941 = func_2161_call()
output = call_2940
output2 = call_2941
func_2974 = relay.Function([], output)
mod['func_2974'] = func_2974
mod = relay.transform.InferType()(mod)
mutated_mod['func_2974'] = func_2974
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2974_call = mutated_mod.get_global_var('func_2974')
call_2975 = func_2974_call()
output = call_2975
func_2976 = relay.Function([], output)
mutated_mod['func_2976'] = func_2976
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2995 = relay.var("var_2995", dtype = "float32", shape = (2, 2, 2))#candidate|2995|(2, 2, 2)|var|float32
uop_2996 = relay.exp(var_2995.astype('float32')) # shape=(2, 2, 2)
uop_3006 = relay.log10(uop_2996.astype('float64')) # shape=(2, 2, 2)
func_535_call = mod.get_global_var('func_535')
func_539_call = mutated_mod.get_global_var('func_539')
const_3024 = relay.const([9.796987,-6.711162,-7.009028,0.944746,-1.519780,-9.090985,-6.019565,2.795993,7.864511,-9.836921,9.719439,2.783039,-9.239484,1.205803,7.949682,-1.625184,7.368458,-6.943770,7.652002,-8.043122,5.001026,-9.481189,-9.435574,-2.938350,-9.206061,-6.147705,1.411569,2.644071,9.360462,-5.574190,4.975916,9.184014,0.939675,-8.380666,8.216905,5.451325,-6.396891,-6.487337,1.563982,-6.765321,6.127607,1.231038,1.279086,8.841542,9.990092,7.632274,-4.468374,3.731432,-0.322608,-9.175471,7.091231,-6.176528,-2.900629,-1.983923,3.168673,5.219790,9.704149,-6.806237,9.062922,1.161560,3.885737,-2.720483,0.092926,9.340510,1.908632,4.304774,4.088676,-6.641649,-5.148240,5.522459,-3.974376,3.991811,4.496465,-8.601813,2.917749,-7.003063,-0.746731,-0.934297,-5.662778,3.533240,-0.998328,-3.065241,9.007535,1.721114,6.567651,8.764814,1.066172,1.876914,-5.195929,-5.788294,6.657810,-0.352869,7.289208,0.160253,3.611169,8.981544,6.160818,0.731782,1.274954,8.478653,-8.036011,-4.271302,6.386070,-6.874362,5.281316,0.859903,4.571746,-6.936519,-8.882801,9.927801,-0.985294,5.160364,-4.868014,-7.608527,9.439415,8.943234,3.318198,-0.611196,5.695931,-1.399223,9.504422,-0.419255,-1.992344,1.620146,-5.174370,-0.185508,5.917668,0.831994,-2.056320,9.543253,0.941303,0.367456,-7.140352,5.292615,8.474180,-8.698224,9.272351,3.521025,0.108455,-7.926706,4.290549,6.036949,8.734058,3.901825,-0.392163,9.674358,9.843845,-6.453566,-4.991523,5.514598,-5.692189,-2.214797,-5.612861,9.471311], dtype = "float32")#candidate|3024|(154,)|const|float32
var_3025 = relay.var("var_3025", dtype = "int16", shape = (100,))#candidate|3025|(100,)|var|int16
var_3026 = relay.var("var_3026", dtype = "int64", shape = (112,))#candidate|3026|(112,)|var|int64
call_3023 = relay.TupleGetItem(func_535_call(relay.reshape(const_3024.astype('float32'), [7, 2, 11]), relay.reshape(var_3025.astype('int16'), [100,]), relay.reshape(var_3026.astype('int64'), [112,]), ), 3)
call_3027 = relay.TupleGetItem(func_539_call(relay.reshape(const_3024.astype('float32'), [7, 2, 11]), relay.reshape(var_3025.astype('int16'), [100,]), relay.reshape(var_3026.astype('int64'), [112,]), ), 3)
output = relay.Tuple([uop_3006,call_3023,const_3024,var_3025,var_3026,])
output2 = relay.Tuple([uop_3006,call_3027,const_3024,var_3025,var_3026,])
func_3033 = relay.Function([var_2995,var_3025,var_3026,], output)
mod['func_3033'] = func_3033
mod = relay.transform.InferType()(mod)
var_3034 = relay.var("var_3034", dtype = "float32", shape = (2, 2, 2))#candidate|3034|(2, 2, 2)|var|float32
var_3035 = relay.var("var_3035", dtype = "int16", shape = (100,))#candidate|3035|(100,)|var|int16
var_3036 = relay.var("var_3036", dtype = "int64", shape = (112,))#candidate|3036|(112,)|var|int64
output = func_3033(var_3034,var_3035,var_3036,)
func_3037 = relay.Function([var_3034,var_3035,var_3036,], output)
mutated_mod['func_3037'] = func_3037
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1438_call = mod.get_global_var('func_1438')
func_1440_call = mutated_mod.get_global_var('func_1440')
call_3051 = relay.TupleGetItem(func_1438_call(), 0)
call_3052 = relay.TupleGetItem(func_1440_call(), 0)
output = call_3051
output2 = call_3052
func_3057 = relay.Function([], output)
mod['func_3057'] = func_3057
mod = relay.transform.InferType()(mod)
output = func_3057()
func_3058 = relay.Function([], output)
mutated_mod['func_3058'] = func_3058
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1693_call = mod.get_global_var('func_1693')
func_1695_call = mutated_mod.get_global_var('func_1695')
call_3067 = relay.TupleGetItem(func_1693_call(), 0)
call_3068 = relay.TupleGetItem(func_1695_call(), 0)
func_1438_call = mod.get_global_var('func_1438')
func_1440_call = mutated_mod.get_global_var('func_1440')
call_3075 = relay.TupleGetItem(func_1438_call(), 0)
call_3076 = relay.TupleGetItem(func_1440_call(), 0)
output = relay.Tuple([call_3067,call_3075,])
output2 = relay.Tuple([call_3068,call_3076,])
func_3085 = relay.Function([], output)
mod['func_3085'] = func_3085
mod = relay.transform.InferType()(mod)
output = func_3085()
func_3086 = relay.Function([], output)
mutated_mod['func_3086'] = func_3086
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3087 = relay.var("var_3087", dtype = "uint16", shape = (8, 12, 13))#candidate|3087|(8, 12, 13)|var|uint16
var_3088 = relay.var("var_3088", dtype = "uint16", shape = (8, 12, 13))#candidate|3088|(8, 12, 13)|var|uint16
bop_3089 = relay.greater(var_3087.astype('bool'), relay.reshape(var_3088.astype('bool'), relay.shape_of(var_3087))) # shape=(8, 12, 13)
output = bop_3089
output2 = bop_3089
func_3098 = relay.Function([var_3087,var_3088,], output)
mod['func_3098'] = func_3098
mod = relay.transform.InferType()(mod)
var_3099 = relay.var("var_3099", dtype = "uint16", shape = (8, 12, 13))#candidate|3099|(8, 12, 13)|var|uint16
var_3100 = relay.var("var_3100", dtype = "uint16", shape = (8, 12, 13))#candidate|3100|(8, 12, 13)|var|uint16
output = func_3098(var_3099,var_3100,)
func_3101 = relay.Function([var_3099,var_3100,], output)
mutated_mod['func_3101'] = func_3101
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1680_call = mod.get_global_var('func_1680')
func_1682_call = mutated_mod.get_global_var('func_1682')
call_3108 = func_1680_call()
call_3109 = func_1680_call()
var_3111 = relay.var("var_3111", dtype = "int32", shape = (14, 15, 14))#candidate|3111|(14, 15, 14)|var|int32
bop_3112 = relay.minimum(call_3108.astype('uint16'), relay.reshape(var_3111.astype('uint16'), relay.shape_of(call_3108))) # shape=(14, 15, 14)
bop_3115 = relay.minimum(call_3109.astype('uint16'), relay.reshape(var_3111.astype('uint16'), relay.shape_of(call_3109))) # shape=(14, 15, 14)
var_3123 = relay.var("var_3123", dtype = "uint16", shape = (14, 15, 14))#candidate|3123|(14, 15, 14)|var|uint16
bop_3124 = relay.right_shift(bop_3112.astype('int32'), relay.reshape(var_3123.astype('int32'), relay.shape_of(bop_3112))) # shape=(14, 15, 14)
bop_3127 = relay.right_shift(bop_3115.astype('int32'), relay.reshape(var_3123.astype('int32'), relay.shape_of(bop_3115))) # shape=(14, 15, 14)
output = bop_3124
output2 = bop_3127
func_3128 = relay.Function([var_3111,var_3123,], output)
mod['func_3128'] = func_3128
mod = relay.transform.InferType()(mod)
mutated_mod['func_3128'] = func_3128
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3128_call = mutated_mod.get_global_var('func_3128')
var_3130 = relay.var("var_3130", dtype = "int32", shape = (14, 15, 14))#candidate|3130|(14, 15, 14)|var|int32
var_3131 = relay.var("var_3131", dtype = "uint16", shape = (14, 15, 14))#candidate|3131|(14, 15, 14)|var|uint16
call_3129 = func_3128_call(var_3130,var_3131,)
output = call_3129
func_3132 = relay.Function([var_3130,var_3131,], output)
mutated_mod['func_3132'] = func_3132
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2222_call = mod.get_global_var('func_2222')
func_2224_call = mutated_mod.get_global_var('func_2224')
call_3154 = relay.TupleGetItem(func_2222_call(), 0)
call_3155 = relay.TupleGetItem(func_2224_call(), 0)
output = call_3154
output2 = call_3155
func_3170 = relay.Function([], output)
mod['func_3170'] = func_3170
mod = relay.transform.InferType()(mod)
output = func_3170()
func_3171 = relay.Function([], output)
mutated_mod['func_3171'] = func_3171
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3057_call = mod.get_global_var('func_3057')
func_3058_call = mutated_mod.get_global_var('func_3058')
call_3184 = func_3057_call()
call_3185 = func_3057_call()
output = relay.Tuple([call_3184,])
output2 = relay.Tuple([call_3185,])
func_3191 = relay.Function([], output)
mod['func_3191'] = func_3191
mod = relay.transform.InferType()(mod)
output = func_3191()
func_3192 = relay.Function([], output)
mutated_mod['func_3192'] = func_3192
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3191_call = mod.get_global_var('func_3191')
func_3192_call = mutated_mod.get_global_var('func_3192')
call_3201 = relay.TupleGetItem(func_3191_call(), 0)
call_3202 = relay.TupleGetItem(func_3192_call(), 0)
output = call_3201
output2 = call_3202
func_3205 = relay.Function([], output)
mod['func_3205'] = func_3205
mod = relay.transform.InferType()(mod)
mutated_mod['func_3205'] = func_3205
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3205_call = mutated_mod.get_global_var('func_3205')
call_3206 = func_3205_call()
output = call_3206
func_3207 = relay.Function([], output)
mutated_mod['func_3207'] = func_3207
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1693_call = mod.get_global_var('func_1693')
func_1695_call = mutated_mod.get_global_var('func_1695')
call_3224 = relay.TupleGetItem(func_1693_call(), 0)
call_3225 = relay.TupleGetItem(func_1695_call(), 0)
func_1828_call = mod.get_global_var('func_1828')
func_1830_call = mutated_mod.get_global_var('func_1830')
const_3230 = relay.const([[0.966770,1.857682,-9.530388,1.977985,-5.218577,7.886626,-3.750834,-0.825245],[3.205149,-0.382552,2.562478,-7.156324,-8.291925,7.737975,1.674904,1.283600],[9.923788,9.167228,2.044817,-5.154211,8.031792,-5.495318,7.731659,-9.072170],[0.364535,6.771612,-1.430406,-2.196446,8.532052,6.872826,-0.101784,-0.752788]], dtype = "float32")#candidate|3230|(4, 8)|const|float32
call_3229 = func_1828_call(relay.reshape(const_3230.astype('float32'), [8, 2, 2]))
call_3231 = func_1828_call(relay.reshape(const_3230.astype('float32'), [8, 2, 2]))
var_3251 = relay.var("var_3251", dtype = "float64", shape = (10, 12, 9))#candidate|3251|(10, 12, 9)|var|float64
bop_3252 = relay.maximum(call_3224.astype('float32'), relay.reshape(var_3251.astype('float32'), relay.shape_of(call_3224))) # shape=(10, 12, 9)
bop_3255 = relay.maximum(call_3225.astype('float32'), relay.reshape(var_3251.astype('float32'), relay.shape_of(call_3225))) # shape=(10, 12, 9)
output = relay.Tuple([call_3229,const_3230,bop_3252,])
output2 = relay.Tuple([call_3231,const_3230,bop_3255,])
func_3260 = relay.Function([var_3251,], output)
mod['func_3260'] = func_3260
mod = relay.transform.InferType()(mod)
mutated_mod['func_3260'] = func_3260
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3261 = relay.var("var_3261", dtype = "float64", shape = (10, 12, 9))#candidate|3261|(10, 12, 9)|var|float64
func_3260_call = mutated_mod.get_global_var('func_3260')
call_3262 = func_3260_call(var_3261)
output = call_3262
func_3263 = relay.Function([var_3261], output)
mutated_mod['func_3263'] = func_3263
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1680_call = mod.get_global_var('func_1680')
func_1682_call = mutated_mod.get_global_var('func_1682')
call_3269 = func_1680_call()
call_3270 = func_1680_call()
func_3191_call = mod.get_global_var('func_3191')
func_3192_call = mutated_mod.get_global_var('func_3192')
call_3283 = relay.TupleGetItem(func_3191_call(), 0)
call_3284 = relay.TupleGetItem(func_3192_call(), 0)
output = relay.Tuple([call_3269,call_3283,])
output2 = relay.Tuple([call_3270,call_3284,])
func_3295 = relay.Function([], output)
mod['func_3295'] = func_3295
mod = relay.transform.InferType()(mod)
output = func_3295()
func_3296 = relay.Function([], output)
mutated_mod['func_3296'] = func_3296
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3057_call = mod.get_global_var('func_3057')
func_3058_call = mutated_mod.get_global_var('func_3058')
call_3302 = func_3057_call()
call_3303 = func_3057_call()
var_3309 = relay.var("var_3309", dtype = "bool", shape = (15, 7, 14))#candidate|3309|(15, 7, 14)|var|bool
bop_3310 = relay.not_equal(call_3302.astype('bool'), relay.reshape(var_3309.astype('bool'), relay.shape_of(call_3302))) # shape=(15, 7, 14)
bop_3313 = relay.not_equal(call_3303.astype('bool'), relay.reshape(var_3309.astype('bool'), relay.shape_of(call_3303))) # shape=(15, 7, 14)
func_1534_call = mod.get_global_var('func_1534')
func_1537_call = mutated_mod.get_global_var('func_1537')
const_3330 = relay.const([[-4,-1,7,-6,-10,-6,-4,-9,8,-3,4,-9,9,9,-1,8,-7,-10,2,9,-4,1,5,-10,-5,7,6,-10,-4,-6,6,-2,4,7,1,-10,-9,4,10,7,9,-9,-2,2,1,-4,-6,10,-10,8,5,8,-8,9,6,-5,2,2,2,1,-3,-10,3,9,-1,5,-4,9,5,9,-6,8,8,-3,5,-4,10,9,8,-7,6,4,-6,1,-2,5,-5,-7,7,3,-3,2,5,-7,3,3,-9,-9,-1,-8,-3,3,10,-2,10,-8,-6,-6,-4,-3,10,-6,2,-4,10,-8,-7,-2,2,1,-3,5,-1,-8,8,4,7,5,-7,-4,10,-9,-4,-3,7,8,-5,7,8,3,-9,3,6,9,8,-10,5,7,-10,-4,6,-7,7,-7,3,10,-8,10,-3,-9,10,9,-9,-3,-7,-6,-10,-4,-10,9,-4,3,-4,-5,-2,7,-4,-9,5,1,-10,-6,1,7,-2,5,7,-7,-3,-9,-9,-10,5,7,3,5,-5,4,-1,-9,9,-1,2,-9,-10,-1,-5,3,2,1,6,-9,-6,-8,5,-2,-1,-3,10,-9,10,-9,-3,-4,-2,10,-10,-10,-3,-5,-8,-3,9,2,-5,10,-5,10,-3,2,-1,5,1,-10,-4,3,2,-8,9,2,5,1,5,7,-6,-5,-3,-10,4,9,5,-9,-7,9,1,1,-3,5,4,6,-2,8,-9,-8,-6,-2,-8,-7,-8,-10,-8,-2,-5,-9,-10,10,-5,-5,-5,-1,1,-4,-2,5,-7,-6,10,-4,-8,4,9,8,-10,-2,8,-8,5,-2,-2,7,-6,2,5,-10,10,-1,-8,5,-3,-5,-8,-4,6,2,-4,7,3,7,7,1,1,-6,-2,-7,8,6,6,1,-7,-7,-1,3,4,-2,-7,-8,-6,7,9,-2,5,-5,9,2,10,-7,6,6,9,-10,-4,5,5,7,4,-1,7,-10,5,-2,-1,-7,-8,6,-5,-4,-7,9,8,5,7,-1,-3,3,-4,4,-4,4,-6,-9,-7,9,1,5,8,-1,8,-1,4,-3,-9,-6,8,6,10,-4,-10,2,-5,-9,1,-9,-4,3,2,-8,1,-3,6,2,5,-7,-2,-6,-10,-1,-7,-1,9,-10,-10,-4,-6,1,-6,-10,-2,8,7,-3,1,9,6,-10,6,8,2,-8,-8,-10,3,-7,-8,8,-1,4,7,-3,-3,-8,4,-6,7,-5,-2,-1,-7,-7,5,10,-6,-9,8,-6,4,-2,9,7,10,2,6,-7,2,-8,1,3,2,10,4,1,-7,8,-10,5,8,-4,-1,-9,-6,1,5,-5,-8,7,9,1,2,4,-6,-2,6,-9,8,1,-3,1,6,4,-9,5,-8,5,-8,2,10,8,-1,-5,5,4,10,-7,-1,10,4,9,-4,2,5,-5,7,3,2,-8,7,8,-9,-4,8,2,1,-3,-8,-8,6,-2,-9,-2,4,-8,4,-8,3,-3,6,-10,-9,-4,8,1,-5,9,-9,-5,-3,-4,10,-9,-4,1,-8,-10,6,3,4,-7,9,3,9,1,-10,10,-8,3,5,-3,5,-9,7,-4,-10,-10,-7,4,-10,9,-9,1,1,-1,-8,-9,-8,-5,-4,6,9,10,-10,3,1,-3,4,10,-8,2,-3,-10,-3,8,3,9,1,-8,-6,-2,-5,-7,-10,4,6,-5,-9,4,9,9,-3,4,2,6,4,-4,2,6,10,2,-6,-9,-10,-8,2,-3,-8,10,10,5,-3,-3,-4,-8,8,2,-7,-8,-1,-7,4,1,-10,1,8,-6,-6,-9,5,-5,-9,7,-6,-2,3,-4,-3,8,-8,5,-6,-9,7,3,5,-7,4,8,-10,1,-4,-2,-9,-2,1,3,6,10,-7,-9,2,7,-1,10,-9,-7,-5,2,1,-1,1,8,7,5,2,6,-10,-1,-10,-2,-1,2,8,-10,-9,-1,-6,-2,-8,6,-8,3,-7,-9,-5,-6,10,10,3,8,2,6,8,-2,-4,-4,3,2,-4,-7,-2,3,2,-1,-5,10,-6,-7,4,-9,-8,-5,-4,10,-8,5,1,-3,5,-7,10,-10,-4,3,8,8,-6,-8,-10,8,-7,-9,5,1,-5,-10,8,3,7,-1,7,3,-4,6,9,-5,9,5,5,3,6,7,3,7,-6,-7,2,8,10,2,-10,-6,-1,6,-8,-6,-2,10,2,5,10,3,-3,7,-7,-3,-6,-9,-1,-2,3,5,2,-9,7,-6,-10,-6,-10,-6,-2,7,9,4,10,-9,8,6,-3,8,-1,-6,1,-3,5,-1,8,6,3,-7,9,-6,4,-9,-9,7,-9,-2,-5,3,-6,-8,10,4,-7,8,1,-3,8,-1,6,8,9,6,-6,-3,-3,7,-6,-9,-3,8,-1,-8,10,-5,-7,10,2,9,4,10,-4,3,9,-2,-8,-8,-1,7,6,-6,4,9,3,-4,10,4,-3,4,8,-6,-8,5,-3,-1,-4,-3,4,-4,2,1,2,-5,-2,-8,-9,-7,1,8,-6,-4,-3,-9,-1,-3,-1,-4,-2,9,-10,-6,-3,7,7,-7,-2,3,8,-4,3,9,-2,8,-3,-7,3,-3,-6,-10,6,6,-8,7,1,6,-9,-9,-9,-6,-3,5,-8,-2,-9,-9,-10,4,4,-8,3,10,-1,6,5,10,6,-3,4,-1,8,9,-7,-9,-6,-7,-1,4,7,1,1,9,9,-4,-9,-7,4,-6,10,-3,4,-7,6,-8,9,-4,-1,10,7,4,-10,3,-6,5,4,-4,8,5,3,7,-3,4,6,-5,-9,-6,-7,-3,8,10,-7,-2,8,-1,1,2,-10,9,2,6,-10,-2,-3,-3,-4,3,-9,-8,-2,-5,6,-6,-6,2,-8,1,3,6,-10,-7,2,-8,4,-8,-5,-9,2,9,10,-8,-10,-6,-4,-10,-9,-9,-6,-2,2,-7,2,-10,-1,2,8,2,9,-4,-10,7,1,2,2,-8,-3,3,-10,10,10,7,-4,-10,6,-7,-6,8,10,-7,-4,-9,9,-2,5,-2,-6,6,5,2,-8,10,3,3,9,-6,-2,-10,8,-2,6,9,3,9,-9,-1,-1,-1,2,6,2,4,8,9,-8,9,4,-5,3,-7,6,-7,3,-9,-4,4,-8,1,4,2,-10,-7,8,3,5,-4,-10,-8,-1,-5,4,10,-2,10,3,-10]], dtype = "uint32")#candidate|3330|(1, 1210)|const|uint32
call_3329 = func_1534_call(relay.reshape(const_3330.astype('uint32'), [11, 10, 11]), relay.reshape(const_3330.astype('uint32'), [11, 10, 11]), )
call_3331 = func_1534_call(relay.reshape(const_3330.astype('uint32'), [11, 10, 11]), relay.reshape(const_3330.astype('uint32'), [11, 10, 11]), )
func_1913_call = mod.get_global_var('func_1913')
func_1916_call = mutated_mod.get_global_var('func_1916')
var_3338 = relay.var("var_3338", dtype = "int16", shape = (100,))#candidate|3338|(100,)|var|int16
call_3337 = relay.TupleGetItem(func_1913_call(relay.reshape(var_3338.astype('int16'), [5, 20])), 2)
call_3339 = relay.TupleGetItem(func_1916_call(relay.reshape(var_3338.astype('int16'), [5, 20])), 2)
uop_3340 = relay.erf(var_3338.astype('float64')) # shape=(100,)
output = relay.Tuple([bop_3310,call_3329,const_3330,call_3337,uop_3340,])
output2 = relay.Tuple([bop_3313,call_3331,const_3330,call_3339,uop_3340,])
func_3345 = relay.Function([var_3309,var_3338,], output)
mod['func_3345'] = func_3345
mod = relay.transform.InferType()(mod)
var_3346 = relay.var("var_3346", dtype = "bool", shape = (15, 7, 14))#candidate|3346|(15, 7, 14)|var|bool
var_3347 = relay.var("var_3347", dtype = "int16", shape = (100,))#candidate|3347|(100,)|var|int16
output = func_3345(var_3346,var_3347,)
func_3348 = relay.Function([var_3346,var_3347,], output)
mutated_mod['func_3348'] = func_3348
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2878_call = mod.get_global_var('func_2878')
func_2879_call = mutated_mod.get_global_var('func_2879')
call_3360 = relay.TupleGetItem(func_2878_call(), 0)
call_3361 = relay.TupleGetItem(func_2879_call(), 0)
output = call_3360
output2 = call_3361
func_3377 = relay.Function([], output)
mod['func_3377'] = func_3377
mod = relay.transform.InferType()(mod)
mutated_mod['func_3377'] = func_3377
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3377_call = mutated_mod.get_global_var('func_3377')
call_3378 = func_3377_call()
output = call_3378
func_3379 = relay.Function([], output)
mutated_mod['func_3379'] = func_3379
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3438 = relay.const([[[5.029963,-6.015285],[-6.838373,1.243373],[-4.025972,-7.136697],[1.569782,-0.749303],[-4.948711,-6.024784],[8.754762,2.611127],[7.407210,3.156254],[4.999086,8.400132],[-2.619411,2.383655],[6.669085,-6.424485]],[[3.265753,-2.594669],[-0.906524,-7.768579],[9.647277,6.413493],[-4.200123,0.656396],[-9.602217,0.348261],[9.890415,0.090277],[7.819831,1.851475],[5.129517,-8.484922],[-8.310632,-9.237805],[1.422591,2.615006]],[[7.178895,-8.074432],[-1.582443,-3.527999],[-2.627791,-4.056926],[-0.192190,3.502262],[-6.067626,-9.069308],[-2.417352,4.395383],[7.689091,-5.433609],[-2.908575,-0.315914],[-1.918973,5.952613],[-8.047483,8.707694]],[[-4.743373,9.019676],[8.958848,-5.245548],[1.574830,-5.824096],[8.705343,-9.670161],[3.441222,-1.583247],[5.070028,6.707114],[4.734193,-1.155497],[-0.177363,-9.210599],[4.025530,7.623800],[-3.119033,-2.110945]],[[-8.792482,-0.032830],[-4.246730,0.726572],[9.098364,-4.670164],[-7.344005,-4.695388],[-6.021366,1.198998],[-2.513144,7.470520],[0.018216,2.188394],[-2.614746,9.249097],[-4.080569,1.459145],[0.999839,-7.506935]],[[-9.226366,6.402023],[-2.795911,-0.632156],[-3.679608,-3.434228],[4.038562,-4.167355],[-6.734033,-8.457181],[3.271938,-8.967799],[5.642790,9.514719],[-6.007072,9.669485],[-2.283338,4.896484],[-3.735917,0.851998]],[[8.830058,-5.868892],[-2.404082,-2.127485],[-3.351730,3.239842],[-5.315535,9.172607],[0.884791,-7.916143],[-3.093723,-7.363260],[-4.357797,2.560105],[3.905614,9.456005],[-3.137788,2.126384],[-9.721044,-7.596550]]], dtype = "float64")#candidate|3438|(7, 10, 2)|const|float64
uop_3439 = relay.exp(const_3438.astype('float64')) # shape=(7, 10, 2)
output = relay.Tuple([uop_3439,])
output2 = relay.Tuple([uop_3439,])
func_3442 = relay.Function([], output)
mod['func_3442'] = func_3442
mod = relay.transform.InferType()(mod)
output = func_3442()
func_3443 = relay.Function([], output)
mutated_mod['func_3443'] = func_3443
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2974_call = mod.get_global_var('func_2974')
func_2976_call = mutated_mod.get_global_var('func_2976')
call_3522 = func_2974_call()
call_3523 = func_2974_call()
output = call_3522
output2 = call_3523
func_3526 = relay.Function([], output)
mod['func_3526'] = func_3526
mod = relay.transform.InferType()(mod)
output = func_3526()
func_3527 = relay.Function([], output)
mutated_mod['func_3527'] = func_3527
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1337_call = mod.get_global_var('func_1337')
func_1339_call = mutated_mod.get_global_var('func_1339')
call_3528 = func_1337_call()
call_3529 = func_1337_call()
func_297_call = mod.get_global_var('func_297')
func_301_call = mutated_mod.get_global_var('func_301')
const_3532 = relay.const([-2.716996,7.084565,-9.330706,0.383052,-4.976805,-8.824253,-7.104193,9.036102,4.271511,-8.544886,-3.152186,-2.438660,-7.431017,1.510687,7.328813,1.131925,-6.340928,7.056514,4.416092,2.285248,-3.597293,-4.303151,-6.097111,-3.668649,-7.291690,7.205352,-4.236610,-1.527304,-5.689005,3.816187,-3.023086,1.763156,0.220632,-6.058297,7.518752,-5.912711,7.889685,2.193698,-5.555387,6.913369,-8.190212,8.129235,-5.485241,-2.794585,2.869509,2.910841,-8.609635,-5.791243,4.317051,4.638717,5.438949,-3.346126,-3.689561,-3.095652,7.760889,6.916703,7.884903,8.506677,7.825942,-5.850379,6.169133,-5.234048,-6.304164,9.437230,3.966880,8.435813,-4.656465,-4.886169,6.981562,8.393283,-8.189513,-5.747250,0.941371,-9.348034,4.631742,9.624446,-9.648388,2.434360,-7.042673,-8.169113,1.015762,-3.567571,5.390549,-2.836582,-4.986847,4.889468,0.583918,-5.347993,1.272597,6.277570,7.555098,5.019854,-1.981536,-7.847026,4.764377,7.614700,-0.548431,-1.595284,-9.506062,-8.476304,-0.028281,8.134523,-7.110077,-6.256909,-0.121855,-3.136784,-0.353603,1.089099,-7.563799,-7.028313,-5.828100,-6.465529,8.909058,-7.689177,-9.901516,-4.032315,1.656710,-1.043105,9.692379,3.941250,-2.664379,0.541873,-5.749396,7.508942,1.527036,-7.054984,7.401386,-6.048388,-3.814982,-8.613996,-4.196138,1.356885,5.832855,0.717642,4.843860,-8.353420,-3.218545,-9.116658,7.177155,-2.276935,0.500556,-0.420582,5.075310,-4.441280,-9.363352,-4.020058,2.581764,-6.801409,8.513111,-4.848489,-1.449920,-1.691266,-5.824490,5.638523,4.628028,-9.677758,7.942863,5.691291,-7.926647,-3.351251,0.899081,8.453996,-6.328071,1.352133,4.780014,-6.497300,-4.433744,-2.691086,-7.470374,-8.059423,5.836434,-2.072099,-8.550896,-3.461182,6.007164,8.536803,3.745951,-9.006895,-0.764035,-0.386477,6.436638,7.747133,8.177095,-6.700848,-4.179115,3.853439,-3.031370,-5.992421,-8.704709,4.247927,1.647911,-6.506809,2.935680,-1.909636,-9.486714,3.713253,-2.084738,3.420368,-2.792118,8.158791,2.282376,2.805388,-6.222037,-5.884396,-5.072536,7.497322,-0.313272,-5.378854,-7.016381,2.150954,0.730213,-6.181859,6.441958,-9.671401,7.929938,-6.787042,-8.202282,-5.660883,7.927641,0.139119,-2.558238,0.680548,-7.671678,-3.765375,7.063077,2.459560,-0.949943,-6.444505,-1.021077,-3.917225,-7.827622,-3.728252,-7.125476,5.091195,7.279633,4.007881,2.727545,-5.185376,-7.144185,-4.711222,-3.650857,1.218176,4.700326,-7.848584,-9.875816,-1.938149,-7.568702,4.420155,8.036424,-7.533785,-6.803169,0.889138,5.487218,0.883929,-7.606757,6.988038,-0.347381,-2.281356,-8.260174,5.389801,6.256293,9.549784,-0.820596,-4.383534,8.709069,-3.317075,-3.597672,-9.179123,3.290140,5.648418,0.620652,-0.113217,0.509835,-9.247519,8.680484,-6.981651,5.163257,-2.917987,4.172846,3.260145,-5.739240,-9.198073,8.901182,-5.215790,-7.944043,3.662306,-5.029106,2.311190,-2.389422,3.800231,7.856506,-4.299825,5.271412,-1.674607,6.265410,4.362688,8.505396,-3.913217,-8.565639,6.428032,-9.292975,7.848045,-4.609416,8.479541,-6.402779,5.612520,-3.223427,-2.260326,-9.931436,-7.285015,-9.859459,1.562203,7.350080,7.873345,-0.536534,8.194637,1.987844,5.021899,0.945862,-1.458603,0.863285,-6.475738,0.796911,1.311708,9.494058,6.393510,-6.818833,-7.543675,-7.137028,0.128906,-0.112119,5.517018,2.257036,-7.253201,8.005013,-2.614734,-2.344993,0.898249,3.626379,3.183089,-9.273180,9.996082,-0.057891,6.541027,0.398803,6.409721,5.422994,7.482100,-4.040275,5.077654,-5.720190,-9.452253,-8.420554,-6.400272,4.943309,1.727978,-9.581860,-5.462629,-3.819860,1.834765,-8.338182,0.225905,5.026715,5.930707,-5.141371,-8.787772,-7.659488,1.126864,-2.709143,0.673711,-1.864157,1.656116,3.327633,2.798367,2.743238,3.469870,9.779654,3.249994,0.222472,-9.125889,-5.359088,-1.684758,-4.434963,9.908810,4.915015,-9.750353,1.107238,-7.129262,4.355825,-1.571289,-9.001579,-7.303483,3.596573,-5.681130,-6.745605,-2.039482,6.701034,-1.783638,4.824178,-7.869935,-5.276839,-7.937494,9.817100,-6.925437,-5.224232,2.616367,-4.337201,-3.217397,-8.814554,-2.032705,-6.955081,0.958450,4.040778,2.404523,0.708973,5.898519,-5.555139,-7.417825,-7.292158,-7.363854,0.706011,8.664894,7.477742,9.905868,-7.118670,9.343587,0.798794,7.195392,-1.003508,0.584110,-2.918546,8.196573,-2.920996,-2.713971,-2.229935,8.677620,8.250945,7.078628,-7.473543,-7.544020,-2.811348,5.577751,-1.395662,-0.663841,8.792981,-2.830205,-7.355834,-3.054574,9.449075,4.350727,8.656753,-0.646401,0.664994,-9.578446,-7.908476,-8.133283,-5.199518,-3.019130,-9.154800,3.430655,-7.094964,-0.741001,5.353452,6.407753,2.659721,-5.966691,6.896265,8.312845,-7.063120,0.993399,-3.701494,0.350903,8.628642,5.318246,-0.367389,-4.575186,3.060234,2.796510,7.961134,4.170208,3.450354,-5.894492,-0.601643,4.099516,2.919642,-3.091499,-4.659108,-3.682649,6.636893,-1.156543,-6.430958,5.013786,4.031842,-6.885855,8.225312,4.597134,1.226703,-0.912094,-2.555991,-3.620798,-4.698084,6.491283,-5.895491,-1.536096,-3.362234,7.122613,7.119993,-1.605364,2.845054,-2.940590,-6.155752,3.475772,4.351920,-1.521537,2.774409,3.406961,9.281165,-2.834238,-6.243175,9.246116,5.407190,9.185581,6.114381,4.122217,-7.502060,-8.611992,-6.238826,-9.260051,1.472614,5.257312,3.601269,-9.188600,0.623549,-6.344803,2.658199,-4.105271,-1.285830,-6.084611,1.154509,-4.595105,6.252942,0.261084,-5.589700,0.580864,-9.068950,-0.037226,2.272138,-8.312929,8.225031,-4.380959,-2.745203,-9.382475,-1.633197,1.456775,-6.335236,9.734089,-8.531451,2.685625,-6.755345,-8.687234,6.440473,-7.775899,0.174809,-3.392465,0.422177,3.310424,4.139727,-7.680278,-9.192676,-6.957227,4.965792,-8.218856,-2.595317,-3.397303,-8.217612,9.801678,1.918269,-3.719263,-8.188907,9.845581,5.045101,5.751711,-7.593928,-3.214082,5.998435,-6.966054,-2.129942,-4.113909,-2.868404,7.323435,1.431797,2.530839,-9.554317,1.488932,-6.979075,-7.398942,-6.324554,-5.936295,3.855629,0.008089,4.449696,4.584517,1.374121,-0.479247,-2.040957,-0.919467,-9.054541,-0.807718,-9.340050,4.924199,9.539727,-3.317439,-4.830868,-9.912179,-7.499193,-0.345429,2.647212,4.665405,-0.670071,7.986365,-3.853717,-2.286424,5.791248,0.404991,4.221041,-5.905219,8.815088,-5.493715,2.820997,8.506794,-4.814687,-9.683559,-9.404383,-3.604934,2.299961,4.387758,-1.513097,6.330563,7.835029,3.133550,2.730756,0.028757,-6.513742,-0.147476,-0.751697,0.460087,-3.388419,1.797456,-7.322030,5.857733,4.046015,2.253762,-9.451852,6.510753,8.229648,-3.989533,-2.148092,0.376442,9.906835,-5.409123,-8.687112,0.942242,4.306694,6.544192,-2.367512,-0.019613,6.106446,6.036540,-8.046736,0.424080,1.639180,-0.371206,3.419077,4.752464,-9.765608,8.863014,2.895578,0.479774,1.111157,-5.123183,3.865216,4.980155,-1.625436,-7.245944,3.140102,5.064666,-7.994508,-6.030812,2.431336,-9.498303,2.941157,-3.905707,-4.302810,-7.199490,-5.822947,-4.642374,1.353166,1.081461,-8.568856,-6.565217,5.951622,3.416674,2.298544,-1.697974,5.864802,-3.105821,-0.363668,3.740639,-7.700242,-7.227219,6.045540,-6.127551,-2.941358,-0.028149,-5.214430,-5.955919,-8.753373,8.561471,7.522224,5.913975,-7.481220,2.461926,-8.086606,-6.378035,-8.654933,-2.933578,2.700250,-5.229424,-6.044943,-1.671380,7.773552,-8.026021,-3.053610,-3.018128,4.989388,-1.530201,7.023880,-4.308988,0.341651,5.448728,2.688218,4.095986,-0.532533,-5.193838,-9.344409,2.230993,3.307563,-8.267053,3.507067,5.294837,-3.809304,7.900822,-0.830275,0.688616,-0.431022,9.182669,-5.406909,-9.769411,0.645441,7.022804,9.022084,4.677515,5.709499,5.428070,-9.503925,9.037286,-9.074122,0.703675,6.073583,-6.106736,6.321497,9.806399,-7.419997,-1.987389,6.041790,-3.328948,1.001920,0.362454,0.885380,5.800556,-2.312287,-3.048982,0.058172,5.769904,-9.573853,-1.161393,2.114596,-4.846642,1.681988,2.320322,-0.594458,-2.612008,-0.270694,-8.691365,-6.175739,2.369257,1.819718,6.513872,6.623793,0.339703,7.928134,9.499980,7.048229,-0.434475,3.175095,8.723254,2.453853,4.911621,-3.175154,3.641734,7.689130,7.868399,-8.915104,-7.447242,4.661369,-2.784256,4.661296,9.340554,2.727727,-8.614318,-4.248959,-4.832570,4.282927,9.906564,-8.403537,-4.329594,4.759275,-7.020648,-8.403643,-3.895300,-2.761885,-1.255455,-1.632434,-5.286401,-9.709994,-4.821570,3.205610,-9.970361,-3.102894,-3.460345,1.500782,7.356128,-3.284809,-4.390438,-9.917551,-2.347468,9.684365,-9.729709,-3.030851,1.091467,9.648109,8.494105,5.100317,1.149367,4.687857,-4.296811,-2.193565,-4.686576,9.638006,-7.515594,6.889991,-8.678896,8.645416,-2.897368,9.623281,-5.094532,-3.947022,8.906518,-3.094044,7.396804,-8.289191,-0.343231,3.059132,9.592227,9.408976,-8.064246,-6.638584,-6.915358,-4.985640,-8.469981,-6.437397,-6.793872,-4.929513,-2.204194,3.040901,8.413547,2.136992,-2.091892,-3.373115,0.286197,0.408130,-1.382852,-9.635770,-5.097345,2.098429,4.913344,6.183968,-1.671890,5.656969,-6.320943,2.408499,8.948343,1.167445,0.117502,3.688174,-1.854027,4.976755,8.619837,7.972020,-8.774004,-4.356088,-7.579828,9.247260,4.382492,-1.349343,7.867686,4.468005,-7.620864,8.249377,-9.285179,8.059852,1.386914,3.573651,-9.911830,-8.511906,-9.820256,-1.321891,4.021165,3.268028,6.554654,-2.527662,7.748853,5.279871,5.428855,-4.843996,3.661966,-9.647655,-4.009528,2.799831,-1.063778,5.000014,-2.454835,8.135123,9.410921,2.158439,-3.835895,-4.014262,4.989908,-1.549549,-0.079933,2.908190,-2.707560,-2.102700,1.200526,5.098005,-7.109952,-6.341952,6.284467,-8.024239,5.702265,7.217693,6.690647,3.106817,9.970364,9.326814,-6.224890,9.430979,-4.361682,8.525053,-0.016094,5.027316,1.766358,9.299224,-1.650155,-2.923494,1.680669,8.876905,9.990838,-0.728912,-6.081260,-9.928693,-4.443084,1.542476,5.511411,-0.420704,-2.283267,-3.373602,-5.277996,-2.653163,9.494157,-4.090232,-6.590248,-2.255555,-0.287036,-7.396029,-8.488641,-2.771406,-8.078158,-9.814586,-2.030339,5.869219,-7.648099,2.888935,-9.490096,2.908670,-6.739243,-8.746878,-6.679227,-3.513706,4.346999,3.800330,3.653247,-7.765616,-6.108048,0.138907,-4.326516,2.855475,3.570747,4.513584,-3.845082,7.166857,-3.621812,1.923003,-9.040735,5.180307,-1.782936,-5.276166,-6.245177,2.396014,7.506800,-1.252361,-6.372524,-3.696036,-2.156586,5.270248,3.485954,5.097451,-3.483703,-9.684272,-2.184188,7.125431,-0.415480,-3.199688,-0.704746,8.658295,-3.155190,3.658296,6.644306,-2.577869,9.503075,-3.845250,1.755319,-0.787514,-5.529905,-3.338990,8.190450,5.007430,7.124560,-0.303577,-6.911459,3.692406,3.553146,2.700246,4.234858,-1.592887,6.972787,8.828846,-3.259652,-7.473900,-0.006166,4.331437,-6.112383,2.848809,-3.068186,-4.768243,-7.443526,-8.106613,-2.747143,-3.185404,5.259139,4.833689,-4.891613,4.029659,-7.230085,4.182999,8.236324,-9.571586,-4.440551,7.872157,-1.352706,7.352292,-6.376228,-3.504492,2.637370,-3.088523,-0.241797,4.944685,-7.342694,7.981083,-7.589368,8.858564,-1.879036,-7.704230,3.028497,2.975385,7.738978,-5.017565,-1.972310,-2.555405,-7.943333,7.878646,-9.212300,2.678877,0.589994,-9.856601,9.433326,3.124727,7.044313,-8.665687,-0.327721,-9.082728,-1.658989,4.393656,-1.080406,-1.553454,-8.005758,2.784107,-7.151259,9.459804,8.285730,-7.506457,4.031719,-8.285919,0.363024,1.674925,5.232077,6.907119,6.877035,-6.759092,-2.788887,-2.389874,-6.632709,-1.263598,-3.016410,1.937101,0.051150,-1.211909,0.433288,6.001721,-6.365924,-9.233764,9.811788,1.867091,-7.258101,-0.615118,9.905093,2.868324,-2.237899,-7.345571,9.142529,-6.203907,2.286698,2.815317,-8.863743,1.980557,-2.276763,-6.089844,9.857964,-6.402742,6.742382,6.159101,3.874191,3.845261,-1.091118,-7.603793,5.172287,-7.383305,6.564550,3.922873,-4.396376,-5.100214,3.981606,-7.572430,5.970255,-7.055962,4.793251,0.151486,2.012132,-8.737341,-1.459428,5.993324,-9.794969,3.404107,-4.951125,7.848041,7.019611,7.898102,-6.249827,-5.700582,-2.510165,-2.015694,-3.714849,-5.526228,-7.235311,6.240881,6.185948,-5.308299,-5.444132,3.382389,7.774101,9.873393,0.404725,5.913583,5.875126,4.633381,-2.528646,6.715301,3.646144,-9.084916,5.262692,-0.170944,3.106603,-7.801228,-2.381699,-1.330351,-9.081219,5.734651,-0.140594,3.309595,-2.428718,1.295163,-0.867391,4.318460,-0.314955,-0.926387,8.772268,-0.795386,3.004575,-5.196683,-8.678475,9.511381,-8.607489,-3.881916,7.174850,-0.255507,-7.686220,7.068594,9.913467,-1.317576,-5.515876,3.868268,-5.514928,-2.910103,-5.799037,1.977811,1.679246,2.218403,7.741730,-5.810218,6.028395,-3.136612,-7.717663,-1.736268,-7.266935,9.568966,2.599666,-0.100170,-8.289042,-3.155953,4.695722,-2.568348,-4.960800,5.284964,3.217359,3.372875,-3.992487,5.545362,4.207816,-6.074459,-9.090194,-1.339062,-1.901173,6.404285,-7.815678,3.326213,-2.354646,-8.501497,3.145306,-3.574020,-6.545174,0.617983,-1.599536,9.712936,2.799599,1.032726,-5.800219,4.528705,6.042084,7.400372,-6.345632,6.369442,-7.409863,-8.293809,3.456485,2.543822,-3.309192,6.852217,0.230330,-4.977685,-2.892402,-3.485930,0.601822,-9.057890,2.909949,-9.553087,-1.989429,-9.429607,-1.832248,0.741664,3.051226,6.633206,3.480632,-3.857463,5.444206,4.915588,2.866534,-6.365291,-5.339873,6.927440,0.592956,8.164950,7.162954,-7.453601,-0.076816,-0.370111,-3.429294,9.742072,-4.518792,-3.742770,-2.046545,1.784445,-0.685841,5.279241,-9.621703,-8.704313,-0.750642,-1.986830,7.405715,4.335102,-2.180176,4.729222,0.785952,-1.196545,4.460789,-1.703047,5.429055,9.892201,3.040492,-6.275362,4.623015,9.774794,-9.087955,8.659316,5.754096,-6.196332,-4.460082,-6.741454,-1.359521,1.069046,-5.615472,-1.853547,-4.712004,1.798137,-1.948787,7.263255,-5.188623,3.804856,-4.934164,-0.053236,-1.435849,2.073582,-1.597238,-8.032300,1.885982,-4.371796,4.841655,8.897811,-2.242143,-6.745360,-8.821603,-7.419971,-1.402320,5.821424,4.768293,-3.837868,-2.343022,-2.701472,-8.472792,-6.099329,7.104289,1.169048,6.618400,-6.923977,6.807861,-5.198935,-0.047455,-9.842259,-9.805491,-3.439448,7.292353,4.948766,-7.048925,-4.099514,3.166899,-4.369767,-7.788206,6.871602,-7.391144,6.023168,-0.615908,7.054021,8.873396,-6.120662,-2.222094,5.885669,0.544852,3.256903,-6.017778,-2.913654,-8.377577,-9.347822,-5.208257,-2.316105,0.198755,-9.763905,5.807694,4.313208,2.758404,8.828597,-1.777576,3.934947,0.229508,8.167416,2.750990,4.076730,3.449192,-3.788828,-0.447742,-3.212392,-0.037338,9.811219,2.962120,-5.617798,-4.204254,-2.015255,-9.412827,4.774944,-6.220911,-2.955162,-8.003343,-7.553961,3.803436,-2.285202,5.520628,-2.519676,1.028171,-7.713842,-3.340161,-2.892104,-6.411562,8.066526,-4.082204,-6.207434,2.370018,-3.151171,6.648381,2.375837,5.849078,-4.386953,1.927934,9.097298,-0.537030,8.621297,-4.977766,-9.080551,-0.490444,-5.008263,-6.232010,9.808844,2.749908,5.556149,-0.145453,1.807992,-9.122422,9.415711,-2.011078,5.441135,-3.580673,5.628848,-2.938556,9.801016,6.589286,4.763258,-9.657280,-2.236794,1.018175,-8.527820,-9.921751,1.829847,8.450339,-2.885488,8.326619,5.098811,-0.463987,1.303583,-6.300657,4.675308,-4.942657,0.407440,-1.684953,-8.584046,0.276589,1.882981,-0.892318,5.621814,8.322350,-0.971128,2.862165,-9.740103,-4.812470,-2.645698,-5.655810,6.074367,-7.539085,-6.487290,-0.640475,-2.902225,7.362416,2.306980,1.471452,-6.458395,8.824428,4.672429,-5.132347,-1.605973,5.158729,2.408752,4.372001,-7.391949,6.139349,-0.447568,2.499353,8.111154,-9.517017,7.395319,7.962439,3.923486,-0.375655,9.625258,-8.784769,8.672134,-5.055330,-0.977707,9.312269,-1.796875,4.162361,-1.352877,0.203541,8.562695,4.621714,7.021669,-7.804438,0.193655,-8.986212,4.470361,-3.018033,-6.825890,8.457619,-0.851853,-8.398825,2.768079,3.134382,-7.405094,-2.492196,6.748892,-8.788384,-7.649272,2.757027,7.555594,5.113489,-6.472346,-0.916221,-9.015919,5.449757,-3.852200,1.333087,0.746161,-6.957066,-1.706751,-0.952450,-5.243174,-5.184078,2.879157,-8.714959,7.829098,-8.701407,7.564078,9.881111,-3.470307,9.483019,-6.975834,1.812420,8.803675,5.824750,-6.409637,8.128196,1.088146,5.469045,1.426167,0.603307,3.027898,3.241679,-4.613480,4.498866,5.155188,-7.682085,7.110431,-3.864950,8.987957,-3.461656,4.478490,-9.406499,-2.503143,0.035223,1.921996,-8.499398,-9.690224,6.543134,-9.061847,-1.930357,6.247425,0.025025,-1.123980,-3.095367,-9.561483,8.728280,-0.898705,-3.861814,2.204036,5.953511,-4.479021,-4.947019,5.089569,-5.645744,-5.157578,9.193294,3.716152,-6.232413,-9.447694,4.607387,-3.348664,-2.100211,-2.717719,4.480964,3.625179,-6.582452,-9.211113,-0.778574,-9.526920,-1.210280,9.174928,8.816199,-1.067875,-4.791155,-5.294926,9.343866,-2.318663,5.374542,-7.190212,2.668994,4.838047,-1.356311,-3.990995,9.001875,0.193032,4.963377,-8.752002,8.403360,-4.876899,6.468754,2.320811,0.047847,9.723393,-4.374561,3.310071,6.215311,1.538337,6.716993,-1.426250,-4.516765,-5.084326,7.390496,-2.867782,5.250662,-1.024211,6.043011,-0.289778,-5.692230,-3.450366,7.779567,-6.421968,-1.929286,-3.369793,2.349156,4.725711,-9.026048,4.687241,-8.872530,-1.928854,-9.191776,-3.095675,-4.571512,8.338840,-6.347543,1.739385,5.334012,-0.054449,8.624016,6.065638,-8.014016,4.537265,-1.341403,-6.854396,-7.302512,4.321622,8.626980,7.384853,-8.060877,-6.566516,-7.421472,-0.701699,5.677089,4.093089,-6.957479,0.408704,9.023737,0.918015,3.442861,-5.796957,7.632373,0.300339,-0.292829,-9.393807,0.667974,5.543116,9.666059,3.394228,3.996721,5.531084,-8.141685,-2.947038,1.037376,3.857047,6.498905,4.104555,9.184012,6.109675,9.294600,-6.809955,7.478799,-8.583164,-2.285473,6.433557,-1.821164,8.288193,-8.357908,5.803789,8.708168,-2.007014,-2.598042,1.865452,-7.000616,1.314331,2.036408,-6.946621,-4.391775,6.549563,8.399934,-5.330189,6.413227,-4.978380,7.636717,-5.210610,-9.540778,6.537031,-0.684410,1.114990,1.079862,-9.086851,-8.186629,8.970825,7.192763,3.823764,-3.975159,-0.315338,9.258127,0.759916,-6.449416,-6.404033,-0.882800,-4.254865,-9.403642,-1.742559,-2.166089,-2.714028,1.634975,3.055385,-9.208512,1.733649,-8.883517], dtype = "float32")#candidate|3532|(1820,)|const|float32
call_3531 = func_297_call(relay.reshape(const_3532.astype('float32'), [10, 13, 14]), relay.reshape(const_3532.astype('float32'), [10, 13, 14]), )
call_3533 = func_297_call(relay.reshape(const_3532.astype('float32'), [10, 13, 14]), relay.reshape(const_3532.astype('float32'), [10, 13, 14]), )
output = relay.Tuple([call_3528,call_3531,const_3532,])
output2 = relay.Tuple([call_3529,call_3533,const_3532,])
func_3534 = relay.Function([], output)
mod['func_3534'] = func_3534
mod = relay.transform.InferType()(mod)
output = func_3534()
func_3535 = relay.Function([], output)
mutated_mod['func_3535'] = func_3535
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3377_call = mod.get_global_var('func_3377')
func_3379_call = mutated_mod.get_global_var('func_3379')
call_3545 = func_3377_call()
call_3546 = func_3377_call()
func_3191_call = mod.get_global_var('func_3191')
func_3192_call = mutated_mod.get_global_var('func_3192')
call_3557 = relay.TupleGetItem(func_3191_call(), 0)
call_3558 = relay.TupleGetItem(func_3192_call(), 0)
uop_3562 = relay.sigmoid(call_3545.astype('float32')) # shape=(15, 7, 14)
uop_3564 = relay.sigmoid(call_3546.astype('float32')) # shape=(15, 7, 14)
func_3033_call = mod.get_global_var('func_3033')
func_3037_call = mutated_mod.get_global_var('func_3037')
const_3572 = relay.const([8.276581,-1.603876,-0.839274,0.517876,-4.520751,7.240396,5.371265,7.457586], dtype = "float32")#candidate|3572|(8,)|const|float32
const_3573 = relay.const([6,-10,-8,9,9,-2,-6,10,-10,6,-2,4,5,5,2,10,1,-6,10,6,7,-4,-3,-8,5,-2,-1,10,-4,7,-4,-4,7,-8,9,6,-4,-9,-7,7,1,8,10,9,2,2,2,-2,7,-8,4,2,-6,-4,-10,-4,2,4,-9,-8,6,6,-5,9,-8,10,-10,-7,-5,-9,4,7,-5,-8,1,-5,5,7,2,1,10,10,-6,-8,10,6,-9,9,-2,-8,2,-2,-9,-6,2,8,9,-3,7,-5], dtype = "int16")#candidate|3573|(100,)|const|int16
const_3574 = relay.const([10,-6,1,8,2,5,9,-2,4,2,-7,-10,-7,-2,-5,-5,-6,-5,-10,-6,-3,6,-6,4,-2,2,9,-8,8,-1,10,9,7,-4,-5,9,3,9,-2,9,-1,-3,-10,9,2,2,-5,9,5,9,6,-9,1,-8,2,9,6,-6,-5,-8,-6,-1,3,3,5,-7,9,-10,3,7,5,9,-10,-10,1,-1,10,7,4,-9,-5,-8,2,7,5,-1,2,2,2,-8,-1,9,3,-3,10,-3,-10,-9,8,10,-2,6,10,7,-1,4,-3,3,2,2,10,7], dtype = "int64")#candidate|3574|(112,)|const|int64
call_3571 = relay.TupleGetItem(func_3033_call(relay.reshape(const_3572.astype('float32'), [2, 2, 2]), relay.reshape(const_3573.astype('int16'), [100,]), relay.reshape(const_3574.astype('int64'), [112,]), ), 1)
call_3575 = relay.TupleGetItem(func_3037_call(relay.reshape(const_3572.astype('float32'), [2, 2, 2]), relay.reshape(const_3573.astype('int16'), [100,]), relay.reshape(const_3574.astype('int64'), [112,]), ), 1)
output = relay.Tuple([call_3557,uop_3562,call_3571,const_3572,const_3573,const_3574,])
output2 = relay.Tuple([call_3558,uop_3564,call_3575,const_3572,const_3573,const_3574,])
func_3580 = relay.Function([], output)
mod['func_3580'] = func_3580
mod = relay.transform.InferType()(mod)
mutated_mod['func_3580'] = func_3580
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3580_call = mutated_mod.get_global_var('func_3580')
call_3581 = func_3580_call()
output = call_3581
func_3582 = relay.Function([], output)
mutated_mod['func_3582'] = func_3582
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3633 = relay.var("var_3633", dtype = "int16", shape = (7, 3, 11))#candidate|3633|(7, 3, 11)|var|int16
var_3634 = relay.var("var_3634", dtype = "int16", shape = (7, 3, 11))#candidate|3634|(7, 3, 11)|var|int16
bop_3635 = relay.right_shift(var_3633.astype('int16'), relay.reshape(var_3634.astype('int16'), relay.shape_of(var_3633))) # shape=(7, 3, 11)
output = relay.Tuple([bop_3635,])
output2 = relay.Tuple([bop_3635,])
func_3640 = relay.Function([var_3633,var_3634,], output)
mod['func_3640'] = func_3640
mod = relay.transform.InferType()(mod)
mutated_mod['func_3640'] = func_3640
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3640_call = mutated_mod.get_global_var('func_3640')
var_3642 = relay.var("var_3642", dtype = "int16", shape = (7, 3, 11))#candidate|3642|(7, 3, 11)|var|int16
var_3643 = relay.var("var_3643", dtype = "int16", shape = (7, 3, 11))#candidate|3643|(7, 3, 11)|var|int16
call_3641 = func_3640_call(var_3642,var_3643,)
output = call_3641
func_3644 = relay.Function([var_3642,var_3643,], output)
mutated_mod['func_3644'] = func_3644
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3671 = relay.constdtype = "float64")#candidate|3671|(13, 13, 12)|const|float64
uop_3672 = relay.atanh(const_3671.astype('float64')) # shape=(13, 13, 12)
func_3580_call = mod.get_global_var('func_3580')
func_3582_call = mutated_mod.get_global_var('func_3582')
call_3676 = relay.TupleGetItem(func_3580_call(), 3)
call_3677 = relay.TupleGetItem(func_3582_call(), 3)
func_3191_call = mod.get_global_var('func_3191')
func_3192_call = mutated_mod.get_global_var('func_3192')
call_3678 = relay.TupleGetItem(func_3191_call(), 0)
call_3679 = relay.TupleGetItem(func_3192_call(), 0)
func_1438_call = mod.get_global_var('func_1438')
func_1440_call = mutated_mod.get_global_var('func_1440')
call_3680 = relay.TupleGetItem(func_1438_call(), 0)
call_3681 = relay.TupleGetItem(func_1440_call(), 0)
uop_3686 = relay.log2(const_3671.astype('float64')) # shape=(13, 13, 12)
uop_3690 = relay.tan(uop_3672.astype('float64')) # shape=(13, 13, 12)
func_1693_call = mod.get_global_var('func_1693')
func_1695_call = mutated_mod.get_global_var('func_1695')
call_3703 = relay.TupleGetItem(func_1693_call(), 0)
call_3704 = relay.TupleGetItem(func_1695_call(), 0)
output = relay.Tuple([call_3676,call_3678,call_3680,uop_3686,uop_3690,call_3703,])
output2 = relay.Tuple([call_3677,call_3679,call_3681,uop_3686,uop_3690,call_3704,])
func_3705 = relay.Function([], output)
mod['func_3705'] = func_3705
mod = relay.transform.InferType()(mod)
mutated_mod['func_3705'] = func_3705
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3705_call = mutated_mod.get_global_var('func_3705')
call_3706 = func_3705_call()
output = call_3706
func_3707 = relay.Function([], output)
mutated_mod['func_3707'] = func_3707
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3295_call = mod.get_global_var('func_3295')
func_3296_call = mutated_mod.get_global_var('func_3296')
call_3719 = relay.TupleGetItem(func_3295_call(), 0)
call_3720 = relay.TupleGetItem(func_3296_call(), 0)
output = relay.Tuple([call_3719,])
output2 = relay.Tuple([call_3720,])
func_3721 = relay.Function([], output)
mod['func_3721'] = func_3721
mod = relay.transform.InferType()(mod)
mutated_mod['func_3721'] = func_3721
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3721_call = mutated_mod.get_global_var('func_3721')
call_3722 = func_3721_call()
output = call_3722
func_3723 = relay.Function([], output)
mutated_mod['func_3723'] = func_3723
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1680_call = mod.get_global_var('func_1680')
func_1682_call = mutated_mod.get_global_var('func_1682')
call_3772 = func_1680_call()
call_3773 = func_1680_call()
output = call_3772
output2 = call_3773
func_3803 = relay.Function([], output)
mod['func_3803'] = func_3803
mod = relay.transform.InferType()(mod)
mutated_mod['func_3803'] = func_3803
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3803_call = mutated_mod.get_global_var('func_3803')
call_3804 = func_3803_call()
output = call_3804
func_3805 = relay.Function([], output)
mutated_mod['func_3805'] = func_3805
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1680_call = mod.get_global_var('func_1680')
func_1682_call = mutated_mod.get_global_var('func_1682')
call_3809 = func_1680_call()
call_3810 = func_1680_call()
output = call_3809
output2 = call_3810
func_3814 = relay.Function([], output)
mod['func_3814'] = func_3814
mod = relay.transform.InferType()(mod)
mutated_mod['func_3814'] = func_3814
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3814_call = mutated_mod.get_global_var('func_3814')
call_3815 = func_3814_call()
output = call_3815
func_3816 = relay.Function([], output)
mutated_mod['func_3816'] = func_3816
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2161_call = mod.get_global_var('func_2161')
func_2162_call = mutated_mod.get_global_var('func_2162')
call_3859 = func_2161_call()
call_3860 = func_2161_call()
func_2161_call = mod.get_global_var('func_2161')
func_2162_call = mutated_mod.get_global_var('func_2162')
call_3861 = func_2161_call()
call_3862 = func_2161_call()
uop_3869 = relay.log2(call_3861.astype('float64')) # shape=(15, 7, 14)
uop_3871 = relay.log2(call_3862.astype('float64')) # shape=(15, 7, 14)
func_297_call = mod.get_global_var('func_297')
func_301_call = mutated_mod.get_global_var('func_301')
const_3873 = relay.const([-5.192168,-7.506014,-6.859030,-6.525046,-5.173616,-5.129160,4.260320,3.302810,0.026260,-1.450980,4.329258,-7.137282,-1.584535,1.813066,0.492398,0.040474,-3.735056,-9.158940,-6.428992,-7.860167,4.938791,-2.466398,-9.034682,6.486287,4.273797,-3.433034,3.898545,0.249871,-6.813172,3.861061,3.697016,1.758957,-2.174464,-5.458227,-2.509750,0.737977,4.682128,6.486963,-9.055312,-1.659062,-2.726944,-4.542206,8.920847,0.027654,-6.029592,7.421939,5.049080,8.680714,-2.965869,-3.138383,-0.176784,-3.246042,-3.183296,-5.910229,-9.069900,-7.911709,5.983160,9.785903,-4.835052,-5.144938,3.062317,-1.524083,-3.514309,0.191613,-0.349946,4.056659,1.881297,-8.198688,0.966896,-9.991021,9.114855,-4.625328,1.606620,8.248838,-3.747035,-4.495958,0.992826,3.851294,9.861437,-4.187949,-3.941606,-2.749330,3.121763,6.655712,9.042486,0.579244,-0.182203,2.439584,6.192417,-3.820177,-0.732342,7.673318,8.924313,3.794214,6.016913,-0.936014,-3.963949,-1.874432,-6.980067,-0.683157,1.006254,-6.673327,-1.049092,-4.664211,6.887387,9.999030,8.448163,2.946758,4.272037,0.404638,0.005181,1.918483,5.584887,3.641708,3.241563,0.434757,6.144649,0.566550,-1.393223,4.303024,-4.702737,2.511083,-7.254016,-6.116100,-5.694923,-3.199374,-0.748535,0.552784,9.066458,0.292966,-7.819584,-2.623488,-2.915401,0.650083,5.224835,-2.629510,-5.121445,6.689582,4.865829,-3.995655,-0.411712,2.039342,-4.911867,-6.391475,7.440548,0.721223,-0.569011,-9.066723,3.538761,8.342467,-9.410276,-5.268730,-9.159914,7.520134,4.776447,8.201707,4.728081,-3.737868,5.600139,9.599653,-1.865995,-1.436751,-7.273414,-7.880426,0.916552,-3.728243,1.915026,-9.831059,9.824083,3.114565,3.324280,-4.130349,9.275464,3.288912,1.683071,-7.081800,8.579182,-9.101449,0.625771,0.219453,3.242885,-5.983601,-6.631982,-5.043618,1.067850,-5.127989,-7.277420,7.427188,-5.926306,-6.913257,1.496340,8.696119,6.489850,3.278966,-7.626273,3.828742,-5.130830,7.943511,-3.525310,-6.815149,1.788445,8.883190,1.380597,-4.186192,3.527606,5.467446,8.739851,1.196289,0.837879,4.680859,3.449609,3.209953,-5.447811,-7.390060,-8.539756,-0.304016,6.018167,1.668226,-9.592937,-9.076237,-1.188920,4.918669,1.555265,-6.969260,3.469164,-4.662265,3.287754,-0.630228,-7.751726,-4.133581,-6.851991,1.536474,-5.514339,-1.672350,-8.007242,-8.390534,4.880876,-9.387062,-8.425832,2.135255,-9.345358,-4.168942,5.057386,7.601326,0.838360,-4.657445,8.661915,-0.787570,-4.680988,-3.452712,1.327364,7.507327,-2.985641,8.863566,-0.097837,-2.926837,1.146814,-2.283075,-4.882242,-2.212349,-2.300177,4.502096,-0.590257,9.273020,-7.057435,9.069978,2.548906,-2.869750,-8.350603,-6.050825,-3.701008,3.460436,-7.153379,-7.895570,-3.976877,-1.274703,1.824483,-5.247060,5.790500,-6.679084,8.185712,-6.501460,-4.884246,8.817563,-1.429150,-3.837074,-4.774627,-5.113381,2.808387,4.485730,-8.616303,-0.063712,4.467328,4.090714,5.587578,0.044923,-1.180874,8.991621,-1.465981,3.217969,-1.846107,-1.451382,-7.588988,9.873203,9.091817,2.234742,5.667581,-8.520467,-2.966714,4.310521,9.630865,-2.620094,-4.154360,9.578056,-6.077487,-5.532412,-3.191169,-8.194376,8.287659,-5.951118,-3.241542,-9.725637,-7.040967,3.756271,8.062028,-4.589008,8.433242,-5.227239,-6.460309,-8.844343,-6.506903,2.046461,4.549125,9.233694,-8.954150,-0.368940,1.767152,-6.758439,3.487176,-0.318376,-5.725544,4.681268,-5.714793,-8.220642,4.290206,9.034676,4.416501,-2.415445,-1.287136,4.971312,-9.884595,-4.371243,2.374011,6.880091,-7.541490,0.064318,-7.721266,-5.101363,-3.560259,8.865812,5.925272,3.644670,2.120536,-1.282485,-4.454861,-9.420330,4.082008,-2.620302,5.830006,0.939366,-4.320213,3.969026,5.913666,9.945920,-5.772487,-1.185845,1.927743,-7.637490,3.529937,9.277572,-7.253536,-1.539503,-6.072634,-0.758950,-2.293399,2.623168,-0.175747,1.566870,-7.171509,0.464132,6.550360,-3.930989,-6.769771,-8.457977,8.453469,8.325917,3.974243,6.058234,-2.213501,-2.739948,2.572994,4.286218,-1.452138,-2.419967,2.115092,6.870565,9.501542,-8.705611,-5.400629,4.129074,-0.929066,9.609773,4.313520,0.366406,8.649186,-6.443124,2.576549,-8.263272,3.728558,-1.077754,3.188460,1.944552,0.914838,-6.024488,-5.265228,-5.368616,-7.311238,7.340068,-8.692451,5.176226,-7.437814,8.742440,-6.589505,4.242313,-5.170514,-2.915162,9.315827,-0.610850,1.557043,-7.238497,-4.682968,-9.177127,-3.412986,-5.514865,-4.905109,-9.001821,-4.894685,-8.478600,-3.293436,-6.655680,6.138224,-4.092701,-4.035659,-8.626328,6.650686,-9.942301,9.951542,-1.547209,-9.767203,-5.766173,-0.747644,3.048724,-0.324897,4.488240,9.427179,3.149796,4.078498,9.421011,-8.954152,6.113764,-6.031587,-7.828379,1.033574,9.951682,9.678439,-5.797269,2.167017,-2.652827,-1.060139,-8.890537,9.061311,-3.230626,7.472750,6.246615,4.879163,5.520199,-7.107228,4.655721,-3.036851,0.065171,0.600641,5.240346,5.165873,-6.724837,-8.639921,7.704972,8.756212,-8.479024,1.953567,-7.425229,-7.379174,-6.930577,5.867204,-9.204468,-8.367520,-0.069084,-3.341096,-6.943220,6.535752,8.721070,9.945475,-3.370269,-9.743898,2.580876,-1.821763,6.496148,5.219775,7.238762,5.070876,-1.963557,2.685118,2.695057,8.305821,2.499483,6.977637,-3.389465,9.110069,5.107083,0.392090,8.932686,-6.676001,-5.021323,-2.173529,8.778228,-1.586072,6.315965,-5.654102,8.722465,7.044223,-6.093604,9.421749,4.115128,7.864499,-6.644714,-8.295714,-8.752432,-8.747770,-0.360392,-2.035303,3.452023,-0.298073,-0.799336,0.744686,-4.843908,-8.869857,5.088087,6.237442,-7.081102,1.697868,6.228567,-6.643367,8.191473,-2.058276,9.057346,7.187150,8.707564,-5.784021,-9.711115,9.187454,-3.301424,1.615387,1.073775,-7.676451,-4.026875,1.404775,3.867957,1.675849,-4.091409,2.181068,4.404122,-7.724227,-5.014704,-5.524858,0.278985,8.831639,-2.520112,4.980460,2.372429,8.886156,-1.980877,1.053037,9.920146,-4.325009,-0.315639,9.080784,-9.094105,7.150193,-4.319859,5.850054,6.117502,8.908221,3.296434,-3.870159,8.090137,-5.826848,-1.621381,0.485713,8.429750,2.889700,5.176516,2.715903,8.884404,-7.471307,-4.599296,2.960364,-7.853133,0.770925,8.295604,-9.791592,-7.265254,-4.458410,-1.575762,-7.553311,7.992099,-2.080547,-6.080679,-9.816881,-5.795180,-0.483386,-2.793534,-7.489577,-7.185391,6.921030,7.477224,-0.789425,-1.984579,-9.854196,3.341625,-4.840315,5.756084,6.134995,-4.073690,1.428963,6.597522,-6.350358,2.125634,-9.089723,-5.873941,7.505960,-8.960977,1.628935,2.559657,7.916576,-4.029879,5.668004,-6.705583,-4.228890,4.861279,4.378395,2.543437,-2.821765,9.433983,-2.497850,-7.100769,6.127493,-4.615611,-8.480713,8.028871,-6.959328,3.333291,9.582465,-1.373175,2.951037,2.597921,-9.429814,-7.481053,9.374656,-7.228744,2.052146,7.352651,0.288386,-8.216040,3.015766,8.958522,5.674646,-1.769445,5.776829,-7.455889,-9.766484,4.710626,-0.508053,4.906227,2.368753,-4.561469,5.580416,-6.169346,7.432950,-5.005942,-7.627823,-0.924669,-3.886383,-4.532519,9.808367,-2.378911,-3.238196,4.516670,6.628888,-7.126893,-1.110418,-5.383760,-2.152579,-5.949422,5.997138,8.142473,-3.826833,4.696460,-1.217439,-3.446774,6.157334,1.892002,6.780845,-8.275594,9.158317,9.269416,9.617506,5.268529,-1.035756,7.133685,-4.742267,8.606980,-3.579629,-6.928395,-4.390735,7.476568,8.975873,3.531584,1.937382,-2.887087,-7.464495,-2.108573,3.281270,-1.080807,6.081849,0.785735,-2.414358,-0.407253,8.803072,3.774778,-1.013453,8.479578,5.674116,-0.616338,5.289976,9.682995,-3.518577,3.956681,-9.963733,-9.083268,-2.296374,7.238834,-1.273149,2.552767,-5.319759,-3.442398,0.886305,9.873866,-4.353926,2.224539,-5.631737,-1.526177,-0.266745,-5.769864,2.296103,-3.101418,-0.646833,-1.571333,-5.427969,-4.902050,-9.460400,6.585390,0.397040,-1.425550,-0.106807,2.106820,-1.691711,9.316919,1.956967,9.570220,-2.958509,-0.363669,-4.238619,-4.950646,6.495074,7.364218,3.502306,7.001163,1.863119,-6.408781,-6.760880,-6.188474,6.546594,5.709936,8.257753,7.771748,4.849513,-4.533085,-3.053743,-9.624860,-4.451210,2.030352,-0.546193,-7.295195,-1.921403,4.759663,-5.494624,-2.993611,9.102373,-0.684219,-3.222016,9.629676,-1.146216,2.522493,-2.937871,-1.527951,-3.375720,-1.579206,-1.021266,-8.774386,8.540516,0.515817,-3.158168,-0.691590,-9.221428,-4.351208,-6.923314,-0.078192,-5.636506,-2.605475,0.733364,8.144026,-4.524021,-0.771321,-3.078148,-7.428557,-8.750780,3.372739,5.492753,-2.970043,-3.207600,-9.187903,-7.950901,5.555081,0.953709,2.985762,-6.504937,-9.626909,-9.244383,-7.295747,1.001824,4.672442,-7.333488,-8.727933,-9.457730,7.737198,-2.702942,9.150348,-2.964449,0.071775,-0.523285,-3.104289,5.790292,-5.429824,0.056304,-5.794350,4.973830,-1.316615,-1.907510,8.983253,-0.102180,3.660499,-6.225746,1.957163,-2.406237,-9.654757,-4.100894,8.897917,2.102287,0.452771,-3.072821,-0.200237,7.252492,-2.993404,9.141874,-1.477302,-8.371355,-2.722769,8.989486,-5.380214,-7.062638,-2.284072,8.884239,-1.565636,7.204178,-6.802839,0.194140,6.003667,4.689744,-1.159224,7.059410,-7.961627,7.381743,3.888501,1.584032,-7.779716,-7.676178,-0.908642,-5.377161,0.256577,-9.154198,-4.390124,-0.747666,3.576047,5.584030,-3.459601,-9.352486,-5.226293,-4.739326,-3.371824,8.764190,0.840261,-9.163105,-9.301981,7.717305,-3.758255,3.569980,4.902378,6.920383,2.960230,2.476889,4.809661,8.113005,4.037510,7.266927,6.610004,-6.759525,5.019475,-0.396978,4.645167,7.805062,4.121531,-1.613212,-0.769897,9.646617,-5.375382,2.184576,9.371618,-7.645597,-1.110083,-8.369784,-8.181701,6.382456,5.739461,2.856006,8.299223,0.027604,4.481929,9.020625,6.873313,-1.423465,7.157986,7.159269,-3.802394,0.494772,-8.164282,-3.491637,-9.792170,-6.712672,7.058359,9.546616,-9.978778,0.225929,-5.859021,3.213375,-9.698021,-3.047411,3.082751,-3.205129,9.347529,9.932656,5.945489,-9.143159,1.683314,-8.608328,1.661688,8.393347,-3.900347,6.636438,0.778479,-2.200415,-3.156845,-0.252700,-7.800493,1.449729,-4.199370,4.258387,-1.603670,-0.563572,-4.297152,-0.175999,-9.885472,3.789081,4.240881,4.978118,4.087207,-4.189961,-9.213497,-1.517821,9.452069,-9.281182,-1.383195,6.978912,-9.770254,-0.013894,-8.383818,-5.016421,-1.941805,2.791683,-1.749312,-7.334387,-1.835084,-1.083624,7.376762,-4.072116,-3.357494,8.693785,-6.114674,-1.940781,-2.971609,-6.162678,7.073515,0.685980,-6.409499,8.539495,3.069188,6.548317,-2.423940,4.923889,-7.373995,-0.047748,-0.433120,6.880356,5.945542,9.548590,-7.511969,-3.641946,-7.422208,7.499010,2.019968,-4.137521,-9.687717,-4.356823,3.512898,1.916420,9.771381,-9.859169,8.952464,6.598279,5.997305,-4.921978,-5.515102,-9.033650,-2.758138,6.960276,-8.695743,-2.538200,9.697610,-7.412775,-3.696912,-6.559033,4.763923,-3.510476,-3.111756,3.618729,-5.747800,9.621495,8.067472,-0.634814,0.590554,5.823182,7.351319,9.452306,-8.882680,4.566873,2.048371,1.455228,-2.188254,2.475868,7.176363,9.207500,-4.637354,-4.734256,-0.157064,4.130172,-6.844639,7.783571,-4.349037,4.881157,-5.028311,-6.457217,-9.129757,1.230233,3.281996,-7.841438,8.611739,-4.601985,-3.180761,2.684621,5.762723,0.594733,2.639007,5.447639,0.456127,9.940688,1.559643,2.190009,1.220302,2.032870,7.501625,9.960238,3.240844,-4.742759,-5.331824,-8.877027,-9.971084,7.111882,-1.591756,3.263836,9.205682,-1.649553,-8.173192,5.411545,-0.478838,-9.626668,-1.199085,-1.364747,-3.524062,7.168880,3.517741,-0.538550,7.203805,8.366664,9.892367,8.496613,5.526092,3.125697,3.193517,1.279497,9.365631,9.467433,8.982008,7.837314,-0.387304,-9.657005,-0.606320,8.650263,7.240815,-7.795076,-3.834340,3.986699,1.166968,1.767035,8.895266,-3.643576,1.205817,-7.154703,1.854918,-9.284196,5.527334,9.825980,3.175141,7.413956,-6.377921,4.914462,-7.032602,-5.688066,-4.007482,-4.242331,6.673155,-2.126247,3.422514,7.887676,8.360052,-4.689440,6.616757,-0.834890,6.988267,8.536246,6.298035,-1.740027,5.302326,0.869484,-8.168472,-6.300205,-6.342033,-2.130633,9.901296,1.051922,7.405954,6.066865,9.535769,-2.638555,-2.534587,-1.631441,-5.854408,0.010535,-3.342631,3.681136,-2.960197,-5.570530,5.708918,-0.328968,-1.866904,6.068513,-1.373206,-8.963854,-5.279505,-5.501658,-2.134389,2.113839,0.718517,4.138763,1.865388,-7.371439,-9.634818,1.324704,-2.558352,-3.269761,3.266645,-7.153534,9.176378,8.614477,0.596372,-7.749951,0.894179,9.220606,-0.681101,-2.722832,5.135117,0.208936,6.826462,6.063886,1.314148,-4.795896,3.582943,-9.014603,-0.059739,9.663766,5.861734,4.525899,6.977275,1.591693,2.977394,4.404947,-2.126906,-5.311846,7.791354,4.720395,-1.138520,7.775917,5.691056,-1.039319,-9.822023,1.182422,2.415984,-9.426963,3.319078,-6.114379,0.737147,-0.744542,-4.539903,3.130429,-4.732796,-2.776455,-3.864159,0.155013,1.479141,9.082933,0.397824,7.731775,-8.428477,1.712596,8.905594,-0.669707,7.370221,4.132294,-4.798517,-3.742146,0.572777,4.395362,-8.374849,3.858875,-5.506382,7.467979,-6.577115,-8.349784,-1.913219,-7.753033,9.806980,-5.535932,1.675595,-9.359510,-1.676571,8.590735,-8.313548,-9.415926,1.775478,-5.180890,-8.326463,6.952944,9.202742,1.361078,4.950350,3.925248,3.422261,2.518462,5.306015,-6.085509,-3.656088,-9.953430,-9.985042,-9.183730,-8.624134,5.221395,-4.028713,1.986453,-5.995146,-6.107488,6.251213,-7.484916,9.250347,9.030553,4.170462,5.015183,3.653345,-1.831822,-6.068350,8.630843,-4.790509,3.300629,1.517720,-6.287528,-1.988835,9.745745,-6.737187,-8.884627,-7.625365,0.538250,9.274076,1.017085,-0.159916,-0.254724,-5.725065,2.512085,-5.877038,-6.069650,-0.627411,6.396821,3.592914,-7.442536,-6.967980,7.231280,-3.574936,-3.701327,8.078415,6.169428,-2.974947,-4.906323,3.185857,6.451190,4.089948,-9.555536,-8.865946,-3.398644,-2.963386,7.770808,4.845829,1.224671,1.983740,9.881887,-4.972210,-9.896387,-6.601598,2.011601,2.629053,2.382575,-6.883196,-6.876116,5.030074,-2.977534,9.683933,-2.281956,5.929628,-8.622378,9.604816,2.792328,-4.042801,-8.710870,3.577835,0.128850,-5.154645,6.183723,-3.951826,8.292389,-8.959714,8.854611,-5.867736,-1.430808,-1.956743,-7.498487,-6.437905,6.017785,-4.142446,3.909361,8.095081,-4.328228,0.485298,2.038093,5.396853,4.989200,-2.313267,3.623444,-7.036433,-2.188853,-6.081116,-9.444681,5.286643,-9.685541,-4.140629,3.539038,-9.957510,1.071061,9.127738,5.658757,-3.243611,-1.272855,7.158117,0.473903,8.622379,-4.489755,-2.922774,-6.091851,-9.110597,5.505478,-1.605705,5.192816,-3.106579,-6.936010,0.990378,-3.833257,-9.583752,-4.241946,-2.705996,4.968615,-1.010211,-0.537114,-8.329229,-1.734820,0.444973,5.956796,-0.496001,-7.087857,-8.358792,-5.249811,-7.139254,1.746975,2.844556,-1.834168,4.702962,9.586120,-2.739511,-5.487508,-2.033366,8.423714,7.012792,8.654457,9.207130,-2.605129,-3.000509,7.527453,-4.110118,3.251796,0.756714,8.346343,9.287360,-9.237215,-4.972971,-4.419281,6.649897,-6.462907,4.467708,-1.093206,1.841908,-2.186729,9.764916,-5.477513,-0.230771,4.587726,-6.264736,-7.978249,3.571952,7.637493,8.426605,-5.195471,5.309910,0.897035,-7.155161,-1.865958,8.450254,9.073095,-8.580172,-8.895750,1.852406,-2.944194,-2.646583,9.772695,7.141732,-8.580361,-2.376637,1.432314,1.951258,-1.346095,-0.830047,-9.866574,6.235687,-6.027924,0.751480,-3.737070,-7.278538,-8.854122,3.785653,-4.531507,-9.210525,-5.955285,4.298157,4.803630,-5.612729,-6.862925,-4.051500,-0.161387,-3.043891,6.258891,1.864783,-9.725909,6.206656,7.200067,-6.917340,9.774380,-5.489761,-5.187311,-2.257100,-8.411414,1.993914,4.901595,2.411687,-9.219313,9.539448,-8.692459,2.267379,-9.640604,6.497745,-4.647952,-6.439687,4.791285,8.532985,-3.919503,0.926002,-0.413988,-2.871127,-8.489864,-5.519983,0.567778,-6.653473,-4.233649,8.726998,-4.130677,-7.382939,-8.056392,3.634848,7.892683,3.788178,-1.325647,8.272732,-8.738844,-7.079280,3.430123,4.906130,-3.790222,-4.058631,9.250607,-6.256099,7.663848,-4.269609,8.579856,7.964598,-6.858235,-4.616162,4.401904,-1.212676,8.515681,-5.025151,9.770863,-1.550782,2.463021,-6.935416,-8.294066,6.231939,-7.582737,3.324255,3.258507,-9.138599,-0.168340,-8.583362,-8.746499,4.245297,2.875974,6.959922,9.715992,6.345912,-9.803816,8.139808,-9.010970,-8.234772,4.646708,-8.426006,-0.956809,-1.884033,5.463315,-8.845879,3.465799,-8.069076,0.580593,6.410831,3.491356,-4.785558,5.721105,-5.742459,-9.680225,-1.552597,-9.444089,-9.618036,7.008715,1.368124,5.268437,1.779093,8.487891,4.824563,4.516367,1.106510,4.952158,-8.771744,-3.314069,-9.475592,-6.779317,-7.673847,6.809135,8.084715,4.623058,-8.374350,9.123557,-5.062904,9.214192,1.400151,-8.829098,0.965266,-0.704398,-4.076706,-5.765068,0.543250,8.328897,8.407777,-7.887006,-4.610960,-6.497310,-8.747098,-7.207299,-8.919553,6.520713,-7.960873,7.690209,3.827250,7.505212,-4.635315,7.722846,-1.343147,2.682457,5.655342,6.730609,5.953118,-5.806000,9.680809,-8.599347,-3.257720,6.004078,-3.782112,-2.012513,6.537590,8.735493,8.063361,2.224896,-6.944106,-0.046984,6.269565,0.594972,9.951490,-3.120156,-9.905128,-7.602475,-5.215071,0.335430,-2.657539,6.042234,0.793891,4.069769,3.758369,6.629708,3.764299,4.063541,3.553289,-1.907495,0.365763,8.684634,9.871489,-9.202176,8.469804,-7.447891,-8.574049,9.047254,2.172988,-5.711008,-2.830887,-5.111760,2.292152,-4.577386,-1.235882,8.291195,4.399120,1.089238,8.900011,9.448234,5.407279,-7.592507,5.218916,1.241868,3.690574,7.821188,1.851409,7.223003,5.767802,9.552412,-2.759234,5.219664,6.113479,5.885016,7.569777,-0.058751,-2.972076,-1.456492,-3.924665,-6.784042,7.209379,7.296134,0.886545,-5.032847,-0.258136,-5.571470,-0.188669,9.868177,-3.735892,-5.133379,4.840307,-5.196641,-8.779933,5.337469,5.872196,-6.021039,8.768466,1.191658,-1.903004,8.130874,-0.476487,-2.405341,-5.049152,-8.023980,-9.110472,-4.583483,6.782796,4.572452,5.857463,1.244328,6.946855,2.042469,8.142116,3.880272,-2.147485,7.209687,5.438035,-1.966264,0.178541,-5.268913,0.168951,4.294674,-8.297022,-0.265806,5.776023,-3.894708,6.334026,8.921924,-1.067902,0.324899,8.243260], dtype = "float32")#candidate|3873|(1820,)|const|float32
call_3872 = func_297_call(relay.reshape(const_3873.astype('float32'), [10, 13, 14]), relay.reshape(const_3873.astype('float32'), [10, 13, 14]), )
call_3874 = func_297_call(relay.reshape(const_3873.astype('float32'), [10, 13, 14]), relay.reshape(const_3873.astype('float32'), [10, 13, 14]), )
output = relay.Tuple([call_3859,uop_3869,call_3872,const_3873,])
output2 = relay.Tuple([call_3860,uop_3871,call_3874,const_3873,])
func_3882 = relay.Function([], output)
mod['func_3882'] = func_3882
mod = relay.transform.InferType()(mod)
output = func_3882()
func_3883 = relay.Function([], output)
mutated_mod['func_3883'] = func_3883
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2229_call = mod.get_global_var('func_2229')
func_2230_call = mutated_mod.get_global_var('func_2230')
call_3924 = relay.TupleGetItem(func_2229_call(), 0)
call_3925 = relay.TupleGetItem(func_2230_call(), 0)
output = call_3924
output2 = call_3925
func_3926 = relay.Function([], output)
mod['func_3926'] = func_3926
mod = relay.transform.InferType()(mod)
mutated_mod['func_3926'] = func_3926
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3926_call = mutated_mod.get_global_var('func_3926')
call_3927 = func_3926_call()
output = call_3927
func_3928 = relay.Function([], output)
mutated_mod['func_3928'] = func_3928
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3170_call = mod.get_global_var('func_3170')
func_3171_call = mutated_mod.get_global_var('func_3171')
call_4014 = func_3170_call()
call_4015 = func_3170_call()
func_1951_call = mod.get_global_var('func_1951')
func_1952_call = mutated_mod.get_global_var('func_1952')
call_4066 = relay.TupleGetItem(func_1951_call(), 0)
call_4067 = relay.TupleGetItem(func_1952_call(), 0)
output = relay.Tuple([call_4014,call_4066,])
output2 = relay.Tuple([call_4015,call_4067,])
func_4068 = relay.Function([], output)
mod['func_4068'] = func_4068
mod = relay.transform.InferType()(mod)
mutated_mod['func_4068'] = func_4068
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4068_call = mutated_mod.get_global_var('func_4068')
call_4069 = func_4068_call()
output = call_4069
func_4070 = relay.Function([], output)
mutated_mod['func_4070'] = func_4070
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2229_call = mod.get_global_var('func_2229')
func_2230_call = mutated_mod.get_global_var('func_2230')
call_4090 = relay.TupleGetItem(func_2229_call(), 0)
call_4091 = relay.TupleGetItem(func_2230_call(), 0)
output = relay.Tuple([call_4090,])
output2 = relay.Tuple([call_4091,])
func_4092 = relay.Function([], output)
mod['func_4092'] = func_4092
mod = relay.transform.InferType()(mod)
output = func_4092()
func_4093 = relay.Function([], output)
mutated_mod['func_4093'] = func_4093
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3191_call = mod.get_global_var('func_3191')
func_3192_call = mutated_mod.get_global_var('func_3192')
call_4106 = relay.TupleGetItem(func_3191_call(), 0)
call_4107 = relay.TupleGetItem(func_3192_call(), 0)
func_709_call = mod.get_global_var('func_709')
func_714_call = mutated_mod.get_global_var('func_714')
var_4125 = relay.var("var_4125", dtype = "float32", shape = (80,))#candidate|4125|(80,)|var|float32
var_4126 = relay.var("var_4126", dtype = "int16", shape = (50, 2))#candidate|4126|(50, 2)|var|int16
var_4127 = relay.var("var_4127", dtype = "float32", shape = (1820,))#candidate|4127|(1820,)|var|float32
call_4124 = relay.TupleGetItem(func_709_call(relay.reshape(var_4125.astype('float32'), [16, 1, 5]), relay.reshape(var_4126.astype('int16'), [5, 20]), relay.reshape(var_4127.astype('float32'), [1820, 1]), ), 6)
call_4128 = relay.TupleGetItem(func_714_call(relay.reshape(var_4125.astype('float32'), [16, 1, 5]), relay.reshape(var_4126.astype('int16'), [5, 20]), relay.reshape(var_4127.astype('float32'), [1820, 1]), ), 6)
output = relay.Tuple([call_4106,call_4124,var_4125,var_4126,var_4127,])
output2 = relay.Tuple([call_4107,call_4128,var_4125,var_4126,var_4127,])
func_4130 = relay.Function([var_4125,var_4126,var_4127,], output)
mod['func_4130'] = func_4130
mod = relay.transform.InferType()(mod)
mutated_mod['func_4130'] = func_4130
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4130_call = mutated_mod.get_global_var('func_4130')
var_4132 = relay.var("var_4132", dtype = "float32", shape = (80,))#candidate|4132|(80,)|var|float32
var_4133 = relay.var("var_4133", dtype = "int16", shape = (50, 2))#candidate|4133|(50, 2)|var|int16
var_4134 = relay.var("var_4134", dtype = "float32", shape = (1820,))#candidate|4134|(1820,)|var|float32
call_4131 = func_4130_call(var_4132,var_4133,var_4134,)
output = call_4131
func_4135 = relay.Function([var_4132,var_4133,var_4134,], output)
mutated_mod['func_4135'] = func_4135
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2222_call = mod.get_global_var('func_2222')
func_2224_call = mutated_mod.get_global_var('func_2224')
call_4176 = relay.TupleGetItem(func_2222_call(), 0)
call_4177 = relay.TupleGetItem(func_2224_call(), 0)
func_3803_call = mod.get_global_var('func_3803')
func_3805_call = mutated_mod.get_global_var('func_3805')
call_4178 = func_3803_call()
call_4179 = func_3803_call()
func_3128_call = mod.get_global_var('func_3128')
func_3132_call = mutated_mod.get_global_var('func_3132')
call_4183 = func_3128_call(relay.reshape(call_4178.astype('int32'), [14, 15, 14]), relay.reshape(call_4178.astype('uint16'), [14, 15, 14]), )
call_4184 = func_3128_call(relay.reshape(call_4178.astype('int32'), [14, 15, 14]), relay.reshape(call_4178.astype('uint16'), [14, 15, 14]), )
output = relay.Tuple([call_4176,call_4178,call_4183,])
output2 = relay.Tuple([call_4177,call_4179,call_4184,])
func_4185 = relay.Function([], output)
mod['func_4185'] = func_4185
mod = relay.transform.InferType()(mod)
mutated_mod['func_4185'] = func_4185
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4185_call = mutated_mod.get_global_var('func_4185')
call_4186 = func_4185_call()
output = call_4186
func_4187 = relay.Function([], output)
mutated_mod['func_4187'] = func_4187
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3170_call = mod.get_global_var('func_3170')
func_3171_call = mutated_mod.get_global_var('func_3171')
call_4213 = func_3170_call()
call_4214 = func_3170_call()
func_1313_call = mod.get_global_var('func_1313')
func_1315_call = mutated_mod.get_global_var('func_1315')
call_4223 = func_1313_call()
call_4224 = func_1313_call()
func_1693_call = mod.get_global_var('func_1693')
func_1695_call = mutated_mod.get_global_var('func_1695')
call_4236 = relay.TupleGetItem(func_1693_call(), 0)
call_4237 = relay.TupleGetItem(func_1695_call(), 0)
func_476_call = mod.get_global_var('func_476')
func_481_call = mutated_mod.get_global_var('func_481')
const_4241 = relay.const([-4,-6,-7,-9,-2,6,-8,3,-2,10,-5,-2,4,-1,-6,4,7,4,-10,10,1,1,6,-3,-4,10,3,-4,2,5,-2,-7,10,10,-4,2,-8,-7,7,-1,-2,-10,-4,10,-2,3,-4,10,2,4], dtype = "int16")#candidate|4241|(50,)|const|int16
var_4242 = relay.var("var_4242", dtype = "int16", shape = (100,))#candidate|4242|(100,)|var|int16
const_4243 = relay.const([10,-3,9,-8,8,4,4,8,-10,1,-1,-10,3,-9,1,-7,10,-8,5,-8,5,7,-9,-7,-5,-3,-9,9,8,-9,8,7,-6,-6,2,6,-7,7,7,5,4,10,2,7,9,-8,-2,6,-2,8,4,1,6,-7,4,5,-9,-3,-4,10,6,2,-3,-3,9,-8,5,6,7,-4,-5,-1,6,5,4,-5,3,8,4,-2,-5,7,10,-1,7,8,-8,4,4,-6,-5,9,-8,4,10,-6,6,5,7,3,-3,3,3,-5,-9,5,2,1,-1,-2,3,-6], dtype = "int64")#candidate|4243|(112,)|const|int64
call_4240 = relay.TupleGetItem(func_476_call(relay.reshape(const_4241.astype('int16'), [5, 1, 10]), relay.reshape(var_4242.astype('int16'), [5, 2, 10]), relay.reshape(const_4243.astype('int64'), [112,]), ), 1)
call_4244 = relay.TupleGetItem(func_481_call(relay.reshape(const_4241.astype('int16'), [5, 1, 10]), relay.reshape(var_4242.astype('int16'), [5, 2, 10]), relay.reshape(const_4243.astype('int64'), [112,]), ), 1)
bop_4246 = relay.bitwise_and(call_4223.astype('int16'), relay.reshape(call_4213.astype('int16'), relay.shape_of(call_4223))) # shape=(15, 7, 14)
bop_4249 = relay.bitwise_and(call_4224.astype('int16'), relay.reshape(call_4214.astype('int16'), relay.shape_of(call_4224))) # shape=(15, 7, 14)
func_3640_call = mod.get_global_var('func_3640')
func_3644_call = mutated_mod.get_global_var('func_3644')
const_4251 = relay.const([-7,-6,-8,-10,2,-2,2,-3,6,1,9,-1,8,5,-10,-4,1,-7,-9,-10,1,-5,1,-5,8,-8,10,8,-3,-10,7,9,8,-9,-5,7,2,-8,-1,-1,-1,-6,10,10,6,6,8,1,3,10,-10,3,-8,-4,-6,-8,4,1,-7,-7,3,-4,9,4,7,2,-10,9,8,6,10,4,-5,10,-5,5,-10,-8,6,5,-5,-1,1,-2,-3,4,10,9,-2,9,6,5,3,-9,5,-4,-8,-5,5,8,8,3,-10,5,-9,-9,-8,-1,8,-2,3,-3,-1,9,-8,3,-1,-3,-9,2,5,-3,6,8,3,6,5,6,-8,9,-6,-1,9,9,-4,-5,4,6,3,5,3,1,-1,-4,-4,4,-7,6,-10,-5,-7,5,-10,3,-4,-7,-8,-7,-7,-7,-3,-8,7,-6,10,1,-2,1,9,3,-10,2,-1,8,-7,-9,-7,1,-3,-1,10,2,-8,6,-5,-3,-1,5,-2,-2,-10,-1,9,1,3,-7,-3,5,-2,-1,9,-1,6,6,3,-9,10,9,6,-3,3,-1,1,-8,-6,7,10,8,8,-6,-2,3,6,3,-4,-2,8,-3,-7,9,9], dtype = "int16")#candidate|4251|(231,)|const|int16
call_4250 = relay.TupleGetItem(func_3640_call(relay.reshape(const_4251.astype('int16'), [7, 3, 11]), relay.reshape(const_4251.astype('int16'), [7, 3, 11]), ), 0)
call_4252 = relay.TupleGetItem(func_3644_call(relay.reshape(const_4251.astype('int16'), [7, 3, 11]), relay.reshape(const_4251.astype('int16'), [7, 3, 11]), ), 0)
output = relay.Tuple([call_4236,call_4240,const_4241,var_4242,const_4243,bop_4246,call_4250,const_4251,])
output2 = relay.Tuple([call_4237,call_4244,const_4241,var_4242,const_4243,bop_4249,call_4252,const_4251,])
func_4253 = relay.Function([var_4242,], output)
mod['func_4253'] = func_4253
mod = relay.transform.InferType()(mod)
var_4254 = relay.var("var_4254", dtype = "int16", shape = (100,))#candidate|4254|(100,)|var|int16
output = func_4253(var_4254)
func_4255 = relay.Function([var_4254], output)
mutated_mod['func_4255'] = func_4255
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3295_call = mod.get_global_var('func_3295')
func_3296_call = mutated_mod.get_global_var('func_3296')
call_4259 = relay.TupleGetItem(func_3295_call(), 0)
call_4260 = relay.TupleGetItem(func_3296_call(), 0)
func_2026_call = mod.get_global_var('func_2026')
func_2028_call = mutated_mod.get_global_var('func_2028')
var_4275 = relay.var("var_4275", dtype = "uint32", shape = (1210,))#candidate|4275|(1210,)|var|uint32
call_4274 = relay.TupleGetItem(func_2026_call(relay.reshape(var_4275.astype('uint32'), [605, 2])), 2)
call_4276 = relay.TupleGetItem(func_2028_call(relay.reshape(var_4275.astype('uint32'), [605, 2])), 2)
output = relay.Tuple([call_4259,call_4274,var_4275,])
output2 = relay.Tuple([call_4260,call_4276,var_4275,])
func_4282 = relay.Function([var_4275,], output)
mod['func_4282'] = func_4282
mod = relay.transform.InferType()(mod)
var_4283 = relay.var("var_4283", dtype = "uint32", shape = (1210,))#candidate|4283|(1210,)|var|uint32
output = func_4282(var_4283)
func_4284 = relay.Function([var_4283], output)
mutated_mod['func_4284'] = func_4284
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1680_call = mod.get_global_var('func_1680')
func_1682_call = mutated_mod.get_global_var('func_1682')
call_4295 = func_1680_call()
call_4296 = func_1680_call()
output = call_4295
output2 = call_4296
func_4297 = relay.Function([], output)
mod['func_4297'] = func_4297
mod = relay.transform.InferType()(mod)
mutated_mod['func_4297'] = func_4297
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4297_call = mutated_mod.get_global_var('func_4297')
call_4298 = func_4297_call()
output = call_4298
func_4299 = relay.Function([], output)
mutated_mod['func_4299'] = func_4299
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1680_call = mod.get_global_var('func_1680')
func_1682_call = mutated_mod.get_global_var('func_1682')
call_4303 = func_1680_call()
call_4304 = func_1680_call()
func_3705_call = mod.get_global_var('func_3705')
func_3707_call = mutated_mod.get_global_var('func_3707')
call_4316 = relay.TupleGetItem(func_3705_call(), 0)
call_4317 = relay.TupleGetItem(func_3707_call(), 0)
output = relay.Tuple([call_4303,call_4316,])
output2 = relay.Tuple([call_4304,call_4317,])
func_4318 = relay.Function([], output)
mod['func_4318'] = func_4318
mod = relay.transform.InferType()(mod)
mutated_mod['func_4318'] = func_4318
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4318_call = mutated_mod.get_global_var('func_4318')
call_4319 = func_4318_call()
output = call_4319
func_4320 = relay.Function([], output)
mutated_mod['func_4320'] = func_4320
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1438_call = mod.get_global_var('func_1438')
func_1440_call = mutated_mod.get_global_var('func_1440')
call_4321 = relay.TupleGetItem(func_1438_call(), 0)
call_4322 = relay.TupleGetItem(func_1440_call(), 0)
output = call_4321
output2 = call_4322
func_4323 = relay.Function([], output)
mod['func_4323'] = func_4323
mod = relay.transform.InferType()(mod)
mutated_mod['func_4323'] = func_4323
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4323_call = mutated_mod.get_global_var('func_4323')
call_4324 = func_4323_call()
output = call_4324
func_4325 = relay.Function([], output)
mutated_mod['func_4325'] = func_4325
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3580_call = mod.get_global_var('func_3580')
func_3582_call = mutated_mod.get_global_var('func_3582')
call_4375 = relay.TupleGetItem(func_3580_call(), 4)
call_4376 = relay.TupleGetItem(func_3582_call(), 4)
func_1828_call = mod.get_global_var('func_1828')
func_1830_call = mutated_mod.get_global_var('func_1830')
const_4382 = relay.const([5.368092,-6.109675,-2.243244,3.350755,-6.119999,-1.992969,-2.641335,9.483736,-4.956072,-6.844692,-4.619320,-5.556907,4.601310,8.449448,7.435351,-8.417396,-9.806341,0.914938,-8.769031,5.240166,-5.044215,-1.547538,-2.716016,1.013448,4.350072,4.306362,4.880199,5.098539,-8.811763,3.266585,-8.523855,-8.582084], dtype = "float32")#candidate|4382|(32,)|const|float32
call_4381 = func_1828_call(relay.reshape(const_4382.astype('float32'), [8, 2, 2]))
call_4383 = func_1828_call(relay.reshape(const_4382.astype('float32'), [8, 2, 2]))
output = relay.Tuple([call_4375,call_4381,const_4382,])
output2 = relay.Tuple([call_4376,call_4383,const_4382,])
func_4385 = relay.Function([], output)
mod['func_4385'] = func_4385
mod = relay.transform.InferType()(mod)
output = func_4385()
func_4386 = relay.Function([], output)
mutated_mod['func_4386'] = func_4386
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1337_call = mod.get_global_var('func_1337')
func_1339_call = mutated_mod.get_global_var('func_1339')
call_4395 = func_1337_call()
call_4396 = func_1337_call()
output = relay.Tuple([call_4395,])
output2 = relay.Tuple([call_4396,])
func_4402 = relay.Function([], output)
mod['func_4402'] = func_4402
mod = relay.transform.InferType()(mod)
output = func_4402()
func_4403 = relay.Function([], output)
mutated_mod['func_4403'] = func_4403
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2974_call = mod.get_global_var('func_2974')
func_2976_call = mutated_mod.get_global_var('func_2976')
call_4514 = func_2974_call()
call_4515 = func_2974_call()
func_3442_call = mod.get_global_var('func_3442')
func_3443_call = mutated_mod.get_global_var('func_3443')
call_4529 = relay.TupleGetItem(func_3442_call(), 0)
call_4530 = relay.TupleGetItem(func_3443_call(), 0)
func_3085_call = mod.get_global_var('func_3085')
func_3086_call = mutated_mod.get_global_var('func_3086')
call_4533 = relay.TupleGetItem(func_3085_call(), 1)
call_4534 = relay.TupleGetItem(func_3086_call(), 1)
output = relay.Tuple([call_4514,call_4529,call_4533,])
output2 = relay.Tuple([call_4515,call_4530,call_4534,])
func_4537 = relay.Function([], output)
mod['func_4537'] = func_4537
mod = relay.transform.InferType()(mod)
output = func_4537()
func_4538 = relay.Function([], output)
mutated_mod['func_4538'] = func_4538
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4548 = relay.var("var_4548", dtype = "float64", shape = (5, 4, 14))#candidate|4548|(5, 4, 14)|var|float64
var_4549 = relay.var("var_4549", dtype = "float64", shape = (5, 4, 14))#candidate|4549|(5, 4, 14)|var|float64
bop_4550 = relay.divide(var_4548.astype('float64'), relay.reshape(var_4549.astype('float64'), relay.shape_of(var_4548))) # shape=(5, 4, 14)
func_1913_call = mod.get_global_var('func_1913')
func_1916_call = mutated_mod.get_global_var('func_1916')
const_4561 = relay.const([[8,6,-9,-5,6,-7,5,-3,-10,-10,-4,3,-9,10,-8,1,10,-3,2,-5],[-9,7,8,2,2,-10,-4,8,-4,7,-3,-10,-6,3,-1,6,-3,-4,5,-1],[-10,3,4,7,-2,-1,-1,-9,4,-4,-4,-4,5,10,-8,9,1,-9,-5,-2],[1,3,6,10,8,6,-6,1,-2,1,3,7,-4,-9,-5,8,-6,-9,-7,-2],[-6,-8,-1,-2,-3,3,5,-8,-6,-7,-9,8,-8,-6,7,1,-8,-6,10,-10]], dtype = "int16")#candidate|4561|(5, 20)|const|int16
call_4560 = relay.TupleGetItem(func_1913_call(relay.reshape(const_4561.astype('int16'), [5, 20])), 6)
call_4562 = relay.TupleGetItem(func_1916_call(relay.reshape(const_4561.astype('int16'), [5, 20])), 6)
output = relay.Tuple([bop_4550,call_4560,const_4561,])
output2 = relay.Tuple([bop_4550,call_4562,const_4561,])
func_4567 = relay.Function([var_4548,var_4549,], output)
mod['func_4567'] = func_4567
mod = relay.transform.InferType()(mod)
var_4568 = relay.var("var_4568", dtype = "float64", shape = (5, 4, 14))#candidate|4568|(5, 4, 14)|var|float64
var_4569 = relay.var("var_4569", dtype = "float64", shape = (5, 4, 14))#candidate|4569|(5, 4, 14)|var|float64
output = func_4567(var_4568,var_4569,)
func_4570 = relay.Function([var_4568,var_4569,], output)
mutated_mod['func_4570'] = func_4570
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4092_call = mod.get_global_var('func_4092')
func_4093_call = mutated_mod.get_global_var('func_4093')
call_4581 = relay.TupleGetItem(func_4092_call(), 0)
call_4582 = relay.TupleGetItem(func_4093_call(), 0)
output = call_4581
output2 = call_4582
func_4595 = relay.Function([], output)
mod['func_4595'] = func_4595
mod = relay.transform.InferType()(mod)
mutated_mod['func_4595'] = func_4595
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4595_call = mutated_mod.get_global_var('func_4595')
call_4596 = func_4595_call()
output = call_4596
func_4597 = relay.Function([], output)
mutated_mod['func_4597'] = func_4597
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3205_call = mod.get_global_var('func_3205')
func_3207_call = mutated_mod.get_global_var('func_3207')
call_4642 = func_3205_call()
call_4643 = func_3205_call()
func_3640_call = mod.get_global_var('func_3640')
func_3644_call = mutated_mod.get_global_var('func_3644')
var_4649 = relay.var("var_4649", dtype = "int16", shape = (231,))#candidate|4649|(231,)|var|int16
call_4648 = relay.TupleGetItem(func_3640_call(relay.reshape(var_4649.astype('int16'), [7, 3, 11]), relay.reshape(var_4649.astype('int16'), [7, 3, 11]), ), 0)
call_4650 = relay.TupleGetItem(func_3644_call(relay.reshape(var_4649.astype('int16'), [7, 3, 11]), relay.reshape(var_4649.astype('int16'), [7, 3, 11]), ), 0)
func_3640_call = mod.get_global_var('func_3640')
func_3644_call = mutated_mod.get_global_var('func_3644')
call_4651 = relay.TupleGetItem(func_3640_call(relay.reshape(call_4648.astype('int16'), [7, 3, 11]), relay.reshape(call_4648.astype('int16'), [7, 3, 11]), ), 0)
call_4652 = relay.TupleGetItem(func_3644_call(relay.reshape(call_4648.astype('int16'), [7, 3, 11]), relay.reshape(call_4648.astype('int16'), [7, 3, 11]), ), 0)
uop_4654 = relay.sinh(call_4651.astype('float64')) # shape=(7, 3, 11)
uop_4656 = relay.sinh(call_4652.astype('float64')) # shape=(7, 3, 11)
output = relay.Tuple([call_4642,call_4648,var_4649,uop_4654,])
output2 = relay.Tuple([call_4643,call_4650,var_4649,uop_4656,])
func_4668 = relay.Function([var_4649,], output)
mod['func_4668'] = func_4668
mod = relay.transform.InferType()(mod)
var_4669 = relay.var("var_4669", dtype = "int16", shape = (231,))#candidate|4669|(231,)|var|int16
output = func_4668(var_4669)
func_4670 = relay.Function([var_4669], output)
mutated_mod['func_4670'] = func_4670
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4185_call = mod.get_global_var('func_4185')
func_4187_call = mutated_mod.get_global_var('func_4187')
call_4755 = relay.TupleGetItem(func_4185_call(), 2)
call_4756 = relay.TupleGetItem(func_4187_call(), 2)
output = call_4755
output2 = call_4756
func_4770 = relay.Function([], output)
mod['func_4770'] = func_4770
mod = relay.transform.InferType()(mod)
mutated_mod['func_4770'] = func_4770
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4770_call = mutated_mod.get_global_var('func_4770')
call_4771 = func_4770_call()
output = call_4771
func_4772 = relay.Function([], output)
mutated_mod['func_4772'] = func_4772
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1693_call = mod.get_global_var('func_1693')
func_1695_call = mutated_mod.get_global_var('func_1695')
call_4785 = relay.TupleGetItem(func_1693_call(), 0)
call_4786 = relay.TupleGetItem(func_1695_call(), 0)
output = relay.Tuple([call_4785,])
output2 = relay.Tuple([call_4786,])
func_4796 = relay.Function([], output)
mod['func_4796'] = func_4796
mod = relay.transform.InferType()(mod)
mutated_mod['func_4796'] = func_4796
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4796_call = mutated_mod.get_global_var('func_4796')
call_4797 = func_4796_call()
output = call_4797
func_4798 = relay.Function([], output)
mutated_mod['func_4798'] = func_4798
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1406_call = mod.get_global_var('func_1406')
func_1407_call = mutated_mod.get_global_var('func_1407')
call_4799 = func_1406_call()
call_4800 = func_1406_call()
output = call_4799
output2 = call_4800
func_4814 = relay.Function([], output)
mod['func_4814'] = func_4814
mod = relay.transform.InferType()(mod)
mutated_mod['func_4814'] = func_4814
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4814_call = mutated_mod.get_global_var('func_4814')
call_4815 = func_4814_call()
output = call_4815
func_4816 = relay.Function([], output)
mutated_mod['func_4816'] = func_4816
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3814_call = mod.get_global_var('func_3814')
func_3816_call = mutated_mod.get_global_var('func_3816')
call_4825 = func_3814_call()
call_4826 = func_3814_call()
func_4323_call = mod.get_global_var('func_4323')
func_4325_call = mutated_mod.get_global_var('func_4325')
call_4834 = func_4323_call()
call_4835 = func_4323_call()
var_4842 = relay.var("var_4842", dtype = "int32", shape = (14, 15, 14))#candidate|4842|(14, 15, 14)|var|int32
bop_4843 = relay.divide(call_4825.astype('float32'), relay.reshape(var_4842.astype('float32'), relay.shape_of(call_4825))) # shape=(14, 15, 14)
bop_4846 = relay.divide(call_4826.astype('float32'), relay.reshape(var_4842.astype('float32'), relay.shape_of(call_4826))) # shape=(14, 15, 14)
func_3814_call = mod.get_global_var('func_3814')
func_3816_call = mutated_mod.get_global_var('func_3816')
call_4847 = func_3814_call()
call_4848 = func_3814_call()
output = relay.Tuple([call_4834,bop_4843,call_4847,])
output2 = relay.Tuple([call_4835,bop_4846,call_4848,])
func_4854 = relay.Function([var_4842,], output)
mod['func_4854'] = func_4854
mod = relay.transform.InferType()(mod)
var_4855 = relay.var("var_4855", dtype = "int32", shape = (14, 15, 14))#candidate|4855|(14, 15, 14)|var|int32
output = func_4854(var_4855)
func_4856 = relay.Function([var_4855], output)
mutated_mod['func_4856'] = func_4856
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3705_call = mod.get_global_var('func_3705')
func_3707_call = mutated_mod.get_global_var('func_3707')
call_4870 = relay.TupleGetItem(func_3705_call(), 4)
call_4871 = relay.TupleGetItem(func_3707_call(), 4)
output = relay.Tuple([call_4870,])
output2 = relay.Tuple([call_4871,])
func_4878 = relay.Function([], output)
mod['func_4878'] = func_4878
mod = relay.transform.InferType()(mod)
output = func_4878()
func_4879 = relay.Function([], output)
mutated_mod['func_4879'] = func_4879
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4092_call = mod.get_global_var('func_4092')
func_4093_call = mutated_mod.get_global_var('func_4093')
call_4905 = relay.TupleGetItem(func_4092_call(), 0)
call_4906 = relay.TupleGetItem(func_4093_call(), 0)
func_4385_call = mod.get_global_var('func_4385')
func_4386_call = mutated_mod.get_global_var('func_4386')
call_4922 = relay.TupleGetItem(func_4385_call(), 0)
call_4923 = relay.TupleGetItem(func_4386_call(), 0)
func_3640_call = mod.get_global_var('func_3640')
func_3644_call = mutated_mod.get_global_var('func_3644')
var_4936 = relay.var("var_4936", dtype = "int16", shape = (231,))#candidate|4936|(231,)|var|int16
call_4935 = relay.TupleGetItem(func_3640_call(relay.reshape(var_4936.astype('int16'), [7, 3, 11]), relay.reshape(var_4936.astype('int16'), [7, 3, 11]), ), 0)
call_4937 = relay.TupleGetItem(func_3644_call(relay.reshape(var_4936.astype('int16'), [7, 3, 11]), relay.reshape(var_4936.astype('int16'), [7, 3, 11]), ), 0)
output = relay.Tuple([call_4905,call_4922,call_4935,var_4936,])
output2 = relay.Tuple([call_4906,call_4923,call_4937,var_4936,])
func_4956 = relay.Function([var_4936,], output)
mod['func_4956'] = func_4956
mod = relay.transform.InferType()(mod)
var_4957 = relay.var("var_4957", dtype = "int16", shape = (231,))#candidate|4957|(231,)|var|int16
output = func_4956(var_4957)
func_4958 = relay.Function([var_4957], output)
mutated_mod['func_4958'] = func_4958
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3803_call = mod.get_global_var('func_3803')
func_3805_call = mutated_mod.get_global_var('func_3805')
call_4980 = func_3803_call()
call_4981 = func_3803_call()
uop_4984 = relay.exp(call_4980.astype('float32')) # shape=(14, 15, 14)
uop_4986 = relay.exp(call_4981.astype('float32')) # shape=(14, 15, 14)
bop_4989 = relay.multiply(uop_4984.astype('float64'), relay.reshape(call_4980.astype('float64'), relay.shape_of(uop_4984))) # shape=(14, 15, 14)
bop_4992 = relay.multiply(uop_4986.astype('float64'), relay.reshape(call_4981.astype('float64'), relay.shape_of(uop_4986))) # shape=(14, 15, 14)
uop_5003 = relay.log2(call_4980.astype('float32')) # shape=(14, 15, 14)
uop_5005 = relay.log2(call_4981.astype('float32')) # shape=(14, 15, 14)
func_3057_call = mod.get_global_var('func_3057')
func_3058_call = mutated_mod.get_global_var('func_3058')
call_5011 = func_3057_call()
call_5012 = func_3057_call()
func_2286_call = mod.get_global_var('func_2286')
func_2288_call = mutated_mod.get_global_var('func_2288')
const_5014 = relay.const([1,1,7,6,8,-5,-9,-5,-4,4,-10,-9,6,-4,-7,10,-5,1,9,-9,3,7,10,1,-8,-6,-1,1,-7,6,-4,-1,-7,4,-2,-2,8,9,1,3,-6,10,-6,-5,-7,-6,-7,-3,-3,-10,-1,-2,-2,-6,2,6,10,5,6,10,1,8,5,2,-10,3,-7,-8,-5,-3,6,4,5,4,9,9,-10,-10,8,-2,-8,-8,7,3,-4,6,-8,-8,10,-6,-3,-3,-10,7,8,-6,2,9,-4,1], dtype = "int16")#candidate|5014|(100,)|const|int16
call_5013 = relay.TupleGetItem(func_2286_call(relay.reshape(const_5014.astype('int16'), [100,])), 1)
call_5015 = relay.TupleGetItem(func_2288_call(relay.reshape(const_5014.astype('int16'), [100,])), 1)
output = relay.Tuple([bop_4989,uop_5003,call_5011,call_5013,const_5014,])
output2 = relay.Tuple([bop_4992,uop_5005,call_5012,call_5015,const_5014,])
func_5016 = relay.Function([], output)
mod['func_5016'] = func_5016
mod = relay.transform.InferType()(mod)
mutated_mod['func_5016'] = func_5016
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5016_call = mutated_mod.get_global_var('func_5016')
call_5017 = func_5016_call()
output = call_5017
func_5018 = relay.Function([], output)
mutated_mod['func_5018'] = func_5018
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4796_call = mod.get_global_var('func_4796')
func_4798_call = mutated_mod.get_global_var('func_4798')
call_5028 = relay.TupleGetItem(func_4796_call(), 0)
call_5029 = relay.TupleGetItem(func_4798_call(), 0)
uop_5039 = relay.sin(call_5028.astype('float32')) # shape=(10, 12, 9)
uop_5041 = relay.sin(call_5029.astype('float32')) # shape=(10, 12, 9)
output = relay.Tuple([uop_5039,])
output2 = relay.Tuple([uop_5041,])
func_5045 = relay.Function([], output)
mod['func_5045'] = func_5045
mod = relay.transform.InferType()(mod)
mutated_mod['func_5045'] = func_5045
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5045_call = mutated_mod.get_global_var('func_5045')
call_5046 = func_5045_call()
output = call_5046
func_5047 = relay.Function([], output)
mutated_mod['func_5047'] = func_5047
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1693_call = mod.get_global_var('func_1693')
func_1695_call = mutated_mod.get_global_var('func_1695')
call_5064 = relay.TupleGetItem(func_1693_call(), 0)
call_5065 = relay.TupleGetItem(func_1695_call(), 0)
output = call_5064
output2 = call_5065
func_5066 = relay.Function([], output)
mod['func_5066'] = func_5066
mod = relay.transform.InferType()(mod)
mutated_mod['func_5066'] = func_5066
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5066_call = mutated_mod.get_global_var('func_5066')
call_5067 = func_5066_call()
output = call_5067
func_5068 = relay.Function([], output)
mutated_mod['func_5068'] = func_5068
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4796_call = mod.get_global_var('func_4796')
func_4798_call = mutated_mod.get_global_var('func_4798')
call_5131 = relay.TupleGetItem(func_4796_call(), 0)
call_5132 = relay.TupleGetItem(func_4798_call(), 0)
func_1093_call = mod.get_global_var('func_1093')
func_1101_call = mutated_mod.get_global_var('func_1101')
var_5144 = relay.var("var_5144", dtype = "int16", shape = ())#candidate|5144|()|var|int16
const_5145 = relay.const([1,8,-2,6,2,10,-1,-7,2,-3,9,6,-8,-10,-6,-10,10,-4,-8,-8,4,-2,-1,-1,-10,4,8,1,-4,4,7,-7,-3,9,-1,-4,5,2,-5,-10,7,-6,-5,5,-9,3,3,1], dtype = "int16")#candidate|5145|(48,)|const|int16
const_5146 = relay.const([False,False,False,True,False,False,False,True,False,False,False,True,True,True,False,True,False,False,False,False,False,True,False,True,True,False,True,True,False,True,False,True,False,False,False,False,False,False,True,False,False,True,True,False,False,True,True,True,False,True,True,False,False,True,True,False,True,True,True,False,False,True,True,False,True,True,False,True,False,True,True,False,True,True,False,True,False,True,False,False,True,False,True,True,True,False,True,True,True,True,True,False,False,False,False,False,True,True,True,True,False,True,False,True,False,False,True,False,False,True,True,True,True,False,False,True,False,False,False,False,True,True,False,True,True,False,True,False,True,True,False,False,False,False,True,False,False,False,False,False,False,True,True,True,True,False,False,False,False,False,False,True,True,False,False,False,False,False,True,False,True,True,False,True,True,True,True,True,False,True,False,False,True,True,True,False,True,False,False,True,False,False,False,False,False,True,False,True,True,True,True,False,False,True,True,True,False,False,True,False,True,True,False,False,False,False,True,False,False,True,True,False,False,False,False,False,True,True,True,False,False,False,False,True,True,True,False,False,True,True,False,False,False,True,True,True,True,False,True,True], dtype = "bool")#candidate|5146|(240,)|const|bool
var_5147 = relay.var("var_5147", dtype = "float32", shape = (154,))#candidate|5147|(154,)|var|float32
var_5148 = relay.var("var_5148", dtype = "int16", shape = (50, 2))#candidate|5148|(50, 2)|var|int16
const_5149 = relay.const([-1.929791,-8.776817,-9.181182,-8.368675,-9.860939,0.588933,-2.196408,8.103723,-2.883856,1.041323,-1.627647,-4.129432,-4.504222,1.844492,2.228840,7.436118,-5.015462,-1.832509,-5.510590,8.741771,1.682479,-2.464433,-7.565725,-5.064802,6.909174,-7.194600,2.770983,0.444805,7.914946,3.409891,3.240524,-7.651594,-9.033496,-5.005919,-8.488959,-6.215158,-3.920081,9.046118,-2.338526,-2.871124,-2.250094,0.631711,5.183760,6.538651,-7.795578,2.724892,5.876394,7.203367,-1.188738,-3.496965,4.526367,-6.717021,9.999716,-9.608771,8.309474,-5.403260,7.561273,-8.236415,-1.799827,8.448362,-5.965332,-4.187333,6.600907,-8.210919,1.269726,-5.708184,9.969903,8.183890,-2.318797,-7.636433,-4.094063,2.126483,9.441073,-8.021105,-5.934430,-6.265604,3.381514,-1.170171,-3.758233,-0.674498,-2.094677,-8.185282,-7.596377,-1.659913,0.398800,-2.776329,9.947135,2.890967,9.255235,-5.518820,-9.990020,2.976417,9.717305,-7.245261,-5.120815,-0.619696,7.906218,-8.931648,-3.599512,-8.814855,0.729082,1.771191,3.637299,2.076508,-5.969808,-1.065134,-3.777482,-9.754861,6.019689,1.485884,-1.967607,-4.844380,-4.978686,0.005487,-7.031754,-4.451448,-9.146560,-3.561339,7.013693,4.733109,-8.892670,-9.121678,7.902549,-8.663579,8.166188,-8.747357,6.350153,5.577751,9.563844,-6.476388,-3.511718,7.279695,-9.449678,-4.928343,-7.064952,-0.719964,2.821298,8.206951,4.975500,-9.310829,-1.420940,-7.340727,6.503513,9.252465,-8.599981,-5.454404,8.470414,-5.387779,-3.327827,3.500546,-1.747988,2.399496,-0.097133,-8.563881,-2.725434,-7.905688,2.315537,1.822135,-9.764541,9.263876,-7.014749,0.177309,1.023427,-3.390083,6.589706,-0.897972,9.596811,3.218913,8.011968,0.100131,-6.685950,-9.651628,6.563894,1.222127,-4.174173,-5.555411,-2.124388,-4.002128,4.158276,1.942766,-2.497172,-2.926035,9.536366,4.382894,2.516372,0.567700,-1.710750,4.625451,7.836009,7.429690,3.144423,-3.329635,-2.487233,-6.939509,8.373848,-2.741013,6.405934,4.503217,-8.950132,5.163399,-9.043502,-6.061606,-7.293583,-4.968285,-8.134140,-0.398071,7.542025,2.163333,9.825198,-8.366165,-7.521805,9.674884,0.651007,-5.530447,3.266325,-6.262340,-1.105673,9.499997,-5.992237,-1.781372,5.146736,2.811478,-8.911804,-6.845542,-4.027549,-8.114949,7.873667,-6.182874,6.471980,6.169081,3.635684,-1.910864,-5.373650,-8.275038,1.592634,0.672267,0.086044,9.917777,7.524793,-3.078963,-1.861898,-1.674933,-6.608601,7.169348,-5.716102,-7.120875,-6.890936,4.113272,-1.157628,9.641586,7.653615,4.069887,6.273971,-3.847225,-2.314586,-7.810397,6.508305,2.527671,-4.555827,9.530210,1.088909,-5.827011,-7.886843,-1.358179,3.121790,-7.323986,-9.853857,-7.456916,4.178619,-2.150360,2.775855,-3.542955,-1.680036,-0.392732,-9.082407,2.349448,3.463861,2.454420,6.152757,1.138521,-4.548843,4.782463,3.302935,-4.130230,-1.154978,-1.180017,-9.084565,8.559135,-2.319436,4.886007,4.367732,-5.542848,-1.414636,1.816671,1.248165,-5.546752,-8.173802,-4.602058,9.088384,-0.211845,-3.294059,4.340151,-4.571184,6.511220,-7.787404,3.506983,5.069621,2.111017,-5.687364,5.113571,0.170413,9.221162,-6.639433,7.407631,-9.801099,4.852510,-0.411184,3.953302,3.443962,-5.901431,4.854267,-9.459475,1.294177,-9.567183,-6.219426,-0.444112,-5.795728,3.269468,6.564481,-2.890468,0.007439,-2.397360,3.258518,-3.268210,-3.347888,-0.575430,-9.353106,-0.060309,-1.041281,9.284204,0.723168,-3.131386,4.262991,-6.431741,-4.155113,7.579434,-4.087764,-6.962378,4.206346,0.919731,5.270650,-9.393574,-5.579178,3.571150,7.683897,3.585122,-9.296872,-5.607330,7.606347,8.373786,-5.650512,9.592422,-5.924864,-3.361421,-4.663059,-7.128166,1.863423,-3.642568,3.380816,1.474737,-4.474188,7.128634,-4.500413,0.497475,-7.812838,-5.102087,6.330958,-1.152542,5.057568,4.068920,-8.647879,6.828440,-3.940599,1.305194,2.482426,9.149738,5.940558,0.209143,-3.107544,5.100587,5.612704,1.292149,-8.986179,-7.628358,-1.032776,1.263678,7.377125,6.146140,-8.143069,-8.910461,3.573487,-2.459111,-9.638378,-8.943311,-5.457029,-9.020164,7.845116,-0.045472,5.431504,5.301355,-9.871526,-1.635426,7.148024,-9.896978,-8.031849,-4.872667,-6.889467,-1.123067,-2.744836,1.877019,-8.259164,-1.037692,-4.058278,1.160026,0.018889,8.012825,-1.292384,-7.750368,1.416294,9.779679,0.791325,5.880542,-0.668338,-2.778714,0.025775,2.542314,9.214216,7.109288,-0.023514,7.389115,-1.217048,-5.476835,-0.396197,-7.867377,8.192577,0.848038,5.875486,-5.559800,-9.913576,-5.131010,-2.991480,-7.056296,9.583019,8.988599,-0.769051,-8.885865,-8.920265,1.721040,5.990353,-3.031414,-8.317553,4.760550,2.880430,6.218128,-0.309790,1.970739,-4.672486,1.954972,3.495934,1.621381,3.779681,-4.422576,-9.017601,8.364914,-7.993521,-4.437056,4.268032,-9.367044,3.695998,6.281285,-7.336025,6.127772,-6.402905,-1.055829,3.587893,0.433247,2.326666,-8.455652,-8.496698,4.381149,-1.016265,6.884097,8.470824,-1.986809,1.541842,6.083955,-4.874690,-4.840519,6.629528,-6.199580,1.479991,0.818901,-5.920479,-2.853865,4.811383,1.256304,-0.133534,-5.338761,-3.609980,-1.313803,-3.830675,0.866197,-0.302735,4.376765,9.041913,3.118075,5.653601,4.280549,-9.446351,-8.702660,-1.305134,2.217871,-6.185725,-2.824841,-9.118834,2.998589,-6.410777,6.565672,-0.079686,-9.669045,1.725660,-2.697397,1.277135,-6.250731,-2.014923,3.793303,-5.401124,8.475104,-2.077253,4.973824,-9.671983,0.070702,-4.992634,-5.345032,1.851216,-3.366776,-2.339453,-6.109453,-6.575287,1.094282,7.275464,3.356142,-9.382432,4.858462,2.925072,9.607923,6.969948,-3.619236,-2.069927,-8.594502,-1.571470,-8.642819,-8.214882,-6.437274,7.434333,4.762085,-4.206870,-7.262400,1.657027,-3.997709,-3.383078,-3.220643,-6.478841,2.185408,9.381720,9.886763,-6.325577,-5.003092,-5.912219,-2.114915,0.436595,-8.482078,-3.159452,-1.331643,-0.129177,-0.753612,-0.667600,-0.152680,-1.110482,3.089636,-8.340821,0.660060,-1.058075,2.342584,-2.062873,-3.049291,1.900544,0.896644,7.441195,9.000319,-5.990666,9.503349,-3.998106,-6.918610,4.436166,8.199380,-6.205077,9.852959,-9.960626,7.543049,-8.296645,-4.907881,-4.137748,7.005169,5.633455,-2.430272,6.325665,1.281735,9.533488,-5.393467,5.431547,-2.550499,-9.426505,5.545445,-7.006429,8.567528,-1.115933,-9.716219,5.785978,3.289691,-0.790300,5.885495,7.128096,-3.470671,-8.035137,2.699326,-4.862306,5.204033,7.671409,1.121036,8.566491,-0.610704,6.395016,-8.580613,8.542429,3.524802,6.893907,2.106994,3.428675,-3.923882,-5.643217,-7.004667,5.257570,2.554078,-7.486369,9.081604,2.356558,3.717647,-6.773827,7.900341,4.393569,-3.132679,3.822670,7.391602,5.256993,-5.704210,-6.581074,-5.558310,-7.430584,-1.711204,-8.796788,-8.355820,-6.027280,-5.543945,-2.037453,-3.384215,6.234025,-1.780851,-1.352758,8.935932,4.792142,7.570682,-2.163742,-7.110926,5.691195,3.769073,-8.944459,7.422771,-1.544638,7.619240,8.393651,-6.611252,-7.412448,-5.273041,6.043950,-6.825685,8.958852,-3.815980,6.507192,0.897675,9.241502,0.644006,-9.525454,-6.008059,-7.041901,1.706788,9.152572,-6.587965,6.443827,-2.170683,4.634667,4.214782,-4.398832,-4.013037,-8.628039,-9.294075,6.382923,5.823555,-9.444113,-0.117085,-4.425175,4.360058,1.863232,7.930351,-3.228302,8.480736,9.811139,-3.104776,-5.960782,3.411481,-1.046085,6.790804,4.509403,-5.629238,-9.707037,6.998478,-7.031729,3.985707,-2.775132,-4.874035,-8.509514,-3.914669,7.024458,-5.366147,-9.226073,-2.208660,7.256583,-4.325650,0.810427,1.474345,7.242647,-8.562980,5.550117,3.547393,-5.944676,-7.315999,-0.139319,-3.428063,4.297617,3.709381,2.500741,9.692389,6.618088,7.915706,-2.804125,7.883337,3.529304,4.198813,6.144068,1.814487,3.880049,-9.009869,-2.228797,7.771778,7.639631,2.446176,-4.248316,-8.705707,-5.183783,-8.267906,-2.916130,-6.623148,6.270032,-7.141319,3.600024,8.904393,0.371504,-1.875505,-4.958248,9.095329,-5.980265,-6.772366,4.046003,3.991654,5.214442,-6.974826,3.863896,5.956629,4.705182,9.262278,8.739058,1.196282,-4.852719,1.451792,2.916114,8.669445,4.870896,-9.406267,-6.737630,0.433915,-7.563112,8.323197,-1.855000,-7.847104,-8.777692,-8.014519,-7.734024,-0.736356,2.061493,-1.886838,-5.939078,3.218492,0.011871,4.538207,1.791498,3.937867,-8.774371,0.668307,-3.910140,-3.554478,8.639769,-8.333744,-4.530436,-9.354921,-6.180070,-3.813496,-9.080556,1.485866,-9.745520,9.385170,0.980201,9.984530,5.468332,-0.635563,-1.474411,-1.307218,-1.291596,-0.164806,2.900180,-3.853745,8.478451,3.125796,-3.374732,2.903973,3.346522,-7.646336,-9.086633,-6.461004,-3.110954,1.444640,-5.305995,-6.392430,-1.147601,9.356672,-2.930343,-2.181393,2.127804,0.511994,-7.337278,-0.678973,-0.585862,-4.740947,-6.719256,-9.008098,2.128093,8.033483,-6.468489,-7.554086,-4.622151,-3.692857,-7.094932,-0.472997,-7.552468,6.607539,4.922047,-7.620662,1.710807,-0.917798,-8.742913,-2.602105,-6.104909,3.196354,-1.797991,6.705984,5.624237,3.427664,-1.240162,2.417376,0.743287,7.941271,-9.857060,-0.746774,-7.601468,9.438728,-7.723590,9.020110,-3.434313,1.939054,-9.524203,6.534283,-8.772219,1.446314,0.886072,-8.402369,-7.119104,7.327623,7.079104,-4.940021,-8.273833,-6.031064,6.919185,1.198767,-8.822029,-6.772791,9.287172,6.418116,-4.930426,7.407541,0.715594,6.232622,6.448793,4.450208,-9.104188,0.800118,9.952849,4.103820,0.941405,-5.406169,0.180301,-0.378372,8.890013,0.752409,2.675885,5.595891,-2.498488,-5.687761,9.243910,-6.316931,5.550160,-1.155109,-8.202150,8.772533,-4.896756,1.500275,8.972842,-6.584743,0.207657,-6.063998,-4.165498,-0.761900,-9.152213,4.096296,-6.088230,-2.746309,8.047838,-4.070608,-2.764995,4.117120,-4.175440,8.416793,-1.550891,-4.687034,2.671278,-8.540375,-0.241199,-1.623284,9.834799,-4.271393,7.870887,6.887865,9.474163,-9.506457,-8.413179,-7.524950,0.958783,-0.342779,9.984635,7.753964,2.751714,9.563447,-4.981688,7.254929,3.962374,8.165505,-9.371587,2.992239,9.172444,8.997028,3.402297,-5.206667,3.985039,-0.326702,2.305397,0.201050,-7.419966,-4.798966,-9.301964,-4.812681,6.405494,9.095386,3.292553,8.740180,-9.224455,-5.019749,-0.891239,-8.918204,7.286511,-0.365914,3.452254,0.749130,-4.823023,-1.425008,7.203105,-0.931679,3.802498,-8.486614,-9.127591,7.754635,4.771748,-2.825534,-5.630079,8.604750,-5.164002,-8.427810,-4.847912,6.535580,9.760934,0.098633,-2.402587,4.694547,8.247916,-7.632474,6.630115,1.395853,4.361512,-5.942585,-8.439906,4.140911,7.067597,-4.042681,-3.270928,6.712344,-8.889334,-1.694713,-8.452890,-4.813115,-5.838234,-0.500303,-2.797243,-4.310857,6.774501,2.494996,-8.880965,-5.087088,-0.428242,4.289558,-8.783166,-8.694189,-9.669009,-4.356751,-4.619525,-5.331601,1.479420,-9.233466,-4.415310,-6.026106,5.876493,-3.504190,-5.184336,4.616908,8.630392,5.112420,9.656750,-3.521295,4.394768,3.010706,2.602726,-5.153969,-2.868746,-8.525197,6.259598,-4.458532,-9.219418,-5.593560,-8.318247,2.313016,4.035095,4.322981,-7.635464,-2.679892,-2.655047,2.082315,3.917844,5.864802,-0.875233,4.516003,-2.821169,-1.126385,-9.296621,4.606955,1.391497,-8.468869,-1.065362,4.507790,-2.172810,-1.421436,3.262738,-1.247079,5.847334,-2.565486,-5.706793,7.779437,-7.221245,4.717009,-0.759046,3.325106,-7.279704,-8.753286,8.898861,0.572844,5.692462,5.594474,-5.364997,-9.596902,5.721537,9.394954,-5.933585,-5.509331,4.264938,6.568837,-1.931016,2.937862,-5.445627,7.006092,6.273043,5.917233,-1.237805,-4.757160,2.382656,-1.677969,8.695564,-5.517482,-7.425509,-6.779621,-6.531904,-2.094093,-6.372578,2.729474,5.970132,1.881629,-1.738649,-5.138066,0.248430,2.425142,7.879029,8.828130,6.569057,-0.156980,-8.920257,2.928487,-8.704735,1.595416,2.396975,5.170982,-1.661092,-0.402141,-7.346586,7.767439,1.116751,-3.467568,5.370153,9.376278,1.736882,-2.790847,2.596313,-0.593472,1.647039,-7.379239,2.893376,-3.070269,-5.574575,-2.526123,1.929530,-8.818686,-4.565086,2.355127,-8.453801,-3.984584,-8.296856,7.274861,9.635050,6.914272,-9.045944,0.924939,8.257813,8.120931,-2.168902,-3.160833,1.984468,-3.540526,1.616926,1.291499,9.068456,0.063499,5.370313,9.476317,0.963915,9.380722,-1.041500,8.790978,-9.518199,-2.342857,-1.785809,-7.447633,2.621601,7.293885,-6.163569,1.489271,-3.199155,1.182438,1.449799,-7.237588,5.386645,-6.155209,1.127714,-0.871195,-2.065083,-3.255654,8.713326,9.066233,-1.780173,-3.628980,7.329707,-8.244605,-5.554464,7.011022,-2.470013,-4.864712,-1.881644,7.781444,-8.287570,2.823583,-0.687641,9.201318,9.540464,4.281073,0.642445,-4.667327,6.044371,1.059307,1.549864,7.832204,-3.762507,4.231142,8.502364,-0.257116,-6.721386,-2.538793,-1.387562,5.609785,-7.876786,4.906625,-1.636845,3.928733,-3.284682,9.615628,8.995336,6.653258,6.691796,-5.024572,1.642825,-1.484556,9.300051,6.220496,6.901218,7.556742,8.349524,9.600080,-8.736050,2.033791,4.386750,-9.000290,4.547806,1.872524,9.181094,6.738793,-7.520780,-7.685696,0.718067,8.085438,-5.379399,-9.822836,1.743170,3.665352,-5.628722,-8.082016,-6.976573,4.796756,-0.730856,-8.063380,-1.019262,7.015559,7.240609,-8.971671,3.098375,0.387126,-8.641540,1.799026,-3.387369,-4.727630,9.779105,-6.445625,4.491465,5.170877,-0.308373,8.882551,-6.582858,-7.437351,0.484394,-9.179172,-4.346779,-1.383582,0.780270,1.243752,8.923138,7.448211,-6.745147,-8.923837,7.669054,-4.978737,1.092317,-3.234686,-1.000577,9.598871,-2.617737,-9.651935,-7.126855,6.396563,-8.193277,9.803718,-0.891981,-0.904600,-2.526513,7.984458,-2.546037,-1.303384,1.189180,9.673773,4.592106,1.353624,-8.179235,-2.709852,1.873029,8.329369,-8.244870,9.864365,4.059621,-8.115662,-1.057377,5.663646,8.276845,-3.552627,-0.127008,-0.510585,-3.772964,2.110113,8.083283,1.656317,-3.587610,-6.287132,8.082602,7.603348,9.180085,7.688396,6.853466,-6.664343,-5.703979,-2.719518,3.890081,-9.451486,-5.452363,-1.805299,0.109465,-5.704018,-8.447257,2.245502,-0.037838,-5.035082,-0.031516,6.811676,-9.633137,-5.898009,-6.922646,-0.555638,0.044406,-8.403915,-3.590092,5.647180,-6.956939,3.467688,-6.030744,0.144007,-1.613110,-6.150998,4.223399,-7.692512,4.371938,-9.709225,0.983969,3.571601,9.647295,9.780239,5.245204,7.904089,-2.362055,-5.244742,1.427536,-0.294749,-7.146052,-9.092069,-7.230866,8.458965,0.586711,-9.674154,-1.137821,8.652676,8.617146,-8.322933,8.955873,-4.481830,-1.777117,-9.988366,-6.131726,3.968275,7.338163,-6.933749,2.120759,-3.242089,3.340177,3.899083,-0.730498,8.721387,1.602088,-1.599578,-0.621241,8.645470,-8.229149,-9.076133,-5.713300,5.377097,-8.948732,5.008947,6.215286,-1.167890,-0.036971,1.976692,9.573985,-9.059622,-4.219989,5.806062,-5.158139,7.510686,6.306603,8.932417,-2.920939,3.342873,2.608098,-4.274074,-6.946985,5.100791,-9.573143,-3.097541,-6.691696,1.406057,1.572971,7.655237,3.947605,-0.991291,-9.683106,-0.134907,-4.854663,0.995284,-8.851397,1.324777,9.591850,-7.294342,6.123387,9.163153,5.322406,-9.352343,3.115668,-1.463094,-8.324519,8.892357,3.138667,6.634054,-7.276476,1.784287,-2.010495,2.941969,6.350170,-9.692689,-3.988216,-8.306006,-0.097720,1.225051,-0.798243,-2.419789,-8.063531,-6.418227,6.922825,-3.174321,-2.662832,-6.655101,-0.979964,-8.176666,1.268091,-7.245491,-7.667922,-4.298778,5.705574,8.986247,7.422663,-9.392904,3.179753,2.601158,5.269158,-3.527618,3.542823,-2.563212,2.998269,-1.038340,7.433179,-1.795189,8.214978,-3.902635,-7.448731,0.938524,7.781653,-3.877507,-3.906711,1.709512,9.159864,0.495650,5.788700,-3.534895,4.310344,8.615855,6.733430,-5.957884,-0.769068,4.659120,-3.215683,7.356353,-5.351232,8.987274,3.944039,-0.598425,-2.766674,-3.887047,-0.652848,-8.363341,7.079164,-5.812296,-2.062269,1.385779,-7.088826,8.756624,8.989316,-0.185910,-4.964482,-3.739740,5.788827,-7.735825,1.000730,2.647898,5.603605,7.360558,8.823048,7.348660,-6.703455,5.745700,6.708131,-6.851887,8.361041,9.562409,-8.194955,3.122462,-5.703013,4.890904,-1.690455,7.686268,6.902506,-6.074376,7.822101,-5.426312,1.131361,-8.606030,-3.981509,4.719122,9.721960,-0.630985,5.468977,5.664525,4.673496,2.068685,7.134600,-0.704464,4.768763,-1.203264,-1.336451,-3.726229,-4.419269,0.204683,2.533483,-5.585288,3.102999,-1.841154,-1.448016,-9.103164,9.694478,-9.806706,4.784172,2.917752,7.038652,4.912324,-2.761677,8.018664,-3.207857,5.929548,-9.275120,-2.699674,-6.561392,-4.987107,6.067598,5.677011,-5.903910,7.161665,-2.840241,-7.207929,-3.643374,9.750428,9.433888,9.769624,8.720800,-3.527085,-2.623044,8.864346,9.973119,-5.541260,5.101912,1.720949,0.735661,5.989135,2.138739,5.352373,3.608444,-6.054516,-8.368061,-8.423990,8.075793,8.199429,7.623290,-6.125263,-1.496922,9.142141,-8.334168,2.503408,-9.115504,3.503184,-1.196085,0.880238,-5.663088,-0.460753,-7.522329,-9.400639,3.962876,9.332861,9.059844,-9.725179,-5.695030,2.846244,-8.988772,-8.010252,0.575109,4.342552,4.795031,6.288429,-9.020346,-5.747661,-9.286837,-0.825900,-4.929186,-8.044641,-8.336163,1.039788,1.429015,5.258813,9.663967,-4.152492,-5.285410,-2.986531,-9.018141,2.247710,8.206509,0.877654,-9.038691,-5.853340,-4.493123,-2.439327,4.131454,5.831656,-0.638882,-2.469744,8.536074,-2.094485,-8.327209,1.911528,-1.433379,-3.090470,-1.113978,7.940013,6.435993,3.261504,2.498450,-8.102709,2.440738,4.003179,5.580232,3.772662,-5.435139,-0.714185,-8.621907,2.383145,-9.909876,-0.229040,-1.144560,8.277505,6.205616,4.935834,9.698351,4.687367,2.371296,-7.905194,1.981594,1.744947,-2.074485,-3.158942,7.500919,3.063268,1.018917,-8.097091,-5.366951,-4.935046,-8.562954,-9.772277,6.169274,-0.286254,-5.774261,1.798920,-4.666821,7.240074,-0.684259,6.942367,9.823429,5.517848,8.621884,-4.772880,-2.380164,2.109999,-1.256803,-0.082169,-3.798253,1.035711,8.245502,-1.673333,4.627443,-4.274539,4.137751,-5.784788,7.416718,-6.581853,1.813150,-8.718451,5.780239,6.341607,1.708427,1.119324,-5.168346,-0.745490,-8.077898,-7.118897,-8.449807,7.488887,-3.133896,-7.372255,-8.311104,-4.528715,-2.715358,5.442144,4.543337,7.002199,-3.675894,-1.587946,8.637253,-7.452495,5.100890,-1.342466,-3.246800,0.454446], dtype = "float32")#candidate|5149|(1820,)|const|float32
call_5143 = relay.TupleGetItem(func_1093_call(relay.reshape(var_5144.astype('int16'), []), relay.reshape(const_5145.astype('int16'), [12, 4, 1]), relay.reshape(const_5146.astype('bool'), [12, 4, 5]), relay.reshape(var_5147.astype('float32'), [154,]), relay.reshape(var_5148.astype('int16'), [100,]), relay.reshape(const_5149.astype('float32'), [1820,]), ), 3)
call_5150 = relay.TupleGetItem(func_1101_call(relay.reshape(var_5144.astype('int16'), []), relay.reshape(const_5145.astype('int16'), [12, 4, 1]), relay.reshape(const_5146.astype('bool'), [12, 4, 5]), relay.reshape(var_5147.astype('float32'), [154,]), relay.reshape(var_5148.astype('int16'), [100,]), relay.reshape(const_5149.astype('float32'), [1820,]), ), 3)
func_4537_call = mod.get_global_var('func_4537')
func_4538_call = mutated_mod.get_global_var('func_4538')
call_5151 = relay.TupleGetItem(func_4537_call(), 0)
call_5152 = relay.TupleGetItem(func_4538_call(), 0)
output = relay.Tuple([call_5131,call_5143,var_5144,const_5145,const_5146,var_5147,var_5148,const_5149,call_5151,])
output2 = relay.Tuple([call_5132,call_5150,var_5144,const_5145,const_5146,var_5147,var_5148,const_5149,call_5152,])
func_5160 = relay.Function([var_5144,var_5147,var_5148,], output)
mod['func_5160'] = func_5160
mod = relay.transform.InferType()(mod)
var_5161 = relay.var("var_5161", dtype = "int16", shape = ())#candidate|5161|()|var|int16
var_5162 = relay.var("var_5162", dtype = "float32", shape = (154,))#candidate|5162|(154,)|var|float32
var_5163 = relay.var("var_5163", dtype = "int16", shape = (50, 2))#candidate|5163|(50, 2)|var|int16
output = func_5160(var_5161,var_5162,var_5163,)
func_5164 = relay.Function([var_5161,var_5162,var_5163,], output)
mutated_mod['func_5164'] = func_5164
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4092_call = mod.get_global_var('func_4092')
func_4093_call = mutated_mod.get_global_var('func_4093')
call_5187 = relay.TupleGetItem(func_4092_call(), 0)
call_5188 = relay.TupleGetItem(func_4093_call(), 0)
func_3170_call = mod.get_global_var('func_3170')
func_3171_call = mutated_mod.get_global_var('func_3171')
call_5200 = func_3170_call()
call_5201 = func_3170_call()
output = relay.Tuple([call_5187,call_5200,])
output2 = relay.Tuple([call_5188,call_5201,])
func_5214 = relay.Function([], output)
mod['func_5214'] = func_5214
mod = relay.transform.InferType()(mod)
output = func_5214()
func_5215 = relay.Function([], output)
mutated_mod['func_5215'] = func_5215
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4814_call = mod.get_global_var('func_4814')
func_4816_call = mutated_mod.get_global_var('func_4816')
call_5218 = func_4814_call()
call_5219 = func_4814_call()
func_4796_call = mod.get_global_var('func_4796')
func_4798_call = mutated_mod.get_global_var('func_4798')
call_5244 = relay.TupleGetItem(func_4796_call(), 0)
call_5245 = relay.TupleGetItem(func_4798_call(), 0)
output = relay.Tuple([call_5218,call_5244,])
output2 = relay.Tuple([call_5219,call_5245,])
func_5249 = relay.Function([], output)
mod['func_5249'] = func_5249
mod = relay.transform.InferType()(mod)
mutated_mod['func_5249'] = func_5249
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5249_call = mutated_mod.get_global_var('func_5249')
call_5250 = func_5249_call()
output = call_5250
func_5251 = relay.Function([], output)
mutated_mod['func_5251'] = func_5251
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1951_call = mod.get_global_var('func_1951')
func_1952_call = mutated_mod.get_global_var('func_1952')
call_5284 = relay.TupleGetItem(func_1951_call(), 0)
call_5285 = relay.TupleGetItem(func_1952_call(), 0)
output = call_5284
output2 = call_5285
func_5286 = relay.Function([], output)
mod['func_5286'] = func_5286
mod = relay.transform.InferType()(mod)
output = func_5286()
func_5287 = relay.Function([], output)
mutated_mod['func_5287'] = func_5287
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5323 = relay.const([[[1.050490,-7.798650,1.967976,-9.909768,-1.752301,3.423547],[-6.767906,-7.248930,-9.794030,-6.513614,-5.095163,3.890946],[-2.757229,-3.876734,5.598896,-6.460668,8.880105,-6.756372],[7.038822,4.850476,2.793237,2.737652,2.224284,-0.025886],[-9.238382,2.010418,0.073029,-0.537867,-7.804655,-9.789461],[-0.367670,-6.817123,-1.792458,-8.867835,9.204912,9.003053],[5.437327,0.456796,-6.201989,-2.128942,-5.519757,7.668223],[-2.220222,9.461421,-4.736985,2.279432,-4.949754,-0.287237],[-7.728461,8.927368,-4.354534,7.658046,8.734724,8.933865],[-3.423988,-5.025299,8.971577,-0.728504,5.031847,-0.761198],[-7.487386,-6.756036,-8.484514,1.119711,-9.060096,-4.800902]],[[2.573092,-9.100366,-6.193583,-9.471692,8.385275,3.999710],[-0.016025,8.019165,0.125395,0.936505,7.696468,3.485362],[-0.575015,-0.284734,2.552668,-1.079461,-0.236121,1.781423],[-4.238629,4.417044,-5.639711,-8.513230,4.569629,-5.998764],[-8.978346,-4.528915,9.724751,8.366130,-1.997882,-8.031892],[-7.336979,-0.987153,5.197126,-4.029991,5.836299,-6.007894],[-6.926060,-6.443743,-8.921715,6.866055,-3.935167,-4.993188],[9.677260,4.454383,7.000093,0.081780,-8.132975,6.680348],[5.595097,2.606253,1.970380,-0.762813,8.214108,2.312792],[8.368230,-7.869166,-4.894732,0.456569,-6.464205,3.804949],[4.751848,8.557659,-4.288240,2.794780,-7.730985,-3.690233]],[[-4.392352,-2.450819,7.608732,2.908168,-3.809488,-1.764169],[-5.187307,-9.757968,6.517207,4.863356,-5.020995,-9.151055],[8.672963,-0.786666,0.077952,6.317582,8.044934,5.458814],[-7.659224,1.882244,-8.237247,1.790292,5.741833,4.883189],[-6.100372,3.585471,6.162822,9.948493,-2.595706,3.756232],[8.681153,6.670665,-5.527809,2.445363,-2.567311,9.592642],[2.435539,6.104487,-7.625985,3.815343,8.450765,3.803418],[-8.027027,4.242905,-2.063863,-1.130907,-5.107319,-3.791742],[-8.106906,6.984793,-0.786547,1.765539,0.378515,-0.892473],[7.789754,-7.019231,3.655455,-5.038370,0.265638,-6.661861],[-6.101928,2.121678,-3.495660,6.078044,1.437325,8.612088]],[[2.763196,6.823254,-4.388522,-2.041545,7.419526,-4.980253],[-6.793529,0.962763,3.794120,6.456212,-1.417499,-5.467284],[-6.508997,-6.028832,-1.495465,3.790563,-7.204166,-4.664606],[-9.897336,0.776642,-3.529336,-9.370711,-3.883395,-9.074346],[4.060805,1.059364,-5.257949,4.545966,1.561237,-2.791009],[0.562113,9.723400,6.606654,-9.167954,-2.992750,6.198116],[-4.369541,7.590582,1.497373,-0.020350,8.500907,1.318561],[3.746026,-7.249758,-9.791918,-2.938569,-8.945993,6.763009],[3.757383,5.775824,7.189489,-3.997321,0.055869,-5.136807],[6.399154,5.913618,-8.293890,-6.945177,4.988487,-4.053344],[-1.221686,-5.801211,-3.423237,-5.421754,0.401447,8.892143]],[[-0.594047,-1.358957,0.981889,2.693164,4.550274,4.775016],[1.323776,7.609790,-5.689890,-2.915714,-8.087752,5.827459],[-7.596619,5.935997,-6.667661,2.346375,-9.322561,-2.615270],[-4.670277,8.645251,-1.392186,-2.855820,-7.111568,1.451315],[2.046905,1.836653,-1.724373,2.942348,-6.321692,-3.549517],[5.903503,-6.620339,-4.133912,-0.580447,-5.920019,-6.734016],[-7.166881,-8.524163,3.474741,-5.365121,5.201713,-9.954360],[-0.965511,-4.460543,-3.829556,1.890109,-5.799864,-3.228688],[-1.289677,-3.888854,-3.938063,-3.221165,6.416030,8.037264],[-5.644823,7.612416,-3.340075,5.902685,9.566568,5.299105],[-3.497320,-0.323475,-7.485171,0.821499,6.879219,0.621183]],[[4.924285,-2.881679,-9.777698,9.300191,3.186387,-0.358338],[-2.036317,5.163024,-5.495061,-8.432173,2.906501,2.143320],[9.211692,7.667265,-5.185729,-8.095078,-0.567136,-2.109947],[-5.116415,5.765900,2.146979,9.535912,7.009078,6.699211],[-4.335650,-3.514554,-7.551199,2.021110,9.871842,-7.814716],[-8.055652,4.925930,-7.128610,7.353916,1.944625,-7.148861],[4.323744,-9.552956,-7.249955,-1.728658,0.850444,4.549016],[-5.478197,5.890972,0.635002,-3.764702,-2.774852,-4.726960],[5.341125,-0.012628,-7.620096,4.465723,-2.204998,-1.950806],[-8.536201,3.147864,1.505685,9.250955,-6.167491,6.377390],[8.577148,8.138202,7.434873,-9.911813,5.213731,6.790562]],[[5.341643,6.729020,5.177718,1.788255,-8.566747,5.129735],[7.667353,-4.649420,-3.087780,6.389748,3.419433,9.959658],[-4.512219,1.931600,-4.711891,1.603939,-0.713781,-3.770853],[-0.476113,4.399940,-5.381980,-1.851040,5.325920,5.958771],[9.710167,5.580764,2.228839,1.384572,-1.422709,-4.497613],[-7.609151,9.498832,-0.628623,-8.536038,1.747758,-3.533363],[-3.417091,3.763074,4.937679,5.343635,1.135938,9.891827],[-2.126527,-1.425674,6.361693,6.973293,-1.661512,-9.169261],[-0.171287,2.563727,-5.873334,-9.588622,-6.865426,4.511007],[-3.046814,-4.296584,1.798173,6.705622,3.203257,1.240242],[-8.094438,-8.381534,6.424216,2.483464,0.948442,4.812574]],[[-7.370206,-2.365594,3.735880,-2.775770,3.202490,5.629818],[-4.053047,-2.021295,-3.961588,0.689992,-4.687906,1.552632],[-0.527275,-5.198610,1.550767,-4.389379,7.222998,-9.721356],[-2.350359,-7.679306,-1.378767,-7.044115,-6.876133,-4.097343],[-0.130013,6.697347,1.821659,-5.191964,-3.496464,0.264147],[-5.053282,2.069890,-4.032395,-7.447339,7.055188,-9.082924],[-6.897280,-7.135592,3.810839,6.642346,-1.099229,9.522985],[1.523715,-8.130529,-2.331481,7.513092,2.293122,-4.115874],[5.123819,-8.200693,2.189553,-3.879725,3.076621,2.766233],[0.127466,4.955183,8.209993,7.302855,-8.240292,-7.221195],[8.313614,-6.939480,2.390475,-0.722898,8.840832,2.591260]],[[-6.936182,0.747020,-6.242411,-1.462243,9.588641,-5.061723],[-4.949993,-0.930900,0.420337,4.732383,-8.851118,8.127443],[-5.939142,-2.881055,-9.099583,4.909221,5.816229,-5.939622],[1.927904,4.733601,-8.719196,3.830023,2.510780,-7.801051],[3.898265,5.185033,3.804230,7.829823,9.156870,1.538689],[0.943394,-1.414447,6.837671,-9.875771,4.844318,-9.468831],[6.923712,6.353717,0.832290,7.225191,1.296838,-9.497572],[1.616572,5.573858,-5.806744,-4.855014,0.805297,-8.754887],[-2.571643,9.984722,8.594620,4.471554,1.175116,1.580690],[-7.517753,4.222810,-4.565348,-6.511919,5.805070,-1.506150],[7.379769,4.528060,2.936802,7.634297,6.971879,0.100272]]], dtype = "float64")#candidate|5323|(9, 11, 6)|const|float64
uop_5324 = relay.exp(const_5323.astype('float64')) # shape=(9, 11, 6)
bop_5326 = relay.left_shift(uop_5324.astype('int32'), relay.reshape(const_5323.astype('int32'), relay.shape_of(uop_5324))) # shape=(9, 11, 6)
func_3191_call = mod.get_global_var('func_3191')
func_3192_call = mutated_mod.get_global_var('func_3192')
call_5336 = relay.TupleGetItem(func_3191_call(), 0)
call_5337 = relay.TupleGetItem(func_3192_call(), 0)
output = relay.Tuple([bop_5326,call_5336,])
output2 = relay.Tuple([bop_5326,call_5337,])
func_5342 = relay.Function([], output)
mod['func_5342'] = func_5342
mod = relay.transform.InferType()(mod)
mutated_mod['func_5342'] = func_5342
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5342_call = mutated_mod.get_global_var('func_5342')
call_5343 = func_5342_call()
output = call_5343
func_5344 = relay.Function([], output)
mutated_mod['func_5344'] = func_5344
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5342_call = mod.get_global_var('func_5342')
func_5344_call = mutated_mod.get_global_var('func_5344')
call_5373 = relay.TupleGetItem(func_5342_call(), 1)
call_5374 = relay.TupleGetItem(func_5344_call(), 1)
uop_5377 = relay.sqrt(call_5373.astype('float64')) # shape=(15, 7, 14)
uop_5379 = relay.sqrt(call_5374.astype('float64')) # shape=(15, 7, 14)
output = relay.Tuple([uop_5377,])
output2 = relay.Tuple([uop_5379,])
func_5382 = relay.Function([], output)
mod['func_5382'] = func_5382
mod = relay.transform.InferType()(mod)
output = func_5382()
func_5383 = relay.Function([], output)
mutated_mod['func_5383'] = func_5383
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4092_call = mod.get_global_var('func_4092')
func_4093_call = mutated_mod.get_global_var('func_4093')
call_5418 = relay.TupleGetItem(func_4092_call(), 0)
call_5419 = relay.TupleGetItem(func_4093_call(), 0)
output = call_5418
output2 = call_5419
func_5428 = relay.Function([], output)
mod['func_5428'] = func_5428
mod = relay.transform.InferType()(mod)
mutated_mod['func_5428'] = func_5428
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5428_call = mutated_mod.get_global_var('func_5428')
call_5429 = func_5428_call()
output = call_5429
func_5430 = relay.Function([], output)
mutated_mod['func_5430'] = func_5430
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4185_call = mod.get_global_var('func_4185')
func_4187_call = mutated_mod.get_global_var('func_4187')
call_5481 = relay.TupleGetItem(func_4185_call(), 1)
call_5482 = relay.TupleGetItem(func_4187_call(), 1)
func_5286_call = mod.get_global_var('func_5286')
func_5287_call = mutated_mod.get_global_var('func_5287')
call_5483 = func_5286_call()
call_5484 = func_5286_call()
const_5492 = relay.const([[[False,False,True,True,True,True,True,False,False,True,False,True,False,False],[True,True,True,True,True,True,False,False,True,False,False,False,True,False],[False,False,True,False,False,False,True,False,True,False,False,False,True,False],[True,True,False,True,False,True,False,True,False,False,False,True,False,False],[False,True,False,False,True,True,False,False,True,False,False,True,False,False],[True,False,False,False,True,False,True,False,True,False,True,True,False,True],[False,True,True,False,False,False,False,False,True,True,False,True,True,False]],[[False,True,False,True,True,False,True,True,False,True,True,True,True,False],[False,True,False,False,False,True,True,True,True,True,True,True,False,True],[False,True,True,False,True,True,True,False,True,False,True,True,True,False],[False,False,True,False,False,True,False,False,False,True,True,False,True,False],[True,True,True,True,True,False,True,False,True,False,False,False,False,False],[True,False,False,True,False,True,True,False,False,False,True,True,True,False],[True,False,True,False,False,False,True,True,True,False,True,False,False,True]],[[True,False,True,False,False,False,False,True,True,True,True,False,True,False],[True,True,True,False,True,False,False,True,False,True,False,True,True,True],[False,True,True,True,True,False,True,False,False,True,True,False,True,False],[False,False,True,True,True,False,True,True,False,True,False,False,False,True],[False,True,False,False,False,True,True,True,False,False,True,False,False,False],[False,True,True,False,True,False,True,True,False,False,False,False,True,False],[False,True,True,False,False,False,False,False,True,True,False,True,False,True]],[[False,False,False,False,True,True,True,False,True,False,True,True,True,True],[True,False,False,True,False,True,False,False,True,False,True,True,False,True],[False,False,False,False,False,False,True,True,True,False,True,False,False,True],[True,True,False,False,False,False,False,False,False,False,False,True,False,True],[False,False,False,True,False,True,True,False,True,False,True,True,False,True],[True,True,False,True,False,False,True,False,True,True,False,True,True,True],[False,False,False,True,False,True,False,True,False,True,True,True,False,True]],[[False,False,False,False,True,False,True,False,False,False,False,True,False,True],[False,True,False,True,True,False,False,False,True,False,True,True,True,False],[True,True,True,True,False,True,True,True,True,False,True,False,True,False],[True,True,True,False,False,True,True,False,True,True,False,True,True,True],[False,False,True,True,False,True,True,False,False,False,True,False,True,True],[False,False,True,True,True,False,True,True,True,False,True,False,True,True],[True,False,False,False,True,False,True,True,True,False,True,True,True,False]],[[True,False,True,True,False,False,True,True,False,False,False,True,True,False],[False,False,True,True,True,False,True,False,False,True,True,True,True,False],[False,False,False,False,False,False,True,False,False,False,True,True,True,False],[False,False,False,False,False,True,False,True,True,True,True,True,False,False],[False,False,False,True,False,True,True,True,True,False,True,True,True,True],[False,False,True,True,False,True,True,False,False,True,False,False,True,True],[True,True,False,False,True,False,True,False,True,False,True,False,False,False]],[[False,True,True,False,True,False,True,True,True,True,False,False,False,False],[False,True,True,True,True,True,True,False,False,False,False,True,False,True],[False,True,False,False,False,True,False,False,False,False,True,True,True,True],[True,True,True,True,True,True,True,False,False,False,False,False,True,True],[False,True,False,False,False,False,False,True,False,False,True,False,False,False],[True,True,False,True,True,True,False,False,False,True,False,True,False,False],[True,True,True,True,False,False,True,True,False,True,False,False,False,True]],[[False,False,True,False,False,True,True,True,True,True,True,True,True,True],[False,True,True,False,False,True,True,False,True,True,True,True,False,True],[False,False,False,False,True,False,False,True,True,True,False,False,True,True],[False,False,False,False,True,True,False,True,False,False,True,True,True,True],[True,True,False,True,False,True,True,True,True,False,False,False,True,False],[True,False,True,True,False,True,True,True,False,False,False,True,False,False],[False,True,True,True,False,True,False,False,False,False,True,True,False,True]],[[False,True,True,True,False,False,False,False,True,True,False,False,True,False],[True,True,False,True,False,True,True,True,True,True,True,True,True,True],[True,True,False,True,True,False,False,True,False,False,True,False,True,True],[False,True,False,True,False,False,False,True,False,True,False,True,True,True],[False,False,False,True,False,True,False,True,True,False,False,True,False,True],[True,False,True,True,True,True,False,True,True,True,False,True,False,False],[False,True,False,True,False,False,False,False,True,True,True,False,True,True]],[[False,False,False,True,False,True,True,True,False,True,False,False,False,True],[True,True,True,False,False,True,True,False,False,True,False,True,False,True],[False,False,False,False,False,True,True,False,False,False,True,True,False,True],[True,False,False,False,True,False,False,False,True,True,False,True,True,True],[True,True,False,True,True,True,True,True,False,False,True,False,True,False],[True,True,False,False,True,False,True,True,False,True,True,False,True,True],[True,False,False,False,True,True,True,True,False,False,False,False,True,False]],[[False,False,False,False,True,False,False,False,True,True,True,True,True,False],[True,False,False,True,False,False,True,True,True,True,False,True,True,True],[True,False,True,False,False,True,False,True,False,False,False,True,False,True],[False,True,False,False,True,False,True,True,False,False,False,False,True,True],[True,True,False,True,True,True,True,False,False,True,True,False,True,True],[True,True,True,False,False,True,False,True,True,True,False,True,True,True],[True,True,False,True,False,False,False,True,True,True,True,True,False,True]],[[False,True,False,True,True,True,True,True,False,True,True,True,False,True],[True,False,False,False,True,False,True,True,False,True,False,True,False,False],[True,False,True,True,False,True,False,True,True,False,False,True,True,True],[True,False,True,False,False,True,False,True,False,False,False,False,True,False],[False,False,False,True,False,True,False,False,True,False,True,False,False,False],[True,False,True,False,False,False,False,False,False,True,True,False,True,True],[False,False,True,False,False,False,True,True,True,True,True,False,False,True]],[[False,False,True,False,False,False,False,False,True,True,False,True,False,True],[True,True,False,True,True,False,False,False,False,True,True,True,True,False],[False,True,True,False,True,False,False,False,True,True,False,False,False,True],[True,False,False,False,True,True,True,False,True,True,False,True,True,True],[False,False,False,False,True,True,True,False,False,True,False,True,False,True],[True,False,False,False,False,False,False,True,True,True,False,False,True,False],[True,False,False,False,False,False,False,True,True,True,True,True,True,False]],[[False,True,True,True,False,True,True,False,True,True,False,True,True,False],[True,False,False,True,False,False,True,False,False,True,True,False,True,False],[True,False,False,False,True,True,True,True,False,True,False,False,False,False],[True,True,False,False,True,False,True,True,True,False,True,True,False,False],[True,True,True,True,True,True,True,False,True,False,False,True,True,False],[True,False,False,False,True,False,True,True,False,False,False,True,True,False],[True,True,False,False,False,True,True,True,True,False,True,False,True,True]],[[True,False,True,True,False,True,True,False,True,False,True,False,True,True],[True,False,True,False,True,False,True,True,True,False,False,False,True,True],[False,False,True,False,False,False,True,True,False,False,True,True,True,False],[True,False,True,True,False,True,True,True,True,False,False,False,True,False],[True,False,True,True,False,False,True,False,True,False,True,True,True,False],[False,False,False,False,False,False,True,False,True,False,True,False,True,True],[False,False,True,True,False,False,True,False,True,False,False,False,True,False]]], dtype = "bool")#candidate|5492|(15, 7, 14)|const|bool
bop_5493 = relay.logical_or(call_5483.astype('bool'), relay.reshape(const_5492.astype('bool'), relay.shape_of(call_5483))) # shape=(15, 7, 14)
bop_5496 = relay.logical_or(call_5484.astype('bool'), relay.reshape(const_5492.astype('bool'), relay.shape_of(call_5484))) # shape=(15, 7, 14)
output = relay.Tuple([call_5481,bop_5493,])
output2 = relay.Tuple([call_5482,bop_5496,])
func_5511 = relay.Function([], output)
mod['func_5511'] = func_5511
mod = relay.transform.InferType()(mod)
output = func_5511()
func_5512 = relay.Function([], output)
mutated_mod['func_5512'] = func_5512
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5578 = relay.var("var_5578", dtype = "float64", shape = (15, 2, 13))#candidate|5578|(15, 2, 13)|var|float64
uop_5579 = relay.acos(var_5578.astype('float64')) # shape=(15, 2, 13)
output = uop_5579
output2 = uop_5579
func_5585 = relay.Function([var_5578,], output)
mod['func_5585'] = func_5585
mod = relay.transform.InferType()(mod)
mutated_mod['func_5585'] = func_5585
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5586 = relay.var("var_5586", dtype = "float64", shape = (15, 2, 13))#candidate|5586|(15, 2, 13)|var|float64
func_5585_call = mutated_mod.get_global_var('func_5585')
call_5587 = func_5585_call(var_5586)
output = call_5587
func_5588 = relay.Function([var_5586], output)
mutated_mod['func_5588'] = func_5588
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4318_call = mod.get_global_var('func_4318')
func_4320_call = mutated_mod.get_global_var('func_4320')
call_5590 = relay.TupleGetItem(func_4318_call(), 0)
call_5591 = relay.TupleGetItem(func_4320_call(), 0)
var_5596 = relay.var("var_5596", dtype = "int32", shape = (14, 15, 14))#candidate|5596|(14, 15, 14)|var|int32
bop_5597 = relay.subtract(call_5590.astype('uint8'), relay.reshape(var_5596.astype('uint8'), relay.shape_of(call_5590))) # shape=(14, 15, 14)
bop_5600 = relay.subtract(call_5591.astype('uint8'), relay.reshape(var_5596.astype('uint8'), relay.shape_of(call_5591))) # shape=(14, 15, 14)
func_3526_call = mod.get_global_var('func_3526')
func_3527_call = mutated_mod.get_global_var('func_3527')
call_5613 = func_3526_call()
call_5614 = func_3526_call()
func_3882_call = mod.get_global_var('func_3882')
func_3883_call = mutated_mod.get_global_var('func_3883')
call_5616 = relay.TupleGetItem(func_3882_call(), 2)
call_5617 = relay.TupleGetItem(func_3883_call(), 2)
output = relay.Tuple([bop_5597,call_5613,call_5616,])
output2 = relay.Tuple([bop_5600,call_5614,call_5617,])
func_5638 = relay.Function([var_5596,], output)
mod['func_5638'] = func_5638
mod = relay.transform.InferType()(mod)
var_5639 = relay.var("var_5639", dtype = "int32", shape = (14, 15, 14))#candidate|5639|(14, 15, 14)|var|int32
output = func_5638(var_5639)
func_5640 = relay.Function([var_5639], output)
mutated_mod['func_5640'] = func_5640
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2878_call = mod.get_global_var('func_2878')
func_2879_call = mutated_mod.get_global_var('func_2879')
call_5674 = relay.TupleGetItem(func_2878_call(), 0)
call_5675 = relay.TupleGetItem(func_2879_call(), 0)
output = call_5674
output2 = call_5675
func_5691 = relay.Function([], output)
mod['func_5691'] = func_5691
mod = relay.transform.InferType()(mod)
output = func_5691()
func_5692 = relay.Function([], output)
mutated_mod['func_5692'] = func_5692
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5735 = relay.var("var_5735", dtype = "float32", shape = (2, 4, 14))#candidate|5735|(2, 4, 14)|var|float32
uop_5736 = relay.asinh(var_5735.astype('float32')) # shape=(2, 4, 14)
func_3085_call = mod.get_global_var('func_3085')
func_3086_call = mutated_mod.get_global_var('func_3086')
call_5742 = relay.TupleGetItem(func_3085_call(), 0)
call_5743 = relay.TupleGetItem(func_3086_call(), 0)
func_4878_call = mod.get_global_var('func_4878')
func_4879_call = mutated_mod.get_global_var('func_4879')
call_5748 = relay.TupleGetItem(func_4878_call(), 0)
call_5749 = relay.TupleGetItem(func_4879_call(), 0)
output = relay.Tuple([uop_5736,call_5742,call_5748,])
output2 = relay.Tuple([uop_5736,call_5743,call_5749,])
func_5756 = relay.Function([var_5735,], output)
mod['func_5756'] = func_5756
mod = relay.transform.InferType()(mod)
var_5757 = relay.var("var_5757", dtype = "float32", shape = (2, 4, 14))#candidate|5757|(2, 4, 14)|var|float32
output = func_5756(var_5757)
func_5758 = relay.Function([var_5757], output)
mutated_mod['func_5758'] = func_5758
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5772 = relay.var("var_5772", dtype = "bool", shape = (8, 13, 14))#candidate|5772|(8, 13, 14)|var|bool
var_5773 = relay.var("var_5773", dtype = "bool", shape = (8, 13, 14))#candidate|5773|(8, 13, 14)|var|bool
bop_5774 = relay.logical_or(var_5772.astype('bool'), relay.reshape(var_5773.astype('bool'), relay.shape_of(var_5772))) # shape=(8, 13, 14)
uop_5778 = relay.erf(var_5772.astype('float32')) # shape=(8, 13, 14)
output = relay.Tuple([bop_5774,uop_5778,])
output2 = relay.Tuple([bop_5774,uop_5778,])
func_5789 = relay.Function([var_5772,var_5773,], output)
mod['func_5789'] = func_5789
mod = relay.transform.InferType()(mod)
var_5790 = relay.var("var_5790", dtype = "bool", shape = (8, 13, 14))#candidate|5790|(8, 13, 14)|var|bool
var_5791 = relay.var("var_5791", dtype = "bool", shape = (8, 13, 14))#candidate|5791|(8, 13, 14)|var|bool
output = func_5789(var_5790,var_5791,)
func_5792 = relay.Function([var_5790,var_5791,], output)
mutated_mod['func_5792'] = func_5792
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1680_call = mod.get_global_var('func_1680')
func_1682_call = mutated_mod.get_global_var('func_1682')
call_5816 = func_1680_call()
call_5817 = func_1680_call()
output = relay.Tuple([call_5816,])
output2 = relay.Tuple([call_5817,])
func_5819 = relay.Function([], output)
mod['func_5819'] = func_5819
mod = relay.transform.InferType()(mod)
mutated_mod['func_5819'] = func_5819
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5819_call = mutated_mod.get_global_var('func_5819')
call_5820 = func_5819_call()
output = call_5820
func_5821 = relay.Function([], output)
mutated_mod['func_5821'] = func_5821
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3803_call = mod.get_global_var('func_3803')
func_3805_call = mutated_mod.get_global_var('func_3805')
call_5841 = func_3803_call()
call_5842 = func_3803_call()
output = relay.Tuple([call_5841,])
output2 = relay.Tuple([call_5842,])
func_5852 = relay.Function([], output)
mod['func_5852'] = func_5852
mod = relay.transform.InferType()(mod)
output = func_5852()
func_5853 = relay.Function([], output)
mutated_mod['func_5853'] = func_5853
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5066_call = mod.get_global_var('func_5066')
func_5068_call = mutated_mod.get_global_var('func_5068')
call_5890 = func_5066_call()
call_5891 = func_5066_call()
output = relay.Tuple([call_5890,])
output2 = relay.Tuple([call_5891,])
func_5896 = relay.Function([], output)
mod['func_5896'] = func_5896
mod = relay.transform.InferType()(mod)
output = func_5896()
func_5897 = relay.Function([], output)
mutated_mod['func_5897'] = func_5897
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4323_call = mod.get_global_var('func_4323')
func_4325_call = mutated_mod.get_global_var('func_4325')
call_5907 = func_4323_call()
call_5908 = func_4323_call()
output = relay.Tuple([call_5907,])
output2 = relay.Tuple([call_5908,])
func_5930 = relay.Function([], output)
mod['func_5930'] = func_5930
mod = relay.transform.InferType()(mod)
output = func_5930()
func_5931 = relay.Function([], output)
mutated_mod['func_5931'] = func_5931
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4385_call = mod.get_global_var('func_4385')
func_4386_call = mutated_mod.get_global_var('func_4386')
call_5961 = relay.TupleGetItem(func_4385_call(), 0)
call_5962 = relay.TupleGetItem(func_4386_call(), 0)
uop_5963 = relay.sinh(call_5961.astype('float64')) # shape=(100,)
uop_5965 = relay.sinh(call_5962.astype('float64')) # shape=(100,)
func_4130_call = mod.get_global_var('func_4130')
func_4135_call = mutated_mod.get_global_var('func_4135')
const_5992 = relay.const([4.246818,-0.250131,-2.996363,7.357430,-9.782104,-2.861830,-5.789196,-5.338154,-0.442812,-5.482177,8.367986,4.326194,7.071587,9.864223,-2.091571,5.535772,-3.916090,-6.742149,6.771679,-6.086528,-3.111318,6.935037,-8.718887,-9.643505,-5.775033,7.933705,4.769522,6.097123,-5.079139,-1.070184,-3.247595,-8.775988,5.873247,9.096566,6.093491,7.953131,-6.792663,-3.243594,-4.779581,4.385829,3.341993,-2.982736,0.391825,-4.108646,-5.028234,-2.315288,-6.258702,-6.099079,2.813279,-6.956148,9.317764,-1.567303,3.936089,-4.246573,-5.487352,-7.269296,-4.880045,-0.002648,-2.946987,1.777387,1.258310,5.421163,7.644035,-1.818800,-8.919825,6.921952,-4.713971,9.666009,-6.397207,5.563321,-3.633431,8.498320,-2.615789,-0.405930,-1.196682,-2.820445,-2.959986,9.160319,5.122073,-2.015559], dtype = "float32")#candidate|5992|(80,)|const|float32
const_5993 = relay.const([[-4.250840,5.610643,6.419783,4.013602,-7.093013,-4.332679,5.041214,9.041582,7.226890,0.908011,-7.634191,-9.210557,3.366535,1.261198,-6.569940,0.062928,1.036013,5.002210,5.364629,-1.151963,2.633810,-6.990533,7.136660,-7.794150,-3.892757,7.616222,4.042361,0.139707,9.985745,-6.341256,9.559863,-8.944334,-0.538548,3.427458,-4.410320,-9.516924,7.406653,3.881035,-1.168824,9.052961,9.983084,1.032596,-3.796112,-9.815672,6.519083,5.933816,-5.457891,7.057605,-3.989110,-4.340642,-9.113649,-0.148063,6.075353,0.140162,3.395821,-9.604076,5.968487,6.388247,-8.310634,-0.111194,5.274319,-9.094448,9.193284,-6.853945,2.784261,8.842925,1.567662,8.564846,3.697013,-2.658690,7.477125,2.769847,-5.376869,-6.890289,-3.254808,-5.303260,-0.352681,9.584543,-1.376079,6.139065,-5.911017,-7.947896,-0.070132,-3.916328,-5.460379,-8.197936,9.220824,-0.740397,0.237636,9.841646,1.715846,6.100643,-2.889089,-6.224064,-6.611816,-1.486988,-9.118482,2.635017,-3.197649,-3.340388,-7.762840,-5.914635,-7.598096,-5.819632,5.494204,-3.636169,5.971228,3.774633,-3.345008,6.739993,0.929686,-5.142516,-4.299441,7.208214,8.912247,4.907920,-1.455878,-5.831050,-2.856350,-0.431670,-6.530585,1.996163,-7.590667,9.929611,-2.937465,-1.962327,7.636849,6.519928,-7.529921,-6.503586,-8.195220,5.116510,-4.290251,7.314140,-1.840592,-5.945628,-7.096905,9.764054,-9.708058,-9.908738,5.347806,0.572896,3.983136,-9.587027,1.142796,1.818577,-1.515896,-3.214738,-9.326281,4.385839,-6.719535,1.527283,5.244547,4.273741,-5.210686,-9.383010,-2.271997,-8.414726,-4.808802,6.105505,9.062868,8.355714,-0.702223,-7.332295,-7.179771,9.216301,-5.253437,7.832059,0.271126,1.038924,-5.298289,6.718278,8.600731,-9.186298,-1.502425,6.656706,2.345964,7.720993,1.297881,-0.484791,-8.350600,-2.447418,0.501240,-9.085582,-8.125756,-5.031509,-0.201904,-5.429770,5.827691,0.880969,-0.360600,8.496679,-0.727464,2.572678,5.606285,4.934539,-2.862900,-6.292840,7.842989,-6.173677,-1.645507,7.242090,7.595531,2.498797,-0.425920,-7.749845,3.761024,-9.979976,5.527645,6.577005,-4.524213,-9.436029,-6.664494,-7.599000,0.238648,-8.118748,0.719975,-1.809105,2.223635,1.443057,6.282810,-9.179697,1.818077,-2.518328,5.064183,8.486807,-3.718559,-9.446818,-6.705457,-8.861609,7.416119,-5.132029,-4.493986,5.671949,-7.751659,-4.087480,5.670586,-3.307277,5.884426,0.241511,4.370691,-6.987176,-4.183262,-9.283483,2.397893,-2.262936,4.272714,3.729114,-2.020716,2.243583,7.873712,-6.400663,8.118135,-8.619491,5.202241,2.387323,-3.492367,-5.755948,-3.107775,-3.635956],[9.478913,-8.372531,9.419297,8.430749,0.213301,-6.133356,-7.261822,8.733650,4.156043,-0.079030,1.447552,5.667605,-7.690447,-5.639660,3.296180,-1.651599,9.847730,4.498354,1.458469,-3.748828,-2.246533,1.460232,0.983342,-5.258892,-6.665179,4.325908,-5.334026,-8.355469,-8.101629,6.501029,1.627777,5.863996,-1.998604,1.655595,3.198331,-3.076495,-2.937762,-5.285915,-1.210093,-3.191107,8.063387,-2.191343,5.690423,-9.443005,9.165112,7.923746,-7.260173,-0.462836,8.905183,-7.749401,7.410143,-1.576688,-6.452613,-6.903119,4.778745,-2.207009,-6.818222,-1.888828,4.065067,-7.065486,-7.484167,3.530819,-9.767009,-6.278144,7.433330,-4.396989,5.363923,-3.272823,3.375104,2.963304,4.224423,4.373166,-5.765570,0.608141,8.167530,4.886463,4.210979,-3.382839,-5.771266,-5.682561,2.158527,-2.170400,7.728760,-3.337262,8.383701,-4.059982,0.818587,2.620078,7.768259,2.071993,-7.407555,8.311688,9.132262,4.521716,-5.454348,9.892087,-4.919947,-5.366533,-6.610163,-9.176013,-1.942663,3.725474,-2.277366,-7.913202,1.214481,-3.663689,-0.127491,-7.610987,4.644840,8.275674,2.112544,8.604313,-2.303096,1.931181,7.325256,3.934466,-8.585739,4.995545,1.861103,7.393110,-3.134279,-2.192083,5.948217,-2.526777,-0.347163,-7.990620,3.250829,4.073259,1.973582,-0.145802,-2.259227,9.041613,-1.002776,9.719986,-6.314603,8.011791,3.025976,1.598338,-9.402286,7.410898,8.918165,-8.283020,-6.982948,-9.281816,-3.183617,-4.309644,-0.892071,-9.258433,-2.492858,-3.876626,-8.265919,2.379098,8.959163,-2.713345,6.614814,-0.795210,1.379368,1.196670,-4.727890,9.958362,-7.247891,0.686553,4.295568,-5.659891,-5.787213,-5.883587,-5.435169,-0.803907,-8.486376,7.224368,-7.043789,-9.889264,-0.546717,9.600881,-4.326023,3.002579,-5.990460,2.942182,-8.324484,-6.957247,1.182604,9.561395,-0.861413,2.626398,-4.658894,-7.710045,5.745897,-6.336076,-7.257169,-1.489582,5.378337,-5.334032,3.045659,4.974792,0.995436,-2.766675,4.366738,-0.639169,1.220214,-3.703435,-9.629833,-9.223997,-2.519399,2.617801,6.532620,4.721745,0.751146,-6.303837,2.288101,8.161323,0.555527,6.365367,4.504419,4.321154,-3.560234,4.980702,-3.039254,-7.300267,-0.047455,-7.903530,9.105128,-5.872920,6.602869,4.502837,3.752267,7.998058,-7.961583,6.924286,-4.884490,-3.789313,-2.135540,9.590443,-6.913034,9.211541,9.249114,-4.301180,3.805684,1.776911,5.186915,-2.865314,0.528635,-9.667044,-5.524022,-9.101360,-3.951020,9.527102,-9.705172,4.190710,-5.381405,0.202795,-0.089666,2.482095,0.756567,-7.557546,3.092737,2.365798,-8.747000,3.942989,8.573585,1.414378],[-7.114727,-0.946471,1.776597,1.674385,6.742307,4.440141,-9.042058,9.753305,-7.268605,2.781170,-2.263092,-9.104870,-2.355340,-5.758067,0.430936,0.867727,-6.020794,-9.574747,6.565643,-2.434558,0.572911,6.911044,-6.164106,4.875910,-6.952111,-0.801239,5.693432,-4.261065,-1.038935,1.085846,-3.313998,-0.429497,-8.163494,8.797461,-4.754255,-6.316232,7.295544,-6.598978,0.054991,-5.243127,-1.973619,-0.935085,-3.549622,1.868859,6.375562,-4.861993,2.756453,6.203370,-8.042982,1.496242,-0.199706,-1.911013,5.280835,5.162923,-1.642440,8.394715,-3.429565,-0.639021,-5.165359,-1.959839,-1.195982,0.107418,2.111082,6.771550,5.624475,-2.152952,2.880477,-8.063208,1.317275,0.277838,9.166215,-5.805669,-5.984204,-8.366623,-3.633141,4.422061,-6.852549,-5.608540,9.023938,8.483402,2.953105,-0.350622,-3.379894,2.744282,-0.676622,0.451310,8.220495,2.029931,-1.955007,-8.210518,-9.417524,5.996590,8.439275,-7.993363,7.561754,8.001470,-3.362014,5.750234,-4.661835,-0.729984,1.606917,1.832784,-8.213689,1.828190,-4.275837,7.560048,1.560081,9.672543,3.199034,5.175379,9.055348,2.691534,-2.926572,-0.016391,2.675274,2.402064,-7.430630,-9.785994,3.647431,2.888707,3.041836,5.302412,7.340191,1.639553,-4.048971,-0.603142,-0.928020,4.827903,-2.326426,9.769148,0.244791,4.993315,1.039494,-6.313145,0.433732,3.887972,-5.643442,9.745185,6.255059,-3.397085,8.444899,-3.929106,-8.038391,-8.521549,0.042381,8.692337,-0.519052,6.160430,-3.009048,-0.088277,8.614526,-8.445594,-6.547207,-4.919824,6.415756,-4.469554,2.355072,-8.384406,-8.338319,-8.426819,-6.818551,-3.576629,-6.642712,7.251656,0.262132,-7.914084,0.235039,3.742568,-6.715346,9.117244,-0.808138,-9.603367,-1.981868,-2.904500,9.261986,0.744704,-4.399856,-5.876543,1.282805,9.554923,-6.112024,1.251416,-9.201246,8.734239,-8.181389,-7.442242,-2.273083,-2.750368,5.323735,-6.135805,-5.901218,2.738885,4.347125,7.152846,7.548312,-7.448094,2.426181,8.615743,-4.539381,-3.075002,0.194806,9.849822,-1.505249,8.172326,-9.098031,-7.068594,4.028700,0.285812,-0.841302,5.331519,4.665016,1.100393,6.168661,0.189357,7.660195,7.574838,-4.784383,1.097276,-4.333397,7.875224,-9.711901,0.369815,4.000644,-8.656097,-4.569189,7.337108,2.141980,-8.091163,5.624536,-7.555267,6.727461,8.003885,8.596696,-6.877165,8.726638,-5.030182,-0.709370,2.063861,0.316275,1.372448,9.616112,6.233048,0.177003,-7.519532,6.330002,2.523301,-0.205395,8.740374,8.391243,3.058995,5.307109,-6.384119,-9.243806,1.265339,-5.983541,5.172014,9.957505,-2.963874,-7.604398,8.066333],[-5.634106,-2.464240,4.646302,-1.751091,-8.797215,-0.219274,9.492005,5.030780,-6.146817,4.002011,4.004855,9.044078,-2.397935,4.539802,-3.379200,-8.024629,0.367554,6.428923,-3.711325,-2.826280,1.435564,-3.578143,5.243402,-4.451812,-3.046951,-3.123677,-5.910771,-8.954607,-1.568767,3.029743,-3.642087,9.070537,9.795776,2.027389,-4.416665,-2.765107,-7.623865,-1.362975,-6.368628,8.671972,4.527711,-4.023672,8.766458,-9.592699,-0.792664,-9.073571,9.634215,-3.210396,-7.338254,2.022487,2.939257,3.548548,-5.327120,-0.371614,-0.052725,-9.557774,5.738587,-5.683166,5.522887,-0.041145,-3.616899,2.095560,-1.168959,-4.507634,2.664437,5.578782,2.388162,-4.000456,9.989494,-7.005007,-3.407969,0.263287,5.219139,1.349396,-6.702625,-6.164349,-6.848164,-8.509060,-6.739352,-7.728404,-2.405828,-9.039201,-2.256000,-5.826596,6.203388,3.125527,2.872716,-5.934323,-6.629035,4.210359,5.275647,-1.744147,4.519834,8.654476,8.189641,6.142914,7.313520,-6.820639,-4.078513,3.467647,0.335217,-6.564761,0.521214,-4.592968,-7.510867,-8.611674,1.868140,6.751082,-7.203664,-2.526637,-6.647609,6.478312,-7.416312,3.854779,-8.122673,-5.007064,-5.313453,-0.016078,1.713290,0.827313,9.073945,-4.894888,-5.745500,8.153289,-1.811125,3.962750,-9.421570,-3.319563,-5.206167,6.025383,7.495576,-9.446819,-9.586628,4.195902,7.778460,9.379677,7.444184,-0.823657,-3.618156,-1.464130,5.745591,6.771210,-6.750204,-9.198567,-5.401717,-6.995573,-7.543663,3.660714,0.526168,-2.743931,0.304834,2.017017,1.999763,2.330914,-6.030478,-0.671740,4.574974,2.401021,-7.926353,-9.270138,1.941090,-2.417443,7.945439,3.962783,-5.741861,-2.171783,0.940628,-9.285167,7.394662,-1.268785,1.422102,8.098227,9.015332,5.620839,7.158768,-5.030013,-8.918749,-6.814507,-8.605291,-0.250122,0.915200,-6.244672,7.900000,-7.342200,-5.080379,-8.011789,2.270869,-2.804749,-0.444874,-7.599131,7.863777,-0.139744,5.549617,-2.584073,-9.781310,4.037733,0.876833,7.453166,-3.980400,9.756514,-6.414132,8.473419,5.812446,-7.979542,1.965332,8.230455,0.846670,-7.040942,-7.416537,-9.431525,6.230769,4.761379,-2.338518,4.112293,-9.805993,2.703027,-4.489953,-3.580651,1.463757,6.665197,-7.615425,9.503719,1.807564,-3.634545,-0.788905,-4.831779,-7.711701,-0.661517,-6.342865,-8.099728,-0.627424,-2.541685,-8.397388,7.403261,9.916189,-9.375846,7.344775,-9.483729,1.270317,2.786328,9.031625,0.306671,0.151431,-5.223871,-9.439749,-3.834013,5.917955,2.614896,2.613745,7.779851,-6.451119,-3.732903,3.588657,-0.452801,-9.817831,7.795553,4.491013,0.449000,-5.540546,3.644715],[-8.283794,-9.749820,-8.743535,5.067809,-7.011956,-0.754168,-3.424702,-4.226922,9.568785,-1.800549,-3.398145,-4.783696,8.447331,-4.499832,8.780559,-4.224198,4.385041,9.749167,-5.429563,-6.752454,0.709989,9.429786,9.209148,-7.595504,-5.077138,-3.493407,-2.801554,8.572639,2.930501,3.014994,3.230538,-8.538700,-5.085641,-2.865585,8.058085,2.776391,5.840151,-0.372528,0.274060,-3.180420,-1.503325,-1.542984,9.201462,-6.352641,-7.149346,3.164432,8.152782,-0.354845,-9.663354,-0.895142,5.577473,-4.911358,1.277457,-2.938865,3.631851,-7.766797,0.265078,-8.635552,-1.382470,0.259864,9.928084,-5.637190,5.772794,-8.379147,9.135580,7.444088,6.643449,-7.413324,-5.753419,3.984543,0.665615,0.470966,-6.791901,8.692002,-2.801748,0.607811,3.929820,-4.235725,9.415236,-7.297705,-8.813430,4.617128,-1.403683,-3.777879,-8.665548,-8.349134,8.571210,4.718063,-6.760472,5.758549,6.718268,-9.399722,-2.019031,0.723128,5.848048,1.764793,1.755030,7.469711,-9.343709,5.518428,1.753886,-2.198186,4.537196,5.584553,-6.505056,7.754532,4.685713,-3.605511,-1.827978,1.255850,-2.669042,7.419030,-6.363443,1.157459,-1.014306,1.130084,-6.990474,9.024816,2.136418,2.970702,5.185157,-6.630599,-8.172246,-1.463024,-0.905488,4.038420,-9.049441,7.305146,2.587570,6.728041,1.708395,-2.512758,-5.377912,2.738624,-9.165712,7.389139,2.159704,-6.476179,3.003322,1.513339,5.645940,-3.357687,3.375852,-4.749587,-4.816851,8.458556,-4.411392,9.087202,6.137167,6.936127,-9.317825,2.948084,-0.013113,3.335079,-1.285831,6.927027,6.739017,-0.300527,0.808812,-8.592497,-6.447310,7.161080,5.475484,-0.756565,-8.846342,-7.246352,-8.022135,-3.007496,7.003201,-1.877549,-3.080807,5.884755,4.156948,2.198476,-2.060619,-6.691843,3.292560,-5.616004,0.036389,7.831071,-8.274796,-6.039864,2.664137,7.820457,-2.532785,-6.660449,3.122845,5.256772,4.306885,-7.929403,-0.468418,9.710700,-2.023642,-5.284850,-4.406825,9.641003,0.760171,4.701003,7.813783,2.945345,5.732219,-2.696296,-6.892337,9.249496,-8.808779,0.354871,2.512076,-3.769173,-9.489591,6.303303,-8.241433,8.124594,-7.185205,-5.717236,7.596130,6.576736,-9.860973,-1.504995,2.381247,-2.062073,6.207173,-9.284393,-0.928924,-6.563015,0.209846,0.301996,2.857803,5.881615,-4.704364,7.998085,-2.702183,-7.516077,-9.242716,2.222568,-4.771414,-6.808521,4.971116,-5.750310,9.673873,0.675751,-9.554867,7.854295,9.960396,9.567185,-1.757900,-3.091644,-3.350778,7.156703,3.979331,-6.321331,5.395242,1.547203,-7.210004,-7.092078,-4.479058,-1.682758,0.665322,-6.615328,4.772275,-2.087030],[-2.757125,-1.696838,3.944652,-8.785647,-6.813412,-0.780934,1.462130,-0.841101,-5.268733,9.165455,-6.447429,9.723702,8.356731,9.161859,-5.246918,5.285185,-1.747551,2.673970,0.124009,-6.190752,-7.196035,6.692313,-3.340159,0.356385,9.394910,2.472192,6.494227,3.665718,4.184036,5.282435,-3.650264,-4.204224,-5.350463,-6.908007,6.695846,5.215225,7.758582,9.922643,-0.302549,-2.340157,-2.181722,-0.561205,1.892494,-2.111220,-3.341933,-4.062919,-1.282723,2.883536,-9.064189,7.212176,-1.575516,1.758190,3.112862,9.461665,-4.656663,2.266380,6.604727,-2.794853,1.730994,6.199503,-0.016463,-2.789695,0.012763,0.534704,5.613983,8.213182,3.924312,-4.260128,-4.134258,-1.730694,4.275065,7.470532,1.230224,7.680246,-8.773192,-2.804541,-6.622598,-6.055497,-2.761593,1.778074,-9.237534,4.733006,-6.464315,-1.518114,0.275972,0.118291,1.660809,-2.506761,-0.975695,1.378892,-9.660872,2.676488,7.598915,-8.643076,3.161448,8.461003,5.719574,8.817812,-8.124328,-3.104822,-1.848314,1.685511,-0.681341,8.443369,0.138899,9.752926,-5.738231,4.659789,-0.052880,-8.401229,5.750052,3.420284,-6.911111,-9.033040,8.881025,5.134880,-4.561819,0.706562,-4.714962,2.672488,5.480693,1.404796,7.829372,1.570525,9.381371,5.333087,-6.068569,2.233875,3.729639,0.017090,-6.161715,0.739374,1.628384,4.131810,9.693924,-0.313668,7.572274,-4.903749,-5.641118,3.454483,6.011086,-9.796428,6.777702,7.205626,-0.423949,2.916516,2.452356,1.546556,0.348873,-0.217973,-7.403351,-5.844482,-3.104033,-9.694279,-5.044828,-4.108481,8.029469,6.026872,-3.829586,1.555945,-9.551335,3.365334,8.528496,-2.552695,6.842411,0.566406,9.160275,-8.803291,6.567611,-1.293825,-0.735503,9.418452,-4.655828,-7.388137,9.835818,4.259306,8.245667,7.065600,8.940486,1.025820,-5.126179,-3.484196,-9.809072,-0.586802,-6.823991,-6.451482,3.296790,-7.295913,-4.819527,8.166996,-0.956640,8.084913,7.609767,6.277935,5.582336,-8.449503,8.835623,4.175739,5.903642,8.165053,1.338615,-3.165657,-3.735201,-3.287047,9.438601,-8.100720,-5.688143,9.409676,7.306983,-4.908131,-0.643645,-9.110473,-3.279462,6.994974,3.466481,9.464769,-1.269559,-3.009068,-9.667631,-5.702606,-5.885576,9.672027,-2.223399,-9.817875,8.816360,-9.187742,5.810845,-9.194089,9.054861,3.235910,-1.196450,2.732323,-7.669885,1.092029,-1.148801,4.788162,4.465538,3.194465,3.104410,7.068734,-3.335079,-2.585969,-8.930697,9.429278,0.371021,9.174370,8.469054,-3.315467,-2.273821,-4.874259,3.642531,2.281239,7.746113,6.813541,-3.432118,3.518096,-2.123571,9.866698,-1.668513,-0.765028],[2.418887,-2.872753,-3.759413,8.529917,-0.652868,4.679411,2.851980,-1.657638,2.806972,7.452967,-0.258728,1.134900,0.443298,-6.573979,9.395862,5.754868,-8.118394,-4.880647,-1.869156,6.197929,0.638139,6.289440,2.127808,9.628948,1.367505,-3.103772,-4.369393,-8.041902,-4.587596,9.369399,-9.015739,1.691407,-7.561035,5.927595,9.104088,-2.260488,-8.037211,0.879544,3.896058,-7.253187,9.503717,2.181679,-1.051601,4.496964,-0.094900,1.740978,1.320607,3.401716,-0.135824,9.274210,2.377517,-0.663942,9.802080,1.960040,5.119821,4.950464,-4.903480,-0.359815,-7.388389,-1.825126,-6.319593,6.441901,-7.928046,-2.088575,-6.132539,-9.361689,7.554387,2.570200,-8.416029,1.472101,-3.798484,-5.763550,3.820436,-6.198660,2.363980,-8.862494,-7.006261,8.828271,-7.972599,0.942746,9.807478,-7.466899,-8.605199,0.908214,-0.116662,-2.186073,5.772972,-9.076157,4.574037,0.156413,0.868440,5.139415,1.982321,-9.941616,-6.959792,-8.699804,5.368740,-6.046151,-2.663010,-6.470415,-1.577102,-5.771426,5.773896,1.191738,7.768596,9.530562,-7.560740,-2.331261,-6.493913,-5.002601,-8.748554,-5.462512,9.983106,5.477409,6.821633,6.600915,7.379807,0.624096,-5.435114,3.413900,7.916784,-0.460615,6.678479,-8.337667,9.110068,-7.652764,6.864516,6.841290,5.766011,4.257263,-0.843682,5.352460,-2.810542,-7.681015,2.595131,-4.988588,8.898825,-8.778461,6.282947,-2.546055,8.142610,-9.417470,1.720059,-5.045957,-5.036982,9.622689,-5.352838,-1.800946,-2.340269,1.313375,9.896012,-1.674807,-5.304687,4.623451,4.844415,-8.713674,4.238924,-5.772629,-6.676248,6.215572,-1.119475,6.517758,0.574215,6.009935,-0.173921,9.041140,-8.367555,-5.970093,8.120776,-6.707119,2.953941,9.840560,6.243725,-8.667049,-1.369381,-2.060601,-7.292298,5.175452,-0.340933,9.265121,5.283283,-8.815278,8.671805,-3.074783,-3.809967,8.402839,2.329500,-7.552655,-2.591957,-0.990307,8.428952,5.489431,-3.580504,3.236755,0.390535,-3.714138,-2.544883,-6.232275,1.232036,-2.954335,5.527180,-5.054591,-6.885246,0.862222,6.856538,-6.147730,7.361366,-6.052878,-1.159539,-5.332063,8.532446,2.439265,4.275898,4.789520,-1.669834,-3.098227,5.321005,3.786661,-1.311378,7.513541,-0.158141,-8.075116,6.426884,-6.775574,-3.619130,-4.944372,2.541239,8.486749,7.022892,5.578356,-2.665592,-8.835172,-1.915569,-4.496496,-9.870444,-4.996508,8.903396,-8.112340,-3.931438,-4.111988,3.434024,-0.978074,-0.658879,9.379879,-3.719383,-2.371206,7.961145,-2.020288,-3.795976,-8.408970,-3.429667,2.538943,3.671343,4.299006,-1.374455,-3.137422,-8.422857,-4.222426,4.877723,-5.174174]], dtype = "float32")#candidate|5993|(7, 260)|const|float32
call_5991 = relay.TupleGetItem(func_4130_call(relay.reshape(const_5992.astype('float32'), [80,]), relay.reshape(uop_5963.astype('int16'), [50, 2]), relay.reshape(const_5993.astype('float32'), [1820,]), ), 2)
call_5994 = relay.TupleGetItem(func_4135_call(relay.reshape(const_5992.astype('float32'), [80,]), relay.reshape(uop_5963.astype('int16'), [50, 2]), relay.reshape(const_5993.astype('float32'), [1820,]), ), 2)
bop_5998 = relay.maximum(call_5961.astype('float32'), relay.reshape(uop_5963.astype('float32'), relay.shape_of(call_5961))) # shape=(100,)
bop_6001 = relay.maximum(call_5962.astype('float32'), relay.reshape(uop_5965.astype('float32'), relay.shape_of(call_5962))) # shape=(100,)
output = relay.Tuple([call_5991,const_5992,const_5993,bop_5998,])
output2 = relay.Tuple([call_5994,const_5992,const_5993,bop_6001,])
func_6009 = relay.Function([], output)
mod['func_6009'] = func_6009
mod = relay.transform.InferType()(mod)
output = func_6009()
func_6010 = relay.Function([], output)
mutated_mod['func_6010'] = func_6010
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4323_call = mod.get_global_var('func_4323')
func_4325_call = mutated_mod.get_global_var('func_4325')
call_6017 = func_4323_call()
call_6018 = func_4323_call()
output = call_6017
output2 = call_6018
func_6030 = relay.Function([], output)
mod['func_6030'] = func_6030
mod = relay.transform.InferType()(mod)
output = func_6030()
func_6031 = relay.Function([], output)
mutated_mod['func_6031'] = func_6031
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5511_call = mod.get_global_var('func_5511')
func_5512_call = mutated_mod.get_global_var('func_5512')
call_6096 = relay.TupleGetItem(func_5511_call(), 0)
call_6097 = relay.TupleGetItem(func_5512_call(), 0)
func_3926_call = mod.get_global_var('func_3926')
func_3928_call = mutated_mod.get_global_var('func_3928')
call_6100 = func_3926_call()
call_6101 = func_3926_call()
var_6108 = relay.var("var_6108", dtype = "int32", shape = (14, 15, 14))#candidate|6108|(14, 15, 14)|var|int32
bop_6109 = relay.equal(call_6096.astype('bool'), relay.reshape(var_6108.astype('bool'), relay.shape_of(call_6096))) # shape=(14, 15, 14)
bop_6112 = relay.equal(call_6097.astype('bool'), relay.reshape(var_6108.astype('bool'), relay.shape_of(call_6097))) # shape=(14, 15, 14)
output = relay.Tuple([call_6100,bop_6109,])
output2 = relay.Tuple([call_6101,bop_6112,])
func_6131 = relay.Function([var_6108,], output)
mod['func_6131'] = func_6131
mod = relay.transform.InferType()(mod)
mutated_mod['func_6131'] = func_6131
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6132 = relay.var("var_6132", dtype = "int32", shape = (14, 15, 14))#candidate|6132|(14, 15, 14)|var|int32
func_6131_call = mutated_mod.get_global_var('func_6131')
call_6133 = func_6131_call(var_6132)
output = call_6133
func_6134 = relay.Function([var_6132], output)
mutated_mod['func_6134'] = func_6134
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2878_call = mod.get_global_var('func_2878')
func_2879_call = mutated_mod.get_global_var('func_2879')
call_6146 = relay.TupleGetItem(func_2878_call(), 0)
call_6147 = relay.TupleGetItem(func_2879_call(), 0)
func_2878_call = mod.get_global_var('func_2878')
func_2879_call = mutated_mod.get_global_var('func_2879')
call_6148 = relay.TupleGetItem(func_2878_call(), 0)
call_6149 = relay.TupleGetItem(func_2879_call(), 0)
output = relay.Tuple([call_6146,call_6148,])
output2 = relay.Tuple([call_6147,call_6149,])
func_6155 = relay.Function([], output)
mod['func_6155'] = func_6155
mod = relay.transform.InferType()(mod)
mutated_mod['func_6155'] = func_6155
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6155_call = mutated_mod.get_global_var('func_6155')
call_6156 = func_6155_call()
output = call_6156
func_6157 = relay.Function([], output)
mutated_mod['func_6157'] = func_6157
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1680_call = mod.get_global_var('func_1680')
func_1682_call = mutated_mod.get_global_var('func_1682')
call_6179 = func_1680_call()
call_6180 = func_1680_call()
output = call_6179
output2 = call_6180
func_6194 = relay.Function([], output)
mod['func_6194'] = func_6194
mod = relay.transform.InferType()(mod)
output = func_6194()
func_6195 = relay.Function([], output)
mutated_mod['func_6195'] = func_6195
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6205 = relay.const(4, dtype = "int8")#candidate|6205|()|const|int8
var_6206 = relay.var("var_6206", dtype = "int8", shape = (7, 1, 2))#candidate|6206|(7, 1, 2)|var|int8
bop_6207 = relay.multiply(const_6205.astype('int8'), var_6206.astype('int8')) # shape=(7, 1, 2)
output = relay.Tuple([bop_6207,])
output2 = relay.Tuple([bop_6207,])
func_6210 = relay.Function([var_6206,], output)
mod['func_6210'] = func_6210
mod = relay.transform.InferType()(mod)
var_6211 = relay.var("var_6211", dtype = "int8", shape = (7, 1, 2))#candidate|6211|(7, 1, 2)|var|int8
output = func_6210(var_6211)
func_6212 = relay.Function([var_6211], output)
mutated_mod['func_6212'] = func_6212
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1565_call = mod.get_global_var('func_1565')
func_1566_call = mutated_mod.get_global_var('func_1566')
call_6253 = relay.TupleGetItem(func_1565_call(), 0)
call_6254 = relay.TupleGetItem(func_1566_call(), 0)
output = call_6253
output2 = call_6254
func_6261 = relay.Function([], output)
mod['func_6261'] = func_6261
mod = relay.transform.InferType()(mod)
output = func_6261()
func_6262 = relay.Function([], output)
mutated_mod['func_6262'] = func_6262
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6261_call = mod.get_global_var('func_6261')
func_6262_call = mutated_mod.get_global_var('func_6262')
call_6338 = func_6261_call()
call_6339 = func_6261_call()
func_2413_call = mod.get_global_var('func_2413')
func_2416_call = mutated_mod.get_global_var('func_2416')
var_6420 = relay.var("var_6420", dtype = "int32", shape = (60, 2))#candidate|6420|(60, 2)|var|int32
call_6419 = relay.TupleGetItem(func_2413_call(relay.reshape(var_6420.astype('int32'), [5, 3, 8])), 0)
call_6421 = relay.TupleGetItem(func_2416_call(relay.reshape(var_6420.astype('int32'), [5, 3, 8])), 0)
output = relay.Tuple([call_6338,call_6419,var_6420,])
output2 = relay.Tuple([call_6339,call_6421,var_6420,])
func_6422 = relay.Function([var_6420,], output)
mod['func_6422'] = func_6422
mod = relay.transform.InferType()(mod)
mutated_mod['func_6422'] = func_6422
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6423 = relay.var("var_6423", dtype = "int32", shape = (60, 2))#candidate|6423|(60, 2)|var|int32
func_6422_call = mutated_mod.get_global_var('func_6422')
call_6424 = func_6422_call(var_6423)
output = call_6424
func_6425 = relay.Function([var_6423], output)
mutated_mod['func_6425'] = func_6425
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4770_call = mod.get_global_var('func_4770')
func_4772_call = mutated_mod.get_global_var('func_4772')
call_6427 = func_4770_call()
call_6428 = func_4770_call()
output = call_6427
output2 = call_6428
func_6433 = relay.Function([], output)
mod['func_6433'] = func_6433
mod = relay.transform.InferType()(mod)
output = func_6433()
func_6434 = relay.Function([], output)
mutated_mod['func_6434'] = func_6434
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5016_call = mod.get_global_var('func_5016')
func_5018_call = mutated_mod.get_global_var('func_5018')
call_6452 = relay.TupleGetItem(func_5016_call(), 3)
call_6453 = relay.TupleGetItem(func_5018_call(), 3)
output = call_6452
output2 = call_6453
func_6455 = relay.Function([], output)
mod['func_6455'] = func_6455
mod = relay.transform.InferType()(mod)
output = func_6455()
func_6456 = relay.Function([], output)
mutated_mod['func_6456'] = func_6456
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5511_call = mod.get_global_var('func_5511')
func_5512_call = mutated_mod.get_global_var('func_5512')
call_6474 = relay.TupleGetItem(func_5511_call(), 1)
call_6475 = relay.TupleGetItem(func_5512_call(), 1)
uop_6479 = relay.asin(call_6474.astype('float64')) # shape=(15, 7, 14)
uop_6481 = relay.asin(call_6475.astype('float64')) # shape=(15, 7, 14)
output = relay.Tuple([uop_6479,])
output2 = relay.Tuple([uop_6481,])
func_6488 = relay.Function([], output)
mod['func_6488'] = func_6488
mod = relay.transform.InferType()(mod)
output = func_6488()
func_6489 = relay.Function([], output)
mutated_mod['func_6489'] = func_6489
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3526_call = mod.get_global_var('func_3526')
func_3527_call = mutated_mod.get_global_var('func_3527')
call_6490 = func_3526_call()
call_6491 = func_3526_call()
output = relay.Tuple([call_6490,])
output2 = relay.Tuple([call_6491,])
func_6509 = relay.Function([], output)
mod['func_6509'] = func_6509
mod = relay.transform.InferType()(mod)
mutated_mod['func_6509'] = func_6509
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6509_call = mutated_mod.get_global_var('func_6509')
call_6510 = func_6509_call()
output = call_6510
func_6511 = relay.Function([], output)
mutated_mod['func_6511'] = func_6511
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3442_call = mod.get_global_var('func_3442')
func_3443_call = mutated_mod.get_global_var('func_3443')
call_6662 = relay.TupleGetItem(func_3442_call(), 0)
call_6663 = relay.TupleGetItem(func_3443_call(), 0)
func_4854_call = mod.get_global_var('func_4854')
func_4856_call = mutated_mod.get_global_var('func_4856')
const_6665 = relay.const([9,-10,5,-2,10,-10,10,6,5,1,-5,-6,-5,3,-4,-1,-2,-7,-4,3,-10,8,-9,3,-4,-1,5,2,-6,9,1,4,2,2,2,-9,10,-10,4,5,2,-9,-5,8,-7,-3,6,4,9,-3,1,3,9,-2,-9,-3,7,7,-4,-1,-1,-1,-2,-6,-1,3,-2,5,2,-6,-8,-1,2,5,4,-1,2,5,-7,6,1,-9,-8,4,-4,8,-1,7,8,1,9,8,-4,-9,3,8,-7,-4,-3,-2,9,1,2,5,-1,1,-10,5,-1,4,10,-7,-1,1,-1,5,6,2,-5,5,3,9,-4,-7,7,-10,-7,3,9,-4,-6,2,6,-7,1,8,-7,-7,-9,7,-10,-2,-5,5,-8,4,-9,-5,10,-5,-3,5,9,-2,-8,6,-9,5,5,10,8,-7,-2,-1,2,3,10,-7,10,9,2,6,-6,-5,-2,4,9,-8,-2,3,-6,1,-2,4,10,10,9,-5,-10,5,5,1,-9,-7,7,-8,4,-8,10,10,7,3,-7,-2,9,8,-7,10,-9,8,6,-10,5,-9,-2,-6,9,7,-10,-5,-6,-2,4,-8,8,-9,-2,-7,7,-4,4,-9,1,-1,5,-9,8,4,5,5,8,10,-10,-8,10,7,-2,-7,4,-6,-3,-2,6,5,7,-7,-3,-6,-3,-2,-6,8,-7,5,-2,-10,3,8,-7,-3,2,-3,6,-9,-4,1,-10,-2,-4,8,-5,1,-10,9,1,-6,-1,-7,6,3,7,-2,3,-5,10,-2,-4,4,3,3,-7,-6,-6,5,-1,6,2,-6,-3,-3,8,5,-8,6,-2,5,8,8,-8,-7,-1,8,2,-10,9,-5,9,-7,-1,-8,1,-4,9,-2,5,8,4,-9,2,-9,-3,7,6,-8,-6,10,2,-8,-4,-9,-2,4,3,-2,5,5,8,9,-6,9,-5,-1,2,1,-2,4,-7,1,2,-6,-7,-4,-3,-8,-3,-10,5,7,-3,-3,9,10,-6,6,4,-4,3,5,4,-4,10,3,-9,3,1,8,5,-5,-7,-8,5,4,-3,-3,-2,-2,-10,10,-7,1,10,7,-7,6,-5,9,-8,7,9,6,4,-6,5,6,-8,2,-8,3,1,-1,4,6,10,3,3,3,-9,4,4,6,6,-1,-6,10,-2,6,1,-7,-7,-4,-10,-8,7,-3,-9,-4,8,1,-10,3,-4,-9,5,9,6,2,10,7,1,10,-2,7,2,5,-1,-5,9,1,9,8,3,3,10,-3,-1,-3,7,-4,7,10,-8,-2,-8,3,-5,5,10,1,10,-3,7,6,5,3,-9,-2,10,6,-9,9,9,-1,-4,9,6,-6,7,7,4,-3,-6,10,9,6,-2,-1,9,-9,4,-6,3,3,6,1,-1,10,9,3,-5,-7,4,-9,-10,7,-10,4,6,3,-7,-9,9,6,-1,-8,-10,7,-5,-8,-9,-10,-9,-2,4,-5,10,-1,-5,-8,8,7,1,1,-10,-10,3,8,4,6,-7,-9,7,7,9,-10,-9,2,-1,-5,-1,10,3,-7,-9,-5,6,-5,-5,6,-8,-10,5,9,6,-7,-7,2,-6,-8,-2,3,-10,10,3,-9,4,9,3,5,2,-6,-10,10,7,-5,3,-4,8,-8,2,3,-9,7,-10,1,6,-10,6,-6,-10,-10,9,-7,2,10,-5,1,-7,5,-3,-9,6,7,3,-4,4,-7,-2,2,4,-9,4,2,-8,-1,7,-2,-1,-4,-2,-7,-6,1,-3,-3,2,-3,-2,10,-5,-3,-2,5,3,8,-2,4,-1,8,-6,8,-5,-8,9,-6,-10,-9,3,-6,5,-2,8,7,-10,3,5,8,6,6,-6,2,-3,-8,4,5,-7,8,-4,7,9,-4,3,6,-7,-5,-7,1,-5,-8,-5,8,-1,-9,1,-1,-6,-5,-6,-8,-3,6,-9,10,7,3,-3,4,-9,-9,9,-9,4,5,2,10,8,5,-6,1,7,3,-7,3,2,-4,-1,-7,6,-2,-7,6,-2,-5,10,-10,-2,-6,-2,6,-1,4,-5,7,-4,2,3,7,10,4,7,-6,8,9,1,5,-6,-3,9,2,1,5,1,1,-5,3,8,-5,1,6,9,-3,-10,8,8,-5,4,-5,3,10,9,-3,3,3,10,-6,-3,-6,5,4,-3,-4,-2,-6,5,4,9,2,5,-6,7,6,10,4,-7,1,-1,9,-4,-8,-10,4,10,-3,-3,10,10,-1,9,6,-8,-7,1,-10,-2,-5,-1,-4,-5,5,-6,10,-2,-6,8,8,8,3,-3,6,1,8,10,-2,10,3,-6,-10,5,1,8,9,7,7,5,5,-5,-10,8,-10,-1,2,7,8,-10,3,-10,-7,-4,-1,8,-7,-1,-7,-10,7,1,9,-3,-8,-7,2,5,6,-4,10,-3,6,-3,4,10,-5,1,7,-2,-9,-9,-6,-2,4,1,9,-9,9,8,5,7,8,-5,-3,3,-6,5,-5,-6,5,10,-1,-9,-3,6,-6,10,-10,-3,2,5,6,-1,8,-9,5,7,2,-8,6,5,-4,7,1,-7,4,2,3,-3,3,4,-3,5,10,2,-9,7,3,-7,2,9,7,7,7,3,-2,-9,1,-4,-1,-6,-3,-4,-8,1,7,7,-9,8,-4,7,7,5,-2,-10,3,-1,-10,3,6,-10,-1,-10,3,8,6,-5,1,-4,9,6,-9,-10,-2,9,-6,4,7,-10,10,10,-3,-3,-7,9,-1,9,4,9,10,-5,-8,-4,10,5,-1,-8,-10,-1,9,2,-7,-8,-10,-6,-6,9,-7,-8,6,-9,-8,1,9,6,6,-8,1,-5,-4,3,1,3,-2,8,-6,-5,5,4,-10,4,10,-8,-7,-4,-3,2,-7,-3,-7,9,8,-8,9,-7,-4,-6,2,-7,-6,-3,-8,-4,-3,3,10,5,-5,-10,-7,-5,9,-9,-5,3,7,-4,-2,-9,-7,-7,8,6,-5,10,-7,-6,8,9,-10,-9,-10,-6,-1,-7,1,7,6,-3,-2,-4,9,7,-5,-3,1,-6,4,5,-6,4,-8,5,6,6,10,-7,2,-6,-10,-2,2,-4,-7,-2,1,10,-8,-1,2,4,-9,-3,-7,-6,10,10,5,8,10,6,-7,9,3,2,9,-1,7,7,-3,-10,10,-4,-1,8,-4,3,3,7,-3,-3,-4,-1,8,-4,-3,-3,6,10,2,1,4,-7,7,5,2,-4,-4,-9,7,1,-10,4,2,5,4,7,-1,7,8,-8,1,9,9,8,-3,-5,-1,-1,5,-6,4,-10,-10,3,-10,10,-4,-9,-9,10,-3,-9,8,-9,7,-3,-1,-8,-2,10,-5,-5,1,4,10,4,-3,-2,-2,-5,8,-4,10,1,4,-6,-2,-7,-7,-3,-9,10,9,-4,-5,-3,-6,4,-8,8,6,2,6,-1,2,-8,10,-4,2,-9,6,9,-1,-8,8,3,-1,-4,-4,-8,6,9,5,-2,-1,5,-6,-9,-9,-6,-2,-3,-3,10,1,-6,-5,2,8,9,8,9,2,9,-5,-10,-3,2,1,5,-9,8,6,3,3,-3,10,3,10,-1,6,-1,-6,6,4,-7,2,6,5,-2,-3,-9,9,-5,5,-3,7,1,7,-1,9,-2,5,-9,-7,-1,7,5,2,-2,-6,-10,-9,6,-10,-4,7,2,-4,-4,-3,5,-3,-6,8,5,-5,7,-8,9,-2,-1,-9,-2,-5,7,-9,9,-3,-10,5,5,10,3,8,10,-4,-10,-3,9,-9,9,9,10,5,2,-5,9,10,-5,-1,-8,-5,10,-1,9,3,7,-8,-5,9,2,-6,-1,-10,-7,-1,-7,-5,6,4,-7,-3,-1,1,3,-5,6,-3,-10,-3,-7,-3,-3,-1,-6,4,4,-8,-8,2,3,-6,1,-5,-4,9,3,4,-4,-6,-2,6,10,2,6,-1,1,7,-7,-4,-9,10,7,-1,-3,-1,-5,-10,2,-5,3,-5,-1,10,-5,9,-7,7,7,7,4,2,5,-6,-3,5,-5,2,-5,8,-7,3,7,10,-9,-3,-4,-2,-8,-8,-9,7,-5,4,1,9,8,-2,3,9,8,5,-9,-5,-5,-6,-7,-8,1,-4,1,-8,7,-4,-3,-2,-4,-5,2,-8,4,-1,8,-7,1,-1,7,3,-1,-4,-7,7,1,-4,3,-2,-9,-8,-2,6,-6,-8,-8,7,-8,-6,-7,-8,-7,1,-8,7,-6,4,1,5,-9,-2,-4,8,10,-8,-9,5,-1,-5,1,-4,-6,7,10,-7,-7,-8,8,4,2,-6,8,-8,-8,-6,5,-6,-10,-10,-6,-1,-6,5,-7,-3,-1,-1,-8,6,1,5,-5,9,-7,-8,-6,8,-10,-5,2,-5,4,-1,-4,-10,-10,3,7,1,-10,7,-7,-7,7,-5,9,1,-7,-10,9,8,-5,5,10,6,-4,-6,-7,2,-7,3,7,3,-4,3,-3,3,1,-9,-5,-2,7,1,-3,8,-10,-5,-2,-8,-1,10,-3,1,-10,-6,-7,-3,6,-6,9,-6,4,-5,-2,-1,-4,-7,3,-3,-8,9,5,10,7,10,-2,6,-10,10,-4,4,-3,6,-9,-2,-8,-4,2,4,-10,9,1,-7,6,2,2,9,5,5,6,10,-6,-7,-8,10,-5,1,-4,-8,8,2,6,-7,-9,-4,8,1,10,-4,8,8,5,-3,10,9,1,-9,-5,7,-9,-2,-7,-2,-10,-7,2,-6,-7,-4,-10,6,-8,-8,3,10,-8,-8,-5,4,-7,-4,8,-4,8,-3,-4,-2,8,-7,7,1,-10,-10,1,8,7,-7,-3,10,-10,10,6,8,3,-2,-5,-6,4,-9,2,-3,1,-3,-10,6,8,7,7,5,-3,10,2,4,-4,2,-10,6,-6,8,4,7,-9,5,10,-5,8,2,3,-7,8,-4,8,-2,1,-10,1,4,-4,5,10,8,7,-8,-7,-7,8,-1,-3,1,-2,-8,10,2,-2,9,-9,8,8,-8,4,-8,-9,9,4,6,10,-9,-6,4,2,-10,10,-8,-5,-3,-2,-3,4,2,1,3,2,4,7,-7,-3,7,-4,-4,-1,-2,-10,1,7,1,1,-1,-8,-2,3,1,6,-9,-4,1,-10,8,8,-5,3,2,1,-9,-8,-3,2,-7,3,9,1,-5,-3,-2,-4,-5,-4,-3,8,-2,-4,-7,1,5,2,-3,5,5,-3,-8,-5,-4,-10,1,-2,6,10,-4,-9,-6,4,5,1,7,8,-3,-10,1,-5,-10,7,-2,-1,-1,5,3,-9,9,8,-4,-5,9,-3,7,-3,4,5,1,4,6,7,1,8,6,7,-4,6,-8,-4,-8,4,-8,-1,2,-9,7,8,4,9,3,9,-10,3,-7,-5,-5,-8,-7,-4,-6,-9,-10,10,-4,5,7,-9,10,-9,10,-1,-2,-9,-10,9,-7,7,-9,5,-8,-3,4,-5,3,-1,-7,-9,1,-9,-3,7,9,1,-4,1,7,-8,7,5,-7,-4,-9,3,-3,3,3,9,-5,-1,-9,1,-8,6,4,5,6,-6,-4,-6,-1,2,10,-7,-4,-4,-1,-6,5,4,3,-1,-1,-5,5,-2,2,-2,7,-7,-8,-3,-9,-7,3,6,-3,7,5,10,3,8,-8,-8,-2,8,-8,-8,-10,-9,-6,-8,-3,2,-7,8,6,7,-8,9,-10,7,-7,-2,2,1,8,7,-6,-9,-3,5,3,-3,9,-9,10,4,3,-4,9,2,-5,-1,2,-4,-7,6,2,-8,-1,9,-5,9,-3,4,8,-1,9,-6,2,-7,10,8,1,5,3,5,9,7,-7,-3,-8,-10,8,7,-5,-10,6,-8,-4,-10,9,6,-9,9,3,-3,-8,-10,-6,-8,-1,-5,-4,5,8,-4,3,4,-2,-10,-6,-8,3,-3,-4,9,7,2,6,1,3,8,5,7,-6,-4,9,7,9,10,-10,1,-2,-1,8,-10,-9,-6,2,-2,10,1,10,-1,7,-4,-8,-6,-8,9,-1,7,-1,4,6,-4,-4,8,-2,-4,-10,-7,3,-1,2,-7,10,5,-6,-5,-9,-3,-3,-6,9,5,10,2,-7,4,-2,4,-4,-3,10,-7,8,-1,-10,-7,8,-10,4,-2,4,2,-9,-8,-7,-7,3,-7,1,-2,-6,-2,1,-5,-4,7,4,-4,8,-8,-6,-4,-7,10,1,-1,-10,-1,4,7,-4,-8,6,3,-5,-10,6,-8,7,2,-9,-4,5,2,-3,9,-5,-6,-8,-4,-10,2,10,-8,9,4,-3,8,4,-7,-9,6,3,5,-3,-4,5,8,7,4,-5,3,9,-4,-1,1,9,-6,-9,4,1,-4,6,-4,7,-9,8,-8,3,-9,-7,6,8,-8,2,7,-2,2,3,10,-5,10,-1,10,4,-8,-2,5,-6,-4,-7,-4,4,-6,1,4,-7,9,7,-1,1,-10,-6,2,9,2,9,-6,9,7,-10,-6,-9,6,-6,-7,-10,1,-3,10,1,8,8,-2,-8,7,-3,-6,9,8,-8,-4,1,4,10,-6,6,2,9,-10,-4,4,1,-2,9,6,5,6,5,10,4,8,-1,3,-6,-5,-10,-2,9,9,-3,7,-5,4,5,-7,1,8,-10,9,1,-8,5,2,-3,-3,-6,-4,3,2,1,6,9,-3,-4,6,-8,-8,4,6,3,-4,10,-1,-6,-1,-6,-9,3,-3,4,-4,-4,3,2,-7,-9,-5,9,-3,1,-1,3,2,-2,2,-6,6,9,-2,-1,8,-2,-10,-1,7,9,8,10,9,-7,-7,9,5,-7,1,-5,-9,-3,9,3,5,6,7,5,7,1,7,9,10,-8,-3,1,2,-2,10,-1,-1,-8,2,-6,-5,4,9,-3,-1,-1,6,8,-7,-10,-8,-2,7,-9,3,-9,6,-10,9,3,4,4,-7,-7,5,-3,-10,3,-5,6,10,6,-9,1,10,7,10,-4,-6,-3,-10,-3,1,8,10,4,9,6,-8,5,-10,4,4,9,8,-10,-10,9,-2,-7,-10,2,3,-7,-4,-1,-5,-8,-2,10,9,-10,-6,10,5,8,-10,-3,10,-6,-2,-3,-1,-7,-6,-4,-6,5,3,-10,3,-2,-10,-6,4,-7,8,-3,-8,1,-5,2,9,-7,-1,9,-5,-6,5,-7,5,-5,-3,1,9,7,9,9,-7,10,-1,3,-1,5,3,5,6,-1,10,-10,6,-3,9,2,-8,3,5,-7,6,-4,-4,7,1,-10,-9,-10,-10,-9,6,-4,-8,-6,-2,1,7,-9,4,-2,3,6,2,9,10,2,9,-10,2,10,-9,4,-4,-6,8,-3,-7,4,-6,3,1,10,1,7,-6,-9,-7,10,5,-10,-3,5,6,1,-2,-6,10,-3,7,-2,6,-7,-4,4,2,-4,9,-5,9,-6,10,6,-9,-9,-10,9,-4,-6,-5,10,6,-2,-3,1,5,-7,-1,-7,5,-7,8,-8,2,3,-6,-5,-6,9,-6,-5,8,-7,6,-9,9,3,-2,10,-7,-3,5,-9,-7,-4,9,-5,9,7,-6,-6,2,4,2,-2,-8,-4,-3,8,1,2,-9,-8,8,6,4,1,-3,2,1,-4,8,-4,3,10,1,-6,8,-1,-1,-10,-10,3,-8,-9,-10,5,-1,9,-10,9,-3,-2,-1,7,3,-7,2,6,-4,6,8,-1,2,-4,-1,2,8,-6,8,-8,-5,-3,4,7,-6,1,-4,-4,2,-9,-1,-8,-6,5], dtype = "int32")#candidate|6665|(2940,)|const|int32
call_6664 = relay.TupleGetItem(func_4854_call(relay.reshape(const_6665.astype('int32'), [14, 15, 14])), 0)
call_6666 = relay.TupleGetItem(func_4856_call(relay.reshape(const_6665.astype('int32'), [14, 15, 14])), 0)
output = relay.Tuple([call_6662,call_6664,const_6665,])
output2 = relay.Tuple([call_6663,call_6666,const_6665,])
func_6670 = relay.Function([], output)
mod['func_6670'] = func_6670
mod = relay.transform.InferType()(mod)
output = func_6670()
func_6671 = relay.Function([], output)
mutated_mod['func_6671'] = func_6671
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1313_call = mod.get_global_var('func_1313')
func_1315_call = mutated_mod.get_global_var('func_1315')
call_6704 = func_1313_call()
call_6705 = func_1313_call()
output = call_6704
output2 = call_6705
func_6709 = relay.Function([], output)
mod['func_6709'] = func_6709
mod = relay.transform.InferType()(mod)
output = func_6709()
func_6710 = relay.Function([], output)
mutated_mod['func_6710'] = func_6710
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5852_call = mod.get_global_var('func_5852')
func_5853_call = mutated_mod.get_global_var('func_5853')
call_6772 = relay.TupleGetItem(func_5852_call(), 0)
call_6773 = relay.TupleGetItem(func_5853_call(), 0)
output = relay.Tuple([call_6772,])
output2 = relay.Tuple([call_6773,])
func_6781 = relay.Function([], output)
mod['func_6781'] = func_6781
mod = relay.transform.InferType()(mod)
mutated_mod['func_6781'] = func_6781
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6781_call = mutated_mod.get_global_var('func_6781')
call_6782 = func_6781_call()
output = call_6782
func_6783 = relay.Function([], output)
mutated_mod['func_6783'] = func_6783
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5249_call = mod.get_global_var('func_5249')
func_5251_call = mutated_mod.get_global_var('func_5251')
call_6787 = relay.TupleGetItem(func_5249_call(), 1)
call_6788 = relay.TupleGetItem(func_5251_call(), 1)
func_5342_call = mod.get_global_var('func_5342')
func_5344_call = mutated_mod.get_global_var('func_5344')
call_6789 = relay.TupleGetItem(func_5342_call(), 0)
call_6790 = relay.TupleGetItem(func_5344_call(), 0)
const_6801 = relay.const([[[-1.274221,6.877814,7.042041,1.292523,-8.908650,-6.519394,-2.027526,-5.792603,3.969447],[0.850613,3.027558,-7.625935,-9.864368,-5.208185,-2.696597,-6.541033,-3.670907,4.153678],[3.034183,-1.065822,-1.489416,-1.679971,-5.066344,2.327632,-9.585541,5.152929,-4.923301],[8.711732,6.243070,2.610173,8.784858,-5.649604,3.113773,-7.081865,-8.076637,3.190582],[3.699579,-4.156536,-8.329802,9.627701,-9.536807,7.304031,9.580195,8.703931,-1.390848],[-1.478449,-3.063505,1.330902,2.371051,-4.092149,5.502676,-0.301969,5.529255,-6.646148],[-0.885733,-3.488096,-7.425779,0.141397,-5.238554,-1.379330,5.002398,4.912641,5.520907],[-6.966588,-8.581442,3.414187,-4.166994,-0.364756,-1.882437,4.302694,-3.997895,3.136587],[7.662892,-2.892144,9.405879,-5.671200,-7.679649,-3.198879,7.179481,-6.902758,9.161391],[1.100945,3.882092,-0.282184,-9.096034,-2.888902,3.587885,8.919075,-2.870512,3.454674],[-1.844188,-4.759502,9.886802,-0.043924,7.182340,-2.933513,-9.132185,-4.129144,7.639204],[1.557293,5.839909,-9.169962,9.444411,7.116779,-2.692456,2.246500,8.812167,9.431665]],[[-9.221344,4.999454,-7.662779,3.785654,1.657955,-7.310344,-7.983559,-2.707966,2.337239],[-7.073190,-5.689770,-6.719944,-6.291506,8.419693,0.145116,-5.017969,-2.072436,-6.303858],[6.312891,-9.633995,6.412224,1.704516,-2.232854,9.152700,8.417193,8.266695,-9.781622],[-0.684432,3.230616,-7.052378,-4.657557,0.223771,-8.079343,9.259374,9.759401,-8.458639],[-8.547778,-9.098395,9.630557,-9.103346,7.464839,-9.633202,1.575086,1.719880,-2.905877],[4.788049,-6.334853,0.874298,-3.124239,1.098675,-7.654904,4.089035,2.618481,-0.142694],[9.624771,4.849787,-1.303449,-4.164111,-1.796581,-2.647851,0.566675,5.879030,-2.139564],[-5.770700,4.238094,-5.960674,7.511869,-1.938346,7.605290,9.038335,0.194828,-9.423148],[-5.456795,1.285642,-5.338793,5.961836,-2.690585,0.360074,-3.068704,6.880498,2.444029],[2.233007,9.181317,-9.048842,-2.595824,-8.906891,-4.501408,4.426810,2.269347,-1.250540],[0.209518,-2.328413,-9.923700,-7.614381,8.755747,3.399666,-5.388129,-6.034699,-9.892699],[-0.138222,-4.445593,0.222083,7.985704,-5.692092,9.465166,-5.185746,-9.144648,-0.714000]],[[5.286818,2.535475,3.311544,1.444786,-9.708004,5.522535,-8.838304,7.330488,-8.048758],[-0.674811,-9.929843,0.643711,2.993298,-3.348030,-0.986342,-0.983893,6.513142,-3.997643],[-8.112284,-2.838849,6.592011,-5.490967,-0.291863,1.909988,-1.453988,-3.540729,-1.444330],[-5.439376,-1.866628,5.605100,-7.762254,-5.729918,-3.362738,-0.751716,-2.916755,5.726268],[-2.474096,-1.356608,8.114292,-2.228304,9.598553,-5.180232,-7.805338,2.586024,4.067983],[0.347262,-7.887029,-1.823931,-0.365463,-8.672459,5.136197,9.876752,6.940235,-3.236909],[7.539656,-9.282891,-7.975298,-5.855274,2.162050,7.298447,-0.753993,-9.390653,-6.217642],[9.503704,3.562178,3.583287,3.757002,0.158483,-9.488678,-4.895541,-6.808834,-9.636341],[2.450826,0.715906,-0.443231,-7.404725,0.493191,-1.022559,9.832389,-2.789670,9.364335],[6.897600,-2.703888,5.774964,3.886635,-6.389260,-7.752997,-5.941497,4.881663,-4.049139],[-0.052269,8.987423,-5.840622,0.308533,8.415508,-2.248914,6.490144,-4.080264,-1.836839],[7.064500,6.068333,5.853570,-3.601973,6.269956,1.410781,-6.887802,-3.143918,7.664312]],[[9.231642,-7.477835,4.689835,4.330578,4.512838,-8.243900,2.197460,7.792695,-3.848168],[-1.228242,-9.005064,-0.684675,9.219263,9.951672,-0.727509,-2.662867,5.409881,8.123566],[-1.538724,1.644612,-2.874404,2.308107,7.920191,-0.846685,-1.384915,9.987026,-8.579919],[-4.977547,-1.477425,-8.264140,4.065746,-3.995467,1.673823,3.490127,-1.648769,3.963478],[-7.616609,-4.202666,1.374815,1.213474,0.563515,-1.296073,7.687913,5.053800,-9.317301],[-2.876603,9.508338,-0.011085,-8.235070,-9.902811,0.840944,5.599889,-0.669235,8.732043],[-1.071695,7.681673,8.760006,-5.162423,4.866994,-0.805064,5.489525,7.545850,6.624200],[1.499892,1.808313,-4.206883,-7.271659,-8.229337,0.961946,-5.165837,9.524778,6.584385],[-9.350240,0.707739,-3.209856,9.417644,-5.276641,-4.051257,1.648675,-1.416286,4.826293],[8.811365,-9.118786,-0.501375,0.243998,-7.782215,8.665445,-0.884326,8.904109,7.356542],[3.197398,2.311393,3.073180,-2.813177,1.804150,4.275748,4.101718,-6.839973,-8.417030],[-5.743451,-7.478313,-7.179829,-6.122387,3.400309,-7.576643,1.590944,6.362013,-1.312205]],[[-1.183483,7.792487,6.329070,-4.051380,6.238342,-2.436225,-6.046084,-8.238964,2.644177],[-2.380223,0.076095,4.942367,-2.742875,7.763058,1.313033,-3.086445,-1.957801,-4.669048],[-2.643711,9.502139,8.708072,7.712831,-5.757179,-2.191229,1.348662,7.130780,-7.703191],[-1.235734,-7.095595,1.705536,1.198356,2.142827,0.939832,2.925142,9.688486,-3.867178],[3.449890,-5.444906,3.849522,4.865056,6.222562,9.421511,-6.116946,-4.914517,4.458790],[-8.328344,0.109260,9.862045,2.787608,-9.530426,4.816083,-1.505528,-6.577530,-9.388062],[9.792437,-3.909556,-1.775547,9.409560,-6.820617,1.571314,3.399052,-5.971153,-7.552235],[5.829247,9.058848,-1.039056,-1.853232,2.183003,8.221056,-5.881356,2.869720,3.316773],[-9.156227,-4.842857,-7.726855,4.389529,-0.138997,-9.399371,0.755131,-8.052299,7.178905],[4.624751,4.019210,-9.086869,-4.602498,-1.528452,-2.128793,7.309555,-9.396296,2.764688],[-3.164720,-9.211323,-4.812187,8.875762,-0.157022,-3.640193,-3.743077,-4.791625,-1.331654],[-9.478851,9.674464,9.154707,-6.759746,9.328965,-9.218475,2.170856,8.711653,6.955063]],[[-9.423142,9.171692,8.234344,-3.694823,5.557617,9.398690,6.434897,-9.931222,-2.393198],[-8.531961,-1.526616,8.686266,-5.757609,4.857683,-8.939344,-1.903395,0.079416,-5.470289],[3.738886,-7.697084,6.789103,3.573578,7.110009,2.131854,4.590704,-1.134172,6.977958],[-1.206278,-3.102314,7.083214,9.033565,6.208741,0.507521,3.085796,-2.700592,4.939783],[8.884379,7.414245,-9.008425,6.866290,-7.302698,-3.566866,2.408036,-1.036732,-8.084050],[2.826435,2.107715,2.432685,-4.522074,3.329600,-4.271074,-1.591040,5.043407,9.581398],[-9.290414,7.721121,-4.399332,4.729954,2.816985,-5.261068,9.874946,7.183602,-3.368907],[-8.570740,7.017314,-1.425256,-5.192837,2.286817,-1.966351,-8.828555,1.362229,4.984226],[3.271560,-9.513885,-3.636702,-6.999302,-0.457229,-1.767901,-2.290934,7.796972,6.485591],[-5.645109,-6.347557,8.318379,-5.342331,8.723540,-3.089832,6.858594,6.435631,-8.197450],[-0.658619,-0.680832,-4.103073,-1.412194,2.240386,-8.696027,6.420228,-9.004871,-6.390654],[-9.781876,4.242184,8.613939,-3.313056,5.015843,-7.037015,-2.055316,6.073962,0.149306]],[[6.509254,-9.166742,3.351656,0.485558,1.005159,-1.446963,-3.209726,-3.276453,-2.336988],[6.008292,8.861754,7.618910,-1.546976,-7.534452,-8.890771,8.523056,6.364414,-1.811518],[-5.625946,4.266628,4.765411,5.146514,-6.335871,-8.706500,6.239140,-7.076161,-1.541091],[-3.216139,6.485296,-5.181995,-8.796306,9.584004,-7.281688,-7.560385,-2.876515,-3.731045],[0.489023,8.977881,-8.981534,8.442028,7.636347,-2.807784,6.672180,-2.854961,5.149871],[-7.352985,-3.500856,-0.361054,7.875876,0.911769,-8.669738,6.719696,3.463300,-9.786930],[-3.968183,-8.699496,0.320587,-3.713288,4.033442,2.836367,1.268797,2.180769,2.176639],[-8.766238,-9.235358,-9.086319,-7.033988,0.601861,-9.542557,5.725207,0.943675,-8.202187],[-0.847744,0.946980,2.466488,-6.327240,-9.491090,-7.428682,3.169616,-1.288739,-8.540159],[2.448684,-1.861582,0.503582,-4.094676,-7.599161,-6.520847,-6.733454,9.471961,-0.574048],[-9.534219,1.974642,-4.776595,-7.384845,4.596278,-2.433951,-4.563965,-0.347026,-3.934528],[3.557754,-2.393776,-3.040549,1.290543,9.969930,-8.544274,7.301755,-9.781968,9.866416]],[[9.570531,3.631944,-4.298026,-2.821795,9.879397,9.252602,-3.798156,-2.812160,-2.373304],[6.587228,8.861886,-8.703699,5.768771,-6.020417,3.559472,-9.237895,5.003264,5.655866],[9.728443,-1.319877,-4.924268,-4.890106,4.287326,5.851607,8.029361,4.776926,8.777084],[-1.286545,4.733940,-9.933905,-8.186803,0.972206,-1.521396,8.584072,0.545242,-0.451181],[-1.424971,-4.511861,5.822376,8.913447,4.980603,0.058509,2.110454,6.964968,-9.880533],[4.949308,-3.226774,2.584774,7.946717,2.583210,-0.555154,-6.043322,-2.700485,-2.977196],[-2.819433,0.269716,-3.447481,-5.425193,-0.749092,3.614474,7.845329,-6.713457,7.021417],[5.839422,-1.050677,0.029722,-9.473936,1.440128,4.280177,6.815203,-2.805838,8.512854],[7.190476,-2.764532,1.426762,4.206196,-4.270846,-7.173459,5.781102,-7.130398,-8.868275],[-6.236287,6.963571,-5.441621,-0.712364,-0.796208,-1.680470,5.191548,5.387485,4.730587],[9.017336,8.590303,-1.922106,-0.522165,2.606226,-4.474575,-8.859550,5.979734,-1.293017],[-2.364559,6.578462,0.732612,-8.655170,7.606979,-1.262211,-9.221726,3.991820,3.240342]],[[-2.435952,8.816524,-6.227278,3.394726,2.138824,-9.872224,-6.085525,-4.503444,1.241576],[8.462053,-9.469279,6.574217,-3.889092,3.575113,-5.203876,0.540814,-3.125096,-4.313096],[-9.716381,4.955098,-0.762288,-1.578589,4.747970,-8.891693,-9.516482,-2.802040,1.024270],[-1.541820,-2.725137,4.695686,-3.874349,2.410491,-1.605824,-6.895928,4.498367,-4.377577],[0.018023,9.475486,3.435268,-7.386518,6.689604,-7.174398,-2.613044,-9.473578,-3.690580],[3.606489,1.768598,0.357993,1.748990,-2.303293,-2.901522,-6.340786,1.186159,-5.596610],[-2.506285,1.521544,2.697620,-5.280020,-5.789511,-5.348093,-7.686160,0.334610,-7.300339],[9.533535,-7.482200,8.711171,-0.590197,7.890956,8.900669,-6.584449,-0.826916,1.345674],[-9.160873,3.920674,9.822907,2.668167,-6.570956,7.437766,-2.784933,-7.725097,-9.232631],[9.527617,0.565205,2.098561,-8.337176,-5.428128,9.706799,-7.736986,3.281700,-4.767903],[-6.547624,3.198384,-0.622688,5.352266,7.696154,-5.052144,3.316684,0.928423,-8.027624],[4.937265,-4.163651,4.195655,-8.914545,6.879057,5.062496,-0.093491,-0.340795,-3.389389]],[[-8.256173,8.368848,6.802124,8.589405,6.488430,-9.783583,9.566442,-1.883235,2.166593],[1.920286,8.106784,-1.351916,-2.881582,-6.697780,-9.603653,-2.347899,5.965304,-1.300187],[5.774821,5.017789,-4.638958,-4.132314,-6.320752,-5.151268,-3.518828,9.592221,-5.675317],[-8.367626,-4.615088,0.964529,-3.153188,8.282340,6.470299,-5.354413,2.079572,3.166559],[3.799037,-4.603947,-9.627970,-6.970728,-8.989482,5.860557,7.545586,-3.722385,-1.616378],[-8.754470,1.074306,-7.773027,6.300612,1.840796,7.785553,1.777831,-0.564088,-2.847536],[-4.274533,7.136145,-9.080403,1.902937,-2.195096,1.606800,-8.771768,9.012803,9.312119],[-5.367817,9.224255,0.589807,1.584122,9.171803,-9.625301,-6.379037,-3.970220,-2.394693],[-1.974604,-0.445847,3.843227,-0.348427,2.091371,3.899636,5.421782,-4.939168,3.883999],[6.321400,-7.589977,-3.598814,-8.945780,2.374833,-2.806252,9.700555,4.084772,9.534366],[8.291806,-7.575099,-0.106041,3.578771,-7.658353,-6.312346,-1.421375,-5.391143,-9.476002],[9.908572,4.203834,-8.145939,-6.569784,5.039603,2.857640,-0.479092,-3.266131,-9.780597]]], dtype = "float64")#candidate|6801|(10, 12, 9)|const|float64
bop_6802 = relay.divide(call_6787.astype('float32'), relay.reshape(const_6801.astype('float32'), relay.shape_of(call_6787))) # shape=(10, 12, 9)
bop_6805 = relay.divide(call_6788.astype('float32'), relay.reshape(const_6801.astype('float32'), relay.shape_of(call_6788))) # shape=(10, 12, 9)
bop_6842 = relay.logical_and(bop_6802.astype('bool'), relay.reshape(const_6801.astype('bool'), relay.shape_of(bop_6802))) # shape=(10, 12, 9)
bop_6845 = relay.logical_and(bop_6805.astype('bool'), relay.reshape(const_6801.astype('bool'), relay.shape_of(bop_6805))) # shape=(10, 12, 9)
func_4796_call = mod.get_global_var('func_4796')
func_4798_call = mutated_mod.get_global_var('func_4798')
call_6847 = relay.TupleGetItem(func_4796_call(), 0)
call_6848 = relay.TupleGetItem(func_4798_call(), 0)
uop_6857 = relay.log2(call_6789.astype('float32')) # shape=(9, 11, 6)
uop_6859 = relay.log2(call_6790.astype('float32')) # shape=(9, 11, 6)
func_6509_call = mod.get_global_var('func_6509')
func_6511_call = mutated_mod.get_global_var('func_6511')
call_6870 = relay.TupleGetItem(func_6509_call(), 0)
call_6871 = relay.TupleGetItem(func_6511_call(), 0)
func_5756_call = mod.get_global_var('func_5756')
func_5758_call = mutated_mod.get_global_var('func_5758')
const_6878 = relay.const([-2.412687,-3.589189,2.289500,8.726825,5.717516,5.441544,1.224074,8.959616,7.962455,8.217492,-1.027493,9.974957,-8.766513,-5.288394,-6.509158,-8.759064,-0.530873,7.582463,4.339405,-3.118971,7.441527,-9.154558,0.348177,2.763180,2.439458,9.469504,-0.778106,-8.314930,-9.929208,-7.283386,-4.886342,4.130683,2.038031,-3.966818,2.436413,-3.427144,1.268395,9.925312,-5.388593,6.733170,6.339234,8.612402,1.149051,4.242841,-4.517225,-2.975444,-0.581761,3.676144,2.180211,-7.020078,2.810912,8.458216,-5.519752,0.707648,4.604020,-8.619787,9.125886,-6.140366,-1.949064,-2.255217,8.657870,3.995635,6.811813,0.456035,1.492912,8.533192,-3.852096,7.246855,-4.085725,7.077657,0.228603,-0.279930,7.163331,3.470140,-5.979691,-5.488288,5.244079,8.005129,0.766317,6.563329,5.481119,3.442204,3.875749,-8.911968,0.398286,3.649584,6.382798,4.236148,-7.644377,-9.284856,-7.721915,-0.420802,1.319315,-7.930802,-8.982410,2.369170,3.766488,-2.615674,4.585167,-0.245577,-5.368755,7.701993,9.137190,6.431148,5.128102,4.221647,-3.602091,3.969479,0.332321,-2.681964,1.617636,2.660996], dtype = "float32")#candidate|6878|(112,)|const|float32
call_6877 = relay.TupleGetItem(func_5756_call(relay.reshape(const_6878.astype('float32'), [2, 4, 14])), 1)
call_6879 = relay.TupleGetItem(func_5758_call(relay.reshape(const_6878.astype('float32'), [2, 4, 14])), 1)
func_3191_call = mod.get_global_var('func_3191')
func_3192_call = mutated_mod.get_global_var('func_3192')
call_6883 = relay.TupleGetItem(func_3191_call(), 0)
call_6884 = relay.TupleGetItem(func_3192_call(), 0)
bop_6892 = relay.subtract(uop_6857.astype('int64'), relay.reshape(call_6789.astype('int64'), relay.shape_of(uop_6857))) # shape=(9, 11, 6)
bop_6895 = relay.subtract(uop_6859.astype('int64'), relay.reshape(call_6790.astype('int64'), relay.shape_of(uop_6859))) # shape=(9, 11, 6)
output = relay.Tuple([bop_6842,call_6847,call_6870,call_6877,const_6878,call_6883,bop_6892,])
output2 = relay.Tuple([bop_6845,call_6848,call_6871,call_6879,const_6878,call_6884,bop_6895,])
func_6896 = relay.Function([], output)
mod['func_6896'] = func_6896
mod = relay.transform.InferType()(mod)
output = func_6896()
func_6897 = relay.Function([], output)
mutated_mod['func_6897'] = func_6897
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1565_call = mod.get_global_var('func_1565')
func_1566_call = mutated_mod.get_global_var('func_1566')
call_6916 = relay.TupleGetItem(func_1565_call(), 0)
call_6917 = relay.TupleGetItem(func_1566_call(), 0)
output = call_6916
output2 = call_6917
func_6920 = relay.Function([], output)
mod['func_6920'] = func_6920
mod = relay.transform.InferType()(mod)
output = func_6920()
func_6921 = relay.Function([], output)
mutated_mod['func_6921'] = func_6921
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5930_call = mod.get_global_var('func_5930')
func_5931_call = mutated_mod.get_global_var('func_5931')
call_6955 = relay.TupleGetItem(func_5930_call(), 0)
call_6956 = relay.TupleGetItem(func_5931_call(), 0)
output = relay.Tuple([call_6955,])
output2 = relay.Tuple([call_6956,])
func_6958 = relay.Function([], output)
mod['func_6958'] = func_6958
mod = relay.transform.InferType()(mod)
mutated_mod['func_6958'] = func_6958
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6958_call = mutated_mod.get_global_var('func_6958')
call_6959 = func_6958_call()
output = call_6959
func_6960 = relay.Function([], output)
mutated_mod['func_6960'] = func_6960
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5382_call = mod.get_global_var('func_5382')
func_5383_call = mutated_mod.get_global_var('func_5383')
call_6966 = relay.TupleGetItem(func_5382_call(), 0)
call_6967 = relay.TupleGetItem(func_5383_call(), 0)
output = call_6966
output2 = call_6967
func_6998 = relay.Function([], output)
mod['func_6998'] = func_6998
mod = relay.transform.InferType()(mod)
mutated_mod['func_6998'] = func_6998
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6998_call = mutated_mod.get_global_var('func_6998')
call_6999 = func_6998_call()
output = call_6999
func_7000 = relay.Function([], output)
mutated_mod['func_7000'] = func_7000
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3534_call = mod.get_global_var('func_3534')
func_3535_call = mutated_mod.get_global_var('func_3535')
call_7003 = relay.TupleGetItem(func_3534_call(), 1)
call_7004 = relay.TupleGetItem(func_3535_call(), 1)
output = relay.Tuple([call_7003,])
output2 = relay.Tuple([call_7004,])
func_7008 = relay.Function([], output)
mod['func_7008'] = func_7008
mod = relay.transform.InferType()(mod)
mutated_mod['func_7008'] = func_7008
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7008_call = mutated_mod.get_global_var('func_7008')
call_7009 = func_7008_call()
output = call_7009
func_7010 = relay.Function([], output)
mutated_mod['func_7010'] = func_7010
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3705_call = mod.get_global_var('func_3705')
func_3707_call = mutated_mod.get_global_var('func_3707')
call_7033 = relay.TupleGetItem(func_3705_call(), 3)
call_7034 = relay.TupleGetItem(func_3707_call(), 3)
var_7044 = relay.var("var_7044", dtype = "float64", shape = (13, 13, 12))#candidate|7044|(13, 13, 12)|var|float64
bop_7045 = relay.add(call_7033.astype('float32'), relay.reshape(var_7044.astype('float32'), relay.shape_of(call_7033))) # shape=(13, 13, 12)
bop_7048 = relay.add(call_7034.astype('float32'), relay.reshape(var_7044.astype('float32'), relay.shape_of(call_7034))) # shape=(13, 13, 12)
output = bop_7045
output2 = bop_7048
func_7055 = relay.Function([var_7044,], output)
mod['func_7055'] = func_7055
mod = relay.transform.InferType()(mod)
mutated_mod['func_7055'] = func_7055
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7056 = relay.var("var_7056", dtype = "float64", shape = (13, 13, 12))#candidate|7056|(13, 13, 12)|var|float64
func_7055_call = mutated_mod.get_global_var('func_7055')
call_7057 = func_7055_call(var_7056)
output = call_7057
func_7058 = relay.Function([var_7056], output)
mutated_mod['func_7058'] = func_7058
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5852_call = mod.get_global_var('func_5852')
func_5853_call = mutated_mod.get_global_var('func_5853')
call_7200 = relay.TupleGetItem(func_5852_call(), 0)
call_7201 = relay.TupleGetItem(func_5853_call(), 0)
func_3085_call = mod.get_global_var('func_3085')
func_3086_call = mutated_mod.get_global_var('func_3086')
call_7206 = relay.TupleGetItem(func_3085_call(), 1)
call_7207 = relay.TupleGetItem(func_3086_call(), 1)
func_4956_call = mod.get_global_var('func_4956')
func_4958_call = mutated_mod.get_global_var('func_4958')
var_7234 = relay.var("var_7234", dtype = "int16", shape = (231,))#candidate|7234|(231,)|var|int16
call_7233 = relay.TupleGetItem(func_4956_call(relay.reshape(var_7234.astype('int16'), [231,])), 3)
call_7235 = relay.TupleGetItem(func_4958_call(relay.reshape(var_7234.astype('int16'), [231,])), 3)
output = relay.Tuple([call_7200,call_7206,call_7233,var_7234,])
output2 = relay.Tuple([call_7201,call_7207,call_7235,var_7234,])
func_7242 = relay.Function([var_7234,], output)
mod['func_7242'] = func_7242
mod = relay.transform.InferType()(mod)
mutated_mod['func_7242'] = func_7242
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7243 = relay.var("var_7243", dtype = "int16", shape = (231,))#candidate|7243|(231,)|var|int16
func_7242_call = mutated_mod.get_global_var('func_7242')
call_7244 = func_7242_call(var_7243)
output = call_7244
func_7245 = relay.Function([var_7243], output)
mutated_mod['func_7245'] = func_7245
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7268 = relay.var("var_7268", dtype = "bool", shape = (14, 12, 2))#candidate|7268|(14, 12, 2)|var|bool
const_7269 = relay.const([[[False,True],[True,False],[True,False],[False,False],[False,True],[True,True],[True,True],[False,True],[False,False],[False,False],[True,True],[True,False]],[[True,False],[False,False],[True,True],[False,False],[False,False],[False,False],[False,False],[False,True],[True,True],[False,True],[True,False],[False,True]],[[False,False],[False,True],[False,True],[True,True],[True,True],[True,True],[True,True],[True,True],[True,True],[True,False],[False,True],[True,True]],[[True,True],[False,False],[True,True],[True,True],[True,True],[False,True],[False,True],[False,False],[True,True],[True,False],[True,False],[True,False]],[[True,True],[False,True],[False,True],[True,True],[False,True],[True,True],[False,True],[False,False],[False,False],[True,True],[False,False],[True,True]],[[True,False],[True,False],[False,False],[True,True],[True,True],[True,False],[True,False],[True,True],[True,True],[True,False],[False,True],[False,False]],[[False,True],[True,False],[True,False],[True,True],[False,False],[True,False],[False,False],[False,False],[False,True],[False,True],[True,True],[False,False]],[[False,True],[False,False],[True,False],[True,True],[False,False],[True,True],[True,False],[False,True],[False,False],[False,False],[False,False],[False,False]],[[True,False],[True,False],[False,False],[False,False],[True,True],[True,False],[True,False],[True,True],[False,False],[True,True],[False,True],[True,False]],[[True,True],[True,False],[True,True],[False,False],[False,False],[False,False],[False,False],[False,True],[True,True],[False,True],[True,True],[False,False]],[[False,True],[True,False],[True,False],[True,False],[True,False],[False,False],[True,True],[False,True],[True,False],[True,True],[True,False],[False,False]],[[True,False],[True,True],[False,False],[True,False],[True,False],[False,False],[True,True],[True,False],[True,True],[True,True],[False,True],[False,True]],[[False,False],[False,True],[False,True],[True,True],[True,True],[False,True],[True,True],[True,False],[False,False],[True,True],[True,False],[True,True]],[[True,False],[False,False],[False,False],[True,False],[False,False],[True,False],[True,False],[False,False],[True,False],[False,False],[False,True],[True,False]]], dtype = "bool")#candidate|7269|(14, 12, 2)|const|bool
bop_7270 = relay.logical_and(var_7268.astype('bool'), relay.reshape(const_7269.astype('bool'), relay.shape_of(var_7268))) # shape=(14, 12, 2)
func_5342_call = mod.get_global_var('func_5342')
func_5344_call = mutated_mod.get_global_var('func_5344')
call_7275 = relay.TupleGetItem(func_5342_call(), 1)
call_7276 = relay.TupleGetItem(func_5344_call(), 1)
func_535_call = mod.get_global_var('func_535')
func_539_call = mutated_mod.get_global_var('func_539')
var_7283 = relay.var("var_7283", dtype = "float32", shape = (154, 1))#candidate|7283|(154, 1)|var|float32
const_7284 = relay.const([5,10,-8,-4,-10,-2,-4,-6,7,2,10,10,-1,-10,8,-8,-5,-3,-3,-9,3,3,-6,-2,10,10,5,-9,7,-1,7,9,6,-7,8,3,7,-9,-4,6,8,3,-8,-10,-2,-1,10,2,-2,6,-5,3,2,5,-4,-1,-8,6,7,-10,-8,-1,-3,-4,-2,-6,7,8,-3,7,-5,8,3,1,1,-2,-4,-5,5,-1,10,-3,9,8,6,9,-4,-7,2,-8,1,10,-2,-2,6,6,-3,5,-4,-5], dtype = "int16")#candidate|7284|(100,)|const|int16
var_7285 = relay.var("var_7285", dtype = "int64", shape = (112,))#candidate|7285|(112,)|var|int64
call_7282 = relay.TupleGetItem(func_535_call(relay.reshape(var_7283.astype('float32'), [7, 2, 11]), relay.reshape(const_7284.astype('int16'), [100,]), relay.reshape(var_7285.astype('int64'), [112,]), ), 4)
call_7286 = relay.TupleGetItem(func_539_call(relay.reshape(var_7283.astype('float32'), [7, 2, 11]), relay.reshape(const_7284.astype('int16'), [100,]), relay.reshape(var_7285.astype('int64'), [112,]), ), 4)
bop_7299 = relay.add(var_7285.astype('uint64'), var_7283.astype('uint64')) # shape=(154, 112)
func_5160_call = mod.get_global_var('func_5160')
func_5164_call = mutated_mod.get_global_var('func_5164')
const_7303 = relay.const(-10, dtype = "int16")#candidate|7303|()|const|int16
call_7302 = relay.TupleGetItem(func_5160_call(relay.reshape(const_7303.astype('int16'), []), relay.reshape(var_7283.astype('float32'), [154,]), relay.reshape(const_7284.astype('int16'), [50, 2]), ), 2)
call_7304 = relay.TupleGetItem(func_5164_call(relay.reshape(const_7303.astype('int16'), []), relay.reshape(var_7283.astype('float32'), [154,]), relay.reshape(const_7284.astype('int16'), [50, 2]), ), 2)
output = relay.Tuple([bop_7270,call_7275,call_7282,const_7284,bop_7299,call_7302,const_7303,])
output2 = relay.Tuple([bop_7270,call_7276,call_7286,const_7284,bop_7299,call_7304,const_7303,])
func_7305 = relay.Function([var_7268,var_7283,var_7285,], output)
mod['func_7305'] = func_7305
mod = relay.transform.InferType()(mod)
mutated_mod['func_7305'] = func_7305
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7305_call = mutated_mod.get_global_var('func_7305')
var_7307 = relay.var("var_7307", dtype = "bool", shape = (14, 12, 2))#candidate|7307|(14, 12, 2)|var|bool
var_7308 = relay.var("var_7308", dtype = "float32", shape = (154, 1))#candidate|7308|(154, 1)|var|float32
var_7309 = relay.var("var_7309", dtype = "int64", shape = (112,))#candidate|7309|(112,)|var|int64
call_7306 = func_7305_call(var_7307,var_7308,var_7309,)
output = call_7306
func_7310 = relay.Function([var_7307,var_7308,var_7309,], output)
mutated_mod['func_7310'] = func_7310
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7330 = relay.var("var_7330", dtype = "float32", shape = (4, 1, 1))#candidate|7330|(4, 1, 1)|var|float32
uop_7331 = relay.tan(var_7330.astype('float32')) # shape=(4, 1, 1)
output = relay.Tuple([uop_7331,])
output2 = relay.Tuple([uop_7331,])
func_7333 = relay.Function([var_7330,], output)
mod['func_7333'] = func_7333
mod = relay.transform.InferType()(mod)
var_7334 = relay.var("var_7334", dtype = "float32", shape = (4, 1, 1))#candidate|7334|(4, 1, 1)|var|float32
output = func_7333(var_7334)
func_7335 = relay.Function([var_7334], output)
mutated_mod['func_7335'] = func_7335
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5016_call = mod.get_global_var('func_5016')
func_5018_call = mutated_mod.get_global_var('func_5018')
call_7354 = relay.TupleGetItem(func_5016_call(), 1)
call_7355 = relay.TupleGetItem(func_5018_call(), 1)
func_5930_call = mod.get_global_var('func_5930')
func_5931_call = mutated_mod.get_global_var('func_5931')
call_7365 = relay.TupleGetItem(func_5930_call(), 0)
call_7366 = relay.TupleGetItem(func_5931_call(), 0)
func_4595_call = mod.get_global_var('func_4595')
func_4597_call = mutated_mod.get_global_var('func_4597')
call_7411 = func_4595_call()
call_7412 = func_4595_call()
func_2229_call = mod.get_global_var('func_2229')
func_2230_call = mutated_mod.get_global_var('func_2230')
call_7413 = relay.TupleGetItem(func_2229_call(), 0)
call_7414 = relay.TupleGetItem(func_2230_call(), 0)
var_7420 = relay.var("var_7420", dtype = "float32", shape = (14, 15, 14))#candidate|7420|(14, 15, 14)|var|float32
bop_7421 = relay.add(call_7354.astype('float32'), relay.reshape(var_7420.astype('float32'), relay.shape_of(call_7354))) # shape=(14, 15, 14)
bop_7424 = relay.add(call_7355.astype('float32'), relay.reshape(var_7420.astype('float32'), relay.shape_of(call_7355))) # shape=(14, 15, 14)
func_2213_call = mod.get_global_var('func_2213')
func_2215_call = mutated_mod.get_global_var('func_2215')
var_7428 = relay.var("var_7428", dtype = "int64", shape = (112,))#candidate|7428|(112,)|var|int64
call_7427 = relay.TupleGetItem(func_2213_call(relay.reshape(var_7428.astype('int64'), [112,])), 0)
call_7429 = relay.TupleGetItem(func_2215_call(relay.reshape(var_7428.astype('int64'), [112,])), 0)
output = relay.Tuple([call_7365,call_7411,call_7413,bop_7421,call_7427,var_7428,])
output2 = relay.Tuple([call_7366,call_7412,call_7414,bop_7424,call_7429,var_7428,])
func_7430 = relay.Function([var_7420,var_7428,], output)
mod['func_7430'] = func_7430
mod = relay.transform.InferType()(mod)
mutated_mod['func_7430'] = func_7430
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7430_call = mutated_mod.get_global_var('func_7430')
var_7432 = relay.var("var_7432", dtype = "float32", shape = (14, 15, 14))#candidate|7432|(14, 15, 14)|var|float32
var_7433 = relay.var("var_7433", dtype = "int64", shape = (112,))#candidate|7433|(112,)|var|int64
call_7431 = func_7430_call(var_7432,var_7433,)
output = call_7431
func_7434 = relay.Function([var_7432,var_7433,], output)
mutated_mod['func_7434'] = func_7434
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6781_call = mod.get_global_var('func_6781')
func_6783_call = mutated_mod.get_global_var('func_6783')
call_7458 = relay.TupleGetItem(func_6781_call(), 0)
call_7459 = relay.TupleGetItem(func_6783_call(), 0)
output = call_7458
output2 = call_7459
func_7487 = relay.Function([], output)
mod['func_7487'] = func_7487
mod = relay.transform.InferType()(mod)
output = func_7487()
func_7488 = relay.Function([], output)
mutated_mod['func_7488'] = func_7488
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4323_call = mod.get_global_var('func_4323')
func_4325_call = mutated_mod.get_global_var('func_4325')
call_7505 = func_4323_call()
call_7506 = func_4323_call()
output = relay.Tuple([call_7505,])
output2 = relay.Tuple([call_7506,])
func_7510 = relay.Function([], output)
mod['func_7510'] = func_7510
mod = relay.transform.InferType()(mod)
output = func_7510()
func_7511 = relay.Function([], output)
mutated_mod['func_7511'] = func_7511
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3882_call = mod.get_global_var('func_3882')
func_3883_call = mutated_mod.get_global_var('func_3883')
call_7582 = relay.TupleGetItem(func_3882_call(), 0)
call_7583 = relay.TupleGetItem(func_3883_call(), 0)
func_2486_call = mod.get_global_var('func_2486')
func_2489_call = mutated_mod.get_global_var('func_2489')
var_7600 = relay.var("var_7600", dtype = "int8", shape = (260,))#candidate|7600|(260,)|var|int8
call_7599 = relay.TupleGetItem(func_2486_call(relay.reshape(var_7600.astype('int8'), [260,])), 0)
call_7601 = relay.TupleGetItem(func_2489_call(relay.reshape(var_7600.astype('int8'), [260,])), 0)
output = relay.Tuple([call_7582,call_7599,var_7600,])
output2 = relay.Tuple([call_7583,call_7601,var_7600,])
func_7604 = relay.Function([var_7600,], output)
mod['func_7604'] = func_7604
mod = relay.transform.InferType()(mod)
mutated_mod['func_7604'] = func_7604
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7605 = relay.var("var_7605", dtype = "int8", shape = (260,))#candidate|7605|(260,)|var|int8
func_7604_call = mutated_mod.get_global_var('func_7604')
call_7606 = func_7604_call(var_7605)
output = call_7606
func_7607 = relay.Function([var_7605], output)
mutated_mod['func_7607'] = func_7607
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4323_call = mod.get_global_var('func_4323')
func_4325_call = mutated_mod.get_global_var('func_4325')
call_7650 = func_4323_call()
call_7651 = func_4323_call()
output = call_7650
output2 = call_7651
func_7713 = relay.Function([], output)
mod['func_7713'] = func_7713
mod = relay.transform.InferType()(mod)
output = func_7713()
func_7714 = relay.Function([], output)
mutated_mod['func_7714'] = func_7714
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3295_call = mod.get_global_var('func_3295')
func_3296_call = mutated_mod.get_global_var('func_3296')
call_7861 = relay.TupleGetItem(func_3295_call(), 1)
call_7862 = relay.TupleGetItem(func_3296_call(), 1)
func_6896_call = mod.get_global_var('func_6896')
func_6897_call = mutated_mod.get_global_var('func_6897')
call_7867 = relay.TupleGetItem(func_6896_call(), 2)
call_7868 = relay.TupleGetItem(func_6897_call(), 2)
func_2139_call = mod.get_global_var('func_2139')
func_2142_call = mutated_mod.get_global_var('func_2142')
var_7874 = relay.var("var_7874", dtype = "uint32", shape = (1210,))#candidate|7874|(1210,)|var|uint32
call_7873 = relay.TupleGetItem(func_2139_call(relay.reshape(var_7874.astype('uint32'), [1210,])), 0)
call_7875 = relay.TupleGetItem(func_2142_call(relay.reshape(var_7874.astype('uint32'), [1210,])), 0)
func_3098_call = mod.get_global_var('func_3098')
func_3101_call = mutated_mod.get_global_var('func_3101')
var_7912 = relay.var("var_7912", dtype = "uint16", shape = (1248,))#candidate|7912|(1248,)|var|uint16
call_7911 = func_3098_call(relay.reshape(var_7912.astype('uint16'), [8, 12, 13]), relay.reshape(var_7912.astype('uint16'), [8, 12, 13]), )
call_7913 = func_3098_call(relay.reshape(var_7912.astype('uint16'), [8, 12, 13]), relay.reshape(var_7912.astype('uint16'), [8, 12, 13]), )
func_1680_call = mod.get_global_var('func_1680')
func_1682_call = mutated_mod.get_global_var('func_1682')
call_7942 = func_1680_call()
call_7943 = func_1680_call()
output = relay.Tuple([call_7861,call_7867,call_7873,var_7874,call_7911,var_7912,call_7942,])
output2 = relay.Tuple([call_7862,call_7868,call_7875,var_7874,call_7913,var_7912,call_7943,])
func_7951 = relay.Function([var_7874,var_7912,], output)
mod['func_7951'] = func_7951
mod = relay.transform.InferType()(mod)
mutated_mod['func_7951'] = func_7951
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7951_call = mutated_mod.get_global_var('func_7951')
var_7953 = relay.var("var_7953", dtype = "uint32", shape = (1210,))#candidate|7953|(1210,)|var|uint32
var_7954 = relay.var("var_7954", dtype = "uint16", shape = (1248,))#candidate|7954|(1248,)|var|uint16
call_7952 = func_7951_call(var_7953,var_7954,)
output = call_7952
func_7955 = relay.Function([var_7953,var_7954,], output)
mutated_mod['func_7955'] = func_7955
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4796_call = mod.get_global_var('func_4796')
func_4798_call = mutated_mod.get_global_var('func_4798')
call_7991 = relay.TupleGetItem(func_4796_call(), 0)
call_7992 = relay.TupleGetItem(func_4798_call(), 0)
var_7995 = relay.var("var_7995", dtype = "float64", shape = (10, 12, 9))#candidate|7995|(10, 12, 9)|var|float64
bop_7996 = relay.floor_mod(call_7991.astype('float64'), relay.reshape(var_7995.astype('float64'), relay.shape_of(call_7991))) # shape=(10, 12, 9)
bop_7999 = relay.floor_mod(call_7992.astype('float64'), relay.reshape(var_7995.astype('float64'), relay.shape_of(call_7992))) # shape=(10, 12, 9)
output = bop_7996
output2 = bop_7999
func_8000 = relay.Function([var_7995,], output)
mod['func_8000'] = func_8000
mod = relay.transform.InferType()(mod)
mutated_mod['func_8000'] = func_8000
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8001 = relay.var("var_8001", dtype = "float64", shape = (10, 12, 9))#candidate|8001|(10, 12, 9)|var|float64
func_8000_call = mutated_mod.get_global_var('func_8000')
call_8002 = func_8000_call(var_8001)
output = call_8002
func_8003 = relay.Function([var_8001], output)
mutated_mod['func_8003'] = func_8003
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4878_call = mod.get_global_var('func_4878')
func_4879_call = mutated_mod.get_global_var('func_4879')
call_8010 = relay.TupleGetItem(func_4878_call(), 0)
call_8011 = relay.TupleGetItem(func_4879_call(), 0)
var_8031 = relay.var("var_8031", dtype = "float64", shape = (13, 13, 12))#candidate|8031|(13, 13, 12)|var|float64
bop_8032 = relay.greater_equal(call_8010.astype('bool'), relay.reshape(var_8031.astype('bool'), relay.shape_of(call_8010))) # shape=(13, 13, 12)
bop_8035 = relay.greater_equal(call_8011.astype('bool'), relay.reshape(var_8031.astype('bool'), relay.shape_of(call_8011))) # shape=(13, 13, 12)
output = relay.Tuple([bop_8032,])
output2 = relay.Tuple([bop_8035,])
func_8036 = relay.Function([var_8031,], output)
mod['func_8036'] = func_8036
mod = relay.transform.InferType()(mod)
var_8037 = relay.var("var_8037", dtype = "float64", shape = (13, 13, 12))#candidate|8037|(13, 13, 12)|var|float64
output = func_8036(var_8037)
func_8038 = relay.Function([var_8037], output)
mutated_mod['func_8038'] = func_8038
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1693_call = mod.get_global_var('func_1693')
func_1695_call = mutated_mod.get_global_var('func_1695')
call_8052 = relay.TupleGetItem(func_1693_call(), 0)
call_8053 = relay.TupleGetItem(func_1695_call(), 0)
var_8058 = relay.var("var_8058", dtype = "float64", shape = (10, 12, 9))#candidate|8058|(10, 12, 9)|var|float64
bop_8059 = relay.power(call_8052.astype('float64'), relay.reshape(var_8058.astype('float64'), relay.shape_of(call_8052))) # shape=(10, 12, 9)
bop_8062 = relay.power(call_8053.astype('float64'), relay.reshape(var_8058.astype('float64'), relay.shape_of(call_8053))) # shape=(10, 12, 9)
func_6920_call = mod.get_global_var('func_6920')
func_6921_call = mutated_mod.get_global_var('func_6921')
call_8063 = func_6920_call()
call_8064 = func_6920_call()
func_1534_call = mod.get_global_var('func_1534')
func_1537_call = mutated_mod.get_global_var('func_1537')
var_8066 = relay.var("var_8066", dtype = "uint32", shape = (1210, 1))#candidate|8066|(1210, 1)|var|uint32
call_8065 = func_1534_call(relay.reshape(var_8066.astype('uint32'), [11, 10, 11]), relay.reshape(var_8066.astype('uint32'), [11, 10, 11]), )
call_8067 = func_1534_call(relay.reshape(var_8066.astype('uint32'), [11, 10, 11]), relay.reshape(var_8066.astype('uint32'), [11, 10, 11]), )
output = relay.Tuple([bop_8059,call_8063,call_8065,var_8066,])
output2 = relay.Tuple([bop_8062,call_8064,call_8067,var_8066,])
func_8068 = relay.Function([var_8058,var_8066,], output)
mod['func_8068'] = func_8068
mod = relay.transform.InferType()(mod)
mutated_mod['func_8068'] = func_8068
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8068_call = mutated_mod.get_global_var('func_8068')
var_8070 = relay.var("var_8070", dtype = "float64", shape = (10, 12, 9))#candidate|8070|(10, 12, 9)|var|float64
var_8071 = relay.var("var_8071", dtype = "uint32", shape = (1210, 1))#candidate|8071|(1210, 1)|var|uint32
call_8069 = func_8068_call(var_8070,var_8071,)
output = call_8069
func_8072 = relay.Function([var_8070,var_8071,], output)
mutated_mod['func_8072'] = func_8072
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1406_call = mod.get_global_var('func_1406')
func_1407_call = mutated_mod.get_global_var('func_1407')
call_8085 = func_1406_call()
call_8086 = func_1406_call()
func_2213_call = mod.get_global_var('func_2213')
func_2215_call = mutated_mod.get_global_var('func_2215')
var_8090 = relay.var("var_8090", dtype = "int64", shape = (112, 1))#candidate|8090|(112, 1)|var|int64
call_8089 = relay.TupleGetItem(func_2213_call(relay.reshape(var_8090.astype('int64'), [112,])), 1)
call_8091 = relay.TupleGetItem(func_2215_call(relay.reshape(var_8090.astype('int64'), [112,])), 1)
func_7951_call = mod.get_global_var('func_7951')
func_7955_call = mutated_mod.get_global_var('func_7955')
const_8098 = relay.const([-7,-9,-4,9,7,-1,7,10,-8,9,-10,6,8,-7,1,-7,5,-9,2,8,9,-10,9,-6,-2,-6,1,-2,-1,-5,-9,3,8,-10,10,-2,1,9,-1,-4,-1,5,-4,2,6,-10,-10,8,6,2,9,-7,7,8,-1,9,7,-4,1,-8,5,-3,-4,-5,-2,-6,-3,1,1,6,-6,-5,-10,-5,7,9,5,9,4,8,2,-9,1,3,-3,-5,5,-1,-1,8,-2,-1,9,-6,5,3,10,-4,-3,-4,-7,5,-8,-9,-5,-8,3,5,1,-9,5,-8,1,9,-9,10,1,2,-4,-10,-7,7,10,-4,-3,-9,-2,-5,-9,8,-7,-5,-6,10,7,6,-10,6,4,1,2,6,-7,8,7,-5,8,5,-7,1,-4,-10,1,4,-5,-3,-5,2,1,-9,9,3,5,1,-2,8,1,-2,-5,8,-1,8,1,1,3,8,-5,-9,-10,4,3,10,1,6,10,7,-8,-1,-8,-9,-4,1,10,10,10,-2,6,-7,-7,5,1,-3,1,-6,-8,-10,-3,-10,10,-3,-5,-5,10,-10,-7,6,-10,-6,5,-10,8,3,-10,4,-4,4,3,-10,1,10,8,-7,5,9,-7,10,10,9,-8,-2,10,-2,5,-6,4,4,1,8,5,5,8,-9,1,-8,3,-9,-10,-5,-3,-1,6,6,-7,3,-4,5,-4,-10,-4,-3,-2,9,-3,7,7,2,-3,3,5,-3,-4,10,-5,-4,3,-4,-10,-9,7,-1,-3,-10,-1,10,8,-4,-4,-2,-7,7,-6,6,-6,-10,-8,9,-4,-2,9,1,-5,-2,1,7,-2,1,5,-3,10,-4,-4,4,2,-5,5,-10,2,9,-6,5,-1,6,-2,7,-2,-4,5,-6,-3,-10,6,-1,2,4,-4,-5,-5,-1,8,1,-2,-8,-7,6,3,10,-5,-8,9,-4,10,10,-8,2,-2,10,2,-2,2,8,-3,-7,-7,5,8,1,-9,-3,3,-5,-10,6,2,-2,-6,-4,-9,7,-7,-4,-4,-2,7,9,3,-4,10,-9,-9,-9,-9,4,-3,6,5,-6,4,-3,-5,10,10,-5,3,3,4,7,-6,-3,-3,-2,8,9,-5,-2,7,-2,-7,7,2,-4,-3,-2,-1,9,-6,2,8,6,6,-6,2,-9,-9,-1,-8,7,-5,10,8,7,2,-5,-3,-4,9,-1,9,1,8,-9,8,-8,9,-6,9,8,-5,2,4,-6,-5,5,10,-2,-2,7,-8,-1,-4,3,-10,-5,-6,4,2,-4,-8,-10,8,7,4,-8,-8,9,-5,5,3,-2,-8,8,4,-6,-2,-3,10,-8,5,-5,4,4,6,5,-3,10,-1,3,10,-10,-8,5,-2,-2,-9,-9,-3,-2,-4,2,-2,-9,1,-8,3,-5,10,1,-3,6,-2,-6,-8,5,3,-9,10,-8,2,-1,-6,8,-8,-8,1,-2,-1,-7,-7,2,2,7,-1,-10,-2,10,1,6,8,-8,-9,4,-1,10,-5,-9,4,-6,10,-10,9,4,9,-9,5,-7,-2,-6,-2,-10,-9,-2,5,-9,-6,-9,10,-4,5,-5,-3,-5,-3,-7,-7,2,7,10,1,-9,8,-1,3,-7,-1,9,9,8,-6,7,-3,1,2,-2,-1,-2,-8,9,-10,-10,-3,6,4,1,10,-5,-8,3,-8,-5,-5,-1,-9,6,9,2,-6,1,6,-2,-2,9,3,-2,-8,-3,-3,8,7,3,2,7,6,10,1,-8,8,5,-1,4,5,4,4,-1,-6,4,-10,7,-8,-9,8,-2,-7,10,5,7,3,-7,3,-5,-4,8,1,-1,-4,-8,6,-1,-8,-2,6,2,-3,4,8,-7,-10,6,2,-2,6,1,1,-6,2,1,-7,7,1,6,-3,-2,9,6,-3,-8,-10,2,10,2,6,-1,-8,3,-2,-1,-3,9,8,3,-6,2,-9,-9,10,2,7,-1,4,4,-4,-10,-5,10,4,9,-4,8,-5,4,-8,-3,2,8,7,-1,-5,9,7,5,1,-3,-5,8,-8,5,-9,-1,-10,6,-2,-8,7,9,5,7,-10,-2,-3,-4,5,1,8,6,2,7,10,-1,3,10,5,-7,-2,-9,9,8,-5,-9,-10,4,8,7,7,4,-9,-1,4,9,-4,10,4,-1,-6,3,-7,9,-8,-3,6,8,-2,10,-4,-1,-7,-6,-9,-9,7,-3,9,-10,-10,-4,10,2,9,-9,10,3,-1,8,6,-6,-1,7,-3,-7,-10,1,-10,-6,-4,-4,-7,4,8,9,-1,-8,4,-2,-10,1,-9,2,3,10,2,-4,1,-6,-9,-6,10,3,-9,2,-4,-9,-3,-2,-6,-6,6,-7,9,7,-8,10,-7,3,-10,5,-6,-6,-5,7,-1,-2,-4,-6,-2,-5,-6,-10,8,8,6,1,-8,-1,7,8,1,-7,-1,-10,-5,-5,9,-3,9,-6,-5,-7,6,-9,7,1,7,5,-10,-1,1,6,-3,9,-2,-5,4,1,-3,4,-8,-8,-4,3,9,7,-1,-1,1,6,-9,-2,4,-4,6,7,-3,-6,-7,9,4,9,10,-10,2,-4,-9,-5,-2,10,-4,-9,-1,6,-8,7,2,7,-7,-4,-5,9,7,-6,2,-6,-4,-5,-1,-6,-7,-1,8,10,-5,4,3,3,-7,8,7,-8,-8,-6,6,-10,-5,-10,6,-8,-6,-2,-8,-8,6,-6,1,-1,-7,-10,1,3,-8,8,-7,-7,-9,-2,8,1,8,-6,-1,10,6,-10,7,-2,8,-8,-6,-8,8,1,-9,-7,-2,-10,9,-1,-7,1,-6,-8,1,-9,-3,-2,-6,4,-7,-4,3,2,-1,9,3,1,-3,4,-5,2,10,8,9,1,4,-5,-9,-10,-9,10,9,1,-2,-5,-8,6,3,3,-9,-7,10,-9,10,-1,8,-3,7,-8,-1,-8,2,-8,-10,-6,-5,-2,-9,-6,-10,-10,-2,-5,10,-8,8,1,-9,-4,2,-8,5,4,10,-4,8,-1,8,-7,-1,1,-10,7,3,-8,3,2,5,3,5,-10,-3,3,-8,4,-5,9,7,-5,-9,-5,-9,2,4,-3,-7,4,-3,5,-7,-3,4,-10,-9,-1,-7,3,-5,2,-2,-10,8,-1,1,4,-5,-2,8,9,-8,6,-7,1,-3,1,10,6,-5,8,-5,6,9,10,-10,5,-7,3], dtype = "uint32")#candidate|8098|(1210,)|const|uint32
const_8099 = relay.const([[1],[8],[-10],[-5],[-7],[6],[8],[-8],[7],[7],[6],[-9],[-3],[-9],[-8],[7],[-4],[-9],[8],[-1],[-7],[-8],[-6],[4],[-4],[9],[-6],[4],[-9],[10],[-7],[9],[3],[-6],[-2],[-5],[6],[3],[-10],[5],[-6],[3],[-5],[3],[-10],[-1],[9],[-8],[8],[3],[-3],[-6],[-2],[10],[6],[5],[2],[-5],[-4],[10],[3],[-3],[-1],[-7],[7],[6],[10],[8],[3],[-5],[5],[-2],[-7],[3],[7],[-9],[5],[5],[5],[5],[-3],[1],[-5],[7],[-8],[6],[2],[10],[6],[5],[9],[4],[-6],[-9],[10],[-2],[-5],[8],[1],[-7],[-8],[2],[-10],[1],[10],[-9],[-10],[2],[-1],[-4],[7],[6],[8],[-1],[1],[-7],[10],[1],[4],[9],[-8],[4],[1],[-3],[-8],[-7],[-4],[4],[-9],[10],[-4],[9],[6],[7],[-1],[-5],[-3],[8],[-4],[-10],[9],[-7],[10],[-2],[8],[-7],[9],[-6],[5],[7],[10],[-5],[-3],[-8],[-6],[-9],[-6],[6],[8],[5],[2],[-8],[-7],[5],[10],[7],[6],[-2],[7],[-5],[-10],[7],[-3],[-2],[-3],[-6],[-8],[-3],[1],[-8],[-10],[10],[9],[4],[-3],[8],[-5],[1],[-8],[-8],[-1],[-5],[1],[7],[-7],[-2],[10],[-4],[3],[6],[9],[1],[-8],[2],[7],[-8],[-6],[-9],[-2],[8],[1],[-6],[-3],[1],[-8],[-6],[-10],[-1],[-9],[-6],[-4],[-7],[9],[7],[4],[1],[-7],[-6],[7],[10],[4],[-4],[-1],[3],[-1],[10],[-5],[-4],[-3],[-6],[-8],[2],[-5],[-8],[10],[10],[2],[-10],[-3],[6],[-4],[-7],[-3],[3],[-4],[5],[-9],[-9],[-7],[-7],[-5],[-1],[-4],[-1],[-4],[1],[1],[-6],[1],[-2],[-2],[8],[2],[-6],[-4],[-6],[-3],[-5],[5],[-4],[-3],[6],[-4],[-10],[-4],[1],[7],[-7],[-7],[-10],[7],[8],[-2],[-7],[-1],[6],[7],[-9],[4],[8],[-4],[-4],[-8],[-2],[4],[-4],[9],[-1],[8],[-7],[-10],[-2],[7],[-7],[-3],[-1],[-4],[7],[-7],[-7],[-4],[-4],[-4],[3],[-2],[1],[-5],[8],[-6],[-3],[2],[5],[-10],[-9],[5],[10],[6],[2],[10],[4],[-4],[-3],[-9],[1],[7],[-6],[1],[-8],[6],[-9],[-3],[2],[-4],[1],[-8],[5],[1],[-2],[-10],[8],[10],[-10],[-5],[-1],[-6],[-4],[1],[6],[10],[1],[-4],[1],[4],[-6],[8],[-6],[5],[-9],[-2],[3],[-1],[5],[-5],[-9],[-2],[-3],[7],[-10],[9],[7],[-9],[6],[-9],[-6],[5],[1],[6],[-10],[-10],[-6],[-1],[7],[-4],[9],[4],[-1],[-1],[6],[-3],[-2],[-2],[6],[10],[-1],[-7],[1],[7],[-4],[-4],[4],[-2],[-10],[3],[-4],[-10],[5],[-1],[2],[-7],[10],[-9],[1],[-6],[6],[-1],[7],[-7],[-8],[-4],[-7],[1],[4],[2],[-3],[-8],[-4],[1],[-4],[-2],[10],[-3],[7],[-3],[2],[-9],[2],[10],[-2],[-4],[3],[8],[-1],[-3],[-10],[7],[10],[-5],[2],[2],[-7],[-3],[-3],[-7],[-7],[-1],[-2],[-8],[-10],[10],[-9],[7],[9],[-6],[2],[-6],[-1],[10],[-4],[-10],[-9],[-1],[-10],[6],[3],[-7],[4],[-2],[8],[5],[6],[-10],[10],[10],[10],[-5],[10],[10],[9],[9],[3],[-6],[10],[10],[-4],[7],[-6],[-8],[1],[-10],[-7],[-8],[5],[7],[5],[7],[2],[4],[9],[-1],[7],[-4],[6],[-9],[9],[8],[6],[-5],[5],[6],[9],[-9],[-5],[6],[-5],[9],[-4],[-6],[5],[7],[-7],[-2],[-2],[-8],[10],[-8],[-5],[2],[10],[-8],[-5],[-10],[1],[9],[-3],[10],[3],[5],[-8],[4],[-6],[6],[9],[-5],[-6],[-3],[-9],[-9],[-9],[6],[7],[4],[-7],[-5],[3],[-4],[-2],[-10],[8],[10],[-6],[2],[6],[-6],[10],[-8],[10],[-6],[10],[-4],[1],[-2],[8],[-3],[-7],[8],[-6],[1],[-2],[8],[10],[8],[8],[7],[-5],[1],[-8],[-8],[4],[1],[-2],[5],[1],[-9],[-4],[6],[3],[-4],[-8],[-8],[-3],[-9],[-3],[9],[6],[-9],[1],[6],[1],[-5],[-2],[-10],[5],[-5],[6],[-7],[4],[2],[-5],[-3],[1],[1],[7],[3],[3],[-2],[9],[2],[-8],[10],[-10],[-5],[-5],[2],[-7],[10],[8],[-1],[-9],[2],[2],[-8],[5],[-8],[7],[-7],[5],[3],[-8],[-9],[-1],[-5],[10],[-3],[-10],[-2],[-8],[7],[2],[-6],[-3],[10],[-4],[9],[10],[-7],[7],[-10],[-7],[8],[10],[2],[-2],[-1],[4],[5],[-10],[-5],[-10],[6],[-2],[-10],[4],[8],[5],[-1],[-5],[4],[1],[4],[-5],[-3],[6],[1],[4],[-3],[-10],[-7],[-5],[8],[-10],[6],[1],[5],[-7],[9],[7],[-1],[2],[8],[-9],[4],[4],[-4],[6],[-8],[10],[-4],[-5],[-6],[9],[6],[-9],[-9],[-7],[9],[-8],[5],[-4],[-2],[10],[7],[-3],[4],[-1],[2],[-6],[-5],[5],[8],[-3],[-10],[-1],[4],[4],[6],[-5],[8],[5],[7],[10],[3],[8],[-3],[-4],[-5],[-7],[7],[-9],[-3],[-8],[-9],[-3],[2],[-8],[-3],[8],[6],[-6],[9],[9],[6],[-6],[-6],[-5],[-8],[-8],[-7],[-5],[-9],[9],[3],[10],[5],[10],[3],[-7],[-7],[-3],[8],[2],[2],[-4],[-2],[-1],[5],[-3],[-9],[-10],[8],[-8],[1],[-1],[8],[1],[-1],[-3],[-2],[-5],[9],[-5],[5],[-3],[-2],[9],[-2],[10],[-4],[-2],[-2],[-10],[4],[9],[2],[10],[1],[-4],[-3],[1],[7],[-5],[10],[-4],[4],[-9],[-7],[-3],[-2],[-6],[-10],[6],[4],[-8],[-4],[-4],[10],[1],[3],[-4],[-1],[7],[-2],[8],[-7],[-10],[3],[-6],[3],[-3],[2],[9],[-7],[2],[8],[-8],[1],[-7],[-8],[-8],[-1],[1],[4],[10],[3],[6],[1],[7],[-10],[9],[-7],[6],[-4],[2],[8],[-8],[10],[-3],[-9],[2],[8],[-7],[-5],[-8],[-5],[2],[-4],[1],[-3],[-10],[3],[-2],[-7],[7],[-7],[10],[-9],[6],[-3],[-1],[-9],[-4],[3],[-1],[-8],[-9],[-10],[6],[-5],[-5],[-4],[-8],[4],[-8],[-8],[7],[4],[-2],[-7],[-5],[-5],[6],[5],[-3],[4],[3],[-3],[-10],[-6],[-5],[-9],[-4],[4],[-2],[-9],[5],[-1],[-9],[2],[-9],[10],[-2],[-4],[9],[3],[6],[8],[5],[-6],[-4],[3],[-8],[10],[-5],[9],[-7],[-7],[-1],[3],[2],[-6],[8],[-8],[6],[1],[6],[-9],[10],[-2],[-4],[-8],[-10],[-1],[-5],[1],[-2],[6],[10],[4],[-6],[8],[-1],[-8],[8],[6],[3],[-2],[9],[3],[8],[3],[-8],[-10],[3],[-4],[1],[2],[-1],[-2],[4],[-1],[-2],[-9],[-6],[4],[6],[-4],[6],[-5],[-7],[9],[3],[9],[4],[10],[-7],[-5],[4],[9],[8],[-4],[3],[-1],[1],[8],[-4],[-8],[-8],[8],[-8],[2],[-1],[-6],[2],[-5],[-1],[5],[6],[-2],[9],[-8],[7],[-10],[3],[-9],[-6],[8],[-7],[-10],[-2],[-1],[5],[-6],[1],[9],[8],[-5],[-3],[1],[10],[-9],[-2],[-4],[3],[-10],[-1],[7],[-7],[9],[9],[-10],[-5],[-1],[9],[-4],[-4],[9],[-10],[-5],[-9],[8],[-5],[7],[6],[-10],[4],[-3],[6],[-5],[5],[-7],[-2],[3],[9],[7],[-2],[-9],[-9],[-9],[-2],[1],[8],[3],[7],[-8],[-9],[9],[1],[-5],[1],[-8],[6],[10],[-4],[2],[7],[-2],[-9],[-8],[4],[9],[2],[5],[2],[-4],[2],[6],[9],[-5],[6],[-1],[-5],[9],[-9],[-2],[-2],[6],[-9],[-7],[-1],[-5],[-3],[10],[10],[9],[7],[10],[-4],[-7],[5],[-3],[8],[-3],[10],[-1],[-3],[3],[9],[1],[1],[5],[1],[-1],[6],[5],[-5],[10],[-10],[4],[5],[1],[2],[-5],[7],[10],[6],[-7],[5],[-2],[-4],[-2],[-7],[-4],[-9],[9],[4],[3],[3],[-6],[-4],[10],[4],[-8],[5],[-9],[7],[10],[6],[-3],[4],[9],[1],[3],[2],[6],[-8],[7],[-6],[-10],[-7]], dtype = "uint16")#candidate|8099|(1248, 1)|const|uint16
call_8097 = relay.TupleGetItem(func_7951_call(relay.reshape(const_8098.astype('uint32'), [1210,]), relay.reshape(const_8099.astype('uint16'), [1248,]), ), 2)
call_8100 = relay.TupleGetItem(func_7955_call(relay.reshape(const_8098.astype('uint32'), [1210,]), relay.reshape(const_8099.astype('uint16'), [1248,]), ), 2)
bop_8103 = relay.left_shift(const_8098.astype('int32'), const_8099.astype('int32')) # shape=(1248, 1210)
output = relay.Tuple([call_8085,call_8089,var_8090,call_8097,bop_8103,])
output2 = relay.Tuple([call_8086,call_8091,var_8090,call_8100,bop_8103,])
func_8106 = relay.Function([var_8090,], output)
mod['func_8106'] = func_8106
mod = relay.transform.InferType()(mod)
mutated_mod['func_8106'] = func_8106
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8107 = relay.var("var_8107", dtype = "int64", shape = (112, 1))#candidate|8107|(112, 1)|var|int64
func_8106_call = mutated_mod.get_global_var('func_8106')
call_8108 = func_8106_call(var_8107)
output = call_8108
func_8109 = relay.Function([var_8107], output)
mutated_mod['func_8109'] = func_8109
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3377_call = mod.get_global_var('func_3377')
func_3379_call = mutated_mod.get_global_var('func_3379')
call_8119 = func_3377_call()
call_8120 = func_3377_call()
output = relay.Tuple([call_8119,])
output2 = relay.Tuple([call_8120,])
func_8150 = relay.Function([], output)
mod['func_8150'] = func_8150
mod = relay.transform.InferType()(mod)
mutated_mod['func_8150'] = func_8150
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8150_call = mutated_mod.get_global_var('func_8150')
call_8151 = func_8150_call()
output = call_8151
func_8152 = relay.Function([], output)
mutated_mod['func_8152'] = func_8152
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8199 = relay.var("var_8199", dtype = "float32", shape = (8, 6, 6))#candidate|8199|(8, 6, 6)|var|float32
uop_8200 = relay.log2(var_8199.astype('float32')) # shape=(8, 6, 6)
output = uop_8200
output2 = uop_8200
func_8207 = relay.Function([var_8199,], output)
mod['func_8207'] = func_8207
mod = relay.transform.InferType()(mod)
mutated_mod['func_8207'] = func_8207
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8208 = relay.var("var_8208", dtype = "float32", shape = (8, 6, 6))#candidate|8208|(8, 6, 6)|var|float32
func_8207_call = mutated_mod.get_global_var('func_8207')
call_8209 = func_8207_call(var_8208)
output = call_8209
func_8210 = relay.Function([var_8208], output)
mutated_mod['func_8210'] = func_8210
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1693_call = mod.get_global_var('func_1693')
func_1695_call = mutated_mod.get_global_var('func_1695')
call_8235 = relay.TupleGetItem(func_1693_call(), 0)
call_8236 = relay.TupleGetItem(func_1695_call(), 0)
func_1796_call = mod.get_global_var('func_1796')
func_1799_call = mutated_mod.get_global_var('func_1799')
const_8243 = relay.const([[8,7,-5,-10,5,-2,-7,-9,-1,-6,-5,-9,9,-7,2,7,-1,-5,-1,1,4,3,10,-2,8,-3,-2,9,-4,4,10,-3,4,-9,-4,-2,-6,2,10,9,4,3,4,-9,10,4,3,-1,5,3,-10,8,4,2,-3,-4,-2,-3,8,-7,-5,8,-6,8,-9,-3,-10,5,-10,-9,-7,-2,-7,5,8,4,3,-3,3,2,-2,10,-7,-5,-3,2,7,-1,10,10,8,-3,-7,1,10,1,10,6,-8,4]], dtype = "int16")#candidate|8243|(1, 100)|const|int16
call_8242 = relay.TupleGetItem(func_1796_call(relay.reshape(const_8243.astype('int16'), [100,])), 1)
call_8244 = relay.TupleGetItem(func_1799_call(relay.reshape(const_8243.astype('int16'), [100,])), 1)
uop_8245 = relay.sinh(const_8243.astype('float64')) # shape=(1, 100)
uop_8253 = relay.cos(uop_8245.astype('float32')) # shape=(1, 100)
output = relay.Tuple([call_8235,call_8242,uop_8253,])
output2 = relay.Tuple([call_8236,call_8244,uop_8253,])
func_8258 = relay.Function([], output)
mod['func_8258'] = func_8258
mod = relay.transform.InferType()(mod)
mutated_mod['func_8258'] = func_8258
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8258_call = mutated_mod.get_global_var('func_8258')
call_8259 = func_8258_call()
output = call_8259
func_8260 = relay.Function([], output)
mutated_mod['func_8260'] = func_8260
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6998_call = mod.get_global_var('func_6998')
func_7000_call = mutated_mod.get_global_var('func_7000')
call_8264 = func_6998_call()
call_8265 = func_6998_call()
output = call_8264
output2 = call_8265
func_8285 = relay.Function([], output)
mod['func_8285'] = func_8285
mod = relay.transform.InferType()(mod)
output = func_8285()
func_8286 = relay.Function([], output)
mutated_mod['func_8286'] = func_8286
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6030_call = mod.get_global_var('func_6030')
func_6031_call = mutated_mod.get_global_var('func_6031')
call_8289 = func_6030_call()
call_8290 = func_6030_call()
output = call_8289
output2 = call_8290
func_8297 = relay.Function([], output)
mod['func_8297'] = func_8297
mod = relay.transform.InferType()(mod)
mutated_mod['func_8297'] = func_8297
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8297_call = mutated_mod.get_global_var('func_8297')
call_8298 = func_8297_call()
output = call_8298
func_8299 = relay.Function([], output)
mutated_mod['func_8299'] = func_8299
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1565_call = mod.get_global_var('func_1565')
func_1566_call = mutated_mod.get_global_var('func_1566')
call_8300 = relay.TupleGetItem(func_1565_call(), 0)
call_8301 = relay.TupleGetItem(func_1566_call(), 0)
func_3377_call = mod.get_global_var('func_3377')
func_3379_call = mutated_mod.get_global_var('func_3379')
call_8319 = func_3377_call()
call_8320 = func_3377_call()
func_8150_call = mod.get_global_var('func_8150')
func_8152_call = mutated_mod.get_global_var('func_8152')
call_8348 = relay.TupleGetItem(func_8150_call(), 0)
call_8349 = relay.TupleGetItem(func_8152_call(), 0)
output = relay.Tuple([call_8300,call_8319,call_8348,])
output2 = relay.Tuple([call_8301,call_8320,call_8349,])
func_8385 = relay.Function([], output)
mod['func_8385'] = func_8385
mod = relay.transform.InferType()(mod)
output = func_8385()
func_8386 = relay.Function([], output)
mutated_mod['func_8386'] = func_8386
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6781_call = mod.get_global_var('func_6781')
func_6783_call = mutated_mod.get_global_var('func_6783')
call_8387 = relay.TupleGetItem(func_6781_call(), 0)
call_8388 = relay.TupleGetItem(func_6783_call(), 0)
output = relay.Tuple([call_8387,])
output2 = relay.Tuple([call_8388,])
func_8394 = relay.Function([], output)
mod['func_8394'] = func_8394
mod = relay.transform.InferType()(mod)
output = func_8394()
func_8395 = relay.Function([], output)
mutated_mod['func_8395'] = func_8395
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4068_call = mod.get_global_var('func_4068')
func_4070_call = mutated_mod.get_global_var('func_4070')
call_8412 = relay.TupleGetItem(func_4068_call(), 1)
call_8413 = relay.TupleGetItem(func_4070_call(), 1)
output = relay.Tuple([call_8412,])
output2 = relay.Tuple([call_8413,])
func_8419 = relay.Function([], output)
mod['func_8419'] = func_8419
mod = relay.transform.InferType()(mod)
output = func_8419()
func_8420 = relay.Function([], output)
mutated_mod['func_8420'] = func_8420
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3926_call = mod.get_global_var('func_3926')
func_3928_call = mutated_mod.get_global_var('func_3928')
call_8452 = func_3926_call()
call_8453 = func_3926_call()
func_5286_call = mod.get_global_var('func_5286')
func_5287_call = mutated_mod.get_global_var('func_5287')
call_8462 = func_5286_call()
call_8463 = func_5286_call()
output = relay.Tuple([call_8452,call_8462,])
output2 = relay.Tuple([call_8453,call_8463,])
func_8466 = relay.Function([], output)
mod['func_8466'] = func_8466
mod = relay.transform.InferType()(mod)
mutated_mod['func_8466'] = func_8466
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8466_call = mutated_mod.get_global_var('func_8466')
call_8467 = func_8466_call()
output = call_8467
func_8468 = relay.Function([], output)
mutated_mod['func_8468'] = func_8468
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1313_call = mod.get_global_var('func_1313')
func_1315_call = mutated_mod.get_global_var('func_1315')
call_8469 = func_1313_call()
call_8470 = func_1313_call()
output = call_8469
output2 = call_8470
func_8473 = relay.Function([], output)
mod['func_8473'] = func_8473
mod = relay.transform.InferType()(mod)
mutated_mod['func_8473'] = func_8473
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8473_call = mutated_mod.get_global_var('func_8473')
call_8474 = func_8473_call()
output = call_8474
func_8475 = relay.Function([], output)
mutated_mod['func_8475'] = func_8475
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3803_call = mod.get_global_var('func_3803')
func_3805_call = mutated_mod.get_global_var('func_3805')
call_8507 = func_3803_call()
call_8508 = func_3803_call()
output = call_8507
output2 = call_8508
func_8535 = relay.Function([], output)
mod['func_8535'] = func_8535
mod = relay.transform.InferType()(mod)
mutated_mod['func_8535'] = func_8535
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8535_call = mutated_mod.get_global_var('func_8535')
call_8536 = func_8535_call()
output = call_8536
func_8537 = relay.Function([], output)
mutated_mod['func_8537'] = func_8537
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8571 = relay.const([[[-8.163276,9.427663,5.218367,3.653010,7.082923,6.469003,6.474889,4.938037,1.320164,-8.102143],[9.124401,-6.235684,-1.904469,4.042367,-0.981655,-4.190828,-1.248189,-5.486567,-2.207030,8.956839],[2.990376,-0.684190,-6.653714,-0.821113,-3.050523,7.841932,-6.129752,-4.518167,8.519934,3.912277],[-9.412514,-5.150780,8.051077,7.426988,3.511525,-7.483560,2.431354,9.705922,-2.372495,7.165431],[2.374076,-3.771331,-9.759604,-4.909480,-5.046377,3.685152,0.883139,4.715012,-8.686358,0.580479],[-5.574922,-8.247436,-0.880910,8.131427,-4.686618,8.948032,4.708932,2.623371,-5.670202,1.355827],[1.548823,4.638088,5.747888,-2.093269,2.245729,9.550319,6.707397,4.715114,4.784502,-8.927115],[0.335508,9.798024,-8.944048,4.187251,9.349694,3.024941,6.014087,4.276959,-4.942090,0.637645],[0.186637,1.119001,-6.741278,-8.205510,6.265619,4.782486,-3.366251,2.941027,1.212650,0.004116],[-5.025257,-0.422919,-9.037416,-3.921064,1.579643,-4.401024,-4.077800,9.038542,8.109903,-9.733001],[-3.722966,3.092815,7.025434,4.569348,1.114396,6.015443,-2.302575,-8.470334,5.065052,6.857982],[-3.228318,-1.409427,5.373357,9.756680,2.058394,2.618312,-8.366059,5.758845,2.531139,-6.201321],[9.307708,-6.399927,1.400087,-7.165363,9.845846,5.621436,-1.771185,-0.791934,8.374568,-6.140827],[-1.356322,1.332378,-0.944923,-3.919252,8.890736,2.534247,-1.500046,-9.242215,-7.219949,-1.806534]],[[-8.999450,0.372815,4.163581,-9.398626,1.735984,-5.268882,-9.451358,-3.976276,-7.160071,5.351724],[-4.055813,-5.228100,-9.149773,-9.295012,-3.666109,7.645238,2.516950,6.198259,-1.485950,2.488249],[-0.281842,9.398389,6.997448,6.598783,-5.000311,-2.797246,5.664415,9.416108,7.984947,-3.511851],[2.605816,5.258401,-1.312118,9.561609,-1.547362,4.648712,-5.895166,-6.190969,-1.535005,5.022334],[-2.490291,7.505048,8.997841,8.556061,3.582292,-3.354952,5.183063,6.164100,-0.178180,6.689765],[2.511312,4.598555,0.166488,-4.571384,6.660513,1.908065,4.774907,-4.721924,4.078389,3.059820],[5.634232,2.307369,3.114160,8.051958,-1.457761,5.398369,8.214834,5.114789,-2.975753,-7.599430],[-1.366311,5.104696,5.079736,-0.475605,4.773046,2.600127,0.670622,-8.583297,9.924908,-3.170638],[-4.148143,0.438123,-7.249559,-5.359616,-6.296175,-2.153259,-9.889535,-0.548444,4.895995,7.054525],[9.429187,-6.534288,4.407355,8.196566,-9.543957,-7.643852,7.532959,-6.545710,7.479369,-7.456718],[2.642333,-7.387509,-6.562249,5.331156,1.228482,4.100032,5.410771,4.162192,-2.556488,5.258331],[-8.957818,7.018840,-7.025623,6.802422,-9.174844,7.433491,-4.438817,-1.156476,2.598967,9.320944],[-6.911813,3.656375,-5.432030,-1.023376,1.209432,5.621722,-6.537510,-7.031946,-1.200035,-7.564209],[6.605715,-1.801673,2.248101,9.957751,0.814337,0.371681,1.459156,1.137799,5.424390,-8.445283]],[[-7.498664,-1.084546,-6.121881,8.808443,-0.030956,5.167196,6.031229,7.500653,-6.151973,5.583751],[6.360379,5.073724,7.841206,-9.450681,0.382659,-5.680273,-3.344036,-6.377354,8.090784,0.063788],[4.927993,4.400543,3.771305,3.811379,2.870449,2.997170,1.302843,3.093782,2.919182,7.542626],[-3.100164,-2.045748,-5.580469,0.613768,-9.611408,9.116748,-8.107751,5.729737,3.621287,2.072728],[5.100743,-2.741138,-8.714812,-7.764439,8.580891,-1.046154,5.235268,8.617135,6.562533,5.500817],[2.393114,2.337336,5.580152,9.872531,6.451702,-5.793583,4.012940,2.371194,-0.678046,-1.801572],[4.782930,-4.747923,4.032555,-3.077033,-6.854519,7.203189,-9.817135,9.043348,0.695255,-7.945443],[-3.066293,6.616937,7.859860,9.817484,-6.003600,-4.179794,-6.670567,-8.001902,-5.640095,-2.741464],[-2.891198,-2.513822,-2.977648,9.485959,6.927506,-5.546925,-0.510524,6.908080,-3.285806,5.829746],[-1.018101,-6.148437,-8.417204,6.525198,1.184401,-8.685478,9.756460,-4.267005,-5.827354,6.355823],[5.290357,0.169321,1.343686,-1.689927,5.286988,3.825960,7.629659,-8.177936,-2.694504,-0.943579],[4.856909,-1.948459,6.453754,-9.724926,-5.328428,1.473596,7.884214,7.370982,-4.545344,-2.603866],[7.259183,2.633783,9.763365,3.965065,8.781850,0.974911,-0.606528,4.608250,-0.526196,4.942611],[5.648155,2.069096,-0.368921,-6.232591,-7.078387,-8.729289,-7.178822,-4.824093,-8.018624,2.490291]]], dtype = "float32")#candidate|8571|(3, 14, 10)|const|float32
const_8572 = relay.const([[[-3.294922,-9.109810,5.139102,-1.130231,5.715042,-5.952673,-2.376559,2.786459,3.867809,-0.220366],[-3.195954,9.587275,-1.531023,-3.062569,-2.222557,1.712522,3.855615,-0.300143,-3.150083,4.862305],[6.437655,-4.312194,-1.962405,-8.501663,7.750476,-7.196083,1.179175,-3.670791,0.860770,8.026447],[-2.718378,-3.407665,0.635354,9.869896,3.625571,0.446166,-3.255341,6.381993,-0.405235,-0.856161],[-7.442570,3.360172,-0.130121,7.590685,-0.047089,9.351339,8.366758,-3.205993,4.260439,7.751273],[-6.710184,3.088409,-2.367059,-9.570344,-0.735233,0.511964,8.021088,-3.455060,-7.940559,6.639396],[-4.460886,-2.809279,-8.277165,-1.650516,-9.539516,2.513849,0.035204,4.235486,1.611196,-4.805973],[-0.153488,-4.672280,-5.639193,7.322710,-9.025255,6.046504,-7.593836,5.747514,-8.404023,-8.873321],[7.884272,1.669579,-6.389143,-1.222970,-3.156992,8.104509,-3.091993,-6.252655,-3.312966,-8.673612],[-3.873971,3.165984,1.766854,-8.075817,4.422034,-5.014770,-9.017420,5.590977,-0.207128,-9.920689],[-1.595748,8.603458,0.440488,5.918815,9.179701,-7.800103,1.545411,-1.343196,-6.552369,-9.959474],[5.762335,-5.532424,-8.662561,-7.981189,-5.309292,-7.171454,-5.903126,1.053602,8.411230,5.176884],[-2.830623,5.344730,-1.615032,-9.978293,-4.543776,-5.003451,8.865531,3.534834,-4.489422,-1.089735],[-4.270555,0.761755,-7.717557,-3.807537,2.531115,4.589889,6.883713,9.984014,-8.714651,5.497309]],[[-3.747381,0.833733,-9.379279,9.225762,-8.427666,5.059249,-0.320507,-0.971458,-0.604993,9.192534],[-4.848024,4.194032,5.163830,5.838275,5.181641,-5.629139,-8.678263,0.422263,-7.493987,7.020747],[7.796072,3.977802,8.239278,-3.708067,-9.262577,0.036610,-7.983622,-4.414140,0.313705,-5.240654],[-0.731704,-3.571364,-1.218426,-8.847894,6.254600,2.654329,-7.890998,-5.742093,-2.087218,5.924479],[-3.695473,-0.879535,-5.656824,-7.829941,-0.902485,-2.472167,9.366162,-7.579937,-2.128801,-4.826195],[-2.606356,-0.839877,-6.721689,7.605183,-5.308324,8.135276,3.104679,9.397705,6.952844,-5.431443],[-1.773053,-3.389144,7.219251,1.780546,6.030459,1.717567,-2.126613,4.246565,0.234879,2.567776],[5.569178,-1.801824,-1.302716,-1.703079,-5.761834,-6.919728,6.068840,-8.016496,6.215627,3.915877],[-6.080064,-7.391807,-3.913065,0.722491,-3.495071,1.475727,-1.108046,3.614585,-5.429269,-9.567503],[-2.956879,8.553318,7.057846,-0.807904,-2.774059,-5.099852,9.348223,9.416719,-7.967943,1.340246],[2.663356,-6.038617,-8.242301,7.678525,-6.818435,1.771606,-8.384295,-0.791028,6.320929,-3.980685],[-7.210353,-6.922778,5.108919,-8.300976,-3.993335,7.877556,-3.952022,1.677207,1.246461,9.992666],[-7.000641,-6.911050,-4.709751,0.497300,3.766523,9.663296,-7.051998,2.238543,3.944651,9.256457],[8.133593,7.922885,-1.587398,5.726382,8.618548,1.387271,6.473774,-4.595698,7.220669,9.447853]],[[5.453459,-9.938703,-4.670120,-6.425316,5.959189,-3.847380,-8.046552,4.362030,-7.928139,-5.730327],[8.576596,-7.589467,1.721492,-1.382212,-8.941381,2.345942,-1.126763,4.673352,-1.297352,-7.007331],[0.577681,-1.832331,6.083630,-5.964916,-7.849508,6.610702,7.076618,5.679058,2.039807,9.487980],[0.040124,1.887298,-3.482742,7.786320,-4.855694,3.879339,-4.216876,4.273878,9.586596,3.716894],[-0.676693,9.731166,-1.950214,-0.329856,9.097899,3.243115,9.841934,-0.596605,1.306425,-9.319005],[-5.925182,6.802977,6.862126,-4.677624,4.184839,3.785562,-4.075069,4.339525,7.872657,-1.356149],[8.053694,4.418814,9.694322,-7.617710,9.344733,-3.100882,-4.991729,-2.777796,7.711610,-8.084221],[7.388113,-8.252666,0.481330,-0.743571,-7.778735,4.314571,3.038963,-5.938667,-0.745378,3.957924],[5.540386,9.187139,-9.881334,7.209010,-8.969928,-8.128991,1.574909,-8.130921,-6.880481,0.551927],[3.034684,-0.930688,-3.799635,8.498898,5.965180,-8.436867,2.093130,1.191286,-4.718472,7.785014],[-0.269099,-5.799102,-7.285999,-4.625411,1.799316,2.751391,-8.638870,9.428581,-7.276662,-3.153375],[-1.398406,-8.637796,-7.614994,1.625140,7.318188,-5.203967,-1.472672,1.876347,3.446953,6.018036],[-7.995868,1.442345,-4.123363,7.526258,-9.916337,-2.580667,-9.938405,-0.183736,-0.074116,9.031004],[-6.606352,-3.593794,-8.516338,2.395369,1.361612,4.306148,-3.719478,0.646248,1.077733,3.761480]]], dtype = "float32")#candidate|8572|(3, 14, 10)|const|float32
bop_8573 = relay.mod(const_8571.astype('float32'), relay.reshape(const_8572.astype('float32'), relay.shape_of(const_8571))) # shape=(3, 14, 10)
var_8577 = relay.var("var_8577", dtype = "float32", shape = (3, 14, 10))#candidate|8577|(3, 14, 10)|var|float32
bop_8578 = relay.less_equal(const_8571.astype('bool'), relay.reshape(var_8577.astype('bool'), relay.shape_of(const_8571))) # shape=(3, 14, 10)
func_5930_call = mod.get_global_var('func_5930')
func_5931_call = mutated_mod.get_global_var('func_5931')
call_8583 = relay.TupleGetItem(func_5930_call(), 0)
call_8584 = relay.TupleGetItem(func_5931_call(), 0)
output = relay.Tuple([bop_8573,bop_8578,call_8583,])
output2 = relay.Tuple([bop_8573,bop_8578,call_8584,])
func_8587 = relay.Function([var_8577,], output)
mod['func_8587'] = func_8587
mod = relay.transform.InferType()(mod)
var_8588 = relay.var("var_8588", dtype = "float32", shape = (3, 14, 10))#candidate|8588|(3, 14, 10)|var|float32
output = func_8587(var_8588)
func_8589 = relay.Function([var_8588], output)
mutated_mod['func_8589'] = func_8589
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8602 = relay.constdtype = "float64")#candidate|8602|(13, 15, 11)|const|float64
uop_8603 = relay.sigmoid(const_8602.astype('float64')) # shape=(13, 15, 11)
output = relay.Tuple([uop_8603,])
output2 = relay.Tuple([uop_8603,])
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

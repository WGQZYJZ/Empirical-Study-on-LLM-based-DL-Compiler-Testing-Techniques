==========mod==========
#[version = "0.0.5"]
def @func_297(%var_292: Tensor[(10, 13, 14), float32], %var_293: Tensor[(10, 13, 14), float32]) -> Tensor[(10, 13, 14), float32] {
  %0 = cast(%var_293, dtype="float32") /* ty=Tensor[(10, 13, 14), float32] */;
  %1 = shape_of(%var_292, dtype="int32") /* ty=Tensor[(3), int32] */;
  %2 = cast(%var_292, dtype="float32") /* ty=Tensor[(10, 13, 14), float32] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%2, %3) /* ty=Tensor[(10, 13, 14), float32] */
}

def @func_2910(%var_2902: Tensor[(15, 7, 14), bool]) -> (Tensor[(15, 7, 14), uint8], Tensor[(15, 7, 14), float64]) {
  %4 = @func_1438() /* ty=(Tensor[(15, 7, 14), bool],) */;
  %5 = %4.0;
  %6 = cast(%var_2902, dtype="uint8") /* ty=Tensor[(15, 7, 14), uint8] */;
  %7 = shape_of(%5, dtype="int32") /* ty=Tensor[(3), int32] */;
  %8 = cast(%5, dtype="uint8") /* ty=Tensor[(15, 7, 14), uint8] */;
  %9 = dyn.reshape(%6, %7, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %10 = cast(%5, dtype="float64") /* ty=Tensor[(15, 7, 14), float64] */;
  %11 = multiply(%8, %9) /* ty=Tensor[(15, 7, 14), uint8] */;
  %12 = log(%10) /* ty=Tensor[(15, 7, 14), float64] */;
  (%11, %12)
}

def @func_5638(%var_5596: Tensor[(14, 15, 14), int32]) -> (Tensor[(14, 15, 14), uint8], Tensor[(15, 7, 14), bool], Tensor[(10, 13, 14), float32]) {
  %13 = @func_4318() /* ty=(Tensor[(14, 15, 14), int32], Tensor[(8), float32]) */;
  %14 = %13.0;
  %15 = cast(%var_5596, dtype="uint8") /* ty=Tensor[(14, 15, 14), uint8] */;
  %16 = shape_of(%14, dtype="int32") /* ty=Tensor[(3), int32] */;
  %17 = cast(%14, dtype="uint8") /* ty=Tensor[(14, 15, 14), uint8] */;
  %18 = dyn.reshape(%15, %16, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %19 = @func_3882() /* ty=(Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), float64], Tensor[(10, 13, 14), float32], Tensor[(1820), float32]) */;
  %20 = subtract(%17, %18) /* ty=Tensor[(14, 15, 14), uint8] */;
  %21 = @func_3526() /* ty=Tensor[(15, 7, 14), bool] */;
  %22 = %19.2;
  (%20, %21, %22)
}

def @func_5852() -> (Tensor[(14, 15, 14), int32],) {
  %23 = @func_3803() /* ty=Tensor[(14, 15, 14), int32] */;
  (%23,)
}

def @func_6709() -> Tensor[(15, 7, 14), bool] {
  @func_1313() /* ty=Tensor[(15, 7, 14), bool] */
}

def @func_6261() -> Tensor[(15, 7, 14), float32] {
  %24 = @func_1565() /* ty=(Tensor[(15, 7, 14), float32],) */;
  %24.0
}

def @func_2974() -> Tensor[(15, 7, 14), bool] {
  @func_2161() /* ty=Tensor[(15, 7, 14), bool] */
}

def @func_7242(%var_7234: Tensor[(231), int16]) -> (Tensor[(14, 15, 14), int32], Tensor[(15, 7, 14), bool], Tensor[(231), int16], Tensor[(231), int16]) {
  %25 = @func_5852() /* ty=(Tensor[(14, 15, 14), int32],) */;
  %26 = @func_3085() /* ty=(Tensor[(10, 12, 9), float64], Tensor[(15, 7, 14), bool]) */;
  %27 = cast(%var_7234, dtype="int16") /* ty=Tensor[(231), int16] */;
  %28 = reshape(%27, newshape=[231]) /* ty=Tensor[(231), int16] */;
  %29 = @func_4956(%28) /* ty=(Tensor[(15, 7, 14), bool], Tensor[(100), int16], Tensor[(7, 3, 11), int16], Tensor[(231), int16]) */;
  %30 = %25.0;
  %31 = %26.1;
  %32 = %29.3;
  (%30, %31, %32, %var_7234)
}

def @func_2413(%var_2345: Tensor[(5, 3, 8), int32]) -> (Tensor[(5, 3, 8), bool], Tensor[(5, 3, 8), float64]) {
  %33 = cast(meta[relay.Constant][0] /* ty=Tensor[(5, 3, 8), int32] */, dtype="bool") /* ty=Tensor[(5, 3, 8), bool] */;
  %34 = shape_of(%var_2345, dtype="int32") /* ty=Tensor[(3), int32] */;
  %35 = cast(%var_2345, dtype="bool") /* ty=Tensor[(5, 3, 8), bool] */;
  %36 = dyn.reshape(%33, %34, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %37 = cast(meta[relay.Constant][1] /* ty=Tensor[(5, 3, 8), int32] */, dtype="int32") /* ty=Tensor[(5, 3, 8), int32] */;
  %38 = shape_of(%var_2345, dtype="int32") /* ty=Tensor[(3), int32] */;
  %39 = cast(%var_2345, dtype="int32") /* ty=Tensor[(5, 3, 8), int32] */;
  %40 = dyn.reshape(%37, %38, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %41 = bitwise_xor(%39, %40) /* ty=Tensor[(5, 3, 8), int32] */;
  %42 = cast(%41, dtype="float64") /* ty=Tensor[(5, 3, 8), float64] */;
  %43 = rsqrt(%42) /* ty=Tensor[(5, 3, 8), float64] */;
  %44 = cast(%41, dtype="int64") /* ty=Tensor[(5, 3, 8), int64] */;
  %45 = shape_of(%43, dtype="int32") /* ty=Tensor[(3), int32] */;
  %46 = cast(%43, dtype="int64") /* ty=Tensor[(5, 3, 8), int64] */;
  %47 = dyn.reshape(%44, %45, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %48 = left_shift(%46, %47) /* ty=Tensor[(5, 3, 8), int64] */;
  %49 = cast(%48, dtype="float32") /* ty=Tensor[(5, 3, 8), float32] */;
  %50 = shape_of(%43, dtype="int32") /* ty=Tensor[(3), int32] */;
  %51 = cast(%43, dtype="float32") /* ty=Tensor[(5, 3, 8), float32] */;
  %52 = dyn.reshape(%49, %50, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %53 = floor_divide(%51, %52) /* ty=Tensor[(5, 3, 8), float32] */;
  %54 = cast(%53, dtype="float64") /* ty=Tensor[(5, 3, 8), float64] */;
  %55 = shape_of(%43, dtype="int32") /* ty=Tensor[(3), int32] */;
  %56 = cast(%43, dtype="float64") /* ty=Tensor[(5, 3, 8), float64] */;
  %57 = dyn.reshape(%54, %55, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %58 = less(%35, %36) /* ty=Tensor[(5, 3, 8), bool] */;
  %59 = divide(%56, %57) /* ty=Tensor[(5, 3, 8), float64] */;
  (%58, %59)
}

def @func_6670() -> (Tensor[(7, 10, 2), float64], Tensor[(15, 7, 14), bool], Tensor[(2940), int32]) {
  %60 = @func_3442() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %61 = cast(meta[relay.Constant][2] /* ty=Tensor[(2940), int32] */, dtype="int32") /* ty=Tensor[(2940), int32] */;
  %62 = reshape(%61, newshape=[14, 15, 14]) /* ty=Tensor[(14, 15, 14), int32] */;
  %63 = @func_4854(%62) /* ty=(Tensor[(15, 7, 14), bool], Tensor[(14, 15, 14), float32], Tensor[(14, 15, 14), int32]) */;
  %64 = %60.0;
  %65 = %63.0;
  (%64, %65, meta[relay.Constant][2] /* ty=Tensor[(2940), int32] */)
}

def @func_4770() -> Tensor[(14, 15, 14), int32] {
  %66 = @func_4185() /* ty=(Tensor[(15, 7, 14), bool], Tensor[(14, 15, 14), int32], Tensor[(14, 15, 14), int32]) */;
  %66.2
}

def @func_4253(%var_4242: Tensor[(100), int16]) -> (Tensor[(10, 12, 9), float64], Tensor[(14, 2, 4), bool], Tensor[(50), int16], Tensor[(100), int16], Tensor[(112), int64], Tensor[(15, 7, 14), int16], Tensor[(7, 3, 11), int16], Tensor[(231), int16]) {
  %67 = @func_1693() /* ty=(Tensor[(10, 12, 9), float64],) */;
  %68 = cast(meta[relay.Constant][3] /* ty=Tensor[(50), int16] */, dtype="int16") /* ty=Tensor[(50), int16] */;
  %69 = cast(%var_4242, dtype="int16") /* ty=Tensor[(100), int16] */;
  %70 = cast(meta[relay.Constant][4] /* ty=Tensor[(112), int64] */, dtype="int64") /* ty=Tensor[(112), int64] */;
  %71 = reshape(%68, newshape=[5, 1, 10]) /* ty=Tensor[(5, 1, 10), int16] */;
  %72 = reshape(%69, newshape=[5, 2, 10]) /* ty=Tensor[(5, 2, 10), int16] */;
  %73 = reshape(%70, newshape=[112]) /* ty=Tensor[(112), int64] */;
  %74 = @func_476(%71, %72, %73) /* ty=(Tensor[(5, 2, 10), bool], Tensor[(14, 2, 4), bool], Tensor[(112), int64]) */;
  %75 = @func_1313() /* ty=Tensor[(15, 7, 14), bool] */;
  %76 = @func_3170() /* ty=Tensor[(15, 7, 14), bool] */;
  %77 = cast(%76, dtype="int16") /* ty=Tensor[(15, 7, 14), int16] */;
  %78 = shape_of(%75, dtype="int32") /* ty=Tensor[(3), int32] */;
  %79 = cast(%75, dtype="int16") /* ty=Tensor[(15, 7, 14), int16] */;
  %80 = dyn.reshape(%77, %78, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %81 = cast(meta[relay.Constant][5] /* ty=Tensor[(231), int16] */, dtype="int16") /* ty=Tensor[(231), int16] */;
  %82 = cast(meta[relay.Constant][5] /* ty=Tensor[(231), int16] */, dtype="int16") /* ty=Tensor[(231), int16] */;
  %83 = reshape(%81, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), int16] */;
  %84 = reshape(%82, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), int16] */;
  %85 = @func_3640(%83, %84) /* ty=(Tensor[(7, 3, 11), int16],) */;
  %86 = %67.0;
  %87 = %74.1;
  %88 = bitwise_and(%79, %80) /* ty=Tensor[(15, 7, 14), int16] */;
  %89 = %85.0;
  (%86, %87, meta[relay.Constant][3] /* ty=Tensor[(50), int16] */, %var_4242, meta[relay.Constant][4] /* ty=Tensor[(112), int64] */, %88, %89, meta[relay.Constant][5] /* ty=Tensor[(231), int16] */)
}

def @func_1951() -> (Tensor[(15, 7, 14), bool],) {
  %90 = @func_1473() /* ty=Tensor[(15, 7, 14), bool] */;
  (%90,)
}

def @func_535(%var_506: Tensor[(7, 2, 11), float32], %var_526: Tensor[(100), int16], %var_527: Tensor[(112), int64]) -> (Tensor[(7, 2, 11), float32], Tensor[(112), int64], Tensor[(50), int16], Tensor[(100), int16], Tensor[(112), int64], Tensor[(14, 2, 4), bool]) {
  %91 = cast(%var_506, dtype="float32") /* ty=Tensor[(7, 2, 11), float32] */;
  %92 = cast(meta[relay.Constant][6] /* ty=Tensor[(50), int16] */, dtype="int16") /* ty=Tensor[(50), int16] */;
  %93 = cast(%var_526, dtype="int16") /* ty=Tensor[(100), int16] */;
  %94 = cast(%var_527, dtype="int64") /* ty=Tensor[(112), int64] */;
  %95 = reshape(%92, newshape=[5, 1, 10]) /* ty=Tensor[(5, 1, 10), int16] */;
  %96 = reshape(%93, newshape=[5, 2, 10]) /* ty=Tensor[(5, 2, 10), int16] */;
  %97 = reshape(%94, newshape=[112]) /* ty=Tensor[(112), int64] */;
  %98 = @func_476(%95, %96, %97) /* ty=(Tensor[(5, 2, 10), bool], Tensor[(14, 2, 4), bool], Tensor[(112), int64]) */;
  %99 = cast(meta[relay.Constant][6] /* ty=Tensor[(50), int16] */, dtype="int16") /* ty=Tensor[(50), int16] */;
  %100 = cast(%var_526, dtype="int16") /* ty=Tensor[(100), int16] */;
  %101 = cast(%var_527, dtype="int64") /* ty=Tensor[(112), int64] */;
  %102 = reshape(%99, newshape=[5, 1, 10]) /* ty=Tensor[(5, 1, 10), int16] */;
  %103 = reshape(%100, newshape=[5, 2, 10]) /* ty=Tensor[(5, 2, 10), int16] */;
  %104 = reshape(%101, newshape=[112]) /* ty=Tensor[(112), int64] */;
  %105 = @func_476(%102, %103, %104) /* ty=(Tensor[(5, 2, 10), bool], Tensor[(14, 2, 4), bool], Tensor[(112), int64]) */;
  %106 = atanh(%91) /* ty=Tensor[(7, 2, 11), float32] */;
  %107 = %98.2;
  %108 = %105.1;
  (%106, %107, meta[relay.Constant][6] /* ty=Tensor[(50), int16] */, %var_526, %var_527, %108)
}

def @func_4185() -> (Tensor[(15, 7, 14), bool], Tensor[(14, 15, 14), int32], Tensor[(14, 15, 14), int32]) {
  %109 = @func_2222() /* ty=(Tensor[(15, 7, 14), bool],) */;
  %110 = @func_3803() /* ty=Tensor[(14, 15, 14), int32] */;
  %111 = cast(%110, dtype="int32") /* ty=Tensor[(14, 15, 14), int32] */;
  %112 = cast(%110, dtype="uint16") /* ty=Tensor[(14, 15, 14), uint16] */;
  %113 = reshape(%111, newshape=[14, 15, 14]) /* ty=Tensor[(14, 15, 14), int32] */;
  %114 = reshape(%112, newshape=[14, 15, 14]) /* ty=Tensor[(14, 15, 14), uint16] */;
  %115 = %109.0;
  %116 = @func_3128(%113, %114) /* ty=Tensor[(14, 15, 14), int32] */;
  (%115, %110, %116)
}

def @func_8068(%var_8058: Tensor[(10, 12, 9), float64], %var_8066: Tensor[(1210, 1), uint32]) -> (Tensor[(10, 12, 9), float64], Tensor[(15, 7, 14), float32], Tensor[(11, 10, 11), uint32], Tensor[(1210, 1), uint32]) {
  %117 = @func_1693() /* ty=(Tensor[(10, 12, 9), float64],) */;
  %118 = %117.0;
  %119 = cast(%var_8058, dtype="float64") /* ty=Tensor[(10, 12, 9), float64] */;
  %120 = shape_of(%118, dtype="int32") /* ty=Tensor[(3), int32] */;
  %121 = cast(%118, dtype="float64") /* ty=Tensor[(10, 12, 9), float64] */;
  %122 = dyn.reshape(%119, %120, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %123 = cast(%var_8066, dtype="uint32") /* ty=Tensor[(1210, 1), uint32] */;
  %124 = cast(%var_8066, dtype="uint32") /* ty=Tensor[(1210, 1), uint32] */;
  %125 = reshape(%123, newshape=[11, 10, 11]) /* ty=Tensor[(11, 10, 11), uint32] */;
  %126 = reshape(%124, newshape=[11, 10, 11]) /* ty=Tensor[(11, 10, 11), uint32] */;
  %127 = power(%121, %122) /* ty=Tensor[(10, 12, 9), float64] */;
  %128 = @func_6920() /* ty=Tensor[(15, 7, 14), float32] */;
  %129 = @func_1534(%125, %126) /* ty=Tensor[(11, 10, 11), uint32] */;
  (%127, %128, %129, %var_8066)
}

def @main() -> (Tensor[(13, 15, 11), float64],) {
  %130 = cast(meta[relay.Constant][7] /* ty=Tensor[(13, 15, 11), float64] */, dtype="float64") /* ty=Tensor[(13, 15, 11), float64] */;
  %131 = sigmoid(%130) /* ty=Tensor[(13, 15, 11), float64] */;
  (%131,)
}

def @func_6781() -> (Tensor[(14, 15, 14), int32],) {
  %132 = @func_5852() /* ty=(Tensor[(14, 15, 14), int32],) */;
  %133 = %132.0;
  (%133,)
}

def @func_3260(%var_3251: Tensor[(10, 12, 9), float64]) -> (Tensor[(8, 2, 2), float64], Tensor[(4, 8), float32], Tensor[(10, 12, 9), float32]) {
  %134 = cast(meta[relay.Constant][8] /* ty=Tensor[(4, 8), float32] */, dtype="float32") /* ty=Tensor[(4, 8), float32] */;
  %135 = reshape(%134, newshape=[8, 2, 2]) /* ty=Tensor[(8, 2, 2), float32] */;
  %136 = @func_1693() /* ty=(Tensor[(10, 12, 9), float64],) */;
  %137 = %136.0;
  %138 = cast(%var_3251, dtype="float32") /* ty=Tensor[(10, 12, 9), float32] */;
  %139 = shape_of(%137, dtype="int32") /* ty=Tensor[(3), int32] */;
  %140 = cast(%137, dtype="float32") /* ty=Tensor[(10, 12, 9), float32] */;
  %141 = dyn.reshape(%138, %139, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %142 = @func_1828(%135) /* ty=Tensor[(8, 2, 2), float64] */;
  %143 = maximum(%140, %141) /* ty=Tensor[(10, 12, 9), float32] */;
  (%142, meta[relay.Constant][8] /* ty=Tensor[(4, 8), float32] */, %143)
}

def @func_5819() -> (Tensor[(14, 15, 14), int32],) {
  %144 = @func_1680() /* ty=Tensor[(14, 15, 14), int32] */;
  (%144,)
}

def @func_1852(%var_1847: Tensor[(50), int16], %var_1848: Tensor[(50, 2), int16]) -> (Tensor[(15, 7, 14), float32], Tensor[(14, 15, 14), float64], Tensor[(5, 2, 10), bool], Tensor[(50), int16], Tensor[(50, 2), int16], Tensor[(112, 1), int64]) {
  %145 = @func_1565() /* ty=(Tensor[(15, 7, 14), float32],) */;
  %146 = @func_1680() /* ty=Tensor[(14, 15, 14), int32] */;
  %147 = cast(%146, dtype="float64") /* ty=Tensor[(14, 15, 14), float64] */;
  %148 = cast(%var_1847, dtype="int16") /* ty=Tensor[(50), int16] */;
  %149 = cast(%var_1848, dtype="int16") /* ty=Tensor[(50, 2), int16] */;
  %150 = cast(meta[relay.Constant][9] /* ty=Tensor[(112, 1), int64] */, dtype="int64") /* ty=Tensor[(112, 1), int64] */;
  %151 = reshape(%148, newshape=[5, 1, 10]) /* ty=Tensor[(5, 1, 10), int16] */;
  %152 = reshape(%149, newshape=[5, 2, 10]) /* ty=Tensor[(5, 2, 10), int16] */;
  %153 = reshape(%150, newshape=[112]) /* ty=Tensor[(112), int64] */;
  %154 = @func_476(%151, %152, %153) /* ty=(Tensor[(5, 2, 10), bool], Tensor[(14, 2, 4), bool], Tensor[(112), int64]) */;
  %155 = %145.0;
  %156 = cos(%147) /* ty=Tensor[(14, 15, 14), float64] */;
  %157 = %154.0;
  (%155, %156, %157, %var_1847, %var_1848, meta[relay.Constant][9] /* ty=Tensor[(112, 1), int64] */)
}

def @func_1796(%var_1776: Tensor[(100), int16]) -> (Tensor[(15, 7, 14), bool], Tensor[(14, 2, 4), bool], Tensor[(154), float32], Tensor[(100), int16], Tensor[(112), int64], Tensor[(15, 7, 14), float32]) {
  %158 = cast(meta[relay.Constant][10] /* ty=Tensor[(154), float32] */, dtype="float32") /* ty=Tensor[(154), float32] */;
  %159 = cast(%var_1776, dtype="int16") /* ty=Tensor[(100), int16] */;
  %160 = cast(meta[relay.Constant][11] /* ty=Tensor[(112), int64] */, dtype="int64") /* ty=Tensor[(112), int64] */;
  %161 = reshape(%158, newshape=[7, 2, 11]) /* ty=Tensor[(7, 2, 11), float32] */;
  %162 = reshape(%159, newshape=[100]) /* ty=Tensor[(100), int16] */;
  %163 = reshape(%160, newshape=[112]) /* ty=Tensor[(112), int64] */;
  %164 = @func_535(%161, %162, %163) /* ty=(Tensor[(7, 2, 11), float32], Tensor[(112), int64], Tensor[(50), int16], Tensor[(100), int16], Tensor[(112), int64], Tensor[(14, 2, 4), bool]) */;
  %165 = @func_1565() /* ty=(Tensor[(15, 7, 14), float32],) */;
  %166 = @func_1473() /* ty=Tensor[(15, 7, 14), bool] */;
  %167 = %164.5;
  %168 = %165.0;
  (%166, %167, meta[relay.Constant][10] /* ty=Tensor[(154), float32] */, %var_1776, meta[relay.Constant][11] /* ty=Tensor[(112), int64] */, %168)
}

def @func_6422(%var_6420: Tensor[(60, 2), int32]) -> (Tensor[(15, 7, 14), float32], Tensor[(5, 3, 8), bool], Tensor[(60, 2), int32]) {
  %169 = cast(%var_6420, dtype="int32") /* ty=Tensor[(60, 2), int32] */;
  %170 = reshape(%169, newshape=[5, 3, 8]) /* ty=Tensor[(5, 3, 8), int32] */;
  %171 = @func_2413(%170) /* ty=(Tensor[(5, 3, 8), bool], Tensor[(5, 3, 8), float64]) */;
  %172 = @func_6261() /* ty=Tensor[(15, 7, 14), float32] */;
  %173 = %171.0;
  (%172, %173, %var_6420)
}

def @func_3098(%var_3087: Tensor[(8, 12, 13), uint16], %var_3088: Tensor[(8, 12, 13), uint16]) -> Tensor[(8, 12, 13), bool] {
  %174 = cast(%var_3088, dtype="bool") /* ty=Tensor[(8, 12, 13), bool] */;
  %175 = shape_of(%var_3087, dtype="int32") /* ty=Tensor[(3), int32] */;
  %176 = cast(%var_3087, dtype="bool") /* ty=Tensor[(8, 12, 13), bool] */;
  %177 = dyn.reshape(%174, %175, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%176, %177) /* ty=Tensor[(8, 12, 13), bool] */
}

def @func_8385() -> (Tensor[(15, 7, 14), float32], Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), bool]) {
  %178 = @func_1565() /* ty=(Tensor[(15, 7, 14), float32],) */;
  %179 = @func_8150() /* ty=(Tensor[(15, 7, 14), bool],) */;
  %180 = %178.0;
  %181 = @func_3377() /* ty=Tensor[(15, 7, 14), bool] */;
  %182 = %179.0;
  (%180, %181, %182)
}

def @func_4814() -> Tensor[(15, 7, 14), float32] {
  @func_1406() /* ty=Tensor[(15, 7, 14), float32] */
}

def @func_7713() -> Tensor[(15, 7, 14), bool] {
  @func_4323() /* ty=Tensor[(15, 7, 14), bool] */
}

def @func_7487() -> Tensor[(14, 15, 14), int32] {
  %183 = @func_6781() /* ty=(Tensor[(14, 15, 14), int32],) */;
  %183.0
}

def @func_3926() -> Tensor[(15, 7, 14), bool] {
  %184 = @func_2229() /* ty=(Tensor[(15, 7, 14), bool],) */;
  %184.0
}

def @func_7333(%var_7330: Tensor[(4, 1, 1), float32]) -> (Tensor[(4, 1, 1), float32],) {
  %185 = cast(%var_7330, dtype="float32") /* ty=Tensor[(4, 1, 1), float32] */;
  %186 = tan(%185) /* ty=Tensor[(4, 1, 1), float32] */;
  (%186,)
}

def @func_8587(%var_8577: Tensor[(3, 14, 10), float32]) -> (Tensor[(3, 14, 10), float32], Tensor[(3, 14, 10), bool], Tensor[(15, 7, 14), bool]) {
  %187 = cast(meta[relay.Constant][13] /* ty=Tensor[(3, 14, 10), float32] */, dtype="float32") /* ty=Tensor[(3, 14, 10), float32] */;
  %188 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(3, 14, 10), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %189 = cast(meta[relay.Constant][12] /* ty=Tensor[(3, 14, 10), float32] */, dtype="float32") /* ty=Tensor[(3, 14, 10), float32] */;
  %190 = dyn.reshape(%187, %188, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %191 = cast(%var_8577, dtype="bool") /* ty=Tensor[(3, 14, 10), bool] */;
  %192 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(3, 14, 10), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %193 = cast(meta[relay.Constant][12] /* ty=Tensor[(3, 14, 10), float32] */, dtype="bool") /* ty=Tensor[(3, 14, 10), bool] */;
  %194 = dyn.reshape(%191, %192, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %195 = @func_5930() /* ty=(Tensor[(15, 7, 14), bool],) */;
  %196 = mod(%189, %190) /* ty=Tensor[(3, 14, 10), float32] */;
  %197 = less_equal(%193, %194) /* ty=Tensor[(3, 14, 10), bool] */;
  %198 = %195.0;
  (%196, %197, %198)
}

def @func_3640(%var_3633: Tensor[(7, 3, 11), int16], %var_3634: Tensor[(7, 3, 11), int16]) -> (Tensor[(7, 3, 11), int16],) {
  %199 = cast(%var_3634, dtype="int16") /* ty=Tensor[(7, 3, 11), int16] */;
  %200 = shape_of(%var_3633, dtype="int32") /* ty=Tensor[(3), int32] */;
  %201 = cast(%var_3633, dtype="int16") /* ty=Tensor[(7, 3, 11), int16] */;
  %202 = dyn.reshape(%199, %200, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %203 = right_shift(%201, %202) /* ty=Tensor[(7, 3, 11), int16] */;
  (%203,)
}

def @func_8285() -> Tensor[(15, 7, 14), float64] {
  @func_6998() /* ty=Tensor[(15, 7, 14), float64] */
}

def @func_1473() -> Tensor[(15, 7, 14), bool] {
  %204 = @func_1438() /* ty=(Tensor[(15, 7, 14), bool],) */;
  %204.0
}

def @func_4796() -> (Tensor[(10, 12, 9), float64],) {
  %205 = @func_1693() /* ty=(Tensor[(10, 12, 9), float64],) */;
  %206 = %205.0;
  (%206,)
}

def @func_4854(%var_4842: Tensor[(14, 15, 14), int32]) -> (Tensor[(15, 7, 14), bool], Tensor[(14, 15, 14), float32], Tensor[(14, 15, 14), int32]) {
  %207 = @func_3814() /* ty=Tensor[(14, 15, 14), int32] */;
  %208 = cast(%var_4842, dtype="float32") /* ty=Tensor[(14, 15, 14), float32] */;
  %209 = shape_of(%207, dtype="int32") /* ty=Tensor[(3), int32] */;
  %210 = cast(%207, dtype="float32") /* ty=Tensor[(14, 15, 14), float32] */;
  %211 = dyn.reshape(%208, %209, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %212 = @func_4323() /* ty=Tensor[(15, 7, 14), bool] */;
  %213 = divide(%210, %211) /* ty=Tensor[(14, 15, 14), float32] */;
  %214 = @func_3814() /* ty=Tensor[(14, 15, 14), int32] */;
  (%212, %213, %214)
}

def @func_2845(%var_2791: Tensor[(112), int64], %var_2824: Tensor[(120), int32]) -> (Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), float32], Tensor[(14, 2, 4), int64], Tensor[(112), int64], Tensor[(11, 10, 11), uint32], Tensor[(1210), uint32], Tensor[(5, 3, 8), bool], Tensor[(120), int32], Tensor[(10, 13, 14), float32], Tensor[(1820), float32]) {
  %215 = cast(%var_2791, dtype="int64") /* ty=Tensor[(112), int64] */;
  %216 = reshape(%215, newshape=[14, 2, 4]) /* ty=Tensor[(14, 2, 4), int64] */;
  %217 = @func_450(%216) /* ty=(Tensor[(14, 2, 4), int64], Tensor[(14, 2, 4), bool]) */;
  %218 = cast(meta[relay.Constant][14] /* ty=Tensor[(1210), uint32] */, dtype="uint32") /* ty=Tensor[(1210), uint32] */;
  %219 = cast(meta[relay.Constant][14] /* ty=Tensor[(1210), uint32] */, dtype="uint32") /* ty=Tensor[(1210), uint32] */;
  %220 = reshape(%218, newshape=[11, 10, 11]) /* ty=Tensor[(11, 10, 11), uint32] */;
  %221 = reshape(%219, newshape=[11, 10, 11]) /* ty=Tensor[(11, 10, 11), uint32] */;
  %222 = cast(%var_2824, dtype="int32") /* ty=Tensor[(120), int32] */;
  %223 = reshape(%222, newshape=[5, 3, 8]) /* ty=Tensor[(5, 3, 8), int32] */;
  %224 = @func_2413(%223) /* ty=(Tensor[(5, 3, 8), bool], Tensor[(5, 3, 8), float64]) */;
  %225 = cast(meta[relay.Constant][15] /* ty=Tensor[(1820), float32] */, dtype="float32") /* ty=Tensor[(1820), float32] */;
  %226 = cast(meta[relay.Constant][15] /* ty=Tensor[(1820), float32] */, dtype="float32") /* ty=Tensor[(1820), float32] */;
  %227 = reshape(%225, newshape=[10, 13, 14]) /* ty=Tensor[(10, 13, 14), float32] */;
  %228 = reshape(%226, newshape=[10, 13, 14]) /* ty=Tensor[(10, 13, 14), float32] */;
  %229 = @func_1473() /* ty=Tensor[(15, 7, 14), bool] */;
  %230 = @func_1337() /* ty=Tensor[(15, 7, 14), float32] */;
  %231 = %217.0;
  %232 = @func_1534(%220, %221) /* ty=Tensor[(11, 10, 11), uint32] */;
  %233 = %224.0;
  %234 = @func_297(%227, %228) /* ty=Tensor[(10, 13, 14), float32] */;
  (%229, %230, %231, %var_2791, %232, meta[relay.Constant][14] /* ty=Tensor[(1210), uint32] */, %233, %var_2824, %234, meta[relay.Constant][15] /* ty=Tensor[(1820), float32] */)
}

def @func_5045() -> (Tensor[(10, 12, 9), float32],) {
  %235 = @func_4796() /* ty=(Tensor[(10, 12, 9), float64],) */;
  %236 = %235.0;
  %237 = cast(%236, dtype="float32") /* ty=Tensor[(10, 12, 9), float32] */;
  %238 = sin(%237) /* ty=Tensor[(10, 12, 9), float32] */;
  (%238,)
}

def @func_5342() -> (Tensor[(9, 11, 6), int32], Tensor[(15, 7, 14), bool]) {
  %239 = cast(meta[relay.Constant][16] /* ty=Tensor[(9, 11, 6), float64] */, dtype="float64") /* ty=Tensor[(9, 11, 6), float64] */;
  %240 = exp(%239) /* ty=Tensor[(9, 11, 6), float64] */;
  %241 = cast(meta[relay.Constant][16] /* ty=Tensor[(9, 11, 6), float64] */, dtype="int32") /* ty=Tensor[(9, 11, 6), int32] */;
  %242 = shape_of(%240, dtype="int32") /* ty=Tensor[(3), int32] */;
  %243 = cast(%240, dtype="int32") /* ty=Tensor[(9, 11, 6), int32] */;
  %244 = dyn.reshape(%241, %242, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %245 = @func_3191() /* ty=(Tensor[(15, 7, 14), bool],) */;
  %246 = left_shift(%243, %244) /* ty=Tensor[(9, 11, 6), int32] */;
  %247 = %245.0;
  (%246, %247)
}

def @func_3803() -> Tensor[(14, 15, 14), int32] {
  @func_1680() /* ty=Tensor[(14, 15, 14), int32] */
}

def @func_2763(%var_2744: Tensor[(15, 7, 14), bool]) -> (Tensor[(15, 7, 14), uint8], Tensor[(1210), bool], float64, Tensor[(208), float64], Tensor[(1210), uint32]) {
  %248 = @func_2222() /* ty=(Tensor[(15, 7, 14), bool],) */;
  %249 = %248.0;
  %250 = cast(%var_2744, dtype="uint8") /* ty=Tensor[(15, 7, 14), uint8] */;
  %251 = shape_of(%249, dtype="int32") /* ty=Tensor[(3), int32] */;
  %252 = cast(%249, dtype="uint8") /* ty=Tensor[(15, 7, 14), uint8] */;
  %253 = dyn.reshape(%250, %251, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %254 = cast(5.31976f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %255 = cast(meta[relay.Constant][17] /* ty=Tensor[(208), float64] */, dtype="float64") /* ty=Tensor[(208), float64] */;
  %256 = cast(meta[relay.Constant][18] /* ty=Tensor[(1210), uint32] */, dtype="uint32") /* ty=Tensor[(1210), uint32] */;
  %257 = cast(meta[relay.Constant][18] /* ty=Tensor[(1210), uint32] */, dtype="float64") /* ty=Tensor[(1210), float64] */;
  %258 = reshape(%254, newshape=[]) /* ty=float64 */;
  %259 = reshape(%255, newshape=[8, 2, 13]) /* ty=Tensor[(8, 2, 13), float64] */;
  %260 = reshape(%256, newshape=[1210]) /* ty=Tensor[(1210), uint32] */;
  %261 = reshape(%257, newshape=[1210]) /* ty=Tensor[(1210), float64] */;
  %262 = @func_2087(%258, %259, %260, %261) /* ty=(Tensor[(8, 2, 13), bool], Tensor[(15, 7, 14), bool], Tensor[(1210), bool]) */;
  %263 = right_shift(%252, %253) /* ty=Tensor[(15, 7, 14), uint8] */;
  %264 = %262.2;
  (%263, %264, 5.31976f64 /* ty=float64 */, meta[relay.Constant][17] /* ty=Tensor[(208), float64] */, meta[relay.Constant][18] /* ty=Tensor[(1210), uint32] */)
}

def @func_6455() -> Tensor[(100), int16] {
  %265 = @func_5016() /* ty=(Tensor[(14, 15, 14), float64], Tensor[(14, 15, 14), float32], Tensor[(15, 7, 14), bool], Tensor[(100), int16], Tensor[(100), int16]) */;
  %265.3
}

def @func_6998() -> Tensor[(15, 7, 14), float64] {
  %266 = @func_5382() /* ty=(Tensor[(15, 7, 14), float64],) */;
  %266.0
}

def @func_5789(%var_5772: Tensor[(8, 13, 14), bool], %var_5773: Tensor[(8, 13, 14), bool]) -> (Tensor[(8, 13, 14), bool], Tensor[(8, 13, 14), float32]) {
  %267 = cast(%var_5773, dtype="bool") /* ty=Tensor[(8, 13, 14), bool] */;
  %268 = shape_of(%var_5772, dtype="int32") /* ty=Tensor[(3), int32] */;
  %269 = cast(%var_5772, dtype="bool") /* ty=Tensor[(8, 13, 14), bool] */;
  %270 = dyn.reshape(%267, %268, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %271 = cast(%var_5772, dtype="float32") /* ty=Tensor[(8, 13, 14), float32] */;
  %272 = logical_or(%269, %270) /* ty=Tensor[(8, 13, 14), bool] */;
  %273 = erf(%271) /* ty=Tensor[(8, 13, 14), float32] */;
  (%272, %273)
}

def @func_3170() -> Tensor[(15, 7, 14), bool] {
  %274 = @func_2222() /* ty=(Tensor[(15, 7, 14), bool],) */;
  %274.0
}

def @func_5585(%var_5578: Tensor[(15, 2, 13), float64]) -> Tensor[(15, 2, 13), float64] {
  %275 = cast(%var_5578, dtype="float64") /* ty=Tensor[(15, 2, 13), float64] */;
  acos(%275) /* ty=Tensor[(15, 2, 13), float64] */
}

def @func_4385() -> (Tensor[(100), int16], Tensor[(8, 2, 2), float64], Tensor[(32), float32]) {
  %276 = @func_3580() /* ty=(Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), float32], Tensor[(100), int16], Tensor[(8), float32], Tensor[(100), int16], Tensor[(112), int64]) */;
  %277 = cast(meta[relay.Constant][19] /* ty=Tensor[(32), float32] */, dtype="float32") /* ty=Tensor[(32), float32] */;
  %278 = reshape(%277, newshape=[8, 2, 2]) /* ty=Tensor[(8, 2, 2), float32] */;
  %279 = %276.4;
  %280 = @func_1828(%278) /* ty=Tensor[(8, 2, 2), float64] */;
  (%279, %280, meta[relay.Constant][19] /* ty=Tensor[(32), float32] */)
}

def @func_3205() -> Tensor[(15, 7, 14), bool] {
  %281 = @func_3191() /* ty=(Tensor[(15, 7, 14), bool],) */;
  %281.0
}

def @func_8535() -> Tensor[(14, 15, 14), int32] {
  @func_3803() /* ty=Tensor[(14, 15, 14), int32] */
}

def @func_4668(%var_4649: Tensor[(231), int16]) -> (Tensor[(15, 7, 14), bool], Tensor[(7, 3, 11), int16], Tensor[(231), int16], Tensor[(7, 3, 11), float64]) {
  %282 = cast(%var_4649, dtype="int16") /* ty=Tensor[(231), int16] */;
  %283 = cast(%var_4649, dtype="int16") /* ty=Tensor[(231), int16] */;
  %284 = reshape(%282, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), int16] */;
  %285 = reshape(%283, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), int16] */;
  %286 = @func_3640(%284, %285) /* ty=(Tensor[(7, 3, 11), int16],) */;
  %287 = %286.0;
  %288 = cast(%287, dtype="int16") /* ty=Tensor[(7, 3, 11), int16] */;
  %289 = cast(%287, dtype="int16") /* ty=Tensor[(7, 3, 11), int16] */;
  %290 = reshape(%288, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), int16] */;
  %291 = reshape(%289, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), int16] */;
  %292 = @func_3640(%290, %291) /* ty=(Tensor[(7, 3, 11), int16],) */;
  %293 = %292.0;
  %294 = cast(%293, dtype="float64") /* ty=Tensor[(7, 3, 11), float64] */;
  %295 = @func_3205() /* ty=Tensor[(15, 7, 14), bool] */;
  %296 = sinh(%294) /* ty=Tensor[(7, 3, 11), float64] */;
  (%295, %287, %var_4649, %296)
}

def @func_3057() -> Tensor[(15, 7, 14), bool] {
  %297 = @func_1438() /* ty=(Tensor[(15, 7, 14), bool],) */;
  %297.0
}

def @func_3882() -> (Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), float64], Tensor[(10, 13, 14), float32], Tensor[(1820), float32]) {
  %298 = @func_2161() /* ty=Tensor[(15, 7, 14), bool] */;
  %299 = cast(%298, dtype="float64") /* ty=Tensor[(15, 7, 14), float64] */;
  %300 = cast(meta[relay.Constant][20] /* ty=Tensor[(1820), float32] */, dtype="float32") /* ty=Tensor[(1820), float32] */;
  %301 = cast(meta[relay.Constant][20] /* ty=Tensor[(1820), float32] */, dtype="float32") /* ty=Tensor[(1820), float32] */;
  %302 = reshape(%300, newshape=[10, 13, 14]) /* ty=Tensor[(10, 13, 14), float32] */;
  %303 = reshape(%301, newshape=[10, 13, 14]) /* ty=Tensor[(10, 13, 14), float32] */;
  %304 = @func_2161() /* ty=Tensor[(15, 7, 14), bool] */;
  %305 = log2(%299) /* ty=Tensor[(15, 7, 14), float64] */;
  %306 = @func_297(%302, %303) /* ty=Tensor[(10, 13, 14), float32] */;
  (%304, %305, %306, meta[relay.Constant][20] /* ty=Tensor[(1820), float32] */)
}

def @func_1913(%var_1879: Tensor[(5, 20), int16]) -> (Tensor[(15, 7, 14), bool], Tensor[(100), int16], Tensor[(154), float32], Tensor[(5, 20), int16], Tensor[(112), int64], Tensor[(7, 2, 11), float32], Tensor[(100), int16], Tensor[(15, 7, 14), float32]) {
  %307 = @func_1438() /* ty=(Tensor[(15, 7, 14), bool],) */;
  %308 = cast(meta[relay.Constant][21] /* ty=Tensor[(154), float32] */, dtype="float32") /* ty=Tensor[(154), float32] */;
  %309 = cast(%var_1879, dtype="int16") /* ty=Tensor[(5, 20), int16] */;
  %310 = cast(meta[relay.Constant][22] /* ty=Tensor[(112), int64] */, dtype="int64") /* ty=Tensor[(112), int64] */;
  %311 = reshape(%308, newshape=[7, 2, 11]) /* ty=Tensor[(7, 2, 11), float32] */;
  %312 = reshape(%309, newshape=[100]) /* ty=Tensor[(100), int16] */;
  %313 = reshape(%310, newshape=[112]) /* ty=Tensor[(112), int64] */;
  %314 = @func_535(%311, %312, %313) /* ty=(Tensor[(7, 2, 11), float32], Tensor[(112), int64], Tensor[(50), int16], Tensor[(100), int16], Tensor[(112), int64], Tensor[(14, 2, 4), bool]) */;
  %315 = cast(meta[relay.Constant][21] /* ty=Tensor[(154), float32] */, dtype="float32") /* ty=Tensor[(154), float32] */;
  %316 = %314.3;
  %317 = cast(%316, dtype="int16") /* ty=Tensor[(100), int16] */;
  %318 = cast(meta[relay.Constant][22] /* ty=Tensor[(112), int64] */, dtype="int64") /* ty=Tensor[(112), int64] */;
  %319 = reshape(%315, newshape=[7, 2, 11]) /* ty=Tensor[(7, 2, 11), float32] */;
  %320 = reshape(%317, newshape=[100]) /* ty=Tensor[(100), int16] */;
  %321 = reshape(%318, newshape=[112]) /* ty=Tensor[(112), int64] */;
  %322 = @func_535(%319, %320, %321) /* ty=(Tensor[(7, 2, 11), float32], Tensor[(112), int64], Tensor[(50), int16], Tensor[(100), int16], Tensor[(112), int64], Tensor[(14, 2, 4), bool]) */;
  %323 = cast(%316, dtype="int16") /* ty=Tensor[(100), int16] */;
  %324 = reshape(%323, newshape=[100]) /* ty=Tensor[(100), int16] */;
  %325 = @func_1796(%324) /* ty=(Tensor[(15, 7, 14), bool], Tensor[(14, 2, 4), bool], Tensor[(154), float32], Tensor[(100), int16], Tensor[(112), int64], Tensor[(15, 7, 14), float32]) */;
  %326 = %307.0;
  %327 = %322.0;
  %328 = %325.3;
  %329 = @func_1406() /* ty=Tensor[(15, 7, 14), float32] */;
  (%326, %316, meta[relay.Constant][21] /* ty=Tensor[(154), float32] */, %var_1879, meta[relay.Constant][22] /* ty=Tensor[(112), int64] */, %327, %328, %329)
}

def @func_8473() -> Tensor[(15, 7, 14), bool] {
  @func_1313() /* ty=Tensor[(15, 7, 14), bool] */
}

def @func_2161() -> Tensor[(15, 7, 14), bool] {
  %330 = @func_1951() /* ty=(Tensor[(15, 7, 14), bool],) */;
  %330.0
}

def @func_4068() -> (Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), bool]) {
  %331 = @func_1951() /* ty=(Tensor[(15, 7, 14), bool],) */;
  %332 = @func_3170() /* ty=Tensor[(15, 7, 14), bool] */;
  %333 = %331.0;
  (%332, %333)
}

def @func_8150() -> (Tensor[(15, 7, 14), bool],) {
  %334 = @func_3377() /* ty=Tensor[(15, 7, 14), bool] */;
  (%334,)
}

def @func_8466() -> (Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), bool]) {
  %335 = @func_3926() /* ty=Tensor[(15, 7, 14), bool] */;
  %336 = @func_5286() /* ty=Tensor[(15, 7, 14), bool] */;
  (%335, %336)
}

def @func_2527(%var_2519: Tensor[(10, 12, 9), float64]) -> (Tensor[(10, 12, 9), int32],) {
  %337 = @func_1693() /* ty=(Tensor[(10, 12, 9), float64],) */;
  %338 = %337.0;
  %339 = cast(%var_2519, dtype="int32") /* ty=Tensor[(10, 12, 9), int32] */;
  %340 = shape_of(%338, dtype="int32") /* ty=Tensor[(3), int32] */;
  %341 = cast(%338, dtype="int32") /* ty=Tensor[(10, 12, 9), int32] */;
  %342 = dyn.reshape(%339, %340, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %343 = subtract(%341, %342) /* ty=Tensor[(10, 12, 9), int32] */;
  (%343,)
}

def @func_8297() -> Tensor[(15, 7, 14), bool] {
  @func_6030() /* ty=Tensor[(15, 7, 14), bool] */
}

def @func_8000(%var_7995: Tensor[(10, 12, 9), float64]) -> Tensor[(10, 12, 9), float64] {
  %344 = @func_4796() /* ty=(Tensor[(10, 12, 9), float64],) */;
  %345 = %344.0;
  %346 = cast(%var_7995, dtype="float64") /* ty=Tensor[(10, 12, 9), float64] */;
  %347 = shape_of(%345, dtype="int32") /* ty=Tensor[(3), int32] */;
  %348 = cast(%345, dtype="float64") /* ty=Tensor[(10, 12, 9), float64] */;
  %349 = dyn.reshape(%346, %347, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_mod(%348, %349) /* ty=Tensor[(10, 12, 9), float64] */
}

def @func_476(%var_463: Tensor[(5, 1, 10), int16], %var_464: Tensor[(5, 2, 10), int16], %var_470: Tensor[(112), int64]) -> (Tensor[(5, 2, 10), bool], Tensor[(14, 2, 4), bool], Tensor[(112), int64]) {
  %350 = cast(%var_463, dtype="bool") /* ty=Tensor[(5, 1, 10), bool] */;
  %351 = cast(%var_464, dtype="bool") /* ty=Tensor[(5, 2, 10), bool] */;
  %352 = cast(%var_470, dtype="int64") /* ty=Tensor[(112), int64] */;
  %353 = reshape(%352, newshape=[14, 2, 4]) /* ty=Tensor[(14, 2, 4), int64] */;
  %354 = @func_450(%353) /* ty=(Tensor[(14, 2, 4), int64], Tensor[(14, 2, 4), bool]) */;
  %355 = not_equal(%350, %351) /* ty=Tensor[(5, 2, 10), bool] */;
  %356 = %354.1;
  (%355, %356, %var_470)
}

def @func_1093(%var_1031: int16, %var_1032: Tensor[(12, 4, 1), int16], %var_1046: Tensor[(12, 4, 5), bool], %var_1060: Tensor[(154), float32], %var_1061: Tensor[(100), int16], %var_1080: Tensor[(1820), float32]) -> (Tensor[(12, 4, 1), bool], Tensor[(12, 4, 5), uint8], Tensor[(154), float32], Tensor[(100), int16], Tensor[(112), int64], Tensor[(12, 4, 100), uint8], Tensor[(5, 20), int16], Tensor[(1, 80), float32], Tensor[(1820), float32]) {
  %357 = cast(%var_1031, dtype="bool") /* ty=bool */;
  %358 = cast(%var_1032, dtype="bool") /* ty=Tensor[(12, 4, 1), bool] */;
  %359 = cast(%var_1032, dtype="bool") /* ty=Tensor[(12, 4, 1), bool] */;
  %360 = cast(meta[relay.Constant][23] /* ty=Tensor[(12, 4, 5), int16] */, dtype="bool") /* ty=Tensor[(12, 4, 5), bool] */;
  %361 = greater_equal(%359, %360) /* ty=Tensor[(12, 4, 5), bool] */;
  %362 = cast(%var_1046, dtype="uint8") /* ty=Tensor[(12, 4, 5), uint8] */;
  %363 = shape_of(%361, dtype="int32") /* ty=Tensor[(3), int32] */;
  %364 = cast(%361, dtype="uint8") /* ty=Tensor[(12, 4, 5), uint8] */;
  %365 = dyn.reshape(%362, %363, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %366 = cast(%var_1060, dtype="float32") /* ty=Tensor[(154), float32] */;
  %367 = cast(%var_1061, dtype="int16") /* ty=Tensor[(100), int16] */;
  %368 = cast(meta[relay.Constant][24] /* ty=Tensor[(112), int64] */, dtype="int64") /* ty=Tensor[(112), int64] */;
  %369 = reshape(%366, newshape=[7, 2, 11]) /* ty=Tensor[(7, 2, 11), float32] */;
  %370 = reshape(%367, newshape=[100]) /* ty=Tensor[(100), int16] */;
  %371 = reshape(%368, newshape=[112]) /* ty=Tensor[(112), int64] */;
  %372 = @func_535(%369, %370, %371) /* ty=(Tensor[(7, 2, 11), float32], Tensor[(112), int64], Tensor[(50), int16], Tensor[(100), int16], Tensor[(112), int64], Tensor[(14, 2, 4), bool]) */;
  %373 = %372.3;
  %374 = cast(%373, dtype="uint8") /* ty=Tensor[(100), uint8] */;
  %375 = cast(%var_1032, dtype="uint8") /* ty=Tensor[(12, 4, 1), uint8] */;
  %376 = cast(meta[relay.Constant][25] /* ty=Tensor[(1, 80), float32] */, dtype="float32") /* ty=Tensor[(1, 80), float32] */;
  %377 = cast(%var_1061, dtype="int16") /* ty=Tensor[(100), int16] */;
  %378 = cast(%var_1080, dtype="float32") /* ty=Tensor[(1820), float32] */;
  %379 = reshape(%376, newshape=[16, 1, 5]) /* ty=Tensor[(16, 1, 5), float32] */;
  %380 = reshape(%377, newshape=[5, 20]) /* ty=Tensor[(5, 20), int16] */;
  %381 = reshape(%378, newshape=[1820, 1]) /* ty=Tensor[(1820, 1), float32] */;
  %382 = @func_709(%379, %380, %381) /* ty=(Tensor[(5, 2, 10), bool], Tensor[(5, 10), int16], Tensor[(5, 20), int16], Tensor[(112, 1), int64], Tensor[(16, ?, 5), uint64], Tensor[(16, 1, 5), float32], Tensor[(14, 2, 4), int64], Tensor[(10, 13, 14), float32], Tensor[(1820, 1), float32]) */;
  %383 = less(%357, %358) /* ty=Tensor[(12, 4, 1), bool] */;
  %384 = bitwise_or(%364, %365) /* ty=Tensor[(12, 4, 5), uint8] */;
  %385 = bitwise_or(%374, %375) /* ty=Tensor[(12, 4, 100), uint8] */;
  %386 = %382.2;
  (%383, %384, %var_1060, %var_1061, meta[relay.Constant][24] /* ty=Tensor[(112), int64] */, %385, %386, meta[relay.Constant][25] /* ty=Tensor[(1, 80), float32] */, %var_1080)
}

def @func_5160(%var_5144: int16, %var_5147: Tensor[(154), float32], %var_5148: Tensor[(50, 2), int16]) -> (Tensor[(10, 12, 9), float64], Tensor[(100), int16], int16, Tensor[(48), int16], Tensor[(240), bool], Tensor[(154), float32], Tensor[(50, 2), int16], Tensor[(1820), float32], Tensor[(15, 7, 14), bool]) {
  %387 = @func_4796() /* ty=(Tensor[(10, 12, 9), float64],) */;
  %388 = cast(%var_5144, dtype="int16") /* ty=int16 */;
  %389 = cast(meta[relay.Constant][26] /* ty=Tensor[(48), int16] */, dtype="int16") /* ty=Tensor[(48), int16] */;
  %390 = cast(meta[relay.Constant][27] /* ty=Tensor[(240), bool] */, dtype="bool") /* ty=Tensor[(240), bool] */;
  %391 = cast(%var_5147, dtype="float32") /* ty=Tensor[(154), float32] */;
  %392 = cast(%var_5148, dtype="int16") /* ty=Tensor[(50, 2), int16] */;
  %393 = cast(meta[relay.Constant][28] /* ty=Tensor[(1820), float32] */, dtype="float32") /* ty=Tensor[(1820), float32] */;
  %394 = reshape(%388, newshape=[]) /* ty=int16 */;
  %395 = reshape(%389, newshape=[12, 4, 1]) /* ty=Tensor[(12, 4, 1), int16] */;
  %396 = reshape(%390, newshape=[12, 4, 5]) /* ty=Tensor[(12, 4, 5), bool] */;
  %397 = reshape(%391, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %398 = reshape(%392, newshape=[100]) /* ty=Tensor[(100), int16] */;
  %399 = reshape(%393, newshape=[1820]) /* ty=Tensor[(1820), float32] */;
  %400 = @func_1093(%394, %395, %396, %397, %398, %399) /* ty=(Tensor[(12, 4, 1), bool], Tensor[(12, 4, 5), uint8], Tensor[(154), float32], Tensor[(100), int16], Tensor[(112), int64], Tensor[(12, 4, 100), uint8], Tensor[(5, 20), int16], Tensor[(1, 80), float32], Tensor[(1820), float32]) */;
  %401 = @func_4537() /* ty=(Tensor[(15, 7, 14), bool], Tensor[(7, 10, 2), float64], Tensor[(15, 7, 14), bool]) */;
  %402 = %387.0;
  %403 = %400.3;
  %404 = %401.0;
  (%402, %403, %var_5144, meta[relay.Constant][26] /* ty=Tensor[(48), int16] */, meta[relay.Constant][27] /* ty=Tensor[(240), bool] */, %var_5147, %var_5148, meta[relay.Constant][28] /* ty=Tensor[(1820), float32] */, %404)
}

def @func_7305(%var_7268: Tensor[(14, 12, 2), bool], %var_7283: Tensor[(154, 1), float32], %var_7285: Tensor[(112), int64]) -> (Tensor[(14, 12, 2), bool], Tensor[(15, 7, 14), bool], Tensor[(112), int64], Tensor[(100), int16], Tensor[(154, 112), uint64], int16, int16) {
  %405 = cast(meta[relay.Constant][29] /* ty=Tensor[(14, 12, 2), bool] */, dtype="bool") /* ty=Tensor[(14, 12, 2), bool] */;
  %406 = shape_of(%var_7268, dtype="int32") /* ty=Tensor[(3), int32] */;
  %407 = cast(%var_7268, dtype="bool") /* ty=Tensor[(14, 12, 2), bool] */;
  %408 = dyn.reshape(%405, %406, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %409 = @func_5342() /* ty=(Tensor[(9, 11, 6), int32], Tensor[(15, 7, 14), bool]) */;
  %410 = cast(%var_7283, dtype="float32") /* ty=Tensor[(154, 1), float32] */;
  %411 = cast(meta[relay.Constant][30] /* ty=Tensor[(100), int16] */, dtype="int16") /* ty=Tensor[(100), int16] */;
  %412 = cast(%var_7285, dtype="int64") /* ty=Tensor[(112), int64] */;
  %413 = reshape(%410, newshape=[7, 2, 11]) /* ty=Tensor[(7, 2, 11), float32] */;
  %414 = reshape(%411, newshape=[100]) /* ty=Tensor[(100), int16] */;
  %415 = reshape(%412, newshape=[112]) /* ty=Tensor[(112), int64] */;
  %416 = @func_535(%413, %414, %415) /* ty=(Tensor[(7, 2, 11), float32], Tensor[(112), int64], Tensor[(50), int16], Tensor[(100), int16], Tensor[(112), int64], Tensor[(14, 2, 4), bool]) */;
  %417 = cast(%var_7285, dtype="uint64") /* ty=Tensor[(112), uint64] */;
  %418 = cast(%var_7283, dtype="uint64") /* ty=Tensor[(154, 1), uint64] */;
  %419 = cast(meta[relay.Constant][31] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %420 = cast(%var_7283, dtype="float32") /* ty=Tensor[(154, 1), float32] */;
  %421 = cast(meta[relay.Constant][30] /* ty=Tensor[(100), int16] */, dtype="int16") /* ty=Tensor[(100), int16] */;
  %422 = reshape(%419, newshape=[]) /* ty=int16 */;
  %423 = reshape(%420, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %424 = reshape(%421, newshape=[50, 2]) /* ty=Tensor[(50, 2), int16] */;
  %425 = @func_5160(%422, %423, %424) /* ty=(Tensor[(10, 12, 9), float64], Tensor[(100), int16], int16, Tensor[(48), int16], Tensor[(240), bool], Tensor[(154), float32], Tensor[(50, 2), int16], Tensor[(1820), float32], Tensor[(15, 7, 14), bool]) */;
  %426 = logical_and(%407, %408) /* ty=Tensor[(14, 12, 2), bool] */;
  %427 = %409.1;
  %428 = %416.4;
  %429 = add(%417, %418) /* ty=Tensor[(154, 112), uint64] */;
  %430 = %425.2;
  (%426, %427, %428, meta[relay.Constant][30] /* ty=Tensor[(100), int16] */, %429, %430, meta[relay.Constant][31] /* ty=int16 */)
}

def @func_1337() -> Tensor[(15, 7, 14), float32] {
  %431 = @func_1313() /* ty=Tensor[(15, 7, 14), bool] */;
  %432 = cast(%431, dtype="float32") /* ty=Tensor[(15, 7, 14), float32] */;
  rsqrt(%432) /* ty=Tensor[(15, 7, 14), float32] */
}

def @func_4956(%var_4936: Tensor[(231), int16]) -> (Tensor[(15, 7, 14), bool], Tensor[(100), int16], Tensor[(7, 3, 11), int16], Tensor[(231), int16]) {
  %433 = @func_4092() /* ty=(Tensor[(15, 7, 14), bool],) */;
  %434 = @func_4385() /* ty=(Tensor[(100), int16], Tensor[(8, 2, 2), float64], Tensor[(32), float32]) */;
  %435 = cast(%var_4936, dtype="int16") /* ty=Tensor[(231), int16] */;
  %436 = cast(%var_4936, dtype="int16") /* ty=Tensor[(231), int16] */;
  %437 = reshape(%435, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), int16] */;
  %438 = reshape(%436, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), int16] */;
  %439 = @func_3640(%437, %438) /* ty=(Tensor[(7, 3, 11), int16],) */;
  %440 = %433.0;
  %441 = %434.0;
  %442 = %439.0;
  (%440, %441, %442, %var_4936)
}

def @func_5286() -> Tensor[(15, 7, 14), bool] {
  %443 = @func_1951() /* ty=(Tensor[(15, 7, 14), bool],) */;
  %443.0
}

def @func_1693() -> (Tensor[(10, 12, 9), float64],) {
  %444 = cast(meta[relay.Constant][32] /* ty=Tensor[(10, 12, 9), float64] */, dtype="float64") /* ty=Tensor[(10, 12, 9), float64] */;
  %445 = log2(%444) /* ty=Tensor[(10, 12, 9), float64] */;
  (%445,)
}

def @func_2139(%var_2129: Tensor[(1210), uint32]) -> (Tensor[(15, 7, 14), bool], Tensor[(1210), float64]) {
  %446 = @func_1438() /* ty=(Tensor[(15, 7, 14), bool],) */;
  %447 = cast(%var_2129, dtype="uint32") /* ty=Tensor[(1210), uint32] */;
  %448 = cast(%var_2129, dtype="uint32") /* ty=Tensor[(1210), uint32] */;
  %449 = reshape(%447, newshape=[11, 10, 11]) /* ty=Tensor[(11, 10, 11), uint32] */;
  %450 = reshape(%448, newshape=[11, 10, 11]) /* ty=Tensor[(11, 10, 11), uint32] */;
  %451 = @func_1534(%449, %450) /* ty=Tensor[(11, 10, 11), uint32] */;
  %452 = cast(%451, dtype="float64") /* ty=Tensor[(11, 10, 11), float64] */;
  %453 = shape_of(%var_2129, dtype="int32") /* ty=Tensor[(1), int32] */;
  %454 = cast(%var_2129, dtype="float64") /* ty=Tensor[(1210), float64] */;
  %455 = dyn.reshape(%452, %453, newshape=[]) /* ty=Tensor[(?), float64] */;
  %456 = %446.0;
  %457 = floor_divide(%454, %455) /* ty=Tensor[(1210), float64] */;
  (%456, %457)
}

def @func_8106(%var_8090: Tensor[(112, 1), int64]) -> (Tensor[(15, 7, 14), float32], Tensor[(14, 2, 4), int64], Tensor[(112, 1), int64], Tensor[(15, 7, 14), bool], Tensor[(1248, 1210), int32]) {
  %458 = cast(%var_8090, dtype="int64") /* ty=Tensor[(112, 1), int64] */;
  %459 = reshape(%458, newshape=[112]) /* ty=Tensor[(112), int64] */;
  %460 = @func_2213(%459) /* ty=(Tensor[(15, 7, 14), bool], Tensor[(14, 2, 4), int64], Tensor[(112), int64]) */;
  %461 = cast(meta[relay.Constant][33] /* ty=Tensor[(1210), uint32] */, dtype="uint32") /* ty=Tensor[(1210), uint32] */;
  %462 = cast(meta[relay.Constant][34] /* ty=Tensor[(1248, 1), uint16] */, dtype="uint16") /* ty=Tensor[(1248, 1), uint16] */;
  %463 = reshape(%461, newshape=[1210]) /* ty=Tensor[(1210), uint32] */;
  %464 = reshape(%462, newshape=[1248]) /* ty=Tensor[(1248), uint16] */;
  %465 = @func_7951(%463, %464) /* ty=(Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), bool], Tensor[(1210), uint32], Tensor[(8, 12, 13), bool], Tensor[(1248), uint16], Tensor[(14, 15, 14), int32]) */;
  %466 = cast(meta[relay.Constant][33] /* ty=Tensor[(1210), uint32] */, dtype="int32") /* ty=Tensor[(1210), int32] */;
  %467 = cast(meta[relay.Constant][34] /* ty=Tensor[(1248, 1), uint16] */, dtype="int32") /* ty=Tensor[(1248, 1), int32] */;
  %468 = @func_1406() /* ty=Tensor[(15, 7, 14), float32] */;
  %469 = %460.1;
  %470 = %465.2;
  %471 = left_shift(%466, %467) /* ty=Tensor[(1248, 1210), int32] */;
  (%468, %469, %var_8090, %470, %471)
}

def @func_5382() -> (Tensor[(15, 7, 14), float64],) {
  %472 = @func_5342() /* ty=(Tensor[(9, 11, 6), int32], Tensor[(15, 7, 14), bool]) */;
  %473 = %472.1;
  %474 = cast(%473, dtype="float64") /* ty=Tensor[(15, 7, 14), float64] */;
  %475 = sqrt(%474) /* ty=Tensor[(15, 7, 14), float64] */;
  (%475,)
}

def @func_4318() -> (Tensor[(14, 15, 14), int32], Tensor[(8), float32]) {
  %476 = @func_3705() /* ty=(Tensor[(8), float32], Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), bool], Tensor[(13, 13, 12), float64], Tensor[(13, 13, 12), float64], Tensor[(10, 12, 9), float64]) */;
  %477 = @func_1680() /* ty=Tensor[(14, 15, 14), int32] */;
  %478 = %476.0;
  (%477, %478)
}

def @func_5249() -> (Tensor[(15, 7, 14), float32], Tensor[(10, 12, 9), float64]) {
  %479 = @func_4796() /* ty=(Tensor[(10, 12, 9), float64],) */;
  %480 = @func_4814() /* ty=Tensor[(15, 7, 14), float32] */;
  %481 = %479.0;
  (%480, %481)
}

def @func_1313() -> Tensor[(15, 7, 14), bool] {
  %482 = cast(meta[relay.Constant][35] /* ty=uint64 */, dtype="bool") /* ty=bool */;
  %483 = cast(meta[relay.Constant][36] /* ty=Tensor[(15, 7, 14), uint64] */, dtype="bool") /* ty=Tensor[(15, 7, 14), bool] */;
  equal(%482, %483) /* ty=Tensor[(15, 7, 14), bool] */
}

def @func_2222() -> (Tensor[(15, 7, 14), bool],) {
  %484 = @func_1473() /* ty=Tensor[(15, 7, 14), bool] */;
  (%484,)
}

def @func_4537() -> (Tensor[(15, 7, 14), bool], Tensor[(7, 10, 2), float64], Tensor[(15, 7, 14), bool]) {
  %485 = @func_3442() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %486 = @func_3085() /* ty=(Tensor[(10, 12, 9), float64], Tensor[(15, 7, 14), bool]) */;
  %487 = @func_2974() /* ty=Tensor[(15, 7, 14), bool] */;
  %488 = %485.0;
  %489 = %486.1;
  (%487, %488, %489)
}

def @func_4282(%var_4275: Tensor[(1210), uint32]) -> (Tensor[(14, 15, 14), int32], Tensor[(605, 2), uint32], Tensor[(1210), uint32]) {
  %490 = @func_3295() /* ty=(Tensor[(14, 15, 14), int32], Tensor[(15, 7, 14), bool]) */;
  %491 = cast(%var_4275, dtype="uint32") /* ty=Tensor[(1210), uint32] */;
  %492 = reshape(%491, newshape=[605, 2]) /* ty=Tensor[(605, 2), uint32] */;
  %493 = @func_2026(%492) /* ty=(Tensor[(15, 7, 14), bool], Tensor[(11, 10, 11), uint32], Tensor[(605, 2), uint32]) */;
  %494 = %490.0;
  %495 = %493.2;
  (%494, %495, %var_4275)
}

def @func_6210(%var_6206: Tensor[(7, 1, 2), int8]) -> (Tensor[(7, 1, 2), int8],) {
  %496 = cast(meta[relay.Constant][37] /* ty=int8 */, dtype="int8") /* ty=int8 */;
  %497 = cast(%var_6206, dtype="int8") /* ty=Tensor[(7, 1, 2), int8] */;
  %498 = multiply(%496, %497) /* ty=Tensor[(7, 1, 2), int8] */;
  (%498,)
}

def @func_7510() -> (Tensor[(15, 7, 14), bool],) {
  %499 = @func_4323() /* ty=Tensor[(15, 7, 14), bool] */;
  (%499,)
}

def @func_2213(%var_2210: Tensor[(112), int64]) -> (Tensor[(15, 7, 14), bool], Tensor[(14, 2, 4), int64], Tensor[(112), int64]) {
  %500 = cast(%var_2210, dtype="int64") /* ty=Tensor[(112), int64] */;
  %501 = reshape(%500, newshape=[14, 2, 4]) /* ty=Tensor[(14, 2, 4), int64] */;
  %502 = @func_450(%501) /* ty=(Tensor[(14, 2, 4), int64], Tensor[(14, 2, 4), bool]) */;
  %503 = @func_2161() /* ty=Tensor[(15, 7, 14), bool] */;
  %504 = %502.0;
  (%503, %504, %var_2210)
}

def @func_4878() -> (Tensor[(13, 13, 12), float64],) {
  %505 = @func_3705() /* ty=(Tensor[(8), float32], Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), bool], Tensor[(13, 13, 12), float64], Tensor[(13, 13, 12), float64], Tensor[(10, 12, 9), float64]) */;
  %506 = %505.4;
  (%506,)
}

def @func_8258() -> (Tensor[(10, 12, 9), float64], Tensor[(14, 2, 4), bool], Tensor[(1, 100), float32]) {
  %507 = @func_1693() /* ty=(Tensor[(10, 12, 9), float64],) */;
  %508 = cast(meta[relay.Constant][38] /* ty=Tensor[(1, 100), int16] */, dtype="int16") /* ty=Tensor[(1, 100), int16] */;
  %509 = reshape(%508, newshape=[100]) /* ty=Tensor[(100), int16] */;
  %510 = @func_1796(%509) /* ty=(Tensor[(15, 7, 14), bool], Tensor[(14, 2, 4), bool], Tensor[(154), float32], Tensor[(100), int16], Tensor[(112), int64], Tensor[(15, 7, 14), float32]) */;
  %511 = cast(meta[relay.Constant][38] /* ty=Tensor[(1, 100), int16] */, dtype="float64") /* ty=Tensor[(1, 100), float64] */;
  %512 = sinh(%511) /* ty=Tensor[(1, 100), float64] */;
  %513 = cast(%512, dtype="float32") /* ty=Tensor[(1, 100), float32] */;
  %514 = %507.0;
  %515 = %510.1;
  %516 = cos(%513) /* ty=Tensor[(1, 100), float32] */;
  (%514, %515, %516)
}

def @func_3295() -> (Tensor[(14, 15, 14), int32], Tensor[(15, 7, 14), bool]) {
  %517 = @func_3191() /* ty=(Tensor[(15, 7, 14), bool],) */;
  %518 = @func_1680() /* ty=Tensor[(14, 15, 14), int32] */;
  %519 = %517.0;
  (%518, %519)
}

def @func_3534() -> (Tensor[(15, 7, 14), float32], Tensor[(10, 13, 14), float32], Tensor[(1820), float32]) {
  %520 = cast(meta[relay.Constant][39] /* ty=Tensor[(1820), float32] */, dtype="float32") /* ty=Tensor[(1820), float32] */;
  %521 = cast(meta[relay.Constant][39] /* ty=Tensor[(1820), float32] */, dtype="float32") /* ty=Tensor[(1820), float32] */;
  %522 = reshape(%520, newshape=[10, 13, 14]) /* ty=Tensor[(10, 13, 14), float32] */;
  %523 = reshape(%521, newshape=[10, 13, 14]) /* ty=Tensor[(10, 13, 14), float32] */;
  %524 = @func_1337() /* ty=Tensor[(15, 7, 14), float32] */;
  %525 = @func_297(%522, %523) /* ty=Tensor[(10, 13, 14), float32] */;
  (%524, %525, meta[relay.Constant][39] /* ty=Tensor[(1820), float32] */)
}

def @func_2026(%var_2016: Tensor[(605, 2), uint32]) -> (Tensor[(15, 7, 14), bool], Tensor[(11, 10, 11), uint32], Tensor[(605, 2), uint32]) {
  %526 = cast(%var_2016, dtype="uint32") /* ty=Tensor[(605, 2), uint32] */;
  %527 = cast(%var_2016, dtype="uint32") /* ty=Tensor[(605, 2), uint32] */;
  %528 = reshape(%526, newshape=[11, 10, 11]) /* ty=Tensor[(11, 10, 11), uint32] */;
  %529 = reshape(%527, newshape=[11, 10, 11]) /* ty=Tensor[(11, 10, 11), uint32] */;
  %530 = @func_1473() /* ty=Tensor[(15, 7, 14), bool] */;
  %531 = @func_1534(%528, %529) /* ty=Tensor[(11, 10, 11), uint32] */;
  (%530, %531, %var_2016)
}

def @func_3526() -> Tensor[(15, 7, 14), bool] {
  @func_2974() /* ty=Tensor[(15, 7, 14), bool] */
}

def @func_3033(%var_2995: Tensor[(2, 2, 2), float32], %var_3025: Tensor[(100), int16], %var_3026: Tensor[(112), int64]) -> (Tensor[(2, 2, 2), float64], Tensor[(100), int16], Tensor[(154), float32], Tensor[(100), int16], Tensor[(112), int64]) {
  %532 = cast(%var_2995, dtype="float32") /* ty=Tensor[(2, 2, 2), float32] */;
  %533 = exp(%532) /* ty=Tensor[(2, 2, 2), float32] */;
  %534 = cast(%533, dtype="float64") /* ty=Tensor[(2, 2, 2), float64] */;
  %535 = cast(meta[relay.Constant][40] /* ty=Tensor[(154), float32] */, dtype="float32") /* ty=Tensor[(154), float32] */;
  %536 = cast(%var_3025, dtype="int16") /* ty=Tensor[(100), int16] */;
  %537 = cast(%var_3026, dtype="int64") /* ty=Tensor[(112), int64] */;
  %538 = reshape(%535, newshape=[7, 2, 11]) /* ty=Tensor[(7, 2, 11), float32] */;
  %539 = reshape(%536, newshape=[100]) /* ty=Tensor[(100), int16] */;
  %540 = reshape(%537, newshape=[112]) /* ty=Tensor[(112), int64] */;
  %541 = @func_535(%538, %539, %540) /* ty=(Tensor[(7, 2, 11), float32], Tensor[(112), int64], Tensor[(50), int16], Tensor[(100), int16], Tensor[(112), int64], Tensor[(14, 2, 4), bool]) */;
  %542 = log10(%534) /* ty=Tensor[(2, 2, 2), float64] */;
  %543 = %541.3;
  (%542, %543, meta[relay.Constant][40] /* ty=Tensor[(154), float32] */, %var_3025, %var_3026)
}

def @func_4297() -> Tensor[(14, 15, 14), int32] {
  @func_1680() /* ty=Tensor[(14, 15, 14), int32] */
}

def @func_5428() -> Tensor[(15, 7, 14), bool] {
  %544 = @func_4092() /* ty=(Tensor[(15, 7, 14), bool],) */;
  %544.0
}

def @func_709(%var_639: Tensor[(16, 1, 5), float32], %var_673: Tensor[(5, 20), int16], %var_704: Tensor[(1820, 1), float32]) -> (Tensor[(5, 2, 10), bool], Tensor[(5, 10), int16], Tensor[(5, 20), int16], Tensor[(112, 1), int64], Tensor[(16, ?, 5), uint64], Tensor[(16, 1, 5), float32], Tensor[(14, 2, 4), int64], Tensor[(10, 13, 14), float32], Tensor[(1820, 1), float32]) {
  %545 = cast(meta[relay.Constant][41] /* ty=Tensor[(5, 10), int16] */, dtype="int16") /* ty=Tensor[(5, 10), int16] */;
  %546 = cast(%var_673, dtype="int16") /* ty=Tensor[(5, 20), int16] */;
  %547 = cast(meta[relay.Constant][42] /* ty=Tensor[(112, 1), int64] */, dtype="int64") /* ty=Tensor[(112, 1), int64] */;
  %548 = reshape(%545, newshape=[5, 1, 10]) /* ty=Tensor[(5, 1, 10), int16] */;
  %549 = reshape(%546, newshape=[5, 2, 10]) /* ty=Tensor[(5, 2, 10), int16] */;
  %550 = reshape(%547, newshape=[112]) /* ty=Tensor[(112), int64] */;
  %551 = @func_476(%548, %549, %550) /* ty=(Tensor[(5, 2, 10), bool], Tensor[(14, 2, 4), bool], Tensor[(112), int64]) */;
  %552 = cast(%var_639, dtype="float32") /* ty=Tensor[(16, 1, 5), float32] */;
  %553 = acos(%552) /* ty=Tensor[(16, 1, 5), float32] */;
  %554 = cast(%553, dtype="uint8") /* ty=Tensor[(16, 1, 5), uint8] */;
  %555 = shape_of(%var_639, dtype="int32") /* ty=Tensor[(3), int32] */;
  %556 = cast(%var_639, dtype="uint8") /* ty=Tensor[(16, 1, 5), uint8] */;
  %557 = dyn.reshape(%554, %555, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %558 = bitwise_or(%556, %557) /* ty=Tensor[(16, ?, 5), uint8] */;
  %559 = cast(%558, dtype="bool") /* ty=Tensor[(16, ?, 5), bool] */;
  %560 = shape_of(%553, dtype="int32") /* ty=Tensor[(3), int32] */;
  %561 = cast(%553, dtype="bool") /* ty=Tensor[(16, 1, 5), bool] */;
  %562 = dyn.reshape(%559, %560, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %563 = less(%561, %562) /* ty=Tensor[(16, ?, 5), bool] */;
  %564 = cast(%563, dtype="uint64") /* ty=Tensor[(16, ?, 5), uint64] */;
  %565 = shape_of(%553, dtype="int32") /* ty=Tensor[(3), int32] */;
  %566 = cast(%553, dtype="uint64") /* ty=Tensor[(16, 1, 5), uint64] */;
  %567 = dyn.reshape(%564, %565, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %568 = cast(%553, dtype="float32") /* ty=Tensor[(16, 1, 5), float32] */;
  %569 = cast(meta[relay.Constant][42] /* ty=Tensor[(112, 1), int64] */, dtype="int64") /* ty=Tensor[(112, 1), int64] */;
  %570 = reshape(%569, newshape=[14, 2, 4]) /* ty=Tensor[(14, 2, 4), int64] */;
  %571 = @func_450(%570) /* ty=(Tensor[(14, 2, 4), int64], Tensor[(14, 2, 4), bool]) */;
  %572 = cast(%var_704, dtype="float32") /* ty=Tensor[(1820, 1), float32] */;
  %573 = cast(%var_704, dtype="float32") /* ty=Tensor[(1820, 1), float32] */;
  %574 = reshape(%572, newshape=[10, 13, 14]) /* ty=Tensor[(10, 13, 14), float32] */;
  %575 = reshape(%573, newshape=[10, 13, 14]) /* ty=Tensor[(10, 13, 14), float32] */;
  %576 = %551.0;
  %577 = right_shift(%566, %567) /* ty=Tensor[(16, ?, 5), uint64] */;
  %578 = sqrt(%568) /* ty=Tensor[(16, 1, 5), float32] */;
  %579 = %571.0;
  %580 = @func_297(%574, %575) /* ty=Tensor[(10, 13, 14), float32] */;
  (%576, meta[relay.Constant][41] /* ty=Tensor[(5, 10), int16] */, %var_673, meta[relay.Constant][42] /* ty=Tensor[(112, 1), int64] */, %577, %578, %579, %580, %var_704)
}

def @func_6155() -> (Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), bool]) {
  %581 = @func_2878() /* ty=(Tensor[(15, 7, 14), bool],) */;
  %582 = @func_2878() /* ty=(Tensor[(15, 7, 14), bool],) */;
  %583 = %581.0;
  %584 = %582.0;
  (%583, %584)
}

def @func_3345(%var_3309: Tensor[(15, 7, 14), bool], %var_3338: Tensor[(100), int16]) -> (Tensor[(15, 7, 14), bool], Tensor[(11, 10, 11), uint32], Tensor[(1, 1210), uint32], Tensor[(154), float32], Tensor[(100), float64]) {
  %585 = @func_3057() /* ty=Tensor[(15, 7, 14), bool] */;
  %586 = cast(%var_3309, dtype="bool") /* ty=Tensor[(15, 7, 14), bool] */;
  %587 = shape_of(%585, dtype="int32") /* ty=Tensor[(3), int32] */;
  %588 = cast(%585, dtype="bool") /* ty=Tensor[(15, 7, 14), bool] */;
  %589 = dyn.reshape(%586, %587, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %590 = cast(meta[relay.Constant][43] /* ty=Tensor[(1, 1210), uint32] */, dtype="uint32") /* ty=Tensor[(1, 1210), uint32] */;
  %591 = cast(meta[relay.Constant][43] /* ty=Tensor[(1, 1210), uint32] */, dtype="uint32") /* ty=Tensor[(1, 1210), uint32] */;
  %592 = reshape(%590, newshape=[11, 10, 11]) /* ty=Tensor[(11, 10, 11), uint32] */;
  %593 = reshape(%591, newshape=[11, 10, 11]) /* ty=Tensor[(11, 10, 11), uint32] */;
  %594 = cast(%var_3338, dtype="int16") /* ty=Tensor[(100), int16] */;
  %595 = reshape(%594, newshape=[5, 20]) /* ty=Tensor[(5, 20), int16] */;
  %596 = @func_1913(%595) /* ty=(Tensor[(15, 7, 14), bool], Tensor[(100), int16], Tensor[(154), float32], Tensor[(5, 20), int16], Tensor[(112), int64], Tensor[(7, 2, 11), float32], Tensor[(100), int16], Tensor[(15, 7, 14), float32]) */;
  %597 = cast(%var_3338, dtype="float64") /* ty=Tensor[(100), float64] */;
  %598 = not_equal(%588, %589) /* ty=Tensor[(15, 7, 14), bool] */;
  %599 = @func_1534(%592, %593) /* ty=Tensor[(11, 10, 11), uint32] */;
  %600 = %596.2;
  %601 = erf(%597) /* ty=Tensor[(100), float64] */;
  (%598, %599, meta[relay.Constant][43] /* ty=Tensor[(1, 1210), uint32] */, %600, %601)
}

def @func_6896() -> (Tensor[(10, 12, 9), bool], Tensor[(10, 12, 9), float64], Tensor[(15, 7, 14), bool], Tensor[(10, 12, 9), float64], Tensor[(112), float32], Tensor[(15, 7, 14), bool], Tensor[(9, 11, 6), int64]) {
  %602 = @func_5249() /* ty=(Tensor[(15, 7, 14), float32], Tensor[(10, 12, 9), float64]) */;
  %603 = %602.1;
  %604 = cast(meta[relay.Constant][44] /* ty=Tensor[(10, 12, 9), float64] */, dtype="float32") /* ty=Tensor[(10, 12, 9), float32] */;
  %605 = shape_of(%603, dtype="int32") /* ty=Tensor[(3), int32] */;
  %606 = cast(%603, dtype="float32") /* ty=Tensor[(10, 12, 9), float32] */;
  %607 = dyn.reshape(%604, %605, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %608 = divide(%606, %607) /* ty=Tensor[(10, 12, 9), float32] */;
  %609 = cast(meta[relay.Constant][44] /* ty=Tensor[(10, 12, 9), float64] */, dtype="bool") /* ty=Tensor[(10, 12, 9), bool] */;
  %610 = shape_of(%608, dtype="int32") /* ty=Tensor[(3), int32] */;
  %611 = cast(%608, dtype="bool") /* ty=Tensor[(10, 12, 9), bool] */;
  %612 = dyn.reshape(%609, %610, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %613 = @func_4796() /* ty=(Tensor[(10, 12, 9), float64],) */;
  %614 = @func_6509() /* ty=(Tensor[(15, 7, 14), bool],) */;
  %615 = cast(meta[relay.Constant][45] /* ty=Tensor[(112), float32] */, dtype="float32") /* ty=Tensor[(112), float32] */;
  %616 = reshape(%615, newshape=[2, 4, 14]) /* ty=Tensor[(2, 4, 14), float32] */;
  %617 = @func_5756(%616) /* ty=(Tensor[(2, 4, 14), float32], Tensor[(10, 12, 9), float64], Tensor[(13, 13, 12), float64]) */;
  %618 = @func_3191() /* ty=(Tensor[(15, 7, 14), bool],) */;
  %619 = @func_5342() /* ty=(Tensor[(9, 11, 6), int32], Tensor[(15, 7, 14), bool]) */;
  %620 = %619.0;
  %621 = cast(%620, dtype="float32") /* ty=Tensor[(9, 11, 6), float32] */;
  %622 = log2(%621) /* ty=Tensor[(9, 11, 6), float32] */;
  %623 = cast(%620, dtype="int64") /* ty=Tensor[(9, 11, 6), int64] */;
  %624 = shape_of(%622, dtype="int32") /* ty=Tensor[(3), int32] */;
  %625 = cast(%622, dtype="int64") /* ty=Tensor[(9, 11, 6), int64] */;
  %626 = dyn.reshape(%623, %624, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %627 = logical_and(%611, %612) /* ty=Tensor[(10, 12, 9), bool] */;
  %628 = %613.0;
  %629 = %614.0;
  %630 = %617.1;
  %631 = %618.0;
  %632 = subtract(%625, %626) /* ty=Tensor[(9, 11, 6), int64] */;
  (%627, %628, %629, %630, meta[relay.Constant][45] /* ty=Tensor[(112), float32] */, %631, %632)
}

def @func_1828(%var_1817: Tensor[(8, 2, 2), float32]) -> Tensor[(8, 2, 2), float64] {
  %633 = cast(meta[relay.Constant][46] /* ty=Tensor[(8, 2, 2), float32] */, dtype="float32") /* ty=Tensor[(8, 2, 2), float32] */;
  %634 = shape_of(%var_1817, dtype="int32") /* ty=Tensor[(3), int32] */;
  %635 = cast(%var_1817, dtype="float32") /* ty=Tensor[(8, 2, 2), float32] */;
  %636 = dyn.reshape(%633, %634, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %637 = minimum(%635, %636) /* ty=Tensor[(8, 2, 2), float32] */;
  %638 = cast(%637, dtype="float64") /* ty=Tensor[(8, 2, 2), float64] */;
  atan(%638) /* ty=Tensor[(8, 2, 2), float64] */
}

def @func_1438() -> (Tensor[(15, 7, 14), bool],) {
  %639 = @func_1313() /* ty=Tensor[(15, 7, 14), bool] */;
  (%639,)
}

def @func_1565() -> (Tensor[(15, 7, 14), float32],) {
  %640 = @func_1337() /* ty=Tensor[(15, 7, 14), float32] */;
  (%640,)
}

def @func_3705() -> (Tensor[(8), float32], Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), bool], Tensor[(13, 13, 12), float64], Tensor[(13, 13, 12), float64], Tensor[(10, 12, 9), float64]) {
  %641 = @func_3580() /* ty=(Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), float32], Tensor[(100), int16], Tensor[(8), float32], Tensor[(100), int16], Tensor[(112), int64]) */;
  %642 = @func_3191() /* ty=(Tensor[(15, 7, 14), bool],) */;
  %643 = @func_1438() /* ty=(Tensor[(15, 7, 14), bool],) */;
  %644 = cast(meta[relay.Constant][47] /* ty=Tensor[(13, 13, 12), float64] */, dtype="float64") /* ty=Tensor[(13, 13, 12), float64] */;
  %645 = cast(meta[relay.Constant][47] /* ty=Tensor[(13, 13, 12), float64] */, dtype="float64") /* ty=Tensor[(13, 13, 12), float64] */;
  %646 = atanh(%645) /* ty=Tensor[(13, 13, 12), float64] */;
  %647 = cast(%646, dtype="float64") /* ty=Tensor[(13, 13, 12), float64] */;
  %648 = @func_1693() /* ty=(Tensor[(10, 12, 9), float64],) */;
  %649 = %641.3;
  %650 = %642.0;
  %651 = %643.0;
  %652 = log2(%644) /* ty=Tensor[(13, 13, 12), float64] */;
  %653 = tan(%647) /* ty=Tensor[(13, 13, 12), float64] */;
  %654 = %648.0;
  (%649, %650, %651, %652, %653, %654)
}

def @func_3814() -> Tensor[(14, 15, 14), int32] {
  @func_1680() /* ty=Tensor[(14, 15, 14), int32] */
}

def @func_3580() -> (Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), float32], Tensor[(100), int16], Tensor[(8), float32], Tensor[(100), int16], Tensor[(112), int64]) {
  %655 = @func_3191() /* ty=(Tensor[(15, 7, 14), bool],) */;
  %656 = @func_3377() /* ty=Tensor[(15, 7, 14), bool] */;
  %657 = cast(%656, dtype="float32") /* ty=Tensor[(15, 7, 14), float32] */;
  %658 = cast(meta[relay.Constant][48] /* ty=Tensor[(8), float32] */, dtype="float32") /* ty=Tensor[(8), float32] */;
  %659 = cast(meta[relay.Constant][49] /* ty=Tensor[(100), int16] */, dtype="int16") /* ty=Tensor[(100), int16] */;
  %660 = cast(meta[relay.Constant][50] /* ty=Tensor[(112), int64] */, dtype="int64") /* ty=Tensor[(112), int64] */;
  %661 = reshape(%658, newshape=[2, 2, 2]) /* ty=Tensor[(2, 2, 2), float32] */;
  %662 = reshape(%659, newshape=[100]) /* ty=Tensor[(100), int16] */;
  %663 = reshape(%660, newshape=[112]) /* ty=Tensor[(112), int64] */;
  %664 = @func_3033(%661, %662, %663) /* ty=(Tensor[(2, 2, 2), float64], Tensor[(100), int16], Tensor[(154), float32], Tensor[(100), int16], Tensor[(112), int64]) */;
  %665 = %655.0;
  %666 = sigmoid(%657) /* ty=Tensor[(15, 7, 14), float32] */;
  %667 = %664.1;
  (%665, %666, %667, meta[relay.Constant][48] /* ty=Tensor[(8), float32] */, meta[relay.Constant][49] /* ty=Tensor[(100), int16] */, meta[relay.Constant][50] /* ty=Tensor[(112), int64] */)
}

def @func_8207(%var_8199: Tensor[(8, 6, 6), float32]) -> Tensor[(8, 6, 6), float32] {
  %668 = cast(%var_8199, dtype="float32") /* ty=Tensor[(8, 6, 6), float32] */;
  log2(%668) /* ty=Tensor[(8, 6, 6), float32] */
}

def @func_3721() -> (Tensor[(14, 15, 14), int32],) {
  %669 = @func_3295() /* ty=(Tensor[(14, 15, 14), int32], Tensor[(15, 7, 14), bool]) */;
  %670 = %669.0;
  (%670,)
}

def @func_4567(%var_4548: Tensor[(5, 4, 14), float64], %var_4549: Tensor[(5, 4, 14), float64]) -> (Tensor[(5, 4, 14), float64], Tensor[(100), int16], Tensor[(5, 20), int16]) {
  %671 = cast(%var_4549, dtype="float64") /* ty=Tensor[(5, 4, 14), float64] */;
  %672 = shape_of(%var_4548, dtype="int32") /* ty=Tensor[(3), int32] */;
  %673 = cast(%var_4548, dtype="float64") /* ty=Tensor[(5, 4, 14), float64] */;
  %674 = dyn.reshape(%671, %672, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %675 = cast(meta[relay.Constant][51] /* ty=Tensor[(5, 20), int16] */, dtype="int16") /* ty=Tensor[(5, 20), int16] */;
  %676 = reshape(%675, newshape=[5, 20]) /* ty=Tensor[(5, 20), int16] */;
  %677 = @func_1913(%676) /* ty=(Tensor[(15, 7, 14), bool], Tensor[(100), int16], Tensor[(154), float32], Tensor[(5, 20), int16], Tensor[(112), int64], Tensor[(7, 2, 11), float32], Tensor[(100), int16], Tensor[(15, 7, 14), float32]) */;
  %678 = divide(%673, %674) /* ty=Tensor[(5, 4, 14), float64] */;
  %679 = %677.6;
  (%678, %679, meta[relay.Constant][51] /* ty=Tensor[(5, 20), int16] */)
}

def @func_3442() -> (Tensor[(7, 10, 2), float64],) {
  %680 = cast(meta[relay.Constant][52] /* ty=Tensor[(7, 10, 2), float64] */, dtype="float64") /* ty=Tensor[(7, 10, 2), float64] */;
  %681 = exp(%680) /* ty=Tensor[(7, 10, 2), float64] */;
  (%681,)
}

def @func_1406() -> Tensor[(15, 7, 14), float32] {
  %682 = @func_1313() /* ty=Tensor[(15, 7, 14), bool] */;
  %683 = cast(%682, dtype="float32") /* ty=Tensor[(15, 7, 14), float32] */;
  cos(%683) /* ty=Tensor[(15, 7, 14), float32] */
}

def @func_8394() -> (Tensor[(14, 15, 14), int32],) {
  %684 = @func_6781() /* ty=(Tensor[(14, 15, 14), int32],) */;
  %685 = %684.0;
  (%685,)
}

def @func_3191() -> (Tensor[(15, 7, 14), bool],) {
  %686 = @func_3057() /* ty=Tensor[(15, 7, 14), bool] */;
  (%686,)
}

def @func_1534(%var_1520: Tensor[(11, 10, 11), uint32], %var_1521: Tensor[(11, 10, 11), uint32]) -> Tensor[(11, 10, 11), uint32] {
  %687 = cast(%var_1521, dtype="uint32") /* ty=Tensor[(11, 10, 11), uint32] */;
  %688 = shape_of(%var_1520, dtype="int32") /* ty=Tensor[(3), int32] */;
  %689 = cast(%var_1520, dtype="uint32") /* ty=Tensor[(11, 10, 11), uint32] */;
  %690 = dyn.reshape(%687, %688, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  multiply(%689, %690) /* ty=Tensor[(11, 10, 11), uint32] */
}

def @func_6509() -> (Tensor[(15, 7, 14), bool],) {
  %691 = @func_3526() /* ty=Tensor[(15, 7, 14), bool] */;
  (%691,)
}

def @func_1613(%var_1589: Tensor[(13, 4, 5), int8]) -> (Tensor[(13, 4, 5), bool], Tensor[(5, 2, 10), bool], Tensor[(50), int16], Tensor[(5, 20), int16], Tensor[(112), int64], Tensor[(13, 4, 5), float64]) {
  %692 = cast(%var_1589, dtype="bool") /* ty=Tensor[(13, 4, 5), bool] */;
  %693 = shape_of(meta[relay.Constant][53] /* ty=Tensor[(13, 4, 5), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %694 = cast(meta[relay.Constant][53] /* ty=Tensor[(13, 4, 5), int8] */, dtype="bool") /* ty=Tensor[(13, 4, 5), bool] */;
  %695 = dyn.reshape(%692, %693, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %696 = cast(meta[relay.Constant][54] /* ty=Tensor[(50), int16] */, dtype="int16") /* ty=Tensor[(50), int16] */;
  %697 = cast(meta[relay.Constant][55] /* ty=Tensor[(5, 20), int16] */, dtype="int16") /* ty=Tensor[(5, 20), int16] */;
  %698 = cast(meta[relay.Constant][56] /* ty=Tensor[(112), int64] */, dtype="int64") /* ty=Tensor[(112), int64] */;
  %699 = reshape(%696, newshape=[5, 1, 10]) /* ty=Tensor[(5, 1, 10), int16] */;
  %700 = reshape(%697, newshape=[5, 2, 10]) /* ty=Tensor[(5, 2, 10), int16] */;
  %701 = reshape(%698, newshape=[112]) /* ty=Tensor[(112), int64] */;
  %702 = @func_476(%699, %700, %701) /* ty=(Tensor[(5, 2, 10), bool], Tensor[(14, 2, 4), bool], Tensor[(112), int64]) */;
  %703 = cast(meta[relay.Constant][53] /* ty=Tensor[(13, 4, 5), int8] */, dtype="float64") /* ty=Tensor[(13, 4, 5), float64] */;
  %704 = equal(%694, %695) /* ty=Tensor[(13, 4, 5), bool] */;
  %705 = %702.0;
  %706 = exp(%703) /* ty=Tensor[(13, 4, 5), float64] */;
  (%704, %705, meta[relay.Constant][54] /* ty=Tensor[(50), int16] */, meta[relay.Constant][55] /* ty=Tensor[(5, 20), int16] */, meta[relay.Constant][56] /* ty=Tensor[(112), int64] */, %706)
}

def @func_7008() -> (Tensor[(10, 13, 14), float32],) {
  %707 = @func_3534() /* ty=(Tensor[(15, 7, 14), float32], Tensor[(10, 13, 14), float32], Tensor[(1820), float32]) */;
  %708 = %707.1;
  (%708,)
}

def @func_4323() -> Tensor[(15, 7, 14), bool] {
  %709 = @func_1438() /* ty=(Tensor[(15, 7, 14), bool],) */;
  %709.0
}

def @func_7604(%var_7600: Tensor[(260), int8]) -> (Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), bool], Tensor[(260), int8]) {
  %710 = @func_3882() /* ty=(Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), float64], Tensor[(10, 13, 14), float32], Tensor[(1820), float32]) */;
  %711 = cast(%var_7600, dtype="int8") /* ty=Tensor[(260), int8] */;
  %712 = reshape(%711, newshape=[260]) /* ty=Tensor[(260), int8] */;
  %713 = @func_2486(%712) /* ty=(Tensor[(15, 7, 14), bool], Tensor[(13, 4, 5), float64], Tensor[(260), int8]) */;
  %714 = %710.0;
  %715 = %713.0;
  (%714, %715, %var_7600)
}

def @func_6030() -> Tensor[(15, 7, 14), bool] {
  @func_4323() /* ty=Tensor[(15, 7, 14), bool] */
}

def @func_1680() -> Tensor[(14, 15, 14), int32] {
  %716 = cast(meta[relay.Constant][57] /* ty=Tensor[(14, 15, 14), float32] */, dtype="float32") /* ty=Tensor[(14, 15, 14), float32] */;
  %717 = acos(%716) /* ty=Tensor[(14, 15, 14), float32] */;
  %718 = cast(meta[relay.Constant][57] /* ty=Tensor[(14, 15, 14), float32] */, dtype="int32") /* ty=Tensor[(14, 15, 14), int32] */;
  %719 = shape_of(%717, dtype="int32") /* ty=Tensor[(3), int32] */;
  %720 = cast(%717, dtype="int32") /* ty=Tensor[(14, 15, 14), int32] */;
  %721 = dyn.reshape(%718, %719, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  left_shift(%720, %721) /* ty=Tensor[(14, 15, 14), int32] */
}

def @func_5066() -> Tensor[(10, 12, 9), float64] {
  %722 = @func_1693() /* ty=(Tensor[(10, 12, 9), float64],) */;
  %722.0
}

def @func_7430(%var_7420: Tensor[(14, 15, 14), float32], %var_7428: Tensor[(112), int64]) -> (Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), bool], Tensor[(14, 15, 14), float32], Tensor[(15, 7, 14), bool], Tensor[(112), int64]) {
  %723 = @func_5930() /* ty=(Tensor[(15, 7, 14), bool],) */;
  %724 = @func_2229() /* ty=(Tensor[(15, 7, 14), bool],) */;
  %725 = @func_5016() /* ty=(Tensor[(14, 15, 14), float64], Tensor[(14, 15, 14), float32], Tensor[(15, 7, 14), bool], Tensor[(100), int16], Tensor[(100), int16]) */;
  %726 = %725.1;
  %727 = cast(%var_7420, dtype="float32") /* ty=Tensor[(14, 15, 14), float32] */;
  %728 = shape_of(%726, dtype="int32") /* ty=Tensor[(3), int32] */;
  %729 = cast(%726, dtype="float32") /* ty=Tensor[(14, 15, 14), float32] */;
  %730 = dyn.reshape(%727, %728, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %731 = cast(%var_7428, dtype="int64") /* ty=Tensor[(112), int64] */;
  %732 = reshape(%731, newshape=[112]) /* ty=Tensor[(112), int64] */;
  %733 = @func_2213(%732) /* ty=(Tensor[(15, 7, 14), bool], Tensor[(14, 2, 4), int64], Tensor[(112), int64]) */;
  %734 = %723.0;
  %735 = @func_4595() /* ty=Tensor[(15, 7, 14), bool] */;
  %736 = %724.0;
  %737 = add(%729, %730) /* ty=Tensor[(14, 15, 14), float32] */;
  %738 = %733.0;
  (%734, %735, %736, %737, %738, %var_7428)
}

def @func_6958() -> (Tensor[(15, 7, 14), bool],) {
  %739 = @func_5930() /* ty=(Tensor[(15, 7, 14), bool],) */;
  %740 = %739.0;
  (%740,)
}

def @func_2087(%var_2058: float64, %var_2059: Tensor[(8, 2, 13), float64], %var_2067: Tensor[(1210), uint32], %var_2073: Tensor[(1210), float64]) -> (Tensor[(8, 2, 13), bool], Tensor[(15, 7, 14), bool], Tensor[(1210), bool]) {
  %741 = cast(%var_2058, dtype="bool") /* ty=bool */;
  %742 = cast(%var_2059, dtype="bool") /* ty=Tensor[(8, 2, 13), bool] */;
  %743 = cast(%var_2067, dtype="uint32") /* ty=Tensor[(1210), uint32] */;
  %744 = reshape(%743, newshape=[605, 2]) /* ty=Tensor[(605, 2), uint32] */;
  %745 = @func_2026(%744) /* ty=(Tensor[(15, 7, 14), bool], Tensor[(11, 10, 11), uint32], Tensor[(605, 2), uint32]) */;
  %746 = cast(%var_2067, dtype="float64") /* ty=Tensor[(1210), float64] */;
  %747 = cosh(%746) /* ty=Tensor[(1210), float64] */;
  %748 = cast(%var_2073, dtype="bool") /* ty=Tensor[(1210), bool] */;
  %749 = shape_of(%747, dtype="int32") /* ty=Tensor[(1), int32] */;
  %750 = cast(%747, dtype="bool") /* ty=Tensor[(1210), bool] */;
  %751 = dyn.reshape(%748, %749, newshape=[]) /* ty=Tensor[(?), bool] */;
  %752 = greater_equal(%741, %742) /* ty=Tensor[(8, 2, 13), bool] */;
  %753 = %745.0;
  %754 = less(%750, %751) /* ty=Tensor[(1210), bool] */;
  (%752, %753, %754)
}

def @func_6009() -> (Tensor[(80), float32], Tensor[(80), float32], Tensor[(7, 260), float32], Tensor[(100), float32]) {
  %755 = cast(meta[relay.Constant][58] /* ty=Tensor[(80), float32] */, dtype="float32") /* ty=Tensor[(80), float32] */;
  %756 = @func_4385() /* ty=(Tensor[(100), int16], Tensor[(8, 2, 2), float64], Tensor[(32), float32]) */;
  %757 = %756.0;
  %758 = cast(%757, dtype="float64") /* ty=Tensor[(100), float64] */;
  %759 = sinh(%758) /* ty=Tensor[(100), float64] */;
  %760 = cast(%759, dtype="int16") /* ty=Tensor[(100), int16] */;
  %761 = cast(meta[relay.Constant][59] /* ty=Tensor[(7, 260), float32] */, dtype="float32") /* ty=Tensor[(7, 260), float32] */;
  %762 = reshape(%755, newshape=[80]) /* ty=Tensor[(80), float32] */;
  %763 = reshape(%760, newshape=[50, 2]) /* ty=Tensor[(50, 2), int16] */;
  %764 = reshape(%761, newshape=[1820]) /* ty=Tensor[(1820), float32] */;
  %765 = @func_4130(%762, %763, %764) /* ty=(Tensor[(15, 7, 14), bool], Tensor[(14, 2, 4), int64], Tensor[(80), float32], Tensor[(50, 2), int16], Tensor[(1820), float32]) */;
  %766 = cast(%759, dtype="float32") /* ty=Tensor[(100), float32] */;
  %767 = shape_of(%757, dtype="int32") /* ty=Tensor[(1), int32] */;
  %768 = cast(%757, dtype="float32") /* ty=Tensor[(100), float32] */;
  %769 = dyn.reshape(%766, %767, newshape=[]) /* ty=Tensor[(?), float32] */;
  %770 = %765.2;
  %771 = maximum(%768, %769) /* ty=Tensor[(100), float32] */;
  (%770, meta[relay.Constant][58] /* ty=Tensor[(80), float32] */, meta[relay.Constant][59] /* ty=Tensor[(7, 260), float32] */, %771)
}

def @func_5691() -> Tensor[(15, 7, 14), bool] {
  %772 = @func_2878() /* ty=(Tensor[(15, 7, 14), bool],) */;
  %772.0
}

def @func_5896() -> (Tensor[(10, 12, 9), float64],) {
  %773 = @func_5066() /* ty=Tensor[(10, 12, 9), float64] */;
  (%773,)
}

def @func_8036(%var_8031: Tensor[(13, 13, 12), float64]) -> (Tensor[(13, 13, 12), bool],) {
  %774 = @func_4878() /* ty=(Tensor[(13, 13, 12), float64],) */;
  %775 = %774.0;
  %776 = cast(%var_8031, dtype="bool") /* ty=Tensor[(13, 13, 12), bool] */;
  %777 = shape_of(%775, dtype="int32") /* ty=Tensor[(3), int32] */;
  %778 = cast(%775, dtype="bool") /* ty=Tensor[(13, 13, 12), bool] */;
  %779 = dyn.reshape(%776, %777, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %780 = greater_equal(%778, %779) /* ty=Tensor[(13, 13, 12), bool] */;
  (%780,)
}

def @func_4092() -> (Tensor[(15, 7, 14), bool],) {
  %781 = @func_2229() /* ty=(Tensor[(15, 7, 14), bool],) */;
  %782 = %781.0;
  (%782,)
}

def @func_2878() -> (Tensor[(15, 7, 14), bool],) {
  %783 = @func_1313() /* ty=Tensor[(15, 7, 14), bool] */;
  (%783,)
}

def @func_6920() -> Tensor[(15, 7, 14), float32] {
  %784 = @func_1565() /* ty=(Tensor[(15, 7, 14), float32],) */;
  %784.0
}

def @func_7055(%var_7044: Tensor[(13, 13, 12), float64]) -> Tensor[(13, 13, 12), float32] {
  %785 = @func_3705() /* ty=(Tensor[(8), float32], Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), bool], Tensor[(13, 13, 12), float64], Tensor[(13, 13, 12), float64], Tensor[(10, 12, 9), float64]) */;
  %786 = %785.3;
  %787 = cast(%var_7044, dtype="float32") /* ty=Tensor[(13, 13, 12), float32] */;
  %788 = shape_of(%786, dtype="int32") /* ty=Tensor[(3), int32] */;
  %789 = cast(%786, dtype="float32") /* ty=Tensor[(13, 13, 12), float32] */;
  %790 = dyn.reshape(%787, %788, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  add(%789, %790) /* ty=Tensor[(13, 13, 12), float32] */
}

def @func_3128(%var_3111: Tensor[(14, 15, 14), int32], %var_3123: Tensor[(14, 15, 14), uint16]) -> Tensor[(14, 15, 14), int32] {
  %791 = @func_1680() /* ty=Tensor[(14, 15, 14), int32] */;
  %792 = cast(%var_3111, dtype="uint16") /* ty=Tensor[(14, 15, 14), uint16] */;
  %793 = shape_of(%791, dtype="int32") /* ty=Tensor[(3), int32] */;
  %794 = cast(%791, dtype="uint16") /* ty=Tensor[(14, 15, 14), uint16] */;
  %795 = dyn.reshape(%792, %793, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %796 = minimum(%794, %795) /* ty=Tensor[(14, 15, 14), uint16] */;
  %797 = cast(%var_3123, dtype="int32") /* ty=Tensor[(14, 15, 14), int32] */;
  %798 = shape_of(%796, dtype="int32") /* ty=Tensor[(3), int32] */;
  %799 = cast(%796, dtype="int32") /* ty=Tensor[(14, 15, 14), int32] */;
  %800 = dyn.reshape(%797, %798, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  right_shift(%799, %800) /* ty=Tensor[(14, 15, 14), int32] */
}

def @func_6488() -> (Tensor[(15, 7, 14), float64],) {
  %801 = @func_5511() /* ty=(Tensor[(14, 15, 14), int32], Tensor[(15, 7, 14), bool]) */;
  %802 = %801.1;
  %803 = cast(%802, dtype="float64") /* ty=Tensor[(15, 7, 14), float64] */;
  %804 = asin(%803) /* ty=Tensor[(15, 7, 14), float64] */;
  (%804,)
}

def @func_4595() -> Tensor[(15, 7, 14), bool] {
  %805 = @func_4092() /* ty=(Tensor[(15, 7, 14), bool],) */;
  %805.0
}

def @func_2486(%var_2482: Tensor[(260), int8]) -> (Tensor[(15, 7, 14), bool], Tensor[(13, 4, 5), float64], Tensor[(260), int8]) {
  %806 = @func_1337() /* ty=Tensor[(15, 7, 14), float32] */;
  %807 = cast(meta[relay.Constant][60] /* ty=Tensor[(15, 7, 14), float32] */, dtype="bool") /* ty=Tensor[(15, 7, 14), bool] */;
  %808 = shape_of(%806, dtype="int32") /* ty=Tensor[(3), int32] */;
  %809 = cast(%806, dtype="bool") /* ty=Tensor[(15, 7, 14), bool] */;
  %810 = dyn.reshape(%807, %808, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %811 = cast(%var_2482, dtype="int8") /* ty=Tensor[(260), int8] */;
  %812 = reshape(%811, newshape=[13, 4, 5]) /* ty=Tensor[(13, 4, 5), int8] */;
  %813 = @func_1613(%812) /* ty=(Tensor[(13, 4, 5), bool], Tensor[(5, 2, 10), bool], Tensor[(50), int16], Tensor[(5, 20), int16], Tensor[(112), int64], Tensor[(13, 4, 5), float64]) */;
  %814 = less_equal(%809, %810) /* ty=Tensor[(15, 7, 14), bool] */;
  %815 = %813.5;
  (%814, %815, %var_2482)
}

def @func_4402() -> (Tensor[(15, 7, 14), float32],) {
  %816 = @func_1337() /* ty=Tensor[(15, 7, 14), float32] */;
  (%816,)
}

def @func_8419() -> (Tensor[(15, 7, 14), bool],) {
  %817 = @func_4068() /* ty=(Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), bool]) */;
  %818 = %817.1;
  (%818,)
}

def @func_2286(%var_2252: Tensor[(100), int16]) -> (Tensor[(154), float32], Tensor[(100), int16], Tensor[(15, 7, 14), bool], Tensor[(1820), float32], int16, Tensor[(48), int16], Tensor[(240), bool], Tensor[(1820), float32]) {
  %819 = cast(%var_2252, dtype="int16") /* ty=Tensor[(100), int16] */;
  %820 = reshape(%819, newshape=[100]) /* ty=Tensor[(100), int16] */;
  %821 = @func_1796(%820) /* ty=(Tensor[(15, 7, 14), bool], Tensor[(14, 2, 4), bool], Tensor[(154), float32], Tensor[(100), int16], Tensor[(112), int64], Tensor[(15, 7, 14), float32]) */;
  %822 = @func_2161() /* ty=Tensor[(15, 7, 14), bool] */;
  %823 = cast(meta[relay.Constant][61] /* ty=Tensor[(15, 7, 14), bool] */, dtype="float32") /* ty=Tensor[(15, 7, 14), float32] */;
  %824 = shape_of(%822, dtype="int32") /* ty=Tensor[(3), int32] */;
  %825 = cast(%822, dtype="float32") /* ty=Tensor[(15, 7, 14), float32] */;
  %826 = dyn.reshape(%823, %824, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %827 = floor_mod(%825, %826) /* ty=Tensor[(15, 7, 14), float32] */;
  %828 = cast(%822, dtype="uint16") /* ty=Tensor[(15, 7, 14), uint16] */;
  %829 = shape_of(%827, dtype="int32") /* ty=Tensor[(3), int32] */;
  %830 = cast(%827, dtype="uint16") /* ty=Tensor[(15, 7, 14), uint16] */;
  %831 = dyn.reshape(%828, %829, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %832 = left_shift(%830, %831) /* ty=Tensor[(15, 7, 14), uint16] */;
  %833 = cast(%827, dtype="bool") /* ty=Tensor[(15, 7, 14), bool] */;
  %834 = shape_of(%832, dtype="int32") /* ty=Tensor[(3), int32] */;
  %835 = cast(%832, dtype="bool") /* ty=Tensor[(15, 7, 14), bool] */;
  %836 = dyn.reshape(%833, %834, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %837 = cast(meta[relay.Constant][62] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %838 = cast(meta[relay.Constant][63] /* ty=Tensor[(48), int16] */, dtype="int16") /* ty=Tensor[(48), int16] */;
  %839 = cast(meta[relay.Constant][64] /* ty=Tensor[(240), bool] */, dtype="bool") /* ty=Tensor[(240), bool] */;
  %840 = %821.2;
  %841 = cast(%840, dtype="float32") /* ty=Tensor[(154), float32] */;
  %842 = cast(%var_2252, dtype="int16") /* ty=Tensor[(100), int16] */;
  %843 = cast(meta[relay.Constant][65] /* ty=Tensor[(1820), float32] */, dtype="float32") /* ty=Tensor[(1820), float32] */;
  %844 = reshape(%837, newshape=[]) /* ty=int16 */;
  %845 = reshape(%838, newshape=[12, 4, 1]) /* ty=Tensor[(12, 4, 1), int16] */;
  %846 = reshape(%839, newshape=[12, 4, 5]) /* ty=Tensor[(12, 4, 5), bool] */;
  %847 = reshape(%841, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %848 = reshape(%842, newshape=[100]) /* ty=Tensor[(100), int16] */;
  %849 = reshape(%843, newshape=[1820]) /* ty=Tensor[(1820), float32] */;
  %850 = @func_1093(%844, %845, %846, %847, %848, %849) /* ty=(Tensor[(12, 4, 1), bool], Tensor[(12, 4, 5), uint8], Tensor[(154), float32], Tensor[(100), int16], Tensor[(112), int64], Tensor[(12, 4, 100), uint8], Tensor[(5, 20), int16], Tensor[(1, 80), float32], Tensor[(1820), float32]) */;
  %851 = less(%835, %836) /* ty=Tensor[(15, 7, 14), bool] */;
  %852 = %850.8;
  (%840, %var_2252, %851, %852, meta[relay.Constant][62] /* ty=int16 */, meta[relay.Constant][63] /* ty=Tensor[(48), int16] */, meta[relay.Constant][64] /* ty=Tensor[(240), bool] */, meta[relay.Constant][65] /* ty=Tensor[(1820), float32] */)
}

def @func_5016() -> (Tensor[(14, 15, 14), float64], Tensor[(14, 15, 14), float32], Tensor[(15, 7, 14), bool], Tensor[(100), int16], Tensor[(100), int16]) {
  %853 = @func_3803() /* ty=Tensor[(14, 15, 14), int32] */;
  %854 = cast(%853, dtype="float32") /* ty=Tensor[(14, 15, 14), float32] */;
  %855 = exp(%854) /* ty=Tensor[(14, 15, 14), float32] */;
  %856 = cast(%853, dtype="float64") /* ty=Tensor[(14, 15, 14), float64] */;
  %857 = shape_of(%855, dtype="int32") /* ty=Tensor[(3), int32] */;
  %858 = cast(%855, dtype="float64") /* ty=Tensor[(14, 15, 14), float64] */;
  %859 = dyn.reshape(%856, %857, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %860 = cast(%853, dtype="float32") /* ty=Tensor[(14, 15, 14), float32] */;
  %861 = cast(meta[relay.Constant][66] /* ty=Tensor[(100), int16] */, dtype="int16") /* ty=Tensor[(100), int16] */;
  %862 = reshape(%861, newshape=[100]) /* ty=Tensor[(100), int16] */;
  %863 = @func_2286(%862) /* ty=(Tensor[(154), float32], Tensor[(100), int16], Tensor[(15, 7, 14), bool], Tensor[(1820), float32], int16, Tensor[(48), int16], Tensor[(240), bool], Tensor[(1820), float32]) */;
  %864 = multiply(%858, %859) /* ty=Tensor[(14, 15, 14), float64] */;
  %865 = log2(%860) /* ty=Tensor[(14, 15, 14), float32] */;
  %866 = @func_3057() /* ty=Tensor[(15, 7, 14), bool] */;
  %867 = %863.1;
  (%864, %865, %866, %867, meta[relay.Constant][66] /* ty=Tensor[(100), int16] */)
}

def @func_450(%var_441: Tensor[(14, 2, 4), int64]) -> (Tensor[(14, 2, 4), int64], Tensor[(14, 2, 4), bool]) {
  %868 = cast(%var_441, dtype="int64") /* ty=Tensor[(14, 2, 4), int64] */;
  %869 = shape_of(meta[relay.Constant][67] /* ty=Tensor[(14, 2, 4), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %870 = cast(meta[relay.Constant][67] /* ty=Tensor[(14, 2, 4), int64] */, dtype="int64") /* ty=Tensor[(14, 2, 4), int64] */;
  %871 = dyn.reshape(%868, %869, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %872 = cast(%var_441, dtype="bool") /* ty=Tensor[(14, 2, 4), bool] */;
  %873 = shape_of(meta[relay.Constant][67] /* ty=Tensor[(14, 2, 4), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %874 = cast(meta[relay.Constant][67] /* ty=Tensor[(14, 2, 4), int64] */, dtype="bool") /* ty=Tensor[(14, 2, 4), bool] */;
  %875 = dyn.reshape(%872, %873, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %876 = right_shift(%870, %871) /* ty=Tensor[(14, 2, 4), int64] */;
  %877 = not_equal(%874, %875) /* ty=Tensor[(14, 2, 4), bool] */;
  (%876, %877)
}

def @func_5756(%var_5735: Tensor[(2, 4, 14), float32]) -> (Tensor[(2, 4, 14), float32], Tensor[(10, 12, 9), float64], Tensor[(13, 13, 12), float64]) {
  %878 = cast(%var_5735, dtype="float32") /* ty=Tensor[(2, 4, 14), float32] */;
  %879 = @func_3085() /* ty=(Tensor[(10, 12, 9), float64], Tensor[(15, 7, 14), bool]) */;
  %880 = @func_4878() /* ty=(Tensor[(13, 13, 12), float64],) */;
  %881 = asinh(%878) /* ty=Tensor[(2, 4, 14), float32] */;
  %882 = %879.0;
  %883 = %880.0;
  (%881, %882, %883)
}

def @func_7951(%var_7874: Tensor[(1210), uint32], %var_7912: Tensor[(1248), uint16]) -> (Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), bool], Tensor[(1210), uint32], Tensor[(8, 12, 13), bool], Tensor[(1248), uint16], Tensor[(14, 15, 14), int32]) {
  %884 = @func_3295() /* ty=(Tensor[(14, 15, 14), int32], Tensor[(15, 7, 14), bool]) */;
  %885 = @func_6896() /* ty=(Tensor[(10, 12, 9), bool], Tensor[(10, 12, 9), float64], Tensor[(15, 7, 14), bool], Tensor[(10, 12, 9), float64], Tensor[(112), float32], Tensor[(15, 7, 14), bool], Tensor[(9, 11, 6), int64]) */;
  %886 = cast(%var_7874, dtype="uint32") /* ty=Tensor[(1210), uint32] */;
  %887 = reshape(%886, newshape=[1210]) /* ty=Tensor[(1210), uint32] */;
  %888 = @func_2139(%887) /* ty=(Tensor[(15, 7, 14), bool], Tensor[(1210), float64]) */;
  %889 = cast(%var_7912, dtype="uint16") /* ty=Tensor[(1248), uint16] */;
  %890 = cast(%var_7912, dtype="uint16") /* ty=Tensor[(1248), uint16] */;
  %891 = reshape(%889, newshape=[8, 12, 13]) /* ty=Tensor[(8, 12, 13), uint16] */;
  %892 = reshape(%890, newshape=[8, 12, 13]) /* ty=Tensor[(8, 12, 13), uint16] */;
  %893 = %884.1;
  %894 = %885.2;
  %895 = %888.0;
  %896 = @func_3098(%891, %892) /* ty=Tensor[(8, 12, 13), bool] */;
  %897 = @func_1680() /* ty=Tensor[(14, 15, 14), int32] */;
  (%893, %894, %895, %var_7874, %896, %var_7912, %897)
}

def @func_6433() -> Tensor[(14, 15, 14), int32] {
  @func_4770() /* ty=Tensor[(14, 15, 14), int32] */
}

def @func_5930() -> (Tensor[(15, 7, 14), bool],) {
  %898 = @func_4323() /* ty=Tensor[(15, 7, 14), bool] */;
  (%898,)
}

def @func_6194() -> Tensor[(14, 15, 14), int32] {
  @func_1680() /* ty=Tensor[(14, 15, 14), int32] */
}

def @func_3085() -> (Tensor[(10, 12, 9), float64], Tensor[(15, 7, 14), bool]) {
  %899 = @func_1693() /* ty=(Tensor[(10, 12, 9), float64],) */;
  %900 = @func_1438() /* ty=(Tensor[(15, 7, 14), bool],) */;
  %901 = %899.0;
  %902 = %900.0;
  (%901, %902)
}

def @func_3377() -> Tensor[(15, 7, 14), bool] {
  %903 = @func_2878() /* ty=(Tensor[(15, 7, 14), bool],) */;
  %903.0
}

def @func_2229() -> (Tensor[(15, 7, 14), bool],) {
  %904 = @func_1438() /* ty=(Tensor[(15, 7, 14), bool],) */;
  %905 = %904.0;
  (%905,)
}

def @func_4130(%var_4125: Tensor[(80), float32], %var_4126: Tensor[(50, 2), int16], %var_4127: Tensor[(1820), float32]) -> (Tensor[(15, 7, 14), bool], Tensor[(14, 2, 4), int64], Tensor[(80), float32], Tensor[(50, 2), int16], Tensor[(1820), float32]) {
  %906 = @func_3191() /* ty=(Tensor[(15, 7, 14), bool],) */;
  %907 = cast(%var_4125, dtype="float32") /* ty=Tensor[(80), float32] */;
  %908 = cast(%var_4126, dtype="int16") /* ty=Tensor[(50, 2), int16] */;
  %909 = cast(%var_4127, dtype="float32") /* ty=Tensor[(1820), float32] */;
  %910 = reshape(%907, newshape=[16, 1, 5]) /* ty=Tensor[(16, 1, 5), float32] */;
  %911 = reshape(%908, newshape=[5, 20]) /* ty=Tensor[(5, 20), int16] */;
  %912 = reshape(%909, newshape=[1820, 1]) /* ty=Tensor[(1820, 1), float32] */;
  %913 = @func_709(%910, %911, %912) /* ty=(Tensor[(5, 2, 10), bool], Tensor[(5, 10), int16], Tensor[(5, 20), int16], Tensor[(112, 1), int64], Tensor[(16, ?, 5), uint64], Tensor[(16, 1, 5), float32], Tensor[(14, 2, 4), int64], Tensor[(10, 13, 14), float32], Tensor[(1820, 1), float32]) */;
  %914 = %906.0;
  %915 = %913.6;
  (%914, %915, %var_4125, %var_4126, %var_4127)
}

def @func_5511() -> (Tensor[(14, 15, 14), int32], Tensor[(15, 7, 14), bool]) {
  %916 = @func_4185() /* ty=(Tensor[(15, 7, 14), bool], Tensor[(14, 15, 14), int32], Tensor[(14, 15, 14), int32]) */;
  %917 = @func_5286() /* ty=Tensor[(15, 7, 14), bool] */;
  %918 = cast(meta[relay.Constant][68] /* ty=Tensor[(15, 7, 14), bool] */, dtype="bool") /* ty=Tensor[(15, 7, 14), bool] */;
  %919 = shape_of(%917, dtype="int32") /* ty=Tensor[(3), int32] */;
  %920 = cast(%917, dtype="bool") /* ty=Tensor[(15, 7, 14), bool] */;
  %921 = dyn.reshape(%918, %919, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %922 = %916.1;
  %923 = logical_or(%920, %921) /* ty=Tensor[(15, 7, 14), bool] */;
  (%922, %923)
}

def @func_6131(%var_6108: Tensor[(14, 15, 14), int32]) -> (Tensor[(15, 7, 14), bool], Tensor[(14, 15, 14), bool]) {
  %924 = @func_5511() /* ty=(Tensor[(14, 15, 14), int32], Tensor[(15, 7, 14), bool]) */;
  %925 = %924.0;
  %926 = cast(%var_6108, dtype="bool") /* ty=Tensor[(14, 15, 14), bool] */;
  %927 = shape_of(%925, dtype="int32") /* ty=Tensor[(3), int32] */;
  %928 = cast(%925, dtype="bool") /* ty=Tensor[(14, 15, 14), bool] */;
  %929 = dyn.reshape(%926, %927, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %930 = @func_3926() /* ty=Tensor[(15, 7, 14), bool] */;
  %931 = equal(%928, %929) /* ty=Tensor[(14, 15, 14), bool] */;
  (%930, %931)
}

def @func_5214() -> (Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), bool]) {
  %932 = @func_4092() /* ty=(Tensor[(15, 7, 14), bool],) */;
  %933 = %932.0;
  %934 = @func_3170() /* ty=Tensor[(15, 7, 14), bool] */;
  (%933, %934)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_5512() -> (Tensor[(14, 15, 14), int32], Tensor[(15, 7, 14), bool]) {
  %8 = fn () -> (Tensor[(14, 15, 14), int32], Tensor[(15, 7, 14), bool]) {
    %0 = @func_4185() /* ty=(Tensor[(15, 7, 14), bool], Tensor[(14, 15, 14), int32], Tensor[(14, 15, 14), int32]) */;
    %1 = @func_5286() /* ty=Tensor[(15, 7, 14), bool] */;
    %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(15, 7, 14), bool] */, dtype="bool") /* ty=Tensor[(15, 7, 14), bool] */;
    %3 = shape_of(%1, dtype="int32") /* ty=Tensor[(3), int32] */;
    %4 = cast(%1, dtype="bool") /* ty=Tensor[(15, 7, 14), bool] */;
    %5 = dyn.reshape(%2, %3, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %6 = %0.1;
    %7 = logical_or(%4, %5) /* ty=Tensor[(15, 7, 14), bool] */;
    (%6, %7)
  };
  %8() /* ty=(Tensor[(14, 15, 14), int32], Tensor[(15, 7, 14), bool]) */
}

def @func_6921() -> Tensor[(15, 7, 14), float32] {
  %10 = fn () -> Tensor[(15, 7, 14), float32] {
    %9 = @func_1565() /* ty=(Tensor[(15, 7, 14), float32],) */;
    %9.0
  };
  %10() /* ty=Tensor[(15, 7, 14), float32] */
}

def @func_6958() -> (Tensor[(15, 7, 14), bool],) {
  %11 = @func_5930() /* ty=(Tensor[(15, 7, 14), bool],) */;
  %12 = %11.0;
  (%12,)
}

def @func_7058(%var_7056: Tensor[(13, 13, 12), float64]) -> Tensor[(13, 13, 12), float32] {
  @func_7055(%var_7056) /* ty=Tensor[(13, 13, 12), float32] */
}

def @func_4297() -> Tensor[(14, 15, 14), int32] {
  @func_1680() /* ty=Tensor[(14, 15, 14), int32] */
}

def @func_5249() -> (Tensor[(15, 7, 14), float32], Tensor[(10, 12, 9), float64]) {
  %13 = @func_4796() /* ty=(Tensor[(10, 12, 9), float64],) */;
  %14 = @func_4814() /* ty=Tensor[(15, 7, 14), float32] */;
  %15 = %13.0;
  (%14, %15)
}

def @func_2529(%var_2528: Tensor[(10, 12, 9), float64]) -> (Tensor[(10, 12, 9), int32],) {
  %23 = fn (%var_2519: Tensor[(10, 12, 9), float64]) -> (Tensor[(10, 12, 9), int32],) {
    %16 = @func_1693() /* ty=(Tensor[(10, 12, 9), float64],) */;
    %17 = %16.0;
    %18 = cast(%var_2519, dtype="int32") /* ty=Tensor[(10, 12, 9), int32] */;
    %19 = shape_of(%17, dtype="int32") /* ty=Tensor[(3), int32] */;
    %20 = cast(%17, dtype="int32") /* ty=Tensor[(10, 12, 9), int32] */;
    %21 = dyn.reshape(%18, %19, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %22 = subtract(%20, %21) /* ty=Tensor[(10, 12, 9), int32] */;
    (%22,)
  };
  %23(%var_2528) /* ty=(Tensor[(10, 12, 9), int32],) */
}

def @func_3058() -> Tensor[(15, 7, 14), bool] {
  %25 = fn () -> Tensor[(15, 7, 14), bool] {
    %24 = @func_1438() /* ty=(Tensor[(15, 7, 14), bool],) */;
    %24.0
  };
  %25() /* ty=Tensor[(15, 7, 14), bool] */
}

def @func_4798() -> (Tensor[(10, 12, 9), float64],) {
  @func_4796() /* ty=(Tensor[(10, 12, 9), float64],) */
}

def @func_1952() -> (Tensor[(15, 7, 14), bool],) {
  %27 = fn () -> (Tensor[(15, 7, 14), bool],) {
    %26 = @func_1473() /* ty=Tensor[(15, 7, 14), bool] */;
    (%26,)
  };
  %27() /* ty=(Tensor[(15, 7, 14), bool],) */
}

def @func_453(%var_451: Tensor[(14, 2, 4), int64]) -> (Tensor[(14, 2, 4), int64], Tensor[(14, 2, 4), bool]) {
  @func_450(%var_451) /* ty=(Tensor[(14, 2, 4), int64], Tensor[(14, 2, 4), bool]) */
}

def @func_6425(%var_6423: Tensor[(60, 2), int32]) -> (Tensor[(15, 7, 14), float32], Tensor[(5, 3, 8), bool], Tensor[(60, 2), int32]) {
  @func_6422(%var_6423) /* ty=(Tensor[(15, 7, 14), float32], Tensor[(5, 3, 8), bool], Tensor[(60, 2), int32]) */
}

def @func_3705() -> (Tensor[(8), float32], Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), bool], Tensor[(13, 13, 12), float64], Tensor[(13, 13, 12), float64], Tensor[(10, 12, 9), float64]) {
  %28 = @func_3580() /* ty=(Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), float32], Tensor[(100), int16], Tensor[(8), float32], Tensor[(100), int16], Tensor[(112), int64]) */;
  %29 = @func_3191() /* ty=(Tensor[(15, 7, 14), bool],) */;
  %30 = @func_1438() /* ty=(Tensor[(15, 7, 14), bool],) */;
  %31 = cast(meta[relay.Constant][1] /* ty=Tensor[(13, 13, 12), float64] */, dtype="float64") /* ty=Tensor[(13, 13, 12), float64] */;
  %32 = cast(meta[relay.Constant][1] /* ty=Tensor[(13, 13, 12), float64] */, dtype="float64") /* ty=Tensor[(13, 13, 12), float64] */;
  %33 = atanh(%32) /* ty=Tensor[(13, 13, 12), float64] */;
  %34 = cast(%33, dtype="float64") /* ty=Tensor[(13, 13, 12), float64] */;
  %35 = @func_1693() /* ty=(Tensor[(10, 12, 9), float64],) */;
  %36 = %28.3;
  %37 = %29.0;
  %38 = %30.0;
  %39 = log2(%31) /* ty=Tensor[(13, 13, 12), float64] */;
  %40 = tan(%34) /* ty=Tensor[(13, 13, 12), float64] */;
  %41 = %35.0;
  (%36, %37, %38, %39, %40, %41)
}

def @func_5640(%var_5639: Tensor[(14, 15, 14), int32]) -> (Tensor[(14, 15, 14), uint8], Tensor[(15, 7, 14), bool], Tensor[(10, 13, 14), float32]) {
  %52 = fn (%var_5596: Tensor[(14, 15, 14), int32]) -> (Tensor[(14, 15, 14), uint8], Tensor[(15, 7, 14), bool], Tensor[(10, 13, 14), float32]) {
    %42 = @func_4318() /* ty=(Tensor[(14, 15, 14), int32], Tensor[(8), float32]) */;
    %43 = %42.0;
    %44 = cast(%var_5596, dtype="uint8") /* ty=Tensor[(14, 15, 14), uint8] */;
    %45 = shape_of(%43, dtype="int32") /* ty=Tensor[(3), int32] */;
    %46 = cast(%43, dtype="uint8") /* ty=Tensor[(14, 15, 14), uint8] */;
    %47 = dyn.reshape(%44, %45, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %48 = @func_3882() /* ty=(Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), float64], Tensor[(10, 13, 14), float32], Tensor[(1820), float32]) */;
    %49 = subtract(%46, %47) /* ty=Tensor[(14, 15, 14), uint8] */;
    %50 = @func_3526() /* ty=Tensor[(15, 7, 14), bool] */;
    %51 = %48.2;
    (%49, %50, %51)
  };
  %52(%var_5639) /* ty=(Tensor[(14, 15, 14), uint8], Tensor[(15, 7, 14), bool], Tensor[(10, 13, 14), float32]) */
}

def @func_2028(%var_2027: Tensor[(605, 2), uint32]) -> (Tensor[(15, 7, 14), bool], Tensor[(11, 10, 11), uint32], Tensor[(605, 2), uint32]) {
  %59 = fn (%var_2016: Tensor[(605, 2), uint32]) -> (Tensor[(15, 7, 14), bool], Tensor[(11, 10, 11), uint32], Tensor[(605, 2), uint32]) {
    %53 = cast(%var_2016, dtype="uint32") /* ty=Tensor[(605, 2), uint32] */;
    %54 = cast(%var_2016, dtype="uint32") /* ty=Tensor[(605, 2), uint32] */;
    %55 = reshape(%53, newshape=[11, 10, 11]) /* ty=Tensor[(11, 10, 11), uint32] */;
    %56 = reshape(%54, newshape=[11, 10, 11]) /* ty=Tensor[(11, 10, 11), uint32] */;
    %57 = @func_1473() /* ty=Tensor[(15, 7, 14), bool] */;
    %58 = @func_1534(%55, %56) /* ty=Tensor[(11, 10, 11), uint32] */;
    (%57, %58, %var_2016)
  };
  %59(%var_2027) /* ty=(Tensor[(15, 7, 14), bool], Tensor[(11, 10, 11), uint32], Tensor[(605, 2), uint32]) */
}

def @func_3883() -> (Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), float64], Tensor[(10, 13, 14), float32], Tensor[(1820), float32]) {
  %69 = fn () -> (Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), float64], Tensor[(10, 13, 14), float32], Tensor[(1820), float32]) {
    %60 = @func_2161() /* ty=Tensor[(15, 7, 14), bool] */;
    %61 = cast(%60, dtype="float64") /* ty=Tensor[(15, 7, 14), float64] */;
    %62 = cast(meta[relay.Constant][2] /* ty=Tensor[(1820), float32] */, dtype="float32") /* ty=Tensor[(1820), float32] */;
    %63 = cast(meta[relay.Constant][2] /* ty=Tensor[(1820), float32] */, dtype="float32") /* ty=Tensor[(1820), float32] */;
    %64 = reshape(%62, newshape=[10, 13, 14]) /* ty=Tensor[(10, 13, 14), float32] */;
    %65 = reshape(%63, newshape=[10, 13, 14]) /* ty=Tensor[(10, 13, 14), float32] */;
    %66 = @func_2161() /* ty=Tensor[(15, 7, 14), bool] */;
    %67 = log2(%61) /* ty=Tensor[(15, 7, 14), float64] */;
    %68 = @func_297(%64, %65) /* ty=Tensor[(10, 13, 14), float32] */;
    (%66, %67, %68, meta[relay.Constant][2] /* ty=Tensor[(1820), float32] */)
  };
  %69() /* ty=(Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), float64], Tensor[(10, 13, 14), float32], Tensor[(1820), float32]) */
}

def @func_4856(%var_4855: Tensor[(14, 15, 14), int32]) -> (Tensor[(15, 7, 14), bool], Tensor[(14, 15, 14), float32], Tensor[(14, 15, 14), int32]) {
  %78 = fn (%var_4842: Tensor[(14, 15, 14), int32]) -> (Tensor[(15, 7, 14), bool], Tensor[(14, 15, 14), float32], Tensor[(14, 15, 14), int32]) {
    %70 = @func_3814() /* ty=Tensor[(14, 15, 14), int32] */;
    %71 = cast(%var_4842, dtype="float32") /* ty=Tensor[(14, 15, 14), float32] */;
    %72 = shape_of(%70, dtype="int32") /* ty=Tensor[(3), int32] */;
    %73 = cast(%70, dtype="float32") /* ty=Tensor[(14, 15, 14), float32] */;
    %74 = dyn.reshape(%71, %72, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %75 = @func_4323() /* ty=Tensor[(15, 7, 14), bool] */;
    %76 = divide(%73, %74) /* ty=Tensor[(14, 15, 14), float32] */;
    %77 = @func_3814() /* ty=Tensor[(14, 15, 14), int32] */;
    (%75, %76, %77)
  };
  %78(%var_4855) /* ty=(Tensor[(15, 7, 14), bool], Tensor[(14, 15, 14), float32], Tensor[(14, 15, 14), int32]) */
}

def @func_6509() -> (Tensor[(15, 7, 14), bool],) {
  %79 = @func_3526() /* ty=Tensor[(15, 7, 14), bool] */;
  (%79,)
}

def @func_2910(%var_2902: Tensor[(15, 7, 14), bool]) -> (Tensor[(15, 7, 14), uint8], Tensor[(15, 7, 14), float64]) {
  %80 = @func_1438() /* ty=(Tensor[(15, 7, 14), bool],) */;
  %81 = %80.0;
  %82 = cast(%var_2902, dtype="uint8") /* ty=Tensor[(15, 7, 14), uint8] */;
  %83 = shape_of(%81, dtype="int32") /* ty=Tensor[(3), int32] */;
  %84 = cast(%81, dtype="uint8") /* ty=Tensor[(15, 7, 14), uint8] */;
  %85 = dyn.reshape(%82, %83, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %86 = cast(%81, dtype="float64") /* ty=Tensor[(15, 7, 14), float64] */;
  %87 = multiply(%84, %85) /* ty=Tensor[(15, 7, 14), uint8] */;
  %88 = log(%86) /* ty=Tensor[(15, 7, 14), float64] */;
  (%87, %88)
}

def @func_8003(%var_8001: Tensor[(10, 12, 9), float64]) -> Tensor[(10, 12, 9), float64] {
  @func_8000(%var_8001) /* ty=Tensor[(10, 12, 9), float64] */
}

def @func_2222() -> (Tensor[(15, 7, 14), bool],) {
  %89 = @func_1473() /* ty=Tensor[(15, 7, 14), bool] */;
  (%89,)
}

def @func_8068(%var_8058: Tensor[(10, 12, 9), float64], %var_8066: Tensor[(1210, 1), uint32]) -> (Tensor[(10, 12, 9), float64], Tensor[(15, 7, 14), float32], Tensor[(11, 10, 11), uint32], Tensor[(1210, 1), uint32]) {
  %90 = @func_1693() /* ty=(Tensor[(10, 12, 9), float64],) */;
  %91 = %90.0;
  %92 = cast(%var_8058, dtype="float64") /* ty=Tensor[(10, 12, 9), float64] */;
  %93 = shape_of(%91, dtype="int32") /* ty=Tensor[(3), int32] */;
  %94 = cast(%91, dtype="float64") /* ty=Tensor[(10, 12, 9), float64] */;
  %95 = dyn.reshape(%92, %93, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %96 = cast(%var_8066, dtype="uint32") /* ty=Tensor[(1210, 1), uint32] */;
  %97 = cast(%var_8066, dtype="uint32") /* ty=Tensor[(1210, 1), uint32] */;
  %98 = reshape(%96, newshape=[11, 10, 11]) /* ty=Tensor[(11, 10, 11), uint32] */;
  %99 = reshape(%97, newshape=[11, 10, 11]) /* ty=Tensor[(11, 10, 11), uint32] */;
  %100 = power(%94, %95) /* ty=Tensor[(10, 12, 9), float64] */;
  %101 = @func_6920() /* ty=Tensor[(15, 7, 14), float32] */;
  %102 = @func_1534(%98, %99) /* ty=Tensor[(11, 10, 11), uint32] */;
  (%100, %101, %102, %var_8066)
}

def @func_1101(%var_1095: int16, %var_1096: Tensor[(12, 4, 1), int16], %var_1097: Tensor[(12, 4, 5), bool], %var_1098: Tensor[(154), float32], %var_1099: Tensor[(100), int16], %var_1100: Tensor[(1820), float32]) -> (Tensor[(12, 4, 1), bool], Tensor[(12, 4, 5), uint8], Tensor[(154), float32], Tensor[(100), int16], Tensor[(112), int64], Tensor[(12, 4, 100), uint8], Tensor[(5, 20), int16], Tensor[(1, 80), float32], Tensor[(1820), float32]) {
  @func_1093(%var_1095, %var_1096, %var_1097, %var_1098, %var_1099, %var_1100) /* ty=(Tensor[(12, 4, 1), bool], Tensor[(12, 4, 5), uint8], Tensor[(154), float32], Tensor[(100), int16], Tensor[(112), int64], Tensor[(12, 4, 100), uint8], Tensor[(5, 20), int16], Tensor[(1, 80), float32], Tensor[(1820), float32]) */
}

def @func_7430(%var_7420: Tensor[(14, 15, 14), float32], %var_7428: Tensor[(112), int64]) -> (Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), bool], Tensor[(14, 15, 14), float32], Tensor[(15, 7, 14), bool], Tensor[(112), int64]) {
  %103 = @func_5930() /* ty=(Tensor[(15, 7, 14), bool],) */;
  %104 = @func_2229() /* ty=(Tensor[(15, 7, 14), bool],) */;
  %105 = @func_5016() /* ty=(Tensor[(14, 15, 14), float64], Tensor[(14, 15, 14), float32], Tensor[(15, 7, 14), bool], Tensor[(100), int16], Tensor[(100), int16]) */;
  %106 = %105.1;
  %107 = cast(%var_7420, dtype="float32") /* ty=Tensor[(14, 15, 14), float32] */;
  %108 = shape_of(%106, dtype="int32") /* ty=Tensor[(3), int32] */;
  %109 = cast(%106, dtype="float32") /* ty=Tensor[(14, 15, 14), float32] */;
  %110 = dyn.reshape(%107, %108, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %111 = cast(%var_7428, dtype="int64") /* ty=Tensor[(112), int64] */;
  %112 = reshape(%111, newshape=[112]) /* ty=Tensor[(112), int64] */;
  %113 = @func_2213(%112) /* ty=(Tensor[(15, 7, 14), bool], Tensor[(14, 2, 4), int64], Tensor[(112), int64]) */;
  %114 = %103.0;
  %115 = @func_4595() /* ty=Tensor[(15, 7, 14), bool] */;
  %116 = %104.0;
  %117 = add(%109, %110) /* ty=Tensor[(14, 15, 14), float32] */;
  %118 = %113.0;
  (%114, %115, %116, %117, %118, %var_7428)
}

def @func_2142(%var_2140: Tensor[(1210), uint32]) -> (Tensor[(15, 7, 14), bool], Tensor[(1210), float64]) {
  @func_2139(%var_2140) /* ty=(Tensor[(15, 7, 14), bool], Tensor[(1210), float64]) */
}

def @func_1440() -> (Tensor[(15, 7, 14), bool],) {
  @func_1438() /* ty=(Tensor[(15, 7, 14), bool],) */
}

def @func_7607(%var_7605: Tensor[(260), int8]) -> (Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), bool], Tensor[(260), int8]) {
  @func_7604(%var_7605) /* ty=(Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), bool], Tensor[(260), int8]) */
}

def @func_2486(%var_2482: Tensor[(260), int8]) -> (Tensor[(15, 7, 14), bool], Tensor[(13, 4, 5), float64], Tensor[(260), int8]) {
  %119 = @func_1337() /* ty=Tensor[(15, 7, 14), float32] */;
  %120 = cast(meta[relay.Constant][3] /* ty=Tensor[(15, 7, 14), float32] */, dtype="bool") /* ty=Tensor[(15, 7, 14), bool] */;
  %121 = shape_of(%119, dtype="int32") /* ty=Tensor[(3), int32] */;
  %122 = cast(%119, dtype="bool") /* ty=Tensor[(15, 7, 14), bool] */;
  %123 = dyn.reshape(%120, %121, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %124 = cast(%var_2482, dtype="int8") /* ty=Tensor[(260), int8] */;
  %125 = reshape(%124, newshape=[13, 4, 5]) /* ty=Tensor[(13, 4, 5), int8] */;
  %126 = @func_1613(%125) /* ty=(Tensor[(13, 4, 5), bool], Tensor[(5, 2, 10), bool], Tensor[(50), int16], Tensor[(5, 20), int16], Tensor[(112), int64], Tensor[(13, 4, 5), float64]) */;
  %127 = less_equal(%122, %123) /* ty=Tensor[(15, 7, 14), bool] */;
  %128 = %126.5;
  (%127, %128, %var_2482)
}

def @func_2215(%var_2214: Tensor[(112), int64]) -> (Tensor[(15, 7, 14), bool], Tensor[(14, 2, 4), int64], Tensor[(112), int64]) {
  %134 = fn (%var_2210: Tensor[(112), int64]) -> (Tensor[(15, 7, 14), bool], Tensor[(14, 2, 4), int64], Tensor[(112), int64]) {
    %129 = cast(%var_2210, dtype="int64") /* ty=Tensor[(112), int64] */;
    %130 = reshape(%129, newshape=[14, 2, 4]) /* ty=Tensor[(14, 2, 4), int64] */;
    %131 = @func_450(%130) /* ty=(Tensor[(14, 2, 4), int64], Tensor[(14, 2, 4), bool]) */;
    %132 = @func_2161() /* ty=Tensor[(15, 7, 14), bool] */;
    %133 = %131.0;
    (%132, %133, %var_2210)
  };
  %134(%var_2214) /* ty=(Tensor[(15, 7, 14), bool], Tensor[(14, 2, 4), int64], Tensor[(112), int64]) */
}

def @func_2224() -> (Tensor[(15, 7, 14), bool],) {
  @func_2222() /* ty=(Tensor[(15, 7, 14), bool],) */
}

def @func_6783() -> (Tensor[(14, 15, 14), int32],) {
  @func_6781() /* ty=(Tensor[(14, 15, 14), int32],) */
}

def @func_1796(%var_1776: Tensor[(100), int16]) -> (Tensor[(15, 7, 14), bool], Tensor[(14, 2, 4), bool], Tensor[(154), float32], Tensor[(100), int16], Tensor[(112), int64], Tensor[(15, 7, 14), float32]) {
  %135 = cast(meta[relay.Constant][4] /* ty=Tensor[(154), float32] */, dtype="float32") /* ty=Tensor[(154), float32] */;
  %136 = cast(%var_1776, dtype="int16") /* ty=Tensor[(100), int16] */;
  %137 = cast(meta[relay.Constant][5] /* ty=Tensor[(112), int64] */, dtype="int64") /* ty=Tensor[(112), int64] */;
  %138 = reshape(%135, newshape=[7, 2, 11]) /* ty=Tensor[(7, 2, 11), float32] */;
  %139 = reshape(%136, newshape=[100]) /* ty=Tensor[(100), int16] */;
  %140 = reshape(%137, newshape=[112]) /* ty=Tensor[(112), int64] */;
  %141 = @func_535(%138, %139, %140) /* ty=(Tensor[(7, 2, 11), float32], Tensor[(112), int64], Tensor[(50), int16], Tensor[(100), int16], Tensor[(112), int64], Tensor[(14, 2, 4), bool]) */;
  %142 = @func_1565() /* ty=(Tensor[(15, 7, 14), float32],) */;
  %143 = @func_1473() /* ty=Tensor[(15, 7, 14), bool] */;
  %144 = %141.5;
  %145 = %142.0;
  (%143, %144, meta[relay.Constant][4] /* ty=Tensor[(154), float32] */, %var_1776, meta[relay.Constant][5] /* ty=Tensor[(112), int64] */, %145)
}

def @func_1407() -> Tensor[(15, 7, 14), float32] {
  %148 = fn () -> Tensor[(15, 7, 14), float32] {
    %146 = @func_1313() /* ty=Tensor[(15, 7, 14), bool] */;
    %147 = cast(%146, dtype="float32") /* ty=Tensor[(15, 7, 14), float32] */;
    cos(%147) /* ty=Tensor[(15, 7, 14), float32] */
  };
  %148() /* ty=Tensor[(15, 7, 14), float32] */
}

def @func_4299() -> Tensor[(14, 15, 14), int32] {
  @func_4297() /* ty=Tensor[(14, 15, 14), int32] */
}

def @func_2139(%var_2129: Tensor[(1210), uint32]) -> (Tensor[(15, 7, 14), bool], Tensor[(1210), float64]) {
  %149 = @func_1438() /* ty=(Tensor[(15, 7, 14), bool],) */;
  %150 = cast(%var_2129, dtype="uint32") /* ty=Tensor[(1210), uint32] */;
  %151 = cast(%var_2129, dtype="uint32") /* ty=Tensor[(1210), uint32] */;
  %152 = reshape(%150, newshape=[11, 10, 11]) /* ty=Tensor[(11, 10, 11), uint32] */;
  %153 = reshape(%151, newshape=[11, 10, 11]) /* ty=Tensor[(11, 10, 11), uint32] */;
  %154 = @func_1534(%152, %153) /* ty=Tensor[(11, 10, 11), uint32] */;
  %155 = cast(%154, dtype="float64") /* ty=Tensor[(11, 10, 11), float64] */;
  %156 = shape_of(%var_2129, dtype="int32") /* ty=Tensor[(1), int32] */;
  %157 = cast(%var_2129, dtype="float64") /* ty=Tensor[(1210), float64] */;
  %158 = dyn.reshape(%155, %156, newshape=[]) /* ty=Tensor[(?), float64] */;
  %159 = %149.0;
  %160 = floor_divide(%157, %158) /* ty=Tensor[(1210), float64] */;
  (%159, %160)
}

def @func_1337() -> Tensor[(15, 7, 14), float32] {
  %161 = @func_1313() /* ty=Tensor[(15, 7, 14), bool] */;
  %162 = cast(%161, dtype="float32") /* ty=Tensor[(15, 7, 14), float32] */;
  rsqrt(%162) /* ty=Tensor[(15, 7, 14), float32] */
}

def @func_5018() -> (Tensor[(14, 15, 14), float64], Tensor[(14, 15, 14), float32], Tensor[(15, 7, 14), bool], Tensor[(100), int16], Tensor[(100), int16]) {
  @func_5016() /* ty=(Tensor[(14, 15, 14), float64], Tensor[(14, 15, 14), float32], Tensor[(15, 7, 14), bool], Tensor[(100), int16], Tensor[(100), int16]) */
}

def @func_709(%var_639: Tensor[(16, 1, 5), float32], %var_673: Tensor[(5, 20), int16], %var_704: Tensor[(1820, 1), float32]) -> (Tensor[(5, 2, 10), bool], Tensor[(5, 10), int16], Tensor[(5, 20), int16], Tensor[(112, 1), int64], Tensor[(16, ?, 5), uint64], Tensor[(16, 1, 5), float32], Tensor[(14, 2, 4), int64], Tensor[(10, 13, 14), float32], Tensor[(1820, 1), float32]) {
  %163 = cast(meta[relay.Constant][6] /* ty=Tensor[(5, 10), int16] */, dtype="int16") /* ty=Tensor[(5, 10), int16] */;
  %164 = cast(%var_673, dtype="int16") /* ty=Tensor[(5, 20), int16] */;
  %165 = cast(meta[relay.Constant][7] /* ty=Tensor[(112, 1), int64] */, dtype="int64") /* ty=Tensor[(112, 1), int64] */;
  %166 = reshape(%163, newshape=[5, 1, 10]) /* ty=Tensor[(5, 1, 10), int16] */;
  %167 = reshape(%164, newshape=[5, 2, 10]) /* ty=Tensor[(5, 2, 10), int16] */;
  %168 = reshape(%165, newshape=[112]) /* ty=Tensor[(112), int64] */;
  %169 = @func_476(%166, %167, %168) /* ty=(Tensor[(5, 2, 10), bool], Tensor[(14, 2, 4), bool], Tensor[(112), int64]) */;
  %170 = cast(%var_639, dtype="float32") /* ty=Tensor[(16, 1, 5), float32] */;
  %171 = acos(%170) /* ty=Tensor[(16, 1, 5), float32] */;
  %172 = cast(%171, dtype="uint8") /* ty=Tensor[(16, 1, 5), uint8] */;
  %173 = shape_of(%var_639, dtype="int32") /* ty=Tensor[(3), int32] */;
  %174 = cast(%var_639, dtype="uint8") /* ty=Tensor[(16, 1, 5), uint8] */;
  %175 = dyn.reshape(%172, %173, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %176 = bitwise_or(%174, %175) /* ty=Tensor[(16, ?, 5), uint8] */;
  %177 = cast(%176, dtype="bool") /* ty=Tensor[(16, ?, 5), bool] */;
  %178 = shape_of(%171, dtype="int32") /* ty=Tensor[(3), int32] */;
  %179 = cast(%171, dtype="bool") /* ty=Tensor[(16, 1, 5), bool] */;
  %180 = dyn.reshape(%177, %178, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %181 = less(%179, %180) /* ty=Tensor[(16, ?, 5), bool] */;
  %182 = cast(%181, dtype="uint64") /* ty=Tensor[(16, ?, 5), uint64] */;
  %183 = shape_of(%171, dtype="int32") /* ty=Tensor[(3), int32] */;
  %184 = cast(%171, dtype="uint64") /* ty=Tensor[(16, 1, 5), uint64] */;
  %185 = dyn.reshape(%182, %183, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %186 = cast(%171, dtype="float32") /* ty=Tensor[(16, 1, 5), float32] */;
  %187 = cast(meta[relay.Constant][7] /* ty=Tensor[(112, 1), int64] */, dtype="int64") /* ty=Tensor[(112, 1), int64] */;
  %188 = reshape(%187, newshape=[14, 2, 4]) /* ty=Tensor[(14, 2, 4), int64] */;
  %189 = @func_450(%188) /* ty=(Tensor[(14, 2, 4), int64], Tensor[(14, 2, 4), bool]) */;
  %190 = cast(%var_704, dtype="float32") /* ty=Tensor[(1820, 1), float32] */;
  %191 = cast(%var_704, dtype="float32") /* ty=Tensor[(1820, 1), float32] */;
  %192 = reshape(%190, newshape=[10, 13, 14]) /* ty=Tensor[(10, 13, 14), float32] */;
  %193 = reshape(%191, newshape=[10, 13, 14]) /* ty=Tensor[(10, 13, 14), float32] */;
  %194 = %169.0;
  %195 = right_shift(%184, %185) /* ty=Tensor[(16, ?, 5), uint64] */;
  %196 = sqrt(%186) /* ty=Tensor[(16, 1, 5), float32] */;
  %197 = %189.0;
  %198 = @func_297(%192, %193) /* ty=Tensor[(10, 13, 14), float32] */;
  (%194, meta[relay.Constant][6] /* ty=Tensor[(5, 10), int16] */, %var_673, meta[relay.Constant][7] /* ty=Tensor[(112, 1), int64] */, %195, %196, %197, %198, %var_704)
}

def @func_5853() -> (Tensor[(14, 15, 14), int32],) {
  %200 = fn () -> (Tensor[(14, 15, 14), int32],) {
    %199 = @func_3803() /* ty=Tensor[(14, 15, 14), int32] */;
    (%199,)
  };
  %200() /* ty=(Tensor[(14, 15, 14), int32],) */
}

def @func_7305(%var_7268: Tensor[(14, 12, 2), bool], %var_7283: Tensor[(154, 1), float32], %var_7285: Tensor[(112), int64]) -> (Tensor[(14, 12, 2), bool], Tensor[(15, 7, 14), bool], Tensor[(112), int64], Tensor[(100), int16], Tensor[(154, 112), uint64], int16, int16) {
  %201 = cast(meta[relay.Constant][8] /* ty=Tensor[(14, 12, 2), bool] */, dtype="bool") /* ty=Tensor[(14, 12, 2), bool] */;
  %202 = shape_of(%var_7268, dtype="int32") /* ty=Tensor[(3), int32] */;
  %203 = cast(%var_7268, dtype="bool") /* ty=Tensor[(14, 12, 2), bool] */;
  %204 = dyn.reshape(%201, %202, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %205 = @func_5342() /* ty=(Tensor[(9, 11, 6), int32], Tensor[(15, 7, 14), bool]) */;
  %206 = cast(%var_7283, dtype="float32") /* ty=Tensor[(154, 1), float32] */;
  %207 = cast(meta[relay.Constant][9] /* ty=Tensor[(100), int16] */, dtype="int16") /* ty=Tensor[(100), int16] */;
  %208 = cast(%var_7285, dtype="int64") /* ty=Tensor[(112), int64] */;
  %209 = reshape(%206, newshape=[7, 2, 11]) /* ty=Tensor[(7, 2, 11), float32] */;
  %210 = reshape(%207, newshape=[100]) /* ty=Tensor[(100), int16] */;
  %211 = reshape(%208, newshape=[112]) /* ty=Tensor[(112), int64] */;
  %212 = @func_535(%209, %210, %211) /* ty=(Tensor[(7, 2, 11), float32], Tensor[(112), int64], Tensor[(50), int16], Tensor[(100), int16], Tensor[(112), int64], Tensor[(14, 2, 4), bool]) */;
  %213 = cast(%var_7285, dtype="uint64") /* ty=Tensor[(112), uint64] */;
  %214 = cast(%var_7283, dtype="uint64") /* ty=Tensor[(154, 1), uint64] */;
  %215 = cast(meta[relay.Constant][10] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %216 = cast(%var_7283, dtype="float32") /* ty=Tensor[(154, 1), float32] */;
  %217 = cast(meta[relay.Constant][9] /* ty=Tensor[(100), int16] */, dtype="int16") /* ty=Tensor[(100), int16] */;
  %218 = reshape(%215, newshape=[]) /* ty=int16 */;
  %219 = reshape(%216, newshape=[154]) /* ty=Tensor[(154), float32] */;
  %220 = reshape(%217, newshape=[50, 2]) /* ty=Tensor[(50, 2), int16] */;
  %221 = @func_5160(%218, %219, %220) /* ty=(Tensor[(10, 12, 9), float64], Tensor[(100), int16], int16, Tensor[(48), int16], Tensor[(240), bool], Tensor[(154), float32], Tensor[(50, 2), int16], Tensor[(1820), float32], Tensor[(15, 7, 14), bool]) */;
  %222 = logical_and(%203, %204) /* ty=Tensor[(14, 12, 2), bool] */;
  %223 = %205.1;
  %224 = %212.4;
  %225 = add(%213, %214) /* ty=Tensor[(154, 112), uint64] */;
  %226 = %221.2;
  (%222, %223, %224, meta[relay.Constant][9] /* ty=Tensor[(100), int16] */, %225, %226, meta[relay.Constant][10] /* ty=int16 */)
}

def @func_5287() -> Tensor[(15, 7, 14), bool] {
  %228 = fn () -> Tensor[(15, 7, 14), bool] {
    %227 = @func_1951() /* ty=(Tensor[(15, 7, 14), bool],) */;
    %227.0
  };
  %228() /* ty=Tensor[(15, 7, 14), bool] */
}

def @func_8473() -> Tensor[(15, 7, 14), bool] {
  @func_1313() /* ty=Tensor[(15, 7, 14), bool] */
}

def @func_8297() -> Tensor[(15, 7, 14), bool] {
  @func_6030() /* ty=Tensor[(15, 7, 14), bool] */
}

def @func_4386() -> (Tensor[(100), int16], Tensor[(8, 2, 2), float64], Tensor[(32), float32]) {
  %234 = fn () -> (Tensor[(100), int16], Tensor[(8, 2, 2), float64], Tensor[(32), float32]) {
    %229 = @func_3580() /* ty=(Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), float32], Tensor[(100), int16], Tensor[(8), float32], Tensor[(100), int16], Tensor[(112), int64]) */;
    %230 = cast(meta[relay.Constant][11] /* ty=Tensor[(32), float32] */, dtype="float32") /* ty=Tensor[(32), float32] */;
    %231 = reshape(%230, newshape=[8, 2, 2]) /* ty=Tensor[(8, 2, 2), float32] */;
    %232 = %229.4;
    %233 = @func_1828(%231) /* ty=Tensor[(8, 2, 2), float64] */;
    (%232, %233, meta[relay.Constant][11] /* ty=Tensor[(32), float32] */)
  };
  %234() /* ty=(Tensor[(100), int16], Tensor[(8, 2, 2), float64], Tensor[(32), float32]) */
}

def @func_3721() -> (Tensor[(14, 15, 14), int32],) {
  %235 = @func_3295() /* ty=(Tensor[(14, 15, 14), int32], Tensor[(15, 7, 14), bool]) */;
  %236 = %235.0;
  (%236,)
}

def @func_5066() -> Tensor[(10, 12, 9), float64] {
  %237 = @func_1693() /* ty=(Tensor[(10, 12, 9), float64],) */;
  %237.0
}

def @func_5819() -> (Tensor[(14, 15, 14), int32],) {
  %238 = @func_1680() /* ty=Tensor[(14, 15, 14), int32] */;
  (%238,)
}

def @func_4814() -> Tensor[(15, 7, 14), float32] {
  @func_1406() /* ty=Tensor[(15, 7, 14), float32] */
}

def @func_1566() -> (Tensor[(15, 7, 14), float32],) {
  %240 = fn () -> (Tensor[(15, 7, 14), float32],) {
    %239 = @func_1337() /* ty=Tensor[(15, 7, 14), float32] */;
    (%239,)
  };
  %240() /* ty=(Tensor[(15, 7, 14), float32],) */
}

def @func_2162() -> Tensor[(15, 7, 14), bool] {
  %242 = fn () -> Tensor[(15, 7, 14), bool] {
    %241 = @func_1951() /* ty=(Tensor[(15, 7, 14), bool],) */;
    %241.0
  };
  %242() /* ty=Tensor[(15, 7, 14), bool] */
}

def @func_7010() -> (Tensor[(10, 13, 14), float32],) {
  @func_7008() /* ty=(Tensor[(10, 13, 14), float32],) */
}

def @func_8420() -> (Tensor[(15, 7, 14), bool],) {
  %245 = fn () -> (Tensor[(15, 7, 14), bool],) {
    %243 = @func_4068() /* ty=(Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), bool]) */;
    %244 = %243.1;
    (%244,)
  };
  %245() /* ty=(Tensor[(15, 7, 14), bool],) */
}

def @func_8466() -> (Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), bool]) {
  %246 = @func_3926() /* ty=Tensor[(15, 7, 14), bool] */;
  %247 = @func_5286() /* ty=Tensor[(15, 7, 14), bool] */;
  (%246, %247)
}

def @func_1693() -> (Tensor[(10, 12, 9), float64],) {
  %248 = cast(meta[relay.Constant][12] /* ty=Tensor[(10, 12, 9), float64] */, dtype="float64") /* ty=Tensor[(10, 12, 9), float64] */;
  %249 = log2(%248) /* ty=Tensor[(10, 12, 9), float64] */;
  (%249,)
}

def @func_3928() -> Tensor[(15, 7, 14), bool] {
  @func_3926() /* ty=Tensor[(15, 7, 14), bool] */
}

def @func_4068() -> (Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), bool]) {
  %250 = @func_1951() /* ty=(Tensor[(15, 7, 14), bool],) */;
  %251 = @func_3170() /* ty=Tensor[(15, 7, 14), bool] */;
  %252 = %250.0;
  (%251, %252)
}

def @func_5428() -> Tensor[(15, 7, 14), bool] {
  %253 = @func_4092() /* ty=(Tensor[(15, 7, 14), bool],) */;
  %253.0
}

def @func_8468() -> (Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), bool]) {
  @func_8466() /* ty=(Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), bool]) */
}

def @func_8589(%var_8588: Tensor[(3, 14, 10), float32]) -> (Tensor[(3, 14, 10), float32], Tensor[(3, 14, 10), bool], Tensor[(15, 7, 14), bool]) {
  %266 = fn (%var_8577: Tensor[(3, 14, 10), float32]) -> (Tensor[(3, 14, 10), float32], Tensor[(3, 14, 10), bool], Tensor[(15, 7, 14), bool]) {
    %254 = cast(meta[relay.Constant][14] /* ty=Tensor[(3, 14, 10), float32] */, dtype="float32") /* ty=Tensor[(3, 14, 10), float32] */;
    %255 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(3, 14, 10), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %256 = cast(meta[relay.Constant][13] /* ty=Tensor[(3, 14, 10), float32] */, dtype="float32") /* ty=Tensor[(3, 14, 10), float32] */;
    %257 = dyn.reshape(%254, %255, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %258 = cast(%var_8577, dtype="bool") /* ty=Tensor[(3, 14, 10), bool] */;
    %259 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(3, 14, 10), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %260 = cast(meta[relay.Constant][13] /* ty=Tensor[(3, 14, 10), float32] */, dtype="bool") /* ty=Tensor[(3, 14, 10), bool] */;
    %261 = dyn.reshape(%258, %259, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %262 = @func_5930() /* ty=(Tensor[(15, 7, 14), bool],) */;
    %263 = mod(%256, %257) /* ty=Tensor[(3, 14, 10), float32] */;
    %264 = less_equal(%260, %261) /* ty=Tensor[(3, 14, 10), bool] */;
    %265 = %262.0;
    (%263, %264, %265)
  };
  %266(%var_8588) /* ty=(Tensor[(3, 14, 10), float32], Tensor[(3, 14, 10), bool], Tensor[(15, 7, 14), bool]) */
}

def @func_8106(%var_8090: Tensor[(112, 1), int64]) -> (Tensor[(15, 7, 14), float32], Tensor[(14, 2, 4), int64], Tensor[(112, 1), int64], Tensor[(15, 7, 14), bool], Tensor[(1248, 1210), int32]) {
  %267 = cast(%var_8090, dtype="int64") /* ty=Tensor[(112, 1), int64] */;
  %268 = reshape(%267, newshape=[112]) /* ty=Tensor[(112), int64] */;
  %269 = @func_2213(%268) /* ty=(Tensor[(15, 7, 14), bool], Tensor[(14, 2, 4), int64], Tensor[(112), int64]) */;
  %270 = cast(meta[relay.Constant][15] /* ty=Tensor[(1210), uint32] */, dtype="uint32") /* ty=Tensor[(1210), uint32] */;
  %271 = cast(meta[relay.Constant][16] /* ty=Tensor[(1248, 1), uint16] */, dtype="uint16") /* ty=Tensor[(1248, 1), uint16] */;
  %272 = reshape(%270, newshape=[1210]) /* ty=Tensor[(1210), uint32] */;
  %273 = reshape(%271, newshape=[1248]) /* ty=Tensor[(1248), uint16] */;
  %274 = @func_7951(%272, %273) /* ty=(Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), bool], Tensor[(1210), uint32], Tensor[(8, 12, 13), bool], Tensor[(1248), uint16], Tensor[(14, 15, 14), int32]) */;
  %275 = cast(meta[relay.Constant][15] /* ty=Tensor[(1210), uint32] */, dtype="int32") /* ty=Tensor[(1210), int32] */;
  %276 = cast(meta[relay.Constant][16] /* ty=Tensor[(1248, 1), uint16] */, dtype="int32") /* ty=Tensor[(1248, 1), int32] */;
  %277 = @func_1406() /* ty=Tensor[(15, 7, 14), float32] */;
  %278 = %269.1;
  %279 = %274.2;
  %280 = left_shift(%275, %276) /* ty=Tensor[(1248, 1210), int32] */;
  (%277, %278, %var_8090, %279, %280)
}

def @func_6134(%var_6132: Tensor[(14, 15, 14), int32]) -> (Tensor[(15, 7, 14), bool], Tensor[(14, 15, 14), bool]) {
  @func_6131(%var_6132) /* ty=(Tensor[(15, 7, 14), bool], Tensor[(14, 15, 14), bool]) */
}

def @func_3086() -> (Tensor[(10, 12, 9), float64], Tensor[(15, 7, 14), bool]) {
  %285 = fn () -> (Tensor[(10, 12, 9), float64], Tensor[(15, 7, 14), bool]) {
    %281 = @func_1693() /* ty=(Tensor[(10, 12, 9), float64],) */;
    %282 = @func_1438() /* ty=(Tensor[(15, 7, 14), bool],) */;
    %283 = %281.0;
    %284 = %282.0;
    (%283, %284)
  };
  %285() /* ty=(Tensor[(10, 12, 9), float64], Tensor[(15, 7, 14), bool]) */
}

def @func_1473() -> Tensor[(15, 7, 14), bool] {
  %286 = @func_1438() /* ty=(Tensor[(15, 7, 14), bool],) */;
  %286.0
}

def @func_4187() -> (Tensor[(15, 7, 14), bool], Tensor[(14, 15, 14), int32], Tensor[(14, 15, 14), int32]) {
  @func_4185() /* ty=(Tensor[(15, 7, 14), bool], Tensor[(14, 15, 14), int32], Tensor[(14, 15, 14), int32]) */
}

def @func_5383() -> (Tensor[(15, 7, 14), float64],) {
  %291 = fn () -> (Tensor[(15, 7, 14), float64],) {
    %287 = @func_5342() /* ty=(Tensor[(9, 11, 6), int32], Tensor[(15, 7, 14), bool]) */;
    %288 = %287.1;
    %289 = cast(%288, dtype="float64") /* ty=Tensor[(15, 7, 14), float64] */;
    %290 = sqrt(%289) /* ty=Tensor[(15, 7, 14), float64] */;
    (%290,)
  };
  %291() /* ty=(Tensor[(15, 7, 14), float64],) */
}

def @func_3926() -> Tensor[(15, 7, 14), bool] {
  %292 = @func_2229() /* ty=(Tensor[(15, 7, 14), bool],) */;
  %292.0
}

def @func_3443() -> (Tensor[(7, 10, 2), float64],) {
  %295 = fn () -> (Tensor[(7, 10, 2), float64],) {
    %293 = cast(meta[relay.Constant][17] /* ty=Tensor[(7, 10, 2), float64] */, dtype="float64") /* ty=Tensor[(7, 10, 2), float64] */;
    %294 = exp(%293) /* ty=Tensor[(7, 10, 2), float64] */;
    (%294,)
  };
  %295() /* ty=(Tensor[(7, 10, 2), float64],) */
}

def @func_1682() -> Tensor[(14, 15, 14), int32] {
  @func_1680() /* ty=Tensor[(14, 15, 14), int32] */
}

def @func_3580() -> (Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), float32], Tensor[(100), int16], Tensor[(8), float32], Tensor[(100), int16], Tensor[(112), int64]) {
  %296 = @func_3191() /* ty=(Tensor[(15, 7, 14), bool],) */;
  %297 = @func_3377() /* ty=Tensor[(15, 7, 14), bool] */;
  %298 = cast(%297, dtype="float32") /* ty=Tensor[(15, 7, 14), float32] */;
  %299 = cast(meta[relay.Constant][18] /* ty=Tensor[(8), float32] */, dtype="float32") /* ty=Tensor[(8), float32] */;
  %300 = cast(meta[relay.Constant][19] /* ty=Tensor[(100), int16] */, dtype="int16") /* ty=Tensor[(100), int16] */;
  %301 = cast(meta[relay.Constant][20] /* ty=Tensor[(112), int64] */, dtype="int64") /* ty=Tensor[(112), int64] */;
  %302 = reshape(%299, newshape=[2, 2, 2]) /* ty=Tensor[(2, 2, 2), float32] */;
  %303 = reshape(%300, newshape=[100]) /* ty=Tensor[(100), int16] */;
  %304 = reshape(%301, newshape=[112]) /* ty=Tensor[(112), int64] */;
  %305 = @func_3033(%302, %303, %304) /* ty=(Tensor[(2, 2, 2), float64], Tensor[(100), int16], Tensor[(154), float32], Tensor[(100), int16], Tensor[(112), int64]) */;
  %306 = %296.0;
  %307 = sigmoid(%298) /* ty=Tensor[(15, 7, 14), float32] */;
  %308 = %305.1;
  (%306, %307, %308, meta[relay.Constant][18] /* ty=Tensor[(8), float32] */, meta[relay.Constant][19] /* ty=Tensor[(100), int16] */, meta[relay.Constant][20] /* ty=Tensor[(112), int64] */)
}

def @func_3348(%var_3346: Tensor[(15, 7, 14), bool], %var_3347: Tensor[(100), int16]) -> (Tensor[(15, 7, 14), bool], Tensor[(11, 10, 11), uint32], Tensor[(1, 1210), uint32], Tensor[(154), float32], Tensor[(100), float64]) {
  %326 = fn (%var_3309: Tensor[(15, 7, 14), bool], %var_3338: Tensor[(100), int16]) -> (Tensor[(15, 7, 14), bool], Tensor[(11, 10, 11), uint32], Tensor[(1, 1210), uint32], Tensor[(154), float32], Tensor[(100), float64]) {
    %309 = @func_3057() /* ty=Tensor[(15, 7, 14), bool] */;
    %310 = cast(%var_3309, dtype="bool") /* ty=Tensor[(15, 7, 14), bool] */;
    %311 = shape_of(%309, dtype="int32") /* ty=Tensor[(3), int32] */;
    %312 = cast(%309, dtype="bool") /* ty=Tensor[(15, 7, 14), bool] */;
    %313 = dyn.reshape(%310, %311, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %314 = cast(meta[relay.Constant][21] /* ty=Tensor[(1, 1210), uint32] */, dtype="uint32") /* ty=Tensor[(1, 1210), uint32] */;
    %315 = cast(meta[relay.Constant][21] /* ty=Tensor[(1, 1210), uint32] */, dtype="uint32") /* ty=Tensor[(1, 1210), uint32] */;
    %316 = reshape(%314, newshape=[11, 10, 11]) /* ty=Tensor[(11, 10, 11), uint32] */;
    %317 = reshape(%315, newshape=[11, 10, 11]) /* ty=Tensor[(11, 10, 11), uint32] */;
    %318 = cast(%var_3338, dtype="int16") /* ty=Tensor[(100), int16] */;
    %319 = reshape(%318, newshape=[5, 20]) /* ty=Tensor[(5, 20), int16] */;
    %320 = @func_1913(%319) /* ty=(Tensor[(15, 7, 14), bool], Tensor[(100), int16], Tensor[(154), float32], Tensor[(5, 20), int16], Tensor[(112), int64], Tensor[(7, 2, 11), float32], Tensor[(100), int16], Tensor[(15, 7, 14), float32]) */;
    %321 = cast(%var_3338, dtype="float64") /* ty=Tensor[(100), float64] */;
    %322 = not_equal(%312, %313) /* ty=Tensor[(15, 7, 14), bool] */;
    %323 = @func_1534(%316, %317) /* ty=Tensor[(11, 10, 11), uint32] */;
    %324 = %320.2;
    %325 = erf(%321) /* ty=Tensor[(100), float64] */;
    (%322, %323, meta[relay.Constant][21] /* ty=Tensor[(1, 1210), uint32] */, %324, %325)
  };
  %326(%var_3346, %var_3347) /* ty=(Tensor[(15, 7, 14), bool], Tensor[(11, 10, 11), uint32], Tensor[(1, 1210), uint32], Tensor[(154), float32], Tensor[(100), float64]) */
}

def @func_3263(%var_3261: Tensor[(10, 12, 9), float64]) -> (Tensor[(8, 2, 2), float64], Tensor[(4, 8), float32], Tensor[(10, 12, 9), float32]) {
  @func_3260(%var_3261) /* ty=(Tensor[(8, 2, 2), float64], Tensor[(4, 8), float32], Tensor[(10, 12, 9), float32]) */
}

def @func_4130(%var_4125: Tensor[(80), float32], %var_4126: Tensor[(50, 2), int16], %var_4127: Tensor[(1820), float32]) -> (Tensor[(15, 7, 14), bool], Tensor[(14, 2, 4), int64], Tensor[(80), float32], Tensor[(50, 2), int16], Tensor[(1820), float32]) {
  %327 = @func_3191() /* ty=(Tensor[(15, 7, 14), bool],) */;
  %328 = cast(%var_4125, dtype="float32") /* ty=Tensor[(80), float32] */;
  %329 = cast(%var_4126, dtype="int16") /* ty=Tensor[(50, 2), int16] */;
  %330 = cast(%var_4127, dtype="float32") /* ty=Tensor[(1820), float32] */;
  %331 = reshape(%328, newshape=[16, 1, 5]) /* ty=Tensor[(16, 1, 5), float32] */;
  %332 = reshape(%329, newshape=[5, 20]) /* ty=Tensor[(5, 20), int16] */;
  %333 = reshape(%330, newshape=[1820, 1]) /* ty=Tensor[(1820, 1), float32] */;
  %334 = @func_709(%331, %332, %333) /* ty=(Tensor[(5, 2, 10), bool], Tensor[(5, 10), int16], Tensor[(5, 20), int16], Tensor[(112, 1), int64], Tensor[(16, ?, 5), uint64], Tensor[(16, 1, 5), float32], Tensor[(14, 2, 4), int64], Tensor[(10, 13, 14), float32], Tensor[(1820, 1), float32]) */;
  %335 = %327.0;
  %336 = %334.6;
  (%335, %336, %var_4125, %var_4126, %var_4127)
}

def @func_2416(%var_2414: Tensor[(5, 3, 8), int32]) -> (Tensor[(5, 3, 8), bool], Tensor[(5, 3, 8), float64]) {
  @func_2413(%var_2414) /* ty=(Tensor[(5, 3, 8), bool], Tensor[(5, 3, 8), float64]) */
}

def @func_1830(%var_1829: Tensor[(8, 2, 2), float32]) -> Tensor[(8, 2, 2), float64] {
  %343 = fn (%var_1817: Tensor[(8, 2, 2), float32]) -> Tensor[(8, 2, 2), float64] {
    %337 = cast(meta[relay.Constant][22] /* ty=Tensor[(8, 2, 2), float32] */, dtype="float32") /* ty=Tensor[(8, 2, 2), float32] */;
    %338 = shape_of(%var_1817, dtype="int32") /* ty=Tensor[(3), int32] */;
    %339 = cast(%var_1817, dtype="float32") /* ty=Tensor[(8, 2, 2), float32] */;
    %340 = dyn.reshape(%337, %338, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %341 = minimum(%339, %340) /* ty=Tensor[(8, 2, 2), float32] */;
    %342 = cast(%341, dtype="float64") /* ty=Tensor[(8, 2, 2), float64] */;
    atan(%342) /* ty=Tensor[(8, 2, 2), float64] */
  };
  %343(%var_1829) /* ty=Tensor[(8, 2, 2), float64] */
}

def @func_4320() -> (Tensor[(14, 15, 14), int32], Tensor[(8), float32]) {
  @func_4318() /* ty=(Tensor[(14, 15, 14), int32], Tensor[(8), float32]) */
}

def @func_5164(%var_5161: int16, %var_5162: Tensor[(154), float32], %var_5163: Tensor[(50, 2), int16]) -> (Tensor[(10, 12, 9), float64], Tensor[(100), int16], int16, Tensor[(48), int16], Tensor[(240), bool], Tensor[(154), float32], Tensor[(50, 2), int16], Tensor[(1820), float32], Tensor[(15, 7, 14), bool]) {
  %362 = fn (%var_5144: int16, %var_5147: Tensor[(154), float32], %var_5148: Tensor[(50, 2), int16]) -> (Tensor[(10, 12, 9), float64], Tensor[(100), int16], int16, Tensor[(48), int16], Tensor[(240), bool], Tensor[(154), float32], Tensor[(50, 2), int16], Tensor[(1820), float32], Tensor[(15, 7, 14), bool]) {
    %344 = @func_4796() /* ty=(Tensor[(10, 12, 9), float64],) */;
    %345 = cast(%var_5144, dtype="int16") /* ty=int16 */;
    %346 = cast(meta[relay.Constant][23] /* ty=Tensor[(48), int16] */, dtype="int16") /* ty=Tensor[(48), int16] */;
    %347 = cast(meta[relay.Constant][24] /* ty=Tensor[(240), bool] */, dtype="bool") /* ty=Tensor[(240), bool] */;
    %348 = cast(%var_5147, dtype="float32") /* ty=Tensor[(154), float32] */;
    %349 = cast(%var_5148, dtype="int16") /* ty=Tensor[(50, 2), int16] */;
    %350 = cast(meta[relay.Constant][25] /* ty=Tensor[(1820), float32] */, dtype="float32") /* ty=Tensor[(1820), float32] */;
    %351 = reshape(%345, newshape=[]) /* ty=int16 */;
    %352 = reshape(%346, newshape=[12, 4, 1]) /* ty=Tensor[(12, 4, 1), int16] */;
    %353 = reshape(%347, newshape=[12, 4, 5]) /* ty=Tensor[(12, 4, 5), bool] */;
    %354 = reshape(%348, newshape=[154]) /* ty=Tensor[(154), float32] */;
    %355 = reshape(%349, newshape=[100]) /* ty=Tensor[(100), int16] */;
    %356 = reshape(%350, newshape=[1820]) /* ty=Tensor[(1820), float32] */;
    %357 = @func_1093(%351, %352, %353, %354, %355, %356) /* ty=(Tensor[(12, 4, 1), bool], Tensor[(12, 4, 5), uint8], Tensor[(154), float32], Tensor[(100), int16], Tensor[(112), int64], Tensor[(12, 4, 100), uint8], Tensor[(5, 20), int16], Tensor[(1, 80), float32], Tensor[(1820), float32]) */;
    %358 = @func_4537() /* ty=(Tensor[(15, 7, 14), bool], Tensor[(7, 10, 2), float64], Tensor[(15, 7, 14), bool]) */;
    %359 = %344.0;
    %360 = %357.3;
    %361 = %358.0;
    (%359, %360, %var_5144, meta[relay.Constant][23] /* ty=Tensor[(48), int16] */, meta[relay.Constant][24] /* ty=Tensor[(240), bool] */, %var_5147, %var_5148, meta[relay.Constant][25] /* ty=Tensor[(1820), float32] */, %361)
  };
  %362(%var_5161, %var_5162, %var_5163) /* ty=(Tensor[(10, 12, 9), float64], Tensor[(100), int16], int16, Tensor[(48), int16], Tensor[(240), bool], Tensor[(154), float32], Tensor[(50, 2), int16], Tensor[(1820), float32], Tensor[(15, 7, 14), bool]) */
}

def @func_2288(%var_2287: Tensor[(100), int16]) -> (Tensor[(154), float32], Tensor[(100), int16], Tensor[(15, 7, 14), bool], Tensor[(1820), float32], int16, Tensor[(48), int16], Tensor[(240), bool], Tensor[(1820), float32]) {
  %397 = fn (%var_2252: Tensor[(100), int16]) -> (Tensor[(154), float32], Tensor[(100), int16], Tensor[(15, 7, 14), bool], Tensor[(1820), float32], int16, Tensor[(48), int16], Tensor[(240), bool], Tensor[(1820), float32]) {
    %363 = cast(%var_2252, dtype="int16") /* ty=Tensor[(100), int16] */;
    %364 = reshape(%363, newshape=[100]) /* ty=Tensor[(100), int16] */;
    %365 = @func_1796(%364) /* ty=(Tensor[(15, 7, 14), bool], Tensor[(14, 2, 4), bool], Tensor[(154), float32], Tensor[(100), int16], Tensor[(112), int64], Tensor[(15, 7, 14), float32]) */;
    %366 = @func_2161() /* ty=Tensor[(15, 7, 14), bool] */;
    %367 = cast(meta[relay.Constant][26] /* ty=Tensor[(15, 7, 14), bool] */, dtype="float32") /* ty=Tensor[(15, 7, 14), float32] */;
    %368 = shape_of(%366, dtype="int32") /* ty=Tensor[(3), int32] */;
    %369 = cast(%366, dtype="float32") /* ty=Tensor[(15, 7, 14), float32] */;
    %370 = dyn.reshape(%367, %368, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %371 = floor_mod(%369, %370) /* ty=Tensor[(15, 7, 14), float32] */;
    %372 = cast(%366, dtype="uint16") /* ty=Tensor[(15, 7, 14), uint16] */;
    %373 = shape_of(%371, dtype="int32") /* ty=Tensor[(3), int32] */;
    %374 = cast(%371, dtype="uint16") /* ty=Tensor[(15, 7, 14), uint16] */;
    %375 = dyn.reshape(%372, %373, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %376 = left_shift(%374, %375) /* ty=Tensor[(15, 7, 14), uint16] */;
    %377 = cast(%371, dtype="bool") /* ty=Tensor[(15, 7, 14), bool] */;
    %378 = shape_of(%376, dtype="int32") /* ty=Tensor[(3), int32] */;
    %379 = cast(%376, dtype="bool") /* ty=Tensor[(15, 7, 14), bool] */;
    %380 = dyn.reshape(%377, %378, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %381 = cast(meta[relay.Constant][27] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %382 = cast(meta[relay.Constant][28] /* ty=Tensor[(48), int16] */, dtype="int16") /* ty=Tensor[(48), int16] */;
    %383 = cast(meta[relay.Constant][29] /* ty=Tensor[(240), bool] */, dtype="bool") /* ty=Tensor[(240), bool] */;
    %384 = %365.2;
    %385 = cast(%384, dtype="float32") /* ty=Tensor[(154), float32] */;
    %386 = cast(%var_2252, dtype="int16") /* ty=Tensor[(100), int16] */;
    %387 = cast(meta[relay.Constant][30] /* ty=Tensor[(1820), float32] */, dtype="float32") /* ty=Tensor[(1820), float32] */;
    %388 = reshape(%381, newshape=[]) /* ty=int16 */;
    %389 = reshape(%382, newshape=[12, 4, 1]) /* ty=Tensor[(12, 4, 1), int16] */;
    %390 = reshape(%383, newshape=[12, 4, 5]) /* ty=Tensor[(12, 4, 5), bool] */;
    %391 = reshape(%385, newshape=[154]) /* ty=Tensor[(154), float32] */;
    %392 = reshape(%386, newshape=[100]) /* ty=Tensor[(100), int16] */;
    %393 = reshape(%387, newshape=[1820]) /* ty=Tensor[(1820), float32] */;
    %394 = @func_1093(%388, %389, %390, %391, %392, %393) /* ty=(Tensor[(12, 4, 1), bool], Tensor[(12, 4, 5), uint8], Tensor[(154), float32], Tensor[(100), int16], Tensor[(112), int64], Tensor[(12, 4, 100), uint8], Tensor[(5, 20), int16], Tensor[(1, 80), float32], Tensor[(1820), float32]) */;
    %395 = less(%379, %380) /* ty=Tensor[(15, 7, 14), bool] */;
    %396 = %394.8;
    (%384, %var_2252, %395, %396, meta[relay.Constant][27] /* ty=int16 */, meta[relay.Constant][28] /* ty=Tensor[(48), int16] */, meta[relay.Constant][29] /* ty=Tensor[(240), bool] */, meta[relay.Constant][30] /* ty=Tensor[(1820), float32] */)
  };
  %397(%var_2287) /* ty=(Tensor[(154), float32], Tensor[(100), int16], Tensor[(15, 7, 14), bool], Tensor[(1820), float32], int16, Tensor[(48), int16], Tensor[(240), bool], Tensor[(1820), float32]) */
}

def @func_6010() -> (Tensor[(80), float32], Tensor[(80), float32], Tensor[(7, 260), float32], Tensor[(100), float32]) {
  %415 = fn () -> (Tensor[(80), float32], Tensor[(80), float32], Tensor[(7, 260), float32], Tensor[(100), float32]) {
    %398 = cast(meta[relay.Constant][31] /* ty=Tensor[(80), float32] */, dtype="float32") /* ty=Tensor[(80), float32] */;
    %399 = @func_4385() /* ty=(Tensor[(100), int16], Tensor[(8, 2, 2), float64], Tensor[(32), float32]) */;
    %400 = %399.0;
    %401 = cast(%400, dtype="float64") /* ty=Tensor[(100), float64] */;
    %402 = sinh(%401) /* ty=Tensor[(100), float64] */;
    %403 = cast(%402, dtype="int16") /* ty=Tensor[(100), int16] */;
    %404 = cast(meta[relay.Constant][32] /* ty=Tensor[(7, 260), float32] */, dtype="float32") /* ty=Tensor[(7, 260), float32] */;
    %405 = reshape(%398, newshape=[80]) /* ty=Tensor[(80), float32] */;
    %406 = reshape(%403, newshape=[50, 2]) /* ty=Tensor[(50, 2), int16] */;
    %407 = reshape(%404, newshape=[1820]) /* ty=Tensor[(1820), float32] */;
    %408 = @func_4130(%405, %406, %407) /* ty=(Tensor[(15, 7, 14), bool], Tensor[(14, 2, 4), int64], Tensor[(80), float32], Tensor[(50, 2), int16], Tensor[(1820), float32]) */;
    %409 = cast(%402, dtype="float32") /* ty=Tensor[(100), float32] */;
    %410 = shape_of(%400, dtype="int32") /* ty=Tensor[(1), int32] */;
    %411 = cast(%400, dtype="float32") /* ty=Tensor[(100), float32] */;
    %412 = dyn.reshape(%409, %410, newshape=[]) /* ty=Tensor[(?), float32] */;
    %413 = %408.2;
    %414 = maximum(%411, %412) /* ty=Tensor[(100), float32] */;
    (%413, meta[relay.Constant][31] /* ty=Tensor[(80), float32] */, meta[relay.Constant][32] /* ty=Tensor[(7, 260), float32] */, %414)
  };
  %415() /* ty=(Tensor[(80), float32], Tensor[(80), float32], Tensor[(7, 260), float32], Tensor[(100), float32]) */
}

def @func_7955(%var_7953: Tensor[(1210), uint32], %var_7954: Tensor[(1248), uint16]) -> (Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), bool], Tensor[(1210), uint32], Tensor[(8, 12, 13), bool], Tensor[(1248), uint16], Tensor[(14, 15, 14), int32]) {
  @func_7951(%var_7953, %var_7954) /* ty=(Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), bool], Tensor[(1210), uint32], Tensor[(8, 12, 13), bool], Tensor[(1248), uint16], Tensor[(14, 15, 14), int32]) */
}

def @func_8537() -> Tensor[(14, 15, 14), int32] {
  @func_8535() /* ty=Tensor[(14, 15, 14), int32] */
}

def @func_5792(%var_5790: Tensor[(8, 13, 14), bool], %var_5791: Tensor[(8, 13, 14), bool]) -> (Tensor[(8, 13, 14), bool], Tensor[(8, 13, 14), float32]) {
  %423 = fn (%var_5772: Tensor[(8, 13, 14), bool], %var_5773: Tensor[(8, 13, 14), bool]) -> (Tensor[(8, 13, 14), bool], Tensor[(8, 13, 14), float32]) {
    %416 = cast(%var_5773, dtype="bool") /* ty=Tensor[(8, 13, 14), bool] */;
    %417 = shape_of(%var_5772, dtype="int32") /* ty=Tensor[(3), int32] */;
    %418 = cast(%var_5772, dtype="bool") /* ty=Tensor[(8, 13, 14), bool] */;
    %419 = dyn.reshape(%416, %417, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %420 = cast(%var_5772, dtype="float32") /* ty=Tensor[(8, 13, 14), float32] */;
    %421 = logical_or(%418, %419) /* ty=Tensor[(8, 13, 14), bool] */;
    %422 = erf(%420) /* ty=Tensor[(8, 13, 14), float32] */;
    (%421, %422)
  };
  %423(%var_5790, %var_5791) /* ty=(Tensor[(8, 13, 14), bool], Tensor[(8, 13, 14), float32]) */
}

def @func_4879() -> (Tensor[(13, 13, 12), float64],) {
  %426 = fn () -> (Tensor[(13, 13, 12), float64],) {
    %424 = @func_3705() /* ty=(Tensor[(8), float32], Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), bool], Tensor[(13, 13, 12), float64], Tensor[(13, 13, 12), float64], Tensor[(10, 12, 9), float64]) */;
    %425 = %424.4;
    (%425,)
  };
  %426() /* ty=(Tensor[(13, 13, 12), float64],) */
}

def @func_7488() -> Tensor[(14, 15, 14), int32] {
  %428 = fn () -> Tensor[(14, 15, 14), int32] {
    %427 = @func_6781() /* ty=(Tensor[(14, 15, 14), int32],) */;
    %427.0
  };
  %428() /* ty=Tensor[(14, 15, 14), int32] */
}

def @func_8150() -> (Tensor[(15, 7, 14), bool],) {
  %429 = @func_3377() /* ty=Tensor[(15, 7, 14), bool] */;
  (%429,)
}

def @func_2913(%var_2911: Tensor[(15, 7, 14), bool]) -> (Tensor[(15, 7, 14), uint8], Tensor[(15, 7, 14), float64]) {
  @func_2910(%var_2911) /* ty=(Tensor[(15, 7, 14), uint8], Tensor[(15, 7, 14), float64]) */
}

def @func_1799(%var_1797: Tensor[(100), int16]) -> (Tensor[(15, 7, 14), bool], Tensor[(14, 2, 4), bool], Tensor[(154), float32], Tensor[(100), int16], Tensor[(112), int64], Tensor[(15, 7, 14), float32]) {
  @func_1796(%var_1797) /* ty=(Tensor[(15, 7, 14), bool], Tensor[(14, 2, 4), bool], Tensor[(154), float32], Tensor[(100), int16], Tensor[(112), int64], Tensor[(15, 7, 14), float32]) */
}

def @func_8386() -> (Tensor[(15, 7, 14), float32], Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), bool]) {
  %435 = fn () -> (Tensor[(15, 7, 14), float32], Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), bool]) {
    %430 = @func_1565() /* ty=(Tensor[(15, 7, 14), float32],) */;
    %431 = @func_8150() /* ty=(Tensor[(15, 7, 14), bool],) */;
    %432 = %430.0;
    %433 = @func_3377() /* ty=Tensor[(15, 7, 14), bool] */;
    %434 = %431.0;
    (%432, %433, %434)
  };
  %435() /* ty=(Tensor[(15, 7, 14), float32], Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), bool]) */
}

def @func_3640(%var_3633: Tensor[(7, 3, 11), int16], %var_3634: Tensor[(7, 3, 11), int16]) -> (Tensor[(7, 3, 11), int16],) {
  %436 = cast(%var_3634, dtype="int16") /* ty=Tensor[(7, 3, 11), int16] */;
  %437 = shape_of(%var_3633, dtype="int32") /* ty=Tensor[(3), int32] */;
  %438 = cast(%var_3633, dtype="int16") /* ty=Tensor[(7, 3, 11), int16] */;
  %439 = dyn.reshape(%436, %437, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %440 = right_shift(%438, %439) /* ty=Tensor[(7, 3, 11), int16] */;
  (%440,)
}

def @func_297(%var_292: Tensor[(10, 13, 14), float32], %var_293: Tensor[(10, 13, 14), float32]) -> Tensor[(10, 13, 14), float32] {
  %441 = cast(%var_293, dtype="float32") /* ty=Tensor[(10, 13, 14), float32] */;
  %442 = shape_of(%var_292, dtype="int32") /* ty=Tensor[(3), int32] */;
  %443 = cast(%var_292, dtype="float32") /* ty=Tensor[(10, 13, 14), float32] */;
  %444 = dyn.reshape(%441, %442, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%443, %444) /* ty=Tensor[(10, 13, 14), float32] */
}

def @func_4284(%var_4283: Tensor[(1210), uint32]) -> (Tensor[(14, 15, 14), int32], Tensor[(605, 2), uint32], Tensor[(1210), uint32]) {
  %451 = fn (%var_4275: Tensor[(1210), uint32]) -> (Tensor[(14, 15, 14), int32], Tensor[(605, 2), uint32], Tensor[(1210), uint32]) {
    %445 = @func_3295() /* ty=(Tensor[(14, 15, 14), int32], Tensor[(15, 7, 14), bool]) */;
    %446 = cast(%var_4275, dtype="uint32") /* ty=Tensor[(1210), uint32] */;
    %447 = reshape(%446, newshape=[605, 2]) /* ty=Tensor[(605, 2), uint32] */;
    %448 = @func_2026(%447) /* ty=(Tensor[(15, 7, 14), bool], Tensor[(11, 10, 11), uint32], Tensor[(605, 2), uint32]) */;
    %449 = %445.0;
    %450 = %448.2;
    (%449, %450, %var_4275)
  };
  %451(%var_4283) /* ty=(Tensor[(14, 15, 14), int32], Tensor[(605, 2), uint32], Tensor[(1210), uint32]) */
}

def @func_4093() -> (Tensor[(15, 7, 14), bool],) {
  %454 = fn () -> (Tensor[(15, 7, 14), bool],) {
    %452 = @func_2229() /* ty=(Tensor[(15, 7, 14), bool],) */;
    %453 = %452.0;
    (%453,)
  };
  %454() /* ty=(Tensor[(15, 7, 14), bool],) */
}

def @func_5068() -> Tensor[(10, 12, 9), float64] {
  @func_5066() /* ty=Tensor[(10, 12, 9), float64] */
}

def @func_3535() -> (Tensor[(15, 7, 14), float32], Tensor[(10, 13, 14), float32], Tensor[(1820), float32]) {
  %461 = fn () -> (Tensor[(15, 7, 14), float32], Tensor[(10, 13, 14), float32], Tensor[(1820), float32]) {
    %455 = cast(meta[relay.Constant][33] /* ty=Tensor[(1820), float32] */, dtype="float32") /* ty=Tensor[(1820), float32] */;
    %456 = cast(meta[relay.Constant][33] /* ty=Tensor[(1820), float32] */, dtype="float32") /* ty=Tensor[(1820), float32] */;
    %457 = reshape(%455, newshape=[10, 13, 14]) /* ty=Tensor[(10, 13, 14), float32] */;
    %458 = reshape(%456, newshape=[10, 13, 14]) /* ty=Tensor[(10, 13, 14), float32] */;
    %459 = @func_1337() /* ty=Tensor[(15, 7, 14), float32] */;
    %460 = @func_297(%457, %458) /* ty=Tensor[(10, 13, 14), float32] */;
    (%459, %460, meta[relay.Constant][33] /* ty=Tensor[(1820), float32] */)
  };
  %461() /* ty=(Tensor[(15, 7, 14), float32], Tensor[(10, 13, 14), float32], Tensor[(1820), float32]) */
}

def @func_5585(%var_5578: Tensor[(15, 2, 13), float64]) -> Tensor[(15, 2, 13), float64] {
  %462 = cast(%var_5578, dtype="float64") /* ty=Tensor[(15, 2, 13), float64] */;
  acos(%462) /* ty=Tensor[(15, 2, 13), float64] */
}

def @func_6031() -> Tensor[(15, 7, 14), bool] {
  %463 = fn () -> Tensor[(15, 7, 14), bool] {
    @func_4323() /* ty=Tensor[(15, 7, 14), bool] */
  };
  %463() /* ty=Tensor[(15, 7, 14), bool] */
}

def @func_5251() -> (Tensor[(15, 7, 14), float32], Tensor[(10, 12, 9), float64]) {
  @func_5249() /* ty=(Tensor[(15, 7, 14), float32], Tensor[(10, 12, 9), float64]) */
}

def @func_6489() -> (Tensor[(15, 7, 14), float64],) {
  %468 = fn () -> (Tensor[(15, 7, 14), float64],) {
    %464 = @func_5511() /* ty=(Tensor[(14, 15, 14), int32], Tensor[(15, 7, 14), bool]) */;
    %465 = %464.1;
    %466 = cast(%465, dtype="float64") /* ty=Tensor[(15, 7, 14), float64] */;
    %467 = asin(%466) /* ty=Tensor[(15, 7, 14), float64] */;
    (%467,)
  };
  %468() /* ty=(Tensor[(15, 7, 14), float64],) */
}

def @func_2489(%var_2487: Tensor[(260), int8]) -> (Tensor[(15, 7, 14), bool], Tensor[(13, 4, 5), float64], Tensor[(260), int8]) {
  @func_2486(%var_2487) /* ty=(Tensor[(15, 7, 14), bool], Tensor[(13, 4, 5), float64], Tensor[(260), int8]) */
}

def @main() -> (Tensor[(13, 15, 11), float64],) {
  %469 = cast(meta[relay.Constant][34] /* ty=Tensor[(13, 15, 11), float64] */, dtype="float64") /* ty=Tensor[(13, 15, 11), float64] */;
  %470 = sigmoid(%469) /* ty=Tensor[(13, 15, 11), float64] */;
  (%470,)
}

def @func_1856(%var_1854: Tensor[(50), int16], %var_1855: Tensor[(50, 2), int16]) -> (Tensor[(15, 7, 14), float32], Tensor[(14, 15, 14), float64], Tensor[(5, 2, 10), bool], Tensor[(50), int16], Tensor[(50, 2), int16], Tensor[(112, 1), int64]) {
  @func_1852(%var_1854, %var_1855) /* ty=(Tensor[(15, 7, 14), float32], Tensor[(14, 15, 14), float64], Tensor[(5, 2, 10), bool], Tensor[(50), int16], Tensor[(50, 2), int16], Tensor[(112, 1), int64]) */
}

def @func_3205() -> Tensor[(15, 7, 14), bool] {
  %471 = @func_3191() /* ty=(Tensor[(15, 7, 14), bool],) */;
  %471.0
}

def @func_4318() -> (Tensor[(14, 15, 14), int32], Tensor[(8), float32]) {
  %472 = @func_3705() /* ty=(Tensor[(8), float32], Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), bool], Tensor[(13, 13, 12), float64], Tensor[(13, 13, 12), float64], Tensor[(10, 12, 9), float64]) */;
  %473 = @func_1680() /* ty=Tensor[(14, 15, 14), int32] */;
  %474 = %472.0;
  (%473, %474)
}

def @func_4597() -> Tensor[(15, 7, 14), bool] {
  @func_4595() /* ty=Tensor[(15, 7, 14), bool] */
}

def @func_7008() -> (Tensor[(10, 13, 14), float32],) {
  %475 = @func_3534() /* ty=(Tensor[(15, 7, 14), float32], Tensor[(10, 13, 14), float32], Tensor[(1820), float32]) */;
  %476 = %475.1;
  (%476,)
}

def @func_5897() -> (Tensor[(10, 12, 9), float64],) {
  %478 = fn () -> (Tensor[(10, 12, 9), float64],) {
    %477 = @func_5066() /* ty=Tensor[(10, 12, 9), float64] */;
    (%477,)
  };
  %478() /* ty=(Tensor[(10, 12, 9), float64],) */
}

def @func_2763(%var_2744: Tensor[(15, 7, 14), bool]) -> (Tensor[(15, 7, 14), uint8], Tensor[(1210), bool], float64, Tensor[(208), float64], Tensor[(1210), uint32]) {
  %479 = @func_2222() /* ty=(Tensor[(15, 7, 14), bool],) */;
  %480 = %479.0;
  %481 = cast(%var_2744, dtype="uint8") /* ty=Tensor[(15, 7, 14), uint8] */;
  %482 = shape_of(%480, dtype="int32") /* ty=Tensor[(3), int32] */;
  %483 = cast(%480, dtype="uint8") /* ty=Tensor[(15, 7, 14), uint8] */;
  %484 = dyn.reshape(%481, %482, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %485 = cast(5.31976f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %486 = cast(meta[relay.Constant][35] /* ty=Tensor[(208), float64] */, dtype="float64") /* ty=Tensor[(208), float64] */;
  %487 = cast(meta[relay.Constant][36] /* ty=Tensor[(1210), uint32] */, dtype="uint32") /* ty=Tensor[(1210), uint32] */;
  %488 = cast(meta[relay.Constant][36] /* ty=Tensor[(1210), uint32] */, dtype="float64") /* ty=Tensor[(1210), float64] */;
  %489 = reshape(%485, newshape=[]) /* ty=float64 */;
  %490 = reshape(%486, newshape=[8, 2, 13]) /* ty=Tensor[(8, 2, 13), float64] */;
  %491 = reshape(%487, newshape=[1210]) /* ty=Tensor[(1210), uint32] */;
  %492 = reshape(%488, newshape=[1210]) /* ty=Tensor[(1210), float64] */;
  %493 = @func_2087(%489, %490, %491, %492) /* ty=(Tensor[(8, 2, 13), bool], Tensor[(15, 7, 14), bool], Tensor[(1210), bool]) */;
  %494 = right_shift(%483, %484) /* ty=Tensor[(15, 7, 14), uint8] */;
  %495 = %493.2;
  (%494, %495, 5.31976f64 /* ty=float64 */, meta[relay.Constant][35] /* ty=Tensor[(208), float64] */, meta[relay.Constant][36] /* ty=Tensor[(1210), uint32] */)
}

def @func_3805() -> Tensor[(14, 15, 14), int32] {
  @func_3803() /* ty=Tensor[(14, 15, 14), int32] */
}

def @func_7245(%var_7243: Tensor[(231), int16]) -> (Tensor[(14, 15, 14), int32], Tensor[(15, 7, 14), bool], Tensor[(231), int16], Tensor[(231), int16]) {
  @func_7242(%var_7243) /* ty=(Tensor[(14, 15, 14), int32], Tensor[(15, 7, 14), bool], Tensor[(231), int16], Tensor[(231), int16]) */
}

def @func_6131(%var_6108: Tensor[(14, 15, 14), int32]) -> (Tensor[(15, 7, 14), bool], Tensor[(14, 15, 14), bool]) {
  %496 = @func_5511() /* ty=(Tensor[(14, 15, 14), int32], Tensor[(15, 7, 14), bool]) */;
  %497 = %496.0;
  %498 = cast(%var_6108, dtype="bool") /* ty=Tensor[(14, 15, 14), bool] */;
  %499 = shape_of(%497, dtype="int32") /* ty=Tensor[(3), int32] */;
  %500 = cast(%497, dtype="bool") /* ty=Tensor[(14, 15, 14), bool] */;
  %501 = dyn.reshape(%498, %499, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %502 = @func_3926() /* ty=Tensor[(15, 7, 14), bool] */;
  %503 = equal(%500, %501) /* ty=Tensor[(14, 15, 14), bool] */;
  (%502, %503)
}

def @func_1315() -> Tensor[(15, 7, 14), bool] {
  @func_1313() /* ty=Tensor[(15, 7, 14), bool] */
}

def @func_6897() -> (Tensor[(10, 12, 9), bool], Tensor[(10, 12, 9), float64], Tensor[(15, 7, 14), bool], Tensor[(10, 12, 9), float64], Tensor[(112), float32], Tensor[(15, 7, 14), bool], Tensor[(9, 11, 6), int64]) {
  %535 = fn () -> (Tensor[(10, 12, 9), bool], Tensor[(10, 12, 9), float64], Tensor[(15, 7, 14), bool], Tensor[(10, 12, 9), float64], Tensor[(112), float32], Tensor[(15, 7, 14), bool], Tensor[(9, 11, 6), int64]) {
    %504 = @func_5249() /* ty=(Tensor[(15, 7, 14), float32], Tensor[(10, 12, 9), float64]) */;
    %505 = %504.1;
    %506 = cast(meta[relay.Constant][37] /* ty=Tensor[(10, 12, 9), float64] */, dtype="float32") /* ty=Tensor[(10, 12, 9), float32] */;
    %507 = shape_of(%505, dtype="int32") /* ty=Tensor[(3), int32] */;
    %508 = cast(%505, dtype="float32") /* ty=Tensor[(10, 12, 9), float32] */;
    %509 = dyn.reshape(%506, %507, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %510 = divide(%508, %509) /* ty=Tensor[(10, 12, 9), float32] */;
    %511 = cast(meta[relay.Constant][37] /* ty=Tensor[(10, 12, 9), float64] */, dtype="bool") /* ty=Tensor[(10, 12, 9), bool] */;
    %512 = shape_of(%510, dtype="int32") /* ty=Tensor[(3), int32] */;
    %513 = cast(%510, dtype="bool") /* ty=Tensor[(10, 12, 9), bool] */;
    %514 = dyn.reshape(%511, %512, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %515 = @func_4796() /* ty=(Tensor[(10, 12, 9), float64],) */;
    %516 = @func_6509() /* ty=(Tensor[(15, 7, 14), bool],) */;
    %517 = cast(meta[relay.Constant][38] /* ty=Tensor[(112), float32] */, dtype="float32") /* ty=Tensor[(112), float32] */;
    %518 = reshape(%517, newshape=[2, 4, 14]) /* ty=Tensor[(2, 4, 14), float32] */;
    %519 = @func_5756(%518) /* ty=(Tensor[(2, 4, 14), float32], Tensor[(10, 12, 9), float64], Tensor[(13, 13, 12), float64]) */;
    %520 = @func_3191() /* ty=(Tensor[(15, 7, 14), bool],) */;
    %521 = @func_5342() /* ty=(Tensor[(9, 11, 6), int32], Tensor[(15, 7, 14), bool]) */;
    %522 = %521.0;
    %523 = cast(%522, dtype="float32") /* ty=Tensor[(9, 11, 6), float32] */;
    %524 = log2(%523) /* ty=Tensor[(9, 11, 6), float32] */;
    %525 = cast(%522, dtype="int64") /* ty=Tensor[(9, 11, 6), int64] */;
    %526 = shape_of(%524, dtype="int32") /* ty=Tensor[(3), int32] */;
    %527 = cast(%524, dtype="int64") /* ty=Tensor[(9, 11, 6), int64] */;
    %528 = dyn.reshape(%525, %526, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %529 = logical_and(%513, %514) /* ty=Tensor[(10, 12, 9), bool] */;
    %530 = %515.0;
    %531 = %516.0;
    %532 = %519.1;
    %533 = %520.0;
    %534 = subtract(%527, %528) /* ty=Tensor[(9, 11, 6), int64] */;
    (%529, %530, %531, %532, meta[relay.Constant][38] /* ty=Tensor[(112), float32] */, %533, %534)
  };
  %535() /* ty=(Tensor[(10, 12, 9), bool], Tensor[(10, 12, 9), float64], Tensor[(15, 7, 14), bool], Tensor[(10, 12, 9), float64], Tensor[(112), float32], Tensor[(15, 7, 14), bool], Tensor[(9, 11, 6), int64]) */
}

def @func_1313() -> Tensor[(15, 7, 14), bool] {
  %536 = cast(meta[relay.Constant][39] /* ty=uint64 */, dtype="bool") /* ty=bool */;
  %537 = cast(meta[relay.Constant][40] /* ty=Tensor[(15, 7, 14), uint64] */, dtype="bool") /* ty=Tensor[(15, 7, 14), bool] */;
  equal(%536, %537) /* ty=Tensor[(15, 7, 14), bool] */
}

def @func_3707() -> (Tensor[(8), float32], Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), bool], Tensor[(13, 13, 12), float64], Tensor[(13, 13, 12), float64], Tensor[(10, 12, 9), float64]) {
  @func_3705() /* ty=(Tensor[(8), float32], Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), bool], Tensor[(13, 13, 12), float64], Tensor[(13, 13, 12), float64], Tensor[(10, 12, 9), float64]) */
}

def @func_8109(%var_8107: Tensor[(112, 1), int64]) -> (Tensor[(15, 7, 14), float32], Tensor[(14, 2, 4), int64], Tensor[(112, 1), int64], Tensor[(15, 7, 14), bool], Tensor[(1248, 1210), int32]) {
  @func_8106(%var_8107) /* ty=(Tensor[(15, 7, 14), float32], Tensor[(14, 2, 4), int64], Tensor[(112, 1), int64], Tensor[(15, 7, 14), bool], Tensor[(1248, 1210), int32]) */
}

def @func_6212(%var_6211: Tensor[(7, 1, 2), int8]) -> (Tensor[(7, 1, 2), int8],) {
  %541 = fn (%var_6206: Tensor[(7, 1, 2), int8]) -> (Tensor[(7, 1, 2), int8],) {
    %538 = cast(meta[relay.Constant][41] /* ty=int8 */, dtype="int8") /* ty=int8 */;
    %539 = cast(%var_6206, dtype="int8") /* ty=Tensor[(7, 1, 2), int8] */;
    %540 = multiply(%538, %539) /* ty=Tensor[(7, 1, 2), int8] */;
    (%540,)
  };
  %541(%var_6211) /* ty=(Tensor[(7, 1, 2), int8],) */
}

def @func_6157() -> (Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), bool]) {
  @func_6155() /* ty=(Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), bool]) */
}

def @func_8210(%var_8208: Tensor[(8, 6, 6), float32]) -> Tensor[(8, 6, 6), float32] {
  @func_8207(%var_8208) /* ty=Tensor[(8, 6, 6), float32] */
}

def @func_5931() -> (Tensor[(15, 7, 14), bool],) {
  %543 = fn () -> (Tensor[(15, 7, 14), bool],) {
    %542 = @func_4323() /* ty=Tensor[(15, 7, 14), bool] */;
    (%542,)
  };
  %543() /* ty=(Tensor[(15, 7, 14), bool],) */
}

def @func_8535() -> Tensor[(14, 15, 14), int32] {
  @func_3803() /* ty=Tensor[(14, 15, 14), int32] */
}

def @func_4135(%var_4132: Tensor[(80), float32], %var_4133: Tensor[(50, 2), int16], %var_4134: Tensor[(1820), float32]) -> (Tensor[(15, 7, 14), bool], Tensor[(14, 2, 4), int64], Tensor[(80), float32], Tensor[(50, 2), int16], Tensor[(1820), float32]) {
  @func_4130(%var_4132, %var_4133, %var_4134) /* ty=(Tensor[(15, 7, 14), bool], Tensor[(14, 2, 4), int64], Tensor[(80), float32], Tensor[(50, 2), int16], Tensor[(1820), float32]) */
}

def @func_5588(%var_5586: Tensor[(15, 2, 13), float64]) -> Tensor[(15, 2, 13), float64] {
  @func_5585(%var_5586) /* ty=Tensor[(15, 2, 13), float64] */
}

def @func_8286() -> Tensor[(15, 7, 14), float64] {
  %544 = fn () -> Tensor[(15, 7, 14), float64] {
    @func_6998() /* ty=Tensor[(15, 7, 14), float64] */
  };
  %544() /* ty=Tensor[(15, 7, 14), float64] */
}

def @func_8152() -> (Tensor[(15, 7, 14), bool],) {
  @func_8150() /* ty=(Tensor[(15, 7, 14), bool],) */
}

def @func_7951(%var_7874: Tensor[(1210), uint32], %var_7912: Tensor[(1248), uint16]) -> (Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), bool], Tensor[(1210), uint32], Tensor[(8, 12, 13), bool], Tensor[(1248), uint16], Tensor[(14, 15, 14), int32]) {
  %545 = @func_3295() /* ty=(Tensor[(14, 15, 14), int32], Tensor[(15, 7, 14), bool]) */;
  %546 = @func_6896() /* ty=(Tensor[(10, 12, 9), bool], Tensor[(10, 12, 9), float64], Tensor[(15, 7, 14), bool], Tensor[(10, 12, 9), float64], Tensor[(112), float32], Tensor[(15, 7, 14), bool], Tensor[(9, 11, 6), int64]) */;
  %547 = cast(%var_7874, dtype="uint32") /* ty=Tensor[(1210), uint32] */;
  %548 = reshape(%547, newshape=[1210]) /* ty=Tensor[(1210), uint32] */;
  %549 = @func_2139(%548) /* ty=(Tensor[(15, 7, 14), bool], Tensor[(1210), float64]) */;
  %550 = cast(%var_7912, dtype="uint16") /* ty=Tensor[(1248), uint16] */;
  %551 = cast(%var_7912, dtype="uint16") /* ty=Tensor[(1248), uint16] */;
  %552 = reshape(%550, newshape=[8, 12, 13]) /* ty=Tensor[(8, 12, 13), uint16] */;
  %553 = reshape(%551, newshape=[8, 12, 13]) /* ty=Tensor[(8, 12, 13), uint16] */;
  %554 = %545.1;
  %555 = %546.2;
  %556 = %549.0;
  %557 = @func_3098(%552, %553) /* ty=Tensor[(8, 12, 13), bool] */;
  %558 = @func_1680() /* ty=Tensor[(14, 15, 14), int32] */;
  (%554, %555, %556, %var_7874, %557, %var_7912, %558)
}

def @func_3644(%var_3642: Tensor[(7, 3, 11), int16], %var_3643: Tensor[(7, 3, 11), int16]) -> (Tensor[(7, 3, 11), int16],) {
  @func_3640(%var_3642, %var_3643) /* ty=(Tensor[(7, 3, 11), int16],) */
}

def @func_4185() -> (Tensor[(15, 7, 14), bool], Tensor[(14, 15, 14), int32], Tensor[(14, 15, 14), int32]) {
  %559 = @func_2222() /* ty=(Tensor[(15, 7, 14), bool],) */;
  %560 = @func_3803() /* ty=Tensor[(14, 15, 14), int32] */;
  %561 = cast(%560, dtype="int32") /* ty=Tensor[(14, 15, 14), int32] */;
  %562 = cast(%560, dtype="uint16") /* ty=Tensor[(14, 15, 14), uint16] */;
  %563 = reshape(%561, newshape=[14, 15, 14]) /* ty=Tensor[(14, 15, 14), int32] */;
  %564 = reshape(%562, newshape=[14, 15, 14]) /* ty=Tensor[(14, 15, 14), uint16] */;
  %565 = %559.0;
  %566 = @func_3128(%563, %564) /* ty=Tensor[(14, 15, 14), int32] */;
  (%565, %560, %566)
}

def @func_6511() -> (Tensor[(15, 7, 14), bool],) {
  @func_6509() /* ty=(Tensor[(15, 7, 14), bool],) */
}

def @func_2848(%var_2846: Tensor[(112), int64], %var_2847: Tensor[(120), int32]) -> (Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), float32], Tensor[(14, 2, 4), int64], Tensor[(112), int64], Tensor[(11, 10, 11), uint32], Tensor[(1210), uint32], Tensor[(5, 3, 8), bool], Tensor[(120), int32], Tensor[(10, 13, 14), float32], Tensor[(1820), float32]) {
  %587 = fn (%var_2791: Tensor[(112), int64], %var_2824: Tensor[(120), int32]) -> (Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), float32], Tensor[(14, 2, 4), int64], Tensor[(112), int64], Tensor[(11, 10, 11), uint32], Tensor[(1210), uint32], Tensor[(5, 3, 8), bool], Tensor[(120), int32], Tensor[(10, 13, 14), float32], Tensor[(1820), float32]) {
    %567 = cast(%var_2791, dtype="int64") /* ty=Tensor[(112), int64] */;
    %568 = reshape(%567, newshape=[14, 2, 4]) /* ty=Tensor[(14, 2, 4), int64] */;
    %569 = @func_450(%568) /* ty=(Tensor[(14, 2, 4), int64], Tensor[(14, 2, 4), bool]) */;
    %570 = cast(meta[relay.Constant][42] /* ty=Tensor[(1210), uint32] */, dtype="uint32") /* ty=Tensor[(1210), uint32] */;
    %571 = cast(meta[relay.Constant][42] /* ty=Tensor[(1210), uint32] */, dtype="uint32") /* ty=Tensor[(1210), uint32] */;
    %572 = reshape(%570, newshape=[11, 10, 11]) /* ty=Tensor[(11, 10, 11), uint32] */;
    %573 = reshape(%571, newshape=[11, 10, 11]) /* ty=Tensor[(11, 10, 11), uint32] */;
    %574 = cast(%var_2824, dtype="int32") /* ty=Tensor[(120), int32] */;
    %575 = reshape(%574, newshape=[5, 3, 8]) /* ty=Tensor[(5, 3, 8), int32] */;
    %576 = @func_2413(%575) /* ty=(Tensor[(5, 3, 8), bool], Tensor[(5, 3, 8), float64]) */;
    %577 = cast(meta[relay.Constant][43] /* ty=Tensor[(1820), float32] */, dtype="float32") /* ty=Tensor[(1820), float32] */;
    %578 = cast(meta[relay.Constant][43] /* ty=Tensor[(1820), float32] */, dtype="float32") /* ty=Tensor[(1820), float32] */;
    %579 = reshape(%577, newshape=[10, 13, 14]) /* ty=Tensor[(10, 13, 14), float32] */;
    %580 = reshape(%578, newshape=[10, 13, 14]) /* ty=Tensor[(10, 13, 14), float32] */;
    %581 = @func_1473() /* ty=Tensor[(15, 7, 14), bool] */;
    %582 = @func_1337() /* ty=Tensor[(15, 7, 14), float32] */;
    %583 = %569.0;
    %584 = @func_1534(%572, %573) /* ty=Tensor[(11, 10, 11), uint32] */;
    %585 = %576.0;
    %586 = @func_297(%579, %580) /* ty=Tensor[(10, 13, 14), float32] */;
    (%581, %582, %583, %var_2791, %584, meta[relay.Constant][42] /* ty=Tensor[(1210), uint32] */, %585, %var_2824, %586, meta[relay.Constant][43] /* ty=Tensor[(1820), float32] */)
  };
  %587(%var_2846, %var_2847) /* ty=(Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), float32], Tensor[(14, 2, 4), int64], Tensor[(112), int64], Tensor[(11, 10, 11), uint32], Tensor[(1210), uint32], Tensor[(5, 3, 8), bool], Tensor[(120), int32], Tensor[(10, 13, 14), float32], Tensor[(1820), float32]) */
}

def @func_3260(%var_3251: Tensor[(10, 12, 9), float64]) -> (Tensor[(8, 2, 2), float64], Tensor[(4, 8), float32], Tensor[(10, 12, 9), float32]) {
  %588 = cast(meta[relay.Constant][44] /* ty=Tensor[(4, 8), float32] */, dtype="float32") /* ty=Tensor[(4, 8), float32] */;
  %589 = reshape(%588, newshape=[8, 2, 2]) /* ty=Tensor[(8, 2, 2), float32] */;
  %590 = @func_1693() /* ty=(Tensor[(10, 12, 9), float64],) */;
  %591 = %590.0;
  %592 = cast(%var_3251, dtype="float32") /* ty=Tensor[(10, 12, 9), float32] */;
  %593 = shape_of(%591, dtype="int32") /* ty=Tensor[(3), int32] */;
  %594 = cast(%591, dtype="float32") /* ty=Tensor[(10, 12, 9), float32] */;
  %595 = dyn.reshape(%592, %593, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %596 = @func_1828(%589) /* ty=Tensor[(8, 2, 2), float64] */;
  %597 = maximum(%594, %595) /* ty=Tensor[(10, 12, 9), float32] */;
  (%596, meta[relay.Constant][44] /* ty=Tensor[(4, 8), float32] */, %597)
}

def @func_7335(%var_7334: Tensor[(4, 1, 1), float32]) -> (Tensor[(4, 1, 1), float32],) {
  %600 = fn (%var_7330: Tensor[(4, 1, 1), float32]) -> (Tensor[(4, 1, 1), float32],) {
    %598 = cast(%var_7330, dtype="float32") /* ty=Tensor[(4, 1, 1), float32] */;
    %599 = tan(%598) /* ty=Tensor[(4, 1, 1), float32] */;
    (%599,)
  };
  %600(%var_7334) /* ty=(Tensor[(4, 1, 1), float32],) */
}

def @func_6456() -> Tensor[(100), int16] {
  %602 = fn () -> Tensor[(100), int16] {
    %601 = @func_5016() /* ty=(Tensor[(14, 15, 14), float64], Tensor[(14, 15, 14), float32], Tensor[(15, 7, 14), bool], Tensor[(100), int16], Tensor[(100), int16]) */;
    %601.3
  };
  %602() /* ty=Tensor[(100), int16] */
}

def @func_5016() -> (Tensor[(14, 15, 14), float64], Tensor[(14, 15, 14), float32], Tensor[(15, 7, 14), bool], Tensor[(100), int16], Tensor[(100), int16]) {
  %603 = @func_3803() /* ty=Tensor[(14, 15, 14), int32] */;
  %604 = cast(%603, dtype="float32") /* ty=Tensor[(14, 15, 14), float32] */;
  %605 = exp(%604) /* ty=Tensor[(14, 15, 14), float32] */;
  %606 = cast(%603, dtype="float64") /* ty=Tensor[(14, 15, 14), float64] */;
  %607 = shape_of(%605, dtype="int32") /* ty=Tensor[(3), int32] */;
  %608 = cast(%605, dtype="float64") /* ty=Tensor[(14, 15, 14), float64] */;
  %609 = dyn.reshape(%606, %607, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %610 = cast(%603, dtype="float32") /* ty=Tensor[(14, 15, 14), float32] */;
  %611 = cast(meta[relay.Constant][45] /* ty=Tensor[(100), int16] */, dtype="int16") /* ty=Tensor[(100), int16] */;
  %612 = reshape(%611, newshape=[100]) /* ty=Tensor[(100), int16] */;
  %613 = @func_2286(%612) /* ty=(Tensor[(154), float32], Tensor[(100), int16], Tensor[(15, 7, 14), bool], Tensor[(1820), float32], int16, Tensor[(48), int16], Tensor[(240), bool], Tensor[(1820), float32]) */;
  %614 = multiply(%608, %609) /* ty=Tensor[(14, 15, 14), float64] */;
  %615 = log2(%610) /* ty=Tensor[(14, 15, 14), float32] */;
  %616 = @func_3057() /* ty=Tensor[(15, 7, 14), bool] */;
  %617 = %613.1;
  (%614, %615, %616, %617, meta[relay.Constant][45] /* ty=Tensor[(100), int16] */)
}

def @func_714(%var_711: Tensor[(16, 1, 5), float32], %var_712: Tensor[(5, 20), int16], %var_713: Tensor[(1820, 1), float32]) -> (Tensor[(5, 2, 10), bool], Tensor[(5, 10), int16], Tensor[(5, 20), int16], Tensor[(112, 1), int64], Tensor[(16, ?, 5), uint64], Tensor[(16, 1, 5), float32], Tensor[(14, 2, 4), int64], Tensor[(10, 13, 14), float32], Tensor[(1820, 1), float32]) {
  @func_709(%var_711, %var_712, %var_713) /* ty=(Tensor[(5, 2, 10), bool], Tensor[(5, 10), int16], Tensor[(5, 20), int16], Tensor[(112, 1), int64], Tensor[(16, ?, 5), uint64], Tensor[(16, 1, 5), float32], Tensor[(14, 2, 4), int64], Tensor[(10, 13, 14), float32], Tensor[(1820, 1), float32]) */
}

def @func_1537(%var_1535: Tensor[(11, 10, 11), uint32], %var_1536: Tensor[(11, 10, 11), uint32]) -> Tensor[(11, 10, 11), uint32] {
  %622 = fn (%var_1520: Tensor[(11, 10, 11), uint32], %var_1521: Tensor[(11, 10, 11), uint32]) -> Tensor[(11, 10, 11), uint32] {
    %618 = cast(%var_1521, dtype="uint32") /* ty=Tensor[(11, 10, 11), uint32] */;
    %619 = shape_of(%var_1520, dtype="int32") /* ty=Tensor[(3), int32] */;
    %620 = cast(%var_1520, dtype="uint32") /* ty=Tensor[(11, 10, 11), uint32] */;
    %621 = dyn.reshape(%618, %619, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    multiply(%620, %621) /* ty=Tensor[(11, 10, 11), uint32] */
  };
  %622(%var_1535, %var_1536) /* ty=Tensor[(11, 10, 11), uint32] */
}

def @func_2766(%var_2764: Tensor[(15, 7, 14), bool]) -> (Tensor[(15, 7, 14), uint8], Tensor[(1210), bool], float64, Tensor[(208), float64], Tensor[(1210), uint32]) {
  @func_2763(%var_2764) /* ty=(Tensor[(15, 7, 14), uint8], Tensor[(1210), bool], float64, Tensor[(208), float64], Tensor[(1210), uint32]) */
}

def @func_3814() -> Tensor[(14, 15, 14), int32] {
  @func_1680() /* ty=Tensor[(14, 15, 14), int32] */
}

def @func_1916(%var_1914: Tensor[(5, 20), int16]) -> (Tensor[(15, 7, 14), bool], Tensor[(100), int16], Tensor[(154), float32], Tensor[(5, 20), int16], Tensor[(112), int64], Tensor[(7, 2, 11), float32], Tensor[(100), int16], Tensor[(15, 7, 14), float32]) {
  @func_1913(%var_1914) /* ty=(Tensor[(15, 7, 14), bool], Tensor[(100), int16], Tensor[(154), float32], Tensor[(5, 20), int16], Tensor[(112), int64], Tensor[(7, 2, 11), float32], Tensor[(100), int16], Tensor[(15, 7, 14), float32]) */
}

def @func_4796() -> (Tensor[(10, 12, 9), float64],) {
  %623 = @func_1693() /* ty=(Tensor[(10, 12, 9), float64],) */;
  %624 = %623.0;
  (%624,)
}

def @func_2413(%var_2345: Tensor[(5, 3, 8), int32]) -> (Tensor[(5, 3, 8), bool], Tensor[(5, 3, 8), float64]) {
  %625 = cast(meta[relay.Constant][46] /* ty=Tensor[(5, 3, 8), int32] */, dtype="bool") /* ty=Tensor[(5, 3, 8), bool] */;
  %626 = shape_of(%var_2345, dtype="int32") /* ty=Tensor[(3), int32] */;
  %627 = cast(%var_2345, dtype="bool") /* ty=Tensor[(5, 3, 8), bool] */;
  %628 = dyn.reshape(%625, %626, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %629 = cast(meta[relay.Constant][47] /* ty=Tensor[(5, 3, 8), int32] */, dtype="int32") /* ty=Tensor[(5, 3, 8), int32] */;
  %630 = shape_of(%var_2345, dtype="int32") /* ty=Tensor[(3), int32] */;
  %631 = cast(%var_2345, dtype="int32") /* ty=Tensor[(5, 3, 8), int32] */;
  %632 = dyn.reshape(%629, %630, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %633 = bitwise_xor(%631, %632) /* ty=Tensor[(5, 3, 8), int32] */;
  %634 = cast(%633, dtype="float64") /* ty=Tensor[(5, 3, 8), float64] */;
  %635 = rsqrt(%634) /* ty=Tensor[(5, 3, 8), float64] */;
  %636 = cast(%633, dtype="int64") /* ty=Tensor[(5, 3, 8), int64] */;
  %637 = shape_of(%635, dtype="int32") /* ty=Tensor[(3), int32] */;
  %638 = cast(%635, dtype="int64") /* ty=Tensor[(5, 3, 8), int64] */;
  %639 = dyn.reshape(%636, %637, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %640 = left_shift(%638, %639) /* ty=Tensor[(5, 3, 8), int64] */;
  %641 = cast(%640, dtype="float32") /* ty=Tensor[(5, 3, 8), float32] */;
  %642 = shape_of(%635, dtype="int32") /* ty=Tensor[(3), int32] */;
  %643 = cast(%635, dtype="float32") /* ty=Tensor[(5, 3, 8), float32] */;
  %644 = dyn.reshape(%641, %642, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %645 = floor_divide(%643, %644) /* ty=Tensor[(5, 3, 8), float32] */;
  %646 = cast(%645, dtype="float64") /* ty=Tensor[(5, 3, 8), float64] */;
  %647 = shape_of(%635, dtype="int32") /* ty=Tensor[(3), int32] */;
  %648 = cast(%635, dtype="float64") /* ty=Tensor[(5, 3, 8), float64] */;
  %649 = dyn.reshape(%646, %647, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %650 = less(%627, %628) /* ty=Tensor[(5, 3, 8), bool] */;
  %651 = divide(%648, %649) /* ty=Tensor[(5, 3, 8), float64] */;
  (%650, %651)
}

def @func_7055(%var_7044: Tensor[(13, 13, 12), float64]) -> Tensor[(13, 13, 12), float32] {
  %652 = @func_3705() /* ty=(Tensor[(8), float32], Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), bool], Tensor[(13, 13, 12), float64], Tensor[(13, 13, 12), float64], Tensor[(10, 12, 9), float64]) */;
  %653 = %652.3;
  %654 = cast(%var_7044, dtype="float32") /* ty=Tensor[(13, 13, 12), float32] */;
  %655 = shape_of(%653, dtype="int32") /* ty=Tensor[(3), int32] */;
  %656 = cast(%653, dtype="float32") /* ty=Tensor[(13, 13, 12), float32] */;
  %657 = dyn.reshape(%654, %655, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  add(%656, %657) /* ty=Tensor[(13, 13, 12), float32] */
}

def @func_4772() -> Tensor[(14, 15, 14), int32] {
  @func_4770() /* ty=Tensor[(14, 15, 14), int32] */
}

def @func_8207(%var_8199: Tensor[(8, 6, 6), float32]) -> Tensor[(8, 6, 6), float32] {
  %658 = cast(%var_8199, dtype="float32") /* ty=Tensor[(8, 6, 6), float32] */;
  log2(%658) /* ty=Tensor[(8, 6, 6), float32] */
}

def @func_3582() -> (Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), float32], Tensor[(100), int16], Tensor[(8), float32], Tensor[(100), int16], Tensor[(112), int64]) {
  @func_3580() /* ty=(Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), float32], Tensor[(100), int16], Tensor[(8), float32], Tensor[(100), int16], Tensor[(112), int64]) */
}

def @func_1680() -> Tensor[(14, 15, 14), int32] {
  %659 = cast(meta[relay.Constant][48] /* ty=Tensor[(14, 15, 14), float32] */, dtype="float32") /* ty=Tensor[(14, 15, 14), float32] */;
  %660 = acos(%659) /* ty=Tensor[(14, 15, 14), float32] */;
  %661 = cast(meta[relay.Constant][48] /* ty=Tensor[(14, 15, 14), float32] */, dtype="int32") /* ty=Tensor[(14, 15, 14), int32] */;
  %662 = shape_of(%660, dtype="int32") /* ty=Tensor[(3), int32] */;
  %663 = cast(%660, dtype="int32") /* ty=Tensor[(14, 15, 14), int32] */;
  %664 = dyn.reshape(%661, %662, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  left_shift(%663, %664) /* ty=Tensor[(14, 15, 14), int32] */
}

def @func_7000() -> Tensor[(15, 7, 14), float64] {
  @func_6998() /* ty=Tensor[(15, 7, 14), float64] */
}

def @func_3379() -> Tensor[(15, 7, 14), bool] {
  @func_3377() /* ty=Tensor[(15, 7, 14), bool] */
}

def @func_7434(%var_7432: Tensor[(14, 15, 14), float32], %var_7433: Tensor[(112), int64]) -> (Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), bool], Tensor[(14, 15, 14), float32], Tensor[(15, 7, 14), bool], Tensor[(112), int64]) {
  @func_7430(%var_7432, %var_7433) /* ty=(Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), bool], Tensor[(14, 15, 14), float32], Tensor[(15, 7, 14), bool], Tensor[(112), int64]) */
}

def @func_4255(%var_4254: Tensor[(100), int16]) -> (Tensor[(10, 12, 9), float64], Tensor[(14, 2, 4), bool], Tensor[(50), int16], Tensor[(100), int16], Tensor[(112), int64], Tensor[(15, 7, 14), int16], Tensor[(7, 3, 11), int16], Tensor[(231), int16]) {
  %688 = fn (%var_4242: Tensor[(100), int16]) -> (Tensor[(10, 12, 9), float64], Tensor[(14, 2, 4), bool], Tensor[(50), int16], Tensor[(100), int16], Tensor[(112), int64], Tensor[(15, 7, 14), int16], Tensor[(7, 3, 11), int16], Tensor[(231), int16]) {
    %665 = @func_1693() /* ty=(Tensor[(10, 12, 9), float64],) */;
    %666 = cast(meta[relay.Constant][49] /* ty=Tensor[(50), int16] */, dtype="int16") /* ty=Tensor[(50), int16] */;
    %667 = cast(%var_4242, dtype="int16") /* ty=Tensor[(100), int16] */;
    %668 = cast(meta[relay.Constant][50] /* ty=Tensor[(112), int64] */, dtype="int64") /* ty=Tensor[(112), int64] */;
    %669 = reshape(%666, newshape=[5, 1, 10]) /* ty=Tensor[(5, 1, 10), int16] */;
    %670 = reshape(%667, newshape=[5, 2, 10]) /* ty=Tensor[(5, 2, 10), int16] */;
    %671 = reshape(%668, newshape=[112]) /* ty=Tensor[(112), int64] */;
    %672 = @func_476(%669, %670, %671) /* ty=(Tensor[(5, 2, 10), bool], Tensor[(14, 2, 4), bool], Tensor[(112), int64]) */;
    %673 = @func_1313() /* ty=Tensor[(15, 7, 14), bool] */;
    %674 = @func_3170() /* ty=Tensor[(15, 7, 14), bool] */;
    %675 = cast(%674, dtype="int16") /* ty=Tensor[(15, 7, 14), int16] */;
    %676 = shape_of(%673, dtype="int32") /* ty=Tensor[(3), int32] */;
    %677 = cast(%673, dtype="int16") /* ty=Tensor[(15, 7, 14), int16] */;
    %678 = dyn.reshape(%675, %676, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %679 = cast(meta[relay.Constant][51] /* ty=Tensor[(231), int16] */, dtype="int16") /* ty=Tensor[(231), int16] */;
    %680 = cast(meta[relay.Constant][51] /* ty=Tensor[(231), int16] */, dtype="int16") /* ty=Tensor[(231), int16] */;
    %681 = reshape(%679, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), int16] */;
    %682 = reshape(%680, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), int16] */;
    %683 = @func_3640(%681, %682) /* ty=(Tensor[(7, 3, 11), int16],) */;
    %684 = %665.0;
    %685 = %672.1;
    %686 = bitwise_and(%677, %678) /* ty=Tensor[(15, 7, 14), int16] */;
    %687 = %683.0;
    (%684, %685, meta[relay.Constant][49] /* ty=Tensor[(50), int16] */, %var_4242, meta[relay.Constant][50] /* ty=Tensor[(112), int64] */, %686, %687, meta[relay.Constant][51] /* ty=Tensor[(231), int16] */)
  };
  %688(%var_4254) /* ty=(Tensor[(10, 12, 9), float64], Tensor[(14, 2, 4), bool], Tensor[(50), int16], Tensor[(100), int16], Tensor[(112), int64], Tensor[(15, 7, 14), int16], Tensor[(7, 3, 11), int16], Tensor[(231), int16]) */
}

def @func_6671() -> (Tensor[(7, 10, 2), float64], Tensor[(15, 7, 14), bool], Tensor[(2940), int32]) {
  %695 = fn () -> (Tensor[(7, 10, 2), float64], Tensor[(15, 7, 14), bool], Tensor[(2940), int32]) {
    %689 = @func_3442() /* ty=(Tensor[(7, 10, 2), float64],) */;
    %690 = cast(meta[relay.Constant][52] /* ty=Tensor[(2940), int32] */, dtype="int32") /* ty=Tensor[(2940), int32] */;
    %691 = reshape(%690, newshape=[14, 15, 14]) /* ty=Tensor[(14, 15, 14), int32] */;
    %692 = @func_4854(%691) /* ty=(Tensor[(15, 7, 14), bool], Tensor[(14, 15, 14), float32], Tensor[(14, 15, 14), int32]) */;
    %693 = %689.0;
    %694 = %692.0;
    (%693, %694, meta[relay.Constant][52] /* ty=Tensor[(2940), int32] */)
  };
  %695() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(15, 7, 14), bool], Tensor[(2940), int32]) */
}

def @func_2974() -> Tensor[(15, 7, 14), bool] {
  @func_2161() /* ty=Tensor[(15, 7, 14), bool] */
}

def @func_8072(%var_8070: Tensor[(10, 12, 9), float64], %var_8071: Tensor[(1210, 1), uint32]) -> (Tensor[(10, 12, 9), float64], Tensor[(15, 7, 14), float32], Tensor[(11, 10, 11), uint32], Tensor[(1210, 1), uint32]) {
  @func_8068(%var_8070, %var_8071) /* ty=(Tensor[(10, 12, 9), float64], Tensor[(15, 7, 14), float32], Tensor[(11, 10, 11), uint32], Tensor[(1210, 1), uint32]) */
}

def @func_1615(%var_1614: Tensor[(13, 4, 5), int8]) -> (Tensor[(13, 4, 5), bool], Tensor[(5, 2, 10), bool], Tensor[(50), int16], Tensor[(5, 20), int16], Tensor[(112), int64], Tensor[(13, 4, 5), float64]) {
  %711 = fn (%var_1589: Tensor[(13, 4, 5), int8]) -> (Tensor[(13, 4, 5), bool], Tensor[(5, 2, 10), bool], Tensor[(50), int16], Tensor[(5, 20), int16], Tensor[(112), int64], Tensor[(13, 4, 5), float64]) {
    %696 = cast(%var_1589, dtype="bool") /* ty=Tensor[(13, 4, 5), bool] */;
    %697 = shape_of(meta[relay.Constant][53] /* ty=Tensor[(13, 4, 5), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %698 = cast(meta[relay.Constant][53] /* ty=Tensor[(13, 4, 5), int8] */, dtype="bool") /* ty=Tensor[(13, 4, 5), bool] */;
    %699 = dyn.reshape(%696, %697, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %700 = cast(meta[relay.Constant][54] /* ty=Tensor[(50), int16] */, dtype="int16") /* ty=Tensor[(50), int16] */;
    %701 = cast(meta[relay.Constant][55] /* ty=Tensor[(5, 20), int16] */, dtype="int16") /* ty=Tensor[(5, 20), int16] */;
    %702 = cast(meta[relay.Constant][56] /* ty=Tensor[(112), int64] */, dtype="int64") /* ty=Tensor[(112), int64] */;
    %703 = reshape(%700, newshape=[5, 1, 10]) /* ty=Tensor[(5, 1, 10), int16] */;
    %704 = reshape(%701, newshape=[5, 2, 10]) /* ty=Tensor[(5, 2, 10), int16] */;
    %705 = reshape(%702, newshape=[112]) /* ty=Tensor[(112), int64] */;
    %706 = @func_476(%703, %704, %705) /* ty=(Tensor[(5, 2, 10), bool], Tensor[(14, 2, 4), bool], Tensor[(112), int64]) */;
    %707 = cast(meta[relay.Constant][53] /* ty=Tensor[(13, 4, 5), int8] */, dtype="float64") /* ty=Tensor[(13, 4, 5), float64] */;
    %708 = equal(%698, %699) /* ty=Tensor[(13, 4, 5), bool] */;
    %709 = %706.0;
    %710 = exp(%707) /* ty=Tensor[(13, 4, 5), float64] */;
    (%708, %709, meta[relay.Constant][54] /* ty=Tensor[(50), int16] */, meta[relay.Constant][55] /* ty=Tensor[(5, 20), int16] */, meta[relay.Constant][56] /* ty=Tensor[(112), int64] */, %710)
  };
  %711(%var_1614) /* ty=(Tensor[(13, 4, 5), bool], Tensor[(5, 2, 10), bool], Tensor[(50), int16], Tensor[(5, 20), int16], Tensor[(112), int64], Tensor[(13, 4, 5), float64]) */
}

def @func_8258() -> (Tensor[(10, 12, 9), float64], Tensor[(14, 2, 4), bool], Tensor[(1, 100), float32]) {
  %712 = @func_1693() /* ty=(Tensor[(10, 12, 9), float64],) */;
  %713 = cast(meta[relay.Constant][57] /* ty=Tensor[(1, 100), int16] */, dtype="int16") /* ty=Tensor[(1, 100), int16] */;
  %714 = reshape(%713, newshape=[100]) /* ty=Tensor[(100), int16] */;
  %715 = @func_1796(%714) /* ty=(Tensor[(15, 7, 14), bool], Tensor[(14, 2, 4), bool], Tensor[(154), float32], Tensor[(100), int16], Tensor[(112), int64], Tensor[(15, 7, 14), float32]) */;
  %716 = cast(meta[relay.Constant][57] /* ty=Tensor[(1, 100), int16] */, dtype="float64") /* ty=Tensor[(1, 100), float64] */;
  %717 = sinh(%716) /* ty=Tensor[(1, 100), float64] */;
  %718 = cast(%717, dtype="float32") /* ty=Tensor[(1, 100), float32] */;
  %719 = %712.0;
  %720 = %715.1;
  %721 = cos(%718) /* ty=Tensor[(1, 100), float32] */;
  (%719, %720, %721)
}

def @func_1339() -> Tensor[(15, 7, 14), float32] {
  @func_1337() /* ty=Tensor[(15, 7, 14), float32] */
}

def @func_3171() -> Tensor[(15, 7, 14), bool] {
  %723 = fn () -> Tensor[(15, 7, 14), bool] {
    %722 = @func_2222() /* ty=(Tensor[(15, 7, 14), bool],) */;
    %722.0
  };
  %723() /* ty=Tensor[(15, 7, 14), bool] */
}

def @func_7604(%var_7600: Tensor[(260), int8]) -> (Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), bool], Tensor[(260), int8]) {
  %724 = @func_3882() /* ty=(Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), float64], Tensor[(10, 13, 14), float32], Tensor[(1820), float32]) */;
  %725 = cast(%var_7600, dtype="int8") /* ty=Tensor[(260), int8] */;
  %726 = reshape(%725, newshape=[260]) /* ty=Tensor[(260), int8] */;
  %727 = @func_2486(%726) /* ty=(Tensor[(15, 7, 14), bool], Tensor[(13, 4, 5), float64], Tensor[(260), int8]) */;
  %728 = %724.0;
  %729 = %727.0;
  (%728, %729, %var_7600)
}

def @func_481(%var_478: Tensor[(5, 1, 10), int16], %var_479: Tensor[(5, 2, 10), int16], %var_480: Tensor[(112), int64]) -> (Tensor[(5, 2, 10), bool], Tensor[(14, 2, 4), bool], Tensor[(112), int64]) {
  @func_476(%var_478, %var_479, %var_480) /* ty=(Tensor[(5, 2, 10), bool], Tensor[(14, 2, 4), bool], Tensor[(112), int64]) */
}

def @func_5758(%var_5757: Tensor[(2, 4, 14), float32]) -> (Tensor[(2, 4, 14), float32], Tensor[(10, 12, 9), float64], Tensor[(13, 13, 12), float64]) {
  %736 = fn (%var_5735: Tensor[(2, 4, 14), float32]) -> (Tensor[(2, 4, 14), float32], Tensor[(10, 12, 9), float64], Tensor[(13, 13, 12), float64]) {
    %730 = cast(%var_5735, dtype="float32") /* ty=Tensor[(2, 4, 14), float32] */;
    %731 = @func_3085() /* ty=(Tensor[(10, 12, 9), float64], Tensor[(15, 7, 14), bool]) */;
    %732 = @func_4878() /* ty=(Tensor[(13, 13, 12), float64],) */;
    %733 = asinh(%730) /* ty=Tensor[(2, 4, 14), float32] */;
    %734 = %731.0;
    %735 = %732.0;
    (%733, %734, %735)
  };
  %736(%var_5757) /* ty=(Tensor[(2, 4, 14), float32], Tensor[(10, 12, 9), float64], Tensor[(13, 13, 12), float64]) */
}

def @func_3527() -> Tensor[(15, 7, 14), bool] {
  %737 = fn () -> Tensor[(15, 7, 14), bool] {
    @func_2974() /* ty=Tensor[(15, 7, 14), bool] */
  };
  %737() /* ty=Tensor[(15, 7, 14), bool] */
}

def @func_7511() -> (Tensor[(15, 7, 14), bool],) {
  %739 = fn () -> (Tensor[(15, 7, 14), bool],) {
    %738 = @func_4323() /* ty=Tensor[(15, 7, 14), bool] */;
    (%738,)
  };
  %739() /* ty=(Tensor[(15, 7, 14), bool],) */
}

def @func_3723() -> (Tensor[(14, 15, 14), int32],) {
  @func_3721() /* ty=(Tensor[(14, 15, 14), int32],) */
}

def @func_8299() -> Tensor[(15, 7, 14), bool] {
  @func_8297() /* ty=Tensor[(15, 7, 14), bool] */
}

def @func_8475() -> Tensor[(15, 7, 14), bool] {
  @func_8473() /* ty=Tensor[(15, 7, 14), bool] */
}

def @func_3377() -> Tensor[(15, 7, 14), bool] {
  %740 = @func_2878() /* ty=(Tensor[(15, 7, 14), bool],) */;
  %740.0
}

def @func_2230() -> (Tensor[(15, 7, 14), bool],) {
  %743 = fn () -> (Tensor[(15, 7, 14), bool],) {
    %741 = @func_1438() /* ty=(Tensor[(15, 7, 14), bool],) */;
    %742 = %741.0;
    (%742,)
  };
  %743() /* ty=(Tensor[(15, 7, 14), bool],) */
}

def @func_301(%var_299: Tensor[(10, 13, 14), float32], %var_300: Tensor[(10, 13, 14), float32]) -> Tensor[(10, 13, 14), float32] {
  @func_297(%var_299, %var_300) /* ty=Tensor[(10, 13, 14), float32] */
}

def @func_3296() -> (Tensor[(14, 15, 14), int32], Tensor[(15, 7, 14), bool]) {
  %747 = fn () -> (Tensor[(14, 15, 14), int32], Tensor[(15, 7, 14), bool]) {
    %744 = @func_3191() /* ty=(Tensor[(15, 7, 14), bool],) */;
    %745 = @func_1680() /* ty=Tensor[(14, 15, 14), int32] */;
    %746 = %744.0;
    (%745, %746)
  };
  %747() /* ty=(Tensor[(14, 15, 14), int32], Tensor[(15, 7, 14), bool]) */
}

def @func_1438() -> (Tensor[(15, 7, 14), bool],) {
  %748 = @func_1313() /* ty=Tensor[(15, 7, 14), bool] */;
  (%748,)
}

def @func_6998() -> Tensor[(15, 7, 14), float64] {
  %749 = @func_5382() /* ty=(Tensor[(15, 7, 14), float64],) */;
  %749.0
}

def @func_450(%var_441: Tensor[(14, 2, 4), int64]) -> (Tensor[(14, 2, 4), int64], Tensor[(14, 2, 4), bool]) {
  %750 = cast(%var_441, dtype="int64") /* ty=Tensor[(14, 2, 4), int64] */;
  %751 = shape_of(meta[relay.Constant][58] /* ty=Tensor[(14, 2, 4), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %752 = cast(meta[relay.Constant][58] /* ty=Tensor[(14, 2, 4), int64] */, dtype="int64") /* ty=Tensor[(14, 2, 4), int64] */;
  %753 = dyn.reshape(%750, %751, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %754 = cast(%var_441, dtype="bool") /* ty=Tensor[(14, 2, 4), bool] */;
  %755 = shape_of(meta[relay.Constant][58] /* ty=Tensor[(14, 2, 4), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %756 = cast(meta[relay.Constant][58] /* ty=Tensor[(14, 2, 4), int64] */, dtype="bool") /* ty=Tensor[(14, 2, 4), bool] */;
  %757 = dyn.reshape(%754, %755, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %758 = right_shift(%752, %753) /* ty=Tensor[(14, 2, 4), int64] */;
  %759 = not_equal(%756, %757) /* ty=Tensor[(14, 2, 4), bool] */;
  (%758, %759)
}

def @func_3192() -> (Tensor[(15, 7, 14), bool],) {
  %761 = fn () -> (Tensor[(15, 7, 14), bool],) {
    %760 = @func_3057() /* ty=Tensor[(15, 7, 14), bool] */;
    (%760,)
  };
  %761() /* ty=(Tensor[(15, 7, 14), bool],) */
}

def @func_7714() -> Tensor[(15, 7, 14), bool] {
  %762 = fn () -> Tensor[(15, 7, 14), bool] {
    @func_4323() /* ty=Tensor[(15, 7, 14), bool] */
  };
  %762() /* ty=Tensor[(15, 7, 14), bool] */
}

def @func_6155() -> (Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), bool]) {
  %763 = @func_2878() /* ty=(Tensor[(15, 7, 14), bool],) */;
  %764 = @func_2878() /* ty=(Tensor[(15, 7, 14), bool],) */;
  %765 = %763.0;
  %766 = %764.0;
  (%765, %766)
}

def @func_5344() -> (Tensor[(9, 11, 6), int32], Tensor[(15, 7, 14), bool]) {
  @func_5342() /* ty=(Tensor[(9, 11, 6), int32], Tensor[(15, 7, 14), bool]) */
}

def @func_1475() -> Tensor[(15, 7, 14), bool] {
  @func_1473() /* ty=Tensor[(15, 7, 14), bool] */
}

def @func_6710() -> Tensor[(15, 7, 14), bool] {
  %767 = fn () -> Tensor[(15, 7, 14), bool] {
    @func_1313() /* ty=Tensor[(15, 7, 14), bool] */
  };
  %767() /* ty=Tensor[(15, 7, 14), bool] */
}

def @func_5692() -> Tensor[(15, 7, 14), bool] {
  %769 = fn () -> Tensor[(15, 7, 14), bool] {
    %768 = @func_2878() /* ty=(Tensor[(15, 7, 14), bool],) */;
    %768.0
  };
  %769() /* ty=Tensor[(15, 7, 14), bool] */
}

def @func_7310(%var_7307: Tensor[(14, 12, 2), bool], %var_7308: Tensor[(154, 1), float32], %var_7309: Tensor[(112), int64]) -> (Tensor[(14, 12, 2), bool], Tensor[(15, 7, 14), bool], Tensor[(112), int64], Tensor[(100), int16], Tensor[(154, 112), uint64], int16, int16) {
  @func_7305(%var_7307, %var_7308, %var_7309) /* ty=(Tensor[(14, 12, 2), bool], Tensor[(15, 7, 14), bool], Tensor[(112), int64], Tensor[(100), int16], Tensor[(154, 112), uint64], int16, int16) */
}

def @func_3101(%var_3099: Tensor[(8, 12, 13), uint16], %var_3100: Tensor[(8, 12, 13), uint16]) -> Tensor[(8, 12, 13), bool] {
  %774 = fn (%var_3087: Tensor[(8, 12, 13), uint16], %var_3088: Tensor[(8, 12, 13), uint16]) -> Tensor[(8, 12, 13), bool] {
    %770 = cast(%var_3088, dtype="bool") /* ty=Tensor[(8, 12, 13), bool] */;
    %771 = shape_of(%var_3087, dtype="int32") /* ty=Tensor[(3), int32] */;
    %772 = cast(%var_3087, dtype="bool") /* ty=Tensor[(8, 12, 13), bool] */;
    %773 = dyn.reshape(%770, %771, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    greater(%772, %773) /* ty=Tensor[(8, 12, 13), bool] */
  };
  %774(%var_3099, %var_3100) /* ty=Tensor[(8, 12, 13), bool] */
}

def @func_6262() -> Tensor[(15, 7, 14), float32] {
  %776 = fn () -> Tensor[(15, 7, 14), float32] {
    %775 = @func_1565() /* ty=(Tensor[(15, 7, 14), float32],) */;
    %775.0
  };
  %776() /* ty=Tensor[(15, 7, 14), float32] */
}

def @func_4403() -> (Tensor[(15, 7, 14), float32],) {
  %778 = fn () -> (Tensor[(15, 7, 14), float32],) {
    %777 = @func_1337() /* ty=Tensor[(15, 7, 14), float32] */;
    (%777,)
  };
  %778() /* ty=(Tensor[(15, 7, 14), float32],) */
}

def @func_6422(%var_6420: Tensor[(60, 2), int32]) -> (Tensor[(15, 7, 14), float32], Tensor[(5, 3, 8), bool], Tensor[(60, 2), int32]) {
  %779 = cast(%var_6420, dtype="int32") /* ty=Tensor[(60, 2), int32] */;
  %780 = reshape(%779, newshape=[5, 3, 8]) /* ty=Tensor[(5, 3, 8), int32] */;
  %781 = @func_2413(%780) /* ty=(Tensor[(5, 3, 8), bool], Tensor[(5, 3, 8), float64]) */;
  %782 = @func_6261() /* ty=Tensor[(15, 7, 14), float32] */;
  %783 = %781.0;
  (%782, %783, %var_6420)
}

def @func_5821() -> (Tensor[(14, 15, 14), int32],) {
  @func_5819() /* ty=(Tensor[(14, 15, 14), int32],) */
}

def @func_4958(%var_4957: Tensor[(231), int16]) -> (Tensor[(15, 7, 14), bool], Tensor[(100), int16], Tensor[(7, 3, 11), int16], Tensor[(231), int16]) {
  %794 = fn (%var_4936: Tensor[(231), int16]) -> (Tensor[(15, 7, 14), bool], Tensor[(100), int16], Tensor[(7, 3, 11), int16], Tensor[(231), int16]) {
    %784 = @func_4092() /* ty=(Tensor[(15, 7, 14), bool],) */;
    %785 = @func_4385() /* ty=(Tensor[(100), int16], Tensor[(8, 2, 2), float64], Tensor[(32), float32]) */;
    %786 = cast(%var_4936, dtype="int16") /* ty=Tensor[(231), int16] */;
    %787 = cast(%var_4936, dtype="int16") /* ty=Tensor[(231), int16] */;
    %788 = reshape(%786, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), int16] */;
    %789 = reshape(%787, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), int16] */;
    %790 = @func_3640(%788, %789) /* ty=(Tensor[(7, 3, 11), int16],) */;
    %791 = %784.0;
    %792 = %785.0;
    %793 = %790.0;
    (%791, %792, %793, %var_4936)
  };
  %794(%var_4957) /* ty=(Tensor[(15, 7, 14), bool], Tensor[(100), int16], Tensor[(7, 3, 11), int16], Tensor[(231), int16]) */
}

def @func_3207() -> Tensor[(15, 7, 14), bool] {
  @func_3205() /* ty=Tensor[(15, 7, 14), bool] */
}

def @func_3128(%var_3111: Tensor[(14, 15, 14), int32], %var_3123: Tensor[(14, 15, 14), uint16]) -> Tensor[(14, 15, 14), int32] {
  %795 = @func_1680() /* ty=Tensor[(14, 15, 14), int32] */;
  %796 = cast(%var_3111, dtype="uint16") /* ty=Tensor[(14, 15, 14), uint16] */;
  %797 = shape_of(%795, dtype="int32") /* ty=Tensor[(3), int32] */;
  %798 = cast(%795, dtype="uint16") /* ty=Tensor[(14, 15, 14), uint16] */;
  %799 = dyn.reshape(%796, %797, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %800 = minimum(%798, %799) /* ty=Tensor[(14, 15, 14), uint16] */;
  %801 = cast(%var_3123, dtype="int32") /* ty=Tensor[(14, 15, 14), int32] */;
  %802 = shape_of(%800, dtype="int32") /* ty=Tensor[(3), int32] */;
  %803 = cast(%800, dtype="int32") /* ty=Tensor[(14, 15, 14), int32] */;
  %804 = dyn.reshape(%801, %802, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  right_shift(%803, %804) /* ty=Tensor[(14, 15, 14), int32] */
}

def @func_2092(%var_2088: float64, %var_2089: Tensor[(8, 2, 13), float64], %var_2090: Tensor[(1210), uint32], %var_2091: Tensor[(1210), float64]) -> (Tensor[(8, 2, 13), bool], Tensor[(15, 7, 14), bool], Tensor[(1210), bool]) {
  %819 = fn (%var_2058: float64, %var_2059: Tensor[(8, 2, 13), float64], %var_2067: Tensor[(1210), uint32], %var_2073: Tensor[(1210), float64]) -> (Tensor[(8, 2, 13), bool], Tensor[(15, 7, 14), bool], Tensor[(1210), bool]) {
    %805 = cast(%var_2058, dtype="bool") /* ty=bool */;
    %806 = cast(%var_2059, dtype="bool") /* ty=Tensor[(8, 2, 13), bool] */;
    %807 = cast(%var_2067, dtype="uint32") /* ty=Tensor[(1210), uint32] */;
    %808 = reshape(%807, newshape=[605, 2]) /* ty=Tensor[(605, 2), uint32] */;
    %809 = @func_2026(%808) /* ty=(Tensor[(15, 7, 14), bool], Tensor[(11, 10, 11), uint32], Tensor[(605, 2), uint32]) */;
    %810 = cast(%var_2067, dtype="float64") /* ty=Tensor[(1210), float64] */;
    %811 = cosh(%810) /* ty=Tensor[(1210), float64] */;
    %812 = cast(%var_2073, dtype="bool") /* ty=Tensor[(1210), bool] */;
    %813 = shape_of(%811, dtype="int32") /* ty=Tensor[(1), int32] */;
    %814 = cast(%811, dtype="bool") /* ty=Tensor[(1210), bool] */;
    %815 = dyn.reshape(%812, %813, newshape=[]) /* ty=Tensor[(?), bool] */;
    %816 = greater_equal(%805, %806) /* ty=Tensor[(8, 2, 13), bool] */;
    %817 = %809.0;
    %818 = less(%814, %815) /* ty=Tensor[(1210), bool] */;
    (%816, %817, %818)
  };
  %819(%var_2088, %var_2089, %var_2090, %var_2091) /* ty=(Tensor[(8, 2, 13), bool], Tensor[(15, 7, 14), bool], Tensor[(1210), bool]) */
}

def @func_1913(%var_1879: Tensor[(5, 20), int16]) -> (Tensor[(15, 7, 14), bool], Tensor[(100), int16], Tensor[(154), float32], Tensor[(5, 20), int16], Tensor[(112), int64], Tensor[(7, 2, 11), float32], Tensor[(100), int16], Tensor[(15, 7, 14), float32]) {
  %820 = @func_1438() /* ty=(Tensor[(15, 7, 14), bool],) */;
  %821 = cast(meta[relay.Constant][59] /* ty=Tensor[(154), float32] */, dtype="float32") /* ty=Tensor[(154), float32] */;
  %822 = cast(%var_1879, dtype="int16") /* ty=Tensor[(5, 20), int16] */;
  %823 = cast(meta[relay.Constant][60] /* ty=Tensor[(112), int64] */, dtype="int64") /* ty=Tensor[(112), int64] */;
  %824 = reshape(%821, newshape=[7, 2, 11]) /* ty=Tensor[(7, 2, 11), float32] */;
  %825 = reshape(%822, newshape=[100]) /* ty=Tensor[(100), int16] */;
  %826 = reshape(%823, newshape=[112]) /* ty=Tensor[(112), int64] */;
  %827 = @func_535(%824, %825, %826) /* ty=(Tensor[(7, 2, 11), float32], Tensor[(112), int64], Tensor[(50), int16], Tensor[(100), int16], Tensor[(112), int64], Tensor[(14, 2, 4), bool]) */;
  %828 = cast(meta[relay.Constant][59] /* ty=Tensor[(154), float32] */, dtype="float32") /* ty=Tensor[(154), float32] */;
  %829 = %827.3;
  %830 = cast(%829, dtype="int16") /* ty=Tensor[(100), int16] */;
  %831 = cast(meta[relay.Constant][60] /* ty=Tensor[(112), int64] */, dtype="int64") /* ty=Tensor[(112), int64] */;
  %832 = reshape(%828, newshape=[7, 2, 11]) /* ty=Tensor[(7, 2, 11), float32] */;
  %833 = reshape(%830, newshape=[100]) /* ty=Tensor[(100), int16] */;
  %834 = reshape(%831, newshape=[112]) /* ty=Tensor[(112), int64] */;
  %835 = @func_535(%832, %833, %834) /* ty=(Tensor[(7, 2, 11), float32], Tensor[(112), int64], Tensor[(50), int16], Tensor[(100), int16], Tensor[(112), int64], Tensor[(14, 2, 4), bool]) */;
  %836 = cast(%829, dtype="int16") /* ty=Tensor[(100), int16] */;
  %837 = reshape(%836, newshape=[100]) /* ty=Tensor[(100), int16] */;
  %838 = @func_1796(%837) /* ty=(Tensor[(15, 7, 14), bool], Tensor[(14, 2, 4), bool], Tensor[(154), float32], Tensor[(100), int16], Tensor[(112), int64], Tensor[(15, 7, 14), float32]) */;
  %839 = %820.0;
  %840 = %835.0;
  %841 = %838.3;
  %842 = @func_1406() /* ty=Tensor[(15, 7, 14), float32] */;
  (%839, %829, meta[relay.Constant][59] /* ty=Tensor[(154), float32] */, %var_1879, meta[relay.Constant][60] /* ty=Tensor[(112), int64] */, %840, %841, %842)
}

def @func_4323() -> Tensor[(15, 7, 14), bool] {
  %843 = @func_1438() /* ty=(Tensor[(15, 7, 14), bool],) */;
  %843.0
}

def @func_5047() -> (Tensor[(10, 12, 9), float32],) {
  @func_5045() /* ty=(Tensor[(10, 12, 9), float32],) */
}

def @func_4595() -> Tensor[(15, 7, 14), bool] {
  %844 = @func_4092() /* ty=(Tensor[(15, 7, 14), bool],) */;
  %844.0
}

def @func_3803() -> Tensor[(14, 15, 14), int32] {
  @func_1680() /* ty=Tensor[(14, 15, 14), int32] */
}

def @func_4770() -> Tensor[(14, 15, 14), int32] {
  %845 = @func_4185() /* ty=(Tensor[(15, 7, 14), bool], Tensor[(14, 15, 14), int32], Tensor[(14, 15, 14), int32]) */;
  %845.2
}

def @func_539(%var_536: Tensor[(7, 2, 11), float32], %var_537: Tensor[(100), int16], %var_538: Tensor[(112), int64]) -> (Tensor[(7, 2, 11), float32], Tensor[(112), int64], Tensor[(50), int16], Tensor[(100), int16], Tensor[(112), int64], Tensor[(14, 2, 4), bool]) {
  %864 = fn (%var_506: Tensor[(7, 2, 11), float32], %var_526: Tensor[(100), int16], %var_527: Tensor[(112), int64]) -> (Tensor[(7, 2, 11), float32], Tensor[(112), int64], Tensor[(50), int16], Tensor[(100), int16], Tensor[(112), int64], Tensor[(14, 2, 4), bool]) {
    %846 = cast(%var_506, dtype="float32") /* ty=Tensor[(7, 2, 11), float32] */;
    %847 = cast(meta[relay.Constant][61] /* ty=Tensor[(50), int16] */, dtype="int16") /* ty=Tensor[(50), int16] */;
    %848 = cast(%var_526, dtype="int16") /* ty=Tensor[(100), int16] */;
    %849 = cast(%var_527, dtype="int64") /* ty=Tensor[(112), int64] */;
    %850 = reshape(%847, newshape=[5, 1, 10]) /* ty=Tensor[(5, 1, 10), int16] */;
    %851 = reshape(%848, newshape=[5, 2, 10]) /* ty=Tensor[(5, 2, 10), int16] */;
    %852 = reshape(%849, newshape=[112]) /* ty=Tensor[(112), int64] */;
    %853 = @func_476(%850, %851, %852) /* ty=(Tensor[(5, 2, 10), bool], Tensor[(14, 2, 4), bool], Tensor[(112), int64]) */;
    %854 = cast(meta[relay.Constant][61] /* ty=Tensor[(50), int16] */, dtype="int16") /* ty=Tensor[(50), int16] */;
    %855 = cast(%var_526, dtype="int16") /* ty=Tensor[(100), int16] */;
    %856 = cast(%var_527, dtype="int64") /* ty=Tensor[(112), int64] */;
    %857 = reshape(%854, newshape=[5, 1, 10]) /* ty=Tensor[(5, 1, 10), int16] */;
    %858 = reshape(%855, newshape=[5, 2, 10]) /* ty=Tensor[(5, 2, 10), int16] */;
    %859 = reshape(%856, newshape=[112]) /* ty=Tensor[(112), int64] */;
    %860 = @func_476(%857, %858, %859) /* ty=(Tensor[(5, 2, 10), bool], Tensor[(14, 2, 4), bool], Tensor[(112), int64]) */;
    %861 = atanh(%846) /* ty=Tensor[(7, 2, 11), float32] */;
    %862 = %853.2;
    %863 = %860.1;
    (%861, %862, meta[relay.Constant][61] /* ty=Tensor[(50), int16] */, %var_526, %var_527, %863)
  };
  %864(%var_536, %var_537, %var_538) /* ty=(Tensor[(7, 2, 11), float32], Tensor[(112), int64], Tensor[(50), int16], Tensor[(100), int16], Tensor[(112), int64], Tensor[(14, 2, 4), bool]) */
}

def @func_4670(%var_4669: Tensor[(231), int16]) -> (Tensor[(15, 7, 14), bool], Tensor[(7, 3, 11), int16], Tensor[(231), int16], Tensor[(7, 3, 11), float64]) {
  %880 = fn (%var_4649: Tensor[(231), int16]) -> (Tensor[(15, 7, 14), bool], Tensor[(7, 3, 11), int16], Tensor[(231), int16], Tensor[(7, 3, 11), float64]) {
    %865 = cast(%var_4649, dtype="int16") /* ty=Tensor[(231), int16] */;
    %866 = cast(%var_4649, dtype="int16") /* ty=Tensor[(231), int16] */;
    %867 = reshape(%865, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), int16] */;
    %868 = reshape(%866, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), int16] */;
    %869 = @func_3640(%867, %868) /* ty=(Tensor[(7, 3, 11), int16],) */;
    %870 = %869.0;
    %871 = cast(%870, dtype="int16") /* ty=Tensor[(7, 3, 11), int16] */;
    %872 = cast(%870, dtype="int16") /* ty=Tensor[(7, 3, 11), int16] */;
    %873 = reshape(%871, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), int16] */;
    %874 = reshape(%872, newshape=[7, 3, 11]) /* ty=Tensor[(7, 3, 11), int16] */;
    %875 = @func_3640(%873, %874) /* ty=(Tensor[(7, 3, 11), int16],) */;
    %876 = %875.0;
    %877 = cast(%876, dtype="float64") /* ty=Tensor[(7, 3, 11), float64] */;
    %878 = @func_3205() /* ty=Tensor[(15, 7, 14), bool] */;
    %879 = sinh(%877) /* ty=Tensor[(7, 3, 11), float64] */;
    (%878, %870, %var_4649, %879)
  };
  %880(%var_4669) /* ty=(Tensor[(15, 7, 14), bool], Tensor[(7, 3, 11), int16], Tensor[(231), int16], Tensor[(7, 3, 11), float64]) */
}

def @func_6434() -> Tensor[(14, 15, 14), int32] {
  %881 = fn () -> Tensor[(14, 15, 14), int32] {
    @func_4770() /* ty=Tensor[(14, 15, 14), int32] */
  };
  %881() /* ty=Tensor[(14, 15, 14), int32] */
}

def @func_5215() -> (Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), bool]) {
  %885 = fn () -> (Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), bool]) {
    %882 = @func_4092() /* ty=(Tensor[(15, 7, 14), bool],) */;
    %883 = %882.0;
    %884 = @func_3170() /* ty=Tensor[(15, 7, 14), bool] */;
    (%883, %884)
  };
  %885() /* ty=(Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), bool]) */
}

def @func_1852(%var_1847: Tensor[(50), int16], %var_1848: Tensor[(50, 2), int16]) -> (Tensor[(15, 7, 14), float32], Tensor[(14, 15, 14), float64], Tensor[(5, 2, 10), bool], Tensor[(50), int16], Tensor[(50, 2), int16], Tensor[(112, 1), int64]) {
  %886 = @func_1565() /* ty=(Tensor[(15, 7, 14), float32],) */;
  %887 = @func_1680() /* ty=Tensor[(14, 15, 14), int32] */;
  %888 = cast(%887, dtype="float64") /* ty=Tensor[(14, 15, 14), float64] */;
  %889 = cast(%var_1847, dtype="int16") /* ty=Tensor[(50), int16] */;
  %890 = cast(%var_1848, dtype="int16") /* ty=Tensor[(50, 2), int16] */;
  %891 = cast(meta[relay.Constant][62] /* ty=Tensor[(112, 1), int64] */, dtype="int64") /* ty=Tensor[(112, 1), int64] */;
  %892 = reshape(%889, newshape=[5, 1, 10]) /* ty=Tensor[(5, 1, 10), int16] */;
  %893 = reshape(%890, newshape=[5, 2, 10]) /* ty=Tensor[(5, 2, 10), int16] */;
  %894 = reshape(%891, newshape=[112]) /* ty=Tensor[(112), int64] */;
  %895 = @func_476(%892, %893, %894) /* ty=(Tensor[(5, 2, 10), bool], Tensor[(14, 2, 4), bool], Tensor[(112), int64]) */;
  %896 = %886.0;
  %897 = cos(%888) /* ty=Tensor[(14, 15, 14), float64] */;
  %898 = %895.0;
  (%896, %897, %898, %var_1847, %var_1848, meta[relay.Constant][62] /* ty=Tensor[(112, 1), int64] */)
}

def @func_7242(%var_7234: Tensor[(231), int16]) -> (Tensor[(14, 15, 14), int32], Tensor[(15, 7, 14), bool], Tensor[(231), int16], Tensor[(231), int16]) {
  %899 = @func_5852() /* ty=(Tensor[(14, 15, 14), int32],) */;
  %900 = @func_3085() /* ty=(Tensor[(10, 12, 9), float64], Tensor[(15, 7, 14), bool]) */;
  %901 = cast(%var_7234, dtype="int16") /* ty=Tensor[(231), int16] */;
  %902 = reshape(%901, newshape=[231]) /* ty=Tensor[(231), int16] */;
  %903 = @func_4956(%902) /* ty=(Tensor[(15, 7, 14), bool], Tensor[(100), int16], Tensor[(7, 3, 11), int16], Tensor[(231), int16]) */;
  %904 = %899.0;
  %905 = %900.1;
  %906 = %903.3;
  (%904, %905, %906, %var_7234)
}

def @func_8395() -> (Tensor[(14, 15, 14), int32],) {
  %909 = fn () -> (Tensor[(14, 15, 14), int32],) {
    %907 = @func_6781() /* ty=(Tensor[(14, 15, 14), int32],) */;
    %908 = %907.0;
    (%908,)
  };
  %909() /* ty=(Tensor[(14, 15, 14), int32],) */
}

def @func_1695() -> (Tensor[(10, 12, 9), float64],) {
  @func_1693() /* ty=(Tensor[(10, 12, 9), float64],) */
}

def @func_8038(%var_8037: Tensor[(13, 13, 12), float64]) -> (Tensor[(13, 13, 12), bool],) {
  %917 = fn (%var_8031: Tensor[(13, 13, 12), float64]) -> (Tensor[(13, 13, 12), bool],) {
    %910 = @func_4878() /* ty=(Tensor[(13, 13, 12), float64],) */;
    %911 = %910.0;
    %912 = cast(%var_8031, dtype="bool") /* ty=Tensor[(13, 13, 12), bool] */;
    %913 = shape_of(%911, dtype="int32") /* ty=Tensor[(3), int32] */;
    %914 = cast(%911, dtype="bool") /* ty=Tensor[(13, 13, 12), bool] */;
    %915 = dyn.reshape(%912, %913, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %916 = greater_equal(%914, %915) /* ty=Tensor[(13, 13, 12), bool] */;
    (%916,)
  };
  %917(%var_8037) /* ty=(Tensor[(13, 13, 12), bool],) */
}

def @func_2879() -> (Tensor[(15, 7, 14), bool],) {
  %919 = fn () -> (Tensor[(15, 7, 14), bool],) {
    %918 = @func_1313() /* ty=Tensor[(15, 7, 14), bool] */;
    (%918,)
  };
  %919() /* ty=(Tensor[(15, 7, 14), bool],) */
}

def @func_4070() -> (Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), bool]) {
  @func_4068() /* ty=(Tensor[(15, 7, 14), bool], Tensor[(15, 7, 14), bool]) */
}

def @func_4325() -> Tensor[(15, 7, 14), bool] {
  @func_4323() /* ty=Tensor[(15, 7, 14), bool] */
}

def @func_3037(%var_3034: Tensor[(2, 2, 2), float32], %var_3035: Tensor[(100), int16], %var_3036: Tensor[(112), int64]) -> (Tensor[(2, 2, 2), float64], Tensor[(100), int16], Tensor[(154), float32], Tensor[(100), int16], Tensor[(112), int64]) {
  %932 = fn (%var_2995: Tensor[(2, 2, 2), float32], %var_3025: Tensor[(100), int16], %var_3026: Tensor[(112), int64]) -> (Tensor[(2, 2, 2), float64], Tensor[(100), int16], Tensor[(154), float32], Tensor[(100), int16], Tensor[(112), int64]) {
    %920 = cast(%var_2995, dtype="float32") /* ty=Tensor[(2, 2, 2), float32] */;
    %921 = exp(%920) /* ty=Tensor[(2, 2, 2), float32] */;
    %922 = cast(%921, dtype="float64") /* ty=Tensor[(2, 2, 2), float64] */;
    %923 = cast(meta[relay.Constant][63] /* ty=Tensor[(154), float32] */, dtype="float32") /* ty=Tensor[(154), float32] */;
    %924 = cast(%var_3025, dtype="int16") /* ty=Tensor[(100), int16] */;
    %925 = cast(%var_3026, dtype="int64") /* ty=Tensor[(112), int64] */;
    %926 = reshape(%923, newshape=[7, 2, 11]) /* ty=Tensor[(7, 2, 11), float32] */;
    %927 = reshape(%924, newshape=[100]) /* ty=Tensor[(100), int16] */;
    %928 = reshape(%925, newshape=[112]) /* ty=Tensor[(112), int64] */;
    %929 = @func_535(%926, %927, %928) /* ty=(Tensor[(7, 2, 11), float32], Tensor[(112), int64], Tensor[(50), int16], Tensor[(100), int16], Tensor[(112), int64], Tensor[(14, 2, 4), bool]) */;
    %930 = log10(%922) /* ty=Tensor[(2, 2, 2), float64] */;
    %931 = %929.3;
    (%930, %931, meta[relay.Constant][63] /* ty=Tensor[(154), float32] */, %var_3025, %var_3026)
  };
  %932(%var_3034, %var_3035, %var_3036) /* ty=(Tensor[(2, 2, 2), float64], Tensor[(100), int16], Tensor[(154), float32], Tensor[(100), int16], Tensor[(112), int64]) */
}

def @func_8000(%var_7995: Tensor[(10, 12, 9), float64]) -> Tensor[(10, 12, 9), float64] {
  %933 = @func_4796() /* ty=(Tensor[(10, 12, 9), float64],) */;
  %934 = %933.0;
  %935 = cast(%var_7995, dtype="float64") /* ty=Tensor[(10, 12, 9), float64] */;
  %936 = shape_of(%934, dtype="int32") /* ty=Tensor[(3), int32] */;
  %937 = cast(%934, dtype="float64") /* ty=Tensor[(10, 12, 9), float64] */;
  %938 = dyn.reshape(%935, %936, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_mod(%937, %938) /* ty=Tensor[(10, 12, 9), float64] */
}

def @func_4538() -> (Tensor[(15, 7, 14), bool], Tensor[(7, 10, 2), float64], Tensor[(15, 7, 14), bool]) {
  %944 = fn () -> (Tensor[(15, 7, 14), bool], Tensor[(7, 10, 2), float64], Tensor[(15, 7, 14), bool]) {
    %939 = @func_3442() /* ty=(Tensor[(7, 10, 2), float64],) */;
    %940 = @func_3085() /* ty=(Tensor[(10, 12, 9), float64], Tensor[(15, 7, 14), bool]) */;
    %941 = @func_2974() /* ty=Tensor[(15, 7, 14), bool] */;
    %942 = %939.0;
    %943 = %940.1;
    (%941, %942, %943)
  };
  %944() /* ty=(Tensor[(15, 7, 14), bool], Tensor[(7, 10, 2), float64], Tensor[(15, 7, 14), bool]) */
}

def @func_6781() -> (Tensor[(14, 15, 14), int32],) {
  %945 = @func_5852() /* ty=(Tensor[(14, 15, 14), int32],) */;
  %946 = %945.0;
  (%946,)
}

def @func_5342() -> (Tensor[(9, 11, 6), int32], Tensor[(15, 7, 14), bool]) {
  %947 = cast(meta[relay.Constant][64] /* ty=Tensor[(9, 11, 6), float64] */, dtype="float64") /* ty=Tensor[(9, 11, 6), float64] */;
  %948 = exp(%947) /* ty=Tensor[(9, 11, 6), float64] */;
  %949 = cast(meta[relay.Constant][64] /* ty=Tensor[(9, 11, 6), float64] */, dtype="int32") /* ty=Tensor[(9, 11, 6), int32] */;
  %950 = shape_of(%948, dtype="int32") /* ty=Tensor[(3), int32] */;
  %951 = cast(%948, dtype="int32") /* ty=Tensor[(9, 11, 6), int32] */;
  %952 = dyn.reshape(%949, %950, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %953 = @func_3191() /* ty=(Tensor[(15, 7, 14), bool],) */;
  %954 = left_shift(%951, %952) /* ty=Tensor[(9, 11, 6), int32] */;
  %955 = %953.0;
  (%954, %955)
}

def @func_2976() -> Tensor[(15, 7, 14), bool] {
  @func_2974() /* ty=Tensor[(15, 7, 14), bool] */
}

def @func_6195() -> Tensor[(14, 15, 14), int32] {
  %956 = fn () -> Tensor[(14, 15, 14), int32] {
    @func_1680() /* ty=Tensor[(14, 15, 14), int32] */
  };
  %956() /* ty=Tensor[(14, 15, 14), int32] */
}

def @func_3816() -> Tensor[(14, 15, 14), int32] {
  @func_3814() /* ty=Tensor[(14, 15, 14), int32] */
}

def @func_4570(%var_4568: Tensor[(5, 4, 14), float64], %var_4569: Tensor[(5, 4, 14), float64]) -> (Tensor[(5, 4, 14), float64], Tensor[(100), int16], Tensor[(5, 20), int16]) {
  %966 = fn (%var_4548: Tensor[(5, 4, 14), float64], %var_4549: Tensor[(5, 4, 14), float64]) -> (Tensor[(5, 4, 14), float64], Tensor[(100), int16], Tensor[(5, 20), int16]) {
    %957 = cast(%var_4549, dtype="float64") /* ty=Tensor[(5, 4, 14), float64] */;
    %958 = shape_of(%var_4548, dtype="int32") /* ty=Tensor[(3), int32] */;
    %959 = cast(%var_4548, dtype="float64") /* ty=Tensor[(5, 4, 14), float64] */;
    %960 = dyn.reshape(%957, %958, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %961 = cast(meta[relay.Constant][65] /* ty=Tensor[(5, 20), int16] */, dtype="int16") /* ty=Tensor[(5, 20), int16] */;
    %962 = reshape(%961, newshape=[5, 20]) /* ty=Tensor[(5, 20), int16] */;
    %963 = @func_1913(%962) /* ty=(Tensor[(15, 7, 14), bool], Tensor[(100), int16], Tensor[(154), float32], Tensor[(5, 20), int16], Tensor[(112), int64], Tensor[(7, 2, 11), float32], Tensor[(100), int16], Tensor[(15, 7, 14), float32]) */;
    %964 = divide(%959, %960) /* ty=Tensor[(5, 4, 14), float64] */;
    %965 = %963.6;
    (%964, %965, meta[relay.Constant][65] /* ty=Tensor[(5, 20), int16] */)
  };
  %966(%var_4568, %var_4569) /* ty=(Tensor[(5, 4, 14), float64], Tensor[(100), int16], Tensor[(5, 20), int16]) */
}

def @func_5430() -> Tensor[(15, 7, 14), bool] {
  @func_5428() /* ty=Tensor[(15, 7, 14), bool] */
}

def @func_5045() -> (Tensor[(10, 12, 9), float32],) {
  %967 = @func_4796() /* ty=(Tensor[(10, 12, 9), float64],) */;
  %968 = %967.0;
  %969 = cast(%968, dtype="float32") /* ty=Tensor[(10, 12, 9), float32] */;
  %970 = sin(%969) /* ty=Tensor[(10, 12, 9), float32] */;
  (%970,)
}

def @func_8260() -> (Tensor[(10, 12, 9), float64], Tensor[(14, 2, 4), bool], Tensor[(1, 100), float32]) {
  @func_8258() /* ty=(Tensor[(10, 12, 9), float64], Tensor[(14, 2, 4), bool], Tensor[(1, 100), float32]) */
}

def @func_6960() -> (Tensor[(15, 7, 14), bool],) {
  @func_6958() /* ty=(Tensor[(15, 7, 14), bool],) */
}

def @func_4816() -> Tensor[(15, 7, 14), float32] {
  @func_4814() /* ty=Tensor[(15, 7, 14), float32] */
}

def @func_476(%var_463: Tensor[(5, 1, 10), int16], %var_464: Tensor[(5, 2, 10), int16], %var_470: Tensor[(112), int64]) -> (Tensor[(5, 2, 10), bool], Tensor[(14, 2, 4), bool], Tensor[(112), int64]) {
  %971 = cast(%var_463, dtype="bool") /* ty=Tensor[(5, 1, 10), bool] */;
  %972 = cast(%var_464, dtype="bool") /* ty=Tensor[(5, 2, 10), bool] */;
  %973 = cast(%var_470, dtype="int64") /* ty=Tensor[(112), int64] */;
  %974 = reshape(%973, newshape=[14, 2, 4]) /* ty=Tensor[(14, 2, 4), int64] */;
  %975 = @func_450(%974) /* ty=(Tensor[(14, 2, 4), int64], Tensor[(14, 2, 4), bool]) */;
  %976 = not_equal(%971, %972) /* ty=Tensor[(5, 2, 10), bool] */;
  %977 = %975.1;
  (%976, %977, %var_470)
}

def @func_3132(%var_3130: Tensor[(14, 15, 14), int32], %var_3131: Tensor[(14, 15, 14), uint16]) -> Tensor[(14, 15, 14), int32] {
  @func_3128(%var_3130, %var_3131) /* ty=Tensor[(14, 15, 14), int32] */
}

def @func_1093(%var_1031: int16, %var_1032: Tensor[(12, 4, 1), int16], %var_1046: Tensor[(12, 4, 5), bool], %var_1060: Tensor[(154), float32], %var_1061: Tensor[(100), int16], %var_1080: Tensor[(1820), float32]) -> (Tensor[(12, 4, 1), bool], Tensor[(12, 4, 5), uint8], Tensor[(154), float32], Tensor[(100), int16], Tensor[(112), int64], Tensor[(12, 4, 100), uint8], Tensor[(5, 20), int16], Tensor[(1, 80), float32], Tensor[(1820), float32]) {
  %978 = cast(%var_1031, dtype="bool") /* ty=bool */;
  %979 = cast(%var_1032, dtype="bool") /* ty=Tensor[(12, 4, 1), bool] */;
  %980 = cast(%var_1032, dtype="bool") /* ty=Tensor[(12, 4, 1), bool] */;
  %981 = cast(meta[relay.Constant][66] /* ty=Tensor[(12, 4, 5), int16] */, dtype="bool") /* ty=Tensor[(12, 4, 5), bool] */;
  %982 = greater_equal(%980, %981) /* ty=Tensor[(12, 4, 5), bool] */;
  %983 = cast(%var_1046, dtype="uint8") /* ty=Tensor[(12, 4, 5), uint8] */;
  %984 = shape_of(%982, dtype="int32") /* ty=Tensor[(3), int32] */;
  %985 = cast(%982, dtype="uint8") /* ty=Tensor[(12, 4, 5), uint8] */;
  %986 = dyn.reshape(%983, %984, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %987 = cast(%var_1060, dtype="float32") /* ty=Tensor[(154), float32] */;
  %988 = cast(%var_1061, dtype="int16") /* ty=Tensor[(100), int16] */;
  %989 = cast(meta[relay.Constant][67] /* ty=Tensor[(112), int64] */, dtype="int64") /* ty=Tensor[(112), int64] */;
  %990 = reshape(%987, newshape=[7, 2, 11]) /* ty=Tensor[(7, 2, 11), float32] */;
  %991 = reshape(%988, newshape=[100]) /* ty=Tensor[(100), int16] */;
  %992 = reshape(%989, newshape=[112]) /* ty=Tensor[(112), int64] */;
  %993 = @func_535(%990, %991, %992) /* ty=(Tensor[(7, 2, 11), float32], Tensor[(112), int64], Tensor[(50), int16], Tensor[(100), int16], Tensor[(112), int64], Tensor[(14, 2, 4), bool]) */;
  %994 = %993.3;
  %995 = cast(%994, dtype="uint8") /* ty=Tensor[(100), uint8] */;
  %996 = cast(%var_1032, dtype="uint8") /* ty=Tensor[(12, 4, 1), uint8] */;
  %997 = cast(meta[relay.Constant][68] /* ty=Tensor[(1, 80), float32] */, dtype="float32") /* ty=Tensor[(1, 80), float32] */;
  %998 = cast(%var_1061, dtype="int16") /* ty=Tensor[(100), int16] */;
  %999 = cast(%var_1080, dtype="float32") /* ty=Tensor[(1820), float32] */;
  %1000 = reshape(%997, newshape=[16, 1, 5]) /* ty=Tensor[(16, 1, 5), float32] */;
  %1001 = reshape(%998, newshape=[5, 20]) /* ty=Tensor[(5, 20), int16] */;
  %1002 = reshape(%999, newshape=[1820, 1]) /* ty=Tensor[(1820, 1), float32] */;
  %1003 = @func_709(%1000, %1001, %1002) /* ty=(Tensor[(5, 2, 10), bool], Tensor[(5, 10), int16], Tensor[(5, 20), int16], Tensor[(112, 1), int64], Tensor[(16, ?, 5), uint64], Tensor[(16, 1, 5), float32], Tensor[(14, 2, 4), int64], Tensor[(10, 13, 14), float32], Tensor[(1820, 1), float32]) */;
  %1004 = less(%978, %979) /* ty=Tensor[(12, 4, 1), bool] */;
  %1005 = bitwise_or(%985, %986) /* ty=Tensor[(12, 4, 5), uint8] */;
  %1006 = bitwise_or(%995, %996) /* ty=Tensor[(12, 4, 100), uint8] */;
  %1007 = %1003.2;
  (%1004, %1005, %var_1060, %var_1061, meta[relay.Constant][67] /* ty=Tensor[(112), int64] */, %1006, %1007, meta[relay.Constant][68] /* ty=Tensor[(1, 80), float32] */, %var_1080)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen470/build/output.py:2949: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen470/build/output.py:2954: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='cuda')
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen470/build/output.py:2967: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen470/build/output.py:2972: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='cuda')
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen470/build/output.py:2977: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mutated_mod, target='llvm')
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen470/build/output.py:2982: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mutated_mod, target='cuda')

===================================
#[version = "0.0.5"]
def @main() -> (Tensor[(13, 15, 11), float64],) {
  %0 = cast(meta[relay.Constant][0] /* ty=Tensor[(13, 15, 11), float64] */, dtype="float64") /* GeneratedSource */ /* ty=Tensor[(13, 15, 11), float64] */;
  %1 = sigmoid(%0) /* GeneratedSource */ /* ty=Tensor[(13, 15, 11), float64] */;
  (%1,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */

import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_6 = relay.var("var_6", dtype = "bool", shape = (16, 7, 12))#candidate|6|(16, 7, 12)|var|bool
var_7 = relay.var("var_7", dtype = "bool", shape = (16, 7, 12))#candidate|7|(16, 7, 12)|var|bool
bop_8 = relay.logical_and(var_6.astype('bool'), relay.reshape(var_7.astype('bool'), relay.shape_of(var_6))) # shape=(16, 7, 12)
var_15 = relay.var("var_15", dtype = "bool", shape = (16, 7, 12))#candidate|15|(16, 7, 12)|var|bool
bop_16 = relay.add(bop_8.astype('int16'), relay.reshape(var_15.astype('int16'), relay.shape_of(bop_8))) # shape=(16, 7, 12)
bop_19 = relay.bitwise_xor(bop_16.astype('int8'), relay.reshape(var_6.astype('int8'), relay.shape_of(bop_16))) # shape=(16, 7, 12)
output = bop_19
output2 = bop_19
func_24 = relay.Function([var_6,var_7,var_15,], output)
mod['func_24'] = func_24
mod = relay.transform.InferType()(mod)
mutated_mod['func_24'] = func_24
mutated_mod = relay.transform.InferType()(mutated_mod)
func_24_call = mutated_mod.get_global_var('func_24')
var_26 = relay.var("var_26", dtype = "bool", shape = (16, 7, 12))#candidate|26|(16, 7, 12)|var|bool
var_27 = relay.var("var_27", dtype = "bool", shape = (16, 7, 12))#candidate|27|(16, 7, 12)|var|bool
var_28 = relay.var("var_28", dtype = "bool", shape = (16, 7, 12))#candidate|28|(16, 7, 12)|var|bool
call_25 = func_24_call(var_26,var_27,var_28,)
output = call_25
func_29 = relay.Function([var_26,var_27,var_28,], output)
mutated_mod['func_29'] = func_29
mutated_mod = relay.transform.InferType()(mutated_mod)
var_422 = relay.var("var_422", dtype = "float32", shape = (8, 6, 15))#candidate|422|(8, 6, 15)|var|float32
uop_423 = relay.acosh(var_422.astype('float32')) # shape=(8, 6, 15)
output = relay.Tuple([uop_423,])
output2 = relay.Tuple([uop_423,])
func_434 = relay.Function([var_422,], output)
mod['func_434'] = func_434
mod = relay.transform.InferType()(mod)
mutated_mod['func_434'] = func_434
mutated_mod = relay.transform.InferType()(mutated_mod)
var_435 = relay.var("var_435", dtype = "float32", shape = (8, 6, 15))#candidate|435|(8, 6, 15)|var|float32
func_434_call = mutated_mod.get_global_var('func_434')
call_436 = func_434_call(var_435)
output = call_436
func_437 = relay.Function([var_435], output)
mutated_mod['func_437'] = func_437
mutated_mod = relay.transform.InferType()(mutated_mod)
const_665 = relay.const([[[-1.435808,5.181282,-8.642986,3.027699,6.699193,3.347204,1.191497],[-0.940224,9.670076,-7.301369,7.551017,-6.544817,2.528942,8.242586],[7.378380,4.504708,2.690459,-0.142533,-3.163626,8.031165,-1.524373],[-9.535241,8.601463,7.452976,-1.465292,-8.756404,-8.267350,4.471976],[8.742639,9.555068,5.134459,-8.741359,2.377203,-1.616788,5.219153],[9.939169,0.608745,8.389200,-4.348687,5.868060,4.882600,-7.077735],[-4.403514,1.647677,-6.511872,4.807704,7.930637,-6.647573,-3.355157],[-0.498218,6.076178,0.276447,9.446852,6.843708,7.644189,9.825994],[-0.292739,5.982785,3.639742,3.933602,3.659702,8.287182,-9.714574],[5.494905,-9.471580,-1.731252,2.507157,-9.757018,9.920942,-7.482704],[1.152021,3.010281,-0.727923,-3.521512,2.378658,2.023005,-2.268219],[1.605131,7.022670,9.083609,-2.003112,7.828726,-4.300187,-3.743665],[7.427959,-3.163820,-4.974861,-0.039841,-5.254242,-8.937682,-0.370763],[-3.975390,-3.135833,-1.954100,-1.024645,-0.347987,5.969248,-0.867801],[0.277040,8.630705,-7.505757,0.944111,4.108828,7.009041,5.178126],[0.550147,1.248506,-5.921702,1.007149,3.724954,6.558451,-1.167098]],[[1.762444,-1.449845,-6.593514,8.529640,5.087291,4.817055,3.613016],[2.966380,7.005786,-1.121764,-8.459384,-2.947578,2.069653,-1.091338],[8.514322,-4.148846,9.137961,-6.563723,-9.554010,-4.742471,-1.211594],[2.385804,-8.727629,-3.608932,4.110652,7.184400,-6.556782,-6.333831],[3.552013,-6.615581,8.082285,-6.279900,5.678655,-0.093526,-0.207929],[0.372863,1.710793,-2.699493,1.700739,5.898082,-7.723009,6.846411],[-3.971993,-9.545626,-1.494096,8.304059,8.671604,-3.755665,-3.236701],[4.236666,-4.743305,5.944594,0.769268,5.473004,6.805098,5.239632],[2.490645,-7.383360,-1.498053,-1.829741,7.335329,2.612923,9.728774],[4.117916,-7.113107,-9.923296,0.158601,-0.312442,-7.511528,-6.366622],[-0.269916,5.968404,-9.211266,-1.343434,-8.259832,1.153001,-0.828640],[7.061364,-1.868946,0.023047,4.470380,5.033131,8.439555,1.769606],[-6.063138,5.272960,2.940954,-6.552703,-3.450226,8.176868,5.387687],[-4.117538,8.118929,3.323486,-7.923734,-9.781394,5.065561,4.727311],[-4.700605,-9.294276,-2.596502,3.661440,-3.192821,8.527120,-2.261878],[4.939028,5.959851,0.424495,6.169315,-5.696828,1.157481,1.512011]],[[6.681240,-6.640418,9.365118,-6.440582,-2.859627,-3.062680,4.752354],[-8.942287,-6.105177,-6.834926,7.271705,-6.655652,-3.709007,3.690435],[1.428515,-6.902514,7.905952,-5.498052,8.346885,-9.131653,5.706154],[-2.209338,-1.487701,-4.206509,8.475253,-7.908220,4.991807,2.434343],[9.179758,0.362999,-6.255975,1.062524,-3.887191,-0.327222,-0.122461],[-1.294949,0.048793,5.372764,2.398309,-4.428120,-0.620588,4.877818],[0.536198,7.362172,5.860602,-0.191337,5.908186,4.316961,2.067413],[9.031383,-8.690401,9.438753,1.605937,4.234773,9.233060,0.253816],[-4.006537,8.624187,3.026532,0.342800,5.393041,-4.600890,6.714356],[9.315480,-0.741969,0.767554,-4.699082,-7.849856,3.052339,-5.077930],[-2.731013,-8.722588,-1.223792,-4.560694,-3.839265,8.114474,4.496730],[-2.627080,2.492775,-5.745318,2.393915,2.339755,-8.481046,2.273978],[6.451735,-2.155747,5.577819,7.036243,-5.914556,3.011734,1.209401],[9.563878,5.901534,1.625396,8.991384,-9.740531,5.741874,-3.338105],[3.047897,0.715585,5.967657,-0.370709,-0.349056,-0.725994,-1.011054],[-3.692159,-1.934865,-1.583152,5.107837,6.346536,4.427209,1.578305]],[[2.042953,7.216763,8.965144,4.416654,-8.601470,7.235626,4.636820],[-7.614972,-6.813315,2.837803,-7.116421,-7.102219,-0.403490,-9.752777],[1.707372,-6.937956,3.122297,0.069678,1.828424,3.484877,4.359280],[-6.404867,-4.279742,-9.664967,5.346584,-5.075285,6.150534,-1.065895],[-7.304296,-3.252240,-2.283128,-4.456477,-0.247462,4.567085,-3.176453],[6.484609,5.135717,7.791135,-1.589627,-2.226444,2.398860,5.879687],[2.533504,-7.394299,-9.340491,9.103475,-1.733862,-2.143878,-4.841398],[-5.606379,-3.491072,-2.512913,9.437054,-8.007055,6.318529,-9.471519],[1.532025,0.142135,7.941829,-3.947584,-9.748541,-1.035518,8.724060],[1.340905,-5.608006,-5.028147,-2.434473,1.743434,-8.954080,8.326355],[-3.936012,1.617134,-4.103543,9.154264,-0.310422,3.585199,6.086712],[8.746778,2.875554,-4.740243,-3.643461,-5.845760,0.333641,3.405917],[9.001702,4.385630,-2.442545,2.672748,-2.417657,-2.511101,-9.236869],[5.327846,0.566966,-1.481983,-8.820665,1.325127,-9.096419,7.811730],[0.583006,7.270306,7.231813,-6.191591,3.912738,-6.716634,-5.669246],[1.716377,8.214150,1.539729,9.484626,5.499261,-9.936784,4.625006]],[[-0.431948,4.706425,8.824448,8.898434,7.083697,-5.490749,9.489676],[-7.440912,3.166129,8.515925,6.877368,1.974462,-5.312156,-8.985906],[9.731225,7.734418,-2.075325,8.152913,-4.268264,-9.920711,3.284338],[-5.393547,-3.250359,-5.724012,-4.089292,-1.186807,-0.950189,3.112094],[-1.553107,-5.233948,1.334316,8.332792,-0.515578,9.726377,6.044588],[-7.878218,-1.760989,-1.707414,-1.206506,-3.812082,-0.134882,-1.411984],[-8.455281,9.145272,8.160807,4.952279,-2.963786,-9.349391,1.030559],[5.937449,2.983800,4.519288,-8.325797,-8.433337,6.063669,-2.399019],[5.673984,-4.804109,-5.862705,-4.924304,8.831060,-0.364599,5.208227],[-6.855619,-6.848454,2.866836,-3.783059,1.058915,-4.947952,4.449386],[-3.886695,3.457309,-1.305497,5.354599,-5.535612,-2.365575,5.903930],[6.552787,5.876807,-2.052170,6.998195,1.938313,-9.947945,-1.819615],[0.890205,-9.391272,3.653740,2.155906,-6.813499,-0.733432,8.018207],[-3.364863,5.719655,5.590249,-8.616199,-9.776354,0.051818,4.408219],[-1.594916,0.441724,2.059918,4.351442,0.335197,-8.262173,-4.383550],[-6.908460,3.092195,-1.348085,-5.504852,3.436293,5.749620,-9.201652]],[[2.082067,7.383858,-2.047696,6.668153,-7.215083,-0.905520,-9.298636],[5.285688,-5.861521,-9.081605,0.373479,-1.673295,-5.420623,-1.780521],[-2.990241,-9.091368,-6.833840,8.887125,-2.756963,-6.644341,-7.282147],[2.275703,4.798502,0.674274,-5.160934,2.429180,-7.492870,-9.891221],[2.355225,7.683555,7.493424,1.424650,2.158396,-4.442278,-4.854884],[-5.839330,-5.738158,3.597633,8.013422,4.362336,-7.724981,8.894229],[-9.365778,2.786246,-3.904540,4.943446,-0.389804,7.742867,-3.510943],[-1.672910,-5.777307,4.014749,-1.043517,-9.580203,2.394608,0.522541],[-9.395391,-9.652797,-1.023207,-6.520433,-8.478565,9.352503,-8.203943],[-4.563955,-6.839958,4.601741,-5.418560,2.088622,8.915403,-1.299252],[2.478601,-1.714601,-6.145162,4.146691,-7.240097,6.167552,9.562502],[-0.373406,2.654923,-7.793031,4.816582,-5.359986,-8.899160,-6.592237],[8.013350,-4.202485,-7.633160,-6.052648,-3.779515,-2.368718,8.196736],[0.336939,-4.501345,-5.095382,6.337705,3.677561,7.408418,-0.928811],[-8.383855,7.303244,3.197049,-6.057144,9.750460,-3.635918,-6.124679],[-6.921752,-2.376041,6.607270,4.423431,-0.883508,-4.614298,8.469624]],[[2.744732,-5.892071,-6.836902,1.193115,6.415491,-3.726817,-9.409138],[-0.790613,1.199260,-6.885206,7.102821,-5.200740,1.249830,4.902503],[-0.309891,5.798608,-6.674999,0.164613,-0.367300,-7.244406,2.128264],[-8.963173,5.570373,-9.119576,9.627434,-0.637607,-8.863550,-7.158035],[2.554489,-4.315294,-7.265391,9.673479,6.272990,-3.292013,1.497179],[5.158276,1.118479,-2.612812,8.343920,5.431345,1.780513,4.549042],[-5.875257,8.455948,6.486890,2.821397,-7.026911,-8.642733,-1.659375],[8.182491,5.992031,-5.914524,-3.868832,6.218200,5.056122,-3.975019],[-5.839344,2.003827,0.534643,-2.488080,-1.091411,2.135873,-5.319021],[-9.550703,-2.344992,-6.065123,-4.723779,-6.902025,6.896075,-9.097240],[-3.218504,3.948444,-5.735337,5.369987,7.481910,-1.202592,3.798590],[-2.311655,1.882375,-5.115350,-4.389256,7.294800,4.951298,1.829428],[4.873920,-7.701192,7.574099,-3.411387,-5.721918,8.727977,3.694842],[2.638350,7.123652,-1.909238,-0.995800,-6.886345,2.271162,6.782980],[1.968334,4.971442,8.234891,-7.337486,6.911738,-6.591456,-3.231303],[-2.320300,-3.617138,7.194559,9.486004,-0.841399,-2.525969,3.754594]],[[0.953427,3.222108,3.870104,2.220699,-2.026532,6.261441,2.924974],[7.678199,-4.614883,1.051716,2.188845,-6.232946,7.621856,-8.283467],[-5.394818,2.397170,-8.121760,-0.223143,-7.237016,-0.032589,-8.116285],[-7.208995,-7.374162,4.697841,0.567847,8.611139,6.948893,-5.029542],[-1.346949,5.904949,-3.391495,-3.115406,3.824057,-5.820490,8.630218],[-9.393523,7.765950,4.174016,-4.509964,-0.504879,6.840183,-1.867695],[0.876491,7.882999,0.701274,-5.462740,-3.248279,-8.302060,-6.949751],[9.797875,-1.362215,5.911764,-6.869289,8.009197,4.894560,0.529371],[8.205156,-8.315589,-9.724861,-1.962758,-0.235395,9.900893,-5.795926],[-2.718782,-8.401995,-4.601307,0.135241,-9.539607,-4.567118,-5.664555],[5.103077,-8.494866,1.705739,-4.329893,9.118266,4.414273,6.662152],[-5.479977,-6.881586,-6.092570,-6.244060,4.044237,-8.867148,2.239592],[2.504258,1.785176,4.051550,0.037968,-7.602925,-7.953025,5.862982],[5.770835,-3.528003,-9.596249,-3.748036,-0.819150,0.532960,-8.318135],[7.977172,-9.355300,1.433912,-6.882888,6.638823,8.014214,6.307525],[6.453165,3.409905,5.222105,-6.746820,-0.555453,6.345748,4.806718]],[[5.946442,-8.060361,-3.159489,0.685346,-5.208916,-0.096007,-2.255659],[4.185181,-2.366251,-3.159178,5.008654,9.031203,4.165234,-8.298688],[-3.702956,2.090381,9.109082,6.082391,-3.965611,9.939871,-5.095644],[-9.403546,6.079411,-6.870636,8.708426,9.174365,-5.124955,-0.322065],[8.679943,-0.078149,1.289311,4.071780,-1.120759,-0.691160,8.051921],[6.655332,8.138794,-4.186549,-7.644240,-2.494168,2.329107,-6.087546],[3.225149,0.897987,-8.425763,-9.833236,1.771742,-8.145812,-9.516498],[-7.766890,3.549574,8.446744,-3.315327,3.196048,-6.524257,-1.025429],[-4.877025,-4.833047,6.049730,-0.003337,8.582642,2.873096,-7.360730],[-9.954843,-8.208806,-3.965056,0.922941,6.603197,-1.905487,-8.413941],[-6.327786,-7.168078,8.002823,-1.484686,8.873863,-8.676186,-8.749287],[0.286881,-3.029620,0.899728,1.725122,-9.689777,-1.144638,-3.681709],[-6.216009,6.190826,1.644275,8.675755,-0.073366,3.877032,-8.249162],[8.007519,-2.737456,9.154031,-5.406263,6.465222,6.837192,-6.909172],[4.614705,-5.873617,0.680289,7.478651,8.739522,-5.605556,-5.498553],[9.134231,9.977851,1.298152,-1.564806,-9.990919,-9.601934,-4.302055]],[[9.523407,7.169437,5.634762,9.918154,3.207446,5.185763,1.055719],[6.888655,5.665955,6.060301,0.113284,-1.141311,9.007369,-6.766202],[9.270354,9.655849,-5.696887,2.033392,-4.557970,-8.090722,7.602740],[5.606755,9.734487,7.540626,5.718157,-1.724367,9.915044,-8.378227],[6.216513,-2.339281,1.626579,-1.344621,-7.831616,4.358937,-0.660710],[3.564978,6.662548,-9.968119,3.555359,-8.991475,-0.789949,0.534087],[9.655041,8.025655,-7.751484,6.898290,4.751682,6.990479,-4.889109],[2.142820,1.957426,-7.796993,6.479040,1.449410,-9.863875,7.307086],[-6.239265,0.850691,5.381562,3.928494,-1.558077,0.127441,-9.939349],[-4.698612,-1.444417,3.067974,-4.766311,-7.355866,-1.240912,-2.698115],[3.912556,-7.541547,-5.148347,-2.012119,-3.594008,5.676022,-3.564925],[-2.379070,-6.192125,0.480075,-4.562875,-4.327423,2.211239,-8.477634],[-9.179747,-8.109704,5.403136,-4.860261,-9.925709,7.968383,-6.774120],[-9.598939,3.030232,6.757807,4.281200,-8.516619,5.378468,-7.252400],[-1.007001,-4.447193,7.815702,-9.166549,6.608747,-4.207456,1.350129],[-9.255967,-6.593105,5.548685,-5.918121,4.808567,2.864600,0.973208]],[[-2.950260,2.043671,0.003382,-8.368454,2.860426,4.361274,5.867997],[-3.908963,3.323307,-8.053954,1.703542,0.228824,-5.709959,7.237974],[0.296588,-8.263698,-7.854142,-8.530178,3.826487,-3.434566,9.312881],[-2.301329,2.234365,-3.411553,6.008821,6.899838,-3.628935,-5.419499],[5.563865,-6.390872,5.445790,8.517105,5.167181,8.258327,-6.136576],[2.723672,3.411992,-9.545855,-0.193164,0.266941,7.271612,0.091206],[1.086850,-4.451723,5.999959,7.004924,4.056380,5.689024,-6.812903],[1.626851,-6.334662,7.859527,-4.714018,2.280708,-6.831510,9.346337],[4.608577,1.248410,-4.834920,9.585875,-0.736202,-9.214217,2.470262],[-7.042089,-2.065732,-0.741636,-2.792207,-6.211713,2.386882,-3.110235],[-4.581240,4.020975,-8.351791,7.640162,-1.010100,-7.988404,9.052680],[-8.934653,-1.839414,9.993740,0.317014,-7.754622,4.768603,-0.842719],[-2.702027,-5.780871,-4.998117,-2.211122,-8.426316,-6.648651,-5.684630],[5.341780,7.611505,7.983958,3.855772,5.273513,-3.722133,-6.500514],[-5.565095,6.068325,1.431083,-1.475404,0.654556,-1.253903,-4.450297],[7.972383,-9.195914,-1.235811,-8.970386,4.377300,-1.615482,-5.438971]],[[-2.114495,-2.619084,-2.380158,7.891857,2.057294,8.937625,-9.912530],[-8.714433,-8.687993,-9.590086,5.359445,7.762614,-2.233336,7.668882],[1.110505,1.195381,-9.607486,-5.641750,6.441897,0.761865,0.752950],[-9.073816,-9.500963,-2.203830,-5.901087,7.345186,-9.693442,8.965485],[-4.312413,5.376096,3.373801,6.478194,5.101938,-5.794040,-9.285901],[2.997018,-9.212309,8.917597,4.183555,-0.174292,-6.634775,8.682401],[-9.972628,4.976104,8.628392,-5.832225,-2.932989,-6.541964,6.380635],[-5.072220,-6.125140,-2.604492,6.535341,-0.272047,9.060829,-1.807161],[-7.137019,-0.455726,9.666925,9.308086,2.165092,6.472621,-5.196208],[7.594959,-1.415871,2.191463,6.081965,9.680099,4.646929,3.741224],[-6.799930,3.579582,6.128066,0.458198,3.983043,1.729857,-1.080560],[-6.021444,4.595502,5.867737,-0.946246,-4.012014,-7.154277,-1.454558],[7.098694,-1.434389,-6.286016,0.358401,-5.062473,-1.712263,7.655423],[-3.073770,-7.857617,-6.848497,-0.511539,0.976914,-5.380470,-8.688986],[6.887439,4.476731,5.937685,8.717792,9.275917,1.445474,5.904305],[9.974869,-6.495884,2.346497,9.926914,-3.791320,2.439202,-9.081245]],[[0.794226,-5.585285,9.253687,-2.791919,9.355688,-3.073506,-5.515019],[-6.395379,3.116948,-8.536064,8.866876,-2.825489,-3.732107,-2.492822],[-4.079678,0.861712,-5.962709,1.755143,9.743299,-2.673142,5.770239],[4.851795,-8.171306,4.217388,-6.652585,7.972330,3.271250,-9.588716],[-4.269792,9.023630,6.136081,8.674247,-0.777343,8.537506,-6.009803],[0.527542,7.358693,9.980436,-7.702437,2.360992,-8.175596,0.458200],[5.612285,5.790165,-1.747206,-3.086484,-1.005232,3.700498,-9.566474],[-5.347577,-4.801673,-8.817515,0.775920,-0.975253,9.498714,-6.371248],[-9.193132,4.605897,5.149955,-7.606832,-6.509372,3.325457,-5.348468],[4.679215,7.822011,6.335955,3.648589,8.901849,5.070723,9.667448],[-4.849446,-8.084609,8.909343,-5.324897,8.491169,-6.854585,5.311903],[-9.003925,6.645447,7.357451,4.267353,-0.246883,-7.567853,7.062112],[4.251841,-3.103787,-8.047956,5.944572,1.887935,-4.731942,-2.628819],[-0.522250,-9.675969,1.457810,-8.905494,7.138274,6.776040,9.333169],[0.201314,8.286520,1.443995,-8.676860,-2.055206,7.747658,6.120401],[-2.852594,-0.534929,-4.610901,3.383455,-9.492931,-7.082800,-4.836924]]], dtype = "float32")#candidate|665|(13, 16, 7)|const|float32
uop_666 = relay.exp(const_665.astype('float32')) # shape=(13, 16, 7)
func_24_call = mod.get_global_var('func_24')
func_29_call = mutated_mod.get_global_var('func_29')
const_679 = relay.const([[True,True,False,True,False,True,True,False],[False,False,True,False,True,False,False,False],[False,False,False,False,False,False,False,True],[True,True,True,True,True,False,False,False],[False,True,False,False,False,True,False,False],[True,False,False,False,False,False,False,True],[False,True,True,False,True,False,True,False],[True,True,True,False,True,True,True,True],[False,True,True,False,False,False,True,True],[False,True,True,False,False,True,True,False],[False,True,True,True,True,False,True,False],[True,False,False,True,False,True,False,False],[False,False,True,False,False,False,True,False],[True,False,False,True,False,False,False,False],[True,True,False,False,True,True,False,True],[False,False,False,False,False,False,False,False],[False,True,True,False,True,False,False,True],[True,True,False,True,True,False,True,False],[True,True,False,True,True,False,False,True],[False,False,True,False,False,True,True,True],[True,False,True,False,False,False,True,True],[True,False,False,False,False,False,False,False],[True,False,True,False,False,True,True,False],[True,False,True,True,False,False,False,True],[False,False,True,False,False,True,False,True],[True,False,True,True,False,True,True,False],[True,False,False,True,True,False,True,False],[False,False,False,False,False,False,True,False],[False,True,True,False,False,True,True,True],[True,False,False,False,True,False,False,False],[False,False,True,False,False,True,False,True],[True,False,True,False,True,True,False,True],[False,True,False,False,False,True,True,False],[False,True,False,True,True,False,False,False],[False,True,False,True,False,False,False,False],[True,True,False,False,False,False,True,False],[False,True,False,False,True,True,False,True],[True,False,False,False,False,False,False,True],[False,False,False,False,True,False,False,False],[True,False,False,False,True,True,False,True],[True,True,True,False,False,False,True,True],[False,True,False,True,False,False,False,False],[True,False,False,False,False,True,False,True],[True,False,True,False,True,False,True,False],[True,True,False,True,True,True,True,True],[True,True,False,True,True,False,True,False],[False,True,False,False,False,False,False,False],[False,True,False,False,True,False,False,False],[True,True,False,False,False,True,True,True],[False,False,False,True,False,True,False,True],[True,False,True,True,True,True,True,True],[True,False,True,False,False,False,True,True],[True,True,True,True,False,False,True,False],[False,True,True,True,True,True,False,False],[False,True,True,True,True,True,False,False],[True,False,False,True,False,True,False,True],[False,True,False,False,True,True,False,False],[True,False,True,False,True,True,False,True],[False,True,False,True,False,True,True,True],[True,False,False,True,True,False,False,False],[True,False,False,True,False,True,True,True],[True,False,True,False,True,True,False,True],[False,False,True,True,True,False,False,False],[False,True,True,False,True,True,False,True],[False,False,False,False,True,True,True,False],[True,False,True,False,True,True,True,True],[True,False,False,True,True,True,True,True],[False,True,True,True,False,True,False,False],[False,False,False,True,True,True,False,False],[True,True,False,False,False,False,False,True],[False,False,False,True,True,False,True,True],[True,False,True,True,False,True,False,False],[False,False,True,True,False,True,False,True],[False,False,False,False,False,False,False,True],[False,False,False,False,False,True,True,True],[False,False,True,False,False,True,False,False],[True,True,True,True,True,True,True,True],[False,True,False,False,True,False,True,True],[False,False,True,True,True,True,False,True],[True,True,True,True,False,True,True,False],[True,True,True,False,False,False,True,False],[True,True,True,False,True,False,False,False],[False,True,True,False,False,True,True,False],[True,True,True,True,False,True,True,True],[False,True,True,False,True,True,True,True],[False,False,True,False,False,True,False,True],[True,True,True,True,False,False,True,True],[True,True,True,False,False,False,True,False],[True,True,False,True,False,True,False,False],[True,True,False,False,True,False,True,False],[True,False,True,False,False,True,True,False],[False,False,False,False,True,True,False,False],[False,False,True,False,False,True,True,True],[True,True,True,False,False,False,False,True],[False,True,True,True,False,True,True,False],[True,True,False,False,False,False,True,True],[True,False,True,True,False,False,False,True],[False,False,True,False,False,True,True,True],[False,True,False,True,False,True,True,True],[False,False,False,False,False,True,True,True],[True,True,False,True,True,True,False,True],[True,True,True,True,False,True,False,True],[False,False,False,False,True,True,True,True],[True,True,False,False,False,True,True,False],[False,False,True,False,True,False,True,False],[True,True,True,False,False,False,True,False],[False,True,False,False,False,True,True,False],[True,True,False,True,True,True,True,True],[True,True,True,False,True,True,False,False],[False,False,False,False,False,True,False,False],[False,False,False,True,True,False,True,False],[True,True,False,False,False,True,False,False],[False,True,False,True,False,True,False,False],[True,False,False,True,False,False,True,False],[False,False,True,False,False,False,False,True],[True,False,False,False,False,False,False,False],[True,False,False,False,True,False,False,False],[False,True,True,False,True,True,True,False],[True,False,False,True,True,False,False,False],[True,False,False,True,False,False,True,False],[True,True,False,False,True,False,True,False],[True,False,False,True,True,True,True,False],[False,True,True,True,True,False,True,False],[False,False,True,True,False,True,True,True],[False,True,False,False,True,True,False,True],[True,False,False,True,False,True,True,False],[False,True,True,True,True,False,False,True],[False,True,False,True,False,True,False,True],[False,False,True,False,True,True,True,True],[True,True,False,True,False,True,True,False],[False,False,True,True,True,True,True,True],[True,True,False,True,True,True,False,True],[True,True,True,True,False,False,False,False],[True,False,True,True,True,True,True,False],[True,True,True,False,False,False,False,True],[False,False,True,True,True,True,False,True],[True,False,False,True,False,False,True,False],[False,True,True,True,False,True,True,True],[False,True,False,False,True,False,False,True],[False,True,False,False,False,True,True,True],[True,True,True,True,True,False,True,True],[True,True,False,True,False,False,True,False],[True,True,False,False,True,False,False,True],[True,False,True,False,True,False,True,False],[True,False,False,False,True,True,True,False],[False,False,False,False,False,True,False,True],[False,True,True,True,True,True,False,True],[False,False,True,True,False,False,False,False],[True,False,False,False,True,False,False,False],[False,False,False,False,True,True,True,True],[False,False,False,True,False,True,False,False],[True,True,True,True,False,True,True,True],[True,False,True,True,False,True,True,False],[False,True,False,True,False,True,True,False],[True,True,False,True,False,False,True,True],[False,True,True,False,False,False,True,False],[False,False,True,False,True,False,False,True],[True,False,True,False,True,False,False,True],[True,False,False,False,True,False,True,True],[True,False,True,True,True,False,True,True],[False,False,False,True,False,False,True,False],[True,False,False,False,False,False,True,True],[True,False,True,False,False,True,True,True],[True,False,False,False,False,False,False,False],[False,False,True,True,False,False,True,True],[False,True,False,False,True,True,False,False],[True,True,False,True,False,True,False,False],[True,True,False,True,True,False,True,True]], dtype = "bool")#candidate|679|(168, 8)|const|bool
call_678 = func_24_call(relay.reshape(const_679.astype('bool'), [16, 7, 12]), relay.reshape(const_679.astype('bool'), [16, 7, 12]), relay.reshape(const_679.astype('bool'), [16, 7, 12]), )
call_680 = func_24_call(relay.reshape(const_679.astype('bool'), [16, 7, 12]), relay.reshape(const_679.astype('bool'), [16, 7, 12]), relay.reshape(const_679.astype('bool'), [16, 7, 12]), )
func_24_call = mod.get_global_var('func_24')
func_29_call = mutated_mod.get_global_var('func_29')
call_698 = func_24_call(relay.reshape(const_679.astype('bool'), [16, 7, 12]), relay.reshape(const_679.astype('bool'), [16, 7, 12]), relay.reshape(const_679.astype('bool'), [16, 7, 12]), )
call_699 = func_24_call(relay.reshape(const_679.astype('bool'), [16, 7, 12]), relay.reshape(const_679.astype('bool'), [16, 7, 12]), relay.reshape(const_679.astype('bool'), [16, 7, 12]), )
output = relay.Tuple([uop_666,call_678,const_679,call_698,])
output2 = relay.Tuple([uop_666,call_680,const_679,call_699,])
func_700 = relay.Function([], output)
mod['func_700'] = func_700
mod = relay.transform.InferType()(mod)
output = func_700()
func_701 = relay.Function([], output)
mutated_mod['func_701'] = func_701
mutated_mod = relay.transform.InferType()(mutated_mod)
func_700_call = mod.get_global_var('func_700')
func_701_call = mutated_mod.get_global_var('func_701')
call_720 = relay.TupleGetItem(func_700_call(), 1)
call_721 = relay.TupleGetItem(func_701_call(), 1)
func_434_call = mod.get_global_var('func_434')
func_437_call = mutated_mod.get_global_var('func_437')
var_733 = relay.var("var_733", dtype = "float32", shape = (4, 180))#candidate|733|(4, 180)|var|float32
call_732 = relay.TupleGetItem(func_434_call(relay.reshape(var_733.astype('float32'), [8, 6, 15])), 0)
call_734 = relay.TupleGetItem(func_437_call(relay.reshape(var_733.astype('float32'), [8, 6, 15])), 0)
func_700_call = mod.get_global_var('func_700')
func_701_call = mutated_mod.get_global_var('func_701')
call_740 = relay.TupleGetItem(func_700_call(), 3)
call_741 = relay.TupleGetItem(func_701_call(), 3)
func_434_call = mod.get_global_var('func_434')
func_437_call = mutated_mod.get_global_var('func_437')
call_744 = relay.TupleGetItem(func_434_call(relay.reshape(var_733.astype('float32'), [8, 6, 15])), 0)
call_745 = relay.TupleGetItem(func_437_call(relay.reshape(var_733.astype('float32'), [8, 6, 15])), 0)
func_700_call = mod.get_global_var('func_700')
func_701_call = mutated_mod.get_global_var('func_701')
call_754 = relay.TupleGetItem(func_700_call(), 3)
call_755 = relay.TupleGetItem(func_701_call(), 3)
bop_763 = relay.multiply(call_732.astype('uint16'), relay.reshape(var_733.astype('uint16'), relay.shape_of(call_732))) # shape=(8, 6, 15)
bop_766 = relay.multiply(call_734.astype('uint16'), relay.reshape(var_733.astype('uint16'), relay.shape_of(call_734))) # shape=(8, 6, 15)
func_700_call = mod.get_global_var('func_700')
func_701_call = mutated_mod.get_global_var('func_701')
call_771 = relay.TupleGetItem(func_700_call(), 1)
call_772 = relay.TupleGetItem(func_701_call(), 1)
func_24_call = mod.get_global_var('func_24')
func_29_call = mutated_mod.get_global_var('func_29')
call_773 = func_24_call(relay.reshape(call_754.astype('bool'), [16, 7, 12]), relay.reshape(call_740.astype('bool'), [16, 7, 12]), relay.reshape(call_754.astype('bool'), [16, 7, 12]), )
call_774 = func_24_call(relay.reshape(call_754.astype('bool'), [16, 7, 12]), relay.reshape(call_740.astype('bool'), [16, 7, 12]), relay.reshape(call_754.astype('bool'), [16, 7, 12]), )
func_700_call = mod.get_global_var('func_700')
func_701_call = mutated_mod.get_global_var('func_701')
call_780 = relay.TupleGetItem(func_700_call(), 2)
call_781 = relay.TupleGetItem(func_701_call(), 2)
func_434_call = mod.get_global_var('func_434')
func_437_call = mutated_mod.get_global_var('func_437')
call_782 = relay.TupleGetItem(func_434_call(relay.reshape(var_733.astype('float32'), [8, 6, 15])), 0)
call_783 = relay.TupleGetItem(func_437_call(relay.reshape(var_733.astype('float32'), [8, 6, 15])), 0)
output = relay.Tuple([call_720,call_740,call_744,call_754,bop_763,call_771,call_773,call_780,call_782,])
output2 = relay.Tuple([call_721,call_741,call_745,call_755,bop_766,call_772,call_774,call_781,call_783,])
func_786 = relay.Function([var_733,], output)
mod['func_786'] = func_786
mod = relay.transform.InferType()(mod)
var_787 = relay.var("var_787", dtype = "float32", shape = (4, 180))#candidate|787|(4, 180)|var|float32
output = func_786(var_787)
func_788 = relay.Function([var_787], output)
mutated_mod['func_788'] = func_788
mutated_mod = relay.transform.InferType()(mutated_mod)
func_700_call = mod.get_global_var('func_700')
func_701_call = mutated_mod.get_global_var('func_701')
call_792 = relay.TupleGetItem(func_700_call(), 2)
call_793 = relay.TupleGetItem(func_701_call(), 2)
func_700_call = mod.get_global_var('func_700')
func_701_call = mutated_mod.get_global_var('func_701')
call_800 = relay.TupleGetItem(func_700_call(), 3)
call_801 = relay.TupleGetItem(func_701_call(), 3)
output = relay.Tuple([call_792,call_800,])
output2 = relay.Tuple([call_793,call_801,])
func_807 = relay.Function([], output)
mod['func_807'] = func_807
mod = relay.transform.InferType()(mod)
mutated_mod['func_807'] = func_807
mutated_mod = relay.transform.InferType()(mutated_mod)
func_807_call = mutated_mod.get_global_var('func_807')
call_808 = func_807_call()
output = call_808
func_809 = relay.Function([], output)
mutated_mod['func_809'] = func_809
mutated_mod = relay.transform.InferType()(mutated_mod)
const_819 = relay.const([[[-9.462459,-5.977330,2.034906,8.743566,0.724177,-8.436624,-0.717677,6.092650,-6.465516,-9.399075,0.943575,-9.013523],[-5.569965,9.016301,2.192250,-8.770626,0.930464,6.690415,2.510628,3.959865,0.039194,-2.591447,-6.735042,-9.045511],[-7.550741,4.122104,-8.176871,3.681909,-4.262804,6.904597,3.416630,5.021093,9.268251,9.107936,5.949496,0.160723],[3.409037,-0.154220,1.772056,-3.625332,8.103472,3.539393,-2.974511,-1.924359,5.705178,-5.214106,8.833664,7.789050],[-4.997043,0.063329,7.178328,5.200855,-1.182825,6.850416,-1.125677,1.801801,0.670832,2.639764,6.284675,-6.571122],[-2.208081,-4.976482,-8.879287,-7.317058,-1.937522,-9.612063,-8.899893,-8.242295,3.106888,-1.822915,-5.532547,9.308639],[-2.042274,2.649097,-7.311058,-2.720767,-4.969131,-7.426623,-3.123233,1.707991,-2.211410,7.419845,0.239940,-8.356710],[5.900103,0.440486,-0.241425,9.828712,0.587212,7.842711,-7.987383,-2.218108,-9.484000,7.992094,1.787113,0.326912],[-6.684382,-5.771825,3.757606,-0.437120,5.927131,-8.981357,-7.319055,-0.864123,-7.953746,9.738714,6.873091,3.401161],[-4.257624,7.266310,9.714556,5.887845,9.938224,-4.850269,-7.578025,6.995900,-3.474945,-8.610726,2.948041,-9.424961],[-6.104564,-2.885715,-8.310353,8.786953,-4.663241,-8.692937,4.412327,8.483763,-8.999374,6.431405,-7.453428,-1.419753],[-0.673748,6.085593,-5.834422,0.850905,3.301759,-6.458502,2.417573,-3.337684,-6.836657,-5.783289,-1.898089,-0.222543],[1.030667,-6.837824,-2.660217,-8.124020,4.975105,-9.101650,0.856320,-9.279136,0.326624,-1.103230,-5.292045,-9.609263],[-9.462400,-6.100755,-7.858573,7.874194,0.618985,8.966640,-5.778223,-1.526202,4.549733,9.772816,1.133417,3.776629],[3.602080,8.583539,-8.911067,-9.974102,-5.276948,-9.428301,-5.410788,-1.244741,4.202918,7.839033,8.393395,8.932797],[0.013813,-5.246534,-4.912550,2.623662,0.307662,6.816069,5.857024,-3.117190,-5.498034,-1.020737,-6.021631,-8.191466]],[[9.834906,-2.445054,-3.374679,2.970000,-0.689538,-2.402699,-1.565289,-2.080057,-7.449618,8.668008,-5.963003,-9.723857],[-1.031567,5.111735,8.504968,-7.105288,7.379834,-1.420710,-1.302497,6.827075,4.160381,0.708311,-7.711580,1.826380],[6.132899,-5.491994,1.673475,6.978230,6.971297,-6.197174,-2.886491,0.673379,0.201412,3.310168,-2.580560,6.669721],[-0.253966,9.021630,-4.284343,-8.707792,6.688316,4.625563,8.786387,0.447167,1.936854,5.100614,-5.144347,-5.834412],[-9.779818,-2.300340,-2.107105,-1.828770,-3.058993,4.726756,7.827528,6.044739,-3.893091,0.227384,7.152528,6.053223],[-2.514692,-4.450594,7.664202,6.949437,9.434522,-1.167298,8.612522,-7.539773,-0.229943,-2.365151,0.662909,0.989497],[4.767167,9.310853,1.441171,5.255090,-9.326998,-6.277893,-7.388126,2.347049,5.705162,-7.484541,9.008028,2.259508],[-3.388399,2.922462,1.654631,-8.416919,9.091576,0.030101,-3.691696,-2.447012,-6.850094,-3.445935,-9.184763,-0.554801],[-1.759690,-1.749102,-4.736892,2.884322,-9.685064,-4.641290,8.533806,-3.144897,8.904616,1.090788,-2.600367,-3.476237],[2.803716,-6.969422,-5.693986,9.153837,0.572073,-1.802712,9.619355,-8.322616,-1.010943,6.298077,5.514505,-0.634418],[5.111829,-0.931772,-3.982037,2.789887,-3.316566,9.719199,-4.447658,0.334502,6.809239,6.223125,9.553089,-2.661608],[0.561753,-7.969738,5.764998,9.880740,-7.125164,-9.036999,-2.743952,-0.482381,6.900975,4.875324,7.953514,7.351244],[8.530839,4.993858,6.104242,-2.017302,-6.288438,3.948482,-6.653232,-4.457177,7.695119,7.311236,-3.087359,-2.985831],[7.306584,-5.061301,-8.879323,6.940235,-5.210315,-2.752106,-6.505918,-2.145778,4.232367,-3.240348,-0.757664,3.109345],[-3.128566,1.755892,-0.177123,-4.542768,-3.131314,-3.078840,5.104952,-8.562039,3.816018,0.949103,8.547057,-8.385137],[5.360913,-6.464245,0.471944,5.316200,-7.408469,6.625743,-2.878933,9.522907,-4.515020,1.326478,9.734868,1.745435]],[[7.284524,3.331111,8.244619,9.635769,-8.481229,-2.033528,8.146336,8.001283,6.699801,0.607973,9.602380,-5.122256],[-0.480949,1.663221,3.693674,-1.240318,7.587280,6.853711,7.938994,5.962322,6.103682,-6.425418,-7.892774,-3.559772],[-4.270491,7.711836,-6.973329,0.597685,-5.442971,3.733016,0.654909,-8.027583,5.749018,9.074063,-3.900101,-0.134591],[6.597438,2.445438,9.984874,8.556930,5.560714,2.352459,-8.262316,-4.283828,2.950043,-6.681174,-6.577598,1.879492],[-9.944076,-6.339833,8.784337,-7.430475,6.520164,-7.148867,-5.998113,-8.811624,3.454169,5.637692,-1.928766,-5.860938],[3.785725,0.402513,1.655510,2.758925,1.962643,-3.275633,4.960506,1.698666,-7.138794,5.831184,3.160317,-4.037696],[4.444877,-3.539858,-6.931184,4.911967,3.242133,4.977886,7.921593,3.449061,-3.464617,9.847923,-2.002470,4.933114],[7.582749,1.414549,-0.364457,5.996759,-6.361098,-3.878874,-9.753501,-1.310288,-2.243375,-7.924174,6.001492,-0.138863],[1.300122,4.908577,1.967019,6.730169,3.868875,9.827770,-1.359746,0.752234,5.166795,2.827074,3.679794,5.649652],[3.623954,8.032747,8.596984,9.060247,2.288865,4.730624,3.004197,6.516301,8.477164,-8.211903,3.509689,-0.199341],[4.740261,-5.568598,-7.307981,-5.410671,5.314855,-7.952771,-0.381630,-2.718690,-2.258906,-1.708121,-1.248557,-1.318352],[-0.840054,2.601717,-9.697610,-1.595800,-7.567060,-6.113892,4.235666,-3.017624,-2.105708,8.109908,-4.518143,-0.773536],[5.373813,-5.720393,6.370347,-8.564105,-9.453513,4.637877,7.904560,-7.785965,5.022091,-9.362470,-5.296742,2.592006],[1.125650,8.993139,-4.157238,-5.445908,-3.237452,7.653304,6.543310,5.433910,-0.549507,-0.230737,6.237914,1.541441],[4.957774,1.482442,-7.423070,-3.954078,2.910563,-7.475244,-9.855186,-3.948670,5.220839,-4.076819,3.819942,-6.931159],[-7.363245,0.671611,-8.520435,-0.354687,8.975728,7.819710,0.316756,8.549713,7.492033,-5.751687,0.597091,-3.837252]],[[6.934706,8.609098,-8.281579,-6.552521,3.992970,-0.942534,-3.981160,3.008737,-6.074420,1.443203,7.995311,7.142268],[-1.188559,-8.963895,-1.195301,3.177325,4.745279,-2.512246,-5.858687,-2.305804,-2.605322,5.085694,-3.687098,-4.601221],[4.998971,-0.155366,6.686116,8.654942,6.668553,2.667623,-8.414956,5.908737,4.137733,-5.337538,-1.385259,6.142099],[7.160837,7.174568,-7.539041,4.624500,-3.513948,-6.831636,0.998636,1.894456,8.021951,-2.531364,9.957979,2.890043],[0.482990,9.195407,-5.153095,-7.666379,1.346599,0.049446,-8.672527,-7.213917,-8.641331,-7.347573,-8.943810,5.483174],[-4.207008,-1.457049,9.818107,-4.471967,3.930266,5.801589,2.127677,8.027542,3.592849,-7.663540,9.238550,-1.719389],[7.208671,7.751724,5.598352,3.145814,-5.003651,5.207121,4.245294,-3.169515,9.625764,-6.986287,-3.288486,-2.413026],[7.484083,2.384016,7.712233,-7.507109,-8.610667,-8.444307,-5.083360,0.745820,3.728238,4.865400,-0.123214,8.059925],[3.304694,-3.595254,-2.284397,8.410703,7.241453,-2.703477,5.063425,0.882381,3.112278,5.173869,2.876958,-9.894591],[0.142291,9.890065,-5.305913,-9.279665,4.933444,1.071546,3.672774,6.839929,4.368427,8.851816,-4.160647,-9.839414],[-7.377227,-2.994361,-1.654370,5.393633,-4.199693,6.299708,2.818422,-7.020618,0.751259,-1.529577,-9.029598,1.331678],[-1.152012,-3.535677,-4.492619,-0.120828,-3.929418,-0.671119,9.578503,7.176037,1.859264,-0.407322,-5.852246,3.198260],[-2.585380,-7.268603,1.169226,-1.644636,-2.940570,-3.002790,1.555543,7.405254,3.944874,-2.429772,4.176048,-1.984786],[8.680109,-7.120368,2.635653,6.786957,5.682841,1.201720,7.929134,-0.502327,-9.201963,-7.511415,1.565521,-1.472458],[-7.716485,-6.638934,-6.376221,-4.700500,9.170444,2.210881,-1.454851,5.027673,-6.844286,-7.846267,-1.143187,3.017158],[0.701089,8.747625,9.532279,-4.957314,-6.761109,-0.286013,5.607528,-6.660530,0.324463,-9.247802,-9.931310,5.322275]],[[-9.524816,4.959034,6.590689,5.929359,-4.224124,9.670650,-0.353236,3.353466,-9.026596,6.666407,-7.920975,1.704022],[7.148360,2.095091,8.208236,-7.545956,-7.789565,-4.434293,-0.422202,1.397391,-0.928937,4.044468,-5.795259,-9.281966],[-1.710617,-3.824710,7.142345,-2.310715,6.899604,3.633157,-8.233843,-7.192630,6.293982,-9.855380,7.355713,-0.083979],[5.279415,-8.123780,5.466071,-7.402051,9.836113,-7.099902,-6.884566,9.544730,0.277544,-1.626684,8.219463,-6.777147],[-6.707724,-6.303292,-3.779048,0.962533,-5.641005,6.600287,-7.120358,1.980431,0.442659,5.222574,-0.979839,8.111223],[1.256871,-0.112494,4.643649,5.976109,9.115143,4.356719,-5.351929,7.125495,-7.642022,-1.625249,1.805402,-8.697188],[-2.408350,-4.792214,4.049190,-5.928827,-0.399304,0.839741,1.835856,5.632510,-6.621715,9.089526,2.925870,-9.145503],[7.859297,8.535341,-2.935307,2.719243,3.139970,-7.131566,-7.562400,1.050732,4.015421,-2.688195,0.569240,6.170683],[-5.736008,-1.375291,-6.023092,0.106962,-6.263395,-5.267609,9.122354,8.635468,1.714530,3.120716,-8.065619,-5.068522],[2.897106,-8.423459,-8.947394,-4.589315,-7.182966,2.402257,2.955889,2.354728,7.873435,6.475435,8.476902,1.133088],[-4.360303,-1.192859,5.629813,-0.248518,1.749041,1.980572,-4.672233,-5.912166,-6.055828,7.562829,7.674120,9.260816],[-6.636027,9.433498,8.975178,0.638390,2.721402,-3.529345,-3.542260,8.824312,-0.090149,-1.938914,-1.668483,5.495812],[-9.674915,2.180952,6.107784,-4.675853,8.792154,-5.221654,-7.697383,-4.286852,0.423751,-3.832761,3.945133,-9.920966],[-3.693293,-4.853832,8.792469,3.785485,9.329466,2.959303,-3.411834,-7.013605,9.837567,-7.296599,-1.040279,1.295788],[-3.473720,-0.260076,4.712229,6.822045,5.680787,7.288209,1.944756,-7.430122,0.800109,-9.401808,5.930124,4.680182],[5.477469,-0.528810,-8.775864,9.561024,9.915818,-2.253823,-9.944569,-8.840264,9.621338,5.818461,-1.130210,7.766074]],[[8.882103,4.645163,5.448836,-8.458977,5.612996,-6.247171,-8.837387,-4.326177,2.657811,2.124337,-7.562291,8.348424],[5.726995,-9.056999,-1.523115,9.905479,9.462562,-5.850335,8.967569,8.031459,5.104844,-3.248477,-9.067165,4.298477],[7.097749,5.318521,-0.490762,4.850124,2.762608,-9.692609,-0.351029,-7.986412,-1.340497,-3.288596,7.642411,-4.116354],[8.976525,-1.771057,8.124646,-8.503274,-4.794959,-2.924913,-1.324781,-1.233112,-4.021220,-1.447434,-6.754402,-3.620013],[1.927403,-9.258146,4.704404,-1.050468,3.894428,-6.564247,-6.070946,8.755015,-7.603830,-4.626294,-5.545279,0.905291],[9.327747,9.666801,-1.925145,-3.381895,-4.129590,-7.851694,-6.277269,-6.853964,5.141258,-7.785803,2.686336,9.378897],[-0.708602,8.327569,-0.432090,7.302144,-3.128436,-2.310457,-3.059805,-8.264138,4.204908,-4.395158,8.656244,-0.434702],[6.085163,0.894473,-1.198832,2.282721,-0.585044,8.038704,8.892055,-8.477988,4.470952,-7.150723,2.208524,-4.415633],[2.988736,-1.471312,-9.619414,1.510735,-1.108420,-3.080117,2.313382,9.459431,-9.497895,6.125017,8.280104,2.754850],[-1.748399,-3.645343,5.244394,-0.100151,-6.843389,5.630114,0.329790,-0.627486,6.584732,3.029277,-2.446988,-0.896593],[1.100850,-6.017222,7.716656,-6.809438,4.901478,-2.421094,1.637249,7.361366,8.383637,-3.085019,-5.104131,-3.498389],[-9.344344,-9.414799,-9.140778,1.316524,-3.376785,-9.969530,-5.446381,9.861598,-8.339740,-3.901678,5.669250,9.852418],[-8.595890,6.837464,-2.430329,0.949737,0.348824,-1.837640,-6.604376,-0.870411,4.100472,5.669592,6.754087,-5.077212],[-0.979982,6.418029,-2.289564,-7.952260,9.029065,6.594705,-3.858615,-5.049907,1.243798,8.228748,-9.207672,-3.178591],[6.661619,6.625229,8.602156,-3.996376,-0.406722,3.910809,-8.962875,-3.991727,3.305466,2.153932,-3.419931,-3.834211],[-3.318212,7.962455,0.920856,4.623173,2.016714,9.775744,-2.892459,-5.768180,5.107904,2.000206,-1.077450,1.182734]]], dtype = "float64")#candidate|819|(6, 16, 12)|const|float64
uop_820 = relay.exp(const_819.astype('float64')) # shape=(6, 16, 12)
func_807_call = mod.get_global_var('func_807')
func_809_call = mutated_mod.get_global_var('func_809')
call_822 = relay.TupleGetItem(func_807_call(), 1)
call_823 = relay.TupleGetItem(func_809_call(), 1)
const_825 = relay.const([[[-4.517157,-1.885456,-1.094769,0.005311,8.700558,-0.976667,5.226467,5.114364,9.574499,3.209234,-1.177558,-7.165413],[9.059728,0.171934,4.638410,-7.606008,-7.310325,5.408679,8.002290,8.480108,-1.274503,-7.484718,7.038376,-3.066493],[-6.076829,-7.461267,-6.400793,8.439560,-3.889974,-3.628332,8.847884,3.426540,4.519330,-3.042928,8.203779,-5.009606],[9.648247,9.367831,-7.793945,0.246024,8.641351,-0.695874,2.075286,-3.046502,-4.665301,9.402848,4.250598,0.144070],[-0.609431,4.962845,6.372481,2.892116,5.312596,0.716501,-0.206304,-1.988805,-0.465193,6.833929,-9.179820,-2.693475],[7.364063,-9.602636,-8.815305,2.924591,5.297169,4.453992,-4.859732,3.281954,7.376145,-4.245947,-0.500582,-7.136044],[2.657060,-8.384497,6.692812,-6.805107,-9.065641,2.931337,-2.068378,3.416731,4.169545,-5.281262,9.862427,8.559729],[-9.626083,6.548173,-5.676751,-9.410646,4.932000,3.349269,8.724462,9.375386,-7.908394,-0.812447,-9.323349,-9.514959],[-1.445410,4.741337,7.441403,9.367753,-3.354471,-0.375452,-9.147839,-7.375773,3.170995,-3.984932,1.283998,-0.627589],[-6.361477,-4.186228,5.756293,-9.420837,1.820957,3.081815,7.703509,0.422111,5.146394,-2.477064,-0.418164,-3.071526],[4.152472,-6.674946,-5.328632,-2.457894,9.413326,8.215975,-3.712573,6.458709,-1.424099,-0.958795,7.341002,7.500464],[3.282265,-5.360750,8.015556,1.968200,5.129097,1.506265,-1.008145,-5.820433,6.465499,-5.503891,7.234640,6.187655],[2.385337,5.134430,2.671692,6.839620,1.820320,-0.371065,-4.114284,3.436920,1.650435,-3.745015,-3.369634,-4.090878],[-0.650423,8.207408,-2.629692,5.810893,-6.614677,-8.390278,-1.194792,-2.093955,5.233579,-6.995506,-6.888172,7.069153],[-5.999996,-5.856333,-9.177804,-5.860024,8.161373,-2.262931,7.771272,3.121477,7.795170,5.293216,-8.610159,6.726817],[3.099687,5.830541,4.363834,0.404575,-5.842307,-6.875419,-5.808037,-3.662960,8.297976,4.228868,-1.946370,-1.299599]],[[-4.748545,7.685273,-2.588026,-3.978916,-2.655576,7.652506,-7.964553,-3.573221,-4.085162,8.315282,5.111812,6.665593],[2.752498,7.349189,9.905293,3.392649,-0.407902,-6.089609,0.233837,-6.882188,8.695857,6.271693,-2.321717,-0.821507],[-4.258669,-9.836261,6.446282,-7.091635,-1.323724,6.279824,-3.713806,-7.341751,8.844178,3.118206,5.176549,6.493478],[4.629570,3.646417,-5.112714,2.578315,1.413603,-3.275152,6.568509,7.162949,3.972314,7.879267,4.170503,-5.985951],[9.377808,4.413250,6.953655,7.836596,5.311633,-0.984640,-2.996727,5.171449,9.393593,0.257796,-1.561491,7.713798],[1.812338,0.126231,-6.530928,7.018460,0.469867,-0.415530,0.004092,-3.712432,-4.156402,-9.863634,-8.087952,5.941448],[-4.231208,-6.053804,9.130975,-4.450399,-7.430224,-5.351666,8.318712,-1.201380,-6.516792,6.916858,-1.425428,2.189902],[-4.356937,-5.063456,6.966900,1.276233,-9.487051,-6.634253,5.636598,-9.629559,6.631176,-6.396741,-0.383898,4.417244],[0.069014,1.168485,-6.429858,9.894983,-5.422414,8.375269,2.545184,3.204640,-9.510259,0.097198,-6.811985,-9.914270],[-5.401496,-1.313410,3.598171,-2.404615,-6.130872,3.277171,-4.799654,-4.193394,-4.114173,-4.586940,-3.107550,9.691979],[0.755834,-1.598151,-1.407369,7.438068,4.664970,9.795837,-4.121775,3.517270,7.372268,5.564109,3.095804,9.498302],[-4.567925,7.200099,8.971400,9.176683,-8.205348,0.419745,-4.540038,2.443458,-8.067369,9.518646,-6.430474,-2.222194],[5.250254,0.452391,9.113640,-5.231652,-3.401586,-4.586250,-2.358447,1.406173,9.962091,2.341700,5.473631,0.421602],[5.797014,-8.225399,8.991139,-6.002256,7.790999,-0.883755,-0.740656,-3.547004,-6.710661,-5.707088,-9.956352,5.272740],[-4.200960,-0.204280,-9.200025,-3.890379,-9.292479,6.832070,2.436244,-2.887091,-8.455711,2.113616,5.097589,3.961474],[-4.183133,-9.303142,1.134509,-1.615680,-8.981770,-4.565265,-2.475245,-0.824797,7.113030,-2.090332,3.118154,3.811738]],[[5.153352,-4.426331,-1.438090,0.027671,-0.490192,-9.297204,9.806600,7.960033,8.446704,-7.144463,-6.245214,-9.214613],[9.596285,-3.037727,6.038022,-9.461822,-5.983455,9.316975,-9.725396,7.898364,-7.107024,5.336321,-0.037780,4.947601],[-9.771184,9.880351,-6.505728,-3.078943,0.357302,3.257885,6.414059,3.717800,-6.267946,-2.726422,6.768182,6.640971],[7.418634,-0.636931,-9.347289,9.826427,6.266063,5.678490,-8.198186,8.606642,3.546876,-4.773379,-4.198365,-1.366569],[-2.602164,-6.431541,9.569091,0.946447,-8.464536,-6.114417,2.506338,5.385066,6.660830,4.502671,-8.983912,6.440526],[7.145071,-8.095742,7.381545,-5.706842,-0.067618,-7.924879,8.529816,-8.787715,1.126019,-2.726113,1.463883,0.255402],[-2.045911,-3.929471,-7.574176,-5.234536,-4.601894,8.221403,-3.469193,7.008162,-1.680077,-5.069201,-3.396516,9.647650],[0.550172,-3.245181,2.987699,4.497826,-5.334928,0.008970,7.206157,-8.042916,-2.233325,-8.962375,-2.201764,2.038132],[8.004672,-6.639008,1.544175,4.706500,7.567123,6.153479,5.998168,-7.174733,-5.359204,-2.908903,-1.998547,5.462237],[2.378267,4.361474,-5.684258,-5.624617,-1.006449,5.499365,0.525063,-6.864192,-0.023684,5.032640,7.144174,-2.987529],[2.772063,5.050793,5.025164,9.657908,-2.897521,-7.088259,8.656422,-6.350209,1.516856,6.921385,-7.649872,4.361719],[6.969045,6.442801,7.288689,2.599181,-1.553828,-4.217323,3.120261,-8.069934,-5.076745,-5.058960,-0.632651,6.664675],[-2.489739,-2.702515,-7.012126,-9.078913,-6.681983,-5.281582,0.421757,3.794207,2.511079,2.005565,2.836854,-5.809489],[8.843211,9.533222,-8.862799,1.942585,-6.673936,6.932176,-6.790260,-8.489513,0.992599,-4.603764,-0.953090,2.611246],[1.740410,6.258367,-5.322962,-6.361480,-7.278717,5.431416,-6.793039,-0.211742,-0.142345,4.871524,1.966684,-0.790927],[2.769105,6.196514,-8.543607,2.588004,2.036868,-5.009714,-8.311791,4.560263,-7.400659,1.776436,-1.425690,0.150549]],[[-2.400497,6.206071,8.897472,-5.325451,-6.571292,-3.415134,-9.332279,-2.862858,-3.625758,-2.073327,3.652798,-1.386188],[-1.276084,-5.124620,2.900076,-6.058630,-0.585557,3.499612,4.646257,-6.700063,1.025529,-0.856460,-2.347392,0.455153],[4.229248,-9.178410,-6.191077,-7.229421,-4.990497,0.023866,0.850416,2.525377,9.900831,6.430861,7.569607,-6.025189],[-7.063066,-3.639060,5.198301,-0.648334,6.911181,5.445785,4.731365,9.669170,-4.949033,3.424383,-0.420582,3.182284],[1.284120,-4.551692,2.901246,3.253728,4.554397,-4.121637,1.060471,5.560158,9.817940,-0.850448,-7.451438,3.294358],[-4.555158,-3.409251,7.820311,-0.206600,-5.313991,1.747190,0.634479,-1.429189,1.376862,4.948605,4.473641,1.082216],[9.483819,8.643674,2.833499,-3.755348,7.459954,-4.369809,7.231568,1.729290,2.743338,7.200439,8.205551,8.675435],[-7.741641,5.321873,8.041842,0.999588,2.496514,0.416753,8.856786,-5.412759,-2.880818,5.226462,-8.695875,-7.045727],[-2.649112,-5.619293,9.761182,-8.405797,7.686919,0.697044,-3.733218,1.050712,5.626870,6.683194,3.185390,0.569441],[-9.068777,1.422610,6.196251,1.181836,7.568330,8.849776,4.988715,-6.797056,7.569629,-8.959730,-2.627018,0.465831],[-9.230598,-1.338951,8.561715,6.140178,0.827996,-3.864490,-5.161873,-4.824846,0.387808,-3.559366,8.029695,6.884001],[-5.738374,-8.492039,-7.164160,-6.477938,-8.679646,-0.824961,-2.484747,-5.590400,-6.587781,-7.918483,-3.806478,-5.475132],[-7.783464,-4.964222,3.318154,2.882876,2.228085,8.655778,0.371205,-3.339136,-2.595984,5.608288,6.127919,-7.997068],[-3.914811,-9.781817,2.449838,7.727662,-8.238230,9.997167,7.308756,7.234307,3.246162,-2.123997,5.045683,-3.341267],[5.172321,-7.190692,1.292038,-8.738288,-1.448793,-9.267835,5.733172,8.451706,-6.607934,-6.986063,5.239261,-6.964406],[-6.163387,-5.917151,-3.383518,5.697090,-3.288693,-4.089089,9.237652,-6.802986,6.825324,7.653371,-0.034819,-5.514644]],[[-1.583877,-7.051786,4.452703,-9.331864,-8.187110,9.523500,6.049542,-1.652299,-4.058804,-1.570617,-1.047159,6.591309],[4.209073,-6.240891,-8.186919,-8.611955,3.249258,-6.191024,-3.504901,-7.588297,9.876388,0.409723,8.425386,8.655600],[-1.173035,5.780230,-1.827298,-0.930535,7.198655,9.215770,-1.143962,-4.557184,-2.035280,-1.467267,2.355292,8.944461],[-2.954958,-6.265506,5.142184,0.485518,1.358583,-6.373903,-9.482693,1.691824,9.345011,0.693773,3.882778,-4.505073],[-7.357609,-3.909990,9.620279,7.950940,-8.038989,8.894515,4.426433,3.083066,6.856892,-3.404899,-6.850207,-0.188151],[-1.146022,6.210460,4.446928,4.118194,-5.862471,-7.487525,-4.451339,0.287543,0.542258,-6.070190,-3.751277,5.248299],[9.352505,5.608324,8.359717,2.345650,7.569748,4.393138,-1.721188,-8.092245,-4.336226,7.275703,-8.701712,9.101028],[7.725956,-3.845430,8.062469,-6.240379,6.390387,0.046817,1.174042,-0.535746,8.792164,4.418123,3.051793,9.669118],[-6.607464,-0.722642,2.523550,-4.812412,5.936574,-8.978914,-0.206716,9.560757,-4.034253,0.853659,5.915161,-8.954557],[9.225036,6.508423,-6.859396,9.341252,0.099985,8.577011,5.350469,4.624991,6.453995,-6.294026,-7.197287,0.535015],[-5.259923,-5.910428,3.307717,-2.873814,9.619603,5.006077,-5.084004,-6.800040,-2.823697,3.444363,-6.365667,-6.462155],[-9.833365,8.871329,-2.573853,-4.996911,5.354642,-6.310953,1.039508,-5.825009,-7.277081,-7.945375,-1.157584,-5.441540],[1.730271,-4.416193,2.612030,9.586372,0.970026,-5.254443,2.339464,-1.927316,-0.875670,6.358172,-7.768933,-6.214168],[5.193218,1.083812,8.473856,-2.653630,8.147103,-2.164050,7.650607,5.532859,8.901895,-5.782652,-3.802063,9.977142],[-9.189298,-5.072132,-0.397647,3.772104,-0.324857,0.672420,4.006049,-7.369545,1.145790,8.709573,-4.503473,3.029138],[-3.017544,-0.605907,2.476999,2.466569,8.508955,-3.525736,-9.562389,9.374995,-3.793047,8.755970,3.747473,2.699317]],[[-8.108955,6.951154,9.427136,-4.805352,7.378405,-7.612234,1.702119,-9.111106,2.512074,-7.370844,-0.902306,-6.056879],[8.692314,-3.237381,3.974385,9.487581,-6.631446,-9.423812,8.649712,-4.000895,-1.835628,8.435035,-1.643349,-4.096699],[-1.069766,-3.209605,-8.074107,-6.513027,-3.611298,-1.051912,-4.355620,9.419108,4.085882,-5.623153,2.159918,2.100688],[6.213676,2.871919,-7.664539,1.654761,-4.579527,5.667678,2.570457,-1.777728,2.459430,9.147513,-6.504933,-2.524371],[7.140529,9.706591,6.078925,-4.704771,2.209318,7.133923,3.670936,5.758140,-3.884702,-1.512940,-0.181154,6.592956],[-9.237356,9.276197,7.585801,-7.898002,-2.034270,1.565311,-2.626865,-7.046926,9.518944,1.168862,-1.476532,7.295343],[6.728738,-4.845988,-0.945132,9.148856,4.228733,-9.410370,1.411718,7.044147,-0.342092,4.319188,-8.805085,-1.026014],[5.582787,-8.274990,-8.312917,-5.296151,7.132027,2.553131,-5.944253,-0.445316,9.469649,5.737212,9.562539,-7.672424],[2.390942,-7.712770,4.132923,-0.878283,-9.413702,7.150288,-5.151353,2.120794,-9.797140,6.105075,5.742600,-9.959831],[-3.432218,4.638250,-0.393718,7.295724,-9.062288,3.300408,2.567271,-0.909245,-8.623241,-8.993527,-3.438655,6.175226],[3.236849,3.043391,-7.259806,1.340635,3.148832,3.937420,4.945353,-1.366955,-7.057637,5.524733,3.230526,-5.615379],[3.784187,-0.723505,-8.472697,6.648199,-7.795018,-2.325436,-5.443699,-2.880452,0.178952,-4.050631,-5.965338,-7.494088],[-2.170520,-7.305608,7.444946,-5.342862,-7.884740,-8.716904,-6.756593,-3.574595,9.183632,8.281382,-0.535953,9.434686],[5.408426,-3.028232,-0.217204,7.401381,6.332517,-5.245264,-2.877211,3.327394,0.477428,1.709192,7.413817,6.864334],[-6.362499,6.900038,-4.705974,-7.584995,-2.259147,6.124040,2.542717,9.560437,7.914523,-4.458517,-8.105757,-1.279402],[1.949573,1.478527,1.002991,1.013178,-0.118546,-3.537056,-8.901394,-6.522361,-8.512670,1.459384,-2.790228,-7.611729]]], dtype = "float64")#candidate|825|(6, 16, 12)|const|float64
bop_826 = relay.power(const_819.astype('float32'), relay.reshape(const_825.astype('float32'), relay.shape_of(const_819))) # shape=(6, 16, 12)
output = relay.Tuple([uop_820,call_822,bop_826,])
output2 = relay.Tuple([uop_820,call_823,bop_826,])
func_830 = relay.Function([], output)
mod['func_830'] = func_830
mod = relay.transform.InferType()(mod)
mutated_mod['func_830'] = func_830
mutated_mod = relay.transform.InferType()(mutated_mod)
func_830_call = mutated_mod.get_global_var('func_830')
call_831 = func_830_call()
output = call_831
func_832 = relay.Function([], output)
mutated_mod['func_832'] = func_832
mutated_mod = relay.transform.InferType()(mutated_mod)
func_700_call = mod.get_global_var('func_700')
func_701_call = mutated_mod.get_global_var('func_701')
call_842 = relay.TupleGetItem(func_700_call(), 3)
call_843 = relay.TupleGetItem(func_701_call(), 3)
func_786_call = mod.get_global_var('func_786')
func_788_call = mutated_mod.get_global_var('func_788')
var_849 = relay.var("var_849", dtype = "float32", shape = (12, 60))#candidate|849|(12, 60)|var|float32
call_848 = relay.TupleGetItem(func_786_call(relay.reshape(var_849.astype('float32'), [4, 180])), 3)
call_850 = relay.TupleGetItem(func_788_call(relay.reshape(var_849.astype('float32'), [4, 180])), 3)
output = relay.Tuple([call_842,call_848,var_849,])
output2 = relay.Tuple([call_843,call_850,var_849,])
func_854 = relay.Function([var_849,], output)
mod['func_854'] = func_854
mod = relay.transform.InferType()(mod)
mutated_mod['func_854'] = func_854
mutated_mod = relay.transform.InferType()(mutated_mod)
var_855 = relay.var("var_855", dtype = "float32", shape = (12, 60))#candidate|855|(12, 60)|var|float32
func_854_call = mutated_mod.get_global_var('func_854')
call_856 = func_854_call(var_855)
output = call_856
func_857 = relay.Function([var_855], output)
mutated_mod['func_857'] = func_857
mutated_mod = relay.transform.InferType()(mutated_mod)
func_830_call = mod.get_global_var('func_830')
func_832_call = mutated_mod.get_global_var('func_832')
call_893 = relay.TupleGetItem(func_830_call(), 0)
call_894 = relay.TupleGetItem(func_832_call(), 0)
func_434_call = mod.get_global_var('func_434')
func_437_call = mutated_mod.get_global_var('func_437')
const_901 = relay.const([[3.440286,2.269878,4.113087,-2.328359],[-1.014184,8.704705,-8.896277,2.698001],[7.776052,2.963618,8.610166,-7.535996],[-7.115754,-6.328457,5.322172,3.647399],[-5.009326,-3.088362,-9.949026,-2.169839],[1.151786,-0.442635,-6.904109,5.179127],[-2.575468,3.255061,4.775445,6.940099],[1.132902,-3.243207,-1.741672,-4.348467],[0.220403,-3.481912,6.832214,-8.146133],[-6.430204,-2.740657,-3.968876,7.908432],[8.250647,-2.615983,-4.484542,-7.687471],[-0.171628,-9.645696,-6.659466,1.258836],[1.090507,-2.713263,-3.636428,4.425960],[3.973917,4.012297,-1.726225,-7.340991],[2.300912,-3.348196,-6.117135,-1.612528],[9.652931,-5.802786,5.398129,0.094018],[5.380888,3.775863,-3.561830,4.942841],[8.999103,-1.310671,7.685865,7.547204],[7.716463,-7.322379,-2.976541,-1.318227],[3.606926,0.760468,-1.718561,9.730247],[-5.279276,-4.340149,-2.714151,-5.247158],[-3.297431,2.621495,-6.357466,5.759175],[-6.394742,2.271769,-3.643121,-9.534500],[-8.103900,-9.564202,7.684356,7.607597],[-5.796648,-5.459414,0.871303,-1.418077],[3.368242,3.447957,-5.950381,-2.732800],[-2.813791,3.584316,5.596301,-5.161098],[-2.212073,1.829316,-9.083297,4.969997],[-2.113416,0.813550,8.492832,3.637401],[3.762418,-0.555737,3.067412,-7.210232],[-6.650792,-0.427306,-7.203531,-0.870615],[3.673187,-7.017607,-5.111104,5.411332],[3.924404,-4.506855,-9.995942,-2.514289],[-9.541506,-0.450654,3.489310,2.094227],[-6.886613,0.894423,-7.604776,1.415918],[7.852431,4.232326,-6.627915,-3.002011],[-0.043520,-3.647111,7.416953,-3.429646],[0.259249,7.743212,-2.538164,-9.176428],[2.849575,6.875288,2.669682,9.679614],[-1.789625,-2.143006,2.920080,-0.782938],[4.896864,1.422353,2.686211,-0.324887],[-0.103277,0.681250,-5.893414,6.239468],[-8.416108,2.022393,-3.920955,-0.730172],[-2.630482,3.568577,-0.302506,9.178013],[-2.995150,-4.719249,-8.728522,-6.160549],[-1.786014,1.037080,5.170628,-9.793972],[4.234076,-4.576123,2.880638,-0.708104],[5.899500,9.134676,-3.208274,-4.975603],[5.683421,-6.888188,7.182960,-6.976147],[1.227109,2.092782,2.151685,-7.674163],[0.935036,-7.295506,4.177166,-3.135493],[-5.529634,-6.910942,-5.488987,7.243071],[6.490572,-3.232627,-5.286471,4.008583],[-0.106995,-6.131328,-8.747967,5.388496],[8.681125,-7.542403,-5.112192,-1.529823],[6.521380,9.911285,9.961488,4.790169],[4.030006,2.744487,9.462244,3.059345],[7.274752,2.447961,-2.192205,-3.391135],[-1.510290,-4.383872,2.072693,9.042581],[-6.733996,5.570878,0.357001,-5.186244],[-5.846039,-3.954178,-3.202701,8.248414],[2.206656,-1.964866,5.041982,-4.196793],[8.832127,1.491173,2.887429,4.804197],[6.632210,9.768659,-3.957099,6.389929],[6.647981,-7.837580,8.943293,-8.995349],[-9.115042,-4.417406,9.360322,0.655034],[-5.948030,2.214164,3.485970,7.574981],[2.497568,3.658987,-6.541418,-5.276037],[-3.904008,-3.703458,9.528943,-4.342451],[5.532902,9.101303,5.697585,5.384009],[7.444199,0.513843,-0.727576,-0.543259],[6.624490,5.184190,-7.929305,-4.665075],[-1.942635,3.925345,1.227260,9.808460],[-7.181425,0.161889,0.252102,1.954020],[7.717673,7.172003,9.527185,-7.451431],[0.541488,3.792442,0.692715,-8.930289],[-7.292382,5.240924,9.616676,-0.820697],[-2.037513,-6.249366,-8.201634,-3.268477],[-5.801035,9.538723,4.388071,7.719275],[6.358025,9.376185,-4.237865,-2.382335],[0.092639,-8.703970,-7.474543,-0.137915],[-7.973876,-8.612782,1.372530,-9.821760],[-8.723399,1.272529,2.409417,-3.523869],[3.376054,-6.302417,6.857648,-1.828317],[-3.850579,-5.592269,6.763042,0.507141],[0.204261,5.445117,8.145578,-7.849052],[5.355518,5.514052,-0.816647,-1.046940],[0.966661,1.382832,6.808083,4.821193],[-0.963571,7.805723,4.944369,4.564933],[-4.791403,0.994216,6.448654,-9.404586],[6.480624,4.735959,4.792926,-3.941579],[-4.758105,-4.412727,3.379306,-2.346920],[4.387265,-9.587728,-5.131562,5.183283],[-6.832245,-6.102390,-1.509183,-6.572013],[4.604709,-5.135311,6.384895,0.029785],[-1.712119,-4.523328,-1.361321,-2.569876],[-1.318882,-3.163292,-8.288774,8.672007],[-1.334752,-5.021627,-4.073184,-5.819558],[2.226853,0.178564,9.008120,-0.923166],[-9.032770,-3.355882,3.718583,-7.800055],[6.211741,2.226227,-2.087161,-9.644322],[-9.875698,1.577963,9.880775,-5.891636],[-2.096149,-4.707127,7.922400,-2.696265],[2.676840,-0.761415,2.326198,-4.477692],[6.943246,-8.683185,-3.490473,-8.326971],[-7.779608,-2.542810,7.500361,-7.757030],[-6.990661,-1.742852,9.625615,8.682621],[1.363674,-3.894084,-3.205143,2.961111],[-4.040115,3.308970,-2.638324,3.650978],[7.273249,-4.525966,3.542785,0.848574],[6.384109,1.936337,-4.111446,5.951579],[-7.247863,-8.927623,-9.437976,-9.552537],[7.712846,-4.721941,2.809717,-8.815977],[8.322302,3.956179,1.556878,-9.641979],[-4.583906,-5.536908,-7.187470,-3.971183],[0.916284,3.922346,-4.650834,-4.767263],[8.210112,1.985231,-5.152278,4.547605],[6.511079,-4.400415,5.568306,0.660054],[-7.644379,-2.883424,-8.588333,0.156286],[9.628646,7.789575,-0.766795,-0.274550],[-3.510158,-1.156782,4.521007,-2.649020],[1.399104,-1.319554,4.758483,-5.795654],[7.950786,-7.466783,-4.477182,7.156547],[-1.931615,1.350693,-8.020952,-7.065725],[-3.438443,1.578204,4.758176,-1.713503],[5.247180,2.487170,-7.317538,-3.726478],[9.469209,7.715040,0.018267,2.949232],[-4.060914,-3.377621,-2.740799,9.162492],[-9.283001,5.407541,8.161911,-4.669704],[-2.770820,2.806431,8.714548,-6.209764],[0.340735,-9.198034,-9.810783,-6.996833],[1.277295,3.201439,-8.008308,-8.857625],[2.151909,-0.191082,6.708293,4.851772],[-3.425964,-7.632485,5.418094,-8.306059],[0.416731,0.310161,2.280954,-5.883437],[-2.264146,-4.787106,-6.324121,1.757619],[-2.611535,-3.234348,-5.677327,6.023090],[5.568718,4.137910,-5.568264,0.002257],[-9.609701,9.954843,-4.732466,-3.822243],[1.330741,0.951422,3.189269,-4.085098],[-7.984910,4.433853,-4.456884,-3.153432],[2.675445,-9.132959,0.695857,5.158735],[-8.770215,4.665683,-5.687066,-3.339565],[4.668813,0.294422,-1.413891,-6.115148],[0.268379,-8.871098,2.270596,4.045390],[-8.753956,-6.896156,3.172879,5.829353],[1.995991,-9.256131,8.527651,7.655186],[7.694400,1.948369,-5.131930,-6.521758],[-2.076950,-5.512747,4.624685,-3.976785],[4.452628,-5.308928,-1.461129,7.437537],[-0.762301,5.867015,-8.302383,-0.142781],[9.031654,6.918755,-2.306235,2.302805],[-4.845152,-8.574654,0.832278,3.813174],[6.460386,8.729453,-8.551714,6.975001],[7.655521,-0.082210,-9.274271,1.348241],[-7.554339,7.527397,-8.566014,7.871616],[-5.600811,3.783759,-0.671834,0.394832],[-3.321448,4.156726,4.346169,3.552553],[6.929698,-0.504660,4.190634,-3.713053],[-4.019002,-4.867240,-8.444124,-2.764580],[3.124059,8.646470,-0.337946,2.906877],[3.319126,6.667186,-4.116587,1.832226],[-8.657324,9.590978,8.340962,-4.511511],[9.906694,3.957926,-2.462717,1.906113],[0.134228,-0.488869,8.227436,-2.639120],[-0.196706,4.607297,-6.382522,1.665777],[-1.176521,-1.458559,-9.650285,3.737069],[0.961641,8.504579,-7.397830,9.922121],[2.627526,-9.959244,-0.605507,-0.458889],[-5.157141,9.000724,-4.497274,-4.752809],[4.134530,9.453721,8.897617,6.422950],[4.612078,-2.065846,3.165858,7.421335],[0.265895,7.726019,-0.291261,2.572685],[7.423657,7.827350,5.413509,-5.329602],[6.918339,-8.521564,1.038676,3.857985],[-2.897050,-8.873461,-4.957939,5.603003],[3.691049,2.619662,-6.099632,6.925996],[8.083761,9.498676,-4.226339,7.413617],[1.531404,-0.040777,5.763283,8.554035],[4.928986,-3.911358,0.675209,-9.646303]], dtype = "float32")#candidate|901|(180, 4)|const|float32
call_900 = relay.TupleGetItem(func_434_call(relay.reshape(const_901.astype('float32'), [8, 6, 15])), 0)
call_902 = relay.TupleGetItem(func_437_call(relay.reshape(const_901.astype('float32'), [8, 6, 15])), 0)
func_854_call = mod.get_global_var('func_854')
func_857_call = mutated_mod.get_global_var('func_857')
call_923 = relay.TupleGetItem(func_854_call(relay.reshape(const_901.astype('float32'), [12, 60])), 1)
call_924 = relay.TupleGetItem(func_857_call(relay.reshape(const_901.astype('float32'), [12, 60])), 1)
func_854_call = mod.get_global_var('func_854')
func_857_call = mutated_mod.get_global_var('func_857')
call_929 = relay.TupleGetItem(func_854_call(relay.reshape(call_900.astype('float32'), [12, 60])), 2)
call_930 = relay.TupleGetItem(func_857_call(relay.reshape(call_900.astype('float32'), [12, 60])), 2)
uop_941 = relay.atanh(call_900.astype('float64')) # shape=(8, 6, 15)
uop_943 = relay.atanh(call_902.astype('float64')) # shape=(8, 6, 15)
output = relay.Tuple([call_893,const_901,call_923,call_929,uop_941,])
output2 = relay.Tuple([call_894,const_901,call_924,call_930,uop_943,])
func_944 = relay.Function([], output)
mod['func_944'] = func_944
mod = relay.transform.InferType()(mod)
output = func_944()
func_945 = relay.Function([], output)
mutated_mod['func_945'] = func_945
mutated_mod = relay.transform.InferType()(mutated_mod)
func_700_call = mod.get_global_var('func_700')
func_701_call = mutated_mod.get_global_var('func_701')
call_1029 = relay.TupleGetItem(func_700_call(), 1)
call_1030 = relay.TupleGetItem(func_701_call(), 1)
var_1044 = relay.var("var_1044", dtype = "int8", shape = (16, 7, 12))#candidate|1044|(16, 7, 12)|var|int8
bop_1045 = relay.less(call_1029.astype('bool'), relay.reshape(var_1044.astype('bool'), relay.shape_of(call_1029))) # shape=(16, 7, 12)
bop_1048 = relay.less(call_1030.astype('bool'), relay.reshape(var_1044.astype('bool'), relay.shape_of(call_1030))) # shape=(16, 7, 12)
func_944_call = mod.get_global_var('func_944')
func_945_call = mutated_mod.get_global_var('func_945')
call_1051 = relay.TupleGetItem(func_944_call(), 0)
call_1052 = relay.TupleGetItem(func_945_call(), 0)
func_434_call = mod.get_global_var('func_434')
func_437_call = mutated_mod.get_global_var('func_437')
var_1065 = relay.var("var_1065", dtype = "float32", shape = (4, 180))#candidate|1065|(4, 180)|var|float32
call_1064 = relay.TupleGetItem(func_434_call(relay.reshape(var_1065.astype('float32'), [8, 6, 15])), 0)
call_1066 = relay.TupleGetItem(func_437_call(relay.reshape(var_1065.astype('float32'), [8, 6, 15])), 0)
output = relay.Tuple([bop_1045,call_1051,call_1064,var_1065,])
output2 = relay.Tuple([bop_1048,call_1052,call_1066,var_1065,])
func_1069 = relay.Function([var_1044,var_1065,], output)
mod['func_1069'] = func_1069
mod = relay.transform.InferType()(mod)
mutated_mod['func_1069'] = func_1069
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1069_call = mutated_mod.get_global_var('func_1069')
var_1071 = relay.var("var_1071", dtype = "int8", shape = (16, 7, 12))#candidate|1071|(16, 7, 12)|var|int8
var_1072 = relay.var("var_1072", dtype = "float32", shape = (4, 180))#candidate|1072|(4, 180)|var|float32
call_1070 = func_1069_call(var_1071,var_1072,)
output = call_1070
func_1073 = relay.Function([var_1071,var_1072,], output)
mutated_mod['func_1073'] = func_1073
mutated_mod = relay.transform.InferType()(mutated_mod)
func_944_call = mod.get_global_var('func_944')
func_945_call = mutated_mod.get_global_var('func_945')
call_1134 = relay.TupleGetItem(func_944_call(), 1)
call_1135 = relay.TupleGetItem(func_945_call(), 1)
func_1069_call = mod.get_global_var('func_1069')
func_1073_call = mutated_mod.get_global_var('func_1073')
const_1146 = relay.const([-3,6,8,5,-4,9,6,-2,-3,-4,-2,4,9,-3,7,10,2,-5,9,10,-6,-3,-2,-1,-3,-9,-5,5,2,-2,1,10,9,-6,7,4,-2,8,-1,10,-5,9,3,-1,-9,3,-6,-3,-10,3,-4,3,-3,1,-1,8,-1,3,8,-10,-10,8,10,10,10,-7,2,2,2,-9,-8,8,-3,-5,6,9,2,1,9,-2,-7,-5,1,-6,3,-6,2,10,7,-8,3,-9,7,9,-3,4,1,1,-7,7,-2,-10,-8,-2,6,-8,-7,5,8,9,6,1,3,1,9,-9,-2,-5,-7,-5,-7,3,-1,10,-4,-3,2,-2,-8,-4,-3,-7,-10,-5,-1,2,-3,-4,5,8,-2,-4,8,7,8,-2,4,6,-4,-5,-1,-3,-3,-1,-10,10,1,-4,9,-5,-5,-8,8,7,2,7,8,-10,-6,9,-1,7,4,-2,-5,10,4,10,-1,-6,-8,8,4,7,10,-7,7,-4,-5,6,3,-9,5,3,-8,-10,-1,-10,-8,-6,-5,9,8,2,2,-3,-3,6,-4,3,7,8,-2,4,7,8,6,1,3,-7,-1,-3,-5,-2,7,2,-7,-3,-1,8,-8,8,-4,-8,-2,5,5,10,9,10,-5,2,-5,2,-2,1,-7,-6,8,1,6,5,-5,1,5,10,6,-4,6,4,-6,-10,4,5,9,-3,-1,-6,3,10,1,-10,3,9,-7,9,-9,-8,6,-6,9,-10,10,-9,-5,1,-1,4,-6,-3,-7,-8,-3,9,8,-6,7,-9,4,-7,9,9,-2,5,-8,-1,-3,9,-3,-9,6,-10,-1,-7,9,6,-6,7,7,-4,-2,-10,-3,-3,9,-9,-7,-5,10,-5,-8,6,-7,-1,-4,-1,-1,-1,10,-3,6,-4,-3,-1,-3,-9,-9,-6,-7,-1,4,-9,-3,-1,6,9,-6,-5,4,-1,2,9,-6,-8,-3,-5,-10,-4,-7,-3,-1,-5,7,-5,5,7,5,-9,-10,5,3,-2,6,-6,-3,8,-3,-10,-2,-1,-10,-4,-2,-7,7,6,1,5,-6,-10,1,-2,10,5,6,9,-4,-2,-4,-1,-2,-3,6,10,-10,-10,8,-5,3,-2,-6,4,4,8,-8,10,-7,1,-2,7,1,5,9,-2,10,1,3,-7,5,4,6,1,9,-1,5,7,7,-7,-9,-1,1,6,9,-2,9,-8,-1,2,-3,5,1,3,-3,4,-9,3,-7,5,-10,-2,4,8,1,9,3,9,5,1,4,10,-2,-3,-1,7,-7,2,1,9,2,-5,4,-8,-7,7,-6,-3,1,9,6,3,5,5,7,-7,3,-3,-5,6,-2,3,1,10,4,3,-5,3,2,-7,3,-10,-5,3,-6,4,-1,9,3,-3,-9,6,3,-4,-7,-5,-3,7,10,10,9,7,10,-4,-5,9,3,8,5,10,10,-2,-2,3,-9,9,6,9,-2,-7,10,-3,-3,1,-10,2,8,-5,5,2,2,3,5,-1,7,-4,-8,-1,5,-1,-5,-8,-6,-1,2,6,-3,9,-3,5,-2,8,-5,1,3,8,4,10,9,-3,-7,5,8,-9,6,-10,4,-8,-6,-2,8,6,-6,-4,-10,-7,3,-6,-8,9,-9,-4,-6,-4,9,3,6,1,-8,10,-9,-2,9,-3,-2,-2,-3,6,9,4,-5,-7,-6,4,3,-1,-1,7,2,-8,4,7,-6,-9,-4,3,9,10,-8,9,-8,-6,-3,10,2,-2,-8,2,-4,1,3,5,5,7,-2,9,-7,1,-7,-7,-9,-3,-8,4,-7,7,-10,2,-8,3,5,1,4,-4,-3,9,-8,8,7,-5,7,-4,4,4,-5,3,-6,4,6,-2,6,8,2,-1,8,-5,8,3,7,6,-4,-4,3,2,-5,-8,-6,9,2,8,4,8,3,5,-9,-2,2,-3,5,6,-2,2,-1,-5,-9,-5,-8,-6,-4,-1,-4,6,-8,-2,-8,2,3,7,5,6,-9,-8,4,6,-6,1,-9,-7,9,9,-10,-7,-4,-8,8,-10,5,-2,1,8,-4,-7,-7,-9,6,4,-6,8,5,9,-9,10,9,6,-9,-9,-3,-5,3,-9,-1,-2,3,-9,7,2,8,-4,2,-7,4,6,-2,-10,-7,3,-3,9,6,-2,5,-3,-6,10,-4,-10,2,-8,9,1,-8,-5,9,6,-1,2,-4,9,-9,7,7,-4,3,5,-1,-9,-1,9,-10,9,5,9,6,7,-8,-3,-2,-4,-10,-1,5,9,8,-8,-4,10,-8,-7,9,-2,-10,2,1,-9,4,1,1,7,-9,-8,4,10,-8,-6,3,-2,2,-5,9,-3,5,4,5,7,-8,7,-4,-4,6,-7,-8,9,4,-5,9,10,4,-2,-7,3,4,7,-6,10,3,-10,8,-2,-3,-9,-5,-6,5,7,7,-9,-9,10,-9,9,8,2,-9,2,9,4,-10,-2,8,-7,9,-9,2,6,-8,3,6,-3,10,-7,-7,-5,-1,2,-6,8,4,-6,5,-10,-8,-10,-10,9,10,-1,7,4,4,-9,6,8,3,10,5,-2,3,-9,-6,-3,2,-1,-9,-7,4,3,-3,2,4,-5,-2,-4,-8,-7,1,9,3,4,-9,-5,7,3,-7,-8,-8,10,10,4,8,2,-1,-5,-3,6,-8,-4,-7,6,3,6,7,-1,3,4,-7,1,5,2,-4,1,7,8,-6,1,10,-1,5,-5,9,10,-4,-6,8,9,6,6,9,9,-2,-5,10,-1,-9,-3,-6,6,7,-8,-10,9,-1,1,-2,-5,3,-7,7,-5,-6,9,-5,-1,7,-9,8,-4,4,-1,8,-1,8,-1,7,5,8,9,-7,6,-10,4,5,-1,3,-5,7,-1,3,-2,-10,8,-9,9,-7,-3,-2,-7,4,5,-9,8,6,3,-1,-2,1,7,6,7,3,-10,-4,-1,6,-6,6,-3,3,-2,2,-3,3,-3,6,-10,-10,5,7,2,3,10,-2,-2,10,9,-9,5,2,10,-7,-8,-3,1,-10,5,1,-3,-10,-7,-10,-4,-9,-2,8,9,-6,-4,-2,1,10,-5,3,3,4,6,8,-6,1,-6,-2,6,-3,-7,5,-7,5,-5,4,6,10,6,1,5,-10,1,-5,9,5,-5,7,-7,-5,-3,-2,9,-10,-2,-4,3,5,7,-10,1,4,10,-7,-4,-9,3,7,-5,-6,-7,3,6,5,9,-10,5,-4,5,-9,-6,-7,4,-1,-8,8,-7,9,-9,5,-2,-8,-8,1,6,2,10,2,-3,5,-10,-9,3,2,-4,10,1,4,-2,5,-5,-1,8,3,8,5,10,-7,-3,5,-6,-5,2,-8,-4,-4,4,6,-9,-3,6,7,1,-8,-2,2,-7,7,-6,-4,10,1,-3,5,-7,-1,6,8,-1,-2,9,-3,10,-6,4,9,9,-7,-7,4,-1,-5,-4,-4,1,-10,-3,9,-10,2,-6,-8,-8,-7,5,7,8,-3,-6,7,-7,10,-7,-3,-5,-3,-5,5,-3,-8,-6,6,-8,-6,10], dtype = "int8")#candidate|1146|(1344,)|const|int8
call_1145 = relay.TupleGetItem(func_1069_call(relay.reshape(const_1146.astype('int8'), [16, 7, 12]), relay.reshape(call_1134.astype('float32'), [4, 180]), ), 0)
call_1147 = relay.TupleGetItem(func_1073_call(relay.reshape(const_1146.astype('int8'), [16, 7, 12]), relay.reshape(call_1134.astype('float32'), [4, 180]), ), 0)
uop_1150 = relay.rsqrt(call_1145.astype('float64')) # shape=(16, 7, 12)
uop_1152 = relay.rsqrt(call_1147.astype('float64')) # shape=(16, 7, 12)
func_700_call = mod.get_global_var('func_700')
func_701_call = mutated_mod.get_global_var('func_701')
call_1164 = relay.TupleGetItem(func_700_call(), 1)
call_1165 = relay.TupleGetItem(func_701_call(), 1)
uop_1167 = relay.acosh(call_1134.astype('float32')) # shape=(180, 4)
uop_1169 = relay.acosh(call_1135.astype('float32')) # shape=(180, 4)
func_854_call = mod.get_global_var('func_854')
func_857_call = mutated_mod.get_global_var('func_857')
call_1186 = relay.TupleGetItem(func_854_call(relay.reshape(uop_1167.astype('float32'), [12, 60])), 1)
call_1187 = relay.TupleGetItem(func_857_call(relay.reshape(uop_1167.astype('float32'), [12, 60])), 1)
output = relay.Tuple([const_1146,uop_1150,call_1164,uop_1167,call_1186,])
output2 = relay.Tuple([const_1146,uop_1152,call_1165,uop_1169,call_1187,])
func_1194 = relay.Function([], output)
mod['func_1194'] = func_1194
mod = relay.transform.InferType()(mod)
output = func_1194()
func_1195 = relay.Function([], output)
mutated_mod['func_1195'] = func_1195
mutated_mod = relay.transform.InferType()(mutated_mod)
func_944_call = mod.get_global_var('func_944')
func_945_call = mutated_mod.get_global_var('func_945')
call_1302 = relay.TupleGetItem(func_944_call(), 1)
call_1303 = relay.TupleGetItem(func_945_call(), 1)
output = call_1302
output2 = call_1303
func_1306 = relay.Function([], output)
mod['func_1306'] = func_1306
mod = relay.transform.InferType()(mod)
output = func_1306()
func_1307 = relay.Function([], output)
mutated_mod['func_1307'] = func_1307
mutated_mod = relay.transform.InferType()(mutated_mod)
func_807_call = mod.get_global_var('func_807')
func_809_call = mutated_mod.get_global_var('func_809')
call_1373 = relay.TupleGetItem(func_807_call(), 0)
call_1374 = relay.TupleGetItem(func_809_call(), 0)
func_1069_call = mod.get_global_var('func_1069')
func_1073_call = mutated_mod.get_global_var('func_1073')
const_1376 = relay.const([[4.091730,-1.170401,-9.649012,-4.195146,8.840738,-3.223616,-2.011120,9.975481,8.284912,-8.587718,-5.616823,-1.513965,2.298159,9.648346,-5.049944,-3.408591,5.228174,-4.476446,-2.358197,7.176010,-9.480404,1.925616,0.533053,-2.946625,-1.583999,-1.778845,7.712242,4.858158,-0.381006,-0.176784,-8.092865,-1.585142,0.776781,5.580073,6.908109,1.512721,9.011900,-3.414203,0.669889,1.187348,-1.381717,8.705121,-1.949192,-0.748434,0.720108,3.388114,7.438214,9.498562,-6.650893,-1.671541,8.169550,0.772361,-1.446775,7.477688,-3.064994,3.668060,-4.119448,-1.278396,9.336656,-9.503980,6.025859,-2.877946,0.468488,0.480479,2.527742,-8.629700,-8.732628,3.323204,1.734311,-0.197470,7.339205,-2.757150,-8.935011,-9.380039,1.525773,-5.769164,-4.142653,1.411078,-5.402546,2.379481,-5.554247,7.642172,0.755218,2.649106,9.360231,-1.699525,0.199350,2.833187,4.809400,-0.677223,-3.570511,5.021860,9.783799,-7.777340,6.205370,9.908343,0.218134,-9.695778,7.279250,-2.614215,-3.759394,7.875106,6.294535,5.837846,-7.882213,-2.155155,1.206604,3.529789,-1.136407,-1.560570,8.474932,-4.558598,-2.066298,7.867884,-6.385266,0.967797,-6.758255,7.534571,9.840056,-0.151999,-4.805289,-3.811638,-7.748993,-0.213176,3.832611,8.115382,0.871924,-2.104098,-5.042511,2.817562,8.564014,8.389554,-9.459877,8.387231,-3.783303,2.932615,-7.387711,-3.947349,-1.789988,-8.818927,8.741284,-8.931122,0.567337,5.928198,0.104481,-2.627301,8.835356,-1.614518,-2.014580,1.926754,-5.904444,1.379019,-5.071936,7.460510,6.876483,-3.544838,9.065178,2.900430,8.892896,2.662859,1.941776,2.714791,8.728092,-2.540296,-5.501745,-2.981733,4.306000,3.636935,4.155214,-7.258494,-4.457645,-0.161234,7.001800,-3.248412,-0.716334,4.267879,-1.932967,-6.215581,8.366508,2.001620,-5.045056,-7.619602,-2.798911,5.235685,-6.510883,-7.502960,-3.142668,4.043010,-8.977805,2.038203,3.774448,-5.436318,9.211675,8.692015,-6.781195,-7.986530,1.095565,-9.937647,9.880616,8.823944,2.055465,-4.918465,-0.624047,6.344334,-7.594964,0.652583,-2.023152,3.313750,-1.820556,-0.715177,8.824463,5.542508,8.364677,-7.030360,4.813892,-9.266911,6.869447,8.196657,-1.852435,-0.624537,8.236961,-6.245003,-3.266986,7.994405,6.990356,3.810554,1.187932,4.204025,-3.691601,1.202867,5.623921,-8.120227,-9.472491,5.213311,-9.882918,6.564232,6.143526,8.319113,3.412117,1.768403,-5.349727,-1.236702,2.126245,-6.490136,2.773420,-1.762791,-8.845104,-4.686913,-1.777651,7.391922,9.507599,-2.332074,2.533938,-8.830860,-9.995772,9.367724,-7.629694,-1.745498,5.885654,3.264005,-7.375700,6.952303,-4.495485,-6.713746,1.727146,-5.516122,-2.236375,-2.084324,-8.849538,1.555907,-1.592438,-4.788433,-9.151260,-2.984045,6.139378,-5.982879,1.206993,-3.575138,0.705857,-8.756453,5.648912,-5.131030,4.310494,2.039789,6.676523,4.568608,2.858717,9.485503,-0.150336,3.839235,0.589140,-2.595317,5.499458,9.932708,6.939935,-2.527668,-5.572526,-6.051244,8.711856,3.359144,-3.106467,-6.189177,-8.897496,7.748106,4.700415,5.470765,6.501248,-9.645387,-9.855070,5.037508,1.777908,-5.761206,-1.429286,-8.714289,-4.916189,4.943995,-7.133652,-2.308303,2.476727,1.412208,-9.255082,2.445527,-4.938138,0.957075,3.538259,-7.823232,-4.211830,-8.048719,-2.721313,-8.840514,7.574603,0.977514,3.284384,-4.487005,-6.369321,2.667867,-8.906899,-0.572414,-6.789817,-8.097273,-3.784631,3.698460,1.155656,-7.186926,-4.032449,8.840665,-3.336904,4.619118,-1.596079,-1.935236,7.351636,-0.947241,-2.646807,0.677241,-8.539037,3.962469,-4.787212,6.277620,-8.113468,9.882406,-0.825278,-2.923358,-3.148119,-1.354623,-1.520117,9.726676,-2.636269,6.693381,-8.927166,-9.750857,-4.944831,9.830622,-9.901146,0.862804,-7.729029,6.164610,4.403054,1.391984,8.927348,-8.263558,-9.076371,6.934471,2.369018,-6.194760,2.252294,-3.241468,-3.565957,3.504245,-7.672494,2.960169,8.266914,3.610266,3.484480,-2.526777,-0.914443,-4.834073,-4.409915,-7.419686,-0.836571,9.548247,7.949351,-4.035418,-8.223601,-5.075961,-1.631647,8.584929,-2.125358,-4.931403,-4.178704,-3.145547,9.226953,7.084544,-6.392170,-4.232345,-4.038585,8.798114,6.667550,8.856093,8.303461,7.577649,-3.605141,8.602747,9.644670,-5.181951,1.987456,6.578807,1.605999,-1.671623,-9.694617,-6.804492,7.399752,-4.896945,4.846417,-2.237190,1.682558,-7.118947,-6.619319,-1.432339,4.896534,8.087476,7.990127,-9.848224,-6.632501,-9.468893,9.794006,8.759894,-1.302900,2.804116,-8.575887,-9.741511,3.123882,0.913379,3.749762,-0.571577,-8.227728,2.286390,-5.510341,-2.355419,-1.710014,3.300822,0.745504,-5.661800,-8.844778,-0.489144,2.351157,-9.650685,8.340899,4.224540,2.833675,-3.826428,7.708988,5.467683,8.415275,-6.431513,-6.041458,7.688226,4.400778,-8.112859,0.349953,-2.716611,8.328213,-7.761201,-0.752032,6.858734,6.845282,1.633609,1.939892,-6.701548,-9.145339,7.334398,-8.822496,-0.469429,-7.385838,8.959990,6.185751,5.496997,-5.758616,-3.071479,4.104835,-8.753581,6.473982,5.514843,-0.297035,0.374965,0.748285,4.707128,4.648956,5.640911,-7.269364,5.224587,-0.310518,5.440968,-3.144146,0.081208,5.853875,-6.130277,9.098670,-1.015058,7.307178,-9.387482,-1.973312,-3.843574,6.915413,5.344222,-3.342495,-6.578569,8.727313,6.372979,5.028065,3.211633,-9.289763,8.410173,-3.832218,6.900831,9.512460,-8.815625,-6.299909,8.063040,-4.983415,0.699812,0.241842,6.262002,2.629116,9.471139,1.431760,-8.920030,-9.964387,4.255512,6.716943,5.562268,-1.576509,-9.683094,-9.689741,-1.266719,-5.680511,-8.478569,5.428025,1.919236,-3.978728,5.517734,2.618220,-3.492582,7.951846,-5.728487,-5.766492,6.633335,8.235844,0.604384,6.091832,-0.047713,-0.500156,-6.927731,-7.334256,-5.863946,-1.323078,-1.866783,5.771776,1.658312,-6.228612,8.462666,3.267662,1.769313,-4.566385,9.526612,0.982987,-1.005904,-6.879156,1.492077,-5.960221,1.928130,-4.984963,-5.595690,-6.989468,-8.128087,-5.375141,-0.675624,0.033842,-5.039688,-1.519200,0.629268,-8.007835,4.221558,-8.161670,6.964865,3.932405,8.846035,1.283192,5.551018,-0.714759,-5.287419,-7.634900,-6.173075,8.023802,5.861935,-8.890751,1.524186,-3.458828,8.131646,9.789332,2.211866,-2.900121,-0.475750,0.520711,5.910918,-9.391040,-7.807527,-4.419497,-4.654183,0.882800,-4.113289,-8.993950,-1.883883,-5.920607,-1.557152,2.014806,-9.726197,-1.820205,5.525421,8.318252,4.203779,-5.871676,-5.857655,5.779282,-8.101040,-2.686510,-6.450535,-3.660697,-7.288647,3.347694,5.340357,-8.259640,-3.430332,-8.944302,-5.095422,-7.102496,2.159634,1.076364,-5.305225,-7.324704,-4.419860,5.825564,-5.445649,0.713156,-5.834714,8.587077,1.831456,-8.537702,-7.555760,8.123134,-7.506293,8.654829,8.685592,0.183401,3.648313,-9.928967,-0.273387,-0.031625,-6.978321,6.176499,-2.421323,-3.392533,6.578315,9.887418,5.838067,-0.124055,1.504492,-9.790607,3.671691,-2.839873,9.368880,-8.918585,-2.568038,-3.524327,-3.687791,7.878782,-8.085413,5.317895,-8.541592,-9.178938,3.866053,7.643502,-5.904330,2.212752,1.441825,-0.312493,3.365574,3.939163,5.712608,-5.608166,4.433984,9.644191,4.129763,0.423978,5.038289,9.207090,9.632308,5.034710,-4.742822,0.795306,-1.198548]], dtype = "float32")#candidate|1376|(1, 720)|const|float32
call_1375 = relay.TupleGetItem(func_1069_call(relay.reshape(call_1373.astype('int8'), [16, 7, 12]), relay.reshape(const_1376.astype('float32'), [4, 180]), ), 1)
call_1377 = relay.TupleGetItem(func_1073_call(relay.reshape(call_1373.astype('int8'), [16, 7, 12]), relay.reshape(const_1376.astype('float32'), [4, 180]), ), 1)
uop_1379 = relay.log(call_1373.astype('float32')) # shape=(168, 8)
uop_1381 = relay.log(call_1374.astype('float32')) # shape=(168, 8)
func_434_call = mod.get_global_var('func_434')
func_437_call = mutated_mod.get_global_var('func_437')
call_1388 = relay.TupleGetItem(func_434_call(relay.reshape(const_1376.astype('float32'), [8, 6, 15])), 0)
call_1389 = relay.TupleGetItem(func_437_call(relay.reshape(const_1376.astype('float32'), [8, 6, 15])), 0)
func_786_call = mod.get_global_var('func_786')
func_788_call = mutated_mod.get_global_var('func_788')
call_1405 = relay.TupleGetItem(func_786_call(relay.reshape(call_1388.astype('float32'), [4, 180])), 6)
call_1406 = relay.TupleGetItem(func_788_call(relay.reshape(call_1388.astype('float32'), [4, 180])), 6)
bop_1419 = relay.bitwise_or(call_1388.astype('uint16'), relay.reshape(const_1376.astype('uint16'), relay.shape_of(call_1388))) # shape=(8, 6, 15)
bop_1422 = relay.bitwise_or(call_1389.astype('uint16'), relay.reshape(const_1376.astype('uint16'), relay.shape_of(call_1389))) # shape=(8, 6, 15)
bop_1423 = relay.right_shift(uop_1379.astype('uint16'), relay.reshape(call_1373.astype('uint16'), relay.shape_of(uop_1379))) # shape=(168, 8)
bop_1426 = relay.right_shift(uop_1381.astype('uint16'), relay.reshape(call_1374.astype('uint16'), relay.shape_of(uop_1381))) # shape=(168, 8)
output = relay.Tuple([call_1375,call_1405,bop_1419,bop_1423,])
output2 = relay.Tuple([call_1377,call_1406,bop_1422,bop_1426,])
func_1428 = relay.Function([], output)
mod['func_1428'] = func_1428
mod = relay.transform.InferType()(mod)
output = func_1428()
func_1429 = relay.Function([], output)
mutated_mod['func_1429'] = func_1429
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1481 = relay.var("var_1481", dtype = "float32", shape = (10, 4, 15))#candidate|1481|(10, 4, 15)|var|float32
const_1482 = relay.const([[[-0.587243,-1.245756,5.679939,-1.079263,3.616567,-2.595493,-6.636477,8.844675,-2.014113,5.041111,4.998980,-4.123038,-8.887102,2.041679,2.031984],[-0.070822,-3.775544,3.659118,1.984085,-8.423833,-0.971369,-8.054230,1.347940,4.527495,9.638809,-0.332033,-1.694193,6.345011,-4.581724,-8.269834],[8.905421,4.893474,7.323305,4.290779,-8.950882,3.039296,-6.827273,2.837997,-7.964816,7.062126,3.971009,-3.652084,7.271973,-9.286903,-2.323988],[4.033794,-5.688652,3.672090,-6.586958,-8.183143,4.598885,0.423522,4.410772,4.376162,8.094843,-6.605866,5.537754,5.235369,-5.339126,-3.004134]],[[-9.948499,-6.547036,5.267638,-6.813065,-4.145911,-6.615854,1.877999,5.320561,6.695319,-7.817857,-3.235529,6.133933,0.981530,-2.394674,7.312044],[8.535151,-4.488139,-6.518348,6.509549,6.605194,3.342282,9.415832,-0.692034,7.108945,-9.615599,-0.249707,-3.569597,-2.209220,-3.593981,4.317776],[4.757225,0.581305,-9.124917,7.500913,7.715921,1.903235,8.655127,3.749556,-0.819901,6.082382,-2.350012,6.899011,7.160435,-2.144442,-0.657685],[4.657344,-4.338583,6.415299,-9.823718,7.999281,-2.071386,-2.558922,5.186673,9.175269,5.493300,-6.242364,-3.991807,-3.761487,5.048097,-7.579439]],[[5.497423,-3.375484,-4.857794,-4.035787,-1.495346,-0.099567,6.863711,-5.091494,-5.660244,-8.006612,-6.719496,5.234668,-7.903399,4.678716,2.286126],[8.599277,9.588384,-2.079384,5.510950,6.001822,-6.197930,-2.436490,-6.368398,7.439030,-8.985721,-6.191736,-1.757961,-5.391478,-1.590101,4.588420],[6.382433,-8.364261,-5.194655,-4.292392,1.545446,3.851640,-3.729339,4.609238,4.037504,8.174189,-5.544751,-3.619768,-3.849496,1.100210,-7.108976],[-0.273107,7.314847,1.606348,3.073737,-8.922633,1.304317,0.565239,6.322345,-1.679381,5.248452,3.729853,-6.667278,-8.619032,-6.651552,4.662426]],[[-7.280171,-2.305797,-4.769415,2.279008,7.544037,-6.897414,-9.190374,-3.773398,4.707403,-7.744785,7.594175,-5.906485,1.262103,-3.504812,0.197941],[4.099122,1.127158,6.712762,2.324311,6.245202,-5.195852,2.019610,3.898158,5.288737,-6.374368,0.694332,6.262750,4.921466,5.430837,-9.996206],[2.481001,-3.292724,8.923618,-3.723150,3.218399,4.201996,-2.195714,-4.266927,9.526754,-1.159483,6.964548,5.174782,0.733918,5.012777,-6.159245],[1.261927,6.295471,-2.943364,-8.086978,7.522366,-2.185965,9.808607,1.573368,9.857954,3.622111,1.423448,8.717382,5.405323,4.927591,2.803607]],[[-8.371856,-2.430345,2.888376,-7.135735,8.361814,0.428237,9.818602,-1.092025,-6.876623,0.177936,1.201884,-4.407810,1.136546,-9.380262,-1.914874],[-7.928062,-5.357573,8.695099,4.186582,5.563650,6.262423,-4.141458,-2.919863,-0.358674,-9.867408,-2.291844,-9.285147,5.237106,2.414607,-6.804988],[6.251051,-2.970948,6.184123,5.430936,-1.829622,-2.129081,7.204965,-3.209311,6.892820,-8.674666,-7.630066,-3.504528,5.777698,-4.676737,2.086847],[6.303209,3.816293,-9.807917,5.248293,5.849979,3.448057,4.063284,-0.206241,-4.784950,-0.322825,-9.608729,8.434063,8.898758,-2.621233,2.755602]],[[8.343248,-6.733067,6.726913,7.153912,3.090252,-9.235583,-6.553444,9.899939,5.937818,2.999200,1.980815,-6.269448,-0.060514,3.699072,5.780470],[-8.830273,9.755485,6.026629,2.760699,0.645695,4.114311,7.765997,-4.522803,-3.007981,-5.563870,6.617068,1.790196,4.842073,-1.270774,-2.390445],[9.041693,-3.639573,-3.155145,9.186184,-1.590827,-0.676267,-0.583673,-2.819720,-0.542415,-7.036329,-4.807355,-2.976817,5.680983,2.495529,1.834868],[8.310927,-1.625508,5.984609,7.186211,-0.359597,-0.390835,7.659864,9.998971,8.181040,3.289219,-5.656504,7.391008,4.258914,-0.738270,-0.527079]],[[0.963958,9.405501,0.417228,-4.070542,2.413263,4.388614,7.109648,1.860519,-7.655950,-1.943796,-0.851050,5.390007,-7.606860,7.667598,4.873832],[-3.266757,1.699210,-1.612563,-1.421156,-2.002222,1.177160,9.238713,-2.248175,4.594800,0.410228,-9.938695,7.855842,-0.979909,6.667541,-4.598536],[3.146665,9.452820,-1.762914,-3.666502,-8.059364,0.370346,-5.530966,-6.227046,2.580791,1.568012,5.929945,-4.756582,8.774457,-3.656140,-3.844246],[2.388738,3.439140,0.422729,-3.717440,6.470632,-5.290553,-0.419149,4.768759,5.327784,3.857637,-9.803250,5.269963,6.827764,5.816280,1.449175]],[[-6.721372,9.579340,4.380050,-9.919448,-9.562049,-4.421257,-0.718054,0.778192,6.062007,-8.371367,7.332110,3.026661,4.022298,6.143888,3.395421],[3.738998,3.712569,1.418773,7.240191,-7.520811,6.081847,-1.213074,-6.731263,-9.456253,-2.637875,-4.211702,6.081109,-4.450616,-6.479077,6.459136],[-6.810994,9.696546,8.953419,-4.418593,-2.110695,8.675396,5.376556,9.348010,4.266077,2.922287,-4.775394,-1.370106,-8.799186,9.623636,-4.335839],[-1.814151,8.760330,6.145321,-6.890740,7.494741,-7.320852,2.683321,-1.810261,8.365390,-0.522222,9.079759,-1.750760,-0.166047,8.964425,3.504927]],[[-7.342354,-3.725244,-2.488549,-8.202064,-1.300725,0.246431,-1.581425,-6.404058,-5.476500,2.804941,6.560572,9.811456,-8.791017,-8.361514,0.050116],[1.119940,6.492438,7.647788,8.564627,-5.962061,7.608835,3.353487,-3.058494,-6.367840,4.155394,2.650149,4.623695,2.942086,-0.473410,1.276968],[0.382682,0.193266,-1.245976,-6.418754,6.234716,4.448302,2.096567,-9.881966,4.713546,-7.519137,-9.815021,5.139675,-9.299671,3.703206,-4.173829],[2.487645,-0.467100,-7.135840,8.837551,-1.489419,9.260543,-2.538963,-2.154811,1.896148,7.210538,4.806523,5.641964,0.405159,6.619808,1.706028]],[[5.881758,5.617124,7.425252,0.619573,8.184128,3.960883,5.743931,2.568467,3.760770,6.130038,-8.466519,-5.971918,3.061379,6.172283,1.154860],[-1.102761,7.656622,-5.885110,2.050152,-3.408186,3.225766,-0.698668,9.896833,4.424819,-4.720908,4.462551,4.976731,-0.084424,-5.838167,5.245844],[-5.502464,-9.864716,3.599316,8.296892,-4.566880,0.145631,0.199135,3.346355,8.682087,2.419734,9.137735,-8.176665,4.314210,-3.924115,8.455153],[6.592499,4.979673,4.342909,-0.962150,-3.565066,-8.355179,-5.946020,8.782320,-9.164350,-1.747019,-2.447682,4.119369,-5.033246,2.370932,-2.132603]]], dtype = "float32")#candidate|1482|(10, 4, 15)|const|float32
bop_1483 = relay.divide(var_1481.astype('float32'), relay.reshape(const_1482.astype('float32'), relay.shape_of(var_1481))) # shape=(10, 4, 15)
output = bop_1483
output2 = bop_1483
func_1498 = relay.Function([var_1481,], output)
mod['func_1498'] = func_1498
mod = relay.transform.InferType()(mod)
var_1499 = relay.var("var_1499", dtype = "float32", shape = (10, 4, 15))#candidate|1499|(10, 4, 15)|var|float32
output = func_1498(var_1499)
func_1500 = relay.Function([var_1499], output)
mutated_mod['func_1500'] = func_1500
mutated_mod = relay.transform.InferType()(mutated_mod)
func_700_call = mod.get_global_var('func_700')
func_701_call = mutated_mod.get_global_var('func_701')
call_1502 = relay.TupleGetItem(func_700_call(), 2)
call_1503 = relay.TupleGetItem(func_701_call(), 2)
output = call_1502
output2 = call_1503
func_1521 = relay.Function([], output)
mod['func_1521'] = func_1521
mod = relay.transform.InferType()(mod)
output = func_1521()
func_1522 = relay.Function([], output)
mutated_mod['func_1522'] = func_1522
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1306_call = mod.get_global_var('func_1306')
func_1307_call = mutated_mod.get_global_var('func_1307')
call_1550 = func_1306_call()
call_1551 = func_1306_call()
func_1194_call = mod.get_global_var('func_1194')
func_1195_call = mutated_mod.get_global_var('func_1195')
call_1561 = relay.TupleGetItem(func_1194_call(), 2)
call_1562 = relay.TupleGetItem(func_1195_call(), 2)
uop_1564 = relay.log10(call_1561.astype('float32')) # shape=(16, 7, 12)
uop_1566 = relay.log10(call_1562.astype('float32')) # shape=(16, 7, 12)
func_786_call = mod.get_global_var('func_786')
func_788_call = mutated_mod.get_global_var('func_788')
call_1568 = relay.TupleGetItem(func_786_call(relay.reshape(call_1550.astype('float32'), [4, 180])), 8)
call_1569 = relay.TupleGetItem(func_788_call(relay.reshape(call_1550.astype('float32'), [4, 180])), 8)
func_944_call = mod.get_global_var('func_944')
func_945_call = mutated_mod.get_global_var('func_945')
call_1573 = relay.TupleGetItem(func_944_call(), 1)
call_1574 = relay.TupleGetItem(func_945_call(), 1)
func_854_call = mod.get_global_var('func_854')
func_857_call = mutated_mod.get_global_var('func_857')
call_1577 = relay.TupleGetItem(func_854_call(relay.reshape(call_1573.astype('float32'), [12, 60])), 2)
call_1578 = relay.TupleGetItem(func_857_call(relay.reshape(call_1573.astype('float32'), [12, 60])), 2)
func_700_call = mod.get_global_var('func_700')
func_701_call = mutated_mod.get_global_var('func_701')
call_1583 = relay.TupleGetItem(func_700_call(), 2)
call_1584 = relay.TupleGetItem(func_701_call(), 2)
output = relay.Tuple([call_1550,uop_1564,call_1568,call_1573,call_1577,call_1583,])
output2 = relay.Tuple([call_1551,uop_1566,call_1569,call_1574,call_1578,call_1584,])
func_1592 = relay.Function([], output)
mod['func_1592'] = func_1592
mod = relay.transform.InferType()(mod)
mutated_mod['func_1592'] = func_1592
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1592_call = mutated_mod.get_global_var('func_1592')
call_1593 = func_1592_call()
output = call_1593
func_1594 = relay.Function([], output)
mutated_mod['func_1594'] = func_1594
mutated_mod = relay.transform.InferType()(mutated_mod)
func_807_call = mod.get_global_var('func_807')
func_809_call = mutated_mod.get_global_var('func_809')
call_1654 = relay.TupleGetItem(func_807_call(), 1)
call_1655 = relay.TupleGetItem(func_809_call(), 1)
output = call_1654
output2 = call_1655
func_1663 = relay.Function([], output)
mod['func_1663'] = func_1663
mod = relay.transform.InferType()(mod)
output = func_1663()
func_1664 = relay.Function([], output)
mutated_mod['func_1664'] = func_1664
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1592_call = mod.get_global_var('func_1592')
func_1594_call = mutated_mod.get_global_var('func_1594')
call_1715 = relay.TupleGetItem(func_1592_call(), 5)
call_1716 = relay.TupleGetItem(func_1594_call(), 5)
func_1521_call = mod.get_global_var('func_1521')
func_1522_call = mutated_mod.get_global_var('func_1522')
call_1717 = func_1521_call()
call_1718 = func_1521_call()
output = relay.Tuple([call_1715,call_1717,])
output2 = relay.Tuple([call_1716,call_1718,])
func_1719 = relay.Function([], output)
mod['func_1719'] = func_1719
mod = relay.transform.InferType()(mod)
mutated_mod['func_1719'] = func_1719
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1719_call = mutated_mod.get_global_var('func_1719')
call_1720 = func_1719_call()
output = call_1720
func_1721 = relay.Function([], output)
mutated_mod['func_1721'] = func_1721
mutated_mod = relay.transform.InferType()(mutated_mod)
func_700_call = mod.get_global_var('func_700')
func_701_call = mutated_mod.get_global_var('func_701')
call_1811 = relay.TupleGetItem(func_700_call(), 2)
call_1812 = relay.TupleGetItem(func_701_call(), 2)
output = call_1811
output2 = call_1812
func_1817 = relay.Function([], output)
mod['func_1817'] = func_1817
mod = relay.transform.InferType()(mod)
output = func_1817()
func_1818 = relay.Function([], output)
mutated_mod['func_1818'] = func_1818
mutated_mod = relay.transform.InferType()(mutated_mod)
func_830_call = mod.get_global_var('func_830')
func_832_call = mutated_mod.get_global_var('func_832')
call_1856 = relay.TupleGetItem(func_830_call(), 0)
call_1857 = relay.TupleGetItem(func_832_call(), 0)
func_1817_call = mod.get_global_var('func_1817')
func_1818_call = mutated_mod.get_global_var('func_1818')
call_1874 = func_1817_call()
call_1875 = func_1817_call()
var_1881 = relay.var("var_1881", dtype = "bool", shape = (168, 8))#candidate|1881|(168, 8)|var|bool
bop_1882 = relay.subtract(call_1874.astype('uint16'), relay.reshape(var_1881.astype('uint16'), relay.shape_of(call_1874))) # shape=(168, 8)
bop_1885 = relay.subtract(call_1875.astype('uint16'), relay.reshape(var_1881.astype('uint16'), relay.shape_of(call_1875))) # shape=(168, 8)
bop_1901 = relay.less(bop_1882.astype('bool'), relay.reshape(var_1881.astype('bool'), relay.shape_of(bop_1882))) # shape=(168, 8)
bop_1904 = relay.less(bop_1885.astype('bool'), relay.reshape(var_1881.astype('bool'), relay.shape_of(bop_1885))) # shape=(168, 8)
const_1912 = relay.const([[True,False,False,True,False,True,True,False],[True,True,False,False,False,False,False,False],[True,False,True,False,True,False,True,False],[True,True,True,True,False,False,False,True],[False,False,True,False,False,False,False,True],[True,False,True,False,True,False,False,False],[False,True,False,True,True,True,True,True],[False,True,False,False,True,False,False,True],[True,True,True,True,True,True,False,False],[False,False,False,True,False,False,True,False],[False,True,True,True,True,False,False,True],[True,True,False,False,True,False,True,False],[True,False,True,False,False,False,False,False],[False,True,True,False,True,False,False,True],[True,True,True,False,True,True,False,True],[False,False,True,False,False,True,False,True],[True,False,True,True,False,True,True,False],[False,False,False,False,False,False,True,False],[True,False,False,False,False,False,True,False],[False,True,False,False,False,True,True,True],[True,False,True,True,False,False,True,False],[True,True,False,True,True,False,True,False],[False,False,False,False,False,False,True,True],[True,True,True,True,False,True,False,True],[True,True,False,True,False,True,False,True],[False,False,False,True,False,False,True,True],[False,False,True,False,False,False,True,True],[False,True,False,False,False,False,False,True],[False,False,True,False,False,True,True,False],[True,True,False,False,True,True,True,True],[True,False,False,True,True,True,False,True],[False,False,True,False,True,True,False,True],[False,True,True,False,False,False,False,True],[True,False,True,True,False,False,False,True],[True,False,True,False,False,True,True,False],[False,False,True,True,False,True,False,False],[False,True,False,False,True,False,True,False],[True,True,True,True,True,False,False,False],[False,True,False,False,True,True,True,True],[False,False,False,False,True,False,False,True],[True,False,True,False,False,False,False,True],[True,False,False,True,False,True,True,False],[False,False,True,True,True,False,False,True],[False,False,True,True,False,True,False,True],[True,True,True,False,True,False,True,True],[False,False,False,False,True,True,False,True],[True,True,True,True,True,True,False,True],[False,False,False,False,True,False,False,True],[True,True,True,True,True,False,False,True],[False,False,True,True,True,False,True,True],[True,False,False,True,True,False,False,True],[False,True,False,False,True,False,True,True],[True,False,False,True,False,False,False,True],[False,False,False,True,False,True,False,True],[True,False,False,True,True,True,False,True],[False,False,True,True,False,False,False,False],[False,False,True,True,False,True,False,False],[True,False,False,True,False,False,True,True],[True,True,False,False,False,True,True,False],[True,True,False,False,True,False,False,False],[True,True,True,True,False,True,False,False],[True,False,True,True,False,False,True,True],[False,True,True,False,False,True,True,False],[False,True,False,True,True,False,True,False],[True,False,False,True,True,False,True,True],[False,True,False,False,True,True,False,True],[True,True,False,True,False,True,True,False],[False,True,False,True,True,True,False,False],[False,False,False,True,False,True,False,False],[False,True,False,False,False,False,True,True],[False,True,True,False,False,False,True,False],[False,True,False,True,False,False,False,False],[False,False,False,False,True,False,False,False],[True,False,False,False,True,True,True,True],[True,False,True,True,True,False,False,True],[True,False,False,False,False,False,False,False],[False,False,False,False,True,False,False,False],[False,False,False,True,True,False,False,False],[False,False,False,True,False,False,False,False],[False,True,False,False,True,False,False,False],[True,False,False,False,False,False,False,False],[False,True,False,True,True,False,False,True],[False,False,True,True,False,True,True,False],[False,True,False,False,True,False,False,False],[False,False,False,False,False,True,False,False],[False,False,True,True,True,True,False,True],[True,True,False,True,True,True,True,True],[False,True,True,False,True,True,False,True],[True,True,True,True,False,False,True,False],[False,True,True,True,False,True,True,False],[True,True,True,False,True,True,True,True],[False,True,True,False,False,False,True,False],[True,True,True,True,True,True,True,True],[False,False,True,False,True,False,False,False],[True,False,False,False,True,False,False,True],[True,True,True,True,True,True,True,False],[False,True,True,True,False,False,False,False],[False,True,False,False,True,True,False,True],[True,True,True,False,True,True,True,False],[True,True,True,False,False,True,True,False],[False,False,True,False,True,True,False,True],[True,False,True,False,True,False,True,False],[True,True,False,False,False,False,False,True],[True,True,False,True,False,True,True,False],[True,False,False,False,True,False,False,False],[True,True,True,False,True,False,True,False],[True,True,False,False,True,False,True,False],[False,True,True,False,False,False,True,False],[False,True,False,False,False,False,False,True],[False,True,True,True,False,False,False,True],[False,False,True,True,True,True,False,True],[False,True,True,True,False,False,True,False],[False,True,False,False,False,True,True,False],[False,False,True,False,True,True,False,True],[False,True,False,True,False,False,False,True],[False,True,False,False,False,True,False,False],[False,True,False,False,False,True,False,False],[True,False,True,False,True,True,True,True],[False,False,False,True,False,False,False,False],[False,False,False,False,True,True,False,True],[False,False,False,False,True,False,False,False],[False,True,True,False,False,False,True,True],[False,False,False,True,False,False,True,False],[False,False,False,True,True,False,False,True],[False,False,True,True,True,True,False,True],[True,True,True,True,True,True,False,False],[True,False,True,True,False,False,False,False],[False,False,True,True,True,False,False,True],[False,True,True,True,True,True,True,False],[False,False,True,True,True,False,True,False],[False,False,False,True,True,False,True,True],[False,True,True,True,True,True,True,True],[True,False,True,False,True,False,False,True],[False,True,False,False,True,False,False,False],[False,False,True,True,False,False,True,True],[True,False,False,False,True,True,False,False],[True,True,False,False,True,False,True,True],[False,False,True,True,False,False,True,False],[False,False,False,True,True,True,False,False],[True,False,True,False,False,True,True,True],[False,True,False,True,False,True,False,False],[True,False,True,True,False,True,False,False],[True,False,True,False,True,True,True,False],[False,False,False,False,True,True,True,True],[True,True,False,True,True,False,True,False],[False,False,False,False,True,False,True,True],[False,False,True,True,False,False,True,False],[False,True,False,True,True,True,False,False],[True,False,True,False,True,False,False,True],[False,False,False,False,False,True,True,False],[True,False,True,True,True,False,True,True],[False,True,True,True,True,True,True,False],[False,False,False,True,False,False,False,False],[True,False,False,True,True,True,False,True],[False,True,False,True,False,False,False,False],[True,True,True,False,True,False,False,True],[False,False,False,False,True,False,False,False],[True,True,True,False,False,True,True,False],[True,False,True,True,False,False,True,True],[True,False,False,False,False,False,True,False],[True,True,False,False,False,False,False,True],[True,True,True,False,True,True,False,False],[True,False,True,True,False,False,False,True],[False,False,False,False,True,True,False,False],[True,False,False,True,False,False,False,False],[True,True,False,False,False,False,False,True],[False,True,False,False,True,True,False,True],[True,False,True,False,True,True,False,False]], dtype = "bool")#candidate|1912|(168, 8)|const|bool
bop_1913 = relay.bitwise_and(bop_1901.astype('uint64'), relay.reshape(const_1912.astype('uint64'), relay.shape_of(bop_1901))) # shape=(168, 8)
bop_1916 = relay.bitwise_and(bop_1904.astype('uint64'), relay.reshape(const_1912.astype('uint64'), relay.shape_of(bop_1904))) # shape=(168, 8)
func_24_call = mod.get_global_var('func_24')
func_29_call = mutated_mod.get_global_var('func_29')
call_1918 = func_24_call(relay.reshape(bop_1901.astype('bool'), [16, 7, 12]), relay.reshape(const_1912.astype('bool'), [16, 7, 12]), relay.reshape(const_1912.astype('bool'), [16, 7, 12]), )
call_1919 = func_24_call(relay.reshape(bop_1901.astype('bool'), [16, 7, 12]), relay.reshape(const_1912.astype('bool'), [16, 7, 12]), relay.reshape(const_1912.astype('bool'), [16, 7, 12]), )
output = relay.Tuple([call_1856,bop_1913,call_1918,])
output2 = relay.Tuple([call_1857,bop_1916,call_1919,])
func_1927 = relay.Function([var_1881,], output)
mod['func_1927'] = func_1927
mod = relay.transform.InferType()(mod)
mutated_mod['func_1927'] = func_1927
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1928 = relay.var("var_1928", dtype = "bool", shape = (168, 8))#candidate|1928|(168, 8)|var|bool
func_1927_call = mutated_mod.get_global_var('func_1927')
call_1929 = func_1927_call(var_1928)
output = call_1929
func_1930 = relay.Function([var_1928], output)
mutated_mod['func_1930'] = func_1930
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1428_call = mod.get_global_var('func_1428')
func_1429_call = mutated_mod.get_global_var('func_1429')
call_1947 = relay.TupleGetItem(func_1428_call(), 0)
call_1948 = relay.TupleGetItem(func_1429_call(), 0)
output = relay.Tuple([call_1947,])
output2 = relay.Tuple([call_1948,])
func_1954 = relay.Function([], output)
mod['func_1954'] = func_1954
mod = relay.transform.InferType()(mod)
output = func_1954()
func_1955 = relay.Function([], output)
mutated_mod['func_1955'] = func_1955
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1521_call = mod.get_global_var('func_1521')
func_1522_call = mutated_mod.get_global_var('func_1522')
call_1962 = func_1521_call()
call_1963 = func_1521_call()
func_1306_call = mod.get_global_var('func_1306')
func_1307_call = mutated_mod.get_global_var('func_1307')
call_1966 = func_1306_call()
call_1967 = func_1306_call()
output = relay.Tuple([call_1962,call_1966,])
output2 = relay.Tuple([call_1963,call_1967,])
func_1972 = relay.Function([], output)
mod['func_1972'] = func_1972
mod = relay.transform.InferType()(mod)
output = func_1972()
func_1973 = relay.Function([], output)
mutated_mod['func_1973'] = func_1973
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1972_call = mod.get_global_var('func_1972')
func_1973_call = mutated_mod.get_global_var('func_1973')
call_1982 = relay.TupleGetItem(func_1972_call(), 1)
call_1983 = relay.TupleGetItem(func_1973_call(), 1)
var_2001 = relay.var("var_2001", dtype = "float32", shape = (180, 4))#candidate|2001|(180, 4)|var|float32
bop_2002 = relay.power(call_1982.astype('float32'), relay.reshape(var_2001.astype('float32'), relay.shape_of(call_1982))) # shape=(180, 4)
bop_2005 = relay.power(call_1983.astype('float32'), relay.reshape(var_2001.astype('float32'), relay.shape_of(call_1983))) # shape=(180, 4)
output = relay.Tuple([bop_2002,])
output2 = relay.Tuple([bop_2005,])
func_2010 = relay.Function([var_2001,], output)
mod['func_2010'] = func_2010
mod = relay.transform.InferType()(mod)
mutated_mod['func_2010'] = func_2010
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2011 = relay.var("var_2011", dtype = "float32", shape = (180, 4))#candidate|2011|(180, 4)|var|float32
func_2010_call = mutated_mod.get_global_var('func_2010')
call_2012 = func_2010_call(var_2011)
output = call_2012
func_2013 = relay.Function([var_2011], output)
mutated_mod['func_2013'] = func_2013
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1194_call = mod.get_global_var('func_1194')
func_1195_call = mutated_mod.get_global_var('func_1195')
call_2023 = relay.TupleGetItem(func_1194_call(), 4)
call_2024 = relay.TupleGetItem(func_1195_call(), 4)
output = call_2023
output2 = call_2024
func_2025 = relay.Function([], output)
mod['func_2025'] = func_2025
mod = relay.transform.InferType()(mod)
mutated_mod['func_2025'] = func_2025
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2025_call = mutated_mod.get_global_var('func_2025')
call_2026 = func_2025_call()
output = call_2026
func_2027 = relay.Function([], output)
mutated_mod['func_2027'] = func_2027
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1592_call = mod.get_global_var('func_1592')
func_1594_call = mutated_mod.get_global_var('func_1594')
call_2085 = relay.TupleGetItem(func_1592_call(), 5)
call_2086 = relay.TupleGetItem(func_1594_call(), 5)
output = call_2085
output2 = call_2086
func_2087 = relay.Function([], output)
mod['func_2087'] = func_2087
mod = relay.transform.InferType()(mod)
output = func_2087()
func_2088 = relay.Function([], output)
mutated_mod['func_2088'] = func_2088
mutated_mod = relay.transform.InferType()(mutated_mod)
func_807_call = mod.get_global_var('func_807')
func_809_call = mutated_mod.get_global_var('func_809')
call_2133 = relay.TupleGetItem(func_807_call(), 1)
call_2134 = relay.TupleGetItem(func_809_call(), 1)
func_1306_call = mod.get_global_var('func_1306')
func_1307_call = mutated_mod.get_global_var('func_1307')
call_2139 = func_1306_call()
call_2140 = func_1306_call()
output = relay.Tuple([call_2133,call_2139,])
output2 = relay.Tuple([call_2134,call_2140,])
func_2147 = relay.Function([], output)
mod['func_2147'] = func_2147
mod = relay.transform.InferType()(mod)
mutated_mod['func_2147'] = func_2147
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2147_call = mutated_mod.get_global_var('func_2147')
call_2148 = func_2147_call()
output = call_2148
func_2149 = relay.Function([], output)
mutated_mod['func_2149'] = func_2149
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2025_call = mod.get_global_var('func_2025')
func_2027_call = mutated_mod.get_global_var('func_2027')
call_2177 = func_2025_call()
call_2178 = func_2025_call()
var_2193 = relay.var("var_2193", dtype = "int8", shape = (16, 7, 12))#candidate|2193|(16, 7, 12)|var|int8
bop_2194 = relay.logical_or(call_2177.astype('bool'), relay.reshape(var_2193.astype('bool'), relay.shape_of(call_2177))) # shape=(16, 7, 12)
bop_2197 = relay.logical_or(call_2178.astype('bool'), relay.reshape(var_2193.astype('bool'), relay.shape_of(call_2178))) # shape=(16, 7, 12)
uop_2198 = relay.sqrt(var_2193.astype('float32')) # shape=(16, 7, 12)
output = relay.Tuple([bop_2194,uop_2198,])
output2 = relay.Tuple([bop_2197,uop_2198,])
func_2204 = relay.Function([var_2193,], output)
mod['func_2204'] = func_2204
mod = relay.transform.InferType()(mod)
mutated_mod['func_2204'] = func_2204
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2205 = relay.var("var_2205", dtype = "int8", shape = (16, 7, 12))#candidate|2205|(16, 7, 12)|var|int8
func_2204_call = mutated_mod.get_global_var('func_2204')
call_2206 = func_2204_call(var_2205)
output = call_2206
func_2207 = relay.Function([var_2205], output)
mutated_mod['func_2207'] = func_2207
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2239 = relay.var("var_2239", dtype = "float32", shape = (5, 16, 3))#candidate|2239|(5, 16, 3)|var|float32
uop_2240 = relay.sigmoid(var_2239.astype('float32')) # shape=(5, 16, 3)
func_434_call = mod.get_global_var('func_434')
func_437_call = mutated_mod.get_global_var('func_437')
var_2246 = relay.var("var_2246", dtype = "float32", shape = (720,))#candidate|2246|(720,)|var|float32
call_2245 = relay.TupleGetItem(func_434_call(relay.reshape(var_2246.astype('float32'), [8, 6, 15])), 0)
call_2247 = relay.TupleGetItem(func_437_call(relay.reshape(var_2246.astype('float32'), [8, 6, 15])), 0)
output = relay.Tuple([uop_2240,call_2245,var_2246,])
output2 = relay.Tuple([uop_2240,call_2247,var_2246,])
func_2288 = relay.Function([var_2239,var_2246,], output)
mod['func_2288'] = func_2288
mod = relay.transform.InferType()(mod)
mutated_mod['func_2288'] = func_2288
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2288_call = mutated_mod.get_global_var('func_2288')
var_2290 = relay.var("var_2290", dtype = "float32", shape = (5, 16, 3))#candidate|2290|(5, 16, 3)|var|float32
var_2291 = relay.var("var_2291", dtype = "float32", shape = (720,))#candidate|2291|(720,)|var|float32
call_2289 = func_2288_call(var_2290,var_2291,)
output = call_2289
func_2292 = relay.Function([var_2290,var_2291,], output)
mutated_mod['func_2292'] = func_2292
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2147_call = mod.get_global_var('func_2147')
func_2149_call = mutated_mod.get_global_var('func_2149')
call_2312 = relay.TupleGetItem(func_2147_call(), 0)
call_2313 = relay.TupleGetItem(func_2149_call(), 0)
func_2025_call = mod.get_global_var('func_2025')
func_2027_call = mutated_mod.get_global_var('func_2027')
call_2330 = func_2025_call()
call_2331 = func_2025_call()
var_2332 = relay.var("var_2332", dtype = "int8", shape = (16, 7, 12))#candidate|2332|(16, 7, 12)|var|int8
bop_2333 = relay.bitwise_or(call_2330.astype('uint8'), relay.reshape(var_2332.astype('uint8'), relay.shape_of(call_2330))) # shape=(16, 7, 12)
bop_2336 = relay.bitwise_or(call_2331.astype('uint8'), relay.reshape(var_2332.astype('uint8'), relay.shape_of(call_2331))) # shape=(16, 7, 12)
func_1972_call = mod.get_global_var('func_1972')
func_1973_call = mutated_mod.get_global_var('func_1973')
call_2341 = relay.TupleGetItem(func_1972_call(), 0)
call_2342 = relay.TupleGetItem(func_1973_call(), 0)
func_2010_call = mod.get_global_var('func_2010')
func_2013_call = mutated_mod.get_global_var('func_2013')
var_2345 = relay.var("var_2345", dtype = "float32", shape = (720,))#candidate|2345|(720,)|var|float32
call_2344 = relay.TupleGetItem(func_2010_call(relay.reshape(var_2345.astype('float32'), [180, 4])), 0)
call_2346 = relay.TupleGetItem(func_2013_call(relay.reshape(var_2345.astype('float32'), [180, 4])), 0)
output = relay.Tuple([call_2312,bop_2333,call_2341,call_2344,var_2345,])
output2 = relay.Tuple([call_2313,bop_2336,call_2342,call_2346,var_2345,])
func_2347 = relay.Function([var_2332,var_2345,], output)
mod['func_2347'] = func_2347
mod = relay.transform.InferType()(mod)
mutated_mod['func_2347'] = func_2347
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2347_call = mutated_mod.get_global_var('func_2347')
var_2349 = relay.var("var_2349", dtype = "int8", shape = (16, 7, 12))#candidate|2349|(16, 7, 12)|var|int8
var_2350 = relay.var("var_2350", dtype = "float32", shape = (720,))#candidate|2350|(720,)|var|float32
call_2348 = func_2347_call(var_2349,var_2350,)
output = call_2348
func_2351 = relay.Function([var_2349,var_2350,], output)
mutated_mod['func_2351'] = func_2351
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1428_call = mod.get_global_var('func_1428')
func_1429_call = mutated_mod.get_global_var('func_1429')
call_2362 = relay.TupleGetItem(func_1428_call(), 2)
call_2363 = relay.TupleGetItem(func_1429_call(), 2)
func_1663_call = mod.get_global_var('func_1663')
func_1664_call = mutated_mod.get_global_var('func_1664')
call_2387 = func_1663_call()
call_2388 = func_1663_call()
output = relay.Tuple([call_2362,call_2387,])
output2 = relay.Tuple([call_2363,call_2388,])
func_2401 = relay.Function([], output)
mod['func_2401'] = func_2401
mod = relay.transform.InferType()(mod)
mutated_mod['func_2401'] = func_2401
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2401_call = mutated_mod.get_global_var('func_2401')
call_2402 = func_2401_call()
output = call_2402
func_2403 = relay.Function([], output)
mutated_mod['func_2403'] = func_2403
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1972_call = mod.get_global_var('func_1972')
func_1973_call = mutated_mod.get_global_var('func_1973')
call_2477 = relay.TupleGetItem(func_1972_call(), 1)
call_2478 = relay.TupleGetItem(func_1973_call(), 1)
func_24_call = mod.get_global_var('func_24')
func_29_call = mutated_mod.get_global_var('func_29')
const_2493 = relay.const([[True,True,False,True,True,False,False,False,False,True,True,True,True,True,False,True],[False,False,False,True,True,False,True,True,True,True,False,True,True,True,False,False],[False,False,True,False,True,False,False,True,True,True,True,True,False,True,False,False],[True,False,False,False,False,True,False,True,True,False,False,False,False,True,True,False],[True,False,False,False,False,True,False,False,False,True,True,True,False,True,True,False],[True,True,False,True,True,False,False,False,True,False,False,True,True,True,True,True],[False,False,True,False,True,True,False,True,False,True,False,True,False,False,True,True],[True,True,False,False,False,False,False,True,True,True,False,False,False,True,True,False],[True,True,True,False,False,True,False,True,True,False,False,True,False,True,True,False],[False,True,False,False,False,True,True,True,False,True,True,False,True,True,True,False],[False,False,True,False,True,True,True,False,True,True,False,False,False,True,False,True],[False,False,True,False,True,True,True,True,False,True,False,True,False,True,False,False],[True,True,False,False,False,False,True,True,True,True,True,False,False,True,True,False],[False,False,True,True,True,False,True,False,True,True,True,True,False,True,True,True],[False,False,True,False,False,False,False,True,True,True,True,True,True,False,False,True],[True,True,False,False,True,True,False,True,False,False,False,False,True,False,True,False],[False,True,False,False,True,False,True,True,False,True,False,True,True,False,False,False],[True,False,True,True,False,True,False,False,True,False,True,True,False,False,True,False],[True,True,False,True,False,False,False,False,True,False,True,False,True,True,True,False],[True,False,True,True,True,True,False,True,False,True,False,False,True,True,True,True],[False,True,False,False,True,False,False,False,False,True,True,True,False,False,False,False],[False,True,True,True,True,True,False,True,False,False,True,False,True,False,True,False],[False,True,False,True,True,True,False,True,False,True,True,True,True,True,True,True],[False,False,False,True,False,True,False,False,True,False,False,True,False,True,True,False],[False,True,False,True,False,False,True,True,True,False,False,False,True,True,True,True],[True,True,True,True,False,True,False,False,True,False,True,False,False,False,False,False],[True,False,False,False,False,True,True,True,True,True,True,False,False,False,True,True],[False,False,True,False,False,True,False,True,True,True,True,True,True,False,False,True],[False,False,True,True,True,False,False,False,True,False,False,True,False,True,False,False],[False,True,True,False,False,True,True,False,True,True,True,False,True,True,True,True],[True,False,False,False,False,True,False,True,True,False,False,True,False,True,False,False],[False,True,False,True,False,True,True,True,False,False,False,True,False,True,True,True],[False,True,False,False,False,False,False,True,True,False,True,True,True,True,True,False],[False,True,True,False,False,False,False,True,False,False,False,False,True,True,False,True],[True,False,False,True,False,False,True,True,False,False,False,False,True,True,False,True],[False,True,True,True,True,True,False,True,True,False,False,True,False,False,False,True],[False,False,False,False,False,True,False,True,True,False,True,False,False,True,True,False],[False,True,True,True,False,True,False,False,False,False,True,False,False,True,True,False],[False,True,True,False,True,True,True,False,True,False,True,True,True,False,False,True],[True,True,False,False,True,True,False,True,True,True,True,False,False,False,False,False],[True,True,True,False,False,False,True,False,True,False,True,False,False,True,False,False],[True,False,False,False,True,False,True,True,True,False,True,True,False,True,False,True],[True,True,False,True,True,True,True,False,True,True,True,True,False,True,True,True],[True,True,True,True,True,False,False,False,False,True,False,False,False,False,False,True],[True,False,True,False,True,False,True,False,True,False,True,False,True,True,True,False],[False,True,True,False,True,True,False,False,False,False,False,True,False,False,False,True],[False,True,False,True,False,True,True,True,True,True,True,False,False,True,False,False],[False,False,False,True,True,True,True,False,True,False,True,False,False,True,True,True],[True,True,False,True,False,False,False,True,True,False,True,True,True,False,True,True],[False,False,False,True,True,False,True,False,False,False,False,False,False,False,True,True],[True,False,False,False,False,False,True,True,False,True,False,True,True,True,False,True],[True,True,False,False,True,False,True,True,False,True,True,False,True,True,True,True],[True,True,True,True,False,False,False,False,True,False,False,False,True,False,True,True],[True,False,True,False,False,False,True,False,False,True,True,True,False,False,False,True],[False,True,False,False,False,False,False,True,False,False,False,True,True,True,False,False],[True,False,True,True,False,False,False,False,True,True,False,True,True,False,False,True],[False,False,True,False,False,False,True,False,False,True,False,True,True,False,False,False],[False,True,False,True,True,False,True,True,True,True,False,False,False,True,False,False],[True,True,False,False,True,True,False,False,True,False,True,False,True,True,False,True],[False,False,False,False,False,False,True,True,True,True,False,True,False,False,True,False],[True,True,False,True,True,False,True,False,True,False,False,False,False,False,True,False],[True,False,False,True,False,True,True,True,True,True,True,True,True,False,True,False],[False,True,True,True,False,False,True,True,True,True,True,True,True,False,True,False],[False,False,False,False,True,True,False,False,False,True,False,True,True,True,True,True],[True,True,False,True,True,True,False,False,False,True,True,False,True,True,False,False],[True,False,False,False,True,False,True,True,True,True,False,True,False,False,False,True],[True,True,False,False,False,False,True,True,True,False,True,True,True,True,True,False],[False,True,True,True,False,False,True,True,True,True,False,True,True,True,True,False],[False,True,True,False,False,False,True,True,False,False,False,False,False,True,False,False],[True,True,True,True,True,False,False,False,False,True,False,True,False,True,False,False],[False,True,False,False,True,False,False,True,False,False,True,False,False,False,False,True],[True,False,False,True,False,False,True,False,True,True,False,True,False,False,True,True],[True,False,True,False,False,True,True,False,False,True,True,False,True,True,True,False],[True,True,True,False,True,True,False,True,False,False,False,True,False,False,False,True],[False,True,True,False,True,True,False,True,False,True,True,True,True,False,True,False],[True,True,False,False,False,True,True,False,True,False,True,False,False,True,True,False],[True,True,False,False,False,False,True,False,False,False,True,True,False,False,True,True],[True,False,True,True,True,True,False,False,True,True,False,True,True,False,True,False],[True,True,False,True,True,True,True,True,True,False,False,True,False,False,False,False],[False,True,True,True,False,True,True,True,True,False,False,False,False,True,False,True],[False,False,False,False,True,True,True,False,True,False,True,True,False,True,True,False],[False,True,True,True,False,False,False,True,False,True,True,False,False,True,True,True],[True,True,True,False,False,False,False,True,False,True,True,False,False,False,False,True],[True,True,False,False,False,False,True,False,True,True,True,False,False,False,True,False]], dtype = "bool")#candidate|2493|(84, 16)|const|bool
call_2492 = func_24_call(relay.reshape(const_2493.astype('bool'), [16, 7, 12]), relay.reshape(const_2493.astype('bool'), [16, 7, 12]), relay.reshape(const_2493.astype('bool'), [16, 7, 12]), )
call_2494 = func_24_call(relay.reshape(const_2493.astype('bool'), [16, 7, 12]), relay.reshape(const_2493.astype('bool'), [16, 7, 12]), relay.reshape(const_2493.astype('bool'), [16, 7, 12]), )
func_2147_call = mod.get_global_var('func_2147')
func_2149_call = mutated_mod.get_global_var('func_2149')
call_2495 = relay.TupleGetItem(func_2147_call(), 0)
call_2496 = relay.TupleGetItem(func_2149_call(), 0)
var_2500 = relay.var("var_2500", dtype = "float32", shape = (180, 4))#candidate|2500|(180, 4)|var|float32
bop_2501 = relay.bitwise_or(call_2477.astype('uint8'), relay.reshape(var_2500.astype('uint8'), relay.shape_of(call_2477))) # shape=(180, 4)
bop_2504 = relay.bitwise_or(call_2478.astype('uint8'), relay.reshape(var_2500.astype('uint8'), relay.shape_of(call_2478))) # shape=(180, 4)
uop_2506 = relay.asin(const_2493.astype('float64')) # shape=(84, 16)
output = relay.Tuple([call_2492,call_2495,bop_2501,uop_2506,])
output2 = relay.Tuple([call_2494,call_2496,bop_2504,uop_2506,])
func_2510 = relay.Function([var_2500,], output)
mod['func_2510'] = func_2510
mod = relay.transform.InferType()(mod)
var_2511 = relay.var("var_2511", dtype = "float32", shape = (180, 4))#candidate|2511|(180, 4)|var|float32
output = func_2510(var_2511)
func_2512 = relay.Function([var_2511], output)
mutated_mod['func_2512'] = func_2512
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2087_call = mod.get_global_var('func_2087')
func_2088_call = mutated_mod.get_global_var('func_2088')
call_2615 = func_2087_call()
call_2616 = func_2087_call()
var_2620 = relay.var("var_2620", dtype = "bool", shape = (168, 8))#candidate|2620|(168, 8)|var|bool
bop_2621 = relay.left_shift(call_2615.astype('int8'), relay.reshape(var_2620.astype('int8'), relay.shape_of(call_2615))) # shape=(168, 8)
bop_2624 = relay.left_shift(call_2616.astype('int8'), relay.reshape(var_2620.astype('int8'), relay.shape_of(call_2616))) # shape=(168, 8)
func_1306_call = mod.get_global_var('func_1306')
func_1307_call = mutated_mod.get_global_var('func_1307')
call_2630 = func_1306_call()
call_2631 = func_1306_call()
func_2147_call = mod.get_global_var('func_2147')
func_2149_call = mutated_mod.get_global_var('func_2149')
call_2633 = relay.TupleGetItem(func_2147_call(), 1)
call_2634 = relay.TupleGetItem(func_2149_call(), 1)
uop_2637 = relay.log(call_2633.astype('float32')) # shape=(180, 4)
uop_2639 = relay.log(call_2634.astype('float32')) # shape=(180, 4)
uop_2648 = relay.exp(call_2630.astype('float64')) # shape=(180, 4)
uop_2650 = relay.exp(call_2631.astype('float64')) # shape=(180, 4)
output = relay.Tuple([bop_2621,uop_2637,uop_2648,])
output2 = relay.Tuple([bop_2624,uop_2639,uop_2650,])
func_2666 = relay.Function([var_2620,], output)
mod['func_2666'] = func_2666
mod = relay.transform.InferType()(mod)
var_2667 = relay.var("var_2667", dtype = "bool", shape = (168, 8))#candidate|2667|(168, 8)|var|bool
output = func_2666(var_2667)
func_2668 = relay.Function([var_2667], output)
mutated_mod['func_2668'] = func_2668
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1428_call = mod.get_global_var('func_1428')
func_1429_call = mutated_mod.get_global_var('func_1429')
call_2673 = relay.TupleGetItem(func_1428_call(), 3)
call_2674 = relay.TupleGetItem(func_1429_call(), 3)
func_1972_call = mod.get_global_var('func_1972')
func_1973_call = mutated_mod.get_global_var('func_1973')
call_2680 = relay.TupleGetItem(func_1972_call(), 1)
call_2681 = relay.TupleGetItem(func_1973_call(), 1)
output = relay.Tuple([call_2673,call_2680,])
output2 = relay.Tuple([call_2674,call_2681,])
func_2686 = relay.Function([], output)
mod['func_2686'] = func_2686
mod = relay.transform.InferType()(mod)
output = func_2686()
func_2687 = relay.Function([], output)
mutated_mod['func_2687'] = func_2687
mutated_mod = relay.transform.InferType()(mutated_mod)
func_944_call = mod.get_global_var('func_944')
func_945_call = mutated_mod.get_global_var('func_945')
call_2792 = relay.TupleGetItem(func_944_call(), 0)
call_2793 = relay.TupleGetItem(func_945_call(), 0)
func_1498_call = mod.get_global_var('func_1498')
func_1500_call = mutated_mod.get_global_var('func_1500')
const_2797 = relay.const([4.610813,-3.748909,-5.756355,8.213488,6.050012,-7.580489,1.521423,2.126696,6.342285,2.611833,-7.318338,9.324037,-2.872407,1.753496,-6.614062,7.074755,-4.064426,-9.438659,9.452470,4.616683,1.914214,-5.377011,-9.174808,8.853171,0.721652,2.763066,9.653799,8.228280,3.712770,8.483622,-6.113293,-4.958166,2.661784,-8.836018,-4.850849,0.063386,8.017948,-1.617382,5.574117,3.536701,-8.953238,-3.800132,6.812938,-8.599070,-3.300162,-5.817182,-9.796172,-0.736001,2.113856,-6.213512,-4.635570,-1.636666,8.007410,2.761969,-7.627480,8.897309,5.846261,-2.322560,3.393772,7.366889,4.376312,6.712900,-9.914940,9.049467,-3.177305,-8.988122,3.034948,-9.279100,6.332996,2.366239,8.029698,5.819371,-5.778011,3.769233,-1.332712,-6.148328,0.981602,5.081048,4.566381,5.181252,-8.738425,-9.742228,-5.117835,2.186615,-0.854126,-6.855793,3.066215,-5.242303,3.334791,-5.693368,-3.013070,8.683841,-7.046069,-5.999001,8.363500,0.710448,0.362648,7.161476,-2.625757,0.751044,7.345481,-1.505533,6.097434,7.045347,9.797683,-2.324929,-4.165011,1.273095,-5.018363,-8.120155,8.153628,-2.479962,2.684925,1.316150,-9.586351,-5.733001,-6.175762,-0.392358,5.338819,-6.537123,1.990874,-5.002660,7.779991,-3.659937,1.458210,9.564376,-9.874507,1.518920,-0.486151,-6.957370,-5.904019,-8.074857,9.210120,-7.723016,-8.398860,9.461348,-8.906237,0.143826,2.013396,3.050198,-8.456470,-0.079987,-0.672272,-6.530430,-7.577921,5.377008,7.024914,7.067824,4.308586,7.867184,-3.852213,1.622452,5.463747,-0.577398,9.821231,0.293609,9.910443,-9.957426,-8.330719,-0.866513,3.513267,0.113982,6.812531,-0.195867,-6.633378,6.352047,-3.916586,1.068437,7.763890,3.292248,-5.470438,4.886698,-0.740279,3.213091,-4.014045,8.955743,-9.254930,5.651730,1.452787,-7.035144,2.004357,-1.206943,-2.207011,1.268513,-9.714349,-0.393627,-0.950849,-9.101695,-8.340402,5.966809,3.289642,-1.048107,3.362226,1.014529,7.816556,-1.125606,3.107886,6.143613,7.747364,-0.787193,5.944422,-2.839649,-2.755765,-6.846322,-5.306839,3.177466,-0.511022,0.592385,1.054855,-9.592076,-6.762157,-1.068469,2.792216,-6.786577,-7.548600,-4.496428,5.954966,3.535960,7.769724,-4.564511,3.151489,8.503705,-8.980601,5.458341,-1.326071,-4.516070,6.951268,-3.888394,-1.981959,2.485776,6.706396,-4.183753,-8.610649,-4.641496,9.844322,8.459361,1.362869,-3.755594,-9.485692,9.696371,9.649990,3.505960,-6.088077,-0.033638,-8.607994,-7.471143,3.920944,5.106938,-1.298712,-9.150181,-8.664512,7.715591,-4.021685,2.645197,9.114478,5.727506,2.462645,3.388756,2.242884,-2.194438,7.413166,2.465719,-1.614117,-7.303398,2.530809,-6.722182,1.398076,4.057787,-8.955592,-5.600444,2.835261,-9.325546,-8.094498,4.214442,1.267278,-5.022801,-7.624857,-9.739597,-4.983916,0.514338,9.529282,2.021732,0.906291,-8.816682,-1.254337,-0.712974,0.762410,-7.533690,-7.694960,0.556070,3.704872,4.070504,6.645351,-2.246930,-3.729661,6.155320,-6.877044,-7.504635,6.069850,1.608015,8.189980,-7.785503,-4.057908,4.861484,-6.290203,5.001691,-4.029066,4.350263,-7.752476,7.141758,2.023291,-3.039377,6.945959,-6.758549,2.541166,-6.215114,5.390160,9.809479,7.105500,-8.026678,1.008748,-0.591356,-4.019203,-0.514697,1.988624,-8.121600,-8.530863,-0.213083,3.019191,4.181582,-2.626920,-4.057080,-1.204761,-4.693285,-4.683939,0.935139,-0.693847,0.225519,3.426587,7.973732,3.594444,7.447382,-3.423999,2.739232,-9.721897,-5.178941,4.365590,-5.701398,1.498846,0.941263,-0.912342,5.547600,-0.052310,7.135829,-4.325185,1.468223,-4.647673,-7.224948,-9.993496,6.691868,-6.487436,-8.856517,-4.238312,0.057457,8.805115,4.530531,7.708965,-0.506509,1.445127,7.331624,-2.880409,4.240624,1.675760,4.055425,7.269215,6.569679,-4.795673,8.493507,-8.899720,-5.875744,-2.820840,4.356809,0.168848,6.389790,-3.918396,-2.204237,9.377692,4.490809,2.650508,8.048380,6.010377,-8.661180,-3.630496,-3.330485,-3.463037,-0.928367,-7.739070,-1.445304,5.054162,-7.274736,-5.554204,-6.415136,-4.128760,4.012958,-0.391480,2.642077,4.193154,5.586285,0.181461,-7.549989,6.204775,-5.227576,8.302303,2.051518,8.600690,-7.562489,-6.473530,6.882210,-8.413892,5.286581,0.187003,9.023962,-9.896771,-6.089709,-2.525734,-7.954680,2.683560,-3.333362,8.831467,7.919409,9.730499,8.238208,-0.648728,3.440819,9.164433,1.202917,1.184821,3.288326,-8.936483,2.375591,-4.905696,-9.480323,8.831921,-7.101220,-8.853446,7.655446,8.502297,2.423686,6.230435,1.973962,7.673053,-5.636096,5.050258,2.228800,6.122056,-7.009410,-6.380394,-5.535525,8.212927,-7.331440,-6.572996,-5.364734,-5.821473,-9.736951,-5.606051,-6.065384,-1.843375,-6.196420,-6.271402,4.767148,-7.707917,-6.666960,-4.013224,-3.501487,0.670071,0.677130,-1.852064,-2.035733,-6.909907,5.054984,-5.423070,-4.725855,-1.197552,-0.657522,-2.095950,-9.093403,3.746879,2.961624,5.193375,-2.946385,1.822725,0.154313,8.550925,-3.191280,-6.461214,-8.851214,-7.124447,3.827001,3.972307,3.384451,-1.127758,-5.089458,-3.785415,7.989471,-5.254447,9.560013,-7.318488,7.878335,-6.345489,0.409114,8.540107,5.500508,-4.036898,-2.705214,-0.986417,-6.530635,-4.550115,-6.585598,-6.490795,-3.427455,3.240349,-8.735176,-1.000594,4.219186,-0.789252,3.567565,-6.956410,0.120368,-9.894545,-0.917804,7.398822,0.096193,-1.828114,4.551365,5.788357,1.194750,6.341933,-1.158311,9.556623,-9.812748,-8.120437,-7.658296,-5.921407,-5.895688,3.668915,6.355852,0.354352,-9.439778,-7.568537,-1.483235,-3.780950,2.332092,-6.630327,2.843433,7.322940,5.331426,-4.596028,5.163350,6.760356,7.529645,-3.736023,3.283120,3.378862,2.733497,3.335813,3.160665,4.105668,4.265836,4.962782,-1.256624,-2.336273,-7.033614,6.236050,9.455758,3.629037,0.892745,1.779514,1.344215,2.297712,1.921364,7.692281,-1.484605,7.814797,-1.565653,-7.697268,1.920740,-1.640832,0.461471,3.590391,-6.151143,6.020372,4.746511,-5.475902,4.869654,0.046179,3.637025,-5.908289,-7.163633,0.313642,-5.197741], dtype = "float32")#candidate|2797|(600,)|const|float32
call_2796 = func_1498_call(relay.reshape(const_2797.astype('float32'), [10, 4, 15]))
call_2798 = func_1498_call(relay.reshape(const_2797.astype('float32'), [10, 4, 15]))
func_2347_call = mod.get_global_var('func_2347')
func_2351_call = mutated_mod.get_global_var('func_2351')
const_2812 = relay.const([-9,9,2,-4,10,-9,1,-9,-6,-10,8,4,3,-3,7,1,2,9,-10,4,6,-5,5,-4,4,5,8,-7,7,8,-1,-9,-1,-6,-3,10,-4,-6,2,9,-4,7,-4,-2,6,2,-1,10,-9,-4,9,-2,1,-9,8,9,10,3,-2,-4,7,8,9,9,-6,-2,6,-5,4,10,-2,3,6,-8,10,-9,-10,-4,-6,-8,-5,5,-6,8,4,1,8,-2,9,3,1,-8,-8,1,5,-6,10,10,2,6,-8,6,1,10,-7,1,4,1,2,-8,9,-5,-5,-7,-7,-7,-1,10,-10,-4,-1,4,-2,9,-5,1,1,7,3,7,8,-4,6,1,-4,2,9,3,1,5,9,1,2,-7,1,-6,7,-10,-3,8,5,3,8,-5,-7,4,-8,7,-5,6,8,7,-3,-8,-7,4,-10,7,-2,-6,5,-7,9,5,-8,-9,5,2,2,-4,8,-2,4,6,-4,-7,6,-3,5,8,1,10,5,5,1,8,-7,10,10,7,10,-2,-7,-3,5,6,1,5,5,5,9,-7,-4,10,-3,-9,-1,1,-7,10,6,-9,1,2,4,-4,-9,-1,-6,-8,-8,-3,-7,8,-9,-6,-6,1,-1,-3,-8,-7,-6,9,-1,-2,-3,9,9,2,8,2,-4,-1,-6,9,-1,-1,7,10,9,7,9,10,3,-8,3,-5,5,-2,-10,4,-9,10,-5,6,-4,-5,-10,3,-8,-6,-4,-8,9,-1,10,2,-10,-7,-3,-8,5,10,-8,-9,-7,-7,-8,-4,-4,-5,10,-8,-10,-5,8,-9,-9,-10,-5,3,-6,7,-7,10,-5,8,4,8,-10,8,8,-1,-8,2,-2,7,7,-9,-4,6,5,5,-9,-3,5,7,9,-10,10,2,1,9,5,10,8,7,1,3,4,-1,7,4,-7,-5,-8,-1,6,7,-8,1,5,9,9,-8,-8,-5,6,-1,6,9,2,-5,10,10,-10,-3,-8,-3,-6,3,9,-9,7,-7,5,-7,8,5,-3,-5,7,-8,-4,-3,9,2,-4,-2,-10,-4,-6,2,-2,-1,6,-9,-6,10,-5,10,-1,-3,-3,5,-5,8,9,-5,-1,-7,-4,1,-3,-2,6,-4,4,9,4,9,-3,3,9,5,6,-4,-8,4,6,10,8,6,-5,7,10,-1,5,7,3,1,-3,2,1,-3,-10,8,8,9,-10,-3,6,-5,9,2,-1,-1,-9,-6,-7,-5,3,-6,-7,6,-3,10,-4,-10,-9,5,7,-6,7,7,2,-10,7,-8,10,4,5,-7,-2,-2,-9,-1,-10,-5,9,-10,5,-6,5,9,-9,3,8,3,-4,9,3,-4,-6,-2,10,-6,2,-9,9,4,-10,2,-6,-8,-3,8,8,10,10,1,-6,4,2,-6,-1,8,9,9,-6,-8,5,-4,-7,-9,8,4,10,1,3,-2,10,-6,-10,4,4,-7,-7,4,-7,10,4,7,-4,-5,-6,3,-6,4,-4,4,-2,6,3,-5,2,6,-9,-9,1,-2,-10,-2,-4,2,7,-7,-8,2,3,-4,3,3,2,7,-8,2,-5,-4,-3,8,-4,-2,-10,-8,2,-9,1,-10,-6,8,-7,-1,7,3,4,3,-8,2,9,-10,3,9,5,-9,-6,6,1,6,-5,-9,2,-6,-7,8,-10,1,10,-9,7,6,9,7,-9,8,-3,2,-1,6,9,-5,2,4,6,-9,-3,8,-8,10,9,-3,6,-8,4,-4,5,3,7,-3,9,8,8,-4,1,6,-3,-2,6,6,3,-4,9,-8,-3,9,-3,-5,-3,7,-2,-5,6,4,9,-2,1,-1,-3,9,9,9,-7,1,1,5,5,-10,9,-2,5,-3,2,-9,2,-1,5,1,2,1,3,7,-8,-8,-3,9,6,4,-3,-1,8,6,-9,7,-2,-7,6,3,-10,-5,3,1,-6,-5,6,6,7,-9,-10,10,-7,-4,-10,9,10,-5,9,-2,10,4,3,-4,-1,-9,-1,10,7,-3,3,-8,-7,7,8,-9,-9,8,2,-4,-7,3,-3,6,-8,-6,-10,-7,-7,10,-6,-6,1,-6,-6,-5,5,-8,2,-10,-4,3,-1,10,-5,-5,-9,-3,-5,-3,-1,-3,-8,-7,-7,-1,3,5,-4,-6,-3,-7,2,-5,1,9,8,-6,-2,-9,10,-10,-3,9,-9,-4,5,-7,3,5,1,4,3,8,-5,-6,6,-7,2,4,-2,6,-2,-4,6,-9,-3,-8,4,-4,10,3,-6,5,-10,-9,-9,-10,7,-8,-5,-2,1,-9,-4,6,-2,2,-3,8,-7,-6,2,-9,-3,-4,5,9,5,-3,-10,5,-1,-2,3,8,6,8,3,1,-4,6,-2,-5,2,6,-8,6,7,4,9,-1,9,5,7,-7,2,10,8,-8,5,6,4,-5,-1,2,2,-5,3,2,-5,-10,-4,-8,10,-5,-2,10,-3,9,-3,-2,-4,-5,-6,-6,-8,7,-1,-4,-4,7,2,-4,-2,8,3,10,8,2,-4,6,-7,6,7,8,-1,-7,-2,-9,-3,-2,9,-4,1,3,-4,-9,-10,-8,7,10,3,-2,-10,1,-7,2,7,3,1,5,-4,8,-1,5,-4,-7,-2,-2,-7,-8,6,-10,-7,2,2,-5,2,-2,-2,1,2,3,-7,10,7,-8,-9,7,5,4,-7,-4,2,1,3,-10,-10,-2,-9,10,-10,3,9,3,-1,1,-6,6,3,4,7,-2,8,-3,6,-6,-2,-4,-9,8,6,8,4,-3,-1,-4,2,7,-10,8,-4,10,3,8,5,-2,5,4,-3,-8,-4,3,8,8,10,4,10,9,-2,-5,-3,7,-6,9,9,-4,-10,1,-8,-6,4,-2,7,-10,-10,-5,2,3,2,9,-9,-6,-9,7,-7,8,6,-8,1,2,-4,6,-9,-8,-9,4,-8,-9,9,-6,10,10,4,-10,9,-8,-9,1,-1,8,-3,-10,-5,2,6,2,2,3,-1,2,-5,3,3,1,-2,-6,3,10,6,2,9,-7,6,-6,-4,-9,7,4,-5,-5,-6,-5,-8,7,-4,3,4,4,-1,9,9,4,-9,7,5,-2,-5,-2,-10,5,9,-7,2,-5,2,-10,-1,8,-5,5,-8,-1,-3,-4,-1,9,8,2,-7,-3,-10,-9,-9,10,-1,4,-1,-10,9,9,4,-1,-2,-2,-10,8,-2,-1,-2,-5,-8,-2,-3,5,-6,-3,10,5,-4,3,-6,4,-7,-6,-9,-4,9,8,-8,-5,5,7,9,9,10,9,-2,3,1,-10,2,7,-10,5,-8,-2,-8,8,2,-1,9,8,5,3,-1,-6,9,-6,10,8,-2,1,-9,7,8,4,10,-9,3,2,-6,-9,-4,5,6,4,-4,-8,-5,6,3,-9,2,-9,-1,-1,9,-2,-6,-7,-10,10,5,9,-1,3,5,-8,-1,5,7,-9,-7,9,9,6,8,-5,4,-5,1,10,4,-4,-4,-9,7,7,-10,-7,-4,-10,3,-7,1,3,-2,7,-10,2,-2,-6,8,2], dtype = "int8")#candidate|2812|(1344,)|const|int8
var_2813 = relay.var("var_2813", dtype = "float32", shape = (720,))#candidate|2813|(720,)|var|float32
call_2811 = relay.TupleGetItem(func_2347_call(relay.reshape(const_2812.astype('int8'), [16, 7, 12]), relay.reshape(var_2813.astype('float32'), [720,]), ), 3)
call_2814 = relay.TupleGetItem(func_2351_call(relay.reshape(const_2812.astype('int8'), [16, 7, 12]), relay.reshape(var_2813.astype('float32'), [720,]), ), 3)
output = relay.Tuple([call_2792,call_2796,const_2797,call_2811,const_2812,var_2813,])
output2 = relay.Tuple([call_2793,call_2798,const_2797,call_2814,const_2812,var_2813,])
func_2822 = relay.Function([var_2813,], output)
mod['func_2822'] = func_2822
mod = relay.transform.InferType()(mod)
mutated_mod['func_2822'] = func_2822
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2823 = relay.var("var_2823", dtype = "float32", shape = (720,))#candidate|2823|(720,)|var|float32
func_2822_call = mutated_mod.get_global_var('func_2822')
call_2824 = func_2822_call(var_2823)
output = call_2824
func_2825 = relay.Function([var_2823], output)
mutated_mod['func_2825'] = func_2825
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1592_call = mod.get_global_var('func_1592')
func_1594_call = mutated_mod.get_global_var('func_1594')
call_2846 = relay.TupleGetItem(func_1592_call(), 5)
call_2847 = relay.TupleGetItem(func_1594_call(), 5)
const_2856 = relay.const([[True,True,True,False,True,False,True,False],[False,True,False,False,True,True,False,False],[False,False,False,False,False,False,False,True],[True,False,True,True,True,False,True,False],[True,False,False,True,False,True,True,False],[True,True,True,False,False,True,True,True],[False,True,True,False,True,True,True,True],[False,False,False,True,False,False,False,False],[False,False,True,True,False,False,True,True],[True,False,True,False,False,False,True,False],[False,False,False,True,False,True,False,False],[True,True,True,False,True,True,False,True],[False,True,False,False,True,False,True,False],[False,False,False,False,True,True,False,True],[False,False,False,False,True,True,False,True],[False,True,True,True,True,True,False,True],[False,True,True,True,True,False,True,True],[False,False,False,True,True,False,False,True],[True,True,True,False,False,True,True,False],[True,False,True,False,True,True,True,True],[False,False,False,True,False,False,True,False],[False,True,False,True,True,False,True,False],[True,False,True,True,False,False,True,True],[True,False,True,False,False,False,False,False],[False,False,False,False,False,True,False,False],[False,False,False,True,True,True,False,False],[True,True,False,True,True,True,False,False],[False,True,True,False,True,True,False,True],[True,False,True,False,True,False,False,True],[False,False,True,True,True,True,False,True],[False,False,False,True,True,True,False,True],[False,True,True,False,False,False,True,True],[False,True,True,False,True,False,True,True],[False,False,True,False,True,True,True,True],[True,True,True,False,False,True,False,True],[False,True,True,False,True,False,True,False],[True,True,False,False,True,True,False,True],[False,True,True,True,False,False,True,True],[False,False,True,False,True,True,True,True],[True,False,True,False,True,False,False,False],[True,False,True,False,False,True,False,False],[False,True,True,False,False,False,True,False],[False,False,False,True,False,False,False,True],[False,True,True,True,False,False,False,True],[False,True,False,False,False,False,False,False],[True,False,False,True,False,True,True,True],[True,False,False,True,False,True,False,False],[False,False,False,False,False,False,False,False],[True,False,True,True,False,True,True,True],[True,True,True,False,False,False,True,True],[False,True,True,False,False,True,True,True],[True,True,True,True,True,True,False,False],[True,True,True,True,False,False,True,False],[True,False,False,True,False,True,False,True],[False,True,True,True,True,False,False,False],[True,True,False,False,True,False,False,False],[True,True,False,True,True,True,True,False],[True,True,True,True,False,False,False,True],[True,False,False,False,False,False,True,False],[True,True,False,False,True,True,True,False],[False,True,True,False,False,True,False,True],[False,False,False,True,False,True,False,True],[True,False,False,True,False,True,True,True],[False,False,False,True,True,True,True,True],[False,False,True,False,True,False,True,False],[False,True,True,False,False,True,True,True],[True,True,True,True,False,False,False,False],[False,False,True,True,True,False,True,True],[True,False,True,False,False,False,False,False],[False,True,False,False,False,False,False,True],[True,True,False,False,True,True,False,False],[True,False,True,True,False,False,False,True],[True,False,False,True,False,False,False,False],[False,False,True,False,False,True,False,False],[False,False,False,True,True,False,True,True],[False,True,False,True,True,False,False,False],[False,False,False,True,True,False,True,True],[False,False,True,True,True,True,True,True],[False,True,True,True,True,False,False,False],[True,False,True,True,True,True,True,True],[False,True,False,True,True,False,False,False],[False,True,True,False,True,False,True,True],[True,False,False,False,True,True,False,False],[True,True,True,False,True,True,False,True],[False,False,False,False,False,False,False,True],[True,True,True,False,True,False,True,False],[True,False,False,False,True,True,False,False],[False,False,True,True,True,True,False,True],[True,False,True,False,False,True,True,False],[False,False,False,True,False,False,True,True],[False,False,True,True,True,False,True,True],[False,False,True,True,True,True,False,True],[False,False,True,False,True,False,False,False],[False,True,True,False,True,True,False,True],[True,True,False,False,True,True,True,True],[False,False,False,True,False,True,False,False],[True,True,False,False,True,True,False,True],[False,False,False,True,True,False,False,False],[True,False,False,True,True,True,False,True],[False,True,True,False,False,True,False,True],[True,False,True,False,True,False,False,True],[False,False,False,True,False,False,True,True],[False,True,False,False,False,True,True,False],[False,False,False,False,False,False,True,True],[True,False,True,False,False,True,False,False],[True,False,True,True,True,False,True,True],[True,True,True,False,False,True,False,False],[True,True,False,True,True,True,False,False],[False,False,True,False,True,True,True,True],[True,False,False,False,True,True,False,False],[True,True,False,True,False,True,False,False],[False,False,True,True,False,False,False,False],[False,True,False,True,False,True,False,True],[False,True,False,True,False,False,True,True],[True,False,True,False,True,True,False,True],[True,True,False,True,True,False,True,True],[True,False,True,True,True,True,True,True],[False,True,False,True,True,False,False,False],[False,True,False,True,False,False,False,False],[False,False,True,True,True,True,True,False],[True,False,False,False,True,True,False,False],[False,False,True,True,False,True,True,False],[True,False,True,True,False,True,True,False],[False,True,False,True,False,True,True,True],[True,True,True,False,False,True,False,False],[False,True,True,False,True,True,True,False],[True,False,True,True,False,True,False,False],[False,False,True,False,True,False,True,False],[False,False,False,False,False,True,True,False],[False,False,False,True,True,True,True,False],[False,True,False,False,False,False,False,False],[False,True,False,True,True,True,True,True],[True,True,False,True,False,True,True,True],[True,False,False,True,True,False,True,True],[True,True,True,True,True,True,True,True],[False,True,False,False,False,True,True,True],[True,True,True,True,False,False,False,False],[False,True,True,False,True,False,True,False],[False,True,True,True,False,False,True,True],[True,True,True,True,True,False,False,False],[False,True,True,False,False,False,False,False],[True,True,False,False,False,False,False,False],[True,True,True,True,True,False,False,False],[False,True,True,True,False,True,True,False],[True,False,False,True,False,True,True,True],[False,False,True,False,False,True,False,True],[False,False,False,True,False,True,True,False],[False,False,True,False,False,False,False,True],[True,True,False,True,False,True,True,False],[True,False,True,True,False,True,False,False],[True,True,False,False,False,True,False,False],[False,False,True,False,False,True,True,True],[False,True,True,False,False,False,True,False],[False,False,True,False,True,False,True,True],[True,True,True,True,False,True,True,False],[True,False,False,False,False,True,True,False],[False,False,True,True,False,False,True,True],[False,False,True,True,False,False,False,True],[True,True,False,False,True,False,False,False],[False,True,False,False,False,False,True,True],[False,False,False,True,False,True,False,False],[True,True,True,False,False,False,True,True],[True,False,True,False,False,False,True,False],[True,True,True,True,True,False,False,False],[False,False,True,False,True,True,False,True],[False,True,True,False,True,False,False,True],[False,True,True,False,True,False,True,False],[False,False,False,True,False,False,True,False]], dtype = "bool")#candidate|2856|(168, 8)|const|bool
bop_2857 = relay.floor_divide(call_2846.astype('float64'), relay.reshape(const_2856.astype('float64'), relay.shape_of(call_2846))) # shape=(168, 8)
bop_2860 = relay.floor_divide(call_2847.astype('float64'), relay.reshape(const_2856.astype('float64'), relay.shape_of(call_2847))) # shape=(168, 8)
output = bop_2857
output2 = bop_2860
func_2861 = relay.Function([], output)
mod['func_2861'] = func_2861
mod = relay.transform.InferType()(mod)
mutated_mod['func_2861'] = func_2861
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2861_call = mutated_mod.get_global_var('func_2861')
call_2862 = func_2861_call()
output = call_2862
func_2863 = relay.Function([], output)
mutated_mod['func_2863'] = func_2863
mutated_mod = relay.transform.InferType()(mutated_mod)
func_944_call = mod.get_global_var('func_944')
func_945_call = mutated_mod.get_global_var('func_945')
call_2878 = relay.TupleGetItem(func_944_call(), 2)
call_2879 = relay.TupleGetItem(func_945_call(), 2)
func_2147_call = mod.get_global_var('func_2147')
func_2149_call = mutated_mod.get_global_var('func_2149')
call_2903 = relay.TupleGetItem(func_2147_call(), 1)
call_2904 = relay.TupleGetItem(func_2149_call(), 1)
output = relay.Tuple([call_2878,call_2903,])
output2 = relay.Tuple([call_2879,call_2904,])
func_2906 = relay.Function([], output)
mod['func_2906'] = func_2906
mod = relay.transform.InferType()(mod)
mutated_mod['func_2906'] = func_2906
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2906_call = mutated_mod.get_global_var('func_2906')
call_2907 = func_2906_call()
output = call_2907
func_2908 = relay.Function([], output)
mutated_mod['func_2908'] = func_2908
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1428_call = mod.get_global_var('func_1428')
func_1429_call = mutated_mod.get_global_var('func_1429')
call_2963 = relay.TupleGetItem(func_1428_call(), 1)
call_2964 = relay.TupleGetItem(func_1429_call(), 1)
func_1663_call = mod.get_global_var('func_1663')
func_1664_call = mutated_mod.get_global_var('func_1664')
call_2976 = func_1663_call()
call_2977 = func_1663_call()
uop_2984 = relay.log2(call_2963.astype('float64')) # shape=(16, 7, 12)
uop_2986 = relay.log2(call_2964.astype('float64')) # shape=(16, 7, 12)
output = relay.Tuple([call_2976,uop_2984,])
output2 = relay.Tuple([call_2977,uop_2986,])
func_2997 = relay.Function([], output)
mod['func_2997'] = func_2997
mod = relay.transform.InferType()(mod)
output = func_2997()
func_2998 = relay.Function([], output)
mutated_mod['func_2998'] = func_2998
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1663_call = mod.get_global_var('func_1663')
func_1664_call = mutated_mod.get_global_var('func_1664')
call_3017 = func_1663_call()
call_3018 = func_1663_call()
output = relay.Tuple([call_3017,])
output2 = relay.Tuple([call_3018,])
func_3025 = relay.Function([], output)
mod['func_3025'] = func_3025
mod = relay.transform.InferType()(mod)
mutated_mod['func_3025'] = func_3025
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3025_call = mutated_mod.get_global_var('func_3025')
call_3026 = func_3025_call()
output = call_3026
func_3027 = relay.Function([], output)
mutated_mod['func_3027'] = func_3027
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2401_call = mod.get_global_var('func_2401')
func_2403_call = mutated_mod.get_global_var('func_2403')
call_3028 = relay.TupleGetItem(func_2401_call(), 0)
call_3029 = relay.TupleGetItem(func_2403_call(), 0)
output = relay.Tuple([call_3028,])
output2 = relay.Tuple([call_3029,])
func_3034 = relay.Function([], output)
mod['func_3034'] = func_3034
mod = relay.transform.InferType()(mod)
output = func_3034()
func_3035 = relay.Function([], output)
mutated_mod['func_3035'] = func_3035
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2861_call = mod.get_global_var('func_2861')
func_2863_call = mutated_mod.get_global_var('func_2863')
call_3088 = func_2861_call()
call_3089 = func_2861_call()
uop_3108 = relay.acos(call_3088.astype('float32')) # shape=(168, 8)
uop_3110 = relay.acos(call_3089.astype('float32')) # shape=(168, 8)
func_2087_call = mod.get_global_var('func_2087')
func_2088_call = mutated_mod.get_global_var('func_2088')
call_3116 = func_2087_call()
call_3117 = func_2087_call()
output = relay.Tuple([uop_3108,call_3116,])
output2 = relay.Tuple([uop_3110,call_3117,])
func_3119 = relay.Function([], output)
mod['func_3119'] = func_3119
mod = relay.transform.InferType()(mod)
mutated_mod['func_3119'] = func_3119
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3119_call = mutated_mod.get_global_var('func_3119')
call_3120 = func_3119_call()
output = call_3120
func_3121 = relay.Function([], output)
mutated_mod['func_3121'] = func_3121
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1194_call = mod.get_global_var('func_1194')
func_1195_call = mutated_mod.get_global_var('func_1195')
call_3167 = relay.TupleGetItem(func_1194_call(), 1)
call_3168 = relay.TupleGetItem(func_1195_call(), 1)
func_3025_call = mod.get_global_var('func_3025')
func_3027_call = mutated_mod.get_global_var('func_3027')
call_3174 = relay.TupleGetItem(func_3025_call(), 0)
call_3175 = relay.TupleGetItem(func_3027_call(), 0)
func_854_call = mod.get_global_var('func_854')
func_857_call = mutated_mod.get_global_var('func_857')
var_3183 = relay.var("var_3183", dtype = "float32", shape = (720,))#candidate|3183|(720,)|var|float32
call_3182 = relay.TupleGetItem(func_854_call(relay.reshape(var_3183.astype('float32'), [12, 60])), 0)
call_3184 = relay.TupleGetItem(func_857_call(relay.reshape(var_3183.astype('float32'), [12, 60])), 0)
func_1306_call = mod.get_global_var('func_1306')
func_1307_call = mutated_mod.get_global_var('func_1307')
call_3194 = func_1306_call()
call_3195 = func_1306_call()
uop_3203 = relay.erf(call_3182.astype('float32')) # shape=(16, 7, 12)
uop_3205 = relay.erf(call_3184.astype('float32')) # shape=(16, 7, 12)
output = relay.Tuple([call_3167,call_3174,var_3183,call_3194,uop_3203,])
output2 = relay.Tuple([call_3168,call_3175,var_3183,call_3195,uop_3205,])
func_3218 = relay.Function([var_3183,], output)
mod['func_3218'] = func_3218
mod = relay.transform.InferType()(mod)
var_3219 = relay.var("var_3219", dtype = "float32", shape = (720,))#candidate|3219|(720,)|var|float32
output = func_3218(var_3219)
func_3220 = relay.Function([var_3219], output)
mutated_mod['func_3220'] = func_3220
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1521_call = mod.get_global_var('func_1521')
func_1522_call = mutated_mod.get_global_var('func_1522')
call_3236 = func_1521_call()
call_3237 = func_1521_call()
output = relay.Tuple([call_3236,])
output2 = relay.Tuple([call_3237,])
func_3259 = relay.Function([], output)
mod['func_3259'] = func_3259
mod = relay.transform.InferType()(mod)
output = func_3259()
func_3260 = relay.Function([], output)
mutated_mod['func_3260'] = func_3260
mutated_mod = relay.transform.InferType()(mutated_mod)
func_807_call = mod.get_global_var('func_807')
func_809_call = mutated_mod.get_global_var('func_809')
call_3281 = relay.TupleGetItem(func_807_call(), 1)
call_3282 = relay.TupleGetItem(func_809_call(), 1)
func_1306_call = mod.get_global_var('func_1306')
func_1307_call = mutated_mod.get_global_var('func_1307')
call_3288 = func_1306_call()
call_3289 = func_1306_call()
var_3290 = relay.var("var_3290", dtype = "float32", shape = (180, 4))#candidate|3290|(180, 4)|var|float32
bop_3291 = relay.less_equal(call_3288.astype('bool'), relay.reshape(var_3290.astype('bool'), relay.shape_of(call_3288))) # shape=(180, 4)
bop_3294 = relay.less_equal(call_3289.astype('bool'), relay.reshape(var_3290.astype('bool'), relay.shape_of(call_3289))) # shape=(180, 4)
output = relay.Tuple([call_3281,bop_3291,])
output2 = relay.Tuple([call_3282,bop_3294,])
func_3301 = relay.Function([var_3290,], output)
mod['func_3301'] = func_3301
mod = relay.transform.InferType()(mod)
mutated_mod['func_3301'] = func_3301
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3302 = relay.var("var_3302", dtype = "float32", shape = (180, 4))#candidate|3302|(180, 4)|var|float32
func_3301_call = mutated_mod.get_global_var('func_3301')
call_3303 = func_3301_call(var_3302)
output = call_3303
func_3304 = relay.Function([var_3302], output)
mutated_mod['func_3304'] = func_3304
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3025_call = mod.get_global_var('func_3025')
func_3027_call = mutated_mod.get_global_var('func_3027')
call_3342 = relay.TupleGetItem(func_3025_call(), 0)
call_3343 = relay.TupleGetItem(func_3027_call(), 0)
output = call_3342
output2 = call_3343
func_3344 = relay.Function([], output)
mod['func_3344'] = func_3344
mod = relay.transform.InferType()(mod)
mutated_mod['func_3344'] = func_3344
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3344_call = mutated_mod.get_global_var('func_3344')
call_3345 = func_3344_call()
output = call_3345
func_3346 = relay.Function([], output)
mutated_mod['func_3346'] = func_3346
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3347 = relay.const([[[-2.385000,-6.247736,0.047188,4.545401,7.207809,7.511372,3.007970,-8.168937,-8.205504,-6.419826,-0.453027,2.505983,-6.859907],[-1.829110,-2.730481,5.778794,-4.384809,-8.045996,-5.330874,-8.203790,-7.480012,-2.989194,-9.001244,6.174784,3.596667,0.690776],[-7.077752,-6.097310,-4.618598,5.617946,-4.897379,8.559525,-5.859593,-9.536786,6.891402,-6.646499,-5.252292,0.537045,5.710084],[3.966845,5.705397,-2.032806,6.419912,-0.110895,-6.041804,6.681176,-6.367755,8.994905,-8.192722,4.695622,-6.586552,8.875877],[-6.154311,-6.978263,-6.969143,0.611121,-0.928366,6.722558,-1.171599,-1.839319,1.696889,0.767978,-9.813108,0.769402,-2.287689],[7.089633,-5.912893,7.003134,7.258087,9.728836,-9.225090,6.588403,-1.414105,-1.119495,-5.332981,5.781982,-9.312095,-0.745576],[7.273760,-2.909086,-4.049601,0.641827,-5.114907,-5.320673,-1.499389,7.435786,-0.533801,4.445487,-9.603730,2.135148,-5.219319],[-5.141307,2.890892,-0.443647,-3.288133,-2.326602,-5.555886,-6.128750,-4.759146,-3.960144,-6.411331,5.333739,6.576462,1.098305],[8.127513,-5.866847,-6.161182,-0.121918,2.009450,-4.828749,1.126632,7.168317,-6.190091,8.476354,-9.974363,4.331799,8.761787],[5.044333,-3.078017,-5.724383,7.688944,2.486561,-5.523723,5.679404,-1.389199,7.426460,-1.116051,2.810251,-5.389720,6.468937],[1.619464,4.104034,-7.818049,3.956914,-6.123073,-9.790255,-9.648695,2.718678,0.270627,1.959290,-7.683151,-0.017909,7.957046],[-8.716661,-1.400289,-2.565349,-4.803644,-8.825985,-5.970331,4.763554,-2.667016,-8.195465,-6.901670,9.593271,-1.608394,9.518929],[6.702113,6.441612,-6.590061,5.179455,3.627878,-1.015986,4.222890,-1.910771,-2.071113,-5.205730,3.096856,5.284127,-5.658458],[-8.801759,1.728686,-6.222811,3.363330,8.363488,8.759085,-9.956858,-8.774315,-0.514022,0.882562,0.595557,6.301763,-6.684633]],[[-4.097932,-4.154548,-8.814612,3.292437,-8.783390,8.840192,2.567973,2.647871,5.973753,-9.417237,-4.880465,5.327346,1.153726],[4.393999,4.116311,-5.354840,-1.993971,-6.014851,8.627315,-1.937441,4.397089,6.944321,4.440690,4.667890,-8.041253,-8.567385],[9.761322,-3.909528,3.949611,1.661336,-3.435080,-3.917664,-1.198146,3.766439,0.987119,7.229692,3.747806,1.709924,-2.548803],[8.477204,-4.028938,5.992992,-5.647767,7.171380,-4.043547,-5.467410,-6.718887,5.930176,3.607682,-4.494967,-5.232549,-5.374656],[-0.353107,-1.281396,-3.619582,7.693629,-8.974277,-0.780406,-9.876374,-8.576330,-1.660865,8.563043,6.085841,8.075395,-2.064136],[8.641841,-5.662390,-0.043638,-0.736567,3.994845,6.219394,2.079123,0.212027,-6.684873,9.907453,-2.278784,1.610616,-5.305820],[-2.826932,7.123487,6.585404,-9.570370,-9.713859,-0.893396,1.097330,-0.336323,-5.358635,-3.901954,4.580174,-6.320053,3.775427],[9.327309,-3.281204,-8.568581,7.114106,5.914995,-5.635681,-9.461158,4.386864,3.931918,-0.077174,7.343084,-9.205279,0.943724],[-9.544497,-5.895412,-9.913303,-7.861804,-0.165999,-6.771073,-7.370143,-2.895322,0.083425,-6.382333,-1.533278,9.423179,0.139411],[5.223696,3.107125,5.000142,-2.116249,4.836505,2.957561,-7.985910,-7.633367,-4.781431,-4.928657,-2.178719,6.023126,-4.442011],[-1.286690,6.106010,-1.628572,1.099151,6.702967,7.920197,6.764836,-8.499201,-3.654839,-7.778514,3.124108,-1.746618,1.163846],[9.943457,1.509259,-9.006834,-8.191739,0.196436,6.157043,-7.063894,4.059475,-3.706649,-2.480899,-2.678471,9.599681,-2.363452],[7.561860,5.201610,3.962109,5.721062,-6.934133,-9.517391,1.317549,-9.274870,5.407017,7.811409,-3.433364,4.867783,0.639718],[-1.223409,-9.425398,2.571371,3.760701,-3.348681,-2.629947,2.607071,-7.356334,8.574660,3.973617,-0.505835,-8.659622,2.280229]],[[3.937736,6.630101,-1.463121,-5.467542,-6.868735,-7.084675,-9.649512,-4.014641,6.059742,8.054301,-9.478151,8.967289,-2.809089],[-7.988860,-4.662279,-6.265959,-9.749178,-6.958482,5.186105,4.043595,-2.163813,4.066804,-7.806762,3.300917,3.902891,6.915012],[1.426434,2.857617,-2.800878,-3.031528,1.344157,4.219139,0.486597,5.353409,-9.661609,-4.289827,-4.516117,7.346756,-7.059126],[-8.662710,1.226289,3.714114,9.318150,9.015570,-9.731540,-9.820170,-6.359962,3.998075,8.146306,-4.274490,2.459743,-0.117398],[-7.246446,-3.997731,5.010197,-4.199492,5.891571,8.785864,-8.869803,-5.899313,4.123969,-1.010829,-4.224547,3.599955,-9.815909],[6.982868,-3.112221,-2.339651,3.588936,2.525280,7.416978,-3.892952,3.123770,7.219024,-4.719717,-5.745882,-3.778841,8.502229],[-0.535115,-2.908086,-2.448231,-6.567158,-4.676372,8.816161,-0.379700,-0.654466,-9.576741,-5.355235,-7.218910,5.696216,3.717034],[-6.486257,-2.649958,9.270750,-2.551490,-9.008992,7.016292,-6.734218,0.834427,-4.458750,-3.382873,4.861248,1.451392,2.268721],[-3.323292,-7.704307,-5.309521,5.739914,-1.300666,-6.701144,3.489277,4.231365,0.141426,-2.135836,4.288151,-7.710108,5.097953],[-5.279388,7.390128,-2.720717,-0.954047,-3.709132,-8.978614,8.476651,-8.285213,2.322472,-1.829352,-6.116436,-2.867802,-8.564147],[2.501942,-8.898293,0.600653,6.286930,-8.009302,-8.773486,-3.712586,3.573817,-1.044602,9.698343,-7.722860,-8.355293,8.584737],[2.569591,3.387812,8.303016,-1.733344,3.488198,-7.351481,1.631054,1.860534,4.160212,-0.197128,-6.921334,-7.393028,7.008803],[-2.660801,5.203605,-2.328804,-1.045395,9.456645,2.382879,3.537736,7.104843,6.079724,-0.337521,-7.151598,1.172454,-8.042469],[1.318439,2.016099,-9.208368,7.658597,-4.686218,-8.710041,8.638194,-7.601515,3.544108,-1.965508,-9.681945,2.342079,-5.514170]],[[-8.380260,-3.381117,6.923965,3.405232,-0.424951,-6.389929,-0.051866,-0.480743,7.430693,-0.846798,-8.094648,4.584304,-7.283995],[-0.894560,-3.136276,5.895556,-2.403609,-3.422309,3.332109,9.544765,8.695481,4.429566,-4.430569,-5.721357,-5.448939,4.590303],[-5.897935,9.466876,-0.969621,7.759628,-8.716337,-8.166794,-6.429520,-6.116490,-0.528183,-6.940724,3.244803,4.583880,5.403783],[-8.295277,-2.240455,-7.993755,-7.764408,5.712547,8.797180,-9.762070,4.836005,4.716040,1.137982,-7.748632,3.709038,7.939593],[-0.313035,-1.876273,-3.044989,6.961998,-8.948770,2.195552,1.180945,-4.697139,3.149550,-8.378741,8.181975,6.660772,1.422155],[-3.682541,-2.067509,-7.543325,2.901217,-3.158327,6.492572,-4.944923,8.944797,-5.162795,5.928857,5.859067,2.327262,4.878466],[4.538485,9.696854,-6.221070,1.977965,1.519508,-2.075948,-1.211739,-0.727835,-9.412798,-5.971113,0.214866,8.690770,6.600068],[8.862241,-1.394242,3.252009,2.497506,2.731488,-3.524114,-1.758854,-4.508214,-1.087104,5.061301,-1.096279,-7.982655,7.373894],[4.861412,-7.160380,-8.271907,-2.962567,-0.779942,-1.596786,-8.358403,-8.121069,8.195486,8.196926,0.134088,-9.375426,-4.629123],[-8.729492,7.552775,-3.315322,-6.583912,8.333064,6.359748,-0.311657,9.551893,9.539508,-7.565495,9.829140,1.884015,0.565422],[-3.240125,9.887165,-7.403984,6.717718,-3.468537,-4.942842,-1.008456,7.397722,1.341738,-6.083960,-2.481134,4.103884,7.382512],[-5.354036,8.856076,4.209758,-1.668199,-4.777167,-9.341557,-6.361514,-3.545792,-2.200783,8.803536,-5.423124,0.369353,7.884632],[-9.579800,-7.330844,8.267404,-6.544939,-1.423795,0.630395,2.929360,5.558189,9.654353,-9.104988,-3.601566,9.265906,-9.203622],[7.678211,-8.687631,3.781179,5.774413,-5.566286,2.981362,4.716925,-5.205337,-1.607452,-6.009911,9.883772,8.082418,5.697323]],[[-4.504382,8.252380,-2.467441,-4.339146,-7.065849,-4.176052,8.476863,-8.043278,6.409686,-5.434726,-3.368665,4.233206,-3.080508],[1.261285,-4.176474,-3.387814,0.571883,8.440261,-3.862344,-7.682620,-3.492287,-8.613706,4.733140,-8.814488,-2.548224,-2.435458],[6.251889,2.564427,-3.921346,9.757896,-8.032324,-2.271325,-0.017588,2.817121,3.117271,0.053811,-6.398691,-2.073699,-3.643277],[2.349921,3.568595,-5.798264,9.616833,7.231895,-6.680956,4.899322,-4.102068,-2.856000,3.762200,5.089998,1.566960,-6.496981],[-2.532348,9.175139,0.151002,2.363337,-0.789051,9.737333,4.756096,5.628956,-6.652437,-6.399276,-6.240486,7.619177,9.128996],[3.690791,3.158169,-3.308003,-2.605177,-6.242389,-8.817128,-2.918888,5.480946,1.115985,-0.904445,-0.909652,2.312780,9.685675],[7.668151,0.736951,4.990497,3.112564,4.876357,-1.471402,2.954550,9.290491,-6.275502,-6.023066,-6.298139,4.225089,9.534820],[4.285023,-5.868448,-0.793910,2.804944,-1.283635,-5.020399,3.050396,-9.477806,4.325273,-9.663992,2.298460,2.116722,8.862834],[8.868875,-4.669684,-2.636921,0.135440,7.039439,1.511466,-6.017780,2.646417,4.569598,-1.720366,5.670646,-3.303680,-7.904892],[-1.262367,5.679157,5.312807,-8.916301,7.648728,7.318300,-3.405556,9.526071,8.538186,6.552685,-1.422423,6.544071,-6.530381],[4.170048,1.793711,9.516225,1.044200,8.206668,4.263377,-0.899670,-5.315117,-8.713397,-9.759648,-0.578236,7.577130,1.339136],[1.514098,-3.359257,4.810756,-2.953725,1.699532,-5.910190,-1.662735,-4.839743,-8.790964,1.721663,-9.711848,0.185401,2.099847],[7.914437,9.766269,-2.967983,1.301630,7.754797,-8.044169,8.792052,9.010377,-8.570274,6.967562,1.788361,-6.605633,3.398347],[-9.272840,5.901605,-2.458743,-1.448027,9.815834,-1.598624,9.375884,9.112915,0.114796,-8.316289,6.431027,5.970289,2.416472]],[[-3.003941,3.682743,-2.067519,-9.160428,6.546405,-5.984340,-5.706015,-2.206592,7.377351,-5.852192,-1.433519,3.167502,-8.693337],[5.437834,-1.037299,5.980836,-6.697096,-5.836758,-1.803574,8.365468,7.454850,-8.371865,1.742465,7.301197,-9.877423,-2.332425],[6.503237,6.410529,-9.922201,5.718402,2.033722,8.755363,5.474450,7.087708,-2.236337,3.627141,-8.326132,7.642153,8.656621],[-7.751139,6.178473,-1.241036,7.021284,-2.423923,-8.890733,-1.329442,-5.729045,-1.443187,1.784456,-7.411342,-6.505660,4.520731],[1.981393,-5.735104,1.671766,-9.538032,5.534136,-3.210664,9.034754,-9.762191,-2.001297,7.834885,-6.763528,1.880294,7.250704],[3.125899,5.801375,4.017174,-0.111130,6.640003,-8.266543,-1.548655,-1.093128,-2.576043,2.169108,-3.274380,1.175979,5.720570],[5.079638,4.767703,-5.214730,-0.071320,-7.362017,-5.615434,7.624088,-7.271881,5.183276,-8.405632,7.210960,2.583513,8.464352],[2.049039,-1.005763,4.783026,2.141560,-4.303353,9.401084,2.242924,-7.493182,-0.855349,-4.538987,-6.679993,1.892070,4.310933],[2.727022,-1.569831,-6.997628,-9.130719,-4.077596,-6.688920,-0.826678,0.912409,6.571727,8.206001,-3.917628,-3.164991,9.548779],[-2.832129,4.771773,4.631503,4.800820,7.901254,4.546930,-9.349526,6.835604,4.302020,5.188444,-1.681823,-4.784357,0.362084],[9.244220,7.818128,-5.174786,-8.826579,8.631982,-6.687855,1.902259,5.351318,1.330377,-0.721755,-7.762781,1.317974,-5.012094],[6.282277,1.320201,0.699242,-5.363623,3.120802,-2.581446,-8.407930,-3.027272,-6.109271,-6.308128,-7.340721,9.728253,1.921684],[0.179619,-7.195984,-2.500176,-8.567006,-2.216216,-6.332317,-3.350577,6.926621,2.627040,-8.890612,-4.417078,9.071542,-5.992488],[4.165409,-3.822022,-1.666617,4.265431,9.206588,-6.209226,3.312579,6.212388,2.244455,-4.743383,8.217480,-2.806793,9.832874]],[[-4.313511,2.477821,-0.634836,1.080350,6.194293,-7.481136,-5.998310,-5.192937,7.185296,7.481383,-5.592082,-0.858619,1.802685],[-9.883041,-6.283734,-4.067321,8.208753,1.149270,-4.655384,-0.840908,-6.334016,-3.813495,3.781167,3.590943,5.436580,0.660192],[7.894034,-7.945173,2.627183,-9.287048,-7.929392,5.362540,4.254360,2.925240,2.673560,3.580792,5.028223,-6.391495,7.806362],[9.953697,-7.365936,-1.191601,3.614184,-0.018147,5.510001,-5.145119,2.141284,5.541278,-5.325836,6.559901,7.069941,-7.249865],[-0.343840,4.957922,-6.560376,-6.660031,1.489055,4.413937,2.664960,-3.013453,-0.445021,-9.198205,-1.472078,-7.047369,1.451783],[-7.954778,6.197503,2.047607,8.155829,5.002707,5.387971,-2.470743,-6.062740,4.023046,2.417410,-0.573928,-3.748763,2.755215],[3.923830,-0.899908,7.092488,8.464030,7.919293,6.178479,8.887895,-8.619732,-9.236947,7.766998,-3.587495,0.012690,-4.669250],[-6.667108,-2.909720,6.027365,9.725076,-4.894286,-8.172831,6.087669,-6.819987,-9.025675,0.261061,7.968125,1.993189,-0.975973],[0.299858,9.200367,-8.377229,8.646959,-0.352126,-4.473329,-7.129043,-4.517338,-1.404600,-0.344669,-1.132231,-9.627811,8.674189],[-8.482845,-5.894521,3.457811,-7.570925,-6.123418,-1.914756,8.379922,-9.478925,-3.932374,2.031601,-8.999734,7.643659,-7.439314],[9.308202,9.642055,-1.416044,-5.554669,8.751788,6.609396,-1.025056,-3.956841,3.933509,5.147866,3.934489,-1.868178,9.345531],[-7.278938,1.454517,-7.215004,9.812262,6.760804,6.714718,-8.430255,0.047459,-0.627379,6.790311,-0.599015,1.785171,6.133856],[-1.554440,7.309119,-0.235872,-0.977934,-2.632797,-9.751933,-7.884491,-0.849256,4.554799,-7.895992,-1.319682,4.284652,9.271582],[-5.801760,4.026045,1.515567,9.087173,8.203286,-0.977956,8.414323,3.559384,-0.456074,1.085191,5.160023,-7.233482,-6.624641]],[[3.432979,-4.282058,2.980187,1.537183,-1.075406,-7.400279,9.267438,4.341479,5.346822,-4.384651,1.218189,4.521017,7.755426],[0.159757,-3.709825,-7.699419,0.914611,5.245678,8.086202,-2.134483,6.741481,8.731582,-2.455398,0.686633,5.945968,-1.956960],[-9.884295,-0.373727,6.356089,9.900533,4.770255,7.702429,1.260030,6.185547,6.526769,-5.193671,8.928458,8.822546,8.478305],[1.495704,-0.214432,0.422637,9.861467,9.028901,2.265060,7.183292,-3.252920,-9.497741,9.953441,4.624691,8.790897,8.540628],[5.515715,-0.912472,8.004640,-2.450155,-5.004131,7.391890,2.504084,-4.916441,1.117709,5.832165,-8.883196,3.047402,5.721181],[-5.831162,3.169790,5.231158,-3.330277,0.349215,-1.648945,5.537552,0.390634,-6.136383,7.496799,1.890267,-0.039085,9.905413],[-4.563120,-3.074273,2.521865,-0.655025,6.506453,0.707997,-5.172963,9.863685,-5.658529,3.718693,4.819341,-6.128003,-9.746245],[-7.328016,-4.361179,7.562026,-1.862987,6.099826,-4.555284,-7.152017,7.772162,1.862694,-0.520348,-2.643486,4.466320,-2.284164],[-3.643332,-2.391851,8.526142,6.439790,-2.784118,-3.168836,6.059075,-8.816469,-5.691172,0.030034,-8.298204,3.927966,9.128756],[-4.255128,9.743407,-2.913910,2.003024,-2.431252,6.132178,0.414369,-2.840900,-1.737467,0.874383,7.307632,-8.261136,2.312719],[7.396717,7.484732,4.526883,9.983109,0.027646,-9.458100,-6.378754,9.332067,-3.202438,5.715711,-4.588364,-5.748268,-1.124547],[6.248316,-7.196315,-6.831186,7.157097,5.924203,8.175608,6.164282,-4.677406,1.355638,-4.374052,-8.761823,7.701368,1.253476],[2.749156,9.467603,9.285171,-0.287902,-3.523169,6.652161,1.126241,-1.076972,-8.482738,7.663529,2.736816,7.086202,3.267169],[-3.561748,-8.627536,-5.990838,-8.067611,4.455278,9.631919,1.149147,-8.329440,6.129093,7.187421,-0.560015,-4.899751,-3.730606]],[[9.833310,4.070517,4.630475,6.844127,-0.697086,-9.559620,-6.029899,-6.909110,3.934192,8.843406,5.498568,0.017718,-4.974206],[-6.222170,4.781934,-0.944031,-0.445985,3.982916,1.305707,9.510909,7.442726,-1.108102,-3.555088,3.089032,7.032725,2.087265],[0.110425,4.324808,0.385266,-0.621333,6.650874,6.042370,6.505599,2.136857,2.281620,-3.907672,-4.962479,-3.111775,0.580661],[2.979381,-9.318969,0.648848,2.811336,4.601978,-7.797315,-8.024141,-7.373252,-2.033080,-7.277685,0.220976,-6.816022,-5.222341],[-3.079398,1.562416,-8.644940,-0.893183,-3.991920,1.794848,1.927804,-8.335320,-4.106510,0.032264,-3.943650,-3.295126,3.048211],[-1.898974,5.804332,6.948361,-9.823299,-5.526781,3.937710,1.972441,-5.435641,3.006373,-8.414264,-9.420440,-1.084169,9.516161],[2.288390,-3.613026,9.689194,-5.964998,1.415332,1.506195,7.902194,9.662200,-5.491508,-6.185086,1.099390,-0.842701,0.935832],[-2.649816,-8.854476,-2.832073,-2.624049,7.202185,3.291901,-0.151036,2.442835,-7.759027,5.396225,2.572413,8.442167,0.739265],[3.161171,-0.317596,-1.599472,8.727346,-6.164118,-3.718973,-4.240778,4.096819,9.429910,-8.434518,6.674671,2.727858,-5.063644],[-9.837023,-2.222642,-7.253484,-2.769132,-3.882639,-8.588943,5.751877,0.668290,2.021110,7.384158,-3.190480,-9.072366,3.023146],[9.764571,4.136076,3.298053,6.176497,8.217031,-8.119114,-7.748371,-1.051271,-4.545195,-0.684935,7.168650,0.505736,-0.169154],[3.119321,-4.317239,-7.978690,-4.590974,-2.640320,8.597948,6.859559,6.504236,-7.513516,1.325634,-0.728960,6.077490,1.653995],[-9.325544,1.696605,-7.514686,-9.610424,-0.094017,7.204808,-3.729225,-2.926968,5.695420,-2.007240,5.292570,4.719193,9.556015],[-0.404602,-5.154904,7.552710,-4.059539,3.021699,8.638399,-8.600478,-3.164162,-7.774060,7.763808,-1.946674,1.755510,0.337997]],[[-3.908999,8.477948,0.583337,-1.639458,1.895736,-7.946380,-6.214387,8.368290,3.785120,1.793789,2.578585,-8.725063,4.559665],[4.613973,2.330963,5.442092,4.962727,3.991703,8.899077,-2.193267,1.827376,-8.464630,-2.878459,-2.140258,2.829670,8.679723],[2.009643,1.874535,1.078344,4.898934,-0.034915,-6.230379,9.734156,-1.560618,2.938550,-3.986965,5.176014,-9.296810,-0.537921],[-4.362688,2.811418,-3.441991,1.063154,1.091707,-5.246860,-1.654592,9.893131,6.536349,-6.297553,3.056256,-1.646097,7.883310],[5.979458,-7.127446,-9.457048,8.474462,-3.858558,-7.805139,-0.511110,-4.459652,1.652896,4.872127,4.573617,8.586154,-9.523363],[6.965305,-0.114201,-7.220306,3.597471,8.855457,9.119911,0.298428,-3.319143,-4.698677,3.572762,-9.990011,4.271087,3.502456],[-8.788380,-1.463162,-2.734300,7.795794,-5.070637,-7.339117,-4.911668,4.329929,-1.357028,-8.825707,1.111240,8.424614,3.706686],[5.692112,5.643709,-7.166674,9.410273,-7.380074,-0.832400,7.328696,-1.153375,-6.354816,7.276819,-3.774656,-9.893325,1.018221],[8.147057,-6.391578,-2.984838,2.807468,6.837675,5.090921,7.956710,-0.862051,6.562225,-1.582397,7.079461,1.909169,5.543607],[-3.887237,-3.714725,3.561300,3.443688,-1.760266,5.439253,2.538798,5.454686,4.219468,6.318565,5.638040,6.917061,-9.207201],[-0.708826,-4.425152,0.335181,-2.667200,-9.104424,-4.542494,6.380871,5.639962,-2.699983,8.609537,7.829769,-2.783228,-7.098108],[8.633701,-6.949197,-7.059002,3.815509,-6.966324,-5.551405,-1.403845,-8.596242,-2.645920,-6.900453,-9.060330,-2.067160,-3.298640],[-8.219855,-2.517060,-2.829667,1.324482,6.084613,-1.493813,-7.252424,-3.443067,6.605306,2.191449,6.984217,4.901562,6.154472],[-9.634392,-6.897742,0.302097,-6.794255,8.695977,4.953448,0.921092,0.291091,-9.941712,-1.765019,-6.006034,0.017356,7.417387]],[[2.711570,-6.822146,-5.672501,-6.735451,-9.794580,2.024301,-4.463660,1.216420,1.743786,-1.350070,-3.771745,-9.755647,0.726184],[-4.684016,-8.461531,7.348199,0.300898,-2.926676,0.081311,-7.747818,-6.686568,-0.019693,-9.189269,8.407250,-0.258040,-9.029704],[-8.791053,2.716059,4.385297,-8.264743,5.284332,5.376114,-1.512890,-7.684304,4.355332,4.896863,-6.189159,-4.236721,9.066829],[9.431086,8.768528,2.212180,-0.461878,-4.899709,-0.060236,-8.570110,-3.705577,-0.600779,2.570470,-9.458416,9.036526,8.455597],[4.810357,6.429538,5.059243,-5.418045,-9.260129,-7.963073,-9.141351,5.658546,9.096567,-6.274645,3.745652,-6.591395,5.000003],[7.239612,-4.133960,5.032267,-0.693083,6.404196,7.481178,9.595454,0.023083,-6.830527,-5.535825,-7.384449,4.234628,4.428848],[-7.566052,-3.385290,5.829127,-2.392570,-5.283828,2.965017,-3.691813,-9.729182,0.752580,-0.048099,4.687814,-5.540506,-4.003022],[6.286232,-5.442534,-7.033588,4.567182,-7.183287,4.509817,-6.866853,-7.360292,-2.962443,-7.363320,-1.010670,-1.990379,-7.253672],[-6.121865,8.596574,-7.578135,-1.964773,-9.529983,6.758850,2.158974,-1.244274,-6.501506,-5.572561,-4.874279,-8.937005,1.262529],[-0.752343,3.954107,9.255087,-6.958875,-7.952516,-9.314432,6.930335,5.155554,-0.723662,-5.191494,4.930335,9.260099,-3.551885],[8.518622,8.344408,1.495106,-7.407790,-2.982515,-9.857766,2.984395,2.835998,-3.016953,-5.465429,3.541767,-3.800392,2.191462],[0.478564,-5.568895,-7.354210,-2.055980,-1.784992,-2.100540,-2.461581,6.920954,3.389352,6.255958,-7.203455,6.256243,3.207755],[3.448005,-3.300551,-1.169979,6.570486,9.313690,-4.517648,1.408642,-4.942783,7.923932,7.774196,6.677769,9.351621,0.250814],[-5.191286,-3.194326,-4.765306,-0.516883,-0.481327,-8.766391,2.982567,-5.000993,8.909386,-4.419878,3.662075,-4.684571,-7.169625]]], dtype = "float32")#candidate|3347|(11, 14, 13)|const|float32
const_3348 = relay.constdtype = "float32")#candidate|3348|(11, 14, 13)|const|float32
bop_3349 = relay.divide(const_3347.astype('float32'), relay.reshape(const_3348.astype('float32'), relay.shape_of(const_3347))) # shape=(11, 14, 13)
bop_3352 = relay.logical_xor(const_3347.astype('int64'), relay.reshape(const_3348.astype('int64'), relay.shape_of(const_3347))) # shape=(11, 14, 13)
output = relay.Tuple([bop_3349,bop_3352,])
output2 = relay.Tuple([bop_3349,bop_3352,])
func_3358 = relay.Function([], output)
mod['func_3358'] = func_3358
mod = relay.transform.InferType()(mod)
output = func_3358()
func_3359 = relay.Function([], output)
mutated_mod['func_3359'] = func_3359
mutated_mod = relay.transform.InferType()(mutated_mod)
func_700_call = mod.get_global_var('func_700')
func_701_call = mutated_mod.get_global_var('func_701')
call_3483 = relay.TupleGetItem(func_700_call(), 1)
call_3484 = relay.TupleGetItem(func_701_call(), 1)
func_3259_call = mod.get_global_var('func_3259')
func_3260_call = mutated_mod.get_global_var('func_3260')
call_3487 = relay.TupleGetItem(func_3259_call(), 0)
call_3488 = relay.TupleGetItem(func_3260_call(), 0)
uop_3507 = relay.atan(call_3487.astype('float32')) # shape=(168, 8)
uop_3509 = relay.atan(call_3488.astype('float32')) # shape=(168, 8)
func_807_call = mod.get_global_var('func_807')
func_809_call = mutated_mod.get_global_var('func_809')
call_3523 = relay.TupleGetItem(func_807_call(), 1)
call_3524 = relay.TupleGetItem(func_809_call(), 1)
bop_3525 = relay.divide(uop_3507.astype('float32'), relay.reshape(call_3523.astype('float32'), relay.shape_of(uop_3507))) # shape=(168, 8)
bop_3528 = relay.divide(uop_3509.astype('float32'), relay.reshape(call_3524.astype('float32'), relay.shape_of(uop_3509))) # shape=(168, 8)
output = relay.Tuple([call_3483,bop_3525,])
output2 = relay.Tuple([call_3484,bop_3528,])
func_3529 = relay.Function([], output)
mod['func_3529'] = func_3529
mod = relay.transform.InferType()(mod)
output = func_3529()
func_3530 = relay.Function([], output)
mutated_mod['func_3530'] = func_3530
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3598 = relay.var("var_3598", dtype = "uint8", shape = (3, 3, 13))#candidate|3598|(3, 3, 13)|var|uint8
var_3599 = relay.var("var_3599", dtype = "uint8", shape = (3, 3, 13))#candidate|3599|(3, 3, 13)|var|uint8
bop_3600 = relay.minimum(var_3598.astype('uint8'), relay.reshape(var_3599.astype('uint8'), relay.shape_of(var_3598))) # shape=(3, 3, 13)
output = bop_3600
output2 = bop_3600
func_3606 = relay.Function([var_3598,var_3599,], output)
mod['func_3606'] = func_3606
mod = relay.transform.InferType()(mod)
mutated_mod['func_3606'] = func_3606
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3606_call = mutated_mod.get_global_var('func_3606')
var_3608 = relay.var("var_3608", dtype = "uint8", shape = (3, 3, 13))#candidate|3608|(3, 3, 13)|var|uint8
var_3609 = relay.var("var_3609", dtype = "uint8", shape = (3, 3, 13))#candidate|3609|(3, 3, 13)|var|uint8
call_3607 = func_3606_call(var_3608,var_3609,)
output = call_3607
func_3610 = relay.Function([var_3608,var_3609,], output)
mutated_mod['func_3610'] = func_3610
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1719_call = mod.get_global_var('func_1719')
func_1721_call = mutated_mod.get_global_var('func_1721')
call_3617 = relay.TupleGetItem(func_1719_call(), 1)
call_3618 = relay.TupleGetItem(func_1721_call(), 1)
output = relay.Tuple([call_3617,])
output2 = relay.Tuple([call_3618,])
func_3628 = relay.Function([], output)
mod['func_3628'] = func_3628
mod = relay.transform.InferType()(mod)
output = func_3628()
func_3629 = relay.Function([], output)
mutated_mod['func_3629'] = func_3629
mutated_mod = relay.transform.InferType()(mutated_mod)
func_807_call = mod.get_global_var('func_807')
func_809_call = mutated_mod.get_global_var('func_809')
call_3630 = relay.TupleGetItem(func_807_call(), 0)
call_3631 = relay.TupleGetItem(func_809_call(), 0)
func_3034_call = mod.get_global_var('func_3034')
func_3035_call = mutated_mod.get_global_var('func_3035')
call_3647 = relay.TupleGetItem(func_3034_call(), 0)
call_3648 = relay.TupleGetItem(func_3035_call(), 0)
func_807_call = mod.get_global_var('func_807')
func_809_call = mutated_mod.get_global_var('func_809')
call_3672 = relay.TupleGetItem(func_807_call(), 1)
call_3673 = relay.TupleGetItem(func_809_call(), 1)
func_3119_call = mod.get_global_var('func_3119')
func_3121_call = mutated_mod.get_global_var('func_3121')
call_3676 = relay.TupleGetItem(func_3119_call(), 1)
call_3677 = relay.TupleGetItem(func_3121_call(), 1)
output = relay.Tuple([call_3630,call_3647,call_3672,call_3676,])
output2 = relay.Tuple([call_3631,call_3648,call_3673,call_3677,])
func_3680 = relay.Function([], output)
mod['func_3680'] = func_3680
mod = relay.transform.InferType()(mod)
output = func_3680()
func_3681 = relay.Function([], output)
mutated_mod['func_3681'] = func_3681
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3628_call = mod.get_global_var('func_3628')
func_3629_call = mutated_mod.get_global_var('func_3629')
call_3700 = relay.TupleGetItem(func_3628_call(), 0)
call_3701 = relay.TupleGetItem(func_3629_call(), 0)
func_2087_call = mod.get_global_var('func_2087')
func_2088_call = mutated_mod.get_global_var('func_2088')
call_3702 = func_2087_call()
call_3703 = func_2087_call()
func_1194_call = mod.get_global_var('func_1194')
func_1195_call = mutated_mod.get_global_var('func_1195')
call_3714 = relay.TupleGetItem(func_1194_call(), 1)
call_3715 = relay.TupleGetItem(func_1195_call(), 1)
uop_3727 = relay.erf(call_3700.astype('float32')) # shape=(168, 8)
uop_3729 = relay.erf(call_3701.astype('float32')) # shape=(168, 8)
func_3344_call = mod.get_global_var('func_3344')
func_3346_call = mutated_mod.get_global_var('func_3346')
call_3735 = func_3344_call()
call_3736 = func_3344_call()
func_1194_call = mod.get_global_var('func_1194')
func_1195_call = mutated_mod.get_global_var('func_1195')
call_3741 = relay.TupleGetItem(func_1194_call(), 3)
call_3742 = relay.TupleGetItem(func_1195_call(), 3)
uop_3747 = relay.acosh(uop_3727.astype('float32')) # shape=(168, 8)
uop_3749 = relay.acosh(uop_3729.astype('float32')) # shape=(168, 8)
bop_3750 = relay.power(uop_3747.astype('float32'), relay.reshape(call_3735.astype('float32'), relay.shape_of(uop_3747))) # shape=(168, 8)
bop_3753 = relay.power(uop_3749.astype('float32'), relay.reshape(call_3736.astype('float32'), relay.shape_of(uop_3749))) # shape=(168, 8)
uop_3754 = relay.cos(uop_3727.astype('float32')) # shape=(168, 8)
uop_3756 = relay.cos(uop_3729.astype('float32')) # shape=(168, 8)
func_2288_call = mod.get_global_var('func_2288')
func_2292_call = mutated_mod.get_global_var('func_2292')
const_3764 = relay.const([[2.948576,2.824443,7.166873,7.216961,-8.238144,1.524538,-2.417899,-8.778688,1.580720,2.089535],[6.298812,8.121075,-4.705827,9.839754,4.438669,-6.452504,-2.753725,-1.475498,3.017493,-0.726437],[-7.777629,-6.364192,0.845052,-3.043185,6.549325,-2.620183,6.558036,-2.438229,-3.040764,-3.220220],[-7.394903,7.533743,-9.169260,4.959779,8.561858,8.937465,2.017537,-0.470286,-3.353081,-2.059665],[-5.062294,0.739041,-1.774563,2.486629,7.167821,3.509311,-4.154544,-7.714044,-3.958858,-5.035608],[9.568794,7.563948,9.475249,0.171801,3.905281,-6.541102,-1.845337,0.087466,4.275008,-9.163993],[-1.415584,9.282449,-8.620916,9.202292,4.280696,-7.270478,-7.553771,6.809517,8.147274,9.891778],[-3.481379,-0.548013,3.303639,-7.283034,-0.615445,9.966541,-1.011483,6.332036,7.221868,3.093963],[-7.862074,9.329348,-2.212987,-9.417023,-9.940172,-4.614960,2.288524,7.461931,-4.851629,-3.565454],[-5.424248,9.138421,-2.429065,7.159535,8.411687,-1.435142,-3.999616,-5.993363,-0.587237,-4.352718],[6.140654,-8.027814,5.162145,5.431337,3.636678,-6.328609,-1.499586,-8.779709,-8.653145,-6.788369],[-0.669360,3.582812,-3.542642,6.674576,6.889219,1.766444,-6.724938,9.938848,-0.765586,8.702962],[-9.452317,8.081649,9.896328,5.712900,-5.073201,-9.803368,-7.522577,7.348951,2.511979,-6.644088],[1.613413,0.090062,6.859848,0.974264,-9.013028,8.923924,3.879413,1.902708,-5.582173,-6.723324],[-7.809494,5.058969,0.685841,3.726295,-0.395980,8.928404,-8.655676,6.474380,8.035851,4.598181],[-1.529185,9.669181,3.725159,-1.722767,3.158167,-4.253109,3.963181,1.099812,5.237465,-6.841487],[-2.542980,4.162169,-2.580538,-6.455462,8.946092,4.957539,-3.013033,2.837563,4.713872,0.585011],[9.847945,-3.984290,9.498375,8.359361,9.883736,-7.432426,3.167741,-9.783688,6.987595,9.278186],[-2.375105,-0.826139,5.487793,-9.385689,8.144878,-0.325543,-5.158017,-4.378146,-5.793915,-3.232776],[2.894047,8.230389,-0.035604,-4.096923,-2.086279,-0.555197,0.970388,2.967009,3.173044,0.956297],[5.074538,6.948692,3.390563,7.811313,2.476368,6.385141,5.381492,4.910548,-1.628872,0.493936],[8.344163,5.765022,-9.719106,-3.874884,-6.153488,-0.086889,1.965648,2.105506,5.074943,-8.455560],[-0.735828,9.538221,-6.478125,7.176735,1.598821,0.252940,2.461794,9.512817,2.839648,7.059057],[5.070275,0.035104,5.292150,6.826354,1.670834,7.841239,8.693884,8.616272,8.197748,-7.007755]], dtype = "float32")#candidate|3764|(24, 10)|const|float32
call_3763 = relay.TupleGetItem(func_2288_call(relay.reshape(const_3764.astype('float32'), [5, 16, 3]), relay.reshape(call_3741.astype('float32'), [720,]), ), 0)
call_3765 = relay.TupleGetItem(func_2292_call(relay.reshape(const_3764.astype('float32'), [5, 16, 3]), relay.reshape(call_3741.astype('float32'), [720,]), ), 0)
func_3301_call = mod.get_global_var('func_3301')
func_3304_call = mutated_mod.get_global_var('func_3304')
call_3768 = relay.TupleGetItem(func_3301_call(relay.reshape(call_3741.astype('float32'), [180, 4])), 1)
call_3769 = relay.TupleGetItem(func_3304_call(relay.reshape(call_3741.astype('float32'), [180, 4])), 1)
func_854_call = mod.get_global_var('func_854')
func_857_call = mutated_mod.get_global_var('func_857')
call_3784 = relay.TupleGetItem(func_854_call(relay.reshape(call_3768.astype('float32'), [12, 60])), 1)
call_3785 = relay.TupleGetItem(func_857_call(relay.reshape(call_3768.astype('float32'), [12, 60])), 1)
output = relay.Tuple([call_3702,call_3714,call_3741,bop_3750,uop_3754,call_3763,const_3764,call_3768,call_3784,])
output2 = relay.Tuple([call_3703,call_3715,call_3742,bop_3753,uop_3756,call_3765,const_3764,call_3769,call_3785,])
func_3793 = relay.Function([], output)
mod['func_3793'] = func_3793
mod = relay.transform.InferType()(mod)
mutated_mod['func_3793'] = func_3793
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3793_call = mutated_mod.get_global_var('func_3793')
call_3794 = func_3793_call()
output = call_3794
func_3795 = relay.Function([], output)
mutated_mod['func_3795'] = func_3795
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3358_call = mod.get_global_var('func_3358')
func_3359_call = mutated_mod.get_global_var('func_3359')
call_3810 = relay.TupleGetItem(func_3358_call(), 0)
call_3811 = relay.TupleGetItem(func_3359_call(), 0)
uop_3832 = relay.sqrt(call_3810.astype('float64')) # shape=(11, 14, 13)
uop_3834 = relay.sqrt(call_3811.astype('float64')) # shape=(11, 14, 13)
func_1069_call = mod.get_global_var('func_1069')
func_1073_call = mutated_mod.get_global_var('func_1073')
var_3844 = relay.var("var_3844", dtype = "int8", shape = (1344,))#candidate|3844|(1344,)|var|int8
const_3845 = relay.const([-8.287541,-2.713336,6.226910,-0.301565,5.706682,-6.126419,-6.352166,-4.455845,1.315111,-1.644707,6.643324,-2.176331,5.439288,-4.100547,-6.268369,6.025939,1.476983,-1.680413,6.425252,5.400323,-1.199635,2.734581,-4.684108,5.140187,6.983945,-4.758093,-3.584453,-3.860412,0.243105,-5.752483,9.877534,-1.611600,7.512980,-7.201579,-2.413328,3.177248,1.395616,2.136673,7.068180,-3.307453,-4.663195,7.058726,9.914324,-5.036842,-3.189065,-0.347479,-9.646659,-4.444067,9.950720,-7.442845,-4.937659,-4.051641,-7.740726,9.802149,7.036707,3.575822,8.291819,-8.806490,-3.571187,1.035282,9.414085,6.951134,5.336533,9.608457,-3.845211,-8.029202,-4.923734,-7.445765,-1.268951,-9.354226,8.294677,5.762837,-8.112044,3.318763,-8.194586,2.633340,5.543982,9.895433,-0.790002,2.484809,-2.662841,2.485254,0.152489,9.813517,-9.294764,4.006895,0.933855,-6.622119,-4.116451,3.691106,-9.441564,-4.599404,0.493893,-3.031781,-0.758400,-7.940465,1.443192,9.778748,9.665640,-6.534536,-0.001146,-6.771783,-3.719494,2.405291,-1.584153,9.686711,0.995164,-3.385785,0.333825,-1.105682,7.588238,-5.294580,9.990871,1.017164,4.780111,-2.034019,3.953080,6.364133,4.851323,-6.916979,6.659407,-4.356409,5.913791,3.542753,-9.752065,-4.698869,-3.372114,-5.790361,7.960150,9.935672,-7.967105,-5.585330,-9.599335,8.022475,4.594652,0.807828,-3.178425,7.519693,3.191279,-7.804017,8.427336,9.220920,-0.414058,0.031410,7.008476,-0.330673,-2.675729,2.421250,-4.006711,-0.239990,-7.829319,4.061741,0.522082,-0.671610,3.553678,-5.039630,9.062164,5.997771,-8.931710,6.414636,4.793052,6.606106,3.328729,-7.721328,0.847314,3.479903,-2.169943,-3.488277,2.624293,-4.252972,-8.748691,9.630929,-2.783393,4.875747,0.800430,-0.580900,-8.702505,-8.731396,-9.140520,7.248250,4.948979,5.447445,4.872314,-9.017930,-0.425861,-8.946783,9.623443,8.117979,-5.459118,-9.328761,3.146966,-5.054327,-7.068793,9.876468,0.623975,1.837279,4.932794,-8.258086,-5.954399,-5.851370,-9.550403,4.753705,-2.834503,1.170341,6.994434,9.243528,1.004529,-7.951718,-8.392419,-5.741592,6.603943,0.574057,9.558998,6.650477,-3.777444,-2.490312,-7.400282,-6.356160,-8.654562,9.529193,-4.683323,1.508456,-9.262435,5.353560,8.204113,-2.458567,0.384272,-9.163203,-0.346842,4.646597,5.977973,7.300169,7.733288,-7.877690,4.729925,-2.883753,-1.649232,8.777363,7.502857,-2.057646,6.644020,9.432959,-6.682482,4.566283,-3.055893,5.989675,-3.696958,7.612069,-2.888429,-3.523563,-0.905411,1.083630,-5.678250,1.235026,-2.127793,-3.890797,2.816569,-2.933488,7.910655,-5.149971,-9.230510,5.180064,-4.415570,6.845794,1.075809,-3.487751,-4.013527,-4.525568,9.026977,-6.895697,4.450073,5.954629,3.577475,-8.710324,8.768877,-2.506170,-8.129706,-7.089910,-7.061270,-7.661664,5.266671,0.110094,-3.372461,-7.938556,-5.726513,5.844953,-0.402799,-2.541082,7.101986,-6.015846,1.937121,-9.451299,9.954132,-9.618732,-5.841226,6.912642,9.451403,3.064123,-7.345157,9.807471,9.233128,6.647049,2.166720,1.928076,-8.122550,9.558581,-8.394959,-5.172428,8.893399,2.554766,0.193055,3.455307,-1.236061,-7.252945,6.913502,6.718414,9.434279,-5.318398,-1.030161,4.931099,1.012095,-0.751919,-5.429364,8.214706,7.769301,-1.902087,2.215072,4.089886,-4.885177,7.308171,-1.265111,-5.760335,0.677229,-5.990143,-1.623912,-9.845338,9.207912,1.469284,9.005249,3.019740,-5.343172,3.561769,3.731156,1.688014,2.579925,8.153666,1.255645,1.391909,-0.305179,-1.940791,0.349206,0.230757,7.923810,-4.988842,8.653862,4.591963,7.727978,-7.887178,0.054826,8.300611,-1.908335,-9.415939,-0.406305,-9.550759,-1.042442,-2.395907,1.966535,-6.508695,-4.170722,-2.637498,-9.927078,2.705018,-4.349048,-2.215553,3.885883,-5.755992,5.227925,8.906993,-8.821111,-6.959492,-0.114184,-4.896609,-9.543915,-9.740617,-3.981563,9.108135,-9.470146,-2.561978,-4.978319,1.120476,-8.826317,9.853882,-5.016396,-1.642810,-3.592571,8.437959,9.560305,-5.735886,-5.030152,-0.116249,1.198010,7.050161,9.648765,4.956053,3.342041,0.468243,-4.958454,5.627298,-4.029622,-2.827231,-4.689364,9.747672,6.308293,-3.278327,8.767975,-2.777883,-9.780476,-3.699294,-5.093200,1.036432,-1.789958,3.458231,9.340839,-6.246593,-1.205260,-7.500335,-4.474449,-0.384130,4.474081,-2.194473,-6.122425,-4.477515,-6.872303,-4.304538,-6.136215,-7.355102,-3.176273,5.527078,-0.421360,0.226284,-5.784515,-5.644509,-9.777522,7.239020,2.927492,-3.987078,-6.908511,-0.821436,5.770375,7.453837,-1.181259,8.984348,-4.041033,-2.518197,-1.271168,4.110692,0.056351,5.597545,0.433597,3.475940,-2.342727,-1.445472,-1.529960,-3.560203,7.290424,4.181845,9.570763,-6.916860,-1.154205,4.454781,0.223744,4.919706,-4.379871,-9.737375,9.203259,-9.659201,3.373011,2.439348,3.784779,5.611263,1.587014,-7.591796,7.282411,-9.262853,3.821424,-4.295931,6.239764,5.812749,7.517750,1.762130,9.108799,-4.723716,-9.247694,2.221274,3.887356,-9.642119,9.763465,-9.201980,8.794673,-8.236208,-0.409413,8.435080,2.909243,2.739016,-0.708681,1.045063,-0.572052,-5.784181,2.496955,-5.208755,2.809414,-2.147603,9.573198,1.166287,4.622199,0.245283,3.930658,5.996344,5.847950,0.627765,8.509086,1.371202,-2.373349,-3.640450,6.863859,6.636224,0.305933,-4.585009,-6.958889,-0.426881,8.161574,1.715469,-4.516463,0.325152,8.781533,-0.654068,-1.630024,-0.181581,0.030006,-8.563371,0.133963,3.035573,6.636493,8.504470,-9.516193,-7.167714,8.582247,-5.792732,-7.867473,6.277956,-3.042132,1.448688,8.610210,1.688714,-3.801313,-6.402467,0.931460,2.570050,7.568259,-1.076219,-4.915790,0.998699,-9.078331,8.450052,-1.042305,-7.736717,-1.263880,8.510577,7.453595,0.625955,-2.752339,3.511047,2.404834,5.152914,3.184303,-6.462248,-6.327242,9.743139,1.179445,3.541145,5.752674,-1.191192,4.804180,-9.565008,4.488409,1.052134,6.735201,2.738656,5.875648,9.564689,6.056093,-5.908803,8.191700,-3.151769,-0.448608,-5.885689,-1.149965,-5.583861,-5.024876,-2.724957,-9.023997,-6.268070,6.879534,-7.836226,-3.522801,7.409471,-3.829081,3.379561,-5.743641,-0.931529,9.061736,-5.143304,-8.372826,-3.914076,5.067863,-7.287997,-0.923305,0.142758,-9.764617,-3.071916,6.687293,-0.290660,4.644693,-8.779605,-0.732341,-5.262810,8.174188,7.750569,2.821190,3.217551,-2.715651,-4.495660,-6.924396,-1.458432,-1.236090,7.204120,8.022922,8.339266,6.900628,-9.557776,-8.783830,4.109029,4.032183,7.829837,-5.269119,-6.045187,-6.053147,8.086150,-7.702122,-3.172462,-8.768489,7.490616,7.704150,-9.440490,-3.221862,-7.753501,-3.994191,-0.158078,-1.239898,-5.444306,-4.954247,-4.531148,-7.531429,3.069584,3.069773,3.138493,9.889372,3.364256,9.772418,9.836818,-0.402404,-2.691873,-8.769411,5.983588,5.930342,6.222269,-0.928035,-0.719653,-6.253772,9.649186,1.060879,0.053340,2.674880,-8.505314,8.820563,-6.698282,9.991142,-5.403326,-1.768749,6.944831,3.164788,1.060553,-1.184138,-0.650584,-2.584979,-0.331686,-5.017617,-5.039242,4.157230,-7.676607,1.756300,-3.570281,-3.396019,-7.257842,-2.465289,-1.830512,-6.842467,5.694964,9.011682,2.469409,-9.557255,-6.759958,-1.510390,-3.306395,8.182977,-2.648186,-2.707435,0.168621,2.886534,9.060155], dtype = "float32")#candidate|3845|(720,)|const|float32
call_3843 = relay.TupleGetItem(func_1069_call(relay.reshape(var_3844.astype('int8'), [16, 7, 12]), relay.reshape(const_3845.astype('float32'), [4, 180]), ), 2)
call_3846 = relay.TupleGetItem(func_1073_call(relay.reshape(var_3844.astype('int8'), [16, 7, 12]), relay.reshape(const_3845.astype('float32'), [4, 180]), ), 2)
output = relay.Tuple([uop_3832,call_3843,var_3844,const_3845,])
output2 = relay.Tuple([uop_3834,call_3846,var_3844,const_3845,])
func_3847 = relay.Function([var_3844,], output)
mod['func_3847'] = func_3847
mod = relay.transform.InferType()(mod)
mutated_mod['func_3847'] = func_3847
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3848 = relay.var("var_3848", dtype = "int8", shape = (1344,))#candidate|3848|(1344,)|var|int8
func_3847_call = mutated_mod.get_global_var('func_3847')
call_3849 = func_3847_call(var_3848)
output = call_3849
func_3850 = relay.Function([var_3848], output)
mutated_mod['func_3850'] = func_3850
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3358_call = mod.get_global_var('func_3358')
func_3359_call = mutated_mod.get_global_var('func_3359')
call_3900 = relay.TupleGetItem(func_3358_call(), 1)
call_3901 = relay.TupleGetItem(func_3359_call(), 1)
func_1954_call = mod.get_global_var('func_1954')
func_1955_call = mutated_mod.get_global_var('func_1955')
call_3908 = relay.TupleGetItem(func_1954_call(), 0)
call_3909 = relay.TupleGetItem(func_1955_call(), 0)
func_1521_call = mod.get_global_var('func_1521')
func_1522_call = mutated_mod.get_global_var('func_1522')
call_3917 = func_1521_call()
call_3918 = func_1521_call()
func_1817_call = mod.get_global_var('func_1817')
func_1818_call = mutated_mod.get_global_var('func_1818')
call_3931 = func_1817_call()
call_3932 = func_1817_call()
output = relay.Tuple([call_3900,call_3908,call_3917,call_3931,])
output2 = relay.Tuple([call_3901,call_3909,call_3918,call_3932,])
func_3937 = relay.Function([], output)
mod['func_3937'] = func_3937
mod = relay.transform.InferType()(mod)
mutated_mod['func_3937'] = func_3937
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3937_call = mutated_mod.get_global_var('func_3937')
call_3938 = func_3937_call()
output = call_3938
func_3939 = relay.Function([], output)
mutated_mod['func_3939'] = func_3939
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2025_call = mod.get_global_var('func_2025')
func_2027_call = mutated_mod.get_global_var('func_2027')
call_3969 = func_2025_call()
call_3970 = func_2025_call()
output = call_3969
output2 = call_3970
func_3999 = relay.Function([], output)
mod['func_3999'] = func_3999
mod = relay.transform.InferType()(mod)
mutated_mod['func_3999'] = func_3999
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3999_call = mutated_mod.get_global_var('func_3999')
call_4000 = func_3999_call()
output = call_4000
func_4001 = relay.Function([], output)
mutated_mod['func_4001'] = func_4001
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2087_call = mod.get_global_var('func_2087')
func_2088_call = mutated_mod.get_global_var('func_2088')
call_4053 = func_2087_call()
call_4054 = func_2087_call()
output = call_4053
output2 = call_4054
func_4059 = relay.Function([], output)
mod['func_4059'] = func_4059
mod = relay.transform.InferType()(mod)
mutated_mod['func_4059'] = func_4059
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4059_call = mutated_mod.get_global_var('func_4059')
call_4060 = func_4059_call()
output = call_4060
func_4061 = relay.Function([], output)
mutated_mod['func_4061'] = func_4061
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1817_call = mod.get_global_var('func_1817')
func_1818_call = mutated_mod.get_global_var('func_1818')
call_4080 = func_1817_call()
call_4081 = func_1817_call()
func_1719_call = mod.get_global_var('func_1719')
func_1721_call = mutated_mod.get_global_var('func_1721')
call_4100 = relay.TupleGetItem(func_1719_call(), 1)
call_4101 = relay.TupleGetItem(func_1721_call(), 1)
output = relay.Tuple([call_4080,call_4100,])
output2 = relay.Tuple([call_4081,call_4101,])
func_4102 = relay.Function([], output)
mod['func_4102'] = func_4102
mod = relay.transform.InferType()(mod)
output = func_4102()
func_4103 = relay.Function([], output)
mutated_mod['func_4103'] = func_4103
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1592_call = mod.get_global_var('func_1592')
func_1594_call = mutated_mod.get_global_var('func_1594')
call_4120 = relay.TupleGetItem(func_1592_call(), 4)
call_4121 = relay.TupleGetItem(func_1594_call(), 4)
uop_4131 = relay.sigmoid(call_4120.astype('float64')) # shape=(12, 60)
uop_4133 = relay.sigmoid(call_4121.astype('float64')) # shape=(12, 60)
output = relay.Tuple([uop_4131,])
output2 = relay.Tuple([uop_4133,])
func_4137 = relay.Function([], output)
mod['func_4137'] = func_4137
mod = relay.transform.InferType()(mod)
output = func_4137()
func_4138 = relay.Function([], output)
mutated_mod['func_4138'] = func_4138
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4102_call = mod.get_global_var('func_4102')
func_4103_call = mutated_mod.get_global_var('func_4103')
call_4196 = relay.TupleGetItem(func_4102_call(), 1)
call_4197 = relay.TupleGetItem(func_4103_call(), 1)
output = relay.Tuple([call_4196,])
output2 = relay.Tuple([call_4197,])
func_4204 = relay.Function([], output)
mod['func_4204'] = func_4204
mod = relay.transform.InferType()(mod)
mutated_mod['func_4204'] = func_4204
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4204_call = mutated_mod.get_global_var('func_4204')
call_4205 = func_4204_call()
output = call_4205
func_4206 = relay.Function([], output)
mutated_mod['func_4206'] = func_4206
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2147_call = mod.get_global_var('func_2147')
func_2149_call = mutated_mod.get_global_var('func_2149')
call_4207 = relay.TupleGetItem(func_2147_call(), 1)
call_4208 = relay.TupleGetItem(func_2149_call(), 1)
func_1972_call = mod.get_global_var('func_1972')
func_1973_call = mutated_mod.get_global_var('func_1973')
call_4209 = relay.TupleGetItem(func_1972_call(), 0)
call_4210 = relay.TupleGetItem(func_1973_call(), 0)
uop_4213 = relay.log10(call_4207.astype('float64')) # shape=(180, 4)
uop_4215 = relay.log10(call_4208.astype('float64')) # shape=(180, 4)
uop_4224 = relay.sigmoid(uop_4213.astype('float64')) # shape=(180, 4)
uop_4226 = relay.sigmoid(uop_4215.astype('float64')) # shape=(180, 4)
bop_4237 = relay.logical_and(uop_4224.astype('bool'), relay.reshape(uop_4213.astype('bool'), relay.shape_of(uop_4224))) # shape=(180, 4)
bop_4240 = relay.logical_and(uop_4226.astype('bool'), relay.reshape(uop_4215.astype('bool'), relay.shape_of(uop_4226))) # shape=(180, 4)
bop_4241 = relay.multiply(uop_4224.astype('float64'), relay.reshape(uop_4213.astype('float64'), relay.shape_of(uop_4224))) # shape=(180, 4)
bop_4244 = relay.multiply(uop_4226.astype('float64'), relay.reshape(uop_4215.astype('float64'), relay.shape_of(uop_4226))) # shape=(180, 4)
output = relay.Tuple([call_4209,bop_4237,bop_4241,])
output2 = relay.Tuple([call_4210,bop_4240,bop_4244,])
func_4248 = relay.Function([], output)
mod['func_4248'] = func_4248
mod = relay.transform.InferType()(mod)
mutated_mod['func_4248'] = func_4248
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4248_call = mutated_mod.get_global_var('func_4248')
call_4249 = func_4248_call()
output = call_4249
func_4250 = relay.Function([], output)
mutated_mod['func_4250'] = func_4250
mutated_mod = relay.transform.InferType()(mutated_mod)
func_944_call = mod.get_global_var('func_944')
func_945_call = mutated_mod.get_global_var('func_945')
call_4253 = relay.TupleGetItem(func_944_call(), 0)
call_4254 = relay.TupleGetItem(func_945_call(), 0)
uop_4265 = relay.sin(call_4253.astype('float64')) # shape=(6, 16, 12)
uop_4267 = relay.sin(call_4254.astype('float64')) # shape=(6, 16, 12)
func_2147_call = mod.get_global_var('func_2147')
func_2149_call = mutated_mod.get_global_var('func_2149')
call_4281 = relay.TupleGetItem(func_2147_call(), 1)
call_4282 = relay.TupleGetItem(func_2149_call(), 1)
var_4287 = relay.var("var_4287", dtype = "float32", shape = (180, 4))#candidate|4287|(180, 4)|var|float32
bop_4288 = relay.mod(call_4281.astype('float32'), relay.reshape(var_4287.astype('float32'), relay.shape_of(call_4281))) # shape=(180, 4)
bop_4291 = relay.mod(call_4282.astype('float32'), relay.reshape(var_4287.astype('float32'), relay.shape_of(call_4282))) # shape=(180, 4)
func_434_call = mod.get_global_var('func_434')
func_437_call = mutated_mod.get_global_var('func_437')
call_4295 = relay.TupleGetItem(func_434_call(relay.reshape(bop_4288.astype('float32'), [8, 6, 15])), 0)
call_4296 = relay.TupleGetItem(func_437_call(relay.reshape(bop_4288.astype('float32'), [8, 6, 15])), 0)
bop_4299 = relay.bitwise_and(uop_4265.astype('int16'), relay.reshape(call_4253.astype('int16'), relay.shape_of(uop_4265))) # shape=(6, 16, 12)
bop_4302 = relay.bitwise_and(uop_4267.astype('int16'), relay.reshape(call_4254.astype('int16'), relay.shape_of(uop_4267))) # shape=(6, 16, 12)
func_1927_call = mod.get_global_var('func_1927')
func_1930_call = mutated_mod.get_global_var('func_1930')
var_4324 = relay.var("var_4324", dtype = "bool", shape = (1344,))#candidate|4324|(1344,)|var|bool
call_4323 = relay.TupleGetItem(func_1927_call(relay.reshape(var_4324.astype('bool'), [168, 8])), 0)
call_4325 = relay.TupleGetItem(func_1930_call(relay.reshape(var_4324.astype('bool'), [168, 8])), 0)
bop_4327 = relay.not_equal(bop_4299.astype('bool'), relay.reshape(uop_4265.astype('bool'), relay.shape_of(bop_4299))) # shape=(6, 16, 12)
bop_4330 = relay.not_equal(bop_4302.astype('bool'), relay.reshape(uop_4267.astype('bool'), relay.shape_of(bop_4302))) # shape=(6, 16, 12)
func_4204_call = mod.get_global_var('func_4204')
func_4206_call = mutated_mod.get_global_var('func_4206')
call_4339 = relay.TupleGetItem(func_4204_call(), 0)
call_4340 = relay.TupleGetItem(func_4206_call(), 0)
func_3937_call = mod.get_global_var('func_3937')
func_3939_call = mutated_mod.get_global_var('func_3939')
call_4346 = relay.TupleGetItem(func_3937_call(), 2)
call_4347 = relay.TupleGetItem(func_3939_call(), 2)
output = relay.Tuple([bop_4288,call_4295,call_4323,var_4324,bop_4327,call_4339,call_4346,])
output2 = relay.Tuple([bop_4291,call_4296,call_4325,var_4324,bop_4330,call_4340,call_4347,])
func_4349 = relay.Function([var_4287,var_4324,], output)
mod['func_4349'] = func_4349
mod = relay.transform.InferType()(mod)
mutated_mod['func_4349'] = func_4349
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4349_call = mutated_mod.get_global_var('func_4349')
var_4351 = relay.var("var_4351", dtype = "float32", shape = (180, 4))#candidate|4351|(180, 4)|var|float32
var_4352 = relay.var("var_4352", dtype = "bool", shape = (1344,))#candidate|4352|(1344,)|var|bool
call_4350 = func_4349_call(var_4351,var_4352,)
output = call_4350
func_4353 = relay.Function([var_4351,var_4352,], output)
mutated_mod['func_4353'] = func_4353
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4373 = relay.var("var_4373", dtype = "float64", shape = (16, 13, 12))#candidate|4373|(16, 13, 12)|var|float64
uop_4374 = relay.tan(var_4373.astype('float64')) # shape=(16, 13, 12)
bop_4389 = relay.left_shift(uop_4374.astype('int8'), relay.reshape(var_4373.astype('int8'), relay.shape_of(uop_4374))) # shape=(16, 13, 12)
output = relay.Tuple([bop_4389,])
output2 = relay.Tuple([bop_4389,])
func_4398 = relay.Function([var_4373,], output)
mod['func_4398'] = func_4398
mod = relay.transform.InferType()(mod)
mutated_mod['func_4398'] = func_4398
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4399 = relay.var("var_4399", dtype = "float64", shape = (16, 13, 12))#candidate|4399|(16, 13, 12)|var|float64
func_4398_call = mutated_mod.get_global_var('func_4398')
call_4400 = func_4398_call(var_4399)
output = call_4400
func_4401 = relay.Function([var_4399], output)
mutated_mod['func_4401'] = func_4401
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3793_call = mod.get_global_var('func_3793')
func_3795_call = mutated_mod.get_global_var('func_3795')
call_4414 = relay.TupleGetItem(func_3793_call(), 1)
call_4415 = relay.TupleGetItem(func_3795_call(), 1)
var_4432 = relay.var("var_4432", dtype = "float64", shape = (16, 7, 12))#candidate|4432|(16, 7, 12)|var|float64
bop_4433 = relay.floor_mod(call_4414.astype('float32'), relay.reshape(var_4432.astype('float32'), relay.shape_of(call_4414))) # shape=(16, 7, 12)
bop_4436 = relay.floor_mod(call_4415.astype('float32'), relay.reshape(var_4432.astype('float32'), relay.shape_of(call_4415))) # shape=(16, 7, 12)
func_3025_call = mod.get_global_var('func_3025')
func_3027_call = mutated_mod.get_global_var('func_3027')
call_4468 = relay.TupleGetItem(func_3025_call(), 0)
call_4469 = relay.TupleGetItem(func_3027_call(), 0)
output = relay.Tuple([bop_4433,call_4468,])
output2 = relay.Tuple([bop_4436,call_4469,])
func_4478 = relay.Function([var_4432,], output)
mod['func_4478'] = func_4478
mod = relay.transform.InferType()(mod)
var_4479 = relay.var("var_4479", dtype = "float64", shape = (16, 7, 12))#candidate|4479|(16, 7, 12)|var|float64
output = func_4478(var_4479)
func_4480 = relay.Function([var_4479], output)
mutated_mod['func_4480'] = func_4480
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2997_call = mod.get_global_var('func_2997')
func_2998_call = mutated_mod.get_global_var('func_2998')
call_4641 = relay.TupleGetItem(func_2997_call(), 1)
call_4642 = relay.TupleGetItem(func_2998_call(), 1)
func_1592_call = mod.get_global_var('func_1592')
func_1594_call = mutated_mod.get_global_var('func_1594')
call_4645 = relay.TupleGetItem(func_1592_call(), 5)
call_4646 = relay.TupleGetItem(func_1594_call(), 5)
func_3218_call = mod.get_global_var('func_3218')
func_3220_call = mutated_mod.get_global_var('func_3220')
var_4653 = relay.var("var_4653", dtype = "float32", shape = (720,))#candidate|4653|(720,)|var|float32
call_4652 = relay.TupleGetItem(func_3218_call(relay.reshape(var_4653.astype('float32'), [720,])), 3)
call_4654 = relay.TupleGetItem(func_3220_call(relay.reshape(var_4653.astype('float32'), [720,])), 3)
output = relay.Tuple([call_4641,call_4645,call_4652,var_4653,])
output2 = relay.Tuple([call_4642,call_4646,call_4654,var_4653,])
func_4659 = relay.Function([var_4653,], output)
mod['func_4659'] = func_4659
mod = relay.transform.InferType()(mod)
var_4660 = relay.var("var_4660", dtype = "float32", shape = (720,))#candidate|4660|(720,)|var|float32
output = func_4659(var_4660)
func_4661 = relay.Function([var_4660], output)
mutated_mod['func_4661'] = func_4661
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4679 = relay.var("var_4679", dtype = "uint32", shape = (5, 6, 10))#candidate|4679|(5, 6, 10)|var|uint32
var_4680 = relay.var("var_4680", dtype = "uint32", shape = (5, 6, 10))#candidate|4680|(5, 6, 10)|var|uint32
bop_4681 = relay.equal(var_4679.astype('bool'), relay.reshape(var_4680.astype('bool'), relay.shape_of(var_4679))) # shape=(5, 6, 10)
func_3301_call = mod.get_global_var('func_3301')
func_3304_call = mutated_mod.get_global_var('func_3304')
var_4690 = relay.var("var_4690", dtype = "float32", shape = (720,))#candidate|4690|(720,)|var|float32
call_4689 = relay.TupleGetItem(func_3301_call(relay.reshape(var_4690.astype('float32'), [180, 4])), 0)
call_4691 = relay.TupleGetItem(func_3304_call(relay.reshape(var_4690.astype('float32'), [180, 4])), 0)
output = relay.Tuple([bop_4681,call_4689,var_4690,])
output2 = relay.Tuple([bop_4681,call_4691,var_4690,])
func_4721 = relay.Function([var_4679,var_4680,var_4690,], output)
mod['func_4721'] = func_4721
mod = relay.transform.InferType()(mod)
mutated_mod['func_4721'] = func_4721
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4721_call = mutated_mod.get_global_var('func_4721')
var_4723 = relay.var("var_4723", dtype = "uint32", shape = (5, 6, 10))#candidate|4723|(5, 6, 10)|var|uint32
var_4724 = relay.var("var_4724", dtype = "uint32", shape = (5, 6, 10))#candidate|4724|(5, 6, 10)|var|uint32
var_4725 = relay.var("var_4725", dtype = "float32", shape = (720,))#candidate|4725|(720,)|var|float32
call_4722 = func_4721_call(var_4723,var_4724,var_4725,)
output = call_4722
func_4726 = relay.Function([var_4723,var_4724,var_4725,], output)
mutated_mod['func_4726'] = func_4726
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4748 = relay.var("var_4748", dtype = "float32", shape = (11, 9, 5))#candidate|4748|(11, 9, 5)|var|float32
uop_4749 = relay.asin(var_4748.astype('float32')) # shape=(11, 9, 5)
output = relay.Tuple([uop_4749,])
output2 = relay.Tuple([uop_4749,])
func_4769 = relay.Function([var_4748,], output)
mod['func_4769'] = func_4769
mod = relay.transform.InferType()(mod)
var_4770 = relay.var("var_4770", dtype = "float32", shape = (11, 9, 5))#candidate|4770|(11, 9, 5)|var|float32
output = func_4769(var_4770)
func_4771 = relay.Function([var_4770], output)
mutated_mod['func_4771'] = func_4771
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4801 = relay.const([[[8.898357,-5.948663,-3.344665,9.719051,6.156192],[2.758289,5.952153,-7.686895,-5.176796,5.347600],[5.280901,0.507795,4.487416,2.313533,0.760254],[7.788719,-2.770148,-0.175022,1.969762,-0.956227],[-1.456727,2.516073,6.087489,7.440898,-0.113486]],[[7.388899,3.301834,-9.310835,2.438936,1.546222],[1.203168,2.963541,0.118420,-4.694810,-8.422438],[0.727326,-2.404688,-9.877436,7.257825,-8.588304],[0.858352,8.827980,-3.915871,3.708518,7.860802],[-6.324725,6.511954,8.204150,-6.923603,3.522967]],[[-0.551582,4.835523,4.486348,8.875946,0.822464],[1.136863,7.293673,6.009782,-2.324805,-2.546659],[-5.099980,-4.987774,-9.175191,-5.526511,2.418826],[7.312694,-8.334496,3.948882,2.799153,-8.949039],[-2.325851,5.854977,3.686997,9.725990,6.489795]],[[5.175188,2.306678,6.141953,1.176788,-6.601645],[8.931298,9.538438,-5.792892,-2.810389,8.202877],[-7.889287,-2.478762,0.068380,4.345917,3.200264],[-5.520629,-9.844191,6.497602,-4.169685,7.706395],[8.042121,-5.990916,-6.267958,4.292829,-8.310208]],[[-8.575617,-7.726935,-3.765847,-9.231927,6.080265],[-1.482063,-2.889634,7.372257,-1.078829,6.502815],[-3.760078,5.592818,0.635758,3.920119,-3.038618],[5.368962,-3.651836,0.770882,3.342364,-2.170567],[3.761644,1.501073,8.039424,7.990621,-1.003067]],[[5.941846,-2.395632,1.237692,4.474468,-3.483173],[7.056076,-2.745217,-8.776476,-1.834292,6.225373],[-7.394560,-8.386560,-0.811111,-2.598871,9.584573],[-2.613797,1.773280,4.090710,-7.671056,4.839783],[-8.752871,-0.757262,-7.140176,-9.970362,2.006027]],[[-1.348728,9.752159,4.346241,-8.821336,1.821971],[-2.138211,1.007985,-9.298107,-1.885979,8.405759],[-8.669443,-8.434741,-6.215395,5.346419,-1.500224],[-0.667322,-4.555871,4.906929,8.248531,9.941866],[3.927908,8.613536,6.722791,-4.952577,-2.766714]],[[2.682667,4.035036,-0.188282,-0.362112,2.904431],[-9.339218,0.746413,6.041238,-9.878319,9.309079],[3.281655,4.343105,7.465034,6.138606,-0.351894],[5.627617,-7.758983,-2.961823,-8.280556,-0.192017],[6.136230,5.778187,3.290349,5.079024,7.880937]],[[3.168858,7.306599,5.239208,7.336095,-4.775307],[3.462400,8.328565,1.507558,-2.853411,-1.210051],[5.882398,8.071764,7.599903,7.559549,-5.345440],[2.144573,6.622203,-5.206302,3.005485,7.260930],[5.917305,3.645212,-3.944092,-1.693403,-9.932406]],[[4.119730,-8.481193,-0.221209,7.973090,-4.127425],[-3.538472,3.839392,0.651660,3.185180,6.964605],[-5.647767,1.103129,9.128005,-6.311084,-9.034477],[9.491159,-2.017574,-0.410231,4.346710,-7.916271],[0.259924,6.287458,6.274051,-2.406152,3.751445]],[[7.354525,-4.772951,2.854987,4.067017,-5.666280],[-6.903466,0.015875,4.996365,5.272163,-3.925973],[6.209314,-4.599087,-4.312247,2.572091,-7.076859],[8.606658,-5.029214,-5.525280,5.612625,-3.754112],[6.851185,8.245365,2.443268,-8.908514,3.101525]],[[7.310742,-0.366532,0.993991,9.642563,6.298162],[9.420456,4.082507,4.927271,7.029139,4.778149],[-9.078877,-6.566153,-6.540051,-0.336078,-1.108352],[3.856320,-8.549581,-7.971776,-7.121520,-3.303435],[5.203393,-5.102939,-4.673981,7.740518,9.598046]],[[2.181736,0.888574,3.401794,8.547539,9.238985],[-5.521024,0.764557,-5.423314,-5.596183,1.792981],[6.429959,6.111007,-0.660469,1.102189,7.844990],[-7.392217,-1.106972,7.342935,7.977925,8.990255],[-8.089156,1.102412,6.725092,9.060152,3.683131]],[[-3.104189,-2.135841,-7.479997,2.618997,-5.351020],[-2.166597,0.073905,-3.531011,1.591431,-6.393218],[-0.049413,-6.662755,-1.560720,-0.868267,4.270695],[0.865394,-9.077149,5.223454,-9.374256,-3.841141],[-8.313740,8.774956,8.684833,-9.213989,-9.291145]],[[1.083622,8.041826,-0.500175,8.974928,-6.017547],[-4.232620,8.739357,4.330519,-1.841637,3.874032],[-4.113705,0.117046,-4.903898,4.161468,4.287422],[0.687880,7.382479,-3.427967,-0.718596,-0.517108],[6.710319,-4.121234,0.525530,8.446506,7.655838]]], dtype = "float64")#candidate|4801|(15, 5, 5)|const|float64
uop_4802 = relay.acos(const_4801.astype('float64')) # shape=(15, 5, 5)
output = relay.Tuple([uop_4802,])
output2 = relay.Tuple([uop_4802,])
func_4804 = relay.Function([], output)
mod['func_4804'] = func_4804
mod = relay.transform.InferType()(mod)
output = func_4804()
func_4805 = relay.Function([], output)
mutated_mod['func_4805'] = func_4805
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1817_call = mod.get_global_var('func_1817')
func_1818_call = mutated_mod.get_global_var('func_1818')
call_4850 = func_1817_call()
call_4851 = func_1817_call()
output = call_4850
output2 = call_4851
func_4856 = relay.Function([], output)
mod['func_4856'] = func_4856
mod = relay.transform.InferType()(mod)
mutated_mod['func_4856'] = func_4856
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4856_call = mutated_mod.get_global_var('func_4856')
call_4857 = func_4856_call()
output = call_4857
func_4858 = relay.Function([], output)
mutated_mod['func_4858'] = func_4858
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3344_call = mod.get_global_var('func_3344')
func_3346_call = mutated_mod.get_global_var('func_3346')
call_4873 = func_3344_call()
call_4874 = func_3344_call()
output = relay.Tuple([call_4873,])
output2 = relay.Tuple([call_4874,])
func_4880 = relay.Function([], output)
mod['func_4880'] = func_4880
mod = relay.transform.InferType()(mod)
output = func_4880()
func_4881 = relay.Function([], output)
mutated_mod['func_4881'] = func_4881
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4908 = relay.const([[[-2.667049,-0.823297,7.935622,-7.694386,-4.476783,-2.628141,-8.707870,-5.114112,-1.312774,4.749888,-9.647759,8.368734],[1.839549,0.094645,8.842591,-1.166433,3.550665,-7.630767,-7.313805,8.174162,-2.925602,-9.482864,6.439615,-0.284130],[-5.059535,-2.779319,3.124953,-3.913193,-4.989319,-9.169280,-7.647399,-0.728771,1.578472,-8.174851,1.611741,-9.887140],[-9.684312,-0.701871,3.930086,7.120230,-9.066344,4.561875,0.509936,3.825689,9.579709,3.321315,-5.819077,-8.949714],[2.264932,1.541761,-4.396366,-2.494514,-7.572395,-8.400916,9.442502,3.301545,8.048627,8.274975,4.649239,4.503192],[-5.114552,-1.984048,-1.226265,-5.672818,-3.924720,-1.725135,3.547672,6.761853,3.552516,6.152902,0.649415,9.067742],[7.223575,4.208361,4.960513,-6.817820,4.452538,-6.411689,2.852607,5.716737,9.255849,-6.475755,-2.904930,-1.431280],[5.597557,-0.658725,5.272659,-6.041375,-1.511848,3.133529,-3.505739,4.698393,-6.412596,2.409534,-8.632476,5.518051],[-0.015114,-7.687180,8.202991,-5.930496,5.112211,7.063052,-0.722953,3.526510,2.961137,-3.737557,-3.313476,-6.535087]],[[-5.785428,-4.066823,-0.472159,-6.132404,4.051982,-3.388093,4.285501,-0.672772,9.727068,5.082770,5.284377,9.755383],[1.674622,-1.222839,8.858981,0.627788,-2.065086,6.434931,0.941797,5.684367,-7.692081,-0.461689,-6.572563,-3.786733],[-9.317101,-2.805251,8.715352,9.656443,5.993850,-7.224844,-3.248376,-6.135795,-3.467688,2.027293,6.226107,-7.059519],[-4.012790,-4.315349,9.143888,4.391025,-7.107963,6.977988,2.246795,9.874341,-6.536494,7.031225,3.991722,6.306647],[4.083582,2.158123,8.908788,7.080790,-7.686729,1.156104,-5.048679,-0.703419,-6.761571,-6.999407,-7.555233,-0.212436],[-6.525019,8.923192,-5.112702,6.532575,1.196185,-6.125546,-3.564798,6.455073,4.264577,8.884517,0.921510,8.940742],[0.948623,0.499365,5.204687,4.173397,7.874740,7.895239,2.629681,-7.098936,5.256326,-5.660125,-7.146374,4.382238],[-6.757304,0.012568,-7.332275,7.047296,1.662026,4.044731,-4.748266,-8.164512,2.463210,9.635430,-5.526744,7.071568],[5.502867,9.971792,0.545645,3.270352,1.146690,7.474748,2.291863,-6.444754,6.771872,3.308232,-9.383095,-4.894135]],[[1.489615,-5.327625,6.174962,-2.059907,1.491081,-2.654206,-5.033921,-8.938962,-8.408341,7.405925,-3.702258,-3.876257],[3.691032,-1.331686,4.535281,5.030556,-2.565933,-7.792166,1.749952,-3.298685,4.095099,-4.600854,2.916347,0.893507],[-8.526123,1.404572,-6.565775,6.252033,-4.724876,9.712386,-1.669536,-9.809723,3.295814,-6.236593,3.522946,1.786586],[2.815693,-2.897017,5.954256,-7.585807,-1.652851,-1.377281,-5.484180,-7.753173,1.219782,-8.552705,-3.869188,2.391253],[-3.838260,1.195901,-1.662454,-9.378987,-8.508043,-8.532657,-6.123137,2.200430,8.225549,-7.641075,6.033640,-1.436478],[-2.671903,-4.714901,3.363655,-7.564028,0.270332,-1.625490,1.725085,8.325054,9.452944,4.523753,0.964666,1.244415],[-7.447008,-8.266910,-4.802344,9.401557,5.569722,-1.552083,1.491919,-1.380676,-1.233730,-9.728481,4.890645,7.627021],[-4.563121,0.663961,0.345158,-9.456229,-7.613651,-3.725230,9.530692,9.295167,6.488499,4.520045,5.181709,-2.111063],[-2.259121,2.535249,-4.877112,5.560731,6.209506,-1.866688,2.936676,-6.371669,6.815278,-5.858674,-3.565780,-1.651153]],[[4.199646,-5.186333,7.155968,-7.127124,-2.778318,-8.060492,-7.761870,2.027880,-8.763238,0.381658,-8.737672,5.488105],[-1.402050,-3.895817,9.402023,-4.079365,-0.105261,0.693469,7.903575,-4.991213,4.726955,2.941173,-7.538073,6.791202],[-9.273533,-5.575574,3.955945,1.826080,5.176250,-3.955751,-2.887616,-5.327189,-8.167203,-7.194021,2.183662,7.964858],[0.466218,6.351892,1.085081,-5.921914,6.954487,-5.314285,-4.913097,-6.462627,8.372606,8.619296,7.224327,-5.477106],[7.360407,-9.590955,3.800257,-0.663794,-4.011767,-3.261374,-3.789073,9.002405,7.427187,-5.062400,8.598627,-3.324120],[-8.667480,-5.793682,7.217214,3.299427,-2.529339,8.184574,7.893137,-8.753466,0.827277,5.515364,-5.626254,8.396688],[-9.338745,4.304339,-4.314613,-2.073074,0.513630,7.527632,0.352735,-5.477627,-0.908929,-3.986210,0.633263,2.824672],[4.369431,-1.870834,3.406377,-8.841384,-3.927726,-6.614836,4.272360,8.773035,7.032168,0.759241,4.508388,-6.638954],[2.660297,2.805641,-1.105184,-8.251317,0.833172,1.946312,-2.995119,-3.482616,9.155474,-2.562011,9.991740,-7.102124]],[[-6.307786,1.113588,5.758783,0.461915,-2.085798,8.699261,7.869035,5.658911,-9.334186,5.603340,-9.414282,7.237643],[-6.674376,-9.719546,3.190770,5.432915,-0.281674,2.488510,-4.938889,-5.106755,1.754313,1.821405,2.546008,2.811514],[3.161202,3.754554,-7.711788,-1.618416,-5.025919,-7.895384,6.615380,7.934275,7.980995,2.206175,9.209423,-6.231976],[8.216796,6.596541,-5.113729,-0.685270,4.477862,2.283999,0.626505,9.298360,-9.937702,0.427748,9.105389,5.718837],[-4.915869,-2.189637,2.035217,-6.339477,2.474218,2.996082,4.559016,9.979478,4.637286,-1.633927,-5.597975,-9.317427],[-3.660081,-1.502751,-3.684394,-2.554327,-2.243084,-4.058437,2.805501,-5.989765,-9.679214,4.885812,-3.665021,0.880645],[8.381579,-3.420553,0.686780,8.463525,-9.231887,5.472659,0.716642,6.500973,-8.657825,1.711136,5.814355,-9.352644],[-0.355188,4.293021,5.039777,-3.402404,-5.821987,-2.756520,-2.141124,2.438654,-5.789562,9.650226,-0.418526,5.471783],[6.930732,4.027100,9.459255,-4.782984,3.199201,-2.848295,-7.194787,9.577747,8.810209,-7.342921,3.054599,-5.438971]],[[-7.926300,-2.086612,7.104550,-5.566418,-9.937661,2.687421,7.754082,5.216427,2.732181,9.865079,5.255318,-1.532797],[8.505818,-6.130573,5.958759,-5.183906,-1.015558,-8.296966,-7.929726,-7.405306,-6.281694,-3.923448,-9.332276,-9.846991],[2.751978,4.786938,1.039437,6.281743,9.276462,1.015447,7.903555,-7.425619,-9.969477,5.418912,9.862431,-1.055219],[7.743266,-4.725496,-7.600502,6.851078,-7.039181,-7.058684,-1.192164,-2.395206,0.891966,-4.434286,5.658087,7.048157],[-2.524409,9.808209,-4.095893,6.159416,-1.738514,7.183439,2.983604,9.890048,-7.766293,2.756140,9.517463,-8.068256],[7.959729,0.763511,2.598979,9.762508,9.011035,-3.705112,-3.407709,5.617121,5.942530,7.088842,3.101165,-2.048806],[9.364195,7.064164,-0.859028,4.308223,-9.297123,-2.699541,6.759502,4.210265,-5.751164,5.321217,-7.165953,-9.863960],[6.363618,-8.389628,-2.531960,-2.053221,-0.583102,-8.905519,0.640652,-8.714551,7.573175,-8.001862,-6.265948,4.485394],[1.172623,1.788321,-9.046015,8.120450,-1.057739,-3.580925,-8.605143,-9.845322,-1.861650,1.930588,-2.619482,-1.327711]],[[2.818913,0.305998,-9.960658,-3.672785,1.994443,4.026529,6.083764,1.371961,-5.002750,-6.779368,0.805421,4.369101],[-4.105410,9.461642,8.598279,-6.024390,-5.574354,-0.175599,-4.061942,-8.510108,1.016080,8.833888,-7.248928,-8.674460],[3.053977,-0.294673,3.922594,-9.750900,-8.404814,-3.571840,3.072666,-1.024249,-7.809719,8.571931,-1.317572,-0.575879],[1.438689,-2.647084,3.819648,9.693109,-3.187436,2.640770,7.872450,9.889695,3.402661,6.132773,-9.995005,3.143928],[0.408952,3.594170,-5.210212,5.768246,-9.798492,-3.964479,-0.085459,-9.501335,3.272007,-9.218813,2.068110,-6.230180],[6.465728,-3.754631,-4.071570,7.907830,-8.361088,7.725599,-2.181544,-7.255741,-7.865978,-9.748887,-6.069425,5.849401],[-7.919808,1.488252,8.083864,9.495010,8.843712,-7.151218,1.677638,2.339770,0.361606,-6.399616,2.147202,-7.931222],[1.526657,-6.834272,4.181063,7.922433,5.776414,5.262349,9.955737,-6.330630,-6.572686,-1.189191,-2.700106,7.368870],[-9.404210,8.489740,0.854109,0.028309,9.442040,-0.538297,-6.411736,-7.231534,-6.921978,-8.229506,-2.851283,0.870502]]], dtype = "float64")#candidate|4908|(7, 9, 12)|const|float64
var_4909 = relay.var("var_4909", dtype = "float64", shape = (7, 9, 12))#candidate|4909|(7, 9, 12)|var|float64
bop_4910 = relay.floor_divide(const_4908.astype('float64'), relay.reshape(var_4909.astype('float64'), relay.shape_of(const_4908))) # shape=(7, 9, 12)
func_2906_call = mod.get_global_var('func_2906')
func_2908_call = mutated_mod.get_global_var('func_2908')
call_4917 = relay.TupleGetItem(func_2906_call(), 0)
call_4918 = relay.TupleGetItem(func_2908_call(), 0)
func_2087_call = mod.get_global_var('func_2087')
func_2088_call = mutated_mod.get_global_var('func_2088')
call_4922 = func_2087_call()
call_4923 = func_2087_call()
uop_4926 = relay.asinh(call_4922.astype('float32')) # shape=(168, 8)
uop_4928 = relay.asinh(call_4923.astype('float32')) # shape=(168, 8)
func_2025_call = mod.get_global_var('func_2025')
func_2027_call = mutated_mod.get_global_var('func_2027')
call_4934 = func_2025_call()
call_4935 = func_2025_call()
const_4941 = relay.const([[1.528485,-8.907461,0.486212,-3.575319,-5.368695,9.450707,8.102809,9.441360],[-9.586598,1.385641,9.282936,2.459619,9.044924,-7.376755,5.304453,-7.518580],[9.221389,1.016528,-6.332626,-2.821595,-0.078819,-4.804667,7.998777,-3.847322],[-1.251728,-9.882056,-7.724821,-6.031473,1.720513,-8.023852,0.411061,-4.748281],[7.266978,3.984304,5.389996,7.624250,4.429007,4.529837,4.511029,2.665195],[-7.063208,7.167264,4.138389,-6.503949,9.777894,6.106451,3.438762,6.927211],[7.916418,-1.181155,-9.278890,9.589087,-8.763838,-3.535745,-7.365558,8.804683],[8.959304,0.922655,6.380157,-6.542861,8.509282,4.427073,4.328759,3.490896],[8.367161,7.088653,8.693402,-3.387411,9.378832,-2.724985,-3.816271,-8.552967],[-7.355128,-4.179213,8.331152,-0.434368,1.036785,-6.257447,8.619379,2.987162],[7.826723,-3.733573,7.120115,-5.788111,-5.375516,7.814539,5.355608,-8.235067],[1.055823,2.055466,4.924642,0.508099,1.810957,4.758065,-6.162152,9.579867],[3.940857,-6.390098,-2.148818,-7.276239,3.401464,9.039452,7.406824,1.971166],[1.665734,-9.706573,-1.682117,5.042542,7.995301,-7.887316,9.915672,5.023173],[-8.443987,-1.429330,3.884465,0.655959,-1.434257,3.815476,-9.607377,-1.686975],[9.125227,0.368501,6.623714,4.641733,9.126998,-9.983215,2.386398,-1.001814],[1.128081,3.696221,6.699813,-7.780943,1.939596,6.574658,-6.948050,4.533466],[-5.914755,9.354982,7.512631,-2.671390,7.419004,-4.846135,0.132070,-7.578979],[5.755815,2.979354,-8.253162,-9.003821,2.236953,6.886215,0.318033,5.030886],[5.418971,2.254957,6.138183,-6.471303,-3.952783,4.599123,1.867040,4.848631],[0.289561,7.900306,-2.826161,-9.380156,5.240499,9.033157,-1.797409,9.397500],[1.945000,0.181619,-8.025911,8.596895,-5.352864,-9.011901,-6.565014,-1.205859],[-5.216842,6.992179,9.163288,-6.057739,-6.184289,7.606724,-9.137961,-0.502233],[-9.787312,-7.762695,1.993868,7.700246,7.098891,1.365447,0.434622,5.325551],[9.776258,-7.882368,-7.097313,-4.026097,-6.331276,-9.575456,-5.988864,5.150497],[-8.470462,8.718302,1.204527,7.094271,2.745809,9.679411,-4.869146,-7.283425],[5.479324,-6.443925,-0.811132,-1.266329,-3.564834,0.574182,-2.145052,4.498289],[6.194274,-9.083036,-1.129000,8.574669,9.942017,-2.359054,0.131505,1.827686],[-0.223306,6.943430,-8.860556,7.135734,-5.084981,4.863070,8.318337,6.679254],[-7.335180,-5.759352,6.337126,-9.622016,-6.906733,-4.570831,1.537798,-7.236010],[7.382334,-5.744012,-7.619822,-7.612801,9.657690,2.026665,4.491696,8.801301],[-7.027660,-8.171531,8.425609,-4.160137,2.764728,5.807292,2.075511,-7.873604],[2.618412,-4.057544,3.755218,-0.566767,6.730932,4.891702,-6.014744,-2.100674],[-5.141243,-6.664549,0.001141,5.078739,5.085980,5.353993,3.864211,7.645715],[2.907936,-1.917816,6.732639,9.259585,-4.404784,2.689182,6.746617,9.900047],[-5.954253,3.843648,6.866315,-4.988203,7.355368,1.479753,-3.250242,-7.127530],[-3.137762,-5.807434,6.708544,-5.299234,-0.812349,5.233294,2.902786,-0.830577],[-3.715601,9.553244,-9.051539,6.961338,-6.772467,-9.329022,4.693096,-7.672216],[3.362986,6.926308,-0.356015,-3.428918,5.661076,-6.581972,7.927001,-0.466700],[-3.277797,3.293597,-5.685286,-3.233560,7.527736,3.293172,2.959630,-6.680189],[-2.348981,-9.001704,-8.470307,9.478910,-0.647431,-4.264901,-4.757535,2.283023],[2.512979,-1.061429,0.052831,-0.621732,8.215250,-8.648949,5.485210,-0.564597],[-0.837639,-5.490469,8.983476,7.235729,9.008770,1.824107,-9.929432,-6.032116],[1.678794,6.514306,2.726491,2.925614,5.711316,-8.527553,8.262620,-5.520994],[8.965835,-2.381736,5.926097,-4.586430,4.859931,-9.329579,-1.628288,9.021910],[8.393517,8.438553,-7.996373,-6.390493,-0.657270,-0.063531,3.691500,2.318538],[9.919407,5.626210,5.956445,2.810505,-5.868781,1.388389,-2.276984,-8.346409],[6.318836,6.352582,7.293558,-9.509103,-7.958733,0.565755,0.809460,-2.132726],[-3.418822,3.122435,3.733281,-8.897814,6.868517,-2.355844,6.014056,2.171093],[-8.550900,-6.384537,-4.182397,4.104879,-6.372576,-8.575211,-6.131153,-8.872426],[9.183725,-1.585195,6.629258,-6.076310,-8.290495,-1.713237,6.369345,7.593304],[-6.307982,3.579700,-8.026686,9.247021,6.069057,-1.410443,-0.548390,-1.298592],[8.603094,-4.393363,-5.368365,8.591597,-9.643210,-9.810769,3.138257,6.569960],[3.839321,1.325401,-7.401759,-8.695882,-0.893568,5.676630,-6.308906,-4.774580],[-8.613919,-8.178567,3.780123,-3.144874,1.427052,-7.498835,-0.749445,3.857237],[-3.671227,7.154724,9.643663,8.080827,-1.983591,3.437321,-8.526142,-5.219730],[-0.581916,4.710414,-5.551276,6.213489,-8.146398,6.899197,-6.698694,7.602438],[2.215388,0.704308,-7.861521,-9.314646,2.217014,2.426924,-4.596002,-9.487053],[-6.461828,-8.750552,2.129803,9.530026,1.930335,-3.894376,6.825971,5.906047],[-5.617553,0.735565,8.406174,-7.232426,4.780125,-3.353618,0.713772,7.389281],[9.234250,5.519886,6.374609,-0.104606,3.622110,-2.263346,-6.854022,2.947796],[-6.641942,-3.594777,-4.920220,-2.704753,-6.830203,3.833553,-6.785574,-0.067559],[5.509334,-6.351164,-7.426534,7.833523,-6.029450,-6.304066,4.547754,5.812566],[-7.153504,1.818586,-9.277841,2.507793,8.104004,8.414729,9.979184,6.253687],[9.054864,2.304488,-8.378307,1.751271,8.212779,-7.766545,6.005944,-4.721847],[4.793134,-8.335681,-6.368695,-9.500206,4.693582,2.444483,5.824205,5.674145],[-2.964070,-4.006711,8.762373,9.422705,7.817696,-2.561135,-0.460784,7.909672],[-2.890672,9.835623,4.092774,-1.029009,4.783059,9.295339,-7.030908,9.952131],[0.395381,-4.066336,9.446521,6.017000,6.523368,0.767618,5.531009,8.115791],[9.791960,-3.708677,-1.624134,2.473133,-2.309368,9.719826,9.888716,0.030063],[-9.304495,1.440536,-1.856008,5.907867,-8.229550,1.955491,4.087705,-5.409455],[7.374132,9.123746,7.284439,-2.175760,5.229848,6.604870,-8.127877,2.642814],[-4.691048,7.155082,-7.607808,-7.535704,6.282053,-0.176653,-4.214389,4.147118],[3.793031,3.827635,0.256361,-0.367493,4.878266,7.576032,-0.316157,3.691807],[-3.280486,6.854304,1.706820,5.301132,7.206872,4.240843,-6.184162,-4.424474],[4.028976,0.200216,3.797330,1.080813,1.063159,-4.353335,2.883867,-6.533809],[-4.973793,-6.205860,6.838800,3.336709,3.508805,-0.317551,5.465834,7.502313],[-9.691583,-9.797908,-7.689726,0.956009,-4.499115,-3.707057,3.972438,2.530591],[-1.471078,2.923104,-8.414889,4.137669,2.975589,8.808598,-1.628820,0.408021],[9.883630,-0.004432,8.901442,6.599114,5.450010,9.537388,-9.404619,3.825170],[1.250278,-1.070052,7.150837,5.733564,9.813493,0.452717,-9.482264,5.057211],[-1.133480,9.350113,0.863544,-3.382702,-9.815722,9.784955,-1.307432,-9.038171],[7.591806,1.977360,-4.725808,3.794472,-0.106686,7.677146,0.384474,-7.882038],[-9.766017,6.804179,8.833223,-2.864704,2.947774,-2.051256,-8.254074,5.800528],[-5.437290,-1.034128,-2.424249,-9.310052,1.888853,1.520060,-0.596748,-9.894617],[8.474692,-8.493191,0.904652,8.434667,-9.984579,5.948698,-6.573252,-4.630071],[7.248306,8.737845,-9.127114,-7.962421,8.166596,-0.499605,-9.120012,-8.571406],[-2.904037,-2.776392,0.701065,8.954148,7.223139,4.208782,2.756546,-6.564623],[-0.789096,-6.156921,-7.206931,-4.679823,-8.046650,1.907170,-8.713893,0.821745],[4.227351,-3.887834,1.361479,-6.739279,-1.455198,-8.458749,-9.438402,2.326534],[-7.553846,9.921754,-3.572320,-7.591111,5.635255,0.599081,0.484648,-4.439784],[-7.942646,0.177801,-0.441328,6.528210,4.987298,3.153492,-1.228345,3.121352],[-1.240010,5.055543,-3.410013,-9.265213,-7.078093,9.769883,-6.682499,-3.056723],[4.815980,-1.762812,4.016419,-5.967966,0.987379,-8.984582,-6.241541,-5.671258],[1.151203,-6.033272,3.323035,6.391307,-5.726353,2.199702,-3.301334,-1.926989],[6.283780,-5.093027,-1.825857,-1.236173,-3.266777,9.576608,-3.731818,9.555559],[-2.819332,7.158763,-4.289869,1.325367,-4.609696,2.901672,-6.015616,-8.666183],[-9.733357,-5.074401,9.515199,-5.821552,-7.970503,1.525902,9.081145,-1.728890],[-0.493608,0.381638,-0.234857,0.844555,8.092384,3.080095,-5.218420,-1.993747],[-8.684574,6.643792,9.586289,2.288105,-2.619115,-1.832223,-0.684165,2.870624],[-3.666892,7.605795,1.249137,3.086587,-0.810284,-7.940052,-5.000907,8.739532],[9.195522,2.546925,1.249373,-3.878336,4.725121,6.562551,3.024335,-1.353435],[-4.075570,-4.499914,-5.679077,-8.736893,3.674119,-6.830691,0.407531,-2.639302],[-4.614049,4.691535,0.985585,3.997249,-5.039713,-5.877264,3.972398,-6.190968],[-5.320519,1.216939,-7.839812,2.348765,-6.307708,-8.129570,-9.915121,0.471257],[-4.072311,-4.656100,-1.633314,-7.737622,-7.704586,0.038694,8.163750,9.164598],[-3.010569,-1.583605,5.636380,-5.921585,5.420916,8.896052,-2.245620,6.930236],[-8.515709,-9.605158,3.551618,6.844674,1.478039,-2.642193,-7.613966,-9.991570],[-7.330767,-2.459193,4.213624,-0.822349,3.373313,-2.706812,-7.190464,-8.661243],[1.042338,2.196857,0.091314,-9.932489,1.018650,0.584536,8.904164,9.893212],[-7.651019,6.857650,-4.144413,1.922030,1.519520,8.909172,0.755405,-0.404312],[-4.249299,6.743297,9.166467,-6.435009,-9.229387,-9.066111,-7.160844,-7.844872],[5.214979,-3.083415,9.704796,5.791973,1.707382,-5.555957,-0.101067,1.101693],[-4.843284,-1.417235,-5.873215,1.687669,-6.183497,-5.873697,6.309946,-6.591446],[-2.182243,-2.929967,-2.691624,9.800034,4.401089,-7.927554,-9.150345,-2.014234],[-4.859328,-8.597398,-5.151728,-8.210004,-3.462095,2.420227,9.649271,-8.638082],[-3.441970,7.539312,5.086739,-7.854422,-9.933883,-7.901232,-6.818274,7.558372],[-5.158211,6.352252,1.601408,7.101246,4.603242,7.314745,-4.230664,-0.953907],[7.033366,5.539995,-3.267364,0.288144,-3.643401,-1.187443,-9.218315,-8.003255],[0.602317,5.229409,2.145412,-4.138369,7.753943,2.404932,-0.511547,-4.484497],[5.646178,-1.904200,3.793065,-2.450308,5.839874,-9.824334,-4.549752,-8.713253],[8.046227,5.824114,3.409924,0.503507,5.898498,-7.499425,-9.607941,0.125889],[3.333278,-0.319270,8.708608,-4.423478,8.943585,3.861589,4.766011,6.950100],[2.299343,7.235155,1.647453,-6.047964,8.594127,-0.466735,1.807267,4.359637],[6.084698,-7.824923,-8.913189,2.941335,6.013904,-8.340114,6.481045,1.050134],[-0.053666,6.079800,4.018273,-7.121527,-1.910211,9.905730,5.005338,-0.545906],[-6.963691,8.770759,-2.253874,-3.574420,0.026490,-0.773661,-4.177576,-4.347323],[0.852290,-6.701651,1.312160,3.743973,7.790110,4.081389,-5.983274,1.570169],[-2.400595,8.694127,-3.020790,1.560746,-6.494626,-1.142857,2.211140,2.362775],[-9.794050,-5.098946,8.865494,2.904804,-0.193473,3.010428,9.275373,5.346106],[5.278268,-8.477451,-6.808489,-5.066122,8.841610,5.588317,2.879472,2.520435],[3.641668,3.110401,-1.579089,5.432767,4.425954,8.929684,-3.467947,1.881711],[9.343319,5.212404,8.981042,3.425787,-3.134058,8.737166,5.098434,3.579015],[-4.928595,6.051676,8.137224,1.400101,5.902665,2.887328,1.841440,-3.439641],[-9.484565,-9.988103,9.644540,6.674595,3.547347,4.452653,4.261530,0.866158],[0.905517,-3.396137,8.732647,3.805609,-1.895886,-9.703583,2.265157,2.504527],[-5.451292,2.102299,4.459299,9.086251,-0.053291,8.951533,7.550396,2.893977],[-3.071390,-2.006764,-4.928756,-8.253061,-3.384970,-7.338922,7.587447,-2.625852],[-2.701808,6.535361,-2.831049,-1.098634,7.949134,-0.634584,-2.592050,8.638204],[-0.704134,-5.242940,-5.119088,2.581910,-7.831548,-2.388003,0.463851,6.059639],[7.987608,6.478867,-4.071779,-8.271792,-3.054457,-4.890911,-2.865933,5.955518],[9.373405,8.394481,-2.369174,1.151126,3.090401,8.680503,-4.992430,-6.885418],[3.474360,3.218538,9.989473,-5.606785,-6.173334,-1.898189,-9.464825,1.358687],[0.277899,7.168588,-2.244008,-7.808139,7.190052,-3.598988,7.709416,5.205926],[0.779491,-0.674069,-8.094490,-5.631952,7.290582,0.719153,-0.651867,-0.256146],[-7.334768,2.736563,-1.770282,-0.441316,8.158170,8.015669,8.295751,-1.520874],[5.977349,2.009006,3.923193,-3.015134,-7.217133,-3.939098,7.301301,-2.039639],[2.453759,-0.048386,-4.763572,7.923745,8.816066,-6.724073,4.097623,8.288035],[5.028144,-7.290299,-5.828946,2.382987,-8.914200,3.640223,-3.424402,7.717165],[-4.817773,1.572456,-7.990586,-0.963924,7.068000,-7.294636,6.915287,6.298933],[-7.469926,8.289008,0.191319,8.583502,0.984556,1.547615,2.638315,4.620780],[-3.051892,-8.771967,7.558534,-9.828189,3.284025,1.116203,7.861046,4.834660],[-1.458542,-9.671523,8.896708,5.615793,7.100719,4.875029,-4.532607,-1.933761],[9.986893,0.290791,5.443133,-8.313785,2.353560,-5.709060,-2.500654,-7.284870],[-1.952605,-6.549238,1.694503,-2.639928,-4.752207,4.786725,-4.377359,0.825686],[-8.682884,-8.840774,3.117670,-2.071472,-7.147905,9.423057,-6.051736,6.642132],[-9.982523,-6.686672,-5.299062,-2.440539,-3.342305,0.160974,7.111357,7.845369],[8.817334,-2.907819,-6.427441,8.118406,8.051711,2.697741,1.281070,-1.083343],[1.741304,9.787621,-4.662458,-3.480446,6.148885,9.709424,0.204030,-3.219687],[6.219194,3.841210,8.731512,-3.411828,2.319590,-4.392533,4.600252,-5.440835],[7.842426,-4.303462,-6.363616,8.780058,-2.165015,-3.865162,8.837550,-5.269896],[3.717049,-2.875463,3.360230,6.453046,-1.421220,5.683133,4.999258,-3.178436],[3.862320,-2.626605,-9.741524,4.663237,-4.166779,-5.929934,-4.910475,-3.106994],[-3.748196,-8.652634,-4.144653,-7.843040,2.651574,-2.329534,5.798419,5.488946],[6.469543,-9.138901,2.121461,-3.479079,-8.992435,3.624321,8.676512,-5.469686],[-4.908342,8.822115,7.131212,-9.829707,4.065183,0.075359,4.772970,6.310598],[-6.972938,-6.511947,0.732907,3.853839,6.160975,-6.758743,6.395760,-2.697146],[0.412137,-8.390659,7.887006,2.158373,0.518882,-1.898813,-5.512115,7.155698]], dtype = "float32")#candidate|4941|(168, 8)|const|float32
bop_4942 = relay.add(uop_4926.astype('uint64'), relay.reshape(const_4941.astype('uint64'), relay.shape_of(uop_4926))) # shape=(168, 8)
bop_4945 = relay.add(uop_4928.astype('uint64'), relay.reshape(const_4941.astype('uint64'), relay.shape_of(uop_4928))) # shape=(168, 8)
output = relay.Tuple([bop_4910,call_4917,call_4934,bop_4942,])
output2 = relay.Tuple([bop_4910,call_4918,call_4935,bop_4945,])
func_4947 = relay.Function([var_4909,], output)
mod['func_4947'] = func_4947
mod = relay.transform.InferType()(mod)
var_4948 = relay.var("var_4948", dtype = "float64", shape = (7, 9, 12))#candidate|4948|(7, 9, 12)|var|float64
output = func_4947(var_4948)
func_4949 = relay.Function([var_4948], output)
mutated_mod['func_4949'] = func_4949
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3793_call = mod.get_global_var('func_3793')
func_3795_call = mutated_mod.get_global_var('func_3795')
call_4990 = relay.TupleGetItem(func_3793_call(), 3)
call_4991 = relay.TupleGetItem(func_3795_call(), 3)
output = call_4990
output2 = call_4991
func_4997 = relay.Function([], output)
mod['func_4997'] = func_4997
mod = relay.transform.InferType()(mod)
output = func_4997()
func_4998 = relay.Function([], output)
mutated_mod['func_4998'] = func_4998
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1194_call = mod.get_global_var('func_1194')
func_1195_call = mutated_mod.get_global_var('func_1195')
call_5088 = relay.TupleGetItem(func_1194_call(), 3)
call_5089 = relay.TupleGetItem(func_1195_call(), 3)
func_1972_call = mod.get_global_var('func_1972')
func_1973_call = mutated_mod.get_global_var('func_1973')
call_5095 = relay.TupleGetItem(func_1972_call(), 0)
call_5096 = relay.TupleGetItem(func_1973_call(), 0)
const_5101 = relay.const([[False,True,False,False,True,True,False,True],[True,False,False,True,False,True,False,True],[True,False,True,True,True,True,True,False],[True,True,False,True,False,False,True,False],[True,False,False,True,True,True,False,False],[True,True,True,True,False,True,False,True],[False,True,False,True,False,True,False,True],[False,False,False,False,False,False,False,False],[False,True,True,True,False,True,False,True],[False,True,False,False,True,False,False,True],[True,False,False,True,False,False,False,False],[False,False,True,True,False,True,True,False],[False,False,False,False,True,False,True,False],[True,True,False,False,True,False,True,False],[True,False,True,True,False,True,True,True],[False,False,False,False,False,True,True,False],[True,True,True,False,True,False,False,False],[False,True,True,True,True,False,False,False],[False,True,True,True,True,True,False,True],[True,False,True,True,True,False,False,False],[True,True,False,False,True,True,True,True],[False,False,True,True,False,True,False,True],[False,True,False,True,False,False,False,False],[False,False,True,True,False,True,True,False],[False,True,False,False,False,True,True,False],[True,False,False,False,True,False,True,False],[True,True,True,False,True,False,False,True],[False,True,False,False,True,True,False,True],[False,True,True,True,False,True,True,False],[True,True,False,True,True,True,True,True],[False,False,True,True,False,True,False,False],[False,False,True,True,True,True,True,True],[False,False,False,True,True,False,True,True],[True,True,False,True,False,True,False,False],[True,True,True,False,False,True,False,False],[True,True,False,False,True,True,True,True],[True,False,False,True,False,True,False,True],[False,False,False,False,True,False,False,False],[True,True,False,True,False,True,False,True],[False,False,True,True,True,True,True,False],[True,True,True,True,True,True,False,True],[True,True,False,False,True,False,True,True],[False,True,False,False,False,False,False,True],[False,True,False,True,False,True,False,True],[True,True,False,False,True,True,True,False],[False,True,True,True,False,False,False,False],[True,True,False,False,True,False,True,False],[False,True,True,False,True,True,False,False],[True,False,False,False,True,True,False,True],[True,True,True,True,True,True,True,True],[False,True,True,False,False,False,False,False],[True,True,False,False,True,False,False,False],[True,False,False,False,False,False,False,True],[False,True,False,True,False,True,False,True],[False,True,True,False,True,True,False,True],[False,True,True,True,True,False,True,False],[False,True,True,False,False,True,True,False],[False,True,True,False,False,False,True,True],[True,False,True,True,True,False,False,False],[True,True,True,False,True,True,True,False],[False,False,False,False,True,False,False,True],[True,False,True,False,False,True,True,True],[True,False,False,True,False,False,True,True],[False,False,False,True,True,True,True,False],[True,False,False,False,False,True,True,True],[True,False,True,True,True,False,False,True],[True,True,False,True,True,True,True,True],[True,True,True,True,False,False,True,True],[False,True,True,False,False,False,False,True],[False,True,False,False,False,True,True,True],[False,True,False,True,False,True,True,True],[False,False,False,False,False,True,True,True],[True,False,True,True,False,True,True,True],[True,True,True,True,False,False,False,False],[True,False,False,True,False,True,False,False],[True,True,True,True,False,False,False,True],[True,False,True,True,True,False,False,False],[True,True,True,False,True,True,False,False],[False,False,True,False,True,False,False,False],[True,True,False,True,False,False,True,True],[False,False,False,False,False,True,False,True],[False,False,True,False,True,False,False,True],[False,False,True,False,False,False,False,True],[True,False,False,True,True,True,False,True],[True,True,True,True,False,False,True,False],[False,False,False,True,False,True,True,True],[True,False,True,True,False,True,False,False],[False,False,True,True,False,False,False,True],[True,False,True,True,False,False,True,False],[False,False,True,True,True,False,False,False],[True,True,True,True,False,True,True,False],[True,True,True,True,True,False,True,False],[False,False,True,False,False,False,False,False],[False,True,True,True,False,True,True,True],[False,False,False,True,True,False,True,True],[True,True,False,False,True,True,False,True],[True,True,True,True,True,True,False,False],[False,True,True,False,True,True,True,True],[True,False,False,True,False,False,False,True],[True,False,True,False,False,True,True,True],[False,False,True,True,True,True,True,True],[False,True,False,True,False,True,True,True],[True,True,False,True,True,False,False,False],[True,True,False,True,False,True,False,False],[True,True,False,False,False,True,False,True],[False,False,False,False,True,True,False,True],[True,False,False,False,True,True,True,False],[False,True,True,True,True,True,True,False],[True,True,True,True,True,True,False,True],[True,True,False,False,False,False,True,True],[False,False,False,True,True,True,True,True],[False,False,False,True,False,False,False,True],[True,True,False,False,False,True,False,True],[False,False,True,False,False,True,False,False],[True,False,False,False,True,True,True,True],[False,False,True,False,False,True,True,True],[False,True,False,False,False,False,True,False],[False,False,True,False,True,True,False,False],[True,False,False,False,False,False,True,False],[False,False,False,False,True,True,True,True],[False,True,True,True,True,False,True,True],[True,False,True,False,True,False,True,False],[False,True,False,False,True,False,False,True],[False,False,True,False,True,True,True,False],[False,True,True,False,True,False,True,False],[True,True,True,False,True,False,True,True],[True,True,False,True,True,False,False,False],[True,False,False,False,True,True,False,True],[False,True,True,False,False,True,False,True],[False,True,True,True,True,False,False,True],[False,False,False,True,True,False,True,False],[False,True,False,True,True,True,True,True],[False,False,True,False,True,False,True,True],[True,True,False,True,True,True,False,True],[True,False,True,False,False,False,False,True],[False,True,False,True,False,True,False,False],[False,False,True,True,False,False,True,True],[True,True,False,True,False,False,False,False],[False,True,False,True,False,True,False,False],[False,False,True,False,False,True,False,False],[True,True,True,True,False,False,True,True],[False,True,False,False,False,True,False,False],[False,True,True,False,False,True,False,False],[False,True,False,False,True,False,False,False],[False,True,False,False,False,True,True,False],[False,False,False,False,True,True,True,True],[False,False,False,False,False,False,False,False],[False,False,False,True,False,False,True,False],[True,True,False,True,False,False,True,True],[False,False,True,True,True,False,False,True],[True,False,True,True,True,True,True,True],[True,True,False,True,True,True,False,False],[True,False,False,True,False,True,False,False],[True,False,True,False,False,False,True,True],[False,False,False,True,True,True,False,False],[False,False,False,True,False,False,False,True],[False,False,False,True,True,True,True,True],[True,True,True,True,True,True,True,True],[True,True,True,True,True,True,True,True],[False,True,True,False,True,True,True,False],[True,True,True,False,False,False,True,True],[True,True,True,False,False,False,False,True],[True,True,False,False,False,False,False,False],[True,True,False,True,False,True,True,True],[True,False,True,True,False,True,True,False],[False,False,False,False,False,False,True,True],[True,False,False,False,False,False,False,True],[True,True,False,True,False,True,False,True]], dtype = "bool")#candidate|5101|(168, 8)|const|bool
bop_5102 = relay.logical_and(call_5095.astype('bool'), relay.reshape(const_5101.astype('bool'), relay.shape_of(call_5095))) # shape=(168, 8)
bop_5105 = relay.logical_and(call_5096.astype('bool'), relay.reshape(const_5101.astype('bool'), relay.shape_of(call_5096))) # shape=(168, 8)
var_5109 = relay.var("var_5109", dtype = "float32", shape = (180, 4))#candidate|5109|(180, 4)|var|float32
bop_5110 = relay.greater(call_5088.astype('bool'), relay.reshape(var_5109.astype('bool'), relay.shape_of(call_5088))) # shape=(180, 4)
bop_5113 = relay.greater(call_5089.astype('bool'), relay.reshape(var_5109.astype('bool'), relay.shape_of(call_5089))) # shape=(180, 4)
output = relay.Tuple([bop_5102,bop_5110,])
output2 = relay.Tuple([bop_5105,bop_5113,])
func_5116 = relay.Function([var_5109,], output)
mod['func_5116'] = func_5116
mod = relay.transform.InferType()(mod)
var_5117 = relay.var("var_5117", dtype = "float32", shape = (180, 4))#candidate|5117|(180, 4)|var|float32
output = func_5116(var_5117)
func_5118 = relay.Function([var_5117], output)
mutated_mod['func_5118'] = func_5118
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3793_call = mod.get_global_var('func_3793')
func_3795_call = mutated_mod.get_global_var('func_3795')
call_5152 = relay.TupleGetItem(func_3793_call(), 8)
call_5153 = relay.TupleGetItem(func_3795_call(), 8)
output = call_5152
output2 = call_5153
func_5154 = relay.Function([], output)
mod['func_5154'] = func_5154
mod = relay.transform.InferType()(mod)
mutated_mod['func_5154'] = func_5154
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5154_call = mutated_mod.get_global_var('func_5154')
call_5155 = func_5154_call()
output = call_5155
func_5156 = relay.Function([], output)
mutated_mod['func_5156'] = func_5156
mutated_mod = relay.transform.InferType()(mutated_mod)
func_830_call = mod.get_global_var('func_830')
func_832_call = mutated_mod.get_global_var('func_832')
call_5157 = relay.TupleGetItem(func_830_call(), 2)
call_5158 = relay.TupleGetItem(func_832_call(), 2)
output = call_5157
output2 = call_5158
func_5162 = relay.Function([], output)
mod['func_5162'] = func_5162
mod = relay.transform.InferType()(mod)
mutated_mod['func_5162'] = func_5162
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5162_call = mutated_mod.get_global_var('func_5162')
call_5163 = func_5162_call()
output = call_5163
func_5164 = relay.Function([], output)
mutated_mod['func_5164'] = func_5164
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3793_call = mod.get_global_var('func_3793')
func_3795_call = mutated_mod.get_global_var('func_3795')
call_5269 = relay.TupleGetItem(func_3793_call(), 0)
call_5270 = relay.TupleGetItem(func_3795_call(), 0)
output = call_5269
output2 = call_5270
func_5284 = relay.Function([], output)
mod['func_5284'] = func_5284
mod = relay.transform.InferType()(mod)
mutated_mod['func_5284'] = func_5284
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5284_call = mutated_mod.get_global_var('func_5284')
call_5285 = func_5284_call()
output = call_5285
func_5286 = relay.Function([], output)
mutated_mod['func_5286'] = func_5286
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1428_call = mod.get_global_var('func_1428')
func_1429_call = mutated_mod.get_global_var('func_1429')
call_5287 = relay.TupleGetItem(func_1428_call(), 2)
call_5288 = relay.TupleGetItem(func_1429_call(), 2)
func_4398_call = mod.get_global_var('func_4398')
func_4401_call = mutated_mod.get_global_var('func_4401')
var_5297 = relay.var("var_5297", dtype = "float64", shape = (2496,))#candidate|5297|(2496,)|var|float64
call_5296 = relay.TupleGetItem(func_4398_call(relay.reshape(var_5297.astype('float64'), [16, 13, 12])), 0)
call_5298 = relay.TupleGetItem(func_4401_call(relay.reshape(var_5297.astype('float64'), [16, 13, 12])), 0)
output = relay.Tuple([call_5287,call_5296,var_5297,])
output2 = relay.Tuple([call_5288,call_5298,var_5297,])
func_5315 = relay.Function([var_5297,], output)
mod['func_5315'] = func_5315
mod = relay.transform.InferType()(mod)
mutated_mod['func_5315'] = func_5315
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5316 = relay.var("var_5316", dtype = "float64", shape = (2496,))#candidate|5316|(2496,)|var|float64
func_5315_call = mutated_mod.get_global_var('func_5315')
call_5317 = func_5315_call(var_5316)
output = call_5317
func_5318 = relay.Function([var_5316], output)
mutated_mod['func_5318'] = func_5318
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1521_call = mod.get_global_var('func_1521')
func_1522_call = mutated_mod.get_global_var('func_1522')
call_5395 = func_1521_call()
call_5396 = func_1521_call()
func_2906_call = mod.get_global_var('func_2906')
func_2908_call = mutated_mod.get_global_var('func_2908')
call_5399 = relay.TupleGetItem(func_2906_call(), 1)
call_5400 = relay.TupleGetItem(func_2908_call(), 1)
func_4102_call = mod.get_global_var('func_4102')
func_4103_call = mutated_mod.get_global_var('func_4103')
call_5406 = relay.TupleGetItem(func_4102_call(), 1)
call_5407 = relay.TupleGetItem(func_4103_call(), 1)
uop_5408 = relay.log10(call_5395.astype('float64')) # shape=(168, 8)
uop_5410 = relay.log10(call_5396.astype('float64')) # shape=(168, 8)
func_4997_call = mod.get_global_var('func_4997')
func_4998_call = mutated_mod.get_global_var('func_4998')
call_5416 = func_4997_call()
call_5417 = func_4997_call()
output = relay.Tuple([call_5399,call_5406,uop_5408,call_5416,])
output2 = relay.Tuple([call_5400,call_5407,uop_5410,call_5417,])
func_5421 = relay.Function([], output)
mod['func_5421'] = func_5421
mod = relay.transform.InferType()(mod)
output = func_5421()
func_5422 = relay.Function([], output)
mutated_mod['func_5422'] = func_5422
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5437 = relay.var("var_5437", dtype = "float32", shape = (12, 16, 10))#candidate|5437|(12, 16, 10)|var|float32
uop_5438 = relay.sqrt(var_5437.astype('float32')) # shape=(12, 16, 10)
func_5162_call = mod.get_global_var('func_5162')
func_5164_call = mutated_mod.get_global_var('func_5164')
call_5446 = func_5162_call()
call_5447 = func_5162_call()
output = relay.Tuple([uop_5438,call_5446,])
output2 = relay.Tuple([uop_5438,call_5447,])
func_5451 = relay.Function([var_5437,], output)
mod['func_5451'] = func_5451
mod = relay.transform.InferType()(mod)
var_5452 = relay.var("var_5452", dtype = "float32", shape = (12, 16, 10))#candidate|5452|(12, 16, 10)|var|float32
output = func_5451(var_5452)
func_5453 = relay.Function([var_5452], output)
mutated_mod['func_5453'] = func_5453
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3119_call = mod.get_global_var('func_3119')
func_3121_call = mutated_mod.get_global_var('func_3121')
call_5477 = relay.TupleGetItem(func_3119_call(), 0)
call_5478 = relay.TupleGetItem(func_3121_call(), 0)
func_3847_call = mod.get_global_var('func_3847')
func_3850_call = mutated_mod.get_global_var('func_3850')
call_5488 = relay.TupleGetItem(func_3847_call(relay.reshape(call_5477.astype('int8'), [1344,])), 3)
call_5489 = relay.TupleGetItem(func_3850_call(relay.reshape(call_5477.astype('int8'), [1344,])), 3)
output = relay.Tuple([call_5477,call_5488,])
output2 = relay.Tuple([call_5478,call_5489,])
func_5493 = relay.Function([], output)
mod['func_5493'] = func_5493
mod = relay.transform.InferType()(mod)
output = func_5493()
func_5494 = relay.Function([], output)
mutated_mod['func_5494'] = func_5494
mutated_mod = relay.transform.InferType()(mutated_mod)
func_807_call = mod.get_global_var('func_807')
func_809_call = mutated_mod.get_global_var('func_809')
call_5562 = relay.TupleGetItem(func_807_call(), 0)
call_5563 = relay.TupleGetItem(func_809_call(), 0)
output = relay.Tuple([call_5562,])
output2 = relay.Tuple([call_5563,])
func_5573 = relay.Function([], output)
mod['func_5573'] = func_5573
mod = relay.transform.InferType()(mod)
output = func_5573()
func_5574 = relay.Function([], output)
mutated_mod['func_5574'] = func_5574
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5154_call = mod.get_global_var('func_5154')
func_5156_call = mutated_mod.get_global_var('func_5156')
call_5621 = func_5154_call()
call_5622 = func_5154_call()
output = relay.Tuple([call_5621,])
output2 = relay.Tuple([call_5622,])
func_5627 = relay.Function([], output)
mod['func_5627'] = func_5627
mod = relay.transform.InferType()(mod)
mutated_mod['func_5627'] = func_5627
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5627_call = mutated_mod.get_global_var('func_5627')
call_5628 = func_5627_call()
output = call_5628
func_5629 = relay.Function([], output)
mutated_mod['func_5629'] = func_5629
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4248_call = mod.get_global_var('func_4248')
func_4250_call = mutated_mod.get_global_var('func_4250')
call_5633 = relay.TupleGetItem(func_4248_call(), 0)
call_5634 = relay.TupleGetItem(func_4250_call(), 0)
uop_5649 = relay.atanh(call_5633.astype('float32')) # shape=(168, 8)
uop_5651 = relay.atanh(call_5634.astype('float32')) # shape=(168, 8)
func_2025_call = mod.get_global_var('func_2025')
func_2027_call = mutated_mod.get_global_var('func_2027')
call_5657 = func_2025_call()
call_5658 = func_2025_call()
var_5668 = relay.var("var_5668", dtype = "float32", shape = (168, 8))#candidate|5668|(168, 8)|var|float32
bop_5669 = relay.maximum(uop_5649.astype('uint16'), relay.reshape(var_5668.astype('uint16'), relay.shape_of(uop_5649))) # shape=(168, 8)
bop_5672 = relay.maximum(uop_5651.astype('uint16'), relay.reshape(var_5668.astype('uint16'), relay.shape_of(uop_5651))) # shape=(168, 8)
output = relay.Tuple([call_5657,bop_5669,])
output2 = relay.Tuple([call_5658,bop_5672,])
func_5676 = relay.Function([var_5668,], output)
mod['func_5676'] = func_5676
mod = relay.transform.InferType()(mod)
var_5677 = relay.var("var_5677", dtype = "float32", shape = (168, 8))#candidate|5677|(168, 8)|var|float32
output = func_5676(var_5677)
func_5678 = relay.Function([var_5677], output)
mutated_mod['func_5678'] = func_5678
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3793_call = mod.get_global_var('func_3793')
func_3795_call = mutated_mod.get_global_var('func_3795')
call_5737 = relay.TupleGetItem(func_3793_call(), 8)
call_5738 = relay.TupleGetItem(func_3795_call(), 8)
func_944_call = mod.get_global_var('func_944')
func_945_call = mutated_mod.get_global_var('func_945')
call_5749 = relay.TupleGetItem(func_944_call(), 4)
call_5750 = relay.TupleGetItem(func_945_call(), 4)
output = relay.Tuple([call_5737,call_5749,])
output2 = relay.Tuple([call_5738,call_5750,])
func_5756 = relay.Function([], output)
mod['func_5756'] = func_5756
mod = relay.transform.InferType()(mod)
output = func_5756()
func_5757 = relay.Function([], output)
mutated_mod['func_5757'] = func_5757
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2025_call = mod.get_global_var('func_2025')
func_2027_call = mutated_mod.get_global_var('func_2027')
call_5797 = func_2025_call()
call_5798 = func_2025_call()
output = call_5797
output2 = call_5798
func_5799 = relay.Function([], output)
mod['func_5799'] = func_5799
mod = relay.transform.InferType()(mod)
output = func_5799()
func_5800 = relay.Function([], output)
mutated_mod['func_5800'] = func_5800
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1663_call = mod.get_global_var('func_1663')
func_1664_call = mutated_mod.get_global_var('func_1664')
call_5815 = func_1663_call()
call_5816 = func_1663_call()
output = call_5815
output2 = call_5816
func_5831 = relay.Function([], output)
mod['func_5831'] = func_5831
mod = relay.transform.InferType()(mod)
mutated_mod['func_5831'] = func_5831
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5831_call = mutated_mod.get_global_var('func_5831')
call_5832 = func_5831_call()
output = call_5832
func_5833 = relay.Function([], output)
mutated_mod['func_5833'] = func_5833
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5880 = relay.var("var_5880", dtype = "uint8", shape = (11, 4, 13))#candidate|5880|(11, 4, 13)|var|uint8
var_5881 = relay.var("var_5881", dtype = "uint8", shape = (11, 4, 13))#candidate|5881|(11, 4, 13)|var|uint8
bop_5882 = relay.bitwise_or(var_5880.astype('uint8'), relay.reshape(var_5881.astype('uint8'), relay.shape_of(var_5880))) # shape=(11, 4, 13)
func_807_call = mod.get_global_var('func_807')
func_809_call = mutated_mod.get_global_var('func_809')
call_5886 = relay.TupleGetItem(func_807_call(), 1)
call_5887 = relay.TupleGetItem(func_809_call(), 1)
output = relay.Tuple([bop_5882,call_5886,])
output2 = relay.Tuple([bop_5882,call_5887,])
func_5896 = relay.Function([var_5880,var_5881,], output)
mod['func_5896'] = func_5896
mod = relay.transform.InferType()(mod)
var_5897 = relay.var("var_5897", dtype = "uint8", shape = (11, 4, 13))#candidate|5897|(11, 4, 13)|var|uint8
var_5898 = relay.var("var_5898", dtype = "uint8", shape = (11, 4, 13))#candidate|5898|(11, 4, 13)|var|uint8
output = func_5896(var_5897,var_5898,)
func_5899 = relay.Function([var_5897,var_5898,], output)
mutated_mod['func_5899'] = func_5899
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1306_call = mod.get_global_var('func_1306')
func_1307_call = mutated_mod.get_global_var('func_1307')
call_5985 = func_1306_call()
call_5986 = func_1306_call()
func_4102_call = mod.get_global_var('func_4102')
func_4103_call = mutated_mod.get_global_var('func_4103')
call_5989 = relay.TupleGetItem(func_4102_call(), 0)
call_5990 = relay.TupleGetItem(func_4103_call(), 0)
output = relay.Tuple([call_5985,call_5989,])
output2 = relay.Tuple([call_5986,call_5990,])
func_5994 = relay.Function([], output)
mod['func_5994'] = func_5994
mod = relay.transform.InferType()(mod)
mutated_mod['func_5994'] = func_5994
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5994_call = mutated_mod.get_global_var('func_5994')
call_5995 = func_5994_call()
output = call_5995
func_5996 = relay.Function([], output)
mutated_mod['func_5996'] = func_5996
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3937_call = mod.get_global_var('func_3937')
func_3939_call = mutated_mod.get_global_var('func_3939')
call_6012 = relay.TupleGetItem(func_3937_call(), 3)
call_6013 = relay.TupleGetItem(func_3939_call(), 3)
output = relay.Tuple([call_6012,])
output2 = relay.Tuple([call_6013,])
func_6016 = relay.Function([], output)
mod['func_6016'] = func_6016
mod = relay.transform.InferType()(mod)
mutated_mod['func_6016'] = func_6016
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6016_call = mutated_mod.get_global_var('func_6016')
call_6017 = func_6016_call()
output = call_6017
func_6018 = relay.Function([], output)
mutated_mod['func_6018'] = func_6018
mutated_mod = relay.transform.InferType()(mutated_mod)
func_830_call = mod.get_global_var('func_830')
func_832_call = mutated_mod.get_global_var('func_832')
call_6039 = relay.TupleGetItem(func_830_call(), 0)
call_6040 = relay.TupleGetItem(func_832_call(), 0)
func_807_call = mod.get_global_var('func_807')
func_809_call = mutated_mod.get_global_var('func_809')
call_6048 = relay.TupleGetItem(func_807_call(), 1)
call_6049 = relay.TupleGetItem(func_809_call(), 1)
output = relay.Tuple([call_6039,call_6048,])
output2 = relay.Tuple([call_6040,call_6049,])
func_6070 = relay.Function([], output)
mod['func_6070'] = func_6070
mod = relay.transform.InferType()(mod)
mutated_mod['func_6070'] = func_6070
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6070_call = mutated_mod.get_global_var('func_6070')
call_6071 = func_6070_call()
output = call_6071
func_6072 = relay.Function([], output)
mutated_mod['func_6072'] = func_6072
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3025_call = mod.get_global_var('func_3025')
func_3027_call = mutated_mod.get_global_var('func_3027')
call_6104 = relay.TupleGetItem(func_3025_call(), 0)
call_6105 = relay.TupleGetItem(func_3027_call(), 0)
output = call_6104
output2 = call_6105
func_6119 = relay.Function([], output)
mod['func_6119'] = func_6119
mod = relay.transform.InferType()(mod)
mutated_mod['func_6119'] = func_6119
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6119_call = mutated_mod.get_global_var('func_6119')
call_6120 = func_6119_call()
output = call_6120
func_6121 = relay.Function([], output)
mutated_mod['func_6121'] = func_6121
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5421_call = mod.get_global_var('func_5421')
func_5422_call = mutated_mod.get_global_var('func_5422')
call_6133 = relay.TupleGetItem(func_5421_call(), 2)
call_6134 = relay.TupleGetItem(func_5422_call(), 2)
output = relay.Tuple([call_6133,])
output2 = relay.Tuple([call_6134,])
func_6138 = relay.Function([], output)
mod['func_6138'] = func_6138
mod = relay.transform.InferType()(mod)
output = func_6138()
func_6139 = relay.Function([], output)
mutated_mod['func_6139'] = func_6139
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5799_call = mod.get_global_var('func_5799')
func_5800_call = mutated_mod.get_global_var('func_5800')
call_6158 = func_5799_call()
call_6159 = func_5799_call()
output = call_6158
output2 = call_6159
func_6162 = relay.Function([], output)
mod['func_6162'] = func_6162
mod = relay.transform.InferType()(mod)
mutated_mod['func_6162'] = func_6162
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6162_call = mutated_mod.get_global_var('func_6162')
call_6163 = func_6162_call()
output = call_6163
func_6164 = relay.Function([], output)
mutated_mod['func_6164'] = func_6164
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1428_call = mod.get_global_var('func_1428')
func_1429_call = mutated_mod.get_global_var('func_1429')
call_6214 = relay.TupleGetItem(func_1428_call(), 0)
call_6215 = relay.TupleGetItem(func_1429_call(), 0)
output = call_6214
output2 = call_6215
func_6219 = relay.Function([], output)
mod['func_6219'] = func_6219
mod = relay.transform.InferType()(mod)
output = func_6219()
func_6220 = relay.Function([], output)
mutated_mod['func_6220'] = func_6220
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2686_call = mod.get_global_var('func_2686')
func_2687_call = mutated_mod.get_global_var('func_2687')
call_6276 = relay.TupleGetItem(func_2686_call(), 1)
call_6277 = relay.TupleGetItem(func_2687_call(), 1)
output = relay.Tuple([call_6276,])
output2 = relay.Tuple([call_6277,])
func_6280 = relay.Function([], output)
mod['func_6280'] = func_6280
mod = relay.transform.InferType()(mod)
output = func_6280()
func_6281 = relay.Function([], output)
mutated_mod['func_6281'] = func_6281
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2861_call = mod.get_global_var('func_2861')
func_2863_call = mutated_mod.get_global_var('func_2863')
call_6312 = func_2861_call()
call_6313 = func_2861_call()
uop_6320 = relay.rsqrt(call_6312.astype('float64')) # shape=(168, 8)
uop_6322 = relay.rsqrt(call_6313.astype('float64')) # shape=(168, 8)
output = uop_6320
output2 = uop_6322
func_6348 = relay.Function([], output)
mod['func_6348'] = func_6348
mod = relay.transform.InferType()(mod)
mutated_mod['func_6348'] = func_6348
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6348_call = mutated_mod.get_global_var('func_6348')
call_6349 = func_6348_call()
output = call_6349
func_6350 = relay.Function([], output)
mutated_mod['func_6350'] = func_6350
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3259_call = mod.get_global_var('func_3259')
func_3260_call = mutated_mod.get_global_var('func_3260')
call_6353 = relay.TupleGetItem(func_3259_call(), 0)
call_6354 = relay.TupleGetItem(func_3260_call(), 0)
var_6366 = relay.var("var_6366", dtype = "bool", shape = (168, 8))#candidate|6366|(168, 8)|var|bool
bop_6367 = relay.logical_or(call_6353.astype('bool'), relay.reshape(var_6366.astype('bool'), relay.shape_of(call_6353))) # shape=(168, 8)
bop_6370 = relay.logical_or(call_6354.astype('bool'), relay.reshape(var_6366.astype('bool'), relay.shape_of(call_6354))) # shape=(168, 8)
output = relay.Tuple([bop_6367,])
output2 = relay.Tuple([bop_6370,])
func_6372 = relay.Function([var_6366,], output)
mod['func_6372'] = func_6372
mod = relay.transform.InferType()(mod)
var_6373 = relay.var("var_6373", dtype = "bool", shape = (168, 8))#candidate|6373|(168, 8)|var|bool
output = func_6372(var_6373)
func_6374 = relay.Function([var_6373], output)
mutated_mod['func_6374'] = func_6374
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1972_call = mod.get_global_var('func_1972')
func_1973_call = mutated_mod.get_global_var('func_1973')
call_6424 = relay.TupleGetItem(func_1972_call(), 0)
call_6425 = relay.TupleGetItem(func_1973_call(), 0)
output = relay.Tuple([call_6424,])
output2 = relay.Tuple([call_6425,])
func_6443 = relay.Function([], output)
mod['func_6443'] = func_6443
mod = relay.transform.InferType()(mod)
output = func_6443()
func_6444 = relay.Function([], output)
mutated_mod['func_6444'] = func_6444
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5799_call = mod.get_global_var('func_5799')
func_5800_call = mutated_mod.get_global_var('func_5800')
call_6466 = func_5799_call()
call_6467 = func_5799_call()
func_3034_call = mod.get_global_var('func_3034')
func_3035_call = mutated_mod.get_global_var('func_3035')
call_6470 = relay.TupleGetItem(func_3034_call(), 0)
call_6471 = relay.TupleGetItem(func_3035_call(), 0)
func_3628_call = mod.get_global_var('func_3628')
func_3629_call = mutated_mod.get_global_var('func_3629')
call_6481 = relay.TupleGetItem(func_3628_call(), 0)
call_6482 = relay.TupleGetItem(func_3629_call(), 0)
uop_6488 = relay.rsqrt(call_6470.astype('float64')) # shape=(8, 6, 15)
uop_6490 = relay.rsqrt(call_6471.astype('float64')) # shape=(8, 6, 15)
output = relay.Tuple([call_6466,call_6481,uop_6488,])
output2 = relay.Tuple([call_6467,call_6482,uop_6490,])
func_6504 = relay.Function([], output)
mod['func_6504'] = func_6504
mod = relay.transform.InferType()(mod)
output = func_6504()
func_6505 = relay.Function([], output)
mutated_mod['func_6505'] = func_6505
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5994_call = mod.get_global_var('func_5994')
func_5996_call = mutated_mod.get_global_var('func_5996')
call_6538 = relay.TupleGetItem(func_5994_call(), 0)
call_6539 = relay.TupleGetItem(func_5996_call(), 0)
output = relay.Tuple([call_6538,])
output2 = relay.Tuple([call_6539,])
func_6540 = relay.Function([], output)
mod['func_6540'] = func_6540
mod = relay.transform.InferType()(mod)
output = func_6540()
func_6541 = relay.Function([], output)
mutated_mod['func_6541'] = func_6541
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5493_call = mod.get_global_var('func_5493')
func_5494_call = mutated_mod.get_global_var('func_5494')
call_6592 = relay.TupleGetItem(func_5493_call(), 0)
call_6593 = relay.TupleGetItem(func_5494_call(), 0)
func_5421_call = mod.get_global_var('func_5421')
func_5422_call = mutated_mod.get_global_var('func_5422')
call_6600 = relay.TupleGetItem(func_5421_call(), 2)
call_6601 = relay.TupleGetItem(func_5422_call(), 2)
uop_6622 = relay.tan(call_6600.astype('float32')) # shape=(168, 8)
uop_6624 = relay.tan(call_6601.astype('float32')) # shape=(168, 8)
func_6219_call = mod.get_global_var('func_6219')
func_6220_call = mutated_mod.get_global_var('func_6220')
call_6640 = func_6219_call()
call_6641 = func_6219_call()
func_6016_call = mod.get_global_var('func_6016')
func_6018_call = mutated_mod.get_global_var('func_6018')
call_6663 = relay.TupleGetItem(func_6016_call(), 0)
call_6664 = relay.TupleGetItem(func_6018_call(), 0)
output = relay.Tuple([call_6592,uop_6622,call_6640,call_6663,])
output2 = relay.Tuple([call_6593,uop_6624,call_6641,call_6664,])
func_6672 = relay.Function([], output)
mod['func_6672'] = func_6672
mod = relay.transform.InferType()(mod)
mutated_mod['func_6672'] = func_6672
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6672_call = mutated_mod.get_global_var('func_6672')
call_6673 = func_6672_call()
output = call_6673
func_6674 = relay.Function([], output)
mutated_mod['func_6674'] = func_6674
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1194_call = mod.get_global_var('func_1194')
func_1195_call = mutated_mod.get_global_var('func_1195')
call_6732 = relay.TupleGetItem(func_1194_call(), 3)
call_6733 = relay.TupleGetItem(func_1195_call(), 3)
func_3259_call = mod.get_global_var('func_3259')
func_3260_call = mutated_mod.get_global_var('func_3260')
call_6737 = relay.TupleGetItem(func_3259_call(), 0)
call_6738 = relay.TupleGetItem(func_3260_call(), 0)
func_5573_call = mod.get_global_var('func_5573')
func_5574_call = mutated_mod.get_global_var('func_5574')
call_6763 = relay.TupleGetItem(func_5573_call(), 0)
call_6764 = relay.TupleGetItem(func_5574_call(), 0)
bop_6765 = relay.bitwise_or(call_6763.astype('int8'), relay.reshape(call_6737.astype('int8'), relay.shape_of(call_6763))) # shape=(168, 8)
bop_6768 = relay.bitwise_or(call_6764.astype('int8'), relay.reshape(call_6738.astype('int8'), relay.shape_of(call_6764))) # shape=(168, 8)
uop_6771 = relay.sin(call_6732.astype('float32')) # shape=(180, 4)
uop_6773 = relay.sin(call_6733.astype('float32')) # shape=(180, 4)
func_2010_call = mod.get_global_var('func_2010')
func_2013_call = mutated_mod.get_global_var('func_2013')
call_6775 = relay.TupleGetItem(func_2010_call(relay.reshape(uop_6771.astype('float32'), [180, 4])), 0)
call_6776 = relay.TupleGetItem(func_2013_call(relay.reshape(uop_6771.astype('float32'), [180, 4])), 0)
output = relay.Tuple([bop_6765,uop_6771,call_6775,])
output2 = relay.Tuple([bop_6768,uop_6773,call_6776,])
func_6778 = relay.Function([], output)
mod['func_6778'] = func_6778
mod = relay.transform.InferType()(mod)
output = func_6778()
func_6779 = relay.Function([], output)
mutated_mod['func_6779'] = func_6779
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4248_call = mod.get_global_var('func_4248')
func_4250_call = mutated_mod.get_global_var('func_4250')
call_6809 = relay.TupleGetItem(func_4248_call(), 2)
call_6810 = relay.TupleGetItem(func_4250_call(), 2)
output = call_6809
output2 = call_6810
func_6811 = relay.Function([], output)
mod['func_6811'] = func_6811
mod = relay.transform.InferType()(mod)
mutated_mod['func_6811'] = func_6811
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6811_call = mutated_mod.get_global_var('func_6811')
call_6812 = func_6811_call()
output = call_6812
func_6813 = relay.Function([], output)
mutated_mod['func_6813'] = func_6813
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2997_call = mod.get_global_var('func_2997')
func_2998_call = mutated_mod.get_global_var('func_2998')
call_6821 = relay.TupleGetItem(func_2997_call(), 1)
call_6822 = relay.TupleGetItem(func_2998_call(), 1)
output = call_6821
output2 = call_6822
func_6824 = relay.Function([], output)
mod['func_6824'] = func_6824
mod = relay.transform.InferType()(mod)
output = func_6824()
func_6825 = relay.Function([], output)
mutated_mod['func_6825'] = func_6825
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1817_call = mod.get_global_var('func_1817')
func_1818_call = mutated_mod.get_global_var('func_1818')
call_6839 = func_1817_call()
call_6840 = func_1817_call()
output = call_6839
output2 = call_6840
func_6848 = relay.Function([], output)
mod['func_6848'] = func_6848
mod = relay.transform.InferType()(mod)
output = func_6848()
func_6849 = relay.Function([], output)
mutated_mod['func_6849'] = func_6849
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2906_call = mod.get_global_var('func_2906')
func_2908_call = mutated_mod.get_global_var('func_2908')
call_6861 = relay.TupleGetItem(func_2906_call(), 1)
call_6862 = relay.TupleGetItem(func_2908_call(), 1)
output = relay.Tuple([call_6861,])
output2 = relay.Tuple([call_6862,])
func_6871 = relay.Function([], output)
mod['func_6871'] = func_6871
mod = relay.transform.InferType()(mod)
output = func_6871()
func_6872 = relay.Function([], output)
mutated_mod['func_6872'] = func_6872
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4204_call = mod.get_global_var('func_4204')
func_4206_call = mutated_mod.get_global_var('func_4206')
call_6944 = relay.TupleGetItem(func_4204_call(), 0)
call_6945 = relay.TupleGetItem(func_4206_call(), 0)
var_6956 = relay.var("var_6956", dtype = "bool", shape = (168, 8))#candidate|6956|(168, 8)|var|bool
bop_6957 = relay.minimum(call_6944.astype('int32'), relay.reshape(var_6956.astype('int32'), relay.shape_of(call_6944))) # shape=(168, 8)
bop_6960 = relay.minimum(call_6945.astype('int32'), relay.reshape(var_6956.astype('int32'), relay.shape_of(call_6945))) # shape=(168, 8)
func_1069_call = mod.get_global_var('func_1069')
func_1073_call = mutated_mod.get_global_var('func_1073')
const_6970 = relay.const([9.355648,4.844195,-3.470236,-2.478731,-8.703095,7.750439,-6.181284,1.977085,3.810525,-8.791631,-2.601828,-2.904566,3.350168,1.052432,3.501468,-9.182149,-6.515140,7.620600,-6.355724,4.325798,3.842671,6.004292,2.543589,5.608367,-3.091616,-7.103804,4.341487,5.035196,5.380313,8.751065,9.522531,-7.099184,9.684495,-5.321200,8.174035,-0.466955,-3.130972,7.955857,-9.736397,-7.039282,-0.295549,3.081407,1.165358,-7.717646,-4.282108,8.070928,9.150949,0.280729,7.051849,-9.260038,5.210578,0.379830,2.721940,-0.597683,4.489747,-4.197568,6.087951,-1.965693,0.271443,1.189215,-4.926599,9.467816,-9.206528,8.120234,3.994280,0.990263,-4.233767,-5.949208,7.402639,-4.457569,-7.968636,-7.469148,-5.829574,-4.387973,6.008746,8.227908,7.823022,1.515951,-8.927048,7.202004,2.991160,-8.383601,-7.567526,6.127165,9.217532,-9.948575,-6.476523,0.684884,0.748551,-6.245272,-1.302510,7.122330,2.599053,2.035114,9.275068,3.216397,6.089169,-9.624221,-5.332163,5.424632,5.618614,8.095322,-8.351525,9.919136,9.126388,-2.588792,9.963464,4.254108,9.138163,-9.116341,3.198413,7.382986,-2.837847,-6.145897,9.469885,-9.480060,-4.992023,-5.036882,5.306992,-7.761680,-4.899963,-2.243754,-6.587386,-2.999487,-8.426757,-3.788690,-0.115556,1.668301,-0.196002,9.090869,6.487249,-9.385458,-9.216957,4.118245,-3.837783,-7.205981,-3.605248,3.324256,-3.551439,-2.883382,-6.617343,-7.861266,-6.361582,6.330507,-3.500693,-1.202523,0.534809,9.785847,-1.422406,5.662218,-9.598447,1.282461,-9.719282,-6.360963,-3.042655,3.198278,3.729013,9.515138,1.501816,-7.331044,7.605322,-7.238234,-5.929330,-2.147433,-8.202146,2.926783,0.750762,8.828875,8.964170,-5.962710,4.921141,3.678403,-3.205857,-2.389599,0.919831,7.519747,-7.734820,0.508205,2.553564,2.305324,2.008864,-1.834658,3.777991,-0.881022,2.877451,-4.062438,8.048504,-8.312219,-6.307892,8.681767,3.368425,-1.674482,-7.175751,-0.993725,-9.847990,4.680203,5.506290,-2.353992,-6.572035,0.514209,-6.724915,-3.575128,6.021988,2.632592,4.128245,-3.699051,0.540309,-3.129010,-3.820238,5.241714,-9.443351,3.515927,-8.567834,-5.884784,-1.808496,6.340713,5.344714,-3.562236,-8.071154,-7.456011,1.386118,-9.961456,-8.501822,-0.501198,-3.209901,8.036015,1.946544,-3.100432,-8.553123,-8.519194,-2.170264,7.705301,4.356539,8.789289,1.764141,2.709310,-6.963385,0.796759,2.135944,6.730837,0.717391,-8.908604,3.979516,5.918769,-7.377500,3.957707,6.603650,-4.107799,-7.123394,-0.580754,-4.041379,-1.183077,7.392102,7.399748,-3.064997,-1.554306,1.928635,-3.807454,2.178060,-5.219121,3.763497,2.199661,3.374473,2.985152,2.843939,6.772000,4.202726,-5.516091,-3.351253,4.292209,-2.622121,-4.229560,1.802853,2.985384,-1.850785,-2.937369,8.818207,-2.187155,0.293681,-9.076086,4.485215,-4.270801,-9.545480,-4.064089,-4.028535,2.507477,5.963544,-9.279997,-0.808129,-2.035158,-4.685934,-0.783669,-4.377265,-4.559533,-5.777431,-7.105352,-7.562882,-9.363433,9.219164,9.739107,5.810893,-6.351650,0.382643,3.793642,-7.835338,-8.637725,-0.901790,-8.660771,-0.986285,-6.687511,-6.319597,-9.289646,-5.718100,0.222950,8.468978,6.317199,5.210309,-8.958796,1.396756,-6.285764,2.400934,-1.845992,3.478548,-4.086646,6.846685,-9.558737,0.422589,-9.958182,8.469555,7.808012,2.358020,7.662511,-2.579937,6.426278,6.800965,-3.866815,-3.868879,-8.535504,5.436393,1.364029,-1.728162,-0.005830,3.064884,5.395282,-9.217665,6.243843,0.156202,-8.036637,-4.099163,3.352636,4.815039,-6.811771,-6.907072,4.493819,6.104814,-5.937365,-7.250831,8.779788,-9.805288,8.535804,7.436452,-5.261190,9.067101,7.793367,-9.895393,-4.924643,-5.763538,4.151282,0.746717,-9.743163,-8.217504,-9.288921,-3.682260,-0.207867,-1.048225,1.804594,-9.475229,8.373349,2.437325,-3.953245,2.491357,1.193051,8.748588,8.360308,-6.451852,-2.777784,-1.003270,2.718229,-8.860857,9.747814,1.926656,0.486329,-0.105833,-1.561090,1.955431,2.074690,9.434985,-0.389379,-5.678516,7.974272,8.523073,5.573738,7.110052,-1.374260,-6.802953,-9.800022,3.697678,3.511481,-7.982221,6.807717,-0.590491,6.376520,3.312848,9.288479,6.525428,-9.725531,-1.875200,-3.323563,9.205248,4.901350,5.673324,0.944330,4.456471,-9.932955,-6.434570,8.694317,0.314054,-5.114738,-1.510377,-8.982492,0.948618,5.571510,-8.753166,2.627980,-1.925460,7.492804,-2.178341,-3.303083,2.699533,-0.859592,-8.182879,9.407936,-0.371600,7.778894,4.171085,-2.822959,-1.927861,-9.881850,0.971654,-4.178963,-3.659829,0.024531,1.420768,0.097688,2.492715,-8.151474,1.308742,7.328862,-8.445373,0.573094,-1.521375,-4.548501,9.107041,8.926548,-0.923653,-5.969670,0.665715,1.380716,-7.588063,0.012613,-9.958822,0.020573,2.045246,8.361705,3.572299,8.384062,-1.016361,7.720709,-2.117517,1.756693,-6.158620,-5.988765,6.970504,-1.031775,-1.306902,9.984179,-6.915365,-0.689773,2.154595,4.640904,-6.070992,-2.093730,-3.159286,-9.669174,-8.279841,2.774568,-7.440559,-6.987469,3.788991,5.512673,4.918066,3.808376,4.648643,8.702773,7.086158,-7.719237,-1.897110,1.161254,-1.683833,2.956129,9.678862,1.684632,-6.347782,4.731529,7.694738,1.753406,-7.129443,-0.066995,7.303420,-6.733439,-1.994757,-3.675155,-4.762770,8.530131,-2.911018,8.653666,1.853253,4.379005,6.584064,4.650859,3.467119,6.913802,3.180317,6.859132,4.089397,-2.772605,-3.634956,-9.522729,-2.194367,8.492020,8.835287,-2.337865,-1.087639,-4.446165,-7.828084,-4.345423,3.345048,0.896444,7.371320,1.559988,8.827684,-8.130875,-1.962667,-8.470903,-9.912128,1.025168,-2.064605,-9.894062,8.608946,-9.351025,-3.032855,3.222779,-0.826994,4.728581,-9.919217,1.599274,-1.520328,4.046357,-9.521909,5.493071,-0.518411,-5.203863,-9.552705,7.626935,-3.715602,1.735085,-7.899249,-2.264846,-0.349925,-3.278437,-6.934227,-1.144145,0.193944,2.652153,5.024350,-0.049174,-1.566074,-1.624610,3.568315,-1.486268,-3.283410,-0.081328,7.849348,3.592491,-9.007735,-8.620121,9.081453,0.318331,-8.811658,2.108956,9.511121,9.414980,-6.253961,-9.768776,8.947690,5.253306,1.985221,-3.015742,-3.633022,-5.996858,6.270251,7.713779,9.395203,0.138390,-2.642073,0.406953,-8.925261,1.066400,-1.569609,-5.293710,-3.270083,7.834724,-1.553518,-4.589483,-9.366540,9.426036,6.080663,-2.224818,-0.693198,5.626403,-9.888325,-5.080989,1.697842,-4.673683,-4.997865,-5.763933,-9.144299,-7.348317,2.929131,-4.351613,0.443820,-9.707752,-1.468091,5.657021,-7.791636,1.549936,8.225696,-3.346387,1.371078,-8.948260,8.940497,7.655607,0.633059,-2.269373,-8.013252,-8.582839,0.583535,3.816579,9.678032,-3.344240,6.254730,7.134282,6.952145,5.137793,-1.971160,-8.948039,-8.912165,9.601774,5.670883,5.762946,-4.264312,2.727784,-1.267915,-0.422861,4.839366,0.224621,-9.426301,7.304467,-4.701564,3.416166,0.420776,0.081492,7.364108,6.529027,-1.468221,-8.612556,-1.237568,-7.419260,-1.125085,-0.284278,0.758127,-7.368924,-5.157516,-6.424596,9.096511,0.487729,6.642256,-1.892128,-1.405752,-6.324831,-1.168559,1.257623,-7.078431,8.081772,-1.926316,5.321928,-8.934640,-4.393644,9.762008,8.090115,-4.939882,1.437378,0.459445,-8.374260,8.098703,4.959675,9.486240,-4.670605,-4.708137,3.145343], dtype = "float32")#candidate|6970|(720,)|const|float32
call_6969 = relay.TupleGetItem(func_1069_call(relay.reshape(var_6956.astype('int8'), [16, 7, 12]), relay.reshape(const_6970.astype('float32'), [4, 180]), ), 1)
call_6971 = relay.TupleGetItem(func_1073_call(relay.reshape(var_6956.astype('int8'), [16, 7, 12]), relay.reshape(const_6970.astype('float32'), [4, 180]), ), 1)
func_6824_call = mod.get_global_var('func_6824')
func_6825_call = mutated_mod.get_global_var('func_6825')
call_6976 = func_6824_call()
call_6977 = func_6824_call()
output = relay.Tuple([bop_6957,call_6969,const_6970,call_6976,])
output2 = relay.Tuple([bop_6960,call_6971,const_6970,call_6977,])
func_6988 = relay.Function([var_6956,], output)
mod['func_6988'] = func_6988
mod = relay.transform.InferType()(mod)
mutated_mod['func_6988'] = func_6988
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6989 = relay.var("var_6989", dtype = "bool", shape = (168, 8))#candidate|6989|(168, 8)|var|bool
func_6988_call = mutated_mod.get_global_var('func_6988')
call_6990 = func_6988_call(var_6989)
output = call_6990
func_6991 = relay.Function([var_6989], output)
mutated_mod['func_6991'] = func_6991
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1592_call = mod.get_global_var('func_1592')
func_1594_call = mutated_mod.get_global_var('func_1594')
call_7061 = relay.TupleGetItem(func_1592_call(), 4)
call_7062 = relay.TupleGetItem(func_1594_call(), 4)
output = relay.Tuple([call_7061,])
output2 = relay.Tuple([call_7062,])
func_7066 = relay.Function([], output)
mod['func_7066'] = func_7066
mod = relay.transform.InferType()(mod)
mutated_mod['func_7066'] = func_7066
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7066_call = mutated_mod.get_global_var('func_7066')
call_7067 = func_7066_call()
output = call_7067
func_7068 = relay.Function([], output)
mutated_mod['func_7068'] = func_7068
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3999_call = mod.get_global_var('func_3999')
func_4001_call = mutated_mod.get_global_var('func_4001')
call_7082 = func_3999_call()
call_7083 = func_3999_call()
func_5116_call = mod.get_global_var('func_5116')
func_5118_call = mutated_mod.get_global_var('func_5118')
var_7098 = relay.var("var_7098", dtype = "float32", shape = (12, 60))#candidate|7098|(12, 60)|var|float32
call_7097 = relay.TupleGetItem(func_5116_call(relay.reshape(var_7098.astype('float32'), [180, 4])), 0)
call_7099 = relay.TupleGetItem(func_5118_call(relay.reshape(var_7098.astype('float32'), [180, 4])), 0)
uop_7107 = relay.log(var_7098.astype('float32')) # shape=(12, 60)
output = relay.Tuple([call_7082,call_7097,uop_7107,])
output2 = relay.Tuple([call_7083,call_7099,uop_7107,])
func_7112 = relay.Function([var_7098,], output)
mod['func_7112'] = func_7112
mod = relay.transform.InferType()(mod)
var_7113 = relay.var("var_7113", dtype = "float32", shape = (12, 60))#candidate|7113|(12, 60)|var|float32
output = func_7112(var_7113)
func_7114 = relay.Function([var_7113], output)
mutated_mod['func_7114'] = func_7114
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6280_call = mod.get_global_var('func_6280')
func_6281_call = mutated_mod.get_global_var('func_6281')
call_7123 = relay.TupleGetItem(func_6280_call(), 0)
call_7124 = relay.TupleGetItem(func_6281_call(), 0)
func_1194_call = mod.get_global_var('func_1194')
func_1195_call = mutated_mod.get_global_var('func_1195')
call_7129 = relay.TupleGetItem(func_1194_call(), 1)
call_7130 = relay.TupleGetItem(func_1195_call(), 1)
func_2288_call = mod.get_global_var('func_2288')
func_2292_call = mutated_mod.get_global_var('func_2292')
const_7133 = relay.const([-2.481166,7.372696,9.500201,4.165736,9.245214,-3.808568,8.416940,5.633401,3.414952,-3.431864,-8.844403,7.669171,-1.802120,-6.997457,6.715972,2.480111,9.482735,5.035605,6.636736,-0.430443,-6.733877,-9.920587,8.114161,-0.515051,-2.949346,-9.457429,9.847216,-2.719936,0.717290,-3.336122,2.800688,3.387776,-3.994481,4.036485,5.361572,3.862036,0.504625,9.564328,4.633545,3.380841,-8.251414,3.716678,9.854852,3.259301,-9.689975,0.118609,-8.115635,-7.872487,5.157314,-4.447910,3.818108,-1.373111,-8.831455,9.846378,-4.569474,0.204844,7.540009,-9.093723,-1.077947,3.984581,2.681529,-2.889253,8.025979,9.339060,5.286987,-9.559945,6.718751,7.325180,-2.849856,9.786605,9.623517,-5.946374,3.253307,3.394004,-8.342848,-1.852546,-3.125356,9.986911,7.578551,-3.361790,6.907272,-0.594811,-6.849723,-7.845036,-9.435297,4.266692,-3.048678,-3.024018,-7.732074,3.646874,4.937758,8.617533,3.611511,4.400635,6.537270,1.479786,-2.929417,3.657888,6.995260,-2.322205,3.216234,9.980412,7.751516,-6.381493,8.422147,-2.839597,8.536988,-8.971766,7.717812,-4.637287,-4.940243,5.128728,7.575893,3.113192,-1.248015,-7.158878,4.311553,9.401524,-4.444186,-6.309714,0.037936,-3.854247,-6.186975,9.058681,-8.059042,-6.687114,4.406450,-6.049824,-0.873882,8.649592,9.768377,4.793224,9.756754,2.866087,-4.034141,-9.921628,-5.923146,-9.564679,9.514213,-4.095503,9.076369,-0.106423,-8.413179,2.209919,-6.623081,4.176464,7.121797,-8.706237,2.181416,-8.615612,-4.979073,-3.689502,9.279840,6.945383,-9.858687,-1.526323,8.049350,6.895856,0.280604,-1.674829,2.313562,2.365684,-3.677951,-4.334831,5.617084,0.387888,1.995067,3.738117,9.592980,4.806864,-4.867826,8.334924,5.631671,-9.488434,-1.840300,-6.406311,-6.052685,-7.068062,-5.025094,3.795127,3.116413,2.492608,-7.742351,3.050490,6.294551,1.073756,-8.345404,3.976259,4.474007,0.310594,7.847761,-2.045298,9.803244,-3.364944,8.222328,-4.704453,1.948301,0.926109,-2.616058,6.461079,0.878353,7.658773,7.854192,9.655870,-3.747271,-2.899081,3.056123,-4.231287,9.270311,-0.106571,-1.536361,7.978083,-6.677880,8.270024,7.040551,-9.496385,6.194825,0.922103,4.423452,-9.593444,8.812841,4.146606,8.543945,6.013812,-4.457948,9.040502,-7.999270,-4.928909,2.943055,7.542714,-3.095254,6.262035,-1.319782,1.471857,-0.893569,5.730953,-0.014061,-8.620568,-5.329011,7.886516], dtype = "float32")#candidate|7133|(240,)|const|float32
call_7132 = relay.TupleGetItem(func_2288_call(relay.reshape(const_7133.astype('float32'), [5, 16, 3]), relay.reshape(call_7123.astype('float32'), [720,]), ), 1)
call_7134 = relay.TupleGetItem(func_2292_call(relay.reshape(const_7133.astype('float32'), [5, 16, 3]), relay.reshape(call_7123.astype('float32'), [720,]), ), 1)
func_5451_call = mod.get_global_var('func_5451')
func_5453_call = mutated_mod.get_global_var('func_5453')
const_7162 = relay.const([7.769776,8.965424,-5.835583,6.476617,-3.550311,9.016681,8.308785,-2.721979,8.672257,-3.126358,-0.173256,-4.310956,9.607354,0.585761,5.793788,-1.841619,-8.577579,-2.202538,-9.287972,-2.544023,8.589317,7.376574,-6.257549,-5.855134,-7.059846,7.587068,6.433845,-2.813983,-3.832563,-9.291074,-9.839088,5.733900,-4.489106,7.917945,4.187971,6.443160,6.729511,-3.127651,-9.710114,5.692970,7.378018,-7.312548,5.696063,2.888331,-3.050572,9.097232,-6.963743,7.354601,-4.865734,-9.031183,1.580196,-1.960945,-6.914291,-5.044561,-5.581411,8.741572,-4.615149,-9.591233,8.779409,-0.795011,1.569421,-1.834713,-3.115543,-9.722242,-7.512243,-7.906332,-4.369218,-3.783158,8.931722,-2.535639,-8.135013,7.591878,0.888890,-6.145372,-9.260076,-8.885800,-0.889533,4.822486,5.758749,5.463171,-3.119495,8.281578,5.761383,-7.061864,-6.164271,-5.431114,-9.567554,-6.472077,6.586856,-9.834434,9.110806,-1.510440,0.901751,-2.267318,2.933036,-4.068124,6.509058,8.549753,0.925209,-6.026165,-9.634177,5.026639,-5.674875,-5.861301,-9.465105,9.646635,4.479747,-3.839763,-0.928373,7.268503,-3.190514,6.954389,1.686224,-6.935750,-6.629359,1.494550,6.340481,-6.248874,-9.916283,-5.878963,2.294491,-7.555229,2.847204,-9.213231,6.656711,6.919157,5.740603,9.321862,0.596329,-6.089166,-5.064082,-3.096792,-0.896584,-6.864794,4.567702,4.826098,-1.431274,-0.827022,-2.141036,0.548067,-6.338405,-9.308569,-1.176574,3.459737,1.953525,3.680580,5.031811,-4.935152,-6.733312,-6.766452,0.168009,1.863166,9.743341,4.657249,-1.797894,6.744742,5.833762,-1.853475,3.974781,-2.172496,5.966265,6.570444,0.484324,-9.242785,-2.969319,-2.848235,4.583113,1.748757,4.321530,-7.773911,-9.715036,-3.773941,1.193821,6.946323,-6.063772,-3.578740,6.304828,-8.902055,4.421853,6.444566,2.728478,6.914969,0.729053,3.939715,0.336711,-0.894075,0.298555,1.389143,5.791830,-0.123339,-0.431098,-7.291607,-0.376750,6.151263,2.889716,7.512495,-8.990971,6.298750,7.979883,-4.087882,9.388169,-8.373484,3.047260,1.457542,-7.429084,5.723684,-9.165215,1.199673,-7.364125,-7.076743,1.952947,2.187009,-0.125293,5.275511,0.086421,-5.020412,-8.562192,-2.048097,9.131165,-9.973193,6.706729,-7.448268,1.778566,-3.203076,-1.768224,-6.346616,-2.797470,9.495061,-8.898540,-2.311313,-6.308296,-2.665355,-2.877717,8.068281,2.104945,4.956307,7.346452,-6.709482,6.446080,-8.335986,-6.473258,6.879115,-2.861602,0.016984,0.062306,4.976829,6.637241,-4.888935,-4.184832,4.960665,-2.747143,-3.967236,-5.432011,-4.863613,1.030373,-7.683332,0.102121,-0.161508,-5.945371,9.983271,1.162050,-2.367575,-5.417940,-4.038424,-1.123624,-9.628412,4.894747,-6.834238,-9.156443,5.704042,7.156086,7.975113,-8.582463,4.212246,1.227374,-3.437309,1.448283,0.593499,-7.586697,-1.955037,5.987483,6.017237,3.143708,5.563906,-3.461471,7.329424,-9.724221,4.327889,-9.301653,5.221429,5.692502,-5.744540,-3.533182,-8.318967,-4.427983,5.325075,-2.368024,-6.958743,-2.338173,3.407406,-3.383692,2.952417,0.770856,0.012580,1.956560,1.552116,8.930017,9.526254,-0.125329,-3.233098,-5.242178,-8.550032,-3.035125,-2.033824,-8.155361,3.507334,-4.629049,1.311027,0.394937,4.728781,-9.615451,9.539473,-0.352458,2.163096,6.568056,6.738957,-5.630760,-3.345990,-0.319548,7.920943,-4.461175,-0.067775,5.966008,-7.435088,-0.343175,3.913807,-4.855923,-0.717745,2.953265,5.143848,0.144432,-2.137844,1.161082,-8.907523,3.031242,-7.349377,3.298191,-8.901227,2.524390,0.480115,-0.382360,-9.954362,-3.114024,-3.210620,-0.789276,-4.585309,-3.688553,6.147572,7.473839,-2.142550,-3.208640,-5.176019,6.605913,-9.153193,1.701858,-2.848764,6.783177,-0.082778,-9.315666,4.742765,7.595313,-4.031937,9.354888,6.653234,-2.023446,3.954051,-5.253272,-9.829010,2.610822,-2.426451,-4.705842,-3.041427,0.864567,7.877310,1.348326,5.131545,-1.403834,8.691082,8.007767,-8.934872,-5.909815,-7.594174,3.003464,-9.351892,-0.279779,4.673901,2.979376,-7.829573,1.136231,-4.484321,-1.271511,7.916255,-1.336745,-8.800864,8.768870,3.438580,4.464875,-0.033977,-9.160075,9.980703,-1.579353,6.874247,-1.553772,-3.439065,-5.516831,5.003500,-2.965488,7.178354,5.185996,3.707532,8.462332,-1.958582,-0.158684,7.777211,8.524685,6.377461,-5.230646,0.842374,-4.283456,-6.334097,1.858089,-9.843376,-0.688892,-6.178739,3.843288,-0.815131,-2.931354,4.577746,2.279278,5.730804,9.289776,-4.311821,5.452854,4.449361,-7.084174,-3.670402,6.632634,1.324648,6.671425,8.968476,1.286714,5.093651,-4.548047,2.507867,5.456701,-4.180092,9.828420,-6.952792,-5.086793,6.599178,6.889374,-1.802007,-4.956022,-6.105837,4.427357,-0.430812,9.868079,-8.527654,6.536528,-1.776198,-8.767404,5.252964,6.455723,2.925864,4.318631,-1.075205,-7.593781,5.108271,7.793586,-8.886517,5.855637,1.876482,-0.022580,-3.884201,8.554002,7.314724,2.533618,-5.217502,-6.704106,6.143550,-3.613803,5.504859,-7.834586,7.691150,-4.533910,9.265599,-6.795322,8.973887,-7.607702,-0.324885,-6.936252,-1.481000,9.611086,-0.001036,-5.254766,5.504234,-9.003526,1.965408,-4.060210,-6.049509,5.809470,-8.994590,-0.001673,-8.821333,-9.104663,3.328483,-2.897502,-3.767691,-2.418799,-5.991209,-0.018799,0.222727,-4.815717,-5.870434,3.148592,4.507902,-9.073222,-2.290386,8.343525,0.078391,-1.860317,-9.340623,-1.410131,-3.393077,-2.332566,3.281399,-1.538214,2.824761,-4.408148,6.021875,-2.227836,-2.436417,0.249905,4.339425,3.734518,-7.495949,3.427881,8.159851,0.021773,-8.709465,-5.470023,3.361934,-0.840607,6.439901,-4.171386,-0.277747,0.768463,1.917163,-9.545565,-2.022778,6.274083,5.821051,4.460990,7.993622,-3.634377,-1.447117,1.924009,2.492823,-2.978097,-6.864343,-5.907807,5.639452,5.692282,-3.098285,-8.507512,-3.046554,1.540941,-8.023871,-8.107582,5.923537,-2.071191,9.346403,7.232858,3.732824,1.454432,-6.648808,4.810028,6.400648,-7.542820,-7.659355,-0.189636,4.028335,-7.046372,0.745744,9.224396,7.590818,-6.106056,5.478584,4.522730,-6.938490,0.116064,-6.126386,-0.109552,5.718992,5.094398,1.612958,-0.494364,4.194337,8.932047,4.536584,-4.662073,-7.378350,9.412686,-2.013634,-2.948559,8.071290,-9.487199,-6.319935,-4.907318,3.563197,9.628792,1.181079,1.257014,-7.774584,6.148617,7.319601,-1.087055,7.332905,-7.576720,1.383352,-1.087699,-9.317507,-2.973310,3.890366,-7.040305,7.509049,-9.829618,-3.763149,6.269361,-4.264394,-2.210567,-8.835744,0.690277,3.702253,-4.823136,-1.786374,5.386926,9.368801,-2.873416,-2.300030,6.576038,-5.818988,7.624649,-7.153596,-3.343133,8.224164,-2.452034,2.849028,9.861298,0.249015,4.872812,-8.067247,-2.373530,4.643665,0.932943,-1.885742,3.045323,-3.946834,2.671489,1.921812,0.342587,-3.774462,8.183897,0.229600,-5.155069,-1.460851,-0.517636,7.562200,-7.593452,1.089281,-9.364117,-4.897470,0.706997,-5.264088,0.178898,-5.268141,9.082845,8.185553,-1.345239,7.192455,7.125689,2.314747,4.982765,1.299450,3.940680,2.054215,-7.537060,3.862228,-7.341286,-6.236894,0.921473,-0.778959,8.561687,6.839295,-2.169656,6.816189,-1.423845,0.510350,8.723914,3.972332,-1.766328,-5.476091,9.710441,-7.498990,-7.903857,5.176593,7.968857,-6.724498,2.889164,-6.871209,-0.486632,-1.063503,-6.783181,-3.042496,-7.318369,-7.805045,-5.366902,9.134180,-5.931176,0.386497,-0.353495,5.411176,-4.793355,-1.533071,7.786960,6.137100,-3.110514,8.567516,-0.187068,-8.206016,0.864594,5.342766,-4.278735,3.712332,-9.009840,6.598957,-3.622495,-3.621859,-2.799555,-6.601580,8.260795,6.461565,8.481769,9.611788,8.449805,-5.649009,-2.287855,-6.623542,-0.557584,-2.829187,5.994710,8.373008,-9.397706,-2.106365,3.975214,-8.403245,3.855778,-8.638561,-2.874009,-5.072922,-6.493588,5.689032,-7.565052,9.372826,1.440306,5.387694,2.585065,-9.873221,-2.429964,-7.454596,-9.108506,-9.958925,-4.479639,-4.267970,-2.678079,-5.182468,-3.024932,-5.109102,-0.087623,0.872316,6.234605,-7.400291,-6.195029,-0.740891,6.569948,-6.480063,3.070669,3.036809,5.786991,7.757041,-7.685879,-8.572655,7.150628,2.223531,-2.880847,4.656782,7.166882,-5.625083,6.812182,-0.685392,5.412836,-7.456504,-0.991602,6.804457,7.289237,0.088408,-7.830725,-5.431504,-7.765069,7.603221,0.176055,-9.297810,-6.487113,-7.176739,1.020893,7.717736,9.608739,-1.465126,5.713525,8.283863,-3.891357,3.383160,3.461116,-6.742641,7.508055,-0.639441,-6.968443,-2.097216,-7.912206,-5.142223,6.982264,-2.737343,8.643156,-4.822852,-3.058373,-4.014007,6.299585,-4.679116,4.195755,-6.183475,-2.373513,9.921750,-3.526929,-9.793411,-4.899200,-4.490256,-6.523748,-3.669368,0.137566,-8.991550,7.160107,-0.227122,-1.656525,9.496416,1.442520,1.749977,-1.389322,3.337081,-4.915040,9.787371,-8.828435,-1.032665,9.304365,7.722379,-7.153477,-3.607259,-6.009713,-1.161491,4.908519,-9.531794,7.515844,1.914434,0.800080,-2.763294,-1.377966,-3.366906,-4.475769,5.185486,-0.866652,-5.223908,-2.467820,-2.173188,-2.767285,-0.451860,-0.865423,-2.007125,-7.054438,3.054211,-9.094783,1.690322,-6.721990,-3.468541,-6.615860,-1.327261,-4.845888,5.795570,8.709020,9.068329,-2.427510,-2.767219,-4.642590,7.572716,-2.376536,-4.788696,-3.480448,8.894501,-8.966409,4.953941,9.312426,9.366559,9.806861,-6.696090,-9.116629,-2.536757,4.370925,4.056497,4.768437,-4.218643,7.870352,6.118689,-7.447260,-2.060717,-0.444751,-7.518542,9.026752,7.238232,-2.735207,-7.875614,9.641226,-5.073834,4.187713,-5.834608,-6.497672,-0.290450,-8.685580,2.113790,-3.940360,8.751473,-5.858244,-1.779566,2.298371,-0.401935,5.059788,-2.120331,9.332046,-2.183904,-0.655380,7.800040,8.344654,-0.364606,7.276848,9.447767,-1.809914,-4.197902,-5.173300,-7.634312,-8.246705,1.428691,7.931188,-0.055212,-9.487184,7.007901,-7.645190,2.286670,-8.224884,7.985899,-3.651695,7.220985,8.545737,7.269673,-2.545536,0.448433,-4.185694,0.933115,-3.727951,-5.675811,-1.740821,0.784787,-0.455390,-3.229481,-8.604696,3.865695,-5.606584,5.674812,-3.667190,1.873216,0.563943,-8.395276,-6.840358,9.158352,0.868781,4.111505,-8.401739,-1.610046,-4.183304,5.246647,-8.199795,3.910926,-5.333630,-5.576691,9.285043,3.711982,-7.908007,-0.125656,4.546112,4.605633,8.481373,-5.832348,3.123489,-0.220350,-8.275783,0.371780,-7.033309,8.715105,0.669473,-6.936462,-3.041117,3.730416,5.648079,3.194328,-3.718267,8.786833,0.793687,3.112822,6.996605,-4.187660,3.107670,-3.765306,-4.491702,-0.721410,-8.487750,-5.333861,7.402627,3.321453,1.921696,3.732012,-9.814708,6.407563,0.984470,-5.021409,5.497060,-2.928516,-6.510406,-9.140115,-1.980169,4.235756,1.481905,3.178940,8.403512,1.772705,0.085060,-9.902443,-5.550943,-3.274555,-7.078490,-5.968028,9.397872,0.210567,0.658617,3.464216,-3.345315,-3.444005,-7.597510,-0.769956,2.180665,6.994010,4.183324,-1.365080,0.382517,0.774089,4.332906,3.976847,-9.687831,2.418550,7.951312,5.174985,1.570848,4.986683,-5.031562,4.791434,-1.564961,-2.646914,8.338942,0.087033,9.695741,-3.157016,-6.322094,-5.380755,-1.155395,-4.661792,-8.843575,-9.205439,-9.594556,8.956209,1.125034,-8.998219,0.680066,1.191880,7.282091,-9.061136,2.640547,7.927474,-9.907526,-6.520292,1.154933,-4.346541,3.041133,1.712484,0.141572,-7.428569,-3.666345,-0.334514,7.339155,-3.054389,-7.649333,-1.242857,3.224485,7.253173,3.453014,5.164218,-7.095802,-4.895425,-6.201725,3.968208,-2.243347,-8.636945,-8.326947,2.864685,2.776409,-2.336139,-0.010586,9.162109,8.634256,3.294422,2.739804,2.181891,5.919875,2.396662,-1.673287,6.528795,-0.243093,5.427052,-1.572270,-8.108166,-1.728531,1.373082,3.158704,-9.794615,3.651840,4.656924,-0.139215,-7.411920,-6.777649,7.575237,5.091543,-5.979887,6.552471,-4.290206,-3.938366,2.244481,-8.805507,8.323410,8.840059,-9.107057,0.816099,1.596122,-6.803190,4.635210,3.339445,9.188392,1.305382,-0.878734,4.624999,-5.648051,-1.685690,-7.839299,-1.823866,-3.992875,-6.299486,-9.713775,4.466880,1.473014,-2.627231,-4.471756,-6.738528,-5.686782,0.619723,-4.840043,5.868757,-6.646914,-0.030175,-8.887803,-8.828137,-3.734910,0.167763,4.255136,0.270917,3.906701,7.375851,2.771591,0.498202,-2.993820,4.027124,-8.181608,0.647688,-6.150776,6.304165,8.994140,7.253695,-8.467782,-6.249119,6.321338,4.497574,0.396176,1.688385,-7.594023,-6.562108,3.015685,6.117384,2.727486,0.668396,-1.590334,-6.917313,-6.063209,7.661586,6.069481,-8.460852,8.654400,2.636378,4.860389,-8.666998,2.342867,-4.148236,-8.038322,-7.577184,-1.119181,0.647218,5.427487,-6.708795,5.893252,-0.933317,-3.603473,-1.558663,-0.229588,-9.931816,-9.978765,3.285160,-1.770501,-5.744867,5.367843,-4.303981,-1.371326,-7.632428,4.551978,-8.600865,1.467166,0.029273,3.579321,0.160465,6.935853,3.157599,-7.607059,-3.061800,-7.757249,0.053803,2.118749,-0.443874,7.098102,2.998914,2.927912,-9.932428,6.088334,-4.904558,6.724497,-5.555870,-3.652219,-7.526748,1.076972,8.343501,3.107269,9.211602,-7.929102,5.935903,2.817698,-2.701693,-7.081784,7.118961,7.855287,-6.351549,8.345222,5.429333,8.312661,9.787229,-7.777298,-1.866029,2.597610,7.827207,2.835653,-2.756786,1.977428,-9.782894,2.322648,0.011268,2.945851,9.116913,6.469569,-0.865513,-3.696229,0.386105,-6.525555,-9.042348,0.648520,4.133995,-9.194006,6.642389,0.884216,0.191195,3.405828,2.635409,0.842373,-7.093088,7.742229,3.944771,-1.987767,2.437897,-8.348629,-5.963410,3.293746,4.024388,3.033734,9.609009,-1.425381,6.305618,-1.179332,-5.189704,6.098494,-5.784882,-3.315562,-7.490139,-0.504976,5.308565,-2.785196,-6.172442,-3.772490,1.193193,9.919379,-6.838681,-3.778902,9.065382,-5.628951,-4.022174,-4.121709,-1.099968,-9.168926,4.754404,-7.042903,4.825614,1.744210,-0.309047,3.550780,2.523112,9.514312,-7.627515,-9.329664,-2.981004,-8.342073,-1.874669,0.998687,0.894296,-0.230527,-0.595626,3.700549,2.711544,0.055367,-0.399024,6.520754,5.699220,5.678804,-2.232562,-8.446218,-7.241497,3.232148,7.225564,-6.351765,-7.884537,-8.254073,1.677004,4.049304,-4.715226,7.047591,8.201302,-3.174045,7.899728,4.329190,8.976214,-3.118265,-1.890833,3.880128,-2.877677,-1.267058,-2.176610,5.519379,-9.295339,-4.470696,9.644020,-6.187956,-3.316669,-2.306456,-6.501388,-1.715854,3.455759,-9.138530,-1.486025,9.545260,2.465442,-7.309628,-6.256480,6.491354,-1.777240,0.706741,2.529689,-2.470378,6.255722,3.128877,-7.127263,9.331281,-4.116682,1.189251,8.389632,4.744411,-7.821850,-3.171804,4.694810,-9.344055,6.746612,-7.852496,4.761334,8.103236,7.824490,-1.324060,-6.075908,3.665500,8.221641,1.426217,2.248187,5.488755,-2.009075,2.718593,-8.956931,0.797293,2.074293,-8.799185,0.471224,4.696087,4.610122,-7.689705,-1.427182,-3.285575,0.164161,-8.766707,9.370676,-7.698154,-1.589031,7.381104,9.671435,-0.045957,-5.861058,3.871914,-1.659955,-3.838813,6.582021,8.356346,-8.638621,6.178271,-2.019891,4.474852,-9.082623,1.868315,9.064924,6.005871,-5.821800,4.378562,-8.081114,-1.228896,-3.337335,-5.225885,8.437094,7.504515,-6.554166,4.204140,-1.522934,-9.239009,2.020152,6.787659,-8.322791,9.005786,6.407685,-2.730297,-5.333294,-8.196635,1.653542,-7.517209,5.995113,1.770216,-2.402739,-4.161391,9.145788,3.435371,-2.620543,5.326351,1.714734,7.978626,4.835156,9.767176,-3.192443,-4.207280,-7.666260,1.143614,-6.914510,2.059311,5.465744,-3.507781,-4.488819,3.286279,-5.180311,-6.544883,-3.555487,-9.925749,1.029560,0.575033,-6.914569,9.925506,-1.426259,-7.784206,0.025623,2.175618,0.122367,3.771151,-3.963493,-7.372930,8.766436,-2.893213,4.491459,-7.251977,-7.971082,-5.015238,6.835402,-4.512509,-2.044568,1.249134,-8.431076,5.743082,-3.178445,-2.061284,6.674826,9.114916,1.933769,-6.960831,2.664859,9.001875,-3.605333,-7.323069,9.858104,9.267720,2.522636,-8.192483,-7.599116,8.701885,-6.640103,0.820166,-4.998030,5.097843,-8.546944,-0.603863,-6.832148,-2.215614,-7.880980,-0.614959,7.209244,1.471616,-3.047785,-3.653224,6.837239,5.572695,7.550662,-7.012934,-8.397214,3.007166,7.949116,-3.595564,8.263186,7.571893,5.372396,-1.726938,0.757215,2.732628,3.111730,-3.408110,5.602098,-9.879537,-9.166646,-2.657273,-9.120772,-8.726173,-0.125571,6.392832,7.233140,5.814106,7.563011,3.679094,6.953962,-9.979959,-8.253118,-7.806267,6.423445,4.780344,5.176626,-8.931169,4.708196,4.583964,7.307240,-5.527558,3.729046,0.080430,4.035876,-0.802692,7.899556,0.769130,3.013073,9.181426,-7.541763,9.708990,-8.928110,-5.533347,-3.376894,7.772663,-7.599197,-0.614673,9.446448,-3.786442,-8.025210,-4.781658,-6.380361,7.820271,9.675145,-9.098474,9.200637,9.873937,4.775593,-8.166676,3.573198,5.467923,7.468713,-8.910689,2.098643,2.842390,4.259622,6.861065,7.458664,4.984202,3.839359,-1.223359,2.182761,-9.718577,6.108248,-0.194246,9.889514,6.019176,7.679007,5.002595,-8.702911,-2.628683,-4.110810,8.995451,1.670966,-5.316964,-4.660279,9.246632,-5.155673,-3.016080,-2.583584,1.758533,-1.968148,-4.019700,-4.478599,-9.492349,-9.604445,-7.207326,-6.409645,-7.802487,-9.751404,-5.979758,-5.142826,4.033932,-6.831970,-5.364596,-5.781438,-7.150579,-3.181781,4.605175,-6.032201,-5.798300,-7.051543,-6.028019,-7.485746,-6.739656,5.110074,-5.939022,3.457042,3.083302,4.424704,-8.239460,6.837284,9.555522,-9.666857,-5.865504,-4.211134,9.712523,2.761319,-2.311582,8.883511,-0.136444,9.484460,-1.692994,-9.518888,-8.538396,0.583112,-9.540705,9.165210,6.878766,-6.915173,6.696516,-0.032580,5.613851,-2.019901,5.458923,3.410549,-3.297352,-9.394113,0.198242,-6.005909,4.263904,-2.155614,-2.130112,4.509915,8.484231,3.716276,-5.144153,-7.294042,4.560952,3.607320,-8.219241,8.307267,-8.989878,9.837811,-2.710419,6.128211,7.414145,7.481990,-0.868686,7.987663,-6.330208,-3.506432,-5.715197,8.286315,4.064989,8.957058,8.139405,-4.316962,-8.021381,8.842847,-2.779595,-7.330901,-9.108856,2.564808,-6.609269,8.543949,-7.700460,-7.072850,-3.761673,-6.551915,-6.117196,5.668586,-4.357995,1.252490,1.589767,-4.912426,-7.720039,0.196581,-3.475816,3.011543,-0.109115,-1.776012,-8.968909,9.085172,-0.723959,-5.270085,2.966570,-9.014327,9.096312,4.199513,-4.428138,-8.082486,-2.695825,6.996428,3.726465,-0.661454,4.877124,-6.834109,4.145350,-9.712389,4.223458,-8.799932,-6.166885,8.408386,0.602990,-0.579185,-2.560014,-6.719185,2.811526,3.825685,-5.310035,-0.674615,-6.086419,1.243199,-9.566196,7.147060,-8.431933,5.631230,-7.137866,-3.328365,0.495615,5.039554,-4.572999,-2.589586,-4.464764,-0.899380,2.611948,-0.222952,8.711864,6.578001,-6.266900,3.421895,5.584363,4.725763,1.755147,9.065054,6.451943,-5.151107,-7.681953,6.748796,9.564232,9.633088,-4.452278,-9.037394,4.347822,2.560453,1.086919,-1.435027,4.594475,-7.418398,0.604407,1.263174,7.079198,-6.927161,2.075315,-9.550219,2.437931,9.604264,5.492552,3.634158,-4.474692,-0.760961,-5.962917,-8.668135,4.285435,-7.313807,-5.877366,2.035612,-0.911907,7.752652,3.420396,-6.481867,9.751014,-3.588826,1.391147,5.957084,-5.674013,7.700719,-0.148116,2.391468,1.693779,-7.018880,5.263402,6.722786,-6.511809,5.203487,-4.259834,-4.160210,-4.777511,-8.570703,0.493049,5.726075,-1.314215,-6.878870,-1.668576,-3.146789,5.626283,5.658269,-9.967045], dtype = "float32")#candidate|7162|(1920,)|const|float32
call_7161 = relay.TupleGetItem(func_5451_call(relay.reshape(const_7162.astype('float32'), [12, 16, 10])), 1)
call_7163 = relay.TupleGetItem(func_5453_call(relay.reshape(const_7162.astype('float32'), [12, 16, 10])), 1)
output = relay.Tuple([call_7123,call_7129,call_7132,const_7133,call_7161,const_7162,])
output2 = relay.Tuple([call_7124,call_7130,call_7134,const_7133,call_7163,const_7162,])
func_7166 = relay.Function([], output)
mod['func_7166'] = func_7166
mod = relay.transform.InferType()(mod)
output = func_7166()
func_7167 = relay.Function([], output)
mutated_mod['func_7167'] = func_7167
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6811_call = mod.get_global_var('func_6811')
func_6813_call = mutated_mod.get_global_var('func_6813')
call_7168 = func_6811_call()
call_7169 = func_6811_call()
output = relay.Tuple([call_7168,])
output2 = relay.Tuple([call_7169,])
func_7189 = relay.Function([], output)
mod['func_7189'] = func_7189
mod = relay.transform.InferType()(mod)
mutated_mod['func_7189'] = func_7189
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7189_call = mutated_mod.get_global_var('func_7189')
call_7190 = func_7189_call()
output = call_7190
func_7191 = relay.Function([], output)
mutated_mod['func_7191'] = func_7191
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2997_call = mod.get_global_var('func_2997')
func_2998_call = mutated_mod.get_global_var('func_2998')
call_7222 = relay.TupleGetItem(func_2997_call(), 0)
call_7223 = relay.TupleGetItem(func_2998_call(), 0)
output = relay.Tuple([call_7222,])
output2 = relay.Tuple([call_7223,])
func_7233 = relay.Function([], output)
mod['func_7233'] = func_7233
mod = relay.transform.InferType()(mod)
mutated_mod['func_7233'] = func_7233
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7233_call = mutated_mod.get_global_var('func_7233')
call_7234 = func_7233_call()
output = call_7234
func_7235 = relay.Function([], output)
mutated_mod['func_7235'] = func_7235
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1972_call = mod.get_global_var('func_1972')
func_1973_call = mutated_mod.get_global_var('func_1973')
call_7247 = relay.TupleGetItem(func_1972_call(), 0)
call_7248 = relay.TupleGetItem(func_1973_call(), 0)
output = relay.Tuple([call_7247,])
output2 = relay.Tuple([call_7248,])
func_7249 = relay.Function([], output)
mod['func_7249'] = func_7249
mod = relay.transform.InferType()(mod)
mutated_mod['func_7249'] = func_7249
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7249_call = mutated_mod.get_global_var('func_7249')
call_7250 = func_7249_call()
output = call_7250
func_7251 = relay.Function([], output)
mutated_mod['func_7251'] = func_7251
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7233_call = mod.get_global_var('func_7233')
func_7235_call = mutated_mod.get_global_var('func_7235')
call_7258 = relay.TupleGetItem(func_7233_call(), 0)
call_7259 = relay.TupleGetItem(func_7235_call(), 0)
func_2401_call = mod.get_global_var('func_2401')
func_2403_call = mutated_mod.get_global_var('func_2403')
call_7266 = relay.TupleGetItem(func_2401_call(), 0)
call_7267 = relay.TupleGetItem(func_2403_call(), 0)
output = relay.Tuple([call_7258,call_7266,])
output2 = relay.Tuple([call_7259,call_7267,])
func_7274 = relay.Function([], output)
mod['func_7274'] = func_7274
mod = relay.transform.InferType()(mod)
mutated_mod['func_7274'] = func_7274
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7274_call = mutated_mod.get_global_var('func_7274')
call_7275 = func_7274_call()
output = call_7275
func_7276 = relay.Function([], output)
mutated_mod['func_7276'] = func_7276
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2147_call = mod.get_global_var('func_2147')
func_2149_call = mutated_mod.get_global_var('func_2149')
call_7286 = relay.TupleGetItem(func_2147_call(), 0)
call_7287 = relay.TupleGetItem(func_2149_call(), 0)
func_2510_call = mod.get_global_var('func_2510')
func_2512_call = mutated_mod.get_global_var('func_2512')
const_7300 = relay.const([4.093104,-6.490244,-6.023897,-7.391329,7.772478,5.586103,-1.154121,-3.426069,0.724613,8.554758,5.440768,-7.921471,2.158824,-1.170495,8.199226,5.853303,-8.811715,-1.754256,-2.814856,7.297416,1.217974,7.059769,3.986742,2.286878,-0.636274,-7.400730,-6.671365,9.275969,-5.766670,8.629598,-7.862079,-9.721381,-2.849751,-4.228195,-9.952854,-7.105818,-4.802396,1.005149,9.322397,-0.060876,-9.438800,1.093900,6.919486,-2.129941,-6.573170,6.819920,-6.729398,-3.689456,-1.237982,4.108903,-1.453330,6.675646,4.928446,-6.715953,5.252788,-4.362100,-7.232642,-3.131319,4.982965,3.497564,-9.706250,-6.694827,-7.575953,4.029269,4.972675,4.533029,-5.968075,2.573193,-1.789096,-8.051177,-8.677489,3.019799,9.745803,3.768668,-5.237882,-2.940654,4.583291,3.283543,2.949223,8.028770,7.270110,9.036287,6.475173,4.666274,-8.728198,8.043554,5.288265,9.941407,-4.952256,5.074135,8.659903,-8.741011,-2.188179,3.281031,-0.037380,5.196819,0.059169,-7.234089,3.541184,-1.491126,7.243052,-5.812416,-8.326373,3.719530,-5.027035,4.282740,4.861058,7.572249,2.452579,2.812930,1.956917,1.318244,4.728091,2.572470,-7.525673,2.474997,8.833450,-8.792898,4.618007,-2.857955,-6.280772,-9.314770,1.015696,0.135609,-8.023052,3.145843,7.681514,-0.737869,-0.107870,6.056420,-2.276014,-5.174459,3.815669,5.670631,3.827590,-6.874921,-7.740514,7.834713,-8.154899,-0.255736,5.609933,-5.207652,6.325668,-9.938933,-2.333817,-6.703007,-9.635677,-3.526000,4.607904,-0.946868,-6.697320,-8.533217,3.136715,-9.561911,-5.493469,-8.399359,-0.694494,7.833090,-1.228682,4.066233,9.637462,4.176216,7.788576,6.374179,1.939638,2.605965,7.205869,-5.980087,5.331793,-9.630798,-2.183179,9.998532,-4.564048,-5.967552,-6.134326,4.811964,0.292178,9.925124,4.403597,1.332879,5.248572,-0.582204,-0.160637,6.158214,7.376020,7.416095,7.275243,1.509630,1.337722,-9.908700,8.499032,-1.438103,-5.479548,2.790023,-7.696689,-4.475003,5.217527,-2.349581,-7.933183,1.498483,-4.809411,6.803473,-0.069695,6.572651,-6.110211,9.629819,4.470515,-9.762686,-3.967441,2.764110,-2.801061,-2.925534,-2.991891,8.871648,-2.084533,1.971986,7.317376,-2.530007,2.699696,-1.601897,1.651285,0.894832,5.373633,-9.930791,-6.209996,-8.254563,-9.508214,-8.737021,-1.152415,3.130449,1.087365,2.883791,7.631711,-7.834936,9.352378,-6.174221,-7.901145,4.932844,9.266404,2.669151,-9.462342,-2.003711,-0.210664,4.110676,-9.229095,-1.914103,4.225799,-4.497586,1.263835,1.868205,1.127485,-7.221745,-1.790018,6.860804,9.666808,5.311113,8.026411,-6.125938,-0.666726,-7.673018,-3.738073,-7.472920,-9.428962,-1.981916,3.845375,-7.557833,6.917028,9.885666,-3.142267,8.999814,2.855876,8.307200,-3.791020,4.689790,-3.695041,3.417259,-2.917754,-0.973973,4.386240,-6.143697,5.093277,3.566777,8.743307,-6.588214,-4.840964,-1.447720,-1.314973,-5.937266,2.872003,9.410474,2.634534,8.886476,4.719447,-7.726964,-2.790363,3.405117,5.321974,4.455357,6.020864,-1.835245,8.036887,-0.783212,8.194046,2.722305,-7.881614,-7.494091,7.123308,3.200164,8.645011,9.927553,-1.353657,4.171040,-2.956120,6.040546,-5.115847,3.139235,-8.252601,6.812042,-0.331146,-9.604444,-7.721697,-6.848990,-1.841027,-0.251653,6.624820,-2.186922,-6.566856,2.090129,-3.939985,8.741207,-7.769415,-4.480547,-0.523800,-2.716376,-2.452937,4.563555,9.933632,1.374223,2.569376,-9.075805,5.104853,-3.685386,-5.698567,-5.419849,-9.410595,-6.402943,-1.608015,9.011985,-0.010206,5.337871,0.812550,7.378238,-5.242993,-1.504029,-9.153268,-4.816513,7.886794,-1.562119,-7.571910,-3.645627,-5.510631,-4.854911,-9.743359,9.667910,8.837175,9.422404,2.408449,-3.165875,6.454115,0.389989,3.851545,-3.921461,-8.354553,-2.622906,3.939593,-6.973797,3.514070,3.278070,-8.803175,9.795694,0.049302,-6.870585,7.377128,0.824076,-7.980073,7.161614,-1.058445,-0.979556,-0.907789,-9.461917,-5.029160,1.420469,5.375583,2.574144,4.308232,9.482791,3.522256,7.121471,-8.450126,-1.956799,1.544980,-9.312163,5.337575,-9.159553,-0.772019,3.600310,3.963272,-1.094526,1.351207,3.518129,-0.999231,-1.983341,-6.050037,0.874028,-8.158317,1.538798,2.944326,2.637868,3.749568,-4.746310,-5.077752,-3.456649,-1.896363,-8.251399,-2.349690,-2.460968,4.344428,-7.297632,-6.073384,-1.399526,7.170526,-3.767375,-6.503189,6.040885,5.109079,1.302421,-2.953828,-8.007574,-7.976688,-6.835334,-5.805224,-0.990939,6.369633,6.059529,-0.759459,-1.924066,-2.616449,-7.520504,7.354673,-4.716953,5.279491,-3.898901,8.622039,-2.902676,-2.477270,-7.990347,8.172795,-6.625254,9.209916,-9.617159,5.208854,-8.896064,9.264478,-8.105627,-8.445773,9.267394,-3.576784,9.437671,-4.031949,-6.031585,9.711947,6.983591,3.029967,6.864664,-0.335862,-0.112212,6.200338,4.281374,1.136200,9.749647,-2.717424,5.948998,-5.765271,-1.844329,-2.195291,2.853333,7.505260,-8.487087,-8.418848,9.204208,1.072978,8.836831,-3.148253,2.764792,-1.020583,-3.241404,4.936809,-1.063891,-0.693666,3.867481,7.070603,-1.542966,9.012195,2.786398,8.316582,-5.727567,-0.434513,3.398646,-8.068763,-8.442080,4.642473,7.628904,-0.591947,-1.223427,-6.227035,4.999206,0.391642,-6.439336,-1.526128,-8.514707,8.489113,-5.844757,-2.951377,-0.716527,-0.095067,-4.851719,3.297599,-1.367023,0.367278,3.581792,-9.634913,3.919696,-6.395153,2.473485,0.543163,-8.183506,-3.020776,-0.249176,-5.066141,-4.781611,0.021838,-6.340600,-6.478550,-9.421124,-1.450059,-5.003365,-7.888377,-1.408396,3.612858,6.438749,8.074920,4.493172,-9.577616,9.378958,3.029556,9.734802,-0.174273,6.808041,-6.065029,-1.693763,0.035995,-5.093320,-8.247921,6.452552,-6.101139,-2.651782,-0.187610,6.180203,3.024461,-6.303377,-6.299477,8.631711,5.123413,-3.700117,-9.185468,-5.478490,1.761176,5.229262,9.525256,8.901439,6.569286,-1.718445,-0.193201,-3.899766,-1.287999,-8.801451,-0.297874,8.914574,-0.171221,9.291992,-9.227459,6.696122,-1.417095,8.720699,3.808544,1.401237,-9.768974,-3.498838,-2.921853,-3.359510,8.261401,4.672523,-3.659454,-3.051392,-4.259263,8.569151,9.902898,-2.583968,5.276137,-1.206024,9.407710,7.165257,2.965479,-7.160085,-2.562844,-1.736376,5.007026,0.782190,-7.064114,-4.597897,1.016253,1.501010,-8.339894,8.298568,8.104264,-8.667527,0.567345,-7.480994,-2.479112,-7.376686,6.076531,-1.933021,4.652039,-5.220240,0.534705,-6.188973,-4.733391,-0.157876,-6.593202,-2.596329,3.231060,-5.901117,-3.813400,9.418514,5.330157,2.918838,-5.125041,9.556819,6.678699,4.658521,-3.601706,3.816090,4.709364,-6.351186,1.182124,8.913167,8.622170,-2.998383,-6.040358,-4.358553,5.714836,-0.897202,-2.991483,0.391582,4.657134,-9.854888,4.937366,-0.674086,7.090992,-6.380086,8.364606,9.545005,1.287209,-7.425338,1.625585,2.823751,-2.895560,-1.534695,2.775308,-2.659693,-4.960780,-6.482791,-1.973763,-0.949858,1.045995,3.734446,-1.778719,-1.410325,-9.258537,9.514596,9.692191,-2.643536,-4.448469,-5.232946,9.409608,-2.130605,-5.479001,4.927694,8.647068,-8.134668,-3.887603,9.416496,4.596320,-4.149126,-2.273331,7.042681,-4.657607,0.043802,2.877130,-0.515819,-5.514143,-9.207338,0.741602,-6.136378,-3.251799,-7.963839,-2.132215,6.640917,3.095805,7.874266], dtype = "float32")#candidate|7300|(720,)|const|float32
call_7299 = relay.TupleGetItem(func_2510_call(relay.reshape(const_7300.astype('float32'), [180, 4])), 1)
call_7301 = relay.TupleGetItem(func_2512_call(relay.reshape(const_7300.astype('float32'), [180, 4])), 1)
output = relay.Tuple([call_7286,call_7299,const_7300,])
output2 = relay.Tuple([call_7287,call_7301,const_7300,])
func_7308 = relay.Function([], output)
mod['func_7308'] = func_7308
mod = relay.transform.InferType()(mod)
output = func_7308()
func_7309 = relay.Function([], output)
mutated_mod['func_7309'] = func_7309
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1428_call = mod.get_global_var('func_1428')
func_1429_call = mutated_mod.get_global_var('func_1429')
call_7319 = relay.TupleGetItem(func_1428_call(), 3)
call_7320 = relay.TupleGetItem(func_1429_call(), 3)
func_3529_call = mod.get_global_var('func_3529')
func_3530_call = mutated_mod.get_global_var('func_3530')
call_7323 = relay.TupleGetItem(func_3529_call(), 1)
call_7324 = relay.TupleGetItem(func_3530_call(), 1)
func_4204_call = mod.get_global_var('func_4204')
func_4206_call = mutated_mod.get_global_var('func_4206')
call_7328 = relay.TupleGetItem(func_4204_call(), 0)
call_7329 = relay.TupleGetItem(func_4206_call(), 0)
func_4947_call = mod.get_global_var('func_4947')
func_4949_call = mutated_mod.get_global_var('func_4949')
const_7350 = relay.const([-7.885896,9.149666,-3.880108,-0.558520,-5.770575,3.422132,3.098997,-6.707567,7.502345,6.657193,-1.180151,-4.512917,-5.946599,3.621005,-9.440763,3.679372,-4.310119,9.144623,-8.245887,-8.026414,2.517687,-1.675850,8.301547,6.733762,2.980738,3.033664,0.601154,9.104715,-4.010802,1.166672,-1.235523,8.767126,6.780710,9.630971,-3.902685,-1.476130,0.407544,7.202406,-8.946177,3.285255,2.212279,2.561741,-0.326935,-2.793659,9.368933,0.679481,-4.707547,-5.910964,9.471617,7.840978,-6.798537,-1.626785,-3.883412,-0.399934,-1.222385,-6.971474,-3.978371,-3.214087,-2.616770,1.757924,-6.948403,4.384796,-0.324405,-5.226016,-6.841723,8.085215,-6.324672,-7.299321,6.516928,0.931347,7.193572,9.716936,5.382568,-8.305517,-4.007283,3.644764,9.032089,9.899829,5.895975,2.942709,1.358775,-9.096366,-2.995755,-0.550585,9.661458,-5.498741,3.011951,-8.395994,1.275741,2.912522,8.857556,4.500301,1.195476,-5.193419,-1.794130,-9.222937,-7.290403,4.225750,-2.752843,9.725318,5.700489,-5.242108,0.577594,9.587077,2.873632,5.328128,-0.772459,6.069985,6.542785,-8.682208,-8.656454,-8.586679,9.453650,0.938016,3.760764,1.913061,-0.247915,-5.761317,-6.712751,3.154555,-5.901148,-4.074859,0.318748,-9.542429,8.601521,-7.493540,-7.577584,9.509656,8.391334,3.831476,4.531322,4.923138,-3.911852,5.355217,-2.176631,-2.572915,6.552221,9.537152,0.063246,-5.935844,-3.470060,-2.719472,0.734152,-4.850655,-2.911337,9.221218,-4.544337,-9.646637,-3.544413,8.122191,-0.171085,7.520804,6.000294,-5.165747,6.252306,6.529943,7.546483,-1.368177,6.927978,8.100415,-7.592508,6.871814,-1.262292,3.692481,-0.536911,1.399323,-6.581858,-9.959407,7.078044,-5.519417,2.233359,-6.253578,6.649317,9.048926,6.600545,1.791787,-7.382474,-9.825576,-2.086281,0.220252,-7.576342,7.767555,-9.544029,-7.680456,-3.774777,-0.849991,3.570107,-1.458251,3.392543,3.345880,7.334689,-4.724993,-5.860788,-3.304375,-5.918964,3.251712,-1.421464,1.410293,-4.216287,-5.115870,3.275681,9.444239,6.227411,5.852564,8.828223,1.206492,7.046290,-6.851190,-0.712309,-1.835285,0.685033,1.568974,-7.698459,-5.169488,9.973669,6.272664,3.687730,0.777466,3.670529,4.581100,3.717950,1.510548,-1.454670,-4.104225,-8.437041,0.458326,-0.760508,2.565598,0.176230,-5.857509,-3.252590,3.260278,-2.524623,-4.149901,-1.527391,-6.469659,-0.819284,-9.007341,-6.194049,9.899226,-7.279336,-9.891137,6.178554,7.295217,5.869955,4.378157,-6.512754,7.531225,0.824373,-1.973324,5.349780,-0.627884,-7.830593,-3.548938,1.020416,2.573001,-2.687868,0.440936,1.312035,-2.664950,-7.944322,-9.605853,5.652167,0.078748,1.698676,-3.553840,-9.885276,-1.764196,7.930176,9.140835,-2.461502,-9.681688,-7.073600,-8.646169,1.299504,-7.288130,9.087054,-2.938978,-0.073453,9.770435,1.262738,-6.844684,-6.927544,-2.828427,2.398661,5.812044,-6.046094,-5.875998,1.235879,-2.721541,-5.707566,-5.136048,5.813232,-6.294896,-7.881104,6.766661,2.902059,6.317444,-2.559602,2.322290,-6.166682,9.602703,1.091013,9.878725,-7.555920,3.225216,5.697833,-2.959223,-1.287055,-5.162117,9.343328,-0.411663,-4.852198,-7.198808,3.473161,-8.061733,-1.639709,-6.025040,-6.758325,-7.199662,3.234658,3.240153,2.484618,3.521666,-6.819139,-8.625105,7.190492,-1.489062,2.426220,-2.011806,-8.766446,-5.042123,-1.552896,-6.625174,-4.595983,5.075449,-0.301479,-5.810995,2.600649,6.516563,-1.761316,8.960284,-3.861940,8.990738,-5.785575,-8.508234,-2.201146,-0.308737,9.605473,6.447845,3.219498,2.307759,2.150720,-1.598639,4.806538,-8.088148,9.750579,5.215536,7.181670,4.962464,-4.540247,0.896915,-3.655257,7.759308,-3.232921,-7.016534,-4.640069,-2.251679,0.103054,-1.878594,-0.066615,-8.392086,-3.780846,-7.102731,-4.350957,3.013956,5.975665,-6.057387,-4.438500,-5.959740,-2.459462,4.401495,-0.656069,1.262317,-8.260813,1.653867,-5.749417,-8.608376,6.417321,1.468661,4.854392,4.215017,6.634809,-5.209671,0.310047,-3.180994,7.720084,-2.541668,8.502667,-9.638886,0.592710,2.878154,8.803246,-3.067398,-8.656547,3.273238,6.747842,-7.627492,-2.961555,-9.653488,2.870549,9.716583,-6.643778,4.192998,2.265874,9.963572,8.763013,5.721547,2.856411,7.882511,0.535220,9.448379,7.658248,8.818018,-4.884700,-0.500295,-9.034331,4.898682,0.088638,3.546374,-1.880862,-4.787783,8.837160,-9.852642,2.321099,-3.339384,-9.318127,4.994740,2.705558,9.122776,0.466035,-6.717081,-0.084308,-3.004321,-2.028323,-7.593322,3.497561,-7.900143,-9.598552,9.789600,-1.523238,-2.034872,4.721036,7.217297,-9.700199,-8.977605,-6.949466,-3.664108,-0.075935,-8.382248,-2.830591,9.723386,8.044457,-5.995896,1.044340,-9.753317,9.328707,-6.593913,-8.922440,3.681222,6.361762,-5.460828,-5.068350,-7.529103,-7.146122,2.216253,3.855524,-3.833675,-5.218934,5.410944,-5.251944,-4.210817,-1.590761,-1.333124,-1.553055,-3.320666,5.961657,2.310416,8.239569,1.202781,-2.598569,-1.080204,8.692576,2.479244,5.140093,7.568386,-4.750171,6.576098,9.430851,1.899335,9.033417,2.100329,7.763445,4.050267,-1.840211,-8.385234,5.300774,-8.235817,4.776036,5.680865,-2.306458,-4.841371,-0.591797,-2.763578,1.648531,2.565856,4.202826,0.756508,1.907745,1.589419,2.318847,-4.122338,-4.775778,-7.662756,-7.020737,-8.144228,-4.079151,8.681439,-9.831576,-3.640051,-4.083599,-3.407216,-1.424693,-3.845092,-4.669129,9.982511,6.981369,6.433474,8.821910,9.927189,8.145889,-3.620353,-2.059398,-9.558224,4.376315,-7.280257,-3.372747,2.969584,-6.226346,-0.661320,9.471183,8.190604,5.807987,-8.092744,-4.606406,0.387879,1.736984,4.758091,7.505199,-0.799812,6.615763,-2.295451,-9.531611,-7.450849,8.258227,2.977483,7.448077,8.710732,5.231727,0.631778,8.393853,3.852919,-6.406816,-1.498275,-8.718917,8.193985,2.230611,3.703620,2.306744,4.385333,-3.714065,-1.926791,7.902544,8.006503,9.483577,-7.999648,7.024940,-3.660342,-8.462454,7.374216,2.223290,-2.843328,1.994637,-9.948762,-9.801534,5.269953,5.342904,-4.864224,-0.660793,0.627873,-8.655085,-7.733293,-7.785790,4.893774,-7.345901,5.606655,8.379853,-3.257104,-6.812993,-5.758406,-8.630336,8.983434,0.026918,-4.724133,6.925026,9.332496,2.897251,3.151315,-6.069828,2.519151,-3.052704,2.216441,-0.249139,-2.487017,-4.497920,7.456491,-6.858965,-0.478159,-4.692407,7.823854,4.452860,3.843818,3.889600,-8.943808,-8.037714,-9.505443,-7.404018,-1.846007,1.014128,6.625815,7.429339,5.558109,-1.412813,0.906786,-0.848647,-2.997695,-8.550678,9.668483,3.197559,4.704701,5.140427,-7.120261,1.932487,-0.601727,7.756660,8.509444,0.966673,-8.874808,-4.435095,-9.999245,2.232436,-6.960998,8.580319,8.505469,7.962049,-3.401148,-9.110150,3.592532,9.741526,-9.052505,2.379205,-0.652483,-3.271829,-8.798441,-1.985272,-8.813149,-7.608697,8.913216,-0.225220,-2.185099,-7.688680,-4.201350,2.925898,-0.137246,1.529575,1.808664,-1.651743,8.129001,-9.660444,-8.115001,1.970366,-8.555342,4.899049,1.142785,-2.599980,-8.554343,-1.496286,4.814121,-3.255114,-8.538017,4.255074,-3.655413,8.839742,-6.254169,-7.078523,5.726171,2.850898,2.234180,3.243961,-4.838550,-7.612552,-2.109006,5.593851,-4.786183,-4.893439,-4.631957,-7.074552,9.638579,-6.070885,5.706091,-8.588754,-9.949782,8.986555,1.790016,-5.730327,-1.078246,-3.663819,6.984895,4.574888,5.509357,0.160771,4.856734,-5.347113,5.515945,-9.084354,8.940375,0.058846,9.832701,3.689690,-4.452868,-8.880803,-9.279854,5.572156,0.132982,6.181751,-9.503603,-6.940600,-3.277501,8.757890,8.919076,0.457579,-0.037433,0.983941,2.363079,-4.016366,-0.248043], dtype = "float64")#candidate|7350|(756,)|const|float64
call_7349 = relay.TupleGetItem(func_4947_call(relay.reshape(const_7350.astype('float64'), [7, 9, 12])), 0)
call_7351 = relay.TupleGetItem(func_4949_call(relay.reshape(const_7350.astype('float64'), [7, 9, 12])), 0)
output = relay.Tuple([call_7319,call_7323,call_7328,call_7349,const_7350,])
output2 = relay.Tuple([call_7320,call_7324,call_7329,call_7351,const_7350,])
func_7354 = relay.Function([], output)
mod['func_7354'] = func_7354
mod = relay.transform.InferType()(mod)
output = func_7354()
func_7355 = relay.Function([], output)
mutated_mod['func_7355'] = func_7355
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5493_call = mod.get_global_var('func_5493')
func_5494_call = mutated_mod.get_global_var('func_5494')
call_7426 = relay.TupleGetItem(func_5493_call(), 0)
call_7427 = relay.TupleGetItem(func_5494_call(), 0)
output = call_7426
output2 = call_7427
func_7471 = relay.Function([], output)
mod['func_7471'] = func_7471
mod = relay.transform.InferType()(mod)
output = func_7471()
func_7472 = relay.Function([], output)
mutated_mod['func_7472'] = func_7472
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5493_call = mod.get_global_var('func_5493')
func_5494_call = mutated_mod.get_global_var('func_5494')
call_7476 = relay.TupleGetItem(func_5493_call(), 0)
call_7477 = relay.TupleGetItem(func_5494_call(), 0)
output = relay.Tuple([call_7476,])
output2 = relay.Tuple([call_7477,])
func_7480 = relay.Function([], output)
mod['func_7480'] = func_7480
mod = relay.transform.InferType()(mod)
output = func_7480()
func_7481 = relay.Function([], output)
mutated_mod['func_7481'] = func_7481
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5573_call = mod.get_global_var('func_5573')
func_5574_call = mutated_mod.get_global_var('func_5574')
call_7490 = relay.TupleGetItem(func_5573_call(), 0)
call_7491 = relay.TupleGetItem(func_5574_call(), 0)
output = relay.Tuple([call_7490,])
output2 = relay.Tuple([call_7491,])
func_7492 = relay.Function([], output)
mod['func_7492'] = func_7492
mod = relay.transform.InferType()(mod)
mutated_mod['func_7492'] = func_7492
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7492_call = mutated_mod.get_global_var('func_7492')
call_7493 = func_7492_call()
output = call_7493
func_7494 = relay.Function([], output)
mutated_mod['func_7494'] = func_7494
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7545 = relay.const([[[-10,-5,-8,6,4,5,-2,8,3],[-4,10,10,1,-4,10,8,-4,2]],[[-3,5,8,3,-1,9,8,10,1],[4,2,2,5,-2,5,3,4,5]],[[2,-2,-8,-4,6,8,5,-1,10],[-1,-5,6,-8,-8,-10,4,9,-2]],[[7,-7,1,-2,7,-7,7,2,10],[-4,10,1,-2,-10,3,2,-10,-4]],[[-4,1,-10,-8,6,-2,9,-5,7],[9,-2,-4,2,4,-5,-5,5,-10]],[[-4,-1,-10,7,9,10,-7,-7,9],[2,7,5,2,-1,-8,1,1,2]],[[-7,5,-10,-3,-6,-4,4,-8,1],[1,5,-2,4,7,-7,9,8,9]],[[-8,3,-5,-1,-2,-9,4,8,-1],[4,-4,-1,8,3,1,-3,8,-5]],[[2,1,-6,-9,-10,2,7,-7,5],[-2,-7,8,-8,-8,-7,-9,-10,-7]],[[1,-9,-4,2,-4,-2,6,-1,-10],[-10,-2,-5,1,9,4,-10,-3,6]],[[1,-9,-7,-6,-7,-6,8,5,4],[10,-6,9,-7,7,-1,5,10,-6]],[[7,10,9,-8,1,6,5,-1,6],[-1,10,-3,10,2,2,-7,-8,-2]]], dtype = "uint64")#candidate|7545|(12, 2, 9)|const|uint64
var_7546 = relay.var("var_7546", dtype = "uint64", shape = (12, 2, 9))#candidate|7546|(12, 2, 9)|var|uint64
bop_7547 = relay.multiply(const_7545.astype('uint64'), relay.reshape(var_7546.astype('uint64'), relay.shape_of(const_7545))) # shape=(12, 2, 9)
output = bop_7547
output2 = bop_7547
func_7593 = relay.Function([var_7546,], output)
mod['func_7593'] = func_7593
mod = relay.transform.InferType()(mod)
mutated_mod['func_7593'] = func_7593
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7594 = relay.var("var_7594", dtype = "uint64", shape = (12, 2, 9))#candidate|7594|(12, 2, 9)|var|uint64
func_7593_call = mutated_mod.get_global_var('func_7593')
call_7595 = func_7593_call(var_7594)
output = call_7595
func_7596 = relay.Function([var_7594], output)
mutated_mod['func_7596'] = func_7596
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5421_call = mod.get_global_var('func_5421')
func_5422_call = mutated_mod.get_global_var('func_5422')
call_7634 = relay.TupleGetItem(func_5421_call(), 0)
call_7635 = relay.TupleGetItem(func_5422_call(), 0)
output = relay.Tuple([call_7634,])
output2 = relay.Tuple([call_7635,])
func_7643 = relay.Function([], output)
mod['func_7643'] = func_7643
mod = relay.transform.InferType()(mod)
output = func_7643()
func_7644 = relay.Function([], output)
mutated_mod['func_7644'] = func_7644
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1428_call = mod.get_global_var('func_1428')
func_1429_call = mutated_mod.get_global_var('func_1429')
call_7710 = relay.TupleGetItem(func_1428_call(), 1)
call_7711 = relay.TupleGetItem(func_1429_call(), 1)
var_7712 = relay.var("var_7712", dtype = "int8", shape = (16, 7, 12))#candidate|7712|(16, 7, 12)|var|int8
bop_7713 = relay.multiply(call_7710.astype('uint64'), relay.reshape(var_7712.astype('uint64'), relay.shape_of(call_7710))) # shape=(16, 7, 12)
bop_7716 = relay.multiply(call_7711.astype('uint64'), relay.reshape(var_7712.astype('uint64'), relay.shape_of(call_7711))) # shape=(16, 7, 12)
func_3937_call = mod.get_global_var('func_3937')
func_3939_call = mutated_mod.get_global_var('func_3939')
call_7735 = relay.TupleGetItem(func_3937_call(), 1)
call_7736 = relay.TupleGetItem(func_3939_call(), 1)
output = relay.Tuple([bop_7713,call_7735,])
output2 = relay.Tuple([bop_7716,call_7736,])
func_7757 = relay.Function([var_7712,], output)
mod['func_7757'] = func_7757
mod = relay.transform.InferType()(mod)
mutated_mod['func_7757'] = func_7757
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7758 = relay.var("var_7758", dtype = "int8", shape = (16, 7, 12))#candidate|7758|(16, 7, 12)|var|int8
func_7757_call = mutated_mod.get_global_var('func_7757')
call_7759 = func_7757_call(var_7758)
output = call_7759
func_7760 = relay.Function([var_7758], output)
mutated_mod['func_7760'] = func_7760
mutated_mod = relay.transform.InferType()(mutated_mod)
func_944_call = mod.get_global_var('func_944')
func_945_call = mutated_mod.get_global_var('func_945')
call_7762 = relay.TupleGetItem(func_944_call(), 2)
call_7763 = relay.TupleGetItem(func_945_call(), 2)
func_2025_call = mod.get_global_var('func_2025')
func_2027_call = mutated_mod.get_global_var('func_2027')
call_7771 = func_2025_call()
call_7772 = func_2025_call()
output = relay.Tuple([call_7762,call_7771,])
output2 = relay.Tuple([call_7763,call_7772,])
func_7773 = relay.Function([], output)
mod['func_7773'] = func_7773
mod = relay.transform.InferType()(mod)
output = func_7773()
func_7774 = relay.Function([], output)
mutated_mod['func_7774'] = func_7774
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2087_call = mod.get_global_var('func_2087')
func_2088_call = mutated_mod.get_global_var('func_2088')
call_7814 = func_2087_call()
call_7815 = func_2087_call()
output = relay.Tuple([call_7814,])
output2 = relay.Tuple([call_7815,])
func_7841 = relay.Function([], output)
mod['func_7841'] = func_7841
mod = relay.transform.InferType()(mod)
mutated_mod['func_7841'] = func_7841
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7841_call = mutated_mod.get_global_var('func_7841')
call_7842 = func_7841_call()
output = call_7842
func_7843 = relay.Function([], output)
mutated_mod['func_7843'] = func_7843
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5994_call = mod.get_global_var('func_5994')
func_5996_call = mutated_mod.get_global_var('func_5996')
call_7867 = relay.TupleGetItem(func_5994_call(), 1)
call_7868 = relay.TupleGetItem(func_5996_call(), 1)
output = call_7867
output2 = call_7868
func_7896 = relay.Function([], output)
mod['func_7896'] = func_7896
mod = relay.transform.InferType()(mod)
output = func_7896()
func_7897 = relay.Function([], output)
mutated_mod['func_7897'] = func_7897
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7946 = relay.var("var_7946", dtype = "float64", shape = (10, 3, 1))#candidate|7946|(10, 3, 1)|var|float64
uop_7947 = relay.cosh(var_7946.astype('float64')) # shape=(10, 3, 1)
var_7952 = relay.var("var_7952", dtype = "float64", shape = (10, 3, 5))#candidate|7952|(10, 3, 5)|var|float64
bop_7953 = relay.logical_xor(var_7946.astype('uint32'), var_7952.astype('uint32')) # shape=(10, 3, 5)
func_4997_call = mod.get_global_var('func_4997')
func_4998_call = mutated_mod.get_global_var('func_4998')
call_7958 = func_4997_call()
call_7959 = func_4997_call()
func_3025_call = mod.get_global_var('func_3025')
func_3027_call = mutated_mod.get_global_var('func_3027')
call_7963 = relay.TupleGetItem(func_3025_call(), 0)
call_7964 = relay.TupleGetItem(func_3027_call(), 0)
bop_7979 = relay.subtract(uop_7947.astype('uint32'), relay.reshape(var_7946.astype('uint32'), relay.shape_of(uop_7947))) # shape=(10, 3, 1)
func_3025_call = mod.get_global_var('func_3025')
func_3027_call = mutated_mod.get_global_var('func_3027')
call_7987 = relay.TupleGetItem(func_3025_call(), 0)
call_7988 = relay.TupleGetItem(func_3027_call(), 0)
func_3259_call = mod.get_global_var('func_3259')
func_3260_call = mutated_mod.get_global_var('func_3260')
call_7999 = relay.TupleGetItem(func_3259_call(), 0)
call_8000 = relay.TupleGetItem(func_3260_call(), 0)
func_2204_call = mod.get_global_var('func_2204')
func_2207_call = mutated_mod.get_global_var('func_2207')
call_8008 = relay.TupleGetItem(func_2204_call(relay.reshape(call_7987.astype('int8'), [16, 7, 12])), 1)
call_8009 = relay.TupleGetItem(func_2207_call(relay.reshape(call_7987.astype('int8'), [16, 7, 12])), 1)
func_5284_call = mod.get_global_var('func_5284')
func_5286_call = mutated_mod.get_global_var('func_5286')
call_8017 = func_5284_call()
call_8018 = func_5284_call()
func_5493_call = mod.get_global_var('func_5493')
func_5494_call = mutated_mod.get_global_var('func_5494')
call_8026 = relay.TupleGetItem(func_5493_call(), 1)
call_8027 = relay.TupleGetItem(func_5494_call(), 1)
var_8040 = relay.var("var_8040", dtype = "bool", shape = (168, 8))#candidate|8040|(168, 8)|var|bool
bop_8041 = relay.floor_mod(call_8017.astype('float32'), relay.reshape(var_8040.astype('float32'), relay.shape_of(call_8017))) # shape=(168, 8)
bop_8044 = relay.floor_mod(call_8018.astype('float32'), relay.reshape(var_8040.astype('float32'), relay.shape_of(call_8018))) # shape=(168, 8)
uop_8056 = relay.log(uop_7947.astype('float32')) # shape=(10, 3, 1)
output = relay.Tuple([bop_7953,call_7958,call_7963,bop_7979,call_7987,call_7999,call_8008,call_8026,bop_8041,uop_8056,])
output2 = relay.Tuple([bop_7953,call_7959,call_7964,bop_7979,call_7988,call_8000,call_8009,call_8027,bop_8044,uop_8056,])
func_8058 = relay.Function([var_7946,var_7952,var_8040,], output)
mod['func_8058'] = func_8058
mod = relay.transform.InferType()(mod)
var_8059 = relay.var("var_8059", dtype = "float64", shape = (10, 3, 1))#candidate|8059|(10, 3, 1)|var|float64
var_8060 = relay.var("var_8060", dtype = "float64", shape = (10, 3, 5))#candidate|8060|(10, 3, 5)|var|float64
var_8061 = relay.var("var_8061", dtype = "bool", shape = (168, 8))#candidate|8061|(168, 8)|var|bool
output = func_8058(var_8059,var_8060,var_8061,)
func_8062 = relay.Function([var_8059,var_8060,var_8061,], output)
mutated_mod['func_8062'] = func_8062
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1663_call = mod.get_global_var('func_1663')
func_1664_call = mutated_mod.get_global_var('func_1664')
call_8069 = func_1663_call()
call_8070 = func_1663_call()
output = relay.Tuple([call_8069,])
output2 = relay.Tuple([call_8070,])
func_8100 = relay.Function([], output)
mod['func_8100'] = func_8100
mod = relay.transform.InferType()(mod)
mutated_mod['func_8100'] = func_8100
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8100_call = mutated_mod.get_global_var('func_8100')
call_8101 = func_8100_call()
output = call_8101
func_8102 = relay.Function([], output)
mutated_mod['func_8102'] = func_8102
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1663_call = mod.get_global_var('func_1663')
func_1664_call = mutated_mod.get_global_var('func_1664')
call_8105 = func_1663_call()
call_8106 = func_1663_call()
func_5315_call = mod.get_global_var('func_5315')
func_5318_call = mutated_mod.get_global_var('func_5318')
const_8108 = relay.const([5.692475,-4.540205,9.698865,-0.544549,1.013303,-7.976457,3.069933,3.116577,-4.817923,-6.870444,2.197148,5.729948,-4.267907,-6.236159,-3.619428,1.629179,1.516871,-9.490511,1.935626,-2.468730,8.975774,-0.238886,-6.300635,-7.057819,1.773864,2.252250,-9.142688,-6.218404,-3.120600,-1.694053,-2.328772,-7.674098,-6.637744,-9.637240,-5.180965,-7.304577,0.065079,-1.281532,-3.999302,2.607092,0.577883,-0.521649,4.403970,-9.756109,1.456331,-8.632127,8.293496,-2.499576,-9.766482,3.600389,3.314026,-5.437167,-1.719081,-9.840654,4.746653,-9.243222,7.192215,1.100676,6.187720,-5.063371,-2.462420,-0.069161,5.140129,9.276356,-1.074595,-1.914160,8.395623,-2.640178,3.349211,-3.868424,-5.373902,3.036720,-2.613165,-8.403562,8.603024,-2.964751,-0.275283,8.479133,9.202709,4.640827,5.487933,-7.084359,-8.253375,-3.376025,1.704402,-4.251009,9.301130,7.258778,-7.029473,9.599329,-8.940374,-5.625196,-4.438938,5.349061,-6.036947,0.967180,-9.535308,-5.811456,9.298260,3.086406,-6.924259,-6.990087,9.702368,5.251235,-9.754155,2.272403,-5.843821,4.277669,6.454840,1.163546,4.496398,6.783489,-5.393619,-1.070229,-3.268554,-7.288031,9.000251,-4.639546,0.001991,1.409255,-7.040320,-9.994580,-5.202461,-9.329631,-1.808788,7.470721,-0.874184,-4.517200,9.389190,-8.873651,-7.312755,-8.559370,-3.613659,-0.424670,-3.791786,2.349672,0.428011,7.880808,1.275359,5.736984,8.402478,5.526201,-2.826389,-2.835113,-7.174747,4.541736,-9.547618,-4.070039,9.563312,-9.555537,-7.741562,-5.448309,1.620703,0.597219,9.099106,3.233467,-6.684965,3.907208,-1.227948,-7.245802,-4.928363,9.930793,4.461429,4.617364,-1.869755,-7.699536,4.853255,-0.461741,-2.620957,9.431967,7.334342,0.898719,9.912740,-3.157609,-5.903956,-9.190613,-7.034313,9.898336,-1.215565,-8.128544,-0.476390,5.997697,-8.051744,2.292863,-0.265647,-0.030562,6.368569,7.726747,-8.224998,-8.429214,-7.086022,-3.061961,-7.230708,-4.112491,-5.413347,6.431578,4.385341,3.273436,9.351032,-7.725586,7.102248,3.804289,-5.515051,-8.400101,-4.448869,-3.442898,2.076417,1.670405,-6.565342,-9.169920,0.665886,-1.076622,1.503834,-1.065800,-7.121852,-0.846928,0.703941,-9.422858,-7.415419,7.462727,7.634320,0.529337,-6.512885,-1.234418,-5.136082,1.958749,-7.304012,-8.609376,4.489603,-7.766929,5.441116,-9.589321,-8.961184,0.220852,0.837665,1.299473,-7.371062,0.548584,-2.886669,6.331458,3.267974,-2.603044,-0.690446,6.653907,5.137651,0.934109,-3.485761,2.570998,-3.821015,6.369313,4.467153,-2.776463,5.620261,-4.075527,0.901559,-6.705394,1.880721,7.843723,5.435286,5.631417,-2.065750,7.276173,-7.177374,-0.348228,9.214925,-3.192248,-1.977822,-7.108133,6.902252,2.302017,9.514373,6.516879,-2.150636,-0.874114,8.470787,-2.233904,2.186174,-4.530617,1.179851,-1.062508,-6.465839,3.076351,-1.867207,-7.650611,5.378378,-9.830206,6.888198,4.592711,-5.935435,7.666124,1.937161,-4.401792,9.240255,2.333962,0.954298,-1.065195,-4.368744,-8.740478,5.783325,-9.761551,3.843226,6.477036,-6.690174,-3.426638,6.169032,-1.858216,-9.081679,4.254935,1.091674,-7.244144,-4.231398,-9.182641,-5.785533,8.484223,4.230219,-3.651150,9.362411,2.214879,-6.985244,-5.688946,9.840279,6.441410,7.806633,-8.829148,6.719196,8.691004,0.388984,-7.442239,0.477427,7.322565,-9.562559,6.763941,-9.410261,7.593459,-8.461751,-9.687051,2.542507,3.155069,-0.471042,6.558704,-8.537624,5.404480,0.337621,-4.717291,-7.125857,2.495758,6.863515,-7.033261,-9.947404,0.944868,2.723804,-1.829022,6.162992,-0.356676,5.262935,3.999190,-6.376151,2.885500,-5.401866,-7.367903,-8.103946,3.770671,-4.508563,6.230830,-4.161393,-4.300405,-6.283822,-3.742692,-2.353470,7.981004,-5.296611,-5.479376,4.251004,-5.285656,1.416530,-9.758155,5.067847,8.000749,1.068145,-2.120164,6.602393,-0.411743,7.057974,4.127644,6.230066,-5.991700,3.232005,-9.367425,-1.741145,2.468970,-5.199458,0.574810,1.529842,5.483437,4.588963,-8.162722,-9.710454,-1.385784,2.132326,-0.446758,-5.075191,1.723718,3.690266,6.269217,-6.059165,2.294195,-7.706615,-1.930933,2.660500,9.330680,8.967962,-5.660925,-0.873236,-9.137184,-7.771513,-1.928000,8.026136,2.309948,6.484627,-6.012085,1.872262,-8.193071,7.412032,7.713470,0.100849,6.081304,4.496540,-9.697790,5.066608,9.948709,1.340146,-1.836387,9.875455,7.580678,-4.807967,7.121250,2.091409,-2.598574,-9.615162,-5.547167,-4.886711,0.279351,0.685759,2.544321,-3.608357,-7.240983,-0.298559,-0.733460,-1.946468,-8.721649,1.210780,-1.870872,-8.939317,8.769860,4.296788,-9.221645,-5.476170,5.376754,6.063249,-1.805348,9.820892,-4.583858,8.244635,-1.096704,-0.428864,0.905154,-5.335401,7.234503,-2.523466,3.803653,-7.581108,1.772338,8.099444,-1.290051,3.122714,-6.743750,7.942815,-0.252412,0.217517,5.416716,7.006718,-9.048592,-8.715809,-1.417966,-1.001219,-1.807157,8.351389,3.014217,-4.714682,-5.649957,-4.716974,7.398616,3.192527,0.024301,-5.276435,-1.558047,5.682837,8.712046,-8.867697,-1.075836,7.910480,4.426387,-9.744855,-4.131569,-8.012150,-2.595860,3.095942,9.888177,2.014548,-7.472610,6.256123,3.403928,1.784882,-5.350150,3.584360,-0.131864,-7.801962,0.853691,9.811595,4.011517,-1.606139,-8.000775,5.802388,-3.103115,-2.417285,-7.407046,-7.705350,-0.496531,-6.575528,3.443019,8.379701,3.039246,-5.543156,-3.744868,-3.177845,3.499489,0.340614,-0.246013,4.862504,2.782758,3.389721,7.821304,-8.848731,6.061566,2.875093,-9.822432,8.751870,-5.436570,-7.291551,1.132804,-7.337075,-0.848785,-0.819149,8.446261,7.678218,-4.555824,-5.122898,-0.273611,7.346699,-3.099740,5.890111,-5.958662,-8.249976,-6.395255,9.179004,2.802312,-2.169030,-8.906785,-2.232455,8.321715,-2.875281,6.870579,6.599631,4.936417,8.182168,2.576971,-6.386815,6.265047,-0.818023,-1.160681,9.102130,-1.538670,4.630863,3.158819,-5.833656,8.923760,-5.061265,6.705090,7.956218,-9.980872,-9.414652,6.376781,4.401757,5.071930,-9.273875,-0.951240,7.183362,5.796039,6.482058,5.014491,2.515210,-5.810017,0.493459,-8.901131,2.683475,9.826347,-0.485557,-2.111631,-8.756304,-8.864374,2.464615,-3.567990,3.668938,2.010684,-2.942994,-6.929008,-8.544021,0.089523,-6.259468,-8.869396,0.138175,-9.022438,-2.140618,4.924069,-7.968328,2.672286,-9.513640,7.246004,3.991805,-3.837525,6.617633,-0.535093,-7.537745,5.840698,8.625010,-6.745644,0.310491,-9.186076,0.374669,-2.507196,7.081055,-4.605707,-8.692033,1.979815,-5.157937,4.790803,-6.025798,2.711309,-1.868653,-7.752535,-1.708335,-6.027937,3.710704,2.494371,-0.760890,-1.298626,2.548654,-8.089040,-7.966254,-9.713748,4.580506,-3.617395,8.530920,-2.045368,-1.306329,6.466333,7.529523,4.523386,-7.738293,-4.098931,-8.101056,0.459188,2.343924,8.131641,3.877099,-2.751131,-4.867724,6.848184,8.727841,7.997641,-8.769859,-5.308799,-6.512072,-8.191790,2.981755,4.453854,6.527594,4.422098,-4.548192,3.274661,-1.944834,3.405469,-7.493449,-9.051710,-0.988439,-2.330635,-7.082686,9.976681,-9.427546,-0.713098,-3.027803,2.204581,-8.243113,-7.692622,-1.936074,-8.153911,6.552618,4.724196,-3.921756,4.519970,2.643616,0.903519,9.735032,-7.628595,-9.008498,4.722319,-2.277527,3.738895,0.021339,-6.296226,4.048637,1.527599,-5.955625,-2.254832,-4.411785,9.488283,3.631901,-2.551799,4.960178,-0.539402,9.415950,-1.428201,3.107564,-2.827194,3.185580,-9.316704,4.416884,-3.962069,-4.705210,1.268440,-9.557628,-2.763811,7.521753,-1.301062,5.660087,3.260084,-2.733810,-3.617832,3.443306,3.656042,0.083059,0.820006,0.010290,-1.368364,-7.428425,-6.671064,8.339028,5.976765,1.888174,3.855958,-8.264971,7.393207,8.956577,-9.529526,-3.416668,7.969819,2.380869,0.859106,-0.460464,-9.589311,5.728518,-4.941878,6.569947,8.474331,7.745854,9.680271,2.694583,9.333081,1.409178,8.293160,9.483609,6.452501,7.626295,4.916443,2.535850,2.579755,-5.103297,7.762897,2.386641,9.060576,9.799426,-8.242508,4.949869,7.900071,-9.508871,2.548805,-0.203965,-3.833149,0.375337,2.790365,-4.409583,4.219517,-8.328862,-3.026859,9.342395,1.731109,3.970902,-3.302822,7.878801,9.287857,-1.337800,1.749816,1.177927,6.930893,5.630064,1.060252,8.176739,-8.123213,4.949309,0.955215,-1.994921,-2.093969,-6.057245,1.368822,-0.103880,7.017157,6.625622,7.758328,5.054642,3.714209,-0.493180,-6.130699,5.462791,1.532210,2.271903,3.283316,4.046254,3.759633,-2.173644,2.155463,8.343407,-1.506605,5.062448,-2.350147,-6.730559,3.975470,-8.030711,-8.594799,3.046154,6.118151,-0.415561,-8.575753,-4.045217,8.845203,-3.339080,8.815675,-2.976037,-3.802287,-1.787215,-9.794575,-1.009202,5.022088,3.076931,-2.168833,6.322133,3.780862,7.156741,-5.464036,-8.192847,-9.906057,-3.953264,-5.086431,2.801399,1.480761,2.615827,-5.706169,0.899663,1.867210,5.809881,3.934266,5.088877,-3.994491,1.768467,-1.918967,2.168842,-3.018175,-4.040006,-8.594557,-3.900007,6.800297,1.108245,2.091401,2.811201,3.151503,8.272996,-0.290198,4.391351,1.972303,0.260733,-5.888514,-6.767282,-2.577635,-4.540492,7.629232,-9.098626,-1.227782,-9.579158,7.024207,-7.467207,3.960474,4.250099,-0.884802,-1.162155,5.429143,1.020804,-0.770243,4.159983,2.177724,5.512321,-9.635161,6.264705,8.456906,-4.547884,-5.199375,0.211944,-9.116101,0.089524,-6.574714,-5.317711,8.776609,0.680865,-7.428870,-5.070347,-8.446566,-0.620220,-2.449502,-6.144016,5.104816,-8.712380,7.768937,8.784514,-3.284685,1.461697,1.938474,0.861018,9.526242,-2.626165,9.797471,1.006034,1.903730,-7.041809,-6.680029,5.479153,3.332454,1.464655,-1.319001,6.240658,4.074399,8.252988,-6.705816,8.973862,8.584391,4.504097,-5.965899,1.578326,-6.513387,7.919793,-7.483162,4.830800,-4.792990,-0.471952,2.154726,-6.988205,-6.327948,2.100793,-2.564119,6.066320,8.335020,-9.263933,4.416114,3.080498,5.512863,-5.824596,0.041532,0.428401,-2.434632,-4.382429,3.276991,-5.676745,-5.695436,8.549083,-8.648662,7.602784,5.175917,-8.762219,2.726119,0.951802,-7.233897,-5.877806,6.407091,-6.217893,8.763578,6.846882,6.042046,7.502838,-6.863461,-8.972535,8.860790,-8.306904,5.192192,1.158634,-1.406527,1.404098,7.155986,-1.992785,0.653793,-1.772976,-5.024835,-1.792896,-7.569644,2.550420,-6.356461,1.641389,1.026710,-5.060211,-0.733137,8.663757,-9.819955,-0.828097,-7.394675,-9.774691,1.030202,1.029506,6.885376,2.620939,6.269607,-6.140828,-4.365602,4.150356,5.811133,-5.953754,5.797715,-4.607658,-9.132996,4.208030,5.818728,-8.694357,5.559822,-8.618084,0.044558,-7.410677,7.179123,-7.618527,-6.595859,5.856705,-1.242797,-0.817128,-6.381996,6.969185,5.459183,9.387477,1.836458,9.644567,3.844570,3.018049,3.842668,4.665092,-1.776358,-6.716951,6.072230,-3.473047,2.556839,-9.786762,7.825160,-4.125879,-7.076363,4.154699,9.341821,-3.807141,8.987110,-5.956464,3.426789,1.966526,6.055522,0.269664,6.894661,-9.709258,-8.253356,-6.116250,5.992809,-8.581493,1.975486,2.238524,-3.119067,2.649210,2.975657,-5.933943,-7.339044,-4.661765,7.176802,-7.792993,6.979565,0.521914,7.232378,2.920013,-3.006496,2.987985,7.264524,-3.828105,-7.949019,8.985322,4.281153,2.062596,8.024960,-3.706442,2.167524,-6.826679,4.073186,-8.035971,7.263962,7.079085,9.144600,2.101794,7.486371,-6.791442,-8.447984,0.417623,6.876266,3.061320,-4.124094,5.535878,-6.351316,-5.770354,7.748946,9.204796,-0.594589,-2.129211,2.483211,8.036593,1.782149,-6.363446,1.228494,-2.956313,-8.630854,-2.863773,5.034708,-1.384440,8.586636,7.490467,3.870212,8.155901,-9.215452,2.202780,-3.517056,-5.100715,-2.992110,0.950042,1.519810,-8.414935,4.983281,-7.329379,-5.796449,-0.518337,-9.252936,-2.345813,-2.949319,2.752285,1.535893,-5.053990,8.183566,-0.437603,-7.425569,-9.364764,9.680013,1.988603,6.215392,3.804194,7.947443,7.573622,5.887870,2.211717,5.600175,-5.522837,-0.656919,-3.878503,-4.843134,3.655974,-1.087925,-3.492539,6.037405,-3.117760,4.741342,-9.993634,-2.004965,-8.920881,-4.352596,8.397375,6.264046,-5.454436,1.194356,6.603836,9.799261,-5.786702,-6.205302,7.732210,-1.334802,-1.387024,7.079876,-2.677934,-6.569832,-8.296264,5.257025,8.304439,2.112992,-1.402890,-3.213052,-5.673788,-4.940069,-9.884471,4.685297,-9.335159,8.632422,-1.332201,-4.297551,-2.295978,0.033579,2.869673,6.418100,8.378387,-2.532376,2.053801,-0.110153,0.759535,-0.627368,3.413170,7.152787,2.420278,8.104018,-0.773772,6.570982,-3.299869,1.610050,2.841984,-7.744541,1.908517,-1.495877,-8.267636,4.190343,7.035355,3.602415,7.104584,1.619788,3.811877,-1.848325,-1.434799,0.488894,7.498376,-9.515557,6.118408,9.078279,1.727016,7.118746,-0.831971,1.698363,-5.946567,6.808837,-4.140031,-8.739347,6.680859,7.727385,-2.418914,-8.027756,7.974183,-3.663654,-0.159600,8.657121,1.809697,8.846799,7.614848,-8.298206,7.233005,-5.402321,-3.204526,3.617111,9.208397,7.069612,7.977843,7.714847,-8.913986,0.303438,-9.543666,-4.643145,1.673568,7.626811,1.128336,-8.666860,6.002219,-1.377145,-8.442404,3.802742,-0.927873,9.082079,1.790797,-5.754591,1.005576,-8.061345,-6.716345,1.267117,-2.059856,8.641624,-4.943988,-4.937628,-3.867854,0.600844,-4.771072,-6.236757,5.832801,2.964144,3.738767,-7.481265,3.345646,-9.493772,-0.330203,-5.424318,-8.236293,-1.385623,5.964564,5.336094,4.238388,-4.288627,4.432584,-1.709960,1.629274,8.041855,3.068913,3.402804,-6.180342,-3.335992,0.251375,7.301105,-9.338803,2.057793,-4.108571,7.760521,3.892327,-1.551146,2.283490,-2.902069,-3.971153,1.706175,8.302837,-7.021697,-8.349058,-2.197576,7.479575,2.573915,7.675311,-1.094265,3.535410,1.136648,0.804653,-6.286586,-0.981877,7.628330,-1.956115,-6.190369,9.890288,-9.605537,-7.110710,-8.285518,-9.091704,3.718183,-0.622220,-8.160554,-1.751771,-6.952126,6.010201,-5.533070,4.335902,-7.168544,-1.290849,-7.035955,9.735955,3.059907,7.594669,-8.519289,5.880238,-9.811718,8.493545,-6.137195,-3.731408,9.035743,4.114691,-4.875887,-8.101190,-0.523118,2.279404,-4.743291,0.083344,-5.711863,7.401185,1.745451,0.822526,-3.346687,-9.836704,-3.714104,-4.858020,-6.193881,2.588267,-4.125995,8.052936,-5.759181,3.894884,1.589152,-4.116445,-1.565777,-2.621732,-1.945728,6.349558,-2.259933,2.873630,-6.003711,2.640776,4.707713,1.823066,-6.047664,6.848832,-6.960651,7.207448,6.680758,0.502738,-8.687218,7.260234,1.586827,0.755231,-1.982349,-1.335081,-4.920800,3.304387,-7.382697,-8.030908,3.125142,3.612104,-3.190194,-8.139711,-4.386299,2.975881,7.805719,-6.582429,7.864730,4.340878,-7.235336,3.747096,2.970524,4.038734,9.113292,-4.460020,6.744877,-1.661135,-5.612362,6.754335,0.066062,6.853211,-3.715561,5.416363,-9.878573,0.099227,5.865326,3.391955,-3.390236,-5.078598,-0.325797,-2.142514,4.436960,-2.077784,7.236441,-8.671947,-6.627582,-1.340771,9.478955,6.454584,-9.707049,7.176359,7.657377,-7.278028,4.247209,9.903244,9.718038,7.640018,2.756030,-8.984402,7.984042,2.728613,4.284593,-8.791643,3.984620,-8.945702,2.328401,5.306769,-4.992555,-7.002818,3.225517,-3.113178,7.332282,5.103413,8.218592,-7.044405,-4.701218,-4.109944,6.635445,0.250033,-7.171277,-6.480897,0.583802,-3.180841,0.321024,6.997355,9.559276,5.216521,0.476022,2.151140,-0.757910,3.006152,4.513598,-7.437032,2.334333,0.266840,9.731586,3.065386,-0.145628,7.392817,-0.340262,-3.284619,-6.247474,-2.243747,-6.799462,-4.634506,4.415719,2.414756,1.638394,7.678014,5.636642,8.343378,-1.532257,7.545883,-3.867931,-7.112248,6.500068,-6.501633,-4.997459,8.683092,-0.452121,-6.198407,-7.241185,-3.562596,9.548777,-2.363268,0.221842,-5.913649,-4.601474,-5.904293,-9.446991,6.749501,6.279729,9.003213,-3.725995,-2.521677,-0.608290,2.752430,-7.415077,-7.338049,4.037476,9.193993,-8.593227,2.437158,7.281083,-1.489090,-4.796580,-3.029226,3.203675,-9.366548,-7.037268,8.380402,1.859468,5.517294,-0.632860,7.382967,-7.972028,-1.359744,-3.190306,4.784914,4.543654,2.157534,6.931967,2.313882,8.982779,8.670063,-8.348196,-7.654226,8.957306,-0.409090,-2.309652,6.140033,-7.297788,5.617357,0.149114,-3.756617,-7.195161,6.506852,3.327217,7.750438,-4.783815,1.247035,1.740804,-4.583668,1.683037,-6.302607,-7.182539,1.464974,-5.463592,-2.265477,9.460081,-0.585082,-9.582482,-7.037028,4.652706,4.462086,-7.757225,-7.673550,-9.726634,-1.390887,4.255965,5.761444,-3.720406,-3.752843,-1.147461,5.202553,-3.272329,7.340428,1.008196,-2.520451,1.722172,-3.744851,-3.045634,4.692953,9.043357,2.868594,0.659775,-0.423265,4.104432,-1.063689,6.357859,4.088969,6.718945,6.735557,-5.336527,1.222464,0.819599,2.092822,8.273937,-9.952118,-5.155026,0.226688,1.919059,-7.647121,3.873101,-2.376937,-0.412680,-4.837386,-5.356757,-3.041723,9.443387,6.724050,4.679061,0.475774,2.387964,8.199068,0.022870,9.522204,-5.194608,1.145491,-4.326796,9.382517,8.166563,4.943935,7.168458,1.720225,2.077425,7.628123,3.362121,9.053704,-9.634531,0.308483,-1.211705,-1.840418,-0.016736,-3.086927,9.082565,6.871692,3.072410,9.626364,-9.181979,7.843278,0.881971,-7.719725,4.235143,1.485285,-5.962996,5.914319,-7.723789,0.294031,6.489944,9.352262,0.760158,-9.893916,8.577053,7.331522,-6.161950,-1.974576,9.598997,-3.496775,-3.747429,5.139215,-5.200270,6.882415,-9.089164,7.133082,-8.794283,9.002507,0.186907,-9.630477,3.689748,-9.148557,1.020632,0.329314,6.016974,1.184396,8.859864,-6.376307,-6.212412,-1.215917,7.584219,-2.215753,0.056414,1.762062,1.416009,1.990629,-9.651877,-7.297769,-7.649910,-6.575889,-1.055294,-3.846615,-7.427941,3.344006,-8.445448,-8.789576,-0.828927,-1.147409,-5.236505,-3.033229,3.536334,-0.535193,-6.386332,2.451361,-4.078164,-8.459872,-1.014356,-2.435891,-6.599798,2.182182,-8.938409,-7.919668,-3.986581,-5.863896,-7.104034,1.367554,-6.478006,5.951732,-8.775460,-2.040131,0.344653,5.884253,2.564036,-5.389475,-1.359397,-2.942207,5.085608,0.334575,5.791715,-9.254360,-5.779681,-8.571574,8.821964,6.644392,-9.318763,-4.563359,7.491744,3.805941,-3.291958,-6.929798,0.200880,8.184553,7.158680,0.384295,-8.858657,-6.654193,7.364722,5.922751,3.079481,-7.328024,-8.724978,1.112411,7.093132,-5.893730,-0.599657,-9.932637,-0.151675,8.065464,-1.244510,-9.585148,-5.162362,6.726344,6.828852,2.717688,-5.889335,6.786740,-7.709005,-8.819789,6.441179,5.515386,0.374885,-9.393149,8.086904,3.837467,-8.484285,-0.558554,-4.321242,-8.197523,6.805494,-9.243977,9.228403,-3.752773,-4.273222,5.691201,-6.723767,-4.028507,-6.507584,1.079624,-0.629935,8.758352,-0.846539,1.494063,-6.784297,4.066790,8.450483,9.187784,2.464160,0.244823,-2.282330,7.746503,2.531374,-9.044532,-4.657101,-7.228314,-6.964294,9.092192,0.199742,3.837005,-6.233019,6.727733,6.996071,8.906029,6.180099,-6.247265,1.073667,-7.499456,9.056350,4.576549,-1.463966,-8.959724,7.864484,6.565342,2.789107,-0.718551,3.289414,5.316896,-7.991258,4.053565,3.609997,6.062424,-5.830923,-9.703095,-6.163052,3.114842,1.386760,8.369417,-2.263903,5.941140,-9.914105,4.498487,-9.561235,-9.987955,5.271375,-1.465800,4.250478,-0.580091,1.573114,-5.741878,-2.746640,-1.121657,5.856124,-6.033021,-7.697664,6.159931,-2.527819,8.091523,-3.175303,9.084891,9.774600,-9.359353,-0.671870,-2.252479,8.659126,7.873269,1.345016,4.891864,-5.913246,-0.471510,-3.336003,1.046492,-7.481565,8.376860,-6.808228,9.850569,-9.855458,-6.642473,-7.395320,-5.624542,3.104844,2.580128,0.883361,-4.661556,-9.358744,-6.567684,-0.630581,9.206664,-9.071395,9.142879,-2.325235,0.817189,8.845786,2.053228,-3.584435,9.545924,6.391318,-8.455394,-3.513146,-4.816572,1.925199,8.686131,-7.638926,2.627595,5.931073,0.470140,5.241447,-0.512258,3.971355,-5.400303,7.306967,1.328216,-4.047084,5.868035,-4.265678,8.918627,-0.226984,-6.245440,-8.233806,-5.732138,-9.931526,4.754484,-9.732348,-2.912293,4.476215,8.450417,4.213143,8.768575,9.447542,-6.266213,5.795593,1.512928,-0.107102,-1.159138,3.328806,-9.548166,9.887814,2.016648,5.427125,0.602475,-3.038213,9.997671,3.353605,7.441587,5.817930,6.662683,-5.747460,-5.510933,-0.643703,9.352404,9.664012,9.077627,1.570608,-7.367524,3.414591,9.333843,5.355737,9.436436,5.550779,4.819237,-3.114702,9.011061,3.816266,5.295123,1.974582,-3.001750,-6.405178,2.374157,-3.980513,-5.942725,9.197161,-0.686441,-6.293302,3.839511,-4.579082,-6.084320,0.998988,3.714137,0.308011,-9.423027,7.532384,-6.070314,1.636261,0.385286,2.502521,7.488885,1.418873,1.366050,4.489113,-9.713382,0.339443,-4.216515,-9.855206,-8.881765,-5.831996,-4.983791,8.808137,5.178033,-4.543660,-6.996674,-3.448442,-1.357678,5.343744,7.546154,6.076966,1.527841,-2.076890,2.423781,0.776987,-4.479073,6.741390,-4.088321,4.366425,6.728123,-0.106233,-6.550389,0.436767,5.002617,-9.749996,2.842098,-3.030820,4.906697,-5.739670,7.621584,-2.874447,9.875950,7.375751,-7.092778,1.029489,-7.606221,2.453518,-4.741236,-9.337647,-8.623102,-4.974302,-4.746863,-2.207756,5.241288,-9.987478,-2.791610,-3.038057,-8.645347,6.876804,1.370239,-8.444412,1.452667,-1.914799,-5.710712,1.099644,5.299473,-5.853073,-4.277963,0.916533,5.703366,-3.940897,-9.831881,4.162768,-8.850358,3.391600,6.013561,-3.263010,-1.975230,-0.614675,6.411812,0.533854,8.363917,-6.584197,-4.542088,2.655569,3.254762,3.129913,5.689778,2.245646,-0.141794,7.984433,-3.928279,-6.773207,-2.555876,-0.327709,-8.215123,-6.044412,3.619147,3.287317,7.985328,-9.458590,-4.325046,-1.246445,-7.940789,-1.296723,4.863493,4.048562,4.160540,-8.321837,-3.813217,9.874124,-2.901284,9.502627,-5.748785,2.124525,5.577339,-7.202200,7.875868,6.320756,-7.616337,-7.759711,1.046656,-9.254886,7.864682,-1.559896,0.575857,-1.942683,-5.337218,0.290157,-2.152729,-1.099311,-5.240312,-6.673002,4.333358,-4.510718,1.065090,4.203688,-9.831076,1.688337,-2.223756,2.214165,6.955736,7.700113,8.991091,-7.315530,9.177105,-5.726428,7.797960,-4.637812,-0.667181,7.040000,3.665008,5.762650,-5.090715,-9.657378,-7.209043,-0.475189,1.199122,2.627466,-2.279048,2.761379,-8.596814,-6.541272,-1.635836,8.069129,8.663335,-4.525667,5.034525,-6.022981,-1.194581,7.171042,-8.862148,-0.638537,2.865420,3.633847,0.838765,-9.052195,-5.001123,8.098499,1.474851,0.396869,4.464211,8.635673,9.951209,-4.374888,-9.812807,8.319565,5.739572,1.157948,4.385699,5.381933,5.149670,3.959448,-2.179558,-6.051730,9.644005,-5.514588,3.265697,9.578408,3.870804,-9.782686,7.226876,-5.371418,1.428552,-1.641017,-0.596887,9.539867,6.360247,9.908362,8.595599,2.149561,-1.325483,-2.774500,8.204664,-6.380814,6.608213,2.187909,-1.159225,-9.738350,2.777176,1.049408,-8.004928,6.818849,8.769790,9.882449,-6.047643,5.529612,-9.052581,-2.845036,1.094518,-8.068815,7.527574,-5.305969,1.784574,1.083189,7.779453,9.370956,2.341427,4.388118,2.888223,7.288593,5.626030,-5.111467,-0.015508,8.649598,-9.425665,4.247308,0.141084,1.795530,-0.656133,2.226903,1.896937,3.924618,8.307536,5.596397,9.333622,-8.257666,3.809592,-6.751376,4.517572,-9.645448,1.887000,3.304359,9.977168,2.155627,5.680375,7.445310,3.344645,8.434413,1.144528,-4.665093,-4.361733,3.950610,7.759488,4.423908,5.399446,-5.595291,6.818589,-1.451051,4.591850,-5.721623,-0.575488,7.593321,-7.899623,3.898925,-7.269224,-0.813147,-8.108586,-5.638882,5.395797,3.316987,4.227348,1.743614,5.425974,7.156106,-7.879560,-3.658034,2.388519,-0.342020,-6.402529,1.703374,7.568371,9.141991,2.006007,-0.463318,-3.349185,-0.152918,5.510441,-2.371976,5.210199,7.321778,-1.354384,-9.892570,-8.745793,6.717268,-9.200307,7.993769,8.137526,-0.462995,-4.855423,7.324421,-3.547411,0.765266,-5.497955,-2.296361,9.955909,6.424433,2.157410,-9.849011,-3.252288,5.576803,-2.036526,6.504865,3.511915,2.918597,-6.803129,-1.123053,-3.194619,-6.821393,-7.993307,-1.775501,3.316731,1.293863,2.723166,-6.166621,0.138622,8.863154,-0.632050,5.584136,-0.945664,5.711853,-0.099537,2.771343,5.902710,9.674110,-6.495052,-2.459757,6.888891,8.383864,4.255818,-3.747394,5.539802,-9.642265,-9.823982,3.948387,-8.860396,1.244568,2.835852,2.391350,4.485862,-6.970335,-4.771598,1.591014,-9.905538,5.450405,-9.464083,-5.323325,1.115924,7.531809,7.821378,-6.185160,5.111095,-0.386983,-2.178404,-8.901574,-3.110903,2.590238,5.158776,-5.765883,6.423672,2.047785,6.206739,7.000669,-6.963734,2.923761,-3.887353,-3.045614,5.885188,-1.324524,-7.302912,8.795813,6.442941,-5.624024,1.823913,-2.887033,-1.248466,-9.887404,3.075524,-5.065927,-8.941929,5.402030,9.775967,7.885785,-4.427736,-8.151933,-8.672996,5.451886,-7.458147,-4.768646,-7.201548,7.140094,-5.103026,8.344980,2.031384,9.896998,3.856062,-4.368312,-0.745000,1.039253,4.258388,-0.360679,-1.470857,7.102746,8.258591,-3.569230,-5.790724,-3.762220,-7.855514,3.513162,8.525587,6.300377,1.864625,0.628114,1.937865,4.288058,-1.406692,-8.607621,8.715932,9.226747,6.778595,2.968727,2.119587,-0.945150], dtype = "float64")#candidate|8108|(2496,)|const|float64
call_8107 = relay.TupleGetItem(func_5315_call(relay.reshape(const_8108.astype('float64'), [2496,])), 1)
call_8109 = relay.TupleGetItem(func_5318_call(relay.reshape(const_8108.astype('float64'), [2496,])), 1)
const_8122 = relay.const([1.286271,-1.421851,-5.904230,0.916088,1.035911,9.730391,4.020112,-1.319408,2.962110,-0.900012,5.447608,9.613133,2.496898,9.572725,-1.625402,-3.797215,-0.225854,-8.721254,-0.953322,-6.931586,9.638547,-0.677537,8.620473,2.417975,-1.330243,7.706180,-4.954098,-2.543674,-2.803587,-9.845609,-5.427971,-6.820458,-0.045960,-9.814610,-2.821839,-7.062359,-2.911186,-2.933263,-2.339180,-9.552663,8.930028,-8.212085,-4.491624,-9.883948,6.611816,6.443846,4.782333,-8.233700,-1.120982,-2.853318,9.737478,1.885391,6.721194,3.570588,3.101651,-6.914162,7.190548,-7.891810,8.891029,-9.315055,-6.048982,9.001127,9.769702,8.942240,-3.194778,7.862892,-6.137913,8.918662,-0.746089,2.759766,-3.350265,6.611111,5.704383,3.097115,-5.647600,6.688713,-7.342110,-1.993256,-8.470194,5.603343,7.804407,3.729109,8.188955,3.859944,6.780271,-4.071616,-5.767318,-7.194102,9.666352,-0.993515,9.950543,-4.025677,-2.390393,-3.251077,-1.818344,1.656403,-9.513064,-3.434837,7.419225,5.592746,-5.091066,-4.067042,3.727760,-9.285855,1.659634,-8.555263,-3.310569,-1.391067,2.084693,-7.107136,-9.268166,9.731649,-7.874308,0.672021,1.982025,-6.258820,-7.419703,-8.319914,0.776249,-4.147281,-3.224644,-7.073381,-6.736267,3.688869,4.154574,8.249706,-6.283901,-7.737647,-1.407916,-8.452273,-2.818942,-0.965000,-3.043384,9.123097,2.549629,-8.646042,-4.893732,4.057104,6.551418,1.937272,-6.474217,-5.801677,4.109256,6.349638,-8.409564,-0.513509,-1.456059,0.449138,6.219468,7.630710,7.062489,-8.666115,-6.834994,-1.282737,1.808303,-2.677555,-0.838996,-8.307692,5.507444,-3.180057,5.099322,-9.769531,4.610386,-8.341183,-5.249706,7.062765,1.736456,-2.414072,2.142512,9.915676,-8.628431,-8.482840,2.279354,-7.328116,-0.948594,-8.312559,1.195792,-1.047532,2.472944,-9.465631,-2.194237,0.358326,2.330584,1.412270,-8.703187,5.181911,-4.941077,9.183324,-1.721596,-7.887485,-2.340857,1.230214,6.779107,-5.076823,-9.005274,6.451206,0.651826,2.009377,-1.499182,7.940069,8.682854,3.816830,0.668175,2.379452,-1.859672,-1.418323,9.457490,1.282549,6.237439,8.589998,-2.209025,-6.508492,5.965884,-4.434647,-2.801163,-2.188242,0.842653,2.219088,-8.861315,-7.692410,-1.694499,-2.733403,-3.624321,6.287059,5.802222,-8.539439,6.821341,6.728932,-5.718621,-7.801698,-7.569374,-5.835238,-9.160153,-9.549257,2.563975,0.559192,7.646736,8.918573,6.632055,-4.007999,7.399555,-1.023964,0.943818,8.228020,-9.803766,0.753733,-8.940708,-8.052044,7.915859,1.265010,8.334372,6.487314,-7.660843,3.041731,4.306817,3.824875,-5.076839,4.722174,7.953796,2.002384,-5.681553,-4.340462,-4.307386,1.493368,7.625481,-7.290981,1.632389,-5.052729,-2.857597,-0.392591,3.660406,-0.215494,1.661630,9.565345,-8.538624,-4.516792,8.036078,9.475298,6.718561,-5.624162,-1.806078,-2.422965,-0.426602,4.365694,-6.755651,-6.992961,3.393430,0.267961,-2.136089,-9.173631,5.360306,3.668644,2.437875,-2.791980,6.808264,-4.040776,-2.561205,6.173365,7.967837,8.572898,-8.011004,5.441543,3.237550,1.939823,9.725572,-3.002893,-5.242574,-5.376870,7.702912,3.860623,3.788987,-6.533867,-8.310238,-9.372522,-4.860324,6.526877,8.836509,2.955781,3.020061,-7.588244,-9.077684,7.043875,-8.390598,-6.251333,-9.184815,-8.016420,2.869500,2.372947,-0.463071,4.270636,-4.218984,-3.329890,5.520020,-9.429225,-8.595330,-3.562077,3.366828,1.647393,1.284024,7.710841,8.252774,5.205996,-3.382413,-4.336804,-9.016011,-3.552903,-1.606085,-8.569888,-1.831701,-4.390553,5.579648,9.548230,-8.953137,-9.324551,-1.110925,-4.733076,2.158101,9.338845,-5.871562,-3.329638,2.661198,0.456563,7.896943,-4.169042,-9.030908,-3.411668,9.997712,4.648286,9.708893,3.099354,3.509198,6.869353,7.483208,9.210342,2.368435,-6.605425,-7.167266,-4.506384,6.519599,4.374993,-8.435025,9.904364,6.044873,0.666992,-2.546800,-4.256004,-2.526547,-7.347895,-2.817964,-8.274985,2.285505,8.919525,-6.411239,-4.624719,-5.112636,-4.805701,5.412363,-7.878050,-2.102374,9.228085,-0.834035,-1.994630,-4.566044,-2.209495,-2.807676,-5.901098,5.341562,0.449799,3.214043,3.847702,1.212314,-8.733377,2.157519,6.824449,9.982357,-9.924692,6.766750,-6.032299,3.645499,-1.188424,8.158389,8.406945,-5.551949,4.249264,-3.565267,9.180355,-5.366781,3.811882,-4.604726,1.134275,3.542872,9.835713,-6.292739,-7.946166,-5.428000,-2.394678,2.339379,-0.994691,-0.506504,-5.220670,-5.202185,0.365677,5.810997,-4.800871,2.856098,3.180587,3.034870,4.674408,9.872372,1.542226,0.944266,6.567793,-4.460632,-0.744441,3.832233,1.018454,3.071008,-6.207738,7.288368,-6.184287,-9.687396,-5.488779,5.131766,-3.682202,6.152841,-8.474376,6.793740,-1.195006,-9.260243,-8.619291,7.721755,9.896458,-6.672853,7.161698,0.738668,7.318312,-4.703761,6.699013,6.088333,-0.667224,-0.195788,6.627993,-7.348495,0.791265,7.577108,0.442307,3.369939,7.603852,-9.662632,-9.740343,-0.564373,-3.735236,1.086634,-5.166662,9.342456,0.965344,-5.740586,1.215709,-2.799890,4.108152,-9.875152,-1.698837,0.307862,-7.351427,1.813618,0.470604,-1.346412,-3.474564,-7.773234,-7.324707,9.442345,8.871695,8.354395,-5.753193,7.397960,5.965207,-9.651357,1.386372,1.359989,-4.361367,-8.757529,-6.854697,4.447470,-7.177032,-4.528017,9.517762,8.290454,2.073162,8.035218,-4.812632,6.899814,-2.806895,-2.617368,3.194861,5.529717,-6.352851,-3.043558,-1.608734,2.806576,3.812328,-0.411052,8.495922,8.828343,-8.899628,-4.779506,5.046297,-8.903523,-0.792865,4.589761,-0.323159,5.127911,9.306871,3.045413,4.447527,-9.266296,-1.993768,6.777599,-4.826422,-6.450669,4.413116,-9.115534,-0.432949,-0.840207,8.182182,8.862072,3.828322,-1.369516,-6.195374,-1.503489,-6.988436,-1.863431,0.908551,-2.855840,-7.116781,-1.920728,4.431101,-6.380492,0.080939,-4.992830,-8.572277,-5.164717,-1.832904,-8.350395,6.174622,-2.309502,-5.214863,-7.222915,-6.556917,9.723570,-1.205865,-6.496641,-3.734871,4.095603,-8.955635,-5.640591,9.355477,-9.904879,2.862580,-3.249482,5.259115,-0.831595,8.237766,-7.221667,3.061407,-8.656637,1.754170,-2.696082,9.438157,-8.889614,8.660375,4.868994,0.639756,6.823181,-2.093183,3.222404,-6.212372,8.636065,2.020558,-3.929066,-6.272081,-7.876822,9.466532,2.788324,-7.121823,-5.706981,5.285574,0.261617,5.659287,4.306795,-9.379520,-2.319348,5.247943,9.096931,4.491936,4.464870,-4.853310,0.458443,-5.817150,6.019478,-1.219309,4.645529,3.948142,9.710286,8.190963,-5.664787,4.971584,-9.500022,3.496393,2.827256,1.405780,-1.672671,-1.733517,-5.459271,-6.948041,-5.971152,9.222270,-3.377210,-2.754410,-3.601318,0.139140,9.203960,2.855054,4.489860,8.690780,0.485292,9.253139,1.578320,3.923654,6.781828,7.412352,9.318067,9.479525,7.931120,3.169701,7.547559,-7.757454,7.375300,-6.714365,-8.527842,-9.783656,4.147799,5.218699,8.064621,-6.731567,0.749332,-3.239225,-8.812255,-1.810786,8.611307,3.707152,-5.030022,-4.622661,7.373568,-0.913416,-4.056751,3.011278,1.241018,-1.330578,-6.841644,5.569088,-0.785524,-9.408974,0.462789,-3.175415,-6.748281,4.709592,-5.003010,-1.971194,-9.845225,5.847576,5.613592,-9.954286,-8.088595,-0.212633,8.483561,-3.053045,8.903103,8.435685,1.059769,-2.011359,3.765919,2.146640,2.683654,-0.018058,-0.748883,-7.380843,-9.250097,-3.010389,-2.232505,8.438591,-7.066614,6.714781,-6.455626,-6.412339,9.210496,0.893480,-4.334714,-9.835330,8.545029,-9.998757,-8.461926,9.742408,2.132207,1.406916,-3.687917,-4.718710,-6.823363,2.279438,-9.642996,3.789798,-9.858662,-4.538424,0.197001,-7.538825,0.786002,-0.721768,3.773442,6.156311,-6.951058,-0.916747,3.692921,0.281246,7.218862,0.889594,3.933480,5.548363,1.932252,-6.916584,-9.164487,0.704339,2.421340,1.034003,-5.901347,-7.387473,-7.250815,4.030894,8.741262,4.139158,7.074886,-8.569723,0.200820,-9.722955,6.116018,2.991877,0.417089,-2.233593,6.204443,-9.346919,-5.755031,-9.781033,3.523368,-3.720937,-4.948024,3.635216,-8.792358,-0.960082,5.416795,8.840274,-9.993595,-7.318283,5.630346,-2.963779,8.144986,-6.559169,4.823996,-0.105095,3.604338,7.064374,-1.887726,5.661315,-5.158103,2.596113,6.177204,2.193581,0.130870,1.050133,-0.205793,2.682199,-8.254732,7.094354,-8.407751,1.169820,-8.823528,-5.066613,4.780994,-0.984312,8.554268,-7.655846,-5.055695,-3.712849,6.503234,-9.198445,-2.706374,4.969715,-8.799932,-8.769828,-4.750152,-0.651382,6.449206,-4.109204,-1.350174,-2.477767,-2.389714,-0.581739,-6.810938,-3.568941,2.323579,0.195036,4.312572,-0.545289,7.641684,-9.410798,-7.448137,7.889637,9.070614,8.780472,-4.153185,-9.232236,-1.769622,0.279507,5.651513,-2.567502,-5.025784,-1.071888,7.796561,4.112688,-5.145977,-7.171841,-8.703187,-4.084186,1.431273,-3.273735,3.840688,-9.763037,1.969134,2.433797,-5.261021,8.918763,5.063202,-5.889562,5.076871,-2.607155,7.691965,-5.351262,-6.073904,-0.237554,-2.890184,2.436920,9.827649,5.926133,9.575179,5.082718,0.596457,-6.495395,6.627249,6.289848,1.674247,-7.878479,-9.103510,-2.327659,5.115623,4.717488,6.019691,1.910820,-3.190411,-5.510826,1.487184,3.045157,-5.837535,-2.732386,-0.224660,-1.795423,6.665920,2.774371,-1.918013,-3.818237,-5.416109,6.030727,-1.263012,-6.460708,-8.549924,-2.202554,-1.748642,-2.311983,6.447940,-5.102898,-9.691482,4.184434,3.553239,7.269530,2.804087,4.125727,3.586299,9.788676,-4.064687,2.073582,-1.532358,-1.297177,9.885802,-9.899372,5.263290,0.287027,7.500230,2.118618,6.802962,-5.678726,-9.490839,-3.174663,6.322784,8.345587,7.720375,-5.689555,-1.895446,-1.171022,3.883805,2.997820,-2.746716,-5.378498,4.930170,-9.378933,-5.087896,8.707756,3.201719,8.188146,-9.210683,-7.238063,1.735684,3.953818,1.550513,8.762628,-1.091357,-8.006078,1.449759,9.852716,-7.524031,3.091584,-5.325602,-5.513169,-4.789949,-1.564616,-2.185270,-1.520163,0.776598,-3.684336,-0.587978,7.928898,-9.163546,4.227794,-2.904836,-2.849351,-0.210491,-5.232870,5.486758,-8.486806,-9.633863,-6.827523,1.116104,-8.362543,-4.681461,-1.872756,-9.368636,-8.620539,7.210360,5.258435,-6.907049,-1.604279,1.596974,1.148653,3.134903,6.481727,6.901356,9.506588,-3.528139,8.720604,-1.941235,2.477822,-3.167160,9.148469,5.114567,9.349511,-9.474689,3.493145,-9.860776,-1.147284,-2.234211,6.168367,5.157005,5.780734,-9.675391,8.623813,-8.771955,-5.360103,-2.900046,-8.167633,-8.109521,1.352886,7.810360,-0.979580,4.570844,-7.127502,-6.648273,0.503116,-5.287462,-8.957785,-7.508530,5.557671,-6.473204,8.692105,9.566657,7.045931,5.348817,-6.490888,2.318941,8.446452,-2.690097,-3.469247,2.628475,-3.505620,-6.547885,6.031546,-8.443418,5.875324,-2.425501,2.147686,-0.163072,3.431174,0.326783,6.543391,-8.510539,-3.500284,-8.539321,-1.029978,-5.287827,0.651459,0.640211,3.611080,2.700269,-0.323376,7.067564,6.560883,-8.097240,-2.030273,-7.960428,-2.426968,-4.766816,6.529819,-3.871159,-6.484099,0.635454,8.645405,-0.821511,-2.244591,-9.093945,5.259296,0.768700,5.587971,3.481722,6.590824,6.048530,5.230382,-9.921185,-4.022803,-2.557173,-8.448852,-8.787051,-9.634771,-8.537139,-7.684618,9.561489,4.447183,-0.582593,6.486827,-3.041123,-8.483821,-7.899051,2.914320,-7.047990,8.069966,-0.202501,-6.496327,-1.837158,-5.704082,-2.784090,4.816172,-2.044110,-0.876328,6.559499,6.457303,-2.099396,-7.835219,5.290211,-4.769621,0.473996,-6.081992,4.986273,9.911052,4.125682,-1.887184,-1.858172,8.845143,-0.822475,-5.617124,7.126578,5.721983,7.742711,4.046558,8.453796,-9.326568,5.748677,8.242170,-0.125591,-7.289963,-9.808613,4.254918,-6.201645,7.760474,-6.421051,6.299818,2.115552,8.183724,-5.374011,9.302401,-9.925638,-2.550949,-7.768920,-4.427186,-4.944017,-0.342831,-3.357445,-2.349560,1.505673,9.693925,9.942339,3.906336,-0.841728,3.246749,1.847885,-1.151061,-4.438259,-1.525014,-6.904386,1.574709,2.747017,4.724147,0.937800,5.241421,-4.110225,-0.176784,2.291765,-1.218307,2.288485,-3.519708,5.140522,-8.557503,0.544762,-2.390439,-9.744683,2.690576,-1.489286,2.654397,-8.074315,-4.677657,1.516230,-0.278869,-2.222816,-8.935483,-3.725545,4.473879,-0.658526,4.192965,-1.327335,1.952559,-0.976470,-6.333947,-4.151888,-3.665248,-9.988253,9.377787,-4.283701,-9.711384,-2.015885,-0.912677,6.064140,-4.528025,7.989560,-4.004357,-6.154165,-2.410944,-2.360244,2.219254,-7.769513,4.911139,-1.260860,9.561123,-3.296900,5.137787,-2.597532,7.647722,5.343881,3.262647,5.829179,-0.219625,-2.646228,-0.258458,-4.049270,4.376855,-9.839975,4.233811,5.409117,5.708131,2.797700,-6.187611,-6.844349,9.964855,-4.725896,-5.908688,-3.599449,3.731252,-8.274432,1.824758,6.309763,4.675672,3.705993,-2.374927,4.509574,-2.978762,-8.333835,4.873461,-4.766754,3.067453,2.880979,4.407173,-1.888878,-0.727864,-6.761269,7.673708,-6.099914,5.761654,-9.203423,-2.107962,3.274856,-5.636380,-0.995030,-7.073928,-4.369740,0.921402,-4.616660,-8.902974,8.044076,0.784379,-9.726647,9.189151,9.498821,5.747024,-2.676880,-8.869568,-5.126464,6.920498,-8.701890,-6.146639,6.094681,-5.630345,-3.442510,7.481394,-3.269600,1.154703,3.072680,5.533154,-6.261187,-7.837631,5.591497,-0.894412,2.056364,-7.587242,-0.637080,1.002155,-6.921083,8.537326,-1.586749,-9.808517,9.690391,7.697193,-4.391521,9.510792,3.460200,7.077606,-6.813994,5.227465,5.600340,5.134752,-8.269810,-9.937227,3.141313,2.549231,-9.692418,-7.167304,8.179193,-6.117025,-0.114831,-3.203229,-7.758168,-6.343520,-1.563453,-7.068318,6.081579,5.371895,-6.852213,-5.430367,4.283643,4.986765,2.515308,5.691010,-5.255802,-8.258562,2.180626,-3.861427,-5.189018,5.796274,-7.542591,0.910263,0.190994,5.123441,-8.408316,1.041852,1.419511,4.351700,-3.507152,-5.840475,-1.874345,-9.849811,0.549670,7.871932,5.750304,-1.537497,1.791144,-3.306381,-0.185543,-8.722467,7.017165,-2.858289,1.953562,-0.515281,-3.408566,-5.685252,1.893992,0.370422,2.175336,9.237325,0.244979,6.150670,1.473175,3.348546,1.199377,-8.215971,-9.813398,-4.388711,-5.380045,2.686269,8.245734,5.041866,-5.841697,7.646143,-6.328476,8.392762,8.794957,-7.695169,-0.199017,-8.782104,7.844476,-1.215878,-4.702751,7.585935,9.478777,3.643961,-1.046749,-0.049938,5.692905,1.042147,-4.426088,9.913023,9.958714,-0.693842,-2.725489,6.631591,2.673782,1.396017,-3.339331,-3.680648,9.345032,-5.921442,-3.182722,0.954682,1.033342,5.373224,1.056330,7.494167,-9.239638,-3.597389,-0.513411,4.651832,8.069215,4.452323,6.383282,-2.037758,-5.702733,0.161957,4.670545,-5.793519,1.322668,-5.391153,8.244863,8.481983,8.081385,-9.983417,0.592291,9.287025,-3.295942,0.131525,-0.885607,-7.987006,-0.577777,5.206316,-5.935880,-1.069650,-7.227534,-4.217545,-8.333571,8.951513,7.088395,-8.010524,3.718659,-1.558748,-7.710845,-4.170247,0.549880,4.627193,-7.147371,3.934524,2.485398,-6.655762,-6.643241,9.469532,-1.027464,-2.290351,-3.828988,-9.949287,-8.003033,3.274805,-0.512333,3.553950,-5.282952,-0.454642,4.605143,-9.556658,9.986343,-8.338238,0.313417,7.211017,2.175789,-2.743074,-7.606228,7.281159,2.313727,4.851420,-7.674249,1.413783,-1.250858,0.404473,6.951023,-2.584595,-2.496846,-2.126548,-1.712470,4.519134,0.571109,7.036909,1.317860,-8.026952,8.699092,-3.594325,-9.199419,-2.046746,5.705638,-7.319266,2.619322,-7.572571,-4.027006,-5.709557,-9.558621,-8.011018,4.036165,3.439395,-9.771225,7.609682,5.659806,-9.916796,7.174453,-1.651066,-0.764003,5.083794,5.686450,-7.868990,-6.993880,-5.539341,-6.617104,-4.491671,-6.328522,-0.562811,8.167103,-3.088057,-1.748712,-9.541287,-6.271916,-2.329211,7.469470,-7.598009,8.448023,-1.577659,1.959303,-2.738662,3.541603,3.671671,-4.636437,5.822900,3.102038,6.054373,-3.911148,8.610881,-4.756527,5.963155,8.426678,0.393893,-6.116963,-3.356151,-4.857450,-3.111223,8.469071,-9.144100,5.268511,0.644275,5.089193,-5.119012,-8.562215,-4.837758,-1.891078,1.052516,-6.011158,-4.430528,-9.099177,-0.884579,-2.361997,7.757077,3.354636,6.385355,8.632448,9.698948,3.475754,-5.952023,-0.152281,4.499910,-5.614226,-3.547908,8.556563,-5.317018,-3.358799,-5.475487,4.357912,-1.442395,5.872769,1.214074,0.602378,-4.120565,1.760346,-9.874963,0.104460,-0.054948,-4.957383,-1.634114,8.093350,-0.284973,-5.244946,-7.478547,-8.980535,-8.115232,0.790764,-3.729660,-3.071792,6.769771,8.418050,5.761398,9.511857,-3.588545,0.648225,9.043380,2.306104,-1.087215,5.150409,7.747600,5.910441,9.727750,-3.674372,3.909189,-1.478206,-7.091779,9.781343,6.699706,1.771101,-1.105112,-3.328578,7.479399,3.908025,1.125997,5.947734,-4.067143,-4.478784,7.256839,5.026076,-1.657629,5.272936,2.900658,-2.134589,-0.652350,0.154235,-2.424610,-9.814473,8.506192,9.192634,-5.981888,-5.251154,-3.964232,7.130817,0.009803,-2.454319,-0.287665,-9.153519,-6.784011,-3.537322,-7.171964,-7.751455,-2.453003,-6.342881,-5.328721,-7.609409,-2.404522,-9.647801,-2.873222,-3.705119,-1.975105,8.426085,5.304987,1.261470,-7.946423,-4.986594,3.730702,-0.036613,8.984343,4.164244,-1.981808,5.402038,-0.503775,9.211293,2.075117,-5.686711,0.927541,-9.772652,5.808771,-8.421547,-1.000914,-0.067690,4.821736,3.646983,-0.551178,5.988630,-6.922618,2.377996,-1.500045,3.682395,1.355345,0.471028,7.540128,7.476316,7.534842,7.417250,-8.511720,8.098060,-7.358095,-6.511770,-5.179494,0.617104,-1.783129,6.550458,-9.955393,-1.750813,6.486439,-4.314636,-7.710970,0.123530,0.281070,4.634796,5.048196,-4.366334,8.794501,-1.561561,-9.491025,-2.520200,-7.992795,6.901277,2.814561,-9.678520,5.135939,1.454888,-0.321672,-8.532900,9.531981,2.257135,-2.381448,-3.331021,5.952498,4.912835,4.829591,-2.823374,-6.543411,-9.714759,-6.566544,-7.745553,6.827615,8.613637,-7.326970,3.345275,0.158984,-5.462865,-7.504770,2.978480,0.688675,2.696608,-9.428006,1.372677,0.689394,-0.035985,-6.193628,-8.313675,0.201299,-3.329966,2.166147,1.749286,-6.872456,-9.337368,2.999558,-1.724853,8.630086,8.541397,-3.547588,-8.161013,-1.321668,5.761658,6.044838,-8.956459,3.503317,-1.758287,-8.057074,4.224040,-5.212320,-0.729437,1.441127,-1.075782,-4.896061,-8.503060,-2.252085,9.892283,-5.954976,-9.116416,-1.664043,-3.094809,1.615427,-9.722019,-8.223311,-1.376155,8.170426,-1.000636,-5.104249,9.876994,-3.059040,4.427421,-6.029756,6.790396,1.203127,-9.834048,-7.016636,5.065217,-3.950969,-8.685283,3.737341,4.905533,3.797957,2.923311,-9.726703,-0.996733,-7.607732,-5.083723,-9.130772,7.966696,7.404428,5.598883,-8.000158,1.688290,-3.541369,-2.150602,-3.762011,1.085399,7.160152,4.266812,5.890073,7.226637,5.192597,3.298471,3.502205,6.508460,-6.481086,7.132357,6.567720,7.968139,-8.390915,4.378440,7.865483,-1.461698,4.562758,2.309061,4.062757,2.840263,-3.182510,3.567073,7.701778,-2.378234,7.619477,1.763837,-0.876312,7.913243,-8.081995,0.314740,7.759653,-5.471402,-5.043565,2.093771,-3.480115,-1.795342,6.609925,8.456138,4.484793,0.887829,1.111147,2.839652,4.818453,-4.200879,-1.757170,-2.763836,8.153371,-9.186615,-0.098269,6.413865,-8.127854,3.126808,2.683765,4.732121,-2.695462,-1.077331,9.071233,6.418363,-0.924442,-2.676067,6.497642,-3.273101,4.794597,-9.325959,-8.077829,0.735427,-8.197374,5.188365,2.167387,-4.528437,7.447892,6.090934,-7.348988,1.432922,-8.240242,1.716952,-7.804856,-9.298147,5.300439,4.803271,-2.712266,-8.296015,2.932612,4.284060,-6.222999,-7.614794,-2.764306,-0.826929,-5.709901,0.506161,3.510502,2.504940,-2.764688,-9.991505,-1.572055,7.885187,-0.514009,9.571067,1.023806,-2.389261,-1.358248,1.395144,-6.717282,-8.042572,-4.182223,3.747319,-6.694078,9.239156,-2.483853,-0.880343,-2.217322,7.391105,-6.056612,-8.525200,5.830097,1.570324,-0.666956,-7.781317,3.988095,1.357271,-0.509505,1.566946,2.366772,5.667526,-0.668628,7.624537,-2.731722,9.910452,0.957235,-4.191823,-6.399537,3.840654,1.332399,8.552638,-3.837536,-7.360650,5.439989,0.605220,-9.213888,-9.336793,0.038632,0.175758,3.463286,-5.675249,7.060700,5.109393,-0.004188,-9.259676,0.208983,-3.766845,-4.658798,-9.802038,2.319284,0.230352,0.076457,-3.688721,2.977053,-6.307693,0.577936,2.857689,3.914868,-2.378963,2.783614,5.103397,8.111318,-1.626482,-0.912134,4.982888,8.162260,-8.545662,1.803428,5.533031,-9.042425,8.532729,-0.419477,-5.490672,2.305926,4.311439,0.291725,3.948216,3.512152,6.547236,9.169885,0.787561,3.307041,3.131712,-7.447291,2.547311,-8.693711,-1.834744,6.390485,-6.806677,-5.193386,-3.625706,1.179496,-2.858779,2.827571,-1.644961,-9.101112,2.804655,5.081764,-5.174282,9.954388,0.135281,-0.339726,-1.305784,-3.868212,6.996022,1.658576,5.362115,9.628841,3.790004,6.430591,0.562261,7.149547,9.134086,7.092007,-7.460307,3.227926,-6.491184,-2.303500,9.148815,-8.887495,9.967777,-5.112454,-9.829332,-5.914141,6.337712,1.227661,4.455065,5.214792,-5.201808,2.777317,-7.609147,-4.417851,-0.694492,6.424059,8.651325,-2.283361,6.170544,2.933625,1.226643,8.253149,6.296968,2.435387,8.417950,6.223156,-3.025935,4.988351,6.244439,0.586606,-1.895235,-3.994252,-8.462832,-8.425623,6.374472,6.815782,4.270017,2.965923,-7.585021,1.356061,-4.972090,3.670271,2.602517,9.072962,-5.002079,9.771891,8.226345,-6.819230,-5.374256,-8.071688,9.722640,-2.476758,-3.505310,2.485814,2.676802,7.287010,-3.474669,-0.271159,6.573757,-1.545865,-2.311688,-6.861989,1.462628,-2.946833,0.180102,-2.540945,-9.360154,5.692436,-4.745707,9.880897,2.254403,0.371869,6.490498,-8.796468,3.291356,-5.436898,-6.067412,-4.865492,-1.124483,9.368423,3.350511,-2.148612,8.687274,-3.687694,-9.012448,5.781594,-2.328401,2.239179,-2.492147,-7.973249,3.548620,4.558765,2.117924,5.588726,-6.715232,5.845263,-0.861718,-0.777773,4.653649,-0.360270,-1.849953,-1.005661,-3.799967,0.476198,7.342143,9.653061,-5.730717,-5.169199,-5.179226,0.091838,-3.380547,-4.186951,-6.438190,-7.283392,9.081401,-8.161846,-9.810704,2.610206,-8.044118,2.242986,-4.087204,-5.139125,-2.230696,5.311037,6.659999,9.313437,6.883269,-0.879511,-9.248719,-8.565473,9.225485,-0.117430,4.635238,0.015392,-8.595280,5.911340,8.660245,3.403076,-8.121541,-2.365142,-9.110745,1.046248,5.687055,1.188849,5.468503,0.817886,-4.879594,-1.365418,1.448015,-8.027382,7.338369,9.099032,9.462358,-6.298442,6.339156,2.914363,-0.311331,6.558591,1.557077,-8.978172,-2.499771,3.730657,0.565897,-6.636662,1.987487,-8.117278,-0.746829,5.965769,-0.928734,5.392730,-4.396148,4.167560,-0.340183,-4.165866,-6.419035,-7.832035,1.101351,6.417782,0.938381,7.099939,-5.529468,0.666887,4.259858,7.610892,-1.412581,4.665276,3.750730,-6.758189,-3.001227,7.264071,8.517721,2.820326,-8.702515,9.795775,8.211625,-2.007238,-2.654962,-0.367455,6.351815,7.916190,3.647791,-4.927210,-4.235122,-5.318157,-2.990175,4.929870,2.957179,-3.036539,8.391923,1.208726,-7.425643,5.923846,-9.292329,1.225458,7.064565,4.427640,9.285541,2.319107,-9.134300,-0.070810,-7.004755,-8.731783,7.399162,4.354270,-1.301728,8.301975,-4.635294,1.116427,-3.113933,-6.227565,-2.462604,-7.974025,-2.466544,0.501921,5.071576,5.941872,9.179098,4.247015,-8.996717,7.546320,-4.704722,6.807280,0.699353,9.565818,0.442630,8.100187,5.662586,-9.370381,-0.557969,5.144214,9.500409,0.235344,-2.728978,3.030873,6.540899,-2.041742,9.712797,-3.199272,-1.973271,2.400170,-2.315409,5.999804,-6.627891,5.950343,5.122195,4.044038,7.714423,5.819181,4.515969,-0.607609,-8.809706,-8.222047,-1.723430,-3.787671,-7.065623,5.757460,7.696786,1.845588,-3.729901,-1.528615,3.355144,-0.347000,-9.283507,-3.429537,9.606361,-5.855464,1.658927,9.697792,5.281544,7.119071,9.645177,-8.189022,1.092103,3.882751,-9.669066,-5.455491,7.251587,-7.615232,-8.393759,9.012342,9.209755,7.176337,3.632985,0.948446,4.148684,-8.214737,9.384187,2.671094,-5.842553,-3.333049,-0.061077,-1.018471,5.551878,2.771930,-9.810656,0.454868,-3.911977,-0.387001,-8.035111,-9.142728,-8.660894,-5.411561,-5.841489,3.665269,-5.872452,7.306152,-8.799484,-2.591188,2.810867,8.201086,0.245661,6.639985,-9.615427,0.672896,5.631846,-7.562398,-5.948480,4.154267,-3.611179,-8.205965,-0.941695,0.203732,8.597946,8.783023,0.656057,-5.095321,2.087729,-6.470261,-3.042762,-7.427482,2.732569,3.066747,-6.031153,-9.239734,5.422911,5.972734,3.288153,-4.351490,6.889838,3.084491,7.838630,7.754816,0.388621,-2.299569,6.934914,-6.995593,4.946551,-7.520094,-0.180298,-7.878067,5.205588,-9.111193,-0.245392,-6.662796,-1.489823,-8.375637,1.976118,-0.039896,2.469520,-4.895202,-2.293232,5.307258,2.573288,7.653506,1.766091,6.680391,6.706194,0.535401,7.532061,0.256772,8.945256,0.036964,5.551139,6.043029,-2.440332,3.760519,-3.337706,-6.377945,7.060906,-9.757173,8.026182,4.652849,4.992814,-3.315900,-7.220830,-7.638699,0.890289,2.997275,9.916330,1.264075,-9.603531,-7.723625,8.506814,-3.927897,-7.689537,0.356405,9.678763,9.071790,1.073244,9.868935,1.956740,3.479910,2.185388,-9.003390,-6.028533,-4.371426], dtype = "float64")#candidate|8122|(2496,)|const|float64
bop_8123 = relay.minimum(const_8108.astype('int16'), relay.reshape(const_8122.astype('int16'), relay.shape_of(const_8108))) # shape=(2496,)
func_5315_call = mod.get_global_var('func_5315')
func_5318_call = mutated_mod.get_global_var('func_5318')
call_8128 = relay.TupleGetItem(func_5315_call(relay.reshape(bop_8123.astype('float64'), [2496,])), 0)
call_8129 = relay.TupleGetItem(func_5318_call(relay.reshape(bop_8123.astype('float64'), [2496,])), 0)
func_6504_call = mod.get_global_var('func_6504')
func_6505_call = mutated_mod.get_global_var('func_6505')
call_8133 = relay.TupleGetItem(func_6504_call(), 0)
call_8134 = relay.TupleGetItem(func_6505_call(), 0)
output = relay.Tuple([call_8105,call_8107,bop_8123,call_8128,call_8133,])
output2 = relay.Tuple([call_8106,call_8109,bop_8123,call_8129,call_8134,])
func_8137 = relay.Function([], output)
mod['func_8137'] = func_8137
mod = relay.transform.InferType()(mod)
output = func_8137()
func_8138 = relay.Function([], output)
mutated_mod['func_8138'] = func_8138
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3358_call = mod.get_global_var('func_3358')
func_3359_call = mutated_mod.get_global_var('func_3359')
call_8162 = relay.TupleGetItem(func_3358_call(), 0)
call_8163 = relay.TupleGetItem(func_3359_call(), 0)
output = call_8162
output2 = call_8163
func_8176 = relay.Function([], output)
mod['func_8176'] = func_8176
mod = relay.transform.InferType()(mod)
output = func_8176()
func_8177 = relay.Function([], output)
mutated_mod['func_8177'] = func_8177
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5831_call = mod.get_global_var('func_5831')
func_5833_call = mutated_mod.get_global_var('func_5833')
call_8210 = func_5831_call()
call_8211 = func_5831_call()
output = call_8210
output2 = call_8211
func_8216 = relay.Function([], output)
mod['func_8216'] = func_8216
mod = relay.transform.InferType()(mod)
mutated_mod['func_8216'] = func_8216
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8216_call = mutated_mod.get_global_var('func_8216')
call_8217 = func_8216_call()
output = call_8217
func_8218 = relay.Function([], output)
mutated_mod['func_8218'] = func_8218
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4102_call = mod.get_global_var('func_4102')
func_4103_call = mutated_mod.get_global_var('func_4103')
call_8247 = relay.TupleGetItem(func_4102_call(), 0)
call_8248 = relay.TupleGetItem(func_4103_call(), 0)
func_7308_call = mod.get_global_var('func_7308')
func_7309_call = mutated_mod.get_global_var('func_7309')
call_8253 = relay.TupleGetItem(func_7308_call(), 2)
call_8254 = relay.TupleGetItem(func_7309_call(), 2)
func_807_call = mod.get_global_var('func_807')
func_809_call = mutated_mod.get_global_var('func_809')
call_8264 = relay.TupleGetItem(func_807_call(), 1)
call_8265 = relay.TupleGetItem(func_809_call(), 1)
output = relay.Tuple([call_8247,call_8253,call_8264,])
output2 = relay.Tuple([call_8248,call_8254,call_8265,])
func_8274 = relay.Function([], output)
mod['func_8274'] = func_8274
mod = relay.transform.InferType()(mod)
output = func_8274()
func_8275 = relay.Function([], output)
mutated_mod['func_8275'] = func_8275
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4102_call = mod.get_global_var('func_4102')
func_4103_call = mutated_mod.get_global_var('func_4103')
call_8281 = relay.TupleGetItem(func_4102_call(), 1)
call_8282 = relay.TupleGetItem(func_4103_call(), 1)
output = call_8281
output2 = call_8282
func_8309 = relay.Function([], output)
mod['func_8309'] = func_8309
mod = relay.transform.InferType()(mod)
output = func_8309()
func_8310 = relay.Function([], output)
mutated_mod['func_8310'] = func_8310
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2147_call = mod.get_global_var('func_2147')
func_2149_call = mutated_mod.get_global_var('func_2149')
call_8328 = relay.TupleGetItem(func_2147_call(), 0)
call_8329 = relay.TupleGetItem(func_2149_call(), 0)
output = relay.Tuple([call_8328,])
output2 = relay.Tuple([call_8329,])
func_8330 = relay.Function([], output)
mod['func_8330'] = func_8330
mod = relay.transform.InferType()(mod)
mutated_mod['func_8330'] = func_8330
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8330_call = mutated_mod.get_global_var('func_8330')
call_8331 = func_8330_call()
output = call_8331
func_8332 = relay.Function([], output)
mutated_mod['func_8332'] = func_8332
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3025_call = mod.get_global_var('func_3025')
func_3027_call = mutated_mod.get_global_var('func_3027')
call_8384 = relay.TupleGetItem(func_3025_call(), 0)
call_8385 = relay.TupleGetItem(func_3027_call(), 0)
func_8100_call = mod.get_global_var('func_8100')
func_8102_call = mutated_mod.get_global_var('func_8102')
call_8386 = relay.TupleGetItem(func_8100_call(), 0)
call_8387 = relay.TupleGetItem(func_8102_call(), 0)
output = relay.Tuple([call_8384,call_8386,])
output2 = relay.Tuple([call_8385,call_8387,])
func_8398 = relay.Function([], output)
mod['func_8398'] = func_8398
mod = relay.transform.InferType()(mod)
mutated_mod['func_8398'] = func_8398
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8398_call = mutated_mod.get_global_var('func_8398')
call_8399 = func_8398_call()
output = call_8399
func_8400 = relay.Function([], output)
mutated_mod['func_8400'] = func_8400
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1817_call = mod.get_global_var('func_1817')
func_1818_call = mutated_mod.get_global_var('func_1818')
call_8471 = func_1817_call()
call_8472 = func_1817_call()
var_8473 = relay.var("var_8473", dtype = "bool", shape = (168, 8))#candidate|8473|(168, 8)|var|bool
bop_8474 = relay.bitwise_xor(call_8471.astype('int32'), relay.reshape(var_8473.astype('int32'), relay.shape_of(call_8471))) # shape=(168, 8)
bop_8477 = relay.bitwise_xor(call_8472.astype('int32'), relay.reshape(var_8473.astype('int32'), relay.shape_of(call_8472))) # shape=(168, 8)
bop_8514 = relay.greater(var_8473.astype('bool'), relay.reshape(call_8471.astype('bool'), relay.shape_of(var_8473))) # shape=(168, 8)
bop_8517 = relay.greater(var_8473.astype('bool'), relay.reshape(call_8472.astype('bool'), relay.shape_of(var_8473))) # shape=(168, 8)
func_1069_call = mod.get_global_var('func_1069')
func_1073_call = mutated_mod.get_global_var('func_1073')
var_8519 = relay.var("var_8519", dtype = "float32", shape = (720,))#candidate|8519|(720,)|var|float32
call_8518 = relay.TupleGetItem(func_1069_call(relay.reshape(call_8471.astype('int8'), [16, 7, 12]), relay.reshape(var_8519.astype('float32'), [4, 180]), ), 1)
call_8520 = relay.TupleGetItem(func_1073_call(relay.reshape(call_8471.astype('int8'), [16, 7, 12]), relay.reshape(var_8519.astype('float32'), [4, 180]), ), 1)
output = relay.Tuple([bop_8474,bop_8514,call_8518,var_8519,])
output2 = relay.Tuple([bop_8477,bop_8517,call_8520,var_8519,])
func_8524 = relay.Function([var_8473,var_8519,], output)
mod['func_8524'] = func_8524
mod = relay.transform.InferType()(mod)
var_8525 = relay.var("var_8525", dtype = "bool", shape = (168, 8))#candidate|8525|(168, 8)|var|bool
var_8526 = relay.var("var_8526", dtype = "float32", shape = (720,))#candidate|8526|(720,)|var|float32
output = func_8524(var_8525,var_8526,)
func_8527 = relay.Function([var_8525,var_8526,], output)
mutated_mod['func_8527'] = func_8527
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1719_call = mod.get_global_var('func_1719')
func_1721_call = mutated_mod.get_global_var('func_1721')
call_8538 = relay.TupleGetItem(func_1719_call(), 1)
call_8539 = relay.TupleGetItem(func_1721_call(), 1)
func_8524_call = mod.get_global_var('func_8524')
func_8527_call = mutated_mod.get_global_var('func_8527')
const_8544 = relay.const([0.897154,-6.591648,3.289581,7.469427,1.960000,-7.421359,-3.508654,-3.023835,-5.575164,-0.280335,-2.325899,-6.726928,-3.045628,-8.607923,-1.171092,-2.946362,0.279113,-2.441516,-5.721066,-6.636474,3.096067,-7.837607,-1.418965,7.474881,-6.183244,9.213294,-0.016530,-9.909766,0.283743,-6.672884,6.798814,-9.252376,2.538932,0.237309,-4.404056,1.041905,-6.932197,3.014965,-2.357231,8.013027,3.926494,8.237387,-0.722920,-2.141945,3.738258,-9.398494,6.115761,7.798396,1.098329,0.084787,-6.346337,-0.113610,-3.222404,8.808884,-8.429654,3.772942,0.290219,1.317189,-4.101921,-4.583273,-7.298397,-5.132692,2.549051,-2.178729,0.149221,-6.414486,-7.669970,-2.503044,9.631132,2.168502,9.989966,2.718331,-0.328357,-0.964895,-2.343579,-8.274047,4.014728,5.327148,-5.857579,-5.861071,6.178796,-2.514008,5.318752,-3.334074,-5.212156,-2.583328,8.678424,2.691237,-1.433082,-1.132697,-4.713619,5.209707,-1.383855,-2.964236,-8.145769,-9.141490,9.054456,0.676258,1.408696,3.813598,0.137231,3.978597,5.224174,-5.123286,9.668456,6.166016,0.574396,6.114617,0.195468,1.439717,-2.454515,9.455884,-7.772724,-8.013284,-1.085144,9.231422,4.442523,-5.764157,7.268644,-4.579585,-8.710468,-3.726798,-0.927283,3.486834,3.641698,2.377978,-9.366474,-6.232038,0.643144,-8.301226,-9.205655,-8.734610,3.109895,2.992990,9.682091,8.688313,5.040800,-3.108580,9.922377,0.050617,-3.423864,2.155373,9.922388,5.038684,-2.126301,-0.861699,8.501255,5.749460,-0.100780,-3.880631,-1.630358,6.067130,7.200524,-9.213841,0.122115,-6.027079,-2.354650,-6.026508,0.382021,3.842577,5.790571,-2.219899,-2.492715,9.583103,-1.214188,-6.584908,2.345096,-2.944738,4.813187,-7.375591,-4.181167,-8.142832,-3.622730,-7.207504,-8.049778,1.129576,-2.049208,5.246688,5.345032,4.445049,-2.733903,9.631000,5.067209,-3.394055,-0.148078,4.291179,9.009593,5.437346,-1.907847,1.442363,8.870823,-2.067586,6.758098,-9.849901,4.103844,-3.938768,-0.169108,5.572196,-1.287491,-5.846402,-6.727351,5.569008,-9.844021,8.215105,9.318500,6.043481,-7.329395,-7.624106,1.231648,-0.483788,-4.143933,-9.907995,-7.173164,-1.290761,-8.382816,5.323489,-9.898798,-0.773220,-9.007851,1.628324,4.048278,-0.338015,-6.750209,8.996184,-0.041111,-0.542853,-7.450233,2.104993,0.939622,8.949409,-1.390653,-7.447454,-3.845577,3.996475,7.877836,-5.476727,-4.769968,-4.179885,6.329978,-4.157167,3.802234,-1.596925,-3.658990,7.179169,9.606618,3.248030,4.917830,-6.993309,-0.663166,-2.794461,-6.875282,-4.386141,-8.844702,1.576747,-8.515210,3.339290,8.534413,-7.594570,7.875062,8.882117,-6.435584,-1.691835,-8.997855,4.905732,2.225790,-2.562956,-4.302021,-9.414080,2.551361,-6.595314,1.888885,-3.272642,0.735840,-2.314604,-7.416613,2.819058,-7.853393,-3.899157,-7.283409,-1.382258,-5.962246,8.717050,4.902267,0.191741,-1.123110,3.166954,5.982247,-2.655018,-3.730790,6.537435,-8.537061,6.924323,-5.435023,9.701166,-8.460915,-0.467346,9.696928,9.003663,0.966014,9.952287,6.665640,-4.343157,-7.774368,4.317734,3.745528,4.277773,-1.866265,9.234850,2.875972,5.523201,-2.996484,-8.437924,-0.374942,-2.934277,-0.250408,8.517652,-9.374097,-4.830748,-0.580242,3.911174,-5.415774,1.710330,-9.084586,7.118094,1.458059,9.819077,7.321019,0.195190,9.349380,1.595076,-5.344053,2.419569,-0.666184,6.722126,-5.347038,6.504311,-9.841459,4.028737,2.832081,-8.028698,1.920229,-4.955703,5.912114,-8.000538,8.649812,-1.336865,-3.520238,6.669319,6.119958,8.999613,0.677389,-8.105500,3.866501,-2.356307,-1.394063,-4.883189,-4.609032,-9.798926,-7.465630,7.024061,1.568680,3.193371,6.787708,-1.322541,-4.864032,-5.147996,-9.537624,0.459540,-8.358163,-9.116020,-4.467761,1.865822,5.182028,-5.493968,-7.428831,-6.902906,6.833683,-5.184604,-2.760069,2.775588,-6.262556,-3.944565,-5.079994,4.056031,-6.515120,2.990271,-1.455200,7.000551,8.993619,3.670619,8.347462,5.857301,-5.971838,-3.470028,-5.989477,1.347372,9.185622,-2.850794,3.229493,6.046579,8.279499,-3.408764,7.631532,-3.784006,4.876002,-0.907414,9.143431,7.480663,9.216082,-7.772980,5.495766,1.192734,0.616804,-6.670915,6.505135,-2.800110,-5.162332,-3.588051,4.521167,-0.283603,-9.467353,9.047577,-8.819418,7.598227,-5.215417,-9.927268,2.862796,1.690525,9.351660,4.009166,8.286392,8.556820,-8.063083,9.432567,-9.959297,-4.333162,-9.245942,-5.827126,-8.163293,3.076937,3.451626,-1.028310,1.155531,-8.513001,4.690499,0.529088,5.770686,0.129475,-7.004587,7.308094,-2.481603,8.060919,-3.982887,-9.848243,-9.617445,5.569208,0.094459,-6.417964,8.462063,4.693194,2.648213,5.344596,9.618092,-5.724588,7.761714,2.871085,-4.832003,9.986632,-7.287552,5.143837,9.027951,0.903974,0.881070,7.937081,-6.878008,0.812710,7.736187,-9.184151,2.134686,-9.495179,8.608499,0.946961,-7.208754,-1.099227,-8.538200,9.270859,-4.181864,-6.051429,9.042304,7.626556,-0.688339,0.190985,1.465497,-8.201973,-4.466979,-8.012937,-2.885117,5.693083,-2.382584,-2.395322,-1.726836,-4.378757,-5.706219,-6.071299,-8.133759,8.917657,-0.225678,-0.968793,-9.472992,5.373355,0.526786,-7.323143,4.109022,-3.812914,0.467071,-3.699177,5.170886,6.279513,9.720469,7.505792,8.391316,-0.945559,9.929188,7.253722,3.509507,-3.427721,-2.221754,3.476770,0.301021,5.955302,-2.392068,-0.521838,-3.829219,4.306510,5.573660,2.113477,6.206217,-9.713296,-5.501058,-5.550974,-4.961640,-3.843218,-1.962261,-7.222556,-9.494809,-5.196021,0.047392,-1.204643,-0.166411,5.441948,-6.794462,-2.276369,-3.176741,-7.273064,2.151549,3.698486,5.335331,-0.065341,7.492040,9.616099,1.654171,-4.441545,-2.985395,-9.325822,-8.604601,-9.615041,5.363052,-0.870844,-6.226295,-8.685486,5.409886,3.249733,-9.660070,-4.584229,7.739131,2.457243,-6.180644,1.894302,-7.512000,7.798705,-1.690257,3.501492,2.369018,7.812686,-3.459647,6.196371,3.162708,-1.090855,-8.566369,8.514136,1.405679,-1.923344,-6.140996,-5.214359,-6.511616,2.522143,-6.566812,-2.598500,-8.170739,5.278746,8.367774,1.722239,7.949490,-9.440138,-3.009747,5.949891,-9.259659,7.538771,-4.526801,2.776617,-1.560248,6.947018,9.796203,-2.682058,2.161183,-3.071849,-4.427868,-4.072930,-4.337873,0.455502,-3.300673,-5.921156,3.990573,-3.219120,7.106893,-7.043810,-8.940922,-0.598360,0.888202,-3.937521,-1.578101,4.129939,-2.601917,6.741363,5.065376,9.767402,3.165441,-4.223330,-6.074809,-2.381402,7.463107,1.371045,-5.279787,4.440811,-3.781384,8.071222,2.444417,7.416260,-8.759465,-3.728619,9.660413,5.889026,7.010397,5.729911,-4.775734,5.835289,-1.978440,-5.511744,2.845579,-5.174919,9.216792,-0.221161,4.208729,-2.647016,-5.247569,9.302615,-4.280143,8.695107,-2.539601,9.560338,-2.500087,-2.304408,1.543458,-4.012587,2.453090,-4.329562,-3.048324,6.513775,-5.948501,9.268977,-1.910786,3.181310,4.807371,-3.757680,9.808413,4.615790,-4.881064,8.272835,-4.624143,-6.675136,-5.005655,-6.023866,-3.712891,-7.983271,6.021705,1.821765,-3.911833,-6.407390,5.036363,-6.199413,7.044100,9.368116,0.405241,7.683358,-3.123874,2.941678,7.195459,3.511692,6.986652,-1.585361,7.478402,-2.234648,-6.222678,5.867082,8.701781,8.906695,9.803789,4.938849,5.865481,-4.440327], dtype = "float32")#candidate|8544|(720,)|const|float32
call_8543 = relay.TupleGetItem(func_8524_call(relay.reshape(call_8538.astype('bool'), [168, 8]), relay.reshape(const_8544.astype('float32'), [720,]), ), 0)
call_8545 = relay.TupleGetItem(func_8527_call(relay.reshape(call_8538.astype('bool'), [168, 8]), relay.reshape(const_8544.astype('float32'), [720,]), ), 0)
output = relay.Tuple([call_8538,call_8543,const_8544,])
output2 = relay.Tuple([call_8539,call_8545,const_8544,])
func_8549 = relay.Function([], output)
mod['func_8549'] = func_8549
mod = relay.transform.InferType()(mod)
mutated_mod['func_8549'] = func_8549
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8549_call = mutated_mod.get_global_var('func_8549')
call_8550 = func_8549_call()
output = call_8550
func_8551 = relay.Function([], output)
mutated_mod['func_8551'] = func_8551
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6016_call = mod.get_global_var('func_6016')
func_6018_call = mutated_mod.get_global_var('func_6018')
call_8596 = relay.TupleGetItem(func_6016_call(), 0)
call_8597 = relay.TupleGetItem(func_6018_call(), 0)
output = call_8596
output2 = call_8597
func_8598 = relay.Function([], output)
mod['func_8598'] = func_8598
mod = relay.transform.InferType()(mod)
output = func_8598()
func_8599 = relay.Function([], output)
mutated_mod['func_8599'] = func_8599
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7274_call = mod.get_global_var('func_7274')
func_7276_call = mutated_mod.get_global_var('func_7276')
call_8609 = relay.TupleGetItem(func_7274_call(), 1)
call_8610 = relay.TupleGetItem(func_7276_call(), 1)
func_1069_call = mod.get_global_var('func_1069')
func_1073_call = mutated_mod.get_global_var('func_1073')
var_8615 = relay.var("var_8615", dtype = "int8", shape = (1344,))#candidate|8615|(1344,)|var|int8
call_8614 = relay.TupleGetItem(func_1069_call(relay.reshape(var_8615.astype('int8'), [16, 7, 12]), relay.reshape(call_8609.astype('float32'), [4, 180]), ), 3)
call_8616 = relay.TupleGetItem(func_1073_call(relay.reshape(var_8615.astype('int8'), [16, 7, 12]), relay.reshape(call_8609.astype('float32'), [4, 180]), ), 3)
bop_8622 = relay.floor_mod(call_8609.astype('float64'), relay.reshape(call_8614.astype('float64'), relay.shape_of(call_8609))) # shape=(8, 6, 15)
bop_8625 = relay.floor_mod(call_8610.astype('float64'), relay.reshape(call_8616.astype('float64'), relay.shape_of(call_8610))) # shape=(8, 6, 15)
func_5831_call = mod.get_global_var('func_5831')
func_5833_call = mutated_mod.get_global_var('func_5833')
call_8653 = func_5831_call()
call_8654 = func_5831_call()
func_4856_call = mod.get_global_var('func_4856')
func_4858_call = mutated_mod.get_global_var('func_4858')
call_8664 = func_4856_call()
call_8665 = func_4856_call()
output = relay.Tuple([var_8615,bop_8622,call_8653,call_8664,])
output2 = relay.Tuple([var_8615,bop_8625,call_8654,call_8665,])
func_8666 = relay.Function([var_8615,], output)
mod['func_8666'] = func_8666
mod = relay.transform.InferType()(mod)
mutated_mod['func_8666'] = func_8666
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8667 = relay.var("var_8667", dtype = "int8", shape = (1344,))#candidate|8667|(1344,)|var|int8
func_8666_call = mutated_mod.get_global_var('func_8666')
call_8668 = func_8666_call(var_8667)
output = call_8668
func_8669 = relay.Function([var_8667], output)
mutated_mod['func_8669'] = func_8669
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8398_call = mod.get_global_var('func_8398')
func_8400_call = mutated_mod.get_global_var('func_8400')
call_8696 = relay.TupleGetItem(func_8398_call(), 1)
call_8697 = relay.TupleGetItem(func_8400_call(), 1)
func_2822_call = mod.get_global_var('func_2822')
func_2825_call = mutated_mod.get_global_var('func_2825')
var_8700 = relay.var("var_8700", dtype = "float32", shape = (720,))#candidate|8700|(720,)|var|float32
call_8699 = relay.TupleGetItem(func_2822_call(relay.reshape(var_8700.astype('float32'), [720,])), 1)
call_8701 = relay.TupleGetItem(func_2825_call(relay.reshape(var_8700.astype('float32'), [720,])), 1)
func_3034_call = mod.get_global_var('func_3034')
func_3035_call = mutated_mod.get_global_var('func_3035')
call_8712 = relay.TupleGetItem(func_3034_call(), 0)
call_8713 = relay.TupleGetItem(func_3035_call(), 0)
func_3344_call = mod.get_global_var('func_3344')
func_3346_call = mutated_mod.get_global_var('func_3346')
call_8720 = func_3344_call()
call_8721 = func_3344_call()
func_700_call = mod.get_global_var('func_700')
func_701_call = mutated_mod.get_global_var('func_701')
call_8727 = relay.TupleGetItem(func_700_call(), 0)
call_8728 = relay.TupleGetItem(func_701_call(), 0)
output = relay.Tuple([call_8696,call_8699,var_8700,call_8712,call_8720,call_8727,])
output2 = relay.Tuple([call_8697,call_8701,var_8700,call_8713,call_8721,call_8728,])
func_8729 = relay.Function([var_8700,], output)
mod['func_8729'] = func_8729
mod = relay.transform.InferType()(mod)
mutated_mod['func_8729'] = func_8729
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8730 = relay.var("var_8730", dtype = "float32", shape = (720,))#candidate|8730|(720,)|var|float32
func_8729_call = mutated_mod.get_global_var('func_8729')
call_8731 = func_8729_call(var_8730)
output = call_8731
func_8732 = relay.Function([var_8730], output)
mutated_mod['func_8732'] = func_8732
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6219_call = mod.get_global_var('func_6219')
func_6220_call = mutated_mod.get_global_var('func_6220')
call_8863 = func_6219_call()
call_8864 = func_6219_call()
output = call_8863
output2 = call_8864
func_8873 = relay.Function([], output)
mod['func_8873'] = func_8873
mod = relay.transform.InferType()(mod)
output = func_8873()
func_8874 = relay.Function([], output)
mutated_mod['func_8874'] = func_8874
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5421_call = mod.get_global_var('func_5421')
func_5422_call = mutated_mod.get_global_var('func_5422')
call_8884 = relay.TupleGetItem(func_5421_call(), 3)
call_8885 = relay.TupleGetItem(func_5422_call(), 3)
output = call_8884
output2 = call_8885
func_8893 = relay.Function([], output)
mod['func_8893'] = func_8893
mod = relay.transform.InferType()(mod)
mutated_mod['func_8893'] = func_8893
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8893_call = mutated_mod.get_global_var('func_8893')
call_8894 = func_8893_call()
output = call_8894
func_8895 = relay.Function([], output)
mutated_mod['func_8895'] = func_8895
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7492_call = mod.get_global_var('func_7492')
func_7494_call = mutated_mod.get_global_var('func_7494')
call_8945 = relay.TupleGetItem(func_7492_call(), 0)
call_8946 = relay.TupleGetItem(func_7494_call(), 0)
output = relay.Tuple([call_8945,])
output2 = relay.Tuple([call_8946,])
func_8958 = relay.Function([], output)
mod['func_8958'] = func_8958
mod = relay.transform.InferType()(mod)
mutated_mod['func_8958'] = func_8958
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8958_call = mutated_mod.get_global_var('func_8958')
call_8959 = func_8958_call()
output = call_8959
func_8960 = relay.Function([], output)
mutated_mod['func_8960'] = func_8960
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1194_call = mod.get_global_var('func_1194')
func_1195_call = mutated_mod.get_global_var('func_1195')
call_8985 = relay.TupleGetItem(func_1194_call(), 1)
call_8986 = relay.TupleGetItem(func_1195_call(), 1)
output = call_8985
output2 = call_8986
func_8988 = relay.Function([], output)
mod['func_8988'] = func_8988
mod = relay.transform.InferType()(mod)
mutated_mod['func_8988'] = func_8988
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8988_call = mutated_mod.get_global_var('func_8988')
call_8989 = func_8988_call()
output = call_8989
func_8990 = relay.Function([], output)
mutated_mod['func_8990'] = func_8990
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8988_call = mod.get_global_var('func_8988')
func_8990_call = mutated_mod.get_global_var('func_8990')
call_8994 = func_8988_call()
call_8995 = func_8988_call()
func_1306_call = mod.get_global_var('func_1306')
func_1307_call = mutated_mod.get_global_var('func_1307')
call_9001 = func_1306_call()
call_9002 = func_1306_call()
func_6280_call = mod.get_global_var('func_6280')
func_6281_call = mutated_mod.get_global_var('func_6281')
call_9009 = relay.TupleGetItem(func_6280_call(), 0)
call_9010 = relay.TupleGetItem(func_6281_call(), 0)
func_2906_call = mod.get_global_var('func_2906')
func_2908_call = mutated_mod.get_global_var('func_2908')
call_9018 = relay.TupleGetItem(func_2906_call(), 1)
call_9019 = relay.TupleGetItem(func_2908_call(), 1)
output = relay.Tuple([call_8994,call_9001,call_9009,call_9018,])
output2 = relay.Tuple([call_8995,call_9002,call_9010,call_9019,])
func_9020 = relay.Function([], output)
mod['func_9020'] = func_9020
mod = relay.transform.InferType()(mod)
mutated_mod['func_9020'] = func_9020
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9020_call = mutated_mod.get_global_var('func_9020')
call_9021 = func_9020_call()
output = call_9021
func_9022 = relay.Function([], output)
mutated_mod['func_9022'] = func_9022
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1428_call = mod.get_global_var('func_1428')
func_1429_call = mutated_mod.get_global_var('func_1429')
call_9173 = relay.TupleGetItem(func_1428_call(), 2)
call_9174 = relay.TupleGetItem(func_1429_call(), 2)
output = call_9173
output2 = call_9174
func_9179 = relay.Function([], output)
mod['func_9179'] = func_9179
mod = relay.transform.InferType()(mod)
output = func_9179()
func_9180 = relay.Function([], output)
mutated_mod['func_9180'] = func_9180
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6443_call = mod.get_global_var('func_6443')
func_6444_call = mutated_mod.get_global_var('func_6444')
call_9193 = relay.TupleGetItem(func_6443_call(), 0)
call_9194 = relay.TupleGetItem(func_6444_call(), 0)
func_1194_call = mod.get_global_var('func_1194')
func_1195_call = mutated_mod.get_global_var('func_1195')
call_9225 = relay.TupleGetItem(func_1194_call(), 3)
call_9226 = relay.TupleGetItem(func_1195_call(), 3)
func_6162_call = mod.get_global_var('func_6162')
func_6164_call = mutated_mod.get_global_var('func_6164')
call_9237 = func_6162_call()
call_9238 = func_6162_call()
func_7643_call = mod.get_global_var('func_7643')
func_7644_call = mutated_mod.get_global_var('func_7644')
call_9245 = relay.TupleGetItem(func_7643_call(), 0)
call_9246 = relay.TupleGetItem(func_7644_call(), 0)
output = relay.Tuple([call_9193,call_9225,call_9237,call_9245,])
output2 = relay.Tuple([call_9194,call_9226,call_9238,call_9246,])
func_9254 = relay.Function([], output)
mod['func_9254'] = func_9254
mod = relay.transform.InferType()(mod)
mutated_mod['func_9254'] = func_9254
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9254_call = mutated_mod.get_global_var('func_9254')
call_9255 = func_9254_call()
output = call_9255
func_9256 = relay.Function([], output)
mutated_mod['func_9256'] = func_9256
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5573_call = mod.get_global_var('func_5573')
func_5574_call = mutated_mod.get_global_var('func_5574')
call_9262 = relay.TupleGetItem(func_5573_call(), 0)
call_9263 = relay.TupleGetItem(func_5574_call(), 0)
func_5154_call = mod.get_global_var('func_5154')
func_5156_call = mutated_mod.get_global_var('func_5156')
call_9266 = func_5154_call()
call_9267 = func_5154_call()
func_4478_call = mod.get_global_var('func_4478')
func_4480_call = mutated_mod.get_global_var('func_4480')
call_9268 = relay.TupleGetItem(func_4478_call(relay.reshape(call_9266.astype('float64'), [16, 7, 12])), 0)
call_9269 = relay.TupleGetItem(func_4480_call(relay.reshape(call_9266.astype('float64'), [16, 7, 12])), 0)
func_8598_call = mod.get_global_var('func_8598')
func_8599_call = mutated_mod.get_global_var('func_8599')
call_9274 = func_8598_call()
call_9275 = func_8598_call()
output = relay.Tuple([call_9262,call_9266,call_9268,call_9274,])
output2 = relay.Tuple([call_9263,call_9267,call_9269,call_9275,])
func_9291 = relay.Function([], output)
mod['func_9291'] = func_9291
mod = relay.transform.InferType()(mod)
output = func_9291()
func_9292 = relay.Function([], output)
mutated_mod['func_9292'] = func_9292
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1954_call = mod.get_global_var('func_1954')
func_1955_call = mutated_mod.get_global_var('func_1955')
call_9330 = relay.TupleGetItem(func_1954_call(), 0)
call_9331 = relay.TupleGetItem(func_1955_call(), 0)
func_5154_call = mod.get_global_var('func_5154')
func_5156_call = mutated_mod.get_global_var('func_5156')
call_9334 = func_5154_call()
call_9335 = func_5154_call()
func_3218_call = mod.get_global_var('func_3218')
func_3220_call = mutated_mod.get_global_var('func_3220')
const_9352 = relay.const([7.818985,7.507217,-2.641808,-6.464237,-9.455709,4.836502,-1.520162,3.737392,8.242901,-4.137414,-2.058527,4.799756,2.634052,1.761465,-8.191441,6.557454,2.135672,-3.042616,-0.528492,-6.784517,5.617663,1.488679,-3.125930,2.436158,-1.224186,2.131714,5.239768,-9.334095,-4.820776,-3.128642,-6.808040,1.923664,-6.309250,-9.264605,-1.096716,-3.766738,-0.738882,5.791393,-7.686126,-3.635542,7.258766,1.582520,8.387873,9.161239,4.552217,-6.507410,-0.959860,7.850824,9.125052,3.941050,5.008058,4.989030,7.116154,-3.149369,-4.083677,-9.910451,0.442769,-1.194689,-2.510145,-8.428432,2.086130,9.537329,-9.174573,9.576069,-1.373365,6.192172,-5.509403,7.635653,-5.508391,7.165654,0.995217,-1.427599,8.522435,4.066659,-4.950144,1.449487,-3.788042,6.804523,-7.434812,-9.767648,4.756866,-7.429915,-9.832770,2.063269,1.098929,8.041156,0.887876,4.934410,2.904295,-1.834657,1.708679,1.756745,-9.145042,-3.884690,9.156929,-0.500850,6.568204,-7.764653,-4.761583,-3.036446,-4.527086,-9.227809,2.164033,-2.936090,-6.197500,-6.877532,2.618383,2.959762,7.477154,-8.276398,-3.262968,5.505071,9.942726,-2.902953,-8.057251,8.869784,-2.120060,-3.365081,-4.250857,-0.968957,8.860051,-5.487051,1.191396,-4.007994,0.703228,7.949131,3.107621,2.277400,6.442806,5.518020,-1.750830,-2.042967,-4.836913,-7.967968,-3.931709,-5.783080,-6.148589,-5.072811,-0.846496,-5.679536,0.410035,-5.355750,-4.745605,2.522922,9.708513,7.582870,7.642595,-1.857640,-4.041177,-1.565166,-9.633192,-4.684403,2.451508,-8.709591,-0.352126,-3.669831,-5.851709,-2.760706,-7.268765,-0.405174,-6.865792,-0.078680,-6.120400,-6.966326,8.006644,3.184497,4.683409,-0.379938,-1.016707,-6.138061,5.455845,-4.140002,1.225268,1.931473,-8.763029,1.237754,7.937109,-2.005021,6.730814,5.955453,-8.655559,-9.220905,-5.211900,-3.945917,4.635888,6.668329,5.174584,-3.602360,6.294868,7.647109,-0.394572,-8.125596,-2.736749,5.637289,0.989883,-2.844981,5.966994,5.183192,-4.676773,-7.998859,9.594241,-3.248814,6.321423,2.634662,-0.591427,-9.880152,-1.148338,5.695424,0.480495,-0.937822,7.928357,-1.997446,3.255336,-2.046310,-3.992191,5.146155,8.880045,-8.181693,-8.475286,0.555072,-2.443369,8.137206,-8.757737,2.364586,3.948022,2.784024,9.939048,2.096876,2.612878,-5.323156,-1.696648,9.410616,7.368135,-7.966897,-7.829694,6.642260,8.993961,6.170361,4.833184,-2.212106,-5.257254,8.256995,2.679357,-5.950161,-3.942908,-8.067602,-9.613127,-0.096918,-7.718775,5.783771,-1.492571,3.335479,-2.517454,-1.312923,-4.745202,-9.476514,-4.040207,-6.134101,9.610479,-0.543995,3.853493,-6.088353,0.091318,5.819038,-2.211791,-3.558516,8.051039,-3.508125,-4.525776,3.323898,0.198217,0.543637,6.195795,-8.153784,-1.150002,1.725447,4.412350,0.624016,-3.047608,-9.862540,9.903661,-1.186410,1.586218,-5.624469,5.588424,-7.976282,-3.589811,-4.074590,6.191660,-9.011971,0.797795,7.553599,3.286510,0.752631,1.727631,-4.471250,-8.615788,-2.968743,-3.919869,4.796352,-2.674975,-5.465653,3.635657,6.000555,0.893535,-0.179562,6.608699,-7.919790,-9.602033,-8.724796,7.241358,7.240208,1.392663,6.757728,-4.290478,9.950592,-3.913928,0.081633,-5.363636,-9.707630,-2.191507,7.157259,-4.975420,7.888683,0.257732,7.485181,-5.457807,5.201413,-3.928156,9.440821,7.810990,6.217842,5.963833,-8.193162,3.751459,6.234673,7.969094,8.512107,-1.466482,7.076854,8.792326,2.300837,0.452156,9.048979,5.505400,-5.216694,-1.903535,6.265325,4.690432,6.685356,-4.069504,-6.288127,1.358924,-2.626367,-9.315959,-8.681292,-6.427324,-0.592627,-9.494246,4.258009,-4.479080,-4.804917,5.368682,-3.556478,7.350378,-2.218312,3.795079,-6.297993,-6.430144,-3.353144,-3.345497,-4.638081,-3.747965,-8.657860,6.077680,3.217456,9.703398,-2.202799,6.723449,7.419558,-1.106854,-0.963246,8.288937,9.041934,1.309325,-2.982192,-1.636447,-9.774371,6.295071,5.273250,-9.052492,6.329502,-6.590217,8.069714,-1.981027,2.693906,-9.186913,-7.153347,-4.933505,2.970893,-2.521979,8.399533,0.859490,3.085531,-9.463003,9.725386,3.865445,-0.568883,-7.639283,9.549067,4.149507,5.409862,9.656885,0.016546,5.776685,1.735748,-4.120595,-8.914503,5.497336,8.801445,-5.036308,-6.947823,7.908672,-2.966962,-8.052735,-2.021062,-0.673068,8.469203,-5.810546,6.850534,-6.385155,1.289678,1.913918,-8.451336,6.386083,-9.187120,-4.345706,-5.670521,5.815167,9.226960,-5.924214,5.546924,7.219115,-0.972465,9.554429,-2.111813,2.041877,5.906183,5.329688,7.959893,2.569260,7.834209,-6.025047,6.801191,-2.521453,-1.651255,-9.246929,3.655190,-1.082598,5.429034,1.153296,1.810509,6.794045,9.218244,-7.149897,-8.044969,-5.462428,7.193346,6.707009,-4.792915,2.803366,-1.197248,0.046361,-5.415707,-5.581399,2.048925,4.759219,-7.029521,1.692628,2.327056,-6.111648,4.655871,0.146384,4.564757,7.567895,-4.277583,-3.854289,7.540611,-5.166110,-9.476828,7.309999,-0.421534,-5.454896,-5.361901,-5.229619,-6.445636,1.993982,2.822248,-6.725975,5.768956,3.946134,8.362671,-5.791614,5.851481,-8.763960,6.516612,5.058785,-6.261603,-4.444989,-6.988080,-9.002926,0.062811,-5.326228,4.739708,-5.196563,1.848422,-7.976427,4.958919,5.741581,-2.131406,-4.815793,8.409508,1.336608,-1.179305,-7.281239,7.781214,7.517880,-6.046610,0.378288,-2.549219,-4.987916,8.457452,-9.027455,-2.812944,3.917207,5.806236,-4.447719,-8.370417,-8.443574,-8.733307,4.174508,-7.538201,-5.028673,-8.242343,-3.460079,2.969225,-3.539802,0.189624,-1.635531,-9.467141,-2.219849,2.844434,7.026990,4.876907,-6.230183,-3.298986,8.657766,-3.957577,-2.622276,7.971220,-7.355741,3.189864,-4.600679,0.095047,-7.913210,-7.260973,-6.819108,-7.616702,3.593813,0.500926,2.657303,8.446804,-3.189415,-6.563739,0.891160,9.079661,2.422168,-8.585301,-5.018313,-2.307973,-3.544808,8.844043,-8.981915,-9.466127,6.944824,-8.503601,5.050063,7.815085,7.423952,-0.938349,-6.480972,-0.241168,3.401227,9.440956,1.784914,-2.487489,-8.184031,-0.636730,1.584668,2.760933,-0.401699,0.275699,3.728390,-0.801822,5.759983,5.209506,-2.058066,3.491275,9.832979,5.709446,-0.083480,-4.804785,-1.745827,5.971282,5.139670,-9.997804,-0.159688,4.780006,5.936553,2.288822,1.750618,-2.392473,-4.568864,7.598795,-6.008001,-1.340358,-3.948010,5.426580,0.212790,8.301256,5.201727,7.802441,2.052456,-5.871012,-5.324746,8.798060,-6.516834,3.929867,9.364751,-6.914374,-3.866556,-6.382732,5.042363,4.077064,8.903655,9.421744,-8.151770,-9.686072,-3.945113,-5.255754,-7.817844,-4.789161,7.592321,-6.427680,-5.238843,-2.704003,9.727403,2.468208,5.619409,-6.137355,8.926873,5.866118,-9.131506,-9.447597,-3.589565,1.950541,-8.545945,-4.289056,7.987486,2.713768,1.814416,-1.109167,-6.776857,-0.415569,-9.158016,-4.161413,-0.388617,-2.107120,-0.130117,9.882691,8.623688,5.093897,-7.135827,-1.635329,-9.341727,4.777622,4.720455,7.473352,-3.439744,3.906875,-0.378311,-0.231452,-2.458721,1.296706,3.301271,1.341718,2.663708,3.951067,-3.129451,8.266840,8.743182,2.423464,2.557648,-2.647395,-7.908940,-9.918607,-2.899542,4.726322,8.050426,7.319572,-0.201750,-6.423906,1.957793,5.537353,0.746737,2.175554,-5.500752,6.374329,0.209600,8.170930], dtype = "float32")#candidate|9352|(720,)|const|float32
call_9351 = relay.TupleGetItem(func_3218_call(relay.reshape(const_9352.astype('float32'), [720,])), 1)
call_9353 = relay.TupleGetItem(func_3220_call(relay.reshape(const_9352.astype('float32'), [720,])), 1)
output = relay.Tuple([call_9330,call_9334,call_9351,const_9352,])
output2 = relay.Tuple([call_9331,call_9335,call_9353,const_9352,])
func_9377 = relay.Function([], output)
mod['func_9377'] = func_9377
mod = relay.transform.InferType()(mod)
mutated_mod['func_9377'] = func_9377
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9377_call = mutated_mod.get_global_var('func_9377')
call_9378 = func_9377_call()
output = call_9378
func_9379 = relay.Function([], output)
mutated_mod['func_9379'] = func_9379
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8958_call = mod.get_global_var('func_8958')
func_8960_call = mutated_mod.get_global_var('func_8960')
call_9404 = relay.TupleGetItem(func_8958_call(), 0)
call_9405 = relay.TupleGetItem(func_8960_call(), 0)
output = call_9404
output2 = call_9405
func_9406 = relay.Function([], output)
mod['func_9406'] = func_9406
mod = relay.transform.InferType()(mod)
output = func_9406()
func_9407 = relay.Function([], output)
mutated_mod['func_9407'] = func_9407
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9417 = relay.var("var_9417", dtype = "int8", shape = (13, 1, 10))#candidate|9417|(13, 1, 10)|var|int8
var_9418 = relay.var("var_9418", dtype = "int8", shape = (13, 7, 10))#candidate|9418|(13, 7, 10)|var|int8
bop_9419 = relay.right_shift(var_9417.astype('int8'), var_9418.astype('int8')) # shape=(13, 7, 10)
func_6848_call = mod.get_global_var('func_6848')
func_6849_call = mutated_mod.get_global_var('func_6849')
call_9422 = func_6848_call()
call_9423 = func_6848_call()
output = relay.Tuple([bop_9419,call_9422,])
output2 = relay.Tuple([bop_9419,call_9423,])
func_9432 = relay.Function([var_9417,var_9418,], output)
mod['func_9432'] = func_9432
mod = relay.transform.InferType()(mod)
mutated_mod['func_9432'] = func_9432
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9432_call = mutated_mod.get_global_var('func_9432')
var_9434 = relay.var("var_9434", dtype = "int8", shape = (13, 1, 10))#candidate|9434|(13, 1, 10)|var|int8
var_9435 = relay.var("var_9435", dtype = "int8", shape = (13, 7, 10))#candidate|9435|(13, 7, 10)|var|int8
call_9433 = func_9432_call(var_9434,var_9435,)
output = call_9433
func_9436 = relay.Function([var_9434,var_9435,], output)
mutated_mod['func_9436'] = func_9436
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6119_call = mod.get_global_var('func_6119')
func_6121_call = mutated_mod.get_global_var('func_6121')
call_9446 = func_6119_call()
call_9447 = func_6119_call()
output = relay.Tuple([call_9446,])
output2 = relay.Tuple([call_9447,])
func_9493 = relay.Function([], output)
mod['func_9493'] = func_9493
mod = relay.transform.InferType()(mod)
mutated_mod['func_9493'] = func_9493
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9493_call = mutated_mod.get_global_var('func_9493')
call_9494 = func_9493_call()
output = call_9494
func_9495 = relay.Function([], output)
mutated_mod['func_9495'] = func_9495
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1972_call = mod.get_global_var('func_1972')
func_1973_call = mutated_mod.get_global_var('func_1973')
call_9553 = relay.TupleGetItem(func_1972_call(), 0)
call_9554 = relay.TupleGetItem(func_1973_call(), 0)
var_9591 = relay.var("var_9591", dtype = "bool", shape = (168, 8))#candidate|9591|(168, 8)|var|bool
bop_9592 = relay.multiply(call_9553.astype('int16'), relay.reshape(var_9591.astype('int16'), relay.shape_of(call_9553))) # shape=(168, 8)
bop_9595 = relay.multiply(call_9554.astype('int16'), relay.reshape(var_9591.astype('int16'), relay.shape_of(call_9554))) # shape=(168, 8)
output = bop_9592
output2 = bop_9595
func_9606 = relay.Function([var_9591,], output)
mod['func_9606'] = func_9606
mod = relay.transform.InferType()(mod)
mutated_mod['func_9606'] = func_9606
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9607 = relay.var("var_9607", dtype = "bool", shape = (168, 8))#candidate|9607|(168, 8)|var|bool
func_9606_call = mutated_mod.get_global_var('func_9606')
call_9608 = func_9606_call(var_9607)
output = call_9608
func_9609 = relay.Function([var_9607], output)
mutated_mod['func_9609'] = func_9609
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8958_call = mod.get_global_var('func_8958')
func_8960_call = mutated_mod.get_global_var('func_8960')
call_9626 = relay.TupleGetItem(func_8958_call(), 0)
call_9627 = relay.TupleGetItem(func_8960_call(), 0)
var_9640 = relay.var("var_9640", dtype = "bool", shape = (168, 8))#candidate|9640|(168, 8)|var|bool
bop_9641 = relay.greater_equal(call_9626.astype('bool'), relay.reshape(var_9640.astype('bool'), relay.shape_of(call_9626))) # shape=(168, 8)
bop_9644 = relay.greater_equal(call_9627.astype('bool'), relay.reshape(var_9640.astype('bool'), relay.shape_of(call_9627))) # shape=(168, 8)
func_9254_call = mod.get_global_var('func_9254')
func_9256_call = mutated_mod.get_global_var('func_9256')
call_9645 = relay.TupleGetItem(func_9254_call(), 2)
call_9646 = relay.TupleGetItem(func_9256_call(), 2)
func_2401_call = mod.get_global_var('func_2401')
func_2403_call = mutated_mod.get_global_var('func_2403')
call_9647 = relay.TupleGetItem(func_2401_call(), 1)
call_9648 = relay.TupleGetItem(func_2403_call(), 1)
uop_9655 = relay.sqrt(var_9640.astype('float32')) # shape=(168, 8)
func_4204_call = mod.get_global_var('func_4204')
func_4206_call = mutated_mod.get_global_var('func_4206')
call_9661 = relay.TupleGetItem(func_4204_call(), 0)
call_9662 = relay.TupleGetItem(func_4206_call(), 0)
func_807_call = mod.get_global_var('func_807')
func_809_call = mutated_mod.get_global_var('func_809')
call_9665 = relay.TupleGetItem(func_807_call(), 1)
call_9666 = relay.TupleGetItem(func_809_call(), 1)
output = relay.Tuple([bop_9641,call_9645,call_9647,uop_9655,call_9661,call_9665,])
output2 = relay.Tuple([bop_9644,call_9646,call_9648,uop_9655,call_9662,call_9666,])
func_9674 = relay.Function([var_9640,], output)
mod['func_9674'] = func_9674
mod = relay.transform.InferType()(mod)
mutated_mod['func_9674'] = func_9674
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9675 = relay.var("var_9675", dtype = "bool", shape = (168, 8))#candidate|9675|(168, 8)|var|bool
func_9674_call = mutated_mod.get_global_var('func_9674')
call_9676 = func_9674_call(var_9675)
output = call_9676
func_9677 = relay.Function([var_9675], output)
mutated_mod['func_9677'] = func_9677
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8176_call = mod.get_global_var('func_8176')
func_8177_call = mutated_mod.get_global_var('func_8177')
call_9706 = func_8176_call()
call_9707 = func_8176_call()
func_2822_call = mod.get_global_var('func_2822')
func_2825_call = mutated_mod.get_global_var('func_2825')
const_9709 = relay.const([6.832788,-5.194994,-6.177385,6.064911,-5.268494,-7.211086,-0.711506,-8.093567,-3.113088,1.955729,6.825944,3.662307,9.884728,4.586173,-3.499108,4.212682,-1.399712,2.157431,-0.870826,9.675735,-2.373012,-3.552866,7.371893,-8.838138,-1.576552,-4.567357,6.864590,6.303119,-4.195776,4.040428,-6.043458,-8.852445,-1.427415,-2.022740,-2.667391,1.674514,3.820646,-9.244040,-8.594734,7.419517,-4.349789,4.306783,7.161514,-2.511862,0.821422,-8.855076,-7.773837,-4.318617,1.820749,9.853983,9.804588,-6.889532,-0.086536,6.297211,9.723102,-7.774073,-3.247978,6.038052,-9.803185,5.608300,5.982989,-2.073488,-4.459717,-5.557764,0.603329,7.420546,6.536215,4.017195,-0.648505,-6.332042,2.172964,6.427934,-0.845453,8.238313,-2.763806,-2.235692,2.494009,0.702648,-0.329888,6.065470,4.166636,-0.704901,-7.273588,1.682158,-1.045169,1.442816,-4.282974,4.056055,5.340591,9.853259,8.332153,-2.622565,-3.385694,-0.542479,2.586421,-2.474823,-8.170916,2.588096,2.434951,-7.662444,9.854642,5.220581,-2.057334,-5.957284,-2.506367,-9.591915,-6.447721,-3.209053,-2.082729,9.793120,-0.673519,0.847088,-3.367584,1.977583,3.121381,0.027242,8.265224,-8.262070,4.283339,-6.888355,-3.459790,0.170344,6.050231,-3.027659,-0.210462,1.430328,4.138602,5.359139,-4.059086,0.948025,-7.201012,-2.262061,-3.288887,-8.754206,3.467269,6.831188,5.672758,-4.252506,-5.818966,-5.119425,-1.148800,3.214310,-7.131147,2.741038,1.437332,-9.211637,7.633175,-7.955022,0.628526,1.424610,1.217519,9.110191,3.543595,5.475661,-8.787227,-5.970848,9.202990,-9.267680,8.397852,-3.334051,2.337540,-3.727621,0.163084,-2.173648,9.868125,-9.582752,-6.031340,9.862308,9.134152,8.421527,3.432345,7.507504,3.864015,-6.697803,1.237404,7.441678,-6.541228,-0.795127,-5.309744,-8.987253,-7.819662,-0.823425,-9.902335,4.482860,-0.588563,3.003691,-1.650709,2.776905,9.911324,-2.963799,-6.062095,1.663894,-1.376759,7.684467,-2.550502,-9.541734,-4.080434,9.309322,4.296952,-7.854750,3.878923,5.249490,-0.909983,7.054270,-9.771735,4.773878,3.475775,6.587001,-3.661240,7.455843,0.357834,8.663129,-0.606050,-7.973672,3.668175,-3.218927,2.392788,4.014718,-1.739657,1.868717,-9.981043,6.524409,7.347505,0.825488,8.702950,-9.911074,8.357963,-6.945677,-3.034444,1.457953,-0.012402,-5.142212,1.677350,8.078246,-2.219934,-9.210012,7.295179,-3.883050,6.727334,-4.310820,-9.040492,9.916613,4.911037,-4.731939,-3.983383,7.172365,8.516002,-7.691133,7.800209,-0.036114,-8.003694,9.058400,-8.347681,-2.923421,1.645571,8.236097,5.763410,8.292882,-8.027154,-8.333133,6.942931,5.283043,6.347688,6.652060,-9.379182,-0.753105,0.849729,-6.100576,-5.618994,5.652700,-0.279098,6.919828,0.774204,-5.855500,-6.402294,-7.821430,-5.122196,-1.967236,-5.873122,4.044073,0.787808,0.321558,9.884629,6.537777,5.133103,0.077539,9.752134,9.672272,-9.600667,-6.011006,7.220772,-7.012299,5.247640,8.987518,4.922693,-9.451990,2.081440,2.724412,2.701460,-5.918863,6.779387,-0.101327,-9.222854,3.726641,2.180991,-9.919389,-4.557171,8.533257,9.338584,6.667564,6.331839,-1.085598,-1.256374,6.434274,-0.080871,-2.020395,3.131497,-5.290175,-6.921691,-3.150627,3.575930,-4.642851,-5.328767,5.380677,8.595950,-8.028758,-9.357110,9.892658,-6.767342,2.955650,-0.547047,-5.894639,-5.560621,4.798156,-1.421781,9.640355,-3.717622,6.968547,2.052235,1.798822,-0.586791,6.594786,-3.199247,9.679499,7.806610,0.813346,-8.437261,0.627333,-0.744333,6.770511,4.430535,-7.138519,0.360628,-3.520643,0.556601,8.059609,6.856888,-4.071846,5.201200,-9.698379,-7.185357,-6.619028,0.145724,-8.562059,-7.508429,-8.048408,-0.233282,-5.239325,-3.828271,-0.293249,-4.424954,7.938987,-7.643155,2.339117,1.746654,-2.198765,1.885534,-1.584535,-1.240799,-9.259903,9.976473,-7.355145,2.297554,3.188591,7.311340,2.497366,0.677013,3.099995,7.695427,0.238055,-4.529682,-1.664711,-4.974672,-4.122405,5.313509,9.976934,7.052221,-0.163937,-7.811114,1.424063,9.790539,1.968014,7.334183,-6.450670,0.289122,-0.547739,6.990230,6.166928,0.422009,0.220899,-9.826293,5.704750,-1.443549,3.932054,1.655790,9.930873,6.427604,8.203396,9.670284,4.006322,5.525376,3.023047,6.052387,-4.346073,-9.549784,2.842245,1.696244,5.472788,9.453590,-3.898489,1.595901,8.889130,7.614829,5.449552,3.526781,1.458177,-0.083813,9.249719,-3.997947,4.060331,8.083837,7.188118,7.175689,8.420248,2.009385,-6.924979,5.372825,-7.379364,-2.502401,0.541422,-4.528741,5.234749,9.360929,-4.357423,-3.395410,3.220651,4.639275,-7.543358,3.102872,4.668293,-6.948550,7.999349,5.706305,-9.145017,3.235237,7.093561,-2.327549,1.751649,-0.304327,7.336726,0.213487,-9.908893,-1.240794,0.626457,-7.384039,-9.384282,-5.670964,-7.471691,1.461308,-8.757809,1.278515,5.223476,-6.047168,8.658259,-0.291142,1.975103,7.035589,-0.081244,7.699929,4.084126,-1.721015,-7.627680,0.153176,2.195666,0.602558,-3.468569,9.243663,-8.771042,-4.527646,-6.421454,6.034088,-1.912330,-1.700644,-2.392112,-4.029539,5.645755,8.323221,-9.391093,0.449033,-8.906939,3.006561,6.032770,-2.920964,-3.191447,2.734539,6.287356,-5.816635,-8.322479,8.654262,-9.406729,-4.708981,-1.077449,5.590386,3.633488,-9.313930,0.654402,-4.649083,9.218208,6.018837,9.763508,-3.058251,9.146836,-9.481012,8.089208,-2.695645,2.714425,-9.472828,-3.272253,-3.564930,-3.333712,2.726072,-1.619656,-3.872247,-9.625898,0.346973,-3.446068,6.251571,9.193578,5.341671,3.436223,-8.097698,4.797908,-9.529784,3.658543,4.291994,-8.056147,0.300602,-1.416602,-6.427891,4.304799,-1.429884,0.705063,9.113638,1.436367,-4.693707,-2.062971,7.780702,3.305798,-0.409147,1.839234,-8.602493,-5.615755,-5.816195,8.026999,-8.829427,4.831791,-3.540252,-3.436509,2.219858,6.983990,-7.431113,-8.145672,6.395591,3.697904,-5.140686,3.719026,-1.653225,2.908304,-3.200885,1.194510,2.145533,8.319447,-0.405514,-4.111526,7.598560,3.389321,9.345434,8.335311,4.327423,-9.150256,4.369500,-4.960531,-6.390280,5.055616,-2.160955,7.494555,7.139653,1.438714,-2.414116,7.631731,9.140795,3.897370,-3.449250,7.547425,3.322088,-0.719349,3.318364,2.021011,-7.049792,-2.142631,2.337862,-2.102563,-1.093890,-0.382126,2.186345,-8.983284,-2.087350,-6.571382,9.404493,-6.917970,2.891133,3.093840,3.983979,-2.382830,8.445699,-0.824941,-1.404932,1.675627,6.568148,5.665775,8.760868,5.001432,3.109882,4.274551,-3.081005,-1.755594,-2.202587,-3.534395,-4.418756,7.654368,-5.104427,-7.362043,-0.259319,6.963732,-1.450526,3.105030,8.222116,6.322956,-3.315269,9.313105,3.400432,-4.255119,4.346783,4.900319,-8.928925,-6.209455,8.273579,7.831901,-0.405646,0.596559,-6.172833,4.135330,2.358578,-9.831189,3.783640,-1.805296,5.077273,-9.029529,-2.466347,-0.032448,-4.551782,1.583750,-8.780173,5.351459,4.401242,5.285753,5.484483,0.436811,3.557583,-3.356757,0.212782,7.786631,-2.471685,-8.456345,-9.662780,1.899404,5.066122,-4.925832,2.703743,-0.972056,-4.698661,-6.096652,-4.417956,-7.863215,-6.926656,-6.425575,-2.303886,-9.975342,8.426880,1.493011,-6.961661,-2.416914,0.845258,3.812426,8.195545,4.265668,6.654858,6.741033,-0.348093,5.858384], dtype = "float32")#candidate|9709|(720,)|const|float32
call_9708 = relay.TupleGetItem(func_2822_call(relay.reshape(const_9709.astype('float32'), [720,])), 4)
call_9710 = relay.TupleGetItem(func_2825_call(relay.reshape(const_9709.astype('float32'), [720,])), 4)
output = relay.Tuple([call_9706,call_9708,const_9709,])
output2 = relay.Tuple([call_9707,call_9710,const_9709,])
func_9719 = relay.Function([], output)
mod['func_9719'] = func_9719
mod = relay.transform.InferType()(mod)
output = func_9719()
func_9720 = relay.Function([], output)
mutated_mod['func_9720'] = func_9720
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9774 = relay.var("var_9774", dtype = "float32", shape = (14, 12, 6))#candidate|9774|(14, 12, 6)|var|float32
uop_9775 = relay.cosh(var_9774.astype('float32')) # shape=(14, 12, 6)
uop_9785 = relay.sinh(var_9774.astype('float64')) # shape=(14, 12, 6)
output = relay.Tuple([uop_9775,uop_9785,])
output2 = relay.Tuple([uop_9775,uop_9785,])
func_9791 = relay.Function([var_9774,], output)
mod['func_9791'] = func_9791
mod = relay.transform.InferType()(mod)
var_9792 = relay.var("var_9792", dtype = "float32", shape = (14, 12, 6))#candidate|9792|(14, 12, 6)|var|float32
output = func_9791(var_9792)
func_9793 = relay.Function([var_9792], output)
mutated_mod['func_9793'] = func_9793
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9961 = relay.const([[[7.173634,-9.098547,-6.099136,-1.417457,-3.374445,5.292340],[5.255367,2.413430,6.391597,-1.842559,8.812752,-6.002402],[5.099171,8.578669,2.411235,-0.497169,-7.033787,-8.219668]],[[4.261332,-5.895565,7.598636,-1.096483,-2.564536,3.025030],[1.722278,6.820024,-6.794744,3.537331,0.316388,1.203133],[7.720877,6.129252,-9.561449,-5.651829,5.709714,-2.070325]],[[-6.027877,8.173073,-3.128932,8.006843,-2.177683,1.034648],[-4.538554,8.595006,4.216056,-9.805165,-2.210266,-6.168413],[1.637978,-5.587584,-8.463083,7.853200,4.763438,2.571204]]], dtype = "float64")#candidate|9961|(3, 3, 6)|const|float64
uop_9962 = relay.rsqrt(const_9961.astype('float64')) # shape=(3, 3, 6)
output = uop_9962
output2 = uop_9962
func_9968 = relay.Function([], output)
mod['func_9968'] = func_9968
mod = relay.transform.InferType()(mod)
output = func_9968()
func_9969 = relay.Function([], output)
mutated_mod['func_9969'] = func_9969
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3344_call = mod.get_global_var('func_3344')
func_3346_call = mutated_mod.get_global_var('func_3346')
call_9991 = func_3344_call()
call_9992 = func_3344_call()
output = call_9991
output2 = call_9992
func_9994 = relay.Function([], output)
mod['func_9994'] = func_9994
mod = relay.transform.InferType()(mod)
mutated_mod['func_9994'] = func_9994
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9994_call = mutated_mod.get_global_var('func_9994')
call_9995 = func_9994_call()
output = call_9995
func_9996 = relay.Function([], output)
mutated_mod['func_9996'] = func_9996
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6016_call = mod.get_global_var('func_6016')
func_6018_call = mutated_mod.get_global_var('func_6018')
call_10000 = relay.TupleGetItem(func_6016_call(), 0)
call_10001 = relay.TupleGetItem(func_6018_call(), 0)
output = relay.Tuple([call_10000,])
output2 = relay.Tuple([call_10001,])
func_10010 = relay.Function([], output)
mod['func_10010'] = func_10010
mod = relay.transform.InferType()(mod)
output = func_10010()
func_10011 = relay.Function([], output)
mutated_mod['func_10011'] = func_10011
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6138_call = mod.get_global_var('func_6138')
func_6139_call = mutated_mod.get_global_var('func_6139')
call_10019 = relay.TupleGetItem(func_6138_call(), 0)
call_10020 = relay.TupleGetItem(func_6139_call(), 0)
output = call_10019
output2 = call_10020
func_10033 = relay.Function([], output)
mod['func_10033'] = func_10033
mod = relay.transform.InferType()(mod)
output = func_10033()
func_10034 = relay.Function([], output)
mutated_mod['func_10034'] = func_10034
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8137_call = mod.get_global_var('func_8137')
func_8138_call = mutated_mod.get_global_var('func_8138')
call_10081 = relay.TupleGetItem(func_8137_call(), 1)
call_10082 = relay.TupleGetItem(func_8138_call(), 1)
output = call_10081
output2 = call_10082
func_10085 = relay.Function([], output)
mod['func_10085'] = func_10085
mod = relay.transform.InferType()(mod)
mutated_mod['func_10085'] = func_10085
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10085_call = mutated_mod.get_global_var('func_10085')
call_10086 = func_10085_call()
output = call_10086
func_10087 = relay.Function([], output)
mutated_mod['func_10087'] = func_10087
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1194_call = mod.get_global_var('func_1194')
func_1195_call = mutated_mod.get_global_var('func_1195')
call_10135 = relay.TupleGetItem(func_1194_call(), 3)
call_10136 = relay.TupleGetItem(func_1195_call(), 3)
output = relay.Tuple([call_10135,])
output2 = relay.Tuple([call_10136,])
func_10145 = relay.Function([], output)
mod['func_10145'] = func_10145
mod = relay.transform.InferType()(mod)
mutated_mod['func_10145'] = func_10145
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10145_call = mutated_mod.get_global_var('func_10145')
call_10146 = func_10145_call()
output = call_10146
func_10147 = relay.Function([], output)
mutated_mod['func_10147'] = func_10147
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6778_call = mod.get_global_var('func_6778')
func_6779_call = mutated_mod.get_global_var('func_6779')
call_10150 = relay.TupleGetItem(func_6778_call(), 1)
call_10151 = relay.TupleGetItem(func_6779_call(), 1)
output = relay.Tuple([call_10150,])
output2 = relay.Tuple([call_10151,])
func_10159 = relay.Function([], output)
mod['func_10159'] = func_10159
mod = relay.transform.InferType()(mod)
output = func_10159()
func_10160 = relay.Function([], output)
mutated_mod['func_10160'] = func_10160
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10176 = relay.var("var_10176", dtype = "float64", shape = (5, 3, 1))#candidate|10176|(5, 3, 1)|var|float64
uop_10177 = relay.rsqrt(var_10176.astype('float64')) # shape=(5, 3, 1)
output = relay.Tuple([uop_10177,])
output2 = relay.Tuple([uop_10177,])
func_10185 = relay.Function([var_10176,], output)
mod['func_10185'] = func_10185
mod = relay.transform.InferType()(mod)
mutated_mod['func_10185'] = func_10185
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10186 = relay.var("var_10186", dtype = "float64", shape = (5, 3, 1))#candidate|10186|(5, 3, 1)|var|float64
func_10185_call = mutated_mod.get_global_var('func_10185')
call_10187 = func_10185_call(var_10186)
output = call_10187
func_10188 = relay.Function([var_10186], output)
mutated_mod['func_10188'] = func_10188
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5154_call = mod.get_global_var('func_5154')
func_5156_call = mutated_mod.get_global_var('func_5156')
call_10194 = func_5154_call()
call_10195 = func_5154_call()
func_5896_call = mod.get_global_var('func_5896')
func_5899_call = mutated_mod.get_global_var('func_5899')
const_10197 = relay.const([-8,-9,8,-5,-4,3,2,-5,-3,5,-2,-10,-3,-8,-9,-8,-5,-7,5,-9,-8,4,-4,-6,-8,4,-1,-9,-3,7,-3,10,2,-10,7,5,-2,9,10,4,-8,7,3,4,-2,-10,6,2,-7,-6,-4,4,-3,-3,-8,-2,5,6,5,6,10,4,-7,-5,-3,-1,-3,-4,-5,1,7,-2,3,2,9,-9,5,-7,2,-7,7,3,-2,-8,7,4,1,6,-5,3,-8,5,6,6,-7,4,-4,4,5,4,-1,3,4,7,-10,5,3,-1,-5,-8,1,-6,8,-10,-4,-4,-1,-1,10,8,10,-6,-5,-3,-4,-5,-4,2,3,-6,6,-5,9,-4,4,9,-5,-7,1,-5,3,-4,2,-9,-7,5,-5,2,4,4,-10,-2,-7,-9,8,-5,-3,8,-6,2,9,9,-8,9,9,-10,6,5,-10,2,-6,1,-8,7,-5,7,6,10,-9,6,4,-6,-7,-4,3,6,-6,1,5,8,-6,-4,3,6,4,-9,-7,9,-5,-10,-2,8,-1,-2,8,6,8,-8,-5,4,-6,10,-7,-7,3,-1,-2,-2,9,-1,5,10,-1,-6,-3,-8,3,-2,8,-1,7,-7,-10,-5,-5,5,-6,-3,3,3,-10,-5,-10,1,8,-8,-5,-5,-6,-5,9,-8,7,3,-3,-6,-9,5,-9,7,2,2,2,6,8,-8,-3,3,10,-8,2,9,4,-3,2,-10,-7,6,10,9,3,-6,-4,6,4,-8,-9,-2,-10,-6,4,1,-8,1,8,9,-5,-10,5,4,2,-8,8,-4,2,1,7,7,8,7,-10,-9,-1,-6,5,-6,10,9,-3,-6,-4,2,10,1,9,-6,-4,4,4,-2,9,-9,3,9,-9,-4,4,6,-7,-4,7,-5,-6,8,10,10,-9,10,-5,9,-4,10,-9,5,-5,2,10,-3,-8,-6,-3,10,7,6,-9,-7,10,-4,-4,-6,-10,1,8,8,-6,-6,3,1,-8,-2,-1,-1,-4,9,3,-7,6,3,-5,-1,5,10,-5,-8,9,9,8,-3,4,2,-9,-10,-8,-8,6,-4,7,9,-8,-5,8,6,-4,8,-3,5,9,5,-10,2,2,-7,1,-1,4,5,9,-7,2,-9,6,-7,1,4,-6,-5,2,7,7,-4,5,-4,5,-7,7,-4,-2,-9,6,2,10,4,1,-9,1,-1,5,1,7,8,4,8,-6,6,-10,8,10,-4,-1,-9,-8,-9,6,-4,-5,-8,6,-4,-10,-6,3,-10,4,-3,-9,-9,3,-10,9,-3,-6,-5,4,7,-2,-6,-7,-7,2,-7,-10,-8,4,3,9,8,-6,10,-2,6,9,8,-10,-6,5,-5,-10,10,-10,9,-1,-7,-2,7,-5,10,6,-10,5,1,9,-6,3,-5,1,4,-1,-6,-9,6,7,10,4,-10,-7,-8,10,-7,10,-6,4,-2,3,7,-3,8,9,-3,-9,1,-7,2,2,10,1,-2,10,-1,2,-6,3,4], dtype = "uint8")#candidate|10197|(572,)|const|uint8
call_10196 = relay.TupleGetItem(func_5896_call(relay.reshape(const_10197.astype('uint8'), [11, 4, 13]), relay.reshape(const_10197.astype('uint8'), [11, 4, 13]), ), 0)
call_10198 = relay.TupleGetItem(func_5899_call(relay.reshape(const_10197.astype('uint8'), [11, 4, 13]), relay.reshape(const_10197.astype('uint8'), [11, 4, 13]), ), 0)
func_8958_call = mod.get_global_var('func_8958')
func_8960_call = mutated_mod.get_global_var('func_8960')
call_10201 = relay.TupleGetItem(func_8958_call(), 0)
call_10202 = relay.TupleGetItem(func_8960_call(), 0)
func_6848_call = mod.get_global_var('func_6848')
func_6849_call = mutated_mod.get_global_var('func_6849')
call_10206 = func_6848_call()
call_10207 = func_6848_call()
func_4997_call = mod.get_global_var('func_4997')
func_4998_call = mutated_mod.get_global_var('func_4998')
call_10210 = func_4997_call()
call_10211 = func_4997_call()
func_8100_call = mod.get_global_var('func_8100')
func_8102_call = mutated_mod.get_global_var('func_8102')
call_10214 = relay.TupleGetItem(func_8100_call(), 0)
call_10215 = relay.TupleGetItem(func_8102_call(), 0)
bop_10221 = relay.equal(call_10201.astype('bool'), relay.reshape(call_10210.astype('bool'), relay.shape_of(call_10201))) # shape=(168, 8)
bop_10224 = relay.equal(call_10202.astype('bool'), relay.reshape(call_10211.astype('bool'), relay.shape_of(call_10202))) # shape=(168, 8)
func_830_call = mod.get_global_var('func_830')
func_832_call = mutated_mod.get_global_var('func_832')
call_10225 = relay.TupleGetItem(func_830_call(), 1)
call_10226 = relay.TupleGetItem(func_832_call(), 1)
output = relay.Tuple([call_10194,call_10196,const_10197,call_10206,call_10214,bop_10221,call_10225,])
output2 = relay.Tuple([call_10195,call_10198,const_10197,call_10207,call_10215,bop_10224,call_10226,])
func_10234 = relay.Function([], output)
mod['func_10234'] = func_10234
mod = relay.transform.InferType()(mod)
mutated_mod['func_10234'] = func_10234
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10234_call = mutated_mod.get_global_var('func_10234')
call_10235 = func_10234_call()
output = call_10235
func_10236 = relay.Function([], output)
mutated_mod['func_10236'] = func_10236
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3999_call = mod.get_global_var('func_3999')
func_4001_call = mutated_mod.get_global_var('func_4001')
call_10237 = func_3999_call()
call_10238 = func_3999_call()
output = call_10237
output2 = call_10238
func_10256 = relay.Function([], output)
mod['func_10256'] = func_10256
mod = relay.transform.InferType()(mod)
mutated_mod['func_10256'] = func_10256
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10256_call = mutated_mod.get_global_var('func_10256')
call_10257 = func_10256_call()
output = call_10257
func_10258 = relay.Function([], output)
mutated_mod['func_10258'] = func_10258
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3025_call = mod.get_global_var('func_3025')
func_3027_call = mutated_mod.get_global_var('func_3027')
call_10287 = relay.TupleGetItem(func_3025_call(), 0)
call_10288 = relay.TupleGetItem(func_3027_call(), 0)
output = call_10287
output2 = call_10288
func_10290 = relay.Function([], output)
mod['func_10290'] = func_10290
mod = relay.transform.InferType()(mod)
output = func_10290()
func_10291 = relay.Function([], output)
mutated_mod['func_10291'] = func_10291
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7773_call = mod.get_global_var('func_7773')
func_7774_call = mutated_mod.get_global_var('func_7774')
call_10354 = relay.TupleGetItem(func_7773_call(), 0)
call_10355 = relay.TupleGetItem(func_7774_call(), 0)
output = call_10354
output2 = call_10355
func_10382 = relay.Function([], output)
mod['func_10382'] = func_10382
mod = relay.transform.InferType()(mod)
mutated_mod['func_10382'] = func_10382
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10382_call = mutated_mod.get_global_var('func_10382')
call_10383 = func_10382_call()
output = call_10383
func_10384 = relay.Function([], output)
mutated_mod['func_10384'] = func_10384
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1817_call = mod.get_global_var('func_1817')
func_1818_call = mutated_mod.get_global_var('func_1818')
call_10397 = func_1817_call()
call_10398 = func_1817_call()
output = relay.Tuple([call_10397,])
output2 = relay.Tuple([call_10398,])
func_10405 = relay.Function([], output)
mod['func_10405'] = func_10405
mod = relay.transform.InferType()(mod)
output = func_10405()
func_10406 = relay.Function([], output)
mutated_mod['func_10406'] = func_10406
mutated_mod = relay.transform.InferType()(mutated_mod)
func_700_call = mod.get_global_var('func_700')
func_701_call = mutated_mod.get_global_var('func_701')
call_10488 = relay.TupleGetItem(func_700_call(), 3)
call_10489 = relay.TupleGetItem(func_701_call(), 3)
output = relay.Tuple([call_10488,])
output2 = relay.Tuple([call_10489,])
func_10491 = relay.Function([], output)
mod['func_10491'] = func_10491
mod = relay.transform.InferType()(mod)
mutated_mod['func_10491'] = func_10491
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10491_call = mutated_mod.get_global_var('func_10491')
call_10492 = func_10491_call()
output = call_10492
func_10493 = relay.Function([], output)
mutated_mod['func_10493'] = func_10493
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7841_call = mod.get_global_var('func_7841')
func_7843_call = mutated_mod.get_global_var('func_7843')
call_10530 = relay.TupleGetItem(func_7841_call(), 0)
call_10531 = relay.TupleGetItem(func_7843_call(), 0)
func_10256_call = mod.get_global_var('func_10256')
func_10258_call = mutated_mod.get_global_var('func_10258')
call_10532 = func_10256_call()
call_10533 = func_10256_call()
output = relay.Tuple([call_10530,call_10532,])
output2 = relay.Tuple([call_10531,call_10533,])
func_10540 = relay.Function([], output)
mod['func_10540'] = func_10540
mod = relay.transform.InferType()(mod)
mutated_mod['func_10540'] = func_10540
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10540_call = mutated_mod.get_global_var('func_10540')
call_10541 = func_10540_call()
output = call_10541
func_10542 = relay.Function([], output)
mutated_mod['func_10542'] = func_10542
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4997_call = mod.get_global_var('func_4997')
func_4998_call = mutated_mod.get_global_var('func_4998')
call_10598 = func_4997_call()
call_10599 = func_4997_call()
func_4102_call = mod.get_global_var('func_4102')
func_4103_call = mutated_mod.get_global_var('func_4103')
call_10603 = relay.TupleGetItem(func_4102_call(), 0)
call_10604 = relay.TupleGetItem(func_4103_call(), 0)
func_4659_call = mod.get_global_var('func_4659')
func_4661_call = mutated_mod.get_global_var('func_4661')
var_10610 = relay.var("var_10610", dtype = "float32", shape = (720,))#candidate|10610|(720,)|var|float32
call_10609 = relay.TupleGetItem(func_4659_call(relay.reshape(var_10610.astype('float32'), [720,])), 3)
call_10611 = relay.TupleGetItem(func_4661_call(relay.reshape(var_10610.astype('float32'), [720,])), 3)
func_5627_call = mod.get_global_var('func_5627')
func_5629_call = mutated_mod.get_global_var('func_5629')
call_10613 = relay.TupleGetItem(func_5627_call(), 0)
call_10614 = relay.TupleGetItem(func_5629_call(), 0)
output = relay.Tuple([call_10598,call_10603,call_10609,var_10610,call_10613,])
output2 = relay.Tuple([call_10599,call_10604,call_10611,var_10610,call_10614,])
func_10619 = relay.Function([var_10610,], output)
mod['func_10619'] = func_10619
mod = relay.transform.InferType()(mod)
mutated_mod['func_10619'] = func_10619
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10620 = relay.var("var_10620", dtype = "float32", shape = (720,))#candidate|10620|(720,)|var|float32
func_10619_call = mutated_mod.get_global_var('func_10619')
call_10621 = func_10619_call(var_10620)
output = call_10621
func_10622 = relay.Function([var_10620], output)
mutated_mod['func_10622'] = func_10622
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6443_call = mod.get_global_var('func_6443')
func_6444_call = mutated_mod.get_global_var('func_6444')
call_10647 = relay.TupleGetItem(func_6443_call(), 0)
call_10648 = relay.TupleGetItem(func_6444_call(), 0)
func_5315_call = mod.get_global_var('func_5315')
func_5318_call = mutated_mod.get_global_var('func_5318')
const_10661 = relay.const([-0.789921,-9.896991,9.671760,-1.417930,2.803901,9.882199,0.242850,-0.305521,-1.294035,-8.052876,6.326494,-4.197386,1.737558,-5.008369,-0.444618,3.872256,-8.202050,-4.722594,-8.042553,-7.044622,7.740846,-8.689979,1.097980,0.792912,-6.079576,-3.032274,-2.707493,2.588114,2.947401,-3.674323,-2.731446,-1.760358,0.430864,5.650321,9.682153,5.556436,2.086461,2.723223,-6.569274,2.368200,-3.695390,-5.528077,-1.401110,9.549296,8.661285,9.378130,0.479142,-7.216811,3.631760,-9.420500,4.904553,7.105267,8.042600,1.750812,-6.540190,-1.126445,5.076159,8.343508,1.643290,3.883047,-7.235081,-3.369047,-7.696215,-1.571178,-9.971713,-5.143334,-0.645124,2.274636,-1.567212,7.059524,6.226611,-8.542832,-7.300917,-4.215223,-6.079477,-6.709312,9.511720,-9.856855,4.847067,1.926241,8.292451,8.953624,8.902336,-5.872658,8.992642,-7.747054,4.395935,2.691812,-6.173440,3.768719,3.668013,1.492031,6.396665,-7.569816,-6.389367,-0.567721,1.671005,4.192427,-7.808960,1.783065,6.708384,-2.048718,-9.420849,-0.383831,-6.788057,4.390716,6.927978,-1.371245,-8.098917,1.976066,-7.057042,-2.630300,6.275629,-4.193749,5.955616,-4.216442,-9.820096,-4.814679,-2.643319,2.387501,-7.499872,4.225105,-4.446746,-0.800580,-1.569318,5.269708,-4.995080,9.136309,-2.671878,9.796611,8.340139,-3.527505,4.463877,-2.215949,-9.202862,-7.206677,-0.476110,-7.285802,5.794851,7.979254,6.803499,-9.802508,-9.449979,1.419724,1.243802,6.866057,-4.340320,-3.718630,-6.233379,-5.486021,0.015084,1.331731,-9.476100,-2.984033,2.950803,3.782466,-6.870508,-3.407201,1.346999,7.128432,-7.998445,3.299711,1.334292,-9.937743,-0.700080,-1.315195,6.268227,2.815651,3.577096,5.928605,0.944647,6.035214,-0.617931,9.640028,-8.239180,2.533712,1.970027,8.694502,-9.861777,-1.754324,-2.885023,-1.449978,-9.412913,2.846059,9.847429,-9.921196,-7.958030,4.518116,6.459430,-8.126027,4.788417,1.644054,1.850885,1.368268,-6.008073,-0.172030,-7.429967,3.876340,4.154124,5.258756,7.321179,8.701164,6.193899,6.673972,2.443117,-2.203194,0.594286,9.754453,0.587879,-9.710813,-2.719471,-2.551306,-2.487675,-4.073531,3.380331,-9.781519,7.190440,-3.825311,-3.422775,-6.533101,2.261991,1.833191,-3.712596,0.955296,1.724257,1.243545,7.294645,1.780271,4.214727,0.045544,2.521884,-0.257911,5.345140,5.994920,-2.629290,-5.656771,9.395483,-4.435338,-1.375468,5.768369,9.722696,-7.806042,-5.049011,-7.175356,9.807642,-6.549038,-4.073783,7.095521,8.628232,7.890647,-3.219817,-5.796893,8.056691,6.149780,-8.921410,-0.102756,-1.408657,-1.081141,-7.937770,-8.302429,-0.205218,-7.585597,9.351963,4.055036,-8.886682,-5.161172,-9.171990,-6.688294,1.320099,6.156721,-3.390331,-6.432915,-0.865487,-6.083970,7.731813,-7.104636,7.379047,-5.636230,6.101875,-2.016225,5.731163,-4.986726,0.483738,9.821168,1.782002,-3.386778,-8.979743,-0.493230,-4.989004,4.149097,4.848439,0.657950,-8.030808,-3.362430,3.035626,-5.247114,4.094839,-6.219500,0.989412,-0.292407,9.400663,9.433037,9.526805,-1.138041,-7.990386,3.329578,-0.468927,-4.380199,7.301982,-2.186328,6.635380,2.633621,9.542013,1.117616,3.669069,9.748541,3.643931,7.492269,-4.175773,-7.434860,5.880586,4.024638,-9.376698,3.202972,-7.093018,4.923726,-7.747693,-8.319970,-9.781918,-3.605020,1.863417,-3.834291,-4.712781,3.403259,-0.046265,3.638168,-3.487615,1.982799,3.200839,-6.554951,-0.965347,6.909409,-7.980074,-0.760661,-8.128359,-5.546915,2.965100,-6.058678,-3.663413,-2.859330,7.687800,9.860255,-1.857744,-3.882102,8.543640,3.101180,-9.007544,-3.171687,6.112676,-2.477826,3.696632,1.136113,4.094067,1.866832,-6.686257,-0.054748,2.867617,9.459118,-3.017445,4.059165,-5.109979,4.046795,-5.440198,3.241059,9.366390,0.312352,-5.537274,6.865234,-8.634866,-3.497369,-3.028842,-5.507536,-0.900292,-8.053537,7.929645,-9.881167,-1.564620,4.738549,3.407243,-9.133415,-1.351895,9.428137,2.190120,-5.792045,9.992800,-1.362643,-8.795327,-2.876045,-2.139741,4.564608,-5.696326,7.470744,-9.828873,7.623422,2.171548,-3.069708,6.796163,-7.515905,-0.308242,-3.472710,8.704214,5.117731,5.921580,-1.010417,-8.117247,-4.673290,2.623855,-1.008550,-5.696688,9.092032,2.219780,3.113143,-0.181655,7.566259,-1.788421,-1.648925,-5.528766,2.772529,8.314019,0.732875,-5.458523,4.989481,0.491938,8.480697,8.577639,1.636950,-9.544769,-5.327185,0.512841,6.510178,6.061480,3.682951,1.046761,-4.329393,5.187594,9.556269,6.638591,5.141574,-0.338022,-7.610360,-2.846708,-5.671290,-2.041221,9.346507,6.957161,4.200276,-6.550580,-9.147507,-4.327567,5.770827,8.207316,2.783905,7.174043,8.988966,1.768715,3.137873,-0.914278,-3.895104,-1.154182,-6.684689,-2.756912,6.740118,-9.295702,-3.458999,-3.784388,-6.793091,-0.351166,-0.181153,7.246374,4.841704,6.628785,-1.160271,6.677633,-8.575552,-1.410449,0.807134,-1.965058,6.049959,-4.705058,5.564386,9.412495,-1.678272,0.867296,9.501160,2.502000,2.405606,-3.928979,-8.858096,-9.506094,2.169398,3.707299,8.001379,8.010935,-6.039609,0.003496,-8.108775,-4.700399,-8.887893,8.364841,-0.786982,0.341404,2.422819,2.146745,7.918182,-2.650496,-5.597688,3.816168,-0.556843,-6.887416,-5.599113,-3.083478,9.460221,-2.043643,6.109122,6.798350,-5.114489,0.311583,-9.928521,0.813302,0.264039,2.287696,5.433537,8.599395,4.771688,-1.058864,7.658881,8.843959,2.429440,5.979370,0.890569,-5.712797,3.663931,-3.642748,-0.880335,6.994253,3.499044,0.645575,2.105823,-1.458557,0.021319,-5.002615,-1.014819,5.651098,0.930678,-7.956998,1.233838,-6.049864,-0.672363,0.261857,-6.190281,-6.940002,2.236072,-1.404747,0.892831,5.577534,-4.814442,5.279829,3.661133,-2.279134,5.947957,-9.924374,-1.489040,6.713538,9.948635,7.341477,9.587009,0.675850,-9.261298,1.626658,0.701271,-3.892743,4.117510,-6.323284,-6.631307,0.181541,5.383984,-9.535731,6.419936,-6.965204,-5.062446,-0.546555,-8.789619,-8.657720,-8.420247,-0.780919,2.172584,4.161512,-7.113486,6.643163,-8.745458,8.236043,-5.546457,1.412665,4.565145,-6.924797,-5.345571,-8.776299,0.743798,6.703708,-2.731501,2.827344,-2.715238,-3.116855,-6.953516,8.591848,9.884319,-5.590960,-5.107336,4.784929,0.449021,-8.643709,-2.730087,-1.795324,7.611237,9.397804,5.219030,2.939162,5.626228,5.019643,-8.449768,5.884419,3.436541,5.525949,4.414704,3.125860,7.981558,-5.989513,-7.537989,6.584294,-0.514821,-9.009355,0.247328,6.195751,0.467919,-0.268292,9.132301,0.753926,4.109357,1.502166,9.356967,5.896242,-6.819413,5.161719,5.664855,-6.578343,7.347234,0.732192,9.793634,-7.025159,2.610719,-7.231782,-3.850470,8.633675,-8.995803,-3.826683,-6.486660,-2.014382,-7.120135,5.314769,-1.635091,1.640014,-3.016895,-4.489159,-4.771646,2.919522,5.721390,-4.436951,6.102067,9.917036,-9.941338,-7.743315,-9.275047,7.867363,-1.168998,-6.529014,0.035526,-7.607692,-6.631935,3.362864,5.700866,2.100524,-1.292946,-6.302329,9.517660,5.037567,-9.493950,-2.602643,1.417346,8.420946,5.132622,-7.474361,9.674726,-9.745761,-1.542421,-6.122938,-9.865521,-1.964016,-5.005413,8.806507,9.418685,9.567970,-2.612428,-7.639297,-2.230240,8.989936,2.055967,-9.378467,-9.752992,-7.250180,-3.111341,2.341563,-2.179701,0.915913,-4.533008,7.017792,5.669829,8.691456,-0.709465,1.710737,3.874073,-6.633029,2.609484,-4.050103,-8.185686,-0.185164,5.294109,8.834826,0.781203,-2.335721,2.073714,6.877849,7.062492,-6.068967,-3.618667,-4.683326,-0.770358,-9.482017,2.002778,-3.039412,-4.386251,-4.494148,-1.676208,3.451397,-9.881429,7.407468,1.783201,-5.030061,-5.507223,2.466669,4.999439,-5.315974,-7.297754,4.223408,7.452422,8.869289,-6.822193,-1.061231,-5.007819,-4.795661,6.884207,-8.787959,2.723614,5.125481,-4.570882,-2.272794,-5.116042,3.668980,-2.584249,-9.090554,-1.612460,4.631514,9.938301,1.699575,9.759615,-2.291276,-0.674187,-5.912417,-1.695468,3.239547,-5.146160,-1.430400,-4.909546,8.203606,-5.242905,7.139039,-9.633544,8.908348,-4.773622,8.950176,-5.966353,-6.704712,-7.937753,-9.360286,5.583485,6.066265,-7.439728,-2.722106,-3.387721,4.929022,-0.582816,8.262478,2.409943,-8.693322,-0.309555,5.555166,-8.857700,4.206302,-9.570455,2.911194,9.438920,1.412386,-9.498068,-4.413033,-1.297893,0.213898,-5.260259,1.009602,1.806910,0.322171,8.422613,-6.084735,6.751587,-1.353280,-0.979180,5.481462,2.190221,4.855461,-5.564393,-5.134598,0.544831,0.476666,-0.474868,6.976743,8.330801,3.158892,3.717043,-6.555119,4.208937,0.594921,-1.242896,7.234883,1.480184,1.941542,1.228256,-5.599992,1.264556,-0.784188,-3.450647,2.333877,8.026660,-5.769080,-9.182512,5.334285,-5.070087,9.219012,5.425730,-8.149857,7.163230,-0.965896,9.294617,8.711586,4.746562,-5.610230,7.403710,7.344941,6.273083,-3.512684,-0.775233,8.823996,-0.978961,5.714463,-7.404591,-6.500202,4.025340,-7.913318,-0.841153,6.806740,0.004412,8.810482,1.538061,0.563527,4.149029,-3.139841,4.080941,-6.329438,5.067519,3.805200,5.946954,2.158043,9.537937,6.994601,-3.903978,2.138266,-4.038373,-8.710689,1.791977,-7.673460,3.972256,-2.278147,3.677051,-7.537828,-7.032270,-8.472217,-8.871946,-7.050214,1.858343,4.971229,-8.209073,1.121834,8.603289,-6.290722,-6.960483,1.257054,7.075546,-1.723946,-5.563843,0.429679,4.859098,-5.456980,-5.401993,0.060171,-2.391355,7.551101,7.381101,-9.185999,-9.325565,7.221814,8.743074,7.755813,-1.526838,8.063904,-0.261587,1.039859,-9.033296,0.905672,-3.020938,-2.440403,7.788540,1.931638,2.782639,-6.181071,-5.020867,-1.837896,-3.517320,-5.817400,4.739021,-9.568320,5.269071,2.724678,7.520155,-1.101012,2.005980,6.349364,-7.021963,1.026443,-9.563207,2.485012,9.565059,-2.991273,8.139617,-3.222949,9.684527,1.897929,-9.457992,-6.149357,5.338154,4.247479,-0.980498,-2.230342,8.751025,-8.325041,5.596969,-3.591488,4.169484,-2.421302,-3.427930,3.026474,6.321881,-8.505431,-6.370807,-3.119778,9.595171,-4.211673,-2.463338,-7.770737,4.689663,4.734477,-7.844936,4.792627,-8.283758,4.359186,9.108372,-4.615437,2.332870,-7.648485,-5.780175,5.258170,5.450838,3.039781,-5.453847,1.941959,-1.394845,-6.575495,5.538569,-0.463778,-1.238149,-5.605890,-9.422906,-1.495197,6.385292,6.132487,6.043894,2.750593,1.679229,-8.484334,-7.344871,5.229298,-4.788037,9.754349,2.484707,-5.830074,2.754114,5.391954,8.569672,9.387731,0.883883,-3.774985,-2.215521,0.624297,-8.910259,9.053342,4.320307,0.080794,3.092583,7.159894,-5.308924,-4.253955,-9.156391,-1.436313,8.625332,-0.858440,-2.319965,-7.378053,-9.909939,-6.448839,6.382379,5.462600,-5.851090,3.282332,-0.308256,2.546718,-2.780114,-3.306629,0.716551,-7.844202,5.138497,4.109316,-5.041252,-4.641888,0.765547,3.802021,-6.216729,-5.234630,-5.466594,-8.811086,-0.322192,0.064254,2.921147,-6.478355,-0.257595,-0.797219,5.233450,-1.813706,6.195652,3.070895,2.527012,8.746411,0.451472,3.545305,4.667664,-7.987570,4.663471,-8.554492,-1.001720,1.860439,-7.069252,-7.163420,-4.511076,5.462616,5.078862,-8.559709,2.275331,-4.008176,6.916581,-3.256316,-6.392476,3.699768,4.424976,-8.305587,-9.437713,-7.684139,1.797569,-5.066965,0.429003,5.515585,-8.673603,-8.311781,-2.739435,6.106267,-4.021086,-2.061715,-3.520532,-8.585550,-5.113949,5.585248,-5.741067,8.213702,-1.710874,3.928568,3.208325,-4.096251,5.159949,8.267278,-3.481650,7.092266,3.917137,4.787185,1.479351,5.944801,-7.239907,-8.332039,-0.761854,6.464847,-8.932955,9.157971,5.841219,0.632490,-3.624529,-6.996710,0.081275,5.645859,-0.103054,1.932950,-1.839640,2.849151,8.514289,2.149820,5.569307,3.172660,-1.014552,8.551408,-5.186582,-9.145163,2.384837,3.440178,-7.008292,8.693895,9.699248,5.871850,6.082798,2.397787,-7.833806,6.706159,3.172944,7.788845,7.957033,0.394630,-6.613093,-9.289713,7.414209,-2.021800,-5.221502,-3.021421,-4.068474,0.216861,-8.745657,4.091274,0.605984,-0.985757,8.199893,-6.232897,-1.434753,-7.123005,3.399855,-8.182513,5.483700,8.332320,1.555104,5.434759,6.866594,8.993002,9.916175,-7.799857,9.293781,8.437258,0.930698,9.515655,-8.834530,-1.796455,-9.883802,-9.307345,7.034345,0.049719,4.847601,8.620021,2.920300,-8.405414,9.388404,-8.424053,3.255642,2.004341,9.859805,-4.696431,-1.931458,-5.133467,8.236066,-0.757257,-4.428129,0.246397,8.443332,-8.890673,-8.972859,3.227218,3.029835,-8.901497,-7.419799,2.354068,3.229401,6.841587,-9.101157,-8.656018,-3.792828,7.042240,5.260210,-0.975730,0.944140,7.808662,7.541321,4.006539,-9.355582,2.647205,9.827925,8.909036,-5.508200,-8.284046,-6.329418,-9.633242,-5.004739,3.292860,3.189293,-5.163513,-6.648209,-9.160599,-7.803269,-3.508587,1.134897,6.764282,2.739635,0.706920,0.983466,-9.720994,9.368491,-5.144143,-1.392992,6.473993,8.873396,-0.786832,6.871792,3.789812,-4.883818,5.663550,1.001589,-0.746703,9.847283,-7.619890,-7.173537,-2.456167,-5.589950,6.381448,-0.282404,-5.598808,-1.732519,6.450591,7.132333,7.224087,-5.607397,0.097391,-2.969203,-6.946133,-0.076260,-9.590864,-4.925370,-9.683553,-4.123833,3.223695,-8.148824,-7.922966,6.850352,-0.493019,7.545616,-4.537347,-9.111682,4.883479,-4.196073,-1.879540,5.354167,3.964316,3.935651,-4.908485,4.152631,-3.612936,3.145709,-5.357455,-7.302690,3.360612,-2.277810,-7.893273,7.028562,1.658476,8.425305,-0.453862,6.628565,-8.419137,9.424314,-7.351344,6.761853,-0.972551,2.647880,1.935107,-9.668773,0.175880,-4.225597,6.960041,-1.797441,2.353762,5.056341,-8.946238,5.485139,7.720752,4.472299,1.086557,6.350509,5.195488,-5.279196,-3.202399,5.320487,-4.549059,2.230099,4.116421,-0.921726,-6.100084,0.629632,-9.025524,7.761767,1.432947,2.289614,8.548640,2.733388,-0.159319,8.261796,-9.261037,-9.978856,6.952126,-1.725096,3.367699,8.726822,-8.297919,-9.462420,-6.873362,3.935100,-6.330378,-9.546502,9.224183,-6.517579,-2.465119,-6.136736,-4.693597,1.213638,8.884909,9.558707,-8.634760,-6.689004,4.238100,-6.903324,-5.969359,7.609627,-0.669413,7.701296,1.478956,0.410659,9.672689,-3.239541,3.034308,9.339297,-2.709136,0.448509,-1.735178,0.155137,2.689091,3.435695,4.084809,-3.320485,-2.132934,5.925367,-9.466317,8.072404,5.711100,5.573844,0.947199,8.684434,2.220842,4.859315,-8.057412,9.042289,-9.884561,6.291316,-3.322317,5.844866,4.457657,-4.554303,-4.675788,-8.257700,-5.228610,-5.314266,-8.673448,0.622357,-6.537678,8.431876,0.670080,-2.585887,2.094381,-0.608980,-3.288151,1.247586,-1.598966,9.843371,0.861296,-3.158931,1.381487,-9.991975,-8.765711,-1.325234,-0.598221,8.949496,-9.663069,5.262730,-5.378738,4.262979,1.697849,-6.970223,1.089654,-7.486308,1.734614,-1.797437,1.834612,2.922976,-3.795259,8.575908,0.302576,-3.664660,-7.054953,-0.310509,2.944997,3.768565,-9.374195,2.671815,1.001667,-5.183418,-3.458303,-0.455310,1.878396,-2.363860,6.935605,-2.778464,-7.371244,-9.697634,-9.481692,0.044391,3.508207,0.812260,1.955842,5.461179,-6.922987,7.610552,-3.302734,3.669377,0.779985,7.101464,0.195228,-8.350317,-8.537581,-9.985790,5.536339,4.042075,4.932481,-3.576758,4.947204,3.346880,1.783810,-7.277397,-0.660452,-5.472208,8.859800,-6.312385,7.941298,8.146790,-2.399449,5.078543,0.525294,-3.774373,4.758580,5.475436,-3.543599,-1.061410,-7.164794,6.550328,-2.880209,-5.050321,8.804791,-7.661968,5.919907,-4.592556,-3.324884,7.602335,-8.929307,-4.716118,-7.128856,-6.806689,-1.419103,8.852292,-1.599557,-6.254399,-8.328922,-3.138464,2.476830,-3.148453,-2.122567,-7.407930,-8.461730,0.686328,7.358845,-2.079953,6.519100,-5.475193,-0.629963,-8.005568,-3.734279,4.853424,-2.166581,-3.752711,0.735844,-8.808364,-5.594968,-0.422622,4.053478,1.042391,7.472214,-2.749545,7.895954,-2.419436,-2.237909,-0.411259,0.443962,1.829490,7.693474,-8.762753,8.343434,6.133836,9.123305,-6.810214,7.535370,-6.718062,-8.751514,8.071997,1.624775,2.845426,1.021429,9.671788,4.145041,-8.065881,-2.871486,6.554595,4.517390,7.657478,-7.389528,5.946194,-1.286017,-8.078564,0.131545,-9.413853,-0.526422,-3.038972,7.810794,-6.939613,7.529572,5.769908,0.656741,9.176718,5.261294,-3.695681,-2.131610,6.112314,5.373180,9.776500,-6.327421,0.528408,8.484314,-6.043694,8.053146,-3.977963,4.266399,3.047949,-2.517761,0.682081,1.506444,-1.293082,-0.959324,-7.956098,7.362487,-1.892015,9.851797,-5.003287,5.080720,6.792615,-8.577960,7.188840,-3.242460,-9.536610,3.001073,-2.415445,3.759060,6.309750,4.765190,3.892669,4.189968,-4.891664,-1.342102,-5.410343,7.498411,-7.334156,3.789246,6.676785,-2.093701,-6.056248,2.667623,1.053141,6.682663,-4.192910,-5.141180,-2.221489,6.296815,6.829679,6.854703,-7.011592,6.313633,-3.147412,-3.604542,-6.864090,-0.817904,5.263739,-7.724118,-0.345251,8.360873,-0.976160,1.649944,9.263109,3.328040,-5.938597,-0.016865,4.943107,9.921994,-1.558852,8.096524,0.686818,-7.023166,7.000730,2.887847,-8.314103,9.556466,-3.241541,0.840907,3.030074,-0.182165,-0.985689,-4.878270,7.572102,2.590951,-4.520364,-1.663834,-2.010563,-2.210903,9.204981,-0.177799,-5.277553,-9.715406,-5.461069,-1.151444,-6.595586,3.419697,-4.929707,-0.679395,3.758084,0.474138,-7.005092,8.185017,-6.720257,1.616901,0.824946,-6.032732,3.939142,3.608195,-1.106553,7.565661,-6.718147,3.894186,9.913263,-3.142802,-4.957167,-3.047702,-4.796329,2.225783,2.544410,-9.509914,-3.819890,-2.377206,-7.964346,0.178470,5.363772,9.908576,0.474478,-0.233178,1.820932,-7.904908,5.873175,-5.349054,-0.104524,-7.822974,-5.574529,0.173605,0.948127,-8.363314,1.224270,9.779960,1.005653,-6.974986,0.852908,1.597871,-2.931278,-6.000538,-1.015923,4.905398,7.979467,-3.401848,-3.680274,-8.053202,4.947110,7.572117,6.983586,2.562537,-6.143820,8.041249,8.556629,-4.183169,-9.648149,8.294713,2.958715,-9.946135,-8.144706,6.344198,-2.981650,9.001738,-2.116290,-6.111369,2.640658,-5.765101,9.765588,1.477213,-8.896536,-0.399481,1.805556,5.103706,-3.471253,1.568895,-2.400395,-7.171646,-3.057172,-9.792368,-9.802703,-6.644818,1.400880,5.225750,5.801208,0.837467,-2.959225,-5.625914,2.082125,2.254146,3.803142,-0.432761,7.178354,-8.996373,-0.238325,-8.728742,8.206534,-8.151593,-9.861339,-0.245625,0.386730,7.886351,5.202321,2.242782,-5.531699,8.297047,7.597435,4.753322,-3.489747,-1.526747,3.413008,8.663889,-6.587611,7.188209,-0.282123,-4.348256,1.433092,8.702974,7.324904,2.650459,1.021719,-3.947033,-8.369911,4.956444,3.652995,-4.424811,7.309816,-6.358247,2.505905,-3.977714,6.520609,2.691983,-3.632912,1.629404,8.871377,5.895259,5.797282,2.449153,-3.029560,-7.064224,1.644380,-7.499118,9.529471,-4.094604,-9.530784,-1.612430,6.470804,-8.339013,-4.695498,2.112501,-8.633020,3.765624,-6.019258,7.889519,7.145140,4.032478,-1.630671,7.978333,-9.752094,2.157166,-0.094087,-4.040233,2.398515,-9.863716,-5.660730,-9.056893,-7.630886,6.762432,-5.193197,3.903818,-2.967147,-2.726718,-9.330058,-1.208021,2.780641,4.851188,7.323865,4.719700,-5.073836,5.302621,-2.727310,6.584045,0.100314,2.741484,-0.900268,3.695143,1.369428,6.145875,-3.666142,-7.715970,3.050746,0.310320,2.795388,-3.596958,-5.796318,3.970637,9.461464,-1.573905,3.624031,-3.740317,-1.256340,-6.406638,-1.162602,-1.216571,-0.700751,-4.387702,-2.975910,-2.722317,1.487041,-0.668682,-1.311779,-5.186925,-5.872235,-2.097412,-0.085388,2.516989,5.218423,8.328027,-0.214188,-6.842931,-4.904035,-8.771681,-8.961212,0.096302,1.150314,-5.805918,8.645789,5.367880,6.866684,3.628270,3.806316,-7.581911,-5.649102,-8.847253,1.805361,4.614700,0.562317,5.977888,7.769234,6.378923,-8.505823,-0.416362,-7.587328,6.507136,-4.414364,-8.460859,-5.212966,-0.617033,-5.716252,7.291082,4.164875,0.749267,-0.602852,-3.005901,3.522892,3.691797,0.112281,1.081620,8.020864,2.808073,3.833392,8.977665,2.253159,9.073354,-6.703221,9.958841,4.524902,2.494365,3.367321,5.008595,3.463122,-0.529650,3.353429,5.722179,3.351244,-3.248648,-8.856321,-4.231039,4.137330,2.474917,-3.181311,0.091067,7.638589,9.412069,-3.149057,-7.792681,1.649828,4.992573,-7.932335,-5.590144,2.437919,2.163295,-0.833551,5.429617,6.301301,-1.346442,-1.672254,6.661062,-7.052882,-7.323222,-6.229116,-5.612954,-3.672763,-4.460423,-9.866618,-6.201709,9.136591,9.549862,0.543354,4.087260,2.122363,-9.199219,7.416777,-1.578275,-9.083767,-2.973223,3.668106,5.905629,-6.676438,-9.181403,-9.503315,2.794674,-3.694798,1.229695,0.448542,-1.065073,-9.836088,-9.657470,9.239966,0.075734,-8.704201,-3.005458,0.227580,8.497186,6.357344,-9.359802,-7.870759,3.139324,2.665939,-8.776586,4.321427,7.063859,2.821448,2.764125,-5.034706,-3.457100,-0.703345,-9.333075,-2.097308,-0.602978,-8.236530,9.927786,-8.695076,3.604730,-9.444179,-0.884860,3.475824,1.388484,-6.372008,8.996579,-7.187183,7.483438,-8.324554,-2.732969,8.641298,-0.540616,9.465157,-7.811505,-1.590982,9.435457,9.271536,-2.503900,-6.007665,0.586395,-7.772565,7.011557,-7.114453,5.170775,6.839005,-2.031329,-9.185871,-0.822957,-8.378911,3.806136,-2.415133,5.810091,7.632848,-2.458961,-2.626201,-6.310905,-5.837712,0.704367,-0.006200,7.041299,-3.644729,-5.874331,-7.757184,-5.047974,5.244163,1.297498,9.627303,2.337317,-5.070234,-8.835833,4.141663,3.313645,-1.050875,-4.842607,-0.742568,-2.432607,7.569963,0.256343,6.561161,8.282637,-6.574225,4.011468,1.300812,-3.444484,-4.102351,-9.710735,3.696852,-6.202353,-1.933714,-6.123052,-8.901943,3.817264,4.090571,-4.002848,9.306480,2.453631,-1.289114,7.911273,5.275800,-0.243258,-0.500896,8.560820,-7.221701,1.254173,-1.793637,5.048223,5.978060,4.171561,-2.797047,6.153074,0.163585,5.647179,1.852432,1.676083,-4.170635,7.811292,8.606042,-8.102564,-9.216699,-8.008285,4.787376,3.590268,4.284062,3.065616,-6.882404,8.190707,1.002091,-7.405203,6.670616,0.371225,1.656527,-8.565641,5.709969,-4.581779,-4.954680,-6.790896,3.574869,-7.591709,-3.695916,-9.301314,6.620443,-5.181595,-1.575491,4.910782,9.878394,3.528211,3.212392,6.615338,-9.779941,-7.605213,-4.054848,-8.813881,7.588220,-6.397421,-6.212811,-9.751492,-1.764715,-2.848968,0.335579,-6.811576,-6.033303,4.358807,7.739275,-2.838243,3.509208,2.420382,5.492330,6.284951,-1.786677,6.459016,-3.573608,-1.633683,-6.121054,8.695604,7.052836,-5.891601,8.740459,3.536447,-5.173938,-5.636743,3.643788,-3.494384,2.705187,2.860453,3.047014,-0.796078,-0.080491,4.997073,5.531148,9.740494,-2.144389,-5.532864,4.130982,6.632127,2.567459,1.620495,2.303376,7.381140,1.970685,-4.164258,7.908577,-9.883212,-8.896632,6.105098,-4.014280,-6.011577,-7.072312,-3.047029,-4.646708,-2.844299,4.234623,-0.616764,7.446487,8.426069,-6.150396,3.727508,-3.586691,-8.212085,7.661617,-6.983969,-0.441380,5.069015,0.920143,-5.445690,3.374189,7.270926,4.212595,7.900999,-8.545835,2.163930,-2.378010,-1.783566,4.774266,0.712007,-2.702167,-3.966406,-4.106575,-6.152330,-8.443215,-4.279697,0.990243,-8.019765,3.337353,7.416843,8.727521,2.204071,0.960078,-5.672216,-6.766271,-7.127445,-3.164376,4.325304,-4.683276,-9.307519,-0.127037,-2.269831,5.076331,-0.728095,-0.950423,-7.829993,9.944975,1.072100,9.556582,5.770097,-4.016383,9.981472,-3.337128,6.659894,-7.343762,0.793556,-1.499627,-4.289279,1.659810,7.349514,-4.790248,5.997959,3.682024,-3.756008,-5.847250,-0.915627,5.382937,5.744525,-8.195109,-2.030140,3.231421,5.410280,9.422145,3.483232,6.963179,-0.753457,-2.177874,8.308378,0.780120,-9.025174,6.508743,-7.135494,-9.753282,-3.812343,-0.920340,0.988187,6.127279,-3.699552,-8.207187,0.507184,-4.042797,2.034924,5.754922,-3.720394,9.571472,-8.367663,4.581558,8.857650,2.821961,-0.157249,0.361333,4.041819,-7.665270,4.640245,1.549898,-5.272080,4.272084,-3.737428,-0.928507,8.248178,0.966986,-1.544923,-5.220375,7.590261,-5.472264,9.249289,8.018049,-0.844143,-8.162814,4.558912,-6.385356,1.413248,5.727432,-8.320377,-5.401842,1.615962,1.615940,-2.001435,-1.302907,7.023656,0.936079,-7.613716,8.464131,9.304499,-6.557148,9.808694,-2.005435,-8.470282,-8.237301,-9.892434,-2.278383,0.489431,9.257616,0.173336,3.132213,-7.172884,-0.210477,8.407353,7.894207,6.467949,0.902228,-5.925251,-4.368831,-4.798393,1.273751,4.764407,-4.535719,-4.399653,2.860331,5.504904,-4.496066,6.037429,-2.389075,2.042704,8.121465,-0.238586,5.449208,7.087792,9.018627,7.102222,-4.875475,7.987842,9.070791,-8.668614,9.563916,0.640503,-7.139563,-0.711884,0.331971,-6.527425,1.574108,-1.630506,-4.302144,-3.161206,1.184289,-4.297432,-5.194628,-3.538564,2.375190,-2.995914,2.222209,9.902849,0.075746,-4.612670,0.222590,6.272193,9.020119,5.975266,5.251338,-8.064144,5.735103,-0.455367,-0.467868,7.477650,-0.606474,-1.620720,3.678513,1.556340,-5.373763,-5.826015,-6.841208,-5.949690,9.747421,8.376440,2.897875,9.269616,4.079186,-4.626566,-8.022026,7.670553,-2.192672,-1.285904,7.450082,-0.592413,-6.310820,9.696782,-8.938428,-6.456422,-7.082469,8.600353,6.436715], dtype = "float64")#candidate|10661|(2496,)|const|float64
call_10660 = relay.TupleGetItem(func_5315_call(relay.reshape(const_10661.astype('float64'), [2496,])), 1)
call_10662 = relay.TupleGetItem(func_5318_call(relay.reshape(const_10661.astype('float64'), [2496,])), 1)
output = relay.Tuple([call_10647,call_10660,const_10661,])
output2 = relay.Tuple([call_10648,call_10662,const_10661,])
func_10663 = relay.Function([], output)
mod['func_10663'] = func_10663
mod = relay.transform.InferType()(mod)
output = func_10663()
func_10664 = relay.Function([], output)
mutated_mod['func_10664'] = func_10664
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3937_call = mod.get_global_var('func_3937')
func_3939_call = mutated_mod.get_global_var('func_3939')
call_10670 = relay.TupleGetItem(func_3937_call(), 1)
call_10671 = relay.TupleGetItem(func_3939_call(), 1)
output = call_10670
output2 = call_10671
func_10685 = relay.Function([], output)
mod['func_10685'] = func_10685
mod = relay.transform.InferType()(mod)
output = func_10685()
func_10686 = relay.Function([], output)
mutated_mod['func_10686'] = func_10686
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8873_call = mod.get_global_var('func_8873')
func_8874_call = mutated_mod.get_global_var('func_8874')
call_10699 = func_8873_call()
call_10700 = func_8873_call()
output = call_10699
output2 = call_10700
func_10703 = relay.Function([], output)
mod['func_10703'] = func_10703
mod = relay.transform.InferType()(mod)
output = func_10703()
func_10704 = relay.Function([], output)
mutated_mod['func_10704'] = func_10704
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7480_call = mod.get_global_var('func_7480')
func_7481_call = mutated_mod.get_global_var('func_7481')
call_10707 = relay.TupleGetItem(func_7480_call(), 0)
call_10708 = relay.TupleGetItem(func_7481_call(), 0)
output = relay.Tuple([call_10707,])
output2 = relay.Tuple([call_10708,])
func_10742 = relay.Function([], output)
mod['func_10742'] = func_10742
mod = relay.transform.InferType()(mod)
mutated_mod['func_10742'] = func_10742
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10742_call = mutated_mod.get_global_var('func_10742')
call_10743 = func_10742_call()
output = call_10743
func_10744 = relay.Function([], output)
mutated_mod['func_10744'] = func_10744
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7492_call = mod.get_global_var('func_7492')
func_7494_call = mutated_mod.get_global_var('func_7494')
call_10793 = relay.TupleGetItem(func_7492_call(), 0)
call_10794 = relay.TupleGetItem(func_7494_call(), 0)
func_10010_call = mod.get_global_var('func_10010')
func_10011_call = mutated_mod.get_global_var('func_10011')
call_10798 = relay.TupleGetItem(func_10010_call(), 0)
call_10799 = relay.TupleGetItem(func_10011_call(), 0)
func_7492_call = mod.get_global_var('func_7492')
func_7494_call = mutated_mod.get_global_var('func_7494')
call_10807 = relay.TupleGetItem(func_7492_call(), 0)
call_10808 = relay.TupleGetItem(func_7494_call(), 0)
output = relay.Tuple([call_10793,call_10798,call_10807,])
output2 = relay.Tuple([call_10794,call_10799,call_10808,])
func_10816 = relay.Function([], output)
mod['func_10816'] = func_10816
mod = relay.transform.InferType()(mod)
output = func_10816()
func_10817 = relay.Function([], output)
mutated_mod['func_10817'] = func_10817
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7274_call = mod.get_global_var('func_7274')
func_7276_call = mutated_mod.get_global_var('func_7276')
call_10871 = relay.TupleGetItem(func_7274_call(), 1)
call_10872 = relay.TupleGetItem(func_7276_call(), 1)
uop_10879 = relay.asinh(call_10871.astype('float32')) # shape=(8, 6, 15)
uop_10881 = relay.asinh(call_10872.astype('float32')) # shape=(8, 6, 15)
func_5994_call = mod.get_global_var('func_5994')
func_5996_call = mutated_mod.get_global_var('func_5996')
call_10885 = relay.TupleGetItem(func_5994_call(), 0)
call_10886 = relay.TupleGetItem(func_5996_call(), 0)
output = relay.Tuple([uop_10879,call_10885,])
output2 = relay.Tuple([uop_10881,call_10886,])
func_10890 = relay.Function([], output)
mod['func_10890'] = func_10890
mod = relay.transform.InferType()(mod)
mutated_mod['func_10890'] = func_10890
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10890_call = mutated_mod.get_global_var('func_10890')
call_10891 = func_10890_call()
output = call_10891
func_10892 = relay.Function([], output)
mutated_mod['func_10892'] = func_10892
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10010_call = mod.get_global_var('func_10010')
func_10011_call = mutated_mod.get_global_var('func_10011')
call_10916 = relay.TupleGetItem(func_10010_call(), 0)
call_10917 = relay.TupleGetItem(func_10011_call(), 0)
func_9994_call = mod.get_global_var('func_9994')
func_9996_call = mutated_mod.get_global_var('func_9996')
call_10922 = func_9994_call()
call_10923 = func_9994_call()
func_10685_call = mod.get_global_var('func_10685')
func_10686_call = mutated_mod.get_global_var('func_10686')
call_10925 = func_10685_call()
call_10926 = func_10685_call()
output = relay.Tuple([call_10916,call_10922,call_10925,])
output2 = relay.Tuple([call_10917,call_10923,call_10926,])
func_10937 = relay.Function([], output)
mod['func_10937'] = func_10937
mod = relay.transform.InferType()(mod)
mutated_mod['func_10937'] = func_10937
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10937_call = mutated_mod.get_global_var('func_10937')
call_10938 = func_10937_call()
output = call_10938
func_10939 = relay.Function([], output)
mutated_mod['func_10939'] = func_10939
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3119_call = mod.get_global_var('func_3119')
func_3121_call = mutated_mod.get_global_var('func_3121')
call_10948 = relay.TupleGetItem(func_3119_call(), 1)
call_10949 = relay.TupleGetItem(func_3121_call(), 1)
func_9291_call = mod.get_global_var('func_9291')
func_9292_call = mutated_mod.get_global_var('func_9292')
call_10958 = relay.TupleGetItem(func_9291_call(), 0)
call_10959 = relay.TupleGetItem(func_9292_call(), 0)
output = relay.Tuple([call_10948,call_10958,])
output2 = relay.Tuple([call_10949,call_10959,])
func_10967 = relay.Function([], output)
mod['func_10967'] = func_10967
mod = relay.transform.InferType()(mod)
output = func_10967()
func_10968 = relay.Function([], output)
mutated_mod['func_10968'] = func_10968
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3628_call = mod.get_global_var('func_3628')
func_3629_call = mutated_mod.get_global_var('func_3629')
call_10975 = relay.TupleGetItem(func_3628_call(), 0)
call_10976 = relay.TupleGetItem(func_3629_call(), 0)
var_10989 = relay.var("var_10989", dtype = "bool", shape = (168, 8))#candidate|10989|(168, 8)|var|bool
bop_10990 = relay.less_equal(call_10975.astype('bool'), relay.reshape(var_10989.astype('bool'), relay.shape_of(call_10975))) # shape=(168, 8)
bop_10993 = relay.less_equal(call_10976.astype('bool'), relay.reshape(var_10989.astype('bool'), relay.shape_of(call_10976))) # shape=(168, 8)
output = bop_10990
output2 = bop_10993
F = relay.Function([var_10989,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_10989,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

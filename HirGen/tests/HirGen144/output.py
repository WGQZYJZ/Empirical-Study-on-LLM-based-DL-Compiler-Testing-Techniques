import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_72 = relay.var("var_72", dtype = "float64", shape = (16, 11, 4))#candidate|72|(16, 11, 4)|var|float64
uop_73 = relay.log2(var_72.astype('float64')) # shape=(16, 11, 4)
output = relay.Tuple([uop_73,])
output2 = relay.Tuple([uop_73,])
func_76 = relay.Function([var_72,], output)
mod['func_76'] = func_76
mod = relay.transform.InferType()(mod)
mutated_mod['func_76'] = func_76
mutated_mod = relay.transform.InferType()(mutated_mod)
var_77 = relay.var("var_77", dtype = "float64", shape = (16, 11, 4))#candidate|77|(16, 11, 4)|var|float64
func_76_call = mutated_mod.get_global_var('func_76')
call_78 = func_76_call(var_77)
output = call_78
func_79 = relay.Function([var_77], output)
mutated_mod['func_79'] = func_79
mutated_mod = relay.transform.InferType()(mutated_mod)
var_255 = relay.var("var_255", dtype = "uint64", shape = (8, 9, 1))#candidate|255|(8, 9, 1)|var|uint64
var_256 = relay.var("var_256", dtype = "uint64", shape = (8, 9, 16))#candidate|256|(8, 9, 16)|var|uint64
bop_257 = relay.left_shift(var_255.astype('uint64'), var_256.astype('uint64')) # shape=(8, 9, 16)
func_76_call = mod.get_global_var('func_76')
func_79_call = mutated_mod.get_global_var('func_79')
var_272 = relay.var("var_272", dtype = "float64", shape = (704,))#candidate|272|(704,)|var|float64
call_271 = relay.TupleGetItem(func_76_call(relay.reshape(var_272.astype('float64'), [16, 11, 4])), 0)
call_273 = relay.TupleGetItem(func_79_call(relay.reshape(var_272.astype('float64'), [16, 11, 4])), 0)
func_76_call = mod.get_global_var('func_76')
func_79_call = mutated_mod.get_global_var('func_79')
call_283 = relay.TupleGetItem(func_76_call(relay.reshape(call_271.astype('float64'), [16, 11, 4])), 0)
call_284 = relay.TupleGetItem(func_79_call(relay.reshape(call_271.astype('float64'), [16, 11, 4])), 0)
output = relay.Tuple([bop_257,call_271,var_272,call_283,])
output2 = relay.Tuple([bop_257,call_273,var_272,call_284,])
func_289 = relay.Function([var_255,var_256,var_272,], output)
mod['func_289'] = func_289
mod = relay.transform.InferType()(mod)
var_290 = relay.var("var_290", dtype = "uint64", shape = (8, 9, 1))#candidate|290|(8, 9, 1)|var|uint64
var_291 = relay.var("var_291", dtype = "uint64", shape = (8, 9, 16))#candidate|291|(8, 9, 16)|var|uint64
var_292 = relay.var("var_292", dtype = "float64", shape = (704,))#candidate|292|(704,)|var|float64
output = func_289(var_290,var_291,var_292,)
func_293 = relay.Function([var_290,var_291,var_292,], output)
mutated_mod['func_293'] = func_293
mutated_mod = relay.transform.InferType()(mutated_mod)
var_349 = relay.var("var_349", dtype = "float32", shape = ())#candidate|349|()|var|float32
var_350 = relay.var("var_350", dtype = "float32", shape = (15, 2, 8))#candidate|350|(15, 2, 8)|var|float32
bop_351 = relay.greater(var_349.astype('bool'), var_350.astype('bool')) # shape=(15, 2, 8)
func_76_call = mod.get_global_var('func_76')
func_79_call = mutated_mod.get_global_var('func_79')
const_356 = relay.const([[-6.473008,3.040351],[3.825576,-6.186694],[-3.849390,-8.666699],[-4.242824,1.456908],[-7.160656,9.170413],[-0.813732,-5.807177],[4.098614,6.609326],[-3.733412,5.761620],[-6.899726,1.352661],[-1.455989,-7.093423],[-0.528149,-0.034505],[-4.127842,0.630744],[-7.618924,6.092914],[9.361864,6.846758],[5.217860,-7.228019],[8.616476,-2.019893],[6.964769,3.368478],[-2.447060,-8.213354],[-4.161244,5.692009],[-9.847838,1.563740],[4.731311,3.390131],[-4.077419,-2.120797],[3.275212,9.877422],[-7.716461,-1.479877],[-1.390010,5.660821],[-6.310169,7.003452],[-3.796856,4.089394],[5.367839,2.886212],[1.165337,-8.414894],[9.170797,-8.843419],[7.535337,4.694987],[6.376084,4.798775],[8.171329,-8.569402],[9.259088,8.219741],[8.692872,-0.247011],[8.147197,7.374107],[8.824864,1.613187],[-6.350102,5.186822],[9.402371,7.735988],[6.216832,-0.810583],[8.218191,-5.927510],[-4.134922,-1.190923],[-7.774964,5.730917],[-7.197648,-3.592715],[-4.525390,-1.269467],[0.891711,-1.120077],[-8.387021,-5.301268],[2.508003,1.896528],[7.796786,6.588885],[1.733467,7.221329],[-7.718679,4.261693],[-4.813481,-4.964048],[7.660234,5.131815],[0.018902,-4.603976],[-0.034926,9.769461],[0.033748,-2.536915],[-8.275934,7.719189],[-7.076442,6.989454],[8.510083,8.567281],[-5.447195,-5.225032],[5.016272,1.229268],[1.035286,-5.397952],[-9.554896,5.250581],[-7.192331,-3.321940],[6.159200,-1.383811],[2.495767,0.296001],[8.662350,-4.477797],[-5.244871,4.560229],[-4.301338,-9.118528],[-1.971826,1.552030],[-8.784560,1.556324],[1.650624,4.007232],[2.910287,-7.028086],[5.362633,2.625395],[-8.127575,2.340536],[-9.031810,-5.569391],[8.796217,-7.137528],[-4.800666,-4.829601],[7.407256,5.292998],[8.674372,0.893142],[5.781704,1.708637],[0.924671,2.532846],[-1.299304,0.417067],[9.034108,-6.890774],[-6.163741,1.926409],[-7.286093,-4.310393],[6.583459,-7.232152],[-5.135059,9.955239],[0.135768,5.850603],[3.036335,7.897384],[7.209679,-4.060287],[-8.378477,9.798759],[4.235224,5.392275],[-3.345823,9.471757],[-5.790845,-5.603614],[-3.479832,-8.847767],[2.894635,-6.288533],[-4.363929,-7.837321],[-0.916064,-9.273076],[3.971970,-6.758652],[-4.771640,1.060104],[9.605180,-0.921128],[-9.488438,-1.262727],[-4.140491,8.926511],[-6.063332,-0.974709],[9.604307,-7.557806],[0.825635,-5.109507],[-1.914433,-0.580681],[4.152669,8.967945],[-5.574887,-6.763233],[7.072201,5.182584],[7.877233,8.745813],[4.252678,-2.838101],[-7.024515,-6.498740],[7.809230,8.116870],[7.578417,0.856380],[1.204707,9.809072],[-3.318043,-3.099759],[3.499783,-4.892238],[-2.186788,-4.125772],[6.198454,-1.917204],[-0.640980,-3.207598],[-4.598871,8.570642],[7.529346,-4.177206],[-4.396180,-0.508213],[5.344674,-1.841024],[4.783734,9.417082],[-1.606932,5.201402],[-7.223624,8.000948],[-2.216984,-5.857433],[4.320149,7.389666],[-9.943930,9.479247],[9.726612,-9.510395],[6.687532,1.020561],[3.099676,-6.112581],[0.591194,3.808615],[-9.217851,-5.114990],[-3.248222,4.965357],[-5.663412,-4.650659],[-0.885998,2.195280],[-1.684562,-8.752134],[-3.277863,-2.909188],[-5.562194,6.397736],[-9.470232,3.940511],[-0.681639,7.038275],[-7.135816,-5.626080],[8.022901,-9.734278],[5.666085,-4.321360],[9.959471,5.044956],[-5.036804,2.661195],[-4.371920,-0.942139],[4.340188,9.308043],[6.351365,4.174297],[6.565237,2.753326],[-6.782083,-3.237851],[2.243649,6.790533],[3.700383,3.262388],[-6.777657,-7.165109],[2.916041,9.396160],[-1.291290,-9.101046],[-0.989729,-4.245283],[-5.432260,-3.460837],[5.574138,-5.026969],[4.771731,5.685621],[-0.609484,6.886574],[8.286614,5.814535],[-3.134980,6.527638],[-3.002774,1.961851],[1.643575,-0.431330],[5.665351,4.883626],[-8.564315,1.066875],[4.399734,-2.717080],[8.317254,9.826967],[-1.471354,-3.008222],[7.962496,4.367550],[0.575278,-2.313377],[-8.983477,-8.738354],[-3.208608,-9.029450],[9.654924,-0.298803],[-3.450081,-8.413113],[-1.691661,-1.742810],[5.755820,-0.704996],[3.487321,-5.434648],[-6.196425,9.364663],[5.844296,-4.277829],[7.408496,-2.719857],[-2.386606,-5.525926],[-5.514773,2.940950],[-8.308723,9.006615],[-8.255222,-1.152661],[9.104613,-5.745911],[-2.215478,0.718118],[-2.059878,0.386624],[-4.224119,-4.135140],[-2.968912,-5.645789],[-9.051261,-6.974969],[3.045256,-2.035992],[7.301518,1.151108],[3.496317,-5.861647],[-2.750621,4.384553],[6.128711,-1.112395],[6.758663,-0.450873],[4.049597,-9.137461],[-5.526094,-5.203917],[-6.636984,1.266242],[-4.158979,-7.969920],[3.752866,4.714526],[-5.547358,-3.978985],[3.422511,-0.934559],[6.653646,-6.929797],[2.101126,-0.773366],[9.395388,4.674130],[7.447540,9.710506],[-2.780881,1.390834],[-0.752353,5.368703],[-7.122411,-8.838904],[-8.504426,-3.125079],[-4.387375,7.311730],[4.957591,9.669858],[-8.863746,-1.877336],[-3.169270,9.988664],[9.096346,-7.847914],[4.207018,8.820297],[6.984504,3.350007],[-9.847335,9.297031],[2.735482,-5.569650],[1.332463,8.817668],[-1.899801,1.767479],[-5.707635,0.423852],[-5.885922,0.024879],[7.325466,5.726794],[1.571045,2.980165],[-7.487635,-6.026539],[1.966760,-2.572378],[-4.307407,-8.181479],[1.723323,3.601782],[5.539212,5.288394],[-2.936189,0.485472],[3.536942,-1.022798],[-4.856772,-9.930719],[3.162421,-3.403121],[7.085514,2.722080],[-4.937771,2.195582],[4.257284,5.196325],[1.886981,-6.077174],[-3.541388,-0.309982],[-4.778562,-5.709656],[-9.179062,5.303679],[2.640288,-6.159505],[-9.459866,-1.901167],[5.498125,-9.024511],[2.151964,8.406839],[7.822146,-0.571995],[-4.969540,7.144495],[-1.157515,6.205857],[1.061864,-4.404739],[-4.153233,8.426596],[-9.531553,1.138382],[9.921113,-7.720301],[-7.192823,-4.024426],[-7.611548,2.249511],[3.894424,5.672008],[-3.009970,-8.069628],[-1.685551,-8.004817],[6.484905,1.828036],[2.748147,0.945848],[1.913801,4.023990],[-9.110320,4.810203],[6.390744,4.502160],[6.854643,-0.339942],[9.720920,3.597584],[3.262591,-9.920102],[-2.920097,-9.302511],[-9.899290,-7.032190],[5.151902,0.262327],[3.874245,-8.127601],[5.789403,4.247209],[2.386021,-9.828062],[-0.878092,-8.705698],[0.910794,-3.331902],[-1.109882,-1.118438],[2.299504,-8.177211],[-4.871633,-1.122809],[-0.560926,-3.249818],[-2.140635,1.127281],[5.215018,-3.168550],[2.033609,4.372324],[6.314998,-5.415286],[-0.784740,-6.098465],[-1.845511,7.456226],[6.161935,-6.993059],[-6.038525,9.949677],[5.611929,-9.312712],[4.338318,-6.576156],[5.081803,9.819502],[-0.231199,4.328344],[-8.040955,-0.734287],[-1.405247,-7.381767],[9.043902,-3.606093],[5.473306,-9.159290],[-0.459909,-8.163748],[8.980411,-0.710157],[-0.505959,7.672144],[-5.510301,-0.168948],[-9.983986,3.580583],[-0.692538,-8.435360],[-0.107827,5.826418],[2.670570,-4.958007],[8.313317,1.430331],[-3.691515,5.519889],[0.146227,0.242488],[1.507195,9.192541],[-2.256724,5.976865],[-0.595555,-0.706374],[-9.338687,-9.948387],[5.240464,3.129572],[2.098879,5.839216],[-9.600375,2.177865],[1.350057,3.546689],[-9.972231,-1.914376],[6.079705,3.066806],[-8.995004,6.093633],[3.861490,-5.550270],[-4.524012,8.432281],[-4.995969,3.534934],[-3.424916,-1.937482],[9.350279,-2.081138],[-0.317704,-5.011160],[-0.903281,7.350583],[7.597603,0.808311],[2.037954,8.914577],[0.892243,5.756737],[0.208756,6.339014],[8.943810,6.138125],[7.438294,-7.168060],[5.730056,-3.613393],[-3.837656,-3.077703],[-6.855395,6.929299],[3.291442,7.394045],[4.684795,-9.225921],[-6.623233,-9.135306],[4.119261,-9.640817],[-7.308843,0.894586],[-7.916928,0.840568],[3.359761,-7.404054],[-1.607802,3.041751],[0.647657,-4.493221],[-9.273297,7.147191],[-4.565567,-4.823626],[-3.913490,4.951387],[-7.880661,-4.288927],[-2.066087,8.402781]], dtype = "float64")#candidate|356|(352, 2)|const|float64
call_355 = relay.TupleGetItem(func_76_call(relay.reshape(const_356.astype('float64'), [16, 11, 4])), 0)
call_357 = relay.TupleGetItem(func_79_call(relay.reshape(const_356.astype('float64'), [16, 11, 4])), 0)
bop_358 = relay.divide(const_356.astype('float64'), relay.reshape(call_355.astype('float64'), relay.shape_of(const_356))) # shape=(352, 2)
bop_361 = relay.divide(const_356.astype('float64'), relay.reshape(call_357.astype('float64'), relay.shape_of(const_356))) # shape=(352, 2)
var_369 = relay.var("var_369", dtype = "float64", shape = (16, 11, 4))#candidate|369|(16, 11, 4)|var|float64
bop_370 = relay.bitwise_and(call_355.astype('int64'), relay.reshape(var_369.astype('int64'), relay.shape_of(call_355))) # shape=(16, 11, 4)
bop_373 = relay.bitwise_and(call_357.astype('int64'), relay.reshape(var_369.astype('int64'), relay.shape_of(call_357))) # shape=(16, 11, 4)
func_289_call = mod.get_global_var('func_289')
func_293_call = mutated_mod.get_global_var('func_293')
var_399 = relay.var("var_399", dtype = "uint64", shape = (72,))#candidate|399|(72,)|var|uint64
const_400 = relay.const([10,-6,-6,10,-8,-8,-4,-4,-4,-1,-6,-8,2,10,-10,4,10,9,-5,-9,3,-9,2,10,-6,10,5,-3,-2,10,-1,-3,2,-8,1,10,-3,-1,-10,-3,-1,-8,-1,-3,3,6,-8,6,-1,9,-10,-7,5,9,8,2,7,8,-3,2,4,2,6,-2,-2,2,7,4,7,9,-5,9,-5,1,-5,5,-10,-1,-5,-7,5,7,-9,6,-4,3,8,-5,-8,2,-7,5,2,-6,-1,3,2,-2,3,-7,4,10,4,6,2,-7,3,-8,8,-5,9,-8,10,-2,-7,3,2,5,9,-10,-9,1,9,-10,-5,7,-3,-7,-5,5,9,-5,-1,7,-2,-2,3,7,-3,6,-10,-6,-10,-5,1,10,9,-8,-6,2,-3,-10,-8,-6,-4,2,7,-8,-8,-5,4,-6,-9,-3,3,-4,10,1,-3,-10,9,-2,8,7,-4,5,-8,-2,7,-3,-1,-7,10,-6,4,1,-7,-10,-6,1,9,-9,6,3,7,6,-10,-6,10,5,-9,5,-1,9,4,-7,-5,-10,-8,-6,9,-10,4,3,-9,8,-5,3,10,3,-3,8,7,-1,-3,7,-3,-2,4,-1,-4,-10,-1,-6,7,6,-10,-10,-2,-9,1,4,-4,1,4,10,10,-6,2,-4,1,-9,-4,-7,1,9,3,-4,-2,6,6,3,-5,10,2,8,-6,6,9,4,1,-2,7,-3,10,6,-5,-5,-1,-2,1,-10,-1,4,-10,-10,2,-7,-7,-1,-10,-4,-9,9,-5,2,-1,10,-9,-1,-5,-1,-2,-9,9,-7,-8,-5,-1,-4,3,10,-10,-7,-7,7,-1,10,-7,4,8,6,-4,10,3,-2,1,4,4,-10,4,-4,6,-8,-2,10,4,3,-6,3,-8,8,9,-1,-5,-6,8,4,6,8,6,8,-3,10,-6,9,-10,-5,10,1,-7,-6,1,-9,-4,6,7,10,7,-1,4,10,8,-2,1,8,4,-1,4,3,8,-7,-3,9,8,-4,-10,6,-10,-10,4,7,4,3,1,-7,5,-6,-1,-8,-4,5,9,-4,2,7,4,3,5,5,4,-5,-5,5,7,-9,8,-5,-5,-3,4,2,6,-5,3,-9,3,-6,-6,-6,-4,1,7,8,-4,-9,-3,-6,6,1,3,-8,3,-5,-5,-1,-4,-3,-10,-2,-2,-3,-2,5,2,1,8,-4,-3,2,-9,-7,7,5,2,2,-10,10,-5,2,-1,-7,-2,9,-1,3,4,-5,3,6,9,9,4,1,-2,-1,8,1,-8,-5,-1,-8,-2,6,3,9,10,1,-7,5,7,-2,3,-7,8,-9,2,-4,10,-10,-3,-5,6,9,8,3,-10,-2,-2,4,-1,-9,-4,-9,-4,-7,7,10,-8,9,2,3,8,-5,-4,-10,-5,8,-1,-4,-6,-2,5,-8,-10,10,8,-4,-1,-7,-9,8,6,-1,-4,2,8,-3,-5,-5,-8,6,10,-4,-8,-4,8,1,9,-10,9,-1,5,7,4,6,-8,-10,2,-9,-5,-7,4,-6,10,-6,-10,-3,2,9,-3,-10,5,1,-1,8,-3,8,3,-2,4,1,6,10,-7,6,4,-2,5,8,4,-4,1,4,-10,6,-4,-7,-4,-2,8,10,5,10,-7,-8,4,-6,3,-10,6,-6,-4,3,-2,6,3,3,-10,-6,1,6,5,10,-1,3,-6,-8,-4,8,-5,7,4,4,2,1,-5,9,-2,-9,1,2,1,-2,10,2,-6,-3,-10,4,-10,-5,5,-6,7,10,7,9,-2,4,1,-7,-6,7,9,10,-8,4,-1,8,6,-9,-10,5,-9,3,-7,-7,3,1,-5,3,5,7,-10,7,-5,-10,-5,6,-4,-4,-1,5,4,8,-6,7,10,1,-10,-5,3,1,-10,1,-8,-6,5,5,-7,3,5,9,3,-3,-6,-10,-6,6,8,2,4,6,-9,-1,3,-2,-5,4,-8,-2,7,-3,1,-1,-1,-6,8,4,-3,4,10,-6,6,2,-7,8,6,-9,5,7,-2,8,-9,7,-9,9,8,4,-5,8,3,-8,-9,8,-6,9,10,-7,-2,-10,-9,10,-6,1,-3,5,-7,6,9,-2,-9,-4,10,7,-10,-3,-5,6,9,3,6,-9,1,9,-9,9,-1,6,-4,5,9,-3,-3,8,-6,-2,-8,-5,6,1,4,3,2,-9,2,2,-2,-6,4,4,4,2,9,-3,1,2,5,-3,5,-5,5,-6,2,3,5,-8,5,1,9,-3,-9,8,-10,-10,2,-4,3,-6,-4,-5,-6,8,-2,9,2,-4,9,-4,4,6,1,2,9,-3,7,-2,8,8,8,3,-9,2,10,7,-1,-7,2,-8,-1,4,6,3,-3,-8,-8,2,8,3,3,10,-4,8,-10,5,-7,9,4,-1,-5,-9,-10,8,8,-5,-3,4,-6,3,1,7,-8,3,-2,-8,-5,-8,9,-2,9,-5,4,2,-4,-8,-3,-2,3,3,-2,-10,10,-2,6,-6,-1,9,-2,7,-6,-10,-10,-1,8,8,-5,-6,6,3,-2,-9,10,2,9,-8,4,5,10,9,-10,-9,5,1,5,-5,5,-10,10,-8,1,5,4,3,3,-2,-9,9,6,5,-6,-6,4,5,-10,-4,-9,-8,6,4,3,4,7,-6,-3,-2,-3,9,8,1,7,1,-4,-6,2,10,6,-7,-9,-5,6,-3,-10,6,6,-6,-3,-6,5,7,-2,5,5,2,-7,-6,6,1,10,4,5,9,-6,-6,7,-10,-4,-10,7,1,-2,-4,-6,4,2,-4,-9,-6,-9,8,8,8,3,9,1,1,-8,-2,1,2,6,-2,-10,10,1,-7,5,10,-3,-5,10,-8,4,5,-9,-1,-5,-10,3,4,9,2,-5,2,-3,4,7,-4,-5,-8,-5,9,-4,-5,-10,-1,-10,-5,-5,-5,-7,2,3,5,-4,-2,2,9,10,-10,-4,-9,4,-1,2,9,-9,1,8,9,9,-3,1,-6,7,-1,-9,-7,-6,-3,-8,-6], dtype = "uint64")#candidate|400|(1152,)|const|uint64
call_398 = relay.TupleGetItem(func_289_call(relay.reshape(var_399.astype('uint64'), [8, 9, 1]), relay.reshape(const_400.astype('uint64'), [8, 9, 16]), relay.reshape(bop_358.astype('float64'), [704,]), ), 3)
call_401 = relay.TupleGetItem(func_293_call(relay.reshape(var_399.astype('uint64'), [8, 9, 1]), relay.reshape(const_400.astype('uint64'), [8, 9, 16]), relay.reshape(bop_358.astype('float64'), [704,]), ), 3)
func_289_call = mod.get_global_var('func_289')
func_293_call = mutated_mod.get_global_var('func_293')
call_402 = relay.TupleGetItem(func_289_call(relay.reshape(var_399.astype('uint64'), [8, 9, 1]), relay.reshape(const_400.astype('uint64'), [8, 9, 16]), relay.reshape(bop_358.astype('float64'), [704,]), ), 2)
call_403 = relay.TupleGetItem(func_293_call(relay.reshape(var_399.astype('uint64'), [8, 9, 1]), relay.reshape(const_400.astype('uint64'), [8, 9, 16]), relay.reshape(bop_358.astype('float64'), [704,]), ), 2)
bop_405 = relay.logical_or(var_350.astype('bool'), var_349.astype('bool')) # shape=(15, 2, 8)
uop_417 = relay.asinh(bop_358.astype('float32')) # shape=(352, 2)
uop_419 = relay.asinh(bop_361.astype('float32')) # shape=(352, 2)
bop_420 = relay.subtract(bop_405.astype('int16'), relay.reshape(bop_351.astype('int16'), relay.shape_of(bop_405))) # shape=(15, 2, 8)
bop_429 = relay.minimum(uop_417.astype('uint32'), relay.reshape(bop_370.astype('uint32'), relay.shape_of(uop_417))) # shape=(352, 2)
bop_432 = relay.minimum(uop_419.astype('uint32'), relay.reshape(bop_373.astype('uint32'), relay.shape_of(uop_419))) # shape=(352, 2)
output = relay.Tuple([call_398,var_399,const_400,call_402,bop_420,bop_429,])
output2 = relay.Tuple([call_401,var_399,const_400,call_403,bop_420,bop_432,])
func_434 = relay.Function([var_349,var_350,var_369,var_399,], output)
mod['func_434'] = func_434
mod = relay.transform.InferType()(mod)
mutated_mod['func_434'] = func_434
mutated_mod = relay.transform.InferType()(mutated_mod)
func_434_call = mutated_mod.get_global_var('func_434')
var_436 = relay.var("var_436", dtype = "float32", shape = ())#candidate|436|()|var|float32
var_437 = relay.var("var_437", dtype = "float32", shape = (15, 2, 8))#candidate|437|(15, 2, 8)|var|float32
var_438 = relay.var("var_438", dtype = "float64", shape = (16, 11, 4))#candidate|438|(16, 11, 4)|var|float64
var_439 = relay.var("var_439", dtype = "uint64", shape = (72,))#candidate|439|(72,)|var|uint64
call_435 = func_434_call(var_436,var_437,var_438,var_439,)
output = call_435
func_440 = relay.Function([var_436,var_437,var_438,var_439,], output)
mutated_mod['func_440'] = func_440
mutated_mod = relay.transform.InferType()(mutated_mod)
const_635 = relay.const([[[5.672825,-8.497675],[-3.472143,2.734129],[-0.180014,-4.772846],[8.432758,-1.287510],[2.397942,-2.316080],[8.229387,-7.272339],[2.920214,1.130492],[9.642374,6.986599],[-8.716173,-8.257389],[-8.836632,-6.407206],[-9.805649,1.595030],[0.755325,-6.657512],[-0.948197,-8.430359],[8.583638,8.546676],[7.029562,0.919783],[-0.078447,-9.711022]],[[-3.589136,8.962152],[-5.158811,8.584755],[1.425379,4.634269],[-6.327815,5.712400],[-6.759845,1.898667],[-7.843365,1.438442],[6.218937,-5.448112],[5.991693,-0.398596],[2.780409,-1.810500],[4.105748,4.939205],[-1.022441,-2.470585],[-9.495963,-1.076520],[2.067390,6.183999],[-4.392070,8.176742],[8.679527,2.239256],[-1.622890,-4.367318]]], dtype = "float64")#candidate|635|(2, 16, 2)|const|float64
var_636 = relay.var("var_636", dtype = "float64", shape = (2, 16, 2))#candidate|636|(2, 16, 2)|var|float64
bop_637 = relay.less(const_635.astype('bool'), relay.reshape(var_636.astype('bool'), relay.shape_of(const_635))) # shape=(2, 16, 2)
output = relay.Tuple([bop_637,])
output2 = relay.Tuple([bop_637,])
func_661 = relay.Function([var_636,], output)
mod['func_661'] = func_661
mod = relay.transform.InferType()(mod)
mutated_mod['func_661'] = func_661
mutated_mod = relay.transform.InferType()(mutated_mod)
var_662 = relay.var("var_662", dtype = "float64", shape = (2, 16, 2))#candidate|662|(2, 16, 2)|var|float64
func_661_call = mutated_mod.get_global_var('func_661')
call_663 = func_661_call(var_662)
output = call_663
func_664 = relay.Function([var_662], output)
mutated_mod['func_664'] = func_664
mutated_mod = relay.transform.InferType()(mutated_mod)
var_725 = relay.var("var_725", dtype = "float64", shape = (14, 9, 3))#candidate|725|(14, 9, 3)|var|float64
var_726 = relay.var("var_726", dtype = "float64", shape = (14, 9, 3))#candidate|726|(14, 9, 3)|var|float64
bop_727 = relay.add(var_725.astype('float64'), relay.reshape(var_726.astype('float64'), relay.shape_of(var_725))) # shape=(14, 9, 3)
output = relay.Tuple([bop_727,])
output2 = relay.Tuple([bop_727,])
func_733 = relay.Function([var_725,var_726,], output)
mod['func_733'] = func_733
mod = relay.transform.InferType()(mod)
var_734 = relay.var("var_734", dtype = "float64", shape = (14, 9, 3))#candidate|734|(14, 9, 3)|var|float64
var_735 = relay.var("var_735", dtype = "float64", shape = (14, 9, 3))#candidate|735|(14, 9, 3)|var|float64
output = func_733(var_734,var_735,)
func_736 = relay.Function([var_734,var_735,], output)
mutated_mod['func_736'] = func_736
mutated_mod = relay.transform.InferType()(mutated_mod)
var_835 = relay.var("var_835", dtype = "int64", shape = ())#candidate|835|()|var|int64
const_836 = relay.const([[[-6,-1,-6,-3],[6,1,-2,-6],[4,-8,-6,5],[-10,-8,7,-3],[6,-6,-4,-9],[-8,2,9,-10],[9,-9,4,-6],[6,-3,8,8],[2,8,2,6],[10,-1,-5,1],[8,-9,-3,-1],[9,-1,-2,2],[-2,7,10,5],[1,-8,-8,-10],[-8,-3,4,-9],[7,-1,-1,-2]],[[3,-9,3,2],[4,2,-10,10],[-1,-8,-6,9],[1,10,-1,6],[-2,-9,-1,-10],[-3,-6,-3,1],[-9,1,10,-9],[-10,-10,1,-8],[-1,9,6,-6],[10,-3,8,10],[-5,-5,3,-3],[-2,7,-8,-6],[10,2,5,-6],[-10,1,-3,9],[2,-2,-5,9],[7,-1,-10,6]],[[4,-7,-6,7],[4,-5,-9,-4],[8,9,10,-1],[5,-3,-10,-5],[7,-5,-7,-10],[-10,-7,-1,3],[6,3,9,2],[-5,-9,4,-9],[-7,5,-9,-2],[-1,-10,-1,-4],[-5,2,10,-10],[-1,-1,-2,-7],[9,3,-8,-6],[6,-3,-9,4],[3,-9,-4,-1],[-7,-1,7,10]]], dtype = "int64")#candidate|836|(3, 16, 4)|const|int64
bop_837 = relay.bitwise_or(var_835.astype('int64'), const_836.astype('int64')) # shape=(3, 16, 4)
output = relay.Tuple([bop_837,])
output2 = relay.Tuple([bop_837,])
func_841 = relay.Function([var_835,], output)
mod['func_841'] = func_841
mod = relay.transform.InferType()(mod)
var_842 = relay.var("var_842", dtype = "int64", shape = ())#candidate|842|()|var|int64
output = func_841(var_842)
func_843 = relay.Function([var_842], output)
mutated_mod['func_843'] = func_843
mutated_mod = relay.transform.InferType()(mutated_mod)
var_888 = relay.var("var_888", dtype = "float64", shape = (2, 13, 3))#candidate|888|(2, 13, 3)|var|float64
uop_889 = relay.asin(var_888.astype('float64')) # shape=(2, 13, 3)
output = relay.Tuple([uop_889,])
output2 = relay.Tuple([uop_889,])
func_891 = relay.Function([var_888,], output)
mod['func_891'] = func_891
mod = relay.transform.InferType()(mod)
var_892 = relay.var("var_892", dtype = "float64", shape = (2, 13, 3))#candidate|892|(2, 13, 3)|var|float64
output = func_891(var_892)
func_893 = relay.Function([var_892], output)
mutated_mod['func_893'] = func_893
mutated_mod = relay.transform.InferType()(mutated_mod)
var_966 = relay.var("var_966", dtype = "float64", shape = (8, 3, 7))#candidate|966|(8, 3, 7)|var|float64
uop_967 = relay.log(var_966.astype('float64')) # shape=(8, 3, 7)
output = uop_967
output2 = uop_967
func_970 = relay.Function([var_966,], output)
mod['func_970'] = func_970
mod = relay.transform.InferType()(mod)
var_971 = relay.var("var_971", dtype = "float64", shape = (8, 3, 7))#candidate|971|(8, 3, 7)|var|float64
output = func_970(var_971)
func_972 = relay.Function([var_971], output)
mutated_mod['func_972'] = func_972
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1086 = relay.const([[[-5.206829,-8.302642,-1.322239,-9.083756,3.824934,5.782226,6.586006,8.093499,-2.950974,-5.076295,4.501533,-2.925498],[-8.251159,-5.913790,0.172239,-6.176440,6.289169,-5.118310,-2.832992,-1.638757,-2.377555,-1.538714,0.289118,8.102640]],[[7.606939,-6.238261,3.885000,8.393004,-3.731735,-6.876582,-2.652038,0.800895,8.594905,8.527351,4.015521,-0.845038],[-0.810817,9.208724,-4.967348,7.772460,-2.492343,-9.269275,-7.385856,6.877214,2.088249,-1.471791,4.662160,4.500480]],[[1.851352,-9.461491,-3.464957,-9.729770,-6.953629,9.859757,6.968331,-7.053698,-1.831235,8.532095,-9.613353,9.055412],[-8.214522,2.812130,-8.519953,5.518848,-2.453562,-8.487919,-0.914772,9.105797,-5.614306,4.283334,8.024591,-9.120719]],[[3.352652,-6.747333,-6.612650,0.104656,4.426563,-5.304705,-9.123851,4.144197,-7.884862,2.110026,4.521051,5.245045],[8.995499,6.063733,-9.057486,8.444013,5.878535,5.898408,8.051042,-4.339056,-2.377505,-8.021655,-9.912924,7.949716]],[[5.399564,8.927963,3.805475,6.396737,-9.793205,9.463486,-6.800803,-4.867374,-2.381058,0.671430,-9.833534,-1.434513],[1.973770,7.944011,-2.529096,-7.720329,-6.758876,-7.365860,-0.443942,-4.468494,-2.436957,1.458782,-7.675788,-3.917498]],[[3.921428,4.411297,-6.799832,-9.764356,-4.594342,4.156407,-6.759109,7.767792,-5.097398,-4.315472,4.465937,1.520992],[-7.661873,-9.650776,-5.592436,0.949032,-4.855370,7.167773,-9.004411,-1.781811,-5.908876,-4.476465,7.206256,1.578938]],[[7.581806,-1.872488,-0.182546,8.740791,-8.509496,-0.192840,-2.055073,6.185695,-8.449046,5.439518,-1.765378,4.021463],[-6.549108,-5.219493,1.270896,7.655108,7.287768,1.297189,6.094500,3.711209,-7.576664,-6.932770,9.600909,-1.017897]],[[-1.776529,9.334659,1.424329,0.890814,-8.200052,-7.717697,2.684792,-3.684225,8.771205,4.485885,-0.446173,0.207288],[-0.918379,-2.037542,4.716595,5.725090,-8.456917,-7.353462,7.743542,1.990509,1.084554,-3.376957,2.164013,-0.259116]],[[-7.121621,8.555761,-7.896676,-5.211364,-5.808212,-8.464835,3.923325,-6.225078,-0.554864,8.901202,-5.269575,2.777809],[-8.875923,9.974938,7.119019,7.667555,3.833652,-7.879613,6.205775,-8.176139,5.514107,7.549800,-8.987451,9.757864]]], dtype = "float32")#candidate|1086|(9, 2, 12)|const|float32
uop_1087 = relay.log2(const_1086.astype('float32')) # shape=(9, 2, 12)
func_289_call = mod.get_global_var('func_289')
func_293_call = mutated_mod.get_global_var('func_293')
var_1096 = relay.var("var_1096", dtype = "uint64", shape = (18, 4))#candidate|1096|(18, 4)|var|uint64
var_1097 = relay.var("var_1097", dtype = "uint64", shape = (1152,))#candidate|1097|(1152,)|var|uint64
var_1098 = relay.var("var_1098", dtype = "float64", shape = (704,))#candidate|1098|(704,)|var|float64
call_1095 = relay.TupleGetItem(func_289_call(relay.reshape(var_1096.astype('uint64'), [8, 9, 1]), relay.reshape(var_1097.astype('uint64'), [8, 9, 16]), relay.reshape(var_1098.astype('float64'), [704,]), ), 2)
call_1099 = relay.TupleGetItem(func_293_call(relay.reshape(var_1096.astype('uint64'), [8, 9, 1]), relay.reshape(var_1097.astype('uint64'), [8, 9, 16]), relay.reshape(var_1098.astype('float64'), [704,]), ), 2)
func_841_call = mod.get_global_var('func_841')
func_843_call = mutated_mod.get_global_var('func_843')
const_1105 = relay.const(-3, dtype = "int64")#candidate|1105|()|const|int64
call_1104 = relay.TupleGetItem(func_841_call(relay.reshape(const_1105.astype('int64'), [])), 0)
call_1106 = relay.TupleGetItem(func_843_call(relay.reshape(const_1105.astype('int64'), [])), 0)
output = relay.Tuple([uop_1087,call_1095,var_1096,var_1097,var_1098,call_1104,const_1105,])
output2 = relay.Tuple([uop_1087,call_1099,var_1096,var_1097,var_1098,call_1106,const_1105,])
func_1109 = relay.Function([var_1096,var_1097,var_1098,], output)
mod['func_1109'] = func_1109
mod = relay.transform.InferType()(mod)
var_1110 = relay.var("var_1110", dtype = "uint64", shape = (18, 4))#candidate|1110|(18, 4)|var|uint64
var_1111 = relay.var("var_1111", dtype = "uint64", shape = (1152,))#candidate|1111|(1152,)|var|uint64
var_1112 = relay.var("var_1112", dtype = "float64", shape = (704,))#candidate|1112|(704,)|var|float64
output = func_1109(var_1110,var_1111,var_1112,)
func_1113 = relay.Function([var_1110,var_1111,var_1112,], output)
mutated_mod['func_1113'] = func_1113
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1224 = relay.var("var_1224", dtype = "int16", shape = ())#candidate|1224|()|var|int16
var_1225 = relay.var("var_1225", dtype = "int16", shape = (12, 7, 12))#candidate|1225|(12, 7, 12)|var|int16
bop_1226 = relay.left_shift(var_1224.astype('int16'), var_1225.astype('int16')) # shape=(12, 7, 12)
func_76_call = mod.get_global_var('func_76')
func_79_call = mutated_mod.get_global_var('func_79')
var_1231 = relay.var("var_1231", dtype = "float64", shape = (176, 4))#candidate|1231|(176, 4)|var|float64
call_1230 = relay.TupleGetItem(func_76_call(relay.reshape(var_1231.astype('float64'), [16, 11, 4])), 0)
call_1232 = relay.TupleGetItem(func_79_call(relay.reshape(var_1231.astype('float64'), [16, 11, 4])), 0)
uop_1233 = relay.atan(bop_1226.astype('float64')) # shape=(12, 7, 12)
uop_1235 = relay.log(uop_1233.astype('float32')) # shape=(12, 7, 12)
output = relay.Tuple([call_1230,var_1231,uop_1235,])
output2 = relay.Tuple([call_1232,var_1231,uop_1235,])
func_1243 = relay.Function([var_1224,var_1225,var_1231,], output)
mod['func_1243'] = func_1243
mod = relay.transform.InferType()(mod)
var_1244 = relay.var("var_1244", dtype = "int16", shape = ())#candidate|1244|()|var|int16
var_1245 = relay.var("var_1245", dtype = "int16", shape = (12, 7, 12))#candidate|1245|(12, 7, 12)|var|int16
var_1246 = relay.var("var_1246", dtype = "float64", shape = (176, 4))#candidate|1246|(176, 4)|var|float64
output = func_1243(var_1244,var_1245,var_1246,)
func_1247 = relay.Function([var_1244,var_1245,var_1246,], output)
mutated_mod['func_1247'] = func_1247
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1249 = relay.var("var_1249", dtype = "uint64", shape = (16, 15, 13))#candidate|1249|(16, 15, 13)|var|uint64
var_1250 = relay.var("var_1250", dtype = "uint64", shape = (16, 15, 13))#candidate|1250|(16, 15, 13)|var|uint64
bop_1251 = relay.multiply(var_1249.astype('uint64'), relay.reshape(var_1250.astype('uint64'), relay.shape_of(var_1249))) # shape=(16, 15, 13)
output = relay.Tuple([bop_1251,])
output2 = relay.Tuple([bop_1251,])
func_1257 = relay.Function([var_1249,var_1250,], output)
mod['func_1257'] = func_1257
mod = relay.transform.InferType()(mod)
mutated_mod['func_1257'] = func_1257
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1257_call = mutated_mod.get_global_var('func_1257')
var_1259 = relay.var("var_1259", dtype = "uint64", shape = (16, 15, 13))#candidate|1259|(16, 15, 13)|var|uint64
var_1260 = relay.var("var_1260", dtype = "uint64", shape = (16, 15, 13))#candidate|1260|(16, 15, 13)|var|uint64
call_1258 = func_1257_call(var_1259,var_1260,)
output = call_1258
func_1261 = relay.Function([var_1259,var_1260,], output)
mutated_mod['func_1261'] = func_1261
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1373 = relay.var("var_1373", dtype = "float64", shape = (5, 3, 15))#candidate|1373|(5, 3, 15)|var|float64
const_1374 = relay.constdtype = "float64")#candidate|1374|(5, 3, 15)|const|float64
bop_1375 = relay.mod(var_1373.astype('float64'), relay.reshape(const_1374.astype('float64'), relay.shape_of(var_1373))) # shape=(5, 3, 15)
output = bop_1375
output2 = bop_1375
func_1384 = relay.Function([var_1373,], output)
mod['func_1384'] = func_1384
mod = relay.transform.InferType()(mod)
var_1385 = relay.var("var_1385", dtype = "float64", shape = (5, 3, 15))#candidate|1385|(5, 3, 15)|var|float64
output = func_1384(var_1385)
func_1386 = relay.Function([var_1385], output)
mutated_mod['func_1386'] = func_1386
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1472 = relay.var("var_1472", dtype = "float32", shape = (16, 12, 7))#candidate|1472|(16, 12, 7)|var|float32
uop_1473 = relay.sinh(var_1472.astype('float32')) # shape=(16, 12, 7)
output = uop_1473
output2 = uop_1473
func_1475 = relay.Function([var_1472,], output)
mod['func_1475'] = func_1475
mod = relay.transform.InferType()(mod)
var_1476 = relay.var("var_1476", dtype = "float32", shape = (16, 12, 7))#candidate|1476|(16, 12, 7)|var|float32
output = func_1475(var_1476)
func_1477 = relay.Function([var_1476], output)
mutated_mod['func_1477'] = func_1477
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1584 = relay.var("var_1584", dtype = "int64", shape = (11, 8, 11))#candidate|1584|(11, 8, 11)|var|int64
var_1585 = relay.var("var_1585", dtype = "int64", shape = (11, 8, 11))#candidate|1585|(11, 8, 11)|var|int64
bop_1586 = relay.add(var_1584.astype('int64'), relay.reshape(var_1585.astype('int64'), relay.shape_of(var_1584))) # shape=(11, 8, 11)
func_661_call = mod.get_global_var('func_661')
func_664_call = mutated_mod.get_global_var('func_664')
var_1600 = relay.var("var_1600", dtype = "float64", shape = (64,))#candidate|1600|(64,)|var|float64
call_1599 = relay.TupleGetItem(func_661_call(relay.reshape(var_1600.astype('float64'), [2, 16, 2])), 0)
call_1601 = relay.TupleGetItem(func_664_call(relay.reshape(var_1600.astype('float64'), [2, 16, 2])), 0)
output = relay.Tuple([bop_1586,call_1599,var_1600,])
output2 = relay.Tuple([bop_1586,call_1601,var_1600,])
func_1623 = relay.Function([var_1584,var_1585,var_1600,], output)
mod['func_1623'] = func_1623
mod = relay.transform.InferType()(mod)
var_1624 = relay.var("var_1624", dtype = "int64", shape = (11, 8, 11))#candidate|1624|(11, 8, 11)|var|int64
var_1625 = relay.var("var_1625", dtype = "int64", shape = (11, 8, 11))#candidate|1625|(11, 8, 11)|var|int64
var_1626 = relay.var("var_1626", dtype = "float64", shape = (64,))#candidate|1626|(64,)|var|float64
output = func_1623(var_1624,var_1625,var_1626,)
func_1627 = relay.Function([var_1624,var_1625,var_1626,], output)
mutated_mod['func_1627'] = func_1627
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2094 = relay.var("var_2094", dtype = "float64", shape = (6, 2, 13))#candidate|2094|(6, 2, 13)|var|float64
uop_2095 = relay.log2(var_2094.astype('float64')) # shape=(6, 2, 13)
func_733_call = mod.get_global_var('func_733')
func_736_call = mutated_mod.get_global_var('func_736')
var_2102 = relay.var("var_2102", dtype = "float64", shape = (1, 378))#candidate|2102|(1, 378)|var|float64
call_2101 = relay.TupleGetItem(func_733_call(relay.reshape(var_2102.astype('float64'), [14, 9, 3]), relay.reshape(var_2102.astype('float64'), [14, 9, 3]), ), 0)
call_2103 = relay.TupleGetItem(func_736_call(relay.reshape(var_2102.astype('float64'), [14, 9, 3]), relay.reshape(var_2102.astype('float64'), [14, 9, 3]), ), 0)
output = relay.Tuple([uop_2095,call_2101,var_2102,])
output2 = relay.Tuple([uop_2095,call_2103,var_2102,])
func_2113 = relay.Function([var_2094,var_2102,], output)
mod['func_2113'] = func_2113
mod = relay.transform.InferType()(mod)
var_2114 = relay.var("var_2114", dtype = "float64", shape = (6, 2, 13))#candidate|2114|(6, 2, 13)|var|float64
var_2115 = relay.var("var_2115", dtype = "float64", shape = (1, 378))#candidate|2115|(1, 378)|var|float64
output = func_2113(var_2114,var_2115,)
func_2116 = relay.Function([var_2114,var_2115,], output)
mutated_mod['func_2116'] = func_2116
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2177 = relay.var("var_2177", dtype = "uint8", shape = (16, 6, 6))#candidate|2177|(16, 6, 6)|var|uint8
const_2178 = relay.const([[[-7,6,-8,2,-4,6],[-10,10,-8,7,6,2],[7,-2,-6,-4,7,-9],[-8,5,-3,1,6,7],[2,3,-10,-10,4,7],[-6,-5,10,-8,-4,2]],[[5,-3,7,-4,6,6],[2,-2,-10,6,-7,-9],[-6,-9,1,10,-7,7],[-4,2,8,-5,-8,7],[-3,3,6,1,8,-4],[9,3,6,-9,-2,-8]],[[1,-1,10,6,-10,5],[9,-10,4,-6,-8,1],[10,2,-5,2,-6,4],[10,-9,-8,-8,10,6],[4,9,10,5,3,3],[8,5,-8,-9,-10,-9]],[[-1,-5,-9,-7,4,4],[-7,5,-6,10,-4,9],[-4,10,-5,2,10,-8],[-10,-9,-10,-8,1,1],[-2,3,-5,-7,9,3],[-10,1,-2,-6,-4,7]],[[-1,-5,6,10,-8,-3],[-5,4,-10,7,1,10],[9,-6,-5,10,-7,8],[2,3,-3,5,-1,-2],[-5,10,1,1,-8,-4],[1,-6,-9,-4,-4,-3]],[[5,5,-6,-6,-7,6],[8,7,-6,8,-5,6],[1,-6,-8,2,-6,1],[5,2,-6,2,-6,2],[2,-1,-4,-2,8,-10],[7,-2,-10,-5,-10,10]],[[3,-2,3,-5,3,1],[-3,-4,10,-9,-7,-10],[-4,3,9,-2,5,5],[9,2,-6,-9,7,1],[-9,-4,3,-5,-8,3],[-4,-4,-10,-9,-9,-10]],[[6,-5,5,2,-8,10],[2,-8,-6,10,7,-8],[-2,-7,10,5,7,10],[-6,5,9,-5,1,-3],[-8,6,8,-4,1,-1],[-9,8,8,9,10,-8]],[[-1,10,-10,-10,8,6],[10,-8,1,3,-8,5],[6,-8,8,-7,-2,-3],[-2,3,-7,-7,6,9],[5,-5,-2,8,4,6],[5,3,10,10,-8,-3]],[[-9,-3,6,-2,3,-3],[-10,5,-9,10,-2,-9],[-10,6,1,5,10,9],[-2,-6,-10,2,-1,8],[5,4,-10,4,4,-7],[7,-7,10,2,8,-6]],[[6,10,2,7,-3,-9],[-4,2,2,4,-1,-8],[-8,-10,-8,-5,-2,-4],[-1,6,-2,1,-7,-3],[-4,8,-10,4,-7,-2],[-1,-9,-10,-1,-4,8]],[[-1,3,4,7,-4,1],[3,10,2,-5,9,-9],[-9,-3,-7,-10,-2,8],[-2,1,-10,-10,10,3],[5,6,-3,4,-5,-6],[10,5,-2,7,8,10]],[[10,2,-1,1,-4,10],[2,-9,3,-3,5,6],[-1,-9,-8,-6,8,-8],[3,-5,-6,2,8,-7],[1,5,-8,-1,-3,5],[-9,4,6,-8,-1,4]],[[7,5,1,8,2,6],[-6,6,-9,-5,-1,-8],[10,6,9,9,7,-1],[8,8,5,-9,-3,2],[-5,10,5,2,4,-7],[7,-8,1,-3,-1,8]],[[-7,6,-1,9,9,-1],[7,-2,-1,-5,6,-3],[5,8,8,-1,-5,4],[7,-4,-5,1,-10,5],[1,-10,-3,3,-8,3],[9,1,-1,9,-10,-4]],[[-10,9,7,1,-3,-6],[3,-4,10,-9,9,2],[6,-8,6,3,7,8],[-3,-6,10,-3,-1,8],[-4,2,-6,5,-8,10],[5,4,3,-9,-2,5]]], dtype = "uint8")#candidate|2178|(16, 6, 6)|const|uint8
bop_2179 = relay.right_shift(var_2177.astype('uint8'), relay.reshape(const_2178.astype('uint8'), relay.shape_of(var_2177))) # shape=(16, 6, 6)
output = bop_2179
output2 = bop_2179
func_2199 = relay.Function([var_2177,], output)
mod['func_2199'] = func_2199
mod = relay.transform.InferType()(mod)
mutated_mod['func_2199'] = func_2199
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2200 = relay.var("var_2200", dtype = "uint8", shape = (16, 6, 6))#candidate|2200|(16, 6, 6)|var|uint8
func_2199_call = mutated_mod.get_global_var('func_2199')
call_2201 = func_2199_call(var_2200)
output = call_2201
func_2202 = relay.Function([var_2200], output)
mutated_mod['func_2202'] = func_2202
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2424 = relay.constdtype = "float32")#candidate|2424|(9, 15, 16)|const|float32
uop_2425 = relay.sin(const_2424.astype('float32')) # shape=(9, 15, 16)
func_2199_call = mod.get_global_var('func_2199')
func_2202_call = mutated_mod.get_global_var('func_2202')
const_2437 = relay.const([2,-1,-6,-4,1,3,-8,5,-10,4,-2,-2,3,-7,2,1,6,8,2,-2,-6,4,-9,9,8,5,-4,-6,-7,-1,-1,-5,-8,-8,5,-5,4,-4,10,4,9,-9,-10,-10,-10,-6,-7,7,-5,8,-4,2,-4,-4,-2,-4,10,3,-10,9,-6,-10,-7,6,1,-2,7,-4,-10,7,7,-4,5,-8,-10,3,-1,7,-10,-10,9,6,7,6,6,-1,5,9,1,-4,-4,7,10,5,-6,-8,8,10,-2,5,2,-1,9,8,7,3,7,-9,1,-6,1,-4,10,6,-4,1,7,4,2,-10,-2,-10,-10,-7,-5,1,-10,6,-1,-1,-5,1,-6,10,7,-7,-2,9,8,-6,-2,8,2,-10,-6,5,7,3,-1,1,4,8,-7,-9,-6,7,-10,9,-6,-2,-2,-4,-5,2,2,5,-1,2,-1,-10,-4,4,-9,7,-2,10,7,4,-4,7,8,-2,4,-7,-4,1,-4,-3,8,2,8,5,-7,7,-5,-7,-6,-4,-4,-5,-7,-8,3,-6,3,10,-10,-7,6,-10,8,-8,8,-7,4,-5,-8,4,6,2,-9,-1,1,-8,3,10,7,10,-1,-10,-8,-7,-7,10,2,5,6,10,5,4,6,-3,-5,8,9,2,2,4,10,-5,7,4,5,1,-2,1,-3,10,-7,-4,8,-4,7,10,-3,2,2,-3,7,-8,-1,6,-3,-1,-9,-7,-3,5,-10,-9,-9,-4,4,1,-5,2,-10,-9,-9,3,7,2,4,4,-4,10,-4,6,4,-1,6,5,4,-9,6,8,6,7,-7,6,2,5,-10,5,-8,-3,10,10,-3,4,5,-7,1,-10,3,-10,-2,2,-5,6,-3,-10,10,-4,3,4,-1,-6,3,3,-4,2,7,7,-10,9,-5,-4,-1,8,10,9,-3,4,-4,3,-9,3,-10,1,-7,-3,9,7,-8,3,9,1,-8,-9,3,10,8,9,-8,-9,-3,7,-10,2,-1,7,-7,-1,3,-9,1,-8,5,-10,10,-5,-10,2,9,7,1,10,-10,6,9,2,3,3,-7,-10,-10,9,9,9,7,10,8,7,8,-5,-9,9,5,9,-2,-1,5,-2,1,-2,7,-8,9,7,1,6,-7,1,6,-5,10,-3,-4,-7,8,3,3,-2,-9,2,9,7,3,-9,9,-7,2,1,-7,-2,10,-10,-9,7,-9,7,7,7,1,8,2,8,-7,9,-7,-7,-6,-10,-9,-2,-6,-10,10,-4,3,-2,9,-6,-7,8,-4,3,-4,-5,-1,-3,4,1,-1,7,-7,7,-9,10,-6,1,5,-9,6,2,-1,-6,8,-10,-2,-1,8,-5,-10,2,-5,-7,-7,-9,-2,-2,-6,9,4,5,6,5,5,-10,6,3,7,2,-8,-10,-2,5,-1,-3,4,2,-5,4,8,-5,10,-6,7,2,8,6,-4,-9,-5,-9,10,9,-8,-5,8,3,-7,-6,8,8,10,8,-6,7,9,10,-7,7,1,2], dtype = "uint8")#candidate|2437|(576,)|const|uint8
call_2436 = func_2199_call(relay.reshape(const_2437.astype('uint8'), [16, 6, 6]))
call_2438 = func_2199_call(relay.reshape(const_2437.astype('uint8'), [16, 6, 6]))
func_1109_call = mod.get_global_var('func_1109')
func_1113_call = mutated_mod.get_global_var('func_1113')
var_2443 = relay.var("var_2443", dtype = "uint64", shape = (72,))#candidate|2443|(72,)|var|uint64
const_2444 = relay.const([[1,-5,1,2,4,5,-10,-2,2,-5,-4,-10,-1,3,-2,-1,-8,-9,-6,3,8,5,4,10,-3,-5,-10,-9,3,-8,-8,-7,-3,5,1,1,-8,7,6,-2,-6,5,-1,8,6,-10,-5,1,5,-1,-6,8,-1,-7,-6,-5,5,8,-6,-9,-2,-7,8,-5,5,-1,-10,-4,6,7,2,2,-4,3,-5,-2,-3,-4,-8,2,-6,-2,-4,9,-2,9,10,9,-4,-4,5,7,-5,-9,-1,6,-5,-6,-9,-6,1,2,1,-5,-4,-3,5,8,-3,2,-7,-1,-9,1,10,-6,5,2,1,-8,-6,-5,2,-10,-2,9,3,2,-5,-1,-10,-5,6,10,7,-2,2,-4,3,-9,8,-6,6,-4,-1,-7,1,8,3,5,-8,3,-4,-4,2,-4,1,-1,8,-1,8,1,-2,-9,9,-5,10,-6,-6,3,-4,-6,5,-6,-3,-1,5,-2,-3,1,6,-10,3,-1,6,7,-9,9,-2,-6,-9,8,2,-10,3,-8,7,-3,4,1,8,-4,-3,-2,5,10,6,10,7,3,-1,-9,9,-1,8,4,2,-4,8,-1,-3,-1,-10,6,-10,9,2,-10,-2,3,-4,9,-5,-2,6,-10,-4,-9,-9,-2,-6,10,9,-8,-10,-4,-9,10,-3,-1,-6,9,9,6,4,8,-9,7,-8,-2,7,-3,-6,-4,-7,-9,5,3,-7,-3,9,1,10,7,-3,6,-4,8,-4,-10,-9,-4,-8,-8,7,5,3,-3],[4,-10,-10,6,-5,-3,-1,10,3,-2,-2,-7,-4,-5,8,1,-10,6,-5,-6,-1,9,-4,-9,4,8,-4,3,7,6,-7,-7,7,-9,-10,-5,3,-10,-5,-4,4,5,6,7,-7,9,1,-3,1,-5,4,-1,-7,4,2,3,9,-6,-5,8,-8,-7,5,1,9,-7,7,-2,9,-6,-5,8,6,-8,-7,-2,3,7,-9,-4,-6,3,-6,-8,4,-7,3,-10,-7,8,3,10,1,-6,8,9,8,7,-9,-1,7,10,1,-8,8,-4,-8,-1,-4,9,4,5,-10,-9,5,3,-8,-3,5,-9,9,-8,-10,8,-3,-5,7,-2,-2,7,1,-1,-3,7,-8,-10,2,8,6,-5,6,-9,-1,9,10,-3,6,-9,2,6,4,9,-6,7,4,1,5,-3,1,-2,-10,1,2,-6,7,4,-9,-9,-3,-7,10,9,9,2,3,-10,-10,8,2,6,-5,-3,5,-1,8,-7,7,-4,7,-6,-9,-3,9,2,-5,-3,9,7,7,4,6,-2,5,-9,1,3,2,-2,7,-6,-2,-7,4,5,-3,-7,-10,2,-6,-10,-6,8,10,3,-1,4,-8,4,-4,-5,10,6,2,7,-8,-2,3,2,-7,-1,-4,4,5,-3,-7,-5,-10,-6,8,-8,-4,9,-2,1,8,10,6,-3,9,9,4,-4,-5,-9,-6,9,9,9,1,-3,-1,-2,-6,-9,8,-3,-2,-1,7,-1,-6,7,8,-9,6,-1,-4,6],[-5,6,-3,-10,-6,-5,10,10,-6,-3,2,7,-5,-5,-1,-8,-7,4,5,-6,-4,6,5,-9,-2,7,-6,2,-1,10,-9,10,3,6,5,-9,-1,2,10,8,6,5,-8,-3,5,2,-2,-10,6,4,-7,2,-9,-3,8,2,7,-7,-6,5,-6,5,-1,4,2,1,-3,5,-9,-3,-2,-2,4,-5,10,4,-10,5,-6,1,8,-7,-6,5,5,-2,-4,-7,4,3,-3,-1,5,-4,-4,1,6,-3,2,-8,9,-3,4,5,1,3,2,7,-7,-2,-6,3,3,-4,5,10,-4,8,3,8,-9,8,-3,1,-7,-3,8,-5,-1,3,-3,-1,-8,-4,2,4,3,7,10,7,2,8,-3,8,6,-1,4,7,-1,-2,-5,8,-2,-3,2,-8,2,-2,-3,-1,2,9,4,-8,6,-9,10,-8,-10,-3,-3,-5,-8,-9,7,-9,2,5,-3,8,-6,-2,-4,-7,1,7,2,8,10,3,7,-4,-4,-2,3,6,-9,-4,-9,9,2,4,9,7,7,-5,-6,3,10,-6,-5,10,3,9,6,1,-4,-5,-7,10,-4,10,6,1,7,6,-10,-8,-2,-4,-6,10,2,-3,-10,2,-10,6,-6,-9,-4,6,3,8,4,-8,9,-10,-3,-9,-6,9,-5,-1,3,5,8,1,9,9,-1,4,4,10,-7,-2,-2,-10,-5,-10,-2,4,-8,3,6,3,-10,-7,8,-4,8,9,-5,9,-1,-8,5,5],[1,-3,10,4,10,2,1,-5,2,-1,5,8,-8,-9,2,-6,-9,-8,2,7,-3,2,-7,-5,10,-7,-3,-1,1,3,3,6,6,-1,6,-10,10,-5,8,-5,3,5,7,8,-5,3,10,-2,-3,-7,-2,8,-9,-9,2,-7,-6,-2,8,2,10,-3,-5,9,7,-5,-2,-1,9,-8,-5,-7,-9,3,10,3,1,2,-1,3,4,-9,2,-7,-1,3,4,-7,8,10,-7,8,9,3,-1,-7,4,-5,-5,1,-9,-2,-2,-6,8,10,7,3,-10,-5,5,-9,-10,-9,-7,1,-3,-9,-1,-9,10,-6,7,-2,-8,-9,-1,-3,-1,5,3,3,10,-4,6,-2,3,3,9,-9,4,-9,-6,-7,-7,6,10,-9,-1,3,-6,-6,-5,1,6,-1,9,7,-4,-4,-7,-2,-10,-7,-4,2,9,3,9,-8,-5,7,-8,-1,9,5,8,4,8,2,-4,-4,-2,-7,-10,-6,-5,-10,7,7,-1,-3,2,8,9,-2,4,-5,4,7,-8,-10,6,-8,-3,9,9,-2,9,1,-2,10,10,10,1,9,-10,4,8,9,9,5,1,-9,9,-10,-10,7,-10,-5,4,-10,-10,2,-8,-9,-8,5,4,-4,1,-4,-4,2,-7,5,-10,10,9,9,-1,-4,-7,-2,2,-5,-8,3,-1,-8,-3,-2,7,-6,3,6,6,-7,-9,-3,5,-4,-7,8,4,-8,8,4,1,-2,5,-10,-9,5,6,-9,-6,-5]], dtype = "uint64")#candidate|2444|(4, 288)|const|uint64
const_2445 = relay.const([-1.401172,-1.266553,5.147147,-0.814198,-1.828129,-2.011767,-2.808046,9.468090,-9.591588,6.083289,7.428343,5.146689,-9.991104,-9.034282,7.650459,6.311422,1.546128,-6.889632,6.994141,-3.127932,-7.136220,-3.778754,-6.761784,-7.514197,1.716851,6.917059,2.193626,0.015520,-6.635550,-5.375112,-4.632462,-0.307384,7.313652,-4.466594,8.511084,-3.221619,-8.309344,-8.818413,-2.329298,4.858219,-4.996346,5.176881,-9.650161,9.495118,-2.802265,-8.231133,-9.377896,-7.893319,6.697486,-0.529285,5.738996,1.947280,6.955710,4.539537,-0.623652,4.295556,5.351737,6.910150,6.736024,2.465087,-9.711159,-0.776107,-1.810109,-6.581539,-4.377176,-6.737953,-7.650704,2.433933,0.281811,4.891152,7.630931,6.764166,2.241757,-8.017839,1.862342,-8.663715,-7.970888,-8.086416,-2.286257,-2.056429,4.863107,-6.110724,-6.290259,4.980142,-3.617320,-6.141219,9.235388,9.937538,-9.277751,2.909643,3.288465,3.499360,0.893182,-4.576479,-8.413538,-1.936777,8.352679,3.052600,-3.160626,3.027447,-5.573536,-7.298734,6.217448,-0.300573,-4.597255,-0.941169,-8.009528,9.165106,0.411963,1.569196,-4.128627,-8.619434,-5.625590,-0.701510,-3.356493,-7.927091,2.449375,0.501753,-1.324844,-2.776451,0.494757,-1.777520,-7.484986,9.520342,9.781741,9.408021,-9.863395,9.585696,-3.047011,2.991362,9.867215,7.208656,6.900574,-9.515074,-3.612367,-3.651487,8.132899,4.560897,-6.619973,7.485086,2.584582,7.668196,-7.925194,4.878002,-1.978515,-4.004738,-9.052622,-2.119976,-7.892288,5.294430,2.259702,-4.629816,-2.334624,-1.836702,7.057133,-5.763580,3.829713,-8.307870,-3.290058,-5.500454,9.427593,-8.572744,-5.994100,0.268057,8.623914,3.111926,-1.444714,1.199439,-7.288290,9.096756,-4.349588,-3.170188,5.376674,1.979408,-3.171722,9.893089,-2.428274,2.509155,-6.215758,1.324254,6.524067,5.833562,9.225957,-3.797149,-8.139916,8.931188,3.533491,-0.225013,-3.862354,-5.007149,1.002978,-5.762354,-3.441560,-9.939080,-8.757742,-4.475946,9.982118,6.468396,4.905177,-9.857516,0.771635,-6.956636,9.219374,-6.524033,-7.292475,8.430781,-4.572979,-1.182716,9.812724,1.053747,-3.326311,-8.638444,7.702945,-1.233475,2.412367,6.960500,-8.836225,-3.166717,-9.725272,-0.366342,2.698319,7.729720,9.012248,-4.523332,-2.817370,1.821605,-0.908127,-8.885542,2.046010,-4.764632,7.018414,-3.557149,5.055715,-3.344495,9.664941,-9.232451,-9.950130,-5.827545,9.058067,-6.510739,-9.779330,5.253454,5.626422,8.640642,-4.185278,-7.278121,7.005015,-8.458716,1.798426,-8.569328,9.276224,8.525443,-3.102216,4.182755,3.951340,-7.668904,6.599438,-2.944816,3.346866,-1.465735,4.962682,-3.656685,3.461506,4.754546,6.269589,3.652997,-2.528212,-0.056658,-9.574874,9.292813,7.427368,9.293183,5.465826,-9.783105,7.420016,-6.250911,5.869794,9.553219,0.551261,4.590043,4.253379,4.589750,9.372685,-5.556478,-6.505645,1.611904,1.669518,-1.018233,-1.445178,-2.640068,6.128877,-8.789239,1.706053,9.036942,-1.859572,3.028288,1.951010,-3.184556,-3.381426,-4.058986,-0.388917,-6.197717,1.312572,-1.999071,2.031123,9.896296,7.816962,4.701936,-1.158936,-3.865921,2.798878,-0.587848,-7.175096,-9.411235,5.339414,4.757859,-4.476672,-9.621192,6.637416,-2.738854,9.938871,6.634561,5.335185,1.698038,-7.815310,0.858061,6.942205,-8.602192,-4.674787,-6.206064,-2.655833,9.531755,5.002380,-4.605236,-9.354902,-6.557821,-3.940533,-3.434583,-2.189049,2.504130,4.765713,9.991442,-5.001471,6.401308,-3.215159,7.479378,5.099465,4.144332,-3.577818,2.375208,-5.950814,-6.639406,-7.935073,7.052121,-5.565377,5.536876,4.061590,-9.582529,-6.756672,-6.526405,5.488388,5.239061,-4.670058,3.219127,-2.256576,3.402303,-9.366296,-1.464660,-2.097997,-8.335430,-9.668457,7.006011,-2.462334,-1.764715,7.618139,0.979808,-4.084401,2.011851,6.756281,4.040542,-6.918920,8.758591,-8.150900,6.147327,8.587038,5.415557,2.875680,6.830058,-4.380152,-1.974484,-2.855420,-7.282905,4.976132,0.884406,-9.786587,-0.740445,2.289621,-9.302991,1.089618,-3.223786,0.619550,8.768980,-9.641723,-9.109505,-9.349313,-6.198318,-0.785532,4.647202,6.815495,-2.037663,5.404674,-3.802545,-6.666053,-9.896074,-3.439219,-2.896620,-3.982015,-8.520738,-2.947573,5.458954,9.164711,2.432605,-2.369594,4.875219,5.990584,4.097380,2.731340,8.159821,-8.999557,2.566545,5.484223,-5.361617,7.141809,-2.800605,5.651262,-8.472097,-2.948224,-1.179742,-9.111431,-4.333639,-8.375335,-9.485237,2.845853,8.054641,7.821333,-6.647679,7.523818,-9.929907,0.696236,-8.137179,-9.623329,3.044409,6.898297,2.887437,-6.849255,0.699010,-8.975474,-5.806633,-9.978081,4.638676,-9.873145,-6.177386,7.121666,7.502947,3.739715,6.882357,-5.698442,-3.337175,2.635627,-3.993725,1.435744,-8.393975,4.245382,6.134809,-1.070942,-4.934685,-4.566140,-1.056711,6.027206,-0.713215,-7.543607,7.799356,8.436752,-7.496650,4.044590,-0.705687,-7.827737,-1.826479,2.374549,4.705906,6.063417,-8.070062,-7.533250,3.252976,-6.757409,8.095209,6.879024,-7.480002,-8.023019,1.603438,4.411246,7.371428,-5.145564,1.728522,1.950061,-0.911149,-6.991401,9.701324,3.452622,2.835374,-8.730826,-4.069035,1.983602,-5.037314,9.983763,9.365658,7.518733,3.880622,2.654318,2.175033,9.825182,6.081599,6.457050,1.660836,6.761565,-0.396843,7.159824,5.910551,9.846838,-2.288161,-2.003738,5.433556,-1.386897,8.048995,-1.194839,3.497891,-4.723702,9.867762,1.943537,8.467417,1.471982,-3.830619,-3.435844,5.656294,-2.843516,2.373129,-7.970155,-5.768818,5.480982,-6.097066,3.131635,4.498617,-6.899711,8.524665,2.864824,-1.549428,-6.498093,5.461251,-2.663099,1.657286,8.886659,5.116452,0.535374,-1.532704,-1.337296,-9.655578,-0.918717,2.116093,1.326329,-6.199268,7.121202,6.376084,-6.815147,1.766567,-8.773552,1.992006,0.137561,1.498408,-5.981273,9.885417,-6.169885,-3.984227,9.827183,2.746426,-1.702541,-0.906521,-1.109474,-6.329264,-5.071870,9.947412,-4.144795,-1.669431,-1.881717,-5.910493,-8.185853,2.721328,-9.538628,7.235744,8.949163,-2.518575,5.296550,-7.076778,-3.848354,-5.451872,-1.133325,5.715832,-2.385044,-8.094025,7.993362,1.304655,-7.613919,-3.015482,0.409072,-7.599199,-1.467916,-5.601233,9.180870,7.992179,1.847406,2.082067,-4.959561,-2.097652,-2.766771,3.228369,-8.090784,4.177262,9.903686,8.088953,-3.837730,3.021509,-3.921528,-6.060928,-2.464567,0.952918,8.924916,5.479410,-7.828324,-2.327364,-4.767262,-0.131089,-3.328728,6.294295,-3.614689,-5.236796,7.783725,3.028192,-9.159944,6.672318,-9.690294,-5.072665,6.060251,9.925385,-5.039625,8.457521,2.683436,4.763472,8.111270,0.400750,4.462646,-4.283041,7.593246,-4.210575,5.267151,2.684817,-7.096241,3.449830,4.742970,0.916340,-1.604293,1.270951,9.616931,-6.652474,3.555874,-9.326511,8.741743,2.437328,-1.588433,-7.508810,-4.017120,9.387862,-9.298365,-4.435985,0.932664,1.542972,-6.826425,3.687672,7.852444,0.165304,7.676515,8.170660,-7.962117,-0.884648,-3.914843,6.093337,-2.908304,5.974701,2.300689,-6.757162,-0.485556,8.790503,-4.293494,-6.626993,-8.621998,2.268831], dtype = "float64")#candidate|2445|(704,)|const|float64
call_2442 = relay.TupleGetItem(func_1109_call(relay.reshape(var_2443.astype('uint64'), [18, 4]), relay.reshape(const_2444.astype('uint64'), [1152,]), relay.reshape(const_2445.astype('float64'), [704,]), ), 0)
call_2446 = relay.TupleGetItem(func_1113_call(relay.reshape(var_2443.astype('uint64'), [18, 4]), relay.reshape(const_2444.astype('uint64'), [1152,]), relay.reshape(const_2445.astype('float64'), [704,]), ), 0)
func_1384_call = mod.get_global_var('func_1384')
func_1386_call = mutated_mod.get_global_var('func_1386')
var_2469 = relay.var("var_2469", dtype = "float64", shape = (225,))#candidate|2469|(225,)|var|float64
call_2468 = func_1384_call(relay.reshape(var_2469.astype('float64'), [5, 3, 15]))
call_2470 = func_1384_call(relay.reshape(var_2469.astype('float64'), [5, 3, 15]))
uop_2475 = relay.acosh(uop_2425.astype('float64')) # shape=(9, 15, 16)
func_661_call = mod.get_global_var('func_661')
func_664_call = mutated_mod.get_global_var('func_664')
const_2483 = relay.const([8.478002,-7.336124,7.856842,8.222651,-9.493935,-2.406812,1.635355,-4.635628,4.385102,-1.345075,0.729531,2.072729,0.690895,-5.756692,2.873063,5.479300,3.395168,2.208653,-3.700119,-6.330692,-7.034634,-2.238009,-9.065929,7.669334,-1.749441,-4.514247,8.966075,7.081388,-0.787725,5.699801,4.975145,9.059882,6.116053,-6.371123,6.748901,-7.915771,0.261581,9.810067,-1.007915,1.250379,9.995624,-6.906027,7.875088,4.922002,6.434312,5.323371,0.207305,6.994483,0.635006,-3.422944,-2.973404,-4.749936,8.324795,-9.716137,-2.639705,-9.523824,9.364107,-1.918611,5.150238,-2.893037,8.399615,9.472044,-9.340315,0.300287], dtype = "float64")#candidate|2483|(64,)|const|float64
call_2482 = relay.TupleGetItem(func_661_call(relay.reshape(const_2483.astype('float64'), [2, 16, 2])), 0)
call_2484 = relay.TupleGetItem(func_664_call(relay.reshape(const_2483.astype('float64'), [2, 16, 2])), 0)
func_1475_call = mod.get_global_var('func_1475')
func_1477_call = mutated_mod.get_global_var('func_1477')
var_2500 = relay.var("var_2500", dtype = "float32", shape = (1344,))#candidate|2500|(1344,)|var|float32
call_2499 = func_1475_call(relay.reshape(var_2500.astype('float32'), [16, 12, 7]))
call_2501 = func_1475_call(relay.reshape(var_2500.astype('float32'), [16, 12, 7]))
uop_2510 = relay.exp(uop_2475.astype('float64')) # shape=(9, 15, 16)
output = relay.Tuple([call_2436,const_2437,call_2442,var_2443,const_2444,const_2445,call_2468,var_2469,call_2482,const_2483,call_2499,var_2500,uop_2510,])
output2 = relay.Tuple([call_2438,const_2437,call_2446,var_2443,const_2444,const_2445,call_2470,var_2469,call_2484,const_2483,call_2501,var_2500,uop_2510,])
func_2523 = relay.Function([var_2443,var_2469,var_2500,], output)
mod['func_2523'] = func_2523
mod = relay.transform.InferType()(mod)
mutated_mod['func_2523'] = func_2523
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2523_call = mutated_mod.get_global_var('func_2523')
var_2525 = relay.var("var_2525", dtype = "uint64", shape = (72,))#candidate|2525|(72,)|var|uint64
var_2526 = relay.var("var_2526", dtype = "float64", shape = (225,))#candidate|2526|(225,)|var|float64
var_2527 = relay.var("var_2527", dtype = "float32", shape = (1344,))#candidate|2527|(1344,)|var|float32
call_2524 = func_2523_call(var_2525,var_2526,var_2527,)
output = call_2524
func_2528 = relay.Function([var_2525,var_2526,var_2527,], output)
mutated_mod['func_2528'] = func_2528
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2825 = relay.var("var_2825", dtype = "int32", shape = ())#candidate|2825|()|var|int32
var_2826 = relay.var("var_2826", dtype = "int32", shape = (8, 16, 12))#candidate|2826|(8, 16, 12)|var|int32
bop_2827 = relay.left_shift(var_2825.astype('int32'), var_2826.astype('int32')) # shape=(8, 16, 12)
output = relay.Tuple([bop_2827,])
output2 = relay.Tuple([bop_2827,])
func_2833 = relay.Function([var_2825,var_2826,], output)
mod['func_2833'] = func_2833
mod = relay.transform.InferType()(mod)
mutated_mod['func_2833'] = func_2833
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2833_call = mutated_mod.get_global_var('func_2833')
var_2835 = relay.var("var_2835", dtype = "int32", shape = ())#candidate|2835|()|var|int32
var_2836 = relay.var("var_2836", dtype = "int32", shape = (8, 16, 12))#candidate|2836|(8, 16, 12)|var|int32
call_2834 = func_2833_call(var_2835,var_2836,)
output = call_2834
func_2837 = relay.Function([var_2835,var_2836,], output)
mutated_mod['func_2837'] = func_2837
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2880 = relay.const([[[1.116431],[-9.104492],[-2.657858],[-9.537038],[-9.475720],[-7.417056],[-5.622962]],[[-7.625907],[5.684290],[-7.220863],[2.597332],[1.074040],[8.302559],[-0.753810]],[[-4.050146],[-2.557991],[1.256750],[-4.218942],[3.341858],[0.546575],[0.112025]],[[-3.319265],[9.373070],[4.458198],[-9.799288],[-4.021562],[-4.685129],[-6.869241]],[[-2.080423],[6.456821],[-2.204540],[-9.422718],[-6.483997],[9.648347],[-6.785491]],[[1.699640],[-3.992132],[4.696162],[-6.836584],[-3.368831],[-7.690364],[3.468308]],[[-3.036825],[-5.946158],[-5.413212],[-8.062917],[-6.251957],[-7.466308],[8.324532]],[[-6.776024],[-0.986323],[8.960199],[4.240644],[4.096103],[-3.311379],[3.635052]],[[-0.492142],[5.142600],[-4.568275],[1.004459],[9.283755],[8.696450],[1.321179]],[[-3.809486],[-1.235576],[-0.859941],[9.825031],[7.987607],[-6.090874],[-1.527739]],[[6.234942],[-9.252397],[-4.481642],[-5.295565],[4.357992],[4.529034],[4.780244]],[[-7.775941],[-9.240897],[3.149016],[3.009689],[-4.297868],[-5.853034],[-7.622112]],[[-1.637701],[7.733608],[-3.441446],[9.532376],[9.697050],[0.252539],[2.984615]],[[-6.518919],[4.440607],[2.204967],[0.469594],[-3.359709],[-9.433206],[4.730559]]], dtype = "float64")#candidate|2880|(14, 7, 1)|const|float64
var_2881 = relay.var("var_2881", dtype = "float64", shape = (14, 7, 15))#candidate|2881|(14, 7, 15)|var|float64
bop_2882 = relay.mod(const_2880.astype('float64'), var_2881.astype('float64')) # shape=(14, 7, 15)
uop_2885 = relay.asinh(var_2881.astype('float64')) # shape=(14, 7, 15)
output = relay.Tuple([bop_2882,uop_2885,])
output2 = relay.Tuple([bop_2882,uop_2885,])
func_2891 = relay.Function([var_2881,], output)
mod['func_2891'] = func_2891
mod = relay.transform.InferType()(mod)
mutated_mod['func_2891'] = func_2891
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2892 = relay.var("var_2892", dtype = "float64", shape = (14, 7, 15))#candidate|2892|(14, 7, 15)|var|float64
func_2891_call = mutated_mod.get_global_var('func_2891')
call_2893 = func_2891_call(var_2892)
output = call_2893
func_2894 = relay.Function([var_2892], output)
mutated_mod['func_2894'] = func_2894
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2943 = relay.var("var_2943", dtype = "float64", shape = ())#candidate|2943|()|var|float64
var_2944 = relay.var("var_2944", dtype = "float64", shape = (7, 6, 12))#candidate|2944|(7, 6, 12)|var|float64
bop_2945 = relay.floor_mod(var_2943.astype('float64'), var_2944.astype('float64')) # shape=(7, 6, 12)
func_2891_call = mod.get_global_var('func_2891')
func_2894_call = mutated_mod.get_global_var('func_2894')
var_2949 = relay.var("var_2949", dtype = "float64", shape = (1470,))#candidate|2949|(1470,)|var|float64
call_2948 = relay.TupleGetItem(func_2891_call(relay.reshape(var_2949.astype('float64'), [14, 7, 15])), 1)
call_2950 = relay.TupleGetItem(func_2894_call(relay.reshape(var_2949.astype('float64'), [14, 7, 15])), 1)
func_1623_call = mod.get_global_var('func_1623')
func_1627_call = mutated_mod.get_global_var('func_1627')
var_2965 = relay.var("var_2965", dtype = "int64", shape = (968,))#candidate|2965|(968,)|var|int64
const_2966 = relay.const([7.704007,0.364067,-4.485755,2.311843,5.987653,0.172901,8.081271,0.478375,2.423481,-3.159097,-2.358486,6.333369,-8.671274,7.172775,5.557838,-2.385761,-6.556603,-5.335103,-4.997888,6.014774,7.997829,2.429387,5.191097,-8.236410,0.819389,-1.665382,9.326002,6.704023,-1.364394,7.121834,-3.728926,-0.446952,-0.254363,2.755312,-5.281374,-8.603700,5.247262,8.963279,8.496164,7.706766,-7.440276,-6.189987,2.256731,9.994819,-5.247640,7.476536,-9.817340,-3.372222,1.108973,1.738178,-4.770500,4.926402,9.641087,-1.637929,-1.749705,-2.304054,-7.036927,-4.558672,-3.542521,4.902780,7.477057,6.524989,-6.375316,-9.169628], dtype = "float64")#candidate|2966|(64,)|const|float64
call_2964 = relay.TupleGetItem(func_1623_call(relay.reshape(var_2965.astype('int64'), [11, 8, 11]), relay.reshape(var_2965.astype('int64'), [11, 8, 11]), relay.reshape(const_2966.astype('float64'), [64,]), ), 2)
call_2967 = relay.TupleGetItem(func_1627_call(relay.reshape(var_2965.astype('int64'), [11, 8, 11]), relay.reshape(var_2965.astype('int64'), [11, 8, 11]), relay.reshape(const_2966.astype('float64'), [64,]), ), 2)
var_2968 = relay.var("var_2968", dtype = "float64", shape = (7, 6, 12))#candidate|2968|(7, 6, 12)|var|float64
bop_2969 = relay.logical_xor(var_2944.astype('int64'), relay.reshape(var_2968.astype('int64'), relay.shape_of(var_2944))) # shape=(7, 6, 12)
func_2199_call = mod.get_global_var('func_2199')
func_2202_call = mutated_mod.get_global_var('func_2202')
const_2975 = relay.const([-5,10,4,4,6,2,-1,1,-8,-8,7,-6,-9,-3,2,-8,-8,-1,-8,8,6,1,-1,-1,-3,5,10,10,-6,6,-10,5,5,-8,-2,-6,-8,-8,-3,8,-7,7,-4,-7,-1,-8,-9,7,-10,-6,5,3,-1,2,9,2,-5,-5,6,-9,7,8,-2,-10,3,-5,8,-2,10,-2,6,-6,3,-9,-7,7,-6,2,1,-2,-5,-3,-6,3,8,4,-1,4,4,-4,2,7,-6,7,8,-4,-6,-8,-3,-8,-8,5,-5,-3,2,1,9,-1,-4,6,8,9,-6,-8,-7,10,-3,5,5,6,-5,3,-3,-3,-3,-1,9,-6,-6,-6,5,10,-2,-5,-5,8,7,6,-4,-1,7,9,-1,-3,-3,3,4,5,10,-4,-2,5,-2,1,1,4,-3,6,-1,-2,7,-2,1,-8,9,6,-6,1,3,5,-4,-1,-5,-1,-7,9,-8,-6,10,10,8,3,6,-2,-7,-2,-10,-6,-2,-9,9,5,-1,-6,7,-4,-1,-8,2,3,-1,-8,10,5,-2,10,-4,-1,-8,-8,5,9,-9,-3,1,8,-3,-2,-2,-4,1,8,-1,-2,9,3,2,-10,-10,-1,8,-2,10,1,-1,8,1,9,8,10,-1,-1,-6,5,-3,7,-10,2,5,1,10,-9,-7,10,2,-1,4,10,-3,6,-3,-9,3,2,7,-5,-3,8,5,-5,8,3,-10,-2,10,-2,10,-8,3,1,3,6,2,-8,-2,5,-3,-3,-3,-9,-2,6,10,-5,3,-4,-3,6,4,2,9,5,-10,-6,-3,6,3,7,5,10,-9,-6,-5,-8,8,-5,9,-10,10,2,10,1,9,1,-10,-1,5,1,-2,9,1,7,-3,1,-1,-9,10,-6,-7,-10,-6,-8,-2,1,10,-2,-1,2,-3,9,5,-7,-9,-1,-10,7,-6,8,-6,10,8,-8,10,-5,3,9,4,-3,10,1,-9,-7,3,-2,6,-6,5,-3,4,-8,-4,4,-4,2,3,4,-2,-4,8,-6,8,-9,8,8,10,10,2,1,-3,9,-6,5,-8,5,-4,10,-6,7,-1,-5,-2,6,-1,1,1,7,5,-7,10,8,-6,-8,-9,4,1,-2,6,-8,-6,8,-8,-5,6,7,6,10,6,-4,-6,-7,-10,1,-9,-3,-7,-4,-8,10,-3,-2,4,10,-1,-7,3,-5,4,-10,-4,-10,6,5,-3,9,-4,2,2,-2,-6,-1,2,3,1,-1,-6,3,-2,-7,-5,-10,7,1,-6,2,9,-3,9,-8,-9,5,-9,7,-9,8,-1,5,2,7,8,-2,-5,9,-10,4,8,-5,8,-8,-4,-10,-5,-1,10,7,-7,4,-5,-6,2,6,-9,-6,-1,-3,3,2,-8,-6,-2,6,-1,3,-7,-3,-9,8,-8,-5,1,7,-1,1,-1,8,10,-5,8,9,5,4,-10,3,9,8,8,-3,4,8,10,1,4,3,3,5,3,-3,-2,-1,-6,10,-6,-5,-6,8,-3,-8], dtype = "uint8")#candidate|2975|(576,)|const|uint8
call_2974 = func_2199_call(relay.reshape(const_2975.astype('uint8'), [16, 6, 6]))
call_2976 = func_2199_call(relay.reshape(const_2975.astype('uint8'), [16, 6, 6]))
func_2113_call = mod.get_global_var('func_2113')
func_2116_call = mutated_mod.get_global_var('func_2116')
var_2985 = relay.var("var_2985", dtype = "float64", shape = (156,))#candidate|2985|(156,)|var|float64
var_2986 = relay.var("var_2986", dtype = "float64", shape = (42, 9))#candidate|2986|(42, 9)|var|float64
call_2984 = relay.TupleGetItem(func_2113_call(relay.reshape(var_2985.astype('float64'), [6, 2, 13]), relay.reshape(var_2986.astype('float64'), [1, 378]), ), 2)
call_2987 = relay.TupleGetItem(func_2116_call(relay.reshape(var_2985.astype('float64'), [6, 2, 13]), relay.reshape(var_2986.astype('float64'), [1, 378]), ), 2)
uop_2990 = relay.tan(bop_2969.astype('float64')) # shape=(7, 6, 12)
output = relay.Tuple([bop_2945,call_2948,var_2949,call_2964,var_2965,const_2966,call_2974,const_2975,call_2984,var_2985,var_2986,uop_2990,])
output2 = relay.Tuple([bop_2945,call_2950,var_2949,call_2967,var_2965,const_2966,call_2976,const_2975,call_2987,var_2985,var_2986,uop_2990,])
func_2998 = relay.Function([var_2943,var_2944,var_2949,var_2965,var_2968,var_2985,var_2986,], output)
mod['func_2998'] = func_2998
mod = relay.transform.InferType()(mod)
var_2999 = relay.var("var_2999", dtype = "float64", shape = ())#candidate|2999|()|var|float64
var_3000 = relay.var("var_3000", dtype = "float64", shape = (7, 6, 12))#candidate|3000|(7, 6, 12)|var|float64
var_3001 = relay.var("var_3001", dtype = "float64", shape = (1470,))#candidate|3001|(1470,)|var|float64
var_3002 = relay.var("var_3002", dtype = "int64", shape = (968,))#candidate|3002|(968,)|var|int64
var_3003 = relay.var("var_3003", dtype = "float64", shape = (7, 6, 12))#candidate|3003|(7, 6, 12)|var|float64
var_3004 = relay.var("var_3004", dtype = "float64", shape = (156,))#candidate|3004|(156,)|var|float64
var_3005 = relay.var("var_3005", dtype = "float64", shape = (42, 9))#candidate|3005|(42, 9)|var|float64
output = func_2998(var_2999,var_3000,var_3001,var_3002,var_3003,var_3004,var_3005,)
func_3006 = relay.Function([var_2999,var_3000,var_3001,var_3002,var_3003,var_3004,var_3005,], output)
mutated_mod['func_3006'] = func_3006
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3132 = relay.const([[[5],[-10],[-10],[-6],[9],[-9],[5],[9],[10]],[[-2],[-8],[7],[-2],[-5],[10],[-8],[4],[1]],[[4],[8],[-3],[4],[-5],[-1],[-3],[-5],[3]],[[10],[-9],[-6],[7],[-6],[-3],[-6],[4],[-4]]], dtype = "uint16")#candidate|3132|(4, 9, 1)|const|uint16
var_3133 = relay.var("var_3133", dtype = "uint16", shape = (4, 9, 5))#candidate|3133|(4, 9, 5)|var|uint16
bop_3134 = relay.not_equal(const_3132.astype('bool'), var_3133.astype('bool')) # shape=(4, 9, 5)
bop_3153 = relay.greater_equal(const_3132.astype('bool'), bop_3134.astype('bool')) # shape=(4, 9, 5)
output = bop_3153
output2 = bop_3153
func_3160 = relay.Function([var_3133,], output)
mod['func_3160'] = func_3160
mod = relay.transform.InferType()(mod)
var_3161 = relay.var("var_3161", dtype = "uint16", shape = (4, 9, 5))#candidate|3161|(4, 9, 5)|var|uint16
output = func_3160(var_3161)
func_3162 = relay.Function([var_3161], output)
mutated_mod['func_3162'] = func_3162
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3942 = relay.var("var_3942", dtype = "float64", shape = ())#candidate|3942|()|var|float64
var_3943 = relay.var("var_3943", dtype = "float64", shape = (4, 13, 10))#candidate|3943|(4, 13, 10)|var|float64
bop_3944 = relay.power(var_3942.astype('float64'), var_3943.astype('float64')) # shape=(4, 13, 10)
uop_3963 = relay.asin(var_3943.astype('float64')) # shape=(4, 13, 10)
output = relay.Tuple([bop_3944,uop_3963,])
output2 = relay.Tuple([bop_3944,uop_3963,])
func_3967 = relay.Function([var_3942,var_3943,], output)
mod['func_3967'] = func_3967
mod = relay.transform.InferType()(mod)
var_3968 = relay.var("var_3968", dtype = "float64", shape = ())#candidate|3968|()|var|float64
var_3969 = relay.var("var_3969", dtype = "float64", shape = (4, 13, 10))#candidate|3969|(4, 13, 10)|var|float64
output = func_3967(var_3968,var_3969,)
func_3970 = relay.Function([var_3968,var_3969,], output)
mutated_mod['func_3970'] = func_3970
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4176 = relay.const([[[-0.847870,-3.338069,4.871704,7.143539,-6.073030,4.640329,-9.006918,0.133821,3.058885,1.070825,-7.235776,-9.374899],[-7.500345,-7.221220,0.386204,-1.056498,-5.765489,-5.520411,7.084433,3.157704,-1.979578,6.323077,5.598512,-7.375173],[-5.993139,5.743519,6.873926,4.215485,9.514926,-1.617341,0.414955,9.588334,8.185549,-8.042310,9.304539,-1.733177]],[[-9.714591,9.645641,5.137948,-9.102267,8.072939,-5.887783,3.679826,-8.421154,-0.545506,4.870399,-8.188556,0.255365],[-4.282357,-7.204202,4.784126,3.000897,-7.194059,0.744204,-8.383450,9.739572,-8.745552,-6.999844,-9.963570,-3.608907],[4.389634,-1.418175,-2.132496,4.553748,1.470577,0.539243,5.198979,-5.974354,9.829521,2.910286,6.669516,4.448293]]], dtype = "float64")#candidate|4176|(2, 3, 12)|const|float64
uop_4177 = relay.asinh(const_4176.astype('float64')) # shape=(2, 3, 12)
output = relay.Tuple([uop_4177,])
output2 = relay.Tuple([uop_4177,])
func_4205 = relay.Function([], output)
mod['func_4205'] = func_4205
mod = relay.transform.InferType()(mod)
output = func_4205()
func_4206 = relay.Function([], output)
mutated_mod['func_4206'] = func_4206
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4205_call = mod.get_global_var('func_4205')
func_4206_call = mutated_mod.get_global_var('func_4206')
call_4215 = relay.TupleGetItem(func_4205_call(), 0)
call_4216 = relay.TupleGetItem(func_4206_call(), 0)
uop_4219 = relay.erf(call_4215.astype('float64')) # shape=(2, 3, 12)
uop_4221 = relay.erf(call_4216.astype('float64')) # shape=(2, 3, 12)
func_1475_call = mod.get_global_var('func_1475')
func_1477_call = mutated_mod.get_global_var('func_1477')
const_4234 = relay.const([-3.292074,1.670521,-2.783976,1.841048,9.930867,-3.620522,-3.089164,6.583319,4.586987,7.803245,-8.939295,-6.997756,0.296621,-9.924792,9.308963,2.851865,1.125951,1.447115,-4.073592,1.682741,9.114272,6.605965,-8.369344,7.423384,2.627751,5.045312,-0.378643,1.293048,-9.607227,-4.832161,-1.150551,2.019729,-6.820755,6.871221,0.220082,0.573509,-2.797647,-2.901936,2.397374,-4.931450,-4.247689,-5.499618,-1.237189,3.874719,0.993875,-2.155376,8.860294,-0.724803,-3.447285,-1.322417,-9.829921,-8.019196,5.750178,8.556793,7.304367,7.777487,0.042194,-8.290750,-7.538547,-9.777446,6.633351,5.007361,-1.760888,-3.617221,1.347249,1.966922,-0.596550,-8.860271,-7.088775,9.329303,8.840473,-5.893898,-0.179388,-3.038869,-4.192818,4.759544,-5.782205,-6.126036,-7.061611,2.560969,8.658867,2.562689,0.325665,4.365594,-9.962897,8.993191,-2.854902,-6.101626,-4.263036,7.918421,-4.918646,-9.393099,9.122783,9.897948,6.125709,1.944225,0.496575,2.260533,-0.566503,2.420668,0.305378,-8.433933,-1.784026,-5.786782,-0.029325,7.357889,-0.905036,0.489920,-7.650865,4.474755,7.594998,-2.383889,-9.742628,9.132073,8.453684,1.918825,2.068328,-4.881004,-6.980002,-6.255297,-0.640424,8.820163,4.718017,-2.165756,-9.324335,-9.975838,-6.679554,-8.925415,-6.414824,3.784505,-1.650773,-6.077808,-8.685611,6.190530,9.495152,4.813832,4.144390,9.824381,3.659649,-5.723850,5.935398,-8.246195,-6.583419,-0.947518,-0.484438,-8.296980,-2.672073,9.681836,9.082506,-3.837178,-6.204737,-1.929822,-3.981615,4.605229,0.912939,8.500499,-7.073669,-8.970722,4.952434,6.739974,-8.366116,-8.139283,-3.437803,8.976788,4.286371,-0.911123,-5.679872,6.628285,-0.252346,-8.928737,2.408916,9.948686,8.091820,-0.373639,-7.240482,6.626137,4.966500,-0.897471,8.045504,4.435580,9.549762,-2.957588,-3.643119,-7.407769,-4.806847,-7.290574,2.503623,8.231889,3.958697,4.623462,7.693648,-6.240354,-4.290605,-3.700670,-1.086660,-5.540273,-9.500463,5.864630,1.741767,4.950554,1.675223,4.901758,3.340647,6.212229,-1.519239,4.001294,6.431443,-8.395834,-0.849908,4.532957,-5.856576,-9.244940,7.817731,9.689958,1.706063,-6.063161,-8.252961,7.949472,9.828652,-4.369881,0.474498,0.380152,1.239200,1.033518,9.246211,-0.332369,-5.576019,-2.279101,4.826804,-9.971300,-8.277935,0.115135,-8.845545,1.376090,8.408237,7.880345,7.770164,-5.982098,-0.384681,-0.369215,-2.779101,5.152662,4.396476,-5.721198,1.079423,7.782677,-6.141260,-2.545663,-3.325755,-2.459436,5.327806,-4.330513,-4.842189,4.462374,-4.573215,-7.726540,1.541577,-4.719332,3.479050,2.364268,9.927147,0.464130,6.794813,6.416871,5.408834,7.361533,2.728076,7.436719,-1.756282,4.527799,-2.808664,-4.958731,4.259575,-2.861831,2.371587,-3.314522,-4.346560,-8.154801,9.854099,6.619518,8.234350,-9.164970,5.032182,4.411061,-5.131377,-9.359010,-9.984856,-3.777212,8.278811,5.825725,-5.805813,-3.617283,1.388615,-0.412903,-3.096316,9.601757,6.305342,-9.285128,0.584539,-2.762616,-5.544409,-2.117059,4.076634,0.779168,3.980572,-5.182050,-7.561962,-7.969464,9.082569,-2.421502,9.570263,-5.277087,7.719407,6.140416,-9.008468,1.625573,-5.490428,9.979054,-6.552713,0.983129,6.609557,-9.627673,-1.300627,5.536882,6.914397,9.851175,9.613499,6.872444,-6.186916,1.295005,6.087004,-9.855539,-2.688259,6.588276,-8.759213,-7.436505,-4.227514,0.377262,-6.897635,6.460611,-6.471428,-1.369383,-4.937157,6.684749,-5.559868,5.107580,9.318576,5.193269,6.953497,-8.205223,5.343347,-7.234394,3.240417,-5.301970,-4.245139,-5.326868,-9.783587,9.417289,-9.788497,-6.275118,7.661833,-9.101387,6.579598,3.617075,4.649245,-8.193381,-0.857049,-4.213126,-4.670593,2.972399,-3.659039,4.217367,-5.532005,9.090041,9.657863,1.604465,9.261733,4.781003,-5.001734,-1.916719,9.804714,-9.217518,7.734687,3.037069,-7.537025,-0.548348,-6.728201,0.320288,-6.527157,-9.214331,-8.357599,5.546290,1.722917,-1.472931,4.418695,0.774147,9.318236,-1.035112,8.926380,-3.020532,5.590969,-2.033913,3.054823,-5.478753,5.051010,1.035511,0.403004,2.724763,-7.105680,-9.567738,-2.661289,-2.316601,5.134288,-7.092009,-8.425409,-5.803605,-6.543305,-3.968762,6.469998,1.938518,4.912748,-6.596047,3.904040,4.770983,-5.621850,6.575983,-0.932070,-0.419865,1.015880,-7.878307,-9.961342,4.751314,4.440226,-6.732327,-3.696919,6.953920,-5.552708,-2.000741,-9.969891,9.824876,7.938955,7.235600,-2.482079,-7.551274,5.510292,-5.806399,6.414209,-1.406989,8.183928,9.800689,-0.369449,6.022743,2.367511,8.731856,8.134155,-8.024528,2.175333,-7.940079,6.985871,9.882575,4.413413,-0.478343,8.599517,-6.176994,6.031301,6.098874,-1.911015,7.303092,-9.224532,4.939039,7.577724,4.576000,-1.021153,2.624543,-5.159218,-7.336609,-2.310203,-2.804587,6.183865,-6.039540,6.239903,-8.475207,-8.399047,8.583598,-8.699130,-2.968083,-9.506030,4.078971,-1.514183,-1.474078,6.522740,-4.073693,-7.696614,-5.860957,1.551480,-6.807769,-1.565646,8.384081,-0.883555,4.513057,8.233688,4.950266,3.618317,-6.768561,6.832123,-3.497444,9.405408,-6.850216,-4.240395,7.150523,7.040382,-8.755981,7.184940,-8.824956,-7.069403,-5.567362,3.634090,3.330285,-9.515766,-3.394350,-6.761334,8.269847,-8.251391,4.856117,-4.919200,-0.695642,6.214416,2.659158,-9.862144,-0.434814,8.717972,6.622129,-2.348366,-0.934783,-6.811030,-9.938330,3.319326,8.847032,7.600758,-6.737744,7.354738,0.895809,5.936639,9.737491,-6.026310,-3.010723,6.556871,4.087620,-6.253818,-4.504725,-8.255445,-8.388189,-6.132016,3.052146,-9.773725,3.223238,4.023516,-1.679573,2.943893,-0.812416,-2.160116,-1.666383,-1.138783,3.770816,6.291950,-1.136964,1.190031,4.844211,-4.636698,3.846968,6.532134,-6.768295,-9.374312,2.615925,6.330378,3.189227,5.615336,8.517616,9.364844,-2.438734,-9.976661,5.232964,3.777008,-7.044786,0.922189,7.665618,-1.275670,6.601940,-7.457451,2.827987,6.527424,9.130874,-3.553643,-5.567341,-2.766387,-5.937805,9.297569,-8.397060,-9.404629,-8.622807,-8.151657,-0.684114,-2.130943,8.530711,6.930871,-7.073681,-2.149933,3.204813,-0.885417,-7.097892,-0.744508,7.161903,-0.687506,0.857176,-7.491345,1.872750,4.201223,-9.896228,6.790368,-4.750458,-8.012472,6.153692,5.916315,2.460490,4.791757,-4.737654,-5.298878,3.118684,3.028999,3.589978,8.906769,-8.552890,2.900017,-8.459515,2.143702,7.590227,2.174999,-8.642457,1.089834,-2.593943,8.021550,-9.088230,-8.755792,3.604828,-5.191698,-6.718399,3.892258,-2.964507,5.460833,4.942241,-9.848955,-0.364982,-2.385667,-1.738410,-8.648025,-3.805322,8.813680,5.849385,-9.797136,9.315212,7.927656,-7.036827,-0.190653,0.047212,5.392123,-0.067616,6.929037,1.508124,6.608018,0.403207,-6.090361,-4.146872,2.613926,-2.365873,-1.011627,-4.259969,5.663514,-8.258029,-7.901719,4.242190,-4.003264,2.469905,-6.339719,0.158638,-7.384174,8.182748,-1.435543,-1.687095,6.503487,-8.144565,-7.436752,1.731692,0.865958,2.426324,-6.079889,-4.765203,7.470162,-1.529938,-4.521348,2.342286,6.928484,-2.909000,-7.213958,6.101507,0.477074,5.982278,-9.350109,0.236598,-4.274786,0.361934,7.053055,-8.779030,3.276711,-9.553058,-2.226716,-2.571767,-0.546785,-7.874407,4.641445,-7.296659,8.639894,-7.399800,-2.646268,6.682433,1.996139,7.290899,-4.083029,0.648704,4.124598,-4.396741,9.969220,8.662667,5.448242,8.924307,4.341099,4.475748,7.673380,-9.982689,0.311320,1.417130,7.369768,4.594053,-8.893102,3.079440,-7.432356,8.351963,1.506852,9.391558,-3.546679,8.853410,-9.505476,-8.330230,7.778360,4.239390,9.602542,3.931693,-9.300031,-9.491670,9.120523,-5.586898,8.696194,3.273141,-8.556468,7.623340,5.627169,-6.919381,1.823720,-9.663429,5.810098,8.989710,-0.728625,8.739516,7.944462,8.269983,-7.667041,-5.231441,7.867729,-3.557030,-9.102636,4.290290,-0.348223,0.780842,-6.231771,-8.412238,-8.145405,-0.214460,-4.604516,8.357964,-6.202224,-0.147070,-7.244554,-1.647829,6.477234,2.112624,6.306322,9.786267,-9.173243,2.036881,-1.387698,-6.574956,-9.879905,3.534508,6.609141,-4.135823,3.597398,-7.033317,-1.206946,-7.229764,5.903017,1.872897,-6.507153,-5.949066,-9.764550,4.384777,-7.710191,0.619595,3.438306,8.563670,8.432086,-1.528492,3.798092,-9.837128,4.310817,8.377268,-7.227357,9.027276,9.266153,8.837376,-0.793509,0.221458,-7.060797,1.609470,4.124029,-3.711897,-9.961094,-8.265205,4.326620,4.985805,2.853367,8.819300,-2.671690,-9.725884,3.298687,1.878545,-8.149637,-3.906937,1.966665,-2.241728,-0.681446,7.626431,5.314583,-1.609704,-0.207771,-4.901787,-4.121413,1.416183,-8.145583,0.079824,5.170461,7.402677,1.616959,-7.087690,2.527240,0.161085,-3.960085,0.247361,-1.517480,-9.497929,8.167583,-0.629656,3.433808,-1.562322,2.273377,8.087300,-5.060296,4.121236,-1.862123,-2.247430,-9.950348,5.860269,-4.015898,8.606209,7.798370,0.131341,-6.951921,-0.291683,1.094127,8.382252,-4.635169,1.278426,-7.725329,-9.855983,6.189896,-0.324617,1.519981,-8.873311,-2.184747,-3.121021,6.485008,9.726596,-5.233295,8.150735,-8.804057,-6.258049,7.668136,-4.059514,-0.140430,-8.058024,8.218993,-3.079410,2.586118,1.948391,-1.663995,2.164341,7.024333,9.752715,-6.456793,-9.477040,4.295891,-9.970222,-1.479689,-2.316218,8.219887,-0.811425,-6.474256,1.077584,5.832469,2.082022,2.297290,-3.742601,6.180971,-8.725431,-6.746147,7.749402,2.744920,7.230631,-7.927072,8.064236,-0.559641,-7.468058,-7.965780,-8.816771,-6.294051,0.587812,-5.468007,0.448803,9.819855,-4.687486,-3.053368,1.315302,4.969113,8.002397,7.518938,4.705678,2.066359,-7.827071,-6.482034,8.910842,-5.043277,-3.261323,-1.117863,2.940335,2.256542,-8.311530,6.540084,1.284449,-9.963876,-3.969071,7.738884,3.195741,9.312232,-8.333019,4.436440,7.864054,-9.683285,-1.003686,4.919583,-4.955510,0.975989,-2.400904,8.243412,1.267200,-6.354241,7.732035,-5.774345,-6.492086,-9.953792,7.243067,2.674927,2.640439,-0.500678,-2.453606,9.895048,-3.731689,2.346989,5.347500,-7.194235,-4.032004,-0.186404,0.091374,0.644358,1.232851,-1.542903,8.185160,3.350033,-4.174426,-0.688723,0.638738,3.231629,3.848737,-2.900189,9.002331,1.492443,8.826854,6.821990,-4.891199,0.613326,-7.935146,-7.405552,6.434048,1.042084,2.101098,-7.149621,2.938591,-4.421454,9.699285,-2.631079,-2.661000,-7.002715,9.851342,-3.279804,-9.519294,9.353907,2.958293,-2.429288,2.893204,-8.279591,-0.124383,5.514244,5.280329,-4.480190,-7.748200,2.941064,-5.677998,1.119149,-7.065025,-1.533922,2.089152,5.497868,2.115938,7.411815,1.453361,-3.096790,-9.095541,-7.893800,3.615274,-5.850117,2.319148,-2.685027,-2.356468,9.739311,5.897906,0.601630,-7.879258,-4.197578,1.720415,-1.347936,4.521152,-7.178524,7.375026,9.228496,2.158307,-9.180071,-9.461660,-4.810765,-9.999931,8.516780,1.614746,-9.512380,9.073556,-9.590654,-5.914146,-0.642261,5.104125,-4.975555,1.061449,4.814347,1.627979,9.877681,2.675791,-5.668048,1.715551,1.466943,7.975502,-1.346494,-5.664187,9.198432,-0.020431,2.208932,-2.783905,-7.155967,2.644412,-2.420905,9.027186,-4.304074,6.273969,8.290357,-8.400048,-7.479400,-0.531265,2.808452,3.760446,-9.552175,-6.755098,1.765172,3.095278,-5.767955,3.880751,7.703890,-3.853522,1.473923,1.898360,-3.124516,-5.422626,5.362220,-7.991615,4.596054,1.147019,5.729777,6.402281,-5.745307,-8.933707,-6.025732,2.800684,-7.954497,1.799958,2.630593,-2.201332,3.796267,-2.996283,-9.481735,7.585851,-4.074974,6.788989,-3.360719,-6.029946,8.911448,7.907584,7.091000,9.653164,-3.098440,1.042007,0.053403,4.221860,-1.484601,9.546001,-0.697851,1.941436,5.300488,-9.528402,3.019868,-2.271400,4.838413,-1.532688,-5.998618,6.132933,4.894780,3.023768,-2.829683,6.263020,-7.133599,0.699141,9.432039,-7.401472,5.212849,-0.351379,9.608469,3.181623,-6.384842,5.554061,-2.141955,5.607782,-3.677619,-6.891796,3.229785,8.390645,9.377886,8.293789,4.109201,1.752417,-3.681905,-6.048285,5.792478,3.595938,6.221104,-9.757244,3.526823,9.179276,-5.194525,-8.078893,4.252391,-4.623236,1.482992,6.901964,6.868441,7.807120,-5.962990,9.025260,-2.133779,3.473697,-6.377251,9.065678,7.203252,6.357334,-9.570621,-3.696875,8.128448,-9.313028,-8.627559,-7.794540,0.173515,0.858335,5.953496,5.647287,3.859270,0.762257,-6.052437,2.017743,-8.881381,-4.279456,3.858953,-6.701967,0.715599,3.758307,8.479581,9.935817,3.032357,-4.014770,3.730346,-8.251578,0.555720,-5.925219,-2.980676,5.811137,-2.345183,-2.975403,-1.828387,7.393004,3.113362,5.749529,-1.680269,0.535062,-1.445387,-2.576376,7.303992,-3.439892,-4.726095,4.834545,3.761074,6.444350,-7.674793,8.302249,7.328705,-7.219521,9.828660,7.603437,-0.735288,5.932503,-4.665342,-3.458897,8.295330,-0.350080,-0.070119,-8.705386,1.509537,9.836565,7.819156,-3.794433,9.584235,-5.398096,5.226338,-2.109990,-3.854145,-0.195251,2.155901,4.118720,8.544162,9.644350,8.880415,0.827328,1.282920,-5.067922,8.132263,0.580920,8.093512,3.903238,9.869237,-1.866469,-8.934196,5.764544,3.047607,-1.760583,-8.002290,-9.522225,3.152173,-5.711351,4.899288,-6.202379,-9.477373,8.796283,2.191085,-0.461153,1.091649,-3.964407,0.634516,7.794740,-0.727154,7.161625,6.853126,-8.428502,-5.522164,-9.343601,3.374031,-7.650274,-1.329670,9.739585,5.434107,1.887793,-0.345524,-3.571943,8.814682,6.024217,2.999862,-2.293955,-1.176710,8.064809,-6.026471,-1.798474,-7.651653,9.465240,6.782184,-1.303875,-8.616514,2.345516], dtype = "float32")#candidate|4234|(1344,)|const|float32
call_4233 = func_1475_call(relay.reshape(const_4234.astype('float32'), [16, 12, 7]))
call_4235 = func_1475_call(relay.reshape(const_4234.astype('float32'), [16, 12, 7]))
var_4240 = relay.var("var_4240", dtype = "float64", shape = (2, 3, 12))#candidate|4240|(2, 3, 12)|var|float64
bop_4241 = relay.less(uop_4219.astype('bool'), relay.reshape(var_4240.astype('bool'), relay.shape_of(uop_4219))) # shape=(2, 3, 12)
bop_4244 = relay.less(uop_4221.astype('bool'), relay.reshape(var_4240.astype('bool'), relay.shape_of(uop_4221))) # shape=(2, 3, 12)
output = relay.Tuple([call_4233,const_4234,bop_4241,])
output2 = relay.Tuple([call_4235,const_4234,bop_4244,])
func_4246 = relay.Function([var_4240,], output)
mod['func_4246'] = func_4246
mod = relay.transform.InferType()(mod)
mutated_mod['func_4246'] = func_4246
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4247 = relay.var("var_4247", dtype = "float64", shape = (2, 3, 12))#candidate|4247|(2, 3, 12)|var|float64
func_4246_call = mutated_mod.get_global_var('func_4246')
call_4248 = func_4246_call(var_4247)
output = call_4248
func_4249 = relay.Function([var_4247], output)
mutated_mod['func_4249'] = func_4249
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4205_call = mod.get_global_var('func_4205')
func_4206_call = mutated_mod.get_global_var('func_4206')
call_4253 = relay.TupleGetItem(func_4205_call(), 0)
call_4254 = relay.TupleGetItem(func_4206_call(), 0)
var_4255 = relay.var("var_4255", dtype = "float64", shape = (2, 3, 12))#candidate|4255|(2, 3, 12)|var|float64
bop_4256 = relay.right_shift(call_4253.astype('int16'), relay.reshape(var_4255.astype('int16'), relay.shape_of(call_4253))) # shape=(2, 3, 12)
bop_4259 = relay.right_shift(call_4254.astype('int16'), relay.reshape(var_4255.astype('int16'), relay.shape_of(call_4254))) # shape=(2, 3, 12)
func_1384_call = mod.get_global_var('func_1384')
func_1386_call = mutated_mod.get_global_var('func_1386')
const_4261 = relay.const([9.494069,6.645013,-0.864574,0.610201,3.302113,3.845558,4.144931,-4.241532,-9.776416,-6.926307,-6.843270,8.302250,-0.507385,-0.731442,8.015548,-5.189318,9.814626,5.710638,-1.122813,-4.312681,-7.247822,-6.154488,-3.845047,6.171139,-0.084004,-9.874700,2.228479,8.260759,-6.138199,-4.312863,7.855875,-5.652244,-0.930143,-2.880745,8.553991,-3.851064,4.499074,6.486308,-5.901304,-9.334308,5.355267,9.541694,-3.663890,-8.902963,-2.016558,9.737968,2.570313,-5.397184,3.790991,-8.164209,3.292459,-7.292575,3.592884,-5.263393,6.117880,-8.682718,-1.989524,0.108668,-6.676463,3.878715,-4.459375,-5.218944,-4.630330,-4.696347,-3.269666,-5.825332,4.600628,-5.119429,7.890275,-7.690911,3.448747,1.971069,-1.474682,-9.804283,-1.393513,7.402049,-3.303800,9.138274,-5.752172,4.851523,-3.467709,-8.095894,-7.042550,0.438389,-0.399357,-5.237238,-2.822970,2.305639,3.766114,-9.826299,4.393892,-8.707403,4.349752,-6.015363,9.840383,-2.838367,-5.211376,-8.363256,7.288053,-6.080858,0.110075,7.326083,-6.340181,4.744280,9.053313,8.427645,2.259633,-7.496028,7.991867,9.048737,-6.396366,5.904938,-6.895776,-5.946312,2.463094,1.508510,0.188992,-3.866630,5.087045,6.486814,1.967735,2.789908,8.774836,-1.446648,0.655049,9.366532,2.021260,-5.474741,-4.725137,-2.255455,6.714190,6.757177,-4.609005,-0.090619,3.046972,-2.837630,-7.639097,3.005051,-0.471247,7.327129,7.239360,7.005115,6.456806,2.199974,-3.170408,9.248287,6.381587,6.903141,-8.701071,-2.902766,9.267500,0.808221,-5.378182,4.800903,-4.770609,-4.460335,-3.954495,-4.650978,9.157830,0.763026,4.338226,6.772340,4.927809,6.307403,-7.455241,8.356399,-9.904288,-3.722703,-5.131894,4.840602,-7.095421,-9.931779,-5.278428,-9.487761,-7.880190,2.380145,-8.835218,7.259150,8.560763,7.302154,-5.575311,-1.175712,0.127127,8.424403,-5.352016,-8.606676,8.110294,0.527423,-3.128794,1.195338,-4.332411,-1.441443,-1.222782,-3.028600,-8.190676,9.866677,4.742068,-2.005751,-6.386863,-1.007693,-1.891403,8.638218,6.495285,3.077402,-9.818266,4.334220,-1.216240,3.104164,1.822175,-8.038369,-0.992409,-1.038258,7.532075,-9.680287,-1.802356,6.042905,-3.751760,-8.213700,9.254762,5.931574,0.394026,-7.425628,-3.463309,-6.738434,-2.131676], dtype = "float64")#candidate|4261|(225,)|const|float64
call_4260 = func_1384_call(relay.reshape(const_4261.astype('float64'), [5, 3, 15]))
call_4262 = func_1384_call(relay.reshape(const_4261.astype('float64'), [5, 3, 15]))
func_4246_call = mod.get_global_var('func_4246')
func_4249_call = mutated_mod.get_global_var('func_4249')
call_4263 = relay.TupleGetItem(func_4246_call(relay.reshape(bop_4256.astype('float64'), [2, 3, 12])), 2)
call_4264 = relay.TupleGetItem(func_4249_call(relay.reshape(bop_4256.astype('float64'), [2, 3, 12])), 2)
uop_4272 = relay.atanh(call_4253.astype('float64')) # shape=(2, 3, 12)
uop_4274 = relay.atanh(call_4254.astype('float64')) # shape=(2, 3, 12)
func_434_call = mod.get_global_var('func_434')
func_440_call = mutated_mod.get_global_var('func_440')
const_4287 = relay.const(8.754945, dtype = "float32")#candidate|4287|()|const|float32
var_4288 = relay.var("var_4288", dtype = "float32", shape = (240,))#candidate|4288|(240,)|var|float32
var_4289 = relay.var("var_4289", dtype = "float64", shape = (704,))#candidate|4289|(704,)|var|float64
call_4286 = relay.TupleGetItem(func_434_call(relay.reshape(const_4287.astype('float32'), []), relay.reshape(var_4288.astype('float32'), [15, 2, 8]), relay.reshape(var_4289.astype('float64'), [16, 11, 4]), relay.reshape(var_4255.astype('uint64'), [72,]), ), 3)
call_4290 = relay.TupleGetItem(func_440_call(relay.reshape(const_4287.astype('float32'), []), relay.reshape(var_4288.astype('float32'), [15, 2, 8]), relay.reshape(var_4289.astype('float64'), [16, 11, 4]), relay.reshape(var_4255.astype('uint64'), [72,]), ), 3)
uop_4300 = relay.cos(uop_4272.astype('float64')) # shape=(2, 3, 12)
uop_4302 = relay.cos(uop_4274.astype('float64')) # shape=(2, 3, 12)
uop_4306 = relay.sin(uop_4300.astype('float32')) # shape=(2, 3, 12)
uop_4308 = relay.sin(uop_4302.astype('float32')) # shape=(2, 3, 12)
output = relay.Tuple([bop_4256,call_4260,const_4261,call_4263,call_4286,const_4287,var_4288,var_4289,uop_4306,])
output2 = relay.Tuple([bop_4259,call_4262,const_4261,call_4264,call_4290,const_4287,var_4288,var_4289,uop_4308,])
func_4314 = relay.Function([var_4255,var_4288,var_4289,], output)
mod['func_4314'] = func_4314
mod = relay.transform.InferType()(mod)
var_4315 = relay.var("var_4315", dtype = "float64", shape = (2, 3, 12))#candidate|4315|(2, 3, 12)|var|float64
var_4316 = relay.var("var_4316", dtype = "float32", shape = (240,))#candidate|4316|(240,)|var|float32
var_4317 = relay.var("var_4317", dtype = "float64", shape = (704,))#candidate|4317|(704,)|var|float64
output = func_4314(var_4315,var_4316,var_4317,)
func_4318 = relay.Function([var_4315,var_4316,var_4317,], output)
mutated_mod['func_4318'] = func_4318
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4329 = relay.var("var_4329", dtype = "int32", shape = (1, 8, 2))#candidate|4329|(1, 8, 2)|var|int32
const_4330 = relay.const([[[8,-2],[-7,-5],[-9,-1],[5,2],[-2,-3],[-2,-5],[7,5],[10,5]],[[-3,3],[7,-6],[-10,-3],[-8,2],[-1,-5],[6,-7],[3,2],[2,-1]],[[8,5],[-1,2],[-8,6],[-3,6],[-7,-6],[8,-8],[7,-6],[9,6]],[[-1,-5],[-3,-4],[5,9],[-2,1],[-5,-2],[10,5],[2,-8],[9,10]],[[-4,2],[3,10],[-10,5],[3,9],[1,-2],[3,-10],[-9,8],[2,-7]],[[5,6],[7,-4],[-5,9],[5,6],[1,-10],[-5,9],[-9,-3],[-5,9]],[[-4,-7],[-1,10],[-2,-3],[-6,2],[9,4],[-2,-2],[-10,-4],[-9,-4]],[[-8,-4],[2,2],[-4,10],[8,-9],[-5,2],[4,10],[1,8],[9,-1]],[[-2,3],[-10,7],[-1,-3],[-10,7],[5,-3],[-5,4],[9,4],[-5,4]],[[-1,-3],[-3,6],[-9,5],[3,-5],[1,-9],[2,-2],[7,-8],[10,-4]],[[-8,-3],[-9,-5],[8,-10],[-1,-9],[-2,1],[-4,-5],[-9,-7],[-5,-4]]], dtype = "int32")#candidate|4330|(11, 8, 2)|const|int32
bop_4331 = relay.not_equal(var_4329.astype('bool'), const_4330.astype('bool')) # shape=(11, 8, 2)
func_891_call = mod.get_global_var('func_891')
func_893_call = mutated_mod.get_global_var('func_893')
const_4338 = relay.const([1.700391,3.311041,0.874917,-7.907645,6.383063,-2.550478,3.391119,-1.375917,-7.113967,-7.781952,0.928066,-8.380828,6.105959,3.827088,6.740085,7.490637,-4.814333,-4.178761,3.494909,-6.520679,0.102722,9.951820,3.452657,-2.648660,5.947335,3.614933,4.432641,4.235838,-6.127093,0.896437,8.089851,-8.313803,9.554746,0.720229,-7.308219,5.602991,-3.022271,-7.950751,9.463546,-9.959686,1.177924,3.293780,6.099153,-7.311460,4.777777,7.751724,-6.266292,-6.474090,-8.118393,-5.651439,0.279570,-9.031201,-2.654501,-2.431639,4.385634,5.255090,-6.028787,1.331067,1.294619,-8.106580,-8.818640,7.304584,4.210207,-1.813696,9.817644,-1.212597,2.920476,-9.846213,4.490500,2.240771,7.886479,-9.598683,5.512432,1.054276,8.419928,-7.410633,6.612234,-5.651523], dtype = "float64")#candidate|4338|(78,)|const|float64
call_4337 = relay.TupleGetItem(func_891_call(relay.reshape(const_4338.astype('float64'), [2, 13, 3])), 0)
call_4339 = relay.TupleGetItem(func_893_call(relay.reshape(const_4338.astype('float64'), [2, 13, 3])), 0)
bop_4345 = relay.minimum(const_4338.astype('float32'), relay.reshape(call_4337.astype('float32'), relay.shape_of(const_4338))) # shape=(78,)
bop_4348 = relay.minimum(const_4338.astype('float32'), relay.reshape(call_4339.astype('float32'), relay.shape_of(const_4338))) # shape=(78,)
uop_4351 = relay.asinh(bop_4331.astype('float32')) # shape=(11, 8, 2)
output = relay.Tuple([bop_4345,uop_4351,])
output2 = relay.Tuple([bop_4348,uop_4351,])
func_4355 = relay.Function([var_4329,], output)
mod['func_4355'] = func_4355
mod = relay.transform.InferType()(mod)
var_4356 = relay.var("var_4356", dtype = "int32", shape = (1, 8, 2))#candidate|4356|(1, 8, 2)|var|int32
output = func_4355(var_4356)
func_4357 = relay.Function([var_4356], output)
mutated_mod['func_4357'] = func_4357
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4205_call = mod.get_global_var('func_4205')
func_4206_call = mutated_mod.get_global_var('func_4206')
call_4404 = relay.TupleGetItem(func_4205_call(), 0)
call_4405 = relay.TupleGetItem(func_4206_call(), 0)
output = call_4404
output2 = call_4405
func_4414 = relay.Function([], output)
mod['func_4414'] = func_4414
mod = relay.transform.InferType()(mod)
output = func_4414()
func_4415 = relay.Function([], output)
mutated_mod['func_4415'] = func_4415
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4205_call = mod.get_global_var('func_4205')
func_4206_call = mutated_mod.get_global_var('func_4206')
call_4423 = relay.TupleGetItem(func_4205_call(), 0)
call_4424 = relay.TupleGetItem(func_4206_call(), 0)
func_1623_call = mod.get_global_var('func_1623')
func_1627_call = mutated_mod.get_global_var('func_1627')
const_4449 = relay.const([2,-10,3,8,4,-5,-2,6,-2,-3,-2,2,-7,4,-7,-9,4,-2,1,-7,9,-1,-4,10,-1,2,7,1,-2,8,-3,-10,8,-3,1,-5,3,-3,4,5,-6,1,1,-9,-4,-2,-6,1,4,5,6,-8,-8,8,-4,-9,9,4,-9,-3,-2,9,7,1,4,9,-8,10,7,7,-8,10,4,7,8,6,5,7,-5,-7,6,10,-2,9,-6,-1,-1,-4,-6,10,-1,6,-10,-1,-3,6,4,-5,-6,-6,-9,1,-9,-6,-5,10,1,-5,-1,9,-7,-3,-3,-9,-1,3,3,1,-8,6,-3,3,-2,-8,9,7,2,-8,8,-6,-4,2,-5,-1,10,-8,4,9,-4,-9,2,-8,7,1,-3,6,-6,-7,1,-3,7,-6,-5,-9,1,1,-5,10,-2,7,8,5,2,-4,-1,-6,8,-9,8,-3,7,4,2,-2,-7,-2,-2,8,10,-9,-8,-1,-8,3,-8,4,-2,-7,-4,-1,-6,7,-9,-2,-8,-1,-5,-5,3,-8,8,-8,2,-7,2,7,-10,-8,1,9,10,-6,-2,-9,-10,-8,2,-9,1,3,3,-5,-6,3,4,5,-1,10,-1,-10,7,9,6,-4,-5,2,6,-10,-2,-10,-4,10,-3,1,-9,-6,9,-6,7,-1,8,10,-3,-6,5,9,10,-9,10,-8,-10,-5,-4,-5,-2,3,2,-6,6,-9,-10,2,-10,3,-10,-8,9,-1,-6,-4,-3,-10,10,9,8,7,-8,5,8,5,3,8,9,-5,-4,-3,5,1,7,-1,7,2,5,-1,-9,10,-2,-4,-8,5,-1,10,-2,-1,-10,-6,8,-4,7,-7,4,6,8,8,-2,-9,-1,-9,7,-2,2,-5,5,-7,-7,-7,-4,8,7,-9,10,2,-4,-4,10,-1,3,-7,7,1,8,4,2,-3,9,8,9,-1,-2,5,9,6,-4,-2,-7,-5,-2,-7,3,3,-2,-1,4,6,-7,8,9,-9,9,3,6,-8,-9,3,5,-3,-1,-9,-8,-9,-6,-2,2,-7,5,-4,-8,-9,1,8,-10,-4,7,5,8,2,-2,-10,-4,-3,7,-9,-4,-3,-2,1,-3,-4,10,-8,3,6,-2,10,-1,8,2,4,-8,3,7,-2,10,-3,-5,-3,-10,-4,3,-2,-6,-2,-8,8,-3,-5,-4,-1,5,7,4,8,6,8,-5,4,9,-2,2,10,-1,-6,-4,-1,2,8,-9,9,8,7,-6,-5,-8,-1,-6,-8,7,-4,-2,9,5,9,4,9,5,-7,8,-5,10,-9,-8,5,-2,6,4,-7,3,-10,5,-10,7,1,-9,2,-2,-8,-9,-6,2,4,-7,2,10,-8,-3,-3,-8,-8,1,-8,2,-5,-1,-1,-3,6,9,-2,1,-1,-10,7,-1,5,-4,8,1,6,-4,-4,3,9,-9,8,-10,-6,-7,8,-9,-1,8,-8,3,-10,2,-6,-3,6,5,-3,5,5,6,10,-8,8,-10,-4,2,-4,7,1,4,-3,-1,5,-8,8,4,9,10,-8,4,5,-6,-2,8,5,1,2,4,8,8,8,-7,-5,-2,7,-5,-4,3,3,9,5,6,2,5,-4,9,6,-6,-10,4,-6,2,-9,8,-8,10,7,-1,5,-2,-8,10,-4,4,7,-5,-8,-5,-4,9,-7,5,6,-6,3,-2,6,6,-10,-8,-10,-2,-10,5,7,5,-4,10,8,5,-2,2,-10,-2,9,-9,-10,7,-5,5,-6,-6,3,-2,-3,-4,-3,5,-5,6,-4,4,4,-6,-4,1,-1,2,-6,-7,-1,-4,-9,2,3,-9,10,2,7,-7,9,2,-6,6,-1,10,7,-10,10,-10,7,3,5,5,5,4,9,-8,2,-8,-8,-7,-2,-1,9,7,-3,7,-8,-1,-4,9,-2,-10,-10,9,9,-4,5,3,-9,1,-3,-9,1,-5,6,8,-10,4,9,9,9,8,1,9,-6,-1,7,1,3,-10,-10,6,-9,2,-4,-7,-8,-9,8,10,-6,-4,-4,-10,-3,-5,1,4,4,1,1,-10,-4,-10,7,-8,-1,-6,9,2,-8,-6,-10,2,-10,-1,10,-10,2,-7,-7,2,7,-7,-5,10,-7,4,-1,-3,-9,2,6,4,-1,7,-5,-8,-6,-1,-5,4,-1,9,-7,3,-7,-5,-6,-2,-9,-4,7,-7,6,-4,10,3,6,-3,6,-9,8,9,5,10,-2,10,-6,-2,6,-3,4,10,-10,5,7,-1,1,1,-1,2,5,5,-1,-4,-5,-5,-5,-10,-6,-10,-10,9,1,7,-1,7,3,7,-9,10,2,-4,8,1,-1,-6,4,-2,5,6,10,-4,-5,8,-6,9,-4,4,-7,6,7,-8,-9,-5,10,2,5,7,-9,-6,-1,-2,8,-7,-10,-10,8,8,-8,4,4,-2,-4,-1,-1,-7,-3,-7,4,5,-10,-10,3,-6,1,-1,-7,-4,-9,5,3,4,10,7,7,7,7,6,5,2,-3,1,-5,5,9,6,4,7,1,-8,-4,-6,2,10,3,5,5,9,8,-6,4], dtype = "int64")#candidate|4449|(968,)|const|int64
const_4450 = relay.const([5.665238,5.039650,-9.311303,0.030334,-7.209089,6.165375,-0.813543,-3.459515,-7.538084,0.820220,6.079411,-1.372184,-5.656544,6.900322,-9.277023,1.217887,-6.367164,-5.754867,4.666179,-9.367032,-0.073587,2.873555,-4.134453,9.359848,-1.211533,1.006984,-9.907486,-8.612217,8.587830,-7.223652,8.607557,7.209593,-2.578403,-5.898833,9.547461,-2.186187,-0.096054,3.444432,0.594199,1.586197,3.672197,4.097216,-5.522629,2.906397,-2.547356,7.522847,4.920849,3.679882,-4.119642,7.652043,-7.344338,3.753252,5.914115,8.067847,8.543181,6.840880,-1.121717,-6.572607,-3.350343,-8.429611,4.497583,-7.104401,-0.661899,7.261299], dtype = "float64")#candidate|4450|(64,)|const|float64
call_4448 = relay.TupleGetItem(func_1623_call(relay.reshape(const_4449.astype('int64'), [11, 8, 11]), relay.reshape(const_4449.astype('int64'), [11, 8, 11]), relay.reshape(const_4450.astype('float64'), [64,]), ), 0)
call_4451 = relay.TupleGetItem(func_1627_call(relay.reshape(const_4449.astype('int64'), [11, 8, 11]), relay.reshape(const_4449.astype('int64'), [11, 8, 11]), relay.reshape(const_4450.astype('float64'), [64,]), ), 0)
func_3160_call = mod.get_global_var('func_3160')
func_3162_call = mutated_mod.get_global_var('func_3162')
var_4474 = relay.var("var_4474", dtype = "uint16", shape = (180,))#candidate|4474|(180,)|var|uint16
call_4473 = func_3160_call(relay.reshape(var_4474.astype('uint16'), [4, 9, 5]))
call_4475 = func_3160_call(relay.reshape(var_4474.astype('uint16'), [4, 9, 5]))
func_891_call = mod.get_global_var('func_891')
func_893_call = mutated_mod.get_global_var('func_893')
const_4477 = relay.const([-4.044692,-6.189569,1.406761,-5.187551,-8.279333,2.999258,3.737467,-3.386169,-8.624892,0.743560,3.872246,-6.353847,-3.542650,9.405829,-2.478777,-3.239255,-3.235539,7.938167,0.988733,-6.755510,9.844574,-2.168735,2.709352,-2.226414,9.633998,7.317181,-3.176644,5.356106,9.532924,-6.442912,-7.123049,9.264776,4.398162,-9.450552,-4.281318,-3.969894,-5.093226,-1.548323,2.324866,2.696434,-2.940400,0.914630,9.598786,4.994160,-2.519920,-4.394610,-8.470815,8.213184,-1.776253,0.797639,-7.881364,-0.739305,-0.029683,-6.453483,8.861536,0.288240,-9.677793,-9.109429,9.896807,5.979669,8.500101,-0.331529,0.408642,5.497856,-7.059121,-5.725107,-5.788930,8.311426,5.366303,6.372981,-8.247688,-7.600405,3.417770,-9.401045,-5.477345,-6.451654,7.905847,-1.977473], dtype = "float64")#candidate|4477|(78,)|const|float64
call_4476 = relay.TupleGetItem(func_891_call(relay.reshape(const_4477.astype('float64'), [2, 13, 3])), 0)
call_4478 = relay.TupleGetItem(func_893_call(relay.reshape(const_4477.astype('float64'), [2, 13, 3])), 0)
bop_4480 = relay.subtract(call_4473.astype('float64'), relay.reshape(var_4474.astype('float64'), relay.shape_of(call_4473))) # shape=(4, 9, 5)
bop_4483 = relay.subtract(call_4475.astype('float64'), relay.reshape(var_4474.astype('float64'), relay.shape_of(call_4475))) # shape=(4, 9, 5)
output = relay.Tuple([call_4423,call_4448,const_4449,const_4450,call_4476,const_4477,bop_4480,])
output2 = relay.Tuple([call_4424,call_4451,const_4449,const_4450,call_4478,const_4477,bop_4483,])
func_4492 = relay.Function([var_4474,], output)
mod['func_4492'] = func_4492
mod = relay.transform.InferType()(mod)
mutated_mod['func_4492'] = func_4492
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4493 = relay.var("var_4493", dtype = "uint16", shape = (180,))#candidate|4493|(180,)|var|uint16
func_4492_call = mutated_mod.get_global_var('func_4492')
call_4494 = func_4492_call(var_4493)
output = call_4494
func_4495 = relay.Function([var_4493], output)
mutated_mod['func_4495'] = func_4495
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4205_call = mod.get_global_var('func_4205')
func_4206_call = mutated_mod.get_global_var('func_4206')
call_4529 = relay.TupleGetItem(func_4205_call(), 0)
call_4530 = relay.TupleGetItem(func_4206_call(), 0)
output = relay.Tuple([call_4529,])
output2 = relay.Tuple([call_4530,])
func_4539 = relay.Function([], output)
mod['func_4539'] = func_4539
mod = relay.transform.InferType()(mod)
mutated_mod['func_4539'] = func_4539
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4539_call = mutated_mod.get_global_var('func_4539')
call_4540 = func_4539_call()
output = call_4540
func_4541 = relay.Function([], output)
mutated_mod['func_4541'] = func_4541
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4622 = relay.const([[[True,False,True,True,False,False],[True,True,True,True,True,True],[False,True,False,True,False,False],[True,False,True,False,False,True],[False,False,False,False,False,True],[False,True,True,True,False,True]],[[False,True,True,True,False,False],[False,True,True,True,False,True],[True,True,True,False,False,False],[True,False,False,True,False,False],[False,False,True,True,False,False],[True,False,True,False,True,False]],[[False,True,True,True,False,True],[False,False,False,False,False,False],[False,False,False,False,True,False],[True,False,True,False,True,True],[False,False,True,False,False,False],[False,False,True,True,True,False]],[[False,False,False,False,False,False],[True,False,False,True,False,False],[False,True,False,True,False,True],[False,False,False,True,False,False],[True,False,True,False,True,False],[False,True,False,False,False,False]],[[True,True,False,True,False,True],[True,False,False,True,True,False],[True,True,True,True,False,True],[True,True,False,False,False,True],[True,False,True,True,True,True],[False,False,False,False,True,False]],[[True,True,True,False,False,False],[False,True,False,True,False,False],[True,False,False,True,False,False],[False,True,False,True,True,True],[False,True,True,False,True,True],[True,True,False,False,True,False]],[[False,True,False,False,True,False],[True,False,False,True,True,True],[True,True,False,True,True,True],[True,True,False,False,False,False],[True,True,True,True,True,False],[False,True,True,False,False,False]],[[False,True,False,True,False,True],[False,True,True,False,False,False],[False,True,True,False,False,True],[False,True,False,True,True,True],[True,True,True,True,True,True],[True,True,False,False,False,False]],[[True,False,True,False,True,True],[False,True,True,False,True,True],[True,False,False,False,True,True],[True,True,False,False,False,True],[True,True,True,True,True,True],[True,True,False,False,True,True]],[[False,False,False,True,False,True],[False,True,True,False,True,True],[False,True,False,False,True,False],[False,True,True,True,False,True],[False,False,False,False,False,True],[True,False,True,True,True,True]],[[True,True,True,False,False,False],[True,False,True,True,False,True],[True,False,False,True,True,False],[False,False,False,False,False,True],[True,False,True,True,True,True],[False,False,False,True,True,False]],[[False,False,False,True,False,True],[False,True,True,False,False,True],[True,False,True,True,False,True],[False,False,True,False,True,True],[True,True,True,True,True,False],[False,True,True,False,False,True]],[[True,True,False,True,True,True],[False,False,True,True,False,False],[False,False,False,False,False,True],[True,True,False,False,True,True],[True,True,False,False,True,True],[True,True,False,True,False,True]],[[False,False,False,False,True,False],[False,True,False,False,True,True],[True,False,False,True,True,True],[True,False,False,True,False,False],[False,True,True,False,False,True],[False,True,True,False,True,False]],[[False,True,True,False,True,True],[True,False,True,False,True,False],[True,False,False,False,False,False],[False,False,True,True,True,False],[False,True,True,True,True,False],[True,True,True,False,True,False]]], dtype = "bool")#candidate|4622|(15, 6, 6)|const|bool
var_4623 = relay.var("var_4623", dtype = "bool", shape = (15, 6, 6))#candidate|4623|(15, 6, 6)|var|bool
bop_4624 = relay.logical_or(const_4622.astype('bool'), relay.reshape(var_4623.astype('bool'), relay.shape_of(const_4622))) # shape=(15, 6, 6)
uop_4633 = relay.asin(var_4623.astype('float64')) # shape=(15, 6, 6)
bop_4642 = relay.floor_mod(const_4622.astype('float64'), relay.reshape(bop_4624.astype('float64'), relay.shape_of(const_4622))) # shape=(15, 6, 6)
func_1257_call = mod.get_global_var('func_1257')
func_1261_call = mutated_mod.get_global_var('func_1261')
var_4659 = relay.var("var_4659", dtype = "uint64", shape = (3120,))#candidate|4659|(3120,)|var|uint64
call_4658 = relay.TupleGetItem(func_1257_call(relay.reshape(var_4659.astype('uint64'), [16, 15, 13]), relay.reshape(var_4659.astype('uint64'), [16, 15, 13]), ), 0)
call_4660 = relay.TupleGetItem(func_1261_call(relay.reshape(var_4659.astype('uint64'), [16, 15, 13]), relay.reshape(var_4659.astype('uint64'), [16, 15, 13]), ), 0)
func_2199_call = mod.get_global_var('func_2199')
func_2202_call = mutated_mod.get_global_var('func_2202')
const_4699 = relay.const([-7,6,-4,3,6,4,-8,-5,7,1,10,4,-6,2,4,2,-8,1,5,-2,9,-4,-5,2,-8,-9,-10,4,7,-9,7,-2,-2,-7,-9,6,6,-3,-3,-4,-1,1,-7,9,-1,3,-10,3,10,-6,8,4,-6,-5,-3,-1,-4,-6,-5,5,3,-4,-4,2,-6,2,-4,7,5,-10,1,-5,-4,-7,7,-7,-9,3,9,-7,6,8,-8,-2,7,5,3,-4,-2,6,-3,2,-5,5,-10,8,4,10,2,-6,3,-8,3,1,-5,9,-9,7,-3,7,-7,-3,-2,-2,2,5,1,-2,-7,4,-10,-9,-1,7,1,1,-9,-6,7,7,-5,-5,-6,-3,-9,-3,7,2,-10,-5,-2,-8,9,4,-1,-5,3,-7,8,10,-6,-10,6,-2,-2,-9,3,7,-1,-8,-4,-3,7,-4,9,-6,-8,7,-10,-4,7,-9,9,2,7,-6,-7,7,-6,-10,-4,1,3,-10,8,7,5,6,2,-6,10,-1,1,-10,7,-4,-6,-7,-3,-6,-8,8,9,-9,-4,3,9,10,9,8,1,1,7,10,2,2,-9,7,-4,10,-3,1,-6,-3,2,3,3,5,-1,-1,9,6,6,5,-10,-8,-9,-7,10,9,1,-9,5,6,9,10,-3,-7,8,8,8,-2,-5,-9,9,10,10,-6,-3,3,-4,-1,9,-7,-1,-6,-1,5,5,2,2,6,1,-6,-8,8,2,-10,-7,-8,2,-7,-10,10,6,3,-3,-9,3,-1,-6,5,-10,9,-2,8,-10,-6,7,10,-7,1,-2,-6,-8,9,10,4,-1,-7,-3,-6,2,-7,-9,2,8,7,6,6,-2,1,-9,2,-1,2,6,9,3,4,-1,-7,2,10,9,5,2,-5,-1,2,6,6,-3,7,-8,-7,1,-9,-10,-2,-6,-2,1,1,4,5,-9,-1,3,10,3,2,5,-7,-2,-6,6,-9,7,10,-7,-1,-6,-1,-4,-4,-2,1,10,4,8,2,-10,-2,3,8,9,-8,-4,5,2,5,6,1,3,-7,7,-5,-10,-4,1,5,-1,-4,-2,5,10,7,-7,1,-6,-2,-10,10,6,-5,3,-8,4,3,2,-9,-9,8,7,-5,2,5,-6,1,8,10,7,8,-9,7,-9,4,5,2,-5,-6,-6,-6,6,6,-1,-5,-2,10,-6,-3,-3,2,2,3,-3,-2,-2,3,4,-3,-6,5,-3,-1,2,-3,2,-7,1,2,9,-7,10,10,-9,-3,1,-5,3,-5,-2,9,6,-8,6,-3,2,7,-9,-10,-9,-5,8,-9,6,5,-4,1,2,9,1,-4,-3,7,-7,-2,9,-7,9,-10,-9,4,3,5,7,5,7,3,8,2,8,-2,-3,-5,-6,-9,2,-8,9,2,9,-3,5,-6,7,-10,4,-1,-2,9,-1,-3,-2,-10,8,6,-9,2,7,9,-8,9,3,-10,6,5,8,4,2,-10,6,-6,8,-1,7,-1,10,-10,-9,2,-10,5,-6,9], dtype = "uint8")#candidate|4699|(576,)|const|uint8
call_4698 = func_2199_call(relay.reshape(const_4699.astype('uint8'), [16, 6, 6]))
call_4700 = func_2199_call(relay.reshape(const_4699.astype('uint8'), [16, 6, 6]))
bop_4702 = relay.less(uop_4633.astype('bool'), relay.reshape(bop_4624.astype('bool'), relay.shape_of(uop_4633))) # shape=(15, 6, 6)
output = relay.Tuple([bop_4642,call_4658,var_4659,call_4698,const_4699,bop_4702,])
output2 = relay.Tuple([bop_4642,call_4660,var_4659,call_4700,const_4699,bop_4702,])
func_4707 = relay.Function([var_4623,var_4659,], output)
mod['func_4707'] = func_4707
mod = relay.transform.InferType()(mod)
var_4708 = relay.var("var_4708", dtype = "bool", shape = (15, 6, 6))#candidate|4708|(15, 6, 6)|var|bool
var_4709 = relay.var("var_4709", dtype = "uint64", shape = (3120,))#candidate|4709|(3120,)|var|uint64
output = func_4707(var_4708,var_4709,)
func_4710 = relay.Function([var_4708,var_4709,], output)
mutated_mod['func_4710'] = func_4710
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4205_call = mod.get_global_var('func_4205')
func_4206_call = mutated_mod.get_global_var('func_4206')
call_4712 = relay.TupleGetItem(func_4205_call(), 0)
call_4713 = relay.TupleGetItem(func_4206_call(), 0)
var_4730 = relay.var("var_4730", dtype = "float64", shape = (2, 3, 12))#candidate|4730|(2, 3, 12)|var|float64
bop_4731 = relay.power(call_4712.astype('float32'), relay.reshape(var_4730.astype('float32'), relay.shape_of(call_4712))) # shape=(2, 3, 12)
bop_4734 = relay.power(call_4713.astype('float32'), relay.reshape(var_4730.astype('float32'), relay.shape_of(call_4713))) # shape=(2, 3, 12)
output = relay.Tuple([bop_4731,])
output2 = relay.Tuple([bop_4734,])
func_4750 = relay.Function([var_4730,], output)
mod['func_4750'] = func_4750
mod = relay.transform.InferType()(mod)
var_4751 = relay.var("var_4751", dtype = "float64", shape = (2, 3, 12))#candidate|4751|(2, 3, 12)|var|float64
output = func_4750(var_4751)
func_4752 = relay.Function([var_4751], output)
mutated_mod['func_4752'] = func_4752
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4205_call = mod.get_global_var('func_4205')
func_4206_call = mutated_mod.get_global_var('func_4206')
call_4773 = relay.TupleGetItem(func_4205_call(), 0)
call_4774 = relay.TupleGetItem(func_4206_call(), 0)
output = relay.Tuple([call_4773,])
output2 = relay.Tuple([call_4774,])
func_4781 = relay.Function([], output)
mod['func_4781'] = func_4781
mod = relay.transform.InferType()(mod)
mutated_mod['func_4781'] = func_4781
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4781_call = mutated_mod.get_global_var('func_4781')
call_4782 = func_4781_call()
output = call_4782
func_4783 = relay.Function([], output)
mutated_mod['func_4783'] = func_4783
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4781_call = mod.get_global_var('func_4781')
func_4783_call = mutated_mod.get_global_var('func_4783')
call_4798 = relay.TupleGetItem(func_4781_call(), 0)
call_4799 = relay.TupleGetItem(func_4783_call(), 0)
func_1109_call = mod.get_global_var('func_1109')
func_1113_call = mutated_mod.get_global_var('func_1113')
const_4814 = relay.const([-9,-6,4,4,-2,-10,-8,4,-5,-8,4,5,1,8,-8,-7,-10,9,-8,-6,10,7,-6,-1,7,-10,-1,9,-5,-7,7,-1,9,-3,-3,-5,6,2,2,-5,-3,10,-1,8,-5,8,-9,1,1,4,4,8,1,3,5,4,4,4,2,-1,8,-1,10,-4,-5,-4,10,-10,-6,-6,-3,-1,-6,-2,10,7,3,-5,-9,4,9,-4,4,10,9,10,-6,-10,-9,-1,8,-5,8,-5,-8,3,-9,-6,1,2,4,1,-7,4,-5,-3,5,-5,-7,-9,9,4,-9,10,10,7,8,-4,10,10,-5,8,10,-2,-2,-4,5,9,-2,-1,5,-4,7,-9,-8,-2,-2,4,4,9,-8,-8,-2,-6,-8,-5,-6,-7,1,-2,4,3,-4,6,-2,5,9,-3,-8,5,6,10,-3,5,-2,-2,-10,-10,9,-2,2,-8,-9,-4,-8,7,-1,5,4,7,-6,-4,-1,1,-2,-8,2,-7,-9,-10,-2,-2,-3,-8,-7,-5,-1,1,3,9,-7,-2,-6,-2,2,3,-10,-6,2,-2,-8,-3,-7,-8,-8,-8,7,-8,8,8,-1,-3,-4,5,-4,6,-3,-8,5,1,-6,-2,8,4,9,8,-2,2,10,1,-2,6,8,-8,-2,10,-7,-1,-2,2,8,3,1,-6,-1,-6,6,2,8,8,-8,-9,3,-1,6,8,5,6,7,8,-10,4,-8,1,4,-7,-10,-9,-8,-9,6,-10,3,7,-7,9,-3,3,-9,9,-6,8,-5,-10,-7,-1,10,-4,-9,-2,-7,-4,-4,-2,-3,-10,9,6,5,1,7,-7,-3,-10,1,9,-3,-10,1,-1,5,5,9,10,-7,8,-2,1,-5,6,-2,-7,9,3,-1,6,6,-2,5,1,-6,8,-5,1,-1,-7,5,10,-1,-4,5,-10,5,10,-7,-4,1,9,2,-7,1,7,-7,-8,8,-1,-3,-8,5,8,8,-5,5,-6,-5,1,-4,-10,7,-9,1,10,1,4,-5,-7,6,3,-5,-8,9,-4,10,-3,-3,2,2,-10,1,10,6,-10,-9,-4,9,3,-3,-2,-3,8,9,8,1,6,-1,7,-4,-2,9,5,1,-5,-7,5,-1,-3,-2,-2,10,6,-4,1,-1,9,2,-5,4,-7,-8,10,-5,10,8,4,-9,1,7,-9,6,6,4,3,5,10,2,3,-4,7,-4,-10,-5,-6,5,-9,-5,-1,10,8,1,9,9,3,2,7,-2,10,-10,-10,-4,-3,3,10,9,-9,8,-6,-9,-4,8,8,8,7,-4,10,5,-9,-1,-4,-8,1,-2,-5,-3,-3,-10,-10,10,-8,-6,4,-6,-2,9,5,10,3,2,-2,-9,-7,5,-9,7,-9,6,4,6,8,1,-3,1,2,6,-10,8,-3,-5,10,-10,4,-4,-9,-6,6,-10,8,-6,3,-4,-6,10,-7,-4,6,-8,9,3,-2,4,-6,-6,-4,-7,-4,-1,7,-10,6,-1,-7,7,3,-3,-8,-1,-1,-3,9,1,-2,4,6,4,-7,6,-6,-9,2,-3,8,7,3,4,1,-7,-10,2,4,-7,3,-2,-8,-9,2,-1,8,-10,9,4,1,-2,-2,-8,2,-7,1,-7,10,-7,10,5,-9,8,10,7,3,4,-6,2,-8,-5,10,-7,-10,5,4,7,-6,1,-4,9,8,3,-6,3,3,4,-2,4,-5,3,8,5,2,9,-4,3,4,7,-10,3,-8,7,-7,-3,1,-4,-5,-2,-6,-5,1,-6,4,4,-4,7,5,-6,-4,-5,-7,5,-1,-9,10,-9,1,-8,1,-7,1,8,8,8,-3,9,5,9,3,-3,3,-5,-1,7,5,6,-10,3,6,-1,6,8,6,-7,7,-1,6,-3,1,7,-8,3,5,7,7,2,-10,5,8,-6,-4,5,4,-6,-10,10,-6,-7,9,4,-1,-9,7,-8,8,9,-8,-3,-4,7,2,3,8,-6,-3,-3,9,5,8,10,-5,1,3,8,-2,1,-10,-9,6,5,8,-2,-10,2,8,7,10,9,-1,-1,9,7,8,-8,-3,-4,3,-9,-2,-2,-2,-4,-6,-8,-7,9,2,-7,-4,-7,-10,-10,-6,5,-10,8,7,-6,4,-9,4,-9,6,9,1,-6,8,3,3,-1,6,-6,-1,3,8,-8,-1,-9,3,6,-5,-6,-8,-4,-6,5,4,4,-8,3,-8,-8,-8,-8,6,-4,6,-1,-10,7,-2,7,-6,3,7,-9,5,-7,-6,-3,-9,-1,-8,1,-9,-3,1,-9,4,-8,-8,-7,6,-7,9,5,8,4,10,5,4,-2,-1,-1,-5,-5,7,5,7,6,-1,-3,8,-6,-3,-10,10,-1,7,5,10,-4,-3,2,10,-4,-10,-3,-4,-9,-1,-3,4,-1,5,-10,5,4,2,5,-6,6,-8,4,-7,9,3,8,-6,-8,-6,-8,4,-10,7,-10,-6,9,-7,-6,-8,-4,-8,10,-3,7,-7,-2,-6,-7,8,8,-6,-10,1,-9,4,2,6,-6,-8,-10,-7,-6,-5,-9,-2,8,3,-3,7,-3,-5,-1,-7,-2,1,2,4,-2,-2,-1,8,-2,-9,-5,-7,7,5,3,-4,-1,-8,-4,2,9,-7,-6,-10,-5,-3,5,-9,2,-10,-8,-1,-1,1,-9,-1,4,-1,-2,1,1,-8,-4,1,-10,2,-7,-6,-1,-4,-9,3,3,-6,-2,-4,2,9,6,-3,-1,6,-7,-8,9,-1,7,2,5,-8,-6,1,-2,-6,-2,-9,-4,-3,-7,-9,3,3,-3,3,-2,8,1,5,-2,4,-10,9,7,-4,4,-9,5,-8,-6,8,-10,-7,6,6,5,-3,2,8,7,2,-7,-8,-4,3,-7,-9,7,-2,7,2,8,6,1,-9,-8,-8,3,-9,6,6,-1,2,8,3,-2,7,4,9,-7,-2,7,-2,-9,7,3,9,-6,-3,7,-2,-5,-8,-2,4,3,-6,7,-3,1,2,-1,7,3,4,8,-8,2,-1,3,6,1,-6,-2,-9,-9,6], dtype = "uint64")#candidate|4814|(1152,)|const|uint64
const_4815 = relay.const([[2.112024,-7.066827,-9.536307,-5.037974,6.062478,-2.878050,9.108017,-9.964215,-1.882373,-7.478012,6.527566,2.097881,-9.553274,7.838591,-0.692437,-8.184078,3.869423,-5.511709,-6.339188,-6.626211,2.656896,1.796493,-3.656082,-8.050635,6.764072,6.060934,6.255530,-3.647806,3.963757,-2.309829,-3.730966,-2.373439,-5.828145,-8.966214,4.961735,-6.693535,4.614226,8.736801,-8.397996,-9.518877,-9.074439,-1.495340,-9.480493,2.274069,-5.668114,6.510574,0.828457,-8.878974,6.990065,-0.840696,-7.481030,9.966232,-5.864022,4.605317,4.951973,4.547839,-8.499082,5.500940,-4.480514,-9.386930,8.687264,6.893341,4.732981,-7.520934,-8.504415,7.256733,3.767770,0.743710,-2.123381,-4.303333,-4.937250,0.433308,4.197965,-5.709489,-3.699859,-6.891934,-7.556916,-0.798950,-6.530210,-2.801843,6.780102,2.495267,1.139313,-6.149469,3.797192,6.969722,-8.949715,-1.347230,8.663690,2.288276,-1.236707,1.195635,-2.689117,-8.803178,-6.033600,6.358900,1.090430,6.719168,5.650173,-4.300028,-4.813057,1.551324,-4.060578,6.477537,-4.708438,6.389151,-7.191212,5.255162,-4.946738,8.104449,3.906061,-7.699543,6.580267,5.434708,-6.670444,-4.483189,6.715576,3.566284,0.905245,1.525077,-9.139202,-0.541330,-2.922545,5.377108,-4.852802,0.036633,1.185509,-3.913990,2.174077,-6.378899,1.807608,2.548985,-7.126929,-3.345755,1.670111,7.223769,1.101317,-7.601627,3.558962,-9.976232,4.683789,2.265036,-0.103609,4.380444,9.307219,9.269300,-0.466560,3.623610,6.720236,3.874866,-0.953955,-5.488912,-1.109011,1.376031,-5.052033,8.925666,4.317861,7.499280,-9.823433,-2.859855,-2.838362,-9.619063,-5.203710,9.618737,-6.850058,-1.387702,3.283618,-8.884295,4.703155,6.699016,2.349611,6.232855,-7.574418,-4.566271,-9.750668,-6.514439],[-2.071141,0.363299,3.019161,5.829898,5.650513,-2.869592,-0.433088,0.488510,-0.124766,-9.713272,0.611214,-5.333064,-5.236395,7.698407,7.560119,5.591234,-3.441316,-3.402991,4.410167,6.006609,1.280651,9.737242,-3.707710,-3.017045,9.696877,9.188474,-9.722987,-5.905735,-7.464986,3.691555,-2.320006,-4.336403,-0.399582,-1.575896,-8.095328,-2.245972,2.017525,2.666596,-7.643100,-0.854718,-7.350075,1.956090,1.533375,8.969700,0.008618,-6.451183,9.615236,-9.268974,9.341362,2.466720,1.376237,-9.212414,4.714164,-4.621075,9.346955,-3.933209,-4.400266,-9.921861,6.316116,-4.469905,1.726073,-8.676655,1.382686,-5.095019,8.906639,-5.629238,2.323515,1.629793,-3.762528,3.684877,-1.276179,-3.638482,6.297413,8.844352,-8.922646,2.523037,-1.803331,1.508477,-6.026951,-0.706486,5.108734,-9.858568,7.013937,-5.034065,-7.717766,8.097090,3.096664,9.086462,5.940786,2.082276,-2.357910,4.987300,8.331830,-5.465286,-3.380027,7.016980,8.162987,-0.190849,-2.590259,0.075548,-7.162539,8.009678,-5.880694,-8.899826,5.327174,0.690412,-7.532224,-8.541034,1.506257,-9.292140,-4.312178,-7.395604,2.407649,-3.441265,0.774229,-4.130341,9.280113,1.869268,4.275188,5.474495,1.055231,-2.905521,7.130482,0.967166,-4.128110,-6.216579,-2.635709,-3.613083,8.086888,5.824497,-7.169774,9.490956,7.296421,3.995757,-8.054227,-0.380492,-9.960299,-9.085188,6.183435,-1.292035,4.998006,-5.525453,5.172992,1.297343,-2.858240,3.728960,9.847152,-5.185737,4.576009,7.664428,-8.815135,-1.832522,-9.089245,-1.741454,-3.120431,5.528071,9.300570,5.106371,8.901864,4.421472,9.779763,-2.405041,1.827849,-8.599799,1.607328,1.289893,9.372750,-5.658374,-2.787575,4.066171,4.124626,-2.386913,7.411858,-9.584597,-5.926136,-8.543180],[-9.447768,-6.523961,0.466650,3.778997,-0.291636,-3.295498,-4.941086,-6.650291,6.077894,2.082303,-5.352601,4.356574,-7.735647,-3.689610,6.565080,-7.643177,-4.222509,-8.317803,4.059811,-9.730615,-7.086355,4.845298,4.004346,1.322250,-7.944305,5.702425,-0.748357,-4.305223,-5.826947,5.200049,1.903945,-7.898042,4.719017,7.183082,-8.420598,-1.289684,-2.617411,4.212138,8.677295,-8.410919,7.220282,8.649423,-6.176497,-7.429010,-8.497118,-9.173164,-6.935827,6.464797,0.722031,-5.085968,-3.992075,-5.817697,7.350809,-6.864009,-3.397691,-6.002807,1.790631,2.106073,1.043373,-9.044366,-9.592422,3.937039,8.196803,-4.559974,8.918264,-6.632197,9.916600,-4.391653,-4.507032,-2.263441,8.558347,0.208660,-1.498376,-7.565778,-2.746569,6.350772,7.703517,1.695716,-0.812456,-6.873066,0.470645,8.969457,6.578708,1.523747,2.637306,4.683242,-2.300337,6.779543,9.566388,-2.534494,-5.082791,-3.789727,-2.241443,9.527544,1.165283,-6.344811,-2.226266,-1.625520,5.705780,-8.281264,8.590407,9.669911,-5.207447,-3.143534,-1.642575,3.215598,-2.905340,-2.125574,-2.625858,9.654504,5.750200,-9.486248,-6.966775,-1.896990,-3.717474,-5.935550,-7.432785,8.131259,-2.109727,-3.343547,-4.487005,1.036122,-2.543404,2.010182,6.652811,-3.534887,-6.310082,4.776166,2.590312,-9.789286,-9.815124,5.369387,-7.803746,1.324715,-7.617774,6.795396,0.713992,-8.885956,-8.418984,-8.978761,-5.440834,3.505599,8.358075,2.596957,-7.238991,-2.722111,-4.026525,0.104368,-1.938622,6.271872,-0.493661,1.904313,-7.881669,2.320801,3.792055,-9.430341,6.781431,-4.560174,-5.472819,3.387115,7.315271,7.028205,-2.233511,-0.903594,3.279645,2.374603,-9.928479,-9.410374,-8.635189,-2.203667,3.683186,-1.795134,-3.079564,-7.708155,-6.302566,0.580253],[0.352753,-3.830802,9.958761,3.342374,-2.297084,-0.983478,2.032591,8.694811,1.064960,-6.117065,4.329070,3.297449,1.829787,-1.794873,1.825406,-6.585445,8.381780,-1.797820,7.117315,2.028876,1.169993,1.110280,-7.705622,-4.701011,-1.282963,2.224307,7.713351,5.589913,-3.937846,6.015689,2.075388,-4.885747,-5.317781,5.061103,-3.579549,0.531690,-8.138921,6.165317,-2.700020,-0.057950,-4.210988,-4.972843,-2.815716,-7.111454,8.421065,6.611090,5.409192,1.987732,-0.496640,-5.485117,-3.156240,-1.667002,-5.128380,9.634065,-5.144009,3.127282,0.572456,-9.625181,1.184608,-1.540954,-7.634638,1.521003,-5.834921,7.547105,8.825416,9.099569,-0.958880,-7.073388,9.501968,9.478822,-6.778182,-3.667109,-4.997258,3.664164,-8.054600,-3.183582,9.823878,-6.214662,1.514124,9.619619,8.730546,-7.024612,-6.413650,-6.748623,-7.242538,6.445020,-0.496935,3.991611,6.124578,-2.845298,-2.965503,-7.262518,-4.850204,8.687001,7.938650,-8.241105,-8.943789,-5.816431,-2.465918,-7.821538,-9.193167,7.664484,-1.607091,4.298526,0.507316,6.011271,-7.276300,-8.879435,-1.394329,-3.061885,-4.563989,4.123213,2.557497,3.428792,-8.597490,6.392102,-3.305476,-9.564613,4.921678,-8.234510,9.096625,-5.235030,9.113959,1.242312,0.994622,1.646882,-4.342653,-8.686877,-9.128680,7.011608,5.814070,5.205242,5.275284,-5.428375,6.910983,-1.625580,-5.059943,5.433280,3.974786,-7.032373,-1.974899,-1.273242,-6.750599,5.860332,-1.148841,5.065277,4.964220,5.421584,-7.115497,0.811183,-9.954750,7.260245,-3.294031,3.015685,8.439681,-9.594191,0.070226,-4.854453,7.568683,3.505757,3.611990,-7.694713,9.871288,6.838204,7.541948,-1.222951,-9.627732,6.397590,-2.951576,-8.812243,-9.717248,5.029771,6.114734,1.604212,1.655526,1.343167]], dtype = "float64")#candidate|4815|(4, 176)|const|float64
call_4813 = relay.TupleGetItem(func_1109_call(relay.reshape(call_4798.astype('uint64'), [18, 4]), relay.reshape(const_4814.astype('uint64'), [1152,]), relay.reshape(const_4815.astype('float64'), [704,]), ), 5)
call_4816 = relay.TupleGetItem(func_1113_call(relay.reshape(call_4798.astype('uint64'), [18, 4]), relay.reshape(const_4814.astype('uint64'), [1152,]), relay.reshape(const_4815.astype('float64'), [704,]), ), 5)
uop_4831 = relay.sigmoid(const_4814.astype('float32')) # shape=(1152,)
func_891_call = mod.get_global_var('func_891')
func_893_call = mutated_mod.get_global_var('func_893')
var_4840 = relay.var("var_4840", dtype = "float64", shape = (26, 3))#candidate|4840|(26, 3)|var|float64
call_4839 = relay.TupleGetItem(func_891_call(relay.reshape(var_4840.astype('float64'), [2, 13, 3])), 0)
call_4841 = relay.TupleGetItem(func_893_call(relay.reshape(var_4840.astype('float64'), [2, 13, 3])), 0)
bop_4845 = relay.floor_divide(uop_4831.astype('float32'), relay.reshape(const_4814.astype('float32'), relay.shape_of(uop_4831))) # shape=(1152,)
output = relay.Tuple([call_4798,call_4813,const_4815,call_4839,var_4840,bop_4845,])
output2 = relay.Tuple([call_4799,call_4816,const_4815,call_4841,var_4840,bop_4845,])
func_4848 = relay.Function([var_4840,], output)
mod['func_4848'] = func_4848
mod = relay.transform.InferType()(mod)
mutated_mod['func_4848'] = func_4848
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4849 = relay.var("var_4849", dtype = "float64", shape = (26, 3))#candidate|4849|(26, 3)|var|float64
func_4848_call = mutated_mod.get_global_var('func_4848')
call_4850 = func_4848_call(var_4849)
output = call_4850
func_4851 = relay.Function([var_4849], output)
mutated_mod['func_4851'] = func_4851
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4781_call = mod.get_global_var('func_4781')
func_4783_call = mutated_mod.get_global_var('func_4783')
call_4856 = relay.TupleGetItem(func_4781_call(), 0)
call_4857 = relay.TupleGetItem(func_4783_call(), 0)
output = call_4856
output2 = call_4857
func_4861 = relay.Function([], output)
mod['func_4861'] = func_4861
mod = relay.transform.InferType()(mod)
mutated_mod['func_4861'] = func_4861
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4861_call = mutated_mod.get_global_var('func_4861')
call_4862 = func_4861_call()
output = call_4862
func_4863 = relay.Function([], output)
mutated_mod['func_4863'] = func_4863
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4781_call = mod.get_global_var('func_4781')
func_4783_call = mutated_mod.get_global_var('func_4783')
call_4887 = relay.TupleGetItem(func_4781_call(), 0)
call_4888 = relay.TupleGetItem(func_4783_call(), 0)
output = relay.Tuple([call_4887,])
output2 = relay.Tuple([call_4888,])
func_4919 = relay.Function([], output)
mod['func_4919'] = func_4919
mod = relay.transform.InferType()(mod)
output = func_4919()
func_4920 = relay.Function([], output)
mutated_mod['func_4920'] = func_4920
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4539_call = mod.get_global_var('func_4539')
func_4541_call = mutated_mod.get_global_var('func_4541')
call_5016 = relay.TupleGetItem(func_4539_call(), 0)
call_5017 = relay.TupleGetItem(func_4541_call(), 0)
func_841_call = mod.get_global_var('func_841')
func_843_call = mutated_mod.get_global_var('func_843')
const_5055 = relay.const(2, dtype = "int64")#candidate|5055|()|const|int64
call_5054 = relay.TupleGetItem(func_841_call(relay.reshape(const_5055.astype('int64'), [])), 0)
call_5056 = relay.TupleGetItem(func_843_call(relay.reshape(const_5055.astype('int64'), [])), 0)
func_733_call = mod.get_global_var('func_733')
func_736_call = mutated_mod.get_global_var('func_736')
const_5062 = relay.const([4.991986,-9.104473,4.027088,-9.054284,5.107834,-0.347523,-3.741697,4.810516,-2.399745,7.176761,-0.841221,-2.924244,-1.640725,8.369538,7.517802,3.362201,-0.866837,1.392284,5.646308,-9.683575,-2.144349,9.406320,-3.072724,-1.176952,7.267214,0.976502,-9.428563,9.133039,-4.156537,6.608013,1.440304,-0.687498,-3.876269,3.762132,-0.964194,-4.470013,-9.330526,9.996222,-2.978329,6.637058,6.876472,-9.886390,0.079852,-2.428720,-9.069619,7.190750,-5.515850,7.977175,0.936741,-9.700902,-9.210951,3.113640,3.512227,3.534156,-0.528579,9.681926,4.377930,-6.789103,-2.199549,-3.615296,-6.641086,-7.744480,-5.843433,3.707033,-9.828392,1.489245,-1.394977,7.726146,7.281643,2.507377,6.578886,-3.827146,-3.276588,8.940597,3.610839,2.486338,-0.322277,4.776127,9.380494,-6.881311,-9.801209,-4.631150,-9.600164,-0.216720,-5.798336,-9.185820,0.390360,3.249273,5.128332,-4.242638,-4.756423,-2.814277,0.535975,4.081185,-5.392669,-4.939737,9.591391,7.673058,-5.555205,-2.472873,7.884157,-7.486946,7.927605,9.690078,9.770051,1.821076,4.161656,-9.195518,1.730071,-6.136653,0.786493,6.882917,1.471761,3.416789,-6.259985,1.906339,-2.295256,-1.256276,1.686012,-7.350377,6.880653,-5.817294,0.812546,6.097789,8.644172,-6.737585,-2.180032,7.392282,-6.767372,0.507841,-3.014262,-9.939478,0.417440,-3.680719,-8.447728,6.167963,4.187200,8.032220,-9.249578,5.861900,-7.859067,-7.268699,8.495259,-7.241874,-4.132209,0.375541,-3.073012,4.828039,-5.079735,-2.541598,-9.706576,0.123464,-2.056431,-7.096416,4.950840,-8.745800,6.640427,5.747685,-1.454258,-0.254890,6.398001,-8.490544,-7.826606,9.935291,3.253584,6.707059,9.126884,4.738534,8.467629,-6.507815,-0.349346,-3.741414,-6.326024,-8.721090,-1.055111,7.607620,-8.668872,3.973182,-5.879920,-5.649817,2.755100,0.066317,-6.387417,-3.927253,1.587603,-6.090523,6.574171,7.120274,-1.594323,-3.537131,3.993327,7.534460,0.750902,-3.453793,2.087728,-7.818797,-5.350163,-6.262457,-7.866469,8.189732,2.673518,4.303747,-9.520377,-1.407514,4.609112,3.756565,6.255793,-1.509879,-2.949828,-8.790653,5.614279,-1.672269,-5.577434,-0.325754,5.946414,-6.398990,-5.055922,3.164589,9.891038,8.705895,-4.579693,4.320695,4.621894,3.730357,-7.436913,-6.317717,-0.875397,8.537306,1.393439,6.571663,1.483321,2.200689,-4.724846,0.267069,9.416194,-0.126631,4.783975,1.221003,0.141165,-7.147202,-6.201795,-4.500258,1.360023,0.598362,0.524741,1.367450,7.969723,-5.073339,6.595854,4.224326,6.034593,6.057999,1.292880,2.189798,6.002880,-7.018889,-2.998630,-7.730120,-4.223310,-6.154333,-7.957027,1.975586,2.351068,6.743216,3.163125,3.715868,-6.900833,5.461445,4.866741,6.257735,8.701326,-5.060890,-8.254489,7.993718,-1.382009,-5.739449,-3.469101,-8.310940,-1.979302,-9.256098,-9.127154,-0.212014,-7.802566,-2.308886,-0.267100,-7.336573,6.709905,-8.964237,1.168414,8.405348,0.680386,5.340081,2.424096,0.493757,5.146847,6.260545,3.331272,0.965946,3.470975,0.788881,1.623934,0.791735,-0.817774,-5.002469,-1.867558,-8.604290,8.408368,5.102788,5.672134,-7.371795,-2.506051,7.784578,5.644948,-0.978186,-3.881357,2.343605,4.380973,7.939201,-7.351455,-5.226478,0.284015,-0.251695,-1.177009,3.761227,8.009333,-7.385744,7.263613,5.490978,-2.824246,7.823039,-7.648015,-6.338880,-9.062860,1.198947,9.988661,3.700011,-5.669814,-8.435968,9.810381,5.591950,9.765154,-9.525206,4.604968,-3.440781,4.511565,-0.325883,-2.208509,-1.850543,-1.396605,6.428692,5.267513,-5.217844,-8.476793,-6.507975,-9.083067,-7.103249,6.143562,-0.510631,2.248818,7.351894,0.584188,-4.952439,-1.395551,-6.053194,-2.032810,0.939952,-1.691290,-9.696968,-4.874662,-9.204574,-4.511786,-9.975793,8.954771,-8.814871,8.936848,-2.678258,9.839864,-8.139057], dtype = "float64")#candidate|5062|(378,)|const|float64
call_5061 = relay.TupleGetItem(func_733_call(relay.reshape(const_5062.astype('float64'), [14, 9, 3]), relay.reshape(const_5062.astype('float64'), [14, 9, 3]), ), 0)
call_5063 = relay.TupleGetItem(func_736_call(relay.reshape(const_5062.astype('float64'), [14, 9, 3]), relay.reshape(const_5062.astype('float64'), [14, 9, 3]), ), 0)
func_4414_call = mod.get_global_var('func_4414')
func_4415_call = mutated_mod.get_global_var('func_4415')
call_5070 = func_4414_call()
call_5071 = func_4414_call()
func_1384_call = mod.get_global_var('func_1384')
func_1386_call = mutated_mod.get_global_var('func_1386')
const_5081 = relay.const([7.002180,-9.065653,-5.994197,4.480887,-5.492723,8.461368,-1.148948,4.292475,-1.472720,1.323575,6.194571,1.034078,-4.416116,-9.028576,-2.149852,-7.068419,7.992245,-0.534519,-9.109131,-6.392493,-3.556123,-7.336871,8.391142,1.522424,-3.908886,-4.458819,-7.782485,-3.091539,-8.164069,-0.528080,6.226529,-7.571575,6.290778,-8.613810,0.414569,6.964038,9.341702,-1.677098,9.592983,-9.593022,-8.830312,5.067690,-1.339971,5.137213,-2.550958,1.107975,-5.366089,-9.863930,0.496477,-0.262000,8.687015,-5.178449,5.495816,1.470407,9.159501,1.297339,-1.594400,-7.756073,-8.152234,-8.323353,-8.973607,-6.249081,7.824914,-5.856465,-3.351615,0.560750,-7.188428,-5.137031,-3.848920,-2.049850,9.627527,2.459093,-5.382944,-5.229921,-9.980866,3.673858,3.300923,7.172577,-2.029073,9.569521,-3.550727,8.381258,-0.836472,5.247410,0.025118,-8.346192,3.276521,2.842598,-3.197670,-5.540866,-4.304321,3.151241,9.113224,-5.160093,-3.561657,-3.907721,7.845836,-4.513949,5.694763,-9.346718,2.637979,4.644343,7.945607,2.863658,9.849266,-9.376409,4.204695,1.864416,-0.751909,6.127007,2.052233,-6.493502,0.952710,-7.494009,-2.735360,6.242160,-0.674811,-7.803070,4.342769,6.446890,4.928408,-1.340680,8.911986,8.966172,-1.529281,-4.970717,1.909157,-0.749702,8.561574,7.940330,4.403703,-8.081110,-1.354848,0.673766,-5.044368,-9.679967,-7.115336,-2.224234,-2.856541,-5.385197,-5.986150,-4.401034,1.369163,-0.271158,8.221274,-2.994081,2.436715,-4.977730,6.059059,7.182235,-3.459229,1.461867,7.539386,-2.333908,9.765676,-9.377165,-7.489350,0.547404,0.679169,-4.500164,-2.334454,1.016581,2.776509,9.422127,-3.505441,-2.746295,-1.678441,2.330994,-4.695546,7.936671,-0.180589,9.042598,-5.700803,-6.918567,9.210522,-5.579013,7.445087,8.575228,-9.600180,8.854877,9.460430,1.915379,6.934980,1.510753,3.780970,-0.560497,-4.058681,-6.187909,-3.302667,-3.200504,9.095041,6.212624,8.106032,-3.305015,4.353869,-9.222389,0.765361,-4.669191,-7.672667,-2.891323,-4.426670,-4.588201,9.429189,5.940804,9.446819,5.694242,7.078259,-7.272219,6.369958,-5.072265,-2.590242,3.149246,-9.599002,1.008599,-6.689179,-7.772723,-3.159981,4.296937,8.445734,9.542274,5.395955,-1.129574,-7.687262,1.915171,2.824325], dtype = "float64")#candidate|5081|(225,)|const|float64
call_5080 = func_1384_call(relay.reshape(const_5081.astype('float64'), [5, 3, 15]))
call_5082 = func_1384_call(relay.reshape(const_5081.astype('float64'), [5, 3, 15]))
output = relay.Tuple([call_5016,call_5054,const_5055,call_5061,const_5062,call_5070,call_5080,const_5081,])
output2 = relay.Tuple([call_5017,call_5056,const_5055,call_5063,const_5062,call_5071,call_5082,const_5081,])
func_5094 = relay.Function([], output)
mod['func_5094'] = func_5094
mod = relay.transform.InferType()(mod)
output = func_5094()
func_5095 = relay.Function([], output)
mutated_mod['func_5095'] = func_5095
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4205_call = mod.get_global_var('func_4205')
func_4206_call = mutated_mod.get_global_var('func_4206')
call_5157 = relay.TupleGetItem(func_4205_call(), 0)
call_5158 = relay.TupleGetItem(func_4206_call(), 0)
func_4205_call = mod.get_global_var('func_4205')
func_4206_call = mutated_mod.get_global_var('func_4206')
call_5217 = relay.TupleGetItem(func_4205_call(), 0)
call_5218 = relay.TupleGetItem(func_4206_call(), 0)
output = relay.Tuple([call_5157,call_5217,])
output2 = relay.Tuple([call_5158,call_5218,])
func_5220 = relay.Function([], output)
mod['func_5220'] = func_5220
mod = relay.transform.InferType()(mod)
output = func_5220()
func_5221 = relay.Function([], output)
mutated_mod['func_5221'] = func_5221
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4205_call = mod.get_global_var('func_4205')
func_4206_call = mutated_mod.get_global_var('func_4206')
call_5252 = relay.TupleGetItem(func_4205_call(), 0)
call_5253 = relay.TupleGetItem(func_4206_call(), 0)
var_5271 = relay.var("var_5271", dtype = "float64", shape = (2, 3, 12))#candidate|5271|(2, 3, 12)|var|float64
bop_5272 = relay.logical_xor(call_5252.astype('int8'), relay.reshape(var_5271.astype('int8'), relay.shape_of(call_5252))) # shape=(2, 3, 12)
bop_5275 = relay.logical_xor(call_5253.astype('int8'), relay.reshape(var_5271.astype('int8'), relay.shape_of(call_5253))) # shape=(2, 3, 12)
func_2113_call = mod.get_global_var('func_2113')
func_2116_call = mutated_mod.get_global_var('func_2116')
var_5281 = relay.var("var_5281", dtype = "float64", shape = (156,))#candidate|5281|(156,)|var|float64
var_5282 = relay.var("var_5282", dtype = "float64", shape = (378,))#candidate|5282|(378,)|var|float64
call_5280 = relay.TupleGetItem(func_2113_call(relay.reshape(var_5281.astype('float64'), [6, 2, 13]), relay.reshape(var_5282.astype('float64'), [1, 378]), ), 2)
call_5283 = relay.TupleGetItem(func_2116_call(relay.reshape(var_5281.astype('float64'), [6, 2, 13]), relay.reshape(var_5282.astype('float64'), [1, 378]), ), 2)
func_4492_call = mod.get_global_var('func_4492')
func_4495_call = mutated_mod.get_global_var('func_4495')
const_5287 = relay.const([-2,-8,5,8,-4,-4,-3,-4,-5,-4,-5,-7,-1,-10,10,4,-6,-8,6,-3,-1,1,-5,7,-6,-2,-1,-7,8,9,-1,-1,-3,8,-5,10,-7,-9,7,-4,-6,4,-9,-2,-10,-4,-1,-8,4,-6,4,-4,-8,-5,9,-10,10,-4,6,-6,6,7,-5,-2,8,7,-3,-7,5,9,-3,-1,-4,-2,3,-9,7,6,3,-8,-5,7,7,-2,5,-6,-10,-1,-4,-9,2,5,5,9,1,-1,4,6,-1,4,10,4,1,-8,-10,-1,6,2,-9,-1,10,-7,-1,6,3,-8,3,5,-7,8,-10,10,7,9,-2,-8,-4,9,-10,-7,-6,-8,-5,3,-7,-1,-2,-5,2,-6,-4,-9,9,-2,-2,4,4,-8,-4,-2,2,8,-2,-2,6,-1,4,9,-7,-4,9,-8,7,-1,9,-2,5,-4,4,3,7,2,-3,5,-1,-10,5,3,-6,-5], dtype = "uint16")#candidate|5287|(180,)|const|uint16
call_5286 = relay.TupleGetItem(func_4492_call(relay.reshape(const_5287.astype('uint16'), [180,])), 5)
call_5288 = relay.TupleGetItem(func_4495_call(relay.reshape(const_5287.astype('uint16'), [180,])), 5)
output = relay.Tuple([bop_5272,call_5280,var_5281,var_5282,call_5286,const_5287,])
output2 = relay.Tuple([bop_5275,call_5283,var_5281,var_5282,call_5288,const_5287,])
func_5296 = relay.Function([var_5271,var_5281,var_5282,], output)
mod['func_5296'] = func_5296
mod = relay.transform.InferType()(mod)
var_5297 = relay.var("var_5297", dtype = "float64", shape = (2, 3, 12))#candidate|5297|(2, 3, 12)|var|float64
var_5298 = relay.var("var_5298", dtype = "float64", shape = (156,))#candidate|5298|(156,)|var|float64
var_5299 = relay.var("var_5299", dtype = "float64", shape = (378,))#candidate|5299|(378,)|var|float64
output = func_5296(var_5297,var_5298,var_5299,)
func_5300 = relay.Function([var_5297,var_5298,var_5299,], output)
mutated_mod['func_5300'] = func_5300
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4414_call = mod.get_global_var('func_4414')
func_4415_call = mutated_mod.get_global_var('func_4415')
call_5302 = func_4414_call()
call_5303 = func_4414_call()
var_5315 = relay.var("var_5315", dtype = "float64", shape = (2, 3, 12))#candidate|5315|(2, 3, 12)|var|float64
bop_5316 = relay.greater(call_5302.astype('bool'), relay.reshape(var_5315.astype('bool'), relay.shape_of(call_5302))) # shape=(2, 3, 12)
bop_5319 = relay.greater(call_5303.astype('bool'), relay.reshape(var_5315.astype('bool'), relay.shape_of(call_5303))) # shape=(2, 3, 12)
output = relay.Tuple([bop_5316,])
output2 = relay.Tuple([bop_5319,])
func_5321 = relay.Function([var_5315,], output)
mod['func_5321'] = func_5321
mod = relay.transform.InferType()(mod)
mutated_mod['func_5321'] = func_5321
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5322 = relay.var("var_5322", dtype = "float64", shape = (2, 3, 12))#candidate|5322|(2, 3, 12)|var|float64
func_5321_call = mutated_mod.get_global_var('func_5321')
call_5323 = func_5321_call(var_5322)
output = call_5323
func_5324 = relay.Function([var_5322], output)
mutated_mod['func_5324'] = func_5324
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4205_call = mod.get_global_var('func_4205')
func_4206_call = mutated_mod.get_global_var('func_4206')
call_5380 = relay.TupleGetItem(func_4205_call(), 0)
call_5381 = relay.TupleGetItem(func_4206_call(), 0)
output = call_5380
output2 = call_5381
func_5385 = relay.Function([], output)
mod['func_5385'] = func_5385
mod = relay.transform.InferType()(mod)
output = func_5385()
func_5386 = relay.Function([], output)
mutated_mod['func_5386'] = func_5386
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5385_call = mod.get_global_var('func_5385')
func_5386_call = mutated_mod.get_global_var('func_5386')
call_5401 = func_5385_call()
call_5402 = func_5385_call()
func_661_call = mod.get_global_var('func_661')
func_664_call = mutated_mod.get_global_var('func_664')
const_5415 = relay.const([2.647744,-5.814557,-1.440087,8.090866,-4.546353,-1.142328,-5.820020,-4.925271,1.416432,-0.050864,1.230848,7.068933,-7.591446,-6.080528,-8.955964,-0.352816,-8.832334,-8.682460,0.294378,-8.801673,9.200196,5.061270,-2.666302,-6.645269,-3.426254,7.090035,5.700909,7.012897,3.915862,1.224333,-7.276592,-4.918590,-2.366228,6.056676,-3.745897,-5.462934,-9.069047,8.506814,0.145543,9.960462,-3.141959,6.881351,4.591425,5.181089,1.095432,-3.831438,-1.757779,-2.617299,7.551875,-9.974250,-9.051513,-9.913043,-8.411830,3.397537,9.523751,1.468082,-3.829217,7.271692,-1.754777,-2.351777,-4.916001,0.649970,3.963098,4.202149], dtype = "float64")#candidate|5415|(64,)|const|float64
call_5414 = relay.TupleGetItem(func_661_call(relay.reshape(const_5415.astype('float64'), [2, 16, 2])), 0)
call_5416 = relay.TupleGetItem(func_664_call(relay.reshape(const_5415.astype('float64'), [2, 16, 2])), 0)
func_3967_call = mod.get_global_var('func_3967')
func_3970_call = mutated_mod.get_global_var('func_3970')
var_5427 = relay.var("var_5427", dtype = "float64", shape = ())#candidate|5427|()|var|float64
const_5428 = relay.const([[-2.681249],[-6.087669],[-4.412003],[-5.261935],[-9.752551],[9.620005],[-6.630609],[8.363460],[9.886408],[4.149962],[0.427555],[7.580225],[6.369083],[-3.922085],[7.394187],[2.910349],[8.468013],[1.689705],[-7.902459],[-5.930708],[8.600995],[-9.076847],[-8.904695],[-7.204257],[-0.363592],[9.366013],[3.112189],[7.334990],[0.939460],[-4.372830],[-0.481575],[4.884249],[-1.279131],[-9.199739],[-4.535214],[6.944055],[-4.460081],[-6.107542],[8.352853],[5.736452],[-8.281851],[3.065490],[8.835685],[5.778444],[-1.421056],[-0.074165],[0.883290],[-1.351357],[-8.743535],[9.330937],[4.039622],[-0.964206],[-8.927986],[-5.548072],[0.848749],[0.539600],[0.977194],[5.986443],[-4.658218],[5.959673],[3.712366],[7.340245],[6.158165],[-0.946285],[-0.346839],[0.284226],[-2.457066],[-9.048313],[-6.841520],[-3.595545],[-3.382006],[7.248986],[-3.331183],[-4.071069],[5.784719],[-4.746844],[6.625743],[-9.760812],[5.002778],[-6.966228],[-6.727908],[-7.459840],[1.321878],[2.180708],[4.768875],[7.198478],[-9.007844],[7.633289],[-3.898831],[3.562523],[-7.390833],[-1.667612],[4.388708],[-8.657040],[4.431794],[5.366660],[-1.505043],[-2.487492],[-8.371823],[5.865844],[0.757747],[4.014572],[-7.404660],[-6.839942],[-3.845799],[-8.698224],[9.169904],[7.324213],[3.413470],[-2.569509],[-2.198122],[-4.721591],[2.940465],[5.531009],[7.798830],[8.876325],[6.101836],[-1.361465],[-5.857007],[-6.116503],[-8.903082],[5.381003],[0.715348],[-3.829489],[-8.848455],[3.863895],[-8.555538],[-5.327389],[-1.788039],[7.643861],[-9.781974],[-6.504828],[6.044866],[4.935668],[-0.448124],[1.004293],[5.564645],[-7.214179],[7.516511],[8.648166],[4.921410],[-6.535344],[1.297909],[6.538571],[-7.068672],[0.945414],[-7.361362],[5.150812],[-1.150047],[1.373106],[-4.850868],[4.325483],[9.307698],[6.242624],[-0.557778],[-7.065206],[3.597686],[-4.455494],[0.376357],[0.964535],[-4.645149],[5.321515],[-5.408952],[7.897607],[8.559076],[1.424212],[0.561678],[3.894965],[8.681291],[5.124276],[-5.608239],[7.445472],[-6.100384],[-6.085417],[-0.993464],[-5.990031],[-5.663227],[7.918479],[-2.434107],[7.173862],[3.378450],[5.987288],[0.721526],[5.272297],[8.773004],[-4.440738],[-2.421189],[-4.257119],[3.447276],[3.873211],[-3.613272],[0.072525],[9.052350],[7.898361],[8.951876],[5.374229],[-8.568188],[8.717239],[-8.750226],[-1.300437],[6.169687],[2.223826],[-0.481547],[-7.503389],[-3.545733],[8.118988],[9.527839],[0.601814],[3.499641],[-9.190064],[1.129331],[1.526952],[3.338582],[3.895308],[4.706646],[5.318162],[-8.673755],[7.005458],[-8.758796],[4.581697],[0.496459],[9.167840],[6.548302],[0.618629],[-4.220247],[9.993683],[9.771303],[1.249291],[1.269044],[-5.974708],[-0.430867],[8.136705],[-5.326532],[8.060810],[-9.641131],[8.516594],[-4.151086],[5.023065],[9.240057],[-7.681597],[-5.069489],[8.915336],[5.384477],[-4.372423],[9.656337],[2.292819],[1.303636],[9.434725],[7.257578],[-4.294460],[7.059673],[7.913674],[3.985736],[9.731810],[0.335797],[-1.609437],[9.319919],[-4.472669],[-9.172015],[3.341559],[8.039889],[2.546204],[9.593440],[4.992105],[3.587815],[-6.079648],[9.970776],[-1.040225],[-6.159586],[-6.221860],[-7.286593],[-5.591549],[-6.610528],[-4.848487],[5.109839],[2.499357],[-6.135013],[2.060314],[5.743498],[0.484508],[8.058995],[8.399415],[1.665331],[2.190544],[1.852616],[-1.198699],[-5.905264],[6.516182],[4.660498],[0.054953],[0.357360],[1.282760],[8.387936],[9.698173],[2.296275],[2.689152],[-6.445097],[-8.217525],[7.709459],[-8.882689],[6.855609],[-5.410308],[8.238891],[-0.529082],[6.616321],[4.281204],[-7.340520],[-1.640522],[-9.048864],[-3.616923],[-1.431131],[-4.087106],[-5.843499],[6.857247],[-7.817322],[-4.332105],[-0.497192],[9.851908],[-7.104515],[-8.558970],[2.648820],[-5.367017],[-5.569364],[8.020411],[-0.256810],[5.296538],[8.425679],[-6.475047],[-7.018893],[6.916467],[2.082055],[-8.553393],[-6.413085],[2.584065],[1.696821],[-9.041968],[2.978250],[2.916634],[-9.558779],[-2.502114],[-1.054637],[7.093566],[2.504159],[-5.132666],[3.678102],[-3.811938],[0.012379],[-3.614022],[-2.261002],[0.331228],[4.510427],[-7.400591],[-8.895648],[7.662621],[-7.805501],[-7.788521],[4.415291],[8.523099],[0.414955],[-5.600809],[9.256413],[3.812133],[1.163369],[1.534887],[5.078090],[4.057388],[-9.631096],[5.292229],[7.295519],[8.675095],[2.486736],[0.113266],[-7.172863],[6.445351],[-1.038113],[-5.596596],[1.418163],[-4.426262],[-9.963286],[-3.683030],[-6.670245],[-9.309909],[-9.360175],[-2.751384],[-3.245517],[7.706356],[7.697996],[-2.888987],[4.826075],[7.453866],[9.279506],[-6.833703],[9.634778],[7.495885],[-0.905718],[3.942619],[-3.230092],[8.330612],[0.734420],[-8.560844],[-9.291162],[6.409421],[-1.474591],[7.193732],[-3.640219],[1.204769],[-1.784728],[-5.995609],[4.232678],[0.910020],[5.436259],[-6.120364],[9.214290],[-0.024719],[9.391575],[-0.794944],[0.492011],[6.407442],[-3.538819],[3.309594],[0.231497],[-1.448599],[-7.290036],[3.940482],[3.072908],[9.521889],[4.258429],[-1.348291],[-5.369464],[-2.293814],[1.086260],[6.764715],[-6.739606],[3.407177],[0.900737],[8.697738],[5.448147],[-4.861827],[-1.157534],[6.780014],[0.516249],[5.806644],[7.152151],[3.713469],[-8.586424],[9.383634],[-1.989262],[-8.312723],[-9.563925],[9.608256],[3.068340],[-4.855126],[8.543712],[-0.211266],[0.674855],[4.244463],[4.991986],[5.546319],[-8.630163],[-0.708735],[-7.279221],[-8.985482],[-4.778749],[-5.593338],[-8.593852],[-7.679058],[-8.641862],[9.267807],[9.524629],[-3.905152],[9.629727],[8.206574],[-5.941761],[2.293355],[7.887980],[7.889221],[-1.502349],[8.748892],[5.780734],[2.766372],[9.397977],[7.551400],[-2.013911],[9.012782],[-9.574409],[-7.555900],[6.607510],[-7.359547],[9.477224],[-8.451201],[8.988972],[-3.397111],[-7.155647],[-8.374038],[4.620036],[0.004286],[1.670175],[4.785184],[8.902834],[-2.085885],[-1.627374],[-4.353266],[-9.780789],[0.475137],[-2.102693],[7.896391],[0.042778],[4.206470],[6.617085],[0.167628],[3.448706],[1.571440],[8.191467],[5.820903],[-7.138431],[2.259515],[-7.442823],[-2.611424],[-4.462370],[-1.294929]], dtype = "float64")#candidate|5428|(520, 1)|const|float64
call_5426 = relay.TupleGetItem(func_3967_call(relay.reshape(var_5427.astype('float64'), []), relay.reshape(const_5428.astype('float64'), [4, 13, 10]), ), 1)
call_5429 = relay.TupleGetItem(func_3970_call(relay.reshape(var_5427.astype('float64'), []), relay.reshape(const_5428.astype('float64'), [4, 13, 10]), ), 1)
var_5432 = relay.var("var_5432", dtype = "float64", shape = (520, 9))#candidate|5432|(520, 9)|var|float64
bop_5433 = relay.less_equal(const_5428.astype('bool'), var_5432.astype('bool')) # shape=(520, 9)
func_434_call = mod.get_global_var('func_434')
func_440_call = mutated_mod.get_global_var('func_440')
var_5442 = relay.var("var_5442", dtype = "float32", shape = (240,))#candidate|5442|(240,)|var|float32
var_5443 = relay.var("var_5443", dtype = "float64", shape = (704,))#candidate|5443|(704,)|var|float64
call_5441 = relay.TupleGetItem(func_434_call(relay.reshape(var_5427.astype('float32'), []), relay.reshape(var_5442.astype('float32'), [15, 2, 8]), relay.reshape(var_5443.astype('float64'), [16, 11, 4]), relay.reshape(call_5401.astype('uint64'), [72,]), ), 4)
call_5444 = relay.TupleGetItem(func_440_call(relay.reshape(var_5427.astype('float32'), []), relay.reshape(var_5442.astype('float32'), [15, 2, 8]), relay.reshape(var_5443.astype('float64'), [16, 11, 4]), relay.reshape(call_5401.astype('uint64'), [72,]), ), 4)
uop_5447 = relay.sin(var_5432.astype('float64')) # shape=(520, 9)
func_2199_call = mod.get_global_var('func_2199')
func_2202_call = mutated_mod.get_global_var('func_2202')
const_5454 = relay.const([[-7,9,10,10,-2,-5,10,-8,-4,6,4,10,-10,3,-4,-5,6,10,-10,2,-9,6,5,-2,6,-8,-7,-8,9,-5,6,3,-4,10,5,-5,-8,-6,8,3,6,-4,-2,-2,-8,3,4,8,10,3,9,-2,10,2,-7,-2,6,6,2,8,-2,4,10,-8,-9,8,9,-4,9,7,-9,-9,-6,-3,-2,8,4,3,-5,8,2,-1,7,9,9,4,-6,-3,7,-3,-6,6,-5,6,2,4,-2,-4,-8,7,-9,-5,3,9,3,10,3,1,-4,9,-3,-9,-8,3,6,-5,-10,-1,-8,2,2,-1,7,4,9,9,-6,6,-1,-10,-1,-1,-5,6,3,-5,2,-10,7,4,5,9,-4,-5,-6,-2,-10,-1,-5,8,-7,-3,-10,1,4,5,-1,-3,9,-9,-3,-1,-6,-9,9,1,2,-8,4,4,-5,1,5,-10,-2,-9,-2,7,5,8,-3,2,2,2,1,8,-6,3,-1,-6,-4,7,7,3,-1,-6,10,2,9,-10,9,-8,6,-6,4,9,7,5,1,-6,9,-7,-1,2,4,-2,-1,9,2,4,9,6,-1,-2,9,5,9,6,2,9,2,-10,-2,8,-6,9,-8,-1,-8,-1,10,-2,9,-8,7,-8,3,-10,9,-8,-2,2,4,1,8,-6,10,-7,9,10,7,5,-8,-4,4,-3,8,8,-1,-3,-1,-7,-8,-9,-4,-5,1,-10,4,7,5,-6,-7,5,3,7,7,-8,10,4,-10,-4,8,9,7,9,8,-5,2,-3,5,3,-5,7,-8,-9,9,-7,-9,-8,-2,8,-4,5,2,1,9,9,2,-9,-8,-9,4,-5,-4,-9,2,8,-10,-10,-10,-10,-4,3,7,-6,-4,4,-3,-3,4,3,1,1,-4,-6,3,-3,6,-3,-2,10,6,-8,-6,5,-4,5,-2,9,-1,-10,4,1,3,-5,-7,-3,-2,3,1,-8,-8,2,-1,-6,7,-7,9,-3,6,-7,4,5,10,-3,-7,8,6,-5,-3,9,5,3,6,8,3,-4,-5,2,-8,-10,8,10,8,-10,6,-10,-7,-7,-6,-6,10,7,-10,5,-4,1,-3,-5,-6,-1,-4,3,4,8,-5,-1,4,-2,-7,-10,-2,-4,-4,3,3,10,4,1,-3,10,-3,5,-8,-2,4,7,-7,-10,-7,-8,-8,8,-2,-2,9,-3,2,2,4,7,7,5,-3,4,-7,-10,9,-9,-10,7,2,4,7,5,9,1,-6,-2,1,-10,-8,-7,10,-9,-6,10,6,1,-9,9,10,5,-8,6,-5,-2,-7,-10,-3,-9,-5,7,2,-7,8,-8,5,6,-4,-5,-7,10,3,2,8,7,10,-5,5,3,7,10,9,-7,8,-10,6,8,-1,-9,2,4,-1,-4,4,-8,1,5,5,10,4,8,-3,1,-9,-7,-8,2,-4,6,4,-9,3,4,7,-1,8,-1,8,-7,4,-9,-6,2,9,-6,-1,9,-10,-1,-1,-8,-4,1]], dtype = "uint8")#candidate|5454|(1, 576)|const|uint8
call_5453 = func_2199_call(relay.reshape(const_5454.astype('uint8'), [16, 6, 6]))
call_5455 = func_2199_call(relay.reshape(const_5454.astype('uint8'), [16, 6, 6]))
uop_5457 = relay.log10(call_5426.astype('float64')) # shape=(4, 13, 10)
uop_5459 = relay.log10(call_5429.astype('float64')) # shape=(4, 13, 10)
func_4414_call = mod.get_global_var('func_4414')
func_4415_call = mutated_mod.get_global_var('func_4415')
call_5468 = func_4414_call()
call_5469 = func_4414_call()
output = relay.Tuple([call_5401,call_5414,const_5415,var_5427,bop_5433,call_5441,var_5442,var_5443,uop_5447,call_5453,const_5454,uop_5457,call_5468,])
output2 = relay.Tuple([call_5402,call_5416,const_5415,var_5427,bop_5433,call_5444,var_5442,var_5443,uop_5447,call_5455,const_5454,uop_5459,call_5469,])
func_5480 = relay.Function([var_5427,var_5432,var_5442,var_5443,], output)
mod['func_5480'] = func_5480
mod = relay.transform.InferType()(mod)
var_5481 = relay.var("var_5481", dtype = "float64", shape = ())#candidate|5481|()|var|float64
var_5482 = relay.var("var_5482", dtype = "float64", shape = (520, 9))#candidate|5482|(520, 9)|var|float64
var_5483 = relay.var("var_5483", dtype = "float32", shape = (240,))#candidate|5483|(240,)|var|float32
var_5484 = relay.var("var_5484", dtype = "float64", shape = (704,))#candidate|5484|(704,)|var|float64
output = func_5480(var_5481,var_5482,var_5483,var_5484,)
func_5485 = relay.Function([var_5481,var_5482,var_5483,var_5484,], output)
mutated_mod['func_5485'] = func_5485
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4861_call = mod.get_global_var('func_4861')
func_4863_call = mutated_mod.get_global_var('func_4863')
call_5495 = func_4861_call()
call_5496 = func_4861_call()
output = relay.Tuple([call_5495,])
output2 = relay.Tuple([call_5496,])
func_5498 = relay.Function([], output)
mod['func_5498'] = func_5498
mod = relay.transform.InferType()(mod)
output = func_5498()
func_5499 = relay.Function([], output)
mutated_mod['func_5499'] = func_5499
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5513 = relay.var("var_5513", dtype = "float64", shape = (12, 5, 1))#candidate|5513|(12, 5, 1)|var|float64
uop_5514 = relay.log10(var_5513.astype('float64')) # shape=(12, 5, 1)
output = uop_5514
output2 = uop_5514
func_5526 = relay.Function([var_5513,], output)
mod['func_5526'] = func_5526
mod = relay.transform.InferType()(mod)
mutated_mod['func_5526'] = func_5526
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5527 = relay.var("var_5527", dtype = "float64", shape = (12, 5, 1))#candidate|5527|(12, 5, 1)|var|float64
func_5526_call = mutated_mod.get_global_var('func_5526')
call_5528 = func_5526_call(var_5527)
output = call_5528
func_5529 = relay.Function([var_5527], output)
mutated_mod['func_5529'] = func_5529
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4539_call = mod.get_global_var('func_4539')
func_4541_call = mutated_mod.get_global_var('func_4541')
call_5531 = relay.TupleGetItem(func_4539_call(), 0)
call_5532 = relay.TupleGetItem(func_4541_call(), 0)
output = relay.Tuple([call_5531,])
output2 = relay.Tuple([call_5532,])
func_5541 = relay.Function([], output)
mod['func_5541'] = func_5541
mod = relay.transform.InferType()(mod)
output = func_5541()
func_5542 = relay.Function([], output)
mutated_mod['func_5542'] = func_5542
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4414_call = mod.get_global_var('func_4414')
func_4415_call = mutated_mod.get_global_var('func_4415')
call_5552 = func_4414_call()
call_5553 = func_4414_call()
func_2891_call = mod.get_global_var('func_2891')
func_2894_call = mutated_mod.get_global_var('func_2894')
const_5570 = relay.const([-3.781285,2.286139,-2.964497,-0.462135,-6.557462,-8.237505,-7.678226,-2.707143,5.038861,0.107035,-0.760953,0.488832,3.226735,5.215406,-2.457180,-7.321199,-9.567611,2.473117,-9.927544,9.224575,-7.029792,2.040796,-8.962257,4.337103,1.362933,-6.669917,8.379912,2.496234,6.215238,3.756308,1.696871,4.489681,2.769691,-6.304769,-1.351402,-2.908143,3.550420,-9.743910,8.699189,6.017022,-1.590000,-8.928915,-2.678384,1.912375,-8.423970,6.918104,-0.407015,7.877158,7.078695,8.541344,-3.018596,2.687459,2.703703,9.145914,9.811072,3.637640,-8.430977,9.037801,-8.742319,-9.477045,0.458306,-5.066103,-3.784843,4.729578,4.007109,-7.720595,-3.538865,9.179830,9.703197,9.992394,-9.439242,-7.581099,-6.820416,4.843267,-1.244749,-4.253629,3.559939,1.886503,-3.452214,-0.972076,6.343347,9.496525,-0.913969,-1.543231,0.942933,-4.654523,-1.844992,-1.415380,7.729600,3.434144,-1.297980,1.263547,-8.646623,6.117579,-7.252944,-7.297921,-1.884960,8.435223,1.553986,-6.160162,5.592618,-8.233221,-7.180783,4.825635,-4.086283,4.590853,-8.486949,-2.748987,-2.437474,9.549106,0.013727,-7.894711,-3.285594,-7.270209,3.331754,-2.718723,-7.124432,4.188620,-1.494866,-1.686391,7.923416,0.020390,-1.586210,3.509755,0.264551,5.632120,-3.169202,4.003691,-0.115765,-3.221989,-3.564348,-3.464745,5.835171,2.322305,-6.380007,-0.413172,-2.955650,7.956911,-6.407856,6.686086,-9.724882,-4.341431,-9.049397,1.725629,-0.434598,9.951003,-5.397162,7.375871,2.520693,3.283693,-2.819604,0.202257,3.781404,7.913400,7.239611,-4.634030,-5.148974,1.620642,-9.082191,5.656925,-7.947095,8.271240,-4.420824,8.265091,-0.731000,-1.999629,-8.878983,9.175748,-5.223559,5.870119,6.135397,6.536303,3.207534,-3.814645,4.693342,-0.540980,-7.400155,3.378999,-3.602668,-5.206889,6.278830,1.372728,2.863857,-1.078741,0.546305,8.258374,5.122828,-0.115243,2.074032,-3.333233,-9.175878,7.396235,-3.735327,-6.342322,1.040492,8.248618,9.178800,-6.533351,2.209958,-3.697426,6.654759,0.941429,7.063464,3.796495,7.403451,9.790060,-0.759791,-2.794932,6.044361,0.617994,-2.051732,-3.661227,0.772854,-9.193075,4.411536,2.124968,-1.109910,7.199037,5.081572,2.035651,-9.175295,-7.001171,6.417724,9.630741,2.735299,6.324232,-5.467129,1.555570,-9.126195,-5.902377,4.919871,-4.513279,4.147695,2.132389,-3.334484,9.467199,7.123449,0.340628,-7.437348,-3.776043,4.012104,0.864696,9.875896,2.108658,-3.420184,7.793327,-2.047273,-8.437235,0.394632,-5.830569,-9.959016,-7.730322,8.442529,-4.587516,-1.600833,-6.620243,-6.177054,2.276892,-1.693465,8.137455,0.818657,-0.492111,5.787248,5.369761,-3.915830,-5.630094,4.695512,2.766824,4.344763,-1.327353,-7.534480,4.422302,6.195450,-2.515861,-7.377318,-0.664713,-4.202988,9.364921,8.711588,-4.601100,-4.403051,-9.763286,6.920924,-6.781651,8.944682,-2.789025,8.407784,-1.729729,1.730992,8.791629,3.467821,2.772672,-2.591126,8.366378,7.615365,-6.461907,-0.999411,7.453540,-9.013195,-4.115115,-3.308255,5.151531,3.288057,-8.848436,-2.173656,-1.009703,-7.744678,2.362514,-0.248305,-0.888493,-6.943999,3.804247,-4.485395,-6.805308,-4.079465,-4.606861,5.115378,3.543467,-1.612719,6.394525,8.677463,-0.661404,0.409497,-2.940619,-7.263492,1.359017,2.063290,0.113538,3.999173,-8.396783,5.489735,6.111874,-9.258399,9.372687,-3.257212,0.133255,-2.472062,2.610030,4.950932,4.550376,7.256663,-1.506632,5.861928,-4.324205,5.899543,-2.754162,4.317460,-7.360366,-8.548484,-0.427328,-0.271189,-6.567053,2.058316,9.136749,-5.246801,-4.637816,3.934640,-5.764245,0.788414,-5.490448,-5.671983,3.699627,-1.950409,2.276269,9.956199,4.382631,-7.697522,-9.765728,-9.276057,-0.828109,-6.237509,-4.968739,-3.227025,-9.737662,6.965229,-6.534810,8.002476,1.510761,0.854744,1.128940,9.295338,7.621612,-8.494562,7.547146,7.983941,3.939929,9.278965,4.050527,9.521301,6.235476,-4.131052,-2.927895,9.192825,6.286397,-1.222360,9.943690,-7.454199,9.548896,-5.764091,2.740258,3.045121,6.954784,-6.814987,-5.966090,-1.383148,-7.340776,0.024877,-3.813870,-0.261442,-0.875138,-1.962300,-3.627127,-0.970357,-4.171911,7.053230,-2.609925,-8.102763,6.900904,-9.788596,-0.283227,9.769002,-7.641828,8.747687,5.538894,-1.668912,9.701692,2.414970,6.224862,3.618278,-8.514379,7.383331,9.387929,-6.526946,-6.662813,-4.267110,4.400537,6.182031,6.590800,-8.190952,7.904580,-3.806398,-2.992061,-5.759714,7.213960,6.370575,-3.241192,-9.293927,-2.341809,-6.215002,2.835219,-5.523167,-5.003283,-5.917406,-3.362955,-4.351825,-4.408410,-2.387392,-7.104837,-6.528780,7.588031,1.495072,5.316080,6.069305,-7.421549,-1.569099,4.698572,-0.031225,1.999914,8.045864,-7.959431,0.852233,-3.262774,5.057367,-9.435465,-8.259153,6.826316,-2.369953,4.796726,-4.940085,3.849222,4.651469,5.693968,2.260397,3.328565,7.630608,-7.284603,-9.259230,-0.799288,-8.725889,7.280008,-6.270544,-7.033124,6.202810,9.034428,-9.645433,5.471324,4.735171,5.724232,9.435730,1.728368,-3.726654,7.495013,-7.237267,-1.737428,-0.069232,2.656730,-3.106252,8.526940,9.722127,-7.387012,-6.889687,3.876312,-2.053338,-1.903539,3.999323,-6.721363,9.069793,-6.041519,-5.044852,-3.139434,5.356224,2.798950,-2.263938,2.948237,0.720531,2.754449,7.583972,5.589503,6.174845,6.464009,8.361709,0.930372,5.475445,-1.216266,-4.865921,5.774033,-7.357739,-6.764886,6.142160,-9.882105,3.924913,-1.694933,3.491420,-6.465095,8.775286,2.268187,-5.174418,-6.344578,5.492699,3.860529,0.053830,2.808033,0.581342,-8.670949,8.488722,-2.814660,-3.841753,-2.524947,-9.180640,6.642570,-4.240845,1.055616,9.451706,9.815640,-1.315852,-5.849936,9.764153,-2.316789,5.775786,0.181733,5.714355,9.112951,1.930749,9.661665,2.838559,2.334101,-0.322283,-9.257210,-7.653455,-4.193450,-9.679827,3.722624,-1.844313,-7.611013,-9.851400,-2.510858,4.416264,-5.584637,5.687332,2.446228,-5.323606,6.928312,8.756168,-8.022080,0.318005,-6.815883,7.493314,1.359188,8.230001,-8.581536,6.156126,-3.024559,-6.985095,2.211281,-9.398868,-6.282629,-1.306012,2.740120,8.906060,3.318658,-9.119509,-5.476951,3.073794,4.823135,-3.335749,1.453800,8.341892,-7.242900,-8.926715,9.347283,-8.229797,7.763113,6.045830,-6.075400,-7.710973,2.720915,-7.503113,-7.197460,3.957063,-1.021292,1.061383,-9.851764,7.655680,1.384717,-0.831069,7.134361,-8.850266,1.793462,2.048436,1.748540,-2.807360,0.287514,-4.448276,-9.547368,8.827291,0.853229,-7.493245,7.005091,5.223810,1.578511,-4.065769,-9.846600,7.673926,-9.474237,-7.588670,-0.355668,8.821779,3.701680,-6.648522,5.892746,-3.591591,-4.816987,-4.338253,7.299027,-9.950727,-1.634465,6.134458,-5.415120,-8.364806,7.937822,-5.092605,9.873130,1.882943,7.257211,6.816951,-5.488811,-1.729938,-9.611308,-5.643665,-4.763828,7.200935,6.388065,5.652045,3.152341,4.302212,-6.503290,8.472840,9.758299,-7.912943,-7.797733,6.537482,-2.141466,5.886818,9.505195,-1.843820,7.349897,-8.464749,-0.978887,-7.440000,4.559673,-3.747523,5.395262,-9.830949,1.311208,1.520551,-0.258636,-0.907816,-7.782666,0.924302,8.639421,9.582630,6.317749,-9.862043,-4.654575,-2.516259,-7.617969,3.703037,-2.570753,-7.881771,0.048256,8.191090,-1.369421,-1.702798,1.184757,-1.323923,7.121310,1.640557,3.529221,-8.374088,-6.399055,-7.722959,1.005736,-4.144679,5.573377,2.393404,4.388041,-4.972032,-7.000034,-2.802355,-0.510328,4.060027,4.065732,0.372280,-4.205761,-3.036246,-6.503060,5.789301,-0.187252,2.676162,-8.840793,-9.069353,4.404923,9.385962,9.121523,7.471125,3.939450,4.000944,-3.541535,0.167374,-9.139084,9.453161,-0.850791,0.520083,7.728667,-8.217329,2.583018,4.513895,4.116216,0.660089,-5.267965,6.371771,5.471239,-9.968038,4.915157,-3.524532,3.617950,-7.944478,-6.767246,3.388632,-9.493010,7.272181,-5.060898,-6.561728,9.292845,4.895744,-2.405542,4.944486,6.536776,2.201511,-4.675457,6.593186,-4.377256,6.834689,2.486317,-4.841716,6.247762,0.146292,-5.166134,1.635874,1.001043,6.261576,7.474118,7.003514,0.032231,9.782093,-0.932782,6.824839,-9.487617,3.239365,0.334373,8.011183,3.235658,6.310229,-8.063003,-2.285672,2.142239,-9.305145,-3.331191,3.531971,-1.856810,0.004366,8.960407,0.664289,-0.898326,9.335887,-8.118328,-1.555627,-8.365304,9.722144,-5.210927,-3.304893,-8.010808,0.730437,5.214299,-3.351875,7.336342,-8.735993,-8.706554,4.323119,3.966027,3.321130,0.045546,3.009838,7.132039,0.320373,-1.279236,5.391440,-7.343767,-9.477007,4.105573,8.219547,-9.676205,-6.477980,-2.818282,3.364280,-2.203658,2.498930,-2.192240,2.500825,-8.610983,-0.536840,2.785902,1.302884,-4.596328,1.871048,-5.239126,-7.126399,-9.360484,9.713369,-7.790156,-6.496216,6.907455,3.941076,9.855280,9.965421,1.461588,-9.001493,2.134015,-8.794473,1.965156,-8.978312,-5.667088,8.213008,9.001916,2.710728,8.519689,-4.405833,-0.414455,3.431947,4.914033,7.791527,-7.359653,5.279209,5.431266,8.158491,8.368389,-4.429695,-6.519156,-8.583291,-6.069394,-2.497912,-1.882459,0.432814,-0.179680,-0.238653,7.151242,-4.291163,4.152905,-0.899199,3.986824,-4.407629,7.059699,-5.730780,-2.950238,0.973568,6.470593,-7.725594,-5.850399,-2.168366,-0.766127,-9.817802,-8.916897,8.643507,-1.853133,-8.652992,4.493373,-5.589039,5.920270,4.207979,-4.404150,-2.692887,-1.119135,9.001428,-5.679528,4.846497,-9.456825,2.661948,-0.274331,-5.269071,-1.825976,-6.571729,5.607648,-3.866630,2.833240,-4.664468,-8.219723,5.604864,-6.040387,7.250728,-3.782977,7.758965,7.736826,8.518364,-5.633647,-5.244962,-4.252004,-3.452706,-4.397838,-1.284652,-9.315506,1.245549,-3.879024,3.610957,7.846123,0.196223,6.043377,-0.503208,5.844836,-8.933972,4.407793,-6.911698,8.611588,-5.713839,0.477624,-0.582905,8.150161,-9.014680,-1.162297,-8.655202,1.681374,-9.237886,7.746772,3.197717,-0.443016,-8.202442,-6.543557,-8.448905,2.899322,9.059395,4.106105,1.947939,3.698328,-1.768694,6.571000,0.522992,0.552976,-0.602294,-2.874629,1.142339,8.697670,7.952135,2.410823,-2.370318,-5.601889,1.732812,7.599131,-9.864866,5.836263,-0.514325,-9.363396,3.337854,4.765773,-8.808981,6.924588,1.309538,6.031856,-0.648317,-5.267786,6.705733,3.905325,-6.257730,4.198149,6.306190,-6.313931,-5.179492,-5.503391,-3.243474,2.187554,6.874647,-1.826138,3.677373,2.848617,-5.798293,-9.355603,-8.400944,3.229352,-5.314934,-7.290765,4.807901,-1.921544,2.332757,8.205519,-8.615641,-4.165172,7.359680,-9.352342,-3.440852,-8.742204,5.082522,-2.244691,-0.785733,5.744489,7.440986,3.814514,-2.515852,-8.814219,-2.279029,7.468277,-5.693331,-1.769558,-4.905492,-0.567584,7.034403,-6.553462,-3.805586,-3.267951,-8.878061,3.452521,9.795575,-8.560996,-7.696252,5.272698,-5.620942,-4.056089,-2.384473,-2.272274,6.844490,2.551227,2.216716,-1.661336,7.487134,5.067023,-5.410354,2.816002,3.197308,1.665023,-4.084118,-6.754570,7.935462,8.432835,6.592803,-8.296054,-7.924252,3.683071,6.881190,4.842889,7.910269,-6.138391,-3.143167,6.608384,3.884215,3.877656,-9.147654,-5.178334,-9.252689,9.162438,9.049884,6.890873,-8.154631,-7.064346,-1.801846,-8.719131,-2.458524,7.199825,-9.200445,-0.888244,2.695127,1.291660,1.519409,9.085283,0.501380,9.312449,-8.867235,-5.300352,-2.999982,9.085176,8.966411,-1.210244,-5.930177,-8.999891,-1.343507,8.058215,-7.865800,6.617183,-6.813716,-8.177436,-0.726080,7.699176,-2.419169,7.429039,-3.219422,0.651712,-6.334791,1.340095,9.155610,3.359052,-6.016997,9.952826,8.796386,-3.918699,9.733347,8.484834,-7.989836,-0.342596,-3.467132,6.336428,-4.016224,-2.710256,-7.465607,-9.168214,7.169136,-6.655383,-2.577930,0.216899,-6.653221,0.452365,-7.987886,6.786889,6.641017,4.940412,7.467012,-2.394453,3.511218,-1.759223,-8.036276,7.338784,-2.313595,5.325558,8.000128,-2.988119,-2.260766,4.691006,-1.890017,-2.784303,-9.333804,-6.793333,-3.391504,-0.534823,8.324351,-0.622564,7.236110,-9.442419,6.457414,-7.011521,-7.152498,-1.506559,-5.678207,7.007910,9.650087,7.113578,0.994497,2.874512,-4.352352,1.488499,9.240744,-8.738539,8.636605,-0.340336,-9.303200,0.569733,-7.896637,-6.486004,6.240310,9.509228,3.022706,-7.296445,-9.995256,-3.859022,7.898175,3.993881,7.505220,1.243333,-0.346455,5.791557,-7.437086,1.883452,1.843097,-8.424858,8.411565,3.723105,-0.751973,4.610955,2.387996,2.337790,4.930107,0.978539,-8.810047,1.514018,0.385660,-7.610551,2.540739,-7.527444,6.834573,0.408083,-3.605405,0.798529,-1.091506,-5.510760,-8.439998,4.812817,-3.228282,0.893769,2.212633,1.554530,6.323157,9.751339,2.354090,8.302270,-0.711964,2.906530,4.375253,0.836938,0.004489,-7.687526,6.291848,1.492476,-6.391787,6.133394,1.211255,-7.643217,-5.130676,7.040336,9.355278,-8.189545,6.519624,8.966152,-3.809432,-0.076930,-1.719379,2.634504,-5.138325,3.632520,6.547515,7.269667,2.876298,-1.518374,4.168594,3.592078,-0.571785,-1.154245,8.241280,0.291510,-9.607241,8.777901,-3.776564,-3.827741,1.813314,9.420768,-1.359869,4.774886,5.007105,5.996495,9.722372,5.574394,-6.019564,9.555766,3.094606,5.933436,-1.710578,-6.529717,-1.595522,-3.178866,-0.994791,-3.198260,-0.126989,-8.312832,9.307088,-2.097804,-9.211796,4.790175,8.651901,-6.945668,9.492007,-5.618264,-3.811650,-9.141135,9.706803,-5.986657,-6.727673,2.520338,-5.185311,-6.612430,7.277568,-5.713079,3.240844,1.545353,-7.712926,7.528908,7.474760,-7.281651,4.630936,-5.839055,8.961031,-7.988731,-3.662367,-7.534290,-0.690583,-5.506616,5.653411,1.455065,-5.821501,1.752481,3.286079,-6.556482,-9.886985,-6.207455,0.841222,-8.745626,-7.476715,4.240956,-7.274965,3.551142,-3.706200,3.849374,4.668016,-0.607667,9.175278,-4.996207,6.000954,3.181040,2.717645,5.666670,2.335978,0.861266,-9.881026,-1.213637,-6.069722,0.241093,0.199640,-6.043067,-3.194503,2.264836,-6.973538,-1.184243,-8.176580,3.373719,9.413447,8.630466,5.949050,-6.772516,4.012926,-6.340894,8.402589,-2.815857,-5.513461,0.660096,-9.565363,-5.130850,-1.591361,-4.054347,3.534923,7.778665,-0.458421,9.027640,9.698016,6.335610,-2.665682,3.997021,-7.249027,-7.640565,-0.172817,8.900830,-2.254510,-2.150726,-5.729115,-0.882212,-2.031166,-6.791434,-7.208271,-9.045811,-4.419499,-2.444838,-4.661131,-8.377076,5.417667,5.061848,-9.039072,-4.003164,4.040294,0.639096,0.681600,8.859164,9.596961,-8.966414,6.544238,-7.912000,5.777744,-7.867052,-9.711566,-4.114501,4.458831,8.426583,-3.608813,3.088613,-6.233417,4.269434,-5.856977,-9.136559,-5.686861,6.663083,2.403315,0.304497,-8.199064,-8.509346,-8.070758,-3.535250,4.876118,9.116347,-6.032757,0.787269,-2.854275,-1.382250,6.768272,-2.979567,-4.522003,7.062249,8.960013,-9.951654,-6.030267,-8.695454], dtype = "float64")#candidate|5570|(1470,)|const|float64
call_5569 = relay.TupleGetItem(func_2891_call(relay.reshape(const_5570.astype('float64'), [14, 7, 15])), 1)
call_5571 = relay.TupleGetItem(func_2894_call(relay.reshape(const_5570.astype('float64'), [14, 7, 15])), 1)
func_4861_call = mod.get_global_var('func_4861')
func_4863_call = mutated_mod.get_global_var('func_4863')
call_5595 = func_4861_call()
call_5596 = func_4861_call()
uop_5598 = relay.rsqrt(const_5570.astype('float64')) # shape=(1470,)
output = relay.Tuple([call_5552,call_5569,call_5595,uop_5598,])
output2 = relay.Tuple([call_5553,call_5571,call_5596,uop_5598,])
func_5601 = relay.Function([], output)
mod['func_5601'] = func_5601
mod = relay.transform.InferType()(mod)
mutated_mod['func_5601'] = func_5601
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5601_call = mutated_mod.get_global_var('func_5601')
call_5602 = func_5601_call()
output = call_5602
func_5603 = relay.Function([], output)
mutated_mod['func_5603'] = func_5603
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5620 = relay.var("var_5620", dtype = "float64", shape = (15, 14, 12))#candidate|5620|(15, 14, 12)|var|float64
uop_5621 = relay.log10(var_5620.astype('float64')) # shape=(15, 14, 12)
output = relay.Tuple([uop_5621,])
output2 = relay.Tuple([uop_5621,])
func_5623 = relay.Function([var_5620,], output)
mod['func_5623'] = func_5623
mod = relay.transform.InferType()(mod)
mutated_mod['func_5623'] = func_5623
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5624 = relay.var("var_5624", dtype = "float64", shape = (15, 14, 12))#candidate|5624|(15, 14, 12)|var|float64
func_5623_call = mutated_mod.get_global_var('func_5623')
call_5625 = func_5623_call(var_5624)
output = call_5625
func_5626 = relay.Function([var_5624], output)
mutated_mod['func_5626'] = func_5626
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4539_call = mod.get_global_var('func_4539')
func_4541_call = mutated_mod.get_global_var('func_4541')
call_5640 = relay.TupleGetItem(func_4539_call(), 0)
call_5641 = relay.TupleGetItem(func_4541_call(), 0)
func_1109_call = mod.get_global_var('func_1109')
func_1113_call = mutated_mod.get_global_var('func_1113')
const_5643 = relay.const([[-3,-10,5,-5,10,-1,-9,6,-10,-5,-1,-3,5,10,-2,-9,5,3,-7,-4,-8,-1,-8,1,3,1,4,3,-9,-7,3,5,-7,5,-7,-10,-6,2,-9,-1,8,8,-5,-9,8,-7,-4,-9,1,5,-5,-2,10,-6,-8,3,9,8,-6,10,5,-5,10,-9,7,8,3,-4,6,1,-7,10,10,3,4,-2,-9,-7,-10,-9,-10,-1,-6,5,-5,8,5,-9,5,-2,5,8,-2,4,-9,1,9,4,6,-9,-8,-4,-4,-9,-7,8,7,-8,8,5,5,9,-9,-9,-2,8,7,4,-7,10,6,-7,-1,5,7,7,5,7,-8,-1,-7,2,-2,-3,1,-6,1,-3,-8,-2,-8,8,4,9,2,-4,-10,-2,7,5,1,7,3,-2,8,-8,2,2,-9,-2,1,-9,6,-7,-7,3,2,-7,1,7,-5,8,1,7,-10,-1,5,-4,-1,4,-3,-5,-8,-3,-4,-8,7,8,5,8,-4,-6,10,2,3,9,-4,3,9,-10,-6,3,6,1,-1,-7,-9,6,3,1,5,-1,6,-2,10,9,-2,-9,-8,-10,-1,-5,-7,10,-8,-5,-10,-5,-10,3,-9,-6,-9,-9,-7,-7,3,-7,-3,-2,7,-6,-6,5,-8,-8,3,7,-10,10,-3,-4,-8,-9,-9,2,8,4,10,2,8,-4,5,-4,6,-10,2,7,8,-1,-5,-4,-4,9,-6,2,2,-6,9,-1,5,-6,-7,6,-7,4,-1,-4,-7,-7,-5,-10,6,3,-7,2,6,-8,9,10,-1,5,-3,5,4,-6,4,6,-1,7,1,-9,-5,10,8,-9,2,-1,5,-8,9,-9,-9,4,2,-7,9,10,2,-8,-7,1,1,8,-9,6,-10,2,-10,1,-6,-4,4,-10,3,-7,5,2,10,-5,-6,-9,-7,-8,-5,-8,-7,9,8,8,-7,2,2,1,1,1,6,4,10,10,-10,8,1,-9,-7,10,1,-8,-3,-5,3,-4,5,-2,-1,-2,-3,10,-10,-2,-5,10,4,7,7,2,9,8,-5,10,-7,6,-7,-3,-5,-5,-7,6,-5,9,-4,-1,-8,-6,-1,8,1,5,10,4,-3,6,3,3,5,-9,4,4,7,4,8,-6,-6,6,1,1,-10,3,-9,1,-8,-4,8,-4,-8,5,-10,5,-3,2,-3,-7,-10,-6,9,-4,8,1,6,5,6,7,2,-10,5,1,4,2,-8,-6,8,6,-8,3,2,7,7,-4,8,-6,-7,-2,2,-9,-4,9,-5,-7,-4,8,-8,6,8,6,5,10,6,-4,-8,3,8,-4,-9,-7,-3,8,7,-9,-3,3,-5,-9,7,-3,8,8,8,-10,-5,9,-1,1,1,5,5,2,-2,-4,6,-3,3,-2,-5,7,9,-8,-3,10,-1,7,-6,-9,-10,5,-10,2,-2,-2,5,7,-7,6,-5,5,-3,3,3,-6,-5,-1,-3,-6,-7,2,-2,-6,5,1,10,8,-2,3,-3,10,-3,-2,-4,-3,-9,-3,-5,1,2,-2,10,6,-10,-7,9,10,-8,8,1,5,6,2,-8,1,-7,-4,2,-6,10,-3,1,-1,-6,-1,8,-8,3,-6,-4,-10,-2,5,6,-4,7,5,1,-4,-5,-1,-10,-9,-8,3,6,1,10,9,9,4,1,1,7,8,-2,-7,9,-5,-3,-10,-4,6,-9,1,10,-4,-7,4,2,-6,-2,-9,8,-9,4,3,-2,-3,-4,1,-2,-7,-1,10,3,-10,-8,-8,-2,-9,-6,-4,1,-9,4,1,6,2,8,-3,-8,6,1,-2,10,-9,4,-5,3,-2,-6,2,10,1,7,-9,-6,-1,-8,2,-4,4,-8,-7,-5,-9,-1,-4,6,10,-9,8,-5,-4,4,3,-9,-8,-8,-8,-3,5,-10,8,6,1,1,3,-10,3,5,4,2,10,8,-2,-9,-8,10,6,5,3,9,-2,-5,5,-10,5,-2,2,7,2,5,-4,3,10,9,4,1,9,2,7,4,3,-7,5,-3,7,-4,-10,2,6,5,-9,7,-2,3,-2,1,2,-2,-1,3,-10,10,-5,2,-4,-3,-5,1,1,9,3,-9,-8,-4,-6,9,-6,-10,3,-4,10,2,-8,-3,8,-2,-1,-6,2,10,-6,5,-1,-3,-6,-3,-4,2,-9,3,-6,-10,6,6,7,5,6,-5,7,-1,-7,-9,-9,-5,5,-8,2,8,6,-5,1,-6,2,-3,-1,3,-1,1,5,-10,5,-1,-8,5,4,-6,-10,3,-6,-4,-3,7,1,-3,3,7,3,-4,-1,-4,-9,-2,-5,-2,1,7,2,5,-1,10,-4,-5,8,-10,10,-4,8,-9,-8,3,-8,-3,-6,4,9,-5,-2,3,-2,9,-9,-1,8,10,-1,-5,-7,9,-7,5,10,10,-10,4,-6,-4,-7,-1,-2,-10,6,-4,-4,-6,-8,8,1,-2,10,5,-8,-10,3,-9,-4,10,4,3,-8,2,10,-6,7,3,3,-5,6,-7,9,-4,4,-3,9,-8,-6,3,-10,8,4,-7,9,9,9,6,9,-3,5,1,3,-9,2,5,-8,9,4,2,-10,-1,-6,-9,7,9,-9,6,-2,2,-6,3,-10,9,-10,9,1,-1,9,1,3,9,-10,5,-9,-5,-4,10,-5,-9,-7,7,2,-4,-9,8,7,-3,2,1,4,8,-6,-1,-7,-6,-1,-4,-2,-4,3,4,-9,7,6,7,-5,6,-5,-2,7,9,-4,1,-1,-8,6,4,-10,1,2,6,2,9,-10,10,-3,-5,1,-3,-8,-7,-3,-2,-6,1,-8,3,10,9,-5,7,-9,-4,-8,-5,8,-3,-4,5,5,-8,-10,6,7,10,-8,1,-9,10,-2,4,-6,10,-9,2,1,-10,4,-3,-3,2,-9,-1,-8,4,5,-1,-2,-4,7,6,7,9,3,-2,-4,-10,-7,-9,-1,6,-8,8,7,-2,8,-10,-7,-8,-10,9,-3,5,1,7,-7,-7,-8,-7,-8,9,9,3,-10,-8,-1,4,-7]], dtype = "uint64")#candidate|5643|(1, 1152)|const|uint64
var_5644 = relay.var("var_5644", dtype = "float64", shape = (704,))#candidate|5644|(704,)|var|float64
call_5642 = relay.TupleGetItem(func_1109_call(relay.reshape(call_5640.astype('uint64'), [18, 4]), relay.reshape(const_5643.astype('uint64'), [1152,]), relay.reshape(var_5644.astype('float64'), [704,]), ), 2)
call_5645 = relay.TupleGetItem(func_1113_call(relay.reshape(call_5640.astype('uint64'), [18, 4]), relay.reshape(const_5643.astype('uint64'), [1152,]), relay.reshape(var_5644.astype('float64'), [704,]), ), 2)
uop_5651 = relay.erf(call_5642.astype('float32')) # shape=(18, 4)
uop_5653 = relay.erf(call_5645.astype('float32')) # shape=(18, 4)
bop_5669 = relay.left_shift(uop_5651.astype('int8'), relay.reshape(call_5642.astype('int8'), relay.shape_of(uop_5651))) # shape=(18, 4)
bop_5672 = relay.left_shift(uop_5653.astype('int8'), relay.reshape(call_5645.astype('int8'), relay.shape_of(uop_5653))) # shape=(18, 4)
output = relay.Tuple([call_5640,const_5643,var_5644,bop_5669,])
output2 = relay.Tuple([call_5641,const_5643,var_5644,bop_5672,])
func_5673 = relay.Function([var_5644,], output)
mod['func_5673'] = func_5673
mod = relay.transform.InferType()(mod)
mutated_mod['func_5673'] = func_5673
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5674 = relay.var("var_5674", dtype = "float64", shape = (704,))#candidate|5674|(704,)|var|float64
func_5673_call = mutated_mod.get_global_var('func_5673')
call_5675 = func_5673_call(var_5674)
output = call_5675
func_5676 = relay.Function([var_5674], output)
mutated_mod['func_5676'] = func_5676
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5220_call = mod.get_global_var('func_5220')
func_5221_call = mutated_mod.get_global_var('func_5221')
call_5724 = relay.TupleGetItem(func_5220_call(), 1)
call_5725 = relay.TupleGetItem(func_5221_call(), 1)
func_5623_call = mod.get_global_var('func_5623')
func_5626_call = mutated_mod.get_global_var('func_5626')
var_5734 = relay.var("var_5734", dtype = "float64", shape = (1260, 2))#candidate|5734|(1260, 2)|var|float64
call_5733 = relay.TupleGetItem(func_5623_call(relay.reshape(var_5734.astype('float64'), [15, 14, 12])), 0)
call_5735 = relay.TupleGetItem(func_5626_call(relay.reshape(var_5734.astype('float64'), [15, 14, 12])), 0)
func_5526_call = mod.get_global_var('func_5526')
func_5529_call = mutated_mod.get_global_var('func_5529')
const_5739 = relay.const([[-4.113615,-9.304365,9.408694,7.257204,-6.141241,9.340335,2.126498,2.395646,3.332562,-7.519122,-7.597254,1.521216,9.665086,-0.232523,7.871351,-9.229644,-4.355230,0.709920,5.416073,5.163676,1.183344,9.365109,3.283850,1.073978,1.016462,3.916220,-6.320300,1.579751,6.179433,7.307276,-8.204072,-9.673669,-1.078608,-2.462670,8.448439,7.208733,-8.384985,2.185102,4.678228,-5.862050,2.918522,4.265192,4.543336,6.789058,-8.185320,8.590900,-6.524442,-6.912778,3.599715,6.172618,-3.760242,2.474425,6.400827,-6.056524,6.902246,9.417825,-8.667625,-9.966136,8.620238,0.553878]], dtype = "float64")#candidate|5739|(1, 60)|const|float64
call_5738 = func_5526_call(relay.reshape(const_5739.astype('float64'), [12, 5, 1]))
call_5740 = func_5526_call(relay.reshape(const_5739.astype('float64'), [12, 5, 1]))
uop_5746 = relay.cos(call_5738.astype('float32')) # shape=(12, 5, 1)
uop_5748 = relay.cos(call_5740.astype('float32')) # shape=(12, 5, 1)
output = relay.Tuple([call_5724,call_5733,var_5734,const_5739,uop_5746,])
output2 = relay.Tuple([call_5725,call_5735,var_5734,const_5739,uop_5748,])
func_5750 = relay.Function([var_5734,], output)
mod['func_5750'] = func_5750
mod = relay.transform.InferType()(mod)
mutated_mod['func_5750'] = func_5750
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5751 = relay.var("var_5751", dtype = "float64", shape = (1260, 2))#candidate|5751|(1260, 2)|var|float64
func_5750_call = mutated_mod.get_global_var('func_5750')
call_5752 = func_5750_call(var_5751)
output = call_5752
func_5753 = relay.Function([var_5751], output)
mutated_mod['func_5753'] = func_5753
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5798 = relay.const([[[-6.191407,-8.996783,-1.508304,-8.885787,4.110116,4.538349,-1.949910,0.882717,3.591676,0.906219,-8.968022,4.150315],[0.525520,-2.121760,-7.256937,-2.382281,0.020699,-7.282205,-4.391852,-2.376798,9.313154,3.020736,9.387349,-2.797385],[6.723361,4.345065,2.154929,-6.935658,-3.040317,7.810554,-3.647319,3.182556,-6.074884,1.002530,-9.743989,-1.139320],[-9.385170,-8.142400,5.896915,-5.794995,-2.825318,-8.873278,2.235055,-0.495554,-1.960839,-6.839397,7.237805,-2.923598],[1.770617,-8.144220,8.176417,-5.681751,-6.517836,7.993022,1.100709,6.234068,7.415134,-8.835611,-9.556033,-4.005420],[-0.827735,1.957533,6.949709,6.698069,4.538352,-7.288173,-0.538721,-3.020519,1.742747,-4.856319,-4.511060,-6.588899]],[[-3.351913,-8.087303,7.406014,9.662726,9.064273,0.843420,-3.189676,-6.562966,1.667790,-5.690501,1.385087,-5.156039],[-4.113244,8.735022,-4.960624,9.451291,-8.979308,2.661098,-8.781882,4.036871,1.033996,-5.910663,9.129382,-7.009813],[-1.537434,9.228895,0.412520,-6.421464,-1.725244,-5.202958,-8.246235,5.187143,8.080494,-2.998740,7.292973,-5.631451],[2.908315,-3.277893,1.475236,6.605836,7.674655,3.493250,-0.734268,5.021258,3.503166,-3.616950,4.503515,7.820744],[-6.386985,-5.673374,5.282508,1.844475,-2.331106,-3.532354,-9.400237,8.525114,-7.803449,-3.493761,-7.430019,5.615729],[-1.392281,4.854057,-4.273790,-0.774116,7.810036,-8.800309,6.289688,8.020816,-8.178059,2.247516,9.710383,-1.341080]],[[7.789856,-8.511222,-4.712773,-1.646284,6.434877,-0.798171,-7.204480,4.825079,-6.828627,-1.875446,5.865256,1.509746],[8.909154,-6.750500,6.373656,-6.339622,4.919171,-6.345287,8.784852,-7.635673,9.593860,-1.953009,-7.627600,3.837404],[7.341120,-4.016938,3.322725,-2.936275,5.424706,6.405253,-8.069324,9.589188,-1.977304,7.542205,-7.541470,3.345200],[9.134546,7.214157,5.240096,-6.734138,8.063167,3.028696,-0.881071,4.339819,-5.032211,-1.759505,6.736803,-1.047128],[8.525899,4.746145,-8.977753,3.204381,-6.549749,4.115434,6.983450,-0.056516,-4.636672,2.415774,-6.206241,-8.073843],[5.267916,8.612582,4.128758,5.991017,9.966942,-8.596725,3.543925,6.225415,5.073251,1.625900,-6.757419,2.603438]],[[8.678578,9.168350,1.301112,-5.343972,-9.551177,9.727716,9.757692,4.491664,1.014564,-2.246923,4.523266,-5.681471],[-2.515804,-2.162566,-5.825924,-5.158168,-6.812324,9.542008,4.004402,2.077148,4.398978,7.167921,6.855034,1.903002],[0.411057,9.990431,-1.425650,0.766961,7.381508,7.427708,4.643891,4.192974,-1.403475,7.665350,-8.095550,7.445659],[-6.197701,-6.420028,6.344076,-7.170876,-1.238385,-2.505575,-4.338200,1.217142,1.559246,7.774399,-1.935473,-1.140216],[6.130331,7.233202,-6.525033,2.436554,6.632998,-8.155185,1.956139,6.530489,-2.831716,-6.277342,2.823095,-3.094333],[9.368248,1.173303,-7.438427,-6.278486,-4.531172,7.583241,-8.967440,1.498904,6.087516,8.415886,-2.941894,-2.363819]],[[-6.714079,3.636774,-5.058779,-7.805609,1.994619,-2.808552,6.254915,2.228176,-2.411574,0.796822,9.425796,-1.137198],[-4.572391,-6.491864,4.149616,-3.874737,5.942563,1.140924,5.040310,5.785140,-1.793248,0.346323,-4.306919,1.370976],[1.182662,-2.283015,6.533052,3.390460,-3.648773,-5.565549,-9.721993,0.178984,1.440759,-5.447305,-4.548153,4.028988],[8.624392,-6.544141,-3.932512,-2.898913,-1.681637,-4.057402,1.830778,-4.780793,5.493898,0.420762,9.808531,-9.994580],[-7.488098,4.730148,-7.732274,5.408841,6.233043,-0.138156,3.893133,-5.152839,9.008421,6.499023,-6.693324,-3.258468],[-6.633912,-0.301090,-2.192561,-7.863668,0.527147,2.197651,3.915749,3.154855,-7.796463,-6.195868,-0.211375,-2.003351]],[[8.238721,-3.016886,8.466440,-6.210176,6.348083,9.180012,0.737446,-5.167561,8.645328,-8.550873,-2.679314,-2.761565],[7.778728,-3.362579,6.784389,4.025134,-6.215863,-7.578774,-7.604143,0.149957,0.821138,8.832371,3.154092,2.620734],[1.873597,2.728584,3.608656,3.567961,-4.533252,-4.940812,-9.006535,-1.044321,-5.402380,-2.267636,4.244983,-5.354893],[-7.605873,7.688240,2.007531,-8.903671,3.092291,-6.428368,6.551857,9.105235,7.456083,8.309845,-3.537252,-7.699908],[2.497475,3.556860,-2.255482,0.204396,-7.595947,-5.801076,-4.552746,-1.862937,-4.222115,-2.450022,-3.380019,7.065263],[-0.878303,0.134776,7.799019,2.168013,-2.017534,6.679502,-1.325579,7.145550,-0.391173,-3.657986,6.167464,-9.076912]],[[5.728653,3.290933,-0.281117,9.301285,-4.598451,9.731862,-2.161990,-4.898328,-7.375810,8.558126,-5.780070,5.701023],[7.163430,7.620376,-7.061657,-4.776520,2.183265,-3.467025,7.652544,-0.118571,-9.795795,8.940421,-3.746363,-8.364994],[5.207782,1.985152,-6.487896,-5.073752,-8.157304,-4.999405,9.930675,-5.405514,9.947271,5.725489,-7.155701,-4.047238],[2.321445,7.980695,2.184288,-4.165994,3.845570,-9.377480,-3.109168,1.833253,9.606371,-9.734958,7.381519,7.333638],[0.143191,8.814118,-6.061234,-1.748850,5.897574,8.665274,5.222181,1.269947,8.155737,6.505499,2.425976,-6.524562],[-0.301509,9.570149,3.957277,-0.948395,4.691269,-3.043043,2.611741,-2.874071,-7.192089,1.664286,5.601896,-8.952101]],[[8.054822,2.367783,2.196633,2.577682,-4.894575,5.608488,5.680154,-7.401656,2.098909,-4.898285,6.112257,0.153826],[-3.882768,-1.706935,0.125886,-7.012023,-4.429261,7.569084,2.423859,8.846867,-6.053698,9.386311,5.956090,-9.807149],[-0.384938,4.406017,7.498384,6.787608,-9.455771,-3.132974,-8.976211,-4.962879,-7.248419,-3.964196,-8.882553,9.421860],[-4.169051,-5.188788,-0.034738,-0.232810,3.829955,-2.123419,-7.309167,-0.497810,1.392674,2.967391,6.867373,-4.321729],[7.236590,1.712818,8.675426,-8.642689,0.987355,8.577145,-9.856048,-1.947492,7.032410,-4.983149,-1.588081,-7.994288],[7.309937,2.924767,5.879881,-9.625863,3.941187,-5.672849,-6.826072,-2.726452,3.485513,2.032262,-2.081322,9.533989]],[[3.269920,6.580147,-1.978170,4.530559,7.416212,-8.460181,3.865581,-2.363037,-4.495795,2.770961,7.651944,-5.755832],[7.294807,-9.912538,6.107548,7.804523,-3.526057,-7.964711,7.857459,-7.230046,5.267693,5.071825,-7.879409,1.525885],[3.974748,1.462096,-8.550969,9.607374,-3.981046,4.860598,-6.318655,-3.720808,-2.802710,9.040225,-8.067677,-0.598452],[5.901291,-3.770958,0.683164,-5.383000,-6.258218,-4.735474,-6.223962,-0.193731,4.189902,-4.306666,7.030562,-4.814467],[-2.662377,3.345398,-0.258700,-7.615384,4.600688,9.036463,-9.958920,3.624394,3.513212,3.407773,-0.520288,-8.740213],[-6.904620,3.803551,4.419636,5.580680,2.799431,5.757877,-3.188001,4.481406,-3.659492,5.356636,6.116485,-0.759899]],[[-3.775512,-3.973670,1.444136,-9.390137,5.274048,4.414261,-3.045935,-1.127556,6.540411,7.967508,6.687131,-0.610464],[7.792893,-4.750933,-2.874776,6.379296,3.713648,0.638203,7.455363,-2.782587,4.343185,0.296768,-9.349847,-8.557088],[6.867571,7.935971,-2.345061,6.424558,7.829117,-7.218161,-2.382909,-3.297456,6.360407,-0.406247,-2.710659,-0.686583],[4.564679,3.445922,8.886682,7.536457,4.268578,-7.338297,-0.639396,5.394326,1.818970,-9.407932,5.577170,6.427565],[-4.616368,3.645364,-0.689400,2.926493,-8.828146,5.997081,-1.203145,-0.319595,-9.278589,5.402201,-2.284660,-9.283758],[1.147696,9.248678,-1.143889,3.184907,4.249018,0.498497,-2.863677,2.189840,9.352758,4.307745,6.097511,0.220613]],[[-5.306158,6.135664,3.211876,-8.556235,-8.609597,8.658475,4.751856,6.462441,-5.016402,-4.235164,0.143675,5.675244],[7.711755,-0.523716,-8.837455,-0.340161,7.822317,-7.558487,7.559159,1.183065,-2.837128,-5.400319,9.937267,-6.742628],[-3.687621,0.966809,-4.976028,-9.915471,6.187091,0.787919,-1.358988,-4.542784,2.247472,-8.280400,5.265941,-2.727667],[6.145235,3.891504,-5.522635,-4.033747,6.039479,3.704302,-1.444896,7.355781,-3.010278,6.907413,-5.594873,-1.530666],[-8.294165,-9.229731,-7.706492,-0.884669,-7.936285,8.238619,2.116888,5.353800,6.398542,1.717933,4.833291,4.658492],[6.665466,-9.305827,-8.910791,7.220864,-2.648100,-7.784145,-6.899314,-4.496379,9.947243,0.766975,0.395380,3.805298]]], dtype = "float32")#candidate|5798|(11, 6, 12)|const|float32
uop_5799 = relay.acosh(const_5798.astype('float32')) # shape=(11, 6, 12)
output = uop_5799
output2 = uop_5799
func_5812 = relay.Function([], output)
mod['func_5812'] = func_5812
mod = relay.transform.InferType()(mod)
output = func_5812()
func_5813 = relay.Function([], output)
mutated_mod['func_5813'] = func_5813
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5812_call = mod.get_global_var('func_5812')
func_5813_call = mutated_mod.get_global_var('func_5813')
call_5874 = func_5812_call()
call_5875 = func_5812_call()
uop_5878 = relay.sinh(call_5874.astype('float64')) # shape=(11, 6, 12)
uop_5880 = relay.sinh(call_5875.astype('float64')) # shape=(11, 6, 12)
func_5812_call = mod.get_global_var('func_5812')
func_5813_call = mutated_mod.get_global_var('func_5813')
call_5883 = func_5812_call()
call_5884 = func_5812_call()
func_841_call = mod.get_global_var('func_841')
func_843_call = mutated_mod.get_global_var('func_843')
var_5892 = relay.var("var_5892", dtype = "int64", shape = ())#candidate|5892|()|var|int64
call_5891 = relay.TupleGetItem(func_841_call(relay.reshape(var_5892.astype('int64'), [])), 0)
call_5893 = relay.TupleGetItem(func_843_call(relay.reshape(var_5892.astype('int64'), [])), 0)
func_4919_call = mod.get_global_var('func_4919')
func_4920_call = mutated_mod.get_global_var('func_4920')
call_5901 = relay.TupleGetItem(func_4919_call(), 0)
call_5902 = relay.TupleGetItem(func_4920_call(), 0)
output = relay.Tuple([uop_5878,call_5883,call_5891,var_5892,call_5901,])
output2 = relay.Tuple([uop_5880,call_5884,call_5893,var_5892,call_5902,])
func_5906 = relay.Function([var_5892,], output)
mod['func_5906'] = func_5906
mod = relay.transform.InferType()(mod)
mutated_mod['func_5906'] = func_5906
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5907 = relay.var("var_5907", dtype = "int64", shape = ())#candidate|5907|()|var|int64
func_5906_call = mutated_mod.get_global_var('func_5906')
call_5908 = func_5906_call(var_5907)
output = call_5908
func_5909 = relay.Function([var_5907], output)
mutated_mod['func_5909'] = func_5909
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5385_call = mod.get_global_var('func_5385')
func_5386_call = mutated_mod.get_global_var('func_5386')
call_5944 = func_5385_call()
call_5945 = func_5385_call()
output = relay.Tuple([call_5944,])
output2 = relay.Tuple([call_5945,])
func_5949 = relay.Function([], output)
mod['func_5949'] = func_5949
mod = relay.transform.InferType()(mod)
mutated_mod['func_5949'] = func_5949
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5949_call = mutated_mod.get_global_var('func_5949')
call_5950 = func_5949_call()
output = call_5950
func_5951 = relay.Function([], output)
mutated_mod['func_5951'] = func_5951
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5966 = relay.var("var_5966", dtype = "float64", shape = (13, 14, 1))#candidate|5966|(13, 14, 1)|var|float64
uop_5967 = relay.erf(var_5966.astype('float64')) # shape=(13, 14, 1)
bop_5971 = relay.bitwise_or(var_5966.astype('uint32'), relay.reshape(uop_5967.astype('uint32'), relay.shape_of(var_5966))) # shape=(13, 14, 1)
uop_5978 = relay.sinh(uop_5967.astype('float32')) # shape=(13, 14, 1)
uop_5980 = relay.atanh(uop_5978.astype('float32')) # shape=(13, 14, 1)
uop_5982 = relay.atan(uop_5978.astype('float64')) # shape=(13, 14, 1)
bop_6002 = relay.bitwise_xor(uop_5982.astype('int32'), relay.reshape(uop_5980.astype('int32'), relay.shape_of(uop_5982))) # shape=(13, 14, 1)
bop_6007 = relay.greater(uop_5978.astype('bool'), relay.reshape(var_5966.astype('bool'), relay.shape_of(uop_5978))) # shape=(13, 14, 1)
func_4848_call = mod.get_global_var('func_4848')
func_4851_call = mutated_mod.get_global_var('func_4851')
const_6012 = relay.const([-2.055510,-5.468533,3.485470,-3.157383,-3.076638,6.618915,-5.955435,-3.969477,-0.123725,-5.836460,7.267109,-1.113882,-4.284807,7.563015,-1.780934,-6.427395,-6.928808,5.504168,-4.916279,1.575268,7.002220,1.070505,9.249118,3.383864,-4.887428,-3.399079,4.701023,-4.172560,-4.339263,2.726142,9.481439,7.035758,-5.181470,6.847795,8.742933,9.446111,9.193086,-1.653694,-6.513259,-8.414288,0.814833,5.017879,4.038169,7.676606,8.605988,0.248249,-8.897559,-9.925358,2.718235,5.312169,-3.350014,6.073505,7.395861,5.411722,2.255302,1.028679,-2.474069,9.852479,-1.694967,3.222878,9.766167,-4.361179,4.354630,-8.584934,4.485400,7.664340,-9.869359,8.491958,4.921223,-7.002791,7.175979,8.682243,-8.829063,4.624876,3.062681,-5.337568,1.815671,4.935283], dtype = "float64")#candidate|6012|(78,)|const|float64
call_6011 = relay.TupleGetItem(func_4848_call(relay.reshape(const_6012.astype('float64'), [26, 3])), 0)
call_6013 = relay.TupleGetItem(func_4851_call(relay.reshape(const_6012.astype('float64'), [26, 3])), 0)
func_1384_call = mod.get_global_var('func_1384')
func_1386_call = mutated_mod.get_global_var('func_1386')
const_6016 = relay.const([-5.850841,7.189019,8.092478,-0.507525,-4.942267,5.128515,0.213221,-9.384385,0.494117,8.061978,5.786435,0.228291,5.947064,-3.763636,-3.073167,-4.764373,4.187616,-3.006591,-9.324270,4.705419,9.469290,-5.057041,9.871942,5.837694,0.331198,2.545553,-7.793306,-4.139884,-7.454512,-5.563758,1.937884,7.569081,0.739008,3.593566,3.585560,-4.792244,9.358481,6.841503,4.799099,4.164157,1.060991,7.043494,-9.579087,9.687246,-5.317569,3.724590,-9.559100,-9.720539,-1.587455,2.525688,2.583391,-7.942696,0.777471,4.539006,9.386008,3.705779,-4.327667,-9.217609,3.764853,8.559599,8.052466,9.287242,-7.146892,6.462990,6.324114,-8.821556,0.601962,1.896890,-8.655571,0.458042,1.365183,-6.033637,-3.780411,-2.048285,-8.157063,1.340157,-4.147972,-0.823540,1.308415,-7.206419,-4.579076,2.691677,7.666755,-1.843051,6.876796,6.384090,2.102483,-9.874063,-5.386836,1.287657,0.417363,6.556381,2.936107,-6.497546,2.864025,8.508538,3.156956,0.819736,3.111857,-7.318140,-9.281479,7.103062,7.520995,2.377557,8.986012,-6.171875,8.178151,-7.991380,7.305253,9.045367,9.185431,4.603307,0.399693,-9.189301,-4.514681,-8.335242,-3.555106,-3.544149,2.283625,-8.162988,-9.363097,7.535772,-1.878211,-7.679134,-6.282736,-7.370962,-4.120206,-2.057021,7.256856,-7.761982,9.209767,-3.876008,2.722091,6.590719,-9.004793,3.886583,9.639576,-9.121767,-0.942999,6.647024,4.325921,2.955220,9.595247,0.734659,-0.932057,8.143515,-0.827527,7.286123,-1.604345,3.761422,-6.476694,-2.001244,2.476726,4.384647,3.443694,1.022744,6.170025,3.070910,-9.616401,2.165028,-4.384348,3.653905,-1.136798,-3.874003,6.684228,7.131186,-5.884133,2.676792,-6.185691,-3.193735,-9.121794,-9.565786,-0.159465,-8.538977,8.356654,6.450562,-6.836474,-8.877842,2.417768,-4.059729,-7.068896,4.943534,5.236666,7.455578,0.929700,0.768341,3.702498,5.834013,4.252921,-8.735016,1.712380,8.405055,-3.364674,-7.809498,-6.645352,3.228196,-0.932828,-2.906761,2.852499,-6.814827,3.531313,-6.724263,3.515944,-1.434408,-6.127717,8.912454,-3.943601,9.057918,6.076101,-3.444703,-3.822240,-8.084569,-4.501328,-0.491388,-8.275855,2.238560,6.226664,-2.483831,2.029035,2.246991,-8.795420,-3.108805,1.955828,5.023611,0.766853], dtype = "float64")#candidate|6016|(225,)|const|float64
call_6015 = func_1384_call(relay.reshape(const_6016.astype('float64'), [5, 3, 15]))
call_6017 = func_1384_call(relay.reshape(const_6016.astype('float64'), [5, 3, 15]))
var_6023 = relay.var("var_6023", dtype = "float64", shape = (13, 14, 10))#candidate|6023|(13, 14, 10)|var|float64
bop_6024 = relay.logical_xor(uop_5982.astype('int8'), var_6023.astype('int8')) # shape=(13, 14, 10)
bop_6032 = relay.logical_and(uop_5982.astype('bool'), relay.reshape(bop_6002.astype('bool'), relay.shape_of(uop_5982))) # shape=(13, 14, 1)
func_891_call = mod.get_global_var('func_891')
func_893_call = mutated_mod.get_global_var('func_893')
call_6043 = relay.TupleGetItem(func_891_call(relay.reshape(const_6012.astype('float64'), [2, 13, 3])), 0)
call_6044 = relay.TupleGetItem(func_893_call(relay.reshape(const_6012.astype('float64'), [2, 13, 3])), 0)
bop_6046 = relay.left_shift(uop_5982.astype('uint64'), const_6016.astype('uint64')) # shape=(13, 14, 225)
output = relay.Tuple([bop_5971,bop_6007,call_6011,const_6012,call_6015,bop_6024,bop_6032,call_6043,bop_6046,])
output2 = relay.Tuple([bop_5971,bop_6007,call_6013,const_6012,call_6017,bop_6024,bop_6032,call_6044,bop_6046,])
func_6051 = relay.Function([var_5966,var_6023,], output)
mod['func_6051'] = func_6051
mod = relay.transform.InferType()(mod)
mutated_mod['func_6051'] = func_6051
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6051_call = mutated_mod.get_global_var('func_6051')
var_6053 = relay.var("var_6053", dtype = "float64", shape = (13, 14, 1))#candidate|6053|(13, 14, 1)|var|float64
var_6054 = relay.var("var_6054", dtype = "float64", shape = (13, 14, 10))#candidate|6054|(13, 14, 10)|var|float64
call_6052 = func_6051_call(var_6053,var_6054,)
output = call_6052
func_6055 = relay.Function([var_6053,var_6054,], output)
mutated_mod['func_6055'] = func_6055
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4919_call = mod.get_global_var('func_4919')
func_4920_call = mutated_mod.get_global_var('func_4920')
call_6067 = relay.TupleGetItem(func_4919_call(), 0)
call_6068 = relay.TupleGetItem(func_4920_call(), 0)
output = call_6067
output2 = call_6068
func_6076 = relay.Function([], output)
mod['func_6076'] = func_6076
mod = relay.transform.InferType()(mod)
mutated_mod['func_6076'] = func_6076
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6076_call = mutated_mod.get_global_var('func_6076')
call_6077 = func_6076_call()
output = call_6077
func_6078 = relay.Function([], output)
mutated_mod['func_6078'] = func_6078
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6107 = relay.var("var_6107", dtype = "bool", shape = (8, 4, 11))#candidate|6107|(8, 4, 11)|var|bool
const_6108 = relay.const([[[False,True,True,False,False,False,False,False,False,True,True],[True,False,True,True,True,False,False,False,True,False,True],[True,True,False,False,True,True,False,False,True,False,False],[True,False,False,True,False,False,True,True,False,False,True]],[[True,True,False,True,False,True,False,False,False,True,False],[False,True,True,True,True,True,True,False,True,False,False],[True,True,True,False,False,False,False,False,False,True,True],[False,False,True,True,False,False,False,True,False,False,False]],[[True,False,True,False,True,True,False,True,False,True,False],[True,True,False,True,True,False,True,False,True,False,False],[True,True,False,True,True,True,True,False,True,False,False],[True,False,True,False,False,False,False,False,False,True,True]],[[False,True,True,False,False,True,True,False,False,False,False],[False,True,True,False,False,True,True,False,True,False,True],[False,True,True,False,True,True,False,True,True,False,False],[False,False,False,True,False,True,True,False,True,False,False]],[[False,False,False,False,True,True,True,False,False,False,True],[True,False,False,True,True,True,False,True,True,False,False],[False,True,False,True,True,False,False,True,False,False,True],[True,False,False,False,False,False,False,False,True,True,False]],[[False,False,True,True,False,True,True,False,True,True,False],[True,False,True,True,False,False,False,False,True,True,True],[True,True,True,False,True,True,True,False,True,True,True],[True,True,True,False,False,False,True,True,False,False,True]],[[True,True,True,True,True,True,False,False,False,True,True],[True,True,False,False,True,True,False,False,False,True,True],[True,True,True,True,False,False,True,False,True,False,True],[False,True,True,False,True,True,False,True,True,False,False]],[[True,False,True,False,False,False,False,True,True,False,False],[True,True,False,True,True,False,True,True,False,True,True],[True,True,False,False,False,True,True,False,False,True,False],[True,True,True,True,False,False,True,False,True,False,True]]], dtype = "bool")#candidate|6108|(8, 4, 11)|const|bool
bop_6109 = relay.logical_or(var_6107.astype('bool'), relay.reshape(const_6108.astype('bool'), relay.shape_of(var_6107))) # shape=(8, 4, 11)
output = bop_6109
output2 = bop_6109
func_6118 = relay.Function([var_6107,], output)
mod['func_6118'] = func_6118
mod = relay.transform.InferType()(mod)
var_6119 = relay.var("var_6119", dtype = "bool", shape = (8, 4, 11))#candidate|6119|(8, 4, 11)|var|bool
output = func_6118(var_6119)
func_6120 = relay.Function([var_6119], output)
mutated_mod['func_6120'] = func_6120
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5541_call = mod.get_global_var('func_5541')
func_5542_call = mutated_mod.get_global_var('func_5542')
call_6128 = relay.TupleGetItem(func_5541_call(), 0)
call_6129 = relay.TupleGetItem(func_5542_call(), 0)
func_1243_call = mod.get_global_var('func_1243')
func_1247_call = mutated_mod.get_global_var('func_1247')
var_6139 = relay.var("var_6139", dtype = "int16", shape = ())#candidate|6139|()|var|int16
var_6140 = relay.var("var_6140", dtype = "int16", shape = (4, 252))#candidate|6140|(4, 252)|var|int16
var_6141 = relay.var("var_6141", dtype = "float64", shape = (704,))#candidate|6141|(704,)|var|float64
call_6138 = relay.TupleGetItem(func_1243_call(relay.reshape(var_6139.astype('int16'), []), relay.reshape(var_6140.astype('int16'), [12, 7, 12]), relay.reshape(var_6141.astype('float64'), [176, 4]), ), 2)
call_6142 = relay.TupleGetItem(func_1247_call(relay.reshape(var_6139.astype('int16'), []), relay.reshape(var_6140.astype('int16'), [12, 7, 12]), relay.reshape(var_6141.astype('float64'), [176, 4]), ), 2)
output = relay.Tuple([call_6128,call_6138,var_6139,var_6140,var_6141,])
output2 = relay.Tuple([call_6129,call_6142,var_6139,var_6140,var_6141,])
func_6149 = relay.Function([var_6139,var_6140,var_6141,], output)
mod['func_6149'] = func_6149
mod = relay.transform.InferType()(mod)
var_6150 = relay.var("var_6150", dtype = "int16", shape = ())#candidate|6150|()|var|int16
var_6151 = relay.var("var_6151", dtype = "int16", shape = (4, 252))#candidate|6151|(4, 252)|var|int16
var_6152 = relay.var("var_6152", dtype = "float64", shape = (704,))#candidate|6152|(704,)|var|float64
output = func_6149(var_6150,var_6151,var_6152,)
func_6153 = relay.Function([var_6150,var_6151,var_6152,], output)
mutated_mod['func_6153'] = func_6153
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5220_call = mod.get_global_var('func_5220')
func_5221_call = mutated_mod.get_global_var('func_5221')
call_6181 = relay.TupleGetItem(func_5220_call(), 0)
call_6182 = relay.TupleGetItem(func_5221_call(), 0)
output = call_6181
output2 = call_6182
func_6183 = relay.Function([], output)
mod['func_6183'] = func_6183
mod = relay.transform.InferType()(mod)
output = func_6183()
func_6184 = relay.Function([], output)
mutated_mod['func_6184'] = func_6184
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4414_call = mod.get_global_var('func_4414')
func_4415_call = mutated_mod.get_global_var('func_4415')
call_6291 = func_4414_call()
call_6292 = func_4414_call()
func_2998_call = mod.get_global_var('func_2998')
func_3006_call = mutated_mod.get_global_var('func_3006')
const_6294 = relay.const(-6.448352, dtype = "float64")#candidate|6294|()|const|float64
var_6295 = relay.var("var_6295", dtype = "float64", shape = (504,))#candidate|6295|(504,)|var|float64
const_6296 = relay.const([[-6.328690,-0.517609,-2.588335,-5.154933,7.824026,-0.917418,-5.820413,3.619802,8.450995,-0.276753,1.251621,4.939120,-4.351769,2.033820,-9.683499,-0.119386,2.625605,8.081780,-5.549981,-5.866496,-4.129792,6.000263,1.235491,5.159063,-7.746410,-0.401086,-0.745310,8.958718,7.103502,-2.011036,8.271662,-0.325473,3.410804,-8.285367,-4.114540,-8.768870,7.439523,6.053534,-3.228570,7.324529,-7.299824,6.314908,-8.659937,6.692830,4.738391,4.208804,2.410388,2.830786,8.553621,-7.354108,-4.926513,-8.769553,-5.308740,-8.987347,2.341348,9.075090,5.884872,-0.776571,8.229166,3.336773,3.575259,7.532409,2.049149,-1.772546,-0.600587,-9.498548,6.271452,-3.610384,-8.794737,-9.931660,6.397764,1.645342,-6.254694,-5.760013,-7.197334,-2.862376,-5.788611,-4.452622,-8.413306,-2.783786,9.291148,4.410311,2.373253,-6.579656,-4.924939,6.554275,9.586804,7.393683,2.044346,8.095362,5.319310,2.413084,-5.782336,1.058252,-3.164627,1.637837,-5.694693,-1.528703,1.474104,6.559756,-5.688318,8.258674,-0.985741,8.498115,-6.426305,9.766207,8.071669,1.112945,-3.474819,-6.190852,-5.660760,-9.722456,8.773145,-6.415641,8.281935,-1.576785,8.357141,9.541375,-3.158660,1.451246,-4.979374,6.489162,0.661267,9.913042,1.020864,1.080780,0.787631,2.692074,-6.967663,6.812999,2.819075,7.828726,6.323638,-7.934967,-8.082784,-8.753610,-9.564319,-6.836453,-3.686250,7.570299,9.766412,6.892949,-3.742626,6.515966,3.303445,6.710863,0.021497,4.212536,3.102406,-4.446065,2.511502,-1.566574,-0.938322,6.745490,-5.096882,8.390509,3.255347,7.295920,6.340834,0.068084,6.031149,1.515387,2.338797,-0.906388,1.804530,-3.450253,3.780812,-8.536717,0.293623,4.820430,1.685571,-0.331425,5.915293,-2.827899,-3.631641,5.122468,-5.095527,-0.619705,0.175144,8.654129,-9.789477,9.580421,-2.115623,4.976253,-5.828366,-7.003281,9.917190,-1.394175,-3.399922,5.308348,-1.337732,-4.188822,-6.925416,0.997007,3.787221,-3.747826,-8.314770,-9.488042,5.735095,6.366272,-1.628228,0.516518,-8.823571,-1.231337,6.753501,5.075117,5.796080,-8.781418,6.358599,7.655617,-1.745403,-4.236874,-7.864097,-7.413614,-9.336443,7.139109,6.113996,0.378854,-6.921158,-9.080452,4.168712,-8.478969,3.564114,-5.946114,-1.453979,-9.922912,6.330824,5.995968,3.686782,-7.188035,0.119649,-1.542735,-7.372944,-9.396986,2.799873,-7.693137,7.511619,6.299429,-4.071617,0.110197,-5.692840,7.018631,-5.525291,8.324231,-4.143021,6.185358,4.645446,-8.158074,3.099655,-4.009042,0.123764,-9.567081,5.408044,-9.934595,4.516514,-8.806138,8.761925,-8.539815,4.494960,5.647688,6.790468,7.453028,-2.336462,-6.011126,3.598067,-8.899336,-5.671782,8.432184,5.573499,9.577025,9.144124,-3.120513,4.879862,-1.916680,-1.356026,5.778844,-9.876481,-4.763075,-8.126807,8.398176,4.201153,6.844591,-4.088491,-2.467964,-3.793823,-2.624432,7.266398,-5.257468,1.855865,3.578629,-3.974687,7.001795,-5.339011,0.658758,9.272037,-2.773469,-8.793438,-9.602797,-4.790271,-5.815592,-0.815729,-4.929023,7.190648,-4.100275,6.220131,-0.556539,-1.057379,-4.855959,4.637168,-3.156785,-1.629727,-0.358209,-0.783505,2.504392,4.850389,6.745522,5.362439,2.616438,-3.406245,6.184615,-5.003409,0.326168,-2.873779,8.666338,3.001505,-6.372202,-6.914644,-2.962734,0.706565,6.459301,-4.899408,-2.456356,-6.447180,-1.951366,7.194837,-2.929545,-6.407865,7.254272,9.345458,-1.042444,-7.889360,4.639049,9.936635,8.410824,5.932344,1.903805,8.350933,6.403382,-0.172215,-4.483656,-7.836247,8.583112,-7.929647,9.455012,6.779208,-7.786548,-5.949366,-3.141139,0.115547,-8.266713,-3.454624,-8.630255,2.859162,8.202381,-5.772409,8.667422,-0.332813,5.087314,7.575665,-4.178136,-4.034725,-1.596698,-2.464847,3.870106,-8.381414,4.743828,8.286104,-7.793448,1.781150,-7.314975,9.738872,-9.489798,-1.490736,-8.659671,-1.495802,-5.714429,7.689659,4.222367,6.041982,-3.760631,-7.854831,-0.705278,8.345268,-3.712069,-8.324001,-3.845978,8.532054,9.992721,-3.025072,5.546075,5.700618,-5.767289,6.210406,-4.369183,-7.457620,-2.107789,-3.985587,-3.615380,-3.707346,9.243225,-5.339865,-7.189844,-6.238667,6.063597,-3.700242,-8.574461,6.698917,-2.392497,-5.910250,3.506292,6.930825,-6.269565,8.456177,-2.433611,4.656827,-8.518216,0.775405,3.218056,6.838020,8.654615,-8.804762,5.008753,-1.972617,-4.823822,-7.853403,9.864206,5.706782,-3.117356,-6.502698,-9.882606,-6.615360,1.024475,-9.463412,4.207141,-5.335587,4.809219,-9.882678,-8.929888,-5.292537,-2.425368,-0.322832,4.912767,1.010206,-9.181159,-0.380393,2.720421,-8.878019,-8.436654,-2.017346,-6.675460,-4.146436,9.145626,-6.480563,1.793606,-3.584338,6.394353,3.810101,-8.316015,-2.741303,3.563654,-2.428865,6.318806,9.382991,7.671504,-8.021525,-9.939038,7.903039,9.538569,6.325761,-6.670101,-5.779012,7.426839,-3.012219,-7.985102,-9.386459,3.211225,7.714681,9.710501,2.391525,-1.847279,-2.068170,-9.992348,-4.960240,2.479472,0.874851,6.870181,-9.406885,4.713384,-9.475525,2.154004,2.959661,3.163047,-1.992949,-3.970881,2.927988,8.016492,9.277751,4.062854,5.064261,-0.701920,1.675768,0.079257,-8.237966,-9.819044,-7.558552,7.808511,7.793954,-6.745687,-3.723396,2.251304,8.986838,4.277251,-0.008869,-7.217795,-8.225810,-6.529735,-4.674342,8.828702,4.524231,-6.808914,8.008442,7.306001,-9.537654,-2.779181,-1.857829,6.984791,-1.924949,1.458644,6.709487,2.648713,-6.294463,7.016692,9.813085,4.296527,4.632953,-8.141478,4.451299,3.563651,-4.272947,-9.353659,1.290006,-7.972003,2.003389,-3.294406,-1.939013,-2.905190,-4.328028,0.344833,-4.748134,-1.741493,-6.538904,-5.711619,-2.261185,-5.420657,-3.955888,-6.907768,-6.800348,2.211443,-7.131797,-7.776512,8.736578,3.441544,9.483519,7.874397,6.021983,8.446752,0.823479,5.191379,5.343235,-7.430920,5.960276,4.024976,7.797154,3.077150,-9.050574,-3.440671,-8.765436,3.206314,2.326176,8.582607,-4.732366,-6.749596,-2.977632,-6.650171,9.920342,8.394540,2.164036,-9.972651,-1.770840,-9.493848,-2.099383,-1.573963,-0.581733,-9.524962,5.245776,-2.060354,-2.670334,2.410721,-3.108124,-9.761797,-6.746403,-6.910529,-3.631812,-5.382890,-8.621846,6.600227,-6.217584,3.166772,-2.313420,-2.325812,2.729976,6.542059,2.369403,7.583892,-1.132100,-8.504734,7.174689,-8.126487,2.974894,-4.708683,7.356486,-4.963618,-9.764968,-8.002220,2.399429,-9.233049,6.910471,-9.318624,-7.016744,7.289909,2.582562,9.954151,-3.146578,-7.110298,-5.309122,-9.524905,4.126184,2.339594,-9.546865,-8.452431,-5.014310,6.151699,-9.403685,1.466799,5.993494,-9.261488,-8.163830,0.728807,5.632407,-6.658436,1.910852,-3.157219,-0.947808,-5.910931,6.405655,-9.304411,1.857364,-4.891502,-9.683883,-5.248349,-7.249780,-5.737108,-3.706706,3.804268,-5.684021,0.272057,-0.463070,-9.604561,-7.214215,-1.925003,0.697297,6.771540,-0.045012,-7.501087,4.003415,-9.526121,0.525725,-8.577580,-6.213279,-0.244601,-5.725369,-9.451036,5.325122,0.005790,2.627173,5.611475,-9.182941,8.717215,-7.192157,9.053681,-4.505062,8.019911,8.901769,2.269725,-0.180669,-0.213272,-3.326932,7.569522,4.288976,6.167979,-6.294459,9.770432,4.098253,2.451871,-3.281038,-9.808407,-7.531689,7.461731,4.967362,-0.847164,-2.602247,-5.461758,6.029108,-8.807765,-8.895139,-3.326268,-4.417259,-9.678742,-0.247479,-9.502169,-5.804330,-1.906068,-6.538983,-1.563177,-6.490877,0.175283,3.731772,6.797835,-6.290040,5.813943,8.252854,9.129707,3.339878,-6.450938,-6.320901,3.615434,8.890919,5.922481,3.366664,3.126114,-0.464549,-9.157512,8.787950,0.307443,1.990510,-8.194341,-3.637304,-3.684960,2.009250,3.903032,0.953750,8.057656,-4.993280,1.412728,-3.556173,-9.778957,0.568423,0.709310,-5.609366,-6.623162,5.675483,9.886136,2.486102,-4.923873,-3.817413,-1.105813,-3.250559,-0.561976,-3.352003,-1.416220,-5.194153,-8.854841,7.447145,-6.278386,-3.618945,8.507124,-0.035511,5.062240,-2.340527,-0.917395,8.568537,0.728844,-8.530242,1.919785,3.867354,-0.721428,-0.270909,6.498464,-5.939902,9.812830,6.602146,-9.656272,0.781249,2.515597,8.081040,-2.898514,-4.580486,-5.038834,7.895984,6.585923,9.497216,1.825441,-1.171707,4.102821,-3.867929,6.694760,2.833738,3.968556,7.234683,5.092878,4.034945,-6.610674,2.111870,-4.960531,-4.518888,8.123996,3.546119,0.061758,3.455906,-2.805115,2.652750,1.615381,-8.715863,-9.759330,4.250259,-6.186399,0.698504,-9.534191,-2.331289,-4.522107,2.795138,-1.646642,-4.625086,-8.471682,6.193433,0.077819,4.284069,6.603129,-2.034654,9.692495,1.100753,-6.176430,-6.068085,4.122774,1.523189,2.484131,9.372316,-3.157807,5.661553,-9.931679,2.533648,-0.701596,-2.183411,-7.390394,8.180768,3.296652,-3.911921,7.424562,-1.459532,3.091396,-0.732930,-6.529444,-7.949543,0.687496,-2.691791,-7.396628,-7.464619,-4.901945,2.561026,7.538311,-5.673783,0.652623,-7.731712,-3.830096,-8.890596,-0.143298,-8.974093,-6.843234,4.848881,8.570590,0.020451,-3.327997,-7.406031,8.501190,3.147029,-2.609054,2.033302,-5.578632,-1.148345,-1.134168,-2.782323,-4.123491,-9.136701,-4.077513,-5.297388,8.235124,2.571262,3.492292,-9.560658,7.601064,9.991369,0.539238,-4.503704,-5.341297,-8.211112,8.781563,-2.059095,-8.009239,-1.540180,-2.271968,-9.671794,6.038662,7.732153,8.667833,0.978740,-5.357042,-4.943169,6.493501,7.627909,2.693203,-2.687379,4.314397,-9.078464,5.337949,-6.472735,-9.670344,8.079340,-0.940258,-3.127470,-5.974712,6.380185,1.196477,6.930305,-2.888047,-8.706650,-6.844155,-0.738518,6.997152,5.306307,8.751879,6.947047,-9.926130,2.290500,7.491233,-0.929201,5.704540,-2.142180,5.302037,1.245253,5.924836,-4.881645,8.506940,1.809311,6.002880,1.742557,-6.601124,-6.266886,-0.199396,8.265109,-0.156527,5.112559,6.806618,-7.276812,6.443851,-7.807434,2.086817,5.605318,8.333440,-8.017394,4.904271,-7.162532,-2.082664,1.925702,-0.927279,-3.736827,-3.766352,9.966200,-6.022779,0.737891,7.413398,-2.521490,-5.963247,8.019384,-7.880142,-2.951271,-8.188374,0.935519,-2.599143,9.501186,0.596970,5.595080,6.423216,-1.106518,-7.389039,-0.773734,2.491735,-7.999637,-5.939858,-7.206526,8.321459,-8.922046,2.425932,-2.535298,-5.150240,-1.783142,-9.132745,-8.440456,-2.926118,1.691876,-5.726049,2.438471,-6.243916,2.980224,7.176476,0.150184,-2.179959,-8.269846,4.023597,6.910206,-4.664928,3.502506,6.553050,2.283112,-5.195509,-1.180821,-8.838488,6.083398,-2.079514,7.966402,-8.305162,-4.395742,-7.200605,-6.093545,-1.343120,-5.073909,2.738194,8.011849,2.877231,5.059625,5.033653,-7.282715,2.522662,-6.846066,-3.272793,7.963166,-1.687117,4.628317,7.693037,-4.380095,-1.399854,-6.409341,-7.359465,-1.060596,-8.542388,-9.398440,-2.005554,9.528598,-0.901798,1.553419,1.973611,3.472876,-9.654892,5.697983,-5.452151,0.806377,-1.988231,-6.725166,0.261727,-0.699280,-3.272124,2.346771,8.633818,-9.810835,-9.904537,-3.438511,7.124385,8.789102,-6.603469,3.311564,-9.017403,3.835826,-5.108254,-2.325175,2.976136,-2.005740,4.166839,-1.922134,-6.980672,-9.622873,-9.087411,0.621105,-9.774038,1.598510,0.450284,1.404678,-8.942210,-3.351927,-3.794972,-8.515541,1.634237,-3.310981,4.351718,5.122394,4.484013,-3.237680,-1.591426,3.688935,6.000172,2.672042,4.346233,-3.586843,-2.916881,9.802670,4.155848,-8.663602,-4.169699,7.188775,4.105749,1.661459,-9.147365,-0.512004,2.693169,8.837240,-1.831973,7.151798,7.791757,4.549267,-9.449332,2.835120,8.709206,-0.683680,-0.116251,7.022846,-4.713010,-5.175149,-7.170261,5.650081,8.770406,-1.404844,-2.619167,9.584268,-2.705558,4.660027,7.716337,-0.433101,-0.344525,-4.020241,6.816375,-1.295446,5.897486,-3.688139,0.110063,2.543912,6.727571,-0.034473,-9.399969,3.823152,3.976985,1.901824,4.544049,5.517679,3.813632,-8.102393,5.755497,-4.657802,-2.993667,-5.317900,7.600772,-1.962113,-8.686001,-7.704538,-4.538683,6.064177,-3.217250,0.819901,-2.433546,4.644982,-1.898868,-0.652131,-0.492033,-1.358087,-5.854821,-2.869093,6.938056,-7.016828,6.674115,-1.484318,-8.653051,2.221162,-5.780264,7.314790,0.794476,-4.528961,-4.724846,1.616492,-5.461632,7.617036,6.090355,-8.075757,-8.005213,-4.934663,3.187835,-8.039380,-5.381520,-0.387608,-7.935197,9.298345,-2.356218,4.467356,5.047879,8.554392,3.845936,-1.271980,-7.086126,7.124686,9.451498,-9.248510,-3.169821,-7.744151,3.108225,9.713750,-7.128971,2.659888,0.378946,-7.376412,-2.373385,-4.800059,-5.210229,-6.517567,1.867944,-0.323482,4.982804,1.628988,9.709770,-8.511748,-0.050044,-8.787873,-7.020204,3.883289,-5.455139,-3.969450,0.900871,-8.204499,6.899390,-7.943512,-1.842439,0.733885,6.332368,2.331065,7.410387,0.188437,-0.892330,-8.444402,-8.189326,-9.632191,2.791322,5.098368,2.497815,6.163849,-1.006327,3.935203,-0.358165,-3.487105,5.142010,-3.635353,3.511171,-6.496347,1.878158,-8.948757,-8.049616,-1.904933,-9.808084,-9.985360,-9.845145,-6.760133,6.171052,8.735190,7.870094,5.794013,-1.669240,7.689702,-2.506082,5.593607,-8.891971,6.075384,-0.566136,0.838258,1.073894,-9.010634,4.789186,-8.806451,-7.674757,-2.907948,6.316716,-9.547581,9.429255,5.827175,5.340513,9.791660,-0.290247,-6.193081,-8.273467,0.676477,3.442580,3.111242,1.840375,8.769792,-0.664095,1.105259,1.799564,0.460242,1.019820,-9.936885,1.712677,-7.684463,-9.455048,-9.723635,-3.544643,-6.248725,5.914328,-9.234724,2.069857,-0.969547,9.438840,5.492177,1.973176,5.906431,1.802655,1.188026,7.087768,8.171110,-5.336452,9.697361,7.229721,-2.849347,3.458362,4.126640,-7.917474,-5.122672,9.729453,-9.065447,-6.965391,0.516562,-2.981547,-6.695980,9.826049,7.825463,5.714316,-6.196878,5.667063,2.101984,-7.895387,5.748047,-2.636356,-4.320665,-9.383902,-4.253090,5.907649,-6.502876,-9.491222,2.291019,-8.108495,4.409323,0.873497,1.922458,-1.768896,-2.697904,8.891058,4.761353,1.809670,-0.969070,6.041485,7.620528,-5.452048,-9.345329,-0.518213,-4.544524,-3.160621,5.209759,-7.738057,-0.089870,9.779564,0.828944,0.262226,7.300819,-8.438094,-2.564708,-6.369928,-7.766383,4.973433,-8.583932,5.640317,2.086820,-6.748814,0.660850,2.130286,-8.522464,-5.385143,0.268647,-6.342079,5.324991,-6.505221,-4.559473,5.984445,-2.486293,1.941200,-2.672630,4.689838,5.698100,-1.550764,-6.154797,-7.545077,1.048942,-7.537269,-5.440848,8.061293,-3.747382,1.323201,-3.429045,2.802994,-6.212582,9.704167,8.394717,-3.255333,0.249106,-5.358629,-9.456773,-1.825150,1.912844,-2.156852,9.392183,0.136028,-7.877212,9.949750,0.095727,7.505679,9.802530,4.486958,2.252618,0.134735,-6.218285,9.825586,5.586016,-4.569241,-7.326567,-8.948439,-1.603297,8.609105,4.712521,-9.116966,-6.893550,-8.561501,-4.585551,-1.977375,7.499699,-7.608057,7.264614,-1.691133,6.956476,-4.288341]], dtype = "float64")#candidate|6296|(1, 1470)|const|float64
const_6297 = relay.const([[-6],[-3],[2],[3],[10],[-3],[-8],[3],[-10],[10],[2],[9],[-10],[10],[7],[-10],[-2],[2],[-4],[-7],[6],[7],[3],[-1],[-7],[-7],[9],[-6],[1],[8],[1],[-2],[3],[-9],[10],[1],[6],[-2],[-8],[-3],[6],[-5],[-10],[-3],[-9],[10],[10],[-3],[6],[2],[-5],[-4],[1],[-3],[-10],[3],[8],[2],[-10],[-10],[7],[7],[2],[4],[1],[5],[-9],[1],[4],[-6],[-10],[-4],[-8],[6],[-3],[-7],[6],[2],[5],[7],[-10],[-3],[1],[8],[8],[4],[6],[6],[-6],[3],[9],[-2],[3],[3],[7],[-5],[-2],[7],[-2],[1],[-10],[8],[10],[-9],[-4],[-6],[10],[10],[-9],[3],[-4],[-5],[7],[-2],[-9],[-1],[-5],[-3],[10],[-3],[-4],[-1],[-6],[-10],[-3],[3],[1],[6],[1],[9],[10],[-9],[6],[1],[-5],[2],[3],[4],[4],[4],[-8],[7],[-4],[7],[10],[5],[5],[-6],[-7],[-9],[-1],[-2],[6],[-2],[1],[-8],[-1],[-8],[7],[-2],[3],[-10],[3],[-1],[2],[3],[-3],[-6],[2],[-9],[-1],[3],[1],[1],[-1],[8],[10],[4],[1],[4],[-7],[5],[-3],[-9],[8],[-9],[3],[5],[7],[4],[8],[-2],[8],[-4],[1],[-2],[-6],[-8],[-9],[-3],[5],[8],[-5],[-3],[-10],[10],[9],[-6],[8],[-7],[7],[-9],[10],[1],[4],[-10],[7],[-6],[2],[5],[-8],[-10],[7],[-5],[-6],[-3],[-6],[8],[-10],[9],[3],[3],[-7],[2],[-8],[-1],[-2],[-5],[-7],[-3],[5],[-7],[-8],[10],[2],[-2],[-7],[4],[-3],[1],[-3],[-10],[-3],[3],[7],[10],[2],[6],[-2],[8],[4],[-10],[-4],[-4],[1],[10],[10],[-9],[7],[1],[-8],[8],[10],[-9],[-8],[8],[-6],[4],[-3],[7],[-4],[7],[7],[4],[-10],[7],[-8],[9],[9],[-2],[-5],[-1],[-9],[1],[1],[-7],[4],[-8],[-2],[4],[9],[-1],[8],[-5],[-7],[6],[-7],[3],[1],[-9],[9],[-9],[2],[4],[2],[-7],[1],[6],[-7],[8],[7],[-6],[-10],[10],[10],[-8],[-7],[-3],[-6],[6],[-7],[9],[-2],[-7],[7],[5],[-9],[8],[-9],[-3],[-2],[-9],[7],[2],[9],[1],[1],[-3],[-4],[-4],[-8],[-5],[-9],[8],[-3],[-6],[-1],[-6],[4],[-4],[-5],[8],[5],[-9],[-2],[10],[-1],[6],[-9],[-5],[-7],[-1],[-5],[-7],[-4],[2],[5],[5],[3],[-1],[-6],[-6],[-7],[6],[-9],[2],[3],[2],[-10],[-7],[-1],[-4],[-10],[8],[-3],[-10],[-1],[8],[9],[6],[7],[1],[3],[8],[-6],[10],[5],[-6],[4],[-10],[-5],[6],[5],[4],[7],[9],[1],[-6],[5],[8],[8],[-9],[-3],[-9],[10],[-4],[8],[-1],[-5],[6],[-6],[-8],[4],[1],[-7],[-1],[8],[-7],[4],[8],[5],[-9],[3],[5],[-4],[1],[-3],[6],[4],[-9],[6],[-5],[9],[-3],[-10],[-6],[-4],[-8],[-2],[4],[2],[-7],[8],[-4],[-1],[-3],[-2],[-9],[-2],[3],[7],[9],[-2],[-8],[-7],[-4],[10],[4],[3],[8],[3],[-10],[2],[6],[-4],[-8],[-6],[-2],[-1],[7],[-3],[-7],[-2],[-10],[-2],[-8],[-2],[10],[8],[7],[-2],[-4],[-9],[1],[5],[10],[-10],[-10],[1],[-7],[10],[6],[4],[5],[-1],[-5],[-7],[-5],[5],[8],[5],[9],[-6],[-10],[-9],[-10],[4],[1],[3],[1],[6],[8],[5],[2],[9],[-2],[-10],[4],[10],[-3],[-2],[-9],[8],[-4],[4],[4],[1],[7],[-5],[-6],[9],[-3],[-8],[4],[-10],[8],[7],[-8],[-7],[-3],[-8],[-5],[9],[5],[-1],[10],[-10],[8],[9],[-10],[7],[3],[-5],[-7],[3],[-5],[9],[2],[-2],[-3],[9],[-2],[8],[10],[1],[6],[-8],[-2],[-2],[-9],[-10],[-8],[6],[10],[8],[-2],[9],[-7],[-5],[-4],[-7],[-4],[1],[-9],[-4],[-10],[3],[-5],[9],[-9],[-3],[3],[5],[8],[-8],[-6],[-5],[1],[-4],[-1],[-9],[5],[10],[-4],[-9],[7],[4],[-1],[1],[-8],[-4],[-4],[-5],[-6],[-5],[9],[9],[-9],[6],[-9],[4],[5],[7],[6],[-9],[-7],[-1],[3],[3],[-8],[8],[2],[3],[-6],[5],[-6],[-5],[-7],[-10],[2],[-9],[4],[7],[-7],[9],[-9],[-3],[4],[-4],[-9],[-10],[-8],[-7],[-7],[7],[-6],[-8],[6],[10],[-8],[-9],[5],[9],[9],[2],[4],[2],[-6],[4],[6],[3],[-6],[6],[6],[5],[4],[10],[5],[-9],[-5],[-4],[-2],[1],[-7],[-1],[6],[9],[-5],[-6],[-1],[-7],[-5],[4],[-8],[-8],[-3],[-4],[-1],[1],[1],[5],[6],[-1],[-8],[-5],[10],[-2],[1],[-8],[-9],[4],[9],[5],[4],[-9],[9],[-2],[7],[7],[-4],[2],[4],[-2],[-10],[-4],[7],[10],[-9],[-5],[2],[7],[8],[-8],[7],[-10],[-6],[5],[-8],[7],[-7],[6],[-10],[-9],[3],[3],[10],[9],[-1],[4],[-10],[9],[9],[-8],[-2],[5],[-5],[-3],[-9],[-5],[6],[8],[-9],[-5],[1],[8],[-4],[-7],[-4],[-7],[1],[6],[-5],[2],[-1],[6],[4],[5],[-8],[4],[8],[1],[3],[-4],[-7],[1],[-3],[2],[10],[-3],[1],[-10],[1],[10],[4],[1],[8],[-5],[-1],[5],[-7],[4],[7],[-1],[-1],[8],[2],[-9],[-3],[-4],[-3],[-10],[-6],[3],[1],[-5],[-6],[2],[6],[2],[8],[1],[8],[-2],[-9],[8],[9],[6],[-3],[3],[6],[-6],[-9],[-10],[2],[4],[2],[9],[-5],[10],[9],[-7],[-8],[-6],[-1],[8],[-6],[-2],[3],[-2],[3],[-6],[-9],[-6],[-9],[-8],[6],[7],[-10],[8],[-1],[-1],[-1],[4],[6],[-2],[9],[-6],[6],[-3],[-8],[-1],[10],[-10],[-10],[-2],[-3],[8],[5],[-1],[-5],[1],[-10],[2],[-9],[-10],[10],[1],[9],[10],[10],[-10],[6],[-8],[-9],[3],[-1],[-8],[1],[6],[7],[-7],[7],[-8],[-1],[-6],[10],[-5],[-4],[-7],[-1],[5],[-7],[4],[4],[-8],[-8],[-1],[6],[1],[-8],[8],[5],[-4],[6],[9],[6],[-1],[8],[-8],[7],[-7],[-4],[-10],[-6],[6],[10],[-1],[9],[3],[1],[-3],[8],[7],[-1],[-10],[3],[-1],[-6]], dtype = "int64")#candidate|6297|(968, 1)|const|int64
const_6298 = relay.const([-9.875960,1.147400,2.036517,3.548829,7.012534,-5.474005,7.910690,4.325117,-7.116462,9.126582,5.714254,-0.629450,6.748737,-6.629098,3.141714,-0.997718,-3.219738,-7.523221,-8.817909,-2.994432,8.230206,0.740343,-8.294309,0.360731,-0.405956,9.396590,-0.591270,7.577757,-1.799089,-3.164071,-2.558133,4.310750,-5.916618,-9.786505,9.406281,6.962596,2.105394,-5.659170,5.368286,-1.722860,-5.449949,-0.011053,-2.774401,4.850199,5.230771,-3.440495,-7.119747,8.196756,8.471762,8.418823,-5.875090,-0.561273,-8.038006,3.325635,-4.142823,4.591264,2.951937,-1.626044,4.711183,-2.575786,1.922702,1.392594,0.090696,7.592324,-5.771725,6.745923,9.625756,7.314955,-7.666407,2.790689,-9.560561,-0.838828,-2.887729,5.523119,-1.068381,2.816163,3.057495,3.469275,1.589054,2.553270,9.034185,-7.895487,-9.784316,-4.986152,-6.425936,-9.388306,-8.200113,-9.502874,4.612831,2.063285,-2.293411,4.661029,8.283724,-7.545482,6.577715,-9.453916,-8.394422,2.150717,-5.768273,-7.416680,-6.746862,-2.284433,8.261661,5.771126,-1.559128,-8.753570,2.903184,-1.334267,-2.338391,3.848806,4.689738,-6.397864,-8.040083,-4.117099,-1.217076,3.249964,6.174412,7.659418,6.640383,6.703354,0.980354,-8.578986,-8.498103,4.894498,7.542295,-0.531566,5.003631,-8.090625,9.727100,-2.705393,1.899583,-8.539963,7.150792,5.010776,-3.930846,2.203357,-9.022696,1.035314,-8.670402,2.223076,0.910646,-2.018263,9.315422,2.313380,-3.573213,-3.402940,6.235596,-8.536471,-1.618881,0.209936,9.989823,1.341536,-1.345284,-2.926467,3.884552,-7.029763], dtype = "float64")#candidate|6298|(156,)|const|float64
const_6299 = relay.const([-6.779731,0.650991,6.635652,-9.229963,-7.948655,8.987580,7.379570,-8.634184,1.687922,-8.354794,-1.946902,6.441010,3.723856,-8.193011,-9.579896,6.074157,-1.271050,4.206798,-2.178695,6.882643,6.476793,5.051863,6.557834,6.451310,4.250495,1.090476,-7.596154,-2.359291,-2.965094,-4.919779,-4.840830,7.128539,6.935722,-9.925895,3.337485,-3.398197,1.064338,1.467674,8.302315,8.875863,-7.683457,-9.939367,8.333783,-9.184763,-3.074389,9.742229,-4.582764,4.296530,9.145004,0.698032,5.172905,6.507451,-0.548188,-2.881828,8.056453,-5.486322,-6.381159,-3.030500,4.582165,1.169454,-0.521456,9.266646,-4.138404,-8.673641,-3.122678,-1.146434,3.184033,-4.562777,-2.424105,-6.180409,9.991199,5.318230,3.275287,9.749750,2.237442,-2.490706,6.731814,-4.687055,4.794530,-7.126568,5.825281,8.139326,-6.061514,-6.164789,-8.934463,9.242297,1.489546,0.769123,-7.379866,-8.555947,-1.664531,8.168696,-6.297891,2.371984,-3.564201,3.069676,-0.363959,0.683244,5.852620,5.952167,-2.284769,2.687405,9.157332,-4.114103,4.654333,5.416544,-0.623227,-8.857813,9.982107,-8.683245,0.370385,9.798115,-8.003852,-8.841332,-1.091703,-8.865890,-4.064072,-9.235206,-5.290480,-4.543539,5.538963,7.168814,-7.862924,-9.597599,6.544999,-2.885801,0.640455,-1.856919,-3.513264,4.499229,-0.735752,1.196940,0.120737,7.332513,-7.332905,4.000701,0.887228,9.910665,-6.303922,8.970787,-0.233957,-4.717919,5.845336,-9.075684,-1.336271,-1.849434,7.555496,1.942468,-1.433648,-0.221591,-6.689553,-0.501637,7.820616,-1.755436,-4.034288,4.739319,7.292827,-4.917396,2.269171,-0.931896,-7.239094,-2.301546,-1.103848,-8.105924,-5.035794,3.484269,-8.537574,2.506383,-6.666201,-8.142450,1.085853,7.580734,8.144678,-2.376885,-6.690263,-7.121618,3.887210,-3.117145,3.268096,-9.457757,-2.451647,-9.229603,-0.358900,-4.982964,8.803471,5.547946,-6.249775,6.592148,-5.041027,-4.804057,-0.796691,2.586136,-9.116170,3.551143,-4.494853,5.726030,-8.175840,9.896114,9.597536,2.433432,-1.451416,-5.633154,0.048965,6.036301,8.736579,7.684269,-5.779236,9.487683,-5.910846,-8.622995,0.346262,7.389277,-6.832261,-5.884771,-3.421070,-3.248839,-7.474217,-2.293894,9.609775,6.019111,7.728752,-0.229743,3.856305,-1.952024,1.295393,-9.869235,8.505362,-5.326366,-7.424978,7.882679,-3.326579,-7.538331,-5.195513,-2.186556,-6.103738,-6.844790,-6.620810,4.478979,7.323871,-1.856523,7.704859,9.656184,-8.052232,-0.604177,-4.819651,-4.552778,2.785914,4.279175,8.100595,7.652071,1.515053,6.273400,3.564249,3.515329,3.149620,8.067002,-7.429748,3.035160,-9.388129,0.735631,3.040771,0.013324,-0.356089,2.877389,-7.869675,4.373856,-2.037994,-9.669087,-2.548667,-1.590214,5.090322,-7.400359,-8.717657,-4.173587,8.309371,0.184346,9.246233,0.343535,7.971647,3.420424,-8.630822,6.995554,-2.283949,-5.442764,1.524980,-2.655016,-6.736372,-9.887978,-0.554811,4.406996,1.810982,-6.758555,4.218890,-1.343378,-0.683121,-4.383447,2.925840,-2.362839,2.998476,-5.214882,3.962722,5.777866,1.909045,1.169518,1.435402,3.264659,5.735037,7.559591,3.311136,-6.979408,-2.927145,-0.494621,-0.993998,3.026694,2.480972,8.814972,-2.932077,-7.759135,-2.981270,9.670396,-6.690979,-3.363915,-4.980955,-6.443667,-3.095862,-0.343401,-9.287744,-1.585822,4.325498,-3.498396,3.552342,1.951896,1.798742,8.579945,7.781939,1.646162,7.466603,-3.312219,9.278306,3.822213,7.784115,-9.779932,3.280239,-7.527939,-4.560419,2.999337,-3.880746,1.604394,1.907786,-2.856882,0.345277,-4.638736,8.205468,8.474659,-4.355482,-3.545227,-6.372716,5.246564,3.688004,-5.391232,-5.298719,0.951024,-6.513842,-6.605064,1.977296,2.382329,-4.632959,4.172257,-7.186103,6.545705,-9.052773,-9.139787,-0.772857,-1.176021,4.174466,-1.537474,-8.466083,6.622105], dtype = "float64")#candidate|6299|(378,)|const|float64
call_6293 = relay.TupleGetItem(func_2998_call(relay.reshape(const_6294.astype('float64'), []), relay.reshape(var_6295.astype('float64'), [7, 6, 12]), relay.reshape(const_6296.astype('float64'), [1470,]), relay.reshape(const_6297.astype('int64'), [968,]), relay.reshape(var_6295.astype('float64'), [7, 6, 12]), relay.reshape(const_6298.astype('float64'), [156,]), relay.reshape(const_6299.astype('float64'), [42, 9]), ), 9)
call_6300 = relay.TupleGetItem(func_3006_call(relay.reshape(const_6294.astype('float64'), []), relay.reshape(var_6295.astype('float64'), [7, 6, 12]), relay.reshape(const_6296.astype('float64'), [1470,]), relay.reshape(const_6297.astype('int64'), [968,]), relay.reshape(var_6295.astype('float64'), [7, 6, 12]), relay.reshape(const_6298.astype('float64'), [156,]), relay.reshape(const_6299.astype('float64'), [42, 9]), ), 9)
func_4314_call = mod.get_global_var('func_4314')
func_4318_call = mutated_mod.get_global_var('func_4318')
var_6313 = relay.var("var_6313", dtype = "float32", shape = (240,))#candidate|6313|(240,)|var|float32
var_6314 = relay.var("var_6314", dtype = "float64", shape = (704,))#candidate|6314|(704,)|var|float64
call_6312 = relay.TupleGetItem(func_4314_call(relay.reshape(call_6291.astype('float64'), [2, 3, 12]), relay.reshape(var_6313.astype('float32'), [240,]), relay.reshape(var_6314.astype('float64'), [704,]), ), 4)
call_6315 = relay.TupleGetItem(func_4318_call(relay.reshape(call_6291.astype('float64'), [2, 3, 12]), relay.reshape(var_6313.astype('float32'), [240,]), relay.reshape(var_6314.astype('float64'), [704,]), ), 4)
output = relay.Tuple([call_6291,call_6293,const_6294,var_6295,const_6296,const_6297,const_6298,const_6299,call_6312,var_6313,var_6314,])
output2 = relay.Tuple([call_6292,call_6300,const_6294,var_6295,const_6296,const_6297,const_6298,const_6299,call_6315,var_6313,var_6314,])
func_6322 = relay.Function([var_6295,var_6313,var_6314,], output)
mod['func_6322'] = func_6322
mod = relay.transform.InferType()(mod)
var_6323 = relay.var("var_6323", dtype = "float64", shape = (504,))#candidate|6323|(504,)|var|float64
var_6324 = relay.var("var_6324", dtype = "float32", shape = (240,))#candidate|6324|(240,)|var|float32
var_6325 = relay.var("var_6325", dtype = "float64", shape = (704,))#candidate|6325|(704,)|var|float64
output = func_6322(var_6323,var_6324,var_6325,)
func_6326 = relay.Function([var_6323,var_6324,var_6325,], output)
mutated_mod['func_6326'] = func_6326
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5812_call = mod.get_global_var('func_5812')
func_5813_call = mutated_mod.get_global_var('func_5813')
call_6367 = func_5812_call()
call_6368 = func_5812_call()
func_1109_call = mod.get_global_var('func_1109')
func_1113_call = mutated_mod.get_global_var('func_1113')
var_6372 = relay.var("var_6372", dtype = "uint64", shape = (72,))#candidate|6372|(72,)|var|uint64
var_6373 = relay.var("var_6373", dtype = "uint64", shape = (1152,))#candidate|6373|(1152,)|var|uint64
const_6374 = relay.const([-9.950888,-7.531701,-2.789264,7.931363,3.202698,2.801188,-7.350724,8.874234,-3.382282,-2.471087,2.181238,-3.068687,9.595362,4.179405,-7.386094,6.260697,4.784616,5.919073,-4.995965,-1.279407,-6.966876,2.167580,-8.787301,-7.201645,-8.556993,2.997966,4.125926,9.003693,-3.551260,5.360684,9.186693,8.261957,-2.878471,-4.078144,-2.817341,6.983349,-3.917994,7.669628,5.168198,5.049637,2.876337,7.030778,-4.686014,0.129134,-9.014701,-0.058753,8.352774,-4.966741,-2.030618,-9.515707,2.602804,7.277797,-5.672034,1.937885,7.100093,5.436567,2.657572,4.515897,-7.829365,9.463349,4.502043,-5.597509,5.059036,-9.084462,3.298463,-3.120406,-3.532873,-9.301827,7.622615,9.804389,5.318030,4.435613,1.636650,-5.565826,3.058852,-9.095250,5.637294,6.411089,-8.427294,3.426911,-9.097505,-6.902784,5.556103,-6.750553,-1.760201,4.374488,-5.061870,7.055074,0.065659,7.367582,3.535276,6.869992,-1.709924,8.387893,9.185419,-4.908407,6.859653,-9.914547,-4.076136,4.672047,-7.020031,-7.177835,1.393069,0.429353,1.111195,3.196033,-9.727773,-4.909958,2.991224,4.685104,-5.362755,-5.924199,1.744950,-0.988085,4.732518,-6.300923,1.996789,7.761848,-7.084242,6.825521,5.793587,-5.042504,-6.351139,6.956527,4.986584,-0.067735,-4.296373,8.450315,0.892652,5.297615,4.368372,8.104522,-5.095369,6.245511,7.361372,8.428166,7.055913,-3.181338,-8.841419,7.842362,1.475744,9.968132,-6.872663,5.605347,-9.519312,2.612333,-2.146644,-2.048181,2.274482,-2.137879,7.570801,2.997242,6.515694,-9.889299,3.578208,3.581010,3.225123,6.361913,9.814867,1.644131,0.382280,2.987185,7.191598,7.830077,3.681370,4.179976,2.332071,8.054104,5.470367,-0.028776,8.165401,3.980934,-3.641602,4.198769,1.322281,0.751541,3.603599,-8.268870,4.181803,5.816442,4.392736,7.153761,7.728339,-8.264977,-1.115913,-5.017801,-6.462528,-9.248689,-3.860526,7.123354,-1.128112,-3.680837,0.791679,7.886433,-7.790907,-5.264159,3.861886,-6.843204,-1.102555,2.911956,2.060435,3.392446,6.992548,-6.642865,7.271767,5.118775,3.773562,5.924096,0.618935,3.512676,7.160154,9.660180,3.605051,8.334370,-3.324148,-3.425893,-8.791074,-8.779258,7.673694,0.159465,-3.547916,-1.745955,9.669769,-9.100365,-2.578424,-8.041789,3.815215,3.820024,-4.857132,7.222252,9.885668,-5.279507,4.850138,-7.450360,-1.446942,9.841731,-7.102764,-6.913599,4.175170,-5.297272,-7.962358,1.565568,8.258945,-7.596052,9.650486,-7.823797,6.900514,2.521542,8.675640,3.131015,6.091283,-1.404611,-1.602135,2.671040,-1.814025,-7.482596,9.359190,-7.481121,-6.111577,-8.950136,-0.906659,-8.856745,0.701239,-3.755419,3.608958,-3.837801,-3.196568,8.279781,8.128363,-5.308399,-9.994534,-8.703061,-4.269843,-5.043719,8.763868,5.225007,-0.428965,8.948670,6.558680,-8.542216,1.702839,6.777089,-1.986847,2.007059,-8.874976,5.456863,-1.104818,-2.905472,-4.403543,4.730118,1.553719,-1.332729,-3.034355,5.557755,0.390791,0.477032,2.630228,3.382110,8.751361,9.754140,-0.287640,-8.425365,7.582792,-6.953767,-6.566859,0.063320,-1.740441,7.920734,-0.922065,-9.580847,-7.424112,-5.132999,-5.286015,5.923000,-5.771744,1.896972,1.818037,4.785645,-1.642918,2.009176,5.217050,-4.238653,-9.128966,8.537640,6.393982,-0.183222,5.219101,9.749327,-4.382142,4.539299,8.944392,-0.147543,-7.946392,9.012302,5.308603,5.573598,-9.323477,-3.316097,1.924410,0.872350,8.432970,1.250327,-0.451360,-2.666198,7.782274,-3.006802,9.717575,-2.584845,-0.839460,-6.453146,-5.538591,5.442136,-5.264040,9.521565,3.613513,-8.562933,-2.734041,3.014006,-7.939500,-8.946314,9.924788,-5.016838,4.027894,-1.009471,5.853173,5.863814,4.069796,-5.564367,-3.567884,3.774136,-9.779494,-5.602023,7.949188,8.248655,8.755757,-2.083575,-1.818706,6.625685,6.011648,-3.234288,4.960656,-5.993291,-2.405059,-2.344532,-0.865000,-0.458467,0.954132,5.147735,-1.571999,-1.720556,-4.607112,-3.051420,0.466826,-9.296520,3.449989,3.855639,-4.342990,8.254642,-8.579920,3.857744,-2.594888,0.290317,-7.461204,-9.634248,-6.925813,4.075244,9.752663,2.845798,4.534559,8.271999,-3.325855,3.668079,-5.992336,6.979486,-6.285738,4.075844,-7.108245,-8.445779,-8.797908,0.366480,8.298365,4.723058,-7.647573,-9.897386,6.076309,2.691606,-6.646733,-0.377063,3.008790,-4.818636,2.047311,-7.646632,-1.025709,-7.011566,-4.770930,6.756784,-4.730990,-2.595122,-2.659859,1.497707,6.657242,1.797385,4.647271,-8.712807,-4.785601,1.264585,3.720557,9.838408,-1.126187,-0.879509,-4.511357,5.941127,-8.591114,8.121691,-1.464543,-2.307907,6.223299,4.890438,-4.473092,-9.103851,-1.955064,-9.827835,4.365394,-1.877603,4.229550,-7.558876,-1.497446,3.481696,-9.309358,8.243054,0.952074,-3.266150,-0.238488,0.221503,6.520025,1.704717,1.237563,6.819878,7.244226,9.551440,-6.006211,-0.088404,4.765590,-0.617748,5.292986,-5.041009,6.783233,6.635803,-3.349012,-0.857662,-7.294372,-3.553702,8.223569,1.883631,2.342316,-4.969207,-9.549223,-7.270715,-1.341864,8.752452,3.963742,-4.334261,-6.833647,-1.918316,-0.192259,2.421348,-5.147159,0.544471,8.714273,-2.648765,8.456369,5.005539,-1.091122,5.982690,-8.141055,-5.976325,-3.828102,-6.048046,-9.452625,1.332698,-3.455260,-6.091609,-0.877894,-1.483274,-4.107675,-2.289621,8.430758,3.664245,-7.937925,-9.970402,-4.341141,-8.490806,8.159256,1.817683,5.402826,3.154369,7.810896,-2.566543,9.187111,-2.136013,8.726897,0.284470,-0.716982,-5.121148,7.792950,0.266306,8.557582,-4.462601,-8.297374,2.778773,-5.479636,3.933774,-1.692423,-0.488597,9.393531,9.087073,4.693200,2.611716,4.303156,-1.580042,3.797584,-3.213585,5.761270,1.544802,2.245501,9.481040,5.774463,9.741154,-6.456784,0.202673,-5.058843,2.234589,3.715742,6.940018,-3.960515,1.008551,0.976892,0.185005,-4.572596,5.590150,3.811729,-1.671599,3.592465,-1.725766,4.506885,2.068175,-9.848370,9.994413,-5.255776,-1.355965,3.052504,-0.186488,-3.607948,0.732277,-3.502826,-3.560658,-1.923341,6.235113,-0.143334,8.125136,5.830683,-0.221798,0.757483,-7.455757,-2.529476,5.562126,-1.733363,8.627494,0.236763,-6.641122,0.462115,8.518406,2.734120,8.660435,-7.805142,7.557697,-8.881238,8.454884,9.101425,4.863577,-8.832484,7.535781,-8.787337,5.800924,-9.000663,5.533825,-7.640709,7.574261,3.245745,-8.420578,0.911837,-3.173165,2.547903,-2.921636,0.972660,-0.103298,-6.939556,-2.963735,-3.620550,-1.713467,5.925808,-2.756833,-4.581655,2.654878,6.933179,5.229982,1.408403,-8.536622,6.836733,-0.560763,-2.532077,-4.726161,-0.441703,9.847535,0.060578,4.292839,6.319189,-5.905179,4.615501,-0.436510,5.656730,-8.468092,4.771819,3.027031,2.513916,4.991946,7.534863,-5.009239,-6.380014,-5.320618,7.778995,2.312151,-9.058960,-7.203030,4.516670,-2.680092,-7.249781,-9.291672,5.486615,-6.734358,1.924349,-9.953623,1.292582,-9.387735,-6.520303,4.198724,7.307408,-1.377613,0.809608,3.929918,0.156809,2.140464,-7.224309,7.910728,-0.239785,-4.176064,9.838580,-1.333205,0.532254,6.313966,3.162886,5.681095,2.454545,-8.570179], dtype = "float64")#candidate|6374|(704,)|const|float64
call_6371 = relay.TupleGetItem(func_1109_call(relay.reshape(var_6372.astype('uint64'), [18, 4]), relay.reshape(var_6373.astype('uint64'), [1152,]), relay.reshape(const_6374.astype('float64'), [704,]), ), 2)
call_6375 = relay.TupleGetItem(func_1113_call(relay.reshape(var_6372.astype('uint64'), [18, 4]), relay.reshape(var_6373.astype('uint64'), [1152,]), relay.reshape(const_6374.astype('float64'), [704,]), ), 2)
bop_6376 = relay.bitwise_xor(call_6371.astype('int32'), relay.reshape(var_6372.astype('int32'), relay.shape_of(call_6371))) # shape=(18, 4)
bop_6379 = relay.bitwise_xor(call_6375.astype('int32'), relay.reshape(var_6372.astype('int32'), relay.shape_of(call_6375))) # shape=(18, 4)
output = relay.Tuple([call_6367,var_6373,const_6374,bop_6376,])
output2 = relay.Tuple([call_6368,var_6373,const_6374,bop_6379,])
func_6380 = relay.Function([var_6372,var_6373,], output)
mod['func_6380'] = func_6380
mod = relay.transform.InferType()(mod)
var_6381 = relay.var("var_6381", dtype = "uint64", shape = (72,))#candidate|6381|(72,)|var|uint64
var_6382 = relay.var("var_6382", dtype = "uint64", shape = (1152,))#candidate|6382|(1152,)|var|uint64
output = func_6380(var_6381,var_6382,)
func_6383 = relay.Function([var_6381,var_6382,], output)
mutated_mod['func_6383'] = func_6383
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5220_call = mod.get_global_var('func_5220')
func_5221_call = mutated_mod.get_global_var('func_5221')
call_6403 = relay.TupleGetItem(func_5220_call(), 0)
call_6404 = relay.TupleGetItem(func_5221_call(), 0)
output = call_6403
output2 = call_6404
func_6416 = relay.Function([], output)
mod['func_6416'] = func_6416
mod = relay.transform.InferType()(mod)
mutated_mod['func_6416'] = func_6416
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6416_call = mutated_mod.get_global_var('func_6416')
call_6417 = func_6416_call()
output = call_6417
func_6418 = relay.Function([], output)
mutated_mod['func_6418'] = func_6418
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5498_call = mod.get_global_var('func_5498')
func_5499_call = mutated_mod.get_global_var('func_5499')
call_6463 = relay.TupleGetItem(func_5498_call(), 0)
call_6464 = relay.TupleGetItem(func_5499_call(), 0)
func_1623_call = mod.get_global_var('func_1623')
func_1627_call = mutated_mod.get_global_var('func_1627')
const_6466 = relay.const([-6,-3,-6,2,-1,-1,-7,8,10,5,-8,6,-6,-5,2,8,-4,-4,-3,6,7,3,-4,5,6,1,-8,7,-6,5,-8,-7,-6,-5,-7,3,8,7,8,8,-2,9,8,4,-8,-1,3,-1,6,6,-8,-7,-6,10,8,9,9,-10,3,2,-4,-10,-10,6,6,1,-2,2,-5,-5,2,-5,-3,9,-10,9,-5,-2,7,-3,9,-9,-2,-2,-3,2,-10,-6,1,-9,8,6,5,6,-6,-7,3,-10,6,4,1,-5,-4,-4,-6,-7,-2,-8,2,1,5,7,-5,-2,10,-10,-5,-2,6,3,10,8,6,-9,2,-8,-9,2,5,4,-4,-8,1,-8,-7,-1,-3,-9,7,-7,9,3,-2,3,-2,5,-3,-5,-3,1,3,7,3,5,5,8,-9,1,7,-1,10,3,6,-6,-2,-9,1,1,1,5,-9,-9,3,10,-5,-8,-4,8,10,1,5,7,5,1,5,5,10,-2,5,2,10,6,-3,-6,-10,-3,6,-2,-7,10,-8,7,6,-10,9,2,4,-5,-4,-9,7,-1,1,3,-6,-1,-7,-4,-8,-5,-10,8,5,-2,4,5,-3,-4,8,2,10,10,-2,10,1,-6,-4,-5,-10,10,-8,5,9,-4,7,-3,-1,-6,-9,2,-4,9,7,-9,-2,-10,1,-2,7,1,3,-2,-9,5,7,-8,-10,-8,-4,1,-5,-6,8,-9,3,-8,-6,-1,9,4,5,-6,10,9,1,8,3,-2,-4,-6,5,-5,2,-7,-2,-8,3,-4,-10,-5,-5,8,-10,10,5,3,8,10,-4,5,-6,-4,9,-1,1,1,-10,-5,-1,-4,-1,-4,-5,-10,-9,-6,8,-5,-8,-5,2,-6,-4,5,-5,10,8,-2,-10,3,-7,-6,8,9,8,6,9,4,-2,9,-8,1,6,-8,-8,-6,9,-10,-5,-7,-3,3,-3,-7,6,2,8,-7,-1,-1,-7,3,-2,4,-2,-10,-4,-8,2,3,3,1,9,6,-4,-8,-5,-8,6,4,-3,-2,9,-5,5,-8,-3,10,6,1,-4,-10,2,5,10,-5,-4,-1,8,4,3,-4,9,-10,1,-5,-2,5,5,-3,9,-1,6,-8,9,8,1,10,-5,5,2,2,-6,-2,-8,9,5,-2,3,5,-1,-6,4,-2,-6,8,8,-4,8,-7,-2,-6,6,8,-10,-3,-8,3,5,-3,-4,-1,-3,-7,2,9,-10,-9,-7,-8,-9,-9,-10,-9,10,7,6,-6,-2,2,-7,-8,-10,-7,-3,5,8,1,6,4,-5,-2,9,-10,1,7,-6,8,9,2,-2,5,1,-9,-7,5,-4,-3,-6,-5,6,6,-4,-10,2,6,1,4,-9,-8,-6,8,-1,4,-5,-6,-1,-5,-9,-10,8,-4,9,-2,-3,-5,-5,-2,6,-6,4,-4,-6,-2,5,-7,9,-4,1,7,8,6,6,4,3,3,-3,4,7,6,9,-6,7,7,8,4,3,-1,-6,-1,4,8,-2,-7,-10,10,6,-8,-8,1,-6,-3,-4,9,9,9,-5,-1,9,7,-2,-9,-5,-3,1,-8,-10,-7,5,-4,-10,-8,-2,-4,-8,10,-8,-8,5,5,-5,4,-5,-8,9,-7,-7,-5,-7,-9,10,2,-8,2,-2,-1,1,2,6,-8,-4,-5,-3,9,9,-2,-7,8,7,-9,6,-7,5,5,-9,-6,10,-3,10,-3,-10,-8,1,10,-8,10,1,3,5,5,10,9,3,-5,4,3,-4,8,-9,-5,1,10,-1,8,-10,-3,6,-2,-4,3,-4,-1,-7,4,-9,-2,-4,-2,5,2,5,-6,7,-10,-5,-8,-7,-9,-10,-10,-4,9,5,3,-3,5,-10,9,-9,8,-1,-6,7,-3,-10,6,-7,10,-8,2,-7,9,8,-5,-6,4,1,-6,-5,5,-3,-7,-8,4,9,-7,-3,-4,-4,-1,-1,-8,4,3,2,-5,9,-7,1,2,7,6,6,2,-8,10,7,4,-1,-1,4,-10,-9,9,10,10,3,-1,8,10,-8,7,-8,7,7,4,3,4,5,-2,7,4,1,-8,9,-5,10,-2,-3,10,6,-1,10,-3,-9,9,10,-7,-1,10,-4,-6,-6,-3,-9,9,6,6,-3,8,7,-9,3,10,10,-3,-2,9,9,-7,4,6,3,-8,5,10,5,1,-7,1,8,2,-5,9,2,2,3,-7,-10,-5,-1,6,-6,6,-7,-1,-1,6,5,-9,3,-4,-9,-3,8,-3,4,-6,6,4,-9,10,-7,5,2,-8,3,-3,4,1,-3,2,-6,8,8,-7,6,-6,-4,6,3,2,7,-10,1,-5,-6,2,5,5,-3,-2,-10,3,-9,9,-4,-10,6,5,1,-4,9,10,7,7,8,10,-8,-9,3,-9,-10,-9,8,6,4,-6,-7,6,10,7,-3,-5,9,9,3,-8,-6,-1,-10,4,8,-6,-4,2,-6,-1,5,1,9,5,-8,7,1,10,5,-5,2,2,4,2,-3,8,-9,4,-8,2,-4,-2,6,-6,6,8,3,-7,-3,6], dtype = "int64")#candidate|6466|(968,)|const|int64
const_6467 = relay.const([[-8.795068,4.992456],[-9.991199,9.662047],[-5.518249,6.255091],[-9.957542,2.843985],[-6.894377,0.329508],[7.507108,-4.525884],[8.337222,-0.739250],[9.403147,-3.023353],[-9.701236,-8.500402],[-1.318643,-1.495175],[-5.633174,7.086620],[7.782378,0.197097],[-6.668010,-2.039126],[7.748298,4.364494],[-4.782607,-6.747611],[-3.194266,4.375930],[-1.335640,-9.655855],[-0.567859,-8.496036],[-4.741491,2.721510],[-6.925670,-7.947919],[0.476194,-9.000654],[1.224829,7.414095],[-6.047225,7.820226],[7.561392,7.079987],[4.030833,-5.708819],[7.387783,-7.859756],[-3.641289,0.288153],[-4.957363,-9.787416],[4.237622,4.545095],[-1.419718,-4.968868],[-2.333657,-6.670870],[4.285076,-8.129180]], dtype = "float64")#candidate|6467|(32, 2)|const|float64
call_6465 = relay.TupleGetItem(func_1623_call(relay.reshape(const_6466.astype('int64'), [11, 8, 11]), relay.reshape(const_6466.astype('int64'), [11, 8, 11]), relay.reshape(const_6467.astype('float64'), [64,]), ), 1)
call_6468 = relay.TupleGetItem(func_1627_call(relay.reshape(const_6466.astype('int64'), [11, 8, 11]), relay.reshape(const_6466.astype('int64'), [11, 8, 11]), relay.reshape(const_6467.astype('float64'), [64,]), ), 1)
func_2113_call = mod.get_global_var('func_2113')
func_2116_call = mutated_mod.get_global_var('func_2116')
const_6476 = relay.const([4.480691,-8.436871,8.970524,7.143225,5.944863,-8.322655,-2.727711,2.890131,-2.086202,-6.205014,-0.601569,4.630972,-9.002807,4.427680,-9.173708,0.236285,-6.858600,0.410869,-9.293049,-5.916028,-4.680184,1.627515,-0.958549,9.389951,1.887105,3.085661,5.785350,-2.492188,-7.798586,4.299572,3.667112,-5.750757,6.432437,-8.006492,-9.225397,1.777472,2.579398,3.744660,5.236899,-4.444470,-0.336314,1.234379,8.604760,-1.919599,0.137360,-7.053691,-9.886987,-6.841591,-7.253804,3.989022,3.089843,-4.437838,4.990751,-2.706346,-0.121364,2.072838,4.701791,6.288413,-3.422931,-4.531402,1.900549,5.756135,1.243833,7.130192,-4.194003,2.708554,0.509664,-3.511609,0.434269,-9.301405,-3.803172,4.109658,-3.795565,-7.699166,-9.776377,-3.743312,5.320047,6.339753,-6.264024,4.211031,9.303901,-0.619474,-2.398318,7.413312,-0.808416,2.639389,5.991905,-6.668415,5.490734,6.989401,3.064747,-2.958875,6.274593,5.028174,-6.689107,-5.267093,5.483962,1.482412,5.489533,-3.754349,-1.820229,-3.134839,-7.310521,6.193550,1.521773,5.150250,-2.601767,-6.284075,6.592703,0.998081,-7.937076,3.350330,5.472944,1.597781,6.562669,-3.187413,6.735760,8.985138,3.146766,-6.544028,4.461557,4.892491,1.544161,2.297245,7.418272,-8.940153,-9.206550,-1.853741,-2.759310,3.902633,7.434082,8.161652,-5.328851,-0.075751,1.078418,8.131058,-7.045335,6.640965,-7.970571,-9.224325,8.629481,8.163473,-6.017409,7.493551,4.525269,-5.159392,-3.245130,3.108993,-5.311864,-6.984625,-4.205861,5.942646,-7.010826,-0.185768,5.865995,8.025752], dtype = "float64")#candidate|6476|(156,)|const|float64
var_6477 = relay.var("var_6477", dtype = "float64", shape = (378,))#candidate|6477|(378,)|var|float64
call_6475 = relay.TupleGetItem(func_2113_call(relay.reshape(const_6476.astype('float64'), [6, 2, 13]), relay.reshape(var_6477.astype('float64'), [1, 378]), ), 0)
call_6478 = relay.TupleGetItem(func_2116_call(relay.reshape(const_6476.astype('float64'), [6, 2, 13]), relay.reshape(var_6477.astype('float64'), [1, 378]), ), 0)
func_4414_call = mod.get_global_var('func_4414')
func_4415_call = mutated_mod.get_global_var('func_4415')
call_6481 = func_4414_call()
call_6482 = func_4414_call()
output = relay.Tuple([call_6463,call_6465,const_6466,const_6467,call_6475,const_6476,var_6477,call_6481,])
output2 = relay.Tuple([call_6464,call_6468,const_6466,const_6467,call_6478,const_6476,var_6477,call_6482,])
func_6483 = relay.Function([var_6477,], output)
mod['func_6483'] = func_6483
mod = relay.transform.InferType()(mod)
var_6484 = relay.var("var_6484", dtype = "float64", shape = (378,))#candidate|6484|(378,)|var|float64
output = func_6483(var_6484)
func_6485 = relay.Function([var_6484], output)
mutated_mod['func_6485'] = func_6485
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6564 = relay.var("var_6564", dtype = "float32", shape = (3, 1, 16))#candidate|6564|(3, 1, 16)|var|float32
uop_6565 = relay.exp(var_6564.astype('float32')) # shape=(3, 1, 16)
output = uop_6565
output2 = uop_6565
func_6567 = relay.Function([var_6564,], output)
mod['func_6567'] = func_6567
mod = relay.transform.InferType()(mod)
mutated_mod['func_6567'] = func_6567
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6568 = relay.var("var_6568", dtype = "float32", shape = (3, 1, 16))#candidate|6568|(3, 1, 16)|var|float32
func_6567_call = mutated_mod.get_global_var('func_6567')
call_6569 = func_6567_call(var_6568)
output = call_6569
func_6570 = relay.Function([var_6568], output)
mutated_mod['func_6570'] = func_6570
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6583 = relay.const([[[-1,8,5,2,9,4,-1,-5,-4,-9,6,6],[9,4,5,9,5,9,-9,1,6,6,-8,4],[3,-4,1,8,-6,-2,-10,-9,10,9,9,-9],[-5,-2,-5,-4,-2,-9,10,2,10,7,5,-7],[3,6,5,-7,-2,5,7,-8,-10,3,2,6],[-1,6,-10,-3,-8,-5,6,-3,-2,6,8,10],[10,-7,-9,8,5,-6,-6,10,-9,7,8,6],[10,3,7,-7,-7,1,7,-7,-1,9,-3,-3],[5,-10,2,5,7,4,-1,2,7,-5,-1,9]],[[7,-1,-9,5,-4,5,2,-10,9,-4,6,8],[7,8,-8,-2,-4,-7,7,5,8,9,-3,8],[2,-10,-6,-2,2,3,-4,4,9,-3,5,8],[-9,1,6,1,1,-8,10,4,-9,-3,-3,3],[10,6,3,9,1,-3,9,-8,-5,-1,-6,10],[-1,10,-2,6,8,-7,8,-2,-6,-7,-9,9],[-3,3,-7,-7,-6,4,10,1,-2,9,-6,8],[-6,-1,1,-2,-10,4,-8,8,5,-5,10,3],[6,-1,-2,6,-3,6,-7,-8,3,-6,10,8]],[[-6,4,-1,-9,8,-1,8,-10,-6,-6,-7,2],[6,-3,-4,4,6,-9,5,-3,-7,-5,4,7],[-4,-3,-7,2,-4,10,8,1,3,10,-7,3],[9,-8,-5,-1,2,-1,10,2,8,4,-9,-1],[-5,4,-6,-6,5,8,-3,-1,4,3,5,7],[-9,-1,-8,-3,-5,-4,4,-8,6,-2,-6,3],[5,3,9,-5,-1,-1,7,1,-2,3,-7,-6],[-6,3,1,1,9,-8,-3,1,7,4,-5,-6],[-2,-3,-1,-5,7,-10,-1,4,6,-10,-3,5]],[[-10,-6,4,10,-2,-8,-1,-1,-8,-9,-5,-10],[-5,1,3,9,-5,-8,8,6,2,4,-6,4],[-9,6,5,2,8,9,-9,5,-7,2,3,-7],[3,-10,8,4,8,9,6,5,-7,5,5,2],[5,9,-4,-2,-8,8,8,-3,-4,10,-6,-5],[-9,2,2,-8,-8,4,-3,-10,1,-7,2,7],[-2,5,2,-4,-10,-9,-8,9,5,-7,10,-7],[7,-9,-4,2,-3,-6,5,-8,-6,-7,-3,10],[10,6,9,10,-9,-3,-5,-1,-2,-5,-6,-3]],[[-9,7,-9,-2,8,-8,3,-3,6,5,10,2],[-2,-10,10,-3,6,-3,-10,-5,-4,5,2,2],[-3,1,-5,-7,8,7,3,-6,-1,5,5,10],[-4,9,-5,3,-9,3,-5,-3,10,-10,-2,-1],[7,-4,5,-4,-1,4,-7,3,-9,-2,-7,-9],[6,9,8,-1,-5,9,-9,8,7,7,6,2],[8,-4,-8,1,2,2,-9,5,7,5,-7,5],[4,-8,4,8,3,-7,4,-6,8,-8,-2,3],[9,3,-1,-1,-2,5,-8,-8,-6,-5,2,1]],[[-1,9,4,-1,1,8,-6,-5,8,6,3,-9],[8,-1,7,-2,-1,-2,-4,7,-8,-5,3,-3],[-10,-9,3,-3,-3,-3,8,-9,-6,-5,1,-4],[-6,3,9,-2,-5,3,8,10,4,-2,-7,-3],[-9,3,-10,-10,8,-8,9,5,9,-3,7,8],[5,4,-10,-8,3,2,-8,10,8,-2,-7,3],[8,5,-9,7,-5,-7,5,-8,7,-2,4,3],[-1,3,6,4,-1,-9,1,4,4,3,-9,10],[10,-4,-5,10,-4,3,-8,3,-7,-10,8,-6]],[[-7,4,9,3,5,6,6,7,7,-1,-9,4],[9,-4,-8,-1,-9,-3,8,-6,3,2,-7,1],[-9,9,-7,3,5,-2,8,-7,8,-5,-6,-9],[4,10,2,-3,6,-10,5,8,3,-2,-5,9],[-1,-2,-5,7,6,-1,1,-1,6,-9,-7,10],[8,4,-2,-9,-7,-9,-1,4,-6,-8,-8,5],[10,-4,2,10,7,5,5,4,4,6,2,5],[-2,-6,-1,6,-4,10,-6,5,-4,-5,-4,-3],[-2,4,-9,-3,-1,3,1,-5,10,2,6,9]],[[8,1,3,-10,2,-1,4,-4,-7,9,6,5],[-9,-10,-4,7,3,4,1,-2,-10,4,9,1],[2,-5,3,-4,7,-9,5,3,-5,5,-10,7],[-2,-4,-6,8,-4,-8,-3,1,-6,-10,-8,10],[-1,7,2,3,-6,6,3,-2,6,-6,-2,-10],[-9,9,5,-1,2,2,-4,9,-4,-2,6,-4],[3,5,6,2,-6,-3,10,-1,-3,-8,8,5],[-10,-6,2,-3,9,10,1,-3,5,-2,-1,7],[6,1,3,-5,-4,1,3,10,-10,-1,4,-2]],[[1,6,-8,8,-8,-9,6,4,-5,7,-9,-1],[-9,3,-6,4,8,-1,-3,-2,9,-2,5,4],[-2,-9,-8,-1,-1,-2,-7,6,6,-4,8,2],[7,-10,-1,-2,5,-4,-2,-10,9,-9,8,-4],[3,-5,-5,-8,-4,-7,-5,10,2,3,-10,4],[4,-6,1,7,1,6,-3,-10,-5,2,8,1],[7,-2,8,-6,3,5,3,7,7,2,10,-7],[-1,-8,-2,-6,5,-7,6,-5,5,-3,3,-4],[5,-10,-10,-3,-7,-9,-10,-9,-5,-9,-10,-1]]], dtype = "uint16")#candidate|6583|(9, 9, 12)|const|uint16
var_6584 = relay.var("var_6584", dtype = "uint16", shape = (9, 9, 12))#candidate|6584|(9, 9, 12)|var|uint16
bop_6585 = relay.not_equal(const_6583.astype('bool'), relay.reshape(var_6584.astype('bool'), relay.shape_of(const_6583))) # shape=(9, 9, 12)
output = bop_6585
output2 = bop_6585
func_6591 = relay.Function([var_6584,], output)
mod['func_6591'] = func_6591
mod = relay.transform.InferType()(mod)
mutated_mod['func_6591'] = func_6591
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6592 = relay.var("var_6592", dtype = "uint16", shape = (9, 9, 12))#candidate|6592|(9, 9, 12)|var|uint16
func_6591_call = mutated_mod.get_global_var('func_6591')
call_6593 = func_6591_call(var_6592)
output = call_6593
func_6594 = relay.Function([var_6592], output)
mutated_mod['func_6594'] = func_6594
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4781_call = mod.get_global_var('func_4781')
func_4783_call = mutated_mod.get_global_var('func_4783')
call_6635 = relay.TupleGetItem(func_4781_call(), 0)
call_6636 = relay.TupleGetItem(func_4783_call(), 0)
output = call_6635
output2 = call_6636
func_6637 = relay.Function([], output)
mod['func_6637'] = func_6637
mod = relay.transform.InferType()(mod)
mutated_mod['func_6637'] = func_6637
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6637_call = mutated_mod.get_global_var('func_6637')
call_6638 = func_6637_call()
output = call_6638
func_6639 = relay.Function([], output)
mutated_mod['func_6639'] = func_6639
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6651 = relay.var("var_6651", dtype = "float64", shape = ())#candidate|6651|()|var|float64
const_6652 = relay.const([[[0.756426,-9.122669,-8.162677,-8.366973],[9.069354,-5.574530,-0.170698,0.605270],[6.713944,-6.286984,-2.151587,3.880804],[2.046558,5.444598,0.713854,6.332354],[3.123308,6.346861,-9.417404,-3.000355],[9.319495,4.575169,-1.129636,9.812167],[1.446336,-1.298172,-6.865061,9.800651],[3.803934,-1.163628,8.426071,-4.127389],[4.919785,-9.974039,9.826000,6.285294],[3.863561,-5.785810,-1.718939,4.840072]],[[-0.255575,2.191035,-2.721656,-5.478996],[3.217705,-6.512074,-9.927627,-3.431805],[-7.008883,9.468789,6.649368,-7.443536],[8.405321,1.651648,1.416010,-3.883562],[-0.974888,-0.552849,-4.664711,-2.550176],[3.038264,6.696504,6.814207,9.619862],[-2.517808,-0.998773,-0.980741,9.473012],[2.992135,8.215733,7.939367,-4.693123],[7.621294,-2.872262,-3.902380,-5.952031],[4.656057,8.987831,6.308191,2.757882]],[[-9.039347,9.115904,-6.665345,-9.061768],[1.241613,-8.109942,8.803569,-3.965564],[-2.622405,1.312869,-9.261059,-8.199056],[1.295403,-1.422865,1.215622,-6.994138],[2.710397,-7.619252,-5.720692,-4.307696],[-4.417197,3.891247,9.162843,-9.339058],[-0.160724,-2.060289,4.145941,7.858177],[1.576287,2.936318,4.323704,-2.852856],[-1.275063,-3.365442,9.085630,-0.015027],[-6.303167,-3.245649,-3.179005,8.280442]],[[-5.130287,8.859596,-7.368751,-9.764236],[-0.376534,-2.022849,1.615190,1.468584],[4.494519,9.277331,-5.274076,-0.676521],[5.261365,-1.029248,-2.927930,-3.655511],[-8.516702,-6.606671,-4.849422,-0.928751],[1.602989,-6.746149,9.357175,-7.027236],[-5.486040,5.604231,8.848649,4.942040],[-4.775929,-1.815135,6.929683,7.511628],[-9.289076,-2.523175,-1.581486,-8.792297],[-8.587511,5.208421,-0.544684,-7.724908]],[[9.727906,8.806397,-1.557253,6.295653],[-3.316421,7.502618,-7.820322,1.821598],[-9.357477,-1.361387,-8.014183,-2.881377],[6.040231,-9.492157,7.561415,-1.273537],[0.981571,-5.386565,-9.271280,-7.912599],[7.340659,-3.621430,0.763635,8.960044],[-5.887539,-0.244187,-4.610943,0.851820],[-7.060827,1.285332,-4.930235,-8.608210],[7.853045,9.719758,-9.655556,-0.141147],[0.102331,-8.563709,7.408957,9.671434]],[[7.950920,-2.532883,-0.432938,7.951976],[-1.189489,3.092360,4.093083,-1.601166],[-1.283685,-4.417651,3.896229,-7.854482],[-5.684746,6.792697,-6.132536,7.260052],[6.827557,7.768404,2.678027,-8.180929],[9.554299,-5.231789,-2.533556,1.182132],[2.044190,9.796281,7.930423,3.886274],[-5.987251,2.723600,2.095930,-6.581458],[-9.790964,7.077003,4.806431,6.859383],[4.474342,9.112590,-4.366459,-5.185236]],[[-0.106555,4.311040,7.830960,3.793530],[4.374406,9.361865,2.442692,6.943679],[4.375156,8.591687,5.036085,-2.427297],[0.606202,-9.320020,-1.612584,6.392924],[-4.712409,-2.001018,7.075295,-5.649828],[-2.124099,-7.708689,7.232615,-0.183224],[-1.130619,7.855542,-7.418467,-4.440228],[0.145276,-7.005369,0.686300,8.839191],[-6.213039,5.340487,1.390391,-4.776070],[4.019176,-5.353589,0.072373,-8.884647]]], dtype = "float64")#candidate|6652|(7, 10, 4)|const|float64
bop_6653 = relay.less(var_6651.astype('bool'), const_6652.astype('bool')) # shape=(7, 10, 4)
func_2523_call = mod.get_global_var('func_2523')
func_2528_call = mutated_mod.get_global_var('func_2528')
const_6659 = relay.const([[-9,-10,-3,-4,-2,5,9,2,-5,-6,-1,-7,-6,1,-2,1,-9,2,9,-6,2,2,1,-3,-2,7,1,-6,-9,-10,-8,-6,1,1,-5,3,-8,1,1,-8,-4,8,-9,2,-5,-2,-5,-10,-6,8,-5,9,6,-5,-7,-1,9,4,-4,-5,3,2,6,4,-10,-5,3,-10,-5,5,-7,-1]], dtype = "uint64")#candidate|6659|(1, 72)|const|uint64
var_6660 = relay.var("var_6660", dtype = "float64", shape = (75, 3))#candidate|6660|(75, 3)|var|float64
const_6661 = relay.const([9.833548,-5.319567,3.190233,3.713449,6.997257,-2.698959,-8.372472,4.760440,9.977472,-6.760604,-0.471826,-0.954869,3.921664,-1.782008,8.747547,0.543493,6.566766,-8.277947,-3.422327,4.101633,4.340396,-7.364492,3.471192,-9.791341,-1.149701,-5.335203,9.916069,-4.025539,-8.698679,9.252061,-1.466515,-8.798105,-5.143973,6.574132,-7.670038,3.206004,-1.826800,9.102264,9.648698,-5.064435,-9.661625,9.262527,-7.786356,-5.613884,-0.052587,-7.680520,0.526564,-2.630433,0.239616,-6.080408,-3.532556,8.244935,0.308334,6.480199,-1.280658,1.306347,-9.014782,-0.799370,-6.894091,8.272396,-6.443050,9.560107,-8.225647,-7.428961,8.314857,1.767989,-6.426755,-5.590897,2.154495,-4.707191,-7.502198,0.205235,-9.598923,4.240901,-4.655873,2.625458,-4.324651,-2.268112,9.518200,-6.958767,6.649611,-2.072527,7.548393,-1.136256,-8.704296,-5.536089,-3.910678,-8.256820,-3.615934,8.685479,-9.602847,0.585054,8.563240,-2.058657,-4.177358,-3.172140,-8.455877,8.553966,5.856980,5.666085,6.474545,-7.363356,8.770622,-4.719678,-8.260273,-7.030356,7.438243,3.642199,-5.515717,4.078964,9.373740,-2.798299,-8.441244,2.542395,1.933788,-1.172435,-8.094388,-2.735455,0.133499,4.640520,-3.839487,-0.053514,-9.187594,9.072125,4.632195,5.031910,-9.333981,5.666055,-7.610886,-6.693759,8.093776,-6.708672,-8.390334,6.707772,7.564934,4.634363,-5.819851,2.209944,-2.823894,2.531043,1.956223,-6.010390,3.943406,1.169694,-8.842675,0.678214,-8.105074,0.269284,8.599630,-9.389139,-8.587306,-4.773236,9.589416,7.988891,-5.843318,-1.619532,1.271425,6.992695,-7.141168,-0.700408,1.992649,-5.708973,0.884358,-8.571367,-9.989950,-9.573813,-3.696434,7.618267,-3.772623,6.499839,-2.181349,2.123507,-8.377839,-6.926929,3.133599,4.819071,-3.006921,-3.106223,-6.246834,-2.602445,0.667779,4.364503,-3.760312,7.840201,2.496455,5.568332,-8.104904,0.247605,-5.402414,3.346363,1.785171,-0.578972,-6.034537,2.032906,1.060813,5.894657,-8.868582,-4.563557,-4.376755,-0.252024,9.661666,1.891605,-0.869437,-6.533189,-8.009566,-7.071493,9.364884,3.197797,8.118090,-5.342288,0.443049,7.583070,-2.576568,-4.159198,9.818584,-7.006256,-4.111541,5.505325,-1.809504,4.773513,4.376493,-7.454023,-5.011919,7.254821,1.128493,-6.868208,0.394802,-2.038312,-8.007058,-5.573400,9.384591,-2.784243,-8.552144,-8.950282,2.681253,3.229552,2.852792,6.574202,-8.079505,9.566984,-0.614034,-8.439578,0.156001,1.545688,6.998902,-3.473173,-4.481356,-5.241625,-7.251766,-1.384747,5.205821,-9.451507,8.307314,-7.512357,-2.570058,5.148899,-1.732612,3.798071,2.563262,9.394333,-3.975376,5.505785,-8.404130,-7.430493,7.463129,-9.445567,-8.747057,1.814344,1.734845,4.380180,-0.217266,-1.869942,-1.118857,-6.794067,9.065605,-5.175902,2.078132,-1.160465,-6.042023,-7.304884,4.604600,-0.063936,-3.294290,-9.044906,1.920773,9.659115,-9.349684,-3.659867,6.541710,-3.377277,-8.792654,2.331230,0.133463,4.165399,-1.716115,3.953550,9.131093,8.587156,4.617524,8.060034,-4.215904,-9.187753,-8.159633,6.711498,-2.033974,-4.895676,2.185235,-1.107759,-9.050889,-8.222658,-9.885787,-1.218235,4.344175,8.929648,3.369432,0.410217,1.602603,8.596074,9.964002,-3.369539,-5.296285,-8.924672,-1.793147,-7.567669,3.124855,2.588978,-8.885989,5.318408,1.204237,2.398781,3.525666,-0.478779,-9.029028,-5.681708,5.604036,4.469054,-9.712709,3.698621,9.484831,9.846029,-0.312484,-8.834529,-2.026355,-9.943483,-4.217636,4.718488,-1.326950,-1.215672,0.274310,-7.827465,9.331692,-2.508440,-6.102670,-6.992746,-9.780587,-6.789093,-1.161423,5.676254,-7.791930,8.214421,9.213805,-5.037978,-3.585319,0.228679,4.807683,-2.612976,2.426235,-3.601456,-9.928071,6.682917,-0.022905,7.699552,-8.605079,-8.411080,-9.737177,7.298405,-4.880829,-0.649603,3.449679,-9.631334,5.287758,3.373986,3.408950,-3.476099,6.178558,-2.864137,2.541573,-5.265993,7.347888,-1.800707,-1.542150,9.467995,4.186680,-6.668622,1.296753,-4.817231,7.372588,-9.548952,5.571718,2.364536,-2.086397,1.386336,0.865536,-7.912094,-2.712358,9.624531,-6.182326,1.950509,-3.447516,-3.332944,-4.076975,-0.007323,1.380390,-2.166283,-0.804622,5.865355,-6.060237,-4.031245,-6.260804,-0.723383,-0.923319,-3.119097,-9.832464,-7.981663,7.799754,2.038564,2.948488,6.038704,-9.586202,-0.239020,9.238321,2.371090,-2.992218,-0.420000,-5.562735,2.439791,-3.899856,-6.252783,7.029082,5.509447,2.093941,-9.150384,-4.050481,9.930807,4.667390,8.560720,8.096899,-9.159976,0.302172,8.964755,4.668867,-7.332337,-2.861712,4.517122,6.233309,-6.728199,8.116609,-9.372923,-1.722939,-1.894140,9.787306,4.302080,-5.024854,-3.075472,-7.110059,-5.907330,-9.097990,6.889940,8.438230,-0.807258,1.998295,1.195493,7.050715,-6.328852,-0.646635,9.849236,3.949542,-2.500824,1.129110,3.430279,-4.239295,3.163920,-3.570900,8.463265,7.345228,-0.735263,-4.869172,5.995645,7.588532,-6.411401,-6.363141,0.542680,-5.193765,-1.555931,-2.627261,1.663967,2.119183,2.007135,9.059897,0.430761,-5.760824,0.703496,6.680036,-9.380754,-1.433916,-2.800532,5.377577,-6.092019,-3.001058,9.602450,-5.647410,6.290469,7.698858,9.085124,-4.009503,-5.981026,6.999230,0.914843,-1.335500,2.221642,-0.727543,-1.183825,-1.382763,8.085118,3.867496,1.926780,3.548678,9.762630,-4.117247,2.483077,8.832400,2.836133,4.311963,4.303430,6.405582,1.400397,2.897925,3.949273,-9.158462,-0.324429,6.397620,-8.855447,-0.006153,4.731512,-0.741514,2.230969,-5.141751,-4.286590,-3.660977,-5.879344,7.531991,8.178983,9.437083,-6.362226,-3.075665,3.329233,-0.906339,-3.382475,2.102231,2.205637,6.969701,6.222440,-1.362144,0.938988,4.917363,-2.857106,5.050691,8.476453,-7.114494,7.757526,-6.810595,-0.426581,-3.954860,-8.608700,-5.167104,0.227392,-7.417793,-7.667377,7.733002,1.192307,1.163924,5.909736,-4.881542,5.720953,-9.790933,6.447724,4.034942,7.058117,-2.007866,9.628561,-5.766225,-8.731488,8.497713,4.587463,9.964592,0.373665,-4.842195,5.541517,-0.659905,4.298799,7.365635,7.461304,-3.820547,-1.186894,-6.476858,9.691754,5.602753,-2.675793,-4.571679,5.742271,-4.274515,-4.864601,8.647409,6.807345,-5.726893,-3.315305,0.622593,-8.697520,-3.085504,2.065116,-1.667050,9.195815,-8.910230,-2.384575,8.723736,-1.316632,0.089464,-1.560732,4.905574,-6.204311,-8.707728,3.277492,-2.749829,9.553272,0.726492,-9.686845,-4.179873,0.471145,6.926762,7.009324,7.369340,-7.579324,6.104563,7.708632,9.688858,-4.693682,-5.266070,5.186416,-0.900667,6.097680,4.742846,4.478343,-8.064172,3.587967,9.440976,-3.401989,-3.061134,8.664440,-5.951884,-0.751391,-7.163667,5.819498,9.116648,7.668713,-4.843976,9.431843,-0.903749,4.638266,9.082808,-2.488401,9.527684,3.727573,-1.048554,1.030225,4.581595,-1.043740,2.003054,-5.388634,-9.937808,-5.484349,-9.982478,9.803933,-7.533166,0.942932,6.171904,-7.525639,4.518778,-0.294378,-3.316247,-1.245222,-5.301163,8.148356,-9.793797,-1.492230,-4.072557,5.921364,-2.368437,7.388306,3.577671,-5.527308,2.247154,-6.027513,-1.366820,-5.529429,-2.668890,-5.489325,6.933628,-0.416978,9.620117,-8.912210,4.248103,-1.321971,-6.683871,6.955552,3.776236,-1.514625,-0.601032,0.182894,-1.550153,-3.642977,-1.863173,7.017232,-3.692754,9.970439,-9.479166,5.180124,-0.295880,5.609660,-2.773910,-2.886321,-2.330126,-0.329733,5.319863,1.791092,4.886713,7.708616,-0.866128,2.918900,-9.860299,-8.675743,-6.485275,5.039873,1.701291,-5.486708,3.164406,7.704729,1.198948,-3.943097,0.344384,-8.728499,2.795294,-1.865716,-8.465652,5.982682,9.240316,6.538916,2.236901,-4.362819,0.735677,-7.143834,7.605157,-3.908389,8.197757,-8.842823,-0.734670,9.326785,-9.132823,5.993785,2.563747,1.928572,-0.831793,9.192845,8.467990,0.503165,-0.946188,7.950576,3.857959,-3.261116,0.067102,-1.048727,-2.951094,1.386796,9.620532,2.054772,8.715187,8.797114,-8.862439,-6.598843,-7.246481,-9.850137,0.345681,5.285030,-0.502572,-6.454536,-8.114046,0.492642,-3.354196,0.029362,-6.925095,6.627701,9.018793,2.094488,9.697674,-5.653250,8.373119,-1.603598,-7.763691,-9.200167,7.450006,-3.032744,5.016182,-7.931644,7.294199,8.649133,7.987519,2.828310,-5.735723,-9.730835,-0.311249,5.997973,6.151348,8.558091,2.140513,-4.229157,-4.774414,-2.810544,0.183856,7.986330,-0.454046,-5.686437,6.063266,1.850854,-4.419013,3.231406,-3.867451,9.111556,-7.248725,1.619455,-5.585545,4.378840,9.659033,-2.855817,-4.364640,4.640891,-5.456316,-4.017727,1.872967,9.076003,2.808311,4.152098,-1.851576,-6.996366,8.463463,-2.815773,2.285375,-7.481613,-8.648977,3.618870,-2.739026,4.043969,-9.415071,7.171854,3.535383,-8.464590,0.006080,-5.738265,-4.505764,4.408406,0.571964,5.847585,1.152434,5.774738,-3.125080,-0.090217,2.153143,6.878815,-4.173087,0.532195,-8.726681,-7.062182,8.467981,8.198498,6.603716,4.398592,-5.201499,-2.595806,-9.632627,1.435821,-3.775903,-3.494940,-1.473433,-4.629885,-6.348644,-5.667961,9.996526,-7.867863,-6.062247,-1.691218,-8.263262,-8.558392,-0.153836,-3.233274,-2.269464,7.774868,-5.352347,-8.245674,3.569763,2.038413,-6.946598,-7.614783,-5.438849,2.450663,-5.154377,2.542098,3.995204,-2.349288,-1.013654,8.027210,-6.250336,4.414485,-4.075909,4.399203,-2.942838,6.877783,3.980814,-8.956998,-3.186905,-5.928811,7.961678,-8.905805,9.810502,-6.658808,3.724317,-9.994406,-7.595224,-3.726982,5.630888,5.285525,-9.580153,-6.922947,-1.508620,-0.740651,-6.406825,-6.125551,-0.484897,3.465976,2.861097,4.237849,9.471560,-9.730525,9.601541,-6.209940,3.166366,0.112500,-2.094308,0.259583,-7.832686,8.998592,-2.449283,0.398255,-5.733936,-6.615387,-2.958231,4.422216,1.903671,-9.605001,-4.149353,1.891417,-2.603153,-3.726601,-9.011629,7.649297,9.835575,-4.724116,-6.763758,-4.256025,-8.495234,-5.829706,-3.193774,-3.739213,-6.377750,-2.270212,3.827562,-2.344441,-5.425678,-3.465393,-2.270601,-4.966221,-1.161775,9.944967,-7.223751,-2.144697,-0.456991,5.597374,-7.928350,-8.769010,-5.455745,5.859404,-2.816569,2.883050,-5.499400,3.948428,-1.588485,-9.141545,-0.876988,5.380955,6.713443,4.164886,7.285429,-2.551508,-5.305401,-3.376113,-6.519603,-2.527570,6.749785,3.694948,9.355333,-3.083823,-0.115307,5.160197,-9.591474,9.546866,-2.919963,4.590190,-4.168392,8.938387,-3.035198,1.743551,8.611102,4.946069,-8.461438,9.825542,6.967270,8.984860,-5.748356,8.570850,6.275634,5.879641,0.802390,7.862236,-0.969852,4.247624,-6.117288,1.299669,-3.606910,-8.497450,-0.905227,0.630635,8.796063,3.355447,8.273895,-2.138515,-1.737080,-9.682987,-1.241514,7.558864,-9.310402,1.010019,4.941196,-3.004726,0.861722,-0.338580,-5.883066,-6.827466,-1.484615,-5.227945,-8.213221,6.255909,-6.502561,-3.305121,5.849403,2.232087,-7.657201,5.141068,-2.348712,-1.195349,-7.140538,0.561762,-2.327328,6.239321,3.553118,-2.798044,-8.626350,-7.791097,3.317989,-9.359529,-8.637267,-1.477514,-8.643559,7.841693,9.481940,5.427335,-8.320811,0.064564,-4.491068,-3.783195,-4.941915,9.276865,-7.213813,7.846558,-8.619549,-4.594626,2.610206,-0.919957,-3.720433,-3.168904,8.431784,-0.738270,-7.156423,-7.074239,-1.268850,4.734686,0.205918,1.144352,-6.298176,6.294032,-1.929240,-8.587018,-6.777187,-1.056273,-9.588490,-2.264297,-9.702579,2.788561,-8.638505,7.814804,-2.979636,1.243181,5.853872,8.068464,1.608387,-3.228637,8.846686,-7.092809,8.282716,-7.199638,6.571521,0.774821,2.454229,1.074209,-2.905589,-5.743554,7.296675,-8.521650,4.770290,-7.439107,-5.924513,-9.785044,8.675426,8.059309,0.158476,-2.035599,8.494542,-9.412802,6.950716,-2.898603,-8.899168,-5.703035,7.539927,-1.225060,8.967245,9.485302,-3.442695,9.888050,-3.765026,-1.951634,-7.961392,8.436866,1.981994,6.456557,8.287654,-5.215717,-9.284483,0.594795,-0.903528,-3.957688,-4.959534,1.568626,-5.110179,0.200109,-6.675094,-2.607977,-4.613510,-8.725868,-0.706355,-3.007982,3.076383,9.744779,-2.273329,8.081179,6.672468,-0.178301,-0.566651,-7.365504,-5.816797,0.133439,0.959798,4.744622,6.388313,8.139868,3.355183,2.038815,0.946617,7.950620,5.113186,-4.079199,-6.030553,2.040288,-4.224846,7.771565,2.249904,8.942694,9.150878,-2.452695,-3.431634,-0.417890,-2.238831,2.342187,-4.276518,2.991736,7.815081,-2.485296,-3.450470,-0.276215,5.030722,7.982944,6.609772,-9.619417,9.276067,0.918804,-9.907543,-9.258769,-2.643080,-1.756537,-7.417285,-4.756907,5.595171,6.640225,-3.314013,8.319929,-4.103963,-6.975545,8.049502,-5.213450,-0.503121,1.847792,3.029916,1.574343,8.264206,-8.849054,0.111273,0.072373,-6.034888,-1.078529,8.322815,-2.864949,-6.948787,8.413203,1.648998,-7.700948,8.559186,8.734204,8.721737,-1.355920,-2.675493,-3.917763,-8.024807,1.496859,9.830802,1.873475,6.492134,-5.416894,7.162137,8.051906,7.948702,-9.936325,3.010855,2.673834,-5.121017,7.521566,-5.052755,-3.834915,-4.916060,3.341969,5.317593,-0.395758,7.741598,-9.101845,-8.425136,2.383965,6.816825,-8.744196,2.583101,-7.811105,-7.364900,6.596485,3.808842,0.336229,5.383147,6.885395,4.203541,3.024371,-0.532917,0.924119,1.261209,-6.135414,-7.380292,-2.752992,-8.110558,0.796233,-0.695164,-8.123168,-5.254725,6.333050,-5.520107,-4.729796,-2.743882,-5.969104,0.370660,1.869532,9.119565,-9.597372,6.881726,2.016481,0.274919,-2.895279,7.886830,0.986377,-8.695672,4.549407,-8.176843,-3.518751,9.330436,7.761188,4.673276,-9.236734,4.096061,-1.475019,4.452403,-4.910236,7.418870,-9.651758,4.700790,-2.862951], dtype = "float32")#candidate|6661|(1344,)|const|float32
call_6658 = relay.TupleGetItem(func_2523_call(relay.reshape(const_6659.astype('uint64'), [72,]), relay.reshape(var_6660.astype('float64'), [225,]), relay.reshape(const_6661.astype('float32'), [1344,]), ), 2)
call_6662 = relay.TupleGetItem(func_2528_call(relay.reshape(const_6659.astype('uint64'), [72,]), relay.reshape(var_6660.astype('float64'), [225,]), relay.reshape(const_6661.astype('float32'), [1344,]), ), 2)
output = relay.Tuple([bop_6653,call_6658,const_6659,var_6660,const_6661,])
output2 = relay.Tuple([bop_6653,call_6662,const_6659,var_6660,const_6661,])
func_6675 = relay.Function([var_6651,var_6660,], output)
mod['func_6675'] = func_6675
mod = relay.transform.InferType()(mod)
mutated_mod['func_6675'] = func_6675
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6675_call = mutated_mod.get_global_var('func_6675')
var_6677 = relay.var("var_6677", dtype = "float64", shape = ())#candidate|6677|()|var|float64
var_6678 = relay.var("var_6678", dtype = "float64", shape = (75, 3))#candidate|6678|(75, 3)|var|float64
call_6676 = func_6675_call(var_6677,var_6678,)
output = call_6676
func_6679 = relay.Function([var_6677,var_6678,], output)
mutated_mod['func_6679'] = func_6679
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4205_call = mod.get_global_var('func_4205')
func_4206_call = mutated_mod.get_global_var('func_4206')
call_6694 = relay.TupleGetItem(func_4205_call(), 0)
call_6695 = relay.TupleGetItem(func_4206_call(), 0)
output = relay.Tuple([call_6694,])
output2 = relay.Tuple([call_6695,])
func_6699 = relay.Function([], output)
mod['func_6699'] = func_6699
mod = relay.transform.InferType()(mod)
output = func_6699()
func_6700 = relay.Function([], output)
mutated_mod['func_6700'] = func_6700
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5220_call = mod.get_global_var('func_5220')
func_5221_call = mutated_mod.get_global_var('func_5221')
call_6725 = relay.TupleGetItem(func_5220_call(), 0)
call_6726 = relay.TupleGetItem(func_5221_call(), 0)
output = relay.Tuple([call_6725,])
output2 = relay.Tuple([call_6726,])
func_6734 = relay.Function([], output)
mod['func_6734'] = func_6734
mod = relay.transform.InferType()(mod)
mutated_mod['func_6734'] = func_6734
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6734_call = mutated_mod.get_global_var('func_6734')
call_6735 = func_6734_call()
output = call_6735
func_6736 = relay.Function([], output)
mutated_mod['func_6736'] = func_6736
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6637_call = mod.get_global_var('func_6637')
func_6639_call = mutated_mod.get_global_var('func_6639')
call_6781 = func_6637_call()
call_6782 = func_6637_call()
uop_6788 = relay.atan(call_6781.astype('float64')) # shape=(2, 3, 12)
uop_6790 = relay.atan(call_6782.astype('float64')) # shape=(2, 3, 12)
output = uop_6788
output2 = uop_6790
func_6793 = relay.Function([], output)
mod['func_6793'] = func_6793
mod = relay.transform.InferType()(mod)
mutated_mod['func_6793'] = func_6793
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6793_call = mutated_mod.get_global_var('func_6793')
call_6794 = func_6793_call()
output = call_6794
func_6795 = relay.Function([], output)
mutated_mod['func_6795'] = func_6795
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4919_call = mod.get_global_var('func_4919')
func_4920_call = mutated_mod.get_global_var('func_4920')
call_6838 = relay.TupleGetItem(func_4919_call(), 0)
call_6839 = relay.TupleGetItem(func_4920_call(), 0)
uop_6847 = relay.sigmoid(call_6838.astype('float64')) # shape=(2, 3, 12)
uop_6849 = relay.sigmoid(call_6839.astype('float64')) # shape=(2, 3, 12)
func_6183_call = mod.get_global_var('func_6183')
func_6184_call = mutated_mod.get_global_var('func_6184')
call_6872 = func_6183_call()
call_6873 = func_6183_call()
uop_6874 = relay.sinh(call_6838.astype('float64')) # shape=(2, 3, 12)
uop_6876 = relay.sinh(call_6839.astype('float64')) # shape=(2, 3, 12)
output = relay.Tuple([uop_6847,call_6872,uop_6874,])
output2 = relay.Tuple([uop_6849,call_6873,uop_6876,])
func_6879 = relay.Function([], output)
mod['func_6879'] = func_6879
mod = relay.transform.InferType()(mod)
output = func_6879()
func_6880 = relay.Function([], output)
mutated_mod['func_6880'] = func_6880
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4414_call = mod.get_global_var('func_4414')
func_4415_call = mutated_mod.get_global_var('func_4415')
call_6889 = func_4414_call()
call_6890 = func_4414_call()
output = call_6889
output2 = call_6890
func_6902 = relay.Function([], output)
mod['func_6902'] = func_6902
mod = relay.transform.InferType()(mod)
mutated_mod['func_6902'] = func_6902
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6902_call = mutated_mod.get_global_var('func_6902')
call_6903 = func_6902_call()
output = call_6903
func_6904 = relay.Function([], output)
mutated_mod['func_6904'] = func_6904
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6183_call = mod.get_global_var('func_6183')
func_6184_call = mutated_mod.get_global_var('func_6184')
call_6915 = func_6183_call()
call_6916 = func_6183_call()
output = call_6915
output2 = call_6916
func_6925 = relay.Function([], output)
mod['func_6925'] = func_6925
mod = relay.transform.InferType()(mod)
output = func_6925()
func_6926 = relay.Function([], output)
mutated_mod['func_6926'] = func_6926
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6933 = relay.var("var_6933", dtype = "float64", shape = (3, 4, 12))#candidate|6933|(3, 4, 12)|var|float64
var_6934 = relay.var("var_6934", dtype = "float64", shape = (3, 4, 12))#candidate|6934|(3, 4, 12)|var|float64
bop_6935 = relay.floor_divide(var_6933.astype('float64'), relay.reshape(var_6934.astype('float64'), relay.shape_of(var_6933))) # shape=(3, 4, 12)
output = relay.Tuple([bop_6935,])
output2 = relay.Tuple([bop_6935,])
func_6946 = relay.Function([var_6933,var_6934,], output)
mod['func_6946'] = func_6946
mod = relay.transform.InferType()(mod)
mutated_mod['func_6946'] = func_6946
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6946_call = mutated_mod.get_global_var('func_6946')
var_6948 = relay.var("var_6948", dtype = "float64", shape = (3, 4, 12))#candidate|6948|(3, 4, 12)|var|float64
var_6949 = relay.var("var_6949", dtype = "float64", shape = (3, 4, 12))#candidate|6949|(3, 4, 12)|var|float64
call_6947 = func_6946_call(var_6948,var_6949,)
output = call_6947
func_6950 = relay.Function([var_6948,var_6949,], output)
mutated_mod['func_6950'] = func_6950
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5220_call = mod.get_global_var('func_5220')
func_5221_call = mutated_mod.get_global_var('func_5221')
call_6952 = relay.TupleGetItem(func_5220_call(), 1)
call_6953 = relay.TupleGetItem(func_5221_call(), 1)
output = relay.Tuple([call_6952,])
output2 = relay.Tuple([call_6953,])
func_6961 = relay.Function([], output)
mod['func_6961'] = func_6961
mod = relay.transform.InferType()(mod)
mutated_mod['func_6961'] = func_6961
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6961_call = mutated_mod.get_global_var('func_6961')
call_6962 = func_6961_call()
output = call_6962
func_6963 = relay.Function([], output)
mutated_mod['func_6963'] = func_6963
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5812_call = mod.get_global_var('func_5812')
func_5813_call = mutated_mod.get_global_var('func_5813')
call_7000 = func_5812_call()
call_7001 = func_5812_call()
func_5623_call = mod.get_global_var('func_5623')
func_5626_call = mutated_mod.get_global_var('func_5626')
const_7006 = relay.const([-2.001553,-3.113536,5.193326,-8.863076,5.925339,-6.642772,8.863151,-0.369783,-2.779548,-1.620362,-2.178129,7.729455,-4.190009,1.156490,7.649000,6.240215,0.137319,-8.342462,-0.387976,-7.044367,-4.776186,7.943696,7.898663,7.334839,5.218185,1.803574,-4.773045,-2.141556,9.333181,-6.919178,-8.605672,-1.720648,2.431046,7.582366,-5.447787,7.652039,-2.137198,-8.375789,5.519712,9.450414,-8.224815,-6.551955,-1.047779,5.839269,-3.008485,-2.838128,-2.865697,7.675661,-5.185151,0.880296,-5.394868,7.223622,-4.323867,-4.854624,-9.686735,-2.413020,-4.283833,5.362334,-6.087899,9.814196,-8.536814,2.386660,-0.633746,-6.961010,9.319092,2.940342,-2.217670,8.087982,9.543087,-3.802419,0.303704,-2.672538,-2.553717,-8.972821,-6.819511,2.631915,-7.288973,5.462224,2.982400,0.959539,-6.676272,0.327472,9.589073,1.035465,-5.364596,-8.735980,-5.294046,-0.114698,-2.025333,3.487207,-7.151207,8.859350,-2.994012,7.027615,-3.619315,-2.596048,-6.856495,-1.444382,-4.172102,-2.940202,0.398118,4.073560,8.320528,-2.911709,-6.031959,-7.153035,3.128779,3.576074,6.925902,3.509642,6.541994,-8.383279,3.624321,-5.787717,-4.935244,1.861153,8.865408,4.668879,-6.906130,8.839481,-4.108580,5.781979,6.598571,0.973924,0.388680,6.836432,-6.600761,-1.649739,-2.492573,-4.681334,7.384350,-3.204077,-0.582379,5.819788,-1.924418,9.040669,7.356159,-2.051235,-8.056440,0.451308,-7.495063,-6.349522,-4.422077,0.147721,2.938500,6.065371,0.491343,-7.721881,4.752761,-2.637855,-1.939714,-0.136102,-9.846379,-6.910849,-3.683491,-3.571765,-7.442680,-1.924772,-4.667440,3.879287,6.212659,-5.170112,2.587220,-8.602496,8.300461,-3.717121,-7.828923,4.792417,8.750037,9.251741,0.681698,-2.409397,3.653347,-5.988343,-7.323180,0.298584,-1.923063,-6.931545,-9.581090,-9.277110,2.648235,7.010964,-9.901061,-7.540370,3.823252,7.779982,-5.170968,-2.098717,-3.917679,7.641709,0.320544,-7.228514,-8.289819,6.199211,3.117115,-9.866422,-5.186197,1.690616,-7.705204,-3.992361,3.439843,-2.858707,1.112367,3.490353,8.424488,6.509734,-7.900729,-3.096459,-1.007999,9.478475,-2.592112,7.729968,-1.590373,6.548368,-0.184922,-5.134764,0.507946,2.701706,7.926600,7.771972,6.639473,9.249066,-3.071275,7.587294,7.129918,1.853217,-4.868755,-9.195475,0.753737,-0.349286,2.541416,9.638624,8.442488,-2.430441,-8.121084,-6.002135,-7.861479,5.842228,8.002605,7.252846,1.279856,-8.553526,1.698897,-1.406497,-0.675788,8.785166,9.390332,3.688880,7.047815,-6.760414,0.680550,-5.461624,-6.102343,-5.880418,-5.055719,2.477674,-8.837996,7.990789,-9.132734,-3.343653,-4.912752,2.952261,7.375928,6.725716,-7.064940,-5.741719,-8.692246,8.762184,-1.062333,-1.443532,1.809693,-3.362058,-2.517132,-9.979135,-1.711013,1.397519,-6.599040,-9.370700,3.611310,-2.482529,0.767287,9.108381,9.554359,0.658897,9.317981,-2.844151,2.202892,-8.173064,7.207975,-7.288103,-1.184255,-8.308244,-5.802984,-7.117979,-2.753993,8.910858,9.040538,1.977538,9.331485,-5.783633,0.770282,-3.200244,6.630399,-9.885355,8.436450,-5.071298,-4.184512,-7.524554,-3.951747,5.536304,5.923312,-5.336694,7.489790,-6.959231,-3.891444,8.270273,9.659977,-6.981685,7.649963,4.689585,-1.659298,-4.521342,6.104779,1.602154,7.649798,-5.316412,-5.845629,6.860160,5.227720,-3.639505,-0.323495,6.956304,6.738354,-8.762861,-8.787023,1.428681,-2.003775,8.273445,-8.668519,7.808089,8.125237,5.515669,-0.028033,-2.346155,-6.039726,-0.300513,-2.209058,-0.471324,1.084798,-8.237226,4.736397,-5.100053,9.475864,7.895428,2.761972,0.215897,-9.567456,-6.183578,3.230962,-8.450681,9.448114,-1.521833,-9.421990,-4.999254,-5.149066,0.724632,-7.136121,7.146456,-7.893463,-2.101210,0.545860,-7.151707,-0.860601,-4.297785,0.848577,4.090599,6.475736,4.603763,-6.527738,-2.861867,-4.530885,-7.711118,2.712873,0.068609,-3.890733,3.989962,7.962418,-7.698630,-8.043213,-9.094177,2.569321,6.151401,8.794579,7.880470,-9.503576,-2.917065,5.881576,6.557770,-6.460631,-3.992228,-5.341714,-0.202985,-4.617292,8.941215,-9.714507,-3.281782,8.763027,-6.847171,-9.292329,0.379420,3.433265,-2.789764,-5.023076,-3.967652,-2.114615,-9.453298,-6.966636,-0.527679,5.040790,-7.942463,9.402466,5.815793,-4.637733,-9.803683,8.695389,7.255456,1.032331,-5.382879,6.100356,9.346233,2.807646,3.435782,-9.630703,-5.058375,6.999569,1.601204,-1.847839,-9.411476,0.069994,7.255861,-9.936458,7.164135,-2.823833,8.995458,-4.156152,7.828486,-8.364788,-7.606894,3.242096,-6.119527,4.839981,5.272542,9.344820,-7.573382,-8.652350,5.624635,-7.395916,5.224376,-6.519779,-6.669825,7.021914,7.435997,-0.363799,-8.450250,-2.685227,9.684034,3.904289,2.599224,-1.249031,2.888656,-9.693013,9.157962,3.011564,3.554342,8.781359,5.457928,-3.139363,0.876147,-5.863940,-3.970505,-7.672301,-8.220606,-5.127026,-7.570719,6.854422,-5.506473,7.620946,-0.501612,-2.815808,-2.400581,0.297296,-3.604661,-4.496008,9.592787,2.193799,-8.381845,7.185799,2.443672,-2.477135,-6.399279,9.465195,8.295805,-2.070889,-3.881050,-1.388400,-2.729858,-5.809993,6.142303,-3.700470,4.831828,-6.861681,-4.462681,-6.408525,4.795443,4.656267,-5.146245,-1.915877,1.336679,9.434313,5.881062,5.557755,7.748892,-5.743336,-0.800056,8.896764,0.064093,6.005463,2.561497,2.688289,0.389300,-7.211122,-8.975105,8.836257,4.117897,2.966379,-7.036159,5.421031,-7.790578,-4.932682,-9.921791,-5.946041,4.087169,3.786012,8.676281,-3.689777,-6.272434,-0.567955,3.107017,-5.934087,-6.797503,-7.399254,-7.264225,-5.493181,1.745104,-2.446454,5.543327,8.202879,-1.025214,7.174436,-2.905617,-9.520777,5.665550,2.248048,2.912220,5.071888,2.856520,-4.386346,7.456667,-5.778091,-5.646434,3.096028,8.793877,-8.328480,0.179035,1.026787,0.527914,-7.152186,-2.081431,-8.961401,-8.504717,9.394577,2.804915,1.944362,-4.213105,9.737011,-2.498841,-1.083369,-2.470041,-3.878849,0.088464,3.052854,0.488583,5.756802,0.404290,0.300137,7.434124,8.037292,7.263841,-6.914287,-4.802766,-1.007558,-3.507019,-7.372185,1.592790,-9.431652,-6.272318,-7.468950,-9.448392,3.154071,2.738008,6.493625,9.150727,2.991834,7.031529,-1.639037,5.057267,0.612560,-0.071227,-4.302892,-7.113220,-5.731881,-5.835577,-4.721257,-2.787226,-0.658896,1.276971,-5.111074,-6.377892,7.905389,5.946094,5.590434,-4.729647,-2.664087,-0.121784,-1.834098,-9.768594,7.512730,7.575921,3.795109,3.077674,5.542856,8.926904,4.376068,4.469050,3.960421,8.207158,-9.957925,9.430090,-1.535542,8.877348,-6.105763,0.717732,0.532764,-0.219054,-0.228163,-5.778093,-3.248972,2.343708,-8.228555,-2.030323,-0.455797,-7.310189,2.953233,4.695573,-1.669100,-6.476973,-8.200111,-4.378311,8.589104,-6.738584,3.274363,0.474318,-0.196542,2.397430,-3.193887,9.010637,3.452961,3.914801,8.037438,-2.352060,3.133812,8.474395,-1.508443,9.964785,-1.038118,8.357898,5.235335,9.686167,-4.520214,-8.392447,-9.626278,7.674465,4.626488,-0.715123,9.166172,-1.448211,4.757673,6.656662,-3.467539,2.155225,-7.843191,-2.430804,-6.830186,-4.014773,-6.444350,7.252560,-2.701015,2.844965,3.579524,-9.232583,-3.203316,7.357497,-6.492498,-0.217273,-4.726256,6.448188,-4.327751,-6.527060,7.540339,9.176910,5.271991,-9.921032,2.623986,8.113970,1.515390,-8.291342,1.493426,-2.219290,-9.606679,-4.731225,-5.634605,7.624663,0.290059,0.537559,-3.741396,-5.875195,7.378472,5.806110,-2.478162,9.349035,2.991378,-6.343779,-2.766323,-6.580027,9.378131,1.658305,4.694512,-2.431600,-0.707244,9.217356,9.520729,-0.239034,3.632369,2.866872,-7.652272,8.496921,-1.858685,-4.684924,-6.482743,8.846319,5.980496,-0.853218,-4.080205,1.360097,-0.273993,2.230540,3.329986,4.034125,-7.286401,-7.394600,2.879103,-6.588554,6.378416,-9.584157,0.379450,0.702760,-7.628850,5.794514,5.555559,6.840601,-4.145198,8.907550,-0.015258,-6.138759,1.037549,-4.257394,-3.551609,3.836505,2.840328,-5.356606,6.800080,-0.087582,4.729785,-9.974593,-7.843961,-1.251875,1.476466,-9.596977,-2.320719,-8.181660,-6.406736,8.158852,1.921490,-8.719287,-0.429522,8.456517,9.319978,-2.615954,-2.711517,9.856814,-8.973460,6.875584,7.004562,-2.598068,-8.028219,5.713573,0.705856,0.492852,7.008975,0.676753,-1.804233,-8.607773,-9.880495,-3.485135,9.781456,-3.498801,-0.387433,6.151051,9.088752,9.843088,-2.009826,-8.355661,7.455569,-2.387112,-9.799294,1.488645,7.223333,-6.592115,-1.421022,-4.638430,-1.968970,5.450806,-2.669190,-9.420528,-2.450952,6.054810,-3.611371,-4.935581,6.521176,1.460240,8.165450,4.088240,-2.848081,-0.889152,-6.055471,-6.445997,6.057838,0.610664,5.108858,-0.532151,-3.884746,-3.927676,3.784944,-9.416933,-2.850557,-2.389921,-3.479803,-2.922714,1.597522,3.719083,1.712525,-8.254148,-3.332276,-1.478615,2.407004,8.140629,-3.262365,0.293224,9.429047,-4.169207,5.678571,9.744187,-0.231385,-5.808613,-8.900802,-3.176600,0.254351,3.992003,-2.125525,4.454895,-8.364931,8.357870,4.195695,-1.614548,9.830446,-6.595408,-5.204087,-1.170139,3.575092,-6.498938,6.737894,1.455485,-2.324366,-2.300293,-9.251300,-6.703745,-9.831295,8.626890,-4.811019,-8.009169,-9.033279,-5.259481,-2.133994,-0.279470,0.028867,-9.882680,1.827899,-8.754303,-3.912817,-5.645743,-8.159215,2.748163,4.736910,-9.621264,-3.165766,3.420952,5.496804,4.389529,-1.593655,5.419982,1.021193,-1.283942,6.481964,-6.195561,2.897237,-3.399485,5.983716,3.380102,-6.904076,9.588619,-7.695453,-5.500095,-0.666547,-7.952269,5.688726,3.543842,8.076267,5.229341,-8.823490,-2.403303,-9.434849,5.960931,-8.173440,-8.584474,9.387452,7.736901,-2.917632,0.560016,-9.779011,-5.121071,-3.406698,-1.528012,7.363500,-2.577452,1.734852,-8.030389,-4.690459,0.621264,-4.680829,7.472313,3.390982,2.624826,-1.943972,5.730310,-6.899078,-2.273480,4.212068,-2.861531,-9.535158,-4.480548,8.888281,-2.178440,-8.836453,-8.730417,0.055739,-8.150765,3.177341,7.019425,5.487147,-4.257291,-7.579656,-7.084023,2.547326,-6.768348,7.770433,4.407807,0.998587,-1.261876,8.061512,-3.096257,0.730364,-6.532238,5.061771,-7.430903,-2.897859,-9.438300,-8.115789,-4.406471,-0.752809,7.173996,6.220703,-0.021765,-2.276591,-8.636270,-1.116928,8.024812,-4.668992,-7.081263,9.069491,-0.746267,4.093974,-5.289079,9.650168,1.661850,6.502635,0.398739,9.453851,-1.021322,6.993312,6.151318,2.488098,3.854952,-0.962955,3.915991,-4.618800,2.234351,8.238993,5.581289,-6.052478,-8.768961,-7.652384,-7.768952,2.535032,1.035605,-7.980995,-1.950042,0.194080,6.905030,7.166797,5.013724,-5.908330,6.805690,-4.937348,-7.230029,7.609294,4.114467,-1.515064,0.636918,-1.551203,-1.861654,-3.259352,-4.694593,-8.616757,1.104827,6.674474,-1.337504,-2.764770,5.989411,-7.055640,8.967707,-0.098113,5.341190,5.361882,-4.519809,-0.321571,-0.585266,-2.647324,-0.058073,-2.011797,-7.594526,7.843759,6.991715,1.380745,-0.390186,-0.424755,8.628437,-2.113188,0.231424,-4.045337,4.245091,6.586387,2.739066,6.997372,-9.763420,1.844256,5.878421,7.378034,-0.807085,5.975208,9.192990,1.443077,-3.034364,1.617628,8.786649,0.447323,-8.444325,-3.378081,-1.802778,-3.268198,6.362790,-7.747523,-1.444948,0.305108,-8.566059,2.813327,-6.601458,-1.454080,9.143111,-3.863137,6.833738,2.569425,-4.195068,7.985576,1.021691,-3.931360,-8.112067,4.157445,-1.085601,2.203329,2.685803,-2.827916,1.946430,-2.550043,4.294197,7.155087,2.417251,-7.958665,-7.523875,-5.761056,1.045223,-5.471539,9.814417,-2.240033,-2.000215,-5.902171,1.149535,6.640251,-7.429024,6.459397,9.740644,-4.470572,4.122252,-2.967757,5.675856,-3.124492,9.152982,-2.977514,-6.562331,5.170412,-9.379289,9.635089,-8.608466,6.647220,-4.741436,-4.938509,3.176472,-1.605394,-5.354271,4.937156,-0.188805,-4.425055,-9.988277,-0.969380,-1.948811,-7.123029,-7.629929,-4.490810,-8.028087,2.269232,-0.755777,-4.171041,-0.542036,-5.329783,-1.416662,-4.045605,0.189554,-7.458611,4.379170,4.722477,-6.543215,6.766903,7.417190,-8.500913,5.492708,-8.242870,0.915371,5.766976,-7.593961,-3.368801,8.577168,3.077240,-2.853281,0.411648,-3.509592,0.534711,-5.057695,5.582006,-0.821653,4.480326,0.199386,6.603621,3.472193,1.152540,-1.430094,-5.399078,-9.778361,9.318982,5.076681,2.375405,3.100474,8.290568,6.929993,7.149801,-8.864031,2.159030,-3.312025,-5.916068,8.006500,5.854190,-7.097422,-3.825090,4.860823,1.661463,-1.265727,0.671706,3.721489,4.765056,3.902753,-6.039957,2.096858,-7.178115,-5.209655,3.953601,-2.603429,4.327133,-3.166357,3.690946,8.405496,9.399381,6.072805,8.276549,7.073979,1.634931,3.873826,-3.369663,9.812947,0.875915,6.161186,-1.698570,5.756150,-5.393859,9.564891,-2.900759,-3.763279,-7.276522,-9.017198,-7.601216,-7.257253,-8.501724,7.084763,-3.803925,0.784948,-5.941799,4.056117,-6.587079,4.279634,-4.153678,7.958452,5.272992,-5.113575,9.490328,-4.584025,-6.728830,-1.419128,-9.586182,1.900868,-8.531842,-0.605408,-6.482879,8.481201,1.132015,1.266946,8.935958,-7.164304,3.771535,-4.283773,7.356497,-5.792828,3.370656,-7.905149,3.910002,6.501872,8.502378,-8.021351,9.353509,-8.849625,-4.001325,-2.332753,-7.603621,0.621834,-3.542193,5.847521,-8.765743,4.819673,-4.962340,2.917545,-0.126381,7.851268,4.334298,7.770934,-7.414188,9.844944,5.657126,-9.386993,-2.533418,8.492873,-0.767807,-5.315171,5.741989,-6.398426,8.071197,2.531437,-0.314171,9.877096,-1.409300,-7.227858,2.073306,-0.253770,-9.303770,-6.665207,-0.690617,8.744515,-4.943063,4.279475,4.288047,7.698119,7.724431,-8.528843,-6.053520,8.253168,-7.775826,0.183350,8.099948,9.682257,-5.420690,-2.180146,7.629084,0.436668,2.718047,3.909470,7.395897,-4.335548,2.145552,-8.330779,-0.040672,9.602967,-1.063691,-5.993536,-5.658216,7.548030,-7.603916,4.978426,4.462168,1.593530,4.970941,0.556467,-0.260568,5.233632,2.992417,4.016671,-2.001761,-4.159176,0.162350,-4.612225,-9.213732,-0.119084,-9.971077,7.934496,0.658269,-8.463607,6.891848,9.811049,0.058326,-4.959600,-1.352705,4.885628,-1.117906,4.105549,-9.593482,7.992372,6.066734,4.154921,7.618494,8.957581,-6.181074,6.956713,-9.258413,1.074408,2.585681,-4.891368,5.945759,-7.591273,5.198509,9.117704,-8.637315,6.829137,-9.663176,7.970494,4.122271,-6.458526,-8.722933,5.542026,-7.805269,7.471574,-5.731518,-0.494782,8.171369,5.587460,-9.106423,-2.161565,6.450916,4.746179,1.988267,0.644394,8.062540,-0.927608,6.645380,-7.091316,-7.040071,-3.252893,2.721073,-4.701242,4.269455,-5.509381,-4.836640,-4.844479,-9.159462,2.983229,-9.358576,-9.910160,9.571549,-2.549916,-7.272211,-9.627251,-4.555366,-8.645892,7.896053,-2.789312,-8.935379,8.677325,9.140406,5.762761,4.768441,3.782873,8.910664,6.342695,-7.534530,-2.435048,3.717902,5.303721,9.949954,0.778815,-3.244948,0.312155,-0.405434,6.383184,5.130680,3.699042,-1.122541,-2.525180,-4.535981,-1.337179,6.676637,-6.667843,4.432602,-5.479207,2.419341,-9.605429,1.874274,-1.028155,-2.781495,-5.360303,-5.556459,-2.651695,-6.184248,8.103121,-8.915395,-7.329228,-2.141431,-2.218541,-0.513479,-5.882869,0.800005,-9.454356,-6.284196,-7.384343,-5.055653,-7.006847,5.223559,4.227439,-2.056044,-0.366100,-6.564413,-2.209370,6.516799,2.392231,-1.263442,2.882900,-1.588308,-1.441688,9.638560,7.365311,8.758562,-1.778119,-3.682466,2.179333,-5.085316,1.821067,-3.573732,6.800865,7.813736,2.143712,-1.342307,1.500186,-6.078662,-0.187401,-0.652629,-3.186780,3.182193,-5.458492,-6.423484,-7.288462,-0.985209,-5.089958,-8.574769,-8.085418,-4.319718,0.421940,8.255920,8.953999,-0.504160,3.634297,2.834934,9.637760,-6.358594,-5.509801,7.834959,-7.845349,-3.715877,-1.756156,-5.448171,-8.696642,-8.762343,-6.737098,-9.987241,-6.664250,0.366841,-5.992997,3.179923,6.558188,0.487575,-2.914306,6.322828,-2.552004,3.507836,-2.890426,-9.679307,-2.615337,-0.804318,-2.348304,-1.670405,1.942724,-4.346249,-2.767956,6.446990,4.209243,1.305433,4.554147,-9.622633,7.458604,-3.151098,-0.659292,-3.452602,-3.714468,4.550600,-9.143177,1.925677,6.884844,8.612543,8.723464,9.667302,7.035515,-5.257402,3.944695,9.340031,9.977422,-9.755995,-9.096464,-3.225526,7.282732,3.137179,-2.097351,-1.690286,-0.570622,0.301953,-9.478097,-7.659366,-7.635335,4.340133,-6.046757,-2.303248,-0.104853,0.044683,3.159610,0.734253,2.334489,-0.856844,4.412694,9.272871,-9.473811,7.518786,4.674018,8.608293,9.996841,-2.696204,9.780524,1.477829,6.052289,-5.162775,-9.612017,-4.320350,-8.932508,9.451332,4.864957,6.023661,-7.874742,-3.965461,-2.474147,4.439908,-5.323068,6.583591,-0.320916,-1.266445,4.005956,-6.255553,-5.844557,6.120764,-2.457607,7.054944,6.954117,6.117163,3.553484,-3.729054,4.385399,6.530944,7.197415,0.377170,8.868430,3.028647,-5.654459,1.426237,-1.833334,2.909187,0.816450,-3.107582,3.775528,-2.688299,-6.557046,4.547544,-5.585866,5.129492,2.306749,5.903069,-1.287740,-3.195537,6.590347,-7.598914,-7.600334,-1.405231,-8.026493,7.469920,-9.192387,-7.512106,-1.056274,5.086501,5.043989,-0.402876,9.093272,0.393051,-1.146979,9.622349,3.354590,-9.485388,7.673139,-5.176265,8.135435,-0.356603,9.768766,-7.688348,-4.939359,5.298640,0.242527,-4.834077,7.995830,-8.839262,9.964704,3.819230,1.957486,6.942569,-8.560179,-1.240618,2.022574,-5.784240,-7.852121,-5.684908,-3.153635,-9.341922,4.870034,-2.086379,-3.183137,-1.268077,-4.006764,0.442312,6.997338,5.789785,-7.877773,-0.392953,-8.948362,-0.982415,1.159584,9.238154,-4.020953,1.694502,-6.132374,2.882655,2.500538,2.029834,3.218945,8.612728,6.870108,7.579933,8.097655,8.339166,-3.445220,-3.206235,-4.546340,9.389396,1.736403,-0.415867,-5.681321,-9.389167,7.771143,-9.825886,-3.850839,-1.025551,-1.258847,1.480667,4.668593,8.983853,5.330164,9.135900,2.187226,-6.312988,-7.730474,-2.653514,-7.919646,-8.112627,-8.659202,3.369470,-2.983980,-2.337093,4.360350,-8.680992,-9.472555,-3.680421,8.983965,5.786415,-8.361411,0.245474,-8.691486,5.813381,1.310823,2.173326,-9.023196,-9.407324,-3.447050,7.538490,2.804705,-7.873843,3.812848,2.140803,-7.488500,6.673022,-8.480824,8.770408,4.518091,-7.782016,-8.408227,-8.945777,-3.657650,-4.468163,-0.066080,-0.523662,1.072310,3.626480,8.724014,-4.538585,-7.270346,-2.935840,-5.310285,0.539918,-1.315934,-3.999117,5.458499,-1.785453,-9.949660,-1.562305,-2.543818,-5.507578,9.234242,7.105902,-0.132342,5.672605,2.226805,0.990187,9.341992,0.223294,-7.845045,3.970896,7.996810,6.469084,-7.058373,-1.442214,-6.385450,-3.372678,-2.033345,-1.068361,6.674364,9.821869,4.998443,2.052894,-0.750974,4.012826,-9.562889,-2.068178,-8.839191,1.561192,-3.301770,4.952575,-8.187468,-7.244583,9.323764,3.612851,-8.214907,-3.964681,-9.672505,9.259185,-8.557731,0.797150,3.133364,-1.853377,-2.982833,-6.955670,4.434531,3.193311,6.307489,8.658292,8.224865,-4.746747,0.168563,3.973866,-4.533947,-7.613641,4.307004,0.579876,-6.969795,-5.452305,-8.841461,2.763872,0.237243,6.812341,-8.264777,0.251870,-7.603461,-6.260050,-5.092420,5.298608,-6.146414,-8.784891,0.956477,-3.327594,6.972700,-6.406808,1.290642,-2.299085,4.612883,2.250903,-6.505744,7.427098,-5.211242,-0.441640,4.556573,2.446858,-8.489769,-5.095115,-4.175263,0.621499,8.000255,2.436325,3.750041,0.733764,9.772508,-1.554870,-2.646028,-5.968368,8.809727,4.958651,-0.571592,-9.854445,-1.545860,0.396591,3.936077,6.519447,-6.628403,0.408537,-2.228981,-5.077331,-3.175541,6.031121,-9.886408,8.102846,-9.665740,0.551876,-4.344081,0.790021,-7.904720,0.257597,4.158781,-4.932206,2.137859,9.605405,9.604706,0.357321,3.065946,-7.508038,0.025644,4.803585,-7.552637,-8.167252,2.892110,-1.782832,-9.989832,6.152434,-5.696957,-3.672928,-4.175442,2.231228,1.103712,5.248752,0.312783,0.085925,8.126373,-5.116838,5.061204,-5.498854,3.049944,-8.751402,-9.893615,1.194573,3.308603,-4.903553,-0.166625,3.902004,7.749053,-7.599069,-1.881103,0.968693,-3.775046,-3.515128,-8.243680,-4.760149,7.789312,-6.093801,9.381082,-2.913024,4.659434,-6.778574,-2.702710,0.633971,-1.355174,-4.757159,6.541364,-4.586742,7.267001,0.768714,-6.657523,1.457870,-2.845470,0.204235,-9.992263,5.851460,3.262995,4.943464,0.106413,9.946853,-2.775899,8.193745,8.451711,6.413995,-7.476947,-9.571782,6.778483,-9.134815,8.345868,8.997516,6.596450,7.134660,-1.089237,-2.421728,-2.334034,9.970648,3.246280,-9.726893,-1.528928,3.344562,7.303611,3.456342,-6.656369,-4.414217,-7.409407,5.992792,-1.516805,-4.025861,2.272740,7.507527,-7.345758,-7.708412,7.296544,-3.461081,-6.757922,-1.184250,0.364449,-9.256376,4.596727,-9.623875,-0.316988,8.248002,-5.239530,2.089359,-2.303376,5.805697,5.417207,-5.104106,1.526772,5.587932,-7.047613,5.790700,8.066267,3.829468,-0.311365,-9.059311,3.361244,-5.278562,1.054235,1.115556,-9.771874,-0.280220,-6.453373,-8.183948,6.080815,-0.353019,1.972563,-7.315695,6.148831,9.663567,8.157631,9.160206,0.152843,-6.981747,4.301001,-2.791398,1.813936,-3.807322,0.415629,8.698871,-1.168005,-1.972297,8.947858,-1.097077,4.224391,-1.224275,-6.343485,8.393906,5.566422,-4.295741,-2.725899,-5.902819,-7.583260,5.313608,5.874948,-6.980959,-2.914879,1.513832,4.190506,5.778502,4.143429,1.275349,8.701749,1.452021,0.032817,2.648506,-8.545568,4.818579,-6.031848,-3.955321,9.920678,3.789013,-1.916766,6.210599,8.763895,-7.791152,-1.598718,-8.542675,-0.012402,1.273528,3.376589,1.783195,-2.926293,-2.850108,-9.399789,2.893632,-4.366371,5.983693,3.268695,-6.968902,9.596594,-5.227594,9.005234,6.546035,-1.737522,0.271364,-4.947183,-9.687202,3.744980,1.116804,4.720324,1.171123,-0.859078,-4.430710,5.494924,-1.292725,8.728350,-0.082009,8.368028,3.604453,-5.266129,6.858922,3.605356,-4.303196,5.558083,-5.227929,-5.933582,-1.466544,2.269052,-3.675615,3.811657,6.787179,5.027615,4.042163,-6.902376,1.592981,1.630939,0.732566,-4.972895,0.349673,8.976621,-5.362920,8.417527,-6.235733,-0.742088,9.934432,6.057725,-7.392201,3.787033,4.959545,-0.682811,-4.307041,-7.964695,8.055756,7.291949,-5.965322,-9.583882,-4.781539,3.795903,-3.909641,-8.342099,5.234371,3.794676,-3.836054,-8.331438,-9.067063,-0.553360,-5.248496,-0.161659,0.764210,2.937327,-1.409268,8.587899,8.715712,-2.000671,-2.439234,-5.844360,-5.533088,0.921617,-8.515232,1.732573,2.496801,6.963922,-1.479603,9.403296,-7.864780,8.313057,-4.917326,4.686258,0.696339,-9.701550,-1.061062,7.320849,-0.562390,-5.009571,-0.549465,2.280153,0.544799,-0.753725,-9.796727,-6.013540,-8.410242,5.437885,-5.598173,-9.306105,-3.893826,7.154691,4.743801,-4.947391,8.118631,-4.703135,-1.420292,9.857256,8.069187,0.546985,8.032335,-8.406305,5.653915,5.484193,-3.527084,0.113729,-3.023846,-8.214242,4.430106,5.513222,0.951363,0.158550,5.671693,1.867364,-8.993478,-3.656161,-5.923001,7.485531,-5.114637,5.616247,-1.922379,-3.113815,1.565967,4.910619,0.954402,-6.474955,-3.681361,-5.527637,-8.596251,-7.137300,-2.675459,1.549412,8.233355,-5.360829,4.702213,4.969498,-6.306402,-9.595356,-2.471752,-5.979010,-2.282890,-0.813435,-0.244986,-4.289333,-5.624345,7.386243,9.187230,-6.821791,5.560119,-2.647943,-1.185170,8.474441,4.740959,8.588872,6.746632,9.812513,-5.936292,-3.153821,-6.312153,8.501854,-0.500922,1.673360,6.582956,-4.129159,-3.947787,0.241005,-8.643087,1.421101,-4.887166,3.267497,3.300407,6.831744,-6.290104,-7.805664,-5.106101,-1.539233,1.343817,-9.216188,1.884541,4.072099,-5.692428,-7.068364,1.611342,-1.427647,-1.489066,1.423132,9.057199,1.967016,2.319737,-0.483237,-5.513156,-3.764963,6.344074,-4.041046,2.016284,-4.719006,6.354030,3.104848,5.178187,-9.103975,9.580060,8.751281,5.383266,8.506218,-2.750371,-4.736531,-1.849535,-6.740798,-3.620802,-6.801117,1.991856,6.387960,9.413150,0.919238,-4.541368,0.069044,-0.655273,-7.693139,3.891830,-2.001805,-1.710090,-8.082915,2.273471,-9.756490,-4.260720,2.051904,9.316157,-7.399655,4.796889,4.677266,7.771610,-6.500677,7.826452,1.959177,-7.787615,4.684757,0.513343,1.914751,-7.210664,-8.886869,-1.380167,-6.198499,-3.210139,-7.617453,0.305851,3.088396,-6.767129,-0.711841,5.329280,9.734662,9.644504,-4.656617,-3.842920,9.725193,8.823038,9.858857,3.805029,8.464520,-8.952629,-5.642202,-8.259278,1.757672,7.162454,-7.818614,6.927058,-8.915614,-4.072728,2.672350,-7.756040,-0.092526,-4.479022,4.912950,3.034099,2.621645,-7.071442,8.879789,-2.744380,-9.177880,-8.299752,-6.994020,-4.074508,-6.797911,4.849966,1.851389,-2.241925,7.064057,-1.029989,4.881217,2.212179,3.443829,-6.339465,-5.552708,9.733910,-3.739052,-6.415369,-1.644200,7.566753,0.432645,-5.374582,-2.896966,-1.358900,-7.104885,-7.565334,2.735884,-0.220796,1.278484,9.292285,2.818494,-9.368238,5.427591,-1.608939,3.873743,-1.740319,-5.830214,-0.528309,-9.628803,-0.487268,7.186980,-4.623371,9.038967,3.689539,7.716077,-1.259379,-2.282477,-6.649990,6.656024,5.052985,-4.848683,-5.467253,-1.627854,3.939332,7.207968,0.308495,-1.143829,9.640666,6.451957,-2.478123,-6.540912,3.870941,-1.621896,-3.162648,7.823254,-2.937945,1.500788,-8.872122,8.403939,-0.384116,-5.588696,1.925104,6.480199,-5.349648,-0.113509,6.313433,4.571555,1.683442,-9.762231,-4.752646,3.578876,2.158883,6.206830], dtype = "float64")#candidate|7006|(2520,)|const|float64
call_7005 = relay.TupleGetItem(func_5623_call(relay.reshape(const_7006.astype('float64'), [15, 14, 12])), 0)
call_7007 = relay.TupleGetItem(func_5626_call(relay.reshape(const_7006.astype('float64'), [15, 14, 12])), 0)
func_4848_call = mod.get_global_var('func_4848')
func_4851_call = mutated_mod.get_global_var('func_4851')
const_7009 = relay.const([[9.128241],[-0.184013],[7.652628],[9.228600],[0.230125],[-3.024632],[9.084473],[-5.713025],[-3.943521],[8.059686],[5.303362],[-7.687984],[-3.636147],[6.566969],[-3.973991],[0.261795],[-3.520687],[2.484050],[1.905792],[-4.900046],[-0.296680],[-6.882312],[-1.825204],[0.261386],[-8.860754],[-6.801808],[6.696637],[7.151956],[-0.948734],[8.785361],[-5.732623],[-8.985786],[-0.715461],[-4.279765],[-0.048682],[-3.226911],[2.438646],[8.789052],[9.671272],[-4.894954],[8.919511],[3.336465],[0.143816],[-2.900842],[-8.197682],[5.340986],[-2.015307],[2.591841],[9.065241],[-4.811115],[3.455326],[-6.890908],[-8.478196],[-2.320133],[-9.609410],[3.306115],[1.913762],[7.426030],[6.801939],[-6.340924],[5.182212],[-4.233150],[5.591271],[-0.829482],[1.373143],[7.615678],[1.033895],[9.625515],[0.803610],[4.445219],[6.612165],[2.421281],[-8.548131],[8.843144],[-0.724582],[2.022993],[9.549672],[2.903938]], dtype = "float64")#candidate|7009|(78, 1)|const|float64
call_7008 = relay.TupleGetItem(func_4848_call(relay.reshape(const_7009.astype('float64'), [26, 3])), 4)
call_7010 = relay.TupleGetItem(func_4851_call(relay.reshape(const_7009.astype('float64'), [26, 3])), 4)
output = relay.Tuple([call_7000,call_7005,const_7006,call_7008,const_7009,])
output2 = relay.Tuple([call_7001,call_7007,const_7006,call_7010,const_7009,])
func_7017 = relay.Function([], output)
mod['func_7017'] = func_7017
mod = relay.transform.InferType()(mod)
mutated_mod['func_7017'] = func_7017
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7017_call = mutated_mod.get_global_var('func_7017')
call_7018 = func_7017_call()
output = call_7018
func_7019 = relay.Function([], output)
mutated_mod['func_7019'] = func_7019
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7017_call = mod.get_global_var('func_7017')
func_7019_call = mutated_mod.get_global_var('func_7019')
call_7025 = relay.TupleGetItem(func_7017_call(), 0)
call_7026 = relay.TupleGetItem(func_7019_call(), 0)
uop_7038 = relay.rsqrt(call_7025.astype('float64')) # shape=(11, 6, 12)
uop_7040 = relay.rsqrt(call_7026.astype('float64')) # shape=(11, 6, 12)
output = uop_7038
output2 = uop_7040
func_7065 = relay.Function([], output)
mod['func_7065'] = func_7065
mod = relay.transform.InferType()(mod)
mutated_mod['func_7065'] = func_7065
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7065_call = mutated_mod.get_global_var('func_7065')
call_7066 = func_7065_call()
output = call_7066
func_7067 = relay.Function([], output)
mutated_mod['func_7067'] = func_7067
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6699_call = mod.get_global_var('func_6699')
func_6700_call = mutated_mod.get_global_var('func_6700')
call_7074 = relay.TupleGetItem(func_6699_call(), 0)
call_7075 = relay.TupleGetItem(func_6700_call(), 0)
output = call_7074
output2 = call_7075
func_7076 = relay.Function([], output)
mod['func_7076'] = func_7076
mod = relay.transform.InferType()(mod)
mutated_mod['func_7076'] = func_7076
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7076_call = mutated_mod.get_global_var('func_7076')
call_7077 = func_7076_call()
output = call_7077
func_7078 = relay.Function([], output)
mutated_mod['func_7078'] = func_7078
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4205_call = mod.get_global_var('func_4205')
func_4206_call = mutated_mod.get_global_var('func_4206')
call_7106 = relay.TupleGetItem(func_4205_call(), 0)
call_7107 = relay.TupleGetItem(func_4206_call(), 0)
output = call_7106
output2 = call_7107
func_7110 = relay.Function([], output)
mod['func_7110'] = func_7110
mod = relay.transform.InferType()(mod)
mutated_mod['func_7110'] = func_7110
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7110_call = mutated_mod.get_global_var('func_7110')
call_7111 = func_7110_call()
output = call_7111
func_7112 = relay.Function([], output)
mutated_mod['func_7112'] = func_7112
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6902_call = mod.get_global_var('func_6902')
func_6904_call = mutated_mod.get_global_var('func_6904')
call_7121 = func_6902_call()
call_7122 = func_6902_call()
uop_7124 = relay.sqrt(call_7121.astype('float32')) # shape=(2, 3, 12)
uop_7126 = relay.sqrt(call_7122.astype('float32')) # shape=(2, 3, 12)
func_891_call = mod.get_global_var('func_891')
func_893_call = mutated_mod.get_global_var('func_893')
const_7148 = relay.const([4.281062,2.074148,-8.250380,5.636517,-5.140489,2.298828,1.758757,-5.512922,-6.386591,0.072443,-6.910812,-1.617080,-5.749905,-3.141505,-4.238119,-4.845198,5.084466,-1.138303,7.438413,5.403046,1.468429,-2.352827,8.634330,2.714866,8.338099,-3.756147,-5.152498,6.200574,7.665691,-6.971316,-2.618081,4.947426,0.870386,-8.417132,9.118196,-3.164082,-9.986762,-1.627400,3.823565,-7.200959,-1.484951,-3.138733,7.251285,8.289373,-2.379009,1.210115,-1.147961,-1.414977,-8.520310,7.248580,1.554679,-3.509028,-4.616019,1.284403,-5.651514,-1.881384,-0.594041,-9.826231,-5.685269,2.818005,9.935938,-6.526392,7.456954,8.487151,1.814710,-7.070131,-2.827789,-4.583213,0.894521,-0.246725,2.411246,-3.514140,-0.727371,-7.311928,-3.035119,1.439574,-3.285303,1.001702], dtype = "float64")#candidate|7148|(78,)|const|float64
call_7147 = relay.TupleGetItem(func_891_call(relay.reshape(const_7148.astype('float64'), [2, 13, 3])), 0)
call_7149 = relay.TupleGetItem(func_893_call(relay.reshape(const_7148.astype('float64'), [2, 13, 3])), 0)
func_2998_call = mod.get_global_var('func_2998')
func_3006_call = mutated_mod.get_global_var('func_3006')
var_7157 = relay.var("var_7157", dtype = "float64", shape = ())#candidate|7157|()|var|float64
const_7158 = relay.const([[6.360946,-0.733285,2.087832,-6.962976,-2.756099,-8.761028,3.630267,-9.942700,8.436460,5.877054,6.474971,-6.787034,-2.637744,9.806384],[-5.194412,3.739102,3.247557,-0.194346,2.505308,-6.998546,7.875613,1.652925,-1.456120,-5.078269,-2.785231,1.929130,8.581595,9.005130],[2.677972,-1.821127,-3.274220,6.743320,2.843575,-5.063368,8.101325,6.063502,9.055228,9.464730,-7.267973,-5.056085,-0.701061,-0.824282],[5.180794,4.859477,-2.646147,-8.980488,4.560003,-7.812566,-4.270401,8.763136,2.088526,-0.276881,-4.598323,9.837866,6.278176,0.015928],[4.002584,1.300362,-3.109384,-4.030561,-0.764258,6.279281,-1.234347,7.488858,-4.300284,-5.551046,4.925510,-8.995158,6.015293,-9.865057],[9.869938,-3.480841,1.781516,-2.122199,-6.014734,-4.247127,8.803243,-7.833652,5.707298,-1.847494,-5.654309,8.339334,2.723592,1.480805],[1.159583,-2.669642,-3.019925,-2.284349,-8.365483,6.839046,7.760301,-0.865508,3.747293,-9.279480,-5.671173,-1.111945,-3.073183,-7.863901],[5.896361,-3.952707,7.264957,-9.281235,4.686828,2.702169,0.469752,-8.458951,-9.800536,5.737523,4.035040,-1.431833,2.670800,-5.571771],[-1.242770,0.270651,4.332378,3.202429,-4.582161,-0.426331,-2.135336,-9.483588,-7.783164,-0.801541,6.134808,-0.468610,3.862283,-0.931485],[0.995977,-8.978931,8.817606,4.872743,5.819504,8.031487,-7.171763,1.491877,3.022073,-7.623285,-4.012412,-8.022270,8.058195,-7.817944],[1.720943,0.235075,-0.599449,-1.461531,3.537947,-9.225343,-1.932001,5.291874,0.328464,7.473755,-6.079482,-8.678955,-0.769870,-4.839980],[1.118831,0.774373,0.233073,2.349491,-2.620752,2.298493,8.010468,2.375221,3.423025,0.485414,6.110465,7.601277,-2.879101,0.004645],[-2.789239,-2.469565,-4.682344,-7.820721,-9.963101,4.354420,9.985650,0.922562,-7.183326,6.544715,5.051527,-9.565192,2.013602,-5.187082],[2.402041,9.810042,3.724541,8.559703,7.895411,0.691864,7.844555,-3.660538,5.685788,-2.852212,-6.312581,9.070573,-1.102896,7.231240],[7.854935,7.163921,7.776379,-1.909017,8.950285,-8.075924,3.466596,-8.405413,5.894405,7.003592,-9.807270,-3.626553,5.988945,-9.473410],[-5.841264,-0.616810,7.795804,-9.754823,-4.335009,7.430219,9.756812,-6.311549,5.749513,7.455895,2.936278,0.616152,-9.894013,7.654239],[9.471710,6.190922,5.466587,6.663694,-6.118862,5.289071,-8.096175,-8.503719,-5.715706,-0.338709,5.357080,-6.120615,7.811683,5.098033],[-7.078349,1.794508,-3.955238,0.143062,-7.317187,4.661517,-3.206532,1.431262,2.584747,-5.522666,-4.952076,-4.659294,8.612981,5.606646],[-0.209990,-1.684515,0.841455,1.406698,2.859192,3.389327,1.075191,-1.399242,1.462969,2.780104,3.998671,-7.936754,-5.753725,8.988716],[-7.175870,-2.927085,9.811453,0.461499,3.859865,5.047940,0.151864,-4.516079,1.307598,-4.801704,0.930498,3.346337,-7.529364,-2.996736],[-1.264612,-4.811493,-6.473800,-6.120531,8.933192,-9.690508,-3.065353,3.958218,-1.693475,-7.674050,-0.269595,-9.783767,-6.185903,-0.229781],[-8.509174,-3.593896,7.658712,1.049779,6.337974,0.836318,4.655992,9.913314,9.122448,1.997741,9.392219,4.318408,-5.349635,8.609090],[-7.568161,4.110798,-3.788950,5.869928,-8.228814,-6.860191,-3.410857,0.700414,4.215840,8.188941,8.601526,9.639257,7.884099,1.904263],[-1.750434,-9.082198,-2.942239,5.592988,4.356095,-9.492504,6.161926,-4.574462,2.685335,4.750982,-5.546070,0.909643,8.123654,-3.546991],[-3.077956,1.725505,-6.548480,5.537773,1.607822,-6.127399,6.332814,6.084712,1.316047,7.647739,0.510699,8.948716,0.018862,3.714699],[5.625030,5.860055,1.810194,1.374621,0.900626,3.899253,0.292009,6.960588,-0.442204,-6.950957,-0.894301,-4.554486,-0.092851,-3.337549],[3.551244,5.236963,2.933252,-1.222233,1.246055,3.916102,-7.824754,2.131001,-6.174655,-2.801363,5.029186,-4.125535,-9.111596,0.108467],[-7.583530,3.459344,-3.781402,6.457623,9.970768,-7.123650,4.956140,5.123703,-6.626501,4.123701,-5.262273,-5.041719,-9.663565,2.418362],[6.134188,-3.949479,-2.503403,5.771258,-9.474146,1.642131,-4.532477,-0.871501,5.229888,0.898631,-2.942922,-7.588569,8.931726,2.940247],[1.635593,-0.385235,8.417038,-6.802744,-7.765031,-9.663975,-4.060785,6.647192,-0.332160,-1.150456,4.311714,7.051442,5.646661,-3.534587],[-1.385334,-2.467604,5.331557,4.269112,5.003386,-9.380168,8.233772,-8.521228,-6.354884,9.035417,2.537074,-8.768894,1.227458,0.501051],[7.066512,8.164619,1.446242,1.990359,1.505808,8.684982,8.084276,-6.581709,7.683399,-0.156429,-2.622712,-9.177617,-5.600150,7.049334],[-2.415101,-6.664776,-2.519238,-0.843040,6.793383,-3.563189,-9.478890,-4.749803,-6.346814,-9.343498,3.517564,6.906907,-5.200130,-0.540405],[5.861272,0.201787,-2.520269,6.839670,0.142808,-5.726436,-4.603892,9.469766,-4.063246,-0.263854,6.446966,-5.473887,6.657008,-7.697489],[0.762238,-2.851289,-8.942410,3.642384,4.835166,-9.731227,-3.527452,-4.567762,1.284520,8.344998,2.606366,-9.020607,-7.474651,4.841397],[3.799621,-5.636167,-3.826824,3.350421,-1.662887,6.331837,3.411189,-6.664294,-5.915649,-7.254807,2.854718,-1.087024,1.136111,4.973465]], dtype = "float64")#candidate|7158|(36, 14)|const|float64
const_7159 = relay.const([-6.373917,-7.943832,4.711352,-7.249051,-0.647212,-8.396897,8.214787,5.183464,3.198634,1.842055,6.976963,7.887672,6.112276,-6.564120,8.243435,2.452488,4.018350,2.485697,3.940518,-1.224449,6.364896,7.645945,-7.340385,1.677025,9.955661,-6.532637,-7.473960,4.660292,-0.104538,-4.813035,-1.108028,2.201185,5.933209,4.862094,-5.821449,-3.483467,-0.305961,-1.957249,-5.959772,-6.662776,7.208467,-9.784032,-5.423710,1.322050,-5.365870,-1.856918,6.887882,-3.550691,-1.575131,3.447236,-6.373012,5.419343,5.650450,8.315193,3.371435,2.879738,-8.838124,-7.180881,-6.708705,8.771124,8.781837,4.539751,5.848142,-3.374733,2.353630,3.303909,5.669177,-1.753707,-9.215952,9.471697,8.675453,-3.376980,-5.651087,-6.148789,-1.425615,1.734503,-0.006722,-8.385180,4.156151,1.761198,-8.267026,-7.400364,8.969633,8.884683,-9.141743,1.487156,5.097363,3.573186,-8.616585,-3.910381,8.769250,0.425202,2.894559,9.350572,-8.864717,1.183857,5.084661,-5.732717,4.648304,7.955926,-7.881381,2.747456,-1.490585,-1.398130,7.743288,-2.630828,-8.329511,-5.602424,2.184274,-6.978065,-4.956569,0.610633,0.731269,5.819414,3.057060,-6.187563,4.690078,1.416073,-8.901761,0.321781,0.981968,-4.311137,3.443292,8.243307,3.443239,-8.925913,3.980480,3.039669,7.367847,6.396808,4.548550,8.106681,-5.601528,5.495072,-7.391729,-8.109291,-7.568175,5.149403,6.941123,-5.021850,2.940523,-1.282986,-0.794654,3.408474,-3.832838,-9.849868,5.613989,3.459319,8.564175,-0.876732,0.863024,1.573358,-6.692516,5.683837,7.002509,-7.451072,-9.200960,8.796035,-0.670170,-9.269351,-7.995333,9.994902,-3.905337,3.590558,3.775091,1.096933,-0.411986,-4.526768,-1.033760,-2.527459,0.449266,-3.576225,6.204808,0.806413,-2.917759,9.125069,-1.935238,-6.691223,6.080357,-4.669076,-9.195290,3.921195,-6.973800,2.861289,3.610130,-5.692046,-2.549150,-7.292189,9.100950,4.843011,8.163205,-8.555825,9.751863,3.212126,-4.380170,4.984703,0.733935,1.346897,-7.513235,-6.906228,-1.478633,3.300519,9.475759,-2.609285,7.481976,0.341171,-9.855713,-9.623000,-3.214609,-5.587280,-9.826789,1.367298,-3.103697,6.174233,2.473423,-2.862262,5.606728,-0.381627,5.028015,2.335277,3.567500,-2.268037,-0.507727,3.475267,-0.282210,5.792334,-3.680143,-3.632221,8.368367,2.066373,-1.955616,-6.033628,6.961271,-2.828343,5.947014,3.805501,-8.705706,2.326482,1.665722,-0.603045,-1.295579,-9.667824,-2.130178,-5.173476,-1.746995,1.635509,7.177582,-0.922528,-4.447097,-5.421697,-3.850495,-5.780740,6.257695,2.479003,2.315294,-8.065730,8.042168,-2.260847,8.928367,7.766800,-9.106630,-6.888867,-7.582801,5.162324,-1.165364,2.893882,1.475098,9.009420,7.522986,2.964761,-1.014276,-5.580417,-8.096749,-6.869893,9.256892,-2.467367,-8.388929,-5.137188,1.360734,8.084102,7.934580,6.706486,8.902242,0.154554,2.919791,5.877922,-3.646550,-3.329121,-4.960077,-2.843142,-8.520597,8.859459,-0.291424,-4.333311,8.229423,5.528884,-8.507919,-9.909675,2.898093,-3.501047,-7.272711,3.491932,0.508338,-5.316523,-7.296740,-6.779536,0.420560,6.503515,4.254292,5.971684,3.080863,5.195136,1.591911,0.637480,7.179038,-8.360671,8.871843,-6.798194,4.054519,-2.226744,0.474829,-0.711405,4.510426,-5.438517,6.596356,0.344758,-4.153241,-4.535940,-3.221334,4.165666,3.211265,-2.951520,6.812309,-4.462662,3.287845,-7.850244,8.739663,8.923615,-2.696246,3.062260,3.947951,-1.098040,4.827394,-8.477385,8.706539,3.139198,7.414333,4.139328,-1.924877,8.469886,2.148363,-6.359654,-7.465221,3.829554,-9.037386,1.712158,4.752353,8.150305,-4.926209,8.311956,9.146523,5.784662,-8.106838,8.582139,-6.859355,-0.090822,-3.339570,-1.679652,-7.101399,9.360492,-9.998010,-5.781602,7.117895,-4.038580,7.782054,1.563605,-6.714927,0.910571,2.225578,1.016177,5.922661,1.842676,-7.526273,7.484178,5.445019,7.345454,9.419080,-9.416624,-5.334896,-9.538695,-4.602348,-7.992673,-6.380486,8.773546,5.816114,7.355534,-6.175623,-2.706212,-5.804205,5.734948,4.797750,1.495565,-1.251964,8.178522,-4.465106,6.721573,3.619710,2.826244,4.271751,4.947727,3.441971,-8.928121,-5.315597,9.173210,-7.863790,-3.627949,2.139635,-8.394384,4.134100,-9.084299,1.484136,-1.600496,-4.401848,9.146146,-3.773882,-2.155514,1.435286,4.604690,5.470249,4.023128,8.828226,1.958976,9.225643,7.128487,1.761725,2.242011,0.921452,7.741878,7.335409,2.209008,-1.225337,-0.991302,-6.898336,4.253398,-3.434190,0.201740,-8.388542,-4.997090,-6.264348,7.204367,-1.236846,3.658114,-8.786518,9.816412,4.183204,-7.957059,-2.751061,3.406354,-6.033968,-7.709213,0.560938,3.537946,2.636983,-1.518804,9.709992,2.729932,-0.545456,0.729107,-8.327041,-7.371683,1.663667,1.429281,9.814947,5.603032,6.548991,-3.658350,2.848591,-2.312758,-5.191392,6.759217,-0.585748,8.993080,5.857117,-5.045017,9.959560,8.613070,3.720143,-8.348984,6.169104,-6.570786,6.619350,-9.846157,-1.671492,1.011037,5.410350,-2.803405,-8.972656,-9.572507,-6.366347,1.763169,2.161837,2.912076,0.628316,-1.880440,0.797531,2.547634,8.015509,6.163276,-3.505935,-9.523574,2.644836,-4.613708,-2.075886,8.975035,3.989413,-0.045448,3.981029,6.418775,4.692924,-3.004145,-1.435851,-9.050162,0.855382,-1.357306,-6.345211,6.557252,1.652371,2.334630,-1.025632,5.681569,2.232316,-2.222663,2.772971,9.939619,7.846509,5.898074,6.148840,-1.449501,1.128409,3.311813,3.203591,-6.846175,-0.524551,2.221515,-9.027024,-8.351984,-4.117070,7.049392,-6.844152,5.073964,-7.527392,6.916176,-5.093351,-3.040740,-4.455316,9.445570,-0.872396,8.358516,-7.284096,5.574804,7.048289,-2.314873,-3.425052,0.494910,8.431251,3.927440,5.408381,3.378231,-7.950588,7.926537,8.519971,-2.648455,-4.579710,-5.710445,-8.941089,-3.279734,8.952857,-9.426072,-6.243816,-2.074118,-7.703534,6.372007,6.197726,9.499213,-4.596500,-0.979414,5.265213,2.554194,-0.418551,-5.774424,5.907511,-9.723935,-3.153780,-5.685925,-2.029060,-0.238059,-3.221348,-4.419424,-0.699712,9.259567,5.816683,7.479542,0.033839,-9.158819,-0.246473,-2.018939,9.283118,7.832035,5.237943,-9.215264,-6.500268,-2.282400,-6.134167,-4.291515,-6.210111,7.087066,-7.300085,8.788623,7.719556,9.054389,-2.664882,2.732264,0.115890,6.116141,6.746694,-3.955966,-2.138358,-7.429558,-4.329727,-5.689564,2.336706,-7.669146,-9.402401,3.930207,5.045864,1.975812,-7.275491,-4.382225,2.903831,2.404806,0.268008,0.604343,-5.638855,2.959921,-5.984818,-6.672773,1.923654,0.372121,-5.916347,-2.004428,-9.738861,1.924035,-9.967721,-0.571142,-7.704181,-0.364361,2.497538,9.771793,-9.613201,-3.658474,-6.757962,-7.350807,9.925312,0.293705,-7.679027,-1.687663,-8.474140,4.740332,3.408105,-5.213677,5.196858,9.181172,-7.364880,8.071839,7.823682,-9.140917,-6.881051,-1.786334,-0.553922,3.036274,8.282530,3.089321,9.074122,-6.170300,-8.945769,-1.435944,-7.805170,3.279115,2.592334,3.777882,-6.435096,-3.955004,-5.978108,4.786423,6.577265,9.789344,-4.143182,-0.248005,6.826204,-1.805610,5.161794,-1.279449,-0.924108,6.532638,-1.090022,8.243508,-5.252010,8.312520,-3.442896,2.762442,8.240531,-4.821135,-8.595869,7.409248,2.907248,0.654415,9.197713,-4.734257,6.985678,5.544922,-0.961163,0.507935,-8.852831,9.637151,2.618688,-9.132254,7.418155,-8.213894,1.215563,-3.907500,4.401790,-7.860748,1.716204,-3.237903,-1.642506,-9.994573,-2.935126,5.118563,-3.746764,8.711802,5.668741,-5.963253,-3.022901,-9.069859,-3.992816,9.103569,7.579952,-4.006830,-6.053308,7.572069,-3.990946,-9.250102,3.996029,-7.124231,-7.833025,5.826239,7.475896,9.571255,-9.319297,-6.805959,-9.585012,-8.876875,2.406196,-8.230778,-6.751447,-7.001564,5.983959,4.835624,-6.120454,-0.070419,-2.668481,-4.652746,0.403868,6.939094,-4.687872,-1.338463,1.880414,-9.236977,-0.725351,4.213801,-9.634665,2.902299,-4.681209,0.819853,-3.397441,2.145936,4.667937,7.572988,4.001795,2.554170,-6.220200,-3.663095,-9.180766,-8.659087,5.379448,7.550326,6.956348,1.710414,-6.634814,-0.645882,-2.610935,2.204847,0.139561,-4.014962,1.932317,-1.846778,-0.321115,-1.453345,3.907401,6.349144,-6.195401,7.983145,3.103906,8.645337,5.419781,6.990616,3.192116,5.533781,7.844201,-9.851497,9.609724,-7.140645,9.501223,5.511006,3.297918,-2.989386,1.848596,9.523649,-3.751160,-1.276319,-2.387066,-8.572845,-3.237712,-7.245993,5.875696,8.721625,-8.314961,-5.549453,-1.913063,-6.479358,-7.334772,8.750034,-8.904140,8.636900,6.002760,-9.409315,3.515508,9.017734,0.271237,1.682024,-8.181441,0.464119,-8.372210,9.153232,0.500557,-5.025416,-6.940972,-0.008250,-6.669585,7.919633,5.406037,8.866935,-0.490863,1.692117,-1.190921,0.064888,9.022997,7.142580,-4.282210,-1.275237,3.380982,-6.539154,-8.601527,-1.876789,-9.084976,-7.984055,-6.215350,-5.999687,-4.009835,-3.119635,-9.157777,-7.434409,-4.864737,7.330232,-5.968786,7.398855,-0.882232,5.302623,-2.327619,8.577352,5.692101,-6.266810,4.654165,5.064949,-6.998260,-4.531285,9.173405,-0.295658,0.017937,-2.782037,0.044461,3.221857,6.510595,-4.041066,-9.708437,-2.045421,1.083625,8.123142,2.164711,5.774431,-8.597048,-9.818678,-7.232230,-3.283441,-2.037992,8.172865,-7.466494,0.500788,8.328149,0.082358,5.774592,6.162044,-2.869371,4.940554,6.612082,-3.900200,2.318572,8.339094,1.354843,0.045741,9.523305,-8.598611,4.887845,5.157814,1.278984,-6.012743,5.259841,-6.754405,6.755553,2.074161,-6.717355,-8.133856,3.795802,3.363479,7.461131,-9.726956,1.772877,-8.211111,4.104573,5.948050,-3.859023,0.771822,8.977780,-9.224479,-6.750878,-5.594866,3.017800,-4.643965,-3.573488,1.302033,-3.164618,-5.651690,-9.307170,-0.217669,1.693640,2.979143,3.726439,7.205278,-8.322293,3.204596,5.725044,4.435279,9.307561,2.954605,4.068020,1.110976,1.952202,8.587649,3.694732,0.890285,2.108005,-7.402764,3.255496,7.677715,7.620218,-6.433369,-1.190068,5.433985,4.887736,-1.731428,-2.096503,-4.914333,0.541834,6.645230,7.900347,3.859677,0.754300,-2.634324,0.428574,-2.839263,-9.803603,-8.529706,-9.192119,-2.418013,-8.544119,-8.001842,4.161339,-2.036445,-2.804036,0.429456,-2.994483,-8.474343,-9.236998,0.949941,8.342291,2.633829,-5.931220,-1.160978,7.206270,0.065245,2.125422,-3.662329,-1.474129,-6.694622,7.867969,8.809263,-0.326677,2.764330,-2.322901,9.804354,9.226172,2.150004,-5.084210,-5.022235,8.407937,1.207073,-8.675921,8.348182,1.424258,4.062879,1.529887,-3.181865,9.181211,-4.094521,-0.082403,6.049750,-6.198815,-6.335647,-0.082021,0.188540,-3.017637,9.418860,-6.043641,4.622391,-3.949228,-2.089994,3.061724,9.383729,9.333779,-7.788468,3.754935,9.137014,0.516720,-6.969190,-4.624595,2.229543,7.484305,8.970434,9.439624,8.913778,-3.299516,7.960206,-0.599722,-6.984872,-7.462599,-7.118928,-6.469701,-4.180092,2.484412,3.318480,-4.864404,-7.450552,9.459596,2.115325,-3.797983,-1.861213,5.100874,4.276934,4.653525,3.490827,-7.099957,9.222000,3.892441,-0.233072,0.481995,-2.158532,-9.879901,9.651686,7.033695,-9.844118,5.265646,-5.631978,-3.537371,-4.392483,0.664336,-2.143908,1.833708,-0.378293,6.061646,6.916508,-4.943897,-1.846834,-9.903992,5.301444,-9.783792,-4.553129,-5.600340,-7.367795,-9.281559,-6.909496,-8.545074,0.650678,4.019319,-7.890409,3.267864,0.451583,-1.042208,-2.670699,0.446227,-1.599011,-8.904549,3.611103,4.171955,5.463454,-4.457003,5.080472,-3.470992,6.791977,-4.527953,-9.049186,6.669383,2.477174,0.733491,7.905938,1.837351,2.826221,-0.302577,1.991208,-6.336964,6.747315,-3.319725,-0.016474,0.305219,-8.402570,3.938602,2.174150,-0.290159,-0.835758,8.388529,-9.935721,4.370472,-6.102001,-4.345085,0.596909,-2.353869,-8.023622,6.043152,-8.026178,-4.267749,-9.764303,3.590786,-3.659812,1.311788,-4.121814,-1.108171,8.707721,-0.692081,3.029103,2.517669,4.142721,0.568648,7.074144,-5.053002,-9.968244,-4.708599,8.246259,-5.583259,-7.118272,-0.663030,-0.424419,7.594070,4.272427,2.623182,3.037152,0.998629,1.496478,-7.486767,-1.523960,-4.553276,1.654452,2.186747,-3.647204,-4.550599,2.423695,1.418169,-5.616805,-8.343449,-8.297341,-7.519707,-8.293290,7.012702,9.805425,-2.110660,-3.697429,-6.503275,-2.993637,-4.014534,6.538590,6.108212,-8.830694,9.841478,3.992101,-8.067678,7.021999,6.846687,-9.670023,9.076767,-6.659112,6.102441,-1.557152,-7.432903,-0.450233,-3.339643,-6.430378,-7.832509,-1.009656,5.308914,7.314703,-5.797855,-6.810146,8.165625,-7.476470,-8.372202,-0.386449,8.548871,1.923032,7.284705,2.915254,-2.432825,2.795210,-0.355426,-3.994400,-1.504036,3.766801,-8.020095,-3.277381,-5.236545,1.939019,-2.080505,8.568532,-7.782726,7.118850,-3.106164,0.041979,-1.528583,8.662677,1.937702,-9.995947,-5.560705,-8.227116,-5.660601,-1.716328,8.561175,5.276139,2.622216,2.364837,-8.886462,-3.882340,5.603237,6.475771,-2.553251,-7.033424,-2.124120,1.444819,-9.849845,3.339526,7.060424,-3.844540,3.966442,-6.653292,-5.103793,6.638444,-9.434202,0.610560,7.106355,-0.740505,6.553430,3.017372,7.900921,-3.101096,-7.817906,-5.704322,9.883268,-3.554271,7.507422,-5.163344,0.445537,-5.587715,2.515468,9.149733,-4.344586,-1.132143,2.280021,1.403304,8.592727,-4.703253,7.351994,6.379034,3.369481,-3.180141,-4.637438,-3.061097,-3.557638,3.181778,-7.171424,-7.078504,-7.223566,5.235291,3.824965,0.358484,-4.561048,-0.795001,-0.264916,5.182356,-6.836078,-5.729524,-7.833678,-9.732076,3.972655,-7.305963,-2.803085,-7.727951,9.364451,-0.700006,-7.012014,5.041791,-1.492541,4.765146,2.131680,-1.069941,-2.654588,-3.892494,-2.817359,8.521959,8.687221,6.043460,-6.482328,-2.838409,3.196211,-2.710461,-5.583146,1.950431,-0.704419,-6.343574,8.448611,0.834850,0.943971,-0.276657,-8.727320,-2.948204,0.316168,9.294952,5.549413,0.686258,0.881836,4.149389,-6.802333,-1.269388,8.664747,-5.663908,5.985108,-5.553439,-2.659788,-2.860145,-7.361661,-6.202995,7.890858,7.860614,1.525720,7.570933,7.787995,0.228188,4.711556,-8.624586,-5.983734,7.623411,-0.807244,-4.182302,-8.002662,5.529013,8.872603,-1.236802,6.377023,-8.785855,7.302750,1.130564,-9.773268,-1.379860,-7.314188,-6.364202,3.473512,6.993578,3.632466,-2.864236,-8.317602,-2.815476,6.373357,-0.173658,-3.747030,-3.928462,3.250169,-4.006987,-2.210002,2.120579,5.080191,2.116947,-0.483993,-3.151725,-5.904298,1.391985,-6.880466,9.097529,0.127186,0.919047,-6.766953,5.041530,3.725279,4.476011,-5.457686,6.174899,-7.681354,-1.459096,3.960041,-0.092697,-7.088786,-4.256759,9.776821,-6.439637,-2.003463,-0.968396,3.067080,-7.287531,-5.288289,-2.942161,-6.257305,-0.767917,-1.003237,4.179326,-8.291191,-6.442490,-0.015219,8.084579,-6.380226,-6.306140,4.460693,3.767226,-7.024261,-0.824126,6.263028,6.319096], dtype = "float64")#candidate|7159|(1470,)|const|float64
var_7160 = relay.var("var_7160", dtype = "int64", shape = (242, 4))#candidate|7160|(242, 4)|var|int64
const_7161 = relay.const([2.499265,7.498113,6.901329,-9.585128,-5.926720,5.705172,1.018861,8.622745,3.368470,0.596112,6.583938,-7.596751,9.150870,-7.585361,3.193745,-3.400072,-4.233435,-8.559926,5.463011,6.857013,-3.577801,-9.725115,-8.875066,-6.517494,-5.797947,9.967057,3.462795,-3.998776,-1.506497,8.261783,-3.933402,-0.858724,3.206058,-9.519661,-5.985071,3.969484,7.715081,-7.453452,4.777308,4.336834,-2.039101,5.383686,-6.547503,7.409473,-2.323233,2.504742,-8.059869,-9.862562,-4.192864,4.066529,-5.170501,-8.731932,-8.270542,5.847985,7.514640,-7.119129,7.318093,-9.627879,9.410923,-5.685065,-4.474103,-7.750950,0.216513,4.794310,-0.617588,-2.526757,4.460318,-8.228172,-6.412983,1.998736,-3.026996,1.516569,-7.418687,6.352110,7.842791,1.913725,5.127607,0.518517,-7.134213,6.703238,4.251915,0.769927,-3.914530,-8.823378,6.760937,-4.130125,2.262351,7.950009,4.101231,9.102345,-8.860131,6.108138,4.995527,7.181845,9.913862,-6.771392,-4.849046,9.408206,4.640674,5.874073,4.499806,-8.924809,-4.727045,-3.293404,-8.781585,-7.558684,5.694749,4.363502,-9.198123,-0.766195,0.727597,-7.026250,9.611679,-2.467411,-0.649599,8.803501,6.567669,-8.463332,-2.813214,-0.536383,5.363024,9.938212,-2.315910,8.573901,8.339198,-2.696014,-3.021823,8.974675,-4.558692,-0.727004,7.006489,-3.540249,7.835047,-4.189496,-7.141181,-5.805704,-0.619591,-5.976405,-1.552589,1.776106,2.322125,-2.888356,0.360446,3.139733,0.767305,-7.732084,-1.328080,-7.535351,7.064016,6.839627,1.723301,8.685083,6.717535,-0.258069,4.515211,-1.464573], dtype = "float64")#candidate|7161|(156,)|const|float64
const_7162 = relay.const([[-9.996217,7.624569,-8.443969,9.059373,9.268687,-7.716643,-0.725127,7.629340,5.534701],[0.655930,-6.655158,9.398907,-3.000898,-8.048785,1.496499,-4.616628,-3.894315,-9.749376],[0.964312,4.113212,0.432691,5.088686,6.287574,8.144200,-2.455441,-5.622047,-5.829083],[4.264583,-4.300375,4.784876,-1.898107,7.423481,-2.916891,5.040069,-2.942296,-7.651041],[-9.764250,3.729974,-2.667242,-2.566513,-2.643825,-8.614348,2.395375,1.086653,8.588550],[1.082417,-0.846671,-8.636748,2.251658,1.157463,4.042189,5.609519,9.172874,3.997011],[5.906686,-7.703740,4.172091,-7.094225,-4.787112,-8.250134,8.821156,6.703143,8.533069],[-5.103045,-6.090731,-3.077357,5.190944,0.047228,-4.364701,8.726545,6.333457,9.839990],[-6.033052,2.968121,9.639878,-5.235143,6.006303,4.422601,8.873802,5.745925,2.197344],[7.138944,6.323108,1.003763,-7.485735,-8.081126,8.383583,-2.772194,5.972500,-4.082649],[3.276897,7.521985,0.672300,6.204475,-5.953784,-3.267536,-6.748934,2.351846,-2.949894],[-8.021756,8.375648,-1.918335,-5.966977,-1.394252,-8.878900,0.181421,4.782289,6.282570],[1.503618,4.845055,0.527600,4.028772,-8.919385,-7.640829,4.977456,3.305343,5.155964],[9.687467,-3.344730,7.371109,2.935335,-2.194760,-5.093895,3.781904,3.724539,9.629393],[-4.998330,-6.953939,7.685297,2.936301,4.010251,1.742372,2.011679,2.503758,-6.256597],[-8.835447,7.221092,-9.772529,-9.606248,4.787871,4.532511,7.614438,4.040902,-3.067055],[-5.650099,4.680944,-5.843499,-6.534937,-9.623210,9.029340,-5.600564,-6.638404,-9.446895],[5.123772,-2.187712,-9.647019,-0.055481,4.681342,-5.604979,-6.089411,1.835524,-0.789651],[2.724057,8.737887,-5.525311,-0.618508,0.836572,-6.768296,-5.571128,-2.833606,-0.755742],[-5.572743,-1.064028,-8.289631,4.150160,1.427566,1.267199,-4.181597,-0.599971,-2.610612],[-7.906172,-9.166063,2.342035,8.610158,-0.259607,-6.496841,1.842413,2.286394,-0.867556],[-7.489018,1.946608,-9.675094,4.662627,5.027599,0.773788,9.733783,-1.495664,8.025115],[-5.583796,6.584658,-4.152781,-7.195513,-5.643141,-0.426580,5.141350,-3.017243,-3.382748],[0.262685,2.134754,-3.856238,-6.882914,-9.151884,1.060953,-9.354854,1.915523,-4.886670],[0.400950,0.431467,5.589197,-4.449675,-1.164173,1.019538,-3.029166,-4.402512,9.307035],[-0.522194,-3.107034,-9.693479,-4.124644,-7.645416,6.288628,0.497475,8.091197,-2.762333],[-4.755323,5.202129,-5.630594,-5.173287,-8.897576,-3.730199,4.611307,7.657040,-6.941223],[7.146434,5.466149,-1.362983,-1.502544,9.504976,-5.172632,-9.147317,5.342655,0.882179],[-9.272594,-7.879929,-5.015326,-7.214226,8.695412,-5.709259,-1.268332,-2.546090,6.320857],[-9.105713,-1.218709,0.308697,4.826586,-8.340334,6.551571,-7.144929,7.802902,-7.676751],[-1.359509,2.026519,7.327517,6.638218,7.677759,3.345458,-3.122191,-8.993937,1.970296],[3.546284,-7.556048,3.675192,8.445000,1.592031,-2.297059,-1.458568,2.967088,-7.853812],[6.515001,-0.326608,9.408925,6.659473,1.363791,6.261975,8.751233,3.759484,-3.702198],[-8.211336,4.179269,-6.015219,3.048409,-0.771981,-9.252263,2.012509,-0.910833,-1.626107],[2.240191,7.993615,1.748043,-1.194989,5.688157,-9.197047,-6.536930,2.694890,0.228058],[-4.552123,-8.077965,6.796727,9.663134,8.553263,-7.773258,-4.473804,9.287067,-1.277085],[-8.549219,-7.633336,-5.294090,7.502996,5.565448,-9.516123,-1.218054,5.888445,6.771618],[1.514287,-3.140606,-3.444113,-9.822742,-1.393514,-1.213611,-1.693083,4.816704,-9.594096],[-2.968199,1.418729,-0.477042,-4.385781,-4.623242,-8.929725,-0.345404,-6.150214,-5.203031],[6.092763,9.623113,-1.049073,-8.316042,-2.110686,5.093151,0.837329,-2.447680,5.954028],[5.880538,6.019849,-5.111472,7.495205,0.113541,5.606754,5.753664,-2.176922,-8.691323],[-2.758141,-4.566997,5.935525,-6.228994,7.752988,1.836548,1.678015,-1.448107,-8.626609]], dtype = "float64")#candidate|7162|(42, 9)|const|float64
call_7156 = relay.TupleGetItem(func_2998_call(relay.reshape(var_7157.astype('float64'), []), relay.reshape(const_7158.astype('float64'), [7, 6, 12]), relay.reshape(const_7159.astype('float64'), [1470,]), relay.reshape(var_7160.astype('int64'), [968,]), relay.reshape(const_7158.astype('float64'), [7, 6, 12]), relay.reshape(const_7161.astype('float64'), [156,]), relay.reshape(const_7162.astype('float64'), [42, 9]), ), 2)
call_7163 = relay.TupleGetItem(func_3006_call(relay.reshape(var_7157.astype('float64'), []), relay.reshape(const_7158.astype('float64'), [7, 6, 12]), relay.reshape(const_7159.astype('float64'), [1470,]), relay.reshape(var_7160.astype('int64'), [968,]), relay.reshape(const_7158.astype('float64'), [7, 6, 12]), relay.reshape(const_7161.astype('float64'), [156,]), relay.reshape(const_7162.astype('float64'), [42, 9]), ), 2)
uop_7193 = relay.cosh(call_7121.astype('float32')) # shape=(2, 3, 12)
uop_7195 = relay.cosh(call_7122.astype('float32')) # shape=(2, 3, 12)
var_7200 = relay.var("var_7200", dtype = "float32", shape = (2, 3, 12))#candidate|7200|(2, 3, 12)|var|float32
bop_7201 = relay.logical_or(uop_7193.astype('bool'), relay.reshape(var_7200.astype('bool'), relay.shape_of(uop_7193))) # shape=(2, 3, 12)
bop_7204 = relay.logical_or(uop_7195.astype('bool'), relay.reshape(var_7200.astype('bool'), relay.shape_of(uop_7195))) # shape=(2, 3, 12)
bop_7210 = relay.mod(call_7147.astype('float64'), var_7157.astype('float64')) # shape=(2, 13, 3)
bop_7213 = relay.mod(call_7149.astype('float64'), var_7157.astype('float64')) # shape=(2, 13, 3)
func_6322_call = mod.get_global_var('func_6322')
func_6326_call = mutated_mod.get_global_var('func_6326')
const_7219 = relay.const([-6.506509,-1.732108,-8.083865,0.882390,5.815251,1.265143,-9.008784,-9.677197,-3.548608,1.782151,-3.526606,-8.675610,2.853971,-7.122931,-7.175709,5.489253,4.636816,3.558277,-5.386947,6.699847,-4.790321,-1.870502,-1.581422,1.017137,6.839821,-9.457415,-8.072415,7.995460,-9.747165,-9.639624,-8.357357,3.432850,-1.070871,-1.140431,7.751696,-1.936070,-7.894631,1.797920,2.010313,5.478380,7.028156,8.255873,9.370878,0.886425,-6.487634,-3.823789,-4.863331,-2.532716,-0.110760,4.658464,6.573837,1.264589,9.506312,-5.623843,-3.483128,0.255171,3.173560,6.544454,7.787861,4.587946,-0.648319,-9.524902,3.437577,7.636908,5.252158,-6.875959,4.363861,4.781245,-2.273574,1.414010,7.835931,-4.401207,6.688714,7.910104,-8.195782,1.835428,-3.437118,7.593660,-9.391510,0.633571,-1.801434,-9.297384,-1.245852,-5.636060,-0.721224,2.031903,-0.387609,-0.508645,7.668853,-7.288727,-5.782986,-1.475350,5.328281,0.466261,4.448964,-9.961279,-0.943445,0.843644,-9.456811,0.901602,8.696801,-3.579935,-7.722619,-4.374058,9.339993,0.510245,-1.795177,-9.114251,-8.764882,0.158388,6.979675,5.219645,2.525859,-4.560533,-6.406698,-5.985748,-2.397787,3.862965,6.176558,-9.525907,-3.218699,2.107127,6.947700,-1.238872,4.121986,2.874524,5.450500,-8.003800,9.591770,-2.845063,-6.323919,-0.084840,-7.253006,0.104448,2.300011,-5.234957,0.092690,-1.051682,7.729591,-9.181483,-4.244412,9.342830,-4.589773,-3.560111,-7.323804,5.534570,1.111395,5.579310,4.962061,-5.385211,-8.777064,-6.227303,-6.930788,4.217455,-4.476575,-2.208788,5.568128,-1.122304,2.679194,-6.114389,-4.649520,-4.310354,5.483598,6.997458,-3.762958,7.853110,-5.806151,-9.298254,-6.978383,-2.596322,-4.197460,3.867459,9.780721,5.017289,3.067289,-1.191162,-5.245030,5.032478,5.130328,-6.246776,-7.504769,-8.984486,-0.434956,7.616709,-5.985436,3.387951,-4.263167,9.551745,-7.250402,-8.782634,-3.654375,8.768224,4.717549,-4.259474,1.741005,-9.063802,-5.801623,-4.757531,-8.897393,9.369475,-3.800621,8.190315,1.466350,-7.446708,7.778292,0.636307,5.616018,-9.373594,-1.754697,1.508537,-5.452297,1.505634,2.088297,8.609159,-7.270536,-4.775508,1.679699,6.128063,-9.364578,-7.047433,9.000662,3.818440,3.437348,7.579324,-7.711165,4.147654,9.835056,5.450548,6.126328,-0.779439,2.726630,-4.098121,-0.120951,-7.271121,1.404636,-3.590418,-4.941869,9.415691,-0.755201,5.843783], dtype = "float32")#candidate|7219|(240,)|const|float32
var_7220 = relay.var("var_7220", dtype = "float64", shape = (704,))#candidate|7220|(704,)|var|float64
call_7218 = relay.TupleGetItem(func_6322_call(relay.reshape(const_7158.astype('float64'), [504,]), relay.reshape(const_7219.astype('float32'), [240,]), relay.reshape(var_7220.astype('float64'), [704,]), ), 7)
call_7221 = relay.TupleGetItem(func_6326_call(relay.reshape(const_7158.astype('float64'), [504,]), relay.reshape(const_7219.astype('float32'), [240,]), relay.reshape(var_7220.astype('float64'), [704,]), ), 7)
bop_7231 = relay.less_equal(uop_7124.astype('bool'), relay.reshape(call_7121.astype('bool'), relay.shape_of(uop_7124))) # shape=(2, 3, 12)
bop_7234 = relay.less_equal(uop_7126.astype('bool'), relay.reshape(call_7122.astype('bool'), relay.shape_of(uop_7126))) # shape=(2, 3, 12)
func_4246_call = mod.get_global_var('func_4246')
func_4249_call = mutated_mod.get_global_var('func_4249')
call_7235 = relay.TupleGetItem(func_4246_call(relay.reshape(uop_7193.astype('float64'), [2, 3, 12])), 1)
call_7236 = relay.TupleGetItem(func_4249_call(relay.reshape(uop_7193.astype('float64'), [2, 3, 12])), 1)
func_841_call = mod.get_global_var('func_841')
func_843_call = mutated_mod.get_global_var('func_843')
call_7237 = relay.TupleGetItem(func_841_call(relay.reshape(var_7157.astype('int64'), [])), 0)
call_7238 = relay.TupleGetItem(func_843_call(relay.reshape(var_7157.astype('int64'), [])), 0)
output = relay.Tuple([const_7148,call_7156,const_7158,const_7159,var_7160,const_7161,const_7162,bop_7201,bop_7210,call_7218,const_7219,var_7220,bop_7231,call_7235,call_7237,])
output2 = relay.Tuple([const_7148,call_7163,const_7158,const_7159,var_7160,const_7161,const_7162,bop_7204,bop_7213,call_7221,const_7219,var_7220,bop_7234,call_7236,call_7238,])
func_7246 = relay.Function([var_7157,var_7160,var_7200,var_7220,], output)
mod['func_7246'] = func_7246
mod = relay.transform.InferType()(mod)
var_7247 = relay.var("var_7247", dtype = "float64", shape = ())#candidate|7247|()|var|float64
var_7248 = relay.var("var_7248", dtype = "int64", shape = (242, 4))#candidate|7248|(242, 4)|var|int64
var_7249 = relay.var("var_7249", dtype = "float32", shape = (2, 3, 12))#candidate|7249|(2, 3, 12)|var|float32
var_7250 = relay.var("var_7250", dtype = "float64", shape = (704,))#candidate|7250|(704,)|var|float64
output = func_7246(var_7247,var_7248,var_7249,var_7250,)
func_7251 = relay.Function([var_7247,var_7248,var_7249,var_7250,], output)
mutated_mod['func_7251'] = func_7251
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7304 = relay.var("var_7304", dtype = "float64", shape = (6, 10, 2))#candidate|7304|(6, 10, 2)|var|float64
uop_7305 = relay.sinh(var_7304.astype('float64')) # shape=(6, 10, 2)
func_4861_call = mod.get_global_var('func_4861')
func_4863_call = mutated_mod.get_global_var('func_4863')
call_7307 = func_4861_call()
call_7308 = func_4861_call()
func_2998_call = mod.get_global_var('func_2998')
func_3006_call = mutated_mod.get_global_var('func_3006')
const_7321 = relay.const(4.797959, dtype = "float64")#candidate|7321|()|const|float64
var_7322 = relay.var("var_7322", dtype = "float64", shape = (504,))#candidate|7322|(504,)|var|float64
const_7323 = relay.const([9.299052,-1.964924,-4.194368,-8.888274,-6.977462,3.834633,3.369264,1.786961,-4.895142,-6.708995,3.451630,3.068099,-4.594216,-0.647520,-8.880481,-8.227731,5.285802,-8.566098,3.526641,-6.975969,6.443448,-7.238105,4.848679,-2.078612,1.713123,2.877235,-1.127194,-4.832202,-3.016316,-8.946220,-4.379150,-2.705237,4.529051,0.557477,4.323056,-8.742752,-9.079678,2.544482,7.189981,4.132105,-4.660209,6.325080,5.995889,-9.631113,1.788378,-1.441275,0.665318,1.546640,6.436406,-7.199593,-0.779700,2.764662,8.323133,-9.800348,-3.702758,8.105149,8.781025,8.608283,-3.220382,-1.492135,-1.170586,-5.263119,6.758633,-1.725994,-4.122184,6.347513,-6.572722,0.123682,7.122756,-0.640128,1.203999,0.094370,-4.267857,-4.843299,-5.514274,-5.075019,3.921580,-3.958700,-2.774634,-0.219380,0.936915,8.056442,-1.656260,-8.980324,0.163013,-9.236073,-0.913439,1.786970,-8.463459,-0.503583,-1.419800,-4.410495,4.277700,-7.054099,3.059074,-0.208456,-6.532998,-7.334126,3.816349,-4.122597,6.236272,4.488534,-3.295721,6.966310,-5.532040,4.592707,-0.919867,4.217345,1.223374,-4.693387,-7.351463,6.312401,-1.274538,5.649993,-1.821133,-5.568982,-5.532383,-7.774568,-8.806376,-3.307903,7.174718,6.512251,9.162437,6.543901,-3.766461,7.042054,-4.237296,7.451755,0.173438,-9.151771,4.928329,6.776906,4.419554,-2.523801,8.918115,-7.410318,6.236490,0.544226,-9.290706,3.569046,-1.852513,1.214160,3.839759,3.121659,-3.780554,6.453198,2.047590,0.140075,-6.915143,-8.800706,-4.837645,-2.866885,7.099737,-3.455059,-8.165304,-2.246669,3.590221,2.864501,9.982513,7.562989,5.567159,9.652183,4.668125,2.930000,-9.984991,-1.493891,-0.657388,-7.585142,-6.854972,-5.302533,-3.511712,8.292393,-9.491588,4.358684,1.506464,3.173298,3.353736,1.264860,-7.116894,-6.953871,6.593070,2.584496,7.295699,0.217500,0.939647,-7.392832,-0.237360,8.592361,-7.857996,-1.294270,0.311439,-1.602192,-3.890884,1.278339,-3.378259,-9.196150,-8.321764,-7.926824,0.853861,3.825948,6.932022,8.868489,7.889372,-9.165709,5.388139,-3.931626,3.320196,5.068167,-9.870286,-1.654414,-3.276093,-5.922566,-2.689675,-5.214653,-1.782700,-2.050073,9.216007,-5.910779,-7.916739,-6.011570,8.413317,-4.016922,-4.100667,8.807304,1.214197,7.336248,-1.826317,-9.000718,-8.275092,-2.799270,7.578248,-8.979268,-5.504649,7.666257,-4.178232,-2.826686,-8.803159,-8.302834,-8.532534,-9.899571,7.617189,7.351343,6.694405,-9.931773,-0.631466,0.308933,-3.333721,-3.215426,-5.714537,7.858999,-6.634325,-7.766630,1.336455,7.456286,-2.859726,8.037957,9.517616,0.529805,-8.542632,7.715725,8.274136,-0.892523,-8.365328,-8.606705,7.969306,0.187738,-1.563106,-4.925873,-5.752490,6.635700,5.030683,-8.374082,-4.654918,-3.184710,-3.800448,1.405859,-7.956914,8.057946,8.290528,0.232900,3.123896,-7.843312,-4.091509,1.671564,-9.642829,-0.101015,4.988099,-2.840781,-9.662097,1.660501,-0.828876,-0.158610,-1.418459,-1.955468,-3.097657,-4.007046,-2.431041,5.663391,-8.333805,-0.578893,1.498784,-7.186082,0.587511,-1.747746,1.451315,-5.038656,7.531394,-8.683058,-6.555853,7.396998,-6.662612,6.204428,-2.235459,-9.400484,7.452302,4.125260,0.172800,-5.482983,-3.236046,-4.413076,-8.068770,-1.845856,-6.277152,4.933974,6.443152,4.215499,7.977972,-3.407858,2.278986,-5.665229,6.938251,8.050512,7.561193,-1.492588,1.203168,-4.255253,4.797716,7.261291,3.238464,6.159212,6.694066,9.382732,7.551329,-4.982817,-2.729272,6.721159,-6.967816,-5.285288,-4.969795,0.077262,4.356998,7.720274,-4.745489,-3.122608,-3.622459,-4.006842,-5.312122,-6.316779,-1.370664,-0.979505,6.234223,-4.246522,7.374301,3.090791,5.728705,5.985822,-3.991516,-2.471373,9.433151,5.998486,-4.053853,6.590982,8.381801,-2.636681,-7.297023,-4.469854,-5.571784,4.028867,8.353363,-2.586282,0.168621,1.475031,-4.068711,9.036513,8.032183,9.192259,-4.101966,-0.698532,-0.978480,8.305531,-6.954022,-2.437957,1.477542,-4.350291,6.862062,5.904618,-3.914559,-4.927488,-8.027516,-1.012629,-1.922489,6.930890,-7.455856,-7.475739,-1.374084,4.976433,1.428131,-8.738740,2.171571,7.270655,2.448498,7.091414,-6.901115,-4.762351,2.263300,-7.663248,8.225531,2.612499,8.203893,-8.095425,1.060570,-3.723975,-3.722989,1.490261,4.717937,-9.675946,-3.938700,-6.559841,9.818282,5.685580,8.336969,6.534784,-3.018773,-5.928124,-7.082609,4.125158,-8.862907,0.134743,-4.342546,-8.107728,4.998619,-6.238698,7.563882,-7.499334,-9.042403,0.224879,6.253539,-3.563541,4.363135,-4.293680,5.527248,-9.136241,6.745556,-0.866622,-1.498927,-8.475013,1.372320,1.574502,8.565562,-6.379072,-9.990423,-2.119589,-3.777912,0.786121,6.662699,2.678283,5.304268,1.134267,4.577272,3.161833,-9.409052,-8.719591,-1.004418,-5.608042,9.453424,6.620945,4.597191,-6.100960,-1.884089,3.191952,6.693489,2.206221,-3.552661,6.751138,-0.900328,-7.889109,-9.718481,2.115647,-3.592261,5.864788,-9.063151,4.594194,-5.180296,1.943866,9.200168,-4.681437,7.298679,-0.931340,-0.828614,-0.518668,-3.417266,-1.656526,4.936331,0.897604,9.741989,0.939314,-0.044838,4.057760,-6.890267,8.398413,-8.508574,-9.998262,3.696379,2.050235,9.964922,8.869425,-8.360248,-3.952443,6.207817,-2.088382,-7.284026,-4.648748,-5.192582,1.525409,-5.915064,6.302238,4.445992,-2.849759,-7.842315,-3.516476,7.570242,0.963427,3.356173,3.767464,9.325186,-8.174437,-3.674182,-2.732073,-3.877828,8.397457,7.866112,8.620226,1.828249,8.392537,-6.793691,2.133188,7.615844,0.038040,-6.071238,6.203905,-9.398609,-9.760977,-0.091056,-8.505995,-4.052307,5.686472,-8.648255,-3.027233,3.825751,2.945570,-1.240078,5.480065,1.263678,-8.326677,-5.224661,7.411176,7.097018,9.603289,2.515933,5.340674,2.247143,1.261626,9.611206,7.337047,5.650570,-6.944485,7.757016,-1.150030,5.897281,0.510351,-7.530383,-1.366212,-5.457264,-5.354167,9.313167,4.582727,-8.032351,-8.936078,3.097106,-6.106560,-0.253328,-4.804918,5.016287,-9.715169,6.727419,-3.162597,7.734221,-7.088946,-9.809953,9.267278,-9.964707,-9.709239,9.685653,-3.348203,8.993517,1.001776,-8.810292,8.021029,-9.872573,-4.020036,8.757941,-1.451550,2.150815,-5.427971,2.641315,-7.066407,2.356398,-3.930613,1.535028,1.533157,-0.126452,0.393496,-5.252049,-5.699490,-3.751271,-1.187371,4.899060,-7.305629,2.249494,-7.270837,-3.067035,-7.227156,0.486249,-3.716830,-2.319712,1.477953,4.535340,3.701738,-0.401524,-3.587436,-1.116914,-9.085906,0.589184,-5.534123,-0.501694,9.780943,0.124274,-4.606021,7.921649,-2.718403,-1.268072,-2.282536,-4.216806,8.365735,9.628816,8.166200,-0.477969,9.476182,2.822761,9.542237,-9.784249,-7.702652,-8.457321,-5.475210,-1.854884,6.184355,0.359494,-7.123803,3.715195,-5.886665,0.621661,-7.494023,4.218953,-7.982063,-6.155468,-7.803665,-9.947515,-8.489415,9.556593,-4.003516,5.903217,-1.902686,3.065402,-6.840066,-4.299752,7.353709,0.224880,-8.919138,4.656758,5.964445,-7.580439,-5.503918,-9.422965,0.342502,-8.162317,8.214446,-7.011461,-4.274050,-8.230054,-5.931171,8.168134,6.357710,-4.854158,2.775645,-9.307895,2.469931,3.439407,2.893683,-0.154281,8.171847,3.140166,7.877831,1.326816,3.023136,-0.426714,-2.231929,-5.926726,-3.899255,6.568003,-4.994122,-9.777243,-3.145999,-7.173982,-6.871235,0.381994,4.129634,-4.993138,-1.752837,-3.331310,-4.020781,6.766290,-6.257285,-1.163668,-1.916478,-0.863022,7.627671,-8.922523,-2.419961,9.367007,-4.057473,6.995671,8.512128,-6.412900,1.082983,-4.733494,0.362925,-2.120505,7.949205,1.503817,4.952696,-4.486471,-6.466102,-3.190002,7.806711,8.242130,-7.759874,0.799061,9.870719,9.048820,-8.309967,-2.865626,-3.435504,1.545061,5.040229,2.774641,3.634935,3.863990,2.861178,-5.962067,1.428200,-4.022388,-9.677513,-3.957042,5.517992,-8.033001,6.126047,2.643803,-0.524374,9.136717,8.139679,-0.214831,-5.498275,7.612874,5.783101,1.669880,8.660786,4.014118,5.029645,1.427644,8.085832,1.307846,-3.981929,-7.103212,9.197328,-1.838563,3.961273,7.736849,-7.040515,9.424282,4.521534,8.785838,-0.271383,-3.816528,-1.912143,-2.868639,-8.062797,-6.934400,-6.144910,7.891948,-6.808181,0.343388,-2.517095,8.465688,4.042962,-8.330318,1.321579,7.302201,-3.632992,-5.468971,-7.832173,7.786566,-4.825556,6.913415,-4.113981,-3.649497,0.330411,-7.412030,1.829348,-5.270160,-1.607828,6.857884,-6.976759,1.247853,-8.855391,5.099080,-4.230410,2.025189,-8.817666,-5.347937,4.881784,7.932185,-5.656654,-1.572603,-4.373782,-1.466110,-9.142011,-3.554511,-9.151547,0.047752,6.338582,8.415263,7.793999,-1.116695,-4.604749,0.124155,-5.103770,-7.883821,-1.148259,-1.672118,3.698655,-6.630280,-9.346019,6.278363,-0.009433,7.230477,2.563188,-0.728706,-9.392969,1.553142,2.690629,-8.142965,5.616850,-3.795029,-1.037783,-9.782032,8.713429,8.963696,-9.135827,-3.572080,0.667581,-2.056708,1.832299,-6.247146,-5.561687,-0.827323,-7.928764,6.805616,0.706456,5.533164,-1.037519,0.934197,-3.828100,8.549137,7.040599,-9.521559,9.867886,-2.173074,2.001233,-9.283158,-5.425919,9.487519,-8.816172,-9.978807,-1.716125,1.224401,-1.879313,-0.720719,9.746308,5.958689,5.637642,2.996473,-8.699949,0.727853,-5.094181,1.953166,-6.665044,2.820552,3.821533,-3.678992,-9.024861,-8.833668,3.758404,0.351430,-8.823970,1.422407,-4.890943,2.605957,-0.730691,-4.456524,-9.604855,7.124816,-1.779621,8.517417,2.204752,9.864265,5.054574,-2.296611,-9.966409,9.439218,-6.293117,6.888878,-1.276822,7.533406,3.306508,7.362022,-9.630370,0.977920,-6.421114,-8.238130,-9.022802,6.107277,-0.811591,-1.294858,9.573264,7.278532,8.884396,7.636223,2.756387,-1.429360,-2.191123,0.797440,0.029678,-0.742301,6.129853,8.287220,-4.906411,-6.071578,-8.923957,-7.418976,-3.039364,8.373238,-2.242647,0.671092,6.327598,-9.710701,-9.782264,-5.315140,-2.018776,4.162879,-2.122968,-1.692206,6.960237,0.129195,5.936885,9.142335,2.949642,8.607423,9.368069,-4.408132,6.091737,5.085833,-1.771261,9.916702,-7.642060,-2.491534,2.240819,4.525924,9.935366,-3.848811,-7.415556,1.457770,-3.183437,3.367376,2.335829,-4.228285,6.471498,-3.508466,-4.748096,-2.543767,-1.306872,8.392274,2.862565,-3.253922,8.127647,-5.572296,9.791554,1.586605,-0.972748,5.377598,-1.845207,-3.529309,1.437785,7.790250,-7.430661,-7.158412,6.145065,-9.733552,1.387071,7.568477,0.413325,-3.235728,9.320125,-4.998482,6.340095,-9.376167,-4.901247,0.512171,9.179094,2.568873,-9.161638,0.149183,7.522448,2.454931,-5.687014,4.419800,-5.049455,-8.281072,6.067369,8.297486,6.471790,7.717296,2.605706,0.478265,7.007666,-9.649020,2.660350,5.178077,-9.089922,6.238333,-0.484950,-1.507100,-7.642227,-2.960322,-7.982038,-0.201695,7.348149,3.499613,-9.460013,-5.839667,2.537890,-1.928288,-5.978837,7.890732,-0.933469,5.138981,1.248369,5.572364,7.264299,9.490732,0.607586,4.190899,0.113517,4.893641,5.776053,-9.863231,8.734744,0.894265,-3.083068,-6.178766,0.865059,8.781982,4.018903,3.097714,0.697626,-8.056214,-1.688005,2.987418,-1.121136,-3.644706,-6.516742,-7.151071,8.408066,3.891065,-2.875887,-1.446443,-3.474676,-2.324593,-9.533407,-0.458890,1.199256,-9.772200,-5.956122,0.517836,4.043822,-4.711608,-3.442840,3.310452,7.934460,-1.207520,-2.090822,2.805756,-0.506877,-2.836620,1.471413,-5.135126,-0.525598,2.995119,5.155143,3.801748,-3.990936,-4.176925,2.468588,-6.380962,9.079541,-1.213253,9.092321,-7.960244,-6.965903,-8.199896,5.202568,-1.424818,6.088363,-6.922620,-0.679866,4.257310,6.612025,-7.344595,2.324915,3.183844,3.263008,-9.575052,-6.062443,-2.841270,-6.813116,-7.374216,-3.271535,2.344496,-6.542495,-2.739894,1.504807,1.031012,1.468741,8.799462,-7.982760,4.966365,1.614095,-2.846290,-7.767877,-4.807944,5.814001,-7.589500,8.524998,-5.749752,6.278998,-3.983139,-8.073749,-3.423719,5.763254,2.636013,-5.457877,7.738904,-6.092228,9.477491,4.816701,4.090583,3.068842,-2.404483,2.855301,-7.857774,5.070321,-1.759861,8.173303,2.972319,-5.882163,-8.884092,-9.243680,-3.744432,-5.245308,3.683621,9.480079,-1.989656,6.321179,2.719734,8.865032,6.763636,9.282618,0.987577,-5.910869,6.310923,1.382854,-7.303894,-9.533459,-7.656206,-0.465598,-7.890454,1.836071,-6.856950,9.087210,0.184299,-1.984827,8.300190,-0.005435,-5.938165,3.592675,-0.411128,5.897752,-7.571699,1.431573,-4.009820,2.032512,-5.476938,-0.587196,4.180787,-5.568380,-3.956684,4.103614,-4.916014,-3.585273,7.736319,3.416641,-9.652945,-4.696669,-8.711440,-9.492059,3.058945,4.027713,-3.600665,1.745855,0.635710,-1.386687,-6.153291,0.852374,-3.644328,6.172484,3.440454,2.894234,5.723214,7.587606,4.756865,4.657858,0.300810,-2.100357,-2.388253,5.905545,-4.747310,5.270856,6.676126,0.344653,5.885980,7.462386,5.071140,-8.669841,-5.959041,-0.132461,9.426464,4.906039,-8.986307,-0.256534,0.352114,-3.969429,-2.021283,-5.317291,-4.845207,5.932546,-3.711098,0.784744,0.140009,-6.835156,0.295944,2.518703,-1.421299,3.990929,0.369874,3.441608,1.968304,-0.066748,-2.766626,3.074880,-6.262193,-2.396124,-5.386805,6.993047,2.316962,5.721945,-7.917617,-3.398510,9.804977,-6.264190,2.055599,3.380603,3.032039,-4.227803,-5.414234,3.759605,-2.270573,5.575552,4.767531,-2.002477,0.686463,2.338151,4.749630,-0.571103,2.385127,3.113096,8.965453,1.995256,-7.841451,-6.550558,1.307826,9.424681,5.297574,-1.522394,9.395194,9.003137,8.180623,2.844289,-3.544451,8.041166,-1.551070,6.150296,-9.063018,-1.158375,-2.737330,4.323678,-3.806812,-6.327189,-1.384536,-5.352043,0.955353,-5.542955,-7.640362,6.294503,7.019328,-0.175661,9.039422,4.757549,-7.739750,-8.970830,-7.542506,2.253384,7.894174,-2.389333,-2.562857,7.592994,6.431910,-9.191382,1.326790,-1.898650,7.657515,-3.039792,-8.738846,-0.951012,-6.232148,-3.674929,-8.969160,4.919520,6.866780,4.704605,3.427973,0.598240,-5.949717,-1.312112,-4.380620,4.521317,-6.459483,-2.381387,6.966218,4.461617,-5.172704,9.750368,5.339451,-3.076554,-9.113993,5.668960,-8.168907,-0.953032,-1.295788,8.648985,-2.778948,-6.712298,-4.970980,4.919389,2.500371,4.116861,-4.631605,4.132334,-8.453147,-6.574107,1.205705,-9.948746,9.111640,9.997512,9.279445,-8.335752,2.963935,-7.813073,9.670357,7.322140,1.088671,-1.612953,7.540548,4.247766,2.635965,5.309281,3.304227,4.155075,-1.017190,0.150066,9.682764,7.339540,-2.251100,-5.308162,-6.680530,6.090069,8.033132,4.376592,8.479015,-3.648190,9.303658,5.240721,9.745898,8.542964,5.798819,3.453835,-6.611175,3.772073,0.084430,-9.382663,-7.550030,9.830561,-8.448548,-4.317461,0.328490,-0.676848,-5.145571,-8.876099,-0.877975,-5.142818,-8.990697,-4.878568,-1.267933,0.282250,-2.265591,5.777633,2.440976,-2.301062,-1.559837,4.398189,7.704019,-9.478311], dtype = "float64")#candidate|7323|(1470,)|const|float64
var_7324 = relay.var("var_7324", dtype = "int64", shape = (968,))#candidate|7324|(968,)|var|int64
var_7325 = relay.var("var_7325", dtype = "float64", shape = (156,))#candidate|7325|(156,)|var|float64
const_7326 = relay.const([3.190841,-0.463474,-0.055138,0.853928,1.443668,5.330634,-4.146953,6.574005,0.968397,3.525187,-5.369010,-1.735061,-7.532276,-3.729877,8.434359,-7.393363,2.947458,-2.097748,7.010922,-6.749898,5.822299,6.440210,-6.539423,-9.206723,-1.336470,-7.354053,9.013856,-9.762599,-2.666323,8.220347,-0.058184,0.029202,-2.203207,0.957529,7.594397,0.896218,2.798414,-4.468562,5.545258,7.685274,-6.259842,-0.329610,-6.406202,4.487996,8.063377,9.473971,1.466710,6.698016,-7.586235,8.606423,-2.944037,-3.764288,4.838389,7.460028,0.882395,6.867489,-2.857656,8.792890,-7.949783,-9.862160,4.850557,4.260502,-0.178277,-9.898518,3.413674,-3.957656,-9.424595,7.289610,-1.183824,-6.758747,-4.785793,0.010845,-2.472637,9.112804,-2.933084,-0.946446,6.603079,-5.408262,1.049087,-4.462578,-6.873616,-0.625281,1.299325,-4.745453,7.997937,4.944095,-1.649991,-8.872047,8.955683,1.325109,7.413263,7.922255,7.865516,-7.720305,7.861764,5.442828,-1.730145,-4.047101,-8.377842,9.879859,-8.547418,9.659047,4.141643,0.122530,3.854109,-9.438007,-9.773273,-4.823755,2.082696,-6.585649,9.837714,-5.461498,-0.295205,-8.517123,-6.841174,-8.624966,-4.977631,3.318941,1.853334,8.539646,-0.491157,-9.747211,6.717597,-9.663691,4.306400,2.965402,9.224604,-8.177564,7.897878,-4.311795,-1.572654,-5.468011,-2.433490,3.776100,-3.584464,-9.708883,-8.252782,3.779724,6.861461,0.017250,8.849818,-8.469599,-4.858227,-7.866497,5.821193,2.999728,7.089648,-0.489280,-5.778531,6.553215,-7.770420,0.125995,-7.580488,4.070456,-5.335118,2.995495,4.343146,-7.285521,-4.688061,1.185744,6.954344,-9.933248,-2.611396,-9.055497,-6.201042,5.617538,-7.515581,2.757495,-4.591454,-0.027395,8.051042,-6.852731,9.103104,3.499320,9.903949,1.306838,0.875702,6.646375,2.639636,-3.430030,6.039003,-9.441039,-0.298790,7.797435,-1.817505,-4.484616,2.255189,2.842044,5.817587,-4.135404,5.449693,-3.885229,6.292025,3.839889,2.292919,-8.233285,4.228892,-7.107162,0.442004,-1.573647,-8.739241,4.729273,9.218921,-7.903151,5.548081,1.095848,0.062299,-6.944448,8.965528,5.089128,1.187606,-0.236536,-9.340713,1.646229,-4.932127,-1.382504,-3.932790,-6.283750,-1.338216,-3.698803,0.675465,-9.384824,1.451564,-5.285261,-3.403613,-1.736840,4.031571,0.930895,0.903530,3.117678,-1.639183,-8.973566,-0.885144,6.260613,-1.907282,-3.725125,2.487624,-5.105093,8.744891,-8.522125,-4.762890,-4.641855,4.495068,0.292860,-7.487537,-6.374440,-5.925408,3.561561,6.245065,6.538215,-6.947171,7.984855,0.237590,6.750714,-4.163349,-9.698861,-9.654716,5.990777,-7.784728,-0.484225,2.446964,-1.876236,-5.382862,-3.089573,-4.358921,4.106439,-3.550449,-1.768088,-0.130047,-7.246076,1.111490,1.760564,6.258137,5.096900,1.461426,-5.262101,-3.708632,5.052286,-1.623774,-2.439641,6.937103,-7.871780,3.972386,6.016545,-0.130596,-6.555422,9.369820,5.698020,-3.590870,-4.662142,-9.487972,8.828167,2.672859,3.776221,-7.414089,-2.592757,0.448800,3.496328,-4.903658,-5.372563,5.524364,-3.236205,-0.850825,6.224876,5.051366,2.663047,3.998734,-0.517995,4.874230,-9.865158,-6.713107,3.801646,3.025430,-5.299105,-2.340475,-0.772920,9.875266,-8.110567,-3.808676,6.050810,5.666844,-7.374224,9.655896,-0.038635,-1.696473,-0.982673,9.886967,9.939625,4.344435,-9.445696,-0.474242,8.337417,-8.178403,-3.760182,4.725574,-3.175048,-2.825967,3.754397,6.671781,-7.681760,1.169173,-5.992166,-4.711091,4.963732,5.092297,1.799718,2.782459,-6.303601,-8.789689,-8.650947,-7.079458,2.698218,9.237296,-7.879990,-5.330038,0.130834,7.310015,-4.503122,8.801008,6.077504,-3.760270,-8.071148,4.198897,5.134564,2.160316,-8.446749,-7.237944,-8.923773,-9.995794,-6.508972,7.330674,-6.586171,-2.681782,3.030538,1.236294,-5.518280,2.800214,4.019759], dtype = "float64")#candidate|7326|(378,)|const|float64
call_7320 = relay.TupleGetItem(func_2998_call(relay.reshape(const_7321.astype('float64'), []), relay.reshape(var_7322.astype('float64'), [7, 6, 12]), relay.reshape(const_7323.astype('float64'), [1470,]), relay.reshape(var_7324.astype('int64'), [968,]), relay.reshape(var_7322.astype('float64'), [7, 6, 12]), relay.reshape(var_7325.astype('float64'), [156,]), relay.reshape(const_7326.astype('float64'), [42, 9]), ), 6)
call_7327 = relay.TupleGetItem(func_3006_call(relay.reshape(const_7321.astype('float64'), []), relay.reshape(var_7322.astype('float64'), [7, 6, 12]), relay.reshape(const_7323.astype('float64'), [1470,]), relay.reshape(var_7324.astype('int64'), [968,]), relay.reshape(var_7322.astype('float64'), [7, 6, 12]), relay.reshape(var_7325.astype('float64'), [156,]), relay.reshape(const_7326.astype('float64'), [42, 9]), ), 6)
output = relay.Tuple([uop_7305,call_7307,call_7320,const_7321,var_7322,const_7323,var_7324,var_7325,const_7326,])
output2 = relay.Tuple([uop_7305,call_7308,call_7327,const_7321,var_7322,const_7323,var_7324,var_7325,const_7326,])
func_7334 = relay.Function([var_7304,var_7322,var_7324,var_7325,], output)
mod['func_7334'] = func_7334
mod = relay.transform.InferType()(mod)
mutated_mod['func_7334'] = func_7334
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7334_call = mutated_mod.get_global_var('func_7334')
var_7336 = relay.var("var_7336", dtype = "float64", shape = (6, 10, 2))#candidate|7336|(6, 10, 2)|var|float64
var_7337 = relay.var("var_7337", dtype = "float64", shape = (504,))#candidate|7337|(504,)|var|float64
var_7338 = relay.var("var_7338", dtype = "int64", shape = (968,))#candidate|7338|(968,)|var|int64
var_7339 = relay.var("var_7339", dtype = "float64", shape = (156,))#candidate|7339|(156,)|var|float64
call_7335 = func_7334_call(var_7336,var_7337,var_7338,var_7339,)
output = call_7335
func_7340 = relay.Function([var_7336,var_7337,var_7338,var_7339,], output)
mutated_mod['func_7340'] = func_7340
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6925_call = mod.get_global_var('func_6925')
func_6926_call = mutated_mod.get_global_var('func_6926')
call_7437 = func_6925_call()
call_7438 = func_6925_call()
output = call_7437
output2 = call_7438
func_7440 = relay.Function([], output)
mod['func_7440'] = func_7440
mod = relay.transform.InferType()(mod)
mutated_mod['func_7440'] = func_7440
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7440_call = mutated_mod.get_global_var('func_7440')
call_7441 = func_7440_call()
output = call_7441
func_7442 = relay.Function([], output)
mutated_mod['func_7442'] = func_7442
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4861_call = mod.get_global_var('func_4861')
func_4863_call = mutated_mod.get_global_var('func_4863')
call_7482 = func_4861_call()
call_7483 = func_4861_call()
output = call_7482
output2 = call_7483
func_7486 = relay.Function([], output)
mod['func_7486'] = func_7486
mod = relay.transform.InferType()(mod)
output = func_7486()
func_7487 = relay.Function([], output)
mutated_mod['func_7487'] = func_7487
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6416_call = mod.get_global_var('func_6416')
func_6418_call = mutated_mod.get_global_var('func_6418')
call_7496 = func_6416_call()
call_7497 = func_6416_call()
output = relay.Tuple([call_7496,])
output2 = relay.Tuple([call_7497,])
func_7505 = relay.Function([], output)
mod['func_7505'] = func_7505
mod = relay.transform.InferType()(mod)
output = func_7505()
func_7506 = relay.Function([], output)
mutated_mod['func_7506'] = func_7506
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5601_call = mod.get_global_var('func_5601')
func_5603_call = mutated_mod.get_global_var('func_5603')
call_7512 = relay.TupleGetItem(func_5601_call(), 2)
call_7513 = relay.TupleGetItem(func_5603_call(), 2)
func_7076_call = mod.get_global_var('func_7076')
func_7078_call = mutated_mod.get_global_var('func_7078')
call_7514 = func_7076_call()
call_7515 = func_7076_call()
func_6879_call = mod.get_global_var('func_6879')
func_6880_call = mutated_mod.get_global_var('func_6880')
call_7531 = relay.TupleGetItem(func_6879_call(), 1)
call_7532 = relay.TupleGetItem(func_6880_call(), 1)
func_5498_call = mod.get_global_var('func_5498')
func_5499_call = mutated_mod.get_global_var('func_5499')
call_7534 = relay.TupleGetItem(func_5498_call(), 0)
call_7535 = relay.TupleGetItem(func_5499_call(), 0)
func_6637_call = mod.get_global_var('func_6637')
func_6639_call = mutated_mod.get_global_var('func_6639')
call_7564 = func_6637_call()
call_7565 = func_6637_call()
bop_7566 = relay.not_equal(call_7531.astype('bool'), relay.reshape(call_7564.astype('bool'), relay.shape_of(call_7531))) # shape=(2, 3, 12)
bop_7569 = relay.not_equal(call_7532.astype('bool'), relay.reshape(call_7565.astype('bool'), relay.shape_of(call_7532))) # shape=(2, 3, 12)
func_6879_call = mod.get_global_var('func_6879')
func_6880_call = mutated_mod.get_global_var('func_6880')
call_7575 = relay.TupleGetItem(func_6879_call(), 2)
call_7576 = relay.TupleGetItem(func_6880_call(), 2)
func_7017_call = mod.get_global_var('func_7017')
func_7019_call = mutated_mod.get_global_var('func_7019')
call_7577 = relay.TupleGetItem(func_7017_call(), 2)
call_7578 = relay.TupleGetItem(func_7019_call(), 2)
output = relay.Tuple([call_7512,call_7514,call_7534,bop_7566,call_7575,call_7577,])
output2 = relay.Tuple([call_7513,call_7515,call_7535,bop_7569,call_7576,call_7578,])
func_7595 = relay.Function([], output)
mod['func_7595'] = func_7595
mod = relay.transform.InferType()(mod)
output = func_7595()
func_7596 = relay.Function([], output)
mutated_mod['func_7596'] = func_7596
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4919_call = mod.get_global_var('func_4919')
func_4920_call = mutated_mod.get_global_var('func_4920')
call_7630 = relay.TupleGetItem(func_4919_call(), 0)
call_7631 = relay.TupleGetItem(func_4920_call(), 0)
output = relay.Tuple([call_7630,])
output2 = relay.Tuple([call_7631,])
func_7632 = relay.Function([], output)
mod['func_7632'] = func_7632
mod = relay.transform.InferType()(mod)
output = func_7632()
func_7633 = relay.Function([], output)
mutated_mod['func_7633'] = func_7633
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6076_call = mod.get_global_var('func_6076')
func_6078_call = mutated_mod.get_global_var('func_6078')
call_7745 = func_6076_call()
call_7746 = func_6076_call()
output = relay.Tuple([call_7745,])
output2 = relay.Tuple([call_7746,])
func_7786 = relay.Function([], output)
mod['func_7786'] = func_7786
mod = relay.transform.InferType()(mod)
mutated_mod['func_7786'] = func_7786
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7786_call = mutated_mod.get_global_var('func_7786')
call_7787 = func_7786_call()
output = call_7787
func_7788 = relay.Function([], output)
mutated_mod['func_7788'] = func_7788
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7076_call = mod.get_global_var('func_7076')
func_7078_call = mutated_mod.get_global_var('func_7078')
call_7861 = func_7076_call()
call_7862 = func_7076_call()
func_7440_call = mod.get_global_var('func_7440')
func_7442_call = mutated_mod.get_global_var('func_7442')
call_7867 = func_7440_call()
call_7868 = func_7440_call()
output = relay.Tuple([call_7861,call_7867,])
output2 = relay.Tuple([call_7862,call_7868,])
func_7885 = relay.Function([], output)
mod['func_7885'] = func_7885
mod = relay.transform.InferType()(mod)
output = func_7885()
func_7886 = relay.Function([], output)
mutated_mod['func_7886'] = func_7886
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7505_call = mod.get_global_var('func_7505')
func_7506_call = mutated_mod.get_global_var('func_7506')
call_7968 = relay.TupleGetItem(func_7505_call(), 0)
call_7969 = relay.TupleGetItem(func_7506_call(), 0)
var_7970 = relay.var("var_7970", dtype = "float64", shape = (2, 3, 12))#candidate|7970|(2, 3, 12)|var|float64
bop_7971 = relay.logical_and(call_7968.astype('bool'), relay.reshape(var_7970.astype('bool'), relay.shape_of(call_7968))) # shape=(2, 3, 12)
bop_7974 = relay.logical_and(call_7969.astype('bool'), relay.reshape(var_7970.astype('bool'), relay.shape_of(call_7969))) # shape=(2, 3, 12)
func_76_call = mod.get_global_var('func_76')
func_79_call = mutated_mod.get_global_var('func_79')
const_7981 = relay.const([-0.923332,-5.942076,-0.613493,7.374770,6.761661,4.455032,-5.494119,5.215326,0.259576,6.553705,0.102390,4.595162,7.334303,-2.008173,-1.560868,4.591946,-8.732970,0.341358,3.973698,3.995738,-6.299503,-4.073454,-6.298141,-9.650992,8.219395,4.812886,7.024484,-5.118837,-2.131823,1.765216,2.927211,7.885026,-3.739347,9.636044,-2.228528,-0.110393,1.027096,2.147852,6.506917,9.656084,5.974856,5.581711,0.888898,1.581867,-9.212659,-5.371851,2.954562,4.320359,-4.645582,5.546833,1.339456,6.355154,-0.475718,7.918008,1.569754,7.530369,2.738114,5.781007,-3.939695,-1.602437,-3.334883,-4.090487,8.982085,5.782360,-8.249880,-7.740628,5.791840,-3.013280,-5.553719,2.307063,-2.597255,-7.769724,3.261736,0.029938,-1.900356,-1.250617,-9.301930,-1.263412,-3.549656,-4.346676,8.139249,-5.761553,-3.799832,-6.091628,-2.740296,-1.859288,-0.746308,2.682519,4.319911,9.405985,-1.463692,-7.483697,5.725616,-0.030061,-6.995383,-4.264592,9.358343,-4.048124,-8.323208,-8.217082,-5.147265,4.488206,3.176356,-4.317449,4.068209,-7.826059,8.699667,6.394427,-1.680147,-1.816076,-2.943500,-9.701137,-6.772887,2.744910,0.937906,7.987872,7.269101,2.647070,5.773417,1.277621,0.467437,1.464356,-6.207926,3.463991,-1.699110,6.234617,7.748704,2.899815,1.115226,-6.905458,-0.066785,-1.036797,-9.747144,2.636975,-0.435002,1.482818,-9.386748,-5.828778,8.922090,5.412305,-2.740775,-3.705341,-4.503311,4.177980,-5.987792,1.073806,7.607885,-7.290354,2.112622,-3.156110,-2.310025,0.540535,-9.584907,0.385834,-3.904318,9.460592,-8.202451,-0.432235,3.989823,-7.451344,6.503892,7.049605,6.411759,-7.144397,0.501859,-5.558938,-7.269649,-3.233263,-5.621602,-3.447425,6.778554,2.134156,9.818715,-4.190792,0.108444,7.356707,-6.514638,6.166162,-6.834074,-1.284605,-7.698873,-3.837294,0.536378,7.476348,-1.496840,-0.785222,-3.112226,9.750966,8.622673,-3.424072,-9.173065,7.325958,-0.469700,4.424644,-2.699233,-5.267633,-8.302057,-8.123217,-0.019743,8.937740,5.128076,-9.940542,8.673228,-9.992531,9.374766,0.887981,-1.528927,0.540528,-8.586301,1.655840,-1.064215,0.228284,-8.584685,-9.091625,-1.419737,-1.189444,3.454814,5.905473,-3.304844,5.229310,-1.947014,-0.904050,6.612289,-2.229141,-5.555845,6.285964,4.790800,4.216502,-3.111765,-0.203125,-1.598280,-6.278712,0.038426,-9.525080,3.411086,-7.991152,6.771038,-1.236926,-5.804544,-3.352885,4.603253,4.201491,-4.714561,-8.665601,6.323348,5.881457,6.228912,2.499937,4.181733,7.587912,-0.792020,4.770662,-0.565749,-7.258726,-6.288151,0.600007,-5.342524,-3.974191,9.941568,1.926380,-7.501895,-0.828496,5.051698,-4.572301,-1.023214,1.473060,4.098705,-4.866536,4.485283,-6.806534,9.241973,2.097465,4.161332,-7.772388,-2.179062,7.481117,0.080515,7.352494,5.751982,5.270312,2.766952,-5.188002,2.192664,-8.241877,-1.983012,-8.928841,-7.636569,6.312908,-9.974768,-6.498022,-7.798028,6.262657,-0.573876,-8.254196,-7.154723,4.650612,-5.433085,6.949973,-6.886420,-3.276488,-3.955046,-4.639607,-5.867044,-5.750293,9.593647,-2.001456,-5.981706,1.555666,-0.854761,2.139246,-4.744801,-4.002666,-9.051540,-6.457817,0.897009,4.965932,-7.837644,-2.938755,-6.563015,0.991027,6.790644,9.637480,0.477756,-5.878918,-0.724874,-8.698893,-9.751733,6.709699,-3.761952,7.026591,9.584717,-6.653350,-2.219195,-6.283272,2.656390,4.350452,5.702140,2.660110,0.635761,-2.350387,7.233730,-5.528201,6.851851,-6.362943,-3.064290,7.792103,2.890003,3.453323,-2.264445,-9.510458,0.843734,5.962368,-1.445546,6.602987,-6.325342,6.995752,-3.985536,-6.722179,8.522908,-3.247166,-5.631100,8.150803,0.563019,-4.375525,6.341045,8.343690,-3.489838,8.065673,3.270743,-8.944793,6.634256,6.066383,-6.154791,3.123736,3.491654,2.167827,-0.929166,7.821600,2.200998,8.040229,-7.256898,6.846209,3.163749,6.143065,1.007790,5.305227,8.769954,-7.632071,-3.168153,8.058112,9.547377,5.753244,-2.910082,5.713449,-8.512513,-0.197691,-0.106942,3.149851,-2.312616,-1.617446,9.344770,-9.750875,3.877266,-6.545721,5.001884,7.230350,-6.764083,-7.727437,8.665897,-3.688857,-2.437497,-5.100593,-2.720005,0.565908,-4.249065,-8.857042,4.571155,-5.936163,9.989058,-9.359939,-4.489193,-2.167593,-6.911276,2.574435,-1.984467,-6.801424,-6.876151,6.159507,-0.710351,-1.255260,7.863477,-3.990624,5.603800,4.011262,0.729020,2.499137,2.077329,-6.380102,-2.952545,7.699255,7.382572,-2.057363,-1.377505,-5.203029,-4.623686,5.116110,7.015126,-7.920715,-4.900643,-3.837908,6.497495,7.189784,4.005426,-6.243863,-3.847903,-8.807341,6.677759,3.465574,8.262605,8.419803,-7.404863,4.354420,-7.798330,8.430201,9.518832,4.676158,7.678208,9.278388,-4.917196,7.918522,6.109268,3.810216,-0.142228,-9.750697,-0.246881,2.211318,-6.224406,1.246822,-4.649410,4.122236,-2.544847,-7.374585,8.456379,-2.589186,3.163564,-3.375472,4.426087,-3.926325,5.128870,5.048805,-2.894961,-2.434445,8.185421,1.556196,-1.770854,0.003352,6.392778,7.000867,1.350172,9.653224,5.827865,2.521121,0.725464,-8.114874,-3.191127,-2.002299,-0.778919,5.579279,-8.169132,8.738987,5.567678,0.604134,-9.423477,-9.510542,-0.809304,-1.720629,3.869497,4.315015,1.115711,9.530997,2.745546,-2.335569,1.233392,-4.608668,7.563604,-9.262501,-9.934786,9.676186,-3.049117,6.153909,5.488884,-4.067597,5.141056,4.843559,8.810576,8.838449,7.243827,-7.535055,4.345108,-1.560910,-6.911194,-9.527382,1.069363,5.708188,3.051949,-0.640689,8.003854,4.527042,-7.648938,8.441760,-6.997091,7.021844,4.452075,-4.693993,-2.682352,3.696308,9.210841,2.108272,7.915450,3.826032,7.702467,-7.904355,-7.846008,-2.493375,-4.218044,2.822365,-2.872960,-6.064209,-7.119098,-0.181905,-2.020313,-7.453302,5.205993,-9.267314,-4.617174,8.298051,4.890797,-3.586670,-6.671815,5.041728,7.315134,4.646324,0.512335,9.650078,-4.757803,-8.537845,9.898611,-8.223496,-5.574282,2.071552,-2.861397,1.010624,-9.191517,-6.878565,-1.756204,-6.923175,-5.849659,5.945696,6.127777,0.490991,-2.371484,-6.281190,-5.777813,5.676234,7.111879,-1.105356,7.879091,-5.842690,3.209391,-9.754668,-5.878258,5.938917,-5.031984,-7.576629,0.384485,9.418058,6.923323,9.011673,3.975577,-9.897778,-6.000729,-7.460228,-5.301941,5.168956,6.856449,4.264252,-3.341866,-3.378211,0.462747,6.778363,6.580697,7.853240,-3.135175,-1.899194,5.812561,8.310635,2.524297,1.565203,-9.523916,-7.610911,1.796512,8.000760,-8.016408,-6.958999,-0.021963,4.778758,6.193315,-4.151849,7.028510,6.030882,2.680982,-7.865245,-0.057730,9.401598,6.811233,0.620647,8.865542,-8.069678,-6.184197,-5.053625,-5.789403,-2.199971,-6.626849,-7.260362,-7.102150,-7.474583,-3.629305,-1.896614,-0.961743,8.947515,8.880624,-4.608568,3.992684,5.505976,-6.773182,-7.207539,6.525186,-2.057126,9.401404,8.242484,-3.893983,2.686452,3.535394,6.973118,1.310744,7.545602,1.807966,-6.080463,-5.473366,8.445269,9.037055,-3.213428,-9.752519,-6.919714,5.743412,2.789464,7.875672,-8.083819,5.387827,-0.395966,-7.619355,0.905321,-3.471730,-3.377233], dtype = "float64")#candidate|7981|(704,)|const|float64
call_7980 = relay.TupleGetItem(func_76_call(relay.reshape(const_7981.astype('float64'), [16, 11, 4])), 0)
call_7982 = relay.TupleGetItem(func_79_call(relay.reshape(const_7981.astype('float64'), [16, 11, 4])), 0)
output = relay.Tuple([bop_7971,call_7980,const_7981,])
output2 = relay.Tuple([bop_7974,call_7982,const_7981,])
func_7988 = relay.Function([var_7970,], output)
mod['func_7988'] = func_7988
mod = relay.transform.InferType()(mod)
var_7989 = relay.var("var_7989", dtype = "float64", shape = (2, 3, 12))#candidate|7989|(2, 3, 12)|var|float64
output = func_7988(var_7989)
func_7990 = relay.Function([var_7989], output)
mutated_mod['func_7990'] = func_7990
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7110_call = mod.get_global_var('func_7110')
func_7112_call = mutated_mod.get_global_var('func_7112')
call_8018 = func_7110_call()
call_8019 = func_7110_call()
func_4919_call = mod.get_global_var('func_4919')
func_4920_call = mutated_mod.get_global_var('func_4920')
call_8030 = relay.TupleGetItem(func_4919_call(), 0)
call_8031 = relay.TupleGetItem(func_4920_call(), 0)
func_434_call = mod.get_global_var('func_434')
func_440_call = mutated_mod.get_global_var('func_440')
var_8045 = relay.var("var_8045", dtype = "float32", shape = ())#candidate|8045|()|var|float32
var_8046 = relay.var("var_8046", dtype = "float32", shape = (240,))#candidate|8046|(240,)|var|float32
var_8047 = relay.var("var_8047", dtype = "float64", shape = (352, 2))#candidate|8047|(352, 2)|var|float64
call_8044 = relay.TupleGetItem(func_434_call(relay.reshape(var_8045.astype('float32'), []), relay.reshape(var_8046.astype('float32'), [15, 2, 8]), relay.reshape(var_8047.astype('float64'), [16, 11, 4]), relay.reshape(call_8018.astype('uint64'), [72,]), ), 1)
call_8048 = relay.TupleGetItem(func_440_call(relay.reshape(var_8045.astype('float32'), []), relay.reshape(var_8046.astype('float32'), [15, 2, 8]), relay.reshape(var_8047.astype('float64'), [16, 11, 4]), relay.reshape(call_8018.astype('uint64'), [72,]), ), 1)
var_8053 = relay.var("var_8053", dtype = "float64", shape = (2, 3, 12))#candidate|8053|(2, 3, 12)|var|float64
bop_8054 = relay.bitwise_or(call_8030.astype('int32'), relay.reshape(var_8053.astype('int32'), relay.shape_of(call_8030))) # shape=(2, 3, 12)
bop_8057 = relay.bitwise_or(call_8031.astype('int32'), relay.reshape(var_8053.astype('int32'), relay.shape_of(call_8031))) # shape=(2, 3, 12)
func_1623_call = mod.get_global_var('func_1623')
func_1627_call = mutated_mod.get_global_var('func_1627')
var_8065 = relay.var("var_8065", dtype = "int64", shape = (968,))#candidate|8065|(968,)|var|int64
var_8066 = relay.var("var_8066", dtype = "float64", shape = (64,))#candidate|8066|(64,)|var|float64
call_8064 = relay.TupleGetItem(func_1623_call(relay.reshape(var_8065.astype('int64'), [11, 8, 11]), relay.reshape(var_8065.astype('int64'), [11, 8, 11]), relay.reshape(var_8066.astype('float64'), [64,]), ), 0)
call_8067 = relay.TupleGetItem(func_1627_call(relay.reshape(var_8065.astype('int64'), [11, 8, 11]), relay.reshape(var_8065.astype('int64'), [11, 8, 11]), relay.reshape(var_8066.astype('float64'), [64,]), ), 0)
func_5623_call = mod.get_global_var('func_5623')
func_5626_call = mutated_mod.get_global_var('func_5626')
const_8076 = relay.const([-8.048223,0.735609,-0.548479,-8.431640,-8.533010,-8.958769,9.513053,-9.015267,-2.365416,-5.250433,-4.898054,5.174124,-8.205091,-6.919134,0.654708,9.255941,-1.555371,-7.844852,9.506204,-0.018712,5.733594,5.713806,4.731480,1.109386,-4.964689,-6.582954,-3.648458,3.832384,9.141420,-5.546825,-6.089623,8.355461,4.746159,0.333275,-6.309965,-2.104593,-4.186891,-6.217604,-6.094235,-4.764195,3.098947,6.032912,-8.474682,-5.154151,-8.583239,-4.815827,-3.763974,-3.127820,0.919563,-8.381340,6.765208,6.816273,-5.052107,8.828807,3.372752,5.524752,-5.434261,-2.755258,5.116294,4.539139,-6.289756,-8.997930,0.168213,-5.123197,8.787423,-8.935055,8.850493,-9.114378,7.598619,-1.941463,2.421454,2.073773,4.159095,0.743600,-9.474084,-4.367514,-6.334431,8.231718,5.825653,2.910103,-2.048403,0.661020,6.413505,4.359463,-9.885869,-8.124441,-6.929267,7.821236,7.848041,-0.360989,6.021429,-1.881747,-6.148125,9.122020,6.488286,-0.864707,-2.599746,-8.923071,3.814255,-9.932086,3.432559,-0.433708,-4.308483,3.043756,-4.636895,5.477131,8.303454,4.690151,2.389781,9.504811,6.024044,-6.967110,-6.641991,-4.024824,0.843511,3.430885,1.731456,-3.031934,7.998651,0.490551,7.473777,-9.775362,0.151347,-6.812886,-8.396206,6.624734,9.938971,-2.781908,-3.599627,-8.108146,2.863862,8.005973,1.480944,8.437714,1.901238,-1.677664,2.708564,5.793935,-2.354402,-2.851059,-0.585644,1.277548,9.015317,1.567758,-7.025296,6.956662,3.733238,-0.420517,-0.101183,1.956901,-6.577517,1.528344,-4.938135,-1.666431,-5.829537,-0.377809,2.736608,6.778915,9.563120,-0.156056,-6.816566,2.808273,-4.222340,-3.624816,7.742525,2.564945,5.854500,-9.337186,0.628757,-4.928742,1.199977,-8.224490,-4.951200,0.076831,-3.938287,8.137118,-7.850106,-7.311511,-0.823303,9.759730,5.163630,-3.557636,8.430811,-7.364240,4.086456,0.526902,6.191261,0.456458,5.302812,2.112194,5.738767,-4.456972,-5.815133,-1.185596,0.874148,-6.144870,-7.699295,4.045203,6.242252,9.425597,-2.843685,3.286884,-1.328719,-6.463632,-5.302483,-9.975686,-6.517348,7.412795,3.008161,-5.168585,4.824665,2.930042,7.649733,-8.234522,0.227433,4.534205,-2.107221,3.895873,-7.624539,-7.750872,-0.122713,-0.916727,5.571757,3.700025,0.501111,8.000129,-8.118983,5.628251,1.378909,6.138715,3.015809,-0.130350,7.963002,-3.294576,5.918692,-0.979541,9.208305,3.480248,-7.970468,-4.613252,-2.319323,1.281668,-4.612057,-7.542215,-3.045907,-8.764382,-0.450710,5.285618,5.879985,2.393943,-5.618010,-4.845299,-4.332371,-0.323027,-4.012805,9.047683,-0.179650,8.703744,3.345029,-0.339130,3.581186,7.028853,3.216022,-3.698928,-2.101463,-6.729411,5.442410,2.951110,-7.994319,6.789709,-7.123965,1.917678,9.559377,4.677027,-2.313440,-9.625699,5.224023,6.375792,-0.695708,2.351335,-2.422958,9.166871,-1.508505,9.722925,-5.869473,4.865745,3.002017,3.121788,8.869362,5.475227,-2.133990,-9.648322,8.775720,-0.148020,8.053465,1.200129,3.172592,2.147224,8.670554,-9.259422,9.303709,-6.158330,-2.153336,9.966889,-0.276248,8.223019,-3.200986,-9.007165,-9.499554,0.678887,-5.216990,6.671787,0.079760,5.493153,1.174152,-7.295567,6.596016,-0.724231,-7.141781,-5.539544,-5.178762,7.905706,0.641070,5.371281,7.325859,7.417702,4.486950,5.537060,3.257021,0.620441,0.355091,-1.382903,-5.333881,-3.729118,-1.212756,3.404005,3.329733,-6.912465,3.644508,-5.004943,-8.063176,-4.854754,-3.001388,1.835202,3.503829,-0.550762,-7.480869,1.341888,7.795576,-4.020534,-4.159024,5.110946,-0.721971,-1.863240,0.287546,-2.700897,-9.864980,7.618698,5.185646,9.113700,9.457292,4.443088,-6.914742,-8.728618,-8.375439,9.897571,-2.143110,-3.306309,-9.363414,-2.775980,9.469106,-0.012911,-4.235985,-8.819041,-5.484674,-1.389001,-0.644394,3.089368,-3.279756,-7.633884,-7.108022,-9.035428,-8.645051,-1.756446,0.076799,-6.019182,5.937041,9.085835,-5.600915,8.370135,0.441654,-6.595570,5.276122,-6.668796,8.057695,6.518209,-7.067330,1.294188,-2.581953,-8.862169,-7.635906,4.414452,9.549979,5.910264,-7.671924,-7.254704,-8.895202,0.867560,-5.552324,-7.004444,2.534529,-5.444544,6.757153,-9.581847,9.129917,7.312482,-5.073680,4.796463,5.384747,9.090226,-8.024434,3.894409,5.715597,-8.811949,-3.200244,9.948530,-5.609474,-3.286117,2.581383,-3.744592,8.571236,0.180708,-0.275206,6.216003,9.443790,5.548500,-5.473692,1.181762,-6.835842,8.499255,-4.868515,-5.283931,-1.213863,-0.734844,6.649464,-5.778205,-3.839909,-8.446154,3.152336,2.645566,9.672447,-6.107221,6.410360,0.566133,6.155357,0.768969,6.899427,8.594317,-8.307599,-8.568308,-7.599805,-1.927178,-3.765300,4.366643,-0.034763,-7.822008,4.083892,4.675585,-1.227153,-5.138185,7.891717,3.485653,5.017515,2.888072,-9.006308,-5.390589,-7.975581,-6.714622,3.497750,-8.201408,-3.552465,7.668048,4.289849,-4.229491,4.939438,-3.143566,-4.978241,-8.512514,-6.128868,1.146967,8.999726,4.406542,-2.620448,-3.741951,0.399296,8.825691,2.377277,8.707233,5.233696,0.247619,6.906674,-7.462641,6.831472,6.021331,-6.244001,1.397706,-0.822407,3.263390,-1.051434,8.417718,0.906711,2.292264,8.931651,6.915320,-7.488323,-3.208152,-9.649744,-0.192779,5.799276,6.687335,-4.312415,8.926701,4.345467,-7.201047,-9.353723,6.386481,-5.576302,-0.763399,-5.440966,8.608692,-0.771375,-2.143897,-8.226649,2.175989,-4.504089,6.683917,6.532450,-5.505178,2.183689,-5.022834,-6.325144,1.961803,-6.045423,-9.105448,-3.555643,4.001045,1.150089,3.176230,-3.035565,6.676211,-6.480531,-3.130573,8.661604,-4.553245,2.328200,-0.202666,3.158347,-6.317016,-6.590163,-1.663903,-9.485117,6.253008,6.856354,2.252331,3.247242,-8.314361,7.860734,6.040542,7.896554,-1.827506,-5.454706,-2.978584,-6.549338,5.889791,-0.775146,0.959788,-7.827640,-9.929573,-8.952047,0.966190,5.579261,0.720889,-7.282307,7.518467,-7.634532,-1.253689,9.337295,-1.279296,-2.377943,-2.367898,8.287828,8.180826,-4.174154,5.284072,-4.626252,8.008948,9.230768,-6.636220,9.348538,7.038895,2.293257,3.238509,8.770334,4.767201,5.019462,-8.918009,0.079997,-8.082379,7.198572,-6.593871,1.703600,3.664308,-3.527935,-9.288953,-4.150863,-0.892517,-2.238468,-5.148520,9.137887,7.683741,2.657793,-5.145356,6.215932,-1.754682,-6.752760,-6.621355,-3.436729,-7.675553,-1.494785,5.121909,9.466485,-7.795474,5.368980,3.413592,-7.595388,6.280990,-5.588985,5.267219,2.337223,-9.728729,-6.265176,5.415389,9.431981,-3.335889,-9.257640,-2.512198,9.729533,6.299084,8.874855,9.673635,7.282036,5.120220,-8.305848,-5.381481,-8.864463,-5.635847,4.879366,-4.920335,1.748005,-2.543495,-4.989781,9.317081,-8.745923,-2.596813,5.605247,5.795530,-0.240554,-2.814680,3.820700,-4.200031,-7.734254,6.384016,-3.915089,-4.766658,-3.743183,-4.472824,1.704302,-0.112607,-6.844060,5.615802,-9.675591,2.004660,7.024673,-7.761243,-3.068789,-1.200637,7.390043,-4.553061,9.305158,1.594819,-1.726354,-9.085790,-4.899665,0.760282,8.511563,-2.554794,2.987925,8.495102,-0.005495,-5.634314,-3.738972,0.735535,-1.640472,-7.609973,-7.456243,4.705857,0.118703,-4.210844,-9.890746,-4.596200,-2.265572,1.375478,-8.647289,-4.103469,-9.673735,0.921247,5.946019,-4.898246,1.354019,-4.161524,5.975269,-9.082952,8.476314,-5.510397,-0.624303,-0.582526,7.270453,-0.032492,-0.328494,-2.615734,1.900083,3.980793,-6.830845,-7.650162,-9.828425,1.974079,-5.012195,-6.985789,-1.093817,7.670392,-9.989742,5.766051,-1.288543,4.309126,-0.040066,0.314063,-6.466872,9.917411,5.570749,-8.795174,-5.690179,8.165995,3.507166,-0.930098,-1.565188,-8.678576,9.132979,-9.391690,6.060788,-4.159454,-4.313655,-8.893781,2.093238,4.004746,2.276876,-4.884638,-0.995666,2.795677,-9.519858,3.166212,5.656547,2.384993,-5.905120,-6.846000,9.785707,6.342097,0.416113,-5.670268,1.348006,4.313685,4.666189,-4.099318,9.032089,8.557201,-0.765569,-7.818615,-3.543777,-7.817238,3.758071,3.273213,-2.948606,-4.966568,-1.721878,-1.093675,0.095437,-0.648272,2.787589,-5.143219,-5.915039,-3.132684,-8.123978,1.337419,-8.279302,5.954702,-2.816204,7.639518,-3.110409,-6.475570,-3.392779,-0.792434,-3.817313,2.297912,-4.415224,-4.186860,4.827644,6.643463,9.527803,2.651891,-2.775956,-8.302685,6.044516,9.471737,1.895381,-4.635347,-3.395120,7.791973,2.236381,5.919406,-6.209418,9.993613,-7.847808,-0.661079,1.005510,-6.578535,-9.610122,-1.699902,-5.647348,5.475210,-1.571416,4.356594,3.647319,5.608260,2.220225,-3.275676,0.162482,-5.924544,-6.118875,2.176706,-5.754635,6.129218,-1.825768,-8.322605,-8.566006,8.817289,0.620377,5.119923,3.674655,2.109862,9.746838,1.777092,0.063593,7.124804,-8.818952,7.953055,-1.910809,1.033227,7.241870,6.375390,-8.406230,-1.759211,9.851160,-9.294357,-6.418934,-8.423619,9.818403,-7.888443,5.947251,-4.169334,4.472545,-3.672437,-6.240352,-7.661344,1.106481,6.974452,-3.379395,9.431208,-7.930120,9.095220,7.243367,-6.398232,0.192759,-9.410370,-0.181053,-0.683027,-9.973836,1.361160,-5.354295,-6.053903,8.600439,5.659296,0.829431,-1.151479,-9.709316,2.955112,7.461844,-8.011553,-6.236132,7.478124,3.301767,-9.335691,-1.104981,5.836578,-0.462109,-6.694157,8.136497,2.782499,-0.989786,-4.144479,5.024692,-7.086467,-7.042990,8.414078,0.583450,2.660390,-7.896995,5.855651,-7.534254,-7.294562,-0.130219,-6.151654,-4.902308,4.806126,7.713559,-2.602345,3.868490,1.312304,6.220313,-3.683441,6.991463,-6.991483,-5.903685,-4.992559,-0.387772,4.859874,6.277674,-2.927054,0.352086,-4.551226,-2.043762,-7.648393,-2.255922,6.638519,-9.242295,-1.907469,2.961048,-1.932149,-9.696335,-9.961105,5.429874,-7.531277,-0.812935,-5.231673,-1.908048,-9.842852,4.227506,-0.827901,6.128376,-3.483949,5.211411,8.732033,8.422452,-5.739181,6.704286,-0.081520,-3.439304,5.898988,1.881270,4.914083,5.629015,-6.423477,-5.605496,-4.487675,-1.399922,8.818997,7.268836,9.052788,-8.578095,3.739663,-6.865520,-2.097709,-1.937993,4.123219,-4.775179,5.648486,6.656489,-8.326455,-5.139713,4.588960,1.056396,-4.179069,3.997786,1.819950,-4.672182,8.016715,-8.863347,0.170708,-8.586402,3.887569,6.767944,-5.069996,-5.283312,-8.179781,4.885266,-0.747208,9.692104,5.800248,-1.166331,-8.102750,9.668757,3.600009,-9.955799,-4.338202,-4.654940,7.354192,-2.555122,-6.975366,-5.837737,0.749077,-4.286355,5.930587,0.956814,-8.749459,2.241637,-9.404659,7.649993,7.686951,-9.122769,-7.684620,8.850710,9.684678,5.375873,-7.466333,-5.341090,9.424936,0.460696,-3.880871,8.897107,-0.585252,-1.241428,-4.525320,5.004114,8.648657,1.955234,-2.354803,8.523023,0.923596,6.924499,-2.934942,9.819525,-6.046313,-0.193466,6.974290,5.562456,8.690036,-1.599328,4.866277,0.860971,-2.296720,-5.910429,1.259477,-1.411318,-9.518504,-6.272868,6.924353,-2.405795,2.280030,5.470525,1.997810,-0.613945,-9.434645,-4.564204,-6.405841,-6.813289,-2.211552,3.259993,-9.114071,-0.080403,7.536156,0.734304,6.512327,-7.652935,9.487908,8.775944,6.443203,6.398032,0.198258,2.736925,6.777183,-1.345569,6.229331,4.294010,2.154674,-0.627328,-1.400153,4.783933,-1.896422,-9.273638,8.076611,-1.602578,-8.157060,-8.348815,7.189065,3.414583,3.318085,-6.208544,-7.722768,-7.785388,-0.183092,-5.881513,5.933098,-3.003580,-3.874998,7.895685,-1.108734,-1.894964,2.027104,-3.312789,-8.117585,5.653272,9.191690,-5.385617,4.805812,8.671153,-0.104903,-3.141611,-8.350273,2.340364,-7.361839,-9.789903,-3.074953,8.423317,-0.918263,-0.830493,7.072950,-9.282684,5.121998,-6.083135,-4.199730,-5.851525,-2.447533,-5.572221,4.338269,0.859333,-3.519058,2.788476,-3.236220,-5.695252,-7.038996,5.016303,-4.848816,4.447027,3.678600,-9.309853,6.212788,-7.601569,0.857012,-1.446060,-9.882534,-8.081934,-4.055776,9.727203,-2.981584,8.770188,-4.271302,0.362749,-1.089169,-8.571338,-2.983648,9.639851,-7.353980,8.281067,-7.325201,-3.572058,9.238048,6.263591,-2.808758,-1.692848,-4.625071,-5.059334,0.031069,9.314414,-8.427183,1.013714,-0.453666,-0.474180,-3.744750,2.760573,-9.685189,3.555927,-3.230124,4.188662,8.654769,-0.185803,7.332882,-1.821503,-1.588704,-7.606603,8.863834,0.163805,3.967084,-4.497481,-5.140488,-5.168870,-9.661143,-6.047398,7.863044,4.431502,-0.208557,-7.083385,-3.673053,-9.878702,6.417924,9.689747,-8.905087,-2.844246,6.556085,3.268448,-6.162656,-9.430833,2.742892,-1.452464,-7.187854,4.277457,0.667646,-6.888907,-4.713527,-7.790530,8.151402,-1.132524,-9.049782,7.757860,-2.717732,7.620572,3.914299,7.420986,0.813630,2.100409,6.817061,-6.363560,-9.678161,4.570550,3.585196,-1.620259,1.660054,-5.044883,-2.701893,0.727954,-2.110494,7.761399,-8.397731,-1.067915,-4.039797,9.477050,-1.935223,-7.576333,-1.356842,7.210106,9.416983,0.003573,-6.525766,7.410259,7.027959,1.469375,8.956228,9.173646,9.066732,9.100542,5.430857,-8.276286,-0.348290,0.103624,-5.431729,-5.211545,-8.343486,-7.922029,6.215787,0.500087,0.907746,-2.669424,-4.850943,-9.568630,7.642306,1.955042,6.396252,-2.488384,1.159990,-3.445899,-4.146862,0.969458,-9.656321,-0.427801,1.353615,4.714555,-0.751373,-2.535568,0.124951,5.348601,-3.275667,-0.703408,-5.533825,-7.053083,-3.295610,3.226025,3.402344,6.289196,-7.630865,-8.267761,-1.932483,-9.521009,4.376358,3.331731,-1.769973,-0.971075,2.236423,-3.178780,8.878922,0.083775,2.143030,4.167716,-2.633357,2.954062,-6.557950,-0.800368,5.928411,5.247795,2.226131,6.618367,6.262002,5.199456,-9.300486,-4.475091,-9.666513,9.296920,-3.251516,-3.967310,-7.324519,-5.048902,1.932405,5.971853,2.116203,-0.599288,4.628295,-2.475752,6.084487,9.746137,9.908229,2.975435,-5.095520,-7.064405,4.257687,8.240403,-7.457944,-9.838550,-6.703142,-3.742012,3.424352,4.671330,-8.523572,8.105347,6.653106,-0.131128,8.640033,-1.050571,-9.247735,-0.788613,4.455994,8.562618,7.758095,-3.573388,3.473705,-4.460136,7.042667,8.288033,5.433105,8.148430,-8.447176,-5.628625,5.896388,0.685442,7.839130,-6.207250,8.709531,-1.683671,5.934366,-8.595071,8.406314,9.316669,-5.923669,-5.516739,-9.071595,-7.561715,5.511622,-1.823600,8.088534,6.809915,7.208821,-3.065134,9.686942,-8.225750,9.598052,-6.743305,6.097813,0.862150,-6.721416,1.000515,1.559056,5.970316,-9.009108,6.199409,2.039181,-1.555481,-4.328194,9.767806,0.988043,7.591885,4.382582,9.205942,4.216479,-1.038240,2.656529,-0.566536,-7.563058,6.707474,6.329894,-9.149572,8.155752,-1.311916,6.894411,-5.479528,8.471658,4.262276,8.210831,0.836416,5.856135,-8.391707,2.802534,0.788407,1.900679,4.609139,-7.677239,4.758514,-7.709592,6.776216,-5.169532,9.439973,7.268963,-0.208399,6.507829,-4.812929,5.445529,9.069650,8.283042,-4.258177,-1.632255,-2.681665,-5.320381,-8.115273,3.205894,-9.602482,6.859017,0.082465,4.851340,8.830135,3.565132,7.238637,9.214033,0.790610,-3.511025,1.208839,5.622278,3.813708,4.552880,2.457563,6.299717,-0.732351,9.021981,-3.048533,4.318317,3.076445,6.313891,-6.551389,-5.532980,2.675071,1.494903,9.237039,-7.892136,-4.216548,-8.661749,-6.040999,-3.329378,6.841800,-8.354828,-6.299309,0.542719,-7.700429,-8.145997,0.306915,5.617482,9.511396,4.679593,3.026475,2.654829,-6.098192,0.224260,-8.579599,7.092744,9.369176,0.935291,-2.033947,-3.493480,5.873965,6.677301,4.298708,5.618048,1.628028,7.961851,3.386817,6.400834,-8.906788,-6.302790,-9.427763,-3.699320,-4.691160,4.619784,4.128843,4.410788,-9.212790,5.665565,8.768744,7.775792,-1.047395,-6.469079,8.957752,6.633516,-7.321495,-9.973378,1.098704,1.975305,-0.971509,-1.304758,-2.273081,-8.462147,-8.727917,-7.891040,3.091960,7.653796,-0.307271,6.735152,5.841500,5.313553,-9.403063,-4.952969,8.782672,9.078089,-3.893361,9.752365,-0.786812,2.644885,9.571275,-4.415783,4.139301,-7.989844,4.011019,-9.366106,-6.656345,2.014345,1.939402,7.400947,4.047547,9.460692,-9.447452,-2.738142,-6.646151,-7.939201,1.445005,-8.596671,-7.682700,-7.547518,-7.395640,-1.624548,-5.494574,-2.468171,6.448057,-7.022246,-7.679185,-2.642886,-9.992737,2.789543,-6.351130,2.243893,3.066776,8.701440,-5.985016,6.838543,-6.503779,-2.786377,6.530697,-9.800496,-1.103066,8.132465,-2.850675,8.846053,-7.663077,-6.574744,-6.687940,-3.368797,2.717473,6.264480,2.521911,7.424699,-8.728996,3.288221,-8.484883,-4.916965,-2.090746,5.289444,5.569336,-0.854370,-9.213884,8.498530,-4.216791,-8.814694,9.922572,4.218602,-4.987192,-3.075983,-9.597188,8.542893,8.067126,7.746261,6.436065,5.640082,-1.731445,7.205525,-9.946121,6.317594,-9.564399,-4.924593,-0.986699,6.002321,-3.454235,5.960359,9.724612,5.911791,6.320834,-7.715787,-4.176400,7.240021,0.260523,4.497643,0.805733,-8.849804,-0.448396,4.648376,7.452804,3.744626,-2.841117,-9.772850,2.183070,4.065940,6.632551,-8.103736,6.671863,-2.862432,-1.349057,-2.744850,-5.527838,1.245895,5.333080,1.134605,3.797574,9.717556,-0.659238,3.049276,3.567987,-6.279202,3.730586,-9.353926,-7.281980,5.632440,-9.835206,7.121735,5.989587,3.960459,9.216200,1.693102,-6.268750,4.613984,-0.696034,-0.909160,2.863736,-2.440143,0.293885,9.607505,6.168552,-1.561864,-2.863999,0.512658,3.960250,-0.280816,7.727440,6.114720,-1.865026,-6.651998,-8.669139,8.973737,5.452977,-4.320048,-1.133194,6.923609,-6.219389,-3.941236,1.419859,-3.765806,-7.761966,9.930150,-3.365745,3.852626,0.634722,-7.774601,3.828547,3.426251,2.918991,9.039980,4.054052,-3.058283,2.872728,-6.732501,-4.656622,1.342900,-3.526967,-7.210144,6.961268,2.002395,-8.906887,-6.669188,4.984221,-3.133327,5.410086,1.085033,-1.095571,3.911250,-0.896996,-5.392054,-5.988199,5.836067,2.040488,-0.759864,-7.333699,7.165700,4.720058,-1.810892,-6.632234,3.083574,-0.646944,-3.645885,-2.620329,-7.197086,-7.736836,4.137961,-7.497991,1.175475,2.534045,2.413067,4.593767,-6.897550,-3.058958,-2.089942,5.422839,8.828582,-9.851563,2.236496,4.201618,6.388140,-0.256043,-2.872400,8.337667,-4.322272,0.653333,-6.480792,1.025552,6.576566,9.919457,-0.514686,-6.192944,3.605033,9.979298,2.351591,-2.386923,-2.039017,-5.078928,-4.156240,-3.526387,-9.015270,-5.831291,6.225284,3.332719,4.130987,-4.090287,5.361022,6.031562,1.011836,7.144635,2.151942,9.054522,6.549828,6.563992,8.682202,-2.211374,2.290499,3.231146,-3.266913,-3.752836,2.911249,7.123602,1.776323,4.070804,-2.972720,5.794855,3.982177,1.367427,-3.111678,-0.104533,1.643110,1.049559,0.919939,2.337234,2.742395,5.756488,-9.013474,-1.637075,-8.498240,-9.970269,-3.355403,-7.417009,-3.599730,-2.309208,-2.390848,-6.075680,-2.922438,4.686467,-2.351001,5.805053,-0.407640,4.814507,-2.792522,-2.773353,7.898305,8.410073,-1.741930,4.369111,7.764193,-1.707142,-1.744476,3.359181,-2.382370,-1.657051,2.680776,8.617986,7.678076,-7.647931,-9.766332,-8.602737,7.395393,4.708344,9.369466,-3.772795,5.847467,9.254702,-2.880122,-6.180772,0.946283,5.117833,-9.211839,-5.032064,1.867831,1.978668,9.100805,-2.936616,2.496928,-1.201043,-4.927073,-0.522715,3.264580,-0.693522,-4.993161,6.494255,8.534233,7.121029,5.144151,4.480713,-0.290444,-8.976005,-6.684008,4.254707,-0.393731,4.194146,-7.725971,-7.518581,1.813180,4.392722,4.185386,8.044938,-9.985416,2.380747,-8.214383,-9.606933,2.515704,-7.505305,9.474902,-1.817124,3.070128,4.441255,5.259326,-6.284158,-7.558227,-4.500523,-4.669602,-8.045603,-5.304376,-7.262726,3.042060,-7.913386,2.562795,-3.074781,-3.926196,-1.315860,-9.748753,8.165218,-5.201709,-0.072690,-0.827862,-2.238138,-4.692834,7.059637,-0.712054,0.829714,-4.129364,5.463950,-8.499264,7.461420,-2.507724,2.576391,6.196259,-9.126435,-0.488608,-4.770652,9.864666,0.674677,3.479270,8.938862,-5.712271,5.883476,-9.328286,-6.548865,4.941740,7.090397,4.581077,-1.326601,3.482807,-4.696340,-1.684617,-9.688203,-5.972408,1.015005,-2.069528,4.527365,-1.003729,-5.534599,8.106968,6.128328,-3.245497,-8.330129,0.134802,-7.477601,7.047448,-5.505997,8.050624,-9.301736,-1.304899,1.705587,-4.473506,1.723326,-4.316853,6.830760,-5.770407,-5.953862,4.667995,4.860612,1.075105,4.941957,-6.066533,-2.165470,4.336898,9.040332,1.155534,-1.255663,-9.914756,-3.423545,6.696445,-0.386943,-6.869165,-6.880711,-6.720287,8.951388,9.829871,-8.850573,-1.980164,8.333119,3.027977,-8.071236,-9.549322,-6.703348,-9.366956,3.380336,-0.533932,-9.536797,-6.242564,-9.485225,-4.919888,-6.867442,9.683487,9.368054,-3.562003,0.515859,-4.974841,-9.990111,-3.687809,0.044477,9.107799,3.266483,-0.460908,-0.328681,-6.721041,9.101926,-5.135549,2.744957,7.723683,-7.610751,8.024394,4.349129,6.722643,-8.304472,5.278095,-0.120141,-1.232195,-7.526837,2.807116,8.386251,-6.428452,-2.365973,9.287377,-4.362053,0.578186,-5.045947,-5.137949,-3.114607,3.849317,2.538613,-5.830312,3.954941,5.791598,1.401927,-0.543802,5.025548,-5.356506,-5.569844,7.028226,-6.308166,8.726224,5.890956,-1.552237,6.186054,3.711656,-1.451572,-3.089113,-8.913675,-4.509943,4.640723,0.544846,4.459596,-9.281347,0.159506,-9.486870,-5.155750,-9.815675,9.499703,5.581617,-6.509955,0.774739,-5.602692,-2.709084,-5.400158,1.082856,7.835080,-3.577862,-1.289419,-4.260214,-3.017286,3.383207,-4.933667,-4.744944,-6.363002,-2.761961,-2.211923,-1.260842,-7.922818,-3.666196,8.153545,-6.865762,-8.575572,5.914697,3.801429,-7.463926,-9.731444,9.793672,6.396203,-5.272713,8.192640,-5.351317,-8.582698,0.977536,4.819921,6.533590,7.768798,8.057054,-3.813135,-5.329588,2.727904,5.416689,-1.466889,-9.405743,2.588060,1.487692,-3.322057,-1.534144,-9.230327,8.268952,3.008142,-9.836928,-6.791589,-3.920054,-4.907920,-0.519366,7.002459,1.348644,-4.201206,4.786423,-8.393153,6.347712,-2.505461,-3.126601,0.489116,-9.863467,-9.483770,4.919215,7.509686,-6.055314,-5.596095,4.824557,-8.472232,8.055105,-3.376994,-3.378872,0.347078,6.518938,-0.791517,5.494821,1.337488,-8.583636,-6.807303,-3.376455,-2.407682,-4.044091,-3.854245,-7.810735,-1.741546,3.256326,9.376181,-0.347714,7.088228,-4.513230,7.285593,3.965555,-9.006004,-6.394306,8.479014,-6.815300,3.420070,-5.399159,-2.198522,0.554270,-8.044511,3.113168,-9.587116,2.304883,-2.165785,3.829284,7.981896,-5.771031,2.142408,-1.203225,-5.346253,-8.039215,3.259281,0.405994,8.313801,6.003984,5.447987,0.967033,-6.328666,-9.676951,6.163560,-7.386335,-9.766648,-4.862329,1.771867,6.131517,2.457049,-9.866285,-6.261938,-8.809732,-3.033972,-7.367130,-9.610011,8.161467,-2.833668,1.632088,-9.348060,-2.890980,5.764714,-5.110665,1.491073,-8.963550,3.588254,-9.692751,-3.553503,0.106142,-6.186816,-6.020497,-5.275870,6.798176,4.114966,-0.329437,-6.617425,4.667584,6.645404,-1.699551,9.438340,3.561234,5.349721,-0.454539,-3.597844,-4.686432,5.339769,9.658916,6.328036,-5.780776,-2.521164,-5.610804,4.399897,-1.693839,3.050438,-4.879899,7.844379,4.439212,0.555613,-7.774906,9.157184,-5.033620,5.020001,-3.651325,-9.328921,-7.114871,5.572297,0.867943,-3.033362,4.840745,-8.569086,-9.186438,7.950654,8.797597,9.826915,-4.718211,-3.905872,-1.086618,8.687727,-3.203168,4.515806,-1.427046,0.723118,-7.918517,0.879850,9.573835,2.206394,5.250992,5.484604,7.467970,-6.333375,-9.794659,-0.368860,-5.925962,9.014005,7.749103,4.739164,-1.407337,3.936155,-3.315939,-5.577618,-1.055511,9.096770,4.230298,-9.015957,-8.345498,-1.722994,-1.556329,3.740833,-7.376191,1.697197,7.864202,0.007865,-3.614255,-6.271550,2.515689,-0.877349,-4.256354,3.949948,5.015942,-1.055689,-4.090158,-2.277093,0.057936,-9.168849,-5.618656,2.099612,-1.621699,7.690466,4.615361,-5.264863,6.339078,0.317864,-1.081673,8.217843,-9.254871,2.468014,-4.915180,7.997234,6.202774,-8.736562,-2.453476,-1.915990,-4.346262,0.230493,2.196207,4.156049,-0.226070,9.744998,0.247905,-6.041444,-0.245452,2.169131,9.072543,5.027277,-2.399472,8.364991,3.476159,1.513516,0.870837,-5.755097,-0.707340,1.622861,-4.180423,-1.776973,0.141919,0.096663,-2.839271,5.397312,-2.898920,5.773892,-1.823322,5.321836,-0.543422,2.260210,3.343987,-3.801522,5.426388,-2.040256,-9.842717,-1.924906,-0.653961,-1.474878,-8.686930,-6.454068,-6.311853,9.229923,-1.744632,-1.093980,0.713880,1.785180,0.826593,2.561047,6.930359,-1.333841,-5.252464,-0.942997,6.097492,5.506600,-2.889061,-5.213008,5.926939,3.505759,-6.684852,-2.315283,5.164219,-7.104490,-7.554964,-6.337934,3.875333,8.521426,1.709287,-5.041932,-6.642119,-7.950963,-1.562328,2.848133,-1.764909,8.978355,7.173083,-9.029549,0.790764,3.479948,-6.528590,-7.418329,9.249106,1.150948,1.840669,5.845249,-2.680267,-0.612950,-9.227030,-2.018539,-8.212531,5.831688,-5.676085,-2.899563,-6.940996,7.272243,5.105778,-6.930186,2.521914,1.140578,-9.046532,5.468542,-3.321116,5.466441,1.588605,8.887573,2.318883,3.455038,5.607119,-3.715844,-4.407005,-8.541961,0.236148,-9.796615,6.839467,8.190059,-6.792541,-3.263319,-8.764215,4.755677,6.140206,4.103725,7.861774,-8.233650,-5.629650,-8.714649,-7.881576,2.115411,0.755080,2.518569,5.006653,-8.881714,3.575765,9.086728,-2.707186,0.148805,8.397029,0.755708,-1.407370,0.668676,-0.602013,6.897882,4.269802,-2.249599,-1.270866,8.627503,-1.035374,0.675732,-6.985366,7.090695,3.058549,-3.872492,8.075435,0.469084,-7.406166,-0.077634,-0.686194,6.283801,-7.469390], dtype = "float64")#candidate|8076|(2520,)|const|float64
call_8075 = relay.TupleGetItem(func_5623_call(relay.reshape(const_8076.astype('float64'), [15, 14, 12])), 0)
call_8077 = relay.TupleGetItem(func_5626_call(relay.reshape(const_8076.astype('float64'), [15, 14, 12])), 0)
uop_8079 = relay.log(var_8065.astype('float64')) # shape=(968,)
output = relay.Tuple([call_8018,call_8044,var_8045,var_8046,var_8047,bop_8054,call_8064,var_8066,call_8075,const_8076,uop_8079,])
output2 = relay.Tuple([call_8019,call_8048,var_8045,var_8046,var_8047,bop_8057,call_8067,var_8066,call_8077,const_8076,uop_8079,])
func_8090 = relay.Function([var_8045,var_8046,var_8047,var_8053,var_8065,var_8066,], output)
mod['func_8090'] = func_8090
mod = relay.transform.InferType()(mod)
mutated_mod['func_8090'] = func_8090
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8090_call = mutated_mod.get_global_var('func_8090')
var_8092 = relay.var("var_8092", dtype = "float32", shape = ())#candidate|8092|()|var|float32
var_8093 = relay.var("var_8093", dtype = "float32", shape = (240,))#candidate|8093|(240,)|var|float32
var_8094 = relay.var("var_8094", dtype = "float64", shape = (352, 2))#candidate|8094|(352, 2)|var|float64
var_8095 = relay.var("var_8095", dtype = "float64", shape = (2, 3, 12))#candidate|8095|(2, 3, 12)|var|float64
var_8096 = relay.var("var_8096", dtype = "int64", shape = (968,))#candidate|8096|(968,)|var|int64
var_8097 = relay.var("var_8097", dtype = "float64", shape = (64,))#candidate|8097|(64,)|var|float64
call_8091 = func_8090_call(var_8092,var_8093,var_8094,var_8095,var_8096,var_8097,)
output = call_8091
func_8098 = relay.Function([var_8092,var_8093,var_8094,var_8095,var_8096,var_8097,], output)
mutated_mod['func_8098'] = func_8098
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8136 = relay.const([[[-4,-6,-7,3,6,9,4,-1,-1,1,5,-4,-7,9,-3,-8],[9,-5,-4,-2,-6,-6,8,7,-4,-9,4,-9,-10,-7,-1,-1],[2,9,-4,-6,-3,-3,2,10,10,-2,-3,-7,1,-7,10,5],[1,8,6,-8,-6,9,10,-1,-7,9,6,-4,-10,9,8,-4],[9,-6,5,3,-4,-9,-2,-5,5,-8,9,-10,-4,1,-3,10],[-8,-9,2,-6,6,9,8,-8,9,8,9,-9,6,-4,-8,3],[3,-10,-5,9,4,1,3,8,5,-2,-3,7,2,10,-6,-5],[-4,3,-3,-5,10,10,-7,-7,-6,9,1,-1,-7,-4,-2,3]]], dtype = "uint8")#candidate|8136|(1, 8, 16)|const|uint8
var_8137 = relay.var("var_8137", dtype = "uint8", shape = (10, 8, 16))#candidate|8137|(10, 8, 16)|var|uint8
bop_8138 = relay.greater_equal(const_8136.astype('bool'), var_8137.astype('bool')) # shape=(10, 8, 16)
output = relay.Tuple([bop_8138,])
output2 = relay.Tuple([bop_8138,])
func_8156 = relay.Function([var_8137,], output)
mod['func_8156'] = func_8156
mod = relay.transform.InferType()(mod)
mutated_mod['func_8156'] = func_8156
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8157 = relay.var("var_8157", dtype = "uint8", shape = (10, 8, 16))#candidate|8157|(10, 8, 16)|var|uint8
func_8156_call = mutated_mod.get_global_var('func_8156')
call_8158 = func_8156_call(var_8157)
output = call_8158
func_8159 = relay.Function([var_8157], output)
mutated_mod['func_8159'] = func_8159
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6734_call = mod.get_global_var('func_6734')
func_6736_call = mutated_mod.get_global_var('func_6736')
call_8215 = relay.TupleGetItem(func_6734_call(), 0)
call_8216 = relay.TupleGetItem(func_6736_call(), 0)
output = call_8215
output2 = call_8216
func_8251 = relay.Function([], output)
mod['func_8251'] = func_8251
mod = relay.transform.InferType()(mod)
output = func_8251()
func_8252 = relay.Function([], output)
mutated_mod['func_8252'] = func_8252
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5498_call = mod.get_global_var('func_5498')
func_5499_call = mutated_mod.get_global_var('func_5499')
call_8277 = relay.TupleGetItem(func_5498_call(), 0)
call_8278 = relay.TupleGetItem(func_5499_call(), 0)
output = relay.Tuple([call_8277,])
output2 = relay.Tuple([call_8278,])
func_8318 = relay.Function([], output)
mod['func_8318'] = func_8318
mod = relay.transform.InferType()(mod)
output = func_8318()
func_8319 = relay.Function([], output)
mutated_mod['func_8319'] = func_8319
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8337 = relay.var("var_8337", dtype = "float64", shape = (13, 1, 11))#candidate|8337|(13, 1, 11)|var|float64
uop_8338 = relay.sinh(var_8337.astype('float64')) # shape=(13, 1, 11)
output = relay.Tuple([uop_8338,])
output2 = relay.Tuple([uop_8338,])
F = relay.Function([var_8337,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_8337,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

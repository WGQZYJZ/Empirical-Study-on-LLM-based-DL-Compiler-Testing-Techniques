==========mod==========
#[version = "0.0.5"]
def @func_6699() -> (Tensor[(2, 3, 12), float64],) {
  %0 = @func_4205() /* ty=(Tensor[(2, 3, 12), float64],) */;
  %1 = %0.0;
  (%1,)
}

def @func_6946(%var_6933: Tensor[(3, 4, 12), float64], %var_6934: Tensor[(3, 4, 12), float64]) -> (Tensor[(3, 4, 12), float64],) {
  %2 = cast(%var_6934, dtype="float64") /* ty=Tensor[(3, 4, 12), float64] */;
  %3 = shape_of(%var_6933, dtype="int32") /* ty=Tensor[(3), int32] */;
  %4 = cast(%var_6933, dtype="float64") /* ty=Tensor[(3, 4, 12), float64] */;
  %5 = dyn.reshape(%2, %3, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %6 = floor_divide(%4, %5) /* ty=Tensor[(3, 4, 12), float64] */;
  (%6,)
}

def @func_8090(%var_8045: float32, %var_8046: Tensor[(240), float32], %var_8047: Tensor[(352, 2), float64], %var_8053: Tensor[(2, 3, 12), float64], %var_8065: Tensor[(968), int64], %var_8066: Tensor[(64), float64]) -> (Tensor[(2, 3, 12), float64], Tensor[(72), uint64], float32, Tensor[(240), float32], Tensor[(352, 2), float64], Tensor[(2, 3, 12), int32], Tensor[(11, 8, 11), int64], Tensor[(64), float64], Tensor[(15, 14, 12), float64], Tensor[(2520), float64], Tensor[(968), float64]) {
  %7 = cast(%var_8045, dtype="float32") /* ty=float32 */;
  %8 = cast(%var_8046, dtype="float32") /* ty=Tensor[(240), float32] */;
  %9 = cast(%var_8047, dtype="float64") /* ty=Tensor[(352, 2), float64] */;
  %10 = @func_7110() /* ty=Tensor[(2, 3, 12), float64] */;
  %11 = cast(%10, dtype="uint64") /* ty=Tensor[(2, 3, 12), uint64] */;
  %12 = reshape(%7, newshape=[]) /* ty=float32 */;
  %13 = reshape(%8, newshape=[15, 2, 8]) /* ty=Tensor[(15, 2, 8), float32] */;
  %14 = reshape(%9, newshape=[16, 11, 4]) /* ty=Tensor[(16, 11, 4), float64] */;
  %15 = reshape(%11, newshape=[72]) /* ty=Tensor[(72), uint64] */;
  %16 = @func_434(%12, %13, %14, %15) /* ty=(Tensor[(16, 11, 4), float64], Tensor[(72), uint64], Tensor[(1152), uint64], Tensor[(704), float64], Tensor[(15, 2, 8), int16], Tensor[(352, 2), uint32]) */;
  %17 = @func_4919() /* ty=(Tensor[(2, 3, 12), float64],) */;
  %18 = %17.0;
  %19 = cast(%var_8053, dtype="int32") /* ty=Tensor[(2, 3, 12), int32] */;
  %20 = shape_of(%18, dtype="int32") /* ty=Tensor[(3), int32] */;
  %21 = cast(%18, dtype="int32") /* ty=Tensor[(2, 3, 12), int32] */;
  %22 = dyn.reshape(%19, %20, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %23 = cast(%var_8065, dtype="int64") /* ty=Tensor[(968), int64] */;
  %24 = cast(%var_8065, dtype="int64") /* ty=Tensor[(968), int64] */;
  %25 = cast(%var_8066, dtype="float64") /* ty=Tensor[(64), float64] */;
  %26 = reshape(%23, newshape=[11, 8, 11]) /* ty=Tensor[(11, 8, 11), int64] */;
  %27 = reshape(%24, newshape=[11, 8, 11]) /* ty=Tensor[(11, 8, 11), int64] */;
  %28 = reshape(%25, newshape=[64]) /* ty=Tensor[(64), float64] */;
  %29 = @func_1623(%26, %27, %28) /* ty=(Tensor[(11, 8, 11), int64], Tensor[(2, 16, 2), bool], Tensor[(64), float64]) */;
  %30 = cast(meta[relay.Constant][0] /* ty=Tensor[(2520), float64] */, dtype="float64") /* ty=Tensor[(2520), float64] */;
  %31 = reshape(%30, newshape=[15, 14, 12]) /* ty=Tensor[(15, 14, 12), float64] */;
  %32 = @func_5623(%31) /* ty=(Tensor[(15, 14, 12), float64],) */;
  %33 = cast(%var_8065, dtype="float64") /* ty=Tensor[(968), float64] */;
  %34 = %16.1;
  %35 = bitwise_or(%21, %22) /* ty=Tensor[(2, 3, 12), int32] */;
  %36 = %29.0;
  %37 = %32.0;
  %38 = log(%33) /* ty=Tensor[(968), float64] */;
  (%10, %34, %var_8045, %var_8046, %var_8047, %35, %36, %var_8066, %37, meta[relay.Constant][0] /* ty=Tensor[(2520), float64] */, %38)
}

def @func_8318() -> (Tensor[(2, 3, 12), float64],) {
  %39 = @func_5498() /* ty=(Tensor[(2, 3, 12), float64],) */;
  %40 = %39.0;
  (%40,)
}

def @main(%var_8337: Tensor[(13, 1, 11), float64]) -> (Tensor[(13, 1, 11), float64],) {
  %41 = cast(%var_8337, dtype="float64") /* ty=Tensor[(13, 1, 11), float64] */;
  %42 = sinh(%41) /* ty=Tensor[(13, 1, 11), float64] */;
  (%42,)
}

def @func_1243(%var_1224: int16, %var_1225: Tensor[(12, 7, 12), int16], %var_1231: Tensor[(176, 4), float64]) -> (Tensor[(16, 11, 4), float64], Tensor[(176, 4), float64], Tensor[(12, 7, 12), float32]) {
  %43 = cast(%var_1231, dtype="float64") /* ty=Tensor[(176, 4), float64] */;
  %44 = reshape(%43, newshape=[16, 11, 4]) /* ty=Tensor[(16, 11, 4), float64] */;
  %45 = @func_76(%44) /* ty=(Tensor[(16, 11, 4), float64],) */;
  %46 = cast(%var_1224, dtype="int16") /* ty=int16 */;
  %47 = cast(%var_1225, dtype="int16") /* ty=Tensor[(12, 7, 12), int16] */;
  %48 = left_shift(%46, %47) /* ty=Tensor[(12, 7, 12), int16] */;
  %49 = cast(%48, dtype="float64") /* ty=Tensor[(12, 7, 12), float64] */;
  %50 = atan(%49) /* ty=Tensor[(12, 7, 12), float64] */;
  %51 = cast(%50, dtype="float32") /* ty=Tensor[(12, 7, 12), float32] */;
  %52 = %45.0;
  %53 = log(%51) /* ty=Tensor[(12, 7, 12), float32] */;
  (%52, %var_1231, %53)
}

def @func_6567(%var_6564: Tensor[(3, 1, 16), float32]) -> Tensor[(3, 1, 16), float32] {
  %54 = cast(%var_6564, dtype="float32") /* ty=Tensor[(3, 1, 16), float32] */;
  exp(%54) /* ty=Tensor[(3, 1, 16), float32] */
}

def @func_6793() -> Tensor[(2, 3, 12), float64] {
  %55 = @func_6637() /* ty=Tensor[(2, 3, 12), float64] */;
  %56 = cast(%55, dtype="float64") /* ty=Tensor[(2, 3, 12), float64] */;
  atan(%56) /* ty=Tensor[(2, 3, 12), float64] */
}

def @func_1257(%var_1249: Tensor[(16, 15, 13), uint64], %var_1250: Tensor[(16, 15, 13), uint64]) -> (Tensor[(16, 15, 13), uint64],) {
  %57 = cast(%var_1250, dtype="uint64") /* ty=Tensor[(16, 15, 13), uint64] */;
  %58 = shape_of(%var_1249, dtype="int32") /* ty=Tensor[(3), int32] */;
  %59 = cast(%var_1249, dtype="uint64") /* ty=Tensor[(16, 15, 13), uint64] */;
  %60 = dyn.reshape(%57, %58, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %61 = multiply(%59, %60) /* ty=Tensor[(16, 15, 13), uint64] */;
  (%61,)
}

def @func_289(%var_255: Tensor[(8, 9, 1), uint64], %var_256: Tensor[(8, 9, 16), uint64], %var_272: Tensor[(704), float64]) -> (Tensor[(8, 9, 16), uint64], Tensor[(16, 11, 4), float64], Tensor[(704), float64], Tensor[(16, 11, 4), float64]) {
  %62 = cast(%var_255, dtype="uint64") /* ty=Tensor[(8, 9, 1), uint64] */;
  %63 = cast(%var_256, dtype="uint64") /* ty=Tensor[(8, 9, 16), uint64] */;
  %64 = cast(%var_272, dtype="float64") /* ty=Tensor[(704), float64] */;
  %65 = reshape(%64, newshape=[16, 11, 4]) /* ty=Tensor[(16, 11, 4), float64] */;
  %66 = @func_76(%65) /* ty=(Tensor[(16, 11, 4), float64],) */;
  %67 = %66.0;
  %68 = cast(%67, dtype="float64") /* ty=Tensor[(16, 11, 4), float64] */;
  %69 = reshape(%68, newshape=[16, 11, 4]) /* ty=Tensor[(16, 11, 4), float64] */;
  %70 = @func_76(%69) /* ty=(Tensor[(16, 11, 4), float64],) */;
  %71 = left_shift(%62, %63) /* ty=Tensor[(8, 9, 16), uint64] */;
  %72 = %70.0;
  (%71, %67, %var_272, %72)
}

def @func_4707(%var_4623: Tensor[(15, 6, 6), bool], %var_4659: Tensor[(3120), uint64]) -> (Tensor[(15, 6, 6), float64], Tensor[(16, 15, 13), uint64], Tensor[(3120), uint64], Tensor[(16, 6, 6), uint8], Tensor[(576), uint8], Tensor[(15, 6, 6), bool]) {
  %73 = cast(%var_4623, dtype="bool") /* ty=Tensor[(15, 6, 6), bool] */;
  %74 = shape_of(meta[relay.Constant][1] /* ty=Tensor[(15, 6, 6), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %75 = cast(meta[relay.Constant][1] /* ty=Tensor[(15, 6, 6), bool] */, dtype="bool") /* ty=Tensor[(15, 6, 6), bool] */;
  %76 = dyn.reshape(%73, %74, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %77 = logical_or(%75, %76) /* ty=Tensor[(15, 6, 6), bool] */;
  %78 = cast(%77, dtype="float64") /* ty=Tensor[(15, 6, 6), float64] */;
  %79 = shape_of(meta[relay.Constant][1] /* ty=Tensor[(15, 6, 6), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %80 = cast(meta[relay.Constant][1] /* ty=Tensor[(15, 6, 6), bool] */, dtype="float64") /* ty=Tensor[(15, 6, 6), float64] */;
  %81 = dyn.reshape(%78, %79, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %82 = cast(%var_4659, dtype="uint64") /* ty=Tensor[(3120), uint64] */;
  %83 = cast(%var_4659, dtype="uint64") /* ty=Tensor[(3120), uint64] */;
  %84 = reshape(%82, newshape=[16, 15, 13]) /* ty=Tensor[(16, 15, 13), uint64] */;
  %85 = reshape(%83, newshape=[16, 15, 13]) /* ty=Tensor[(16, 15, 13), uint64] */;
  %86 = @func_1257(%84, %85) /* ty=(Tensor[(16, 15, 13), uint64],) */;
  %87 = cast(meta[relay.Constant][2] /* ty=Tensor[(576), uint8] */, dtype="uint8") /* ty=Tensor[(576), uint8] */;
  %88 = reshape(%87, newshape=[16, 6, 6]) /* ty=Tensor[(16, 6, 6), uint8] */;
  %89 = cast(%var_4623, dtype="float64") /* ty=Tensor[(15, 6, 6), float64] */;
  %90 = asin(%89) /* ty=Tensor[(15, 6, 6), float64] */;
  %91 = cast(%77, dtype="bool") /* ty=Tensor[(15, 6, 6), bool] */;
  %92 = shape_of(%90, dtype="int32") /* ty=Tensor[(3), int32] */;
  %93 = cast(%90, dtype="bool") /* ty=Tensor[(15, 6, 6), bool] */;
  %94 = dyn.reshape(%91, %92, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %95 = floor_mod(%80, %81) /* ty=Tensor[(15, 6, 6), float64] */;
  %96 = %86.0;
  %97 = @func_2199(%88) /* ty=Tensor[(16, 6, 6), uint8] */;
  %98 = less(%93, %94) /* ty=Tensor[(15, 6, 6), bool] */;
  (%95, %96, %var_4659, %97, meta[relay.Constant][2] /* ty=Tensor[(576), uint8] */, %98)
}

def @func_6734() -> (Tensor[(2, 3, 12), float64],) {
  %99 = @func_5220() /* ty=(Tensor[(2, 3, 12), float64], Tensor[(2, 3, 12), float64]) */;
  %100 = %99.0;
  (%100,)
}

def @func_7486() -> Tensor[(2, 3, 12), float64] {
  @func_4861() /* ty=Tensor[(2, 3, 12), float64] */
}

def @func_5750(%var_5734: Tensor[(1260, 2), float64]) -> (Tensor[(2, 3, 12), float64], Tensor[(15, 14, 12), float64], Tensor[(1260, 2), float64], Tensor[(1, 60), float64], Tensor[(12, 5, 1), float32]) {
  %101 = @func_5220() /* ty=(Tensor[(2, 3, 12), float64], Tensor[(2, 3, 12), float64]) */;
  %102 = cast(%var_5734, dtype="float64") /* ty=Tensor[(1260, 2), float64] */;
  %103 = reshape(%102, newshape=[15, 14, 12]) /* ty=Tensor[(15, 14, 12), float64] */;
  %104 = @func_5623(%103) /* ty=(Tensor[(15, 14, 12), float64],) */;
  %105 = cast(meta[relay.Constant][3] /* ty=Tensor[(1, 60), float64] */, dtype="float64") /* ty=Tensor[(1, 60), float64] */;
  %106 = reshape(%105, newshape=[12, 5, 1]) /* ty=Tensor[(12, 5, 1), float64] */;
  %107 = @func_5526(%106) /* ty=Tensor[(12, 5, 1), float64] */;
  %108 = cast(%107, dtype="float32") /* ty=Tensor[(12, 5, 1), float32] */;
  %109 = %101.1;
  %110 = %104.0;
  %111 = cos(%108) /* ty=Tensor[(12, 5, 1), float32] */;
  (%109, %110, %var_5734, meta[relay.Constant][3] /* ty=Tensor[(1, 60), float64] */, %111)
}

def @func_7076() -> Tensor[(2, 3, 12), float64] {
  %112 = @func_6699() /* ty=(Tensor[(2, 3, 12), float64],) */;
  %112.0
}

def @func_4355(%var_4329: Tensor[(1, 8, 2), int32]) -> (Tensor[(78), float32], Tensor[(11, 8, 2), float32]) {
  %113 = cast(meta[relay.Constant][4] /* ty=Tensor[(78), float64] */, dtype="float64") /* ty=Tensor[(78), float64] */;
  %114 = reshape(%113, newshape=[2, 13, 3]) /* ty=Tensor[(2, 13, 3), float64] */;
  %115 = @func_891(%114) /* ty=(Tensor[(2, 13, 3), float64],) */;
  %116 = %115.0;
  %117 = cast(%116, dtype="float32") /* ty=Tensor[(2, 13, 3), float32] */;
  %118 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(78), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %119 = cast(meta[relay.Constant][4] /* ty=Tensor[(78), float64] */, dtype="float32") /* ty=Tensor[(78), float32] */;
  %120 = dyn.reshape(%117, %118, newshape=[]) /* ty=Tensor[(?), float32] */;
  %121 = cast(%var_4329, dtype="bool") /* ty=Tensor[(1, 8, 2), bool] */;
  %122 = cast(meta[relay.Constant][5] /* ty=Tensor[(11, 8, 2), int32] */, dtype="bool") /* ty=Tensor[(11, 8, 2), bool] */;
  %123 = not_equal(%121, %122) /* ty=Tensor[(11, 8, 2), bool] */;
  %124 = cast(%123, dtype="float32") /* ty=Tensor[(11, 8, 2), float32] */;
  %125 = minimum(%119, %120) /* ty=Tensor[(78), float32] */;
  %126 = asinh(%124) /* ty=Tensor[(11, 8, 2), float32] */;
  (%125, %126)
}

def @func_7017() -> (Tensor[(11, 6, 12), float32], Tensor[(15, 14, 12), float64], Tensor[(2520), float64], Tensor[(26, 3), float64], Tensor[(78, 1), float64]) {
  %127 = cast(meta[relay.Constant][6] /* ty=Tensor[(2520), float64] */, dtype="float64") /* ty=Tensor[(2520), float64] */;
  %128 = reshape(%127, newshape=[15, 14, 12]) /* ty=Tensor[(15, 14, 12), float64] */;
  %129 = @func_5623(%128) /* ty=(Tensor[(15, 14, 12), float64],) */;
  %130 = cast(meta[relay.Constant][7] /* ty=Tensor[(78, 1), float64] */, dtype="float64") /* ty=Tensor[(78, 1), float64] */;
  %131 = reshape(%130, newshape=[26, 3]) /* ty=Tensor[(26, 3), float64] */;
  %132 = @func_4848(%131) /* ty=(Tensor[(2, 3, 12), float64], Tensor[(3, 16, 4), int64], Tensor[(4, 176), float64], Tensor[(2, 13, 3), float64], Tensor[(26, 3), float64], Tensor[(1152), float32]) */;
  %133 = @func_5812() /* ty=Tensor[(11, 6, 12), float32] */;
  %134 = %129.0;
  %135 = %132.4;
  (%133, %134, meta[relay.Constant][6] /* ty=Tensor[(2520), float64] */, %135, meta[relay.Constant][7] /* ty=Tensor[(78, 1), float64] */)
}

def @func_2998(%var_2943: float64, %var_2944: Tensor[(7, 6, 12), float64], %var_2949: Tensor[(1470), float64], %var_2965: Tensor[(968), int64], %var_2968: Tensor[(7, 6, 12), float64], %var_2985: Tensor[(156), float64], %var_2986: Tensor[(42, 9), float64]) -> (Tensor[(7, 6, 12), float64], Tensor[(14, 7, 15), float64], Tensor[(1470), float64], Tensor[(64), float64], Tensor[(968), int64], Tensor[(64), float64], Tensor[(16, 6, 6), uint8], Tensor[(576), uint8], Tensor[(1, 378), float64], Tensor[(156), float64], Tensor[(42, 9), float64], Tensor[(7, 6, 12), float64]) {
  %136 = cast(%var_2943, dtype="float64") /* ty=float64 */;
  %137 = cast(%var_2944, dtype="float64") /* ty=Tensor[(7, 6, 12), float64] */;
  %138 = cast(%var_2949, dtype="float64") /* ty=Tensor[(1470), float64] */;
  %139 = reshape(%138, newshape=[14, 7, 15]) /* ty=Tensor[(14, 7, 15), float64] */;
  %140 = @func_2891(%139) /* ty=(Tensor[(14, 7, 15), float64], Tensor[(14, 7, 15), float64]) */;
  %141 = cast(%var_2965, dtype="int64") /* ty=Tensor[(968), int64] */;
  %142 = cast(%var_2965, dtype="int64") /* ty=Tensor[(968), int64] */;
  %143 = cast(meta[relay.Constant][8] /* ty=Tensor[(64), float64] */, dtype="float64") /* ty=Tensor[(64), float64] */;
  %144 = reshape(%141, newshape=[11, 8, 11]) /* ty=Tensor[(11, 8, 11), int64] */;
  %145 = reshape(%142, newshape=[11, 8, 11]) /* ty=Tensor[(11, 8, 11), int64] */;
  %146 = reshape(%143, newshape=[64]) /* ty=Tensor[(64), float64] */;
  %147 = @func_1623(%144, %145, %146) /* ty=(Tensor[(11, 8, 11), int64], Tensor[(2, 16, 2), bool], Tensor[(64), float64]) */;
  %148 = cast(meta[relay.Constant][9] /* ty=Tensor[(576), uint8] */, dtype="uint8") /* ty=Tensor[(576), uint8] */;
  %149 = reshape(%148, newshape=[16, 6, 6]) /* ty=Tensor[(16, 6, 6), uint8] */;
  %150 = cast(%var_2985, dtype="float64") /* ty=Tensor[(156), float64] */;
  %151 = cast(%var_2986, dtype="float64") /* ty=Tensor[(42, 9), float64] */;
  %152 = reshape(%150, newshape=[6, 2, 13]) /* ty=Tensor[(6, 2, 13), float64] */;
  %153 = reshape(%151, newshape=[1, 378]) /* ty=Tensor[(1, 378), float64] */;
  %154 = @func_2113(%152, %153) /* ty=(Tensor[(6, 2, 13), float64], Tensor[(14, 9, 3), float64], Tensor[(1, 378), float64]) */;
  %155 = cast(%var_2968, dtype="int64") /* ty=Tensor[(7, 6, 12), int64] */;
  %156 = shape_of(%var_2944, dtype="int32") /* ty=Tensor[(3), int32] */;
  %157 = cast(%var_2944, dtype="int64") /* ty=Tensor[(7, 6, 12), int64] */;
  %158 = dyn.reshape(%155, %156, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %159 = logical_xor(%157, %158) /* ty=Tensor[(7, 6, 12), int64] */;
  %160 = cast(%159, dtype="float64") /* ty=Tensor[(7, 6, 12), float64] */;
  %161 = floor_mod(%136, %137) /* ty=Tensor[(7, 6, 12), float64] */;
  %162 = %140.1;
  %163 = %147.2;
  %164 = @func_2199(%149) /* ty=Tensor[(16, 6, 6), uint8] */;
  %165 = %154.2;
  %166 = tan(%160) /* ty=Tensor[(7, 6, 12), float64] */;
  (%161, %162, %var_2949, %163, %var_2965, meta[relay.Constant][8] /* ty=Tensor[(64), float64] */, %164, meta[relay.Constant][9] /* ty=Tensor[(576), uint8] */, %165, %var_2985, %var_2986, %166)
}

def @func_7505() -> (Tensor[(2, 3, 12), float64],) {
  %167 = @func_6416() /* ty=Tensor[(2, 3, 12), float64] */;
  (%167,)
}

def @func_841(%var_835: int64) -> (Tensor[(3, 16, 4), int64],) {
  %168 = cast(%var_835, dtype="int64") /* ty=int64 */;
  %169 = cast(meta[relay.Constant][10] /* ty=Tensor[(3, 16, 4), int64] */, dtype="int64") /* ty=Tensor[(3, 16, 4), int64] */;
  %170 = bitwise_or(%168, %169) /* ty=Tensor[(3, 16, 4), int64] */;
  (%170,)
}

def @func_733(%var_725: Tensor[(14, 9, 3), float64], %var_726: Tensor[(14, 9, 3), float64]) -> (Tensor[(14, 9, 3), float64],) {
  %171 = cast(%var_726, dtype="float64") /* ty=Tensor[(14, 9, 3), float64] */;
  %172 = shape_of(%var_725, dtype="int32") /* ty=Tensor[(3), int32] */;
  %173 = cast(%var_725, dtype="float64") /* ty=Tensor[(14, 9, 3), float64] */;
  %174 = dyn.reshape(%171, %172, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %175 = add(%173, %174) /* ty=Tensor[(14, 9, 3), float64] */;
  (%175,)
}

def @func_4539() -> (Tensor[(2, 3, 12), float64],) {
  %176 = @func_4205() /* ty=(Tensor[(2, 3, 12), float64],) */;
  %177 = %176.0;
  (%177,)
}

def @func_5296(%var_5271: Tensor[(2, 3, 12), float64], %var_5281: Tensor[(156), float64], %var_5282: Tensor[(378), float64]) -> (Tensor[(2, 3, 12), int8], Tensor[(1, 378), float64], Tensor[(156), float64], Tensor[(378), float64], Tensor[(78), float64], Tensor[(180), uint16]) {
  %178 = @func_4205() /* ty=(Tensor[(2, 3, 12), float64],) */;
  %179 = %178.0;
  %180 = cast(%var_5271, dtype="int8") /* ty=Tensor[(2, 3, 12), int8] */;
  %181 = shape_of(%179, dtype="int32") /* ty=Tensor[(3), int32] */;
  %182 = cast(%179, dtype="int8") /* ty=Tensor[(2, 3, 12), int8] */;
  %183 = dyn.reshape(%180, %181, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %184 = cast(%var_5281, dtype="float64") /* ty=Tensor[(156), float64] */;
  %185 = cast(%var_5282, dtype="float64") /* ty=Tensor[(378), float64] */;
  %186 = reshape(%184, newshape=[6, 2, 13]) /* ty=Tensor[(6, 2, 13), float64] */;
  %187 = reshape(%185, newshape=[1, 378]) /* ty=Tensor[(1, 378), float64] */;
  %188 = @func_2113(%186, %187) /* ty=(Tensor[(6, 2, 13), float64], Tensor[(14, 9, 3), float64], Tensor[(1, 378), float64]) */;
  %189 = cast(meta[relay.Constant][11] /* ty=Tensor[(180), uint16] */, dtype="uint16") /* ty=Tensor[(180), uint16] */;
  %190 = reshape(%189, newshape=[180]) /* ty=Tensor[(180), uint16] */;
  %191 = @func_4492(%190) /* ty=(Tensor[(2, 3, 12), float64], Tensor[(11, 8, 11), int64], Tensor[(968), int64], Tensor[(64), float64], Tensor[(2, 13, 3), float64], Tensor[(78), float64], Tensor[(4, 9, 5), float64]) */;
  %192 = logical_xor(%182, %183) /* ty=Tensor[(2, 3, 12), int8] */;
  %193 = %188.2;
  %194 = %191.5;
  (%192, %193, %var_5281, %var_5282, %194, meta[relay.Constant][11] /* ty=Tensor[(180), uint16] */)
}

def @func_891(%var_888: Tensor[(2, 13, 3), float64]) -> (Tensor[(2, 13, 3), float64],) {
  %195 = cast(%var_888, dtype="float64") /* ty=Tensor[(2, 13, 3), float64] */;
  %196 = asin(%195) /* ty=Tensor[(2, 13, 3), float64] */;
  (%196,)
}

def @func_970(%var_966: Tensor[(8, 3, 7), float64]) -> Tensor[(8, 3, 7), float64] {
  %197 = cast(%var_966, dtype="float64") /* ty=Tensor[(8, 3, 7), float64] */;
  log(%197) /* ty=Tensor[(8, 3, 7), float64] */
}

def @func_6076() -> Tensor[(2, 3, 12), float64] {
  %198 = @func_4919() /* ty=(Tensor[(2, 3, 12), float64],) */;
  %198.0
}

def @func_7885() -> (Tensor[(2, 3, 12), float64], Tensor[(2, 3, 12), float64]) {
  %199 = @func_7076() /* ty=Tensor[(2, 3, 12), float64] */;
  %200 = @func_7440() /* ty=Tensor[(2, 3, 12), float64] */;
  (%199, %200)
}

def @func_1384(%var_1373: Tensor[(5, 3, 15), float64]) -> Tensor[(5, 3, 15), float64] {
  %201 = cast(meta[relay.Constant][12] /* ty=Tensor[(5, 3, 15), float64] */, dtype="float64") /* ty=Tensor[(5, 3, 15), float64] */;
  %202 = shape_of(%var_1373, dtype="int32") /* ty=Tensor[(3), int32] */;
  %203 = cast(%var_1373, dtype="float64") /* ty=Tensor[(5, 3, 15), float64] */;
  %204 = dyn.reshape(%201, %202, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  mod(%203, %204) /* ty=Tensor[(5, 3, 15), float64] */
}

def @func_6925() -> Tensor[(2, 3, 12), float64] {
  @func_6183() /* ty=Tensor[(2, 3, 12), float64] */
}

def @func_4246(%var_4240: Tensor[(2, 3, 12), float64]) -> (Tensor[(16, 12, 7), float32], Tensor[(1344), float32], Tensor[(2, 3, 12), bool]) {
  %205 = cast(meta[relay.Constant][13] /* ty=Tensor[(1344), float32] */, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %206 = reshape(%205, newshape=[16, 12, 7]) /* ty=Tensor[(16, 12, 7), float32] */;
  %207 = @func_4205() /* ty=(Tensor[(2, 3, 12), float64],) */;
  %208 = %207.0;
  %209 = cast(%208, dtype="float64") /* ty=Tensor[(2, 3, 12), float64] */;
  %210 = erf(%209) /* ty=Tensor[(2, 3, 12), float64] */;
  %211 = cast(%var_4240, dtype="bool") /* ty=Tensor[(2, 3, 12), bool] */;
  %212 = shape_of(%210, dtype="int32") /* ty=Tensor[(3), int32] */;
  %213 = cast(%210, dtype="bool") /* ty=Tensor[(2, 3, 12), bool] */;
  %214 = dyn.reshape(%211, %212, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %215 = @func_1475(%206) /* ty=Tensor[(16, 12, 7), float32] */;
  %216 = less(%213, %214) /* ty=Tensor[(2, 3, 12), bool] */;
  (%215, meta[relay.Constant][13] /* ty=Tensor[(1344), float32] */, %216)
}

def @func_7440() -> Tensor[(2, 3, 12), float64] {
  @func_6925() /* ty=Tensor[(2, 3, 12), float64] */
}

def @func_2199(%var_2177: Tensor[(16, 6, 6), uint8]) -> Tensor[(16, 6, 6), uint8] {
  %217 = cast(meta[relay.Constant][14] /* ty=Tensor[(16, 6, 6), uint8] */, dtype="uint8") /* ty=Tensor[(16, 6, 6), uint8] */;
  %218 = shape_of(%var_2177, dtype="int32") /* ty=Tensor[(3), int32] */;
  %219 = cast(%var_2177, dtype="uint8") /* ty=Tensor[(16, 6, 6), uint8] */;
  %220 = dyn.reshape(%217, %218, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  right_shift(%219, %220) /* ty=Tensor[(16, 6, 6), uint8] */
}

def @func_1475(%var_1472: Tensor[(16, 12, 7), float32]) -> Tensor[(16, 12, 7), float32] {
  %221 = cast(%var_1472, dtype="float32") /* ty=Tensor[(16, 12, 7), float32] */;
  sinh(%221) /* ty=Tensor[(16, 12, 7), float32] */
}

def @func_7632() -> (Tensor[(2, 3, 12), float64],) {
  %222 = @func_4919() /* ty=(Tensor[(2, 3, 12), float64],) */;
  %223 = %222.0;
  (%223,)
}

def @func_6675(%var_6651: float64, %var_6660: Tensor[(75, 3), float64]) -> (Tensor[(7, 10, 4), bool], Tensor[(9, 2, 12), float32], Tensor[(1, 72), uint64], Tensor[(75, 3), float64], Tensor[(1344), float32]) {
  %224 = cast(%var_6651, dtype="bool") /* ty=bool */;
  %225 = cast(meta[relay.Constant][15] /* ty=Tensor[(7, 10, 4), float64] */, dtype="bool") /* ty=Tensor[(7, 10, 4), bool] */;
  %226 = cast(meta[relay.Constant][16] /* ty=Tensor[(1, 72), uint64] */, dtype="uint64") /* ty=Tensor[(1, 72), uint64] */;
  %227 = cast(%var_6660, dtype="float64") /* ty=Tensor[(75, 3), float64] */;
  %228 = cast(meta[relay.Constant][17] /* ty=Tensor[(1344), float32] */, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %229 = reshape(%226, newshape=[72]) /* ty=Tensor[(72), uint64] */;
  %230 = reshape(%227, newshape=[225]) /* ty=Tensor[(225), float64] */;
  %231 = reshape(%228, newshape=[1344]) /* ty=Tensor[(1344), float32] */;
  %232 = @func_2523(%229, %230, %231) /* ty=(Tensor[(16, 6, 6), uint8], Tensor[(576), uint8], Tensor[(9, 2, 12), float32], Tensor[(72), uint64], Tensor[(4, 288), uint64], Tensor[(704), float64], Tensor[(5, 3, 15), float64], Tensor[(225), float64], Tensor[(2, 16, 2), bool], Tensor[(64), float64], Tensor[(16, 12, 7), float32], Tensor[(1344), float32], Tensor[(9, 15, 16), float64]) */;
  %233 = less(%224, %225) /* ty=Tensor[(7, 10, 4), bool] */;
  %234 = %232.2;
  (%233, %234, meta[relay.Constant][16] /* ty=Tensor[(1, 72), uint64] */, %var_6660, meta[relay.Constant][17] /* ty=Tensor[(1344), float32] */)
}

def @func_4314(%var_4255: Tensor[(2, 3, 12), float64], %var_4288: Tensor[(240), float32], %var_4289: Tensor[(704), float64]) -> (Tensor[(2, 3, 12), int16], Tensor[(5, 3, 15), float64], Tensor[(225), float64], Tensor[(2, 3, 12), bool], Tensor[(704), float64], float32, Tensor[(240), float32], Tensor[(704), float64], Tensor[(2, 3, 12), float32]) {
  %235 = @func_4205() /* ty=(Tensor[(2, 3, 12), float64],) */;
  %236 = %235.0;
  %237 = cast(%var_4255, dtype="int16") /* ty=Tensor[(2, 3, 12), int16] */;
  %238 = shape_of(%236, dtype="int32") /* ty=Tensor[(3), int32] */;
  %239 = cast(%236, dtype="int16") /* ty=Tensor[(2, 3, 12), int16] */;
  %240 = dyn.reshape(%237, %238, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %241 = cast(meta[relay.Constant][18] /* ty=Tensor[(225), float64] */, dtype="float64") /* ty=Tensor[(225), float64] */;
  %242 = reshape(%241, newshape=[5, 3, 15]) /* ty=Tensor[(5, 3, 15), float64] */;
  %243 = right_shift(%239, %240) /* ty=Tensor[(2, 3, 12), int16] */;
  %244 = cast(%243, dtype="float64") /* ty=Tensor[(2, 3, 12), float64] */;
  %245 = reshape(%244, newshape=[2, 3, 12]) /* ty=Tensor[(2, 3, 12), float64] */;
  %246 = @func_4246(%245) /* ty=(Tensor[(16, 12, 7), float32], Tensor[(1344), float32], Tensor[(2, 3, 12), bool]) */;
  %247 = cast(8.75494f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %248 = cast(%var_4288, dtype="float32") /* ty=Tensor[(240), float32] */;
  %249 = cast(%var_4289, dtype="float64") /* ty=Tensor[(704), float64] */;
  %250 = cast(%var_4255, dtype="uint64") /* ty=Tensor[(2, 3, 12), uint64] */;
  %251 = reshape(%247, newshape=[]) /* ty=float32 */;
  %252 = reshape(%248, newshape=[15, 2, 8]) /* ty=Tensor[(15, 2, 8), float32] */;
  %253 = reshape(%249, newshape=[16, 11, 4]) /* ty=Tensor[(16, 11, 4), float64] */;
  %254 = reshape(%250, newshape=[72]) /* ty=Tensor[(72), uint64] */;
  %255 = @func_434(%251, %252, %253, %254) /* ty=(Tensor[(16, 11, 4), float64], Tensor[(72), uint64], Tensor[(1152), uint64], Tensor[(704), float64], Tensor[(15, 2, 8), int16], Tensor[(352, 2), uint32]) */;
  %256 = cast(%236, dtype="float64") /* ty=Tensor[(2, 3, 12), float64] */;
  %257 = atanh(%256) /* ty=Tensor[(2, 3, 12), float64] */;
  %258 = cast(%257, dtype="float64") /* ty=Tensor[(2, 3, 12), float64] */;
  %259 = cos(%258) /* ty=Tensor[(2, 3, 12), float64] */;
  %260 = cast(%259, dtype="float32") /* ty=Tensor[(2, 3, 12), float32] */;
  %261 = @func_1384(%242) /* ty=Tensor[(5, 3, 15), float64] */;
  %262 = %246.2;
  %263 = %255.3;
  %264 = sin(%260) /* ty=Tensor[(2, 3, 12), float32] */;
  (%243, %261, meta[relay.Constant][18] /* ty=Tensor[(225), float64] */, %262, %263, 8.75494f /* ty=float32 */, %var_4288, %var_4289, %264)
}

def @func_5949() -> (Tensor[(2, 3, 12), float64],) {
  %265 = @func_5385() /* ty=Tensor[(2, 3, 12), float64] */;
  (%265,)
}

def @func_6591(%var_6584: Tensor[(9, 9, 12), uint16]) -> Tensor[(9, 9, 12), bool] {
  %266 = cast(%var_6584, dtype="bool") /* ty=Tensor[(9, 9, 12), bool] */;
  %267 = shape_of(meta[relay.Constant][19] /* ty=Tensor[(9, 9, 12), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %268 = cast(meta[relay.Constant][19] /* ty=Tensor[(9, 9, 12), uint16] */, dtype="bool") /* ty=Tensor[(9, 9, 12), bool] */;
  %269 = dyn.reshape(%266, %267, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%268, %269) /* ty=Tensor[(9, 9, 12), bool] */
}

def @func_6051(%var_5966: Tensor[(13, 14, 1), float64], %var_6023: Tensor[(13, 14, 10), float64]) -> (Tensor[(13, 14, ?), uint32], Tensor[(13, 14, ?), bool], Tensor[(2, 3, 12), float64], Tensor[(78), float64], Tensor[(5, 3, 15), float64], Tensor[(13, 14, 10), int8], Tensor[(13, 14, ?), bool], Tensor[(2, 13, 3), float64], Tensor[(13, 14, 225), uint64]) {
  %270 = cast(%var_5966, dtype="float64") /* ty=Tensor[(13, 14, 1), float64] */;
  %271 = erf(%270) /* ty=Tensor[(13, 14, 1), float64] */;
  %272 = cast(%271, dtype="uint32") /* ty=Tensor[(13, 14, 1), uint32] */;
  %273 = shape_of(%var_5966, dtype="int32") /* ty=Tensor[(3), int32] */;
  %274 = cast(%var_5966, dtype="uint32") /* ty=Tensor[(13, 14, 1), uint32] */;
  %275 = dyn.reshape(%272, %273, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %276 = cast(%271, dtype="float32") /* ty=Tensor[(13, 14, 1), float32] */;
  %277 = sinh(%276) /* ty=Tensor[(13, 14, 1), float32] */;
  %278 = cast(%var_5966, dtype="bool") /* ty=Tensor[(13, 14, 1), bool] */;
  %279 = shape_of(%277, dtype="int32") /* ty=Tensor[(3), int32] */;
  %280 = cast(%277, dtype="bool") /* ty=Tensor[(13, 14, 1), bool] */;
  %281 = dyn.reshape(%278, %279, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %282 = cast(meta[relay.Constant][20] /* ty=Tensor[(78), float64] */, dtype="float64") /* ty=Tensor[(78), float64] */;
  %283 = reshape(%282, newshape=[26, 3]) /* ty=Tensor[(26, 3), float64] */;
  %284 = @func_4848(%283) /* ty=(Tensor[(2, 3, 12), float64], Tensor[(3, 16, 4), int64], Tensor[(4, 176), float64], Tensor[(2, 13, 3), float64], Tensor[(26, 3), float64], Tensor[(1152), float32]) */;
  %285 = cast(meta[relay.Constant][21] /* ty=Tensor[(225), float64] */, dtype="float64") /* ty=Tensor[(225), float64] */;
  %286 = reshape(%285, newshape=[5, 3, 15]) /* ty=Tensor[(5, 3, 15), float64] */;
  %287 = cast(%277, dtype="float64") /* ty=Tensor[(13, 14, 1), float64] */;
  %288 = atan(%287) /* ty=Tensor[(13, 14, 1), float64] */;
  %289 = cast(%288, dtype="int8") /* ty=Tensor[(13, 14, 1), int8] */;
  %290 = cast(%var_6023, dtype="int8") /* ty=Tensor[(13, 14, 10), int8] */;
  %291 = cast(%277, dtype="float32") /* ty=Tensor[(13, 14, 1), float32] */;
  %292 = atanh(%291) /* ty=Tensor[(13, 14, 1), float32] */;
  %293 = cast(%292, dtype="int32") /* ty=Tensor[(13, 14, 1), int32] */;
  %294 = shape_of(%288, dtype="int32") /* ty=Tensor[(3), int32] */;
  %295 = cast(%288, dtype="int32") /* ty=Tensor[(13, 14, 1), int32] */;
  %296 = dyn.reshape(%293, %294, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %297 = bitwise_xor(%295, %296) /* ty=Tensor[(13, 14, ?), int32] */;
  %298 = cast(%297, dtype="bool") /* ty=Tensor[(13, 14, ?), bool] */;
  %299 = shape_of(%288, dtype="int32") /* ty=Tensor[(3), int32] */;
  %300 = cast(%288, dtype="bool") /* ty=Tensor[(13, 14, 1), bool] */;
  %301 = dyn.reshape(%298, %299, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %302 = cast(meta[relay.Constant][20] /* ty=Tensor[(78), float64] */, dtype="float64") /* ty=Tensor[(78), float64] */;
  %303 = reshape(%302, newshape=[2, 13, 3]) /* ty=Tensor[(2, 13, 3), float64] */;
  %304 = @func_891(%303) /* ty=(Tensor[(2, 13, 3), float64],) */;
  %305 = cast(%288, dtype="uint64") /* ty=Tensor[(13, 14, 1), uint64] */;
  %306 = cast(meta[relay.Constant][21] /* ty=Tensor[(225), float64] */, dtype="uint64") /* ty=Tensor[(225), uint64] */;
  %307 = bitwise_or(%274, %275) /* ty=Tensor[(13, 14, ?), uint32] */;
  %308 = greater(%280, %281) /* ty=Tensor[(13, 14, ?), bool] */;
  %309 = %284.0;
  %310 = @func_1384(%286) /* ty=Tensor[(5, 3, 15), float64] */;
  %311 = logical_xor(%289, %290) /* ty=Tensor[(13, 14, 10), int8] */;
  %312 = logical_and(%300, %301) /* ty=Tensor[(13, 14, ?), bool] */;
  %313 = %304.0;
  %314 = left_shift(%305, %306) /* ty=Tensor[(13, 14, 225), uint64] */;
  (%307, %308, %309, meta[relay.Constant][20] /* ty=Tensor[(78), float64] */, %310, %311, %312, %313, %314)
}

def @func_6380(%var_6372: Tensor[(72), uint64], %var_6373: Tensor[(1152), uint64]) -> (Tensor[(11, 6, 12), float32], Tensor[(1152), uint64], Tensor[(704), float64], Tensor[(18, 4), int32]) {
  %315 = cast(%var_6372, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %316 = cast(%var_6373, dtype="uint64") /* ty=Tensor[(1152), uint64] */;
  %317 = cast(meta[relay.Constant][22] /* ty=Tensor[(704), float64] */, dtype="float64") /* ty=Tensor[(704), float64] */;
  %318 = reshape(%315, newshape=[18, 4]) /* ty=Tensor[(18, 4), uint64] */;
  %319 = reshape(%316, newshape=[1152]) /* ty=Tensor[(1152), uint64] */;
  %320 = reshape(%317, newshape=[704]) /* ty=Tensor[(704), float64] */;
  %321 = @func_1109(%318, %319, %320) /* ty=(Tensor[(9, 2, 12), float32], Tensor[(704), float64], Tensor[(18, 4), uint64], Tensor[(1152), uint64], Tensor[(704), float64], Tensor[(3, 16, 4), int64], int64) */;
  %322 = %321.2;
  %323 = cast(%var_6372, dtype="int32") /* ty=Tensor[(72), int32] */;
  %324 = shape_of(%322, dtype="int32") /* ty=Tensor[(2), int32] */;
  %325 = cast(%322, dtype="int32") /* ty=Tensor[(18, 4), int32] */;
  %326 = dyn.reshape(%323, %324, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %327 = @func_5812() /* ty=Tensor[(11, 6, 12), float32] */;
  %328 = bitwise_xor(%325, %326) /* ty=Tensor[(18, 4), int32] */;
  (%327, %var_6373, meta[relay.Constant][22] /* ty=Tensor[(704), float64] */, %328)
}

def @func_2833(%var_2825: int32, %var_2826: Tensor[(8, 16, 12), int32]) -> (Tensor[(8, 16, 12), int32],) {
  %329 = cast(%var_2825, dtype="int32") /* ty=int32 */;
  %330 = cast(%var_2826, dtype="int32") /* ty=Tensor[(8, 16, 12), int32] */;
  %331 = left_shift(%329, %330) /* ty=Tensor[(8, 16, 12), int32] */;
  (%331,)
}

def @func_5541() -> (Tensor[(2, 3, 12), float64],) {
  %332 = @func_4539() /* ty=(Tensor[(2, 3, 12), float64],) */;
  %333 = %332.0;
  (%333,)
}

def @func_4414() -> Tensor[(2, 3, 12), float64] {
  %334 = @func_4205() /* ty=(Tensor[(2, 3, 12), float64],) */;
  %334.0
}

def @func_1109(%var_1096: Tensor[(18, 4), uint64], %var_1097: Tensor[(1152), uint64], %var_1098: Tensor[(704), float64]) -> (Tensor[(9, 2, 12), float32], Tensor[(704), float64], Tensor[(18, 4), uint64], Tensor[(1152), uint64], Tensor[(704), float64], Tensor[(3, 16, 4), int64], int64) {
  %335 = cast(meta[relay.Constant][23] /* ty=Tensor[(9, 2, 12), float32] */, dtype="float32") /* ty=Tensor[(9, 2, 12), float32] */;
  %336 = cast(%var_1096, dtype="uint64") /* ty=Tensor[(18, 4), uint64] */;
  %337 = cast(%var_1097, dtype="uint64") /* ty=Tensor[(1152), uint64] */;
  %338 = cast(%var_1098, dtype="float64") /* ty=Tensor[(704), float64] */;
  %339 = reshape(%336, newshape=[8, 9, 1]) /* ty=Tensor[(8, 9, 1), uint64] */;
  %340 = reshape(%337, newshape=[8, 9, 16]) /* ty=Tensor[(8, 9, 16), uint64] */;
  %341 = reshape(%338, newshape=[704]) /* ty=Tensor[(704), float64] */;
  %342 = @func_289(%339, %340, %341) /* ty=(Tensor[(8, 9, 16), uint64], Tensor[(16, 11, 4), float64], Tensor[(704), float64], Tensor[(16, 11, 4), float64]) */;
  %343 = cast(-3 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %344 = reshape(%343, newshape=[]) /* ty=int64 */;
  %345 = @func_841(%344) /* ty=(Tensor[(3, 16, 4), int64],) */;
  %346 = log2(%335) /* ty=Tensor[(9, 2, 12), float32] */;
  %347 = %342.2;
  %348 = %345.0;
  (%346, %347, %var_1096, %var_1097, %var_1098, %348, -3 /* ty=int64 */)
}

def @func_661(%var_636: Tensor[(2, 16, 2), float64]) -> (Tensor[(2, 16, 2), bool],) {
  %349 = cast(%var_636, dtype="bool") /* ty=Tensor[(2, 16, 2), bool] */;
  %350 = shape_of(meta[relay.Constant][24] /* ty=Tensor[(2, 16, 2), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %351 = cast(meta[relay.Constant][24] /* ty=Tensor[(2, 16, 2), float64] */, dtype="bool") /* ty=Tensor[(2, 16, 2), bool] */;
  %352 = dyn.reshape(%349, %350, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %353 = less(%351, %352) /* ty=Tensor[(2, 16, 2), bool] */;
  (%353,)
}

def @func_2891(%var_2881: Tensor[(14, 7, 15), float64]) -> (Tensor[(14, 7, 15), float64], Tensor[(14, 7, 15), float64]) {
  %354 = cast(meta[relay.Constant][25] /* ty=Tensor[(14, 7, 1), float64] */, dtype="float64") /* ty=Tensor[(14, 7, 1), float64] */;
  %355 = cast(%var_2881, dtype="float64") /* ty=Tensor[(14, 7, 15), float64] */;
  %356 = cast(%var_2881, dtype="float64") /* ty=Tensor[(14, 7, 15), float64] */;
  %357 = mod(%354, %355) /* ty=Tensor[(14, 7, 15), float64] */;
  %358 = asinh(%356) /* ty=Tensor[(14, 7, 15), float64] */;
  (%357, %358)
}

def @func_2523(%var_2443: Tensor[(72), uint64], %var_2469: Tensor[(225), float64], %var_2500: Tensor[(1344), float32]) -> (Tensor[(16, 6, 6), uint8], Tensor[(576), uint8], Tensor[(9, 2, 12), float32], Tensor[(72), uint64], Tensor[(4, 288), uint64], Tensor[(704), float64], Tensor[(5, 3, 15), float64], Tensor[(225), float64], Tensor[(2, 16, 2), bool], Tensor[(64), float64], Tensor[(16, 12, 7), float32], Tensor[(1344), float32], Tensor[(9, 15, 16), float64]) {
  %359 = cast(meta[relay.Constant][26] /* ty=Tensor[(576), uint8] */, dtype="uint8") /* ty=Tensor[(576), uint8] */;
  %360 = reshape(%359, newshape=[16, 6, 6]) /* ty=Tensor[(16, 6, 6), uint8] */;
  %361 = cast(%var_2443, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %362 = cast(meta[relay.Constant][27] /* ty=Tensor[(4, 288), uint64] */, dtype="uint64") /* ty=Tensor[(4, 288), uint64] */;
  %363 = cast(meta[relay.Constant][28] /* ty=Tensor[(704), float64] */, dtype="float64") /* ty=Tensor[(704), float64] */;
  %364 = reshape(%361, newshape=[18, 4]) /* ty=Tensor[(18, 4), uint64] */;
  %365 = reshape(%362, newshape=[1152]) /* ty=Tensor[(1152), uint64] */;
  %366 = reshape(%363, newshape=[704]) /* ty=Tensor[(704), float64] */;
  %367 = @func_1109(%364, %365, %366) /* ty=(Tensor[(9, 2, 12), float32], Tensor[(704), float64], Tensor[(18, 4), uint64], Tensor[(1152), uint64], Tensor[(704), float64], Tensor[(3, 16, 4), int64], int64) */;
  %368 = cast(%var_2469, dtype="float64") /* ty=Tensor[(225), float64] */;
  %369 = reshape(%368, newshape=[5, 3, 15]) /* ty=Tensor[(5, 3, 15), float64] */;
  %370 = cast(meta[relay.Constant][29] /* ty=Tensor[(64), float64] */, dtype="float64") /* ty=Tensor[(64), float64] */;
  %371 = reshape(%370, newshape=[2, 16, 2]) /* ty=Tensor[(2, 16, 2), float64] */;
  %372 = @func_661(%371) /* ty=(Tensor[(2, 16, 2), bool],) */;
  %373 = cast(%var_2500, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %374 = reshape(%373, newshape=[16, 12, 7]) /* ty=Tensor[(16, 12, 7), float32] */;
  %375 = cast(meta[relay.Constant][30] /* ty=Tensor[(9, 15, 16), float32] */, dtype="float32") /* ty=Tensor[(9, 15, 16), float32] */;
  %376 = sin(%375) /* ty=Tensor[(9, 15, 16), float32] */;
  %377 = cast(%376, dtype="float64") /* ty=Tensor[(9, 15, 16), float64] */;
  %378 = acosh(%377) /* ty=Tensor[(9, 15, 16), float64] */;
  %379 = cast(%378, dtype="float64") /* ty=Tensor[(9, 15, 16), float64] */;
  %380 = @func_2199(%360) /* ty=Tensor[(16, 6, 6), uint8] */;
  %381 = %367.0;
  %382 = @func_1384(%369) /* ty=Tensor[(5, 3, 15), float64] */;
  %383 = %372.0;
  %384 = @func_1475(%374) /* ty=Tensor[(16, 12, 7), float32] */;
  %385 = exp(%379) /* ty=Tensor[(9, 15, 16), float64] */;
  (%380, meta[relay.Constant][26] /* ty=Tensor[(576), uint8] */, %381, %var_2443, meta[relay.Constant][27] /* ty=Tensor[(4, 288), uint64] */, meta[relay.Constant][28] /* ty=Tensor[(704), float64] */, %382, %var_2469, %383, meta[relay.Constant][29] /* ty=Tensor[(64), float64] */, %384, %var_2500, %385)
}

def @func_5906(%var_5892: int64) -> (Tensor[(11, 6, 12), float64], Tensor[(11, 6, 12), float32], Tensor[(3, 16, 4), int64], int64, Tensor[(2, 3, 12), float64]) {
  %386 = @func_5812() /* ty=Tensor[(11, 6, 12), float32] */;
  %387 = cast(%386, dtype="float64") /* ty=Tensor[(11, 6, 12), float64] */;
  %388 = cast(%var_5892, dtype="int64") /* ty=int64 */;
  %389 = reshape(%388, newshape=[]) /* ty=int64 */;
  %390 = @func_841(%389) /* ty=(Tensor[(3, 16, 4), int64],) */;
  %391 = @func_4919() /* ty=(Tensor[(2, 3, 12), float64],) */;
  %392 = sinh(%387) /* ty=Tensor[(11, 6, 12), float64] */;
  %393 = @func_5812() /* ty=Tensor[(11, 6, 12), float32] */;
  %394 = %390.0;
  %395 = %391.0;
  (%392, %393, %394, %var_5892, %395)
}

def @func_5812() -> Tensor[(11, 6, 12), float32] {
  %396 = cast(meta[relay.Constant][31] /* ty=Tensor[(11, 6, 12), float32] */, dtype="float32") /* ty=Tensor[(11, 6, 12), float32] */;
  acosh(%396) /* ty=Tensor[(11, 6, 12), float32] */
}

def @func_7786() -> (Tensor[(2, 3, 12), float64],) {
  %397 = @func_6076() /* ty=Tensor[(2, 3, 12), float64] */;
  (%397,)
}

def @func_4205() -> (Tensor[(2, 3, 12), float64],) {
  %398 = cast(meta[relay.Constant][32] /* ty=Tensor[(2, 3, 12), float64] */, dtype="float64") /* ty=Tensor[(2, 3, 12), float64] */;
  %399 = asinh(%398) /* ty=Tensor[(2, 3, 12), float64] */;
  (%399,)
}

def @func_4781() -> (Tensor[(2, 3, 12), float64],) {
  %400 = @func_4205() /* ty=(Tensor[(2, 3, 12), float64],) */;
  %401 = %400.0;
  (%401,)
}

def @func_5526(%var_5513: Tensor[(12, 5, 1), float64]) -> Tensor[(12, 5, 1), float64] {
  %402 = cast(%var_5513, dtype="float64") /* ty=Tensor[(12, 5, 1), float64] */;
  log10(%402) /* ty=Tensor[(12, 5, 1), float64] */
}

def @func_5623(%var_5620: Tensor[(15, 14, 12), float64]) -> (Tensor[(15, 14, 12), float64],) {
  %403 = cast(%var_5620, dtype="float64") /* ty=Tensor[(15, 14, 12), float64] */;
  %404 = log10(%403) /* ty=Tensor[(15, 14, 12), float64] */;
  (%404,)
}

def @func_6149(%var_6139: int16, %var_6140: Tensor[(4, 252), int16], %var_6141: Tensor[(704), float64]) -> (Tensor[(2, 3, 12), float64], Tensor[(12, 7, 12), float32], int16, Tensor[(4, 252), int16], Tensor[(704), float64]) {
  %405 = @func_5541() /* ty=(Tensor[(2, 3, 12), float64],) */;
  %406 = cast(%var_6139, dtype="int16") /* ty=int16 */;
  %407 = cast(%var_6140, dtype="int16") /* ty=Tensor[(4, 252), int16] */;
  %408 = cast(%var_6141, dtype="float64") /* ty=Tensor[(704), float64] */;
  %409 = reshape(%406, newshape=[]) /* ty=int16 */;
  %410 = reshape(%407, newshape=[12, 7, 12]) /* ty=Tensor[(12, 7, 12), int16] */;
  %411 = reshape(%408, newshape=[176, 4]) /* ty=Tensor[(176, 4), float64] */;
  %412 = @func_1243(%409, %410, %411) /* ty=(Tensor[(16, 11, 4), float64], Tensor[(176, 4), float64], Tensor[(12, 7, 12), float32]) */;
  %413 = %405.0;
  %414 = %412.2;
  (%413, %414, %var_6139, %var_6140, %var_6141)
}

def @func_4492(%var_4474: Tensor[(180), uint16]) -> (Tensor[(2, 3, 12), float64], Tensor[(11, 8, 11), int64], Tensor[(968), int64], Tensor[(64), float64], Tensor[(2, 13, 3), float64], Tensor[(78), float64], Tensor[(4, 9, 5), float64]) {
  %415 = @func_4205() /* ty=(Tensor[(2, 3, 12), float64],) */;
  %416 = cast(meta[relay.Constant][33] /* ty=Tensor[(968), int64] */, dtype="int64") /* ty=Tensor[(968), int64] */;
  %417 = cast(meta[relay.Constant][33] /* ty=Tensor[(968), int64] */, dtype="int64") /* ty=Tensor[(968), int64] */;
  %418 = cast(meta[relay.Constant][34] /* ty=Tensor[(64), float64] */, dtype="float64") /* ty=Tensor[(64), float64] */;
  %419 = reshape(%416, newshape=[11, 8, 11]) /* ty=Tensor[(11, 8, 11), int64] */;
  %420 = reshape(%417, newshape=[11, 8, 11]) /* ty=Tensor[(11, 8, 11), int64] */;
  %421 = reshape(%418, newshape=[64]) /* ty=Tensor[(64), float64] */;
  %422 = @func_1623(%419, %420, %421) /* ty=(Tensor[(11, 8, 11), int64], Tensor[(2, 16, 2), bool], Tensor[(64), float64]) */;
  %423 = cast(meta[relay.Constant][35] /* ty=Tensor[(78), float64] */, dtype="float64") /* ty=Tensor[(78), float64] */;
  %424 = reshape(%423, newshape=[2, 13, 3]) /* ty=Tensor[(2, 13, 3), float64] */;
  %425 = @func_891(%424) /* ty=(Tensor[(2, 13, 3), float64],) */;
  %426 = cast(%var_4474, dtype="uint16") /* ty=Tensor[(180), uint16] */;
  %427 = reshape(%426, newshape=[4, 9, 5]) /* ty=Tensor[(4, 9, 5), uint16] */;
  %428 = @func_3160(%427) /* ty=Tensor[(4, 9, 5), bool] */;
  %429 = cast(%var_4474, dtype="float64") /* ty=Tensor[(180), float64] */;
  %430 = shape_of(%428, dtype="int32") /* ty=Tensor[(3), int32] */;
  %431 = cast(%428, dtype="float64") /* ty=Tensor[(4, 9, 5), float64] */;
  %432 = dyn.reshape(%429, %430, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %433 = %415.0;
  %434 = %422.0;
  %435 = %425.0;
  %436 = subtract(%431, %432) /* ty=Tensor[(4, 9, 5), float64] */;
  (%433, %434, meta[relay.Constant][33] /* ty=Tensor[(968), int64] */, meta[relay.Constant][34] /* ty=Tensor[(64), float64] */, %435, meta[relay.Constant][35] /* ty=Tensor[(78), float64] */, %436)
}

def @func_2113(%var_2094: Tensor[(6, 2, 13), float64], %var_2102: Tensor[(1, 378), float64]) -> (Tensor[(6, 2, 13), float64], Tensor[(14, 9, 3), float64], Tensor[(1, 378), float64]) {
  %437 = cast(%var_2094, dtype="float64") /* ty=Tensor[(6, 2, 13), float64] */;
  %438 = cast(%var_2102, dtype="float64") /* ty=Tensor[(1, 378), float64] */;
  %439 = cast(%var_2102, dtype="float64") /* ty=Tensor[(1, 378), float64] */;
  %440 = reshape(%438, newshape=[14, 9, 3]) /* ty=Tensor[(14, 9, 3), float64] */;
  %441 = reshape(%439, newshape=[14, 9, 3]) /* ty=Tensor[(14, 9, 3), float64] */;
  %442 = @func_733(%440, %441) /* ty=(Tensor[(14, 9, 3), float64],) */;
  %443 = log2(%437) /* ty=Tensor[(6, 2, 13), float64] */;
  %444 = %442.0;
  (%443, %444, %var_2102)
}

def @func_4919() -> (Tensor[(2, 3, 12), float64],) {
  %445 = @func_4781() /* ty=(Tensor[(2, 3, 12), float64],) */;
  %446 = %445.0;
  (%446,)
}

def @func_6118(%var_6107: Tensor[(8, 4, 11), bool]) -> Tensor[(8, 4, 11), bool] {
  %447 = cast(meta[relay.Constant][36] /* ty=Tensor[(8, 4, 11), bool] */, dtype="bool") /* ty=Tensor[(8, 4, 11), bool] */;
  %448 = shape_of(%var_6107, dtype="int32") /* ty=Tensor[(3), int32] */;
  %449 = cast(%var_6107, dtype="bool") /* ty=Tensor[(8, 4, 11), bool] */;
  %450 = dyn.reshape(%447, %448, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%449, %450) /* ty=Tensor[(8, 4, 11), bool] */
}

def @func_6637() -> Tensor[(2, 3, 12), float64] {
  %451 = @func_4781() /* ty=(Tensor[(2, 3, 12), float64],) */;
  %451.0
}

def @func_5385() -> Tensor[(2, 3, 12), float64] {
  %452 = @func_4205() /* ty=(Tensor[(2, 3, 12), float64],) */;
  %452.0
}

def @func_76(%var_72: Tensor[(16, 11, 4), float64]) -> (Tensor[(16, 11, 4), float64],) {
  %453 = cast(%var_72, dtype="float64") /* ty=Tensor[(16, 11, 4), float64] */;
  %454 = log2(%453) /* ty=Tensor[(16, 11, 4), float64] */;
  (%454,)
}

def @func_6322(%var_6295: Tensor[(504), float64], %var_6313: Tensor[(240), float32], %var_6314: Tensor[(704), float64]) -> (Tensor[(2, 3, 12), float64], Tensor[(156), float64], float64, Tensor[(504), float64], Tensor[(1, 1470), float64], Tensor[(968, 1), int64], Tensor[(156), float64], Tensor[(378), float64], Tensor[(704), float64], Tensor[(240), float32], Tensor[(704), float64]) {
  %455 = cast(-6.44835f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %456 = cast(%var_6295, dtype="float64") /* ty=Tensor[(504), float64] */;
  %457 = cast(meta[relay.Constant][37] /* ty=Tensor[(1, 1470), float64] */, dtype="float64") /* ty=Tensor[(1, 1470), float64] */;
  %458 = cast(meta[relay.Constant][38] /* ty=Tensor[(968, 1), int64] */, dtype="int64") /* ty=Tensor[(968, 1), int64] */;
  %459 = cast(%var_6295, dtype="float64") /* ty=Tensor[(504), float64] */;
  %460 = cast(meta[relay.Constant][39] /* ty=Tensor[(156), float64] */, dtype="float64") /* ty=Tensor[(156), float64] */;
  %461 = cast(meta[relay.Constant][40] /* ty=Tensor[(378), float64] */, dtype="float64") /* ty=Tensor[(378), float64] */;
  %462 = reshape(%455, newshape=[]) /* ty=float64 */;
  %463 = reshape(%456, newshape=[7, 6, 12]) /* ty=Tensor[(7, 6, 12), float64] */;
  %464 = reshape(%457, newshape=[1470]) /* ty=Tensor[(1470), float64] */;
  %465 = reshape(%458, newshape=[968]) /* ty=Tensor[(968), int64] */;
  %466 = reshape(%459, newshape=[7, 6, 12]) /* ty=Tensor[(7, 6, 12), float64] */;
  %467 = reshape(%460, newshape=[156]) /* ty=Tensor[(156), float64] */;
  %468 = reshape(%461, newshape=[42, 9]) /* ty=Tensor[(42, 9), float64] */;
  %469 = @func_2998(%462, %463, %464, %465, %466, %467, %468) /* ty=(Tensor[(7, 6, 12), float64], Tensor[(14, 7, 15), float64], Tensor[(1470), float64], Tensor[(64), float64], Tensor[(968), int64], Tensor[(64), float64], Tensor[(16, 6, 6), uint8], Tensor[(576), uint8], Tensor[(1, 378), float64], Tensor[(156), float64], Tensor[(42, 9), float64], Tensor[(7, 6, 12), float64]) */;
  %470 = @func_4414() /* ty=Tensor[(2, 3, 12), float64] */;
  %471 = cast(%470, dtype="float64") /* ty=Tensor[(2, 3, 12), float64] */;
  %472 = cast(%var_6313, dtype="float32") /* ty=Tensor[(240), float32] */;
  %473 = cast(%var_6314, dtype="float64") /* ty=Tensor[(704), float64] */;
  %474 = reshape(%471, newshape=[2, 3, 12]) /* ty=Tensor[(2, 3, 12), float64] */;
  %475 = reshape(%472, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %476 = reshape(%473, newshape=[704]) /* ty=Tensor[(704), float64] */;
  %477 = @func_4314(%474, %475, %476) /* ty=(Tensor[(2, 3, 12), int16], Tensor[(5, 3, 15), float64], Tensor[(225), float64], Tensor[(2, 3, 12), bool], Tensor[(704), float64], float32, Tensor[(240), float32], Tensor[(704), float64], Tensor[(2, 3, 12), float32]) */;
  %478 = %469.9;
  %479 = %477.4;
  (%470, %478, -6.44835f64 /* ty=float64 */, %var_6295, meta[relay.Constant][37] /* ty=Tensor[(1, 1470), float64] */, meta[relay.Constant][38] /* ty=Tensor[(968, 1), int64] */, meta[relay.Constant][39] /* ty=Tensor[(156), float64] */, meta[relay.Constant][40] /* ty=Tensor[(378), float64] */, %479, %var_6313, %var_6314)
}

def @func_3160(%var_3133: Tensor[(4, 9, 5), uint16]) -> Tensor[(4, 9, 5), bool] {
  %480 = cast(meta[relay.Constant][41] /* ty=Tensor[(4, 9, 1), uint16] */, dtype="bool") /* ty=Tensor[(4, 9, 1), bool] */;
  %481 = cast(%var_3133, dtype="bool") /* ty=Tensor[(4, 9, 5), bool] */;
  %482 = not_equal(%480, %481) /* ty=Tensor[(4, 9, 5), bool] */;
  %483 = cast(meta[relay.Constant][41] /* ty=Tensor[(4, 9, 1), uint16] */, dtype="bool") /* ty=Tensor[(4, 9, 1), bool] */;
  %484 = cast(%482, dtype="bool") /* ty=Tensor[(4, 9, 5), bool] */;
  greater_equal(%483, %484) /* ty=Tensor[(4, 9, 5), bool] */
}

def @func_3967(%var_3942: float64, %var_3943: Tensor[(4, 13, 10), float64]) -> (Tensor[(4, 13, 10), float64], Tensor[(4, 13, 10), float64]) {
  %485 = cast(%var_3942, dtype="float64") /* ty=float64 */;
  %486 = cast(%var_3943, dtype="float64") /* ty=Tensor[(4, 13, 10), float64] */;
  %487 = cast(%var_3943, dtype="float64") /* ty=Tensor[(4, 13, 10), float64] */;
  %488 = power(%485, %486) /* ty=Tensor[(4, 13, 10), float64] */;
  %489 = asin(%487) /* ty=Tensor[(4, 13, 10), float64] */;
  (%488, %489)
}

def @func_6416() -> Tensor[(2, 3, 12), float64] {
  %490 = @func_5220() /* ty=(Tensor[(2, 3, 12), float64], Tensor[(2, 3, 12), float64]) */;
  %490.0
}

def @func_6183() -> Tensor[(2, 3, 12), float64] {
  %491 = @func_5220() /* ty=(Tensor[(2, 3, 12), float64], Tensor[(2, 3, 12), float64]) */;
  %491.0
}

def @func_7988(%var_7970: Tensor[(2, 3, 12), float64]) -> (Tensor[(2, 3, 12), bool], Tensor[(16, 11, 4), float64], Tensor[(704), float64]) {
  %492 = @func_7505() /* ty=(Tensor[(2, 3, 12), float64],) */;
  %493 = %492.0;
  %494 = cast(%var_7970, dtype="bool") /* ty=Tensor[(2, 3, 12), bool] */;
  %495 = shape_of(%493, dtype="int32") /* ty=Tensor[(3), int32] */;
  %496 = cast(%493, dtype="bool") /* ty=Tensor[(2, 3, 12), bool] */;
  %497 = dyn.reshape(%494, %495, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %498 = cast(meta[relay.Constant][42] /* ty=Tensor[(704), float64] */, dtype="float64") /* ty=Tensor[(704), float64] */;
  %499 = reshape(%498, newshape=[16, 11, 4]) /* ty=Tensor[(16, 11, 4), float64] */;
  %500 = @func_76(%499) /* ty=(Tensor[(16, 11, 4), float64],) */;
  %501 = logical_and(%496, %497) /* ty=Tensor[(2, 3, 12), bool] */;
  %502 = %500.0;
  (%501, %502, meta[relay.Constant][42] /* ty=Tensor[(704), float64] */)
}

def @func_4750(%var_4730: Tensor[(2, 3, 12), float64]) -> (Tensor[(2, 3, 12), float32],) {
  %503 = @func_4205() /* ty=(Tensor[(2, 3, 12), float64],) */;
  %504 = %503.0;
  %505 = cast(%var_4730, dtype="float32") /* ty=Tensor[(2, 3, 12), float32] */;
  %506 = shape_of(%504, dtype="int32") /* ty=Tensor[(3), int32] */;
  %507 = cast(%504, dtype="float32") /* ty=Tensor[(2, 3, 12), float32] */;
  %508 = dyn.reshape(%505, %506, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %509 = power(%507, %508) /* ty=Tensor[(2, 3, 12), float32] */;
  (%509,)
}

def @func_4848(%var_4840: Tensor[(26, 3), float64]) -> (Tensor[(2, 3, 12), float64], Tensor[(3, 16, 4), int64], Tensor[(4, 176), float64], Tensor[(2, 13, 3), float64], Tensor[(26, 3), float64], Tensor[(1152), float32]) {
  %510 = @func_4781() /* ty=(Tensor[(2, 3, 12), float64],) */;
  %511 = %510.0;
  %512 = cast(%511, dtype="uint64") /* ty=Tensor[(2, 3, 12), uint64] */;
  %513 = cast(meta[relay.Constant][43] /* ty=Tensor[(1152), uint64] */, dtype="uint64") /* ty=Tensor[(1152), uint64] */;
  %514 = cast(meta[relay.Constant][44] /* ty=Tensor[(4, 176), float64] */, dtype="float64") /* ty=Tensor[(4, 176), float64] */;
  %515 = reshape(%512, newshape=[18, 4]) /* ty=Tensor[(18, 4), uint64] */;
  %516 = reshape(%513, newshape=[1152]) /* ty=Tensor[(1152), uint64] */;
  %517 = reshape(%514, newshape=[704]) /* ty=Tensor[(704), float64] */;
  %518 = @func_1109(%515, %516, %517) /* ty=(Tensor[(9, 2, 12), float32], Tensor[(704), float64], Tensor[(18, 4), uint64], Tensor[(1152), uint64], Tensor[(704), float64], Tensor[(3, 16, 4), int64], int64) */;
  %519 = cast(%var_4840, dtype="float64") /* ty=Tensor[(26, 3), float64] */;
  %520 = reshape(%519, newshape=[2, 13, 3]) /* ty=Tensor[(2, 13, 3), float64] */;
  %521 = @func_891(%520) /* ty=(Tensor[(2, 13, 3), float64],) */;
  %522 = cast(meta[relay.Constant][43] /* ty=Tensor[(1152), uint64] */, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %523 = sigmoid(%522) /* ty=Tensor[(1152), float32] */;
  %524 = cast(meta[relay.Constant][43] /* ty=Tensor[(1152), uint64] */, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %525 = shape_of(%523, dtype="int32") /* ty=Tensor[(1), int32] */;
  %526 = cast(%523, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %527 = dyn.reshape(%524, %525, newshape=[]) /* ty=Tensor[(?), float32] */;
  %528 = %518.5;
  %529 = %521.0;
  %530 = floor_divide(%526, %527) /* ty=Tensor[(1152), float32] */;
  (%511, %528, meta[relay.Constant][44] /* ty=Tensor[(4, 176), float64] */, %529, %var_4840, %530)
}

def @func_5601() -> (Tensor[(2, 3, 12), float64], Tensor[(14, 7, 15), float64], Tensor[(2, 3, 12), float64], Tensor[(1470), float64]) {
  %531 = cast(meta[relay.Constant][45] /* ty=Tensor[(1470), float64] */, dtype="float64") /* ty=Tensor[(1470), float64] */;
  %532 = reshape(%531, newshape=[14, 7, 15]) /* ty=Tensor[(14, 7, 15), float64] */;
  %533 = @func_2891(%532) /* ty=(Tensor[(14, 7, 15), float64], Tensor[(14, 7, 15), float64]) */;
  %534 = cast(meta[relay.Constant][45] /* ty=Tensor[(1470), float64] */, dtype="float64") /* ty=Tensor[(1470), float64] */;
  %535 = @func_4414() /* ty=Tensor[(2, 3, 12), float64] */;
  %536 = %533.1;
  %537 = @func_4861() /* ty=Tensor[(2, 3, 12), float64] */;
  %538 = rsqrt(%534) /* ty=Tensor[(1470), float64] */;
  (%535, %536, %537, %538)
}

def @func_5673(%var_5644: Tensor[(704), float64]) -> (Tensor[(2, 3, 12), float64], Tensor[(1, 1152), uint64], Tensor[(704), float64], Tensor[(18, 4), int8]) {
  %539 = @func_4539() /* ty=(Tensor[(2, 3, 12), float64],) */;
  %540 = %539.0;
  %541 = cast(%540, dtype="uint64") /* ty=Tensor[(2, 3, 12), uint64] */;
  %542 = cast(meta[relay.Constant][46] /* ty=Tensor[(1, 1152), uint64] */, dtype="uint64") /* ty=Tensor[(1, 1152), uint64] */;
  %543 = cast(%var_5644, dtype="float64") /* ty=Tensor[(704), float64] */;
  %544 = reshape(%541, newshape=[18, 4]) /* ty=Tensor[(18, 4), uint64] */;
  %545 = reshape(%542, newshape=[1152]) /* ty=Tensor[(1152), uint64] */;
  %546 = reshape(%543, newshape=[704]) /* ty=Tensor[(704), float64] */;
  %547 = @func_1109(%544, %545, %546) /* ty=(Tensor[(9, 2, 12), float32], Tensor[(704), float64], Tensor[(18, 4), uint64], Tensor[(1152), uint64], Tensor[(704), float64], Tensor[(3, 16, 4), int64], int64) */;
  %548 = %547.2;
  %549 = cast(%548, dtype="float32") /* ty=Tensor[(18, 4), float32] */;
  %550 = erf(%549) /* ty=Tensor[(18, 4), float32] */;
  %551 = cast(%548, dtype="int8") /* ty=Tensor[(18, 4), int8] */;
  %552 = shape_of(%550, dtype="int32") /* ty=Tensor[(2), int32] */;
  %553 = cast(%550, dtype="int8") /* ty=Tensor[(18, 4), int8] */;
  %554 = dyn.reshape(%551, %552, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %555 = left_shift(%553, %554) /* ty=Tensor[(18, 4), int8] */;
  (%540, meta[relay.Constant][46] /* ty=Tensor[(1, 1152), uint64] */, %var_5644, %555)
}

def @func_8251() -> Tensor[(2, 3, 12), float64] {
  %556 = @func_6734() /* ty=(Tensor[(2, 3, 12), float64],) */;
  %556.0
}

def @func_434(%var_349: float32, %var_350: Tensor[(15, 2, 8), float32], %var_369: Tensor[(16, 11, 4), float64], %var_399: Tensor[(72), uint64]) -> (Tensor[(16, 11, 4), float64], Tensor[(72), uint64], Tensor[(1152), uint64], Tensor[(704), float64], Tensor[(15, 2, 8), int16], Tensor[(352, 2), uint32]) {
  %557 = cast(%var_399, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %558 = cast(meta[relay.Constant][47] /* ty=Tensor[(1152), uint64] */, dtype="uint64") /* ty=Tensor[(1152), uint64] */;
  %559 = cast(meta[relay.Constant][48] /* ty=Tensor[(352, 2), float64] */, dtype="float64") /* ty=Tensor[(352, 2), float64] */;
  %560 = reshape(%559, newshape=[16, 11, 4]) /* ty=Tensor[(16, 11, 4), float64] */;
  %561 = @func_76(%560) /* ty=(Tensor[(16, 11, 4), float64],) */;
  %562 = %561.0;
  %563 = cast(%562, dtype="float64") /* ty=Tensor[(16, 11, 4), float64] */;
  %564 = shape_of(meta[relay.Constant][48] /* ty=Tensor[(352, 2), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %565 = cast(meta[relay.Constant][48] /* ty=Tensor[(352, 2), float64] */, dtype="float64") /* ty=Tensor[(352, 2), float64] */;
  %566 = dyn.reshape(%563, %564, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %567 = divide(%565, %566) /* ty=Tensor[(352, 2), float64] */;
  %568 = cast(%567, dtype="float64") /* ty=Tensor[(352, 2), float64] */;
  %569 = reshape(%557, newshape=[8, 9, 1]) /* ty=Tensor[(8, 9, 1), uint64] */;
  %570 = reshape(%558, newshape=[8, 9, 16]) /* ty=Tensor[(8, 9, 16), uint64] */;
  %571 = reshape(%568, newshape=[704]) /* ty=Tensor[(704), float64] */;
  %572 = @func_289(%569, %570, %571) /* ty=(Tensor[(8, 9, 16), uint64], Tensor[(16, 11, 4), float64], Tensor[(704), float64], Tensor[(16, 11, 4), float64]) */;
  %573 = cast(%var_399, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %574 = cast(meta[relay.Constant][47] /* ty=Tensor[(1152), uint64] */, dtype="uint64") /* ty=Tensor[(1152), uint64] */;
  %575 = cast(%567, dtype="float64") /* ty=Tensor[(352, 2), float64] */;
  %576 = reshape(%573, newshape=[8, 9, 1]) /* ty=Tensor[(8, 9, 1), uint64] */;
  %577 = reshape(%574, newshape=[8, 9, 16]) /* ty=Tensor[(8, 9, 16), uint64] */;
  %578 = reshape(%575, newshape=[704]) /* ty=Tensor[(704), float64] */;
  %579 = @func_289(%576, %577, %578) /* ty=(Tensor[(8, 9, 16), uint64], Tensor[(16, 11, 4), float64], Tensor[(704), float64], Tensor[(16, 11, 4), float64]) */;
  %580 = cast(%var_350, dtype="bool") /* ty=Tensor[(15, 2, 8), bool] */;
  %581 = cast(%var_349, dtype="bool") /* ty=bool */;
  %582 = logical_or(%580, %581) /* ty=Tensor[(15, 2, 8), bool] */;
  %583 = cast(%var_349, dtype="bool") /* ty=bool */;
  %584 = cast(%var_350, dtype="bool") /* ty=Tensor[(15, 2, 8), bool] */;
  %585 = greater(%583, %584) /* ty=Tensor[(15, 2, 8), bool] */;
  %586 = cast(%585, dtype="int16") /* ty=Tensor[(15, 2, 8), int16] */;
  %587 = shape_of(%582, dtype="int32") /* ty=Tensor[(3), int32] */;
  %588 = cast(%582, dtype="int16") /* ty=Tensor[(15, 2, 8), int16] */;
  %589 = dyn.reshape(%586, %587, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %590 = cast(%567, dtype="float32") /* ty=Tensor[(352, 2), float32] */;
  %591 = asinh(%590) /* ty=Tensor[(352, 2), float32] */;
  %592 = cast(%var_369, dtype="int64") /* ty=Tensor[(16, 11, 4), int64] */;
  %593 = shape_of(%562, dtype="int32") /* ty=Tensor[(3), int32] */;
  %594 = cast(%562, dtype="int64") /* ty=Tensor[(16, 11, 4), int64] */;
  %595 = dyn.reshape(%592, %593, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %596 = bitwise_and(%594, %595) /* ty=Tensor[(16, 11, 4), int64] */;
  %597 = cast(%596, dtype="uint32") /* ty=Tensor[(16, 11, 4), uint32] */;
  %598 = shape_of(%591, dtype="int32") /* ty=Tensor[(2), int32] */;
  %599 = cast(%591, dtype="uint32") /* ty=Tensor[(352, 2), uint32] */;
  %600 = dyn.reshape(%597, %598, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %601 = %572.3;
  %602 = %579.2;
  %603 = subtract(%588, %589) /* ty=Tensor[(15, 2, 8), int16] */;
  %604 = minimum(%599, %600) /* ty=Tensor[(352, 2), uint32] */;
  (%601, %var_399, meta[relay.Constant][47] /* ty=Tensor[(1152), uint64] */, %602, %603, %604)
}

def @func_5094() -> (Tensor[(2, 3, 12), float64], Tensor[(3, 16, 4), int64], int64, Tensor[(14, 9, 3), float64], Tensor[(378), float64], Tensor[(2, 3, 12), float64], Tensor[(5, 3, 15), float64], Tensor[(225), float64]) {
  %605 = @func_4539() /* ty=(Tensor[(2, 3, 12), float64],) */;
  %606 = cast(2 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %607 = reshape(%606, newshape=[]) /* ty=int64 */;
  %608 = @func_841(%607) /* ty=(Tensor[(3, 16, 4), int64],) */;
  %609 = cast(meta[relay.Constant][49] /* ty=Tensor[(378), float64] */, dtype="float64") /* ty=Tensor[(378), float64] */;
  %610 = cast(meta[relay.Constant][49] /* ty=Tensor[(378), float64] */, dtype="float64") /* ty=Tensor[(378), float64] */;
  %611 = reshape(%609, newshape=[14, 9, 3]) /* ty=Tensor[(14, 9, 3), float64] */;
  %612 = reshape(%610, newshape=[14, 9, 3]) /* ty=Tensor[(14, 9, 3), float64] */;
  %613 = @func_733(%611, %612) /* ty=(Tensor[(14, 9, 3), float64],) */;
  %614 = cast(meta[relay.Constant][50] /* ty=Tensor[(225), float64] */, dtype="float64") /* ty=Tensor[(225), float64] */;
  %615 = reshape(%614, newshape=[5, 3, 15]) /* ty=Tensor[(5, 3, 15), float64] */;
  %616 = %605.0;
  %617 = %608.0;
  %618 = %613.0;
  %619 = @func_4414() /* ty=Tensor[(2, 3, 12), float64] */;
  %620 = @func_1384(%615) /* ty=Tensor[(5, 3, 15), float64] */;
  (%616, %617, 2 /* ty=int64 */, %618, meta[relay.Constant][49] /* ty=Tensor[(378), float64] */, %619, %620, meta[relay.Constant][50] /* ty=Tensor[(225), float64] */)
}

def @func_5220() -> (Tensor[(2, 3, 12), float64], Tensor[(2, 3, 12), float64]) {
  %621 = @func_4205() /* ty=(Tensor[(2, 3, 12), float64],) */;
  %622 = @func_4205() /* ty=(Tensor[(2, 3, 12), float64],) */;
  %623 = %621.0;
  %624 = %622.0;
  (%623, %624)
}

def @func_6902() -> Tensor[(2, 3, 12), float64] {
  @func_4414() /* ty=Tensor[(2, 3, 12), float64] */
}

def @func_8156(%var_8137: Tensor[(10, 8, 16), uint8]) -> (Tensor[(10, 8, 16), bool],) {
  %625 = cast(meta[relay.Constant][51] /* ty=Tensor[(1, 8, 16), uint8] */, dtype="bool") /* ty=Tensor[(1, 8, 16), bool] */;
  %626 = cast(%var_8137, dtype="bool") /* ty=Tensor[(10, 8, 16), bool] */;
  %627 = greater_equal(%625, %626) /* ty=Tensor[(10, 8, 16), bool] */;
  (%627,)
}

def @func_1623(%var_1584: Tensor[(11, 8, 11), int64], %var_1585: Tensor[(11, 8, 11), int64], %var_1600: Tensor[(64), float64]) -> (Tensor[(11, 8, 11), int64], Tensor[(2, 16, 2), bool], Tensor[(64), float64]) {
  %628 = cast(%var_1585, dtype="int64") /* ty=Tensor[(11, 8, 11), int64] */;
  %629 = shape_of(%var_1584, dtype="int32") /* ty=Tensor[(3), int32] */;
  %630 = cast(%var_1584, dtype="int64") /* ty=Tensor[(11, 8, 11), int64] */;
  %631 = dyn.reshape(%628, %629, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %632 = cast(%var_1600, dtype="float64") /* ty=Tensor[(64), float64] */;
  %633 = reshape(%632, newshape=[2, 16, 2]) /* ty=Tensor[(2, 16, 2), float64] */;
  %634 = @func_661(%633) /* ty=(Tensor[(2, 16, 2), bool],) */;
  %635 = add(%630, %631) /* ty=Tensor[(11, 8, 11), int64] */;
  %636 = %634.0;
  (%635, %636, %var_1600)
}

def @func_7595() -> (Tensor[(2, 3, 12), float64], Tensor[(2, 3, 12), float64], Tensor[(2, 3, 12), float64], Tensor[(2, 3, 12), bool], Tensor[(2, 3, 12), float64], Tensor[(2520), float64]) {
  %637 = @func_5601() /* ty=(Tensor[(2, 3, 12), float64], Tensor[(14, 7, 15), float64], Tensor[(2, 3, 12), float64], Tensor[(1470), float64]) */;
  %638 = @func_5498() /* ty=(Tensor[(2, 3, 12), float64],) */;
  %639 = @func_6879() /* ty=(Tensor[(2, 3, 12), float64], Tensor[(2, 3, 12), float64], Tensor[(2, 3, 12), float64]) */;
  %640 = %639.1;
  %641 = @func_6637() /* ty=Tensor[(2, 3, 12), float64] */;
  %642 = cast(%641, dtype="bool") /* ty=Tensor[(2, 3, 12), bool] */;
  %643 = shape_of(%640, dtype="int32") /* ty=Tensor[(3), int32] */;
  %644 = cast(%640, dtype="bool") /* ty=Tensor[(2, 3, 12), bool] */;
  %645 = dyn.reshape(%642, %643, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %646 = @func_6879() /* ty=(Tensor[(2, 3, 12), float64], Tensor[(2, 3, 12), float64], Tensor[(2, 3, 12), float64]) */;
  %647 = @func_7017() /* ty=(Tensor[(11, 6, 12), float32], Tensor[(15, 14, 12), float64], Tensor[(2520), float64], Tensor[(26, 3), float64], Tensor[(78, 1), float64]) */;
  %648 = %637.2;
  %649 = @func_7076() /* ty=Tensor[(2, 3, 12), float64] */;
  %650 = %638.0;
  %651 = not_equal(%644, %645) /* ty=Tensor[(2, 3, 12), bool] */;
  %652 = %646.2;
  %653 = %647.2;
  (%648, %649, %650, %651, %652, %653)
}

def @func_5480(%var_5427: float64, %var_5432: Tensor[(520, 9), float64], %var_5442: Tensor[(240), float32], %var_5443: Tensor[(704), float64]) -> (Tensor[(2, 3, 12), float64], Tensor[(2, 16, 2), bool], Tensor[(64), float64], float64, Tensor[(520, 9), bool], Tensor[(15, 2, 8), int16], Tensor[(240), float32], Tensor[(704), float64], Tensor[(520, 9), float64], Tensor[(16, 6, 6), uint8], Tensor[(1, 576), uint8], Tensor[(4, 13, 10), float64], Tensor[(2, 3, 12), float64]) {
  %654 = cast(meta[relay.Constant][52] /* ty=Tensor[(64), float64] */, dtype="float64") /* ty=Tensor[(64), float64] */;
  %655 = reshape(%654, newshape=[2, 16, 2]) /* ty=Tensor[(2, 16, 2), float64] */;
  %656 = @func_661(%655) /* ty=(Tensor[(2, 16, 2), bool],) */;
  %657 = cast(meta[relay.Constant][53] /* ty=Tensor[(520, 1), float64] */, dtype="bool") /* ty=Tensor[(520, 1), bool] */;
  %658 = cast(%var_5432, dtype="bool") /* ty=Tensor[(520, 9), bool] */;
  %659 = cast(%var_5427, dtype="float32") /* ty=float32 */;
  %660 = cast(%var_5442, dtype="float32") /* ty=Tensor[(240), float32] */;
  %661 = cast(%var_5443, dtype="float64") /* ty=Tensor[(704), float64] */;
  %662 = @func_5385() /* ty=Tensor[(2, 3, 12), float64] */;
  %663 = cast(%662, dtype="uint64") /* ty=Tensor[(2, 3, 12), uint64] */;
  %664 = reshape(%659, newshape=[]) /* ty=float32 */;
  %665 = reshape(%660, newshape=[15, 2, 8]) /* ty=Tensor[(15, 2, 8), float32] */;
  %666 = reshape(%661, newshape=[16, 11, 4]) /* ty=Tensor[(16, 11, 4), float64] */;
  %667 = reshape(%663, newshape=[72]) /* ty=Tensor[(72), uint64] */;
  %668 = @func_434(%664, %665, %666, %667) /* ty=(Tensor[(16, 11, 4), float64], Tensor[(72), uint64], Tensor[(1152), uint64], Tensor[(704), float64], Tensor[(15, 2, 8), int16], Tensor[(352, 2), uint32]) */;
  %669 = cast(%var_5432, dtype="float64") /* ty=Tensor[(520, 9), float64] */;
  %670 = cast(meta[relay.Constant][54] /* ty=Tensor[(1, 576), uint8] */, dtype="uint8") /* ty=Tensor[(1, 576), uint8] */;
  %671 = reshape(%670, newshape=[16, 6, 6]) /* ty=Tensor[(16, 6, 6), uint8] */;
  %672 = cast(%var_5427, dtype="float64") /* ty=float64 */;
  %673 = cast(meta[relay.Constant][53] /* ty=Tensor[(520, 1), float64] */, dtype="float64") /* ty=Tensor[(520, 1), float64] */;
  %674 = reshape(%672, newshape=[]) /* ty=float64 */;
  %675 = reshape(%673, newshape=[4, 13, 10]) /* ty=Tensor[(4, 13, 10), float64] */;
  %676 = @func_3967(%674, %675) /* ty=(Tensor[(4, 13, 10), float64], Tensor[(4, 13, 10), float64]) */;
  %677 = %676.1;
  %678 = cast(%677, dtype="float64") /* ty=Tensor[(4, 13, 10), float64] */;
  %679 = %656.0;
  %680 = less_equal(%657, %658) /* ty=Tensor[(520, 9), bool] */;
  %681 = %668.4;
  %682 = sin(%669) /* ty=Tensor[(520, 9), float64] */;
  %683 = @func_2199(%671) /* ty=Tensor[(16, 6, 6), uint8] */;
  %684 = log10(%678) /* ty=Tensor[(4, 13, 10), float64] */;
  %685 = @func_4414() /* ty=Tensor[(2, 3, 12), float64] */;
  (%662, %679, meta[relay.Constant][52] /* ty=Tensor[(64), float64] */, %var_5427, %680, %681, %var_5442, %var_5443, %682, %683, meta[relay.Constant][54] /* ty=Tensor[(1, 576), uint8] */, %684, %685)
}

def @func_7065() -> Tensor[(11, 6, 12), float64] {
  %686 = @func_7017() /* ty=(Tensor[(11, 6, 12), float32], Tensor[(15, 14, 12), float64], Tensor[(2520), float64], Tensor[(26, 3), float64], Tensor[(78, 1), float64]) */;
  %687 = %686.0;
  %688 = cast(%687, dtype="float64") /* ty=Tensor[(11, 6, 12), float64] */;
  rsqrt(%688) /* ty=Tensor[(11, 6, 12), float64] */
}

def @func_7246(%var_7157: float64, %var_7160: Tensor[(242, 4), int64], %var_7200: Tensor[(2, 3, 12), float32], %var_7220: Tensor[(704), float64]) -> (Tensor[(78), float64], Tensor[(1470), float64], Tensor[(36, 14), float64], Tensor[(1470), float64], Tensor[(242, 4), int64], Tensor[(156), float64], Tensor[(42, 9), float64], Tensor[(2, 3, 12), bool], Tensor[(2, 13, 3), float64], Tensor[(378), float64], Tensor[(240), float32], Tensor[(704), float64], Tensor[(2, 3, 12), bool], Tensor[(1344), float32], Tensor[(3, 16, 4), int64]) {
  %689 = cast(%var_7157, dtype="float64") /* ty=float64 */;
  %690 = cast(meta[relay.Constant][56] /* ty=Tensor[(36, 14), float64] */, dtype="float64") /* ty=Tensor[(36, 14), float64] */;
  %691 = cast(meta[relay.Constant][57] /* ty=Tensor[(1470), float64] */, dtype="float64") /* ty=Tensor[(1470), float64] */;
  %692 = cast(%var_7160, dtype="int64") /* ty=Tensor[(242, 4), int64] */;
  %693 = cast(meta[relay.Constant][56] /* ty=Tensor[(36, 14), float64] */, dtype="float64") /* ty=Tensor[(36, 14), float64] */;
  %694 = cast(meta[relay.Constant][58] /* ty=Tensor[(156), float64] */, dtype="float64") /* ty=Tensor[(156), float64] */;
  %695 = cast(meta[relay.Constant][59] /* ty=Tensor[(42, 9), float64] */, dtype="float64") /* ty=Tensor[(42, 9), float64] */;
  %696 = reshape(%689, newshape=[]) /* ty=float64 */;
  %697 = reshape(%690, newshape=[7, 6, 12]) /* ty=Tensor[(7, 6, 12), float64] */;
  %698 = reshape(%691, newshape=[1470]) /* ty=Tensor[(1470), float64] */;
  %699 = reshape(%692, newshape=[968]) /* ty=Tensor[(968), int64] */;
  %700 = reshape(%693, newshape=[7, 6, 12]) /* ty=Tensor[(7, 6, 12), float64] */;
  %701 = reshape(%694, newshape=[156]) /* ty=Tensor[(156), float64] */;
  %702 = reshape(%695, newshape=[42, 9]) /* ty=Tensor[(42, 9), float64] */;
  %703 = @func_2998(%696, %697, %698, %699, %700, %701, %702) /* ty=(Tensor[(7, 6, 12), float64], Tensor[(14, 7, 15), float64], Tensor[(1470), float64], Tensor[(64), float64], Tensor[(968), int64], Tensor[(64), float64], Tensor[(16, 6, 6), uint8], Tensor[(576), uint8], Tensor[(1, 378), float64], Tensor[(156), float64], Tensor[(42, 9), float64], Tensor[(7, 6, 12), float64]) */;
  %704 = @func_6902() /* ty=Tensor[(2, 3, 12), float64] */;
  %705 = cast(%704, dtype="float32") /* ty=Tensor[(2, 3, 12), float32] */;
  %706 = cosh(%705) /* ty=Tensor[(2, 3, 12), float32] */;
  %707 = cast(%var_7200, dtype="bool") /* ty=Tensor[(2, 3, 12), bool] */;
  %708 = shape_of(%706, dtype="int32") /* ty=Tensor[(3), int32] */;
  %709 = cast(%706, dtype="bool") /* ty=Tensor[(2, 3, 12), bool] */;
  %710 = dyn.reshape(%707, %708, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %711 = cast(meta[relay.Constant][55] /* ty=Tensor[(78), float64] */, dtype="float64") /* ty=Tensor[(78), float64] */;
  %712 = reshape(%711, newshape=[2, 13, 3]) /* ty=Tensor[(2, 13, 3), float64] */;
  %713 = @func_891(%712) /* ty=(Tensor[(2, 13, 3), float64],) */;
  %714 = %713.0;
  %715 = cast(%714, dtype="float64") /* ty=Tensor[(2, 13, 3), float64] */;
  %716 = cast(%var_7157, dtype="float64") /* ty=float64 */;
  %717 = cast(meta[relay.Constant][56] /* ty=Tensor[(36, 14), float64] */, dtype="float64") /* ty=Tensor[(36, 14), float64] */;
  %718 = cast(meta[relay.Constant][60] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
  %719 = cast(%var_7220, dtype="float64") /* ty=Tensor[(704), float64] */;
  %720 = reshape(%717, newshape=[504]) /* ty=Tensor[(504), float64] */;
  %721 = reshape(%718, newshape=[240]) /* ty=Tensor[(240), float32] */;
  %722 = reshape(%719, newshape=[704]) /* ty=Tensor[(704), float64] */;
  %723 = @func_6322(%720, %721, %722) /* ty=(Tensor[(2, 3, 12), float64], Tensor[(156), float64], float64, Tensor[(504), float64], Tensor[(1, 1470), float64], Tensor[(968, 1), int64], Tensor[(156), float64], Tensor[(378), float64], Tensor[(704), float64], Tensor[(240), float32], Tensor[(704), float64]) */;
  %724 = cast(%704, dtype="float32") /* ty=Tensor[(2, 3, 12), float32] */;
  %725 = sqrt(%724) /* ty=Tensor[(2, 3, 12), float32] */;
  %726 = cast(%704, dtype="bool") /* ty=Tensor[(2, 3, 12), bool] */;
  %727 = shape_of(%725, dtype="int32") /* ty=Tensor[(3), int32] */;
  %728 = cast(%725, dtype="bool") /* ty=Tensor[(2, 3, 12), bool] */;
  %729 = dyn.reshape(%726, %727, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %730 = cast(%706, dtype="float64") /* ty=Tensor[(2, 3, 12), float64] */;
  %731 = reshape(%730, newshape=[2, 3, 12]) /* ty=Tensor[(2, 3, 12), float64] */;
  %732 = @func_4246(%731) /* ty=(Tensor[(16, 12, 7), float32], Tensor[(1344), float32], Tensor[(2, 3, 12), bool]) */;
  %733 = cast(%var_7157, dtype="int64") /* ty=int64 */;
  %734 = reshape(%733, newshape=[]) /* ty=int64 */;
  %735 = @func_841(%734) /* ty=(Tensor[(3, 16, 4), int64],) */;
  %736 = %703.2;
  %737 = logical_or(%709, %710) /* ty=Tensor[(2, 3, 12), bool] */;
  %738 = mod(%715, %716) /* ty=Tensor[(2, 13, 3), float64] */;
  %739 = %723.7;
  %740 = less_equal(%728, %729) /* ty=Tensor[(2, 3, 12), bool] */;
  %741 = %732.1;
  %742 = %735.0;
  (meta[relay.Constant][55] /* ty=Tensor[(78), float64] */, %736, meta[relay.Constant][56] /* ty=Tensor[(36, 14), float64] */, meta[relay.Constant][57] /* ty=Tensor[(1470), float64] */, %var_7160, meta[relay.Constant][58] /* ty=Tensor[(156), float64] */, meta[relay.Constant][59] /* ty=Tensor[(42, 9), float64] */, %737, %738, %739, meta[relay.Constant][60] /* ty=Tensor[(240), float32] */, %var_7220, %740, %741, %742)
}

def @func_5498() -> (Tensor[(2, 3, 12), float64],) {
  %743 = @func_4861() /* ty=Tensor[(2, 3, 12), float64] */;
  (%743,)
}

def @func_4861() -> Tensor[(2, 3, 12), float64] {
  %744 = @func_4781() /* ty=(Tensor[(2, 3, 12), float64],) */;
  %744.0
}

def @func_6483(%var_6477: Tensor[(378), float64]) -> (Tensor[(2, 3, 12), float64], Tensor[(2, 16, 2), bool], Tensor[(968), int64], Tensor[(32, 2), float64], Tensor[(6, 2, 13), float64], Tensor[(156), float64], Tensor[(378), float64], Tensor[(2, 3, 12), float64]) {
  %745 = @func_5498() /* ty=(Tensor[(2, 3, 12), float64],) */;
  %746 = cast(meta[relay.Constant][61] /* ty=Tensor[(968), int64] */, dtype="int64") /* ty=Tensor[(968), int64] */;
  %747 = cast(meta[relay.Constant][61] /* ty=Tensor[(968), int64] */, dtype="int64") /* ty=Tensor[(968), int64] */;
  %748 = cast(meta[relay.Constant][62] /* ty=Tensor[(32, 2), float64] */, dtype="float64") /* ty=Tensor[(32, 2), float64] */;
  %749 = reshape(%746, newshape=[11, 8, 11]) /* ty=Tensor[(11, 8, 11), int64] */;
  %750 = reshape(%747, newshape=[11, 8, 11]) /* ty=Tensor[(11, 8, 11), int64] */;
  %751 = reshape(%748, newshape=[64]) /* ty=Tensor[(64), float64] */;
  %752 = @func_1623(%749, %750, %751) /* ty=(Tensor[(11, 8, 11), int64], Tensor[(2, 16, 2), bool], Tensor[(64), float64]) */;
  %753 = cast(meta[relay.Constant][63] /* ty=Tensor[(156), float64] */, dtype="float64") /* ty=Tensor[(156), float64] */;
  %754 = cast(%var_6477, dtype="float64") /* ty=Tensor[(378), float64] */;
  %755 = reshape(%753, newshape=[6, 2, 13]) /* ty=Tensor[(6, 2, 13), float64] */;
  %756 = reshape(%754, newshape=[1, 378]) /* ty=Tensor[(1, 378), float64] */;
  %757 = @func_2113(%755, %756) /* ty=(Tensor[(6, 2, 13), float64], Tensor[(14, 9, 3), float64], Tensor[(1, 378), float64]) */;
  %758 = %745.0;
  %759 = %752.1;
  %760 = %757.0;
  %761 = @func_4414() /* ty=Tensor[(2, 3, 12), float64] */;
  (%758, %759, meta[relay.Constant][61] /* ty=Tensor[(968), int64] */, meta[relay.Constant][62] /* ty=Tensor[(32, 2), float64] */, %760, meta[relay.Constant][63] /* ty=Tensor[(156), float64] */, %var_6477, %761)
}

def @func_6879() -> (Tensor[(2, 3, 12), float64], Tensor[(2, 3, 12), float64], Tensor[(2, 3, 12), float64]) {
  %762 = @func_4919() /* ty=(Tensor[(2, 3, 12), float64],) */;
  %763 = %762.0;
  %764 = cast(%763, dtype="float64") /* ty=Tensor[(2, 3, 12), float64] */;
  %765 = cast(%763, dtype="float64") /* ty=Tensor[(2, 3, 12), float64] */;
  %766 = sigmoid(%764) /* ty=Tensor[(2, 3, 12), float64] */;
  %767 = @func_6183() /* ty=Tensor[(2, 3, 12), float64] */;
  %768 = sinh(%765) /* ty=Tensor[(2, 3, 12), float64] */;
  (%766, %767, %768)
}

def @func_7110() -> Tensor[(2, 3, 12), float64] {
  %769 = @func_4205() /* ty=(Tensor[(2, 3, 12), float64],) */;
  %769.0
}

def @func_7334(%var_7304: Tensor[(6, 10, 2), float64], %var_7322: Tensor[(504), float64], %var_7324: Tensor[(968), int64], %var_7325: Tensor[(156), float64]) -> (Tensor[(6, 10, 2), float64], Tensor[(2, 3, 12), float64], Tensor[(16, 6, 6), uint8], float64, Tensor[(504), float64], Tensor[(1470), float64], Tensor[(968), int64], Tensor[(156), float64], Tensor[(378), float64]) {
  %770 = cast(%var_7304, dtype="float64") /* ty=Tensor[(6, 10, 2), float64] */;
  %771 = cast(4.79796f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %772 = cast(%var_7322, dtype="float64") /* ty=Tensor[(504), float64] */;
  %773 = cast(meta[relay.Constant][64] /* ty=Tensor[(1470), float64] */, dtype="float64") /* ty=Tensor[(1470), float64] */;
  %774 = cast(%var_7324, dtype="int64") /* ty=Tensor[(968), int64] */;
  %775 = cast(%var_7322, dtype="float64") /* ty=Tensor[(504), float64] */;
  %776 = cast(%var_7325, dtype="float64") /* ty=Tensor[(156), float64] */;
  %777 = cast(meta[relay.Constant][65] /* ty=Tensor[(378), float64] */, dtype="float64") /* ty=Tensor[(378), float64] */;
  %778 = reshape(%771, newshape=[]) /* ty=float64 */;
  %779 = reshape(%772, newshape=[7, 6, 12]) /* ty=Tensor[(7, 6, 12), float64] */;
  %780 = reshape(%773, newshape=[1470]) /* ty=Tensor[(1470), float64] */;
  %781 = reshape(%774, newshape=[968]) /* ty=Tensor[(968), int64] */;
  %782 = reshape(%775, newshape=[7, 6, 12]) /* ty=Tensor[(7, 6, 12), float64] */;
  %783 = reshape(%776, newshape=[156]) /* ty=Tensor[(156), float64] */;
  %784 = reshape(%777, newshape=[42, 9]) /* ty=Tensor[(42, 9), float64] */;
  %785 = @func_2998(%778, %779, %780, %781, %782, %783, %784) /* ty=(Tensor[(7, 6, 12), float64], Tensor[(14, 7, 15), float64], Tensor[(1470), float64], Tensor[(64), float64], Tensor[(968), int64], Tensor[(64), float64], Tensor[(16, 6, 6), uint8], Tensor[(576), uint8], Tensor[(1, 378), float64], Tensor[(156), float64], Tensor[(42, 9), float64], Tensor[(7, 6, 12), float64]) */;
  %786 = sinh(%770) /* ty=Tensor[(6, 10, 2), float64] */;
  %787 = @func_4861() /* ty=Tensor[(2, 3, 12), float64] */;
  %788 = %785.6;
  (%786, %787, %788, 4.79796f64 /* ty=float64 */, %var_7322, meta[relay.Constant][64] /* ty=Tensor[(1470), float64] */, %var_7324, %var_7325, meta[relay.Constant][65] /* ty=Tensor[(378), float64] */)
}

def @func_6961() -> (Tensor[(2, 3, 12), float64],) {
  %789 = @func_5220() /* ty=(Tensor[(2, 3, 12), float64], Tensor[(2, 3, 12), float64]) */;
  %790 = %789.1;
  (%790,)
}

def @func_5321(%var_5315: Tensor[(2, 3, 12), float64]) -> (Tensor[(2, 3, 12), bool],) {
  %791 = @func_4414() /* ty=Tensor[(2, 3, 12), float64] */;
  %792 = cast(%var_5315, dtype="bool") /* ty=Tensor[(2, 3, 12), bool] */;
  %793 = shape_of(%791, dtype="int32") /* ty=Tensor[(3), int32] */;
  %794 = cast(%791, dtype="bool") /* ty=Tensor[(2, 3, 12), bool] */;
  %795 = dyn.reshape(%792, %793, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %796 = greater(%794, %795) /* ty=Tensor[(2, 3, 12), bool] */;
  (%796,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_7112() -> Tensor[(2, 3, 12), float64] {
  @func_7110() /* ty=Tensor[(2, 3, 12), float64] */
}

def @func_5221() -> (Tensor[(2, 3, 12), float64], Tensor[(2, 3, 12), float64]) {
  %4 = fn () -> (Tensor[(2, 3, 12), float64], Tensor[(2, 3, 12), float64]) {
    %0 = @func_4205() /* ty=(Tensor[(2, 3, 12), float64],) */;
    %1 = @func_4205() /* ty=(Tensor[(2, 3, 12), float64],) */;
    %2 = %0.0;
    %3 = %1.0;
    (%2, %3)
  };
  %4() /* ty=(Tensor[(2, 3, 12), float64], Tensor[(2, 3, 12), float64]) */
}

def @func_6734() -> (Tensor[(2, 3, 12), float64],) {
  %5 = @func_5220() /* ty=(Tensor[(2, 3, 12), float64], Tensor[(2, 3, 12), float64]) */;
  %6 = %5.0;
  (%6,)
}

def @func_6793() -> Tensor[(2, 3, 12), float64] {
  %7 = @func_6637() /* ty=Tensor[(2, 3, 12), float64] */;
  %8 = cast(%7, dtype="float64") /* ty=Tensor[(2, 3, 12), float64] */;
  atan(%8) /* ty=Tensor[(2, 3, 12), float64] */
}

def @func_3006(%var_2999: float64, %var_3000: Tensor[(7, 6, 12), float64], %var_3001: Tensor[(1470), float64], %var_3002: Tensor[(968), int64], %var_3003: Tensor[(7, 6, 12), float64], %var_3004: Tensor[(156), float64], %var_3005: Tensor[(42, 9), float64]) -> (Tensor[(7, 6, 12), float64], Tensor[(14, 7, 15), float64], Tensor[(1470), float64], Tensor[(64), float64], Tensor[(968), int64], Tensor[(64), float64], Tensor[(16, 6, 6), uint8], Tensor[(576), uint8], Tensor[(1, 378), float64], Tensor[(156), float64], Tensor[(42, 9), float64], Tensor[(7, 6, 12), float64]) {
  %40 = fn (%var_2943: float64, %var_2944: Tensor[(7, 6, 12), float64], %var_2949: Tensor[(1470), float64], %var_2965: Tensor[(968), int64], %var_2968: Tensor[(7, 6, 12), float64], %var_2985: Tensor[(156), float64], %var_2986: Tensor[(42, 9), float64]) -> (Tensor[(7, 6, 12), float64], Tensor[(14, 7, 15), float64], Tensor[(1470), float64], Tensor[(64), float64], Tensor[(968), int64], Tensor[(64), float64], Tensor[(16, 6, 6), uint8], Tensor[(576), uint8], Tensor[(1, 378), float64], Tensor[(156), float64], Tensor[(42, 9), float64], Tensor[(7, 6, 12), float64]) {
    %9 = cast(%var_2943, dtype="float64") /* ty=float64 */;
    %10 = cast(%var_2944, dtype="float64") /* ty=Tensor[(7, 6, 12), float64] */;
    %11 = cast(%var_2949, dtype="float64") /* ty=Tensor[(1470), float64] */;
    %12 = reshape(%11, newshape=[14, 7, 15]) /* ty=Tensor[(14, 7, 15), float64] */;
    %13 = @func_2891(%12) /* ty=(Tensor[(14, 7, 15), float64], Tensor[(14, 7, 15), float64]) */;
    %14 = cast(%var_2965, dtype="int64") /* ty=Tensor[(968), int64] */;
    %15 = cast(%var_2965, dtype="int64") /* ty=Tensor[(968), int64] */;
    %16 = cast(meta[relay.Constant][0] /* ty=Tensor[(64), float64] */, dtype="float64") /* ty=Tensor[(64), float64] */;
    %17 = reshape(%14, newshape=[11, 8, 11]) /* ty=Tensor[(11, 8, 11), int64] */;
    %18 = reshape(%15, newshape=[11, 8, 11]) /* ty=Tensor[(11, 8, 11), int64] */;
    %19 = reshape(%16, newshape=[64]) /* ty=Tensor[(64), float64] */;
    %20 = @func_1623(%17, %18, %19) /* ty=(Tensor[(11, 8, 11), int64], Tensor[(2, 16, 2), bool], Tensor[(64), float64]) */;
    %21 = cast(meta[relay.Constant][1] /* ty=Tensor[(576), uint8] */, dtype="uint8") /* ty=Tensor[(576), uint8] */;
    %22 = reshape(%21, newshape=[16, 6, 6]) /* ty=Tensor[(16, 6, 6), uint8] */;
    %23 = cast(%var_2985, dtype="float64") /* ty=Tensor[(156), float64] */;
    %24 = cast(%var_2986, dtype="float64") /* ty=Tensor[(42, 9), float64] */;
    %25 = reshape(%23, newshape=[6, 2, 13]) /* ty=Tensor[(6, 2, 13), float64] */;
    %26 = reshape(%24, newshape=[1, 378]) /* ty=Tensor[(1, 378), float64] */;
    %27 = @func_2113(%25, %26) /* ty=(Tensor[(6, 2, 13), float64], Tensor[(14, 9, 3), float64], Tensor[(1, 378), float64]) */;
    %28 = cast(%var_2968, dtype="int64") /* ty=Tensor[(7, 6, 12), int64] */;
    %29 = shape_of(%var_2944, dtype="int32") /* ty=Tensor[(3), int32] */;
    %30 = cast(%var_2944, dtype="int64") /* ty=Tensor[(7, 6, 12), int64] */;
    %31 = dyn.reshape(%28, %29, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %32 = logical_xor(%30, %31) /* ty=Tensor[(7, 6, 12), int64] */;
    %33 = cast(%32, dtype="float64") /* ty=Tensor[(7, 6, 12), float64] */;
    %34 = floor_mod(%9, %10) /* ty=Tensor[(7, 6, 12), float64] */;
    %35 = %13.1;
    %36 = %20.2;
    %37 = @func_2199(%22) /* ty=Tensor[(16, 6, 6), uint8] */;
    %38 = %27.2;
    %39 = tan(%33) /* ty=Tensor[(7, 6, 12), float64] */;
    (%34, %35, %var_2949, %36, %var_2965, meta[relay.Constant][0] /* ty=Tensor[(64), float64] */, %37, meta[relay.Constant][1] /* ty=Tensor[(576), uint8] */, %38, %var_2985, %var_2986, %39)
  };
  %40(%var_2999, %var_3000, %var_3001, %var_3002, %var_3003, %var_3004, %var_3005) /* ty=(Tensor[(7, 6, 12), float64], Tensor[(14, 7, 15), float64], Tensor[(1470), float64], Tensor[(64), float64], Tensor[(968), int64], Tensor[(64), float64], Tensor[(16, 6, 6), uint8], Tensor[(576), uint8], Tensor[(1, 378), float64], Tensor[(156), float64], Tensor[(42, 9), float64], Tensor[(7, 6, 12), float64]) */
}

def @func_7596() -> (Tensor[(2, 3, 12), float64], Tensor[(2, 3, 12), float64], Tensor[(2, 3, 12), float64], Tensor[(2, 3, 12), bool], Tensor[(2, 3, 12), float64], Tensor[(2520), float64]) {
  %58 = fn () -> (Tensor[(2, 3, 12), float64], Tensor[(2, 3, 12), float64], Tensor[(2, 3, 12), float64], Tensor[(2, 3, 12), bool], Tensor[(2, 3, 12), float64], Tensor[(2520), float64]) {
    %41 = @func_5601() /* ty=(Tensor[(2, 3, 12), float64], Tensor[(14, 7, 15), float64], Tensor[(2, 3, 12), float64], Tensor[(1470), float64]) */;
    %42 = @func_5498() /* ty=(Tensor[(2, 3, 12), float64],) */;
    %43 = @func_6879() /* ty=(Tensor[(2, 3, 12), float64], Tensor[(2, 3, 12), float64], Tensor[(2, 3, 12), float64]) */;
    %44 = %43.1;
    %45 = @func_6637() /* ty=Tensor[(2, 3, 12), float64] */;
    %46 = cast(%45, dtype="bool") /* ty=Tensor[(2, 3, 12), bool] */;
    %47 = shape_of(%44, dtype="int32") /* ty=Tensor[(3), int32] */;
    %48 = cast(%44, dtype="bool") /* ty=Tensor[(2, 3, 12), bool] */;
    %49 = dyn.reshape(%46, %47, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %50 = @func_6879() /* ty=(Tensor[(2, 3, 12), float64], Tensor[(2, 3, 12), float64], Tensor[(2, 3, 12), float64]) */;
    %51 = @func_7017() /* ty=(Tensor[(11, 6, 12), float32], Tensor[(15, 14, 12), float64], Tensor[(2520), float64], Tensor[(26, 3), float64], Tensor[(78, 1), float64]) */;
    %52 = %41.2;
    %53 = @func_7076() /* ty=Tensor[(2, 3, 12), float64] */;
    %54 = %42.0;
    %55 = not_equal(%48, %49) /* ty=Tensor[(2, 3, 12), bool] */;
    %56 = %50.2;
    %57 = %51.2;
    (%52, %53, %54, %55, %56, %57)
  };
  %58() /* ty=(Tensor[(2, 3, 12), float64], Tensor[(2, 3, 12), float64], Tensor[(2, 3, 12), float64], Tensor[(2, 3, 12), bool], Tensor[(2, 3, 12), float64], Tensor[(2520), float64]) */
}

def @func_7442() -> Tensor[(2, 3, 12), float64] {
  @func_7440() /* ty=Tensor[(2, 3, 12), float64] */
}

def @func_5626(%var_5624: Tensor[(15, 14, 12), float64]) -> (Tensor[(15, 14, 12), float64],) {
  @func_5623(%var_5624) /* ty=(Tensor[(15, 14, 12), float64],) */
}

def @func_6485(%var_6484: Tensor[(378), float64]) -> (Tensor[(2, 3, 12), float64], Tensor[(2, 16, 2), bool], Tensor[(968), int64], Tensor[(32, 2), float64], Tensor[(6, 2, 13), float64], Tensor[(156), float64], Tensor[(378), float64], Tensor[(2, 3, 12), float64]) {
  %76 = fn (%var_6477: Tensor[(378), float64]) -> (Tensor[(2, 3, 12), float64], Tensor[(2, 16, 2), bool], Tensor[(968), int64], Tensor[(32, 2), float64], Tensor[(6, 2, 13), float64], Tensor[(156), float64], Tensor[(378), float64], Tensor[(2, 3, 12), float64]) {
    %59 = @func_5498() /* ty=(Tensor[(2, 3, 12), float64],) */;
    %60 = cast(meta[relay.Constant][2] /* ty=Tensor[(968), int64] */, dtype="int64") /* ty=Tensor[(968), int64] */;
    %61 = cast(meta[relay.Constant][2] /* ty=Tensor[(968), int64] */, dtype="int64") /* ty=Tensor[(968), int64] */;
    %62 = cast(meta[relay.Constant][3] /* ty=Tensor[(32, 2), float64] */, dtype="float64") /* ty=Tensor[(32, 2), float64] */;
    %63 = reshape(%60, newshape=[11, 8, 11]) /* ty=Tensor[(11, 8, 11), int64] */;
    %64 = reshape(%61, newshape=[11, 8, 11]) /* ty=Tensor[(11, 8, 11), int64] */;
    %65 = reshape(%62, newshape=[64]) /* ty=Tensor[(64), float64] */;
    %66 = @func_1623(%63, %64, %65) /* ty=(Tensor[(11, 8, 11), int64], Tensor[(2, 16, 2), bool], Tensor[(64), float64]) */;
    %67 = cast(meta[relay.Constant][4] /* ty=Tensor[(156), float64] */, dtype="float64") /* ty=Tensor[(156), float64] */;
    %68 = cast(%var_6477, dtype="float64") /* ty=Tensor[(378), float64] */;
    %69 = reshape(%67, newshape=[6, 2, 13]) /* ty=Tensor[(6, 2, 13), float64] */;
    %70 = reshape(%68, newshape=[1, 378]) /* ty=Tensor[(1, 378), float64] */;
    %71 = @func_2113(%69, %70) /* ty=(Tensor[(6, 2, 13), float64], Tensor[(14, 9, 3), float64], Tensor[(1, 378), float64]) */;
    %72 = %59.0;
    %73 = %66.1;
    %74 = %71.0;
    %75 = @func_4414() /* ty=Tensor[(2, 3, 12), float64] */;
    (%72, %73, meta[relay.Constant][2] /* ty=Tensor[(968), int64] */, meta[relay.Constant][3] /* ty=Tensor[(32, 2), float64] */, %74, meta[relay.Constant][4] /* ty=Tensor[(156), float64] */, %var_6477, %75)
  };
  %76(%var_6484) /* ty=(Tensor[(2, 3, 12), float64], Tensor[(2, 16, 2), bool], Tensor[(968), int64], Tensor[(32, 2), float64], Tensor[(6, 2, 13), float64], Tensor[(156), float64], Tensor[(378), float64], Tensor[(2, 3, 12), float64]) */
}

def @func_5485(%var_5481: float64, %var_5482: Tensor[(520, 9), float64], %var_5483: Tensor[(240), float32], %var_5484: Tensor[(704), float64]) -> (Tensor[(2, 3, 12), float64], Tensor[(2, 16, 2), bool], Tensor[(64), float64], float64, Tensor[(520, 9), bool], Tensor[(15, 2, 8), int16], Tensor[(240), float32], Tensor[(704), float64], Tensor[(520, 9), float64], Tensor[(16, 6, 6), uint8], Tensor[(1, 576), uint8], Tensor[(4, 13, 10), float64], Tensor[(2, 3, 12), float64]) {
  %109 = fn (%var_5427: float64, %var_5432: Tensor[(520, 9), float64], %var_5442: Tensor[(240), float32], %var_5443: Tensor[(704), float64]) -> (Tensor[(2, 3, 12), float64], Tensor[(2, 16, 2), bool], Tensor[(64), float64], float64, Tensor[(520, 9), bool], Tensor[(15, 2, 8), int16], Tensor[(240), float32], Tensor[(704), float64], Tensor[(520, 9), float64], Tensor[(16, 6, 6), uint8], Tensor[(1, 576), uint8], Tensor[(4, 13, 10), float64], Tensor[(2, 3, 12), float64]) {
    %77 = cast(meta[relay.Constant][5] /* ty=Tensor[(64), float64] */, dtype="float64") /* ty=Tensor[(64), float64] */;
    %78 = reshape(%77, newshape=[2, 16, 2]) /* ty=Tensor[(2, 16, 2), float64] */;
    %79 = @func_661(%78) /* ty=(Tensor[(2, 16, 2), bool],) */;
    %80 = cast(meta[relay.Constant][6] /* ty=Tensor[(520, 1), float64] */, dtype="bool") /* ty=Tensor[(520, 1), bool] */;
    %81 = cast(%var_5432, dtype="bool") /* ty=Tensor[(520, 9), bool] */;
    %82 = cast(%var_5427, dtype="float32") /* ty=float32 */;
    %83 = cast(%var_5442, dtype="float32") /* ty=Tensor[(240), float32] */;
    %84 = cast(%var_5443, dtype="float64") /* ty=Tensor[(704), float64] */;
    %85 = @func_5385() /* ty=Tensor[(2, 3, 12), float64] */;
    %86 = cast(%85, dtype="uint64") /* ty=Tensor[(2, 3, 12), uint64] */;
    %87 = reshape(%82, newshape=[]) /* ty=float32 */;
    %88 = reshape(%83, newshape=[15, 2, 8]) /* ty=Tensor[(15, 2, 8), float32] */;
    %89 = reshape(%84, newshape=[16, 11, 4]) /* ty=Tensor[(16, 11, 4), float64] */;
    %90 = reshape(%86, newshape=[72]) /* ty=Tensor[(72), uint64] */;
    %91 = @func_434(%87, %88, %89, %90) /* ty=(Tensor[(16, 11, 4), float64], Tensor[(72), uint64], Tensor[(1152), uint64], Tensor[(704), float64], Tensor[(15, 2, 8), int16], Tensor[(352, 2), uint32]) */;
    %92 = cast(%var_5432, dtype="float64") /* ty=Tensor[(520, 9), float64] */;
    %93 = cast(meta[relay.Constant][7] /* ty=Tensor[(1, 576), uint8] */, dtype="uint8") /* ty=Tensor[(1, 576), uint8] */;
    %94 = reshape(%93, newshape=[16, 6, 6]) /* ty=Tensor[(16, 6, 6), uint8] */;
    %95 = cast(%var_5427, dtype="float64") /* ty=float64 */;
    %96 = cast(meta[relay.Constant][6] /* ty=Tensor[(520, 1), float64] */, dtype="float64") /* ty=Tensor[(520, 1), float64] */;
    %97 = reshape(%95, newshape=[]) /* ty=float64 */;
    %98 = reshape(%96, newshape=[4, 13, 10]) /* ty=Tensor[(4, 13, 10), float64] */;
    %99 = @func_3967(%97, %98) /* ty=(Tensor[(4, 13, 10), float64], Tensor[(4, 13, 10), float64]) */;
    %100 = %99.1;
    %101 = cast(%100, dtype="float64") /* ty=Tensor[(4, 13, 10), float64] */;
    %102 = %79.0;
    %103 = less_equal(%80, %81) /* ty=Tensor[(520, 9), bool] */;
    %104 = %91.4;
    %105 = sin(%92) /* ty=Tensor[(520, 9), float64] */;
    %106 = @func_2199(%94) /* ty=Tensor[(16, 6, 6), uint8] */;
    %107 = log10(%101) /* ty=Tensor[(4, 13, 10), float64] */;
    %108 = @func_4414() /* ty=Tensor[(2, 3, 12), float64] */;
    (%85, %102, meta[relay.Constant][5] /* ty=Tensor[(64), float64] */, %var_5427, %103, %104, %var_5442, %var_5443, %105, %106, meta[relay.Constant][7] /* ty=Tensor[(1, 576), uint8] */, %107, %108)
  };
  %109(%var_5481, %var_5482, %var_5483, %var_5484) /* ty=(Tensor[(2, 3, 12), float64], Tensor[(2, 16, 2), bool], Tensor[(64), float64], float64, Tensor[(520, 9), bool], Tensor[(15, 2, 8), int16], Tensor[(240), float32], Tensor[(704), float64], Tensor[(520, 9), float64], Tensor[(16, 6, 6), uint8], Tensor[(1, 576), uint8], Tensor[(4, 13, 10), float64], Tensor[(2, 3, 12), float64]) */
}

def @func_6736() -> (Tensor[(2, 3, 12), float64],) {
  @func_6734() /* ty=(Tensor[(2, 3, 12), float64],) */
}

def @func_2523(%var_2443: Tensor[(72), uint64], %var_2469: Tensor[(225), float64], %var_2500: Tensor[(1344), float32]) -> (Tensor[(16, 6, 6), uint8], Tensor[(576), uint8], Tensor[(9, 2, 12), float32], Tensor[(72), uint64], Tensor[(4, 288), uint64], Tensor[(704), float64], Tensor[(5, 3, 15), float64], Tensor[(225), float64], Tensor[(2, 16, 2), bool], Tensor[(64), float64], Tensor[(16, 12, 7), float32], Tensor[(1344), float32], Tensor[(9, 15, 16), float64]) {
  %110 = cast(meta[relay.Constant][8] /* ty=Tensor[(576), uint8] */, dtype="uint8") /* ty=Tensor[(576), uint8] */;
  %111 = reshape(%110, newshape=[16, 6, 6]) /* ty=Tensor[(16, 6, 6), uint8] */;
  %112 = cast(%var_2443, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %113 = cast(meta[relay.Constant][9] /* ty=Tensor[(4, 288), uint64] */, dtype="uint64") /* ty=Tensor[(4, 288), uint64] */;
  %114 = cast(meta[relay.Constant][10] /* ty=Tensor[(704), float64] */, dtype="float64") /* ty=Tensor[(704), float64] */;
  %115 = reshape(%112, newshape=[18, 4]) /* ty=Tensor[(18, 4), uint64] */;
  %116 = reshape(%113, newshape=[1152]) /* ty=Tensor[(1152), uint64] */;
  %117 = reshape(%114, newshape=[704]) /* ty=Tensor[(704), float64] */;
  %118 = @func_1109(%115, %116, %117) /* ty=(Tensor[(9, 2, 12), float32], Tensor[(704), float64], Tensor[(18, 4), uint64], Tensor[(1152), uint64], Tensor[(704), float64], Tensor[(3, 16, 4), int64], int64) */;
  %119 = cast(%var_2469, dtype="float64") /* ty=Tensor[(225), float64] */;
  %120 = reshape(%119, newshape=[5, 3, 15]) /* ty=Tensor[(5, 3, 15), float64] */;
  %121 = cast(meta[relay.Constant][11] /* ty=Tensor[(64), float64] */, dtype="float64") /* ty=Tensor[(64), float64] */;
  %122 = reshape(%121, newshape=[2, 16, 2]) /* ty=Tensor[(2, 16, 2), float64] */;
  %123 = @func_661(%122) /* ty=(Tensor[(2, 16, 2), bool],) */;
  %124 = cast(%var_2500, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %125 = reshape(%124, newshape=[16, 12, 7]) /* ty=Tensor[(16, 12, 7), float32] */;
  %126 = cast(meta[relay.Constant][12] /* ty=Tensor[(9, 15, 16), float32] */, dtype="float32") /* ty=Tensor[(9, 15, 16), float32] */;
  %127 = sin(%126) /* ty=Tensor[(9, 15, 16), float32] */;
  %128 = cast(%127, dtype="float64") /* ty=Tensor[(9, 15, 16), float64] */;
  %129 = acosh(%128) /* ty=Tensor[(9, 15, 16), float64] */;
  %130 = cast(%129, dtype="float64") /* ty=Tensor[(9, 15, 16), float64] */;
  %131 = @func_2199(%111) /* ty=Tensor[(16, 6, 6), uint8] */;
  %132 = %118.0;
  %133 = @func_1384(%120) /* ty=Tensor[(5, 3, 15), float64] */;
  %134 = %123.0;
  %135 = @func_1475(%125) /* ty=Tensor[(16, 12, 7), float32] */;
  %136 = exp(%130) /* ty=Tensor[(9, 15, 16), float64] */;
  (%131, meta[relay.Constant][8] /* ty=Tensor[(576), uint8] */, %132, %var_2443, meta[relay.Constant][9] /* ty=Tensor[(4, 288), uint64] */, meta[relay.Constant][10] /* ty=Tensor[(704), float64] */, %133, %var_2469, %134, meta[relay.Constant][11] /* ty=Tensor[(64), float64] */, %135, %var_2500, %136)
}

def @func_4710(%var_4708: Tensor[(15, 6, 6), bool], %var_4709: Tensor[(3120), uint64]) -> (Tensor[(15, 6, 6), float64], Tensor[(16, 15, 13), uint64], Tensor[(3120), uint64], Tensor[(16, 6, 6), uint8], Tensor[(576), uint8], Tensor[(15, 6, 6), bool]) {
  %163 = fn (%var_4623: Tensor[(15, 6, 6), bool], %var_4659: Tensor[(3120), uint64]) -> (Tensor[(15, 6, 6), float64], Tensor[(16, 15, 13), uint64], Tensor[(3120), uint64], Tensor[(16, 6, 6), uint8], Tensor[(576), uint8], Tensor[(15, 6, 6), bool]) {
    %137 = cast(%var_4623, dtype="bool") /* ty=Tensor[(15, 6, 6), bool] */;
    %138 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(15, 6, 6), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %139 = cast(meta[relay.Constant][13] /* ty=Tensor[(15, 6, 6), bool] */, dtype="bool") /* ty=Tensor[(15, 6, 6), bool] */;
    %140 = dyn.reshape(%137, %138, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %141 = logical_or(%139, %140) /* ty=Tensor[(15, 6, 6), bool] */;
    %142 = cast(%141, dtype="float64") /* ty=Tensor[(15, 6, 6), float64] */;
    %143 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(15, 6, 6), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %144 = cast(meta[relay.Constant][13] /* ty=Tensor[(15, 6, 6), bool] */, dtype="float64") /* ty=Tensor[(15, 6, 6), float64] */;
    %145 = dyn.reshape(%142, %143, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %146 = cast(%var_4659, dtype="uint64") /* ty=Tensor[(3120), uint64] */;
    %147 = cast(%var_4659, dtype="uint64") /* ty=Tensor[(3120), uint64] */;
    %148 = reshape(%146, newshape=[16, 15, 13]) /* ty=Tensor[(16, 15, 13), uint64] */;
    %149 = reshape(%147, newshape=[16, 15, 13]) /* ty=Tensor[(16, 15, 13), uint64] */;
    %150 = @func_1257(%148, %149) /* ty=(Tensor[(16, 15, 13), uint64],) */;
    %151 = cast(meta[relay.Constant][14] /* ty=Tensor[(576), uint8] */, dtype="uint8") /* ty=Tensor[(576), uint8] */;
    %152 = reshape(%151, newshape=[16, 6, 6]) /* ty=Tensor[(16, 6, 6), uint8] */;
    %153 = cast(%var_4623, dtype="float64") /* ty=Tensor[(15, 6, 6), float64] */;
    %154 = asin(%153) /* ty=Tensor[(15, 6, 6), float64] */;
    %155 = cast(%141, dtype="bool") /* ty=Tensor[(15, 6, 6), bool] */;
    %156 = shape_of(%154, dtype="int32") /* ty=Tensor[(3), int32] */;
    %157 = cast(%154, dtype="bool") /* ty=Tensor[(15, 6, 6), bool] */;
    %158 = dyn.reshape(%155, %156, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %159 = floor_mod(%144, %145) /* ty=Tensor[(15, 6, 6), float64] */;
    %160 = %150.0;
    %161 = @func_2199(%152) /* ty=Tensor[(16, 6, 6), uint8] */;
    %162 = less(%157, %158) /* ty=Tensor[(15, 6, 6), bool] */;
    (%159, %160, %var_4659, %161, meta[relay.Constant][14] /* ty=Tensor[(576), uint8] */, %162)
  };
  %163(%var_4708, %var_4709) /* ty=(Tensor[(15, 6, 6), float64], Tensor[(16, 15, 13), uint64], Tensor[(3120), uint64], Tensor[(16, 6, 6), uint8], Tensor[(576), uint8], Tensor[(15, 6, 6), bool]) */
}

def @func_7440() -> Tensor[(2, 3, 12), float64] {
  @func_6925() /* ty=Tensor[(2, 3, 12), float64] */
}

def @func_1627(%var_1624: Tensor[(11, 8, 11), int64], %var_1625: Tensor[(11, 8, 11), int64], %var_1626: Tensor[(64), float64]) -> (Tensor[(11, 8, 11), int64], Tensor[(2, 16, 2), bool], Tensor[(64), float64]) {
  %173 = fn (%var_1584: Tensor[(11, 8, 11), int64], %var_1585: Tensor[(11, 8, 11), int64], %var_1600: Tensor[(64), float64]) -> (Tensor[(11, 8, 11), int64], Tensor[(2, 16, 2), bool], Tensor[(64), float64]) {
    %164 = cast(%var_1585, dtype="int64") /* ty=Tensor[(11, 8, 11), int64] */;
    %165 = shape_of(%var_1584, dtype="int32") /* ty=Tensor[(3), int32] */;
    %166 = cast(%var_1584, dtype="int64") /* ty=Tensor[(11, 8, 11), int64] */;
    %167 = dyn.reshape(%164, %165, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %168 = cast(%var_1600, dtype="float64") /* ty=Tensor[(64), float64] */;
    %169 = reshape(%168, newshape=[2, 16, 2]) /* ty=Tensor[(2, 16, 2), float64] */;
    %170 = @func_661(%169) /* ty=(Tensor[(2, 16, 2), bool],) */;
    %171 = add(%166, %167) /* ty=Tensor[(11, 8, 11), int64] */;
    %172 = %170.0;
    (%171, %172, %var_1600)
  };
  %173(%var_1624, %var_1625, %var_1626) /* ty=(Tensor[(11, 8, 11), int64], Tensor[(2, 16, 2), bool], Tensor[(64), float64]) */
}

def @func_6594(%var_6592: Tensor[(9, 9, 12), uint16]) -> Tensor[(9, 9, 12), bool] {
  @func_6591(%var_6592) /* ty=Tensor[(9, 9, 12), bool] */
}

def @func_2833(%var_2825: int32, %var_2826: Tensor[(8, 16, 12), int32]) -> (Tensor[(8, 16, 12), int32],) {
  %174 = cast(%var_2825, dtype="int32") /* ty=int32 */;
  %175 = cast(%var_2826, dtype="int32") /* ty=Tensor[(8, 16, 12), int32] */;
  %176 = left_shift(%174, %175) /* ty=Tensor[(8, 16, 12), int32] */;
  (%176,)
}

def @func_4851(%var_4849: Tensor[(26, 3), float64]) -> (Tensor[(2, 3, 12), float64], Tensor[(3, 16, 4), int64], Tensor[(4, 176), float64], Tensor[(2, 13, 3), float64], Tensor[(26, 3), float64], Tensor[(1152), float32]) {
  @func_4848(%var_4849) /* ty=(Tensor[(2, 3, 12), float64], Tensor[(3, 16, 4), int64], Tensor[(4, 176), float64], Tensor[(2, 13, 3), float64], Tensor[(26, 3), float64], Tensor[(1152), float32]) */
}

def @func_4492(%var_4474: Tensor[(180), uint16]) -> (Tensor[(2, 3, 12), float64], Tensor[(11, 8, 11), int64], Tensor[(968), int64], Tensor[(64), float64], Tensor[(2, 13, 3), float64], Tensor[(78), float64], Tensor[(4, 9, 5), float64]) {
  %177 = @func_4205() /* ty=(Tensor[(2, 3, 12), float64],) */;
  %178 = cast(meta[relay.Constant][15] /* ty=Tensor[(968), int64] */, dtype="int64") /* ty=Tensor[(968), int64] */;
  %179 = cast(meta[relay.Constant][15] /* ty=Tensor[(968), int64] */, dtype="int64") /* ty=Tensor[(968), int64] */;
  %180 = cast(meta[relay.Constant][16] /* ty=Tensor[(64), float64] */, dtype="float64") /* ty=Tensor[(64), float64] */;
  %181 = reshape(%178, newshape=[11, 8, 11]) /* ty=Tensor[(11, 8, 11), int64] */;
  %182 = reshape(%179, newshape=[11, 8, 11]) /* ty=Tensor[(11, 8, 11), int64] */;
  %183 = reshape(%180, newshape=[64]) /* ty=Tensor[(64), float64] */;
  %184 = @func_1623(%181, %182, %183) /* ty=(Tensor[(11, 8, 11), int64], Tensor[(2, 16, 2), bool], Tensor[(64), float64]) */;
  %185 = cast(meta[relay.Constant][17] /* ty=Tensor[(78), float64] */, dtype="float64") /* ty=Tensor[(78), float64] */;
  %186 = reshape(%185, newshape=[2, 13, 3]) /* ty=Tensor[(2, 13, 3), float64] */;
  %187 = @func_891(%186) /* ty=(Tensor[(2, 13, 3), float64],) */;
  %188 = cast(%var_4474, dtype="uint16") /* ty=Tensor[(180), uint16] */;
  %189 = reshape(%188, newshape=[4, 9, 5]) /* ty=Tensor[(4, 9, 5), uint16] */;
  %190 = @func_3160(%189) /* ty=Tensor[(4, 9, 5), bool] */;
  %191 = cast(%var_4474, dtype="float64") /* ty=Tensor[(180), float64] */;
  %192 = shape_of(%190, dtype="int32") /* ty=Tensor[(3), int32] */;
  %193 = cast(%190, dtype="float64") /* ty=Tensor[(4, 9, 5), float64] */;
  %194 = dyn.reshape(%191, %192, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %195 = %177.0;
  %196 = %184.0;
  %197 = %187.0;
  %198 = subtract(%193, %194) /* ty=Tensor[(4, 9, 5), float64] */;
  (%195, %196, meta[relay.Constant][15] /* ty=Tensor[(968), int64] */, meta[relay.Constant][16] /* ty=Tensor[(64), float64] */, %197, meta[relay.Constant][17] /* ty=Tensor[(78), float64] */, %198)
}

def @func_4541() -> (Tensor[(2, 3, 12), float64],) {
  @func_4539() /* ty=(Tensor[(2, 3, 12), float64],) */
}

def @func_6926() -> Tensor[(2, 3, 12), float64] {
  %199 = fn () -> Tensor[(2, 3, 12), float64] {
    @func_6183() /* ty=Tensor[(2, 3, 12), float64] */
  };
  %199() /* ty=Tensor[(2, 3, 12), float64] */
}

def @func_6946(%var_6933: Tensor[(3, 4, 12), float64], %var_6934: Tensor[(3, 4, 12), float64]) -> (Tensor[(3, 4, 12), float64],) {
  %200 = cast(%var_6934, dtype="float64") /* ty=Tensor[(3, 4, 12), float64] */;
  %201 = shape_of(%var_6933, dtype="int32") /* ty=Tensor[(3), int32] */;
  %202 = cast(%var_6933, dtype="float64") /* ty=Tensor[(3, 4, 12), float64] */;
  %203 = dyn.reshape(%200, %201, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %204 = floor_divide(%202, %203) /* ty=Tensor[(3, 4, 12), float64] */;
  (%204,)
}

def @func_2837(%var_2835: int32, %var_2836: Tensor[(8, 16, 12), int32]) -> (Tensor[(8, 16, 12), int32],) {
  @func_2833(%var_2835, %var_2836) /* ty=(Tensor[(8, 16, 12), int32],) */
}

def @func_7506() -> (Tensor[(2, 3, 12), float64],) {
  %206 = fn () -> (Tensor[(2, 3, 12), float64],) {
    %205 = @func_6416() /* ty=Tensor[(2, 3, 12), float64] */;
    (%205,)
  };
  %206() /* ty=(Tensor[(2, 3, 12), float64],) */
}

def @func_6076() -> Tensor[(2, 3, 12), float64] {
  %207 = @func_4919() /* ty=(Tensor[(2, 3, 12), float64],) */;
  %207.0
}

def @func_293(%var_290: Tensor[(8, 9, 1), uint64], %var_291: Tensor[(8, 9, 16), uint64], %var_292: Tensor[(704), float64]) -> (Tensor[(8, 9, 16), uint64], Tensor[(16, 11, 4), float64], Tensor[(704), float64], Tensor[(16, 11, 4), float64]) {
  %219 = fn (%var_255: Tensor[(8, 9, 1), uint64], %var_256: Tensor[(8, 9, 16), uint64], %var_272: Tensor[(704), float64]) -> (Tensor[(8, 9, 16), uint64], Tensor[(16, 11, 4), float64], Tensor[(704), float64], Tensor[(16, 11, 4), float64]) {
    %208 = cast(%var_255, dtype="uint64") /* ty=Tensor[(8, 9, 1), uint64] */;
    %209 = cast(%var_256, dtype="uint64") /* ty=Tensor[(8, 9, 16), uint64] */;
    %210 = cast(%var_272, dtype="float64") /* ty=Tensor[(704), float64] */;
    %211 = reshape(%210, newshape=[16, 11, 4]) /* ty=Tensor[(16, 11, 4), float64] */;
    %212 = @func_76(%211) /* ty=(Tensor[(16, 11, 4), float64],) */;
    %213 = %212.0;
    %214 = cast(%213, dtype="float64") /* ty=Tensor[(16, 11, 4), float64] */;
    %215 = reshape(%214, newshape=[16, 11, 4]) /* ty=Tensor[(16, 11, 4), float64] */;
    %216 = @func_76(%215) /* ty=(Tensor[(16, 11, 4), float64],) */;
    %217 = left_shift(%208, %209) /* ty=Tensor[(8, 9, 16), uint64] */;
    %218 = %216.0;
    (%217, %213, %var_272, %218)
  };
  %219(%var_290, %var_291, %var_292) /* ty=(Tensor[(8, 9, 16), uint64], Tensor[(16, 11, 4), float64], Tensor[(704), float64], Tensor[(16, 11, 4), float64]) */
}

def @func_6567(%var_6564: Tensor[(3, 1, 16), float32]) -> Tensor[(3, 1, 16), float32] {
  %220 = cast(%var_6564, dtype="float32") /* ty=Tensor[(3, 1, 16), float32] */;
  exp(%220) /* ty=Tensor[(3, 1, 16), float32] */
}

def @func_4781() -> (Tensor[(2, 3, 12), float64],) {
  %221 = @func_4205() /* ty=(Tensor[(2, 3, 12), float64],) */;
  %222 = %221.0;
  (%222,)
}

def @func_5321(%var_5315: Tensor[(2, 3, 12), float64]) -> (Tensor[(2, 3, 12), bool],) {
  %223 = @func_4414() /* ty=Tensor[(2, 3, 12), float64] */;
  %224 = cast(%var_5315, dtype="bool") /* ty=Tensor[(2, 3, 12), bool] */;
  %225 = shape_of(%223, dtype="int32") /* ty=Tensor[(3), int32] */;
  %226 = cast(%223, dtype="bool") /* ty=Tensor[(2, 3, 12), bool] */;
  %227 = dyn.reshape(%224, %225, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %228 = greater(%226, %227) /* ty=Tensor[(2, 3, 12), bool] */;
  (%228,)
}

def @func_4246(%var_4240: Tensor[(2, 3, 12), float64]) -> (Tensor[(16, 12, 7), float32], Tensor[(1344), float32], Tensor[(2, 3, 12), bool]) {
  %229 = cast(meta[relay.Constant][18] /* ty=Tensor[(1344), float32] */, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %230 = reshape(%229, newshape=[16, 12, 7]) /* ty=Tensor[(16, 12, 7), float32] */;
  %231 = @func_4205() /* ty=(Tensor[(2, 3, 12), float64],) */;
  %232 = %231.0;
  %233 = cast(%232, dtype="float64") /* ty=Tensor[(2, 3, 12), float64] */;
  %234 = erf(%233) /* ty=Tensor[(2, 3, 12), float64] */;
  %235 = cast(%var_4240, dtype="bool") /* ty=Tensor[(2, 3, 12), bool] */;
  %236 = shape_of(%234, dtype="int32") /* ty=Tensor[(3), int32] */;
  %237 = cast(%234, dtype="bool") /* ty=Tensor[(2, 3, 12), bool] */;
  %238 = dyn.reshape(%235, %236, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %239 = @func_1475(%230) /* ty=Tensor[(16, 12, 7), float32] */;
  %240 = less(%237, %238) /* ty=Tensor[(2, 3, 12), bool] */;
  (%239, meta[relay.Constant][18] /* ty=Tensor[(1344), float32] */, %240)
}

def @func_5386() -> Tensor[(2, 3, 12), float64] {
  %242 = fn () -> Tensor[(2, 3, 12), float64] {
    %241 = @func_4205() /* ty=(Tensor[(2, 3, 12), float64],) */;
    %241.0
  };
  %242() /* ty=Tensor[(2, 3, 12), float64] */
}

def @func_4848(%var_4840: Tensor[(26, 3), float64]) -> (Tensor[(2, 3, 12), float64], Tensor[(3, 16, 4), int64], Tensor[(4, 176), float64], Tensor[(2, 13, 3), float64], Tensor[(26, 3), float64], Tensor[(1152), float32]) {
  %243 = @func_4781() /* ty=(Tensor[(2, 3, 12), float64],) */;
  %244 = %243.0;
  %245 = cast(%244, dtype="uint64") /* ty=Tensor[(2, 3, 12), uint64] */;
  %246 = cast(meta[relay.Constant][19] /* ty=Tensor[(1152), uint64] */, dtype="uint64") /* ty=Tensor[(1152), uint64] */;
  %247 = cast(meta[relay.Constant][20] /* ty=Tensor[(4, 176), float64] */, dtype="float64") /* ty=Tensor[(4, 176), float64] */;
  %248 = reshape(%245, newshape=[18, 4]) /* ty=Tensor[(18, 4), uint64] */;
  %249 = reshape(%246, newshape=[1152]) /* ty=Tensor[(1152), uint64] */;
  %250 = reshape(%247, newshape=[704]) /* ty=Tensor[(704), float64] */;
  %251 = @func_1109(%248, %249, %250) /* ty=(Tensor[(9, 2, 12), float32], Tensor[(704), float64], Tensor[(18, 4), uint64], Tensor[(1152), uint64], Tensor[(704), float64], Tensor[(3, 16, 4), int64], int64) */;
  %252 = cast(%var_4840, dtype="float64") /* ty=Tensor[(26, 3), float64] */;
  %253 = reshape(%252, newshape=[2, 13, 3]) /* ty=Tensor[(2, 13, 3), float64] */;
  %254 = @func_891(%253) /* ty=(Tensor[(2, 13, 3), float64],) */;
  %255 = cast(meta[relay.Constant][19] /* ty=Tensor[(1152), uint64] */, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %256 = sigmoid(%255) /* ty=Tensor[(1152), float32] */;
  %257 = cast(meta[relay.Constant][19] /* ty=Tensor[(1152), uint64] */, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %258 = shape_of(%256, dtype="int32") /* ty=Tensor[(1), int32] */;
  %259 = cast(%256, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %260 = dyn.reshape(%257, %258, newshape=[]) /* ty=Tensor[(?), float32] */;
  %261 = %251.5;
  %262 = %254.0;
  %263 = floor_divide(%259, %260) /* ty=Tensor[(1152), float32] */;
  (%244, %261, meta[relay.Constant][20] /* ty=Tensor[(4, 176), float64] */, %262, %var_4840, %263)
}

def @func_5753(%var_5751: Tensor[(1260, 2), float64]) -> (Tensor[(2, 3, 12), float64], Tensor[(15, 14, 12), float64], Tensor[(1260, 2), float64], Tensor[(1, 60), float64], Tensor[(12, 5, 1), float32]) {
  @func_5750(%var_5751) /* ty=(Tensor[(2, 3, 12), float64], Tensor[(15, 14, 12), float64], Tensor[(1260, 2), float64], Tensor[(1, 60), float64], Tensor[(12, 5, 1), float32]) */
}

def @func_6418() -> Tensor[(2, 3, 12), float64] {
  @func_6416() /* ty=Tensor[(2, 3, 12), float64] */
}

def @func_4861() -> Tensor[(2, 3, 12), float64] {
  %264 = @func_4781() /* ty=(Tensor[(2, 3, 12), float64],) */;
  %264.0
}

def @func_7487() -> Tensor[(2, 3, 12), float64] {
  %265 = fn () -> Tensor[(2, 3, 12), float64] {
    @func_4861() /* ty=Tensor[(2, 3, 12), float64] */
  };
  %265() /* ty=Tensor[(2, 3, 12), float64] */
}

def @func_5750(%var_5734: Tensor[(1260, 2), float64]) -> (Tensor[(2, 3, 12), float64], Tensor[(15, 14, 12), float64], Tensor[(1260, 2), float64], Tensor[(1, 60), float64], Tensor[(12, 5, 1), float32]) {
  %266 = @func_5220() /* ty=(Tensor[(2, 3, 12), float64], Tensor[(2, 3, 12), float64]) */;
  %267 = cast(%var_5734, dtype="float64") /* ty=Tensor[(1260, 2), float64] */;
  %268 = reshape(%267, newshape=[15, 14, 12]) /* ty=Tensor[(15, 14, 12), float64] */;
  %269 = @func_5623(%268) /* ty=(Tensor[(15, 14, 12), float64],) */;
  %270 = cast(meta[relay.Constant][21] /* ty=Tensor[(1, 60), float64] */, dtype="float64") /* ty=Tensor[(1, 60), float64] */;
  %271 = reshape(%270, newshape=[12, 5, 1]) /* ty=Tensor[(12, 5, 1), float64] */;
  %272 = @func_5526(%271) /* ty=Tensor[(12, 5, 1), float64] */;
  %273 = cast(%272, dtype="float32") /* ty=Tensor[(12, 5, 1), float32] */;
  %274 = %266.1;
  %275 = %269.0;
  %276 = cos(%273) /* ty=Tensor[(12, 5, 1), float32] */;
  (%274, %275, %var_5734, meta[relay.Constant][21] /* ty=Tensor[(1, 60), float64] */, %276)
}

def @func_7065() -> Tensor[(11, 6, 12), float64] {
  %277 = @func_7017() /* ty=(Tensor[(11, 6, 12), float32], Tensor[(15, 14, 12), float64], Tensor[(2520), float64], Tensor[(26, 3), float64], Tensor[(78, 1), float64]) */;
  %278 = %277.0;
  %279 = cast(%278, dtype="float64") /* ty=Tensor[(11, 6, 12), float64] */;
  rsqrt(%279) /* ty=Tensor[(11, 6, 12), float64] */
}

def @func_8098(%var_8092: float32, %var_8093: Tensor[(240), float32], %var_8094: Tensor[(352, 2), float64], %var_8095: Tensor[(2, 3, 12), float64], %var_8096: Tensor[(968), int64], %var_8097: Tensor[(64), float64]) -> (Tensor[(2, 3, 12), float64], Tensor[(72), uint64], float32, Tensor[(240), float32], Tensor[(352, 2), float64], Tensor[(2, 3, 12), int32], Tensor[(11, 8, 11), int64], Tensor[(64), float64], Tensor[(15, 14, 12), float64], Tensor[(2520), float64], Tensor[(968), float64]) {
  @func_8090(%var_8092, %var_8093, %var_8094, %var_8095, %var_8096, %var_8097) /* ty=(Tensor[(2, 3, 12), float64], Tensor[(72), uint64], float32, Tensor[(240), float32], Tensor[(352, 2), float64], Tensor[(2, 3, 12), int32], Tensor[(11, 8, 11), int64], Tensor[(64), float64], Tensor[(15, 14, 12), float64], Tensor[(2520), float64], Tensor[(968), float64]) */
}

def @func_76(%var_72: Tensor[(16, 11, 4), float64]) -> (Tensor[(16, 11, 4), float64],) {
  %280 = cast(%var_72, dtype="float64") /* ty=Tensor[(16, 11, 4), float64] */;
  %281 = log2(%280) /* ty=Tensor[(16, 11, 4), float64] */;
  (%281,)
}

def @func_6795() -> Tensor[(2, 3, 12), float64] {
  @func_6793() /* ty=Tensor[(2, 3, 12), float64] */
}

def @func_1113(%var_1110: Tensor[(18, 4), uint64], %var_1111: Tensor[(1152), uint64], %var_1112: Tensor[(704), float64]) -> (Tensor[(9, 2, 12), float32], Tensor[(704), float64], Tensor[(18, 4), uint64], Tensor[(1152), uint64], Tensor[(704), float64], Tensor[(3, 16, 4), int64], int64) {
  %296 = fn (%var_1096: Tensor[(18, 4), uint64], %var_1097: Tensor[(1152), uint64], %var_1098: Tensor[(704), float64]) -> (Tensor[(9, 2, 12), float32], Tensor[(704), float64], Tensor[(18, 4), uint64], Tensor[(1152), uint64], Tensor[(704), float64], Tensor[(3, 16, 4), int64], int64) {
    %282 = cast(meta[relay.Constant][22] /* ty=Tensor[(9, 2, 12), float32] */, dtype="float32") /* ty=Tensor[(9, 2, 12), float32] */;
    %283 = cast(%var_1096, dtype="uint64") /* ty=Tensor[(18, 4), uint64] */;
    %284 = cast(%var_1097, dtype="uint64") /* ty=Tensor[(1152), uint64] */;
    %285 = cast(%var_1098, dtype="float64") /* ty=Tensor[(704), float64] */;
    %286 = reshape(%283, newshape=[8, 9, 1]) /* ty=Tensor[(8, 9, 1), uint64] */;
    %287 = reshape(%284, newshape=[8, 9, 16]) /* ty=Tensor[(8, 9, 16), uint64] */;
    %288 = reshape(%285, newshape=[704]) /* ty=Tensor[(704), float64] */;
    %289 = @func_289(%286, %287, %288) /* ty=(Tensor[(8, 9, 16), uint64], Tensor[(16, 11, 4), float64], Tensor[(704), float64], Tensor[(16, 11, 4), float64]) */;
    %290 = cast(-3 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %291 = reshape(%290, newshape=[]) /* ty=int64 */;
    %292 = @func_841(%291) /* ty=(Tensor[(3, 16, 4), int64],) */;
    %293 = log2(%282) /* ty=Tensor[(9, 2, 12), float32] */;
    %294 = %289.2;
    %295 = %292.0;
    (%293, %294, %var_1096, %var_1097, %var_1098, %295, -3 /* ty=int64 */)
  };
  %296(%var_1110, %var_1111, %var_1112) /* ty=(Tensor[(9, 2, 12), float32], Tensor[(704), float64], Tensor[(18, 4), uint64], Tensor[(1152), uint64], Tensor[(704), float64], Tensor[(3, 16, 4), int64], int64) */
}

def @func_6326(%var_6323: Tensor[(504), float64], %var_6324: Tensor[(240), float32], %var_6325: Tensor[(704), float64]) -> (Tensor[(2, 3, 12), float64], Tensor[(156), float64], float64, Tensor[(504), float64], Tensor[(1, 1470), float64], Tensor[(968, 1), int64], Tensor[(156), float64], Tensor[(378), float64], Tensor[(704), float64], Tensor[(240), float32], Tensor[(704), float64]) {
  %322 = fn (%var_6295: Tensor[(504), float64], %var_6313: Tensor[(240), float32], %var_6314: Tensor[(704), float64]) -> (Tensor[(2, 3, 12), float64], Tensor[(156), float64], float64, Tensor[(504), float64], Tensor[(1, 1470), float64], Tensor[(968, 1), int64], Tensor[(156), float64], Tensor[(378), float64], Tensor[(704), float64], Tensor[(240), float32], Tensor[(704), float64]) {
    %297 = cast(-6.44835f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %298 = cast(%var_6295, dtype="float64") /* ty=Tensor[(504), float64] */;
    %299 = cast(meta[relay.Constant][23] /* ty=Tensor[(1, 1470), float64] */, dtype="float64") /* ty=Tensor[(1, 1470), float64] */;
    %300 = cast(meta[relay.Constant][24] /* ty=Tensor[(968, 1), int64] */, dtype="int64") /* ty=Tensor[(968, 1), int64] */;
    %301 = cast(%var_6295, dtype="float64") /* ty=Tensor[(504), float64] */;
    %302 = cast(meta[relay.Constant][25] /* ty=Tensor[(156), float64] */, dtype="float64") /* ty=Tensor[(156), float64] */;
    %303 = cast(meta[relay.Constant][26] /* ty=Tensor[(378), float64] */, dtype="float64") /* ty=Tensor[(378), float64] */;
    %304 = reshape(%297, newshape=[]) /* ty=float64 */;
    %305 = reshape(%298, newshape=[7, 6, 12]) /* ty=Tensor[(7, 6, 12), float64] */;
    %306 = reshape(%299, newshape=[1470]) /* ty=Tensor[(1470), float64] */;
    %307 = reshape(%300, newshape=[968]) /* ty=Tensor[(968), int64] */;
    %308 = reshape(%301, newshape=[7, 6, 12]) /* ty=Tensor[(7, 6, 12), float64] */;
    %309 = reshape(%302, newshape=[156]) /* ty=Tensor[(156), float64] */;
    %310 = reshape(%303, newshape=[42, 9]) /* ty=Tensor[(42, 9), float64] */;
    %311 = @func_2998(%304, %305, %306, %307, %308, %309, %310) /* ty=(Tensor[(7, 6, 12), float64], Tensor[(14, 7, 15), float64], Tensor[(1470), float64], Tensor[(64), float64], Tensor[(968), int64], Tensor[(64), float64], Tensor[(16, 6, 6), uint8], Tensor[(576), uint8], Tensor[(1, 378), float64], Tensor[(156), float64], Tensor[(42, 9), float64], Tensor[(7, 6, 12), float64]) */;
    %312 = @func_4414() /* ty=Tensor[(2, 3, 12), float64] */;
    %313 = cast(%312, dtype="float64") /* ty=Tensor[(2, 3, 12), float64] */;
    %314 = cast(%var_6313, dtype="float32") /* ty=Tensor[(240), float32] */;
    %315 = cast(%var_6314, dtype="float64") /* ty=Tensor[(704), float64] */;
    %316 = reshape(%313, newshape=[2, 3, 12]) /* ty=Tensor[(2, 3, 12), float64] */;
    %317 = reshape(%314, newshape=[240]) /* ty=Tensor[(240), float32] */;
    %318 = reshape(%315, newshape=[704]) /* ty=Tensor[(704), float64] */;
    %319 = @func_4314(%316, %317, %318) /* ty=(Tensor[(2, 3, 12), int16], Tensor[(5, 3, 15), float64], Tensor[(225), float64], Tensor[(2, 3, 12), bool], Tensor[(704), float64], float32, Tensor[(240), float32], Tensor[(704), float64], Tensor[(2, 3, 12), float32]) */;
    %320 = %311.9;
    %321 = %319.4;
    (%312, %320, -6.44835f64 /* ty=float64 */, %var_6295, meta[relay.Constant][23] /* ty=Tensor[(1, 1470), float64] */, meta[relay.Constant][24] /* ty=Tensor[(968, 1), int64] */, meta[relay.Constant][25] /* ty=Tensor[(156), float64] */, meta[relay.Constant][26] /* ty=Tensor[(378), float64] */, %321, %var_6313, %var_6314)
  };
  %322(%var_6323, %var_6324, %var_6325) /* ty=(Tensor[(2, 3, 12), float64], Tensor[(156), float64], float64, Tensor[(504), float64], Tensor[(1, 1470), float64], Tensor[(968, 1), int64], Tensor[(156), float64], Tensor[(378), float64], Tensor[(704), float64], Tensor[(240), float32], Tensor[(704), float64]) */
}

def @func_8159(%var_8157: Tensor[(10, 8, 16), uint8]) -> (Tensor[(10, 8, 16), bool],) {
  @func_8156(%var_8157) /* ty=(Tensor[(10, 8, 16), bool],) */
}

def @func_7067() -> Tensor[(11, 6, 12), float64] {
  @func_7065() /* ty=Tensor[(11, 6, 12), float64] */
}

def @func_5906(%var_5892: int64) -> (Tensor[(11, 6, 12), float64], Tensor[(11, 6, 12), float32], Tensor[(3, 16, 4), int64], int64, Tensor[(2, 3, 12), float64]) {
  %323 = @func_5812() /* ty=Tensor[(11, 6, 12), float32] */;
  %324 = cast(%323, dtype="float64") /* ty=Tensor[(11, 6, 12), float64] */;
  %325 = cast(%var_5892, dtype="int64") /* ty=int64 */;
  %326 = reshape(%325, newshape=[]) /* ty=int64 */;
  %327 = @func_841(%326) /* ty=(Tensor[(3, 16, 4), int64],) */;
  %328 = @func_4919() /* ty=(Tensor[(2, 3, 12), float64],) */;
  %329 = sinh(%324) /* ty=Tensor[(11, 6, 12), float64] */;
  %330 = @func_5812() /* ty=Tensor[(11, 6, 12), float32] */;
  %331 = %327.0;
  %332 = %328.0;
  (%329, %330, %331, %var_5892, %332)
}

def @func_843(%var_842: int64) -> (Tensor[(3, 16, 4), int64],) {
  %336 = fn (%var_835: int64) -> (Tensor[(3, 16, 4), int64],) {
    %333 = cast(%var_835, dtype="int64") /* ty=int64 */;
    %334 = cast(meta[relay.Constant][27] /* ty=Tensor[(3, 16, 4), int64] */, dtype="int64") /* ty=Tensor[(3, 16, 4), int64] */;
    %335 = bitwise_or(%333, %334) /* ty=Tensor[(3, 16, 4), int64] */;
    (%335,)
  };
  %336(%var_842) /* ty=(Tensor[(3, 16, 4), int64],) */
}

def @func_4249(%var_4247: Tensor[(2, 3, 12), float64]) -> (Tensor[(16, 12, 7), float32], Tensor[(1344), float32], Tensor[(2, 3, 12), bool]) {
  @func_4246(%var_4247) /* ty=(Tensor[(16, 12, 7), float32], Tensor[(1344), float32], Tensor[(2, 3, 12), bool]) */
}

def @func_5526(%var_5513: Tensor[(12, 5, 1), float64]) -> Tensor[(12, 5, 1), float64] {
  %337 = cast(%var_5513, dtype="float64") /* ty=Tensor[(12, 5, 1), float64] */;
  log10(%337) /* ty=Tensor[(12, 5, 1), float64] */
}

def @func_3162(%var_3161: Tensor[(4, 9, 5), uint16]) -> Tensor[(4, 9, 5), bool] {
  %343 = fn (%var_3133: Tensor[(4, 9, 5), uint16]) -> Tensor[(4, 9, 5), bool] {
    %338 = cast(meta[relay.Constant][28] /* ty=Tensor[(4, 9, 1), uint16] */, dtype="bool") /* ty=Tensor[(4, 9, 1), bool] */;
    %339 = cast(%var_3133, dtype="bool") /* ty=Tensor[(4, 9, 5), bool] */;
    %340 = not_equal(%338, %339) /* ty=Tensor[(4, 9, 5), bool] */;
    %341 = cast(meta[relay.Constant][28] /* ty=Tensor[(4, 9, 1), uint16] */, dtype="bool") /* ty=Tensor[(4, 9, 1), bool] */;
    %342 = cast(%340, dtype="bool") /* ty=Tensor[(4, 9, 5), bool] */;
    greater_equal(%341, %342) /* ty=Tensor[(4, 9, 5), bool] */
  };
  %343(%var_3161) /* ty=Tensor[(4, 9, 5), bool] */
}

def @func_5601() -> (Tensor[(2, 3, 12), float64], Tensor[(14, 7, 15), float64], Tensor[(2, 3, 12), float64], Tensor[(1470), float64]) {
  %344 = cast(meta[relay.Constant][29] /* ty=Tensor[(1470), float64] */, dtype="float64") /* ty=Tensor[(1470), float64] */;
  %345 = reshape(%344, newshape=[14, 7, 15]) /* ty=Tensor[(14, 7, 15), float64] */;
  %346 = @func_2891(%345) /* ty=(Tensor[(14, 7, 15), float64], Tensor[(14, 7, 15), float64]) */;
  %347 = cast(meta[relay.Constant][29] /* ty=Tensor[(1470), float64] */, dtype="float64") /* ty=Tensor[(1470), float64] */;
  %348 = @func_4414() /* ty=Tensor[(2, 3, 12), float64] */;
  %349 = %346.1;
  %350 = @func_4861() /* ty=Tensor[(2, 3, 12), float64] */;
  %351 = rsqrt(%347) /* ty=Tensor[(1470), float64] */;
  (%348, %349, %350, %351)
}

def @func_6639() -> Tensor[(2, 3, 12), float64] {
  @func_6637() /* ty=Tensor[(2, 3, 12), float64] */
}

def @func_6675(%var_6651: float64, %var_6660: Tensor[(75, 3), float64]) -> (Tensor[(7, 10, 4), bool], Tensor[(9, 2, 12), float32], Tensor[(1, 72), uint64], Tensor[(75, 3), float64], Tensor[(1344), float32]) {
  %352 = cast(%var_6651, dtype="bool") /* ty=bool */;
  %353 = cast(meta[relay.Constant][30] /* ty=Tensor[(7, 10, 4), float64] */, dtype="bool") /* ty=Tensor[(7, 10, 4), bool] */;
  %354 = cast(meta[relay.Constant][31] /* ty=Tensor[(1, 72), uint64] */, dtype="uint64") /* ty=Tensor[(1, 72), uint64] */;
  %355 = cast(%var_6660, dtype="float64") /* ty=Tensor[(75, 3), float64] */;
  %356 = cast(meta[relay.Constant][32] /* ty=Tensor[(1344), float32] */, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %357 = reshape(%354, newshape=[72]) /* ty=Tensor[(72), uint64] */;
  %358 = reshape(%355, newshape=[225]) /* ty=Tensor[(225), float64] */;
  %359 = reshape(%356, newshape=[1344]) /* ty=Tensor[(1344), float32] */;
  %360 = @func_2523(%357, %358, %359) /* ty=(Tensor[(16, 6, 6), uint8], Tensor[(576), uint8], Tensor[(9, 2, 12), float32], Tensor[(72), uint64], Tensor[(4, 288), uint64], Tensor[(704), float64], Tensor[(5, 3, 15), float64], Tensor[(225), float64], Tensor[(2, 16, 2), bool], Tensor[(64), float64], Tensor[(16, 12, 7), float32], Tensor[(1344), float32], Tensor[(9, 15, 16), float64]) */;
  %361 = less(%352, %353) /* ty=Tensor[(7, 10, 4), bool] */;
  %362 = %360.2;
  (%361, %362, meta[relay.Constant][31] /* ty=Tensor[(1, 72), uint64] */, %var_6660, meta[relay.Constant][32] /* ty=Tensor[(1344), float32] */)
}

def @func_440(%var_436: float32, %var_437: Tensor[(15, 2, 8), float32], %var_438: Tensor[(16, 11, 4), float64], %var_439: Tensor[(72), uint64]) -> (Tensor[(16, 11, 4), float64], Tensor[(72), uint64], Tensor[(1152), uint64], Tensor[(704), float64], Tensor[(15, 2, 8), int16], Tensor[(352, 2), uint32]) {
  @func_434(%var_436, %var_437, %var_438, %var_439) /* ty=(Tensor[(16, 11, 4), float64], Tensor[(72), uint64], Tensor[(1152), uint64], Tensor[(704), float64], Tensor[(15, 2, 8), int16], Tensor[(352, 2), uint32]) */
}

def @func_6904() -> Tensor[(2, 3, 12), float64] {
  @func_6902() /* ty=Tensor[(2, 3, 12), float64] */
}

def @func_434(%var_349: float32, %var_350: Tensor[(15, 2, 8), float32], %var_369: Tensor[(16, 11, 4), float64], %var_399: Tensor[(72), uint64]) -> (Tensor[(16, 11, 4), float64], Tensor[(72), uint64], Tensor[(1152), uint64], Tensor[(704), float64], Tensor[(15, 2, 8), int16], Tensor[(352, 2), uint32]) {
  %363 = cast(%var_399, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %364 = cast(meta[relay.Constant][33] /* ty=Tensor[(1152), uint64] */, dtype="uint64") /* ty=Tensor[(1152), uint64] */;
  %365 = cast(meta[relay.Constant][34] /* ty=Tensor[(352, 2), float64] */, dtype="float64") /* ty=Tensor[(352, 2), float64] */;
  %366 = reshape(%365, newshape=[16, 11, 4]) /* ty=Tensor[(16, 11, 4), float64] */;
  %367 = @func_76(%366) /* ty=(Tensor[(16, 11, 4), float64],) */;
  %368 = %367.0;
  %369 = cast(%368, dtype="float64") /* ty=Tensor[(16, 11, 4), float64] */;
  %370 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(352, 2), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %371 = cast(meta[relay.Constant][34] /* ty=Tensor[(352, 2), float64] */, dtype="float64") /* ty=Tensor[(352, 2), float64] */;
  %372 = dyn.reshape(%369, %370, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %373 = divide(%371, %372) /* ty=Tensor[(352, 2), float64] */;
  %374 = cast(%373, dtype="float64") /* ty=Tensor[(352, 2), float64] */;
  %375 = reshape(%363, newshape=[8, 9, 1]) /* ty=Tensor[(8, 9, 1), uint64] */;
  %376 = reshape(%364, newshape=[8, 9, 16]) /* ty=Tensor[(8, 9, 16), uint64] */;
  %377 = reshape(%374, newshape=[704]) /* ty=Tensor[(704), float64] */;
  %378 = @func_289(%375, %376, %377) /* ty=(Tensor[(8, 9, 16), uint64], Tensor[(16, 11, 4), float64], Tensor[(704), float64], Tensor[(16, 11, 4), float64]) */;
  %379 = cast(%var_399, dtype="uint64") /* ty=Tensor[(72), uint64] */;
  %380 = cast(meta[relay.Constant][33] /* ty=Tensor[(1152), uint64] */, dtype="uint64") /* ty=Tensor[(1152), uint64] */;
  %381 = cast(%373, dtype="float64") /* ty=Tensor[(352, 2), float64] */;
  %382 = reshape(%379, newshape=[8, 9, 1]) /* ty=Tensor[(8, 9, 1), uint64] */;
  %383 = reshape(%380, newshape=[8, 9, 16]) /* ty=Tensor[(8, 9, 16), uint64] */;
  %384 = reshape(%381, newshape=[704]) /* ty=Tensor[(704), float64] */;
  %385 = @func_289(%382, %383, %384) /* ty=(Tensor[(8, 9, 16), uint64], Tensor[(16, 11, 4), float64], Tensor[(704), float64], Tensor[(16, 11, 4), float64]) */;
  %386 = cast(%var_350, dtype="bool") /* ty=Tensor[(15, 2, 8), bool] */;
  %387 = cast(%var_349, dtype="bool") /* ty=bool */;
  %388 = logical_or(%386, %387) /* ty=Tensor[(15, 2, 8), bool] */;
  %389 = cast(%var_349, dtype="bool") /* ty=bool */;
  %390 = cast(%var_350, dtype="bool") /* ty=Tensor[(15, 2, 8), bool] */;
  %391 = greater(%389, %390) /* ty=Tensor[(15, 2, 8), bool] */;
  %392 = cast(%391, dtype="int16") /* ty=Tensor[(15, 2, 8), int16] */;
  %393 = shape_of(%388, dtype="int32") /* ty=Tensor[(3), int32] */;
  %394 = cast(%388, dtype="int16") /* ty=Tensor[(15, 2, 8), int16] */;
  %395 = dyn.reshape(%392, %393, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %396 = cast(%373, dtype="float32") /* ty=Tensor[(352, 2), float32] */;
  %397 = asinh(%396) /* ty=Tensor[(352, 2), float32] */;
  %398 = cast(%var_369, dtype="int64") /* ty=Tensor[(16, 11, 4), int64] */;
  %399 = shape_of(%368, dtype="int32") /* ty=Tensor[(3), int32] */;
  %400 = cast(%368, dtype="int64") /* ty=Tensor[(16, 11, 4), int64] */;
  %401 = dyn.reshape(%398, %399, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %402 = bitwise_and(%400, %401) /* ty=Tensor[(16, 11, 4), int64] */;
  %403 = cast(%402, dtype="uint32") /* ty=Tensor[(16, 11, 4), uint32] */;
  %404 = shape_of(%397, dtype="int32") /* ty=Tensor[(2), int32] */;
  %405 = cast(%397, dtype="uint32") /* ty=Tensor[(352, 2), uint32] */;
  %406 = dyn.reshape(%403, %404, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %407 = %378.3;
  %408 = %385.2;
  %409 = subtract(%394, %395) /* ty=Tensor[(15, 2, 8), int16] */;
  %410 = minimum(%405, %406) /* ty=Tensor[(352, 2), uint32] */;
  (%407, %var_399, meta[relay.Constant][33] /* ty=Tensor[(1152), uint64] */, %408, %409, %410)
}

def @func_5951() -> (Tensor[(2, 3, 12), float64],) {
  @func_5949() /* ty=(Tensor[(2, 3, 12), float64],) */
}

def @func_5623(%var_5620: Tensor[(15, 14, 12), float64]) -> (Tensor[(15, 14, 12), float64],) {
  %411 = cast(%var_5620, dtype="float64") /* ty=Tensor[(15, 14, 12), float64] */;
  %412 = log10(%411) /* ty=Tensor[(15, 14, 12), float64] */;
  (%412,)
}

def @func_4357(%var_4356: Tensor[(1, 8, 2), int32]) -> (Tensor[(78), float32], Tensor[(11, 8, 2), float32]) {
  %427 = fn (%var_4329: Tensor[(1, 8, 2), int32]) -> (Tensor[(78), float32], Tensor[(11, 8, 2), float32]) {
    %413 = cast(meta[relay.Constant][35] /* ty=Tensor[(78), float64] */, dtype="float64") /* ty=Tensor[(78), float64] */;
    %414 = reshape(%413, newshape=[2, 13, 3]) /* ty=Tensor[(2, 13, 3), float64] */;
    %415 = @func_891(%414) /* ty=(Tensor[(2, 13, 3), float64],) */;
    %416 = %415.0;
    %417 = cast(%416, dtype="float32") /* ty=Tensor[(2, 13, 3), float32] */;
    %418 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(78), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %419 = cast(meta[relay.Constant][35] /* ty=Tensor[(78), float64] */, dtype="float32") /* ty=Tensor[(78), float32] */;
    %420 = dyn.reshape(%417, %418, newshape=[]) /* ty=Tensor[(?), float32] */;
    %421 = cast(%var_4329, dtype="bool") /* ty=Tensor[(1, 8, 2), bool] */;
    %422 = cast(meta[relay.Constant][36] /* ty=Tensor[(11, 8, 2), int32] */, dtype="bool") /* ty=Tensor[(11, 8, 2), bool] */;
    %423 = not_equal(%421, %422) /* ty=Tensor[(11, 8, 2), bool] */;
    %424 = cast(%423, dtype="float32") /* ty=Tensor[(11, 8, 2), float32] */;
    %425 = minimum(%419, %420) /* ty=Tensor[(78), float32] */;
    %426 = asinh(%424) /* ty=Tensor[(11, 8, 2), float32] */;
    (%425, %426)
  };
  %427(%var_4356) /* ty=(Tensor[(78), float32], Tensor[(11, 8, 2), float32]) */
}

def @func_6880() -> (Tensor[(2, 3, 12), float64], Tensor[(2, 3, 12), float64], Tensor[(2, 3, 12), float64]) {
  %435 = fn () -> (Tensor[(2, 3, 12), float64], Tensor[(2, 3, 12), float64], Tensor[(2, 3, 12), float64]) {
    %428 = @func_4919() /* ty=(Tensor[(2, 3, 12), float64],) */;
    %429 = %428.0;
    %430 = cast(%429, dtype="float64") /* ty=Tensor[(2, 3, 12), float64] */;
    %431 = cast(%429, dtype="float64") /* ty=Tensor[(2, 3, 12), float64] */;
    %432 = sigmoid(%430) /* ty=Tensor[(2, 3, 12), float64] */;
    %433 = @func_6183() /* ty=Tensor[(2, 3, 12), float64] */;
    %434 = sinh(%431) /* ty=Tensor[(2, 3, 12), float64] */;
    (%432, %433, %434)
  };
  %435() /* ty=(Tensor[(2, 3, 12), float64], Tensor[(2, 3, 12), float64], Tensor[(2, 3, 12), float64]) */
}

def @func_6591(%var_6584: Tensor[(9, 9, 12), uint16]) -> Tensor[(9, 9, 12), bool] {
  %436 = cast(%var_6584, dtype="bool") /* ty=Tensor[(9, 9, 12), bool] */;
  %437 = shape_of(meta[relay.Constant][37] /* ty=Tensor[(9, 9, 12), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %438 = cast(meta[relay.Constant][37] /* ty=Tensor[(9, 9, 12), uint16] */, dtype="bool") /* ty=Tensor[(9, 9, 12), bool] */;
  %439 = dyn.reshape(%436, %437, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%438, %439) /* ty=Tensor[(9, 9, 12), bool] */
}

def @func_6051(%var_5966: Tensor[(13, 14, 1), float64], %var_6023: Tensor[(13, 14, 10), float64]) -> (Tensor[(13, 14, ?), uint32], Tensor[(13, 14, ?), bool], Tensor[(2, 3, 12), float64], Tensor[(78), float64], Tensor[(5, 3, 15), float64], Tensor[(13, 14, 10), int8], Tensor[(13, 14, ?), bool], Tensor[(2, 13, 3), float64], Tensor[(13, 14, 225), uint64]) {
  %440 = cast(%var_5966, dtype="float64") /* ty=Tensor[(13, 14, 1), float64] */;
  %441 = erf(%440) /* ty=Tensor[(13, 14, 1), float64] */;
  %442 = cast(%441, dtype="uint32") /* ty=Tensor[(13, 14, 1), uint32] */;
  %443 = shape_of(%var_5966, dtype="int32") /* ty=Tensor[(3), int32] */;
  %444 = cast(%var_5966, dtype="uint32") /* ty=Tensor[(13, 14, 1), uint32] */;
  %445 = dyn.reshape(%442, %443, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %446 = cast(%441, dtype="float32") /* ty=Tensor[(13, 14, 1), float32] */;
  %447 = sinh(%446) /* ty=Tensor[(13, 14, 1), float32] */;
  %448 = cast(%var_5966, dtype="bool") /* ty=Tensor[(13, 14, 1), bool] */;
  %449 = shape_of(%447, dtype="int32") /* ty=Tensor[(3), int32] */;
  %450 = cast(%447, dtype="bool") /* ty=Tensor[(13, 14, 1), bool] */;
  %451 = dyn.reshape(%448, %449, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %452 = cast(meta[relay.Constant][38] /* ty=Tensor[(78), float64] */, dtype="float64") /* ty=Tensor[(78), float64] */;
  %453 = reshape(%452, newshape=[26, 3]) /* ty=Tensor[(26, 3), float64] */;
  %454 = @func_4848(%453) /* ty=(Tensor[(2, 3, 12), float64], Tensor[(3, 16, 4), int64], Tensor[(4, 176), float64], Tensor[(2, 13, 3), float64], Tensor[(26, 3), float64], Tensor[(1152), float32]) */;
  %455 = cast(meta[relay.Constant][39] /* ty=Tensor[(225), float64] */, dtype="float64") /* ty=Tensor[(225), float64] */;
  %456 = reshape(%455, newshape=[5, 3, 15]) /* ty=Tensor[(5, 3, 15), float64] */;
  %457 = cast(%447, dtype="float64") /* ty=Tensor[(13, 14, 1), float64] */;
  %458 = atan(%457) /* ty=Tensor[(13, 14, 1), float64] */;
  %459 = cast(%458, dtype="int8") /* ty=Tensor[(13, 14, 1), int8] */;
  %460 = cast(%var_6023, dtype="int8") /* ty=Tensor[(13, 14, 10), int8] */;
  %461 = cast(%447, dtype="float32") /* ty=Tensor[(13, 14, 1), float32] */;
  %462 = atanh(%461) /* ty=Tensor[(13, 14, 1), float32] */;
  %463 = cast(%462, dtype="int32") /* ty=Tensor[(13, 14, 1), int32] */;
  %464 = shape_of(%458, dtype="int32") /* ty=Tensor[(3), int32] */;
  %465 = cast(%458, dtype="int32") /* ty=Tensor[(13, 14, 1), int32] */;
  %466 = dyn.reshape(%463, %464, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %467 = bitwise_xor(%465, %466) /* ty=Tensor[(13, 14, ?), int32] */;
  %468 = cast(%467, dtype="bool") /* ty=Tensor[(13, 14, ?), bool] */;
  %469 = shape_of(%458, dtype="int32") /* ty=Tensor[(3), int32] */;
  %470 = cast(%458, dtype="bool") /* ty=Tensor[(13, 14, 1), bool] */;
  %471 = dyn.reshape(%468, %469, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %472 = cast(meta[relay.Constant][38] /* ty=Tensor[(78), float64] */, dtype="float64") /* ty=Tensor[(78), float64] */;
  %473 = reshape(%472, newshape=[2, 13, 3]) /* ty=Tensor[(2, 13, 3), float64] */;
  %474 = @func_891(%473) /* ty=(Tensor[(2, 13, 3), float64],) */;
  %475 = cast(%458, dtype="uint64") /* ty=Tensor[(13, 14, 1), uint64] */;
  %476 = cast(meta[relay.Constant][39] /* ty=Tensor[(225), float64] */, dtype="uint64") /* ty=Tensor[(225), uint64] */;
  %477 = bitwise_or(%444, %445) /* ty=Tensor[(13, 14, ?), uint32] */;
  %478 = greater(%450, %451) /* ty=Tensor[(13, 14, ?), bool] */;
  %479 = %454.0;
  %480 = @func_1384(%456) /* ty=Tensor[(5, 3, 15), float64] */;
  %481 = logical_xor(%459, %460) /* ty=Tensor[(13, 14, 10), int8] */;
  %482 = logical_and(%470, %471) /* ty=Tensor[(13, 14, ?), bool] */;
  %483 = %474.0;
  %484 = left_shift(%475, %476) /* ty=Tensor[(13, 14, 225), uint64] */;
  (%477, %478, %479, meta[relay.Constant][38] /* ty=Tensor[(78), float64] */, %480, %481, %482, %483, %484)
}

def @func_6383(%var_6381: Tensor[(72), uint64], %var_6382: Tensor[(1152), uint64]) -> (Tensor[(11, 6, 12), float32], Tensor[(1152), uint64], Tensor[(704), float64], Tensor[(18, 4), int32]) {
  %499 = fn (%var_6372: Tensor[(72), uint64], %var_6373: Tensor[(1152), uint64]) -> (Tensor[(11, 6, 12), float32], Tensor[(1152), uint64], Tensor[(704), float64], Tensor[(18, 4), int32]) {
    %485 = cast(%var_6372, dtype="uint64") /* ty=Tensor[(72), uint64] */;
    %486 = cast(%var_6373, dtype="uint64") /* ty=Tensor[(1152), uint64] */;
    %487 = cast(meta[relay.Constant][40] /* ty=Tensor[(704), float64] */, dtype="float64") /* ty=Tensor[(704), float64] */;
    %488 = reshape(%485, newshape=[18, 4]) /* ty=Tensor[(18, 4), uint64] */;
    %489 = reshape(%486, newshape=[1152]) /* ty=Tensor[(1152), uint64] */;
    %490 = reshape(%487, newshape=[704]) /* ty=Tensor[(704), float64] */;
    %491 = @func_1109(%488, %489, %490) /* ty=(Tensor[(9, 2, 12), float32], Tensor[(704), float64], Tensor[(18, 4), uint64], Tensor[(1152), uint64], Tensor[(704), float64], Tensor[(3, 16, 4), int64], int64) */;
    %492 = %491.2;
    %493 = cast(%var_6372, dtype="int32") /* ty=Tensor[(72), int32] */;
    %494 = shape_of(%492, dtype="int32") /* ty=Tensor[(2), int32] */;
    %495 = cast(%492, dtype="int32") /* ty=Tensor[(18, 4), int32] */;
    %496 = dyn.reshape(%493, %494, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
    %497 = @func_5812() /* ty=Tensor[(11, 6, 12), float32] */;
    %498 = bitwise_xor(%495, %496) /* ty=Tensor[(18, 4), int32] */;
    (%497, %var_6373, meta[relay.Constant][40] /* ty=Tensor[(704), float64] */, %498)
  };
  %499(%var_6381, %var_6382) /* ty=(Tensor[(11, 6, 12), float32], Tensor[(1152), uint64], Tensor[(704), float64], Tensor[(18, 4), int32]) */
}

def @func_6416() -> Tensor[(2, 3, 12), float64] {
  %500 = @func_5220() /* ty=(Tensor[(2, 3, 12), float64], Tensor[(2, 3, 12), float64]) */;
  %500.0
}

def @func_4752(%var_4751: Tensor[(2, 3, 12), float64]) -> (Tensor[(2, 3, 12), float32],) {
  %508 = fn (%var_4730: Tensor[(2, 3, 12), float64]) -> (Tensor[(2, 3, 12), float32],) {
    %501 = @func_4205() /* ty=(Tensor[(2, 3, 12), float64],) */;
    %502 = %501.0;
    %503 = cast(%var_4730, dtype="float32") /* ty=Tensor[(2, 3, 12), float32] */;
    %504 = shape_of(%502, dtype="int32") /* ty=Tensor[(3), int32] */;
    %505 = cast(%502, dtype="float32") /* ty=Tensor[(2, 3, 12), float32] */;
    %506 = dyn.reshape(%503, %504, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %507 = power(%505, %506) /* ty=Tensor[(2, 3, 12), float32] */;
    (%507,)
  };
  %508(%var_4751) /* ty=(Tensor[(2, 3, 12), float32],) */
}

def @func_6963() -> (Tensor[(2, 3, 12), float64],) {
  @func_6961() /* ty=(Tensor[(2, 3, 12), float64],) */
}

def @func_2894(%var_2892: Tensor[(14, 7, 15), float64]) -> (Tensor[(14, 7, 15), float64], Tensor[(14, 7, 15), float64]) {
  @func_2891(%var_2892) /* ty=(Tensor[(14, 7, 15), float64], Tensor[(14, 7, 15), float64]) */
}

def @func_6153(%var_6150: int16, %var_6151: Tensor[(4, 252), int16], %var_6152: Tensor[(704), float64]) -> (Tensor[(2, 3, 12), float64], Tensor[(12, 7, 12), float32], int16, Tensor[(4, 252), int16], Tensor[(704), float64]) {
  %519 = fn (%var_6139: int16, %var_6140: Tensor[(4, 252), int16], %var_6141: Tensor[(704), float64]) -> (Tensor[(2, 3, 12), float64], Tensor[(12, 7, 12), float32], int16, Tensor[(4, 252), int16], Tensor[(704), float64]) {
    %509 = @func_5541() /* ty=(Tensor[(2, 3, 12), float64],) */;
    %510 = cast(%var_6139, dtype="int16") /* ty=int16 */;
    %511 = cast(%var_6140, dtype="int16") /* ty=Tensor[(4, 252), int16] */;
    %512 = cast(%var_6141, dtype="float64") /* ty=Tensor[(704), float64] */;
    %513 = reshape(%510, newshape=[]) /* ty=int16 */;
    %514 = reshape(%511, newshape=[12, 7, 12]) /* ty=Tensor[(12, 7, 12), int16] */;
    %515 = reshape(%512, newshape=[176, 4]) /* ty=Tensor[(176, 4), float64] */;
    %516 = @func_1243(%513, %514, %515) /* ty=(Tensor[(16, 11, 4), float64], Tensor[(176, 4), float64], Tensor[(12, 7, 12), float32]) */;
    %517 = %509.0;
    %518 = %516.2;
    (%517, %518, %var_6139, %var_6140, %var_6141)
  };
  %519(%var_6150, %var_6151, %var_6152) /* ty=(Tensor[(2, 3, 12), float64], Tensor[(12, 7, 12), float32], int16, Tensor[(4, 252), int16], Tensor[(704), float64]) */
}

def @func_736(%var_734: Tensor[(14, 9, 3), float64], %var_735: Tensor[(14, 9, 3), float64]) -> (Tensor[(14, 9, 3), float64],) {
  %525 = fn (%var_725: Tensor[(14, 9, 3), float64], %var_726: Tensor[(14, 9, 3), float64]) -> (Tensor[(14, 9, 3), float64],) {
    %520 = cast(%var_726, dtype="float64") /* ty=Tensor[(14, 9, 3), float64] */;
    %521 = shape_of(%var_725, dtype="int32") /* ty=Tensor[(3), int32] */;
    %522 = cast(%var_725, dtype="float64") /* ty=Tensor[(14, 9, 3), float64] */;
    %523 = dyn.reshape(%520, %521, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %524 = add(%522, %523) /* ty=Tensor[(14, 9, 3), float64] */;
    (%524,)
  };
  %525(%var_734, %var_735) /* ty=(Tensor[(14, 9, 3), float64],) */
}

def @func_1247(%var_1244: int16, %var_1245: Tensor[(12, 7, 12), int16], %var_1246: Tensor[(176, 4), float64]) -> (Tensor[(16, 11, 4), float64], Tensor[(176, 4), float64], Tensor[(12, 7, 12), float32]) {
  %537 = fn (%var_1224: int16, %var_1225: Tensor[(12, 7, 12), int16], %var_1231: Tensor[(176, 4), float64]) -> (Tensor[(16, 11, 4), float64], Tensor[(176, 4), float64], Tensor[(12, 7, 12), float32]) {
    %526 = cast(%var_1231, dtype="float64") /* ty=Tensor[(176, 4), float64] */;
    %527 = reshape(%526, newshape=[16, 11, 4]) /* ty=Tensor[(16, 11, 4), float64] */;
    %528 = @func_76(%527) /* ty=(Tensor[(16, 11, 4), float64],) */;
    %529 = cast(%var_1224, dtype="int16") /* ty=int16 */;
    %530 = cast(%var_1225, dtype="int16") /* ty=Tensor[(12, 7, 12), int16] */;
    %531 = left_shift(%529, %530) /* ty=Tensor[(12, 7, 12), int16] */;
    %532 = cast(%531, dtype="float64") /* ty=Tensor[(12, 7, 12), float64] */;
    %533 = atan(%532) /* ty=Tensor[(12, 7, 12), float64] */;
    %534 = cast(%533, dtype="float32") /* ty=Tensor[(12, 7, 12), float32] */;
    %535 = %528.0;
    %536 = log(%534) /* ty=Tensor[(12, 7, 12), float32] */;
    (%535, %var_1231, %536)
  };
  %537(%var_1244, %var_1245, %var_1246) /* ty=(Tensor[(16, 11, 4), float64], Tensor[(176, 4), float64], Tensor[(12, 7, 12), float32]) */
}

def @func_2891(%var_2881: Tensor[(14, 7, 15), float64]) -> (Tensor[(14, 7, 15), float64], Tensor[(14, 7, 15), float64]) {
  %538 = cast(meta[relay.Constant][41] /* ty=Tensor[(14, 7, 1), float64] */, dtype="float64") /* ty=Tensor[(14, 7, 1), float64] */;
  %539 = cast(%var_2881, dtype="float64") /* ty=Tensor[(14, 7, 15), float64] */;
  %540 = cast(%var_2881, dtype="float64") /* ty=Tensor[(14, 7, 15), float64] */;
  %541 = mod(%538, %539) /* ty=Tensor[(14, 7, 15), float64] */;
  %542 = asinh(%540) /* ty=Tensor[(14, 7, 15), float64] */;
  (%541, %542)
}

def @func_664(%var_662: Tensor[(2, 16, 2), float64]) -> (Tensor[(2, 16, 2), bool],) {
  @func_661(%var_662) /* ty=(Tensor[(2, 16, 2), bool],) */
}

def @func_893(%var_892: Tensor[(2, 13, 3), float64]) -> (Tensor[(2, 13, 3), float64],) {
  %545 = fn (%var_888: Tensor[(2, 13, 3), float64]) -> (Tensor[(2, 13, 3), float64],) {
    %543 = cast(%var_888, dtype="float64") /* ty=Tensor[(2, 13, 3), float64] */;
    %544 = asin(%543) /* ty=Tensor[(2, 13, 3), float64] */;
    (%544,)
  };
  %545(%var_892) /* ty=(Tensor[(2, 13, 3), float64],) */
}

def @func_6184() -> Tensor[(2, 3, 12), float64] {
  %547 = fn () -> Tensor[(2, 3, 12), float64] {
    %546 = @func_5220() /* ty=(Tensor[(2, 3, 12), float64], Tensor[(2, 3, 12), float64]) */;
    %546.0
  };
  %547() /* ty=Tensor[(2, 3, 12), float64] */
}

def @func_4783() -> (Tensor[(2, 3, 12), float64],) {
  @func_4781() /* ty=(Tensor[(2, 3, 12), float64],) */
}

def @func_7076() -> Tensor[(2, 3, 12), float64] {
  %548 = @func_6699() /* ty=(Tensor[(2, 3, 12), float64],) */;
  %548.0
}

def @func_7340(%var_7336: Tensor[(6, 10, 2), float64], %var_7337: Tensor[(504), float64], %var_7338: Tensor[(968), int64], %var_7339: Tensor[(156), float64]) -> (Tensor[(6, 10, 2), float64], Tensor[(2, 3, 12), float64], Tensor[(16, 6, 6), uint8], float64, Tensor[(504), float64], Tensor[(1470), float64], Tensor[(968), int64], Tensor[(156), float64], Tensor[(378), float64]) {
  @func_7334(%var_7336, %var_7337, %var_7338, %var_7339) /* ty=(Tensor[(6, 10, 2), float64], Tensor[(2, 3, 12), float64], Tensor[(16, 6, 6), uint8], float64, Tensor[(504), float64], Tensor[(1470), float64], Tensor[(968), int64], Tensor[(156), float64], Tensor[(378), float64]) */
}

def @func_6570(%var_6568: Tensor[(3, 1, 16), float32]) -> Tensor[(3, 1, 16), float32] {
  @func_6567(%var_6568) /* ty=Tensor[(3, 1, 16), float32] */
}

def @func_5673(%var_5644: Tensor[(704), float64]) -> (Tensor[(2, 3, 12), float64], Tensor[(1, 1152), uint64], Tensor[(704), float64], Tensor[(18, 4), int8]) {
  %549 = @func_4539() /* ty=(Tensor[(2, 3, 12), float64],) */;
  %550 = %549.0;
  %551 = cast(%550, dtype="uint64") /* ty=Tensor[(2, 3, 12), uint64] */;
  %552 = cast(meta[relay.Constant][42] /* ty=Tensor[(1, 1152), uint64] */, dtype="uint64") /* ty=Tensor[(1, 1152), uint64] */;
  %553 = cast(%var_5644, dtype="float64") /* ty=Tensor[(704), float64] */;
  %554 = reshape(%551, newshape=[18, 4]) /* ty=Tensor[(18, 4), uint64] */;
  %555 = reshape(%552, newshape=[1152]) /* ty=Tensor[(1152), uint64] */;
  %556 = reshape(%553, newshape=[704]) /* ty=Tensor[(704), float64] */;
  %557 = @func_1109(%554, %555, %556) /* ty=(Tensor[(9, 2, 12), float32], Tensor[(704), float64], Tensor[(18, 4), uint64], Tensor[(1152), uint64], Tensor[(704), float64], Tensor[(3, 16, 4), int64], int64) */;
  %558 = %557.2;
  %559 = cast(%558, dtype="float32") /* ty=Tensor[(18, 4), float32] */;
  %560 = erf(%559) /* ty=Tensor[(18, 4), float32] */;
  %561 = cast(%558, dtype="int8") /* ty=Tensor[(18, 4), int8] */;
  %562 = shape_of(%560, dtype="int32") /* ty=Tensor[(2), int32] */;
  %563 = cast(%560, dtype="int8") /* ty=Tensor[(18, 4), int8] */;
  %564 = dyn.reshape(%561, %562, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %565 = left_shift(%563, %564) /* ty=Tensor[(18, 4), int8] */;
  (%550, meta[relay.Constant][42] /* ty=Tensor[(1, 1152), uint64] */, %var_5644, %565)
}

def @func_5542() -> (Tensor[(2, 3, 12), float64],) {
  %568 = fn () -> (Tensor[(2, 3, 12), float64],) {
    %566 = @func_4539() /* ty=(Tensor[(2, 3, 12), float64],) */;
    %567 = %566.0;
    (%567,)
  };
  %568() /* ty=(Tensor[(2, 3, 12), float64],) */
}

def @func_6700() -> (Tensor[(2, 3, 12), float64],) {
  %571 = fn () -> (Tensor[(2, 3, 12), float64],) {
    %569 = @func_4205() /* ty=(Tensor[(2, 3, 12), float64],) */;
    %570 = %569.0;
    (%570,)
  };
  %571() /* ty=(Tensor[(2, 3, 12), float64],) */
}

def @func_6902() -> Tensor[(2, 3, 12), float64] {
  @func_4414() /* ty=Tensor[(2, 3, 12), float64] */
}

def @func_4206() -> (Tensor[(2, 3, 12), float64],) {
  %574 = fn () -> (Tensor[(2, 3, 12), float64],) {
    %572 = cast(meta[relay.Constant][43] /* ty=Tensor[(2, 3, 12), float64] */, dtype="float64") /* ty=Tensor[(2, 3, 12), float64] */;
    %573 = asinh(%572) /* ty=Tensor[(2, 3, 12), float64] */;
    (%573,)
  };
  %574() /* ty=(Tensor[(2, 3, 12), float64],) */
}

def @func_4415() -> Tensor[(2, 3, 12), float64] {
  %576 = fn () -> Tensor[(2, 3, 12), float64] {
    %575 = @func_4205() /* ty=(Tensor[(2, 3, 12), float64],) */;
    %575.0
  };
  %576() /* ty=Tensor[(2, 3, 12), float64] */
}

def @func_7633() -> (Tensor[(2, 3, 12), float64],) {
  %579 = fn () -> (Tensor[(2, 3, 12), float64],) {
    %577 = @func_4919() /* ty=(Tensor[(2, 3, 12), float64],) */;
    %578 = %577.0;
    (%578,)
  };
  %579() /* ty=(Tensor[(2, 3, 12), float64],) */
}

def @func_7019() -> (Tensor[(11, 6, 12), float32], Tensor[(15, 14, 12), float64], Tensor[(2520), float64], Tensor[(26, 3), float64], Tensor[(78, 1), float64]) {
  @func_7017() /* ty=(Tensor[(11, 6, 12), float32], Tensor[(15, 14, 12), float64], Tensor[(2520), float64], Tensor[(26, 3), float64], Tensor[(78, 1), float64]) */
}

def @func_7017() -> (Tensor[(11, 6, 12), float32], Tensor[(15, 14, 12), float64], Tensor[(2520), float64], Tensor[(26, 3), float64], Tensor[(78, 1), float64]) {
  %580 = cast(meta[relay.Constant][44] /* ty=Tensor[(2520), float64] */, dtype="float64") /* ty=Tensor[(2520), float64] */;
  %581 = reshape(%580, newshape=[15, 14, 12]) /* ty=Tensor[(15, 14, 12), float64] */;
  %582 = @func_5623(%581) /* ty=(Tensor[(15, 14, 12), float64],) */;
  %583 = cast(meta[relay.Constant][45] /* ty=Tensor[(78, 1), float64] */, dtype="float64") /* ty=Tensor[(78, 1), float64] */;
  %584 = reshape(%583, newshape=[26, 3]) /* ty=Tensor[(26, 3), float64] */;
  %585 = @func_4848(%584) /* ty=(Tensor[(2, 3, 12), float64], Tensor[(3, 16, 4), int64], Tensor[(4, 176), float64], Tensor[(2, 13, 3), float64], Tensor[(26, 3), float64], Tensor[(1152), float32]) */;
  %586 = @func_5812() /* ty=Tensor[(11, 6, 12), float32] */;
  %587 = %582.0;
  %588 = %585.4;
  (%586, %587, meta[relay.Constant][44] /* ty=Tensor[(2520), float64] */, %588, meta[relay.Constant][45] /* ty=Tensor[(78, 1), float64] */)
}

def @func_7786() -> (Tensor[(2, 3, 12), float64],) {
  %589 = @func_6076() /* ty=Tensor[(2, 3, 12), float64] */;
  (%589,)
}

def @func_7788() -> (Tensor[(2, 3, 12), float64],) {
  @func_7786() /* ty=(Tensor[(2, 3, 12), float64],) */
}

def @func_4318(%var_4315: Tensor[(2, 3, 12), float64], %var_4316: Tensor[(240), float32], %var_4317: Tensor[(704), float64]) -> (Tensor[(2, 3, 12), int16], Tensor[(5, 3, 15), float64], Tensor[(225), float64], Tensor[(2, 3, 12), bool], Tensor[(704), float64], float32, Tensor[(240), float32], Tensor[(704), float64], Tensor[(2, 3, 12), float32]) {
  %620 = fn (%var_4255: Tensor[(2, 3, 12), float64], %var_4288: Tensor[(240), float32], %var_4289: Tensor[(704), float64]) -> (Tensor[(2, 3, 12), int16], Tensor[(5, 3, 15), float64], Tensor[(225), float64], Tensor[(2, 3, 12), bool], Tensor[(704), float64], float32, Tensor[(240), float32], Tensor[(704), float64], Tensor[(2, 3, 12), float32]) {
    %590 = @func_4205() /* ty=(Tensor[(2, 3, 12), float64],) */;
    %591 = %590.0;
    %592 = cast(%var_4255, dtype="int16") /* ty=Tensor[(2, 3, 12), int16] */;
    %593 = shape_of(%591, dtype="int32") /* ty=Tensor[(3), int32] */;
    %594 = cast(%591, dtype="int16") /* ty=Tensor[(2, 3, 12), int16] */;
    %595 = dyn.reshape(%592, %593, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %596 = cast(meta[relay.Constant][46] /* ty=Tensor[(225), float64] */, dtype="float64") /* ty=Tensor[(225), float64] */;
    %597 = reshape(%596, newshape=[5, 3, 15]) /* ty=Tensor[(5, 3, 15), float64] */;
    %598 = right_shift(%594, %595) /* ty=Tensor[(2, 3, 12), int16] */;
    %599 = cast(%598, dtype="float64") /* ty=Tensor[(2, 3, 12), float64] */;
    %600 = reshape(%599, newshape=[2, 3, 12]) /* ty=Tensor[(2, 3, 12), float64] */;
    %601 = @func_4246(%600) /* ty=(Tensor[(16, 12, 7), float32], Tensor[(1344), float32], Tensor[(2, 3, 12), bool]) */;
    %602 = cast(8.75494f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %603 = cast(%var_4288, dtype="float32") /* ty=Tensor[(240), float32] */;
    %604 = cast(%var_4289, dtype="float64") /* ty=Tensor[(704), float64] */;
    %605 = cast(%var_4255, dtype="uint64") /* ty=Tensor[(2, 3, 12), uint64] */;
    %606 = reshape(%602, newshape=[]) /* ty=float32 */;
    %607 = reshape(%603, newshape=[15, 2, 8]) /* ty=Tensor[(15, 2, 8), float32] */;
    %608 = reshape(%604, newshape=[16, 11, 4]) /* ty=Tensor[(16, 11, 4), float64] */;
    %609 = reshape(%605, newshape=[72]) /* ty=Tensor[(72), uint64] */;
    %610 = @func_434(%606, %607, %608, %609) /* ty=(Tensor[(16, 11, 4), float64], Tensor[(72), uint64], Tensor[(1152), uint64], Tensor[(704), float64], Tensor[(15, 2, 8), int16], Tensor[(352, 2), uint32]) */;
    %611 = cast(%591, dtype="float64") /* ty=Tensor[(2, 3, 12), float64] */;
    %612 = atanh(%611) /* ty=Tensor[(2, 3, 12), float64] */;
    %613 = cast(%612, dtype="float64") /* ty=Tensor[(2, 3, 12), float64] */;
    %614 = cos(%613) /* ty=Tensor[(2, 3, 12), float64] */;
    %615 = cast(%614, dtype="float32") /* ty=Tensor[(2, 3, 12), float32] */;
    %616 = @func_1384(%597) /* ty=Tensor[(5, 3, 15), float64] */;
    %617 = %601.2;
    %618 = %610.3;
    %619 = sin(%615) /* ty=Tensor[(2, 3, 12), float32] */;
    (%598, %616, meta[relay.Constant][46] /* ty=Tensor[(225), float64] */, %617, %618, 8.75494f /* ty=float32 */, %var_4288, %var_4289, %619)
  };
  %620(%var_4315, %var_4316, %var_4317) /* ty=(Tensor[(2, 3, 12), int16], Tensor[(5, 3, 15), float64], Tensor[(225), float64], Tensor[(2, 3, 12), bool], Tensor[(704), float64], float32, Tensor[(240), float32], Tensor[(704), float64], Tensor[(2, 3, 12), float32]) */
}

def @func_4863() -> Tensor[(2, 3, 12), float64] {
  @func_4861() /* ty=Tensor[(2, 3, 12), float64] */
}

def @func_4920() -> (Tensor[(2, 3, 12), float64],) {
  %623 = fn () -> (Tensor[(2, 3, 12), float64],) {
    %621 = @func_4781() /* ty=(Tensor[(2, 3, 12), float64],) */;
    %622 = %621.0;
    (%622,)
  };
  %623() /* ty=(Tensor[(2, 3, 12), float64],) */
}

def @func_6078() -> Tensor[(2, 3, 12), float64] {
  @func_6076() /* ty=Tensor[(2, 3, 12), float64] */
}

def @func_8319() -> (Tensor[(2, 3, 12), float64],) {
  %626 = fn () -> (Tensor[(2, 3, 12), float64],) {
    %624 = @func_5498() /* ty=(Tensor[(2, 3, 12), float64],) */;
    %625 = %624.0;
    (%625,)
  };
  %626() /* ty=(Tensor[(2, 3, 12), float64],) */
}

def @func_1386(%var_1385: Tensor[(5, 3, 15), float64]) -> Tensor[(5, 3, 15), float64] {
  %631 = fn (%var_1373: Tensor[(5, 3, 15), float64]) -> Tensor[(5, 3, 15), float64] {
    %627 = cast(meta[relay.Constant][47] /* ty=Tensor[(5, 3, 15), float64] */, dtype="float64") /* ty=Tensor[(5, 3, 15), float64] */;
    %628 = shape_of(%var_1373, dtype="int32") /* ty=Tensor[(3), int32] */;
    %629 = cast(%var_1373, dtype="float64") /* ty=Tensor[(5, 3, 15), float64] */;
    %630 = dyn.reshape(%627, %628, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    mod(%629, %630) /* ty=Tensor[(5, 3, 15), float64] */
  };
  %631(%var_1385) /* ty=Tensor[(5, 3, 15), float64] */
}

def @func_7078() -> Tensor[(2, 3, 12), float64] {
  @func_7076() /* ty=Tensor[(2, 3, 12), float64] */
}

def @func_8090(%var_8045: float32, %var_8046: Tensor[(240), float32], %var_8047: Tensor[(352, 2), float64], %var_8053: Tensor[(2, 3, 12), float64], %var_8065: Tensor[(968), int64], %var_8066: Tensor[(64), float64]) -> (Tensor[(2, 3, 12), float64], Tensor[(72), uint64], float32, Tensor[(240), float32], Tensor[(352, 2), float64], Tensor[(2, 3, 12), int32], Tensor[(11, 8, 11), int64], Tensor[(64), float64], Tensor[(15, 14, 12), float64], Tensor[(2520), float64], Tensor[(968), float64]) {
  %632 = cast(%var_8045, dtype="float32") /* ty=float32 */;
  %633 = cast(%var_8046, dtype="float32") /* ty=Tensor[(240), float32] */;
  %634 = cast(%var_8047, dtype="float64") /* ty=Tensor[(352, 2), float64] */;
  %635 = @func_7110() /* ty=Tensor[(2, 3, 12), float64] */;
  %636 = cast(%635, dtype="uint64") /* ty=Tensor[(2, 3, 12), uint64] */;
  %637 = reshape(%632, newshape=[]) /* ty=float32 */;
  %638 = reshape(%633, newshape=[15, 2, 8]) /* ty=Tensor[(15, 2, 8), float32] */;
  %639 = reshape(%634, newshape=[16, 11, 4]) /* ty=Tensor[(16, 11, 4), float64] */;
  %640 = reshape(%636, newshape=[72]) /* ty=Tensor[(72), uint64] */;
  %641 = @func_434(%637, %638, %639, %640) /* ty=(Tensor[(16, 11, 4), float64], Tensor[(72), uint64], Tensor[(1152), uint64], Tensor[(704), float64], Tensor[(15, 2, 8), int16], Tensor[(352, 2), uint32]) */;
  %642 = @func_4919() /* ty=(Tensor[(2, 3, 12), float64],) */;
  %643 = %642.0;
  %644 = cast(%var_8053, dtype="int32") /* ty=Tensor[(2, 3, 12), int32] */;
  %645 = shape_of(%643, dtype="int32") /* ty=Tensor[(3), int32] */;
  %646 = cast(%643, dtype="int32") /* ty=Tensor[(2, 3, 12), int32] */;
  %647 = dyn.reshape(%644, %645, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %648 = cast(%var_8065, dtype="int64") /* ty=Tensor[(968), int64] */;
  %649 = cast(%var_8065, dtype="int64") /* ty=Tensor[(968), int64] */;
  %650 = cast(%var_8066, dtype="float64") /* ty=Tensor[(64), float64] */;
  %651 = reshape(%648, newshape=[11, 8, 11]) /* ty=Tensor[(11, 8, 11), int64] */;
  %652 = reshape(%649, newshape=[11, 8, 11]) /* ty=Tensor[(11, 8, 11), int64] */;
  %653 = reshape(%650, newshape=[64]) /* ty=Tensor[(64), float64] */;
  %654 = @func_1623(%651, %652, %653) /* ty=(Tensor[(11, 8, 11), int64], Tensor[(2, 16, 2), bool], Tensor[(64), float64]) */;
  %655 = cast(meta[relay.Constant][48] /* ty=Tensor[(2520), float64] */, dtype="float64") /* ty=Tensor[(2520), float64] */;
  %656 = reshape(%655, newshape=[15, 14, 12]) /* ty=Tensor[(15, 14, 12), float64] */;
  %657 = @func_5623(%656) /* ty=(Tensor[(15, 14, 12), float64],) */;
  %658 = cast(%var_8065, dtype="float64") /* ty=Tensor[(968), float64] */;
  %659 = %641.1;
  %660 = bitwise_or(%646, %647) /* ty=Tensor[(2, 3, 12), int32] */;
  %661 = %654.0;
  %662 = %657.0;
  %663 = log(%658) /* ty=Tensor[(968), float64] */;
  (%635, %659, %var_8045, %var_8046, %var_8047, %660, %661, %var_8066, %662, meta[relay.Constant][48] /* ty=Tensor[(2520), float64] */, %663)
}

def @func_5324(%var_5322: Tensor[(2, 3, 12), float64]) -> (Tensor[(2, 3, 12), bool],) {
  @func_5321(%var_5322) /* ty=(Tensor[(2, 3, 12), bool],) */
}

def @main(%var_8337: Tensor[(13, 1, 11), float64]) -> (Tensor[(13, 1, 11), float64],) {
  %664 = cast(%var_8337, dtype="float64") /* ty=Tensor[(13, 1, 11), float64] */;
  %665 = sinh(%664) /* ty=Tensor[(13, 1, 11), float64] */;
  (%665,)
}

def @func_5909(%var_5907: int64) -> (Tensor[(11, 6, 12), float64], Tensor[(11, 6, 12), float32], Tensor[(3, 16, 4), int64], int64, Tensor[(2, 3, 12), float64]) {
  @func_5906(%var_5907) /* ty=(Tensor[(11, 6, 12), float64], Tensor[(11, 6, 12), float32], Tensor[(3, 16, 4), int64], int64, Tensor[(2, 3, 12), float64]) */
}

def @func_7110() -> Tensor[(2, 3, 12), float64] {
  %666 = @func_4205() /* ty=(Tensor[(2, 3, 12), float64],) */;
  %666.0
}

def @func_6120(%var_6119: Tensor[(8, 4, 11), bool]) -> Tensor[(8, 4, 11), bool] {
  %671 = fn (%var_6107: Tensor[(8, 4, 11), bool]) -> Tensor[(8, 4, 11), bool] {
    %667 = cast(meta[relay.Constant][49] /* ty=Tensor[(8, 4, 11), bool] */, dtype="bool") /* ty=Tensor[(8, 4, 11), bool] */;
    %668 = shape_of(%var_6107, dtype="int32") /* ty=Tensor[(3), int32] */;
    %669 = cast(%var_6107, dtype="bool") /* ty=Tensor[(8, 4, 11), bool] */;
    %670 = dyn.reshape(%667, %668, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    logical_or(%669, %670) /* ty=Tensor[(8, 4, 11), bool] */
  };
  %671(%var_6119) /* ty=Tensor[(8, 4, 11), bool] */
}

def @func_2528(%var_2525: Tensor[(72), uint64], %var_2526: Tensor[(225), float64], %var_2527: Tensor[(1344), float32]) -> (Tensor[(16, 6, 6), uint8], Tensor[(576), uint8], Tensor[(9, 2, 12), float32], Tensor[(72), uint64], Tensor[(4, 288), uint64], Tensor[(704), float64], Tensor[(5, 3, 15), float64], Tensor[(225), float64], Tensor[(2, 16, 2), bool], Tensor[(64), float64], Tensor[(16, 12, 7), float32], Tensor[(1344), float32], Tensor[(9, 15, 16), float64]) {
  @func_2523(%var_2525, %var_2526, %var_2527) /* ty=(Tensor[(16, 6, 6), uint8], Tensor[(576), uint8], Tensor[(9, 2, 12), float32], Tensor[(72), uint64], Tensor[(4, 288), uint64], Tensor[(704), float64], Tensor[(5, 3, 15), float64], Tensor[(225), float64], Tensor[(2, 16, 2), bool], Tensor[(64), float64], Tensor[(16, 12, 7), float32], Tensor[(1344), float32], Tensor[(9, 15, 16), float64]) */
}

def @func_6950(%var_6948: Tensor[(3, 4, 12), float64], %var_6949: Tensor[(3, 4, 12), float64]) -> (Tensor[(3, 4, 12), float64],) {
  @func_6946(%var_6948, %var_6949) /* ty=(Tensor[(3, 4, 12), float64],) */
}

def @func_5676(%var_5674: Tensor[(704), float64]) -> (Tensor[(2, 3, 12), float64], Tensor[(1, 1152), uint64], Tensor[(704), float64], Tensor[(18, 4), int8]) {
  @func_5673(%var_5674) /* ty=(Tensor[(2, 3, 12), float64], Tensor[(1, 1152), uint64], Tensor[(704), float64], Tensor[(18, 4), int8]) */
}

def @func_8156(%var_8137: Tensor[(10, 8, 16), uint8]) -> (Tensor[(10, 8, 16), bool],) {
  %672 = cast(meta[relay.Constant][50] /* ty=Tensor[(1, 8, 16), uint8] */, dtype="bool") /* ty=Tensor[(1, 8, 16), bool] */;
  %673 = cast(%var_8137, dtype="bool") /* ty=Tensor[(10, 8, 16), bool] */;
  %674 = greater_equal(%672, %673) /* ty=Tensor[(10, 8, 16), bool] */;
  (%674,)
}

def @func_6679(%var_6677: float64, %var_6678: Tensor[(75, 3), float64]) -> (Tensor[(7, 10, 4), bool], Tensor[(9, 2, 12), float32], Tensor[(1, 72), uint64], Tensor[(75, 3), float64], Tensor[(1344), float32]) {
  @func_6675(%var_6677, %var_6678) /* ty=(Tensor[(7, 10, 4), bool], Tensor[(9, 2, 12), float32], Tensor[(1, 72), uint64], Tensor[(75, 3), float64], Tensor[(1344), float32]) */
}

def @func_1477(%var_1476: Tensor[(16, 12, 7), float32]) -> Tensor[(16, 12, 7), float32] {
  %676 = fn (%var_1472: Tensor[(16, 12, 7), float32]) -> Tensor[(16, 12, 7), float32] {
    %675 = cast(%var_1472, dtype="float32") /* ty=Tensor[(16, 12, 7), float32] */;
    sinh(%675) /* ty=Tensor[(16, 12, 7), float32] */
  };
  %676(%var_1476) /* ty=Tensor[(16, 12, 7), float32] */
}

def @func_7251(%var_7247: float64, %var_7248: Tensor[(242, 4), int64], %var_7249: Tensor[(2, 3, 12), float32], %var_7250: Tensor[(704), float64]) -> (Tensor[(78), float64], Tensor[(1470), float64], Tensor[(36, 14), float64], Tensor[(1470), float64], Tensor[(242, 4), int64], Tensor[(156), float64], Tensor[(42, 9), float64], Tensor[(2, 3, 12), bool], Tensor[(2, 13, 3), float64], Tensor[(378), float64], Tensor[(240), float32], Tensor[(704), float64], Tensor[(2, 3, 12), bool], Tensor[(1344), float32], Tensor[(3, 16, 4), int64]) {
  %731 = fn (%var_7157: float64, %var_7160: Tensor[(242, 4), int64], %var_7200: Tensor[(2, 3, 12), float32], %var_7220: Tensor[(704), float64]) -> (Tensor[(78), float64], Tensor[(1470), float64], Tensor[(36, 14), float64], Tensor[(1470), float64], Tensor[(242, 4), int64], Tensor[(156), float64], Tensor[(42, 9), float64], Tensor[(2, 3, 12), bool], Tensor[(2, 13, 3), float64], Tensor[(378), float64], Tensor[(240), float32], Tensor[(704), float64], Tensor[(2, 3, 12), bool], Tensor[(1344), float32], Tensor[(3, 16, 4), int64]) {
    %677 = cast(%var_7157, dtype="float64") /* ty=float64 */;
    %678 = cast(meta[relay.Constant][52] /* ty=Tensor[(36, 14), float64] */, dtype="float64") /* ty=Tensor[(36, 14), float64] */;
    %679 = cast(meta[relay.Constant][53] /* ty=Tensor[(1470), float64] */, dtype="float64") /* ty=Tensor[(1470), float64] */;
    %680 = cast(%var_7160, dtype="int64") /* ty=Tensor[(242, 4), int64] */;
    %681 = cast(meta[relay.Constant][52] /* ty=Tensor[(36, 14), float64] */, dtype="float64") /* ty=Tensor[(36, 14), float64] */;
    %682 = cast(meta[relay.Constant][54] /* ty=Tensor[(156), float64] */, dtype="float64") /* ty=Tensor[(156), float64] */;
    %683 = cast(meta[relay.Constant][55] /* ty=Tensor[(42, 9), float64] */, dtype="float64") /* ty=Tensor[(42, 9), float64] */;
    %684 = reshape(%677, newshape=[]) /* ty=float64 */;
    %685 = reshape(%678, newshape=[7, 6, 12]) /* ty=Tensor[(7, 6, 12), float64] */;
    %686 = reshape(%679, newshape=[1470]) /* ty=Tensor[(1470), float64] */;
    %687 = reshape(%680, newshape=[968]) /* ty=Tensor[(968), int64] */;
    %688 = reshape(%681, newshape=[7, 6, 12]) /* ty=Tensor[(7, 6, 12), float64] */;
    %689 = reshape(%682, newshape=[156]) /* ty=Tensor[(156), float64] */;
    %690 = reshape(%683, newshape=[42, 9]) /* ty=Tensor[(42, 9), float64] */;
    %691 = @func_2998(%684, %685, %686, %687, %688, %689, %690) /* ty=(Tensor[(7, 6, 12), float64], Tensor[(14, 7, 15), float64], Tensor[(1470), float64], Tensor[(64), float64], Tensor[(968), int64], Tensor[(64), float64], Tensor[(16, 6, 6), uint8], Tensor[(576), uint8], Tensor[(1, 378), float64], Tensor[(156), float64], Tensor[(42, 9), float64], Tensor[(7, 6, 12), float64]) */;
    %692 = @func_6902() /* ty=Tensor[(2, 3, 12), float64] */;
    %693 = cast(%692, dtype="float32") /* ty=Tensor[(2, 3, 12), float32] */;
    %694 = cosh(%693) /* ty=Tensor[(2, 3, 12), float32] */;
    %695 = cast(%var_7200, dtype="bool") /* ty=Tensor[(2, 3, 12), bool] */;
    %696 = shape_of(%694, dtype="int32") /* ty=Tensor[(3), int32] */;
    %697 = cast(%694, dtype="bool") /* ty=Tensor[(2, 3, 12), bool] */;
    %698 = dyn.reshape(%695, %696, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %699 = cast(meta[relay.Constant][51] /* ty=Tensor[(78), float64] */, dtype="float64") /* ty=Tensor[(78), float64] */;
    %700 = reshape(%699, newshape=[2, 13, 3]) /* ty=Tensor[(2, 13, 3), float64] */;
    %701 = @func_891(%700) /* ty=(Tensor[(2, 13, 3), float64],) */;
    %702 = %701.0;
    %703 = cast(%702, dtype="float64") /* ty=Tensor[(2, 13, 3), float64] */;
    %704 = cast(%var_7157, dtype="float64") /* ty=float64 */;
    %705 = cast(meta[relay.Constant][52] /* ty=Tensor[(36, 14), float64] */, dtype="float64") /* ty=Tensor[(36, 14), float64] */;
    %706 = cast(meta[relay.Constant][56] /* ty=Tensor[(240), float32] */, dtype="float32") /* ty=Tensor[(240), float32] */;
    %707 = cast(%var_7220, dtype="float64") /* ty=Tensor[(704), float64] */;
    %708 = reshape(%705, newshape=[504]) /* ty=Tensor[(504), float64] */;
    %709 = reshape(%706, newshape=[240]) /* ty=Tensor[(240), float32] */;
    %710 = reshape(%707, newshape=[704]) /* ty=Tensor[(704), float64] */;
    %711 = @func_6322(%708, %709, %710) /* ty=(Tensor[(2, 3, 12), float64], Tensor[(156), float64], float64, Tensor[(504), float64], Tensor[(1, 1470), float64], Tensor[(968, 1), int64], Tensor[(156), float64], Tensor[(378), float64], Tensor[(704), float64], Tensor[(240), float32], Tensor[(704), float64]) */;
    %712 = cast(%692, dtype="float32") /* ty=Tensor[(2, 3, 12), float32] */;
    %713 = sqrt(%712) /* ty=Tensor[(2, 3, 12), float32] */;
    %714 = cast(%692, dtype="bool") /* ty=Tensor[(2, 3, 12), bool] */;
    %715 = shape_of(%713, dtype="int32") /* ty=Tensor[(3), int32] */;
    %716 = cast(%713, dtype="bool") /* ty=Tensor[(2, 3, 12), bool] */;
    %717 = dyn.reshape(%714, %715, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %718 = cast(%694, dtype="float64") /* ty=Tensor[(2, 3, 12), float64] */;
    %719 = reshape(%718, newshape=[2, 3, 12]) /* ty=Tensor[(2, 3, 12), float64] */;
    %720 = @func_4246(%719) /* ty=(Tensor[(16, 12, 7), float32], Tensor[(1344), float32], Tensor[(2, 3, 12), bool]) */;
    %721 = cast(%var_7157, dtype="int64") /* ty=int64 */;
    %722 = reshape(%721, newshape=[]) /* ty=int64 */;
    %723 = @func_841(%722) /* ty=(Tensor[(3, 16, 4), int64],) */;
    %724 = %691.2;
    %725 = logical_or(%697, %698) /* ty=Tensor[(2, 3, 12), bool] */;
    %726 = mod(%703, %704) /* ty=Tensor[(2, 13, 3), float64] */;
    %727 = %711.7;
    %728 = less_equal(%716, %717) /* ty=Tensor[(2, 3, 12), bool] */;
    %729 = %720.1;
    %730 = %723.0;
    (meta[relay.Constant][51] /* ty=Tensor[(78), float64] */, %724, meta[relay.Constant][52] /* ty=Tensor[(36, 14), float64] */, meta[relay.Constant][53] /* ty=Tensor[(1470), float64] */, %var_7160, meta[relay.Constant][54] /* ty=Tensor[(156), float64] */, meta[relay.Constant][55] /* ty=Tensor[(42, 9), float64] */, %725, %726, %727, meta[relay.Constant][56] /* ty=Tensor[(240), float32] */, %var_7220, %728, %729, %730)
  };
  %731(%var_7247, %var_7248, %var_7249, %var_7250) /* ty=(Tensor[(78), float64], Tensor[(1470), float64], Tensor[(36, 14), float64], Tensor[(1470), float64], Tensor[(242, 4), int64], Tensor[(156), float64], Tensor[(42, 9), float64], Tensor[(2, 3, 12), bool], Tensor[(2, 13, 3), float64], Tensor[(378), float64], Tensor[(240), float32], Tensor[(704), float64], Tensor[(2, 3, 12), bool], Tensor[(1344), float32], Tensor[(3, 16, 4), int64]) */
}

def @func_5603() -> (Tensor[(2, 3, 12), float64], Tensor[(14, 7, 15), float64], Tensor[(2, 3, 12), float64], Tensor[(1470), float64]) {
  @func_5601() /* ty=(Tensor[(2, 3, 12), float64], Tensor[(14, 7, 15), float64], Tensor[(2, 3, 12), float64], Tensor[(1470), float64]) */
}

def @func_5095() -> (Tensor[(2, 3, 12), float64], Tensor[(3, 16, 4), int64], int64, Tensor[(14, 9, 3), float64], Tensor[(378), float64], Tensor[(2, 3, 12), float64], Tensor[(5, 3, 15), float64], Tensor[(225), float64]) {
  %748 = fn () -> (Tensor[(2, 3, 12), float64], Tensor[(3, 16, 4), int64], int64, Tensor[(14, 9, 3), float64], Tensor[(378), float64], Tensor[(2, 3, 12), float64], Tensor[(5, 3, 15), float64], Tensor[(225), float64]) {
    %732 = @func_4539() /* ty=(Tensor[(2, 3, 12), float64],) */;
    %733 = cast(2 /* ty=int64 */, dtype="int64") /* ty=int64 */;
    %734 = reshape(%733, newshape=[]) /* ty=int64 */;
    %735 = @func_841(%734) /* ty=(Tensor[(3, 16, 4), int64],) */;
    %736 = cast(meta[relay.Constant][57] /* ty=Tensor[(378), float64] */, dtype="float64") /* ty=Tensor[(378), float64] */;
    %737 = cast(meta[relay.Constant][57] /* ty=Tensor[(378), float64] */, dtype="float64") /* ty=Tensor[(378), float64] */;
    %738 = reshape(%736, newshape=[14, 9, 3]) /* ty=Tensor[(14, 9, 3), float64] */;
    %739 = reshape(%737, newshape=[14, 9, 3]) /* ty=Tensor[(14, 9, 3), float64] */;
    %740 = @func_733(%738, %739) /* ty=(Tensor[(14, 9, 3), float64],) */;
    %741 = cast(meta[relay.Constant][58] /* ty=Tensor[(225), float64] */, dtype="float64") /* ty=Tensor[(225), float64] */;
    %742 = reshape(%741, newshape=[5, 3, 15]) /* ty=Tensor[(5, 3, 15), float64] */;
    %743 = %732.0;
    %744 = %735.0;
    %745 = %740.0;
    %746 = @func_4414() /* ty=Tensor[(2, 3, 12), float64] */;
    %747 = @func_1384(%742) /* ty=Tensor[(5, 3, 15), float64] */;
    (%743, %744, 2 /* ty=int64 */, %745, meta[relay.Constant][57] /* ty=Tensor[(378), float64] */, %746, %747, meta[relay.Constant][58] /* ty=Tensor[(225), float64] */)
  };
  %748() /* ty=(Tensor[(2, 3, 12), float64], Tensor[(3, 16, 4), int64], int64, Tensor[(14, 9, 3), float64], Tensor[(378), float64], Tensor[(2, 3, 12), float64], Tensor[(5, 3, 15), float64], Tensor[(225), float64]) */
}

def @func_79(%var_77: Tensor[(16, 11, 4), float64]) -> (Tensor[(16, 11, 4), float64],) {
  @func_76(%var_77) /* ty=(Tensor[(16, 11, 4), float64],) */
}

def @func_1261(%var_1259: Tensor[(16, 15, 13), uint64], %var_1260: Tensor[(16, 15, 13), uint64]) -> (Tensor[(16, 15, 13), uint64],) {
  @func_1257(%var_1259, %var_1260) /* ty=(Tensor[(16, 15, 13), uint64],) */
}

def @func_5813() -> Tensor[(11, 6, 12), float32] {
  %750 = fn () -> Tensor[(11, 6, 12), float32] {
    %749 = cast(meta[relay.Constant][59] /* ty=Tensor[(11, 6, 12), float32] */, dtype="float32") /* ty=Tensor[(11, 6, 12), float32] */;
    acosh(%749) /* ty=Tensor[(11, 6, 12), float32] */
  };
  %750() /* ty=Tensor[(11, 6, 12), float32] */
}

def @func_6637() -> Tensor[(2, 3, 12), float64] {
  %751 = @func_4781() /* ty=(Tensor[(2, 3, 12), float64],) */;
  %751.0
}

def @func_2202(%var_2200: Tensor[(16, 6, 6), uint8]) -> Tensor[(16, 6, 6), uint8] {
  @func_2199(%var_2200) /* ty=Tensor[(16, 6, 6), uint8] */
}

def @func_6961() -> (Tensor[(2, 3, 12), float64],) {
  %752 = @func_5220() /* ty=(Tensor[(2, 3, 12), float64], Tensor[(2, 3, 12), float64]) */;
  %753 = %752.1;
  (%753,)
}

def @func_7334(%var_7304: Tensor[(6, 10, 2), float64], %var_7322: Tensor[(504), float64], %var_7324: Tensor[(968), int64], %var_7325: Tensor[(156), float64]) -> (Tensor[(6, 10, 2), float64], Tensor[(2, 3, 12), float64], Tensor[(16, 6, 6), uint8], float64, Tensor[(504), float64], Tensor[(1470), float64], Tensor[(968), int64], Tensor[(156), float64], Tensor[(378), float64]) {
  %754 = cast(%var_7304, dtype="float64") /* ty=Tensor[(6, 10, 2), float64] */;
  %755 = cast(4.79796f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %756 = cast(%var_7322, dtype="float64") /* ty=Tensor[(504), float64] */;
  %757 = cast(meta[relay.Constant][60] /* ty=Tensor[(1470), float64] */, dtype="float64") /* ty=Tensor[(1470), float64] */;
  %758 = cast(%var_7324, dtype="int64") /* ty=Tensor[(968), int64] */;
  %759 = cast(%var_7322, dtype="float64") /* ty=Tensor[(504), float64] */;
  %760 = cast(%var_7325, dtype="float64") /* ty=Tensor[(156), float64] */;
  %761 = cast(meta[relay.Constant][61] /* ty=Tensor[(378), float64] */, dtype="float64") /* ty=Tensor[(378), float64] */;
  %762 = reshape(%755, newshape=[]) /* ty=float64 */;
  %763 = reshape(%756, newshape=[7, 6, 12]) /* ty=Tensor[(7, 6, 12), float64] */;
  %764 = reshape(%757, newshape=[1470]) /* ty=Tensor[(1470), float64] */;
  %765 = reshape(%758, newshape=[968]) /* ty=Tensor[(968), int64] */;
  %766 = reshape(%759, newshape=[7, 6, 12]) /* ty=Tensor[(7, 6, 12), float64] */;
  %767 = reshape(%760, newshape=[156]) /* ty=Tensor[(156), float64] */;
  %768 = reshape(%761, newshape=[42, 9]) /* ty=Tensor[(42, 9), float64] */;
  %769 = @func_2998(%762, %763, %764, %765, %766, %767, %768) /* ty=(Tensor[(7, 6, 12), float64], Tensor[(14, 7, 15), float64], Tensor[(1470), float64], Tensor[(64), float64], Tensor[(968), int64], Tensor[(64), float64], Tensor[(16, 6, 6), uint8], Tensor[(576), uint8], Tensor[(1, 378), float64], Tensor[(156), float64], Tensor[(42, 9), float64], Tensor[(7, 6, 12), float64]) */;
  %770 = sinh(%754) /* ty=Tensor[(6, 10, 2), float64] */;
  %771 = @func_4861() /* ty=Tensor[(2, 3, 12), float64] */;
  %772 = %769.6;
  (%770, %771, %772, 4.79796f64 /* ty=float64 */, %var_7322, meta[relay.Constant][60] /* ty=Tensor[(1470), float64] */, %var_7324, %var_7325, meta[relay.Constant][61] /* ty=Tensor[(378), float64] */)
}

def @func_4495(%var_4493: Tensor[(180), uint16]) -> (Tensor[(2, 3, 12), float64], Tensor[(11, 8, 11), int64], Tensor[(968), int64], Tensor[(64), float64], Tensor[(2, 13, 3), float64], Tensor[(78), float64], Tensor[(4, 9, 5), float64]) {
  @func_4492(%var_4493) /* ty=(Tensor[(2, 3, 12), float64], Tensor[(11, 8, 11), int64], Tensor[(968), int64], Tensor[(64), float64], Tensor[(2, 13, 3), float64], Tensor[(78), float64], Tensor[(4, 9, 5), float64]) */
}

def @func_972(%var_971: Tensor[(8, 3, 7), float64]) -> Tensor[(8, 3, 7), float64] {
  %774 = fn (%var_966: Tensor[(8, 3, 7), float64]) -> Tensor[(8, 3, 7), float64] {
    %773 = cast(%var_966, dtype="float64") /* ty=Tensor[(8, 3, 7), float64] */;
    log(%773) /* ty=Tensor[(8, 3, 7), float64] */
  };
  %774(%var_971) /* ty=Tensor[(8, 3, 7), float64] */
}

def @func_661(%var_636: Tensor[(2, 16, 2), float64]) -> (Tensor[(2, 16, 2), bool],) {
  %775 = cast(%var_636, dtype="bool") /* ty=Tensor[(2, 16, 2), bool] */;
  %776 = shape_of(meta[relay.Constant][62] /* ty=Tensor[(2, 16, 2), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %777 = cast(meta[relay.Constant][62] /* ty=Tensor[(2, 16, 2), float64] */, dtype="bool") /* ty=Tensor[(2, 16, 2), bool] */;
  %778 = dyn.reshape(%775, %776, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %779 = less(%777, %778) /* ty=Tensor[(2, 16, 2), bool] */;
  (%779,)
}

def @func_5949() -> (Tensor[(2, 3, 12), float64],) {
  %780 = @func_5385() /* ty=Tensor[(2, 3, 12), float64] */;
  (%780,)
}

def @func_3970(%var_3968: float64, %var_3969: Tensor[(4, 13, 10), float64]) -> (Tensor[(4, 13, 10), float64], Tensor[(4, 13, 10), float64]) {
  %786 = fn (%var_3942: float64, %var_3943: Tensor[(4, 13, 10), float64]) -> (Tensor[(4, 13, 10), float64], Tensor[(4, 13, 10), float64]) {
    %781 = cast(%var_3942, dtype="float64") /* ty=float64 */;
    %782 = cast(%var_3943, dtype="float64") /* ty=Tensor[(4, 13, 10), float64] */;
    %783 = cast(%var_3943, dtype="float64") /* ty=Tensor[(4, 13, 10), float64] */;
    %784 = power(%781, %782) /* ty=Tensor[(4, 13, 10), float64] */;
    %785 = asin(%783) /* ty=Tensor[(4, 13, 10), float64] */;
    (%784, %785)
  };
  %786(%var_3968, %var_3969) /* ty=(Tensor[(4, 13, 10), float64], Tensor[(4, 13, 10), float64]) */
}

def @func_7886() -> (Tensor[(2, 3, 12), float64], Tensor[(2, 3, 12), float64]) {
  %789 = fn () -> (Tensor[(2, 3, 12), float64], Tensor[(2, 3, 12), float64]) {
    %787 = @func_7076() /* ty=Tensor[(2, 3, 12), float64] */;
    %788 = @func_7440() /* ty=Tensor[(2, 3, 12), float64] */;
    (%787, %788)
  };
  %789() /* ty=(Tensor[(2, 3, 12), float64], Tensor[(2, 3, 12), float64]) */
}

def @func_7990(%var_7989: Tensor[(2, 3, 12), float64]) -> (Tensor[(2, 3, 12), bool], Tensor[(16, 11, 4), float64], Tensor[(704), float64]) {
  %801 = fn (%var_7970: Tensor[(2, 3, 12), float64]) -> (Tensor[(2, 3, 12), bool], Tensor[(16, 11, 4), float64], Tensor[(704), float64]) {
    %790 = @func_7505() /* ty=(Tensor[(2, 3, 12), float64],) */;
    %791 = %790.0;
    %792 = cast(%var_7970, dtype="bool") /* ty=Tensor[(2, 3, 12), bool] */;
    %793 = shape_of(%791, dtype="int32") /* ty=Tensor[(3), int32] */;
    %794 = cast(%791, dtype="bool") /* ty=Tensor[(2, 3, 12), bool] */;
    %795 = dyn.reshape(%792, %793, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %796 = cast(meta[relay.Constant][63] /* ty=Tensor[(704), float64] */, dtype="float64") /* ty=Tensor[(704), float64] */;
    %797 = reshape(%796, newshape=[16, 11, 4]) /* ty=Tensor[(16, 11, 4), float64] */;
    %798 = @func_76(%797) /* ty=(Tensor[(16, 11, 4), float64],) */;
    %799 = logical_and(%794, %795) /* ty=Tensor[(2, 3, 12), bool] */;
    %800 = %798.0;
    (%799, %800, meta[relay.Constant][63] /* ty=Tensor[(704), float64] */)
  };
  %801(%var_7989) /* ty=(Tensor[(2, 3, 12), bool], Tensor[(16, 11, 4), float64], Tensor[(704), float64]) */
}

def @func_5499() -> (Tensor[(2, 3, 12), float64],) {
  %803 = fn () -> (Tensor[(2, 3, 12), float64],) {
    %802 = @func_4861() /* ty=Tensor[(2, 3, 12), float64] */;
    (%802,)
  };
  %803() /* ty=(Tensor[(2, 3, 12), float64],) */
}

def @func_2116(%var_2114: Tensor[(6, 2, 13), float64], %var_2115: Tensor[(1, 378), float64]) -> (Tensor[(6, 2, 13), float64], Tensor[(14, 9, 3), float64], Tensor[(1, 378), float64]) {
  %812 = fn (%var_2094: Tensor[(6, 2, 13), float64], %var_2102: Tensor[(1, 378), float64]) -> (Tensor[(6, 2, 13), float64], Tensor[(14, 9, 3), float64], Tensor[(1, 378), float64]) {
    %804 = cast(%var_2094, dtype="float64") /* ty=Tensor[(6, 2, 13), float64] */;
    %805 = cast(%var_2102, dtype="float64") /* ty=Tensor[(1, 378), float64] */;
    %806 = cast(%var_2102, dtype="float64") /* ty=Tensor[(1, 378), float64] */;
    %807 = reshape(%805, newshape=[14, 9, 3]) /* ty=Tensor[(14, 9, 3), float64] */;
    %808 = reshape(%806, newshape=[14, 9, 3]) /* ty=Tensor[(14, 9, 3), float64] */;
    %809 = @func_733(%807, %808) /* ty=(Tensor[(14, 9, 3), float64],) */;
    %810 = log2(%804) /* ty=Tensor[(6, 2, 13), float64] */;
    %811 = %809.0;
    (%810, %811, %var_2102)
  };
  %812(%var_2114, %var_2115) /* ty=(Tensor[(6, 2, 13), float64], Tensor[(14, 9, 3), float64], Tensor[(1, 378), float64]) */
}

def @func_1257(%var_1249: Tensor[(16, 15, 13), uint64], %var_1250: Tensor[(16, 15, 13), uint64]) -> (Tensor[(16, 15, 13), uint64],) {
  %813 = cast(%var_1250, dtype="uint64") /* ty=Tensor[(16, 15, 13), uint64] */;
  %814 = shape_of(%var_1249, dtype="int32") /* ty=Tensor[(3), int32] */;
  %815 = cast(%var_1249, dtype="uint64") /* ty=Tensor[(16, 15, 13), uint64] */;
  %816 = dyn.reshape(%813, %814, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %817 = multiply(%815, %816) /* ty=Tensor[(16, 15, 13), uint64] */;
  (%817,)
}

def @func_5300(%var_5297: Tensor[(2, 3, 12), float64], %var_5298: Tensor[(156), float64], %var_5299: Tensor[(378), float64]) -> (Tensor[(2, 3, 12), int8], Tensor[(1, 378), float64], Tensor[(156), float64], Tensor[(378), float64], Tensor[(78), float64], Tensor[(180), uint16]) {
  %835 = fn (%var_5271: Tensor[(2, 3, 12), float64], %var_5281: Tensor[(156), float64], %var_5282: Tensor[(378), float64]) -> (Tensor[(2, 3, 12), int8], Tensor[(1, 378), float64], Tensor[(156), float64], Tensor[(378), float64], Tensor[(78), float64], Tensor[(180), uint16]) {
    %818 = @func_4205() /* ty=(Tensor[(2, 3, 12), float64],) */;
    %819 = %818.0;
    %820 = cast(%var_5271, dtype="int8") /* ty=Tensor[(2, 3, 12), int8] */;
    %821 = shape_of(%819, dtype="int32") /* ty=Tensor[(3), int32] */;
    %822 = cast(%819, dtype="int8") /* ty=Tensor[(2, 3, 12), int8] */;
    %823 = dyn.reshape(%820, %821, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %824 = cast(%var_5281, dtype="float64") /* ty=Tensor[(156), float64] */;
    %825 = cast(%var_5282, dtype="float64") /* ty=Tensor[(378), float64] */;
    %826 = reshape(%824, newshape=[6, 2, 13]) /* ty=Tensor[(6, 2, 13), float64] */;
    %827 = reshape(%825, newshape=[1, 378]) /* ty=Tensor[(1, 378), float64] */;
    %828 = @func_2113(%826, %827) /* ty=(Tensor[(6, 2, 13), float64], Tensor[(14, 9, 3), float64], Tensor[(1, 378), float64]) */;
    %829 = cast(meta[relay.Constant][64] /* ty=Tensor[(180), uint16] */, dtype="uint16") /* ty=Tensor[(180), uint16] */;
    %830 = reshape(%829, newshape=[180]) /* ty=Tensor[(180), uint16] */;
    %831 = @func_4492(%830) /* ty=(Tensor[(2, 3, 12), float64], Tensor[(11, 8, 11), int64], Tensor[(968), int64], Tensor[(64), float64], Tensor[(2, 13, 3), float64], Tensor[(78), float64], Tensor[(4, 9, 5), float64]) */;
    %832 = logical_xor(%822, %823) /* ty=Tensor[(2, 3, 12), int8] */;
    %833 = %828.2;
    %834 = %831.5;
    (%832, %833, %var_5281, %var_5282, %834, meta[relay.Constant][64] /* ty=Tensor[(180), uint16] */)
  };
  %835(%var_5297, %var_5298, %var_5299) /* ty=(Tensor[(2, 3, 12), int8], Tensor[(1, 378), float64], Tensor[(156), float64], Tensor[(378), float64], Tensor[(78), float64], Tensor[(180), uint16]) */
}

def @func_2199(%var_2177: Tensor[(16, 6, 6), uint8]) -> Tensor[(16, 6, 6), uint8] {
  %836 = cast(meta[relay.Constant][65] /* ty=Tensor[(16, 6, 6), uint8] */, dtype="uint8") /* ty=Tensor[(16, 6, 6), uint8] */;
  %837 = shape_of(%var_2177, dtype="int32") /* ty=Tensor[(3), int32] */;
  %838 = cast(%var_2177, dtype="uint8") /* ty=Tensor[(16, 6, 6), uint8] */;
  %839 = dyn.reshape(%836, %837, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  right_shift(%838, %839) /* ty=Tensor[(16, 6, 6), uint8] */
}

def @func_8252() -> Tensor[(2, 3, 12), float64] {
  %841 = fn () -> Tensor[(2, 3, 12), float64] {
    %840 = @func_6734() /* ty=(Tensor[(2, 3, 12), float64],) */;
    %840.0
  };
  %841() /* ty=Tensor[(2, 3, 12), float64] */
}

def @func_4539() -> (Tensor[(2, 3, 12), float64],) {
  %842 = @func_4205() /* ty=(Tensor[(2, 3, 12), float64],) */;
  %843 = %842.0;
  (%843,)
}

def @func_5529(%var_5527: Tensor[(12, 5, 1), float64]) -> Tensor[(12, 5, 1), float64] {
  @func_5526(%var_5527) /* ty=Tensor[(12, 5, 1), float64] */
}

def @func_6055(%var_6053: Tensor[(13, 14, 1), float64], %var_6054: Tensor[(13, 14, 10), float64]) -> (Tensor[(13, 14, ?), uint32], Tensor[(13, 14, ?), bool], Tensor[(2, 3, 12), float64], Tensor[(78), float64], Tensor[(5, 3, 15), float64], Tensor[(13, 14, 10), int8], Tensor[(13, 14, ?), bool], Tensor[(2, 13, 3), float64], Tensor[(13, 14, 225), uint64]) {
  @func_6051(%var_6053, %var_6054) /* ty=(Tensor[(13, 14, ?), uint32], Tensor[(13, 14, ?), bool], Tensor[(2, 3, 12), float64], Tensor[(78), float64], Tensor[(5, 3, 15), float64], Tensor[(13, 14, 10), int8], Tensor[(13, 14, ?), bool], Tensor[(2, 13, 3), float64], Tensor[(13, 14, 225), uint64]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen144/build/output.py:1967: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen144/build/output.py", line 1972, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(143) tvmgen_default_fused_sinh_kernel0(double* __restrict__ T_sinh, double* __restrict__ placeholder) {
  T_sinh[(((int)threadIdx.x))] = sinh(placeholder[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


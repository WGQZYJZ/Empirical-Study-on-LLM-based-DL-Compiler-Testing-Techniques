==========mod==========
#[version = "0.0.5"]
def @func_8774() -> (Tensor[(5, 7, 6), bool],) {
  %0 = @func_3607() /* ty=(Tensor[(5, 7, 6), bool],) */;
  %1 = %0.0;
  (%1,)
}

def @func_6587() -> (Tensor[(1152), int64],) {
  %2 = @func_5055() /* ty=(Tensor[(1152), int64],) */;
  %3 = %2.0;
  (%3,)
}

def @func_7127(%var_7076: Tensor[(8, 7, 4), float32]) -> (Tensor[(8, 7, 4), int8], Tensor[(5, 7, 6), uint64]) {
  %4 = cast(%var_7076, dtype="float32") /* ty=Tensor[(8, 7, 4), float32] */;
  %5 = log2(%4) /* ty=Tensor[(8, 7, 4), float32] */;
  %6 = cast(%var_7076, dtype="uint32") /* ty=Tensor[(8, 7, 4), uint32] */;
  %7 = shape_of(%5, dtype="int32") /* ty=Tensor[(3), int32] */;
  %8 = cast(%5, dtype="uint32") /* ty=Tensor[(8, 7, 4), uint32] */;
  %9 = dyn.reshape(%6, %7, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %10 = bitwise_and(%8, %9) /* ty=Tensor[(8, 7, 4), uint32] */;
  %11 = cast(%var_7076, dtype="float64") /* ty=Tensor[(8, 7, 4), float64] */;
  %12 = acos(%11) /* ty=Tensor[(8, 7, 4), float64] */;
  %13 = cast(%12, dtype="int8") /* ty=Tensor[(8, 7, 4), int8] */;
  %14 = shape_of(%10, dtype="int32") /* ty=Tensor[(3), int32] */;
  %15 = cast(%10, dtype="int8") /* ty=Tensor[(8, 7, 4), int8] */;
  %16 = dyn.reshape(%13, %14, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %17 = @func_3939() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) */;
  %18 = left_shift(%15, %16) /* ty=Tensor[(8, 7, 4), int8] */;
  %19 = %17.1;
  (%18, %19)
}

def @func_9540(%var_9530: Tensor[(120), int32], %var_9531: Tensor[(240), int32]) -> (Tensor[(12, 14, 11), bool], Tensor[(15, 15, 9), float32], Tensor[(1848, 1), int64], Tensor[(120), int32], Tensor[(240), int32]) {
  %20 = @func_4214() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), int16]) */;
  %21 = @func_4811() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(15, 15, 9), float32], Tensor[(15, 15, 9), float32], Tensor[(12, 14, 11), uint32]) */;
  %22 = cast(%var_9530, dtype="int32") /* ty=Tensor[(120), int32] */;
  %23 = cast(%var_9531, dtype="int32") /* ty=Tensor[(240), int32] */;
  %24 = %20.0;
  %25 = cast(%24, dtype="int64") /* ty=Tensor[(12, 14, 11), int64] */;
  %26 = reshape(%22, newshape=[8, 15, 1]) /* ty=Tensor[(8, 15, 1), int32] */;
  %27 = reshape(%23, newshape=[8, 15, 2]) /* ty=Tensor[(8, 15, 2), int32] */;
  %28 = reshape(%25, newshape=[1848, 1]) /* ty=Tensor[(1848, 1), int64] */;
  %29 = @func_565(%26, %27, %28) /* ty=(Tensor[(8, 15, 2), bool], Tensor[(12, 14, 11), bool], Tensor[(1848, 1), int64]) */;
  %30 = %21.1;
  %31 = %29.2;
  (%24, %30, %31, %var_9530, %var_9531)
}

def @func_10659() -> (Tensor[(9, 2, 16), float32], Tensor[(5, 7, 6), uint64]) {
  %32 = @func_3517() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(9, 2, 16), float32], Tensor[(288), float32]) */;
  %33 = @func_6391() /* ty=(Tensor[(5, 7, 6), uint64],) */;
  %34 = %32.1;
  %35 = %33.0;
  (%34, %35)
}

def @func_4697() -> Tensor[(15, 15, 9), float32] {
  %36 = @func_2575() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(15, 15, 9), float32], Tensor[(1152), int64], Tensor[(210), uint64]) */;
  %36.1
}

def @func_7550() -> (Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64]) {
  %37 = @func_3417() /* ty=Tensor[(12, 14, 11), bool] */;
  %38 = @func_6286() /* ty=Tensor[(5, 7, 6), uint64] */;
  (%37, %38)
}

def @func_4214() -> (Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), int16]) {
  %39 = @func_2415() /* ty=Tensor[(12, 14, 11), bool] */;
  %40 = @func_3914() /* ty=Tensor[(12, 14, 11), bool] */;
  %41 = cast(%40, dtype="int16") /* ty=Tensor[(12, 14, 11), int16] */;
  %42 = shape_of(%39, dtype="int32") /* ty=Tensor[(3), int32] */;
  %43 = cast(%39, dtype="int16") /* ty=Tensor[(12, 14, 11), int16] */;
  %44 = dyn.reshape(%41, %42, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %45 = @func_3417() /* ty=Tensor[(12, 14, 11), bool] */;
  %46 = multiply(%43, %44) /* ty=Tensor[(12, 14, 11), int16] */;
  (%45, %46)
}

def @func_8180(%var_8170: Tensor[(224), float32]) -> (Tensor[(15, 15, 9), float32], Tensor[(12, 14, 11), float32], Tensor[(8, 7, 4), int8], Tensor[(224), float32]) {
  %47 = @func_7690() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(210), uint64], Tensor[(12, 14, 11), float32]) */;
  %48 = cast(%var_8170, dtype="float32") /* ty=Tensor[(224), float32] */;
  %49 = reshape(%48, newshape=[8, 7, 4]) /* ty=Tensor[(8, 7, 4), float32] */;
  %50 = @func_7127(%49) /* ty=(Tensor[(8, 7, 4), int8], Tensor[(5, 7, 6), uint64]) */;
  %51 = @func_5373() /* ty=Tensor[(15, 15, 9), float32] */;
  %52 = %47.2;
  %53 = %50.0;
  (%51, %52, %53, %var_8170)
}

def @func_5583() -> (Tensor[(12, 14, 11), bool], Tensor[(210), uint64], Tensor[(176), float32], Tensor[(1, 120), int32], Tensor[(1848), int64], Tensor[(288), float32]) {
  %54 = @func_4943() /* ty=(Tensor[(12, 14, 11), int16], Tensor[(5, 7, 6), uint64], Tensor[(9, 12, 6), float32], Tensor[(648), float32], Tensor[(12, 14, 11), bool]) */;
  %55 = cast(meta[relay.Constant][0] /* ty=Tensor[(176), float32] */, dtype="float32") /* ty=Tensor[(176), float32] */;
  %56 = cast(meta[relay.Constant][1] /* ty=Tensor[(1, 120), int32] */, dtype="int32") /* ty=Tensor[(1, 120), int32] */;
  %57 = reshape(%55, newshape=[176]) /* ty=Tensor[(176), float32] */;
  %58 = reshape(%56, newshape=[120]) /* ty=Tensor[(120), int32] */;
  %59 = @func_2911(%57, %58) /* ty=(Tensor[(12, 14, 11), bool], Tensor[(210), uint64], Tensor[(12, 14, 11), bool], Tensor[(1152), int64], Tensor[(16, 11, 1), float32], Tensor[(176), float32], Tensor[(12, 14, 11), bool], Tensor[(120), int32], Tensor[(240), int32], Tensor[(8, 15, 2), bool], Tensor[(5, 7, 6), bool], Tensor[(5, 7, 6), uint64], Tensor[(16, 11, 1), float32], Tensor[(16, 11, 1), float32]) */;
  %60 = %54.4;
  %61 = cast(%60, dtype="int64") /* ty=Tensor[(12, 14, 11), int64] */;
  %62 = cast(meta[relay.Constant][2] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
  %63 = cast(meta[relay.Constant][0] /* ty=Tensor[(176), float32] */, dtype="float32") /* ty=Tensor[(176), float32] */;
  %64 = reshape(%61, newshape=[1848]) /* ty=Tensor[(1848), int64] */;
  %65 = reshape(%62, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %66 = reshape(%63, newshape=[176]) /* ty=Tensor[(176), float32] */;
  %67 = @func_4174(%64, %65, %66) /* ty=(Tensor[(210), uint64], Tensor[(5, 7, 6), uint64], Tensor[(120), int32], Tensor[(240), int32], Tensor[(1848), int64], Tensor[(12, 14, 11), float32], Tensor[(288), float32], Tensor[(288), float32], Tensor[(176), float32]) */;
  %68 = %59.1;
  %69 = %67.4;
  (%60, %68, meta[relay.Constant][0] /* ty=Tensor[(176), float32] */, meta[relay.Constant][1] /* ty=Tensor[(1, 120), int32] */, %69, meta[relay.Constant][2] /* ty=Tensor[(288), float32] */)
}

def @func_200(%var_196: Tensor[(16, 11, 1), float32]) -> (Tensor[(16, 11, 1), float32],) {
  %70 = cast(%var_196, dtype="float32") /* ty=Tensor[(16, 11, 1), float32] */;
  %71 = acosh(%70) /* ty=Tensor[(16, 11, 1), float32] */;
  (%71,)
}

def @func_12873(%var_12775: Tensor[(1152), int64]) -> (Tensor[(5, 7, 6), uint64], Tensor[(1152), int32], Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64], Tensor[(210), uint64]) {
  %72 = @func_6774() /* ty=(Tensor[(5, 7, 6), uint64],) */;
  %73 = @func_9899() /* ty=Tensor[(1152), int64] */;
  %74 = cast(%var_12775, dtype="int32") /* ty=Tensor[(1152), int32] */;
  %75 = shape_of(%73, dtype="int32") /* ty=Tensor[(1), int32] */;
  %76 = cast(%73, dtype="int32") /* ty=Tensor[(1152), int32] */;
  %77 = dyn.reshape(%74, %75, newshape=[]) /* ty=Tensor[(?), int32] */;
  %78 = @func_12640() /* ty=(Tensor[(12, 14, 11), bool],) */;
  %79 = @func_12497() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(16, 11, ?), bool], Tensor[(5, 7, 6), uint64]) */;
  %80 = @func_3587() /* ty=(Tensor[(5, 7, 6), uint64],) */;
  %81 = @func_2575() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(15, 15, 9), float32], Tensor[(1152), int64], Tensor[(210), uint64]) */;
  %82 = %72.0;
  %83 = logical_xor(%76, %77) /* ty=Tensor[(1152), int32] */;
  %84 = %78.0;
  %85 = @func_12100() /* ty=Tensor[(12, 14, 11), bool] */;
  %86 = @func_4850() /* ty=Tensor[(5, 7, 6), uint64] */;
  %87 = @func_6135() /* ty=Tensor[(5, 7, 6), uint64] */;
  %88 = %79.0;
  %89 = %80.0;
  %90 = %81.3;
  (%82, %83, %84, %85, %86, %87, %88, %89, %90)
}

def @func_9439() -> (Tensor[(1, 120), int32],) {
  %91 = @func_5583() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(210), uint64], Tensor[(176), float32], Tensor[(1, 120), int32], Tensor[(1848), int64], Tensor[(288), float32]) */;
  %92 = %91.3;
  (%92,)
}

def @func_3876() -> (Tensor[(288), float32],) {
  %93 = @func_3517() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(9, 2, 16), float32], Tensor[(288), float32]) */;
  %94 = %93.2;
  (%94,)
}

def @func_6365(%var_6346: Tensor[(13, 11, 5), float32]) -> Tensor[(13, 11, 5), float32] {
  %95 = cast(%var_6346, dtype="float32") /* ty=Tensor[(13, 11, 5), float32] */;
  log10(%95) /* ty=Tensor[(13, 11, 5), float32] */
}

def @func_8497() -> Tensor[(12, 14, 11), bool] {
  @func_7979() /* ty=Tensor[(12, 14, 11), bool] */
}

def @func_6991() -> Tensor[(288), float32] {
  @func_6984() /* ty=Tensor[(288), float32] */
}

def @func_12121() -> (Tensor[(210), uint64], Tensor[(12, 11, 7), uint32], Tensor[(14, 66), uint32]) {
  %96 = @func_2087() /* ty=(Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64], Tensor[(210), uint64], Tensor[(12, 14, 11), bool], Tensor[(2, 924), int64], Tensor[(12, 14, 11), bool]) */;
  %97 = cast(meta[relay.Constant][3] /* ty=Tensor[(14, 66), uint32] */, dtype="uint32") /* ty=Tensor[(14, 66), uint32] */;
  %98 = cast(meta[relay.Constant][3] /* ty=Tensor[(14, 66), uint32] */, dtype="uint32") /* ty=Tensor[(14, 66), uint32] */;
  %99 = reshape(%97, newshape=[12, 11, 7]) /* ty=Tensor[(12, 11, 7), uint32] */;
  %100 = reshape(%98, newshape=[12, 11, 7]) /* ty=Tensor[(12, 11, 7), uint32] */;
  %101 = %96.2;
  %102 = @func_8032(%99, %100) /* ty=Tensor[(12, 11, 7), uint32] */;
  (%101, %102, meta[relay.Constant][3] /* ty=Tensor[(14, 66), uint32] */)
}

def @func_14594() -> (Tensor[(176), float32], Tensor[(15, 15, 9), float32], Tensor[(1, 120), float32]) {
  %103 = @func_5695() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), float32], Tensor[(15, 15, 9), float32], Tensor[(176), float32], Tensor[(176), float32], Tensor[(120), int32]) */;
  %104 = @func_9796() /* ty=(Tensor[(1, 120), float32],) */;
  %105 = %103.5;
  %106 = @func_6728() /* ty=Tensor[(15, 15, 9), float32] */;
  %107 = %104.0;
  (%105, %106, %107)
}

def @func_10239() -> Tensor[(5, 7, 6), uint64] {
  @func_6286() /* ty=Tensor[(5, 7, 6), uint64] */
}

def @func_9088(%var_9084: Tensor[(224), float32]) -> (Tensor[(12, 14, 11), uint32], Tensor[(8, 7, 4), int8], Tensor[(224), float32]) {
  %108 = @func_4811() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(15, 15, 9), float32], Tensor[(15, 15, 9), float32], Tensor[(12, 14, 11), uint32]) */;
  %109 = cast(%var_9084, dtype="float32") /* ty=Tensor[(224), float32] */;
  %110 = reshape(%109, newshape=[8, 7, 4]) /* ty=Tensor[(8, 7, 4), float32] */;
  %111 = @func_7127(%110) /* ty=(Tensor[(8, 7, 4), int8], Tensor[(5, 7, 6), uint64]) */;
  %112 = %108.3;
  %113 = %111.0;
  (%112, %113, %var_9084)
}

def @func_3517() -> (Tensor[(12, 14, 11), bool], Tensor[(9, 2, 16), float32], Tensor[(288), float32]) {
  %114 = @func_2219() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), bool]) */;
  %115 = cast(meta[relay.Constant][4] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
  %116 = reshape(%115, newshape=[9, 2, 16]) /* ty=Tensor[(9, 2, 16), float32] */;
  %117 = @func_1957(%116) /* ty=(Tensor[(9, 2, 16), float32],) */;
  %118 = %114.1;
  %119 = %117.0;
  (%118, %119, meta[relay.Constant][4] /* ty=Tensor[(288), float32] */)
}

def @func_7714() -> (Tensor[(5, 7, 6), uint64],) {
  %120 = @func_3587() /* ty=(Tensor[(5, 7, 6), uint64],) */;
  %121 = %120.0;
  (%121,)
}

def @func_2219() -> (Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), bool]) {
  %122 = @func_2087() /* ty=(Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64], Tensor[(210), uint64], Tensor[(12, 14, 11), bool], Tensor[(2, 924), int64], Tensor[(12, 14, 11), bool]) */;
  %123 = @func_2087() /* ty=(Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64], Tensor[(210), uint64], Tensor[(12, 14, 11), bool], Tensor[(2, 924), int64], Tensor[(12, 14, 11), bool]) */;
  %124 = %122.1;
  %125 = %123.3;
  (%124, %125)
}

def @func_7915() -> (Tensor[(12, 14, 11), bool],) {
  %126 = @func_4829() /* ty=(Tensor[(12, 14, 11), bool],) */;
  %127 = %126.0;
  (%127,)
}

def @func_4943() -> (Tensor[(12, 14, 11), int16], Tensor[(5, 7, 6), uint64], Tensor[(9, 12, 6), float32], Tensor[(648), float32], Tensor[(12, 14, 11), bool]) {
  %128 = @func_4440() /* ty=(Tensor[(5, 7, 6), bool], Tensor[(12, 14, 11), int16]) */;
  %129 = @func_3868() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64], Tensor[(16, 11, ?), bool]) */;
  %130 = cast(meta[relay.Constant][5] /* ty=Tensor[(648), float32] */, dtype="float32") /* ty=Tensor[(648), float32] */;
  %131 = reshape(%130, newshape=[9, 12, 6]) /* ty=Tensor[(9, 12, 6), float32] */;
  %132 = @func_3786(%131) /* ty=(Tensor[(9, 12, 6), float32],) */;
  %133 = @func_2087() /* ty=(Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64], Tensor[(210), uint64], Tensor[(12, 14, 11), bool], Tensor[(2, 924), int64], Tensor[(12, 14, 11), bool]) */;
  %134 = %128.1;
  %135 = %129.1;
  %136 = %132.0;
  %137 = %133.3;
  (%134, %135, %136, meta[relay.Constant][5] /* ty=Tensor[(648), float32] */, %137)
}

def @func_14860() -> Tensor[(12, 14, 11), bool] {
  @func_14553() /* ty=Tensor[(12, 14, 11), bool] */
}

def @func_4252() -> (Tensor[(15, 15, 9), float32], Tensor[(9, 12, 6), float32], Tensor[(648), float32]) {
  %138 = @func_2398() /* ty=(Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64]) */;
  %139 = cast(meta[relay.Constant][6] /* ty=Tensor[(648), float32] */, dtype="float32") /* ty=Tensor[(648), float32] */;
  %140 = reshape(%139, newshape=[9, 12, 6]) /* ty=Tensor[(9, 12, 6), float32] */;
  %141 = @func_3786(%140) /* ty=(Tensor[(9, 12, 6), float32],) */;
  %142 = %138.0;
  %143 = %141.0;
  (%142, %143, meta[relay.Constant][6] /* ty=Tensor[(648), float32] */)
}

def @func_12538() -> (Tensor[(12, 14, 11), bool],) {
  %144 = @func_10586() /* ty=(Tensor[(11, 15, 11), int16], Tensor[(12, 14, 11), bool]) */;
  %145 = %144.1;
  (%145,)
}

def @func_11239() -> Tensor[(15, 15, 9), float32] {
  @func_8211() /* ty=Tensor[(15, 15, 9), float32] */
}

def @func_10481() -> (Tensor[(5, 7, 6), bool],) {
  %146 = @func_7355() /* ty=(Tensor[(5, 7, 6), bool],) */;
  %147 = %146.0;
  (%147,)
}

def @func_11013() -> Tensor[(12, 14, 11), int16] {
  %148 = @func_4440() /* ty=(Tensor[(5, 7, 6), bool], Tensor[(12, 14, 11), int16]) */;
  %148.1
}

def @func_13130() -> Tensor[(288), float32] {
  %149 = @func_3876() /* ty=(Tensor[(288), float32],) */;
  %149.0
}

def @func_15082() -> (Tensor[(210), uint64],) {
  %150 = @func_7690() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(210), uint64], Tensor[(12, 14, 11), float32]) */;
  %151 = %150.1;
  (%151,)
}

def @func_5501(%var_5453: Tensor[(12, 14, 11), bool], %var_5480: Tensor[(176), float32]) -> (Tensor[(12, 14, 11), int32], Tensor[(12, 14, 11), float64], Tensor[(12, 14, 11), bool], Tensor[(16, 11, 1), float32], Tensor[(176), float32]) {
  %152 = @func_2415() /* ty=Tensor[(12, 14, 11), bool] */;
  %153 = cast(%var_5453, dtype="int32") /* ty=Tensor[(12, 14, 11), int32] */;
  %154 = shape_of(%152, dtype="int32") /* ty=Tensor[(3), int32] */;
  %155 = cast(%152, dtype="int32") /* ty=Tensor[(12, 14, 11), int32] */;
  %156 = dyn.reshape(%153, %154, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %157 = @func_4619() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), bool]) */;
  %158 = %157.0;
  %159 = cast(%158, dtype="float64") /* ty=Tensor[(12, 14, 11), float64] */;
  %160 = @func_4554() /* ty=(Tensor[(12, 14, 11), bool],) */;
  %161 = cast(%var_5480, dtype="float32") /* ty=Tensor[(176), float32] */;
  %162 = reshape(%161, newshape=[16, 11, 1]) /* ty=Tensor[(16, 11, 1), float32] */;
  %163 = @func_200(%162) /* ty=(Tensor[(16, 11, 1), float32],) */;
  %164 = left_shift(%155, %156) /* ty=Tensor[(12, 14, 11), int32] */;
  %165 = exp(%159) /* ty=Tensor[(12, 14, 11), float64] */;
  %166 = %160.0;
  %167 = %163.0;
  (%164, %165, %166, %167, %var_5480)
}

def @func_2442(%var_2420: Tensor[(8, 16, 9), int64], %var_2421: Tensor[(8, 16, 9), int64], %var_2436: Tensor[(210), uint64]) -> (Tensor[(8, 16, 9), bool], Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64], Tensor[(210), uint64]) {
  %168 = cast(%var_2421, dtype="bool") /* ty=Tensor[(8, 16, 9), bool] */;
  %169 = shape_of(%var_2420, dtype="int32") /* ty=Tensor[(3), int32] */;
  %170 = cast(%var_2420, dtype="bool") /* ty=Tensor[(8, 16, 9), bool] */;
  %171 = dyn.reshape(%168, %169, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %172 = @func_2398() /* ty=(Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64]) */;
  %173 = cast(%var_2436, dtype="uint64") /* ty=Tensor[(210), uint64] */;
  %174 = cast(%var_2436, dtype="uint64") /* ty=Tensor[(210), uint64] */;
  %175 = reshape(%173, newshape=[5, 7, 6]) /* ty=Tensor[(5, 7, 6), uint64] */;
  %176 = reshape(%174, newshape=[5, 7, 6]) /* ty=Tensor[(5, 7, 6), uint64] */;
  %177 = less(%170, %171) /* ty=Tensor[(8, 16, 9), bool] */;
  %178 = %172.0;
  %179 = @func_1838(%175, %176) /* ty=Tensor[(5, 7, 6), uint64] */;
  (%177, %178, %179, %var_2436)
}

def @func_8688(%var_8643: Tensor[(5, 195), float64]) -> (Tensor[(5, 7, 6), uint64], Tensor[(12, 11, 7), uint32], Tensor[(5, 195), float64], Tensor[(16, 11, ?), bool]) {
  %180 = @func_4865() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(15, 15, 9), float32]) */;
  %181 = cast(%var_8643, dtype="float64") /* ty=Tensor[(5, 195), float64] */;
  %182 = cast(%var_8643, dtype="float64") /* ty=Tensor[(5, 195), float64] */;
  %183 = reshape(%181, newshape=[15, 13, 5]) /* ty=Tensor[(15, 13, 5), float64] */;
  %184 = reshape(%182, newshape=[15, 13, 5]) /* ty=Tensor[(15, 13, 5), float64] */;
  %185 = @func_8107(%183, %184) /* ty=(Tensor[(15, 13, 5), int64], Tensor[(12, 11, 7), uint32], Tensor[(924, 1), uint32], Tensor[(15, 13, 5), float64]) */;
  %186 = @func_8420() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(16, 11, ?), bool], Tensor[(12, 14, 11), bool]) */;
  %187 = %180.0;
  %188 = %185.1;
  %189 = %186.1;
  (%187, %188, %var_8643, %189)
}

def @func_4850() -> Tensor[(5, 7, 6), uint64] {
  %190 = @func_2630() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) */;
  %190.0
}

def @func_14443() -> (Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), bool]) {
  %191 = @func_3587() /* ty=(Tensor[(5, 7, 6), uint64],) */;
  %192 = @func_11322() /* ty=(Tensor[(12, 14, 11), bool],) */;
  %193 = %191.0;
  %194 = %192.0;
  (%193, %194)
}

def @func_6961(%var_6958: Tensor[(1, 9, 2), float32]) -> Tensor[(1, 9, 2), float32] {
  %195 = cast(%var_6958, dtype="float32") /* ty=Tensor[(1, 9, 2), float32] */;
  exp(%195) /* ty=Tensor[(1, 9, 2), float32] */
}

def @func_6774() -> (Tensor[(5, 7, 6), uint64],) {
  %196 = @func_6135() /* ty=Tensor[(5, 7, 6), uint64] */;
  (%196,)
}

def @func_6199(%var_6190: Tensor[(84, 22), int64]) -> (Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), float64], Tensor[(12, 14, 11), bool], Tensor[(84, 22), int64], Tensor[(5, 7, 6), uint64]) {
  %197 = @func_5606() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) */;
  %198 = @func_2768() /* ty=(Tensor[(5, 7, 6), float64], Tensor[(210), uint64], Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) */;
  %199 = cast(%var_6190, dtype="int64") /* ty=Tensor[(84, 22), int64] */;
  %200 = cast(%var_6190, dtype="int64") /* ty=Tensor[(84, 22), int64] */;
  %201 = reshape(%199, newshape=[12, 14, 11]) /* ty=Tensor[(12, 14, 11), int64] */;
  %202 = reshape(%200, newshape=[12, 14, 11]) /* ty=Tensor[(12, 14, 11), int64] */;
  %203 = @func_54(%201, %202) /* ty=(Tensor[(12, 14, 11), uint32], Tensor[(12, 14, 11), bool]) */;
  %204 = @func_5773() /* ty=(Tensor[(5, 7, 6), uint64],) */;
  %205 = %197.0;
  %206 = %198.0;
  %207 = %203.1;
  %208 = %204.0;
  (%205, %206, %207, %var_6190, %208)
}

def @func_8211() -> Tensor[(15, 15, 9), float32] {
  @func_6728() /* ty=Tensor[(15, 15, 9), float32] */
}

def @func_4885() -> (Tensor[(2, 924), int64],) {
  %209 = @func_2087() /* ty=(Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64], Tensor[(210), uint64], Tensor[(12, 14, 11), bool], Tensor[(2, 924), int64], Tensor[(12, 14, 11), bool]) */;
  %210 = %209.4;
  (%210,)
}

def @func_13966() -> (Tensor[(288), float32],) {
  %211 = @func_6991() /* ty=Tensor[(288), float32] */;
  (%211,)
}

def @func_6912() -> Tensor[(15, 15, 9), float32] {
  %212 = @func_5329() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(15, 15, 9), float32]) */;
  %212.1
}

def @func_11768() -> Tensor[(648), float32] {
  %213 = @func_6446() /* ty=(Tensor[(648), float32], Tensor[(12, 14, 11), int16], Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), bool]) */;
  %213.0
}

def @func_54(%var_23: Tensor[(12, 14, 11), int64], %var_45: Tensor[(12, 14, 11), int64]) -> (Tensor[(12, 14, 11), uint32], Tensor[(12, 14, 11), bool]) {
  %214 = cast(%var_23, dtype="int64") /* ty=Tensor[(12, 14, 11), int64] */;
  %215 = shape_of(meta[relay.Constant][7] /* ty=Tensor[(12, 14, 11), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %216 = cast(meta[relay.Constant][7] /* ty=Tensor[(12, 14, 11), int64] */, dtype="int64") /* ty=Tensor[(12, 14, 11), int64] */;
  %217 = dyn.reshape(%214, %215, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %218 = bitwise_and(%216, %217) /* ty=Tensor[(12, 14, 11), int64] */;
  %219 = cast(meta[relay.Constant][7] /* ty=Tensor[(12, 14, 11), int64] */, dtype="uint32") /* ty=Tensor[(12, 14, 11), uint32] */;
  %220 = shape_of(%218, dtype="int32") /* ty=Tensor[(3), int32] */;
  %221 = cast(%218, dtype="uint32") /* ty=Tensor[(12, 14, 11), uint32] */;
  %222 = dyn.reshape(%219, %220, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %223 = cast(%var_45, dtype="bool") /* ty=Tensor[(12, 14, 11), bool] */;
  %224 = shape_of(%218, dtype="int32") /* ty=Tensor[(3), int32] */;
  %225 = cast(%218, dtype="bool") /* ty=Tensor[(12, 14, 11), bool] */;
  %226 = dyn.reshape(%223, %224, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %227 = right_shift(%221, %222) /* ty=Tensor[(12, 14, 11), uint32] */;
  %228 = less(%225, %226) /* ty=Tensor[(12, 14, 11), bool] */;
  (%227, %228)
}

def @func_13993() -> Tensor[(5, 7, 6), float64] {
  %229 = @func_6045() /* ty=(Tensor[(12, 14, 11), int16], Tensor[(5, 7, 6), float64], Tensor[(210), uint64], Tensor[(12, 14, 11), bool]) */;
  %229.1
}

def @func_11444() -> (Tensor[(5, 7, 6), uint64],) {
  %230 = @func_3587() /* ty=(Tensor[(5, 7, 6), uint64],) */;
  %231 = %230.0;
  (%231,)
}

def @func_2930() -> (Tensor[(5, 7, 6), uint64],) {
  %232 = @func_2630() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) */;
  %233 = %232.0;
  (%233,)
}

def @func_5247() -> Tensor[(16, 11, ?), bool] {
  %234 = @func_3868() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64], Tensor[(16, 11, ?), bool]) */;
  %234.2
}

def @func_3417() -> Tensor[(12, 14, 11), bool] {
  %235 = @func_3226() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64]) */;
  %235.0
}

def @func_9318() -> (Tensor[(5, 7, 6), bool], Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), int16], Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64], Tensor[(16, 11, ?), float32]) {
  %236 = @func_3950() /* ty=(Tensor[(5, 7, 6), bool],) */;
  %237 = @func_9003() /* ty=(Tensor[(12, 14, 11), int16], Tensor[(15, 15, 9), float64]) */;
  %238 = @func_8236() /* ty=(Tensor[(5, 7, 6), uint64],) */;
  %239 = @func_5247() /* ty=Tensor[(16, 11, ?), bool] */;
  %240 = cast(%239, dtype="float32") /* ty=Tensor[(16, 11, ?), float32] */;
  %241 = asin(%240) /* ty=Tensor[(16, 11, ?), float32] */;
  %242 = cast(%239, dtype="float32") /* ty=Tensor[(16, 11, ?), float32] */;
  %243 = shape_of(%241, dtype="int32") /* ty=Tensor[(3), int32] */;
  %244 = cast(%241, dtype="float32") /* ty=Tensor[(16, 11, ?), float32] */;
  %245 = dyn.reshape(%242, %243, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %246 = %236.0;
  %247 = @func_2290() /* ty=Tensor[(5, 7, 6), uint64] */;
  %248 = %237.0;
  %249 = @func_5962() /* ty=Tensor[(12, 14, 11), bool] */;
  %250 = @func_3417() /* ty=Tensor[(12, 14, 11), bool] */;
  %251 = %238.0;
  %252 = power(%244, %245) /* ty=Tensor[(16, 11, ?), float32] */;
  (%246, %247, %248, %249, %250, %251, %252)
}

def @func_11476() -> (Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), float64], Tensor[(648), float32]) {
  %253 = @func_7640() /* ty=(Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64], Tensor[(15, 15, 9), float32], Tensor[(12, 14, 11), bool]) */;
  %254 = cast(meta[relay.Constant][8] /* ty=Tensor[(648), float32] */, dtype="float32") /* ty=Tensor[(648), float32] */;
  %255 = reshape(%254, newshape=[648]) /* ty=Tensor[(648), float32] */;
  %256 = @func_7423(%255) /* ty=(Tensor[(8, 12, 3), bool], Tensor[(288), float32], Tensor[(1848), int64], Tensor[(202752), int16], Tensor[(9, 12, 6), float32], Tensor[(648), float32], Tensor[(202752), float32], Tensor[(5, 7, 6), float64], Tensor[(210), uint64]) */;
  %257 = %253.2;
  %258 = %256.7;
  (%257, %258, meta[relay.Constant][8] /* ty=Tensor[(648), float32] */)
}

def @func_11391() -> (Tensor[(9, 12, 6), float32], Tensor[(1152), int64], Tensor[(210), uint64], Tensor[(15, 15, 9), float32]) {
  %259 = @func_4943() /* ty=(Tensor[(12, 14, 11), int16], Tensor[(5, 7, 6), uint64], Tensor[(9, 12, 6), float32], Tensor[(648), float32], Tensor[(12, 14, 11), bool]) */;
  %260 = @func_5055() /* ty=(Tensor[(1152), int64],) */;
  %261 = @func_2768() /* ty=(Tensor[(5, 7, 6), float64], Tensor[(210), uint64], Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) */;
  %262 = @func_8957() /* ty=(Tensor[(15, 15, 9), float32],) */;
  %263 = %259.2;
  %264 = %260.0;
  %265 = %261.1;
  %266 = %262.0;
  (%263, %264, %265, %266)
}

def @func_5883(%var_5835: Tensor[(5, 7, 6), uint64]) -> Tensor[(5, 7, 6), float64] {
  %267 = @func_4850() /* ty=Tensor[(5, 7, 6), uint64] */;
  %268 = cast(%var_5835, dtype="int8") /* ty=Tensor[(5, 7, 6), int8] */;
  %269 = shape_of(%267, dtype="int32") /* ty=Tensor[(3), int32] */;
  %270 = cast(%267, dtype="int8") /* ty=Tensor[(5, 7, 6), int8] */;
  %271 = dyn.reshape(%268, %269, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %272 = minimum(%270, %271) /* ty=Tensor[(5, 7, 6), int8] */;
  %273 = cast(%272, dtype="float64") /* ty=Tensor[(5, 7, 6), float64] */;
  sqrt(%273) /* ty=Tensor[(5, 7, 6), float64] */
}

def @main(%var_15229: Tensor[(9, 12, 6), float32]) -> (Tensor[(1152), int64], Tensor[(9, 12, 6), float64]) {
  %274 = @func_6587() /* ty=(Tensor[(1152), int64],) */;
  %275 = @func_14095() /* ty=(Tensor[(9, 12, 6), float32],) */;
  %276 = %275.0;
  %277 = cast(%var_15229, dtype="float64") /* ty=Tensor[(9, 12, 6), float64] */;
  %278 = shape_of(%276, dtype="int32") /* ty=Tensor[(3), int32] */;
  %279 = cast(%276, dtype="float64") /* ty=Tensor[(9, 12, 6), float64] */;
  %280 = dyn.reshape(%277, %278, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %281 = %274.0;
  %282 = power(%279, %280) /* ty=Tensor[(9, 12, 6), float64] */;
  (%281, %282)
}

def @func_1957(%var_1954: Tensor[(9, 2, 16), float32]) -> (Tensor[(9, 2, 16), float32],) {
  %283 = cast(%var_1954, dtype="float32") /* ty=Tensor[(9, 2, 16), float32] */;
  %284 = rsqrt(%283) /* ty=Tensor[(9, 2, 16), float32] */;
  (%284,)
}

def @func_13617() -> Tensor[(16, 11, ?), bool] {
  @func_5247() /* ty=Tensor[(16, 11, ?), bool] */
}

def @func_13465() -> (Tensor[(16, 10, 16), float64], Tensor[(5, 120), float32]) {
  %285 = cast(meta[relay.Constant][9] /* ty=Tensor[(16, 10, 16), float64] */, dtype="float64") /* ty=Tensor[(16, 10, 16), float64] */;
  %286 = @func_11063() /* ty=(Tensor[(5, 120), float32],) */;
  %287 = erf(%285) /* ty=Tensor[(16, 10, 16), float64] */;
  %288 = %286.0;
  (%287, %288)
}

def @func_4829() -> (Tensor[(12, 14, 11), bool],) {
  %289 = @func_4488() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), bool]) */;
  %290 = %289.0;
  (%290,)
}

def @func_4865() -> (Tensor[(5, 7, 6), uint64], Tensor[(15, 15, 9), float32]) {
  %291 = @func_3226() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64]) */;
  %292 = @func_2575() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(15, 15, 9), float32], Tensor[(1152), int64], Tensor[(210), uint64]) */;
  %293 = %291.1;
  %294 = %292.1;
  (%293, %294)
}

def @func_1838(%var_1829: Tensor[(5, 7, 6), uint64], %var_1830: Tensor[(5, 7, 6), uint64]) -> Tensor[(5, 7, 6), uint64] {
  %295 = cast(%var_1830, dtype="uint64") /* ty=Tensor[(5, 7, 6), uint64] */;
  %296 = shape_of(%var_1829, dtype="int32") /* ty=Tensor[(3), int32] */;
  %297 = cast(%var_1829, dtype="uint64") /* ty=Tensor[(5, 7, 6), uint64] */;
  %298 = dyn.reshape(%295, %296, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  right_shift(%297, %298) /* ty=Tensor[(5, 7, 6), uint64] */
}

def @func_3939() -> (Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) {
  %299 = @func_3587() /* ty=(Tensor[(5, 7, 6), uint64],) */;
  %300 = @func_3226() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64]) */;
  %301 = %299.0;
  %302 = %300.1;
  (%301, %302)
}

def @func_12640() -> (Tensor[(12, 14, 11), bool],) {
  %303 = @func_7550() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64]) */;
  %304 = %303.0;
  (%304,)
}

def @func_6286() -> Tensor[(5, 7, 6), uint64] {
  %305 = @func_3226() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64]) */;
  %305.1
}

def @func_8822(%var_8816: Tensor[(11, 16, 4), uint32], %var_8817: Tensor[(11, 16, 4), uint32]) -> (Tensor[(11, 16, 4), bool],) {
  %306 = cast(%var_8817, dtype="bool") /* ty=Tensor[(11, 16, 4), bool] */;
  %307 = shape_of(%var_8816, dtype="int32") /* ty=Tensor[(3), int32] */;
  %308 = cast(%var_8816, dtype="bool") /* ty=Tensor[(11, 16, 4), bool] */;
  %309 = dyn.reshape(%306, %307, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %310 = less(%308, %309) /* ty=Tensor[(11, 16, 4), bool] */;
  (%310,)
}

def @func_12100() -> Tensor[(12, 14, 11), bool] {
  %311 = @func_5583() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(210), uint64], Tensor[(176), float32], Tensor[(1, 120), int32], Tensor[(1848), int64], Tensor[(288), float32]) */;
  %311.0
}

def @func_13107() -> (Tensor[(5, 7, 6), float64],) {
  %312 = @func_6902() /* ty=(Tensor[(5, 7, 6), float64], Tensor[(15, 15, 9), float32]) */;
  %313 = %312.0;
  (%313,)
}

def @func_6135() -> Tensor[(5, 7, 6), uint64] {
  %314 = @func_2630() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) */;
  %314.0
}

def @func_8311(%var_8300: Tensor[(1152), int64]) -> (Tensor[(5, 7, 6), uint64], Tensor[(1152), int8]) {
  %315 = @func_2630() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) */;
  %316 = @func_5055() /* ty=(Tensor[(1152), int64],) */;
  %317 = %316.0;
  %318 = cast(%var_8300, dtype="int8") /* ty=Tensor[(1152), int8] */;
  %319 = shape_of(%317, dtype="int32") /* ty=Tensor[(1), int32] */;
  %320 = cast(%317, dtype="int8") /* ty=Tensor[(1152), int8] */;
  %321 = dyn.reshape(%318, %319, newshape=[]) /* ty=Tensor[(?), int8] */;
  %322 = %315.1;
  %323 = multiply(%320, %321) /* ty=Tensor[(1152), int8] */;
  (%322, %323)
}

def @func_8107(%var_8051: Tensor[(15, 13, 5), float64], %var_8100: Tensor[(15, 13, 5), float64]) -> (Tensor[(15, 13, 5), int64], Tensor[(12, 11, 7), uint32], Tensor[(924, 1), uint32], Tensor[(15, 13, 5), float64]) {
  %324 = cast(%var_8051, dtype="float64") /* ty=Tensor[(15, 13, 5), float64] */;
  %325 = exp(%324) /* ty=Tensor[(15, 13, 5), float64] */;
  %326 = cast(%325, dtype="float64") /* ty=Tensor[(15, 13, 5), float64] */;
  %327 = acos(%326) /* ty=Tensor[(15, 13, 5), float64] */;
  %328 = cast(%327, dtype="float32") /* ty=Tensor[(15, 13, 5), float32] */;
  %329 = atan(%328) /* ty=Tensor[(15, 13, 5), float32] */;
  %330 = cast(%327, dtype="int64") /* ty=Tensor[(15, 13, 5), int64] */;
  %331 = shape_of(%329, dtype="int32") /* ty=Tensor[(3), int32] */;
  %332 = cast(%329, dtype="int64") /* ty=Tensor[(15, 13, 5), int64] */;
  %333 = dyn.reshape(%330, %331, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %334 = cast(meta[relay.Constant][10] /* ty=Tensor[(924, 1), uint32] */, dtype="uint32") /* ty=Tensor[(924, 1), uint32] */;
  %335 = cast(meta[relay.Constant][10] /* ty=Tensor[(924, 1), uint32] */, dtype="uint32") /* ty=Tensor[(924, 1), uint32] */;
  %336 = reshape(%334, newshape=[12, 11, 7]) /* ty=Tensor[(12, 11, 7), uint32] */;
  %337 = reshape(%335, newshape=[12, 11, 7]) /* ty=Tensor[(12, 11, 7), uint32] */;
  %338 = cast(%var_8100, dtype="float64") /* ty=Tensor[(15, 13, 5), float64] */;
  %339 = shape_of(%327, dtype="int32") /* ty=Tensor[(3), int32] */;
  %340 = cast(%327, dtype="float64") /* ty=Tensor[(15, 13, 5), float64] */;
  %341 = dyn.reshape(%338, %339, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %342 = right_shift(%332, %333) /* ty=Tensor[(15, 13, 5), int64] */;
  %343 = @func_8032(%336, %337) /* ty=Tensor[(12, 11, 7), uint32] */;
  %344 = floor_divide(%340, %341) /* ty=Tensor[(15, 13, 5), float64] */;
  (%342, %343, meta[relay.Constant][10] /* ty=Tensor[(924, 1), uint32] */, %344)
}

def @func_12337() -> Tensor[(12, 14, 11), bool] {
  %345 = @func_10586() /* ty=(Tensor[(11, 15, 11), int16], Tensor[(12, 14, 11), bool]) */;
  %345.1
}

def @func_13343(%var_13319: Tensor[(24, 10), int32]) -> (Tensor[(5, 7, 6), bool], Tensor[(240), int32], Tensor[(24, 10), int32], Tensor[(1152), int64]) {
  %346 = @func_7541() /* ty=(Tensor[(210), uint64], Tensor[(5, 7, 6), bool], Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), int32], Tensor[(176), float32]) */;
  %347 = cast(%var_13319, dtype="int32") /* ty=Tensor[(24, 10), int32] */;
  %348 = reshape(%347, newshape=[240]) /* ty=Tensor[(240), int32] */;
  %349 = @func_10865(%348) /* ty=(Tensor[(15, 15, 9), float32], Tensor[(1848, 1), int64], Tensor[(1, 120), int32], Tensor[(240), int32], Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64]) */;
  %350 = @func_6587() /* ty=(Tensor[(1152), int64],) */;
  %351 = %346.1;
  %352 = %349.3;
  %353 = %350.0;
  (%351, %352, %var_13319, %353)
}

def @func_7690() -> (Tensor[(12, 14, 11), bool], Tensor[(210), uint64], Tensor[(12, 14, 11), float32]) {
  %354 = @func_7550() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64]) */;
  %355 = @func_2768() /* ty=(Tensor[(5, 7, 6), float64], Tensor[(210), uint64], Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) */;
  %356 = @func_4640() /* ty=(Tensor[(12, 14, 11), float32],) */;
  %357 = %354.0;
  %358 = %355.1;
  %359 = %356.0;
  (%357, %358, %359)
}

def @func_9899() -> Tensor[(1152), int64] {
  %360 = @func_5055() /* ty=(Tensor[(1152), int64],) */;
  %360.0
}

def @func_2415() -> Tensor[(12, 14, 11), bool] {
  %361 = @func_2219() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), bool]) */;
  %361.1
}

def @func_4619() -> (Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), bool]) {
  %362 = @func_4554() /* ty=(Tensor[(12, 14, 11), bool],) */;
  %363 = @func_3914() /* ty=Tensor[(12, 14, 11), bool] */;
  %364 = %362.0;
  (%363, %364)
}

def @func_10216() -> (Tensor[(16, 11, ?), float64], Tensor[(5, 7, 6), float64], Tensor[(5, 7, 6), uint64]) {
  %365 = @func_4991() /* ty=Tensor[(16, 11, ?), bool] */;
  %366 = cast(%365, dtype="float64") /* ty=Tensor[(16, 11, ?), float64] */;
  %367 = @func_6045() /* ty=(Tensor[(12, 14, 11), int16], Tensor[(5, 7, 6), float64], Tensor[(210), uint64], Tensor[(12, 14, 11), bool]) */;
  %368 = @func_3838() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) */;
  %369 = log2(%366) /* ty=Tensor[(16, 11, ?), float64] */;
  %370 = %367.1;
  %371 = %368.1;
  (%369, %370, %371)
}

def @func_4682(%var_4676: Tensor[(288), float32], %var_4677: Tensor[(44, 4), float32]) -> (Tensor[(15, 15, 9), float32], Tensor[(12, 14, 11), float32], Tensor[(288), float32], Tensor[(288), float32], Tensor[(44, 4), float32]) {
  %372 = @func_2398() /* ty=(Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64]) */;
  %373 = @func_4640() /* ty=(Tensor[(12, 14, 11), float32],) */;
  %374 = cast(%var_4676, dtype="float32") /* ty=Tensor[(288), float32] */;
  %375 = cast(%var_4677, dtype="float32") /* ty=Tensor[(44, 4), float32] */;
  %376 = reshape(%374, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %377 = reshape(%375, newshape=[176]) /* ty=Tensor[(176), float32] */;
  %378 = @func_2147(%376, %377) /* ty=(Tensor[(2, 924), int64], Tensor[(9, 2, 16), float32], Tensor[(288), float32], Tensor[(16, 11, 1), float32], Tensor[(176), float32], Tensor[(16, 11, 1), float32]) */;
  %379 = %372.0;
  %380 = %373.0;
  %381 = %378.2;
  (%379, %380, %381, %var_4676, %var_4677)
}

def @func_5751(%var_5745: Tensor[(16, 11, 1152), int32]) -> (Tensor[(16, 11, ?), bool], Tensor[(16, 11, 1152), bool], Tensor[(16, 11, 1152), bool]) {
  %382 = @func_5055() /* ty=(Tensor[(1152), int64],) */;
  %383 = %382.0;
  %384 = @func_4991() /* ty=Tensor[(16, 11, ?), bool] */;
  %385 = cast(%383, dtype="int32") /* ty=Tensor[(1152), int32] */;
  %386 = cast(%384, dtype="int32") /* ty=Tensor[(16, 11, ?), int32] */;
  %387 = left_shift(%385, %386) /* ty=Tensor[(16, 11, 1152), int32] */;
  %388 = cast(%387, dtype="bool") /* ty=Tensor[(16, 11, 1152), bool] */;
  %389 = cast(%384, dtype="bool") /* ty=Tensor[(16, 11, ?), bool] */;
  %390 = cast(%var_5745, dtype="bool") /* ty=Tensor[(16, 11, 1152), bool] */;
  %391 = shape_of(%387, dtype="int32") /* ty=Tensor[(3), int32] */;
  %392 = cast(%387, dtype="bool") /* ty=Tensor[(16, 11, 1152), bool] */;
  %393 = dyn.reshape(%390, %391, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %394 = @func_5247() /* ty=Tensor[(16, 11, ?), bool] */;
  %395 = greater_equal(%388, %389) /* ty=Tensor[(16, 11, 1152), bool] */;
  %396 = greater(%392, %393) /* ty=Tensor[(16, 11, 1152), bool] */;
  (%394, %395, %396)
}

def @func_2575() -> (Tensor[(12, 14, 11), bool], Tensor[(15, 15, 9), float32], Tensor[(1152), int64], Tensor[(210), uint64]) {
  %397 = @func_2087() /* ty=(Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64], Tensor[(210), uint64], Tensor[(12, 14, 11), bool], Tensor[(2, 924), int64], Tensor[(12, 14, 11), bool]) */;
  %398 = cast(meta[relay.Constant][11] /* ty=Tensor[(1152), int64] */, dtype="int64") /* ty=Tensor[(1152), int64] */;
  %399 = cast(meta[relay.Constant][11] /* ty=Tensor[(1152), int64] */, dtype="int64") /* ty=Tensor[(1152), int64] */;
  %400 = cast(meta[relay.Constant][12] /* ty=Tensor[(210), uint64] */, dtype="uint64") /* ty=Tensor[(210), uint64] */;
  %401 = reshape(%398, newshape=[8, 16, 9]) /* ty=Tensor[(8, 16, 9), int64] */;
  %402 = reshape(%399, newshape=[8, 16, 9]) /* ty=Tensor[(8, 16, 9), int64] */;
  %403 = reshape(%400, newshape=[210]) /* ty=Tensor[(210), uint64] */;
  %404 = @func_2442(%401, %402, %403) /* ty=(Tensor[(8, 16, 9), bool], Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64], Tensor[(210), uint64]) */;
  %405 = %397.3;
  %406 = %404.1;
  (%405, %406, meta[relay.Constant][11] /* ty=Tensor[(1152), int64] */, meta[relay.Constant][12] /* ty=Tensor[(210), uint64] */)
}

def @func_6627(%var_6611: Tensor[(15, 3, 7), uint16], %var_6616: Tensor[(15, 3, 7), uint16]) -> (Tensor[(15, 3, 7), bool], Tensor[(5, 7, 6), uint64]) {
  %407 = cast(meta[relay.Constant][13] /* ty=Tensor[(15, 3, 7), uint16] */, dtype="uint16") /* ty=Tensor[(15, 3, 7), uint16] */;
  %408 = shape_of(%var_6611, dtype="int32") /* ty=Tensor[(3), int32] */;
  %409 = cast(%var_6611, dtype="uint16") /* ty=Tensor[(15, 3, 7), uint16] */;
  %410 = dyn.reshape(%407, %408, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %411 = subtract(%409, %410) /* ty=Tensor[(15, 3, 7), uint16] */;
  %412 = cast(%var_6616, dtype="bool") /* ty=Tensor[(15, 3, 7), bool] */;
  %413 = shape_of(%411, dtype="int32") /* ty=Tensor[(3), int32] */;
  %414 = cast(%411, dtype="bool") /* ty=Tensor[(15, 3, 7), bool] */;
  %415 = dyn.reshape(%412, %413, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %416 = @func_5905() /* ty=(Tensor[(5, 7, 6), uint64],) */;
  %417 = logical_or(%414, %415) /* ty=Tensor[(15, 3, 7), bool] */;
  %418 = %416.0;
  (%417, %418)
}

def @func_13052(%var_12966: Tensor[(224), float32], %var_13010: Tensor[(5, 120), bool]) -> (Tensor[(16, 11, ?), bool], Tensor[(8, 7, 4), int8], Tensor[(224), float32], Tensor[(5, 120), float64], Tensor[(288), float32], Tensor[(5, 7, 6), uint64], Tensor[(5, 120), float64], Tensor[(12, 14, 11), bool], Tensor[(1848), int64], Tensor[(5, 120), float32], Tensor[(1, 120), int32], Tensor[(5, 120), float64], Tensor[(1, 120), float32]) {
  %419 = cast(%var_12966, dtype="float32") /* ty=Tensor[(224), float32] */;
  %420 = reshape(%419, newshape=[224]) /* ty=Tensor[(224), float32] */;
  %421 = @func_8180(%420) /* ty=(Tensor[(15, 15, 9), float32], Tensor[(12, 14, 11), float32], Tensor[(8, 7, 4), int8], Tensor[(224), float32]) */;
  %422 = @func_11063() /* ty=(Tensor[(5, 120), float32],) */;
  %423 = %422.0;
  %424 = cast(%423, dtype="float64") /* ty=Tensor[(5, 120), float64] */;
  %425 = log(%424) /* ty=Tensor[(5, 120), float64] */;
  %426 = cast(%425, dtype="float64") /* ty=Tensor[(5, 120), float64] */;
  %427 = @func_7714() /* ty=(Tensor[(5, 7, 6), uint64],) */;
  %428 = cast(%425, dtype="float64") /* ty=Tensor[(5, 120), float64] */;
  %429 = asinh(%428) /* ty=Tensor[(5, 120), float64] */;
  %430 = cast(%425, dtype="float64") /* ty=Tensor[(5, 120), float64] */;
  %431 = shape_of(%429, dtype="int32") /* ty=Tensor[(2), int32] */;
  %432 = cast(%429, dtype="float64") /* ty=Tensor[(5, 120), float64] */;
  %433 = dyn.reshape(%430, %431, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %434 = cast(meta[relay.Constant][14] /* ty=Tensor[(1848), int64] */, dtype="int64") /* ty=Tensor[(1848), int64] */;
  %435 = reshape(%434, newshape=[2, 924]) /* ty=Tensor[(2, 924), int64] */;
  %436 = @func_5163(%435) /* ty=(Tensor[(12, 14, 11), bool], Tensor[(2, 924), float64]) */;
  %437 = cast(%423, dtype="bool") /* ty=Tensor[(5, 120), bool] */;
  %438 = shape_of(%425, dtype="int32") /* ty=Tensor[(2), int32] */;
  %439 = cast(%425, dtype="bool") /* ty=Tensor[(5, 120), bool] */;
  %440 = dyn.reshape(%437, %438, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %441 = greater(%439, %440) /* ty=Tensor[(5, 120), bool] */;
  %442 = cast(%var_13010, dtype="bool") /* ty=Tensor[(5, 120), bool] */;
  %443 = shape_of(%441, dtype="int32") /* ty=Tensor[(2), int32] */;
  %444 = cast(%441, dtype="bool") /* ty=Tensor[(5, 120), bool] */;
  %445 = dyn.reshape(%442, %443, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %446 = logical_and(%444, %445) /* ty=Tensor[(5, 120), bool] */;
  %447 = cast(%425, dtype="float32") /* ty=Tensor[(5, 120), float32] */;
  %448 = shape_of(%446, dtype="int32") /* ty=Tensor[(2), int32] */;
  %449 = cast(%446, dtype="float32") /* ty=Tensor[(5, 120), float32] */;
  %450 = dyn.reshape(%447, %448, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %451 = @func_6451() /* ty=(Tensor[(1, 120), int32],) */;
  %452 = cast(%446, dtype="float64") /* ty=Tensor[(5, 120), float64] */;
  %453 = @func_9344() /* ty=(Tensor[(16, 11, ?), bool], Tensor[(1, 120), float32]) */;
  %454 = @func_9388() /* ty=Tensor[(16, 11, ?), bool] */;
  %455 = %421.2;
  %456 = asin(%426) /* ty=Tensor[(5, 120), float64] */;
  %457 = @func_6991() /* ty=Tensor[(288), float32] */;
  %458 = %427.0;
  %459 = floor_mod(%432, %433) /* ty=Tensor[(5, 120), float64] */;
  %460 = %436.0;
  %461 = floor_divide(%449, %450) /* ty=Tensor[(5, 120), float32] */;
  %462 = %451.0;
  %463 = log2(%452) /* ty=Tensor[(5, 120), float64] */;
  %464 = %453.1;
  (%454, %455, %var_12966, %456, %457, %458, %459, %460, meta[relay.Constant][14] /* ty=Tensor[(1848), int64] */, %461, %462, %463, %464)
}

def @func_15190(%var_15169: Tensor[(18), float32]) -> (Tensor[(5, 7, 6), bool], Tensor[(12, 14, 11), int16], Tensor[(9, 2, 16), float32], Tensor[(5, 7, 6), uint64], Tensor[(288), float32], Tensor[(5, 7, 6), float64], Tensor[(12, 14, 11), bool], Tensor[(1, 9, 2), float32], Tensor[(18), float32], Tensor[(12, 11, 7), uint32], Tensor[(16, 11, 288), bool]) {
  %465 = @func_7355() /* ty=(Tensor[(5, 7, 6), bool],) */;
  %466 = @func_9003() /* ty=(Tensor[(12, 14, 11), int16], Tensor[(15, 15, 9), float64]) */;
  %467 = cast(meta[relay.Constant][15] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
  %468 = reshape(%467, newshape=[9, 2, 16]) /* ty=Tensor[(9, 2, 16), float32] */;
  %469 = @func_1957(%468) /* ty=(Tensor[(9, 2, 16), float32],) */;
  %470 = @func_6286() /* ty=Tensor[(5, 7, 6), uint64] */;
  %471 = cast(%470, dtype="uint64") /* ty=Tensor[(5, 7, 6), uint64] */;
  %472 = reshape(%471, newshape=[5, 7, 6]) /* ty=Tensor[(5, 7, 6), uint64] */;
  %473 = @func_14850() /* ty=(Tensor[(12, 14, 11), bool],) */;
  %474 = cast(%var_15169, dtype="float32") /* ty=Tensor[(18), float32] */;
  %475 = reshape(%474, newshape=[1, 9, 2]) /* ty=Tensor[(1, 9, 2), float32] */;
  %476 = @func_12121() /* ty=(Tensor[(210), uint64], Tensor[(12, 11, 7), uint32], Tensor[(14, 66), uint32]) */;
  %477 = @func_4991() /* ty=Tensor[(16, 11, ?), bool] */;
  %478 = cast(%477, dtype="bool") /* ty=Tensor[(16, 11, ?), bool] */;
  %479 = cast(meta[relay.Constant][15] /* ty=Tensor[(288), float32] */, dtype="bool") /* ty=Tensor[(288), bool] */;
  %480 = greater_equal(%478, %479) /* ty=Tensor[(16, 11, 288), bool] */;
  %481 = cast(%480, dtype="float64") /* ty=Tensor[(16, 11, 288), float64] */;
  %482 = erf(%481) /* ty=Tensor[(16, 11, 288), float64] */;
  %483 = cast(%480, dtype="uint8") /* ty=Tensor[(16, 11, 288), uint8] */;
  %484 = cast(%477, dtype="uint8") /* ty=Tensor[(16, 11, ?), uint8] */;
  %485 = multiply(%483, %484) /* ty=Tensor[(16, 11, 288), uint8] */;
  %486 = cast(%485, dtype="bool") /* ty=Tensor[(16, 11, 288), bool] */;
  %487 = shape_of(%482, dtype="int32") /* ty=Tensor[(3), int32] */;
  %488 = cast(%482, dtype="bool") /* ty=Tensor[(16, 11, 288), bool] */;
  %489 = dyn.reshape(%486, %487, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %490 = %465.0;
  %491 = %466.0;
  %492 = %469.0;
  %493 = @func_13130() /* ty=Tensor[(288), float32] */;
  %494 = @func_5883(%472) /* ty=Tensor[(5, 7, 6), float64] */;
  %495 = %473.0;
  %496 = @func_6961(%475) /* ty=Tensor[(1, 9, 2), float32] */;
  %497 = %476.1;
  %498 = equal(%488, %489) /* ty=Tensor[(16, 11, 288), bool] */;
  (%490, %491, %492, %470, %493, %494, %495, %496, %var_15169, %497, %498)
}

def @func_5773() -> (Tensor[(5, 7, 6), uint64],) {
  %499 = @func_3587() /* ty=(Tensor[(5, 7, 6), uint64],) */;
  %500 = %499.0;
  (%500,)
}

def @func_2398() -> (Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64]) {
  %501 = @func_2087() /* ty=(Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64], Tensor[(210), uint64], Tensor[(12, 14, 11), bool], Tensor[(2, 924), int64], Tensor[(12, 14, 11), bool]) */;
  %502 = %501.0;
  %503 = @func_2290() /* ty=Tensor[(5, 7, 6), uint64] */;
  (%502, %503)
}

def @func_6391() -> (Tensor[(5, 7, 6), uint64],) {
  %504 = @func_5606() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) */;
  %505 = %504.0;
  (%505,)
}

def @func_3607() -> (Tensor[(5, 7, 6), bool],) {
  %506 = @func_3587() /* ty=(Tensor[(5, 7, 6), uint64],) */;
  %507 = %506.0;
  %508 = cast(meta[relay.Constant][16] /* ty=Tensor[(5, 7, 6), uint64] */, dtype="bool") /* ty=Tensor[(5, 7, 6), bool] */;
  %509 = shape_of(%507, dtype="int32") /* ty=Tensor[(3), int32] */;
  %510 = cast(%507, dtype="bool") /* ty=Tensor[(5, 7, 6), bool] */;
  %511 = dyn.reshape(%508, %509, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %512 = not_equal(%510, %511) /* ty=Tensor[(5, 7, 6), bool] */;
  (%512,)
}

def @func_6728() -> Tensor[(15, 15, 9), float32] {
  %513 = @func_2398() /* ty=(Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64]) */;
  %513.0
}

def @func_565(%var_545: Tensor[(8, 15, 1), int32], %var_546: Tensor[(8, 15, 2), int32], %var_554: Tensor[(1848, 1), int64]) -> (Tensor[(8, 15, 2), bool], Tensor[(12, 14, 11), bool], Tensor[(1848, 1), int64]) {
  %514 = cast(%var_545, dtype="bool") /* ty=Tensor[(8, 15, 1), bool] */;
  %515 = cast(%var_546, dtype="bool") /* ty=Tensor[(8, 15, 2), bool] */;
  %516 = cast(%var_554, dtype="int64") /* ty=Tensor[(1848, 1), int64] */;
  %517 = cast(%var_554, dtype="int64") /* ty=Tensor[(1848, 1), int64] */;
  %518 = reshape(%516, newshape=[12, 14, 11]) /* ty=Tensor[(12, 14, 11), int64] */;
  %519 = reshape(%517, newshape=[12, 14, 11]) /* ty=Tensor[(12, 14, 11), int64] */;
  %520 = @func_54(%518, %519) /* ty=(Tensor[(12, 14, 11), uint32], Tensor[(12, 14, 11), bool]) */;
  %521 = less(%514, %515) /* ty=Tensor[(8, 15, 2), bool] */;
  %522 = %520.1;
  (%521, %522, %var_554)
}

def @func_13958() -> (Tensor[(15, 15, 9), float32], Tensor[(12, 14, 11), bool], Tensor[(15, 15, 9), float32], Tensor[(12, 14, 11), bool], Tensor[(1152), int64]) {
  %523 = @func_11142() /* ty=(Tensor[(15, 15, 9), float32],) */;
  %524 = @func_10950() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), bool], Tensor[(240), int32]) */;
  %525 = @func_6902() /* ty=(Tensor[(5, 7, 6), float64], Tensor[(15, 15, 9), float32]) */;
  %526 = @func_13859() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), bool]) */;
  %527 = @func_4362() /* ty=(Tensor[(1152), int64],) */;
  %528 = %523.0;
  %529 = %524.1;
  %530 = %525.1;
  %531 = %526.0;
  %532 = %527.0;
  (%528, %529, %530, %531, %532)
}

def @func_2290() -> Tensor[(5, 7, 6), uint64] {
  %533 = @func_2219() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), bool]) */;
  %533.0
}

def @func_6741(%var_6739: Tensor[(1152), int64]) -> (Tensor[(210), uint64], Tensor[(5, 7, 6), uint64], Tensor[(1152), int64]) {
  %534 = @func_6045() /* ty=(Tensor[(12, 14, 11), int16], Tensor[(5, 7, 6), float64], Tensor[(210), uint64], Tensor[(12, 14, 11), bool]) */;
  %535 = cast(%var_6739, dtype="int64") /* ty=Tensor[(1152), int64] */;
  %536 = cast(%var_6739, dtype="int64") /* ty=Tensor[(1152), int64] */;
  %537 = %534.2;
  %538 = cast(%537, dtype="uint64") /* ty=Tensor[(210), uint64] */;
  %539 = reshape(%535, newshape=[8, 16, 9]) /* ty=Tensor[(8, 16, 9), int64] */;
  %540 = reshape(%536, newshape=[8, 16, 9]) /* ty=Tensor[(8, 16, 9), int64] */;
  %541 = reshape(%538, newshape=[210]) /* ty=Tensor[(210), uint64] */;
  %542 = @func_2442(%539, %540, %541) /* ty=(Tensor[(8, 16, 9), bool], Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64], Tensor[(210), uint64]) */;
  %543 = %542.2;
  (%537, %543, %var_6739)
}

def @func_12160() -> Tensor[(16, 11, ?), bool] {
  @func_4991() /* ty=Tensor[(16, 11, ?), bool] */
}

def @func_8420() -> (Tensor[(12, 14, 11), bool], Tensor[(16, 11, ?), bool], Tensor[(12, 14, 11), bool]) {
  %544 = @func_7690() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(210), uint64], Tensor[(12, 14, 11), float32]) */;
  %545 = %544.0;
  %546 = @func_4991() /* ty=Tensor[(16, 11, ?), bool] */;
  %547 = @func_2415() /* ty=Tensor[(12, 14, 11), bool] */;
  (%545, %546, %547)
}

def @func_9999(%var_9982: Tensor[(1848), bool]) -> (Tensor[(5, 7, 6), bool], Tensor[(12, 14, 11), float64], Tensor[(1848), bool]) {
  %548 = @func_7355() /* ty=(Tensor[(5, 7, 6), bool],) */;
  %549 = cast(%var_9982, dtype="bool") /* ty=Tensor[(1848), bool] */;
  %550 = reshape(%549, newshape=[12, 14, 11]) /* ty=Tensor[(12, 14, 11), bool] */;
  %551 = %548.0;
  %552 = @func_4317(%550) /* ty=Tensor[(12, 14, 11), float64] */;
  (%551, %552, %var_9982)
}

def @func_7820() -> (Tensor[(12, 14, 11), bool], Tensor[(9, 12, 6), float32], Tensor[(648), float32]) {
  %553 = @func_4619() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), bool]) */;
  %554 = cast(meta[relay.Constant][17] /* ty=Tensor[(648), float32] */, dtype="float32") /* ty=Tensor[(648), float32] */;
  %555 = reshape(%554, newshape=[9, 12, 6]) /* ty=Tensor[(9, 12, 6), float32] */;
  %556 = @func_3786(%555) /* ty=(Tensor[(9, 12, 6), float32],) */;
  %557 = %553.0;
  %558 = %556.0;
  (%557, %558, meta[relay.Constant][17] /* ty=Tensor[(648), float32] */)
}

def @func_6077(%var_6069: Tensor[(8, 2, 7), float64]) -> Tensor[(8, 2, 7), float64] {
  %559 = cast(%var_6069, dtype="float64") /* ty=Tensor[(8, 2, 7), float64] */;
  sqrt(%559) /* ty=Tensor[(8, 2, 7), float64] */
}

def @func_12188() -> (Tensor[(12, 14, 11), bool],) {
  %560 = @func_11630() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), bool]) */;
  %561 = %560.1;
  (%561,)
}

def @func_4415() -> (Tensor[(8, 12, 3), bool], Tensor[(16, 11, 1), float32], Tensor[(176), float32]) {
  %562 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %563 = cast(meta[relay.Constant][18] /* ty=Tensor[(8, 12, 3), bool] */, dtype="bool") /* ty=Tensor[(8, 12, 3), bool] */;
  %564 = cast(meta[relay.Constant][19] /* ty=Tensor[(176), float32] */, dtype="float32") /* ty=Tensor[(176), float32] */;
  %565 = reshape(%564, newshape=[16, 11, 1]) /* ty=Tensor[(16, 11, 1), float32] */;
  %566 = @func_200(%565) /* ty=(Tensor[(16, 11, 1), float32],) */;
  %567 = logical_or(%562, %563) /* ty=Tensor[(8, 12, 3), bool] */;
  %568 = %566.0;
  (%567, %568, meta[relay.Constant][19] /* ty=Tensor[(176), float32] */)
}

def @func_9344() -> (Tensor[(16, 11, ?), bool], Tensor[(1, 120), float32]) {
  %569 = @func_6451() /* ty=(Tensor[(1, 120), int32],) */;
  %570 = %569.0;
  %571 = cast(%570, dtype="float32") /* ty=Tensor[(1, 120), float32] */;
  %572 = @func_4991() /* ty=Tensor[(16, 11, ?), bool] */;
  %573 = acos(%571) /* ty=Tensor[(1, 120), float32] */;
  (%572, %573)
}

def @func_8589() -> (Tensor[(12, 14, 11), bool],) {
  %574 = @func_3226() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64]) */;
  %575 = %574.0;
  (%575,)
}

def @func_11126() -> (Tensor[(5, 7, 6), uint64],) {
  %576 = @func_10239() /* ty=Tensor[(5, 7, 6), uint64] */;
  (%576,)
}

def @func_11966() -> Tensor[(12, 14, 11), float64] {
  %577 = @func_9573() /* ty=(Tensor[(12, 14, 11), float64], Tensor[(1848), int64], Tensor[(240), int32]) */;
  %577.0
}

def @func_7194() -> Tensor[(15, 15, 9), float32] {
  %578 = @func_6902() /* ty=(Tensor[(5, 7, 6), float64], Tensor[(15, 15, 9), float32]) */;
  %578.1
}

def @func_5373() -> Tensor[(15, 15, 9), float32] {
  %579 = @func_4865() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(15, 15, 9), float32]) */;
  %579.1
}

def @func_3151(%var_3140: Tensor[(240), int32], %var_3141: Tensor[(1848), int64]) -> (Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), bool], Tensor[(120), int32], Tensor[(240), int32], Tensor[(1848), int64]) {
  %580 = @func_2219() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), bool]) */;
  %581 = @func_2930() /* ty=(Tensor[(5, 7, 6), uint64],) */;
  %582 = cast(meta[relay.Constant][20] /* ty=Tensor[(120), int32] */, dtype="int32") /* ty=Tensor[(120), int32] */;
  %583 = cast(%var_3140, dtype="int32") /* ty=Tensor[(240), int32] */;
  %584 = cast(%var_3141, dtype="int64") /* ty=Tensor[(1848), int64] */;
  %585 = reshape(%582, newshape=[8, 15, 1]) /* ty=Tensor[(8, 15, 1), int32] */;
  %586 = reshape(%583, newshape=[8, 15, 2]) /* ty=Tensor[(8, 15, 2), int32] */;
  %587 = reshape(%584, newshape=[1848, 1]) /* ty=Tensor[(1848, 1), int64] */;
  %588 = @func_565(%585, %586, %587) /* ty=(Tensor[(8, 15, 2), bool], Tensor[(12, 14, 11), bool], Tensor[(1848, 1), int64]) */;
  %589 = %580.0;
  %590 = %581.0;
  %591 = %588.1;
  (%589, %590, %591, meta[relay.Constant][20] /* ty=Tensor[(120), int32] */, %var_3140, %var_3141)
}

def @func_4554() -> (Tensor[(12, 14, 11), bool],) {
  %592 = @func_3226() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64]) */;
  %593 = %592.0;
  (%593,)
}

def @func_2087() -> (Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64], Tensor[(210), uint64], Tensor[(12, 14, 11), bool], Tensor[(2, 924), int64], Tensor[(12, 14, 11), bool]) {
  %594 = cast(meta[relay.Constant][21] /* ty=Tensor[(15, 15, 9), float32] */, dtype="float32") /* ty=Tensor[(15, 15, 9), float32] */;
  %595 = cast(meta[relay.Constant][22] /* ty=Tensor[(210), uint64] */, dtype="uint64") /* ty=Tensor[(210), uint64] */;
  %596 = cast(meta[relay.Constant][22] /* ty=Tensor[(210), uint64] */, dtype="uint64") /* ty=Tensor[(210), uint64] */;
  %597 = reshape(%595, newshape=[5, 7, 6]) /* ty=Tensor[(5, 7, 6), uint64] */;
  %598 = reshape(%596, newshape=[5, 7, 6]) /* ty=Tensor[(5, 7, 6), uint64] */;
  %599 = cast(meta[relay.Constant][23] /* ty=Tensor[(2, 924), int64] */, dtype="int64") /* ty=Tensor[(2, 924), int64] */;
  %600 = cast(meta[relay.Constant][23] /* ty=Tensor[(2, 924), int64] */, dtype="int64") /* ty=Tensor[(2, 924), int64] */;
  %601 = reshape(%599, newshape=[12, 14, 11]) /* ty=Tensor[(12, 14, 11), int64] */;
  %602 = reshape(%600, newshape=[12, 14, 11]) /* ty=Tensor[(12, 14, 11), int64] */;
  %603 = @func_54(%601, %602) /* ty=(Tensor[(12, 14, 11), uint32], Tensor[(12, 14, 11), bool]) */;
  %604 = %603.1;
  %605 = cast(%604, dtype="int64") /* ty=Tensor[(12, 14, 11), int64] */;
  %606 = cast(%604, dtype="int64") /* ty=Tensor[(12, 14, 11), int64] */;
  %607 = reshape(%605, newshape=[12, 14, 11]) /* ty=Tensor[(12, 14, 11), int64] */;
  %608 = reshape(%606, newshape=[12, 14, 11]) /* ty=Tensor[(12, 14, 11), int64] */;
  %609 = @func_54(%607, %608) /* ty=(Tensor[(12, 14, 11), uint32], Tensor[(12, 14, 11), bool]) */;
  %610 = log(%594) /* ty=Tensor[(15, 15, 9), float32] */;
  %611 = @func_1838(%597, %598) /* ty=Tensor[(5, 7, 6), uint64] */;
  %612 = %609.1;
  (%610, %611, meta[relay.Constant][22] /* ty=Tensor[(210), uint64] */, %604, meta[relay.Constant][23] /* ty=Tensor[(2, 924), int64] */, %612)
}

def @func_9623(%var_9620: Tensor[(6, 14, 14), float32]) -> (Tensor[(6, 14, 14), float32],) {
  %613 = cast(%var_9620, dtype="float32") /* ty=Tensor[(6, 14, 14), float32] */;
  %614 = atan(%613) /* ty=Tensor[(6, 14, 14), float32] */;
  (%614,)
}

def @func_7355() -> (Tensor[(5, 7, 6), bool],) {
  %615 = @func_3950() /* ty=(Tensor[(5, 7, 6), bool],) */;
  %616 = %615.0;
  (%616,)
}

def @func_14553() -> Tensor[(12, 14, 11), bool] {
  %617 = @func_10549() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), bool], Tensor[(1, 120), float32]) */;
  %617.0
}

def @func_10427(%var_10412: Tensor[(176), float32]) -> (Tensor[(5, 7, 6), uint64], Tensor[(176), float32], Tensor[(288), float32], Tensor[(176), float32], Tensor[(5, 7, 6), uint64]) {
  %618 = @func_5905() /* ty=(Tensor[(5, 7, 6), uint64],) */;
  %619 = cast(meta[relay.Constant][24] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
  %620 = cast(%var_10412, dtype="float32") /* ty=Tensor[(176), float32] */;
  %621 = reshape(%619, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %622 = reshape(%620, newshape=[176]) /* ty=Tensor[(176), float32] */;
  %623 = @func_4050(%621, %622) /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64], Tensor[(288), float32], Tensor[(288), float32], Tensor[(176), float32]) */;
  %624 = @func_2930() /* ty=(Tensor[(5, 7, 6), uint64],) */;
  %625 = %618.0;
  %626 = %623.4;
  %627 = %624.0;
  (%625, %626, meta[relay.Constant][24] /* ty=Tensor[(288), float32] */, %var_10412, %627)
}

def @func_14850() -> (Tensor[(12, 14, 11), bool],) {
  %628 = @func_7343() /* ty=(Tensor[(12, 14, 11), bool],) */;
  %629 = %628.0;
  (%629,)
}

def @func_3868() -> (Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64], Tensor[(16, 11, ?), bool]) {
  %630 = @func_2930() /* ty=(Tensor[(5, 7, 6), uint64],) */;
  %631 = @func_2930() /* ty=(Tensor[(5, 7, 6), uint64],) */;
  %632 = cast(meta[relay.Constant][25] /* ty=Tensor[(176), float32] */, dtype="float32") /* ty=Tensor[(176), float32] */;
  %633 = reshape(%632, newshape=[16, 11, 1]) /* ty=Tensor[(16, 11, 1), float32] */;
  %634 = @func_200(%633) /* ty=(Tensor[(16, 11, 1), float32],) */;
  %635 = %634.0;
  %636 = cast(meta[relay.Constant][25] /* ty=Tensor[(176), float32] */, dtype="bool") /* ty=Tensor[(176), bool] */;
  %637 = shape_of(%635, dtype="int32") /* ty=Tensor[(3), int32] */;
  %638 = cast(%635, dtype="bool") /* ty=Tensor[(16, 11, 1), bool] */;
  %639 = dyn.reshape(%636, %637, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %640 = %630.0;
  %641 = %631.0;
  %642 = greater(%638, %639) /* ty=Tensor[(16, 11, ?), bool] */;
  (%640, %641, %642)
}

def @func_9493(%var_9491: Tensor[(648), float32]) -> (Tensor[(12, 14, 11), bool], Tensor[(202752), float32], Tensor[(648), float32]) {
  %643 = @func_7343() /* ty=(Tensor[(12, 14, 11), bool],) */;
  %644 = cast(%var_9491, dtype="float32") /* ty=Tensor[(648), float32] */;
  %645 = reshape(%644, newshape=[648]) /* ty=Tensor[(648), float32] */;
  %646 = @func_7423(%645) /* ty=(Tensor[(8, 12, 3), bool], Tensor[(288), float32], Tensor[(1848), int64], Tensor[(202752), int16], Tensor[(9, 12, 6), float32], Tensor[(648), float32], Tensor[(202752), float32], Tensor[(5, 7, 6), float64], Tensor[(210), uint64]) */;
  %647 = %643.0;
  %648 = %646.6;
  (%647, %648, %var_9491)
}

def @func_11142() -> (Tensor[(15, 15, 9), float32],) {
  %649 = @func_6912() /* ty=Tensor[(15, 15, 9), float32] */;
  (%649,)
}

def @func_6902() -> (Tensor[(5, 7, 6), float64], Tensor[(15, 15, 9), float32]) {
  %650 = @func_2768() /* ty=(Tensor[(5, 7, 6), float64], Tensor[(210), uint64], Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) */;
  %651 = @func_2575() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(15, 15, 9), float32], Tensor[(1152), int64], Tensor[(210), uint64]) */;
  %652 = %650.0;
  %653 = %651.1;
  (%652, %653)
}

def @func_6446() -> (Tensor[(648), float32], Tensor[(12, 14, 11), int16], Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), bool]) {
  %654 = @func_4943() /* ty=(Tensor[(12, 14, 11), int16], Tensor[(5, 7, 6), uint64], Tensor[(9, 12, 6), float32], Tensor[(648), float32], Tensor[(12, 14, 11), bool]) */;
  %655 = @func_4440() /* ty=(Tensor[(5, 7, 6), bool], Tensor[(12, 14, 11), int16]) */;
  %656 = @func_4440() /* ty=(Tensor[(5, 7, 6), bool], Tensor[(12, 14, 11), int16]) */;
  %657 = %654.3;
  %658 = %655.1;
  %659 = @func_5962() /* ty=Tensor[(12, 14, 11), bool] */;
  %660 = %656.0;
  (%657, %658, %659, %660)
}

def @func_6984() -> Tensor[(288), float32] {
  %661 = @func_3876() /* ty=(Tensor[(288), float32],) */;
  %661.0
}

def @func_2911(%var_2860: Tensor[(176), float32], %var_2872: Tensor[(120), int32]) -> (Tensor[(12, 14, 11), bool], Tensor[(210), uint64], Tensor[(12, 14, 11), bool], Tensor[(1152), int64], Tensor[(16, 11, 1), float32], Tensor[(176), float32], Tensor[(12, 14, 11), bool], Tensor[(120), int32], Tensor[(240), int32], Tensor[(8, 15, 2), bool], Tensor[(5, 7, 6), bool], Tensor[(5, 7, 6), uint64], Tensor[(16, 11, 1), float32], Tensor[(16, 11, 1), float32]) {
  %662 = @func_2575() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(15, 15, 9), float32], Tensor[(1152), int64], Tensor[(210), uint64]) */;
  %663 = @func_2575() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(15, 15, 9), float32], Tensor[(1152), int64], Tensor[(210), uint64]) */;
  %664 = cast(%var_2860, dtype="float32") /* ty=Tensor[(176), float32] */;
  %665 = reshape(%664, newshape=[16, 11, 1]) /* ty=Tensor[(16, 11, 1), float32] */;
  %666 = @func_200(%665) /* ty=(Tensor[(16, 11, 1), float32],) */;
  %667 = cast(%var_2872, dtype="int32") /* ty=Tensor[(120), int32] */;
  %668 = cast(meta[relay.Constant][27] /* ty=Tensor[(240), int32] */, dtype="int32") /* ty=Tensor[(240), int32] */;
  %669 = @func_2415() /* ty=Tensor[(12, 14, 11), bool] */;
  %670 = cast(%669, dtype="int64") /* ty=Tensor[(12, 14, 11), int64] */;
  %671 = reshape(%667, newshape=[8, 15, 1]) /* ty=Tensor[(8, 15, 1), int32] */;
  %672 = reshape(%668, newshape=[8, 15, 2]) /* ty=Tensor[(8, 15, 2), int32] */;
  %673 = reshape(%670, newshape=[1848, 1]) /* ty=Tensor[(1848, 1), int64] */;
  %674 = @func_565(%671, %672, %673) /* ty=(Tensor[(8, 15, 2), bool], Tensor[(12, 14, 11), bool], Tensor[(1848, 1), int64]) */;
  %675 = cast(%var_2872, dtype="int32") /* ty=Tensor[(120), int32] */;
  %676 = cast(meta[relay.Constant][27] /* ty=Tensor[(240), int32] */, dtype="int32") /* ty=Tensor[(240), int32] */;
  %677 = %674.1;
  %678 = cast(%677, dtype="int64") /* ty=Tensor[(12, 14, 11), int64] */;
  %679 = reshape(%675, newshape=[8, 15, 1]) /* ty=Tensor[(8, 15, 1), int32] */;
  %680 = reshape(%676, newshape=[8, 15, 2]) /* ty=Tensor[(8, 15, 2), int32] */;
  %681 = reshape(%678, newshape=[1848, 1]) /* ty=Tensor[(1848, 1), int64] */;
  %682 = @func_565(%679, %680, %681) /* ty=(Tensor[(8, 15, 2), bool], Tensor[(12, 14, 11), bool], Tensor[(1848, 1), int64]) */;
  %683 = cast(meta[relay.Constant][26] /* ty=Tensor[(210), uint64] */, dtype="uint64") /* ty=Tensor[(210), uint64] */;
  %684 = cast(meta[relay.Constant][26] /* ty=Tensor[(210), uint64] */, dtype="uint64") /* ty=Tensor[(210), uint64] */;
  %685 = reshape(%683, newshape=[5, 7, 6]) /* ty=Tensor[(5, 7, 6), uint64] */;
  %686 = reshape(%684, newshape=[5, 7, 6]) /* ty=Tensor[(5, 7, 6), uint64] */;
  %687 = @func_1838(%685, %686) /* ty=Tensor[(5, 7, 6), uint64] */;
  %688 = cast(%687, dtype="float32") /* ty=Tensor[(5, 7, 6), float32] */;
  %689 = log(%688) /* ty=Tensor[(5, 7, 6), float32] */;
  %690 = cast(%687, dtype="bool") /* ty=Tensor[(5, 7, 6), bool] */;
  %691 = shape_of(%689, dtype="int32") /* ty=Tensor[(3), int32] */;
  %692 = cast(%689, dtype="bool") /* ty=Tensor[(5, 7, 6), bool] */;
  %693 = dyn.reshape(%690, %691, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %694 = @func_2768() /* ty=(Tensor[(5, 7, 6), float64], Tensor[(210), uint64], Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) */;
  %695 = %666.0;
  %696 = cast(%695, dtype="float32") /* ty=Tensor[(16, 11, 1), float32] */;
  %697 = reshape(%696, newshape=[16, 11, 1]) /* ty=Tensor[(16, 11, 1), float32] */;
  %698 = @func_200(%697) /* ty=(Tensor[(16, 11, 1), float32],) */;
  %699 = %698.0;
  %700 = cast(%699, dtype="float32") /* ty=Tensor[(16, 11, 1), float32] */;
  %701 = reshape(%700, newshape=[16, 11, 1]) /* ty=Tensor[(16, 11, 1), float32] */;
  %702 = @func_200(%701) /* ty=(Tensor[(16, 11, 1), float32],) */;
  %703 = %662.0;
  %704 = %663.2;
  %705 = %682.0;
  %706 = equal(%692, %693) /* ty=Tensor[(5, 7, 6), bool] */;
  %707 = %694.2;
  %708 = %702.0;
  (%669, meta[relay.Constant][26] /* ty=Tensor[(210), uint64] */, %703, %704, %695, %var_2860, %677, %var_2872, meta[relay.Constant][27] /* ty=Tensor[(240), int32] */, %705, %706, %707, %699, %708)
}

def @func_12318(%var_12310: int32, %var_12311: Tensor[(6, 6, 16), int32]) -> Tensor[(6, 6, 16), int32] {
  %709 = cast(%var_12310, dtype="int32") /* ty=int32 */;
  %710 = cast(%var_12311, dtype="int32") /* ty=Tensor[(6, 6, 16), int32] */;
  right_shift(%709, %710) /* ty=Tensor[(6, 6, 16), int32] */
}

def @func_8436() -> Tensor[(5, 7, 6), uint64] {
  %711 = @func_3868() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64], Tensor[(16, 11, ?), bool]) */;
  %711.0
}

def @func_9796() -> (Tensor[(1, 120), float32],) {
  %712 = @func_8116() /* ty=(Tensor[(1, 120), int32],) */;
  %713 = %712.0;
  %714 = cast(%713, dtype="float32") /* ty=Tensor[(1, 120), float32] */;
  %715 = sqrt(%714) /* ty=Tensor[(1, 120), float32] */;
  (%715,)
}

def @func_7314() -> (Tensor[(2, 924), int64],) {
  %716 = @func_4885() /* ty=(Tensor[(2, 924), int64],) */;
  %717 = %716.0;
  (%717,)
}

def @func_12497() -> (Tensor[(12, 14, 11), bool], Tensor[(16, 11, ?), bool], Tensor[(5, 7, 6), uint64]) {
  %718 = @func_4554() /* ty=(Tensor[(12, 14, 11), bool],) */;
  %719 = @func_10216() /* ty=(Tensor[(16, 11, ?), float64], Tensor[(5, 7, 6), float64], Tensor[(5, 7, 6), uint64]) */;
  %720 = %718.0;
  %721 = @func_12160() /* ty=Tensor[(16, 11, ?), bool] */;
  %722 = %719.2;
  (%720, %721, %722)
}

def @func_14921(%var_14917: Tensor[(432), float64]) -> (Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64], Tensor[(8, 9, 6), float64], Tensor[(432), float64]) {
  %723 = cast(%var_14917, dtype="float64") /* ty=Tensor[(432), float64] */;
  %724 = reshape(%723, newshape=[8, 9, 6]) /* ty=Tensor[(8, 9, 6), float64] */;
  %725 = @func_6792(%724) /* ty=(Tensor[(8, 9, 6), float64],) */;
  %726 = @func_14553() /* ty=Tensor[(12, 14, 11), bool] */;
  %727 = @func_5197() /* ty=Tensor[(5, 7, 6), uint64] */;
  %728 = %725.0;
  (%726, %727, %728, %var_14917)
}

def @func_15008() -> (Tensor[(5, 7, 6), uint64],) {
  %729 = @func_9413() /* ty=(Tensor[(5, 7, 6), uint64],) */;
  %730 = %729.0;
  (%730,)
}

def @func_4317(%var_4309: Tensor[(12, 14, 11), bool]) -> Tensor[(12, 14, 11), float64] {
  %731 = @func_3914() /* ty=Tensor[(12, 14, 11), bool] */;
  %732 = cast(%var_4309, dtype="bool") /* ty=Tensor[(12, 14, 11), bool] */;
  %733 = shape_of(%731, dtype="int32") /* ty=Tensor[(3), int32] */;
  %734 = cast(%731, dtype="bool") /* ty=Tensor[(12, 14, 11), bool] */;
  %735 = dyn.reshape(%732, %733, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %736 = greater_equal(%734, %735) /* ty=Tensor[(12, 14, 11), bool] */;
  %737 = cast(%736, dtype="float64") /* ty=Tensor[(12, 14, 11), float64] */;
  sin(%737) /* ty=Tensor[(12, 14, 11), float64] */
}

def @func_4362() -> (Tensor[(1152), int64],) {
  %738 = @func_2575() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(15, 15, 9), float32], Tensor[(1152), int64], Tensor[(210), uint64]) */;
  %739 = %738.2;
  (%739,)
}

def @func_7963() -> (Tensor[(15, 15, 9), float32], Tensor[(288), float32]) {
  %740 = @func_3876() /* ty=(Tensor[(288), float32],) */;
  %741 = @func_5373() /* ty=Tensor[(15, 15, 9), float32] */;
  %742 = %740.0;
  (%741, %742)
}

def @func_12257() -> (Tensor[(648), float32], Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64], Tensor[(9, 12, 6), float32], Tensor[(5, 7, 6), bool], Tensor[(12, 14, 11), bool]) {
  %743 = @func_7820() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(9, 12, 6), float32], Tensor[(648), float32]) */;
  %744 = @func_4865() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(15, 15, 9), float32]) */;
  %745 = @func_2768() /* ty=(Tensor[(5, 7, 6), float64], Tensor[(210), uint64], Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) */;
  %746 = %743.2;
  %747 = cast(%746, dtype="float32") /* ty=Tensor[(648), float32] */;
  %748 = reshape(%747, newshape=[9, 12, 6]) /* ty=Tensor[(9, 12, 6), float32] */;
  %749 = @func_3786(%748) /* ty=(Tensor[(9, 12, 6), float32],) */;
  %750 = @func_3950() /* ty=(Tensor[(5, 7, 6), bool],) */;
  %751 = @func_7343() /* ty=(Tensor[(12, 14, 11), bool],) */;
  %752 = %744.1;
  %753 = %745.2;
  %754 = %749.0;
  %755 = %750.0;
  %756 = %751.0;
  (%746, %752, %753, %754, %755, %756)
}

def @func_2630() -> (Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) {
  %757 = @func_2398() /* ty=(Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64]) */;
  %758 = %757.1;
  %759 = cast(%758, dtype="uint64") /* ty=Tensor[(5, 7, 6), uint64] */;
  %760 = cast(%758, dtype="uint64") /* ty=Tensor[(5, 7, 6), uint64] */;
  %761 = reshape(%759, newshape=[5, 7, 6]) /* ty=Tensor[(5, 7, 6), uint64] */;
  %762 = reshape(%760, newshape=[5, 7, 6]) /* ty=Tensor[(5, 7, 6), uint64] */;
  %763 = @func_1838(%761, %762) /* ty=Tensor[(5, 7, 6), uint64] */;
  (%758, %763)
}

def @func_14563() -> Tensor[(5, 7, 6), uint64] {
  @func_2290() /* ty=Tensor[(5, 7, 6), uint64] */
}

def @func_10143(%var_10057: Tensor[(975), float64], %var_10069: Tensor[(924, 2), int64], %var_10077: Tensor[(924, 2), int64]) -> (Tensor[(288), float32], Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64], Tensor[(924, 2), int32], Tensor[(924, 2), bool], Tensor[(975), float32], Tensor[(2, 924), int64]) {
  %764 = @func_3517() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(9, 2, 16), float32], Tensor[(288), float32]) */;
  %765 = cast(%var_10057, dtype="float64") /* ty=Tensor[(975), float64] */;
  %766 = reshape(%765, newshape=[975]) /* ty=Tensor[(975), float64] */;
  %767 = @func_8752(%766) /* ty=(Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64], Tensor[(16, 11, 975), bool]) */;
  %768 = cast(%var_10069, dtype="int64") /* ty=Tensor[(924, 2), int64] */;
  %769 = reshape(%768, newshape=[84, 22]) /* ty=Tensor[(84, 22), int64] */;
  %770 = @func_6199(%769) /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), float64], Tensor[(12, 14, 11), bool], Tensor[(84, 22), int64], Tensor[(5, 7, 6), uint64]) */;
  %771 = cast(%var_10077, dtype="int32") /* ty=Tensor[(924, 2), int32] */;
  %772 = shape_of(%var_10069, dtype="int32") /* ty=Tensor[(2), int32] */;
  %773 = cast(%var_10069, dtype="int32") /* ty=Tensor[(924, 2), int32] */;
  %774 = dyn.reshape(%771, %772, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %775 = cast(%var_10069, dtype="bool") /* ty=Tensor[(924, 2), bool] */;
  %776 = shape_of(%var_10077, dtype="int32") /* ty=Tensor[(2), int32] */;
  %777 = cast(%var_10077, dtype="bool") /* ty=Tensor[(924, 2), bool] */;
  %778 = dyn.reshape(%775, %776, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %779 = cast(%var_10057, dtype="float32") /* ty=Tensor[(975), float32] */;
  %780 = acos(%779) /* ty=Tensor[(975), float32] */;
  %781 = cast(%780, dtype="float32") /* ty=Tensor[(975), float32] */;
  %782 = @func_7314() /* ty=(Tensor[(2, 924), int64],) */;
  %783 = %764.2;
  %784 = %767.1;
  %785 = %770.0;
  %786 = logical_xor(%773, %774) /* ty=Tensor[(924, 2), int32] */;
  %787 = not_equal(%777, %778) /* ty=Tensor[(924, 2), bool] */;
  %788 = acosh(%781) /* ty=Tensor[(975), float32] */;
  %789 = %782.0;
  (%783, %784, %785, %786, %787, %788, %789)
}

def @func_14842() -> (Tensor[(5, 7, 6), uint64], Tensor[(15, 13, 5), float64], Tensor[(975, 1), float64], Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), bool], Tensor[(5, 7, 6), uint64]) {
  %790 = @func_11630() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), bool]) */;
  %791 = cast(meta[relay.Constant][28] /* ty=Tensor[(975, 1), float64] */, dtype="float64") /* ty=Tensor[(975, 1), float64] */;
  %792 = cast(meta[relay.Constant][28] /* ty=Tensor[(975, 1), float64] */, dtype="float64") /* ty=Tensor[(975, 1), float64] */;
  %793 = reshape(%791, newshape=[15, 13, 5]) /* ty=Tensor[(15, 13, 5), float64] */;
  %794 = reshape(%792, newshape=[15, 13, 5]) /* ty=Tensor[(15, 13, 5), float64] */;
  %795 = @func_8107(%793, %794) /* ty=(Tensor[(15, 13, 5), int64], Tensor[(12, 11, 7), uint32], Tensor[(924, 1), uint32], Tensor[(15, 13, 5), float64]) */;
  %796 = @func_7343() /* ty=(Tensor[(12, 14, 11), bool],) */;
  %797 = @func_9726() /* ty=(Tensor[(5, 7, 6), bool], Tensor[(5, 7, 6), uint64], Tensor[(1848), int64]) */;
  %798 = %790.0;
  %799 = %795.3;
  %800 = %796.0;
  %801 = %797.0;
  %802 = @func_6853() /* ty=Tensor[(5, 7, 6), uint64] */;
  (%798, %799, meta[relay.Constant][28] /* ty=Tensor[(975, 1), float64] */, %800, %801, %802)
}

def @func_13839() -> (Tensor[(1, 120), float64], Tensor[(648), float32], Tensor[(1848), int64]) {
  %803 = @func_9796() /* ty=(Tensor[(1, 120), float32],) */;
  %804 = %803.0;
  %805 = cast(%804, dtype="float64") /* ty=Tensor[(1, 120), float64] */;
  %806 = @func_9573() /* ty=(Tensor[(12, 14, 11), float64], Tensor[(1848), int64], Tensor[(240), int32]) */;
  %807 = sigmoid(%805) /* ty=Tensor[(1, 120), float64] */;
  %808 = @func_11768() /* ty=Tensor[(648), float32] */;
  %809 = %806.1;
  (%807, %808, %809)
}

def @func_15047(%var_15040: Tensor[(7, 2, 8), float32]) -> (Tensor[(7, 2, 8), float32],) {
  %810 = cast(%var_15040, dtype="float32") /* ty=Tensor[(7, 2, 8), float32] */;
  %811 = rsqrt(%810) /* ty=Tensor[(7, 2, 8), float32] */;
  (%811,)
}

def @func_9711() -> Tensor[(1848), float64] {
  %812 = @func_9573() /* ty=(Tensor[(12, 14, 11), float64], Tensor[(1848), int64], Tensor[(240), int32]) */;
  %813 = %812.1;
  %814 = cast(%813, dtype="float64") /* ty=Tensor[(1848), float64] */;
  erf(%814) /* ty=Tensor[(1848), float64] */
}

def @func_4174(%var_4155: Tensor[(1848), int64], %var_4167: Tensor[(288), float32], %var_4168: Tensor[(176), float32]) -> (Tensor[(210), uint64], Tensor[(5, 7, 6), uint64], Tensor[(120), int32], Tensor[(240), int32], Tensor[(1848), int64], Tensor[(12, 14, 11), float32], Tensor[(288), float32], Tensor[(288), float32], Tensor[(176), float32]) {
  %815 = @func_2768() /* ty=(Tensor[(5, 7, 6), float64], Tensor[(210), uint64], Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) */;
  %816 = @func_3868() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64], Tensor[(16, 11, ?), bool]) */;
  %817 = cast(meta[relay.Constant][29] /* ty=Tensor[(120), int32] */, dtype="int32") /* ty=Tensor[(120), int32] */;
  %818 = cast(meta[relay.Constant][30] /* ty=Tensor[(240), int32] */, dtype="int32") /* ty=Tensor[(240), int32] */;
  %819 = cast(%var_4155, dtype="int64") /* ty=Tensor[(1848), int64] */;
  %820 = reshape(%817, newshape=[8, 15, 1]) /* ty=Tensor[(8, 15, 1), int32] */;
  %821 = reshape(%818, newshape=[8, 15, 2]) /* ty=Tensor[(8, 15, 2), int32] */;
  %822 = reshape(%819, newshape=[1848, 1]) /* ty=Tensor[(1848, 1), int64] */;
  %823 = @func_565(%820, %821, %822) /* ty=(Tensor[(8, 15, 2), bool], Tensor[(12, 14, 11), bool], Tensor[(1848, 1), int64]) */;
  %824 = %823.1;
  %825 = cast(%824, dtype="float32") /* ty=Tensor[(12, 14, 11), float32] */;
  %826 = cast(%var_4167, dtype="float32") /* ty=Tensor[(288), float32] */;
  %827 = cast(%var_4168, dtype="float32") /* ty=Tensor[(176), float32] */;
  %828 = reshape(%826, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %829 = reshape(%827, newshape=[176]) /* ty=Tensor[(176), float32] */;
  %830 = @func_2147(%828, %829) /* ty=(Tensor[(2, 924), int64], Tensor[(9, 2, 16), float32], Tensor[(288), float32], Tensor[(16, 11, 1), float32], Tensor[(176), float32], Tensor[(16, 11, 1), float32]) */;
  %831 = %815.1;
  %832 = %816.1;
  %833 = asin(%825) /* ty=Tensor[(12, 14, 11), float32] */;
  %834 = %830.2;
  (%831, %832, meta[relay.Constant][29] /* ty=Tensor[(120), int32] */, meta[relay.Constant][30] /* ty=Tensor[(240), int32] */, %var_4155, %833, %834, %var_4167, %var_4168)
}

def @func_11678() -> (Tensor[(288), float32], Tensor[(5, 7, 6), bool], Tensor[(15, 15, 9), float32]) {
  %835 = @func_11556() /* ty=(Tensor[(5, 7, 6), bool],) */;
  %836 = @func_7194() /* ty=Tensor[(15, 15, 9), float32] */;
  %837 = cast(%836, dtype="float32") /* ty=Tensor[(15, 15, 9), float32] */;
  %838 = @func_6991() /* ty=Tensor[(288), float32] */;
  %839 = %835.0;
  %840 = sigmoid(%837) /* ty=Tensor[(15, 15, 9), float32] */;
  (%838, %839, %840)
}

def @func_8957() -> (Tensor[(15, 15, 9), float32],) {
  %841 = @func_2575() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(15, 15, 9), float32], Tensor[(1152), int64], Tensor[(210), uint64]) */;
  %842 = %841.1;
  (%842,)
}

def @func_8116() -> (Tensor[(1, 120), int32],) {
  %843 = @func_6451() /* ty=(Tensor[(1, 120), int32],) */;
  %844 = %843.0;
  (%844,)
}

def @func_9188(%var_9133: Tensor[(288, 1), float32], %var_9158: Tensor[(924), uint32]) -> (Tensor[(5, 7, 6), bool], Tensor[(1848), int64], Tensor[(1848), int64], Tensor[(288, 1), float32], Tensor[(1, 176), float32], Tensor[(288), float32], Tensor[(924), uint32], Tensor[(12, 11, 7), float64]) {
  %845 = @func_3607() /* ty=(Tensor[(5, 7, 6), bool],) */;
  %846 = cast(meta[relay.Constant][31] /* ty=Tensor[(1848), int64] */, dtype="int64") /* ty=Tensor[(1848), int64] */;
  %847 = cast(%var_9133, dtype="float32") /* ty=Tensor[(288, 1), float32] */;
  %848 = cast(meta[relay.Constant][32] /* ty=Tensor[(1, 176), float32] */, dtype="float32") /* ty=Tensor[(1, 176), float32] */;
  %849 = reshape(%846, newshape=[1848]) /* ty=Tensor[(1848), int64] */;
  %850 = reshape(%847, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %851 = reshape(%848, newshape=[176]) /* ty=Tensor[(176), float32] */;
  %852 = @func_4174(%849, %850, %851) /* ty=(Tensor[(210), uint64], Tensor[(5, 7, 6), uint64], Tensor[(120), int32], Tensor[(240), int32], Tensor[(1848), int64], Tensor[(12, 14, 11), float32], Tensor[(288), float32], Tensor[(288), float32], Tensor[(176), float32]) */;
  %853 = cast(%var_9158, dtype="uint32") /* ty=Tensor[(924), uint32] */;
  %854 = cast(%var_9158, dtype="uint32") /* ty=Tensor[(924), uint32] */;
  %855 = reshape(%853, newshape=[12, 11, 7]) /* ty=Tensor[(12, 11, 7), uint32] */;
  %856 = reshape(%854, newshape=[12, 11, 7]) /* ty=Tensor[(12, 11, 7), uint32] */;
  %857 = @func_8032(%855, %856) /* ty=Tensor[(12, 11, 7), uint32] */;
  %858 = cast(%857, dtype="float32") /* ty=Tensor[(12, 11, 7), float32] */;
  %859 = erf(%858) /* ty=Tensor[(12, 11, 7), float32] */;
  %860 = cast(%859, dtype="float64") /* ty=Tensor[(12, 11, 7), float64] */;
  %861 = %845.0;
  %862 = %852.4;
  %863 = @func_6984() /* ty=Tensor[(288), float32] */;
  %864 = acos(%860) /* ty=Tensor[(12, 11, 7), float64] */;
  (%861, %862, meta[relay.Constant][31] /* ty=Tensor[(1848), int64] */, %var_9133, meta[relay.Constant][32] /* ty=Tensor[(1, 176), float32] */, %863, %var_9158, %864)
}

def @func_3914() -> Tensor[(12, 14, 11), bool] {
  @func_2415() /* ty=Tensor[(12, 14, 11), bool] */
}

def @func_14352(%var_14344: Tensor[(7, 9, 5), float64], %var_14345: Tensor[(7, 9, 5), float64]) -> (Tensor[(7, 9, 5), float64],) {
  %865 = cast(%var_14345, dtype="float64") /* ty=Tensor[(7, 9, 5), float64] */;
  %866 = shape_of(%var_14344, dtype="int32") /* ty=Tensor[(3), int32] */;
  %867 = cast(%var_14344, dtype="float64") /* ty=Tensor[(7, 9, 5), float64] */;
  %868 = dyn.reshape(%865, %866, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %869 = mod(%867, %868) /* ty=Tensor[(7, 9, 5), float64] */;
  (%869,)
}

def @func_12933(%var_12928: Tensor[(1, 14, 1), float64], %var_12929: Tensor[(13, 14, 10), float64]) -> (Tensor[(13, 14, 10), float64],) {
  %870 = cast(%var_12928, dtype="float64") /* ty=Tensor[(1, 14, 1), float64] */;
  %871 = cast(%var_12929, dtype="float64") /* ty=Tensor[(13, 14, 10), float64] */;
  %872 = floor_mod(%870, %871) /* ty=Tensor[(13, 14, 10), float64] */;
  (%872,)
}

def @func_5359() -> (Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) {
  %873 = @func_3838() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) */;
  %874 = @func_5197() /* ty=Tensor[(5, 7, 6), uint64] */;
  %875 = %873.0;
  (%874, %875)
}

def @func_3786(%var_3775: Tensor[(9, 12, 6), float32]) -> (Tensor[(9, 12, 6), float32],) {
  %876 = cast(meta[relay.Constant][33] /* ty=Tensor[(9, 12, 6), float32] */, dtype="float32") /* ty=Tensor[(9, 12, 6), float32] */;
  %877 = shape_of(%var_3775, dtype="int32") /* ty=Tensor[(3), int32] */;
  %878 = cast(%var_3775, dtype="float32") /* ty=Tensor[(9, 12, 6), float32] */;
  %879 = dyn.reshape(%876, %877, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %880 = floor_mod(%878, %879) /* ty=Tensor[(9, 12, 6), float32] */;
  (%880,)
}

def @func_13082() -> (Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64]) {
  %881 = @func_7963() /* ty=(Tensor[(15, 15, 9), float32], Tensor[(288), float32]) */;
  %882 = %881.0;
  %883 = @func_6853() /* ty=Tensor[(5, 7, 6), uint64] */;
  (%882, %883)
}

def @func_8032(%var_8023: Tensor[(12, 11, 7), uint32], %var_8024: Tensor[(12, 11, 7), uint32]) -> Tensor[(12, 11, 7), uint32] {
  %884 = cast(%var_8024, dtype="uint32") /* ty=Tensor[(12, 11, 7), uint32] */;
  %885 = shape_of(%var_8023, dtype="int32") /* ty=Tensor[(3), int32] */;
  %886 = cast(%var_8023, dtype="uint32") /* ty=Tensor[(12, 11, 7), uint32] */;
  %887 = dyn.reshape(%884, %885, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  maximum(%886, %887) /* ty=Tensor[(12, 11, 7), uint32] */
}

def @func_4050(%var_4047: Tensor[(288), float32], %var_4048: Tensor[(176), float32]) -> (Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64], Tensor[(288), float32], Tensor[(288), float32], Tensor[(176), float32]) {
  %888 = @func_2219() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), bool]) */;
  %889 = @func_3939() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) */;
  %890 = cast(%var_4047, dtype="float32") /* ty=Tensor[(288), float32] */;
  %891 = cast(%var_4048, dtype="float32") /* ty=Tensor[(176), float32] */;
  %892 = reshape(%890, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %893 = reshape(%891, newshape=[176]) /* ty=Tensor[(176), float32] */;
  %894 = @func_2147(%892, %893) /* ty=(Tensor[(2, 924), int64], Tensor[(9, 2, 16), float32], Tensor[(288), float32], Tensor[(16, 11, 1), float32], Tensor[(176), float32], Tensor[(16, 11, 1), float32]) */;
  %895 = %888.0;
  %896 = %889.1;
  %897 = %894.2;
  (%895, %896, %897, %var_4047, %var_4048)
}

def @func_4811() -> (Tensor[(12, 14, 11), bool], Tensor[(15, 15, 9), float32], Tensor[(15, 15, 9), float32], Tensor[(12, 14, 11), uint32]) {
  %898 = @func_3517() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(9, 2, 16), float32], Tensor[(288), float32]) */;
  %899 = @func_4252() /* ty=(Tensor[(15, 15, 9), float32], Tensor[(9, 12, 6), float32], Tensor[(648), float32]) */;
  %900 = @func_2575() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(15, 15, 9), float32], Tensor[(1152), int64], Tensor[(210), uint64]) */;
  %901 = %898.0;
  %902 = cast(%901, dtype="int64") /* ty=Tensor[(12, 14, 11), int64] */;
  %903 = cast(%901, dtype="int64") /* ty=Tensor[(12, 14, 11), int64] */;
  %904 = reshape(%902, newshape=[12, 14, 11]) /* ty=Tensor[(12, 14, 11), int64] */;
  %905 = reshape(%903, newshape=[12, 14, 11]) /* ty=Tensor[(12, 14, 11), int64] */;
  %906 = @func_54(%904, %905) /* ty=(Tensor[(12, 14, 11), uint32], Tensor[(12, 14, 11), bool]) */;
  %907 = %899.0;
  %908 = %900.1;
  %909 = %906.0;
  (%901, %907, %908, %909)
}

def @func_13690() -> (Tensor[(12, 14, 11), bool], Tensor[(9, 11, 6), bool], Tensor[(594), float32], Tensor[(15, 15, 9), float32], Tensor[(15, 15, 9), float32], Tensor[(648), float32]) {
  %910 = @func_4619() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), bool]) */;
  %911 = cast(meta[relay.Constant][34] /* ty=Tensor[(594), float32] */, dtype="float32") /* ty=Tensor[(594), float32] */;
  %912 = cast(meta[relay.Constant][34] /* ty=Tensor[(594), float32] */, dtype="float32") /* ty=Tensor[(594), float32] */;
  %913 = reshape(%911, newshape=[9, 11, 6]) /* ty=Tensor[(9, 11, 6), float32] */;
  %914 = reshape(%912, newshape=[9, 11, 6]) /* ty=Tensor[(9, 11, 6), float32] */;
  %915 = @func_7963() /* ty=(Tensor[(15, 15, 9), float32], Tensor[(288), float32]) */;
  %916 = @func_4943() /* ty=(Tensor[(12, 14, 11), int16], Tensor[(5, 7, 6), uint64], Tensor[(9, 12, 6), float32], Tensor[(648), float32], Tensor[(12, 14, 11), bool]) */;
  %917 = %910.0;
  %918 = @func_12288(%913, %914) /* ty=Tensor[(9, 11, 6), bool] */;
  %919 = %915.0;
  %920 = @func_5373() /* ty=Tensor[(15, 15, 9), float32] */;
  %921 = %916.3;
  (%917, %918, meta[relay.Constant][34] /* ty=Tensor[(594), float32] */, %919, %920, %921)
}

def @func_2147(%var_2132: Tensor[(288), float32], %var_2135: Tensor[(176), float32]) -> (Tensor[(2, 924), int64], Tensor[(9, 2, 16), float32], Tensor[(288), float32], Tensor[(16, 11, 1), float32], Tensor[(176), float32], Tensor[(16, 11, 1), float32]) {
  %922 = @func_2087() /* ty=(Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64], Tensor[(210), uint64], Tensor[(12, 14, 11), bool], Tensor[(2, 924), int64], Tensor[(12, 14, 11), bool]) */;
  %923 = cast(%var_2132, dtype="float32") /* ty=Tensor[(288), float32] */;
  %924 = reshape(%923, newshape=[9, 2, 16]) /* ty=Tensor[(9, 2, 16), float32] */;
  %925 = @func_1957(%924) /* ty=(Tensor[(9, 2, 16), float32],) */;
  %926 = cast(%var_2135, dtype="float32") /* ty=Tensor[(176), float32] */;
  %927 = reshape(%926, newshape=[16, 11, 1]) /* ty=Tensor[(16, 11, 1), float32] */;
  %928 = @func_200(%927) /* ty=(Tensor[(16, 11, 1), float32],) */;
  %929 = %928.0;
  %930 = cast(%929, dtype="float32") /* ty=Tensor[(16, 11, 1), float32] */;
  %931 = reshape(%930, newshape=[16, 11, 1]) /* ty=Tensor[(16, 11, 1), float32] */;
  %932 = @func_200(%931) /* ty=(Tensor[(16, 11, 1), float32],) */;
  %933 = %922.4;
  %934 = %925.0;
  %935 = %932.0;
  (%933, %934, %var_2132, %929, %var_2135, %935)
}

def @func_9003() -> (Tensor[(12, 14, 11), int16], Tensor[(15, 15, 9), float64]) {
  %936 = @func_4214() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), int16]) */;
  %937 = @func_5373() /* ty=Tensor[(15, 15, 9), float32] */;
  %938 = cast(%937, dtype="float64") /* ty=Tensor[(15, 15, 9), float64] */;
  %939 = %936.1;
  %940 = cos(%938) /* ty=Tensor[(15, 15, 9), float64] */;
  (%939, %940)
}

def @func_10865(%var_10849: Tensor[(240), int32]) -> (Tensor[(15, 15, 9), float32], Tensor[(1848, 1), int64], Tensor[(1, 120), int32], Tensor[(240), int32], Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64]) {
  %941 = cast(meta[relay.Constant][35] /* ty=Tensor[(1, 120), int32] */, dtype="int32") /* ty=Tensor[(1, 120), int32] */;
  %942 = cast(%var_10849, dtype="int32") /* ty=Tensor[(240), int32] */;
  %943 = reshape(%941, newshape=[120]) /* ty=Tensor[(120), int32] */;
  %944 = reshape(%942, newshape=[240]) /* ty=Tensor[(240), int32] */;
  %945 = @func_9540(%943, %944) /* ty=(Tensor[(12, 14, 11), bool], Tensor[(15, 15, 9), float32], Tensor[(1848, 1), int64], Tensor[(120), int32], Tensor[(240), int32]) */;
  %946 = @func_10586() /* ty=(Tensor[(11, 15, 11), int16], Tensor[(12, 14, 11), bool]) */;
  %947 = @func_5329() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(15, 15, 9), float32]) */;
  %948 = @func_6912() /* ty=Tensor[(15, 15, 9), float32] */;
  %949 = %945.2;
  %950 = %946.1;
  %951 = %947.0;
  (%948, %949, meta[relay.Constant][35] /* ty=Tensor[(1, 120), int32] */, %var_10849, %950, %951)
}

def @func_5329() -> (Tensor[(5, 7, 6), uint64], Tensor[(15, 15, 9), float32]) {
  %952 = @func_3838() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) */;
  %953 = %952.0;
  %954 = @func_4697() /* ty=Tensor[(15, 15, 9), float32] */;
  (%953, %954)
}

def @func_6451() -> (Tensor[(1, 120), int32],) {
  %955 = @func_5583() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(210), uint64], Tensor[(176), float32], Tensor[(1, 120), int32], Tensor[(1848), int64], Tensor[(288), float32]) */;
  %956 = %955.3;
  (%956,)
}

def @func_8236() -> (Tensor[(5, 7, 6), uint64],) {
  %957 = @func_2630() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) */;
  %958 = %957.0;
  (%958,)
}

def @func_14947() -> (Tensor[(12, 14, 11), float32],) {
  %959 = @func_12337() /* ty=Tensor[(12, 14, 11), bool] */;
  %960 = cast(%959, dtype="float32") /* ty=Tensor[(12, 14, 11), float32] */;
  %961 = log10(%960) /* ty=Tensor[(12, 14, 11), float32] */;
  (%961,)
}

def @func_11928() -> (Tensor[(5, 7, 6), uint64],) {
  %962 = @func_3838() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) */;
  %963 = %962.0;
  (%963,)
}

def @func_12746(%var_12741: Tensor[(315), uint16]) -> (Tensor[(12, 14, 11), int16], Tensor[(648), float32], Tensor[(12, 14, 11), bool], Tensor[(2, 924), int64], Tensor[(5, 7, 6), uint64], Tensor[(1152), int64], Tensor[(15, 15, 9), float32], Tensor[(16, 11, ?), float64], Tensor[(15, 3, 7), bool], Tensor[(315), uint16]) {
  %964 = @func_4943() /* ty=(Tensor[(12, 14, 11), int16], Tensor[(5, 7, 6), uint64], Tensor[(9, 12, 6), float32], Tensor[(648), float32], Tensor[(12, 14, 11), bool]) */;
  %965 = @func_7640() /* ty=(Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64], Tensor[(15, 15, 9), float32], Tensor[(12, 14, 11), bool]) */;
  %966 = @func_7314() /* ty=(Tensor[(2, 924), int64],) */;
  %967 = @func_6587() /* ty=(Tensor[(1152), int64],) */;
  %968 = @func_11142() /* ty=(Tensor[(15, 15, 9), float32],) */;
  %969 = @func_10216() /* ty=(Tensor[(16, 11, ?), float64], Tensor[(5, 7, 6), float64], Tensor[(5, 7, 6), uint64]) */;
  %970 = cast(%var_12741, dtype="uint16") /* ty=Tensor[(315), uint16] */;
  %971 = cast(%var_12741, dtype="uint16") /* ty=Tensor[(315), uint16] */;
  %972 = reshape(%970, newshape=[15, 3, 7]) /* ty=Tensor[(15, 3, 7), uint16] */;
  %973 = reshape(%971, newshape=[15, 3, 7]) /* ty=Tensor[(15, 3, 7), uint16] */;
  %974 = @func_6627(%972, %973) /* ty=(Tensor[(15, 3, 7), bool], Tensor[(5, 7, 6), uint64]) */;
  %975 = @func_11013() /* ty=Tensor[(12, 14, 11), int16] */;
  %976 = %964.3;
  %977 = %965.3;
  %978 = %966.0;
  %979 = @func_2290() /* ty=Tensor[(5, 7, 6), uint64] */;
  %980 = %967.0;
  %981 = %968.0;
  %982 = %969.0;
  %983 = %974.0;
  (%975, %976, %977, %978, %979, %980, %981, %982, %983, %var_12741)
}

def @func_9726() -> (Tensor[(5, 7, 6), bool], Tensor[(5, 7, 6), uint64], Tensor[(1848), int64]) {
  %984 = @func_4440() /* ty=(Tensor[(5, 7, 6), bool], Tensor[(12, 14, 11), int16]) */;
  %985 = cast(meta[relay.Constant][36] /* ty=Tensor[(1848), int64] */, dtype="int64") /* ty=Tensor[(1848), int64] */;
  %986 = reshape(%985, newshape=[84, 22]) /* ty=Tensor[(84, 22), int64] */;
  %987 = @func_6199(%986) /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), float64], Tensor[(12, 14, 11), bool], Tensor[(84, 22), int64], Tensor[(5, 7, 6), uint64]) */;
  %988 = %984.0;
  %989 = %987.0;
  (%988, %989, meta[relay.Constant][36] /* ty=Tensor[(1848), int64] */)
}

def @func_5606() -> (Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) {
  %990 = @func_2219() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), bool]) */;
  %991 = @func_2398() /* ty=(Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64]) */;
  %992 = %990.0;
  %993 = %991.1;
  (%992, %993)
}

def @func_8352() -> (Tensor[(5, 7, 6), uint64],) {
  %994 = @func_2768() /* ty=(Tensor[(5, 7, 6), float64], Tensor[(210), uint64], Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) */;
  %995 = %994.3;
  (%995,)
}

def @func_12265() -> Tensor[(16, 11, ?), bool] {
  @func_5247() /* ty=Tensor[(16, 11, ?), bool] */
}

def @func_12909(%var_12900: Tensor[(1176), float32]) -> (Tensor[(288), float32], Tensor[(12, 14, 11), bool], Tensor[(6, 14, 14), float32], Tensor[(1176), float32]) {
  %996 = @func_3876() /* ty=(Tensor[(288), float32],) */;
  %997 = @func_2219() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), bool]) */;
  %998 = cast(%var_12900, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %999 = reshape(%998, newshape=[6, 14, 14]) /* ty=Tensor[(6, 14, 14), float32] */;
  %1000 = @func_9623(%999) /* ty=(Tensor[(6, 14, 14), float32],) */;
  %1001 = %996.0;
  %1002 = %997.1;
  %1003 = %1000.0;
  (%1001, %1002, %1003, %var_12900)
}

def @func_7979() -> Tensor[(12, 14, 11), bool] {
  %1004 = @func_4829() /* ty=(Tensor[(12, 14, 11), bool],) */;
  %1004.0
}

def @func_14798() -> (Tensor[(5, 7, 6), uint64], Tensor[(12, 11, 7), uint32]) {
  %1005 = @func_10659() /* ty=(Tensor[(9, 2, 16), float32], Tensor[(5, 7, 6), uint64]) */;
  %1006 = @func_12121() /* ty=(Tensor[(210), uint64], Tensor[(12, 11, 7), uint32], Tensor[(14, 66), uint32]) */;
  %1007 = %1005.1;
  %1008 = %1006.1;
  (%1007, %1008)
}

def @func_11850() -> (Tensor[(240), int32], Tensor[(12, 14, 11), bool], Tensor[(1848), int64]) {
  %1009 = @func_10950() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), bool], Tensor[(240), int32]) */;
  %1010 = cast(meta[relay.Constant][37] /* ty=Tensor[(1848), int64] */, dtype="int64") /* ty=Tensor[(1848), int64] */;
  %1011 = reshape(%1010, newshape=[84, 22]) /* ty=Tensor[(84, 22), int64] */;
  %1012 = @func_6199(%1011) /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), float64], Tensor[(12, 14, 11), bool], Tensor[(84, 22), int64], Tensor[(5, 7, 6), uint64]) */;
  %1013 = %1009.2;
  %1014 = %1012.2;
  (%1013, %1014, meta[relay.Constant][37] /* ty=Tensor[(1848), int64] */)
}

def @func_11630() -> (Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), bool]) {
  %1015 = @func_11444() /* ty=(Tensor[(5, 7, 6), uint64],) */;
  %1016 = @func_7690() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(210), uint64], Tensor[(12, 14, 11), float32]) */;
  %1017 = %1015.0;
  %1018 = %1016.0;
  (%1017, %1018)
}

def @func_10950() -> (Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), bool], Tensor[(240), int32]) {
  %1019 = @func_2930() /* ty=(Tensor[(5, 7, 6), uint64],) */;
  %1020 = cast(meta[relay.Constant][38] /* ty=Tensor[(240), int32] */, dtype="int32") /* ty=Tensor[(240), int32] */;
  %1021 = reshape(%1020, newshape=[240]) /* ty=Tensor[(240), int32] */;
  %1022 = @func_10865(%1021) /* ty=(Tensor[(15, 15, 9), float32], Tensor[(1848, 1), int64], Tensor[(1, 120), int32], Tensor[(240), int32], Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64]) */;
  %1023 = %1019.0;
  %1024 = %1022.4;
  (%1023, %1024, meta[relay.Constant][38] /* ty=Tensor[(240), int32] */)
}

def @func_13765() -> (Tensor[(16, 11, ?), float32], Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), bool]) {
  %1025 = @func_9318() /* ty=(Tensor[(5, 7, 6), bool], Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), int16], Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64], Tensor[(16, 11, ?), float32]) */;
  %1026 = @func_11254() /* ty=(Tensor[(5, 7, 6), uint64],) */;
  %1027 = @func_4811() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(15, 15, 9), float32], Tensor[(15, 15, 9), float32], Tensor[(12, 14, 11), uint32]) */;
  %1028 = %1025.6;
  %1029 = %1026.0;
  %1030 = %1027.0;
  (%1028, %1029, %1030)
}

def @func_4991() -> Tensor[(16, 11, ?), bool] {
  %1031 = @func_3868() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64], Tensor[(16, 11, ?), bool]) */;
  %1031.2
}

def @func_10586() -> (Tensor[(11, 15, 11), int16], Tensor[(12, 14, 11), bool]) {
  %1032 = cast(meta[relay.Constant][40] /* ty=Tensor[(11, 15, 11), int16] */, dtype="int16") /* ty=Tensor[(11, 15, 11), int16] */;
  %1033 = shape_of(meta[relay.Constant][39] /* ty=Tensor[(11, 15, 11), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1034 = cast(meta[relay.Constant][39] /* ty=Tensor[(11, 15, 11), int16] */, dtype="int16") /* ty=Tensor[(11, 15, 11), int16] */;
  %1035 = dyn.reshape(%1032, %1033, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1036 = @func_4214() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), int16]) */;
  %1037 = bitwise_and(%1034, %1035) /* ty=Tensor[(11, 15, 11), int16] */;
  %1038 = %1036.0;
  (%1037, %1038)
}

def @func_2768() -> (Tensor[(5, 7, 6), float64], Tensor[(210), uint64], Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) {
  %1039 = @func_2219() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), bool]) */;
  %1040 = %1039.0;
  %1041 = cast(%1040, dtype="float64") /* ty=Tensor[(5, 7, 6), float64] */;
  %1042 = @func_2087() /* ty=(Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64], Tensor[(210), uint64], Tensor[(12, 14, 11), bool], Tensor[(2, 924), int64], Tensor[(12, 14, 11), bool]) */;
  %1043 = sigmoid(%1041) /* ty=Tensor[(5, 7, 6), float64] */;
  %1044 = cast(%1043, dtype="uint64") /* ty=Tensor[(5, 7, 6), uint64] */;
  %1045 = cast(%1043, dtype="uint64") /* ty=Tensor[(5, 7, 6), uint64] */;
  %1046 = reshape(%1044, newshape=[5, 7, 6]) /* ty=Tensor[(5, 7, 6), uint64] */;
  %1047 = reshape(%1045, newshape=[5, 7, 6]) /* ty=Tensor[(5, 7, 6), uint64] */;
  %1048 = %1042.2;
  %1049 = @func_1838(%1046, %1047) /* ty=Tensor[(5, 7, 6), uint64] */;
  %1050 = @func_2290() /* ty=Tensor[(5, 7, 6), uint64] */;
  (%1043, %1048, %1049, %1050)
}

def @func_4640() -> (Tensor[(12, 14, 11), float32],) {
  %1051 = @func_4619() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), bool]) */;
  %1052 = %1051.0;
  %1053 = cast(%1052, dtype="float32") /* ty=Tensor[(12, 14, 11), float32] */;
  %1054 = cos(%1053) /* ty=Tensor[(12, 14, 11), float32] */;
  (%1054,)
}

def @func_13883() -> (Tensor[(1, 120), int32], Tensor[(12, 14, 11), bool]) {
  %1055 = @func_9439() /* ty=(Tensor[(1, 120), int32],) */;
  %1056 = @func_12640() /* ty=(Tensor[(12, 14, 11), bool],) */;
  %1057 = %1055.0;
  %1058 = %1056.0;
  (%1057, %1058)
}

def @func_3950() -> (Tensor[(5, 7, 6), bool],) {
  %1059 = @func_3607() /* ty=(Tensor[(5, 7, 6), bool],) */;
  %1060 = %1059.0;
  (%1060,)
}

def @func_4440() -> (Tensor[(5, 7, 6), bool], Tensor[(12, 14, 11), int16]) {
  %1061 = @func_3950() /* ty=(Tensor[(5, 7, 6), bool],) */;
  %1062 = @func_4214() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), int16]) */;
  %1063 = %1061.0;
  %1064 = %1062.1;
  (%1063, %1064)
}

def @func_7640() -> (Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64], Tensor[(15, 15, 9), float32], Tensor[(12, 14, 11), bool]) {
  %1065 = @func_5695() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), float32], Tensor[(15, 15, 9), float32], Tensor[(176), float32], Tensor[(176), float32], Tensor[(120), int32]) */;
  %1066 = @func_6774() /* ty=(Tensor[(5, 7, 6), uint64],) */;
  %1067 = @func_7541() /* ty=(Tensor[(210), uint64], Tensor[(5, 7, 6), bool], Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), int32], Tensor[(176), float32]) */;
  %1068 = %1065.3;
  %1069 = %1066.0;
  %1070 = @func_7194() /* ty=Tensor[(15, 15, 9), float32] */;
  %1071 = %1067.2;
  (%1068, %1069, %1070, %1071)
}

def @func_10373(%var_10332: Tensor[(30, 4), int32]) -> (Tensor[(15, 15, 9), float32], Tensor[(12, 14, 11), bool], Tensor[(30, 4), int32], Tensor[(2, 120), int32], Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) {
  %1072 = @func_5329() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(15, 15, 9), float32]) */;
  %1073 = cast(%var_10332, dtype="int32") /* ty=Tensor[(30, 4), int32] */;
  %1074 = cast(meta[relay.Constant][41] /* ty=Tensor[(2, 120), int32] */, dtype="int32") /* ty=Tensor[(2, 120), int32] */;
  %1075 = reshape(%1073, newshape=[120]) /* ty=Tensor[(120), int32] */;
  %1076 = reshape(%1074, newshape=[240]) /* ty=Tensor[(240), int32] */;
  %1077 = @func_9540(%1075, %1076) /* ty=(Tensor[(12, 14, 11), bool], Tensor[(15, 15, 9), float32], Tensor[(1848, 1), int64], Tensor[(120), int32], Tensor[(240), int32]) */;
  %1078 = @func_5773() /* ty=(Tensor[(5, 7, 6), uint64],) */;
  %1079 = @func_9726() /* ty=(Tensor[(5, 7, 6), bool], Tensor[(5, 7, 6), uint64], Tensor[(1848), int64]) */;
  %1080 = %1072.1;
  %1081 = %1077.0;
  %1082 = %1078.0;
  %1083 = %1079.1;
  (%1080, %1081, %var_10332, meta[relay.Constant][41] /* ty=Tensor[(2, 120), int32] */, %1082, %1083)
}

def @func_14095() -> (Tensor[(9, 12, 6), float32],) {
  %1084 = @func_11391() /* ty=(Tensor[(9, 12, 6), float32], Tensor[(1152), int64], Tensor[(210), uint64], Tensor[(15, 15, 9), float32]) */;
  %1085 = %1084.0;
  (%1085,)
}

def @func_5905() -> (Tensor[(5, 7, 6), uint64],) {
  %1086 = @func_2630() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) */;
  %1087 = %1086.0;
  (%1087,)
}

def @func_5962() -> Tensor[(12, 14, 11), bool] {
  @func_3417() /* ty=Tensor[(12, 14, 11), bool] */
}

def @func_8752(%var_8722: Tensor[(975), float64]) -> (Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64], Tensor[(16, 11, 975), bool]) {
  %1088 = @func_7343() /* ty=(Tensor[(12, 14, 11), bool],) */;
  %1089 = @func_5773() /* ty=(Tensor[(5, 7, 6), uint64],) */;
  %1090 = cast(%var_8722, dtype="float64") /* ty=Tensor[(975), float64] */;
  %1091 = reshape(%1090, newshape=[5, 195]) /* ty=Tensor[(5, 195), float64] */;
  %1092 = @func_8688(%1091) /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(12, 11, 7), uint32], Tensor[(5, 195), float64], Tensor[(16, 11, ?), bool]) */;
  %1093 = %1092.3;
  %1094 = cast(%var_8722, dtype="int8") /* ty=Tensor[(975), int8] */;
  %1095 = cast(%1093, dtype="int8") /* ty=Tensor[(16, 11, ?), int8] */;
  %1096 = minimum(%1094, %1095) /* ty=Tensor[(16, 11, 975), int8] */;
  %1097 = cast(%1096, dtype="bool") /* ty=Tensor[(16, 11, 975), bool] */;
  %1098 = cast(%1093, dtype="bool") /* ty=Tensor[(16, 11, ?), bool] */;
  %1099 = %1088.0;
  %1100 = %1089.0;
  %1101 = not_equal(%1097, %1098) /* ty=Tensor[(16, 11, 975), bool] */;
  (%1099, %1100, %1101)
}

def @func_11063() -> (Tensor[(5, 120), float32],) {
  %1102 = @func_6451() /* ty=(Tensor[(1, 120), int32],) */;
  %1103 = %1102.0;
  %1104 = cast(%1103, dtype="float32") /* ty=Tensor[(1, 120), float32] */;
  %1105 = cast(meta[relay.Constant][42] /* ty=Tensor[(5, 120), int32] */, dtype="float32") /* ty=Tensor[(5, 120), float32] */;
  %1106 = divide(%1104, %1105) /* ty=Tensor[(5, 120), float32] */;
  (%1106,)
}

def @func_7343() -> (Tensor[(12, 14, 11), bool],) {
  %1107 = @func_4554() /* ty=(Tensor[(12, 14, 11), bool],) */;
  %1108 = %1107.0;
  (%1108,)
}

def @func_3226() -> (Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64]) {
  %1109 = @func_2219() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), bool]) */;
  %1110 = @func_2930() /* ty=(Tensor[(5, 7, 6), uint64],) */;
  %1111 = %1109.1;
  %1112 = %1110.0;
  (%1111, %1112)
}

def @func_6853() -> Tensor[(5, 7, 6), uint64] {
  @func_5197() /* ty=Tensor[(5, 7, 6), uint64] */
}

def @func_13859() -> (Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), bool]) {
  %1113 = @func_7979() /* ty=Tensor[(12, 14, 11), bool] */;
  %1114 = cast(%1113, dtype="int64") /* ty=Tensor[(12, 14, 11), int64] */;
  %1115 = reshape(%1114, newshape=[84, 22]) /* ty=Tensor[(84, 22), int64] */;
  %1116 = @func_6199(%1115) /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), float64], Tensor[(12, 14, 11), bool], Tensor[(84, 22), int64], Tensor[(5, 7, 6), uint64]) */;
  %1117 = %1116.2;
  (%1113, %1117)
}

def @func_12288(%var_12282: Tensor[(9, 11, 6), float32], %var_12283: Tensor[(9, 11, 6), float32]) -> Tensor[(9, 11, 6), bool] {
  %1118 = cast(%var_12283, dtype="bool") /* ty=Tensor[(9, 11, 6), bool] */;
  %1119 = shape_of(%var_12282, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1120 = cast(%var_12282, dtype="bool") /* ty=Tensor[(9, 11, 6), bool] */;
  %1121 = dyn.reshape(%1118, %1119, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%1120, %1121) /* ty=Tensor[(9, 11, 6), bool] */
}

def @func_11254() -> (Tensor[(5, 7, 6), uint64],) {
  %1122 = @func_2930() /* ty=(Tensor[(5, 7, 6), uint64],) */;
  %1123 = %1122.0;
  (%1123,)
}

def @func_14290(%var_14222: Tensor[(16, 9, 2), float32], %var_14233: Tensor[(975), float64], %var_14249: Tensor[(1848), int64]) -> (Tensor[(16, 9, 2), float64], Tensor[(12, 11, 7), uint32], Tensor[(975), float64], Tensor[(12, 14, 11), bool], Tensor[(1848), int64], Tensor[(15, 15, 9), float32], Tensor[(12, 14, 11), bool]) {
  %1124 = cast(%var_14222, dtype="float32") /* ty=Tensor[(16, 9, 2), float32] */;
  %1125 = tan(%1124) /* ty=Tensor[(16, 9, 2), float32] */;
  %1126 = cast(%1125, dtype="float64") /* ty=Tensor[(16, 9, 2), float64] */;
  %1127 = shape_of(%var_14222, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1128 = cast(%var_14222, dtype="float64") /* ty=Tensor[(16, 9, 2), float64] */;
  %1129 = dyn.reshape(%1126, %1127, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1130 = cast(%var_14233, dtype="float64") /* ty=Tensor[(975), float64] */;
  %1131 = cast(%var_14233, dtype="float64") /* ty=Tensor[(975), float64] */;
  %1132 = reshape(%1130, newshape=[15, 13, 5]) /* ty=Tensor[(15, 13, 5), float64] */;
  %1133 = reshape(%1131, newshape=[15, 13, 5]) /* ty=Tensor[(15, 13, 5), float64] */;
  %1134 = @func_8107(%1132, %1133) /* ty=(Tensor[(15, 13, 5), int64], Tensor[(12, 11, 7), uint32], Tensor[(924, 1), uint32], Tensor[(15, 13, 5), float64]) */;
  %1135 = cast(%var_14249, dtype="int64") /* ty=Tensor[(1848), int64] */;
  %1136 = reshape(%1135, newshape=[2, 924]) /* ty=Tensor[(2, 924), int64] */;
  %1137 = @func_5163(%1136) /* ty=(Tensor[(12, 14, 11), bool], Tensor[(2, 924), float64]) */;
  %1138 = @func_5329() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(15, 15, 9), float32]) */;
  %1139 = @func_4488() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), bool]) */;
  %1140 = divide(%1128, %1129) /* ty=Tensor[(16, 9, 2), float64] */;
  %1141 = %1134.1;
  %1142 = %1137.0;
  %1143 = %1138.1;
  %1144 = %1139.1;
  (%1140, %1141, %var_14233, %1142, %var_14249, %1143, %1144)
}

def @func_12027(%var_12019: Tensor[(924, 2), int64], %var_12021: Tensor[(176), float32]) -> (Tensor[(5, 7, 6), uint64], Tensor[(210), uint64], Tensor[(924, 2), int64], Tensor[(144, 2), float32], Tensor[(176), float32]) {
  %1145 = cast(%var_12019, dtype="int64") /* ty=Tensor[(924, 2), int64] */;
  %1146 = cast(meta[relay.Constant][43] /* ty=Tensor[(144, 2), float32] */, dtype="float32") /* ty=Tensor[(144, 2), float32] */;
  %1147 = cast(%var_12021, dtype="float32") /* ty=Tensor[(176), float32] */;
  %1148 = reshape(%1145, newshape=[1848]) /* ty=Tensor[(1848), int64] */;
  %1149 = reshape(%1146, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %1150 = reshape(%1147, newshape=[176]) /* ty=Tensor[(176), float32] */;
  %1151 = @func_4174(%1148, %1149, %1150) /* ty=(Tensor[(210), uint64], Tensor[(5, 7, 6), uint64], Tensor[(120), int32], Tensor[(240), int32], Tensor[(1848), int64], Tensor[(12, 14, 11), float32], Tensor[(288), float32], Tensor[(288), float32], Tensor[(176), float32]) */;
  %1152 = @func_4850() /* ty=Tensor[(5, 7, 6), uint64] */;
  %1153 = %1151.0;
  (%1152, %1153, %var_12019, meta[relay.Constant][43] /* ty=Tensor[(144, 2), float32] */, %var_12021)
}

def @func_6792(%var_6782: Tensor[(8, 9, 6), float64]) -> (Tensor[(8, 9, 6), float64],) {
  %1154 = cast(%var_6782, dtype="float64") /* ty=Tensor[(8, 9, 6), float64] */;
  %1155 = sin(%1154) /* ty=Tensor[(8, 9, 6), float64] */;
  (%1155,)
}

def @func_12634(%var_12628: Tensor[(1152), int64]) -> (Tensor[(5, 7, 6), uint64], Tensor[(1, 120), float32], Tensor[(5, 7, 6), uint64], Tensor[(1152), int64]) {
  %1156 = @func_11928() /* ty=(Tensor[(5, 7, 6), uint64],) */;
  %1157 = @func_6451() /* ty=(Tensor[(1, 120), int32],) */;
  %1158 = %1157.0;
  %1159 = cast(%1158, dtype="float32") /* ty=Tensor[(1, 120), float32] */;
  %1160 = cast(%var_12628, dtype="int64") /* ty=Tensor[(1152), int64] */;
  %1161 = cast(%var_12628, dtype="int64") /* ty=Tensor[(1152), int64] */;
  %1162 = %1156.0;
  %1163 = cast(%1162, dtype="uint64") /* ty=Tensor[(5, 7, 6), uint64] */;
  %1164 = reshape(%1160, newshape=[8, 16, 9]) /* ty=Tensor[(8, 16, 9), int64] */;
  %1165 = reshape(%1161, newshape=[8, 16, 9]) /* ty=Tensor[(8, 16, 9), int64] */;
  %1166 = reshape(%1163, newshape=[210]) /* ty=Tensor[(210), uint64] */;
  %1167 = @func_2442(%1164, %1165, %1166) /* ty=(Tensor[(8, 16, 9), bool], Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64], Tensor[(210), uint64]) */;
  %1168 = cosh(%1159) /* ty=Tensor[(1, 120), float32] */;
  %1169 = %1167.2;
  (%1162, %1168, %1169, %var_12628)
}

def @func_14058() -> (Tensor[(5, 7, 6), uint64],) {
  %1170 = @func_9413() /* ty=(Tensor[(5, 7, 6), uint64],) */;
  %1171 = %1170.0;
  (%1171,)
}

def @func_12076(%var_12035: Tensor[(176), float32], %var_12071: Tensor[(144, 2), float32]) -> (Tensor[(12, 14, 11), bool], Tensor[(176), float32], Tensor[(15, 15, 9), float32], Tensor[(2, 924), int64], Tensor[(144, 2), int64]) {
  %1172 = @func_7820() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(9, 12, 6), float32], Tensor[(648), float32]) */;
  %1173 = @func_4885() /* ty=(Tensor[(2, 924), int64],) */;
  %1174 = %1172.0;
  %1175 = cast(%1174, dtype="int64") /* ty=Tensor[(12, 14, 11), int64] */;
  %1176 = cast(%var_12035, dtype="float32") /* ty=Tensor[(176), float32] */;
  %1177 = reshape(%1175, newshape=[924, 2]) /* ty=Tensor[(924, 2), int64] */;
  %1178 = reshape(%1176, newshape=[176]) /* ty=Tensor[(176), float32] */;
  %1179 = @func_12027(%1177, %1178) /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(210), uint64], Tensor[(924, 2), int64], Tensor[(144, 2), float32], Tensor[(176), float32]) */;
  %1180 = %1179.3;
  %1181 = cast(%var_12071, dtype="int64") /* ty=Tensor[(144, 2), int64] */;
  %1182 = shape_of(%1180, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1183 = cast(%1180, dtype="int64") /* ty=Tensor[(144, 2), int64] */;
  %1184 = dyn.reshape(%1181, %1182, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %1185 = @func_6728() /* ty=Tensor[(15, 15, 9), float32] */;
  %1186 = %1173.0;
  %1187 = bitwise_and(%1183, %1184) /* ty=Tensor[(144, 2), int64] */;
  (%1174, %var_12035, %1185, %1186, %1187)
}

def @func_11322() -> (Tensor[(12, 14, 11), bool],) {
  %1188 = @func_4214() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), int16]) */;
  %1189 = %1188.0;
  (%1189,)
}

def @func_5055() -> (Tensor[(1152), int64],) {
  %1190 = @func_4362() /* ty=(Tensor[(1152), int64],) */;
  %1191 = %1190.0;
  (%1191,)
}

def @func_14334() -> (Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64]) {
  %1192 = @func_3939() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) */;
  %1193 = @func_7979() /* ty=Tensor[(12, 14, 11), bool] */;
  %1194 = %1192.0;
  (%1193, %1194)
}

def @func_10549() -> (Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), bool], Tensor[(1, 120), float32]) {
  %1195 = @func_7915() /* ty=(Tensor[(12, 14, 11), bool],) */;
  %1196 = @func_9344() /* ty=(Tensor[(16, 11, ?), bool], Tensor[(1, 120), float32]) */;
  %1197 = @func_3417() /* ty=Tensor[(12, 14, 11), bool] */;
  %1198 = %1195.0;
  %1199 = %1196.1;
  (%1197, %1198, %1199)
}

def @func_11556() -> (Tensor[(5, 7, 6), bool],) {
  %1200 = @func_9318() /* ty=(Tensor[(5, 7, 6), bool], Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), int16], Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64], Tensor[(16, 11, ?), float32]) */;
  %1201 = %1200.0;
  (%1201,)
}

def @func_10902() -> (Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), int16]) {
  %1202 = @func_8589() /* ty=(Tensor[(12, 14, 11), bool],) */;
  %1203 = @func_4440() /* ty=(Tensor[(5, 7, 6), bool], Tensor[(12, 14, 11), int16]) */;
  %1204 = %1202.0;
  %1205 = %1203.1;
  (%1204, %1205)
}

def @func_11749(%var_11692: Tensor[(112), float64], %var_11710: Tensor[(224), float32]) -> (Tensor[(15, 15, 9), float32], Tensor[(8, 2, 7), float64], Tensor[(112), float64], Tensor[(12, 14, 11), float32], Tensor[(224), float32], Tensor[(12, 14, 11), bool]) {
  %1206 = cast(%var_11692, dtype="float64") /* ty=Tensor[(112), float64] */;
  %1207 = reshape(%1206, newshape=[8, 2, 7]) /* ty=Tensor[(8, 2, 7), float64] */;
  %1208 = cast(%var_11710, dtype="float32") /* ty=Tensor[(224), float32] */;
  %1209 = reshape(%1208, newshape=[224]) /* ty=Tensor[(224), float32] */;
  %1210 = @func_8180(%1209) /* ty=(Tensor[(15, 15, 9), float32], Tensor[(12, 14, 11), float32], Tensor[(8, 7, 4), int8], Tensor[(224), float32]) */;
  %1211 = @func_6912() /* ty=Tensor[(15, 15, 9), float32] */;
  %1212 = @func_6077(%1207) /* ty=Tensor[(8, 2, 7), float64] */;
  %1213 = %1210.1;
  %1214 = @func_2415() /* ty=Tensor[(12, 14, 11), bool] */;
  (%1211, %1212, %var_11692, %1213, %var_11710, %1214)
}

def @func_13550() -> (Tensor[(288), float32], Tensor[(1152), int64], Tensor[(5, 7, 6), uint64]) {
  %1215 = @func_4362() /* ty=(Tensor[(1152), int64],) */;
  %1216 = @func_10659() /* ty=(Tensor[(9, 2, 16), float32], Tensor[(5, 7, 6), uint64]) */;
  %1217 = @func_6991() /* ty=Tensor[(288), float32] */;
  %1218 = %1215.0;
  %1219 = %1216.1;
  (%1217, %1218, %1219)
}

def @func_5197() -> Tensor[(5, 7, 6), uint64] {
  %1220 = @func_3587() /* ty=(Tensor[(5, 7, 6), uint64],) */;
  %1220.0
}

def @func_9413() -> (Tensor[(5, 7, 6), uint64],) {
  %1221 = @func_4850() /* ty=Tensor[(5, 7, 6), uint64] */;
  (%1221,)
}

def @func_8941() -> (Tensor[(5, 7, 6), bool], Tensor[(15, 15, 9), float32]) {
  %1222 = @func_4440() /* ty=(Tensor[(5, 7, 6), bool], Tensor[(12, 14, 11), int16]) */;
  %1223 = %1222.0;
  %1224 = @func_7194() /* ty=Tensor[(15, 15, 9), float32] */;
  (%1223, %1224)
}

def @func_7423(%var_7411: Tensor[(648), float32]) -> (Tensor[(8, 12, 3), bool], Tensor[(288), float32], Tensor[(1848), int64], Tensor[(202752), int16], Tensor[(9, 12, 6), float32], Tensor[(648), float32], Tensor[(202752), float32], Tensor[(5, 7, 6), float64], Tensor[(210), uint64]) {
  %1225 = @func_4415() /* ty=(Tensor[(8, 12, 3), bool], Tensor[(16, 11, 1), float32], Tensor[(176), float32]) */;
  %1226 = @func_5583() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(210), uint64], Tensor[(176), float32], Tensor[(1, 120), int32], Tensor[(1848), int64], Tensor[(288), float32]) */;
  %1227 = cast(meta[relay.Constant][44] /* ty=Tensor[(202752), int32] */, dtype="int32") /* ty=Tensor[(202752), int32] */;
  %1228 = reshape(%1227, newshape=[16, 11, 1152]) /* ty=Tensor[(16, 11, 1152), int32] */;
  %1229 = @func_5751(%1228) /* ty=(Tensor[(16, 11, ?), bool], Tensor[(16, 11, 1152), bool], Tensor[(16, 11, 1152), bool]) */;
  %1230 = %1229.2;
  %1231 = cast(%1230, dtype="int16") /* ty=Tensor[(16, 11, 1152), int16] */;
  %1232 = shape_of(meta[relay.Constant][44] /* ty=Tensor[(202752), int32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1233 = cast(meta[relay.Constant][44] /* ty=Tensor[(202752), int32] */, dtype="int16") /* ty=Tensor[(202752), int16] */;
  %1234 = dyn.reshape(%1231, %1232, newshape=[]) /* ty=Tensor[(?), int16] */;
  %1235 = cast(%var_7411, dtype="float32") /* ty=Tensor[(648), float32] */;
  %1236 = reshape(%1235, newshape=[9, 12, 6]) /* ty=Tensor[(9, 12, 6), float32] */;
  %1237 = @func_3786(%1236) /* ty=(Tensor[(9, 12, 6), float32],) */;
  %1238 = cast(meta[relay.Constant][44] /* ty=Tensor[(202752), int32] */, dtype="float32") /* ty=Tensor[(202752), float32] */;
  %1239 = cast(meta[relay.Constant][45] /* ty=Tensor[(210), uint64] */, dtype="uint64") /* ty=Tensor[(210), uint64] */;
  %1240 = reshape(%1239, newshape=[5, 7, 6]) /* ty=Tensor[(5, 7, 6), uint64] */;
  %1241 = %1225.0;
  %1242 = @func_6984() /* ty=Tensor[(288), float32] */;
  %1243 = %1226.4;
  %1244 = bitwise_or(%1233, %1234) /* ty=Tensor[(202752), int16] */;
  %1245 = %1237.0;
  %1246 = sigmoid(%1238) /* ty=Tensor[(202752), float32] */;
  %1247 = @func_5883(%1240) /* ty=Tensor[(5, 7, 6), float64] */;
  (%1241, %1242, %1243, %1244, %1245, %var_7411, %1246, %1247, meta[relay.Constant][45] /* ty=Tensor[(210), uint64] */)
}

def @func_7541() -> (Tensor[(210), uint64], Tensor[(5, 7, 6), bool], Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), int32], Tensor[(176), float32]) {
  %1248 = @func_2768() /* ty=(Tensor[(5, 7, 6), float64], Tensor[(210), uint64], Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) */;
  %1249 = @func_3607() /* ty=(Tensor[(5, 7, 6), bool],) */;
  %1250 = @func_2415() /* ty=Tensor[(12, 14, 11), bool] */;
  %1251 = cast(%1250, dtype="bool") /* ty=Tensor[(12, 14, 11), bool] */;
  %1252 = cast(meta[relay.Constant][46] /* ty=Tensor[(176), float32] */, dtype="float32") /* ty=Tensor[(176), float32] */;
  %1253 = reshape(%1251, newshape=[12, 14, 11]) /* ty=Tensor[(12, 14, 11), bool] */;
  %1254 = reshape(%1252, newshape=[176]) /* ty=Tensor[(176), float32] */;
  %1255 = @func_5501(%1253, %1254) /* ty=(Tensor[(12, 14, 11), int32], Tensor[(12, 14, 11), float64], Tensor[(12, 14, 11), bool], Tensor[(16, 11, 1), float32], Tensor[(176), float32]) */;
  %1256 = %1248.1;
  %1257 = %1249.0;
  %1258 = %1255.0;
  (%1256, %1257, %1250, %1258, meta[relay.Constant][46] /* ty=Tensor[(176), float32] */)
}

def @func_3838() -> (Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) {
  %1259 = @func_3226() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64]) */;
  %1260 = @func_2398() /* ty=(Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64]) */;
  %1261 = %1259.1;
  %1262 = %1260.1;
  (%1261, %1262)
}

def @func_12525() -> (Tensor[(1, 120), int32], Tensor[(5, 7, 6), uint64]) {
  %1263 = @func_6451() /* ty=(Tensor[(1, 120), int32],) */;
  %1264 = @func_5905() /* ty=(Tensor[(5, 7, 6), uint64],) */;
  %1265 = %1263.0;
  %1266 = %1264.0;
  (%1265, %1266)
}

def @func_14510() -> (Tensor[(12, 14, 11), int16], Tensor[(12, 14, 11), bool]) {
  %1267 = @func_7640() /* ty=(Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64], Tensor[(15, 15, 9), float32], Tensor[(12, 14, 11), bool]) */;
  %1268 = @func_11013() /* ty=Tensor[(12, 14, 11), int16] */;
  %1269 = %1267.3;
  (%1268, %1269)
}

def @func_14088() -> (Tensor[(5, 7, 6), uint64], Tensor[(2, 924), int64]) {
  %1270 = @func_7314() /* ty=(Tensor[(2, 924), int64],) */;
  %1271 = @func_6135() /* ty=Tensor[(5, 7, 6), uint64] */;
  %1272 = %1270.0;
  (%1271, %1272)
}

def @func_14404() -> Tensor[(12, 14, 11), bool] {
  %1273 = @func_9318() /* ty=(Tensor[(5, 7, 6), bool], Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), int16], Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64], Tensor[(16, 11, ?), float32]) */;
  %1273.3
}

def @func_5695() -> (Tensor[(12, 14, 11), bool], Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), float32], Tensor[(15, 15, 9), float32], Tensor[(176), float32], Tensor[(176), float32], Tensor[(120), int32]) {
  %1274 = @func_4829() /* ty=(Tensor[(12, 14, 11), bool],) */;
  %1275 = @func_4943() /* ty=(Tensor[(12, 14, 11), int16], Tensor[(5, 7, 6), uint64], Tensor[(9, 12, 6), float32], Tensor[(648), float32], Tensor[(12, 14, 11), bool]) */;
  %1276 = %1275.1;
  %1277 = cast(%1276, dtype="float32") /* ty=Tensor[(5, 7, 6), float32] */;
  %1278 = atan(%1277) /* ty=Tensor[(5, 7, 6), float32] */;
  %1279 = cast(%1278, dtype="float32") /* ty=Tensor[(5, 7, 6), float32] */;
  %1280 = cast(meta[relay.Constant][47] /* ty=Tensor[(176), float32] */, dtype="float32") /* ty=Tensor[(176), float32] */;
  %1281 = cast(meta[relay.Constant][48] /* ty=Tensor[(120), int32] */, dtype="int32") /* ty=Tensor[(120), int32] */;
  %1282 = reshape(%1280, newshape=[176]) /* ty=Tensor[(176), float32] */;
  %1283 = reshape(%1281, newshape=[120]) /* ty=Tensor[(120), int32] */;
  %1284 = @func_2911(%1282, %1283) /* ty=(Tensor[(12, 14, 11), bool], Tensor[(210), uint64], Tensor[(12, 14, 11), bool], Tensor[(1152), int64], Tensor[(16, 11, 1), float32], Tensor[(176), float32], Tensor[(12, 14, 11), bool], Tensor[(120), int32], Tensor[(240), int32], Tensor[(8, 15, 2), bool], Tensor[(5, 7, 6), bool], Tensor[(5, 7, 6), uint64], Tensor[(16, 11, 1), float32], Tensor[(16, 11, 1), float32]) */;
  %1285 = %1274.0;
  %1286 = @func_5373() /* ty=Tensor[(15, 15, 9), float32] */;
  %1287 = cos(%1279) /* ty=Tensor[(5, 7, 6), float32] */;
  %1288 = @func_4697() /* ty=Tensor[(15, 15, 9), float32] */;
  %1289 = %1284.5;
  (%1285, %1286, %1287, %1288, %1289, meta[relay.Constant][47] /* ty=Tensor[(176), float32] */, meta[relay.Constant][48] /* ty=Tensor[(120), int32] */)
}

def @func_9573() -> (Tensor[(12, 14, 11), float64], Tensor[(1848), int64], Tensor[(240), int32]) {
  %1290 = @func_4440() /* ty=(Tensor[(5, 7, 6), bool], Tensor[(12, 14, 11), int16]) */;
  %1291 = %1290.1;
  %1292 = cast(%1291, dtype="float64") /* ty=Tensor[(12, 14, 11), float64] */;
  %1293 = cast(meta[relay.Constant][49] /* ty=Tensor[(240), int32] */, dtype="int32") /* ty=Tensor[(240), int32] */;
  %1294 = cast(%1291, dtype="int64") /* ty=Tensor[(12, 14, 11), int64] */;
  %1295 = reshape(%1293, newshape=[240]) /* ty=Tensor[(240), int32] */;
  %1296 = reshape(%1294, newshape=[1848]) /* ty=Tensor[(1848), int64] */;
  %1297 = @func_3151(%1295, %1296) /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), bool], Tensor[(120), int32], Tensor[(240), int32], Tensor[(1848), int64]) */;
  %1298 = sqrt(%1292) /* ty=Tensor[(12, 14, 11), float64] */;
  %1299 = %1297.5;
  (%1298, %1299, meta[relay.Constant][49] /* ty=Tensor[(240), int32] */)
}

def @func_3587() -> (Tensor[(5, 7, 6), uint64],) {
  %1300 = @func_3226() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64]) */;
  %1301 = %1300.1;
  (%1301,)
}

def @func_14154() -> (Tensor[(5, 7, 6), uint64], Tensor[(6, 6, 16), int32], int32, Tensor[(576), int32]) {
  %1302 = cast(8 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %1303 = cast(meta[relay.Constant][50] /* ty=Tensor[(576), int32] */, dtype="int32") /* ty=Tensor[(576), int32] */;
  %1304 = reshape(%1302, newshape=[]) /* ty=int32 */;
  %1305 = reshape(%1303, newshape=[6, 6, 16]) /* ty=Tensor[(6, 6, 16), int32] */;
  %1306 = @func_2290() /* ty=Tensor[(5, 7, 6), uint64] */;
  %1307 = @func_12318(%1304, %1305) /* ty=Tensor[(6, 6, 16), int32] */;
  (%1306, %1307, 8 /* ty=int32 */, meta[relay.Constant][50] /* ty=Tensor[(576), int32] */)
}

def @func_9388() -> Tensor[(16, 11, ?), bool] {
  @func_5247() /* ty=Tensor[(16, 11, ?), bool] */
}

def @func_6045() -> (Tensor[(12, 14, 11), int16], Tensor[(5, 7, 6), float64], Tensor[(210), uint64], Tensor[(12, 14, 11), bool]) {
  %1308 = @func_4440() /* ty=(Tensor[(5, 7, 6), bool], Tensor[(12, 14, 11), int16]) */;
  %1309 = cast(meta[relay.Constant][51] /* ty=Tensor[(210), uint64] */, dtype="uint64") /* ty=Tensor[(210), uint64] */;
  %1310 = reshape(%1309, newshape=[5, 7, 6]) /* ty=Tensor[(5, 7, 6), uint64] */;
  %1311 = %1308.1;
  %1312 = @func_5883(%1310) /* ty=Tensor[(5, 7, 6), float64] */;
  %1313 = @func_2415() /* ty=Tensor[(12, 14, 11), bool] */;
  (%1311, %1312, meta[relay.Constant][51] /* ty=Tensor[(210), uint64] */, %1313)
}

def @func_4488() -> (Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), bool]) {
  %1314 = @func_3226() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64]) */;
  %1315 = %1314.0;
  %1316 = @func_2415() /* ty=Tensor[(12, 14, 11), bool] */;
  (%1315, %1316)
}

def @func_5163(%var_5106: Tensor[(2, 924), int64]) -> (Tensor[(12, 14, 11), bool], Tensor[(2, 924), float64]) {
  %1317 = @func_4554() /* ty=(Tensor[(12, 14, 11), bool],) */;
  %1318 = @func_4885() /* ty=(Tensor[(2, 924), int64],) */;
  %1319 = %1318.0;
  %1320 = cast(%var_5106, dtype="int16") /* ty=Tensor[(2, 924), int16] */;
  %1321 = shape_of(%1319, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1322 = cast(%1319, dtype="int16") /* ty=Tensor[(2, 924), int16] */;
  %1323 = dyn.reshape(%1320, %1321, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %1324 = maximum(%1322, %1323) /* ty=Tensor[(2, 924), int16] */;
  %1325 = cast(%1324, dtype="int64") /* ty=Tensor[(2, 924), int64] */;
  %1326 = shape_of(%var_5106, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1327 = cast(%var_5106, dtype="int64") /* ty=Tensor[(2, 924), int64] */;
  %1328 = dyn.reshape(%1325, %1326, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %1329 = subtract(%1327, %1328) /* ty=Tensor[(2, 924), int64] */;
  %1330 = cast(%1329, dtype="bool") /* ty=Tensor[(2, 924), bool] */;
  %1331 = shape_of(%var_5106, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1332 = cast(%var_5106, dtype="bool") /* ty=Tensor[(2, 924), bool] */;
  %1333 = dyn.reshape(%1330, %1331, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1334 = less(%1332, %1333) /* ty=Tensor[(2, 924), bool] */;
  %1335 = cast(%1334, dtype="float64") /* ty=Tensor[(2, 924), float64] */;
  %1336 = %1317.0;
  %1337 = sigmoid(%1335) /* ty=Tensor[(2, 924), float64] */;
  (%1336, %1337)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_6961(%var_6958: Tensor[(1, 9, 2), float32]) -> Tensor[(1, 9, 2), float32] {
  %0 = cast(%var_6958, dtype="float32") /* ty=Tensor[(1, 9, 2), float32] */;
  exp(%0) /* ty=Tensor[(1, 9, 2), float32] */
}

def @func_5504(%var_5502: Tensor[(12, 14, 11), bool], %var_5503: Tensor[(176), float32]) -> (Tensor[(12, 14, 11), int32], Tensor[(12, 14, 11), float64], Tensor[(12, 14, 11), bool], Tensor[(16, 11, 1), float32], Tensor[(176), float32]) {
  %17 = fn (%var_5453: Tensor[(12, 14, 11), bool], %var_5480: Tensor[(176), float32]) -> (Tensor[(12, 14, 11), int32], Tensor[(12, 14, 11), float64], Tensor[(12, 14, 11), bool], Tensor[(16, 11, 1), float32], Tensor[(176), float32]) {
    %1 = @func_2415() /* ty=Tensor[(12, 14, 11), bool] */;
    %2 = cast(%var_5453, dtype="int32") /* ty=Tensor[(12, 14, 11), int32] */;
    %3 = shape_of(%1, dtype="int32") /* ty=Tensor[(3), int32] */;
    %4 = cast(%1, dtype="int32") /* ty=Tensor[(12, 14, 11), int32] */;
    %5 = dyn.reshape(%2, %3, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %6 = @func_4619() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), bool]) */;
    %7 = %6.0;
    %8 = cast(%7, dtype="float64") /* ty=Tensor[(12, 14, 11), float64] */;
    %9 = @func_4554() /* ty=(Tensor[(12, 14, 11), bool],) */;
    %10 = cast(%var_5480, dtype="float32") /* ty=Tensor[(176), float32] */;
    %11 = reshape(%10, newshape=[16, 11, 1]) /* ty=Tensor[(16, 11, 1), float32] */;
    %12 = @func_200(%11) /* ty=(Tensor[(16, 11, 1), float32],) */;
    %13 = left_shift(%4, %5) /* ty=Tensor[(12, 14, 11), int32] */;
    %14 = exp(%8) /* ty=Tensor[(12, 14, 11), float64] */;
    %15 = %9.0;
    %16 = %12.0;
    (%13, %14, %15, %16, %var_5480)
  };
  %17(%var_5502, %var_5503) /* ty=(Tensor[(12, 14, 11), int32], Tensor[(12, 14, 11), float64], Tensor[(12, 14, 11), bool], Tensor[(16, 11, 1), float32], Tensor[(176), float32]) */
}

def @func_5584() -> (Tensor[(12, 14, 11), bool], Tensor[(210), uint64], Tensor[(176), float32], Tensor[(1, 120), int32], Tensor[(1848), int64], Tensor[(288), float32]) {
  %34 = fn () -> (Tensor[(12, 14, 11), bool], Tensor[(210), uint64], Tensor[(176), float32], Tensor[(1, 120), int32], Tensor[(1848), int64], Tensor[(288), float32]) {
    %18 = @func_4943() /* ty=(Tensor[(12, 14, 11), int16], Tensor[(5, 7, 6), uint64], Tensor[(9, 12, 6), float32], Tensor[(648), float32], Tensor[(12, 14, 11), bool]) */;
    %19 = cast(meta[relay.Constant][0] /* ty=Tensor[(176), float32] */, dtype="float32") /* ty=Tensor[(176), float32] */;
    %20 = cast(meta[relay.Constant][1] /* ty=Tensor[(1, 120), int32] */, dtype="int32") /* ty=Tensor[(1, 120), int32] */;
    %21 = reshape(%19, newshape=[176]) /* ty=Tensor[(176), float32] */;
    %22 = reshape(%20, newshape=[120]) /* ty=Tensor[(120), int32] */;
    %23 = @func_2911(%21, %22) /* ty=(Tensor[(12, 14, 11), bool], Tensor[(210), uint64], Tensor[(12, 14, 11), bool], Tensor[(1152), int64], Tensor[(16, 11, 1), float32], Tensor[(176), float32], Tensor[(12, 14, 11), bool], Tensor[(120), int32], Tensor[(240), int32], Tensor[(8, 15, 2), bool], Tensor[(5, 7, 6), bool], Tensor[(5, 7, 6), uint64], Tensor[(16, 11, 1), float32], Tensor[(16, 11, 1), float32]) */;
    %24 = %18.4;
    %25 = cast(%24, dtype="int64") /* ty=Tensor[(12, 14, 11), int64] */;
    %26 = cast(meta[relay.Constant][2] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
    %27 = cast(meta[relay.Constant][0] /* ty=Tensor[(176), float32] */, dtype="float32") /* ty=Tensor[(176), float32] */;
    %28 = reshape(%25, newshape=[1848]) /* ty=Tensor[(1848), int64] */;
    %29 = reshape(%26, newshape=[288]) /* ty=Tensor[(288), float32] */;
    %30 = reshape(%27, newshape=[176]) /* ty=Tensor[(176), float32] */;
    %31 = @func_4174(%28, %29, %30) /* ty=(Tensor[(210), uint64], Tensor[(5, 7, 6), uint64], Tensor[(120), int32], Tensor[(240), int32], Tensor[(1848), int64], Tensor[(12, 14, 11), float32], Tensor[(288), float32], Tensor[(288), float32], Tensor[(176), float32]) */;
    %32 = %23.1;
    %33 = %31.4;
    (%24, %32, meta[relay.Constant][0] /* ty=Tensor[(176), float32] */, meta[relay.Constant][1] /* ty=Tensor[(1, 120), int32] */, %33, meta[relay.Constant][2] /* ty=Tensor[(288), float32] */)
  };
  %34() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(210), uint64], Tensor[(176), float32], Tensor[(1, 120), int32], Tensor[(1848), int64], Tensor[(288), float32]) */
}

def @func_6080(%var_6078: Tensor[(8, 2, 7), float64]) -> Tensor[(8, 2, 7), float64] {
  @func_6077(%var_6078) /* ty=Tensor[(8, 2, 7), float64] */
}

def @func_8690(%var_8689: Tensor[(5, 195), float64]) -> (Tensor[(5, 7, 6), uint64], Tensor[(12, 11, 7), uint32], Tensor[(5, 195), float64], Tensor[(16, 11, ?), bool]) {
  %45 = fn (%var_8643: Tensor[(5, 195), float64]) -> (Tensor[(5, 7, 6), uint64], Tensor[(12, 11, 7), uint32], Tensor[(5, 195), float64], Tensor[(16, 11, ?), bool]) {
    %35 = @func_4865() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(15, 15, 9), float32]) */;
    %36 = cast(%var_8643, dtype="float64") /* ty=Tensor[(5, 195), float64] */;
    %37 = cast(%var_8643, dtype="float64") /* ty=Tensor[(5, 195), float64] */;
    %38 = reshape(%36, newshape=[15, 13, 5]) /* ty=Tensor[(15, 13, 5), float64] */;
    %39 = reshape(%37, newshape=[15, 13, 5]) /* ty=Tensor[(15, 13, 5), float64] */;
    %40 = @func_8107(%38, %39) /* ty=(Tensor[(15, 13, 5), int64], Tensor[(12, 11, 7), uint32], Tensor[(924, 1), uint32], Tensor[(15, 13, 5), float64]) */;
    %41 = @func_8420() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(16, 11, ?), bool], Tensor[(12, 14, 11), bool]) */;
    %42 = %35.0;
    %43 = %40.1;
    %44 = %41.1;
    (%42, %43, %var_8643, %44)
  };
  %45(%var_8689) /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(12, 11, 7), uint32], Tensor[(5, 195), float64], Tensor[(16, 11, ?), bool]) */
}

def @func_9191(%var_9189: Tensor[(288, 1), float32], %var_9190: Tensor[(924), uint32]) -> (Tensor[(5, 7, 6), bool], Tensor[(1848), int64], Tensor[(1848), int64], Tensor[(288, 1), float32], Tensor[(1, 176), float32], Tensor[(288), float32], Tensor[(924), uint32], Tensor[(12, 11, 7), float64]) {
  %66 = fn (%var_9133: Tensor[(288, 1), float32], %var_9158: Tensor[(924), uint32]) -> (Tensor[(5, 7, 6), bool], Tensor[(1848), int64], Tensor[(1848), int64], Tensor[(288, 1), float32], Tensor[(1, 176), float32], Tensor[(288), float32], Tensor[(924), uint32], Tensor[(12, 11, 7), float64]) {
    %46 = @func_3607() /* ty=(Tensor[(5, 7, 6), bool],) */;
    %47 = cast(meta[relay.Constant][3] /* ty=Tensor[(1848), int64] */, dtype="int64") /* ty=Tensor[(1848), int64] */;
    %48 = cast(%var_9133, dtype="float32") /* ty=Tensor[(288, 1), float32] */;
    %49 = cast(meta[relay.Constant][4] /* ty=Tensor[(1, 176), float32] */, dtype="float32") /* ty=Tensor[(1, 176), float32] */;
    %50 = reshape(%47, newshape=[1848]) /* ty=Tensor[(1848), int64] */;
    %51 = reshape(%48, newshape=[288]) /* ty=Tensor[(288), float32] */;
    %52 = reshape(%49, newshape=[176]) /* ty=Tensor[(176), float32] */;
    %53 = @func_4174(%50, %51, %52) /* ty=(Tensor[(210), uint64], Tensor[(5, 7, 6), uint64], Tensor[(120), int32], Tensor[(240), int32], Tensor[(1848), int64], Tensor[(12, 14, 11), float32], Tensor[(288), float32], Tensor[(288), float32], Tensor[(176), float32]) */;
    %54 = cast(%var_9158, dtype="uint32") /* ty=Tensor[(924), uint32] */;
    %55 = cast(%var_9158, dtype="uint32") /* ty=Tensor[(924), uint32] */;
    %56 = reshape(%54, newshape=[12, 11, 7]) /* ty=Tensor[(12, 11, 7), uint32] */;
    %57 = reshape(%55, newshape=[12, 11, 7]) /* ty=Tensor[(12, 11, 7), uint32] */;
    %58 = @func_8032(%56, %57) /* ty=Tensor[(12, 11, 7), uint32] */;
    %59 = cast(%58, dtype="float32") /* ty=Tensor[(12, 11, 7), float32] */;
    %60 = erf(%59) /* ty=Tensor[(12, 11, 7), float32] */;
    %61 = cast(%60, dtype="float64") /* ty=Tensor[(12, 11, 7), float64] */;
    %62 = %46.0;
    %63 = %53.4;
    %64 = @func_6984() /* ty=Tensor[(288), float32] */;
    %65 = acos(%61) /* ty=Tensor[(12, 11, 7), float64] */;
    (%62, %63, meta[relay.Constant][3] /* ty=Tensor[(1848), int64] */, %var_9133, meta[relay.Constant][4] /* ty=Tensor[(1, 176), float32] */, %64, %var_9158, %65)
  };
  %66(%var_9189, %var_9190) /* ty=(Tensor[(5, 7, 6), bool], Tensor[(1848), int64], Tensor[(1848), int64], Tensor[(288, 1), float32], Tensor[(1, 176), float32], Tensor[(288), float32], Tensor[(924), uint32], Tensor[(12, 11, 7), float64]) */
}

def @func_11632() -> (Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), bool]) {
  @func_11630() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), bool]) */
}

def @func_4488() -> (Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), bool]) {
  %67 = @func_3226() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64]) */;
  %68 = %67.0;
  %69 = @func_2415() /* ty=Tensor[(12, 14, 11), bool] */;
  (%68, %69)
}

def @func_6776() -> (Tensor[(5, 7, 6), uint64],) {
  @func_6774() /* ty=(Tensor[(5, 7, 6), uint64],) */
}

def @func_12257() -> (Tensor[(648), float32], Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64], Tensor[(9, 12, 6), float32], Tensor[(5, 7, 6), bool], Tensor[(12, 14, 11), bool]) {
  %70 = @func_7820() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(9, 12, 6), float32], Tensor[(648), float32]) */;
  %71 = @func_4865() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(15, 15, 9), float32]) */;
  %72 = @func_2768() /* ty=(Tensor[(5, 7, 6), float64], Tensor[(210), uint64], Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) */;
  %73 = %70.2;
  %74 = cast(%73, dtype="float32") /* ty=Tensor[(648), float32] */;
  %75 = reshape(%74, newshape=[9, 12, 6]) /* ty=Tensor[(9, 12, 6), float32] */;
  %76 = @func_3786(%75) /* ty=(Tensor[(9, 12, 6), float32],) */;
  %77 = @func_3950() /* ty=(Tensor[(5, 7, 6), bool],) */;
  %78 = @func_7343() /* ty=(Tensor[(12, 14, 11), bool],) */;
  %79 = %71.1;
  %80 = %72.2;
  %81 = %76.0;
  %82 = %77.0;
  %83 = %78.0;
  (%73, %79, %80, %81, %82, %83)
}

def @func_5883(%var_5835: Tensor[(5, 7, 6), uint64]) -> Tensor[(5, 7, 6), float64] {
  %84 = @func_4850() /* ty=Tensor[(5, 7, 6), uint64] */;
  %85 = cast(%var_5835, dtype="int8") /* ty=Tensor[(5, 7, 6), int8] */;
  %86 = shape_of(%84, dtype="int32") /* ty=Tensor[(3), int32] */;
  %87 = cast(%84, dtype="int8") /* ty=Tensor[(5, 7, 6), int8] */;
  %88 = dyn.reshape(%85, %86, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %89 = minimum(%87, %88) /* ty=Tensor[(5, 7, 6), int8] */;
  %90 = cast(%89, dtype="float64") /* ty=Tensor[(5, 7, 6), float64] */;
  sqrt(%90) /* ty=Tensor[(5, 7, 6), float64] */
}

def @func_14843() -> (Tensor[(5, 7, 6), uint64], Tensor[(15, 13, 5), float64], Tensor[(975, 1), float64], Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), bool], Tensor[(5, 7, 6), uint64]) {
  %104 = fn () -> (Tensor[(5, 7, 6), uint64], Tensor[(15, 13, 5), float64], Tensor[(975, 1), float64], Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), bool], Tensor[(5, 7, 6), uint64]) {
    %91 = @func_11630() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), bool]) */;
    %92 = cast(meta[relay.Constant][5] /* ty=Tensor[(975, 1), float64] */, dtype="float64") /* ty=Tensor[(975, 1), float64] */;
    %93 = cast(meta[relay.Constant][5] /* ty=Tensor[(975, 1), float64] */, dtype="float64") /* ty=Tensor[(975, 1), float64] */;
    %94 = reshape(%92, newshape=[15, 13, 5]) /* ty=Tensor[(15, 13, 5), float64] */;
    %95 = reshape(%93, newshape=[15, 13, 5]) /* ty=Tensor[(15, 13, 5), float64] */;
    %96 = @func_8107(%94, %95) /* ty=(Tensor[(15, 13, 5), int64], Tensor[(12, 11, 7), uint32], Tensor[(924, 1), uint32], Tensor[(15, 13, 5), float64]) */;
    %97 = @func_7343() /* ty=(Tensor[(12, 14, 11), bool],) */;
    %98 = @func_9726() /* ty=(Tensor[(5, 7, 6), bool], Tensor[(5, 7, 6), uint64], Tensor[(1848), int64]) */;
    %99 = %91.0;
    %100 = %96.3;
    %101 = %97.0;
    %102 = %98.0;
    %103 = @func_6853() /* ty=Tensor[(5, 7, 6), uint64] */;
    (%99, %100, meta[relay.Constant][5] /* ty=Tensor[(975, 1), float64] */, %101, %102, %103)
  };
  %104() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(15, 13, 5), float64], Tensor[(975, 1), float64], Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), bool], Tensor[(5, 7, 6), uint64]) */
}

def @func_12937(%var_12935: Tensor[(1, 14, 1), float64], %var_12936: Tensor[(13, 14, 10), float64]) -> (Tensor[(13, 14, 10), float64],) {
  @func_12933(%var_12935, %var_12936) /* ty=(Tensor[(13, 14, 10), float64],) */
}

def @func_14852() -> (Tensor[(12, 14, 11), bool],) {
  @func_14850() /* ty=(Tensor[(12, 14, 11), bool],) */
}

def @func_6589() -> (Tensor[(1152), int64],) {
  @func_6587() /* ty=(Tensor[(1152), int64],) */
}

def @func_5751(%var_5745: Tensor[(16, 11, 1152), int32]) -> (Tensor[(16, 11, ?), bool], Tensor[(16, 11, 1152), bool], Tensor[(16, 11, 1152), bool]) {
  %105 = @func_5055() /* ty=(Tensor[(1152), int64],) */;
  %106 = %105.0;
  %107 = @func_4991() /* ty=Tensor[(16, 11, ?), bool] */;
  %108 = cast(%106, dtype="int32") /* ty=Tensor[(1152), int32] */;
  %109 = cast(%107, dtype="int32") /* ty=Tensor[(16, 11, ?), int32] */;
  %110 = left_shift(%108, %109) /* ty=Tensor[(16, 11, 1152), int32] */;
  %111 = cast(%110, dtype="bool") /* ty=Tensor[(16, 11, 1152), bool] */;
  %112 = cast(%107, dtype="bool") /* ty=Tensor[(16, 11, ?), bool] */;
  %113 = cast(%var_5745, dtype="bool") /* ty=Tensor[(16, 11, 1152), bool] */;
  %114 = shape_of(%110, dtype="int32") /* ty=Tensor[(3), int32] */;
  %115 = cast(%110, dtype="bool") /* ty=Tensor[(16, 11, 1152), bool] */;
  %116 = dyn.reshape(%113, %114, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %117 = @func_5247() /* ty=Tensor[(16, 11, ?), bool] */;
  %118 = greater_equal(%111, %112) /* ty=Tensor[(16, 11, 1152), bool] */;
  %119 = greater(%115, %116) /* ty=Tensor[(16, 11, 1152), bool] */;
  (%117, %118, %119)
}

def @func_8421() -> (Tensor[(12, 14, 11), bool], Tensor[(16, 11, ?), bool], Tensor[(12, 14, 11), bool]) {
  %124 = fn () -> (Tensor[(12, 14, 11), bool], Tensor[(16, 11, ?), bool], Tensor[(12, 14, 11), bool]) {
    %120 = @func_7690() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(210), uint64], Tensor[(12, 14, 11), float32]) */;
    %121 = %120.0;
    %122 = @func_4991() /* ty=Tensor[(16, 11, ?), bool] */;
    %123 = @func_2415() /* ty=Tensor[(12, 14, 11), bool] */;
    (%121, %122, %123)
  };
  %124() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(16, 11, ?), bool], Tensor[(12, 14, 11), bool]) */
}

def @func_4829() -> (Tensor[(12, 14, 11), bool],) {
  %125 = @func_4488() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), bool]) */;
  %126 = %125.0;
  (%126,)
}

def @func_14058() -> (Tensor[(5, 7, 6), uint64],) {
  %127 = @func_9413() /* ty=(Tensor[(5, 7, 6), uint64],) */;
  %128 = %127.0;
  (%128,)
}

def @func_15047(%var_15040: Tensor[(7, 2, 8), float32]) -> (Tensor[(7, 2, 8), float32],) {
  %129 = cast(%var_15040, dtype="float32") /* ty=Tensor[(7, 2, 8), float32] */;
  %130 = rsqrt(%129) /* ty=Tensor[(7, 2, 8), float32] */;
  (%130,)
}

def @func_9899() -> Tensor[(1152), int64] {
  %131 = @func_5055() /* ty=(Tensor[(1152), int64],) */;
  %131.0
}

def @func_13130() -> Tensor[(288), float32] {
  %132 = @func_3876() /* ty=(Tensor[(288), float32],) */;
  %132.0
}

def @func_13618() -> Tensor[(16, 11, ?), bool] {
  %133 = fn () -> Tensor[(16, 11, ?), bool] {
    @func_5247() /* ty=Tensor[(16, 11, ?), bool] */
  };
  %133() /* ty=Tensor[(16, 11, ?), bool] */
}

def @func_6964(%var_6962: Tensor[(1, 9, 2), float32]) -> Tensor[(1, 9, 2), float32] {
  @func_6961(%var_6962) /* ty=Tensor[(1, 9, 2), float32] */
}

def @func_9711() -> Tensor[(1848), float64] {
  %134 = @func_9573() /* ty=(Tensor[(12, 14, 11), float64], Tensor[(1848), int64], Tensor[(240), int32]) */;
  %135 = %134.1;
  %136 = cast(%135, dtype="float64") /* ty=Tensor[(1848), float64] */;
  erf(%136) /* ty=Tensor[(1848), float64] */
}

def @func_10239() -> Tensor[(5, 7, 6), uint64] {
  @func_6286() /* ty=Tensor[(5, 7, 6), uint64] */
}

def @func_6914() -> Tensor[(15, 15, 9), float32] {
  @func_6912() /* ty=Tensor[(15, 15, 9), float32] */
}

def @func_570(%var_567: Tensor[(8, 15, 1), int32], %var_568: Tensor[(8, 15, 2), int32], %var_569: Tensor[(1848, 1), int64]) -> (Tensor[(8, 15, 2), bool], Tensor[(12, 14, 11), bool], Tensor[(1848, 1), int64]) {
  @func_565(%var_567, %var_568, %var_569) /* ty=(Tensor[(8, 15, 2), bool], Tensor[(12, 14, 11), bool], Tensor[(1848, 1), int64]) */
}

def @func_9344() -> (Tensor[(16, 11, ?), bool], Tensor[(1, 120), float32]) {
  %137 = @func_6451() /* ty=(Tensor[(1, 120), int32],) */;
  %138 = %137.0;
  %139 = cast(%138, dtype="float32") /* ty=Tensor[(1, 120), float32] */;
  %140 = @func_4991() /* ty=Tensor[(16, 11, ?), bool] */;
  %141 = acos(%139) /* ty=Tensor[(1, 120), float32] */;
  (%140, %141)
}

def @func_7129(%var_7128: Tensor[(8, 7, 4), float32]) -> (Tensor[(8, 7, 4), int8], Tensor[(5, 7, 6), uint64]) {
  %158 = fn (%var_7076: Tensor[(8, 7, 4), float32]) -> (Tensor[(8, 7, 4), int8], Tensor[(5, 7, 6), uint64]) {
    %142 = cast(%var_7076, dtype="float32") /* ty=Tensor[(8, 7, 4), float32] */;
    %143 = log2(%142) /* ty=Tensor[(8, 7, 4), float32] */;
    %144 = cast(%var_7076, dtype="uint32") /* ty=Tensor[(8, 7, 4), uint32] */;
    %145 = shape_of(%143, dtype="int32") /* ty=Tensor[(3), int32] */;
    %146 = cast(%143, dtype="uint32") /* ty=Tensor[(8, 7, 4), uint32] */;
    %147 = dyn.reshape(%144, %145, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %148 = bitwise_and(%146, %147) /* ty=Tensor[(8, 7, 4), uint32] */;
    %149 = cast(%var_7076, dtype="float64") /* ty=Tensor[(8, 7, 4), float64] */;
    %150 = acos(%149) /* ty=Tensor[(8, 7, 4), float64] */;
    %151 = cast(%150, dtype="int8") /* ty=Tensor[(8, 7, 4), int8] */;
    %152 = shape_of(%148, dtype="int32") /* ty=Tensor[(3), int32] */;
    %153 = cast(%148, dtype="int8") /* ty=Tensor[(8, 7, 4), int8] */;
    %154 = dyn.reshape(%151, %152, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %155 = @func_3939() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) */;
    %156 = left_shift(%153, %154) /* ty=Tensor[(8, 7, 4), int8] */;
    %157 = %155.1;
    (%156, %157)
  };
  %158(%var_7128) /* ty=(Tensor[(8, 7, 4), int8], Tensor[(5, 7, 6), uint64]) */
}

def @func_4363() -> (Tensor[(1152), int64],) {
  %161 = fn () -> (Tensor[(1152), int64],) {
    %159 = @func_2575() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(15, 15, 9), float32], Tensor[(1152), int64], Tensor[(210), uint64]) */;
    %160 = %159.2;
    (%160,)
  };
  %161() /* ty=(Tensor[(1152), int64],) */
}

def @func_8110(%var_8108: Tensor[(15, 13, 5), float64], %var_8109: Tensor[(15, 13, 5), float64]) -> (Tensor[(15, 13, 5), int64], Tensor[(12, 11, 7), uint32], Tensor[(924, 1), uint32], Tensor[(15, 13, 5), float64]) {
  %183 = fn (%var_8051: Tensor[(15, 13, 5), float64], %var_8100: Tensor[(15, 13, 5), float64]) -> (Tensor[(15, 13, 5), int64], Tensor[(12, 11, 7), uint32], Tensor[(924, 1), uint32], Tensor[(15, 13, 5), float64]) {
    %162 = cast(%var_8051, dtype="float64") /* ty=Tensor[(15, 13, 5), float64] */;
    %163 = exp(%162) /* ty=Tensor[(15, 13, 5), float64] */;
    %164 = cast(%163, dtype="float64") /* ty=Tensor[(15, 13, 5), float64] */;
    %165 = acos(%164) /* ty=Tensor[(15, 13, 5), float64] */;
    %166 = cast(%165, dtype="float32") /* ty=Tensor[(15, 13, 5), float32] */;
    %167 = atan(%166) /* ty=Tensor[(15, 13, 5), float32] */;
    %168 = cast(%165, dtype="int64") /* ty=Tensor[(15, 13, 5), int64] */;
    %169 = shape_of(%167, dtype="int32") /* ty=Tensor[(3), int32] */;
    %170 = cast(%167, dtype="int64") /* ty=Tensor[(15, 13, 5), int64] */;
    %171 = dyn.reshape(%168, %169, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %172 = cast(meta[relay.Constant][6] /* ty=Tensor[(924, 1), uint32] */, dtype="uint32") /* ty=Tensor[(924, 1), uint32] */;
    %173 = cast(meta[relay.Constant][6] /* ty=Tensor[(924, 1), uint32] */, dtype="uint32") /* ty=Tensor[(924, 1), uint32] */;
    %174 = reshape(%172, newshape=[12, 11, 7]) /* ty=Tensor[(12, 11, 7), uint32] */;
    %175 = reshape(%173, newshape=[12, 11, 7]) /* ty=Tensor[(12, 11, 7), uint32] */;
    %176 = cast(%var_8100, dtype="float64") /* ty=Tensor[(15, 13, 5), float64] */;
    %177 = shape_of(%165, dtype="int32") /* ty=Tensor[(3), int32] */;
    %178 = cast(%165, dtype="float64") /* ty=Tensor[(15, 13, 5), float64] */;
    %179 = dyn.reshape(%176, %177, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %180 = right_shift(%170, %171) /* ty=Tensor[(15, 13, 5), int64] */;
    %181 = @func_8032(%174, %175) /* ty=Tensor[(12, 11, 7), uint32] */;
    %182 = floor_divide(%178, %179) /* ty=Tensor[(15, 13, 5), float64] */;
    (%180, %181, meta[relay.Constant][6] /* ty=Tensor[(924, 1), uint32] */, %182)
  };
  %183(%var_8108, %var_8109) /* ty=(Tensor[(15, 13, 5), int64], Tensor[(12, 11, 7), uint32], Tensor[(924, 1), uint32], Tensor[(15, 13, 5), float64]) */
}

def @func_9346() -> (Tensor[(16, 11, ?), bool], Tensor[(1, 120), float32]) {
  @func_9344() /* ty=(Tensor[(16, 11, ?), bool], Tensor[(1, 120), float32]) */
}

def @func_4812() -> (Tensor[(12, 14, 11), bool], Tensor[(15, 15, 9), float32], Tensor[(15, 15, 9), float32], Tensor[(12, 14, 11), uint32]) {
  %196 = fn () -> (Tensor[(12, 14, 11), bool], Tensor[(15, 15, 9), float32], Tensor[(15, 15, 9), float32], Tensor[(12, 14, 11), uint32]) {
    %184 = @func_3517() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(9, 2, 16), float32], Tensor[(288), float32]) */;
    %185 = @func_4252() /* ty=(Tensor[(15, 15, 9), float32], Tensor[(9, 12, 6), float32], Tensor[(648), float32]) */;
    %186 = @func_2575() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(15, 15, 9), float32], Tensor[(1152), int64], Tensor[(210), uint64]) */;
    %187 = %184.0;
    %188 = cast(%187, dtype="int64") /* ty=Tensor[(12, 14, 11), int64] */;
    %189 = cast(%187, dtype="int64") /* ty=Tensor[(12, 14, 11), int64] */;
    %190 = reshape(%188, newshape=[12, 14, 11]) /* ty=Tensor[(12, 14, 11), int64] */;
    %191 = reshape(%189, newshape=[12, 14, 11]) /* ty=Tensor[(12, 14, 11), int64] */;
    %192 = @func_54(%190, %191) /* ty=(Tensor[(12, 14, 11), uint32], Tensor[(12, 14, 11), bool]) */;
    %193 = %185.0;
    %194 = %186.1;
    %195 = %192.0;
    (%187, %193, %194, %195)
  };
  %196() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(15, 15, 9), float32], Tensor[(15, 15, 9), float32], Tensor[(12, 14, 11), uint32]) */
}

def @func_12102() -> Tensor[(12, 14, 11), bool] {
  @func_12100() /* ty=Tensor[(12, 14, 11), bool] */
}

def @func_12539() -> (Tensor[(12, 14, 11), bool],) {
  %199 = fn () -> (Tensor[(12, 14, 11), bool],) {
    %197 = @func_10586() /* ty=(Tensor[(11, 15, 11), int16], Tensor[(12, 14, 11), bool]) */;
    %198 = %197.1;
    (%198,)
  };
  %199() /* ty=(Tensor[(12, 14, 11), bool],) */
}

def @func_5056() -> (Tensor[(1152), int64],) {
  %202 = fn () -> (Tensor[(1152), int64],) {
    %200 = @func_4362() /* ty=(Tensor[(1152), int64],) */;
    %201 = %200.0;
    (%201,)
  };
  %202() /* ty=(Tensor[(1152), int64],) */
}

def @func_12911(%var_12910: Tensor[(1176), float32]) -> (Tensor[(288), float32], Tensor[(12, 14, 11), bool], Tensor[(6, 14, 14), float32], Tensor[(1176), float32]) {
  %211 = fn (%var_12900: Tensor[(1176), float32]) -> (Tensor[(288), float32], Tensor[(12, 14, 11), bool], Tensor[(6, 14, 14), float32], Tensor[(1176), float32]) {
    %203 = @func_3876() /* ty=(Tensor[(288), float32],) */;
    %204 = @func_2219() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), bool]) */;
    %205 = cast(%var_12900, dtype="float32") /* ty=Tensor[(1176), float32] */;
    %206 = reshape(%205, newshape=[6, 14, 14]) /* ty=Tensor[(6, 14, 14), float32] */;
    %207 = @func_9623(%206) /* ty=(Tensor[(6, 14, 14), float32],) */;
    %208 = %203.0;
    %209 = %204.1;
    %210 = %207.0;
    (%208, %209, %210, %var_12900)
  };
  %211(%var_12910) /* ty=(Tensor[(288), float32], Tensor[(12, 14, 11), bool], Tensor[(6, 14, 14), float32], Tensor[(1176), float32]) */
}

def @func_13551() -> (Tensor[(288), float32], Tensor[(1152), int64], Tensor[(5, 7, 6), uint64]) {
  %217 = fn () -> (Tensor[(288), float32], Tensor[(1152), int64], Tensor[(5, 7, 6), uint64]) {
    %212 = @func_4362() /* ty=(Tensor[(1152), int64],) */;
    %213 = @func_10659() /* ty=(Tensor[(9, 2, 16), float32], Tensor[(5, 7, 6), uint64]) */;
    %214 = @func_6991() /* ty=Tensor[(288), float32] */;
    %215 = %212.0;
    %216 = %213.1;
    (%214, %215, %216)
  };
  %217() /* ty=(Tensor[(288), float32], Tensor[(1152), int64], Tensor[(5, 7, 6), uint64]) */
}

def @func_14553() -> Tensor[(12, 14, 11), bool] {
  %218 = @func_10549() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), bool], Tensor[(1, 120), float32]) */;
  %218.0
}

def @func_14948() -> (Tensor[(12, 14, 11), float32],) {
  %222 = fn () -> (Tensor[(12, 14, 11), float32],) {
    %219 = @func_12337() /* ty=Tensor[(12, 14, 11), bool] */;
    %220 = cast(%219, dtype="float32") /* ty=Tensor[(12, 14, 11), float32] */;
    %221 = log10(%220) /* ty=Tensor[(12, 14, 11), float32] */;
    (%221,)
  };
  %222() /* ty=(Tensor[(12, 14, 11), float32],) */
}

def @func_11476() -> (Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), float64], Tensor[(648), float32]) {
  %223 = @func_7640() /* ty=(Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64], Tensor[(15, 15, 9), float32], Tensor[(12, 14, 11), bool]) */;
  %224 = cast(meta[relay.Constant][7] /* ty=Tensor[(648), float32] */, dtype="float32") /* ty=Tensor[(648), float32] */;
  %225 = reshape(%224, newshape=[648]) /* ty=Tensor[(648), float32] */;
  %226 = @func_7423(%225) /* ty=(Tensor[(8, 12, 3), bool], Tensor[(288), float32], Tensor[(1848), int64], Tensor[(202752), int16], Tensor[(9, 12, 6), float32], Tensor[(648), float32], Tensor[(202752), float32], Tensor[(5, 7, 6), float64], Tensor[(210), uint64]) */;
  %227 = %223.2;
  %228 = %226.7;
  (%227, %228, meta[relay.Constant][7] /* ty=Tensor[(648), float32] */)
}

def @func_6728() -> Tensor[(15, 15, 9), float32] {
  %229 = @func_2398() /* ty=(Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64]) */;
  %229.0
}

def @func_4993() -> Tensor[(16, 11, ?), bool] {
  @func_4991() /* ty=Tensor[(16, 11, ?), bool] */
}

def @func_4698() -> Tensor[(15, 15, 9), float32] {
  %231 = fn () -> Tensor[(15, 15, 9), float32] {
    %230 = @func_2575() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(15, 15, 9), float32], Tensor[(1152), int64], Tensor[(210), uint64]) */;
    %230.1
  };
  %231() /* ty=Tensor[(15, 15, 9), float32] */
}

def @func_10427(%var_10412: Tensor[(176), float32]) -> (Tensor[(5, 7, 6), uint64], Tensor[(176), float32], Tensor[(288), float32], Tensor[(176), float32], Tensor[(5, 7, 6), uint64]) {
  %232 = @func_5905() /* ty=(Tensor[(5, 7, 6), uint64],) */;
  %233 = cast(meta[relay.Constant][8] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
  %234 = cast(%var_10412, dtype="float32") /* ty=Tensor[(176), float32] */;
  %235 = reshape(%233, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %236 = reshape(%234, newshape=[176]) /* ty=Tensor[(176), float32] */;
  %237 = @func_4050(%235, %236) /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64], Tensor[(288), float32], Tensor[(288), float32], Tensor[(176), float32]) */;
  %238 = @func_2930() /* ty=(Tensor[(5, 7, 6), uint64],) */;
  %239 = %232.0;
  %240 = %237.4;
  %241 = %238.0;
  (%239, %240, meta[relay.Constant][8] /* ty=Tensor[(288), float32] */, %var_10412, %241)
}

def @func_15083() -> (Tensor[(210), uint64],) {
  %244 = fn () -> (Tensor[(210), uint64],) {
    %242 = @func_7690() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(210), uint64], Tensor[(12, 14, 11), float32]) */;
    %243 = %242.1;
    (%243,)
  };
  %244() /* ty=(Tensor[(210), uint64],) */
}

def @func_1841(%var_1839: Tensor[(5, 7, 6), uint64], %var_1840: Tensor[(5, 7, 6), uint64]) -> Tensor[(5, 7, 6), uint64] {
  %249 = fn (%var_1829: Tensor[(5, 7, 6), uint64], %var_1830: Tensor[(5, 7, 6), uint64]) -> Tensor[(5, 7, 6), uint64] {
    %245 = cast(%var_1830, dtype="uint64") /* ty=Tensor[(5, 7, 6), uint64] */;
    %246 = shape_of(%var_1829, dtype="int32") /* ty=Tensor[(3), int32] */;
    %247 = cast(%var_1829, dtype="uint64") /* ty=Tensor[(5, 7, 6), uint64] */;
    %248 = dyn.reshape(%245, %246, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    right_shift(%247, %248) /* ty=Tensor[(5, 7, 6), uint64] */
  };
  %249(%var_1839, %var_1840) /* ty=Tensor[(5, 7, 6), uint64] */
}

def @func_14862() -> Tensor[(12, 14, 11), bool] {
  @func_14860() /* ty=Tensor[(12, 14, 11), bool] */
}

def @func_8237() -> (Tensor[(5, 7, 6), uint64],) {
  %252 = fn () -> (Tensor[(5, 7, 6), uint64],) {
    %250 = @func_2630() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) */;
    %251 = %250.0;
    (%251,)
  };
  %252() /* ty=(Tensor[(5, 7, 6), uint64],) */
}

def @func_4252() -> (Tensor[(15, 15, 9), float32], Tensor[(9, 12, 6), float32], Tensor[(648), float32]) {
  %253 = @func_2398() /* ty=(Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64]) */;
  %254 = cast(meta[relay.Constant][9] /* ty=Tensor[(648), float32] */, dtype="float32") /* ty=Tensor[(648), float32] */;
  %255 = reshape(%254, newshape=[9, 12, 6]) /* ty=Tensor[(9, 12, 6), float32] */;
  %256 = @func_3786(%255) /* ty=(Tensor[(9, 12, 6), float32],) */;
  %257 = %253.0;
  %258 = %256.0;
  (%257, %258, meta[relay.Constant][9] /* ty=Tensor[(648), float32] */)
}

def @func_8589() -> (Tensor[(12, 14, 11), bool],) {
  %259 = @func_3226() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64]) */;
  %260 = %259.0;
  (%260,)
}

def @func_11240() -> Tensor[(15, 15, 9), float32] {
  %261 = fn () -> Tensor[(15, 15, 9), float32] {
    @func_8211() /* ty=Tensor[(15, 15, 9), float32] */
  };
  %261() /* ty=Tensor[(15, 15, 9), float32] */
}

def @func_4850() -> Tensor[(5, 7, 6), uint64] {
  %262 = @func_2630() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) */;
  %262.0
}

def @func_13346(%var_13344: Tensor[(24, 10), int32]) -> (Tensor[(5, 7, 6), bool], Tensor[(240), int32], Tensor[(24, 10), int32], Tensor[(1152), int64]) {
  @func_13343(%var_13344) /* ty=(Tensor[(5, 7, 6), bool], Tensor[(240), int32], Tensor[(24, 10), int32], Tensor[(1152), int64]) */
}

def @func_5329() -> (Tensor[(5, 7, 6), uint64], Tensor[(15, 15, 9), float32]) {
  %263 = @func_3838() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) */;
  %264 = %263.0;
  %265 = @func_4697() /* ty=Tensor[(15, 15, 9), float32] */;
  (%264, %265)
}

def @func_9441() -> (Tensor[(1, 120), int32],) {
  @func_9439() /* ty=(Tensor[(1, 120), int32],) */
}

def @func_5774() -> (Tensor[(5, 7, 6), uint64],) {
  %268 = fn () -> (Tensor[(5, 7, 6), uint64],) {
    %266 = @func_3587() /* ty=(Tensor[(5, 7, 6), uint64],) */;
    %267 = %266.0;
    (%267,)
  };
  %268() /* ty=(Tensor[(5, 7, 6), uint64],) */
}

def @func_8774() -> (Tensor[(5, 7, 6), bool],) {
  %269 = @func_3607() /* ty=(Tensor[(5, 7, 6), bool],) */;
  %270 = %269.0;
  (%270,)
}

def @func_9318() -> (Tensor[(5, 7, 6), bool], Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), int16], Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64], Tensor[(16, 11, ?), float32]) {
  %271 = @func_3950() /* ty=(Tensor[(5, 7, 6), bool],) */;
  %272 = @func_9003() /* ty=(Tensor[(12, 14, 11), int16], Tensor[(15, 15, 9), float64]) */;
  %273 = @func_8236() /* ty=(Tensor[(5, 7, 6), uint64],) */;
  %274 = @func_5247() /* ty=Tensor[(16, 11, ?), bool] */;
  %275 = cast(%274, dtype="float32") /* ty=Tensor[(16, 11, ?), float32] */;
  %276 = asin(%275) /* ty=Tensor[(16, 11, ?), float32] */;
  %277 = cast(%274, dtype="float32") /* ty=Tensor[(16, 11, ?), float32] */;
  %278 = shape_of(%276, dtype="int32") /* ty=Tensor[(3), int32] */;
  %279 = cast(%276, dtype="float32") /* ty=Tensor[(16, 11, ?), float32] */;
  %280 = dyn.reshape(%277, %278, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %281 = %271.0;
  %282 = @func_2290() /* ty=Tensor[(5, 7, 6), uint64] */;
  %283 = %272.0;
  %284 = @func_5962() /* ty=Tensor[(12, 14, 11), bool] */;
  %285 = @func_3417() /* ty=Tensor[(12, 14, 11), bool] */;
  %286 = %273.0;
  %287 = power(%279, %280) /* ty=Tensor[(16, 11, ?), float32] */;
  (%281, %282, %283, %284, %285, %286, %287)
}

def @func_12641() -> (Tensor[(12, 14, 11), bool],) {
  %290 = fn () -> (Tensor[(12, 14, 11), bool],) {
    %288 = @func_7550() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64]) */;
    %289 = %288.0;
    (%289,)
  };
  %290() /* ty=(Tensor[(12, 14, 11), bool],) */
}

def @func_14511() -> (Tensor[(12, 14, 11), int16], Tensor[(12, 14, 11), bool]) {
  %294 = fn () -> (Tensor[(12, 14, 11), int16], Tensor[(12, 14, 11), bool]) {
    %291 = @func_7640() /* ty=(Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64], Tensor[(15, 15, 9), float32], Tensor[(12, 14, 11), bool]) */;
    %292 = @func_11013() /* ty=Tensor[(12, 14, 11), int16] */;
    %293 = %291.3;
    (%292, %293)
  };
  %294() /* ty=(Tensor[(12, 14, 11), int16], Tensor[(12, 14, 11), bool]) */
}

def @func_13883() -> (Tensor[(1, 120), int32], Tensor[(12, 14, 11), bool]) {
  %295 = @func_9439() /* ty=(Tensor[(1, 120), int32],) */;
  %296 = @func_12640() /* ty=(Tensor[(12, 14, 11), bool],) */;
  %297 = %295.0;
  %298 = %296.0;
  (%297, %298)
}

def @func_9495(%var_9494: Tensor[(648), float32]) -> (Tensor[(12, 14, 11), bool], Tensor[(202752), float32], Tensor[(648), float32]) {
  %305 = fn (%var_9491: Tensor[(648), float32]) -> (Tensor[(12, 14, 11), bool], Tensor[(202752), float32], Tensor[(648), float32]) {
    %299 = @func_7343() /* ty=(Tensor[(12, 14, 11), bool],) */;
    %300 = cast(%var_9491, dtype="float32") /* ty=Tensor[(648), float32] */;
    %301 = reshape(%300, newshape=[648]) /* ty=Tensor[(648), float32] */;
    %302 = @func_7423(%301) /* ty=(Tensor[(8, 12, 3), bool], Tensor[(288), float32], Tensor[(1848), int64], Tensor[(202752), int16], Tensor[(9, 12, 6), float32], Tensor[(648), float32], Tensor[(202752), float32], Tensor[(5, 7, 6), float64], Tensor[(210), uint64]) */;
    %303 = %299.0;
    %304 = %302.6;
    (%303, %304, %var_9491)
  };
  %305(%var_9494) /* ty=(Tensor[(12, 14, 11), bool], Tensor[(202752), float32], Tensor[(648), float32]) */
}

def @func_8354() -> (Tensor[(5, 7, 6), uint64],) {
  @func_8352() /* ty=(Tensor[(5, 7, 6), uint64],) */
}

def @func_4831() -> (Tensor[(12, 14, 11), bool],) {
  @func_4829() /* ty=(Tensor[(12, 14, 11), bool],) */
}

def @func_14355(%var_14353: Tensor[(7, 9, 5), float64], %var_14354: Tensor[(7, 9, 5), float64]) -> (Tensor[(7, 9, 5), float64],) {
  %311 = fn (%var_14344: Tensor[(7, 9, 5), float64], %var_14345: Tensor[(7, 9, 5), float64]) -> (Tensor[(7, 9, 5), float64],) {
    %306 = cast(%var_14345, dtype="float64") /* ty=Tensor[(7, 9, 5), float64] */;
    %307 = shape_of(%var_14344, dtype="int32") /* ty=Tensor[(3), int32] */;
    %308 = cast(%var_14344, dtype="float64") /* ty=Tensor[(7, 9, 5), float64] */;
    %309 = dyn.reshape(%306, %307, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %310 = mod(%308, %309) /* ty=Tensor[(7, 9, 5), float64] */;
    (%310,)
  };
  %311(%var_14353, %var_14354) /* ty=(Tensor[(7, 9, 5), float64],) */
}

def @func_4174(%var_4155: Tensor[(1848), int64], %var_4167: Tensor[(288), float32], %var_4168: Tensor[(176), float32]) -> (Tensor[(210), uint64], Tensor[(5, 7, 6), uint64], Tensor[(120), int32], Tensor[(240), int32], Tensor[(1848), int64], Tensor[(12, 14, 11), float32], Tensor[(288), float32], Tensor[(288), float32], Tensor[(176), float32]) {
  %312 = @func_2768() /* ty=(Tensor[(5, 7, 6), float64], Tensor[(210), uint64], Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) */;
  %313 = @func_3868() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64], Tensor[(16, 11, ?), bool]) */;
  %314 = cast(meta[relay.Constant][10] /* ty=Tensor[(120), int32] */, dtype="int32") /* ty=Tensor[(120), int32] */;
  %315 = cast(meta[relay.Constant][11] /* ty=Tensor[(240), int32] */, dtype="int32") /* ty=Tensor[(240), int32] */;
  %316 = cast(%var_4155, dtype="int64") /* ty=Tensor[(1848), int64] */;
  %317 = reshape(%314, newshape=[8, 15, 1]) /* ty=Tensor[(8, 15, 1), int32] */;
  %318 = reshape(%315, newshape=[8, 15, 2]) /* ty=Tensor[(8, 15, 2), int32] */;
  %319 = reshape(%316, newshape=[1848, 1]) /* ty=Tensor[(1848, 1), int64] */;
  %320 = @func_565(%317, %318, %319) /* ty=(Tensor[(8, 15, 2), bool], Tensor[(12, 14, 11), bool], Tensor[(1848, 1), int64]) */;
  %321 = %320.1;
  %322 = cast(%321, dtype="float32") /* ty=Tensor[(12, 14, 11), float32] */;
  %323 = cast(%var_4167, dtype="float32") /* ty=Tensor[(288), float32] */;
  %324 = cast(%var_4168, dtype="float32") /* ty=Tensor[(176), float32] */;
  %325 = reshape(%323, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %326 = reshape(%324, newshape=[176]) /* ty=Tensor[(176), float32] */;
  %327 = @func_2147(%325, %326) /* ty=(Tensor[(2, 924), int64], Tensor[(9, 2, 16), float32], Tensor[(288), float32], Tensor[(16, 11, 1), float32], Tensor[(176), float32], Tensor[(16, 11, 1), float32]) */;
  %328 = %312.1;
  %329 = %313.1;
  %330 = asin(%322) /* ty=Tensor[(12, 14, 11), float32] */;
  %331 = %327.2;
  (%328, %329, meta[relay.Constant][10] /* ty=Tensor[(120), int32] */, meta[relay.Constant][11] /* ty=Tensor[(240), int32] */, %var_4155, %330, %331, %var_4167, %var_4168)
}

def @func_14850() -> (Tensor[(12, 14, 11), bool],) {
  %332 = @func_7343() /* ty=(Tensor[(12, 14, 11), bool],) */;
  %333 = %332.0;
  (%333,)
}

def @func_10147(%var_10144: Tensor[(975), float64], %var_10145: Tensor[(924, 2), int64], %var_10146: Tensor[(924, 2), int64]) -> (Tensor[(288), float32], Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64], Tensor[(924, 2), int32], Tensor[(924, 2), bool], Tensor[(975), float32], Tensor[(2, 924), int64]) {
  %360 = fn (%var_10057: Tensor[(975), float64], %var_10069: Tensor[(924, 2), int64], %var_10077: Tensor[(924, 2), int64]) -> (Tensor[(288), float32], Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64], Tensor[(924, 2), int32], Tensor[(924, 2), bool], Tensor[(975), float32], Tensor[(2, 924), int64]) {
    %334 = @func_3517() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(9, 2, 16), float32], Tensor[(288), float32]) */;
    %335 = cast(%var_10057, dtype="float64") /* ty=Tensor[(975), float64] */;
    %336 = reshape(%335, newshape=[975]) /* ty=Tensor[(975), float64] */;
    %337 = @func_8752(%336) /* ty=(Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64], Tensor[(16, 11, 975), bool]) */;
    %338 = cast(%var_10069, dtype="int64") /* ty=Tensor[(924, 2), int64] */;
    %339 = reshape(%338, newshape=[84, 22]) /* ty=Tensor[(84, 22), int64] */;
    %340 = @func_6199(%339) /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), float64], Tensor[(12, 14, 11), bool], Tensor[(84, 22), int64], Tensor[(5, 7, 6), uint64]) */;
    %341 = cast(%var_10077, dtype="int32") /* ty=Tensor[(924, 2), int32] */;
    %342 = shape_of(%var_10069, dtype="int32") /* ty=Tensor[(2), int32] */;
    %343 = cast(%var_10069, dtype="int32") /* ty=Tensor[(924, 2), int32] */;
    %344 = dyn.reshape(%341, %342, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
    %345 = cast(%var_10069, dtype="bool") /* ty=Tensor[(924, 2), bool] */;
    %346 = shape_of(%var_10077, dtype="int32") /* ty=Tensor[(2), int32] */;
    %347 = cast(%var_10077, dtype="bool") /* ty=Tensor[(924, 2), bool] */;
    %348 = dyn.reshape(%345, %346, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %349 = cast(%var_10057, dtype="float32") /* ty=Tensor[(975), float32] */;
    %350 = acos(%349) /* ty=Tensor[(975), float32] */;
    %351 = cast(%350, dtype="float32") /* ty=Tensor[(975), float32] */;
    %352 = @func_7314() /* ty=(Tensor[(2, 924), int64],) */;
    %353 = %334.2;
    %354 = %337.1;
    %355 = %340.0;
    %356 = logical_xor(%343, %344) /* ty=Tensor[(924, 2), int32] */;
    %357 = not_equal(%347, %348) /* ty=Tensor[(924, 2), bool] */;
    %358 = acosh(%351) /* ty=Tensor[(975), float32] */;
    %359 = %352.0;
    (%353, %354, %355, %356, %357, %358, %359)
  };
  %360(%var_10144, %var_10145, %var_10146) /* ty=(Tensor[(288), float32], Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64], Tensor[(924, 2), int32], Tensor[(924, 2), bool], Tensor[(975), float32], Tensor[(2, 924), int64]) */
}

def @func_4944() -> (Tensor[(12, 14, 11), int16], Tensor[(5, 7, 6), uint64], Tensor[(9, 12, 6), float32], Tensor[(648), float32], Tensor[(12, 14, 11), bool]) {
  %371 = fn () -> (Tensor[(12, 14, 11), int16], Tensor[(5, 7, 6), uint64], Tensor[(9, 12, 6), float32], Tensor[(648), float32], Tensor[(12, 14, 11), bool]) {
    %361 = @func_4440() /* ty=(Tensor[(5, 7, 6), bool], Tensor[(12, 14, 11), int16]) */;
    %362 = @func_3868() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64], Tensor[(16, 11, ?), bool]) */;
    %363 = cast(meta[relay.Constant][12] /* ty=Tensor[(648), float32] */, dtype="float32") /* ty=Tensor[(648), float32] */;
    %364 = reshape(%363, newshape=[9, 12, 6]) /* ty=Tensor[(9, 12, 6), float32] */;
    %365 = @func_3786(%364) /* ty=(Tensor[(9, 12, 6), float32],) */;
    %366 = @func_2087() /* ty=(Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64], Tensor[(210), uint64], Tensor[(12, 14, 11), bool], Tensor[(2, 924), int64], Tensor[(12, 14, 11), bool]) */;
    %367 = %361.1;
    %368 = %362.1;
    %369 = %365.0;
    %370 = %366.3;
    (%367, %368, %369, meta[relay.Constant][12] /* ty=Tensor[(648), float32] */, %370)
  };
  %371() /* ty=(Tensor[(12, 14, 11), int16], Tensor[(5, 7, 6), uint64], Tensor[(9, 12, 6), float32], Tensor[(648), float32], Tensor[(12, 14, 11), bool]) */
}

def @func_5905() -> (Tensor[(5, 7, 6), uint64],) {
  %372 = @func_2630() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) */;
  %373 = %372.0;
  (%373,)
}

def @func_6392() -> (Tensor[(5, 7, 6), uint64],) {
  %376 = fn () -> (Tensor[(5, 7, 6), uint64],) {
    %374 = @func_5606() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) */;
    %375 = %374.0;
    (%375,)
  };
  %376() /* ty=(Tensor[(5, 7, 6), uint64],) */
}

def @func_11444() -> (Tensor[(5, 7, 6), uint64],) {
  %377 = @func_3587() /* ty=(Tensor[(5, 7, 6), uint64],) */;
  %378 = %377.0;
  (%378,)
}

def @func_4641() -> (Tensor[(12, 14, 11), float32],) {
  %383 = fn () -> (Tensor[(12, 14, 11), float32],) {
    %379 = @func_4619() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), bool]) */;
    %380 = %379.0;
    %381 = cast(%380, dtype="float32") /* ty=Tensor[(12, 14, 11), float32] */;
    %382 = cos(%381) /* ty=Tensor[(12, 14, 11), float32] */;
    (%382,)
  };
  %383() /* ty=(Tensor[(12, 14, 11), float32],) */
}

def @func_12266() -> Tensor[(16, 11, ?), bool] {
  %384 = fn () -> Tensor[(16, 11, ?), bool] {
    @func_5247() /* ty=Tensor[(16, 11, ?), bool] */
  };
  %384() /* ty=Tensor[(16, 11, ?), bool] */
}

def @func_13766() -> (Tensor[(16, 11, ?), float32], Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), bool]) {
  %391 = fn () -> (Tensor[(16, 11, ?), float32], Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), bool]) {
    %385 = @func_9318() /* ty=(Tensor[(5, 7, 6), bool], Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), int16], Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64], Tensor[(16, 11, ?), float32]) */;
    %386 = @func_11254() /* ty=(Tensor[(5, 7, 6), uint64],) */;
    %387 = @func_4811() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(15, 15, 9), float32], Tensor[(15, 15, 9), float32], Tensor[(12, 14, 11), uint32]) */;
    %388 = %385.6;
    %389 = %386.0;
    %390 = %387.0;
    (%388, %389, %390)
  };
  %391() /* ty=(Tensor[(16, 11, ?), float32], Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), bool]) */
}

def @func_6365(%var_6346: Tensor[(13, 11, 5), float32]) -> Tensor[(13, 11, 5), float32] {
  %392 = cast(%var_6346, dtype="float32") /* ty=Tensor[(13, 11, 5), float32] */;
  log10(%392) /* ty=Tensor[(13, 11, 5), float32] */
}

def @func_11749(%var_11692: Tensor[(112), float64], %var_11710: Tensor[(224), float32]) -> (Tensor[(15, 15, 9), float32], Tensor[(8, 2, 7), float64], Tensor[(112), float64], Tensor[(12, 14, 11), float32], Tensor[(224), float32], Tensor[(12, 14, 11), bool]) {
  %393 = cast(%var_11692, dtype="float64") /* ty=Tensor[(112), float64] */;
  %394 = reshape(%393, newshape=[8, 2, 7]) /* ty=Tensor[(8, 2, 7), float64] */;
  %395 = cast(%var_11710, dtype="float32") /* ty=Tensor[(224), float32] */;
  %396 = reshape(%395, newshape=[224]) /* ty=Tensor[(224), float32] */;
  %397 = @func_8180(%396) /* ty=(Tensor[(15, 15, 9), float32], Tensor[(12, 14, 11), float32], Tensor[(8, 7, 4), int8], Tensor[(224), float32]) */;
  %398 = @func_6912() /* ty=Tensor[(15, 15, 9), float32] */;
  %399 = @func_6077(%394) /* ty=Tensor[(8, 2, 7), float64] */;
  %400 = %397.1;
  %401 = @func_2415() /* ty=Tensor[(12, 14, 11), bool] */;
  (%398, %399, %var_11692, %400, %var_11710, %401)
}

def @func_10483() -> (Tensor[(5, 7, 6), bool],) {
  @func_10481() /* ty=(Tensor[(5, 7, 6), bool],) */
}

def @func_7715() -> (Tensor[(5, 7, 6), uint64],) {
  %404 = fn () -> (Tensor[(5, 7, 6), uint64],) {
    %402 = @func_3587() /* ty=(Tensor[(5, 7, 6), uint64],) */;
    %403 = %402.0;
    (%403,)
  };
  %404() /* ty=(Tensor[(5, 7, 6), uint64],) */
}

def @func_3227() -> (Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64]) {
  %409 = fn () -> (Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64]) {
    %405 = @func_2219() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), bool]) */;
    %406 = @func_2930() /* ty=(Tensor[(5, 7, 6), uint64],) */;
    %407 = %405.1;
    %408 = %406.0;
    (%407, %408)
  };
  %409() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64]) */
}

def @func_8591() -> (Tensor[(12, 14, 11), bool],) {
  @func_8589() /* ty=(Tensor[(12, 14, 11), bool],) */
}

def @func_9389() -> Tensor[(16, 11, ?), bool] {
  %410 = fn () -> Tensor[(16, 11, ?), bool] {
    @func_5247() /* ty=Tensor[(16, 11, ?), bool] */
  };
  %410() /* ty=Tensor[(16, 11, ?), bool] */
}

def @func_6137() -> Tensor[(5, 7, 6), uint64] {
  @func_6135() /* ty=Tensor[(5, 7, 6), uint64] */
}

def @func_8183(%var_8181: Tensor[(224), float32]) -> (Tensor[(15, 15, 9), float32], Tensor[(12, 14, 11), float32], Tensor[(8, 7, 4), int8], Tensor[(224), float32]) {
  @func_8180(%var_8181) /* ty=(Tensor[(15, 15, 9), float32], Tensor[(12, 14, 11), float32], Tensor[(8, 7, 4), int8], Tensor[(224), float32]) */
}

def @func_12291(%var_12289: Tensor[(9, 11, 6), float32], %var_12290: Tensor[(9, 11, 6), float32]) -> Tensor[(9, 11, 6), bool] {
  %415 = fn (%var_12282: Tensor[(9, 11, 6), float32], %var_12283: Tensor[(9, 11, 6), float32]) -> Tensor[(9, 11, 6), bool] {
    %411 = cast(%var_12283, dtype="bool") /* ty=Tensor[(9, 11, 6), bool] */;
    %412 = shape_of(%var_12282, dtype="int32") /* ty=Tensor[(3), int32] */;
    %413 = cast(%var_12282, dtype="bool") /* ty=Tensor[(9, 11, 6), bool] */;
    %414 = dyn.reshape(%411, %412, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    equal(%413, %414) /* ty=Tensor[(9, 11, 6), bool] */
  };
  %415(%var_12289, %var_12290) /* ty=Tensor[(9, 11, 6), bool] */
}

def @func_13132() -> Tensor[(288), float32] {
  @func_13130() /* ty=Tensor[(288), float32] */
}

def @func_12339() -> Tensor[(12, 14, 11), bool] {
  @func_12337() /* ty=Tensor[(12, 14, 11), bool] */
}

def @func_13466() -> (Tensor[(16, 10, 16), float64], Tensor[(5, 120), float32]) {
  %420 = fn () -> (Tensor[(16, 10, 16), float64], Tensor[(5, 120), float32]) {
    %416 = cast(meta[relay.Constant][13] /* ty=Tensor[(16, 10, 16), float64] */, dtype="float64") /* ty=Tensor[(16, 10, 16), float64] */;
    %417 = @func_11063() /* ty=(Tensor[(5, 120), float32],) */;
    %418 = erf(%416) /* ty=Tensor[(16, 10, 16), float64] */;
    %419 = %417.0;
    (%418, %419)
  };
  %420() /* ty=(Tensor[(16, 10, 16), float64], Tensor[(5, 120), float32]) */
}

def @func_7541() -> (Tensor[(210), uint64], Tensor[(5, 7, 6), bool], Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), int32], Tensor[(176), float32]) {
  %421 = @func_2768() /* ty=(Tensor[(5, 7, 6), float64], Tensor[(210), uint64], Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) */;
  %422 = @func_3607() /* ty=(Tensor[(5, 7, 6), bool],) */;
  %423 = @func_2415() /* ty=Tensor[(12, 14, 11), bool] */;
  %424 = cast(%423, dtype="bool") /* ty=Tensor[(12, 14, 11), bool] */;
  %425 = cast(meta[relay.Constant][14] /* ty=Tensor[(176), float32] */, dtype="float32") /* ty=Tensor[(176), float32] */;
  %426 = reshape(%424, newshape=[12, 14, 11]) /* ty=Tensor[(12, 14, 11), bool] */;
  %427 = reshape(%425, newshape=[176]) /* ty=Tensor[(176), float32] */;
  %428 = @func_5501(%426, %427) /* ty=(Tensor[(12, 14, 11), int32], Tensor[(12, 14, 11), float64], Tensor[(12, 14, 11), bool], Tensor[(16, 11, 1), float32], Tensor[(176), float32]) */;
  %429 = %421.1;
  %430 = %422.0;
  %431 = %428.0;
  (%429, %430, %423, %431, meta[relay.Constant][14] /* ty=Tensor[(176), float32] */)
}

def @func_13966() -> (Tensor[(288), float32],) {
  %432 = @func_6991() /* ty=Tensor[(288), float32] */;
  (%432,)
}

def @func_8117() -> (Tensor[(1, 120), int32],) {
  %435 = fn () -> (Tensor[(1, 120), int32],) {
    %433 = @func_6451() /* ty=(Tensor[(1, 120), int32],) */;
    %434 = %433.0;
    (%434,)
  };
  %435() /* ty=(Tensor[(1, 120), int32],) */
}

def @func_11142() -> (Tensor[(15, 15, 9), float32],) {
  %436 = @func_6912() /* ty=Tensor[(15, 15, 9), float32] */;
  (%436,)
}

def @func_3788(%var_3787: Tensor[(9, 12, 6), float32]) -> (Tensor[(9, 12, 6), float32],) {
  %442 = fn (%var_3775: Tensor[(9, 12, 6), float32]) -> (Tensor[(9, 12, 6), float32],) {
    %437 = cast(meta[relay.Constant][15] /* ty=Tensor[(9, 12, 6), float32] */, dtype="float32") /* ty=Tensor[(9, 12, 6), float32] */;
    %438 = shape_of(%var_3775, dtype="int32") /* ty=Tensor[(3), int32] */;
    %439 = cast(%var_3775, dtype="float32") /* ty=Tensor[(9, 12, 6), float32] */;
    %440 = dyn.reshape(%437, %438, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %441 = floor_mod(%439, %440) /* ty=Tensor[(9, 12, 6), float32] */;
    (%441,)
  };
  %442(%var_3787) /* ty=(Tensor[(9, 12, 6), float32],) */
}

def @func_5359() -> (Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) {
  %443 = @func_3838() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) */;
  %444 = @func_5197() /* ty=Tensor[(5, 7, 6), uint64] */;
  %445 = %443.0;
  (%444, %445)
}

def @func_2577() -> (Tensor[(12, 14, 11), bool], Tensor[(15, 15, 9), float32], Tensor[(1152), int64], Tensor[(210), uint64]) {
  @func_2575() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(15, 15, 9), float32], Tensor[(1152), int64], Tensor[(210), uint64]) */
}

def @func_57(%var_55: Tensor[(12, 14, 11), int64], %var_56: Tensor[(12, 14, 11), int64]) -> (Tensor[(12, 14, 11), uint32], Tensor[(12, 14, 11), bool]) {
  %461 = fn (%var_23: Tensor[(12, 14, 11), int64], %var_45: Tensor[(12, 14, 11), int64]) -> (Tensor[(12, 14, 11), uint32], Tensor[(12, 14, 11), bool]) {
    %446 = cast(%var_23, dtype="int64") /* ty=Tensor[(12, 14, 11), int64] */;
    %447 = shape_of(meta[relay.Constant][16] /* ty=Tensor[(12, 14, 11), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %448 = cast(meta[relay.Constant][16] /* ty=Tensor[(12, 14, 11), int64] */, dtype="int64") /* ty=Tensor[(12, 14, 11), int64] */;
    %449 = dyn.reshape(%446, %447, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %450 = bitwise_and(%448, %449) /* ty=Tensor[(12, 14, 11), int64] */;
    %451 = cast(meta[relay.Constant][16] /* ty=Tensor[(12, 14, 11), int64] */, dtype="uint32") /* ty=Tensor[(12, 14, 11), uint32] */;
    %452 = shape_of(%450, dtype="int32") /* ty=Tensor[(3), int32] */;
    %453 = cast(%450, dtype="uint32") /* ty=Tensor[(12, 14, 11), uint32] */;
    %454 = dyn.reshape(%451, %452, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %455 = cast(%var_45, dtype="bool") /* ty=Tensor[(12, 14, 11), bool] */;
    %456 = shape_of(%450, dtype="int32") /* ty=Tensor[(3), int32] */;
    %457 = cast(%450, dtype="bool") /* ty=Tensor[(12, 14, 11), bool] */;
    %458 = dyn.reshape(%455, %456, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %459 = right_shift(%453, %454) /* ty=Tensor[(12, 14, 11), uint32] */;
    %460 = less(%457, %458) /* ty=Tensor[(12, 14, 11), bool] */;
    (%459, %460)
  };
  %461(%var_55, %var_56) /* ty=(Tensor[(12, 14, 11), uint32], Tensor[(12, 14, 11), bool]) */
}

def @func_11769() -> Tensor[(648), float32] {
  %463 = fn () -> Tensor[(648), float32] {
    %462 = @func_6446() /* ty=(Tensor[(648), float32], Tensor[(12, 14, 11), int16], Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), bool]) */;
    %462.0
  };
  %463() /* ty=Tensor[(648), float32] */
}

def @func_5907() -> (Tensor[(5, 7, 6), uint64],) {
  @func_5905() /* ty=(Tensor[(5, 7, 6), uint64],) */
}

def @func_12161() -> Tensor[(16, 11, ?), bool] {
  %464 = fn () -> Tensor[(16, 11, ?), bool] {
    @func_4991() /* ty=Tensor[(16, 11, ?), bool] */
  };
  %464() /* ty=Tensor[(16, 11, ?), bool] */
}

def @func_2400() -> (Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64]) {
  @func_2398() /* ty=(Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64]) */
}

def @func_14404() -> Tensor[(12, 14, 11), bool] {
  %465 = @func_9318() /* ty=(Tensor[(5, 7, 6), bool], Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), int16], Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64], Tensor[(16, 11, ?), float32]) */;
  %465.3
}

def @func_10481() -> (Tensor[(5, 7, 6), bool],) {
  %466 = @func_7355() /* ty=(Tensor[(5, 7, 6), bool],) */;
  %467 = %466.0;
  (%467,)
}

def @func_14335() -> (Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64]) {
  %471 = fn () -> (Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64]) {
    %468 = @func_3939() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) */;
    %469 = @func_7979() /* ty=Tensor[(12, 14, 11), bool] */;
    %470 = %468.0;
    (%469, %470)
  };
  %471() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64]) */
}

def @func_2631() -> (Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) {
  %479 = fn () -> (Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) {
    %472 = @func_2398() /* ty=(Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64]) */;
    %473 = %472.1;
    %474 = cast(%473, dtype="uint64") /* ty=Tensor[(5, 7, 6), uint64] */;
    %475 = cast(%473, dtype="uint64") /* ty=Tensor[(5, 7, 6), uint64] */;
    %476 = reshape(%474, newshape=[5, 7, 6]) /* ty=Tensor[(5, 7, 6), uint64] */;
    %477 = reshape(%475, newshape=[5, 7, 6]) /* ty=Tensor[(5, 7, 6), uint64] */;
    %478 = @func_1838(%476, %477) /* ty=Tensor[(5, 7, 6), uint64] */;
    (%473, %478)
  };
  %479() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) */
}

def @func_11630() -> (Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), bool]) {
  %480 = @func_11444() /* ty=(Tensor[(5, 7, 6), uint64],) */;
  %481 = @func_7690() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(210), uint64], Tensor[(12, 14, 11), float32]) */;
  %482 = %480.0;
  %483 = %481.0;
  (%482, %483)
}

def @func_14406() -> Tensor[(12, 14, 11), bool] {
  @func_14404() /* ty=Tensor[(12, 14, 11), bool] */
}

def @func_3154(%var_3152: Tensor[(240), int32], %var_3153: Tensor[(1848), int64]) -> (Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), bool], Tensor[(120), int32], Tensor[(240), int32], Tensor[(1848), int64]) {
  %496 = fn (%var_3140: Tensor[(240), int32], %var_3141: Tensor[(1848), int64]) -> (Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), bool], Tensor[(120), int32], Tensor[(240), int32], Tensor[(1848), int64]) {
    %484 = @func_2219() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), bool]) */;
    %485 = @func_2930() /* ty=(Tensor[(5, 7, 6), uint64],) */;
    %486 = cast(meta[relay.Constant][17] /* ty=Tensor[(120), int32] */, dtype="int32") /* ty=Tensor[(120), int32] */;
    %487 = cast(%var_3140, dtype="int32") /* ty=Tensor[(240), int32] */;
    %488 = cast(%var_3141, dtype="int64") /* ty=Tensor[(1848), int64] */;
    %489 = reshape(%486, newshape=[8, 15, 1]) /* ty=Tensor[(8, 15, 1), int32] */;
    %490 = reshape(%487, newshape=[8, 15, 2]) /* ty=Tensor[(8, 15, 2), int32] */;
    %491 = reshape(%488, newshape=[1848, 1]) /* ty=Tensor[(1848, 1), int64] */;
    %492 = @func_565(%489, %490, %491) /* ty=(Tensor[(8, 15, 2), bool], Tensor[(12, 14, 11), bool], Tensor[(1848, 1), int64]) */;
    %493 = %484.0;
    %494 = %485.0;
    %495 = %492.1;
    (%493, %494, %495, meta[relay.Constant][17] /* ty=Tensor[(120), int32] */, %var_3140, %var_3141)
  };
  %496(%var_3152, %var_3153) /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), bool], Tensor[(120), int32], Tensor[(240), int32], Tensor[(1848), int64]) */
}

def @func_12636(%var_12635: Tensor[(1152), int64]) -> (Tensor[(5, 7, 6), uint64], Tensor[(1, 120), float32], Tensor[(5, 7, 6), uint64], Tensor[(1152), int64]) {
  %511 = fn (%var_12628: Tensor[(1152), int64]) -> (Tensor[(5, 7, 6), uint64], Tensor[(1, 120), float32], Tensor[(5, 7, 6), uint64], Tensor[(1152), int64]) {
    %497 = @func_11928() /* ty=(Tensor[(5, 7, 6), uint64],) */;
    %498 = @func_6451() /* ty=(Tensor[(1, 120), int32],) */;
    %499 = %498.0;
    %500 = cast(%499, dtype="float32") /* ty=Tensor[(1, 120), float32] */;
    %501 = cast(%var_12628, dtype="int64") /* ty=Tensor[(1152), int64] */;
    %502 = cast(%var_12628, dtype="int64") /* ty=Tensor[(1152), int64] */;
    %503 = %497.0;
    %504 = cast(%503, dtype="uint64") /* ty=Tensor[(5, 7, 6), uint64] */;
    %505 = reshape(%501, newshape=[8, 16, 9]) /* ty=Tensor[(8, 16, 9), int64] */;
    %506 = reshape(%502, newshape=[8, 16, 9]) /* ty=Tensor[(8, 16, 9), int64] */;
    %507 = reshape(%504, newshape=[210]) /* ty=Tensor[(210), uint64] */;
    %508 = @func_2442(%505, %506, %507) /* ty=(Tensor[(8, 16, 9), bool], Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64], Tensor[(210), uint64]) */;
    %509 = cosh(%500) /* ty=Tensor[(1, 120), float32] */;
    %510 = %508.2;
    (%503, %509, %510, %var_12628)
  };
  %511(%var_12635) /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(1, 120), float32], Tensor[(5, 7, 6), uint64], Tensor[(1152), int64]) */
}

def @func_13082() -> (Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64]) {
  %512 = @func_7963() /* ty=(Tensor[(15, 15, 9), float32], Tensor[(288), float32]) */;
  %513 = %512.0;
  %514 = @func_6853() /* ty=Tensor[(5, 7, 6), uint64] */;
  (%513, %514)
}

def @func_4179(%var_4176: Tensor[(1848), int64], %var_4177: Tensor[(288), float32], %var_4178: Tensor[(176), float32]) -> (Tensor[(210), uint64], Tensor[(5, 7, 6), uint64], Tensor[(120), int32], Tensor[(240), int32], Tensor[(1848), int64], Tensor[(12, 14, 11), float32], Tensor[(288), float32], Tensor[(288), float32], Tensor[(176), float32]) {
  @func_4174(%var_4176, %var_4177, %var_4178) /* ty=(Tensor[(210), uint64], Tensor[(5, 7, 6), uint64], Tensor[(120), int32], Tensor[(240), int32], Tensor[(1848), int64], Tensor[(12, 14, 11), float32], Tensor[(288), float32], Tensor[(288), float32], Tensor[(176), float32]) */
}

def @func_7551() -> (Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64]) {
  %517 = fn () -> (Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64]) {
    %515 = @func_3417() /* ty=Tensor[(12, 14, 11), bool] */;
    %516 = @func_6286() /* ty=Tensor[(5, 7, 6), uint64] */;
    (%515, %516)
  };
  %517() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64]) */
}

def @func_3517() -> (Tensor[(12, 14, 11), bool], Tensor[(9, 2, 16), float32], Tensor[(288), float32]) {
  %518 = @func_2219() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), bool]) */;
  %519 = cast(meta[relay.Constant][18] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
  %520 = reshape(%519, newshape=[9, 2, 16]) /* ty=Tensor[(9, 2, 16), float32] */;
  %521 = @func_1957(%520) /* ty=(Tensor[(9, 2, 16), float32],) */;
  %522 = %518.1;
  %523 = %521.0;
  (%522, %523, meta[relay.Constant][18] /* ty=Tensor[(288), float32] */)
}

def @func_9623(%var_9620: Tensor[(6, 14, 14), float32]) -> (Tensor[(6, 14, 14), float32],) {
  %524 = cast(%var_9620, dtype="float32") /* ty=Tensor[(6, 14, 14), float32] */;
  %525 = atan(%524) /* ty=Tensor[(6, 14, 14), float32] */;
  (%525,)
}

def @func_8212() -> Tensor[(15, 15, 9), float32] {
  %526 = fn () -> Tensor[(15, 15, 9), float32] {
    @func_6728() /* ty=Tensor[(15, 15, 9), float32] */
  };
  %526() /* ty=Tensor[(15, 15, 9), float32] */
}

def @func_11680() -> (Tensor[(288), float32], Tensor[(5, 7, 6), bool], Tensor[(15, 15, 9), float32]) {
  @func_11678() /* ty=(Tensor[(288), float32], Tensor[(5, 7, 6), bool], Tensor[(15, 15, 9), float32]) */
}

def @func_2290() -> Tensor[(5, 7, 6), uint64] {
  %527 = @func_2219() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), bool]) */;
  %527.0
}

def @func_7691() -> (Tensor[(12, 14, 11), bool], Tensor[(210), uint64], Tensor[(12, 14, 11), float32]) {
  %534 = fn () -> (Tensor[(12, 14, 11), bool], Tensor[(210), uint64], Tensor[(12, 14, 11), float32]) {
    %528 = @func_7550() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64]) */;
    %529 = @func_2768() /* ty=(Tensor[(5, 7, 6), float64], Tensor[(210), uint64], Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) */;
    %530 = @func_4640() /* ty=(Tensor[(12, 14, 11), float32],) */;
    %531 = %528.0;
    %532 = %529.1;
    %533 = %530.0;
    (%531, %532, %533)
  };
  %534() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(210), uint64], Tensor[(12, 14, 11), float32]) */
}

def @func_12748(%var_12747: Tensor[(315), uint16]) -> (Tensor[(12, 14, 11), int16], Tensor[(648), float32], Tensor[(12, 14, 11), bool], Tensor[(2, 924), int64], Tensor[(5, 7, 6), uint64], Tensor[(1152), int64], Tensor[(15, 15, 9), float32], Tensor[(16, 11, ?), float64], Tensor[(15, 3, 7), bool], Tensor[(315), uint16]) {
  %555 = fn (%var_12741: Tensor[(315), uint16]) -> (Tensor[(12, 14, 11), int16], Tensor[(648), float32], Tensor[(12, 14, 11), bool], Tensor[(2, 924), int64], Tensor[(5, 7, 6), uint64], Tensor[(1152), int64], Tensor[(15, 15, 9), float32], Tensor[(16, 11, ?), float64], Tensor[(15, 3, 7), bool], Tensor[(315), uint16]) {
    %535 = @func_4943() /* ty=(Tensor[(12, 14, 11), int16], Tensor[(5, 7, 6), uint64], Tensor[(9, 12, 6), float32], Tensor[(648), float32], Tensor[(12, 14, 11), bool]) */;
    %536 = @func_7640() /* ty=(Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64], Tensor[(15, 15, 9), float32], Tensor[(12, 14, 11), bool]) */;
    %537 = @func_7314() /* ty=(Tensor[(2, 924), int64],) */;
    %538 = @func_6587() /* ty=(Tensor[(1152), int64],) */;
    %539 = @func_11142() /* ty=(Tensor[(15, 15, 9), float32],) */;
    %540 = @func_10216() /* ty=(Tensor[(16, 11, ?), float64], Tensor[(5, 7, 6), float64], Tensor[(5, 7, 6), uint64]) */;
    %541 = cast(%var_12741, dtype="uint16") /* ty=Tensor[(315), uint16] */;
    %542 = cast(%var_12741, dtype="uint16") /* ty=Tensor[(315), uint16] */;
    %543 = reshape(%541, newshape=[15, 3, 7]) /* ty=Tensor[(15, 3, 7), uint16] */;
    %544 = reshape(%542, newshape=[15, 3, 7]) /* ty=Tensor[(15, 3, 7), uint16] */;
    %545 = @func_6627(%543, %544) /* ty=(Tensor[(15, 3, 7), bool], Tensor[(5, 7, 6), uint64]) */;
    %546 = @func_11013() /* ty=Tensor[(12, 14, 11), int16] */;
    %547 = %535.3;
    %548 = %536.3;
    %549 = %537.0;
    %550 = @func_2290() /* ty=Tensor[(5, 7, 6), uint64] */;
    %551 = %538.0;
    %552 = %539.0;
    %553 = %540.0;
    %554 = %545.0;
    (%546, %547, %548, %549, %550, %551, %552, %553, %554, %var_12741)
  };
  %555(%var_12747) /* ty=(Tensor[(12, 14, 11), int16], Tensor[(648), float32], Tensor[(12, 14, 11), bool], Tensor[(2, 924), int64], Tensor[(5, 7, 6), uint64], Tensor[(1152), int64], Tensor[(15, 15, 9), float32], Tensor[(16, 11, ?), float64], Tensor[(15, 3, 7), bool], Tensor[(315), uint16]) */
}

def @func_4852() -> Tensor[(5, 7, 6), uint64] {
  @func_4850() /* ty=Tensor[(5, 7, 6), uint64] */
}

def @func_4441() -> (Tensor[(5, 7, 6), bool], Tensor[(12, 14, 11), int16]) {
  %560 = fn () -> (Tensor[(5, 7, 6), bool], Tensor[(12, 14, 11), int16]) {
    %556 = @func_3950() /* ty=(Tensor[(5, 7, 6), bool],) */;
    %557 = @func_4214() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), int16]) */;
    %558 = %556.0;
    %559 = %557.1;
    (%558, %559)
  };
  %560() /* ty=(Tensor[(5, 7, 6), bool], Tensor[(12, 14, 11), int16]) */
}

def @func_6447() -> (Tensor[(648), float32], Tensor[(12, 14, 11), int16], Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), bool]) {
  %568 = fn () -> (Tensor[(648), float32], Tensor[(12, 14, 11), int16], Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), bool]) {
    %561 = @func_4943() /* ty=(Tensor[(12, 14, 11), int16], Tensor[(5, 7, 6), uint64], Tensor[(9, 12, 6), float32], Tensor[(648), float32], Tensor[(12, 14, 11), bool]) */;
    %562 = @func_4440() /* ty=(Tensor[(5, 7, 6), bool], Tensor[(12, 14, 11), int16]) */;
    %563 = @func_4440() /* ty=(Tensor[(5, 7, 6), bool], Tensor[(12, 14, 11), int16]) */;
    %564 = %561.3;
    %565 = %562.1;
    %566 = @func_5962() /* ty=Tensor[(12, 14, 11), bool] */;
    %567 = %563.0;
    (%564, %565, %566, %567)
  };
  %568() /* ty=(Tensor[(648), float32], Tensor[(12, 14, 11), int16], Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), bool]) */
}

def @func_15050(%var_15048: Tensor[(7, 2, 8), float32]) -> (Tensor[(7, 2, 8), float32],) {
  @func_15047(%var_15048) /* ty=(Tensor[(7, 2, 8), float32],) */
}

def @func_11126() -> (Tensor[(5, 7, 6), uint64],) {
  %569 = @func_10239() /* ty=Tensor[(5, 7, 6), uint64] */;
  (%569,)
}

def @func_4254() -> (Tensor[(15, 15, 9), float32], Tensor[(9, 12, 6), float32], Tensor[(648), float32]) {
  @func_4252() /* ty=(Tensor[(15, 15, 9), float32], Tensor[(9, 12, 6), float32], Tensor[(648), float32]) */
}

def @func_8958() -> (Tensor[(15, 15, 9), float32],) {
  %572 = fn () -> (Tensor[(15, 15, 9), float32],) {
    %570 = @func_2575() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(15, 15, 9), float32], Tensor[(1152), int64], Tensor[(210), uint64]) */;
    %571 = %570.1;
    (%571,)
  };
  %572() /* ty=(Tensor[(15, 15, 9), float32],) */
}

def @func_4214() -> (Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), int16]) {
  %573 = @func_2415() /* ty=Tensor[(12, 14, 11), bool] */;
  %574 = @func_3914() /* ty=Tensor[(12, 14, 11), bool] */;
  %575 = cast(%574, dtype="int16") /* ty=Tensor[(12, 14, 11), int16] */;
  %576 = shape_of(%573, dtype="int32") /* ty=Tensor[(3), int32] */;
  %577 = cast(%573, dtype="int16") /* ty=Tensor[(12, 14, 11), int16] */;
  %578 = dyn.reshape(%575, %576, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %579 = @func_3417() /* ty=Tensor[(12, 14, 11), bool] */;
  %580 = multiply(%577, %578) /* ty=Tensor[(12, 14, 11), int16] */;
  (%579, %580)
}

def @func_12875(%var_12874: Tensor[(1152), int64]) -> (Tensor[(5, 7, 6), uint64], Tensor[(1152), int32], Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64], Tensor[(210), uint64]) {
  %600 = fn (%var_12775: Tensor[(1152), int64]) -> (Tensor[(5, 7, 6), uint64], Tensor[(1152), int32], Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64], Tensor[(210), uint64]) {
    %581 = @func_6774() /* ty=(Tensor[(5, 7, 6), uint64],) */;
    %582 = @func_9899() /* ty=Tensor[(1152), int64] */;
    %583 = cast(%var_12775, dtype="int32") /* ty=Tensor[(1152), int32] */;
    %584 = shape_of(%582, dtype="int32") /* ty=Tensor[(1), int32] */;
    %585 = cast(%582, dtype="int32") /* ty=Tensor[(1152), int32] */;
    %586 = dyn.reshape(%583, %584, newshape=[]) /* ty=Tensor[(?), int32] */;
    %587 = @func_12640() /* ty=(Tensor[(12, 14, 11), bool],) */;
    %588 = @func_12497() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(16, 11, ?), bool], Tensor[(5, 7, 6), uint64]) */;
    %589 = @func_3587() /* ty=(Tensor[(5, 7, 6), uint64],) */;
    %590 = @func_2575() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(15, 15, 9), float32], Tensor[(1152), int64], Tensor[(210), uint64]) */;
    %591 = %581.0;
    %592 = logical_xor(%585, %586) /* ty=Tensor[(1152), int32] */;
    %593 = %587.0;
    %594 = @func_12100() /* ty=Tensor[(12, 14, 11), bool] */;
    %595 = @func_4850() /* ty=Tensor[(5, 7, 6), uint64] */;
    %596 = @func_6135() /* ty=Tensor[(5, 7, 6), uint64] */;
    %597 = %588.0;
    %598 = %589.0;
    %599 = %590.3;
    (%591, %592, %593, %594, %595, %596, %597, %598, %599)
  };
  %600(%var_12874) /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(1152), int32], Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64], Tensor[(210), uint64]) */
}

def @func_6201(%var_6200: Tensor[(84, 22), int64]) -> (Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), float64], Tensor[(12, 14, 11), bool], Tensor[(84, 22), int64], Tensor[(5, 7, 6), uint64]) {
  %613 = fn (%var_6190: Tensor[(84, 22), int64]) -> (Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), float64], Tensor[(12, 14, 11), bool], Tensor[(84, 22), int64], Tensor[(5, 7, 6), uint64]) {
    %601 = @func_5606() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) */;
    %602 = @func_2768() /* ty=(Tensor[(5, 7, 6), float64], Tensor[(210), uint64], Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) */;
    %603 = cast(%var_6190, dtype="int64") /* ty=Tensor[(84, 22), int64] */;
    %604 = cast(%var_6190, dtype="int64") /* ty=Tensor[(84, 22), int64] */;
    %605 = reshape(%603, newshape=[12, 14, 11]) /* ty=Tensor[(12, 14, 11), int64] */;
    %606 = reshape(%604, newshape=[12, 14, 11]) /* ty=Tensor[(12, 14, 11), int64] */;
    %607 = @func_54(%605, %606) /* ty=(Tensor[(12, 14, 11), uint32], Tensor[(12, 14, 11), bool]) */;
    %608 = @func_5773() /* ty=(Tensor[(5, 7, 6), uint64],) */;
    %609 = %601.0;
    %610 = %602.0;
    %611 = %607.1;
    %612 = %608.0;
    (%609, %610, %611, %var_6190, %612)
  };
  %613(%var_6200) /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), float64], Tensor[(12, 14, 11), bool], Tensor[(84, 22), int64], Tensor[(5, 7, 6), uint64]) */
}

def @func_9797() -> (Tensor[(1, 120), float32],) {
  %618 = fn () -> (Tensor[(1, 120), float32],) {
    %614 = @func_8116() /* ty=(Tensor[(1, 120), int32],) */;
    %615 = %614.0;
    %616 = cast(%615, dtype="float32") /* ty=Tensor[(1, 120), float32] */;
    %617 = sqrt(%616) /* ty=Tensor[(1, 120), float32] */;
    (%617,)
  };
  %618() /* ty=(Tensor[(1, 120), float32],) */
}

def @func_7344() -> (Tensor[(12, 14, 11), bool],) {
  %621 = fn () -> (Tensor[(12, 14, 11), bool],) {
    %619 = @func_4554() /* ty=(Tensor[(12, 14, 11), bool],) */;
    %620 = %619.0;
    (%620,)
  };
  %621() /* ty=(Tensor[(12, 14, 11), bool],) */
}

def @func_11446() -> (Tensor[(5, 7, 6), uint64],) {
  @func_11444() /* ty=(Tensor[(5, 7, 6), uint64],) */
}

def @func_9543(%var_9541: Tensor[(120), int32], %var_9542: Tensor[(240), int32]) -> (Tensor[(12, 14, 11), bool], Tensor[(15, 15, 9), float32], Tensor[(1848, 1), int64], Tensor[(120), int32], Tensor[(240), int32]) {
  %634 = fn (%var_9530: Tensor[(120), int32], %var_9531: Tensor[(240), int32]) -> (Tensor[(12, 14, 11), bool], Tensor[(15, 15, 9), float32], Tensor[(1848, 1), int64], Tensor[(120), int32], Tensor[(240), int32]) {
    %622 = @func_4214() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), int16]) */;
    %623 = @func_4811() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(15, 15, 9), float32], Tensor[(15, 15, 9), float32], Tensor[(12, 14, 11), uint32]) */;
    %624 = cast(%var_9530, dtype="int32") /* ty=Tensor[(120), int32] */;
    %625 = cast(%var_9531, dtype="int32") /* ty=Tensor[(240), int32] */;
    %626 = %622.0;
    %627 = cast(%626, dtype="int64") /* ty=Tensor[(12, 14, 11), int64] */;
    %628 = reshape(%624, newshape=[8, 15, 1]) /* ty=Tensor[(8, 15, 1), int32] */;
    %629 = reshape(%625, newshape=[8, 15, 2]) /* ty=Tensor[(8, 15, 2), int32] */;
    %630 = reshape(%627, newshape=[1848, 1]) /* ty=Tensor[(1848, 1), int64] */;
    %631 = @func_565(%628, %629, %630) /* ty=(Tensor[(8, 15, 2), bool], Tensor[(12, 14, 11), bool], Tensor[(1848, 1), int64]) */;
    %632 = %623.1;
    %633 = %631.2;
    (%626, %632, %633, %var_9530, %var_9531)
  };
  %634(%var_9541, %var_9542) /* ty=(Tensor[(12, 14, 11), bool], Tensor[(15, 15, 9), float32], Tensor[(1848, 1), int64], Tensor[(120), int32], Tensor[(240), int32]) */
}

def @func_7642() -> (Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64], Tensor[(15, 15, 9), float32], Tensor[(12, 14, 11), bool]) {
  @func_7640() /* ty=(Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64], Tensor[(15, 15, 9), float32], Tensor[(12, 14, 11), bool]) */
}

def @func_12318(%var_12310: int32, %var_12311: Tensor[(6, 6, 16), int32]) -> Tensor[(6, 6, 16), int32] {
  %635 = cast(%var_12310, dtype="int32") /* ty=int32 */;
  %636 = cast(%var_12311, dtype="int32") /* ty=Tensor[(6, 6, 16), int32] */;
  right_shift(%635, %636) /* ty=Tensor[(6, 6, 16), int32] */
}

def @func_15193(%var_15191: Tensor[(18), float32]) -> (Tensor[(5, 7, 6), bool], Tensor[(12, 14, 11), int16], Tensor[(9, 2, 16), float32], Tensor[(5, 7, 6), uint64], Tensor[(288), float32], Tensor[(5, 7, 6), float64], Tensor[(12, 14, 11), bool], Tensor[(1, 9, 2), float32], Tensor[(18), float32], Tensor[(12, 11, 7), uint32], Tensor[(16, 11, 288), bool]) {
  @func_15190(%var_15191) /* ty=(Tensor[(5, 7, 6), bool], Tensor[(12, 14, 11), int16], Tensor[(9, 2, 16), float32], Tensor[(5, 7, 6), uint64], Tensor[(288), float32], Tensor[(5, 7, 6), float64], Tensor[(12, 14, 11), bool], Tensor[(1, 9, 2), float32], Tensor[(18), float32], Tensor[(12, 11, 7), uint32], Tensor[(16, 11, 288), bool]) */
}

def @func_10951() -> (Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), bool], Tensor[(240), int32]) {
  %643 = fn () -> (Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), bool], Tensor[(240), int32]) {
    %637 = @func_2930() /* ty=(Tensor[(5, 7, 6), uint64],) */;
    %638 = cast(meta[relay.Constant][19] /* ty=Tensor[(240), int32] */, dtype="int32") /* ty=Tensor[(240), int32] */;
    %639 = reshape(%638, newshape=[240]) /* ty=Tensor[(240), int32] */;
    %640 = @func_10865(%639) /* ty=(Tensor[(15, 15, 9), float32], Tensor[(1848, 1), int64], Tensor[(1, 120), int32], Tensor[(240), int32], Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64]) */;
    %641 = %637.0;
    %642 = %640.4;
    (%641, %642, meta[relay.Constant][19] /* ty=Tensor[(240), int32] */)
  };
  %643() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), bool], Tensor[(240), int32]) */
}

def @func_7640() -> (Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64], Tensor[(15, 15, 9), float32], Tensor[(12, 14, 11), bool]) {
  %644 = @func_5695() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), float32], Tensor[(15, 15, 9), float32], Tensor[(176), float32], Tensor[(176), float32], Tensor[(120), int32]) */;
  %645 = @func_6774() /* ty=(Tensor[(5, 7, 6), uint64],) */;
  %646 = @func_7541() /* ty=(Tensor[(210), uint64], Tensor[(5, 7, 6), bool], Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), int32], Tensor[(176), float32]) */;
  %647 = %644.3;
  %648 = %645.0;
  %649 = @func_7194() /* ty=Tensor[(15, 15, 9), float32] */;
  %650 = %646.2;
  (%647, %648, %649, %650)
}

def @func_3941() -> (Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) {
  @func_3939() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) */
}

def @func_8313(%var_8312: Tensor[(1152), int64]) -> (Tensor[(5, 7, 6), uint64], Tensor[(1152), int8]) {
  %660 = fn (%var_8300: Tensor[(1152), int64]) -> (Tensor[(5, 7, 6), uint64], Tensor[(1152), int8]) {
    %651 = @func_2630() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) */;
    %652 = @func_5055() /* ty=(Tensor[(1152), int64],) */;
    %653 = %652.0;
    %654 = cast(%var_8300, dtype="int8") /* ty=Tensor[(1152), int8] */;
    %655 = shape_of(%653, dtype="int32") /* ty=Tensor[(1), int32] */;
    %656 = cast(%653, dtype="int8") /* ty=Tensor[(1152), int8] */;
    %657 = dyn.reshape(%654, %655, newshape=[]) /* ty=Tensor[(?), int8] */;
    %658 = %651.1;
    %659 = multiply(%656, %657) /* ty=Tensor[(1152), int8] */;
    (%658, %659)
  };
  %660(%var_8312) /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(1152), int8]) */
}

def @func_3587() -> (Tensor[(5, 7, 6), uint64],) {
  %661 = @func_3226() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64]) */;
  %662 = %661.1;
  (%662,)
}

def @func_6451() -> (Tensor[(1, 120), int32],) {
  %663 = @func_5583() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(210), uint64], Tensor[(176), float32], Tensor[(1, 120), int32], Tensor[(1848), int64], Tensor[(288), float32]) */;
  %664 = %663.3;
  (%664,)
}

def @func_4490() -> (Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), bool]) {
  @func_4488() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), bool]) */
}

def @func_14088() -> (Tensor[(5, 7, 6), uint64], Tensor[(2, 924), int64]) {
  %665 = @func_7314() /* ty=(Tensor[(2, 924), int64],) */;
  %666 = @func_6135() /* ty=Tensor[(5, 7, 6), uint64] */;
  %667 = %665.0;
  (%666, %667)
}

def @func_11064() -> (Tensor[(5, 120), float32],) {
  %673 = fn () -> (Tensor[(5, 120), float32],) {
    %668 = @func_6451() /* ty=(Tensor[(1, 120), int32],) */;
    %669 = %668.0;
    %670 = cast(%669, dtype="float32") /* ty=Tensor[(1, 120), float32] */;
    %671 = cast(meta[relay.Constant][20] /* ty=Tensor[(5, 120), int32] */, dtype="float32") /* ty=Tensor[(5, 120), float32] */;
    %672 = divide(%670, %671) /* ty=Tensor[(5, 120), float32] */;
    (%672,)
  };
  %673() /* ty=(Tensor[(5, 120), float32],) */
}

def @func_7964() -> (Tensor[(15, 15, 9), float32], Tensor[(288), float32]) {
  %677 = fn () -> (Tensor[(15, 15, 9), float32], Tensor[(288), float32]) {
    %674 = @func_3876() /* ty=(Tensor[(288), float32],) */;
    %675 = @func_5373() /* ty=Tensor[(15, 15, 9), float32] */;
    %676 = %674.0;
    (%675, %676)
  };
  %677() /* ty=(Tensor[(15, 15, 9), float32], Tensor[(288), float32]) */
}

def @func_11851() -> (Tensor[(240), int32], Tensor[(12, 14, 11), bool], Tensor[(1848), int64]) {
  %684 = fn () -> (Tensor[(240), int32], Tensor[(12, 14, 11), bool], Tensor[(1848), int64]) {
    %678 = @func_10950() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), bool], Tensor[(240), int32]) */;
    %679 = cast(meta[relay.Constant][21] /* ty=Tensor[(1848), int64] */, dtype="int64") /* ty=Tensor[(1848), int64] */;
    %680 = reshape(%679, newshape=[84, 22]) /* ty=Tensor[(84, 22), int64] */;
    %681 = @func_6199(%680) /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), float64], Tensor[(12, 14, 11), bool], Tensor[(84, 22), int64], Tensor[(5, 7, 6), uint64]) */;
    %682 = %678.2;
    %683 = %681.2;
    (%682, %683, meta[relay.Constant][21] /* ty=Tensor[(1848), int64] */)
  };
  %684() /* ty=(Tensor[(240), int32], Tensor[(12, 14, 11), bool], Tensor[(1848), int64]) */
}

def @func_15190(%var_15169: Tensor[(18), float32]) -> (Tensor[(5, 7, 6), bool], Tensor[(12, 14, 11), int16], Tensor[(9, 2, 16), float32], Tensor[(5, 7, 6), uint64], Tensor[(288), float32], Tensor[(5, 7, 6), float64], Tensor[(12, 14, 11), bool], Tensor[(1, 9, 2), float32], Tensor[(18), float32], Tensor[(12, 11, 7), uint32], Tensor[(16, 11, 288), bool]) {
  %685 = @func_7355() /* ty=(Tensor[(5, 7, 6), bool],) */;
  %686 = @func_9003() /* ty=(Tensor[(12, 14, 11), int16], Tensor[(15, 15, 9), float64]) */;
  %687 = cast(meta[relay.Constant][22] /* ty=Tensor[(288), float32] */, dtype="float32") /* ty=Tensor[(288), float32] */;
  %688 = reshape(%687, newshape=[9, 2, 16]) /* ty=Tensor[(9, 2, 16), float32] */;
  %689 = @func_1957(%688) /* ty=(Tensor[(9, 2, 16), float32],) */;
  %690 = @func_6286() /* ty=Tensor[(5, 7, 6), uint64] */;
  %691 = cast(%690, dtype="uint64") /* ty=Tensor[(5, 7, 6), uint64] */;
  %692 = reshape(%691, newshape=[5, 7, 6]) /* ty=Tensor[(5, 7, 6), uint64] */;
  %693 = @func_14850() /* ty=(Tensor[(12, 14, 11), bool],) */;
  %694 = cast(%var_15169, dtype="float32") /* ty=Tensor[(18), float32] */;
  %695 = reshape(%694, newshape=[1, 9, 2]) /* ty=Tensor[(1, 9, 2), float32] */;
  %696 = @func_12121() /* ty=(Tensor[(210), uint64], Tensor[(12, 11, 7), uint32], Tensor[(14, 66), uint32]) */;
  %697 = @func_4991() /* ty=Tensor[(16, 11, ?), bool] */;
  %698 = cast(%697, dtype="bool") /* ty=Tensor[(16, 11, ?), bool] */;
  %699 = cast(meta[relay.Constant][22] /* ty=Tensor[(288), float32] */, dtype="bool") /* ty=Tensor[(288), bool] */;
  %700 = greater_equal(%698, %699) /* ty=Tensor[(16, 11, 288), bool] */;
  %701 = cast(%700, dtype="float64") /* ty=Tensor[(16, 11, 288), float64] */;
  %702 = erf(%701) /* ty=Tensor[(16, 11, 288), float64] */;
  %703 = cast(%700, dtype="uint8") /* ty=Tensor[(16, 11, 288), uint8] */;
  %704 = cast(%697, dtype="uint8") /* ty=Tensor[(16, 11, ?), uint8] */;
  %705 = multiply(%703, %704) /* ty=Tensor[(16, 11, 288), uint8] */;
  %706 = cast(%705, dtype="bool") /* ty=Tensor[(16, 11, 288), bool] */;
  %707 = shape_of(%702, dtype="int32") /* ty=Tensor[(3), int32] */;
  %708 = cast(%702, dtype="bool") /* ty=Tensor[(16, 11, 288), bool] */;
  %709 = dyn.reshape(%706, %707, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %710 = %685.0;
  %711 = %686.0;
  %712 = %689.0;
  %713 = @func_13130() /* ty=Tensor[(288), float32] */;
  %714 = @func_5883(%692) /* ty=Tensor[(5, 7, 6), float64] */;
  %715 = %693.0;
  %716 = @func_6961(%695) /* ty=Tensor[(1, 9, 2), float32] */;
  %717 = %696.1;
  %718 = equal(%708, %709) /* ty=Tensor[(16, 11, 288), bool] */;
  (%710, %711, %712, %690, %713, %714, %715, %716, %var_15169, %717, %718)
}

def @func_14090() -> (Tensor[(5, 7, 6), uint64], Tensor[(2, 924), int64]) {
  @func_14088() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(2, 924), int64]) */
}

def @func_6904() -> (Tensor[(5, 7, 6), float64], Tensor[(15, 15, 9), float32]) {
  @func_6902() /* ty=(Tensor[(5, 7, 6), float64], Tensor[(15, 15, 9), float32]) */
}

def @func_2446(%var_2443: Tensor[(8, 16, 9), int64], %var_2444: Tensor[(8, 16, 9), int64], %var_2445: Tensor[(210), uint64]) -> (Tensor[(8, 16, 9), bool], Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64], Tensor[(210), uint64]) {
  %731 = fn (%var_2420: Tensor[(8, 16, 9), int64], %var_2421: Tensor[(8, 16, 9), int64], %var_2436: Tensor[(210), uint64]) -> (Tensor[(8, 16, 9), bool], Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64], Tensor[(210), uint64]) {
    %719 = cast(%var_2421, dtype="bool") /* ty=Tensor[(8, 16, 9), bool] */;
    %720 = shape_of(%var_2420, dtype="int32") /* ty=Tensor[(3), int32] */;
    %721 = cast(%var_2420, dtype="bool") /* ty=Tensor[(8, 16, 9), bool] */;
    %722 = dyn.reshape(%719, %720, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %723 = @func_2398() /* ty=(Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64]) */;
    %724 = cast(%var_2436, dtype="uint64") /* ty=Tensor[(210), uint64] */;
    %725 = cast(%var_2436, dtype="uint64") /* ty=Tensor[(210), uint64] */;
    %726 = reshape(%724, newshape=[5, 7, 6]) /* ty=Tensor[(5, 7, 6), uint64] */;
    %727 = reshape(%725, newshape=[5, 7, 6]) /* ty=Tensor[(5, 7, 6), uint64] */;
    %728 = less(%721, %722) /* ty=Tensor[(8, 16, 9), bool] */;
    %729 = %723.0;
    %730 = @func_1838(%726, %727) /* ty=Tensor[(5, 7, 6), uint64] */;
    (%728, %729, %730, %var_2436)
  };
  %731(%var_2443, %var_2444, %var_2445) /* ty=(Tensor[(8, 16, 9), bool], Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64], Tensor[(210), uint64]) */
}

def @func_6853() -> Tensor[(5, 7, 6), uint64] {
  @func_5197() /* ty=Tensor[(5, 7, 6), uint64] */
}

def @func_12337() -> Tensor[(12, 14, 11), bool] {
  %732 = @func_10586() /* ty=(Tensor[(11, 15, 11), int16], Tensor[(12, 14, 11), bool]) */;
  %732.1
}

def @func_10241() -> Tensor[(5, 7, 6), uint64] {
  @func_10239() /* ty=Tensor[(5, 7, 6), uint64] */
}

def @func_5166(%var_5164: Tensor[(2, 924), int64]) -> (Tensor[(12, 14, 11), bool], Tensor[(2, 924), float64]) {
  @func_5163(%var_5164) /* ty=(Tensor[(12, 14, 11), bool], Tensor[(2, 924), float64]) */
}

def @func_9413() -> (Tensor[(5, 7, 6), uint64],) {
  %733 = @func_4850() /* ty=Tensor[(5, 7, 6), uint64] */;
  (%733,)
}

def @func_4620() -> (Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), bool]) {
  %737 = fn () -> (Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), bool]) {
    %734 = @func_4554() /* ty=(Tensor[(12, 14, 11), bool],) */;
    %735 = @func_3914() /* ty=Tensor[(12, 14, 11), bool] */;
    %736 = %734.0;
    (%735, %736)
  };
  %737() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), bool]) */
}

def @func_3519() -> (Tensor[(12, 14, 11), bool], Tensor[(9, 2, 16), float32], Tensor[(288), float32]) {
  @func_3517() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(9, 2, 16), float32], Tensor[(288), float32]) */
}

def @func_6046() -> (Tensor[(12, 14, 11), int16], Tensor[(5, 7, 6), float64], Tensor[(210), uint64], Tensor[(12, 14, 11), bool]) {
  %744 = fn () -> (Tensor[(12, 14, 11), int16], Tensor[(5, 7, 6), float64], Tensor[(210), uint64], Tensor[(12, 14, 11), bool]) {
    %738 = @func_4440() /* ty=(Tensor[(5, 7, 6), bool], Tensor[(12, 14, 11), int16]) */;
    %739 = cast(meta[relay.Constant][23] /* ty=Tensor[(210), uint64] */, dtype="uint64") /* ty=Tensor[(210), uint64] */;
    %740 = reshape(%739, newshape=[5, 7, 6]) /* ty=Tensor[(5, 7, 6), uint64] */;
    %741 = %738.1;
    %742 = @func_5883(%740) /* ty=Tensor[(5, 7, 6), float64] */;
    %743 = @func_2415() /* ty=Tensor[(12, 14, 11), bool] */;
    (%741, %742, meta[relay.Constant][23] /* ty=Tensor[(210), uint64] */, %743)
  };
  %744() /* ty=(Tensor[(12, 14, 11), int16], Tensor[(5, 7, 6), float64], Tensor[(210), uint64], Tensor[(12, 14, 11), bool]) */
}

def @func_11128() -> (Tensor[(5, 7, 6), uint64],) {
  @func_11126() /* ty=(Tensor[(5, 7, 6), uint64],) */
}

def @func_12933(%var_12928: Tensor[(1, 14, 1), float64], %var_12929: Tensor[(13, 14, 10), float64]) -> (Tensor[(13, 14, 10), float64],) {
  %745 = cast(%var_12928, dtype="float64") /* ty=Tensor[(1, 14, 1), float64] */;
  %746 = cast(%var_12929, dtype="float64") /* ty=Tensor[(13, 14, 10), float64] */;
  %747 = floor_mod(%745, %746) /* ty=Tensor[(13, 14, 10), float64] */;
  (%747,)
}

def @func_7316() -> (Tensor[(2, 924), int64],) {
  @func_7314() /* ty=(Tensor[(2, 924), int64],) */
}

def @func_3869() -> (Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64], Tensor[(16, 11, ?), bool]) {
  %761 = fn () -> (Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64], Tensor[(16, 11, ?), bool]) {
    %748 = @func_2930() /* ty=(Tensor[(5, 7, 6), uint64],) */;
    %749 = @func_2930() /* ty=(Tensor[(5, 7, 6), uint64],) */;
    %750 = cast(meta[relay.Constant][24] /* ty=Tensor[(176), float32] */, dtype="float32") /* ty=Tensor[(176), float32] */;
    %751 = reshape(%750, newshape=[16, 11, 1]) /* ty=Tensor[(16, 11, 1), float32] */;
    %752 = @func_200(%751) /* ty=(Tensor[(16, 11, 1), float32],) */;
    %753 = %752.0;
    %754 = cast(meta[relay.Constant][24] /* ty=Tensor[(176), float32] */, dtype="bool") /* ty=Tensor[(176), bool] */;
    %755 = shape_of(%753, dtype="int32") /* ty=Tensor[(3), int32] */;
    %756 = cast(%753, dtype="bool") /* ty=Tensor[(16, 11, 1), bool] */;
    %757 = dyn.reshape(%754, %755, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %758 = %748.0;
    %759 = %749.0;
    %760 = greater(%756, %757) /* ty=Tensor[(16, 11, ?), bool] */;
    (%758, %759, %760)
  };
  %761() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64], Tensor[(16, 11, ?), bool]) */
}

def @func_14154() -> (Tensor[(5, 7, 6), uint64], Tensor[(6, 6, 16), int32], int32, Tensor[(576), int32]) {
  %762 = cast(8 /* ty=int32 */, dtype="int32") /* ty=int32 */;
  %763 = cast(meta[relay.Constant][25] /* ty=Tensor[(576), int32] */, dtype="int32") /* ty=Tensor[(576), int32] */;
  %764 = reshape(%762, newshape=[]) /* ty=int32 */;
  %765 = reshape(%763, newshape=[6, 6, 16]) /* ty=Tensor[(6, 6, 16), int32] */;
  %766 = @func_2290() /* ty=Tensor[(5, 7, 6), uint64] */;
  %767 = @func_12318(%764, %765) /* ty=Tensor[(6, 6, 16), int32] */;
  (%766, %767, 8 /* ty=int32 */, meta[relay.Constant][25] /* ty=Tensor[(576), int32] */)
}

def @func_4866() -> (Tensor[(5, 7, 6), uint64], Tensor[(15, 15, 9), float32]) {
  %772 = fn () -> (Tensor[(5, 7, 6), uint64], Tensor[(15, 15, 9), float32]) {
    %768 = @func_3226() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64]) */;
    %769 = @func_2575() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(15, 15, 9), float32], Tensor[(1152), int64], Tensor[(210), uint64]) */;
    %770 = %768.1;
    %771 = %769.1;
    (%770, %771)
  };
  %772() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(15, 15, 9), float32]) */
}

def @func_6587() -> (Tensor[(1152), int64],) {
  %773 = @func_5055() /* ty=(Tensor[(1152), int64],) */;
  %774 = %773.0;
  (%774,)
}

def @func_5248() -> Tensor[(16, 11, ?), bool] {
  %776 = fn () -> Tensor[(16, 11, ?), bool] {
    %775 = @func_3868() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64], Tensor[(16, 11, ?), bool]) */;
    %775.2
  };
  %776() /* ty=Tensor[(16, 11, ?), bool] */
}

def @func_11678() -> (Tensor[(288), float32], Tensor[(5, 7, 6), bool], Tensor[(15, 15, 9), float32]) {
  %777 = @func_11556() /* ty=(Tensor[(5, 7, 6), bool],) */;
  %778 = @func_7194() /* ty=Tensor[(15, 15, 9), float32] */;
  %779 = cast(%778, dtype="float32") /* ty=Tensor[(15, 15, 9), float32] */;
  %780 = @func_6991() /* ty=Tensor[(288), float32] */;
  %781 = %777.0;
  %782 = sigmoid(%779) /* ty=Tensor[(15, 15, 9), float32] */;
  (%780, %781, %782)
}

def @func_13692() -> (Tensor[(12, 14, 11), bool], Tensor[(9, 11, 6), bool], Tensor[(594), float32], Tensor[(15, 15, 9), float32], Tensor[(15, 15, 9), float32], Tensor[(648), float32]) {
  @func_13690() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(9, 11, 6), bool], Tensor[(594), float32], Tensor[(15, 15, 9), float32], Tensor[(15, 15, 9), float32], Tensor[(648), float32]) */
}

def @func_10217() -> (Tensor[(16, 11, ?), float64], Tensor[(5, 7, 6), float64], Tensor[(5, 7, 6), uint64]) {
  %790 = fn () -> (Tensor[(16, 11, ?), float64], Tensor[(5, 7, 6), float64], Tensor[(5, 7, 6), uint64]) {
    %783 = @func_4991() /* ty=Tensor[(16, 11, ?), bool] */;
    %784 = cast(%783, dtype="float64") /* ty=Tensor[(16, 11, ?), float64] */;
    %785 = @func_6045() /* ty=(Tensor[(12, 14, 11), int16], Tensor[(5, 7, 6), float64], Tensor[(210), uint64], Tensor[(12, 14, 11), bool]) */;
    %786 = @func_3838() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) */;
    %787 = log2(%784) /* ty=Tensor[(16, 11, ?), float64] */;
    %788 = %785.1;
    %789 = %786.1;
    (%787, %788, %789)
  };
  %790() /* ty=(Tensor[(16, 11, ?), float64], Tensor[(5, 7, 6), float64], Tensor[(5, 7, 6), uint64]) */
}

def @func_14096() -> (Tensor[(9, 12, 6), float32],) {
  %793 = fn () -> (Tensor[(9, 12, 6), float32],) {
    %791 = @func_11391() /* ty=(Tensor[(9, 12, 6), float32], Tensor[(1152), int64], Tensor[(210), uint64], Tensor[(15, 15, 9), float32]) */;
    %792 = %791.0;
    (%792,)
  };
  %793() /* ty=(Tensor[(9, 12, 6), float32],) */
}

def @func_14923(%var_14922: Tensor[(432), float64]) -> (Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64], Tensor[(8, 9, 6), float64], Tensor[(432), float64]) {
  %800 = fn (%var_14917: Tensor[(432), float64]) -> (Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64], Tensor[(8, 9, 6), float64], Tensor[(432), float64]) {
    %794 = cast(%var_14917, dtype="float64") /* ty=Tensor[(432), float64] */;
    %795 = reshape(%794, newshape=[8, 9, 6]) /* ty=Tensor[(8, 9, 6), float64] */;
    %796 = @func_6792(%795) /* ty=(Tensor[(8, 9, 6), float64],) */;
    %797 = @func_14553() /* ty=Tensor[(12, 14, 11), bool] */;
    %798 = @func_5197() /* ty=Tensor[(5, 7, 6), uint64] */;
    %799 = %796.0;
    (%797, %798, %799, %var_14917)
  };
  %800(%var_14922) /* ty=(Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64], Tensor[(8, 9, 6), float64], Tensor[(432), float64]) */
}

def @func_13055(%var_13053: Tensor[(224), float32], %var_13054: Tensor[(5, 120), bool]) -> (Tensor[(16, 11, ?), bool], Tensor[(8, 7, 4), int8], Tensor[(224), float32], Tensor[(5, 120), float64], Tensor[(288), float32], Tensor[(5, 7, 6), uint64], Tensor[(5, 120), float64], Tensor[(12, 14, 11), bool], Tensor[(1848), int64], Tensor[(5, 120), float32], Tensor[(1, 120), int32], Tensor[(5, 120), float64], Tensor[(1, 120), float32]) {
  %847 = fn (%var_12966: Tensor[(224), float32], %var_13010: Tensor[(5, 120), bool]) -> (Tensor[(16, 11, ?), bool], Tensor[(8, 7, 4), int8], Tensor[(224), float32], Tensor[(5, 120), float64], Tensor[(288), float32], Tensor[(5, 7, 6), uint64], Tensor[(5, 120), float64], Tensor[(12, 14, 11), bool], Tensor[(1848), int64], Tensor[(5, 120), float32], Tensor[(1, 120), int32], Tensor[(5, 120), float64], Tensor[(1, 120), float32]) {
    %801 = cast(%var_12966, dtype="float32") /* ty=Tensor[(224), float32] */;
    %802 = reshape(%801, newshape=[224]) /* ty=Tensor[(224), float32] */;
    %803 = @func_8180(%802) /* ty=(Tensor[(15, 15, 9), float32], Tensor[(12, 14, 11), float32], Tensor[(8, 7, 4), int8], Tensor[(224), float32]) */;
    %804 = @func_11063() /* ty=(Tensor[(5, 120), float32],) */;
    %805 = %804.0;
    %806 = cast(%805, dtype="float64") /* ty=Tensor[(5, 120), float64] */;
    %807 = log(%806) /* ty=Tensor[(5, 120), float64] */;
    %808 = cast(%807, dtype="float64") /* ty=Tensor[(5, 120), float64] */;
    %809 = @func_7714() /* ty=(Tensor[(5, 7, 6), uint64],) */;
    %810 = cast(%807, dtype="float64") /* ty=Tensor[(5, 120), float64] */;
    %811 = asinh(%810) /* ty=Tensor[(5, 120), float64] */;
    %812 = cast(%807, dtype="float64") /* ty=Tensor[(5, 120), float64] */;
    %813 = shape_of(%811, dtype="int32") /* ty=Tensor[(2), int32] */;
    %814 = cast(%811, dtype="float64") /* ty=Tensor[(5, 120), float64] */;
    %815 = dyn.reshape(%812, %813, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %816 = cast(meta[relay.Constant][26] /* ty=Tensor[(1848), int64] */, dtype="int64") /* ty=Tensor[(1848), int64] */;
    %817 = reshape(%816, newshape=[2, 924]) /* ty=Tensor[(2, 924), int64] */;
    %818 = @func_5163(%817) /* ty=(Tensor[(12, 14, 11), bool], Tensor[(2, 924), float64]) */;
    %819 = cast(%805, dtype="bool") /* ty=Tensor[(5, 120), bool] */;
    %820 = shape_of(%807, dtype="int32") /* ty=Tensor[(2), int32] */;
    %821 = cast(%807, dtype="bool") /* ty=Tensor[(5, 120), bool] */;
    %822 = dyn.reshape(%819, %820, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %823 = greater(%821, %822) /* ty=Tensor[(5, 120), bool] */;
    %824 = cast(%var_13010, dtype="bool") /* ty=Tensor[(5, 120), bool] */;
    %825 = shape_of(%823, dtype="int32") /* ty=Tensor[(2), int32] */;
    %826 = cast(%823, dtype="bool") /* ty=Tensor[(5, 120), bool] */;
    %827 = dyn.reshape(%824, %825, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %828 = logical_and(%826, %827) /* ty=Tensor[(5, 120), bool] */;
    %829 = cast(%807, dtype="float32") /* ty=Tensor[(5, 120), float32] */;
    %830 = shape_of(%828, dtype="int32") /* ty=Tensor[(2), int32] */;
    %831 = cast(%828, dtype="float32") /* ty=Tensor[(5, 120), float32] */;
    %832 = dyn.reshape(%829, %830, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %833 = @func_6451() /* ty=(Tensor[(1, 120), int32],) */;
    %834 = cast(%828, dtype="float64") /* ty=Tensor[(5, 120), float64] */;
    %835 = @func_9344() /* ty=(Tensor[(16, 11, ?), bool], Tensor[(1, 120), float32]) */;
    %836 = @func_9388() /* ty=Tensor[(16, 11, ?), bool] */;
    %837 = %803.2;
    %838 = asin(%808) /* ty=Tensor[(5, 120), float64] */;
    %839 = @func_6991() /* ty=Tensor[(288), float32] */;
    %840 = %809.0;
    %841 = floor_mod(%814, %815) /* ty=Tensor[(5, 120), float64] */;
    %842 = %818.0;
    %843 = floor_divide(%831, %832) /* ty=Tensor[(5, 120), float32] */;
    %844 = %833.0;
    %845 = log2(%834) /* ty=Tensor[(5, 120), float64] */;
    %846 = %835.1;
    (%836, %837, %var_12966, %838, %839, %840, %841, %842, meta[relay.Constant][26] /* ty=Tensor[(1848), int64] */, %843, %844, %845, %846)
  };
  %847(%var_13053, %var_13054) /* ty=(Tensor[(16, 11, ?), bool], Tensor[(8, 7, 4), int8], Tensor[(224), float32], Tensor[(5, 120), float64], Tensor[(288), float32], Tensor[(5, 7, 6), uint64], Tensor[(5, 120), float64], Tensor[(12, 14, 11), bool], Tensor[(1848), int64], Tensor[(5, 120), float32], Tensor[(1, 120), int32], Tensor[(5, 120), float64], Tensor[(1, 120), float32]) */
}

def @func_6286() -> Tensor[(5, 7, 6), uint64] {
  %848 = @func_3226() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64]) */;
  %848.1
}

def @func_12525() -> (Tensor[(1, 120), int32], Tensor[(5, 7, 6), uint64]) {
  %849 = @func_6451() /* ty=(Tensor[(1, 120), int32],) */;
  %850 = @func_5905() /* ty=(Tensor[(5, 7, 6), uint64],) */;
  %851 = %849.0;
  %852 = %850.0;
  (%851, %852)
}

def @func_13994() -> Tensor[(5, 7, 6), float64] {
  %854 = fn () -> Tensor[(5, 7, 6), float64] {
    %853 = @func_6045() /* ty=(Tensor[(12, 14, 11), int16], Tensor[(5, 7, 6), float64], Tensor[(210), uint64], Tensor[(12, 14, 11), bool]) */;
    %853.1
  };
  %854() /* ty=Tensor[(5, 7, 6), float64] */
}

def @func_10865(%var_10849: Tensor[(240), int32]) -> (Tensor[(15, 15, 9), float32], Tensor[(1848, 1), int64], Tensor[(1, 120), int32], Tensor[(240), int32], Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64]) {
  %855 = cast(meta[relay.Constant][27] /* ty=Tensor[(1, 120), int32] */, dtype="int32") /* ty=Tensor[(1, 120), int32] */;
  %856 = cast(%var_10849, dtype="int32") /* ty=Tensor[(240), int32] */;
  %857 = reshape(%855, newshape=[120]) /* ty=Tensor[(120), int32] */;
  %858 = reshape(%856, newshape=[240]) /* ty=Tensor[(240), int32] */;
  %859 = @func_9540(%857, %858) /* ty=(Tensor[(12, 14, 11), bool], Tensor[(15, 15, 9), float32], Tensor[(1848, 1), int64], Tensor[(120), int32], Tensor[(240), int32]) */;
  %860 = @func_10586() /* ty=(Tensor[(11, 15, 11), int16], Tensor[(12, 14, 11), bool]) */;
  %861 = @func_5329() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(15, 15, 9), float32]) */;
  %862 = @func_6912() /* ty=Tensor[(15, 15, 9), float32] */;
  %863 = %859.2;
  %864 = %860.1;
  %865 = %861.0;
  (%862, %863, meta[relay.Constant][27] /* ty=Tensor[(1, 120), int32] */, %var_10849, %864, %865)
}

def @func_12527() -> (Tensor[(1, 120), int32], Tensor[(5, 7, 6), uint64]) {
  @func_12525() /* ty=(Tensor[(1, 120), int32], Tensor[(5, 7, 6), uint64]) */
}

def @func_4682(%var_4676: Tensor[(288), float32], %var_4677: Tensor[(44, 4), float32]) -> (Tensor[(15, 15, 9), float32], Tensor[(12, 14, 11), float32], Tensor[(288), float32], Tensor[(288), float32], Tensor[(44, 4), float32]) {
  %866 = @func_2398() /* ty=(Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64]) */;
  %867 = @func_4640() /* ty=(Tensor[(12, 14, 11), float32],) */;
  %868 = cast(%var_4676, dtype="float32") /* ty=Tensor[(288), float32] */;
  %869 = cast(%var_4677, dtype="float32") /* ty=Tensor[(44, 4), float32] */;
  %870 = reshape(%868, newshape=[288]) /* ty=Tensor[(288), float32] */;
  %871 = reshape(%869, newshape=[176]) /* ty=Tensor[(176), float32] */;
  %872 = @func_2147(%870, %871) /* ty=(Tensor[(2, 924), int64], Tensor[(9, 2, 16), float32], Tensor[(288), float32], Tensor[(16, 11, 1), float32], Tensor[(176), float32], Tensor[(16, 11, 1), float32]) */;
  %873 = %866.0;
  %874 = %867.0;
  %875 = %872.2;
  (%873, %874, %875, %var_4676, %var_4677)
}

def @func_10376(%var_10374: Tensor[(30, 4), int32]) -> (Tensor[(15, 15, 9), float32], Tensor[(12, 14, 11), bool], Tensor[(30, 4), int32], Tensor[(2, 120), int32], Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) {
  @func_10373(%var_10374) /* ty=(Tensor[(15, 15, 9), float32], Tensor[(12, 14, 11), bool], Tensor[(30, 4), int32], Tensor[(2, 120), int32], Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) */
}

def @func_6368(%var_6366: Tensor[(13, 11, 5), float32]) -> Tensor[(13, 11, 5), float32] {
  @func_6365(%var_6366) /* ty=Tensor[(13, 11, 5), float32] */
}

def @func_6135() -> Tensor[(5, 7, 6), uint64] {
  %876 = @func_2630() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) */;
  %876.0
}

def @func_4686(%var_4684: Tensor[(288), float32], %var_4685: Tensor[(44, 4), float32]) -> (Tensor[(15, 15, 9), float32], Tensor[(12, 14, 11), float32], Tensor[(288), float32], Tensor[(288), float32], Tensor[(44, 4), float32]) {
  @func_4682(%var_4684, %var_4685) /* ty=(Tensor[(15, 15, 9), float32], Tensor[(12, 14, 11), float32], Tensor[(288), float32], Tensor[(288), float32], Tensor[(44, 4), float32]) */
}

def @func_11558() -> (Tensor[(5, 7, 6), bool],) {
  @func_11556() /* ty=(Tensor[(5, 7, 6), bool],) */
}

def @func_8776() -> (Tensor[(5, 7, 6), bool],) {
  @func_8774() /* ty=(Tensor[(5, 7, 6), bool],) */
}

def @func_10551() -> (Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), bool], Tensor[(1, 120), float32]) {
  @func_10549() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), bool], Tensor[(1, 120), float32]) */
}

def @func_4885() -> (Tensor[(2, 924), int64],) {
  %877 = @func_2087() /* ty=(Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64], Tensor[(210), uint64], Tensor[(12, 14, 11), bool], Tensor[(2, 924), int64], Tensor[(12, 14, 11), bool]) */;
  %878 = %877.4;
  (%878,)
}

def @func_8942() -> (Tensor[(5, 7, 6), bool], Tensor[(15, 15, 9), float32]) {
  %882 = fn () -> (Tensor[(5, 7, 6), bool], Tensor[(15, 15, 9), float32]) {
    %879 = @func_4440() /* ty=(Tensor[(5, 7, 6), bool], Tensor[(12, 14, 11), int16]) */;
    %880 = %879.0;
    %881 = @func_7194() /* ty=Tensor[(15, 15, 9), float32] */;
    (%880, %881)
  };
  %882() /* ty=(Tensor[(5, 7, 6), bool], Tensor[(15, 15, 9), float32]) */
}

def @func_4319(%var_4318: Tensor[(12, 14, 11), bool]) -> Tensor[(12, 14, 11), float64] {
  %890 = fn (%var_4309: Tensor[(12, 14, 11), bool]) -> Tensor[(12, 14, 11), float64] {
    %883 = @func_3914() /* ty=Tensor[(12, 14, 11), bool] */;
    %884 = cast(%var_4309, dtype="bool") /* ty=Tensor[(12, 14, 11), bool] */;
    %885 = shape_of(%883, dtype="int32") /* ty=Tensor[(3), int32] */;
    %886 = cast(%883, dtype="bool") /* ty=Tensor[(12, 14, 11), bool] */;
    %887 = dyn.reshape(%884, %885, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %888 = greater_equal(%886, %887) /* ty=Tensor[(12, 14, 11), bool] */;
    %889 = cast(%888, dtype="float64") /* ty=Tensor[(12, 14, 11), float64] */;
    sin(%889) /* ty=Tensor[(12, 14, 11), float64] */
  };
  %890(%var_4318) /* ty=Tensor[(12, 14, 11), float64] */
}

def @func_14595() -> (Tensor[(176), float32], Tensor[(15, 15, 9), float32], Tensor[(1, 120), float32]) {
  %896 = fn () -> (Tensor[(176), float32], Tensor[(15, 15, 9), float32], Tensor[(1, 120), float32]) {
    %891 = @func_5695() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), float32], Tensor[(15, 15, 9), float32], Tensor[(176), float32], Tensor[(176), float32], Tensor[(120), int32]) */;
    %892 = @func_9796() /* ty=(Tensor[(1, 120), float32],) */;
    %893 = %891.5;
    %894 = @func_6728() /* ty=Tensor[(15, 15, 9), float32] */;
    %895 = %892.0;
    (%893, %894, %895)
  };
  %896() /* ty=(Tensor[(176), float32], Tensor[(15, 15, 9), float32], Tensor[(1, 120), float32]) */
}

def @func_8352() -> (Tensor[(5, 7, 6), uint64],) {
  %897 = @func_2768() /* ty=(Tensor[(5, 7, 6), float64], Tensor[(210), uint64], Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) */;
  %898 = %897.3;
  (%898,)
}

def @func_11323() -> (Tensor[(12, 14, 11), bool],) {
  %901 = fn () -> (Tensor[(12, 14, 11), bool],) {
    %899 = @func_4214() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), int16]) */;
    %900 = %899.0;
    (%900,)
  };
  %901() /* ty=(Tensor[(12, 14, 11), bool],) */
}

def @main(%var_15229: Tensor[(9, 12, 6), float32]) -> (Tensor[(1152), int64], Tensor[(9, 12, 6), float64]) {
  %902 = @func_6589() /* ty=(Tensor[(1152), int64],) */;
  %903 = @func_14096() /* ty=(Tensor[(9, 12, 6), float32],) */;
  %904 = %903.0;
  %905 = cast(%var_15229, dtype="float64") /* ty=Tensor[(9, 12, 6), float64] */;
  %906 = shape_of(%904, dtype="int32") /* ty=Tensor[(3), int32] */;
  %907 = cast(%904, dtype="float64") /* ty=Tensor[(9, 12, 6), float64] */;
  %908 = dyn.reshape(%905, %906, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %909 = %902.0;
  %910 = power(%907, %908) /* ty=Tensor[(9, 12, 6), float64] */;
  (%909, %910)
}

def @func_14798() -> (Tensor[(5, 7, 6), uint64], Tensor[(12, 11, 7), uint32]) {
  %911 = @func_10659() /* ty=(Tensor[(9, 2, 16), float32], Tensor[(5, 7, 6), uint64]) */;
  %912 = @func_12121() /* ty=(Tensor[(210), uint64], Tensor[(12, 11, 7), uint32], Tensor[(14, 66), uint32]) */;
  %913 = %911.1;
  %914 = %912.1;
  (%913, %914)
}

def @func_3589() -> (Tensor[(5, 7, 6), uint64],) {
  @func_3587() /* ty=(Tensor[(5, 7, 6), uint64],) */
}

def @func_2575() -> (Tensor[(12, 14, 11), bool], Tensor[(15, 15, 9), float32], Tensor[(1152), int64], Tensor[(210), uint64]) {
  %915 = @func_2087() /* ty=(Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64], Tensor[(210), uint64], Tensor[(12, 14, 11), bool], Tensor[(2, 924), int64], Tensor[(12, 14, 11), bool]) */;
  %916 = cast(meta[relay.Constant][28] /* ty=Tensor[(1152), int64] */, dtype="int64") /* ty=Tensor[(1152), int64] */;
  %917 = cast(meta[relay.Constant][28] /* ty=Tensor[(1152), int64] */, dtype="int64") /* ty=Tensor[(1152), int64] */;
  %918 = cast(meta[relay.Constant][29] /* ty=Tensor[(210), uint64] */, dtype="uint64") /* ty=Tensor[(210), uint64] */;
  %919 = reshape(%916, newshape=[8, 16, 9]) /* ty=Tensor[(8, 16, 9), int64] */;
  %920 = reshape(%917, newshape=[8, 16, 9]) /* ty=Tensor[(8, 16, 9), int64] */;
  %921 = reshape(%918, newshape=[210]) /* ty=Tensor[(210), uint64] */;
  %922 = @func_2442(%919, %920, %921) /* ty=(Tensor[(8, 16, 9), bool], Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64], Tensor[(210), uint64]) */;
  %923 = %915.3;
  %924 = %922.1;
  (%923, %924, meta[relay.Constant][28] /* ty=Tensor[(1152), int64] */, meta[relay.Constant][29] /* ty=Tensor[(210), uint64] */)
}

def @func_2398() -> (Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64]) {
  %925 = @func_2087() /* ty=(Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64], Tensor[(210), uint64], Tensor[(12, 14, 11), bool], Tensor[(2, 924), int64], Tensor[(12, 14, 11), bool]) */;
  %926 = %925.0;
  %927 = @func_2290() /* ty=Tensor[(5, 7, 6), uint64] */;
  (%926, %927)
}

def @func_14445() -> (Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), bool]) {
  @func_14443() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), bool]) */
}

def @func_7980() -> Tensor[(12, 14, 11), bool] {
  %929 = fn () -> Tensor[(12, 14, 11), bool] {
    %928 = @func_4829() /* ty=(Tensor[(12, 14, 11), bool],) */;
    %928.0
  };
  %929() /* ty=Tensor[(12, 14, 11), bool] */
}

def @func_11255() -> (Tensor[(5, 7, 6), uint64],) {
  %932 = fn () -> (Tensor[(5, 7, 6), uint64],) {
    %930 = @func_2930() /* ty=(Tensor[(5, 7, 6), uint64],) */;
    %931 = %930.0;
    (%931,)
  };
  %932() /* ty=(Tensor[(5, 7, 6), uint64],) */
}

def @func_6730() -> Tensor[(15, 15, 9), float32] {
  @func_6728() /* ty=Tensor[(15, 15, 9), float32] */
}

def @func_11556() -> (Tensor[(5, 7, 6), bool],) {
  %933 = @func_9318() /* ty=(Tensor[(5, 7, 6), bool], Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), int16], Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64], Tensor[(16, 11, ?), float32]) */;
  %934 = %933.0;
  (%934,)
}

def @func_3877() -> (Tensor[(288), float32],) {
  %937 = fn () -> (Tensor[(288), float32],) {
    %935 = @func_3517() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(9, 2, 16), float32], Tensor[(288), float32]) */;
    %936 = %935.2;
    (%936,)
  };
  %937() /* ty=(Tensor[(288), float32],) */
}

def @func_13968() -> (Tensor[(288), float32],) {
  @func_13966() /* ty=(Tensor[(288), float32],) */
}

def @func_2770() -> (Tensor[(5, 7, 6), float64], Tensor[(210), uint64], Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) {
  @func_2768() /* ty=(Tensor[(5, 7, 6), float64], Tensor[(210), uint64], Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) */
}

def @func_8035(%var_8033: Tensor[(12, 11, 7), uint32], %var_8034: Tensor[(12, 11, 7), uint32]) -> Tensor[(12, 11, 7), uint32] {
  %942 = fn (%var_8023: Tensor[(12, 11, 7), uint32], %var_8024: Tensor[(12, 11, 7), uint32]) -> Tensor[(12, 11, 7), uint32] {
    %938 = cast(%var_8024, dtype="uint32") /* ty=Tensor[(12, 11, 7), uint32] */;
    %939 = shape_of(%var_8023, dtype="int32") /* ty=Tensor[(3), int32] */;
    %940 = cast(%var_8023, dtype="uint32") /* ty=Tensor[(12, 11, 7), uint32] */;
    %941 = dyn.reshape(%938, %939, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    maximum(%940, %941) /* ty=Tensor[(12, 11, 7), uint32] */
  };
  %942(%var_8033, %var_8034) /* ty=Tensor[(12, 11, 7), uint32] */
}

def @func_10373(%var_10332: Tensor[(30, 4), int32]) -> (Tensor[(15, 15, 9), float32], Tensor[(12, 14, 11), bool], Tensor[(30, 4), int32], Tensor[(2, 120), int32], Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) {
  %943 = @func_5329() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(15, 15, 9), float32]) */;
  %944 = cast(%var_10332, dtype="int32") /* ty=Tensor[(30, 4), int32] */;
  %945 = cast(meta[relay.Constant][30] /* ty=Tensor[(2, 120), int32] */, dtype="int32") /* ty=Tensor[(2, 120), int32] */;
  %946 = reshape(%944, newshape=[120]) /* ty=Tensor[(120), int32] */;
  %947 = reshape(%945, newshape=[240]) /* ty=Tensor[(240), int32] */;
  %948 = @func_9540(%946, %947) /* ty=(Tensor[(12, 14, 11), bool], Tensor[(15, 15, 9), float32], Tensor[(1848, 1), int64], Tensor[(120), int32], Tensor[(240), int32]) */;
  %949 = @func_5773() /* ty=(Tensor[(5, 7, 6), uint64],) */;
  %950 = @func_9726() /* ty=(Tensor[(5, 7, 6), bool], Tensor[(5, 7, 6), uint64], Tensor[(1848), int64]) */;
  %951 = %943.1;
  %952 = %948.0;
  %953 = %949.0;
  %954 = %950.1;
  (%951, %952, %var_10332, meta[relay.Constant][30] /* ty=Tensor[(2, 120), int32] */, %953, %954)
}

def @func_2088() -> (Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64], Tensor[(210), uint64], Tensor[(12, 14, 11), bool], Tensor[(2, 924), int64], Tensor[(12, 14, 11), bool]) {
  %974 = fn () -> (Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64], Tensor[(210), uint64], Tensor[(12, 14, 11), bool], Tensor[(2, 924), int64], Tensor[(12, 14, 11), bool]) {
    %955 = cast(meta[relay.Constant][31] /* ty=Tensor[(15, 15, 9), float32] */, dtype="float32") /* ty=Tensor[(15, 15, 9), float32] */;
    %956 = cast(meta[relay.Constant][32] /* ty=Tensor[(210), uint64] */, dtype="uint64") /* ty=Tensor[(210), uint64] */;
    %957 = cast(meta[relay.Constant][32] /* ty=Tensor[(210), uint64] */, dtype="uint64") /* ty=Tensor[(210), uint64] */;
    %958 = reshape(%956, newshape=[5, 7, 6]) /* ty=Tensor[(5, 7, 6), uint64] */;
    %959 = reshape(%957, newshape=[5, 7, 6]) /* ty=Tensor[(5, 7, 6), uint64] */;
    %960 = cast(meta[relay.Constant][33] /* ty=Tensor[(2, 924), int64] */, dtype="int64") /* ty=Tensor[(2, 924), int64] */;
    %961 = cast(meta[relay.Constant][33] /* ty=Tensor[(2, 924), int64] */, dtype="int64") /* ty=Tensor[(2, 924), int64] */;
    %962 = reshape(%960, newshape=[12, 14, 11]) /* ty=Tensor[(12, 14, 11), int64] */;
    %963 = reshape(%961, newshape=[12, 14, 11]) /* ty=Tensor[(12, 14, 11), int64] */;
    %964 = @func_54(%962, %963) /* ty=(Tensor[(12, 14, 11), uint32], Tensor[(12, 14, 11), bool]) */;
    %965 = %964.1;
    %966 = cast(%965, dtype="int64") /* ty=Tensor[(12, 14, 11), int64] */;
    %967 = cast(%965, dtype="int64") /* ty=Tensor[(12, 14, 11), int64] */;
    %968 = reshape(%966, newshape=[12, 14, 11]) /* ty=Tensor[(12, 14, 11), int64] */;
    %969 = reshape(%967, newshape=[12, 14, 11]) /* ty=Tensor[(12, 14, 11), int64] */;
    %970 = @func_54(%968, %969) /* ty=(Tensor[(12, 14, 11), uint32], Tensor[(12, 14, 11), bool]) */;
    %971 = log(%955) /* ty=Tensor[(15, 15, 9), float32] */;
    %972 = @func_1838(%958, %959) /* ty=Tensor[(5, 7, 6), uint64] */;
    %973 = %970.1;
    (%971, %972, meta[relay.Constant][32] /* ty=Tensor[(210), uint64] */, %965, meta[relay.Constant][33] /* ty=Tensor[(2, 924), int64] */, %973)
  };
  %974() /* ty=(Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64], Tensor[(210), uint64], Tensor[(12, 14, 11), bool], Tensor[(2, 924), int64], Tensor[(12, 14, 11), bool]) */
}

def @func_9004() -> (Tensor[(12, 14, 11), int16], Tensor[(15, 15, 9), float64]) {
  %980 = fn () -> (Tensor[(12, 14, 11), int16], Tensor[(15, 15, 9), float64]) {
    %975 = @func_4214() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), int16]) */;
    %976 = @func_5373() /* ty=Tensor[(15, 15, 9), float32] */;
    %977 = cast(%976, dtype="float64") /* ty=Tensor[(15, 15, 9), float64] */;
    %978 = %975.1;
    %979 = cos(%977) /* ty=Tensor[(15, 15, 9), float64] */;
    (%978, %979)
  };
  %980() /* ty=(Tensor[(12, 14, 11), int16], Tensor[(15, 15, 9), float64]) */
}

def @func_4991() -> Tensor[(16, 11, ?), bool] {
  %981 = @func_3868() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64], Tensor[(16, 11, ?), bool]) */;
  %981.2
}

def @func_3951() -> (Tensor[(5, 7, 6), bool],) {
  %984 = fn () -> (Tensor[(5, 7, 6), bool],) {
    %982 = @func_3607() /* ty=(Tensor[(5, 7, 6), bool],) */;
    %983 = %982.0;
    (%983,)
  };
  %984() /* ty=(Tensor[(5, 7, 6), bool],) */
}

def @func_14860() -> Tensor[(12, 14, 11), bool] {
  @func_14553() /* ty=Tensor[(12, 14, 11), bool] */
}

def @func_6991() -> Tensor[(288), float32] {
  @func_6984() /* ty=Tensor[(288), float32] */
}

def @func_13959() -> (Tensor[(15, 15, 9), float32], Tensor[(12, 14, 11), bool], Tensor[(15, 15, 9), float32], Tensor[(12, 14, 11), bool], Tensor[(1152), int64]) {
  %995 = fn () -> (Tensor[(15, 15, 9), float32], Tensor[(12, 14, 11), bool], Tensor[(15, 15, 9), float32], Tensor[(12, 14, 11), bool], Tensor[(1152), int64]) {
    %985 = @func_11142() /* ty=(Tensor[(15, 15, 9), float32],) */;
    %986 = @func_10950() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), bool], Tensor[(240), int32]) */;
    %987 = @func_6902() /* ty=(Tensor[(5, 7, 6), float64], Tensor[(15, 15, 9), float32]) */;
    %988 = @func_13859() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), bool]) */;
    %989 = @func_4362() /* ty=(Tensor[(1152), int64],) */;
    %990 = %985.0;
    %991 = %986.1;
    %992 = %987.1;
    %993 = %988.0;
    %994 = %989.0;
    (%990, %991, %992, %993, %994)
  };
  %995() /* ty=(Tensor[(15, 15, 9), float32], Tensor[(12, 14, 11), bool], Tensor[(15, 15, 9), float32], Tensor[(12, 14, 11), bool], Tensor[(1152), int64]) */
}

def @func_14564() -> Tensor[(5, 7, 6), uint64] {
  %996 = fn () -> Tensor[(5, 7, 6), uint64] {
    @func_2290() /* ty=Tensor[(5, 7, 6), uint64] */
  };
  %996() /* ty=Tensor[(5, 7, 6), uint64] */
}

def @func_12080(%var_12078: Tensor[(176), float32], %var_12079: Tensor[(144, 2), float32]) -> (Tensor[(12, 14, 11), bool], Tensor[(176), float32], Tensor[(15, 15, 9), float32], Tensor[(2, 924), int64], Tensor[(144, 2), int64]) {
  @func_12076(%var_12078, %var_12079) /* ty=(Tensor[(12, 14, 11), bool], Tensor[(176), float32], Tensor[(15, 15, 9), float32], Tensor[(2, 924), int64], Tensor[(144, 2), int64]) */
}

def @func_8754(%var_8753: Tensor[(975), float64]) -> (Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64], Tensor[(16, 11, 975), bool]) {
  %1011 = fn (%var_8722: Tensor[(975), float64]) -> (Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64], Tensor[(16, 11, 975), bool]) {
    %997 = @func_7343() /* ty=(Tensor[(12, 14, 11), bool],) */;
    %998 = @func_5773() /* ty=(Tensor[(5, 7, 6), uint64],) */;
    %999 = cast(%var_8722, dtype="float64") /* ty=Tensor[(975), float64] */;
    %1000 = reshape(%999, newshape=[5, 195]) /* ty=Tensor[(5, 195), float64] */;
    %1001 = @func_8688(%1000) /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(12, 11, 7), uint32], Tensor[(5, 195), float64], Tensor[(16, 11, ?), bool]) */;
    %1002 = %1001.3;
    %1003 = cast(%var_8722, dtype="int8") /* ty=Tensor[(975), int8] */;
    %1004 = cast(%1002, dtype="int8") /* ty=Tensor[(16, 11, ?), int8] */;
    %1005 = minimum(%1003, %1004) /* ty=Tensor[(16, 11, 975), int8] */;
    %1006 = cast(%1005, dtype="bool") /* ty=Tensor[(16, 11, 975), bool] */;
    %1007 = cast(%1002, dtype="bool") /* ty=Tensor[(16, 11, ?), bool] */;
    %1008 = %997.0;
    %1009 = %998.0;
    %1010 = not_equal(%1006, %1007) /* ty=Tensor[(16, 11, 975), bool] */;
    (%1008, %1009, %1010)
  };
  %1011(%var_8753) /* ty=(Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64], Tensor[(16, 11, 975), bool]) */
}

def @func_11929() -> (Tensor[(5, 7, 6), uint64],) {
  %1014 = fn () -> (Tensor[(5, 7, 6), uint64],) {
    %1012 = @func_3838() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) */;
    %1013 = %1012.0;
    (%1013,)
  };
  %1014() /* ty=(Tensor[(5, 7, 6), uint64],) */
}

def @func_11478() -> (Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), float64], Tensor[(648), float32]) {
  @func_11476() /* ty=(Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), float64], Tensor[(648), float32]) */
}

def @func_2931() -> (Tensor[(5, 7, 6), uint64],) {
  %1017 = fn () -> (Tensor[(5, 7, 6), uint64],) {
    %1015 = @func_2630() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) */;
    %1016 = %1015.0;
    (%1016,)
  };
  %1017() /* ty=(Tensor[(5, 7, 6), uint64],) */
}

def @func_7195() -> Tensor[(15, 15, 9), float32] {
  %1019 = fn () -> Tensor[(15, 15, 9), float32] {
    %1018 = @func_6902() /* ty=(Tensor[(5, 7, 6), float64], Tensor[(15, 15, 9), float32]) */;
    %1018.1
  };
  %1019() /* ty=Tensor[(15, 15, 9), float32] */
}

def @func_10660() -> (Tensor[(9, 2, 16), float32], Tensor[(5, 7, 6), uint64]) {
  %1024 = fn () -> (Tensor[(9, 2, 16), float32], Tensor[(5, 7, 6), uint64]) {
    %1020 = @func_3517() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(9, 2, 16), float32], Tensor[(288), float32]) */;
    %1021 = @func_6391() /* ty=(Tensor[(5, 7, 6), uint64],) */;
    %1022 = %1020.1;
    %1023 = %1021.0;
    (%1022, %1023)
  };
  %1024() /* ty=(Tensor[(9, 2, 16), float32], Tensor[(5, 7, 6), uint64]) */
}

def @func_2219() -> (Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), bool]) {
  %1025 = @func_2087() /* ty=(Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64], Tensor[(210), uint64], Tensor[(12, 14, 11), bool], Tensor[(2, 924), int64], Tensor[(12, 14, 11), bool]) */;
  %1026 = @func_2087() /* ty=(Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64], Tensor[(210), uint64], Tensor[(12, 14, 11), bool], Tensor[(2, 924), int64], Tensor[(12, 14, 11), bool]) */;
  %1027 = %1025.1;
  %1028 = %1026.3;
  (%1027, %1028)
}

def @func_12122() -> (Tensor[(210), uint64], Tensor[(12, 11, 7), uint32], Tensor[(14, 66), uint32]) {
  %1036 = fn () -> (Tensor[(210), uint64], Tensor[(12, 11, 7), uint32], Tensor[(14, 66), uint32]) {
    %1029 = @func_2087() /* ty=(Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64], Tensor[(210), uint64], Tensor[(12, 14, 11), bool], Tensor[(2, 924), int64], Tensor[(12, 14, 11), bool]) */;
    %1030 = cast(meta[relay.Constant][34] /* ty=Tensor[(14, 66), uint32] */, dtype="uint32") /* ty=Tensor[(14, 66), uint32] */;
    %1031 = cast(meta[relay.Constant][34] /* ty=Tensor[(14, 66), uint32] */, dtype="uint32") /* ty=Tensor[(14, 66), uint32] */;
    %1032 = reshape(%1030, newshape=[12, 11, 7]) /* ty=Tensor[(12, 11, 7), uint32] */;
    %1033 = reshape(%1031, newshape=[12, 11, 7]) /* ty=Tensor[(12, 11, 7), uint32] */;
    %1034 = %1029.2;
    %1035 = @func_8032(%1032, %1033) /* ty=Tensor[(12, 11, 7), uint32] */;
    (%1034, %1035, meta[relay.Constant][34] /* ty=Tensor[(14, 66), uint32] */)
  };
  %1036() /* ty=(Tensor[(210), uint64], Tensor[(12, 11, 7), uint32], Tensor[(14, 66), uint32]) */
}

def @func_5606() -> (Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) {
  %1037 = @func_2219() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), bool]) */;
  %1038 = @func_2398() /* ty=(Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64]) */;
  %1039 = %1037.0;
  %1040 = %1038.1;
  (%1039, %1040)
}

def @func_10549() -> (Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), bool], Tensor[(1, 120), float32]) {
  %1041 = @func_7915() /* ty=(Tensor[(12, 14, 11), bool],) */;
  %1042 = @func_9344() /* ty=(Tensor[(16, 11, ?), bool], Tensor[(1, 120), float32]) */;
  %1043 = @func_3417() /* ty=Tensor[(12, 14, 11), bool] */;
  %1044 = %1041.0;
  %1045 = %1042.1;
  (%1043, %1044, %1045)
}

def @func_3939() -> (Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) {
  %1046 = @func_3587() /* ty=(Tensor[(5, 7, 6), uint64],) */;
  %1047 = @func_3226() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64]) */;
  %1048 = %1046.0;
  %1049 = %1047.1;
  (%1048, %1049)
}

def @func_3418() -> Tensor[(12, 14, 11), bool] {
  %1051 = fn () -> Tensor[(12, 14, 11), bool] {
    %1050 = @func_3226() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64]) */;
    %1050.0
  };
  %1051() /* ty=Tensor[(12, 14, 11), bool] */
}

def @func_2150(%var_2148: Tensor[(288), float32], %var_2149: Tensor[(176), float32]) -> (Tensor[(2, 924), int64], Tensor[(9, 2, 16), float32], Tensor[(288), float32], Tensor[(16, 11, 1), float32], Tensor[(176), float32], Tensor[(16, 11, 1), float32]) {
  %1066 = fn (%var_2132: Tensor[(288), float32], %var_2135: Tensor[(176), float32]) -> (Tensor[(2, 924), int64], Tensor[(9, 2, 16), float32], Tensor[(288), float32], Tensor[(16, 11, 1), float32], Tensor[(176), float32], Tensor[(16, 11, 1), float32]) {
    %1052 = @func_2087() /* ty=(Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64], Tensor[(210), uint64], Tensor[(12, 14, 11), bool], Tensor[(2, 924), int64], Tensor[(12, 14, 11), bool]) */;
    %1053 = cast(%var_2132, dtype="float32") /* ty=Tensor[(288), float32] */;
    %1054 = reshape(%1053, newshape=[9, 2, 16]) /* ty=Tensor[(9, 2, 16), float32] */;
    %1055 = @func_1957(%1054) /* ty=(Tensor[(9, 2, 16), float32],) */;
    %1056 = cast(%var_2135, dtype="float32") /* ty=Tensor[(176), float32] */;
    %1057 = reshape(%1056, newshape=[16, 11, 1]) /* ty=Tensor[(16, 11, 1), float32] */;
    %1058 = @func_200(%1057) /* ty=(Tensor[(16, 11, 1), float32],) */;
    %1059 = %1058.0;
    %1060 = cast(%1059, dtype="float32") /* ty=Tensor[(16, 11, 1), float32] */;
    %1061 = reshape(%1060, newshape=[16, 11, 1]) /* ty=Tensor[(16, 11, 1), float32] */;
    %1062 = @func_200(%1061) /* ty=(Tensor[(16, 11, 1), float32],) */;
    %1063 = %1052.4;
    %1064 = %1055.0;
    %1065 = %1062.0;
    (%1063, %1064, %var_2132, %1059, %var_2135, %1065)
  };
  %1066(%var_2148, %var_2149) /* ty=(Tensor[(2, 924), int64], Tensor[(9, 2, 16), float32], Tensor[(288), float32], Tensor[(16, 11, 1), float32], Tensor[(176), float32], Tensor[(16, 11, 1), float32]) */
}

def @func_14060() -> (Tensor[(5, 7, 6), uint64],) {
  @func_14058() /* ty=(Tensor[(5, 7, 6), uint64],) */
}

def @func_13860() -> (Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), bool]) {
  %1072 = fn () -> (Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), bool]) {
    %1067 = @func_7979() /* ty=Tensor[(12, 14, 11), bool] */;
    %1068 = cast(%1067, dtype="int64") /* ty=Tensor[(12, 14, 11), int64] */;
    %1069 = reshape(%1068, newshape=[84, 22]) /* ty=Tensor[(84, 22), int64] */;
    %1070 = @func_6199(%1069) /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), float64], Tensor[(12, 14, 11), bool], Tensor[(84, 22), int64], Tensor[(5, 7, 6), uint64]) */;
    %1071 = %1070.2;
    (%1067, %1071)
  };
  %1072() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), bool]) */
}

def @func_12322(%var_12320: int32, %var_12321: Tensor[(6, 6, 16), int32]) -> Tensor[(6, 6, 16), int32] {
  @func_12318(%var_12320, %var_12321) /* ty=Tensor[(6, 6, 16), int32] */
}

def @func_14156() -> (Tensor[(5, 7, 6), uint64], Tensor[(6, 6, 16), int32], int32, Tensor[(576), int32]) {
  @func_14154() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(6, 6, 16), int32], int32, Tensor[(576), int32]) */
}

def @func_5374() -> Tensor[(15, 15, 9), float32] {
  %1074 = fn () -> Tensor[(15, 15, 9), float32] {
    %1073 = @func_4865() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(15, 15, 9), float32]) */;
    %1073.1
  };
  %1074() /* ty=Tensor[(15, 15, 9), float32] */
}

def @func_11753(%var_11751: Tensor[(112), float64], %var_11752: Tensor[(224), float32]) -> (Tensor[(15, 15, 9), float32], Tensor[(8, 2, 7), float64], Tensor[(112), float64], Tensor[(12, 14, 11), float32], Tensor[(224), float32], Tensor[(12, 14, 11), bool]) {
  @func_11749(%var_11751, %var_11752) /* ty=(Tensor[(15, 15, 9), float32], Tensor[(8, 2, 7), float64], Tensor[(112), float64], Tensor[(12, 14, 11), float32], Tensor[(224), float32], Tensor[(12, 14, 11), bool]) */
}

def @func_7916() -> (Tensor[(12, 14, 11), bool],) {
  %1077 = fn () -> (Tensor[(12, 14, 11), bool],) {
    %1075 = @func_4829() /* ty=(Tensor[(12, 14, 11), bool],) */;
    %1076 = %1075.0;
    (%1076,)
  };
  %1077() /* ty=(Tensor[(12, 14, 11), bool],) */
}

def @func_4417() -> (Tensor[(8, 12, 3), bool], Tensor[(16, 11, 1), float32], Tensor[(176), float32]) {
  @func_4415() /* ty=(Tensor[(8, 12, 3), bool], Tensor[(16, 11, 1), float32], Tensor[(176), float32]) */
}

def @func_6744(%var_6742: Tensor[(1152), int64]) -> (Tensor[(210), uint64], Tensor[(5, 7, 6), uint64], Tensor[(1152), int64]) {
  @func_6741(%var_6742) /* ty=(Tensor[(210), uint64], Tensor[(5, 7, 6), uint64], Tensor[(1152), int64]) */
}

def @func_2768() -> (Tensor[(5, 7, 6), float64], Tensor[(210), uint64], Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) {
  %1078 = @func_2219() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), bool]) */;
  %1079 = %1078.0;
  %1080 = cast(%1079, dtype="float64") /* ty=Tensor[(5, 7, 6), float64] */;
  %1081 = @func_2087() /* ty=(Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64], Tensor[(210), uint64], Tensor[(12, 14, 11), bool], Tensor[(2, 924), int64], Tensor[(12, 14, 11), bool]) */;
  %1082 = sigmoid(%1080) /* ty=Tensor[(5, 7, 6), float64] */;
  %1083 = cast(%1082, dtype="uint64") /* ty=Tensor[(5, 7, 6), uint64] */;
  %1084 = cast(%1082, dtype="uint64") /* ty=Tensor[(5, 7, 6), uint64] */;
  %1085 = reshape(%1083, newshape=[5, 7, 6]) /* ty=Tensor[(5, 7, 6), uint64] */;
  %1086 = reshape(%1084, newshape=[5, 7, 6]) /* ty=Tensor[(5, 7, 6), uint64] */;
  %1087 = %1081.2;
  %1088 = @func_1838(%1085, %1086) /* ty=Tensor[(5, 7, 6), uint64] */;
  %1089 = @func_2290() /* ty=Tensor[(5, 7, 6), uint64] */;
  (%1082, %1087, %1088, %1089)
}

def @func_9713() -> Tensor[(1848), float64] {
  @func_9711() /* ty=Tensor[(1848), float64] */
}

def @func_10868(%var_10866: Tensor[(240), int32]) -> (Tensor[(15, 15, 9), float32], Tensor[(1848, 1), int64], Tensor[(1, 120), int32], Tensor[(240), int32], Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64]) {
  @func_10865(%var_10866) /* ty=(Tensor[(15, 15, 9), float32], Tensor[(1848, 1), int64], Tensor[(1, 120), int32], Tensor[(240), int32], Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64]) */
}

def @func_9901() -> Tensor[(1152), int64] {
  @func_9899() /* ty=Tensor[(1152), int64] */
}

def @func_7425(%var_7424: Tensor[(648), float32]) -> (Tensor[(8, 12, 3), bool], Tensor[(288), float32], Tensor[(1848), int64], Tensor[(202752), int16], Tensor[(9, 12, 6), float32], Tensor[(648), float32], Tensor[(202752), float32], Tensor[(5, 7, 6), float64], Tensor[(210), uint64]) {
  %1113 = fn (%var_7411: Tensor[(648), float32]) -> (Tensor[(8, 12, 3), bool], Tensor[(288), float32], Tensor[(1848), int64], Tensor[(202752), int16], Tensor[(9, 12, 6), float32], Tensor[(648), float32], Tensor[(202752), float32], Tensor[(5, 7, 6), float64], Tensor[(210), uint64]) {
    %1090 = @func_4415() /* ty=(Tensor[(8, 12, 3), bool], Tensor[(16, 11, 1), float32], Tensor[(176), float32]) */;
    %1091 = @func_5583() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(210), uint64], Tensor[(176), float32], Tensor[(1, 120), int32], Tensor[(1848), int64], Tensor[(288), float32]) */;
    %1092 = cast(meta[relay.Constant][35] /* ty=Tensor[(202752), int32] */, dtype="int32") /* ty=Tensor[(202752), int32] */;
    %1093 = reshape(%1092, newshape=[16, 11, 1152]) /* ty=Tensor[(16, 11, 1152), int32] */;
    %1094 = @func_5751(%1093) /* ty=(Tensor[(16, 11, ?), bool], Tensor[(16, 11, 1152), bool], Tensor[(16, 11, 1152), bool]) */;
    %1095 = %1094.2;
    %1096 = cast(%1095, dtype="int16") /* ty=Tensor[(16, 11, 1152), int16] */;
    %1097 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(202752), int32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1098 = cast(meta[relay.Constant][35] /* ty=Tensor[(202752), int32] */, dtype="int16") /* ty=Tensor[(202752), int16] */;
    %1099 = dyn.reshape(%1096, %1097, newshape=[]) /* ty=Tensor[(?), int16] */;
    %1100 = cast(%var_7411, dtype="float32") /* ty=Tensor[(648), float32] */;
    %1101 = reshape(%1100, newshape=[9, 12, 6]) /* ty=Tensor[(9, 12, 6), float32] */;
    %1102 = @func_3786(%1101) /* ty=(Tensor[(9, 12, 6), float32],) */;
    %1103 = cast(meta[relay.Constant][35] /* ty=Tensor[(202752), int32] */, dtype="float32") /* ty=Tensor[(202752), float32] */;
    %1104 = cast(meta[relay.Constant][36] /* ty=Tensor[(210), uint64] */, dtype="uint64") /* ty=Tensor[(210), uint64] */;
    %1105 = reshape(%1104, newshape=[5, 7, 6]) /* ty=Tensor[(5, 7, 6), uint64] */;
    %1106 = %1090.0;
    %1107 = @func_6984() /* ty=Tensor[(288), float32] */;
    %1108 = %1091.4;
    %1109 = bitwise_or(%1098, %1099) /* ty=Tensor[(202752), int16] */;
    %1110 = %1102.0;
    %1111 = sigmoid(%1103) /* ty=Tensor[(202752), float32] */;
    %1112 = @func_5883(%1105) /* ty=Tensor[(5, 7, 6), float64] */;
    (%1106, %1107, %1108, %1109, %1110, %var_7411, %1111, %1112, meta[relay.Constant][36] /* ty=Tensor[(210), uint64] */)
  };
  %1113(%var_7424) /* ty=(Tensor[(8, 12, 3), bool], Tensor[(288), float32], Tensor[(1848), int64], Tensor[(202752), int16], Tensor[(9, 12, 6), float32], Tensor[(648), float32], Tensor[(202752), float32], Tensor[(5, 7, 6), float64], Tensor[(210), uint64]) */
}

def @func_9727() -> (Tensor[(5, 7, 6), bool], Tensor[(5, 7, 6), uint64], Tensor[(1848), int64]) {
  %1120 = fn () -> (Tensor[(5, 7, 6), bool], Tensor[(5, 7, 6), uint64], Tensor[(1848), int64]) {
    %1114 = @func_4440() /* ty=(Tensor[(5, 7, 6), bool], Tensor[(12, 14, 11), int16]) */;
    %1115 = cast(meta[relay.Constant][37] /* ty=Tensor[(1848), int64] */, dtype="int64") /* ty=Tensor[(1848), int64] */;
    %1116 = reshape(%1115, newshape=[84, 22]) /* ty=Tensor[(84, 22), int64] */;
    %1117 = @func_6199(%1116) /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), float64], Tensor[(12, 14, 11), bool], Tensor[(84, 22), int64], Tensor[(5, 7, 6), uint64]) */;
    %1118 = %1114.0;
    %1119 = %1117.0;
    (%1118, %1119, meta[relay.Constant][37] /* ty=Tensor[(1848), int64] */)
  };
  %1120() /* ty=(Tensor[(5, 7, 6), bool], Tensor[(5, 7, 6), uint64], Tensor[(1848), int64]) */
}

def @func_9574() -> (Tensor[(12, 14, 11), float64], Tensor[(1848), int64], Tensor[(240), int32]) {
  %1131 = fn () -> (Tensor[(12, 14, 11), float64], Tensor[(1848), int64], Tensor[(240), int32]) {
    %1121 = @func_4440() /* ty=(Tensor[(5, 7, 6), bool], Tensor[(12, 14, 11), int16]) */;
    %1122 = %1121.1;
    %1123 = cast(%1122, dtype="float64") /* ty=Tensor[(12, 14, 11), float64] */;
    %1124 = cast(meta[relay.Constant][38] /* ty=Tensor[(240), int32] */, dtype="int32") /* ty=Tensor[(240), int32] */;
    %1125 = cast(%1122, dtype="int64") /* ty=Tensor[(12, 14, 11), int64] */;
    %1126 = reshape(%1124, newshape=[240]) /* ty=Tensor[(240), int32] */;
    %1127 = reshape(%1125, newshape=[1848]) /* ty=Tensor[(1848), int64] */;
    %1128 = @func_3151(%1126, %1127) /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), bool], Tensor[(120), int32], Tensor[(240), int32], Tensor[(1848), int64]) */;
    %1129 = sqrt(%1123) /* ty=Tensor[(12, 14, 11), float64] */;
    %1130 = %1128.5;
    (%1129, %1130, meta[relay.Constant][38] /* ty=Tensor[(240), int32] */)
  };
  %1131() /* ty=(Tensor[(12, 14, 11), float64], Tensor[(1848), int64], Tensor[(240), int32]) */
}

def @func_3915() -> Tensor[(12, 14, 11), bool] {
  %1132 = fn () -> Tensor[(12, 14, 11), bool] {
    @func_2415() /* ty=Tensor[(12, 14, 11), bool] */
  };
  %1132() /* ty=Tensor[(12, 14, 11), bool] */
}

def @func_10430(%var_10428: Tensor[(176), float32]) -> (Tensor[(5, 7, 6), uint64], Tensor[(176), float32], Tensor[(288), float32], Tensor[(176), float32], Tensor[(5, 7, 6), uint64]) {
  @func_10427(%var_10428) /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(176), float32], Tensor[(288), float32], Tensor[(176), float32], Tensor[(5, 7, 6), uint64]) */
}

def @func_7314() -> (Tensor[(2, 924), int64],) {
  %1133 = @func_4885() /* ty=(Tensor[(2, 924), int64],) */;
  %1134 = %1133.0;
  (%1134,)
}

def @func_2416() -> Tensor[(12, 14, 11), bool] {
  %1136 = fn () -> Tensor[(12, 14, 11), bool] {
    %1135 = @func_2219() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), bool]) */;
    %1135.1
  };
  %1136() /* ty=Tensor[(12, 14, 11), bool] */
}

def @func_8180(%var_8170: Tensor[(224), float32]) -> (Tensor[(15, 15, 9), float32], Tensor[(12, 14, 11), float32], Tensor[(8, 7, 4), int8], Tensor[(224), float32]) {
  %1137 = @func_7690() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(210), uint64], Tensor[(12, 14, 11), float32]) */;
  %1138 = cast(%var_8170, dtype="float32") /* ty=Tensor[(224), float32] */;
  %1139 = reshape(%1138, newshape=[8, 7, 4]) /* ty=Tensor[(8, 7, 4), float32] */;
  %1140 = @func_7127(%1139) /* ty=(Tensor[(8, 7, 4), int8], Tensor[(5, 7, 6), uint64]) */;
  %1141 = @func_5373() /* ty=Tensor[(15, 15, 9), float32] */;
  %1142 = %1137.2;
  %1143 = %1140.0;
  (%1141, %1142, %1143, %var_8170)
}

def @func_9088(%var_9084: Tensor[(224), float32]) -> (Tensor[(12, 14, 11), uint32], Tensor[(8, 7, 4), int8], Tensor[(224), float32]) {
  %1144 = @func_4811() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(15, 15, 9), float32], Tensor[(15, 15, 9), float32], Tensor[(12, 14, 11), uint32]) */;
  %1145 = cast(%var_9084, dtype="float32") /* ty=Tensor[(224), float32] */;
  %1146 = reshape(%1145, newshape=[8, 7, 4]) /* ty=Tensor[(8, 7, 4), float32] */;
  %1147 = @func_7127(%1146) /* ty=(Tensor[(8, 7, 4), int8], Tensor[(5, 7, 6), uint64]) */;
  %1148 = %1144.3;
  %1149 = %1147.0;
  (%1148, %1149, %var_9084)
}

def @func_6453() -> (Tensor[(1, 120), int32],) {
  @func_6451() /* ty=(Tensor[(1, 120), int32],) */
}

def @func_13690() -> (Tensor[(12, 14, 11), bool], Tensor[(9, 11, 6), bool], Tensor[(594), float32], Tensor[(15, 15, 9), float32], Tensor[(15, 15, 9), float32], Tensor[(648), float32]) {
  %1150 = @func_4619() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), bool]) */;
  %1151 = cast(meta[relay.Constant][39] /* ty=Tensor[(594), float32] */, dtype="float32") /* ty=Tensor[(594), float32] */;
  %1152 = cast(meta[relay.Constant][39] /* ty=Tensor[(594), float32] */, dtype="float32") /* ty=Tensor[(594), float32] */;
  %1153 = reshape(%1151, newshape=[9, 11, 6]) /* ty=Tensor[(9, 11, 6), float32] */;
  %1154 = reshape(%1152, newshape=[9, 11, 6]) /* ty=Tensor[(9, 11, 6), float32] */;
  %1155 = @func_7963() /* ty=(Tensor[(15, 15, 9), float32], Tensor[(288), float32]) */;
  %1156 = @func_4943() /* ty=(Tensor[(12, 14, 11), int16], Tensor[(5, 7, 6), uint64], Tensor[(9, 12, 6), float32], Tensor[(648), float32], Tensor[(12, 14, 11), bool]) */;
  %1157 = %1150.0;
  %1158 = @func_12288(%1153, %1154) /* ty=Tensor[(9, 11, 6), bool] */;
  %1159 = %1155.0;
  %1160 = @func_5373() /* ty=Tensor[(15, 15, 9), float32] */;
  %1161 = %1156.3;
  (%1157, %1158, meta[relay.Constant][39] /* ty=Tensor[(594), float32] */, %1159, %1160, %1161)
}

def @func_6630(%var_6628: Tensor[(15, 3, 7), uint16], %var_6629: Tensor[(15, 3, 7), uint16]) -> (Tensor[(15, 3, 7), bool], Tensor[(5, 7, 6), uint64]) {
  %1174 = fn (%var_6611: Tensor[(15, 3, 7), uint16], %var_6616: Tensor[(15, 3, 7), uint16]) -> (Tensor[(15, 3, 7), bool], Tensor[(5, 7, 6), uint64]) {
    %1162 = cast(meta[relay.Constant][40] /* ty=Tensor[(15, 3, 7), uint16] */, dtype="uint16") /* ty=Tensor[(15, 3, 7), uint16] */;
    %1163 = shape_of(%var_6611, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1164 = cast(%var_6611, dtype="uint16") /* ty=Tensor[(15, 3, 7), uint16] */;
    %1165 = dyn.reshape(%1162, %1163, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %1166 = subtract(%1164, %1165) /* ty=Tensor[(15, 3, 7), uint16] */;
    %1167 = cast(%var_6616, dtype="bool") /* ty=Tensor[(15, 3, 7), bool] */;
    %1168 = shape_of(%1166, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1169 = cast(%1166, dtype="bool") /* ty=Tensor[(15, 3, 7), bool] */;
    %1170 = dyn.reshape(%1167, %1168, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1171 = @func_5905() /* ty=(Tensor[(5, 7, 6), uint64],) */;
    %1172 = logical_or(%1169, %1170) /* ty=Tensor[(15, 3, 7), bool] */;
    %1173 = %1171.0;
    (%1172, %1173)
  };
  %1174(%var_6628, %var_6629) /* ty=(Tensor[(15, 3, 7), bool], Tensor[(5, 7, 6), uint64]) */
}

def @func_10587() -> (Tensor[(11, 15, 11), int16], Tensor[(12, 14, 11), bool]) {
  %1182 = fn () -> (Tensor[(11, 15, 11), int16], Tensor[(12, 14, 11), bool]) {
    %1175 = cast(meta[relay.Constant][42] /* ty=Tensor[(11, 15, 11), int16] */, dtype="int16") /* ty=Tensor[(11, 15, 11), int16] */;
    %1176 = shape_of(meta[relay.Constant][41] /* ty=Tensor[(11, 15, 11), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1177 = cast(meta[relay.Constant][41] /* ty=Tensor[(11, 15, 11), int16] */, dtype="int16") /* ty=Tensor[(11, 15, 11), int16] */;
    %1178 = dyn.reshape(%1175, %1176, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %1179 = @func_4214() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), int16]) */;
    %1180 = bitwise_and(%1177, %1178) /* ty=Tensor[(11, 15, 11), int16] */;
    %1181 = %1179.0;
    (%1180, %1181)
  };
  %1182() /* ty=(Tensor[(11, 15, 11), int16], Tensor[(12, 14, 11), bool]) */
}

def @func_202(%var_201: Tensor[(16, 11, 1), float32]) -> (Tensor[(16, 11, 1), float32],) {
  %1185 = fn (%var_196: Tensor[(16, 11, 1), float32]) -> (Tensor[(16, 11, 1), float32],) {
    %1183 = cast(%var_196, dtype="float32") /* ty=Tensor[(16, 11, 1), float32] */;
    %1184 = acosh(%1183) /* ty=Tensor[(16, 11, 1), float32] */;
    (%1184,)
  };
  %1185(%var_201) /* ty=(Tensor[(16, 11, 1), float32],) */
}

def @func_7821() -> (Tensor[(12, 14, 11), bool], Tensor[(9, 12, 6), float32], Tensor[(648), float32]) {
  %1192 = fn () -> (Tensor[(12, 14, 11), bool], Tensor[(9, 12, 6), float32], Tensor[(648), float32]) {
    %1186 = @func_4619() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), bool]) */;
    %1187 = cast(meta[relay.Constant][43] /* ty=Tensor[(648), float32] */, dtype="float32") /* ty=Tensor[(648), float32] */;
    %1188 = reshape(%1187, newshape=[9, 12, 6]) /* ty=Tensor[(9, 12, 6), float32] */;
    %1189 = @func_3786(%1188) /* ty=(Tensor[(9, 12, 6), float32],) */;
    %1190 = %1186.0;
    %1191 = %1189.0;
    (%1190, %1191, meta[relay.Constant][43] /* ty=Tensor[(648), float32] */)
  };
  %1192() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(9, 12, 6), float32], Tensor[(648), float32]) */
}

def @func_6985() -> Tensor[(288), float32] {
  %1194 = fn () -> Tensor[(288), float32] {
    %1193 = @func_3876() /* ty=(Tensor[(288), float32],) */;
    %1193.0
  };
  %1194() /* ty=Tensor[(288), float32] */
}

def @func_14555() -> Tensor[(12, 14, 11), bool] {
  @func_14553() /* ty=Tensor[(12, 14, 11), bool] */
}

def @func_4053(%var_4051: Tensor[(288), float32], %var_4052: Tensor[(176), float32]) -> (Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64], Tensor[(288), float32], Tensor[(288), float32], Tensor[(176), float32]) {
  %1205 = fn (%var_4047: Tensor[(288), float32], %var_4048: Tensor[(176), float32]) -> (Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64], Tensor[(288), float32], Tensor[(288), float32], Tensor[(176), float32]) {
    %1195 = @func_2219() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), bool]) */;
    %1196 = @func_3939() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) */;
    %1197 = cast(%var_4047, dtype="float32") /* ty=Tensor[(288), float32] */;
    %1198 = cast(%var_4048, dtype="float32") /* ty=Tensor[(176), float32] */;
    %1199 = reshape(%1197, newshape=[288]) /* ty=Tensor[(288), float32] */;
    %1200 = reshape(%1198, newshape=[176]) /* ty=Tensor[(176), float32] */;
    %1201 = @func_2147(%1199, %1200) /* ty=(Tensor[(2, 924), int64], Tensor[(9, 2, 16), float32], Tensor[(288), float32], Tensor[(16, 11, 1), float32], Tensor[(176), float32], Tensor[(16, 11, 1), float32]) */;
    %1202 = %1195.0;
    %1203 = %1196.1;
    %1204 = %1201.2;
    (%1202, %1203, %1204, %var_4047, %var_4048)
  };
  %1205(%var_4051, %var_4052) /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64], Tensor[(288), float32], Tensor[(288), float32], Tensor[(176), float32]) */
}

def @func_6288() -> Tensor[(5, 7, 6), uint64] {
  @func_6286() /* ty=Tensor[(5, 7, 6), uint64] */
}

def @func_14443() -> (Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), bool]) {
  %1206 = @func_3587() /* ty=(Tensor[(5, 7, 6), uint64],) */;
  %1207 = @func_11322() /* ty=(Tensor[(12, 14, 11), bool],) */;
  %1208 = %1206.0;
  %1209 = %1207.0;
  (%1208, %1209)
}

def @func_13108() -> (Tensor[(5, 7, 6), float64],) {
  %1212 = fn () -> (Tensor[(5, 7, 6), float64],) {
    %1210 = @func_6902() /* ty=(Tensor[(5, 7, 6), float64], Tensor[(15, 15, 9), float32]) */;
    %1211 = %1210.0;
    (%1211,)
  };
  %1212() /* ty=(Tensor[(5, 7, 6), float64],) */
}

def @func_12189() -> (Tensor[(12, 14, 11), bool],) {
  %1215 = fn () -> (Tensor[(12, 14, 11), bool],) {
    %1213 = @func_11630() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), bool]) */;
    %1214 = %1213.1;
    (%1214,)
  };
  %1215() /* ty=(Tensor[(12, 14, 11), bool],) */
}

def @func_13840() -> (Tensor[(1, 120), float64], Tensor[(648), float32], Tensor[(1848), int64]) {
  %1223 = fn () -> (Tensor[(1, 120), float64], Tensor[(648), float32], Tensor[(1848), int64]) {
    %1216 = @func_9796() /* ty=(Tensor[(1, 120), float32],) */;
    %1217 = %1216.0;
    %1218 = cast(%1217, dtype="float64") /* ty=Tensor[(1, 120), float64] */;
    %1219 = @func_9573() /* ty=(Tensor[(12, 14, 11), float64], Tensor[(1848), int64], Tensor[(240), int32]) */;
    %1220 = sigmoid(%1218) /* ty=Tensor[(1, 120), float64] */;
    %1221 = @func_11768() /* ty=Tensor[(648), float32] */;
    %1222 = %1219.1;
    (%1220, %1221, %1222)
  };
  %1223() /* ty=(Tensor[(1, 120), float64], Tensor[(648), float32], Tensor[(1848), int64]) */
}

def @func_8498() -> Tensor[(12, 14, 11), bool] {
  %1224 = fn () -> Tensor[(12, 14, 11), bool] {
    @func_7979() /* ty=Tensor[(12, 14, 11), bool] */
  };
  %1224() /* ty=Tensor[(12, 14, 11), bool] */
}

def @func_10001(%var_10000: Tensor[(1848), bool]) -> (Tensor[(5, 7, 6), bool], Tensor[(12, 14, 11), float64], Tensor[(1848), bool]) {
  %1230 = fn (%var_9982: Tensor[(1848), bool]) -> (Tensor[(5, 7, 6), bool], Tensor[(12, 14, 11), float64], Tensor[(1848), bool]) {
    %1225 = @func_7355() /* ty=(Tensor[(5, 7, 6), bool],) */;
    %1226 = cast(%var_9982, dtype="bool") /* ty=Tensor[(1848), bool] */;
    %1227 = reshape(%1226, newshape=[12, 14, 11]) /* ty=Tensor[(12, 14, 11), bool] */;
    %1228 = %1225.0;
    %1229 = @func_4317(%1227) /* ty=Tensor[(12, 14, 11), float64] */;
    (%1228, %1229, %var_9982)
  };
  %1230(%var_10000) /* ty=(Tensor[(5, 7, 6), bool], Tensor[(12, 14, 11), float64], Tensor[(1848), bool]) */
}

def @func_4887() -> (Tensor[(2, 924), int64],) {
  @func_4885() /* ty=(Tensor[(2, 924), int64],) */
}

def @func_5696() -> (Tensor[(12, 14, 11), bool], Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), float32], Tensor[(15, 15, 9), float32], Tensor[(176), float32], Tensor[(176), float32], Tensor[(120), int32]) {
  %1247 = fn () -> (Tensor[(12, 14, 11), bool], Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), float32], Tensor[(15, 15, 9), float32], Tensor[(176), float32], Tensor[(176), float32], Tensor[(120), int32]) {
    %1231 = @func_4829() /* ty=(Tensor[(12, 14, 11), bool],) */;
    %1232 = @func_4943() /* ty=(Tensor[(12, 14, 11), int16], Tensor[(5, 7, 6), uint64], Tensor[(9, 12, 6), float32], Tensor[(648), float32], Tensor[(12, 14, 11), bool]) */;
    %1233 = %1232.1;
    %1234 = cast(%1233, dtype="float32") /* ty=Tensor[(5, 7, 6), float32] */;
    %1235 = atan(%1234) /* ty=Tensor[(5, 7, 6), float32] */;
    %1236 = cast(%1235, dtype="float32") /* ty=Tensor[(5, 7, 6), float32] */;
    %1237 = cast(meta[relay.Constant][44] /* ty=Tensor[(176), float32] */, dtype="float32") /* ty=Tensor[(176), float32] */;
    %1238 = cast(meta[relay.Constant][45] /* ty=Tensor[(120), int32] */, dtype="int32") /* ty=Tensor[(120), int32] */;
    %1239 = reshape(%1237, newshape=[176]) /* ty=Tensor[(176), float32] */;
    %1240 = reshape(%1238, newshape=[120]) /* ty=Tensor[(120), int32] */;
    %1241 = @func_2911(%1239, %1240) /* ty=(Tensor[(12, 14, 11), bool], Tensor[(210), uint64], Tensor[(12, 14, 11), bool], Tensor[(1152), int64], Tensor[(16, 11, 1), float32], Tensor[(176), float32], Tensor[(12, 14, 11), bool], Tensor[(120), int32], Tensor[(240), int32], Tensor[(8, 15, 2), bool], Tensor[(5, 7, 6), bool], Tensor[(5, 7, 6), uint64], Tensor[(16, 11, 1), float32], Tensor[(16, 11, 1), float32]) */;
    %1242 = %1231.0;
    %1243 = @func_5373() /* ty=Tensor[(15, 15, 9), float32] */;
    %1244 = cos(%1236) /* ty=Tensor[(5, 7, 6), float32] */;
    %1245 = @func_4697() /* ty=Tensor[(15, 15, 9), float32] */;
    %1246 = %1241.5;
    (%1242, %1243, %1244, %1245, %1246, meta[relay.Constant][44] /* ty=Tensor[(176), float32] */, meta[relay.Constant][45] /* ty=Tensor[(120), int32] */)
  };
  %1247() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), float32], Tensor[(15, 15, 9), float32], Tensor[(176), float32], Tensor[(176), float32], Tensor[(120), int32]) */
}

def @func_2914(%var_2912: Tensor[(176), float32], %var_2913: Tensor[(120), int32]) -> (Tensor[(12, 14, 11), bool], Tensor[(210), uint64], Tensor[(12, 14, 11), bool], Tensor[(1152), int64], Tensor[(16, 11, 1), float32], Tensor[(176), float32], Tensor[(12, 14, 11), bool], Tensor[(120), int32], Tensor[(240), int32], Tensor[(8, 15, 2), bool], Tensor[(5, 7, 6), bool], Tensor[(5, 7, 6), uint64], Tensor[(16, 11, 1), float32], Tensor[(16, 11, 1), float32]) {
  %1295 = fn (%var_2860: Tensor[(176), float32], %var_2872: Tensor[(120), int32]) -> (Tensor[(12, 14, 11), bool], Tensor[(210), uint64], Tensor[(12, 14, 11), bool], Tensor[(1152), int64], Tensor[(16, 11, 1), float32], Tensor[(176), float32], Tensor[(12, 14, 11), bool], Tensor[(120), int32], Tensor[(240), int32], Tensor[(8, 15, 2), bool], Tensor[(5, 7, 6), bool], Tensor[(5, 7, 6), uint64], Tensor[(16, 11, 1), float32], Tensor[(16, 11, 1), float32]) {
    %1248 = @func_2575() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(15, 15, 9), float32], Tensor[(1152), int64], Tensor[(210), uint64]) */;
    %1249 = @func_2575() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(15, 15, 9), float32], Tensor[(1152), int64], Tensor[(210), uint64]) */;
    %1250 = cast(%var_2860, dtype="float32") /* ty=Tensor[(176), float32] */;
    %1251 = reshape(%1250, newshape=[16, 11, 1]) /* ty=Tensor[(16, 11, 1), float32] */;
    %1252 = @func_200(%1251) /* ty=(Tensor[(16, 11, 1), float32],) */;
    %1253 = cast(%var_2872, dtype="int32") /* ty=Tensor[(120), int32] */;
    %1254 = cast(meta[relay.Constant][47] /* ty=Tensor[(240), int32] */, dtype="int32") /* ty=Tensor[(240), int32] */;
    %1255 = @func_2415() /* ty=Tensor[(12, 14, 11), bool] */;
    %1256 = cast(%1255, dtype="int64") /* ty=Tensor[(12, 14, 11), int64] */;
    %1257 = reshape(%1253, newshape=[8, 15, 1]) /* ty=Tensor[(8, 15, 1), int32] */;
    %1258 = reshape(%1254, newshape=[8, 15, 2]) /* ty=Tensor[(8, 15, 2), int32] */;
    %1259 = reshape(%1256, newshape=[1848, 1]) /* ty=Tensor[(1848, 1), int64] */;
    %1260 = @func_565(%1257, %1258, %1259) /* ty=(Tensor[(8, 15, 2), bool], Tensor[(12, 14, 11), bool], Tensor[(1848, 1), int64]) */;
    %1261 = cast(%var_2872, dtype="int32") /* ty=Tensor[(120), int32] */;
    %1262 = cast(meta[relay.Constant][47] /* ty=Tensor[(240), int32] */, dtype="int32") /* ty=Tensor[(240), int32] */;
    %1263 = %1260.1;
    %1264 = cast(%1263, dtype="int64") /* ty=Tensor[(12, 14, 11), int64] */;
    %1265 = reshape(%1261, newshape=[8, 15, 1]) /* ty=Tensor[(8, 15, 1), int32] */;
    %1266 = reshape(%1262, newshape=[8, 15, 2]) /* ty=Tensor[(8, 15, 2), int32] */;
    %1267 = reshape(%1264, newshape=[1848, 1]) /* ty=Tensor[(1848, 1), int64] */;
    %1268 = @func_565(%1265, %1266, %1267) /* ty=(Tensor[(8, 15, 2), bool], Tensor[(12, 14, 11), bool], Tensor[(1848, 1), int64]) */;
    %1269 = cast(meta[relay.Constant][46] /* ty=Tensor[(210), uint64] */, dtype="uint64") /* ty=Tensor[(210), uint64] */;
    %1270 = cast(meta[relay.Constant][46] /* ty=Tensor[(210), uint64] */, dtype="uint64") /* ty=Tensor[(210), uint64] */;
    %1271 = reshape(%1269, newshape=[5, 7, 6]) /* ty=Tensor[(5, 7, 6), uint64] */;
    %1272 = reshape(%1270, newshape=[5, 7, 6]) /* ty=Tensor[(5, 7, 6), uint64] */;
    %1273 = @func_1838(%1271, %1272) /* ty=Tensor[(5, 7, 6), uint64] */;
    %1274 = cast(%1273, dtype="float32") /* ty=Tensor[(5, 7, 6), float32] */;
    %1275 = log(%1274) /* ty=Tensor[(5, 7, 6), float32] */;
    %1276 = cast(%1273, dtype="bool") /* ty=Tensor[(5, 7, 6), bool] */;
    %1277 = shape_of(%1275, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1278 = cast(%1275, dtype="bool") /* ty=Tensor[(5, 7, 6), bool] */;
    %1279 = dyn.reshape(%1276, %1277, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1280 = @func_2768() /* ty=(Tensor[(5, 7, 6), float64], Tensor[(210), uint64], Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) */;
    %1281 = %1252.0;
    %1282 = cast(%1281, dtype="float32") /* ty=Tensor[(16, 11, 1), float32] */;
    %1283 = reshape(%1282, newshape=[16, 11, 1]) /* ty=Tensor[(16, 11, 1), float32] */;
    %1284 = @func_200(%1283) /* ty=(Tensor[(16, 11, 1), float32],) */;
    %1285 = %1284.0;
    %1286 = cast(%1285, dtype="float32") /* ty=Tensor[(16, 11, 1), float32] */;
    %1287 = reshape(%1286, newshape=[16, 11, 1]) /* ty=Tensor[(16, 11, 1), float32] */;
    %1288 = @func_200(%1287) /* ty=(Tensor[(16, 11, 1), float32],) */;
    %1289 = %1248.0;
    %1290 = %1249.2;
    %1291 = %1268.0;
    %1292 = equal(%1278, %1279) /* ty=Tensor[(5, 7, 6), bool] */;
    %1293 = %1280.2;
    %1294 = %1288.0;
    (%1255, meta[relay.Constant][46] /* ty=Tensor[(210), uint64] */, %1289, %1290, %1281, %var_2860, %1263, %var_2872, meta[relay.Constant][47] /* ty=Tensor[(240), int32] */, %1291, %1292, %1293, %1285, %1294)
  };
  %1295(%var_2912, %var_2913) /* ty=(Tensor[(12, 14, 11), bool], Tensor[(210), uint64], Tensor[(12, 14, 11), bool], Tensor[(1152), int64], Tensor[(16, 11, 1), float32], Tensor[(176), float32], Tensor[(12, 14, 11), bool], Tensor[(120), int32], Tensor[(240), int32], Tensor[(8, 15, 2), bool], Tensor[(5, 7, 6), bool], Tensor[(5, 7, 6), uint64], Tensor[(16, 11, 1), float32], Tensor[(16, 11, 1), float32]) */
}

def @func_5754(%var_5752: Tensor[(16, 11, 1152), int32]) -> (Tensor[(16, 11, ?), bool], Tensor[(16, 11, 1152), bool], Tensor[(16, 11, 1152), bool]) {
  @func_5751(%var_5752) /* ty=(Tensor[(16, 11, ?), bool], Tensor[(16, 11, 1152), bool], Tensor[(16, 11, 1152), bool]) */
}

def @func_5163(%var_5106: Tensor[(2, 924), int64]) -> (Tensor[(12, 14, 11), bool], Tensor[(2, 924), float64]) {
  %1296 = @func_4554() /* ty=(Tensor[(12, 14, 11), bool],) */;
  %1297 = @func_4885() /* ty=(Tensor[(2, 924), int64],) */;
  %1298 = %1297.0;
  %1299 = cast(%var_5106, dtype="int16") /* ty=Tensor[(2, 924), int16] */;
  %1300 = shape_of(%1298, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1301 = cast(%1298, dtype="int16") /* ty=Tensor[(2, 924), int16] */;
  %1302 = dyn.reshape(%1299, %1300, newshape=[]) /* ty=Tensor[(?, ?), int16] */;
  %1303 = maximum(%1301, %1302) /* ty=Tensor[(2, 924), int16] */;
  %1304 = cast(%1303, dtype="int64") /* ty=Tensor[(2, 924), int64] */;
  %1305 = shape_of(%var_5106, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1306 = cast(%var_5106, dtype="int64") /* ty=Tensor[(2, 924), int64] */;
  %1307 = dyn.reshape(%1304, %1305, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %1308 = subtract(%1306, %1307) /* ty=Tensor[(2, 924), int64] */;
  %1309 = cast(%1308, dtype="bool") /* ty=Tensor[(2, 924), bool] */;
  %1310 = shape_of(%var_5106, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1311 = cast(%var_5106, dtype="bool") /* ty=Tensor[(2, 924), bool] */;
  %1312 = dyn.reshape(%1309, %1310, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1313 = less(%1311, %1312) /* ty=Tensor[(2, 924), bool] */;
  %1314 = cast(%1313, dtype="float64") /* ty=Tensor[(2, 924), float64] */;
  %1315 = %1296.0;
  %1316 = sigmoid(%1314) /* ty=Tensor[(2, 924), float64] */;
  (%1315, %1316)
}

def @func_11967() -> Tensor[(12, 14, 11), float64] {
  %1318 = fn () -> Tensor[(12, 14, 11), float64] {
    %1317 = @func_9573() /* ty=(Tensor[(12, 14, 11), float64], Tensor[(1848), int64], Tensor[(240), int32]) */;
    %1317.0
  };
  %1318() /* ty=Tensor[(12, 14, 11), float64] */
}

def @func_8825(%var_8823: Tensor[(11, 16, 4), uint32], %var_8824: Tensor[(11, 16, 4), uint32]) -> (Tensor[(11, 16, 4), bool],) {
  %1324 = fn (%var_8816: Tensor[(11, 16, 4), uint32], %var_8817: Tensor[(11, 16, 4), uint32]) -> (Tensor[(11, 16, 4), bool],) {
    %1319 = cast(%var_8817, dtype="bool") /* ty=Tensor[(11, 16, 4), bool] */;
    %1320 = shape_of(%var_8816, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1321 = cast(%var_8816, dtype="bool") /* ty=Tensor[(11, 16, 4), bool] */;
    %1322 = dyn.reshape(%1319, %1320, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1323 = less(%1321, %1322) /* ty=Tensor[(11, 16, 4), bool] */;
    (%1323,)
  };
  %1324(%var_8823, %var_8824) /* ty=(Tensor[(11, 16, 4), bool],) */
}

def @func_9320() -> (Tensor[(5, 7, 6), bool], Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), int16], Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64], Tensor[(16, 11, ?), float32]) {
  @func_9318() /* ty=(Tensor[(5, 7, 6), bool], Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), int16], Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64], Tensor[(16, 11, ?), float32]) */
}

def @func_9439() -> (Tensor[(1, 120), int32],) {
  %1325 = @func_5583() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(210), uint64], Tensor[(176), float32], Tensor[(1, 120), int32], Tensor[(1848), int64], Tensor[(288), float32]) */;
  %1326 = %1325.3;
  (%1326,)
}

def @func_5198() -> Tensor[(5, 7, 6), uint64] {
  %1328 = fn () -> Tensor[(5, 7, 6), uint64] {
    %1327 = @func_3587() /* ty=(Tensor[(5, 7, 6), uint64],) */;
    %1327.0
  };
  %1328() /* ty=Tensor[(5, 7, 6), uint64] */
}

def @func_12076(%var_12035: Tensor[(176), float32], %var_12071: Tensor[(144, 2), float32]) -> (Tensor[(12, 14, 11), bool], Tensor[(176), float32], Tensor[(15, 15, 9), float32], Tensor[(2, 924), int64], Tensor[(144, 2), int64]) {
  %1329 = @func_7820() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(9, 12, 6), float32], Tensor[(648), float32]) */;
  %1330 = @func_4885() /* ty=(Tensor[(2, 924), int64],) */;
  %1331 = %1329.0;
  %1332 = cast(%1331, dtype="int64") /* ty=Tensor[(12, 14, 11), int64] */;
  %1333 = cast(%var_12035, dtype="float32") /* ty=Tensor[(176), float32] */;
  %1334 = reshape(%1332, newshape=[924, 2]) /* ty=Tensor[(924, 2), int64] */;
  %1335 = reshape(%1333, newshape=[176]) /* ty=Tensor[(176), float32] */;
  %1336 = @func_12027(%1334, %1335) /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(210), uint64], Tensor[(924, 2), int64], Tensor[(144, 2), float32], Tensor[(176), float32]) */;
  %1337 = %1336.3;
  %1338 = cast(%var_12071, dtype="int64") /* ty=Tensor[(144, 2), int64] */;
  %1339 = shape_of(%1337, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1340 = cast(%1337, dtype="int64") /* ty=Tensor[(144, 2), int64] */;
  %1341 = dyn.reshape(%1338, %1339, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %1342 = @func_6728() /* ty=Tensor[(15, 15, 9), float32] */;
  %1343 = %1330.0;
  %1344 = bitwise_and(%1340, %1341) /* ty=Tensor[(144, 2), int64] */;
  (%1331, %var_12035, %1342, %1343, %1344)
}

def @func_13343(%var_13319: Tensor[(24, 10), int32]) -> (Tensor[(5, 7, 6), bool], Tensor[(240), int32], Tensor[(24, 10), int32], Tensor[(1152), int64]) {
  %1345 = @func_7541() /* ty=(Tensor[(210), uint64], Tensor[(5, 7, 6), bool], Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), int32], Tensor[(176), float32]) */;
  %1346 = cast(%var_13319, dtype="int32") /* ty=Tensor[(24, 10), int32] */;
  %1347 = reshape(%1346, newshape=[240]) /* ty=Tensor[(240), int32] */;
  %1348 = @func_10865(%1347) /* ty=(Tensor[(15, 15, 9), float32], Tensor[(1848, 1), int64], Tensor[(1, 120), int32], Tensor[(240), int32], Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64]) */;
  %1349 = @func_6587() /* ty=(Tensor[(1152), int64],) */;
  %1350 = %1345.1;
  %1351 = %1348.3;
  %1352 = %1349.0;
  (%1350, %1351, %var_13319, %1352)
}

def @func_7356() -> (Tensor[(5, 7, 6), bool],) {
  %1355 = fn () -> (Tensor[(5, 7, 6), bool],) {
    %1353 = @func_3950() /* ty=(Tensor[(5, 7, 6), bool],) */;
    %1354 = %1353.0;
    (%1354,)
  };
  %1355() /* ty=(Tensor[(5, 7, 6), bool],) */
}

def @func_5886(%var_5884: Tensor[(5, 7, 6), uint64]) -> Tensor[(5, 7, 6), float64] {
  @func_5883(%var_5884) /* ty=Tensor[(5, 7, 6), float64] */
}

def @func_3608() -> (Tensor[(5, 7, 6), bool],) {
  %1363 = fn () -> (Tensor[(5, 7, 6), bool],) {
    %1356 = @func_3587() /* ty=(Tensor[(5, 7, 6), uint64],) */;
    %1357 = %1356.0;
    %1358 = cast(meta[relay.Constant][48] /* ty=Tensor[(5, 7, 6), uint64] */, dtype="bool") /* ty=Tensor[(5, 7, 6), bool] */;
    %1359 = shape_of(%1357, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1360 = cast(%1357, dtype="bool") /* ty=Tensor[(5, 7, 6), bool] */;
    %1361 = dyn.reshape(%1358, %1359, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1362 = not_equal(%1360, %1361) /* ty=Tensor[(5, 7, 6), bool] */;
    (%1362,)
  };
  %1363() /* ty=(Tensor[(5, 7, 6), bool],) */
}

def @func_12100() -> Tensor[(12, 14, 11), bool] {
  %1364 = @func_5583() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(210), uint64], Tensor[(176), float32], Tensor[(1, 120), int32], Tensor[(1848), int64], Tensor[(288), float32]) */;
  %1364.0
}

def @func_5608() -> (Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) {
  @func_5606() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) */
}

def @func_7543() -> (Tensor[(210), uint64], Tensor[(5, 7, 6), bool], Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), int32], Tensor[(176), float32]) {
  @func_7541() /* ty=(Tensor[(210), uint64], Tensor[(5, 7, 6), bool], Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), int32], Tensor[(176), float32]) */
}

def @func_6794(%var_6793: Tensor[(8, 9, 6), float64]) -> (Tensor[(8, 9, 6), float64],) {
  %1367 = fn (%var_6782: Tensor[(8, 9, 6), float64]) -> (Tensor[(8, 9, 6), float64],) {
    %1365 = cast(%var_6782, dtype="float64") /* ty=Tensor[(8, 9, 6), float64] */;
    %1366 = sin(%1365) /* ty=Tensor[(8, 9, 6), float64] */;
    (%1366,)
  };
  %1367(%var_6793) /* ty=(Tensor[(8, 9, 6), float64],) */
}

def @func_12498() -> (Tensor[(12, 14, 11), bool], Tensor[(16, 11, ?), bool], Tensor[(5, 7, 6), uint64]) {
  %1373 = fn () -> (Tensor[(12, 14, 11), bool], Tensor[(16, 11, ?), bool], Tensor[(5, 7, 6), uint64]) {
    %1368 = @func_4554() /* ty=(Tensor[(12, 14, 11), bool],) */;
    %1369 = @func_10216() /* ty=(Tensor[(16, 11, ?), float64], Tensor[(5, 7, 6), float64], Tensor[(5, 7, 6), uint64]) */;
    %1370 = %1368.0;
    %1371 = @func_12160() /* ty=Tensor[(16, 11, ?), bool] */;
    %1372 = %1369.2;
    (%1370, %1371, %1372)
  };
  %1373() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(16, 11, ?), bool], Tensor[(5, 7, 6), uint64]) */
}

def @func_14800() -> (Tensor[(5, 7, 6), uint64], Tensor[(12, 11, 7), uint32]) {
  @func_14798() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(12, 11, 7), uint32]) */
}

def @func_4555() -> (Tensor[(12, 14, 11), bool],) {
  %1376 = fn () -> (Tensor[(12, 14, 11), bool],) {
    %1374 = @func_3226() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64]) */;
    %1375 = %1374.0;
    (%1375,)
  };
  %1376() /* ty=(Tensor[(12, 14, 11), bool],) */
}

def @func_9091(%var_9089: Tensor[(224), float32]) -> (Tensor[(12, 14, 11), uint32], Tensor[(8, 7, 4), int8], Tensor[(224), float32]) {
  @func_9088(%var_9089) /* ty=(Tensor[(12, 14, 11), uint32], Tensor[(8, 7, 4), int8], Tensor[(224), float32]) */
}

def @func_9415() -> (Tensor[(5, 7, 6), uint64],) {
  @func_9413() /* ty=(Tensor[(5, 7, 6), uint64],) */
}

def @func_11014() -> Tensor[(12, 14, 11), int16] {
  %1378 = fn () -> Tensor[(12, 14, 11), int16] {
    %1377 = @func_4440() /* ty=(Tensor[(5, 7, 6), bool], Tensor[(12, 14, 11), int16]) */;
    %1377.1
  };
  %1378() /* ty=Tensor[(12, 14, 11), int16] */
}

def @func_11144() -> (Tensor[(15, 15, 9), float32],) {
  @func_11142() /* ty=(Tensor[(15, 15, 9), float32],) */
}

def @func_565(%var_545: Tensor[(8, 15, 1), int32], %var_546: Tensor[(8, 15, 2), int32], %var_554: Tensor[(1848, 1), int64]) -> (Tensor[(8, 15, 2), bool], Tensor[(12, 14, 11), bool], Tensor[(1848, 1), int64]) {
  %1379 = cast(%var_545, dtype="bool") /* ty=Tensor[(8, 15, 1), bool] */;
  %1380 = cast(%var_546, dtype="bool") /* ty=Tensor[(8, 15, 2), bool] */;
  %1381 = cast(%var_554, dtype="int64") /* ty=Tensor[(1848, 1), int64] */;
  %1382 = cast(%var_554, dtype="int64") /* ty=Tensor[(1848, 1), int64] */;
  %1383 = reshape(%1381, newshape=[12, 14, 11]) /* ty=Tensor[(12, 14, 11), int64] */;
  %1384 = reshape(%1382, newshape=[12, 14, 11]) /* ty=Tensor[(12, 14, 11), int64] */;
  %1385 = @func_54(%1383, %1384) /* ty=(Tensor[(12, 14, 11), uint32], Tensor[(12, 14, 11), bool]) */;
  %1386 = less(%1379, %1380) /* ty=Tensor[(8, 15, 2), bool] */;
  %1387 = %1385.1;
  (%1386, %1387, %var_554)
}

def @func_4216() -> (Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), int16]) {
  @func_4214() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), int16]) */
}

def @func_15009() -> (Tensor[(5, 7, 6), uint64],) {
  %1390 = fn () -> (Tensor[(5, 7, 6), uint64],) {
    %1388 = @func_9413() /* ty=(Tensor[(5, 7, 6), uint64],) */;
    %1389 = %1388.0;
    (%1389,)
  };
  %1390() /* ty=(Tensor[(5, 7, 6), uint64],) */
}

def @func_11393() -> (Tensor[(9, 12, 6), float32], Tensor[(1152), int64], Tensor[(210), uint64], Tensor[(15, 15, 9), float32]) {
  @func_11391() /* ty=(Tensor[(9, 12, 6), float32], Tensor[(1152), int64], Tensor[(210), uint64], Tensor[(15, 15, 9), float32]) */
}

def @func_13885() -> (Tensor[(1, 120), int32], Tensor[(12, 14, 11), bool]) {
  @func_13883() /* ty=(Tensor[(1, 120), int32], Tensor[(12, 14, 11), bool]) */
}

def @func_5361() -> (Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) {
  @func_5359() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) */
}

def @func_2292() -> Tensor[(5, 7, 6), uint64] {
  @func_2290() /* ty=Tensor[(5, 7, 6), uint64] */
}

def @func_6077(%var_6069: Tensor[(8, 2, 7), float64]) -> Tensor[(8, 2, 7), float64] {
  %1391 = cast(%var_6069, dtype="float64") /* ty=Tensor[(8, 2, 7), float64] */;
  sqrt(%1391) /* ty=Tensor[(8, 2, 7), float64] */
}

def @func_6902() -> (Tensor[(5, 7, 6), float64], Tensor[(15, 15, 9), float32]) {
  %1392 = @func_2768() /* ty=(Tensor[(5, 7, 6), float64], Tensor[(210), uint64], Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) */;
  %1393 = @func_2575() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(15, 15, 9), float32], Tensor[(1152), int64], Tensor[(210), uint64]) */;
  %1394 = %1392.0;
  %1395 = %1393.1;
  (%1394, %1395)
}

def @func_1959(%var_1958: Tensor[(9, 2, 16), float32]) -> (Tensor[(9, 2, 16), float32],) {
  %1398 = fn (%var_1954: Tensor[(9, 2, 16), float32]) -> (Tensor[(9, 2, 16), float32],) {
    %1396 = cast(%var_1954, dtype="float32") /* ty=Tensor[(9, 2, 16), float32] */;
    %1397 = rsqrt(%1396) /* ty=Tensor[(9, 2, 16), float32] */;
    (%1397,)
  };
  %1398(%var_1958) /* ty=(Tensor[(9, 2, 16), float32],) */
}

def @func_9626(%var_9624: Tensor[(6, 14, 14), float32]) -> (Tensor[(6, 14, 14), float32],) {
  @func_9623(%var_9624) /* ty=(Tensor[(6, 14, 14), float32],) */
}

def @func_8437() -> Tensor[(5, 7, 6), uint64] {
  %1400 = fn () -> Tensor[(5, 7, 6), uint64] {
    %1399 = @func_3868() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64], Tensor[(16, 11, ?), bool]) */;
    %1399.0
  };
  %1400() /* ty=Tensor[(5, 7, 6), uint64] */
}

def @func_6741(%var_6739: Tensor[(1152), int64]) -> (Tensor[(210), uint64], Tensor[(5, 7, 6), uint64], Tensor[(1152), int64]) {
  %1401 = @func_6045() /* ty=(Tensor[(12, 14, 11), int16], Tensor[(5, 7, 6), float64], Tensor[(210), uint64], Tensor[(12, 14, 11), bool]) */;
  %1402 = cast(%var_6739, dtype="int64") /* ty=Tensor[(1152), int64] */;
  %1403 = cast(%var_6739, dtype="int64") /* ty=Tensor[(1152), int64] */;
  %1404 = %1401.2;
  %1405 = cast(%1404, dtype="uint64") /* ty=Tensor[(210), uint64] */;
  %1406 = reshape(%1402, newshape=[8, 16, 9]) /* ty=Tensor[(8, 16, 9), int64] */;
  %1407 = reshape(%1403, newshape=[8, 16, 9]) /* ty=Tensor[(8, 16, 9), int64] */;
  %1408 = reshape(%1405, newshape=[210]) /* ty=Tensor[(210), uint64] */;
  %1409 = @func_2442(%1406, %1407, %1408) /* ty=(Tensor[(8, 16, 9), bool], Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64], Tensor[(210), uint64]) */;
  %1410 = %1409.2;
  (%1404, %1410, %var_6739)
}

def @func_5963() -> Tensor[(12, 14, 11), bool] {
  %1411 = fn () -> Tensor[(12, 14, 11), bool] {
    @func_3417() /* ty=Tensor[(12, 14, 11), bool] */
  };
  %1411() /* ty=Tensor[(12, 14, 11), bool] */
}

def @func_5331() -> (Tensor[(5, 7, 6), uint64], Tensor[(15, 15, 9), float32]) {
  @func_5329() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(15, 15, 9), float32]) */
}

def @func_4415() -> (Tensor[(8, 12, 3), bool], Tensor[(16, 11, 1), float32], Tensor[(176), float32]) {
  %1412 = cast(True /* ty=bool */, dtype="bool") /* ty=bool */;
  %1413 = cast(meta[relay.Constant][49] /* ty=Tensor[(8, 12, 3), bool] */, dtype="bool") /* ty=Tensor[(8, 12, 3), bool] */;
  %1414 = cast(meta[relay.Constant][50] /* ty=Tensor[(176), float32] */, dtype="float32") /* ty=Tensor[(176), float32] */;
  %1415 = reshape(%1414, newshape=[16, 11, 1]) /* ty=Tensor[(16, 11, 1), float32] */;
  %1416 = @func_200(%1415) /* ty=(Tensor[(16, 11, 1), float32],) */;
  %1417 = logical_or(%1412, %1413) /* ty=Tensor[(8, 12, 3), bool] */;
  %1418 = %1416.0;
  (%1417, %1418, meta[relay.Constant][50] /* ty=Tensor[(176), float32] */)
}

def @func_6993() -> Tensor[(288), float32] {
  @func_6991() /* ty=Tensor[(288), float32] */
}

def @func_2221() -> (Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), bool]) {
  @func_2219() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(12, 14, 11), bool]) */
}

def @func_12030(%var_12028: Tensor[(924, 2), int64], %var_12029: Tensor[(176), float32]) -> (Tensor[(5, 7, 6), uint64], Tensor[(210), uint64], Tensor[(924, 2), int64], Tensor[(144, 2), float32], Tensor[(176), float32]) {
  %1428 = fn (%var_12019: Tensor[(924, 2), int64], %var_12021: Tensor[(176), float32]) -> (Tensor[(5, 7, 6), uint64], Tensor[(210), uint64], Tensor[(924, 2), int64], Tensor[(144, 2), float32], Tensor[(176), float32]) {
    %1419 = cast(%var_12019, dtype="int64") /* ty=Tensor[(924, 2), int64] */;
    %1420 = cast(meta[relay.Constant][51] /* ty=Tensor[(144, 2), float32] */, dtype="float32") /* ty=Tensor[(144, 2), float32] */;
    %1421 = cast(%var_12021, dtype="float32") /* ty=Tensor[(176), float32] */;
    %1422 = reshape(%1419, newshape=[1848]) /* ty=Tensor[(1848), int64] */;
    %1423 = reshape(%1420, newshape=[288]) /* ty=Tensor[(288), float32] */;
    %1424 = reshape(%1421, newshape=[176]) /* ty=Tensor[(176), float32] */;
    %1425 = @func_4174(%1422, %1423, %1424) /* ty=(Tensor[(210), uint64], Tensor[(5, 7, 6), uint64], Tensor[(120), int32], Tensor[(240), int32], Tensor[(1848), int64], Tensor[(12, 14, 11), float32], Tensor[(288), float32], Tensor[(288), float32], Tensor[(176), float32]) */;
    %1426 = @func_4850() /* ty=Tensor[(5, 7, 6), uint64] */;
    %1427 = %1425.0;
    (%1426, %1427, %var_12019, meta[relay.Constant][51] /* ty=Tensor[(144, 2), float32] */, %var_12021)
  };
  %1428(%var_12028, %var_12029) /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(210), uint64], Tensor[(924, 2), int64], Tensor[(144, 2), float32], Tensor[(176), float32]) */
}

def @func_10903() -> (Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), int16]) {
  %1433 = fn () -> (Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), int16]) {
    %1429 = @func_8589() /* ty=(Tensor[(12, 14, 11), bool],) */;
    %1430 = @func_4440() /* ty=(Tensor[(5, 7, 6), bool], Tensor[(12, 14, 11), int16]) */;
    %1431 = %1429.0;
    %1432 = %1430.1;
    (%1431, %1432)
  };
  %1433() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), int16]) */
}

def @func_6912() -> Tensor[(15, 15, 9), float32] {
  %1434 = @func_5329() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(15, 15, 9), float32]) */;
  %1434.1
}

def @func_12259() -> (Tensor[(648), float32], Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64], Tensor[(9, 12, 6), float32], Tensor[(5, 7, 6), bool], Tensor[(12, 14, 11), bool]) {
  @func_12257() /* ty=(Tensor[(648), float32], Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64], Tensor[(9, 12, 6), float32], Tensor[(5, 7, 6), bool], Tensor[(12, 14, 11), bool]) */
}

def @func_6855() -> Tensor[(5, 7, 6), uint64] {
  @func_6853() /* ty=Tensor[(5, 7, 6), uint64] */
}

def @func_3839() -> (Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) {
  %1439 = fn () -> (Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) {
    %1435 = @func_3226() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(5, 7, 6), uint64]) */;
    %1436 = @func_2398() /* ty=(Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64]) */;
    %1437 = %1435.1;
    %1438 = %1436.1;
    (%1437, %1438)
  };
  %1439() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) */
}

def @func_6774() -> (Tensor[(5, 7, 6), uint64],) {
  %1440 = @func_6135() /* ty=Tensor[(5, 7, 6), uint64] */;
  (%1440,)
}

def @func_13084() -> (Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64]) {
  @func_13082() /* ty=(Tensor[(15, 15, 9), float32], Tensor[(5, 7, 6), uint64]) */
}

def @func_14294(%var_14291: Tensor[(16, 9, 2), float32], %var_14292: Tensor[(975), float64], %var_14293: Tensor[(1848), int64]) -> (Tensor[(16, 9, 2), float64], Tensor[(12, 11, 7), uint32], Tensor[(975), float64], Tensor[(12, 14, 11), bool], Tensor[(1848), int64], Tensor[(15, 15, 9), float32], Tensor[(12, 14, 11), bool]) {
  %1462 = fn (%var_14222: Tensor[(16, 9, 2), float32], %var_14233: Tensor[(975), float64], %var_14249: Tensor[(1848), int64]) -> (Tensor[(16, 9, 2), float64], Tensor[(12, 11, 7), uint32], Tensor[(975), float64], Tensor[(12, 14, 11), bool], Tensor[(1848), int64], Tensor[(15, 15, 9), float32], Tensor[(12, 14, 11), bool]) {
    %1441 = cast(%var_14222, dtype="float32") /* ty=Tensor[(16, 9, 2), float32] */;
    %1442 = tan(%1441) /* ty=Tensor[(16, 9, 2), float32] */;
    %1443 = cast(%1442, dtype="float64") /* ty=Tensor[(16, 9, 2), float64] */;
    %1444 = shape_of(%var_14222, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1445 = cast(%var_14222, dtype="float64") /* ty=Tensor[(16, 9, 2), float64] */;
    %1446 = dyn.reshape(%1443, %1444, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1447 = cast(%var_14233, dtype="float64") /* ty=Tensor[(975), float64] */;
    %1448 = cast(%var_14233, dtype="float64") /* ty=Tensor[(975), float64] */;
    %1449 = reshape(%1447, newshape=[15, 13, 5]) /* ty=Tensor[(15, 13, 5), float64] */;
    %1450 = reshape(%1448, newshape=[15, 13, 5]) /* ty=Tensor[(15, 13, 5), float64] */;
    %1451 = @func_8107(%1449, %1450) /* ty=(Tensor[(15, 13, 5), int64], Tensor[(12, 11, 7), uint32], Tensor[(924, 1), uint32], Tensor[(15, 13, 5), float64]) */;
    %1452 = cast(%var_14249, dtype="int64") /* ty=Tensor[(1848), int64] */;
    %1453 = reshape(%1452, newshape=[2, 924]) /* ty=Tensor[(2, 924), int64] */;
    %1454 = @func_5163(%1453) /* ty=(Tensor[(12, 14, 11), bool], Tensor[(2, 924), float64]) */;
    %1455 = @func_5329() /* ty=(Tensor[(5, 7, 6), uint64], Tensor[(15, 15, 9), float32]) */;
    %1456 = @func_4488() /* ty=(Tensor[(12, 14, 11), bool], Tensor[(12, 14, 11), bool]) */;
    %1457 = divide(%1445, %1446) /* ty=Tensor[(16, 9, 2), float64] */;
    %1458 = %1451.1;
    %1459 = %1454.0;
    %1460 = %1455.1;
    %1461 = %1456.1;
    (%1457, %1458, %var_14233, %1459, %var_14249, %1460, %1461)
  };
  %1462(%var_14291, %var_14292, %var_14293) /* ty=(Tensor[(16, 9, 2), float64], Tensor[(12, 11, 7), uint32], Tensor[(975), float64], Tensor[(12, 14, 11), bool], Tensor[(1848), int64], Tensor[(15, 15, 9), float32], Tensor[(12, 14, 11), bool]) */
}

def @func_11391() -> (Tensor[(9, 12, 6), float32], Tensor[(1152), int64], Tensor[(210), uint64], Tensor[(15, 15, 9), float32]) {
  %1463 = @func_4943() /* ty=(Tensor[(12, 14, 11), int16], Tensor[(5, 7, 6), uint64], Tensor[(9, 12, 6), float32], Tensor[(648), float32], Tensor[(12, 14, 11), bool]) */;
  %1464 = @func_5055() /* ty=(Tensor[(1152), int64],) */;
  %1465 = @func_2768() /* ty=(Tensor[(5, 7, 6), float64], Tensor[(210), uint64], Tensor[(5, 7, 6), uint64], Tensor[(5, 7, 6), uint64]) */;
  %1466 = @func_8957() /* ty=(Tensor[(15, 15, 9), float32],) */;
  %1467 = %1463.2;
  %1468 = %1464.0;
  %1469 = %1465.1;
  %1470 = %1466.0;
  (%1467, %1468, %1469, %1470)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen922/build/output.py", line 4619, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  79: TVMFuncCall
  78: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  77: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  76: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  75: tvm::transform::Pass::operator()(tvm::IRModule) const
  74: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  73: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  72: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  71: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  70: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  69: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [14:48:27] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int


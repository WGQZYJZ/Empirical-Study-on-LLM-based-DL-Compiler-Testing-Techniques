import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_63 = relay.var("var_63", dtype = "float32", shape = (11, 4, 2))#candidate|63|(11, 4, 2)|var|float32
var_64 = relay.var("var_64", dtype = "float32", shape = (11, 4, 2))#candidate|64|(11, 4, 2)|var|float32
bop_65 = relay.floor_divide(var_63.astype('float32'), relay.reshape(var_64.astype('float32'), relay.shape_of(var_63))) # shape=(11, 4, 2)
output = relay.Tuple([bop_65,])
output2 = relay.Tuple([bop_65,])
func_81 = relay.Function([var_63,var_64,], output)
mod['func_81'] = func_81
mod = relay.transform.InferType()(mod)
mutated_mod['func_81'] = func_81
mutated_mod = relay.transform.InferType()(mutated_mod)
func_81_call = mutated_mod.get_global_var('func_81')
var_83 = relay.var("var_83", dtype = "float32", shape = (11, 4, 2))#candidate|83|(11, 4, 2)|var|float32
var_84 = relay.var("var_84", dtype = "float32", shape = (11, 4, 2))#candidate|84|(11, 4, 2)|var|float32
call_82 = func_81_call(var_83,var_84,)
output = call_82
func_85 = relay.Function([var_83,var_84,], output)
mutated_mod['func_85'] = func_85
mutated_mod = relay.transform.InferType()(mutated_mod)
const_90 = relay.const([[[-6.320735,7.411207,-4.295432,-2.012306,0.934885,-4.357623,-3.626976,-8.259160,-2.759454,-6.480049,-6.886582,3.646248],[7.092949,7.257279,3.974441,6.236753,-2.845287,2.645070,4.913347,-1.204448,5.002697,-6.971388,5.643165,2.044099]],[[-1.610449,2.049387,-3.728745,2.791092,1.892509,4.300116,1.592966,-1.555588,-7.954363,-0.807589,9.483706,-9.984346],[-9.232416,-8.862724,6.824965,9.202294,5.607361,6.633960,-8.836389,8.663541,4.745713,-6.099492,4.217065,2.443000]],[[-8.383969,-3.969693,-2.333517,-0.115273,7.553626,-3.628517,-8.046111,-9.493323,0.750735,3.153514,6.536154,8.552463],[6.830844,7.983222,-2.767062,-2.643054,6.003725,-7.317696,-7.625779,-4.561834,9.881921,-4.048005,-2.440224,4.841202]],[[-5.674652,0.449972,0.440827,9.644770,-0.584961,-2.105627,1.717222,2.353989,8.805736,-2.050981,-5.691167,0.707172],[-5.736396,1.608328,9.758277,-8.351791,3.920768,8.714993,-3.776221,-7.351424,9.558796,3.907416,6.819573,6.599042]],[[-5.761235,-6.609068,-1.494259,-5.438301,-5.426927,-6.539920,-9.453399,2.756676,-0.431884,-8.114657,9.439807,-3.429789],[6.258626,1.536448,-1.789345,5.075018,2.325947,-8.822169,-5.329319,-7.581281,-2.532671,-7.317779,6.068565,6.456390]],[[-2.802616,-2.565741,-7.794547,-3.352183,-9.751665,-0.442633,3.508743,5.973812,-6.277239,-4.702295,-2.317347,1.847165],[2.942288,1.674631,7.475357,3.217112,-4.430847,-9.025946,-0.506028,1.451542,-4.352670,9.162059,9.035727,-9.800273]],[[-8.320328,-2.476247,3.524167,-5.132585,3.067352,1.758559,-6.769429,-9.453759,-5.329707,1.168936,-0.702612,3.756014],[-3.560644,-1.121470,7.639300,6.452622,6.884382,-9.116763,1.799931,-5.820757,-7.599195,-6.399203,-7.060641,-5.379667]],[[9.488497,4.404881,-7.200626,-8.979399,0.969279,-4.787940,-4.932660,2.038407,-8.710001,-6.214941,-4.209161,-8.551210],[4.148936,8.859821,-3.098247,-4.332256,2.040684,7.324453,6.391056,-0.869855,-5.545711,0.921268,4.039496,-3.065348]],[[2.913676,4.023218,9.690003,-1.110714,-1.717351,-6.807138,0.719853,-1.289518,-4.542572,-8.939088,-1.304139,1.322017],[-5.760144,8.747702,6.036149,1.501753,-3.384793,-4.933758,-0.891401,-2.963257,-9.366002,2.195346,-3.060873,-5.548438]],[[8.951664,-3.410501,3.725413,-7.278808,-4.554033,0.566135,-4.875577,-6.685358,-4.806215,-4.155049,-3.813144,7.215685],[-8.867374,-5.402791,7.671248,5.598295,-4.320474,-3.943657,7.925562,9.838251,-0.664846,1.648691,7.985155,7.440776]],[[-3.676931,-4.840762,4.345528,6.524153,0.411390,-9.764372,-5.195317,7.666447,6.536982,9.260608,0.387062,-9.768787],[8.553895,-2.154457,-6.735648,-5.890704,2.649228,5.460812,7.724803,-5.427523,-4.164750,2.376122,8.213976,7.107057]],[[-2.866726,4.530423,0.713626,0.302405,-6.894250,2.961270,7.753155,7.783345,1.840666,3.646004,-8.321249,8.077681],[-7.840765,0.345987,3.476588,-7.413882,9.085769,2.688743,-8.161411,-6.517631,-0.863666,4.373604,9.505183,8.463972]]], dtype = "float64")#candidate|90|(12, 2, 12)|const|float64
uop_91 = relay.log10(const_90.astype('float64')) # shape=(12, 2, 12)
func_81_call = mod.get_global_var('func_81')
func_85_call = mutated_mod.get_global_var('func_85')
const_98 = relay.const([[-1.497485,-5.714437,6.133385,-0.610851],[-7.177302,9.716671,0.166314,9.038571],[2.487633,-7.867541,8.137900,1.443164],[-0.550317,-9.183241,-8.498815,-0.044483],[-5.973465,6.261389,-0.642732,-0.218450],[-5.890212,-5.296029,7.653201,-8.315288],[-1.897117,6.898543,-1.537459,-8.433132],[8.879566,8.564820,4.815397,-0.259444],[2.787637,7.762926,-2.892852,-4.820819],[6.901200,-5.337336,-0.105622,5.863641],[8.980110,3.526664,-5.233332,-6.937501],[-9.849171,0.125802,4.446916,9.959169],[-3.279497,8.880984,0.689105,4.140260],[-2.530604,5.648591,-2.465789,7.041619],[0.873500,3.016942,2.433699,-4.007637],[-0.271459,9.837759,1.153343,-5.874778],[9.003161,-9.462918,6.678036,-4.700586],[7.735711,-7.399569,-1.497668,-6.513679],[-3.548919,1.747701,3.382385,-3.612309],[-0.833617,-6.231157,-2.967558,8.779970],[-5.028049,-1.256877,0.436172,0.410159],[8.274239,8.976718,-0.029615,8.271670]], dtype = "float32")#candidate|98|(22, 4)|const|float32
call_97 = relay.TupleGetItem(func_81_call(relay.reshape(const_98.astype('float32'), [11, 4, 2]), relay.reshape(const_98.astype('float32'), [11, 4, 2]), ), 0)
call_99 = relay.TupleGetItem(func_85_call(relay.reshape(const_98.astype('float32'), [11, 4, 2]), relay.reshape(const_98.astype('float32'), [11, 4, 2]), ), 0)
output = relay.Tuple([uop_91,call_97,const_98,])
output2 = relay.Tuple([uop_91,call_99,const_98,])
func_101 = relay.Function([], output)
mod['func_101'] = func_101
mod = relay.transform.InferType()(mod)
output = func_101()
func_102 = relay.Function([], output)
mutated_mod['func_102'] = func_102
mutated_mod = relay.transform.InferType()(mutated_mod)
func_101_call = mod.get_global_var('func_101')
func_102_call = mutated_mod.get_global_var('func_102')
call_128 = relay.TupleGetItem(func_101_call(), 0)
call_129 = relay.TupleGetItem(func_102_call(), 0)
func_81_call = mod.get_global_var('func_81')
func_85_call = mutated_mod.get_global_var('func_85')
const_173 = relay.const([0.391265,1.547009,-3.026075,8.646845,5.970082,-7.901245,-1.529038,-5.737882,5.529727,2.868589,-5.393358,6.208417,6.577678,-9.842798,-9.799455,3.916749,-5.762101,-3.488664,3.382612,-2.891306,7.506983,-7.042400,-5.142771,-0.087227,-1.208010,-3.373751,-4.016081,-0.003446,-8.918959,6.584543,-2.037339,1.748219,9.375579,6.836968,8.093139,9.929452,6.563052,9.113518,7.738957,5.001901,7.392556,-0.582670,-4.342995,-8.101211,7.984360,9.735200,-5.465064,5.008411,-3.633774,-0.123904,-8.125561,-5.548982,-5.243076,0.697705,-6.699613,6.694486,-6.660553,9.534516,3.100958,7.313855,8.917165,-4.034507,7.147020,-7.649343,6.756414,-0.021644,-0.801806,6.871204,-4.974164,-3.547390,3.952964,-2.988140,6.337831,-5.887448,6.880726,-8.863569,-5.452591,-0.694203,-6.934338,5.478106,-7.742269,9.911256,7.761216,2.735114,8.328648,-7.610092,5.272522,-1.254893], dtype = "float32")#candidate|173|(88,)|const|float32
call_172 = relay.TupleGetItem(func_81_call(relay.reshape(const_173.astype('float32'), [11, 4, 2]), relay.reshape(const_173.astype('float32'), [11, 4, 2]), ), 0)
call_174 = relay.TupleGetItem(func_85_call(relay.reshape(const_173.astype('float32'), [11, 4, 2]), relay.reshape(const_173.astype('float32'), [11, 4, 2]), ), 0)
uop_176 = relay.erf(call_128.astype('float64')) # shape=(12, 2, 12)
uop_178 = relay.erf(call_129.astype('float64')) # shape=(12, 2, 12)
output = relay.Tuple([call_172,const_173,uop_176,])
output2 = relay.Tuple([call_174,const_173,uop_178,])
func_181 = relay.Function([], output)
mod['func_181'] = func_181
mod = relay.transform.InferType()(mod)
mutated_mod['func_181'] = func_181
mutated_mod = relay.transform.InferType()(mutated_mod)
func_181_call = mutated_mod.get_global_var('func_181')
call_182 = func_181_call()
output = call_182
func_183 = relay.Function([], output)
mutated_mod['func_183'] = func_183
mutated_mod = relay.transform.InferType()(mutated_mod)
func_101_call = mod.get_global_var('func_101')
func_102_call = mutated_mod.get_global_var('func_102')
call_262 = relay.TupleGetItem(func_101_call(), 2)
call_263 = relay.TupleGetItem(func_102_call(), 2)
func_81_call = mod.get_global_var('func_81')
func_85_call = mutated_mod.get_global_var('func_85')
call_264 = relay.TupleGetItem(func_81_call(relay.reshape(call_262.astype('float32'), [11, 4, 2]), relay.reshape(call_262.astype('float32'), [11, 4, 2]), ), 0)
call_265 = relay.TupleGetItem(func_85_call(relay.reshape(call_262.astype('float32'), [11, 4, 2]), relay.reshape(call_262.astype('float32'), [11, 4, 2]), ), 0)
bop_266 = relay.logical_or(call_262.astype('bool'), relay.reshape(call_264.astype('bool'), relay.shape_of(call_262))) # shape=(22, 4)
bop_269 = relay.logical_or(call_263.astype('bool'), relay.reshape(call_265.astype('bool'), relay.shape_of(call_263))) # shape=(22, 4)
func_181_call = mod.get_global_var('func_181')
func_183_call = mutated_mod.get_global_var('func_183')
call_295 = relay.TupleGetItem(func_181_call(), 1)
call_296 = relay.TupleGetItem(func_183_call(), 1)
func_81_call = mod.get_global_var('func_81')
func_85_call = mutated_mod.get_global_var('func_85')
call_297 = relay.TupleGetItem(func_81_call(relay.reshape(call_264.astype('float32'), [11, 4, 2]), relay.reshape(bop_266.astype('float32'), [11, 4, 2]), ), 0)
call_298 = relay.TupleGetItem(func_85_call(relay.reshape(call_264.astype('float32'), [11, 4, 2]), relay.reshape(bop_266.astype('float32'), [11, 4, 2]), ), 0)
func_81_call = mod.get_global_var('func_81')
func_85_call = mutated_mod.get_global_var('func_85')
call_299 = relay.TupleGetItem(func_81_call(relay.reshape(call_295.astype('float32'), [11, 4, 2]), relay.reshape(call_295.astype('float32'), [11, 4, 2]), ), 0)
call_300 = relay.TupleGetItem(func_85_call(relay.reshape(call_295.astype('float32'), [11, 4, 2]), relay.reshape(call_295.astype('float32'), [11, 4, 2]), ), 0)
output = relay.Tuple([bop_266,call_295,call_297,call_299,])
output2 = relay.Tuple([bop_269,call_296,call_298,call_300,])
func_305 = relay.Function([], output)
mod['func_305'] = func_305
mod = relay.transform.InferType()(mod)
mutated_mod['func_305'] = func_305
mutated_mod = relay.transform.InferType()(mutated_mod)
func_305_call = mutated_mod.get_global_var('func_305')
call_306 = func_305_call()
output = call_306
func_307 = relay.Function([], output)
mutated_mod['func_307'] = func_307
mutated_mod = relay.transform.InferType()(mutated_mod)
func_181_call = mod.get_global_var('func_181')
func_183_call = mutated_mod.get_global_var('func_183')
call_322 = relay.TupleGetItem(func_181_call(), 0)
call_323 = relay.TupleGetItem(func_183_call(), 0)
output = call_322
output2 = call_323
func_333 = relay.Function([], output)
mod['func_333'] = func_333
mod = relay.transform.InferType()(mod)
mutated_mod['func_333'] = func_333
mutated_mod = relay.transform.InferType()(mutated_mod)
func_333_call = mutated_mod.get_global_var('func_333')
call_334 = func_333_call()
output = call_334
func_335 = relay.Function([], output)
mutated_mod['func_335'] = func_335
mutated_mod = relay.transform.InferType()(mutated_mod)
func_305_call = mod.get_global_var('func_305')
func_307_call = mutated_mod.get_global_var('func_307')
call_353 = relay.TupleGetItem(func_305_call(), 3)
call_354 = relay.TupleGetItem(func_307_call(), 3)
uop_368 = relay.asinh(call_353.astype('float64')) # shape=(11, 4, 2)
uop_370 = relay.asinh(call_354.astype('float64')) # shape=(11, 4, 2)
func_181_call = mod.get_global_var('func_181')
func_183_call = mutated_mod.get_global_var('func_183')
call_371 = relay.TupleGetItem(func_181_call(), 2)
call_372 = relay.TupleGetItem(func_183_call(), 2)
func_101_call = mod.get_global_var('func_101')
func_102_call = mutated_mod.get_global_var('func_102')
call_377 = relay.TupleGetItem(func_101_call(), 2)
call_378 = relay.TupleGetItem(func_102_call(), 2)
uop_397 = relay.rsqrt(call_371.astype('float64')) # shape=(12, 2, 12)
uop_399 = relay.rsqrt(call_372.astype('float64')) # shape=(12, 2, 12)
output = relay.Tuple([uop_368,call_377,uop_397,])
output2 = relay.Tuple([uop_370,call_378,uop_399,])
func_403 = relay.Function([], output)
mod['func_403'] = func_403
mod = relay.transform.InferType()(mod)
mutated_mod['func_403'] = func_403
mutated_mod = relay.transform.InferType()(mutated_mod)
func_403_call = mutated_mod.get_global_var('func_403')
call_404 = func_403_call()
output = call_404
func_405 = relay.Function([], output)
mutated_mod['func_405'] = func_405
mutated_mod = relay.transform.InferType()(mutated_mod)
func_333_call = mod.get_global_var('func_333')
func_335_call = mutated_mod.get_global_var('func_335')
call_435 = func_333_call()
call_436 = func_333_call()
func_305_call = mod.get_global_var('func_305')
func_307_call = mutated_mod.get_global_var('func_307')
call_438 = relay.TupleGetItem(func_305_call(), 2)
call_439 = relay.TupleGetItem(func_307_call(), 2)
func_305_call = mod.get_global_var('func_305')
func_307_call = mutated_mod.get_global_var('func_307')
call_455 = relay.TupleGetItem(func_305_call(), 1)
call_456 = relay.TupleGetItem(func_307_call(), 1)
bop_470 = relay.not_equal(call_438.astype('bool'), relay.reshape(call_435.astype('bool'), relay.shape_of(call_438))) # shape=(11, 4, 2)
bop_473 = relay.not_equal(call_439.astype('bool'), relay.reshape(call_436.astype('bool'), relay.shape_of(call_439))) # shape=(11, 4, 2)
func_403_call = mod.get_global_var('func_403')
func_405_call = mutated_mod.get_global_var('func_405')
call_476 = relay.TupleGetItem(func_403_call(), 1)
call_477 = relay.TupleGetItem(func_405_call(), 1)
output = relay.Tuple([call_455,bop_470,call_476,])
output2 = relay.Tuple([call_456,bop_473,call_477,])
func_483 = relay.Function([], output)
mod['func_483'] = func_483
mod = relay.transform.InferType()(mod)
mutated_mod['func_483'] = func_483
mutated_mod = relay.transform.InferType()(mutated_mod)
func_483_call = mutated_mod.get_global_var('func_483')
call_484 = func_483_call()
output = call_484
func_485 = relay.Function([], output)
mutated_mod['func_485'] = func_485
mutated_mod = relay.transform.InferType()(mutated_mod)
func_483_call = mod.get_global_var('func_483')
func_485_call = mutated_mod.get_global_var('func_485')
call_498 = relay.TupleGetItem(func_483_call(), 1)
call_499 = relay.TupleGetItem(func_485_call(), 1)
func_333_call = mod.get_global_var('func_333')
func_335_call = mutated_mod.get_global_var('func_335')
call_507 = func_333_call()
call_508 = func_333_call()
output = relay.Tuple([call_498,call_507,])
output2 = relay.Tuple([call_499,call_508,])
func_510 = relay.Function([], output)
mod['func_510'] = func_510
mod = relay.transform.InferType()(mod)
mutated_mod['func_510'] = func_510
mutated_mod = relay.transform.InferType()(mutated_mod)
func_510_call = mutated_mod.get_global_var('func_510')
call_511 = func_510_call()
output = call_511
func_512 = relay.Function([], output)
mutated_mod['func_512'] = func_512
mutated_mod = relay.transform.InferType()(mutated_mod)
func_305_call = mod.get_global_var('func_305')
func_307_call = mutated_mod.get_global_var('func_307')
call_527 = relay.TupleGetItem(func_305_call(), 3)
call_528 = relay.TupleGetItem(func_307_call(), 3)
func_81_call = mod.get_global_var('func_81')
func_85_call = mutated_mod.get_global_var('func_85')
call_529 = relay.TupleGetItem(func_81_call(relay.reshape(call_527.astype('float32'), [11, 4, 2]), relay.reshape(call_527.astype('float32'), [11, 4, 2]), ), 0)
call_530 = relay.TupleGetItem(func_85_call(relay.reshape(call_527.astype('float32'), [11, 4, 2]), relay.reshape(call_527.astype('float32'), [11, 4, 2]), ), 0)
uop_531 = relay.acos(call_529.astype('float64')) # shape=(11, 4, 2)
uop_533 = relay.acos(call_530.astype('float64')) # shape=(11, 4, 2)
output = relay.Tuple([call_527,uop_531,])
output2 = relay.Tuple([call_528,uop_533,])
func_534 = relay.Function([], output)
mod['func_534'] = func_534
mod = relay.transform.InferType()(mod)
mutated_mod['func_534'] = func_534
mutated_mod = relay.transform.InferType()(mutated_mod)
func_534_call = mutated_mod.get_global_var('func_534')
call_535 = func_534_call()
output = call_535
func_536 = relay.Function([], output)
mutated_mod['func_536'] = func_536
mutated_mod = relay.transform.InferType()(mutated_mod)
var_561 = relay.var("var_561", dtype = "float64", shape = (16, 10, 16))#candidate|561|(16, 10, 16)|var|float64
uop_562 = relay.exp(var_561.astype('float64')) # shape=(16, 10, 16)
func_81_call = mod.get_global_var('func_81')
func_85_call = mutated_mod.get_global_var('func_85')
const_567 = relay.const([1.736764,-9.151676,-5.715463,9.069000,0.583913,-6.157061,-8.451974,4.071066,3.037282,0.394031,-1.694816,-5.173732,-1.803401,8.070298,7.644695,0.476285,0.650606,-7.816062,4.823911,-4.812967,8.191417,-4.888793,-4.742039,-5.334672,-8.895280,-9.612363,-0.844045,-7.844057,-5.547136,-6.789151,7.170687,-0.696425,2.415658,-4.606951,0.528817,1.025038,-3.152246,-3.879690,3.673749,-5.537815,-5.079529,3.042366,1.174325,-0.764639,8.547701,-5.565185,-1.661580,5.167049,4.822081,3.030483,-9.860370,-0.077077,-9.535774,-6.748657,4.844442,8.196048,7.966767,-4.362741,-0.412986,-1.044663,3.012925,-9.040062,-3.466592,-6.439446,-6.178188,-8.831575,-3.410540,1.031565,5.010820,3.544455,-9.254098,-9.807019,0.264332,-7.121567,9.275791,1.418310,2.390883,2.244111,-8.962015,-9.370864,7.876386,9.945757,9.920922,-8.653226,-2.981676,3.122984,1.480397,-3.701147], dtype = "float32")#candidate|567|(88,)|const|float32
call_566 = relay.TupleGetItem(func_81_call(relay.reshape(const_567.astype('float32'), [11, 4, 2]), relay.reshape(const_567.astype('float32'), [11, 4, 2]), ), 0)
call_568 = relay.TupleGetItem(func_85_call(relay.reshape(const_567.astype('float32'), [11, 4, 2]), relay.reshape(const_567.astype('float32'), [11, 4, 2]), ), 0)
var_573 = relay.var("var_573", dtype = "float64", shape = (16, 10, 16))#candidate|573|(16, 10, 16)|var|float64
bop_574 = relay.greater_equal(var_561.astype('bool'), relay.reshape(var_573.astype('bool'), relay.shape_of(var_561))) # shape=(16, 10, 16)
func_534_call = mod.get_global_var('func_534')
func_536_call = mutated_mod.get_global_var('func_536')
call_577 = relay.TupleGetItem(func_534_call(), 0)
call_578 = relay.TupleGetItem(func_536_call(), 0)
output = relay.Tuple([uop_562,call_566,const_567,bop_574,call_577,])
output2 = relay.Tuple([uop_562,call_568,const_567,bop_574,call_578,])
func_579 = relay.Function([var_561,var_573,], output)
mod['func_579'] = func_579
mod = relay.transform.InferType()(mod)
mutated_mod['func_579'] = func_579
mutated_mod = relay.transform.InferType()(mutated_mod)
func_579_call = mutated_mod.get_global_var('func_579')
var_581 = relay.var("var_581", dtype = "float64", shape = (16, 10, 16))#candidate|581|(16, 10, 16)|var|float64
var_582 = relay.var("var_582", dtype = "float64", shape = (16, 10, 16))#candidate|582|(16, 10, 16)|var|float64
call_580 = func_579_call(var_581,var_582,)
output = call_580
func_583 = relay.Function([var_581,var_582,], output)
mutated_mod['func_583'] = func_583
mutated_mod = relay.transform.InferType()(mutated_mod)
func_483_call = mod.get_global_var('func_483')
func_485_call = mutated_mod.get_global_var('func_485')
call_618 = relay.TupleGetItem(func_483_call(), 0)
call_619 = relay.TupleGetItem(func_485_call(), 0)
uop_673 = relay.log2(call_618.astype('float64')) # shape=(88,)
uop_675 = relay.log2(call_619.astype('float64')) # shape=(88,)
output = uop_673
output2 = uop_675
func_686 = relay.Function([], output)
mod['func_686'] = func_686
mod = relay.transform.InferType()(mod)
output = func_686()
func_687 = relay.Function([], output)
mutated_mod['func_687'] = func_687
mutated_mod = relay.transform.InferType()(mutated_mod)
func_181_call = mod.get_global_var('func_181')
func_183_call = mutated_mod.get_global_var('func_183')
call_702 = relay.TupleGetItem(func_181_call(), 1)
call_703 = relay.TupleGetItem(func_183_call(), 1)
func_403_call = mod.get_global_var('func_403')
func_405_call = mutated_mod.get_global_var('func_405')
call_711 = relay.TupleGetItem(func_403_call(), 0)
call_712 = relay.TupleGetItem(func_405_call(), 0)
func_510_call = mod.get_global_var('func_510')
func_512_call = mutated_mod.get_global_var('func_512')
call_718 = relay.TupleGetItem(func_510_call(), 1)
call_719 = relay.TupleGetItem(func_512_call(), 1)
func_579_call = mod.get_global_var('func_579')
func_583_call = mutated_mod.get_global_var('func_583')
const_723 = relay.const([-9.749293,-2.097308,4.589757,5.269032,-4.366693,-8.346816,-0.116988,6.545415,-0.678577,0.722643,8.755034,2.116935,3.110177,6.128640,-7.450091,-7.997513,0.052790,-3.003215,-4.926847,7.741929,7.836087,9.238453,7.365892,-7.206532,-3.941269,-3.715154,-7.201635,1.975380,-9.384759,-4.597499,8.850953,9.424780,-7.079034,8.685186,2.090398,9.864919,2.992454,3.789177,8.013601,-7.791608,7.493362,4.817961,2.865214,7.861902,8.667115,-8.667840,-3.609652,-5.833949,7.081326,0.413131,-2.179294,-4.875216,-6.113995,-2.411401,7.495217,7.511609,-6.332924,-6.548730,6.547174,9.905615,-9.208112,6.881369,-4.331349,2.358909,-8.967782,-2.738960,3.685612,-7.822013,-8.439212,9.018689,4.300279,-1.393667,3.133740,2.102842,1.254030,-1.018727,9.818525,-4.517336,5.692291,6.927814,8.634219,-3.094379,-2.259907,-3.705303,6.295903,-2.238140,-1.064877,-6.949729,-4.796788,9.874666,5.327375,2.500958,9.282971,-4.108712,0.934689,-6.271950,8.175739,8.134480,0.171835,3.819920,0.943138,-1.879614,-6.696593,6.934253,-3.901472,-8.286576,-8.537434,-2.315303,-2.597798,-8.818632,4.785664,-2.582858,7.745588,-7.604101,6.769993,-0.638639,-8.213801,-3.216336,1.613028,0.341599,-9.818740,2.318930,4.857805,7.093898,-9.100338,3.031457,-5.706668,1.324769,0.292729,9.418590,4.184601,2.269851,-5.264959,-9.834844,3.138990,9.054984,-6.675334,8.723074,7.686303,7.079394,-4.026323,1.094419,-1.504339,0.945710,-6.089164,-7.214518,-9.751723,7.809102,4.688467,-6.153008,1.052459,0.207598,6.646956,6.474607,4.865458,-8.702239,9.417748,-8.055264,-2.601423,9.839480,-5.911018,-7.758679,1.071560,9.604104,-0.105087,-3.341463,-6.680548,0.968927,-7.168140,-4.844201,0.577045,8.817086,-1.614764,-6.229770,0.100812,6.427295,0.590256,-9.890127,-8.872695,4.789732,-6.796040,-5.573732,2.397777,-7.833161,8.413475,9.141563,3.887045,0.823087,7.332013,6.670979,-4.502978,-1.770368,-1.130112,-5.500802,6.594113,3.752686,7.057936,-3.020389,0.191954,-9.503545,1.901723,6.373424,5.273176,-2.746188,-9.490506,5.857665,-3.025257,-2.369793,7.456597,6.280420,9.235942,-2.339832,6.357622,4.183496,1.537440,0.903190,-8.101800,0.949314,5.478775,-2.189441,9.712944,-5.468358,6.785543,3.978192,-4.613275,2.551214,1.177767,-9.986056,-4.568099,-0.768527,-2.246395,-8.558740,-3.246653,-0.302173,8.812864,-4.293556,-0.705299,8.189113,7.612539,-5.842567,9.326650,1.432680,7.559470,8.269525,-2.003609,0.261538,6.454943,6.689481,-5.123415,-0.859080,-0.246792,-5.937056,6.562802,-0.346426,-0.685483,-4.454371,7.814109,6.614859,-5.356204,-6.047439,-6.238332,3.793535,-5.270193,0.092250,-0.843432,-9.279535,-7.840336,2.381260,-0.637730,3.448473,7.682420,5.678630,4.069825,4.384998,0.265885,-7.771234,-8.963184,-6.144242,-6.764808,2.837356,3.611092,1.149404,-9.001661,5.227909,1.660481,-6.701116,6.978200,8.391486,-2.119410,-9.018109,-1.231654,8.857329,-1.507475,8.122152,1.495231,7.838302,5.127839,2.465034,9.546277,-0.292240,2.842073,5.484320,-1.734242,7.801492,-0.216601,0.040032,0.550613,0.748434,-9.991261,-5.418047,4.105541,-6.603884,1.478443,-9.638335,-0.859625,9.747379,3.360713,-8.473367,3.196015,-3.187363,0.625334,-6.220074,-5.308881,-0.492040,9.787626,7.486731,-6.273396,5.981667,5.636533,2.083773,-9.609196,2.520454,1.074702,-7.521972,9.433225,-6.148740,-3.184372,3.578283,-6.681705,2.488826,7.486927,-8.584740,-9.241132,1.405280,-0.844574,9.347493,9.941946,-0.662821,7.962608,6.507162,-6.890381,2.956139,-6.660412,5.654068,1.768319,-5.001418,8.043303,-6.709793,-5.490101,1.677183,-9.619616,-8.109120,6.391182,9.603320,4.042269,-0.071520,-6.794318,-0.314809,-4.184021,-3.145174,-4.031738,-3.348108,9.372399,3.804330,-8.290035,-4.271177,8.860224,-6.088590,-8.367578,6.816421,-4.885947,5.225096,-7.067380,-2.257831,7.274969,-9.620512,0.563139,-9.277812,7.896626,4.874853,-4.431268,7.963759,-7.561303,6.958886,4.022456,-7.098795,-8.645489,-6.983635,3.766560,3.596814,3.236985,-4.692198,1.467635,-0.941583,-0.393479,-2.975487,4.296802,-1.577250,-3.726289,-3.590923,9.093870,5.113115,-1.179203,-9.772871,-7.928567,2.110755,1.550209,7.105854,-5.976227,6.007552,8.863375,5.932635,3.252395,-2.081759,1.931759,0.710313,3.637704,-9.914763,2.108103,8.502750,4.131452,8.938036,-9.645371,0.697543,-3.976002,5.200937,-9.460619,3.154767,-5.842947,0.643447,-9.796757,-7.714573,-7.771997,-9.042967,8.555350,1.296436,-5.802587,6.175676,4.265156,2.640021,-0.184092,7.569878,0.080902,-9.840490,-0.542752,-8.547460,0.556712,-5.570540,9.217605,5.816755,-6.671006,1.596286,0.500997,4.608447,6.713948,4.479125,3.744762,5.588411,0.377766,3.524175,8.041909,-7.737641,-7.912893,-4.861954,1.120474,7.403363,1.130801,-3.164970,6.703190,5.566069,-6.582747,-1.377009,-3.600205,7.159700,-8.586183,4.149420,-9.091402,-1.570532,7.795675,-0.556875,-7.083562,-2.535191,1.684512,-2.770218,2.069242,8.717656,-4.469821,6.464012,9.453295,-2.675329,1.099474,-9.672783,-6.749100,8.379731,7.737703,-2.704733,5.253006,0.313458,-3.366330,2.633911,-9.775641,4.531907,3.213062,3.353847,1.855171,-3.865570,3.929261,-9.043081,5.840177,1.613996,-6.427394,-5.649948,7.418614,-7.766368,9.055104,1.774583,-3.322114,9.985797,0.973180,7.841465,-2.454141,-8.897435,-1.731489,9.737229,-7.503851,-1.525714,9.726629,-0.192112,6.389787,-4.886298,-0.130459,-9.218723,-5.138073,-8.491394,-5.538078,3.466798,9.515061,-8.093499,-0.167845,3.144825,9.405603,8.130062,-1.579724,7.798435,-2.619385,6.345805,4.491927,-1.183233,8.034997,0.814220,-8.674595,-2.712858,-1.608531,4.136340,4.637812,0.550707,-5.136620,1.334405,-9.531686,-1.231771,-5.210578,-5.024843,0.901754,5.717301,6.073819,-0.606493,7.890240,-3.379891,-3.615943,8.327845,-7.046651,-6.491068,8.239911,-3.360182,-2.386172,9.503040,-3.325766,-2.656519,-2.760777,-0.019630,-8.048461,8.535534,4.412480,-5.488808,6.274891,2.944450,-5.381101,-2.404924,0.226457,-9.197803,-1.477166,-4.914337,3.700740,-3.528134,8.459082,6.894925,-3.998280,8.303663,-3.499008,5.075681,6.423849,-2.828006,-5.113783,-7.486219,3.030825,1.614118,-1.947308,-5.774313,-3.196702,7.427126,2.560092,6.861942,9.958902,0.528128,-0.170101,1.340754,-2.420937,-2.295526,-2.648094,-2.410077,5.067467,4.849513,-5.827656,4.814710,0.577808,-8.294968,5.522126,-9.773082,-3.581182,7.712218,-4.341639,7.827331,-4.986026,9.827391,-2.433618,-5.231065,7.010933,7.376378,8.135109,-8.816747,4.733918,4.362547,-8.772009,5.193209,9.755794,-6.642941,1.356779,-1.378175,8.221153,-8.839564,-3.504301,4.827726,1.162918,0.399770,0.763757,8.613149,-8.799361,8.450464,-9.628686,2.900066,8.931078,3.547607,2.445328,-0.369008,4.794347,-7.023304,2.950428,0.381675,-2.395027,2.082984,-9.411760,-8.441108,2.448530,1.744566,-0.474418,-7.333703,-3.434008,-0.776831,1.181555,-1.504742,-0.694982,-6.524603,-5.552043,-2.115814,-2.716427,-3.892684,-7.286982,2.805639,6.768201,4.334000,-5.848915,4.209350,3.113088,-9.783179,7.668543,2.216519,-7.553945,6.666956,4.646566,1.405895,-2.580829,-7.358560,3.947899,-7.710978,-7.839628,-9.027178,6.879446,-6.298454,-6.170331,-5.749561,5.500501,7.119903,0.186350,9.907050,-5.260742,6.370133,-2.636527,0.431407,5.675171,-1.713891,3.924663,-5.309789,0.122579,4.264921,-4.867342,7.357627,1.980812,4.534939,3.089938,3.655287,1.921071,-2.808364,-4.175572,6.296754,-2.136097,1.314271,7.195177,-7.507191,-1.917668,-6.438226,9.273356,1.286601,-7.650253,-3.173497,0.316814,7.242243,-2.875982,-4.924225,9.040841,-9.173978,-3.341505,9.570344,-5.112598,-4.969016,5.148783,7.392825,-8.511757,2.995848,3.174457,-6.808698,8.525211,6.938501,-6.740554,-4.932395,-9.555627,5.546393,-1.346695,-2.315221,-8.682416,-5.419974,3.436725,5.163172,-8.034842,-4.127382,-8.595862,-3.779531,-5.386103,3.425299,2.987966,-7.823464,-9.055595,-4.799793,-3.897565,2.664631,6.570235,-2.260970,2.577785,-8.126385,-4.312163,5.910476,-2.017601,-2.589566,-1.089646,3.981418,8.878606,5.616177,8.788506,-5.198163,-9.252053,-8.415995,7.115308,-5.846531,-5.643488,-1.073685,4.949632,8.426658,2.304994,-9.330625,8.236538,-3.802084,0.988131,0.891294,0.102271,-8.744444,9.890796,-8.755012,5.213098,-3.900304,5.371446,-8.502601,-0.847338,-2.242010,3.443838,0.847986,-1.517107,3.288727,1.298260,-3.094700,-8.622481,-0.170227,-0.042085,6.629325,1.050051,3.069415,-9.495628,0.757310,-9.495884,0.465344,-0.847727,-0.560876,-4.830371,-2.272580,-2.263336,-6.164307,7.929355,2.328279,8.646527,8.767884,-6.538191,-9.615827,-7.308362,3.757359,9.134327,-9.260197,-7.244368,0.107376,-8.326879,-6.534380,-9.681648,-1.016959,-5.482879,5.718052,-8.830123,-7.085888,-7.806179,1.240715,3.985592,6.575951,7.090468,-4.077634,-1.165846,-4.264284,-8.779170,-0.513612,-2.184005,-0.481983,-1.538575,-2.159453,1.399453,0.779710,5.619955,-2.364379,1.408707,-9.789075,-2.809195,-2.427157,-1.682187,7.623603,-9.597538,3.327343,-2.285796,3.970352,-8.343796,8.636653,-8.970149,5.817753,-0.693702,-9.147349,7.348389,-5.993033,-3.568151,-5.472837,-8.789292,0.450876,0.169446,5.519798,-8.747577,-0.909532,-5.993254,-1.834433,-5.025643,9.163444,-4.959085,5.382698,-8.936949,5.962253,-7.466293,3.171548,4.615013,2.730889,6.488531,8.611400,9.342585,-2.629052,2.374597,7.396894,-5.595389,-8.874955,-4.973980,-0.743548,-5.514595,1.474947,-2.895931,2.636474,9.356152,-4.455415,1.952411,9.414935,-8.330596,-9.443697,-0.114286,3.588274,-6.510979,1.453157,2.962291,4.231206,9.316928,0.273684,2.570501,-5.232679,0.729852,-8.754960,-7.580535,-3.791448,6.030306,-7.641422,-7.921866,5.413258,-1.766314,0.660890,-1.789954,1.025869,-8.759047,6.931540,3.301179,-4.697434,4.114172,6.697899,-7.334423,-2.427208,-5.659483,-9.040695,-6.105821,-5.029097,-9.734225,2.285309,-3.079964,3.933965,2.617513,2.258418,-2.046881,0.620039,-5.044851,6.455475,-1.324611,-3.079962,-7.061611,3.473512,-0.361451,5.346537,-8.189260,-6.170330,5.096797,8.948309,-8.969917,7.189791,-1.017536,-1.521434,8.899218,-0.075804,9.846796,7.592325,3.386871,4.477473,-4.130430,-2.338335,0.629924,5.806634,-8.575255,5.760498,0.482714,6.207314,5.113818,-9.976671,1.742747,9.209984,-5.149181,6.715329,9.055064,7.932068,7.752694,-3.502311,-6.801267,-8.928659,-8.778051,-7.975137,-7.893338,-0.846801,7.032654,8.148691,0.806506,-2.130725,6.557406,5.875183,-0.931661,-2.296842,-7.926217,-2.664658,-1.153579,-6.462446,-9.783924,1.561732,-2.413701,-0.653864,-7.450834,2.501598,-4.650329,9.059941,2.578645,7.507339,-0.744505,1.307896,-5.036918,6.357293,-1.951968,-5.600295,-5.082543,-0.738957,9.016380,7.591006,-5.398237,5.325188,-9.573544,-1.233598,9.187078,9.027550,0.285917,-5.090373,-5.200333,-7.797540,6.675325,4.498665,-8.064434,9.487879,-0.068569,-0.659460,3.757783,-4.784721,-4.396424,0.079020,-7.233413,0.434081,3.565256,6.252277,-7.085600,3.013567,-6.144217,2.760995,-4.312352,-2.233012,2.125762,0.320720,-1.818333,-9.020235,-6.601514,-8.482335,-9.421129,-2.220374,-5.305174,4.987151,8.713884,-5.104260,8.526893,4.152450,-9.239429,6.795087,-8.591598,-9.341306,-4.749238,8.615591,-2.298596,5.193086,-5.419599,6.963199,8.810822,9.324108,5.120314,1.553899,1.308718,-1.583649,-1.514514,-6.298312,-0.342958,-0.997330,2.531737,7.897077,9.883083,1.605797,-8.713699,-4.008492,5.077104,-6.120864,-8.497518,-9.740438,-5.640673,2.572650,-2.703599,2.216602,7.746570,4.388974,-4.542694,-3.705301,6.554268,6.437682,-5.528436,7.042358,5.109546,-0.281023,1.139233,4.352291,1.997704,1.081701,-4.524747,-7.072600,-3.178777,2.933511,-8.721749,-6.257806,5.786976,2.216222,-9.837047,7.452462,8.918170,2.486527,-9.262704,-6.881857,9.879748,9.054703,3.681537,6.794755,4.834116,-8.101401,4.730061,5.106687,-5.672621,-8.318984,-0.069407,-3.633677,-2.480589,-6.104437,-8.998633,-1.566637,-0.596878,-4.251903,-6.964973,8.676402,-1.976955,2.348296,9.791582,-9.856291,-0.384425,-5.729351,-9.662654,-2.369338,-7.218872,-0.462827,5.291529,-8.199975,-1.381573,0.235256,2.827197,1.203440,-2.442677,9.466363,8.775331,1.492709,-1.897764,-6.671794,-0.375810,3.753843,-9.663020,-4.663727,9.029880,8.775555,4.826245,-7.597184,-6.143307,-7.948654,-0.511661,-9.142911,6.957393,8.046422,4.565702,-6.488963,-4.065298,-2.223708,9.430440,5.078054,8.470357,2.689961,6.547395,8.269164,9.162014,9.803731,9.362506,4.221182,8.306090,3.560958,5.159019,2.145874,5.909308,-2.009124,-8.494129,8.617677,-2.572472,-1.385888,-0.019981,4.688091,1.536255,-2.580520,-3.900926,1.304730,-7.955346,-3.987582,-5.716318,-9.357443,4.027800,9.944290,-8.932288,-6.159006,2.086574,-9.175463,-8.251004,8.451252,-0.446975,3.278618,6.663277,4.466021,6.983989,9.768131,6.526363,0.407060,-3.589667,-3.424205,-8.604170,-5.731261,8.545975,7.899930,-6.883055,2.078420,-9.118929,-1.037427,3.806097,-9.808800,9.559688,-8.606744,4.942058,-0.627025,-0.325775,-0.419031,9.449121,-4.184191,9.845027,-5.179513,-7.815623,7.304038,-9.070299,7.556581,3.810816,-7.441794,1.779658,6.501673,1.324685,6.362059,-4.204873,-8.839758,-2.883625,-0.818011,-4.464210,0.432354,-0.792667,-9.321324,-0.991677,-6.523866,3.762529,1.829627,5.855223,3.791764,-1.973989,4.811960,-8.845539,-1.129354,-1.675404,-6.931050,8.270711,-0.780421,-4.526921,4.715160,-2.398340,-0.471608,-0.135255,-5.611467,-8.637978,-3.101372,-9.132370,5.356549,2.852239,4.182883,-2.120361,0.514827,-5.401641,6.920945,-4.262023,2.308772,-9.061991,-7.878431,9.051317,0.535881,-6.370145,-2.043174,1.202430,5.736526,4.134934,-1.084145,-5.111444,-9.274727,1.131085,-5.851111,-7.290151,-5.454104,5.174990,9.402673,-4.123765,0.150159,9.268391,4.295574,9.475122,2.322625,-1.062076,3.996025,3.338731,2.307263,2.976632,-1.481326,1.514136,2.372401,3.496554,-8.814477,9.942493,-6.463323,6.038474,2.994264,-5.425336,-4.030891,-8.339937,-5.266997,2.417590,1.676675,9.153578,-0.923181,-3.140103,3.083768,-6.178484,1.713062,2.858295,-2.099324,-1.624718,-9.801318,7.439147,9.159248,-1.531400,7.723025,3.243137,-5.172725,7.607140,6.012451,-4.794611,9.758390,-7.626174,-1.412154,5.094154,7.976175,-5.120408,-0.862075,-8.941305,-2.158114,1.442681,-2.540012,-6.721975,9.375373,5.173128,1.794749,-0.009818,-5.627585,-3.018140,-0.147285,-8.193715,9.800794,0.957263,-1.577826,8.857240,-8.369036,-7.684197,8.457967,-2.006750,-2.131381,9.184129,0.810521,3.705016,5.174054,5.841995,8.467500,7.827555,-0.870079,-0.994515,-7.858945,8.479447,1.957557,2.964906,-2.087702,1.982219,0.574912,3.279028,-5.147738,-4.217747,-3.793835,-4.746994,6.680513,-9.401702,-9.095442,-0.786122,-4.551464,-7.294510,-9.811955,-3.448641,3.496060,9.572290,-9.744435,1.666546,8.781766,-2.944414,8.510882,6.028005,-8.576031,4.089771,8.378956,9.645438,2.388449,8.939204,0.439745,1.777259,9.244647,8.226358,6.920002,0.468063,1.385697,-3.309284,-7.869423,0.693292,1.406631,4.603970,7.551880,-5.758618,-1.512488,-1.880851,9.037689,-5.823828,-0.424655,-9.859371,4.507999,5.379292,-0.492570,0.755549,3.592330,3.683598,7.833498,0.990461,-4.789135,-8.472188,4.578632,-6.677838,-3.697179,-9.475158,5.406600,-0.380312,-4.894749,8.243941,5.291406,0.757232,2.390370,9.608519,6.319885,3.512246,-5.008015,1.115297,-9.754078,-8.143315,-0.211650,-5.534777,2.701909,-7.060650,-5.041971,-9.378107,2.972889,-8.149267,2.702352,1.792584,6.136603,-8.538917,-6.194904,0.632799,8.844676,5.454204,-1.614768,5.851940,-6.299048,9.158923,1.478742,-6.396496,5.759334,-1.365109,-4.230107,-1.719899,-2.517792,4.833693,-7.050283,-4.523629,-0.380590,3.887027,3.789365,9.367756,1.088585,-9.703472,-7.494474,6.115336,4.028688,-8.021342,1.314513,3.322308,2.012133,9.241150,-0.344063,-7.359220,4.240022,1.553736,-4.688207,7.406303,-1.317822,8.306703,-6.224457,-2.925106,-5.269100,-0.163744,2.703715,8.684370,-3.474631,-3.675750,-1.718841,-0.236380,6.819053,-6.568889,-2.408752,3.922589,3.709928,3.427672,7.686263,-0.735010,4.072434,2.359255,-0.203564,1.610842,2.137840,5.712477,-5.280868,-0.991842,-8.233727,-7.528839,-1.362722,7.986799,-4.118608,4.207236,-3.867601,7.453687,-0.950760,3.296511,5.271218,-8.919188,-3.705533,3.516105,0.952208,-4.769815,-1.911212,-4.448200,-9.526954,4.048554,-6.875420,-6.297957,-4.513180,-7.129935,6.596982,7.745901,1.812055,5.953017,-3.854561,-0.329001,-7.494864,2.277299,1.755103,6.279241,4.864147,-1.281058,-3.429838,-0.240962,-8.475754,2.283520,-2.181975,5.375570,-2.047677,-3.677073,2.225843,-4.157008,1.450627,-1.886109,8.048905,7.551892,-1.650843,2.561739,-5.227149,5.515942,-1.644814,-8.746570,-4.243522,-0.945862,4.721496,2.393691,-9.400143,-7.837243,0.097182,-9.345041,6.498706,1.289205,-6.494451,-9.940819,-3.972714,7.247779,-9.789042,-0.446365,0.171505,-5.691785,5.955752,3.885748,5.863519,4.307733,6.439902,-9.508392,5.408352,-0.836885,-5.056899,3.883350,1.938828,2.586593,-7.943378,-4.057435,5.654643,-3.129449,-4.247239,-0.457834,-8.816544,-6.468062,9.655858,-6.441681,-4.526769,-5.839004,9.707947,0.375396,8.254865,-0.298342,-7.332335,5.766989,1.864603,-6.009581,-6.016011,-7.469865,8.263369,-2.978677,3.655916,5.386164,0.304772,-4.644791,3.584435,7.740491,-8.821361,5.859516,-1.257111,-3.914487,-8.463823,2.494320,4.449799,9.611048,-7.122140,-4.021946,-9.222713,8.343851,2.862114,-7.414360,-1.151458,5.081328,-7.487139,0.354750,-0.066930,-4.444501,2.811558,1.425458,8.419070,4.421845,-2.176020,3.107218,3.203024,-6.720955,-4.975523,-1.288204,7.143260,-2.105224,-5.358455,-6.375230,3.817835,2.881679,0.509390,-4.141399,-0.284351,-7.438249,0.697883,1.103501,1.933452,4.091282,1.807278,-6.063352,-7.405965,-9.267085,-1.146022,1.947080,2.636810,-5.648869,2.762622,-0.331456,-5.144546,-9.751350,-9.470670,4.104484,3.504771,-4.883792,-6.274463,7.233075,8.423821,8.942604,7.360581,6.145264,4.408606,2.446681,-8.157613,-9.133307,-9.492398,-2.195402,2.101763,-6.141960,0.213759,5.119588,2.199296,-3.276694,-6.210679,7.042899,-8.480756,-7.701929,-7.822546,-7.641147,4.502904,-4.401579,1.673798,6.843257,-8.567110,7.549999,-8.428226,7.537917,-1.206060,-7.464551,3.315904,-9.527154,-5.333986,1.233513,-0.986790,-8.908748,7.724025,4.491834,2.604547,6.052412,6.117161,5.282905,6.794800,9.287764,-8.808982,-4.057646,7.263074,0.673039,9.721692,7.999343,-9.820555,-8.656084,-2.733887,-3.597539,-4.751916,4.687943,4.768298,2.174612,3.725506,-1.772804,-6.463289,8.909938,9.215012,9.409716,8.808417,-5.719072,-1.878229,0.200477,-8.861314,3.234574,3.442027,-3.321487,3.968816,2.496195,0.019479,6.422353,-1.834964,3.832030,3.031117,1.489141,9.784802,0.298216,-0.286921,-7.490284,-6.519511,4.735577,-6.758280,-6.023650,8.337158,-3.747027,3.847336,-2.533164,-2.709244,2.639737,-2.949179,9.121070,-2.649632,-7.127462,2.586723,-1.793708,-5.626861,-0.833596,8.150277,-5.030172,-4.567754,8.051020,-1.954815,-3.850254,-3.508101,5.202512,-4.209724,-0.313424,8.271174,7.904934,-5.639409,-9.332544,7.129284,8.663675,-0.083724,6.268201,8.628964,-0.692299,-1.887761,-1.825527,8.261104,4.332461,-7.040495,-1.978109,-0.715303,2.630984,4.034347,3.522309,-0.059241,-6.728416,4.610627,7.304313,-7.302608,-0.737948,-1.239895,3.870971,-4.455801,9.761937,9.383001,-9.593412,4.360130,-3.463899,-5.357159,7.668343,-2.370021,2.726659,9.133515,-5.864865,-0.952205,-9.992586,-1.717018,-7.569436,1.697528,1.867030,-6.226715,-5.282062,2.511411,-0.825890,8.162566,-6.816205,9.557600,4.670454,3.455561,2.232363,-2.184427,-3.512486,4.088834,-5.813831,5.366612,3.191558,9.961894,0.854162,-0.298366,-2.735430,-2.494187,-2.984695,-2.554129,-7.227452,2.410726,-3.244046,-4.066800,-4.432093,4.713908,-4.832137,7.325882,-4.863865,3.945740,5.224886,-7.998845,9.232411,9.836828,-4.517949,4.673163,5.957298,-5.549790,6.757012,-3.117065,2.535772,-1.493955,-9.589657,3.599835,-6.023927,8.113572,5.072692,-0.484844,-6.771930,-1.071567,0.945821,5.270495,-7.490946,-3.085644,-4.825915,-4.222710,0.626362,1.350539,-4.099320,-3.323903,-9.530453,-2.121163,2.476593,-7.238928,-5.890962,3.441922,7.573422,-8.404396,-2.767593,9.543104,-7.627550,-8.322966,-0.705307,0.394424,8.020991,1.834288,3.109981,4.835035,-6.686067,-6.241813,-2.659043,0.383044,7.952605,0.420131,-1.072033,-5.206281,-9.834489,-7.927745,1.353716,9.959138,-5.303433,-4.867668,4.414507,-9.600091,8.006786,-7.406890,-6.210285,0.703867,-6.957583,-4.094053,0.079520,1.118784,6.077975,-6.468638,5.644873,2.035296,4.767191,-8.457841,2.142976,-7.849212,6.491140,-2.203658,-4.945656,5.500515,0.866588,-5.982615,2.351852,-7.285061,2.425587,2.268948,5.021342,-7.270625,-9.572859,6.354664,-3.174212,-7.863446,-7.686630,7.743596,0.681715,5.952353,-5.743212,5.540397,7.381871,0.129133,0.947766,-5.707746,0.664740,4.017798,8.165921,-4.574181,-5.690770,7.788671,6.154171,-0.663537,-8.802739,7.999938,4.201833,-4.460044,4.138302,5.312479,-6.636386,0.030299,2.910544,1.871722,6.633466,-6.159002,-2.019758,-3.052108,-8.265292,-4.410616,3.578342,-4.736890,2.483737,4.169594,-7.403185,3.827300,-1.333752,-8.016003,2.369955,-6.019596,1.481620,-9.200271,7.669421,-2.096180,0.962078,-9.591426,-2.154214,3.667680,8.714701,-0.549557,-0.417630,-8.982718,-9.722554,-8.993556,-3.874252,-7.709401,9.336993,9.888423,-8.956063,-3.390477,6.289700,-8.472929,2.566215,9.029470,-7.126166,-8.958315,1.246299,-9.821045,-8.408923,2.172748,3.543258,-9.294187,-5.895089,7.644612,2.571858,8.468407,-0.340376,0.311786,5.634345,-2.853428,-7.904458,-3.509130,1.890276,-8.868196,9.736198,-7.183666,5.242879,9.688224,8.477500,-6.464008,6.173507,4.803485,0.050660,1.696691,3.306666,7.653809,4.793420,6.758040,-5.292011,-4.715558,2.196668,-1.169588,2.002598,-3.363977,1.470291,-6.763003,-0.312949,-6.887029,-6.979385,3.357384,-7.912034,3.221639,-5.430983,-7.299558,-6.214184,2.305618,-5.342499,3.948805,9.151015,-5.954249,-8.403051,8.803039,-7.096810,5.297102,-8.546220,-2.358575,7.369849,-2.474105,-2.807189,-9.063971,2.564540,-2.310876,3.267555,4.746116,5.123912,4.178855,-0.163519,0.471614,7.378624,6.999314,4.062683,-8.660171,-0.134033,-2.944288,0.228051,1.170581,-5.899702,-0.176818,9.278420,3.878542,0.637476,2.853852,2.265225,-5.850473,3.732263,-7.421243,6.331791,3.351792,1.944322,-3.382608,-5.415492,0.302966,6.715964,-9.995703,-5.147620,-2.183271,5.218161,5.003224,-2.860606,2.766427,-6.933865,-0.483659,-5.805106,4.926965,8.272002,-5.630968,6.457702,5.624219,-7.673984,-8.628579,7.695284,-0.076344,-1.791725,8.536667,-3.371046,-3.640403,3.920510,-6.062435,-2.568535,3.691907,-9.779805,0.788069,-7.148701,-8.771464,-6.102019,3.853988,6.679605,-5.669751,0.717869,-1.845165,-8.745232,-7.488800,9.732911,0.573100,-8.007761,-1.976654,6.975996,7.991476,-8.732354,-7.406226,-4.371338,-1.892038,5.763785,1.399005,-6.115464,-7.208983,-0.012927,-5.560097,-8.690855,4.756542,0.518920,2.974864,2.590919,-6.287556,-1.522350,-1.502605,-4.161545,7.166242,-1.647688,-4.736787,-7.115970,0.907433,-1.487436,9.936863,-6.470654,7.349615,-3.143317,-5.589796,3.429985,9.542631,2.809689,-0.070278,-5.291117,8.213692,-4.710760,7.837134,4.707646,1.078472,8.375236,-8.345985,7.071301,2.235663,-0.688532,9.358164,-4.685652,3.427673,2.785277,9.279195,7.082445,-2.931541,-4.359443,0.080129,-0.720639,7.865976,4.469449,7.433756,-1.830615,-3.117725,-2.653974,-4.205299,-0.950705,-6.822238,-5.642622,0.369103,0.931378,5.851580,5.229176,8.507347,-9.851039,8.106042,-6.623201,-3.235650,3.275360,1.144399,1.171208,-0.088861,4.885303,6.702793,-5.940513,-0.917220,-1.350939,-1.370600,-0.616550,6.510330,-0.971279,-1.665795,-4.970967,2.613122,6.613596,1.638615,8.368746,-8.354211,2.606024,-3.352182,-3.698174,2.715230,-9.048733,-9.243171,1.649257,5.879067,9.032977,-0.783937,0.491083,3.746391,-8.247195,7.021191,1.407164,-2.616547,4.962907,-7.930114,2.209223,-4.039468,6.378620,-0.373401,-9.129589,6.503362,1.664002,5.179242,6.243738,7.750003,-5.767257,4.226506,-4.090297,-4.974156,-8.151614,6.326531,-4.531816,-1.008933,3.736076,-8.109714,-0.030769,6.474723,9.132998,-7.261290,4.544878,-4.255035,-5.135689,0.478337,5.928152,-5.041660,4.248210,-5.955410,7.928991,0.237797,5.493138,1.947243,1.256711,-1.798395,7.694447,-4.532904,-8.302458,-3.536376,-0.587988,-7.108050,2.820576,-8.271109,-1.463899,-7.515023,6.284959,-4.279961,0.760092,-6.632012,-2.858182,3.957691,-3.647237,5.762742,-6.104861,0.322106,2.918887,6.734329,8.189059,7.396457,-2.237151,9.259658,-7.867281,-0.135812,3.149109,-5.778298,0.344830,-3.918794,4.566048,1.835667,8.679397,2.554971,-2.298348,-8.333370,-7.449870,5.683881,2.756277,-0.137055,8.268419,-6.099091,8.233673,-0.422834,-0.422806,-6.841948,-9.844331,-0.117144,7.873041,3.034245,-6.090409,9.153756,9.946778,0.810426,1.681161,-1.665719,-9.076633,-1.843761,-2.828512,6.267717,2.523040,-2.258313,5.529448,6.555047,-0.656973,-3.488513,-7.737843,8.675118,-6.473868,8.384176,-0.263956,-7.010905,-1.867999,7.096873,-6.801680,6.174719,-3.487948,1.463879,-4.903539,-0.194452,9.551036,4.513408,-6.290235,-7.550026,3.273844,4.135304,3.902938,4.162288,-1.227664,-2.388839,2.362661,-6.124441,-8.159171,2.651235,-4.779638,3.954981,-8.479632,-5.050665,-6.584136,0.250938,-7.354552,0.120584,9.887701,9.691617,9.781096,-2.748224,1.824019,1.914172,-4.635050,5.638347,-3.947472,4.626820,0.006238,-3.854826], dtype = "float64")#candidate|723|(2560,)|const|float64
call_722 = relay.TupleGetItem(func_579_call(relay.reshape(const_723.astype('float64'), [16, 10, 16]), relay.reshape(const_723.astype('float64'), [16, 10, 16]), ), 3)
call_724 = relay.TupleGetItem(func_583_call(relay.reshape(const_723.astype('float64'), [16, 10, 16]), relay.reshape(const_723.astype('float64'), [16, 10, 16]), ), 3)
output = relay.Tuple([call_702,call_711,call_718,call_722,const_723,])
output2 = relay.Tuple([call_703,call_712,call_719,call_724,const_723,])
func_735 = relay.Function([], output)
mod['func_735'] = func_735
mod = relay.transform.InferType()(mod)
mutated_mod['func_735'] = func_735
mutated_mod = relay.transform.InferType()(mutated_mod)
func_735_call = mutated_mod.get_global_var('func_735')
call_736 = func_735_call()
output = call_736
func_737 = relay.Function([], output)
mutated_mod['func_737'] = func_737
mutated_mod = relay.transform.InferType()(mutated_mod)
func_483_call = mod.get_global_var('func_483')
func_485_call = mutated_mod.get_global_var('func_485')
call_770 = relay.TupleGetItem(func_483_call(), 0)
call_771 = relay.TupleGetItem(func_485_call(), 0)
func_81_call = mod.get_global_var('func_81')
func_85_call = mutated_mod.get_global_var('func_85')
call_776 = relay.TupleGetItem(func_81_call(relay.reshape(call_770.astype('float32'), [11, 4, 2]), relay.reshape(call_770.astype('float32'), [11, 4, 2]), ), 0)
call_777 = relay.TupleGetItem(func_85_call(relay.reshape(call_770.astype('float32'), [11, 4, 2]), relay.reshape(call_770.astype('float32'), [11, 4, 2]), ), 0)
func_686_call = mod.get_global_var('func_686')
func_687_call = mutated_mod.get_global_var('func_687')
call_787 = func_686_call()
call_788 = func_686_call()
func_579_call = mod.get_global_var('func_579')
func_583_call = mutated_mod.get_global_var('func_583')
var_793 = relay.var("var_793", dtype = "float64", shape = (2560, 1))#candidate|793|(2560, 1)|var|float64
call_792 = relay.TupleGetItem(func_579_call(relay.reshape(var_793.astype('float64'), [16, 10, 16]), relay.reshape(var_793.astype('float64'), [16, 10, 16]), ), 2)
call_794 = relay.TupleGetItem(func_583_call(relay.reshape(var_793.astype('float64'), [16, 10, 16]), relay.reshape(var_793.astype('float64'), [16, 10, 16]), ), 2)
func_181_call = mod.get_global_var('func_181')
func_183_call = mutated_mod.get_global_var('func_183')
call_802 = relay.TupleGetItem(func_181_call(), 2)
call_803 = relay.TupleGetItem(func_183_call(), 2)
uop_816 = relay.atan(var_793.astype('float32')) # shape=(2560, 1)
output = relay.Tuple([call_770,call_776,call_787,call_792,call_802,uop_816,])
output2 = relay.Tuple([call_771,call_777,call_788,call_794,call_803,uop_816,])
func_824 = relay.Function([var_793,], output)
mod['func_824'] = func_824
mod = relay.transform.InferType()(mod)
var_825 = relay.var("var_825", dtype = "float64", shape = (2560, 1))#candidate|825|(2560, 1)|var|float64
output = func_824(var_825)
func_826 = relay.Function([var_825], output)
mutated_mod['func_826'] = func_826
mutated_mod = relay.transform.InferType()(mutated_mod)
func_403_call = mod.get_global_var('func_403')
func_405_call = mutated_mod.get_global_var('func_405')
call_881 = relay.TupleGetItem(func_403_call(), 1)
call_882 = relay.TupleGetItem(func_405_call(), 1)
var_891 = relay.var("var_891", dtype = "float32", shape = (22, 4))#candidate|891|(22, 4)|var|float32
bop_892 = relay.logical_xor(call_881.astype('int32'), relay.reshape(var_891.astype('int32'), relay.shape_of(call_881))) # shape=(22, 4)
bop_895 = relay.logical_xor(call_882.astype('int32'), relay.reshape(var_891.astype('int32'), relay.shape_of(call_882))) # shape=(22, 4)
output = relay.Tuple([bop_892,])
output2 = relay.Tuple([bop_895,])
func_898 = relay.Function([var_891,], output)
mod['func_898'] = func_898
mod = relay.transform.InferType()(mod)
mutated_mod['func_898'] = func_898
mutated_mod = relay.transform.InferType()(mutated_mod)
var_899 = relay.var("var_899", dtype = "float32", shape = (22, 4))#candidate|899|(22, 4)|var|float32
func_898_call = mutated_mod.get_global_var('func_898')
call_900 = func_898_call(var_899)
output = call_900
func_901 = relay.Function([var_899], output)
mutated_mod['func_901'] = func_901
mutated_mod = relay.transform.InferType()(mutated_mod)
func_483_call = mod.get_global_var('func_483')
func_485_call = mutated_mod.get_global_var('func_485')
call_1004 = relay.TupleGetItem(func_483_call(), 1)
call_1005 = relay.TupleGetItem(func_485_call(), 1)
output = call_1004
output2 = call_1005
func_1006 = relay.Function([], output)
mod['func_1006'] = func_1006
mod = relay.transform.InferType()(mod)
mutated_mod['func_1006'] = func_1006
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1006_call = mutated_mod.get_global_var('func_1006')
call_1007 = func_1006_call()
output = call_1007
func_1008 = relay.Function([], output)
mutated_mod['func_1008'] = func_1008
mutated_mod = relay.transform.InferType()(mutated_mod)
func_305_call = mod.get_global_var('func_305')
func_307_call = mutated_mod.get_global_var('func_307')
call_1027 = relay.TupleGetItem(func_305_call(), 1)
call_1028 = relay.TupleGetItem(func_307_call(), 1)
func_824_call = mod.get_global_var('func_824')
func_826_call = mutated_mod.get_global_var('func_826')
const_1041 = relay.const([3.241364,-7.346883,1.101447,-2.759333,4.458061,1.725597,-1.738182,-8.230717,-7.219799,8.169091,-3.446126,-7.759315,-2.008061,8.705225,6.909258,-5.576930,-9.831336,-0.891535,4.777447,7.061742,-4.934296,1.329782,-3.991300,-6.662293,2.947054,5.198390,3.877770,-1.694840,1.722122,3.945154,9.246942,2.041486,-9.803960,-9.430585,-3.179689,3.687813,-1.607969,-8.747669,-0.141825,6.265709,-1.490420,9.598742,-2.681142,7.160909,9.155052,8.430502,0.334803,-8.627413,-7.410024,9.015990,-1.024927,7.397580,-7.717824,2.979195,-4.328830,-8.665235,0.208665,7.656702,8.157195,-5.831379,4.286554,-5.157436,-8.373595,9.165882,8.311253,-1.573317,0.765318,-0.187290,1.916350,-7.227979,2.257349,-3.709427,0.400039,-6.445823,-0.898236,2.321917,-9.538956,-7.324710,8.360508,-9.106850,4.851694,-7.602018,-9.238250,-3.489346,1.102463,-0.498786,3.617832,1.985096,-3.400628,-5.840477,-6.644854,-2.161103,2.635945,-6.748435,-5.281700,0.384558,0.824045,-6.963847,-0.661366,3.421139,-1.629575,-2.137986,-7.125733,-0.692542,-2.842168,3.222089,-0.617681,3.805834,2.135753,-4.970422,-0.435766,8.324262,-1.615428,-5.884572,-6.880723,-1.418140,5.701958,-4.825966,-5.958240,-6.618399,2.475663,-0.356878,0.231233,5.913396,2.677325,4.682239,9.161855,1.110191,-1.658575,1.462402,7.731260,8.592509,-6.858816,-8.416257,-3.343863,1.499410,-6.128160,-8.136736,-5.322737,-6.992930,9.330623,6.928636,-7.653777,-6.396921,-1.386054,4.301395,5.122746,-3.316129,4.774268,1.144467,8.516695,0.204721,-6.031128,-4.112016,-4.255715,-2.724521,-6.600450,-2.702584,-5.328634,8.876800,-0.427932,-6.324095,-7.234496,-1.780918,8.801580,3.296879,-8.971435,-2.690587,-2.900407,0.523373,-9.413662,2.172871,-6.451200,2.871335,-4.354260,9.688257,-0.969188,6.099481,6.098893,-1.401336,2.053627,5.036707,-6.230195,-1.053829,-1.043551,9.756666,5.023774,2.328986,0.501567,-0.504438,-3.223627,-9.220776,9.482110,1.602959,8.722242,9.312057,8.294412,8.742355,-9.753988,2.744628,4.634809,2.303010,1.912017,-9.545814,-6.370408,-2.374126,6.783925,0.929099,-9.810617,2.093683,-9.005297,-4.387431,3.286190,8.042091,0.312618,2.551098,-2.993551,0.092030,2.332505,-1.147328,-3.241780,-3.220580,5.514384,-9.573569,-5.742960,-2.898006,-6.695063,3.551713,-8.578855,-0.366877,2.005314,-6.600418,-8.947384,9.450719,-0.956318,9.492513,-4.178138,-2.728845,9.574968,-7.189233,-1.156404,-6.916359,5.422635,-9.110291,8.799224,-8.237422,-4.774554,-3.734276,-2.676966,5.939276,7.493348,-0.724488,-3.415185,2.383616,7.132036,-1.939949,-6.350011,2.296718,-9.464326,8.988704,-3.604731,-4.426572,5.914093,5.283648,-5.907383,-8.514673,-2.705602,0.497359,4.919392,-7.961815,-0.255499,-3.138141,-4.805528,2.577533,8.345774,-4.680857,-2.310775,7.006426,6.628499,6.249401,0.025097,5.319714,-2.319619,-4.837996,3.433901,5.411454,6.409033,9.507231,5.062375,-1.415982,1.574881,-9.914549,6.202670,0.270085,-5.081290,-9.642888,-6.000322,6.408701,5.275059,-5.483815,2.489624,-5.829520,1.367760,-9.595942,-4.736495,-0.449598,9.929648,2.284751,-9.815867,3.842482,-8.144494,-4.399782,6.087074,3.256561,6.131009,0.654139,8.017066,-0.737901,3.319032,0.931356,0.783143,-0.306846,-4.430840,-9.164835,-1.766896,-3.840697,9.809300,-1.191778,-9.214200,2.297355,1.849240,-9.883279,3.162488,-7.552995,2.000822,-7.098138,7.182524,7.409401,8.868663,-1.473751,6.622436,-3.585258,4.833419,1.491125,-1.255576,4.475323,-3.301693,1.068605,-2.127090,-2.208180,3.113425,8.551839,1.355808,9.125996,-1.660840,1.860820,-7.436031,-0.922196,-3.875260,6.540090,8.293738,-3.655442,6.510873,3.959522,0.980989,5.747615,-1.973549,3.687334,-1.137042,-5.595982,-8.730564,-2.530874,3.411826,-3.609900,0.621149,8.625301,1.966079,-0.710387,2.554016,-9.893723,5.140043,5.933373,-9.014697,-8.818963,9.716040,6.637242,-3.923195,-6.132983,8.990063,2.013972,4.355038,7.348972,-2.778664,6.187325,2.321900,0.253897,1.257573,-9.464083,3.302578,-5.578320,-2.937880,7.921935,-7.450891,-7.014486,-9.505734,-4.429693,-7.861385,-9.368843,6.634665,-8.499853,-8.789252,2.303279,9.470792,8.339221,-2.991023,2.216013,-4.693114,3.822088,5.227571,-1.485411,4.933595,9.934986,-3.222097,5.885694,1.339765,-3.093374,1.114007,2.698967,6.552976,7.771161,4.919107,-8.754984,7.338234,-5.302577,-1.759068,3.578693,6.000357,6.073209,-8.957696,2.869579,7.763756,3.771326,0.531258,1.938467,-0.340518,7.300530,8.197895,9.870288,4.710977,3.554193,-8.422976,-4.873551,7.511208,9.392752,-9.961730,5.705750,-0.612259,-6.345453,-2.201591,-0.594731,-3.388855,-1.458656,-1.565207,1.023574,5.916002,2.282689,7.149350,9.277609,5.595972,-6.782241,4.497838,0.290241,2.736049,4.344296,9.159579,-1.064237,3.524938,-3.210676,-5.529378,-1.697611,-2.751831,3.092294,4.449741,1.944932,9.544295,-0.545168,1.745753,-8.383112,2.524444,-8.119735,2.618763,-4.970082,0.314617,-3.725562,-3.124536,1.511924,-2.620668,-7.485850,6.505468,3.616372,-0.638886,2.897210,5.352212,-3.254234,-6.538835,-4.821226,4.663070,-4.804939,2.297562,-4.480516,8.101778,-6.744940,-8.556876,8.164715,-7.891505,-3.698737,-4.030295,0.416556,8.459409,-9.534638,-5.386520,4.508477,-1.612885,9.583162,5.934433,5.620730,6.131711,-8.691402,8.469361,-4.469537,-9.219012,-8.487132,-4.918314,4.851072,0.052330,4.573859,-0.249252,3.440195,8.249743,-5.874983,-5.586875,5.459362,8.872906,1.803636,-3.788539,9.490786,-2.851084,1.395571,3.865074,-0.165703,5.773081,-4.493762,-5.317591,-5.916071,-4.501755,-5.143098,-9.819642,2.758917,-4.493803,-0.660460,-1.620718,7.371598,6.706764,8.240308,4.679534,2.130908,-2.786909,-2.109245,0.698910,-1.602265,6.208969,-9.836480,-8.471464,-7.487414,-9.599620,6.607078,-0.761134,8.147015,-2.255335,-5.098753,-4.590589,-4.942597,9.871433,-8.348249,3.234655,1.852557,2.745952,-6.570129,4.666927,-7.716179,-9.257106,-9.811245,2.794497,-2.644980,-9.609455,6.255334,8.203753,5.888758,0.502453,2.066953,-2.263131,4.621114,6.958635,-4.762690,-8.642293,-9.615129,-4.064669,6.672368,1.792431,5.560799,-7.838032,-3.007222,-2.392730,1.551303,9.114293,-0.331355,7.670335,-5.985876,-4.832522,1.436007,7.706754,1.664944,-2.023713,4.170213,-0.323148,1.059237,-5.574606,-6.115238,-7.084011,-1.003867,1.454203,0.991245,-9.130218,4.212683,-4.637367,-3.099998,-9.153099,-6.761991,-9.331653,-5.639694,-3.235917,-3.655165,-7.529352,-1.989542,-5.871939,-5.329216,7.222893,-4.330550,0.449617,-0.996903,-9.152345,-7.100525,-1.202358,6.042777,-0.178218,-9.065275,2.390741,7.752157,2.581325,-9.441346,-0.290867,8.024389,2.619109,-7.924974,5.919452,-0.863873,0.870996,2.032008,4.952453,-7.020045,-6.287660,0.749666,4.334152,0.898476,-7.910846,-0.526057,5.637712,-9.750980,3.720994,5.755008,-4.966767,-1.065579,-0.784250,0.171704,-6.058100,-5.482155,-3.280466,2.064382,-9.508459,8.048303,-0.135796,-3.547889,9.218438,-3.077267,4.953355,-3.830644,-4.827229,0.975260,-6.742259,-7.584926,-5.203349,3.590905,-1.030224,9.400892,-0.990408,4.249956,-3.357065,-1.808666,4.648607,8.571140,-9.383002,-7.179877,-4.820866,-2.430027,-5.517100,-8.867446,7.847297,-0.725033,-1.052213,-5.408844,-5.659465,5.838076,5.789019,-4.483871,3.073647,0.660091,2.111628,-8.792620,7.437727,-8.245565,1.961618,5.232089,3.460741,1.499488,3.211398,-6.154134,9.885566,-8.899469,7.993053,1.429220,-0.974369,-7.250623,-1.119844,-3.530591,1.566299,-7.978105,1.074049,8.780969,5.698169,-7.505068,5.081608,-4.219874,-4.752441,6.743782,0.887413,-9.253276,-6.155412,-3.864426,4.793908,-9.451972,9.857849,-2.417551,-7.991039,6.442305,-7.690634,-3.426100,-2.666336,-8.118966,-5.629371,-7.276336,9.946463,4.388570,-9.588197,-5.557921,-5.875021,-0.580502,6.987344,-7.223963,3.160746,0.179061,5.020839,8.296678,-4.778649,7.501227,3.904126,3.495129,-4.786478,-6.008128,-9.204611,9.494532,-1.664580,-9.111275,-0.624606,5.599705,5.739645,7.771874,1.102213,-2.548549,-3.648597,-5.855603,-3.210285,-0.380249,-1.498769,6.715441,-5.220343,-4.591545,-0.311669,-5.477812,7.668457,-3.531683,4.216898,-4.966899,-9.268720,-1.602838,-6.071436,6.047281,-9.209357,2.052775,-4.482731,9.384775,4.502498,8.932937,4.166641,-5.637973,-0.851739,7.187654,-4.672095,-4.062039,-4.514431,-3.718385,6.694076,4.344337,8.295540,-2.740224,7.198277,-6.031314,5.436108,2.702313,-7.678804,-5.240145,-9.898369,-0.724127,6.279041,-3.438460,9.597910,-8.070126,-9.857965,4.966326,-1.339589,4.900119,1.229096,6.751394,-5.318619,2.148368,-0.951191,6.521278,4.406503,-5.009236,-3.900929,3.754310,7.439870,-9.871240,7.899671,0.792996,3.805106,-7.096962,8.471984,-8.998349,-8.746635,-5.212931,2.445442,9.040959,1.932943,4.163598,-5.787491,0.498910,-7.195381,8.624934,2.404777,5.329079,-5.008131,-4.596076,0.835989,2.819445,-6.586255,7.511474,5.293555,1.774472,-4.051717,-4.734616,8.883980,-7.763681,4.705617,1.616747,-0.813428,9.533341,-2.480706,-6.331419,-3.069767,9.186371,0.189657,-8.719177,-1.604968,6.038099,-5.996563,0.323452,-0.173525,7.454124,-9.669642,-6.764237,-9.159935,1.146717,1.341119,-7.434963,5.673486,3.261101,-9.730715,9.837785,6.320403,3.615461,-7.685713,6.762162,-0.446069,-8.945092,5.896869,-8.236698,-8.919930,7.944026,8.293736,-4.367069,0.146577,-9.318833,8.826150,-9.403907,-8.065059,0.929113,0.005539,0.003025,3.324760,-4.124891,0.069213,-3.867692,-9.210201,8.108557,-7.064111,-7.693185,2.808588,5.093122,-5.781294,2.429136,-7.190480,6.535211,5.592786,8.916394,-0.929523,-9.366276,-2.287634,2.579854,-7.097428,4.737146,-5.427725,-3.466255,-1.861075,6.554102,-1.384218,5.717371,0.649952,-0.071330,-3.045773,5.692857,4.135630,-1.009522,2.041746,-4.635338,-2.181057,-6.796497,9.566551,4.406425,-8.514911,-0.896351,3.624469,4.960287,-2.357799,-2.107189,-9.522977,6.576655,7.662725,3.496063,4.991594,-2.674672,5.821559,4.146319,1.932062,-1.511545,8.850607,-5.126269,2.880514,6.072903,7.814315,-6.932822,8.403111,9.429901,9.131208,3.392976,-3.699213,-7.583206,-2.323919,-0.891424,-1.668481,-7.687769,8.474035,0.737145,-0.624801,-4.265673,-3.203978,2.439532,-7.961106,-7.901465,-8.255215,2.302925,2.206568,-8.288720,9.805315,8.235341,-8.269104,6.173794,4.616988,-4.219750,0.403761,5.509195,0.395808,1.648242,-6.351261,5.418968,-5.055952,4.200853,-4.933379,3.925953,6.669672,-0.780353,-7.633516,6.606682,-3.747734,-5.681348,5.181966,7.703443,-6.006370,-8.369859,-0.668126,6.317220,-3.486241,-3.445109,9.795460,-7.337603,-4.042822,-1.239146,-7.957541,-1.393671,5.548236,-0.044064,9.389138,7.042015,5.622484,-6.599363,3.255888,-1.820784,-9.519718,-8.526627,-0.002039,-1.767950,5.202348,-7.152311,3.902059,-7.236272,6.522056,1.806619,-0.406041,-3.850400,-5.005351,3.825071,1.889412,-1.231869,-0.588387,8.845933,6.011511,-9.938195,-9.096592,2.631827,8.658831,-0.261143,-9.925835,2.767966,-6.459980,-2.809875,-0.144287,-4.435686,0.658607,-3.373149,0.859283,5.957870,1.061229,-0.080803,-6.672706,3.089981,7.487159,-2.977072,7.964668,3.316214,0.867752,8.454849,2.843452,9.347788,-8.986008,2.837873,0.628595,-0.436336,-7.454044,-4.011323,-9.025955,-7.642740,7.827500,-5.821939,4.091384,-5.608023,2.706426,-5.661713,1.960632,-3.793460,5.883391,-7.701417,-6.311398,-4.327262,1.470378,7.350321,-8.027052,5.497261,-4.973445,1.800592,7.625905,-1.029186,8.381334,-2.323441,4.752389,-2.377321,-5.808040,4.772648,8.456333,0.087252,4.285305,7.129866,-4.490974,4.808482,-3.362775,-3.269454,3.302959,-7.446530,-0.417331,6.474090,1.863485,-4.282434,-9.432224,-6.354605,7.257872,-8.697550,-7.677980,4.880631,0.049521,7.527152,4.503251,5.572098,7.090098,9.822202,-3.243860,7.914768,-1.765532,9.137779,1.195776,-3.658321,1.268379,8.723405,-5.535389,9.651535,-5.948440,6.052459,-9.781443,-7.564916,6.415781,9.190510,-0.854221,2.136096,9.995630,-1.005481,6.041101,8.574156,5.524485,-8.450764,1.347358,6.312130,8.536192,0.457695,-1.858212,9.036772,7.819272,4.265176,6.856957,-7.703920,-8.887197,6.970507,-0.259558,-2.582667,-2.422092,0.895488,-1.342510,2.637427,-4.057806,-1.451431,-1.272676,-3.783647,-1.006089,5.702063,-5.437863,-1.589994,-9.520274,-9.977304,9.033628,2.703744,-9.008389,3.280225,1.363176,-3.611768,-0.962893,-0.667415,-2.336893,-8.044278,0.084079,-5.536723,-6.347819,-7.204806,-2.820037,1.885528,0.350459,1.055253,8.053156,4.922725,4.311351,-9.189693,-3.896794,-9.849184,5.331985,4.421914,3.599834,5.657984,2.317186,-1.901651,-7.515012,1.654247,-5.278695,6.056862,8.978829,7.230971,-8.612762,-3.589783,-2.479047,8.129647,-6.659528,-4.536168,-4.640047,9.290104,9.670069,-0.962912,1.607251,-4.789217,-7.398333,5.488233,-0.461487,2.570052,5.901807,1.991349,-9.317542,7.680801,3.789931,-5.388454,7.082443,4.073558,-9.114051,1.393034,3.715465,0.393050,7.231812,-9.669254,9.325256,0.882251,9.605918,8.307507,0.249027,-9.334598,-2.259072,5.694042,-0.272900,7.983860,-2.663781,-1.418712,-8.169523,8.782467,6.773623,3.019070,0.850871,2.953666,2.573595,3.109764,2.421443,7.689382,-2.240459,-1.608993,-3.667945,8.759515,-0.287059,-5.172259,-4.646437,-1.200526,3.128239,-5.685542,-5.858725,-5.150959,-3.041614,2.135029,6.608397,-3.273922,4.182033,3.421287,-3.855828,-2.652733,-5.202598,0.732326,-9.676529,-8.139122,9.031803,8.648591,-2.237549,9.242254,3.151869,9.138318,5.076450,-4.079506,-9.365351,-4.171232,8.917302,6.609574,-6.329369,-6.213637,-3.674568,-4.626569,6.123398,-2.231918,7.038707,0.817530,-6.668652,-1.687288,-2.401910,-3.591245,-5.886279,8.638289,9.307011,6.417055,5.740549,-8.235473,6.836811,5.451340,-5.700812,-1.263375,0.740735,-4.964129,-9.488713,8.449640,-3.037846,0.768707,6.791885,-5.541213,5.895490,-4.078857,0.841698,8.486994,2.555234,8.449955,-8.272739,-8.460558,6.362352,7.869005,2.239918,-3.566337,-5.867493,-4.527114,-4.900758,-6.098034,-3.594835,-1.213449,5.646394,-8.167217,-0.651124,5.420603,-4.829555,-7.623106,-9.125282,8.975202,0.859555,0.697719,-0.498760,9.534480,-3.495365,-8.697061,-9.880123,-7.704935,-4.050956,-5.051347,8.691845,3.654311,7.997702,6.345853,7.327252,9.407779,0.843515,-9.821985,-4.502058,-4.130620,1.603067,-3.872098,-4.454196,-2.950592,5.690788,5.459637,-4.881770,-9.483043,3.866275,3.493123,1.205579,8.872819,-9.556337,-6.838787,1.052246,6.549064,5.850860,-6.682807,1.502129,7.482383,8.552007,7.244241,7.941216,-2.793806,5.428399,-1.327799,-1.134659,0.026694,8.396481,-0.221070,7.840614,-5.479622,0.436497,-1.583505,6.669687,5.600975,-4.613482,-1.019148,6.980813,-7.194898,-1.014220,5.330568,-8.329745,5.335050,-9.130219,-5.216103,-8.128401,-1.449320,4.821092,-8.037640,-3.955869,-4.459097,-3.992581,2.299789,1.542088,-0.834671,-1.409194,-0.687177,9.236496,-7.122877,9.311699,6.475751,9.168649,3.191557,-5.879356,1.865632,-6.866130,9.549755,-0.007291,-0.647454,1.184168,-5.437192,-1.493078,-8.702289,-2.615946,4.698142,-2.201325,5.771647,-0.897764,-8.950757,-2.994831,-5.509030,6.803163,0.834436,-3.212149,9.765907,1.278987,6.310740,2.446071,8.030799,-5.543250,1.784933,1.908829,8.400114,-9.386313,-8.065583,5.472020,2.837876,-3.619632,0.585121,-3.721708,-4.632520,-3.162263,7.420722,-9.771111,6.521716,0.790661,5.545030,-0.519033,-3.955904,-2.307081,0.256961,0.897673,8.936729,-2.857707,-9.776079,1.272289,-1.142160,-9.411362,3.657386,-7.897801,-4.575646,-9.794367,-8.651987,-5.852686,6.508499,1.421561,-7.204846,9.560222,-4.313042,-8.178601,-2.087394,-6.783927,5.295006,-5.059510,7.814247,-6.184646,-8.245785,1.602187,6.558030,6.534137,-8.665113,8.486625,-0.505382,-1.944506,-4.548351,5.134068,1.485959,4.431934,3.079152,1.189628,-9.742182,-9.309200,-8.702629,2.160333,5.397753,-0.896387,2.211216,-7.316184,-6.369567,2.573588,-5.697949,7.524237,-2.309606,-8.543760,-5.949785,-3.374181,1.492755,0.463580,-3.012480,9.526861,-8.762336,2.929002,-6.995992,6.069738,6.570274,3.870262,7.582281,9.762936,-4.664653,2.977641,2.207801,4.198893,-3.109785,7.320250,-0.913382,-8.460367,-5.069819,-7.280652,-4.083168,-7.187886,-4.617693,2.476332,-7.692845,3.744928,-4.557340,-2.062787,-0.681546,4.103761,-6.780713,0.440970,7.307890,5.667200,-3.180897,-9.816356,0.738391,-6.234759,1.831299,-0.969069,-2.919276,-8.989348,-8.809488,-3.212632,-1.152772,-7.074697,-4.327132,9.598069,7.245974,-1.072180,7.082774,-8.082760,6.803829,-9.256943,-6.069152,-7.964033,3.759559,-5.236657,0.567659,-9.913658,-4.129041,7.959686,6.787035,-5.436986,7.690642,-6.438584,-5.300363,-6.718468,0.699437,-8.880423,8.241904,-6.790490,2.193435,-2.231938,7.302611,-3.123349,1.166690,0.048781,9.413325,-5.287301,-1.973975,5.604048,2.490561,-1.385092,-8.180957,4.055340,8.547100,-2.769603,-8.960235,-2.936242,-5.926575,0.926629,-0.019886,-1.186054,-1.672742,-2.126846,3.150313,3.235748,3.705211,3.808372,-3.965614,9.710219,-7.784825,-1.740824,8.092911,-3.791505,-0.410490,1.843811,-0.975260,-2.294217,-5.690499,6.567068,-0.065181,6.915836,-6.038459,6.018720,0.506894,0.732110,7.104998,-4.463513,-0.597665,-4.568974,-3.844645,1.535099,9.952378,5.955294,-6.649426,3.017052,-8.262640,8.326071,7.330627,1.057549,9.045913,-2.824353,2.615792,9.518264,9.031533,-8.950477,-4.322570,1.192257,1.254801,1.650293,8.002928,-4.311874,3.836290,4.826870,-3.017495,6.726940,6.988404,-6.283522,-6.828381,-7.774363,1.647026,0.260703,-3.122845,7.330945,-1.892836,3.760631,7.577662,3.928306,0.489691,5.640249,8.174635,-7.599727,-7.315251,3.370295,-4.548637,0.608365,-8.003445,4.171935,0.411599,-1.815437,-9.701904,5.533854,1.046848,-8.450626,9.173272,1.145939,2.959079,7.174323,-1.593595,-5.904595,-4.016698,4.878907,0.946493,8.828426,7.977691,-8.635809,-1.728984,-0.348684,-0.248860,-0.207854,-8.092132,-0.515400,9.599418,-2.742939,6.702028,7.144470,-9.632488,-1.708612,3.430559,-4.788830,-1.504114,-1.619414,-6.145657,-4.518670,-9.226150,8.013143,-1.728983,-5.356143,8.583320,-4.999956,8.995081,0.915169,-8.072502,5.365758,4.738664,-0.808425,-0.279565,-5.813076,7.539140,5.921561,-5.061655,7.107587,6.634376,-8.324507,-7.183689,0.638434,-3.239847,1.833777,-7.824786,3.812258,-0.740216,2.660783,-2.964725,6.380288,5.956429,7.613029,4.187990,-6.343135,-2.766068,-2.001159,2.637435,2.151936,-6.053081,-5.219838,4.590249,-6.817775,-2.592228,7.856516,-1.370431,-0.827469,6.880749,6.480624,-9.294730,5.588203,-4.109056,6.493579,9.595212,-1.458191,9.300888,7.626748,-0.065253,-0.934006,1.327959,2.201367,0.780906,3.291893,-4.702674,6.005541,9.688306,0.219151,-2.223058,6.479984,3.649908,6.313152,9.719713,-2.175293,6.264661,-7.809792,-6.170574,-4.793417,2.996296,-1.229270,-2.064574,1.159082,8.240514,3.819015,9.823034,1.447466,-5.365532,-9.122631,9.173352,4.374859,5.303123,-9.559226,-4.312990,3.143699,-7.294650,9.981557,-3.968535,-7.659985,0.790510,5.972206,9.656112,-1.455845,-4.701547,6.582569,8.432535,-4.249501,-8.528015,-6.167667,5.243717,-0.540002,2.240622,-8.024225,-2.742510,4.138989,-3.171337,1.303604,-8.717309,-9.705578,-6.823403,-5.520452,-1.139243,-5.510224,2.674901,2.202726,2.738597,9.087691,3.784648,-9.981535,-1.741656,-5.883497,-6.604374,-6.362782,0.602424,0.488704,-0.227399,1.869750,-4.833604,0.262013,-0.413848,-5.030035,0.319853,-5.058915,9.429241,-7.525485,2.372826,0.135750,-9.317675,-3.954280,-7.768077,1.584786,3.714173,4.907406,2.563103,-1.795181,-7.282476,7.353247,-6.699013,-7.031984,-6.200534,6.110116,2.823507,7.951649,6.774622,8.555670,-8.895516,-6.952248,2.969631,6.698742,4.243713,-4.790879,3.925662,8.675642,-3.459469,6.585877,-6.263076,-6.801402,6.500972,-3.743016,2.367812,-1.828047,-9.759709,6.009750,1.086887,-4.592653,-4.495405,-1.389791,-7.251237,9.218226,6.839060,0.951617,-3.952830,-4.389647,-5.487378,-1.731676,-4.908802,7.656026,8.299770,3.264900,7.106615,1.390373,-5.541419,6.452529,8.302724,5.098753,-9.779018,2.559925,-5.738774,-5.115533,-8.084839,-4.880729,-4.291947,8.892678,3.779871,-9.531642,8.136278,-9.047803,4.784332,-4.610279,2.112116,0.297379,4.854585,-1.064520,-3.231599,-6.287731,6.633857,-0.032548,-6.830166,7.696361,-6.600120,-1.482602,-3.471485,3.223541,1.705640,-2.096913,-3.536313,-0.296157,-1.783941,0.405395,2.399731,5.600200,3.064206,-0.544586,-9.863901,4.291288,2.650234,-8.454358,-8.176047,6.482478,5.119086,-7.398633,-3.667329,8.179843,0.184413,6.179631,-4.031287,5.717848,-0.581638,1.006459,-0.495934,9.071744,4.475590,1.398725,-5.814332,7.815349,-8.560888,4.800839,-5.483931,-7.046443,0.158876,-7.680712,-9.493512,2.068829,-6.546167,3.850349,5.049711,-1.902630,-7.668750,7.844882,9.497879,2.214664,-3.702291,-5.546796,1.509134,6.823719,-3.288811,8.967811,6.403784,-3.282361,9.960170,-2.883496,-0.380157,5.460160,-3.985390,9.537813,5.851868,-2.265104,4.569562,-1.901271,5.543742,-8.024665,-3.722388,-2.832658,-8.064658,7.665611,1.803140,0.056410,-9.462986,-8.598211,3.649737,-7.320790,-8.259109,-9.565717,9.922308,8.980769,-6.498703,8.460909,5.506105,3.305854,-8.683422,4.848682,-7.870475,8.262915,-6.132374,-8.534438,-7.303881,-1.341983,6.289922,-3.122931,-5.466206,3.370444,9.906243,2.036539,-1.263678,7.912971,3.012657,-8.828322,7.616947,-3.461937,-2.554347,4.065320,-8.508420,1.523744,-6.430089,-5.505628,9.281432,-4.458488,-2.312940,9.920213,-0.233721,5.364550,-9.039505,4.657687,-4.303939,7.937024,-1.300787,5.593090,-7.423531,-5.993895,-0.008260,2.794536,-0.778161,1.985981,2.541934,-2.291391,3.770082,1.204632,7.926361,7.082445,8.650157,-5.146813,2.229849,-3.210493,8.075484,-3.736290,6.266311,0.273321,2.455685,3.388446,-2.406159,-8.461464,1.672508,5.260231,7.279700,-9.401073,7.757476,-2.641316,-7.127287,-6.186361,-4.081302,-4.498272,7.115424,3.482165,-5.244905,5.801066,-1.603155,-5.995180,-1.512240,8.621011,-4.766786,-2.093443,-4.613686,-6.555081,2.298818,-3.540216,2.973070,6.918520,0.447873,-1.582667,8.830123,-4.818130,5.871307,-1.049049,-3.380560,4.402701,0.201155,-1.274359,8.718876,6.473083,7.978593,-4.575486,-8.520111,2.949607,-8.267335,8.157732,-1.540413,-9.201517,-9.798345,1.251320,-3.851842,9.732405,-4.727934,3.155935,-5.288501,-8.861209,1.860914,-0.154015,-1.097881,6.791946,9.808276,3.686677,-2.203700,-4.410725,-9.144104,4.810664,-7.450067,-9.870086,-9.696488,-2.614044,-8.666769,-6.864061,9.112935,9.709962,1.666770,9.900455,6.430020,-3.735915,-5.889664,-4.674066,-1.779145,4.089421,-6.553473,0.357482,1.435176,3.637504,-5.446543,5.334603,5.331056,4.626260,9.549479,1.534124,2.747772,-2.751824,-1.831563,-2.931731,-3.622020,-2.999607,-8.309619,7.037151,9.736050,8.105964,0.566342,-6.581530,-9.398310,3.931335,-9.864200,-9.124126,-4.050619,2.567740,-8.580833,6.227238,1.215211,9.727430,9.718928,9.947637,-2.107619,-3.879136,-5.981373,-4.912892,-6.927961,-6.832661,-8.803988,1.995003,-6.446639,-1.297654,-0.641837,0.360458,4.666329,0.623271,-9.747891,8.351461,-0.512447,-3.142742,-1.726536,2.610280,-6.922732,4.068446,-9.191627,0.429529,2.767971,5.741158,8.397882,3.919987,-8.658889,0.294913,-3.889968,8.371211,-1.261461,8.039220,-2.097314,0.983565,-4.349057,4.915881,4.343490,6.698855,-7.978796,8.014733,-6.662277,-7.729564,7.933133,7.032584,9.239090,-7.029951,-5.105307,-4.117393,-2.086281,4.901193,5.047189,-8.824864,6.239929,1.714119,-9.217611,6.544188,-0.067596,8.905489,3.297269,5.200847,0.706843,-0.111926,0.972518,-0.495886,-8.149884,-2.573919,8.986683,4.130052,0.605769,-0.831850,3.254755,-8.285940,-6.729281,4.591046,-4.628111,-5.863871,4.596973,7.655452,8.231594,-6.413560,4.663066,8.541412,0.353684,9.082307,-9.024700,3.387455,6.402747,3.689661,7.409228,7.204256,2.891360,-8.163109,-0.005845,7.131793,9.070105,5.451383,-0.578580,2.059765,9.417037,-3.554306,4.552854,4.551260,6.319106,-0.354723,-1.452353,-0.810293,6.339821,-9.082383,-7.686493,1.546960,2.589801,-8.415038,-9.031667,-1.864362,-3.211294,4.432334,-3.983772,-8.319283,2.530290,-8.669788,-2.210613,4.673660,4.729644,6.959598,4.598362,-2.754683,-9.210428,-3.024946,-2.837570,-8.282327,-2.504308,-0.753305,4.226644,-9.102044,5.252700,-4.564392,-6.161177,9.506163,2.661068,5.110432,-8.464563,3.070780,3.192668,8.128181,-7.536484,-2.336032,8.495062,2.924974,-0.324359,6.175004,7.544089,4.975499,8.255241,1.392970,-2.767947,6.892716,-3.359972,3.002511,-4.312556,-4.556496,-6.134664,7.785600,4.359563,-4.614545,7.770995,-3.210842,2.950161,-7.571212,-8.238891,9.630323,-3.316757,1.953580,-1.705218,-3.760707,1.840017,4.849491,-7.204076,3.018437,-9.952892,9.657544,4.959479,-9.952286,7.916710,2.406708,-1.111591,-4.082090,9.526405,-3.176205,-1.558215,8.508423,0.334184,-0.971070,8.904837,3.342365,7.526061,8.980573,-1.775776,-8.293649,-6.019838,-2.561810,-8.576165,-3.181003,-0.708253,7.389259,3.160567,1.355131,-8.083023,-6.027893,7.192873,1.019253,-5.769186,-9.754839,-5.597933,5.324452,-5.756198,0.073076,-9.242253,2.989000,-1.432693,-6.891550,5.189283,-4.895512,8.855419,5.002127,4.185386,9.713458,-5.715109,-2.241220,-1.066745,4.756586,7.639710,-1.563670,-6.978319,5.105097,-1.689634,3.008128,3.605227,2.380890,-8.946869,6.942280,4.324776,-9.840573,-3.317074,-8.080281,-7.671513,-6.917887,3.171686,2.853519,-5.611551,-1.034943,-0.484433,-2.354214,-6.141255,-1.995806,-8.024510,-9.858972,8.309728,2.704988,3.443999,-1.633365,-6.889165,-0.221498,5.464712,6.358953,-2.423698,0.753578,0.926128], dtype = "float64")#candidate|1041|(2560,)|const|float64
call_1040 = relay.TupleGetItem(func_824_call(relay.reshape(const_1041.astype('float64'), [2560, 1])), 4)
call_1042 = relay.TupleGetItem(func_826_call(relay.reshape(const_1041.astype('float64'), [2560, 1])), 4)
func_735_call = mod.get_global_var('func_735')
func_737_call = mutated_mod.get_global_var('func_737')
call_1045 = relay.TupleGetItem(func_735_call(), 2)
call_1046 = relay.TupleGetItem(func_737_call(), 2)
output = relay.Tuple([call_1027,call_1040,const_1041,call_1045,])
output2 = relay.Tuple([call_1028,call_1042,const_1041,call_1046,])
func_1047 = relay.Function([], output)
mod['func_1047'] = func_1047
mod = relay.transform.InferType()(mod)
mutated_mod['func_1047'] = func_1047
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1047_call = mutated_mod.get_global_var('func_1047')
call_1048 = func_1047_call()
output = call_1048
func_1049 = relay.Function([], output)
mutated_mod['func_1049'] = func_1049
mutated_mod = relay.transform.InferType()(mutated_mod)
func_510_call = mod.get_global_var('func_510')
func_512_call = mutated_mod.get_global_var('func_512')
call_1087 = relay.TupleGetItem(func_510_call(), 0)
call_1088 = relay.TupleGetItem(func_512_call(), 0)
var_1103 = relay.var("var_1103", dtype = "bool", shape = (11, 4, 2))#candidate|1103|(11, 4, 2)|var|bool
bop_1104 = relay.less_equal(call_1087.astype('bool'), relay.reshape(var_1103.astype('bool'), relay.shape_of(call_1087))) # shape=(11, 4, 2)
bop_1107 = relay.less_equal(call_1088.astype('bool'), relay.reshape(var_1103.astype('bool'), relay.shape_of(call_1088))) # shape=(11, 4, 2)
func_181_call = mod.get_global_var('func_181')
func_183_call = mutated_mod.get_global_var('func_183')
call_1108 = relay.TupleGetItem(func_181_call(), 1)
call_1109 = relay.TupleGetItem(func_183_call(), 1)
output = relay.Tuple([bop_1104,call_1108,])
output2 = relay.Tuple([bop_1107,call_1109,])
func_1123 = relay.Function([var_1103,], output)
mod['func_1123'] = func_1123
mod = relay.transform.InferType()(mod)
var_1124 = relay.var("var_1124", dtype = "bool", shape = (11, 4, 2))#candidate|1124|(11, 4, 2)|var|bool
output = func_1123(var_1124)
func_1125 = relay.Function([var_1124], output)
mutated_mod['func_1125'] = func_1125
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1006_call = mod.get_global_var('func_1006')
func_1008_call = mutated_mod.get_global_var('func_1008')
call_1161 = func_1006_call()
call_1162 = func_1006_call()
var_1165 = relay.var("var_1165", dtype = "bool", shape = (11, 4, 2))#candidate|1165|(11, 4, 2)|var|bool
bop_1166 = relay.equal(call_1161.astype('bool'), relay.reshape(var_1165.astype('bool'), relay.shape_of(call_1161))) # shape=(11, 4, 2)
bop_1169 = relay.equal(call_1162.astype('bool'), relay.reshape(var_1165.astype('bool'), relay.shape_of(call_1162))) # shape=(11, 4, 2)
uop_1189 = relay.exp(var_1165.astype('float32')) # shape=(11, 4, 2)
func_81_call = mod.get_global_var('func_81')
func_85_call = mutated_mod.get_global_var('func_85')
call_1199 = relay.TupleGetItem(func_81_call(relay.reshape(call_1161.astype('float32'), [11, 4, 2]), relay.reshape(bop_1166.astype('float32'), [11, 4, 2]), ), 0)
call_1200 = relay.TupleGetItem(func_85_call(relay.reshape(call_1161.astype('float32'), [11, 4, 2]), relay.reshape(bop_1166.astype('float32'), [11, 4, 2]), ), 0)
bop_1211 = relay.right_shift(uop_1189.astype('int16'), relay.reshape(call_1199.astype('int16'), relay.shape_of(uop_1189))) # shape=(11, 4, 2)
bop_1214 = relay.right_shift(uop_1189.astype('int16'), relay.reshape(call_1200.astype('int16'), relay.shape_of(uop_1189))) # shape=(11, 4, 2)
bop_1227 = relay.floor_mod(uop_1189.astype('float32'), relay.reshape(var_1165.astype('float32'), relay.shape_of(uop_1189))) # shape=(11, 4, 2)
var_1230 = relay.var("var_1230", dtype = "bool", shape = (11, 4, 2))#candidate|1230|(11, 4, 2)|var|bool
bop_1231 = relay.add(var_1165.astype('uint32'), relay.reshape(var_1230.astype('uint32'), relay.shape_of(var_1165))) # shape=(11, 4, 2)
output = relay.Tuple([bop_1166,bop_1211,bop_1227,bop_1231,])
output2 = relay.Tuple([bop_1169,bop_1214,bop_1227,bop_1231,])
func_1235 = relay.Function([var_1165,var_1230,], output)
mod['func_1235'] = func_1235
mod = relay.transform.InferType()(mod)
var_1236 = relay.var("var_1236", dtype = "bool", shape = (11, 4, 2))#candidate|1236|(11, 4, 2)|var|bool
var_1237 = relay.var("var_1237", dtype = "bool", shape = (11, 4, 2))#candidate|1237|(11, 4, 2)|var|bool
output = func_1235(var_1236,var_1237,)
func_1238 = relay.Function([var_1236,var_1237,], output)
mutated_mod['func_1238'] = func_1238
mutated_mod = relay.transform.InferType()(mutated_mod)
func_534_call = mod.get_global_var('func_534')
func_536_call = mutated_mod.get_global_var('func_536')
call_1326 = relay.TupleGetItem(func_534_call(), 0)
call_1327 = relay.TupleGetItem(func_536_call(), 0)
func_1235_call = mod.get_global_var('func_1235')
func_1238_call = mutated_mod.get_global_var('func_1238')
call_1366 = relay.TupleGetItem(func_1235_call(relay.reshape(call_1326.astype('bool'), [11, 4, 2]), relay.reshape(call_1326.astype('bool'), [11, 4, 2]), ), 1)
call_1367 = relay.TupleGetItem(func_1238_call(relay.reshape(call_1326.astype('bool'), [11, 4, 2]), relay.reshape(call_1326.astype('bool'), [11, 4, 2]), ), 1)
func_1006_call = mod.get_global_var('func_1006')
func_1008_call = mutated_mod.get_global_var('func_1008')
call_1378 = func_1006_call()
call_1379 = func_1006_call()
output = relay.Tuple([call_1326,call_1366,call_1378,])
output2 = relay.Tuple([call_1327,call_1367,call_1379,])
func_1382 = relay.Function([], output)
mod['func_1382'] = func_1382
mod = relay.transform.InferType()(mod)
output = func_1382()
func_1383 = relay.Function([], output)
mutated_mod['func_1383'] = func_1383
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1391 = relay.var("var_1391", dtype = "uint64", shape = (2, 11, 11))#candidate|1391|(2, 11, 11)|var|uint64
var_1392 = relay.var("var_1392", dtype = "uint64", shape = (2, 11, 11))#candidate|1392|(2, 11, 11)|var|uint64
bop_1393 = relay.multiply(var_1391.astype('uint64'), relay.reshape(var_1392.astype('uint64'), relay.shape_of(var_1391))) # shape=(2, 11, 11)
output = bop_1393
output2 = bop_1393
func_1401 = relay.Function([var_1391,var_1392,], output)
mod['func_1401'] = func_1401
mod = relay.transform.InferType()(mod)
mutated_mod['func_1401'] = func_1401
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1401_call = mutated_mod.get_global_var('func_1401')
var_1403 = relay.var("var_1403", dtype = "uint64", shape = (2, 11, 11))#candidate|1403|(2, 11, 11)|var|uint64
var_1404 = relay.var("var_1404", dtype = "uint64", shape = (2, 11, 11))#candidate|1404|(2, 11, 11)|var|uint64
call_1402 = func_1401_call(var_1403,var_1404,)
output = call_1402
func_1405 = relay.Function([var_1403,var_1404,], output)
mutated_mod['func_1405'] = func_1405
mutated_mod = relay.transform.InferType()(mutated_mod)
func_735_call = mod.get_global_var('func_735')
func_737_call = mutated_mod.get_global_var('func_737')
call_1512 = relay.TupleGetItem(func_735_call(), 0)
call_1513 = relay.TupleGetItem(func_737_call(), 0)
output = relay.Tuple([call_1512,])
output2 = relay.Tuple([call_1513,])
func_1531 = relay.Function([], output)
mod['func_1531'] = func_1531
mod = relay.transform.InferType()(mod)
mutated_mod['func_1531'] = func_1531
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1531_call = mutated_mod.get_global_var('func_1531')
call_1532 = func_1531_call()
output = call_1532
func_1533 = relay.Function([], output)
mutated_mod['func_1533'] = func_1533
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1382_call = mod.get_global_var('func_1382')
func_1383_call = mutated_mod.get_global_var('func_1383')
call_1547 = relay.TupleGetItem(func_1382_call(), 2)
call_1548 = relay.TupleGetItem(func_1383_call(), 2)
output = call_1547
output2 = call_1548
func_1594 = relay.Function([], output)
mod['func_1594'] = func_1594
mod = relay.transform.InferType()(mod)
output = func_1594()
func_1595 = relay.Function([], output)
mutated_mod['func_1595'] = func_1595
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1006_call = mod.get_global_var('func_1006')
func_1008_call = mutated_mod.get_global_var('func_1008')
call_1636 = func_1006_call()
call_1637 = func_1006_call()
func_510_call = mod.get_global_var('func_510')
func_512_call = mutated_mod.get_global_var('func_512')
call_1638 = relay.TupleGetItem(func_510_call(), 0)
call_1639 = relay.TupleGetItem(func_512_call(), 0)
func_1531_call = mod.get_global_var('func_1531')
func_1533_call = mutated_mod.get_global_var('func_1533')
call_1663 = relay.TupleGetItem(func_1531_call(), 0)
call_1664 = relay.TupleGetItem(func_1533_call(), 0)
func_101_call = mod.get_global_var('func_101')
func_102_call = mutated_mod.get_global_var('func_102')
call_1683 = relay.TupleGetItem(func_101_call(), 0)
call_1684 = relay.TupleGetItem(func_102_call(), 0)
var_1700 = relay.var("var_1700", dtype = "float64", shape = (12, 2, 12))#candidate|1700|(12, 2, 12)|var|float64
bop_1701 = relay.greater(call_1683.astype('bool'), relay.reshape(var_1700.astype('bool'), relay.shape_of(call_1683))) # shape=(12, 2, 12)
bop_1704 = relay.greater(call_1684.astype('bool'), relay.reshape(var_1700.astype('bool'), relay.shape_of(call_1684))) # shape=(12, 2, 12)
output = relay.Tuple([call_1636,call_1638,call_1663,bop_1701,])
output2 = relay.Tuple([call_1637,call_1639,call_1664,bop_1704,])
func_1720 = relay.Function([var_1700,], output)
mod['func_1720'] = func_1720
mod = relay.transform.InferType()(mod)
var_1721 = relay.var("var_1721", dtype = "float64", shape = (12, 2, 12))#candidate|1721|(12, 2, 12)|var|float64
output = func_1720(var_1721)
func_1722 = relay.Function([var_1721], output)
mutated_mod['func_1722'] = func_1722
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1382_call = mod.get_global_var('func_1382')
func_1383_call = mutated_mod.get_global_var('func_1383')
call_1740 = relay.TupleGetItem(func_1382_call(), 1)
call_1741 = relay.TupleGetItem(func_1383_call(), 1)
func_510_call = mod.get_global_var('func_510')
func_512_call = mutated_mod.get_global_var('func_512')
call_1752 = relay.TupleGetItem(func_510_call(), 0)
call_1753 = relay.TupleGetItem(func_512_call(), 0)
output = relay.Tuple([call_1740,call_1752,])
output2 = relay.Tuple([call_1741,call_1753,])
func_1760 = relay.Function([], output)
mod['func_1760'] = func_1760
mod = relay.transform.InferType()(mod)
output = func_1760()
func_1761 = relay.Function([], output)
mutated_mod['func_1761'] = func_1761
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1790 = relay.var("var_1790", dtype = "float32", shape = (10, 7, 6))#candidate|1790|(10, 7, 6)|var|float32
uop_1791 = relay.exp(var_1790.astype('float32')) # shape=(10, 7, 6)
output = uop_1791
output2 = uop_1791
func_1794 = relay.Function([var_1790,], output)
mod['func_1794'] = func_1794
mod = relay.transform.InferType()(mod)
var_1795 = relay.var("var_1795", dtype = "float32", shape = (10, 7, 6))#candidate|1795|(10, 7, 6)|var|float32
output = func_1794(var_1795)
func_1796 = relay.Function([var_1795], output)
mutated_mod['func_1796'] = func_1796
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1830 = relay.var("var_1830", dtype = "uint32", shape = (16, 4, 7))#candidate|1830|(16, 4, 7)|var|uint32
const_1831 = relay.const([[[7,10,1,2,-7,1,2],[5,-1,-6,-10,-2,10,10],[-5,-9,-4,-4,-9,10,-5],[-1,-8,-6,5,-9,-8,7]],[[-1,10,-7,-10,-8,-3,1],[2,-4,-2,1,3,-1,-10],[7,6,6,6,5,-2,10],[-9,-1,-6,5,-1,-7,2]],[[-1,8,-2,8,10,-1,9],[7,3,8,-8,10,2,10],[8,-9,6,4,2,6,-5],[-9,2,-4,4,8,-6,-5]],[[-10,2,-1,-4,10,5,-2],[-6,-9,3,-10,6,-9,-6],[-3,-7,-8,-10,2,7,5],[-4,4,6,-4,5,-6,-8]],[[5,3,-4,10,9,-4,3],[-3,-1,7,-6,1,2,3],[-6,6,-4,-9,7,-2,-9],[-9,8,-3,8,6,-3,-5]],[[-10,-6,9,10,-8,2,10],[4,-2,4,-5,-9,-6,-9],[2,5,-2,10,2,-5,-3],[-8,4,-2,6,-8,-10,-6]],[[-2,7,-10,-7,5,6,-1],[10,9,-5,-1,-1,1,-10],[6,9,-10,3,-1,2,10],[-5,-8,-3,4,-10,-2,-4]],[[10,-6,-7,-4,3,6,-8],[2,-6,-6,-4,3,-6,-5],[-6,3,-2,-2,-6,-7,-4],[3,-3,7,-9,-8,-4,3]],[[4,8,6,7,10,8,-4],[3,9,-9,10,-4,10,4],[-2,2,4,7,-1,7,-2],[5,1,5,5,-2,9,-4]],[[7,3,-2,7,-6,7,9],[-9,10,-8,-4,-8,-6,-4],[8,3,5,-7,2,-4,-8],[-6,-4,9,-10,4,1,-3]],[[-2,-1,-6,-8,-2,-7,-8],[-5,-3,-5,-7,-10,3,-1],[5,1,-4,10,7,-10,-2],[3,9,6,8,-8,8,-2]],[[-1,5,-10,7,-9,1,-4],[2,7,4,1,7,-3,-6],[2,-4,-10,10,7,3,4],[-1,6,-4,9,8,-10,-3]],[[1,-6,5,5,8,7,-3],[-9,-6,-5,6,-5,7,-6],[10,2,7,4,5,-9,-7],[8,9,-6,10,7,-1,10]],[[8,7,-5,9,8,-6,-5],[5,5,1,-3,-1,10,-8],[10,1,3,-6,-8,4,2],[-8,-9,10,-6,-8,-10,1]],[[-8,-3,6,6,1,-10,1],[-6,6,-10,6,-10,1,-3],[-8,-2,-3,3,-8,-9,-3],[1,-4,4,8,-6,-6,-1]],[[4,-9,-8,7,8,1,2],[-7,10,8,-5,-6,8,9],[8,-2,-4,5,4,7,5],[-9,7,-2,4,-3,-4,-1]]], dtype = "uint32")#candidate|1831|(16, 4, 7)|const|uint32
bop_1832 = relay.less_equal(var_1830.astype('bool'), relay.reshape(const_1831.astype('bool'), relay.shape_of(var_1830))) # shape=(16, 4, 7)
output = relay.Tuple([bop_1832,])
output2 = relay.Tuple([bop_1832,])
func_1848 = relay.Function([var_1830,], output)
mod['func_1848'] = func_1848
mod = relay.transform.InferType()(mod)
mutated_mod['func_1848'] = func_1848
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1849 = relay.var("var_1849", dtype = "uint32", shape = (16, 4, 7))#candidate|1849|(16, 4, 7)|var|uint32
func_1848_call = mutated_mod.get_global_var('func_1848')
call_1850 = func_1848_call(var_1849)
output = call_1850
func_1851 = relay.Function([var_1849], output)
mutated_mod['func_1851'] = func_1851
mutated_mod = relay.transform.InferType()(mutated_mod)
func_305_call = mod.get_global_var('func_305')
func_307_call = mutated_mod.get_global_var('func_307')
call_1856 = relay.TupleGetItem(func_305_call(), 2)
call_1857 = relay.TupleGetItem(func_307_call(), 2)
output = call_1856
output2 = call_1857
func_1868 = relay.Function([], output)
mod['func_1868'] = func_1868
mod = relay.transform.InferType()(mod)
output = func_1868()
func_1869 = relay.Function([], output)
mutated_mod['func_1869'] = func_1869
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1878 = relay.var("var_1878", dtype = "float64", shape = (13, 12, 15))#candidate|1878|(13, 12, 15)|var|float64
uop_1879 = relay.atanh(var_1878.astype('float64')) # shape=(13, 12, 15)
uop_1881 = relay.cos(uop_1879.astype('float32')) # shape=(13, 12, 15)
output = relay.Tuple([uop_1881,])
output2 = relay.Tuple([uop_1881,])
func_1885 = relay.Function([var_1878,], output)
mod['func_1885'] = func_1885
mod = relay.transform.InferType()(mod)
mutated_mod['func_1885'] = func_1885
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1886 = relay.var("var_1886", dtype = "float64", shape = (13, 12, 15))#candidate|1886|(13, 12, 15)|var|float64
func_1885_call = mutated_mod.get_global_var('func_1885')
call_1887 = func_1885_call(var_1886)
output = call_1887
func_1888 = relay.Function([var_1886], output)
mutated_mod['func_1888'] = func_1888
mutated_mod = relay.transform.InferType()(mutated_mod)
func_534_call = mod.get_global_var('func_534')
func_536_call = mutated_mod.get_global_var('func_536')
call_1892 = relay.TupleGetItem(func_534_call(), 0)
call_1893 = relay.TupleGetItem(func_536_call(), 0)
func_305_call = mod.get_global_var('func_305')
func_307_call = mutated_mod.get_global_var('func_307')
call_1901 = relay.TupleGetItem(func_305_call(), 0)
call_1902 = relay.TupleGetItem(func_307_call(), 0)
uop_1925 = relay.cos(call_1901.astype('float64')) # shape=(22, 4)
uop_1927 = relay.cos(call_1902.astype('float64')) # shape=(22, 4)
output = relay.Tuple([call_1892,uop_1925,])
output2 = relay.Tuple([call_1893,uop_1927,])
func_1929 = relay.Function([], output)
mod['func_1929'] = func_1929
mod = relay.transform.InferType()(mod)
mutated_mod['func_1929'] = func_1929
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1929_call = mutated_mod.get_global_var('func_1929')
call_1930 = func_1929_call()
output = call_1930
func_1931 = relay.Function([], output)
mutated_mod['func_1931'] = func_1931
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1531_call = mod.get_global_var('func_1531')
func_1533_call = mutated_mod.get_global_var('func_1533')
call_1950 = relay.TupleGetItem(func_1531_call(), 0)
call_1951 = relay.TupleGetItem(func_1533_call(), 0)
output = call_1950
output2 = call_1951
func_1963 = relay.Function([], output)
mod['func_1963'] = func_1963
mod = relay.transform.InferType()(mod)
mutated_mod['func_1963'] = func_1963
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1963_call = mutated_mod.get_global_var('func_1963')
call_1964 = func_1963_call()
output = call_1964
func_1965 = relay.Function([], output)
mutated_mod['func_1965'] = func_1965
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1972 = relay.var("var_1972", dtype = "int64", shape = (12, 7, 8))#candidate|1972|(12, 7, 8)|var|int64
var_1973 = relay.var("var_1973", dtype = "int64", shape = (12, 7, 8))#candidate|1973|(12, 7, 8)|var|int64
bop_1974 = relay.add(var_1972.astype('int64'), relay.reshape(var_1973.astype('int64'), relay.shape_of(var_1972))) # shape=(12, 7, 8)
bop_1993 = relay.minimum(var_1973.astype('float32'), relay.reshape(bop_1974.astype('float32'), relay.shape_of(var_1973))) # shape=(12, 7, 8)
output = bop_1993
output2 = bop_1993
func_1999 = relay.Function([var_1972,var_1973,], output)
mod['func_1999'] = func_1999
mod = relay.transform.InferType()(mod)
mutated_mod['func_1999'] = func_1999
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1999_call = mutated_mod.get_global_var('func_1999')
var_2001 = relay.var("var_2001", dtype = "int64", shape = (12, 7, 8))#candidate|2001|(12, 7, 8)|var|int64
var_2002 = relay.var("var_2002", dtype = "int64", shape = (12, 7, 8))#candidate|2002|(12, 7, 8)|var|int64
call_2000 = func_1999_call(var_2001,var_2002,)
output = call_2000
func_2003 = relay.Function([var_2001,var_2002,], output)
mutated_mod['func_2003'] = func_2003
mutated_mod = relay.transform.InferType()(mutated_mod)
func_534_call = mod.get_global_var('func_534')
func_536_call = mutated_mod.get_global_var('func_536')
call_2045 = relay.TupleGetItem(func_534_call(), 0)
call_2046 = relay.TupleGetItem(func_536_call(), 0)
func_1963_call = mod.get_global_var('func_1963')
func_1965_call = mutated_mod.get_global_var('func_1965')
call_2087 = func_1963_call()
call_2088 = func_1963_call()
output = relay.Tuple([call_2045,call_2087,])
output2 = relay.Tuple([call_2046,call_2088,])
func_2107 = relay.Function([], output)
mod['func_2107'] = func_2107
mod = relay.transform.InferType()(mod)
mutated_mod['func_2107'] = func_2107
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2107_call = mutated_mod.get_global_var('func_2107')
call_2108 = func_2107_call()
output = call_2108
func_2109 = relay.Function([], output)
mutated_mod['func_2109'] = func_2109
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2150 = relay.var("var_2150", dtype = "float32", shape = (15, 5))#candidate|2150|(15, 5)|var|float32
uop_2151 = relay.rsqrt(var_2150.astype('float32')) # shape=(15, 5)
output = relay.Tuple([uop_2151,])
output2 = relay.Tuple([uop_2151,])
func_2155 = relay.Function([var_2150,], output)
mod['func_2155'] = func_2155
mod = relay.transform.InferType()(mod)
var_2156 = relay.var("var_2156", dtype = "float32", shape = (15, 5))#candidate|2156|(15, 5)|var|float32
output = func_2155(var_2156)
func_2157 = relay.Function([var_2156], output)
mutated_mod['func_2157'] = func_2157
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1047_call = mod.get_global_var('func_1047')
func_1049_call = mutated_mod.get_global_var('func_1049')
call_2171 = relay.TupleGetItem(func_1047_call(), 1)
call_2172 = relay.TupleGetItem(func_1049_call(), 1)
uop_2175 = relay.asinh(call_2171.astype('float64')) # shape=(12, 2, 12)
uop_2177 = relay.asinh(call_2172.astype('float64')) # shape=(12, 2, 12)
output = uop_2175
output2 = uop_2177
func_2179 = relay.Function([], output)
mod['func_2179'] = func_2179
mod = relay.transform.InferType()(mod)
mutated_mod['func_2179'] = func_2179
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2179_call = mutated_mod.get_global_var('func_2179')
call_2180 = func_2179_call()
output = call_2180
func_2181 = relay.Function([], output)
mutated_mod['func_2181'] = func_2181
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1868_call = mod.get_global_var('func_1868')
func_1869_call = mutated_mod.get_global_var('func_1869')
call_2192 = func_1868_call()
call_2193 = func_1868_call()
uop_2202 = relay.sigmoid(call_2192.astype('float32')) # shape=(11, 4, 2)
uop_2204 = relay.sigmoid(call_2193.astype('float32')) # shape=(11, 4, 2)
func_181_call = mod.get_global_var('func_181')
func_183_call = mutated_mod.get_global_var('func_183')
call_2218 = relay.TupleGetItem(func_181_call(), 1)
call_2219 = relay.TupleGetItem(func_183_call(), 1)
func_534_call = mod.get_global_var('func_534')
func_536_call = mutated_mod.get_global_var('func_536')
call_2223 = relay.TupleGetItem(func_534_call(), 1)
call_2224 = relay.TupleGetItem(func_536_call(), 1)
var_2229 = relay.var("var_2229", dtype = "float32", shape = (11, 4, 2))#candidate|2229|(11, 4, 2)|var|float32
bop_2230 = relay.logical_and(uop_2202.astype('bool'), relay.reshape(var_2229.astype('bool'), relay.shape_of(uop_2202))) # shape=(11, 4, 2)
bop_2233 = relay.logical_and(uop_2204.astype('bool'), relay.reshape(var_2229.astype('bool'), relay.shape_of(uop_2204))) # shape=(11, 4, 2)
func_403_call = mod.get_global_var('func_403')
func_405_call = mutated_mod.get_global_var('func_405')
call_2250 = relay.TupleGetItem(func_403_call(), 2)
call_2251 = relay.TupleGetItem(func_405_call(), 2)
bop_2286 = relay.bitwise_xor(bop_2230.astype('int8'), relay.reshape(call_2218.astype('int8'), relay.shape_of(bop_2230))) # shape=(11, 4, 2)
bop_2289 = relay.bitwise_xor(bop_2233.astype('int8'), relay.reshape(call_2219.astype('int8'), relay.shape_of(bop_2233))) # shape=(11, 4, 2)
output = relay.Tuple([call_2223,call_2250,bop_2286,])
output2 = relay.Tuple([call_2224,call_2251,bop_2289,])
func_2291 = relay.Function([var_2229,], output)
mod['func_2291'] = func_2291
mod = relay.transform.InferType()(mod)
mutated_mod['func_2291'] = func_2291
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2292 = relay.var("var_2292", dtype = "float32", shape = (11, 4, 2))#candidate|2292|(11, 4, 2)|var|float32
func_2291_call = mutated_mod.get_global_var('func_2291')
call_2293 = func_2291_call(var_2292)
output = call_2293
func_2294 = relay.Function([var_2292], output)
mutated_mod['func_2294'] = func_2294
mutated_mod = relay.transform.InferType()(mutated_mod)
func_510_call = mod.get_global_var('func_510')
func_512_call = mutated_mod.get_global_var('func_512')
call_2356 = relay.TupleGetItem(func_510_call(), 1)
call_2357 = relay.TupleGetItem(func_512_call(), 1)
func_1235_call = mod.get_global_var('func_1235')
func_1238_call = mutated_mod.get_global_var('func_1238')
call_2370 = relay.TupleGetItem(func_1235_call(relay.reshape(call_2356.astype('bool'), [11, 4, 2]), relay.reshape(call_2356.astype('bool'), [11, 4, 2]), ), 3)
call_2371 = relay.TupleGetItem(func_1238_call(relay.reshape(call_2356.astype('bool'), [11, 4, 2]), relay.reshape(call_2356.astype('bool'), [11, 4, 2]), ), 3)
func_333_call = mod.get_global_var('func_333')
func_335_call = mutated_mod.get_global_var('func_335')
call_2372 = func_333_call()
call_2373 = func_333_call()
func_2179_call = mod.get_global_var('func_2179')
func_2181_call = mutated_mod.get_global_var('func_2181')
call_2375 = func_2179_call()
call_2376 = func_2179_call()
uop_2389 = relay.log2(call_2356.astype('float64')) # shape=(11, 4, 2)
uop_2391 = relay.log2(call_2357.astype('float64')) # shape=(11, 4, 2)
func_686_call = mod.get_global_var('func_686')
func_687_call = mutated_mod.get_global_var('func_687')
call_2405 = func_686_call()
call_2406 = func_686_call()
func_1382_call = mod.get_global_var('func_1382')
func_1383_call = mutated_mod.get_global_var('func_1383')
call_2415 = relay.TupleGetItem(func_1382_call(), 0)
call_2416 = relay.TupleGetItem(func_1383_call(), 0)
func_1401_call = mod.get_global_var('func_1401')
func_1405_call = mutated_mod.get_global_var('func_1405')
var_2425 = relay.var("var_2425", dtype = "uint64", shape = (242,))#candidate|2425|(242,)|var|uint64
call_2424 = func_1401_call(relay.reshape(var_2425.astype('uint64'), [2, 11, 11]), relay.reshape(var_2425.astype('uint64'), [2, 11, 11]), )
call_2426 = func_1401_call(relay.reshape(var_2425.astype('uint64'), [2, 11, 11]), relay.reshape(var_2425.astype('uint64'), [2, 11, 11]), )
bop_2441 = relay.greater(uop_2389.astype('bool'), relay.reshape(call_2415.astype('bool'), relay.shape_of(uop_2389))) # shape=(11, 4, 2)
bop_2444 = relay.greater(uop_2391.astype('bool'), relay.reshape(call_2416.astype('bool'), relay.shape_of(uop_2391))) # shape=(11, 4, 2)
func_1006_call = mod.get_global_var('func_1006')
func_1008_call = mutated_mod.get_global_var('func_1008')
call_2445 = func_1006_call()
call_2446 = func_1006_call()
func_1594_call = mod.get_global_var('func_1594')
func_1595_call = mutated_mod.get_global_var('func_1595')
call_2447 = func_1594_call()
call_2448 = func_1594_call()
func_898_call = mod.get_global_var('func_898')
func_901_call = mutated_mod.get_global_var('func_901')
call_2454 = relay.TupleGetItem(func_898_call(relay.reshape(call_2370.astype('float32'), [22, 4])), 0)
call_2455 = relay.TupleGetItem(func_901_call(relay.reshape(call_2370.astype('float32'), [22, 4])), 0)
output = relay.Tuple([call_2370,call_2372,call_2375,call_2405,call_2424,var_2425,bop_2441,call_2445,call_2447,call_2454,])
output2 = relay.Tuple([call_2371,call_2373,call_2376,call_2406,call_2426,var_2425,bop_2444,call_2446,call_2448,call_2455,])
func_2460 = relay.Function([var_2425,], output)
mod['func_2460'] = func_2460
mod = relay.transform.InferType()(mod)
mutated_mod['func_2460'] = func_2460
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2461 = relay.var("var_2461", dtype = "uint64", shape = (242,))#candidate|2461|(242,)|var|uint64
func_2460_call = mutated_mod.get_global_var('func_2460')
call_2462 = func_2460_call(var_2461)
output = call_2462
func_2463 = relay.Function([var_2461], output)
mutated_mod['func_2463'] = func_2463
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1594_call = mod.get_global_var('func_1594')
func_1595_call = mutated_mod.get_global_var('func_1595')
call_2465 = func_1594_call()
call_2466 = func_1594_call()
func_1382_call = mod.get_global_var('func_1382')
func_1383_call = mutated_mod.get_global_var('func_1383')
call_2517 = relay.TupleGetItem(func_1382_call(), 1)
call_2518 = relay.TupleGetItem(func_1383_call(), 1)
output = relay.Tuple([call_2465,call_2517,])
output2 = relay.Tuple([call_2466,call_2518,])
func_2522 = relay.Function([], output)
mod['func_2522'] = func_2522
mod = relay.transform.InferType()(mod)
mutated_mod['func_2522'] = func_2522
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2522_call = mutated_mod.get_global_var('func_2522')
call_2523 = func_2522_call()
output = call_2523
func_2524 = relay.Function([], output)
mutated_mod['func_2524'] = func_2524
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1929_call = mod.get_global_var('func_1929')
func_1931_call = mutated_mod.get_global_var('func_1931')
call_2608 = relay.TupleGetItem(func_1929_call(), 0)
call_2609 = relay.TupleGetItem(func_1931_call(), 0)
var_2621 = relay.var("var_2621", dtype = "float32", shape = (11, 4, 2))#candidate|2621|(11, 4, 2)|var|float32
bop_2622 = relay.less(call_2608.astype('bool'), relay.reshape(var_2621.astype('bool'), relay.shape_of(call_2608))) # shape=(11, 4, 2)
bop_2625 = relay.less(call_2609.astype('bool'), relay.reshape(var_2621.astype('bool'), relay.shape_of(call_2609))) # shape=(11, 4, 2)
output = bop_2622
output2 = bop_2625
func_2631 = relay.Function([var_2621,], output)
mod['func_2631'] = func_2631
mod = relay.transform.InferType()(mod)
mutated_mod['func_2631'] = func_2631
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2632 = relay.var("var_2632", dtype = "float32", shape = (11, 4, 2))#candidate|2632|(11, 4, 2)|var|float32
func_2631_call = mutated_mod.get_global_var('func_2631')
call_2633 = func_2631_call(var_2632)
output = call_2633
func_2634 = relay.Function([var_2632], output)
mutated_mod['func_2634'] = func_2634
mutated_mod = relay.transform.InferType()(mutated_mod)
func_510_call = mod.get_global_var('func_510')
func_512_call = mutated_mod.get_global_var('func_512')
call_2660 = relay.TupleGetItem(func_510_call(), 0)
call_2661 = relay.TupleGetItem(func_512_call(), 0)
func_2107_call = mod.get_global_var('func_2107')
func_2109_call = mutated_mod.get_global_var('func_2109')
call_2662 = relay.TupleGetItem(func_2107_call(), 0)
call_2663 = relay.TupleGetItem(func_2109_call(), 0)
func_2631_call = mod.get_global_var('func_2631')
func_2634_call = mutated_mod.get_global_var('func_2634')
call_2677 = func_2631_call(relay.reshape(call_2660.astype('float32'), [11, 4, 2]))
call_2678 = func_2631_call(relay.reshape(call_2660.astype('float32'), [11, 4, 2]))
func_1531_call = mod.get_global_var('func_1531')
func_1533_call = mutated_mod.get_global_var('func_1533')
call_2693 = relay.TupleGetItem(func_1531_call(), 0)
call_2694 = relay.TupleGetItem(func_1533_call(), 0)
output = relay.Tuple([call_2660,call_2662,call_2677,call_2693,])
output2 = relay.Tuple([call_2661,call_2663,call_2678,call_2694,])
func_2727 = relay.Function([], output)
mod['func_2727'] = func_2727
mod = relay.transform.InferType()(mod)
mutated_mod['func_2727'] = func_2727
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2727_call = mutated_mod.get_global_var('func_2727')
call_2728 = func_2727_call()
output = call_2728
func_2729 = relay.Function([], output)
mutated_mod['func_2729'] = func_2729
mutated_mod = relay.transform.InferType()(mutated_mod)
func_483_call = mod.get_global_var('func_483')
func_485_call = mutated_mod.get_global_var('func_485')
call_2790 = relay.TupleGetItem(func_483_call(), 0)
call_2791 = relay.TupleGetItem(func_485_call(), 0)
func_1382_call = mod.get_global_var('func_1382')
func_1383_call = mutated_mod.get_global_var('func_1383')
call_2800 = relay.TupleGetItem(func_1382_call(), 1)
call_2801 = relay.TupleGetItem(func_1383_call(), 1)
output = relay.Tuple([call_2790,call_2800,])
output2 = relay.Tuple([call_2791,call_2801,])
func_2824 = relay.Function([], output)
mod['func_2824'] = func_2824
mod = relay.transform.InferType()(mod)
mutated_mod['func_2824'] = func_2824
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2824_call = mutated_mod.get_global_var('func_2824')
call_2825 = func_2824_call()
output = call_2825
func_2826 = relay.Function([], output)
mutated_mod['func_2826'] = func_2826
mutated_mod = relay.transform.InferType()(mutated_mod)
func_686_call = mod.get_global_var('func_686')
func_687_call = mutated_mod.get_global_var('func_687')
call_2830 = func_686_call()
call_2831 = func_686_call()
func_2631_call = mod.get_global_var('func_2631')
func_2634_call = mutated_mod.get_global_var('func_2634')
call_2862 = func_2631_call(relay.reshape(call_2830.astype('float32'), [11, 4, 2]))
call_2863 = func_2631_call(relay.reshape(call_2830.astype('float32'), [11, 4, 2]))
output = relay.Tuple([call_2830,call_2862,])
output2 = relay.Tuple([call_2831,call_2863,])
func_2875 = relay.Function([], output)
mod['func_2875'] = func_2875
mod = relay.transform.InferType()(mod)
output = func_2875()
func_2876 = relay.Function([], output)
mutated_mod['func_2876'] = func_2876
mutated_mod = relay.transform.InferType()(mutated_mod)
func_735_call = mod.get_global_var('func_735')
func_737_call = mutated_mod.get_global_var('func_737')
call_2877 = relay.TupleGetItem(func_735_call(), 0)
call_2878 = relay.TupleGetItem(func_737_call(), 0)
func_1885_call = mod.get_global_var('func_1885')
func_1888_call = mutated_mod.get_global_var('func_1888')
var_2882 = relay.var("var_2882", dtype = "float64", shape = (3, 780))#candidate|2882|(3, 780)|var|float64
call_2881 = relay.TupleGetItem(func_1885_call(relay.reshape(var_2882.astype('float64'), [13, 12, 15])), 0)
call_2883 = relay.TupleGetItem(func_1888_call(relay.reshape(var_2882.astype('float64'), [13, 12, 15])), 0)
output = relay.Tuple([call_2877,call_2881,var_2882,])
output2 = relay.Tuple([call_2878,call_2883,var_2882,])
func_2893 = relay.Function([var_2882,], output)
mod['func_2893'] = func_2893
mod = relay.transform.InferType()(mod)
mutated_mod['func_2893'] = func_2893
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2894 = relay.var("var_2894", dtype = "float64", shape = (3, 780))#candidate|2894|(3, 780)|var|float64
func_2893_call = mutated_mod.get_global_var('func_2893')
call_2895 = func_2893_call(var_2894)
output = call_2895
func_2896 = relay.Function([var_2894], output)
mutated_mod['func_2896'] = func_2896
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1868_call = mod.get_global_var('func_1868')
func_1869_call = mutated_mod.get_global_var('func_1869')
call_2921 = func_1868_call()
call_2922 = func_1868_call()
uop_2961 = relay.atan(call_2921.astype('float32')) # shape=(11, 4, 2)
uop_2963 = relay.atan(call_2922.astype('float32')) # shape=(11, 4, 2)
output = uop_2961
output2 = uop_2963
func_2967 = relay.Function([], output)
mod['func_2967'] = func_2967
mod = relay.transform.InferType()(mod)
output = func_2967()
func_2968 = relay.Function([], output)
mutated_mod['func_2968'] = func_2968
mutated_mod = relay.transform.InferType()(mutated_mod)
func_483_call = mod.get_global_var('func_483')
func_485_call = mutated_mod.get_global_var('func_485')
call_2974 = relay.TupleGetItem(func_483_call(), 1)
call_2975 = relay.TupleGetItem(func_485_call(), 1)
output = relay.Tuple([call_2974,])
output2 = relay.Tuple([call_2975,])
func_2986 = relay.Function([], output)
mod['func_2986'] = func_2986
mod = relay.transform.InferType()(mod)
output = func_2986()
func_2987 = relay.Function([], output)
mutated_mod['func_2987'] = func_2987
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1594_call = mod.get_global_var('func_1594')
func_1595_call = mutated_mod.get_global_var('func_1595')
call_2994 = func_1594_call()
call_2995 = func_1594_call()
output = call_2994
output2 = call_2995
func_3000 = relay.Function([], output)
mod['func_3000'] = func_3000
mod = relay.transform.InferType()(mod)
mutated_mod['func_3000'] = func_3000
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3000_call = mutated_mod.get_global_var('func_3000')
call_3001 = func_3000_call()
output = call_3001
func_3002 = relay.Function([], output)
mutated_mod['func_3002'] = func_3002
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2986_call = mod.get_global_var('func_2986')
func_2987_call = mutated_mod.get_global_var('func_2987')
call_3102 = relay.TupleGetItem(func_2986_call(), 0)
call_3103 = relay.TupleGetItem(func_2987_call(), 0)
output = call_3102
output2 = call_3103
func_3109 = relay.Function([], output)
mod['func_3109'] = func_3109
mod = relay.transform.InferType()(mod)
mutated_mod['func_3109'] = func_3109
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3109_call = mutated_mod.get_global_var('func_3109')
call_3110 = func_3109_call()
output = call_3110
func_3111 = relay.Function([], output)
mutated_mod['func_3111'] = func_3111
mutated_mod = relay.transform.InferType()(mutated_mod)
func_101_call = mod.get_global_var('func_101')
func_102_call = mutated_mod.get_global_var('func_102')
call_3177 = relay.TupleGetItem(func_101_call(), 0)
call_3178 = relay.TupleGetItem(func_102_call(), 0)
output = call_3177
output2 = call_3178
func_3181 = relay.Function([], output)
mod['func_3181'] = func_3181
mod = relay.transform.InferType()(mod)
mutated_mod['func_3181'] = func_3181
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3181_call = mutated_mod.get_global_var('func_3181')
call_3182 = func_3181_call()
output = call_3182
func_3183 = relay.Function([], output)
mutated_mod['func_3183'] = func_3183
mutated_mod = relay.transform.InferType()(mutated_mod)
func_333_call = mod.get_global_var('func_333')
func_335_call = mutated_mod.get_global_var('func_335')
call_3220 = func_333_call()
call_3221 = func_333_call()
func_2824_call = mod.get_global_var('func_2824')
func_2826_call = mutated_mod.get_global_var('func_2826')
call_3230 = relay.TupleGetItem(func_2824_call(), 1)
call_3231 = relay.TupleGetItem(func_2826_call(), 1)
output = relay.Tuple([call_3220,call_3230,])
output2 = relay.Tuple([call_3221,call_3231,])
func_3244 = relay.Function([], output)
mod['func_3244'] = func_3244
mod = relay.transform.InferType()(mod)
output = func_3244()
func_3245 = relay.Function([], output)
mutated_mod['func_3245'] = func_3245
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1868_call = mod.get_global_var('func_1868')
func_1869_call = mutated_mod.get_global_var('func_1869')
call_3265 = func_1868_call()
call_3266 = func_1868_call()
func_824_call = mod.get_global_var('func_824')
func_826_call = mutated_mod.get_global_var('func_826')
const_3270 = relay.const([[-7.802634],[4.045396],[-8.938093],[-7.457571],[6.770841],[9.462337],[-1.128105],[-7.871871],[-9.590265],[-0.290254],[4.484324],[9.208190],[7.886618],[4.798886],[8.335813],[5.983222],[8.906146],[8.249893],[4.293116],[-6.936615],[-8.760128],[4.644380],[-3.936828],[5.444688],[-4.565361],[3.332097],[4.927804],[-0.221526],[5.128390],[0.095490],[9.432746],[-0.778295],[8.631894],[3.793239],[4.702997],[1.034456],[8.101856],[-2.517600],[-5.895463],[-5.075857],[-7.921554],[-6.610264],[9.121606],[-0.976379],[7.700280],[2.628923],[-3.792516],[8.429242],[3.071551],[9.422420],[-6.397786],[4.171342],[1.858629],[-3.346374],[0.404754],[-0.970464],[-6.372533],[4.940964],[-3.221628],[8.278967],[5.074916],[-0.730875],[-9.926555],[-2.565613],[-2.174225],[5.793018],[-4.570953],[-3.519358],[-6.318048],[-9.089577],[-1.543976],[3.508529],[6.680844],[-2.683961],[8.153501],[7.543732],[-2.399061],[-3.887244],[8.203581],[8.060895],[-8.962283],[5.650888],[9.632664],[3.240564],[-4.922361],[6.203628],[-9.590476],[2.006947],[5.181132],[4.247067],[4.241192],[-7.693221],[3.927419],[8.828000],[7.073440],[-5.584449],[0.672402],[-6.855215],[-5.267396],[-4.143512],[9.942287],[6.281613],[5.190129],[-3.109659],[-4.437700],[8.376743],[-6.762421],[9.727509],[-5.474153],[7.917454],[8.161671],[-2.237748],[5.106638],[7.584461],[-5.665243],[-3.554018],[9.529084],[9.109973],[-0.010039],[-9.617822],[-1.600479],[5.753250],[5.147832],[-5.015828],[3.688560],[2.782615],[8.441235],[9.744893],[-3.925602],[-4.627029],[-9.689255],[7.032336],[-3.543791],[-1.042123],[-6.384795],[2.659596],[-5.336556],[8.728026],[-8.614099],[-7.024614],[3.664743],[-6.310285],[9.897869],[6.016487],[0.086409],[-2.289652],[-0.145719],[9.953479],[-4.956411],[-4.302488],[-2.203574],[7.660882],[-8.743516],[-8.459064],[-2.991705],[-4.449073],[-8.115071],[1.122442],[-4.789033],[-7.065986],[-2.661800],[0.876112],[-9.288212],[-1.567530],[8.475252],[3.901996],[-9.406994],[-1.940604],[8.453475],[0.932440],[2.879388],[-5.374188],[9.847443],[0.736206],[-2.375165],[7.699584],[-9.835812],[-3.572190],[1.897835],[-5.883781],[9.598331],[0.498555],[-9.740913],[-2.304357],[-4.721051],[-9.891453],[2.876649],[-0.244284],[-5.241052],[-8.583324],[8.128601],[9.754840],[-9.210041],[-0.138880],[-0.207416],[-2.414274],[-9.186964],[-4.202459],[-0.160543],[-9.276300],[-8.829944],[-0.222734],[0.297263],[-0.513374],[2.011374],[4.312579],[-0.433336],[-5.813802],[-7.579785],[7.096420],[5.197379],[-4.072821],[3.012153],[3.513155],[8.558470],[-1.502884],[-8.941803],[6.589148],[2.525476],[2.765540],[-6.592539],[9.534095],[5.900768],[5.241899],[-5.949591],[6.607701],[2.764950],[4.914639],[-4.044984],[-3.043438],[6.787546],[3.647661],[7.361341],[6.135308],[1.964474],[7.636497],[5.329387],[-5.831956],[6.550533],[-1.129639],[-2.821437],[1.145639],[7.316965],[-9.828923],[1.217338],[3.340204],[-5.256646],[-8.146772],[8.007846],[-8.464419],[-9.623649],[-8.338214],[1.827125],[4.239282],[6.439837],[-3.380321],[5.928722],[1.406659],[2.130151],[-8.757534],[-2.605777],[9.914543],[-9.711126],[-5.791883],[5.260534],[-1.084078],[1.643357],[-3.424129],[-0.548778],[3.427934],[5.797927],[1.889793],[4.417755],[-0.843149],[4.929509],[-0.811008],[-8.626787],[-2.060392],[6.391385],[5.373311],[4.918579],[5.160322],[-0.890370],[4.676582],[0.034901],[-4.543152],[6.864677],[6.667735],[-2.430713],[4.599486],[-8.408441],[5.888486],[4.255603],[6.053066],[2.548054],[9.284830],[7.882745],[9.111050],[-3.166390],[-2.779876],[5.095653],[2.636974],[-0.213745],[6.179620],[-5.913451],[-3.035345],[-2.690669],[1.120495],[1.758433],[7.073821],[5.421250],[-4.843253],[0.824809],[5.440144],[-7.484449],[0.735560],[-9.258094],[-5.481357],[7.208954],[-1.634132],[-1.843586],[-5.925889],[-7.231627],[-9.059450],[-4.127281],[-4.350210],[0.902498],[-3.706714],[-3.784896],[-5.058636],[6.750170],[-6.282955],[-4.290036],[2.671022],[9.529809],[3.450139],[-5.182184],[-8.053682],[-2.310324],[0.051628],[-7.224163],[-3.984632],[-6.009161],[-5.403617],[-1.736346],[0.541154],[-5.512857],[-6.082298],[9.001520],[-4.399487],[2.769135],[-8.243928],[9.544870],[-6.774480],[-6.460959],[2.744809],[-2.557676],[-1.961766],[-7.040297],[7.694704],[8.471789],[8.837202],[5.820832],[9.769246],[7.382498],[1.930267],[2.526771],[-8.682193],[-7.829774],[-1.748624],[-7.532094],[-4.125147],[-1.439873],[8.285765],[5.412650],[3.199301],[-4.973048],[8.723690],[-0.501195],[-6.265876],[-0.109679],[-1.418834],[6.985851],[2.735552],[-2.324716],[-5.701210],[4.641292],[1.835405],[0.791842],[-5.709179],[7.305908],[-2.672335],[-6.679349],[1.161524],[-9.145015],[-3.046001],[7.525069],[-8.515708],[-2.075866],[3.040294],[-9.646964],[0.240323],[-0.621584],[7.141207],[-3.544786],[-0.997277],[8.220421],[4.130205],[-2.851176],[7.897493],[-7.044000],[-8.150382],[-9.210644],[-5.727466],[-2.196062],[1.735562],[-1.500081],[-4.536613],[8.888843],[-4.670144],[9.572005],[-5.186109],[8.780144],[1.343386],[-2.748772],[-6.669085],[-1.905758],[4.841450],[-3.619890],[7.679970],[7.755060],[4.836121],[-0.439049],[-9.813926],[8.448107],[9.369267],[3.075009],[9.927000],[1.852160],[3.883425],[7.081551],[-2.458991],[-2.573516],[1.708573],[4.403220],[7.485009],[8.837311],[-7.145767],[-1.218947],[-2.968141],[-2.812080],[-4.878663],[2.533815],[-9.820749],[-5.263933],[-3.377586],[-5.369420],[-1.230175],[-7.928179],[8.495230],[-6.476605],[-2.817177],[1.570602],[6.298176],[9.560775],[8.385932],[4.301560],[-1.823985],[7.459358],[0.747530],[-8.376910],[-0.036324],[-2.263402],[9.207593],[-2.186754],[3.309037],[8.609283],[-4.000745],[-5.047911],[-2.210119],[4.236052],[1.536898],[3.935257],[4.544896],[3.091149],[8.900010],[8.739209],[-4.489744],[-4.460665],[-1.747708],[-9.017404],[7.173724],[-5.924273],[-6.200072],[-9.481215],[-3.682203],[-0.661848],[-5.543963],[8.594210],[-2.256823],[6.368695],[-7.526266],[3.817152],[-8.981675],[-0.609025],[-6.109000],[-3.620908],[-5.251018],[-6.907043],[-8.227663],[9.986288],[-3.893078],[-6.246794],[-0.933171],[9.364602],[-4.931613],[-7.299166],[4.445436],[6.991239],[6.640145],[-5.600738],[-3.442601],[7.191240],[1.420339],[6.814095],[-7.193573],[0.587713],[-7.772102],[-2.437937],[1.765175],[-2.879201],[-1.770057],[8.825614],[-3.395820],[4.172360],[-8.596597],[-9.575272],[8.172767],[-6.396447],[4.205795],[-6.044725],[-4.212000],[-5.617376],[3.712909],[6.219002],[-4.828954],[6.419092],[-8.380452],[-0.580082],[9.493787],[-8.714504],[-7.211177],[0.100167],[6.468476],[-4.845592],[4.950285],[-7.873783],[-8.678098],[5.990446],[3.006815],[8.346109],[-4.035463],[-0.963560],[5.271229],[1.362340],[4.218893],[-4.121748],[-6.793379],[4.855711],[3.753184],[-8.264569],[-1.053877],[5.301834],[-8.001115],[-9.410444],[6.047919],[3.128994],[-0.774214],[1.429149],[5.433826],[7.765625],[-9.313481],[-0.857730],[3.841476],[-7.872242],[1.074868],[6.681185],[-0.522781],[3.173095],[8.250934],[-3.533724],[5.721104],[-5.007862],[-7.083734],[2.424524],[7.266699],[-1.038467],[-2.687032],[-1.234232],[-8.146785],[4.090978],[-5.208003],[7.117330],[5.372328],[5.656069],[-0.294176],[2.724447],[7.066899],[-0.724636],[7.376052],[3.602399],[-8.189006],[3.766988],[-5.290524],[-8.071573],[-1.439616],[5.109780],[-8.709394],[3.849181],[4.935420],[4.199851],[8.945197],[2.598629],[-1.596029],[-1.927761],[8.097059],[-1.886879],[9.822693],[-0.218787],[-8.899675],[-5.773453],[-6.745765],[0.006334],[-4.595999],[-9.445261],[0.850904],[2.100010],[1.414144],[3.488669],[-6.116483],[9.141413],[-4.247837],[9.180409],[6.836331],[8.128847],[-6.543956],[9.520745],[1.866619],[-7.921090],[6.193682],[6.070173],[-0.688915],[7.243197],[2.369590],[4.353576],[-1.781023],[7.255200],[6.534789],[-6.975421],[9.383075],[-1.933063],[0.353367],[-4.795251],[-5.680908],[-5.490718],[-6.232637],[-5.528418],[7.970159],[-8.249985],[-5.894753],[-4.455869],[-4.851272],[4.203614],[3.257658],[9.078107],[-1.181528],[-6.356150],[4.999296],[-4.491084],[2.596056],[0.050664],[7.416974],[-3.944093],[-9.207526],[6.309923],[8.496988],[1.272819],[-6.093418],[7.759039],[9.867935],[-3.139634],[-9.066761],[2.412171],[6.680381],[2.968329],[8.407347],[-5.717063],[-7.655638],[9.979916],[7.129692],[6.276694],[-5.614816],[8.749875],[-3.967460],[-3.634998],[8.758014],[5.544563],[-6.506013],[4.435412],[-0.859909],[-8.123576],[8.199684],[-7.149440],[-1.197044],[-0.888163],[5.006254],[-5.218549],[3.350679],[-4.221509],[-6.004879],[0.224826],[5.221578],[6.187271],[0.772096],[6.174695],[9.711594],[5.227603],[0.781567],[-1.919598],[7.776547],[7.254479],[-3.784665],[4.937014],[5.866604],[5.675319],[-0.033872],[8.429093],[0.130369],[0.186523],[5.376833],[8.316797],[0.159381],[-9.283906],[-3.693712],[-6.246424],[5.215715],[-6.601922],[5.363035],[8.894282],[4.843755],[-2.310313],[3.019554],[6.133244],[-8.887614],[-9.636169],[-9.468502],[-0.037942],[-0.672494],[-2.173939],[5.057241],[2.548954],[-3.634673],[-6.671497],[7.325785],[9.164251],[9.966581],[-0.477932],[0.652566],[9.352523],[3.051938],[-2.486728],[3.263969],[6.932428],[1.705421],[4.822235],[-5.929676],[1.046522],[-5.834583],[-0.234657],[-5.850751],[7.281965],[1.051637],[-9.410567],[2.377837],[-8.163931],[0.036952],[-4.368805],[1.215422],[5.640504],[9.799142],[5.390603],[2.470603],[0.465615],[-5.700819],[4.839785],[7.666907],[-0.138768],[-9.537513],[2.117240],[1.410738],[-2.082109],[-8.182244],[0.531753],[-0.691230],[-0.975559],[1.715812],[5.176024],[0.603654],[4.634926],[-3.191999],[-2.639802],[6.486994],[-9.486856],[9.531345],[2.304994],[0.024976],[-8.921180],[8.361630],[5.013197],[-7.115044],[0.562078],[0.432167],[-4.112349],[8.882737],[7.621818],[-6.036317],[4.898384],[-2.494618],[5.021000],[-7.932634],[-3.662313],[7.719108],[8.896149],[7.887965],[-4.236969],[1.468970],[5.018582],[3.259397],[7.567236],[5.282605],[-9.008170],[-0.596636],[0.683365],[-0.790042],[-5.070315],[-8.403256],[-7.970190],[6.156327],[-6.397498],[6.400538],[-7.980113],[-9.814412],[9.182537],[4.557667],[9.790145],[0.776998],[-1.650066],[4.018124],[3.393555],[2.852227],[-4.873693],[-7.159295],[1.795049],[1.550491],[-8.207540],[-4.244405],[9.174122],[5.494179],[-0.087937],[0.190984],[5.380238],[-4.890278],[-7.031403],[-9.716859],[8.284262],[2.012266],[7.159888],[-2.641574],[-8.271542],[-0.032862],[-1.810718],[0.448301],[3.580629],[2.536041],[-8.383660],[9.963517],[8.218512],[1.287213],[-1.472245],[8.440749],[8.085626],[7.700367],[7.259083],[0.973244],[8.808969],[-2.952063],[8.412516],[7.898915],[-9.085167],[-4.634156],[2.172131],[9.582277],[8.727079],[-4.707040],[-2.878877],[8.798868],[3.608343],[-2.762951],[5.149730],[-2.540755],[4.400387],[-7.021206],[-1.535314],[9.844876],[-0.867904],[4.854977],[-3.585257],[2.133548],[-1.423104],[8.746026],[8.537665],[-6.091097],[7.050813],[2.754454],[0.526166],[-2.931321],[7.134293],[9.299222],[-6.109648],[-9.122167],[-1.600813],[4.419031],[-0.617062],[8.778728],[-2.652904],[1.160932],[8.874867],[-0.387073],[-4.572006],[7.192563],[1.719857],[-5.567855],[0.484889],[6.772675],[1.576245],[-6.128117],[1.757676],[-0.324093],[-7.023438],[-8.569351],[-3.421918],[6.595903],[-9.819153],[-1.610286],[7.705149],[-3.413947],[1.727622],[0.815796],[-4.197050],[0.969903],[2.333838],[1.433929],[3.495859],[-5.666532],[8.976988],[-2.499358],[9.255690],[-9.008684],[-7.519710],[-7.763018],[-5.317731],[-1.362516],[-6.463314],[-3.753285],[-8.794402],[-7.139240],[-6.430038],[2.167588],[0.472207],[4.156964],[-8.980741],[-9.884230],[0.322581],[8.744690],[8.376795],[-1.973669],[-4.321240],[-7.709596],[-8.635222],[7.740386],[-0.432649],[-4.689416],[-7.730312],[-1.713504],[-1.386389],[-7.646554],[6.865737],[-4.632985],[5.330671],[-1.807726],[2.045873],[0.848275],[-3.894304],[-1.292565],[-5.249267],[4.860865],[2.040438],[9.730385],[9.046988],[9.534441],[-8.296033],[4.610213],[-3.709759],[-9.059078],[4.280295],[8.630999],[8.355694],[1.134445],[-4.059153],[7.373912],[5.932390],[3.225894],[-1.492690],[-6.464059],[-0.788357],[9.232812],[-1.561283],[-9.661203],[-1.018446],[-5.366527],[-2.851405],[4.204184],[-3.724582],[2.423146],[-9.224335],[-3.019285],[2.014233],[0.944001],[-2.821426],[-8.608094],[8.895017],[6.636426],[-4.005666],[4.475167],[1.750346],[-2.604049],[8.851211],[3.442695],[-6.321585],[-2.342763],[4.517217],[9.918133],[-9.556392],[3.242486],[-8.350911],[7.980384],[1.047358],[3.279744],[-0.461232],[5.187542],[6.741729],[6.683131],[9.072542],[-8.942946],[7.812100],[-1.091429],[3.495129],[-6.033668],[-1.670266],[1.621836],[8.397669],[8.535173],[3.158713],[-2.211761],[1.973353],[2.732868],[8.091337],[1.425657],[-5.309082],[9.987359],[-8.143332],[-5.813721],[2.043037],[3.735147],[-8.427968],[-5.569676],[5.394543],[8.724362],[4.685606],[-3.174491],[8.329634],[6.769535],[2.147543],[0.612616],[-0.758146],[1.692199],[-2.169236],[4.799788],[-1.866384],[-2.739072],[0.115463],[-3.155956],[-7.134704],[1.717284],[6.084401],[-6.283836],[-1.858816],[-1.444112],[-3.897909],[2.727182],[-0.137302],[8.303493],[-7.881909],[-2.811992],[6.340172],[-5.836269],[1.621466],[2.706068],[-9.581967],[4.789420],[-1.690742],[-3.192653],[9.678335],[-1.962218],[-8.055227],[4.521240],[9.810351],[0.435715],[5.934196],[-7.561372],[-9.714351],[2.658351],[-8.922019],[2.303665],[4.466073],[-9.067953],[-4.059768],[-5.823032],[6.186488],[8.247273],[-8.607881],[-1.455646],[4.279878],[-3.037706],[4.610913],[3.402033],[6.791282],[-0.747167],[6.795514],[-5.957760],[-7.549423],[2.812324],[2.398328],[0.504177],[-9.041265],[-4.135443],[7.354867],[-1.598823],[-8.639552],[5.107385],[-3.095940],[-9.905571],[3.601034],[6.464391],[-4.454971],[2.270266],[-5.215878],[-5.656799],[1.657187],[9.320226],[-3.618826],[-1.537095],[-3.140839],[1.459169],[2.169575],[3.690496],[9.950314],[4.884040],[-1.541003],[-0.971825],[-2.829287],[1.902872],[-7.754600],[-8.186150],[3.212486],[7.269606],[6.026264],[3.577849],[5.830400],[2.644409],[3.442395],[-2.433702],[-9.840406],[3.957067],[-5.017560],[2.898704],[-5.952650],[3.125733],[-1.346681],[-9.347254],[3.655013],[-3.032407],[2.889373],[6.566186],[-5.226810],[-9.434876],[7.537587],[-6.081733],[-0.769173],[-1.783310],[3.155481],[-6.729336],[-6.789844],[-1.425538],[0.192944],[5.029048],[8.170704],[-0.563134],[6.671442],[0.160238],[-9.006396],[-2.306554],[-2.550059],[9.531113],[-0.283283],[1.998578],[0.777605],[3.793484],[9.101290],[8.110405],[-9.720324],[-7.650194],[-6.039187],[0.814659],[-3.807833],[0.468607],[-5.153799],[-7.053835],[-0.770701],[2.681861],[7.160896],[9.687669],[-5.115239],[-3.518113],[-2.249246],[4.842699],[-5.419677],[-4.648788],[-3.004180],[6.903875],[-0.297978],[3.114401],[-6.576991],[9.424944],[9.257947],[1.650552],[7.955991],[5.546968],[-2.283546],[-2.895854],[1.007978],[4.247561],[7.025340],[-8.912910],[3.667851],[-4.234290],[-7.340757],[-5.308519],[4.607892],[-2.358821],[7.963968],[8.362416],[-7.479988],[-5.521387],[-5.585545],[4.945440],[-2.057924],[-5.957337],[5.208091],[5.230499],[-3.900506],[-2.533499],[6.524503],[9.259680],[0.341754],[9.414348],[0.915391],[2.500846],[-5.860388],[-1.873932],[-8.693230],[-7.160369],[0.942614],[-0.080993],[-2.613725],[6.754110],[3.183848],[6.246597],[8.074631],[5.870721],[-1.975097],[2.208637],[6.882393],[5.366177],[-3.315936],[1.448494],[-4.850659],[-6.354578],[-2.851055],[-3.108511],[-6.599149],[6.658827],[3.576736],[4.663503],[4.580641],[1.722886],[9.149017],[1.663446],[-5.972067],[-3.410833],[4.419810],[2.137482],[-1.654066],[2.260615],[0.310566],[8.254026],[8.463655],[1.905022],[6.935974],[8.328599],[-2.765142],[1.401188],[1.025896],[-8.312496],[3.032215],[3.202661],[-1.492886],[-3.976394],[-8.622309],[6.358725],[6.601723],[2.353418],[2.365516],[-5.460064],[9.986698],[5.656670],[-6.330726],[-8.281943],[-7.873119],[0.879213],[8.911183],[-7.098198],[-8.765514],[-5.882535],[-8.098108],[-6.264427],[-3.653500],[-2.313108],[-5.427775],[6.229306],[2.795887],[8.318654],[8.088960],[8.409647],[9.192419],[0.747170],[6.009779],[-1.193072],[4.173653],[-3.642406],[4.920606],[9.591910],[9.670061],[2.700137],[-0.491667],[6.884904],[-3.911193],[-8.408593],[-0.008561],[6.693389],[-8.640350],[8.489380],[-2.099106],[5.620802],[-1.652415],[7.546568],[-2.564822],[-9.611159],[-5.587492],[-5.670504],[-8.865656],[-3.375388],[-8.475053],[-9.699452],[6.072294],[-0.682885],[-8.242879],[6.104687],[-9.879745],[-3.108622],[9.771080],[-1.032866],[0.939168],[2.791074],[-4.059848],[-9.992573],[7.599427],[7.394148],[3.246414],[1.279447],[1.939000],[6.274036],[4.993732],[-0.250383],[7.907092],[-9.745422],[-8.392302],[1.125307],[6.665665],[-2.021872],[-7.355775],[-9.356513],[6.547726],[7.939653],[8.410913],[6.271708],[2.963670],[5.953893],[-2.458893],[-9.027332],[-6.530595],[-2.496423],[5.154156],[-2.955822],[-4.649309],[-5.050071],[-6.299861],[-4.440014],[7.633269],[-6.577176],[-6.302292],[3.432300],[-8.758769],[-6.971256],[8.460557],[0.967506],[-4.401783],[-8.924034],[3.988292],[-7.504287],[4.392437],[-2.099812],[-3.532086],[-3.207917],[-1.609201],[-9.613149],[-3.689963],[-4.168145],[-5.784672],[3.102465],[9.610221],[-1.532149],[-1.426516],[7.469274],[0.413968],[2.498421],[6.529748],[-6.488595],[1.419417],[2.659413],[-1.327734],[-0.814479],[3.391646],[4.621182],[-7.341295],[1.274915],[9.473841],[6.621335],[9.215355],[5.949913],[-8.500184],[7.194040],[-6.256983],[9.980208],[-2.663110],[-5.354525],[2.999056],[-3.833011],[9.913765],[-1.231180],[-8.418604],[-5.135886],[0.683542],[-5.742271],[-1.496226],[-4.572688],[-8.271860],[-9.656680],[0.491468],[-7.835089],[-2.091546],[-9.612213],[-3.246072],[3.812101],[4.965334],[6.646702],[4.775251],[4.791359],[6.523134],[5.550024],[-4.838949],[-9.080601],[-4.228505],[8.232417],[1.921722],[8.044522],[-5.975222],[5.189449],[-3.641376],[3.718098],[-6.263087],[-6.049257],[-9.213437],[0.806420],[7.024426],[3.950087],[-5.125556],[-7.038962],[5.487629],[-0.209095],[-5.302323],[-7.586127],[-5.347040],[3.292499],[-7.172868],[-8.261709],[4.779721],[2.115471],[-2.047016],[3.823642],[2.411429],[0.686845],[-2.041751],[-9.943472],[-3.338229],[-5.291855],[1.453411],[8.159600],[-4.930552],[-3.964344],[6.487215],[-0.293131],[5.972481],[-4.610343],[-0.005460],[5.192088],[9.361630],[4.281107],[0.580251],[5.702266],[-2.325405],[-2.886077],[-7.715865],[5.764965],[-9.300374],[-1.752065],[-9.998741],[-2.187476],[-6.216105],[-1.132800],[-7.194093],[-7.205584],[-6.252443],[7.382840],[-9.139017],[7.182408],[4.040244],[-1.790973],[-6.650406],[-5.642515],[2.641216],[-3.398352],[3.366569],[-6.383931],[-7.991921],[-2.131693],[-7.147565],[-1.108592],[-1.851131],[-8.315527],[-4.622382],[-6.134792],[5.685770],[3.984363],[-8.939208],[-2.875730],[-9.487752],[-0.210624],[8.342446],[3.395429],[9.007459],[-6.850358],[2.455928],[-8.746852],[1.024944],[-2.295743],[9.489414],[6.909840],[0.829410],[-5.992804],[-8.092176],[4.864070],[1.205120],[8.608583],[-2.462302],[-0.171838],[-7.138040],[-4.713221],[0.367740],[-0.194152],[8.653984],[-9.131814],[9.730434],[-1.454907],[9.144942],[-5.005981],[7.648084],[-0.330296],[9.769962],[-1.399640],[2.498422],[0.470764],[0.059190],[2.504342],[4.742551],[4.370165],[-2.237008],[0.838970],[1.010257],[-2.804207],[-0.662978],[8.479403],[-3.764897],[-7.207382],[7.335964],[-0.862913],[-9.261085],[-3.745423],[1.922701],[-2.366921],[9.410346],[1.370407],[-8.647505],[4.543915],[-3.937808],[-6.692430],[0.094659],[4.056392],[4.457571],[3.092394],[-4.133454],[5.358237],[-0.428175],[-0.194767],[5.908702],[-9.395508],[1.323628],[-9.248297],[-5.565118],[8.842683],[9.268450],[3.946728],[7.431971],[8.919907],[-3.683487],[3.834498],[-7.340672],[6.987572],[3.619960],[-4.910067],[4.983659],[7.020470],[-3.461007],[-6.652605],[-6.945447],[-4.697856],[9.353550],[-8.952265],[-4.492967],[2.670675],[-2.842747],[5.782297],[-3.575785],[9.779654],[-0.734588],[-0.934963],[-2.568004],[-8.654465],[-0.682870],[5.971974],[6.458726],[-9.961819],[7.073934],[6.267426],[-4.875463],[7.493730],[-9.113460],[9.388865],[4.402721],[-3.801727],[-5.661760],[0.729862],[-5.488113],[-1.340836],[-3.436736],[3.876568],[4.356854],[-1.447725],[-9.499852],[-4.433705],[6.896677],[-3.328198],[-1.289830],[-6.283792],[-4.209005],[2.582331],[9.845412],[-9.507647],[8.532970],[-7.144270],[-2.090793],[5.583413],[-1.756483],[7.298027],[0.360370],[5.924645],[7.359433],[-5.508687],[-5.698573],[8.164267],[7.013147],[9.108077],[-1.999332],[1.813065],[-4.998712],[6.815448],[5.786863],[-5.590821],[9.425363],[2.436408],[1.756432],[3.286579],[-8.830762],[-4.226673],[-2.994790],[2.140544],[5.021471],[-0.218288],[-4.280758],[2.681025],[-9.569018],[-1.150127],[6.098611],[2.988678],[-5.760189],[4.069070],[1.741428],[-3.158414],[0.941373],[-2.178081],[-7.033516],[7.258745],[2.920248],[1.929411],[3.858174],[-0.465860],[-9.344678],[-0.780016],[-8.673295],[-9.540290],[-2.951095],[-9.174916],[-3.387813],[5.946514],[-6.875081],[2.380041],[4.984602],[-9.013088],[-7.250114],[9.386100],[-0.252638],[9.667786],[-1.150779],[-4.488987],[2.469440],[1.179870],[-9.472130],[-4.069180],[-1.413391],[-4.844780],[3.994838],[0.967928],[8.233515],[3.427824],[-3.860073],[5.495980],[1.739556],[8.441473],[-7.307786],[-5.855029],[-7.857074],[8.400009],[3.103460],[9.264151],[7.267128],[-9.820340],[4.177699],[-8.749674],[5.690724],[-6.612304],[-1.795806],[-6.014429],[4.654536],[8.218530],[5.290471],[0.599019],[3.804381],[4.685588],[-4.886959],[-0.699433],[-7.262178],[0.317351],[-6.519689],[-6.750027],[9.656348],[4.674890],[9.941427],[8.790520],[9.143950],[-0.214956],[-4.196381],[-7.956164],[6.028746],[4.600294],[-6.845724],[1.267399],[-6.812644],[-6.028965],[-9.517799],[1.778581],[-6.975714],[8.505001],[-6.035627],[-2.836686],[3.415683],[9.048986],[-9.822718],[7.330986],[2.527346],[-2.020223],[-0.237734],[-3.801078],[-7.494503],[-0.190352],[-5.120767],[-4.889344],[-7.592603],[-9.888767],[7.197659],[9.928525],[7.908146],[-9.130209],[-5.395180],[4.473202],[-8.931794],[-1.122138],[-2.060219],[-2.885897],[5.977505],[5.795145],[-3.027871],[-5.647096],[-9.855788],[8.035969],[2.912150],[-5.707094],[2.364392],[1.632754],[4.691912],[1.022076],[-3.249848],[-3.095967],[2.317023],[9.871158],[1.367027],[-4.255675],[-3.353741],[8.324246],[2.654202],[-7.662179],[1.046502],[6.498914],[-8.005377],[-2.346034],[-4.058280],[1.624856],[4.839326],[3.509313],[-5.191054],[-1.891679],[0.152311],[1.460364],[4.306594],[-2.536889],[-7.149920],[-0.037516],[-6.813346],[-1.234908],[-1.024469],[-7.396496],[5.822224],[8.112162],[4.262504],[5.337168],[7.750439],[-1.041933],[-9.896052],[-9.613934],[-5.418348],[-5.093075],[-7.408700],[-0.084625],[-1.547957],[9.848614],[8.415849],[1.845724],[3.235650],[-5.618378],[4.350296],[6.378731],[3.307707],[-4.462525],[6.203205],[0.835606],[7.662691],[-0.519449],[-4.779558],[-1.422115],[-1.049402],[3.781544],[0.845837],[-6.046659],[4.308968],[-8.328213],[-3.515783],[4.884062],[8.828152],[0.086410],[9.522902],[-8.321325],[-7.352520],[-9.668503],[8.247334],[7.424615],[-9.343824],[4.475186],[-3.169684],[-8.424187],[-6.024751],[-1.730695],[-3.459769],[-7.223168],[3.282009],[5.301803],[5.715912],[-6.614515],[-7.453246],[-4.049688],[9.409953],[2.015494],[1.285945],[-8.073628],[-1.848375],[9.029366],[9.896279],[3.882328],[-2.682503],[5.412529],[2.916196],[-1.896040],[-5.440296],[-3.315941],[0.096793],[-8.725674],[5.246581],[-4.255799],[-2.272429],[-5.409861],[5.055689],[-7.956072],[2.459111],[1.299517],[2.482285],[-3.709052],[6.270827],[2.090934],[6.922310],[-9.505629],[1.882257],[1.520497],[6.057712],[4.274508],[-0.380511],[-9.845408],[5.380195],[-1.247230],[7.013297],[-3.784971],[-7.936040],[2.575235],[9.268623],[2.767070],[7.767245],[7.431093],[-3.850839],[4.092181],[-4.650727],[-8.352775],[-9.406325],[7.836634],[0.375753],[-4.600695],[6.001062],[9.318180],[1.446212],[5.295773],[-1.415035],[2.741411],[-2.909024],[-6.236609],[-6.254143],[-5.977157],[-4.681739],[5.807630],[-9.260743],[-6.495265],[1.062354],[-3.355847],[-9.649363],[-4.082386],[-2.441802],[-5.898799],[0.510316],[-0.230090],[7.174535],[-8.816950],[-6.463894],[-0.883632],[2.316524],[4.396593],[-9.162686],[8.562677],[1.663904],[-5.299313],[-9.284073],[0.153301],[-1.451721],[3.170977],[-4.700644],[-5.473469],[-6.761588],[5.973524],[6.089638],[2.840671],[6.448267],[-3.964481],[-0.253637],[3.133202],[6.330176],[3.928947],[7.049518],[7.707770],[4.382063],[7.335590],[-8.724001],[1.762332],[-8.420759],[-1.595056],[-3.934210],[2.778315],[-8.730755],[-4.784343],[7.594040],[-4.554961],[8.304168],[-8.433420],[1.305231],[3.743936],[-6.762305],[-8.462876],[-9.986440],[7.495192],[-6.699089],[-6.233089],[5.645788],[-0.260131],[-2.442397],[7.192662],[0.453554],[-8.812435],[1.535110],[2.474967],[-3.321968],[9.716430],[5.215821],[-3.913872],[2.737799],[-3.919470],[0.541246],[1.924926],[-5.739539],[-5.788365],[-0.687591],[8.969702],[-9.886713],[-3.370008],[-6.638289],[-8.377680],[-0.390303],[-7.339562],[8.127281],[8.283723],[-1.553237],[-1.659962],[9.804304],[1.991636],[0.324442],[-1.481108],[8.094773],[3.614133],[0.634565],[4.211764],[7.864373],[3.973149],[-7.206544],[6.963158],[-5.430114],[-7.628757],[2.665622],[-2.532329],[-6.148426],[-3.107741],[3.806756],[4.327929],[-0.397953],[-8.391458],[1.918759],[-5.805462],[4.690100],[-8.298807],[4.405120],[6.701890],[5.521000],[-1.337448],[-4.681364],[9.912065],[-2.381816],[4.294123],[-0.587714],[-0.693174],[2.099679],[-4.361673],[6.697402],[-9.072957],[-4.060568],[-4.141658],[-1.200504],[7.329872],[4.561139],[-9.322896],[-0.431920],[4.220265],[-6.246365],[6.960118],[7.152891],[1.257624],[-9.758449],[0.779905],[-8.822183],[6.733842],[1.374022],[-9.124020],[9.184500],[6.452945],[-9.979440],[8.875471],[3.465737],[9.403903],[8.322263],[-3.552622],[0.845864],[5.185699],[7.928325],[1.788180],[-1.614673],[6.348076],[-6.818780],[-1.336714],[2.164797],[-6.889424],[7.738588],[4.516108],[-2.597893],[-3.736960],[5.573169],[4.826862],[3.120644],[-9.582711],[6.537392],[-8.234406],[-0.351882],[6.693734],[-7.492731],[5.870071],[0.533864],[3.544895],[0.319853],[4.535680],[0.563595],[3.720736],[-2.842111],[7.517958],[5.866835],[3.355618],[6.725480],[6.931238],[5.608251],[-1.426470],[-9.955592],[9.081720],[-1.000692],[-7.315555],[0.185803],[0.470649],[-6.384047],[7.239026],[1.625709],[-8.637889],[7.222273],[-1.388679],[2.040442],[-4.616621],[-4.288106],[-4.169055],[-2.519307],[1.708491],[-0.059958],[-0.826994],[3.196891],[2.145097],[-1.708041],[0.634333],[9.793841],[6.859887],[8.060190],[-4.632206],[1.178122],[9.334452],[3.988944],[-6.451713],[8.970429],[-9.697018],[8.075518],[-5.676829],[6.095706],[-9.902152],[-2.062116],[5.320934],[3.690079],[-1.577794],[-2.538351],[-8.586131],[-7.480830],[-0.846010],[0.191356],[8.161435],[-7.762468],[1.184275],[5.454695],[-7.978937],[2.205832],[-2.152430],[-2.128969],[2.447728],[-4.669277],[-7.949734],[-0.682346],[-3.251777],[-2.643086],[3.857009],[4.259961],[6.013005],[-2.362208],[-4.997076],[-0.637701],[-7.996019],[5.392269],[5.878579],[3.085242],[-2.530647],[8.431654],[-5.811010],[2.956752],[-2.995797],[5.185028],[2.178190],[-3.912065],[-2.965309],[5.083537],[-1.087182],[-3.278663],[6.680589],[-3.890241],[7.908312],[-9.928492],[6.435296],[9.337016],[0.643522],[4.444655],[-2.129863],[6.845940],[2.294448],[-2.122483],[5.101261],[-0.868092],[8.901739],[-3.732753],[2.074484],[-3.003405],[-6.490184],[-1.580960],[-9.365568],[-0.978222],[-2.818477],[8.580233],[-9.258407],[-9.702056],[-8.076932],[-9.828095],[3.125438],[-3.411900],[9.678841],[5.259576],[5.483575],[7.438146],[-1.146727],[5.729834],[2.106787],[8.610696],[7.227598],[8.719487],[6.951617],[-4.656924],[-0.621641],[0.906297],[7.503655],[2.579040],[4.253956],[9.607707],[-9.310263],[-7.391188],[-3.828344],[6.682845],[8.537467],[7.218024],[1.570730],[6.082054],[2.427905],[-7.866509],[-6.600861],[1.698212],[9.832835],[-6.174809],[7.557726],[0.991371],[-3.376198],[2.406513],[-4.301758],[7.223001],[2.812428],[-1.143625],[7.839084],[6.174164],[9.084243],[-2.437188],[-4.658437],[-9.473529],[-7.462389],[-7.941365],[-8.591019],[0.139843],[6.970211],[-4.272814],[9.929917],[-2.089751],[-3.291422],[9.239160],[-9.743937],[-5.542533],[6.520472],[9.712890],[-1.286478],[8.310338],[-6.591394],[8.809021],[-6.367208],[8.099658],[1.194386],[3.486558],[1.171399],[4.702703],[-2.073008],[5.795561],[8.419080],[2.970209],[4.563662],[-8.988766],[-1.074067],[-3.946379],[3.400214],[6.727016],[8.598006],[-7.220738],[-3.938548],[0.211016],[8.524210],[-6.842205],[-2.435161],[-5.121482],[1.656699],[-5.152929],[-0.286465],[8.962001],[-8.419468],[6.587378],[7.148873],[0.113251],[2.281153],[3.833612],[5.011440],[-1.720726],[9.867532],[8.664542],[-0.991792],[4.626062],[8.148516],[-9.820545],[1.194080],[-6.074209],[-0.209366],[1.278966],[-6.889319],[-0.770511],[-0.696049],[-0.391774],[-6.202679],[-7.287012],[5.832431],[7.844936],[0.590673],[7.638440],[-4.272163],[-4.161470],[4.800540],[-0.424487],[-5.375855],[0.946448],[-7.747009],[9.139758],[0.080264],[2.645207],[-4.028676],[7.959969],[9.544408],[9.617820],[-0.419829],[2.466612],[1.697362],[-4.200153],[-9.865679],[-6.620293],[-6.697658],[2.154712],[8.913361],[-5.046122],[-8.001587],[-9.592614],[5.440545],[-8.625432],[0.898514],[-4.806763],[3.963995],[-2.266945],[3.623943],[2.329994],[8.073143],[7.857030],[-0.148742],[0.702284],[6.586808],[-0.943354],[9.814911],[-6.593428],[0.127663],[9.002052],[-9.723440],[-6.386311],[1.362590],[-2.355190],[5.617576],[-5.459972],[9.338324],[-5.503350],[-6.481814],[2.479066],[9.305363],[-6.933854],[8.153842],[-1.708522],[3.645263],[8.496047],[8.744948],[8.358366],[-2.729576],[3.283424],[-6.625046],[7.655208],[4.148444],[9.516243],[0.410126],[2.883473],[-0.775649],[4.407810],[-2.042571],[-3.613266],[0.791817],[-4.854387],[7.266159],[8.946766],[9.698226],[8.861246],[-4.635073],[-1.871415],[8.642565],[6.872118],[-0.440871],[5.730340],[-3.186029],[-4.379871],[-8.598038]], dtype = "float64")#candidate|3270|(2560, 1)|const|float64
call_3269 = relay.TupleGetItem(func_824_call(relay.reshape(const_3270.astype('float64'), [2560, 1])), 4)
call_3271 = relay.TupleGetItem(func_826_call(relay.reshape(const_3270.astype('float64'), [2560, 1])), 4)
var_3275 = relay.var("var_3275", dtype = "float64", shape = (2560, 2))#candidate|3275|(2560, 2)|var|float64
bop_3276 = relay.bitwise_or(const_3270.astype('uint16'), var_3275.astype('uint16')) # shape=(2560, 2)
output = relay.Tuple([call_3265,call_3269,bop_3276,])
output2 = relay.Tuple([call_3266,call_3271,bop_3276,])
func_3285 = relay.Function([var_3275,], output)
mod['func_3285'] = func_3285
mod = relay.transform.InferType()(mod)
var_3286 = relay.var("var_3286", dtype = "float64", shape = (2560, 2))#candidate|3286|(2560, 2)|var|float64
output = func_3285(var_3286)
func_3287 = relay.Function([var_3286], output)
mutated_mod['func_3287'] = func_3287
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2986_call = mod.get_global_var('func_2986')
func_2987_call = mutated_mod.get_global_var('func_2987')
call_3324 = relay.TupleGetItem(func_2986_call(), 0)
call_3325 = relay.TupleGetItem(func_2987_call(), 0)
func_305_call = mod.get_global_var('func_305')
func_307_call = mutated_mod.get_global_var('func_307')
call_3335 = relay.TupleGetItem(func_305_call(), 0)
call_3336 = relay.TupleGetItem(func_307_call(), 0)
func_2875_call = mod.get_global_var('func_2875')
func_2876_call = mutated_mod.get_global_var('func_2876')
call_3343 = relay.TupleGetItem(func_2875_call(), 0)
call_3344 = relay.TupleGetItem(func_2876_call(), 0)
output = relay.Tuple([call_3324,call_3335,call_3343,])
output2 = relay.Tuple([call_3325,call_3336,call_3344,])
func_3358 = relay.Function([], output)
mod['func_3358'] = func_3358
mod = relay.transform.InferType()(mod)
mutated_mod['func_3358'] = func_3358
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3358_call = mutated_mod.get_global_var('func_3358')
call_3359 = func_3358_call()
output = call_3359
func_3360 = relay.Function([], output)
mutated_mod['func_3360'] = func_3360
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1760_call = mod.get_global_var('func_1760')
func_1761_call = mutated_mod.get_global_var('func_1761')
call_3361 = relay.TupleGetItem(func_1760_call(), 1)
call_3362 = relay.TupleGetItem(func_1761_call(), 1)
output = relay.Tuple([call_3361,])
output2 = relay.Tuple([call_3362,])
func_3381 = relay.Function([], output)
mod['func_3381'] = func_3381
mod = relay.transform.InferType()(mod)
mutated_mod['func_3381'] = func_3381
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3381_call = mutated_mod.get_global_var('func_3381')
call_3382 = func_3381_call()
output = call_3382
func_3383 = relay.Function([], output)
mutated_mod['func_3383'] = func_3383
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1594_call = mod.get_global_var('func_1594')
func_1595_call = mutated_mod.get_global_var('func_1595')
call_3447 = func_1594_call()
call_3448 = func_1594_call()
func_1929_call = mod.get_global_var('func_1929')
func_1931_call = mutated_mod.get_global_var('func_1931')
call_3449 = relay.TupleGetItem(func_1929_call(), 0)
call_3450 = relay.TupleGetItem(func_1931_call(), 0)
var_3464 = relay.var("var_3464", dtype = "float32", shape = (11, 4, 2))#candidate|3464|(11, 4, 2)|var|float32
bop_3465 = relay.left_shift(call_3449.astype('uint8'), relay.reshape(var_3464.astype('uint8'), relay.shape_of(call_3449))) # shape=(11, 4, 2)
bop_3468 = relay.left_shift(call_3450.astype('uint8'), relay.reshape(var_3464.astype('uint8'), relay.shape_of(call_3450))) # shape=(11, 4, 2)
output = relay.Tuple([call_3447,bop_3465,])
output2 = relay.Tuple([call_3448,bop_3468,])
func_3469 = relay.Function([var_3464,], output)
mod['func_3469'] = func_3469
mod = relay.transform.InferType()(mod)
var_3470 = relay.var("var_3470", dtype = "float32", shape = (11, 4, 2))#candidate|3470|(11, 4, 2)|var|float32
output = func_3469(var_3470)
func_3471 = relay.Function([var_3470], output)
mutated_mod['func_3471'] = func_3471
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1594_call = mod.get_global_var('func_1594')
func_1595_call = mutated_mod.get_global_var('func_1595')
call_3505 = func_1594_call()
call_3506 = func_1594_call()
output = call_3505
output2 = call_3506
func_3507 = relay.Function([], output)
mod['func_3507'] = func_3507
mod = relay.transform.InferType()(mod)
mutated_mod['func_3507'] = func_3507
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3507_call = mutated_mod.get_global_var('func_3507')
call_3508 = func_3507_call()
output = call_3508
func_3509 = relay.Function([], output)
mutated_mod['func_3509'] = func_3509
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3181_call = mod.get_global_var('func_3181')
func_3183_call = mutated_mod.get_global_var('func_3183')
call_3527 = func_3181_call()
call_3528 = func_3181_call()
func_3358_call = mod.get_global_var('func_3358')
func_3360_call = mutated_mod.get_global_var('func_3360')
call_3535 = relay.TupleGetItem(func_3358_call(), 2)
call_3536 = relay.TupleGetItem(func_3360_call(), 2)
output = relay.Tuple([call_3527,call_3535,])
output2 = relay.Tuple([call_3528,call_3536,])
func_3547 = relay.Function([], output)
mod['func_3547'] = func_3547
mod = relay.transform.InferType()(mod)
output = func_3547()
func_3548 = relay.Function([], output)
mutated_mod['func_3548'] = func_3548
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3507_call = mod.get_global_var('func_3507')
func_3509_call = mutated_mod.get_global_var('func_3509')
call_3572 = func_3507_call()
call_3573 = func_3507_call()
func_483_call = mod.get_global_var('func_483')
func_485_call = mutated_mod.get_global_var('func_485')
call_3594 = relay.TupleGetItem(func_483_call(), 1)
call_3595 = relay.TupleGetItem(func_485_call(), 1)
output = relay.Tuple([call_3572,call_3594,])
output2 = relay.Tuple([call_3573,call_3595,])
func_3596 = relay.Function([], output)
mod['func_3596'] = func_3596
mod = relay.transform.InferType()(mod)
mutated_mod['func_3596'] = func_3596
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3596_call = mutated_mod.get_global_var('func_3596')
call_3597 = func_3596_call()
output = call_3597
func_3598 = relay.Function([], output)
mutated_mod['func_3598'] = func_3598
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1382_call = mod.get_global_var('func_1382')
func_1383_call = mutated_mod.get_global_var('func_1383')
call_3617 = relay.TupleGetItem(func_1382_call(), 2)
call_3618 = relay.TupleGetItem(func_1383_call(), 2)
func_2875_call = mod.get_global_var('func_2875')
func_2876_call = mutated_mod.get_global_var('func_2876')
call_3629 = relay.TupleGetItem(func_2875_call(), 0)
call_3630 = relay.TupleGetItem(func_2876_call(), 0)
func_3381_call = mod.get_global_var('func_3381')
func_3383_call = mutated_mod.get_global_var('func_3383')
call_3664 = relay.TupleGetItem(func_3381_call(), 0)
call_3665 = relay.TupleGetItem(func_3383_call(), 0)
func_2824_call = mod.get_global_var('func_2824')
func_2826_call = mutated_mod.get_global_var('func_2826')
call_3669 = relay.TupleGetItem(func_2824_call(), 1)
call_3670 = relay.TupleGetItem(func_2826_call(), 1)
func_333_call = mod.get_global_var('func_333')
func_335_call = mutated_mod.get_global_var('func_335')
call_3698 = func_333_call()
call_3699 = func_333_call()
output = relay.Tuple([call_3617,call_3629,call_3664,call_3669,call_3698,])
output2 = relay.Tuple([call_3618,call_3630,call_3665,call_3670,call_3699,])
func_3702 = relay.Function([], output)
mod['func_3702'] = func_3702
mod = relay.transform.InferType()(mod)
mutated_mod['func_3702'] = func_3702
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3702_call = mutated_mod.get_global_var('func_3702')
call_3703 = func_3702_call()
output = call_3703
func_3704 = relay.Function([], output)
mutated_mod['func_3704'] = func_3704
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3738 = relay.var("var_3738", dtype = "float64", shape = (13, 2, 15))#candidate|3738|(13, 2, 15)|var|float64
const_3739 = relay.const([[[3.181397,-8.063027,1.774876,2.077520,-6.355425,-8.484369,5.020651,-4.110737,9.631669,6.122271,-8.448598,-3.811938,8.995907,-7.399593,-4.829859],[-4.475200,-0.717388,5.652088,4.539964,3.048449,3.727654,-7.375211,-5.180909,-4.981435,1.763728,-8.036741,9.554729,-5.096278,-4.156722,4.905703]],[[9.883151,-1.414046,-8.296972,1.448896,-6.872756,1.085007,8.221637,-4.644185,-6.939560,3.109331,-6.840414,1.229237,-7.730109,-9.376608,-7.241479],[-4.038544,-4.926933,-1.437912,-8.356646,-8.766530,-5.691097,9.610230,-9.849454,-6.009822,-9.396587,-2.686168,3.279052,-3.983650,3.980755,-1.147400]],[[-5.737725,1.509451,6.362663,8.098083,-5.714462,-0.621328,8.429052,-0.120956,0.499999,9.878771,-6.834329,-1.625978,2.183554,5.381770,-5.324347],[7.247468,-0.532875,2.711558,-7.021830,-8.000037,-5.379609,6.160871,-9.939537,5.391801,-2.886957,1.760048,-7.183290,-6.295020,8.414029,7.812480]],[[4.512290,-7.983186,6.907266,4.180330,6.074103,-7.492586,-0.296709,4.814797,5.739390,-7.200091,1.332698,-8.296885,-4.378852,-7.009448,8.705772],[8.374308,-6.620107,-0.839205,3.202618,2.628949,0.183717,-7.093982,6.745016,-3.400055,0.508584,2.155857,4.305377,-7.164098,-6.787577,7.876522]],[[-3.445942,8.334205,-1.621468,2.561703,0.997038,-2.526167,-4.876081,2.302030,3.153665,3.026915,-7.252535,7.068952,-1.616449,2.618800,-6.996986],[-2.717861,3.027736,0.026650,-2.084946,6.309146,7.456666,-0.182565,9.963487,-0.566930,-7.729126,5.578663,-0.013454,-6.149483,-2.680359,7.805726]],[[-0.573683,-0.008171,8.851687,9.837721,-5.702997,-9.264145,1.206051,2.473932,-8.535626,6.743956,5.104734,2.198727,7.329468,1.485626,-8.160009],[8.128768,-1.930981,-6.824037,3.045976,5.484157,0.585921,-7.527755,6.015650,2.248176,7.449279,-6.257987,6.384307,-2.373021,3.280898,-8.503831]],[[-9.717988,-2.609054,4.373011,7.954606,-2.412008,-2.213783,-8.960051,-7.655694,6.029528,4.433303,-0.550163,7.399792,0.433919,5.842934,8.534028],[-5.739876,7.737395,0.159094,-3.357174,4.558208,6.771264,-1.779201,-1.931532,9.916788,-3.022073,-2.790772,-1.202261,-8.147850,4.530551,-3.521838]],[[4.019595,9.657746,8.489726,-4.880326,8.381262,1.321213,8.016315,-6.353216,-1.263995,3.613512,-7.140963,-1.605567,-5.520410,-9.272619,-3.573456],[-0.434339,-9.442294,-4.207935,-6.744175,6.414607,-9.053793,0.802189,-7.767675,-1.438240,1.692181,1.954599,7.792668,3.848966,-1.028377,-8.536787]],[[-8.107315,-7.723339,-2.323950,1.850799,7.023577,-6.879120,3.276476,-5.305394,2.152236,-6.538244,-9.494751,-5.714052,7.764202,6.085560,9.430553],[-8.320081,7.279423,-6.315717,2.321717,-6.450822,-1.622436,9.403148,-2.729620,3.982940,-9.871011,2.590742,8.542609,-0.710174,0.843136,-8.137291]],[[8.569474,-8.490112,-3.914607,-2.254284,-3.921446,-2.177595,8.372119,-9.877513,8.092840,6.223985,-1.365688,0.532078,-6.043058,-6.854863,6.222304],[5.015021,-6.577825,7.553726,-8.409359,-9.318264,1.331407,-6.368711,-2.703373,-4.866510,-5.079830,7.670814,-7.618273,3.166188,3.348019,-7.974543]],[[-4.977919,5.639818,-3.010820,5.148212,6.253491,0.484820,3.841994,8.634505,9.089071,1.577468,-9.995252,-7.639236,5.282064,6.771146,2.406598],[-2.414732,2.456856,-2.984222,-4.056038,0.190364,-0.071236,-8.876201,-1.928883,0.300243,-2.848733,7.042101,-7.307162,5.005315,9.961431,-2.718452]],[[9.682061,3.538827,-0.046930,-4.722926,3.823212,-7.897206,-2.253938,9.695294,6.742002,-5.062607,-5.391414,-3.718757,6.018742,-8.040167,-2.720329],[-2.400308,6.858361,5.856690,2.615586,3.423660,8.426983,-3.473702,-2.667922,-0.681243,2.380308,9.707179,-5.915418,-3.247523,-1.020888,0.625747]],[[2.191107,-3.840578,1.773675,-7.878350,3.223667,3.974399,-1.832173,-9.812323,-1.408080,-4.833779,-9.371347,5.934525,0.132552,-3.943440,-0.971161],[-9.471844,9.384316,5.489467,-0.889543,-5.649141,6.294292,-8.640257,8.664226,-8.663500,7.109571,3.409536,2.353490,6.512604,-7.714941,-4.316395]]], dtype = "float64")#candidate|3739|(13, 2, 15)|const|float64
bop_3740 = relay.minimum(var_3738.astype('float64'), relay.reshape(const_3739.astype('float64'), relay.shape_of(var_3738))) # shape=(13, 2, 15)
func_3507_call = mod.get_global_var('func_3507')
func_3509_call = mutated_mod.get_global_var('func_3509')
call_3746 = func_3507_call()
call_3747 = func_3507_call()
output = relay.Tuple([bop_3740,call_3746,])
output2 = relay.Tuple([bop_3740,call_3747,])
func_3752 = relay.Function([var_3738,], output)
mod['func_3752'] = func_3752
mod = relay.transform.InferType()(mod)
mutated_mod['func_3752'] = func_3752
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3753 = relay.var("var_3753", dtype = "float64", shape = (13, 2, 15))#candidate|3753|(13, 2, 15)|var|float64
func_3752_call = mutated_mod.get_global_var('func_3752')
call_3754 = func_3752_call(var_3753)
output = call_3754
func_3755 = relay.Function([var_3753], output)
mutated_mod['func_3755'] = func_3755
mutated_mod = relay.transform.InferType()(mutated_mod)
func_181_call = mod.get_global_var('func_181')
func_183_call = mutated_mod.get_global_var('func_183')
call_3812 = relay.TupleGetItem(func_181_call(), 1)
call_3813 = relay.TupleGetItem(func_183_call(), 1)
func_1868_call = mod.get_global_var('func_1868')
func_1869_call = mutated_mod.get_global_var('func_1869')
call_3814 = func_1868_call()
call_3815 = func_1868_call()
func_1047_call = mod.get_global_var('func_1047')
func_1049_call = mutated_mod.get_global_var('func_1049')
call_3817 = relay.TupleGetItem(func_1047_call(), 1)
call_3818 = relay.TupleGetItem(func_1049_call(), 1)
var_3824 = relay.var("var_3824", dtype = "float64", shape = (12, 2, 12))#candidate|3824|(12, 2, 12)|var|float64
bop_3825 = relay.less_equal(call_3817.astype('bool'), relay.reshape(var_3824.astype('bool'), relay.shape_of(call_3817))) # shape=(12, 2, 12)
bop_3828 = relay.less_equal(call_3818.astype('bool'), relay.reshape(var_3824.astype('bool'), relay.shape_of(call_3818))) # shape=(12, 2, 12)
func_2291_call = mod.get_global_var('func_2291')
func_2294_call = mutated_mod.get_global_var('func_2294')
call_3838 = relay.TupleGetItem(func_2291_call(relay.reshape(call_3814.astype('float32'), [11, 4, 2])), 1)
call_3839 = relay.TupleGetItem(func_2294_call(relay.reshape(call_3814.astype('float32'), [11, 4, 2])), 1)
func_1760_call = mod.get_global_var('func_1760')
func_1761_call = mutated_mod.get_global_var('func_1761')
call_3850 = relay.TupleGetItem(func_1760_call(), 0)
call_3851 = relay.TupleGetItem(func_1761_call(), 0)
bop_3854 = relay.left_shift(call_3817.astype('int8'), relay.reshape(var_3824.astype('int8'), relay.shape_of(call_3817))) # shape=(12, 2, 12)
bop_3857 = relay.left_shift(call_3818.astype('int8'), relay.reshape(var_3824.astype('int8'), relay.shape_of(call_3818))) # shape=(12, 2, 12)
func_1047_call = mod.get_global_var('func_1047')
func_1049_call = mutated_mod.get_global_var('func_1049')
call_3860 = relay.TupleGetItem(func_1047_call(), 3)
call_3861 = relay.TupleGetItem(func_1049_call(), 3)
bop_3865 = relay.maximum(call_3838.astype('int32'), relay.reshape(bop_3825.astype('int32'), relay.shape_of(call_3838))) # shape=(12, 2, 12)
bop_3868 = relay.maximum(call_3839.astype('int32'), relay.reshape(bop_3828.astype('int32'), relay.shape_of(call_3839))) # shape=(12, 2, 12)
uop_3870 = relay.sigmoid(call_3817.astype('float32')) # shape=(12, 2, 12)
uop_3872 = relay.sigmoid(call_3818.astype('float32')) # shape=(12, 2, 12)
uop_3877 = relay.log(uop_3870.astype('float64')) # shape=(12, 2, 12)
uop_3879 = relay.log(uop_3872.astype('float64')) # shape=(12, 2, 12)
uop_3880 = relay.sinh(uop_3870.astype('float32')) # shape=(12, 2, 12)
uop_3882 = relay.sinh(uop_3872.astype('float32')) # shape=(12, 2, 12)
func_510_call = mod.get_global_var('func_510')
func_512_call = mutated_mod.get_global_var('func_512')
call_3888 = relay.TupleGetItem(func_510_call(), 1)
call_3889 = relay.TupleGetItem(func_512_call(), 1)
uop_3893 = relay.cosh(uop_3877.astype('float64')) # shape=(12, 2, 12)
uop_3895 = relay.cosh(uop_3879.astype('float64')) # shape=(12, 2, 12)
uop_3900 = relay.cos(uop_3870.astype('float32')) # shape=(12, 2, 12)
uop_3902 = relay.cos(uop_3872.astype('float32')) # shape=(12, 2, 12)
output = relay.Tuple([call_3812,call_3814,call_3850,bop_3854,call_3860,bop_3865,uop_3880,call_3888,uop_3893,uop_3900,])
output2 = relay.Tuple([call_3813,call_3815,call_3851,bop_3857,call_3861,bop_3868,uop_3882,call_3889,uop_3895,uop_3902,])
func_3906 = relay.Function([var_3824,], output)
mod['func_3906'] = func_3906
mod = relay.transform.InferType()(mod)
mutated_mod['func_3906'] = func_3906
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3907 = relay.var("var_3907", dtype = "float64", shape = (12, 2, 12))#candidate|3907|(12, 2, 12)|var|float64
func_3906_call = mutated_mod.get_global_var('func_3906')
call_3908 = func_3906_call(var_3907)
output = call_3908
func_3909 = relay.Function([var_3907], output)
mutated_mod['func_3909'] = func_3909
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3244_call = mod.get_global_var('func_3244')
func_3245_call = mutated_mod.get_global_var('func_3245')
call_3952 = relay.TupleGetItem(func_3244_call(), 1)
call_3953 = relay.TupleGetItem(func_3245_call(), 1)
output = relay.Tuple([call_3952,])
output2 = relay.Tuple([call_3953,])
func_3964 = relay.Function([], output)
mod['func_3964'] = func_3964
mod = relay.transform.InferType()(mod)
output = func_3964()
func_3965 = relay.Function([], output)
mutated_mod['func_3965'] = func_3965
mutated_mod = relay.transform.InferType()(mutated_mod)
func_534_call = mod.get_global_var('func_534')
func_536_call = mutated_mod.get_global_var('func_536')
call_4007 = relay.TupleGetItem(func_534_call(), 1)
call_4008 = relay.TupleGetItem(func_536_call(), 1)
output = call_4007
output2 = call_4008
func_4031 = relay.Function([], output)
mod['func_4031'] = func_4031
mod = relay.transform.InferType()(mod)
output = func_4031()
func_4032 = relay.Function([], output)
mutated_mod['func_4032'] = func_4032
mutated_mod = relay.transform.InferType()(mutated_mod)
func_101_call = mod.get_global_var('func_101')
func_102_call = mutated_mod.get_global_var('func_102')
call_4159 = relay.TupleGetItem(func_101_call(), 0)
call_4160 = relay.TupleGetItem(func_102_call(), 0)
func_735_call = mod.get_global_var('func_735')
func_737_call = mutated_mod.get_global_var('func_737')
call_4169 = relay.TupleGetItem(func_735_call(), 4)
call_4170 = relay.TupleGetItem(func_737_call(), 4)
output = relay.Tuple([call_4159,call_4169,])
output2 = relay.Tuple([call_4160,call_4170,])
func_4173 = relay.Function([], output)
mod['func_4173'] = func_4173
mod = relay.transform.InferType()(mod)
mutated_mod['func_4173'] = func_4173
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4173_call = mutated_mod.get_global_var('func_4173')
call_4174 = func_4173_call()
output = call_4174
func_4175 = relay.Function([], output)
mutated_mod['func_4175'] = func_4175
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3000_call = mod.get_global_var('func_3000')
func_3002_call = mutated_mod.get_global_var('func_3002')
call_4188 = func_3000_call()
call_4189 = func_3000_call()
func_1760_call = mod.get_global_var('func_1760')
func_1761_call = mutated_mod.get_global_var('func_1761')
call_4196 = relay.TupleGetItem(func_1760_call(), 1)
call_4197 = relay.TupleGetItem(func_1761_call(), 1)
output = relay.Tuple([call_4188,call_4196,])
output2 = relay.Tuple([call_4189,call_4197,])
func_4202 = relay.Function([], output)
mod['func_4202'] = func_4202
mod = relay.transform.InferType()(mod)
mutated_mod['func_4202'] = func_4202
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4202_call = mutated_mod.get_global_var('func_4202')
call_4203 = func_4202_call()
output = call_4203
func_4204 = relay.Function([], output)
mutated_mod['func_4204'] = func_4204
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4173_call = mod.get_global_var('func_4173')
func_4175_call = mutated_mod.get_global_var('func_4175')
call_4244 = relay.TupleGetItem(func_4173_call(), 1)
call_4245 = relay.TupleGetItem(func_4175_call(), 1)
uop_4248 = relay.atan(call_4244.astype('float64')) # shape=(2560,)
uop_4250 = relay.atan(call_4245.astype('float64')) # shape=(2560,)
var_4254 = relay.var("var_4254", dtype = "float64", shape = (2560,))#candidate|4254|(2560,)|var|float64
bop_4255 = relay.floor_divide(uop_4248.astype('float32'), relay.reshape(var_4254.astype('float32'), relay.shape_of(uop_4248))) # shape=(2560,)
bop_4258 = relay.floor_divide(uop_4250.astype('float32'), relay.reshape(var_4254.astype('float32'), relay.shape_of(uop_4250))) # shape=(2560,)
func_2967_call = mod.get_global_var('func_2967')
func_2968_call = mutated_mod.get_global_var('func_2968')
call_4262 = func_2967_call()
call_4263 = func_2967_call()
uop_4265 = relay.asinh(var_4254.astype('float32')) # shape=(2560,)
output = relay.Tuple([bop_4255,call_4262,uop_4265,])
output2 = relay.Tuple([bop_4258,call_4263,uop_4265,])
func_4275 = relay.Function([var_4254,], output)
mod['func_4275'] = func_4275
mod = relay.transform.InferType()(mod)
mutated_mod['func_4275'] = func_4275
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4276 = relay.var("var_4276", dtype = "float64", shape = (2560,))#candidate|4276|(2560,)|var|float64
func_4275_call = mutated_mod.get_global_var('func_4275')
call_4277 = func_4275_call(var_4276)
output = call_4277
func_4278 = relay.Function([var_4276], output)
mutated_mod['func_4278'] = func_4278
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2727_call = mod.get_global_var('func_2727')
func_2729_call = mutated_mod.get_global_var('func_2729')
call_4300 = relay.TupleGetItem(func_2727_call(), 1)
call_4301 = relay.TupleGetItem(func_2729_call(), 1)
output = call_4300
output2 = call_4301
func_4315 = relay.Function([], output)
mod['func_4315'] = func_4315
mod = relay.transform.InferType()(mod)
output = func_4315()
func_4316 = relay.Function([], output)
mutated_mod['func_4316'] = func_4316
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1963_call = mod.get_global_var('func_1963')
func_1965_call = mutated_mod.get_global_var('func_1965')
call_4328 = func_1963_call()
call_4329 = func_1963_call()
output = call_4328
output2 = call_4329
func_4330 = relay.Function([], output)
mod['func_4330'] = func_4330
mod = relay.transform.InferType()(mod)
mutated_mod['func_4330'] = func_4330
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4330_call = mutated_mod.get_global_var('func_4330')
call_4331 = func_4330_call()
output = call_4331
func_4332 = relay.Function([], output)
mutated_mod['func_4332'] = func_4332
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2727_call = mod.get_global_var('func_2727')
func_2729_call = mutated_mod.get_global_var('func_2729')
call_4342 = relay.TupleGetItem(func_2727_call(), 2)
call_4343 = relay.TupleGetItem(func_2729_call(), 2)
output = call_4342
output2 = call_4343
func_4352 = relay.Function([], output)
mod['func_4352'] = func_4352
mod = relay.transform.InferType()(mod)
output = func_4352()
func_4353 = relay.Function([], output)
mutated_mod['func_4353'] = func_4353
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3547_call = mod.get_global_var('func_3547')
func_3548_call = mutated_mod.get_global_var('func_3548')
call_4354 = relay.TupleGetItem(func_3547_call(), 0)
call_4355 = relay.TupleGetItem(func_3548_call(), 0)
func_2155_call = mod.get_global_var('func_2155')
func_2157_call = mutated_mod.get_global_var('func_2157')
const_4370 = relay.const([[6.541927,-2.467946,1.465683,-3.644684,-0.930026,-6.603451,-0.795781,8.919268,-2.203989,1.380468,2.290667,-2.286940,1.381857,4.239075,3.118817,8.696910,4.155462,2.009643,0.117705,1.439037,-9.666908,-0.427043,-6.682903,9.622473,2.658742,2.948478,8.606372,2.786738,9.357995,-6.883955,9.883898,8.400987,3.532555,2.490656,9.217561,-2.245932,-3.656553,-8.103466,8.951600,6.409300,-4.446298,6.630649,-8.085655,8.256301,6.076164,2.482012,9.837144,2.782186,7.650896,-1.618520,1.821950,-5.277823,6.028833,7.928350,-2.468505,3.530489,9.065704,9.393469,4.060669,7.949531,-1.122362,9.069313,0.271862,5.278012,9.400997,0.243577,-1.203525,-5.752083,8.586420,-7.490486,0.863893,-4.395430,1.459938,-5.753245,-7.919453]], dtype = "float32")#candidate|4370|(1, 75)|const|float32
call_4369 = relay.TupleGetItem(func_2155_call(relay.reshape(const_4370.astype('float32'), [15, 5])), 0)
call_4371 = relay.TupleGetItem(func_2157_call(relay.reshape(const_4370.astype('float32'), [15, 5])), 0)
uop_4372 = relay.sinh(const_4370.astype('float32')) # shape=(1, 75)
bop_4376 = relay.logical_or(uop_4372.astype('bool'), relay.reshape(call_4369.astype('bool'), relay.shape_of(uop_4372))) # shape=(1, 75)
bop_4379 = relay.logical_or(uop_4372.astype('bool'), relay.reshape(call_4371.astype('bool'), relay.shape_of(uop_4372))) # shape=(1, 75)
uop_4388 = relay.log2(bop_4376.astype('float64')) # shape=(1, 75)
uop_4390 = relay.log2(bop_4379.astype('float64')) # shape=(1, 75)
bop_4391 = relay.less_equal(uop_4388.astype('bool'), relay.reshape(uop_4372.astype('bool'), relay.shape_of(uop_4388))) # shape=(1, 75)
bop_4394 = relay.less_equal(uop_4390.astype('bool'), relay.reshape(uop_4372.astype('bool'), relay.shape_of(uop_4390))) # shape=(1, 75)
uop_4397 = relay.log(uop_4372.astype('float32')) # shape=(1, 75)
func_3285_call = mod.get_global_var('func_3285')
func_3287_call = mutated_mod.get_global_var('func_3287')
var_4401 = relay.var("var_4401", dtype = "float64", shape = (4, 1280))#candidate|4401|(4, 1280)|var|float64
call_4400 = relay.TupleGetItem(func_3285_call(relay.reshape(var_4401.astype('float64'), [2560, 2])), 0)
call_4402 = relay.TupleGetItem(func_3287_call(relay.reshape(var_4401.astype('float64'), [2560, 2])), 0)
func_3547_call = mod.get_global_var('func_3547')
func_3548_call = mutated_mod.get_global_var('func_3548')
call_4405 = relay.TupleGetItem(func_3547_call(), 0)
call_4406 = relay.TupleGetItem(func_3548_call(), 0)
output = relay.Tuple([call_4354,bop_4391,uop_4397,call_4400,var_4401,call_4405,])
output2 = relay.Tuple([call_4355,bop_4394,uop_4397,call_4402,var_4401,call_4406,])
func_4407 = relay.Function([var_4401,], output)
mod['func_4407'] = func_4407
mod = relay.transform.InferType()(mod)
mutated_mod['func_4407'] = func_4407
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4408 = relay.var("var_4408", dtype = "float64", shape = (4, 1280))#candidate|4408|(4, 1280)|var|float64
func_4407_call = mutated_mod.get_global_var('func_4407')
call_4409 = func_4407_call(var_4408)
output = call_4409
func_4410 = relay.Function([var_4408], output)
mutated_mod['func_4410'] = func_4410
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2179_call = mod.get_global_var('func_2179')
func_2181_call = mutated_mod.get_global_var('func_2181')
call_4415 = func_2179_call()
call_4416 = func_2179_call()
output = call_4415
output2 = call_4416
func_4432 = relay.Function([], output)
mod['func_4432'] = func_4432
mod = relay.transform.InferType()(mod)
mutated_mod['func_4432'] = func_4432
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4432_call = mutated_mod.get_global_var('func_4432')
call_4433 = func_4432_call()
output = call_4433
func_4434 = relay.Function([], output)
mutated_mod['func_4434'] = func_4434
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3381_call = mod.get_global_var('func_3381')
func_3383_call = mutated_mod.get_global_var('func_3383')
call_4462 = relay.TupleGetItem(func_3381_call(), 0)
call_4463 = relay.TupleGetItem(func_3383_call(), 0)
output = call_4462
output2 = call_4463
func_4473 = relay.Function([], output)
mod['func_4473'] = func_4473
mod = relay.transform.InferType()(mod)
output = func_4473()
func_4474 = relay.Function([], output)
mutated_mod['func_4474'] = func_4474
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4477 = relay.var("var_4477", dtype = "float32", shape = (11, 7, 7))#candidate|4477|(11, 7, 7)|var|float32
uop_4478 = relay.log10(var_4477.astype('float32')) # shape=(11, 7, 7)
func_3381_call = mod.get_global_var('func_3381')
func_3383_call = mutated_mod.get_global_var('func_3383')
call_4481 = relay.TupleGetItem(func_3381_call(), 0)
call_4482 = relay.TupleGetItem(func_3383_call(), 0)
output = relay.Tuple([uop_4478,call_4481,])
output2 = relay.Tuple([uop_4478,call_4482,])
func_4484 = relay.Function([var_4477,], output)
mod['func_4484'] = func_4484
mod = relay.transform.InferType()(mod)
mutated_mod['func_4484'] = func_4484
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4485 = relay.var("var_4485", dtype = "float32", shape = (11, 7, 7))#candidate|4485|(11, 7, 7)|var|float32
func_4484_call = mutated_mod.get_global_var('func_4484')
call_4486 = func_4484_call(var_4485)
output = call_4486
func_4487 = relay.Function([var_4485], output)
mutated_mod['func_4487'] = func_4487
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4473_call = mod.get_global_var('func_4473')
func_4474_call = mutated_mod.get_global_var('func_4474')
call_4497 = func_4473_call()
call_4498 = func_4473_call()
func_686_call = mod.get_global_var('func_686')
func_687_call = mutated_mod.get_global_var('func_687')
call_4511 = func_686_call()
call_4512 = func_686_call()
output = relay.Tuple([call_4497,call_4511,])
output2 = relay.Tuple([call_4498,call_4512,])
func_4516 = relay.Function([], output)
mod['func_4516'] = func_4516
mod = relay.transform.InferType()(mod)
output = func_4516()
func_4517 = relay.Function([], output)
mutated_mod['func_4517'] = func_4517
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4473_call = mod.get_global_var('func_4473')
func_4474_call = mutated_mod.get_global_var('func_4474')
call_4556 = func_4473_call()
call_4557 = func_4473_call()
func_1885_call = mod.get_global_var('func_1885')
func_1888_call = mutated_mod.get_global_var('func_1888')
const_4585 = relay.const([8.739638,4.877229,8.071143,-5.528004,-0.099986,-0.966819,-7.948433,-7.335326,-7.819885,-8.058360,-6.717026,-5.917950,9.242757,-8.204270,-1.505910,3.551343,1.287384,-6.214028,-3.281387,-6.292171,-4.782843,6.482044,0.883873,3.856956,4.073668,4.640568,-4.183208,-8.559245,-3.444075,-7.963479,8.507038,-4.541565,-1.587255,5.503285,1.849096,-0.376064,-7.501496,-1.714664,9.463330,-3.547346,4.878383,-2.796423,6.228965,-7.813738,-2.087213,-8.828440,-5.696607,-7.104123,0.875262,4.457689,9.841484,-8.332413,1.621173,0.317905,9.808358,-9.796849,0.508831,-4.529229,4.820825,-9.494089,-4.686744,4.483839,8.799474,5.462052,2.367672,8.482592,-8.780607,9.901230,6.111822,-2.638360,-3.889242,2.007667,-3.434074,-5.308869,-1.280341,6.650089,4.321183,6.944587,-8.796357,5.223609,0.814336,-8.197017,-9.235580,-6.057185,-9.530387,-5.724108,9.519486,-0.961114,-7.951185,2.741679,-6.748371,0.997413,-3.715495,-2.647255,7.245379,-4.425863,4.201347,8.585621,-7.300110,3.002873,-7.526661,9.418962,1.811770,4.245667,-0.367644,9.456431,6.093352,-7.098357,3.837599,-2.668403,-9.226733,-4.794839,5.561552,-2.662730,1.125985,-3.570946,1.106305,2.851571,-1.251500,-1.974402,1.478518,7.959355,-8.427102,-5.323163,-2.983303,2.476664,-7.067218,-6.537045,1.801524,4.446242,-9.690130,-2.090629,-2.302835,7.681982,7.028555,0.050608,8.566099,8.308252,0.032074,8.936296,8.076314,-2.730054,-3.704763,5.317121,5.037545,-1.996725,2.160951,-2.662007,-1.805187,-1.838579,9.482036,9.934293,-2.563011,6.158215,-2.793541,4.083172,8.765133,2.168078,0.172991,1.810555,-5.941944,-6.506058,-8.965917,7.195276,-0.599403,-2.406787,8.371170,-1.602238,6.675860,3.005955,8.851105,3.867661,5.389096,-6.463124,9.359853,5.829995,-2.835481,4.044237,-1.893200,5.584105,-9.133839,3.367666,8.782897,0.364537,1.484696,3.870766,-9.158930,3.438605,8.115335,-4.410324,4.599489,-8.320024,6.926662,-6.237918,-7.979188,8.635876,-8.853865,3.799575,-6.236713,-7.833890,6.589669,-1.099107,-8.573322,1.928457,-4.062351,-5.407221,-7.718477,0.152028,8.687894,0.358292,0.005033,-4.784417,6.128713,-6.539695,3.891705,7.841327,-7.977731,-1.291519,7.580258,-3.044379,9.192694,3.571478,-6.618688,5.626298,4.794473,2.663717,9.247458,-7.258758,2.428875,4.818074,9.832359,-6.867270,-6.176965,-1.195476,-7.369322,8.032979,7.422037,1.164347,2.505999,7.258268,-6.459964,-6.315025,6.896638,-8.938637,3.543803,2.068831,9.904695,-6.884380,-1.106488,7.517140,3.238041,-2.198494,-1.798608,-9.385464,-4.538393,-3.082980,0.948212,8.240232,4.853286,0.269127,0.993883,9.500245,-0.870179,-8.931207,-3.020889,-6.895559,6.897050,-4.620884,-0.203935,5.116673,8.857540,8.596128,-0.756790,2.921922,5.112375,-8.229316,6.395590,5.358923,9.360453,-4.981698,6.888761,-6.297746,3.958301,-7.335408,8.323454,-6.906643,0.917797,7.555456,-8.464906,2.868291,-3.630503,-5.648434,9.769199,3.077283,-3.037586,-6.846943,-5.206519,-8.455314,-7.668389,-5.099530,-3.459461,-1.988543,-2.028683,-5.609316,-4.893127,-8.771537,4.065079,-4.398157,-6.798182,-2.875151,5.448054,7.739764,9.796019,6.936559,-2.790370,6.663491,-5.082494,4.797728,-5.225393,-9.108031,9.125672,4.458833,7.204791,-7.740072,8.858182,-5.373055,9.408585,3.306410,1.138681,-0.310462,-9.007429,6.465837,7.203368,9.603005,-5.522658,-4.606904,1.471750,-4.713703,1.062647,-7.517749,8.048102,1.920878,-4.936707,2.213248,7.167073,-1.280094,-0.188566,3.857995,-0.546998,2.065197,-8.362850,-0.634305,8.091410,-0.927290,5.127782,2.318992,-4.644746,-4.445999,1.744301,-0.771529,6.113414,-2.876413,-6.229643,-8.305782,7.203627,9.696108,5.535439,4.857583,0.671375,-2.511497,-5.958937,9.199221,-4.428581,-8.386440,-2.822599,2.162267,6.517597,4.197745,5.292486,-8.957868,5.720242,-3.723474,5.789158,6.387372,5.616520,-7.402173,3.075530,-3.499711,4.190339,-1.943881,-0.494829,4.970186,5.539068,6.736810,-3.471733,3.964344,-0.911088,7.701275,9.505491,-4.973436,-5.329727,1.069912,-1.591972,9.568255,-0.479495,7.791978,1.372189,-4.974921,8.625717,9.673840,2.019845,6.156974,-7.193783,3.231427,9.473099,3.726196,-7.791955,-5.590640,-6.074285,-4.073381,8.428291,3.116848,0.449655,6.029736,-5.033638,-1.354796,-5.188408,0.888095,-5.096700,-1.214816,-6.961170,7.701333,-2.545380,6.747086,-8.465782,0.025710,-1.816522,-8.430786,-7.037919,-5.602807,8.311158,-3.545761,2.847603,-1.287781,8.780333,1.333476,-7.187261,-3.515608,-1.050012,-6.508485,-0.341179,-8.885568,-7.189366,-9.956994,9.301418,2.859872,2.786178,-3.642135,6.366118,7.518691,6.250173,-8.722746,0.446761,5.211675,5.831106,-9.050224,2.924070,-4.867085,-6.102855,6.052205,3.622290,-8.388438,-9.255485,3.926421,2.486512,-6.772061,-0.759114,9.587065,-6.791781,1.479685,-0.833500,1.425398,6.878699,6.750439,-5.598282,1.038716,-8.542374,-4.396707,-1.027650,-2.547645,-0.225506,-9.816337,-2.232773,2.385637,-8.095632,-0.252041,-4.683664,1.607051,8.544546,8.907883,1.425431,6.867940,-5.987125,-5.560668,-5.229417,5.560996,-5.547915,2.977958,9.417591,4.153281,6.292296,-7.996005,6.176163,8.251142,-3.290879,-9.142565,4.835128,6.993364,3.556638,-1.182478,5.054860,3.428882,-5.175571,-1.935422,7.526448,8.005028,7.622261,-1.392463,7.820012,9.888881,3.111012,0.450295,2.359972,-9.823689,2.754803,-5.134578,-2.112782,-7.516826,-1.504585,-4.849366,-5.026842,8.105433,3.296323,-9.854248,5.235575,4.655174,8.316420,-8.192228,0.763931,0.871325,1.118014,6.881761,3.865960,-4.705298,-0.705704,2.958597,9.402139,-3.927193,3.621344,8.226385,-9.029417,9.783226,-5.552632,4.838912,-5.632171,-9.606241,-3.400899,-8.629805,3.751632,-8.487411,2.085342,-6.493194,-3.839078,-0.884269,5.872502,-3.108016,-2.860474,9.551028,7.271809,-8.862074,3.175905,-8.007737,6.186432,-9.884255,7.677886,-2.293432,-8.244376,0.028038,-4.460885,-0.055308,-1.688719,4.518924,-7.718062,3.099348,8.034477,-5.891908,-9.627429,7.275664,8.754455,-2.498275,-6.892812,8.192556,8.039099,8.025855,-3.384670,8.441858,-7.801829,4.771948,9.593612,8.484157,9.556467,2.122460,-2.249612,9.982202,-5.011409,-5.496911,-9.075343,-1.321840,1.752429,3.346681,3.229381,-3.325152,-1.876601,9.319701,-5.130370,-6.923810,-4.588681,6.593156,-6.488673,-7.359290,-0.179593,9.989530,-6.299564,-7.925856,5.542410,-6.606615,-1.374244,6.797677,-5.032856,-5.603157,9.565336,-5.458552,-9.005984,-6.975895,-3.997412,-8.089383,0.758009,-0.274871,2.361766,6.281012,-8.277911,6.299594,-4.834724,8.825698,2.676859,6.236969,2.758510,-6.524771,1.721022,-8.398121,6.388463,-2.261120,0.697977,4.285256,2.829229,8.552250,-8.144313,-9.736797,0.692936,1.085887,0.800124,0.987266,7.376439,7.313882,-3.584847,-6.246869,-7.980743,8.927353,9.938920,-3.480415,9.305952,5.615356,-9.437865,6.244187,0.340287,6.244542,4.374134,1.259508,-9.448529,-3.604397,1.779043,8.681169,7.720156,6.903066,9.061447,-8.214682,8.227242,-1.590562,1.120604,-9.453354,-4.433722,-3.606429,-3.204614,-1.368305,-8.863210,-1.778566,-5.329921,9.883949,-4.196976,-1.253942,-9.977148,-4.499865,-3.509640,2.934652,-4.536545,7.221456,1.374684,6.564236,4.610102,7.529155,-2.649727,8.307143,3.615015,-0.889913,2.905096,6.654213,6.707215,-2.364742,-2.652681,-9.048677,8.497788,1.100964,4.995797,-9.066547,6.211015,-0.282416,8.479935,-0.265520,-4.328194,-8.704739,9.060851,2.901478,-4.411560,6.561216,8.669672,1.373952,0.744382,-0.947050,9.687435,6.913651,-1.157112,-2.044409,-5.800990,-6.875879,-9.162823,-6.293477,-8.597109,-4.022795,1.704329,3.397483,8.525879,5.677725,5.453372,6.448621,4.982524,2.292316,-4.076636,1.101924,-9.202822,0.091943,7.455970,5.166396,6.647426,-0.606448,1.420142,-5.138857,-7.452707,6.118719,4.733019,1.421158,5.412518,-0.110691,-5.252238,-1.254362,9.939937,8.312087,-0.976355,-2.194545,1.564824,-5.957173,-4.637810,5.901866,9.601348,-3.100794,-1.662910,5.277163,4.688120,4.270807,3.364209,-8.598342,-4.603329,5.117792,-6.390572,-7.695966,-3.432992,-1.965512,8.585353,-4.293548,-5.414436,6.428388,-5.116720,2.569598,-6.701504,6.163118,-9.595069,-5.097677,-6.790986,6.255659,7.639165,-5.241693,8.027245,-5.305638,-6.510785,4.403904,-6.085216,4.745874,2.175963,-1.009958,-7.498637,6.379620,5.175630,9.271644,-6.546621,1.900142,-5.843646,2.219256,-2.579728,2.013669,-4.101185,-6.110254,2.330805,0.191787,-3.477249,0.101977,-9.371983,5.585949,-5.216872,3.057264,-5.661089,0.101098,-2.714154,-5.740381,-9.675251,3.703305,-1.915911,2.202666,-9.774970,-6.299391,-9.011915,2.713417,-9.924563,6.834101,0.781014,4.115639,4.264976,-1.519175,-0.056581,-4.164784,-2.547675,8.290532,3.742575,8.103085,-7.203486,-6.228503,3.046745,0.484262,1.578203,-9.560293,1.072563,-7.315160,-3.909540,-3.319149,2.872344,-1.942655,-0.827770,-1.848848,-2.592781,1.179364,5.404981,-6.559052,6.716434,-1.566377,-3.312907,2.275690,1.658862,-6.023582,8.915280,-6.654759,4.383883,-0.478775,-2.781447,-7.301011,-1.495399,2.789540,3.085357,-3.566046,6.599510,4.842706,-3.024557,9.208617,-5.169119,3.530697,-8.425884,-1.934246,-8.179579,-9.381501,1.113883,-1.461586,-6.699327,9.234435,5.824660,8.033701,6.605448,-7.979004,9.768988,1.841057,2.008852,0.593096,-6.618238,4.239351,5.620987,8.581864,-3.911605,-4.218800,-1.228199,0.783952,-4.030836,-4.312813,2.692134,4.382900,7.769876,4.550409,0.548994,-1.245352,-2.311330,1.162418,0.815684,0.519602,-4.375325,5.954753,7.010011,-5.201325,2.340874,9.524450,6.931205,2.933390,9.599233,8.896643,-5.492328,-3.353540,8.695079,-1.311669,5.646079,7.018440,7.204676,-5.400155,5.715324,-2.769090,8.776410,1.775986,-8.719827,9.007961,1.473330,5.234744,4.691635,5.320410,6.480793,3.618646,8.478283,-6.173046,1.213895,3.376466,8.674005,7.948920,-7.756971,0.438395,-3.109028,-4.306358,6.617685,9.510813,-2.948636,7.706863,-0.083830,-8.352824,1.319358,-5.531001,2.569842,8.867666,-8.355107,1.283468,-2.082199,7.178722,-9.628833,-9.904179,2.772099,-6.439746,-3.394612,0.294062,-9.378943,-4.472573,-1.049937,4.705336,1.346870,-2.227834,5.240859,-6.305847,-3.886384,-7.116475,3.564862,-8.169687,-8.475259,-1.763365,3.696481,1.178986,1.563876,2.038761,5.241630,5.995092,-6.572796,-7.542933,-9.191856,2.900116,-1.647879,6.628053,-6.580015,2.983993,-3.608551,-4.149527,8.252012,8.113450,1.826312,1.707359,1.732154,0.155636,-0.279029,-2.010935,-4.795407,-5.771677,5.255036,8.475829,3.939164,3.547697,-7.629678,3.214225,7.327009,5.482056,-6.554882,4.644450,9.368293,3.424509,-1.358258,-7.780938,5.051992,-0.974308,-3.278013,-2.562531,-4.188152,6.749293,2.805532,-3.861446,-8.779171,-6.857523,-0.328876,-5.873072,-5.471772,-6.782642,6.441084,-3.147206,6.363665,-7.911585,-8.839782,4.150782,-7.509520,7.127817,-1.247558,-1.266334,2.663186,5.902213,6.911351,-3.140337,5.479192,-8.206781,5.492375,1.710842,2.671741,9.980680,-5.831864,-9.530639,4.537580,6.809313,-5.801681,-9.966530,-2.132831,3.128901,-0.389727,4.406249,-4.996269,-8.685018,-0.082418,-3.651427,4.845066,2.664598,3.614570,-0.661960,-6.384574,-5.983891,-3.786685,-6.036509,-5.659308,-5.333054,9.615319,-8.087316,6.769247,-7.069256,-0.737489,-6.339217,-5.514272,8.236051,9.947649,-3.331939,6.518390,-6.181343,-4.013805,-7.064480,5.589156,3.733264,4.683308,-4.306402,-9.952135,-9.987774,-9.074555,4.340376,6.237654,-8.567413,-4.794776,-4.916720,3.082720,8.127403,6.345468,-8.676472,-4.740746,-7.035824,5.268435,7.616285,1.228768,-4.394626,-0.832629,-4.235793,-3.859242,-9.322340,9.087330,2.913846,-6.316803,-8.425156,-2.502566,-4.751089,-9.121694,-8.605981,5.694291,-8.194640,-9.627401,-1.242178,-0.286231,-6.343486,4.566429,8.645864,3.893470,0.012533,-9.620659,3.427782,-3.609009,7.612078,-8.699224,-0.950877,7.432795,-9.627718,0.586257,-9.864356,3.785899,9.672829,-7.881491,-5.395716,5.049978,7.425308,0.575886,-9.294219,-2.160894,4.118540,-0.067182,-5.506870,-3.108861,7.901242,-0.549859,3.169511,-8.064281,-4.890142,0.700392,-0.404842,8.561941,-5.205615,-4.169162,-8.292880,5.828842,-2.812372,-9.568401,5.755738,9.426683,-2.753465,8.468432,-1.776913,-9.219974,-5.373883,9.549605,-1.870220,-9.510073,1.014872,-9.345407,9.532884,7.748981,4.954899,-1.547833,-5.206929,2.036142,6.362835,-7.733426,-3.707848,7.350316,1.976918,8.938513,1.412779,-7.123591,-7.953140,-4.164752,-4.759067,7.701349,0.664838,7.856011,-8.488952,5.567295,1.030082,5.755748,-8.077947,-6.240637,4.630781,-7.665440,3.533767,4.370031,7.309237,0.465566,-2.884240,7.468015,-3.592143,5.046744,9.351222,6.563103,3.622297,-9.261294,0.035922,3.874614,-9.169128,2.707452,-6.273155,7.377892,-7.794331,-0.734605,-9.583715,6.006465,-0.148713,8.282823,9.382916,-8.153555,2.914008,-3.076913,9.595130,6.455124,6.729967,3.561258,2.014317,2.771637,0.262729,-3.462051,1.271193,-1.849918,6.395175,1.535189,-2.373098,6.026147,-3.247787,-7.184249,3.632378,1.782518,-4.910972,-9.391000,-6.321803,-5.927677,2.599092,7.765921,-2.800031,-1.261682,6.722869,-2.385635,2.864865,3.284647,7.021391,1.193034,5.519206,-7.468203,9.295523,5.065222,-3.339214,3.081325,3.591075,2.329241,4.528100,3.781109,3.271800,-3.662273,8.201671,9.674376,-9.073008,6.436555,3.134347,4.682510,-1.645167,-0.469328,-0.154106,3.101799,-7.448032,1.119339,-7.431258,-4.854677,-4.155940,1.162492,-6.226443,3.292286,0.519291,-8.484551,-1.597033,-7.374603,2.681701,5.181205,-8.589662,2.589896,9.648978,-8.384226,8.459095,-9.263238,-9.427311,0.455052,-6.957101,3.839709,8.074770,-9.278905,7.534684,-1.195739,-3.341469,1.737608,-6.193846,2.746908,1.036469,-2.927202,8.898061,3.552429,-5.662585,-0.180201,7.298962,-9.680436,-2.199971,-7.495352,1.826159,-5.296507,-8.548157,2.127781,-2.349152,1.130409,-1.261492,-1.821092,-0.820520,1.082726,-0.039406,1.553681,6.771481,-6.372830,-0.801673,-0.690575,3.081398,4.196628,-0.335223,5.804901,-4.842778,-5.126205,-1.641561,-9.750193,-4.471121,0.935420,3.562141,-8.203917,-5.147668,-6.806809,8.805665,0.932340,5.461327,1.239893,1.027106,-2.944365,6.259207,-8.173288,3.436000,-7.281609,2.818243,-9.105379,-1.688147,2.950876,1.066416,9.846606,-8.517297,-5.653793,-6.154931,4.565205,-5.185825,3.048438,1.435599,5.118552,-8.113774,-7.357375,4.685188,-7.244937,-3.937722,-6.444067,-5.865065,-1.689756,-7.638682,-8.358074,-6.719462,-2.965244,-3.762628,-3.953376,-4.441629,-6.698142,0.622772,-8.220937,-5.929967,-7.261317,-7.857587,-1.512126,2.039369,-1.854137,5.028802,-4.676808,-1.522451,-8.694289,-9.088766,-1.487957,-5.077206,4.170591,-5.112562,-2.920016,-7.983171,9.862355,-9.401998,8.140984,-0.061726,8.276310,4.084764,-7.327968,1.357799,-6.416435,4.257210,-3.593033,1.277239,-3.337638,1.673537,-7.132048,3.113417,-6.872006,-3.601878,7.356523,1.466014,-2.878842,-8.720661,7.811936,-4.747732,0.927427,-5.152990,4.696355,0.128667,3.545710,9.553318,7.792040,8.993297,-5.977932,8.374334,0.995673,-9.735607,5.686781,-3.721142,-0.037730,-4.666194,-2.219317,5.454830,2.348468,4.680105,1.340281,-1.424728,-6.957290,7.488247,1.329436,-4.027015,1.507848,9.723635,-1.127548,9.908620,-4.568892,-2.802575,7.674897,-1.887983,0.078123,3.488427,-3.447428,5.549968,-0.236611,6.208152,5.667135,-1.321391,3.272971,-2.159214,4.813309,-4.134185,8.484825,-2.488557,3.468319,3.296836,7.418577,4.129927,6.071281,-8.428110,9.762747,8.726392,4.997500,-5.770101,2.635820,-2.689812,-2.011928,-7.845756,-0.382821,-0.148645,-2.981633,-9.919497,6.509525,5.617432,-4.760512,-0.024071,-5.398254,-7.675107,6.655981,-2.820684,1.352272,7.015190,9.928086,-7.438462,-7.488521,7.450688,-0.025095,-5.200470,-4.446597,-8.695896,1.234514,-5.297879,5.668218,-2.234526,5.120147,5.012633,8.565256,5.198346,9.725001,-3.075070,-6.430873,-5.477937,3.268547,-0.310934,-4.674993,-0.959545,3.819150,3.341756,-2.693597,2.823260,-4.376111,-6.149576,4.536545,0.675134,7.151893,6.011102,6.078617,3.044109,-8.913989,-7.832820,-0.197725,1.105850,-7.168834,-0.740763,-6.169893,-8.704111,8.872927,-2.212220,-2.880126,5.545816,-1.504604,-3.168494,-2.998176,-7.087838,3.052494,4.347055,-1.622933,-5.615888,-8.917934,3.294681,-7.689669,7.063264,-0.264283,0.148083,7.738198,1.933564,2.830264,-4.211085,7.046090,-7.270007,4.142737,-7.633196,-7.966582,-7.644993,-9.974098,1.460437,-6.859701,-6.100668,0.413127,3.009874,-1.333006,-4.474922,-0.721143,2.520397,5.124250,1.069842,0.482864,-1.411873,-0.681912,-1.385712,-6.480284,6.315479,6.530808,-1.368755,9.004821,6.751163,-8.805605,1.281450,-8.476221,-2.193832,6.120982,1.422798,1.805550,-9.266855,-1.290728,-4.879383,5.819455,5.274744,5.646635,5.002158,-6.011403,-1.777313,-6.089751,7.861603,-8.246683,-5.940808,1.342280,8.517396,-5.482024,-9.295757,-5.211395,9.267215,4.885654,-2.017900,-5.098851,4.601427,2.594618,2.109587,-1.584627,-2.563777,-9.759598,-5.855820,-2.093545,7.207239,5.874917,-7.132803,-0.697324,7.440599,-6.758061,4.447044,1.921151,0.406428,-2.198037,-5.881918,-5.137639,-1.338062,-3.687246,-7.767255,-9.408993,5.284064,-4.151748,8.121077,5.376647,-1.905236,0.849602,8.319031,-5.904433,4.693713,5.295200,4.681298,-7.858430,4.471014,-6.053337,-3.694934,8.842677,8.376599,0.047710,-4.767083,5.665736,-8.758992,-5.279515,-0.845797,7.499410,-4.629995,6.549164,-8.247329,2.600930,-4.141945,5.988661,-2.931408,-7.236353,-7.602563,-0.004491,8.908069,5.611734,-3.929842,4.119994,8.014645,-4.458961,5.265713,7.387380,-7.403591,2.995319,2.735948,3.453283,2.078565,1.759406,9.378931,1.808081,0.695119,-5.394357,-1.356341,-9.551130,-9.966336,9.259824,1.138981,4.602493,8.762103,-9.707396,-1.271987,-6.226930,-3.959389,8.810839,-0.032359,-2.279476,-3.532195,5.014285,-5.898810,-5.133887,6.805348,-9.218778,-8.114997,-1.726856,0.123275,-9.184210,-6.059809,8.512119,-2.043383,-5.437028,3.293998,1.494828,7.764791,9.490119,-9.607098,9.060334,5.473174,-0.222308,0.800785,-2.112226,-7.952414,-4.970865,0.546779,0.351458,9.238630,-3.211786,-6.600718,-9.584999,0.892855,7.348847,4.962718,4.538690,-4.679333,-0.879772,-1.869580,-9.490627,-8.718047,8.659024,0.759003,3.589296,-7.780547,2.745800,6.809322,-9.511027,7.126605,2.628284,-1.348117,-6.728559,-7.987699,9.016661,4.924271,3.483276,-9.632978,7.209716,1.034398,-9.626488,4.945295,-9.300189,7.274896,5.839445,-2.831697,6.754660,7.727273,-7.808136,5.857415,-2.174701,2.493077,-9.096056,-0.822484,5.158772,-0.080438,6.524230,-9.597869,6.885887,-9.838435,-8.805857,4.964930,-5.043336,9.628949,-6.677553,-3.062912,2.477018,3.480953,9.018285,-2.147942,9.900880,9.883656,-8.911710,2.145115,4.031337,-7.503049,-0.084183,-2.083094,-8.391610,2.769847,-9.433965,7.884078,-2.721060,6.712612,-1.055673,-9.365397,-2.090203,-0.922530,0.640600,-8.942987,6.155819,8.190467,-0.400371,-5.903603,7.439238,-3.356462,6.095022,-4.474207,-7.316021,-8.349895,8.940133,-3.172445,-3.302514,-3.535658,-3.010104,-8.242181,7.913484,-9.554758,5.165738,-6.064785,-5.711294,-3.010365,-8.427657,5.591007,-3.779119,0.651298,8.758452,-5.169236,-4.328745,4.194801,9.625930,-2.808282,8.509410,4.740230,-8.207034,-6.133940,-6.065192,-3.955252,8.215990,6.387467,7.984905,0.436345,-7.826621,-8.831721,-3.272440,-3.614366,-5.156031,-9.230777,5.497492,-2.933712,4.836824,-3.076935,-5.335261,-6.785828,0.217738,5.114869,-0.829795,6.425129,-6.471206,3.073381,0.803091,9.256464,-8.900795,-2.092495,5.954387,3.008530,2.405128,-1.785886,8.476131,7.504478,-9.120180,5.259630,6.195800,4.774461,5.881668,-7.370391,-5.045395,-1.520318,7.422266,-1.201613,1.846922,9.901005,-2.900307,-0.032695,-0.711363,-8.507350,5.207777,0.616880,-7.422012,-9.307823,8.210205,-0.137402,-7.060648,-9.495102,7.052993,-7.671181,1.756205,4.479744,2.448360,3.014234,1.122700,-4.045313,4.924847,7.515330,1.899330,5.514083,-0.311590,-7.161059,-1.778119,-3.921091,-1.426700,8.164162,-8.029661,3.629977,-3.464041,2.435076,-5.096678,-2.735149,2.196629,4.131167,-4.095859,5.671891,-5.103247,2.752406,8.727981,4.696039,4.285698,0.382657,6.496528,9.432512,3.259521,-5.884500,0.900869,3.952641,-2.989316,7.140789,-1.721233,-8.419992,-2.393548,9.720723,1.759450,4.495482,3.928430,9.204686,2.329333,5.579992,7.181656,-4.378287,-1.703083,-7.441676,-3.450412,3.127274,-4.640613,-3.112814,-2.076546,-4.078771,-1.693587,-4.683948,-8.506203,-2.784357,-2.370780,-7.965071,6.042750,-7.735559,1.685791,3.776092,-7.178864,-5.372877,-1.809762,-0.498827,-8.441942,-0.390116,-3.873150,5.249187,-1.208386,3.021780,6.449024,0.311817,-6.977530,-2.160294,-1.574502,-7.046684,1.278143,8.446836,6.579763,-0.369852,3.203732,-8.926882,5.520787,-6.178404,8.207964,-8.220312,-7.117571,-3.092938,-2.772124,-5.121932,-5.681638,3.119580,5.199220,9.123385,-2.562003,-6.004044,-7.011719,-8.447719,-1.535893,-0.569391,-6.649268,-4.906899,-2.451392,7.457649,-5.099027,3.370355,-1.131171,-8.357546,4.784469,-1.142018,6.161459,9.762450,5.689783,7.391349,2.962384,-5.701607,-6.910377,-4.794258,6.401331,8.621757,3.102063,-3.095167,-0.778887,1.400889,-7.952478,6.512958,-7.275277,1.579923,-7.958718,-3.243684,-6.319006,8.243780,1.620818,4.398900,-2.905098,-7.630809,1.131786,6.867805,8.003163,-6.869606,1.031725,0.777246,-6.067902,4.765872,0.573849,-3.520424,-0.825545,0.323958,9.105939,-4.334302,0.608836,8.432890,9.478349,-9.324390,0.903098,-7.713701,3.140754,1.729024,7.524856,-6.730167,-6.955356,-3.941499,7.542558,-3.451310,6.630882,-7.808850,-9.525453,9.077632,-7.398629,-1.492722,-5.438818,-3.771051,8.818322,-9.390906,0.006021,4.530774,8.414196,-5.025912,1.611876,-9.595849,-6.684553,-6.167173,-8.671406,-1.515666,1.681843,7.654441,-6.784957,3.825738,1.947896,-2.671461,1.411951,-8.108675,7.635558,9.399052,2.118666,2.630582,-7.543558,-2.273944,-3.622539,9.933131,-8.354935,4.070574,3.565870,-2.476856,-6.018192,4.218928,-1.468035,7.427531,-5.207899,8.628731,-3.595980,2.423621,-9.207405,8.685177,8.720206,-7.080684,2.750610,-4.647816,8.597000,0.524658,1.205349,6.396033,-4.403502,1.818084,5.774947,1.192950,-2.838904,-8.182449,-8.870105,2.101206,-4.789623,5.170318,5.223284,-6.438440,-6.576770,1.609148,-4.312130,-7.768470,3.845368,-7.935464,-8.078391,-9.622822,-9.314022,0.294879,-1.270172,-2.203401,-4.131182,8.883144,2.754230,-6.195727,4.679690,6.856588,-2.133999,8.956514,-6.301839,-3.791510,8.876900,3.476340,4.589098,-1.195271,2.687053,6.250443,4.884697,7.998243,-8.228336,-3.424445,9.503876,-8.520910,9.921146,5.688624,8.084216,-1.243101,-2.592517,-6.554351,-7.353402,-4.486758,-2.121535,-4.700130,-1.444377,-7.283131,5.274274,-6.995360,8.515129,1.067620,-4.522416,-1.192829,-9.656807,-2.636368,-6.801940,8.937067,-7.099907,-0.157217,8.355146,-2.469388,-0.669775,-3.894391,3.775773,1.126140,2.411901,-1.364927,2.103730,6.088377,3.318760,3.889041,4.403229,0.059325,-8.493646,-1.429682,-7.101145,1.096489,1.446130,-6.245238,-3.458456,8.545676,-8.151247,-7.165609,-7.745628,-9.266832,6.424412,9.578281,-0.639044,-1.690309,-2.870386,-7.326673,3.133208,-4.670475,7.354389,-9.606706,-5.676479,-1.084610,6.797388,-7.654875,-5.948589,5.795221,-0.630813,-4.451714,5.661463,1.144396,0.109105,-2.806975,9.685898,-2.419299,-8.808136,8.247861], dtype = "float64")#candidate|4585|(2340,)|const|float64
call_4584 = relay.TupleGetItem(func_1885_call(relay.reshape(const_4585.astype('float64'), [13, 12, 15])), 0)
call_4586 = relay.TupleGetItem(func_1888_call(relay.reshape(const_4585.astype('float64'), [13, 12, 15])), 0)
output = relay.Tuple([call_4556,call_4584,const_4585,])
output2 = relay.Tuple([call_4557,call_4586,const_4585,])
func_4589 = relay.Function([], output)
mod['func_4589'] = func_4589
mod = relay.transform.InferType()(mod)
output = func_4589()
func_4590 = relay.Function([], output)
mutated_mod['func_4590'] = func_4590
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4607 = relay.const(-1, dtype = "int32")#candidate|4607|()|const|int32
var_4608 = relay.var("var_4608", dtype = "int32", shape = (3, 3, 11))#candidate|4608|(3, 3, 11)|var|int32
bop_4609 = relay.equal(const_4607.astype('bool'), var_4608.astype('bool')) # shape=(3, 3, 11)
uop_4619 = relay.log(bop_4609.astype('float32')) # shape=(3, 3, 11)
uop_4624 = relay.exp(uop_4619.astype('float64')) # shape=(3, 3, 11)
func_3244_call = mod.get_global_var('func_3244')
func_3245_call = mutated_mod.get_global_var('func_3245')
call_4642 = relay.TupleGetItem(func_3244_call(), 0)
call_4643 = relay.TupleGetItem(func_3245_call(), 0)
func_3596_call = mod.get_global_var('func_3596')
func_3598_call = mutated_mod.get_global_var('func_3598')
call_4648 = relay.TupleGetItem(func_3596_call(), 0)
call_4649 = relay.TupleGetItem(func_3598_call(), 0)
func_2107_call = mod.get_global_var('func_2107')
func_2109_call = mutated_mod.get_global_var('func_2109')
call_4655 = relay.TupleGetItem(func_2107_call(), 0)
call_4656 = relay.TupleGetItem(func_2109_call(), 0)
output = relay.Tuple([uop_4624,call_4642,call_4648,call_4655,])
output2 = relay.Tuple([uop_4624,call_4643,call_4649,call_4656,])
func_4661 = relay.Function([var_4608,], output)
mod['func_4661'] = func_4661
mod = relay.transform.InferType()(mod)
mutated_mod['func_4661'] = func_4661
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4662 = relay.var("var_4662", dtype = "int32", shape = (3, 3, 11))#candidate|4662|(3, 3, 11)|var|int32
func_4661_call = mutated_mod.get_global_var('func_4661')
call_4663 = func_4661_call(var_4662)
output = call_4663
func_4664 = relay.Function([var_4662], output)
mutated_mod['func_4664'] = func_4664
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3181_call = mod.get_global_var('func_3181')
func_3183_call = mutated_mod.get_global_var('func_3183')
call_4711 = func_3181_call()
call_4712 = func_3181_call()
var_4720 = relay.var("var_4720", dtype = "float64", shape = (12, 2, 12))#candidate|4720|(12, 2, 12)|var|float64
bop_4721 = relay.floor_divide(call_4711.astype('float64'), relay.reshape(var_4720.astype('float64'), relay.shape_of(call_4711))) # shape=(12, 2, 12)
bop_4724 = relay.floor_divide(call_4712.astype('float64'), relay.reshape(var_4720.astype('float64'), relay.shape_of(call_4712))) # shape=(12, 2, 12)
func_4031_call = mod.get_global_var('func_4031')
func_4032_call = mutated_mod.get_global_var('func_4032')
call_4728 = func_4031_call()
call_4729 = func_4031_call()
func_3244_call = mod.get_global_var('func_3244')
func_3245_call = mutated_mod.get_global_var('func_3245')
call_4739 = relay.TupleGetItem(func_3244_call(), 0)
call_4740 = relay.TupleGetItem(func_3245_call(), 0)
bop_4744 = relay.greater_equal(call_4711.astype('bool'), relay.reshape(var_4720.astype('bool'), relay.shape_of(call_4711))) # shape=(12, 2, 12)
bop_4747 = relay.greater_equal(call_4712.astype('bool'), relay.reshape(var_4720.astype('bool'), relay.shape_of(call_4712))) # shape=(12, 2, 12)
output = relay.Tuple([bop_4721,call_4728,call_4739,bop_4744,])
output2 = relay.Tuple([bop_4724,call_4729,call_4740,bop_4747,])
func_4750 = relay.Function([var_4720,], output)
mod['func_4750'] = func_4750
mod = relay.transform.InferType()(mod)
var_4751 = relay.var("var_4751", dtype = "float64", shape = (12, 2, 12))#candidate|4751|(12, 2, 12)|var|float64
output = func_4750(var_4751)
func_4752 = relay.Function([var_4751], output)
mutated_mod['func_4752'] = func_4752
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4352_call = mod.get_global_var('func_4352')
func_4353_call = mutated_mod.get_global_var('func_4353')
call_4810 = func_4352_call()
call_4811 = func_4352_call()
func_4473_call = mod.get_global_var('func_4473')
func_4474_call = mutated_mod.get_global_var('func_4474')
call_4813 = func_4473_call()
call_4814 = func_4473_call()
output = relay.Tuple([call_4810,call_4813,])
output2 = relay.Tuple([call_4811,call_4814,])
func_4816 = relay.Function([], output)
mod['func_4816'] = func_4816
mod = relay.transform.InferType()(mod)
output = func_4816()
func_4817 = relay.Function([], output)
mutated_mod['func_4817'] = func_4817
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4473_call = mod.get_global_var('func_4473')
func_4474_call = mutated_mod.get_global_var('func_4474')
call_4824 = func_4473_call()
call_4825 = func_4473_call()
output = call_4824
output2 = call_4825
func_4852 = relay.Function([], output)
mod['func_4852'] = func_4852
mod = relay.transform.InferType()(mod)
output = func_4852()
func_4853 = relay.Function([], output)
mutated_mod['func_4853'] = func_4853
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3181_call = mod.get_global_var('func_3181')
func_3183_call = mutated_mod.get_global_var('func_3183')
call_4881 = func_3181_call()
call_4882 = func_3181_call()
uop_4892 = relay.atanh(call_4881.astype('float64')) # shape=(12, 2, 12)
uop_4894 = relay.atanh(call_4882.astype('float64')) # shape=(12, 2, 12)
output = uop_4892
output2 = uop_4894
func_4903 = relay.Function([], output)
mod['func_4903'] = func_4903
mod = relay.transform.InferType()(mod)
mutated_mod['func_4903'] = func_4903
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4903_call = mutated_mod.get_global_var('func_4903')
call_4904 = func_4903_call()
output = call_4904
func_4905 = relay.Function([], output)
mutated_mod['func_4905'] = func_4905
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4914 = relay.var("var_4914", dtype = "uint64", shape = (8, 8, 5))#candidate|4914|(8, 8, 5)|var|uint64
var_4915 = relay.var("var_4915", dtype = "uint64", shape = (8, 8, 5))#candidate|4915|(8, 8, 5)|var|uint64
bop_4916 = relay.less(var_4914.astype('bool'), relay.reshape(var_4915.astype('bool'), relay.shape_of(var_4914))) # shape=(8, 8, 5)
func_1760_call = mod.get_global_var('func_1760')
func_1761_call = mutated_mod.get_global_var('func_1761')
call_4928 = relay.TupleGetItem(func_1760_call(), 1)
call_4929 = relay.TupleGetItem(func_1761_call(), 1)
func_403_call = mod.get_global_var('func_403')
func_405_call = mutated_mod.get_global_var('func_405')
call_4930 = relay.TupleGetItem(func_403_call(), 2)
call_4931 = relay.TupleGetItem(func_405_call(), 2)
uop_4936 = relay.sin(var_4915.astype('float32')) # shape=(8, 8, 5)
uop_4953 = relay.sinh(call_4928.astype('float32')) # shape=(11, 4, 2)
uop_4955 = relay.sinh(call_4929.astype('float32')) # shape=(11, 4, 2)
output = relay.Tuple([bop_4916,call_4930,uop_4936,uop_4953,])
output2 = relay.Tuple([bop_4916,call_4931,uop_4936,uop_4955,])
func_4972 = relay.Function([var_4914,var_4915,], output)
mod['func_4972'] = func_4972
mod = relay.transform.InferType()(mod)
mutated_mod['func_4972'] = func_4972
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4972_call = mutated_mod.get_global_var('func_4972')
var_4974 = relay.var("var_4974", dtype = "uint64", shape = (8, 8, 5))#candidate|4974|(8, 8, 5)|var|uint64
var_4975 = relay.var("var_4975", dtype = "uint64", shape = (8, 8, 5))#candidate|4975|(8, 8, 5)|var|uint64
call_4973 = func_4972_call(var_4974,var_4975,)
output = call_4973
func_4976 = relay.Function([var_4974,var_4975,], output)
mutated_mod['func_4976'] = func_4976
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1006_call = mod.get_global_var('func_1006')
func_1008_call = mutated_mod.get_global_var('func_1008')
call_4986 = func_1006_call()
call_4987 = func_1006_call()
output = relay.Tuple([call_4986,])
output2 = relay.Tuple([call_4987,])
func_4992 = relay.Function([], output)
mod['func_4992'] = func_4992
mod = relay.transform.InferType()(mod)
mutated_mod['func_4992'] = func_4992
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4992_call = mutated_mod.get_global_var('func_4992')
call_4993 = func_4992_call()
output = call_4993
func_4994 = relay.Function([], output)
mutated_mod['func_4994'] = func_4994
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2986_call = mod.get_global_var('func_2986')
func_2987_call = mutated_mod.get_global_var('func_2987')
call_5014 = relay.TupleGetItem(func_2986_call(), 0)
call_5015 = relay.TupleGetItem(func_2987_call(), 0)
output = call_5014
output2 = call_5015
func_5016 = relay.Function([], output)
mod['func_5016'] = func_5016
mod = relay.transform.InferType()(mod)
mutated_mod['func_5016'] = func_5016
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5016_call = mutated_mod.get_global_var('func_5016')
call_5017 = func_5016_call()
output = call_5017
func_5018 = relay.Function([], output)
mutated_mod['func_5018'] = func_5018
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1963_call = mod.get_global_var('func_1963')
func_1965_call = mutated_mod.get_global_var('func_1965')
call_5023 = func_1963_call()
call_5024 = func_1963_call()
func_2727_call = mod.get_global_var('func_2727')
func_2729_call = mutated_mod.get_global_var('func_2729')
call_5036 = relay.TupleGetItem(func_2727_call(), 0)
call_5037 = relay.TupleGetItem(func_2729_call(), 0)
func_4903_call = mod.get_global_var('func_4903')
func_4905_call = mutated_mod.get_global_var('func_4905')
call_5057 = func_4903_call()
call_5058 = func_4903_call()
func_3906_call = mod.get_global_var('func_3906')
func_3909_call = mutated_mod.get_global_var('func_3909')
call_5070 = relay.TupleGetItem(func_3906_call(relay.reshape(call_5057.astype('float64'), [12, 2, 12])), 9)
call_5071 = relay.TupleGetItem(func_3909_call(relay.reshape(call_5057.astype('float64'), [12, 2, 12])), 9)
func_4992_call = mod.get_global_var('func_4992')
func_4994_call = mutated_mod.get_global_var('func_4994')
call_5091 = relay.TupleGetItem(func_4992_call(), 0)
call_5092 = relay.TupleGetItem(func_4994_call(), 0)
uop_5099 = relay.atan(call_5070.astype('float32')) # shape=(12, 2, 12)
uop_5101 = relay.atan(call_5071.astype('float32')) # shape=(12, 2, 12)
func_1999_call = mod.get_global_var('func_1999')
func_2003_call = mutated_mod.get_global_var('func_2003')
const_5113 = relay.const([8,-2,2,-2,4,5,-9,8,3,10,7,4,8,1,9,-1,-9,-7,10,4,-7,3,7,3,9,4,7,-1,7,-8,-7,-5,-9,-9,-4,-5,2,-6,9,9,-5,5,2,7,-9,-6,-2,-3,5,-4,-5,-9,6,5,7,5,-8,-3,10,8,7,-6,-6,1,-10,-10,3,1,-7,7,2,-5,4,-1,-10,-4,2,5,8,1,3,5,3,5,4,-5,4,9,9,-2,8,5,3,-9,-8,-9,2,-6,9,6,-5,-4,-2,-7,-2,10,-3,1,7,-7,10,5,-1,8,6,7,-6,10,-3,-9,-6,-8,-5,6,-1,-8,-2,-5,-8,7,9,-5,5,1,4,7,-10,-2,-4,-9,-3,5,2,10,-5,3,-1,6,-6,5,8,2,7,-5,4,5,10,3,-4,-1,-2,-10,3,-8,-5,-10,7,1,6,6,-1,-7,4,5,5,-4,2,-9,-2,-5,3,1,5,-5,-1,3,1,3,10,-1,3,3,1,-2,10,-3,-1,3,10,9,9,1,1,-5,-1,-7,4,-2,3,-10,-9,6,-9,8,-8,-1,8,-7,8,-2,-10,3,-1,1,-9,7,-5,-10,5,-6,-4,8,-10,2,6,-5,7,10,-5,3,1,-3,-4,-1,-2,2,5,-9,4,1,9,6,-7,3,-7,-7,-6,-5,7,1,-4,-5,-2,1,10,-8,9,-5,2,10,4,-8,-10,-3,10,6,7,-10,-10,9,-5,8,-2,-2,-1,-6,10,5,10,8,-10,-3,-10,7,3,7,-2,-4,8,-3,-10,1,-6,1,2,3,8,10,8,-5,5,3,-8,6,-4,-2,9,-4,2,8,-9,-8,8,2,-7,-10,-8,2,9,2,4,-6,1,-7,-9,5,-7,-2,2,2,10,2,5,6,9,-7,-5,-7,5,7,8,-2,6,-1,-8,6,6,-10,1,5,5,2,-5,4,2,5,-5,4,-1,-10,9,-8,5,6,-5,5,-10,-10,7,-6,7,-8,8,-4,6,-9,9,7,-5,-9,3,10,10,-10,-6,-5,-10,7,-2,9,6,-4,-5,-10,-6,-1,-2,2,-3,-8,-3,-3,-3,-2,-5,6,9,8,-1,-4,-7,3,10,-1,2,-3,2,9,-10,2,-6,-5,-6,-8,-3,-3,-9,-10,-4,3,2,-2,-4,10,3,-7,2,-3,9,5,-4,-2,5,-6,-3,-6,5,-9,-8,-4,3,-10,-7,3,-4,6,9,5,-10,-4,7,7,-5,-4,-7,3,-10,-3,6,1,-6,-10,-4,8,3,6,1,4,2,-8,6,9,4,3,9,2,10,10,-6,-6,10,8,7,-7,2,8,-7,-2,-10,-3,-8,4,-8,1,-3,-2,1,4,4,7,-9,3,-3,-6,-1,-1,7,-8,2,-6,8,-9,10,7,7,1,8,-1,-3,3,10,-3,-3,-10,10,-1,-6,5,6,-1,5,-10,-7,3,9,-4,-2,-4,7,10,-1,-6,-1,-4,-5,1,-6,3,1,-5,-2,9,-5,-8,8,2,7,8,-10,-7,7,5,1,9,3,-6,3,8,-10,-2,4,-10,3,1,4,10,-9,7,4,4,1,4,-5,2,9,-6,10,-6,-5,8,-6,-1,5,5,-5,9,-8,2,7,9,-9,-1,-10,-2,3,-6,-10,1,6,-7,4,-9,-10,6,-4,-5,1,-2,2,-7,3,1,-10,-9,10,-7,1,-5,-6,8,7,5,-9,8,-10,-6,8,-8,-2,7,2,-6,-2,6,3,10,-9,-9,-1,-2,2,3], dtype = "int64")#candidate|5113|(672,)|const|int64
call_5112 = func_1999_call(relay.reshape(const_5113.astype('int64'), [12, 7, 8]), relay.reshape(const_5113.astype('int64'), [12, 7, 8]), )
call_5114 = func_1999_call(relay.reshape(const_5113.astype('int64'), [12, 7, 8]), relay.reshape(const_5113.astype('int64'), [12, 7, 8]), )
func_4816_call = mod.get_global_var('func_4816')
func_4817_call = mutated_mod.get_global_var('func_4817')
call_5119 = relay.TupleGetItem(func_4816_call(), 1)
call_5120 = relay.TupleGetItem(func_4817_call(), 1)
func_4516_call = mod.get_global_var('func_4516')
func_4517_call = mutated_mod.get_global_var('func_4517')
call_5132 = relay.TupleGetItem(func_4516_call(), 0)
call_5133 = relay.TupleGetItem(func_4517_call(), 0)
uop_5143 = relay.acos(uop_5099.astype('float64')) # shape=(12, 2, 12)
uop_5145 = relay.acos(uop_5101.astype('float64')) # shape=(12, 2, 12)
func_2155_call = mod.get_global_var('func_2155')
func_2157_call = mutated_mod.get_global_var('func_2157')
var_5162 = relay.var("var_5162", dtype = "float32", shape = (75, 1))#candidate|5162|(75, 1)|var|float32
call_5161 = relay.TupleGetItem(func_2155_call(relay.reshape(var_5162.astype('float32'), [15, 5])), 0)
call_5163 = relay.TupleGetItem(func_2157_call(relay.reshape(var_5162.astype('float32'), [15, 5])), 0)
func_3358_call = mod.get_global_var('func_3358')
func_3360_call = mutated_mod.get_global_var('func_3360')
call_5168 = relay.TupleGetItem(func_3358_call(), 1)
call_5169 = relay.TupleGetItem(func_3360_call(), 1)
func_4352_call = mod.get_global_var('func_4352')
func_4353_call = mutated_mod.get_global_var('func_4353')
call_5175 = func_4352_call()
call_5176 = func_4352_call()
func_2107_call = mod.get_global_var('func_2107')
func_2109_call = mutated_mod.get_global_var('func_2109')
call_5191 = relay.TupleGetItem(func_2107_call(), 1)
call_5192 = relay.TupleGetItem(func_2109_call(), 1)
output = relay.Tuple([call_5023,call_5036,call_5057,call_5091,call_5112,const_5113,call_5119,call_5132,uop_5143,call_5161,var_5162,call_5168,call_5175,call_5191,])
output2 = relay.Tuple([call_5024,call_5037,call_5058,call_5092,call_5114,const_5113,call_5120,call_5133,uop_5145,call_5163,var_5162,call_5169,call_5176,call_5192,])
func_5193 = relay.Function([var_5162,], output)
mod['func_5193'] = func_5193
mod = relay.transform.InferType()(mod)
var_5194 = relay.var("var_5194", dtype = "float32", shape = (75, 1))#candidate|5194|(75, 1)|var|float32
output = func_5193(var_5194)
func_5195 = relay.Function([var_5194], output)
mutated_mod['func_5195'] = func_5195
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5016_call = mod.get_global_var('func_5016')
func_5018_call = mutated_mod.get_global_var('func_5018')
call_5212 = func_5016_call()
call_5213 = func_5016_call()
output = relay.Tuple([call_5212,])
output2 = relay.Tuple([call_5213,])
func_5225 = relay.Function([], output)
mod['func_5225'] = func_5225
mod = relay.transform.InferType()(mod)
output = func_5225()
func_5226 = relay.Function([], output)
mutated_mod['func_5226'] = func_5226
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1929_call = mod.get_global_var('func_1929')
func_1931_call = mutated_mod.get_global_var('func_1931')
call_5271 = relay.TupleGetItem(func_1929_call(), 1)
call_5272 = relay.TupleGetItem(func_1931_call(), 1)
output = call_5271
output2 = call_5272
func_5276 = relay.Function([], output)
mod['func_5276'] = func_5276
mod = relay.transform.InferType()(mod)
mutated_mod['func_5276'] = func_5276
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5276_call = mutated_mod.get_global_var('func_5276')
call_5277 = func_5276_call()
output = call_5277
func_5278 = relay.Function([], output)
mutated_mod['func_5278'] = func_5278
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1006_call = mod.get_global_var('func_1006')
func_1008_call = mutated_mod.get_global_var('func_1008')
call_5284 = func_1006_call()
call_5285 = func_1006_call()
func_4275_call = mod.get_global_var('func_4275')
func_4278_call = mutated_mod.get_global_var('func_4278')
const_5288 = relay.const([2.637474,0.445764,7.177454,8.266707,-0.070544,-8.980778,7.432102,3.847067,6.558876,-5.901461,-4.215810,-8.494910,3.798725,8.205329,3.445385,9.989686,8.829561,4.843185,1.685348,-4.730209,5.833927,-6.784277,2.960288,9.609066,7.503301,5.564894,-5.461412,7.688417,3.384982,-6.697624,4.204709,4.384583,6.779801,-9.076397,-8.680411,-7.235530,7.283673,-8.221644,-9.902886,9.068175,1.953184,7.657821,-1.944960,6.979261,1.099621,-6.903192,4.041688,-1.583475,-0.596153,2.657094,7.275879,8.092230,8.940132,1.675327,1.091233,8.040967,3.892453,-0.798070,6.304491,-5.253318,7.141521,3.181872,-4.212850,6.355886,-5.786867,1.357726,-0.991276,-6.608612,3.876715,0.149377,-6.901024,0.648428,-3.939515,-9.962799,-7.789031,-3.057481,7.359013,-9.366274,3.349419,9.669226,7.340875,-8.925669,8.371154,4.916257,-5.489013,9.399199,3.263244,5.073438,-9.039817,7.476573,-0.207945,-4.356883,3.068961,0.201307,1.638861,3.554935,-1.155362,-9.119767,-6.326061,-6.109189,9.787758,-1.407276,-4.129892,-0.666380,0.786826,9.977224,3.912372,6.744171,2.208862,-2.961755,9.978365,4.701438,2.728209,7.339385,8.630925,-8.644268,7.304540,2.635017,-9.426085,-0.815282,3.133833,4.901198,-1.916115,1.791793,-7.712864,-6.717894,9.029023,0.051656,3.088499,1.864019,-0.805900,8.783876,-1.747916,7.678333,-0.762081,-4.553502,-1.487545,7.381170,-8.695203,-4.419177,-3.692592,1.811995,-7.894193,-3.629564,4.373823,-5.508804,1.901970,-4.201801,-7.880812,5.941266,4.704862,-1.828626,0.672221,-3.076808,-4.497492,-0.178938,9.664861,8.529232,-1.488309,-3.771226,0.322573,9.164070,-2.327117,-1.937901,-8.582690,-9.356891,7.213766,1.939231,-4.995907,-7.304336,-6.369262,2.175888,-2.668752,3.733422,-7.289795,5.511400,-9.766277,-4.031394,-5.312369,7.596026,-2.577998,-2.285483,-6.618552,0.016987,-1.439005,7.357698,-5.060970,-0.361560,0.961296,-1.735136,9.924117,1.630723,-6.693911,8.202593,-8.755775,3.230305,-3.994557,-5.689542,8.303475,6.308591,-2.428252,-8.816711,2.616230,9.115578,-9.746799,-0.027866,1.035937,2.457651,1.083074,-3.313461,1.260465,4.303282,-7.386160,-0.955893,2.715955,7.708827,3.104580,-1.309320,-9.254895,0.983689,2.870642,5.383088,-5.421287,7.424698,6.877611,0.548002,3.272992,-2.322044,0.563975,-6.162249,-3.474055,-5.091088,6.672905,-8.211211,-2.320510,8.438899,3.476957,0.437244,5.813432,0.422844,-0.709374,-6.284539,8.103825,6.561534,2.366614,0.180304,9.312178,1.238330,9.268971,7.046711,-9.944481,4.616764,8.700465,5.073601,1.109866,9.019794,8.603507,-0.286497,-5.197384,3.661356,4.515555,6.043468,-2.120777,5.704058,-0.173760,-0.677586,0.281789,-1.507964,-9.214602,-2.371730,-5.706523,2.845617,2.950669,6.449922,-8.058288,4.109931,7.355136,-1.139062,-6.742240,1.034908,-9.655601,9.123947,-4.771026,-0.668051,4.069568,-7.452080,-4.456099,8.024468,1.414256,7.033715,-1.001445,2.358904,1.494926,0.421499,-2.417402,-5.243838,-0.629134,-7.332985,0.874938,8.447433,1.434566,5.021293,-6.082947,1.666871,8.886120,9.460683,-3.265914,4.796935,-6.538913,5.796154,-6.277365,-9.201377,1.215105,9.543047,0.975904,5.786127,-5.693519,1.147435,4.591005,0.809046,7.544002,-7.066948,7.186162,-1.837201,8.076714,-5.362970,7.745324,-3.731936,-3.355830,-2.854067,5.529443,-4.869047,-8.092728,-5.328152,9.595979,-3.761567,-9.348556,-7.850055,-1.187535,7.290403,-1.575425,8.627411,-5.792409,-0.510973,1.239896,8.662096,-0.499315,4.273115,4.233390,-5.268938,3.331458,7.896298,-0.791249,4.426821,-1.763562,-4.288335,1.490889,4.362880,7.318412,-2.412703,-7.748185,5.268437,6.550847,5.132495,-5.616592,2.925002,-1.251343,4.847400,-6.497471,3.356497,-9.528628,8.844842,-6.720427,2.810266,-8.928812,-5.220349,4.533535,2.536121,-8.632719,6.633297,8.221061,-3.426396,-3.798261,-8.034275,8.642804,9.959142,1.348634,9.483292,0.842780,4.228443,-1.682854,-8.284769,-8.235971,-7.034255,-9.708077,9.692395,0.721972,7.573297,-5.618622,-0.379000,-1.829354,4.403654,2.233836,3.263083,9.766552,-0.336821,-5.253886,-0.275403,9.391901,-1.292676,-8.257810,9.030130,7.387870,8.576821,-6.416719,6.629829,-0.390863,-9.803546,2.889118,-6.459563,-6.212922,-2.150858,-7.339835,6.028573,-3.293094,6.129718,-2.488169,-3.723985,-8.410275,2.763585,8.513224,3.733690,2.432118,6.561264,9.025004,2.995709,7.436754,-0.509002,-2.719007,4.617475,7.551552,-9.575892,5.107279,-0.708193,-4.246726,-8.920516,-8.239273,5.768249,1.600580,9.584570,9.540370,-2.127586,-8.330120,-8.024902,1.363911,7.703154,-5.092677,-7.818449,-1.196285,4.181170,-3.434205,4.955368,5.024140,-5.112751,0.702947,5.278055,-7.547994,6.102157,3.558652,-4.841794,8.417544,4.212995,8.875960,4.257258,-9.551288,-5.644906,-9.890603,-1.171992,8.827092,-9.046407,-3.174398,6.752255,-7.406228,4.082151,-2.128102,-5.125988,-4.480078,3.965739,5.433244,7.709943,-9.843194,-1.914208,9.757636,-9.966925,2.558345,-6.458004,1.846913,-2.382760,-9.631495,4.342992,0.459120,8.001594,3.028266,4.460324,3.350424,7.071444,2.761012,2.507217,-9.030311,6.719238,-9.692234,6.102025,4.506530,5.099880,1.285807,-9.340923,-5.360059,-9.348869,-9.866485,-1.149438,0.722543,3.255982,7.624490,9.969565,0.146267,2.393000,-6.650196,1.365480,1.616106,-0.731362,9.200831,9.969084,-4.368532,1.450661,-9.495555,-1.718900,1.689953,-4.925828,-9.285159,-8.390124,-5.665712,-4.913752,-4.132066,-3.201051,-1.673148,0.019354,4.716163,-5.443090,-6.394379,-3.132083,8.959495,-8.978628,2.237691,-1.493345,5.500637,1.099462,-7.240650,-6.405944,0.798124,-3.535172,2.739371,6.661827,1.121299,-7.130633,0.473479,-0.407803,-2.409965,-1.382015,5.008648,6.759901,6.833245,-6.359537,-9.331220,2.926371,8.065356,-7.071957,2.496154,0.108680,1.669524,-0.956226,-1.080844,6.939884,-2.036600,-7.892845,-2.720271,-9.621165,-2.160944,-3.422795,8.999210,-6.483131,0.050033,-0.104726,-4.613894,8.115683,3.624910,4.431962,-3.091585,-4.561995,-6.598195,-6.406643,5.878394,-0.543247,7.638080,-0.511699,-7.667284,7.076643,5.989683,-8.681192,3.432811,4.434968,-4.888915,8.754164,-9.485715,3.488624,-8.834868,5.636536,-0.501376,-8.783217,-2.193548,-3.472724,4.972725,7.201582,4.015627,7.898913,2.247701,-5.901692,0.583204,0.270077,3.712854,-3.071072,-3.220163,4.543390,0.546683,3.913340,0.565371,9.824259,7.010170,4.625749,-9.934581,-0.264209,-9.838334,7.544380,-4.254898,8.673173,3.045499,7.346707,2.494474,-1.704996,-4.630256,7.041706,-2.580639,3.534005,1.469483,-0.498278,6.683291,2.135248,4.852827,2.833681,8.626471,-6.271879,-0.641480,6.807615,-1.608193,-1.951995,1.233780,-3.912030,-8.699211,3.723664,5.422259,-2.855834,-4.467925,-4.992846,-6.734425,5.403364,-6.520006,9.640211,-2.930645,-2.510150,-0.083214,3.752810,-4.235538,4.358519,9.215698,-7.586013,0.269178,4.930592,8.025789,0.848865,2.883457,3.146059,-6.454383,-8.727098,6.877021,-8.119726,-0.829730,7.195373,3.816642,6.849803,-1.753630,9.823724,-5.803682,5.867472,-7.487605,-7.518673,-8.699997,5.194012,-4.205242,9.964843,1.565104,9.607909,2.659902,-6.974606,-2.009012,-0.932261,-4.878966,-0.338738,-3.386135,-5.755442,-7.232798,6.866453,-9.848701,-5.282467,-6.249085,1.735700,9.761358,2.454845,3.414623,1.671752,-6.599419,-5.021073,-4.737562,4.239969,5.725429,9.993153,-2.669759,-1.585576,-7.178140,4.649266,-7.472645,-3.818704,-5.760294,-9.710063,8.245646,5.260695,4.993985,-5.144536,-7.366884,9.029101,6.224539,3.802800,4.505328,4.613739,-6.447122,-2.324388,6.265082,-1.583059,6.532111,1.596641,9.505918,-0.294246,1.050036,-3.567115,-8.115148,1.101871,-8.450415,-7.603703,-8.475706,8.414238,-6.630291,6.611659,-8.921151,4.054194,-5.221121,2.300653,2.042829,1.693161,-6.104070,-0.043060,8.190379,7.829340,4.279487,4.719016,2.748130,-3.395869,-2.431330,5.459194,-8.456388,-9.112741,2.083037,-4.706729,7.791095,5.533914,3.876922,4.663676,6.924048,-2.094639,-4.886271,-2.056877,6.003119,2.857893,-8.340755,-3.457653,-8.801439,-0.080829,-8.522089,-6.466788,-5.544043,-1.102893,-1.780770,-4.046076,-8.616847,-6.632525,-5.266106,-2.933247,1.999034,8.297493,-5.985428,-4.190778,0.172544,-9.883685,0.256383,5.465990,3.509299,7.927304,8.281746,0.798790,6.695505,-5.088234,5.644610,5.061357,6.741424,-7.287960,-1.235803,-6.438845,6.764445,-0.059791,2.393231,-0.237541,5.915943,-0.343199,4.816819,-7.391142,6.445653,-2.177131,7.694580,-2.206845,6.021350,-3.519734,4.799895,5.157348,8.513645,-4.002630,2.660152,0.887210,-1.760017,-1.516479,-2.028031,-7.019676,1.205540,-1.811011,-8.382831,9.199404,0.332885,-6.688360,-2.906048,-9.715577,5.444463,4.204653,7.548734,1.377777,-8.950918,-9.551862,-5.238184,6.023534,2.998331,-0.078113,-4.638017,1.071370,1.830600,-2.320622,8.549124,2.702201,0.859096,-5.326201,-6.437218,8.059306,6.144424,4.914346,-8.876273,5.211821,-3.562356,-1.845406,-4.460449,-6.832016,0.541142,2.503686,7.478943,9.921947,6.781964,-5.647980,1.233857,8.143932,5.842809,-8.329143,8.306284,5.199504,7.789685,-2.294709,-3.847755,9.550788,9.204416,-1.588242,2.286428,-0.631356,6.378457,-9.788782,-2.001905,4.836454,-8.469610,6.586510,-6.206858,1.830194,-2.848458,1.488507,8.331614,-1.018951,9.606731,4.984244,-1.091133,-3.569710,-5.777774,-0.741523,-7.085770,-9.694785,4.050902,-0.275312,3.834291,3.889538,7.266140,-6.381096,8.605782,2.504874,3.284377,-7.195330,-9.684657,-5.447357,4.981610,9.567634,-5.598996,8.736605,-2.584988,7.935447,8.806069,7.208185,7.810688,9.280595,7.788211,-3.592826,-1.924642,-0.615074,2.826706,2.106596,-3.255304,-3.530907,6.482737,-6.283373,9.660045,2.364194,2.559589,7.772300,-6.467237,8.682818,3.975679,-2.952596,-2.181452,3.570896,9.261561,5.248838,8.923346,0.284443,5.981130,-4.130028,1.105539,7.935141,7.041895,-3.004028,-5.238984,0.797513,0.961645,0.282964,-1.779445,1.054655,6.459998,5.562211,-3.398456,9.405430,2.828641,-3.891450,8.562243,7.384129,-6.359277,-9.431775,5.517920,-6.858220,-9.246835,4.982969,-2.206143,-9.724095,4.261921,3.866783,-8.218019,2.880995,-4.253257,5.288944,2.481237,-0.073097,-8.837393,-4.586008,-0.569469,-4.878806,-3.966546,-5.679049,-7.621920,0.267242,-4.495178,4.903233,2.348606,-9.574724,-3.101186,-5.617616,-4.493367,3.104630,6.645696,4.709056,-4.530723,-1.910222,7.364748,-4.833655,-6.542049,8.051910,-9.260143,1.011982,8.690037,0.787809,9.821666,3.562928,4.839867,-3.452369,9.254812,-8.391721,4.180981,-9.445574,7.946257,-9.101288,-9.080415,7.154989,-5.931166,0.214036,-3.528746,4.488799,-1.182433,-9.708292,3.477434,-4.258114,-3.183479,9.991405,-1.745003,-0.193169,-0.299104,2.113793,-3.919391,2.486431,9.712196,-8.519195,6.676666,-1.539115,-9.108356,1.162103,4.877501,-6.023124,0.670267,-4.966002,-7.440845,6.565211,1.669369,7.610027,9.979489,0.730623,9.130438,9.143003,3.852373,-9.903781,-0.523342,-8.546850,-7.051622,2.643429,-6.419765,8.628553,-6.162534,8.049453,6.486801,4.513954,4.356747,3.081210,-0.231172,4.987284,-5.146905,9.501553,-1.740412,2.471209,5.544589,-0.138616,-4.701610,-3.601761,-1.991512,-6.061788,-2.503262,0.280290,-8.038132,1.506278,1.423830,3.802935,-8.618894,-6.326399,-2.195229,2.795604,-6.317010,8.349762,4.385962,9.882889,3.609333,9.467308,0.841176,8.231070,-8.444601,-5.006790,0.254149,0.348665,-7.541454,-0.486177,6.064530,-5.729496,5.372551,-9.732345,8.985011,4.906897,-8.111895,5.316380,7.606226,3.064877,3.874011,1.690038,9.916255,-6.104775,-8.414377,-0.486593,6.565753,4.765270,-7.330171,2.181822,1.152546,-9.589562,-1.101700,1.291307,-9.825449,8.825615,-4.202578,6.313649,1.418058,2.124189,-8.000484,-1.612461,3.417809,9.792196,7.863140,0.457972,7.449122,-9.559222,7.694059,3.102942,8.358935,2.165962,4.658177,9.980859,8.053437,-0.718868,7.368480,1.812913,-8.564874,-9.027921,0.998480,-3.124931,-6.438564,-6.654036,-4.782434,9.194748,-7.435369,3.058639,8.559236,1.078165,0.971943,8.459454,-2.390319,0.141844,9.701374,-1.397984,-3.638198,3.819657,-1.186466,-1.236352,2.993555,-1.847886,8.293354,6.957156,-5.000251,1.634252,-6.774617,-4.001265,1.620470,0.119674,-6.043320,5.827619,-3.428428,7.422757,0.446179,1.008598,5.717236,-5.820087,0.830889,-6.567651,-2.379925,6.730245,-3.759472,0.588531,-6.804159,-5.108095,1.155415,7.681616,-6.904734,-8.714996,-0.011155,-2.879764,2.546592,-2.682677,-8.974106,-6.542198,-4.647836,8.052246,-7.598971,-4.059744,7.058948,9.378427,5.173414,-4.158331,5.940822,0.399656,-5.044865,5.651113,-4.578018,-5.934101,-9.953964,-6.032166,-1.663723,8.940952,-3.068803,8.485291,-8.074641,-7.259782,8.780115,3.673171,5.194771,6.331559,-7.765528,7.023588,-9.052222,7.072542,3.388060,-6.037271,5.034939,-8.623805,6.565931,0.296692,-7.015764,7.475707,-8.132791,-3.655383,6.479424,0.782450,-7.676864,8.129569,-9.071308,-0.060862,-6.005579,-7.334110,-3.298309,5.640317,-7.723770,-6.339265,1.201828,5.082694,-4.112248,7.174831,1.338156,-3.242107,-9.359582,-7.261085,-8.431063,-2.827446,6.811912,2.429757,8.971584,-9.092006,1.607397,-6.327492,-5.554080,4.235349,2.570865,0.366355,4.029184,-6.534031,1.007780,9.605638,6.087760,-7.694024,-5.722535,4.607588,-2.073231,9.848579,-6.487803,-0.696215,9.763581,4.004212,5.158915,4.981470,-6.007041,-8.419706,7.999693,-1.940804,4.982091,3.203602,-9.583472,6.330059,-1.145744,-6.420437,-5.377502,-7.576668,-4.604001,-2.841987,-4.115309,5.999009,1.464401,-4.210005,3.687454,-4.586525,3.559014,-5.490004,-3.925644,-1.317861,-8.401132,3.001375,-0.257591,5.777953,8.609381,-7.094545,4.132293,0.259883,0.466396,8.528645,-2.027189,2.635374,-2.962995,0.961458,7.184870,0.680124,-4.443025,-0.677722,-5.394981,-5.669961,4.470654,2.445699,-2.741529,9.072083,-9.316397,-0.196517,-9.086677,-7.200097,7.988885,5.605690,-6.849433,-2.267515,4.426558,4.391288,-1.117149,-2.103284,-0.630550,8.753963,-5.374297,-7.173507,1.068959,7.667517,-7.389203,-9.142572,9.419619,-4.161911,0.202749,-2.135144,3.233948,-7.448416,6.504210,6.588094,6.065953,-3.646285,7.794502,-0.963069,0.163292,7.927899,-2.494823,2.592466,6.750336,6.254749,7.133282,-2.301621,7.705071,-6.522389,9.764548,-2.511259,-7.293345,-3.121835,8.949812,3.840931,-2.280999,-8.114798,-8.532035,-1.027339,8.663586,-7.287043,9.880276,6.183135,-3.333418,-1.693781,4.164986,-7.401589,4.763983,9.333014,6.239988,-9.187655,4.142632,-5.518155,-0.480272,-5.484490,-5.013042,-0.183414,2.069075,-2.880713,-5.353896,1.040642,2.277550,7.741310,-0.261649,1.016515,7.710546,4.934000,-8.249573,6.978961,-0.083045,-2.533692,-0.262033,-4.770519,-4.992637,4.966696,5.835110,-3.639525,-7.350869,-5.867877,3.306106,2.174709,1.141855,5.991683,-0.039203,-4.788117,-2.960274,-7.005720,-5.996887,-6.740881,0.917327,2.466200,-8.353600,-7.713823,0.287105,0.650433,-1.442582,-0.237829,5.454066,-8.370126,-6.647649,-8.550611,7.181027,5.061268,-5.588809,7.488770,-0.943655,-6.394599,-0.915918,8.247463,4.093202,-3.554499,4.763144,6.211663,7.776449,2.299748,3.585137,-4.776302,-5.652901,-2.912125,-5.095384,-8.730765,-6.911734,0.150534,0.571604,-8.929865,-9.157188,2.760475,9.274243,-1.033126,-2.685483,-9.147454,-3.530014,-0.755939,1.359437,7.529257,-4.679143,-9.683235,-2.900342,-0.127346,-8.251787,6.489889,8.234055,9.855874,3.097287,3.614455,0.532288,4.048394,6.986997,-6.753619,-6.941169,-6.830230,6.667457,5.813109,-4.031566,-0.418589,1.599189,4.452906,-5.947591,6.192725,0.991215,5.462320,9.291537,-0.452176,-3.295031,0.151723,-7.889965,-5.888338,-7.567918,2.356535,3.825966,6.107873,4.840023,1.732787,8.973359,-0.924979,-5.696825,9.344386,-4.997295,-4.258976,-1.296208,-3.418548,6.963874,4.533593,-6.135913,-7.641558,-1.635731,-2.618489,9.064375,6.658791,9.054278,0.135586,2.715306,4.310748,-1.026218,-3.879430,6.457576,1.795309,1.007950,-0.861121,7.631148,6.011020,-8.062211,-4.372101,-8.343375,8.906175,4.690044,4.050744,8.574367,-4.480456,-4.854068,3.240711,3.769410,-6.867659,7.569792,0.387781,4.920088,-7.874393,-9.049437,7.993747,-9.775623,-3.801279,8.659574,-6.935316,-4.074866,-3.741068,6.750663,-2.552791,-7.457761,-0.974366,7.476881,4.962455,-3.521156,0.503373,-5.461481,1.899738,5.292026,-9.779071,0.667461,6.301584,8.417036,-3.114952,7.870328,-4.473762,2.049278,9.893071,-3.370449,-5.575138,-8.003020,9.137695,-7.528724,3.683521,3.284799,4.444444,-9.071314,-4.400726,-1.113867,7.977838,-1.030160,-7.608679,-9.617095,-9.842998,-8.180852,1.948346,-1.503701,3.058765,-9.367644,-7.366771,-2.246435,-9.447354,4.847554,-2.281410,-0.475038,8.226654,9.251232,-0.119182,-7.158497,-7.150761,1.501555,0.192446,8.415323,4.399290,-1.415888,8.262217,1.207810,8.481210,-1.465900,-2.521557,6.310114,9.520323,8.749274,-2.867761,9.205722,-3.879925,9.459546,-8.076403,-3.387795,-5.940063,-3.988900,5.451389,5.241186,-6.534793,0.832623,-0.762691,-1.354879,2.964830,-8.982077,0.486325,2.779403,-3.971966,-8.990911,7.504845,-1.646163,8.045838,2.407711,-5.901656,3.225509,-4.576497,-5.993613,-3.901403,7.017578,-3.686879,5.361082,9.213471,-9.639157,7.220823,-9.795835,6.149357,-4.145063,9.554388,-6.547872,3.761539,-2.944845,-2.861613,-1.743539,-7.753345,-1.146468,8.397996,-7.652993,-2.097061,0.374239,4.999262,-7.424155,-0.315610,3.051848,-3.156468,-3.762831,-7.404246,-7.906360,1.303050,3.896389,-8.762583,-6.905628,3.051353,-0.533559,1.381018,-3.311905,5.267089,-2.401509,8.370246,-6.903671,4.398206,7.492523,7.247682,-9.203949,4.960428,-8.642476,3.385742,2.921461,-2.369674,0.112544,6.533826,-6.426340,-4.399904,8.487717,6.893736,-6.562055,-6.909600,-3.761574,2.756342,-2.955717,-7.490047,-5.162865,4.082606,-6.479239,3.980478,-7.847677,1.286922,7.158970,7.950195,-1.935474,-4.376459,3.631347,-7.687529,0.192186,-4.851558,-0.280542,-2.547328,-8.154281,1.726110,0.449633,-9.475435,8.816232,5.821099,-7.544668,1.788819,4.658888,9.183630,-5.434453,-3.037649,6.362833,1.921134,0.092061,-5.811094,-4.863633,-2.865780,-9.765682,3.093030,4.604639,-6.484254,8.559675,-8.572105,-4.037131,7.705220,3.170164,-3.182292,-4.543159,4.006025,4.281066,1.318249,2.842807,-2.071449,8.216212,8.839686,-9.133721,-5.678566,-9.805463,-3.543089,-3.082782,8.641436,7.146224,-2.685552,-9.944571,2.925072,2.176000,4.954529,-5.362470,-9.422890,4.515079,-8.059733,0.319276,8.863900,3.735799,-7.832381,9.852750,-1.250148,0.090716,-7.356233,-7.663601,-9.836135,-9.484746,-9.024925,3.136468,-3.774341,-2.019992,-4.618589,0.404391,1.636427,7.159790,-1.997845,-2.966166,4.740996,8.058432,4.048332,8.303994,8.040747,4.720352,-4.959276,-4.755806,5.198204,-0.768981,2.894497,4.476446,-7.831886,-6.360336,7.548509,2.593375,1.903975,-7.883042,-3.999744,-6.078918,5.081835,0.643460,-5.135633,5.577764,0.940387,5.157379,1.705856,5.013848,8.732097,8.378095,-2.338983,0.755119,7.027048,-3.961728,3.463395,-8.051801,-6.034174,-9.134478,4.239457,-3.503770,4.499488,3.964232,-3.343117,5.920168,0.795649,-8.095580,6.165715,5.944313,7.275399,3.991275,-3.276148,-5.018923,1.710834,6.134254,-2.930113,1.051374,8.357829,-6.583817,-2.483764,2.147364,-4.717399,2.280650,7.817032,8.974222,9.345444,3.770490,-8.600793,-5.416299,-9.451329,-5.353006,-3.978208,7.985830,3.061734,1.502395,7.320994,6.935885,3.067400,6.035209,2.094271,7.909112,5.989585,-7.000523,-5.276074,-4.969435,-7.937910,4.582462,-3.027252,-8.402474,9.647571,5.889087,-0.116455,-3.670119,-5.652375,-4.038862,-7.842536,-7.514718,-6.012703,9.148331,7.000570,5.845576,7.456415,-6.724972,4.214478,3.471571,6.759823,0.474461,3.871898,4.935543,-2.202420,8.284622,0.497437,-9.906785,-2.259364,3.716857,6.336245,6.181174,3.394507,5.481792,-5.677885,7.056315,6.962480,8.980074,4.679078,-8.013807,-1.706734,-5.920005,3.309280,3.527309,1.076261,-0.959254,0.519867,6.914969,5.515022,-1.216174,8.199849,7.682593,-0.518604,7.339296,1.339920,3.488185,4.174275,-2.718422,7.325484,-1.478223,-2.801418,6.176065,-4.393236,-4.007258,6.711414,1.444685,4.353621,-3.835797,5.366372,3.801061,7.510765,-2.143230,-6.881832,-6.675020,-9.968206,-6.714378,9.009203,-1.422355,-3.740088,7.571785,2.500648,-5.005715,-1.476468,1.906440,-1.394520,-3.101094,6.103752,-7.698430,6.203731,5.372195,3.238415,-7.146794,-6.219878,-2.040155,-1.334696,-7.912409,-9.389492,-9.675694,4.590342,-7.646206,-9.344201,-5.111283,3.564077,0.344536,9.067605,-4.140890,2.537204,5.842725,-1.153192,-7.751992,7.664831,-3.025649,-9.914432,-4.206791,-0.606807,9.348654,-2.324992,3.851924,5.077095,-7.275467,0.760271,0.719203,-5.000795,-3.952062,6.610144,6.488055,-7.923725,-3.543897,-9.572683,-6.056488,-3.733339,2.707028,6.880571,-6.233735,2.550019,5.922555,-1.355070,6.762923,8.100612,6.023088,7.708742,-0.439921,-6.085406,-5.457139,1.733766,-3.556710,-0.136247,-1.554670,-4.276432,-5.480732,-2.172566,-4.976601,2.121287,7.504912,-1.070901,0.043764,4.629764,5.126851,-0.998453,-3.966759,-1.121265,3.398461,-6.473371,3.106970,2.592827,-2.397640,6.845795,-5.635394,7.376992,-9.321080,-9.364025,8.759488,0.208247,0.874419,-2.641969,1.415432,-5.681642,8.324162,6.967029,0.566433,2.918116,-7.178872,8.512739,5.609130,-3.976192,-6.793862,4.922529,-1.662419,-1.226438,-0.779757,5.264133,4.761088,0.716781,-4.084814,2.108429,8.529025,5.286091,-3.230305,-2.537996,1.309195,3.971307,8.828725,3.089219,8.027821,9.405611,-1.722011,5.566694,7.278405,6.020437,3.089672,4.833126,9.190563,-0.827638,6.601779,5.153554,0.535804,-3.858015,8.995402,-1.369152,3.818308,-6.477930,-3.836145,-0.057884,-0.601125,7.410857,-6.894890,-7.682437,-8.054269,2.650232,6.233705,-8.977570,5.614473,4.260256,4.626575,7.822362,-7.164377,-6.494755,-6.943338,-7.276016,-3.545289,-8.890717,-3.537034,-3.529656,-9.942335,9.607758,-0.540393,-2.266512,-2.443124,-7.308104,-8.481800,1.964558,-7.167109,5.766821,-4.596401,6.282330,-0.707328,2.821144,6.482051,9.156521,-3.114668,0.748335,-3.566582,-8.876665,-5.263225,-9.513030,9.798860,6.747588,-1.636806,-1.295544,-7.164935,4.600594,9.265318,1.063468,1.631926,-2.878253,6.034496,-1.753472,-1.216835,8.211021,-1.308269,9.535563,2.015142,2.513342,6.606188,-4.174978,6.591556,-2.153853,-0.099354,1.419171,-2.107062,1.714626,-5.185473,-1.049281,8.687624,3.050021,8.665770,3.121427,0.957552,-8.452183,-5.937203,-0.299294,0.592315,-7.526728,-8.019254,5.676313,-5.847674,1.715279,-5.634704,9.683376,2.008592,4.925445,6.999989,7.963956,2.223532,3.599867,-2.265959,-7.317646,8.530912,8.889154,-1.275889,-7.920508,-1.818348,6.456794,2.775448,-4.690167,7.133950,-9.032145,-3.457518,3.739115,1.300412,9.562869,-1.320387,9.769800,-6.988063,-8.373645,7.968166,0.561428,-4.810086,1.774981,4.987489,-8.454815,7.213070,8.787541,-8.802189,-6.025018,-1.329391,8.015622,3.062041,-3.326201,9.740369,-7.016585,2.673565,-2.494141,8.068299,-4.051170,3.824616,0.946587,6.211535,-6.504902,-7.768656,5.401407,-8.059263,8.472454,-0.153598,-7.140168,-2.315649,-6.204503,-7.922174,8.391161,-8.016107,5.957181,-5.375860,3.005028,4.456789,6.661002,-6.533863,-4.887633,5.787590,-5.177276,1.067738,-1.167837,9.781784,-3.966478,0.998513,3.013154,6.576642,-6.868483,-0.940869,1.813020,2.739404,4.848385,1.728576,7.331057,3.226659,-6.315007,-1.204486,0.375308,-9.824011,9.966995,8.058281,5.282296,2.409691,7.855126,3.103706,-3.737462,7.950166,-1.124021,6.790626,-0.555651,6.697457,-3.019144,7.814561,-8.226843,5.861137,4.707662,-3.815664,8.666449,-6.360203,1.505561,2.028234,2.202824,6.498943,6.461720,8.894279,-3.544258,4.402273,-1.856227,-9.903705,-7.507781,-8.785578,-5.113303,-1.273395,0.329335,-9.637226,5.141885,-0.414020,5.499251,-4.299333,-7.580762,-7.408198,9.464534,7.252094,-6.548349,-4.519162,1.334037,-6.362201,4.022710,4.541531,-7.620505,-5.691429,9.036204,-3.071827,-6.798425,-4.107485,-6.730348,0.435441,-7.422846,2.216121,-1.479288,8.806333,-5.426963,-0.802285,-2.270517,-5.271733,5.146060,-1.217088,7.040312,3.613726,-5.548926,7.310423,-9.013816,-9.915733,8.679072,2.879903,1.276420,-6.467649,3.634900,0.587918,-8.263825,-2.124196,-5.454995,6.195658,9.908386,-0.231873,-0.334985,-8.395489,-9.287926,5.179152,-8.410423,-6.502321,1.531308,4.651488,0.864670,-0.995248,6.143434,6.976496,-1.897408,5.280017,-0.402199,2.914137,3.462578,3.126575,-1.775086,-6.297229,-8.028582,-9.744919,0.091634,-5.534218,-2.314675,-4.372570,1.505244,-9.108853,-7.154217,9.587025,0.707681,4.336347,-1.747150,-3.533285,0.677230,1.952044,3.946955,5.110826,7.742104,8.826209,4.068800,0.466038,-2.732656,-4.036812,-2.937142,6.200354,-4.046642,-1.690655,3.508639,1.457643,3.038596,-0.141741,-3.388696,4.526435,5.322252,3.859173,2.283767,4.069116,-5.810431,-4.613405,5.299788,-0.332658,2.182310,-8.061659,-1.806488,8.555133,-2.513720,-2.154044,-2.190717,3.064343,1.701181,-2.890959,5.543584,-8.645352,0.362245,-7.069792,-1.291775,-6.239485,-9.902149,-7.194440,-7.561225,-5.851898,-9.447704,5.423974,5.329285,-0.912152,2.902796,9.169537,4.674493,1.102319,-8.062973,6.814554,-0.603571,-5.159687,8.530262,7.254640,5.108005,-4.861854,8.149146,-1.207893,-5.766030,7.155223,4.436306,9.186900,-5.506430,6.051047,-3.764943,1.275565,-3.576420,6.523967,-8.145821,2.567229,8.378582,6.955758,6.360405,7.320440,0.312068,5.272496,0.527018,0.917629,3.772091,-4.434760,8.336242,8.563944,-1.553349,2.562759,3.806166], dtype = "float64")#candidate|5288|(2560,)|const|float64
call_5287 = relay.TupleGetItem(func_4275_call(relay.reshape(const_5288.astype('float64'), [2560,])), 1)
call_5289 = relay.TupleGetItem(func_4278_call(relay.reshape(const_5288.astype('float64'), [2560,])), 1)
output = relay.Tuple([call_5284,call_5287,const_5288,])
output2 = relay.Tuple([call_5285,call_5289,const_5288,])
func_5291 = relay.Function([], output)
mod['func_5291'] = func_5291
mod = relay.transform.InferType()(mod)
mutated_mod['func_5291'] = func_5291
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5291_call = mutated_mod.get_global_var('func_5291')
call_5292 = func_5291_call()
output = call_5292
func_5293 = relay.Function([], output)
mutated_mod['func_5293'] = func_5293
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4852_call = mod.get_global_var('func_4852')
func_4853_call = mutated_mod.get_global_var('func_4853')
call_5361 = func_4852_call()
call_5362 = func_4852_call()
func_2824_call = mod.get_global_var('func_2824')
func_2826_call = mutated_mod.get_global_var('func_2826')
call_5380 = relay.TupleGetItem(func_2824_call(), 0)
call_5381 = relay.TupleGetItem(func_2826_call(), 0)
output = relay.Tuple([call_5361,call_5380,])
output2 = relay.Tuple([call_5362,call_5381,])
func_5383 = relay.Function([], output)
mod['func_5383'] = func_5383
mod = relay.transform.InferType()(mod)
mutated_mod['func_5383'] = func_5383
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5383_call = mutated_mod.get_global_var('func_5383')
call_5384 = func_5383_call()
output = call_5384
func_5385 = relay.Function([], output)
mutated_mod['func_5385'] = func_5385
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4031_call = mod.get_global_var('func_4031')
func_4032_call = mutated_mod.get_global_var('func_4032')
call_5406 = func_4031_call()
call_5407 = func_4031_call()
func_3752_call = mod.get_global_var('func_3752')
func_3755_call = mutated_mod.get_global_var('func_3755')
const_5409 = relay.const([5.950424,-8.233843,-2.531858,3.273551,3.451729,-1.478112,8.699516,-3.801863,1.030136,-1.524827,2.544452,-1.987927,-7.810873,4.442791,-0.834423,-3.974657,-4.851366,6.675971,8.206894,7.288580,-0.324416,8.508033,-6.898562,-0.404208,3.907402,8.595058,-7.271097,6.379610,8.990469,3.242488,-7.599945,9.667264,-7.345726,5.945438,-7.563595,-8.342836,1.328894,-6.996771,8.221633,7.018944,-3.611645,3.308868,-3.894478,0.159468,-6.517129,-6.566670,-6.598493,9.353306,-1.499214,-8.828598,2.457046,0.101443,1.931423,1.677187,-9.546361,2.754121,8.837101,-0.391968,4.782654,9.373401,-2.209500,-3.674431,-8.861518,6.608910,9.667198,9.293924,0.157063,8.291155,-6.979870,9.121653,1.481988,0.696186,-0.013061,-5.300706,4.233928,7.117959,9.380279,-1.546775,9.352771,-4.873941,-6.307150,-5.692015,3.957420,-6.896564,-8.583144,-3.774866,-1.535321,-2.577157,3.206362,-1.359975,-2.801229,-7.866697,4.254897,5.483335,3.519332,4.575359,1.823972,6.704393,5.184752,6.137481,1.900553,8.921716,8.901092,-2.263758,6.327433,-0.767440,-6.435517,4.527546,1.840824,7.398293,9.744008,-9.766367,-6.934196,8.655516,2.236522,8.551565,-8.604516,-5.485035,-1.923560,1.094212,2.113911,4.126461,-3.253226,-3.251341,-7.369839,-3.467601,-7.173719,-1.417477,-1.332557,4.650554,-7.531633,3.348778,3.081765,0.634150,-6.765317,7.797028,-2.226880,-6.653737,-3.609893,-4.416480,-7.015730,-8.092374,-1.240117,0.087077,-4.506839,-1.386233,9.448079,5.796273,-7.489815,-7.490062,3.018609,-2.556942,-8.101213,2.909610,2.004189,9.520748,-4.857654,7.846968,3.358636,-4.591801,6.032831,-8.788798,-9.857852,1.031635,-2.364286,7.214778,-0.830131,9.162208,-1.171858,8.436194,0.288703,2.633197,-7.903009,-7.879084,9.008390,7.581224,2.252278,3.531344,3.638266,-5.753522,-4.854605,-9.223617,-5.137647,-0.031076,-7.985023,-3.967429,-0.967149,2.844133,-4.237207,-2.710448,-1.662571,-1.941395,-4.334986,5.700661,7.276167,9.888831,-2.333765,-3.317340,-2.231905,8.931840,-3.707472,-2.414797,-8.279712,7.609150,4.114465,-4.582355,1.104328,1.558367,8.108930,3.992694,7.497746,-7.202387,-6.881984,-6.003065,0.519923,1.050392,5.721364,8.651791,-1.798777,8.736919,-5.583502,1.048292,-9.281364,2.544367,-8.692642,-3.728631,-9.133837,0.897900,1.224023,5.507746,5.733548,-0.750794,-6.415951,-0.746171,-3.662147,-1.850601,-7.131970,-8.955184,-1.548467,-0.576586,1.027083,-5.913429,4.970438,-3.751123,0.768890,-8.288552,6.680450,-0.362057,-2.074387,-0.917046,-5.038400,1.995268,-5.844137,0.932682,-7.565134,0.618527,6.371467,9.964709,9.938673,1.042434,9.123652,-3.288085,8.499294,-9.119801,9.031691,-7.717310,5.636655,-5.767786,-0.636136,-1.156081,0.865970,-4.367819,-9.791435,-3.233045,6.029201,-0.334249,7.771497,0.479814,6.809967,-3.128898,-3.279122,-5.308329,-5.669417,-3.850683,2.357011,7.691856,-9.126345,2.042220,7.245555,5.884569,9.779694,3.059018,-6.006316,6.283642,-5.742463,-8.040061,1.411040,-3.528801,-9.495696,-7.704924,-3.234360,-6.132519,5.264658,3.373587,8.992201,9.601216,-7.658647,2.770460,-6.494851,4.857224,-1.957112,1.968617,-1.607813,-5.425569,-0.897345,-4.750478,-6.483445,-6.406131,-5.044397,0.740711,-0.473842,2.375490,3.687088,9.734314,6.482688,9.023105,-0.182470,7.738502,-8.552988,9.540788,-4.464123,9.794303,8.035123,-6.934332,7.702328,1.649188,4.693106,3.682193,-6.562561,-8.324706,4.065131,8.481848,-8.636978,-0.134449,-9.266032,-1.522663,-8.178874,-7.498743,0.251573,5.299458,-1.202389,-6.824593,3.488648,-5.487305,-9.013249,-4.492836,-4.476788,0.942618,-6.710449,-1.669155,-4.206758,-6.589124,-7.794049,-0.920333,5.593600,0.732431,-9.846258,8.466816,8.937529,2.933948,-6.010910,1.621207,-4.367034,-7.488133,-6.151765,9.741020,8.964061,0.534399,-4.658056,8.556891,-3.701090,5.063002,-8.950867,-8.142526,2.480312,2.243538,2.865360,-5.712673,1.310480,8.470624], dtype = "float64")#candidate|5409|(390,)|const|float64
call_5408 = relay.TupleGetItem(func_3752_call(relay.reshape(const_5409.astype('float64'), [13, 2, 15])), 0)
call_5410 = relay.TupleGetItem(func_3755_call(relay.reshape(const_5409.astype('float64'), [13, 2, 15])), 0)
bop_5411 = relay.bitwise_or(call_5408.astype('uint16'), relay.reshape(const_5409.astype('uint16'), relay.shape_of(call_5408))) # shape=(13, 2, 15)
bop_5414 = relay.bitwise_or(call_5410.astype('uint16'), relay.reshape(const_5409.astype('uint16'), relay.shape_of(call_5410))) # shape=(13, 2, 15)
func_1235_call = mod.get_global_var('func_1235')
func_1238_call = mutated_mod.get_global_var('func_1238')
call_5416 = relay.TupleGetItem(func_1235_call(relay.reshape(call_5406.astype('bool'), [11, 4, 2]), relay.reshape(call_5406.astype('bool'), [11, 4, 2]), ), 1)
call_5417 = relay.TupleGetItem(func_1238_call(relay.reshape(call_5406.astype('bool'), [11, 4, 2]), relay.reshape(call_5406.astype('bool'), [11, 4, 2]), ), 1)
uop_5419 = relay.exp(bop_5411.astype('float64')) # shape=(13, 2, 15)
uop_5421 = relay.exp(bop_5414.astype('float64')) # shape=(13, 2, 15)
uop_5430 = relay.asinh(uop_5419.astype('float32')) # shape=(13, 2, 15)
uop_5432 = relay.asinh(uop_5421.astype('float32')) # shape=(13, 2, 15)
var_5434 = relay.var("var_5434", dtype = "float32", shape = (13, 2, 15))#candidate|5434|(13, 2, 15)|var|float32
bop_5435 = relay.divide(uop_5430.astype('float64'), relay.reshape(var_5434.astype('float64'), relay.shape_of(uop_5430))) # shape=(13, 2, 15)
bop_5438 = relay.divide(uop_5432.astype('float64'), relay.reshape(var_5434.astype('float64'), relay.shape_of(uop_5432))) # shape=(13, 2, 15)
bop_5448 = relay.floor_mod(bop_5435.astype('float64'), relay.reshape(uop_5430.astype('float64'), relay.shape_of(bop_5435))) # shape=(13, 2, 15)
bop_5451 = relay.floor_mod(bop_5438.astype('float64'), relay.reshape(uop_5432.astype('float64'), relay.shape_of(bop_5438))) # shape=(13, 2, 15)
uop_5456 = relay.cosh(uop_5419.astype('float32')) # shape=(13, 2, 15)
uop_5458 = relay.cosh(uop_5421.astype('float32')) # shape=(13, 2, 15)
func_4275_call = mod.get_global_var('func_4275')
func_4278_call = mutated_mod.get_global_var('func_4278')
var_5479 = relay.var("var_5479", dtype = "float64", shape = (2560,))#candidate|5479|(2560,)|var|float64
call_5478 = relay.TupleGetItem(func_4275_call(relay.reshape(var_5479.astype('float64'), [2560,])), 0)
call_5480 = relay.TupleGetItem(func_4278_call(relay.reshape(var_5479.astype('float64'), [2560,])), 0)
output = relay.Tuple([call_5406,call_5416,bop_5448,uop_5456,call_5478,var_5479,])
output2 = relay.Tuple([call_5407,call_5417,bop_5451,uop_5458,call_5480,var_5479,])
func_5488 = relay.Function([var_5434,var_5479,], output)
mod['func_5488'] = func_5488
mod = relay.transform.InferType()(mod)
var_5489 = relay.var("var_5489", dtype = "float32", shape = (13, 2, 15))#candidate|5489|(13, 2, 15)|var|float32
var_5490 = relay.var("var_5490", dtype = "float64", shape = (2560,))#candidate|5490|(2560,)|var|float64
output = func_5488(var_5489,var_5490,)
func_5491 = relay.Function([var_5489,var_5490,], output)
mutated_mod['func_5491'] = func_5491
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5502 = relay.var("var_5502", dtype = "float64", shape = (9, 14, 10))#candidate|5502|(9, 14, 10)|var|float64
uop_5503 = relay.acosh(var_5502.astype('float64')) # shape=(9, 14, 10)
func_3752_call = mod.get_global_var('func_3752')
func_3755_call = mutated_mod.get_global_var('func_3755')
const_5507 = relay.const([[0.567517,-4.167797,-7.869464,-2.705572,-3.702529,-5.707015],[6.973224,3.277482,-2.076410,-3.188583,2.377276,4.464745],[1.934940,3.017412,8.797955,9.228747,-9.462344,-6.520134],[6.526764,-0.342528,-3.460339,-1.801474,5.686661,8.784812],[7.509971,7.690821,0.269202,-5.915327,8.212193,-5.590984],[0.373603,-3.667828,8.924845,-9.564167,7.129274,-9.751820],[1.952627,4.530407,-5.940696,-1.957212,2.832089,7.604007],[-1.592555,0.849457,3.046311,-9.071083,-7.197832,3.218595],[-0.577698,-7.989405,-0.996708,5.022939,1.076773,-1.748880],[9.492853,3.659621,1.598787,4.569345,-8.071582,5.452442],[-5.345686,-7.459456,-4.633319,-4.634249,9.466981,4.419847],[1.614837,4.618132,4.459641,7.646220,-0.779237,6.210368],[5.559685,-6.783911,-2.349554,8.791748,8.812358,2.342433],[9.058486,-9.303246,-7.241899,5.941923,-4.976986,-3.665705],[-8.714210,-1.826762,5.391391,-5.875995,-9.940038,-8.891900],[5.444001,4.321422,-3.165836,-8.559578,-9.131534,-6.367248],[-3.676266,9.416349,9.070201,5.629985,5.592545,-0.432948],[2.289796,3.950778,9.074863,-9.845805,4.182130,-0.643791],[-6.855166,-9.941575,0.753806,0.295427,-5.170532,1.123775],[7.514926,8.479146,-5.247417,3.499389,8.612878,-8.508111],[-4.176518,7.191424,-2.769203,0.049533,-8.468771,-6.933261],[5.660172,-5.570244,-6.131988,7.510991,-9.918568,-4.779597],[-8.684767,-6.802254,-7.745287,4.834865,-4.399763,-8.428694],[-2.062128,0.303521,7.502860,-9.908572,-4.714854,-5.525186],[-6.068067,-8.487897,2.402942,-2.302741,-2.129340,9.506723],[6.033720,9.348230,1.410825,-6.310485,-2.265914,-2.762717],[8.216069,-8.533564,3.569872,-4.238394,-7.954153,-2.347747],[9.321779,2.194270,-8.968799,-9.586751,0.342818,1.322740],[-5.838499,-6.851397,8.328476,-8.348751,-0.002945,-4.980644],[-7.696303,4.003019,5.163112,-7.203341,-4.651897,-8.922032],[-6.461783,-9.645719,2.433029,-4.380938,-7.733206,-6.645736],[3.562002,-1.286342,4.287480,-4.769207,-5.302838,-5.120820],[4.686029,-5.734474,-0.511490,-7.726490,-0.707563,4.781877],[-0.996985,1.191714,-0.726670,8.397847,-2.555644,7.925865],[-7.551233,8.799477,-5.158510,4.401905,-5.628566,3.254956],[-6.570846,1.783187,7.793698,-3.241475,-4.690890,-4.540615],[1.829117,4.563794,0.241075,9.528957,-4.568223,-0.363988],[-8.399189,-0.362106,-1.316610,-2.227726,-1.349988,5.484064],[-7.725172,5.186085,6.694275,6.278332,8.268193,-0.517632],[-1.384156,1.378700,8.438419,4.859171,4.862970,-4.668404],[2.275758,-2.182758,5.683745,1.967217,-6.278827,-7.241139],[-6.929671,-0.327870,-3.607049,5.970011,8.410858,4.973910],[-1.160169,-9.526995,4.033833,8.896801,6.417888,-2.960110],[5.962570,-6.436214,-1.695412,2.262225,8.236443,7.767609],[8.563803,-9.425003,1.180704,1.646593,-3.446184,7.457756],[-5.786351,-4.714224,-9.022387,-3.740917,8.643342,2.458068],[-6.535463,-3.689143,5.592822,2.539648,-3.775216,0.116353],[-2.625083,-8.392323,-0.410123,-8.371513,-8.919990,5.918858],[5.502054,9.524663,-4.459442,-1.294211,5.383544,-8.316222],[-5.629076,2.389694,7.345359,-8.151066,8.736818,-9.539366],[-5.760630,2.734529,-7.800664,-2.611915,-5.271726,-9.911922],[-3.015068,3.090151,5.337376,-4.076669,-7.838855,3.453719],[-0.906623,4.430993,-5.764432,-1.872599,-0.100750,8.799152],[-6.955608,-7.580812,4.751235,1.460391,1.881709,-1.282796],[0.116870,3.824817,-7.169311,1.402129,-0.802674,0.727486],[9.096471,-6.101809,1.262010,-3.281523,1.827780,-5.085524],[3.256746,-0.345259,4.759375,3.113151,-3.009061,-6.936905],[4.264981,3.012570,-3.774850,-4.502884,-9.331089,4.592081],[9.727079,0.413784,-9.656594,7.240408,-3.959891,-0.960692],[-8.797524,-6.152188,-6.406873,-4.238348,-9.507772,-0.090686],[-4.252265,-1.205627,4.879922,-0.938765,6.194017,8.875522],[6.991231,6.195879,-7.361487,9.635428,-7.555318,6.965487],[-5.398082,-0.885411,-6.289909,2.059405,-2.498727,6.761951],[7.095508,-1.240737,-1.924515,-4.118191,-0.804866,0.415134],[-6.823448,-7.644626,-0.547170,4.570939,3.029447,8.769829]], dtype = "float64")#candidate|5507|(65, 6)|const|float64
call_5506 = relay.TupleGetItem(func_3752_call(relay.reshape(const_5507.astype('float64'), [13, 2, 15])), 1)
call_5508 = relay.TupleGetItem(func_3755_call(relay.reshape(const_5507.astype('float64'), [13, 2, 15])), 1)
bop_5513 = relay.mod(uop_5503.astype('float64'), relay.reshape(var_5502.astype('float64'), relay.shape_of(uop_5503))) # shape=(9, 14, 10)
func_3469_call = mod.get_global_var('func_3469')
func_3471_call = mutated_mod.get_global_var('func_3471')
call_5518 = relay.TupleGetItem(func_3469_call(relay.reshape(call_5506.astype('float32'), [11, 4, 2])), 0)
call_5519 = relay.TupleGetItem(func_3471_call(relay.reshape(call_5506.astype('float32'), [11, 4, 2])), 0)
uop_5520 = relay.log10(uop_5503.astype('float32')) # shape=(9, 14, 10)
output = relay.Tuple([call_5506,const_5507,bop_5513,call_5518,uop_5520,])
output2 = relay.Tuple([call_5508,const_5507,bop_5513,call_5519,uop_5520,])
func_5528 = relay.Function([var_5502,], output)
mod['func_5528'] = func_5528
mod = relay.transform.InferType()(mod)
mutated_mod['func_5528'] = func_5528
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5529 = relay.var("var_5529", dtype = "float64", shape = (9, 14, 10))#candidate|5529|(9, 14, 10)|var|float64
func_5528_call = mutated_mod.get_global_var('func_5528')
call_5530 = func_5528_call(var_5529)
output = call_5530
func_5531 = relay.Function([var_5529], output)
mutated_mod['func_5531'] = func_5531
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5548 = relay.var("var_5548", dtype = "int64", shape = (1, 15, 11))#candidate|5548|(1, 15, 11)|var|int64
var_5549 = relay.var("var_5549", dtype = "int64", shape = (10, 15, 11))#candidate|5549|(10, 15, 11)|var|int64
bop_5550 = relay.add(var_5548.astype('int64'), var_5549.astype('int64')) # shape=(10, 15, 11)
func_2727_call = mod.get_global_var('func_2727')
func_2729_call = mutated_mod.get_global_var('func_2729')
call_5563 = relay.TupleGetItem(func_2727_call(), 2)
call_5564 = relay.TupleGetItem(func_2729_call(), 2)
output = relay.Tuple([bop_5550,call_5563,])
output2 = relay.Tuple([bop_5550,call_5564,])
func_5567 = relay.Function([var_5548,var_5549,], output)
mod['func_5567'] = func_5567
mod = relay.transform.InferType()(mod)
var_5568 = relay.var("var_5568", dtype = "int64", shape = (1, 15, 11))#candidate|5568|(1, 15, 11)|var|int64
var_5569 = relay.var("var_5569", dtype = "int64", shape = (10, 15, 11))#candidate|5569|(10, 15, 11)|var|int64
output = func_5567(var_5568,var_5569,)
func_5570 = relay.Function([var_5568,var_5569,], output)
mutated_mod['func_5570'] = func_5570
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1531_call = mod.get_global_var('func_1531')
func_1533_call = mutated_mod.get_global_var('func_1533')
call_5582 = relay.TupleGetItem(func_1531_call(), 0)
call_5583 = relay.TupleGetItem(func_1533_call(), 0)
output = call_5582
output2 = call_5583
func_5586 = relay.Function([], output)
mod['func_5586'] = func_5586
mod = relay.transform.InferType()(mod)
output = func_5586()
func_5587 = relay.Function([], output)
mutated_mod['func_5587'] = func_5587
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1531_call = mod.get_global_var('func_1531')
func_1533_call = mutated_mod.get_global_var('func_1533')
call_5620 = relay.TupleGetItem(func_1531_call(), 0)
call_5621 = relay.TupleGetItem(func_1533_call(), 0)
func_3181_call = mod.get_global_var('func_3181')
func_3183_call = mutated_mod.get_global_var('func_3183')
call_5622 = func_3181_call()
call_5623 = func_3181_call()
output = relay.Tuple([call_5620,call_5622,])
output2 = relay.Tuple([call_5621,call_5623,])
func_5633 = relay.Function([], output)
mod['func_5633'] = func_5633
mod = relay.transform.InferType()(mod)
mutated_mod['func_5633'] = func_5633
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5633_call = mutated_mod.get_global_var('func_5633')
call_5634 = func_5633_call()
output = call_5634
func_5635 = relay.Function([], output)
mutated_mod['func_5635'] = func_5635
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5649 = relay.var("var_5649", dtype = "int32", shape = ())#candidate|5649|()|var|int32
var_5650 = relay.var("var_5650", dtype = "int32", shape = (7, 12, 10))#candidate|5650|(7, 12, 10)|var|int32
bop_5651 = relay.right_shift(var_5649.astype('int32'), var_5650.astype('int32')) # shape=(7, 12, 10)
output = bop_5651
output2 = bop_5651
func_5654 = relay.Function([var_5649,var_5650,], output)
mod['func_5654'] = func_5654
mod = relay.transform.InferType()(mod)
mutated_mod['func_5654'] = func_5654
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5654_call = mutated_mod.get_global_var('func_5654')
var_5656 = relay.var("var_5656", dtype = "int32", shape = ())#candidate|5656|()|var|int32
var_5657 = relay.var("var_5657", dtype = "int32", shape = (7, 12, 10))#candidate|5657|(7, 12, 10)|var|int32
call_5655 = func_5654_call(var_5656,var_5657,)
output = call_5655
func_5658 = relay.Function([var_5656,var_5657,], output)
mutated_mod['func_5658'] = func_5658
mutated_mod = relay.transform.InferType()(mutated_mod)
func_333_call = mod.get_global_var('func_333')
func_335_call = mutated_mod.get_global_var('func_335')
call_5669 = func_333_call()
call_5670 = func_333_call()
output = relay.Tuple([call_5669,])
output2 = relay.Tuple([call_5670,])
func_5673 = relay.Function([], output)
mod['func_5673'] = func_5673
mod = relay.transform.InferType()(mod)
mutated_mod['func_5673'] = func_5673
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5673_call = mutated_mod.get_global_var('func_5673')
call_5674 = func_5673_call()
output = call_5674
func_5675 = relay.Function([], output)
mutated_mod['func_5675'] = func_5675
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1047_call = mod.get_global_var('func_1047')
func_1049_call = mutated_mod.get_global_var('func_1049')
call_5722 = relay.TupleGetItem(func_1047_call(), 2)
call_5723 = relay.TupleGetItem(func_1049_call(), 2)
var_5746 = relay.var("var_5746", dtype = "float64", shape = (2560,))#candidate|5746|(2560,)|var|float64
bop_5747 = relay.left_shift(call_5722.astype('uint64'), relay.reshape(var_5746.astype('uint64'), relay.shape_of(call_5722))) # shape=(2560,)
bop_5750 = relay.left_shift(call_5723.astype('uint64'), relay.reshape(var_5746.astype('uint64'), relay.shape_of(call_5723))) # shape=(2560,)
output = bop_5747
output2 = bop_5750
func_5761 = relay.Function([var_5746,], output)
mod['func_5761'] = func_5761
mod = relay.transform.InferType()(mod)
var_5762 = relay.var("var_5762", dtype = "float64", shape = (2560,))#candidate|5762|(2560,)|var|float64
output = func_5761(var_5762)
func_5763 = relay.Function([var_5762], output)
mutated_mod['func_5763'] = func_5763
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5291_call = mod.get_global_var('func_5291')
func_5293_call = mutated_mod.get_global_var('func_5293')
call_5847 = relay.TupleGetItem(func_5291_call(), 0)
call_5848 = relay.TupleGetItem(func_5293_call(), 0)
func_4432_call = mod.get_global_var('func_4432')
func_4434_call = mutated_mod.get_global_var('func_4434')
call_5850 = func_4432_call()
call_5851 = func_4432_call()
func_4816_call = mod.get_global_var('func_4816')
func_4817_call = mutated_mod.get_global_var('func_4817')
call_5854 = relay.TupleGetItem(func_4816_call(), 1)
call_5855 = relay.TupleGetItem(func_4817_call(), 1)
func_534_call = mod.get_global_var('func_534')
func_536_call = mutated_mod.get_global_var('func_536')
call_5868 = relay.TupleGetItem(func_534_call(), 0)
call_5869 = relay.TupleGetItem(func_536_call(), 0)
func_101_call = mod.get_global_var('func_101')
func_102_call = mutated_mod.get_global_var('func_102')
call_5880 = relay.TupleGetItem(func_101_call(), 0)
call_5881 = relay.TupleGetItem(func_102_call(), 0)
func_81_call = mod.get_global_var('func_81')
func_85_call = mutated_mod.get_global_var('func_85')
call_5887 = relay.TupleGetItem(func_81_call(relay.reshape(call_5868.astype('float32'), [11, 4, 2]), relay.reshape(call_5854.astype('float32'), [11, 4, 2]), ), 0)
call_5888 = relay.TupleGetItem(func_85_call(relay.reshape(call_5868.astype('float32'), [11, 4, 2]), relay.reshape(call_5854.astype('float32'), [11, 4, 2]), ), 0)
func_1594_call = mod.get_global_var('func_1594')
func_1595_call = mutated_mod.get_global_var('func_1595')
call_5893 = func_1594_call()
call_5894 = func_1594_call()
output = relay.Tuple([call_5847,call_5850,call_5854,call_5868,call_5880,call_5887,call_5893,])
output2 = relay.Tuple([call_5848,call_5851,call_5855,call_5869,call_5881,call_5888,call_5894,])
func_5907 = relay.Function([], output)
mod['func_5907'] = func_5907
mod = relay.transform.InferType()(mod)
output = func_5907()
func_5908 = relay.Function([], output)
mutated_mod['func_5908'] = func_5908
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1531_call = mod.get_global_var('func_1531')
func_1533_call = mutated_mod.get_global_var('func_1533')
call_5989 = relay.TupleGetItem(func_1531_call(), 0)
call_5990 = relay.TupleGetItem(func_1533_call(), 0)
output = call_5989
output2 = call_5990
func_6012 = relay.Function([], output)
mod['func_6012'] = func_6012
mod = relay.transform.InferType()(mod)
mutated_mod['func_6012'] = func_6012
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6012_call = mutated_mod.get_global_var('func_6012')
call_6013 = func_6012_call()
output = call_6013
func_6014 = relay.Function([], output)
mutated_mod['func_6014'] = func_6014
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4330_call = mod.get_global_var('func_4330')
func_4332_call = mutated_mod.get_global_var('func_4332')
call_6022 = func_4330_call()
call_6023 = func_4330_call()
output = relay.Tuple([call_6022,])
output2 = relay.Tuple([call_6023,])
func_6027 = relay.Function([], output)
mod['func_6027'] = func_6027
mod = relay.transform.InferType()(mod)
mutated_mod['func_6027'] = func_6027
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6027_call = mutated_mod.get_global_var('func_6027')
call_6028 = func_6027_call()
output = call_6028
func_6029 = relay.Function([], output)
mutated_mod['func_6029'] = func_6029
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5225_call = mod.get_global_var('func_5225')
func_5226_call = mutated_mod.get_global_var('func_5226')
call_6062 = relay.TupleGetItem(func_5225_call(), 0)
call_6063 = relay.TupleGetItem(func_5226_call(), 0)
var_6072 = relay.var("var_6072", dtype = "bool", shape = (11, 4, 2))#candidate|6072|(11, 4, 2)|var|bool
bop_6073 = relay.power(call_6062.astype('float32'), relay.reshape(var_6072.astype('float32'), relay.shape_of(call_6062))) # shape=(11, 4, 2)
bop_6076 = relay.power(call_6063.astype('float32'), relay.reshape(var_6072.astype('float32'), relay.shape_of(call_6063))) # shape=(11, 4, 2)
func_5567_call = mod.get_global_var('func_5567')
func_5570_call = mutated_mod.get_global_var('func_5570')
var_6096 = relay.var("var_6096", dtype = "int64", shape = (165,))#candidate|6096|(165,)|var|int64
const_6097 = relay.const([3,-5,-5,8,-1,4,-5,-5,7,-2,-3,10,2,4,-3,-1,6,3,-3,5,-1,-8,-5,-5,-3,3,-2,10,3,7,8,4,-4,-7,9,-2,9,9,3,6,1,-1,-4,-6,-6,5,-10,8,-8,-2,-7,7,2,-1,10,-2,9,-3,-6,-10,-1,-6,3,-5,-1,8,-9,3,1,-8,-3,1,6,5,-2,-2,-1,5,4,-7,-7,2,-9,1,1,10,-2,6,-4,7,7,10,10,5,5,9,-6,10,-8,-5,10,2,8,-9,-8,-10,-6,4,8,-1,1,7,-3,-3,9,1,-5,3,-9,-6,9,-2,10,2,-5,-3,3,4,-10,-8,-4,2,9,3,-10,-7,-6,-3,-6,6,-7,8,10,7,-8,1,-1,-1,8,2,-2,-6,-1,7,-3,-9,-10,10,10,2,-10,9,-3,6,4,-9,9,5,4,7,4,8,6,6,5,3,-8,-1,-5,-4,6,-5,9,-7,3,10,2,1,-8,-4,-4,10,-3,3,-7,7,2,-10,-4,-4,1,-2,4,10,10,-4,-5,6,-5,-6,-8,6,6,9,-3,5,-10,8,2,-7,4,-9,-6,-8,4,3,-10,-9,7,6,-4,-5,-10,10,10,6,-9,-4,-8,5,-10,-5,9,7,-4,5,4,4,-10,-7,10,-6,-8,3,5,-9,8,5,8,1,-5,-1,6,-6,-10,9,-6,-10,-7,2,4,-9,5,-8,-8,-6,5,3,-5,-2,-1,8,7,-4,4,6,-7,-8,1,-5,5,3,1,5,-4,-4,7,-4,9,-7,-4,-8,-2,-3,-2,-1,2,-9,9,-2,1,1,5,10,-3,-6,4,8,-2,-8,-1,-3,2,-9,-8,-7,4,-6,-3,-4,7,-3,-6,6,4,-4,2,10,-1,-6,-8,7,1,5,-10,-10,1,-8,6,6,-8,7,-8,-4,3,-8,-5,5,6,9,8,-3,-5,-7,4,3,4,2,4,-2,7,10,-5,-7,-6,9,6,-3,2,1,3,-8,1,-10,-7,4,4,-8,-10,2,-3,-9,2,9,-2,-1,-4,4,10,-4,8,-3,-1,-3,-7,-6,5,-9,-9,-2,9,-8,4,-10,-5,5,2,10,-8,6,-8,-6,-10,-10,3,10,7,7,-9,10,-1,1,-3,-9,-4,8,1,-4,1,10,8,-8,-9,10,3,-1,-5,10,-3,-10,-5,-8,-2,-7,-8,9,-8,-5,-1,4,5,8,8,-7,-8,10,5,10,-2,-2,-6,10,-5,1,-10,-10,10,6,-10,1,-9,-1,-8,-4,2,3,-5,1,8,10,7,-4,9,-7,2,-7,6,7,-1,-6,-7,10,-2,5,-5,7,-4,10,-8,2,-2,2,9,4,10,-4,9,-10,4,-8,-10,-2,-5,-8,9,4,1,1,-5,9,-7,2,-6,6,10,1,-10,-4,3,-9,-2,-6,-6,2,-4,-7,-5,-8,3,-10,-7,-5,-4,-3,9,-1,-2,3,-4,9,5,10,7,10,1,5,3,-6,-6,-5,-8,7,3,-9,-4,-6,6,-10,3,3,10,-3,-7,-9,7,-10,-2,6,7,-2,-6,10,6,3,10,5,-5,4,-9,-6,8,-3,3,6,9,-10,8,-4,-2,4,-4,-3,-9,-10,-9,-7,2,-9,-1,4,-3,-4,-6,5,-7,9,10,-2,-8,-9,9,-8,-6,-6,10,-7,-4,-5,-9,-10,3,-2,3,4,-6,-10,9,-6,3,-1,1,9,9,8,6,8,9,-4,4,4,5,5,-2,-8,-10,-9,7,6,1,5,4,-9,-3,-3,-5,9,1,-3,-2,7,7,2,-1,1,-4,9,2,-9,3,4,-9,5,4,4,-6,-7,-4,-9,9,4,6,1,1,3,-2,-1,9,-4,3,-10,-6,6,-7,-4,4,-2,-3,-10,-3,-10,1,9,-9,-2,8,3,-8,5,-5,4,8,2,8,-8,7,7,1,-8,6,3,2,9,7,9,-2,-3,-10,-4,7,1,-1,-1,-2,-3,9,-4,5,4,9,6,-6,-2,4,-7,7,6,-6,-2,-6,-9,-2,9,-8,1,-6,-9,-6,1,6,-10,7,2,-4,4,-9,8,-5,3,8,9,1,-8,-8,6,8,8,3,-9,-4,7,-5,9,2,1,5,5,7,-4,2,-10,7,8,-10,7,9,9,10,3,-1,-1,-6,4,-10,10,-10,4,10,5,6,-6,-5,10,5,7,-10,4,-5,-1,1,-8,-4,8,2,-6,5,-7,8,-8,-3,-1,-5,8,7,6,-3,-9,-7,-4,10,9,-3,10,4,-6,-4,9,-6,-9,8,-1,10,-1,8,-5,-7,-6,9,-4,3,-9,9,-8,4,-7,3,-5,-1,1,4,-6,10,-1,-7,3,5,10,-9,10,-4,-8,-9,3,1,-7,-1,4,-6,-2,2,-6,-7,-2,3,-2,10,-7,2,9,5,6,1,-7,9,-2,7,9,-4,-2,4,5,3,5,1,9,-9,2,-9,7,-10,-8,-6,-1,-9,-7,-7,8,-2,7,6,1,-1,3,2,7,-8,-7,3,5,10,-6,2,-9,7,-2,-10,-8,4,4,-1,7,7,6,-1,1,-10,-10,-8,-9,-5,-10,1,-9,-1,-2,1,4,3,-7,8,6,2,10,-7,9,-9,-6,-6,7,5,10,9,5,3,-6,9,-8,-2,-2,-9,-8,1,1,8,-5,-9,10,-10,-2,6,-5,-4,5,-5,-4,2,-5,5,-10,-5,-5,-3,-4,9,-7,8,9,9,7,-4,8,-2,-9,-8,9,4,-8,8,-2,-10,1,3,9,5,-5,8,7,6,-8,-2,6,10,5,-5,-4,-5,2,-6,-1,-8,1,10,7,-1,10,1,-1,1,-8,4,1,8,9,-4,-6,7,-8,5,-2,-8,2,-8,10,-1,-6,-2,-6,10,-4,-8,-7,-8,-3,-8,-9,-7,6,4,-7,-6,-3,9,9,-7,-4,-3,-1,5,4,-8,10,4,3,3,6,-2,-6,-8,-2,9,-1,8,3,-5,5,-10,9,2,-3,-1,-2,7,3,4,10,1,6,-5,-3,8,6,-4,3,8,-10,-4,-9,4,-6,-7,-2,10,-8,-8,7,-8,3,9,-7,-1,-5,3,6,6,-6,8,1,-7,-3,7,-1,3,8,-10,-9,4,-8,8,4,7,6,1,5,4,3,10,-8,-7,-6,-1,-10,1,-4,3,2,2,-7,-5,1,2,5,-9,6,-1,-5,-1,9,-2,-10,3,-6,2,-7,6,8,-3,2,8,-8,-4,1,-7,-5,3,5,-9,-2,6,8,9,-2,1,-4,3,7,-4,-1,9,1,3,-10,9,-1,-3,-9,-7,5,-4,-6,-1,-4,-1,6,-3,4,5,10,7,-10,-2,-3,1,-6,6,-4,3,10,5,6,4,-7,3,4,-9,-2,-5,-10,2,-1,-8,-5,-5,6,2,-9,9,7,1,6,6,-1,-5,-9,-8,7,-7,4,-9,1,2,8,-4,-5,-6,5,1,5,8,2,4,10,10,-3,-6,-10,2,10,-5,-9,8,-5,9,-2,3,2,3,-1,8,4,8,-2,4,-4,-9,-9,8,-7,-3,-7,4,4,-1,-10,8,-3,-8,7,-7,10,-8,4,-3,5,1,-2,1,-10,-2,-3,4,9,9,3,-8,3,-2,-2,-9,10,-10,2,-10,-6,-5,-7,5,1,1,-1,7,-5,-2,-1,-7,-10,5,10,8,-10,-5,4,-4,-5,8,-5,1,-3,10,-5,-7,4,10,-7,-10,-1,-5,-6,-1,5,-8,-4,2,-5,1,7,-6,10,-5,-6,8,-1,-4,4,-9,-5,-9,9,8,4,-5,-9,-2,-8,-10,1,2,2,8,-1,7,7,7,-7,-9,6,2,6,8,10,-10,5,2,10,-5,8,-9,8,-10,-2,-8,4,8,5,-5,4,-5,-9,-8,6,2,-3,-8,8,6,6,10,3,9,4,10,-1,-8,-1,-1,-8,-10,5,-2,5,-3,-9,10,-3,-9,-2,6,5,6,-8,4,10,-7,-1,8,-4,-6,7,6,-4,8,5,1,-6,7,-4,2,-6,-10,5,-4,10,3,-5,-7,5,4,7,-1,4,1,-10,3,9,2,1,4,-3,7,7,6,9,-3,9,3,3,-1,-4,-6,8,-8,3,8,-8,-5,-1,8,-2,8,4,-3,3,9,-10,2,-4,-5,-2,-2,-8,-5,7,8,-4,-1,6,-7,-9,10,-3,5,3,-4,-3,-3,-1,-1,-4,8,-5,-6,2,-2,2,-10,4,-2,-3,2,-3,8,-5,-4,6,-7,-2,4,8,7,-9,7,-10,10,5,1,7,2,6,3,10,5,-4,-6,-4,-4,-7,6,-10,-3,8,-3,-3,7,10,3,9,-10,8,5,8,-7,-10], dtype = "int64")#candidate|6097|(1650,)|const|int64
call_6095 = relay.TupleGetItem(func_5567_call(relay.reshape(var_6096.astype('int64'), [1, 15, 11]), relay.reshape(const_6097.astype('int64'), [10, 15, 11]), ), 0)
call_6098 = relay.TupleGetItem(func_5570_call(relay.reshape(var_6096.astype('int64'), [1, 15, 11]), relay.reshape(const_6097.astype('int64'), [10, 15, 11]), ), 0)
output = relay.Tuple([bop_6073,call_6095,var_6096,const_6097,])
output2 = relay.Tuple([bop_6076,call_6098,var_6096,const_6097,])
func_6113 = relay.Function([var_6072,var_6096,], output)
mod['func_6113'] = func_6113
mod = relay.transform.InferType()(mod)
var_6114 = relay.var("var_6114", dtype = "bool", shape = (11, 4, 2))#candidate|6114|(11, 4, 2)|var|bool
var_6115 = relay.var("var_6115", dtype = "int64", shape = (165,))#candidate|6115|(165,)|var|int64
output = func_6113(var_6114,var_6115,)
func_6116 = relay.Function([var_6114,var_6115,], output)
mutated_mod['func_6116'] = func_6116
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1006_call = mod.get_global_var('func_1006')
func_1008_call = mutated_mod.get_global_var('func_1008')
call_6118 = func_1006_call()
call_6119 = func_1006_call()
func_6012_call = mod.get_global_var('func_6012')
func_6014_call = mutated_mod.get_global_var('func_6014')
call_6153 = func_6012_call()
call_6154 = func_6012_call()
func_1531_call = mod.get_global_var('func_1531')
func_1533_call = mutated_mod.get_global_var('func_1533')
call_6158 = relay.TupleGetItem(func_1531_call(), 0)
call_6159 = relay.TupleGetItem(func_1533_call(), 0)
func_1794_call = mod.get_global_var('func_1794')
func_1796_call = mutated_mod.get_global_var('func_1796')
var_6161 = relay.var("var_6161", dtype = "float32", shape = (420,))#candidate|6161|(420,)|var|float32
call_6160 = func_1794_call(relay.reshape(var_6161.astype('float32'), [10, 7, 6]))
call_6162 = func_1794_call(relay.reshape(var_6161.astype('float32'), [10, 7, 6]))
bop_6192 = relay.less(call_6160.astype('bool'), relay.reshape(var_6161.astype('bool'), relay.shape_of(call_6160))) # shape=(10, 7, 6)
bop_6195 = relay.less(call_6162.astype('bool'), relay.reshape(var_6161.astype('bool'), relay.shape_of(call_6162))) # shape=(10, 7, 6)
func_686_call = mod.get_global_var('func_686')
func_687_call = mutated_mod.get_global_var('func_687')
call_6201 = func_686_call()
call_6202 = func_686_call()
output = relay.Tuple([call_6118,call_6153,call_6158,bop_6192,call_6201,])
output2 = relay.Tuple([call_6119,call_6154,call_6159,bop_6195,call_6202,])
func_6203 = relay.Function([var_6161,], output)
mod['func_6203'] = func_6203
mod = relay.transform.InferType()(mod)
var_6204 = relay.var("var_6204", dtype = "float32", shape = (420,))#candidate|6204|(420,)|var|float32
output = func_6203(var_6204)
func_6205 = relay.Function([var_6204], output)
mutated_mod['func_6205'] = func_6205
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4352_call = mod.get_global_var('func_4352')
func_4353_call = mutated_mod.get_global_var('func_4353')
call_6215 = func_4352_call()
call_6216 = func_4352_call()
func_4484_call = mod.get_global_var('func_4484')
func_4487_call = mutated_mod.get_global_var('func_4487')
var_6236 = relay.var("var_6236", dtype = "float32", shape = (77, 7))#candidate|6236|(77, 7)|var|float32
call_6235 = relay.TupleGetItem(func_4484_call(relay.reshape(var_6236.astype('float32'), [11, 7, 7])), 1)
call_6237 = relay.TupleGetItem(func_4487_call(relay.reshape(var_6236.astype('float32'), [11, 7, 7])), 1)
func_81_call = mod.get_global_var('func_81')
func_85_call = mutated_mod.get_global_var('func_85')
call_6241 = relay.TupleGetItem(func_81_call(relay.reshape(call_6215.astype('float32'), [11, 4, 2]), relay.reshape(call_6235.astype('float32'), [11, 4, 2]), ), 0)
call_6242 = relay.TupleGetItem(func_85_call(relay.reshape(call_6215.astype('float32'), [11, 4, 2]), relay.reshape(call_6235.astype('float32'), [11, 4, 2]), ), 0)
const_6251 = relay.const([[1.727975,9.490613,-5.477319,-4.513769,-9.171632,6.546457,-1.423338],[-8.750625,-9.438595,-6.871293,-3.117709,4.738821,-1.378168,-9.928038],[-7.570352,7.146309,4.967580,0.572657,-7.338490,-9.303135,6.612592],[5.042741,-7.352281,-7.139281,5.745727,-8.091947,-8.452295,-3.013905],[1.990183,8.513086,-0.895111,7.995647,9.818115,-4.842746,-2.806376],[0.088028,-7.886257,7.323335,-1.805997,4.872778,4.650028,-9.611819],[2.004014,-2.283765,0.322898,2.565385,2.481543,-1.920268,7.661667],[-1.850605,8.762828,-5.369004,-2.735013,-2.241874,0.539369,-9.268272],[7.115810,-5.587201,5.450012,8.619065,-0.312510,7.039626,8.914995],[-8.669260,-3.680289,1.859226,-4.774619,7.756348,4.657065,-2.864018],[4.430246,6.086589,5.514284,-1.239339,1.271406,8.804431,-9.285757],[0.466830,-9.438656,-9.921251,-5.049970,-8.497596,4.520787,0.748143],[6.136406,6.413907,-8.534118,2.502161,-3.232606,-5.951062,1.108255],[7.187916,-5.988096,-9.761002,8.284343,7.666432,-3.133917,-3.909328],[7.417147,-0.754968,7.276034,-2.538303,9.379156,0.790275,9.628680],[8.038947,-5.613592,-6.987084,8.424109,9.369963,1.115246,-1.514727],[1.023927,-8.386712,-4.496752,5.574107,-2.219914,5.122569,-9.293190],[-6.830447,-9.907812,-8.644476,-1.598049,-2.503499,1.892376,-9.807676],[-9.763176,-0.051440,-5.745158,3.045942,-9.566341,-3.125458,-6.362746],[-3.793413,7.271377,-6.122080,-4.958986,-6.564666,2.919315,-1.586137],[-0.343063,8.124569,1.507941,-3.308887,-2.479391,-1.924714,6.186447],[-7.429926,-9.083490,-4.972247,0.112226,3.637710,2.760658,-3.987538],[-1.257732,-5.380001,-5.616225,-9.678054,8.633958,2.153791,-2.050112],[-1.169775,-8.573833,3.451424,0.059061,-5.043910,-3.912412,-8.416508],[1.974207,-7.371535,8.094460,5.037641,-8.147850,6.246390,-5.723126],[-7.285497,-3.479451,-7.927666,3.983758,1.773429,2.468439,7.513064],[-7.736911,-3.220037,-6.762858,0.361514,7.939065,2.386681,-0.994730],[5.243754,9.384684,9.995370,4.226759,8.027001,5.538317,2.013689],[-0.069429,-7.288210,9.384402,4.173233,0.141525,7.214650,2.060173],[4.686261,-0.686892,-4.326647,-1.840100,4.526868,-2.025647,-9.573806],[-2.687270,-4.768320,-9.984306,7.294943,7.648856,0.527101,8.890092],[4.929310,-8.073798,0.231982,-6.973037,-0.913282,7.772401,-5.380894],[-6.192685,-6.161244,-3.415012,-6.710141,5.832515,-9.605991,-5.814803],[-8.809373,5.794891,-0.520496,-6.040600,-6.863620,1.066811,8.346040],[-4.639922,-0.512968,-6.959490,5.550143,-1.730198,4.508085,3.939840],[-5.057378,4.845387,-3.743022,8.613529,-2.482139,-6.827285,-3.836058],[-2.468073,-3.420910,9.598117,1.899448,2.288829,-8.327638,-0.099949],[-7.813421,-7.638208,2.332295,8.813968,-1.818772,-0.049631,-5.827686],[1.247812,6.820530,-7.813830,-9.512302,-8.744136,0.045075,6.005941],[0.429422,9.379891,2.508746,0.234103,2.073349,-9.362540,0.977837],[6.028770,6.333018,-7.699088,-6.014285,4.810654,-5.498105,-7.756545],[3.713270,0.065077,-6.034989,-6.649058,-9.616835,-0.436992,-7.203502],[6.589726,-6.706634,2.439806,3.219188,-5.268397,-3.393862,8.066789],[2.851991,-6.730412,3.793689,-4.402990,-3.667233,6.044100,-3.297939],[1.365556,0.223719,-2.805398,7.812283,1.131515,8.024296,-9.241823],[6.751503,-0.795113,6.940721,-4.237699,-4.432314,-1.997343,6.197448],[-0.298205,-7.851538,5.088546,-2.944491,8.498604,4.855490,3.872034],[-7.222519,4.860604,8.191836,-3.429715,-5.704271,2.833483,7.145693],[-5.272217,1.665520,-1.644646,-4.297193,0.182196,5.773460,-6.483785],[-9.544894,4.246350,7.095802,-2.680400,-2.757264,5.694548,1.544488],[-6.152518,0.740623,-5.256464,4.957532,-3.564461,-7.187032,-7.795853],[-6.676259,-6.717911,-6.995027,4.181536,-8.967237,-3.569506,-2.705144],[-6.676027,-8.641083,8.374354,0.162666,3.217940,-6.909068,-9.003979],[7.210635,4.855907,0.056640,-7.868824,1.588065,1.101709,-1.196117],[2.707627,9.854215,-0.658498,-1.989849,3.534111,5.581769,-9.440382],[-4.575955,-2.098535,5.399371,0.506983,-2.016460,3.004938,6.667443],[3.585175,-0.178491,6.004968,-0.068265,-5.011747,4.522797,-8.211772],[-8.709157,-6.847166,3.916464,-7.054154,-0.134388,5.247633,-5.823573],[0.356062,5.661055,5.438343,7.819041,-7.609337,-6.066336,-4.726318],[-2.718170,4.765964,9.403809,-2.958718,-6.776355,2.666504,-3.473471],[6.419652,6.818883,7.432100,-9.427637,3.475681,0.631304,3.613205],[-1.506335,8.864019,3.872812,2.023137,-9.619065,8.313278,-9.534734],[-1.576714,-0.733311,0.748972,-5.460792,-4.143708,5.796516,-9.165561],[9.047290,9.054741,7.350302,6.312549,8.397672,1.690636,-0.813483],[-2.260210,6.993115,6.637511,6.055981,-2.431909,8.148624,-9.471682],[-5.529130,6.182841,-6.558032,0.110007,5.364499,-9.184212,4.480489],[0.998530,2.417908,-0.883075,-0.065703,-7.989923,7.991612,0.082769],[5.304365,5.843858,-5.248059,-0.526537,2.824161,-8.291626,-0.044536],[5.369399,-0.904112,1.015486,5.447370,-8.382442,0.324719,0.041897],[9.574061,-9.789181,-4.397383,-6.163319,-8.022250,1.701678,-2.472633],[9.385357,2.505567,-1.925085,3.805342,6.900475,-6.116870,-6.477517],[-7.543627,-2.891274,-0.913716,-4.226494,-5.373833,5.481027,5.679740],[7.823915,-5.810228,-2.453750,8.753525,8.108465,-6.747444,0.126192],[-7.151194,0.906284,6.673289,4.169486,-0.968625,-0.852341,-6.384663],[0.833265,0.590993,-3.994261,8.487149,5.252863,0.921753,6.729275],[5.974598,-4.733678,-3.942111,-5.827264,8.423399,1.961718,6.518417],[9.386305,7.789656,-2.432779,3.116374,-5.196210,8.166574,5.224814]], dtype = "float32")#candidate|6251|(77, 7)|const|float32
bop_6252 = relay.add(var_6236.astype('int64'), relay.reshape(const_6251.astype('int64'), relay.shape_of(var_6236))) # shape=(77, 7)
func_1047_call = mod.get_global_var('func_1047')
func_1049_call = mutated_mod.get_global_var('func_1049')
call_6259 = relay.TupleGetItem(func_1047_call(), 0)
call_6260 = relay.TupleGetItem(func_1049_call(), 0)
func_2291_call = mod.get_global_var('func_2291')
func_2294_call = mutated_mod.get_global_var('func_2294')
call_6262 = relay.TupleGetItem(func_2291_call(relay.reshape(call_6241.astype('float32'), [11, 4, 2])), 0)
call_6263 = relay.TupleGetItem(func_2294_call(relay.reshape(call_6241.astype('float32'), [11, 4, 2])), 0)
uop_6284 = relay.atan(var_6236.astype('float32')) # shape=(77, 7)
bop_6289 = relay.divide(uop_6284.astype('float32'), relay.reshape(bop_6252.astype('float32'), relay.shape_of(uop_6284))) # shape=(77, 7)
output = relay.Tuple([call_6215,call_6235,call_6241,call_6259,call_6262,bop_6289,])
output2 = relay.Tuple([call_6216,call_6237,call_6242,call_6260,call_6263,bop_6289,])
func_6304 = relay.Function([var_6236,], output)
mod['func_6304'] = func_6304
mod = relay.transform.InferType()(mod)
var_6305 = relay.var("var_6305", dtype = "float32", shape = (77, 7))#candidate|6305|(77, 7)|var|float32
output = func_6304(var_6305)
func_6306 = relay.Function([var_6305], output)
mutated_mod['func_6306'] = func_6306
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5633_call = mod.get_global_var('func_5633')
func_5635_call = mutated_mod.get_global_var('func_5635')
call_6323 = relay.TupleGetItem(func_5633_call(), 0)
call_6324 = relay.TupleGetItem(func_5635_call(), 0)
func_4432_call = mod.get_global_var('func_4432')
func_4434_call = mutated_mod.get_global_var('func_4434')
call_6335 = func_4432_call()
call_6336 = func_4432_call()
output = relay.Tuple([call_6323,call_6335,])
output2 = relay.Tuple([call_6324,call_6336,])
func_6350 = relay.Function([], output)
mod['func_6350'] = func_6350
mod = relay.transform.InferType()(mod)
output = func_6350()
func_6351 = relay.Function([], output)
mutated_mod['func_6351'] = func_6351
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2727_call = mod.get_global_var('func_2727')
func_2729_call = mutated_mod.get_global_var('func_2729')
call_6404 = relay.TupleGetItem(func_2727_call(), 2)
call_6405 = relay.TupleGetItem(func_2729_call(), 2)
func_1868_call = mod.get_global_var('func_1868')
func_1869_call = mutated_mod.get_global_var('func_1869')
call_6411 = func_1868_call()
call_6412 = func_1868_call()
func_6012_call = mod.get_global_var('func_6012')
func_6014_call = mutated_mod.get_global_var('func_6014')
call_6466 = func_6012_call()
call_6467 = func_6012_call()
output = relay.Tuple([call_6404,call_6411,call_6466,])
output2 = relay.Tuple([call_6405,call_6412,call_6467,])
func_6472 = relay.Function([], output)
mod['func_6472'] = func_6472
mod = relay.transform.InferType()(mod)
output = func_6472()
func_6473 = relay.Function([], output)
mutated_mod['func_6473'] = func_6473
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6508 = relay.const([[[1.284415,0.569644,4.469854,6.994925,4.378805],[-7.050531,2.887386,5.277845,4.692029,5.148982],[7.689459,-0.613632,5.616941,-7.296126,3.383277]],[[5.212891,-9.362822,3.767475,1.179921,-9.720403],[8.540397,2.899705,-7.621816,-1.111321,-8.449092],[-1.750213,-3.762441,-3.238627,-6.569410,-1.840162]],[[-5.602778,-0.989603,-4.999887,-4.437482,-2.884494],[-8.411471,-9.565026,-6.357793,6.956181,-3.825241],[5.624491,4.434758,6.244501,5.567830,-2.810281]],[[3.717358,1.236723,0.688314,1.153501,-1.395665],[5.434011,-6.780575,-0.178871,-8.665930,4.119791],[1.988438,7.637636,-7.551104,-3.441190,-5.402204]],[[-5.719508,7.622432,6.846603,1.635731,9.370714],[2.742317,8.031035,-4.379537,-3.059849,6.851716],[9.969358,-0.488192,5.421064,6.282071,6.200012]],[[-5.143302,-2.184157,8.995282,4.425095,-8.107004],[-2.447252,0.140582,2.907109,3.973212,-7.918564],[-6.179388,-8.397078,-4.138223,5.149205,4.787359]]], dtype = "float64")#candidate|6508|(6, 3, 5)|const|float64
uop_6509 = relay.log10(const_6508.astype('float64')) # shape=(6, 3, 5)
bop_6511 = relay.logical_and(const_6508.astype('bool'), relay.reshape(uop_6509.astype('bool'), relay.shape_of(const_6508))) # shape=(6, 3, 5)
bop_6515 = relay.bitwise_and(bop_6511.astype('int64'), relay.reshape(const_6508.astype('int64'), relay.shape_of(bop_6511))) # shape=(6, 3, 5)
uop_6524 = relay.rsqrt(uop_6509.astype('float64')) # shape=(6, 3, 5)
bop_6528 = relay.equal(uop_6509.astype('bool'), relay.reshape(uop_6524.astype('bool'), relay.shape_of(uop_6509))) # shape=(6, 3, 5)
bop_6537 = relay.multiply(bop_6528.astype('int8'), relay.reshape(uop_6509.astype('int8'), relay.shape_of(bop_6528))) # shape=(6, 3, 5)
output = relay.Tuple([bop_6515,bop_6537,])
output2 = relay.Tuple([bop_6515,bop_6537,])
func_6554 = relay.Function([], output)
mod['func_6554'] = func_6554
mod = relay.transform.InferType()(mod)
output = func_6554()
func_6555 = relay.Function([], output)
mutated_mod['func_6555'] = func_6555
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4589_call = mod.get_global_var('func_4589')
func_4590_call = mutated_mod.get_global_var('func_4590')
call_6597 = relay.TupleGetItem(func_4589_call(), 0)
call_6598 = relay.TupleGetItem(func_4590_call(), 0)
func_4202_call = mod.get_global_var('func_4202')
func_4204_call = mutated_mod.get_global_var('func_4204')
call_6603 = relay.TupleGetItem(func_4202_call(), 1)
call_6604 = relay.TupleGetItem(func_4204_call(), 1)
output = relay.Tuple([call_6597,call_6603,])
output2 = relay.Tuple([call_6598,call_6604,])
func_6620 = relay.Function([], output)
mod['func_6620'] = func_6620
mod = relay.transform.InferType()(mod)
output = func_6620()
func_6621 = relay.Function([], output)
mutated_mod['func_6621'] = func_6621
mutated_mod = relay.transform.InferType()(mutated_mod)
func_534_call = mod.get_global_var('func_534')
func_536_call = mutated_mod.get_global_var('func_536')
call_6688 = relay.TupleGetItem(func_534_call(), 1)
call_6689 = relay.TupleGetItem(func_536_call(), 1)
func_403_call = mod.get_global_var('func_403')
func_405_call = mutated_mod.get_global_var('func_405')
call_6690 = relay.TupleGetItem(func_403_call(), 2)
call_6691 = relay.TupleGetItem(func_405_call(), 2)
func_898_call = mod.get_global_var('func_898')
func_901_call = mutated_mod.get_global_var('func_901')
call_6693 = relay.TupleGetItem(func_898_call(relay.reshape(call_6688.astype('float32'), [22, 4])), 0)
call_6694 = relay.TupleGetItem(func_901_call(relay.reshape(call_6688.astype('float32'), [22, 4])), 0)
func_3547_call = mod.get_global_var('func_3547')
func_3548_call = mutated_mod.get_global_var('func_3548')
call_6701 = relay.TupleGetItem(func_3547_call(), 0)
call_6702 = relay.TupleGetItem(func_3548_call(), 0)
func_403_call = mod.get_global_var('func_403')
func_405_call = mutated_mod.get_global_var('func_405')
call_6703 = relay.TupleGetItem(func_403_call(), 1)
call_6704 = relay.TupleGetItem(func_405_call(), 1)
var_6707 = relay.var("var_6707", dtype = "float32", shape = (22, 4))#candidate|6707|(22, 4)|var|float32
bop_6708 = relay.logical_and(call_6703.astype('bool'), relay.reshape(var_6707.astype('bool'), relay.shape_of(call_6703))) # shape=(22, 4)
bop_6711 = relay.logical_and(call_6704.astype('bool'), relay.reshape(var_6707.astype('bool'), relay.shape_of(call_6704))) # shape=(22, 4)
output = relay.Tuple([call_6688,call_6690,call_6693,call_6701,bop_6708,])
output2 = relay.Tuple([call_6689,call_6691,call_6694,call_6702,bop_6711,])
func_6714 = relay.Function([var_6707,], output)
mod['func_6714'] = func_6714
mod = relay.transform.InferType()(mod)
mutated_mod['func_6714'] = func_6714
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6715 = relay.var("var_6715", dtype = "float32", shape = (22, 4))#candidate|6715|(22, 4)|var|float32
func_6714_call = mutated_mod.get_global_var('func_6714')
call_6716 = func_6714_call(var_6715)
output = call_6716
func_6717 = relay.Function([var_6715], output)
mutated_mod['func_6717'] = func_6717
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3181_call = mod.get_global_var('func_3181')
func_3183_call = mutated_mod.get_global_var('func_3183')
call_6729 = func_3181_call()
call_6730 = func_3181_call()
output = relay.Tuple([call_6729,])
output2 = relay.Tuple([call_6730,])
func_6750 = relay.Function([], output)
mod['func_6750'] = func_6750
mod = relay.transform.InferType()(mod)
mutated_mod['func_6750'] = func_6750
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6750_call = mutated_mod.get_global_var('func_6750')
call_6751 = func_6750_call()
output = call_6751
func_6752 = relay.Function([], output)
mutated_mod['func_6752'] = func_6752
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3507_call = mod.get_global_var('func_3507')
func_3509_call = mutated_mod.get_global_var('func_3509')
call_6778 = func_3507_call()
call_6779 = func_3507_call()
func_735_call = mod.get_global_var('func_735')
func_737_call = mutated_mod.get_global_var('func_737')
call_6791 = relay.TupleGetItem(func_735_call(), 0)
call_6792 = relay.TupleGetItem(func_737_call(), 0)
output = relay.Tuple([call_6778,call_6791,])
output2 = relay.Tuple([call_6779,call_6792,])
func_6811 = relay.Function([], output)
mod['func_6811'] = func_6811
mod = relay.transform.InferType()(mod)
output = func_6811()
func_6812 = relay.Function([], output)
mutated_mod['func_6812'] = func_6812
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6866 = relay.var("var_6866", dtype = "int16", shape = (8, 8, 7))#candidate|6866|(8, 8, 7)|var|int16
var_6867 = relay.var("var_6867", dtype = "int16", shape = (8, 8, 7))#candidate|6867|(8, 8, 7)|var|int16
bop_6868 = relay.bitwise_and(var_6866.astype('int16'), relay.reshape(var_6867.astype('int16'), relay.shape_of(var_6866))) # shape=(8, 8, 7)
func_1235_call = mod.get_global_var('func_1235')
func_1238_call = mutated_mod.get_global_var('func_1238')
const_6879 = relay.const([False,False,True,True,True,False,False,False,True,True,True,True,True,False,False,False,True,False,True,False,True,False,False,True,True,True,False,False,False,False,False,False,True,True,True,False,True,True,True,False,False,False,True,False,False,True,False,True,True,True,True,True,False,True,False,True,False,False,True,True,False,True,True,True,False,True,False,False,False,True,False,True,True,False,True,True,True,True,False,True,True,True,False,True,False,False,False,True], dtype = "bool")#candidate|6879|(88,)|const|bool
call_6878 = relay.TupleGetItem(func_1235_call(relay.reshape(const_6879.astype('bool'), [11, 4, 2]), relay.reshape(const_6879.astype('bool'), [11, 4, 2]), ), 1)
call_6880 = relay.TupleGetItem(func_1238_call(relay.reshape(const_6879.astype('bool'), [11, 4, 2]), relay.reshape(const_6879.astype('bool'), [11, 4, 2]), ), 1)
output = relay.Tuple([bop_6868,call_6878,const_6879,])
output2 = relay.Tuple([bop_6868,call_6880,const_6879,])
func_6883 = relay.Function([var_6866,var_6867,], output)
mod['func_6883'] = func_6883
mod = relay.transform.InferType()(mod)
mutated_mod['func_6883'] = func_6883
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6883_call = mutated_mod.get_global_var('func_6883')
var_6885 = relay.var("var_6885", dtype = "int16", shape = (8, 8, 7))#candidate|6885|(8, 8, 7)|var|int16
var_6886 = relay.var("var_6886", dtype = "int16", shape = (8, 8, 7))#candidate|6886|(8, 8, 7)|var|int16
call_6884 = func_6883_call(var_6885,var_6886,)
output = call_6884
func_6887 = relay.Function([var_6885,var_6886,], output)
mutated_mod['func_6887'] = func_6887
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3596_call = mod.get_global_var('func_3596')
func_3598_call = mutated_mod.get_global_var('func_3598')
call_6900 = relay.TupleGetItem(func_3596_call(), 1)
call_6901 = relay.TupleGetItem(func_3598_call(), 1)
output = relay.Tuple([call_6900,])
output2 = relay.Tuple([call_6901,])
func_6909 = relay.Function([], output)
mod['func_6909'] = func_6909
mod = relay.transform.InferType()(mod)
output = func_6909()
func_6910 = relay.Function([], output)
mutated_mod['func_6910'] = func_6910
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3244_call = mod.get_global_var('func_3244')
func_3245_call = mutated_mod.get_global_var('func_3245')
call_6954 = relay.TupleGetItem(func_3244_call(), 1)
call_6955 = relay.TupleGetItem(func_3245_call(), 1)
func_4516_call = mod.get_global_var('func_4516')
func_4517_call = mutated_mod.get_global_var('func_4517')
call_6963 = relay.TupleGetItem(func_4516_call(), 1)
call_6964 = relay.TupleGetItem(func_4517_call(), 1)
func_101_call = mod.get_global_var('func_101')
func_102_call = mutated_mod.get_global_var('func_102')
call_6968 = relay.TupleGetItem(func_101_call(), 1)
call_6969 = relay.TupleGetItem(func_102_call(), 1)
func_6811_call = mod.get_global_var('func_6811')
func_6812_call = mutated_mod.get_global_var('func_6812')
call_6970 = relay.TupleGetItem(func_6811_call(), 0)
call_6971 = relay.TupleGetItem(func_6812_call(), 0)
func_1848_call = mod.get_global_var('func_1848')
func_1851_call = mutated_mod.get_global_var('func_1851')
var_6976 = relay.var("var_6976", dtype = "uint32", shape = (448,))#candidate|6976|(448,)|var|uint32
call_6975 = relay.TupleGetItem(func_1848_call(relay.reshape(var_6976.astype('uint32'), [16, 4, 7])), 0)
call_6977 = relay.TupleGetItem(func_1851_call(relay.reshape(var_6976.astype('uint32'), [16, 4, 7])), 0)
uop_6993 = relay.asinh(call_6975.astype('float32')) # shape=(16, 4, 7)
uop_6995 = relay.asinh(call_6977.astype('float32')) # shape=(16, 4, 7)
output = relay.Tuple([call_6954,call_6963,call_6968,call_6970,var_6976,uop_6993,])
output2 = relay.Tuple([call_6955,call_6964,call_6969,call_6971,var_6976,uop_6995,])
func_6998 = relay.Function([var_6976,], output)
mod['func_6998'] = func_6998
mod = relay.transform.InferType()(mod)
mutated_mod['func_6998'] = func_6998
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6999 = relay.var("var_6999", dtype = "uint32", shape = (448,))#candidate|6999|(448,)|var|uint32
func_6998_call = mutated_mod.get_global_var('func_6998')
call_7000 = func_6998_call(var_6999)
output = call_7000
func_7001 = relay.Function([var_6999], output)
mutated_mod['func_7001'] = func_7001
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1868_call = mod.get_global_var('func_1868')
func_1869_call = mutated_mod.get_global_var('func_1869')
call_7006 = func_1868_call()
call_7007 = func_1868_call()
func_4816_call = mod.get_global_var('func_4816')
func_4817_call = mutated_mod.get_global_var('func_4817')
call_7039 = relay.TupleGetItem(func_4816_call(), 0)
call_7040 = relay.TupleGetItem(func_4817_call(), 0)
func_2522_call = mod.get_global_var('func_2522')
func_2524_call = mutated_mod.get_global_var('func_2524')
call_7066 = relay.TupleGetItem(func_2522_call(), 0)
call_7067 = relay.TupleGetItem(func_2524_call(), 0)
func_5907_call = mod.get_global_var('func_5907')
func_5908_call = mutated_mod.get_global_var('func_5908')
call_7082 = relay.TupleGetItem(func_5907_call(), 1)
call_7083 = relay.TupleGetItem(func_5908_call(), 1)
output = relay.Tuple([call_7006,call_7039,call_7066,call_7082,])
output2 = relay.Tuple([call_7007,call_7040,call_7067,call_7083,])
func_7092 = relay.Function([], output)
mod['func_7092'] = func_7092
mod = relay.transform.InferType()(mod)
output = func_7092()
func_7093 = relay.Function([], output)
mutated_mod['func_7093'] = func_7093
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5291_call = mod.get_global_var('func_5291')
func_5293_call = mutated_mod.get_global_var('func_5293')
call_7108 = relay.TupleGetItem(func_5291_call(), 1)
call_7109 = relay.TupleGetItem(func_5293_call(), 1)
output = relay.Tuple([call_7108,])
output2 = relay.Tuple([call_7109,])
func_7112 = relay.Function([], output)
mod['func_7112'] = func_7112
mod = relay.transform.InferType()(mod)
mutated_mod['func_7112'] = func_7112
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7112_call = mutated_mod.get_global_var('func_7112')
call_7113 = func_7112_call()
output = call_7113
func_7114 = relay.Function([], output)
mutated_mod['func_7114'] = func_7114
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7112_call = mod.get_global_var('func_7112')
func_7114_call = mutated_mod.get_global_var('func_7114')
call_7133 = relay.TupleGetItem(func_7112_call(), 0)
call_7134 = relay.TupleGetItem(func_7114_call(), 0)
func_3285_call = mod.get_global_var('func_3285')
func_3287_call = mutated_mod.get_global_var('func_3287')
var_7161 = relay.var("var_7161", dtype = "float64", shape = (5120,))#candidate|7161|(5120,)|var|float64
call_7160 = relay.TupleGetItem(func_3285_call(relay.reshape(var_7161.astype('float64'), [2560, 2])), 1)
call_7162 = relay.TupleGetItem(func_3287_call(relay.reshape(var_7161.astype('float64'), [2560, 2])), 1)
func_2522_call = mod.get_global_var('func_2522')
func_2524_call = mutated_mod.get_global_var('func_2524')
call_7178 = relay.TupleGetItem(func_2522_call(), 1)
call_7179 = relay.TupleGetItem(func_2524_call(), 1)
var_7182 = relay.var("var_7182", dtype = "float64", shape = (5120,))#candidate|7182|(5120,)|var|float64
bop_7183 = relay.greater_equal(var_7161.astype('bool'), relay.reshape(var_7182.astype('bool'), relay.shape_of(var_7161))) # shape=(5120,)
func_5383_call = mod.get_global_var('func_5383')
func_5385_call = mutated_mod.get_global_var('func_5385')
call_7195 = relay.TupleGetItem(func_5383_call(), 0)
call_7196 = relay.TupleGetItem(func_5385_call(), 0)
output = relay.Tuple([call_7133,call_7160,call_7178,bop_7183,call_7195,])
output2 = relay.Tuple([call_7134,call_7162,call_7179,bop_7183,call_7196,])
func_7197 = relay.Function([var_7161,var_7182,], output)
mod['func_7197'] = func_7197
mod = relay.transform.InferType()(mod)
var_7198 = relay.var("var_7198", dtype = "float64", shape = (5120,))#candidate|7198|(5120,)|var|float64
var_7199 = relay.var("var_7199", dtype = "float64", shape = (5120,))#candidate|7199|(5120,)|var|float64
output = func_7197(var_7198,var_7199,)
func_7200 = relay.Function([var_7198,var_7199,], output)
mutated_mod['func_7200'] = func_7200
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4473_call = mod.get_global_var('func_4473')
func_4474_call = mutated_mod.get_global_var('func_4474')
call_7213 = func_4473_call()
call_7214 = func_4473_call()
func_4275_call = mod.get_global_var('func_4275')
func_4278_call = mutated_mod.get_global_var('func_4278')
const_7231 = relay.const([-6.621455,-1.840301,-1.395373,-4.001286,9.567076,8.368740,2.105851,-5.517968,-9.615457,-5.473685,-9.650482,-6.599592,4.990701,2.311732,-6.986843,8.602112,-0.276593,1.585948,-2.019964,7.012740,7.913012,-2.283076,3.712666,-6.922177,-3.111115,1.549924,-3.216162,5.551747,1.252216,-8.019213,1.093753,-3.082736,-5.278924,-4.555554,-2.232562,-6.914412,5.978475,-8.914327,8.050490,-2.511387,0.926200,9.757037,3.902414,7.777268,8.421382,-7.583579,0.829993,3.253637,-3.489373,4.147153,8.685370,-4.594254,-3.028932,-3.172060,-6.474102,-3.250894,-0.028037,9.703050,-5.660370,-2.664073,-6.670048,-3.291646,-7.520898,0.871171,3.059071,7.298503,-0.293143,1.759076,-0.992623,1.290592,-2.971856,-1.465689,2.680605,-9.105194,8.830868,2.816771,-5.613882,2.606308,1.965972,4.853208,3.959560,-2.244944,8.413966,1.866638,7.288677,-4.645135,-6.140502,-2.228236,-7.087491,6.328402,1.021181,2.448918,-3.713132,-3.056328,-4.145027,-5.105241,-8.570956,0.701992,9.427742,8.902404,4.350878,-1.411422,4.774660,2.005363,-3.531421,6.692030,-8.380149,4.495710,2.909708,-7.112771,5.540974,-6.068572,0.973882,8.002178,-7.340421,6.341793,-6.356784,5.357187,-2.575869,0.039755,9.940324,5.094321,-7.204394,-4.339708,-7.510212,2.730911,9.038331,-6.995238,9.465136,6.857422,-5.119110,-4.847404,7.237400,-9.550325,-7.795419,-9.805037,-2.237661,8.668135,-5.481843,3.941450,8.642501,-4.873500,-9.825660,5.531386,5.751882,2.933085,-0.833005,-2.122090,6.317396,3.118338,8.954148,3.049937,5.399555,-3.509283,-1.938351,6.979612,-4.831718,-3.104397,-4.363148,-0.768435,5.612829,8.258349,4.906685,0.964283,0.917278,6.471637,-9.440101,-9.034270,3.735423,9.715790,-3.628773,1.520999,-5.869489,6.565441,-9.429652,-0.452475,6.218860,7.055325,-9.312854,5.216747,8.477230,-3.304143,3.241394,-1.749511,6.484125,-9.910003,-9.175925,-4.144953,-9.328061,3.529907,4.746419,-6.974982,8.199090,-2.365655,-1.832657,4.372186,-4.872736,9.354333,6.047667,-4.870796,3.770243,-6.804002,6.018664,-2.372856,1.859373,-6.024285,-2.575289,4.560125,-1.594014,0.610499,-3.575268,-5.901315,-3.136154,-6.228811,7.455885,-4.422144,-5.180891,-5.756104,8.879216,9.840413,-5.870586,5.752957,-8.490427,7.382285,-5.418032,2.492258,9.667555,3.138895,9.937303,5.877833,2.306854,6.003390,4.196050,6.329326,-4.670996,8.305149,-2.688235,6.592366,6.308774,7.433227,3.716968,-9.277574,-8.370069,-1.659425,-1.628524,9.293276,7.748278,0.661251,-3.554302,7.664434,5.637365,-1.595338,-3.872288,-5.967781,-5.638487,6.103269,-3.923356,-6.451234,-3.305680,-1.065336,8.104429,-3.214182,-9.572680,2.412543,-1.497402,9.348291,7.786576,6.708064,-6.177594,2.195369,2.536892,-8.324371,8.784105,-6.650047,-4.448180,-0.473412,-1.216582,-9.955644,-0.814324,-0.379859,3.590859,-1.495033,3.351177,-0.139425,1.577369,-4.131315,-8.285555,-8.893212,9.955161,5.242426,7.136141,9.599543,-8.716981,-9.122334,0.148415,8.379352,-0.300738,9.910507,1.213818,7.160665,-9.485815,5.379900,6.911924,-6.204711,5.776698,-3.763118,5.077705,-2.186114,2.334649,-7.590429,7.052860,3.980573,6.068066,7.730074,-9.755290,5.233099,-5.297754,-7.479043,-0.391554,4.551256,-7.943250,-3.846945,7.783478,-2.575679,2.580218,-5.624038,-9.802511,-6.725558,-7.860949,4.918297,9.213426,2.933126,6.929960,9.151366,-5.439044,8.000183,-7.888794,-5.284376,1.665503,-1.622955,0.773738,1.948374,5.926645,8.328618,-3.125273,-7.415915,2.946173,9.250604,9.297441,-4.036507,2.478236,7.472437,2.398270,-2.106794,-3.562344,9.224005,3.659052,9.452218,8.528928,-1.709298,0.378843,8.761338,0.310713,-6.692838,1.462633,-1.266932,-6.594964,-5.188754,-3.173479,-9.830819,5.816315,-7.080031,2.781234,3.881184,6.955906,-7.204006,6.901036,3.587236,-3.845210,9.827278,9.397531,5.234199,9.687925,5.254835,-3.177095,-8.681302,-0.152287,-9.111374,1.082768,-3.260487,5.183982,1.015109,-5.336466,2.537060,-2.787150,-7.665738,3.976166,-9.018738,5.054475,-1.738624,0.198685,0.927770,1.925984,4.425020,-9.481601,1.736143,-7.681425,-5.788109,-4.028593,-9.870885,-5.072008,-3.619114,-6.424804,0.407747,-3.177379,1.881975,-0.269664,3.974943,-5.671608,-0.784449,-6.466032,-1.845502,2.509628,6.185766,6.872750,-6.114553,-1.389569,4.882406,7.254101,-0.791016,-8.877438,-9.674860,2.399857,-3.838692,-5.879195,-9.005785,0.335247,-8.667937,2.240706,-3.069920,8.654244,-9.245235,0.005591,-6.387746,-6.843695,-5.885814,-5.474902,-8.089920,5.893148,4.139786,2.718109,-3.333387,-8.290191,2.775075,9.490600,-7.473220,2.904783,-4.648614,-8.990356,5.430017,-7.897296,5.235714,-7.400664,-1.994889,0.137264,-9.847161,1.088649,9.627679,1.777429,7.815113,-4.609824,8.219244,-7.446415,-3.540592,-2.541983,-3.370273,1.550225,9.805641,7.815355,1.037494,1.421603,7.388816,4.081217,-4.348389,-3.473621,8.166459,-8.621466,-2.457870,-9.344565,5.179606,-5.318304,9.836628,-7.900878,-1.674642,-5.086988,-0.614286,3.051292,-2.159129,-4.439598,5.347129,-3.385069,0.153070,0.599677,-2.099925,-7.164077,-2.527921,6.777303,-1.839568,-1.254456,8.768286,1.760787,-1.596975,7.932928,5.732826,8.350551,-4.379454,3.313935,-9.234856,7.956341,-1.944794,7.335820,5.435715,6.104921,-5.128225,-8.666392,-4.562329,9.836376,-0.287603,-4.046729,-1.358660,-9.932561,7.529314,-5.740182,-9.584890,-6.117302,9.922692,9.149776,-3.310976,-4.749494,-2.904534,-6.740822,-7.518407,1.576308,2.350253,-1.844020,4.426993,-7.511916,-5.093469,6.971439,8.851028,-9.256375,0.105278,6.224218,-2.322385,-8.656130,-8.388470,9.122448,-3.825966,0.464167,-9.486862,0.632653,-4.108110,3.730103,-6.469377,3.014894,-0.478810,-9.642548,2.696641,-9.767906,2.431074,-7.001993,9.276354,0.282837,-7.975530,4.659805,-2.114940,-2.594240,5.217870,-8.615163,-4.423373,8.285472,5.443347,-7.329773,9.273056,-6.142377,8.583634,-2.122325,-3.075382,-1.720377,-9.127569,-6.440470,-7.987919,2.656873,-9.019781,7.550761,7.440157,4.316919,-7.598797,1.112915,-7.763761,5.480749,-6.091707,1.958532,0.555921,0.127826,5.557517,-3.926424,-1.242897,1.111870,9.059565,-6.204903,4.230901,3.807734,9.404679,5.064106,-5.797729,-2.841141,-0.415562,-8.618409,9.310101,1.668136,0.333343,3.163200,3.858467,-9.230214,6.544567,7.570010,-0.243305,5.484302,8.924106,-4.592579,1.455642,-0.664116,-1.013055,8.262939,-4.995923,-3.480513,-1.126403,-0.896089,3.606956,1.573094,5.269116,7.949120,4.480540,6.836802,-0.178397,6.685590,-2.239128,1.917285,-8.004725,8.899380,-0.693642,-7.566654,5.850815,-6.078832,7.994902,0.337241,8.080122,-6.232248,2.467237,4.024873,1.412648,3.822680,2.161381,-4.285200,2.876236,-7.115364,-8.638028,1.272015,3.195059,-3.757662,7.396702,0.625040,-2.239314,8.581923,-0.132388,2.813406,7.775837,1.426414,-6.084866,-7.784332,2.511741,6.226212,9.681126,0.853549,-7.926995,3.318386,-7.659931,-9.732266,1.584073,-7.505631,0.493929,1.727318,9.080313,4.235477,0.097434,2.385651,-1.055650,-9.621399,1.328484,4.680668,2.268453,2.593919,0.589991,-7.992212,-3.335622,-2.600624,9.785162,-9.838595,1.574150,-1.862487,-7.430821,4.363934,-0.861066,-7.375747,-6.548322,3.724283,8.728650,5.883574,5.510797,3.799336,-6.384010,8.021672,5.405968,-7.983825,8.835873,2.075489,7.009602,-8.376753,-5.909442,8.068647,-5.920015,-4.477403,-0.716634,0.502163,-0.694319,8.557289,-5.864928,-3.311791,-3.096999,-1.629953,4.047936,3.580555,9.690699,-4.597378,8.621068,-3.156883,-7.064243,1.193470,-5.387475,-5.125534,3.124940,5.765842,-3.197804,5.032555,0.687080,-9.229506,-6.904512,5.618093,-0.122629,7.968480,9.713146,0.438549,2.941709,-3.891573,1.311721,-3.418216,-0.664486,6.625168,6.005711,-3.351129,-4.062953,2.777235,-8.982548,-9.374152,-5.302870,-2.811658,9.272863,6.863570,-3.398707,-8.688136,4.008169,-1.998763,8.404084,-9.535512,7.948349,3.127124,-0.027847,-4.165928,9.996745,6.152129,-4.530227,3.723542,3.442904,-3.470379,9.650095,-3.937965,7.150317,-2.975773,-8.878632,5.103314,5.983107,7.428046,1.506489,5.890240,1.229443,-2.030108,-1.597257,7.040291,0.336260,-3.498480,5.820470,2.535002,4.809588,2.576641,-4.127584,4.207278,8.223564,8.282107,-9.433752,9.671350,4.937250,-3.232551,9.912859,-2.451509,7.432061,4.007792,0.089442,-4.788185,7.649328,-8.733003,-8.254810,2.484121,-2.015775,4.020684,5.385397,-7.447361,-7.187575,8.480830,3.967861,-8.640937,-5.817401,1.620246,-1.974276,-3.079809,6.680901,-1.186867,7.357700,1.087818,-1.728599,-4.383304,8.841009,4.330623,4.411704,7.619713,-0.481441,-8.549132,-1.951822,-7.188080,7.672071,-5.434181,3.039838,-5.737059,-0.267075,-0.533324,-9.247518,1.594230,-7.267681,-1.413041,7.374702,-9.168154,9.701458,-5.383099,-3.124161,9.652572,5.374956,-9.141845,-8.459405,6.029871,-4.294622,0.478458,3.557041,-0.913751,6.444910,4.154480,-1.769315,-2.437990,-2.906481,8.178924,5.357375,-5.507668,-7.462801,8.555474,-6.939486,-7.721482,1.706985,5.703743,-0.125563,-8.153089,-4.168582,-4.057144,8.516911,2.869372,0.623518,-7.862774,6.041984,1.684035,1.637717,-9.673657,-1.264149,-0.258582,-8.632836,-8.864117,7.300406,9.957329,-9.194457,-6.650774,-0.920154,-9.322234,4.965971,4.366081,2.112958,-2.000569,8.476818,-0.453019,1.315074,1.023770,9.819136,-8.726494,-1.768509,-0.182170,1.617180,-2.057701,-1.295454,0.206208,6.357546,-5.747397,-7.371801,2.368156,4.269152,0.079288,-0.821908,0.101117,-3.795931,-5.959365,8.423991,3.700972,-0.090592,-2.750911,-0.060376,-8.379230,-3.270208,3.211252,7.467110,8.186828,-5.333547,-5.524846,4.452656,-7.734342,9.353779,9.470200,-9.626514,-2.640084,-8.733911,3.077472,-0.059374,6.923705,7.904562,3.056738,0.115595,7.407901,8.918501,4.500022,3.877619,-7.189666,-5.834215,2.748542,1.251018,6.173537,9.022878,-3.371427,-2.349967,-2.108425,-6.872819,3.054564,-0.744209,-1.230302,-6.916028,7.899373,7.335693,-9.484533,4.270866,-0.647836,6.285371,-6.384509,2.414021,9.947499,-0.427960,4.469725,0.089528,8.644513,3.632757,-4.928049,3.571126,-5.256549,9.833588,-7.161615,-3.170372,2.333143,0.152817,-8.525049,5.083586,-4.602983,-1.918195,-0.132511,-1.651277,9.013291,0.690720,4.859687,7.288482,-9.746043,2.868583,2.655408,3.044068,1.818553,8.317032,9.730970,7.591436,-4.810269,2.487520,-3.821535,-0.847909,-3.271932,2.746442,-5.171135,4.416733,3.131091,-6.206688,-5.917292,-7.995452,-6.986319,-4.380295,-8.980854,0.927223,9.377623,9.805829,8.590340,9.822544,-2.066153,2.820438,-3.915844,8.604869,9.007552,-4.643705,9.528686,-6.877197,-8.106842,-4.021979,-9.998905,-0.219476,-4.514269,3.187695,1.002186,8.545823,1.569969,7.374064,2.637581,-7.426316,-9.646964,7.331543,2.862554,0.218473,-7.187404,-7.585968,6.692738,-9.178700,-6.403750,9.333049,-3.358420,0.704413,-6.259977,9.342042,2.690879,-8.926460,4.498685,-2.627463,8.708306,-3.735743,5.471009,4.173567,9.795562,-3.619464,0.471753,-4.023259,0.773941,-6.474566,-9.283250,3.073805,9.201605,5.253420,1.262335,5.071437,5.267880,-6.619609,-6.606893,4.601963,5.475109,1.635114,-1.012037,1.696983,-3.658749,7.019071,0.817595,-3.578007,-4.434583,0.035809,3.092645,8.744777,7.759644,8.203667,2.971272,0.900477,0.204681,1.203267,-7.710066,3.541345,-9.780471,8.570094,4.087225,-5.792134,2.529836,-3.871973,-2.842568,1.010487,0.189128,8.061105,-1.582351,-5.452884,-9.408776,9.098094,-4.671938,6.946143,9.426535,-0.925846,-1.710762,-9.293655,8.044731,3.647638,-6.146387,3.831875,0.898870,-5.184413,4.142292,1.446080,8.595801,5.305018,0.245407,-5.047309,0.084087,-2.450113,-7.604870,-5.302894,5.080001,3.392897,-2.347816,5.063506,-9.642299,9.847489,-1.290559,4.532441,8.407988,7.759940,3.812190,4.274572,2.831084,-9.621464,3.822059,0.922556,-4.257425,-6.010432,3.606379,0.019368,-4.782012,0.088611,3.025933,-1.658396,5.688937,-0.083562,9.770713,-8.030259,5.986931,-9.957691,8.714824,4.336510,8.606968,-3.048886,3.883993,-4.090357,4.896053,0.115748,-5.876799,0.126465,0.247148,-5.366113,-2.467451,8.109308,9.895906,-3.064102,3.991031,4.053105,1.285428,4.635728,6.592596,-9.635547,-2.202713,0.362544,2.048146,-5.824902,-2.204792,-6.927920,2.532422,-8.360875,0.154515,5.136807,-3.885028,7.778550,3.569363,9.656122,-0.763374,4.247192,1.838302,3.363847,2.437478,6.129067,-5.959684,-2.592251,-5.331240,2.588546,3.107806,-6.962597,5.927900,-6.929487,9.739796,5.725790,8.463081,-8.685229,2.147303,-3.354173,9.603011,9.741578,2.525074,-0.426539,-7.434580,2.178263,-8.833288,-4.238202,-6.796779,-6.564575,-6.286883,0.599731,-6.056599,-1.300169,-9.319209,9.475702,-4.289467,0.597208,-3.153800,2.840751,5.177517,9.228993,8.836200,5.926078,-6.548725,5.742056,2.794332,-4.478159,-7.710352,-0.934658,2.167060,-5.443953,-0.939583,9.835156,6.748780,6.030209,-1.213118,4.675588,-0.905362,2.363997,-1.496112,8.962814,2.926256,-0.859316,-7.535585,-5.535942,-6.168259,-0.240360,6.664714,7.687659,-7.203799,0.573348,5.734576,-6.824772,-8.480114,-9.762976,-8.490096,-0.401517,-6.104549,2.319223,1.645138,-3.825136,4.607974,-5.114718,4.411859,5.505150,0.550739,-5.682676,3.919328,-5.764150,-1.113254,7.364757,9.621229,-9.255665,-3.278221,-1.501973,-9.695121,3.080193,5.422325,-5.051280,5.234831,0.334881,-7.531133,-0.664748,-7.333281,4.064338,6.739277,-2.952122,9.611784,-0.954857,-7.964631,5.554264,-8.443395,-6.191765,0.481403,-3.131612,4.506466,7.599372,3.345053,1.918462,-1.764936,-7.246230,1.805502,-4.510676,9.496178,-0.932574,-6.894221,-9.071478,-7.271678,-0.121910,3.347719,8.616763,-1.294952,1.645352,-9.578735,-1.733197,0.117112,-3.075792,7.032584,3.805055,-7.469992,-7.218962,-4.938248,9.082664,-4.054059,-4.668369,-8.361660,-8.159661,-4.794558,-0.683332,-7.627116,1.637654,1.974100,3.981887,6.201063,4.786581,-9.439020,-0.576490,4.474438,-4.072462,7.846326,7.772518,-3.017689,2.892470,7.590421,7.175323,-8.843725,-2.732955,-8.119991,-8.904284,-6.022473,1.912211,2.272576,0.558731,6.743757,-6.169507,-3.887169,-2.728206,7.370686,8.631739,0.128120,8.706737,-8.824791,1.457114,7.617342,-2.356040,-7.016405,-1.484493,1.933922,-7.802520,7.282884,8.334463,-6.200339,-8.455015,8.762751,8.179883,-1.927608,-8.411673,-8.163725,-6.319103,4.964455,2.873854,-5.686761,-3.035016,-5.356158,4.482285,4.890453,4.170031,-6.898540,-7.777666,-0.721598,3.494768,-9.908493,1.899874,8.381308,-8.331050,-5.588806,-3.251424,9.188616,-8.310048,0.001679,-6.316176,-9.808540,3.928955,7.173314,5.406279,6.890133,4.982977,-4.069893,-0.233565,-8.037759,8.622550,-8.179487,4.418247,-6.283826,3.668904,6.671314,-1.620873,-5.693596,3.536750,5.297189,6.382057,7.863228,-9.618347,9.165941,6.371290,7.419669,-2.516437,1.865338,-6.342962,0.322125,4.029825,5.724681,-2.007411,3.868343,5.800508,-4.995567,7.799361,0.084716,-4.579417,-2.126439,-5.672659,-5.332473,-2.064835,3.573812,9.717865,-0.078369,7.500563,-6.762627,5.258205,0.504597,9.284237,1.147169,2.217290,-2.421950,0.304957,-2.185488,7.736487,-7.957390,-8.602179,-2.911831,-0.385569,-0.020261,-4.174525,-6.546299,7.015996,-7.544175,9.620022,3.667834,7.302170,-5.278700,6.031231,-7.807881,4.427662,-5.866870,-4.400114,4.580945,9.306138,9.453620,4.181736,-3.441813,1.635410,9.602670,-7.034340,-2.927459,-9.492074,2.090359,6.956020,-7.728687,-4.310083,-2.782340,1.969535,-2.859693,3.924746,-1.526800,7.349315,5.939772,-9.486161,2.923406,-5.945066,-4.765936,7.696013,-9.902403,8.275348,8.392019,6.198643,9.912302,-4.839011,5.495938,0.698137,-6.537680,-6.003237,5.702857,-6.851004,-2.769295,-0.661701,9.265550,-5.967239,-1.812922,9.483347,5.608641,1.266245,7.527742,-3.536820,-9.620135,2.613832,-6.779532,-4.626638,-7.792917,8.533927,3.846428,1.326541,5.851818,-6.630721,1.980772,8.080979,-1.271063,0.900451,-5.538276,7.009944,7.438056,9.908937,-2.669431,-7.247700,-6.942269,5.816635,2.379924,7.785540,-2.926340,5.912603,5.124383,1.738272,5.669230,5.937562,-9.440516,-7.914531,0.049642,-7.684026,-8.929338,-2.769710,-0.376364,-7.614048,-8.080569,-8.935549,-4.314850,7.380702,-5.697946,5.691218,1.186489,-6.194730,9.998696,-9.436428,-0.956584,8.869361,7.832600,-7.358311,4.603103,6.006037,-9.480145,9.887052,2.224354,-5.618209,8.602257,-0.786321,-2.193603,-7.934736,3.749322,7.337572,6.753968,-2.795550,-6.501454,-2.989342,-3.186701,-5.064150,5.950873,8.725015,-5.837924,8.181160,5.746115,-8.611067,-0.744487,-6.833656,3.614621,4.743897,-8.618228,1.190960,-0.546321,-5.041979,-6.400933,8.490912,-0.367116,-4.530047,-3.045280,-5.681485,1.290762,-6.283993,-3.245496,-3.091706,-9.640775,-1.592198,0.777420,1.248030,-6.994764,-3.129651,-6.758315,-7.723331,-8.877728,9.022117,-8.047397,5.845339,9.016968,7.866049,-8.862114,3.605923,-3.899916,8.428207,-1.900289,9.537099,-6.444088,6.769025,-7.328628,-7.641399,-7.516306,4.816170,4.441050,2.450871,-2.271647,-9.935436,-4.183677,9.265233,-5.071202,-2.001521,-5.423097,3.313980,-5.316304,8.231146,-5.625751,8.150523,-9.782571,-8.103406,7.308600,-5.557372,-6.623523,-2.840745,-3.458066,9.662693,-0.056089,2.758059,-3.663209,-1.596277,3.591087,0.744297,2.077839,2.266338,5.678696,2.588023,5.676331,4.243968,2.520531,-9.502968,0.391584,-1.799399,6.437253,-5.256606,-5.775996,-8.869125,0.669523,6.435020,1.685626,-1.068603,-3.166180,4.873597,2.972523,-9.764561,8.235121,-9.716001,-3.900708,-5.516850,9.021152,2.654274,5.120713,9.670584,4.292716,3.427522,9.351221,-5.738328,-8.172080,5.284443,-5.996191,-2.062547,-1.461478,-5.795598,7.957140,2.710467,-8.855574,-5.807868,-8.703694,-9.703724,-3.570607,-7.203164,1.872104,-3.228852,0.464598,6.000949,0.553579,6.640286,-3.199647,-2.585477,-4.116120,-9.892103,2.457071,1.882612,6.213337,2.027577,7.345275,1.355107,-5.046214,-6.941095,-0.337175,1.718875,6.032855,4.849181,8.573156,8.644409,3.933596,-2.396586,-8.939175,2.489831,4.161087,-9.641386,-8.176268,1.317290,1.570138,-4.773116,9.836663,6.771035,-4.360612,-8.791529,-0.418887,-1.839711,-3.236943,-4.307924,-6.156229,-4.225562,1.939399,-6.736475,-0.911005,-6.191477,-3.699333,0.531900,9.885895,-9.542769,-0.714990,1.682042,4.555531,-4.152509,-7.465603,-8.862115,-4.855191,-5.498472,8.073307,-1.803690,-5.258948,5.131756,7.733320,-7.050741,9.991658,2.348396,8.594978,1.385625,-0.204816,-0.884431,-5.861364,0.863083,4.847519,-7.882452,-2.382296,8.764104,-3.731567,2.952558,8.321786,-8.317481,9.143332,-3.148997,-1.257052,5.010745,-3.383152,1.534012,-4.690822,7.139695,-4.346732,4.167193,-8.271499,0.040036,6.271962,4.159785,-1.632702,-4.704519,1.085755,-8.239629,-5.808310,-8.138727,-8.763718,1.970164,-5.484306,-6.335272,9.112387,9.046056,-2.887378,-2.515982,-9.190120,9.721849,5.988654,-2.671257,-0.670807,-6.931742,-4.736693,8.375728,-4.778503,6.073310,-5.582498,8.618399,0.701400,4.324267,6.213361,-4.579721,3.371587,-4.241961,7.695959,7.890129,2.565949,-1.963673,-5.602019,-3.862505,-9.474397,8.425159,-7.447546,-8.357309,-2.671844,2.002023,7.868103,4.951134,5.107283,6.961638,-9.277745,2.563063,-4.604364,0.135197,4.242723,8.235530,9.512497,-3.384680,2.200935,-1.206765,2.375838,1.410053,0.053636,7.800559,-2.227993,3.164162,-9.605672,0.358343,-9.619100,4.852662,-8.897747,3.783558,-7.706620,7.126717,1.578951,2.874771,-4.816753,5.959764,9.596340,-7.570061,-6.361052,-1.175652,-2.362648,3.397121,-5.307927,0.167118,-2.449546,-0.797360,-8.823116,-6.356328,9.968123,-0.206154,8.802627,7.692999,2.224073,-4.445767,2.510503,-2.872673,-7.400959,-2.558428,-4.896892,-1.048769,8.401594,5.249827,-7.009990,8.790723,9.233005,5.066299,1.569767,4.944450,8.682195,-8.759763,-2.230800,-7.242807,6.278006,3.914403,-5.217286,-8.374095,1.941339,-9.308814,6.746706,0.156091,5.177533,0.867010,-3.838501,5.176644,1.211992,-8.419865,-8.045258,-1.840936,-2.004758,-8.066651,0.368150,-6.659444,-1.922672,0.141974,-8.112483,3.258454,7.625218,-3.981444,3.800303,8.342744,-3.347215,8.101378,9.968361,-8.094718,8.134671,-3.188720,8.607072,2.798730,3.597133,3.869998,-8.254429,-1.960703,-4.566307,3.164137,-2.311407,-9.578471,-3.883537,-5.599821,9.285214,9.593905,2.759947,-4.541030,-7.693766,-9.338875,-6.482333,4.178326,-2.258815,-9.957182,9.939508,7.261651,5.499664,-5.866501,6.958973,3.688522,4.159051,7.806288,-7.162996,1.848356,-3.089799,4.543885,4.618609,6.617913,-6.364876,-5.044386,7.823545,0.930532,8.136693,-8.067730,-5.271537,-0.848158,1.015060,-3.333745,9.132053,-9.364133,-3.388455,-5.578922,2.334112,4.642101,2.253474,7.556470,5.570585,2.038572,-2.501170,1.179796,3.044237,-0.576102,-6.872950,4.804891,-8.663385,6.930294,6.687335,-4.191175,2.263738,-0.340791,-2.849977,6.442526,-9.837313,-4.586444,-0.807396,-7.690327,2.159199,-9.558272,0.908666,5.681363,-6.393690,-2.435962,-2.242345,-5.460521,1.735328,6.226952,-3.893353,6.086163,0.958060,4.308775,-1.189272,-4.509748,-0.460561,9.299308,-7.453157,0.389203,3.116332,-9.758579,-8.453136,9.734136,1.279360,5.909612,8.772515,-4.638896,3.038304,-4.089341,3.507334,4.692924,-7.167230,-0.887196,-9.275743,3.625338,6.323601,8.821134,-9.472352,1.320829,4.888416,6.436684,-2.455792,-0.898500,0.883043,3.130065,5.214882,-8.286028,2.882761,-5.597836,-9.338336,3.143838,0.785935,2.055642,3.547772,6.267504,-1.215242,9.969557,-5.080256,-1.515305,-4.176615,7.068164,-9.490535,3.121555,-6.367272,4.657055,3.532624,-3.611204,-3.614607,-8.367049,8.788994,-7.140996,-0.594579,-3.363661,6.038319,-9.125400,-4.720187,4.442557,6.744767,-1.011648,-2.418504,-2.134692,-2.459977,-1.077191,4.501974,-5.625367,-6.041441,-6.570964,-6.012344,-3.213010,1.470906,9.807005,-9.697589,-0.532685,-9.446797,6.072333,7.039714,-1.213718,-9.186528,-2.381607,-8.596591,-2.994471,4.768275,1.743634,9.014409,-6.904835,5.523872,-6.943382,-7.353660,3.451269,4.590423,-6.165440,0.335787,-3.039184,1.775725,2.384115,9.206288,5.691308,-7.599691,-0.315206,-2.875117,-6.979428,1.995436,4.447939,6.722916,-2.789999,9.982700,2.513797,6.721467,-1.412026,-2.951227,-5.702127,-4.780548,2.291496,0.964129,-8.229568,-4.792548,5.916248,-2.234070,0.100806,6.625917,-9.899198,-6.633526,1.644259,-4.927499,9.522603,0.206745,-9.891326,1.338743,-8.093155,-9.525807,-2.530991,4.660193,-1.350453,-9.683269,-1.490954,4.582057,-0.104235,-5.152272,8.304013,4.611188,-8.068756,7.356246,-4.660707,-4.087280,1.383706,-0.986507,1.885264,2.689956,0.929544,5.956568,1.841434,-0.460144,7.348784,-7.934268,1.729786,3.335221,-3.916244,1.759364,3.627093,-5.628613,-3.162989,-7.786103,-5.406904,9.650421,0.048247,7.017538,2.909745,-7.567027,1.640056,9.441282,-9.330355,-2.346906,0.147640,-9.354656,0.263924,3.185293,1.861977,0.605297,9.458523,1.480764,1.137415,-3.837998,-6.920761,3.097323,9.761848,9.876624,3.447406,-7.523004,3.759131,8.529999,6.333016,-3.512627,-2.159661,0.714451,-6.827663,-0.346875,0.668511,-5.056724,9.245777,5.742802,-7.752944,0.388634,-5.040154,6.034878,-5.475811,-9.088543,4.136097,-9.329093,-2.272523,-6.269575,-9.470575,3.350733,7.287825,0.633012,4.902128,1.112361,7.938635,-8.702316,-7.346624,3.925740,-0.389381,1.596842,-1.403472,-0.555121,0.815546,0.533283,7.514954,6.130097,-5.307546,-2.186104,-5.132733,-9.387253,-3.480106,4.533110,-1.847185,6.845448,2.585916,-8.648750,-5.870248,-1.879365,3.108173,5.132236,-9.308609,8.549620,0.434197,2.295015,8.272608,-9.434075,-0.709663,2.980914,-4.995219,1.232270,5.533279,-6.498093,-2.961411,8.153481,-2.088466,4.456004,2.372363,-6.986964,-9.613471,-7.374306,4.937457,5.843135,8.696635,-5.981999,7.961167,5.254020,9.108192,-0.420577,-8.863798,-6.320402,-7.098771,-5.844666,-1.510081,-8.958273,-8.678571,5.383167,1.263671,8.675970,2.535662,1.921515,6.134664,2.307217,-5.024545,5.832676,9.959356,9.578470,2.501551,8.581015,-6.699656,-1.948565,2.128270,-1.520199,-6.486518,6.858011,3.616627,-4.267600,1.185054,-4.007688,7.218844,-6.430996,8.693603,-3.347654,9.936784,-9.067285,7.323539,-6.185867,-3.847470,-4.169825,-6.484910,-8.498724,-6.581409,2.087405,-0.986127,2.869426,1.201657,-2.808540,5.789703,9.922802,5.277059,5.139969,-3.863888,5.170776,-9.945309,4.374125,1.938289,0.718556,-7.388973,4.594150,-9.684013,-0.642423,-7.543729,-2.645287,6.333145,1.943185,2.457901,8.466830,-5.666163,4.005266,-9.859862,-3.230497,-7.520449,8.280009,-3.643862,-3.834322,3.283868,-9.347066,7.433629,-6.535603,-2.014878,9.678411,-5.649344,1.919175,1.912755,8.313796,9.336191,4.783295,3.350848,-7.801266,4.576827,-4.974471,1.518106,5.551431,0.855570,3.660977,1.981103,-1.763977,9.097357,-5.859601,-5.520820,0.338808,8.920590,8.133621,8.705626,-2.060766,-8.113842,-0.191355,9.153211,0.503701,2.714105,-6.890444,3.274896,-9.952690,-1.706228,-2.526667,-5.303143,-9.704490,-8.133761,6.804770,7.932094,2.648226,-7.952638,7.382060,9.165793,3.364338,2.776500,7.352148,-4.801004,-7.386057,-6.456300,7.256546,-3.254351,3.740343,0.991242,-7.889902,-2.649587,9.491182,8.073657,1.532381,3.211071,3.128122,-5.863687,8.029837,-0.101857,-7.612743,-7.551233,-1.059195,4.958159,-6.329748,-4.086743,-1.069873,-1.276830,1.787561,-2.844415,-4.349825,8.168114,9.511867,-5.263689,-6.104070,-2.299434,5.204180,-6.607799,0.751931,0.879964,9.229097,-0.741456,0.323908,0.269410,0.520425,4.037560,5.365555,1.590153,-2.137045,6.066496,2.552519,2.197425,4.059759,-8.730590,-0.098290,-5.356986,1.753706,5.709385,9.566778,2.104897], dtype = "float64")#candidate|7231|(2560,)|const|float64
call_7230 = relay.TupleGetItem(func_4275_call(relay.reshape(const_7231.astype('float64'), [2560,])), 2)
call_7232 = relay.TupleGetItem(func_4278_call(relay.reshape(const_7231.astype('float64'), [2560,])), 2)
output = relay.Tuple([call_7213,call_7230,const_7231,])
output2 = relay.Tuple([call_7214,call_7232,const_7231,])
func_7233 = relay.Function([], output)
mod['func_7233'] = func_7233
mod = relay.transform.InferType()(mod)
output = func_7233()
func_7234 = relay.Function([], output)
mutated_mod['func_7234'] = func_7234
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7237 = relay.var("var_7237", dtype = "float64", shape = (7, 2, 16))#candidate|7237|(7, 2, 16)|var|float64
var_7238 = relay.var("var_7238", dtype = "float64", shape = (7, 2, 16))#candidate|7238|(7, 2, 16)|var|float64
bop_7239 = relay.floor_divide(var_7237.astype('float64'), relay.reshape(var_7238.astype('float64'), relay.shape_of(var_7237))) # shape=(7, 2, 16)
func_6350_call = mod.get_global_var('func_6350')
func_6351_call = mutated_mod.get_global_var('func_6351')
call_7248 = relay.TupleGetItem(func_6350_call(), 0)
call_7249 = relay.TupleGetItem(func_6351_call(), 0)
var_7250 = relay.var("var_7250", dtype = "float64", shape = (7, 2, 16))#candidate|7250|(7, 2, 16)|var|float64
bop_7251 = relay.logical_or(bop_7239.astype('bool'), relay.reshape(var_7250.astype('bool'), relay.shape_of(bop_7239))) # shape=(7, 2, 16)
bop_7257 = relay.greater_equal(var_7237.astype('bool'), relay.reshape(bop_7251.astype('bool'), relay.shape_of(var_7237))) # shape=(7, 2, 16)
const_7260 = relay.const([[[False,True,False,False,True,False,False,False,False,True,False,True,True,False,True,False],[False,False,True,False,False,True,False,True,True,True,True,True,False,False,True,False]],[[True,False,True,False,False,True,False,False,True,True,False,False,True,True,False,True],[True,True,True,False,False,False,True,False,True,False,True,True,False,True,False,True]],[[True,True,False,True,False,False,False,True,True,False,False,False,True,False,True,False],[False,True,False,False,True,False,False,False,False,False,False,True,True,False,False,False]],[[True,False,True,True,True,True,True,False,True,True,True,False,True,False,True,True],[True,True,False,False,True,False,True,False,False,True,True,True,True,True,True,False]],[[False,True,True,True,False,False,True,False,True,False,False,True,True,True,False,False],[True,False,True,False,True,False,False,True,True,True,True,False,True,False,False,True]],[[True,True,False,False,False,True,False,True,False,False,False,True,False,True,True,True],[True,False,True,False,False,False,False,True,True,True,True,False,True,True,True,True]],[[True,True,True,True,True,True,False,True,True,True,False,True,False,True,False,True],[False,False,False,False,False,False,False,True,True,True,False,False,True,True,True,False]]], dtype = "bool")#candidate|7260|(7, 2, 16)|const|bool
bop_7261 = relay.bitwise_xor(bop_7257.astype('uint64'), relay.reshape(const_7260.astype('uint64'), relay.shape_of(bop_7257))) # shape=(7, 2, 16)
uop_7268 = relay.log(const_7260.astype('float32')) # shape=(7, 2, 16)
output = relay.Tuple([call_7248,bop_7261,uop_7268,])
output2 = relay.Tuple([call_7249,bop_7261,uop_7268,])
F = relay.Function([var_7237,var_7238,var_7250,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_7237,var_7238,var_7250,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

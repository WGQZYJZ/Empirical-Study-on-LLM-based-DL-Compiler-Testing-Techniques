==========mod==========
#[version = "0.0.5"]
def @func_1823() -> (Tensor[(1, 14, 3), float64],) {
  %0 = @func_1444() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(120), uint8], Tensor[(120), uint8], Tensor[(1, 14, 3), float64], Tensor[(42), float32]) */;
  %1 = %0.3;
  (%1,)
}

def @func_7406(%var_7402: Tensor[(120), uint8]) -> (Tensor[(15, 3, 5), bool], Tensor[(1, 14, 3), float64], Tensor[(120), uint8]) {
  %2 = @func_2412() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %3 = cast(%var_7402, dtype="uint8") /* ty=Tensor[(120), uint8] */;
  %4 = reshape(%3, newshape=[6, 20]) /* ty=Tensor[(6, 20), uint8] */;
  %5 = @func_6623(%4) /* ty=(Tensor[(1, 14, 3), float64], Tensor[(2, 12, 5), bool], Tensor[(6, 20), uint8], Tensor[(15, 3, 5), bool]) */;
  %6 = %2.0;
  %7 = %5.0;
  (%6, %7, %var_7402)
}

def @func_9255() -> Tensor[(15, 3, 5), bool] {
  %8 = @func_5337() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %8.0
}

def @func_14754() -> Tensor[(15, 3, 5), bool] {
  %9 = @func_12165() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], int16, int16, Tensor[(15, 3, 5), float32], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %9.0
}

def @func_6518() -> Tensor[(15, 3, 5), bool] {
  %10 = @func_5305() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %10.0
}

def @func_14155() -> (Tensor[(42), float32], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float64]) {
  %11 = @func_7626() /* ty=(Tensor[(42), float32],) */;
  %12 = @func_6125() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %13 = @func_5604() /* ty=(Tensor[(15, 3, 5), float64],) */;
  %14 = %11.0;
  %15 = %12.1;
  %16 = %13.0;
  (%14, %15, %16)
}

def @func_14384() -> (Tensor[(15, 3, 5), bool], Tensor[(1344), float32], Tensor[(1344), float32]) {
  %17 = @func_4234() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %18 = cast(meta[relay.Constant][0] /* ty=Tensor[(1344), float32] */, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %19 = reshape(%18, newshape=[1344]) /* ty=Tensor[(1344), float32] */;
  %20 = @func_8947(%19) /* ty=(Tensor[(15, 3, 5), bool], Tensor[(14, 12, 8), int32], Tensor[(1344), float32]) */;
  %21 = %17.1;
  %22 = %20.2;
  (%21, %22, meta[relay.Constant][0] /* ty=Tensor[(1344), float32] */)
}

def @func_7509() -> (Tensor[(1, 14, 3), float64], Tensor[(15, 3, 5), float64]) {
  %23 = @func_5258() /* ty=(Tensor[(1, 14, 3), float64],) */;
  %24 = @func_4309() /* ty=(Tensor[(15, 3, 5), float64], Tensor[(15, 3, 5), bool]) */;
  %25 = %23.0;
  %26 = %24.0;
  (%25, %26)
}

def @func_10971() -> (Tensor[(1, 14, 3), float64], Tensor[(42), float32], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], int16) {
  %27 = @func_7168() /* ty=(Tensor[(1, 14, 3), float64],) */;
  %28 = @func_8362() /* ty=(Tensor[(42), float32],) */;
  %29 = @func_4252() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %30 = cast(meta[relay.Constant][1] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %31 = reshape(%30, newshape=[]) /* ty=int16 */;
  %32 = @func_7865(%31) /* ty=(Tensor[(42), float32], Tensor[(15, 3, 5), bool], Tensor[(6, 13, 1), float32], int16, Tensor[(78), int16]) */;
  %33 = %27.0;
  %34 = %28.0;
  %35 = %29.0;
  %36 = %32.1;
  (%33, %34, %35, %36, meta[relay.Constant][1] /* ty=int16 */)
}

def @func_14732() -> Tensor[(15, 3, 5), bool] {
  %37 = @func_7240() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float32]) */;
  %37.0
}

def @func_4309() -> (Tensor[(15, 3, 5), float64], Tensor[(15, 3, 5), bool]) {
  %38 = @func_3092() /* ty=Tensor[(15, 3, 5), float64] */;
  %39 = @func_702() /* ty=Tensor[(15, 3, 5), bool] */;
  (%38, %39)
}

def @func_7457() -> (Tensor[(120), uint8], Tensor[(15, 3, 5), bool]) {
  %40 = @func_5713() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(42), float32], Tensor[(1001), uint64], Tensor[(42), float32], Tensor[(120), uint8]) */;
  %41 = %40.5;
  %42 = @func_3240() /* ty=Tensor[(15, 3, 5), bool] */;
  (%41, %42)
}

def @func_9080(%var_9075: Tensor[(6, 5, 11), float64]) -> (Tensor[(6, 5, 11), float64],) {
  %43 = cast(6.18147f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %44 = cast(%var_9075, dtype="float64") /* ty=Tensor[(6, 5, 11), float64] */;
  %45 = power(%43, %44) /* ty=Tensor[(6, 5, 11), float64] */;
  (%45,)
}

def @func_14670() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  %46 = @func_928() /* ty=Tensor[(15, 3, 5), bool] */;
  %47 = cast(%46, dtype="bool") /* ty=Tensor[(15, 3, 5), bool] */;
  %48 = reshape(%47, newshape=[15, 3, 5]) /* ty=Tensor[(15, 3, 5), bool] */;
  %49 = @func_6723(%48) /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %50 = %49.0;
  (%46, %50)
}

def @func_12999(%var_12991: Tensor[(120), uint8]) -> (Tensor[(4, 5, 8), float64], Tensor[(15, 3, 5), float64], Tensor[(120), uint8]) {
  %51 = @func_3304() /* ty=(Tensor[(42), float32], Tensor[(15, 3, 5), bool], Tensor[(4, 5, 8), float64], Tensor[(160), float64]) */;
  %52 = cast(%var_12991, dtype="uint8") /* ty=Tensor[(120), uint8] */;
  %53 = reshape(%52, newshape=[3, 40]) /* ty=Tensor[(3, 40), uint8] */;
  %54 = @func_914(%53) /* ty=(Tensor[(2, 12, 5), bool], Tensor[(3, 40), uint8], Tensor[(15, 3, 5), float64], Tensor[(15, 3, 5), bool]) */;
  %55 = %51.2;
  %56 = %54.2;
  (%55, %56, %var_12991)
}

def @func_7673(%var_7668: Tensor[(130, 1), float64]) -> (Tensor[(15, 3, 5), bool], Tensor[(13, 1, 10), float64], float64, Tensor[(130, 1), float64]) {
  %57 = cast(-4.56571f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %58 = cast(%var_7668, dtype="float64") /* ty=Tensor[(130, 1), float64] */;
  %59 = reshape(%57, newshape=[]) /* ty=float64 */;
  %60 = reshape(%58, newshape=[13, 1, 10]) /* ty=Tensor[(13, 1, 10), float64] */;
  %61 = @func_6500(%59, %60) /* ty=(Tensor[(13, 1, 10), float64],) */;
  %62 = @func_5300() /* ty=Tensor[(15, 3, 5), bool] */;
  %63 = %61.0;
  (%62, %63, -4.56571f64 /* ty=float64 */, %var_7668)
}

def @func_3780(%var_3778: Tensor[(91, 11), uint64]) -> (Tensor[(15, 3, 5), bool], Tensor[(42), float32], Tensor[(7, 66), float64], Tensor[(91, 11), uint64]) {
  %64 = @func_1947() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %65 = cast(meta[relay.Constant][2] /* ty=Tensor[(7, 66), float64] */, dtype="float64") /* ty=Tensor[(7, 66), float64] */;
  %66 = cast(%var_3778, dtype="uint64") /* ty=Tensor[(91, 11), uint64] */;
  %67 = reshape(%65, newshape=[11, 14, 3]) /* ty=Tensor[(11, 14, 3), float64] */;
  %68 = reshape(%66, newshape=[1001]) /* ty=Tensor[(1001), uint64] */;
  %69 = @func_2998(%67, %68) /* ty=(Tensor[(11, 14, 3), float64], Tensor[(15, 3, 5), bool], Tensor[(42), float32], Tensor[(1001), uint64], Tensor[(6, 20), uint8]) */;
  %70 = %64.0;
  %71 = %69.2;
  (%70, %71, meta[relay.Constant][2] /* ty=Tensor[(7, 66), float64] */, %var_3778)
}

def @func_12038() -> (Tensor[(2, 12, 5), int32], Tensor[(42), float32]) {
  %72 = @func_8362() /* ty=(Tensor[(42), float32],) */;
  %73 = @func_9041() /* ty=Tensor[(2, 12, 5), int32] */;
  %74 = %72.0;
  (%73, %74)
}

def @func_1947() -> (Tensor[(15, 3, 5), bool],) {
  %75 = @func_680() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %76 = %75.0;
  (%76,)
}

def @func_633() -> (Tensor[(15, 3, 5), bool],) {
  %77 = cast(meta[relay.Constant][3] /* ty=Tensor[(15, 3, 5), float32] */, dtype="float32") /* ty=Tensor[(15, 3, 5), float32] */;
  %78 = cosh(%77) /* ty=Tensor[(15, 3, 5), float32] */;
  %79 = cast(meta[relay.Constant][3] /* ty=Tensor[(15, 3, 5), float32] */, dtype="bool") /* ty=Tensor[(15, 3, 5), bool] */;
  %80 = shape_of(%78, dtype="int32") /* ty=Tensor[(3), int32] */;
  %81 = cast(%78, dtype="bool") /* ty=Tensor[(15, 3, 5), bool] */;
  %82 = dyn.reshape(%79, %80, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %83 = not_equal(%81, %82) /* ty=Tensor[(15, 3, 5), bool] */;
  (%83,)
}

def @func_8427() -> (Tensor[(15, 13, 6), float64], Tensor[(120, 1), uint8], Tensor[(546), int16], Tensor[(8, 3, 12), bool], Tensor[(288), int8]) {
  %84 = cast(meta[relay.Constant][4] /* ty=Tensor[(15, 13, 6), float64] */, dtype="float64") /* ty=Tensor[(15, 13, 6), float64] */;
  %85 = cast(meta[relay.Constant][5] /* ty=Tensor[(546), int16] */, dtype="int16") /* ty=Tensor[(546), int16] */;
  %86 = cast(meta[relay.Constant][5] /* ty=Tensor[(546), int16] */, dtype="int16") /* ty=Tensor[(546), int16] */;
  %87 = reshape(%85, newshape=[6, 13, 7]) /* ty=Tensor[(6, 13, 7), int16] */;
  %88 = reshape(%86, newshape=[6, 13, 7]) /* ty=Tensor[(6, 13, 7), int16] */;
  %89 = @func_8081(%87, %88) /* ty=(Tensor[(6, 13, 7), uint64], Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], Tensor[(120, 1), uint8], Tensor[(6, 13, 7), float64], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %90 = cast(meta[relay.Constant][6] /* ty=Tensor[(288), int8] */, dtype="int8") /* ty=Tensor[(288), int8] */;
  %91 = cast(meta[relay.Constant][6] /* ty=Tensor[(288), int8] */, dtype="int8") /* ty=Tensor[(288), int8] */;
  %92 = reshape(%90, newshape=[8, 3, 12]) /* ty=Tensor[(8, 3, 12), int8] */;
  %93 = reshape(%91, newshape=[8, 3, 12]) /* ty=Tensor[(8, 3, 12), int8] */;
  %94 = log10(%84) /* ty=Tensor[(15, 13, 6), float64] */;
  %95 = %89.3;
  %96 = @func_4830(%92, %93) /* ty=Tensor[(8, 3, 12), bool] */;
  (%94, %95, meta[relay.Constant][5] /* ty=Tensor[(546), int16] */, %96, meta[relay.Constant][6] /* ty=Tensor[(288), int8] */)
}

def @func_5058(%var_5043: Tensor[(3, 6, 5), uint32]) -> (Tensor[(3, 6, 5), uint32],) {
  %97 = cast(meta[relay.Constant][7] /* ty=Tensor[(3, 6, 5), uint32] */, dtype="uint32") /* ty=Tensor[(3, 6, 5), uint32] */;
  %98 = shape_of(%var_5043, dtype="int32") /* ty=Tensor[(3), int32] */;
  %99 = cast(%var_5043, dtype="uint32") /* ty=Tensor[(3, 6, 5), uint32] */;
  %100 = dyn.reshape(%97, %98, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %101 = add(%99, %100) /* ty=Tensor[(3, 6, 5), uint32] */;
  (%101,)
}

def @func_2210() -> (Tensor[(15, 3, 5), bool], Tensor[(1, 14, 3), float64], Tensor[(42), float32]) {
  %102 = @func_1899() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %103 = cast(meta[relay.Constant][8] /* ty=Tensor[(42), float32] */, dtype="float32") /* ty=Tensor[(42), float32] */;
  %104 = reshape(%103, newshape=[1, 14, 3]) /* ty=Tensor[(1, 14, 3), float32] */;
  %105 = @func_202(%104) /* ty=(Tensor[(1, 14, 3), float32], Tensor[(1, 14, 3), float64]) */;
  %106 = %102.0;
  %107 = %105.1;
  (%106, %107, meta[relay.Constant][8] /* ty=Tensor[(42), float32] */)
}

def @func_11722() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(1001), uint64]) {
  %108 = @func_5713() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(42), float32], Tensor[(1001), uint64], Tensor[(42), float32], Tensor[(120), uint8]) */;
  %109 = @func_8024() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(9, 14, 3), float64]) */;
  %110 = cast(meta[relay.Constant][9] /* ty=Tensor[(1001), uint64] */, dtype="uint64") /* ty=Tensor[(1001), uint64] */;
  %111 = reshape(%110, newshape=[1001]) /* ty=Tensor[(1001), uint64] */;
  %112 = @func_11388(%111) /* ty=(Tensor[(15, 3, 5), bool], Tensor[(42), float32], Tensor[(1001), uint64]) */;
  %113 = %108.0;
  %114 = %109.0;
  %115 = @func_9876() /* ty=Tensor[(15, 3, 5), bool] */;
  %116 = %112.0;
  (%113, %114, %115, %116, meta[relay.Constant][9] /* ty=Tensor[(1001), uint64] */)
}

def @func_5519(%var_5514: Tensor[(5, 13, 5), uint16]) -> Tensor[(5, 13, 5), uint16] {
  %117 = cast(meta[relay.Constant][10] /* ty=Tensor[(5, 13, 5), uint16] */, dtype="uint16") /* ty=Tensor[(5, 13, 5), uint16] */;
  %118 = shape_of(%var_5514, dtype="int32") /* ty=Tensor[(3), int32] */;
  %119 = cast(%var_5514, dtype="uint16") /* ty=Tensor[(5, 13, 5), uint16] */;
  %120 = dyn.reshape(%117, %118, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  subtract(%119, %120) /* ty=Tensor[(5, 13, 5), uint16] */
}

def @func_11353() -> Tensor[(15, 3, 5), bool] {
  %121 = @func_5015() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float64]) */;
  %121.0
}

def @func_6145() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  %122 = @func_5511() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool]) */;
  %123 = @func_4234() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %124 = %122.0;
  %125 = %123.0;
  (%124, %125)
}

def @func_9232() -> Tensor[(15, 3, 5), float64] {
  @func_3092() /* ty=Tensor[(15, 3, 5), float64] */
}

def @func_12397() -> Tensor[(15, 3, 5), bool] {
  %126 = @func_12080() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %126.0
}

def @func_10412() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  %127 = @func_5920() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %128 = @func_4445() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %129 = %127.1;
  %130 = %128.0;
  %131 = @func_8164() /* ty=Tensor[(15, 3, 5), bool] */;
  (%129, %130, %131)
}

def @func_4830(%var_4811: Tensor[(8, 3, 12), int8], %var_4812: Tensor[(8, 3, 12), int8]) -> Tensor[(8, 3, 12), bool] {
  %132 = cast(%var_4812, dtype="bool") /* ty=Tensor[(8, 3, 12), bool] */;
  %133 = shape_of(%var_4811, dtype="int32") /* ty=Tensor[(3), int32] */;
  %134 = cast(%var_4811, dtype="bool") /* ty=Tensor[(8, 3, 12), bool] */;
  %135 = dyn.reshape(%132, %133, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%134, %135) /* ty=Tensor[(8, 3, 12), bool] */
}

def @func_13916() -> (Tensor[(15, 3, 5), bool],) {
  %136 = @func_2142() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %137 = %136.0;
  (%137,)
}

def @func_5386(%var_5363: Tensor[(3, 14, 3), float64]) -> (Tensor[(3, 14, 3), uint64], Tensor[(15, 3, 5), bool], Tensor[(1, 14, 3), float32]) {
  %138 = @func_1823() /* ty=(Tensor[(1, 14, 3), float64],) */;
  %139 = %138.0;
  %140 = cast(%139, dtype="uint64") /* ty=Tensor[(1, 14, 3), uint64] */;
  %141 = cast(%var_5363, dtype="uint64") /* ty=Tensor[(3, 14, 3), uint64] */;
  %142 = cast(%139, dtype="float32") /* ty=Tensor[(1, 14, 3), float32] */;
  %143 = right_shift(%140, %141) /* ty=Tensor[(3, 14, 3), uint64] */;
  %144 = @func_928() /* ty=Tensor[(15, 3, 5), bool] */;
  %145 = acos(%142) /* ty=Tensor[(1, 14, 3), float32] */;
  (%143, %144, %145)
}

def @func_4395() -> (Tensor[(42), float32], Tensor[(15, 3, 5), bool]) {
  %146 = @func_3304() /* ty=(Tensor[(42), float32], Tensor[(15, 3, 5), bool], Tensor[(4, 5, 8), float64], Tensor[(160), float64]) */;
  %147 = @func_2340() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %148 = %146.0;
  %149 = %147.0;
  (%148, %149)
}

def @func_14080() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  %150 = @func_11118() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(3, 6, 5), uint32], Tensor[(15, 6), uint32], Tensor[(15, 13, 6), float64]) */;
  %151 = %150.0;
  %152 = @func_10738() /* ty=Tensor[(15, 3, 5), bool] */;
  (%151, %152)
}

def @func_1764() -> (Tensor[(120), uint8], Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), float64]) {
  %153 = @func_1129() /* ty=(Tensor[(2, 12, 5), bool], Tensor[(120), uint8], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %154 = %153.1;
  %155 = cast(%154, dtype="uint8") /* ty=Tensor[(120), uint8] */;
  %156 = reshape(%155, newshape=[120]) /* ty=Tensor[(120), uint8] */;
  %157 = @func_1229(%156) /* ty=(Tensor[(2, 12, 5), bool], Tensor[(120), uint8], Tensor[(15, 3, 5), uint16], Tensor[(2, 12, 5), bool], Tensor[(2, 12, 5), float64]) */;
  %158 = @func_1684() /* ty=Tensor[(15, 3, 5), bool] */;
  %159 = %157.4;
  (%154, %158, %159)
}

def @func_4424() -> Tensor[(15, 3, 5), bool] {
  %160 = @func_4395() /* ty=(Tensor[(42), float32], Tensor[(15, 3, 5), bool]) */;
  %160.1
}

def @func_14790(%var_14784: Tensor[(3, 3, 14), float64]) -> (Tensor[(3, 3, 14), float64],) {
  %161 = cast(%var_14784, dtype="float64") /* ty=Tensor[(3, 3, 14), float64] */;
  %162 = atan(%161) /* ty=Tensor[(3, 3, 14), float64] */;
  (%162,)
}

def @func_9296() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float64], Tensor[(15, 3, 5), bool]) {
  %163 = @func_8826() /* ty=Tensor[(15, 3, 5), bool] */;
  %164 = @func_3092() /* ty=Tensor[(15, 3, 5), float64] */;
  %165 = @func_1684() /* ty=Tensor[(15, 3, 5), bool] */;
  (%163, %164, %165)
}

def @func_5604() -> (Tensor[(15, 3, 5), float64],) {
  %166 = @func_4309() /* ty=(Tensor[(15, 3, 5), float64], Tensor[(15, 3, 5), bool]) */;
  %167 = %166.0;
  (%167,)
}

def @func_11043() -> (Tensor[(15, 3, 5), bool],) {
  %168 = @func_4699() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(1, 14, 3), float64]) */;
  %169 = %168.0;
  (%169,)
}

def @func_15245() -> (Tensor[(2, 12, 5), float64], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  %170 = @func_3327() /* ty=(Tensor[(2, 12, 5), float64],) */;
  %171 = @func_2745() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %172 = @func_10902() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %173 = %170.0;
  %174 = %171.0;
  %175 = %172.1;
  (%173, %174, %175)
}

def @func_7971() -> (Tensor[(2, 12, 5), float64], Tensor[(15, 3, 5), bool]) {
  %176 = @func_3327() /* ty=(Tensor[(2, 12, 5), float64],) */;
  %177 = %176.0;
  %178 = @func_1684() /* ty=Tensor[(15, 3, 5), bool] */;
  (%177, %178)
}

def @func_3092() -> Tensor[(15, 3, 5), float64] {
  %179 = @func_1129() /* ty=(Tensor[(2, 12, 5), bool], Tensor[(120), uint8], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %180 = %179.3;
  %181 = @func_2142() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %182 = %181.0;
  %183 = cast(%182, dtype="float64") /* ty=Tensor[(15, 3, 5), float64] */;
  %184 = shape_of(%180, dtype="int32") /* ty=Tensor[(3), int32] */;
  %185 = cast(%180, dtype="float64") /* ty=Tensor[(15, 3, 5), float64] */;
  %186 = dyn.reshape(%183, %184, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  add(%185, %186) /* ty=Tensor[(15, 3, 5), float64] */
}

def @func_13356() -> (Tensor[(1, 14, 3), float64],) {
  %187 = @func_7168() /* ty=(Tensor[(1, 14, 3), float64],) */;
  %188 = %187.0;
  (%188,)
}

def @func_6742(%var_6737: Tensor[(7, 1, 8), float32], %var_6738: Tensor[(7, 14, 8), float32]) -> (Tensor[(7, 14, 8), float32],) {
  %189 = cast(%var_6737, dtype="float32") /* ty=Tensor[(7, 1, 8), float32] */;
  %190 = cast(%var_6738, dtype="float32") /* ty=Tensor[(7, 14, 8), float32] */;
  %191 = floor_mod(%189, %190) /* ty=Tensor[(7, 14, 8), float32] */;
  (%191,)
}

def @func_11272(%var_11218: Tensor[(1176), float32]) -> (Tensor[(15, 3, 5), float32], Tensor[(325), float32], Tensor[(6, 14, 14), float32], Tensor[(1176), float32], Tensor[(1, 14, 3), float64], Tensor[(1, 14, 3), float32], Tensor[(325), uint16], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  %192 = @func_4295() /* ty=(Tensor[(15, 3, 5), float32], Tensor[(1, 14, 3), float64], Tensor[(42), float32]) */;
  %193 = @func_10106() /* ty=(Tensor[(15, 3, 5), float64], Tensor[(5, 13, 5), float32], Tensor[(325), uint16]) */;
  %194 = %193.2;
  %195 = cast(%194, dtype="float32") /* ty=Tensor[(325), float32] */;
  %196 = cast(%var_11218, dtype="float32") /* ty=Tensor[(1176), float32] */;
  %197 = reshape(%196, newshape=[6, 14, 14]) /* ty=Tensor[(6, 14, 14), float32] */;
  %198 = @func_2289() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(1, 14, 3), float64], Tensor[(42), float32], Tensor[(1, 14, 3), float64]) */;
  %199 = %198.3;
  %200 = cast(%199, dtype="float32") /* ty=Tensor[(1, 14, 3), float32] */;
  %201 = reshape(%200, newshape=[1, 14, 3]) /* ty=Tensor[(1, 14, 3), float32] */;
  %202 = @func_202(%201) /* ty=(Tensor[(1, 14, 3), float32], Tensor[(1, 14, 3), float64]) */;
  %203 = @func_10106() /* ty=(Tensor[(15, 3, 5), float64], Tensor[(5, 13, 5), float32], Tensor[(325), uint16]) */;
  %204 = @func_6125() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %205 = %192.0;
  %206 = atanh(%195) /* ty=Tensor[(325), float32] */;
  %207 = @func_9534(%197) /* ty=Tensor[(6, 14, 14), float32] */;
  %208 = %202.0;
  %209 = %203.2;
  %210 = @func_5439() /* ty=Tensor[(15, 3, 5), bool] */;
  %211 = %204.1;
  (%205, %206, %207, %var_11218, %199, %208, %209, %210, %211)
}

def @func_3520() -> (Tensor[(15, 3, 5), bool],) {
  %212 = @func_633() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %213 = %212.0;
  (%213,)
}

def @func_8634() -> (Tensor[(15, 3, 5), bool],) {
  %214 = @func_928() /* ty=Tensor[(15, 3, 5), bool] */;
  (%214,)
}

def @func_2491() -> (Tensor[(2, 12, 5), float64], Tensor[(15, 3, 5), bool]) {
  %215 = @func_1764() /* ty=(Tensor[(120), uint8], Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), float64]) */;
  %216 = %215.2;
  %217 = @func_1684() /* ty=Tensor[(15, 3, 5), bool] */;
  (%216, %217)
}

def @func_12832() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float32]) {
  %218 = @func_9958() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(6, 5, 11), float64], Tensor[(1, 330), float64]) */;
  %219 = %218.0;
  %220 = cast(%219, dtype="bool") /* ty=Tensor[(15, 3, 5), bool] */;
  %221 = reshape(%220, newshape=[15, 3, 5]) /* ty=Tensor[(15, 3, 5), bool] */;
  %222 = @func_2640(%221) /* ty=Tensor[(15, 3, 5), float32] */;
  (%219, %222)
}

def @func_2640(%var_2632: Tensor[(15, 3, 5), bool]) -> Tensor[(15, 3, 5), float32] {
  %223 = @func_2491() /* ty=(Tensor[(2, 12, 5), float64], Tensor[(15, 3, 5), bool]) */;
  %224 = %223.1;
  %225 = cast(%var_2632, dtype="float32") /* ty=Tensor[(15, 3, 5), float32] */;
  %226 = shape_of(%224, dtype="int32") /* ty=Tensor[(3), int32] */;
  %227 = cast(%224, dtype="float32") /* ty=Tensor[(15, 3, 5), float32] */;
  %228 = dyn.reshape(%225, %226, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%227, %228) /* ty=Tensor[(15, 3, 5), float32] */
}

def @func_6106() -> (Tensor[(120), uint8],) {
  %229 = @func_1764() /* ty=(Tensor[(120), uint8], Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), float64]) */;
  %230 = %229.0;
  (%230,)
}

def @func_13895() -> (Tensor[(15, 13, 6), float64], Tensor[(2, 12, 5), float32]) {
  %231 = @func_3484() /* ty=Tensor[(2, 12, 5), bool] */;
  %232 = cast(%231, dtype="float32") /* ty=Tensor[(2, 12, 5), float32] */;
  %233 = @func_8698() /* ty=Tensor[(15, 13, 6), float64] */;
  %234 = sinh(%232) /* ty=Tensor[(2, 12, 5), float32] */;
  (%233, %234)
}

def @func_14035(%var_14025: Tensor[(15, 6, 2), float32]) -> Tensor[(15, 6, 2), float64] {
  %235 = cast(%var_14025, dtype="float32") /* ty=Tensor[(15, 6, 2), float32] */;
  %236 = erf(%235) /* ty=Tensor[(15, 6, 2), float32] */;
  %237 = cast(%236, dtype="float64") /* ty=Tensor[(15, 6, 2), float64] */;
  log10(%237) /* ty=Tensor[(15, 6, 2), float64] */
}

def @func_8826() -> Tensor[(15, 3, 5), bool] {
  %238 = @func_1947() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %238.0
}

def @func_8960() -> (Tensor[(15, 3, 5), bool],) {
  %239 = @func_8680() /* ty=Tensor[(15, 3, 5), bool] */;
  (%239,)
}

def @func_9650(%var_9637: Tensor[(1001), uint64]) -> (Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], Tensor[(60, 14), float32], Tensor[(120), uint8], Tensor[(1001), uint64], Tensor[(42), float32]) {
  %240 = @func_1947() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %241 = cast(meta[relay.Constant][11] /* ty=Tensor[(60, 14), float32] */, dtype="float32") /* ty=Tensor[(60, 14), float32] */;
  %242 = reshape(%241, newshape=[14, 4, 15]) /* ty=Tensor[(14, 4, 15), float32] */;
  %243 = @func_3476(%242) /* ty=(Tensor[(2, 12, 5), bool], Tensor[(14, 4, 15), int8]) */;
  %244 = cast(%var_9637, dtype="uint64") /* ty=Tensor[(1001), uint64] */;
  %245 = cast(meta[relay.Constant][12] /* ty=Tensor[(42), float32] */, dtype="float32") /* ty=Tensor[(42), float32] */;
  %246 = %243.0;
  %247 = cast(%246, dtype="uint8") /* ty=Tensor[(2, 12, 5), uint8] */;
  %248 = reshape(%244, newshape=[11, 7, 13]) /* ty=Tensor[(11, 7, 13), uint64] */;
  %249 = reshape(%245, newshape=[42]) /* ty=Tensor[(42), float32] */;
  %250 = reshape(%247, newshape=[120]) /* ty=Tensor[(120), uint8] */;
  %251 = @func_1493(%248, %249, %250) /* ty=(Tensor[(11, 7, 13), uint64], Tensor[(42), float32], Tensor[(42), float32], Tensor[(120), uint8], Tensor[(120), uint8]) */;
  %252 = %240.0;
  %253 = %251.3;
  (%252, %246, meta[relay.Constant][11] /* ty=Tensor[(60, 14), float32] */, %253, %var_9637, meta[relay.Constant][12] /* ty=Tensor[(42), float32] */)
}

def @func_5305() -> (Tensor[(15, 3, 5), bool],) {
  %254 = @func_2745() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %255 = %254.0;
  (%255,)
}

def @func_4983() -> (Tensor[(120), uint8], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  %256 = @func_1570() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], Tensor[(120), uint8]) */;
  %257 = @func_4252() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %258 = %256.2;
  %259 = @func_928() /* ty=Tensor[(15, 3, 5), bool] */;
  %260 = %257.0;
  (%258, %259, %260)
}

def @func_8362() -> (Tensor[(42), float32],) {
  %261 = @func_3304() /* ty=(Tensor[(42), float32], Tensor[(15, 3, 5), bool], Tensor[(4, 5, 8), float64], Tensor[(160), float64]) */;
  %262 = %261.0;
  (%262,)
}

def @func_12651() -> (Tensor[(15, 3, 5), bool], Tensor[(42), float32]) {
  %263 = @func_7071() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %264 = @func_11148() /* ty=(Tensor[(42), float32],) */;
  %265 = %263.0;
  %266 = %264.0;
  (%265, %266)
}

def @func_12856() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], int16) {
  %267 = @func_3606() /* ty=(Tensor[(42), float32], Tensor[(15, 3, 5), bool]) */;
  %268 = @func_10667() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %269 = @func_12165() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], int16, int16, Tensor[(15, 3, 5), float32], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %270 = %267.1;
  %271 = %268.0;
  %272 = %269.3;
  (%270, %271, %272)
}

def @func_9041() -> Tensor[(2, 12, 5), int32] {
  %273 = @func_6080() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), float64], Tensor[(15, 3, 5), bool]) */;
  %274 = %273.1;
  %275 = cast(%274, dtype="float64") /* ty=Tensor[(2, 12, 5), float64] */;
  %276 = log(%275) /* ty=Tensor[(2, 12, 5), float64] */;
  %277 = cast(%274, dtype="float32") /* ty=Tensor[(2, 12, 5), float32] */;
  %278 = erf(%277) /* ty=Tensor[(2, 12, 5), float32] */;
  %279 = cast(%278, dtype="int32") /* ty=Tensor[(2, 12, 5), int32] */;
  %280 = shape_of(%276, dtype="int32") /* ty=Tensor[(3), int32] */;
  %281 = cast(%276, dtype="int32") /* ty=Tensor[(2, 12, 5), int32] */;
  %282 = dyn.reshape(%279, %280, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  add(%281, %282) /* ty=Tensor[(2, 12, 5), int32] */
}

def @func_2088() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float32], Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), float64]) {
  %283 = @func_757() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %284 = @func_1309() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %285 = @func_680() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %286 = %285.0;
  %287 = cast(%286, dtype="float32") /* ty=Tensor[(15, 3, 5), float32] */;
  %288 = @func_1899() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %289 = @func_1764() /* ty=(Tensor[(120), uint8], Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), float64]) */;
  %290 = %283.0;
  %291 = %284.0;
  %292 = tan(%287) /* ty=Tensor[(15, 3, 5), float32] */;
  %293 = %288.0;
  %294 = %289.2;
  (%290, %291, %292, %293, %294)
}

def @func_8616() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float64]) {
  %295 = @func_5713() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(42), float32], Tensor[(1001), uint64], Tensor[(42), float32], Tensor[(120), uint8]) */;
  %296 = @func_5015() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float64]) */;
  %297 = %295.0;
  %298 = %296.1;
  (%297, %298)
}

def @func_12971() -> (Tensor[(2, 12, 5), bool],) {
  %299 = @func_5992() /* ty=(Tensor[(2, 12, 5), bool],) */;
  %300 = %299.0;
  (%300,)
}

def @func_12069(%var_12061: int16, %var_12062: Tensor[(1, 8, 11), int16]) -> (Tensor[(1, 8, 11), int16],) {
  %301 = cast(%var_12061, dtype="int16") /* ty=int16 */;
  %302 = cast(%var_12062, dtype="int16") /* ty=Tensor[(1, 8, 11), int16] */;
  %303 = right_shift(%301, %302) /* ty=Tensor[(1, 8, 11), int16] */;
  (%303,)
}

def @func_12506() -> Tensor[(1, 14, 3), float64] {
  %304 = @func_4699() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(1, 14, 3), float64]) */;
  %304.1
}

def @func_10902() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  %305 = @func_9296() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float64], Tensor[(15, 3, 5), bool]) */;
  %306 = @func_4153() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %307 = %305.2;
  %308 = %306.1;
  %309 = @func_1285() /* ty=Tensor[(15, 3, 5), bool] */;
  (%307, %308, %309)
}

def @func_6382() -> Tensor[(11, 12, 14), bool] {
  %310 = cast(meta[relay.Constant][13] /* ty=Tensor[(11, 12, 14), float64] */, dtype="float64") /* ty=Tensor[(11, 12, 14), float64] */;
  %311 = tan(%310) /* ty=Tensor[(11, 12, 14), float64] */;
  %312 = cast(meta[relay.Constant][13] /* ty=Tensor[(11, 12, 14), float64] */, dtype="bool") /* ty=Tensor[(11, 12, 14), bool] */;
  %313 = shape_of(%311, dtype="int32") /* ty=Tensor[(3), int32] */;
  %314 = cast(%311, dtype="bool") /* ty=Tensor[(11, 12, 14), bool] */;
  %315 = dyn.reshape(%312, %313, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%314, %315) /* ty=Tensor[(11, 12, 14), bool] */
}

def @func_13679() -> (Tensor[(2, 12, 5), uint16], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  %316 = @func_10482() /* ty=(Tensor[(2, 12, 5), uint16],) */;
  %317 = @func_5305() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %318 = @func_12165() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], int16, int16, Tensor[(15, 3, 5), float32], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %319 = %316.0;
  %320 = %317.0;
  %321 = %318.5;
  (%319, %320, %321)
}

def @func_4708() -> (Tensor[(15, 3, 5), bool],) {
  %322 = @func_757() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %323 = %322.0;
  (%323,)
}

def @func_7865(%var_7858: int16) -> (Tensor[(42), float32], Tensor[(15, 3, 5), bool], Tensor[(6, 13, 1), float32], int16, Tensor[(78), int16]) {
  %324 = @func_4395() /* ty=(Tensor[(42), float32], Tensor[(15, 3, 5), bool]) */;
  %325 = @func_3630() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %326 = cast(%var_7858, dtype="int16") /* ty=int16 */;
  %327 = cast(meta[relay.Constant][14] /* ty=Tensor[(78), int16] */, dtype="int16") /* ty=Tensor[(78), int16] */;
  %328 = reshape(%326, newshape=[]) /* ty=int16 */;
  %329 = reshape(%327, newshape=[6, 13, 1]) /* ty=Tensor[(6, 13, 1), int16] */;
  %330 = @func_4546(%328, %329) /* ty=(Tensor[(15, 3, 5), bool], Tensor[(6, 13, 1), float32], Tensor[(42), float32], Tensor[(1001), uint64]) */;
  %331 = %324.0;
  %332 = %325.0;
  %333 = %330.1;
  (%331, %332, %333, %var_7858, meta[relay.Constant][14] /* ty=Tensor[(78), int16] */)
}

def @func_7492() -> (Tensor[(9, 14, 3), float64],) {
  %334 = @func_6567() /* ty=Tensor[(9, 14, 3), float64] */;
  (%334,)
}

def @func_13398(%var_13383: Tensor[(12, 11, 1), float32]) -> (Tensor[(12, 11, 1), float32],) {
  %335 = cast(%var_13383, dtype="float32") /* ty=Tensor[(12, 11, 1), float32] */;
  %336 = sigmoid(%335) /* ty=Tensor[(12, 11, 1), float32] */;
  (%336,)
}

def @func_14875() -> Tensor[(15, 3, 5), float32] {
  %337 = @func_4295() /* ty=(Tensor[(15, 3, 5), float32], Tensor[(1, 14, 3), float64], Tensor[(42), float32]) */;
  %337.0
}

def @func_10143() -> Tensor[(15, 3, 5), bool] {
  %338 = @func_1899() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %338.0
}

def @func_8164() -> Tensor[(15, 3, 5), bool] {
  %339 = @func_680() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %339.0
}

def @func_3968() -> (Tensor[(15, 3, 5), bool],) {
  %340 = @func_928() /* ty=Tensor[(15, 3, 5), bool] */;
  (%340,)
}

def @func_4234() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  %341 = @func_2259() /* ty=(Tensor[(1, 14, 3), float64], Tensor[(1, 14, 3), float64], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %342 = %341.3;
  %343 = @func_702() /* ty=Tensor[(15, 3, 5), bool] */;
  (%342, %343)
}

def @func_10721() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float64]) {
  %344 = @func_10037() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %345 = @func_633() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %346 = @func_5604() /* ty=(Tensor[(15, 3, 5), float64],) */;
  %347 = %344.0;
  %348 = %345.0;
  %349 = @func_10166() /* ty=Tensor[(15, 3, 5), bool] */;
  %350 = %346.0;
  (%347, %348, %349, %350)
}

def @func_2449(%var_2439: Tensor[(15, 3, 5), bool]) -> Tensor[(15, 3, 5), float32] {
  %351 = @func_1285() /* ty=Tensor[(15, 3, 5), bool] */;
  %352 = cast(%var_2439, dtype="float32") /* ty=Tensor[(15, 3, 5), float32] */;
  %353 = shape_of(%351, dtype="int32") /* ty=Tensor[(3), int32] */;
  %354 = cast(%351, dtype="float32") /* ty=Tensor[(15, 3, 5), float32] */;
  %355 = dyn.reshape(%352, %353, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_mod(%354, %355) /* ty=Tensor[(15, 3, 5), float32] */
}

def @func_12165() -> (Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], int16, int16, Tensor[(15, 3, 5), float32], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  %356 = @func_680() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %357 = cast(meta[relay.Constant][15] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %358 = reshape(%357, newshape=[]) /* ty=int16 */;
  %359 = @func_7865(%358) /* ty=(Tensor[(42), float32], Tensor[(15, 3, 5), bool], Tensor[(6, 13, 1), float32], int16, Tensor[(78), int16]) */;
  %360 = @func_10412() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %361 = @func_2774() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %362 = %356.0;
  %363 = @func_3484() /* ty=Tensor[(2, 12, 5), bool] */;
  %364 = %359.3;
  %365 = @func_5757() /* ty=Tensor[(15, 3, 5), float32] */;
  %366 = %360.1;
  %367 = %361.1;
  (%362, %363, %364, meta[relay.Constant][15] /* ty=int16 */, %365, %366, %367)
}

def @func_4445() -> (Tensor[(15, 3, 5), bool],) {
  %368 = @func_2774() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %369 = %368.0;
  (%369,)
}

def @func_5300() -> Tensor[(15, 3, 5), bool] {
  @func_702() /* ty=Tensor[(15, 3, 5), bool] */
}

def @func_5713() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(42), float32], Tensor[(1001), uint64], Tensor[(42), float32], Tensor[(120), uint8]) {
  %370 = @func_1309() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %371 = @func_2088() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float32], Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), float64]) */;
  %372 = cast(meta[relay.Constant][16] /* ty=Tensor[(1001), uint64] */, dtype="uint64") /* ty=Tensor[(1001), uint64] */;
  %373 = cast(meta[relay.Constant][17] /* ty=Tensor[(42), float32] */, dtype="float32") /* ty=Tensor[(42), float32] */;
  %374 = cast(meta[relay.Constant][18] /* ty=Tensor[(120), uint8] */, dtype="uint8") /* ty=Tensor[(120), uint8] */;
  %375 = reshape(%372, newshape=[11, 7, 13]) /* ty=Tensor[(11, 7, 13), uint64] */;
  %376 = reshape(%373, newshape=[42]) /* ty=Tensor[(42), float32] */;
  %377 = reshape(%374, newshape=[120]) /* ty=Tensor[(120), uint8] */;
  %378 = @func_1493(%375, %376, %377) /* ty=(Tensor[(11, 7, 13), uint64], Tensor[(42), float32], Tensor[(42), float32], Tensor[(120), uint8], Tensor[(120), uint8]) */;
  %379 = %370.0;
  %380 = %371.1;
  %381 = %378.1;
  (%379, %380, %381, meta[relay.Constant][16] /* ty=Tensor[(1001), uint64] */, meta[relay.Constant][17] /* ty=Tensor[(42), float32] */, meta[relay.Constant][18] /* ty=Tensor[(120), uint8] */)
}

def @func_12920() -> Tensor[(15, 3, 5), bool] {
  %382 = @func_1309() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %382.0
}

def @func_11591() -> Tensor[(15, 3, 5), bool] {
  %383 = @func_2210() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(1, 14, 3), float64], Tensor[(42), float32]) */;
  %383.0
}

def @func_10166() -> Tensor[(15, 3, 5), bool] {
  %384 = @func_3943() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %384.0
}

def @func_14989() -> (Tensor[(1, 14, 3), float64], Tensor[(3, 14, 13), bool], Tensor[(1, 546), int16]) {
  %385 = @func_7168() /* ty=(Tensor[(1, 14, 3), float64],) */;
  %386 = cast(meta[relay.Constant][19] /* ty=Tensor[(1, 546), int16] */, dtype="int16") /* ty=Tensor[(1, 546), int16] */;
  %387 = reshape(%386, newshape=[3, 14, 13]) /* ty=Tensor[(3, 14, 13), int16] */;
  %388 = %385.0;
  %389 = @func_3847(%387) /* ty=Tensor[(3, 14, 13), bool] */;
  (%388, %389, meta[relay.Constant][19] /* ty=Tensor[(1, 546), int16] */)
}

def @func_8737(%var_8709: Tensor[(5, 16, 14), float64], %var_8718: Tensor[(56), float32]) -> (Tensor[(5, 16, 14), bool], Tensor[(7, 14, 8), float32], Tensor[(56), float32], Tensor[(784), float32], Tensor[(15, 3, 5), bool]) {
  %390 = cast(meta[relay.Constant][20] /* ty=Tensor[(5, 16, 14), float64] */, dtype="bool") /* ty=Tensor[(5, 16, 14), bool] */;
  %391 = shape_of(%var_8709, dtype="int32") /* ty=Tensor[(3), int32] */;
  %392 = cast(%var_8709, dtype="bool") /* ty=Tensor[(5, 16, 14), bool] */;
  %393 = dyn.reshape(%390, %391, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %394 = cast(%var_8718, dtype="float32") /* ty=Tensor[(56), float32] */;
  %395 = cast(meta[relay.Constant][21] /* ty=Tensor[(784), float32] */, dtype="float32") /* ty=Tensor[(784), float32] */;
  %396 = reshape(%394, newshape=[7, 1, 8]) /* ty=Tensor[(7, 1, 8), float32] */;
  %397 = reshape(%395, newshape=[7, 14, 8]) /* ty=Tensor[(7, 14, 8), float32] */;
  %398 = @func_6742(%396, %397) /* ty=(Tensor[(7, 14, 8), float32],) */;
  %399 = @func_3630() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %400 = greater_equal(%392, %393) /* ty=Tensor[(5, 16, 14), bool] */;
  %401 = %398.0;
  %402 = %399.0;
  (%400, %401, %var_8718, meta[relay.Constant][21] /* ty=Tensor[(784), float32] */, %402)
}

def @func_15327() -> Tensor[(15, 3, 5), bool] {
  %403 = @func_8024() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(9, 14, 3), float64]) */;
  %403.0
}

def @func_757() -> (Tensor[(15, 3, 5), bool],) {
  %404 = @func_680() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %405 = %404.0;
  (%405,)
}

def @func_6943(%var_6930: Tensor[(42), float32]) -> (Tensor[(120), uint8], Tensor[(42), float32], Tensor[(42), float32]) {
  %406 = @func_1570() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], Tensor[(120), uint8]) */;
  %407 = cast(%var_6930, dtype="float32") /* ty=Tensor[(42), float32] */;
  %408 = reshape(%407, newshape=[42]) /* ty=Tensor[(42), float32] */;
  %409 = @func_3157(%408) /* ty=(Tensor[(15, 3, 5), bool], Tensor[(?, 14, 3), float32], Tensor[(270), float64], Tensor[(42), float32], Tensor[(15, 3, 5), bool]) */;
  %410 = %406.2;
  %411 = %409.3;
  (%410, %411, %var_6930)
}

def @func_6723(%var_6696: Tensor[(15, 3, 5), bool]) -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  %412 = @func_2745() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %413 = @func_5305() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %414 = %413.0;
  %415 = cast(%var_6696, dtype="bool") /* ty=Tensor[(15, 3, 5), bool] */;
  %416 = shape_of(%414, dtype="int32") /* ty=Tensor[(3), int32] */;
  %417 = cast(%414, dtype="bool") /* ty=Tensor[(15, 3, 5), bool] */;
  %418 = dyn.reshape(%415, %416, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %419 = @func_6518() /* ty=Tensor[(15, 3, 5), bool] */;
  %420 = @func_5439() /* ty=Tensor[(15, 3, 5), bool] */;
  %421 = %412.0;
  %422 = greater_equal(%417, %418) /* ty=Tensor[(15, 3, 5), bool] */;
  (%419, %420, %421, %422)
}

def @func_9876() -> Tensor[(15, 3, 5), bool] {
  %423 = @func_8960() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %423.0
}

def @func_13199() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float32], Tensor[(15, 3, 5), bool]) {
  %424 = @func_12793() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %425 = %424.0;
  %426 = cast(%425, dtype="bool") /* ty=Tensor[(15, 3, 5), bool] */;
  %427 = reshape(%426, newshape=[15, 3, 5]) /* ty=Tensor[(15, 3, 5), bool] */;
  %428 = @func_1309() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %429 = @func_2449(%427) /* ty=Tensor[(15, 3, 5), float32] */;
  %430 = %428.0;
  (%425, %429, %430)
}

def @func_5757() -> Tensor[(15, 3, 5), float32] {
  %431 = @func_1285() /* ty=Tensor[(15, 3, 5), bool] */;
  %432 = cast(%431, dtype="float32") /* ty=Tensor[(15, 3, 5), float32] */;
  log(%432) /* ty=Tensor[(15, 3, 5), float32] */
}

def @func_12713() -> (Tensor[(2, 12, 5), uint16],) {
  %433 = @func_5992() /* ty=(Tensor[(2, 12, 5), bool],) */;
  %434 = %433.0;
  %435 = cast(%434, dtype="float32") /* ty=Tensor[(2, 12, 5), float32] */;
  %436 = log2(%435) /* ty=Tensor[(2, 12, 5), float32] */;
  %437 = cast(%436, dtype="uint16") /* ty=Tensor[(2, 12, 5), uint16] */;
  %438 = shape_of(%434, dtype="int32") /* ty=Tensor[(3), int32] */;
  %439 = cast(%434, dtype="uint16") /* ty=Tensor[(2, 12, 5), uint16] */;
  %440 = dyn.reshape(%437, %438, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %441 = minimum(%439, %440) /* ty=Tensor[(2, 12, 5), uint16] */;
  (%441,)
}

def @func_9958() -> (Tensor[(15, 3, 5), bool], Tensor[(6, 5, 11), float64], Tensor[(1, 330), float64]) {
  %442 = @func_9296() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float64], Tensor[(15, 3, 5), bool]) */;
  %443 = cast(meta[relay.Constant][22] /* ty=Tensor[(1, 330), float64] */, dtype="float64") /* ty=Tensor[(1, 330), float64] */;
  %444 = reshape(%443, newshape=[6, 5, 11]) /* ty=Tensor[(6, 5, 11), float64] */;
  %445 = @func_9080(%444) /* ty=(Tensor[(6, 5, 11), float64],) */;
  %446 = cast(meta[relay.Constant][22] /* ty=Tensor[(1, 330), float64] */, dtype="float64") /* ty=Tensor[(1, 330), float64] */;
  %447 = log(%446) /* ty=Tensor[(1, 330), float64] */;
  %448 = cast(%447, dtype="float64") /* ty=Tensor[(1, 330), float64] */;
  %449 = %442.0;
  %450 = %445.0;
  %451 = sqrt(%448) /* ty=Tensor[(1, 330), float64] */;
  (%449, %450, %451)
}

def @func_933() -> Tensor[(15, 3, 5), bool] {
  %452 = @func_633() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %452.0
}

def @func_12807() -> Tensor[(15, 3, 5), bool] {
  %453 = @func_633() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %453.0
}

def @func_14211() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(1001), float64]) {
  %454 = @func_1129() /* ty=(Tensor[(2, 12, 5), bool], Tensor[(120), uint8], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %455 = cast(meta[relay.Constant][23] /* ty=Tensor[(1001), uint64] */, dtype="uint64") /* ty=Tensor[(1001), uint64] */;
  %456 = reshape(%455, newshape=[1001]) /* ty=Tensor[(1001), uint64] */;
  %457 = @func_13237(%456) /* ty=(Tensor[(15, 3, 5), bool], Tensor[(60, 14), float32], Tensor[(1001), uint64]) */;
  %458 = cast(meta[relay.Constant][23] /* ty=Tensor[(1001), uint64] */, dtype="float64") /* ty=Tensor[(1001), float64] */;
  %459 = %454.3;
  %460 = %457.0;
  %461 = exp(%458) /* ty=Tensor[(1001), float64] */;
  (%459, %460, %461)
}

def @func_3352() -> (Tensor[(15, 3, 5), bool],) {
  %462 = @func_702() /* ty=Tensor[(15, 3, 5), bool] */;
  (%462,)
}

def @func_13608() -> (Tensor[(15, 3, 5), bool],) {
  %463 = @func_3943() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %464 = %463.0;
  (%464,)
}

def @func_7071() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  %465 = @func_5511() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool]) */;
  %466 = @func_4708() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %467 = %465.0;
  %468 = %466.0;
  (%467, %468)
}

def @func_7366(%var_7354: float64) -> (Tensor[(15, 3, 5), float64], Tensor[(13, 1, 10), float64], float64, Tensor[(130), float64]) {
  %469 = @func_5604() /* ty=(Tensor[(15, 3, 5), float64],) */;
  %470 = cast(%var_7354, dtype="float64") /* ty=float64 */;
  %471 = cast(meta[relay.Constant][24] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %472 = reshape(%470, newshape=[]) /* ty=float64 */;
  %473 = reshape(%471, newshape=[13, 1, 10]) /* ty=Tensor[(13, 1, 10), float64] */;
  %474 = @func_6500(%472, %473) /* ty=(Tensor[(13, 1, 10), float64],) */;
  %475 = %469.0;
  %476 = %474.0;
  (%475, %476, %var_7354, meta[relay.Constant][24] /* ty=Tensor[(130), float64] */)
}

def @func_2412() -> (Tensor[(15, 3, 5), bool],) {
  %477 = @func_680() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %478 = %477.0;
  (%478,)
}

def @func_3679() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  %479 = @func_3352() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %480 = @func_1309() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %481 = %479.0;
  %482 = @func_928() /* ty=Tensor[(15, 3, 5), bool] */;
  %483 = %480.0;
  (%481, %482, %483)
}

def @func_5439() -> Tensor[(15, 3, 5), bool] {
  %484 = @func_680() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %484.0
}

def @func_3476(%var_3442: Tensor[(14, 4, 15), float32]) -> (Tensor[(2, 12, 5), bool], Tensor[(14, 4, 15), int8]) {
  %485 = @func_1570() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], Tensor[(120), uint8]) */;
  %486 = cast(%var_3442, dtype="float64") /* ty=Tensor[(14, 4, 15), float64] */;
  %487 = log10(%486) /* ty=Tensor[(14, 4, 15), float64] */;
  %488 = cast(%var_3442, dtype="float32") /* ty=Tensor[(14, 4, 15), float32] */;
  %489 = shape_of(meta[relay.Constant][25] /* ty=Tensor[(14, 4, 15), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %490 = cast(meta[relay.Constant][25] /* ty=Tensor[(14, 4, 15), float32] */, dtype="float32") /* ty=Tensor[(14, 4, 15), float32] */;
  %491 = dyn.reshape(%488, %489, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %492 = power(%490, %491) /* ty=Tensor[(14, 4, 15), float32] */;
  %493 = cast(%492, dtype="int8") /* ty=Tensor[(14, 4, 15), int8] */;
  %494 = shape_of(%487, dtype="int32") /* ty=Tensor[(3), int32] */;
  %495 = cast(%487, dtype="int8") /* ty=Tensor[(14, 4, 15), int8] */;
  %496 = dyn.reshape(%493, %494, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %497 = %485.1;
  %498 = left_shift(%495, %496) /* ty=Tensor[(14, 4, 15), int8] */;
  (%497, %498)
}

def @func_3630() -> (Tensor[(15, 3, 5), bool],) {
  %499 = @func_2340() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %500 = %499.1;
  (%500,)
}

def @func_3410() -> Tensor[(15, 3, 5), bool] {
  %501 = @func_1947() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %501.0
}

def @func_6288(%var_6273: int16) -> (Tensor[(2, 12, 5), bool], Tensor[(15, 3, 5), float32], Tensor[(15, 3, 5), bool], int16, Tensor[(1, 78), float32]) {
  %502 = @func_4295() /* ty=(Tensor[(15, 3, 5), float32], Tensor[(1, 14, 3), float64], Tensor[(42), float32]) */;
  %503 = cast(%var_6273, dtype="int16") /* ty=int16 */;
  %504 = cast(meta[relay.Constant][26] /* ty=Tensor[(1, 78), int16] */, dtype="int16") /* ty=Tensor[(1, 78), int16] */;
  %505 = reshape(%503, newshape=[]) /* ty=int16 */;
  %506 = reshape(%504, newshape=[6, 13, 1]) /* ty=Tensor[(6, 13, 1), int16] */;
  %507 = @func_4546(%505, %506) /* ty=(Tensor[(15, 3, 5), bool], Tensor[(6, 13, 1), float32], Tensor[(42), float32], Tensor[(1001), uint64]) */;
  %508 = cast(meta[relay.Constant][26] /* ty=Tensor[(1, 78), int16] */, dtype="float32") /* ty=Tensor[(1, 78), float32] */;
  %509 = @func_3484() /* ty=Tensor[(2, 12, 5), bool] */;
  %510 = %502.0;
  %511 = %507.0;
  %512 = sqrt(%508) /* ty=Tensor[(1, 78), float32] */;
  (%509, %510, %511, %var_6273, %512)
}

def @func_4458() -> Tensor[(42), float32] {
  %513 = @func_2289() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(1, 14, 3), float64], Tensor[(42), float32], Tensor[(1, 14, 3), float64]) */;
  %513.2
}

def @func_6012() -> (Tensor[(15, 3, 5), bool],) {
  %514 = @func_1684() /* ty=Tensor[(15, 3, 5), bool] */;
  (%514,)
}

def @func_9709() -> Tensor[(42), float32] {
  @func_2572() /* ty=Tensor[(42), float32] */
}

def @func_12526(%var_12524: float64) -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], float64) {
  %515 = @func_8616() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float64]) */;
  %516 = cast(%var_12524, dtype="float64") /* ty=float64 */;
  %517 = reshape(%516, newshape=[]) /* ty=float64 */;
  %518 = @func_11764(%517) /* ty=(Tensor[(9, 5, 2), float64], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %519 = %515.0;
  %520 = %518.1;
  (%519, %520, %var_12524)
}

def @func_7092(%var_7086: Tensor[(16, 3, 2), float32]) -> Tensor[(16, 3, 2), float32] {
  %521 = cast(%var_7086, dtype="float32") /* ty=Tensor[(16, 3, 2), float32] */;
  %522 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(16, 3, 2), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %523 = cast(meta[relay.Constant][27] /* ty=Tensor[(16, 3, 2), float32] */, dtype="float32") /* ty=Tensor[(16, 3, 2), float32] */;
  %524 = dyn.reshape(%521, %522, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  divide(%523, %524) /* ty=Tensor[(16, 3, 2), float32] */
}

def @func_5550(%var_5546: Tensor[(36), int16], %var_5547: Tensor[(468), int16]) -> (Tensor[(160), float64], Tensor[(12, 3, 13), int16], Tensor[(36), int16], Tensor[(468), int16]) {
  %525 = @func_3304() /* ty=(Tensor[(42), float32], Tensor[(15, 3, 5), bool], Tensor[(4, 5, 8), float64], Tensor[(160), float64]) */;
  %526 = cast(%var_5546, dtype="int16") /* ty=Tensor[(36), int16] */;
  %527 = cast(%var_5547, dtype="int16") /* ty=Tensor[(468), int16] */;
  %528 = reshape(%526, newshape=[12, 3, 1]) /* ty=Tensor[(12, 3, 1), int16] */;
  %529 = reshape(%527, newshape=[12, 3, 13]) /* ty=Tensor[(12, 3, 13), int16] */;
  %530 = @func_1547(%528, %529) /* ty=(Tensor[(12, 3, 13), int16], Tensor[(120), uint8]) */;
  %531 = %525.3;
  %532 = %530.0;
  (%531, %532, %var_5546, %var_5547)
}

def @func_11388(%var_11358: Tensor[(1001), uint64]) -> (Tensor[(15, 3, 5), bool], Tensor[(42), float32], Tensor[(1001), uint64]) {
  %533 = @func_2412() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %534 = cast(%var_11358, dtype="uint64") /* ty=Tensor[(1001), uint64] */;
  %535 = reshape(%534, newshape=[1001]) /* ty=Tensor[(1001), uint64] */;
  %536 = @func_9650(%535) /* ty=(Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], Tensor[(60, 14), float32], Tensor[(120), uint8], Tensor[(1001), uint64], Tensor[(42), float32]) */;
  %537 = %533.0;
  %538 = %536.5;
  (%537, %538, %var_11358)
}

def @func_1244(%var_1242: Tensor[(42), float32]) -> (Tensor[(15, 3, 5), bool], Tensor[(?, 14, 3), float32], Tensor[(30, 9), float64], Tensor[(42), float32]) {
  %539 = cast(meta[relay.Constant][28] /* ty=Tensor[(30, 9), float64] */, dtype="float64") /* ty=Tensor[(30, 9), float64] */;
  %540 = cast(%var_1242, dtype="float32") /* ty=Tensor[(42), float32] */;
  %541 = reshape(%539, newshape=[3, 10, 9]) /* ty=Tensor[(3, 10, 9), float64] */;
  %542 = reshape(%540, newshape=[42]) /* ty=Tensor[(42), float32] */;
  %543 = @func_554(%541, %542) /* ty=(Tensor[(3, 10, 9), bool], Tensor[(1, 14, 3), float32], Tensor[(?, 14, 3), float32]) */;
  %544 = @func_933() /* ty=Tensor[(15, 3, 5), bool] */;
  %545 = %543.2;
  (%544, %545, meta[relay.Constant][28] /* ty=Tensor[(30, 9), float64] */, %var_1242)
}

def @func_14099() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float32]) {
  %546 = @func_12170() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %547 = %546.0;
  %548 = @func_9883() /* ty=Tensor[(15, 3, 5), float32] */;
  (%547, %548)
}

def @func_4295() -> (Tensor[(15, 3, 5), float32], Tensor[(1, 14, 3), float64], Tensor[(42), float32]) {
  %549 = @func_3968() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %550 = %549.0;
  %551 = cast(%550, dtype="float32") /* ty=Tensor[(15, 3, 5), float32] */;
  %552 = @func_2289() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(1, 14, 3), float64], Tensor[(42), float32], Tensor[(1, 14, 3), float64]) */;
  %553 = exp(%551) /* ty=Tensor[(15, 3, 5), float32] */;
  %554 = %552.3;
  %555 = @func_2572() /* ty=Tensor[(42), float32] */;
  (%553, %554, %555)
}

def @func_3240() -> Tensor[(15, 3, 5), bool] {
  %556 = @func_2774() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %556.0
}

def @func_5992() -> (Tensor[(2, 12, 5), bool],) {
  %557 = @func_3484() /* ty=Tensor[(2, 12, 5), bool] */;
  (%557,)
}

def @func_9534(%var_9530: Tensor[(6, 14, 14), float32]) -> Tensor[(6, 14, 14), float32] {
  %558 = cast(%var_9530, dtype="float32") /* ty=Tensor[(6, 14, 14), float32] */;
  cosh(%558) /* ty=Tensor[(6, 14, 14), float32] */
}

def @func_5337() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  %559 = @func_2088() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float32], Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), float64]) */;
  %560 = @func_2491() /* ty=(Tensor[(2, 12, 5), float64], Tensor[(15, 3, 5), bool]) */;
  %561 = %559.0;
  %562 = %560.1;
  (%561, %562)
}

def @func_7109() -> (Tensor[(15, 3, 5), bool],) {
  %563 = @func_3387() /* ty=Tensor[(15, 3, 5), bool] */;
  (%563,)
}

def @func_3484() -> Tensor[(2, 12, 5), bool] {
  %564 = @func_1602() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], Tensor[(120), uint8]) */;
  %564.1
}

def @func_5015() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float64]) {
  %565 = @func_2340() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %566 = @func_4309() /* ty=(Tensor[(15, 3, 5), float64], Tensor[(15, 3, 5), bool]) */;
  %567 = %565.1;
  %568 = %566.0;
  (%567, %568)
}

def @func_9055(%var_9044: Tensor[(15, 13, 6), float32], %var_9045: Tensor[(15, 13, 6), float32]) -> (Tensor[(15, 13, 6), float32], Tensor[(15, 3, 5), bool]) {
  %569 = cast(%var_9045, dtype="float32") /* ty=Tensor[(15, 13, 6), float32] */;
  %570 = shape_of(%var_9044, dtype="int32") /* ty=Tensor[(3), int32] */;
  %571 = cast(%var_9044, dtype="float32") /* ty=Tensor[(15, 13, 6), float32] */;
  %572 = dyn.reshape(%569, %570, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %573 = @func_2491() /* ty=(Tensor[(2, 12, 5), float64], Tensor[(15, 3, 5), bool]) */;
  %574 = floor_divide(%571, %572) /* ty=Tensor[(15, 13, 6), float32] */;
  %575 = %573.1;
  (%574, %575)
}

def @func_2998(%var_2952: Tensor[(11, 14, 3), float64], %var_2976: Tensor[(1001), uint64]) -> (Tensor[(11, 14, 3), float64], Tensor[(15, 3, 5), bool], Tensor[(42), float32], Tensor[(1001), uint64], Tensor[(6, 20), uint8]) {
  %576 = @func_1444() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(120), uint8], Tensor[(120), uint8], Tensor[(1, 14, 3), float64], Tensor[(42), float32]) */;
  %577 = %576.3;
  %578 = cast(%577, dtype="float64") /* ty=Tensor[(1, 14, 3), float64] */;
  %579 = cast(%var_2952, dtype="float64") /* ty=Tensor[(11, 14, 3), float64] */;
  %580 = @func_680() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %581 = cast(%var_2976, dtype="uint64") /* ty=Tensor[(1001), uint64] */;
  %582 = cast(%577, dtype="float32") /* ty=Tensor[(1, 14, 3), float32] */;
  %583 = cast(meta[relay.Constant][29] /* ty=Tensor[(6, 20), uint8] */, dtype="uint8") /* ty=Tensor[(6, 20), uint8] */;
  %584 = reshape(%581, newshape=[11, 7, 13]) /* ty=Tensor[(11, 7, 13), uint64] */;
  %585 = reshape(%582, newshape=[42]) /* ty=Tensor[(42), float32] */;
  %586 = reshape(%583, newshape=[120]) /* ty=Tensor[(120), uint8] */;
  %587 = @func_1493(%584, %585, %586) /* ty=(Tensor[(11, 7, 13), uint64], Tensor[(42), float32], Tensor[(42), float32], Tensor[(120), uint8], Tensor[(120), uint8]) */;
  %588 = power(%578, %579) /* ty=Tensor[(11, 14, 3), float64] */;
  %589 = %580.0;
  %590 = %587.1;
  (%588, %589, %590, %var_2976, meta[relay.Constant][29] /* ty=Tensor[(6, 20), uint8] */)
}

def @func_10111() -> Tensor[(15, 3, 5), bool] {
  %591 = @func_5920() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %591.2
}

def @func_2259() -> (Tensor[(1, 14, 3), float64], Tensor[(1, 14, 3), float64], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  %592 = @func_1444() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(120), uint8], Tensor[(120), uint8], Tensor[(1, 14, 3), float64], Tensor[(42), float32]) */;
  %593 = @func_1823() /* ty=(Tensor[(1, 14, 3), float64],) */;
  %594 = @func_1602() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], Tensor[(120), uint8]) */;
  %595 = @func_757() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %596 = %592.3;
  %597 = %593.0;
  %598 = %594.0;
  %599 = %595.0;
  (%596, %597, %598, %599)
}

def @func_10153() -> Tensor[(15, 13, 6), float64] {
  @func_8698() /* ty=Tensor[(15, 13, 6), float64] */
}

def @func_5974(%var_5958: Tensor[(6, 140), float32]) -> (Tensor[(15, 3, 5), float64], Tensor[(2, 12, 5), bool], Tensor[(6, 140), float32], Tensor[(15, 3, 5), bool]) {
  %600 = @func_4309() /* ty=(Tensor[(15, 3, 5), float64], Tensor[(15, 3, 5), bool]) */;
  %601 = cast(%var_5958, dtype="float32") /* ty=Tensor[(6, 140), float32] */;
  %602 = reshape(%601, newshape=[14, 4, 15]) /* ty=Tensor[(14, 4, 15), float32] */;
  %603 = @func_3476(%602) /* ty=(Tensor[(2, 12, 5), bool], Tensor[(14, 4, 15), int8]) */;
  %604 = @func_4605() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(91, 11), float64], Tensor[(15, 3, 5), bool]) */;
  %605 = %600.0;
  %606 = %603.0;
  %607 = %604.3;
  (%605, %606, %var_5958, %607)
}

def @func_2933(%var_2878: Tensor[(3, 40), uint8], %var_2915: Tensor[(468), int16]) -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(3, 40), uint8], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(1, 14, 3), float64], Tensor[(120), uint8], Tensor[(18, 2), int16], Tensor[(468), int16]) {
  %608 = @func_1309() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %609 = cast(%var_2878, dtype="uint8") /* ty=Tensor[(3, 40), uint8] */;
  %610 = reshape(%609, newshape=[120]) /* ty=Tensor[(120), uint8] */;
  %611 = @func_1048(%610) /* ty=(Tensor[(2, 12, 5), bool], Tensor[(120), uint8], Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], Tensor[(15, 3, 5), float32]) */;
  %612 = @func_2289() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(1, 14, 3), float64], Tensor[(42), float32], Tensor[(1, 14, 3), float64]) */;
  %613 = cast(meta[relay.Constant][30] /* ty=Tensor[(18, 2), int16] */, dtype="int16") /* ty=Tensor[(18, 2), int16] */;
  %614 = cast(%var_2915, dtype="int16") /* ty=Tensor[(468), int16] */;
  %615 = reshape(%613, newshape=[12, 3, 1]) /* ty=Tensor[(12, 3, 1), int16] */;
  %616 = reshape(%614, newshape=[12, 3, 13]) /* ty=Tensor[(12, 3, 13), int16] */;
  %617 = @func_1547(%615, %616) /* ty=(Tensor[(12, 3, 13), int16], Tensor[(120), uint8]) */;
  %618 = %608.0;
  %619 = %611.2;
  %620 = @func_933() /* ty=Tensor[(15, 3, 5), bool] */;
  %621 = @func_702() /* ty=Tensor[(15, 3, 5), bool] */;
  %622 = %612.3;
  %623 = %617.1;
  (%618, %619, %var_2878, %620, %621, %622, %623, meta[relay.Constant][30] /* ty=Tensor[(18, 2), int16] */, %var_2915)
}

def @func_10106() -> (Tensor[(15, 3, 5), float64], Tensor[(5, 13, 5), float32], Tensor[(325), uint16]) {
  %624 = @func_6901() /* ty=(Tensor[(15, 3, 5), float64],) */;
  %625 = cast(meta[relay.Constant][31] /* ty=Tensor[(325), uint16] */, dtype="uint16") /* ty=Tensor[(325), uint16] */;
  %626 = reshape(%625, newshape=[65, 5]) /* ty=Tensor[(65, 5), uint16] */;
  %627 = @func_6833(%626) /* ty=(Tensor[(15, 3, 5), bool], Tensor[(65, 5), uint16], Tensor[(5, 13, 5), float32], Tensor[(15, 3, 5), bool]) */;
  %628 = %624.0;
  %629 = %627.2;
  (%628, %629, meta[relay.Constant][31] /* ty=Tensor[(325), uint16] */)
}

def @func_2745() -> (Tensor[(15, 3, 5), bool],) {
  %630 = @func_1570() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], Tensor[(120), uint8]) */;
  %631 = %630.0;
  (%631,)
}

def @func_13932(%var_13920: float64, %var_13921: Tensor[(2, 11, 13), float64]) -> (Tensor[(2, 11, 13), bool],) {
  %632 = cast(%var_13920, dtype="bool") /* ty=bool */;
  %633 = cast(%var_13921, dtype="bool") /* ty=Tensor[(2, 11, 13), bool] */;
  %634 = greater_equal(%632, %633) /* ty=Tensor[(2, 11, 13), bool] */;
  (%634,)
}

def @func_12952() -> (Tensor[(15, 3, 5), bool],) {
  %635 = @func_12165() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], int16, int16, Tensor[(15, 3, 5), float32], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %636 = %635.6;
  (%636,)
}

def @func_10594(%var_10584: Tensor[(468), int16]) -> (Tensor[(2, 12, 5), uint16], Tensor[(2, 12, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(468), int16]) {
  %637 = @func_10482() /* ty=(Tensor[(2, 12, 5), uint16],) */;
  %638 = @func_5992() /* ty=(Tensor[(2, 12, 5), bool],) */;
  %639 = %638.0;
  %640 = cast(%639, dtype="uint8") /* ty=Tensor[(2, 12, 5), uint8] */;
  %641 = cast(%var_10584, dtype="int16") /* ty=Tensor[(468), int16] */;
  %642 = reshape(%640, newshape=[3, 40]) /* ty=Tensor[(3, 40), uint8] */;
  %643 = reshape(%641, newshape=[468]) /* ty=Tensor[(468), int16] */;
  %644 = @func_2933(%642, %643) /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(3, 40), uint8], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(1, 14, 3), float64], Tensor[(120), uint8], Tensor[(18, 2), int16], Tensor[(468), int16]) */;
  %645 = %637.0;
  %646 = %644.4;
  (%645, %639, %646, %var_10584)
}

def @func_12875() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  %647 = @func_6125() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %648 = @func_933() /* ty=Tensor[(15, 3, 5), bool] */;
  %649 = %647.0;
  (%648, %649)
}

def @func_11148() -> (Tensor[(42), float32],) {
  %650 = @func_3304() /* ty=(Tensor[(42), float32], Tensor[(15, 3, 5), bool], Tensor[(4, 5, 8), float64], Tensor[(160), float64]) */;
  %651 = %650.0;
  (%651,)
}

def @func_1684() -> Tensor[(15, 3, 5), bool] {
  @func_702() /* ty=Tensor[(15, 3, 5), bool] */
}

def @func_6901() -> (Tensor[(15, 3, 5), float64],) {
  %652 = @func_5015() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float64]) */;
  %653 = %652.1;
  (%653,)
}

def @func_12178() -> Tensor[(15, 3, 5), bool] {
  %654 = @func_680() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %654.0
}

def @func_12793() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  %655 = @func_12582() /* ty=(Tensor[(2, 12, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %656 = @func_3520() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %657 = %655.1;
  %658 = %656.0;
  (%657, %658)
}

def @func_202(%var_191: Tensor[(1, 14, 3), float32]) -> (Tensor[(1, 14, 3), float32], Tensor[(1, 14, 3), float64]) {
  %659 = cast(%var_191, dtype="float32") /* ty=Tensor[(1, 14, 3), float32] */;
  %660 = cast(%var_191, dtype="float64") /* ty=Tensor[(1, 14, 3), float64] */;
  %661 = cosh(%659) /* ty=Tensor[(1, 14, 3), float32] */;
  %662 = tan(%660) /* ty=Tensor[(1, 14, 3), float64] */;
  (%661, %662)
}

def @func_3327() -> (Tensor[(2, 12, 5), float64],) {
  %663 = @func_2491() /* ty=(Tensor[(2, 12, 5), float64], Tensor[(15, 3, 5), bool]) */;
  %664 = %663.0;
  (%664,)
}

def @func_14893() -> Tensor[(15, 3, 5), bool] {
  %665 = @func_2142() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %665.0
}

def @func_9800(%var_9785: Tensor[(11, 14, 3), float64]) -> (Tensor[(13, 14, 3), bool], Tensor[(11, 14, 3), bool]) {
  %666 = @func_7168() /* ty=(Tensor[(1, 14, 3), float64],) */;
  %667 = %666.0;
  %668 = cast(%667, dtype="bool") /* ty=Tensor[(1, 14, 3), bool] */;
  %669 = cast(meta[relay.Constant][32] /* ty=Tensor[(13, 14, 3), float64] */, dtype="bool") /* ty=Tensor[(13, 14, 3), bool] */;
  %670 = cast(%667, dtype="bool") /* ty=Tensor[(1, 14, 3), bool] */;
  %671 = cast(%var_9785, dtype="bool") /* ty=Tensor[(11, 14, 3), bool] */;
  %672 = logical_or(%668, %669) /* ty=Tensor[(13, 14, 3), bool] */;
  %673 = greater_equal(%670, %671) /* ty=Tensor[(11, 14, 3), bool] */;
  (%672, %673)
}

def @func_1570() -> (Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], Tensor[(120), uint8]) {
  %674 = @func_633() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %675 = cast(meta[relay.Constant][33] /* ty=Tensor[(120), uint8] */, dtype="uint8") /* ty=Tensor[(120), uint8] */;
  %676 = reshape(%675, newshape=[2, 12, 5]) /* ty=Tensor[(2, 12, 5), uint8] */;
  %677 = %674.0;
  %678 = @func_501(%676) /* ty=Tensor[(2, 12, 5), bool] */;
  (%677, %678, meta[relay.Constant][33] /* ty=Tensor[(120), uint8] */)
}

def @func_3943() -> (Tensor[(15, 3, 5), bool],) {
  %679 = @func_1129() /* ty=(Tensor[(2, 12, 5), bool], Tensor[(120), uint8], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %680 = %679.3;
  (%680,)
}

def @func_8477() -> Tensor[(15, 3, 5), bool] {
  %681 = @func_6346() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %681.0
}

def @func_6623(%var_6617: Tensor[(6, 20), uint8]) -> (Tensor[(1, 14, 3), float64], Tensor[(2, 12, 5), bool], Tensor[(6, 20), uint8], Tensor[(15, 3, 5), bool]) {
  %682 = @func_5258() /* ty=(Tensor[(1, 14, 3), float64],) */;
  %683 = cast(%var_6617, dtype="uint8") /* ty=Tensor[(6, 20), uint8] */;
  %684 = reshape(%683, newshape=[2, 12, 5]) /* ty=Tensor[(2, 12, 5), uint8] */;
  %685 = @func_2745() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %686 = %682.0;
  %687 = @func_501(%684) /* ty=Tensor[(2, 12, 5), bool] */;
  %688 = %685.0;
  (%686, %687, %var_6617, %688)
}

def @func_12197() -> (Tensor[(42), float32],) {
  %689 = @func_11477() /* ty=(Tensor[(42), float32],) */;
  %690 = %689.0;
  (%690,)
}

def @func_1229(%var_1168: Tensor[(120), uint8]) -> (Tensor[(2, 12, 5), bool], Tensor[(120), uint8], Tensor[(15, 3, 5), uint16], Tensor[(2, 12, 5), bool], Tensor[(2, 12, 5), float64]) {
  %691 = cast(%var_1168, dtype="uint8") /* ty=Tensor[(120), uint8] */;
  %692 = reshape(%691, newshape=[120]) /* ty=Tensor[(120), uint8] */;
  %693 = @func_1048(%692) /* ty=(Tensor[(2, 12, 5), bool], Tensor[(120), uint8], Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], Tensor[(15, 3, 5), float32]) */;
  %694 = @func_702() /* ty=Tensor[(15, 3, 5), bool] */;
  %695 = @func_928() /* ty=Tensor[(15, 3, 5), bool] */;
  %696 = cast(%695, dtype="uint16") /* ty=Tensor[(15, 3, 5), uint16] */;
  %697 = shape_of(%694, dtype="int32") /* ty=Tensor[(3), int32] */;
  %698 = cast(%694, dtype="uint16") /* ty=Tensor[(15, 3, 5), uint16] */;
  %699 = dyn.reshape(%696, %697, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %700 = cast(%var_1168, dtype="uint8") /* ty=Tensor[(120), uint8] */;
  %701 = reshape(%700, newshape=[2, 12, 5]) /* ty=Tensor[(2, 12, 5), uint8] */;
  %702 = %693.3;
  %703 = cast(%702, dtype="uint8") /* ty=Tensor[(2, 12, 5), uint8] */;
  %704 = reshape(%703, newshape=[120]) /* ty=Tensor[(120), uint8] */;
  %705 = @func_1048(%704) /* ty=(Tensor[(2, 12, 5), bool], Tensor[(120), uint8], Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], Tensor[(15, 3, 5), float32]) */;
  %706 = %705.0;
  %707 = cast(%706, dtype="float64") /* ty=Tensor[(2, 12, 5), float64] */;
  %708 = left_shift(%698, %699) /* ty=Tensor[(15, 3, 5), uint16] */;
  %709 = @func_501(%701) /* ty=Tensor[(2, 12, 5), bool] */;
  %710 = log10(%707) /* ty=Tensor[(2, 12, 5), float64] */;
  (%702, %var_1168, %708, %709, %710)
}

def @func_14590() -> (Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), float32]) {
  %711 = @func_4153() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %712 = @func_13895() /* ty=(Tensor[(15, 13, 6), float64], Tensor[(2, 12, 5), float32]) */;
  %713 = %711.1;
  %714 = %712.1;
  (%713, %714)
}

def @func_14848() -> (Tensor[(120, 11), uint8], Tensor[(120, 11), float64], Tensor[(120, 11), bool], Tensor[(42), float32], Tensor[(15, 3, 5), bool]) {
  %715 = @func_9899() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(120, 1), uint8], Tensor[(15, 3, 5), bool]) */;
  %716 = %715.2;
  %717 = cast(%716, dtype="uint8") /* ty=Tensor[(120, 1), uint8] */;
  %718 = cast(meta[relay.Constant][34] /* ty=Tensor[(120, 11), uint8] */, dtype="uint8") /* ty=Tensor[(120, 11), uint8] */;
  %719 = cast(meta[relay.Constant][34] /* ty=Tensor[(120, 11), uint8] */, dtype="float64") /* ty=Tensor[(120, 11), float64] */;
  %720 = cast(%716, dtype="float64") /* ty=Tensor[(120, 1), float64] */;
  %721 = cast(meta[relay.Constant][34] /* ty=Tensor[(120, 11), uint8] */, dtype="bool") /* ty=Tensor[(120, 11), bool] */;
  %722 = cast(%716, dtype="bool") /* ty=Tensor[(120, 1), bool] */;
  %723 = @func_12165() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], int16, int16, Tensor[(15, 3, 5), float32], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %724 = bitwise_and(%717, %718) /* ty=Tensor[(120, 11), uint8] */;
  %725 = divide(%719, %720) /* ty=Tensor[(120, 11), float64] */;
  %726 = less_equal(%721, %722) /* ty=Tensor[(120, 11), bool] */;
  %727 = @func_2572() /* ty=Tensor[(42), float32] */;
  %728 = %723.0;
  (%724, %725, %726, %727, %728)
}

def @func_1309() -> (Tensor[(15, 3, 5), bool],) {
  %729 = @func_1129() /* ty=(Tensor[(2, 12, 5), bool], Tensor[(120), uint8], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %730 = %729.3;
  (%730,)
}

def @func_11524(%var_11519: Tensor[(1, 1001), uint64]) -> (Tensor[(6, 14, 3), int32], Tensor[(120), uint8], Tensor[(1, 1001), uint64], Tensor[(42), float32], Tensor[(6, 20), uint8]) {
  %731 = @func_10847() /* ty=(Tensor[(2, 12, 5), bool], Tensor[(6, 14, 3), int32]) */;
  %732 = cast(%var_11519, dtype="uint64") /* ty=Tensor[(1, 1001), uint64] */;
  %733 = cast(meta[relay.Constant][35] /* ty=Tensor[(42), float32] */, dtype="float32") /* ty=Tensor[(42), float32] */;
  %734 = cast(meta[relay.Constant][36] /* ty=Tensor[(6, 20), uint8] */, dtype="uint8") /* ty=Tensor[(6, 20), uint8] */;
  %735 = reshape(%732, newshape=[11, 7, 13]) /* ty=Tensor[(11, 7, 13), uint64] */;
  %736 = reshape(%733, newshape=[42]) /* ty=Tensor[(42), float32] */;
  %737 = reshape(%734, newshape=[120]) /* ty=Tensor[(120), uint8] */;
  %738 = @func_1493(%735, %736, %737) /* ty=(Tensor[(11, 7, 13), uint64], Tensor[(42), float32], Tensor[(42), float32], Tensor[(120), uint8], Tensor[(120), uint8]) */;
  %739 = %731.1;
  %740 = %738.4;
  (%739, %740, %var_11519, meta[relay.Constant][35] /* ty=Tensor[(42), float32] */, meta[relay.Constant][36] /* ty=Tensor[(6, 20), uint8] */)
}

def @func_7240() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float32]) {
  %741 = @func_4424() /* ty=Tensor[(15, 3, 5), bool] */;
  %742 = cast(%741, dtype="bool") /* ty=Tensor[(15, 3, 5), bool] */;
  %743 = reshape(%742, newshape=[15, 3, 5]) /* ty=Tensor[(15, 3, 5), bool] */;
  %744 = @func_2449(%743) /* ty=Tensor[(15, 3, 5), float32] */;
  (%741, %744)
}

def @func_11764(%var_11731: float64) -> (Tensor[(9, 5, 2), float64], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  %745 = cast(%var_11731, dtype="float64") /* ty=float64 */;
  %746 = cast(meta[relay.Constant][37] /* ty=Tensor[(9, 5, 2), float64] */, dtype="float64") /* ty=Tensor[(9, 5, 2), float64] */;
  %747 = @func_6346() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %748 = mod(%745, %746) /* ty=Tensor[(9, 5, 2), float64] */;
  %749 = @func_11353() /* ty=Tensor[(15, 3, 5), bool] */;
  %750 = %747.0;
  (%748, %749, %750)
}

def @func_680() -> (Tensor[(15, 3, 5), bool],) {
  %751 = @func_633() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %752 = %751.0;
  (%752,)
}

def @func_15143(%var_15138: Tensor[(42, 1), float32]) -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(42), float32], Tensor[(42, 1), float32]) {
  %753 = @func_12832() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float32]) */;
  %754 = @func_3679() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %755 = cast(%var_15138, dtype="float32") /* ty=Tensor[(42, 1), float32] */;
  %756 = reshape(%755, newshape=[42]) /* ty=Tensor[(42), float32] */;
  %757 = @func_3157(%756) /* ty=(Tensor[(15, 3, 5), bool], Tensor[(?, 14, 3), float32], Tensor[(270), float64], Tensor[(42), float32], Tensor[(15, 3, 5), bool]) */;
  %758 = %753.0;
  %759 = %754.1;
  %760 = %757.3;
  (%758, %759, %760, %var_15138)
}

def @func_7787(%var_7734: Tensor[(546), int16]) -> (Tensor[(15, 3, 5), bool], Tensor[(3, 14, 13), bool], Tensor[(546), int16], Tensor[(1, 14, 3), float64]) {
  %761 = cast(%var_7734, dtype="int16") /* ty=Tensor[(546), int16] */;
  %762 = reshape(%761, newshape=[3, 14, 13]) /* ty=Tensor[(3, 14, 13), int16] */;
  %763 = @func_4699() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(1, 14, 3), float64]) */;
  %764 = @func_5439() /* ty=Tensor[(15, 3, 5), bool] */;
  %765 = @func_3847(%762) /* ty=Tensor[(3, 14, 13), bool] */;
  %766 = %763.1;
  (%764, %765, %var_7734, %766)
}

def @func_12582() -> (Tensor[(2, 12, 5), bool], Tensor[(15, 3, 5), bool]) {
  %767 = @func_10412() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %768 = @func_12449() /* ty=Tensor[(2, 12, 5), bool] */;
  %769 = %767.2;
  (%768, %769)
}

def @func_5146(%var_5065: int16, %var_5094: Tensor[(60, 2), uint8]) -> (Tensor[(4, 12, 7), int16], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(60, 2), float64], Tensor[(15, 3, 5), bool], Tensor[(42), float32]) {
  %770 = cast(%var_5065, dtype="int16") /* ty=int16 */;
  %771 = cast(meta[relay.Constant][38] /* ty=Tensor[(4, 12, 7), int16] */, dtype="int16") /* ty=Tensor[(4, 12, 7), int16] */;
  %772 = @func_2412() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %773 = cast(%var_5094, dtype="uint8") /* ty=Tensor[(60, 2), uint8] */;
  %774 = reshape(%773, newshape=[3, 40]) /* ty=Tensor[(3, 40), uint8] */;
  %775 = @func_914(%774) /* ty=(Tensor[(2, 12, 5), bool], Tensor[(3, 40), uint8], Tensor[(15, 3, 5), float64], Tensor[(15, 3, 5), bool]) */;
  %776 = cast(%var_5094, dtype="float64") /* ty=Tensor[(60, 2), float64] */;
  %777 = @func_2745() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %778 = @func_3606() /* ty=(Tensor[(42), float32], Tensor[(15, 3, 5), bool]) */;
  %779 = multiply(%770, %771) /* ty=Tensor[(4, 12, 7), int16] */;
  %780 = %772.0;
  %781 = %775.3;
  %782 = log2(%776) /* ty=Tensor[(60, 2), float64] */;
  %783 = %777.0;
  %784 = %778.0;
  (%779, %780, %781, %782, %783, %784)
}

def @func_10923() -> Tensor[(15, 3, 5), bool] {
  %785 = @func_2142() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %785.0
}

def @func_15078() -> (Tensor[(15, 3, 5), bool],) {
  %786 = @func_10738() /* ty=Tensor[(15, 3, 5), bool] */;
  (%786,)
}

def @func_3157(%var_3125: Tensor[(42), float32]) -> (Tensor[(15, 3, 5), bool], Tensor[(?, 14, 3), float32], Tensor[(270), float64], Tensor[(42), float32], Tensor[(15, 3, 5), bool]) {
  %787 = @func_1570() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], Tensor[(120), uint8]) */;
  %788 = cast(meta[relay.Constant][39] /* ty=Tensor[(270), float64] */, dtype="float64") /* ty=Tensor[(270), float64] */;
  %789 = cast(%var_3125, dtype="float32") /* ty=Tensor[(42), float32] */;
  %790 = reshape(%788, newshape=[3, 10, 9]) /* ty=Tensor[(3, 10, 9), float64] */;
  %791 = reshape(%789, newshape=[42]) /* ty=Tensor[(42), float32] */;
  %792 = @func_554(%790, %791) /* ty=(Tensor[(3, 10, 9), bool], Tensor[(1, 14, 3), float32], Tensor[(?, 14, 3), float32]) */;
  %793 = @func_1129() /* ty=(Tensor[(2, 12, 5), bool], Tensor[(120), uint8], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %794 = %787.0;
  %795 = %792.2;
  %796 = %793.3;
  (%794, %795, meta[relay.Constant][39] /* ty=Tensor[(270), float64] */, %var_3125, %796)
}

def @func_5258() -> (Tensor[(1, 14, 3), float64],) {
  %797 = @func_4295() /* ty=(Tensor[(15, 3, 5), float32], Tensor[(1, 14, 3), float64], Tensor[(42), float32]) */;
  %798 = %797.1;
  (%798,)
}

def @func_10738() -> Tensor[(15, 3, 5), bool] {
  %799 = @func_2259() /* ty=(Tensor[(1, 14, 3), float64], Tensor[(1, 14, 3), float64], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %799.3
}

def @func_5187() -> (Tensor[(15, 3, 5), bool],) {
  %800 = @func_3387() /* ty=Tensor[(15, 3, 5), bool] */;
  (%800,)
}

def @func_8947(%var_8913: Tensor[(1344), float32]) -> (Tensor[(15, 3, 5), bool], Tensor[(14, 12, 8), int32], Tensor[(1344), float32]) {
  %801 = @func_6346() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %802 = cast(%var_8913, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %803 = reshape(%802, newshape=[14, 12, 8]) /* ty=Tensor[(14, 12, 8), float32] */;
  %804 = @func_7473(%803) /* ty=(Tensor[(14, 12, 8), int32],) */;
  %805 = %801.0;
  %806 = %804.0;
  (%805, %806, %var_8913)
}

def @main(%var_15353: Tensor[(1001, 1), uint64]) -> (Tensor[(4, 5, 8), float64], Tensor[(42), float32], Tensor[(1, 14, 3), float64], Tensor[(1001, 1), float32]) {
  %807 = @func_3304() /* ty=(Tensor[(42), float32], Tensor[(15, 3, 5), bool], Tensor[(4, 5, 8), float64], Tensor[(160), float64]) */;
  %808 = cast(%var_15353, dtype="uint64") /* ty=Tensor[(1001, 1), uint64] */;
  %809 = reshape(%808, newshape=[1, 1001]) /* ty=Tensor[(1, 1001), uint64] */;
  %810 = @func_11524(%809) /* ty=(Tensor[(6, 14, 3), int32], Tensor[(120), uint8], Tensor[(1, 1001), uint64], Tensor[(42), float32], Tensor[(6, 20), uint8]) */;
  %811 = @func_2289() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(1, 14, 3), float64], Tensor[(42), float32], Tensor[(1, 14, 3), float64]) */;
  %812 = cast(%var_15353, dtype="float32") /* ty=Tensor[(1001, 1), float32] */;
  %813 = %807.2;
  %814 = %810.3;
  %815 = %811.3;
  %816 = sigmoid(%812) /* ty=Tensor[(1001, 1), float32] */;
  (%813, %814, %815, %816)
}

def @func_12080() -> (Tensor[(15, 3, 5), bool],) {
  %817 = @func_8634() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %818 = %817.0;
  (%818,)
}

def @func_12170() -> (Tensor[(15, 3, 5), bool],) {
  %819 = @func_11591() /* ty=Tensor[(15, 3, 5), bool] */;
  (%819,)
}

def @func_7626() -> (Tensor[(42), float32],) {
  %820 = @func_3606() /* ty=(Tensor[(42), float32], Tensor[(15, 3, 5), bool]) */;
  %821 = %820.0;
  (%821,)
}

def @func_10293() -> (Tensor[(15, 3, 5), bool],) {
  %822 = @func_1899() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %823 = %822.0;
  (%823,)
}

def @func_14321() -> (Tensor[(2, 12, 5), int32], Tensor[(42), float32], Tensor[(120), uint8]) {
  %824 = @func_12038() /* ty=(Tensor[(2, 12, 5), int32], Tensor[(42), float32]) */;
  %825 = @func_4395() /* ty=(Tensor[(42), float32], Tensor[(15, 3, 5), bool]) */;
  %826 = %824.0;
  %827 = cast(%826, dtype="uint8") /* ty=Tensor[(2, 12, 5), uint8] */;
  %828 = reshape(%827, newshape=[120]) /* ty=Tensor[(120), uint8] */;
  %829 = @func_7406(%828) /* ty=(Tensor[(15, 3, 5), bool], Tensor[(1, 14, 3), float64], Tensor[(120), uint8]) */;
  %830 = %825.0;
  %831 = %829.2;
  (%826, %830, %831)
}

def @func_11639() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  %832 = @func_10211() /* ty=Tensor[(15, 3, 5), bool] */;
  %833 = @func_10143() /* ty=Tensor[(15, 3, 5), bool] */;
  (%832, %833)
}

def @func_5426(%var_5408: Tensor[(9, 14, 3), float64]) -> (Tensor[(15, 3, 5), bool], Tensor[(9, 14, 3), int32], Tensor[(14, 4, 15), int8], Tensor[(840), float32]) {
  %834 = @func_3679() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %835 = @func_1444() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(120), uint8], Tensor[(120), uint8], Tensor[(1, 14, 3), float64], Tensor[(42), float32]) */;
  %836 = %835.3;
  %837 = cast(%836, dtype="int32") /* ty=Tensor[(1, 14, 3), int32] */;
  %838 = cast(%var_5408, dtype="int32") /* ty=Tensor[(9, 14, 3), int32] */;
  %839 = cast(meta[relay.Constant][40] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
  %840 = reshape(%839, newshape=[14, 4, 15]) /* ty=Tensor[(14, 4, 15), float32] */;
  %841 = @func_3476(%840) /* ty=(Tensor[(2, 12, 5), bool], Tensor[(14, 4, 15), int8]) */;
  %842 = %834.0;
  %843 = minimum(%837, %838) /* ty=Tensor[(9, 14, 3), int32] */;
  %844 = %841.1;
  (%842, %843, %844, meta[relay.Constant][40] /* ty=Tensor[(840), float32] */)
}

def @func_9177(%var_9095: Tensor[(2, 12, 5), bool]) -> (Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], Tensor[(270), float64], Tensor[(42), float32], Tensor[(15, 3, 5), float32], Tensor[(13, 1, 10), float64], Tensor[(130), float64], Tensor[(8, 3, 12), float32], Tensor[(3, 10, 9), float32]) {
  %845 = @func_2774() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %846 = @func_5992() /* ty=(Tensor[(2, 12, 5), bool],) */;
  %847 = %846.0;
  %848 = cast(%var_9095, dtype="bool") /* ty=Tensor[(2, 12, 5), bool] */;
  %849 = shape_of(%847, dtype="int32") /* ty=Tensor[(3), int32] */;
  %850 = cast(%847, dtype="bool") /* ty=Tensor[(2, 12, 5), bool] */;
  %851 = dyn.reshape(%848, %849, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %852 = @func_4295() /* ty=(Tensor[(15, 3, 5), float32], Tensor[(1, 14, 3), float64], Tensor[(42), float32]) */;
  %853 = cast(meta[relay.Constant][43] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
  %854 = reshape(%853, newshape=[130, 1]) /* ty=Tensor[(130, 1), float64] */;
  %855 = @func_7673(%854) /* ty=(Tensor[(15, 3, 5), bool], Tensor[(13, 1, 10), float64], float64, Tensor[(130, 1), float64]) */;
  %856 = cast(meta[relay.Constant][44] /* ty=Tensor[(288), int8] */, dtype="int8") /* ty=Tensor[(288), int8] */;
  %857 = reshape(%856, newshape=[288]) /* ty=Tensor[(288), int8] */;
  %858 = @func_7047(%857) /* ty=(Tensor[(15, 3, 5), float32], Tensor[(42), float32], Tensor[(8, 3, 12), bool], Tensor[(288), int8], Tensor[(15, 3, 5), bool]) */;
  %859 = %858.2;
  %860 = cast(meta[relay.Constant][44] /* ty=Tensor[(288), int8] */, dtype="float32") /* ty=Tensor[(288), float32] */;
  %861 = shape_of(%859, dtype="int32") /* ty=Tensor[(3), int32] */;
  %862 = cast(%859, dtype="float32") /* ty=Tensor[(8, 3, 12), float32] */;
  %863 = dyn.reshape(%860, %861, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %864 = cast(meta[relay.Constant][41] /* ty=Tensor[(270), float64] */, dtype="float64") /* ty=Tensor[(270), float64] */;
  %865 = cast(meta[relay.Constant][42] /* ty=Tensor[(42), float32] */, dtype="float32") /* ty=Tensor[(42), float32] */;
  %866 = reshape(%864, newshape=[3, 10, 9]) /* ty=Tensor[(3, 10, 9), float64] */;
  %867 = reshape(%865, newshape=[42]) /* ty=Tensor[(42), float32] */;
  %868 = @func_554(%866, %867) /* ty=(Tensor[(3, 10, 9), bool], Tensor[(1, 14, 3), float32], Tensor[(?, 14, 3), float32]) */;
  %869 = %868.0;
  %870 = cast(%869, dtype="float32") /* ty=Tensor[(3, 10, 9), float32] */;
  %871 = %845.1;
  %872 = greater_equal(%850, %851) /* ty=Tensor[(2, 12, 5), bool] */;
  %873 = %852.0;
  %874 = %855.1;
  %875 = mod(%862, %863) /* ty=Tensor[(8, 3, 12), float32] */;
  %876 = log2(%870) /* ty=Tensor[(3, 10, 9), float32] */;
  (%871, %872, meta[relay.Constant][41] /* ty=Tensor[(270), float64] */, meta[relay.Constant][42] /* ty=Tensor[(42), float32] */, %873, %874, meta[relay.Constant][43] /* ty=Tensor[(130), float64] */, %875, %876)
}

def @func_5830(%var_5784: Tensor[(2, 12, 5), float64]) -> (Tensor[(2, 12, 5), float64], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  %877 = @func_3327() /* ty=(Tensor[(2, 12, 5), float64],) */;
  %878 = %877.0;
  %879 = cast(%var_5784, dtype="float64") /* ty=Tensor[(2, 12, 5), float64] */;
  %880 = shape_of(%878, dtype="int32") /* ty=Tensor[(3), int32] */;
  %881 = cast(%878, dtype="float64") /* ty=Tensor[(2, 12, 5), float64] */;
  %882 = dyn.reshape(%879, %880, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %883 = @func_2774() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %884 = @func_2142() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %885 = power(%881, %882) /* ty=Tensor[(2, 12, 5), float64] */;
  %886 = %883.1;
  %887 = %884.0;
  (%885, %886, %887)
}

def @func_9445() -> (Tensor[(2, 12, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], int16, Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float32], Tensor[(2, 12, 5), float64], Tensor[(2, 12, 5), bool], Tensor[(2, 12, 5), int32]) {
  %888 = @func_1602() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], Tensor[(120), uint8]) */;
  %889 = @func_4605() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(91, 11), float64], Tensor[(15, 3, 5), bool]) */;
  %890 = cast(meta[relay.Constant][45] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %891 = reshape(%890, newshape=[]) /* ty=int16 */;
  %892 = @func_6288(%891) /* ty=(Tensor[(2, 12, 5), bool], Tensor[(15, 3, 5), float32], Tensor[(15, 3, 5), bool], int16, Tensor[(1, 78), float32]) */;
  %893 = cast(meta[relay.Constant][45] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %894 = reshape(%893, newshape=[]) /* ty=int16 */;
  %895 = @func_6288(%894) /* ty=(Tensor[(2, 12, 5), bool], Tensor[(15, 3, 5), float32], Tensor[(15, 3, 5), bool], int16, Tensor[(1, 78), float32]) */;
  %896 = @func_1764() /* ty=(Tensor[(120), uint8], Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), float64]) */;
  %897 = @func_1602() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], Tensor[(120), uint8]) */;
  %898 = %888.1;
  %899 = %889.3;
  %900 = @func_8164() /* ty=Tensor[(15, 3, 5), bool] */;
  %901 = %892.2;
  %902 = @func_4424() /* ty=Tensor[(15, 3, 5), bool] */;
  %903 = %895.1;
  %904 = %896.2;
  %905 = %897.1;
  %906 = @func_9041() /* ty=Tensor[(2, 12, 5), int32] */;
  (%898, %899, %900, %901, meta[relay.Constant][45] /* ty=int16 */, %902, %903, %904, %905, %906)
}

def @func_11337() -> (Tensor[(15, 3, 5), bool], Tensor[(120), uint8]) {
  %907 = @func_3606() /* ty=(Tensor[(42), float32], Tensor[(15, 3, 5), bool]) */;
  %908 = @func_7457() /* ty=(Tensor[(120), uint8], Tensor[(15, 3, 5), bool]) */;
  %909 = %907.1;
  %910 = %908.0;
  (%909, %910)
}

def @func_13102(%var_13058: Tensor[(36), int16]) -> (Tensor[(15, 3, 5), bool], Tensor[(12, 3, 13), int16], Tensor[(36), int16], Tensor[(468), int16], Tensor[(15, 3, 5), bool]) {
  %911 = @func_8634() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %912 = cast(%var_13058, dtype="int16") /* ty=Tensor[(36), int16] */;
  %913 = cast(meta[relay.Constant][46] /* ty=Tensor[(468), int16] */, dtype="int16") /* ty=Tensor[(468), int16] */;
  %914 = reshape(%912, newshape=[12, 3, 1]) /* ty=Tensor[(12, 3, 1), int16] */;
  %915 = reshape(%913, newshape=[12, 3, 13]) /* ty=Tensor[(12, 3, 13), int16] */;
  %916 = @func_1547(%914, %915) /* ty=(Tensor[(12, 3, 13), int16], Tensor[(120), uint8]) */;
  %917 = @func_1129() /* ty=(Tensor[(2, 12, 5), bool], Tensor[(120), uint8], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %918 = %911.0;
  %919 = %916.0;
  %920 = %917.2;
  (%918, %919, %var_13058, meta[relay.Constant][46] /* ty=Tensor[(468), int16] */, %920)
}

def @func_13994() -> (Tensor[(2, 12, 5), bool],) {
  %921 = @func_12449() /* ty=Tensor[(2, 12, 5), bool] */;
  (%921,)
}

def @func_2289() -> (Tensor[(15, 3, 5), bool], Tensor[(1, 14, 3), float64], Tensor[(42), float32], Tensor[(1, 14, 3), float64]) {
  %922 = @func_1899() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %923 = cast(meta[relay.Constant][47] /* ty=Tensor[(42), float32] */, dtype="float32") /* ty=Tensor[(42), float32] */;
  %924 = reshape(%923, newshape=[1, 14, 3]) /* ty=Tensor[(1, 14, 3), float32] */;
  %925 = @func_202(%924) /* ty=(Tensor[(1, 14, 3), float32], Tensor[(1, 14, 3), float64]) */;
  %926 = @func_2259() /* ty=(Tensor[(1, 14, 3), float64], Tensor[(1, 14, 3), float64], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %927 = %922.0;
  %928 = %925.1;
  %929 = %926.0;
  (%927, %928, meta[relay.Constant][47] /* ty=Tensor[(42), float32] */, %929)
}

def @func_11908(%var_11894: Tensor[(2, 12, 5), bool], %var_11904: Tensor[(378), float64]) -> (Tensor[(2, 12, 5), float64], Tensor[(15, 3, 5), float32], Tensor[(2, 12, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(9, 14, 3), int32], Tensor[(378), float64]) {
  %930 = @func_3484() /* ty=Tensor[(2, 12, 5), bool] */;
  %931 = cast(%930, dtype="float64") /* ty=Tensor[(2, 12, 5), float64] */;
  %932 = cast(%var_11894, dtype="bool") /* ty=Tensor[(2, 12, 5), bool] */;
  %933 = shape_of(%930, dtype="int32") /* ty=Tensor[(3), int32] */;
  %934 = cast(%930, dtype="bool") /* ty=Tensor[(2, 12, 5), bool] */;
  %935 = dyn.reshape(%932, %933, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %936 = @func_6012() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %937 = cast(%var_11904, dtype="float64") /* ty=Tensor[(378), float64] */;
  %938 = reshape(%937, newshape=[9, 14, 3]) /* ty=Tensor[(9, 14, 3), float64] */;
  %939 = @func_5426(%938) /* ty=(Tensor[(15, 3, 5), bool], Tensor[(9, 14, 3), int32], Tensor[(14, 4, 15), int8], Tensor[(840), float32]) */;
  %940 = atanh(%931) /* ty=Tensor[(2, 12, 5), float64] */;
  %941 = @func_9883() /* ty=Tensor[(15, 3, 5), float32] */;
  %942 = not_equal(%934, %935) /* ty=Tensor[(2, 12, 5), bool] */;
  %943 = %936.0;
  %944 = %939.1;
  (%940, %941, %942, %943, %944, %var_11904)
}

def @func_1547(%var_1524: Tensor[(12, 3, 1), int16], %var_1525: Tensor[(12, 3, 13), int16]) -> (Tensor[(12, 3, 13), int16], Tensor[(120), uint8]) {
  %945 = cast(%var_1524, dtype="int16") /* ty=Tensor[(12, 3, 1), int16] */;
  %946 = cast(%var_1525, dtype="int16") /* ty=Tensor[(12, 3, 13), int16] */;
  %947 = @func_1129() /* ty=(Tensor[(2, 12, 5), bool], Tensor[(120), uint8], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %948 = left_shift(%945, %946) /* ty=Tensor[(12, 3, 13), int16] */;
  %949 = %947.1;
  (%948, %949)
}

def @func_6080() -> (Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), float64], Tensor[(15, 3, 5), bool]) {
  %950 = @func_1764() /* ty=(Tensor[(120), uint8], Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), float64]) */;
  %951 = @func_5337() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %952 = @func_928() /* ty=Tensor[(15, 3, 5), bool] */;
  %953 = %950.2;
  %954 = %951.0;
  (%952, %953, %954)
}

def @func_1899() -> (Tensor[(15, 3, 5), bool],) {
  %955 = @func_1285() /* ty=Tensor[(15, 3, 5), bool] */;
  (%955,)
}

def @func_8024() -> (Tensor[(15, 3, 5), bool], Tensor[(9, 14, 3), float64]) {
  %956 = @func_1285() /* ty=Tensor[(15, 3, 5), bool] */;
  %957 = @func_6567() /* ty=Tensor[(9, 14, 3), float64] */;
  (%956, %957)
}

def @func_8680() -> Tensor[(15, 3, 5), bool] {
  %958 = @func_680() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %958.0
}

def @func_11118() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(3, 6, 5), uint32], Tensor[(15, 6), uint32], Tensor[(15, 13, 6), float64]) {
  %959 = @func_7457() /* ty=(Tensor[(120), uint8], Tensor[(15, 3, 5), bool]) */;
  %960 = @func_7071() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %961 = cast(meta[relay.Constant][48] /* ty=Tensor[(15, 6), uint32] */, dtype="uint32") /* ty=Tensor[(15, 6), uint32] */;
  %962 = reshape(%961, newshape=[3, 6, 5]) /* ty=Tensor[(3, 6, 5), uint32] */;
  %963 = @func_5058(%962) /* ty=(Tensor[(3, 6, 5), uint32],) */;
  %964 = %959.1;
  %965 = %960.0;
  %966 = %963.0;
  %967 = @func_8698() /* ty=Tensor[(15, 13, 6), float64] */;
  (%964, %965, %966, meta[relay.Constant][48] /* ty=Tensor[(15, 6), uint32] */, %967)
}

def @func_15167() -> (Tensor[(15, 3, 5), float64],) {
  %968 = @func_9232() /* ty=Tensor[(15, 3, 5), float64] */;
  (%968,)
}

def @func_554(%var_522: Tensor[(3, 10, 9), float64], %var_536: Tensor[(42), float32]) -> (Tensor[(3, 10, 9), bool], Tensor[(1, 14, 3), float32], Tensor[(?, 14, 3), float32]) {
  %969 = cast(%var_522, dtype="float64") /* ty=Tensor[(3, 10, 9), float64] */;
  %970 = asinh(%969) /* ty=Tensor[(3, 10, 9), float64] */;
  %971 = cast(%970, dtype="float64") /* ty=Tensor[(3, 10, 9), float64] */;
  %972 = asin(%971) /* ty=Tensor[(3, 10, 9), float64] */;
  %973 = cast(%970, dtype="bool") /* ty=Tensor[(3, 10, 9), bool] */;
  %974 = shape_of(%972, dtype="int32") /* ty=Tensor[(3), int32] */;
  %975 = cast(%972, dtype="bool") /* ty=Tensor[(3, 10, 9), bool] */;
  %976 = dyn.reshape(%973, %974, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %977 = cast(%var_536, dtype="float32") /* ty=Tensor[(42), float32] */;
  %978 = reshape(%977, newshape=[1, 14, 3]) /* ty=Tensor[(1, 14, 3), float32] */;
  %979 = @func_202(%978) /* ty=(Tensor[(1, 14, 3), float32], Tensor[(1, 14, 3), float64]) */;
  %980 = %979.1;
  %981 = cast(%980, dtype="float32") /* ty=Tensor[(1, 14, 3), float32] */;
  %982 = reshape(%981, newshape=[1, 14, 3]) /* ty=Tensor[(1, 14, 3), float32] */;
  %983 = @func_202(%982) /* ty=(Tensor[(1, 14, 3), float32], Tensor[(1, 14, 3), float64]) */;
  %984 = cast(%var_536, dtype="float32") /* ty=Tensor[(42), float32] */;
  %985 = shape_of(%980, dtype="int32") /* ty=Tensor[(3), int32] */;
  %986 = cast(%980, dtype="float32") /* ty=Tensor[(1, 14, 3), float32] */;
  %987 = dyn.reshape(%984, %985, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %988 = equal(%975, %976) /* ty=Tensor[(3, 10, 9), bool] */;
  %989 = %983.0;
  %990 = floor_divide(%986, %987) /* ty=Tensor[(?, 14, 3), float32] */;
  (%988, %989, %990)
}

def @func_1129() -> (Tensor[(2, 12, 5), bool], Tensor[(120), uint8], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  %991 = cast(meta[relay.Constant][49] /* ty=Tensor[(120), uint8] */, dtype="uint8") /* ty=Tensor[(120), uint8] */;
  %992 = reshape(%991, newshape=[2, 12, 5]) /* ty=Tensor[(2, 12, 5), uint8] */;
  %993 = @func_633() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %994 = %993.0;
  %995 = @func_680() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %996 = %995.0;
  %997 = cast(%996, dtype="bool") /* ty=Tensor[(15, 3, 5), bool] */;
  %998 = shape_of(%994, dtype="int32") /* ty=Tensor[(3), int32] */;
  %999 = cast(%994, dtype="bool") /* ty=Tensor[(15, 3, 5), bool] */;
  %1000 = dyn.reshape(%997, %998, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1001 = cast(meta[relay.Constant][49] /* ty=Tensor[(120), uint8] */, dtype="uint8") /* ty=Tensor[(120), uint8] */;
  %1002 = reshape(%1001, newshape=[3, 40]) /* ty=Tensor[(3, 40), uint8] */;
  %1003 = @func_914(%1002) /* ty=(Tensor[(2, 12, 5), bool], Tensor[(3, 40), uint8], Tensor[(15, 3, 5), float64], Tensor[(15, 3, 5), bool]) */;
  %1004 = @func_501(%992) /* ty=Tensor[(2, 12, 5), bool] */;
  %1005 = greater(%999, %1000) /* ty=Tensor[(15, 3, 5), bool] */;
  %1006 = %1003.3;
  (%1004, meta[relay.Constant][49] /* ty=Tensor[(120), uint8] */, %1005, %1006)
}

def @func_14779() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float64]) {
  %1007 = @func_11639() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %1008 = %1007.1;
  %1009 = @func_3092() /* ty=Tensor[(15, 3, 5), float64] */;
  (%1008, %1009)
}

def @func_2142() -> (Tensor[(15, 3, 5), bool],) {
  %1010 = @func_933() /* ty=Tensor[(15, 3, 5), bool] */;
  (%1010,)
}

def @func_2774() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  %1011 = @func_1361() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %1012 = @func_928() /* ty=Tensor[(15, 3, 5), bool] */;
  %1013 = %1011.0;
  (%1012, %1013)
}

def @func_702() -> Tensor[(15, 3, 5), bool] {
  %1014 = @func_633() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %1014.0
}

def @func_13292() -> (Tensor[(2, 12, 5), uint16],) {
  %1015 = @func_10482() /* ty=(Tensor[(2, 12, 5), uint16],) */;
  %1016 = %1015.0;
  (%1016,)
}

def @func_10037() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  %1017 = @func_3520() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %1018 = @func_9255() /* ty=Tensor[(15, 3, 5), bool] */;
  %1019 = %1017.0;
  (%1018, %1019)
}

def @func_14962() -> (Tensor[(15, 3, 5), bool],) {
  %1020 = @func_680() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %1021 = %1020.0;
  (%1021,)
}

def @func_8698() -> Tensor[(15, 13, 6), float64] {
  %1022 = @func_8427() /* ty=(Tensor[(15, 13, 6), float64], Tensor[(120, 1), uint8], Tensor[(546), int16], Tensor[(8, 3, 12), bool], Tensor[(288), int8]) */;
  %1022.0
}

def @func_13115() -> (Tensor[(15, 3, 5), bool],) {
  %1023 = @func_4445() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %1024 = %1023.0;
  (%1024,)
}

def @func_501(%var_489: Tensor[(2, 12, 5), uint8]) -> Tensor[(2, 12, 5), bool] {
  %1025 = cast(%var_489, dtype="bool") /* ty=Tensor[(2, 12, 5), bool] */;
  %1026 = shape_of(meta[relay.Constant][50] /* ty=Tensor[(2, 12, 5), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1027 = cast(meta[relay.Constant][50] /* ty=Tensor[(2, 12, 5), uint8] */, dtype="bool") /* ty=Tensor[(2, 12, 5), bool] */;
  %1028 = dyn.reshape(%1025, %1026, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1029 = less(%1027, %1028) /* ty=Tensor[(2, 12, 5), bool] */;
  %1030 = cast(%1029, dtype="bool") /* ty=Tensor[(2, 12, 5), bool] */;
  %1031 = shape_of(%var_489, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1032 = cast(%var_489, dtype="bool") /* ty=Tensor[(2, 12, 5), bool] */;
  %1033 = dyn.reshape(%1030, %1031, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%1032, %1033) /* ty=Tensor[(2, 12, 5), bool] */
}

def @func_10847() -> (Tensor[(2, 12, 5), bool], Tensor[(6, 14, 3), int32]) {
  %1034 = @func_5511() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool]) */;
  %1035 = @func_1444() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(120), uint8], Tensor[(120), uint8], Tensor[(1, 14, 3), float64], Tensor[(42), float32]) */;
  %1036 = %1035.3;
  %1037 = cast(%1036, dtype="int32") /* ty=Tensor[(1, 14, 3), int32] */;
  %1038 = cast(meta[relay.Constant][51] /* ty=Tensor[(6, 14, 3), float64] */, dtype="int32") /* ty=Tensor[(6, 14, 3), int32] */;
  %1039 = %1034.1;
  %1040 = subtract(%1037, %1038) /* ty=Tensor[(6, 14, 3), int32] */;
  (%1039, %1040)
}

def @func_1285() -> Tensor[(15, 3, 5), bool] {
  @func_928() /* ty=Tensor[(15, 3, 5), bool] */
}

def @func_3847(%var_3843: Tensor[(3, 14, 13), int16]) -> Tensor[(3, 14, 13), bool] {
  %1041 = cast(%var_3843, dtype="bool") /* ty=Tensor[(3, 14, 13), bool] */;
  %1042 = shape_of(meta[relay.Constant][52] /* ty=Tensor[(3, 14, 13), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1043 = cast(meta[relay.Constant][52] /* ty=Tensor[(3, 14, 13), int16] */, dtype="bool") /* ty=Tensor[(3, 14, 13), bool] */;
  %1044 = dyn.reshape(%1041, %1042, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%1043, %1044) /* ty=Tensor[(3, 14, 13), bool] */
}

def @func_1399(%var_1378: Tensor[(270), float64], %var_1379: Tensor[(42), float32]) -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(3, 10, 9), bool], Tensor[(270), float64], Tensor[(42), float32]) {
  %1045 = @func_1361() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %1046 = cast(%var_1378, dtype="float64") /* ty=Tensor[(270), float64] */;
  %1047 = cast(%var_1379, dtype="float32") /* ty=Tensor[(42), float32] */;
  %1048 = reshape(%1046, newshape=[3, 10, 9]) /* ty=Tensor[(3, 10, 9), float64] */;
  %1049 = reshape(%1047, newshape=[42]) /* ty=Tensor[(42), float32] */;
  %1050 = @func_554(%1048, %1049) /* ty=(Tensor[(3, 10, 9), bool], Tensor[(1, 14, 3), float32], Tensor[(?, 14, 3), float32]) */;
  %1051 = @func_933() /* ty=Tensor[(15, 3, 5), bool] */;
  %1052 = %1045.0;
  %1053 = %1050.0;
  (%1051, %1052, %1053, %var_1378, %var_1379)
}

def @func_10373() -> (Tensor[(15, 3, 5), float32], Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), float64]) {
  %1054 = @func_633() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %1055 = @func_3327() /* ty=(Tensor[(2, 12, 5), float64],) */;
  %1056 = @func_9883() /* ty=Tensor[(15, 3, 5), float32] */;
  %1057 = %1054.0;
  %1058 = %1055.0;
  (%1056, %1057, %1058)
}

def @func_14279(%var_14242: Tensor[(15, 330), float64], %var_14274: Tensor[(15, 330), float64]) -> (Tensor[(15, 330), bool], Tensor[(15, 330), uint16], Tensor[(11, 12, 14), bool], Tensor[(15, 330), uint16]) {
  %1059 = @func_9958() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(6, 5, 11), float64], Tensor[(1, 330), float64]) */;
  %1060 = %1059.2;
  %1061 = cast(%1060, dtype="bool") /* ty=Tensor[(1, 330), bool] */;
  %1062 = cast(%var_14242, dtype="bool") /* ty=Tensor[(15, 330), bool] */;
  %1063 = cast(%var_14242, dtype="uint16") /* ty=Tensor[(15, 330), uint16] */;
  %1064 = cast(%1060, dtype="uint16") /* ty=Tensor[(1, 330), uint16] */;
  %1065 = cast(%var_14274, dtype="uint16") /* ty=Tensor[(15, 330), uint16] */;
  %1066 = shape_of(%var_14242, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1067 = cast(%var_14242, dtype="uint16") /* ty=Tensor[(15, 330), uint16] */;
  %1068 = dyn.reshape(%1065, %1066, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %1069 = logical_or(%1061, %1062) /* ty=Tensor[(15, 330), bool] */;
  %1070 = logical_xor(%1063, %1064) /* ty=Tensor[(15, 330), uint16] */;
  %1071 = @func_8237() /* ty=Tensor[(11, 12, 14), bool] */;
  %1072 = bitwise_and(%1067, %1068) /* ty=Tensor[(15, 330), uint16] */;
  (%1069, %1070, %1071, %1072)
}

def @func_1048(%var_992: Tensor[(120), uint8]) -> (Tensor[(2, 12, 5), bool], Tensor[(120), uint8], Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], Tensor[(15, 3, 5), float32]) {
  %1073 = cast(%var_992, dtype="uint8") /* ty=Tensor[(120), uint8] */;
  %1074 = reshape(%1073, newshape=[2, 12, 5]) /* ty=Tensor[(2, 12, 5), uint8] */;
  %1075 = cast(%var_992, dtype="uint8") /* ty=Tensor[(120), uint8] */;
  %1076 = reshape(%1075, newshape=[2, 12, 5]) /* ty=Tensor[(2, 12, 5), uint8] */;
  %1077 = @func_702() /* ty=Tensor[(15, 3, 5), bool] */;
  %1078 = cast(%1077, dtype="float32") /* ty=Tensor[(15, 3, 5), float32] */;
  %1079 = log10(%1078) /* ty=Tensor[(15, 3, 5), float32] */;
  %1080 = cast(%1079, dtype="float32") /* ty=Tensor[(15, 3, 5), float32] */;
  %1081 = @func_501(%1074) /* ty=Tensor[(2, 12, 5), bool] */;
  %1082 = @func_928() /* ty=Tensor[(15, 3, 5), bool] */;
  %1083 = @func_501(%1076) /* ty=Tensor[(2, 12, 5), bool] */;
  %1084 = sin(%1080) /* ty=Tensor[(15, 3, 5), float32] */;
  (%1081, %var_992, %1082, %1083, %1084)
}

def @func_14426(%var_14393: Tensor[(2, 6, 16), int8]) -> (Tensor[(2, 6, 16), int8], Tensor[(42), float32], Tensor[(2, 12, 5), float64]) {
  %1085 = cast(%var_14393, dtype="int8") /* ty=Tensor[(2, 6, 16), int8] */;
  %1086 = shape_of(meta[relay.Constant][53] /* ty=Tensor[(2, 6, 16), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1087 = cast(meta[relay.Constant][53] /* ty=Tensor[(2, 6, 16), int8] */, dtype="int8") /* ty=Tensor[(2, 6, 16), int8] */;
  %1088 = dyn.reshape(%1085, %1086, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1089 = @func_3327() /* ty=(Tensor[(2, 12, 5), float64],) */;
  %1090 = bitwise_xor(%1087, %1088) /* ty=Tensor[(2, 6, 16), int8] */;
  %1091 = @func_2572() /* ty=Tensor[(42), float32] */;
  %1092 = %1089.0;
  (%1090, %1091, %1092)
}

def @func_10211() -> Tensor[(15, 3, 5), bool] {
  @func_8680() /* ty=Tensor[(15, 3, 5), bool] */
}

def @func_3304() -> (Tensor[(42), float32], Tensor[(15, 3, 5), bool], Tensor[(4, 5, 8), float64], Tensor[(160), float64]) {
  %1093 = cast(meta[relay.Constant][54] /* ty=Tensor[(160), float64] */, dtype="float64") /* ty=Tensor[(160), float64] */;
  %1094 = reshape(%1093, newshape=[4, 5, 8]) /* ty=Tensor[(4, 5, 8), float64] */;
  %1095 = @func_1669(%1094) /* ty=(Tensor[(4, 5, 8), float64],) */;
  %1096 = @func_2572() /* ty=Tensor[(42), float32] */;
  %1097 = @func_928() /* ty=Tensor[(15, 3, 5), bool] */;
  %1098 = %1095.0;
  (%1096, %1097, %1098, meta[relay.Constant][54] /* ty=Tensor[(160), float64] */)
}

def @func_14345() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  %1099 = @func_5713() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(42), float32], Tensor[(1001), uint64], Tensor[(42), float32], Tensor[(120), uint8]) */;
  %1100 = @func_1361() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %1101 = %1099.1;
  %1102 = %1100.0;
  (%1101, %1102)
}

def @func_1361() -> (Tensor[(15, 3, 5), bool],) {
  %1103 = @func_1129() /* ty=(Tensor[(2, 12, 5), bool], Tensor[(120), uint8], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %1104 = %1103.3;
  (%1104,)
}

def @func_1444() -> (Tensor[(15, 3, 5), bool], Tensor[(120), uint8], Tensor[(120), uint8], Tensor[(1, 14, 3), float64], Tensor[(42), float32]) {
  %1105 = @func_680() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %1106 = cast(meta[relay.Constant][55] /* ty=Tensor[(120), uint8] */, dtype="uint8") /* ty=Tensor[(120), uint8] */;
  %1107 = reshape(%1106, newshape=[120]) /* ty=Tensor[(120), uint8] */;
  %1108 = @func_1048(%1107) /* ty=(Tensor[(2, 12, 5), bool], Tensor[(120), uint8], Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], Tensor[(15, 3, 5), float32]) */;
  %1109 = cast(meta[relay.Constant][56] /* ty=Tensor[(42), float32] */, dtype="float32") /* ty=Tensor[(42), float32] */;
  %1110 = reshape(%1109, newshape=[1, 14, 3]) /* ty=Tensor[(1, 14, 3), float32] */;
  %1111 = @func_202(%1110) /* ty=(Tensor[(1, 14, 3), float32], Tensor[(1, 14, 3), float64]) */;
  %1112 = %1105.0;
  %1113 = %1108.1;
  %1114 = %1111.1;
  (%1112, %1113, meta[relay.Constant][55] /* ty=Tensor[(120), uint8] */, %1114, meta[relay.Constant][56] /* ty=Tensor[(42), float32] */)
}

def @func_6500(%var_6492: float64, %var_6493: Tensor[(13, 1, 10), float64]) -> (Tensor[(13, 1, 10), float64],) {
  %1115 = cast(%var_6492, dtype="float64") /* ty=float64 */;
  %1116 = cast(%var_6493, dtype="float64") /* ty=Tensor[(13, 1, 10), float64] */;
  %1117 = power(%1115, %1116) /* ty=Tensor[(13, 1, 10), float64] */;
  (%1117,)
}

def @func_8237() -> Tensor[(11, 12, 14), bool] {
  @func_6382() /* ty=Tensor[(11, 12, 14), bool] */
}

def @func_4546(%var_4523: int16, %var_4524: Tensor[(6, 13, 1), int16]) -> (Tensor[(15, 3, 5), bool], Tensor[(6, 13, 1), float32], Tensor[(42), float32], Tensor[(1001), uint64]) {
  %1118 = @func_757() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %1119 = cast(%var_4523, dtype="int16") /* ty=int16 */;
  %1120 = cast(%var_4524, dtype="int16") /* ty=Tensor[(6, 13, 1), int16] */;
  %1121 = right_shift(%1119, %1120) /* ty=Tensor[(6, 13, 1), int16] */;
  %1122 = cast(%1121, dtype="float32") /* ty=Tensor[(6, 13, 1), float32] */;
  %1123 = cast(meta[relay.Constant][57] /* ty=Tensor[(1001), uint64] */, dtype="uint64") /* ty=Tensor[(1001), uint64] */;
  %1124 = reshape(%1123, newshape=[91, 11]) /* ty=Tensor[(91, 11), uint64] */;
  %1125 = @func_3780(%1124) /* ty=(Tensor[(15, 3, 5), bool], Tensor[(42), float32], Tensor[(7, 66), float64], Tensor[(91, 11), uint64]) */;
  %1126 = %1118.0;
  %1127 = sin(%1122) /* ty=Tensor[(6, 13, 1), float32] */;
  %1128 = %1125.1;
  (%1126, %1127, %1128, meta[relay.Constant][57] /* ty=Tensor[(1001), uint64] */)
}

def @func_2572() -> Tensor[(42), float32] {
  %1129 = @func_2210() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(1, 14, 3), float64], Tensor[(42), float32]) */;
  %1129.2
}

def @func_7473(%var_7462: Tensor[(14, 12, 8), float32]) -> (Tensor[(14, 12, 8), int32],) {
  %1130 = cast(%var_7462, dtype="float32") /* ty=Tensor[(14, 12, 8), float32] */;
  %1131 = sigmoid(%1130) /* ty=Tensor[(14, 12, 8), float32] */;
  %1132 = cast(%1131, dtype="int32") /* ty=Tensor[(14, 12, 8), int32] */;
  %1133 = shape_of(%var_7462, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1134 = cast(%var_7462, dtype="int32") /* ty=Tensor[(14, 12, 8), int32] */;
  %1135 = dyn.reshape(%1132, %1133, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1136 = logical_xor(%1134, %1135) /* ty=Tensor[(14, 12, 8), int32] */;
  (%1136,)
}

def @func_10482() -> (Tensor[(2, 12, 5), uint16],) {
  %1137 = @func_1129() /* ty=(Tensor[(2, 12, 5), bool], Tensor[(120), uint8], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %1138 = %1137.0;
  %1139 = cast(meta[relay.Constant][58] /* ty=Tensor[(2, 12, 5), bool] */, dtype="uint16") /* ty=Tensor[(2, 12, 5), uint16] */;
  %1140 = shape_of(%1138, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1141 = cast(%1138, dtype="uint16") /* ty=Tensor[(2, 12, 5), uint16] */;
  %1142 = dyn.reshape(%1139, %1140, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1143 = left_shift(%1141, %1142) /* ty=Tensor[(2, 12, 5), uint16] */;
  (%1143,)
}

def @func_7168() -> (Tensor[(1, 14, 3), float64],) {
  %1144 = @func_4295() /* ty=(Tensor[(15, 3, 5), float32], Tensor[(1, 14, 3), float64], Tensor[(42), float32]) */;
  %1145 = %1144.1;
  (%1145,)
}

def @func_12182() -> Tensor[(1, 14, 3), float64] {
  %1146 = @func_7509() /* ty=(Tensor[(1, 14, 3), float64], Tensor[(15, 3, 5), float64]) */;
  %1146.0
}

def @func_1602() -> (Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], Tensor[(120), uint8]) {
  %1147 = @func_1309() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %1148 = cast(meta[relay.Constant][59] /* ty=Tensor[(120), uint8] */, dtype="uint8") /* ty=Tensor[(120), uint8] */;
  %1149 = reshape(%1148, newshape=[2, 12, 5]) /* ty=Tensor[(2, 12, 5), uint8] */;
  %1150 = %1147.0;
  %1151 = @func_501(%1149) /* ty=Tensor[(2, 12, 5), bool] */;
  (%1150, %1151, meta[relay.Constant][59] /* ty=Tensor[(120), uint8] */)
}

def @func_14166() -> (Tensor[(42), float32],) {
  %1152 = @func_3606() /* ty=(Tensor[(42), float32], Tensor[(15, 3, 5), bool]) */;
  %1153 = %1152.0;
  (%1153,)
}

def @func_6125() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  %1154 = @func_5920() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %1155 = @func_1899() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %1156 = %1154.2;
  %1157 = %1155.0;
  (%1156, %1157)
}

def @func_6567() -> Tensor[(9, 14, 3), float64] {
  %1158 = @func_1823() /* ty=(Tensor[(1, 14, 3), float64],) */;
  %1159 = %1158.0;
  %1160 = cast(%1159, dtype="float64") /* ty=Tensor[(1, 14, 3), float64] */;
  %1161 = cast(meta[relay.Constant][60] /* ty=Tensor[(9, 14, 3), float64] */, dtype="float64") /* ty=Tensor[(9, 14, 3), float64] */;
  mod(%1160, %1161) /* ty=Tensor[(9, 14, 3), float64] */
}

def @func_928() -> Tensor[(15, 3, 5), bool] {
  %1162 = @func_680() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %1162.0
}

def @func_4252() -> (Tensor[(15, 3, 5), bool],) {
  %1163 = @func_1947() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %1164 = %1163.0;
  (%1164,)
}

def @func_3218(%var_3173: Tensor[(4, 1, 15), float32]) -> (Tensor[(4, 1, 15), float32], Tensor[(120), uint8], Tensor[(15, 3, 5), bool]) {
  %1165 = cast(%var_3173, dtype="float32") /* ty=Tensor[(4, 1, 15), float32] */;
  %1166 = log2(%1165) /* ty=Tensor[(4, 1, 15), float32] */;
  %1167 = cast(%1166, dtype="float32") /* ty=Tensor[(4, 1, 15), float32] */;
  %1168 = @func_1570() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], Tensor[(120), uint8]) */;
  %1169 = @func_2340() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %1170 = atan(%1167) /* ty=Tensor[(4, 1, 15), float32] */;
  %1171 = %1168.2;
  %1172 = %1169.0;
  (%1170, %1171, %1172)
}

def @func_13447(%var_13444: Tensor[(3, 14, 14), float64]) -> Tensor[(3, 14, 14), float64] {
  %1173 = cast(%var_13444, dtype="float64") /* ty=Tensor[(3, 14, 14), float64] */;
  atanh(%1173) /* ty=Tensor[(3, 14, 14), float64] */
}

def @func_914(%var_887: Tensor[(3, 40), uint8]) -> (Tensor[(2, 12, 5), bool], Tensor[(3, 40), uint8], Tensor[(15, 3, 5), float64], Tensor[(15, 3, 5), bool]) {
  %1174 = cast(%var_887, dtype="uint8") /* ty=Tensor[(3, 40), uint8] */;
  %1175 = reshape(%1174, newshape=[2, 12, 5]) /* ty=Tensor[(2, 12, 5), uint8] */;
  %1176 = @func_702() /* ty=Tensor[(15, 3, 5), bool] */;
  %1177 = cast(%1176, dtype="float64") /* ty=Tensor[(15, 3, 5), float64] */;
  %1178 = @func_757() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %1179 = @func_501(%1175) /* ty=Tensor[(2, 12, 5), bool] */;
  %1180 = cos(%1177) /* ty=Tensor[(15, 3, 5), float64] */;
  %1181 = %1178.0;
  (%1179, %var_887, %1180, %1181)
}

def @func_1669(%var_1628: Tensor[(4, 5, 8), float64]) -> (Tensor[(4, 5, 8), float64],) {
  %1182 = cast(%var_1628, dtype="float64") /* ty=Tensor[(4, 5, 8), float64] */;
  %1183 = asin(%1182) /* ty=Tensor[(4, 5, 8), float64] */;
  (%1183,)
}

def @func_4153() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  %1184 = @func_3630() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %1185 = @func_633() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %1186 = %1184.0;
  %1187 = %1185.0;
  (%1186, %1187)
}

def @func_13330() -> Tensor[(15, 3, 5), float32] {
  %1188 = @func_7240() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float32]) */;
  %1188.1
}

def @func_5920() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  %1189 = @func_4234() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %1190 = @func_4234() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %1191 = %1189.0;
  %1192 = %1190.1;
  %1193 = @func_933() /* ty=Tensor[(15, 3, 5), bool] */;
  (%1191, %1192, %1193)
}

def @func_12449() -> Tensor[(2, 12, 5), bool] {
  %1194 = @func_5511() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool]) */;
  %1194.1
}

def @func_15310() -> (Tensor[(15, 3, 5), float64],) {
  %1195 = @func_15167() /* ty=(Tensor[(15, 3, 5), float64],) */;
  %1196 = %1195.0;
  (%1196,)
}

def @func_10667() -> (Tensor[(15, 3, 5), bool],) {
  %1197 = @func_9876() /* ty=Tensor[(15, 3, 5), bool] */;
  (%1197,)
}

def @func_4605() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(91, 11), float64], Tensor[(15, 3, 5), bool]) {
  %1198 = @func_3968() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %1199 = @func_633() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %1200 = cast(meta[relay.Constant][61] /* ty=Tensor[(1001), uint64] */, dtype="uint64") /* ty=Tensor[(1001), uint64] */;
  %1201 = reshape(%1200, newshape=[91, 11]) /* ty=Tensor[(91, 11), uint64] */;
  %1202 = @func_3780(%1201) /* ty=(Tensor[(15, 3, 5), bool], Tensor[(42), float32], Tensor[(7, 66), float64], Tensor[(91, 11), uint64]) */;
  %1203 = %1202.3;
  %1204 = cast(meta[relay.Constant][61] /* ty=Tensor[(1001), uint64] */, dtype="float64") /* ty=Tensor[(1001), float64] */;
  %1205 = shape_of(%1203, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1206 = cast(%1203, dtype="float64") /* ty=Tensor[(91, 11), float64] */;
  %1207 = dyn.reshape(%1204, %1205, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %1208 = @func_633() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %1209 = %1198.0;
  %1210 = %1199.0;
  %1211 = floor_mod(%1206, %1207) /* ty=Tensor[(91, 11), float64] */;
  %1212 = %1208.0;
  (%1209, %1210, %1211, %1212)
}

def @func_9899() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(120, 1), uint8], Tensor[(15, 3, 5), bool]) {
  %1213 = @func_3968() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %1214 = @func_4234() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %1215 = @func_8427() /* ty=(Tensor[(15, 13, 6), float64], Tensor[(120, 1), uint8], Tensor[(546), int16], Tensor[(8, 3, 12), bool], Tensor[(288), int8]) */;
  %1216 = @func_4153() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %1217 = %1213.0;
  %1218 = %1214.1;
  %1219 = %1215.1;
  %1220 = %1216.1;
  (%1217, %1218, %1219, %1220)
}

def @func_11477() -> (Tensor[(42), float32],) {
  %1221 = @func_3606() /* ty=(Tensor[(42), float32], Tensor[(15, 3, 5), bool]) */;
  %1222 = %1221.0;
  (%1222,)
}

def @func_8562() -> Tensor[(15, 3, 5), bool] {
  %1223 = @func_6346() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %1223.0
}

def @func_2340() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  %1224 = @func_1285() /* ty=Tensor[(15, 3, 5), bool] */;
  %1225 = @func_1684() /* ty=Tensor[(15, 3, 5), bool] */;
  (%1224, %1225)
}

def @func_5511() -> (Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool]) {
  %1226 = @func_1899() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %1227 = @func_1602() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], Tensor[(120), uint8]) */;
  %1228 = %1226.0;
  %1229 = %1227.1;
  (%1228, %1229)
}

def @func_11026() -> (Tensor[(15, 3, 5), float64],) {
  %1230 = @func_6901() /* ty=(Tensor[(15, 3, 5), float64],) */;
  %1231 = %1230.0;
  (%1231,)
}

def @func_13237(%var_13227: Tensor[(1001), uint64]) -> (Tensor[(15, 3, 5), bool], Tensor[(60, 14), float32], Tensor[(1001), uint64]) {
  %1232 = @func_9958() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(6, 5, 11), float64], Tensor[(1, 330), float64]) */;
  %1233 = cast(%var_13227, dtype="uint64") /* ty=Tensor[(1001), uint64] */;
  %1234 = reshape(%1233, newshape=[1001]) /* ty=Tensor[(1001), uint64] */;
  %1235 = @func_9650(%1234) /* ty=(Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], Tensor[(60, 14), float32], Tensor[(120), uint8], Tensor[(1001), uint64], Tensor[(42), float32]) */;
  %1236 = %1232.0;
  %1237 = %1235.2;
  (%1236, %1237, %var_13227)
}

def @func_6833(%var_6791: Tensor[(65, 5), uint16]) -> (Tensor[(15, 3, 5), bool], Tensor[(65, 5), uint16], Tensor[(5, 13, 5), float32], Tensor[(15, 3, 5), bool]) {
  %1238 = @func_5713() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(42), float32], Tensor[(1001), uint64], Tensor[(42), float32], Tensor[(120), uint8]) */;
  %1239 = cast(%var_6791, dtype="uint16") /* ty=Tensor[(65, 5), uint16] */;
  %1240 = reshape(%1239, newshape=[5, 13, 5]) /* ty=Tensor[(5, 13, 5), uint16] */;
  %1241 = @func_5519(%1240) /* ty=Tensor[(5, 13, 5), uint16] */;
  %1242 = cast(%1241, dtype="float32") /* ty=Tensor[(5, 13, 5), float32] */;
  %1243 = @func_1361() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %1244 = %1238.1;
  %1245 = atan(%1242) /* ty=Tensor[(5, 13, 5), float32] */;
  %1246 = %1243.0;
  (%1244, %var_6791, %1245, %1246)
}

def @func_8782(%var_8772: Tensor[(7, 15, 11), float32]) -> (Tensor[(7, 15, 11), float32], Tensor[(15, 3, 5), bool]) {
  %1247 = cast(%var_8772, dtype="float32") /* ty=Tensor[(7, 15, 11), float32] */;
  %1248 = @func_8291() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %1249 = rsqrt(%1247) /* ty=Tensor[(7, 15, 11), float32] */;
  %1250 = %1248.0;
  (%1249, %1250)
}

def @func_13840() -> (Tensor[(15, 3, 5), bool],) {
  %1251 = @func_10721() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float64]) */;
  %1252 = %1251.1;
  (%1252,)
}

def @func_7047(%var_7030: Tensor[(288), int8]) -> (Tensor[(15, 3, 5), float32], Tensor[(42), float32], Tensor[(8, 3, 12), bool], Tensor[(288), int8], Tensor[(15, 3, 5), bool]) {
  %1253 = cast(%var_7030, dtype="int8") /* ty=Tensor[(288), int8] */;
  %1254 = cast(%var_7030, dtype="int8") /* ty=Tensor[(288), int8] */;
  %1255 = reshape(%1253, newshape=[8, 3, 12]) /* ty=Tensor[(8, 3, 12), int8] */;
  %1256 = reshape(%1254, newshape=[8, 3, 12]) /* ty=Tensor[(8, 3, 12), int8] */;
  %1257 = @func_3968() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %1258 = @func_5757() /* ty=Tensor[(15, 3, 5), float32] */;
  %1259 = @func_2572() /* ty=Tensor[(42), float32] */;
  %1260 = @func_4830(%1255, %1256) /* ty=Tensor[(8, 3, 12), bool] */;
  %1261 = %1257.0;
  (%1258, %1259, %1260, %var_7030, %1261)
}

def @func_14484() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float64], Tensor[(14, 4, 15), int8], Tensor[(378), float64]) {
  %1262 = @func_3352() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %1263 = @func_4309() /* ty=(Tensor[(15, 3, 5), float64], Tensor[(15, 3, 5), bool]) */;
  %1264 = cast(meta[relay.Constant][62] /* ty=Tensor[(378), float64] */, dtype="float64") /* ty=Tensor[(378), float64] */;
  %1265 = reshape(%1264, newshape=[9, 14, 3]) /* ty=Tensor[(9, 14, 3), float64] */;
  %1266 = @func_5426(%1265) /* ty=(Tensor[(15, 3, 5), bool], Tensor[(9, 14, 3), int32], Tensor[(14, 4, 15), int8], Tensor[(840), float32]) */;
  %1267 = %1262.0;
  %1268 = %1263.0;
  %1269 = %1266.2;
  (%1267, %1268, %1269, meta[relay.Constant][62] /* ty=Tensor[(378), float64] */)
}

def @func_9579() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  %1270 = @func_1947() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %1271 = @func_5015() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float64]) */;
  %1272 = @func_3520() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %1273 = %1270.0;
  %1274 = %1271.0;
  %1275 = @func_702() /* ty=Tensor[(15, 3, 5), bool] */;
  %1276 = %1272.0;
  (%1273, %1274, %1275, %1276)
}

def @func_14913() -> (Tensor[(15, 3, 5), float64], Tensor[(42), float32]) {
  %1277 = @func_12038() /* ty=(Tensor[(2, 12, 5), int32], Tensor[(42), float32]) */;
  %1278 = @func_9232() /* ty=Tensor[(15, 3, 5), float64] */;
  %1279 = %1277.1;
  (%1278, %1279)
}

def @func_3387() -> Tensor[(15, 3, 5), bool] {
  %1280 = @func_1361() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %1280.0
}

def @func_8081(%var_8037: Tensor[(6, 13, 7), int16], %var_8038: Tensor[(6, 13, 7), int16]) -> (Tensor[(6, 13, 7), uint64], Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], Tensor[(120, 1), uint8], Tensor[(6, 13, 7), float64], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  %1281 = cast(%var_8038, dtype="int16") /* ty=Tensor[(6, 13, 7), int16] */;
  %1282 = shape_of(%var_8037, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1283 = cast(%var_8037, dtype="int16") /* ty=Tensor[(6, 13, 7), int16] */;
  %1284 = dyn.reshape(%1281, %1282, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1285 = subtract(%1283, %1284) /* ty=Tensor[(6, 13, 7), int16] */;
  %1286 = cast(%1285, dtype="uint64") /* ty=Tensor[(6, 13, 7), uint64] */;
  %1287 = shape_of(%var_8037, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1288 = cast(%var_8037, dtype="uint64") /* ty=Tensor[(6, 13, 7), uint64] */;
  %1289 = dyn.reshape(%1286, %1287, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1290 = @func_3630() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %1291 = cast(meta[relay.Constant][63] /* ty=Tensor[(120, 1), uint8] */, dtype="uint8") /* ty=Tensor[(120, 1), uint8] */;
  %1292 = reshape(%1291, newshape=[120]) /* ty=Tensor[(120), uint8] */;
  %1293 = @func_1229(%1292) /* ty=(Tensor[(2, 12, 5), bool], Tensor[(120), uint8], Tensor[(15, 3, 5), uint16], Tensor[(2, 12, 5), bool], Tensor[(2, 12, 5), float64]) */;
  %1294 = cast(%var_8037, dtype="float32") /* ty=Tensor[(6, 13, 7), float32] */;
  %1295 = cosh(%1294) /* ty=Tensor[(6, 13, 7), float32] */;
  %1296 = cast(%1295, dtype="float64") /* ty=Tensor[(6, 13, 7), float64] */;
  %1297 = @func_3630() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %1298 = %1290.0;
  %1299 = cast(%1298, dtype="bool") /* ty=Tensor[(15, 3, 5), bool] */;
  %1300 = reshape(%1299, newshape=[15, 3, 5]) /* ty=Tensor[(15, 3, 5), bool] */;
  %1301 = @func_6723(%1300) /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %1302 = bitwise_xor(%1288, %1289) /* ty=Tensor[(6, 13, 7), uint64] */;
  %1303 = %1293.0;
  %1304 = log2(%1296) /* ty=Tensor[(6, 13, 7), float64] */;
  %1305 = %1297.0;
  %1306 = %1301.1;
  (%1302, %1298, %1303, meta[relay.Constant][63] /* ty=Tensor[(120, 1), uint8] */, %1304, %1305, %1306)
}

def @func_1493(%var_1455: Tensor[(11, 7, 13), uint64], %var_1473: Tensor[(42), float32], %var_1491: Tensor[(120), uint8]) -> (Tensor[(11, 7, 13), uint64], Tensor[(42), float32], Tensor[(42), float32], Tensor[(120), uint8], Tensor[(120), uint8]) {
  %1307 = cast(meta[relay.Constant][64] /* ty=Tensor[(11, 7, 13), uint64] */, dtype="uint64") /* ty=Tensor[(11, 7, 13), uint64] */;
  %1308 = shape_of(%var_1455, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1309 = cast(%var_1455, dtype="uint64") /* ty=Tensor[(11, 7, 13), uint64] */;
  %1310 = dyn.reshape(%1307, %1308, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1311 = cast(%var_1473, dtype="float32") /* ty=Tensor[(42), float32] */;
  %1312 = reshape(%1311, newshape=[42]) /* ty=Tensor[(42), float32] */;
  %1313 = @func_1244(%1312) /* ty=(Tensor[(15, 3, 5), bool], Tensor[(?, 14, 3), float32], Tensor[(30, 9), float64], Tensor[(42), float32]) */;
  %1314 = cast(%var_1491, dtype="uint8") /* ty=Tensor[(120), uint8] */;
  %1315 = reshape(%1314, newshape=[120]) /* ty=Tensor[(120), uint8] */;
  %1316 = @func_1048(%1315) /* ty=(Tensor[(2, 12, 5), bool], Tensor[(120), uint8], Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], Tensor[(15, 3, 5), float32]) */;
  %1317 = bitwise_or(%1309, %1310) /* ty=Tensor[(11, 7, 13), uint64] */;
  %1318 = %1313.3;
  %1319 = %1316.1;
  (%1317, %1318, %var_1473, %1319, %var_1491)
}

def @func_10770() -> (Tensor[(15, 3, 5), bool],) {
  %1320 = @func_10166() /* ty=Tensor[(15, 3, 5), bool] */;
  (%1320,)
}

def @func_3606() -> (Tensor[(42), float32], Tensor[(15, 3, 5), bool]) {
  %1321 = @func_2572() /* ty=Tensor[(42), float32] */;
  %1322 = @func_3387() /* ty=Tensor[(15, 3, 5), bool] */;
  (%1321, %1322)
}

def @func_6346() -> (Tensor[(15, 3, 5), bool],) {
  %1323 = @func_3679() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %1324 = %1323.0;
  (%1324,)
}

def @func_4699() -> (Tensor[(15, 3, 5), bool], Tensor[(1, 14, 3), float64]) {
  %1325 = @func_3943() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %1326 = @func_1823() /* ty=(Tensor[(1, 14, 3), float64],) */;
  %1327 = %1325.0;
  %1328 = %1326.0;
  (%1327, %1328)
}

def @func_9883() -> Tensor[(15, 3, 5), float32] {
  @func_5757() /* ty=Tensor[(15, 3, 5), float32] */
}

def @func_8291() -> (Tensor[(15, 3, 5), bool],) {
  %1329 = @func_4395() /* ty=(Tensor[(42), float32], Tensor[(15, 3, 5), bool]) */;
  %1330 = %1329.1;
  (%1330,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_11908(%var_11894: Tensor[(2, 12, 5), bool], %var_11904: Tensor[(378), float64]) -> (Tensor[(2, 12, 5), float64], Tensor[(15, 3, 5), float32], Tensor[(2, 12, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(9, 14, 3), int32], Tensor[(378), float64]) {
  %0 = @func_3484() /* ty=Tensor[(2, 12, 5), bool] */;
  %1 = cast(%0, dtype="float64") /* ty=Tensor[(2, 12, 5), float64] */;
  %2 = cast(%var_11894, dtype="bool") /* ty=Tensor[(2, 12, 5), bool] */;
  %3 = shape_of(%0, dtype="int32") /* ty=Tensor[(3), int32] */;
  %4 = cast(%0, dtype="bool") /* ty=Tensor[(2, 12, 5), bool] */;
  %5 = dyn.reshape(%2, %3, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %6 = @func_6012() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %7 = cast(%var_11904, dtype="float64") /* ty=Tensor[(378), float64] */;
  %8 = reshape(%7, newshape=[9, 14, 3]) /* ty=Tensor[(9, 14, 3), float64] */;
  %9 = @func_5426(%8) /* ty=(Tensor[(15, 3, 5), bool], Tensor[(9, 14, 3), int32], Tensor[(14, 4, 15), int8], Tensor[(840), float32]) */;
  %10 = atanh(%1) /* ty=Tensor[(2, 12, 5), float64] */;
  %11 = @func_9883() /* ty=Tensor[(15, 3, 5), float32] */;
  %12 = not_equal(%4, %5) /* ty=Tensor[(2, 12, 5), bool] */;
  %13 = %6.0;
  %14 = %9.1;
  (%10, %11, %12, %13, %14, %var_11904)
}

def @func_9256() -> Tensor[(15, 3, 5), bool] {
  %16 = fn () -> Tensor[(15, 3, 5), bool] {
    %15 = @func_5337() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
    %15.0
  };
  %16() /* ty=Tensor[(15, 3, 5), bool] */
}

def @func_11591() -> Tensor[(15, 3, 5), bool] {
  %17 = @func_2210() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(1, 14, 3), float64], Tensor[(42), float32]) */;
  %17.0
}

def @func_7109() -> (Tensor[(15, 3, 5), bool],) {
  %18 = @func_3387() /* ty=Tensor[(15, 3, 5), bool] */;
  (%18,)
}

def @func_13294() -> (Tensor[(2, 12, 5), uint16],) {
  @func_13292() /* ty=(Tensor[(2, 12, 5), uint16],) */
}

def @func_11477() -> (Tensor[(42), float32],) {
  %19 = @func_3606() /* ty=(Tensor[(42), float32], Tensor[(15, 3, 5), bool]) */;
  %20 = %19.0;
  (%20,)
}

def @func_14213() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(1001), float64]) {
  @func_14211() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(1001), float64]) */
}

def @func_3327() -> (Tensor[(2, 12, 5), float64],) {
  %21 = @func_2491() /* ty=(Tensor[(2, 12, 5), float64], Tensor[(15, 3, 5), bool]) */;
  %22 = %21.0;
  (%22,)
}

def @func_13002(%var_13000: Tensor[(120), uint8]) -> (Tensor[(4, 5, 8), float64], Tensor[(15, 3, 5), float64], Tensor[(120), uint8]) {
  @func_12999(%var_13000) /* ty=(Tensor[(4, 5, 8), float64], Tensor[(15, 3, 5), float64], Tensor[(120), uint8]) */
}

def @func_10106() -> (Tensor[(15, 3, 5), float64], Tensor[(5, 13, 5), float32], Tensor[(325), uint16]) {
  %23 = @func_6901() /* ty=(Tensor[(15, 3, 5), float64],) */;
  %24 = cast(meta[relay.Constant][0] /* ty=Tensor[(325), uint16] */, dtype="uint16") /* ty=Tensor[(325), uint16] */;
  %25 = reshape(%24, newshape=[65, 5]) /* ty=Tensor[(65, 5), uint16] */;
  %26 = @func_6833(%25) /* ty=(Tensor[(15, 3, 5), bool], Tensor[(65, 5), uint16], Tensor[(5, 13, 5), float32], Tensor[(15, 3, 5), bool]) */;
  %27 = %23.0;
  %28 = %26.2;
  (%27, %28, meta[relay.Constant][0] /* ty=Tensor[(325), uint16] */)
}

def @func_10168() -> Tensor[(15, 3, 5), bool] {
  @func_10166() /* ty=Tensor[(15, 3, 5), bool] */
}

def @func_14321() -> (Tensor[(2, 12, 5), int32], Tensor[(42), float32], Tensor[(120), uint8]) {
  %29 = @func_12038() /* ty=(Tensor[(2, 12, 5), int32], Tensor[(42), float32]) */;
  %30 = @func_4395() /* ty=(Tensor[(42), float32], Tensor[(15, 3, 5), bool]) */;
  %31 = %29.0;
  %32 = cast(%31, dtype="uint8") /* ty=Tensor[(2, 12, 5), uint8] */;
  %33 = reshape(%32, newshape=[120]) /* ty=Tensor[(120), uint8] */;
  %34 = @func_7406(%33) /* ty=(Tensor[(15, 3, 5), bool], Tensor[(1, 14, 3), float64], Tensor[(120), uint8]) */;
  %35 = %30.0;
  %36 = %34.2;
  (%31, %35, %36)
}

def @func_5994() -> (Tensor[(2, 12, 5), bool],) {
  @func_5992() /* ty=(Tensor[(2, 12, 5), bool],) */
}

def @func_930() -> Tensor[(15, 3, 5), bool] {
  @func_928() /* ty=Tensor[(15, 3, 5), bool] */
}

def @func_6291(%var_6289: int16) -> (Tensor[(2, 12, 5), bool], Tensor[(15, 3, 5), float32], Tensor[(15, 3, 5), bool], int16, Tensor[(1, 78), float32]) {
  @func_6288(%var_6289) /* ty=(Tensor[(2, 12, 5), bool], Tensor[(15, 3, 5), float32], Tensor[(15, 3, 5), bool], int16, Tensor[(1, 78), float32]) */
}

def @func_5388(%var_5387: Tensor[(3, 14, 3), float64]) -> (Tensor[(3, 14, 3), uint64], Tensor[(15, 3, 5), bool], Tensor[(1, 14, 3), float32]) {
  %45 = fn (%var_5363: Tensor[(3, 14, 3), float64]) -> (Tensor[(3, 14, 3), uint64], Tensor[(15, 3, 5), bool], Tensor[(1, 14, 3), float32]) {
    %37 = @func_1823() /* ty=(Tensor[(1, 14, 3), float64],) */;
    %38 = %37.0;
    %39 = cast(%38, dtype="uint64") /* ty=Tensor[(1, 14, 3), uint64] */;
    %40 = cast(%var_5363, dtype="uint64") /* ty=Tensor[(3, 14, 3), uint64] */;
    %41 = cast(%38, dtype="float32") /* ty=Tensor[(1, 14, 3), float32] */;
    %42 = right_shift(%39, %40) /* ty=Tensor[(3, 14, 3), uint64] */;
    %43 = @func_928() /* ty=Tensor[(15, 3, 5), bool] */;
    %44 = acos(%41) /* ty=Tensor[(1, 14, 3), float32] */;
    (%42, %43, %44)
  };
  %45(%var_5387) /* ty=(Tensor[(3, 14, 3), uint64], Tensor[(15, 3, 5), bool], Tensor[(1, 14, 3), float32]) */
}

def @func_8562() -> Tensor[(15, 3, 5), bool] {
  %46 = @func_6346() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %46.0
}

def @func_3305() -> (Tensor[(42), float32], Tensor[(15, 3, 5), bool], Tensor[(4, 5, 8), float64], Tensor[(160), float64]) {
  %53 = fn () -> (Tensor[(42), float32], Tensor[(15, 3, 5), bool], Tensor[(4, 5, 8), float64], Tensor[(160), float64]) {
    %47 = cast(meta[relay.Constant][1] /* ty=Tensor[(160), float64] */, dtype="float64") /* ty=Tensor[(160), float64] */;
    %48 = reshape(%47, newshape=[4, 5, 8]) /* ty=Tensor[(4, 5, 8), float64] */;
    %49 = @func_1669(%48) /* ty=(Tensor[(4, 5, 8), float64],) */;
    %50 = @func_2572() /* ty=Tensor[(42), float32] */;
    %51 = @func_928() /* ty=Tensor[(15, 3, 5), bool] */;
    %52 = %49.0;
    (%50, %51, %52, meta[relay.Constant][1] /* ty=Tensor[(160), float64] */)
  };
  %53() /* ty=(Tensor[(42), float32], Tensor[(15, 3, 5), bool], Tensor[(4, 5, 8), float64], Tensor[(160), float64]) */
}

def @main(%var_15353: Tensor[(1001, 1), uint64]) -> (Tensor[(4, 5, 8), float64], Tensor[(42), float32], Tensor[(1, 14, 3), float64], Tensor[(1001, 1), float32]) {
  %54 = @func_3305() /* ty=(Tensor[(42), float32], Tensor[(15, 3, 5), bool], Tensor[(4, 5, 8), float64], Tensor[(160), float64]) */;
  %55 = cast(%var_15353, dtype="uint64") /* ty=Tensor[(1001, 1), uint64] */;
  %56 = reshape(%55, newshape=[1, 1001]) /* ty=Tensor[(1, 1001), uint64] */;
  %57 = @func_11526(%56) /* ty=(Tensor[(6, 14, 3), int32], Tensor[(120), uint8], Tensor[(1, 1001), uint64], Tensor[(42), float32], Tensor[(6, 20), uint8]) */;
  %58 = @func_2291() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(1, 14, 3), float64], Tensor[(42), float32], Tensor[(1, 14, 3), float64]) */;
  %59 = cast(%var_15353, dtype="float32") /* ty=Tensor[(1001, 1), float32] */;
  %60 = %54.2;
  %61 = %57.3;
  %62 = %58.3;
  %63 = sigmoid(%59) /* ty=Tensor[(1001, 1), float32] */;
  (%60, %61, %62, %63)
}

def @func_8364() -> (Tensor[(42), float32],) {
  @func_8362() /* ty=(Tensor[(42), float32],) */
}

def @func_3485() -> Tensor[(2, 12, 5), bool] {
  %65 = fn () -> Tensor[(2, 12, 5), bool] {
    %64 = @func_1602() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], Tensor[(120), uint8]) */;
    %64.1
  };
  %65() /* ty=Tensor[(2, 12, 5), bool] */
}

def @func_7628() -> (Tensor[(42), float32],) {
  @func_7626() /* ty=(Tensor[(42), float32],) */
}

def @func_4234() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  %66 = @func_2259() /* ty=(Tensor[(1, 14, 3), float64], Tensor[(1, 14, 3), float64], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %67 = %66.3;
  %68 = @func_702() /* ty=Tensor[(15, 3, 5), bool] */;
  (%67, %68)
}

def @func_4984() -> (Tensor[(120), uint8], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  %74 = fn () -> (Tensor[(120), uint8], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
    %69 = @func_1570() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], Tensor[(120), uint8]) */;
    %70 = @func_4252() /* ty=(Tensor[(15, 3, 5), bool],) */;
    %71 = %69.2;
    %72 = @func_928() /* ty=Tensor[(15, 3, 5), bool] */;
    %73 = %70.0;
    (%71, %72, %73)
  };
  %74() /* ty=(Tensor[(120), uint8], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */
}

def @func_13449(%var_13448: Tensor[(3, 14, 14), float64]) -> Tensor[(3, 14, 14), float64] {
  %76 = fn (%var_13444: Tensor[(3, 14, 14), float64]) -> Tensor[(3, 14, 14), float64] {
    %75 = cast(%var_13444, dtype="float64") /* ty=Tensor[(3, 14, 14), float64] */;
    atanh(%75) /* ty=Tensor[(3, 14, 14), float64] */
  };
  %76(%var_13448) /* ty=Tensor[(3, 14, 14), float64] */
}

def @func_14754() -> Tensor[(15, 3, 5), bool] {
  %77 = @func_12165() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], int16, int16, Tensor[(15, 3, 5), float32], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %77.0
}

def @func_4546(%var_4523: int16, %var_4524: Tensor[(6, 13, 1), int16]) -> (Tensor[(15, 3, 5), bool], Tensor[(6, 13, 1), float32], Tensor[(42), float32], Tensor[(1001), uint64]) {
  %78 = @func_757() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %79 = cast(%var_4523, dtype="int16") /* ty=int16 */;
  %80 = cast(%var_4524, dtype="int16") /* ty=Tensor[(6, 13, 1), int16] */;
  %81 = right_shift(%79, %80) /* ty=Tensor[(6, 13, 1), int16] */;
  %82 = cast(%81, dtype="float32") /* ty=Tensor[(6, 13, 1), float32] */;
  %83 = cast(meta[relay.Constant][2] /* ty=Tensor[(1001), uint64] */, dtype="uint64") /* ty=Tensor[(1001), uint64] */;
  %84 = reshape(%83, newshape=[91, 11]) /* ty=Tensor[(91, 11), uint64] */;
  %85 = @func_3780(%84) /* ty=(Tensor[(15, 3, 5), bool], Tensor[(42), float32], Tensor[(7, 66), float64], Tensor[(91, 11), uint64]) */;
  %86 = %78.0;
  %87 = sin(%82) /* ty=Tensor[(6, 13, 1), float32] */;
  %88 = %85.1;
  (%86, %87, %88, meta[relay.Constant][2] /* ty=Tensor[(1001), uint64] */)
}

def @func_2747() -> (Tensor[(15, 3, 5), bool],) {
  @func_2745() /* ty=(Tensor[(15, 3, 5), bool],) */
}

def @func_2998(%var_2952: Tensor[(11, 14, 3), float64], %var_2976: Tensor[(1001), uint64]) -> (Tensor[(11, 14, 3), float64], Tensor[(15, 3, 5), bool], Tensor[(42), float32], Tensor[(1001), uint64], Tensor[(6, 20), uint8]) {
  %89 = @func_1444() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(120), uint8], Tensor[(120), uint8], Tensor[(1, 14, 3), float64], Tensor[(42), float32]) */;
  %90 = %89.3;
  %91 = cast(%90, dtype="float64") /* ty=Tensor[(1, 14, 3), float64] */;
  %92 = cast(%var_2952, dtype="float64") /* ty=Tensor[(11, 14, 3), float64] */;
  %93 = @func_680() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %94 = cast(%var_2976, dtype="uint64") /* ty=Tensor[(1001), uint64] */;
  %95 = cast(%90, dtype="float32") /* ty=Tensor[(1, 14, 3), float32] */;
  %96 = cast(meta[relay.Constant][3] /* ty=Tensor[(6, 20), uint8] */, dtype="uint8") /* ty=Tensor[(6, 20), uint8] */;
  %97 = reshape(%94, newshape=[11, 7, 13]) /* ty=Tensor[(11, 7, 13), uint64] */;
  %98 = reshape(%95, newshape=[42]) /* ty=Tensor[(42), float32] */;
  %99 = reshape(%96, newshape=[120]) /* ty=Tensor[(120), uint8] */;
  %100 = @func_1493(%97, %98, %99) /* ty=(Tensor[(11, 7, 13), uint64], Tensor[(42), float32], Tensor[(42), float32], Tensor[(120), uint8], Tensor[(120), uint8]) */;
  %101 = power(%91, %92) /* ty=Tensor[(11, 14, 3), float64] */;
  %102 = %93.0;
  %103 = %100.1;
  (%101, %102, %103, %var_2976, meta[relay.Constant][3] /* ty=Tensor[(6, 20), uint8] */)
}

def @func_5715() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(42), float32], Tensor[(1001), uint64], Tensor[(42), float32], Tensor[(120), uint8]) {
  @func_5713() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(42), float32], Tensor[(1001), uint64], Tensor[(42), float32], Tensor[(120), uint8]) */
}

def @func_6723(%var_6696: Tensor[(15, 3, 5), bool]) -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  %104 = @func_2745() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %105 = @func_5305() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %106 = %105.0;
  %107 = cast(%var_6696, dtype="bool") /* ty=Tensor[(15, 3, 5), bool] */;
  %108 = shape_of(%106, dtype="int32") /* ty=Tensor[(3), int32] */;
  %109 = cast(%106, dtype="bool") /* ty=Tensor[(15, 3, 5), bool] */;
  %110 = dyn.reshape(%107, %108, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %111 = @func_6518() /* ty=Tensor[(15, 3, 5), bool] */;
  %112 = @func_5439() /* ty=Tensor[(15, 3, 5), bool] */;
  %113 = %104.0;
  %114 = greater_equal(%109, %110) /* ty=Tensor[(15, 3, 5), bool] */;
  (%111, %112, %113, %114)
}

def @func_3681() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  @func_3679() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */
}

def @func_5522(%var_5520: Tensor[(5, 13, 5), uint16]) -> Tensor[(5, 13, 5), uint16] {
  @func_5519(%var_5520) /* ty=Tensor[(5, 13, 5), uint16] */
}

def @func_9803(%var_9801: Tensor[(11, 14, 3), float64]) -> (Tensor[(13, 14, 3), bool], Tensor[(11, 14, 3), bool]) {
  @func_9800(%var_9801) /* ty=(Tensor[(13, 14, 3), bool], Tensor[(11, 14, 3), bool]) */
}

def @func_1231(%var_1230: Tensor[(120), uint8]) -> (Tensor[(2, 12, 5), bool], Tensor[(120), uint8], Tensor[(15, 3, 5), uint16], Tensor[(2, 12, 5), bool], Tensor[(2, 12, 5), float64]) {
  %135 = fn (%var_1168: Tensor[(120), uint8]) -> (Tensor[(2, 12, 5), bool], Tensor[(120), uint8], Tensor[(15, 3, 5), uint16], Tensor[(2, 12, 5), bool], Tensor[(2, 12, 5), float64]) {
    %115 = cast(%var_1168, dtype="uint8") /* ty=Tensor[(120), uint8] */;
    %116 = reshape(%115, newshape=[120]) /* ty=Tensor[(120), uint8] */;
    %117 = @func_1048(%116) /* ty=(Tensor[(2, 12, 5), bool], Tensor[(120), uint8], Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], Tensor[(15, 3, 5), float32]) */;
    %118 = @func_702() /* ty=Tensor[(15, 3, 5), bool] */;
    %119 = @func_928() /* ty=Tensor[(15, 3, 5), bool] */;
    %120 = cast(%119, dtype="uint16") /* ty=Tensor[(15, 3, 5), uint16] */;
    %121 = shape_of(%118, dtype="int32") /* ty=Tensor[(3), int32] */;
    %122 = cast(%118, dtype="uint16") /* ty=Tensor[(15, 3, 5), uint16] */;
    %123 = dyn.reshape(%120, %121, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %124 = cast(%var_1168, dtype="uint8") /* ty=Tensor[(120), uint8] */;
    %125 = reshape(%124, newshape=[2, 12, 5]) /* ty=Tensor[(2, 12, 5), uint8] */;
    %126 = %117.3;
    %127 = cast(%126, dtype="uint8") /* ty=Tensor[(2, 12, 5), uint8] */;
    %128 = reshape(%127, newshape=[120]) /* ty=Tensor[(120), uint8] */;
    %129 = @func_1048(%128) /* ty=(Tensor[(2, 12, 5), bool], Tensor[(120), uint8], Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], Tensor[(15, 3, 5), float32]) */;
    %130 = %129.0;
    %131 = cast(%130, dtype="float64") /* ty=Tensor[(2, 12, 5), float64] */;
    %132 = left_shift(%122, %123) /* ty=Tensor[(15, 3, 5), uint16] */;
    %133 = @func_501(%125) /* ty=Tensor[(2, 12, 5), bool] */;
    %134 = log10(%131) /* ty=Tensor[(2, 12, 5), float64] */;
    (%126, %var_1168, %132, %133, %134)
  };
  %135(%var_1230) /* ty=(Tensor[(2, 12, 5), bool], Tensor[(120), uint8], Tensor[(15, 3, 5), uint16], Tensor[(2, 12, 5), bool], Tensor[(2, 12, 5), float64]) */
}

def @func_8947(%var_8913: Tensor[(1344), float32]) -> (Tensor[(15, 3, 5), bool], Tensor[(14, 12, 8), int32], Tensor[(1344), float32]) {
  %136 = @func_6346() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %137 = cast(%var_8913, dtype="float32") /* ty=Tensor[(1344), float32] */;
  %138 = reshape(%137, newshape=[14, 12, 8]) /* ty=Tensor[(14, 12, 8), float32] */;
  %139 = @func_7473(%138) /* ty=(Tensor[(14, 12, 8), int32],) */;
  %140 = %136.0;
  %141 = %139.0;
  (%140, %141, %var_8913)
}

def @func_10771() -> (Tensor[(15, 3, 5), bool],) {
  %143 = fn () -> (Tensor[(15, 3, 5), bool],) {
    %142 = @func_10166() /* ty=Tensor[(15, 3, 5), bool] */;
    (%142,)
  };
  %143() /* ty=(Tensor[(15, 3, 5), bool],) */
}

def @func_8784(%var_8783: Tensor[(7, 15, 11), float32]) -> (Tensor[(7, 15, 11), float32], Tensor[(15, 3, 5), bool]) {
  %148 = fn (%var_8772: Tensor[(7, 15, 11), float32]) -> (Tensor[(7, 15, 11), float32], Tensor[(15, 3, 5), bool]) {
    %144 = cast(%var_8772, dtype="float32") /* ty=Tensor[(7, 15, 11), float32] */;
    %145 = @func_8291() /* ty=(Tensor[(15, 3, 5), bool],) */;
    %146 = rsqrt(%144) /* ty=Tensor[(7, 15, 11), float32] */;
    %147 = %145.0;
    (%146, %147)
  };
  %148(%var_8783) /* ty=(Tensor[(7, 15, 11), float32], Tensor[(15, 3, 5), bool]) */
}

def @func_9580() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  %156 = fn () -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
    %149 = @func_1947() /* ty=(Tensor[(15, 3, 5), bool],) */;
    %150 = @func_5015() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float64]) */;
    %151 = @func_3520() /* ty=(Tensor[(15, 3, 5), bool],) */;
    %152 = %149.0;
    %153 = %150.0;
    %154 = @func_702() /* ty=Tensor[(15, 3, 5), bool] */;
    %155 = %151.0;
    (%152, %153, %154, %155)
  };
  %156() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */
}

def @func_10108() -> (Tensor[(15, 3, 5), float64], Tensor[(5, 13, 5), float32], Tensor[(325), uint16]) {
  @func_10106() /* ty=(Tensor[(15, 3, 5), float64], Tensor[(5, 13, 5), float32], Tensor[(325), uint16]) */
}

def @func_13896() -> (Tensor[(15, 13, 6), float64], Tensor[(2, 12, 5), float32]) {
  %161 = fn () -> (Tensor[(15, 13, 6), float64], Tensor[(2, 12, 5), float32]) {
    %157 = @func_3484() /* ty=Tensor[(2, 12, 5), bool] */;
    %158 = cast(%157, dtype="float32") /* ty=Tensor[(2, 12, 5), float32] */;
    %159 = @func_8698() /* ty=Tensor[(15, 13, 6), float64] */;
    %160 = sinh(%158) /* ty=Tensor[(2, 12, 5), float32] */;
    (%159, %160)
  };
  %161() /* ty=(Tensor[(15, 13, 6), float64], Tensor[(2, 12, 5), float32]) */
}

def @func_14100() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float32]) {
  %165 = fn () -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float32]) {
    %162 = @func_12170() /* ty=(Tensor[(15, 3, 5), bool],) */;
    %163 = %162.0;
    %164 = @func_9883() /* ty=Tensor[(15, 3, 5), float32] */;
    (%163, %164)
  };
  %165() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float32]) */
}

def @func_8479() -> Tensor[(15, 3, 5), bool] {
  @func_8477() /* ty=Tensor[(15, 3, 5), bool] */
}

def @func_9082(%var_9081: Tensor[(6, 5, 11), float64]) -> (Tensor[(6, 5, 11), float64],) {
  %169 = fn (%var_9075: Tensor[(6, 5, 11), float64]) -> (Tensor[(6, 5, 11), float64],) {
    %166 = cast(6.18147f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %167 = cast(%var_9075, dtype="float64") /* ty=Tensor[(6, 5, 11), float64] */;
    %168 = power(%166, %167) /* ty=Tensor[(6, 5, 11), float64] */;
    (%168,)
  };
  %169(%var_9081) /* ty=(Tensor[(6, 5, 11), float64],) */
}

def @func_3354() -> (Tensor[(15, 3, 5), bool],) {
  @func_3352() /* ty=(Tensor[(15, 3, 5), bool],) */
}

def @func_11045() -> (Tensor[(15, 3, 5), bool],) {
  @func_11043() /* ty=(Tensor[(15, 3, 5), bool],) */
}

def @func_13935(%var_13933: float64, %var_13934: Tensor[(2, 11, 13), float64]) -> (Tensor[(2, 11, 13), bool],) {
  %173 = fn (%var_13920: float64, %var_13921: Tensor[(2, 11, 13), float64]) -> (Tensor[(2, 11, 13), bool],) {
    %170 = cast(%var_13920, dtype="bool") /* ty=bool */;
    %171 = cast(%var_13921, dtype="bool") /* ty=Tensor[(2, 11, 13), bool] */;
    %172 = greater_equal(%170, %171) /* ty=Tensor[(2, 11, 13), bool] */;
    (%172,)
  };
  %173(%var_13933, %var_13934) /* ty=(Tensor[(2, 11, 13), bool],) */
}

def @func_13102(%var_13058: Tensor[(36), int16]) -> (Tensor[(15, 3, 5), bool], Tensor[(12, 3, 13), int16], Tensor[(36), int16], Tensor[(468), int16], Tensor[(15, 3, 5), bool]) {
  %174 = @func_8634() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %175 = cast(%var_13058, dtype="int16") /* ty=Tensor[(36), int16] */;
  %176 = cast(meta[relay.Constant][4] /* ty=Tensor[(468), int16] */, dtype="int16") /* ty=Tensor[(468), int16] */;
  %177 = reshape(%175, newshape=[12, 3, 1]) /* ty=Tensor[(12, 3, 1), int16] */;
  %178 = reshape(%176, newshape=[12, 3, 13]) /* ty=Tensor[(12, 3, 13), int16] */;
  %179 = @func_1547(%177, %178) /* ty=(Tensor[(12, 3, 13), int16], Tensor[(120), uint8]) */;
  %180 = @func_1129() /* ty=(Tensor[(2, 12, 5), bool], Tensor[(120), uint8], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %181 = %174.0;
  %182 = %179.0;
  %183 = %180.2;
  (%181, %182, %var_13058, meta[relay.Constant][4] /* ty=Tensor[(468), int16] */, %183)
}

def @func_9297() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float64], Tensor[(15, 3, 5), bool]) {
  %187 = fn () -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float64], Tensor[(15, 3, 5), bool]) {
    %184 = @func_8826() /* ty=Tensor[(15, 3, 5), bool] */;
    %185 = @func_3092() /* ty=Tensor[(15, 3, 5), float64] */;
    %186 = @func_1684() /* ty=Tensor[(15, 3, 5), bool] */;
    (%184, %185, %186)
  };
  %187() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float64], Tensor[(15, 3, 5), bool]) */
}

def @func_14035(%var_14025: Tensor[(15, 6, 2), float32]) -> Tensor[(15, 6, 2), float64] {
  %188 = cast(%var_14025, dtype="float32") /* ty=Tensor[(15, 6, 2), float32] */;
  %189 = erf(%188) /* ty=Tensor[(15, 6, 2), float32] */;
  %190 = cast(%189, dtype="float64") /* ty=Tensor[(15, 6, 2), float64] */;
  log10(%190) /* ty=Tensor[(15, 6, 2), float64] */
}

def @func_6383() -> Tensor[(11, 12, 14), bool] {
  %197 = fn () -> Tensor[(11, 12, 14), bool] {
    %191 = cast(meta[relay.Constant][5] /* ty=Tensor[(11, 12, 14), float64] */, dtype="float64") /* ty=Tensor[(11, 12, 14), float64] */;
    %192 = tan(%191) /* ty=Tensor[(11, 12, 14), float64] */;
    %193 = cast(meta[relay.Constant][5] /* ty=Tensor[(11, 12, 14), float64] */, dtype="bool") /* ty=Tensor[(11, 12, 14), bool] */;
    %194 = shape_of(%192, dtype="int32") /* ty=Tensor[(3), int32] */;
    %195 = cast(%192, dtype="bool") /* ty=Tensor[(11, 12, 14), bool] */;
    %196 = dyn.reshape(%193, %194, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    greater_equal(%195, %196) /* ty=Tensor[(11, 12, 14), bool] */
  };
  %197() /* ty=Tensor[(11, 12, 14), bool] */
}

def @func_8084(%var_8082: Tensor[(6, 13, 7), int16], %var_8083: Tensor[(6, 13, 7), int16]) -> (Tensor[(6, 13, 7), uint64], Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], Tensor[(120, 1), uint8], Tensor[(6, 13, 7), float64], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  %224 = fn (%var_8037: Tensor[(6, 13, 7), int16], %var_8038: Tensor[(6, 13, 7), int16]) -> (Tensor[(6, 13, 7), uint64], Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], Tensor[(120, 1), uint8], Tensor[(6, 13, 7), float64], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
    %198 = cast(%var_8038, dtype="int16") /* ty=Tensor[(6, 13, 7), int16] */;
    %199 = shape_of(%var_8037, dtype="int32") /* ty=Tensor[(3), int32] */;
    %200 = cast(%var_8037, dtype="int16") /* ty=Tensor[(6, 13, 7), int16] */;
    %201 = dyn.reshape(%198, %199, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %202 = subtract(%200, %201) /* ty=Tensor[(6, 13, 7), int16] */;
    %203 = cast(%202, dtype="uint64") /* ty=Tensor[(6, 13, 7), uint64] */;
    %204 = shape_of(%var_8037, dtype="int32") /* ty=Tensor[(3), int32] */;
    %205 = cast(%var_8037, dtype="uint64") /* ty=Tensor[(6, 13, 7), uint64] */;
    %206 = dyn.reshape(%203, %204, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %207 = @func_3630() /* ty=(Tensor[(15, 3, 5), bool],) */;
    %208 = cast(meta[relay.Constant][6] /* ty=Tensor[(120, 1), uint8] */, dtype="uint8") /* ty=Tensor[(120, 1), uint8] */;
    %209 = reshape(%208, newshape=[120]) /* ty=Tensor[(120), uint8] */;
    %210 = @func_1229(%209) /* ty=(Tensor[(2, 12, 5), bool], Tensor[(120), uint8], Tensor[(15, 3, 5), uint16], Tensor[(2, 12, 5), bool], Tensor[(2, 12, 5), float64]) */;
    %211 = cast(%var_8037, dtype="float32") /* ty=Tensor[(6, 13, 7), float32] */;
    %212 = cosh(%211) /* ty=Tensor[(6, 13, 7), float32] */;
    %213 = cast(%212, dtype="float64") /* ty=Tensor[(6, 13, 7), float64] */;
    %214 = @func_3630() /* ty=(Tensor[(15, 3, 5), bool],) */;
    %215 = %207.0;
    %216 = cast(%215, dtype="bool") /* ty=Tensor[(15, 3, 5), bool] */;
    %217 = reshape(%216, newshape=[15, 3, 5]) /* ty=Tensor[(15, 3, 5), bool] */;
    %218 = @func_6723(%217) /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
    %219 = bitwise_xor(%205, %206) /* ty=Tensor[(6, 13, 7), uint64] */;
    %220 = %210.0;
    %221 = log2(%213) /* ty=Tensor[(6, 13, 7), float64] */;
    %222 = %214.0;
    %223 = %218.1;
    (%219, %215, %220, meta[relay.Constant][6] /* ty=Tensor[(120, 1), uint8] */, %221, %222, %223)
  };
  %224(%var_8082, %var_8083) /* ty=(Tensor[(6, 13, 7), uint64], Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], Tensor[(120, 1), uint8], Tensor[(6, 13, 7), float64], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */
}

def @func_12171() -> (Tensor[(15, 3, 5), bool],) {
  %226 = fn () -> (Tensor[(15, 3, 5), bool],) {
    %225 = @func_11591() /* ty=Tensor[(15, 3, 5), bool] */;
    (%225,)
  };
  %226() /* ty=(Tensor[(15, 3, 5), bool],) */
}

def @func_4236() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  @func_4234() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */
}

def @func_7476(%var_7474: Tensor[(14, 12, 8), float32]) -> (Tensor[(14, 12, 8), int32],) {
  @func_7473(%var_7474) /* ty=(Tensor[(14, 12, 8), int32],) */
}

def @func_10847() -> (Tensor[(2, 12, 5), bool], Tensor[(6, 14, 3), int32]) {
  %227 = @func_5511() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool]) */;
  %228 = @func_1444() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(120), uint8], Tensor[(120), uint8], Tensor[(1, 14, 3), float64], Tensor[(42), float32]) */;
  %229 = %228.3;
  %230 = cast(%229, dtype="int32") /* ty=Tensor[(1, 14, 3), int32] */;
  %231 = cast(meta[relay.Constant][7] /* ty=Tensor[(6, 14, 3), float64] */, dtype="int32") /* ty=Tensor[(6, 14, 3), int32] */;
  %232 = %227.1;
  %233 = subtract(%230, %231) /* ty=Tensor[(6, 14, 3), int32] */;
  (%232, %233)
}

def @func_12199() -> (Tensor[(42), float32],) {
  @func_12197() /* ty=(Tensor[(42), float32],) */
}

def @func_1361() -> (Tensor[(15, 3, 5), bool],) {
  %234 = @func_1129() /* ty=(Tensor[(2, 12, 5), bool], Tensor[(120), uint8], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %235 = %234.3;
  (%235,)
}

def @func_12038() -> (Tensor[(2, 12, 5), int32], Tensor[(42), float32]) {
  %236 = @func_8362() /* ty=(Tensor[(42), float32],) */;
  %237 = @func_9041() /* ty=Tensor[(2, 12, 5), int32] */;
  %238 = %236.0;
  (%237, %238)
}

def @func_1572() -> (Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], Tensor[(120), uint8]) {
  @func_1570() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], Tensor[(120), uint8]) */
}

def @func_7111() -> (Tensor[(15, 3, 5), bool],) {
  @func_7109() /* ty=(Tensor[(15, 3, 5), bool],) */
}

def @func_7473(%var_7462: Tensor[(14, 12, 8), float32]) -> (Tensor[(14, 12, 8), int32],) {
  %239 = cast(%var_7462, dtype="float32") /* ty=Tensor[(14, 12, 8), float32] */;
  %240 = sigmoid(%239) /* ty=Tensor[(14, 12, 8), float32] */;
  %241 = cast(%240, dtype="int32") /* ty=Tensor[(14, 12, 8), int32] */;
  %242 = shape_of(%var_7462, dtype="int32") /* ty=Tensor[(3), int32] */;
  %243 = cast(%var_7462, dtype="int32") /* ty=Tensor[(14, 12, 8), int32] */;
  %244 = dyn.reshape(%241, %242, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %245 = logical_xor(%243, %244) /* ty=Tensor[(14, 12, 8), int32] */;
  (%245,)
}

def @func_10972() -> (Tensor[(1, 14, 3), float64], Tensor[(42), float32], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], int16) {
  %256 = fn () -> (Tensor[(1, 14, 3), float64], Tensor[(42), float32], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], int16) {
    %246 = @func_7168() /* ty=(Tensor[(1, 14, 3), float64],) */;
    %247 = @func_8362() /* ty=(Tensor[(42), float32],) */;
    %248 = @func_4252() /* ty=(Tensor[(15, 3, 5), bool],) */;
    %249 = cast(meta[relay.Constant][8] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %250 = reshape(%249, newshape=[]) /* ty=int16 */;
    %251 = @func_7865(%250) /* ty=(Tensor[(42), float32], Tensor[(15, 3, 5), bool], Tensor[(6, 13, 1), float32], int16, Tensor[(78), int16]) */;
    %252 = %246.0;
    %253 = %247.0;
    %254 = %248.0;
    %255 = %251.1;
    (%252, %253, %254, %255, meta[relay.Constant][8] /* ty=int16 */)
  };
  %256() /* ty=(Tensor[(1, 14, 3), float64], Tensor[(42), float32], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], int16) */
}

def @func_5606() -> (Tensor[(15, 3, 5), float64],) {
  @func_5604() /* ty=(Tensor[(15, 3, 5), float64],) */
}

def @func_2574() -> Tensor[(42), float32] {
  @func_2572() /* ty=Tensor[(42), float32] */
}

def @func_12583() -> (Tensor[(2, 12, 5), bool], Tensor[(15, 3, 5), bool]) {
  %260 = fn () -> (Tensor[(2, 12, 5), bool], Tensor[(15, 3, 5), bool]) {
    %257 = @func_10412() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
    %258 = @func_12449() /* ty=Tensor[(2, 12, 5), bool] */;
    %259 = %257.2;
    (%258, %259)
  };
  %260() /* ty=(Tensor[(2, 12, 5), bool], Tensor[(15, 3, 5), bool]) */
}

def @func_4710() -> (Tensor[(15, 3, 5), bool],) {
  @func_4708() /* ty=(Tensor[(15, 3, 5), bool],) */
}

def @func_10295() -> (Tensor[(15, 3, 5), bool],) {
  @func_10293() /* ty=(Tensor[(15, 3, 5), bool],) */
}

def @func_11338() -> (Tensor[(15, 3, 5), bool], Tensor[(120), uint8]) {
  %265 = fn () -> (Tensor[(15, 3, 5), bool], Tensor[(120), uint8]) {
    %261 = @func_3606() /* ty=(Tensor[(42), float32], Tensor[(15, 3, 5), bool]) */;
    %262 = @func_7457() /* ty=(Tensor[(120), uint8], Tensor[(15, 3, 5), bool]) */;
    %263 = %261.1;
    %264 = %262.0;
    (%263, %264)
  };
  %265() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(120), uint8]) */
}

def @func_14592() -> (Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), float32]) {
  @func_14590() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), float32]) */
}

def @func_10849() -> (Tensor[(2, 12, 5), bool], Tensor[(6, 14, 3), int32]) {
  @func_10847() /* ty=(Tensor[(2, 12, 5), bool], Tensor[(6, 14, 3), int32]) */
}

def @func_9447() -> (Tensor[(2, 12, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], int16, Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float32], Tensor[(2, 12, 5), float64], Tensor[(2, 12, 5), bool], Tensor[(2, 12, 5), int32]) {
  @func_9445() /* ty=(Tensor[(2, 12, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], int16, Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float32], Tensor[(2, 12, 5), float64], Tensor[(2, 12, 5), bool], Tensor[(2, 12, 5), int32]) */
}

def @func_7865(%var_7858: int16) -> (Tensor[(42), float32], Tensor[(15, 3, 5), bool], Tensor[(6, 13, 1), float32], int16, Tensor[(78), int16]) {
  %266 = @func_4395() /* ty=(Tensor[(42), float32], Tensor[(15, 3, 5), bool]) */;
  %267 = @func_3630() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %268 = cast(%var_7858, dtype="int16") /* ty=int16 */;
  %269 = cast(meta[relay.Constant][9] /* ty=Tensor[(78), int16] */, dtype="int16") /* ty=Tensor[(78), int16] */;
  %270 = reshape(%268, newshape=[]) /* ty=int16 */;
  %271 = reshape(%269, newshape=[6, 13, 1]) /* ty=Tensor[(6, 13, 1), int16] */;
  %272 = @func_4546(%270, %271) /* ty=(Tensor[(15, 3, 5), bool], Tensor[(6, 13, 1), float32], Tensor[(42), float32], Tensor[(1001), uint64]) */;
  %273 = %266.0;
  %274 = %267.0;
  %275 = %272.1;
  (%273, %274, %275, %var_7858, meta[relay.Constant][9] /* ty=Tensor[(78), int16] */)
}

def @func_10145() -> Tensor[(15, 3, 5), bool] {
  @func_10143() /* ty=Tensor[(15, 3, 5), bool] */
}

def @func_4445() -> (Tensor[(15, 3, 5), bool],) {
  %276 = @func_2774() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %277 = %276.0;
  (%277,)
}

def @func_9537(%var_9535: Tensor[(6, 14, 14), float32]) -> Tensor[(6, 14, 14), float32] {
  @func_9534(%var_9535) /* ty=Tensor[(6, 14, 14), float32] */
}

def @func_5604() -> (Tensor[(15, 3, 5), float64],) {
  %278 = @func_4309() /* ty=(Tensor[(15, 3, 5), float64], Tensor[(15, 3, 5), bool]) */;
  %279 = %278.0;
  (%279,)
}

def @func_2451(%var_2450: Tensor[(15, 3, 5), bool]) -> Tensor[(15, 3, 5), float32] {
  %285 = fn (%var_2439: Tensor[(15, 3, 5), bool]) -> Tensor[(15, 3, 5), float32] {
    %280 = @func_1285() /* ty=Tensor[(15, 3, 5), bool] */;
    %281 = cast(%var_2439, dtype="float32") /* ty=Tensor[(15, 3, 5), float32] */;
    %282 = shape_of(%280, dtype="int32") /* ty=Tensor[(3), int32] */;
    %283 = cast(%280, dtype="float32") /* ty=Tensor[(15, 3, 5), float32] */;
    %284 = dyn.reshape(%281, %282, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    floor_mod(%283, %284) /* ty=Tensor[(15, 3, 5), float32] */
  };
  %285(%var_2450) /* ty=Tensor[(15, 3, 5), float32] */
}

def @func_4458() -> Tensor[(42), float32] {
  %286 = @func_2289() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(1, 14, 3), float64], Tensor[(42), float32], Tensor[(1, 14, 3), float64]) */;
  %286.2
}

def @func_5302() -> Tensor[(15, 3, 5), bool] {
  @func_5300() /* ty=Tensor[(15, 3, 5), bool] */
}

def @func_1444() -> (Tensor[(15, 3, 5), bool], Tensor[(120), uint8], Tensor[(120), uint8], Tensor[(1, 14, 3), float64], Tensor[(42), float32]) {
  %287 = @func_680() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %288 = cast(meta[relay.Constant][10] /* ty=Tensor[(120), uint8] */, dtype="uint8") /* ty=Tensor[(120), uint8] */;
  %289 = reshape(%288, newshape=[120]) /* ty=Tensor[(120), uint8] */;
  %290 = @func_1048(%289) /* ty=(Tensor[(2, 12, 5), bool], Tensor[(120), uint8], Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], Tensor[(15, 3, 5), float32]) */;
  %291 = cast(meta[relay.Constant][11] /* ty=Tensor[(42), float32] */, dtype="float32") /* ty=Tensor[(42), float32] */;
  %292 = reshape(%291, newshape=[1, 14, 3]) /* ty=Tensor[(1, 14, 3), float32] */;
  %293 = @func_202(%292) /* ty=(Tensor[(1, 14, 3), float32], Tensor[(1, 14, 3), float64]) */;
  %294 = %287.0;
  %295 = %290.1;
  %296 = %293.1;
  (%294, %295, meta[relay.Constant][10] /* ty=Tensor[(120), uint8] */, %296, meta[relay.Constant][11] /* ty=Tensor[(42), float32] */)
}

def @func_204(%var_203: Tensor[(1, 14, 3), float32]) -> (Tensor[(1, 14, 3), float32], Tensor[(1, 14, 3), float64]) {
  %301 = fn (%var_191: Tensor[(1, 14, 3), float32]) -> (Tensor[(1, 14, 3), float32], Tensor[(1, 14, 3), float64]) {
    %297 = cast(%var_191, dtype="float32") /* ty=Tensor[(1, 14, 3), float32] */;
    %298 = cast(%var_191, dtype="float64") /* ty=Tensor[(1, 14, 3), float64] */;
    %299 = cosh(%297) /* ty=Tensor[(1, 14, 3), float32] */;
    %300 = tan(%298) /* ty=Tensor[(1, 14, 3), float64] */;
    (%299, %300)
  };
  %301(%var_203) /* ty=(Tensor[(1, 14, 3), float32], Tensor[(1, 14, 3), float64]) */
}

def @func_1570() -> (Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], Tensor[(120), uint8]) {
  %302 = @func_633() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %303 = cast(meta[relay.Constant][12] /* ty=Tensor[(120), uint8] */, dtype="uint8") /* ty=Tensor[(120), uint8] */;
  %304 = reshape(%303, newshape=[2, 12, 5]) /* ty=Tensor[(2, 12, 5), uint8] */;
  %305 = %302.0;
  %306 = @func_501(%304) /* ty=Tensor[(2, 12, 5), bool] */;
  (%305, %306, meta[relay.Constant][12] /* ty=Tensor[(120), uint8] */)
}

def @func_633() -> (Tensor[(15, 3, 5), bool],) {
  %307 = cast(meta[relay.Constant][13] /* ty=Tensor[(15, 3, 5), float32] */, dtype="float32") /* ty=Tensor[(15, 3, 5), float32] */;
  %308 = cosh(%307) /* ty=Tensor[(15, 3, 5), float32] */;
  %309 = cast(meta[relay.Constant][13] /* ty=Tensor[(15, 3, 5), float32] */, dtype="bool") /* ty=Tensor[(15, 3, 5), bool] */;
  %310 = shape_of(%308, dtype="int32") /* ty=Tensor[(3), int32] */;
  %311 = cast(%308, dtype="bool") /* ty=Tensor[(15, 3, 5), bool] */;
  %312 = dyn.reshape(%309, %310, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %313 = not_equal(%311, %312) /* ty=Tensor[(15, 3, 5), bool] */;
  (%313,)
}

def @func_3221(%var_3219: Tensor[(4, 1, 15), float32]) -> (Tensor[(4, 1, 15), float32], Tensor[(120), uint8], Tensor[(15, 3, 5), bool]) {
  @func_3218(%var_3219) /* ty=(Tensor[(4, 1, 15), float32], Tensor[(120), uint8], Tensor[(15, 3, 5), bool]) */
}

def @func_5439() -> Tensor[(15, 3, 5), bool] {
  %314 = @func_680() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %314.0
}

def @func_6567() -> Tensor[(9, 14, 3), float64] {
  %315 = @func_1823() /* ty=(Tensor[(1, 14, 3), float64],) */;
  %316 = %315.0;
  %317 = cast(%316, dtype="float64") /* ty=Tensor[(1, 14, 3), float64] */;
  %318 = cast(meta[relay.Constant][14] /* ty=Tensor[(9, 14, 3), float64] */, dtype="float64") /* ty=Tensor[(9, 14, 3), float64] */;
  mod(%317, %318) /* ty=Tensor[(9, 14, 3), float64] */
}

def @func_7169() -> (Tensor[(1, 14, 3), float64],) {
  %321 = fn () -> (Tensor[(1, 14, 3), float64],) {
    %319 = @func_4295() /* ty=(Tensor[(15, 3, 5), float32], Tensor[(1, 14, 3), float64], Tensor[(42), float32]) */;
    %320 = %319.1;
    (%320,)
  };
  %321() /* ty=(Tensor[(1, 14, 3), float64],) */
}

def @func_704() -> Tensor[(15, 3, 5), bool] {
  @func_702() /* ty=Tensor[(15, 3, 5), bool] */
}

def @func_9877() -> Tensor[(15, 3, 5), bool] {
  %323 = fn () -> Tensor[(15, 3, 5), bool] {
    %322 = @func_8960() /* ty=(Tensor[(15, 3, 5), bool],) */;
    %322.0
  };
  %323() /* ty=Tensor[(15, 3, 5), bool] */
}

def @func_11766(%var_11765: float64) -> (Tensor[(9, 5, 2), float64], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  %330 = fn (%var_11731: float64) -> (Tensor[(9, 5, 2), float64], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
    %324 = cast(%var_11731, dtype="float64") /* ty=float64 */;
    %325 = cast(meta[relay.Constant][15] /* ty=Tensor[(9, 5, 2), float64] */, dtype="float64") /* ty=Tensor[(9, 5, 2), float64] */;
    %326 = @func_6346() /* ty=(Tensor[(15, 3, 5), bool],) */;
    %327 = mod(%324, %325) /* ty=Tensor[(9, 5, 2), float64] */;
    %328 = @func_11353() /* ty=Tensor[(15, 3, 5), bool] */;
    %329 = %326.0;
    (%327, %328, %329)
  };
  %330(%var_11765) /* ty=(Tensor[(9, 5, 2), float64], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */
}

def @func_2088() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float32], Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), float64]) {
  %331 = @func_757() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %332 = @func_1309() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %333 = @func_680() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %334 = %333.0;
  %335 = cast(%334, dtype="float32") /* ty=Tensor[(15, 3, 5), float32] */;
  %336 = @func_1899() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %337 = @func_1764() /* ty=(Tensor[(120), uint8], Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), float64]) */;
  %338 = %331.0;
  %339 = %332.0;
  %340 = tan(%335) /* ty=Tensor[(15, 3, 5), float32] */;
  %341 = %336.0;
  %342 = %337.2;
  (%338, %339, %340, %341, %342)
}

def @func_9534(%var_9530: Tensor[(6, 14, 14), float32]) -> Tensor[(6, 14, 14), float32] {
  %343 = cast(%var_9530, dtype="float32") /* ty=Tensor[(6, 14, 14), float32] */;
  cosh(%343) /* ty=Tensor[(6, 14, 14), float32] */
}

def @func_1287() -> Tensor[(15, 3, 5), bool] {
  @func_1285() /* ty=Tensor[(15, 3, 5), bool] */
}

def @func_7493() -> (Tensor[(9, 14, 3), float64],) {
  %345 = fn () -> (Tensor[(9, 14, 3), float64],) {
    %344 = @func_6567() /* ty=Tensor[(9, 14, 3), float64] */;
    (%344,)
  };
  %345() /* ty=(Tensor[(9, 14, 3), float64],) */
}

def @func_8616() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float64]) {
  %346 = @func_5713() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(42), float32], Tensor[(1001), uint64], Tensor[(42), float32], Tensor[(120), uint8]) */;
  %347 = @func_5015() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float64]) */;
  %348 = %346.0;
  %349 = %347.1;
  (%348, %349)
}

def @func_10738() -> Tensor[(15, 3, 5), bool] {
  %350 = @func_2259() /* ty=(Tensor[(1, 14, 3), float64], Tensor[(1, 14, 3), float64], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %350.3
}

def @func_13200() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float32], Tensor[(15, 3, 5), bool]) {
  %358 = fn () -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float32], Tensor[(15, 3, 5), bool]) {
    %351 = @func_12793() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
    %352 = %351.0;
    %353 = cast(%352, dtype="bool") /* ty=Tensor[(15, 3, 5), bool] */;
    %354 = reshape(%353, newshape=[15, 3, 5]) /* ty=Tensor[(15, 3, 5), bool] */;
    %355 = @func_1309() /* ty=(Tensor[(15, 3, 5), bool],) */;
    %356 = @func_2449(%354) /* ty=Tensor[(15, 3, 5), float32] */;
    %357 = %355.0;
    (%352, %356, %357)
  };
  %358() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float32], Tensor[(15, 3, 5), bool]) */
}

def @func_12397() -> Tensor[(15, 3, 5), bool] {
  %359 = @func_12080() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %359.0
}

def @func_14991() -> (Tensor[(1, 14, 3), float64], Tensor[(3, 14, 13), bool], Tensor[(1, 546), int16]) {
  @func_14989() /* ty=(Tensor[(1, 14, 3), float64], Tensor[(3, 14, 13), bool], Tensor[(1, 546), int16]) */
}

def @func_916(%var_915: Tensor[(3, 40), uint8]) -> (Tensor[(2, 12, 5), bool], Tensor[(3, 40), uint8], Tensor[(15, 3, 5), float64], Tensor[(15, 3, 5), bool]) {
  %368 = fn (%var_887: Tensor[(3, 40), uint8]) -> (Tensor[(2, 12, 5), bool], Tensor[(3, 40), uint8], Tensor[(15, 3, 5), float64], Tensor[(15, 3, 5), bool]) {
    %360 = cast(%var_887, dtype="uint8") /* ty=Tensor[(3, 40), uint8] */;
    %361 = reshape(%360, newshape=[2, 12, 5]) /* ty=Tensor[(2, 12, 5), uint8] */;
    %362 = @func_702() /* ty=Tensor[(15, 3, 5), bool] */;
    %363 = cast(%362, dtype="float64") /* ty=Tensor[(15, 3, 5), float64] */;
    %364 = @func_757() /* ty=(Tensor[(15, 3, 5), bool],) */;
    %365 = @func_501(%361) /* ty=Tensor[(2, 12, 5), bool] */;
    %366 = cos(%363) /* ty=Tensor[(15, 3, 5), float64] */;
    %367 = %364.0;
    (%365, %var_887, %366, %367)
  };
  %368(%var_915) /* ty=(Tensor[(2, 12, 5), bool], Tensor[(3, 40), uint8], Tensor[(15, 3, 5), float64], Tensor[(15, 3, 5), bool]) */
}

def @func_1604() -> (Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], Tensor[(120), uint8]) {
  @func_1602() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], Tensor[(120), uint8]) */
}

def @func_3352() -> (Tensor[(15, 3, 5), bool],) {
  %369 = @func_702() /* ty=Tensor[(15, 3, 5), bool] */;
  (%369,)
}

def @func_10902() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  %370 = @func_9296() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float64], Tensor[(15, 3, 5), bool]) */;
  %371 = @func_4153() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %372 = %370.2;
  %373 = %371.1;
  %374 = @func_1285() /* ty=Tensor[(15, 3, 5), bool] */;
  (%372, %373, %374)
}

def @func_6903() -> (Tensor[(15, 3, 5), float64],) {
  @func_6901() /* ty=(Tensor[(15, 3, 5), float64],) */
}

def @func_3968() -> (Tensor[(15, 3, 5), bool],) {
  %375 = @func_928() /* ty=Tensor[(15, 3, 5), bool] */;
  (%375,)
}

def @func_3607() -> (Tensor[(42), float32], Tensor[(15, 3, 5), bool]) {
  %378 = fn () -> (Tensor[(42), float32], Tensor[(15, 3, 5), bool]) {
    %376 = @func_2572() /* ty=Tensor[(42), float32] */;
    %377 = @func_3387() /* ty=Tensor[(15, 3, 5), bool] */;
    (%376, %377)
  };
  %378() /* ty=(Tensor[(42), float32], Tensor[(15, 3, 5), bool]) */
}

def @func_3970() -> (Tensor[(15, 3, 5), bool],) {
  @func_3968() /* ty=(Tensor[(15, 3, 5), bool],) */
}

def @func_12999(%var_12991: Tensor[(120), uint8]) -> (Tensor[(4, 5, 8), float64], Tensor[(15, 3, 5), float64], Tensor[(120), uint8]) {
  %379 = @func_3304() /* ty=(Tensor[(42), float32], Tensor[(15, 3, 5), bool], Tensor[(4, 5, 8), float64], Tensor[(160), float64]) */;
  %380 = cast(%var_12991, dtype="uint8") /* ty=Tensor[(120), uint8] */;
  %381 = reshape(%380, newshape=[3, 40]) /* ty=Tensor[(3, 40), uint8] */;
  %382 = @func_914(%381) /* ty=(Tensor[(2, 12, 5), bool], Tensor[(3, 40), uint8], Tensor[(15, 3, 5), float64], Tensor[(15, 3, 5), bool]) */;
  %383 = %379.2;
  %384 = %382.2;
  (%383, %384, %var_12991)
}

def @func_1825() -> (Tensor[(1, 14, 3), float64],) {
  @func_1823() /* ty=(Tensor[(1, 14, 3), float64],) */
}

def @func_13105(%var_13103: Tensor[(36), int16]) -> (Tensor[(15, 3, 5), bool], Tensor[(12, 3, 13), int16], Tensor[(36), int16], Tensor[(468), int16], Tensor[(15, 3, 5), bool]) {
  @func_13102(%var_13103) /* ty=(Tensor[(15, 3, 5), bool], Tensor[(12, 3, 13), int16], Tensor[(36), int16], Tensor[(468), int16], Tensor[(15, 3, 5), bool]) */
}

def @func_14590() -> (Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), float32]) {
  %385 = @func_4153() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %386 = @func_13895() /* ty=(Tensor[(15, 13, 6), float64], Tensor[(2, 12, 5), float32]) */;
  %387 = %385.1;
  %388 = %386.1;
  (%387, %388)
}

def @func_7050(%var_7048: Tensor[(288), int8]) -> (Tensor[(15, 3, 5), float32], Tensor[(42), float32], Tensor[(8, 3, 12), bool], Tensor[(288), int8], Tensor[(15, 3, 5), bool]) {
  @func_7047(%var_7048) /* ty=(Tensor[(15, 3, 5), float32], Tensor[(42), float32], Tensor[(8, 3, 12), bool], Tensor[(288), int8], Tensor[(15, 3, 5), bool]) */
}

def @func_5441() -> Tensor[(15, 3, 5), bool] {
  @func_5439() /* ty=Tensor[(15, 3, 5), bool] */
}

def @func_5713() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(42), float32], Tensor[(1001), uint64], Tensor[(42), float32], Tensor[(120), uint8]) {
  %389 = @func_1309() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %390 = @func_2088() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float32], Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), float64]) */;
  %391 = cast(meta[relay.Constant][16] /* ty=Tensor[(1001), uint64] */, dtype="uint64") /* ty=Tensor[(1001), uint64] */;
  %392 = cast(meta[relay.Constant][17] /* ty=Tensor[(42), float32] */, dtype="float32") /* ty=Tensor[(42), float32] */;
  %393 = cast(meta[relay.Constant][18] /* ty=Tensor[(120), uint8] */, dtype="uint8") /* ty=Tensor[(120), uint8] */;
  %394 = reshape(%391, newshape=[11, 7, 13]) /* ty=Tensor[(11, 7, 13), uint64] */;
  %395 = reshape(%392, newshape=[42]) /* ty=Tensor[(42), float32] */;
  %396 = reshape(%393, newshape=[120]) /* ty=Tensor[(120), uint8] */;
  %397 = @func_1493(%394, %395, %396) /* ty=(Tensor[(11, 7, 13), uint64], Tensor[(42), float32], Tensor[(42), float32], Tensor[(120), uint8], Tensor[(120), uint8]) */;
  %398 = %389.0;
  %399 = %390.1;
  %400 = %397.1;
  (%398, %399, %400, meta[relay.Constant][16] /* ty=Tensor[(1001), uint64] */, meta[relay.Constant][17] /* ty=Tensor[(42), float32] */, meta[relay.Constant][18] /* ty=Tensor[(120), uint8] */)
}

def @func_12714() -> (Tensor[(2, 12, 5), uint16],) {
  %410 = fn () -> (Tensor[(2, 12, 5), uint16],) {
    %401 = @func_5992() /* ty=(Tensor[(2, 12, 5), bool],) */;
    %402 = %401.0;
    %403 = cast(%402, dtype="float32") /* ty=Tensor[(2, 12, 5), float32] */;
    %404 = log2(%403) /* ty=Tensor[(2, 12, 5), float32] */;
    %405 = cast(%404, dtype="uint16") /* ty=Tensor[(2, 12, 5), uint16] */;
    %406 = shape_of(%402, dtype="int32") /* ty=Tensor[(3), int32] */;
    %407 = cast(%402, dtype="uint16") /* ty=Tensor[(2, 12, 5), uint16] */;
    %408 = dyn.reshape(%405, %406, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %409 = minimum(%407, %408) /* ty=Tensor[(2, 12, 5), uint16] */;
    (%409,)
  };
  %410() /* ty=(Tensor[(2, 12, 5), uint16],) */
}

def @func_15247() -> (Tensor[(2, 12, 5), float64], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  @func_15245() /* ty=(Tensor[(2, 12, 5), float64], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */
}

def @func_6348() -> (Tensor[(15, 3, 5), bool],) {
  @func_6346() /* ty=(Tensor[(15, 3, 5), bool],) */
}

def @func_9179(%var_9178: Tensor[(2, 12, 5), bool]) -> (Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], Tensor[(270), float64], Tensor[(42), float32], Tensor[(15, 3, 5), float32], Tensor[(13, 1, 10), float64], Tensor[(130), float64], Tensor[(8, 3, 12), float32], Tensor[(3, 10, 9), float32]) {
  %443 = fn (%var_9095: Tensor[(2, 12, 5), bool]) -> (Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], Tensor[(270), float64], Tensor[(42), float32], Tensor[(15, 3, 5), float32], Tensor[(13, 1, 10), float64], Tensor[(130), float64], Tensor[(8, 3, 12), float32], Tensor[(3, 10, 9), float32]) {
    %411 = @func_2774() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
    %412 = @func_5992() /* ty=(Tensor[(2, 12, 5), bool],) */;
    %413 = %412.0;
    %414 = cast(%var_9095, dtype="bool") /* ty=Tensor[(2, 12, 5), bool] */;
    %415 = shape_of(%413, dtype="int32") /* ty=Tensor[(3), int32] */;
    %416 = cast(%413, dtype="bool") /* ty=Tensor[(2, 12, 5), bool] */;
    %417 = dyn.reshape(%414, %415, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %418 = @func_4295() /* ty=(Tensor[(15, 3, 5), float32], Tensor[(1, 14, 3), float64], Tensor[(42), float32]) */;
    %419 = cast(meta[relay.Constant][21] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
    %420 = reshape(%419, newshape=[130, 1]) /* ty=Tensor[(130, 1), float64] */;
    %421 = @func_7673(%420) /* ty=(Tensor[(15, 3, 5), bool], Tensor[(13, 1, 10), float64], float64, Tensor[(130, 1), float64]) */;
    %422 = cast(meta[relay.Constant][22] /* ty=Tensor[(288), int8] */, dtype="int8") /* ty=Tensor[(288), int8] */;
    %423 = reshape(%422, newshape=[288]) /* ty=Tensor[(288), int8] */;
    %424 = @func_7047(%423) /* ty=(Tensor[(15, 3, 5), float32], Tensor[(42), float32], Tensor[(8, 3, 12), bool], Tensor[(288), int8], Tensor[(15, 3, 5), bool]) */;
    %425 = %424.2;
    %426 = cast(meta[relay.Constant][22] /* ty=Tensor[(288), int8] */, dtype="float32") /* ty=Tensor[(288), float32] */;
    %427 = shape_of(%425, dtype="int32") /* ty=Tensor[(3), int32] */;
    %428 = cast(%425, dtype="float32") /* ty=Tensor[(8, 3, 12), float32] */;
    %429 = dyn.reshape(%426, %427, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %430 = cast(meta[relay.Constant][19] /* ty=Tensor[(270), float64] */, dtype="float64") /* ty=Tensor[(270), float64] */;
    %431 = cast(meta[relay.Constant][20] /* ty=Tensor[(42), float32] */, dtype="float32") /* ty=Tensor[(42), float32] */;
    %432 = reshape(%430, newshape=[3, 10, 9]) /* ty=Tensor[(3, 10, 9), float64] */;
    %433 = reshape(%431, newshape=[42]) /* ty=Tensor[(42), float32] */;
    %434 = @func_554(%432, %433) /* ty=(Tensor[(3, 10, 9), bool], Tensor[(1, 14, 3), float32], Tensor[(?, 14, 3), float32]) */;
    %435 = %434.0;
    %436 = cast(%435, dtype="float32") /* ty=Tensor[(3, 10, 9), float32] */;
    %437 = %411.1;
    %438 = greater_equal(%416, %417) /* ty=Tensor[(2, 12, 5), bool] */;
    %439 = %418.0;
    %440 = %421.1;
    %441 = mod(%428, %429) /* ty=Tensor[(8, 3, 12), float32] */;
    %442 = log2(%436) /* ty=Tensor[(3, 10, 9), float32] */;
    (%437, %438, meta[relay.Constant][19] /* ty=Tensor[(270), float64] */, meta[relay.Constant][20] /* ty=Tensor[(42), float32] */, %439, %440, meta[relay.Constant][21] /* ty=Tensor[(130), float64] */, %441, %442)
  };
  %443(%var_9178) /* ty=(Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], Tensor[(270), float64], Tensor[(42), float32], Tensor[(15, 3, 5), float32], Tensor[(13, 1, 10), float64], Tensor[(130), float64], Tensor[(8, 3, 12), float32], Tensor[(3, 10, 9), float32]) */
}

def @func_2212() -> (Tensor[(15, 3, 5), bool], Tensor[(1, 14, 3), float64], Tensor[(42), float32]) {
  @func_2210() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(1, 14, 3), float64], Tensor[(42), float32]) */
}

def @func_5061(%var_5059: Tensor[(3, 6, 5), uint32]) -> (Tensor[(3, 6, 5), uint32],) {
  @func_5058(%var_5059) /* ty=(Tensor[(3, 6, 5), uint32],) */
}

def @func_8635() -> (Tensor[(15, 3, 5), bool],) {
  %445 = fn () -> (Tensor[(15, 3, 5), bool],) {
    %444 = @func_928() /* ty=Tensor[(15, 3, 5), bool] */;
    (%444,)
  };
  %445() /* ty=(Tensor[(15, 3, 5), bool],) */
}

def @func_3002(%var_3000: Tensor[(11, 14, 3), float64], %var_3001: Tensor[(1001), uint64]) -> (Tensor[(11, 14, 3), float64], Tensor[(15, 3, 5), bool], Tensor[(42), float32], Tensor[(1001), uint64], Tensor[(6, 20), uint8]) {
  @func_2998(%var_3000, %var_3001) /* ty=(Tensor[(11, 14, 3), float64], Tensor[(15, 3, 5), bool], Tensor[(42), float32], Tensor[(1001), uint64], Tensor[(6, 20), uint8]) */
}

def @func_11274(%var_11273: Tensor[(1176), float32]) -> (Tensor[(15, 3, 5), float32], Tensor[(325), float32], Tensor[(6, 14, 14), float32], Tensor[(1176), float32], Tensor[(1, 14, 3), float64], Tensor[(1, 14, 3), float32], Tensor[(325), uint16], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  %466 = fn (%var_11218: Tensor[(1176), float32]) -> (Tensor[(15, 3, 5), float32], Tensor[(325), float32], Tensor[(6, 14, 14), float32], Tensor[(1176), float32], Tensor[(1, 14, 3), float64], Tensor[(1, 14, 3), float32], Tensor[(325), uint16], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
    %446 = @func_4295() /* ty=(Tensor[(15, 3, 5), float32], Tensor[(1, 14, 3), float64], Tensor[(42), float32]) */;
    %447 = @func_10106() /* ty=(Tensor[(15, 3, 5), float64], Tensor[(5, 13, 5), float32], Tensor[(325), uint16]) */;
    %448 = %447.2;
    %449 = cast(%448, dtype="float32") /* ty=Tensor[(325), float32] */;
    %450 = cast(%var_11218, dtype="float32") /* ty=Tensor[(1176), float32] */;
    %451 = reshape(%450, newshape=[6, 14, 14]) /* ty=Tensor[(6, 14, 14), float32] */;
    %452 = @func_2289() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(1, 14, 3), float64], Tensor[(42), float32], Tensor[(1, 14, 3), float64]) */;
    %453 = %452.3;
    %454 = cast(%453, dtype="float32") /* ty=Tensor[(1, 14, 3), float32] */;
    %455 = reshape(%454, newshape=[1, 14, 3]) /* ty=Tensor[(1, 14, 3), float32] */;
    %456 = @func_202(%455) /* ty=(Tensor[(1, 14, 3), float32], Tensor[(1, 14, 3), float64]) */;
    %457 = @func_10106() /* ty=(Tensor[(15, 3, 5), float64], Tensor[(5, 13, 5), float32], Tensor[(325), uint16]) */;
    %458 = @func_6125() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
    %459 = %446.0;
    %460 = atanh(%449) /* ty=Tensor[(325), float32] */;
    %461 = @func_9534(%451) /* ty=Tensor[(6, 14, 14), float32] */;
    %462 = %456.0;
    %463 = %457.2;
    %464 = @func_5439() /* ty=Tensor[(15, 3, 5), bool] */;
    %465 = %458.1;
    (%459, %460, %461, %var_11218, %453, %462, %463, %464, %465)
  };
  %466(%var_11273) /* ty=(Tensor[(15, 3, 5), float32], Tensor[(325), float32], Tensor[(6, 14, 14), float32], Tensor[(1176), float32], Tensor[(1, 14, 3), float64], Tensor[(1, 14, 3), float32], Tensor[(325), uint16], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */
}

def @func_14732() -> Tensor[(15, 3, 5), bool] {
  %467 = @func_7240() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float32]) */;
  %467.0
}

def @func_5305() -> (Tensor[(15, 3, 5), bool],) {
  %468 = @func_2745() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %469 = %468.0;
  (%469,)
}

def @func_7241() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float32]) {
  %474 = fn () -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float32]) {
    %470 = @func_4424() /* ty=Tensor[(15, 3, 5), bool] */;
    %471 = cast(%470, dtype="bool") /* ty=Tensor[(15, 3, 5), bool] */;
    %472 = reshape(%471, newshape=[15, 3, 5]) /* ty=Tensor[(15, 3, 5), bool] */;
    %473 = @func_2449(%472) /* ty=Tensor[(15, 3, 5), float32] */;
    (%470, %473)
  };
  %474() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float32]) */
}

def @func_7626() -> (Tensor[(42), float32],) {
  %475 = @func_3606() /* ty=(Tensor[(42), float32], Tensor[(15, 3, 5), bool]) */;
  %476 = %475.0;
  (%476,)
}

def @func_10211() -> Tensor[(15, 3, 5), bool] {
  @func_8680() /* ty=Tensor[(15, 3, 5), bool] */
}

def @func_10374() -> (Tensor[(15, 3, 5), float32], Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), float64]) {
  %482 = fn () -> (Tensor[(15, 3, 5), float32], Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), float64]) {
    %477 = @func_633() /* ty=(Tensor[(15, 3, 5), bool],) */;
    %478 = @func_3327() /* ty=(Tensor[(2, 12, 5), float64],) */;
    %479 = @func_9883() /* ty=Tensor[(15, 3, 5), float32] */;
    %480 = %477.0;
    %481 = %478.0;
    (%479, %480, %481)
  };
  %482() /* ty=(Tensor[(15, 3, 5), float32], Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), float64]) */
}

def @func_5976(%var_5975: Tensor[(6, 140), float32]) -> (Tensor[(15, 3, 5), float64], Tensor[(2, 12, 5), bool], Tensor[(6, 140), float32], Tensor[(15, 3, 5), bool]) {
  %491 = fn (%var_5958: Tensor[(6, 140), float32]) -> (Tensor[(15, 3, 5), float64], Tensor[(2, 12, 5), bool], Tensor[(6, 140), float32], Tensor[(15, 3, 5), bool]) {
    %483 = @func_4309() /* ty=(Tensor[(15, 3, 5), float64], Tensor[(15, 3, 5), bool]) */;
    %484 = cast(%var_5958, dtype="float32") /* ty=Tensor[(6, 140), float32] */;
    %485 = reshape(%484, newshape=[14, 4, 15]) /* ty=Tensor[(14, 4, 15), float32] */;
    %486 = @func_3476(%485) /* ty=(Tensor[(2, 12, 5), bool], Tensor[(14, 4, 15), int8]) */;
    %487 = @func_4605() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(91, 11), float64], Tensor[(15, 3, 5), bool]) */;
    %488 = %483.0;
    %489 = %486.0;
    %490 = %487.3;
    (%488, %489, %var_5958, %490)
  };
  %491(%var_5975) /* ty=(Tensor[(15, 3, 5), float64], Tensor[(2, 12, 5), bool], Tensor[(6, 140), float32], Tensor[(15, 3, 5), bool]) */
}

def @func_11640() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  %494 = fn () -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
    %492 = @func_10211() /* ty=Tensor[(15, 3, 5), bool] */;
    %493 = @func_10143() /* ty=Tensor[(15, 3, 5), bool] */;
    (%492, %493)
  };
  %494() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */
}

def @func_3780(%var_3778: Tensor[(91, 11), uint64]) -> (Tensor[(15, 3, 5), bool], Tensor[(42), float32], Tensor[(7, 66), float64], Tensor[(91, 11), uint64]) {
  %495 = @func_1947() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %496 = cast(meta[relay.Constant][23] /* ty=Tensor[(7, 66), float64] */, dtype="float64") /* ty=Tensor[(7, 66), float64] */;
  %497 = cast(%var_3778, dtype="uint64") /* ty=Tensor[(91, 11), uint64] */;
  %498 = reshape(%496, newshape=[11, 14, 3]) /* ty=Tensor[(11, 14, 3), float64] */;
  %499 = reshape(%497, newshape=[1001]) /* ty=Tensor[(1001), uint64] */;
  %500 = @func_2998(%498, %499) /* ty=(Tensor[(11, 14, 3), float64], Tensor[(15, 3, 5), bool], Tensor[(42), float32], Tensor[(1001), uint64], Tensor[(6, 20), uint8]) */;
  %501 = %495.0;
  %502 = %500.2;
  (%501, %502, meta[relay.Constant][23] /* ty=Tensor[(7, 66), float64] */, %var_3778)
}

def @func_8429() -> (Tensor[(15, 13, 6), float64], Tensor[(120, 1), uint8], Tensor[(546), int16], Tensor[(8, 3, 12), bool], Tensor[(288), int8]) {
  @func_8427() /* ty=(Tensor[(15, 13, 6), float64], Tensor[(120, 1), uint8], Tensor[(546), int16], Tensor[(8, 3, 12), bool], Tensor[(288), int8]) */
}

def @func_13357() -> (Tensor[(1, 14, 3), float64],) {
  %505 = fn () -> (Tensor[(1, 14, 3), float64],) {
    %503 = @func_7168() /* ty=(Tensor[(1, 14, 3), float64],) */;
    %504 = %503.0;
    (%504,)
  };
  %505() /* ty=(Tensor[(1, 14, 3), float64],) */
}

def @func_12832() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float32]) {
  %506 = @func_9958() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(6, 5, 11), float64], Tensor[(1, 330), float64]) */;
  %507 = %506.0;
  %508 = cast(%507, dtype="bool") /* ty=Tensor[(15, 3, 5), bool] */;
  %509 = reshape(%508, newshape=[15, 3, 5]) /* ty=Tensor[(15, 3, 5), bool] */;
  %510 = @func_2640(%509) /* ty=Tensor[(15, 3, 5), float32] */;
  (%507, %510)
}

def @func_12972() -> (Tensor[(2, 12, 5), bool],) {
  %513 = fn () -> (Tensor[(2, 12, 5), bool],) {
    %511 = @func_5992() /* ty=(Tensor[(2, 12, 5), bool],) */;
    %512 = %511.0;
    (%512,)
  };
  %513() /* ty=(Tensor[(2, 12, 5), bool],) */
}

def @func_928() -> Tensor[(15, 3, 5), bool] {
  %514 = @func_680() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %514.0
}

def @func_11724() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(1001), uint64]) {
  @func_11722() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(1001), uint64]) */
}

def @func_11118() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(3, 6, 5), uint32], Tensor[(15, 6), uint32], Tensor[(15, 13, 6), float64]) {
  %515 = @func_7457() /* ty=(Tensor[(120), uint8], Tensor[(15, 3, 5), bool]) */;
  %516 = @func_7071() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %517 = cast(meta[relay.Constant][24] /* ty=Tensor[(15, 6), uint32] */, dtype="uint32") /* ty=Tensor[(15, 6), uint32] */;
  %518 = reshape(%517, newshape=[3, 6, 5]) /* ty=Tensor[(3, 6, 5), uint32] */;
  %519 = @func_5058(%518) /* ty=(Tensor[(3, 6, 5), uint32],) */;
  %520 = %515.1;
  %521 = %516.0;
  %522 = %519.0;
  %523 = @func_8698() /* ty=Tensor[(15, 13, 6), float64] */;
  (%520, %521, %522, meta[relay.Constant][24] /* ty=Tensor[(15, 6), uint32] */, %523)
}

def @func_14345() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  %524 = @func_5713() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(42), float32], Tensor[(1001), uint64], Tensor[(42), float32], Tensor[(120), uint8]) */;
  %525 = @func_1361() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %526 = %524.1;
  %527 = %525.0;
  (%526, %527)
}

def @func_14428(%var_14427: Tensor[(2, 6, 16), int8]) -> (Tensor[(2, 6, 16), int8], Tensor[(42), float32], Tensor[(2, 12, 5), float64]) {
  %536 = fn (%var_14393: Tensor[(2, 6, 16), int8]) -> (Tensor[(2, 6, 16), int8], Tensor[(42), float32], Tensor[(2, 12, 5), float64]) {
    %528 = cast(%var_14393, dtype="int8") /* ty=Tensor[(2, 6, 16), int8] */;
    %529 = shape_of(meta[relay.Constant][25] /* ty=Tensor[(2, 6, 16), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %530 = cast(meta[relay.Constant][25] /* ty=Tensor[(2, 6, 16), int8] */, dtype="int8") /* ty=Tensor[(2, 6, 16), int8] */;
    %531 = dyn.reshape(%528, %529, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %532 = @func_3327() /* ty=(Tensor[(2, 12, 5), float64],) */;
    %533 = bitwise_xor(%530, %531) /* ty=Tensor[(2, 6, 16), int8] */;
    %534 = @func_2572() /* ty=Tensor[(42), float32] */;
    %535 = %532.0;
    (%533, %534, %535)
  };
  %536(%var_14427) /* ty=(Tensor[(2, 6, 16), int8], Tensor[(42), float32], Tensor[(2, 12, 5), float64]) */
}

def @func_10037() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  %537 = @func_3520() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %538 = @func_9255() /* ty=Tensor[(15, 3, 5), bool] */;
  %539 = %537.0;
  (%538, %539)
}

def @func_14781() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float64]) {
  @func_14779() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float64]) */
}

def @func_7047(%var_7030: Tensor[(288), int8]) -> (Tensor[(15, 3, 5), float32], Tensor[(42), float32], Tensor[(8, 3, 12), bool], Tensor[(288), int8], Tensor[(15, 3, 5), bool]) {
  %540 = cast(%var_7030, dtype="int8") /* ty=Tensor[(288), int8] */;
  %541 = cast(%var_7030, dtype="int8") /* ty=Tensor[(288), int8] */;
  %542 = reshape(%540, newshape=[8, 3, 12]) /* ty=Tensor[(8, 3, 12), int8] */;
  %543 = reshape(%541, newshape=[8, 3, 12]) /* ty=Tensor[(8, 3, 12), int8] */;
  %544 = @func_3968() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %545 = @func_5757() /* ty=Tensor[(15, 3, 5), float32] */;
  %546 = @func_2572() /* ty=Tensor[(42), float32] */;
  %547 = @func_4830(%542, %543) /* ty=Tensor[(8, 3, 12), bool] */;
  %548 = %544.0;
  (%545, %546, %547, %var_7030, %548)
}

def @func_3093() -> Tensor[(15, 3, 5), float64] {
  %557 = fn () -> Tensor[(15, 3, 5), float64] {
    %549 = @func_1129() /* ty=(Tensor[(2, 12, 5), bool], Tensor[(120), uint8], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
    %550 = %549.3;
    %551 = @func_2142() /* ty=(Tensor[(15, 3, 5), bool],) */;
    %552 = %551.0;
    %553 = cast(%552, dtype="float64") /* ty=Tensor[(15, 3, 5), float64] */;
    %554 = shape_of(%550, dtype="int32") /* ty=Tensor[(3), int32] */;
    %555 = cast(%550, dtype="float64") /* ty=Tensor[(15, 3, 5), float64] */;
    %556 = dyn.reshape(%553, %554, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    add(%555, %556) /* ty=Tensor[(15, 3, 5), float64] */
  };
  %557() /* ty=Tensor[(15, 3, 5), float64] */
}

def @func_1766() -> (Tensor[(120), uint8], Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), float64]) {
  @func_1764() /* ty=(Tensor[(120), uint8], Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), float64]) */
}

def @func_6145() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  %558 = @func_5511() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool]) */;
  %559 = @func_4234() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %560 = %558.0;
  %561 = %559.0;
  (%560, %561)
}

def @func_7675(%var_7674: Tensor[(130, 1), float64]) -> (Tensor[(15, 3, 5), bool], Tensor[(13, 1, 10), float64], float64, Tensor[(130, 1), float64]) {
  %569 = fn (%var_7668: Tensor[(130, 1), float64]) -> (Tensor[(15, 3, 5), bool], Tensor[(13, 1, 10), float64], float64, Tensor[(130, 1), float64]) {
    %562 = cast(-4.56571f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %563 = cast(%var_7668, dtype="float64") /* ty=Tensor[(130, 1), float64] */;
    %564 = reshape(%562, newshape=[]) /* ty=float64 */;
    %565 = reshape(%563, newshape=[13, 1, 10]) /* ty=Tensor[(13, 1, 10), float64] */;
    %566 = @func_6500(%564, %565) /* ty=(Tensor[(13, 1, 10), float64],) */;
    %567 = @func_5300() /* ty=Tensor[(15, 3, 5), bool] */;
    %568 = %566.0;
    (%567, %568, -4.56571f64 /* ty=float64 */, %var_7668)
  };
  %569(%var_7674) /* ty=(Tensor[(15, 3, 5), bool], Tensor[(13, 1, 10), float64], float64, Tensor[(130, 1), float64]) */
}

def @func_1309() -> (Tensor[(15, 3, 5), bool],) {
  %570 = @func_1129() /* ty=(Tensor[(2, 12, 5), bool], Tensor[(120), uint8], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %571 = %570.3;
  (%571,)
}

def @func_12808() -> Tensor[(15, 3, 5), bool] {
  %573 = fn () -> Tensor[(15, 3, 5), bool] {
    %572 = @func_633() /* ty=(Tensor[(15, 3, 5), bool],) */;
    %572.0
  };
  %573() /* ty=Tensor[(15, 3, 5), bool] */
}

def @func_4708() -> (Tensor[(15, 3, 5), bool],) {
  %574 = @func_757() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %575 = %574.0;
  (%575,)
}

def @func_2289() -> (Tensor[(15, 3, 5), bool], Tensor[(1, 14, 3), float64], Tensor[(42), float32], Tensor[(1, 14, 3), float64]) {
  %576 = @func_1899() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %577 = cast(meta[relay.Constant][26] /* ty=Tensor[(42), float32] */, dtype="float32") /* ty=Tensor[(42), float32] */;
  %578 = reshape(%577, newshape=[1, 14, 3]) /* ty=Tensor[(1, 14, 3), float32] */;
  %579 = @func_202(%578) /* ty=(Tensor[(1, 14, 3), float32], Tensor[(1, 14, 3), float64]) */;
  %580 = @func_2259() /* ty=(Tensor[(1, 14, 3), float64], Tensor[(1, 14, 3), float64], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %581 = %576.0;
  %582 = %579.1;
  %583 = %580.0;
  (%581, %582, meta[relay.Constant][26] /* ty=Tensor[(42), float32] */, %583)
}

def @func_15080() -> (Tensor[(15, 3, 5), bool],) {
  @func_15078() /* ty=(Tensor[(15, 3, 5), bool],) */
}

def @func_8238() -> Tensor[(11, 12, 14), bool] {
  %584 = fn () -> Tensor[(11, 12, 14), bool] {
    @func_6382() /* ty=Tensor[(11, 12, 14), bool] */
  };
  %584() /* ty=Tensor[(11, 12, 14), bool] */
}

def @func_14157() -> (Tensor[(42), float32], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float64]) {
  @func_14155() /* ty=(Tensor[(42), float32], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float64]) */
}

def @func_3159(%var_3158: Tensor[(42), float32]) -> (Tensor[(15, 3, 5), bool], Tensor[(?, 14, 3), float32], Tensor[(270), float64], Tensor[(42), float32], Tensor[(15, 3, 5), bool]) {
  %595 = fn (%var_3125: Tensor[(42), float32]) -> (Tensor[(15, 3, 5), bool], Tensor[(?, 14, 3), float32], Tensor[(270), float64], Tensor[(42), float32], Tensor[(15, 3, 5), bool]) {
    %585 = @func_1570() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], Tensor[(120), uint8]) */;
    %586 = cast(meta[relay.Constant][27] /* ty=Tensor[(270), float64] */, dtype="float64") /* ty=Tensor[(270), float64] */;
    %587 = cast(%var_3125, dtype="float32") /* ty=Tensor[(42), float32] */;
    %588 = reshape(%586, newshape=[3, 10, 9]) /* ty=Tensor[(3, 10, 9), float64] */;
    %589 = reshape(%587, newshape=[42]) /* ty=Tensor[(42), float32] */;
    %590 = @func_554(%588, %589) /* ty=(Tensor[(3, 10, 9), bool], Tensor[(1, 14, 3), float32], Tensor[(?, 14, 3), float32]) */;
    %591 = @func_1129() /* ty=(Tensor[(2, 12, 5), bool], Tensor[(120), uint8], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
    %592 = %585.0;
    %593 = %590.2;
    %594 = %591.3;
    (%592, %593, meta[relay.Constant][27] /* ty=Tensor[(270), float64] */, %var_3125, %594)
  };
  %595(%var_3158) /* ty=(Tensor[(15, 3, 5), bool], Tensor[(?, 14, 3), float32], Tensor[(270), float64], Tensor[(42), float32], Tensor[(15, 3, 5), bool]) */
}

def @func_2291() -> (Tensor[(15, 3, 5), bool], Tensor[(1, 14, 3), float64], Tensor[(42), float32], Tensor[(1, 14, 3), float64]) {
  @func_2289() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(1, 14, 3), float64], Tensor[(42), float32], Tensor[(1, 14, 3), float64]) */
}

def @func_8291() -> (Tensor[(15, 3, 5), bool],) {
  %596 = @func_4395() /* ty=(Tensor[(42), float32], Tensor[(15, 3, 5), bool]) */;
  %597 = %596.1;
  (%597,)
}

def @func_7368(%var_7367: float64) -> (Tensor[(15, 3, 5), float64], Tensor[(13, 1, 10), float64], float64, Tensor[(130), float64]) {
  %606 = fn (%var_7354: float64) -> (Tensor[(15, 3, 5), float64], Tensor[(13, 1, 10), float64], float64, Tensor[(130), float64]) {
    %598 = @func_5604() /* ty=(Tensor[(15, 3, 5), float64],) */;
    %599 = cast(%var_7354, dtype="float64") /* ty=float64 */;
    %600 = cast(meta[relay.Constant][28] /* ty=Tensor[(130), float64] */, dtype="float64") /* ty=Tensor[(130), float64] */;
    %601 = reshape(%599, newshape=[]) /* ty=float64 */;
    %602 = reshape(%600, newshape=[13, 1, 10]) /* ty=Tensor[(13, 1, 10), float64] */;
    %603 = @func_6500(%601, %602) /* ty=(Tensor[(13, 1, 10), float64],) */;
    %604 = %598.0;
    %605 = %603.0;
    (%604, %605, %var_7354, meta[relay.Constant][28] /* ty=Tensor[(130), float64] */)
  };
  %606(%var_7367) /* ty=(Tensor[(15, 3, 5), float64], Tensor[(13, 1, 10), float64], float64, Tensor[(130), float64]) */
}

def @func_9959() -> (Tensor[(15, 3, 5), bool], Tensor[(6, 5, 11), float64], Tensor[(1, 330), float64]) {
  %617 = fn () -> (Tensor[(15, 3, 5), bool], Tensor[(6, 5, 11), float64], Tensor[(1, 330), float64]) {
    %607 = @func_9296() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float64], Tensor[(15, 3, 5), bool]) */;
    %608 = cast(meta[relay.Constant][29] /* ty=Tensor[(1, 330), float64] */, dtype="float64") /* ty=Tensor[(1, 330), float64] */;
    %609 = reshape(%608, newshape=[6, 5, 11]) /* ty=Tensor[(6, 5, 11), float64] */;
    %610 = @func_9080(%609) /* ty=(Tensor[(6, 5, 11), float64],) */;
    %611 = cast(meta[relay.Constant][29] /* ty=Tensor[(1, 330), float64] */, dtype="float64") /* ty=Tensor[(1, 330), float64] */;
    %612 = log(%611) /* ty=Tensor[(1, 330), float64] */;
    %613 = cast(%612, dtype="float64") /* ty=Tensor[(1, 330), float64] */;
    %614 = %607.0;
    %615 = %610.0;
    %616 = sqrt(%613) /* ty=Tensor[(1, 330), float64] */;
    (%614, %615, %616)
  };
  %617() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(6, 5, 11), float64], Tensor[(1, 330), float64]) */
}

def @func_3945() -> (Tensor[(15, 3, 5), bool],) {
  @func_3943() /* ty=(Tensor[(15, 3, 5), bool],) */
}

def @func_6500(%var_6492: float64, %var_6493: Tensor[(13, 1, 10), float64]) -> (Tensor[(13, 1, 10), float64],) {
  %618 = cast(%var_6492, dtype="float64") /* ty=float64 */;
  %619 = cast(%var_6493, dtype="float64") /* ty=Tensor[(13, 1, 10), float64] */;
  %620 = power(%618, %619) /* ty=Tensor[(13, 1, 10), float64] */;
  (%620,)
}

def @func_3389() -> Tensor[(15, 3, 5), bool] {
  @func_3387() /* ty=Tensor[(15, 3, 5), bool] */
}

def @func_5554(%var_5552: Tensor[(36), int16], %var_5553: Tensor[(468), int16]) -> (Tensor[(160), float64], Tensor[(12, 3, 13), int16], Tensor[(36), int16], Tensor[(468), int16]) {
  @func_5550(%var_5552, %var_5553) /* ty=(Tensor[(160), float64], Tensor[(12, 3, 13), int16], Tensor[(36), int16], Tensor[(468), int16]) */
}

def @func_8362() -> (Tensor[(42), float32],) {
  %621 = @func_3304() /* ty=(Tensor[(42), float32], Tensor[(15, 3, 5), bool], Tensor[(4, 5, 8), float64], Tensor[(160), float64]) */;
  %622 = %621.0;
  (%622,)
}

def @func_8293() -> (Tensor[(15, 3, 5), bool],) {
  @func_8291() /* ty=(Tensor[(15, 3, 5), bool],) */
}

def @func_680() -> (Tensor[(15, 3, 5), bool],) {
  %623 = @func_633() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %624 = %623.0;
  (%624,)
}

def @func_7092(%var_7086: Tensor[(16, 3, 2), float32]) -> Tensor[(16, 3, 2), float32] {
  %625 = cast(%var_7086, dtype="float32") /* ty=Tensor[(16, 3, 2), float32] */;
  %626 = shape_of(meta[relay.Constant][30] /* ty=Tensor[(16, 3, 2), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %627 = cast(meta[relay.Constant][30] /* ty=Tensor[(16, 3, 2), float32] */, dtype="float32") /* ty=Tensor[(16, 3, 2), float32] */;
  %628 = dyn.reshape(%625, %626, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  divide(%627, %628) /* ty=Tensor[(16, 3, 2), float32] */
}

def @func_5015() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float64]) {
  %629 = @func_2340() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %630 = @func_4309() /* ty=(Tensor[(15, 3, 5), float64], Tensor[(15, 3, 5), bool]) */;
  %631 = %629.1;
  %632 = %630.0;
  (%631, %632)
}

def @func_5511() -> (Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool]) {
  %633 = @func_1899() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %634 = @func_1602() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], Tensor[(120), uint8]) */;
  %635 = %633.0;
  %636 = %634.1;
  (%635, %636)
}

def @func_14670() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  %637 = @func_928() /* ty=Tensor[(15, 3, 5), bool] */;
  %638 = cast(%637, dtype="bool") /* ty=Tensor[(15, 3, 5), bool] */;
  %639 = reshape(%638, newshape=[15, 3, 5]) /* ty=Tensor[(15, 3, 5), bool] */;
  %640 = @func_6723(%639) /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %641 = %640.0;
  (%637, %641)
}

def @func_503(%var_502: Tensor[(2, 12, 5), uint8]) -> Tensor[(2, 12, 5), bool] {
  %651 = fn (%var_489: Tensor[(2, 12, 5), uint8]) -> Tensor[(2, 12, 5), bool] {
    %642 = cast(%var_489, dtype="bool") /* ty=Tensor[(2, 12, 5), bool] */;
    %643 = shape_of(meta[relay.Constant][31] /* ty=Tensor[(2, 12, 5), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %644 = cast(meta[relay.Constant][31] /* ty=Tensor[(2, 12, 5), uint8] */, dtype="bool") /* ty=Tensor[(2, 12, 5), bool] */;
    %645 = dyn.reshape(%642, %643, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %646 = less(%644, %645) /* ty=Tensor[(2, 12, 5), bool] */;
    %647 = cast(%646, dtype="bool") /* ty=Tensor[(2, 12, 5), bool] */;
    %648 = shape_of(%var_489, dtype="int32") /* ty=Tensor[(3), int32] */;
    %649 = cast(%var_489, dtype="bool") /* ty=Tensor[(2, 12, 5), bool] */;
    %650 = dyn.reshape(%647, %648, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    logical_and(%649, %650) /* ty=Tensor[(2, 12, 5), bool] */
  };
  %651(%var_502) /* ty=Tensor[(2, 12, 5), bool] */
}

def @func_635() -> (Tensor[(15, 3, 5), bool],) {
  @func_633() /* ty=(Tensor[(15, 3, 5), bool],) */
}

def @func_3943() -> (Tensor[(15, 3, 5), bool],) {
  %652 = @func_1129() /* ty=(Tensor[(2, 12, 5), bool], Tensor[(120), uint8], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %653 = %652.3;
  (%653,)
}

def @func_12179() -> Tensor[(15, 3, 5), bool] {
  %655 = fn () -> Tensor[(15, 3, 5), bool] {
    %654 = @func_680() /* ty=(Tensor[(15, 3, 5), bool],) */;
    %654.0
  };
  %655() /* ty=Tensor[(15, 3, 5), bool] */
}

def @func_9884() -> Tensor[(15, 3, 5), float32] {
  %656 = fn () -> Tensor[(15, 3, 5), float32] {
    @func_5757() /* ty=Tensor[(15, 3, 5), float32] */
  };
  %656() /* ty=Tensor[(15, 3, 5), float32] */
}

def @func_14167() -> (Tensor[(42), float32],) {
  %659 = fn () -> (Tensor[(42), float32],) {
    %657 = @func_3606() /* ty=(Tensor[(42), float32], Tensor[(15, 3, 5), bool]) */;
    %658 = %657.0;
    (%658,)
  };
  %659() /* ty=(Tensor[(42), float32],) */
}

def @func_2259() -> (Tensor[(1, 14, 3), float64], Tensor[(1, 14, 3), float64], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  %660 = @func_1444() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(120), uint8], Tensor[(120), uint8], Tensor[(1, 14, 3), float64], Tensor[(42), float32]) */;
  %661 = @func_1823() /* ty=(Tensor[(1, 14, 3), float64],) */;
  %662 = @func_1602() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], Tensor[(120), uint8]) */;
  %663 = @func_757() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %664 = %660.3;
  %665 = %661.0;
  %666 = %662.0;
  %667 = %663.0;
  (%664, %665, %666, %667)
}

def @func_7073() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  @func_7071() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */
}

def @func_12508() -> Tensor[(1, 14, 3), float64] {
  @func_12506() /* ty=Tensor[(1, 14, 3), float64] */
}

def @func_13116() -> (Tensor[(15, 3, 5), bool],) {
  %670 = fn () -> (Tensor[(15, 3, 5), bool],) {
    %668 = @func_4445() /* ty=(Tensor[(15, 3, 5), bool],) */;
    %669 = %668.0;
    (%669,)
  };
  %670() /* ty=(Tensor[(15, 3, 5), bool],) */
}

def @func_8618() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float64]) {
  @func_8616() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float64]) */
}

def @func_3679() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  %671 = @func_3352() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %672 = @func_1309() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %673 = %671.0;
  %674 = @func_928() /* ty=Tensor[(15, 3, 5), bool] */;
  %675 = %672.0;
  (%673, %674, %675)
}

def @func_2210() -> (Tensor[(15, 3, 5), bool], Tensor[(1, 14, 3), float64], Tensor[(42), float32]) {
  %676 = @func_1899() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %677 = cast(meta[relay.Constant][32] /* ty=Tensor[(42), float32] */, dtype="float32") /* ty=Tensor[(42), float32] */;
  %678 = reshape(%677, newshape=[1, 14, 3]) /* ty=Tensor[(1, 14, 3), float32] */;
  %679 = @func_202(%678) /* ty=(Tensor[(1, 14, 3), float32], Tensor[(1, 14, 3), float64]) */;
  %680 = %676.0;
  %681 = %679.1;
  (%680, %681, meta[relay.Constant][32] /* ty=Tensor[(42), float32] */)
}

def @func_7511() -> (Tensor[(1, 14, 3), float64], Tensor[(15, 3, 5), float64]) {
  @func_7509() /* ty=(Tensor[(1, 14, 3), float64], Tensor[(15, 3, 5), float64]) */
}

def @func_11479() -> (Tensor[(42), float32],) {
  @func_11477() /* ty=(Tensor[(42), float32],) */
}

def @func_5188() -> (Tensor[(15, 3, 5), bool],) {
  %683 = fn () -> (Tensor[(15, 3, 5), bool],) {
    %682 = @func_3387() /* ty=Tensor[(15, 3, 5), bool] */;
    (%682,)
  };
  %683() /* ty=(Tensor[(15, 3, 5), bool],) */
}

def @func_8699() -> Tensor[(15, 13, 6), float64] {
  %685 = fn () -> Tensor[(15, 13, 6), float64] {
    %684 = @func_8427() /* ty=(Tensor[(15, 13, 6), float64], Tensor[(120, 1), uint8], Tensor[(546), int16], Tensor[(8, 3, 12), bool], Tensor[(288), int8]) */;
    %684.0
  };
  %685() /* ty=Tensor[(15, 13, 6), float64] */
}

def @func_1823() -> (Tensor[(1, 14, 3), float64],) {
  %686 = @func_1444() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(120), uint8], Tensor[(120), uint8], Tensor[(1, 14, 3), float64], Tensor[(42), float32]) */;
  %687 = %686.3;
  (%687,)
}

def @func_5307() -> (Tensor[(15, 3, 5), bool],) {
  @func_5305() /* ty=(Tensor[(15, 3, 5), bool],) */
}

def @func_2775() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  %691 = fn () -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
    %688 = @func_1361() /* ty=(Tensor[(15, 3, 5), bool],) */;
    %689 = @func_928() /* ty=Tensor[(15, 3, 5), bool] */;
    %690 = %688.0;
    (%689, %690)
  };
  %691() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */
}

def @func_14963() -> (Tensor[(15, 3, 5), bool],) {
  %694 = fn () -> (Tensor[(15, 3, 5), bool],) {
    %692 = @func_680() /* ty=(Tensor[(15, 3, 5), bool],) */;
    %693 = %692.0;
    (%693,)
  };
  %694() /* ty=(Tensor[(15, 3, 5), bool],) */
}

def @func_4425() -> Tensor[(15, 3, 5), bool] {
  %696 = fn () -> Tensor[(15, 3, 5), bool] {
    %695 = @func_4395() /* ty=(Tensor[(42), float32], Tensor[(15, 3, 5), bool]) */;
    %695.1
  };
  %696() /* ty=Tensor[(15, 3, 5), bool] */
}

def @func_9800(%var_9785: Tensor[(11, 14, 3), float64]) -> (Tensor[(13, 14, 3), bool], Tensor[(11, 14, 3), bool]) {
  %697 = @func_7168() /* ty=(Tensor[(1, 14, 3), float64],) */;
  %698 = %697.0;
  %699 = cast(%698, dtype="bool") /* ty=Tensor[(1, 14, 3), bool] */;
  %700 = cast(meta[relay.Constant][33] /* ty=Tensor[(13, 14, 3), float64] */, dtype="bool") /* ty=Tensor[(13, 14, 3), bool] */;
  %701 = cast(%698, dtype="bool") /* ty=Tensor[(1, 14, 3), bool] */;
  %702 = cast(%var_9785, dtype="bool") /* ty=Tensor[(11, 14, 3), bool] */;
  %703 = logical_or(%699, %700) /* ty=Tensor[(13, 14, 3), bool] */;
  %704 = greater_equal(%701, %702) /* ty=Tensor[(11, 14, 3), bool] */;
  (%703, %704)
}

def @func_8165() -> Tensor[(15, 3, 5), bool] {
  %706 = fn () -> Tensor[(15, 3, 5), bool] {
    %705 = @func_680() /* ty=(Tensor[(15, 3, 5), bool],) */;
    %705.0
  };
  %706() /* ty=Tensor[(15, 3, 5), bool] */
}

def @func_14155() -> (Tensor[(42), float32], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float64]) {
  %707 = @func_7626() /* ty=(Tensor[(42), float32],) */;
  %708 = @func_6125() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %709 = @func_5604() /* ty=(Tensor[(15, 3, 5), float64],) */;
  %710 = %707.0;
  %711 = %708.1;
  %712 = %709.0;
  (%710, %711, %712)
}

def @func_1685() -> Tensor[(15, 3, 5), bool] {
  %713 = fn () -> Tensor[(15, 3, 5), bool] {
    @func_702() /* ty=Tensor[(15, 3, 5), bool] */
  };
  %713() /* ty=Tensor[(15, 3, 5), bool] */
}

def @func_15245() -> (Tensor[(2, 12, 5), float64], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  %714 = @func_3327() /* ty=(Tensor[(2, 12, 5), float64],) */;
  %715 = @func_2745() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %716 = @func_10902() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %717 = %714.0;
  %718 = %715.0;
  %719 = %716.1;
  (%717, %718, %719)
}

def @func_12653() -> (Tensor[(15, 3, 5), bool], Tensor[(42), float32]) {
  @func_12651() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(42), float32]) */
}

def @func_6127() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  @func_6125() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */
}

def @func_702() -> Tensor[(15, 3, 5), bool] {
  %720 = @func_633() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %720.0
}

def @func_8741(%var_8739: Tensor[(5, 16, 14), float64], %var_8740: Tensor[(56), float32]) -> (Tensor[(5, 16, 14), bool], Tensor[(7, 14, 8), float32], Tensor[(56), float32], Tensor[(784), float32], Tensor[(15, 3, 5), bool]) {
  @func_8737(%var_8739, %var_8740) /* ty=(Tensor[(5, 16, 14), bool], Tensor[(7, 14, 8), float32], Tensor[(56), float32], Tensor[(784), float32], Tensor[(15, 3, 5), bool]) */
}

def @func_6519() -> Tensor[(15, 3, 5), bool] {
  %722 = fn () -> Tensor[(15, 3, 5), bool] {
    %721 = @func_5305() /* ty=(Tensor[(15, 3, 5), bool],) */;
    %721.0
  };
  %722() /* ty=Tensor[(15, 3, 5), bool] */
}

def @func_3412() -> Tensor[(15, 3, 5), bool] {
  @func_3410() /* ty=Tensor[(15, 3, 5), bool] */
}

def @func_2261() -> (Tensor[(1, 14, 3), float64], Tensor[(1, 14, 3), float64], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  @func_2259() /* ty=(Tensor[(1, 14, 3), float64], Tensor[(1, 14, 3), float64], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */
}

def @func_8025() -> (Tensor[(15, 3, 5), bool], Tensor[(9, 14, 3), float64]) {
  %725 = fn () -> (Tensor[(15, 3, 5), bool], Tensor[(9, 14, 3), float64]) {
    %723 = @func_1285() /* ty=Tensor[(15, 3, 5), bool] */;
    %724 = @func_6567() /* ty=Tensor[(9, 14, 3), float64] */;
    (%723, %724)
  };
  %725() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(9, 14, 3), float64]) */
}

def @func_12651() -> (Tensor[(15, 3, 5), bool], Tensor[(42), float32]) {
  %726 = @func_7071() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %727 = @func_11148() /* ty=(Tensor[(42), float32],) */;
  %728 = %726.0;
  %729 = %727.0;
  (%728, %729)
}

def @func_10924() -> Tensor[(15, 3, 5), bool] {
  %731 = fn () -> Tensor[(15, 3, 5), bool] {
    %730 = @func_2142() /* ty=(Tensor[(15, 3, 5), bool],) */;
    %730.0
  };
  %731() /* ty=Tensor[(15, 3, 5), bool] */
}

def @func_12857() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], int16) {
  %738 = fn () -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], int16) {
    %732 = @func_3606() /* ty=(Tensor[(42), float32], Tensor[(15, 3, 5), bool]) */;
    %733 = @func_10667() /* ty=(Tensor[(15, 3, 5), bool],) */;
    %734 = @func_12165() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], int16, int16, Tensor[(15, 3, 5), float32], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
    %735 = %732.1;
    %736 = %733.0;
    %737 = %734.3;
    (%735, %736, %737)
  };
  %738() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], int16) */
}

def @func_11722() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(1001), uint64]) {
  %739 = @func_5713() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(42), float32], Tensor[(1001), uint64], Tensor[(42), float32], Tensor[(120), uint8]) */;
  %740 = @func_8024() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(9, 14, 3), float64]) */;
  %741 = cast(meta[relay.Constant][34] /* ty=Tensor[(1001), uint64] */, dtype="uint64") /* ty=Tensor[(1001), uint64] */;
  %742 = reshape(%741, newshape=[1001]) /* ty=Tensor[(1001), uint64] */;
  %743 = @func_11388(%742) /* ty=(Tensor[(15, 3, 5), bool], Tensor[(42), float32], Tensor[(1001), uint64]) */;
  %744 = %739.0;
  %745 = %740.0;
  %746 = @func_9876() /* ty=Tensor[(15, 3, 5), bool] */;
  %747 = %743.0;
  (%744, %745, %746, %747, meta[relay.Constant][34] /* ty=Tensor[(1001), uint64] */)
}

def @func_10482() -> (Tensor[(2, 12, 5), uint16],) {
  %748 = @func_1129() /* ty=(Tensor[(2, 12, 5), bool], Tensor[(120), uint8], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %749 = %748.0;
  %750 = cast(meta[relay.Constant][35] /* ty=Tensor[(2, 12, 5), bool] */, dtype="uint16") /* ty=Tensor[(2, 12, 5), uint16] */;
  %751 = shape_of(%749, dtype="int32") /* ty=Tensor[(3), int32] */;
  %752 = cast(%749, dtype="uint16") /* ty=Tensor[(2, 12, 5), uint16] */;
  %753 = dyn.reshape(%750, %751, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %754 = left_shift(%752, %753) /* ty=Tensor[(2, 12, 5), uint16] */;
  (%754,)
}

def @func_12183() -> Tensor[(1, 14, 3), float64] {
  %756 = fn () -> Tensor[(1, 14, 3), float64] {
    %755 = @func_7509() /* ty=(Tensor[(1, 14, 3), float64], Tensor[(15, 3, 5), float64]) */;
    %755.0
  };
  %756() /* ty=Tensor[(1, 14, 3), float64] */
}

def @func_2492() -> (Tensor[(2, 12, 5), float64], Tensor[(15, 3, 5), bool]) {
  %760 = fn () -> (Tensor[(2, 12, 5), float64], Tensor[(15, 3, 5), bool]) {
    %757 = @func_1764() /* ty=(Tensor[(120), uint8], Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), float64]) */;
    %758 = %757.2;
    %759 = @func_1684() /* ty=Tensor[(15, 3, 5), bool] */;
    (%758, %759)
  };
  %760() /* ty=(Tensor[(2, 12, 5), float64], Tensor[(15, 3, 5), bool]) */
}

def @func_12526(%var_12524: float64) -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], float64) {
  %761 = @func_8616() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float64]) */;
  %762 = cast(%var_12524, dtype="float64") /* ty=float64 */;
  %763 = reshape(%762, newshape=[]) /* ty=float64 */;
  %764 = @func_11764(%763) /* ty=(Tensor[(9, 5, 2), float64], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %765 = %761.0;
  %766 = %764.1;
  (%765, %766, %var_12524)
}

def @func_6623(%var_6617: Tensor[(6, 20), uint8]) -> (Tensor[(1, 14, 3), float64], Tensor[(2, 12, 5), bool], Tensor[(6, 20), uint8], Tensor[(15, 3, 5), bool]) {
  %767 = @func_5258() /* ty=(Tensor[(1, 14, 3), float64],) */;
  %768 = cast(%var_6617, dtype="uint8") /* ty=Tensor[(6, 20), uint8] */;
  %769 = reshape(%768, newshape=[2, 12, 5]) /* ty=Tensor[(2, 12, 5), uint8] */;
  %770 = @func_2745() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %771 = %767.0;
  %772 = @func_501(%769) /* ty=Tensor[(2, 12, 5), bool] */;
  %773 = %770.0;
  (%771, %772, %var_6617, %773)
}

def @func_6346() -> (Tensor[(15, 3, 5), bool],) {
  %774 = @func_3679() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %775 = %774.0;
  (%775,)
}

def @func_14876() -> Tensor[(15, 3, 5), float32] {
  %777 = fn () -> Tensor[(15, 3, 5), float32] {
    %776 = @func_4295() /* ty=(Tensor[(15, 3, 5), float32], Tensor[(1, 14, 3), float64], Tensor[(42), float32]) */;
    %776.0
  };
  %777() /* ty=Tensor[(15, 3, 5), float32] */
}

def @func_5922() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  @func_5920() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */
}

def @func_5519(%var_5514: Tensor[(5, 13, 5), uint16]) -> Tensor[(5, 13, 5), uint16] {
  %778 = cast(meta[relay.Constant][36] /* ty=Tensor[(5, 13, 5), uint16] */, dtype="uint16") /* ty=Tensor[(5, 13, 5), uint16] */;
  %779 = shape_of(%var_5514, dtype="int32") /* ty=Tensor[(3), int32] */;
  %780 = cast(%var_5514, dtype="uint16") /* ty=Tensor[(5, 13, 5), uint16] */;
  %781 = dyn.reshape(%778, %779, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  subtract(%780, %781) /* ty=Tensor[(5, 13, 5), uint16] */
}

def @func_5550(%var_5546: Tensor[(36), int16], %var_5547: Tensor[(468), int16]) -> (Tensor[(160), float64], Tensor[(12, 3, 13), int16], Tensor[(36), int16], Tensor[(468), int16]) {
  %782 = @func_3304() /* ty=(Tensor[(42), float32], Tensor[(15, 3, 5), bool], Tensor[(4, 5, 8), float64], Tensor[(160), float64]) */;
  %783 = cast(%var_5546, dtype="int16") /* ty=Tensor[(36), int16] */;
  %784 = cast(%var_5547, dtype="int16") /* ty=Tensor[(468), int16] */;
  %785 = reshape(%783, newshape=[12, 3, 1]) /* ty=Tensor[(12, 3, 1), int16] */;
  %786 = reshape(%784, newshape=[12, 3, 13]) /* ty=Tensor[(12, 3, 13), int16] */;
  %787 = @func_1547(%785, %786) /* ty=(Tensor[(12, 3, 13), int16], Tensor[(120), uint8]) */;
  %788 = %782.3;
  %789 = %787.0;
  (%788, %789, %var_5546, %var_5547)
}

def @func_15078() -> (Tensor[(15, 3, 5), bool],) {
  %790 = @func_10738() /* ty=Tensor[(15, 3, 5), bool] */;
  (%790,)
}

def @func_7459() -> (Tensor[(120), uint8], Tensor[(15, 3, 5), bool]) {
  @func_7457() /* ty=(Tensor[(120), uint8], Tensor[(15, 3, 5), bool]) */
}

def @func_8564() -> Tensor[(15, 3, 5), bool] {
  @func_8562() /* ty=Tensor[(15, 3, 5), bool] */
}

def @func_13841() -> (Tensor[(15, 3, 5), bool],) {
  %793 = fn () -> (Tensor[(15, 3, 5), bool],) {
    %791 = @func_10721() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float64]) */;
    %792 = %791.1;
    (%792,)
  };
  %793() /* ty=(Tensor[(15, 3, 5), bool],) */
}

def @func_1446() -> (Tensor[(15, 3, 5), bool], Tensor[(120), uint8], Tensor[(120), uint8], Tensor[(1, 14, 3), float64], Tensor[(42), float32]) {
  @func_1444() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(120), uint8], Tensor[(120), uint8], Tensor[(1, 14, 3), float64], Tensor[(42), float32]) */
}

def @func_13331() -> Tensor[(15, 3, 5), float32] {
  %795 = fn () -> Tensor[(15, 3, 5), float32] {
    %794 = @func_7240() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float32]) */;
    %794.1
  };
  %795() /* ty=Tensor[(15, 3, 5), float32] */
}

def @func_7071() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  %796 = @func_5511() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool]) */;
  %797 = @func_4708() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %798 = %796.0;
  %799 = %797.0;
  (%798, %799)
}

def @func_10596(%var_10595: Tensor[(468), int16]) -> (Tensor[(2, 12, 5), uint16], Tensor[(2, 12, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(468), int16]) {
  %810 = fn (%var_10584: Tensor[(468), int16]) -> (Tensor[(2, 12, 5), uint16], Tensor[(2, 12, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(468), int16]) {
    %800 = @func_10482() /* ty=(Tensor[(2, 12, 5), uint16],) */;
    %801 = @func_5992() /* ty=(Tensor[(2, 12, 5), bool],) */;
    %802 = %801.0;
    %803 = cast(%802, dtype="uint8") /* ty=Tensor[(2, 12, 5), uint8] */;
    %804 = cast(%var_10584, dtype="int16") /* ty=Tensor[(468), int16] */;
    %805 = reshape(%803, newshape=[3, 40]) /* ty=Tensor[(3, 40), uint8] */;
    %806 = reshape(%804, newshape=[468]) /* ty=Tensor[(468), int16] */;
    %807 = @func_2933(%805, %806) /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(3, 40), uint8], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(1, 14, 3), float64], Tensor[(120), uint8], Tensor[(18, 2), int16], Tensor[(468), int16]) */;
    %808 = %800.0;
    %809 = %807.4;
    (%808, %802, %809, %var_10584)
  };
  %810(%var_10595) /* ty=(Tensor[(2, 12, 5), uint16], Tensor[(2, 12, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(468), int16]) */
}

def @func_11120() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(3, 6, 5), uint32], Tensor[(15, 6), uint32], Tensor[(15, 13, 6), float64]) {
  @func_11118() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(3, 6, 5), uint32], Tensor[(15, 6), uint32], Tensor[(15, 13, 6), float64]) */
}

def @func_757() -> (Tensor[(15, 3, 5), bool],) {
  %811 = @func_680() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %812 = %811.0;
  (%812,)
}

def @func_6012() -> (Tensor[(15, 3, 5), bool],) {
  %813 = @func_1684() /* ty=Tensor[(15, 3, 5), bool] */;
  (%813,)
}

def @func_6014() -> (Tensor[(15, 3, 5), bool],) {
  @func_6012() /* ty=(Tensor[(15, 3, 5), bool],) */
}

def @func_11526(%var_11525: Tensor[(1, 1001), uint64]) -> (Tensor[(6, 14, 3), int32], Tensor[(120), uint8], Tensor[(1, 1001), uint64], Tensor[(42), float32], Tensor[(6, 20), uint8]) {
  %824 = fn (%var_11519: Tensor[(1, 1001), uint64]) -> (Tensor[(6, 14, 3), int32], Tensor[(120), uint8], Tensor[(1, 1001), uint64], Tensor[(42), float32], Tensor[(6, 20), uint8]) {
    %814 = @func_10847() /* ty=(Tensor[(2, 12, 5), bool], Tensor[(6, 14, 3), int32]) */;
    %815 = cast(%var_11519, dtype="uint64") /* ty=Tensor[(1, 1001), uint64] */;
    %816 = cast(meta[relay.Constant][37] /* ty=Tensor[(42), float32] */, dtype="float32") /* ty=Tensor[(42), float32] */;
    %817 = cast(meta[relay.Constant][38] /* ty=Tensor[(6, 20), uint8] */, dtype="uint8") /* ty=Tensor[(6, 20), uint8] */;
    %818 = reshape(%815, newshape=[11, 7, 13]) /* ty=Tensor[(11, 7, 13), uint64] */;
    %819 = reshape(%816, newshape=[42]) /* ty=Tensor[(42), float32] */;
    %820 = reshape(%817, newshape=[120]) /* ty=Tensor[(120), uint8] */;
    %821 = @func_1493(%818, %819, %820) /* ty=(Tensor[(11, 7, 13), uint64], Tensor[(42), float32], Tensor[(42), float32], Tensor[(120), uint8], Tensor[(120), uint8]) */;
    %822 = %814.1;
    %823 = %821.4;
    (%822, %823, %var_11519, meta[relay.Constant][37] /* ty=Tensor[(42), float32] */, meta[relay.Constant][38] /* ty=Tensor[(6, 20), uint8] */)
  };
  %824(%var_11525) /* ty=(Tensor[(6, 14, 3), int32], Tensor[(120), uint8], Tensor[(1, 1001), uint64], Tensor[(42), float32], Tensor[(6, 20), uint8]) */
}

def @func_9710() -> Tensor[(42), float32] {
  %825 = fn () -> Tensor[(42), float32] {
    @func_2572() /* ty=Tensor[(42), float32] */
  };
  %825() /* ty=Tensor[(42), float32] */
}

def @func_8427() -> (Tensor[(15, 13, 6), float64], Tensor[(120, 1), uint8], Tensor[(546), int16], Tensor[(8, 3, 12), bool], Tensor[(288), int8]) {
  %826 = cast(meta[relay.Constant][39] /* ty=Tensor[(15, 13, 6), float64] */, dtype="float64") /* ty=Tensor[(15, 13, 6), float64] */;
  %827 = cast(meta[relay.Constant][40] /* ty=Tensor[(546), int16] */, dtype="int16") /* ty=Tensor[(546), int16] */;
  %828 = cast(meta[relay.Constant][40] /* ty=Tensor[(546), int16] */, dtype="int16") /* ty=Tensor[(546), int16] */;
  %829 = reshape(%827, newshape=[6, 13, 7]) /* ty=Tensor[(6, 13, 7), int16] */;
  %830 = reshape(%828, newshape=[6, 13, 7]) /* ty=Tensor[(6, 13, 7), int16] */;
  %831 = @func_8081(%829, %830) /* ty=(Tensor[(6, 13, 7), uint64], Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], Tensor[(120, 1), uint8], Tensor[(6, 13, 7), float64], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %832 = cast(meta[relay.Constant][41] /* ty=Tensor[(288), int8] */, dtype="int8") /* ty=Tensor[(288), int8] */;
  %833 = cast(meta[relay.Constant][41] /* ty=Tensor[(288), int8] */, dtype="int8") /* ty=Tensor[(288), int8] */;
  %834 = reshape(%832, newshape=[8, 3, 12]) /* ty=Tensor[(8, 3, 12), int8] */;
  %835 = reshape(%833, newshape=[8, 3, 12]) /* ty=Tensor[(8, 3, 12), int8] */;
  %836 = log10(%826) /* ty=Tensor[(15, 13, 6), float64] */;
  %837 = %831.3;
  %838 = @func_4830(%834, %835) /* ty=Tensor[(8, 3, 12), bool] */;
  (%836, %837, meta[relay.Constant][40] /* ty=Tensor[(546), int16] */, %838, meta[relay.Constant][41] /* ty=Tensor[(288), int8] */)
}

def @func_4550(%var_4548: int16, %var_4549: Tensor[(6, 13, 1), int16]) -> (Tensor[(15, 3, 5), bool], Tensor[(6, 13, 1), float32], Tensor[(42), float32], Tensor[(1001), uint64]) {
  @func_4546(%var_4548, %var_4549) /* ty=(Tensor[(15, 3, 5), bool], Tensor[(6, 13, 1), float32], Tensor[(42), float32], Tensor[(1001), uint64]) */
}

def @func_8827() -> Tensor[(15, 3, 5), bool] {
  %840 = fn () -> Tensor[(15, 3, 5), bool] {
    %839 = @func_1947() /* ty=(Tensor[(15, 3, 5), bool],) */;
    %839.0
  };
  %840() /* ty=Tensor[(15, 3, 5), bool] */
}

def @func_13680() -> (Tensor[(2, 12, 5), uint16], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  %847 = fn () -> (Tensor[(2, 12, 5), uint16], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
    %841 = @func_10482() /* ty=(Tensor[(2, 12, 5), uint16],) */;
    %842 = @func_5305() /* ty=(Tensor[(15, 3, 5), bool],) */;
    %843 = @func_12165() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], int16, int16, Tensor[(15, 3, 5), float32], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
    %844 = %841.0;
    %845 = %842.0;
    %846 = %843.5;
    (%844, %845, %846)
  };
  %847() /* ty=(Tensor[(2, 12, 5), uint16], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */
}

def @func_14734() -> Tensor[(15, 3, 5), bool] {
  @func_14732() /* ty=Tensor[(15, 3, 5), bool] */
}

def @func_9233() -> Tensor[(15, 3, 5), float64] {
  %848 = fn () -> Tensor[(15, 3, 5), float64] {
    @func_3092() /* ty=Tensor[(15, 3, 5), float64] */
  };
  %848() /* ty=Tensor[(15, 3, 5), float64] */
}

def @func_5300() -> Tensor[(15, 3, 5), bool] {
  @func_702() /* ty=Tensor[(15, 3, 5), bool] */
}

def @func_6147() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  @func_6145() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */
}

def @func_6082() -> (Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), float64], Tensor[(15, 3, 5), bool]) {
  @func_6080() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), float64], Tensor[(15, 3, 5), bool]) */
}

def @func_5150(%var_5148: int16, %var_5149: Tensor[(60, 2), uint8]) -> (Tensor[(4, 12, 7), int16], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(60, 2), float64], Tensor[(15, 3, 5), bool], Tensor[(42), float32]) {
  @func_5146(%var_5148, %var_5149) /* ty=(Tensor[(4, 12, 7), int16], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(60, 2), float64], Tensor[(15, 3, 5), bool], Tensor[(42), float32]) */
}

def @func_14347() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  @func_14345() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */
}

def @func_12080() -> (Tensor[(15, 3, 5), bool],) {
  %849 = @func_8634() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %850 = %849.0;
  (%850,)
}

def @func_12506() -> Tensor[(1, 14, 3), float64] {
  %851 = @func_4699() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(1, 14, 3), float64]) */;
  %851.1
}

def @func_9900() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(120, 1), uint8], Tensor[(15, 3, 5), bool]) {
  %860 = fn () -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(120, 1), uint8], Tensor[(15, 3, 5), bool]) {
    %852 = @func_3968() /* ty=(Tensor[(15, 3, 5), bool],) */;
    %853 = @func_4234() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
    %854 = @func_8427() /* ty=(Tensor[(15, 13, 6), float64], Tensor[(120, 1), uint8], Tensor[(546), int16], Tensor[(8, 3, 12), bool], Tensor[(288), int8]) */;
    %855 = @func_4153() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
    %856 = %852.0;
    %857 = %853.1;
    %858 = %854.1;
    %859 = %855.1;
    (%856, %857, %858, %859)
  };
  %860() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(120, 1), uint8], Tensor[(15, 3, 5), bool]) */
}

def @func_1050(%var_1049: Tensor[(120), uint8]) -> (Tensor[(2, 12, 5), bool], Tensor[(120), uint8], Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], Tensor[(15, 3, 5), float32]) {
  %873 = fn (%var_992: Tensor[(120), uint8]) -> (Tensor[(2, 12, 5), bool], Tensor[(120), uint8], Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], Tensor[(15, 3, 5), float32]) {
    %861 = cast(%var_992, dtype="uint8") /* ty=Tensor[(120), uint8] */;
    %862 = reshape(%861, newshape=[2, 12, 5]) /* ty=Tensor[(2, 12, 5), uint8] */;
    %863 = cast(%var_992, dtype="uint8") /* ty=Tensor[(120), uint8] */;
    %864 = reshape(%863, newshape=[2, 12, 5]) /* ty=Tensor[(2, 12, 5), uint8] */;
    %865 = @func_702() /* ty=Tensor[(15, 3, 5), bool] */;
    %866 = cast(%865, dtype="float32") /* ty=Tensor[(15, 3, 5), float32] */;
    %867 = log10(%866) /* ty=Tensor[(15, 3, 5), float32] */;
    %868 = cast(%867, dtype="float32") /* ty=Tensor[(15, 3, 5), float32] */;
    %869 = @func_501(%862) /* ty=Tensor[(2, 12, 5), bool] */;
    %870 = @func_928() /* ty=Tensor[(15, 3, 5), bool] */;
    %871 = @func_501(%864) /* ty=Tensor[(2, 12, 5), bool] */;
    %872 = sin(%868) /* ty=Tensor[(15, 3, 5), float32] */;
    (%869, %var_992, %870, %871, %872)
  };
  %873(%var_1049) /* ty=(Tensor[(2, 12, 5), bool], Tensor[(120), uint8], Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], Tensor[(15, 3, 5), float32]) */
}

def @func_9059(%var_9057: Tensor[(15, 13, 6), float32], %var_9058: Tensor[(15, 13, 6), float32]) -> (Tensor[(15, 13, 6), float32], Tensor[(15, 3, 5), bool]) {
  @func_9055(%var_9057, %var_9058) /* ty=(Tensor[(15, 13, 6), float32], Tensor[(15, 3, 5), bool]) */
}

def @func_11149() -> (Tensor[(42), float32],) {
  %876 = fn () -> (Tensor[(42), float32],) {
    %874 = @func_3304() /* ty=(Tensor[(42), float32], Tensor[(15, 3, 5), bool], Tensor[(4, 5, 8), float64], Tensor[(160), float64]) */;
    %875 = %874.0;
    (%875,)
  };
  %876() /* ty=(Tensor[(42), float32],) */
}

def @func_5992() -> (Tensor[(2, 12, 5), bool],) {
  %877 = @func_3484() /* ty=Tensor[(2, 12, 5), bool] */;
  (%877,)
}

def @func_4460() -> Tensor[(42), float32] {
  @func_4458() /* ty=Tensor[(42), float32] */
}

def @func_3387() -> Tensor[(15, 3, 5), bool] {
  %878 = @func_1361() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %878.0
}

def @func_2642(%var_2641: Tensor[(15, 3, 5), bool]) -> Tensor[(15, 3, 5), float32] {
  %885 = fn (%var_2632: Tensor[(15, 3, 5), bool]) -> Tensor[(15, 3, 5), float32] {
    %879 = @func_2491() /* ty=(Tensor[(2, 12, 5), float64], Tensor[(15, 3, 5), bool]) */;
    %880 = %879.1;
    %881 = cast(%var_2632, dtype="float32") /* ty=Tensor[(15, 3, 5), float32] */;
    %882 = shape_of(%880, dtype="int32") /* ty=Tensor[(3), int32] */;
    %883 = cast(%880, dtype="float32") /* ty=Tensor[(15, 3, 5), float32] */;
    %884 = dyn.reshape(%881, %882, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    floor_divide(%883, %884) /* ty=Tensor[(15, 3, 5), float32] */
  };
  %885(%var_2641) /* ty=Tensor[(15, 3, 5), float32] */
}

def @func_10667() -> (Tensor[(15, 3, 5), bool],) {
  %886 = @func_9876() /* ty=Tensor[(15, 3, 5), bool] */;
  (%886,)
}

def @func_8737(%var_8709: Tensor[(5, 16, 14), float64], %var_8718: Tensor[(56), float32]) -> (Tensor[(5, 16, 14), bool], Tensor[(7, 14, 8), float32], Tensor[(56), float32], Tensor[(784), float32], Tensor[(15, 3, 5), bool]) {
  %887 = cast(meta[relay.Constant][42] /* ty=Tensor[(5, 16, 14), float64] */, dtype="bool") /* ty=Tensor[(5, 16, 14), bool] */;
  %888 = shape_of(%var_8709, dtype="int32") /* ty=Tensor[(3), int32] */;
  %889 = cast(%var_8709, dtype="bool") /* ty=Tensor[(5, 16, 14), bool] */;
  %890 = dyn.reshape(%887, %888, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %891 = cast(%var_8718, dtype="float32") /* ty=Tensor[(56), float32] */;
  %892 = cast(meta[relay.Constant][43] /* ty=Tensor[(784), float32] */, dtype="float32") /* ty=Tensor[(784), float32] */;
  %893 = reshape(%891, newshape=[7, 1, 8]) /* ty=Tensor[(7, 1, 8), float32] */;
  %894 = reshape(%892, newshape=[7, 14, 8]) /* ty=Tensor[(7, 14, 8), float32] */;
  %895 = @func_6742(%893, %894) /* ty=(Tensor[(7, 14, 8), float32],) */;
  %896 = @func_3630() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %897 = greater_equal(%889, %890) /* ty=Tensor[(5, 16, 14), bool] */;
  %898 = %895.0;
  %899 = %896.0;
  (%897, %898, %var_8718, meta[relay.Constant][43] /* ty=Tensor[(784), float32] */, %899)
}

def @func_6745(%var_6743: Tensor[(7, 1, 8), float32], %var_6744: Tensor[(7, 14, 8), float32]) -> (Tensor[(7, 14, 8), float32],) {
  %903 = fn (%var_6737: Tensor[(7, 1, 8), float32], %var_6738: Tensor[(7, 14, 8), float32]) -> (Tensor[(7, 14, 8), float32],) {
    %900 = cast(%var_6737, dtype="float32") /* ty=Tensor[(7, 1, 8), float32] */;
    %901 = cast(%var_6738, dtype="float32") /* ty=Tensor[(7, 14, 8), float32] */;
    %902 = floor_mod(%900, %901) /* ty=Tensor[(7, 14, 8), float32] */;
    (%902,)
  };
  %903(%var_6743, %var_6744) /* ty=(Tensor[(7, 14, 8), float32],) */
}

def @func_6080() -> (Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), float64], Tensor[(15, 3, 5), bool]) {
  %904 = @func_1764() /* ty=(Tensor[(120), uint8], Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), float64]) */;
  %905 = @func_5337() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %906 = @func_928() /* ty=Tensor[(15, 3, 5), bool] */;
  %907 = %904.2;
  %908 = %905.0;
  (%906, %907, %908)
}

def @func_4252() -> (Tensor[(15, 3, 5), bool],) {
  %909 = @func_1947() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %910 = %909.0;
  (%910,)
}

def @func_1130() -> (Tensor[(2, 12, 5), bool], Tensor[(120), uint8], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  %927 = fn () -> (Tensor[(2, 12, 5), bool], Tensor[(120), uint8], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
    %911 = cast(meta[relay.Constant][44] /* ty=Tensor[(120), uint8] */, dtype="uint8") /* ty=Tensor[(120), uint8] */;
    %912 = reshape(%911, newshape=[2, 12, 5]) /* ty=Tensor[(2, 12, 5), uint8] */;
    %913 = @func_633() /* ty=(Tensor[(15, 3, 5), bool],) */;
    %914 = %913.0;
    %915 = @func_680() /* ty=(Tensor[(15, 3, 5), bool],) */;
    %916 = %915.0;
    %917 = cast(%916, dtype="bool") /* ty=Tensor[(15, 3, 5), bool] */;
    %918 = shape_of(%914, dtype="int32") /* ty=Tensor[(3), int32] */;
    %919 = cast(%914, dtype="bool") /* ty=Tensor[(15, 3, 5), bool] */;
    %920 = dyn.reshape(%917, %918, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %921 = cast(meta[relay.Constant][44] /* ty=Tensor[(120), uint8] */, dtype="uint8") /* ty=Tensor[(120), uint8] */;
    %922 = reshape(%921, newshape=[3, 40]) /* ty=Tensor[(3, 40), uint8] */;
    %923 = @func_914(%922) /* ty=(Tensor[(2, 12, 5), bool], Tensor[(3, 40), uint8], Tensor[(15, 3, 5), float64], Tensor[(15, 3, 5), bool]) */;
    %924 = @func_501(%912) /* ty=Tensor[(2, 12, 5), bool] */;
    %925 = greater(%919, %920) /* ty=Tensor[(15, 3, 5), bool] */;
    %926 = %923.3;
    (%924, meta[relay.Constant][44] /* ty=Tensor[(120), uint8] */, %925, %926)
  };
  %927() /* ty=(Tensor[(2, 12, 5), bool], Tensor[(120), uint8], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */
}

def @func_2412() -> (Tensor[(15, 3, 5), bool],) {
  %928 = @func_680() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %929 = %928.0;
  (%929,)
}

def @func_12072(%var_12070: int16, %var_12071: Tensor[(1, 8, 11), int16]) -> (Tensor[(1, 8, 11), int16],) {
  %933 = fn (%var_12061: int16, %var_12062: Tensor[(1, 8, 11), int16]) -> (Tensor[(1, 8, 11), int16],) {
    %930 = cast(%var_12061, dtype="int16") /* ty=int16 */;
    %931 = cast(%var_12062, dtype="int16") /* ty=Tensor[(1, 8, 11), int16] */;
    %932 = right_shift(%930, %931) /* ty=Tensor[(1, 8, 11), int16] */;
    (%932,)
  };
  %933(%var_12070, %var_12071) /* ty=(Tensor[(1, 8, 11), int16],) */
}

def @func_12834() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float32]) {
  @func_12832() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float32]) */
}

def @func_5426(%var_5408: Tensor[(9, 14, 3), float64]) -> (Tensor[(15, 3, 5), bool], Tensor[(9, 14, 3), int32], Tensor[(14, 4, 15), int8], Tensor[(840), float32]) {
  %934 = @func_3679() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %935 = @func_1444() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(120), uint8], Tensor[(120), uint8], Tensor[(1, 14, 3), float64], Tensor[(42), float32]) */;
  %936 = %935.3;
  %937 = cast(%936, dtype="int32") /* ty=Tensor[(1, 14, 3), int32] */;
  %938 = cast(%var_5408, dtype="int32") /* ty=Tensor[(9, 14, 3), int32] */;
  %939 = cast(meta[relay.Constant][45] /* ty=Tensor[(840), float32] */, dtype="float32") /* ty=Tensor[(840), float32] */;
  %940 = reshape(%939, newshape=[14, 4, 15]) /* ty=Tensor[(14, 4, 15), float32] */;
  %941 = @func_3476(%940) /* ty=(Tensor[(2, 12, 5), bool], Tensor[(14, 4, 15), int8]) */;
  %942 = %934.0;
  %943 = minimum(%937, %938) /* ty=Tensor[(9, 14, 3), int32] */;
  %944 = %941.1;
  (%942, %943, %944, meta[relay.Constant][45] /* ty=Tensor[(840), float32] */)
}

def @func_6288(%var_6273: int16) -> (Tensor[(2, 12, 5), bool], Tensor[(15, 3, 5), float32], Tensor[(15, 3, 5), bool], int16, Tensor[(1, 78), float32]) {
  %945 = @func_4295() /* ty=(Tensor[(15, 3, 5), float32], Tensor[(1, 14, 3), float64], Tensor[(42), float32]) */;
  %946 = cast(%var_6273, dtype="int16") /* ty=int16 */;
  %947 = cast(meta[relay.Constant][46] /* ty=Tensor[(1, 78), int16] */, dtype="int16") /* ty=Tensor[(1, 78), int16] */;
  %948 = reshape(%946, newshape=[]) /* ty=int16 */;
  %949 = reshape(%947, newshape=[6, 13, 1]) /* ty=Tensor[(6, 13, 1), int16] */;
  %950 = @func_4546(%948, %949) /* ty=(Tensor[(15, 3, 5), bool], Tensor[(6, 13, 1), float32], Tensor[(42), float32], Tensor[(1001), uint64]) */;
  %951 = cast(meta[relay.Constant][46] /* ty=Tensor[(1, 78), int16] */, dtype="float32") /* ty=Tensor[(1, 78), float32] */;
  %952 = @func_3484() /* ty=Tensor[(2, 12, 5), bool] */;
  %953 = %945.0;
  %954 = %950.0;
  %955 = sqrt(%951) /* ty=Tensor[(1, 78), float32] */;
  (%952, %953, %954, %var_6273, %955)
}

def @func_12953() -> (Tensor[(15, 3, 5), bool],) {
  %958 = fn () -> (Tensor[(15, 3, 5), bool],) {
    %956 = @func_12165() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], int16, int16, Tensor[(15, 3, 5), float32], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
    %957 = %956.6;
    (%957,)
  };
  %958() /* ty=(Tensor[(15, 3, 5), bool],) */
}

def @func_15169() -> (Tensor[(15, 3, 5), float64],) {
  @func_15167() /* ty=(Tensor[(15, 3, 5), float64],) */
}

def @func_15328() -> Tensor[(15, 3, 5), bool] {
  %960 = fn () -> Tensor[(15, 3, 5), bool] {
    %959 = @func_8024() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(9, 14, 3), float64]) */;
    %959.0
  };
  %960() /* ty=Tensor[(15, 3, 5), bool] */
}

def @func_14485() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float64], Tensor[(14, 4, 15), int8], Tensor[(378), float64]) {
  %969 = fn () -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float64], Tensor[(14, 4, 15), int8], Tensor[(378), float64]) {
    %961 = @func_3352() /* ty=(Tensor[(15, 3, 5), bool],) */;
    %962 = @func_4309() /* ty=(Tensor[(15, 3, 5), float64], Tensor[(15, 3, 5), bool]) */;
    %963 = cast(meta[relay.Constant][47] /* ty=Tensor[(378), float64] */, dtype="float64") /* ty=Tensor[(378), float64] */;
    %964 = reshape(%963, newshape=[9, 14, 3]) /* ty=Tensor[(9, 14, 3), float64] */;
    %965 = @func_5426(%964) /* ty=(Tensor[(15, 3, 5), bool], Tensor[(9, 14, 3), int32], Tensor[(14, 4, 15), int8], Tensor[(840), float32]) */;
    %966 = %961.0;
    %967 = %962.0;
    %968 = %965.2;
    (%966, %967, %968, meta[relay.Constant][47] /* ty=Tensor[(378), float64] */)
  };
  %969() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float64], Tensor[(14, 4, 15), int8], Tensor[(378), float64]) */
}

def @func_2414() -> (Tensor[(15, 3, 5), bool],) {
  @func_2412() /* ty=(Tensor[(15, 3, 5), bool],) */
}

def @func_7972() -> (Tensor[(2, 12, 5), float64], Tensor[(15, 3, 5), bool]) {
  %973 = fn () -> (Tensor[(2, 12, 5), float64], Tensor[(15, 3, 5), bool]) {
    %970 = @func_3327() /* ty=(Tensor[(2, 12, 5), float64],) */;
    %971 = %970.0;
    %972 = @func_1684() /* ty=Tensor[(15, 3, 5), bool] */;
    (%971, %972)
  };
  %973() /* ty=(Tensor[(2, 12, 5), float64], Tensor[(15, 3, 5), bool]) */
}

def @func_1402(%var_1400: Tensor[(270), float64], %var_1401: Tensor[(42), float32]) -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(3, 10, 9), bool], Tensor[(270), float64], Tensor[(42), float32]) {
  %983 = fn (%var_1378: Tensor[(270), float64], %var_1379: Tensor[(42), float32]) -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(3, 10, 9), bool], Tensor[(270), float64], Tensor[(42), float32]) {
    %974 = @func_1361() /* ty=(Tensor[(15, 3, 5), bool],) */;
    %975 = cast(%var_1378, dtype="float64") /* ty=Tensor[(270), float64] */;
    %976 = cast(%var_1379, dtype="float32") /* ty=Tensor[(42), float32] */;
    %977 = reshape(%975, newshape=[3, 10, 9]) /* ty=Tensor[(3, 10, 9), float64] */;
    %978 = reshape(%976, newshape=[42]) /* ty=Tensor[(42), float32] */;
    %979 = @func_554(%977, %978) /* ty=(Tensor[(3, 10, 9), bool], Tensor[(1, 14, 3), float32], Tensor[(?, 14, 3), float32]) */;
    %980 = @func_933() /* ty=Tensor[(15, 3, 5), bool] */;
    %981 = %974.0;
    %982 = %979.0;
    (%980, %981, %982, %var_1378, %var_1379)
  };
  %983(%var_1400, %var_1401) /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(3, 10, 9), bool], Tensor[(270), float64], Tensor[(42), float32]) */
}

def @func_4295() -> (Tensor[(15, 3, 5), float32], Tensor[(1, 14, 3), float64], Tensor[(42), float32]) {
  %984 = @func_3968() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %985 = %984.0;
  %986 = cast(%985, dtype="float32") /* ty=Tensor[(15, 3, 5), float32] */;
  %987 = @func_2289() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(1, 14, 3), float64], Tensor[(42), float32], Tensor[(1, 14, 3), float64]) */;
  %988 = exp(%986) /* ty=Tensor[(15, 3, 5), float32] */;
  %989 = %987.3;
  %990 = @func_2572() /* ty=Tensor[(42), float32] */;
  (%988, %989, %990)
}

def @func_14038(%var_14036: Tensor[(15, 6, 2), float32]) -> Tensor[(15, 6, 2), float64] {
  @func_14035(%var_14036) /* ty=Tensor[(15, 6, 2), float64] */
}

def @func_6945(%var_6944: Tensor[(42), float32]) -> (Tensor[(120), uint8], Tensor[(42), float32], Tensor[(42), float32]) {
  %997 = fn (%var_6930: Tensor[(42), float32]) -> (Tensor[(120), uint8], Tensor[(42), float32], Tensor[(42), float32]) {
    %991 = @func_1570() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], Tensor[(120), uint8]) */;
    %992 = cast(%var_6930, dtype="float32") /* ty=Tensor[(42), float32] */;
    %993 = reshape(%992, newshape=[42]) /* ty=Tensor[(42), float32] */;
    %994 = @func_3157(%993) /* ty=(Tensor[(15, 3, 5), bool], Tensor[(?, 14, 3), float32], Tensor[(270), float64], Tensor[(42), float32], Tensor[(15, 3, 5), bool]) */;
    %995 = %991.2;
    %996 = %994.3;
    (%995, %996, %var_6930)
  };
  %997(%var_6944) /* ty=(Tensor[(120), uint8], Tensor[(42), float32], Tensor[(42), float32]) */
}

def @func_6504(%var_6502: float64, %var_6503: Tensor[(13, 1, 10), float64]) -> (Tensor[(13, 1, 10), float64],) {
  @func_6500(%var_6502, %var_6503) /* ty=(Tensor[(13, 1, 10), float64],) */
}

def @func_935() -> Tensor[(15, 3, 5), bool] {
  @func_933() /* ty=Tensor[(15, 3, 5), bool] */
}

def @func_4155() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  @func_4153() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */
}

def @func_682() -> (Tensor[(15, 3, 5), bool],) {
  @func_680() /* ty=(Tensor[(15, 3, 5), bool],) */
}

def @func_10904() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  @func_10902() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */
}

def @func_4153() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  %998 = @func_3630() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %999 = @func_633() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %1000 = %998.0;
  %1001 = %999.0;
  (%1000, %1001)
}

def @func_558(%var_556: Tensor[(3, 10, 9), float64], %var_557: Tensor[(42), float32]) -> (Tensor[(3, 10, 9), bool], Tensor[(1, 14, 3), float32], Tensor[(?, 14, 3), float32]) {
  @func_554(%var_556, %var_557) /* ty=(Tensor[(3, 10, 9), bool], Tensor[(1, 14, 3), float32], Tensor[(?, 14, 3), float32]) */
}

def @func_9445() -> (Tensor[(2, 12, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], int16, Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float32], Tensor[(2, 12, 5), float64], Tensor[(2, 12, 5), bool], Tensor[(2, 12, 5), int32]) {
  %1002 = @func_1602() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], Tensor[(120), uint8]) */;
  %1003 = @func_4605() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(91, 11), float64], Tensor[(15, 3, 5), bool]) */;
  %1004 = cast(meta[relay.Constant][48] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %1005 = reshape(%1004, newshape=[]) /* ty=int16 */;
  %1006 = @func_6288(%1005) /* ty=(Tensor[(2, 12, 5), bool], Tensor[(15, 3, 5), float32], Tensor[(15, 3, 5), bool], int16, Tensor[(1, 78), float32]) */;
  %1007 = cast(meta[relay.Constant][48] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %1008 = reshape(%1007, newshape=[]) /* ty=int16 */;
  %1009 = @func_6288(%1008) /* ty=(Tensor[(2, 12, 5), bool], Tensor[(15, 3, 5), float32], Tensor[(15, 3, 5), bool], int16, Tensor[(1, 78), float32]) */;
  %1010 = @func_1764() /* ty=(Tensor[(120), uint8], Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), float64]) */;
  %1011 = @func_1602() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], Tensor[(120), uint8]) */;
  %1012 = %1002.1;
  %1013 = %1003.3;
  %1014 = @func_8164() /* ty=Tensor[(15, 3, 5), bool] */;
  %1015 = %1006.2;
  %1016 = @func_4424() /* ty=Tensor[(15, 3, 5), bool] */;
  %1017 = %1009.1;
  %1018 = %1010.2;
  %1019 = %1011.1;
  %1020 = @func_9041() /* ty=Tensor[(2, 12, 5), int32] */;
  (%1012, %1013, %1014, %1015, meta[relay.Constant][48] /* ty=int16 */, %1016, %1017, %1018, %1019, %1020)
}

def @func_1899() -> (Tensor[(15, 3, 5), bool],) {
  %1021 = @func_1285() /* ty=Tensor[(15, 3, 5), bool] */;
  (%1021,)
}

def @func_13995() -> (Tensor[(2, 12, 5), bool],) {
  %1023 = fn () -> (Tensor[(2, 12, 5), bool],) {
    %1022 = @func_12449() /* ty=Tensor[(2, 12, 5), bool] */;
    (%1022,)
  };
  %1023() /* ty=(Tensor[(2, 12, 5), bool],) */
}

def @func_14790(%var_14784: Tensor[(3, 3, 14), float64]) -> (Tensor[(3, 3, 14), float64],) {
  %1024 = cast(%var_14784, dtype="float64") /* ty=Tensor[(3, 3, 14), float64] */;
  %1025 = atan(%1024) /* ty=Tensor[(3, 3, 14), float64] */;
  (%1025,)
}

def @func_4700() -> (Tensor[(15, 3, 5), bool], Tensor[(1, 14, 3), float64]) {
  %1030 = fn () -> (Tensor[(15, 3, 5), bool], Tensor[(1, 14, 3), float64]) {
    %1026 = @func_3943() /* ty=(Tensor[(15, 3, 5), bool],) */;
    %1027 = @func_1823() /* ty=(Tensor[(1, 14, 3), float64],) */;
    %1028 = %1026.0;
    %1029 = %1027.0;
    (%1028, %1029)
  };
  %1030() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(1, 14, 3), float64]) */
}

def @func_2937(%var_2935: Tensor[(3, 40), uint8], %var_2936: Tensor[(468), int16]) -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(3, 40), uint8], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(1, 14, 3), float64], Tensor[(120), uint8], Tensor[(18, 2), int16], Tensor[(468), int16]) {
  @func_2933(%var_2935, %var_2936) /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(3, 40), uint8], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(1, 14, 3), float64], Tensor[(120), uint8], Tensor[(18, 2), int16], Tensor[(468), int16]) */
}

def @func_14914() -> (Tensor[(15, 3, 5), float64], Tensor[(42), float32]) {
  %1034 = fn () -> (Tensor[(15, 3, 5), float64], Tensor[(42), float32]) {
    %1031 = @func_12038() /* ty=(Tensor[(2, 12, 5), int32], Tensor[(42), float32]) */;
    %1032 = @func_9232() /* ty=Tensor[(15, 3, 5), float64] */;
    %1033 = %1031.1;
    (%1032, %1033)
  };
  %1034() /* ty=(Tensor[(15, 3, 5), float64], Tensor[(42), float32]) */
}

def @func_5833(%var_5831: Tensor[(2, 12, 5), float64]) -> (Tensor[(2, 12, 5), float64], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  @func_5830(%var_5831) /* ty=(Tensor[(2, 12, 5), float64], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */
}

def @func_14989() -> (Tensor[(1, 14, 3), float64], Tensor[(3, 14, 13), bool], Tensor[(1, 546), int16]) {
  %1035 = @func_7168() /* ty=(Tensor[(1, 14, 3), float64],) */;
  %1036 = cast(meta[relay.Constant][49] /* ty=Tensor[(1, 546), int16] */, dtype="int16") /* ty=Tensor[(1, 546), int16] */;
  %1037 = reshape(%1036, newshape=[3, 14, 13]) /* ty=Tensor[(3, 14, 13), int16] */;
  %1038 = %1035.0;
  %1039 = @func_3847(%1037) /* ty=Tensor[(3, 14, 13), bool] */;
  (%1038, %1039, meta[relay.Constant][49] /* ty=Tensor[(1, 546), int16] */)
}

def @func_13608() -> (Tensor[(15, 3, 5), bool],) {
  %1040 = @func_3943() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %1041 = %1040.0;
  (%1041,)
}

def @func_6107() -> (Tensor[(120), uint8],) {
  %1044 = fn () -> (Tensor[(120), uint8],) {
    %1042 = @func_1764() /* ty=(Tensor[(120), uint8], Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), float64]) */;
    %1043 = %1042.0;
    (%1043,)
  };
  %1044() /* ty=(Tensor[(120), uint8],) */
}

def @func_5058(%var_5043: Tensor[(3, 6, 5), uint32]) -> (Tensor[(3, 6, 5), uint32],) {
  %1045 = cast(meta[relay.Constant][50] /* ty=Tensor[(3, 6, 5), uint32] */, dtype="uint32") /* ty=Tensor[(3, 6, 5), uint32] */;
  %1046 = shape_of(%var_5043, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1047 = cast(%var_5043, dtype="uint32") /* ty=Tensor[(3, 6, 5), uint32] */;
  %1048 = dyn.reshape(%1045, %1046, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1049 = add(%1047, %1048) /* ty=Tensor[(3, 6, 5), uint32] */;
  (%1049,)
}

def @func_12082() -> (Tensor[(15, 3, 5), bool],) {
  @func_12080() /* ty=(Tensor[(15, 3, 5), bool],) */
}

def @func_7790(%var_7788: Tensor[(546), int16]) -> (Tensor[(15, 3, 5), bool], Tensor[(3, 14, 13), bool], Tensor[(546), int16], Tensor[(1, 14, 3), float64]) {
  @func_7787(%var_7788) /* ty=(Tensor[(15, 3, 5), bool], Tensor[(3, 14, 13), bool], Tensor[(546), int16], Tensor[(1, 14, 3), float64]) */
}

def @func_4254() -> (Tensor[(15, 3, 5), bool],) {
  @func_4252() /* ty=(Tensor[(15, 3, 5), bool],) */
}

def @func_14211() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(1001), float64]) {
  %1050 = @func_1129() /* ty=(Tensor[(2, 12, 5), bool], Tensor[(120), uint8], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %1051 = cast(meta[relay.Constant][51] /* ty=Tensor[(1001), uint64] */, dtype="uint64") /* ty=Tensor[(1001), uint64] */;
  %1052 = reshape(%1051, newshape=[1001]) /* ty=Tensor[(1001), uint64] */;
  %1053 = @func_13237(%1052) /* ty=(Tensor[(15, 3, 5), bool], Tensor[(60, 14), float32], Tensor[(1001), uint64]) */;
  %1054 = cast(meta[relay.Constant][51] /* ty=Tensor[(1001), uint64] */, dtype="float64") /* ty=Tensor[(1001), float64] */;
  %1055 = %1050.3;
  %1056 = %1053.0;
  %1057 = exp(%1054) /* ty=Tensor[(1001), float64] */;
  (%1055, %1056, %1057)
}

def @func_15146(%var_15144: Tensor[(42, 1), float32]) -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(42), float32], Tensor[(42, 1), float32]) {
  @func_15143(%var_15144) /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(42), float32], Tensor[(42, 1), float32]) */
}

def @func_1948() -> (Tensor[(15, 3, 5), bool],) {
  %1060 = fn () -> (Tensor[(15, 3, 5), bool],) {
    %1058 = @func_680() /* ty=(Tensor[(15, 3, 5), bool],) */;
    %1059 = %1058.0;
    (%1059,)
  };
  %1060() /* ty=(Tensor[(15, 3, 5), bool],) */
}

def @func_12876() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  %1064 = fn () -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
    %1061 = @func_6125() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
    %1062 = @func_933() /* ty=Tensor[(15, 3, 5), bool] */;
    %1063 = %1061.0;
    (%1062, %1063)
  };
  %1064() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */
}

def @func_10722() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float64]) {
  %1072 = fn () -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float64]) {
    %1065 = @func_10037() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
    %1066 = @func_633() /* ty=(Tensor[(15, 3, 5), bool],) */;
    %1067 = @func_5604() /* ty=(Tensor[(15, 3, 5), float64],) */;
    %1068 = %1065.0;
    %1069 = %1066.0;
    %1070 = @func_10166() /* ty=Tensor[(15, 3, 5), bool] */;
    %1071 = %1067.0;
    (%1068, %1069, %1070, %1071)
  };
  %1072() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float64]) */
}

def @func_8681() -> Tensor[(15, 3, 5), bool] {
  %1074 = fn () -> Tensor[(15, 3, 5), bool] {
    %1073 = @func_680() /* ty=(Tensor[(15, 3, 5), bool],) */;
    %1073.0
  };
  %1074() /* ty=Tensor[(15, 3, 5), bool] */
}

def @func_11026() -> (Tensor[(15, 3, 5), float64],) {
  %1075 = @func_6901() /* ty=(Tensor[(15, 3, 5), float64],) */;
  %1076 = %1075.0;
  (%1076,)
}

def @func_3218(%var_3173: Tensor[(4, 1, 15), float32]) -> (Tensor[(4, 1, 15), float32], Tensor[(120), uint8], Tensor[(15, 3, 5), bool]) {
  %1077 = cast(%var_3173, dtype="float32") /* ty=Tensor[(4, 1, 15), float32] */;
  %1078 = log2(%1077) /* ty=Tensor[(4, 1, 15), float32] */;
  %1079 = cast(%1078, dtype="float32") /* ty=Tensor[(4, 1, 15), float32] */;
  %1080 = @func_1570() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], Tensor[(120), uint8]) */;
  %1081 = @func_2340() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %1082 = atan(%1079) /* ty=Tensor[(4, 1, 15), float32] */;
  %1083 = %1080.2;
  %1084 = %1081.0;
  (%1082, %1083, %1084)
}

def @func_12166() -> (Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], int16, int16, Tensor[(15, 3, 5), float32], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  %1097 = fn () -> (Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], int16, int16, Tensor[(15, 3, 5), float32], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
    %1085 = @func_680() /* ty=(Tensor[(15, 3, 5), bool],) */;
    %1086 = cast(meta[relay.Constant][52] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %1087 = reshape(%1086, newshape=[]) /* ty=int16 */;
    %1088 = @func_7865(%1087) /* ty=(Tensor[(42), float32], Tensor[(15, 3, 5), bool], Tensor[(6, 13, 1), float32], int16, Tensor[(78), int16]) */;
    %1089 = @func_10412() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
    %1090 = @func_2774() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
    %1091 = %1085.0;
    %1092 = @func_3484() /* ty=Tensor[(2, 12, 5), bool] */;
    %1093 = %1088.3;
    %1094 = @func_5757() /* ty=Tensor[(15, 3, 5), float32] */;
    %1095 = %1089.1;
    %1096 = %1090.1;
    (%1091, %1092, %1093, meta[relay.Constant][52] /* ty=int16 */, %1094, %1095, %1096)
  };
  %1097() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], int16, int16, Tensor[(15, 3, 5), float32], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */
}

def @func_13610() -> (Tensor[(15, 3, 5), bool],) {
  @func_13608() /* ty=(Tensor[(15, 3, 5), bool],) */
}

def @func_15143(%var_15138: Tensor[(42, 1), float32]) -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(42), float32], Tensor[(42, 1), float32]) {
  %1098 = @func_12832() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float32]) */;
  %1099 = @func_3679() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %1100 = cast(%var_15138, dtype="float32") /* ty=Tensor[(42, 1), float32] */;
  %1101 = reshape(%1100, newshape=[42]) /* ty=Tensor[(42), float32] */;
  %1102 = @func_3157(%1101) /* ty=(Tensor[(15, 3, 5), bool], Tensor[(?, 14, 3), float32], Tensor[(270), float64], Tensor[(42), float32], Tensor[(15, 3, 5), bool]) */;
  %1103 = %1098.0;
  %1104 = %1099.1;
  %1105 = %1102.3;
  (%1103, %1104, %1105, %var_15138)
}

def @func_5513() -> (Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool]) {
  @func_5511() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool]) */
}

def @func_9653(%var_9651: Tensor[(1001), uint64]) -> (Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], Tensor[(60, 14), float32], Tensor[(120), uint8], Tensor[(1001), uint64], Tensor[(42), float32]) {
  @func_9650(%var_9651) /* ty=(Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], Tensor[(60, 14), float32], Tensor[(120), uint8], Tensor[(1001), uint64], Tensor[(42), float32]) */
}

def @func_1551(%var_1549: Tensor[(12, 3, 1), int16], %var_1550: Tensor[(12, 3, 13), int16]) -> (Tensor[(12, 3, 13), int16], Tensor[(120), uint8]) {
  @func_1547(%var_1549, %var_1550) /* ty=(Tensor[(12, 3, 13), int16], Tensor[(120), uint8]) */
}

def @func_13401(%var_13399: Tensor[(12, 11, 1), float32]) -> (Tensor[(12, 11, 1), float32],) {
  @func_13398(%var_13399) /* ty=(Tensor[(12, 11, 1), float32],) */
}

def @func_5920() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  %1106 = @func_4234() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %1107 = @func_4234() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %1108 = %1106.0;
  %1109 = %1107.1;
  %1110 = @func_933() /* ty=Tensor[(15, 3, 5), bool] */;
  (%1108, %1109, %1110)
}

def @func_11593() -> Tensor[(15, 3, 5), bool] {
  @func_11591() /* ty=Tensor[(15, 3, 5), bool] */
}

def @func_7095(%var_7093: Tensor[(16, 3, 2), float32]) -> Tensor[(16, 3, 2), float32] {
  @func_7092(%var_7093) /* ty=Tensor[(16, 3, 2), float32] */
}

def @func_554(%var_522: Tensor[(3, 10, 9), float64], %var_536: Tensor[(42), float32]) -> (Tensor[(3, 10, 9), bool], Tensor[(1, 14, 3), float32], Tensor[(?, 14, 3), float32]) {
  %1111 = cast(%var_522, dtype="float64") /* ty=Tensor[(3, 10, 9), float64] */;
  %1112 = asinh(%1111) /* ty=Tensor[(3, 10, 9), float64] */;
  %1113 = cast(%1112, dtype="float64") /* ty=Tensor[(3, 10, 9), float64] */;
  %1114 = asin(%1113) /* ty=Tensor[(3, 10, 9), float64] */;
  %1115 = cast(%1112, dtype="bool") /* ty=Tensor[(3, 10, 9), bool] */;
  %1116 = shape_of(%1114, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1117 = cast(%1114, dtype="bool") /* ty=Tensor[(3, 10, 9), bool] */;
  %1118 = dyn.reshape(%1115, %1116, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1119 = cast(%var_536, dtype="float32") /* ty=Tensor[(42), float32] */;
  %1120 = reshape(%1119, newshape=[1, 14, 3]) /* ty=Tensor[(1, 14, 3), float32] */;
  %1121 = @func_202(%1120) /* ty=(Tensor[(1, 14, 3), float32], Tensor[(1, 14, 3), float64]) */;
  %1122 = %1121.1;
  %1123 = cast(%1122, dtype="float32") /* ty=Tensor[(1, 14, 3), float32] */;
  %1124 = reshape(%1123, newshape=[1, 14, 3]) /* ty=Tensor[(1, 14, 3), float32] */;
  %1125 = @func_202(%1124) /* ty=(Tensor[(1, 14, 3), float32], Tensor[(1, 14, 3), float64]) */;
  %1126 = cast(%var_536, dtype="float32") /* ty=Tensor[(42), float32] */;
  %1127 = shape_of(%1122, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1128 = cast(%1122, dtype="float32") /* ty=Tensor[(1, 14, 3), float32] */;
  %1129 = dyn.reshape(%1126, %1127, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1130 = equal(%1117, %1118) /* ty=Tensor[(3, 10, 9), bool] */;
  %1131 = %1125.0;
  %1132 = floor_divide(%1128, %1129) /* ty=Tensor[(?, 14, 3), float32] */;
  (%1130, %1131, %1132)
}

def @func_13917() -> (Tensor[(15, 3, 5), bool],) {
  %1135 = fn () -> (Tensor[(15, 3, 5), bool],) {
    %1133 = @func_2142() /* ty=(Tensor[(15, 3, 5), bool],) */;
    %1134 = %1133.0;
    (%1134,)
  };
  %1135() /* ty=(Tensor[(15, 3, 5), bool],) */
}

def @func_14893() -> Tensor[(15, 3, 5), bool] {
  %1136 = @func_2142() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %1136.0
}

def @func_3476(%var_3442: Tensor[(14, 4, 15), float32]) -> (Tensor[(2, 12, 5), bool], Tensor[(14, 4, 15), int8]) {
  %1137 = @func_1570() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], Tensor[(120), uint8]) */;
  %1138 = cast(%var_3442, dtype="float64") /* ty=Tensor[(14, 4, 15), float64] */;
  %1139 = log10(%1138) /* ty=Tensor[(14, 4, 15), float64] */;
  %1140 = cast(%var_3442, dtype="float32") /* ty=Tensor[(14, 4, 15), float32] */;
  %1141 = shape_of(meta[relay.Constant][53] /* ty=Tensor[(14, 4, 15), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1142 = cast(meta[relay.Constant][53] /* ty=Tensor[(14, 4, 15), float32] */, dtype="float32") /* ty=Tensor[(14, 4, 15), float32] */;
  %1143 = dyn.reshape(%1140, %1141, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1144 = power(%1142, %1143) /* ty=Tensor[(14, 4, 15), float32] */;
  %1145 = cast(%1144, dtype="int8") /* ty=Tensor[(14, 4, 15), int8] */;
  %1146 = shape_of(%1139, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1147 = cast(%1139, dtype="int8") /* ty=Tensor[(14, 4, 15), int8] */;
  %1148 = dyn.reshape(%1145, %1146, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1149 = %1137.1;
  %1150 = left_shift(%1147, %1148) /* ty=Tensor[(14, 4, 15), int8] */;
  (%1149, %1150)
}

def @func_10166() -> Tensor[(15, 3, 5), bool] {
  %1151 = @func_3943() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %1151.0
}

def @func_8962() -> (Tensor[(15, 3, 5), bool],) {
  @func_8960() /* ty=(Tensor[(15, 3, 5), bool],) */
}

def @func_1244(%var_1242: Tensor[(42), float32]) -> (Tensor[(15, 3, 5), bool], Tensor[(?, 14, 3), float32], Tensor[(30, 9), float64], Tensor[(42), float32]) {
  %1152 = cast(meta[relay.Constant][54] /* ty=Tensor[(30, 9), float64] */, dtype="float64") /* ty=Tensor[(30, 9), float64] */;
  %1153 = cast(%var_1242, dtype="float32") /* ty=Tensor[(42), float32] */;
  %1154 = reshape(%1152, newshape=[3, 10, 9]) /* ty=Tensor[(3, 10, 9), float64] */;
  %1155 = reshape(%1153, newshape=[42]) /* ty=Tensor[(42), float32] */;
  %1156 = @func_554(%1154, %1155) /* ty=(Tensor[(3, 10, 9), bool], Tensor[(1, 14, 3), float32], Tensor[(?, 14, 3), float32]) */;
  %1157 = @func_933() /* ty=Tensor[(15, 3, 5), bool] */;
  %1158 = %1156.2;
  (%1157, %1158, meta[relay.Constant][54] /* ty=Tensor[(30, 9), float64] */, %var_1242)
}

def @func_1498(%var_1495: Tensor[(11, 7, 13), uint64], %var_1496: Tensor[(42), float32], %var_1497: Tensor[(120), uint8]) -> (Tensor[(11, 7, 13), uint64], Tensor[(42), float32], Tensor[(42), float32], Tensor[(120), uint8], Tensor[(120), uint8]) {
  @func_1493(%var_1495, %var_1496, %var_1497) /* ty=(Tensor[(11, 7, 13), uint64], Tensor[(42), float32], Tensor[(42), float32], Tensor[(120), uint8], Tensor[(120), uint8]) */
}

def @func_6125() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  %1159 = @func_5920() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %1160 = @func_1899() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %1161 = %1159.2;
  %1162 = %1160.0;
  (%1161, %1162)
}

def @func_4606() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(91, 11), float64], Tensor[(15, 3, 5), bool]) {
  %1178 = fn () -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(91, 11), float64], Tensor[(15, 3, 5), bool]) {
    %1163 = @func_3968() /* ty=(Tensor[(15, 3, 5), bool],) */;
    %1164 = @func_633() /* ty=(Tensor[(15, 3, 5), bool],) */;
    %1165 = cast(meta[relay.Constant][55] /* ty=Tensor[(1001), uint64] */, dtype="uint64") /* ty=Tensor[(1001), uint64] */;
    %1166 = reshape(%1165, newshape=[91, 11]) /* ty=Tensor[(91, 11), uint64] */;
    %1167 = @func_3780(%1166) /* ty=(Tensor[(15, 3, 5), bool], Tensor[(42), float32], Tensor[(7, 66), float64], Tensor[(91, 11), uint64]) */;
    %1168 = %1167.3;
    %1169 = cast(meta[relay.Constant][55] /* ty=Tensor[(1001), uint64] */, dtype="float64") /* ty=Tensor[(1001), float64] */;
    %1170 = shape_of(%1168, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1171 = cast(%1168, dtype="float64") /* ty=Tensor[(91, 11), float64] */;
    %1172 = dyn.reshape(%1169, %1170, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %1173 = @func_633() /* ty=(Tensor[(15, 3, 5), bool],) */;
    %1174 = %1163.0;
    %1175 = %1164.0;
    %1176 = floor_mod(%1171, %1172) /* ty=Tensor[(91, 11), float64] */;
    %1177 = %1173.0;
    (%1174, %1175, %1176, %1177)
  };
  %1178() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(91, 11), float64], Tensor[(15, 3, 5), bool]) */
}

def @func_11028() -> (Tensor[(15, 3, 5), float64],) {
  @func_11026() /* ty=(Tensor[(15, 3, 5), float64],) */
}

def @func_3410() -> Tensor[(15, 3, 5), bool] {
  %1179 = @func_1947() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %1179.0
}

def @func_3783(%var_3781: Tensor[(91, 11), uint64]) -> (Tensor[(15, 3, 5), bool], Tensor[(42), float32], Tensor[(7, 66), float64], Tensor[(91, 11), uint64]) {
  @func_3780(%var_3781) /* ty=(Tensor[(15, 3, 5), bool], Tensor[(42), float32], Tensor[(7, 66), float64], Tensor[(91, 11), uint64]) */
}

def @func_3847(%var_3843: Tensor[(3, 14, 13), int16]) -> Tensor[(3, 14, 13), bool] {
  %1180 = cast(%var_3843, dtype="bool") /* ty=Tensor[(3, 14, 13), bool] */;
  %1181 = shape_of(meta[relay.Constant][56] /* ty=Tensor[(3, 14, 13), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1182 = cast(meta[relay.Constant][56] /* ty=Tensor[(3, 14, 13), int16] */, dtype="bool") /* ty=Tensor[(3, 14, 13), bool] */;
  %1183 = dyn.reshape(%1180, %1181, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%1182, %1183) /* ty=Tensor[(3, 14, 13), bool] */
}

def @func_3479(%var_3477: Tensor[(14, 4, 15), float32]) -> (Tensor[(2, 12, 5), bool], Tensor[(14, 4, 15), int8]) {
  @func_3476(%var_3477) /* ty=(Tensor[(2, 12, 5), bool], Tensor[(14, 4, 15), int8]) */
}

def @func_7509() -> (Tensor[(1, 14, 3), float64], Tensor[(15, 3, 5), float64]) {
  %1184 = @func_5258() /* ty=(Tensor[(1, 14, 3), float64],) */;
  %1185 = @func_4309() /* ty=(Tensor[(15, 3, 5), float64], Tensor[(15, 3, 5), bool]) */;
  %1186 = %1184.0;
  %1187 = %1185.0;
  (%1186, %1187)
}

def @func_14385() -> (Tensor[(15, 3, 5), bool], Tensor[(1344), float32], Tensor[(1344), float32]) {
  %1194 = fn () -> (Tensor[(15, 3, 5), bool], Tensor[(1344), float32], Tensor[(1344), float32]) {
    %1188 = @func_4234() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
    %1189 = cast(meta[relay.Constant][57] /* ty=Tensor[(1344), float32] */, dtype="float32") /* ty=Tensor[(1344), float32] */;
    %1190 = reshape(%1189, newshape=[1344]) /* ty=Tensor[(1344), float32] */;
    %1191 = @func_8947(%1190) /* ty=(Tensor[(15, 3, 5), bool], Tensor[(14, 12, 8), int32], Tensor[(1344), float32]) */;
    %1192 = %1188.1;
    %1193 = %1191.2;
    (%1192, %1193, meta[relay.Constant][57] /* ty=Tensor[(1344), float32] */)
  };
  %1194() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(1344), float32], Tensor[(1344), float32]) */
}

def @func_4833(%var_4831: Tensor[(8, 3, 12), int8], %var_4832: Tensor[(8, 3, 12), int8]) -> Tensor[(8, 3, 12), bool] {
  %1199 = fn (%var_4811: Tensor[(8, 3, 12), int8], %var_4812: Tensor[(8, 3, 12), int8]) -> Tensor[(8, 3, 12), bool] {
    %1195 = cast(%var_4812, dtype="bool") /* ty=Tensor[(8, 3, 12), bool] */;
    %1196 = shape_of(%var_4811, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1197 = cast(%var_4811, dtype="bool") /* ty=Tensor[(8, 3, 12), bool] */;
    %1198 = dyn.reshape(%1195, %1196, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    less_equal(%1197, %1198) /* ty=Tensor[(8, 3, 12), bool] */
  };
  %1199(%var_4831, %var_4832) /* ty=Tensor[(8, 3, 12), bool] */
}

def @func_14282(%var_14280: Tensor[(15, 330), float64], %var_14281: Tensor[(15, 330), float64]) -> (Tensor[(15, 330), bool], Tensor[(15, 330), uint16], Tensor[(11, 12, 14), bool], Tensor[(15, 330), uint16]) {
  %1214 = fn (%var_14242: Tensor[(15, 330), float64], %var_14274: Tensor[(15, 330), float64]) -> (Tensor[(15, 330), bool], Tensor[(15, 330), uint16], Tensor[(11, 12, 14), bool], Tensor[(15, 330), uint16]) {
    %1200 = @func_9958() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(6, 5, 11), float64], Tensor[(1, 330), float64]) */;
    %1201 = %1200.2;
    %1202 = cast(%1201, dtype="bool") /* ty=Tensor[(1, 330), bool] */;
    %1203 = cast(%var_14242, dtype="bool") /* ty=Tensor[(15, 330), bool] */;
    %1204 = cast(%var_14242, dtype="uint16") /* ty=Tensor[(15, 330), uint16] */;
    %1205 = cast(%1201, dtype="uint16") /* ty=Tensor[(1, 330), uint16] */;
    %1206 = cast(%var_14274, dtype="uint16") /* ty=Tensor[(15, 330), uint16] */;
    %1207 = shape_of(%var_14242, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1208 = cast(%var_14242, dtype="uint16") /* ty=Tensor[(15, 330), uint16] */;
    %1209 = dyn.reshape(%1206, %1207, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
    %1210 = logical_or(%1202, %1203) /* ty=Tensor[(15, 330), bool] */;
    %1211 = logical_xor(%1204, %1205) /* ty=Tensor[(15, 330), uint16] */;
    %1212 = @func_8237() /* ty=Tensor[(11, 12, 14), bool] */;
    %1213 = bitwise_and(%1208, %1209) /* ty=Tensor[(15, 330), uint16] */;
    (%1210, %1211, %1212, %1213)
  };
  %1214(%var_14280, %var_14281) /* ty=(Tensor[(15, 330), bool], Tensor[(15, 330), uint16], Tensor[(11, 12, 14), bool], Tensor[(15, 330), uint16]) */
}

def @func_2745() -> (Tensor[(15, 3, 5), bool],) {
  %1215 = @func_1570() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], Tensor[(120), uint8]) */;
  %1216 = %1215.0;
  (%1216,)
}

def @func_1764() -> (Tensor[(120), uint8], Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), float64]) {
  %1217 = @func_1129() /* ty=(Tensor[(2, 12, 5), bool], Tensor[(120), uint8], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %1218 = %1217.1;
  %1219 = cast(%1218, dtype="uint8") /* ty=Tensor[(120), uint8] */;
  %1220 = reshape(%1219, newshape=[120]) /* ty=Tensor[(120), uint8] */;
  %1221 = @func_1229(%1220) /* ty=(Tensor[(2, 12, 5), bool], Tensor[(120), uint8], Tensor[(15, 3, 5), uint16], Tensor[(2, 12, 5), bool], Tensor[(2, 12, 5), float64]) */;
  %1222 = @func_1684() /* ty=Tensor[(15, 3, 5), bool] */;
  %1223 = %1221.4;
  (%1218, %1222, %1223)
}

def @func_2572() -> Tensor[(42), float32] {
  %1224 = @func_2210() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(1, 14, 3), float64], Tensor[(42), float32]) */;
  %1224.2
}

def @func_12529(%var_12527: float64) -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], float64) {
  @func_12526(%var_12527) /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], float64) */
}

def @func_9055(%var_9044: Tensor[(15, 13, 6), float32], %var_9045: Tensor[(15, 13, 6), float32]) -> (Tensor[(15, 13, 6), float32], Tensor[(15, 3, 5), bool]) {
  %1225 = cast(%var_9045, dtype="float32") /* ty=Tensor[(15, 13, 6), float32] */;
  %1226 = shape_of(%var_9044, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1227 = cast(%var_9044, dtype="float32") /* ty=Tensor[(15, 13, 6), float32] */;
  %1228 = dyn.reshape(%1225, %1226, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1229 = @func_2491() /* ty=(Tensor[(2, 12, 5), float64], Tensor[(15, 3, 5), bool]) */;
  %1230 = floor_divide(%1227, %1228) /* ty=Tensor[(15, 13, 6), float32] */;
  %1231 = %1229.1;
  (%1230, %1231)
}

def @func_8950(%var_8948: Tensor[(1344), float32]) -> (Tensor[(15, 3, 5), bool], Tensor[(14, 12, 8), int32], Tensor[(1344), float32]) {
  @func_8947(%var_8948) /* ty=(Tensor[(15, 3, 5), bool], Tensor[(14, 12, 8), int32], Tensor[(1344), float32]) */
}

def @func_1311() -> (Tensor[(15, 3, 5), bool],) {
  @func_1309() /* ty=(Tensor[(15, 3, 5), bool],) */
}

def @func_1602() -> (Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], Tensor[(120), uint8]) {
  %1232 = @func_1309() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %1233 = cast(meta[relay.Constant][58] /* ty=Tensor[(120), uint8] */, dtype="uint8") /* ty=Tensor[(120), uint8] */;
  %1234 = reshape(%1233, newshape=[2, 12, 5]) /* ty=Tensor[(2, 12, 5), uint8] */;
  %1235 = %1232.0;
  %1236 = @func_501(%1234) /* ty=Tensor[(2, 12, 5), bool] */;
  (%1235, %1236, meta[relay.Constant][58] /* ty=Tensor[(120), uint8] */)
}

def @func_10293() -> (Tensor[(15, 3, 5), bool],) {
  %1237 = @func_1899() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %1238 = %1237.0;
  (%1238,)
}

def @func_10484() -> (Tensor[(2, 12, 5), uint16],) {
  @func_10482() /* ty=(Tensor[(2, 12, 5), uint16],) */
}

def @func_10154() -> Tensor[(15, 13, 6), float64] {
  %1239 = fn () -> Tensor[(15, 13, 6), float64] {
    @func_8698() /* ty=Tensor[(15, 13, 6), float64] */
  };
  %1239() /* ty=Tensor[(15, 13, 6), float64] */
}

def @func_2143() -> (Tensor[(15, 3, 5), bool],) {
  %1241 = fn () -> (Tensor[(15, 3, 5), bool],) {
    %1240 = @func_933() /* ty=Tensor[(15, 3, 5), bool] */;
    (%1240,)
  };
  %1241() /* ty=(Tensor[(15, 3, 5), bool],) */
}

def @func_12921() -> Tensor[(15, 3, 5), bool] {
  %1243 = fn () -> Tensor[(15, 3, 5), bool] {
    %1242 = @func_1309() /* ty=(Tensor[(15, 3, 5), bool],) */;
    %1242.0
  };
  %1243() /* ty=Tensor[(15, 3, 5), bool] */
}

def @func_14082() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  @func_14080() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */
}

def @func_12399() -> Tensor[(15, 3, 5), bool] {
  @func_12397() /* ty=Tensor[(15, 3, 5), bool] */
}

def @func_2341() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  %1246 = fn () -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
    %1244 = @func_1285() /* ty=Tensor[(15, 3, 5), bool] */;
    %1245 = @func_1684() /* ty=Tensor[(15, 3, 5), bool] */;
    (%1244, %1245)
  };
  %1246() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */
}

def @func_933() -> Tensor[(15, 3, 5), bool] {
  %1247 = @func_633() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %1247.0
}

def @func_2090() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float32], Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), float64]) {
  @func_2088() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float32], Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), float64]) */
}

def @func_6835(%var_6834: Tensor[(65, 5), uint16]) -> (Tensor[(15, 3, 5), bool], Tensor[(65, 5), uint16], Tensor[(5, 13, 5), float32], Tensor[(15, 3, 5), bool]) {
  %1257 = fn (%var_6791: Tensor[(65, 5), uint16]) -> (Tensor[(15, 3, 5), bool], Tensor[(65, 5), uint16], Tensor[(5, 13, 5), float32], Tensor[(15, 3, 5), bool]) {
    %1248 = @func_5713() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(42), float32], Tensor[(1001), uint64], Tensor[(42), float32], Tensor[(120), uint8]) */;
    %1249 = cast(%var_6791, dtype="uint16") /* ty=Tensor[(65, 5), uint16] */;
    %1250 = reshape(%1249, newshape=[5, 13, 5]) /* ty=Tensor[(5, 13, 5), uint16] */;
    %1251 = @func_5519(%1250) /* ty=Tensor[(5, 13, 5), uint16] */;
    %1252 = cast(%1251, dtype="float32") /* ty=Tensor[(5, 13, 5), float32] */;
    %1253 = @func_1361() /* ty=(Tensor[(15, 3, 5), bool],) */;
    %1254 = %1248.1;
    %1255 = atan(%1252) /* ty=Tensor[(5, 13, 5), float32] */;
    %1256 = %1253.0;
    (%1254, %var_6791, %1255, %1256)
  };
  %1257(%var_6834) /* ty=(Tensor[(15, 3, 5), bool], Tensor[(65, 5), uint16], Tensor[(5, 13, 5), float32], Tensor[(15, 3, 5), bool]) */
}

def @func_1247(%var_1245: Tensor[(42), float32]) -> (Tensor[(15, 3, 5), bool], Tensor[(?, 14, 3), float32], Tensor[(30, 9), float64], Tensor[(42), float32]) {
  @func_1244(%var_1245) /* ty=(Tensor[(15, 3, 5), bool], Tensor[(?, 14, 3), float32], Tensor[(30, 9), float64], Tensor[(42), float32]) */
}

def @func_6726(%var_6724: Tensor[(15, 3, 5), bool]) -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  @func_6723(%var_6724) /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */
}

def @func_3631() -> (Tensor[(15, 3, 5), bool],) {
  %1260 = fn () -> (Tensor[(15, 3, 5), bool],) {
    %1258 = @func_2340() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
    %1259 = %1258.1;
    (%1259,)
  };
  %1260() /* ty=(Tensor[(15, 3, 5), bool],) */
}

def @func_5146(%var_5065: int16, %var_5094: Tensor[(60, 2), uint8]) -> (Tensor[(4, 12, 7), int16], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(60, 2), float64], Tensor[(15, 3, 5), bool], Tensor[(42), float32]) {
  %1261 = cast(%var_5065, dtype="int16") /* ty=int16 */;
  %1262 = cast(meta[relay.Constant][59] /* ty=Tensor[(4, 12, 7), int16] */, dtype="int16") /* ty=Tensor[(4, 12, 7), int16] */;
  %1263 = @func_2412() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %1264 = cast(%var_5094, dtype="uint8") /* ty=Tensor[(60, 2), uint8] */;
  %1265 = reshape(%1264, newshape=[3, 40]) /* ty=Tensor[(3, 40), uint8] */;
  %1266 = @func_914(%1265) /* ty=(Tensor[(2, 12, 5), bool], Tensor[(3, 40), uint8], Tensor[(15, 3, 5), float64], Tensor[(15, 3, 5), bool]) */;
  %1267 = cast(%var_5094, dtype="float64") /* ty=Tensor[(60, 2), float64] */;
  %1268 = @func_2745() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %1269 = @func_3606() /* ty=(Tensor[(42), float32], Tensor[(15, 3, 5), bool]) */;
  %1270 = multiply(%1261, %1262) /* ty=Tensor[(4, 12, 7), int16] */;
  %1271 = %1263.0;
  %1272 = %1266.3;
  %1273 = log2(%1267) /* ty=Tensor[(60, 2), float64] */;
  %1274 = %1268.0;
  %1275 = %1269.0;
  (%1270, %1271, %1272, %1273, %1274, %1275)
}

def @func_6901() -> (Tensor[(15, 3, 5), float64],) {
  %1276 = @func_5015() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float64]) */;
  %1277 = %1276.1;
  (%1277,)
}

def @func_9041() -> Tensor[(2, 12, 5), int32] {
  %1278 = @func_6080() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), float64], Tensor[(15, 3, 5), bool]) */;
  %1279 = %1278.1;
  %1280 = cast(%1279, dtype="float64") /* ty=Tensor[(2, 12, 5), float64] */;
  %1281 = log(%1280) /* ty=Tensor[(2, 12, 5), float64] */;
  %1282 = cast(%1279, dtype="float32") /* ty=Tensor[(2, 12, 5), float32] */;
  %1283 = erf(%1282) /* ty=Tensor[(2, 12, 5), float32] */;
  %1284 = cast(%1283, dtype="int32") /* ty=Tensor[(2, 12, 5), int32] */;
  %1285 = shape_of(%1281, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1286 = cast(%1281, dtype="int32") /* ty=Tensor[(2, 12, 5), int32] */;
  %1287 = dyn.reshape(%1284, %1285, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  add(%1286, %1287) /* ty=Tensor[(2, 12, 5), int32] */
}

def @func_7408(%var_7407: Tensor[(120), uint8]) -> (Tensor[(15, 3, 5), bool], Tensor[(1, 14, 3), float64], Tensor[(120), uint8]) {
  %1294 = fn (%var_7402: Tensor[(120), uint8]) -> (Tensor[(15, 3, 5), bool], Tensor[(1, 14, 3), float64], Tensor[(120), uint8]) {
    %1288 = @func_2412() /* ty=(Tensor[(15, 3, 5), bool],) */;
    %1289 = cast(%var_7402, dtype="uint8") /* ty=Tensor[(120), uint8] */;
    %1290 = reshape(%1289, newshape=[6, 20]) /* ty=Tensor[(6, 20), uint8] */;
    %1291 = @func_6623(%1290) /* ty=(Tensor[(1, 14, 3), float64], Tensor[(2, 12, 5), bool], Tensor[(6, 20), uint8], Tensor[(15, 3, 5), bool]) */;
    %1292 = %1288.0;
    %1293 = %1291.0;
    (%1292, %1293, %var_7402)
  };
  %1294(%var_7407) /* ty=(Tensor[(15, 3, 5), bool], Tensor[(1, 14, 3), float64], Tensor[(120), uint8]) */
}

def @func_3850(%var_3848: Tensor[(3, 14, 13), int16]) -> Tensor[(3, 14, 13), bool] {
  @func_3847(%var_3848) /* ty=Tensor[(3, 14, 13), bool] */
}

def @func_10669() -> (Tensor[(15, 3, 5), bool],) {
  @func_10667() /* ty=(Tensor[(15, 3, 5), bool],) */
}

def @func_5259() -> (Tensor[(1, 14, 3), float64],) {
  %1297 = fn () -> (Tensor[(1, 14, 3), float64],) {
    %1295 = @func_4295() /* ty=(Tensor[(15, 3, 5), float32], Tensor[(1, 14, 3), float64], Tensor[(42), float32]) */;
    %1296 = %1295.1;
    (%1296,)
  };
  %1297() /* ty=(Tensor[(1, 14, 3), float64],) */
}

def @func_15167() -> (Tensor[(15, 3, 5), float64],) {
  %1298 = @func_9232() /* ty=Tensor[(15, 3, 5), float64] */;
  (%1298,)
}

def @func_13292() -> (Tensor[(2, 12, 5), uint16],) {
  %1299 = @func_10482() /* ty=(Tensor[(2, 12, 5), uint16],) */;
  %1300 = %1299.0;
  (%1300,)
}

def @func_14756() -> Tensor[(15, 3, 5), bool] {
  @func_14754() /* ty=Tensor[(15, 3, 5), bool] */
}

def @func_14793(%var_14791: Tensor[(3, 3, 14), float64]) -> (Tensor[(3, 3, 14), float64],) {
  @func_14790(%var_14791) /* ty=(Tensor[(3, 3, 14), float64],) */
}

def @func_1547(%var_1524: Tensor[(12, 3, 1), int16], %var_1525: Tensor[(12, 3, 13), int16]) -> (Tensor[(12, 3, 13), int16], Tensor[(120), uint8]) {
  %1301 = cast(%var_1524, dtype="int16") /* ty=Tensor[(12, 3, 1), int16] */;
  %1302 = cast(%var_1525, dtype="int16") /* ty=Tensor[(12, 3, 13), int16] */;
  %1303 = @func_1129() /* ty=(Tensor[(2, 12, 5), bool], Tensor[(120), uint8], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %1304 = left_shift(%1301, %1302) /* ty=Tensor[(12, 3, 13), int16] */;
  %1305 = %1303.1;
  (%1304, %1305)
}

def @func_1671(%var_1670: Tensor[(4, 5, 8), float64]) -> (Tensor[(4, 5, 8), float64],) {
  %1308 = fn (%var_1628: Tensor[(4, 5, 8), float64]) -> (Tensor[(4, 5, 8), float64],) {
    %1306 = cast(%var_1628, dtype="float64") /* ty=Tensor[(4, 5, 8), float64] */;
    %1307 = asin(%1306) /* ty=Tensor[(4, 5, 8), float64] */;
    (%1307,)
  };
  %1308(%var_1670) /* ty=(Tensor[(4, 5, 8), float64],) */
}

def @func_10413() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  %1314 = fn () -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
    %1309 = @func_5920() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
    %1310 = @func_4445() /* ty=(Tensor[(15, 3, 5), bool],) */;
    %1311 = %1309.1;
    %1312 = %1310.0;
    %1313 = @func_8164() /* ty=Tensor[(15, 3, 5), bool] */;
    (%1311, %1312, %1313)
  };
  %1314() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */
}

def @func_13398(%var_13383: Tensor[(12, 11, 1), float32]) -> (Tensor[(12, 11, 1), float32],) {
  %1315 = cast(%var_13383, dtype="float32") /* ty=Tensor[(12, 11, 1), float32] */;
  %1316 = sigmoid(%1315) /* ty=Tensor[(12, 11, 1), float32] */;
  (%1316,)
}

def @func_11391(%var_11389: Tensor[(1001), uint64]) -> (Tensor[(15, 3, 5), bool], Tensor[(42), float32], Tensor[(1001), uint64]) {
  @func_11388(%var_11389) /* ty=(Tensor[(15, 3, 5), bool], Tensor[(42), float32], Tensor[(1001), uint64]) */
}

def @func_5758() -> Tensor[(15, 3, 5), float32] {
  %1319 = fn () -> Tensor[(15, 3, 5), float32] {
    %1317 = @func_1285() /* ty=Tensor[(15, 3, 5), bool] */;
    %1318 = cast(%1317, dtype="float32") /* ty=Tensor[(15, 3, 5), float32] */;
    log(%1318) /* ty=Tensor[(15, 3, 5), float32] */
  };
  %1319() /* ty=Tensor[(15, 3, 5), float32] */
}

def @func_10143() -> Tensor[(15, 3, 5), bool] {
  %1320 = @func_1899() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %1320.0
}

def @func_15311() -> (Tensor[(15, 3, 5), float64],) {
  %1323 = fn () -> (Tensor[(15, 3, 5), float64],) {
    %1321 = @func_15167() /* ty=(Tensor[(15, 3, 5), float64],) */;
    %1322 = %1321.0;
    (%1322,)
  };
  %1323() /* ty=(Tensor[(15, 3, 5), float64],) */
}

def @func_10740() -> Tensor[(15, 3, 5), bool] {
  @func_10738() /* ty=Tensor[(15, 3, 5), bool] */
}

def @func_14895() -> Tensor[(15, 3, 5), bool] {
  @func_14893() /* ty=Tensor[(15, 3, 5), bool] */
}

def @func_6569() -> Tensor[(9, 14, 3), float64] {
  @func_6567() /* ty=Tensor[(9, 14, 3), float64] */
}

def @func_1901() -> (Tensor[(15, 3, 5), bool],) {
  @func_1899() /* ty=(Tensor[(15, 3, 5), bool],) */
}

def @func_5338() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  %1328 = fn () -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
    %1324 = @func_2088() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float32], Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), float64]) */;
    %1325 = @func_2491() /* ty=(Tensor[(2, 12, 5), float64], Tensor[(15, 3, 5), bool]) */;
    %1326 = %1324.0;
    %1327 = %1325.1;
    (%1326, %1327)
  };
  %1328() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */
}

def @func_12040() -> (Tensor[(2, 12, 5), int32], Tensor[(42), float32]) {
  @func_12038() /* ty=(Tensor[(2, 12, 5), int32], Tensor[(42), float32]) */
}

def @func_6626(%var_6624: Tensor[(6, 20), uint8]) -> (Tensor[(1, 14, 3), float64], Tensor[(2, 12, 5), bool], Tensor[(6, 20), uint8], Tensor[(15, 3, 5), bool]) {
  @func_6623(%var_6624) /* ty=(Tensor[(1, 14, 3), float64], Tensor[(2, 12, 5), bool], Tensor[(6, 20), uint8], Tensor[(15, 3, 5), bool]) */
}

def @func_3521() -> (Tensor[(15, 3, 5), bool],) {
  %1331 = fn () -> (Tensor[(15, 3, 5), bool],) {
    %1329 = @func_633() /* ty=(Tensor[(15, 3, 5), bool],) */;
    %1330 = %1329.0;
    (%1330,)
  };
  %1331() /* ty=(Tensor[(15, 3, 5), bool],) */
}

def @func_9043() -> Tensor[(2, 12, 5), int32] {
  @func_9041() /* ty=Tensor[(2, 12, 5), int32] */
}

def @func_4297() -> (Tensor[(15, 3, 5), float32], Tensor[(1, 14, 3), float64], Tensor[(42), float32]) {
  @func_4295() /* ty=(Tensor[(15, 3, 5), float32], Tensor[(1, 14, 3), float64], Tensor[(42), float32]) */
}

def @func_5017() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float64]) {
  @func_5015() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float64]) */
}

def @func_4447() -> (Tensor[(15, 3, 5), bool],) {
  @func_4445() /* ty=(Tensor[(15, 3, 5), bool],) */
}

def @func_14672() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  @func_14670() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */
}

def @func_14323() -> (Tensor[(2, 12, 5), int32], Tensor[(42), float32], Tensor[(120), uint8]) {
  @func_14321() /* ty=(Tensor[(2, 12, 5), int32], Tensor[(42), float32], Tensor[(120), uint8]) */
}

def @func_10039() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  @func_10037() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */
}

def @func_12197() -> (Tensor[(42), float32],) {
  %1332 = @func_11477() /* ty=(Tensor[(42), float32],) */;
  %1333 = %1332.0;
  (%1333,)
}

def @func_7868(%var_7866: int16) -> (Tensor[(42), float32], Tensor[(15, 3, 5), bool], Tensor[(6, 13, 1), float32], int16, Tensor[(78), int16]) {
  @func_7865(%var_7866) /* ty=(Tensor[(42), float32], Tensor[(15, 3, 5), bool], Tensor[(6, 13, 1), float32], int16, Tensor[(78), int16]) */
}

def @func_10112() -> Tensor[(15, 3, 5), bool] {
  %1335 = fn () -> Tensor[(15, 3, 5), bool] {
    %1334 = @func_5920() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
    %1334.2
  };
  %1335() /* ty=Tensor[(15, 3, 5), bool] */
}

def @func_3240() -> Tensor[(15, 3, 5), bool] {
  %1336 = @func_2774() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %1336.0
}

def @func_3329() -> (Tensor[(2, 12, 5), float64],) {
  @func_3327() /* ty=(Tensor[(2, 12, 5), float64],) */
}

def @func_1363() -> (Tensor[(15, 3, 5), bool],) {
  @func_1361() /* ty=(Tensor[(15, 3, 5), bool],) */
}

def @func_1285() -> Tensor[(15, 3, 5), bool] {
  @func_928() /* ty=Tensor[(15, 3, 5), bool] */
}

def @func_9650(%var_9637: Tensor[(1001), uint64]) -> (Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], Tensor[(60, 14), float32], Tensor[(120), uint8], Tensor[(1001), uint64], Tensor[(42), float32]) {
  %1337 = @func_1947() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %1338 = cast(meta[relay.Constant][60] /* ty=Tensor[(60, 14), float32] */, dtype="float32") /* ty=Tensor[(60, 14), float32] */;
  %1339 = reshape(%1338, newshape=[14, 4, 15]) /* ty=Tensor[(14, 4, 15), float32] */;
  %1340 = @func_3476(%1339) /* ty=(Tensor[(2, 12, 5), bool], Tensor[(14, 4, 15), int8]) */;
  %1341 = cast(%var_9637, dtype="uint64") /* ty=Tensor[(1001), uint64] */;
  %1342 = cast(meta[relay.Constant][61] /* ty=Tensor[(42), float32] */, dtype="float32") /* ty=Tensor[(42), float32] */;
  %1343 = %1340.0;
  %1344 = cast(%1343, dtype="uint8") /* ty=Tensor[(2, 12, 5), uint8] */;
  %1345 = reshape(%1341, newshape=[11, 7, 13]) /* ty=Tensor[(11, 7, 13), uint64] */;
  %1346 = reshape(%1342, newshape=[42]) /* ty=Tensor[(42), float32] */;
  %1347 = reshape(%1344, newshape=[120]) /* ty=Tensor[(120), uint8] */;
  %1348 = @func_1493(%1345, %1346, %1347) /* ty=(Tensor[(11, 7, 13), uint64], Tensor[(42), float32], Tensor[(42), float32], Tensor[(120), uint8], Tensor[(120), uint8]) */;
  %1349 = %1337.0;
  %1350 = %1348.3;
  (%1349, %1343, meta[relay.Constant][60] /* ty=Tensor[(60, 14), float32] */, %1350, %var_9637, meta[relay.Constant][61] /* ty=Tensor[(42), float32] */)
}

def @func_10213() -> Tensor[(15, 3, 5), bool] {
  @func_10211() /* ty=Tensor[(15, 3, 5), bool] */
}

def @func_2933(%var_2878: Tensor[(3, 40), uint8], %var_2915: Tensor[(468), int16]) -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(3, 40), uint8], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(1, 14, 3), float64], Tensor[(120), uint8], Tensor[(18, 2), int16], Tensor[(468), int16]) {
  %1351 = @func_1309() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %1352 = cast(%var_2878, dtype="uint8") /* ty=Tensor[(3, 40), uint8] */;
  %1353 = reshape(%1352, newshape=[120]) /* ty=Tensor[(120), uint8] */;
  %1354 = @func_1048(%1353) /* ty=(Tensor[(2, 12, 5), bool], Tensor[(120), uint8], Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], Tensor[(15, 3, 5), float32]) */;
  %1355 = @func_2289() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(1, 14, 3), float64], Tensor[(42), float32], Tensor[(1, 14, 3), float64]) */;
  %1356 = cast(meta[relay.Constant][62] /* ty=Tensor[(18, 2), int16] */, dtype="int16") /* ty=Tensor[(18, 2), int16] */;
  %1357 = cast(%var_2915, dtype="int16") /* ty=Tensor[(468), int16] */;
  %1358 = reshape(%1356, newshape=[12, 3, 1]) /* ty=Tensor[(12, 3, 1), int16] */;
  %1359 = reshape(%1357, newshape=[12, 3, 13]) /* ty=Tensor[(12, 3, 13), int16] */;
  %1360 = @func_1547(%1358, %1359) /* ty=(Tensor[(12, 3, 13), int16], Tensor[(120), uint8]) */;
  %1361 = %1351.0;
  %1362 = %1354.2;
  %1363 = @func_933() /* ty=Tensor[(15, 3, 5), bool] */;
  %1364 = @func_702() /* ty=Tensor[(15, 3, 5), bool] */;
  %1365 = %1355.3;
  %1366 = %1360.1;
  (%1361, %1362, %var_2878, %1363, %1364, %1365, %1366, meta[relay.Constant][62] /* ty=Tensor[(18, 2), int16] */, %var_2915)
}

def @func_1493(%var_1455: Tensor[(11, 7, 13), uint64], %var_1473: Tensor[(42), float32], %var_1491: Tensor[(120), uint8]) -> (Tensor[(11, 7, 13), uint64], Tensor[(42), float32], Tensor[(42), float32], Tensor[(120), uint8], Tensor[(120), uint8]) {
  %1367 = cast(meta[relay.Constant][63] /* ty=Tensor[(11, 7, 13), uint64] */, dtype="uint64") /* ty=Tensor[(11, 7, 13), uint64] */;
  %1368 = shape_of(%var_1455, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1369 = cast(%var_1455, dtype="uint64") /* ty=Tensor[(11, 7, 13), uint64] */;
  %1370 = dyn.reshape(%1367, %1368, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1371 = cast(%var_1473, dtype="float32") /* ty=Tensor[(42), float32] */;
  %1372 = reshape(%1371, newshape=[42]) /* ty=Tensor[(42), float32] */;
  %1373 = @func_1244(%1372) /* ty=(Tensor[(15, 3, 5), bool], Tensor[(?, 14, 3), float32], Tensor[(30, 9), float64], Tensor[(42), float32]) */;
  %1374 = cast(%var_1491, dtype="uint8") /* ty=Tensor[(120), uint8] */;
  %1375 = reshape(%1374, newshape=[120]) /* ty=Tensor[(120), uint8] */;
  %1376 = @func_1048(%1375) /* ty=(Tensor[(2, 12, 5), bool], Tensor[(120), uint8], Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], Tensor[(15, 3, 5), float32]) */;
  %1377 = bitwise_or(%1369, %1370) /* ty=Tensor[(11, 7, 13), uint64] */;
  %1378 = %1373.3;
  %1379 = %1376.1;
  (%1377, %1378, %var_1473, %1379, %var_1491)
}

def @func_12794() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  %1384 = fn () -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
    %1380 = @func_12582() /* ty=(Tensor[(2, 12, 5), bool], Tensor[(15, 3, 5), bool]) */;
    %1381 = @func_3520() /* ty=(Tensor[(15, 3, 5), bool],) */;
    %1382 = %1380.1;
    %1383 = %1381.0;
    (%1382, %1383)
  };
  %1384() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */
}

def @func_13239(%var_13238: Tensor[(1001), uint64]) -> (Tensor[(15, 3, 5), bool], Tensor[(60, 14), float32], Tensor[(1001), uint64]) {
  %1391 = fn (%var_13227: Tensor[(1001), uint64]) -> (Tensor[(15, 3, 5), bool], Tensor[(60, 14), float32], Tensor[(1001), uint64]) {
    %1385 = @func_9958() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(6, 5, 11), float64], Tensor[(1, 330), float64]) */;
    %1386 = cast(%var_13227, dtype="uint64") /* ty=Tensor[(1001), uint64] */;
    %1387 = reshape(%1386, newshape=[1001]) /* ty=Tensor[(1001), uint64] */;
    %1388 = @func_9650(%1387) /* ty=(Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], Tensor[(60, 14), float32], Tensor[(120), uint8], Tensor[(1001), uint64], Tensor[(42), float32]) */;
    %1389 = %1385.0;
    %1390 = %1388.2;
    (%1389, %1390, %var_13227)
  };
  %1391(%var_13238) /* ty=(Tensor[(15, 3, 5), bool], Tensor[(60, 14), float32], Tensor[(1001), uint64]) */
}

def @func_14080() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  %1392 = @func_11118() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(3, 6, 5), uint32], Tensor[(15, 6), uint32], Tensor[(15, 13, 6), float64]) */;
  %1393 = %1392.0;
  %1394 = @func_10738() /* ty=Tensor[(15, 3, 5), bool] */;
  (%1393, %1394)
}

def @func_8477() -> Tensor[(15, 3, 5), bool] {
  %1395 = @func_6346() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %1395.0
}

def @func_11354() -> Tensor[(15, 3, 5), bool] {
  %1397 = fn () -> Tensor[(15, 3, 5), bool] {
    %1396 = @func_5015() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float64]) */;
    %1396.0
  };
  %1397() /* ty=Tensor[(15, 3, 5), bool] */
}

def @func_3242() -> Tensor[(15, 3, 5), bool] {
  @func_3240() /* ty=Tensor[(15, 3, 5), bool] */
}

def @func_759() -> (Tensor[(15, 3, 5), bool],) {
  @func_757() /* ty=(Tensor[(15, 3, 5), bool],) */
}

def @func_11043() -> (Tensor[(15, 3, 5), bool],) {
  %1398 = @func_4699() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(1, 14, 3), float64]) */;
  %1399 = %1398.0;
  (%1399,)
}

def @func_14849() -> (Tensor[(120, 11), uint8], Tensor[(120, 11), float64], Tensor[(120, 11), bool], Tensor[(42), float32], Tensor[(15, 3, 5), bool]) {
  %1414 = fn () -> (Tensor[(120, 11), uint8], Tensor[(120, 11), float64], Tensor[(120, 11), bool], Tensor[(42), float32], Tensor[(15, 3, 5), bool]) {
    %1400 = @func_9899() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(120, 1), uint8], Tensor[(15, 3, 5), bool]) */;
    %1401 = %1400.2;
    %1402 = cast(%1401, dtype="uint8") /* ty=Tensor[(120, 1), uint8] */;
    %1403 = cast(meta[relay.Constant][64] /* ty=Tensor[(120, 11), uint8] */, dtype="uint8") /* ty=Tensor[(120, 11), uint8] */;
    %1404 = cast(meta[relay.Constant][64] /* ty=Tensor[(120, 11), uint8] */, dtype="float64") /* ty=Tensor[(120, 11), float64] */;
    %1405 = cast(%1401, dtype="float64") /* ty=Tensor[(120, 1), float64] */;
    %1406 = cast(meta[relay.Constant][64] /* ty=Tensor[(120, 11), uint8] */, dtype="bool") /* ty=Tensor[(120, 11), bool] */;
    %1407 = cast(%1401, dtype="bool") /* ty=Tensor[(120, 1), bool] */;
    %1408 = @func_12165() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], int16, int16, Tensor[(15, 3, 5), float32], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
    %1409 = bitwise_and(%1402, %1403) /* ty=Tensor[(120, 11), uint8] */;
    %1410 = divide(%1404, %1405) /* ty=Tensor[(120, 11), float64] */;
    %1411 = less_equal(%1406, %1407) /* ty=Tensor[(120, 11), bool] */;
    %1412 = @func_2572() /* ty=Tensor[(42), float32] */;
    %1413 = %1408.0;
    (%1409, %1410, %1411, %1412, %1413)
  };
  %1414() /* ty=(Tensor[(120, 11), uint8], Tensor[(120, 11), float64], Tensor[(120, 11), bool], Tensor[(42), float32], Tensor[(15, 3, 5), bool]) */
}

def @func_5429(%var_5427: Tensor[(9, 14, 3), float64]) -> (Tensor[(15, 3, 5), bool], Tensor[(9, 14, 3), int32], Tensor[(14, 4, 15), int8], Tensor[(840), float32]) {
  @func_5426(%var_5427) /* ty=(Tensor[(15, 3, 5), bool], Tensor[(9, 14, 3), int32], Tensor[(14, 4, 15), int8], Tensor[(840), float32]) */
}

def @func_14779() -> (Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), float64]) {
  %1415 = @func_11639() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %1416 = %1415.1;
  %1417 = @func_3092() /* ty=Tensor[(15, 3, 5), float64] */;
  (%1416, %1417)
}

def @func_11388(%var_11358: Tensor[(1001), uint64]) -> (Tensor[(15, 3, 5), bool], Tensor[(42), float32], Tensor[(1001), uint64]) {
  %1418 = @func_2412() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %1419 = cast(%var_11358, dtype="uint64") /* ty=Tensor[(1001), uint64] */;
  %1420 = reshape(%1419, newshape=[1001]) /* ty=Tensor[(1001), uint64] */;
  %1421 = @func_9650(%1420) /* ty=(Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool], Tensor[(60, 14), float32], Tensor[(120), uint8], Tensor[(1001), uint64], Tensor[(42), float32]) */;
  %1422 = %1418.0;
  %1423 = %1421.5;
  (%1422, %1423, %var_11358)
}

def @func_4310() -> (Tensor[(15, 3, 5), float64], Tensor[(15, 3, 5), bool]) {
  %1426 = fn () -> (Tensor[(15, 3, 5), float64], Tensor[(15, 3, 5), bool]) {
    %1424 = @func_3092() /* ty=Tensor[(15, 3, 5), float64] */;
    %1425 = @func_702() /* ty=Tensor[(15, 3, 5), bool] */;
    (%1424, %1425)
  };
  %1426() /* ty=(Tensor[(15, 3, 5), float64], Tensor[(15, 3, 5), bool]) */
}

def @func_7787(%var_7734: Tensor[(546), int16]) -> (Tensor[(15, 3, 5), bool], Tensor[(3, 14, 13), bool], Tensor[(546), int16], Tensor[(1, 14, 3), float64]) {
  %1427 = cast(%var_7734, dtype="int16") /* ty=Tensor[(546), int16] */;
  %1428 = reshape(%1427, newshape=[3, 14, 13]) /* ty=Tensor[(3, 14, 13), int16] */;
  %1429 = @func_4699() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(1, 14, 3), float64]) */;
  %1430 = @func_5439() /* ty=Tensor[(15, 3, 5), bool] */;
  %1431 = @func_3847(%1428) /* ty=Tensor[(3, 14, 13), bool] */;
  %1432 = %1429.1;
  (%1430, %1431, %var_7734, %1432)
}

def @func_5830(%var_5784: Tensor[(2, 12, 5), float64]) -> (Tensor[(2, 12, 5), float64], Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) {
  %1433 = @func_3327() /* ty=(Tensor[(2, 12, 5), float64],) */;
  %1434 = %1433.0;
  %1435 = cast(%var_5784, dtype="float64") /* ty=Tensor[(2, 12, 5), float64] */;
  %1436 = shape_of(%1434, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1437 = cast(%1434, dtype="float64") /* ty=Tensor[(2, 12, 5), float64] */;
  %1438 = dyn.reshape(%1435, %1436, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1439 = @func_2774() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
  %1440 = @func_2142() /* ty=(Tensor[(15, 3, 5), bool],) */;
  %1441 = power(%1437, %1438) /* ty=Tensor[(2, 12, 5), float64] */;
  %1442 = %1439.1;
  %1443 = %1440.0;
  (%1441, %1442, %1443)
}

def @func_8960() -> (Tensor[(15, 3, 5), bool],) {
  %1444 = @func_8680() /* ty=Tensor[(15, 3, 5), bool] */;
  (%1444,)
}

def @func_4396() -> (Tensor[(42), float32], Tensor[(15, 3, 5), bool]) {
  %1449 = fn () -> (Tensor[(42), float32], Tensor[(15, 3, 5), bool]) {
    %1445 = @func_3304() /* ty=(Tensor[(42), float32], Tensor[(15, 3, 5), bool], Tensor[(4, 5, 8), float64], Tensor[(160), float64]) */;
    %1446 = @func_2340() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool]) */;
    %1447 = %1445.0;
    %1448 = %1446.0;
    (%1447, %1448)
  };
  %1449() /* ty=(Tensor[(42), float32], Tensor[(15, 3, 5), bool]) */
}

def @func_7457() -> (Tensor[(120), uint8], Tensor[(15, 3, 5), bool]) {
  %1450 = @func_5713() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(42), float32], Tensor[(1001), uint64], Tensor[(42), float32], Tensor[(120), uint8]) */;
  %1451 = %1450.5;
  %1452 = @func_3240() /* ty=Tensor[(15, 3, 5), bool] */;
  (%1451, %1452)
}

def @func_12450() -> Tensor[(2, 12, 5), bool] {
  %1454 = fn () -> Tensor[(2, 12, 5), bool] {
    %1453 = @func_5511() /* ty=(Tensor[(15, 3, 5), bool], Tensor[(2, 12, 5), bool]) */;
    %1453.1
  };
  %1454() /* ty=Tensor[(2, 12, 5), bool] */
}

def @func_11912(%var_11910: Tensor[(2, 12, 5), bool], %var_11911: Tensor[(378), float64]) -> (Tensor[(2, 12, 5), float64], Tensor[(15, 3, 5), float32], Tensor[(2, 12, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(9, 14, 3), int32], Tensor[(378), float64]) {
  @func_11908(%var_11910, %var_11911) /* ty=(Tensor[(2, 12, 5), float64], Tensor[(15, 3, 5), float32], Tensor[(2, 12, 5), bool], Tensor[(15, 3, 5), bool], Tensor[(9, 14, 3), int32], Tensor[(378), float64]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen649/build/output.py", line 5414, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  79: TVMFuncCall
  78: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  77: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  76: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  75: tvm::transform::Pass::operator()(tvm::IRModule) const
  74: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  73: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  72: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  71: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  70: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  69: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [13:45:07] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int

